
16e22150e2eafabe6a69ad60408d46b3545c79ce93e73af0f3fafa0b8aa137ac.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	or     DWORD PTR ds:0x42c010,0x42b004
  401013:	push   edi
  401014:	adc    DWORD PTR ds:0x42c000,0x42b014
  40101e:	push   0x42e423
  401023:	dec    DWORD PTR ds:0x42a018
  401029:	xor    edi,edi
  40102b:	not    DWORD PTR ds:0x42901c
  401031:	inc    edi
  401032:	push   edi
  401033:	push   edi
  401034:	call   DWORD PTR ds:0x42e9c3
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42b01c,0x7587
  401046:	je     0x401075
  40104c:	lea    eax,[ebp-0x64]
  40104f:	not    DWORD PTR ds:0x42b004
  401055:	push   eax
  401056:	adc    DWORD PTR ds:0x42d00c,0x42d014
  401060:	call   DWORD PTR ds:0x42e98b
  401066:	mov    DWORD PTR ds:0x42a00c,0x7907
  401070:	jmp    0x4026aa
  401075:	sub    DWORD PTR ds:0x42a010,0x42a01c
  40107f:	push   esi
  401080:	mov    esi,DWORD PTR ds:0x42e9cf
  401086:	push   0x8
  401088:	sub    DWORD PTR ds:0x429004,0x42c000
  401092:	push   0x42e433
  401097:	sub    DWORD PTR ds:0x429000,0x1be5
  4010a1:	call   esi
  4010a3:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010ad:	test   eax,eax
  4010af:	mov    DWORD PTR ds:0x42b000,0x51df
  4010b9:	je     0x4010de
  4010bf:	lea    eax,[ebp-0x64]
  4010c2:	and    DWORD PTR ds:0x42d014,0x42a004
  4010cc:	push   eax
  4010cd:	inc    DWORD PTR ds:0x42d008
  4010d3:	call   DWORD PTR ds:0x42e98b
  4010d9:	jmp    0x4026a9
  4010de:	xor    DWORD PTR ds:0x42a008,0x429000
  4010e8:	push   ebx
  4010e9:	mov    ebx,DWORD PTR ds:0x42e99b
  4010ef:	add    DWORD PTR ds:0x429004,0x5c52
  4010f9:	push   0x42e443
  4010fe:	adc    DWORD PTR ds:0x42c014,0x42b014
  401108:	push   edi
  401109:	push   edi
  40110a:	and    DWORD PTR ds:0x429020,0x61d3
  401114:	call   ebx
  401116:	test   eax,eax
  401118:	mov    DWORD PTR ds:0x42b018,0x2d2c
  401122:	je     0x40115f
  401128:	sbb    DWORD PTR ds:0x42a010,0x429004
  401132:	lea    eax,[ebp-0x64]
  401135:	xor    DWORD PTR ds:0x42c000,0x429008
  40113f:	push   eax
  401140:	or     DWORD PTR ds:0x429000,0x4b22
  40114a:	call   DWORD PTR ds:0x42e98b
  401150:	mov    DWORD PTR ds:0x429004,0x6e7d
  40115a:	jmp    0x4026a8
  40115f:	push   0xc
  401161:	sbb    DWORD PTR ds:0x42d014,0x5298
  40116b:	push   0x42e467
  401170:	sbb    DWORD PTR ds:0x42c010,0x42c008
  40117a:	call   esi
  40117c:	dec    DWORD PTR ds:0x42d000
  401182:	test   eax,eax
  401184:	jne    0x401768
  40118a:	push   0x7
  40118c:	push   0x42e47b
  401191:	call   esi
  401193:	adc    DWORD PTR ds:0x429014,0x42900c
  40119d:	test   eax,eax
  40119f:	mov    DWORD PTR ds:0x42c000,0x2037
  4011a9:	jne    0x401768
  4011af:	push   0x8
  4011b1:	xor    DWORD PTR ds:0x42d010,0x429014
  4011bb:	push   0x42e48b
  4011c0:	and    DWORD PTR ds:0x42d010,0x7e73
  4011ca:	call   esi
  4011cc:	test   eax,eax
  4011ce:	mov    DWORD PTR ds:0x429014,0x43a5
  4011d8:	jne    0x401768
  4011de:	push   0x42e49b
  4011e3:	adc    DWORD PTR ds:0x429014,0x42b00c
  4011ed:	push   edi
  4011ee:	push   edi
  4011ef:	call   DWORD PTR ds:0x42e9c3
  4011f5:	xor    DWORD PTR ds:0x429008,0xc25
  4011ff:	test   eax,eax
  401201:	mov    DWORD PTR ds:0x42b004,0x1e9f
  40120b:	jne    0x401768
  401211:	sbb    DWORD PTR ds:0x42b008,0x42a01c
  40121b:	push   0x42e4ab
  401220:	push   edi
  401221:	sbb    DWORD PTR ds:0x42b000,0x42b018
  40122b:	push   edi
  40122c:	sbb    DWORD PTR ds:0x42a008,0x42c00c
  401236:	call   ebx
  401238:	adc    DWORD PTR ds:0x42a01c,0xefe
  401242:	test   eax,eax
  401244:	mov    DWORD PTR ds:0x42d014,0x5190
  40124e:	jne    0x401768
  401254:	sub    DWORD PTR ds:0x42b000,0x721d
  40125e:	push   0xc
  401260:	add    DWORD PTR ds:0x42d018,0x42c000
  40126a:	push   0x42e4cf
  40126f:	call   esi
  401271:	test   eax,eax
  401273:	mov    DWORD PTR ds:0x42a014,0x465b
  40127d:	jne    0x401768
  401283:	or     DWORD PTR ds:0x42d014,0x42900c
  40128d:	push   0x7
  40128f:	push   0x42e4e3
  401294:	xor    DWORD PTR ds:0x42c014,0x14b0
  40129e:	call   esi
  4012a0:	test   eax,eax
  4012a2:	mov    DWORD PTR ds:0x42a01c,0x4b6
  4012ac:	jne    0x401768
  4012b2:	push   0x8
  4012b4:	or     DWORD PTR ds:0x429028,0x429010
  4012be:	push   0x42e4f3
  4012c3:	sbb    DWORD PTR ds:0x42a010,0x429008
  4012cd:	call   esi
  4012cf:	test   eax,eax
  4012d1:	mov    DWORD PTR ds:0x42a00c,0x7915
  4012db:	jne    0x401768
  4012e1:	or     DWORD PTR ds:0x42b000,0xa15
  4012eb:	push   0x42e503
  4012f0:	push   edi
  4012f1:	sub    DWORD PTR ds:0x42901c,0x42c008
  4012fb:	push   edi
  4012fc:	xor    DWORD PTR ds:0x42a01c,0x42d010
  401306:	call   DWORD PTR ds:0x42e9c3
  40130c:	test   eax,eax
  40130e:	jne    0x401768
  401314:	sub    DWORD PTR ds:0x42d014,0x42a000
  40131e:	push   0x42e513
  401323:	adc    DWORD PTR ds:0x42b018,0x14c4
  40132d:	push   edi
  40132e:	xor    DWORD PTR ds:0x42c008,0x6706
  401338:	push   edi
  401339:	or     DWORD PTR ds:0x42a01c,0x6055
  401343:	call   ebx
  401345:	sub    DWORD PTR ds:0x429014,0x42b00c
  40134f:	test   eax,eax
  401351:	mov    DWORD PTR ds:0x42d00c,0x550a
  40135b:	jne    0x401768
  401361:	push   0xc
  401363:	push   0x42e537
  401368:	adc    DWORD PTR ds:0x42c00c,0x429018
  401372:	call   esi
  401374:	test   eax,eax
  401376:	mov    DWORD PTR ds:0x429024,0x758e
  401380:	jne    0x401768
  401386:	push   0x7
  401388:	adc    DWORD PTR ds:0x429010,0x1615
  401392:	push   0x42e54b
  401397:	sub    DWORD PTR ds:0x429008,0x42b01c
  4013a1:	call   esi
  4013a3:	adc    DWORD PTR ds:0x42c01c,0x7f54
  4013ad:	test   eax,eax
  4013af:	jne    0x401768
  4013b5:	or     DWORD PTR ds:0x429000,0x429008
  4013bf:	push   0x8
  4013c1:	sub    DWORD PTR ds:0x42a000,0x50c8
  4013cb:	push   0x42e55b
  4013d0:	call   esi
  4013d2:	xor    DWORD PTR ds:0x42a018,0x58f3
  4013dc:	test   eax,eax
  4013de:	mov    DWORD PTR ds:0x42a010,0x4d09
  4013e8:	jne    0x401768
  4013ee:	push   0x42e56b
  4013f3:	push   edi
  4013f4:	sbb    DWORD PTR ds:0x42c00c,0x429018
  4013fe:	push   edi
  4013ff:	call   DWORD PTR ds:0x42e9c3
  401405:	sbb    DWORD PTR ds:0x42d008,0x42d004
  40140f:	test   eax,eax
  401411:	mov    DWORD PTR ds:0x42a010,0xbaa
  40141b:	jne    0x401768
  401421:	push   0x42e57b
  401426:	push   edi
  401427:	push   edi
  401428:	call   ebx
  40142a:	sbb    DWORD PTR ds:0x42b000,0x429014
  401434:	test   eax,eax
  401436:	mov    DWORD PTR ds:0x42d008,0x1c53
  401440:	jne    0x401768
  401446:	adc    DWORD PTR ds:0x42a00c,0x429024
  401450:	push   0xc
  401452:	push   0x42e59f
  401457:	sbb    DWORD PTR ds:0x429028,0x2f15
  401461:	call   esi
  401463:	test   eax,eax
  401465:	mov    DWORD PTR ds:0x42d004,0x2bd4
  40146f:	jne    0x401768
  401475:	mov    DWORD PTR ds:0x42d014,0xc7e
  40147f:	push   0x7
  401481:	or     DWORD PTR ds:0x42b01c,0x629c
  40148b:	push   0x42e5b3
  401490:	call   esi
  401492:	xor    DWORD PTR ds:0x429020,0x42c014
  40149c:	test   eax,eax
  40149e:	mov    DWORD PTR ds:0x42b008,0x386
  4014a8:	jne    0x401768
  4014ae:	push   0x8
  4014b0:	push   0x42e5c3
  4014b5:	sub    DWORD PTR ds:0x429024,0x42a008
  4014bf:	call   esi
  4014c1:	sub    DWORD PTR ds:0x42b004,0x42c018
  4014cb:	test   eax,eax
  4014cd:	mov    DWORD PTR ds:0x42900c,0x6fc8
  4014d7:	jne    0x401768
  4014dd:	xor    DWORD PTR ds:0x42d010,0x42901c
  4014e7:	push   0x42e5d3
  4014ec:	and    DWORD PTR ds:0x42d014,0x50c
  4014f6:	push   edi
  4014f7:	push   edi
  4014f8:	sbb    DWORD PTR ds:0x42b000,0x3361
  401502:	call   DWORD PTR ds:0x42e9c3
  401508:	test   eax,eax
  40150a:	mov    DWORD PTR ds:0x42b008,0x5d56
  401514:	jne    0x401768
  40151a:	xor    DWORD PTR ds:0x42a000,0x4d69
  401524:	push   0x42e5e3
  401529:	and    DWORD PTR ds:0x429024,0x42a014
  401533:	push   edi
  401534:	or     DWORD PTR ds:0x42c004,0x3817
  40153e:	push   edi
  40153f:	add    DWORD PTR ds:0x429024,0x2571
  401549:	call   ebx
  40154b:	xor    DWORD PTR ds:0x429028,0x42b00c
  401555:	test   eax,eax
  401557:	mov    DWORD PTR ds:0x42b00c,0x17fe
  401561:	jne    0x401768
  401567:	mov    DWORD PTR ds:0x42c014,0x28c7
  401571:	push   0xc
  401573:	and    DWORD PTR ds:0x429024,0x5a57
  40157d:	push   0x42e607
  401582:	call   esi
  401584:	test   eax,eax
  401586:	mov    DWORD PTR ds:0x42b00c,0xc7e
  401590:	jne    0x401768
  401596:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015a0:	push   0x7
  4015a2:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015ac:	push   0x42e61b
  4015b1:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015bb:	call   esi
  4015bd:	xor    DWORD PTR ds:0x42c00c,0x55d5
  4015c7:	test   eax,eax
  4015c9:	jne    0x401768
  4015cf:	or     DWORD PTR ds:0x429008,0x62a0
  4015d9:	push   0x8
  4015db:	or     DWORD PTR ds:0x429020,0x42d018
  4015e5:	push   0x42e62b
  4015ea:	call   esi
  4015ec:	test   eax,eax
  4015ee:	mov    DWORD PTR ds:0x429010,0x43d8
  4015f8:	jne    0x401768
  4015fe:	push   0x42e63b
  401603:	sub    DWORD PTR ds:0x42a008,0x5452
  40160d:	push   edi
  40160e:	adc    DWORD PTR ds:0x42b004,0x3794
  401618:	push   edi
  401619:	add    DWORD PTR ds:0x42b018,0x429000
  401623:	call   DWORD PTR ds:0x42e9c3
  401629:	add    DWORD PTR ds:0x42b014,0x42c014
  401633:	test   eax,eax
  401635:	mov    DWORD PTR ds:0x42c010,0x9db
  40163f:	jne    0x401768
  401645:	add    DWORD PTR ds:0x42b01c,0x42c010
  40164f:	push   0x42e64b
  401654:	push   edi
  401655:	push   edi
  401656:	call   ebx
  401658:	test   eax,eax
  40165a:	jne    0x401768
  401660:	sub    DWORD PTR ds:0x42a010,0x42b00c
  40166a:	push   0xc
  40166c:	xor    DWORD PTR ds:0x42a000,0x46f8
  401676:	push   0x42e66f
  40167b:	sub    DWORD PTR ds:0x429028,0x1e37
  401685:	call   esi
  401687:	not    DWORD PTR ds:0x42b000
  40168d:	test   eax,eax
  40168f:	mov    DWORD PTR ds:0x42a010,0x1824
  401699:	jne    0x401768
  40169f:	push   0x7
  4016a1:	neg    DWORD PTR ds:0x42d004
  4016a7:	push   0x42e683
  4016ac:	call   esi
  4016ae:	xor    DWORD PTR ds:0x429020,0x5303
  4016b8:	test   eax,eax
  4016ba:	jne    0x401768
  4016c0:	sub    DWORD PTR ds:0x429014,0x42c01c
  4016ca:	push   0x8
  4016cc:	not    DWORD PTR ds:0x429000
  4016d2:	push   0x42e693
  4016d7:	or     DWORD PTR ds:0x42c01c,0x7461
  4016e1:	call   esi
  4016e3:	test   eax,eax
  4016e5:	jne    0x401768
  4016eb:	or     DWORD PTR ds:0x42b010,0x6614
  4016f5:	push   0x42e6a3
  4016fa:	push   edi
  4016fb:	and    DWORD PTR ds:0x42b01c,0x42a008
  401705:	push   edi
  401706:	call   DWORD PTR ds:0x42e9c3
  40170c:	sub    DWORD PTR ds:0x429010,0x42a018
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42b004,0x423f
  401722:	jne    0x401768
  401728:	push   0x42e6b3
  40172d:	and    DWORD PTR ds:0x42d014,0x5d3e
  401737:	push   edi
  401738:	push   edi
  401739:	call   ebx
  40173b:	sub    DWORD PTR ds:0x42a004,0x8003
  401745:	test   eax,eax
  401747:	jne    0x401768
  40174d:	push   0xc
  40174f:	push   0x42e6d7
  401754:	call   esi
  401756:	or     DWORD PTR ds:0x42a014,0x792e
  401760:	test   eax,eax
  401762:	je     0x401783
  401768:	add    DWORD PTR ds:0x42d004,0x429000
  401772:	xor    eax,eax
  401774:	mov    DWORD PTR ds:0x42c00c,0x1740
  40177e:	jmp    0x4026a8
  401783:	sub    DWORD PTR ds:0x42c01c,0x74ec
  40178d:	mov    DWORD PTR [ebp-0x10],0x0
  401794:	sub    edx,ecx
  401796:	mov    eax,DWORD PTR [ebp-0x34]
  401799:	adc    edx,DWORD PTR ds:0x42b004
  40179f:	mov    DWORD PTR [ebp-0x34],eax
  4017a2:	sub    edx,DWORD PTR ds:0x429024
  4017a8:	mov    ecx,0xf89c85b9
  4017ad:	xor    esi,esi
  4017af:	or     esi,DWORD PTR ds:0x42b018
  4017b5:	adc    DWORD PTR ds:0x429020,esi
  4017bb:	mov    DWORD PTR [ebp-0x8],ecx
  4017be:	mov    edx,DWORD PTR ds:0x42d004
  4017c4:	sbb    edx,DWORD PTR ds:0x42901c
  4017ca:	mov    DWORD PTR ds:0x42d004,edx
  4017d0:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4017d7:	add    esi,edx
  4017d9:	lea    eax,[ebp-0x3c]
  4017dc:	xor    edx,edx
  4017de:	mov    DWORD PTR [ebp-0x30],eax
  4017e1:	lea    eax,[ebp-0x44]
  4017e4:	mov    DWORD PTR ds:0x42b00c,0x18
  4017ee:	cmp    DWORD PTR ds:0x42b00c,0x0
  4017f5:	je     0x40184f
  4017fb:	cmp    DWORD PTR ds:0x42b00c,0x7
  401802:	jne    0x40181d
  401808:	push   0x42b010
  40180d:	push   0x42c014
  401812:	push   0x42d004
  401817:	call   DWORD PTR ds:0x42e993
  40181d:	cmp    DWORD PTR ds:0x42b00c,0x8
  401824:	jne    0x401837
  40182a:	mov    esi,DWORD PTR ds:0x42b00c
  401830:	dec    esi
  401831:	mov    DWORD PTR ds:0x42b00c,esi
  401837:	mov    esi,DWORD PTR ds:0x42b00c
  40183d:	dec    esi
  40183e:	mov    DWORD PTR ds:0x42b00c,esi
  401844:	jmp    0x4017ee
  401849:	adc    DWORD PTR ds:0x429000,ebx
  40184f:	mov    DWORD PTR [ebp-0x18],eax
  401852:	mov    eax,ds:0x42e313
  401857:	and    DWORD PTR ds:0x429004,0x0
  401861:	jmp    0x401873
  401866:	mov    edi,DWORD PTR ds:0x429004
  40186c:	inc    edi
  40186d:	mov    DWORD PTR ds:0x429004,edi
  401873:	cmp    DWORD PTR ds:0x429004,0x1c
  40187a:	jae    0x4018a6
  401880:	cmp    DWORD PTR ds:0x429004,0x22
  401887:	jne    0x40189b
  40188d:	push   0x0
  40188f:	push   DWORD PTR [ebp-0x20]
  401892:	push   DWORD PTR [ebp-0x10]
  401895:	call   DWORD PTR ds:0x42e997
  40189b:	jmp    0x401866
  4018a0:	adc    DWORD PTR ds:0x42c018,ebx
  4018a6:	mov    eax,DWORD PTR [eax+0x1c8]
  4018ac:	mov    DWORD PTR ds:0x42a010,0x15
  4018b6:	cmp    DWORD PTR ds:0x42a010,0x0
  4018bd:	je     0x401923
  4018c3:	cmp    DWORD PTR ds:0x42a010,0xa
  4018ca:	jne    0x4018f1
  4018d0:	push   DWORD PTR [ebp-0x10]
  4018d3:	push   0x85d6
  4018d8:	push   0x42c01c
  4018dd:	push   DWORD PTR [ebp-0x24]
  4018e0:	push   DWORD PTR [ebp-0x18]
  4018e3:	push   0x61a0
  4018e8:	push   DWORD PTR [ebp-0x18]
  4018eb:	call   DWORD PTR ds:0x42e99f
  4018f1:	cmp    DWORD PTR ds:0x42a010,0xb
  4018f8:	jne    0x40190b
  4018fe:	mov    esi,DWORD PTR ds:0x42a010
  401904:	dec    esi
  401905:	mov    DWORD PTR ds:0x42a010,esi
  40190b:	mov    esi,DWORD PTR ds:0x42a010
  401911:	dec    esi
  401912:	mov    DWORD PTR ds:0x42a010,esi
  401918:	jmp    0x4018b6
  40191d:	and    DWORD PTR ds:0x42b000,edx
  401923:	mov    eax,DWORD PTR [eax]
  401925:	xor    DWORD PTR ds:0x42c01c,0x42d014
  40192f:	mov    edx,DWORD PTR [ebp-0x18]
  401932:	or     esi,DWORD PTR ds:0x42d014
  401938:	mov    esi,0x7510899
  40193d:	xor    eax,esi
  40193f:	mov    edi,0x3272e0
  401944:	add    eax,edi
  401946:	mov    DWORD PTR [edx],eax
  401948:	mov    DWORD PTR ds:0x42900c,0x4148
  401952:	mov    eax,ds:0x42e7c3
  401957:	cmp    eax,0x312bc9f6
  40195c:	mov    DWORD PTR ds:0x429010,0x7018
  401966:	jne    0x401abf
  40196c:	adc    DWORD PTR ds:0x42a018,0x1f6
  401976:	mov    eax,DWORD PTR [ebp-0x8]
  401979:	and    DWORD PTR ds:0x42d010,0x0
  401983:	jmp    0x401995
  401988:	mov    ebx,DWORD PTR ds:0x42d010
  40198e:	inc    ebx
  40198f:	mov    DWORD PTR ds:0x42d010,ebx
  401995:	cmp    DWORD PTR ds:0x42d010,0x1a
  40199c:	jae    0x4019d3
  4019a2:	cmp    DWORD PTR ds:0x42d010,0x1f
  4019a9:	jne    0x4019c8
  4019af:	push   0x42b018
  4019b4:	push   DWORD PTR [ebp-0x18]
  4019b7:	push   0x42e127
  4019bc:	push   DWORD PTR [ebp-0x24]
  4019bf:	push   DWORD PTR [ebp-0x14]
  4019c2:	call   DWORD PTR ds:0x42e9a3
  4019c8:	jmp    0x401988
  4019cd:	and    ebx,DWORD PTR ds:0x429020
  4019d3:	mov    edx,DWORD PTR ds:0x42e313
  4019d9:	sbb    DWORD PTR ds:0x42b000,edi
  4019df:	mov    edx,DWORD PTR [edx+0x198]
  4019e5:	inc    ebx
  4019e6:	xor    eax,esi
  4019e8:	movzx  ebx,WORD PTR ds:0x42b01c
  4019ef:	or     DWORD PTR ds:0x429014,ebx
  4019f5:	add    eax,edi
  4019f7:	sub    DWORD PTR ds:0x42b008,edx
  4019fd:	mov    DWORD PTR [edx],eax
  4019ff:	add    ebx,0x6ca
  401a05:	mov    eax,DWORD PTR [ebp-0x8]
  401a08:	mov    DWORD PTR ds:0x429008,0x1c
  401a12:	cmp    DWORD PTR ds:0x429008,0x0
  401a19:	je     0x401a65
  401a1f:	cmp    DWORD PTR ds:0x429008,0x9
  401a26:	jne    0x401a37
  401a2c:	push   0x42d004
  401a31:	call   DWORD PTR ds:0x42e9ab
  401a37:	cmp    DWORD PTR ds:0x429008,0xa
  401a3e:	jne    0x401a51
  401a44:	mov    ebx,DWORD PTR ds:0x429008
  401a4a:	dec    ebx
  401a4b:	mov    DWORD PTR ds:0x429008,ebx
  401a51:	xor    ebx,ebx
  401a53:	add    ebx,DWORD PTR ds:0x429008
  401a59:	dec    ebx
  401a5a:	mov    DWORD PTR ds:0x429008,ebx
  401a60:	jmp    0x401a12
  401a65:	xor    eax,esi
  401a67:	mov    DWORD PTR ds:0x42a010,0x13
  401a71:	cmp    DWORD PTR ds:0x42a010,0x0
  401a78:	je     0x401ab2
  401a7e:	cmp    DWORD PTR ds:0x42a010,0x23
  401a85:	jne    0x401a9e
  401a8b:	push   DWORD PTR [ebp-0xc]
  401a8e:	push   0x0
  401a90:	push   0x429028
  401a95:	push   DWORD PTR [ebp-0x1c]
  401a98:	call   DWORD PTR ds:0x42e9af
  401a9e:	mov    ebx,DWORD PTR ds:0x42a010
  401aa4:	dec    ebx
  401aa5:	mov    DWORD PTR ds:0x42a010,ebx
  401aab:	jmp    0x401a71
  401ab0:	not    ebx
  401ab2:	add    eax,edi
  401ab4:	xor    DWORD PTR ds:0x42900c,ecx
  401aba:	mov    ds:0x42e7c3,eax
  401abf:	xor    DWORD PTR ds:0x42c010,0x7580
  401ac9:	mov    eax,ds:0x42e313
  401ace:	and    DWORD PTR ds:0x42d018,0x0
  401ad8:	mov    ebx,DWORD PTR ds:0x42d018
  401ade:	inc    ebx
  401adf:	mov    DWORD PTR ds:0x42d018,ebx
  401ae5:	cmp    DWORD PTR ds:0x42d018,0x4
  401aec:	jne    0x401af8
  401af2:	call   DWORD PTR ds:0x42e9b3
  401af8:	cmp    DWORD PTR ds:0x42d018,0x3
  401aff:	jne    0x401b12
  401b05:	mov    ebx,DWORD PTR ds:0x42d018
  401b0b:	inc    ebx
  401b0c:	mov    DWORD PTR ds:0x42d018,ebx
  401b12:	cmp    DWORD PTR ds:0x42d018,0x1f
  401b19:	jb     0x401ad8
  401b1f:	add    DWORD PTR ds:0x42a000,0x4980
  401b29:	mov    eax,DWORD PTR [eax+0x18c]
  401b2f:	mov    eax,DWORD PTR [eax]
  401b31:	mov    DWORD PTR [ebp-0x7c],eax
  401b34:	or     DWORD PTR ds:0x42c014,ebx
  401b3a:	mov    ebx,0xf89c85bd
  401b3f:	mov    DWORD PTR [ebp-0x10],ebx
  401b42:	mov    DWORD PTR [ebp-0x10],ebx
  401b45:	add    eax,0x7960
  401b4a:	mov    DWORD PTR [ebp-0x10],ebx
  401b4d:	or     eax,DWORD PTR ds:0x42c000
  401b53:	mov    DWORD PTR [ebp-0x18],ecx
  401b56:	mov    DWORD PTR ds:0x429000,0x1d
  401b60:	cmp    DWORD PTR ds:0x429000,0x0
  401b67:	je     0x401c18
  401b6d:	cmp    DWORD PTR ds:0x429000,0xf
  401b74:	jne    0x401b9a
  401b7a:	push   DWORD PTR [ebp-0x18]
  401b7d:	push   0x429020
  401b82:	push   0x22ca
  401b87:	push   0x6383
  401b8c:	push   DWORD PTR [ebp-0x18]
  401b8f:	push   0x7f4f
  401b94:	call   DWORD PTR ds:0x42e9b7
  401b9a:	cmp    DWORD PTR ds:0x429000,0x10
  401ba1:	jne    0x401bb2
  401ba7:	mov    eax,ds:0x429000
  401bac:	dec    eax
  401bad:	mov    ds:0x429000,eax
  401bb2:	mov    eax,ds:0x429000
  401bb7:	dec    eax
  401bb8:	mov    ds:0x429000,eax
  401bbd:	jmp    0x401b60
  401bc2:	and    DWORD PTR ds:0x42a000,0x0
  401bcc:	xor    eax,eax
  401bce:	add    eax,DWORD PTR ds:0x42a000
  401bd4:	inc    eax
  401bd5:	mov    ds:0x42a000,eax
  401bda:	cmp    DWORD PTR ds:0x42a000,0xd
  401be1:	jne    0x401bed
  401be7:	call   DWORD PTR ds:0x42e9bb
  401bed:	cmp    DWORD PTR ds:0x42a000,0xc
  401bf4:	jne    0x401c05
  401bfa:	mov    eax,ds:0x42a000
  401bff:	inc    eax
  401c00:	mov    ds:0x42a000,eax
  401c05:	cmp    DWORD PTR ds:0x42a000,0x18
  401c0c:	jb     0x401bcc
  401c12:	or     DWORD PTR ds:0x42c008,ebx
  401c18:	mov    DWORD PTR [ebp-0x10],ebx
  401c1b:	xor    DWORD PTR ds:0x42c000,edx
  401c21:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  401c28:	mov    eax,DWORD PTR [ebp-0x8]
  401c2b:	xor    eax,esi
  401c2d:	or     DWORD PTR ds:0x42d000,0x4414
  401c37:	add    eax,edi
  401c39:	mov    DWORD PTR ds:0x429018,0x61ad
  401c43:	jmp    0x401d03
  401c48:	and    DWORD PTR ds:0x42b018,0x0
  401c52:	xor    ecx,ecx
  401c54:	add    ecx,DWORD PTR ds:0x42b018
  401c5a:	inc    ecx
  401c5b:	mov    DWORD PTR ds:0x42b018,ecx
  401c61:	cmp    DWORD PTR ds:0x42b018,0x29
  401c68:	jne    0x401c81
  401c6e:	push   DWORD PTR [ebp-0x24]
  401c71:	push   0x42c018
  401c76:	push   0x8c2e
  401c7b:	call   DWORD PTR ds:0x42e9bf
  401c81:	cmp    DWORD PTR ds:0x42b018,0x19
  401c88:	jb     0x401c52
  401c8e:	mov    eax,DWORD PTR [ebp-0xc]
  401c91:	adc    ecx,DWORD PTR ds:0x42b000
  401c97:	mov    ecx,DWORD PTR [ebp-0x1c]
  401c9a:	xor    eax,esi
  401c9c:	lea    eax,[eax+ecx*1+0x3272e0]
  401ca3:	push   eax
  401ca4:	mov    eax,DWORD PTR [ebp-0x18]
  401ca7:	or     DWORD PTR ds:0x42c01c,0x6aa9
  401cb1:	xor    eax,esi
  401cb3:	add    DWORD PTR ds:0x42d014,0x21f
  401cbd:	lea    eax,[ebp+eax*1+0x3272e8]
  401cc4:	or     DWORD PTR ds:0x42d004,0x505e
  401cce:	push   eax
  401ccf:	adc    DWORD PTR ds:0x42c01c,ecx
  401cd5:	mov    eax,ds:0x42e313
  401cda:	push   DWORD PTR [eax+0x1bc]
  401ce0:	sbb    DWORD PTR ds:0x42d004,0x7640
  401cea:	call   0x4026bd
  401cef:	xor    eax,0x743a
  401cf4:	mov    eax,DWORD PTR [ebp-0xc]
  401cf7:	mov    ecx,DWORD PTR [ebp-0x1c]
  401cfa:	xor    eax,esi
  401cfc:	lea    eax,[ecx+eax*1+0x3272e0]
  401d03:	mov    ecx,DWORD PTR [ebp-0xc]
  401d06:	not    edx
  401d08:	mov    edx,DWORD PTR [ebp-0xc]
  401d0b:	sbb    DWORD PTR ds:0x42c008,0x6696
  401d15:	xor    edx,esi
  401d17:	xor    ecx,esi
  401d19:	sub    DWORD PTR ds:0x42c014,0x5039
  401d23:	add    ecx,edx
  401d25:	mov    edx,DWORD PTR [ebp-0xc]
  401d28:	xor    edx,esi
  401d2a:	mov    DWORD PTR ds:0x42d004,0x46d7
  401d34:	lea    ecx,[ecx+edx*1+0x9758a0]
  401d3b:	mov    DWORD PTR [ebp-0x1c],eax
  401d3e:	cmp    eax,ecx
  401d40:	mov    DWORD PTR ds:0x42c01c,0x3624
  401d4a:	jbe    0x401c48
  401d50:	mov    DWORD PTR ds:0x42a018,0x1f
  401d5a:	cmp    DWORD PTR ds:0x42a018,0x0
  401d61:	je     0x401db7
  401d67:	cmp    DWORD PTR ds:0x42a018,0xc
  401d6e:	jne    0x401d89
  401d74:	push   0x42e127
  401d79:	push   0x42e139
  401d7e:	push   0x400000
  401d83:	call   DWORD PTR ds:0x42e9c7
  401d89:	cmp    DWORD PTR ds:0x42a018,0xd
  401d90:	jne    0x401da1
  401d96:	mov    eax,ds:0x42a018
  401d9b:	dec    eax
  401d9c:	mov    ds:0x42a018,eax
  401da1:	mov    eax,ds:0x42a018
  401da6:	dec    eax
  401da7:	mov    ds:0x42a018,eax
  401dac:	jmp    0x401d5a
  401db1:	sbb    ecx,0x5e3
  401db7:	mov    eax,DWORD PTR [ebp+0xc]
  401dba:	dec    ecx
  401dbb:	mov    ds:0x42e197,eax
  401dc0:	mov    DWORD PTR ds:0x42c010,0x5070
  401dca:	mov    eax,DWORD PTR [ebp+0x10]
  401dcd:	and    DWORD PTR ds:0x42b000,0x0
  401dd7:	mov    ecx,DWORD PTR ds:0x42b000
  401ddd:	inc    ecx
  401dde:	mov    DWORD PTR ds:0x42b000,ecx
  401de4:	cmp    DWORD PTR ds:0x42b000,0x22
  401deb:	jne    0x401dfc
  401df1:	push   0x42e000
  401df6:	call   DWORD PTR ds:0x42e9cb
  401dfc:	cmp    DWORD PTR ds:0x42b000,0x18
  401e03:	jb     0x401dd7
  401e09:	mov    ds:0x42e3eb,eax
  401e0e:	mov    eax,ds:0x42e197
  401e13:	add    DWORD PTR ds:0x42a010,ebx
  401e19:	mov    ecx,DWORD PTR [ebp-0x30]
  401e1c:	and    DWORD PTR ds:0x42900c,0x4f3f
  401e26:	sub    eax,edi
  401e28:	xor    DWORD PTR ds:0x42a018,0x42a01c
  401e32:	xor    eax,esi
  401e34:	mov    DWORD PTR [ecx],eax
  401e36:	movzx  eax,BYTE PTR ds:0x42900c
  401e3d:	mov    eax,DWORD PTR [ebp-0x34]
  401e40:	cmp    eax,0xf89c85b9
  401e45:	mov    DWORD PTR ds:0x42901c,0x22d7
  401e4f:	jne    0x402106
  401e55:	lea    eax,[ebp-0x40]
  401e58:	mov    DWORD PTR [ebp-0x9c],eax
  401e5e:	or     DWORD PTR ds:0x429028,0x42a008
  401e68:	lea    eax,[ebp+0x4]
  401e6b:	add    DWORD PTR ds:0x42a014,0x42c008
  401e75:	mov    DWORD PTR [ebp-0x40],eax
  401e78:	mov    eax,DWORD PTR [ebp-0x40]
  401e7b:	test   eax,eax
  401e7d:	mov    DWORD PTR ds:0x42b000,0x1a3e
  401e87:	je     0x40268d
  401e8d:	xor    ecx,0x3b66
  401e93:	mov    eax,DWORD PTR [ebp-0x24]
  401e96:	and    DWORD PTR ds:0x429028,0x0
  401ea0:	jmp    0x401eb2
  401ea5:	mov    ecx,DWORD PTR ds:0x429028
  401eab:	inc    ecx
  401eac:	mov    DWORD PTR ds:0x429028,ecx
  401eb2:	cmp    DWORD PTR ds:0x429028,0x14
  401eb9:	jae    0x401ef8
  401ebf:	cmp    DWORD PTR ds:0x429028,0x7
  401ec6:	jne    0x401ed7
  401ecc:	push   0x42a018
  401ed1:	call   DWORD PTR ds:0x42e9d3
  401ed7:	cmp    DWORD PTR ds:0x429028,0x6
  401ede:	jne    0x401ef3
  401ee4:	xor    ecx,ecx
  401ee6:	add    ecx,DWORD PTR ds:0x429028
  401eec:	inc    ecx
  401eed:	mov    DWORD PTR ds:0x429028,ecx
  401ef3:	jmp    0x401ea5
  401ef8:	mov    eax,DWORD PTR [ebp-0xc]
  401efb:	mov    DWORD PTR ds:0x42c018,0x16
  401f05:	cmp    DWORD PTR ds:0x42c018,0x0
  401f0c:	je     0x401f44
  401f12:	cmp    DWORD PTR ds:0x42c018,0x20
  401f19:	jne    0x401f34
  401f1f:	push   0x42a010
  401f24:	push   0x42b014
  401f29:	push   0x42d004
  401f2e:	call   DWORD PTR ds:0x42e993
  401f34:	mov    eax,ds:0x42c018
  401f39:	dec    eax
  401f3a:	mov    ds:0x42c018,eax
  401f3f:	jmp    0x401f05
  401f44:	mov    eax,DWORD PTR [ebp-0x8]
  401f47:	add    DWORD PTR ds:0x42d014,0x2c68
  401f51:	mov    DWORD PTR [ebp+0xc],eax
  401f54:	mov    eax,eax
  401f56:	mov    eax,ds:0x42e313
  401f5b:	movzx  ecx,BYTE PTR ds:0x42900c
  401f62:	and    DWORD PTR ds:0x42d014,ecx
  401f68:	mov    eax,DWORD PTR [eax+0x1c8]
  401f6e:	not    DWORD PTR ds:0x429024
  401f74:	mov    eax,DWORD PTR [eax]
  401f76:	cdq    
  401f77:	and    DWORD PTR ds:0x42a00c,0x0
  401f81:	jmp    0x401f95
  401f86:	xor    ebx,ebx
  401f88:	xor    ebx,DWORD PTR ds:0x42a00c
  401f8e:	inc    ebx
  401f8f:	mov    DWORD PTR ds:0x42a00c,ebx
  401f95:	cmp    DWORD PTR ds:0x42a00c,0x10
  401f9c:	jae    0x401fe4
  401fa2:	cmp    DWORD PTR ds:0x42a00c,0x8
  401fa9:	jne    0x401fbf
  401faf:	push   0x0
  401fb1:	push   DWORD PTR [ebp-0x18]
  401fb4:	push   0x4e1d
  401fb9:	call   DWORD PTR ds:0x42e997
  401fbf:	cmp    DWORD PTR ds:0x42a00c,0x7
  401fc6:	jne    0x401fd9
  401fcc:	mov    ebx,DWORD PTR ds:0x42a00c
  401fd2:	inc    ebx
  401fd3:	mov    DWORD PTR ds:0x42a00c,ebx
  401fd9:	jmp    0x401f86
  401fde:	and    ecx,0x6703
  401fe4:	mov    ebx,eax
  401fe6:	add    eax,DWORD PTR ds:0x429000
  401fec:	mov    eax,0xfabdbee9
  401ff1:	sbb    ecx,DWORD PTR ds:0x42c000
  401ff7:	add    ebx,eax
  401ff9:	adc    edx,0xffffffff
  401ffc:	mov    ecx,DWORD PTR ds:0x42d004
  402002:	adc    DWORD PTR ds:0x42a008,ecx
  402008:	and    DWORD PTR [ebp-0x10],0x0
  40200c:	add    ecx,0x4d2b
  402012:	xor    edx,0x0
  402015:	mov    DWORD PTR [ebp-0x6c],edx
  402018:	mov    edx,DWORD PTR [ebp+0xc]
  40201b:	mov    DWORD PTR ds:0x42c004,0x11
  402025:	cmp    DWORD PTR ds:0x42c004,0x0
  40202c:	je     0x40207c
  402032:	cmp    DWORD PTR ds:0x42c004,0x1d
  402039:	jne    0x40205c
  40203f:	push   DWORD PTR [ebp-0x10]
  402042:	push   DWORD PTR [ebp-0x24]
  402045:	push   0x429014
  40204a:	push   DWORD PTR [ebp-0x24]
  40204d:	push   DWORD PTR [ebp-0x28]
  402050:	push   DWORD PTR [ebp-0x24]
  402053:	push   DWORD PTR [ebp-0x1c]
  402056:	call   DWORD PTR ds:0x42e99f
  40205c:	mov    ecx,DWORD PTR ds:0x42c004
  402062:	dec    ecx
  402063:	mov    DWORD PTR ds:0x42c004,ecx
  402069:	jmp    0x402025
  40206e:	xor    ecx,ecx
  402070:	add    ecx,DWORD PTR ds:0x42c014
  402076:	and    DWORD PTR ds:0x42b004,ecx
  40207c:	mov    DWORD PTR [ebp-0x14],edx
  40207f:	mov    ecx,0x8a29a12b
  402084:	xor    ebx,ecx
  402086:	add    DWORD PTR [ebp-0x14],eax
  402089:	mov    edx,DWORD PTR [ebp-0x14]
  40208c:	adc    DWORD PTR [ebp-0x10],0xffffffff
  402090:	xor    edx,ecx
  402092:	mov    DWORD PTR [ebp-0x58],edx
  402095:	mov    edx,DWORD PTR [ebp-0x10]
  402098:	xor    edx,0x0
  40209b:	mov    DWORD PTR [ebp-0x54],edx
  40209e:	cmp    DWORD PTR [ebp-0x58],ebx
  4020a1:	jne    0x4020b3
  4020a7:	mov    edx,DWORD PTR [ebp-0x6c]
  4020aa:	cmp    DWORD PTR [ebp-0x54],edx
  4020ad:	je     0x4020e2
  4020b3:	mov    edx,DWORD PTR ds:0x42e313
  4020b9:	mov    edx,DWORD PTR [edx+0x1c0]
  4020bf:	mov    edx,DWORD PTR [edx]
  4020c1:	xor    ebx,ebx
  4020c3:	add    edx,eax
  4020c5:	adc    ebx,0xffffffff
  4020c8:	xor    edx,ecx
  4020ca:	xor    ebx,0x0
  4020cd:	cmp    edx,0x70941fc1
  4020d3:	jne    0x40268d
  4020d9:	cmp    ebx,0xffffffff
  4020dc:	jne    0x40268d
  4020e2:	mov    edx,DWORD PTR ds:0x42e38f
  4020e8:	mov    ebx,DWORD PTR ds:0x42e397
  4020ee:	xor    edx,ebx
  4020f0:	mov    DWORD PTR ds:0x42e38f,edx
  4020f6:	mov    ebx,DWORD PTR ds:0x42e38f
  4020fc:	mov    edx,DWORD PTR [ebp-0x40]
  4020ff:	add    DWORD PTR [edx],ebx
  402101:	jmp    0x40264e
  402106:	mov    eax,DWORD PTR [ebp-0x3c]
  402109:	cmp    eax,0xf89c85b8
  40210e:	je     0x40216b
  402114:	mov    eax,DWORD PTR [ebp-0x8]
  402117:	mov    ecx,DWORD PTR [ebp-0x44]
  40211a:	xor    eax,esi
  40211c:	add    eax,edi
  40211e:	cmp    eax,ecx
  402120:	je     0x40216b
  402126:	mov    eax,ds:0x42e313
  40212b:	mov    eax,DWORD PTR [eax+0x194]
  402131:	mov    ecx,DWORD PTR [eax]
  402133:	mov    eax,DWORD PTR [ecx+0x3c]
  402136:	push   DWORD PTR ds:0x42e3eb
  40213c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  402140:	push   DWORD PTR ds:0x42e197
  402146:	add    eax,ecx
  402148:	mov    ecx,DWORD PTR ds:0x42e313
  40214e:	mov    ecx,DWORD PTR [ecx+0x194]
  402154:	push   DWORD PTR [ecx]
  402156:	call   eax
  402158:	mov    ecx,DWORD PTR ds:0x42e313
  40215e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402164:	mov    DWORD PTR [ecx],eax
  402166:	jmp    0x40268d
  40216b:	mov    eax,DWORD PTR [ebp-0x8]
  40216e:	mov    ecx,DWORD PTR [ebp-0x7c]
  402171:	xor    eax,esi
  402173:	add    eax,edi
  402175:	cmp    eax,ecx
  402177:	jne    0x402548
  40217d:	mov    eax,DWORD PTR [ebp-0x8]
  402180:	mov    ecx,DWORD PTR ds:0x42e313
  402186:	mov    ecx,DWORD PTR [ecx+0x198]
  40218c:	xor    eax,esi
  40218e:	add    eax,edi
  402190:	cmp    eax,DWORD PTR [ecx]
  402192:	jne    0x4021b1
  402198:	mov    eax,DWORD PTR [ebp-0x8]
  40219b:	push   0xf89c85b9
  4021a0:	xor    eax,esi
  4021a2:	add    eax,edi
  4021a4:	push   eax
  4021a5:	push   ebx
  4021a6:	push   DWORD PTR [ebp-0xc]
  4021a9:	push   DWORD PTR [ebp-0x8]
  4021ac:	call   0x409ed5
  4021b1:	mov    eax,DWORD PTR [ebp-0xc]
  4021b4:	mov    DWORD PTR [ebp-0x48],eax
  4021b7:	mov    eax,DWORD PTR [ebp-0x8]
  4021ba:	mov    DWORD PTR [ebp-0x1c],eax
  4021bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4021c0:	xor    eax,esi
  4021c2:	add    eax,edi
  4021c4:	mov    DWORD PTR [ebp+0x10],eax
  4021c7:	mov    eax,ds:0x42e193
  4021cc:	mov    eax,DWORD PTR [eax]
  4021ce:	mov    DWORD PTR [ebp+0x10],eax
  4021d1:	mov    eax,ds:0x42e39b
  4021d6:	mov    eax,DWORD PTR [eax]
  4021d8:	mov    DWORD PTR [ebp-0x18],eax
  4021db:	mov    DWORD PTR [ebp+0xc],0xf89c87b9
  4021e2:	mov    eax,DWORD PTR [ebp+0xc]
  4021e5:	xor    eax,esi
  4021e7:	add    eax,edi
  4021e9:	mov    DWORD PTR [ebp+0xc],eax
  4021ec:	mov    eax,ds:0x42e313
  4021f1:	mov    DWORD PTR [ebp+0xc],eax
  4021f4:	mov    eax,DWORD PTR [ebp+0x10]
  4021f7:	mov    DWORD PTR [ebp+0xc],eax
  4021fa:	mov    eax,DWORD PTR [ebp+0xc]
  4021fd:	push   0x4
  4021ff:	pop    ecx
  402200:	sub    ecx,eax
  402202:	add    ecx,DWORD PTR [ebp-0x18]
  402205:	mov    DWORD PTR [ebp-0x30],0xf89c85f9
  40220c:	mov    DWORD PTR [ebp+0x10],ecx
  40220f:	mov    DWORD PTR [ebp-0xe4],ebx
  402215:	mov    eax,DWORD PTR [ebp+0xc]
  402218:	mov    DWORD PTR [ebp-0xe0],eax
  40221e:	mov    eax,DWORD PTR [ebp+0x10]
  402221:	mov    DWORD PTR [ebp-0xdc],eax
  402227:	mov    eax,DWORD PTR [ebp-0x30]
  40222a:	xor    eax,esi
  40222c:	add    eax,edi
  40222e:	mov    DWORD PTR [ebp-0xd8],eax
  402234:	lea    eax,[ebp-0x88]
  40223a:	mov    DWORD PTR [ebp-0xd4],eax
  402240:	mov    eax,DWORD PTR [ebp-0xe4]
  402246:	xor    eax,esi
  402248:	add    eax,edi
  40224a:	mov    DWORD PTR [ebp-0xe4],eax
  402250:	lea    eax,[ebp-0xe4]
  402256:	push   eax
  402257:	mov    eax,DWORD PTR [ebp-0x48]
  40225a:	xor    eax,esi
  40225c:	add    eax,edi
  40225e:	push   eax
  40225f:	mov    eax,ds:0x42e333
  402264:	push   0x42e289
  402269:	push   DWORD PTR [eax]
  40226b:	call   0x402992
  402270:	mov    eax,DWORD PTR [ebp+0xc]
  402273:	mov    ecx,DWORD PTR [ebp+0x10]
  402276:	mov    DWORD PTR [ebp-0x84],ecx
  40227c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40227f:	xor    ecx,esi
  402281:	mov    DWORD PTR [ebp-0x18],eax
  402284:	add    ecx,edi
  402286:	jmp    0x4024e9
  40228b:	lea    edx,[ecx+eax*1]
  40228e:	mov    DWORD PTR [ebp+0x10],edx
  402291:	mov    edx,DWORD PTR [ebp-0x84]
  402297:	sub    edx,ecx
  402299:	mov    DWORD PTR [ebp+0xc],edx
  40229c:	mov    edx,DWORD PTR [ebp+0xc]
  40229f:	mov    DWORD PTR [ebp-0x4c],edx
  4022a2:	mov    edx,DWORD PTR [ebp+0x10]
  4022a5:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  4022ac:	mov    DWORD PTR [ebp-0x6c],edx
  4022af:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  4022b6:	mov    edx,DWORD PTR [ebp-0x50]
  4022b9:	xor    edx,esi
  4022bb:	add    edx,edi
  4022bd:	mov    DWORD PTR [ebp+0x10],edx
  4022c0:	mov    edx,DWORD PTR [ebp-0x50]
  4022c3:	xor    edx,esi
  4022c5:	add    edx,edi
  4022c7:	mov    DWORD PTR [ebp+0xc],edx
  4022ca:	mov    DWORD PTR [ebp-0x68],0xf89c85d9
  4022d1:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  4022d8:	mov    edx,DWORD PTR [ebp-0x50]
  4022db:	mov    ebx,DWORD PTR [ebp-0x4c]
  4022de:	xor    edx,esi
  4022e0:	add    edx,edi
  4022e2:	cmp    ebx,edx
  4022e4:	je     0x4024dd
  4022ea:	mov    eax,DWORD PTR [ebp-0x20]
  4022ed:	xor    eax,esi
  4022ef:	mov    edx,0xffcd8d20
  4022f4:	sub    edx,eax
  4022f6:	add    edx,DWORD PTR [ebp-0x4c]
  4022f9:	mov    eax,DWORD PTR [ebp-0x20]
  4022fc:	mov    ebx,DWORD PTR [ebp+0x10]
  4022ff:	xor    eax,esi
  402301:	add    eax,edi
  402303:	imul   eax,ebx
  402306:	cmp    eax,edx
  402308:	ja     0x4024da
  40230e:	mov    edx,DWORD PTR [ebp+0x10]
  402311:	mov    eax,DWORD PTR [ebp-0x4c]
  402314:	mov    ebx,DWORD PTR [ebp-0x68]
  402317:	sub    eax,edx
  402319:	xor    ebx,esi
  40231b:	xor    edx,edx
  40231d:	add    ebx,edi
  40231f:	div    ebx
  402321:	mov    DWORD PTR [ebp+0xc],eax
  402324:	mov    eax,DWORD PTR [ebp-0x74]
  402327:	mov    edx,DWORD PTR [ebp+0xc]
  40232a:	xor    eax,esi
  40232c:	add    eax,edi
  40232e:	cmp    edx,eax
  402330:	jbe    0x402340
  402336:	mov    eax,DWORD PTR [ebp-0x74]
  402339:	xor    eax,esi
  40233b:	add    eax,edi
  40233d:	mov    DWORD PTR [ebp+0xc],eax
  402340:	mov    eax,DWORD PTR [ebp-0x68]
  402343:	mov    edx,DWORD PTR [ebp+0xc]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	imul   eax,edx
  40234d:	mov    DWORD PTR [ebp+0xc],eax
  402350:	mov    eax,DWORD PTR [ebp-0x50]
  402353:	mov    edx,DWORD PTR [ebp+0xc]
  402356:	xor    eax,esi
  402358:	add    eax,edi
  40235a:	cmp    edx,eax
  40235c:	je     0x4024c3
  402362:	mov    eax,DWORD PTR [ebp+0xc]
  402365:	mov    DWORD PTR [ebp-0x34],eax
  402368:	mov    eax,DWORD PTR [ebp+0x10]
  40236b:	add    eax,DWORD PTR [ebp-0x6c]
  40236e:	mov    DWORD PTR [ebp-0x30],0xf89c85b9
  402375:	mov    DWORD PTR [ebp-0x28],eax
  402378:	mov    eax,0xf89c85b8
  40237d:	mov    DWORD PTR [ebp-0x5c],eax
  402380:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  402387:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  40238e:	mov    DWORD PTR [ebp-0x38],eax
  402391:	mov    eax,DWORD PTR [ebp-0x30]
  402394:	xor    eax,esi
  402396:	add    eax,edi
  402398:	jmp    0x40247f
  40239d:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4023a4:	mov    DWORD PTR [ebp-0x80],0xf89c85ad
  4023ab:	mov    eax,DWORD PTR [ebp-0x38]
  4023ae:	mov    edx,DWORD PTR [ebp+0xc]
  4023b1:	xor    eax,esi
  4023b3:	add    eax,edi
  4023b5:	imul   eax,edx
  4023b8:	mov    edx,DWORD PTR [ebp-0x28]
  4023bb:	mov    al,BYTE PTR [eax+edx*1]
  4023be:	mov    BYTE PTR [ebp-0x1],al
  4023c1:	mov    eax,DWORD PTR [ebp-0x38]
  4023c4:	mov    edx,DWORD PTR [ebp+0xc]
  4023c7:	xor    eax,esi
  4023c9:	add    eax,edi
  4023cb:	imul   eax,edx
  4023ce:	mov    edx,DWORD PTR [ebp-0x54]
  4023d1:	xor    edx,esi
  4023d3:	add    eax,edx
  4023d5:	mov    edx,DWORD PTR [ebp-0x28]
  4023d8:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  4023e0:	mov    edx,DWORD PTR [ebp-0x78]
  4023e3:	xor    edx,esi
  4023e5:	lea    eax,[edx+eax*1+0x3272e0]
  4023ec:	movzx  edx,BYTE PTR [ebp-0x1]
  4023f0:	xor    edx,eax
  4023f2:	mov    BYTE PTR [ebp-0x1],dl
  4023f5:	mov    al,BYTE PTR [ebp-0x1]
  4023f8:	mov    edx,DWORD PTR [ebp-0x38]
  4023fb:	mov    ebx,DWORD PTR [ebp+0xc]
  4023fe:	xor    edx,esi
  402400:	add    edx,edi
  402402:	imul   edx,ebx
  402405:	mov    ebx,DWORD PTR [ebp-0x28]
  402408:	mov    BYTE PTR [edx+ebx*1],al
  40240b:	mov    eax,DWORD PTR [ebp-0x38]
  40240e:	mov    edx,DWORD PTR [ebp+0xc]
  402411:	xor    eax,esi
  402413:	add    eax,edi
  402415:	imul   eax,edx
  402418:	mov    edx,DWORD PTR [ebp-0x28]
  40241b:	mov    al,BYTE PTR [eax+edx*1]
  40241e:	mov    BYTE PTR [ebp-0x1],al
  402421:	mov    eax,DWORD PTR [ebp-0x38]
  402424:	mov    edx,DWORD PTR [ebp+0xc]
  402427:	xor    eax,esi
  402429:	add    eax,edi
  40242b:	imul   eax,edx
  40242e:	mov    edx,DWORD PTR [ebp-0x5c]
  402431:	xor    edx,esi
  402433:	add    eax,edx
  402435:	mov    edx,DWORD PTR [ebp-0x28]
  402438:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  402440:	mov    edx,DWORD PTR [ebp-0x80]
  402443:	xor    edx,esi
  402445:	lea    eax,[edx+eax*1+0x3272e0]
  40244c:	movzx  edx,BYTE PTR [ebp-0x1]
  402450:	xor    edx,eax
  402452:	mov    BYTE PTR [ebp-0x1],dl
  402455:	mov    al,BYTE PTR [ebp-0x1]
  402458:	mov    edx,DWORD PTR [ebp-0x38]
  40245b:	mov    ebx,DWORD PTR [ebp+0xc]
  40245e:	xor    edx,esi
  402460:	add    edx,edi
  402462:	imul   edx,ebx
  402465:	mov    ebx,DWORD PTR [ebp-0x28]
  402468:	mov    BYTE PTR [edx+ebx*1],al
  40246b:	mov    eax,DWORD PTR [ebp-0x10]
  40246e:	mov    edx,DWORD PTR [ebp-0x5c]
  402471:	xor    eax,esi
  402473:	xor    edx,esi
  402475:	add    eax,edi
  402477:	add    edx,edi
  402479:	imul   eax,edx
  40247c:	add    eax,DWORD PTR [ebp+0xc]
  40247f:	mov    DWORD PTR [ebp+0xc],eax
  402482:	mov    eax,DWORD PTR [ebp+0xc]
  402485:	mov    edx,DWORD PTR [ebp-0x34]
  402488:	cmp    edx,eax
  40248a:	jb     0x40239d
  402490:	mov    eax,DWORD PTR [ebp-0x5c]
  402493:	mov    edx,DWORD PTR [ebp-0x34]
  402496:	xor    eax,esi
  402498:	add    eax,edi
  40249a:	imul   eax,edx
  40249d:	mov    edx,DWORD PTR [ebp-0x30]
  4024a0:	xor    edx,esi
  4024a2:	add    edx,edi
  4024a4:	or     eax,edx
  4024a6:	mov    edx,DWORD PTR [ebp-0x20]
  4024a9:	xor    edx,esi
  4024ab:	add    eax,edx
  4024ad:	mov    edx,DWORD PTR [ebp-0x20]
  4024b0:	xor    edx,esi
  4024b2:	add    eax,edx
  4024b4:	mov    edx,DWORD PTR [ebp+0x10]
  4024b7:	lea    eax,[eax+edx*1+0x64e5c0]
  4024be:	jmp    0x4024d2
  4024c3:	mov    eax,DWORD PTR [ebp-0x20]
  4024c6:	mov    edx,DWORD PTR [ebp+0x10]
  4024c9:	xor    eax,esi
  4024cb:	lea    eax,[eax+edx*1+0x3272e0]
  4024d2:	mov    DWORD PTR [ebp+0x10],eax
  4024d5:	jmp    0x4022ea
  4024da:	mov    eax,DWORD PTR [ebp-0x18]
  4024dd:	mov    edx,DWORD PTR [ebp-0x48]
  4024e0:	xor    edx,esi
  4024e2:	lea    ecx,[ecx+edx*1+0x3272e0]
  4024e9:	lea    edx,[ecx-0x3272e0]
  4024ef:	xor    edx,esi
  4024f1:	cmp    edx,0xf89c95b9
  4024f7:	jne    0x40228b
  4024fd:	mov    ecx,DWORD PTR [ebp-0x1c]
  402500:	mov    edx,DWORD PTR [ebp-0x48]
  402503:	mov    ebx,DWORD PTR [ebp-0x1c]
  402506:	xor    edx,esi
  402508:	mov    dl,BYTE PTR [edx+eax*1+0x3272e0]
  40250f:	xor    ecx,esi
  402511:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  402518:	xor    ebx,esi
  40251a:	mov    BYTE PTR [ebx+eax*1+0x3272e0],dl
  402521:	mov    edx,DWORD PTR [ebp-0x48]
  402524:	xor    edx,esi
  402526:	mov    BYTE PTR [edx+eax*1+0x3272e0],cl
  40252d:	mov    eax,DWORD PTR [ebp-0x48]
  402530:	mov    eax,DWORD PTR [ebp-0x8]
  402533:	xor    eax,esi
  402535:	add    eax,edi
  402537:	mov    ds:0x42e397,eax
  40253c:	mov    eax,DWORD PTR [ebp-0x8]
  40253f:	xor    eax,esi
  402541:	add    eax,edi
  402543:	mov    ds:0x42e38f,eax
  402548:	lea    eax,[ebp-0x2c]
  40254b:	mov    DWORD PTR [ebp-0x90],eax
  402551:	lea    eax,[ebp+0x4]
  402554:	mov    DWORD PTR [ebp-0x2c],eax
  402557:	mov    eax,DWORD PTR [ebp-0x2c]
  40255a:	test   eax,eax
  40255c:	je     0x40268d
  402562:	mov    DWORD PTR [ebp-0xa0],0xf152c30
  40256c:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  402576:	mov    DWORD PTR [ebp-0x8c],0x373fc21
  402580:	mov    DWORD PTR [ebp-0x94],0x72670a11
  40258a:	call   0x4053bb
  40258f:	mov    eax,DWORD PTR [ebp-0x24]
  402592:	mov    eax,DWORD PTR [ebp-0xc]
  402595:	mov    eax,DWORD PTR [ebp-0x8]
  402598:	mov    DWORD PTR [ebp+0xc],eax
  40259b:	mov    eax,eax
  40259d:	mov    eax,ds:0x42e313
  4025a2:	mov    eax,DWORD PTR [eax+0x1c8]
  4025a8:	mov    eax,DWORD PTR [eax]
  4025aa:	cdq    
  4025ab:	mov    ebx,eax
  4025ad:	mov    eax,0xfabdbee9
  4025b2:	add    ebx,eax
  4025b4:	adc    edx,0xffffffff
  4025b7:	and    DWORD PTR [ebp-0x10],0x0
  4025bb:	xor    edx,0x0
  4025be:	mov    DWORD PTR [ebp-0x6c],edx
  4025c1:	mov    edx,DWORD PTR [ebp+0xc]
  4025c4:	mov    DWORD PTR [ebp-0x14],edx
  4025c7:	mov    ecx,0x8a29a12b
  4025cc:	xor    ebx,ecx
  4025ce:	add    DWORD PTR [ebp-0x14],eax
  4025d1:	mov    edx,DWORD PTR [ebp-0x14]
  4025d4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025d8:	xor    edx,ecx
  4025da:	mov    DWORD PTR [ebp-0x58],edx
  4025dd:	mov    edx,DWORD PTR [ebp-0x10]
  4025e0:	xor    edx,0x0
  4025e3:	mov    DWORD PTR [ebp-0x54],edx
  4025e6:	cmp    DWORD PTR [ebp-0x58],ebx
  4025e9:	jne    0x4025fb
  4025ef:	mov    edx,DWORD PTR [ebp-0x6c]
  4025f2:	cmp    DWORD PTR [ebp-0x54],edx
  4025f5:	je     0x40262a
  4025fb:	mov    edx,DWORD PTR ds:0x42e313
  402601:	mov    edx,DWORD PTR [edx+0x1c0]
  402607:	mov    edx,DWORD PTR [edx]
  402609:	xor    ebx,ebx
  40260b:	add    edx,eax
  40260d:	adc    ebx,0xffffffff
  402610:	xor    edx,ecx
  402612:	xor    ebx,0x0
  402615:	cmp    edx,0x70941fc1
  40261b:	jne    0x40268d
  402621:	cmp    ebx,0xffffffff
  402624:	jne    0x40268d
  40262a:	mov    edx,DWORD PTR ds:0x42e38f
  402630:	mov    ebx,DWORD PTR ds:0x42e397
  402636:	xor    edx,ebx
  402638:	mov    DWORD PTR ds:0x42e38f,edx
  40263e:	mov    edx,DWORD PTR [ebp-0x2c]
  402641:	mov    ebx,DWORD PTR ds:0x42e38f
  402647:	add    ebx,DWORD PTR [edx]
  402649:	mov    edx,DWORD PTR [ebp-0x2c]
  40264c:	mov    DWORD PTR [edx],ebx
  40264e:	mov    edx,DWORD PTR [ebp+0xc]
  402651:	xor    esi,edx
  402653:	mov    edx,DWORD PTR ds:0x42e38f
  402659:	add    esi,edi
  40265b:	xor    ebx,ebx
  40265d:	add    esi,eax
  40265f:	adc    ebx,0xffffffff
  402662:	xor    edi,edi
  402664:	xor    esi,ecx
  402666:	xor    ebx,0x0
  402669:	add    edx,eax
  40266b:	adc    edi,0xffffffff
  40266e:	xor    edx,ecx
  402670:	xor    edi,0x0
  402673:	cmp    edx,esi
  402675:	jne    0x40268d
  40267b:	cmp    edi,ebx
  40267d:	jne    0x40268d
  402683:	mov    eax,ds:0x42e38f
  402688:	mov    ds:0x42e397,eax
  40268d:	mov    eax,ds:0x42e313
  402692:	push   0x4
  402694:	add    eax,0x1cc
  402699:	push   eax
  40269a:	lea    eax,[ebp-0x24]
  40269d:	push   eax
  40269e:	call   0x4026bd
  4026a3:	mov    eax,DWORD PTR [ebp-0x24]
  4026a6:	mov    eax,DWORD PTR [eax]
  4026a8:	pop    ebx
  4026a9:	pop    esi
  4026aa:	pop    edi
  4026ab:	leave  
  4026ac:	ret    0xc
  4026af:	xor    eax,eax
  4026b1:	sub    DWORD PTR ds:0x429010,0x42b004
  4026bb:	inc    eax
  4026bc:	ret    
  4026bd:	push   ebp
  4026be:	mov    ebp,esp
  4026c0:	sub    esp,0x10
  4026c3:	mov    eax,0xf89c85b9
  4026c8:	and    DWORD PTR ds:0x42b01c,0x0
  4026d2:	jmp    0x4026e4
  4026d7:	mov    edx,DWORD PTR ds:0x42b01c
  4026dd:	inc    edx
  4026de:	mov    DWORD PTR ds:0x42b01c,edx
  4026e4:	cmp    DWORD PTR ds:0x42b01c,0x17
  4026eb:	jae    0x402746
  4026f1:	cmp    DWORD PTR ds:0x42b01c,0x9
  4026f8:	jne    0x40271b
  4026fe:	push   0x42a010
  402703:	push   DWORD PTR [ebp-0x20]
  402706:	push   0x42e111
  40270b:	push   0x54f4
  402710:	push   0x3b26
  402715:	call   DWORD PTR ds:0x42e9a3
  40271b:	cmp    DWORD PTR ds:0x42b01c,0x8
  402722:	jne    0x402735
  402728:	mov    edx,DWORD PTR ds:0x42b01c
  40272e:	inc    edx
  40272f:	mov    DWORD PTR ds:0x42b01c,edx
  402735:	jmp    0x4026d7
  40273a:	mov    edx,DWORD PTR ds:0x42c000
  402740:	or     DWORD PTR ds:0x429018,edx
  402746:	mov    DWORD PTR [ebp-0x4],eax
  402749:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  402750:	mov    ecx,DWORD PTR [ebp-0x4]
  402753:	xor    edx,0x6f97
  402759:	push   esi
  40275a:	adc    esi,esi
  40275c:	mov    edx,0x7510899
  402761:	sbb    DWORD PTR ds:0x429008,0x3023
  40276b:	xor    ecx,edx
  40276d:	and    DWORD PTR ds:0x42900c,ebx
  402773:	mov    esi,0x3272e0
  402778:	push   edi
  402779:	mov    DWORD PTR ds:0x42d01c,0xa60
  402783:	mov    edi,DWORD PTR [ebp+0x10]
  402786:	sub    DWORD PTR ds:0x42c00c,0x3e85
  402790:	add    ecx,esi
  402792:	cmp    ecx,edi
  402794:	mov    DWORD PTR ds:0x42b010,0x6d5c
  40279e:	je     0x4028b7
  4027a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4027a7:	mov    edi,DWORD PTR ds:0x42b000
  4027ad:	sbb    DWORD PTR ds:0x429000,edi
  4027b3:	mov    edi,DWORD PTR [ebp+0x10]
  4027b6:	xor    eax,eax
  4027b8:	xor    ecx,edx
  4027ba:	xor    DWORD PTR ds:0x42900c,0x42a014
  4027c4:	add    ecx,esi
  4027c6:	xor    DWORD PTR ds:0x42d004,0x5916
  4027d0:	add    edi,0xfabdbee9
  4027d6:	adc    eax,0xffffffff
  4027d9:	not    DWORD PTR ds:0x42c004
  4027df:	xor    eax,0x0
  4027e2:	add    DWORD PTR ds:0x42c010,0x42c014
  4027ec:	mov    DWORD PTR [ebp-0xc],eax
  4027ef:	inc    eax
  4027f0:	push   ebx
  4027f1:	add    eax,0x103f
  4027f6:	xor    ebx,ebx
  4027f8:	xor    edi,0x8a29a12b
  4027fe:	mov    eax,ecx
  402800:	add    eax,0xfabdbee9
  402805:	adc    ebx,0xffffffff
  402808:	mov    DWORD PTR ds:0x42c00c,0x588f
  402812:	xor    eax,0x8a29a12b
  402817:	xor    ebx,0x0
  40281a:	mov    DWORD PTR ds:0x42d01c,0x82d
  402824:	cmp    eax,edi
  402826:	mov    DWORD PTR ds:0x42c01c,0x36f6
  402830:	jne    0x402849
  402836:	cmp    ebx,DWORD PTR [ebp-0xc]
  402839:	je     0x4028b1
  40283f:	jmp    0x402849
  402844:	mov    esi,0x3272e0
  402849:	mov    eax,DWORD PTR [ebp-0x4]
  40284c:	mov    edi,DWORD PTR [ebp-0x8]
  40284f:	xor    edi,edx
  402851:	add    edi,esi
  402853:	mov    esi,DWORD PTR [ebp+0x8]
  402856:	imul   edi,ecx
  402859:	mov    ebx,DWORD PTR [ebp+0xc]
  40285c:	xor    eax,edx
  40285e:	add    eax,ecx
  402860:	mov    al,BYTE PTR [ebx+eax*1+0x3272e0]
  402867:	mov    BYTE PTR [edi+esi*1],al
  40286a:	mov    eax,DWORD PTR [ebp-0x8]
  40286d:	mov    esi,DWORD PTR [ebp+0x10]
  402870:	xor    eax,edx
  402872:	xor    ebx,ebx
  402874:	add    esi,0xfabdbee9
  40287a:	adc    ebx,0xffffffff
  40287d:	lea    ecx,[ecx+eax*1+0x3272e0]
  402884:	xor    edi,edi
  402886:	xor    esi,0x8a29a12b
  40288c:	xor    ebx,0x0
  40288f:	mov    eax,ecx
  402891:	add    eax,0xfabdbee9
  402896:	adc    edi,0xffffffff
  402899:	xor    eax,0x8a29a12b
  40289e:	xor    edi,0x0
  4028a1:	cmp    eax,esi
  4028a3:	jne    0x402844
  4028a9:	cmp    edi,ebx
  4028ab:	jne    0x402844
  4028b1:	mov    eax,0xf89c85b8
  4028b6:	pop    ebx
  4028b7:	pop    edi
  4028b8:	pop    esi
  4028b9:	leave  
  4028ba:	ret    0xc
  4028bd:	push   ebp
  4028be:	mov    ebp,esp
  4028c0:	push   ecx
  4028c1:	and    DWORD PTR ds:0x42d010,0x0
  4028cb:	jmp    0x4028de
  4028d0:	xor    eax,eax
  4028d2:	add    eax,DWORD PTR ds:0x42d010
  4028d8:	inc    eax
  4028d9:	mov    ds:0x42d010,eax
  4028de:	cmp    DWORD PTR ds:0x42d010,0x1c
  4028e5:	jae    0x402908
  4028eb:	cmp    DWORD PTR ds:0x42d010,0x24
  4028f2:	jne    0x402903
  4028f8:	push   0x42c010
  4028fd:	call   DWORD PTR ds:0x42e9ab
  402903:	jmp    0x4028d0
  402908:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40290f:	add    edx,0x297b
  402915:	mov    eax,DWORD PTR [ebp+0x8]
  402918:	movsx  eax,BYTE PTR [eax]
  40291b:	add    edx,edx
  40291d:	mov    edx,0x3272e0
  402922:	sbb    DWORD PTR ds:0x429014,0x3776
  40292c:	sub    eax,edx
  40292e:	mov    ecx,0x7510899
  402933:	xor    DWORD PTR ds:0x429014,0x42b000
  40293d:	xor    eax,ecx
  40293f:	mov    DWORD PTR ds:0x429008,0x73b1
  402949:	cmp    eax,0xf89c85f4
  40294e:	mov    DWORD PTR ds:0x42c014,0x53e4
  402958:	jne    0x402987
  40295e:	mov    eax,DWORD PTR [ebp+0x8]
  402961:	push   esi
  402962:	mov    esi,DWORD PTR [ebp+0x8]
  402965:	add    esi,DWORD PTR [eax+0x3c]
  402968:	mov    DWORD PTR [ebp+0x8],esi
  40296b:	mov    eax,DWORD PTR [ebp-0x4]
  40296e:	mov    esi,DWORD PTR [ebp+0x8]
  402971:	xor    eax,ecx
  402973:	add    eax,edx
  402975:	cmp    DWORD PTR [esi+0x54],eax
  402978:	pop    esi
  402979:	je     0x402987
  40297f:	mov    eax,DWORD PTR [ebp+0x8]
  402982:	jmp    0x40298e
  402987:	mov    eax,DWORD PTR [ebp-0x4]
  40298a:	xor    eax,ecx
  40298c:	add    eax,edx
  40298e:	leave  
  40298f:	ret    0x4
  402992:	push   ebp
  402993:	mov    ebp,esp
  402995:	sub    esp,0x40
  402998:	push   ebx
  402999:	adc    DWORD PTR ds:0x42d000,0x42b014
  4029a3:	push   esi
  4029a4:	push   edi
  4029a5:	lea    eax,[ebp-0x24]
  4029a8:	push   eax
  4029a9:	add    DWORD PTR ds:0x429028,0x429004
  4029b3:	lea    eax,[ebp-0x20]
  4029b6:	push   eax
  4029b7:	xor    DWORD PTR ds:0x42c00c,0x5e29
  4029c1:	call   DWORD PTR ds:0x42e9a7
  4029c7:	sub    DWORD PTR ds:0x42a018,0x7df1
  4029d1:	push   0x21
  4029d3:	push   0x434
  4029d8:	sbb    DWORD PTR ds:0x429000,0x54d2
  4029e2:	push   0x98678765
  4029e7:	sub    DWORD PTR ds:0x42d014,0x42c00c
  4029f1:	call   DWORD PTR ds:0x42e983
  4029f7:	xor    DWORD PTR ds:0x429000,edx
  4029fd:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  402a04:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  402a0b:	mov    eax,DWORD PTR [ebp-0x4]
  402a0e:	mov    esi,0x7510899
  402a13:	xor    eax,esi
  402a15:	mov    edi,DWORD PTR ds:0x42b01c
  402a1b:	adc    DWORD PTR ds:0x429010,edi
  402a21:	mov    edi,0x3272e0
  402a26:	add    eax,edi
  402a28:	dec    DWORD PTR ds:0x429000
  402a2e:	mov    DWORD PTR [ebp-0x1c],eax
  402a31:	mov    eax,DWORD PTR [ebp+0x14]
  402a34:	adc    DWORD PTR ds:0x42c000,0x42b014
  402a3e:	test   eax,eax
  402a40:	je     0x402a4e
  402a46:	mov    eax,DWORD PTR [ebp+0x14]
  402a49:	mov    eax,DWORD PTR [eax]
  402a4b:	mov    DWORD PTR [ebp-0x1c],eax
  402a4e:	xor    eax,eax
  402a50:	xor    eax,DWORD PTR ds:0x42901c
  402a56:	and    eax,DWORD PTR ds:0x42b000
  402a5c:	mov    ds:0x42901c,eax
  402a61:	mov    eax,DWORD PTR [ebp-0x4]
  402a64:	xor    eax,esi
  402a66:	adc    ebx,DWORD PTR ds:0x429024
  402a6c:	add    eax,edi
  402a6e:	mov    DWORD PTR [ebp-0x8],eax
  402a71:	sbb    ebx,DWORD PTR ds:0x42c008
  402a77:	mov    eax,DWORD PTR [ebp-0xc]
  402a7a:	mov    DWORD PTR ds:0x42b014,0x1d
  402a84:	cmp    DWORD PTR ds:0x42b014,0x0
  402a8b:	je     0x402aca
  402a91:	cmp    DWORD PTR ds:0x42b014,0x20
  402a98:	jne    0x402ab6
  402a9e:	push   0x3b9b
  402aa3:	push   DWORD PTR [ebp-0x24]
  402aa6:	push   0x42d018
  402aab:	push   0x5e20
  402ab0:	call   DWORD PTR ds:0x42e9af
  402ab6:	xor    ebx,ebx
  402ab8:	or     ebx,DWORD PTR ds:0x42b014
  402abe:	dec    ebx
  402abf:	mov    DWORD PTR ds:0x42b014,ebx
  402ac5:	jmp    0x402a84
  402aca:	xor    eax,esi
  402acc:	and    DWORD PTR ds:0x42a01c,0x0
  402ad6:	mov    ebx,DWORD PTR ds:0x42a01c
  402adc:	inc    ebx
  402add:	mov    DWORD PTR ds:0x42a01c,ebx
  402ae3:	cmp    DWORD PTR ds:0x42a01c,0xd
  402aea:	jne    0x402af6
  402af0:	call   DWORD PTR ds:0x42e9b3
  402af6:	cmp    DWORD PTR ds:0x42a01c,0xc
  402afd:	jne    0x402b10
  402b03:	mov    ebx,DWORD PTR ds:0x42a01c
  402b09:	inc    ebx
  402b0a:	mov    DWORD PTR ds:0x42a01c,ebx
  402b10:	cmp    DWORD PTR ds:0x42a01c,0x15
  402b17:	jb     0x402ad6
  402b1d:	or     DWORD PTR ds:0x42c004,edx
  402b23:	add    eax,edi
  402b25:	sub    DWORD PTR ds:0x42b008,ebx
  402b2b:	mov    DWORD PTR [ebp-0x2c],eax
  402b2e:	mov    eax,DWORD PTR [ebp-0x4]
  402b31:	xor    eax,esi
  402b33:	add    eax,edi
  402b35:	dec    ebx
  402b36:	mov    DWORD PTR [ebp-0x38],eax
  402b39:	mov    DWORD PTR ds:0x42a00c,0x11
  402b43:	cmp    DWORD PTR ds:0x42a00c,0x0
  402b4a:	je     0x402bcf
  402b50:	cmp    DWORD PTR ds:0x42a00c,0x1b
  402b57:	jne    0x402b7d
  402b5d:	push   DWORD PTR [ebp-0x28]
  402b60:	push   0x42a000
  402b65:	push   DWORD PTR [ebp-0x24]
  402b68:	push   0x6762
  402b6d:	push   0x632b
  402b72:	push   0x871c
  402b77:	call   DWORD PTR ds:0x42e9b7
  402b7d:	xor    ebx,ebx
  402b7f:	xor    ebx,DWORD PTR ds:0x42a00c
  402b85:	dec    ebx
  402b86:	mov    DWORD PTR ds:0x42a00c,ebx
  402b8c:	jmp    0x402b43
  402b91:	and    DWORD PTR ds:0x42d018,0x0
  402b9b:	xor    eax,eax
  402b9d:	xor    eax,DWORD PTR ds:0x42d018
  402ba3:	inc    eax
  402ba4:	mov    ds:0x42d018,eax
  402ba9:	cmp    DWORD PTR ds:0x42d018,0x2a
  402bb0:	jne    0x402bbc
  402bb6:	call   DWORD PTR ds:0x42e9bb
  402bbc:	cmp    DWORD PTR ds:0x42d018,0x1c
  402bc3:	jb     0x402b9b
  402bc9:	and    ebx,0x7bf
  402bcf:	mov    ebx,DWORD PTR [ebp-0x4]
  402bd2:	xor    ebx,esi
  402bd4:	adc    DWORD PTR ds:0x42d01c,0x429024
  402bde:	add    ebx,edi
  402be0:	xor    DWORD PTR ds:0x42d008,0x22f2
  402bea:	mov    eax,DWORD PTR [ebp-0x2c]
  402bed:	xor    DWORD PTR ds:0x42a008,0x42d00c
  402bf7:	sub    eax,edi
  402bf9:	lea    ecx,[ebx-0x3272e0]
  402bff:	adc    DWORD PTR ds:0x42c01c,0x429010
  402c09:	xor    eax,esi
  402c0b:	xor    ecx,esi
  402c0d:	cmp    ecx,eax
  402c0f:	mov    DWORD PTR ds:0x42a014,0x880
  402c19:	je     0x405220
  402c1f:	and    DWORD PTR ds:0x42d018,0x0
  402c29:	jmp    0x402c3c
  402c2e:	xor    eax,eax
  402c30:	or     eax,DWORD PTR ds:0x42d018
  402c36:	inc    eax
  402c37:	mov    ds:0x42d018,eax
  402c3c:	cmp    DWORD PTR ds:0x42d018,0x1f
  402c43:	jae    0x402c7e
  402c49:	cmp    DWORD PTR ds:0x42d018,0x26
  402c50:	jne    0x402c69
  402c56:	push   0x847e
  402c5b:	push   0x42901c
  402c60:	push   DWORD PTR [ebp-0x20]
  402c63:	call   DWORD PTR ds:0x42e9bf
  402c69:	jmp    0x402c2e
  402c6e:	mov    eax,ds:0x42b010
  402c73:	and    eax,DWORD PTR ds:0x429010
  402c79:	mov    ds:0x42b010,eax
  402c7e:	mov    eax,DWORD PTR [ebp-0x4]
  402c81:	xor    eax,esi
  402c83:	mov    DWORD PTR ds:0x42c008,0x7a4b
  402c8d:	add    eax,edi
  402c8f:	cmp    ebx,eax
  402c91:	mov    DWORD PTR ds:0x42b000,0x3723
  402c9b:	jne    0x405184
  402ca1:	push   DWORD PTR [ebp+0x8]
  402ca4:	neg    DWORD PTR ds:0x42d018
  402caa:	call   0x4028bd
  402caf:	movzx  ecx,BYTE PTR ds:0x42c000
  402cb6:	xor    DWORD PTR ds:0x429000,ecx
  402cbc:	mov    DWORD PTR [ebp-0x14],eax
  402cbf:	sbb    eax,0x7bdb
  402cc4:	mov    eax,DWORD PTR [ebp-0x4]
  402cc7:	mov    ecx,DWORD PTR [ebp-0x14]
  402cca:	sbb    DWORD PTR ds:0x42b00c,0x398d
  402cd4:	xor    eax,esi
  402cd6:	add    eax,edi
  402cd8:	mov    DWORD PTR ds:0x42a018,0x3718
  402ce2:	jmp    0x405039
  402ce7:	dec    ecx
  402ce8:	je     0x402ca4
  402cea:	dec    ebp
  402ceb:	stos   DWORD PTR es:[edi],eax
  402cec:	cmp    ecx,DWORD PTR [ebp+0x6a681074]
  402cf2:	adc    eax,0x1e3ecfc1
  402cf7:	jp     0x402d73
  402cf9:	jp     0x402d75
  402cfb:	xor    BYTE PTR [edi+0x7a],bl
  402cfe:	jp     0x402d11
  402d00:	sub    BYTE PTR [edi],dl
  402d02:	cmp    eax,0x2f1b2115
  402d07:	popa   
  402d08:	ss gs sbb ax,0x6a63
  402d0e:	push   0x69
  402d10:	xor    al,cl
  402d12:	fdivr  st,st(5)
  402d14:	ins    BYTE PTR es:[edi],dx
  402d15:	inc    esp
  402d16:	imul   edi,DWORD PTR [ebp+0x5b],0xffffffac
  402d1a:	jl     0x402d85
  402d1c:	push   ebp
  402d1d:	iret   
  402d1e:	pop    ecx
  402d1f:	dec    edx
  402d20:	cmp    al,0x88
  402d22:	cli    
  402d23:	xchg   DWORD PTR [esi+0x57],esi
  402d26:	dec    ecx
  402d27:	jg     0x402d60
  402d29:	mov    WORD PTR [esi+0x3ba2bc7f],fs
  402d2f:	sub    bh,bh
  402d31:	data16 fdivr st,st(2)
  402d34:	push   ebx
  402d35:	jg     0x402d55
  402d37:	jmp    0xe9faf671
  402d3c:	xchg   DWORD PTR [ebx],edx
  402d3e:	fimul  WORD PTR [ebx-0x54aaf0db]
  402d44:	mov    al,al
  402d46:	imul   DWORD PTR [ecx-0x27]
  402d49:	add    al,dl
  402d4b:	push   cs
  402d4c:	cli    
  402d4d:	es adc al,0x44
  402d50:	or     BYTE PTR [esi],ah
  402d52:	imul   esp,DWORD PTR [ebp+esi*4-0x51],0x13
  402d57:	pop    ebp
  402d58:	add    DWORD PTR [esi+0x2b45e5ff],esp
  402d5e:	jo     0x402d92
  402d60:	les    ebx,FWORD PTR [ebx-0xb]
  402d63:	sbb    bh,dl
  402d65:	je     0x402d24
  402d67:	arpl   cx,bx
  402d69:	xchg   esp,eax
  402d6a:	pop    edi
  402d6b:	mov    edi,DWORD PTR [ebp+0x4d821007]
  402d71:	repz sahf 
  402d73:	cmp    BYTE PTR [edx+0x73],dh
  402d76:	or     ebx,edx
  402d78:	sub    DWORD PTR [edx-0x77],edx
  402d7b:	xor    BYTE PTR [ebx],dh
  402d7d:	push   eax
  402d7e:	jecxz  0x402d4f
  402d80:	mov    ah,BYTE PTR ds:0xc8b7cc85
  402d86:	test   BYTE PTR [ebp-0x20],ch
  402d89:	inc    ecx
  402d8a:	push   edx
  402d8b:	dec    eax
  402d8c:	or     BYTE PTR [esi],bh
  402d8e:	repz add ebp,DWORD PTR ss:[ecx+0x4ca7ca4b]
  402d96:	fadd   QWORD PTR [eax]
  402d98:	push   esi
  402d99:	stc    
  402d9a:	push   edx
  402d9b:	push   esi
  402d9c:	mov    eax,ds:0xf4bf64f5
  402da1:	inc    edx
  402da2:	add    edi,edx
  402da4:	pop    edx
  402da5:	pop    esp
  402da6:	jo     0x402df3
  402da8:	aas    
  402da9:	(bad)  
  402daa:	bound  esi,QWORD PTR [edi]
  402dac:	sbb    esi,DWORD PTR [edi+0x3f234c8f]
  402db2:	call   0x3bcc:0x6c3255bd
  402db9:	push   ss
  402dba:	outs   dx,DWORD PTR ss:[esi]
  402dbc:	lea    edi,[ebx-0x12795ef4]
  402dc2:	add    ch,ah
  402dc4:	add    DWORD PTR [esi],edx
  402dc6:	mov    al,ds:0x9f2c475b
  402dcb:	fdivr  st(3),st
  402dcd:	mov    esi,0x290206e6
  402dd2:	jp     0x402d7d
  402dd4:	cmp    BYTE PTR [eax+0x41],0xe1
  402dd8:	cs out dx,eax
  402dda:	jp     0x402dde
  402ddc:	pop    esi
  402ddd:	push   ss
  402dde:	test   al,0x86
  402de0:	sbb    al,0xac
  402de2:	jmp    0x402dde
  402de4:	aaa    
  402de5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402de6:	mov    al,0xf5
  402de8:	std    
  402de9:	add    DWORD PTR [eax+0x149ea2f6],ebx
  402def:	sbb    al,0x5d
  402df1:	ret    0x649b
  402df4:	jle    0x402da8
  402df6:	xchg   edx,eax
  402df7:	nop
  402df8:	mov    ebx,0x66f9d79b
  402dfd:	(bad)  [edi+0x10]
  402e00:	inc    ecx
  402e01:	fadd   QWORD PTR [ebp-0x3a]
  402e04:	mov    ebx,0xe755415b
  402e09:	sub    esp,DWORD PTR [edi+0x60]
  402e0c:	pop    ss
  402e0d:	pop    esp
  402e0e:	shl    BYTE PTR [edx],cl
  402e10:	stc    
  402e11:	mov    eax,ds:0x31708c81
  402e16:	in     eax,0x66
  402e18:	xchg   DWORD PTR [ecx],ecx
  402e1a:	push   esi
  402e1b:	je     0x402e49
  402e1d:	mov    esp,0x83e1eac0
  402e22:	scas   al,BYTE PTR es:[edi]
  402e23:	(bad)  
  402e24:	cld    
  402e25:	adc    eax,DWORD PTR fs:[ecx-0x4fd7487b]
  402e2c:	lods   eax,DWORD PTR ds:[esi]
  402e2d:	cmp    ch,BYTE PTR [ecx+0xdd64178]
  402e33:	jae    0x402e42
  402e35:	adc    al,0xb5
  402e37:	or     ebp,DWORD PTR [edi-0x1f]
  402e3a:	and    eax,DWORD PTR [ebp+0x21]
  402e3d:	sbb    esp,DWORD PTR [edi+ebp*4]
  402e40:	jb     0x402dc9
  402e42:	xchg   ecx,eax
  402e43:	pop    ds
  402e44:	cmp    dl,bl
  402e46:	mov    ds:0x7e163b61,eax
  402e4b:	adc    esi,eax
  402e4d:	scas   eax,DWORD PTR es:[edi]
  402e4e:	adc    DWORD PTR [ebx-0x57e6d0be],eax
  402e54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e55:	inc    edx
  402e56:	mov    ecx,0xe3f7dbb6
  402e5b:	addr16 pop ds
  402e5d:	aaa    
  402e5e:	mov    ?,WORD PTR [eax-0x1f]
  402e61:	mov    ch,0x57
  402e63:	push   ds
  402e64:	scas   eax,DWORD PTR es:[edi]
  402e65:	or     eax,0x87b69dd2
  402e6a:	stos   BYTE PTR es:[edi],al
  402e6b:	mov    ah,0x42
  402e6d:	rcr    edi,1
  402e6f:	jmp    0x402e14
  402e71:	mov    DWORD PTR [ecx+0x35],0x62bfec4f
  402e78:	mov    esi,0xc6ae34f3
  402e7d:	sbb    cl,BYTE PTR [edi+0x596a62a3]
  402e83:	data16 adc al,0xa3
  402e86:	inc    esp
  402e87:	repz dec ebx
  402e89:	out    dx,al
  402e8a:	jo     0x402ea5
  402e8c:	imul   ebp,ebp,0xf3cccf60
  402e92:	les    edx,FWORD PTR ds:0xe56b35b1
  402e98:	data16 sar BYTE PTR [edi],1
  402e9b:	add    BYTE PTR [ebp-0x36],cl
  402e9e:	jge    0x402eed
  402ea0:	and    DWORD PTR [edx+0x5b1e273d],edi
  402ea6:	mov    dh,0x27
  402ea8:	stc    
  402ea9:	mov    ecx,0x1a09b4e1
  402eae:	mov    esp,0x802cae00
  402eb3:	add    BYTE PTR [ebx+0x33b2c75b],bh
  402eb9:	jl     0x402e68
  402ebb:	jo     0x402e59
  402ebd:	dec    ebp
  402ebe:	inc    esp
  402ebf:	mov    BYTE PTR [edi+0x1dc23a89],ah
  402ec5:	mov    esp,0x9f8462b8
  402eca:	dec    edx
  402ecb:	data16 (bad) 
  402ecd:	pop    eax
  402ece:	cmp    ecx,DWORD PTR ss:[edi+eiz*2]
  402ed2:	dec    ebp
  402ed3:	pop    esi
  402ed4:	sub    dl,0x84
  402ed7:	test   DWORD PTR [edx+0x113de243],ebx
  402edd:	or     edi,DWORD PTR [ebp-0x17]
  402ee0:	xor    cl,dl
  402ee2:	call   0x3534:0x3805d67b
  402ee9:	mov    eax,0x2f40787b
  402eee:	dec    dh
  402ef0:	fsubr  QWORD PTR [ebx-0x60e3bc68]
  402ef6:	arpl   WORD PTR [esi-0x584ebf3a],si
  402efc:	add    eax,0xa93ea41e
  402f01:	ja     0x402e92
  402f03:	jp     0x402f2c
  402f05:	push   esp
  402f06:	jg     0x402f33
  402f08:	push   0x8
  402f0a:	push   cs
  402f0b:	dec    ebx
  402f0c:	cmc    
  402f0d:	lods   al,BYTE PTR ds:[esi]
  402f0e:	int3   
  402f0f:	cmp    ah,BYTE PTR [ecx]
  402f11:	ror    BYTE PTR [edx+0x30],0xb1
  402f15:	or     ecx,DWORD PTR [eax]
  402f17:	mov    ds,WORD PTR [eax+eax*4+0x46398ed1]
  402f1e:	loopne 0x402f38
  402f20:	pop    ss
  402f21:	and    eax,0xcb98a290
  402f26:	sub    al,0x5d
  402f28:	nop
  402f29:	inc    ecx
  402f2a:	dec    ebx
  402f2b:	fadd   DWORD PTR [ecx-0x73]
  402f2e:	repnz pusha 
  402f30:	shl    DWORD PTR [edx-0x332d922b],0x70
  402f37:	das    
  402f38:	add    esp,DWORD PTR [esi*4+0x23ad265f]
  402f3f:	out    dx,al
  402f40:	inc    esi
  402f41:	out    dx,eax
  402f42:	imul   edi,DWORD PTR [ebx+0x48],0xffffffea
  402f46:	sub    al,0x81
  402f48:	neg    BYTE PTR [edx+0x2de0b485]
  402f4e:	mov    al,ds:0xfb92332c
  402f53:	push   ds
  402f54:	jp     0x402f8f
  402f56:	xchg   ebp,eax
  402f57:	mov    WORD PTR [edx+0x5e239d17],ds
  402f5d:	xchg   cl,cl
  402f5f:	(bad)  
  402f61:	mov    cl,0x4e
  402f63:	xlat   BYTE PTR ds:[ebx]
  402f64:	add    al,0xe7
  402f66:	into   
  402f67:	sub    eax,0xa3005334
  402f6c:	iret   
  402f6d:	push   ds
  402f6e:	mov    edi,0x100b0900
  402f73:	and    ebx,DWORD PTR [edx+0x7b]
  402f76:	int    0xb1
  402f78:	(bad)
  402f7b:	xlat   BYTE PTR ds:[ebx]
  402f7c:	mov    edi,0xfec831d
  402f81:	mov    dh,0xb
  402f83:	fcmovb st,st(3)
  402f85:	arpl   WORD PTR [edx+0x73],cx
  402f88:	retf   
  402f89:	(bad)  
  402f8a:	jne    0x402fb7
  402f8c:	shr    DWORD PTR [edx],0xf5
  402f8f:	and    al,BYTE PTR [eax]
  402f91:	div    BYTE PTR [esi]
  402f93:	push   ss
  402f94:	jle    0x402f88
  402f96:	aad    0x27
  402f98:	xchg   esp,eax
  402f99:	sub    eax,0x5344e144
  402f9e:	sbb    al,0x6d
  402fa0:	clc    
  402fa1:	jmp    0x9e3fff4d
  402fa6:	mov    bh,0xdb
  402fa8:	(bad)  
  402fa9:	iret   
  402faa:	call   0xa908a68d
  402faf:	jmp    0x402f75
  402fb1:	or     BYTE PTR [edx-0x3d],ch
  402fb4:	rol    DWORD PTR [eax-0x1c4ead94],cl
  402fba:	nop
  402fbb:	push   cs
  402fbc:	jns    0x402f3f
  402fbe:	xor    al,0x91
  402fc0:	mov    ch,0x9
  402fc2:	(bad)  
  402fc4:	sub    eax,0xdb3ce864
  402fc9:	jbe    0x40302e
  402fcb:	dec    edi
  402fcc:	jo     0x402f5e
  402fce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fcf:	js     0x402ffc
  402fd1:	jmp    0x4c82:0x96b13f5d
  402fd8:	call   0x2dd58a9a
  402fdd:	outs   dx,BYTE PTR ds:[esi]
  402fde:	outs   dx,DWORD PTR ds:[esi]
  402fdf:	sbb    BYTE PTR [edi],cl
  402fe1:	dec    edx
  402fe2:	pop    es
  402fe3:	mov    esp,0x21fbdb94
  402fe8:	lock mov esp,DWORD PTR [edx+0x62]
  402fec:	fstp   QWORD PTR [edx-0x53fca140]
  402ff2:	int3   
  402ff3:	sub    BYTE PTR [eax+0x2450899c],al
  402ff9:	xchg   ah,dh
  402ffb:	xchg   BYTE PTR [edi+0x8],dl
  402ffe:	or     al,0x4
  403000:	or     esp,DWORD PTR [edx]
  403002:	sbb    ebx,0x946e8c11
  403008:	in     al,0xa2
  40300a:	jb     0x402fcc
  40300c:	or     DWORD PTR [eax+edi*1],esi
  40300f:	pop    es
  403010:	test   BYTE PTR [edx+0x9cce865],cl
  403016:	jecxz  0x40303c
  403018:	xchg   esp,eax
  403019:	rcl    DWORD PTR [edx+0x5],1
  40301c:	divps  xmm5,XMMWORD PTR [edx]
  40301f:	mov    al,ds:0xe35fac37
  403024:	xchg   edi,eax
  403025:	fst    QWORD PTR [edi-0x82984b6]
  40302b:	mov    esp,DWORD PTR ds:[edi+0x5386fd21]
  403032:	fld    TBYTE PTR [ecx-0x6280349]
  403038:	pop    esi
  403039:	add    eax,0xadb6c1c8
  40303e:	cmc    
  40303f:	mov    es,WORD PTR [ecx+ecx*4+0xa598c48]
  403046:	cs adc edi,eax
  403049:	jge    0x402fd1
  40304b:	jns    0x403013
  40304d:	popf   
  40304e:	repnz mov edx,0xff9fc87b
  403054:	add    cl,BYTE PTR [ebx+0x2]
  403057:	pop    edx
  403058:	loop   0x403026
  40305a:	aam    0x7c
  40305c:	out    0x29,eax
  40305e:	retf   
  40305f:	push   ebp
  403060:	or     BYTE PTR [ecx+eiz*8-0x1957abec],dh
  403067:	jb     0x4030a5
  403069:	test   al,0xc9
  40306b:	cmp    eax,eax
  40306d:	scas   eax,DWORD PTR es:[edi]
  40306e:	test   BYTE PTR [ebx-0x4a1b57fe],dh
  403074:	stos   DWORD PTR es:[edi],eax
  403075:	stos   BYTE PTR es:[edi],al
  403076:	sub    eax,DWORD PTR [edx]
  403078:	add    esp,DWORD PTR [edi+0x75]
  40307b:	popa   
  40307c:	pusha  
  40307d:	mov    esp,DWORD PTR [ebp-0x7923edcd]
  403083:	sub    BYTE PTR [edi-0x28d7ef01],cl
  403089:	cmp    cl,ah
  40308b:	mov    ah,0xe4
  40308d:	mov    ecx,0xdd0b8fa7
  403092:	mov    dl,0x2c
  403094:	push   ss
  403095:	mov    eax,ds:0x8a9edc02
  40309a:	mov    esp,0x6f93be57
  40309f:	fld    QWORD PTR [ebx-0x61]
  4030a2:	sbb    eax,DWORD PTR [ebx-0x6e]
  4030a5:	(bad)  [eax-0x41d9abb2]
  4030ac:	mov    dh,0xf4
  4030ae:	fs xchg ebx,ebp
  4030b1:	or     eax,0x3dcc7dd9
  4030b6:	jge    0x40305d
  4030b8:	mov    ds:0xadfd5969,eax
  4030bd:	push   edi
  4030be:	popf   
  4030bf:	call   0x969fed93
  4030c4:	(bad)  
  4030c6:	sbb    al,0x8e
  4030c8:	sub    al,BYTE PTR [edx+0x1a8de32d]
  4030ce:	(bad)  
  4030cf:	hlt    
  4030d0:	sub    eax,DWORD PTR [esi+0x2]
  4030d3:	sbb    eax,0x691dd126
  4030d8:	add    edi,DWORD PTR [edi+0x7]
  4030db:	add    eax,esi
  4030dd:	add    ebp,0x1d67844f
  4030e3:	enter  0x8ea3,0x7b
  4030e7:	sbb    DWORD PTR [ebp+eax*8+0x2dc09430],edx
  4030ee:	fs int 0x48
  4030f1:	mov    cs,WORD PTR [esi]
  4030f3:	push   eax
  4030f4:	add    al,ch
  4030f6:	or     dx,0x5
  4030fa:	push   ds
  4030fb:	adc    ebp,DWORD PTR [edx+0x5046dd0e]
  403101:	ss retf 0xd4a2
  403105:	cmp    eax,0xdbf0af51
  40310a:	inc    edx
  40310b:	cld    
  40310c:	fsub   DWORD PTR [edi+0x4f63ef7f]
  403112:	cmc    
  403113:	add    edi,edi
  403115:	inc    edx
  403116:	daa    
  403117:	jns    0x403167
  403119:	dec    esp
  40311a:	xor    BYTE PTR [edi+0x2ca9f6a0],al
  403120:	in     eax,dx
  403121:	cwde   
  403122:	cmp    DWORD PTR [edx],ecx
  403124:	fld    DWORD PTR [ebx-0x5b]
  403127:	jne    0x403103
  403129:	ins    BYTE PTR es:[edi],dx
  40312a:	push   0xbcbf7418
  40312f:	inc    ebp
  403130:	lods   eax,DWORD PTR ds:[esi]
  403131:	sar    DWORD PTR [esi-0x7e],0x0
  403135:	popa   
  403136:	sbb    eax,DWORD PTR [ebx-0x44873d95]
  40313c:	pop    esi
  40313d:	mov    edx,0x96485c07
  403142:	push   es
  403143:	mov    ds:0x3ce0132c,al
  403148:	and    al,0xf1
  40314a:	in     al,dx
  40314b:	pop    ebp
  40314c:	pop    esi
  40314d:	aas    
  40314e:	ror    DWORD PTR [ecx+0x21],cl
  403151:	lods   al,BYTE PTR ds:[esi]
  403152:	fimul  WORD PTR [edx]
  403154:	fstp   DWORD PTR [ebp-0x7f]
  403157:	test   DWORD PTR [esi],edi
  403159:	inc    ecx
  40315b:	or     ah,0xaa
  40315e:	mov    al,0x91
  403160:	jae    0x4031c5
  403162:	loopne 0x40313a
  403164:	add    ch,ah
  403166:	mov    ah,0x22
  403168:	pusha  
  403169:	call   0x8b2e:0x7c96426a
  403170:	mov    dh,0x38
  403172:	ret    0xca7b
  403175:	inc    esp
  403176:	cs repnz enter 0xd528,0x34
  40317c:	xchg   ecx,eax
  40317d:	lock dec eax
  40317f:	sub    eax,0x1ca05129
  403184:	test   DWORD PTR [ebx+ebp*2+0x275ec796],esp
  40318b:	les    edi,FWORD PTR [esi]
  40318d:	cli    
  40318e:	sahf   
  40318f:	or     eax,0xd4d23ba3
  403194:	xor    ah,BYTE PTR [edx+0x9]
  403197:	aam    0xa
  403199:	sub    al,0xe1
  40319b:	scas   al,BYTE PTR es:[edi]
  40319c:	cmp    eax,0x5c114c70
  4031a1:	xor    dh,BYTE PTR [ebx-0x7d8d14ad]
  4031a7:	test   eax,0x44ebeb4b
  4031ac:	enter  0x9928,0xbd
  4031b0:	inc    eax
  4031b1:	pusha  
  4031b2:	cmp    edx,0x2a8d41fc
  4031b8:	jb     0x403163
  4031ba:	or     DWORD PTR [edi-0x22446611],eax
  4031c0:	jb     0x40316a
  4031c2:	push   es
  4031c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031c4:	pop    ebx
  4031c5:	and    esp,DWORD PTR [ecx+ebp*4+0x7e53f9b7]
  4031cc:	or     bl,bh
  4031ce:	(bad)  
  4031cf:	retf   0x365d
  4031d2:	and    BYTE PTR [ebp+0xb793eae],dh
  4031d8:	or     DWORD PTR [esi+0x28],esi
  4031db:	enter  0x99ff,0x9a
  4031df:	push   0x8a4022fb
  4031e4:	xlat   BYTE PTR ds:[ebx]
  4031e5:	in     eax,dx
  4031e6:	pop    esp
  4031e7:	popa   
  4031e8:	nop
  4031e9:	lds    esp,FWORD PTR ds:0x77574959
  4031ef:	pusha  
  4031f0:	ins    DWORD PTR es:[edi],dx
  4031f1:	mov    al,0x7e
  4031f3:	scas   al,BYTE PTR es:[edi]
  4031f4:	push   esi
  4031f5:	mov    esp,0xcc526c07
  4031fa:	ret    
  4031fb:	shl    BYTE PTR [ecx],1
  4031fd:	xchg   BYTE PTR [ebx+0xb0a0195],bh
  403203:	sbb    DWORD PTR [eax],ebp
  403205:	dec    ebp
  403206:	cli    
  403207:	inc    esp
  403208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403209:	lea    esi,[eax]
  40320b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40320c:	call   0x6919:0x295b920
  403213:	mov    cl,BYTE PTR [ecx+0x7c]
  403216:	push   cs
  403217:	push   ecx
  403218:	xchg   edx,eax
  403219:	push   es
  40321a:	not    bh
  40321c:	pop    esi
  40321d:	or     BYTE PTR [edx-0x7850734e],dh
  403223:	imul   BYTE PTR [ebp-0x1abee199]
  403229:	pop    ecx
  40322a:	and    eax,0xa32ffb27
  40322f:	xor    eax,0x7aa65ebc
  403234:	rcl    BYTE PTR [edi],1
  403236:	repnz imul edx,DWORD PTR [eax],0xffffffc7
  40323a:	out    dx,eax
  40323b:	push   cs
  40323c:	gs int 0xb4
  40323f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403240:	cmp    cl,bh
  403242:	and    al,0x22
  403244:	and    dl,dl
  403246:	inc    ebx
  403247:	or     ah,dl
  403249:	fnstsw WORD PTR [esi-0x1c96ec5a]
  40324f:	pop    es
  403250:	repnz mov ah,BYTE PTR [ecx+edx*2-0x755b8510]
  403258:	sub    dl,al
  40325a:	mov    ecx,0x92f3a241
  40325f:	cld    
  403260:	vfmsubadd132ps zmm6{k5},zmm1,ZMMWORD PTR [edi]
  403266:	mov    DWORD PTR [edi-0x43],ebp
  403269:	lahf   
  40326a:	push   edi
  40326b:	lahf   
  40326c:	inc    edi
  40326d:	into   
  40326e:	ins    DWORD PTR es:[edi],dx
  40326f:	or     bh,ah
  403271:	or     BYTE PTR [esi],0xb7
  403274:	(bad)  
  403275:	frstor [esp+ebx*8+0x4643b3c]
  40327c:	in     eax,0x16
  40327e:	fdivr  QWORD PTR [edx-0x74]
  403281:	and    ecx,esp
  403283:	mov    WORD PTR [eax+ebp*2+0x18],?
  403287:	ins    DWORD PTR es:[edi],dx
  403288:	or     ch,BYTE PTR [ebp+0x34]
  40328b:	(bad)  
  40328c:	cli    
  40328d:	adc    ecx,esp
  40328f:	xchg   esp,eax
  403290:	call   0x2ce5e1f
  403295:	rol    BYTE PTR [eax+0x18],cl
  403298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403299:	ret    0xc762
  40329c:	xor    bh,0x20
  40329f:	(bad)  
  4032a1:	mov    esi,esp
  4032a3:	popf   
  4032a4:	adc    ebp,ecx
  4032a6:	imul   esp,DWORD PTR [edx+edi*1+0x53ce48e0],0xb8306e38
  4032b1:	and    DWORD PTR [esi+ebp*8],edi
  4032b4:	inc    edx
  4032b5:	frstor [ecx-0x1eeb6a5a]
  4032bb:	jbe    0x4032c5
  4032bd:	scas   eax,DWORD PTR es:[edi]
  4032be:	popa   
  4032bf:	sbb    al,0xdd
  4032c1:	mov    dl,0x6d
  4032c3:	pop    es
  4032c4:	rol    DWORD PTR [ebp+0x30261ed7],1
  4032ca:	push   ds
  4032cb:	sbb    esi,DWORD PTR [ebp+0x59e072]
  4032d1:	lahf   
  4032d2:	retf   
  4032d3:	xchg   ebp,eax
  4032d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032d5:	scas   al,BYTE PTR es:[edi]
  4032d6:	add    DWORD PTR [esi+eiz*1],0xffffffe6
  4032da:	icebp  
  4032db:	push   edx
  4032dc:	and    ecx,edi
  4032de:	push   esp
  4032df:	test   DWORD PTR [ecx],eax
  4032e1:	stc    
  4032e2:	adc    edi,eax
  4032e4:	sub    al,ch
  4032e6:	and    al,0x4c
  4032e8:	popa   
  4032e9:	xlat   BYTE PTR ds:[ebx]
  4032ea:	adc    eax,0x224c5dab
  4032ef:	ret    
  4032f0:	aad    0x31
  4032f2:	fld    QWORD PTR [ebx]
  4032f4:	jno    0x4032d2
  4032f6:	and    BYTE PTR [ebx+0x11],dl
  4032f9:	je     0x403293
  4032fb:	ret    
  4032fc:	dec    esi
  4032fd:	push   esi
  4032fe:	div    ebp
  403300:	sbb    DWORD PTR [ebp+edi*2-0x252b2f07],edx
  403307:	add    eax,0xbf6ccb1e
  40330c:	sahf   
  40330d:	in     al,0x27
  40330f:	stos   DWORD PTR es:[edi],eax
  403310:	xchg   ebp,eax
  403311:	push   0x6a
  403313:	or     bl,BYTE PTR [edi-0x756ff064]
  403319:	adc    BYTE PTR [eax+0x4f],bl
  40331c:	adc    al,0xee
  40331e:	xchg   edi,eax
  40331f:	je     0x403327
  403321:	cmp    DWORD PTR [ecx],esp
  403323:	ret    0xd454
  403326:	popf   
  403327:	(bad)  
  403328:	fadd   st,st(3)
  40332a:	sub    al,0x1d
  40332c:	jmp    0xcb40:0xe33f180d
  403333:	jno    0x4032ed
  403335:	inc    edi
  403336:	jnp    0x403305
  403338:	mov    eax,ds:0x5fe51bb2
  40333d:	fsub   QWORD PTR [ecx]
  40333f:	repnz mov eax,ds:0xabc968d9
  403345:	jae    0x403338
  403347:	mov    esp,0xbfc94f63
  40334c:	test   ah,bl
  40334e:	stos   BYTE PTR es:[edi],al
  40334f:	dec    esp
  403350:	push   edi
  403351:	add    eax,0xc683d68c
  403356:	mov    dh,dl
  403358:	inc    edx
  403359:	aaa    
  40335a:	xlat   BYTE PTR ds:[ebx]
  40335b:	mov    al,ds:0x8cffdd48
  403360:	dec    esp
  403361:	dec    ebx
  403362:	(bad)  
  403363:	xchg   ebx,eax
  403364:	arpl   WORD PTR [edi+0x30],bp
  403367:	push   edx
  403368:	(bad)  
  403369:	adc    al,0xdd
  40336b:	add    BYTE PTR [ebx-0x43],dh
  40336e:	add    BYTE PTR ds:[edi-0x3c],dl
  403372:	sub    ch,bh
  403374:	inc    esi
  403375:	fidivr WORD PTR [esi-0x51da9ec4]
  40337b:	mov    ecx,0x55d6965c
  403380:	dec    ecx
  403381:	addr16 pop bp
  403384:	pop    es
  403385:	loope  0x40333b
  403387:	leave  
  403388:	xchg   esp,eax
  403389:	lahf   
  40338a:	mov    es,WORD PTR [edx]
  40338c:	pop    edx
  40338d:	xchg   ebp,eax
  40338e:	popa   
  40338f:	pop    ds
  403390:	out    dx,al
  403391:	imul   ecx,DWORD PTR [ecx+ebp*1+0x3e66e88],0x9a56b11d
  40339c:	dec    esi
  40339d:	and    eax,0x87d12a71
  4033a2:	popf   
  4033a3:	and    eax,0x1da7c258
  4033a8:	fdiv   DWORD PTR [edi+0x5]
  4033ab:	jecxz  0x403393
  4033ad:	std    
  4033ae:	inc    eax
  4033af:	jns    0x4033be
  4033b1:	int    0xad
  4033b3:	outs   dx,DWORD PTR ds:[esi]
  4033b4:	cs jne 0x40342f
  4033b7:	xor    ch,dh
  4033b9:	add    ecx,edx
  4033bb:	push   ecx
  4033bc:	dec    ecx
  4033bd:	aas    
  4033be:	rcl    DWORD PTR [ebx-0x37e024e0],1
  4033c4:	iret   
  4033c5:	mov    ebx,0x96a64a30
  4033ca:	fdivp  st(2),st
  4033cc:	xor    bh,dl
  4033ce:	mov    ebp,0x8fdfc7f1
  4033d3:	mov    cl,0xfd
  4033d5:	mov    ebp,0x96e73888
  4033da:	add    BYTE PTR [eax+0x4e9170a7],ah
  4033e0:	jle    0x403410
  4033e2:	mov    bl,0x67
  4033e4:	leave  
  4033e5:	scas   eax,DWORD PTR es:[edi]
  4033e6:	cli    
  4033e7:	cmp    BYTE PTR ds:0x87f7562e,0x4b
  4033ee:	test   bh,cl
  4033f0:	(bad)  
  4033f1:	enter  0xce2f,0x14
  4033f5:	lahf   
  4033f6:	jb     0x4033a3
  4033f8:	fadd   DWORD PTR [esi-0x38deef17]
  4033fe:	lahf   
  4033ff:	fst    QWORD PTR [edi+0x40]
  403402:	daa    
  403403:	push   0xbdace5a6
  403408:	cwde   
  403409:	mov    eax,0x5e363f75
  40340e:	jae    0x40339a
  403410:	cmp    DWORD PTR [eax+0x625ee500],0x50
  403417:	cs cmp al,0x58
  40341a:	adc    eax,0x44b05b00
  40341f:	shl    BYTE PTR ds:0x640ec830,1
  403425:	imul   edx,DWORD PTR [edi],0x24
  403428:	les    esp,FWORD PTR [ebp+0x755735a4]
  40342e:	and    al,0x0
  403430:	xor    eax,0x90f2a48b
  403435:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403436:	ss daa 
  403438:	push   edx
  403439:	cs jae 0x403486
  40343c:	push   DWORD PTR [ecx]
  40343e:	ja     0x40346e
  403440:	mov    WORD PTR [edi],ds
  403442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403443:	dec    esp
  403444:	nop
  403445:	mov    bl,0x2
  403447:	mov    eax,0xd8f2c2a1
  40344c:	sub    BYTE PTR [ebx+ebx*4+0x2e],dh
  403450:	cld    
  403451:	shl    DWORD PTR [ebx],cl
  403453:	inc    ebp
  403454:	ror    BYTE PTR [ebx],cl
  403456:	stos   BYTE PTR es:[edi],al
  403457:	call   0x3ad62ef6
  40345c:	fidiv  WORD PTR [edx]
  40345e:	int3   
  40345f:	ficomp WORD PTR [ebp+0x37]
  403462:	xchg   DWORD PTR [ecx-0x29ea7458],ecx
  403468:	fdivr  QWORD PTR [ecx+edi*4]
  40346b:	or     BYTE PTR [ebx],0x39
  40346e:	add    DWORD PTR [edi+0x56a947df],ebp
  403474:	fsub   QWORD PTR [esi+0x25]
  403477:	sbb    DWORD PTR [ebx],0xa
  40347a:	cmp    dh,BYTE PTR [ebx]
  40347c:	inc    ecx
  40347d:	scas   al,BYTE PTR es:[edi]
  40347e:	test   al,0x43
  403480:	cli    
  403481:	or     eax,0x7b9bf447
  403486:	shr    BYTE PTR [edx+0x1ee1bd54],cl
  40348c:	ja     0x4034fc
  40348e:	ffree  st(0)
  403490:	adc    eax,ebp
  403492:	or     eax,DWORD PTR [ecx]
  403494:	repz pop ecx
  403496:	pop    eax
  403497:	fnstcw WORD PTR [ebx+esi*1]
  40349a:	pop    ds
  40349b:	pusha  
  40349c:	scas   al,BYTE PTR es:[edi]
  40349d:	inc    esp
  40349e:	adc    eax,0xde1b25a3
  4034a3:	icebp  
  4034a4:	jae    0x40351b
  4034a6:	cdq    
  4034a7:	cmp    ebp,DWORD PTR [ecx-0x5b]
  4034aa:	mov    ebx,0xb320264
  4034af:	jg     0x403492
  4034b1:	adc    BYTE PTR [esi+0x45],dl
  4034b4:	sti    
  4034b5:	js     0x4034af
  4034b7:	dec    esp
  4034b8:	(bad)  
  4034b9:	out    dx,eax
  4034ba:	inc    eax
  4034bb:	xchg   ecx,eax
  4034bc:	jle    0x4034e5
  4034be:	loope  0x403533
  4034c0:	std    
  4034c1:	arpl   cx,dx
  4034c3:	and    al,0x10
  4034c5:	(bad)  
  4034c6:	jns    0x4034d6
  4034c8:	or     al,BYTE PTR [edi]
  4034ca:	lock pop ebx
  4034cc:	into   
  4034cd:	xchg   BYTE PTR [ebp+0x10903523],ch
  4034d3:	sub    BYTE PTR [esi],0xf5
  4034d6:	push   ecx
  4034d7:	dec    edi
  4034d8:	inc    ebp
  4034d9:	out    0x8c,eax
  4034db:	jge    0x4034ee
  4034dd:	xor    BYTE PTR [ebx+0x5a],dl
  4034e0:	loop   0x403522
  4034e2:	dec    edx
  4034e3:	(bad)  
  4034e4:	aam    0x46
  4034e6:	pop    ebp
  4034e7:	or     eax,0xf90ad173
  4034ec:	jge    0x403533
  4034ee:	inc    esp
  4034ef:	jmp    0x3ea50e34
  4034f4:	pop    gs
  4034f6:	pop    es
  4034f7:	jmp    0xae74:0x2e012c35
  4034fe:	jnp    0x403490
  403500:	call   0x4564:0x5a1f551a
  403507:	and    DWORD PTR [esi+0x24],0xffffff83
  40350b:	push   es
  40350c:	dec    ecx
  40350d:	jno    0x403546
  40350f:	sub    eax,0xf4cfa2bd
  403514:	push   edx
  403515:	pop    ds
  403516:	xor    eax,0x67093751
  40351b:	test   BYTE PTR [esi+0x4e],bl
  40351e:	aas    
  40351f:	into   
  403520:	fdivrp st(2),st
  403522:	addr16 es (bad) 
  403525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403526:	sti    
  403527:	sub    edx,edi
  403529:	nop
  40352a:	test   DWORD PTR [eax-0x3adedc8d],esp
  403530:	bnd jg 0x4034fe
  403533:	fistp  WORD PTR [esi]
  403535:	mul    DWORD PTR [ebx]
  403537:	or     esp,DWORD PTR [esi+edi*2-0x4bbaf955]
  40353e:	repnz out dx,eax
  403540:	push   esp
  403541:	ror    ah,cl
  403543:	xchg   BYTE PTR [esp+esi*8-0x58bf8f35],cl
  40354a:	xchg   ebp,eax
  40354b:	cmp    bh,BYTE PTR [ecx+ecx*4+0x674fe56c]
  403552:	rcl    BYTE PTR [ebx],cl
  403554:	xchg   ebp,eax
  403555:	jg     0x403542
  403557:	dec    edx
  403558:	jae    0x40358e
  40355a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40355b:	and    ebx,DWORD PTR [ebx+ebx*2-0x842785f]
  403562:	cmp    esp,esi
  403564:	clc    
  403565:	pop    ebx
  403566:	lods   al,BYTE PTR ds:[esi]
  403567:	mov    dl,0x57
  403569:	lea    ecx,ds:0xfc48bd59
  40356f:	test   BYTE PTR [esi-0x58c3fbf9],dl
  403575:	sbb    bl,BYTE PTR [esi]
  403577:	loop   0x4035f7
  403579:	push   ebx
  40357a:	lea    ebp,[eax]
  40357c:	clc    
  40357d:	cmp    eax,0xa0911c97
  403582:	jno    0x40354b
  403584:	xor    bl,dl
  403586:	test   eax,0xa2004b23
  40358b:	mov    ebx,0x587b5749
  403590:	call   0x9225cf8f
  403595:	test   al,0xdf
  403597:	outs   dx,DWORD PTR ds:[esi]
  403598:	gs loope 0x4035f0
  40359b:	pmaddwd mm3,QWORD PTR [edi+0x21]
  40359f:	jns    0x40352b
  4035a1:	sub    ecx,DWORD PTR [edi-0x1e]
  4035a4:	xchg   eax,ecx
  4035a6:	stc    
  4035a7:	outs   dx,BYTE PTR ds:[esi]
  4035a8:	cmc    
  4035a9:	cmp    edx,ebx
  4035ab:	pop    ds
  4035ac:	rcl    BYTE PTR [eax-0x2570703f],0xc0
  4035b3:	sti    
  4035b4:	outs   dx,BYTE PTR ds:[esi]
  4035b5:	jmp    0xbeb3:0xd98a278
  4035bc:	ret    0x4b1f
  4035bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035c0:	punpckldq mm5,DWORD PTR [ebx-0xb]
  4035c4:	lods   eax,DWORD PTR ds:[esi]
  4035c5:	outs   dx,DWORD PTR ds:[esi]
  4035c6:	maskmovq mm5,mm2
  4035c9:	aad    0xd2
  4035cb:	(bad)  
  4035cc:	inc    BYTE PTR [ebx+0x30]
  4035cf:	dec    edi
  4035d0:	or     DWORD PTR [ebx],eax
  4035d2:	adc    eax,0x74371222
  4035d7:	pop    eax
  4035d8:	unpckhps xmm5,xmm5
  4035db:	push   ds
  4035dc:	pop    edi
  4035dd:	cli    
  4035de:	dec    eax
  4035df:	sub    BYTE PTR [edi],dl
  4035e1:	fmul   DWORD PTR [ebp+0x4a]
  4035e4:	inc    eax
  4035e5:	(bad)  
  4035e6:	mov    bh,0xe0
  4035e8:	cli    
  4035e9:	inc    edi
  4035ea:	std    
  4035eb:	sbb    edi,edi
  4035ed:	pop    ds
  4035ee:	jo     0x40365d
  4035f0:	sub    al,0xfc
  4035f2:	mov    eax,0x4eb4fd36
  4035f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035f8:	test   al,0x89
  4035fa:	jmp    0xf0b61a5d
  4035ff:	(bad)  
  403600:	xchg   esi,eax
  403601:	and    al,0x16
  403603:	ret    
  403604:	mov    ds:0xc7e0168a,al
  403609:	out    dx,eax
  40360a:	xlat   BYTE PTR ds:[ebx]
  40360b:	cmp    edi,edi
  40360d:	dec    esi
  40360f:	lock scas al,BYTE PTR es:[edi]
  403611:	push   ds
  403612:	ds jl  0x4035a2
  403615:	dec    ebx
  403616:	data16 loope 0x403651
  403619:	adc    cl,BYTE PTR [esi+0x68d595e9]
  40361f:	aas    
  403620:	sar    DWORD PTR [eax-0x21f011a7],cl
  403626:	mov    ds:0x48f82d47,eax
  40362b:	fwait
  40362c:	pop    ebx
  40362d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40362e:	inc    esi
  40362f:	(bad)  
  403630:	ret    0xc8b
  403633:	pushf  
  403634:	out    0x5f,al
  403636:	jne    0x40369b
  403638:	sbb    BYTE PTR ds:0xd84e9b41,dl
  40363e:	fimul  DWORD PTR [ebp-0x7c844565]
  403644:	(bad)  
  403645:	jb     0x4036b9
  403647:	push   ecx
  403648:	sub    al,0x92
  40364a:	sahf   
  40364b:	jle    0x403686
  40364d:	xchg   BYTE PTR [eax],al
  40364f:	pop    ds
  403650:	jno    0x4035e8
  403652:	mov    bh,0xe
  403654:	sbb    edi,DWORD PTR [ebx-0x50]
  403657:	shl    BYTE PTR [esi+0x45b05c5a],0xfe
  40365e:	lods   eax,DWORD PTR ds:[esi]
  40365f:	ds stc 
  403661:	mov    esp,0x90092c15
  403666:	dec    esi
  403667:	jo     0x4036e6
  403669:	cmp    BYTE PTR [ebp-0x71d47f0d],dh
  40366f:	lods   al,BYTE PTR ds:[esi]
  403670:	adc    al,0x8b
  403672:	jae    0x403639
  403674:	loopne 0x403610
  403676:	jb     0x4036e2
  403678:	push   ss
  403679:	xchg   ebx,eax
  40367a:	xchg   esi,eax
  40367b:	lahf   
  40367c:	xor    esi,DWORD PTR [ebp-0x5e]
  40367f:	hlt    
  403680:	repz or BYTE PTR [eax],dh
  403683:	jb     0x403697
  403685:	js     0x4036a3
  403687:	ins    BYTE PTR es:[edi],dx
  403688:	push   0x20
  40368a:	test   dh,bl
  40368c:	or     bh,BYTE PTR [ebp+0x16]
  40368f:	and    eax,0x1387196b
  403694:	jg     0x403679
  403696:	rcl    DWORD PTR [ebp+eiz*1-0x487ec565],cl
  40369d:	or     eax,0x15b2c593
  4036a2:	ins    DWORD PTR es:[edi],dx
  4036a3:	xchg   esp,eax
  4036a4:	js     0x4036f8
  4036a6:	rol    DWORD PTR [esi-0xa],1
  4036a9:	gs call 0x7d29fb1
  4036af:	sbb    BYTE PTR [edx+0x665d5b3d],bl
  4036b5:	mov    ch,0x25
  4036b7:	test   BYTE PTR [ebx],0x8
  4036ba:	push   0x989e782f
  4036bf:	add    eax,0x920c6635
  4036c4:	retf   
  4036c5:	dec    esp
  4036c6:	cmp    BYTE PTR [edi-0x3f7250da],ah
  4036cc:	sti    
  4036cd:	jb     0x40366c
  4036cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036d0:	not    BYTE PTR [edi-0x6b7af7b5]
  4036d6:	sub    bh,BYTE PTR [esi+0x4cd398e5]
  4036dc:	es cmp ch,ah
  4036df:	and    DWORD PTR [edx],esi
  4036e1:	cli    
  4036e2:	mov    ebx,0x1721838b
  4036e7:	push   DWORD PTR [eax-0x60]
  4036ea:	sub    BYTE PTR [edx-0x517b0106],dh
  4036f0:	jg     0x40372c
  4036f2:	sbb    al,0xf3
  4036f4:	sahf   
  4036f5:	ins    DWORD PTR es:[edi],dx
  4036f6:	cmp    al,0xfc
  4036f8:	sub    eax,ebp
  4036fa:	cli    
  4036fb:	jg     0x403683
  4036fd:	mov    edi,0xf6b2f34f
  403702:	inc    edx
  403703:	or     esp,DWORD PTR [ebx+0x89c9a98]
  403709:	xor    BYTE PTR [ecx+0x273d6a43],ch
  40370f:	mov    ds:0xafc63548,al
  403714:	pusha  
  403715:	fwait
  403716:	cmp    ecx,ecx
  403718:	mov    edx,0x3ae8ac49
  40371d:	loope  0x40370f
  40371f:	(bad)  
  403720:	out    0xa9,eax
  403722:	je     0x403745
  403724:	fsub   QWORD PTR [ebp+0x9f4a799]
  40372a:	ret    0xa3b8
  40372d:	fadd   QWORD PTR [ebx+0xc39d479]
  403733:	into   
  403734:	je     0x40371a
  403736:	add    BYTE PTR [eax-0x70],dl
  403739:	fsincos 
  40373b:	cwde   
  40373c:	xchg   edx,eax
  40373d:	pop    es
  40373e:	cmp    al,0x37
  403740:	mov    ah,0x22
  403742:	sub    eax,DWORD PTR [ebx-0x59]
  403745:	mov    ebp,0x4d86ec8b
  40374a:	mov    bh,cl
  40374c:	dec    ebp
  40374d:	rcr    al,1
  40374f:	scas   eax,DWORD PTR es:[edi]
  403750:	and    edi,DWORD PTR [ebx+0x58]
  403753:	cmp    DWORD PTR [edx-0x2a],edx
  403756:	or     cl,BYTE PTR [eax]
  403758:	dec    edi
  403759:	dec    ecx
  40375a:	in     eax,0x15
  40375c:	arpl   ax,cx
  40375e:	dec    edi
  40375f:	push   cs
  403760:	mov    cl,0x7
  403762:	push   edx
  403763:	sub    eax,0x577881c7
  403768:	out    dx,al
  403769:	or     cl,ah
  40376b:	jg     0x403755
  40376d:	std    
  40376e:	rcl    BYTE PTR [ecx],cl
  403770:	xchg   BYTE PTR ds:0x5f24b146,dl
  403776:	jns    0x4037d5
  403778:	jmp    0xfcab:0xa850ed38
  40377f:	arpl   WORD PTR ds:0xfdf8dc0f,si
  403785:	xchg   ebx,eax
  403786:	ja     0x40374a
  403788:	jae    0x403714
  40378a:	or     DWORD PTR [edx],edx
  40378c:	(bad)  
  40378d:	ret    0x6d98
  403790:	fmul   QWORD PTR [edi-0x247e854b]
  403796:	sbb    al,0x98
  403798:	xor    eax,DWORD PTR [edi+0x7e]
  40379b:	mov    eax,0x4d0363b7
  4037a0:	mov    al,ah
  4037a2:	mov    esi,0x907d01c6
  4037a7:	jne    0x40380f
  4037a9:	mov    eax,0x4ffa4322
  4037ae:	jl     0x4037ad
  4037b0:	rcr    ebx,1
  4037b2:	ret    0x327c
  4037b5:	sub    eax,0xef1f2f69
  4037ba:	ss sysexit 
  4037bd:	jecxz  0x403773
  4037bf:	adc    esi,0xffffffd7
  4037c2:	sub    bh,ch
  4037c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037c5:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4037c7:	pop    ebp
  4037c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037c9:	jp     0x403844
  4037cb:	cdq    
  4037cc:	(bad)  
  4037cd:	in     al,dx
  4037ce:	sahf   
  4037cf:	loop   0x403820
  4037d1:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4037d3:	mov    ebx,0xcb079eeb
  4037d8:	(bad)  
  4037da:	not    BYTE PTR [ebp+0x22]
  4037dd:	add    al,ch
  4037df:	add    al,0xab
  4037e1:	push   cs
  4037e2:	or     eax,0xc94bfef0
  4037e7:	push   ebp
  4037e8:	in     al,0x82
  4037ea:	das    
  4037eb:	stc    
  4037ec:	mov    dl,0xf9
  4037ee:	sti    
  4037ef:	mov    dl,0xb9
  4037f1:	outs   dx,BYTE PTR ds:[esi]
  4037f2:	cmp    edx,esi
  4037f4:	sbb    BYTE PTR [eax-0x2aa118a6],bl
  4037fa:	int    0x8e
  4037fc:	int3   
  4037fd:	stos   BYTE PTR es:[di],al
  4037ff:	mov    BYTE PTR [edx-0x4e],dh
  403802:	sar    BYTE PTR [esp+edx*1-0x21806d36],cl
  403809:	ins    DWORD PTR es:[edi],dx
  40380a:	cmp    eax,0xb8e3d17e
  40380f:	retf   
  403810:	je     0x403801
  403812:	std    
  403813:	xor    bl,BYTE PTR [esi]
  403815:	mov    cl,0x7b
  403817:	or     BYTE PTR [esi+0x4013396],dl
  40381d:	xchg   ebx,eax
  40381e:	mov    eax,ds:0x5e76af4d
  403823:	or     ebp,DWORD PTR [ebp+0x3b16561f]
  403829:	or     ecx,DWORD PTR [edx+eiz*2-0x3de9912c]
  403830:	sub    eax,0x1fc6768a
  403835:	jg     0x4037fc
  403837:	fcomp  DWORD PTR [edi-0x4dd49c2d]
  40383d:	faddp  st(4),st
  40383f:	sub    al,0x9a
  403841:	pop    ecx
  403842:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403843:	fsubr  DWORD PTR [eax+0x772967f4]
  403849:	mov    ebp,0x475e47e0
  40384e:	mov    cs,ebp
  403850:	jno    0x40387e
  403852:	sbb    ebx,ebp
  403854:	(bad)  
  403855:	and    eax,0x1542e075
  40385a:	dec    edi
  40385b:	inc    edi
  40385c:	sub    BYTE PTR [ecx],al
  40385e:	mov    cs,WORD PTR [ebx]
  403860:	jge    0x4038d3
  403862:	push   esi
  403863:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403864:	push   eax
  403865:	int3   
  403866:	ret    
  403867:	les    esi,FWORD PTR [edx]
  403869:	pop    ebp
  40386b:	loop   0x40389e
  40386d:	test   BYTE PTR fs:[edx],dh
  403870:	dec    esp
  403871:	push   0xb1e7ecf9
  403876:	xchg   esp,eax
  403877:	stos   BYTE PTR es:[edi],al
  403878:	push   ebp
  403879:	(bad)  
  40387a:	add    eax,0x974cbf4
  40387f:	lods   eax,DWORD PTR ds:[esi]
  403880:	mov    eax,ds:0xe336cc88
  403885:	or     bl,cl
  403887:	daa    
  403888:	mov    BYTE PTR [ebx+0x66],dl
  40388b:	nop
  40388c:	scas   al,BYTE PTR es:[edi]
  40388d:	in     eax,dx
  40388e:	dec    esi
  40388f:	loopne 0x40386a
  403891:	jo     0x403882
  403893:	sbb    ebp,DWORD PTR [eax-0x49e989f]
  403899:	or     DWORD PTR ds:0x178194c7,esi
  40389f:	rol    BYTE PTR [eax+eax*4],1
  4038a2:	jns    0x4038b1
  4038a4:	xor    dl,BYTE PTR [esi-0x7]
  4038a7:	xchg   ebp,eax
  4038a8:	mov    esp,0x659f991f
  4038ad:	pop    esp
  4038ae:	mov    DWORD PTR [esp+eax*4-0x21],edx
  4038b2:	pop    ss
  4038b3:	push   0x7d
  4038b5:	push   esp
  4038b6:	rcr    al,0x96
  4038b9:	fcmovbe st,st(3)
  4038bb:	pop    esp
  4038bc:	cs (bad) 
  4038be:	jmp    0x40388e
  4038c0:	and    ebp,DWORD PTR [edi-0x50]
  4038c3:	add    DWORD PTR [esi-0x54b5797],0x83b9a553
  4038cd:	dec    ebx
  4038ce:	dec    ebx
  4038cf:	in     al,dx
  4038d0:	pop    esp
  4038d1:	jnp    0x40386e
  4038d3:	dec    edi
  4038d4:	mov    esp,0xbe6a166a
  4038d9:	jmp    0xee436c65
  4038de:	push   ebp
  4038df:	xchg   esi,eax
  4038e0:	inc    esi
  4038e1:	shr    DWORD PTR [esi+0x54d601e6],0x45
  4038e8:	retf   
  4038e9:	(bad)  
  4038eb:	repz xor esi,eax
  4038ee:	push   ds
  4038ef:	cmp    DWORD PTR [edi-0x4],0x1
  4038f3:	imul   edi,DWORD PTR [ebx+edi*8],0x43a9879e
  4038fa:	sbb    esi,DWORD PTR [eax-0x731ff0ff]
  403900:	cmp    DWORD PTR [ebx-0x22],0x7ec95b25
  403907:	cs pop edi
  403909:	xchg   esp,eax
  40390a:	inc    edx
  40390b:	jl     0x4038a5
  40390d:	cmp    DWORD PTR [ecx+0x21],edi
  403910:	mov    esi,0x5c106069
  403915:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403916:	xchg   ebp,eax
  403917:	lahf   
  403918:	pop    eax
  403919:	in     al,dx
  40391a:	mov    dl,cl
  40391c:	pop    ebx
  40391d:	cwde   
  40391e:	iret   
  40391f:	in     eax,dx
  403920:	mov    ah,cl
  403922:	js     0x40390d
  403924:	push   edx
  403925:	mov    ah,0x6f
  403927:	imul   edi,edi,0xb4d31fb6
  40392d:	sub    BYTE PTR gs:[ebx-0x20],ah
  403931:	push   esi
  403932:	ins    BYTE PTR es:[edi],dx
  403933:	mov    eax,ds:0x97738107
  403938:	pop    eax
  403939:	sub    eax,0xe509c473
  40393e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40393f:	jmp    0x403925
  403941:	icebp  
  403942:	jo     0x403970
  403944:	iret   
  403945:	les    esi,FWORD PTR [edi+0x7c]
  403948:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403949:	cs push ds
  40394b:	sbb    edx,DWORD PTR [eax]
  40394d:	pop    esp
  40394e:	cmp    bl,BYTE PTR [edi]
  403950:	fwait
  403951:	mov    esp,0xe785302f
  403956:	dec    eax
  403957:	push   ebp
  403958:	aam    0x25
  40395a:	push   es
  40395b:	out    0xc,eax
  40395d:	loope  0x4038ed
  40395f:	imul   ebx,DWORD PTR [ebp-0x48],0x1
  403963:	sbb    ebx,ebx
  403965:	mov    esp,0x3dc3a006
  40396a:	nop
  40396b:	push   edx
  40396c:	jnp    0x403969
  40396e:	add    eax,0x3d2b4cdf
  403973:	arpl   WORD PTR [ebp-0x15],cx
  403976:	adc    al,0x7a
  403978:	xor    edi,ebp
  40397a:	and    DWORD PTR [edi-0x4c7eaf32],ebp
  403980:	dec    edi
  403981:	call   0x69bb:0x71085fcc
  403988:	lea    esp,[ebx+0x5738ac58]
  40398e:	sbb    eax,0x74507e81
  403993:	(bad)  
  403994:	popf   
  403995:	pop    edx
  403996:	sti    
  403997:	sub    edx,DWORD PTR [esi]
  403999:	lahf   
  40399a:	pop    ebx
  40399b:	adc    eax,0xfca61f2a
  4039a0:	rol    DWORD PTR [ecx+eiz*4-0x30],1
  4039a4:	sbb    DWORD PTR [ebx+0x4e3d1fbf],ecx
  4039aa:	(bad)  
  4039ab:	xor    ch,BYTE PTR [eax+esi*8-0x240ebf5c]
  4039b2:	push   edx
  4039b3:	icebp  
  4039b4:	popa   
  4039b5:	fild   QWORD PTR [ebx]
  4039b7:	lock fwait
  4039b9:	(bad)  
  4039ba:	(bad)  
  4039bb:	xchg   edi,eax
  4039bc:	ss inc esp
  4039be:	push   edx
  4039bf:	pop    ebp
  4039c0:	xchg   edi,eax
  4039c1:	xor    BYTE PTR [ecx-0x47],cl
  4039c4:	adc    eax,0x4dfb00c0
  4039c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039ca:	push   0xff3ff43e
  4039cf:	mov    esp,0xf34c8ab9
  4039d4:	xlat   BYTE PTR ds:[ebx]
  4039d5:	sub    BYTE PTR [esi+esi*2-0xffb43a2],0x6d
  4039dd:	jmp    0x403a3b
  4039df:	or     DWORD PTR [ecx],esi
  4039e1:	loopne 0x403a2b
  4039e3:	jle    0x403a24
  4039e5:	clc    
  4039e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039e7:	(bad)  
  4039e8:	(bad)  
  4039ea:	xchg   esp,eax
  4039eb:	push   esp
  4039ec:	cld    
  4039ed:	repz cdq 
  4039ef:	inc    ebp
  4039f0:	or     BYTE PTR [ebx-0x6b],dl
  4039f3:	sti    
  4039f4:	pop    ebx
  4039f5:	sti    
  4039f6:	mov    ecx,0x4df07abc
  4039fb:	repz or dh,BYTE PTR [edx]
  4039fe:	aas    
  4039ff:	data16 (bad) 
  403a01:	sbb    eax,0xb2219bf2
  403a06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a07:	test   BYTE PTR [esi],0x4f
  403a0a:	in     eax,0xe8
  403a0c:	outs   dx,DWORD PTR ds:[esi]
  403a0d:	popf   
  403a0e:	dec    eax
  403a0f:	push   edi
  403a10:	loopne 0x4039cd
  403a12:	jb     0x4039fe
  403a14:	test   BYTE PTR [esi+0x2d],0x96
  403a18:	xchg   ebp,eax
  403a19:	sub    ecx,DWORD PTR es:[eax+ecx*1-0x4c]
  403a1e:	loope  0x4039bc
  403a20:	in     eax,dx
  403a21:	xor    DWORD PTR [ebx+0xf],0x52
  403a25:	dec    ebp
  403a26:	lods   al,BYTE PTR ds:[si]
  403a28:	pop    esi
  403a29:	mov    esp,0x152d2244
  403a2e:	int3   
  403a2f:	pop    esp
  403a30:	stc    
  403a31:	adc    al,0xd7
  403a33:	and    al,0x24
  403a35:	mov    al,ds:0xbce45aba
  403a3a:	retf   
  403a3b:	clc    
  403a3c:	mov    eax,ds:0x7fb2b2d8
  403a41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a42:	pushf  
  403a43:	mov    ah,0xb1
  403a45:	nop
  403a46:	and    BYTE PTR [eax],dl
  403a48:	pop    esp
  403a49:	out    0xa5,al
  403a4b:	sbb    ebx,DWORD PTR [ecx-0x2f]
  403a4e:	jo     0x403ab3
  403a50:	xchg   ecx,eax
  403a51:	dec    di
  403a53:	lods   al,BYTE PTR ds:[esi]
  403a54:	jmp    0x1c81:0x55ccbb9d
  403a5b:	or     al,BYTE PTR [ecx-0x3d]
  403a5e:	into   
  403a5f:	jne    0x403a76
  403a61:	mov    ds:0x8e00935c,eax
  403a66:	inc    ecx
  403a67:	mov    ds:0x28f1f15f,al
  403a6c:	cmp    DWORD PTR [edx+edx*8],ebp
  403a6f:	dec    ecx
  403a70:	(bad)  
  403a71:	push   0x97ff1f38
  403a76:	dec    BYTE PTR [ebx+0x28debf79]
  403a7c:	rcr    DWORD PTR [eax+0x16],cl
  403a7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a80:	or     eax,0x3f718831
  403a85:	retf   0xda5f
  403a88:	neg    bh
  403a8a:	inc    esp
  403a8b:	add    eax,0x74622521
  403a90:	scas   eax,DWORD PTR es:[edi]
  403a91:	cs ds cs mov al,0x6a
  403a96:	out    0x6c,eax
  403a98:	std    
  403a99:	jbe    0x403a8a
  403a9b:	leave  
  403a9c:	and    DWORD PTR ds:0xa786365b,ecx
  403aa2:	cdq    
  403aa3:	mov    ecx,0x54dbf4f5
  403aa8:	mov    dl,0xd0
  403aaa:	fldenv [eax]
  403aac:	sbb    al,0x4d
  403aae:	ja     0x403b07
  403ab0:	and    edi,DWORD PTR [esi]
  403ab2:	pusha  
  403ab3:	es push edi
  403ab5:	mov    cl,0x8
  403ab7:	pop    ecx
  403ab8:	mov    WORD PTR [eax],ss
  403aba:	add    eax,0x6f378742
  403abf:	push   eax
  403ac0:	mov    ds:0xe945b319,eax
  403ac5:	pop    es
  403ac6:	(bad)  
  403ac7:	push   esi
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	aam    0xb
  403acb:	lea    esi,[ecx+0x75]
  403ace:	out    0x91,al
  403ad0:	add    DWORD PTR [ebx],eax
  403ad2:	jp     0x403ae5
  403ad4:	xchg   BYTE PTR [ebx],cl
  403ad6:	ins    BYTE PTR es:[edi],dx
  403ad7:	add    ch,BYTE PTR [ebx]
  403ad9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ada:	(bad)
  403add:	ins    DWORD PTR es:[edi],dx
  403ade:	xor    al,0x2f
  403ae0:	loope  0x403af7
  403ae2:	scas   eax,DWORD PTR es:[edi]
  403ae3:	pushf  
  403ae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ae5:	xlat   BYTE PTR ds:[ebx]
  403ae6:	sbb    BYTE PTR [edx-0x11],ch
  403ae9:	mov    dl,0xa7
  403aeb:	xchg   ebp,eax
  403aec:	pop    ds
  403aed:	fldz   
  403aef:	into   
  403af0:	jae    0x403ab1
  403af2:	repz sub al,0x90
  403af5:	dec    edi
  403af6:	inc    esi
  403af7:	fiadd  WORD PTR [edi]
  403af9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403afa:	mov    edi,0x228a7b77
  403aff:	xchg   BYTE PTR [eax],bl
  403b01:	sub    eax,0x65441c8f
  403b06:	fs call 0x5c55:0x9a1515d8
  403b0e:	ss js  0x403a97
  403b11:	shl    DWORD PTR [edi+0x276c77d2],0x9a
  403b18:	sbb    eax,0x20ee9d62
  403b1d:	lods   eax,DWORD PTR ds:[esi]
  403b1e:	ss clc 
  403b20:	outs   dx,BYTE PTR ds:[esi]
  403b21:	pop    eax
  403b22:	mov    ch,0xa9
  403b24:	cwde   
  403b25:	out    dx,eax
  403b26:	push   ds
  403b27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b28:	jmp    0x2113:0x57939731
  403b2f:	xor    eax,0x7cb2c18d
  403b34:	cmp    eax,esi
  403b36:	and    eax,0xc382e133
  403b3b:	jo     0x403ba4
  403b3d:	es inc esi
  403b3f:	adc    dh,0xa7
  403b42:	test   DWORD PTR [edi],edi
  403b44:	(bad)  
  403b45:	sbb    al,0x1e
  403b47:	mov    ah,0x9
  403b49:	into   
  403b4a:	push   es
  403b4b:	shl    BYTE PTR [edi],1
  403b4d:	aam    0x75
  403b4f:	mov    bh,0x80
  403b51:	ins    DWORD PTR es:[di],dx
  403b53:	popf   
  403b54:	mov    edx,0xbb308065
  403b59:	mov    ch,0xa1
  403b5b:	sahf   
  403b5c:	inc    esi
  403b5d:	jl     0x403b29
  403b5f:	(bad)  
  403b61:	jg     0x403af4
  403b63:	add    ebp,DWORD PTR [ebp-0x32]
  403b66:	jl     0x403bdd
  403b68:	inc    cx
  403b6a:	loope  0x403af3
  403b6c:	lods   eax,DWORD PTR ds:[esi]
  403b6d:	cli    
  403b6e:	jp     0x403bcc
  403b70:	int    0x2c
  403b72:	and    edi,DWORD PTR [eax+eiz*2+0x498b5889]
  403b79:	inc    ebx
  403b7a:	loopne 0x403b07
  403b7c:	xor    al,0x39
  403b7e:	jg     0x403bed
  403b80:	xchg   edx,eax
  403b81:	sbb    DWORD PTR [ebx+ebx*1-0x338a5b20],0x478e067c
  403b8c:	xchg   DWORD PTR [ebp+0x18c07ec2],edx
  403b92:	ret    0x359e
  403b95:	jg     0x403b56
  403b97:	les    edx,FWORD PTR [ebp+0x5c1b01d7]
  403b9d:	sub    ch,al
  403b9f:	dec    ebp
  403ba0:	pop    es
  403ba1:	mov    bl,0xbe
  403ba3:	inc    ebp
  403ba4:	sahf   
  403ba5:	into   
  403ba6:	mov    edi,0x3c8702c3
  403bab:	push   ecx
  403bac:	and    ebx,esi
  403bae:	scas   eax,DWORD PTR es:[edi]
  403baf:	inc    edi
  403bb0:	inc    edx
  403bb1:	loop   0x403bc0
  403bb3:	xor    eax,0xcfe6e36e
  403bb8:	cmp    DWORD PTR [esi+esi*8+0x3f8a1f79],esi
  403bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bc0:	adc    ch,BYTE PTR [ebp+0x46a1b7b2]
  403bc6:	out    0x25,al
  403bc8:	inc    esp
  403bc9:	fsub   DWORD PTR [eax-0x24d38423]
  403bcf:	in     al,0x5c
  403bd1:	hlt    
  403bd2:	mov    edi,0xe9be76c6
  403bd7:	push   ecx
  403bd8:	pop    es
  403bd9:	and    dl,BYTE PTR [edi-0x4a]
  403bdc:	repz pop ebx
  403bde:	cmp    ah,ch
  403be0:	mov    ch,0x97
  403be2:	lods   al,BYTE PTR ds:[esi]
  403be3:	out    dx,al
  403be4:	adc    ch,BYTE PTR [ebx+0x66]
  403be7:	mov    ah,dh
  403be9:	mov    eax,ds:0x9417f0a2
  403bee:	test   BYTE PTR [edi+0x14],cl
  403bf1:	jae    0x403b96
  403bf3:	xor    al,0x5b
  403bf5:	sbb    al,0x12
  403bf7:	add    cl,ch
  403bf9:	push   0xcb54dd82
  403bfe:	outs   dx,DWORD PTR ds:[esi]
  403bff:	pop    ebp
  403c00:	and    edx,ecx
  403c02:	push   edi
  403c03:	dec    ebx
  403c04:	js     0x403c04
  403c06:	mov    WORD PTR ds:0x9c2e0114,?
  403c0c:	scas   al,BYTE PTR es:[edi]
  403c0d:	je     0x403bfd
  403c0f:	enter  0x8b4,0x87
  403c13:	aaa    
  403c14:	jb     0x403c89
  403c16:	scas   eax,DWORD PTR es:[edi]
  403c17:	cld    
  403c18:	mov    edx,ebp
  403c1a:	repz cmp BYTE PTR ds:0xa56c2104,ah
  403c21:	repnz stos DWORD PTR es:[edi],eax
  403c23:	sahf   
  403c24:	repnz mov gs,WORD PTR [ecx-0x21e88c39]
  403c2b:	bound  edi,QWORD PTR [esi-0x50]
  403c2e:	push   es
  403c2f:	(bad)  [eax]
  403c31:	call   0xd5ca:0x34148d23
  403c38:	push   edi
  403c39:	aas    
  403c3a:	call   0xff9f:0x45b45770
  403c41:	nop
  403c42:	pop    eax
  403c43:	pushf  
  403c44:	xor    bl,dl
  403c46:	and    esi,DWORD PTR [ebp-0x2ba254b9]
  403c4c:	std    
  403c4d:	jo     0x403c81
  403c4f:	mov    ds,WORD PTR [esi+0x47825ed7]
  403c55:	dec    esp
  403c56:	loopne 0x403c4f
  403c58:	xchg   BYTE PTR [edx-0x45cb707],bl
  403c5e:	sub    eax,0xcf0002fc
  403c63:	mov    cl,0x50
  403c65:	push   cs
  403c66:	pop    eax
  403c67:	jo     0x403cc9
  403c69:	sbb    DWORD PTR [ecx+eax*4+0x157b6859],edx
  403c70:	xor    edi,esi
  403c72:	js     0x403c47
  403c74:	jae    0x403c24
  403c76:	or     DWORD PTR ds:0x940417dc,ecx
  403c7c:	sbb    DWORD PTR [ecx+0x3d26f5ac],ecx
  403c82:	add    eax,0x529ecd9b
  403c87:	push   cs
  403c88:	mov    DWORD PTR [esp+ebx*2],ecx
  403c8b:	rcr    DWORD PTR [edx+0x461f7956],cl
  403c91:	add    DWORD PTR [eax+0x13],0xffffffa3
  403c95:	adc    DWORD PTR [ebp-0x4c],edi
  403c98:	mov    esi,0x57080c9b
  403c9d:	retf   
  403c9e:	out    dx,al
  403c9f:	add    BYTE PTR [ecx-0x7f497b6c],ah
  403ca5:	adc    al,0x1
  403ca7:	jae    0x403c65
  403ca9:	lock ret 0x591
  403cad:	loope  0x403cfa
  403caf:	aad    0xa4
  403cb1:	outs   dx,BYTE PTR ds:[esi]
  403cb2:	inc    edx
  403cb3:	inc    edi
  403cb4:	cli    
  403cb5:	push   esp
  403cb6:	scas   al,BYTE PTR es:[edi]
  403cb7:	and    al,0xdb
  403cb9:	cmp    ah,dl
  403cbb:	xor    al,dl
  403cbd:	addr16 loopne 0x403d20
  403cc0:	loopne 0x403d00
  403cc2:	or     BYTE PTR [esp+edi*2-0x3d3a3c6e],bl
  403cc9:	pop    edi
  403cca:	inc    ecx
  403ccb:	and    ah,BYTE PTR [ebx-0x2c]
  403cce:	jo     0x403d25
  403cd0:	mov    BYTE PTR [esi+ecx*2],ch
  403cd3:	scas   eax,DWORD PTR es:[edi]
  403cd4:	jne    0x403d3b
  403cd6:	cmp    eax,0x2c0261e3
  403cdb:	in     al,0x6f
  403cdd:	mov    ebp,0x49fc4269
  403ce2:	dec    eax
  403ce3:	cmp    DWORD PTR [eiz*2+0x27680a5b],ebx
  403cea:	daa    
  403ceb:	dec    edx
  403cec:	out    0xe8,eax
  403cee:	jb     0x403d08
  403cf0:	pop    esi
  403cf1:	stc    
  403cf2:	inc    ebx
  403cf3:	sahf   
  403cf4:	mov    dh,0x2
  403cf6:	push   es
  403cf7:	xor    ecx,esi
  403cf9:	jns    0x403d57
  403cfb:	or     ch,ch
  403cfd:	rol    dl,1
  403cff:	xchg   DWORD PTR [edx+0x29],edi
  403d02:	push   0x6dd70b04
  403d07:	(bad)  [edx+ecx*4]
  403d0a:	adc    DWORD PTR [ecx],edi
  403d0c:	not    BYTE PTR [ebp-0x34]
  403d0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d10:	cs loop 0x403cf2
  403d13:	rcl    DWORD PTR [edi+0x78cdfed],cl
  403d19:	xchg   ebx,eax
  403d1a:	stos   DWORD PTR es:[edi],eax
  403d1b:	lds    eax,FWORD PTR [eax-0x1]
  403d1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d1f:	stos   BYTE PTR es:[edi],al
  403d20:	rcl    DWORD PTR [esp+ecx*4+0x7d5d8255],0x10
  403d28:	add    ch,BYTE PTR [ebx]
  403d2a:	or     DWORD PTR [eax-0x44d99519],edx
  403d30:	movntps XMMWORD PTR [esi-0x3a43aedc],xmm4
  403d37:	ins    DWORD PTR es:[edi],dx
  403d38:	xor    eax,0xc2752a
  403d3d:	ror    BYTE PTR [ebx+edx*8],0xa8
  403d41:	rcl    BYTE PTR [edi],cl
  403d43:	int3   
  403d44:	jmp    0xfddf26b2
  403d49:	xchg   BYTE PTR [eax-0x18b4fa74],cl
  403d4f:	call   0x358:0xa52922df
  403d56:	jg     0x403d49
  403d58:	aaa    
  403d59:	sub    BYTE PTR [ebx-0x78],bl
  403d5c:	out    dx,al
  403d5d:	int3   
  403d5e:	popf   
  403d5f:	inc    eax
  403d60:	fld    QWORD PTR [ebx+0x76168ad]
  403d66:	add    al,0x18
  403d68:	adc    DWORD PTR ds:0xf6b2ddad,0x4a
  403d6f:	sbb    edx,0xbe0f7fd3
  403d75:	push   esp
  403d76:	cmp    BYTE PTR [ebx-0x760659d6],ah
  403d7c:	add    DWORD PTR [edi],edx
  403d7e:	xchg   ebx,eax
  403d7f:	cmc    
  403d80:	ret    0xfb14
  403d83:	and    al,0xe5
  403d85:	fwait
  403d86:	adc    bh,BYTE PTR [esi+0x6fe7eabc]
  403d8c:	mov    esi,0xa475edcd
  403d91:	iret   
  403d92:	jbe    0x403d43
  403d94:	xchg   edi,eax
  403d95:	inc    esp
  403d96:	cmp    ebx,DWORD PTR [ecx+0x46]
  403d99:	repnz adc esi,esi
  403d9c:	pop    ebx
  403d9d:	fbstp  TBYTE PTR [eax+0x6255153b]
  403da3:	mov    dl,0x0
  403da5:	mul    DWORD PTR [eax]
  403da7:	nop
  403da8:	push   ebx
  403da9:	cmp    ebp,ebp
  403dab:	mov    es,WORD PTR [ebp+0x78]
  403dae:	mov    cl,0xa9
  403db0:	mov    eax,ds:0x65b20834
  403db5:	imul   ecx,DWORD PTR [esi+0x4798c3f6],0xc3605ddf
  403dbf:	fld    TBYTE PTR [ecx+0x5de46a2c]
  403dc5:	rcl    al,cl
  403dc7:	add    DWORD PTR [ecx+esi*2+0x7b1142d5],0xcede236d
  403dd2:	pop    ebp
  403dd3:	mov    al,0x92
  403dd5:	push   ds
  403dd6:	sar    BYTE PTR [ecx],cl
  403dd8:	sahf   
  403dd9:	popf   
  403dda:	lahf   
  403ddb:	add    BYTE PTR [esi-0x51],ah
  403dde:	jne    0x403df7
  403de0:	jg     0x403d6d
  403de2:	nop
  403de3:	push   esi
  403de4:	mov    eax,0x63662b18
  403de9:	xor    al,0x73
  403deb:	dec    edx
  403dec:	add    al,0x12
  403dee:	inc    edi
  403def:	lods   eax,DWORD PTR ds:[esi]
  403df0:	mov    edi,0xd3ba3d9d
  403df5:	jmp    0x288c:0xebf6fde6
  403dfc:	or     al,0xf1
  403dfe:	jmp    0xf355:0xc07e3866
  403e05:	jmp    0x4fdb6a05
  403e0a:	js     0x403e25
  403e0c:	ret    0x595b
  403e0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e10:	lahf   
  403e11:	and    DWORD PTR cs:[edi],ebx
  403e14:	repz jnp 0x403e04
  403e17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e18:	gs mov ecx,0xacd30801
  403e1e:	push   ecx
  403e1f:	shl    BYTE PTR [ecx-0x39],cl
  403e22:	ds xor eax,0xa72c688
  403e28:	nop
  403e29:	mov    ch,0x2d
  403e2b:	adc    BYTE PTR [esi-0x67],bh
  403e2e:	jb     0x403ddb
  403e30:	dec    ecx
  403e31:	jae    0x403ea6
  403e33:	ds out 0xcc,al
  403e36:	ss nop
  403e38:	add    DWORD PTR ds:0x6f90fde1,esi
  403e3e:	jns    0x403e9c
  403e40:	outs   dx,DWORD PTR ds:[esi]
  403e41:	je     0x403e09
  403e43:	fs mov eax,0x9ea10770
  403e49:	aad    0xdf
  403e4b:	dec    eax
  403e4c:	lahf   
  403e4d:	mov    ds:0x5c4a948d,eax
  403e52:	test   al,bh
  403e54:	xchg   esi,eax
  403e55:	mov    ebx,0x321ee057
  403e5a:	dec    edx
  403e5b:	jmp    0x403ea0
  403e5d:	pop    es
  403e5e:	mov    ?,ecx
  403e60:	fcom   st(0)
  403e62:	scas   al,BYTE PTR es:[edi]
  403e63:	loopne 0x403de8
  403e65:	adc    DWORD PTR [edi+ebx*1-0x10],esp
  403e69:	(bad)  
  403e6a:	daa    
  403e6b:	daa    
  403e6c:	xchg   BYTE PTR [ecx+0x5f3bdade],dh
  403e72:	jb     0x403e6f
  403e74:	out    0xf7,al
  403e76:	out    0x36,al
  403e78:	rcr    BYTE PTR [eax+0x228af3b4],cl
  403e7e:	stc    
  403e7f:	cmp    DWORD PTR [edi],edi
  403e81:	cmp    ch,BYTE PTR [esi+0x28]
  403e84:	lea    edx,[eax+ecx*2+0x28a1dff3]
  403e8b:	cld    
  403e8c:	push   ebx
  403e8d:	mov    dl,0x5e
  403e8f:	test   BYTE PTR [ecx+0x40958ccc],0x4a
  403e96:	sub    esp,0x519f0b20
  403e9c:	inc    edi
  403e9d:	aam    0xb5
  403e9f:	cmp    eax,0xfbeb03e3
  403ea4:	cdq    
  403ea5:	aam    0xfb
  403ea7:	push   eax
  403ea8:	icebp  
  403ea9:	cdq    
  403eaa:	jmp    0x403eb1
  403eac:	out    dx,eax
  403ead:	sbb    al,0x3e
  403eaf:	into   
  403eb0:	mov    WORD PTR [ebx+0x7b11d8bf],?
  403eb6:	mov    DWORD PTR [ebp+edx*8-0x46],esp
  403eba:	mov    ch,BYTE PTR [edx]
  403ebc:	cmc    
  403ebd:	inc    ecx
  403ebe:	mov    ch,0x66
  403ec0:	ja     0x403e5c
  403ec2:	mov    ds:0xe80c4a4e,eax
  403ec7:	call   0x1f8d:0xd7b61002
  403ece:	(bad)
  403ed1:	(bad)  
  403ed2:	bound  esp,QWORD PTR [edi+0x2a]
  403ed5:	mov    eax,0xbff0f793
  403eda:	mov    ?,WORD PTR [edi-0x39f1daa0]
  403ee0:	sbb    al,0xc9
  403ee2:	dec    edx
  403ee3:	in     eax,dx
  403ee4:	int    0xc2
  403ee6:	loope  0x403ed3
  403ee8:	cli    
  403ee9:	xor    DWORD PTR [ebx],edi
  403eeb:	inc    ebp
  403eec:	push   edx
  403eed:	hlt    
  403eee:	xchg   ecx,eax
  403eef:	push   es
  403ef0:	aam    0x9d
  403ef2:	retf   0x30c9
  403ef5:	into   
  403ef6:	sbb    ch,BYTE PTR [ebx+esi*8-0x74]
  403efa:	leave  
  403efb:	nop
  403efc:	loop   0x403f28
  403efe:	jge    0x403ec0
  403f00:	out    dx,eax
  403f01:	jmp    0xbbda636f
  403f06:	loop   0x403f6a
  403f08:	push   ebx
  403f09:	popa   
  403f0a:	xchg   ebx,eax
  403f0b:	jge    0x403e9c
  403f0d:	xor    al,0x83
  403f0f:	outs   dx,DWORD PTR ds:[esi]
  403f10:	shr    DWORD PTR [ebx-0x11d5e96],cl
  403f16:	adc    dh,bh
  403f18:	adc    BYTE PTR [ebp+0x36075430],ch
  403f1e:	or     al,0x6b
  403f20:	xchg   DWORD PTR [edi-0x5],ebx
  403f23:	fild   WORD PTR [ebp-0x37]
  403f26:	cmp    al,0xe1
  403f28:	dec    edx
  403f29:	into   
  403f2a:	movntps XMMWORD PTR [edi],xmm7
  403f2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f2f:	mov    dh,0x3f
  403f31:	adc    al,0x3a
  403f33:	out    dx,al
  403f34:	mov    esi,DWORD PTR [ebp-0x18]
  403f37:	cmp    cl,0x7a
  403f3a:	xchg   ecx,eax
  403f3b:	in     al,0x5c
  403f3d:	call   0xf3602d5a
  403f42:	jmp    0xa53b:0xcbddf555
  403f49:	(bad)  
  403f4a:	retf   
  403f4b:	pop    ebx
  403f4c:	xor    BYTE PTR [ebx+0x3ec73ba3],0xb0
  403f53:	sti    
  403f54:	push   0xacd7fdd0
  403f59:	add    DWORD PTR [eax+0x71],edx
  403f5c:	xchg   esp,eax
  403f5d:	mov    esi,0x2c18205a
  403f62:	sbb    DWORD PTR [ebx+eiz*4-0x26ec745e],ebx
  403f69:	(bad)  
  403f6a:	or     eax,0x3fcd66c6
  403f6f:	clc    
  403f70:	cmp    eax,0x89b0b9cc
  403f75:	pop    ebx
  403f76:	or     eax,0x39c76ff2
  403f7b:	adc    BYTE PTR [edx],ah
  403f7d:	mov    ch,0xd
  403f7f:	adc    BYTE PTR [ebx+eiz*2],0xfc
  403f83:	adc    edx,DWORD PTR [ecx]
  403f85:	add    bl,0x4b
  403f88:	dec    esp
  403f89:	adc    ah,ch
  403f8b:	hlt    
  403f8c:	adc    ah,ah
  403f8e:	out    dx,eax
  403f8f:	daa    
  403f90:	gs daa 
  403f92:	sub    al,0xb7
  403f94:	fwait
  403f95:	imul   edi,DWORD PTR [ebp-0x28a1109f],0xffffff86
  403f9c:	mov    bl,0xf9
  403f9e:	pop    ebx
  403f9f:	jnp    0x403fc9
  403fa1:	sti    
  403fa2:	or     al,dh
  403fa4:	jle    0x403fb7
  403fa6:	sahf   
  403fa7:	hlt    
  403fa8:	mov    ?,WORD PTR [esi-0xd699a5]
  403fae:	aad    0xe3
  403fb0:	push   esp
  403fb1:	add    ebx,DWORD PTR ds:0x1d5f6554
  403fb7:	xchg   cl,dl
  403fb9:	push   0x5566e8f7
  403fbe:	pop    es
  403fbf:	nop
  403fc0:	xor    DWORD PTR [edx-0x18],ebx
  403fc3:	lods   al,BYTE PTR ds:[esi]
  403fc4:	jecxz  0x40402a
  403fc6:	fiadd  DWORD PTR [edx+0x1746333a]
  403fcc:	shl    DWORD PTR [edi-0x55],0xd1
  403fd0:	ins    DWORD PTR es:[edi],dx
  403fd1:	stos   BYTE PTR es:[edi],al
  403fd2:	dec    eax
  403fd3:	add    ch,BYTE PTR [ebx+edi*1]
  403fd6:	adc    al,0xe1
  403fd8:	adc    BYTE PTR [edi],ch
  403fda:	lods   al,BYTE PTR ds:[esi]
  403fdb:	cmp    DWORD PTR [edx],0x2cf8ab03
  403fe1:	push   ebp
  403fe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fe3:	xchg   DWORD PTR [edx-0x2e],esi
  403fe6:	or     al,0x59
  403fe8:	jnp    0x40401e
  403fea:	push   0xffffffba
  403fec:	loopne 0x403fa3
  403fee:	add    DWORD PTR [esi+0x1e],ebx
  403ff1:	dec    eax
  403ff2:	fistp  QWORD PTR [edi+0x40]
  403ff5:	push   ebx
  403ff6:	push   es
  403ff7:	xor    ebp,DWORD PTR [ecx-0x55]
  403ffa:	sbb    DWORD PTR [edx-0x7b80c3a9],ebp
  404000:	mov    ebx,0xd43777c
  404005:	loopne 0x404069
  404007:	sahf   
  404008:	mov    ds:0x392477e5,al
  40400d:	jne    0x403fbe
  40400f:	ret    0xabc7
  404012:	push   esi
  404013:	cdq    
  404014:	xor    dl,bl
  404016:	jge    0x404056
  404018:	add    BYTE PTR [ebx+ecx*4+0x2],0x6f
  40401d:	pop    ss
  40401e:	pop    edx
  40401f:	add    edx,DWORD PTR [esp-0x40]
  404023:	imul   bl
  404025:	pop    ebp
  404026:	adc    eax,0x8c08ffcc
  40402b:	fsubr  DWORD PTR [ebp+0x4216cd19]
  404031:	(bad)  
  404032:	loopne 0x403fe7
  404034:	xchg   ecx,eax
  404035:	shl    DWORD PTR [edi+0x1a6bbb12],0x7a
  40403c:	mov    ah,0xdb
  40403e:	xchg   edi,eax
  40403f:	loope  0x40404a
  404041:	retf   
  404042:	sti    
  404043:	sbb    bl,0xb4
  404046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404047:	repz sar ebx,cl
  40404a:	push   ebx
  40404b:	not    esi
  40404d:	lock cmp eax,0xa26a5c09
  404053:	(bad)
  404057:	fbstp  TBYTE PTR [edx-0x22b18b0f]
  40405d:	cwde   
  40405e:	xchg   DWORD PTR [ebx+ebx*2-0x18],esp
  404062:	sbb    al,0x42
  404064:	clc    
  404065:	fadd   QWORD PTR [edx]
  404067:	inc    edi
  404068:	(bad)  
  404069:	cmp    DWORD PTR [esi],ebp
  40406b:	fs add al,0x15
  40406e:	(bad)  
  40406f:	sub    BYTE PTR [edx],dh
  404071:	mov    ds:0xbbf6555f,eax
  404076:	std    
  404077:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404078:	jae    0x4040c7
  40407a:	not    DWORD PTR ds:0xe3bedc24
  404080:	xor    DWORD PTR [ecx+0x77],eax
  404083:	test   eax,0x825f3d7b
  404088:	xor    al,0x7
  40408a:	xchg   ebx,eax
  40408b:	repnz sbb eax,0xaaa27316
  404091:	inc    ebp
  404092:	xchg   edx,eax
  404093:	aam    0x6f
  404095:	icebp  
  404096:	jno    0x4040f4
  404098:	add    eax,0x864e507d
  40409d:	imul   bx,WORD PTR [ebx-0x1f],0x2c81
  4040a3:	dec    edi
  4040a4:	xor    al,0x48
  4040a6:	sub    esp,DWORD PTR ss:[ecx]
  4040a9:	xchg   DWORD PTR [eax],ebp
  4040ab:	mov    ebp,0xdb80967e
  4040b0:	popf   
  4040b1:	inc    ebp
  4040b2:	add    BYTE PTR fs:[eax-0x3fe5341a],cl
  4040b9:	push   esp
  4040ba:	mov    ebx,0x6e07eccb
  4040bf:	int    0x88
  4040c1:	not    DWORD PTR [esi-0x5b669970]
  4040c7:	(bad)  
  4040c8:	cmc    
  4040c9:	push   eax
  4040ca:	jmp    0x404101
  4040cc:	cs clc 
  4040ce:	push   ebx
  4040cf:	idiv   edx
  4040d1:	idiv   DWORD PTR [ecx+edi*8]
  4040d4:	aad    0x1b
  4040d6:	popf   
  4040d7:	aas    
  4040d8:	inc    edi
  4040d9:	dec    eax
  4040da:	or     eax,DWORD PTR [ecx+0x38]
  4040dd:	jnp    0x404111
  4040df:	(bad)  [ecx+0xc5c8501]
  4040e5:	jnp    0x40411a
  4040e7:	hlt    
  4040e8:	dec    ecx
  4040e9:	cmp    eax,0x84934058
  4040ee:	pop    ds
  4040ef:	fidivr DWORD PTR [ebx-0x59]
  4040f2:	ds popa 
  4040f4:	mov    ch,0x9
  4040f6:	xor    DWORD PTR [esi-0x9],ebp
  4040f9:	clc    
  4040fa:	dec    edx
  4040fb:	(bad)  
  4040fc:	mov    cl,0x59
  4040fe:	ficom  WORD PTR [ecx]
  404100:	clc    
  404101:	fld    DWORD PTR [eax-0x74fcc14c]
  404107:	es jecxz 0x40409c
  40410a:	add    ecx,DWORD PTR [eax-0x5]
  40410d:	mov    DWORD PTR [edi+0x22c7c05d],esi
  404113:	test   al,0x93
  404115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404116:	ror    BYTE PTR [edi],0x80
  404119:	leave  
  40411a:	imul   ecx,DWORD PTR [esi+0x2a],0xd8576a70
  404121:	push   ebx
  404122:	jg     0x404158
  404124:	push   ebx
  404125:	sbb    BYTE PTR [eax+0x3c],cl
  404128:	ja     0x404122
  40412a:	mov    eax,ds:0xc48c0332
  40412f:	(bad)  
  404130:	and    al,BYTE PTR [ecx-0x56]
  404133:	mov    bl,0x13
  404135:	repnz add eax,0xe79e79c
  40413b:	or     DWORD PTR [edx+0x6aaab9ab],eax
  404141:	dec    eax
  404142:	rol    DWORD PTR [ecx],0x5
  404145:	dec    ebp
  404146:	xchg   ecx,eax
  404147:	mov    es,WORD PTR [eax]
  404149:	pop    es
  40414a:	cmp    al,0x99
  40414c:	mov    dl,0x23
  40414e:	jg     0x4041b2
  404150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404151:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404152:	stos   DWORD PTR es:[edi],eax
  404153:	cmp    al,0x8a
  404155:	or     DWORD PTR [esi-0x72],ebx
  404158:	scas   eax,DWORD PTR es:[edi]
  404159:	ss cmp al,0x8c
  40415c:	push   edi
  40415d:	popf   
  40415e:	mov    eax,0xfed75126
  404163:	sbb    eax,0x293b993f
  404169:	fwait
  40416a:	inc    ebx
  40416b:	fist   WORD PTR [eax]
  40416d:	stos   BYTE PTR es:[edi],al
  40416e:	stos   DWORD PTR es:[edi],eax
  40416f:	stos   DWORD PTR es:[edi],eax
  404170:	cmp    al,0xc9
  404172:	mov    bh,0x4f
  404174:	jo     0x40418d
  404176:	dec    ebp
  404177:	cld    
  404178:	sbb    dl,bh
  40417a:	data16 lods al,BYTE PTR ds:[si]
  40417d:	adc    BYTE PTR [esi],cl
  40417f:	sbb    al,0xc2
  404181:	inc    edi
  404182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404183:	sub    eax,0xa66e29ec
  404188:	(bad)
  40418c:	jb     0x40418a
  40418e:	adc    DWORD PTR [ebx-0x4110469c],edi
  404194:	cmp    bh,BYTE PTR [edi]
  404196:	test   eax,0x39012eaf
  40419b:	rcl    BYTE PTR [edx+0x655c7a04],cl
  4041a1:	dec    esi
  4041a2:	or     ah,BYTE PTR [ebp+0x1c]
  4041a5:	jg     0x40414a
  4041a7:	ret    0x8fc1
  4041aa:	aas    
  4041ab:	es cmp eax,0x3059c7a9
  4041b1:	ret    0xa559
  4041b4:	mov    al,ds:0x8045b00c
  4041b9:	push   ecx
  4041ba:	and    eax,DWORD PTR [ecx+0x4b667f93]
  4041c0:	fucomip st,st(2)
  4041c2:	push   ds
  4041c3:	cmp    ecx,eax
  4041c5:	cs call 0x5194:0xf4a56c3e
  4041cd:	lods   al,BYTE PTR ds:[esi]
  4041ce:	or     BYTE PTR [edi-0x568920f4],dl
  4041d4:	in     al,0xe4
  4041d6:	xchg   edi,eax
  4041d7:	xor    al,0xe2
  4041d9:	pop    edx
  4041da:	xor    DWORD PTR [edi-0x5b3b501a],0xffffffdf
  4041e1:	(bad)  
  4041e2:	test   al,0xb5
  4041e4:	mov    bh,0x11
  4041e6:	xchg   ebx,eax
  4041e7:	push   ebx
  4041e8:	sar    DWORD PTR [eax+0x6a3b44b4],cl
  4041ee:	mov    al,0xd1
  4041f0:	adc    DWORD PTR [edi-0x4ae740b7],0x76
  4041f7:	fcmovnb st,st(1)
  4041f9:	imul   esi,DWORD PTR [esp+edi*1-0x61],0xffffffb6
  4041fe:	adc    bl,cl
  404200:	mov    cl,0x99
  404202:	in     al,0xbe
  404204:	xchg   ebx,eax
  404205:	and    BYTE PTR [ebp-0x40006d99],cl
  40420b:	leave  
  40420c:	das    
  40420d:	repnz iret 
  40420f:	xchg   edi,eax
  404210:	adc    BYTE PTR [edx+eax*4],ah
  404213:	add    BYTE PTR [eax],cl
  404215:	mov    es,ebx
  404217:	cwde   
  404218:	push   0x9f53e396
  40421d:	push   ss
  40421e:	addr16 pop ecx
  404220:	sub    BYTE PTR [esi+eiz*4-0xb],0xc3
  404225:	(bad)
  404228:	fcomi  st,st(6)
  40422a:	sti    
  40422b:	inc    edx
  40422c:	cmp    bl,BYTE PTR [eax+0x940dd1]
  404232:	jne    0x404237
  404234:	jecxz  0x404285
  404236:	jl     0x4041fa
  404238:	inc    esp
  404239:	and    eax,0xb39d0c8d
  40423e:	outs   dx,DWORD PTR ds:[esi]
  40423f:	sbb    ch,dl
  404241:	call   FWORD PTR [ecx-0x44016c7f]
  404247:	jb     0x4042bd
  404249:	ds push ebx
  40424b:	outs   dx,BYTE PTR ds:[esi]
  40424c:	or     BYTE PTR [edi-0x31],0x36
  404250:	test   eax,0xd1df3da7
  404255:	sub    al,0x12
  404257:	(bad)  [ebx]
  404259:	(bad)  
  40425a:	dec    ebp
  40425b:	shl    BYTE PTR [edi+0x70],0x4c
  40425f:	adc    ebp,DWORD PTR ds:0x8103218e
  404265:	leave  
  404266:	dec    sp
  404268:	test   bh,dh
  40426a:	retf   0x5e6d
  40426d:	fisubr DWORD PTR [edx+0x68d7b20f]
  404273:	xchg   BYTE PTR [ebx-0x7159310e],dh
  404279:	pusha  
  40427a:	jne    0x4042f9
  40427c:	in     al,dx
  40427d:	sbb    eax,DWORD PTR [ecx-0x24]
  404280:	mov    esi,0xc3f780fb
  404285:	vpsrld xmm3,xmm1,xmm2
  404289:	xchg   edx,eax
  40428a:	xor    BYTE PTR ds:0xfd23e796,dh
  404290:	cdq    
  404291:	dec    esi
  404292:	test   DWORD PTR [ebp+0x2c],edi
  404295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404296:	je     0x4042ed
  404298:	dec    edx
  404299:	xchg   esi,eax
  40429a:	jnp    0x40429a
  40429c:	cmc    
  40429d:	dec    ebp
  40429e:	xor    esp,DWORD PTR [edi+0x7004806]
  4042a4:	les    esp,FWORD PTR ds:0x7661621f
  4042aa:	(bad)  
  4042ab:	shl    DWORD PTR [ebx],cl
  4042ad:	mov    bl,0x45
  4042af:	cmp    bl,dl
  4042b1:	xor    al,0x40
  4042b3:	scas   al,BYTE PTR es:[edi]
  4042b4:	repnz add BYTE PTR [edx],bh
  4042b7:	dec    ecx
  4042b8:	mov    dl,0xcc
  4042ba:	lahf   
  4042bb:	ret    0x76f0
  4042be:	lods   al,BYTE PTR ds:[esi]
  4042bf:	mov    al,0x2e
  4042c1:	push   cs
  4042c2:	lods   al,BYTE PTR ds:[esi]
  4042c3:	pop    esp
  4042c4:	lods   al,BYTE PTR ds:[esi]
  4042c5:	outs   dx,DWORD PTR ds:[esi]
  4042c6:	pop    ebp
  4042c8:	bnd je 0x4042e4
  4042cb:	aaa    
  4042cc:	fnsave [eax]
  4042ce:	and    eax,ebx
  4042d0:	xor    al,0xe1
  4042d2:	mov    bh,BYTE PTR [edx+0x3a]
  4042d5:	rcl    BYTE PTR [ebp+0x43],0xf8
  4042d9:	retfw  0x6def
  4042dd:	dec    ebx
  4042de:	call   0xc00a:0x9e243238
  4042e5:	adc    DWORD PTR [ecx],ecx
  4042e7:	or     DWORD PTR [esi-0x4f],0x24
  4042eb:	shr    DWORD PTR [edi],0x73
  4042ee:	mov    ds:0x351f46c7,al
  4042f3:	bound  esi,QWORD PTR [edx]
  4042f5:	add    al,0x54
  4042f7:	or     ecx,ebp
  4042f9:	mov    al,ds:0xa6bf2693
  4042fe:	push   edx
  4042ff:	lahf   
  404300:	loopne 0x404305
  404302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404303:	mov    ds:0xcdaa06bb,al
  404308:	imul   ebp,DWORD PTR [ebx+edi*8],0xffffff8c
  40430c:	push   esi
  40430d:	sbb    edx,ebp
  40430f:	ss xchg edx,eax
  404311:	dec    esp
  404312:	sub    eax,0x13ce1d68
  404317:	gs xchg ecx,eax
  404319:	jg     0x404327
  40431b:	mov    DWORD PTR [eax-0x4f08f75e],edi
  404321:	addr16 jmp esp
  404324:	adc    al,0xed
  404326:	outs   dx,BYTE PTR ds:[esi]
  404327:	and    eax,0xba9c7d7d
  40432c:	data16 clc 
  40432e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40432f:	inc    ebp
  404330:	or     eax,0xcd81eb66
  404335:	push   ss
  404336:	cmp    dh,BYTE PTR [edx+edi*1+0x434b0259]
  40433d:	aas    
  40433e:	inc    edi
  40433f:	inc    esi
  404340:	xchg   edx,eax
  404341:	and    al,0xd3
  404343:	fdivr  QWORD PTR [eax]
  404345:	call   0xe013:0x5b60fea
  40434c:	rcr    ecx,1
  40434e:	arpl   WORD PTR [ebx+0x45],di
  404351:	and    al,0x86
  404353:	mov    edi,0x4653b947
  404358:	lock sbb DWORD PTR [edi],eax
  40435b:	ja     0x4042f4
  40435d:	shl    DWORD PTR [esi-0x381c1186],1
  404363:	mov    ah,0xf7
  404365:	mov    ds:0x859ff58d,al
  40436a:	lods   eax,DWORD PTR ds:[esi]
  40436b:	mov    ch,0x80
  40436d:	in     al,dx
  40436e:	cwde   
  40436f:	or     BYTE PTR ss:[ecx],cl
  404372:	jo     0x4043a0
  404374:	sbb    cl,BYTE PTR [esi-0x580c7a4a]
  40437a:	inc    edi
  40437b:	rcr    DWORD PTR [ebx],0x86
  40437e:	cmp    ecx,ebx
  404380:	mov    ebp,0x953af898
  404385:	les    ebx,FWORD PTR ds:0xbc764b54
  40438b:	dec    ebp
  40438c:	cmp    esi,DWORD PTR [edi-0x154b71f9]
  404392:	imul   esp,DWORD PTR [ecx],0x118d9642
  404398:	jle    0x40438f
  40439a:	mov    edx,0x8585e998
  40439f:	(bad)  
  4043a0:	mov    dl,0x1
  4043a2:	in     al,dx
  4043a3:	mov    ds,WORD PTR [eax]
  4043a5:	jbe    0x4043a3
  4043a7:	hlt    
  4043a8:	push   ebx
  4043a9:	adc    ah,BYTE PTR [edi]
  4043ab:	rcr    BYTE PTR [ecx-0x6b4e206c],cl
  4043b1:	je     0x40440a
  4043b3:	xor    BYTE PTR [eax-0x473633c3],bl
  4043b9:	or     ebp,DWORD PTR [esi-0x7a6700a1]
  4043bf:	jmp    FWORD PTR [esi]
  4043c1:	fstp   DWORD PTR [esi+eax*8]
  4043c4:	cmp    BYTE PTR [edi+0x46],0x60
  4043c8:	mov    eax,ds:0x72cae0e8
  4043cd:	push   0xffffff86
  4043cf:	data16 mov bh,0x62
  4043d2:	pop    esi
  4043d3:	mov    al,ds:0x743da491
  4043d8:	test   eax,0xdbe5ec69
  4043dd:	push   esi
  4043de:	packuswb mm1,QWORD PTR [edx]
  4043e1:	push   cs
  4043e2:	ret    
  4043e3:	inc    ecx
  4043e4:	popa   
  4043e5:	aam    0xe3
  4043e7:	mov    dl,0xed
  4043e9:	mov    dh,0x39
  4043eb:	dec    ecx
  4043ec:	adc    ch,cl
  4043ee:	xor    ebx,ebx
  4043f0:	xchg   ebx,eax
  4043f1:	lods   al,BYTE PTR ds:[esi]
  4043f2:	jmp    0x404406
  4043f4:	call   0x75b2:0x55753d35
  4043fb:	int    0x78
  4043fd:	cwde   
  4043fe:	jg     0x40441d
  404400:	sbb    ebx,esp
  404402:	or     al,0x39
  404404:	push   ebp
  404405:	rol    dh,0x59
  404408:	neg    ebx
  40440a:	mov    ch,al
  40440c:	adc    ah,BYTE PTR ds:0x4610d8ac
  404412:	loop   0x404429
  404414:	jne    0x40441c
  404416:	lahf   
  404417:	aam    0x7b
  404419:	pushf  
  40441a:	mov    edi,0xbdda8f0a
  40441f:	fldenv [ecx+0x43]
  404422:	sub    edx,DWORD PTR [edi+0x1dc8d6c6]
  404428:	add    edx,DWORD PTR [edi]
  40442a:	sar    DWORD PTR [edx],cl
  40442c:	push   0xd1787a90
  404431:	cmc    
  404432:	pop    ebp
  404433:	or     DWORD PTR [esi],edx
  404435:	ins    DWORD PTR es:[edi],dx
  404436:	push   edx
  404437:	xlat   BYTE PTR ds:[ebx]
  404438:	out    dx,al
  404439:	jbe    0x404405
  40443b:	popw   es
  40443d:	push   edx
  40443e:	call   0x3343:0xb63177ef
  404445:	call   0x3604648d
  40444a:	ja     0x404481
  40444c:	test   al,0xe5
  40444e:	outs   dx,BYTE PTR ds:[esi]
  40444f:	into   
  404450:	sti    
  404451:	outs   dx,DWORD PTR ds:[esi]
  404452:	and    dh,dl
  404454:	lahf   
  404455:	mov    eax,ds:0x80ea0f2f
  40445a:	or     ecx,eax
  40445c:	cmp    eax,0x810f0df8
  404461:	bnd call 0x391d797
  404467:	jle    0x4044c7
  404469:	repz mov bh,0x5e
  40446c:	neg    BYTE PTR [esi]
  40446e:	test   DWORD PTR [eax+0x1a8aed43],ebp
  404474:	cdq    
  404475:	xor    BYTE PTR [edx-0xd],al
  404478:	or     al,0x23
  40447a:	test   eax,0x6306ca9a
  40447f:	mov    bl,0x72
  404481:	cdq    
  404482:	mov    bl,0x43
  404484:	out    dx,al
  404485:	leave  
  404486:	idiv   DWORD PTR [ebx-0x5ee26512]
  40448c:	adc    edx,edi
  40448e:	add    edi,ebx
  404490:	bound  ecx,QWORD PTR [edi-0x51]
  404493:	adc    dh,BYTE PTR [edx+edx*1]
  404496:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404497:	or     DWORD PTR [eax-0x53],ebx
  40449a:	adc    ebp,DWORD PTR ds:0x5b491fe1
  4044a0:	aas    
  4044a1:	aaa    
  4044a2:	adc    BYTE PTR [ebx],cl
  4044a4:	dec    ecx
  4044a5:	jb     0x404464
  4044a7:	int    0xcc
  4044a9:	dec    esp
  4044aa:	push   ecx
  4044ab:	adc    eax,0x212951d1
  4044b0:	xlat   BYTE PTR ds:[ebx]
  4044b1:	push   edx
  4044b2:	pop    edx
  4044b3:	(bad)  
  4044b4:	loop   0x404446
  4044b6:	sbb    ebp,ebx
  4044b8:	(bad)  
  4044b9:	xchg   esp,eax
  4044ba:	push   edx
  4044bc:	adc    eax,0xcc186a1b
  4044c1:	imul   edi,DWORD PTR [edx+ecx*8-0x11],0xffffffc4
  4044c6:	cmp    BYTE PTR [edi-0x61190d0b],dl
  4044cc:	jmp    0x4044a0
  4044ce:	scas   al,BYTE PTR es:[edi]
  4044cf:	test   DWORD PTR [ebx-0x80],eax
  4044d2:	mov    DWORD PTR [eax],edi
  4044d4:	ins    BYTE PTR es:[edi],dx
  4044d5:	sbb    ebx,DWORD PTR [esi-0x68]
  4044d8:	scas   al,BYTE PTR es:[edi]
  4044d9:	add    ecx,esp
  4044db:	mov    dl,0x91
  4044dd:	pop    ebp
  4044de:	mov    eax,0x56b420e4
  4044e3:	dec    edx
  4044e4:	inc    ebx
  4044e5:	call   0xc5f1:0xd848ce5
  4044ec:	or     ah,BYTE PTR [edx-0x4a]
  4044ef:	cmp    BYTE PTR [edi],al
  4044f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044f2:	jbe    0x404573
  4044f4:	adc    DWORD PTR [edx-0x3611d6ed],ecx
  4044fa:	test   DWORD PTR [edx+eiz*4],esp
  4044fd:	pushf  
  4044fe:	dec    eax
  4044ff:	imul   ebx,DWORD PTR [ebp-0x6a],0xffffffce
  404503:	push   esp
  404504:	pop    ebp
  404505:	adc    eax,0x5b097e1d
  40450a:	bound  ebp,QWORD PTR ds:0x7c35eb88
  404510:	stos   DWORD PTR es:[edi],eax
  404511:	gs sub eax,0xffffffd9
  404515:	sbb    BYTE PTR [esi+0x25c020fe],al
  40451b:	xor    BYTE PTR [esp+edx*8-0x269168ee],0x30
  404523:	jecxz  0x40453e
  404525:	pop    ecx
  404526:	add    BYTE PTR [edi],0x22
  404529:	jnp    0x4045a8
  40452b:	lods   eax,DWORD PTR gs:[esi]
  40452d:	loope  0x404531
  40452f:	mov    ds,WORD PTR [ebp+eax*2+0x16]
  404533:	push   esp
  404534:	adc    al,0x71
  404536:	xor    BYTE PTR [ecx],dl
  404538:	dec    ecx
  404539:	xchg   edx,eax
  40453a:	outs   dx,DWORD PTR ds:[esi]
  40453b:	lea    edi,[edx]
  40453d:	inc    ebp
  40453e:	out    0xe4,al
  404540:	mov    al,ds:0x3f671a8
  404545:	mov    bh,0xab
  404547:	sahf   
  404548:	cmp    esi,DWORD PTR ss:[eax]
  40454b:	clc    
  40454c:	push   ecx
  40454d:	sub    al,0xe8
  40454f:	mov    dh,0xb4
  404551:	adc    DWORD PTR [edx],esp
  404553:	retf   0xaaf8
  404556:	add    BYTE PTR [esi+0x6fa855f9],cl
  40455c:	adc    BYTE PTR [edx],ch
  40455e:	mov    edi,DWORD PTR [eax+edx*2+0x6f]
  404562:	addr16 add eax,0xcb5886c2
  404568:	aas    
  404569:	cmp    eax,0x942e1937
  40456e:	icebp  
  40456f:	add    BYTE PTR [ebx+eiz*8-0x69],dh
  404573:	dec    esi
  404574:	nop
  404575:	aas    
  404576:	dec    esp
  404577:	jns    0x404586
  404579:	je     0x404568
  40457b:	pop    esp
  40457c:	pop    esi
  40457d:	aad    0x91
  40457f:	cdq    
  404580:	mov    edi,DWORD PTR [ecx]
  404582:	jb     0x4045e8
  404584:	cmp    al,0xe1
  404586:	outs   dx,BYTE PTR ds:[esi]
  404587:	(bad)  
  404588:	mov    eax,0x34511a2d
  40458d:	sub    al,0x30
  40458f:	fcmovnb st,st(3)
  404591:	xor    al,0x0
  404593:	test   al,0xb0
  404595:	jbe    0x40458e
  404597:	popf   
  404598:	jbe    0x40452e
  40459a:	mov    ch,0x7e
  40459c:	push   es
  40459d:	sti    
  40459e:	xchg   esi,eax
  40459f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045a0:	or     al,0x1d
  4045a2:	xlat   BYTE PTR ds:[ebx]
  4045a3:	div    BYTE PTR es:[ecx-0x5c471dd4]
  4045aa:	outs   dx,DWORD PTR ds:[esi]
  4045ab:	and    DWORD PTR [ecx-0x3e],esp
  4045ae:	cdq    
  4045af:	jmp    0x50c525ec
  4045b4:	add    DWORD PTR [ebx-0x3b],edx
  4045b7:	je     0x4045b0
  4045b9:	sbb    cl,BYTE PTR ds:0xb7796939
  4045bf:	push   es
  4045c0:	lods   al,BYTE PTR ds:[esi]
  4045c1:	fsubr  st,st(0)
  4045c3:	imul   ebp,DWORD PTR [edx],0x81388cb8
  4045c9:	push   0x54d2a454
  4045ce:	aam    0xca
  4045d0:	int    0xa1
  4045d2:	push   esi
  4045d3:	push   ebx
  4045d4:	pop    ecx
  4045d5:	not    eax
  4045d7:	cmp    eax,0x9399e154
  4045dc:	test   eax,0x13abdb6a
  4045e1:	dec    eax
  4045e2:	imul   eax,DWORD PTR [eax+0x44997bfe],0xffffffc3
  4045e9:	popf   
  4045ea:	and    esi,DWORD PTR [esi]
  4045ec:	pop    eax
  4045ed:	(bad)  
  4045ee:	sub    ch,cl
  4045f0:	enter  0x4342,0x8f
  4045f4:	or     ah,BYTE PTR [di-0x5b51]
  4045f9:	jmp    0x4045b6
  4045fb:	xchg   esp,eax
  4045fc:	or     ebp,edx
  4045fe:	out    0xee,eax
  404600:	inc    ebp
  404601:	(bad)  
  404602:	rcr    DWORD PTR [edx],0x6d
  404605:	(bad)  
  404606:	or     esp,DWORD PTR [ebx-0x25471c3f]
  40460c:	adc    ah,al
  40460e:	inc    esp
  40460f:	inc    esp
  404610:	mov    ebx,cs
  404612:	rol    eax,cl
  404614:	popa   
  404615:	and    BYTE PTR gs:[ebx+0x26],bh
  404619:	outs   dx,BYTE PTR ds:[esi]
  40461a:	stc    
  40461b:	retf   
  40461c:	mov    DWORD PTR es:[eax-0x21],0x14b54ece
  404624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404625:	shl    DWORD PTR [edi+0x2d0c904a],cl
  40462b:	dec    edx
  40462c:	mov    eax,0xa701f24c
  404631:	add    DWORD PTR [ecx],edx
  404633:	add    DWORD PTR [ecx+0x6d],esi
  404636:	(bad)  
  404637:	fsub   DWORD PTR [esp+0x3a]
  40463b:	jo     0x40468f
  40463d:	mov    ch,0xc7
  40463f:	xchg   esp,eax
  404640:	jp     0x4045f7
  404642:	(bad)  
  404643:	bound  ebx,QWORD PTR [esi]
  404645:	fdiv   st,st(4)
  404647:	add    cl,BYTE PTR [esi+0x3c554b24]
  40464d:	xor    eax,0x190c13aa
  404652:	add    BYTE PTR gs:[ecx+0x3e],0x29
  404657:	not    dh
  404659:	fild   QWORD PTR [ebx+0xd]
  40465c:	and    DWORD PTR [eax+0x70],ecx
  40465f:	push   esi
  404660:	jo     0x404686
  404662:	aam    0xe9
  404664:	mov    eax,0xaf7aee8c
  404669:	mov    al,0x37
  40466b:	test   al,0x79
  40466d:	pop    ss
  40466e:	xlat   BYTE PTR ds:[ebx]
  40466f:	xchg   esi,eax
  404670:	jo     0x4046a3
  404672:	mov    cl,0x63
  404674:	mov    ds:0x2278f06e,eax
  404679:	sub    al,0x3b
  40467b:	cmp    eax,0xf4816a6b
  404680:	push   ds
  404681:	jno    0x4046fd
  404683:	aaa    
  404684:	mov    dl,0xf1
  404686:	dec    esi
  404687:	cmp    eax,0xd7fe6124
  40468c:	sub    edi,edx
  40468e:	jmp    0xdd6f:0x580ec502
  404695:	ss rcl bl,1
  404698:	fdivr  DWORD PTR [esi]
  40469a:	and    dh,BYTE PTR [esi+0x2f1cb927]
  4046a0:	sbb    DWORD PTR [ecx-0x374c033e],edx
  4046a6:	es push ebp
  4046a8:	fnstsw WORD PTR [edi+0x72b838a]
  4046ae:	adc    ah,dh
  4046b0:	cmp    ecx,DWORD PTR [ebx]
  4046b2:	enter  0xe68f,0xda
  4046b6:	push   edi
  4046b7:	loop   0x4046e9
  4046b9:	adc    DWORD PTR [ecx-0x533407f2],ebp
  4046bf:	xchg   ebp,eax
  4046c0:	add    DWORD PTR [ecx+0x114f0f8e],edx
  4046c6:	sbb    eax,0xf802901c
  4046cb:	int3   
  4046cc:	lahf   
  4046cd:	out    dx,al
  4046ce:	sahf   
  4046cf:	pop    ss
  4046d0:	nop
  4046d1:	enter  0x5a5a,0x47
  4046d5:	in     eax,dx
  4046d6:	call   0xf0df:0xd8bf6b8c
  4046dd:	popf   
  4046de:	mov    edi,0xbea2e206
  4046e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046e5:	nop
  4046e6:	mov    cl,0xd3
  4046e8:	popf   
  4046e9:	leave  
  4046ea:	addr16 out 0x3d,eax
  4046ed:	in     eax,dx
  4046ee:	fisub  WORD PTR [edi+0x672e59a8]
  4046f4:	sbb    al,0xcb
  4046f6:	pop    es
  4046f7:	inc    edi
  4046f8:	clc    
  4046f9:	out    dx,eax
  4046fa:	cmp    BYTE PTR [ebp-0x61],ch
  4046fd:	imul   edx,edi,0xffffff8b
  404700:	imul   edi,DWORD PTR [ebx+eiz*1-0x2e838387],0x434c0c44
  40470b:	enter  0xce11,0xd
  40470f:	stos   BYTE PTR es:[edi],al
  404710:	adc    eax,0xff5b9fd5
  404715:	pop    ebp
  404716:	inc    eax
  404717:	daa    
  404718:	fcom   DWORD PTR [eax+ecx*8]
  40471b:	lods   eax,DWORD PTR ds:[esi]
  40471c:	xor    bl,BYTE PTR [esi+0x56e7c3bc]
  404722:	sbb    DWORD PTR [ebp+0x4b],0xb40d719c
  404729:	xor    cl,dh
  40472b:	mov    esp,0x8ef336f9
  404730:	in     eax,0x12
  404732:	push   edx
  404733:	xchg   edi,eax
  404734:	dec    esp
  404735:	xor    ebx,esi
  404737:	push   ecx
  404738:	xchg   ebp,eax
  404739:	pop    ebp
  40473a:	pop    esi
  40473b:	inc    ebx
  40473c:	sbb    BYTE PTR [ebx+0x54],al
  40473f:	add    bl,cl
  404741:	retf   0xc55d
  404744:	aaa    
  404745:	aad    0x3e
  404747:	add    al,0xc
  404749:	xor    eax,0x3d8f0d42
  40474e:	iret   
  40474f:	add    al,0xed
  404751:	mov    eax,ds:0xd95b55b0
  404756:	push   edx
  404757:	push   edi
  404758:	jp     0x4047cd
  40475a:	dec    esi
  40475b:	inc    edi
  40475c:	test   BYTE PTR [ebp+0x3f41d188],cl
  404762:	adc    DWORD PTR [ecx+ecx*8],ecx
  404765:	mov    bl,0x2a
  404767:	aad    0xc5
  404769:	pop    es
  40476a:	xchg   edi,eax
  40476b:	scas   eax,DWORD PTR es:[edi]
  40476c:	mov    ecx,0x826d1603
  404771:	xchg   ebx,eax
  404772:	iret   
  404773:	popf   
  404774:	or     ebp,esi
  404776:	adc    BYTE PTR [edx+0x53],ah
  404779:	xor    ecx,esp
  40477b:	cmp    DWORD PTR [eax-0x63],ebp
  40477e:	lods   eax,DWORD PTR ds:[esi]
  40477f:	mov    edx,0x94f948ae
  404784:	mov    dh,0x6a
  404786:	arpl   si,sp
  404788:	adc    al,0x3b
  40478a:	int3   
  40478b:	inc    edi
  40478c:	popf   
  40478d:	mov    ch,0xb3
  40478f:	sub    al,0x9a
  404791:	push   ebx
  404792:	dec    edi
  404793:	xor    DWORD PTR ds:0x585cde38,esp
  404799:	ds push 0xeb4e464d
  40479f:	hlt    
  4047a0:	inc    eax
  4047a1:	or     eax,0x56643eee
  4047a6:	mov    edi,DWORD PTR ss:[ecx+eiz*1-0x31eae545]
  4047ae:	loope  0x40476a
  4047b0:	mov    ebx,DWORD PTR [edx+ebp*4+0x677b0ccc]
  4047b7:	inc    ebx
  4047b8:	jecxz  0x404755
  4047ba:	or     eax,0x7bd2ab60
  4047bf:	mov    BYTE PTR [edi+0x4d],bh
  4047c2:	pop    es
  4047c3:	dec    ecx
  4047c4:	mov    edx,0x5a3f851c
  4047c9:	test   DWORD PTR [edi+0x74fb7c36],0xf86fe3cb
  4047d3:	cmc    
  4047d4:	pop    eax
  4047d5:	push   edx
  4047d6:	cmp    BYTE PTR [edi-0x7138db3f],bl
  4047dc:	dec    edi
  4047dd:	dec    ebx
  4047de:	aas    
  4047df:	xlat   BYTE PTR ds:[ebx]
  4047e0:	sub    eax,0x3f4dab2c
  4047e5:	js     0x404806
  4047e7:	push   edi
  4047e8:	push   ds
  4047e9:	(bad)  
  4047ea:	jb     0x4047bd
  4047ec:	stc    
  4047ed:	dec    BYTE PTR [edx+0x15e44467]
  4047f3:	jb     0x404821
  4047f5:	call   0x28cd:0xa77f72ef
  4047fc:	xor    esi,DWORD PTR ds:0x62bdfea2
  404802:	pop    ecx
  404803:	icebp  
  404804:	mov    edi,0x8358d0d8
  404809:	popa   
  40480a:	pop    es
  40480b:	mov    bl,BYTE PTR [ecx]
  40480d:	xchg   DWORD PTR [esi+0x3d148ca3],esp
  404813:	retf   0x2477
  404816:	lea    esi,[ebx-0x2f]
  404819:	fisttp WORD PTR [ebx+0xd]
  40481c:	adc    DWORD PTR [edi+esi*1],esp
  40481f:	test   DWORD PTR [esi+0x54],ebp
  404822:	and    BYTE PTR [esi],cl
  404824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404825:	pop    esp
  404826:	xchg   edi,eax
  404827:	push   esi
  404828:	sub    al,0xde
  40482a:	rcr    BYTE PTR [ecx+0x66],1
  40482d:	push   edx
  40482e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40482f:	inc    edx
  404830:	call   0x6b096896
  404835:	js     0x404807
  404837:	add    DWORD PTR [eax+0x4],edi
  40483a:	fnstcw WORD PTR [edi-0x459b062a]
  404840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404841:	inc    esp
  404842:	sbb    dh,ch
  404844:	cmp    cl,ch
  404846:	dec    ebx
  404847:	std    
  404848:	pusha  
  404849:	sbb    BYTE PTR [eax],cl
  40484b:	ins    BYTE PTR es:[edi],dx
  40484c:	jnp    0x40482c
  40484e:	adc    al,0x84
  404850:	gs jge 0x4047d6
  404853:	mov    cl,BYTE PTR [edx]
  404855:	mov    edx,0xdebf38cd
  40485a:	adc    al,0x57
  40485c:	out    dx,eax
  40485d:	inc    edx
  40485e:	xchg   esi,eax
  40485f:	mov    DWORD PTR [ecx+ebp*1],ebx
  404862:	fs mov al,0x6
  404865:	call   FWORD PTR [edi+0x71]
  404868:	cs stos DWORD PTR es:[edi],eax
  40486a:	sahf   
  40486b:	xor    al,0xca
  40486d:	stc    
  40486e:	add    eax,0xa988a4b1
  404873:	sar    ecx,cl
  404875:	inc    ebp
  404876:	push   es
  404877:	mov    bl,0xfb
  404879:	loop   0x4048a5
  40487b:	mov    ds:0x6657d7b,eax
  404880:	add    BYTE PTR [ecx+esi*8+0x5b],0x89
  404885:	ror    esp,1
  404887:	push   edi
  404888:	sbb    BYTE PTR [ebx+0x5],cl
  40488b:	in     eax,0x7a
  40488d:	push   esi
  40488e:	ret    
  40488f:	shl    BYTE PTR [ebx+ebx*1-0x40],cl
  404893:	out    dx,al
  404894:	adc    BYTE PTR [ebx+0x0],bl
  404897:	sbb    ebp,esi
  404899:	(bad)  
  40489a:	loop   0x404890
  40489c:	cmp    eax,0x14a77455
  4048a1:	push   0xfffffff4
  4048a3:	xchg   DWORD PTR [ebx-0x6a3742f],ecx
  4048a9:	fwait
  4048aa:	mov    edi,DWORD PTR [eax]
  4048ac:	add    dh,BYTE PTR [edi]
  4048ae:	xor    ebp,0x57
  4048b1:	jl     0x40487e
  4048b3:	mov    ds:0x902aa77f,al
  4048b8:	mov    bl,0x5b
  4048ba:	adc    eax,DWORD PTR [ebx]
  4048bc:	pop    esi
  4048bd:	fs push es
  4048bf:	scas   eax,DWORD PTR es:[edi]
  4048c0:	cmp    esi,DWORD PTR [ebp+0x71]
  4048c3:	or     eax,0x1a3204ca
  4048c8:	xor    al,0xa1
  4048ca:	push   es
  4048cb:	enter  0x1f69,0x18
  4048cf:	jecxz  0x404928
  4048d1:	xchg   ecx,ebx
  4048d3:	(bad)  
  4048d4:	lea    edx,[edx+0x22a9edf5]
  4048da:	fcomp  QWORD PTR [ebx]
  4048dc:	out    dx,al
  4048dd:	lods   eax,DWORD PTR ds:[esi]
  4048de:	icebp  
  4048df:	push   esp
  4048e0:	xchg   edx,eax
  4048e1:	sub    BYTE PTR [bx+si-0x16c0],ch
  4048e6:	cmp    al,0xd7
  4048e8:	and    al,0x7e
  4048ea:	push   esp
  4048eb:	stos   DWORD PTR es:[edi],eax
  4048ec:	and    dh,BYTE PTR [eax+edx*1-0x7e]
  4048f0:	inc    eax
  4048f1:	hlt    
  4048f2:	stc    
  4048f3:	cmp    eax,0x741a6175
  4048f8:	push   ds
  4048f9:	jmp    0x40495b
  4048fb:	ss add eax,0x8ebdd30e
  404901:	shl    DWORD PTR [esi-0x53],cl
  404904:	sub    ah,al
  404906:	or     ah,BYTE PTR [esi]
  404908:	jge    0x404929
  40490a:	cld    
  40490b:	js     0x4048ea
  40490d:	mov    dl,0x30
  40490f:	int    0x1
  404911:	aaa    
  404912:	cmp    eax,0x6548952d
  404917:	mov    bh,0x1a
  404919:	cmp    al,0x53
  40491b:	dec    ebx
  40491c:	adc    eax,0x9d22d0e
  404921:	bound  esi,QWORD PTR [edi-0x31]
  404924:	sahf   
  404925:	or     al,0x21
  404927:	mov    ch,0xac
  404929:	sahf   
  40492a:	jmp    0x70b0c195
  40492f:	xchg   DWORD PTR [edx-0x5f3fbc0d],edx
  404935:	cmp    ebx,DWORD PTR [ecx]
  404937:	mov    edi,DWORD PTR ds:0x3f8ccef5
  40493d:	lods   al,BYTE PTR ds:[esi]
  40493e:	push   ds
  40493f:	push   cs
  404940:	int    0x27
  404942:	xor    ebp,DWORD PTR [esp+ebx*4+0x415ae092]
  404949:	in     eax,0x2e
  40494b:	and    al,0x78
  40494d:	jecxz  0x4049be
  40494f:	push   ss
  404950:	outs   dx,BYTE PTR ds:[esi]
  404951:	lods   al,BYTE PTR ds:[esi]
  404952:	ss (bad) 
  404954:	gs sub esp,0xffffffd1
  404958:	mov    ch,ah
  40495a:	and    al,0x1d
  40495c:	aad    0xf8
  40495e:	iret   
  40495f:	lea    esp,ds:0x2212b63e
  404965:	and    al,0xc0
  404967:	adc    al,0x7c
  404969:	sbb    ah,BYTE PTR [edi-0x1c5029ea]
  40496f:	data16 (bad) 
  404971:	retf   
  404972:	mov    ah,0x1c
  404974:	nop
  404975:	in     eax,dx
  404976:	inc    eax
  404977:	pop    es
  404978:	dec    edx
  404979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40497a:	repnz lods al,BYTE PTR ds:[esi]
  40497c:	jp     0x4049a4
  40497e:	mov    ebp,eax
  404980:	call   0xb3ef:0xa7ba2510
  404987:	stc    
  404988:	das    
  404989:	stos   DWORD PTR es:[edi],eax
  40498a:	fsubrp st(3),st
  40498c:	or     BYTE PTR [ecx+0x57],dl
  40498f:	jle    0x404962
  404991:	push   edi
  404992:	in     eax,dx
  404993:	push   esi
  404994:	mov    dh,0x97
  404996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404997:	mov    al,0x97
  404999:	mov    edi,0xd588f8
  40499e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40499f:	push   cs
  4049a0:	loopne 0x404989
  4049a2:	sub    al,0xaf
  4049a4:	fisttp QWORD PTR [edx]
  4049a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049a7:	int    0x4d
  4049a9:	push   eax
  4049aa:	mov    ds:0x8ffb182d,eax
  4049af:	sub    BYTE PTR [esi],bl
  4049b1:	fdivr  st,st(4)
  4049b3:	mov    bl,0xea
  4049b5:	fcmovnb st,st(2)
  4049b7:	sbb    eax,0xcaa66cef
  4049bc:	pushf  
  4049bd:	(bad)  
  4049be:	sbb    cl,BYTE PTR [ecx-0x54]
  4049c1:	mov    bh,0x49
  4049c3:	sbb    al,0x69
  4049c5:	aas    
  4049c6:	inc    esi
  4049c7:	sub    DWORD PTR [ebx-0x1aef46ca],ebx
  4049cd:	ja     0x404a2d
  4049cf:	cmp    eax,0x97736f1c
  4049d4:	out    0x7f,al
  4049d6:	and    BYTE PTR [ecx-0x61c4243],bh
  4049dc:	inc    esp
  4049dd:	cmp    al,BYTE PTR [edx]
  4049df:	cs std 
  4049e1:	sub    eax,0xe64bdffd
  4049e6:	fdiv   st,st(7)
  4049e8:	sub    sp,di
  4049eb:	ja     0x40497f
  4049ed:	mov    al,0xe1
  4049ef:	push   esi
  4049f0:	pop    ecx
  4049f1:	sbb    edx,DWORD PTR [ebp-0x5e]
  4049f4:	jae    0x404990
  4049f6:	bound  ebx,QWORD PTR cs:[ebp+0x79]
  4049fa:	outs   dx,BYTE PTR ds:[esi]
  4049fb:	add    al,0xa8
  4049fd:	xchg   ebp,eax
  4049fe:	(bad)  [esp+esi*1-0x1a]
  404a02:	into   
  404a03:	push   0x772f92b3
  404a08:	mov    ebx,0x246fda7d
  404a0d:	xlat   BYTE PTR ds:[ebx]
  404a0e:	xchg   edx,eax
  404a0f:	fst    DWORD PTR [eax-0x65]
  404a12:	xor    BYTE PTR [edx+0x3b36eedc],dh
  404a18:	fs mov bh,0x34
  404a1b:	int3   
  404a1c:	mov    al,ds:0x27b5af44
  404a21:	gs push esp
  404a23:	js     0x4049c4
  404a25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a26:	push   cs
  404a27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a28:	sub    dl,BYTE PTR [edi]
  404a2a:	jmp    0x4049bb
  404a2c:	aaa    
  404a2d:	fsub   DWORD PTR [edi-0x5ce039f8]
  404a33:	shl    BYTE PTR [eax-0x39252873],cl
  404a39:	je     0x4049c4
  404a3b:	fisub  WORD PTR [edx]
  404a3d:	shr    BYTE PTR [ecx+0xbf1ba83],1
  404a43:	not    BYTE PTR [ecx+0x49]
  404a46:	xlat   BYTE PTR ds:[ebx]
  404a47:	push   esp
  404a48:	dec    ecx
  404a49:	xchg   esp,eax
  404a4a:	shl    BYTE PTR [ebp-0x4f7b681c],0xdd
  404a51:	rcr    BYTE PTR [eax-0x6b146ba9],cl
  404a57:	gs dec di
  404a5a:	nop
  404a5b:	xor    BYTE PTR [edx-0x7a],ah
  404a5e:	mov    ah,0x58
  404a60:	inc    edx
  404a62:	push   edx
  404a63:	jmp    FWORD PTR [eax]
  404a65:	xor    ecx,eax
  404a67:	mov    ecx,0x56283c3c
  404a6c:	jno    0x404a1f
  404a6e:	push   ecx
  404a6f:	xlat   BYTE PTR ds:[ebx]
  404a70:	cli    
  404a71:	fsubp  st(5),st
  404a73:	fimul  DWORD PTR [ebp+0x2d]
  404a76:	cmp    BYTE PTR [ebp-0x12],bh
  404a79:	and    ah,cl
  404a7b:	scas   eax,DWORD PTR es:[edi]
  404a7c:	mov    DWORD PTR [ebx-0x21042ea3],esi
  404a82:	mov    ch,BYTE PTR [esi-0x54]
  404a85:	mov    ecx,0xc89d3b61
  404a8a:	inc    edi
  404a8b:	mov    ds:0x8ad0ab62,al
  404a90:	retf   0xf843
  404a93:	test   al,0x54
  404a95:	jl     0x404a42
  404a97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a98:	inc    ebp
  404a99:	lahf   
  404a9a:	loopne 0x404aec
  404a9c:	punpckhwd mm2,mm2
  404a9f:	aaa    
  404aa0:	hlt    
  404aa1:	addr16 cmp eax,ebx
  404aa4:	pop    ds
  404aa5:	sub    dl,dh
  404aa7:	fist   DWORD PTR [ebx+0x4a]
  404aaa:	gs scas eax,DWORD PTR es:[edi]
  404aac:	aaa    
  404aad:	std    
  404aae:	mov    dl,0x6f
  404ab0:	ins    BYTE PTR es:[edi],dx
  404ab1:	stos   BYTE PTR es:[edi],al
  404ab2:	dec    eax
  404ab3:	xor    edi,DWORD PTR [esi]
  404ab5:	rol    DWORD PTR [ebx],1
  404ab7:	icebp  
  404ab8:	cdq    
  404ab9:	cmp    al,0x7b
  404abb:	jns    0x404b35
  404abd:	sub    cl,cl
  404abf:	dec    edi
  404ac0:	scas   al,BYTE PTR es:[edi]
  404ac1:	test   al,0x45
  404ac3:	fsub   QWORD PTR [esp+edi*4-0x39a1c3b7]
  404aca:	push   es
  404acb:	jl     0x404ac3
  404acd:	nop
  404ace:	or     eax,0x64ed301b
  404ad3:	and    edi,DWORD PTR [ebp-0x1f]
  404ad6:	(bad)  
  404ad7:	mov    ebx,DWORD PTR [edx]
  404ad9:	xchg   ecx,eax
  404ada:	mov    al,ds:0xd3963ffb
  404adf:	daa    
  404ae0:	jl     0x404ac8
  404ae2:	stos   DWORD PTR es:[edi],eax
  404ae3:	push   eax
  404ae4:	push   edi
  404ae5:	pop    ss
  404ae6:	pop    ss
  404ae7:	mov    ds:0xfeda05da,al
  404aec:	pop    ds
  404aed:	test   BYTE PTR [ecx+0x26],ah
  404af0:	jbe    0x404aa1
  404af2:	dec    ecx
  404af3:	aas    
  404af4:	push   es
  404af5:	int3   
  404af6:	jmp    0x9d97:0x17ea6f06
  404afd:	imul   esp,DWORD PTR [ecx-0x703a7c81],0xffffffc6
  404b04:	xchg   ecx,eax
  404b05:	out    dx,eax
  404b06:	nop
  404b07:	add    bh,BYTE PTR [esp+ebx*8-0x31]
  404b0b:	das    
  404b0c:	(bad)
  404b0f:	(bad)  
  404b10:	(bad)  
  404b11:	call   0xd5c9:0x67b53501
  404b18:	sti    
  404b19:	add    eax,0x9722698d
  404b1e:	das    
  404b1f:	not    BYTE PTR [esi+0x54]
  404b22:	pop    ebx
  404b23:	xchg   esp,eax
  404b24:	es gs loop 0x404b52
  404b28:	out    dx,al
  404b29:	ret    0x84b5
  404b2c:	push   0x2e
  404b2e:	(bad)  ds:0x1be634f8
  404b34:	inc    esi
  404b35:	in     eax,0x92
  404b37:	test   DWORD PTR [ecx],ebp
  404b39:	push   ss
  404b3a:	adc    eax,0xe08b7c0f
  404b3f:	leave  
  404b40:	sub    DWORD PTR [esi+0x17c824b2],0x65
  404b47:	pop    ebp
  404b48:	xchg   edi,eax
  404b49:	hlt    
  404b4a:	lds    esi,FWORD PTR [ebx-0x4f37d3ca]
  404b50:	out    dx,eax
  404b51:	mov    eax,0xa874ae10
  404b56:	mov    es,WORD PTR [ebx+edx*1+0x54581716]
  404b5d:	out    dx,al
  404b5e:	xchg   ecx,eax
  404b5f:	jle    0x404b56
  404b61:	lods   al,BYTE PTR ds:[esi]
  404b62:	adc    DWORD PTR cs:[edx+0x46],esi
  404b66:	cwde   
  404b67:	push   edx
  404b68:	lahf   
  404b69:	jne    0x404b77
  404b6b:	popf   
  404b6c:	and    al,0xa5
  404b6e:	pop    esi
  404b6f:	test   eax,0x71378eb6
  404b74:	sub    edi,DWORD PTR [esi+edi*4-0x49e79332]
  404b7b:	outs   dx,DWORD PTR ds:[esi]
  404b7c:	in     eax,0xb5
  404b7e:	mov    bl,ah
  404b80:	or     eax,0xc0f9a1a9
  404b85:	or     eax,0xfc9736e9
  404b8a:	fwait
  404b8b:	mov    eax,ds:0xf3a6c32a
  404b90:	jbe    0x404bcc
  404b92:	push   ebp
  404b93:	xchg   ebp,eax
  404b94:	fwait
  404b95:	push   ecx
  404b96:	push   es
  404b97:	stos   DWORD PTR es:[edi],eax
  404b98:	(bad)  
  404b9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b9b:	ficom  DWORD PTR [ebp-0x7c1c9f8c]
  404ba1:	call   0x37548417
  404ba6:	aas    
  404ba7:	mov    eax,0x4d0a87d3
  404bac:	or     al,0xda
  404bae:	in     eax,0x10
  404bb0:	jno    0x404bf2
  404bb2:	js     0x404be4
  404bb4:	add    esp,ecx
  404bb6:	inc    eax
  404bb7:	mov    ah,0xc6
  404bb9:	pop    ebp
  404bba:	jg     0x404b70
  404bbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bbd:	shl    BYTE PTR [esp+edx*4-0x53],0x4e
  404bc2:	outs   dx,BYTE PTR ds:[esi]
  404bc3:	push   0xfffffffa
  404bc5:	mov    cl,0xa6
  404bc7:	xor    dh,BYTE PTR [ebx+0x7]
  404bca:	xlat   BYTE PTR ds:[ebx]
  404bcb:	push   0xffffffbb
  404bcd:	fiadd  DWORD PTR [ecx+0x9caf433]
  404bd3:	punpckhbw mm7,QWORD PTR gs:[ecx-0x8]
  404bd8:	dec    esi
  404bd9:	stc    
  404bda:	(bad)  
  404bdb:	in     al,0x63
  404bdd:	das    
  404bde:	inc    esi
  404bdf:	or     DWORD PTR [esi-0x72f4d62e],0x5753c8f6
  404be9:	inc    esi
  404bea:	sar    DWORD PTR [bx+si-0x7cc9],cl
  404bef:	test   al,0xd7
  404bf1:	mov    ds:0x4d99df0,al
  404bf6:	xor    eax,0x2d5e3309
  404bfb:	inc    edx
  404bfc:	pop    ebx
  404bfd:	rcl    esp,cl
  404bff:	inc    ebx
  404c00:	mov    DWORD PTR [edi+0x1605fe0f],esi
  404c06:	out    0x11,al
  404c08:	xchg   edx,eax
  404c09:	or     esi,DWORD PTR [ebx-0x4f]
  404c0c:	outs   dx,DWORD PTR ds:[esi]
  404c0d:	mov    ecx,0x303a1195
  404c13:	pop    ecx
  404c14:	cmp    DWORD PTR [ebx+0x28a8c17f],esp
  404c1a:	gs icebp 
  404c1c:	ret    
  404c1d:	sbb    al,0xf
  404c1f:	pusha  
  404c20:	xor    eax,0xa232b49c
  404c25:	(bad)  
  404c26:	cdq    
  404c27:	mov    dh,0xf6
  404c29:	outs   dx,BYTE PTR ds:[esi]
  404c2a:	je     0x404c45
  404c2c:	dec    esp
  404c2d:	aad    0x34
  404c2f:	mov    WORD PTR [edi+0x4f],gs
  404c32:	cs pop esi
  404c34:	or     ecx,DWORD PTR [esi-0x36b34b99]
  404c3a:	lahf   
  404c3b:	outs   dx,DWORD PTR ds:[esi]
  404c3c:	lods   al,BYTE PTR ds:[esi]
  404c3d:	(bad)  
  404c3e:	not    DWORD PTR [edi+0x57]
  404c41:	cmp    DWORD PTR [ecx-0x5f],0xe
  404c45:	cs push ss
  404c47:	cli    
  404c48:	and    ebp,DWORD PTR [ebp-0x5c]
  404c4b:	or     eax,0xd8fe5417
  404c50:	je     0x404bf1
  404c52:	dec    esp
  404c53:	mov    cl,BYTE PTR [edx-0x6ee5314c]
  404c59:	sbb    ecx,ebp
  404c5b:	and    al,0xd9
  404c5d:	ror    BYTE PTR [eax],0xeb
  404c60:	inc    ebp
  404c61:	mov    al,0x1e
  404c63:	in     al,dx
  404c64:	adc    BYTE PTR [ecx],bh
  404c66:	mov    ebp,0xb88efd74
  404c6b:	mov    ds:0x2ad5b80e,eax
  404c70:	mov    esp,0x20f02e68
  404c75:	sbb    BYTE PTR [edi+edi*1-0x2c],bh
  404c79:	cmp    dh,BYTE PTR [eax]
  404c7b:	adc    eax,DWORD PTR [eax+0x9e1c3a2]
  404c81:	test   eax,0xd007bfe
  404c86:	fs clc 
  404c88:	or     DWORD PTR [eax-0x40],0x84de7ba3
  404c8f:	ret    0x6e6f
  404c92:	ss pop es
  404c94:	inc    ecx
  404c95:	sub    dh,bh
  404c97:	cmp    eax,DWORD PTR ds:0x72d9aa7e
  404c9d:	popf   
  404c9e:	out    0x6d,eax
  404ca0:	ret    0x2400
  404ca3:	jecxz  0x404c6d
  404ca5:	std    
  404ca6:	sbb    eax,ebp
  404ca8:	mov    al,ds:0x3ab7e3bc
  404cad:	shl    DWORD PTR ds:0x3e40636,cl
  404cb3:	leave  
  404cb4:	lock je 0x404c3e
  404cb7:	xchg   ebx,eax
  404cb8:	push   ebp
  404cb9:	adc    DWORD PTR [edx],edx
  404cbb:	or     DWORD PTR [ebp-0x18],ebp
  404cbe:	or     al,0x9e
  404cc0:	xchg   esp,eax
  404cc1:	jmp    0x404d34
  404cc3:	dec    esi
  404cc5:	nop
  404cc6:	jmp    0x404c53
  404cc8:	pop    ecx
  404cc9:	pop    ebx
  404cca:	loopne 0x404cbc
  404ccc:	mov    eax,ds:0x38dc27dc
  404cd1:	fist   WORD PTR [ebx+0x7b]
  404cd4:	or     ah,BYTE PTR [esi+eax*1-0x4d]
  404cd8:	dec    esi
  404cd9:	dec    ebx
  404cda:	hlt    
  404cdb:	(bad)  
  404cdc:	jb     0x404c7a
  404cde:	clc    
  404cdf:	inc    esi
  404ce0:	push   edx
  404ce1:	or     eax,0x8c263516
  404ce6:	outs   dx,BYTE PTR ds:[esi]
  404ce7:	test   al,0x90
  404ce9:	or     bl,BYTE PTR [esi-0x20]
  404cec:	std    
  404ced:	jnp    0x404d37
  404cef:	out    0x5f,al
  404cf1:	(bad)  
  404cf2:	xchg   edi,eax
  404cf3:	dec    esp
  404cf4:	xchg   DWORD PTR [edx],edx
  404cf6:	adc    eax,0x326c11fa
  404cfb:	psrlw  mm5,QWORD PTR [eax-0x717bd15]
  404d02:	sbb    esp,0xffffffca
  404d05:	push   esp
  404d06:	adc    al,0x53
  404d08:	outs   dx,BYTE PTR ds:[esi]
  404d09:	std    
  404d0a:	sub    eax,0x52f1eebc
  404d0f:	retf   
  404d10:	aas    
  404d11:	(bad)  
  404d13:	pop    edi
  404d14:	inc    eax
  404d15:	aam    0x51
  404d17:	sbb    DWORD PTR [edi+0x1f],ebx
  404d1a:	mov    DWORD PTR [esi],esi
  404d1c:	adc    eax,DWORD PTR [ebp-0x7e]
  404d1f:	sbb    cl,bl
  404d21:	jp     0x404d16
  404d23:	popa   
  404d24:	fisubr WORD PTR [ecx-0x69fa1e5b]
  404d2a:	enter  0xe654,0x9e
  404d2e:	cld    
  404d2f:	icebp  
  404d30:	pusha  
  404d31:	add    edx,DWORD PTR [edx+0x715f2188]
  404d37:	sahf   
  404d38:	pop    esi
  404d39:	sub    eax,0x221e8568
  404d3e:	arpl   WORD PTR [esi],cx
  404d40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d41:	ss mov DWORD PTR cs:[esi],edx
  404d45:	lds    edx,FWORD PTR [ebx]
  404d47:	loop   0x404d0a
  404d49:	(bad)  
  404d4b:	inc    esp
  404d4c:	sbb    BYTE PTR ds:0x1a9cb82a,bl
  404d52:	sub    ecx,DWORD PTR [ecx+0x339f9993]
  404d58:	hlt    
  404d59:	nop
  404d5a:	adc    al,0xaf
  404d5c:	ins    BYTE PTR es:[edi],dx
  404d5d:	add    bh,BYTE PTR [esp+eiz*8]
  404d60:	test   DWORD PTR [edi+0xdf734d3],ebx
  404d66:	mov    bh,0x8e
  404d68:	inc    BYTE PTR [ecx-0x2113cc85]
  404d6e:	rcr    esi,0x30
  404d71:	fild   DWORD PTR [edx-0x76dbb2d]
  404d77:	mov    edx,0xf1737d55
  404d7c:	test   al,0xb1
  404d7e:	and    BYTE PTR [ebp-0x3c],ch
  404d81:	adc    edi,DWORD PTR [ebx]
  404d83:	out    dx,eax
  404d84:	sti    
  404d85:	test   DWORD PTR [ecx+esi*1+0x702501de],eax
  404d8c:	mov    edi,0xd51865c5
  404d91:	ins    DWORD PTR es:[edi],dx
  404d92:	and    bl,dh
  404d94:	(bad)  [ecx-0xa7d5c08]
  404d9a:	cmp    bh,BYTE PTR [edi]
  404d9c:	icebp  
  404d9d:	mov    al,0x66
  404d9f:	jne    0x404d3b
  404da1:	mov    BYTE PTR [eax],bh
  404da3:	ja     0x404dc7
  404da5:	inc    esp
  404da6:	xor    al,0x71
  404da8:	mov    cl,0x31
  404daa:	and    eax,DWORD PTR [edx]
  404dac:	fdiv   DWORD PTR [edi-0x6a]
  404daf:	les    ebp,FWORD PTR [ecx]
  404db1:	seto   BYTE PTR [ebx]
  404db4:	adc    esp,DWORD PTR [ecx-0x58]
  404db7:	js     0x404d80
  404db9:	jp     0x404d73
  404dbb:	xor    al,0x34
  404dbd:	cwde   
  404dbe:	xor    ah,BYTE PTR [edx+0x2e12979]
  404dc4:	mov    WORD PTR [ecx-0x77c1f51f],?
  404dca:	adc    esi,ebx
  404dcc:	ins    DWORD PTR es:[edi],dx
  404dcd:	cmp    DWORD PTR [ecx],edx
  404dcf:	sbb    edx,ecx
  404dd1:	mov    dh,0x8c
  404dd3:	cdq    
  404dd4:	daa    
  404dd5:	push   es
  404dd6:	push   ecx
  404dd7:	adc    bl,ch
  404dd9:	les    ebx,FWORD PTR [ebx]
  404ddb:	and    ecx,ecx
  404ddd:	mov    cl,BYTE PTR [eax+0x3c0c361]
  404de3:	mov    dh,0x8
  404de5:	dec    ebx
  404de6:	fadd   DWORD PTR [edx+0x7a]
  404de9:	lock jns 0x404e20
  404dec:	or     al,0x32
  404dee:	aas    
  404def:	jecxz  0x404e4c
  404df1:	push   ds
  404df2:	fnstenv [edi]
  404df4:	test   eax,ebx
  404df6:	inc    esi
  404df7:	test   eax,0x537e8120
  404dfc:	xor    eax,0x27b79216
  404e01:	shl    ah,1
  404e03:	and    eax,0xb17402dd
  404e08:	out    0xc4,eax
  404e0a:	inc    esi
  404e0b:	sbb    bl,BYTE PTR ds:0x1318784f
  404e11:	inc    esi
  404e12:	lahf   
  404e13:	les    ecx,FWORD PTR [ecx]
  404e15:	mov    WORD PTR [ebx],gs
  404e17:	xor    eax,esi
  404e19:	ins    BYTE PTR es:[edi],dx
  404e1a:	add    al,0x80
  404e1c:	pusha  
  404e1d:	stos   DWORD PTR es:[edi],eax
  404e1e:	mov    dl,0xdb
  404e20:	mov    al,ds:0x5052f3bd
  404e25:	out    dx,eax
  404e26:	imul   eax,DWORD PTR [edx+edi*2+0x3492af12],0xffffffac
  404e2e:	pop    ebp
  404e2f:	ss push 0x1a0c6584
  404e35:	cmp    DWORD PTR [ecx],0xffffffd1
  404e38:	inc    ecx
  404e39:	cmc    
  404e3a:	ja     0x404df6
  404e3c:	popa   
  404e3d:	pushf  
  404e3e:	or     eax,0x149358a9
  404e43:	sar    DWORD PTR [edi+0x28018423],cl
  404e49:	ins    DWORD PTR es:[edi],dx
  404e4a:	adc    eax,0x98454e1
  404e4f:	jns    0x404e5b
  404e51:	pop    edx
  404e52:	int    0x35
  404e54:	push   cs
  404e55:	jle    0x404e88
  404e57:	in     al,0xb1
  404e59:	cmp    ecx,DWORD PTR [edi+0x4aa7266a]
  404e5f:	aaa    
  404e60:	mov    eax,0x7b532511
  404e65:	or     BYTE PTR [esp+edi*2+0x7],ch
  404e69:	(bad)  
  404e6b:	mov    BYTE PTR [ecx],bh
  404e6d:	imul   esp,ebx,0x42
  404e70:	mov    ecx,0xaa56a59a
  404e75:	jmp    0x404eb0
  404e77:	mov    esi,0x5a5fbae7
  404e7c:	sbb    al,0x21
  404e7e:	mov    al,ds:0x4da2c5ae
  404e83:	add    eax,DWORD PTR [ebx-0x38]
  404e86:	xor    eax,0x5fc71887
  404e8b:	or     eax,0x1c5474fc
  404e90:	inc    ebp
  404e91:	xor    BYTE PTR [edi-0x401b76cc],al
  404e97:	push   ecx
  404e98:	jecxz  0x404e8b
  404e9a:	sub    BYTE PTR [esi+0x4a],dh
  404e9d:	pusha  
  404e9e:	mov    ebx,0x56fb383b
  404ea3:	clc    
  404ea4:	test   DWORD PTR [edx-0x23bd89cc],0x5bd375bf
  404eae:	push   0x742e2a9b
  404eb3:	cmc    
  404eb4:	lds    ecx,FWORD PTR [edx-0x2308a370]
  404eba:	sub    al,0xe8
  404ebc:	xchg   ebx,eax
  404ebe:	inc    esp
  404ebf:	inc    esi
  404ec0:	add    al,0x95
  404ec2:	lock hlt 
  404ec4:	lahf   
  404ec5:	or     ecx,DWORD PTR [eax-0x77]
  404ec8:	push   ds
  404ec9:	dec    ecx
  404eca:	dec    ebp
  404ecb:	out    dx,eax
  404ecc:	stc    
  404ecd:	xchg   ecx,eax
  404ece:	and    ebx,DWORD PTR [ebp+0x15]
  404ed1:	stc    
  404ed2:	push   es
  404ed3:	pop    edx
  404ed4:	sbb    BYTE PTR [esi+0x5a848924],bl
  404eda:	xor    ch,cl
  404edc:	lds    eax,FWORD PTR [ecx-0x6c801021]
  404ee2:	ror    BYTE PTR [ecx-0x757279ae],cl
  404ee8:	pop    ebp
  404ee9:	sahf   
  404eea:	outs   dx,DWORD PTR ds:[esi]
  404eeb:	imul   edx,DWORD PTR [edx+esi*4-0x32],0x3c
  404ef0:	dec    edi
  404ef1:	mov    al,0xb7
  404ef3:	xor    eax,0xd0ed2e9d
  404ef8:	xor    dl,BYTE PTR [ecx-0x7607e0ff]
  404efe:	xchg   edi,eax
  404eff:	ror    BYTE PTR [ecx+eax*1-0x10165526],1
  404f06:	cwde   
  404f07:	inc    edx
  404f08:	dec    ebx
  404f09:	lea    ecx,[eax-0x637485ae]
  404f0f:	loopne 0x404f69
  404f11:	ins    DWORD PTR es:[edi],dx
  404f12:	jb     0x404ed9
  404f14:	in     al,0xca
  404f16:	sbb    ebx,ebx
  404f18:	jbe    0x404f52
  404f1a:	mov    edx,0xb598036a
  404f1f:	add    eax,esp
  404f21:	(bad)  
  404f22:	sahf   
  404f23:	xchg   ebx,eax
  404f24:	repz mov ds:0xd7979b57,eax
  404f2a:	xchg   edi,eax
  404f2b:	enter  0xa341,0xd1
  404f2f:	adc    DWORD PTR [esi+0x34],edx
  404f32:	aas    
  404f33:	es push esi
  404f35:	mov    ecx,0x5b160870
  404f3a:	pushf  
  404f3b:	in     al,dx
  404f3c:	cdq    
  404f3d:	push   esi
  404f3e:	dec    edx
  404f3f:	leave  
  404f40:	imul   esp,DWORD PTR [esi+ebp*2],0x8dbdecd3
  404f47:	in     eax,dx
  404f48:	imul   BYTE PTR [eax-0x37c49ee2]
  404f4e:	push   eax
  404f4f:	sub    ch,bh
  404f51:	jns    0x404f78
  404f53:	hlt    
  404f54:	shl    DWORD PTR [edx-0x30cb5b17],0x9f
  404f5b:	aas    
  404f5c:	je     0x404f27
  404f5e:	push   0x56
  404f60:	xlat   BYTE PTR ds:[ebx]
  404f61:	ja     0x404eea
  404f63:	lods   eax,DWORD PTR ds:[esi]
  404f64:	imul   ecx,DWORD PTR [edi],0x55
  404f67:	(bad)  
  404f68:	out    dx,al
  404f69:	push   ecx
  404f6a:	cmp    al,0x8d
  404f6c:	cmc    
  404f6d:	mov    ebp,0xc341478f
  404f72:	mov    esp,0x6ea87aa2
  404f77:	lock sbb DWORD PTR [eax+esi*4+0x20],edi
  404f7c:	or     al,al
  404f7e:	pop    edx
  404f7f:	dec    edi
  404f80:	mov    cs,WORD PTR [esi+0x18]
  404f83:	add    BYTE PTR [edx],ch
  404f85:	lock push ds
  404f87:	mov    dl,0xe4
  404f89:	call   0xb8c5:0x4d405473
  404f90:	cmp    esp,DWORD PTR [edx]
  404f92:	aaa    
  404f93:	aas    
  404f94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f95:	adc    BYTE PTR [ebx+0x1cb2fef5],bl
  404f9b:	xchg   edi,eax
  404f9c:	loopne 0x405006
  404f9e:	jmp    0x404f75
  404fa0:	scas   al,BYTE PTR es:[edi]
  404fa1:	fs fs in eax,0x6f
  404fa5:	(bad)  
  404fa6:	sar    BYTE PTR [edi+edx*4+0x58070db],1
  404fad:	or     BYTE PTR ds:0x29739452,bl
  404fb3:	jns    0x405031
  404fb5:	cld    
  404fb6:	mov    al,bl
  404fb8:	cs aad 0xa
  404fbb:	and    dh,BYTE PTR [edi]
  404fbd:	ins    DWORD PTR es:[edi],dx
  404fbe:	pop    esp
  404fbf:	inc    ebx
  404fc0:	(bad)  
  404fc1:	push   ebx
  404fc2:	scas   al,BYTE PTR es:[edi]
  404fc3:	lock sbb DWORD PTR [eax-0x25],esi
  404fc7:	dec    eax
  404fc8:	ficom  WORD PTR [edx]
  404fca:	div    DWORD PTR es:[eax-0x24]
  404fce:	imul   ebp,ecx,0x66
  404fd1:	(bad)  
  404fd2:	mov    bl,0xf
  404fd4:	int    0x8c
  404fd6:	ror    ch,0xfc
  404fd9:	fild   QWORD PTR [edi]
  404fdb:	(bad)  
  404fdc:	push   esp
  404fdd:	and    cl,BYTE PTR ds:0x3da485e2
  404fe3:	jb     0x404fa6
  404fe5:	les    esp,FWORD PTR ds:0x80561d98
  404feb:	push   ecx
  404fec:	jmp    0xb59a:0x28be1708
  404ff3:	nop
  404ff4:	ret    
  404ff5:	pop    DWORD PTR [ecx]
  404ff7:	fs fwait
  404ff9:	shl    bh,cl
  404ffb:	ins    BYTE PTR es:[edi],dx
  404ffc:	mov    ch,BYTE PTR [ebx-0x64]
  404fff:	outs   dx,BYTE PTR ds:[esi]
  405000:	mov    WORD PTR [edi-0x3f],fs
  405003:	mov    ds:0x924024ad,eax
  405008:	adc    DWORD PTR [edx-0x5b],edi
  40500b:	or     esi,DWORD PTR [ebx+ebx*1]
  40500e:	mov    ds:0x431368bb,al
  405013:	pop    ebx
  405014:	jmp    0x8f38aaa0
  405019:	loopne 0x404ff0
  40501b:	mov    al,0x42
  40501d:	push   edi
  40501e:	sub    BYTE PTR [eax-0x5dd457f2],cl
  405024:	pushf  
  405025:	pop    es
  405026:	mov    al,0xc1
  405028:	inc    ebx
  405029:	mov    esi,0x11ef2972
  40502e:	mov    ds:0x317c30a3,al
  405033:	push   edx
  405034:	jb     0x405058
  405036:	cs (bad) 
  405038:	mov    cl,0x3b
  40503a:	enter  0x840f,0x4a
  40503e:	add    al,BYTE PTR [eax]
  405040:	add    BYTE PTR [ecx+0x42b01805],al
  405046:	add    BYTE PTR [eax],cl
  405048:	rol    BYTE PTR [edx+0x0],0xff
  40504c:	jne    0x40503a
  40504e:	xor    DWORD PTR ds:0x42b00c,0x3dbe
  405058:	push   DWORD PTR [ebp+0x8]
  40505b:	call   0x40c78f
  405060:	sbb    ecx,0x6495
  405066:	mov    DWORD PTR [ebp-0x14],eax
  405069:	or     DWORD PTR ds:0x42901c,ebx
  40506f:	mov    eax,DWORD PTR [ebp-0x4]
  405072:	mov    ecx,DWORD PTR [ebp-0x14]
  405075:	adc    DWORD PTR ds:0x42d00c,0x15e5
  40507f:	xor    eax,esi
  405081:	add    eax,edi
  405083:	mov    DWORD PTR ds:0x42b004,0x7edf
  40508d:	cmp    ecx,eax
  40508f:	mov    DWORD PTR ds:0x42d014,0x1e10
  405099:	je     0x40528b
  40509f:	mov    eax,DWORD PTR [ebp-0x14]
  4050a2:	mov    ecx,DWORD PTR ds:0x429010
  4050a8:	sbb    DWORD PTR ds:0x42c00c,ecx
  4050ae:	mov    eax,DWORD PTR [eax+0x18]
  4050b1:	mov    DWORD PTR [ebp-0x2c],eax
  4050b4:	add    ecx,ecx
  4050b6:	mov    eax,DWORD PTR [ebp-0x14]
  4050b9:	sbb    DWORD PTR ds:0x42c01c,0x4c1
  4050c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4050c6:	xor    DWORD PTR ds:0x42b000,0x3fa3
  4050d0:	add    ecx,DWORD PTR [eax+0x20]
  4050d3:	xor    eax,0x40df
  4050d8:	mov    DWORD PTR [ebp-0x34],ecx
  4050db:	or     ecx,eax
  4050dd:	mov    eax,DWORD PTR [ebp-0x14]
  4050e0:	xor    DWORD PTR ds:0x429008,ecx
  4050e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4050e9:	and    DWORD PTR ds:0x42a008,0x42d014
  4050f3:	add    ecx,DWORD PTR [eax+0x24]
  4050f6:	mov    DWORD PTR [ebp-0x3c],ecx
  4050f9:	movzx  eax,BYTE PTR ds:0x42c000
  405100:	sbb    DWORD PTR ds:0x429010,eax
  405106:	mov    eax,DWORD PTR [ebp-0x14]
  405109:	mov    DWORD PTR ds:0x42d004,0x14
  405113:	cmp    DWORD PTR ds:0x42d004,0x0
  40511a:	je     0x405176
  405120:	cmp    DWORD PTR ds:0x42d004,0x9
  405127:	jne    0x405142
  40512d:	push   0x42e0f9
  405132:	push   0x42e0c7
  405137:	push   0x400000
  40513c:	call   DWORD PTR ds:0x42e9c7
  405142:	cmp    DWORD PTR ds:0x42d004,0xa
  405149:	jne    0x40515c
  40514f:	mov    ecx,DWORD PTR ds:0x42d004
  405155:	dec    ecx
  405156:	mov    DWORD PTR ds:0x42d004,ecx
  40515c:	xor    ecx,ecx
  40515e:	or     ecx,DWORD PTR ds:0x42d004
  405164:	dec    ecx
  405165:	mov    DWORD PTR ds:0x42d004,ecx
  40516b:	jmp    0x405113
  405170:	inc    DWORD PTR ds:0x42b00c
  405176:	mov    ecx,DWORD PTR [ebp+0x8]
  405179:	add    ecx,DWORD PTR [eax+0x1c]
  40517c:	mov    DWORD PTR [ebp-0x14],ecx
  40517f:	jmp    0x405253
  405184:	sub    DWORD PTR ds:0x42c018,ebx
  40518a:	mov    eax,DWORD PTR [ebp-0x34]
  40518d:	mov    ecx,DWORD PTR [ebp+0x8]
  405190:	sbb    DWORD PTR ds:0x42a014,0x429000
  40519a:	add    ecx,DWORD PTR [eax+ebx*4]
  40519d:	and    DWORD PTR ds:0x42d00c,0x0
  4051a7:	jmp    0x4051b7
  4051ac:	mov    eax,ds:0x42d00c
  4051b1:	inc    eax
  4051b2:	mov    ds:0x42d00c,eax
  4051b7:	cmp    DWORD PTR ds:0x42d00c,0x1b
  4051be:	jae    0x405206
  4051c4:	cmp    DWORD PTR ds:0x42d00c,0xd
  4051cb:	jne    0x4051dc
  4051d1:	push   0x42e0b3
  4051d6:	call   DWORD PTR ds:0x42e9cb
  4051dc:	cmp    DWORD PTR ds:0x42d00c,0xc
  4051e3:	jne    0x4051f7
  4051e9:	xor    eax,eax
  4051eb:	xor    eax,DWORD PTR ds:0x42d00c
  4051f1:	inc    eax
  4051f2:	mov    ds:0x42d00c,eax
  4051f7:	jmp    0x4051ac
  4051fc:	xor    DWORD PTR ds:0x42b010,0x429024
  405206:	mov    DWORD PTR [ebp-0x30],ecx
  405209:	mov    eax,DWORD PTR [ebp-0x4]
  40520c:	mov    ecx,DWORD PTR [ebp-0x30]
  40520f:	xor    eax,esi
  405211:	add    eax,edi
  405213:	cmp    ecx,eax
  405215:	je     0x405253
  40521b:	jmp    0x405244
  405220:	mov    eax,DWORD PTR [ebp-0x4]
  405223:	mov    ecx,DWORD PTR [ebp-0x8]
  405226:	xor    eax,esi
  405228:	add    eax,edi
  40522a:	cmp    ecx,eax
  40522c:	mov    eax,DWORD PTR [ebp-0x4]
  40522f:	je     0x40528e
  405235:	mov    ecx,DWORD PTR [ebp-0x38]
  405238:	xor    eax,esi
  40523a:	add    eax,edi
  40523c:	cmp    ecx,eax
  40523e:	je     0x405297
  405244:	lea    eax,[ebp-0x8]
  405247:	push   eax
  405248:	push   DWORD PTR [ebp-0x30]
  40524b:	push   DWORD PTR [ebp+0xc]
  40524e:	call   0x40ca0a
  405253:	mov    eax,DWORD PTR [ebp-0x4]
  405256:	mov    ecx,DWORD PTR [ebp-0x8]
  405259:	xor    eax,esi
  40525b:	add    eax,edi
  40525d:	cmp    ecx,eax
  40525f:	je     0x40527a
  405265:	mov    eax,DWORD PTR [ebp-0x3c]
  405268:	movzx  eax,WORD PTR [eax+ebx*2]
  40526c:	mov    ecx,DWORD PTR [ebp-0x14]
  40526f:	mov    eax,DWORD PTR [ecx+eax*4]
  405272:	mov    DWORD PTR [ebp-0x40],eax
  405275:	jmp    0x405220
  40527a:	mov    eax,DWORD PTR [ebp-0xc]
  40527d:	xor    eax,esi
  40527f:	lea    ebx,[ebx+eax*1+0x3272e0]
  405286:	jmp    0x402be0
  40528b:	mov    eax,DWORD PTR [ebp-0x4]
  40528e:	xor    eax,esi
  405290:	add    eax,edi
  405292:	jmp    0x4053b4
  405297:	mov    eax,DWORD PTR [ebp-0x40]
  40529a:	add    eax,DWORD PTR [ebp+0x8]
  40529d:	mov    DWORD PTR [ebp-0x18],eax
  4052a0:	mov    eax,DWORD PTR [ebp-0x1c]
  4052a3:	test   eax,eax
  4052a5:	je     0x40533f
  4052ab:	mov    DWORD PTR [ebp-0x28],0x0
  4052b2:	push   0x3
  4052b4:	xor    edx,edx
  4052b6:	pop    edx
  4052b7:	add    edx,0x8
  4052ba:	push   edx
  4052bb:	pop    ecx
  4052bc:	push   0x6
  4052be:	dec    ecx
  4052bf:	pop    ebx
  4052c0:	dec    ebx
  4052c1:	xchg   ebx,ecx
  4052c3:	sub    ebx,ecx
  4052c5:	xchg   ebx,ecx
  4052c7:	dec    ecx
  4052c8:	mov    eax,DWORD PTR [ebp-0x1c]
  4052cb:	imul   eax,ecx
  4052ce:	sub    esp,eax
  4052d0:	mov    DWORD PTR [ebp-0x28],esp
  4052d3:	mov    eax,DWORD PTR [ebp-0x4]
  4052d6:	xor    eax,esi
  4052d8:	add    eax,edi
  4052da:	jmp    0x405318
  4052df:	mov    ecx,DWORD PTR [ebp-0xc]
  4052e2:	mov    eax,DWORD PTR [ebp+0x8]
  4052e5:	mov    edx,DWORD PTR [ebp+0x14]
  4052e8:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052ec:	xor    ecx,esi
  4052ee:	add    ecx,edi
  4052f0:	xor    edx,edx
  4052f2:	div    ecx
  4052f4:	mov    ecx,DWORD PTR [ebp-0x4]
  4052f7:	xor    ecx,esi
  4052f9:	lea    eax,[ecx+eax*1+0x3272e0]
  405300:	mov    ecx,DWORD PTR [ebp+0x8]
  405303:	mov    edx,DWORD PTR [ebp-0x28]
  405306:	mov    DWORD PTR [edx+ecx*4],eax
  405309:	mov    eax,DWORD PTR [ebp-0xc]
  40530c:	mov    ecx,DWORD PTR [ebp+0x8]
  40530f:	xor    eax,esi
  405311:	lea    eax,[eax+ecx*1+0x3272e0]
  405318:	mov    DWORD PTR [ebp+0x8],eax
  40531b:	mov    eax,DWORD PTR [ebp-0xc]
  40531e:	mov    ecx,DWORD PTR [ebp+0x14]
  405321:	xor    eax,esi
  405323:	add    eax,edi
  405325:	imul   eax,DWORD PTR [ecx]
  405328:	mov    ecx,DWORD PTR [ebp-0x4]
  40532b:	mov    edx,DWORD PTR [ebp+0x8]
  40532e:	xor    ecx,esi
  405330:	lea    ecx,[ecx+edx*1+0x3272e0]
  405337:	cmp    ecx,eax
  405339:	jne    0x4052df
  40533f:	mov    eax,DWORD PTR [ebp-0x4]
  405342:	xor    eax,esi
  405344:	add    eax,edi
  405346:	mov    DWORD PTR [ebp-0x10],eax
  405349:	mov    ebx,0x65655
  40534e:	add    ebx,0x3234
  405354:	xchg   ebx,esi
  405356:	xor    ebx,ebx
  405358:	push   esi
  405359:	mov    esi,ebx
  40535b:	pop    ebx
  40535c:	mov    edx,esi
  40535e:	add    ebx,0x1002
  405364:	lea    eax,[ebp-0x18]
  405367:	add    edx,eax
  405369:	add    edx,0x5
  40536c:	push   edx
  40536d:	inc    esi
  40536e:	pop    ecx
  40536f:	dec    ecx
  405370:	xchg   ecx,eax
  405371:	dec    eax
  405372:	xchg   ecx,eax
  405373:	dec    ecx
  405374:	xchg   ecx,edx
  405376:	dec    edx
  405377:	push   edx
  405378:	mov    edx,ebx
  40537a:	pop    ebx
  40537b:	dec    ebx
  40537c:	call   DWORD PTR [ebx]
  40537e:	cmp    DWORD PTR [ebp+0x10],esi
  405381:	je     0x4053a0
  405387:	xchg   edx,eax
  405388:	push   0xb
  40538a:	pop    ecx
  40538b:	push   0x4
  40538d:	pop    ebx
  40538e:	inc    ebx
  40538f:	xchg   ebx,ecx
  405391:	sub    ebx,ecx
  405393:	xchg   ebx,ecx
  405395:	dec    ecx
  405396:	dec    ecx
  405397:	mov    eax,DWORD PTR [ebp-0x1c]
  40539a:	imul   eax,ecx
  40539d:	add    esp,eax
  40539f:	xchg   edx,eax
  4053a0:	push   eax
  4053a1:	xor    ebx,ebx
  4053a3:	mov    edx,esp
  4053a5:	dec    edx
  4053a6:	inc    ebx
  4053a7:	add    ebx,DWORD PTR [edx+ebx*1]
  4053aa:	dec    ebx
  4053ab:	xor    edx,edx
  4053ad:	add    DWORD PTR [ebp-0x10],ebx
  4053b0:	pop    ebx
  4053b1:	mov    eax,DWORD PTR [ebp-0x10]
  4053b4:	pop    edi
  4053b5:	pop    esi
  4053b6:	pop    ebx
  4053b7:	leave  
  4053b8:	ret    0x10
  4053bb:	push   ebp
  4053bc:	mov    ebp,esp
  4053be:	sub    esp,0x7c
  4053c1:	mov    eax,ds:0x42a000
  4053c6:	xor    eax,DWORD PTR ds:0x42c014
  4053cc:	mov    ds:0x42a000,eax
  4053d1:	push   esi
  4053d2:	and    DWORD PTR ds:0x42a004,0x0
  4053dc:	jmp    0x4053f0
  4053e1:	xor    esi,esi
  4053e3:	or     esi,DWORD PTR ds:0x42a004
  4053e9:	inc    esi
  4053ea:	mov    DWORD PTR ds:0x42a004,esi
  4053f0:	cmp    DWORD PTR ds:0x42a004,0x18
  4053f7:	jae    0x4054e8
  4053fd:	cmp    DWORD PTR ds:0x42a004,0x6
  405404:	jne    0x405415
  40540a:	push   0x429028
  40540f:	call   DWORD PTR ds:0x42e9d3
  405415:	cmp    DWORD PTR ds:0x42a004,0x5
  40541c:	jne    0x405431
  405422:	xor    esi,esi
  405424:	or     esi,DWORD PTR ds:0x42a004
  40542a:	inc    esi
  40542b:	mov    DWORD PTR ds:0x42a004,esi
  405431:	jmp    0x4053e1
  405436:	and    DWORD PTR ds:0x42a014,0x0
  405440:	jmp    0x405454
  405445:	xor    esi,esi
  405447:	or     esi,DWORD PTR ds:0x42a014
  40544d:	inc    esi
  40544e:	mov    DWORD PTR ds:0x42a014,esi
  405454:	cmp    DWORD PTR ds:0x42a014,0x19
  40545b:	jae    0x4054e8
  405461:	cmp    DWORD PTR ds:0x42a014,0xf
  405468:	jne    0x405483
  40546e:	push   0x42d01c
  405473:	push   0x42a00c
  405478:	push   0x42d010
  40547d:	call   DWORD PTR ds:0x42e993
  405483:	cmp    DWORD PTR ds:0x42a014,0xe
  40548a:	jne    0x40549d
  405490:	mov    esi,DWORD PTR ds:0x42a014
  405496:	inc    esi
  405497:	mov    DWORD PTR ds:0x42a014,esi
  40549d:	jmp    0x405445
  4054a2:	mov    DWORD PTR ds:0x42c010,0x19
  4054ac:	cmp    DWORD PTR ds:0x42c010,0x0
  4054b3:	je     0x4054e8
  4054b9:	cmp    DWORD PTR ds:0x42c010,0x1e
  4054c0:	jne    0x4054d6
  4054c6:	push   0x0
  4054c8:	push   0x13e0
  4054cd:	push   DWORD PTR [ebp-0x14]
  4054d0:	call   DWORD PTR ds:0x42e997
  4054d6:	mov    esi,DWORD PTR ds:0x42c010
  4054dc:	dec    esi
  4054dd:	mov    DWORD PTR ds:0x42c010,esi
  4054e3:	jmp    0x4054ac
  4054e8:	push   edi
  4054e9:	adc    DWORD PTR ds:0x42901c,edx
  4054ef:	mov    eax,ds:0x42e313
  4054f4:	mov    esi,DWORD PTR ds:0x42c01c
  4054fa:	and    DWORD PTR ds:0x42a00c,esi
  405500:	mov    DWORD PTR [ebp-0x24],eax
  405503:	mov    eax,ds:0x42e41f
  405508:	mov    DWORD PTR [ebp-0x34],eax
  40550b:	mov    DWORD PTR ds:0x42b008,0x1b
  405515:	cmp    DWORD PTR ds:0x42b008,0x0
  40551c:	je     0x405564
  405522:	cmp    DWORD PTR ds:0x42b008,0x26
  405529:	jne    0x405554
  40552f:	push   0x5039
  405534:	push   DWORD PTR [ebp-0x20]
  405537:	push   0x42d010
  40553c:	push   0x88e6
  405541:	push   DWORD PTR [ebp-0x10]
  405544:	push   0x8f04
  405549:	push   0x8b34
  40554e:	call   DWORD PTR ds:0x42e99f
  405554:	mov    eax,ds:0x42b008
  405559:	dec    eax
  40555a:	mov    ds:0x42b008,eax
  40555f:	jmp    0x405515
  405564:	and    DWORD PTR [ebp-0x30],0x0
  405568:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  40556f:	add    eax,eax
  405571:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  405578:	add    DWORD PTR ds:0x42c014,edi
  40557e:	mov    eax,DWORD PTR [ebp-0x10]
  405581:	and    DWORD PTR ds:0x42d014,0x0
  40558b:	mov    esi,DWORD PTR ds:0x42d014
  405591:	inc    esi
  405592:	mov    DWORD PTR ds:0x42d014,esi
  405598:	cmp    DWORD PTR ds:0x42d014,0x5
  40559f:	jne    0x4055c0
  4055a5:	push   0x42c004
  4055aa:	push   DWORD PTR [ebp-0x20]
  4055ad:	push   0x42e0c7
  4055b2:	push   DWORD PTR [ebp-0x24]
  4055b5:	push   0x31c8
  4055ba:	call   DWORD PTR ds:0x42e9a3
  4055c0:	cmp    DWORD PTR ds:0x42d014,0x4
  4055c7:	jne    0x4055dc
  4055cd:	xor    esi,esi
  4055cf:	xor    esi,DWORD PTR ds:0x42d014
  4055d5:	inc    esi
  4055d6:	mov    DWORD PTR ds:0x42d014,esi
  4055dc:	cmp    DWORD PTR ds:0x42d014,0x1c
  4055e3:	jb     0x40558b
  4055e9:	and    DWORD PTR ds:0x42c004,0x0
  4055f3:	xor    ecx,ecx
  4055f5:	xor    ecx,DWORD PTR ds:0x42c004
  4055fb:	inc    ecx
  4055fc:	mov    DWORD PTR ds:0x42c004,ecx
  405602:	cmp    DWORD PTR ds:0x42c004,0x28
  405609:	jne    0x40561a
  40560f:	push   0x42d010
  405614:	call   DWORD PTR ds:0x42e9ab
  40561a:	cmp    DWORD PTR ds:0x42c004,0x18
  405621:	jb     0x4055f3
  405627:	and    DWORD PTR ds:0x42c018,edx
  40562d:	mov    ecx,DWORD PTR [ebp-0x10]
  405630:	sub    eax,ecx
  405632:	mov    DWORD PTR [ebp-0x10],eax
  405635:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  40563c:	mov    eax,DWORD PTR [ebp-0x18]
  40563f:	mov    ecx,DWORD PTR [ebp-0x18]
  405642:	sub    eax,ecx
  405644:	mov    DWORD PTR [ebp-0x18],eax
  405647:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  40564e:	jmp    0x4079f8
  405653:	neg    DWORD PTR [edi+0x51]
  405656:	pop    ds
  405657:	adc    edi,esi
  405659:	div    DWORD PTR [edi]
  40565b:	jge    0x40560a
  40565d:	aam    0xe9
  40565f:	lods   eax,DWORD PTR ds:[esi]
  405660:	jmp    0x4055ea
  405662:	jle    0x405694
  405664:	pop    edi
  405665:	jp     0x4056e1
  405667:	in     eax,0x5f
  405669:	jp     0x4056e5
  40566b:	push   0x6c
  40566d:	inc    esp
  40566e:	or     BYTE PTR [esi-0x1db0bd95],bh
  405674:	adc    al,0x15
  405676:	mov    esi,0xc2de3f7f
  40567b:	mov    bl,0x6e
  40567d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40567e:	aas    
  40567f:	mov    DWORD PTR [eax-0x1b],0x98076c9a
  405686:	lock add DWORD PTR [ecx],esp
  405689:	jmp    0x4056f2
  40568b:	ror    DWORD PTR [ebp-0x676ea993],cl
  405691:	out    dx,eax
  405692:	bound  edx,QWORD PTR [ebx+ebp*1]
  405695:	xor    esi,ecx
  405697:	pop    esp
  405698:	ss pop ebx
  40569a:	fadd   st(7),st
  40569c:	or     al,0xb3
  40569e:	les    esi,FWORD PTR [eax]
  4056a0:	sub    al,BYTE PTR [ebp-0x2e]
  4056a3:	xchg   ebp,eax
  4056a4:	dec    edi
  4056a5:	std    
  4056a6:	or     al,0x4b
  4056a8:	mov    esp,0xf521b995
  4056ad:	jnp    0x4056d8
  4056af:	aam    0xc3
  4056b1:	jmp    0x405671
  4056b3:	outs   dx,BYTE PTR ds:[esi]
  4056b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056b5:	inc    esi
  4056b6:	nop
  4056b7:	shl    bl,0x4a
  4056ba:	neg    cl
  4056bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056bd:	jbe    0x40566d
  4056bf:	es pop edi
  4056c1:	aam    0xde
  4056c3:	leave  
  4056c4:	mov    edi,ds
  4056c6:	adc    dh,bl
  4056c8:	pop    edi
  4056c9:	out    0xe4,al
  4056cb:	sbb    DWORD PTR [esi-0x5a],esi
  4056ce:	popf   
  4056cf:	jne    0x40566e
  4056d1:	xchg   edx,eax
  4056d2:	adc    DWORD PTR [ebp+0x38044223],ecx
  4056d8:	mov    edx,?
  4056da:	xor    BYTE PTR [ebx+0x6d],bl
  4056dd:	inc    esi
  4056de:	ins    BYTE PTR es:[edi],dx
  4056df:	ins    BYTE PTR es:[edi],dx
  4056e0:	das    
  4056e1:	pop    ecx
  4056e2:	cmp    al,0x4b
  4056e4:	in     al,dx
  4056e5:	aad    0x2c
  4056e7:	push   ecx
  4056e8:	mov    ds:0x60e2d4ed,al
  4056ed:	stos   BYTE PTR es:[edi],al
  4056ee:	cwde   
  4056ef:	jb     0x4056a9
  4056f1:	add    DWORD PTR [esi+0x65b7a5e0],edx
  4056f7:	stos   DWORD PTR es:[edi],eax
  4056f8:	jnp    0x4056f7
  4056fa:	shl    BYTE PTR [ebx],1
  4056fc:	jp     0x4056f5
  4056fe:	test   BYTE PTR [ebx+0xe],ch
  405701:	jno    0x4056ba
  405703:	xor    al,0x91
  405705:	int3   
  405706:	push   ebx
  405707:	jnp    0x405689
  405709:	rcr    DWORD PTR [edi],0xc1
  40570c:	cmp    esp,DWORD PTR [ebx]
  40570e:	mov    WORD PTR [ecx-0x73941f33],cs
  405714:	cmp    DWORD PTR [ecx],ecx
  405716:	sub    al,BYTE PTR ds:0x7e100142
  40571c:	mov    BYTE PTR [esi+edx*4+0x4c],bh
  405720:	and    DWORD PTR [edi+edi*8+0x50],ebp
  405724:	imul   eax,DWORD PTR [eax+0xe],0xc4cb7348
  40572b:	ja     0x4056f6
  40572d:	cmc    
  40572e:	or     DWORD PTR [ebx],eax
  405730:	and    BYTE PTR [edx-0x7940902],al
  405736:	stc    
  405737:	jecxz  0x40573b
  405739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40573a:	mov    dh,0x67
  40573c:	jns    0x405771
  40573e:	cdq    
  40573f:	xor    dh,BYTE PTR [eax]
  405741:	adc    DWORD PTR [esi-0x4946b237],ebx
  405747:	dec    esp
  405748:	pop    esi
  405749:	sbb    al,0xc3
  40574b:	lods   al,BYTE PTR ds:[esi]
  40574c:	jg     0x405719
  40574e:	jmp    0xc471:0xd18edeec
  405755:	sbb    eax,0x17f60ac0
  40575a:	fcomp  QWORD PTR [edi+0x56]
  40575d:	and    al,BYTE PTR [edx]
  40575f:	out    dx,eax
  405760:	cwde   
  405761:	add    al,0x14
  405763:	(bad)  
  405765:	(bad)  
  405766:	hlt    
  405767:	pop    esp
  405768:	add    ecx,DWORD PTR [edx+0x42343046]
  40576e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40576f:	shl    DWORD PTR [ebx],0x63
  405772:	inc    ecx
  405773:	stos   DWORD PTR es:[edi],eax
  405774:	lods   eax,DWORD PTR ds:[esi]
  405775:	push   0x9413ef94
  40577a:	add    al,BYTE PTR [edx]
  40577c:	icebp  
  40577d:	fnstenv [edi+0x6e]
  405780:	push   cs
  405781:	sub    dh,BYTE PTR [ecx+0x6a]
  405784:	ja     0x405728
  405786:	nop
  405787:	int    0x32
  405789:	loope  0x40576a
  40578b:	inc    edi
  40578c:	aas    
  40578d:	lahf   
  40578e:	xchg   ecx,eax
  40578f:	nop
  405790:	sbb    BYTE PTR [ecx+0x54],ah
  405793:	add    al,0x9f
  405795:	imul   edi,ecx,0x6f
  405798:	addr16 nop
  40579a:	or     esp,eax
  40579c:	mov    edi,0x20ba8eae
  4057a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057a2:	add    dl,cl
  4057a4:	pop    esp
  4057a5:	pop    esi
  4057a6:	lods   al,BYTE PTR ds:[esi]
  4057a7:	outs   dx,DWORD PTR ds:[esi]
  4057a8:	fnsave [eax+0x45]
  4057ab:	pop    ebp
  4057ac:	outs   dx,DWORD PTR ds:[esi]
  4057ad:	cli    
  4057ae:	inc    edi
  4057af:	ins    DWORD PTR es:[edi],dx
  4057b0:	call   0xeb49:0xb1c67a8e
  4057b7:	mov    al,0x18
  4057b9:	push   ebx
  4057ba:	sahf   
  4057bb:	mov    bl,0x6b
  4057bd:	push   ds
  4057be:	out    dx,eax
  4057bf:	add    al,0x25
  4057c1:	scas   al,BYTE PTR es:[edi]
  4057c2:	int3   
  4057c3:	rol    edi,1
  4057c5:	scas   al,BYTE PTR es:[edi]
  4057c6:	outs   dx,DWORD PTR ds:[esi]
  4057c7:	cmp    DWORD PTR [edx],0xf4d199f3
  4057cd:	popa   
  4057ce:	sahf   
  4057cf:	jg     0x4057c5
  4057d1:	imul   ecx,edi,0x34f423ff
  4057d7:	mov    bh,0xc5
  4057d9:	lods   al,BYTE PTR ds:[esi]
  4057da:	inc    esi
  4057db:	mov    ebp,0x2a415e2
  4057e0:	sub    eax,0x328aa643
  4057e5:	(bad)  
  4057e6:	fnstcw WORD PTR [edx-0x34556c52]
  4057ec:	jne    0x40579b
  4057ee:	arpl   WORD PTR [edi+0x5622679c],cx
  4057f4:	adc    BYTE PTR [edx-0x2bb95ba2],cl
  4057fa:	pop    ecx
  4057fb:	in     eax,0xee
  4057fd:	cwde   
  4057fe:	shl    DWORD PTR [edi-0x8ebbead],0x23
  405805:	adc    al,0xd4
  405807:	mov    ebp,0xe58f08d3
  40580c:	arpl   bx,cx
  40580e:	fbstp  TBYTE PTR [eax-0x7cacbe9a]
  405814:	imul   ecx,DWORD PTR [esi-0x16365849],0x79b78652
  40581e:	jmp    0x405843
  405820:	or     al,0x7c
  405822:	fild   WORD PTR [edx]
  405824:	repz xchg ebp,eax
  405826:	ins    DWORD PTR es:[edi],dx
  405827:	pop    ss
  405828:	xor    edi,DWORD PTR [eax-0x70]
  40582b:	call   0x997333fc
  405830:	ret    0x1f51
  405833:	popa   
  405834:	pop    edi
  405835:	dec    ebp
  405836:	xor    DWORD PTR [edx+0x27],edi
  405839:	scas   eax,DWORD PTR es:[edi]
  40583a:	aaa    
  40583b:	push   ebx
  40583c:	iret   
  40583d:	enter  0x6257,0x39
  405841:	mov    esi,0xf8f175bc
  405846:	xchg   esi,eax
  405847:	xchg   DWORD PTR [esi],esi
  405849:	pop    es
  40584a:	ins    DWORD PTR es:[edi],dx
  40584b:	(bad)  
  40584c:	cmp    edi,ebx
  40584e:	aam    0xc1
  405850:	outs   dx,DWORD PTR ds:[esi]
  405851:	adc    eax,0x453c71ae
  405856:	inc    ebp
  405857:	pop    eax
  405858:	mov    WORD PTR [ecx-0x5c],?
  40585b:	pop    esp
  40585c:	mov    edi,0xd0e9ad32
  405861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405862:	inc    ebp
  405863:	pop    ecx
  405864:	xchg   ecx,eax
  405865:	out    dx,eax
  405866:	clc    
  405867:	dec    ebx
  405868:	(bad)  
  405869:	frndint 
  40586b:	rcr    BYTE PTR [eax-0x71],0x5a
  40586f:	test   al,0x59
  405871:	xor    BYTE PTR [edx-0x393f04f3],dl
  405877:	repz sub eax,0x958fb0f
  40587d:	and    BYTE PTR [esi],dl
  40587f:	stos   BYTE PTR es:[edi],al
  405880:	rcr    DWORD PTR [edi-0x7],1
  405883:	mov    DWORD PTR [esp+ebp*2],edx
  405886:	jnp    0x4058d9
  405888:	je     0x4058e6
  40588a:	iret   
  40588b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40588c:	aam    0xb2
  40588e:	mov    BYTE PTR [ecx-0x6607c0e9],0x25
  405895:	cmp    al,0x6
  405897:	std    
  405898:	dec    esi
  405899:	aas    
  40589a:	fsubr  QWORD PTR [ecx+0xa]
  40589d:	or     al,0xcb
  40589f:	inc    ecx
  4058a0:	sbb    dh,0xd4
  4058a3:	mov    edx,0x2970e271
  4058a8:	xor    ebx,edx
  4058aa:	dec    edx
  4058ab:	dec    di
  4058ad:	and    BYTE PTR [ebx-0x1c966920],cl
  4058b3:	(bad)  
  4058b4:	rol    eax,cl
  4058b6:	add    ebp,ebx
  4058b8:	add    dl,dl
  4058ba:	into   
  4058bb:	(bad)  
  4058bc:	fidiv  DWORD PTR [edx]
  4058be:	sub    edi,DWORD PTR [ebx+0x24]
  4058c1:	mov    al,ds:0x2ec3215d
  4058c6:	aad    0x1e
  4058c8:	lods   eax,DWORD PTR gs:[esi]
  4058ca:	ret    
  4058cb:	out    dx,eax
  4058cc:	mov    dl,0xfe
  4058ce:	xor    eax,0xc1cfc16d
  4058d3:	jno    0x405869
  4058d5:	stos   DWORD PTR es:[edi],eax
  4058d6:	arpl   WORD PTR [edi-0x68c86923],dx
  4058dc:	mov    dh,BYTE PTR [eax-0x61]
  4058df:	bnd ret 0x9889
  4058e3:	or     ecx,DWORD PTR [ebx]
  4058e5:	and    dh,BYTE PTR [ebx-0x6e]
  4058e8:	or     eax,0xb6b81dca
  4058ed:	adc    DWORD PTR [esi+eiz*2+0x7b2fdae6],ebp
  4058f4:	jno    0x405918
  4058f6:	enter  0x67c8,0x28
  4058fa:	(bad)  
  4058fb:	cmp    al,0x1d
  4058fd:	adc    BYTE PTR [ebp-0x73e8f7ab],bh
  405903:	jmp    0x33651fcf
  405908:	jl     0x40597f
  40590a:	mov    dl,0x88
  40590c:	adc    DWORD PTR [ebx+0x37],ebp
  40590f:	adc    ebx,DWORD PTR [esp+ebp*1]
  405912:	into   
  405913:	jle    0x4058a0
  405915:	pop    ecx
  405916:	cmp    edi,DWORD PTR [esi+0x3f921352]
  40591c:	test   eax,0xf4280456
  405921:	or     eax,0x6797da06
  405926:	or     edx,esi
  405928:	dec    edx
  405929:	xor    bl,BYTE PTR [ecx-0x21]
  40592c:	and    DWORD PTR [ecx+0x55c1b6c4],ebx
  405932:	jmp    0x2d86490d
  405937:	pop    ebx
  405938:	pushf  
  405939:	scas   eax,DWORD PTR es:[edi]
  40593a:	cld    
  40593b:	jbe    0x4058e6
  40593d:	cwde   
  40593e:	fist   DWORD PTR [ebx+0x3a17e99e]
  405944:	pushf  
  405945:	jno    0x40597d
  405947:	mov    edi,0x19afca01
  40594c:	inc    esi
  40594d:	or     esi,DWORD PTR ds:0xe8087994
  405953:	mov    gs,WORD PTR [ebp+0x59]
  405956:	inc    ecx
  405957:	mov    BYTE PTR [ecx+0x7f179d08],ch
  40595d:	out    dx,al
  40595e:	mov    al,0xb0
  405960:	sbb    DWORD PTR [eax],edi
  405962:	mov    es,edx
  405964:	mov    edx,DWORD PTR [ebx*2-0x2de6dd5f]
  40596b:	or     BYTE PTR [edi-0x2c],bl
  40596e:	inc    ecx
  40596f:	mov    dl,0x25
  405971:	inc    eax
  405972:	retf   
  405973:	xchg   DWORD PTR [ebx-0xeba302c],ebx
  405979:	es inc ebp
  40597b:	test   ebp,0x9e489692
  405981:	xor    ecx,edx
  405983:	loop   0x4059b7
  405985:	test   bl,0x4
  405988:	inc    eax
  405989:	loope  0x40594a
  40598b:	mov    bh,0xf1
  40598d:	(bad)  [esp+edi*4+0x15]
  405991:	ins    DWORD PTR es:[edi],dx
  405992:	xchg   esp,eax
  405993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405994:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405995:	inc    BYTE PTR [eax]
  405997:	test   al,0x39
  405999:	sbb    ah,BYTE PTR [ebx+0x55]
  40599c:	shr    BYTE PTR [edi],0x46
  40599f:	or     edx,DWORD PTR [esi-0x47f36b20]
  4059a5:	int3   
  4059a6:	arpl   WORD PTR [eax+0x23],bp
  4059a9:	popf   
  4059aa:	mov    gs,WORD PTR [esi]
  4059ac:	hlt    
  4059ad:	fwait
  4059ae:	pop    edi
  4059af:	xchg   edi,eax
  4059b0:	mov    bl,0x89
  4059b2:	bts    edx,ecx
  4059b5:	ja     0x4059ab
  4059b7:	xor    edx,DWORD PTR [ecx]
  4059b9:	loopne 0x40599e
  4059bb:	mov    dh,0x28
  4059bd:	or     al,0x5e
  4059bf:	and    edx,DWORD PTR [ebp+0x35cc9de9]
  4059c5:	sti    
  4059c6:	sub    dh,bh
  4059c8:	les    esp,FWORD PTR ds:0x54315093
  4059ce:	mov    WORD PTR [edx-0x24],?
  4059d1:	lock xor BYTE PTR [edi],cl
  4059d4:	xchg   edx,eax
  4059d5:	and    ecx,DWORD PTR [ecx-0x7b]
  4059d8:	das    
  4059d9:	nop
  4059da:	mov    cl,0xb9
  4059dc:	arpl   di,sp
  4059de:	jo     0x405995
  4059e0:	rcl    al,1
  4059e2:	ret    0x7fa
  4059e5:	fsubr  st(0),st
  4059e7:	cmp    DWORD PTR [edx+0x7b],0x50
  4059eb:	push   eax
  4059ec:	cdq    
  4059ed:	adc    dl,BYTE PTR [eax+0xfe83a4c]
  4059f3:	sub    DWORD PTR [edx-0x75f81d02],0xffffffec
  4059fa:	shr    edi,cl
  4059fc:	inc    edi
  4059fd:	bound  esi,QWORD PTR [edi]
  4059ff:	popa   
  405a00:	out    0x64,eax
  405a02:	jge    0x405a6e
  405a04:	mov    eax,0x5fa919e8
  405a09:	and    al,0xe6
  405a0b:	test   al,0x3c
  405a0d:	push   ds
  405a0e:	mov    cl,0x50
  405a10:	int3   
  405a11:	lahf   
  405a12:	pop    esi
  405a13:	sbb    eax,0xb388b80
  405a18:	ret    
  405a19:	push   ecx
  405a1a:	jno    0x4059f4
  405a1c:	daa    
  405a1d:	aad    0xc2
  405a1f:	mov    edi,ss
  405a21:	xchg   ebp,eax
  405a22:	int    0x7c
  405a24:	mov    dh,al
  405a26:	call   0x97c4700
  405a2b:	or     bl,BYTE PTR [ecx]
  405a2d:	add    dh,BYTE PTR [ebp+0x3498f9ce]
  405a33:	jmp    0x405aa9
  405a35:	loopne 0x405a88
  405a37:	and    DWORD PTR [ebp+0x130ef994],edi
  405a3d:	add    eax,0xea9571
  405a42:	cmp    BYTE PTR [ebx+0x285cd3bb],0x75
  405a49:	add    al,BYTE PTR [eax]
  405a4b:	add    BYTE PTR [edi],bl
  405a4d:	adc    ah,BYTE PTR [edi]
  405a4f:	pop    esp
  405a50:	sbb    eax,0x2847fa84
  405a55:	rol    BYTE PTR [eax-0x48],0x6
  405a59:	rol    BYTE PTR [ecx+0x5186e5b5],cl
  405a5f:	mov    ds:0xb810eadb,eax
  405a64:	outs   dx,BYTE PTR ds:[esi]
  405a65:	pop    ecx
  405a66:	mov    ah,0x4c
  405a68:	sti    
  405a69:	jl     0x405ad3
  405a6b:	aad    0x50
  405a6d:	cmp    DWORD PTR [ebp+ebx*2+0x72a201c],ebp
  405a74:	jecxz  0x405aaa
  405a76:	daa    
  405a77:	dec    edx
  405a78:	outs   dx,DWORD PTR ds:[esi]
  405a79:	sbb    BYTE PTR [edx],0xef
  405a7c:	mov    eax,0xe5e219c
  405a81:	in     eax,0x76
  405a83:	push   eax
  405a84:	ins    BYTE PTR es:[edi],dx
  405a85:	dec    edx
  405a86:	(bad)  
  405a88:	sub    eax,0x6b1a0c0e
  405a8d:	sbb    DWORD PTR [ecx],eax
  405a8f:	mov    bh,0xd9
  405a91:	(bad)  
  405a92:	or     al,0xb3
  405a94:	mov    ds:0xcbd44f39,al
  405a99:	call   0x588d:0xc3d6b302
  405aa0:	mov    al,ds:0x75cf760f
  405aa5:	cmp    ah,BYTE PTR [ebx]
  405aa7:	dec    esi
  405aa8:	ret    0xda6d
  405aab:	mov    dl,0x52
  405aad:	cmp    al,BYTE PTR [esi-0x1d481287]
  405ab3:	xor    dl,BYTE PTR [esi]
  405ab5:	pop    ebp
  405ab6:	dec    esi
  405ab7:	loopne 0x405a67
  405ab9:	mov    DWORD PTR [edx],esi
  405abb:	push   ebp
  405abc:	lods   eax,DWORD PTR ds:[esi]
  405abd:	fs cdq 
  405abf:	xor    eax,0x301f87c6
  405ac4:	pop    edi
  405ac5:	dec    edx
  405ac6:	or     BYTE PTR [esi-0x788c51c0],dl
  405acc:	cmp    DWORD PTR fs:[edx+0x0],ebp
  405ad0:	std    
  405ad1:	sbb    ecx,DWORD PTR [esi+0x7e]
  405ad4:	fiadd  DWORD PTR [ebp+0x3de579fc]
  405ada:	lods   eax,DWORD PTR ds:[esi]
  405adb:	je     0x405adc
  405add:	add    al,ch
  405adf:	fdiv   st(5),st
  405ae1:	cmp    al,dh
  405ae3:	sti    
  405ae4:	inc    dx
  405ae6:	cli    
  405ae7:	push   0xf1dfcc89
  405aec:	adc    al,BYTE PTR [edi-0x5c]
  405aef:	jl     0x405af0
  405af1:	dec    eax
  405af2:	xlat   BYTE PTR ds:[ebx]
  405af3:	mov    ebp,0x24a65f83
  405af8:	imul   edx,eax,0x6922c07b
  405afe:	jnp    0x405b6e
  405b00:	fdiv   DWORD PTR [ecx+0x74]
  405b03:	add    DWORD PTR [ebx-0x65],ebp
  405b06:	jae    0x405b3c
  405b08:	sub    BYTE PTR [eax],bl
  405b0a:	inc    esp
  405b0b:	and    ch,BYTE PTR [ebp+0x265e7734]
  405b11:	cmp    BYTE PTR [ebp-0x5a],bl
  405b14:	xchg   ebx,eax
  405b15:	addr16 xchg ebx,eax
  405b17:	fcmovne st,st(1)
  405b19:	sbb    eax,0xd5bbf02f
  405b1e:	lds    cx,DWORD PTR [ecx+0x39d90783]
  405b25:	sub    DWORD PTR [edx],eax
  405b27:	les    esi,FWORD PTR [eax+0x8]
  405b2a:	xchg   esp,eax
  405b2b:	dec    ecx
  405b2c:	push   ss
  405b2d:	push   ss
  405b2e:	je     0x405b16
  405b30:	mov    edi,0x290a5b2d
  405b35:	mov    ds:0xb0461c66,al
  405b3a:	(bad)  
  405b3c:	je     0x405b77
  405b3e:	js     0x405b1a
  405b40:	fsin   
  405b42:	jmp    0x405add
  405b44:	or     BYTE PTR [eax],ah
  405b46:	sub    esi,DWORD PTR [ecx+ecx*2]
  405b49:	int3   
  405b4a:	je     0x405bb6
  405b4c:	out    0xa2,eax
  405b4e:	xchg   BYTE PTR [edi-0x74fe3d2f],bl
  405b54:	mov    cl,0x52
  405b56:	fadd   st(5),st
  405b58:	jne    0x405af2
  405b5a:	pop    es
  405b5b:	xchg   edi,eax
  405b5c:	js     0x405b28
  405b5e:	hlt    
  405b5f:	jb     0x405ba0
  405b61:	gs loope 0x405b16
  405b64:	inc    edi
  405b65:	mov    esi,0x966c8bb8
  405b6a:	mov    ebx,0xe49d5191
  405b6f:	or     DWORD PTR ds:0xb20f4a93,edi
  405b75:	cli    
  405b76:	mov    ah,BYTE PTR [ebp+0xa]
  405b79:	mov    dh,0xdb
  405b7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b7c:	jg     0x405ba9
  405b7e:	rcl    DWORD PTR [ecx],cl
  405b80:	pop    ebx
  405b81:	mov    ch,0xaf
  405b83:	dec    ebp
  405b84:	es sub al,0x9d
  405b87:	(bad)  
  405b88:	push   ebx
  405b89:	addr16 repz cmp al,0x60
  405b8d:	les    eax,FWORD PTR [ecx-0x650dd1e9]
  405b93:	sahf   
  405b94:	jbe    0x405b99
  405b96:	mov    BYTE PTR [ebp+0x50],ah
  405b99:	mov    edx,0x7a3274c
  405b9e:	cmp    al,BYTE PTR [ecx]
  405ba0:	and    al,0x7f
  405ba2:	jmp    0x405b41
  405ba4:	gs jb  0x405bf4
  405ba7:	addr16 push esp
  405ba9:	push   esi
  405baa:	sbb    BYTE PTR [eax+0xb],0xdb
  405bae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405baf:	arpl   WORD PTR [ebp-0x2f],ax
  405bb2:	pop    ecx
  405bb3:	pop    ds
  405bb4:	call   FWORD PTR [ecx]
  405bb6:	lahf   
  405bb7:	dec    edi
  405bb8:	mov    al,ds:0xad229c01
  405bbd:	cmp    BYTE PTR ds:0x34277ae6,dh
  405bc3:	hlt    
  405bc4:	sub    al,0x2f
  405bc6:	mov    ds:0x566bd110,al
  405bcb:	xchg   esi,eax
  405bcc:	adc    cl,BYTE PTR [edx+eiz*1+0x3057a0ed]
  405bd3:	dec    edx
  405bd4:	pop    es
  405bd5:	and    eax,esp
  405bd7:	push   ebp
  405bd8:	add    BYTE PTR [ebp+ebp*8-0x3176c2cf],dl
  405bdf:	cmc    
  405be0:	mov    eax,ds:0xa97da9ed
  405be5:	retf   0x2f56
  405be8:	loopne 0x405b90
  405bea:	fbstp  TBYTE PTR [edi]
  405bec:	mul    DWORD PTR ds:[esi]
  405bef:	jecxz  0x405c1f
  405bf1:	inc    ecx
  405bf2:	imul   edx,edi,0xffffffd8
  405bf5:	idiv   BYTE PTR [ebp-0x68]
  405bf8:	mov    dh,0x42
  405bfa:	icebp  
  405bfb:	leave  
  405bfc:	pop    es
  405bfd:	lods   eax,DWORD PTR ds:[esi]
  405bfe:	jb     0x405bc0
  405c00:	cmp    eax,0xe7559689
  405c05:	jg     0x405c12
  405c07:	push   0x48ff5aec
  405c0c:	sbb    BYTE PTR [edi],0xa2
  405c0f:	cmp    BYTE PTR cs:[ebx+0x3135a80f],ah
  405c16:	xlat   BYTE PTR ds:[ebx]
  405c17:	fisubr WORD PTR [ecx]
  405c19:	push   edi
  405c1a:	dec    ebp
  405c1b:	or     DWORD PTR [ebx+0x4a],eax
  405c1e:	out    dx,al
  405c1f:	jecxz  0x405bfa
  405c21:	(bad)  
  405c23:	clc    
  405c24:	push   edi
  405c25:	aad    0xc4
  405c27:	jmp    0x33b9514
  405c2c:	sub    edx,edi
  405c2e:	dec    edx
  405c2f:	shl    BYTE PTR [esi],cl
  405c31:	shl    DWORD PTR [ecx+0x3a],cl
  405c34:	pop    ebx
  405c35:	jb     0x405c2b
  405c37:	es test eax,0x5dc826f
  405c3d:	into   
  405c3e:	push   esp
  405c3f:	xchg   esi,eax
  405c40:	(bad)  
  405c41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c42:	aaa    
  405c43:	sub    edi,DWORD PTR [eax]
  405c45:	adc    eax,DWORD PTR es:[ebp-0x25]
  405c49:	pop    es
  405c4a:	icebp  
  405c4b:	sbb    ecx,DWORD PTR [edi]
  405c4d:	pop    edx
  405c4e:	nop
  405c4f:	xchg   esp,eax
  405c50:	scas   al,BYTE PTR es:[edi]
  405c51:	test   DWORD PTR [edx-0x502f50b3],0xf5d00c9f
  405c5b:	sub    DWORD PTR [edi],0x5b5b99f2
  405c61:	out    dx,al
  405c62:	sbb    al,0x7c
  405c64:	sbb    BYTE PTR [ebp-0x4f],al
  405c67:	pop    eax
  405c68:	jl     0x405c79
  405c6a:	inc    eax
  405c6b:	inc    ebp
  405c6c:	leave  
  405c6d:	aaa    
  405c6e:	sub    eax,0xbc15dc9f
  405c73:	shl    bl,0x77
  405c76:	xor    BYTE PTR [eax],al
  405c78:	repnz mov dl,0xea
  405c7b:	mov    ebx,0xc85e2e4a
  405c80:	inc    esi
  405c81:	mov    WORD PTR [ebx+ecx*8-0x4a],?
  405c85:	add    DWORD PTR [edi],ebx
  405c87:	adc    DWORD PTR es:[ecx+0x64969e7f],0x8df63205
  405c92:	and    eax,ebp
  405c94:	in     eax,0x96
  405c96:	dec    esp
  405c97:	inc    ebx
  405c98:	aad    0xc9
  405c9a:	pusha  
  405c9b:	aam    0x16
  405c9d:	xchg   esp,eax
  405c9e:	push   ebx
  405c9f:	(bad)  
  405ca1:	adc    al,0xa4
  405ca3:	scas   al,BYTE PTR es:[edi]
  405ca4:	lods   al,BYTE PTR ds:[esi]
  405ca5:	push   ds
  405ca6:	pop    esi
  405ca7:	es in  al,dx
  405ca9:	pushf  
  405caa:	sub    al,0xa6
  405cac:	jb     0x405c78
  405cae:	pop    esi
  405caf:	xchg   esp,eax
  405cb0:	scas   al,BYTE PTR es:[edi]
  405cb1:	jmp    0xbc440fe7
  405cb6:	sbb    BYTE PTR [ebp*4-0x6aa93a35],bl
  405cbd:	adc    ebx,DWORD PTR [edx-0x4b02492b]
  405cc3:	xor    dh,bl
  405cc5:	imul   ebp,DWORD PTR [edx],0xe5789a90
  405ccb:	lods   eax,DWORD PTR ds:[esi]
  405ccc:	in     eax,0x4a
  405cce:	push   0x76
  405cd0:	les    edi,FWORD PTR [ebx-0x3a1c44b7]
  405cd6:	loope  0x405c7a
  405cd8:	(bad)  
  405cd9:	dec    edi
  405cda:	dec    ecx
  405cdb:	push   ss
  405cdc:	mov    dh,0xab
  405cde:	pusha  
  405cdf:	imul   eax,DWORD PTR [edi+0x3a],0xffffffcf
  405ce3:	cmp    DWORD PTR [ebx-0x9cb8898],esp
  405ce9:	cmp    esp,DWORD PTR [ecx-0x25cc45d9]
  405cef:	xchg   edi,ecx
  405cf1:	(bad)  
  405cf3:	in     eax,0xad
  405cf5:	mov    eax,ds:0xe2da18dd
  405cfa:	or     BYTE PTR [eax],ch
  405cfc:	xchg   esi,eax
  405cfd:	mov    ch,0x6
  405cff:	rcl    bl,1
  405d01:	test   eax,0x975089e8
  405d06:	sub    eax,0xefe5afff
  405d0b:	cli    
  405d0c:	mov    ah,0xa0
  405d0e:	add    eax,DWORD PTR [edi-0x28758b0e]
  405d14:	push   ss
  405d15:	cmp    eax,0x74adf24e
  405d1a:	sbb    ecx,ebx
  405d1c:	add    al,0xb2
  405d1e:	call   0x41eb2a4f
  405d23:	imul   edx,DWORD PTR [ecx-0x49fb5f85],0xb6548b82
  405d2d:	ret    
  405d2e:	xor    al,0x67
  405d30:	gs mov ecx,0x39c54613
  405d36:	mov    dh,0x1
  405d38:	sub    al,BYTE PTR [edx]
  405d3a:	add    dh,BYTE PTR [ebx]
  405d3c:	pop    ss
  405d3d:	popf   
  405d3e:	pop    ebp
  405d3f:	add    eax,0x7495f72c
  405d44:	leave  
  405d45:	lea    esp,[edi+0x56392868]
  405d4b:	sub    DWORD PTR ds:0xfb479b33,eax
  405d51:	aam    0xc8
  405d53:	in     eax,0x9b
  405d55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d56:	ficom  DWORD PTR [edi-0x2542dd9b]
  405d5c:	dec    eax
  405d5d:	inc    eax
  405d5e:	test   eax,0x2270a656
  405d63:	int3   
  405d64:	sar    DWORD PTR [ebx+0x4c],1
  405d67:	or     BYTE PTR gs:[esp+eax*8+0x303deb05],ch
  405d6f:	aam    0xba
  405d71:	in     al,dx
  405d72:	cmp    BYTE PTR [ebx+0x10],0xbe
  405d76:	jp     0x405d04
  405d78:	adc    BYTE PTR [eax-0xf9ef581],bh
  405d7e:	add    esi,DWORD PTR [eax+0x6b]
  405d81:	lods   al,BYTE PTR ds:[esi]
  405d82:	push   0x33
  405d84:	cmp    ah,bh
  405d86:	xor    esi,DWORD PTR [eax+0x36d4702f]
  405d8c:	push   ebx
  405d8d:	mov    es,WORD PTR [esi]
  405d8f:	iret   
  405d90:	sbb    al,0x1e
  405d92:	sahf   
  405d93:	sbb    ch,BYTE PTR [ecx+0x7e]
  405d96:	outs   dx,BYTE PTR ds:[esi]
  405d97:	adc    BYTE PTR [edi+ebp*4],cl
  405d9a:	jns    0x405dc0
  405d9c:	pop    esi
  405d9d:	ret    
  405d9e:	je     0x405dd2
  405da0:	adc    bl,BYTE PTR [edx]
  405da2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405da3:	pushf  
  405da4:	repz cmc 
  405da6:	and    DWORD PTR [edx-0x38ae4b8f],0x52
  405dad:	jmp    0x2cff9025
  405db2:	pop    ecx
  405db3:	int3   
  405db4:	arpl   si,bx
  405db6:	repnz mov dl,BYTE PTR [esi-0x4007d10c]
  405dbd:	sti    
  405dbe:	cmc    
  405dbf:	mov    al,ds:0xa83c9f9f
  405dc4:	sbb    eax,0xc2cabec1
  405dc9:	int    0x76
  405dcb:	adc    bl,BYTE PTR [eax+0x60]
  405dce:	rol    bl,0x6b
  405dd1:	aas    
  405dd2:	imul   eax,DWORD PTR [ebx+0x5e],0x362b44cc
  405dd9:	push   eax
  405dda:	adc    DWORD PTR [eax-0x54],ebx
  405ddd:	push   ss
  405dde:	mov    cl,0xca
  405de0:	cdq    
  405de1:	xor    esi,DWORD PTR [ebx-0x14]
  405de4:	xchg   BYTE PTR [eax],bl
  405de6:	mov    esi,0x14a58751
  405deb:	jns    0x405e4d
  405ded:	adc    BYTE PTR [esi+0x55695c10],ch
  405df3:	mov    esi,DWORD PTR [ecx-0x4628ecc1]
  405df9:	cwde   
  405dfa:	mov    esp,gs
  405dfc:	xchg   edx,eax
  405dfd:	sbb    al,0x43
  405dff:	jnp    0x405e0e
  405e01:	outs   dx,BYTE PTR ds:[esi]
  405e02:	push   ebx
  405e03:	dec    ecx
  405e04:	mul    ebp
  405e06:	push   ds
  405e07:	cdq    
  405e08:	out    dx,al
  405e09:	sub    eax,DWORD PTR [edi]
  405e0b:	(bad)  
  405e0c:	xlat   BYTE PTR ds:[ebx]
  405e0d:	jnp    0x405e4e
  405e0f:	adc    bh,0xd3
  405e12:	inc    ecx
  405e13:	pop    es
  405e14:	sbb    ecx,DWORD PTR [edi]
  405e16:	inc    edi
  405e17:	dec    esp
  405e18:	inc    ebp
  405e19:	or     dl,BYTE PTR [edx+0x421df4e4]
  405e1f:	dec    esp
  405e20:	test   al,0x8b
  405e22:	loop   0x405e25
  405e24:	push   ebx
  405e25:	retf   
  405e26:	and    eax,0x6004b53f
  405e2b:	retf   0xf257
  405e2e:	mov    al,ds:0xb08a2c4a
  405e33:	mov    ch,0x52
  405e35:	retf   0x7d88
  405e38:	xchg   ecx,eax
  405e39:	bound  ebp,QWORD PTR [ebp+0x18]
  405e3c:	mov    eax,DWORD PTR [edx]
  405e3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e3f:	das    
  405e40:	sbb    DWORD PTR [esi-0x171fbdbe],edx
  405e46:	icebp  
  405e47:	out    dx,eax
  405e48:	lods   al,BYTE PTR ds:[esi]
  405e49:	xor    dl,bh
  405e4b:	jo     0x405ebc
  405e4d:	mov    dh,0x3a
  405e4f:	fist   WORD PTR [eax]
  405e51:	(bad)  
  405e53:	adc    BYTE PTR [edi+0x1b],bh
  405e56:	call   0x7524:0xe272ed41
  405e5d:	mov    esp,0x18db499d
  405e62:	pop    ds
  405e63:	cmc    
  405e64:	inc    edx
  405e65:	out    0x2e,al
  405e67:	sbb    ah,ah
  405e69:	js     0x405e1a
  405e6b:	fnsave [esp+ebp*4-0x65]
  405e6f:	aad    0x9b
  405e71:	pop    ds
  405e72:	inc    ax
  405e74:	add    ch,bl
  405e76:	mul    BYTE PTR ds:[ebp+0x76]
  405e7a:	loope  0x405e8a
  405e7c:	ja     0x405e53
  405e7e:	mov    eax,0xb59b825f
  405e83:	dec    esi
  405e84:	or     bh,cl
  405e86:	repz dec edi
  405e88:	adc    BYTE PTR [ecx],0xe9
  405e8b:	repz jo 0x405e7a
  405e8e:	cmp    ebx,DWORD PTR [ebx+0x74]
  405e91:	mov    DWORD PTR [ebx-0x39],ebp
  405e94:	xlat   BYTE PTR ds:[ebx]
  405e95:	mov    WORD PTR [esi],ds
  405e97:	sbb    al,0xca
  405e99:	leave  
  405e9a:	rcr    BYTE PTR [ebx],1
  405e9c:	inc    ebx
  405e9d:	jp     0x405e2a
  405e9f:	inc    ebx
  405ea0:	adc    eax,0x7fd0e3a4
  405ea5:	xor    eax,0x360cafb3
  405eaa:	sbb    BYTE PTR [bx-0x1c],0xf
  405eaf:	sbb    esp,DWORD PTR [esi+0x60]
  405eb2:	push   cs
  405eb3:	out    0xd0,eax
  405eb5:	adc    eax,0x5824b2a7
  405eba:	fs pop eax
  405ebc:	or     dh,BYTE PTR [ebx]
  405ebe:	jae    0x405eda
  405ec0:	(bad)  
  405ec1:	cmp    eax,DWORD PTR [ecx]
  405ec3:	shl    BYTE PTR [esi],cl
  405ec5:	int    0x5b
  405ec7:	in     al,0x27
  405ec9:	rcl    DWORD PTR [esi+0x3f],cl
  405ecc:	fisttp WORD PTR [edi+0x6f]
  405ecf:	inc    eax
  405ed0:	push   eax
  405ed1:	pop    edi
  405ed2:	sub    eax,0xa3b43f1a
  405ed7:	xchg   edi,eax
  405ed8:	xchg   esp,eax
  405ed9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405eda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405edb:	and    BYTE PTR [ebx+0x5426256b],dh
  405ee1:	pop    es
  405ee2:	xchg   ebx,eax
  405ee3:	and    al,0x5c
  405ee5:	arpl   WORD PTR [edi],bp
  405ee7:	test   eax,0x994ddb61
  405eec:	ja     0x405e83
  405eee:	sbb    DWORD PTR [esi],edx
  405ef0:	sbb    ch,BYTE PTR [edi+0x5d90bd0f]
  405ef6:	ret    
  405ef7:	outs   dx,BYTE PTR ds:[esi]
  405ef8:	mov    WORD PTR [ecx+eiz*1],ss
  405efb:	shl    eax,cl
  405efd:	jmp    0xc6cb399b
  405f02:	pop    es
  405f03:	adc    eax,0x65930198
  405f08:	inc    esi
  405f09:	int    0xd1
  405f0b:	mov    bh,0xbd
  405f0d:	adc    eax,0xd6ba0d98
  405f12:	push   ds
  405f13:	sub    DWORD PTR [ebx+ebx*4+0x3d],eax
  405f17:	jle    0x405f1f
  405f19:	xchg   edx,eax
  405f1a:	pop    esi
  405f1b:	lods   eax,DWORD PTR ds:[esi]
  405f1c:	arpl   WORD PTR [ecx],bx
  405f1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f1f:	sahf   
  405f20:	in     al,dx
  405f21:	lahf   
  405f22:	jbe    0x405eef
  405f24:	out    0xc,eax
  405f26:	push   cs
  405f27:	inc    ebp
  405f28:	je     0x405f77
  405f2a:	jg     0x405ee9
  405f2c:	mov    dh,0xe1
  405f2e:	push   ds
  405f2f:	and    al,0x76
  405f31:	sub    BYTE PTR [edi+0x16c149d7],bl
  405f37:	mov    DWORD PTR [edi+edi*1+0xb],eax
  405f3b:	push   ecx
  405f3c:	mov    bh,0x0
  405f3e:	jmp    0xc4fab64f
  405f43:	and    edi,0xa9d7f175
  405f49:	retf   0xac09
  405f4c:	mov    eax,ds:0xf28cc924
  405f51:	mov    WORD PTR [ecx],gs
  405f53:	push   ebp
  405f54:	bound  ecx,QWORD PTR [eax+0x3f9d1289]
  405f5a:	mov    BYTE PTR [ebx],dh
  405f5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f5d:	xchg   DWORD PTR [ecx+0x6bfe1b86],ecx
  405f63:	(bad)  
  405f64:	in     eax,dx
  405f65:	pop    ds
  405f66:	arpl   WORD PTR [ecx],sp
  405f68:	cld    
  405f69:	inc    ebp
  405f6a:	cli    
  405f6b:	jnp    0x405f5e
  405f6d:	mov    dh,BYTE PTR [edx]
  405f6f:	mov    bl,BYTE PTR [edi+0x18]
  405f72:	cs jb  0x405fb6
  405f75:	setbe  BYTE PTR [eax-0x7c52512]
  405f7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f7d:	mov    ebp,0xa2a54d6
  405f82:	gs icebp 
  405f84:	test   eax,0x4cac47b0
  405f89:	ss ja  0x405f96
  405f8c:	xchg   ebp,eax
  405f8d:	pop    ss
  405f8e:	popf   
  405f8f:	(bad)  
  405f90:	ror    DWORD PTR [ebx+0x51971791],1
  405f96:	mov    BYTE PTR [ebx+eax*4+0x35],ah
  405f9a:	xlat   BYTE PTR ds:[ebx]
  405f9b:	mov    esp,0x4b39e99b
  405fa0:	das    
  405fa1:	adc    eax,0x27041a0f
  405fa6:	sar    al,1
  405fa8:	cs mov ch,0x38
  405fab:	add    eax,0xf96c314d
  405fb0:	xor    edx,DWORD PTR [eax-0x5be1c8bf]
  405fb6:	ds pop ds
  405fb8:	dec    edx
  405fb9:	test   eax,0x8160349d
  405fbe:	push   edi
  405fbf:	xchg   ecx,eax
  405fc0:	test   BYTE PTR [edx],dh
  405fc2:	jmp    0xfe:0x6239e5fe
  405fc9:	push   edx
  405fca:	sti    
  405fcb:	mov    esi,0xd291444d
  405fd0:	and    al,0x1b
  405fd2:	mov    dl,BYTE PTR [edi-0x5b]
  405fd5:	or     DWORD PTR [ebx+0x10],0x844c936c
  405fdc:	aad    0x1c
  405fde:	ficom  DWORD PTR [ecx-0x24]
  405fe1:	sahf   
  405fe2:	(bad)  [edi+eax*4]
  405fe5:	(bad)  
  405fe6:	out    0x4f,eax
  405fe8:	mov    esp,0xd9920e80
  405fed:	scas   eax,DWORD PTR es:[edi]
  405fee:	adc    eax,eax
  405ff0:	(bad)  
  405ff1:	or     BYTE PTR [edx+ecx*1+0x2cd5fdec],dh
  405ff8:	enter  0xdfda,0x93
  405ffc:	pop    ss
  405ffd:	lahf   
  405ffe:	mov    cl,0xa8
  406000:	dec    eax
  406001:	or     edx,ebx
  406003:	cld    
  406004:	mov    bl,0x32
  406006:	outs   dx,BYTE PTR ds:[esi]
  406007:	and    BYTE PTR ds:0xaf52179a,0xd6
  40600e:	outs   dx,DWORD PTR ds:[esi]
  40600f:	push   ebp
  406010:	sbb    eax,0x10ed1595
  406015:	test   eax,0x15602ba1
  40601a:	dec    eax
  40601b:	xor    DWORD PTR [edi-0x60],ecx
  40601e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40601f:	repz inc esp
  406021:	stc    
  406022:	in     al,0x57
  406024:	les    esi,FWORD PTR ss:[ebp-0x20764de7]
  40602b:	pop    ds
  40602c:	jbe    0x405fbc
  40602e:	push   ebp
  40602f:	xchg   edx,eax
  406030:	test   BYTE PTR [eax+0x2b1332f4],bl
  406036:	test   eax,0x5283c391
  40603b:	inc    esp
  40603c:	add    bh,dl
  40603e:	jbe    0x405fee
  406040:	adc    eax,0xe5756558
  406045:	mov    ecx,DWORD PTR [esi]
  406047:	loopne 0x40602e
  406049:	mov    ebx,0x1d476feb
  40604e:	mov    esi,0x987627b3
  406053:	jo     0x406007
  406055:	or     ebx,eax
  406057:	retf   
  406058:	sub    esi,eax
  40605a:	in     al,0xbe
  40605c:	mov    ebx,ebx
  40605e:	mov    dh,0x98
  406060:	mov    ah,0x3b
  406062:	or     ah,BYTE PTR [ecx-0x5b548d1]
  406068:	repnz stc 
  40606a:	mov    ds:0xaf30ca02,eax
  40606f:	xor    BYTE PTR [ecx+0x5538b972],dh
  406075:	xor    DWORD PTR [edx+0xc5de397],eax
  40607b:	repz mov eax,0x9290c576
  406081:	xor    BYTE PTR fs:[ebp-0x22],cl
  406085:	xchg   edx,eax
  406086:	dec    esp
  406087:	dec    edx
  406088:	push   eax
  406089:	cwde   
  40608a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40608b:	xchg   DWORD PTR [ebx+0x1a],eax
  40608e:	mov    WORD PTR [eax-0x56],ds
  406091:	mov    ds,WORD PTR [ebp-0x691e4656]
  406097:	shr    BYTE PTR [ebx],0x32
  40609a:	ins    DWORD PTR es:[edi],dx
  40609b:	jo     0x406066
  40609d:	mov    edi,0x9d8f6f53
  4060a2:	mov    bl,0xb9
  4060a4:	fcomi  st,st(4)
  4060a6:	aas    
  4060a7:	xor    ch,BYTE PTR [edx+edx*1-0x16]
  4060ab:	dec    ebp
  4060ac:	imul   edi,DWORD PTR ds:0xd55f4c3f,0x4a
  4060b3:	jmp    0x4060b1
  4060b5:	loope  0x40607d
  4060b7:	or     ebp,ebx
  4060b9:	jecxz  0x406093
  4060bb:	jb     0x406091
  4060bd:	sbb    eax,0x9a070ae2
  4060c2:	pop    eax
  4060c3:	or     eax,0x61c186c0
  4060c8:	rcl    eax,cl
  4060ca:	xchg   ebp,eax
  4060cb:	bound  edi,QWORD PTR [ebp+0x15]
  4060ce:	scas   eax,DWORD PTR es:[edi]
  4060cf:	xchg   edx,esp
  4060d1:	xor    ebp,DWORD PTR [edi]
  4060d3:	xchg   ebx,eax
  4060d4:	mul    DWORD PTR [edx-0x49a6ba86]
  4060da:	aad    0xba
  4060dc:	jne    0x4060bf
  4060de:	cdq    
  4060df:	pop    ebp
  4060e0:	cmp    al,0x56
  4060e2:	fimul  WORD PTR [eax-0x5bffb21a]
  4060e8:	mov    dl,0xb3
  4060ea:	call   DWORD PTR [ecx+eiz*1-0x29070c0f]
  4060f1:	push   ebx
  4060f2:	lahf   
  4060f3:	ins    DWORD PTR es:[edi],dx
  4060f4:	inc    edx
  4060f5:	test   al,0x54
  4060f7:	sbb    edi,0x65
  4060fa:	test   eax,0x21e31227
  4060ff:	out    dx,al
  406100:	dec    esi
  406101:	int    0xc9
  406103:	or     esp,DWORD PTR [eax-0x22]
  406106:	repz es test eax,0x46c720a2
  40610d:	fsub   QWORD PTR [edx+ebp*4-0x77]
  406111:	pop    edx
  406112:	stc    
  406113:	inc    esi
  406114:	inc    ebx
  406115:	shl    DWORD PTR [ecx],0x19
  406118:	test   al,0x96
  40611a:	mov    BYTE PTR [ecx],bh
  40611c:	jo     0x40617a
  40611e:	rol    BYTE PTR [esp+eax*4],1
  406121:	clc    
  406122:	inc    esi
  406123:	outs   dx,DWORD PTR ds:[esi]
  406124:	(bad)  
  406125:	loopne 0x406127
  406127:	adc    BYTE PTR [eax+0x753a470e],ah
  40612d:	int3   
  40612e:	mov    ebx,0x751159d5
  406133:	add    esp,0xe2b0a9c2
  406139:	stos   DWORD PTR es:[edi],eax
  40613a:	ds jmp 0xa243:0x1bb9dd9a
  406142:	or     ax,0x91fd
  406146:	fsub   DWORD PTR [eax-0x27]
  406149:	es call 0x9004:0x65b67491
  406151:	int3   
  406152:	rol    dh,0x14
  406155:	in     al,dx
  406156:	(bad)  
  406157:	push   0x1f
  406159:	cmp    BYTE PTR [ebp-0x7c],0x89
  40615d:	out    0xa1,al
  40615f:	fsubr  DWORD PTR [esi]
  406161:	inc    ebp
  406162:	sbb    al,0xb5
  406164:	loope  0x40616b
  406166:	mov    esi,0x25374490
  40616b:	lds    edi,FWORD PTR [eax+0x467b9b26]
  406171:	jnp    0x4061c4
  406173:	jbe    0x4061f0
  406175:	pop    esi
  406176:	adc    eax,0xb264abaa
  40617b:	add    eax,DWORD PTR ds:0x9e6d070
  406181:	mov    bl,0x6b
  406183:	ds mov ebp,0x940ba1e1
  406189:	jl     0x40610e
  40618b:	data16 mov al,ds:0x4e34d568
  406191:	pop    ecx
  406192:	adc    eax,0xa2152a06
  406197:	aas    
  406198:	xor    ch,0xee
  40619b:	mov    cl,ah
  40619d:	inc    edi
  40619e:	adc    eax,0x1a6f9653
  4061a3:	xor    eax,0xbbc72687
  4061a8:	dec    ebp
  4061a9:	cmp    edi,0x34
  4061ac:	cmp    esp,ecx
  4061ae:	iret   
  4061af:	sub    eax,0x15b35372
  4061b4:	jae    0x406153
  4061b6:	jne    0x40621f
  4061b8:	ja     0x406140
  4061ba:	dec    ebp
  4061bb:	xchg   ecx,eax
  4061bc:	xor    esp,ebx
  4061be:	xor    eax,0x12cccc3c
  4061c3:	jae    0x40615a
  4061c5:	(bad)  [esi]
  4061c7:	push   esp
  4061c8:	(bad)  
  4061ca:	cld    
  4061cb:	and    eax,0x2436d34b
  4061d0:	add    DWORD PTR [eax+0x613bd18e],ebp
  4061d6:	mov    ebp,0x1b525c4b
  4061db:	dec    esp
  4061dc:	jae    0x4061b0
  4061de:	push   ss
  4061df:	push   cs
  4061e0:	sahf   
  4061e1:	sbb    esi,DWORD PTR [ebx-0x57]
  4061e4:	imul   eax,ebp,0x65fba068
  4061ea:	lds    eax,FWORD PTR ds:0xc1c5500f
  4061f0:	shl    DWORD PTR [esi-0x22ec139],0x4a
  4061f7:	fnstsw WORD PTR [ebx]
  4061f9:	push   ebp
  4061fa:	mov    ah,0x5a
  4061fc:	lea    edx,[ebx-0x2b]
  4061ff:	push   edi
  406200:	test   BYTE PTR [eax],0x27
  406203:	xor    dl,BYTE PTR [ebp+0x3cc167f0]
  406209:	sti    
  40620a:	dec    ecx
  40620b:	in     al,dx
  40620c:	iret   
  40620d:	mov    ds:0x95dedb2f,al
  406212:	js     0x4061d4
  406214:	pop    ecx
  406215:	(bad)  
  406216:	ins    DWORD PTR es:[edi],dx
  406217:	repnz jecxz 0x406250
  40621a:	push   eax
  40621b:	mov    DWORD PTR [esi-0x6b59b0c2],esi
  406221:	scas   eax,DWORD PTR es:[edi]
  406222:	jp     0x40625f
  406224:	and    BYTE PTR [esi],dl
  406226:	shl    BYTE PTR [edi+ebp*1+0x62e6adaa],cl
  40622d:	pop    ebx
  40622e:	cmp    eax,0x44409292
  406233:	repz fcomp QWORD PTR [esi+0x14e71256]
  40623a:	jg     0x406288
  40623c:	ja     0x406240
  40623e:	mov    ecx,0x81dd47d2
  406243:	sub    cl,dl
  406245:	xchg   ebx,eax
  406246:	mov    bl,0x8e
  406248:	sub    DWORD PTR [ecx],eax
  40624a:	adc    BYTE PTR [edi-0x1a],dl
  40624d:	loopne 0x40625e
  40624f:	mov    cl,0x2a
  406251:	dec    eax
  406252:	cmp    eax,0xa70adee6
  406257:	(bad)  
  406258:	pop    ebx
  406259:	dec    ecx
  40625a:	in     al,0x6d
  40625c:	sub    al,BYTE PTR [edx+0x71a914a2]
  406262:	iret   
  406263:	mov    ecx,0x74438c8
  406268:	sar    BYTE PTR [esi+0x51],0xf8
  40626c:	out    0xf5,eax
  40626e:	imul   edx,DWORD PTR [ebp-0x529efa1c],0xfffffff3
  406275:	xor    ebp,esp
  406277:	les    ecx,FWORD PTR [edi-0x23]
  40627a:	test   edi,ebp
  40627c:	je     0x4062a7
  40627e:	mov    esi,0xa73c0513
  406283:	sbb    dl,BYTE PTR ds:0x999dc185
  406289:	mov    dh,0x9f
  40628b:	es jecxz 0x4062cd
  40628e:	daa    
  40628f:	mov    eax,DWORD PTR [edx]
  406291:	mov    ds:0xe18879e5,eax
  406296:	je     0x4062a3
  406298:	jmp    FWORD PTR [edi+0x7b]
  40629b:	dec    esi
  40629c:	or     DWORD PTR [ebp+0x45a21666],eax
  4062a2:	push   ebp
  4062a3:	inc    edi
  4062a4:	mov    esp,0x84435a09
  4062a9:	not    BYTE PTR [esi+0x5c]
  4062ac:	clc    
  4062ad:	dec    DWORD PTR fs:[esi]
  4062b0:	cld    
  4062b1:	enter  0xcc38,0xed
  4062b5:	lock xchg edx,eax
  4062b7:	mov    ah,BYTE PTR [edx-0x2a79b313]
  4062bd:	sub    al,0xcd
  4062bf:	pop    ebp
  4062c0:	adc    al,0xb3
  4062c2:	mov    dl,0x45
  4062c4:	test   eax,0x5ecaf2d0
  4062c9:	cmp    BYTE PTR [edx],dl
  4062cb:	inc    esp
  4062cc:	fidiv  WORD PTR [ebx+eiz*8+0x3b5c6dc9]
  4062d3:	fldenv [ebx+edx*8-0x1]
  4062d7:	or     edi,DWORD PTR [eax-0x1f]
  4062da:	rcl    DWORD PTR [ecx+ecx*2-0x4a],0x87
  4062df:	out    dx,al
  4062e0:	imul   esi,DWORD PTR [edx],0x3b
  4062e3:	add    eax,0xa5996604
  4062e8:	fiadd  DWORD PTR [edi+edx*8]
  4062eb:	stos   BYTE PTR es:[edi],al
  4062ec:	mov    dh,0xe6
  4062ee:	fs jge 0x40631b
  4062f1:	in     al,dx
  4062f2:	shl    ch,0x7d
  4062f5:	ret    0xbc8a
  4062f8:	inc    esp
  4062f9:	sti    
  4062fa:	lahf   
  4062fb:	enter  0x612a,0x31
  4062ff:	pusha  
  406300:	inc    ebx
  406301:	dec    edi
  406302:	push   ebx
  406303:	xchg   esi,eax
  406304:	sbb    DWORD PTR [ebx-0x22],ebp
  406307:	js     0x406330
  406309:	fldenv [ecx]
  40630b:	jo     0x406328
  40630d:	sub    ecx,DWORD PTR [ecx+0x4]
  406310:	or     BYTE PTR [ebx],bh
  406312:	jo     0x40631b
  406314:	push   esi
  406315:	ret    0x2a3c
  406318:	pushf  
  406319:	cmp    dh,BYTE PTR [esi+0x6e]
  40631c:	jmp    0x823cfdfc
  406321:	sub    esp,edx
  406323:	cmc    
  406324:	cmp    BYTE PTR [eax-0x1],0x7e
  406328:	shl    DWORD PTR [esi+0x51109237],cl
  40632e:	fdivrp st(3),st
  406330:	in     eax,dx
  406331:	mov    bh,0x33
  406333:	push   ecx
  406334:	arpl   WORD PTR [edi+0xe],bp
  406337:	mov    dl,0x75
  406339:	out    dx,eax
  40633a:	lods   al,BYTE PTR ds:[esi]
  40633b:	test   al,0x95
  40633d:	jg     0x406342
  40633f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406340:	sbb    al,bl
  406342:	rol    BYTE PTR [edi+0x33],cl
  406345:	int    0x42
  406347:	stos   DWORD PTR es:[edi],eax
  406348:	stos   BYTE PTR es:[edi],al
  406349:	xchg   DWORD PTR [ebx-0x16],edi
  40634c:	sbb    dh,BYTE PTR [edx-0x66]
  40634f:	xor    ebp,eax
  406351:	xchg   edi,ebp
  406353:	(bad)  [edx]
  406355:	std    
  406356:	pop    esp
  406357:	and    bh,bl
  406359:	add    ecx,DWORD PTR [edi+0x54fd2e75]
  40635f:	mov    cl,0x19
  406361:	mov    eax,ds:0x59b793c0
  406366:	dec    esp
  406367:	push   ss
  406368:	push   ebx
  406369:	jnp    0x406373
  40636b:	mov    ah,0x7c
  40636d:	arpl   WORD PTR [esi],di
  40636f:	adc    eax,0x60f35a4a
  406374:	(bad)  
  406376:	outs   dx,DWORD PTR ds:[esi]
  406377:	retf   
  406378:	jecxz  0x406339
  40637a:	push   esp
  40637b:	test   eax,0x8f25edc1
  406380:	test   DWORD PTR [ebx+0x5fbeaa8d],ebp
  406386:	sbb    BYTE PTR [ecx-0x3100b95e],ah
  40638c:	pushf  
  40638d:	jl     0x40639c
  40638f:	sahf   
  406390:	xchg   esp,eax
  406391:	dec    ecx
  406392:	mov    dl,0xcc
  406394:	test   DWORD PTR [ecx-0x34],ebp
  406397:	push   ebp
  406398:	sar    DWORD PTR [ecx-0x71],cl
  40639b:	aaa    
  40639c:	cmp    al,0xd
  40639e:	fsubr  QWORD PTR [ebx+ebp*1-0x5e]
  4063a2:	stos   DWORD PTR es:[edi],eax
  4063a3:	pop    ss
  4063a4:	inc    edi
  4063a5:	out    0xb9,al
  4063a7:	xchg   BYTE PTR [eax+ecx*4],ch
  4063aa:	bound  esp,QWORD PTR [ecx-0x579547eb]
  4063b0:	clc    
  4063b1:	ror    ebx,cl
  4063b3:	hlt    
  4063b4:	(bad)  
  4063b5:	(bad)  
  4063b6:	ror    BYTE PTR [esi-0x18e87490],0xe9
  4063bd:	loope  0x406354
  4063bf:	das    
  4063c0:	jne    0x406348
  4063c2:	rol    DWORD PTR [edi+esi*8+0xf],0xb3
  4063c7:	adc    BYTE PTR [edi+0x44258e05],cl
  4063cd:	jb     0x4063e3
  4063cf:	outs   dx,DWORD PTR ds:[esi]
  4063d0:	pop    ebp
  4063d1:	(bad)  
  4063d2:	push   cs
  4063d3:	sub    eax,0x2d0d56f0
  4063d8:	mov    al,0x3e
  4063da:	hlt    
  4063db:	mov    al,ds:0x137384e0
  4063e0:	add    esp,DWORD PTR [ecx]
  4063e2:	jp     0x406418
  4063e4:	iret   
  4063e5:	pop    ebx
  4063e6:	outs   dx,BYTE PTR ds:[esi]
  4063e7:	mov    esi,0x13eb1fd7
  4063ec:	jecxz  0x406452
  4063ee:	lods   al,BYTE PTR ds:[esi]
  4063ef:	pusha  
  4063f0:	out    0x8e,al
  4063f2:	xchg   ebp,eax
  4063f3:	sbb    DWORD PTR [ecx],ecx
  4063f5:	fild   QWORD PTR [eax]
  4063f7:	repnz les ebx,FWORD PTR [esi]
  4063fa:	push   esi
  4063fb:	addr16 call 0xdd68:0x696074b3
  406403:	dec    ebp
  406404:	inc    edi
  406405:	aaa    
  406406:	aaa    
  406407:	adc    esi,edx
  406409:	lahf   
  40640a:	ja     0x4063eb
  40640c:	in     eax,0xc8
  40640e:	rol    BYTE PTR [ebx-0x73cde681],0x86
  406415:	push   0x6e92b15f
  40641a:	sub    al,0xc2
  40641c:	sub    BYTE PTR [ebp-0x9],ah
  40641f:	dec    ecx
  406421:	inc    ecx
  406422:	fmul   QWORD PTR [edi-0x58]
  406425:	lock xor eax,0x12c03389
  40642b:	test   al,0x74
  40642d:	ja     0x406430
  40642f:	test   esp,ebp
  406431:	out    dx,eax
  406432:	loopne 0x4063f3
  406434:	retf   
  406435:	sbb    DWORD PTR [ecx+0x6e97ec3b],ecx
  40643b:	adc    BYTE PTR [ecx-0x57524f1b],bh
  406441:	mul    dl
  406443:	cmp    al,0x71
  406445:	jp     0x40648b
  406447:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406448:	adc    edi,DWORD PTR [ebx-0x47]
  40644b:	call   0xaef1:0x6a9b0942
  406452:	adc    BYTE PTR [ecx+0x68],0xa0
  406456:	fnstcw WORD PTR [ecx-0x587ab642]
  40645c:	aam    0x66
  40645e:	jg     0x4063f3
  406460:	add    BYTE PTR cs:[ebx],0x18
  406464:	xchg   BYTE PTR [ebx],dl
  406466:	retf   
  406467:	in     al,0x83
  406469:	cs push eax
  40646b:	or     bl,BYTE PTR [eax-0x75a072e5]
  406471:	pop    esi
  406472:	cmp    edx,DWORD PTR [ebx]
  406474:	jnp    0x406414
  406476:	pop    ss
  406477:	aam    0xa5
  406479:	adc    BYTE PTR [esi+0x2265a995],ch
  40647f:	popf   
  406480:	arpl   WORD PTR [ebp-0x6e5fbafb],di
  406486:	mov    al,ds:0x9dae2b60
  40648b:	dec    esp
  40648c:	xor    bl,bh
  40648e:	or     esp,edx
  406490:	adc    al,0xa8
  406492:	xor    BYTE PTR [esi+ebx*8-0x5e19df1d],al
  406499:	test   bh,dl
  40649b:	test   al,0xef
  40649d:	inc    ebp
  40649e:	push   edx
  40649f:	lods   eax,DWORD PTR ds:[esi]
  4064a0:	dec    edx
  4064a1:	hlt    
  4064a2:	adc    BYTE PTR [ecx],0x38
  4064a5:	and    BYTE PTR [ebx],al
  4064a7:	jnp    0x4064ea
  4064a9:	mov    ss,WORD PTR [ebp*8-0x6d544094]
  4064b0:	sub    BYTE PTR [esi],cl
  4064b2:	xor    DWORD PTR [esi],eax
  4064b4:	(bad)  
  4064b6:	cli    
  4064b7:	lds    edx,FWORD PTR [edx]
  4064b9:	and    ebx,DWORD PTR [edx+0x42a666dc]
  4064bf:	push   esi
  4064c0:	addr16 mov ecx,0x4a1488b9
  4064c6:	jecxz  0x406545
  4064c8:	mov    bh,0xa4
  4064ca:	hlt    
  4064cb:	jmp    0x406460
  4064cd:	sar    DWORD PTR [esi],1
  4064cf:	ret    0xf8fc
  4064d2:	aam    0x66
  4064d4:	loope  0x4064f9
  4064d6:	jne    0x4064bb
  4064d8:	mov    ebp,0x877f4d92
  4064dd:	int3   
  4064de:	mov    eax,ds:0xba9e6147
  4064e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064e4:	xchg   DWORD PTR [esi+0x50b576c4],esi
  4064ea:	xor    DWORD PTR [ecx],ebp
  4064ec:	test   eax,0xaa41f24d
  4064f1:	jmp    FWORD PTR [ebx+ebp*4-0x50]
  4064f5:	mov    ecx,0x8d76e5f1
  4064fa:	inc    eax
  4064fb:	mov    ecx,0xd3eda88d
  406500:	cmc    
  406501:	mov    cl,0xae
  406503:	out    0xf6,eax
  406505:	sbb    BYTE PTR [eax+0x42e0eb4f],al
  40650b:	cmp    ecx,DWORD PTR [eax-0x23]
  40650e:	cmp    esp,ebp
  406510:	inc    ebx
  406511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406512:	pop    ds
  406513:	(bad)  
  406514:	or     BYTE PTR [edx],cl
  406516:	fs mov dl,0xbc
  406519:	daa    
  40651a:	sahf   
  40651b:	cmp    ecx,DWORD PTR [edx]
  40651d:	aas    
  40651e:	push   0x28a703ce
  406523:	fdiv   st(1),st
  406525:	sub    ecx,ebp
  406527:	add    esp,DWORD PTR [esi-0x125fffb8]
  40652d:	pop    edx
  40652e:	mov    dl,0x3f
  406530:	mov    ecx,DWORD PTR [eax]
  406532:	loopne 0x4064f5
  406534:	in     eax,0x57
  406536:	pusha  
  406537:	aas    
  406538:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40653a:	out    0xfb,al
  40653c:	or     bl,cl
  40653e:	xchg   edx,eax
  40653f:	int    0xc0
  406541:	mov    fs,WORD PTR [edi-0x13]
  406544:	fcomp  st(3)
  406546:	mov    ah,0xb0
  406548:	les    esi,FWORD PTR [edi]
  40654a:	stc    
  40654b:	shr    BYTE PTR [esi],1
  40654d:	(bad)  
  40654e:	jmp    0x40659d
  406550:	jg     0x40652e
  406552:	sub    al,0x58
  406554:	mov    edx,0x287a9589
  406559:	mov    ?,WORD PTR [esi-0x7e7f75d8]
  40655f:	fidivr WORD PTR [ebx-0x63]
  406562:	adc    eax,0x81bc69c8
  406567:	retf   0x8f55
  40656a:	push   ebx
  40656b:	xchg   ebx,eax
  40656c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40656d:	fcmovnb st,st(2)
  40656f:	out    0x97,eax
  406571:	sub    eax,0x425c0c81
  406576:	clc    
  406577:	mov    dl,0xfa
  406579:	adc    DWORD PTR [esp+esi*4+0x1acba0f6],ebx
  406580:	sub    dh,al
  406582:	nop
  406583:	aas    
  406584:	sub    al,0xcd
  406586:	mov    ch,0x68
  406588:	xchg   ebp,eax
  406589:	inc    esp
  40658a:	pop    ecx
  40658b:	loopne 0x406605
  40658d:	fimul  WORD PTR [ebx-0x1a]
  406590:	sub    DWORD PTR [ebp+esi*4-0x7e],0x9c2e1c9c
  406598:	add    edi,esi
  40659a:	outs   dx,DWORD PTR ds:[esi]
  40659b:	mov    cl,0x62
  40659d:	xchg   ecx,eax
  40659e:	mov    ebp,DWORD PTR [eax+edx*1]
  4065a1:	or     esi,DWORD PTR [edi]
  4065a3:	adc    al,BYTE PTR ds:0xfbbcd690
  4065a9:	cli    
  4065aa:	jmp    esp
  4065ac:	fst    DWORD PTR [eax-0x3a]
  4065af:	xor    dh,BYTE PTR [ebx+eiz*8-0x1b]
  4065b3:	push   0xffffffbe
  4065b5:	sbb    BYTE PTR [eax+0x5a],al
  4065b8:	pop    esp
  4065b9:	sahf   
  4065ba:	retf   
  4065bb:	dec    ecx
  4065bc:	and    DWORD PTR [edx+0x37eba1a8],0xffffffb9
  4065c3:	(bad)  
  4065c5:	mov    dh,0x3
  4065c7:	pop    edi
  4065c8:	mov    cl,0x8e
  4065ca:	(bad)  
  4065cb:	in     al,dx
  4065cc:	mov    dh,0x8b
  4065ce:	or     DWORD PTR [edx],esp
  4065d0:	imul   edx,DWORD PTR [ebp-0xf8ca566],0x6e
  4065d7:	xchg   edi,eax
  4065d8:	out    0x0,al
  4065da:	cmp    eax,0xe893c2a3
  4065df:	pop    ds
  4065e0:	dec    esi
  4065e1:	icebp  
  4065e2:	pop    eax
  4065e3:	nop
  4065e4:	aas    
  4065e5:	pop    ecx
  4065e6:	mov    ebx,0xddeecad1
  4065eb:	mov    BYTE PTR [edx+0x71],al
  4065ee:	push   edx
  4065ef:	pop    esp
  4065f0:	outs   dx,DWORD PTR ds:[esi]
  4065f1:	adc    al,0xa6
  4065f3:	push   0x6e7b50fd
  4065f8:	sar    eax,0x94
  4065fb:	sub    al,0x30
  4065fd:	jmp    0x4065db
  4065ff:	fistp  DWORD PTR [eax-0x52]
  406602:	jmp    0x23a9:0xb194daa9
  406609:	popf   
  40660a:	mov    dl,0x80
  40660c:	inc    edi
  40660d:	or     ebp,DWORD PTR [ecx]
  40660f:	xor    eax,0x6d726c27
  406614:	fiadd  DWORD PTR [ecx+0x45283a4d]
  40661a:	test   eax,esp
  40661c:	clc    
  40661d:	bound  edx,QWORD PTR [ecx-0x24f4a271]
  406623:	push   edx
  406624:	jo     0x40663c
  406626:	enter  0x42ad,0x21
  40662a:	fs nop
  40662c:	loop   0x4065ce
  40662e:	sub    DWORD PTR [ebx],ebx
  406630:	cmp    DWORD PTR [ebp-0x7],esp
  406633:	mov    edx,0xd2b6021f
  406638:	lds    edx,FWORD PTR [eax]
  40663a:	gs nop
  40663c:	xchg   ecx,eax
  40663d:	nop
  40663e:	lds    ebp,FWORD PTR [esi-0x53]
  406641:	mov    dh,0x30
  406643:	retf   0xa21f
  406646:	sahf   
  406647:	daa    
  406648:	xchg   esi,eax
  406649:	pop    ss
  40664a:	mov    ebp,eax
  40664c:	lahf   
  40664d:	cmp    edx,DWORD PTR [esi+0x8e791fe]
  406653:	into   
  406654:	data16 data16 jno 0x40660c
  406658:	pop    edx
  406659:	loope  0x406689
  40665b:	pusha  
  40665c:	xchg   ebx,eax
  40665d:	std    
  40665e:	in     eax,dx
  40665f:	jns    0x4066c8
  406661:	and    ah,dl
  406663:	jb     0x4066e2
  406665:	inc    edi
  406666:	stos   BYTE PTR es:[edi],al
  406667:	icebp  
  406668:	jbe    0x40669b
  40666a:	fstp   TBYTE PTR [eax+edi*2-0x7512750e]
  406671:	(bad)  
  406672:	push   eax
  406673:	cmp    eax,0xebb603a7
  406678:	cmp    dl,BYTE PTR [eax+eax*8-0x72]
  40667c:	inc    esp
  40667d:	dec    ebp
  40667e:	or     al,0x6c
  406680:	(bad)  
  406681:	ja     0x406647
  406683:	int3   
  406684:	push   ds
  406685:	mul    dh
  406687:	mov    ecx,0xe4764598
  40668c:	mov    bl,0x88
  40668e:	sar    BYTE PTR [eax],1
  406690:	call   0x3b8024f4
  406695:	stc    
  406696:	test   al,0xa2
  406698:	sub    bh,dl
  40669a:	leave  
  40669b:	dec    ebx
  40669c:	pop    ds
  40669d:	pop    ecx
  40669e:	adc    al,0x20
  4066a0:	rcl    eax,1
  4066a2:	mov    eax,ds:0x357fea33
  4066a7:	pop    edi
  4066a8:	mov    al,ds:0xb239fa23
  4066ad:	cdq    
  4066ae:	aaa    
  4066af:	xor    eax,0xd172442f
  4066b4:	add    edx,DWORD PTR [eax+0x4b]
  4066b7:	pop    ds
  4066b8:	inc    esi
  4066b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066ba:	jno    0x40669f
  4066bc:	leave  
  4066bd:	mov    dh,0x8f
  4066bf:	push   ebx
  4066c0:	fild   DWORD PTR [edx+0x4625b1a3]
  4066c6:	repnz push ss
  4066c8:	jmp    0x40671a
  4066ca:	and    al,0x92
  4066cc:	outs   dx,DWORD PTR ds:[esi]
  4066cd:	mov    al,ds:0xc498a3a5
  4066d2:	or     BYTE PTR [edi+ebx*4],dl
  4066d5:	or     BYTE PTR ds:0xfe62e06b,bh
  4066db:	in     eax,dx
  4066dc:	sub    eax,0x8a2f2096
  4066e1:	imul   DWORD PTR [ecx+0x45]
  4066e4:	scas   al,BYTE PTR es:[edi]
  4066e5:	pop    ebp
  4066e6:	push   ebx
  4066e7:	dec    ebx
  4066e8:	aaa    
  4066e9:	or     eax,0x7550555a
  4066ee:	lahf   
  4066ef:	jbe    0x40671d
  4066f1:	outs   dx,DWORD PTR ds:[esi]
  4066f2:	popf   
  4066f3:	cwde   
  4066f4:	fiadd  DWORD PTR [ebx]
  4066f6:	dec    esp
  4066f7:	bound  edx,QWORD PTR [edx]
  4066f9:	sub    eax,0x2cf471b0
  4066fe:	and    ebx,0x6
  406701:	ins    BYTE PTR es:[edi],dx
  406702:	ds daa 
  406704:	sbb    ecx,ecx
  406706:	sar    DWORD PTR [ecx-0x34352c88],cl
  40670c:	popf   
  40670d:	mov    DWORD PTR [esi-0x1b89d720],esp
  406713:	adc    BYTE PTR [ecx+ecx*8+0x68f7a3d0],0xb9
  40671b:	sub    BYTE PTR [esi],0xff
  40671e:	(bad)  
  406721:	sbb    BYTE PTR [edi+0x3f],cl
  406724:	push   edi
  406725:	dec    edx
  406726:	push   0x340ddd74
  40672b:	es (bad) 
  40672d:	cmp    BYTE PTR [eax-0x49],al
  406730:	rdtsc  
  406732:	lea    eax,[esi]
  406734:	mov    esp,ecx
  406736:	arpl   WORD PTR [edx],ax
  406738:	cmp    bh,cl
  40673a:	jbe    0x406715
  40673c:	lahf   
  40673d:	sub    esp,esi
  40673f:	mov    ds:0xceb5eab9,eax
  406744:	shl    BYTE PTR [esp-0x369749af],1
  40674b:	js     0x40676c
  40674d:	cmp    al,0x8
  40674f:	popa   
  406750:	(bad)  
  406751:	and    al,BYTE PTR [ebx]
  406753:	mov    bl,0x8d
  406755:	and    dh,BYTE PTR [ecx+0x41]
  406758:	sbb    DWORD PTR [eax+ecx*8+0x645431a8],edx
  40675f:	into   
  406760:	outs   dx,BYTE PTR ds:[esi]
  406762:	out    dx,al
  406763:	icebp  
  406764:	ret    
  406765:	add    eax,0xe0d89dec
  40676a:	ss inc esi
  40676c:	fwait
  40676d:	xchg   ebp,eax
  40676e:	mov    esi,DWORD PTR [ebx+eiz*2+0x1f]
  406772:	aaa    
  406773:	pop    esp
  406774:	imul   edx,DWORD PTR [esi],0x7e
  406777:	sahf   
  406778:	leave  
  406779:	das    
  40677a:	jnp    0x406756
  40677c:	xchg   ebx,eax
  40677d:	lahf   
  40677e:	popf   
  40677f:	mov    DWORD PTR [ebx],esi
  406781:	fldenv [eax+eiz*4-0x1464f771]
  406788:	adc    dh,BYTE PTR ds:0x87f6d701
  40678e:	xchg   edx,eax
  40678f:	adc    ch,BYTE PTR [esi+0x44]
  406792:	xor    al,0x46
  406794:	add    eax,0xc13e916f
  406799:	gs gs sbb bh,dh
  40679d:	inc    edi
  40679e:	cmp    DWORD PTR ss:[edi+ebp*1+0x45],esi
  4067a3:	mov    al,ds:0xc4851c21
  4067a8:	fst    QWORD PTR [ebx+0x38248c4d]
  4067ae:	leave  
  4067af:	jmp    0x35ea2655
  4067b4:	rol    BYTE PTR [ecx],1
  4067b6:	aaa    
  4067b7:	dec    ebp
  4067b8:	arpl   WORD PTR [eax+0x63],sp
  4067bb:	pop    ds
  4067bc:	lods   eax,DWORD PTR ds:[esi]
  4067bd:	xchg   esi,eax
  4067be:	xlat   BYTE PTR ds:[ebx]
  4067bf:	jae    0x406760
  4067c1:	add    eax,0x8f00f5be
  4067c6:	xchg   edi,eax
  4067c7:	sar    ebp,cl
  4067c9:	add    ah,BYTE PTR [esi+0x6f57aac6]
  4067cf:	push   ss
  4067d0:	mov    DWORD PTR [esi+0x5b],0x77cbbf50
  4067d7:	scas   al,BYTE PTR es:[edi]
  4067d8:	push   es
  4067d9:	xchg   esi,eax
  4067da:	push   ss
  4067db:	xor    al,0xe5
  4067dd:	int    0xea
  4067df:	mov    cl,0x38
  4067e1:	lahf   
  4067e2:	enter  0xd7ea,0xa7
  4067e6:	dec    ebp
  4067e7:	shl    BYTE PTR [eax+0xa],0x67
  4067eb:	fstp   DWORD PTR [edi+edi*1]
  4067ee:	call   0xaa0abd4e
  4067f3:	jg     0x406852
  4067f5:	jbe    0x406863
  4067f7:	inc    ebp
  4067f8:	cmc    
  4067f9:	js     0x4067a5
  4067fb:	mov    DWORD PTR [edx-0x73],0xc3c85da8
  406802:	lods   al,BYTE PTR ds:[esi]
  406803:	add    eax,0xcec8895a
  406808:	sbb    al,0xac
  40680a:	out    dx,eax
  40680b:	jecxz  0x406811
  40680d:	faddp  st(0),st
  40680f:	push   ebx
  406810:	repnz retf 0x6b17
  406814:	mov    ebp,0xe036f5dc
  406819:	out    0xdc,al
  40681b:	ss test al,0x80
  40681e:	push   ecx
  40681f:	in     eax,dx
  406820:	test   cl,0x95
  406823:	jmp    0x4067bd
  406825:	jl     0x406853
  406827:	sbb    al,0x19
  406829:	xlat   BYTE PTR ds:[ebx]
  40682a:	jae    0x4067f7
  40682c:	ret    0x63a1
  40682f:	lock mov edx,0x2b4d418
  406835:	aaa    
  406836:	adc    ecx,DWORD PTR [eax]
  406838:	pop    ss
  406839:	int    0xc2
  40683b:	push   ds
  40683c:	outs   dx,DWORD PTR ds:[esi]
  40683d:	mov    ebx,0x89e41a50
  406842:	inc    ecx
  406843:	adc    al,BYTE PTR [eax+0x74]
  406846:	aaa    
  406847:	arpl   si,cx
  406849:	xor    DWORD PTR [ebx+eiz*8+0x2f],esp
  40684d:	mov    cl,bl
  40684f:	fisttp DWORD PTR [edx+edi*2]
  406852:	rol    BYTE PTR ds:0x1b6b37f5,0xe2
  406859:	aaa    
  40685a:	pop    es
  40685b:	call   0x1246:0x6e22cf5f
  406862:	inc    esi
  406863:	sub    ah,BYTE PTR [eax-0x3a198f1c]
  406869:	fidivr DWORD PTR [esi-0x2e]
  40686c:	sub    ah,0x59
  40686f:	xlat   BYTE PTR ds:[ebx]
  406870:	out    dx,eax
  406871:	call   0x4273536c
  406876:	jg     0x406882
  406878:	and    BYTE PTR [edi+0x1dcd6f72],bh
  40687e:	dec    edx
  40687f:	push   ebx
  406880:	push   ss
  406881:	cwde   
  406882:	pop    edx
  406883:	clc    
  406884:	test   ebp,0x4e88cb5c
  40688a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40688b:	out    0x37,eax
  40688d:	cmp    al,0x65
  40688f:	cwde   
  406890:	or     bh,BYTE PTR [esi+esi*2-0x47]
  406894:	dec    eax
  406895:	xchg   edi,eax
  406896:	in     eax,dx
  406897:	and    ebx,DWORD PTR [esi+eax*2-0x8]
  40689b:	ins    DWORD PTR es:[edi],dx
  40689c:	push   0xffffffce
  40689e:	mul    cl
  4068a0:	test   eax,0xf58242b2
  4068a5:	mov    ch,BYTE PTR [esi+0x789ec6f3]
  4068ab:	das    
  4068ac:	add    BYTE PTR [edx+0x46],bl
  4068af:	jmp    0xe414f2bb
  4068b4:	pop    edi
  4068b5:	push   esi
  4068b6:	loope  0x40690a
  4068b8:	cli    
  4068b9:	cmp    bh,BYTE PTR [ecx-0x213d8915]
  4068bf:	retf   0xeac0
  4068c2:	jp     0x40691e
  4068c4:	or     DWORD PTR [eax],esp
  4068c6:	xchg   ebp,eax
  4068c7:	mov    cl,BYTE PTR [ecx-0x4c]
  4068ca:	add    al,0x48
  4068cc:	dec    ecx
  4068cd:	mov    ds:0xe54b1509,al
  4068d2:	(bad)  
  4068d3:	mov    esi,?
  4068d5:	pop    esi
  4068d6:	xchg   ebx,eax
  4068d7:	push   ecx
  4068d8:	outs   dx,DWORD PTR ds:[esi]
  4068d9:	test   eax,0x59a05988
  4068de:	(bad)  
  4068df:	(bad)  
  4068e0:	(bad)  [edx]
  4068e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068e3:	ror    BYTE PTR [ebx],1
  4068e5:	fadd   QWORD PTR [ebx-0x2f]
  4068e8:	(bad)  
  4068e9:	std    
  4068ea:	push   ebx
  4068eb:	pushf  
  4068ec:	xchg   ebp,eax
  4068ed:	or     eax,0x9bb8e889
  4068f2:	outs   dx,DWORD PTR ds:[esi]
  4068f3:	xchg   BYTE PTR [eax-0x6],al
  4068f6:	cmp    BYTE PTR [ebp+0x19],bh
  4068f9:	dec    ecx
  4068fa:	fwait
  4068fb:	cmp    al,0x20
  4068fd:	mov    eax,ds:0x71987051
  406902:	pop    ecx
  406903:	mov    DWORD PTR [ecx+ebp*8],eax
  406906:	dec    edx
  406907:	loopne 0x406951
  406909:	and    edx,DWORD PTR [edx+0x3c36f905]
  40690f:	add    ecx,0x8aac6920
  406915:	call   0x4e4:0x6e8c4954
  40691c:	add    esp,edi
  40691e:	inc    ebx
  40691f:	sub    cl,al
  406921:	in     al,dx
  406922:	shr    BYTE PTR [esi],1
  406924:	call   0xc352:0x72996715
  40692b:	test   al,0xca
  40692d:	push   esp
  40692e:	scas   eax,DWORD PTR es:[edi]
  40692f:	push   ebx
  406930:	mov    DWORD PTR [ebx-0x63953472],eax
  406936:	arpl   WORD PTR [edi],cx
  406938:	ret    
  406939:	xchg   DWORD PTR [edx+0x10],edx
  40693c:	stc    
  40693d:	inc    ecx
  40693e:	imul   esi,DWORD PTR [edx+esi*1+0x0],0x5cb99319
  406946:	push   edx
  406947:	imul   esp,DWORD PTR [edi-0xfdbf40c],0xef4dfd52
  406951:	jl     0x406962
  406953:	fs (bad) 
  406955:	cdq    
  406956:	data16 jecxz 0x40690b
  406959:	js     0x40697c
  40695b:	pop    esp
  40695c:	xchg   dh,al
  40695e:	mov    eax,ds:0x3e3117f2
  406963:	mov    al,0x3d
  406965:	mov    ds:0xeae16cc7,al
  40696a:	adc    bl,dl
  40696c:	adc    al,0x46
  40696e:	push   edx
  40696f:	ss pop edx
  406971:	xchg   edi,eax
  406972:	sub    ebp,DWORD PTR [ecx+0x38]
  406975:	lahf   
  406976:	push   es
  406977:	pop    ebx
  406978:	jnp    0x40696d
  40697a:	pop    eax
  40697b:	jne    0x4069d0
  40697d:	sahf   
  40697e:	cmp    al,0xe0
  406980:	or     BYTE PTR [edx+0x7b],al
  406983:	adc    al,0xca
  406985:	mov    DWORD PTR [esi-0x74007664],ebp
  40698b:	mov    bl,0x0
  40698d:	mov    ch,0xfd
  40698f:	sub    esp,DWORD PTR [eax+0x35]
  406992:	mov    ebx,0xc6870531
  406997:	push   ds
  406998:	sub    ch,BYTE PTR [edi+0x1d]
  40699b:	dec    ecx
  40699c:	cmp    bl,ch
  40699e:	sub    DWORD PTR [ebp-0x3a6259b0],ecx
  4069a4:	xchg   ebx,eax
  4069a5:	adc    BYTE PTR [ebx-0x5da46527],dl
  4069ab:	out    dx,al
  4069ac:	pusha  
  4069ad:	fs mov cl,0x4
  4069b0:	sub    ch,BYTE PTR [edi-0x44da39b1]
  4069b6:	sbb    DWORD PTR ds:0x1d83a9,edx
  4069bc:	push   eax
  4069bd:	mov    eax,ds:0x8ae4666b
  4069c2:	cli    
  4069c3:	repz lea esp,[esi+edx*2+0x633502dc]
  4069cb:	bnd jge 0x4069ef
  4069ce:	push   ss
  4069cf:	cli    
  4069d0:	lds    eax,FWORD PTR [eax+esi*8+0x33742aea]
  4069d7:	js     0x406a46
  4069d9:	je     0x4069f7
  4069db:	lahf   
  4069dc:	adc    cl,BYTE PTR [eax+0x5c]
  4069df:	xchg   edx,eax
  4069e0:	ins    DWORD PTR es:[edi],dx
  4069e1:	pop    esi
  4069e2:	push   eax
  4069e3:	jno    0x406a0a
  4069e5:	js     0x406a0a
  4069e7:	je     0x406a51
  4069e9:	js     0x406a68
  4069eb:	jo     0x4069da
  4069ed:	cmc    
  4069ee:	sbb    ch,0xa0
  4069f1:	test   al,0x8f
  4069f3:	(bad)  
  4069f4:	mov    al,0x21
  4069f6:	xor    al,0x93
  4069f8:	js     0x406a07
  4069fa:	stos   DWORD PTR es:[edi],eax
  4069fb:	lods   al,BYTE PTR ds:[esi]
  4069fc:	mov    DWORD PTR [ecx-0x28],0x24e65a41
  406a03:	mov    al,ds:0x562222be
  406a08:	cs iret 
  406a0a:	pop    esi
  406a0b:	lock adc BYTE PTR [edx],bh
  406a0e:	xchg   esi,eax
  406a0f:	push   es
  406a10:	fisubr DWORD PTR [ecx]
  406a12:	inc    ebp
  406a13:	mov    al,0x78
  406a15:	in     al,0x8
  406a17:	pusha  
  406a18:	xchg   ecx,eax
  406a19:	and    al,0x56
  406a1b:	nop
  406a1c:	mov    edi,DWORD PTR [edi]
  406a1e:	loop   0x406a25
  406a20:	jnp    0x406a93
  406a22:	test   al,0xdc
  406a24:	nop
  406a25:	sbb    BYTE PTR [edi],bl
  406a27:	adc    esi,ebx
  406a29:	ins    DWORD PTR es:[edi],dx
  406a2a:	pop    esp
  406a2b:	cwde   
  406a2c:	and    al,0x2
  406a2e:	adc    eax,0x3982c43c
  406a33:	lahf   
  406a34:	add    eax,0x5ee8c6d5
  406a39:	sti    
  406a3a:	aas    
  406a3b:	jle    0x406a53
  406a3d:	or     BYTE PTR [ebx+ebp*4],bh
  406a40:	les    ebp,FWORD PTR [esi]
  406a42:	adc    eax,0xd95fce43
  406a47:	jg     0x406a2b
  406a49:	lahf   
  406a4a:	fcom   DWORD PTR [esi+edi*1]
  406a4d:	mov    ebp,DWORD PTR [ebx+0x55]
  406a50:	dec    esp
  406a51:	in     eax,0xb0
  406a53:	adc    ecx,DWORD PTR [eax-0x5b]
  406a56:	mov    ecx,0xe9dfc88b
  406a5b:	mov    al,ds:0x1400cfd7
  406a60:	cwde   
  406a61:	fstp   QWORD PTR [edi-0x650b4bf9]
  406a67:	push   eax
  406a68:	fmul   QWORD PTR [eax+0x42]
  406a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a6c:	stos   DWORD PTR es:[edi],eax
  406a6d:	inc    edx
  406a6e:	push   cs
  406a6f:	add    DWORD PTR [ebx],edx
  406a71:	push   ss
  406a72:	mov    ch,0x7a
  406a74:	or     eax,0xb80e2374
  406a79:	dec    edx
  406a7a:	(bad)  
  406a7b:	stos   DWORD PTR es:[edi],eax
  406a7c:	xor    DWORD PTR [ecx],edx
  406a7e:	leave  
  406a7f:	sub    eax,0xf7a9f95b
  406a84:	(bad)  
  406a86:	repz imul edx,DWORD PTR [ebx-0x5049cd0a],0xffffff81
  406a8e:	imul   edi,DWORD PTR [esp+ebx*2-0x3c9c9827],0xffffffca
  406a96:	sahf   
  406a97:	jns    0x406acd
  406a99:	stos   BYTE PTR es:[edi],al
  406a9a:	sbb    al,0xd3
  406a9c:	xchg   ebx,eax
  406a9d:	fild   DWORD PTR [edi+0x2fad240f]
  406aa3:	mov    DWORD PTR [ebx-0x51cc1c93],edx
  406aa9:	add    eax,0xb1aae87c
  406aae:	jge    0x406a82
  406ab0:	pop    ss
  406ab1:	inc    edx
  406ab2:	and    dl,BYTE PTR [eax+0x10]
  406ab5:	mov    eax,0xc3f62a4f
  406aba:	sti    
  406abb:	enter  0x8939,0x85
  406abf:	push   0xdb3445bb
  406ac4:	sbb    BYTE PTR [edi+0x6d],cl
  406ac7:	popf   
  406ac8:	jmp    0x406abf
  406aca:	xchg   ecx,eax
  406acb:	jb     0x406a78
  406acd:	mov    edi,0xe000393a
  406ad2:	sahf   
  406ad3:	add    ch,bl
  406ad5:	pop    esp
  406ad6:	jnp    0x406a5d
  406ad8:	das    
  406ad9:	scas   eax,DWORD PTR es:[edi]
  406ada:	into   
  406adb:	adc    BYTE PTR [ecx-0x4cdce936],cl
  406ae1:	call   0xed371ee2
  406ae6:	lds    edi,FWORD PTR gs:[esi-0x3e]
  406aea:	out    0xf4,eax
  406aec:	in     al,dx
  406aed:	push   esp
  406aee:	out    0x4f,eax
  406af0:	test   al,0x7f
  406af2:	lods   eax,DWORD PTR ds:[esi]
  406af3:	mov    dh,0x8a
  406af5:	pop    eax
  406af6:	or     ebp,esi
  406af8:	imul   ebp,DWORD PTR [ebx+ebx*1+0x69b60f0],0x2428b781
  406b03:	in     al,0xf7
  406b05:	xlat   BYTE PTR ds:[ebx]
  406b06:	inc    edi
  406b07:	ss lahf 
  406b09:	dec    edx
  406b0a:	call   0x280:0x5877f3db
  406b11:	or     eax,0x4c950e5b
  406b16:	in     eax,dx
  406b17:	arpl   WORD PTR [edi+0x3ca41357],bp
  406b1d:	xor    DWORD PTR [ebp-0x38],ebp
  406b20:	aad    0x3
  406b22:	jecxz  0x406aac
  406b24:	push   0x498f78ae
  406b29:	fdivp  st(3),st
  406b2b:	out    dx,eax
  406b2c:	(bad)
  406b2f:	(bad)  
  406b30:	and    eax,0xee86b8e9
  406b35:	nop
  406b36:	outs   dx,DWORD PTR ds:[esi]
  406b38:	mov    al,ds:0x1dc270f
  406b3d:	inc    esi
  406b3e:	cmp    BYTE PTR [esi-0x5bf829d3],0x7d
  406b45:	daa    
  406b46:	xor    bl,dl
  406b48:	sub    DWORD PTR [eax+0x137bfb30],0x32
  406b4f:	pushf  
  406b50:	scas   al,BYTE PTR es:[edi]
  406b51:	fadd   QWORD PTR [ebx+0x10]
  406b54:	imul   edx,DWORD PTR [edx],0xcecf85e1
  406b5a:	push   esi
  406b5b:	dec    ebp
  406b5c:	push   0xffffff9f
  406b5e:	es jg  0x406b11
  406b61:	xchg   BYTE PTR ds:0x55be5f0b,bl
  406b67:	outs   dx,DWORD PTR cs:[esi]
  406b69:	mov    dl,0xb3
  406b6b:	sub    dl,cl
  406b6d:	out    dx,al
  406b6e:	and    bl,BYTE PTR [ecx-0x46]
  406b71:	mov    bl,0xe7
  406b73:	sbb    esi,0xaca77331
  406b79:	hlt    
  406b7a:	into   
  406b7b:	mov    eax,0xedd2dcb0
  406b80:	jo     0x406bf5
  406b82:	or     esi,DWORD PTR [edi]
  406b84:	sahf   
  406b85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b86:	or     dh,BYTE PTR [ecx+0xd49cb3]
  406b8c:	mov    dh,0xc2
  406b8e:	pop    esp
  406b8f:	pop    ds
  406b90:	xchg   ebp,eax
  406b91:	mov    cl,bl
  406b93:	pop    esi
  406b94:	jmp    0x813b:0x6d7c073d
  406b9b:	jl     0x406bff
  406b9d:	gs fs leave 
  406ba0:	push   ecx
  406ba1:	cmp    eax,edx
  406ba3:	in     al,0x93
  406ba5:	in     eax,dx
  406ba6:	lea    eax,[eax]
  406ba8:	adc    al,0x7a
  406baa:	stos   DWORD PTR es:[edi],eax
  406bab:	mov    ds:0x23512c8e,al
  406bb0:	xor    al,0x90
  406bb2:	iret   
  406bb3:	shl    BYTE PTR [ebx+0x22813cb1],cl
  406bb9:	outs   dx,BYTE PTR ds:[esi]
  406bba:	add    eax,0x9bcf513
  406bbf:	xchg   edi,eax
  406bc0:	pop    ds
  406bc1:	ins    BYTE PTR es:[edi],dx
  406bc2:	lds    eax,FWORD PTR [edi]
  406bc4:	in     al,0x87
  406bc6:	xchg   ebp,edi
  406bc8:	mov    ds:0xf3e6a8cb,al
  406bcd:	mov    edx,0xecb28565
  406bd2:	sub    eax,0x3ab13cd5
  406bd7:	or     esi,ecx
  406bd9:	dec    eax
  406bda:	stos   BYTE PTR es:[edi],al
  406bdb:	dec    esi
  406bdc:	dec    ecx
  406bdd:	jmp    0x406b78
  406bdf:	jnp    0x406b69
  406be1:	cmp    BYTE PTR ds:0x7609e966,dl
  406be7:	stc    
  406be8:	adc    eax,0x56f06cfd
  406bed:	sub    al,0xab
  406bef:	mov    ch,0x79
  406bf1:	adc    BYTE PTR [ecx+ebx*2-0x1f29260c],al
  406bf8:	mov    ds:0x6570f7e3,al
  406bfd:	sbb    ecx,ebp
  406bff:	adc    eax,0x3c83221c
  406c04:	ds stos BYTE PTR es:[edi],al
  406c06:	jb     0x406c22
  406c08:	dec    eax
  406c09:	nop
  406c0a:	xchg   ebx,eax
  406c0b:	xchg   esi,eax
  406c0c:	cmc    
  406c0d:	cmp    BYTE PTR [edi+0x76d42231],ch
  406c13:	mov    ecx,0x54219615
  406c18:	cdq    
  406c19:	lock mov esp,0xcef545b9
  406c1f:	xor    al,0x2c
  406c21:	jmp    0x5014b98c
  406c26:	sub    DWORD PTR [eax],edx
  406c28:	sbb    ah,BYTE PTR [ebx+0x45]
  406c2b:	iret   
  406c2c:	retf   
  406c2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c2e:	xchg   esp,eax
  406c2f:	rcl    ebx,1
  406c31:	mov    ecx,0x29c5fc7f
  406c36:	sub    eax,0xd5c1caee
  406c3b:	cmp    eax,0x64706d19
  406c40:	xchg   esp,eax
  406c41:	test   eax,0xa5277724
  406c46:	sar    BYTE PTR ss:[edx],cl
  406c49:	mov    bl,0x2e
  406c4b:	jp     0x406ca7
  406c4d:	dec    esp
  406c4e:	mov    WORD PTR fs:0x6444916f,es
  406c55:	fst    DWORD PTR [ecx]
  406c57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c58:	xor    eax,0x4c3a74f5
  406c5d:	sbb    DWORD PTR ds:0x3af0ecaa,ebp
  406c63:	cld    
  406c64:	xchg   edi,eax
  406c65:	gs ja  0x406c0e
  406c68:	xchg   ebx,eax
  406c69:	push   ecx
  406c6a:	adc    DWORD PTR [ebx],ebp
  406c6c:	pop    esi
  406c6d:	or     al,0x5a
  406c6f:	and    edi,DWORD PTR [ebp-0x30f4f0]
  406c75:	pushf  
  406c76:	(bad)  
  406c77:	sbb    al,0x5a
  406c79:	adc    esi,edi
  406c7b:	mov    al,ds:0xbdb04699
  406c80:	mov    eax,ds:0xa4171e5b
  406c85:	mov    al,ds:0xd052b264
  406c8a:	jne    0x406c24
  406c8c:	daa    
  406c8d:	popf   
  406c8e:	mov    WORD PTR [ecx+0x289b2c01],gs
  406c94:	mov    esi,0x7c66d95a
  406c99:	test   BYTE PTR [eax+0x50],dl
  406c9c:	clc    
  406c9d:	jns    0x406cb2
  406c9f:	retf   
  406ca0:	dec    edx
  406ca1:	add    BYTE PTR [ecx],bl
  406ca3:	sbb    al,0xf9
  406ca5:	inc    edx
  406ca6:	mov    bl,0x2f
  406ca8:	mov    ebp,0xce23d16b
  406cae:	pop    ebx
  406caf:	shl    DWORD PTR [edi],cl
  406cb1:	(bad)  
  406cb2:	inc    DWORD PTR [esi+edx*4-0x11]
  406cb6:	dec    eax
  406cb7:	xchg   edx,eax
  406cb8:	(bad)  
  406cb9:	out    dx,al
  406cba:	icebp  
  406cbb:	pop    edi
  406cbc:	xor    esi,edi
  406cbe:	fld    TBYTE PTR [edi+0x61]
  406cc1:	ss arpl di,di
  406cc4:	and    edi,edx
  406cc6:	lods   eax,DWORD PTR ds:[esi]
  406cc7:	mov    edx,0xb61fcc48
  406ccc:	sahf   
  406ccd:	jle    0x406c8a
  406ccf:	jb     0x406c6e
  406cd1:	aas    
  406cd2:	cmp    edx,0xffffff92
  406cd5:	pushf  
  406cd6:	dec    eax
  406cd7:	inc    esi
  406cd8:	xor    bh,BYTE PTR [esi]
  406cda:	loope  0x406c9f
  406cdc:	pop    ebp
  406cdd:	jns    0x406cc8
  406cdf:	out    0xb0,al
  406ce1:	adc    edx,DWORD PTR [esi+0x36]
  406ce4:	push   ebp
  406ce5:	add    dh,BYTE PTR [ebp-0x7b30a1db]
  406ceb:	adc    ebp,DWORD PTR [edx+0x47]
  406cee:	mov    bl,0x18
  406cf0:	in     al,0xc3
  406cf2:	aad    0xc2
  406cf4:	sub    DWORD PTR [esi-0x3e66a0da],ecx
  406cfa:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  406cfc:	call   0xf1e9037d
  406d01:	out    0xba,al
  406d03:	xchg   ecx,eax
  406d04:	ins    BYTE PTR es:[edi],dx
  406d05:	inc    ebx
  406d06:	lock mov ds:0x1e8f2a18,al
  406d0c:	loopne 0x406d23
  406d0e:	mov    dl,0x79
  406d10:	leave  
  406d11:	push   edx
  406d12:	(bad)  
  406d13:	cmp    cl,dl
  406d15:	outs   dx,DWORD PTR ds:[esi]
  406d16:	dec    ebx
  406d17:	je     0x406d52
  406d19:	sar    esi,cl
  406d1b:	fdivr  QWORD PTR [ebp+0x551af973]
  406d21:	fcom   DWORD PTR [edi]
  406d23:	ret    0xf91d
  406d26:	mov    ch,0x4f
  406d28:	bound  eax,QWORD PTR [esi+0x7f]
  406d2b:	inc    edx
  406d2c:	xchg   ecx,eax
  406d2d:	test   BYTE PTR [ecx+edx*2],dh
  406d30:	lea    edx,[eax+0x1e]
  406d33:	shr    DWORD PTR [edi*4-0x4f4a18e8],cl
  406d3a:	sbb    al,BYTE PTR [esi]
  406d3c:	repnz bound esp,QWORD PTR [ebx-0xb876c5f]
  406d43:	loop   0x406d40
  406d45:	jmp    0x7abb97fe
  406d4a:	fs gs dec edx
  406d4d:	or     ecx,DWORD PTR cs:[ecx]
  406d50:	aad    0xe
  406d52:	idiv   DWORD PTR [eax]
  406d54:	(bad)  
  406d55:	xchg   ebx,eax
  406d56:	(bad)  
  406d57:	push   ds
  406d58:	xchg   DWORD PTR [edx-0x15],edi
  406d5b:	scas   eax,DWORD PTR es:[edi]
  406d5c:	mov    ebp,0xe9bd71ed
  406d61:	jne    0x406dd3
  406d63:	fstp   QWORD PTR [ebp+0x50f903dc]
  406d69:	dec    edx
  406d6a:	mov    ebx,0x3b16f9c9
  406d6f:	sbb    edx,DWORD PTR [ebp+0x7fd9d1d6]
  406d75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d76:	inc    ebp
  406d77:	push   0xffffffe7
  406d79:	jg     0x406d13
  406d7b:	out    0x10,eax
  406d7d:	jecxz  0x406dbd
  406d7f:	lea    edx,[ebx+0x76d958e3]
  406d85:	and    DWORD PTR [ecx-0x5c],eax
  406d88:	jnp    0x406d93
  406d8a:	sub    DWORD PTR [esi],esi
  406d8c:	or     BYTE PTR [edx],cl
  406d8e:	add    ecx,DWORD PTR ds:0x94d008c2
  406d94:	cmp    al,0xf1
  406d97:	in     al,0x1b
  406d99:	jno    0x406dc1
  406d9b:	shl    DWORD PTR [ecx],1
  406d9d:	call   0x2d1efdac
  406da2:	xchg   esp,eax
  406da3:	add    BYTE PTR ds:0x4abac04c,ah
  406da9:	push   0x776435fd
  406dae:	cmp    DWORD PTR [ecx+edx*2+0x2ce6f4e9],0xffffffdb
  406db6:	leave  
  406db7:	fisttp QWORD PTR [bp+di]
  406dba:	aam    0xfe
  406dbc:	out    dx,al
  406dbd:	jle    0x406d7d
  406dbf:	iret   
  406dc0:	lds    ebp,FWORD PTR [ecx+0x3d]
  406dc3:	(bad)  
  406dc4:	aaa    
  406dc5:	add    ecx,ebx
  406dc7:	mov    WORD PTR [esi+0xc],fs
  406dca:	imul   eax,DWORD PTR [esi],0xffffffba
  406dcd:	mov    ds:0xf5b176f3,al
  406dd2:	mov    ah,0x62
  406dd4:	sub    esp,DWORD PTR [edx+0x61cb5bdf]
  406dda:	or     dh,al
  406ddc:	push   esp
  406ddd:	cmp    DWORD PTR [ebx-0x13b1d856],esi
  406de3:	aam    0xc1
  406de5:	in     eax,0x18
  406de7:	dec    edx
  406de8:	nop
  406de9:	inc    ebx
  406dea:	and    DWORD PTR [edi],0x3287bcc
  406df0:	or     eax,0x8da543f0
  406df5:	add    ebx,DWORD PTR [edx+0x70]
  406df8:	add    dh,BYTE PTR [edi+0x5e]
  406dfb:	adc    DWORD PTR [ebx+eax*2-0x4c],eax
  406dff:	cmp    BYTE PTR [ecx-0x14],ch
  406e02:	in     eax,0x39
  406e04:	sahf   
  406e05:	mov    ah,0xef
  406e07:	sti    
  406e08:	dec    ebp
  406e09:	xchg   BYTE PTR [ecx+0x35a6a6d6],dl
  406e0f:	(bad)  
  406e11:	mov    edi,0xee97d738
  406e16:	repnz mov ebx,0x3f0fe055
  406e1c:	bound  ecx,QWORD PTR [ebx-0x1200bb7c]
  406e22:	mov    dl,0x55
  406e24:	(bad)
  406e27:	loope  0x406e8f
  406e29:	sub    BYTE PTR [ebx-0x76d6cdaa],0xdf
  406e30:	ficom  WORD PTR [edx-0x157aca1]
  406e36:	pop    ds
  406e37:	inc    esi
  406e38:	jae    0x406e47
  406e3a:	xor    eax,0x4062d509
  406e3f:	sbb    ch,al
  406e41:	mov    ebp,0xdc7eac4d
  406e46:	ret    0x322d
  406e49:	daa    
  406e4a:	fs aas 
  406e4c:	fdivr  DWORD PTR [esi+0x38cba176]
  406e52:	lock vpsubq xmm2,xmm3,xmm3
  406e57:	add    ebx,DWORD PTR [ebx-0x57bec73d]
  406e5d:	icebp  
  406e5e:	test   eax,0x1970ae48
  406e63:	mov    ebx,0xb8f662ee
  406e68:	test   eax,0xf1829888
  406e6d:	arpl   bx,si
  406e6f:	out    dx,al
  406e70:	push   edx
  406e71:	xchg   ebx,eax
  406e72:	in     eax,dx
  406e73:	mov    esp,0x6d13e235
  406e78:	sbb    eax,0x3ad9b7ac
  406e7d:	pop    eax
  406e7e:	adc    dl,cl
  406e80:	div    BYTE PTR [eax+0x2c]
  406e83:	jmp    0x902:0x764e0602
  406e8a:	pop    eax
  406e8b:	dec    edi
  406e8c:	jo     0x406ef6
  406e8e:	dec    ecx
  406e8f:	pop    ss
  406e90:	or     BYTE PTR [eax+0x5dc5c170],ch
  406e96:	mov    eax,0x463d86ea
  406e9b:	lods   al,BYTE PTR ds:[esi]
  406e9c:	rcr    BYTE PTR [ebp+0x50],0xcc
  406ea0:	test   BYTE PTR [esi+ebp*1],ah
  406ea3:	test   eax,0x7f41b81e
  406ea8:	mov    esi,0xa92bfb68
  406ead:	stos   BYTE PTR es:[edi],al
  406eae:	push   ecx
  406eaf:	sub    bh,dh
  406eb1:	mov    ebx,0x8a2215d4
  406eb6:	sbb    dh,dl
  406eb8:	adc    DWORD PTR [edx-0x37],ecx
  406ebb:	jl     0x406e97
  406ebd:	fcmovnb st,st(2)
  406ebf:	pop    edx
  406ec0:	cwde   
  406ec1:	(bad)  [ebp+0x14]
  406ec4:	and    eax,0xe7626988
  406ec9:	scas   eax,DWORD PTR es:[edi]
  406eca:	rcl    ch,0x44
  406ecd:	and    ebx,esp
  406ecf:	fisttp DWORD PTR [ebp+0x25]
  406ed2:	pop    ecx
  406ed3:	scas   eax,DWORD PTR es:[edi]
  406ed4:	enter  0x2672,0x61
  406ed8:	mov    DWORD PTR [ebx],esi
  406eda:	push   ebp
  406edb:	mov    edx,0xa81b4d30
  406ee0:	push   esp
  406ee1:	jmp    FWORD PTR [esi-0x60ccf9f9]
  406ee7:	sbb    ah,BYTE PTR [eax-0x2]
  406eea:	in     eax,dx
  406eeb:	inc    edx
  406eec:	adc    dl,ah
  406eee:	and    al,0x5b
  406ef0:	inc    ecx
  406ef1:	jmp    0x58c4f3d
  406ef6:	pop    edi
  406ef7:	sbb    al,0x9a
  406ef9:	sbb    al,0x43
  406efb:	(bad)  
  406efd:	mov    ebp,0x6d743a60
  406f02:	repnz cmp ch,cl
  406f05:	in     al,dx
  406f06:	add    al,0x46
  406f08:	push   edi
  406f09:	mov    dl,0xac
  406f0b:	out    0x3a,al
  406f0d:	cmp    esi,DWORD PTR [edi]
  406f0f:	add    DWORD PTR [ebx-0x28],edx
  406f12:	sub    DWORD PTR [esp+esi*8],ecx
  406f15:	push   cs
  406f16:	mov    edi,0x8032c4d8
  406f1b:	push   edi
  406f1c:	(bad)  [ebx+0x18]
  406f1f:	adc    esp,edi
  406f21:	fidivr DWORD PTR [eax+0x3c]
  406f24:	mov    dl,0x52
  406f26:	dec    ecx
  406f27:	xor    edi,ebx
  406f29:	lods   al,BYTE PTR ds:[esi]
  406f2a:	(bad)  
  406f2b:	dec    ebx
  406f2c:	jnp    0x406f74
  406f2e:	and    al,0xea
  406f30:	sub    al,ch
  406f32:	xchg   esi,eax
  406f33:	jg     0x406f1a
  406f35:	xchg   esp,eax
  406f36:	ficom  WORD PTR [esp+ecx*8]
  406f39:	jo     0x406f0a
  406f3b:	jge    0x406f21
  406f3d:	add    dl,cl
  406f3f:	cmp    DWORD PTR [edx+0x11],esp
  406f42:	jno    0x406ed6
  406f44:	das    
  406f45:	ret    
  406f46:	stos   DWORD PTR es:[edi],eax
  406f47:	inc    ecx
  406f48:	sub    DWORD PTR [ebp+0x2eed8d5c],eax
  406f4e:	pop    edi
  406f4f:	daa    
  406f50:	sub    DWORD PTR [eax],eax
  406f52:	add    BYTE PTR [esp+edi*8],bh
  406f55:	adc    DWORD PTR [edx+0x22],edx
  406f58:	jmp    0x7327aa36
  406f5d:	push   ds
  406f5e:	int3   
  406f5f:	mov    ch,0xc5
  406f61:	lea    eax,[edi+0xd]
  406f64:	adc    dh,BYTE PTR [edx]
  406f66:	call   0x367:0xb333859f
  406f6d:	ror    DWORD PTR [edi+0x2f],0xa0
  406f71:	fidivr WORD PTR [edx-0x26e04bab]
  406f77:	pop    ds
  406f78:	shl    BYTE PTR [edx-0x28],cl
  406f7b:	xchg   DWORD PTR [ebx-0x4be327b9],edi
  406f81:	out    0xb3,eax
  406f83:	repnz inc ecx
  406f85:	gs pusha 
  406f87:	pusha  
  406f88:	mov    BYTE PTR [ecx-0xd],cl
  406f8b:	and    al,0x35
  406f8d:	jmp    0x406f21
  406f8f:	push   esi
  406f90:	cmp    BYTE PTR [ecx],0x85
  406f93:	retf   0x4559
  406f96:	fsubp  st(1),st
  406f98:	mov    bh,dh
  406f9a:	leave  
  406f9b:	jp     0x406fff
  406f9d:	sub    eax,0x21e50763
  406fa2:	cdq    
  406fa3:	sbb    ah,BYTE PTR [edx+ebp*4+0x2d]
  406fa7:	test   BYTE PTR [ebx+0x12eebcff],0xbd
  406fae:	sar    BYTE PTR [edi-0x5807669d],1
  406fb4:	ins    DWORD PTR es:[edi],dx
  406fb5:	push   eax
  406fb6:	xchg   ebx,eax
  406fb7:	ins    BYTE PTR es:[edi],dx
  406fb8:	aaa    
  406fb9:	and    eax,0xd84285c1
  406fbe:	xor    bh,dl
  406fc0:	jecxz  0x406f5f
  406fc2:	lahf   
  406fc3:	ret    0xff15
  406fc6:	cdq    
  406fc7:	cs push eax
  406fc9:	idiv   BYTE PTR [eax-0x47]
  406fcc:	aaa    
  406fcd:	int    0x26
  406fcf:	cmp    eax,0x8ff09fc2
  406fd4:	cmp    DWORD PTR [esi],edx
  406fd6:	xchg   esp,edx
  406fd8:	jnp    0x406f70
  406fda:	and    bh,ah
  406fdc:	push   0x80fa2b8c
  406fe1:	xchg   ecx,eax
  406fe2:	jmp    0x601f:0x3796bf20
  406fe9:	fcmovnbe st,st(1)
  406feb:	pop    es
  406fec:	daa    
  406fed:	xor    eax,0x344a2c89
  406ff2:	inc    ebx
  406ff3:	inc    edx
  406ff4:	sar    DWORD PTR [ecx+ecx*4],cl
  406ff7:	sbb    BYTE PTR [edx-0x73892d25],dl
  406ffd:	int3   
  406ffe:	mov    al,ds:0xa2f6bdff
  407003:	hlt    
  407004:	jp     0x406faf
  407006:	call   0x1bac4dc1
  40700b:	fcmovbe st,st(1)
  40700d:	xchg   ebx,eax
  40700e:	inc    esi
  40700f:	mov    ah,0x82
  407011:	vsqrtss xmm4,xmm1,DWORD PTR [eax]
  407015:	jnp    0x40705d
  407017:	cmp    DWORD PTR [ecx+eiz*1],esi
  40701a:	xor    esi,esi
  40701c:	sbb    eax,0xef6a8641
  407022:	outs   dx,BYTE PTR ds:[esi]
  407023:	jecxz  0x407014
  407025:	cmp    eax,0x1178ec37
  40702a:	dec    edi
  40702b:	push   esp
  40702c:	mov    eax,0xc1fc14a2
  407031:	add    BYTE PTR [edi],bl
  407033:	pop    ecx
  407034:	lds    eax,FWORD PTR [ebp+ebp*2-0x7c]
  407038:	test   eax,0xebfd4aa4
  40703d:	shl    DWORD PTR [esi+0xc],1
  407040:	daa    
  407041:	arpl   WORD PTR [ecx-0x7d],dx
  407044:	(bad)  
  407045:	cli    
  407046:	push   ebx
  407047:	fild   QWORD PTR [ecx+eiz*8+0x6a]
  40704b:	es xchg edx,eax
  40704d:	shl    DWORD PTR [ebp-0x75f4e229],1
  407053:	test   eax,0x4b5029ed
  407058:	mov    eax,ds:0xca8745fd
  40705d:	push   edx
  40705e:	clc    
  40705f:	cmp    al,0xea
  407061:	test   eax,0x38941e8d
  407066:	jnp    0x406ff3
  407068:	retf   
  407069:	repz icebp 
  40706b:	loopne 0x4070cd
  40706d:	enter  0xc1bf,0xf1
  407071:	inc    esp
  407072:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407073:	int    0x9c
  407075:	sbb    ebp,esp
  407077:	fstp   DWORD PTR [ecx+ebx*2+0xe]
  40707b:	add    BYTE PTR [esi-0x3377946a],dl
  407081:	pop    esp
  407082:	inc    edx
  407083:	aaa    
  407084:	repz cs inc ecx
  407087:	inc    esi
  407088:	add    al,0xdf
  40708a:	fcmovbe st,st(1)
  40708c:	data16 sti 
  40708e:	test   BYTE PTR [ebx+0x8afa578],dh
  407094:	sbb    ebx,0xffffff8f
  407097:	xor    al,0x5a
  407099:	sub    DWORD PTR [ecx],esp
  40709b:	pop    edi
  40709c:	out    dx,eax
  40709d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40709e:	mov    dl,BYTE PTR [esi]
  4070a0:	cld    
  4070a1:	jecxz  0x407072
  4070a3:	jnp    0x407116
  4070a5:	push   edi
  4070a6:	adc    al,0xf7
  4070a8:	es (bad) 
  4070ab:	out    0x11,eax
  4070ad:	aad    0x6b
  4070af:	aam    0xdc
  4070b1:	jecxz  0x4070ba
  4070b3:	xor    al,0x3
  4070b5:	es pop ecx
  4070b7:	jl     0x4070db
  4070b9:	inc    eax
  4070ba:	mov    bh,0xcc
  4070bc:	pushf  
  4070bd:	clc    
  4070be:	mov    DWORD PTR [eax-0x6879daca],esi
  4070c4:	ins    BYTE PTR es:[edi],dx
  4070c5:	fsub   DWORD PTR [ebp-0x7f47e8c8]
  4070cb:	dec    ecx
  4070cc:	rcl    BYTE PTR [esi-0x7ee98c60],1
  4070d2:	xor    edi,edi
  4070d4:	call   0x5c58:0xb55d6f1b
  4070db:	add    DWORD PTR [edi-0x7a],ebx
  4070de:	jl     0x4070e9
  4070e0:	and    DWORD PTR [eax-0x19],edx
  4070e3:	xchg   edi,eax
  4070e4:	es mov dh,0x5c
  4070e7:	inc    edi
  4070e8:	inc    ebx
  4070e9:	mov    ch,0xcc
  4070eb:	ds jne 0x407148
  4070ee:	xchg   esp,eax
  4070ef:	and    ebp,DWORD PTR [ebx+eiz*1]
  4070f2:	(bad)  
  4070f3:	lahf   
  4070f4:	pmaddwd mm1,mm2
  4070f7:	jno    0x407136
  4070f9:	jo     0x4070f5
  4070fb:	fs push esp
  4070fd:	out    0x6f,eax
  4070ff:	pop    ebp
  407100:	outs   dx,BYTE PTR ds:[esi]
  407101:	retf   
  407102:	mov    ah,BYTE PTR [eax-0x44f26c3b]
  407108:	sbb    ch,0x30
  40710b:	cli    
  40710c:	(bad)  
  40710d:	lahf   
  40710e:	xor    eax,0x62dc73b
  407113:	sub    al,0x34
  407115:	(bad)  [esi]
  407117:	mov    es,WORD PTR [eax+0x10]
  40711a:	and    DWORD PTR [ecx+0x39],ecx
  40711d:	rcl    DWORD PTR [ebx],1
  40711f:	add    edx,ebx
  407121:	jmp    0xa39:0x14f420f9
  407128:	push   0x3f1be75
  40712d:	call   0x7d9ac1fa
  407132:	in     al,dx
  407133:	pop    ebp
  407134:	inc    ecx
  407135:	inc    edi
  407136:	cli    
  407137:	adc    eax,ecx
  407139:	cs das 
  40713b:	xchg   ebx,eax
  40713c:	xor    BYTE PTR cs:[eax],0x5e
  407140:	mov    edi,0x18f5d9e3
  407145:	stos   DWORD PTR es:[edi],eax
  407146:	inc    eax
  407147:	scas   al,BYTE PTR es:[edi]
  407148:	pop    esp
  407149:	adc    ah,BYTE PTR [esi+0x48]
  40714c:	loop   0x40714e
  40714e:	lea    esi,[ebp+0x69e9727f]
  407154:	sbb    esp,edx
  407156:	mov    dh,BYTE PTR [esi]
  407158:	dec    esi
  407159:	rcl    DWORD PTR [ecx],1
  40715b:	pop    ds
  40715c:	ja     0x40712c
  40715e:	adc    dh,BYTE PTR [edx]
  407160:	jne    0x5b8f313e
  407166:	jnp    0x40717c
  407168:	out    dx,eax
  407169:	dec    edx
  40716a:	rol    BYTE PTR [ecx-0xf8ef851],0x9d
  407171:	popa   
  407172:	push   0xe8a1d71a
  407177:	mov    esi,DWORD PTR [edi]
  407179:	test   al,0x14
  40717b:	or     dh,BYTE PTR [edx]
  40717d:	lds    edi,FWORD PTR [eax-0x18795055]
  407183:	outs   dx,BYTE PTR ds:[esi]
  407184:	ins    DWORD PTR es:[edi],dx
  407185:	pop    ecx
  407186:	xlat   BYTE PTR ds:[ebx]
  407187:	cli    
  407188:	fild   DWORD PTR [edx-0x55]
  40718b:	pushf  
  40718c:	add    al,0xc4
  40718e:	(bad)
  407191:	add    bh,dl
  407193:	xor    al,0xa4
  407195:	add    al,0xf0
  407197:	je     0x407123
  407199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40719a:	cwde   
  40719b:	push   edi
  40719c:	leave  
  40719d:	cdq    
  40719e:	inc    DWORD PTR [ebx+0x46c0a163]
  4071a4:	pop    ebp
  4071a5:	pop    es
  4071a6:	cmp    BYTE PTR [ebx-0x45],ah
  4071a9:	(bad)  
  4071aa:	ds push ecx
  4071ac:	out    0x2,eax
  4071ae:	jp     0x40722f
  4071b0:	lods   eax,DWORD PTR ds:[esi]
  4071b1:	xlat   BYTE PTR ds:[ebx]
  4071b2:	cld    
  4071b3:	adc    edi,esp
  4071b5:	or     al,0x7a
  4071b7:	push   gs
  4071b9:	sub    al,0x83
  4071bb:	in     al,0x87
  4071bd:	cmc    
  4071be:	aad    0x48
  4071c0:	in     eax,dx
  4071c1:	fld    QWORD PTR [ebp-0x7900c19b]
  4071c7:	in     eax,0x67
  4071c9:	(bad)  
  4071ca:	pop    edx
  4071cb:	inc    ebx
  4071cc:	in     eax,dx
  4071cd:	dec    edx
  4071ce:	in     eax,0x32
  4071d0:	ins    BYTE PTR es:[edi],dx
  4071d1:	xchg   edi,eax
  4071d2:	jno    0x40718a
  4071d4:	sub    ecx,DWORD PTR [ecx+0x2b241e2b]
  4071da:	ins    BYTE PTR es:[edi],dx
  4071db:	sbb    al,0xdf
  4071dd:	mov    BYTE PTR [esi],0xdc
  4071e0:	gs jecxz 0x407193
  4071e3:	inc    esi
  4071e4:	xlat   BYTE PTR ds:[ebx]
  4071e5:	pop    ecx
  4071e6:	jno    0x40719a
  4071e8:	inc    edi
  4071e9:	mov    esi,DWORD PTR [ecx]
  4071eb:	ret    0x4922
  4071ee:	fmul   st(5),st
  4071f0:	add    eax,0x40612b63
  4071f5:	iret   
  4071f6:	add    bh,BYTE PTR [ebx]
  4071f8:	mov    ebp,0x74dd1004
  4071fd:	test   al,0x16
  4071ff:	mov    al,ds:0xef294bd9
  407204:	out    0x10,eax
  407206:	push   esi
  407207:	xchg   esi,eax
  407208:	jae    0x4071dc
  40720a:	adc    eax,0x62e93614
  40720f:	je     0x40723d
  407211:	add    dl,ch
  407213:	shl    BYTE PTR [edx-0x688a131f],0x8a
  40721a:	mov    ds:0xa0b75b8c,eax
  40721f:	ror    DWORD PTR ds:0xd6a8318,cl
  407225:	mov    bl,0xfc
  407227:	leave  
  407228:	push   esi
  407229:	inc    eax
  40722a:	sahf   
  40722b:	ins    DWORD PTR es:[edi],dx
  40722c:	adc    al,0x4a
  40722e:	je     0x407228
  407230:	mov    esi,0xd1892227
  407235:	inc    esi
  407236:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407237:	test   BYTE PTR [esi-0xb],0x11
  40723b:	cmp    eax,ecx
  40723d:	xor    eax,0x5fd577f8
  407242:	inc    dx
  407244:	in     al,0x93
  407246:	(bad)
  407249:	push   esi
  40724a:	int3   
  40724b:	daa    
  40724c:	int    0xc8
  40724e:	add    al,0x23
  407250:	mov    esp,0x38f00447
  407255:	das    
  407256:	xchg   esp,eax
  407257:	loopne 0x407256
  407259:	ds dec esp
  40725b:	aad    0x2f
  40725d:	ror    DWORD PTR [eax+0x7b753600],0xf3
  407264:	dec    eax
  407265:	bnd ret 0x2c8e
  407269:	jecxz  0x4072bd
  40726b:	cli    
  40726c:	pop    ss
  40726d:	sbb    dl,BYTE PTR [ecx+0xa]
  407270:	mov    eax,0x132132b4
  407275:	shr    BYTE PTR [edi],1
  407277:	pop    esp
  407278:	xor    ch,bl
  40727a:	sub    al,0x4e
  40727c:	mov    ebp,DWORD PTR [esi+eax*2]
  40727f:	inc    ebx
  407280:	add    dl,ch
  407282:	jecxz  0x407303
  407284:	xchg   esi,eax
  407285:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407286:	mov    ds:0xe52ce386,eax
  40728b:	ret    
  40728c:	pop    eax
  40728d:	xor    edi,DWORD PTR [edx-0x80]
  407290:	enter  0xb641,0x10
  407294:	daa    
  407295:	out    0x80,al
  407297:	cs call 0x31b7:0x7fef2282
  40729f:	les    eax,FWORD PTR [ecx-0x103c899a]
  4072a5:	ds test eax,0x9867e0c3
  4072ab:	sub    eax,DWORD PTR [ecx]
  4072ad:	arpl   WORD PTR [ecx+0x9b8ad95],bp
  4072b3:	cld    
  4072b4:	loope  0x40724c
  4072b6:	add    BYTE PTR [ebp-0x70e90e9f],0xb3
  4072bd:	sub    BYTE PTR [ecx-0x7b],dh
  4072c0:	fbstp  TBYTE PTR [esi+esi*2+0x5c7de8a4]
  4072c7:	lds    esi,FWORD PTR [edi-0x6]
  4072ca:	mov    bl,0x27
  4072cc:	sub    eax,DWORD PTR [esi-0x5be8dd92]
  4072d2:	pop    edi
  4072d3:	xchg   DWORD PTR [ecx+0x5e859d6],ecx
  4072d9:	not    DWORD PTR [ebx+0x7e]
  4072dc:	sbb    DWORD PTR [esp+esi*1],esi
  4072df:	sub    ch,BYTE PTR [eax+0x4f]
  4072e2:	or     dl,BYTE PTR [edi+ebp*4+0x334dad4c]
  4072e9:	mov    ds:0xa18ae920,eax
  4072ee:	(bad)  
  4072ef:	cwde   
  4072f0:	pop    ecx
  4072f1:	retf   
  4072f2:	lahf   
  4072f3:	mov    al,ds:0x9959ff43
  4072f8:	jmp    0x3a93bd52
  4072fd:	stos   BYTE PTR es:[edi],al
  4072fe:	xchg   ebp,eax
  4072ff:	fldlg2 
  407301:	mov    eax,ds:0x1496561d
  407306:	in     al,dx
  407307:	cmp    bh,BYTE PTR [esi-0xa]
  40730a:	(bad)  
  40730b:	cmp    eax,0xd18025aa
  407310:	nop
  407311:	sar    DWORD PTR [ecx-0x501a6a93],cl
  407317:	es sahf 
  407319:	inc    esp
  40731a:	pop    edi
  40731b:	add    ebp,esi
  40731d:	push   ebp
  40731e:	gs jmp 0x7c0ea1d2
  407324:	neg    DWORD PTR [edx+ebx*8+0x713f5ad3]
  40732b:	loopne 0x4072d2
  40732d:	cmp    al,0x31
  40732f:	dec    ebp
  407330:	mov    es,WORD PTR [edx-0x41]
  407333:	jmp    0x598c:0x40de3009
  40733a:	outs   dx,BYTE PTR ds:[esi]
  40733b:	xchg   ebp,eax
  40733c:	xchg   edx,eax
  40733d:	(bad)  
  40733e:	xor    BYTE PTR [ebx],cl
  407340:	sbb    bh,BYTE PTR [ebx-0x1c]
  407343:	cli    
  407344:	jecxz  0x407367
  407346:	lahf   
  407347:	(bad)  
  407348:	repz sbb BYTE PTR [edx+0x22],ch
  40734c:	bound  edi,QWORD PTR [esi-0x7d455a6d]
  407352:	icebp  
  407353:	cmp    eax,0xcf62f842
  407358:	cmp    al,0x62
  40735a:	lea    eax,[ebp-0x3fae9387]
  407360:	aas    
  407361:	mov    al,0xb3
  407363:	jg     0x407307
  407365:	int    0x1e
  407367:	xchg   DWORD PTR [edi+0x2c9ca3bb],ebp
  40736d:	pop    ebp
  40736e:	pop    ebp
  40736f:	pop    ebx
  407370:	dec    ecx
  407371:	sub    edi,ebx
  407373:	pop    esp
  407374:	dec    esi
  407375:	sub    bl,0x83
  407378:	xor    ch,BYTE PTR [edx+ebx*4]
  40737b:	jbe    0x407349
  40737d:	push   es
  40737e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40737f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407380:	adc    bh,BYTE PTR [edx]
  407382:	dec    ebp
  407383:	xchg   ecx,eax
  407384:	inc    eax
  407385:	daa    
  407386:	pop    ebx
  407387:	mov    eax,ds:0x553b3050
  40738c:	xor    ebx,ebp
  40738e:	push   ebx
  40738f:	nop
  407390:	rol    DWORD PTR [esi+0x8],cl
  407393:	mov    eax,0xcfc179ad
  407398:	aad    0xa1
  40739a:	je     0x407381
  40739c:	rcr    BYTE PTR [eax+0x6f],1
  40739f:	sub    ebx,esi
  4073a1:	in     al,0xb4
  4073a3:	xchg   ecx,eax
  4073a4:	jnp    0x4073a3
  4073a6:	push   edx
  4073a7:	xor    DWORD PTR [ebp+0x5b],esp
  4073aa:	mov    ah,0x20
  4073ac:	bound  esp,QWORD PTR [edx]
  4073ae:	rcr    esi,cl
  4073b0:	mov    ah,0x11
  4073b2:	imul   edi,DWORD PTR [eax+0x17],0xffffffa6
  4073b6:	fild   WORD PTR [eax+0x54e63399]
  4073bc:	inc    ecx
  4073bd:	sbb    BYTE PTR ds:0x1bd4466e,ch
  4073c3:	push   edi
  4073c4:	and    BYTE PTR [edx-0x7f8f51c8],ch
  4073ca:	loop   0x407390
  4073cc:	js     0x4073d5
  4073ce:	nop
  4073cf:	into   
  4073d0:	push   esi
  4073d2:	imul   esp,DWORD PTR [ecx-0x509a829a],0x5292ed60
  4073dc:	mov    edx,0xb9b53053
  4073e1:	push   edi
  4073e2:	sbb    eax,0xcc25c2b2
  4073e7:	enter  0x76a4,0x57
  4073eb:	jp     0x407467
  4073ed:	ins    DWORD PTR es:[edi],dx
  4073ee:	or     ebx,DWORD PTR [edx]
  4073f0:	clc    
  4073f1:	aas    
  4073f2:	jge    0x407400
  4073f4:	(bad)  
  4073f5:	jmp    FWORD PTR [edx+0x28]
  4073f8:	(bad)  
  4073f9:	sbb    cl,cl
  4073fb:	pop    edi
  4073fc:	imul   ebp,edx,0xaba14cb4
  407402:	fidivr WORD PTR [edi+edi*8+0x50]
  407406:	inc    ebp
  407407:	inc    ebx
  407408:	inc    ebx
  407409:	sub    al,0x45
  40740b:	jae    0x4073df
  40740d:	pop    ds
  40740e:	add    dh,BYTE PTR [eax-0x25]
  407411:	rol    DWORD PTR gs:[ecx+0x32],cl
  407415:	(bad)  
  407418:	pop    esi
  407419:	cmp    esp,0xbc694940
  40741f:	outs   dx,DWORD PTR ds:[esi]
  407420:	mov    dh,0xa2
  407422:	ins    DWORD PTR es:[edi],dx
  407423:	sub    dl,cl
  407425:	jns    0x4073db
  407427:	popa   
  407428:	rcr    BYTE PTR [ebx+edx*2],cl
  40742b:	mov    bl,BYTE PTR [ebx]
  40742d:	push   edi
  40742e:	(bad)
  407432:	cdq    
  407433:	cwde   
  407434:	mov    ds:0xc8e6fca8,eax
  407439:	neg    BYTE PTR [eax+0x8]
  40743c:	pop    esi
  40743d:	push   esi
  40743e:	adc    eax,0x9fd50535
  407443:	pop    edi
  407444:	push   0xffffffbb
  407446:	mov    dh,0x57
  407448:	add    DWORD PTR [eax+0x7c],edi
  40744b:	adc    ebp,eax
  40744d:	xchg   edi,eax
  40744e:	inc    edi
  40744f:	add    al,0xed
  407451:	jle    0x40740a
  407453:	jmp    0x7629:0x3c5a3ec5
  40745a:	sbb    DWORD PTR [ebp+edx*8+0x33],esi
  40745e:	add    ecx,DWORD PTR [edi+ebx*4-0x12bc3885]
  407465:	mov    dh,0xe3
  407467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407468:	mov    ch,0xf7
  40746a:	daa    
  40746b:	lea    ebx,[eax]
  40746d:	inc    esi
  40746e:	push   eax
  40746f:	in     al,dx
  407470:	inc    eax
  407471:	imul   ecx,ebp,0x2d439bfe
  407477:	in     al,dx
  407478:	leave  
  407479:	nop
  40747a:	adc    al,BYTE PTR [ecx+0x2caa6565]
  407480:	pop    edi
  407481:	inc    edx
  407482:	sbb    BYTE PTR [eax-0x2c],dl
  407485:	cmp    BYTE PTR [esi+0x2adb9e15],0x31
  40748c:	mov    ebp,0x1467d31d
  407491:	pushf  
  407492:	add    al,0x89
  407495:	cli    
  407496:	mov    eax,ds:0x9c25ec36
  40749b:	or     eax,0xc91d550d
  4074a0:	cld    
  4074a1:	dec    ebp
  4074a2:	icebp  
  4074a3:	lods   al,BYTE PTR ds:[esi]
  4074a4:	clc    
  4074a5:	out    0x16,eax
  4074a7:	cld    
  4074a8:	pop    edx
  4074a9:	xchg   edi,eax
  4074aa:	iret   
  4074ab:	inc    eax
  4074ac:	repz cmc 
  4074ae:	fs cmp eax,0x3a3b444
  4074b4:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074b6:	cwde   
  4074b7:	cld    
  4074b8:	add    al,BYTE PTR [eax]
  4074ba:	in     al,dx
  4074bb:	ins    DWORD PTR es:[edi],dx
  4074bc:	in     eax,dx
  4074bd:	loopne 0x4074e6
  4074bf:	inc    ecx
  4074c0:	scas   al,BYTE PTR es:[edi]
  4074c1:	dec    esp
  4074c2:	push   edi
  4074c3:	hlt    
  4074c4:	inc    ebp
  4074c5:	mov    dx,0x9ce9
  4074c9:	pusha  
  4074ca:	std    
  4074cb:	mov    ah,0x1
  4074cd:	push   ebp
  4074ce:	push   ss
  4074cf:	and    dl,bl
  4074d1:	sti    
  4074d2:	push   cs
  4074d3:	adc    esi,ecx
  4074d5:	mov    bl,0xf6
  4074d7:	sbb    BYTE PTR [esi],bh
  4074d9:	mov    ds:0xbabbe9dd,eax
  4074de:	jbe    0x407543
  4074e0:	gs inc esp
  4074e2:	mov    DWORD PTR [edi],esi
  4074e4:	mov    es,WORD PTR [esi+0x20]
  4074e7:	mov    ?,WORD PTR [esi]
  4074e9:	pop    es
  4074ea:	ss jl  0x40752d
  4074ed:	adc    bl,cl
  4074ef:	dec    eax
  4074f0:	inc    edi
  4074f1:	aam    0x67
  4074f3:	mov    eax,0x4b456ac1
  4074f8:	and    ch,BYTE PTR [ecx+eax*1-0x7e]
  4074fc:	stos   BYTE PTR es:[edi],al
  4074fd:	sahf   
  4074fe:	adc    DWORD PTR [esi+0xe],esp
  407501:	sbb    esi,DWORD PTR [edi]
  407503:	mov    esp,0xea76c828
  407508:	cli    
  407509:	fadd   DWORD PTR [ebx-0x6c]
  40750c:	jmp    0x54d:0x9ceb73a6
  407513:	xchg   DWORD PTR [eax],eax
  407515:	test   BYTE PTR [ebx-0x509ab747],al
  40751b:	jmp    0x3cf5:0x692a2313
  407522:	mov    ah,0xa0
  407524:	jae    0x407511
  407526:	inc    edx
  407527:	xchg   BYTE PTR ds:0xb8d420c7,bh
  40752d:	mov    edi,eax
  40752f:	xor    al,0xf0
  407531:	mov    ebx,0x7e8d34de
  407536:	xor    dh,BYTE PTR [esi+0x66]
  407539:	inc    edx
  40753a:	fstp   DWORD PTR [esi+0x2e]
  40753d:	sbb    DWORD PTR [eax+0x27381bbe],ecx
  407543:	fisub  WORD PTR [ebp+0x1ba197d4]
  407549:	mov    ch,0xd5
  40754b:	aad    0xf7
  40754d:	cld    
  40754e:	sbb    dh,BYTE PTR [esi+0x1b]
  407551:	sub    ebx,DWORD PTR [esi+edx*2+0x2c]
  407555:	fwait
  407556:	cmp    bh,ch
  407558:	popa   
  407559:	out    0x29,eax
  40755b:	test   eax,ecx
  40755d:	into   
  40755e:	div    edx
  407560:	test   DWORD PTR [ecx+0x52],esp
  407563:	mov    cl,0x2d
  407565:	mov    gs,edx
  407567:	sub    eax,0x4882b0b5
  40756c:	or     ebx,edi
  40756e:	xor    BYTE PTR [ecx],bl
  407570:	or     al,0xb3
  407572:	dec    esi
  407573:	out    0xa4,eax
  407575:	pop    edi
  407576:	add    ebx,esp
  407578:	aaa    
  407579:	jmp    0x407531
  40757b:	lds    ecx,FWORD PTR [eax+0x73]
  40757e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40757f:	mov    dl,0x9
  407581:	in     al,dx
  407582:	in     al,0xc8
  407584:	jmp    DWORD PTR [edx+0xa]
  407587:	sub    DWORD PTR ds:0xa7e16621,ebp
  40758d:	js     0x40759f
  40758f:	getsec 
  407591:	add    edx,eax
  407593:	repnz xor DWORD PTR [esi],edi
  407596:	(bad)  
  407598:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407599:	fstp   st(6)
  40759b:	sub    BYTE PTR [esp+ebp*2+0x453b0f8b],bh
  4075a2:	inc    ebp
  4075a3:	sbb    bl,al
  4075a5:	les    edi,FWORD PTR [eax]
  4075a7:	push   eax
  4075a8:	es aas 
  4075aa:	(bad)  
  4075ac:	mov    dh,0x8c
  4075ae:	out    dx,al
  4075af:	push   cs
  4075b0:	mov    cs,WORD PTR [esi+esi*4-0x5d]
  4075b4:	xor    eax,0xff849a23
  4075b9:	inc    edi
  4075ba:	call   0x9cf0:0xa8af5a79
  4075c1:	jne    0x4075a6
  4075c3:	sbb    ebp,DWORD PTR [ebp+0x5e100b3]
  4075c9:	std    
  4075ca:	jae    0x4075e0
  4075cc:	ins    BYTE PTR es:[edi],dx
  4075cd:	pushf  
  4075ce:	mov    ds:0x4041f63e,eax
  4075d3:	fs aam 0xf
  4075d6:	mov    bh,0xbb
  4075d8:	adc    ch,BYTE PTR [ecx]
  4075da:	xchg   ebp,eax
  4075db:	adc    al,0xc2
  4075dd:	jecxz  0x4075d7
  4075df:	(bad)  [ecx]
  4075e1:	mov    bl,0x21
  4075e3:	inc    esi
  4075e4:	add    dl,BYTE PTR [ebp+0x3]
  4075e7:	out    0x56,eax
  4075e9:	dec    edx
  4075ea:	sar    bl,cl
  4075ec:	jle    0x40761f
  4075ee:	xchg   esp,eax
  4075ef:	add    DWORD PTR [esi-0x6e],ebp
  4075f2:	xor    eax,0xbe8d5e6b
  4075f7:	mov    ecx,0xc06a73f5
  4075fc:	inc    eax
  4075fd:	xor    al,0x83
  4075ff:	pop    ss
  407600:	sbb    al,0x3b
  407602:	mov    esp,0xcbff9184
  407607:	(bad)  
  407608:	fdiv   QWORD PTR [esp+eax*4-0x5]
  40760c:	push   ecx
  40760d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40760e:	jns    0x4075c2
  407610:	int3   
  407611:	cmp    eax,DWORD PTR [ecx+esi*4]
  407614:	inc    ebx
  407615:	mov    ds:0x790b31c4,eax
  40761a:	repnz adc BYTE PTR [ebx],al
  40761d:	mov    ebx,0xf3d0a8be
  407622:	clc    
  407623:	dec    esp
  407624:	cmp    bl,dl
  407626:	scas   eax,DWORD PTR es:[edi]
  407627:	ret    
  407628:	test   BYTE PTR [edx+0x48],bh
  40762b:	fidiv  DWORD PTR [ebx-0x57ece172]
  407631:	(bad)  
  407632:	popf   
  407633:	out    dx,eax
  407634:	inc    edx
  407635:	in     eax,dx
  407636:	leave  
  407637:	mov    ecx,esi
  407639:	in     al,0xd1
  40763b:	xor    edx,DWORD PTR [ebp+esi*8+0x4e3a6829]
  407642:	ret    
  407643:	lock cmp eax,DWORD PTR [edi+0x18f502e1]
  40764a:	nop
  40764b:	cmp    BYTE PTR [ecx],cl
  40764d:	not    cl
  40764f:	dec    edi
  407650:	pop    ebx
  407651:	mov    ch,0x47
  407653:	xchg   edx,eax
  407654:	push   es
  407655:	in     eax,0x95
  407657:	lds    edi,FWORD PTR [eax]
  407659:	xor    eax,DWORD PTR [edi+esi*4]
  40765c:	cdq    
  40765d:	pop    esp
  40765e:	jno    0x4076a6
  407660:	adc    eax,0x6e80fded
  407665:	cmp    BYTE PTR [si],0xae
  407669:	rol    BYTE PTR [ecx],cl
  40766b:	cmp    eax,0xa5ce9d31
  407670:	adc    BYTE PTR [ebx+eiz*1+0x63],al
  407674:	xchg   BYTE PTR [edi+0x4aa8cc],bh
  40767a:	mov    ch,0xac
  40767c:	push   edx
  40767d:	dec    eax
  40767e:	test   eax,0xc44edc07
  407683:	jg     0x4076cd
  407685:	mov    ebx,0xe8340814
  40768a:	arpl   bx,dx
  40768c:	sahf   
  40768d:	ret    0x8707
  407690:	fs xchg ebp,eax
  407692:	adc    BYTE PTR [eax+0x2a],al
  407695:	fidiv  WORD PTR [ecx+0x62377523]
  40769b:	inc    al
  40769d:	fisttp DWORD PTR [esi-0x72]
  4076a0:	pop    ebp
  4076a1:	xor    eax,0x5b543614
  4076a6:	or     eax,0xb5c4f27
  4076ab:	call   0xaa92:0xfd94d4fd
  4076b2:	es cmc 
  4076b4:	arpl   WORD PTR [edx-0x2667b010],bp
  4076ba:	pop    ebp
  4076bb:	call   0x2cd0a768
  4076c0:	sahf   
  4076c1:	daa    
  4076c2:	jmp    0x46e0cfca
  4076c7:	lods   al,BYTE PTR ds:[esi]
  4076c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076c9:	inc    ebp
  4076ca:	(bad)  
  4076cb:	adc    bh,BYTE PTR [ecx+edx*2-0x1f3d5eb0]
  4076d2:	sbb    al,ch
  4076d4:	repz scas eax,DWORD PTR es:[edi]
  4076d6:	out    dx,eax
  4076d7:	dec    ecx
  4076d8:	or     bh,0xec
  4076db:	sbb    al,0x72
  4076dd:	fstp   TBYTE PTR [eax]
  4076df:	pop    ebx
  4076e0:	data16 or al,0xac
  4076e3:	jae    0x407738
  4076e5:	stos   BYTE PTR es:[edi],al
  4076e6:	cli    
  4076e7:	dec    ebx
  4076e8:	loop   0x407678
  4076ea:	cmp    BYTE PTR [eax+ebx*1-0xeec97f1],0x9f
  4076f2:	sbb    esi,edi
  4076f4:	nop
  4076f5:	add    DWORD PTR [edx-0x50],0x27c2b654
  4076fc:	adc    eax,0xa8930f0a
  407701:	shr    BYTE PTR [ecx],0x9a
  407704:	es dec edx
  407706:	imul   ecx,DWORD PTR [edx+0x335c6781],0xd5f14934
  407710:	aam    0x3b
  407712:	xchg   esi,eax
  407713:	out    dx,al
  407714:	(bad)  
  407715:	jp     0x40777b
  407717:	(bad)  
  407718:	mov    bh,0x85
  40771a:	xchg   DWORD PTR [esi],ecx
  40771c:	fist   WORD PTR [ecx+esi*8+0x72]
  407720:	pop    ebp
  407721:	icebp  
  407722:	arpl   WORD PTR [edx],dx
  407724:	inc    eax
  407725:	inc    edx
  407726:	pop    esp
  407727:	push   0x358b6dba
  40772c:	mov    es,WORD PTR [ebp-0x540918df]
  407732:	fidivr WORD PTR [edi+eiz*4+0x54]
  407736:	mov    cl,0xa6
  407738:	addr16 xchg esi,eax
  40773a:	jle    0x407774
  40773c:	inc    esp
  40773d:	mul    BYTE PTR [edi]
  40773f:	xor    cl,BYTE PTR [esi+0x55]
  407742:	test   al,0x81
  407744:	enter  0x8b09,0xc7
  407748:	test   eax,0x79c1a786
  40774d:	jne    0x407769
  40774f:	inc    eax
  407750:	test   DWORD PTR [ecx+0x9a21fd7],esp
  407756:	sub    eax,0xa0afc9a
  40775b:	mov    bh,0xba
  40775d:	pop    ds
  40775e:	xchg   ebp,ecx
  407760:	pop    esp
  407761:	pop    edx
  407762:	xlat   BYTE PTR ds:[ebx]
  407763:	jl     0x407738
  407765:	mov    esi,0xb54f9019
  40776a:	xor    eax,0xb6eb65bb
  40776f:	xor    al,0x38
  407771:	xchg   ebx,eax
  407772:	sbb    eax,0xef15257f
  407777:	js     0x407780
  407779:	jecxz  0x4077bc
  40777b:	jnp    0x407794
  40777d:	push   ds
  40777e:	jno    0x407709
  407780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407781:	js     0x407739
  407783:	push   esi
  407784:	push   ebp
  407785:	fidiv  WORD PTR [edi-0x5247c91e]
  40778b:	push   esp
  40778c:	jge    0x407751
  40778e:	iret   
  40778f:	push   ss
  407790:	ret    
  407791:	in     al,0x44
  407793:	mov    edi,0x7b6112d0
  407798:	not    DWORD PTR [esi]
  40779a:	imul   ecx,DWORD PTR [edi-0x7791e347],0x44
  4077a1:	pop    esp
  4077a2:	in     eax,dx
  4077a3:	jae    0x4077ca
  4077a5:	out    dx,eax
  4077a6:	mov    ds:0xa9035e6c,eax
  4077ab:	pop    ds
  4077ac:	jb     0x40780a
  4077ae:	in     eax,0x98
  4077b0:	aam    0xf7
  4077b2:	adc    DWORD PTR [edx+0x64],edx
  4077b5:	or     eax,0xcf2cd41d
  4077ba:	xor    al,0xa4
  4077bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077bd:	(bad)  
  4077be:	out    0x76,al
  4077c0:	and    eax,0x3fa65966
  4077c5:	pop    eax
  4077c6:	and    eax,0x69a6b21f
  4077cb:	shr    DWORD PTR [ebp+0x2f],cl
  4077ce:	in     al,dx
  4077cf:	or     DWORD PTR [edx],esi
  4077d1:	inc    esp
  4077d2:	ds and eax,esi
  4077d5:	mov    dh,dh
  4077d7:	push   edi
  4077d8:	(bad)  
  4077d9:	xlat   BYTE PTR ds:[ebx]
  4077da:	cmc    
  4077db:	mov    eax,ds:0xa8f1d023
  4077e0:	enter  0x7e2d,0x4
  4077e4:	popf   
  4077e5:	inc    esi
  4077e6:	fcom   DWORD PTR [esi+0x5bd6a9f5]
  4077ec:	fcmove st,st(4)
  4077ee:	xchg   edx,eax
  4077ef:	jnp    0x4077ac
  4077f1:	fstp   TBYTE PTR ds:0x3e24838d
  4077f7:	jns    0x4077a2
  4077f9:	jmp    0xe5fa:0x9eab579d
  407800:	sbb    eax,0x126f025f
  407805:	xor    dh,BYTE PTR [ebx-0x1a1d87b]
  40780b:	in     al,dx
  40780c:	test   al,0xa1
  40780e:	add    BYTE PTR [ecx],bl
  407810:	sbb    edx,edi
  407812:	sahf   
  407813:	add    eax,0x2396114
  407818:	loopne 0x4077e8
  40781a:	jns    0x407852
  40781c:	pop    esp
  40781d:	test   esi,edi
  40781f:	and    eax,0xe3094f8b
  407824:	leave  
  407825:	jge    0x40786a
  407827:	nop
  407828:	fst    QWORD PTR ds:0x707ce7bb
  40782e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40782f:	ret    0x6db1
  407832:	or     al,0xd7
  407834:	outs   dx,BYTE PTR ds:[esi]
  407835:	mov    ebp,0xb77cbb35
  40783a:	pop    ss
  40783b:	lods   al,BYTE PTR ds:[esi]
  40783c:	pop    ecx
  40783d:	sub    ebx,DWORD PTR [edx-0x49]
  407840:	push   0xbd8fb325
  407845:	retf   
  407846:	pop    ebp
  407847:	(bad)  
  407848:	in     eax,dx
  407849:	(bad)  
  40784a:	ss ss sar ecx,cl
  40784e:	test   eax,0x1cfd8015
  407853:	jp     0x4078c1
  407855:	jl     0x4078ae
  407857:	mov    al,0x29
  407859:	xor    bl,bl
  40785b:	div    bl
  40785d:	push   eax
  40785e:	xor    BYTE PTR [edx-0x482d1ca7],0x30
  407865:	push   es
  407866:	test   eax,0xfe611fe3
  40786b:	inc    esp
  40786c:	das    
  40786d:	mov    WORD PTR [edx+edx*1],?
  407870:	icebp  
  407871:	jae    0x4078bc
  407873:	sti    
  407874:	gs inc esp
  407876:	test   eax,0x2a32b71c
  40787b:	adc    eax,0x3b5b3593
  407880:	xchg   BYTE PTR [ecx+ebx*8+0x75],al
  407884:	popf   
  407885:	mov    DWORD PTR [edx-0x5c8916da],eax
  40788b:	js     0x4078e0
  40788d:	xor    eax,0x97d563ac
  407892:	sbb    eax,0x9551d238
  407897:	ss jmp 0x4078c2
  40789a:	in     al,0xe6
  40789c:	fldl2t 
  40789e:	test   BYTE PTR [esi],dh
  4078a0:	repnz xchg ebp,ebx
  4078a3:	xor    al,0x63
  4078a5:	jbe    0x407845
  4078a7:	pop    eax
  4078a8:	mov    al,ds:0x69c9a78e
  4078ad:	je     0x407872
  4078af:	sbb    edi,esp
  4078b1:	mov    ch,0x9f
  4078b3:	cmp    eax,edi
  4078b5:	ins    DWORD PTR es:[edi],dx
  4078b6:	clc    
  4078b7:	push   ecx
  4078b8:	jp     0x407935
  4078ba:	xor    DWORD PTR [edi],ebp
  4078bc:	mov    ebp,edx
  4078be:	mov    ds:0x9b6ce459,al
  4078c3:	or     ah,BYTE PTR [edx+0x46]
  4078c6:	jno    0x407870
  4078c8:	jmp    0x3529:0x79917e27
  4078cf:	or     DWORD PTR [esi-0x2],esi
  4078d2:	jp     0x407946
  4078d4:	int3   
  4078d5:	and    DWORD PTR [ebx+0x25f6a728],0x22c0783c
  4078df:	ror    BYTE PTR [edi],0x28
  4078e2:	add    eax,0xdcf9d8d1
  4078e7:	mov    edi,DWORD PTR [esp+eax*1]
  4078ea:	ror    BYTE PTR [edx-0x2ef7a749],1
  4078f0:	gs sbb al,ch
  4078f3:	mov    esp,0xfdadf725
  4078f8:	stc    
  4078f9:	and    eax,0x6daa0c77
  4078fe:	cmp    al,0xe3
  407900:	loopne 0x4078ee
  407902:	mov    al,0x94
  407904:	jbe    0x4078aa
  407906:	inc    esp
  407907:	jp     0x40796c
  407909:	sahf   
  40790a:	cmp    al,0x65
  40790c:	fdiv   DWORD PTR [esi]
  40790e:	out    0x44,al
  407910:	in     eax,0x8b
  407912:	xor    al,bl
  407914:	inc    eax
  407915:	es (bad) 
  407917:	les    ebx,FWORD PTR [edx]
  407919:	in     eax,dx
  40791a:	sti    
  40791b:	(bad)  
  40791c:	push   DWORD PTR [ebp-0x3]
  40791f:	dec    ebp
  407920:	popa   
  407921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407922:	cdq    
  407923:	imul   eax,DWORD PTR [ecx-0x55],0xffffff8b
  407927:	scas   al,BYTE PTR es:[edi]
  407928:	adc    ah,BYTE PTR [ecx+0x5608874b]
  40792e:	iret   
  40792f:	addr16 call 0x4b41:0x4f2d75d8
  407937:	xchg   BYTE PTR [ebx+0x19],ch
  40793a:	pop    esp
  40793b:	xor    ch,dh
  40793d:	cmp    eax,DWORD PTR ss:[esi+eax*8]
  407941:	mov    al,0xe3
  407943:	cs jl  0x4079b4
  407946:	lods   al,BYTE PTR ds:[esi]
  407947:	std    
  407948:	inc    esi
  407949:	push   ebp
  40794a:	cli    
  40794b:	sbb    DWORD PTR [ebx+0x7e],ecx
  40794e:	in     eax,0xfb
  407950:	inc    edi
  407951:	fistp  QWORD PTR [edi]
  407953:	and    al,0x60
  407955:	inc    edx
  407956:	fadd   QWORD PTR [ebx]
  407958:	mov    ebp,0xe1d88482
  40795e:	push   ds
  40795f:	loope  0x4079c2
  407961:	mov    dl,0x8
  407963:	in     al,dx
  407964:	mov    DWORD PTR [edx+0x3d16075c],0xdea357ba
  40796e:	popa   
  40796f:	add    BYTE PTR [edi-0x56],al
  407972:	(bad)  
  407973:	hlt    
  407974:	fisub  WORD PTR [ebx+0x4df48c05]
  40797a:	dec    esi
  40797b:	mov    esp,0xf867891d
  407980:	cmc    
  407981:	mov    cl,0x76
  407983:	or     al,0x96
  407985:	in     al,0xa5
  407987:	ins    BYTE PTR es:[edi],dx
  407988:	addr16 mov esp,0x1a0beaa5
  40798e:	mov    esi,0x20301ac
  407993:	popf   
  407994:	sbb    bh,bh
  407996:	or     DWORD PTR [esi-0x41],edx
  407999:	in     al,dx
  40799a:	pop    edi
  40799b:	cmp    bl,0x75
  40799e:	sahf   
  40799f:	test   al,0xef
  4079a1:	loopne 0x407a15
  4079a3:	scas   al,BYTE PTR es:[edi]
  4079a4:	in     al,dx
  4079a5:	add    bl,BYTE PTR [ecx-0x3b970e21]
  4079ab:	xchg   ebp,eax
  4079ac:	and    al,0x61
  4079ae:	push   esi
  4079af:	xchg   DWORD PTR [ecx-0x4bbe7999],ecx
  4079b5:	inc    ecx
  4079b6:	stos   BYTE PTR es:[edi],al
  4079b7:	(bad)  
  4079b8:	xor    BYTE PTR [edi+0x9],ch
  4079bb:	sub    eax,0xd3781c2e
  4079c0:	fsubp  st(7),st
  4079c2:	inc    edx
  4079c3:	jns    0x407a3c
  4079c5:	fwait
  4079c6:	mov    DWORD PTR [ecx],0xb9573741
  4079cc:	and    eax,0x82ebb4ae
  4079d1:	dec    esi
  4079d2:	repz xor al,0xea
  4079d5:	dec    esp
  4079d6:	mov    al,ds:0xaf714f89
  4079db:	fcom   DWORD PTR [edi]
  4079dd:	cmp    BYTE PTR ds:0xfb9a12b4,dh
  4079e3:	(bad)
  4079e6:	pop    ss
  4079e7:	bound  esp,QWORD PTR [edi+0x2241bdf1]
  4079ed:	pop    esp
  4079ee:	out    dx,eax
  4079ef:	hlt    
  4079f0:	push   edx
  4079f1:	push   ebx
  4079f2:	out    0xc6,eax
  4079f4:	and    edx,ebx
  4079f6:	popa   
  4079f7:	pop    eax
  4079f8:	mov    eax,DWORD PTR [ebp-0xc]
  4079fb:	mov    ecx,DWORD PTR [ebp-0xc]
  4079fe:	sub    eax,ecx
  407a00:	mov    DWORD PTR [ebp-0xc],eax
  407a03:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  407a0a:	mov    eax,DWORD PTR [ebp-0x1c]
  407a0d:	mov    ecx,DWORD PTR [ebp-0x1c]
  407a10:	sub    eax,ecx
  407a12:	mov    DWORD PTR [ebp-0x1c],eax
  407a15:	or     DWORD PTR [ebp-0x1c],0xf89c85d9
  407a1c:	mov    eax,DWORD PTR [ebp-0x20]
  407a1f:	mov    ecx,DWORD PTR [ebp-0x20]
  407a22:	sub    eax,ecx
  407a24:	mov    DWORD PTR [ebp-0x20],eax
  407a27:	mov    eax,DWORD PTR [ebp-0x2c]
  407a2a:	mov    ecx,DWORD PTR [ebp-0x20]
  407a2d:	mov    esi,0x7510899
  407a32:	xor    eax,esi
  407a34:	mov    edi,0x3272e0
  407a39:	add    eax,edi
  407a3b:	or     eax,ecx
  407a3d:	mov    DWORD PTR [ebp-0x20],eax
  407a40:	mov    eax,DWORD PTR [ebp-0x4]
  407a43:	mov    ecx,DWORD PTR [ebp-0x4]
  407a46:	jmp    0x409df0
  407a4b:	clc    
  407a4c:	mov    dh,0xeb
  407a4e:	cmp    DWORD PTR [ebx+0x707b9c77],0x3837e350
  407a58:	push   cs
  407a59:	sahf   
  407a5a:	ins    BYTE PTR es:[edi],dx
  407a5b:	mov    ds:0xe57a7a3c,eax
  407a60:	pop    edi
  407a61:	jp     0x407add
  407a63:	dec    edx
  407a64:	add    al,0x9d
  407a66:	ins    DWORD PTR es:[edi],dx
  407a67:	and    al,0xdc
  407a69:	outs   dx,DWORD PTR ds:[esi]
  407a6a:	cmp    al,0x54
  407a6c:	or     al,0x52
  407a6e:	out    dx,eax
  407a6f:	out    0x1a,al
  407a71:	mov    ah,0x98
  407a73:	and    BYTE PTR [edi-0x7d],bl
  407a76:	int    0x59
  407a78:	xchg   DWORD PTR [esi-0x9],ecx
  407a7b:	stc    
  407a7c:	into   
  407a7d:	mov    esp,DWORD PTR [ebp+ebx*1-0x11de8074]
  407a84:	clc    
  407a85:	pop    ebx
  407a86:	and    eax,0xefacc1a2
  407a8b:	leave  
  407a8c:	sub    BYTE PTR [ebx+0x1f75866d],al
  407a92:	pushf  
  407a93:	arpl   WORD PTR [ecx+0x6bc0ad6b],si
  407a99:	xor    ah,BYTE PTR [ebx+0x3e935228]
  407a9f:	jnp    0x407ac5
  407aa1:	lods   al,BYTE PTR ds:[esi]
  407aa2:	sbb    al,0x72
  407aa4:	sar    BYTE PTR ds:0x9110c13c,1
  407aaa:	dec    eax
  407aab:	fst    st(5)
  407aad:	lods   eax,DWORD PTR ds:[esi]
  407aae:	inc    ebx
  407aaf:	sti    
  407ab0:	dec    esi
  407ab1:	shr    BYTE PTR [ecx-0x277818bb],0x73
  407ab8:	push   ss
  407ab9:	mov    ebp,0xc211db1f
  407abe:	jge    0x407a82
  407ac0:	push   es
  407ac1:	pop    edi
  407ac2:	or     eax,0x41db160
  407ac7:	sub    al,0x7
  407ac9:	push   esp
  407aca:	inc    ebp
  407acb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407acc:	jecxz  0x407b11
  407ace:	pop    edi
  407acf:	inc    edx
  407ad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ad1:	jno    0x407aba
  407ad3:	icebp  
  407ad4:	cdq    
  407ad5:	(bad)  
  407ad6:	xor    al,0x1b
  407ad8:	cmc    
  407ad9:	add    al,0xc3
  407adb:	xor    eax,0xf474cdf9
  407ae0:	mov    edi,0x802bace
  407ae5:	fisub  DWORD PTR [ecx+0x56198df3]
  407aeb:	dec    esp
  407aec:	ss test al,0x56
  407aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407af0:	add    ch,BYTE PTR [ebx+0x44853408]
  407af6:	and    DWORD PTR [ecx],ecx
  407af8:	js     0x407ad7
  407afa:	outs   dx,BYTE PTR ds:[esi]
  407afb:	mov    edx,0x3541016b
  407b00:	pop    edx
  407b01:	les    esi,FWORD PTR [esi-0x6f7a1e46]
  407b07:	bound  esi,QWORD PTR [esi+0x6f]
  407b0a:	jae    0x407b15
  407b0c:	arpl   WORD PTR ds:0x22bd76d1,bp
  407b12:	cmp    al,0x56
  407b14:	mov    DWORD PTR [edx-0x5114544a],eax
  407b1a:	gs loopne 0x407b50
  407b1d:	and    ecx,eax
  407b1f:	jge    0x407b72
  407b21:	jo     0x407b29
  407b23:	pop    esi
  407b24:	aas    
  407b25:	cmp    BYTE PTR [edx+0x780ccdf2],dl
  407b2b:	adc    DWORD PTR [eax],edi
  407b2d:	xor    ch,al
  407b2f:	push   edx
  407b30:	xlat   BYTE PTR ds:[ebx]
  407b31:	scas   al,BYTE PTR es:[edi]
  407b32:	push   eax
  407b33:	dec    eax
  407b34:	mov    ebx,0x1a14d08e
  407b39:	enter  0x247f,0x61
  407b3d:	loop   0x407b97
  407b3f:	sbb    al,0x59
  407b41:	jb     0x407b17
  407b43:	and    esi,DWORD PTR [ebp-0x7f52e5f1]
  407b49:	sub    al,ch
  407b4b:	test   al,0xa3
  407b4d:	pop    es
  407b4e:	out    0xd5,al
  407b50:	imul   ebx,DWORD PTR [esp+esi*2+0x36c0ddbc],0xffffffcb
  407b58:	inc    eax
  407b59:	cmp    al,0x5b
  407b5b:	pop    ebx
  407b5c:	sub    al,0x51
  407b5e:	call   0xb0631670
  407b63:	pop    es
  407b64:	inc    ecx
  407b65:	mov    WORD PTR [ecx],cs
  407b67:	stos   DWORD PTR es:[edi],eax
  407b68:	not    DWORD PTR [ebp-0x2c6b3bb9]
  407b6e:	push   ebx
  407b6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b70:	loop   0x407bba
  407b72:	or     edx,0x49
  407b75:	mov    DWORD PTR [esi+0xaf49054],edx
  407b7b:	add    DWORD PTR [ecx+0x57],esp
  407b7e:	mov    ah,BYTE PTR [edi]
  407b80:	pop    ebx
  407b81:	inc    edi
  407b82:	jle    0x407bf1
  407b84:	pop    edi
  407b85:	xchg   edx,eax
  407b86:	and    esp,DWORD PTR [eax+0x3c]
  407b89:	aas    
  407b8a:	mov    gs,WORD PTR [ecx+0x1c]
  407b8d:	loope  0x407c08
  407b8f:	or     al,0xfc
  407b91:	ret    
  407b92:	repz jge 0x407b2d
  407b95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b96:	lock mov esi,0xc7c075f3
  407b9c:	out    0xf7,al
  407b9e:	je     0x407b68
  407ba0:	inc    esi
  407ba1:	dec    ebx
  407ba2:	cwde   
  407ba3:	ret    0x8def
  407ba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ba7:	mov    ebx,0x73252bd5
  407bac:	jmp    0xf4f9:0x9576f6c0
  407bb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bb4:	pusha  
  407bb5:	sar    DWORD PTR [esi+0x4e],0x32
  407bb9:	mov    WORD PTR [edi+0x6885d347],fs
  407bbf:	mov    dh,BYTE PTR [edi-0x2a55675d]
  407bc5:	mov    eax,ds:0x45308da0
  407bca:	adc    eax,0x72ae5313
  407bcf:	repnz pusha 
  407bd1:	inc    esp
  407bd2:	sub    edx,ebp
  407bd4:	js     0x407b9c
  407bd6:	dec    ebp
  407bd7:	fdivr  DWORD PTR [ebx]
  407bd9:	or     ah,BYTE PTR [ebp+0x23]
  407bdc:	add    BYTE PTR [edx+0x7a4970e4],al
  407be2:	stos   BYTE PTR es:[edi],al
  407be3:	stos   DWORD PTR es:[edi],eax
  407be4:	add    dl,BYTE PTR [edi+esi*8-0x7c3f2685]
  407beb:	push   0xffffffe1
  407bed:	ret    0x816e
  407bf0:	pop    ds
  407bf1:	lea    eax,[ebx]
  407bf3:	mov    ch,0xd9
  407bf5:	test   DWORD PTR [ebx-0x3ac8d50b],eax
  407bfb:	scas   eax,DWORD PTR es:[edi]
  407bfc:	(bad)  
  407bfd:	jge    0x407be3
  407bff:	push   edx
  407c00:	inc    edx
  407c01:	jae    0x407bc8
  407c03:	adc    eax,0x81232640
  407c08:	xchg   bl,dh
  407c0a:	pop    eax
  407c0b:	and    DWORD PTR [ebp+ebx*4+0x55cf67b0],eax
  407c12:	xchg   esp,eax
  407c13:	xchg   esp,eax
  407c14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c15:	sti    
  407c16:	cwde   
  407c17:	pop    ecx
  407c18:	mov    bl,0x53
  407c1a:	cli    
  407c1b:	ficom  DWORD PTR [eax]
  407c1d:	pop    esp
  407c1e:	and    cl,BYTE PTR [ebx+0x10d89cc8]
  407c24:	arpl   WORD PTR [ebp+0x10],ax
  407c27:	push   eax
  407c28:	cdq    
  407c29:	or     al,0xd6
  407c2b:	aas    
  407c2c:	call   0x7f16:0x3e8b8e8f
  407c33:	and    al,0x15
  407c35:	mov    BYTE PTR [ebx],ch
  407c37:	imul   ecx,DWORD PTR [edi+esi*8+0x22],0xffffffaf
  407c3c:	mov    ecx,0xe2afd7f0
  407c41:	fcom   QWORD PTR [edx-0x8fc51e1]
  407c47:	push   cs
  407c48:	mov    cl,0x67
  407c4a:	mov    bh,0x50
  407c4c:	stos   BYTE PTR es:[edi],al
  407c4d:	push   ecx
  407c4e:	sbb    BYTE PTR [ecx],0x3c
  407c51:	(bad)  
  407c52:	iret   
  407c53:	jle    0x407c91
  407c55:	mov    al,0xb6
  407c57:	xor    al,0xe0
  407c59:	popf   
  407c5a:	into   
  407c5b:	scas   al,BYTE PTR es:[edi]
  407c5c:	repnz push ebx
  407c5e:	outs   dx,DWORD PTR ds:[esi]
  407c5f:	inc    edi
  407c60:	cmp    eax,0xf1d2901d
  407c65:	cmp    eax,0x446f7e33
  407c6a:	sar    BYTE PTR [edi+esi*8-0x37],0x8a
  407c6f:	sub    bh,BYTE PTR [edx+eiz*2-0x63]
  407c73:	sbb    al,0x6f
  407c75:	push   edx
  407c76:	mov    esp,0x29a12ff9
  407c7b:	ret    0x4e88
  407c7e:	(bad)  
  407c7f:	sahf   
  407c80:	aaa    
  407c81:	pop    ebp
  407c82:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  407c84:	pop    edx
  407c85:	loop   0x407c59
  407c87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c88:	int    0x69
  407c8a:	dec    BYTE PTR [edx+0x40]
  407c8d:	add    DWORD PTR [edx],esi
  407c8f:	test   al,0x57
  407c91:	arpl   WORD PTR [edx+0x11a2a716],sp
  407c97:	cmp    al,0x90
  407c99:	xor    al,BYTE PTR [eax-0x45ca873b]
  407c9f:	sbb    BYTE PTR [ecx+esi*1],al
  407ca2:	or     ebx,DWORD PTR ds:0x5a7b6620
  407ca8:	nop
  407ca9:	jmp    0xbdfebff7
  407cae:	mov    eax,fs
  407cb0:	repz shr BYTE PTR [edx+0x69],0x5d
  407cb5:	(bad)  
  407cb6:	call   0xd199d47d
  407cbb:	push   es
  407cbc:	and    al,BYTE PTR [eax+0x28]
  407cbf:	mov    BYTE PTR gs:[ebp-0x3924d391],al
  407cc6:	jle    0x407c4c
  407cc8:	outs   dx,BYTE PTR ds:[esi]
  407cc9:	call   0xae8381d1
  407cce:	(bad)  
  407ccf:	dec    ebx
  407cd0:	jne    0x407d32
  407cd2:	mov    ah,0x2e
  407cd4:	push   es
  407cd5:	xor    al,BYTE PTR [ebp-0x21]
  407cd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cd9:	mov    ds:0x75910f39,eax
  407cde:	retf   
  407cdf:	or     al,0x6d
  407ce1:	add    edx,edi
  407ce3:	xor    ebx,0xffffffe3
  407ce6:	je     0x407d65
  407ce8:	xor    al,0x78
  407cea:	icebp  
  407ceb:	in     eax,dx
  407cec:	push   ss
  407ced:	(bad)  
  407cee:	js     0x407cf9
  407cf0:	(bad)  
  407cf1:	fcomp  QWORD PTR [ebp+0x57]
  407cf4:	mov    eax,0xb96c7a41
  407cf9:	push   ebx
  407cfa:	mov    ebx,0xd5dc482
  407cff:	inc    ebx
  407d00:	imul   eax,DWORD PTR [edx+0x38fa59e0],0x6e
  407d07:	pop    ds
  407d08:	rol    DWORD PTR [ebx],cl
  407d0a:	gs sbb al,0xea
  407d0d:	stc    
  407d0e:	mov    BYTE PTR ds:0x1ae1c1b7,0xb7
  407d15:	in     eax,0xab
  407d17:	jae    0x407d95
  407d19:	pop    eax
  407d1a:	xor    al,0x16
  407d1c:	cld    
  407d1d:	leave  
  407d1e:	loopne 0x407cdd
  407d20:	mov    al,0x88
  407d22:	ja     0x407d2d
  407d24:	or     edx,DWORD PTR [edx-0x70a7b249]
  407d2a:	pop    edx
  407d2b:	(bad)  
  407d2c:	mov    WORD PTR [eax],ss
  407d2e:	dec    ebx
  407d2f:	push   ecx
  407d30:	imul   edi,DWORD PTR [ebx+0x4ca492fb],0x3e
  407d37:	adc    ah,dl
  407d39:	and    ebx,ebp
  407d3b:	sub    eax,0x38430215
  407d40:	xor    cl,BYTE PTR [edi]
  407d42:	and    BYTE PTR [eax-0x78486b65],al
  407d48:	cs ins DWORD PTR es:[edi],dx
  407d4a:	daa    
  407d4b:	jbe    0x407d1e
  407d4d:	pusha  
  407d4e:	and    esi,DWORD PTR [eax]
  407d50:	jo     0x407d79
  407d52:	cli    
  407d53:	popa   
  407d54:	int    0x49
  407d56:	mov    ds:0x9ef29d5b,al
  407d5b:	in     eax,0x3a
  407d5d:	mov    bh,0x7f
  407d5f:	ja     0x407d85
  407d61:	out    dx,al
  407d62:	add    BYTE PTR [ecx],bl
  407d64:	daa    
  407d65:	dec    ecx
  407d66:	lock (bad) 
  407d68:	lock and BYTE PTR [ebx+edi*1+0x55ddf45],dl
  407d70:	int3   
  407d71:	dec    ebp
  407d72:	out    0x99,al
  407d74:	aad    0x21
  407d76:	stos   DWORD PTR es:[edi],eax
  407d77:	mov    edi,DWORD PTR [eax-0x3]
  407d7a:	iret   
  407d7b:	retf   0xe8f2
  407d7e:	jge    0x407da3
  407d80:	loope  0x407d78
  407d82:	std    
  407d83:	pop    ss
  407d84:	and    ebx,esp
  407d86:	arpl   WORD PTR [ecx],di
  407d88:	xor    cl,BYTE PTR [ecx-0x1f37a6b4]
  407d8e:	fcomp  st(1)
  407d90:	pusha  
  407d91:	hlt    
  407d92:	inc    ebx
  407d93:	call   0xec73:0x96f9f665
  407d9a:	add    eax,0x6d009b1
  407d9f:	dec    edx
  407da0:	scas   eax,DWORD PTR es:[edi]
  407da1:	into   
  407da2:	cld    
  407da3:	ins    DWORD PTR es:[edi],dx
  407da4:	pop    ss
  407da5:	mov    ebx,0xcfb2691e
  407daa:	call   0x9dd8:0xcb8f8075
  407db1:	push   cs
  407db2:	lods   al,BYTE PTR ds:[esi]
  407db3:	fmul   QWORD PTR [esi]
  407db5:	jnp    0x407dfc
  407db7:	xor    al,0xe4
  407db9:	out    0x4a,al
  407dbb:	mov    WORD PTR [esi],ds
  407dbd:	or     cl,BYTE PTR [ebx]
  407dbf:	push   ebx
  407dc0:	adc    edi,DWORD PTR [ebx-0x604509ec]
  407dc6:	jnp    0x407d5b
  407dc8:	jne    0x407dbb
  407dca:	push   cs
  407dcb:	addr16 repnz cmp eax,esi
  407dcf:	pushf  
  407dd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dd1:	sbb    dh,BYTE PTR [eax+eiz*8+0x76]
  407dd5:	pop    edx
  407dd6:	imul   edi,DWORD PTR [ebx+0x3e],0x2b
  407dda:	lods   eax,DWORD PTR ds:[esi]
  407ddb:	mov    al,0x1d
  407ddd:	cmp    BYTE PTR [ecx],bl
  407ddf:	xchg   edi,eax
  407de0:	imul   eax,DWORD PTR [edx],0xffffffde
  407de3:	mov    BYTE PTR [ecx+edi*8-0x100a88d6],cl
  407dea:	sti    
  407deb:	xor    esp,eax
  407ded:	cld    
  407dee:	adc    edx,DWORD PTR [edi]
  407df0:	push   eax
  407df1:	jno    0x407dfc
  407df3:	das    
  407df4:	sub    BYTE PTR [esi-0x1b],bh
  407df7:	fs jl  0x407dc8
  407dfa:	sub    eax,0x9c5f14fa
  407dff:	adc    al,0xab
  407e01:	ins    BYTE PTR es:[edi],dx
  407e02:	add    edx,ecx
  407e04:	mov    gs,WORD PTR [esi+0xd]
  407e07:	in     al,0x42
  407e09:	and    DWORD PTR [ebp+0xa3854e3],0xffffffad
  407e10:	cmp    dl,BYTE PTR [ebp-0x1540e16b]
  407e16:	adc    DWORD PTR [ebp+0x66c2ee72],0x5d
  407e1d:	popa   
  407e1e:	out    dx,eax
  407e1f:	(bad)  
  407e20:	push   esi
  407e21:	loope  0x407dcb
  407e23:	or     eax,0x4697db27
  407e28:	jg     0x407e9f
  407e2a:	out    dx,al
  407e2b:	adc    edx,DWORD PTR [esi-0x43]
  407e2e:	mov    ebx,0xb54d8918
  407e33:	scas   al,BYTE PTR es:[edi]
  407e34:	xchg   DWORD PTR [esi],ebx
  407e36:	mov    cl,0xce
  407e38:	stos   BYTE PTR es:[edi],al
  407e39:	fidiv  WORD PTR [esi]
  407e3b:	repnz pop eax
  407e3d:	sbb    edi,eax
  407e3f:	dec    ebp
  407e40:	enter  0x1f0e,0x9d
  407e44:	cmp    ebx,DWORD PTR [edx+esi*4-0x4f]
  407e48:	jae    0x407e84
  407e4a:	test   BYTE PTR [edi],bh
  407e4c:	push   0x90f80a9a
  407e51:	sbb    BYTE PTR [esi],al
  407e53:	(bad)  
  407e54:	jno    0x407e20
  407e56:	hlt    
  407e57:	ds repnz (bad) 
  407e5a:	call   0xd74c34c8
  407e5f:	push   ss
  407e60:	int3   
  407e61:	dec    edx
  407e62:	and    DWORD PTR ds:0xcd9fce14,edi
  407e68:	sub    al,0xca
  407e6a:	in     eax,dx
  407e6b:	push   cs
  407e6c:	into   
  407e6d:	jno    0x407e1b
  407e6f:	addr16 (bad) 
  407e72:	xchg   ebx,eax
  407e73:	pop    ebx
  407e74:	popf   
  407e75:	add    BYTE PTR [eax-0x16],bl
  407e78:	adc    eax,0xbeb8d1b5
  407e7d:	add    al,0xee
  407e7f:	sahf   
  407e80:	pop    edx
  407e81:	outs   dx,BYTE PTR ds:[esi]
  407e82:	mov    ds:0xcad9b514,al
  407e87:	jae    0x407e0b
  407e89:	pop    edi
  407e8a:	popa   
  407e8b:	jle    0x407ede
  407e8d:	leave  
  407e8e:	retf   
  407e8f:	(bad)  
  407e90:	mov    eax,ds:0xf8248daa
  407e95:	lock (bad) 
  407e97:	ja     0x407e7b
  407e99:	(bad)  
  407e9a:	stc    
  407e9b:	push   ebx
  407e9c:	xchg   esp,eax
  407e9d:	inc    eax
  407e9e:	jle    0x407ea1
  407ea0:	iret   
  407ea1:	out    0xc8,al
  407ea3:	mov    al,0xf
  407ea5:	mov    ecx,0x45797925
  407eaa:	test   al,0xb2
  407eac:	popf   
  407ead:	and    BYTE PTR [edx-0x21128f8f],dl
  407eb3:	adc    eax,ecx
  407eb5:	repz cli 
  407eb7:	xchg   esp,eax
  407eb8:	mov    ds,WORD PTR [ebx]
  407eba:	cmc    
  407ebb:	fmul   DWORD PTR [esi-0x4e]
  407ebe:	and    DWORD PTR [edi+0x5],esp
  407ec1:	test   bh,0xd9
  407ec4:	(bad)  
  407ec5:	cmp    eax,0x1598084a
  407eca:	stos   DWORD PTR es:[edi],eax
  407ecb:	push   ecx
  407ecc:	sub    ah,BYTE PTR [edx+eiz*1]
  407ecf:	push   edx
  407ed0:	jg     0x407e62
  407ed2:	mov    dl,0x66
  407ed4:	fild   DWORD PTR [edi+0x3597e69b]
  407eda:	scas   eax,DWORD PTR es:[edi]
  407edb:	dec    ecx
  407edc:	(bad)  
  407edd:	fdivr  DWORD PTR [edi+0x20290850]
  407ee3:	cwde   
  407ee4:	imul   esp,DWORD PTR [edi-0x6bf4ecac],0x3637230b
  407eee:	popf   
  407eef:	fucomp st(1)
  407ef1:	xchg   edi,eax
  407ef2:	lahf   
  407ef3:	push   esi
  407ef4:	lods   al,BYTE PTR ds:[esi]
  407ef5:	jb     0x407f28
  407ef7:	sti    
  407ef8:	mov    bh,0x0
  407efa:	and    bl,BYTE PTR [edi-0x1a]
  407efd:	jnp    0x407f3b
  407eff:	popa   
  407f00:	ins    BYTE PTR es:[edi],dx
  407f01:	mov    ds:0x5a5fd7b6,eax
  407f06:	cmp    eax,0xca4025cf
  407f0b:	and    eax,0x8dbe9d87
  407f10:	cwde   
  407f11:	and    eax,0x7e0af08f
  407f16:	push   0xffffffac
  407f18:	mov    al,ds:0x4108d06b
  407f1d:	cmp    al,0x74
  407f1f:	data16 sbb ch,BYTE PTR [ecx-0x1684097f]
  407f26:	daa    
  407f27:	sbb    eax,0x1928de5a
  407f2c:	scas   al,BYTE PTR es:[edi]
  407f2d:	fist   WORD PTR [eax]
  407f2f:	pop    ebx
  407f30:	jns    0x407ec2
  407f32:	lahf   
  407f33:	(bad)  
  407f35:	xchg   ah,dh
  407f37:	cld    
  407f38:	std    
  407f39:	mov    ch,0xf7
  407f3b:	pop    esi
  407f3c:	cld    
  407f3d:	fdivr  DWORD PTR [ebx]
  407f3f:	jecxz  0x407f69
  407f41:	jmp    0x407f54
  407f43:	push   edi
  407f44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f45:	jg     0x407f43
  407f47:	or     BYTE PTR [edx+0x4f47f3a2],0xa0
  407f4e:	iret   
  407f4f:	mov    bh,0x9b
  407f51:	mov    ecx,0x57a39ce0
  407f56:	dec    edi
  407f57:	outs   dx,BYTE PTR ds:[esi]
  407f58:	fcmovne st,st(5)
  407f5a:	shr    DWORD PTR [ebx],0x9f
  407f5d:	push   0xf62b0ac8
  407f62:	sbb    bh,dh
  407f64:	pop    edi
  407f65:	ins    BYTE PTR es:[edi],dx
  407f66:	jmp    0x9327db79
  407f6b:	fsubr  QWORD PTR [ecx]
  407f6d:	arpl   ax,sp
  407f6f:	inc    ebp
  407f70:	mov    ebp,ecx
  407f72:	cmp    dh,bl
  407f74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f75:	aad    0x89
  407f77:	scas   al,BYTE PTR es:[edi]
  407f78:	push   si
  407f7a:	mov    esi,0xf5582460
  407f7f:	sbb    dl,ch
  407f81:	mov    dl,0x4b
  407f83:	ret    
  407f84:	inc    bh
  407f86:	push   esp
  407f87:	cmp    eax,0x2ac0427e
  407f8c:	aad    0x3c
  407f8e:	popf   
  407f8f:	xor    BYTE PTR [edi+0x5],dl
  407f92:	xchg   ebp,eax
  407f93:	mov    ds:0xd4e7de66,al
  407f98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f99:	jb     0x408002
  407f9b:	xor    eax,0x7528777e
  407fa0:	cmc    
  407fa1:	enter  0xc3b1,0x73
  407fa5:	fs gs hlt 
  407fa8:	mov    bl,0x58
  407faa:	mov    ecx,0x6e56fef1
  407faf:	mov    BYTE PTR [edx*4-0x403d0573],ch
  407fb6:	dec    esi
  407fb7:	jle    0x407fd4
  407fb9:	push   ebp
  407fba:	cli    
  407fbb:	icebp  
  407fbc:	test   al,0x96
  407fbe:	ret    0x5508
  407fc1:	cli    
  407fc2:	ficom  DWORD PTR [edx-0x80]
  407fc5:	push   eax
  407fc6:	mov    al,ds:0x1d76c625
  407fcb:	jl     0x407f7f
  407fcd:	xor    DWORD PTR [eax],edi
  407fcf:	mov    cl,0x8b
  407fd1:	push   esi
  407fd2:	push   edi
  407fd3:	fiadd  WORD PTR [ebx+0x5bd38989]
  407fd9:	or     al,0x50
  407fdb:	and    DWORD PTR [ecx+0xc],ebp
  407fde:	pop    ecx
  407fdf:	fmul   DWORD PTR [edi+ebp*2-0x6cab33b3]
  407fe6:	pusha  
  407fe7:	push   eax
  407fe8:	xlat   BYTE PTR ds:[ebx]
  407fe9:	sub    ch,BYTE PTR [ebx+0x35]
  407fec:	into   
  407fed:	xlat   BYTE PTR ds:[ebx]
  407fee:	or     bh,BYTE PTR [eax-0x7912da85]
  407ff4:	add    BYTE PTR [ecx-0x3c],ch
  407ff7:	push   bx
  407ff9:	push   esp
  407ffa:	add    BYTE PTR [esp+esi*2+0x2fabe5d2],al
  408001:	sti    
  408002:	(bad)  
  408003:	bound  esi,QWORD PTR ds:0x92382824
  408009:	test   dh,bh
  40800b:	(bad)  
  40800c:	mov    ecx,0xc49662f9
  408011:	lock outs dx,BYTE PTR ds:[esi]
  408013:	dec    edx
  408014:	and    DWORD PTR [ebx],edi
  408016:	jbe    0x408045
  408018:	loope  0x408035
  40801a:	clc    
  40801b:	out    0x5d,eax
  40801d:	std    
  40801e:	fs add eax,0xcf6d47a2
  408024:	in     al,dx
  408025:	cmp    eax,esp
  408027:	mov    ebx,0xfae6dd65
  40802c:	jle    0x407fc3
  40802e:	cld    
  40802f:	dec    esi
  408030:	push   ecx
  408031:	xchg   ebp,eax
  408032:	pop    esi
  408033:	call   0x15ca32a8
  408038:	jmp    0x2349:0x739e8034
  40803f:	jbe    0x408007
  408041:	pop    edi
  408042:	fdiv   QWORD PTR [eax+0xf6e2ee8]
  408048:	cmp    al,0x1a
  40804a:	stc    
  40804b:	mov    dh,0xfd
  40804d:	add    DWORD PTR [edx-0x233525da],edx
  408053:	stc    
  408054:	dec    edx
  408055:	add    dl,0xaa
  408058:	sub    ebp,DWORD PTR [ecx]
  40805a:	aad    0x34
  40805c:	jg     0x40801d
  40805e:	pop    ecx
  40805f:	data16 sub cl,BYTE PTR [eax+ecx*1]
  408063:	out    0xf1,eax
  408065:	stc    
  408066:	mov    ecx,DWORD PTR [esi]
  408068:	pop    es
  408069:	pop    ebx
  40806a:	dec    eax
  40806b:	add    BYTE PTR ds:0xc04090,dl
  408071:	xchg   esi,eax
  408072:	and    ebx,DWORD PTR [ebx]
  408074:	sbb    eax,0xccedccf3
  408079:	sub    DWORD PTR [eax-0x59],ecx
  40807c:	sbb    BYTE PTR [ecx-0x45],al
  40807f:	and    bh,ch
  408081:	push   ds
  408082:	sub    ecx,DWORD PTR [edx+0x15]
  408085:	and    bh,BYTE PTR [edi+0x3d9d8da1]
  40808b:	inc    edi
  40808c:	push   ds
  40808d:	into   
  40808e:	mov    esi,DWORD PTR [edx]
  408090:	xacquire xchg BYTE PTR [ecx+0x12],al
  408094:	in     eax,0x44
  408096:	gs stos DWORD PTR es:[edi],eax
  408098:	push   ds
  408099:	xor    DWORD PTR [esi],edx
  40809b:	shr    BYTE PTR [ebp-0x56],cl
  40809e:	ja     0x408063
  4080a0:	xchg   edi,eax
  4080a1:	(bad)  
  4080a2:	ins    BYTE PTR es:[edi],dx
  4080a3:	jmp    0x7d395730
  4080a8:	and    esi,DWORD PTR [ebx+0x28]
  4080ab:	gs enter 0x5d65,0xe1
  4080b0:	sub    eax,0x95a661ea
  4080b5:	push   es
  4080b6:	cmp    al,0xe2
  4080b8:	stc    
  4080b9:	loope  0x4080b6
  4080bb:	jle    0x4080da
  4080bd:	mov    ebp,0xde45843b
  4080c2:	push   ecx
  4080c3:	daa    
  4080c4:	adc    ebp,ebx
  4080c6:	aas    
  4080c7:	cmp    DWORD PTR [eax+0x69ec5239],ecx
  4080cd:	inc    eax
  4080ce:	out    dx,al
  4080cf:	out    0xca,eax
  4080d1:	mov    WORD PTR [eax-0x2af2b6ca],?
  4080d7:	call   0xc7e6d2f5
  4080dc:	int3   
  4080dd:	or     DWORD PTR [edi-0x22],0xfffffffe
  4080e1:	add    al,0xfc
  4080e3:	fstp   QWORD PTR [ecx]
  4080e5:	ret    0x4b88
  4080e8:	adc    BYTE PTR [eax-0x4d],bh
  4080eb:	add    ebp,DWORD PTR cs:[edi-0x42f87336]
  4080f2:	clc    
  4080f3:	shr    DWORD PTR [eax+0x21],0xe1
  4080f7:	xchg   edi,eax
  4080f8:	sbb    al,0xb7
  4080fa:	xchg   ebp,eax
  4080fb:	in     al,0x70
  4080fd:	push   esp
  4080fe:	sbb    BYTE PTR [edx],dh
  408100:	ins    BYTE PTR es:[edi],dx
  408101:	and    bl,cl
  408103:	jg     0x408088
  408105:	popa   
  408106:	hlt    
  408107:	lods   eax,DWORD PTR ds:[esi]
  408108:	mov    ds:0x880da9e8,al
  40810d:	lea    esi,[ebx-0x17]
  408110:	in     al,0x2
  408112:	std    
  408113:	xchg   esp,eax
  408114:	mov    bh,0x46
  408116:	nop
  408117:	or     esp,edx
  408119:	mov    eax,ds:0xd012392a
  40811e:	icebp  
  40811f:	sub    al,0xbd
  408121:	and    bl,BYTE PTR ds:0x788aa45c
  408127:	inc    ecx
  408128:	iret   
  408129:	push   esi
  40812a:	call   0xbf98:0x4ddc39
  408131:	sbb    dl,BYTE PTR [esi-0x7f8c6545]
  408137:	push   cs
  408138:	jne    0x40816e
  40813a:	fstp   QWORD PTR [esi+0x5b]
  40813d:	stos   DWORD PTR es:[edi],eax
  40813e:	jg     0x40811f
  408140:	fldcw  WORD PTR [edx+eiz*2+0x43]
  408144:	rcr    DWORD PTR [ebp+0x73e0f431],cl
  40814a:	ret    
  40814b:	sub    al,0x13
  40814d:	sbb    DWORD PTR ds:0xe1d50df5,ecx
  408153:	mov    eax,0x6b2dbd8c
  408158:	fcmove st,st(1)
  40815a:	sar    ch,0x8b
  40815d:	push   ebp
  40815e:	mov    esp,esi
  408160:	leave  
  408161:	out    dx,al
  408162:	out    dx,eax
  408163:	or     DWORD PTR ds:0xc49d615c,0xffffffed
  40816a:	cmp    eax,0x5246ec80
  40816f:	xlat   BYTE PTR ds:[ebx]
  408170:	js     0x408172
  408172:	and    dl,BYTE PTR [edi-0x44]
  408175:	sbb    BYTE PTR [edi+0x1da65840],dl
  40817b:	fstp   DWORD PTR [ebx+0x37]
  40817e:	(bad)
  408181:	sbb    ah,bh
  408183:	test   DWORD PTR [ecx],esp
  408185:	and    bl,ch
  408187:	test   eax,0x2faf5c12
  40818c:	stos   BYTE PTR es:[edi],al
  40818d:	sbb    eax,0x5db48f71
  408192:	cmp    eax,0xa07e92b6
  408197:	outs   dx,DWORD PTR ds:[esi]
  408198:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40819a:	ret    
  40819b:	sbb    al,0xe0
  40819d:	in     eax,dx
  40819e:	imul   edx,DWORD PTR [ecx-0x4cf90b49],0x8eae2c77
  4081a8:	leave  
  4081a9:	cmp    dh,cl
  4081ab:	add    ebp,esp
  4081ad:	mov    ch,0x53
  4081af:	xchg   DWORD PTR ss:[esi+0x3b],ebx
  4081b3:	jp     0x4081ff
  4081b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081b6:	popa   
  4081b7:	mov    esi,0x1f07b40e
  4081bc:	add    DWORD PTR [ecx],esi
  4081be:	push   edx
  4081bf:	sbb    al,0x51
  4081c1:	sub    esp,0x44c706fe
  4081c7:	dec    ebx
  4081c8:	mov    WORD PTR [ebp+0x50],es
  4081cb:	xchg   ebx,eax
  4081cc:	push   eax
  4081cd:	dec    eax
  4081ce:	or     dh,BYTE PTR [edi-0x4d821cb]
  4081d4:	adc    eax,0xadc62576
  4081d9:	xlat   BYTE PTR ds:[ebx]
  4081da:	jp     0x4081d0
  4081dc:	test   al,0x4c
  4081de:	inc    ebx
  4081df:	dec    ecx
  4081e0:	lods   eax,DWORD PTR ds:[esi]
  4081e1:	pop    ebx
  4081e2:	sbb    edi,DWORD PTR [edi-0x25af4d61]
  4081e8:	mov    bh,0x36
  4081ea:	sbb    BYTE PTR [eax-0x21],0xc0
  4081ee:	pop    eax
  4081ef:	mov    ds:0x1a21d46a,eax
  4081f4:	push   cs
  4081f5:	xor    BYTE PTR [esi-0x75],bh
  4081f8:	xchg   ebp,eax
  4081f9:	ret    
  4081fa:	(bad)  [edx]
  4081fc:	stos   DWORD PTR es:[edi],eax
  4081fd:	mov    BYTE PTR [ecx-0x19f7b69a],al
  408203:	ror    BYTE PTR [ebx+ebx*8+0x2e],0x89
  408208:	mov    ss,WORD PTR [ecx-0x74421e55]
  40820e:	call   0xcba2f012
  408213:	lahf   
  408214:	fistp  DWORD PTR [esi+0x3]
  408217:	xchg   esp,eax
  408218:	lahf   
  408219:	sbb    al,0x3d
  40821b:	test   al,0x0
  40821d:	cmp    bl,BYTE PTR [ebp+0x44]
  408220:	call   DWORD PTR [ebx-0x20]
  408223:	ret    
  408224:	mov    esp,0x1ee0de8a
  408229:	lds    edi,FWORD PTR [edi-0x49af44ed]
  40822f:	test   eax,0xc4687415
  408234:	add    ecx,ecx
  408236:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408237:	leave  
  408238:	test   eax,0xb23ebf23
  40823d:	sti    
  40823e:	imul   ebx,ebx,0x24
  408241:	mov    cl,BYTE PTR [ecx-0x34]
  408244:	int3   
  408245:	pushf  
  408246:	(bad)  
  408247:	push   0xf8cd607
  40824c:	in     eax,dx
  40824d:	push   0xfffffffe
  40824f:	add    eax,0x45495928
  408254:	test   DWORD PTR [ecx],ebp
  408256:	xor    al,0x62
  408258:	(bad)  
  408259:	cld    
  40825a:	(bad)  
  40825b:	push   0x57dc0025
  408260:	das    
  408261:	push   ecx
  408262:	pushf  
  408263:	(bad)  
  408264:	fneni(8087 only) 
  408266:	js     0x4082d1
  408268:	push   ebp
  408269:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40826a:	and    DWORD PTR [esi],edx
  40826c:	jne    0x40824b
  40826e:	imul   ebx,DWORD PTR [eax+ebp*4+0xb8fe855],0xe
  408276:	mov    DWORD PTR [eax],0xaa7539f7
  40827c:	(bad)  
  40827d:	outs   dx,DWORD PTR ds:[esi]
  40827e:	in     eax,0x99
  408280:	les    ecx,FWORD PTR [ebp+0x13]
  408283:	mov    ebx,0x13f6fc1d
  408288:	inc    ebp
  408289:	repz icebp 
  40828b:	enter  0x8076,0x61
  40828f:	les    esi,FWORD PTR [esi]
  408291:	retf   0x2cb1
  408294:	cmc    
  408295:	inc    ecx
  408296:	sub    al,BYTE PTR [esi-0x4ad61622]
  40829c:	ret    
  40829d:	jge    0x408221
  40829f:	dec    ecx
  4082a0:	jl     0x408232
  4082a2:	mov    edi,0x38c67c18
  4082a7:	push   0x6d
  4082a9:	pushf  
  4082aa:	add    dh,BYTE PTR [ecx]
  4082ac:	inc    esi
  4082ad:	cmp    al,bh
  4082af:	retf   0x8556
  4082b2:	call   0x8f52:0xee251374
  4082b9:	mov    ebx,0xd03908e6
  4082be:	(bad)  
  4082bf:	in     eax,dx
  4082c0:	outs   dx,DWORD PTR ds:[esi]
  4082c1:	fldenv [edi-0x3f19d698]
  4082c7:	pop    ebp
  4082c8:	ds repz loop 0x4082ab
  4082cc:	dec    ecx
  4082cd:	pushf  
  4082ce:	jge    0x408275
  4082d0:	int3   
  4082d1:	sbb    DWORD PTR [edx+0x59],eax
  4082d4:	imul   eax,DWORD PTR [esi-0x652b1028],0x3deb5f99
  4082de:	pop    ebp
  4082df:	adc    ah,BYTE PTR [esi]
  4082e1:	sbb    eax,0xc3de472e
  4082e6:	popa   
  4082e7:	mov    bl,0xce
  4082e9:	adc    al,0x3a
  4082eb:	pop    esp
  4082ec:	inc    ebx
  4082ed:	push   cs
  4082ee:	xor    ebx,DWORD PTR [esp+ebp*8+0x5c]
  4082f2:	rol    BYTE PTR [di+0x6146],cl
  4082f7:	adc    WORD PTR [esi+0x6d],si
  4082fb:	inc    eax
  4082fc:	fistp  QWORD PTR [ecx]
  4082fe:	adc    eax,0xf6ccffbd
  408303:	mov    ah,0xc7
  408305:	mov    dh,0xc3
  408307:	add    al,0xe9
  408309:	lahf   
  40830a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40830b:	inc    ebx
  40830c:	or     BYTE PTR [ecx],ah
  40830e:	xor    BYTE PTR [eax-0x4],0x9c
  408312:	sbb    al,0xda
  408314:	cld    
  408315:	xchg   BYTE PTR [ebp-0x150763e2],al
  40831b:	mov    esi,0xf073e478
  408320:	adc    al,0x68
  408322:	inc    esp
  408323:	push   0x6d4f3b2c
  408328:	push   cs
  408329:	test   eax,0x635864bd
  40832e:	bound  ebx,QWORD PTR [ecx-0x6195c6cf]
  408334:	icebp  
  408335:	sub    edx,edi
  408337:	dec    esi
  408338:	pushf  
  408339:	xchg   edx,eax
  40833a:	(bad)  
  40833b:	into   
  40833c:	pop    ds
  40833d:	adc    al,0xfe
  40833f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408340:	sar    BYTE PTR [edi+ebp*1-0x49],cl
  408344:	mov    ds:0xbf71cb85,al
  408349:	jl     0x408347
  40834b:	jl     0x4083af
  40834d:	xchg   DWORD PTR [ecx],ecx
  40834f:	(bad)  
  408351:	pop    ecx
  408352:	imul   ecx,DWORD PTR [ebx+esi*8+0x38],0x8666ae0b
  40835a:	adc    al,0x23
  40835c:	mov    esi,DWORD PTR [esi]
  40835e:	shl    BYTE PTR [edi+0x46],0x46
  408362:	inc    edx
  408363:	cmp    eax,0x247557d4
  408368:	push   0x4c
  40836a:	adc    eax,0xba3e0d55
  40836f:	cmp    eax,DWORD PTR [esp+edi*8]
  408372:	jne    0x408356
  408374:	fld    QWORD PTR [ebp+esi*2-0x18655f19]
  40837b:	aas    
  40837c:	sahf   
  40837d:	das    
  40837e:	int    0x9d
  408380:	pop    esi
  408381:	push   0xcb7709b9
  408386:	in     eax,0xdc
  408388:	data16 fmul QWORD PTR [eax+0x78]
  40838c:	or     BYTE PTR [edi+eiz*4+0x6f],ah
  408390:	stos   BYTE PTR es:[edi],al
  408391:	in     eax,dx
  408392:	shl    BYTE PTR [esi],0x37
  408395:	jp     0x4083d1
  408397:	inc    esi
  408398:	or     dh,BYTE PTR [esi-0x69]
  40839b:	nop
  40839c:	fmul   st,st(2)
  40839e:	loopne 0x4083ad
  4083a0:	add    ch,BYTE PTR [ecx-0x33]
  4083a3:	mov    ch,0x74
  4083a5:	out    dx,al
  4083a6:	and    BYTE PTR [ecx+0x55bb7096],al
  4083ac:	cmp    edx,ebp
  4083ae:	arpl   WORD PTR [ebx+edi*8],di
  4083b1:	add    eax,0x23c16ebc
  4083b6:	ret    0x2e90
  4083b9:	das    
  4083ba:	mov    dh,0x1b
  4083bc:	xchg   BYTE PTR [edx],ah
  4083be:	jge    0x408419
  4083c0:	xchg   edx,eax
  4083c1:	push   cs
  4083c2:	mov    esi,0xefdbe3c7
  4083c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083c8:	and    eax,0x2b3cf9ae
  4083cd:	test   eax,0x315f2c3a
  4083d2:	enter  0xe9d7,0x54
  4083d6:	fidiv  DWORD PTR [edx]
  4083d8:	jmp    0x75bec32b
  4083dd:	pop    ds
  4083de:	fwait
  4083df:	mov    esp,0x33572379
  4083e4:	cmp    BYTE PTR [edi-0x5d],dl
  4083e7:	mov    dh,0x8a
  4083e9:	xor    BYTE PTR [ecx-0x50],0x9e
  4083ed:	call   0x338a2573
  4083f2:	dec    esp
  4083f3:	sub    eax,0xff088c74
  4083f8:	mov    ecx,0x5feb1d8f
  4083fd:	xchg   edx,eax
  4083fe:	jne    0x408393
  408400:	call   FWORD PTR [edi-0x44]
  408403:	call   0xec0a:0xf004e377
  40840a:	cmp    ah,BYTE PTR [eax]
  40840c:	lock jmp 0x5538dc24
  408412:	dec    eax
  408413:	mov    ds:0xe4077ca4,al
  408418:	add    ch,BYTE PTR [edx-0x42]
  40841b:	je     0x40841a
  40841d:	cmp    DWORD PTR [esi-0x22],esi
  408420:	xchg   esp,eax
  408421:	xor    BYTE PTR [edx+edi*4+0xc],bh
  408425:	stos   DWORD PTR es:[edi],eax
  408426:	ret    0xb0a
  408429:	out    dx,eax
  40842a:	ins    DWORD PTR es:[edi],dx
  40842b:	jle    0x4083e7
  40842d:	(bad)  
  40842e:	std    
  40842f:	(bad)  
  408430:	jnp    0x408493
  408432:	dec    esp
  408433:	mov    WORD PTR [ecx-0x75],ds
  408436:	mov    ds:0xf2a32826,eax
  40843b:	mov    esp,0xba79dd92
  408440:	scas   al,BYTE PTR es:[edi]
  408441:	dec    eax
  408442:	in     al,0x5b
  408444:	std    
  408445:	sub    al,0x38
  408447:	jns    0x40842a
  408449:	dec    esp
  40844a:	int3   
  40844b:	sub    bl,BYTE PTR [edx+0xa7397b2]
  408451:	call   0x55a:0xaf95b651
  408458:	out    dx,al
  408459:	out    dx,al
  40845a:	aam    0x51
  40845c:	adc    ebx,DWORD PTR [eax+0x5b]
  40845f:	test   DWORD PTR ds:0x527f4f63,esp
  408465:	fs xchg ebp,eax
  408467:	cli    
  408468:	adc    BYTE PTR [eax],dl
  40846a:	xchg   edi,eax
  40846b:	stos   BYTE PTR es:[edi],al
  40846c:	adc    ecx,ebp
  40846e:	jnp    0x408415
  408470:	clc    
  408471:	cmp    esi,DWORD PTR [edx-0x3577861b]
  408477:	inc    ecx
  408478:	ins    DWORD PTR es:[edi],dx
  408479:	aam    0xd7
  40847b:	or     BYTE PTR [ebx-0x2fb7c321],0x65
  408482:	pop    edi
  408483:	pop    edi
  408484:	jg     0x4084dc
  408486:	jecxz  0x408461
  408488:	adc    DWORD PTR [edx+0x5219df08],eax
  40848e:	sbb    al,0x1f
  408490:	inc    esi
  408491:	adc    DWORD PTR [esi-0x11],edx
  408494:	and    DWORD PTR [ebx-0x6f],0x1a
  408498:	dec    ebx
  408499:	add    edi,DWORD PTR [ecx]
  40849b:	dec    edi
  40849c:	mov    eax,0x302c7e45
  4084a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084a2:	xor    al,0x65
  4084a4:	mov    bh,0xc6
  4084a6:	cmp    ah,BYTE PTR ds:0xd4661bda
  4084ac:	and    BYTE PTR [ecx*1+0x337542aa],cl
  4084b3:	push   ecx
  4084b4:	inc    ecx
  4084b5:	dec    edx
  4084b6:	jecxz  0x408452
  4084b8:	jns    0x4084e5
  4084ba:	ss cmp al,0x1d
  4084bd:	push   0x6bfee1ea
  4084c2:	stos   BYTE PTR es:[edi],al
  4084c3:	pusha  
  4084c4:	sbb    ebx,0x49
  4084c7:	stc    
  4084c8:	stc    
  4084c9:	mov    ecx,edx
  4084cb:	rcl    dh,1
  4084cd:	js     0x4084e9
  4084cf:	dec    ebp
  4084d0:	in     eax,0x29
  4084d2:	mov    eax,ds:0x9c52bd80
  4084d7:	dec    eax
  4084d8:	mov    ah,0x11
  4084da:	push   es
  4084db:	addr16 rcl ecx,1
  4084de:	push   ecx
  4084df:	mov    bl,0x34
  4084e1:	lods   eax,DWORD PTR ds:[esi]
  4084e2:	sub    ah,0x35
  4084e5:	scas   eax,DWORD PTR es:[edi]
  4084e6:	and    BYTE PTR [edi],bl
  4084e8:	stos   BYTE PTR es:[edi],al
  4084e9:	addr16 xchg ebp,eax
  4084eb:	cmp    esp,esp
  4084ed:	jmp    0x8d21edfc
  4084f2:	sar    DWORD PTR [eax+0x5d5c44c4],cl
  4084f8:	test   eax,0xdfaaf9d4
  4084fe:	sar    DWORD PTR [ecx],cl
  408500:	sub    eax,0xd4759dc1
  408505:	imul   esi,DWORD PTR [esp+ebp*2-0x409308d2],0x5682569
  408510:	mov    al,es:0x1016ea2d
  408516:	jno    0x4084a7
  408518:	or     esp,DWORD PTR [ebp-0x6f]
  40851b:	xchg   edx,eax
  40851c:	mov    al,0x8a
  40851e:	or     ah,dl
  408520:	pop    ecx
  408521:	test   DWORD PTR [edi+0x48],esi
  408524:	out    0x68,eax
  408526:	jae    0x4084c7
  408528:	imul   edi,DWORD PTR [ecx+0x52],0x6642d0bd
  40852f:	cs dec ebx
  408531:	ss test eax,0x16559720
  408537:	popf   
  408538:	jnp    0x4084f4
  40853a:	loope  0x408583
  40853c:	cmp    ebp,DWORD PTR [ebx+0x4cc9a280]
  408542:	and    eax,0x1c66f2a3
  408547:	inc    edx
  408548:	push   0x46
  40854a:	(bad)  
  40854b:	(bad)  
  40854c:	popa   
  40854d:	dec    ecx
  40854e:	lds    ebp,FWORD PTR [esi-0x5d15e632]
  408554:	loopne 0x4085ae
  408556:	es pop ds
  408558:	mov    edi,DWORD PTR ds:0xea5dec56
  40855e:	mov    edi,0x40f38455
  408563:	int    0xf
  408565:	push   ebp
  408566:	pop    ss
  408567:	adc    al,0x92
  408569:	das    
  40856a:	clc    
  40856b:	push   ds
  40856c:	push   esp
  40856d:	push   edx
  40856e:	inc    edi
  40856f:	mov    WORD PTR [edi-0x63839bf8],es
  408575:	add    ebx,DWORD PTR [ebp+0x27619f0]
  40857b:	(bad)  
  40857c:	imul   esi,DWORD PTR [ebx],0x4e4f46bf
  408582:	lds    ecx,FWORD PTR ds:0xb4ec3f02
  408588:	adc    ecx,ecx
  40858a:	ins    DWORD PTR es:[edi],dx
  40858b:	test   BYTE PTR [ecx-0x424a47c6],0xc7
  408592:	cli    
  408593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408594:	pop    edi
  408595:	jmp    0x5f20:0x58e6359e
  40859c:	enter  0xfde,0x44
  4085a0:	push   ecx
  4085a1:	jge    0x408573
  4085a3:	mov    ebp,0xddc07b48
  4085a8:	cmc    
  4085a9:	lea    ebx,[edi]
  4085ab:	mov    DWORD PTR [edx+0x7c840d29],edi
  4085b1:	fwait
  4085b2:	ja     0x408599
  4085b4:	das    
  4085b5:	ins    DWORD PTR es:[edi],dx
  4085b6:	mov    eax,0xe7bbe190
  4085bb:	inc    eax
  4085bc:	jns    0x4085d6
  4085be:	aam    0x56
  4085c0:	jecxz  0x4085d9
  4085c2:	icebp  
  4085c3:	js     0x4085d0
  4085c5:	sbb    DWORD PTR [ebx],esp
  4085c7:	ins    DWORD PTR es:[edi],dx
  4085c8:	cld    
  4085c9:	adc    al,0xa9
  4085cb:	add    DWORD PTR [edx-0x61],eax
  4085ce:	cs cmp DWORD PTR cs:[ebx-0x35],edi
  4085d3:	ret    0xab78
  4085d6:	add    eax,0xddbf8b64
  4085db:	rcl    ch,0xda
  4085de:	dec    ecx
  4085df:	add    DWORD PTR [edx+0x1ada49fe],esi
  4085e5:	push   ecx
  4085e6:	shl    DWORD PTR [ecx-0x6e],1
  4085e9:	or     esp,DWORD PTR [ebp+0x4f]
  4085ec:	jle    0x4085c7
  4085ee:	fwait
  4085ef:	repz retf 0x1364
  4085f3:	xchg   ebp,eax
  4085f4:	mov    edi,0xdcbfbd
  4085f9:	push   ecx
  4085fa:	lock mov bl,0x56
  4085fd:	adc    ecx,DWORD PTR ds:0x8f6f2d52
  408603:	dec    eax
  408604:	xchg   ecx,eax
  408605:	inc    esi
  408606:	(bad)  
  408607:	ret    0xb588
  40860a:	jp     0x408633
  40860c:	mov    ebp,0x3d647a5
  408611:	(bad)
  408615:	fnstcw WORD PTR [ebx+0x6d]
  408618:	inc    ebx
  408619:	shl    DWORD PTR [ebx-0x67f66e4f],1
  40861f:	pusha  
  408620:	mov    ds:0xda324361,al
  408625:	rcl    BYTE PTR [ebp+0x25],1
  408628:	jb     0x40860f
  40862a:	pop    ebp
  40862b:	inc    ebp
  40862c:	js     0x408675
  40862e:	sbb    al,BYTE PTR [edi-0x53]
  408631:	add    DWORD PTR [eax-0x65d60e8e],0x21556ce1
  40863b:	ja     0x4085c2
  40863d:	f2xm1  
  40863f:	mov    al,0x99
  408641:	inc    esi
  408642:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408643:	lods   al,BYTE PTR ds:[esi]
  408644:	mov    ds:0x4e150180,al
  408649:	sub    dl,BYTE PTR [esi]
  40864b:	cld    
  40864c:	rcl    bh,1
  40864e:	jnp    0x408663
  408650:	in     eax,0x0
  408652:	adc    al,0x6c
  408654:	sti    
  408655:	xor    bh,cl
  408657:	into   
  408658:	jne    0x4085ec
  40865a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40865b:	test   al,0x99
  40865d:	sbb    bl,BYTE PTR [edi-0x3fd23f9e]
  408663:	cld    
  408664:	add    al,0xc9
  408666:	inc    ecx
  408667:	fwait
  408668:	dec    esi
  408669:	stos   BYTE PTR es:[edi],al
  40866a:	or     cl,BYTE PTR [eax]
  40866c:	fcom   DWORD PTR [edx-0x5b]
  40866f:	jl     0x4086df
  408671:	mov    es,WORD PTR [ebx-0x6]
  408674:	pop    ds
  408675:	loopne 0x408618
  408677:	sub    ebp,DWORD PTR [eax+ebx*2-0x7d]
  40867b:	in     eax,0x73
  40867d:	push   ss
  40867e:	fnsave [eax-0x3570a6f3]
  408684:	in     eax,dx
  408685:	loope  0x40865e
  408687:	gs push 0xffffff8b
  40868a:	or     esp,0x53
  40868d:	neg    DWORD PTR [edx+0x4f5493e2]
  408693:	mov    esi,0x5e1d50fe
  408698:	push   es
  408699:	mov    ds:0x74ef33e1,al
  40869e:	call   0xdc0fc00b
  4086a3:	inc    edi
  4086a4:	fidiv  DWORD PTR [ebp+0x5]
  4086a7:	or     eax,0xcf71a543
  4086ac:	sub    eax,0xa9661902
  4086b1:	dec    eax
  4086b2:	test   BYTE PTR [eax+0x51],dh
  4086b5:	lock cmp al,0x2d
  4086b8:	pop    es
  4086b9:	inc    edi
  4086ba:	int    0xa6
  4086bc:	cld    
  4086bd:	ret    0xe15f
  4086c0:	mov    ch,0x81
  4086c2:	call   0x6ade1cc0
  4086c7:	dec    edi
  4086c8:	mov    ecx,ecx
  4086ca:	fsub   QWORD PTR [esi]
  4086cc:	xchg   DWORD PTR [edx-0xa44b469],esp
  4086d2:	add    ch,BYTE PTR [edx+0x5f]
  4086d5:	xlat   BYTE PTR ds:[ebx]
  4086d6:	add    esp,ecx
  4086d8:	sbb    ebx,DWORD PTR [eax]
  4086da:	(bad)  
  4086db:	lds    ebp,FWORD PTR [edx+0x69]
  4086de:	fbstp  TBYTE PTR [ebx+0x5d]
  4086e1:	enter  0x1f71,0x84
  4086e5:	lds    eax,FWORD PTR [edi+0x8d5438d]
  4086eb:	jecxz  0x408677
  4086ed:	mov    edx,ds
  4086ef:	xlat   BYTE PTR ds:[ebx]
  4086f0:	dec    edi
  4086f1:	dec    edx
  4086f2:	in     al,0x90
  4086f4:	js     0x4086c5
  4086f6:	je     0x4086da
  4086f8:	xchg   edx,eax
  4086f9:	out    0xa7,al
  4086fb:	or     eax,0xbef62d71
  408700:	aas    
  408701:	sbb    al,BYTE PTR [esi+0x55208e1a]
  408707:	adc    BYTE PTR [esi+0x4b],bh
  40870a:	pushf  
  40870b:	push   ebx
  40870c:	xchg   esp,eax
  40870d:	mov    BYTE PTR ds:0x459a1bcb,cl
  408713:	dec    eax
  408714:	mov    esi,0xbe1c8f0a
  408719:	xor    eax,0xb6d9ef1f
  40871e:	push   0x3f
  408720:	add    dl,dl
  408722:	jo     0x40876b
  408724:	sahf   
  408725:	test   eax,0x12c0cef8
  40872a:	xor    edi,DWORD PTR [esi]
  40872c:	ret    0x1069
  40872f:	sub    bh,BYTE PTR [eax+0x20]
  408732:	dec    eax
  408733:	pop    edi
  408734:	jae    0x4087a7
  408736:	xor    eax,0x67e25b9b
  40873b:	jge    0x4086e1
  40873d:	scas   al,BYTE PTR es:[edi]
  40873e:	clc    
  40873f:	mov    ebp,ecx
  408741:	sub    BYTE PTR [ebp-0x5e133fb9],bl
  408747:	mov    esi,0x803b3595
  40874c:	pop    edx
  40874d:	cmp    al,0xe7
  40874f:	imul   edi,eax,0x4d4fbd66
  408755:	cmp    ebx,DWORD PTR [ecx+0x1d62cba2]
  40875b:	popa   
  40875c:	push   esp
  40875d:	cmp    eax,0xd70a820e
  408762:	(bad)  
  408763:	in     al,0x87
  408765:	js     0x4087d9
  408767:	(bad)  [ebx+0x93bfd5c]
  40876d:	mov    bl,0x4b
  40876f:	inc    esp
  408770:	mov    dl,0xb4
  408772:	sbb    ebp,esp
  408774:	rcl    DWORD PTR [eax+0x62],1
  408777:	jnp    0x408764
  408779:	bound  ebp,QWORD PTR [ecx]
  40877b:	pop    edx
  40877c:	sar    ecx,1
  40877e:	mov    eax,0x32289dc8
  408783:	pop    ds
  408784:	push   ebp
  408785:	hlt    
  408786:	ret    
  408787:	cli    
  408788:	inc    eax
  408789:	xchg   ebx,eax
  40878a:	mov    dh,0xd5
  40878c:	xchg   ecx,eax
  40878d:	mov    edi,0x64d10206
  408792:	mov    al,0x43
  408794:	jmp    0x4087b3
  408796:	clc    
  408797:	imul   esp,DWORD PTR [ebx-0x450cd3f3],0x31
  40879e:	in     eax,dx
  40879f:	fist   DWORD PTR [edx]
  4087a1:	xchg   ebp,eax
  4087a2:	sub    DWORD PTR [edi],edx
  4087a4:	daa    
  4087a5:	push   esi
  4087a6:	pop    es
  4087a7:	xchg   edx,eax
  4087a8:	push   ebx
  4087a9:	cmp    al,0x17
  4087ab:	pop    eax
  4087ac:	ins    BYTE PTR es:[edi],dx
  4087ad:	dec    edi
  4087ae:	mov    cl,0x48
  4087b0:	sub    DWORD PTR [edi+0xc],ecx
  4087b3:	sahf   
  4087b4:	lods   eax,DWORD PTR cs:[esi]
  4087b6:	test   al,0xd
  4087b8:	mov    bh,0x6d
  4087ba:	std    
  4087bb:	aaa    
  4087bc:	sub    dl,dh
  4087be:	enter  0x2807,0x2c
  4087c2:	movd   DWORD PTR [edx-0x77f75adc],mm2
  4087c9:	mov    dl,0x87
  4087cb:	fisub  WORD PTR [ebx-0x2a090a4d]
  4087d1:	add    al,0x19
  4087d3:	inc    ebx
  4087d4:	icebp  
  4087d5:	loopne 0x40879c
  4087d7:	pop    ecx
  4087d8:	mov    DWORD PTR [edx+eax*8+0x17],edi
  4087dc:	adc    al,0x5a
  4087de:	mov    WORD PTR [edx+0x2c],gs
  4087e1:	(bad)  
  4087e2:	icebp  
  4087e3:	aaa    
  4087e4:	xchg   ebp,eax
  4087e5:	outs   dx,DWORD PTR ds:[esi]
  4087e6:	and    bl,BYTE PTR [ebx+0x27]
  4087e9:	and    BYTE PTR [edx+0x1b6c5b9],bl
  4087ef:	xor    ebp,DWORD PTR [edi+0x49f43281]
  4087f5:	or     eax,0xc052ddd1
  4087fa:	dec    edx
  4087fb:	sar    DWORD PTR [ebx-0xa],1
  4087fe:	js     0x40885b
  408800:	fbld   TBYTE PTR [edi-0x62]
  408803:	or     eax,0xc24a561a
  408808:	fwait
  408809:	imul   BYTE PTR [eax-0x6c15015a]
  40880f:	mov    edx,0x633557f
  408814:	dec    edx
  408815:	mov    WORD PTR [esi+0xc],gs
  408818:	dec    eax
  408819:	jno    0x408888
  40881b:	xlat   BYTE PTR ds:[ebx]
  40881c:	mov    ecx,0x8f695107
  408821:	mov    ds:0x35a2b24,eax
  408826:	rcl    DWORD PTR [eax],cl
  408828:	test   al,0x39
  40882a:	dec    edi
  40882b:	mov    ebp,0x1901908
  408830:	idiv   DWORD PTR [eax]
  408832:	xchg   ebx,eax
  408833:	cwde   
  408834:	retf   0x544d
  408837:	sub    eax,0x4e4232a9
  40883c:	out    dx,al
  40883d:	jle    0x408876
  40883f:	and    DWORD PTR [edi],edi
  408841:	fs out dx,eax
  408843:	adc    al,BYTE PTR [eax+0x76256055]
  408849:	add    eax,0x3be219b1
  40884e:	cs ret 
  408850:	(bad)  
  408851:	dec    DWORD PTR [edi+0x1e74df88]
  408857:	mov    al,0x6e
  408859:	sbb    ah,BYTE PTR [edi-0x49315117]
  40885f:	xor    ebx,DWORD PTR [edi]
  408861:	jmp    0x13aed81c
  408866:	mov    ecx,0x64d5b792
  40886b:	enter  0x2c16,0xfc
  40886f:	stc    
  408870:	ret    0xb8b5
  408873:	adc    al,0x65
  408875:	aam    0xaa
  408877:	aas    
  408878:	push   es
  408879:	adc    edi,DWORD PTR [esi+0x6713f44a]
  40887f:	stc    
  408880:	mov    ch,0x50
  408882:	adc    BYTE PTR [ecx+0x59f83512],ch
  408888:	sti    
  408889:	push   cs
  40888a:	(bad)  
  40888b:	loope  0x4088f7
  40888d:	push   ebx
  40888e:	adc    DWORD PTR [esi-0x5d0f49f8],ebp
  408894:	sti    
  408895:	mov    es,WORD PTR [ebp-0x6a8ea3e4]
  40889b:	shr    ch,0xf9
  40889e:	or     BYTE PTR [edi+0x44],dl
  4088a1:	gs inc edx
  4088a3:	pop    eax
  4088a4:	das    
  4088a5:	and    al,bl
  4088a7:	cmp    DWORD PTR [ebp+eiz*8-0x41],eax
  4088ab:	mov    eax,0x218afb2b
  4088b0:	push   ecx
  4088b1:	jp     0x408895
  4088b3:	inc    ebx
  4088b4:	mov    edx,0x26f80cc6
  4088b9:	mov    ch,BYTE PTR [edx]
  4088bb:	outs   dx,BYTE PTR ds:[esi]
  4088bc:	cwde   
  4088bd:	std    
  4088be:	mov    edi,0x8f013a0c
  4088c3:	xchg   esp,eax
  4088c4:	push   edx
  4088c5:	retf   
  4088c6:	jl     0x40889a
  4088c8:	add    al,bh
  4088ca:	dec    ecx
  4088cb:	fdivr  st,st(5)
  4088cd:	jb     0x408915
  4088cf:	mov    edx,0x23bc19a9
  4088d4:	and    ebx,DWORD PTR [esp+ebx*8]
  4088d7:	add    bh,BYTE PTR [esi-0x17040aa7]
  4088dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088de:	lea    ebx,[edx]
  4088e0:	push   esi
  4088e1:	or     al,0xa5
  4088e3:	out    dx,eax
  4088e4:	icebp  
  4088e5:	ins    DWORD PTR es:[edi],dx
  4088e6:	std    
  4088e7:	mov    eax,ds:0x28ce37ba
  4088ec:	shr    DWORD PTR [edi-0x22],0x8d
  4088f0:	push   ecx
  4088f1:	(bad)  
  4088f2:	adc    al,0x24
  4088f4:	push   esi
  4088f5:	scas   eax,DWORD PTR es:[edi]
  4088f6:	les    esi,FWORD PTR [esi-0x24]
  4088f9:	mov    ah,0x59
  4088fb:	(bad)
  4088ff:	sbb    BYTE PTR [edx+0x6e],ch
  408902:	mov    esp,0xefa2fc8e
  408907:	addr16 iret 
  408909:	inc    edi
  40890a:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40890c:	adc    al,0xc9
  40890e:	xor    ch,BYTE PTR [ebp+0x4b]
  408911:	sbb    al,0xb7
  408913:	imul   esp,DWORD PTR [eax],0xffffffeb
  408916:	fstp   TBYTE PTR [edi+0x6]
  408919:	ja     0x40893e
  40891b:	lock div BYTE PTR [esi]
  40891e:	push   esp
  40891f:	mov    eax,ds:0x2fdeea15
  408924:	cmp    esp,DWORD PTR [edi+0x6770bab6]
  40892a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40892b:	sbb    al,0xe
  40892d:	sub    BYTE PTR [eax],dl
  40892f:	push   cs
  408930:	sub    eax,DWORD PTR [ebp+eax*1+0x10]
  408934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408935:	fild   QWORD PTR [esi+ebp*4]
  408938:	ja     0x4088ff
  40893a:	jecxz  0x408995
  40893c:	cmp    eax,0x7867a18e
  408941:	xor    eax,0xb9352b6e
  408946:	mov    ah,0x5d
  408948:	call   DWORD PTR [ecx+0x5751765]
  40894e:	push   ss
  40894f:	nop
  408950:	lahf   
  408951:	xchg   ebx,eax
  408952:	jmp    0xfc5f1b07
  408957:	popf   
  408958:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408959:	pop    ds
  40895a:	add    eax,0xd1c1c7bf
  40895f:	mul    DWORD PTR [ebx-0x3a]
  408962:	outs   dx,DWORD PTR ds:[esi]
  408963:	jle    0x4089a9
  408965:	inc    ebp
  408966:	adc    al,0x13
  408968:	cdq    
  408969:	rol    esp,0xfe
  40896c:	push   ss
  40896d:	aam    0x6b
  40896f:	jp     0x4089b7
  408971:	mov    dl,0x32
  408973:	jnp    0x4089c5
  408975:	fscale 
  408977:	imul   ebx,ebp,0x5d64dd22
  40897d:	adc    esi,DWORD PTR [edi+ebx*1+0x2d5871db]
  408984:	xchg   edi,eax
  408985:	mov    edi,0xb5059373
  40898a:	adc    al,ah
  40898c:	jns    0x40897e
  40898e:	ret    
  40898f:	jne    0x408953
  408991:	xor    dh,BYTE PTR [edx-0x24]
  408994:	or     esi,edi
  408996:	mov    al,ds:0x83297087
  40899b:	mov    esi,DWORD PTR [edx-0x3b]
  40899e:	and    eax,0x99d88bed
  4089a3:	jmp    0x4089ab
  4089a5:	mov    eax,0xb6e0985c
  4089ab:	adc    DWORD PTR [eax+0x32],edi
  4089ae:	cld    
  4089af:	rcl    DWORD PTR [edx],0x2b
  4089b2:	sahf   
  4089b3:	adc    al,0x4d
  4089b5:	xor    ebp,ebx
  4089b7:	xor    bh,BYTE PTR [esi+0x7d9b0590]
  4089bd:	sar    ah,0xa2
  4089c0:	push   esi
  4089c1:	mov    WORD PTR [edi+0x1e],gs
  4089c4:	frstor [eax-0xa]
  4089c7:	cmp    al,0x3d
  4089c9:	mov    ecx,0xff986a70
  4089ce:	test   BYTE PTR [esp+esi*2+0x70f3ab6a],dl
  4089d5:	add    DWORD PTR [eax],ebp
  4089d7:	mov    DWORD PTR [edx+0x45],edx
  4089da:	outs   dx,BYTE PTR ds:[esi]
  4089db:	add    cl,ch
  4089dd:	adc    al,0xff
  4089df:	dec    ecx
  4089e0:	ins    DWORD PTR es:[edi],dx
  4089e1:	nop
  4089e2:	fist   WORD PTR [ecx]
  4089e4:	addr16 imul ecx,ebx,0x88836f77
  4089eb:	pop    ebp
  4089ec:	les    edi,FWORD PTR [edx]
  4089ee:	imul   ecx,DWORD PTR [ecx],0xfffffffd
  4089f1:	loope  0x4089a1
  4089f3:	push   ebp
  4089f4:	pushf  
  4089f5:	not    DWORD PTR [edx+0x63b28b7c]
  4089fb:	dec    ebx
  4089fc:	or     BYTE PTR [esi],0xf8
  4089ff:	xor    BYTE PTR [ecx+ebp*2+0x6bbeaae6],dh
  408a06:	mov    ecx,0x98914895
  408a0b:	add    eax,0xa87eddef
  408a10:	rcr    dh,0xe6
  408a13:	xchg   esi,eax
  408a14:	mov    bl,BYTE PTR [edi+0xa]
  408a17:	sub    esi,DWORD PTR [eax]
  408a19:	pushf  
  408a1a:	scas   eax,DWORD PTR es:[edi]
  408a1b:	scas   al,BYTE PTR es:[edi]
  408a1c:	aaa    
  408a1d:	pusha  
  408a1e:	in     eax,0x97
  408a20:	not    DWORD PTR [esi]
  408a22:	jns    0x408aa0
  408a24:	and    esp,esp
  408a26:	sti    
  408a27:	cmp    DWORD PTR [esi-0xb25af7f],edi
  408a2d:	dec    eax
  408a2e:	inc    edi
  408a2f:	sahf   
  408a30:	fisttp QWORD PTR [ecx+0x7e]
  408a33:	mov    ch,0x33
  408a35:	mov    cl,0x2e
  408a37:	imul   eax,DWORD PTR [ecx-0x3],0xc1ba3f47
  408a3e:	xchg   ebx,eax
  408a3f:	pusha  
  408a40:	js     0x408a34
  408a42:	outs   dx,BYTE PTR ds:[esi]
  408a43:	arpl   bp,si
  408a45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a46:	adc    BYTE PTR [edi],bl
  408a48:	jecxz  0x408a2b
  408a4a:	sahf   
  408a4b:	lea    ecx,[edi-0x5f2b4f08]
  408a51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a52:	xor    DWORD PTR [ecx+0x9ee70a2],edi
  408a58:	mov    DWORD PTR [esi+0x36a838a],ebx
  408a5e:	jb     0x408abd
  408a60:	xchg   edx,eax
  408a61:	lock sar BYTE PTR [ebx],1
  408a64:	sub    eax,0x9f0c2f23
  408a69:	pop    edi
  408a6a:	div    DWORD PTR [edx+0x40132c33]
  408a70:	loop   0x408a27
  408a72:	arpl   WORD PTR [edx+ecx*2+0x345703e1],di
  408a79:	dec    ebx
  408a7a:	jae    0x408ad9
  408a7c:	loope  0x408a6b
  408a7e:	lods   al,BYTE PTR ds:[esi]
  408a7f:	mov    ds:0xc6c6b09,eax
  408a84:	fld    DWORD PTR [ebx+0x1b807b24]
  408a8a:	imul   ebp,DWORD PTR [ebx-0x5d],0x3d1db320
  408a91:	stos   BYTE PTR es:[edi],al
  408a92:	sti    
  408a93:	jne    0x408a6c
  408a95:	or     eax,0x842fba1f
  408a9a:	sbb    bh,cl
  408a9c:	enter  0xaf24,0x80
  408aa0:	cmc    
  408aa1:	mov    ch,0x9d
  408aa3:	data16 cs daa 
  408aa6:	adc    eax,0x37746e70
  408aab:	xor    dl,ch
  408aad:	gs pop es
  408aaf:	(bad)  
  408ab0:	xor    DWORD PTR [edi+ebp*1-0x10],esi
  408ab4:	aas    
  408ab5:	add    BYTE PTR [edi+0x26610457],ch
  408abb:	and    BYTE PTR [ebp+0x4b3e61ef],dl
  408ac1:	int    0x15
  408ac3:	and    eax,0xd3f047e8
  408ac8:	dec    ebx
  408ac9:	xchg   ebx,eax
  408aca:	(bad)  
  408acb:	xchg   ebx,eax
  408acc:	xchg   edx,eax
  408acd:	push   ecx
  408ace:	out    dx,al
  408acf:	or     ebp,esi
  408ad1:	je     0x408b48
  408ad3:	fsubp  st(6),st
  408ad5:	loope  0x408ac4
  408ad7:	sub    ebp,esi
  408ad9:	sub    DWORD PTR [esi-0x58],0x11c5809e
  408ae0:	dec    esp
  408ae1:	pop    ds
  408ae2:	cdq    
  408ae3:	push   ds
  408ae4:	ror    BYTE PTR [eax-0x6c],0x46
  408ae8:	or     cl,BYTE PTR [ebx]
  408aea:	das    
  408aeb:	inc    ebx
  408aec:	(bad)  
  408aed:	pop    esp
  408aee:	lods   al,BYTE PTR ds:[esi]
  408aef:	scas   al,BYTE PTR es:[edi]
  408af0:	iret   
  408af1:	dec    ecx
  408af2:	fcompp 
  408af4:	(bad)
  408af7:	xchg   BYTE PTR [edi],cl
  408af9:	pushf  
  408afa:	push   es
  408afb:	pop    edx
  408afc:	mov    ebp,0x37031e44
  408b01:	mov    eax,DWORD PTR [eax]
  408b03:	pop    edi
  408b04:	inc    ebp
  408b05:	xchg   esi,eax
  408b06:	sub    DWORD PTR [eax],0xcd084b36
  408b0c:	and    al,0xf
  408b0e:	pushf  
  408b0f:	call   FWORD PTR [edx-0x17743a6c]
  408b15:	jbe    0x408aa8
  408b17:	daa    
  408b18:	and    esi,eax
  408b1a:	cli    
  408b1b:	sub    DWORD PTR [esi-0x1b2fba4f],ebx
  408b21:	mov    dl,0x1f
  408b23:	mov    al,0xbb
  408b25:	fwait
  408b26:	add    BYTE PTR [ebp-0x2b],bl
  408b29:	(bad)  
  408b2b:	pop    ecx
  408b2c:	lods   eax,DWORD PTR ds:[esi]
  408b2d:	mov    edx,cs
  408b2f:	xor    eax,0xb65421f0
  408b34:	pop    ebx
  408b35:	lahf   
  408b36:	shl    BYTE PTR [eax+0x4e114167],1
  408b3c:	in     eax,dx
  408b3d:	dec    ecx
  408b3e:	popa   
  408b3f:	loope  0x408b16
  408b41:	and    eax,0xab8bfa2a
  408b46:	loop   0x408bc7
  408b48:	rep stos BYTE PTR es:[edi],al
  408b4a:	add    BYTE PTR [ecx+0x18],bh
  408b4d:	fwait
  408b4e:	jae    0x408b5b
  408b50:	or     BYTE PTR [ebx],dl
  408b52:	jmp    0x94a7ac3b
  408b57:	push   0xc253686d
  408b5c:	xlat   BYTE PTR ds:[ebx]
  408b5d:	inc    bx
  408b5f:	push   DWORD PTR [eax+0x39]
  408b62:	or     al,0x58
  408b64:	adc    al,0xaf
  408b66:	mov    ebx,0x15b408de
  408b6b:	mov    ah,0x75
  408b6d:	pop    ds
  408b6e:	sbb    ch,dh
  408b70:	add    dl,BYTE PTR [esi-0x34]
  408b73:	shr    BYTE PTR [ebp-0x78b6d41],1
  408b79:	imul   ecx,DWORD PTR [eax-0x1cd3da37],0x42
  408b80:	scas   eax,DWORD PTR es:[edi]
  408b81:	adc    al,0x41
  408b83:	add    dh,0xe8
  408b86:	push   dx
  408b88:	arpl   WORD PTR [edx-0x4d],di
  408b8b:	shl    ebx,cl
  408b8d:	nop
  408b8e:	aas    
  408b8f:	std    
  408b90:	(bad)  
  408b91:	fistp  WORD PTR [edx]
  408b93:	jmp    FWORD PTR [edi+ebp*1]
  408b96:	or     DWORD PTR [edi+0x1e],edx
  408b99:	leave  
  408b9a:	xchg   esi,eax
  408b9b:	xchg   ebx,eax
  408b9c:	jmp    0xd39b:0xfd22bcc5
  408ba3:	div    DWORD PTR [edx]
  408ba5:	mov    eax,0x220d8d9f
  408baa:	cmp    ebx,esp
  408bac:	and    DWORD PTR [esi],edi
  408bae:	fbld   TBYTE PTR [edi]
  408bb0:	mov    DWORD PTR [esi+0x61],ebp
  408bb3:	icebp  
  408bb4:	push   ds
  408bb5:	pusha  
  408bb6:	(bad)  
  408bb7:	hlt    
  408bb8:	or     dh,bl
  408bba:	jl     0x408bf6
  408bbc:	das    
  408bbd:	jb     0x408b73
  408bbf:	jg     0x408c1b
  408bc1:	mov    ds:0x682b7291,eax
  408bc6:	icebp  
  408bc7:	xor    al,0x5d
  408bc9:	xchg   esi,eax
  408bca:	pop    edx
  408bcb:	xchg   ch,bh
  408bcd:	push   0xffffffcd
  408bcf:	enter  0xd5c9,0x99
  408bd3:	dec    esi
  408bd4:	pop    ebp
  408bd5:	jns    0x408c2d
  408bd7:	arpl   WORD PTR [edi-0x63],dx
  408bda:	push   ds
  408bdb:	push   es
  408bdc:	enter  0xb3e,0xa2
  408be0:	pusha  
  408be1:	sar    BYTE PTR [ebx+ebx*2],1
  408be4:	sub    DWORD PTR [ebx-0x55],0xba95a6cb
  408beb:	pop    ebp
  408bec:	fild   DWORD PTR [esi+0x1d]
  408bef:	push   edx
  408bf0:	jp     0x408bf1
  408bf2:	into   
  408bf3:	icebp  
  408bf4:	jmp    0x2622f64e
  408bf9:	push   es
  408bfa:	pushf  
  408bfb:	jnp    0x408b87
  408bfd:	jg     0x408bb3
  408bff:	aam    0x63
  408c01:	pop    ebp
  408c02:	mov    WORD PTR [eax],?
  408c04:	mov    esi,0xcab2554e
  408c09:	sbb    esi,ebx
  408c0b:	and    al,0xb4
  408c0d:	push   ds
  408c0e:	ret    0xd5d2
  408c11:	pop    esi
  408c12:	pop    ebx
  408c13:	dec    edi
  408c14:	sub    al,cl
  408c16:	mov    bl,0x64
  408c18:	ds and eax,0xea850e56
  408c1e:	dec    ebp
  408c1f:	dec    edx
  408c20:	repnz xchg esi,eax
  408c22:	adc    edi,DWORD PTR [edx]
  408c24:	sub    DWORD PTR [ecx+0x36],edx
  408c27:	fld    TBYTE PTR [eax+0x4bd4efec]
  408c2d:	pusha  
  408c2e:	inc    esp
  408c2f:	sbb    cl,BYTE PTR [ebx-0x69]
  408c32:	sbb    eax,0x7e88801c
  408c37:	bound  ecx,QWORD PTR [ecx]
  408c39:	inc    edi
  408c3a:	imul   esp,DWORD PTR [eax],0x2ffc7daa
  408c40:	cmp    al,0x2
  408c42:	in     al,dx
  408c43:	add    al,0xa4
  408c45:	sub    al,0x57
  408c47:	jecxz  0x408bd2
  408c49:	mov    bh,dl
  408c4b:	sub    edi,DWORD PTR [edx+0x5a409a77]
  408c51:	loopne 0x408ccf
  408c53:	in     al,0xa8
  408c55:	mov    esp,0xbd3b0723
  408c5a:	sbb    edi,DWORD PTR [esi]
  408c5c:	pop    ebp
  408c5d:	fst    QWORD PTR [esp+eiz*8+0x456c5841]
  408c64:	test   al,0x99
  408c66:	add    ebx,DWORD PTR [ecx-0x5]
  408c69:	enter  0x3865,0x70
  408c6d:	ret    0xa468
  408c70:	add    esi,ebp
  408c72:	mov    ah,0x9b
  408c74:	mov    WORD PTR [ecx+ebp*4-0x53],ds
  408c78:	mov    al,0xa6
  408c7a:	push   esi
  408c7b:	sbb    BYTE PTR [eax],0x7c
  408c7e:	(bad)  
  408c7f:	mov    ebp,0x8c2a5dfe
  408c84:	dec    esp
  408c85:	ss dec ebx
  408c87:	repz loope 0x408c2f
  408c8a:	push   esp
  408c8b:	jnp    0x408ca6
  408c8d:	mov    ecx,0x9c2a8bd
  408c92:	repnz push ss
  408c94:	xor    BYTE PTR [ecx+edx*2+0x3ec26b41],cl
  408c9b:	iret   
  408c9c:	addr16 (bad) 
  408c9e:	adc    DWORD PTR [ecx+0x62],ecx
  408ca1:	dec    edi
  408ca2:	imul   eax,ecx,0xf731f6
  408ca8:	add    DWORD PTR ds:0xf0ec576f,eax
  408cae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408caf:	cmp    edx,0xd7d329d2
  408cb5:	pop    edi
  408cb6:	sub    eax,0xc61aa3a1
  408cbb:	das    
  408cbc:	xchg   DWORD PTR [edi-0x79],ebx
  408cbf:	dec    edx
  408cc0:	mov    dl,0x4b
  408cc2:	call   0xad3b:0x63ab96b3
  408cc9:	jge    0x408c7e
  408ccb:	inc    ebx
  408ccc:	fidiv  WORD PTR [edi+ecx*2]
  408ccf:	data16 scas al,BYTE PTR es:[edi]
  408cd1:	push   esi
  408cd2:	loopne 0x408c57
  408cd4:	sti    
  408cd5:	mov    dl,0x8f
  408cd7:	fwait
  408cd8:	aam    0xed
  408cda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cdb:	fdivr  DWORD PTR [ebx-0x50977102]
  408ce1:	inc    ebx
  408ce2:	push   0xffffffa7
  408ce4:	clc    
  408ce5:	fwait
  408ce6:	dec    eax
  408ce7:	imul   ebx,DWORD PTR ds:0xc4899e92,0xffffffb1
  408cee:	add    DWORD PTR [ebx],esi
  408cf0:	in     eax,0xe7
  408cf2:	loope  0x408c85
  408cf4:	shr    edi,cl
  408cf6:	outs   dx,DWORD PTR ds:[esi]
  408cf7:	pop    es
  408cf8:	pop    esp
  408cf9:	ret    0xf524
  408cfc:	push   ss
  408cfd:	ds jno 0x408d7d
  408d00:	inc    ebx
  408d01:	call   0xc3f1:0xd78d6f93
  408d08:	push   esp
  408d09:	mov    edx,esp
  408d0b:	pop    ebx
  408d0c:	sub    BYTE PTR cs:[eax],dl
  408d0f:	lds    esi,FWORD PTR [eax-0x7d7c7716]
  408d15:	lods   al,BYTE PTR ds:[esi]
  408d16:	jp     0x408d93
  408d18:	and    BYTE PTR [ebp-0x5e],ch
  408d1b:	test   eax,0x1afeceb1
  408d20:	lods   al,BYTE PTR ds:[esi]
  408d21:	fcmovnu st,st(4)
  408d23:	dec    edi
  408d24:	cli    
  408d25:	adc    DWORD PTR [eax],ebp
  408d27:	(bad)  
  408d29:	aam    0x6d
  408d2b:	jp     0x408d8d
  408d2d:	lock loopne 0x408da7
  408d30:	popa   
  408d31:	jle    0x408d19
  408d33:	mov    cl,0x77
  408d35:	dec    edx
  408d36:	push   eax
  408d37:	sbb    BYTE PTR [ecx+0xc],cl
  408d3a:	les    ebp,FWORD PTR [ecx-0x65508f5]
  408d40:	mov    ds:0x7a2b5141,eax
  408d45:	enter  0x1eeb,0x22
  408d49:	or     edx,DWORD PTR [esi-0x758c3efd]
  408d4f:	icebp  
  408d50:	jg     0x408d86
  408d52:	mov    ds:0x2482930b,al
  408d57:	pop    ds
  408d58:	cli    
  408d59:	gs or  al,0x73
  408d5c:	stos   DWORD PTR es:[edi],eax
  408d5d:	lods   al,BYTE PTR ds:[esi]
  408d5e:	mov    edx,0x8bcd3afe
  408d63:	xchg   esp,eax
  408d64:	mov    bl,0xbf
  408d66:	push   eax
  408d67:	add    dl,BYTE PTR [edx]
  408d69:	call   0x75b5:0xdbffc9dc
  408d70:	rol    DWORD PTR [eax-0x332e10fd],cl
  408d76:	(bad)  
  408d77:	(bad)  
  408d78:	stos   DWORD PTR es:[edi],eax
  408d79:	mov    bl,0xb9
  408d7b:	test   BYTE PTR [edx+0x8b67623],ah
  408d81:	cdq    
  408d82:	jmp    0x9baa83a9
  408d87:	cmp    BYTE PTR [ecx+0x29],dh
  408d8a:	icebp  
  408d8b:	mov    ecx,0xff0abcdc
  408d90:	jne    0x408e11
  408d92:	sbb    DWORD PTR [edx],edi
  408d94:	adc    al,0x2a
  408d96:	ins    BYTE PTR es:[edi],dx
  408d97:	iret   
  408d98:	adc    edi,DWORD PTR [eax+0x16020d3]
  408d9e:	xor    BYTE PTR [edx+0x5d22701a],bl
  408da4:	scas   al,BYTE PTR es:[edi]
  408da5:	fstp   DWORD PTR [edi]
  408da7:	jmp    0x408dd6
  408da9:	jp     0x408dab
  408dab:	aas    
  408dac:	add    eax,edx
  408dae:	add    edi,DWORD PTR [edi+ebx*1]
  408db1:	in     eax,dx
  408db2:	inc    esp
  408db3:	rcl    DWORD PTR [ecx],0xe7
  408db6:	int3   
  408db7:	xchg   edx,eax
  408db8:	hlt    
  408db9:	add    eax,DWORD PTR [esi-0x72d3195a]
  408dbf:	test   eax,0xe424000
  408dc4:	add    ah,BYTE PTR [eax+0x34b6b05b]
  408dca:	push   ss
  408dcb:	aam    0x2c
  408dcd:	cmp    edx,DWORD PTR [edi+0x64bac471]
  408dd3:	(bad)  [edx-0x52]
  408dd6:	cmp    ah,dl
  408dd8:	dec    esp
  408dd9:	xchg   esp,eax
  408dda:	dec    edx
  408ddb:	sbb    dl,dh
  408ddd:	jae    0x408d7e
  408ddf:	aas    
  408de0:	test   al,al
  408de2:	stos   BYTE PTR es:[edi],al
  408de3:	inc    ecx
  408de4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408de5:	add    edi,eax
  408de7:	ret    0x35e6
  408dea:	jne    0x408dc2
  408dec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ded:	fcmovb st,st(2)
  408def:	idiv   DWORD PTR [ebp-0x30]
  408df2:	mov    dl,ch
  408df4:	jo     0x408e66
  408df6:	adc    DWORD PTR [edi],ecx
  408df8:	mov    ecx,es
  408dfa:	or     al,0x6b
  408dfc:	(bad)  
  408dfd:	repnz dec ebx
  408dff:	ret    0xf5ac
  408e02:	adc    DWORD PTR [esi-0x5e],edi
  408e05:	or     bl,BYTE PTR [edi]
  408e07:	shl    DWORD PTR [edx+0x7c],1
  408e0a:	jae    0x408dd2
  408e0c:	dec    ecx
  408e0d:	inc    edx
  408e0e:	inc    edx
  408e0f:	sahf   
  408e10:	cmc    
  408e11:	pop    ss
  408e12:	add    al,dh
  408e14:	test   BYTE PTR [ecx-0x2918d0fa],ch
  408e1a:	sahf   
  408e1b:	int    0xbe
  408e1d:	sub    al,0x5e
  408e1f:	jnp    0x408e2f
  408e21:	loop   0x408dcb
  408e23:	sbb    DWORD PTR [ebx-0x46eafad0],edx
  408e29:	mov    WORD PTR [esi],es
  408e2b:	call   0xbef86c8a
  408e30:	out    dx,al
  408e31:	fs inc ecx
  408e33:	aas    
  408e34:	lods   al,BYTE PTR ds:[esi]
  408e35:	sub    ebx,esp
  408e37:	push   ebx
  408e38:	sbb    al,0xe2
  408e3a:	and    dh,BYTE PTR [edi+ebx*8]
  408e3d:	or     ebp,eax
  408e3f:	pushf  
  408e40:	push   esp
  408e41:	mov    ecx,0xf535f998
  408e46:	sbb    ah,BYTE PTR [esi+0x4eafde96]
  408e4c:	sti    
  408e4d:	xchg   DWORD PTR [ecx+0x1d97d822],esi
  408e53:	cmp    eax,0xd4e63719
  408e58:	mov    BYTE PTR [ebx-0x2d41aefe],dh
  408e5e:	push   ebx
  408e5f:	jmp    0x408e85
  408e61:	popf   
  408e62:	call   0x5da9:0x14719764
  408e69:	je     0x408ee4
  408e6b:	adc    BYTE PTR cs:[edi],cl
  408e6e:	sahf   
  408e6f:	push   esp
  408e70:	or     bl,BYTE PTR [eax]
  408e72:	pop    ecx
  408e73:	dec    ecx
  408e74:	test   eax,0xd2f3558e
  408e79:	xor    BYTE PTR [ebp+edx*4-0x45],dh
  408e7d:	jnp    0x408e74
  408e7f:	pop    edi
  408e80:	xor    ebp,DWORD PTR [esi-0xd]
  408e83:	mov    ecx,ss
  408e85:	(bad)  
  408e86:	xor    ebx,DWORD PTR [ecx-0x73]
  408e89:	fidiv  DWORD PTR ds:0xff1e27c9
  408e8f:	in     al,dx
  408e90:	and    ah,BYTE PTR [ebx-0x4f9edd6e]
  408e96:	inc    edi
  408e97:	adc    al,0x5e
  408e99:	push   0x2f477f71
  408e9e:	ret    
  408e9f:	xor    bl,dh
  408ea1:	leave  
  408ea2:	ds push edx
  408ea4:	sar    DWORD PTR [eax],0x7
  408ea7:	xor    BYTE PTR [edx],bl
  408ea9:	xchg   esi,eax
  408eaa:	pop    ds
  408eab:	ds call 0x63b0:0x22e994cc
  408eb3:	adc    DWORD PTR [edi],eax
  408eb5:	inc    edi
  408eb6:	jl     0x408e92
  408eb8:	sar    DWORD PTR [edi-0x78e33c35],0x24
  408ebf:	aaa    
  408ec0:	mov    dl,0x86
  408ec2:	xchg   ebp,eax
  408ec3:	sub    DWORD PTR [ebx],esi
  408ec5:	cs addr16 div dh
  408ec9:	fdiv   DWORD PTR [ebx-0xc8dab47]
  408ecf:	pusha  
  408ed0:	xchg   DWORD PTR [eax-0xe0df47f],ecx
  408ed6:	out    0x28,al
  408ed8:	or     al,0xa3
  408eda:	les    edi,FWORD PTR [eax+0x32]
  408edd:	xchg   esi,eax
  408ede:	adc    dh,BYTE PTR [ebx-0x37]
  408ee1:	xchg   ebx,eax
  408ee2:	jb     0x408e88
  408ee4:	adc    BYTE PTR [ebp+0x70],al
  408ee7:	add    eax,0xbcba02
  408eec:	push   eax
  408eed:	push   ebx
  408eee:	inc    BYTE PTR [ebx+0x17]
  408ef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ef2:	pop    esp
  408ef3:	sbb    dl,BYTE PTR [eax+0x7a]
  408ef6:	into   
  408ef7:	(bad)  
  408ef8:	std    
  408ef9:	fnsave [edx-0x36]
  408efc:	inc    ecx
  408efd:	xchg   ebx,eax
  408efe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408eff:	jcxz   0x408f2b
  408f02:	cmp    al,0x31
  408f04:	lock pop ecx
  408f06:	pop    ds
  408f07:	inc    esi
  408f08:	fs mov ah,0xea
  408f0b:	and    DWORD PTR [esi+0x6e],0xffffffee
  408f0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f10:	adc    eax,0x1bedb9d5
  408f15:	iret   
  408f16:	or     BYTE PTR [edi],dl
  408f18:	cmp    BYTE PTR [esi],dh
  408f1a:	pop    ebx
  408f1b:	mov    edx,0x18943437
  408f20:	cmp    ah,ah
  408f22:	push   esp
  408f23:	popf   
  408f24:	cld    
  408f25:	cli    
  408f26:	scas   eax,DWORD PTR es:[edi]
  408f27:	xlat   BYTE PTR ds:[ebx]
  408f28:	xor    eax,0x3218fcfe
  408f2d:	ret    
  408f2e:	bound  ebx,QWORD PTR [edx]
  408f30:	jo     0x408f72
  408f32:	inc    esp
  408f33:	push   edx
  408f34:	mov    cl,0x26
  408f36:	int3   
  408f37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f38:	xlat   BYTE PTR ds:[ebx]
  408f39:	push   eax
  408f3a:	fstp   QWORD PTR [eax+0x76c51479]
  408f40:	fs lahf 
  408f42:	shl    BYTE PTR [ecx],cl
  408f44:	popa   
  408f45:	adc    al,0x17
  408f47:	xor    bh,BYTE PTR [ecx-0x5b934582]
  408f4d:	or     eax,0xa9375546
  408f52:	jmp    0x408ee2
  408f54:	ficom  DWORD PTR [ecx-0x43]
  408f57:	sbb    al,0xa1
  408f59:	mov    cl,al
  408f5b:	ja     0x408f0a
  408f5d:	aaa    
  408f5e:	xor    eax,0x9084b64c
  408f63:	push   esi
  408f64:	inc    edx
  408f65:	sub    eax,DWORD PTR ds:0xca9eae4f
  408f6b:	mov    al,0x37
  408f6d:	xchg   ebp,eax
  408f6e:	lods   eax,DWORD PTR ds:[esi]
  408f6f:	jle    0x408f40
  408f71:	clc    
  408f72:	pop    es
  408f73:	xchg   ecx,eax
  408f74:	add    ch,BYTE PTR [esi+0x77]
  408f77:	jbe    0x408f43
  408f79:	mov    ah,0x1c
  408f7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f7c:	dec    edi
  408f7e:	test   BYTE PTR [ebp-0x8],0xc8
  408f82:	and    BYTE PTR [ecx-0x59c08ac8],ah
  408f88:	or     al,0x79
  408f8a:	fwait
  408f8b:	not    edi
  408f8d:	inc    ebx
  408f8e:	mov    esi,0xb60038aa
  408f93:	ja     0x408f4c
  408f95:	(bad)  
  408f96:	xchg   esi,eax
  408f97:	iret   
  408f98:	mov    eax,0x61390a1c
  408f9d:	ret    
  408f9e:	outs   dx,BYTE PTR ds:[esi]
  408f9f:	fwait
  408fa0:	xlat   BYTE PTR ds:[ebx]
  408fa1:	fmulp  st(7),st
  408fa3:	ins    BYTE PTR es:[edi],dx
  408fa4:	xor    DWORD PTR [ebx-0x43],edx
  408fa7:	vmread ebx,esi
  408faa:	dec    ecx
  408fab:	rcl    BYTE PTR [bx+si-0x12cb],1
  408fb0:	int    0x5e
  408fb2:	mov    edx,0x1cf89105
  408fb7:	push   0xffffffbc
  408fb9:	push   esp
  408fba:	push   0xd9a4d9e1
  408fbf:	inc    edi
  408fc0:	gs daa 
  408fc2:	or     cl,dh
  408fc4:	cmp    DWORD PTR [ecx],0x7071ae65
  408fca:	inc    ebp
  408fcb:	sbb    al,0x4e
  408fcd:	inc    esp
  408fce:	xor    al,0x6c
  408fd0:	dec    ebp
  408fd1:	jns    0x408f96
  408fd3:	mov    al,0x47
  408fd5:	fild   DWORD PTR [esi+edx*8]
  408fd8:	sbb    eax,0xcecea3eb
  408fdd:	sbb    esi,esi
  408fdf:	loopne 0x408fdb
  408fe1:	push   eax
  408fe2:	lds    edi,FWORD PTR [esp+ebx*2+0x1f]
  408fe6:	adc    al,0x8
  408fe8:	push   0xffffffc0
  408fea:	jle    0x409056
  408fec:	sub    BYTE PTR [ecx-0xbdffe0f],dl
  408ff2:	popa   
  408ff3:	dec    esi
  408ff4:	add    eax,0xfe542636
  408ff9:	frstor [edi]
  408ffb:	jecxz  0x40904b
  408ffd:	dec    ebp
  408ffe:	pop    edx
  408fff:	(bad)  
  409000:	in     eax,0x71
  409002:	sub    bl,BYTE PTR [ebx-0x2c47160]
  409008:	xor    dl,BYTE PTR [edi+ebx*8-0x5f]
  40900c:	mov    al,ds:0xf0eaf47b
  409011:	sti    
  409012:	jae    0x409005
  409014:	vcmpss xmm6,xmm0,DWORD PTR [eax],0x65
  409019:	jp     0x408fe3
  40901b:	and    ecx,DWORD PTR [esi+0x48]
  40901e:	sub    DWORD PTR [ecx],edi
  409020:	push   es
  409021:	aam    0x6a
  409023:	and    al,0x2c
  409025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409026:	push   es
  409027:	stc    
  409028:	pop    es
  409029:	and    ebx,DWORD PTR [edx+ebx*8-0x1c]
  40902d:	lahf   
  40902e:	dec    edi
  40902f:	fdiv   QWORD PTR [ebx-0x624bcde8]
  409035:	push   cs
  409036:	xchg   esi,eax
  409037:	and    eax,0x5ce579ff
  40903c:	test   al,0x8d
  40903e:	and    eax,0x2737239c
  409043:	fsub   st(1),st
  409045:	cmp    BYTE PTR [ecx-0x48],cl
  409048:	push   ss
  409049:	test   al,0x6a
  40904b:	add    eax,0xee7f4668
  409050:	jnp    0x409029
  409052:	rcl    DWORD PTR [edx+edx*8-0x74],0x9b
  409057:	or     esp,DWORD PTR [eax+0x745e389e]
  40905d:	out    dx,al
  40905e:	(bad)  [esi+eax*4-0x32]
  409062:	lods   eax,DWORD PTR ds:[esi]
  409063:	int    0x42
  409065:	sbb    DWORD PTR [esi+0x77],edx
  409068:	inc    ebp
  409069:	push   edx
  40906a:	adc    DWORD PTR [ebp+0x44ee278e],edi
  409070:	add    eax,0x2c294d4
  409075:	(bad)  
  409076:	jmp    0x28f9bd53
  40907b:	push   eax
  40907c:	data16 (bad) 
  40907e:	mov    edx,0x93eb2b24
  409083:	fdiv   DWORD PTR [edx+ebp*1-0x246f10bb]
  40908a:	out    dx,eax
  40908b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40908c:	mov    cl,0x88
  40908e:	pop    ds
  40908f:	or     DWORD PTR [edi],edx
  409091:	sbb    esi,DWORD PTR [esi+eiz*1-0x17]
  409095:	sub    al,0xde
  409097:	sbb    edx,DWORD PTR [ebx+0xe094c17]
  40909d:	in     al,dx
  40909e:	retf   
  40909f:	(bad)  
  4090a0:	mov    dh,0x30
  4090a2:	dec    esp
  4090a3:	gs ret 
  4090a5:	mov    es,ebp
  4090a7:	inc    esi
  4090a8:	test   eax,0xcc15b69b
  4090ad:	fbld   TBYTE PTR [esi-0x5e679dfb]
  4090b3:	sahf   
  4090b4:	and    BYTE PTR [esi+0x1a5db6b2],al
  4090ba:	mov    bx,0xda78
  4090be:	aaa    
  4090bf:	mov    esi,0xffad61f1
  4090c4:	js     0x40904c
  4090c6:	adc    al,0x1f
  4090c8:	mov    edx,0xd03e2e6d
  4090cd:	scas   al,BYTE PTR es:[edi]
  4090ce:	loop   0x4090de
  4090d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090d1:	jg     0x4090d0
  4090d3:	lahf   
  4090d4:	rol    BYTE PTR [edi+0x6d],1
  4090d7:	mov    WORD PTR [edx+edx*8+0x3],ds
  4090db:	push   ds
  4090dc:	lds    edi,FWORD PTR [eax+0x7ae56134]
  4090e2:	push   es
  4090e3:	xchg   edx,eax
  4090e4:	jo     0x409105
  4090e6:	xchg   edx,eax
  4090e7:	es sub ecx,esi
  4090ea:	jae    0x4090c0
  4090ec:	ficomp DWORD PTR [ebx-0x9]
  4090ef:	cs sbb esp,esp
  4090f2:	push   ebx
  4090f3:	xor    al,0x9f
  4090f5:	out    0x18,eax
  4090f7:	sub    al,0xab
  4090f9:	jle    0x4090a9
  4090fb:	jb     0x4090bc
  4090fd:	xchg   ebx,eax
  4090fe:	xor    BYTE PTR [esi-0x53],0x90
  409102:	sbb    al,BYTE PTR [edi-0x24]
  409105:	out    dx,eax
  409106:	cmp    cl,0x2
  409109:	ret    0x3305
  40910c:	mov    esp,0x5474db0b
  409111:	jne    0x409189
  409113:	push   ebp
  409114:	ins    DWORD PTR es:[edi],dx
  409115:	xor    esi,ebp
  409117:	daa    
  409118:	test   DWORD PTR [ecx+ebx*2],edi
  40911b:	push   0x5b51e4cb
  409120:	fst    DWORD PTR [edx-0x6]
  409123:	and    eax,0xa4fb45fd
  409128:	lds    eax,FWORD PTR [edi-0x8]
  40912b:	sub    al,0x7a
  40912d:	sub    DWORD PTR [esi+eax*4],ebp
  409130:	in     al,dx
  409131:	cmc    
  409132:	std    
  409133:	std    
  409134:	out    0x3d,al
  409136:	adc    al,0xc3
  409138:	mov    bh,0x69
  40913a:	dec    ebx
  40913b:	dec    esp
  40913c:	rcr    BYTE PTR [edx+0xd],0xd2
  409140:	xor    al,0x3a
  409142:	xor    BYTE PTR [eax+0x25],0xbc
  409146:	xor    eax,0xabdf23aa
  40914b:	fisttp DWORD PTR [edx+ebp*2]
  40914e:	scas   eax,DWORD PTR es:[edi]
  40914f:	mov    edx,0x8214dcd8
  409154:	and    bh,ah
  409156:	addr16 pop esp
  409158:	into   
  409159:	xchg   ebx,eax
  40915a:	adc    al,0x84
  40915c:	aaa    
  40915d:	xlat   BYTE PTR ds:[ebx]
  40915e:	xchg   BYTE PTR [esi-0x4c],bh
  409161:	stc    
  409162:	sub    esp,0x4e
  409165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409166:	ins    DWORD PTR es:[edi],dx
  409167:	sub    BYTE PTR [ebx],cl
  409169:	cmp    edx,DWORD PTR [esi-0x26]
  40916c:	dec    edx
  40916d:	in     al,dx
  40916e:	mov    dh,0x2d
  409170:	out    0x6b,eax
  409172:	and    al,0xb
  409174:	imul   edi,DWORD PTR [edx-0x281da282],0xffffffea
  40917b:	mov    WORD PTR ss:[ecx],gs
  40917e:	retf   0x5679
  409181:	outs   dx,BYTE PTR ds:[esi]
  409182:	dec    esp
  409183:	stc    
  409184:	cmp    ecx,0x263a3aae
  40918a:	aaa    
  40918b:	sar    eax,cl
  40918d:	clc    
  40918e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40918f:	jg     0x409138
  409191:	jnp    0x40916c
  409193:	adc    DWORD PTR [edi+0x54],0x55
  409197:	sbb    esi,DWORD PTR [edi+edi*8]
  40919a:	cdq    
  40919b:	add    ebx,ecx
  40919d:	test   al,0x36
  40919f:	in     eax,0xaa
  4091a1:	loopne 0x409158
  4091a3:	and    DWORD PTR [eax-0x47],esp
  4091a6:	outs   dx,BYTE PTR ds:[esi]
  4091a7:	sbb    dh,BYTE PTR [ecx]
  4091a9:	test   ah,0x66
  4091ac:	xchg   esi,eax
  4091ad:	jae    0x4091b8
  4091af:	inc    edx
  4091b0:	xor    BYTE PTR [ebx],0xa6
  4091b3:	mov    WORD PTR [edx+0xa],ss
  4091b6:	sti    
  4091b7:	test   eax,0x8306b424
  4091bc:	push   0xffffffa0
  4091be:	loope  0x4091ae
  4091c0:	iret   
  4091c1:	cmp    bh,al
  4091c3:	xchg   ecx,eax
  4091c4:	add    al,BYTE PTR [esi+0x79]
  4091c7:	es jp  0x4091fd
  4091ca:	test   ah,0xb3
  4091cd:	hlt    
  4091ce:	call   0xe87671e8
  4091d3:	inc    eax
  4091d4:	imul   eax,DWORD PTR [edx],0x91024fcc
  4091da:	pushf  
  4091db:	push   0xffffffed
  4091dd:	(bad)  
  4091de:	test   eax,0xb2ee04d3
  4091e3:	mov    ds:0x4419249c,eax
  4091e8:	and    al,0x75
  4091ea:	repz call 0x647351f5
  4091f0:	iret   
  4091f1:	out    dx,al
  4091f2:	xor    BYTE PTR [esi],dl
  4091f4:	mov    BYTE PTR [eax+0x6f],bl
  4091f7:	retf   0x50fd
  4091fa:	lahf   
  4091fb:	mov    al,ds:0x26e819da
  409200:	nop
  409201:	xor    al,0xe2
  409203:	sub    edx,ecx
  409205:	lea    esp,[ebx+0x37c108fb]
  40920b:	jle    0x409277
  40920d:	out    dx,al
  40920e:	cmp    dh,cl
  409210:	and    BYTE PTR [esi-0x4447e97b],dh
  409216:	mov    ds:0x82a7945,eax
  40921b:	ret    0x57c9
  40921e:	call   0xcf5a832d
  409223:	cdq    
  409224:	psadbw mm0,QWORD PTR [edi-0x241ceeb]
  40922b:	js     0x40920d
  40922d:	repz fist WORD PTR [ebp+0x50]
  409231:	add    esi,DWORD PTR [edi]
  409233:	icebp  
  409234:	sahf   
  409235:	jb     0x409261
  409237:	xor    edi,DWORD PTR [eax]
  409239:	push   ecx
  40923a:	mov    al,ds:0xa4e4e0af
  40923f:	jmp    0xa135:0xfa369d16
  409246:	int3   
  409247:	jmp    0x2a5c2a01
  40924c:	adc    al,0xa5
  40924e:	cmp    BYTE PTR [edx+eax*4+0x2],bh
  409252:	xchg   esp,eax
  409253:	cmovb  ebp,DWORD PTR [esi-0xc]
  409257:	pop    ebp
  409258:	cmc    
  409259:	mov    al,BYTE PTR [esi-0x1bbda18d]
  40925f:	push   eax
  409260:	pop    ebp
  409261:	mov    WORD PTR [eax],cs
  409263:	push   ds
  409264:	test   eax,0x9b0bca11
  409269:	scas   eax,DWORD PTR es:[edi]
  40926a:	xlat   BYTE PTR ds:[ebx]
  40926b:	ret    
  40926c:	jae    0x409221
  40926e:	xlat   BYTE PTR ds:[ebx]
  40926f:	and    eax,0x548c6f00
  409274:	adc    DWORD PTR [ebx+0x33],edx
  409277:	pop    eax
  409278:	add    DWORD PTR [edx-0x45],ebx
  40927b:	(bad)  [ecx+0x4603e956]
  409281:	ror    BYTE PTR [esi-0x2080da75],cl
  409287:	dec    DWORD PTR [ecx-0x77131f7]
  40928d:	xchg   edi,eax
  40928e:	mov    bh,0x57
  409290:	stos   DWORD PTR es:[edi],eax
  409291:	sub    DWORD PTR [edx],edx
  409293:	xchg   edx,eax
  409294:	ror    DWORD PTR [ecx+eax*8],cl
  409297:	test   al,0x34
  409299:	push   ds
  40929a:	cmp    BYTE PTR [ebx+ecx*1-0x2a],bh
  40929e:	in     eax,0x50
  4092a0:	mov    ah,0xc2
  4092a2:	test   eax,0x76df57d0
  4092a7:	push   esi
  4092a8:	outs   dx,BYTE PTR ds:[esi]
  4092a9:	fild   QWORD PTR [ebp-0x4890dda0]
  4092af:	xor    BYTE PTR [edx+0x4c],bl
  4092b2:	and    BYTE PTR ds:[edx+0x67d22dc8],cl
  4092b9:	inc    esp
  4092ba:	mov    ds:0x24e95c76,eax
  4092bf:	pop    edi
  4092c0:	out    0x97,al
  4092c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092c3:	out    0x8c,eax
  4092c5:	dec    BYTE PTR [eax]
  4092c7:	js     0x409284
  4092c9:	dec    edi
  4092ca:	and    DWORD PTR [ebp-0xd],ebx
  4092cd:	xchg   DWORD PTR [eax],ebx
  4092cf:	imul   edx,esp,0x88add358
  4092d5:	jle    0x409340
  4092d7:	leave  
  4092d8:	psrlq  mm6,mm4
  4092db:	and    DWORD PTR [ebp+0x2a],0x3c
  4092df:	push   esi
  4092e0:	xor    ecx,DWORD PTR [edx]
  4092e2:	jmp    0x897c:0x8402324a
  4092e9:	inc    edi
  4092ea:	sub    cl,bh
  4092ec:	popf   
  4092ed:	stos   BYTE PTR es:[edi],al
  4092ee:	mov    BYTE PTR [ebx-0x7a],dl
  4092f1:	xor    eax,0xf3adba73
  4092f6:	mov    ah,BYTE PTR [eax+0x57]
  4092f9:	mov    ds:0x4c89e72d,eax
  4092fe:	push   0xffffffaa
  409300:	stos   DWORD PTR es:[edi],eax
  409301:	mov    al,ds:0x5de7c742
  409306:	clc    
  409307:	(bad)  
  409308:	xlat   BYTE PTR ds:[ebx]
  409309:	push   es
  40930a:	and    eax,0x456b4f6c
  40930f:	scas   al,BYTE PTR es:[edi]
  409310:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409311:	push   esi
  409312:	(bad)  
  409313:	fst    DWORD PTR ds:0xca9a52a1
  409319:	or     cl,ah
  40931b:	fistp  DWORD PTR [ebx+esi*4]
  40931e:	xchg   edx,eax
  40931f:	add    bh,BYTE PTR [edx+0x4f]
  409322:	dec    eax
  409323:	and    cl,0xb2
  409326:	add    BYTE PTR [edi+0x6f],ah
  409329:	or     DWORD PTR [edi-0xc],0xfc10553
  409330:	xchg   esp,eax
  409331:	test   DWORD PTR [ebp-0x29b33fba],eax
  409337:	dec    ebx
  409338:	fcos   
  40933a:	sar    BYTE PTR fs:[edi+0x38],0x99
  40933f:	in     al,0xc3
  409341:	pop    edi
  409342:	push   eax
  409343:	sub    ebx,DWORD PTR [esi+0x45]
  409346:	sbb    BYTE PTR [edx-0x63],0x65
  40934a:	jge    0x40937f
  40934c:	cli    
  40934d:	lahf   
  40934e:	test   DWORD PTR [ebx-0x62],esi
  409351:	scas   al,BYTE PTR es:[edi]
  409352:	dec    ebp
  409353:	pop    ecx
  409354:	sahf   
  409355:	(bad)  
  409356:	call   0x75a4:0x386e4c3d
  40935d:	or     esi,eax
  40935f:	jno    0x4092fd
  409361:	jmp    0x42a5ffc5
  409366:	retf   
  409367:	push   edx
  409368:	loopne 0x409384
  40936a:	mov    ds:0xad7b7865,eax
  40936f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409370:	and    al,0x5d
  409372:	and    al,0xef
  409374:	test   bl,0xb4
  409377:	pop    edx
  409378:	dec    eax
  409379:	into   
  40937a:	mov    bl,0x55
  40937c:	stc    
  40937d:	aaa    
  40937e:	or     DWORD PTR [esi+0x1a],eax
  409381:	dec    edx
  409382:	sub    bh,al
  409384:	lahf   
  409385:	sub    eax,0x3b9288f5
  40938a:	mov    ch,0xf9
  40938c:	(bad)  
  40938d:	adc    ecx,DWORD PTR [edi-0x2a9e68a]
  409393:	jmp    0xa619bd4c
  409398:	pop    ds
  409399:	dec    ebx
  40939a:	in     al,dx
  40939b:	mov    edi,0xce417372
  4093a0:	rol    al,0x31
  4093a3:	stos   DWORD PTR es:[edi],eax
  4093a4:	mov    dh,0x6d
  4093a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093a7:	rcl    bh,1
  4093a9:	(bad)  
  4093aa:	out    dx,eax
  4093ab:	pop    ebp
  4093ac:	cmp    DWORD PTR [esi],0xd7089f3c
  4093b2:	repnz or bl,BYTE PTR [edi]
  4093b5:	les    esp,FWORD PTR [esi-0x77]
  4093b8:	(bad)
  4093bb:	mov    bh,0xae
  4093bd:	push   ss
  4093be:	add    bl,BYTE PTR [edx+0x61b8e826]
  4093c4:	out    dx,al
  4093c5:	test   eax,0x5c784370
  4093ca:	out    dx,eax
  4093cb:	xchg   edi,eax
  4093cc:	pop    ds
  4093cd:	daa    
  4093ce:	jg     0x409409
  4093d0:	xor    al,0xbb
  4093d2:	int3   
  4093d3:	bound  ebp,QWORD PTR [esi]
  4093d5:	or     al,0x52
  4093d7:	inc    edx
  4093d8:	call   0x9be0:0x1b60a6ce
  4093df:	imul   ax,WORD PTR [eax+0x5c285b9f],0x3e16
  4093e8:	mov    ah,0x58
  4093ea:	push   0x28
  4093ec:	pop    eax
  4093ed:	jp     0x4093c3
  4093ef:	push   edi
  4093f0:	and    eax,0xc0ebb5df
  4093f5:	sub    ebp,DWORD PTR [ebp-0x51]
  4093f8:	push   ebx
  4093f9:	retf   0x683
  4093fc:	test   eax,0x182f2f10
  409401:	sar    DWORD PTR [edx+0x9],1
  409404:	fistp  QWORD PTR [edx+0x2eb8b379]
  40940a:	lock data16 jecxz 0x4093ee
  40940e:	in     ax,dx
  409410:	in     eax,dx
  409411:	jge    0x409457
  409413:	pop    ebp
  409414:	daa    
  409415:	push   edx
  409416:	mov    DWORD PTR [esi+0x589a1ab1],0x8fa99654
  409420:	cmp    cl,dh
  409422:	adc    BYTE PTR [ecx+0x58aad634],ah
  409428:	xchg   ebx,eax
  409429:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40942a:	(bad)  
  40942b:	push   ss
  40942c:	call   0xc7b01456
  409431:	aas    
  409432:	out    dx,eax
  409433:	sbb    DWORD PTR [eax],edx
  409435:	test   DWORD PTR [eax+eiz*8-0x36],0x6ec44
  40943d:	inc    esi
  40943e:	xor    bl,BYTE PTR [ebx]
  409440:	push   0x52d69d9a
  409445:	jmp    0x4094bc
  409447:	jnp    0x409403
  409449:	stc    
  40944a:	mov    edi,DWORD PTR [ecx+0x23]
  40944d:	jmp    0x792a:0xb5ef49dc
  409454:	add    al,0x6d
  409456:	jbe    0x4093fb
  409458:	xchg   ecx,eax
  409459:	(bad)  [esi+edx*4]
  40945c:	push   cs
  40945d:	pusha  
  40945e:	cmp    al,0x4c
  409460:	popf   
  409461:	jb     0x409467
  409463:	loope  0x40946e
  409465:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409466:	loope  0x40944a
  409468:	xchg   ecx,eax
  409469:	retf   
  40946a:	loope  0x40947b
  40946c:	lods   al,BYTE PTR ds:[esi]
  40946d:	ja     0x40948f
  40946f:	sbb    al,0x48
  409471:	inc    ecx
  409472:	jo     0x409491
  409474:	movlps QWORD PTR [ebp-0xd],xmm1
  409478:	loope  0x40940f
  40947a:	or     ah,dh
  40947c:	gs mov cl,0x4
  40947f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409480:	stc    
  409481:	xchg   edx,eax
  409482:	jecxz  0x409450
  409484:	mov    ah,0xf9
  409486:	inc    eax
  409487:	(bad)  
  409488:	lods   eax,DWORD PTR ds:[esi]
  409489:	mov    BYTE PTR [edi+0x2edb20c9],0x9
  409490:	pop    edx
  409491:	mov    al,ds:0x6b5d08a8
  409496:	in     al,dx
  409497:	adc    DWORD PTR [eax+0x47],ecx
  40949a:	or     eax,0x5676d352
  40949f:	(bad)  
  4094a0:	sub    eax,0x78c8012
  4094a5:	push   ecx
  4094a6:	cli    
  4094a7:	xchg   DWORD PTR [esi+ecx*4-0x533f8f1e],edi
  4094ae:	inc    edi
  4094af:	sbb    dl,BYTE PTR [ecx-0x4f]
  4094b2:	mov    esi,0x30183971
  4094b7:	(bad)  
  4094b8:	cmp    DWORD PTR [esp+esi*4-0x4d],esp
  4094bc:	sbb    DWORD PTR [esi],ebx
  4094be:	xchg   BYTE PTR [ebp-0x4804b0f3],al
  4094c4:	jmp    0x409520
  4094c6:	mov    dl,0x67
  4094c8:	ins    DWORD PTR es:[edi],dx
  4094c9:	pusha  
  4094ca:	das    
  4094cb:	cwde   
  4094cc:	sahf   
  4094cd:	ins    BYTE PTR es:[edi],dx
  4094ce:	mov    al,0x89
  4094d0:	jae    0x40948e
  4094d2:	pop    ecx
  4094d3:	shr    BYTE PTR [ebx+0x2e],1
  4094d6:	sbb    ebx,DWORD PTR [ebx]
  4094d8:	dec    esi
  4094d9:	jb     0x40948c
  4094db:	inc    esp
  4094dc:	es add ebx,0xa59daa95
  4094e3:	stos   DWORD PTR es:[edi],eax
  4094e4:	jnp    0x409551
  4094e6:	xchg   DWORD PTR ds:0x55389e71,ebp
  4094ec:	xchg   esi,eax
  4094ed:	std    
  4094ee:	clc    
  4094ef:	mov    ebp,0x7d144948
  4094f4:	jae    0x4094f4
  4094f6:	test   BYTE PTR ds:0x1479417f,dl
  4094fc:	imul   edi,DWORD PTR ds:0xdb7f42e3,0xffffffb1
  409503:	xchg   edx,eax
  409504:	daa    
  409505:	inc    ebp
  409506:	sar    ch,cl
  409508:	pop    edi
  409509:	cmovno edx,DWORD PTR [ebx+0x13b67201]
  409510:	dec    ecx
  409511:	mov    esi,0x8d13b388
  409516:	cmp    DWORD PTR [ecx+0x472cc6bb],esi
  40951c:	out    dx,al
  40951d:	inc    esi
  40951e:	dec    ecx
  40951f:	rcl    DWORD PTR [ecx],0x33
  409522:	arpl   WORD PTR [esi],di
  409524:	rcl    ebx,cl
  409526:	sub    edi,DWORD PTR [esp+esi*4]
  409529:	sub    DWORD PTR [ecx+esi*8+0x3b87b8d1],ebp
  409530:	sti    
  409531:	inc    ecx
  409532:	mov    dl,0xff
  409534:	loope  0x409582
  409536:	fadd   QWORD PTR [ecx+0x7]
  409539:	pusha  
  40953a:	dec    ebp
  40953b:	fwait
  40953c:	cs inc edx
  40953e:	(bad)  
  40953f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409540:	jbe    0x4095b9
  409542:	ins    DWORD PTR es:[edi],dx
  409543:	test   al,0xd0
  409545:	adc    dh,ah
  409547:	sub    dh,BYTE PTR [edx]
  409549:	cdq    
  40954a:	inc    ebx
  40954b:	hlt    
  40954c:	mov    esi,db6
  40954f:	xchg   esp,eax
  409550:	fmul   QWORD PTR [edx-0x6315b66]
  409556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409557:	sub    al,0x7b
  409559:	push   esi
  40955a:	fist   WORD PTR [ecx+0x562b2a21]
  409560:	inc    edi
  409561:	sub    ecx,ebx
  409563:	pop    edx
  409564:	pop    ecx
  409565:	aad    0xa9
  409567:	fadd   st(5),st
  409569:	ins    DWORD PTR es:[edi],dx
  40956a:	mov    ch,0x7f
  40956c:	push   es
  40956d:	jne    0x409594
  40956f:	sub    bh,BYTE PTR [edi+0x752d1fd0]
  409575:	sub    esp,edi
  409577:	aas    
  409578:	das    
  409579:	mov    WORD PTR [ecx-0x65],cs
  40957c:	call   0x609e6da3
  409581:	test   al,0xd2
  409583:	push   0xa0f01337
  409588:	xlat   BYTE PTR ds:[ebx]
  409589:	jne    0x4095ca
  40958b:	mov    DWORD PTR [eax+0x4b],esp
  40958e:	pop    ds
  40958f:	xchg   ebx,eax
  409590:	xchg   BYTE PTR ds:0xe2226185,bl
  409596:	in     al,dx
  409597:	mov    fs,WORD PTR [edx]
  409599:	jns    0x4095f5
  40959b:	fnstenv [edx]
  40959d:	das    
  40959e:	shr    ebp,0x6b
  4095a1:	dec    ecx
  4095a2:	mov    al,0x8e
  4095a4:	mov    edx,0x75623561
  4095a9:	adc    eax,DWORD PTR [ebx]
  4095ab:	jo     0x409607
  4095ad:	mov    bl,0xb9
  4095af:	xor    al,0x3a
  4095b1:	and    al,0x3e
  4095b3:	repz jae 0x409603
  4095b6:	add    edi,eax
  4095b8:	xchg   esi,eax
  4095b9:	aas    
  4095ba:	xchg   BYTE PTR [eax-0x50563d81],cl
  4095c0:	dec    eax
  4095c1:	mov    ebx,0xc5e1f3f6
  4095c6:	outs   dx,BYTE PTR ds:[esi]
  4095c7:	imul   edi,DWORD PTR [edx-0x7beff086],0xb4727f6e
  4095d1:	mov    ebp,0x578e0b21
  4095d6:	(bad)  
  4095d7:	inc    edi
  4095d8:	sti    
  4095d9:	gs ds cld 
  4095dc:	shr    BYTE PTR [eax],cl
  4095de:	mov    WORD PTR [esi+0x77480691],ss
  4095e4:	xchg   ebp,eax
  4095e5:	aad    0x2e
  4095e7:	bound  edi,QWORD PTR [ecx-0x27]
  4095ea:	les    ecx,FWORD PTR [ebp-0x2eda66f2]
  4095f0:	call   0x91df:0xe03179b
  4095f7:	les    esp,FWORD PTR [ebp+0x5]
  4095fa:	push   edx
  4095fb:	xchg   eax,eax
  4095fd:	int    0xf3
  4095ff:	fwait
  409600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409601:	mov    eax,0x99bc6fb8
  409606:	adc    DWORD PTR [ebx+esi*8],0xffffffe2
  40960a:	xchg   DWORD PTR [edi],ebx
  40960c:	mov    fs,ebx
  40960e:	in     eax,0x28
  409610:	push   ecx
  409611:	mov    DWORD PTR ds:0xc6ec8f2d,edx
  409617:	mov    ds,WORD PTR [esp+esi*8+0x3e]
  40961b:	imul   BYTE PTR [edx-0x8]
  40961e:	xchg   esi,eax
  40961f:	mov    dh,0x98
  409621:	or     bh,bh
  409623:	imul   eax,DWORD PTR [esi+0x7ff3a804],0x19
  40962a:	mov    eax,0x31054b37
  40962f:	push   esp
  409630:	xchg   edi,eax
  409631:	mov    WORD PTR [esi-0x790f9538],ds
  409637:	xor    ebp,DWORD PTR [esi]
  409639:	(bad)
  40963d:	mov    al,ds:0x3f6c3966
  409642:	mov    bl,0xbf
  409644:	addr16 dec esp
  409646:	sbb    dh,BYTE PTR ds:0x7a6fb11f
  40964c:	cli    
  40964d:	or     eax,0x658fa26a
  409652:	cld    
  409653:	adc    DWORD PTR [esi],eax
  409655:	or     DWORD PTR [esi+0x6b],ecx
  409658:	push   ebp
  409659:	sbb    eax,0xa012c384
  40965e:	jmp    0xc4733643
  409663:	jg     0x4095ef
  409665:	in     eax,dx
  409666:	jnp    0x4096ba
  409668:	sbb    eax,esi
  40966a:	sbb    BYTE PTR [ecx+eax*1+0x7a43a164],0x2b
  409672:	jl     0x409654
  409674:	sbb    edx,DWORD PTR [ebp+edx*1-0x505a9e5a]
  40967b:	stos   BYTE PTR es:[edi],al
  40967c:	adc    DWORD PTR ds:0xf43d0898,ebp
  409682:	xor    dh,BYTE PTR [esi]
  409684:	jmp    0x72d6:0xb5a254cc
  40968b:	pop    ss
  40968c:	mov    eax,0x1e331378
  409691:	ret    
  409692:	sbb    edi,DWORD PTR [esi-0x80]
  409695:	xlat   BYTE PTR ds:[ebx]
  409696:	dec    eax
  409697:	cs cmc 
  409699:	test   al,0x5d
  40969b:	mov    bl,0x4b
  40969d:	adc    ecx,ebp
  40969f:	jnp    0x40966b
  4096a1:	add    bl,BYTE PTR [eax+0x498d00fa]
  4096a7:	jecxz  0x40970b
  4096a9:	(bad)  
  4096aa:	push   eax
  4096ab:	mov    al,0x8e
  4096ad:	pusha  
  4096ae:	mov    al,0x79
  4096b0:	adc    eax,0x481a2e92
  4096b5:	out    dx,al
  4096b6:	xor    al,0x7f
  4096b8:	(bad)  
  4096b9:	(bad)  
  4096ba:	pusha  
  4096bb:	mov    ds:0xb3ce007a,eax
  4096c0:	mov    eax,ds:0x976fdada
  4096c5:	cmp    eax,0xf0df6344
  4096ca:	pop    ss
  4096cb:	adc    ecx,edx
  4096cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096ce:	xchg   esp,eax
  4096cf:	push   ds
  4096d0:	inc    ebp
  4096d1:	and    DWORD PTR [ebx],ebp
  4096d3:	add    bh,BYTE PTR [edi+0x55b0f47e]
  4096d9:	iret   
  4096da:	xor    dh,bl
  4096dc:	test   eax,0xc5c81d0c
  4096e1:	jmp    0x409714
  4096e3:	stos   DWORD PTR es:[edi],eax
  4096e4:	mov    ecx,0xf3436ae5
  4096e9:	cdq    
  4096ea:	ret    
  4096eb:	in     al,0xe2
  4096ed:	mov    ds:0x3116a82e,al
  4096f2:	jecxz  0x4096ea
  4096f4:	dec    edx
  4096f5:	cld    
  4096f6:	sbb    DWORD PTR [ebp-0xd],eax
  4096f9:	arpl   WORD PTR [eax],si
  4096fb:	jno    0x4096c9
  4096fd:	mov    eax,0xc9e534a4
  409702:	daa    
  409703:	jns    0x4096a8
  409705:	arpl   WORD PTR [edx],dx
  409707:	mov    ch,0x3
  409709:	xor    edi,ebp
  40970b:	mov    gs,WORD PTR [edi]
  40970d:	test   eax,0xa32692ce
  409712:	xchg   esi,eax
  409713:	sbb    cl,BYTE PTR [eax+0x2fa69882]
  409719:	jb     0x409726
  40971b:	or     BYTE PTR [esi+0x24],al
  40971e:	push   cs
  40971f:	fwait
  409720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409721:	aaa    
  409722:	jge    0x4096bd
  409724:	and    edi,DWORD PTR [ebx+0x4c4f4a67]
  40972a:	sbb    eax,0x394d4063
  40972f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409730:	movups xmm7,xmm0
  409733:	aam    0xd
  409735:	iret   
  409736:	push   ss
  409737:	(bad)  
  409738:	in     al,dx
  409739:	xchg   BYTE PTR [eax-0x1319c725],ch
  40973f:	pop    ss
  409740:	mov    ?,WORD PTR [eax+ebp*1+0x1c]
  409744:	or     ebp,DWORD PTR [edi+0x45]
  409747:	add    BYTE PTR [edx+esi*4-0x7e7bac41],0x43
  40974f:	mov    cl,0x1a
  409751:	dec    ecx
  409752:	add    bh,BYTE PTR gs:[edx+0x5f851009]
  409759:	sbb    DWORD PTR [ebx+ebx*2-0x13],0x43
  40975e:	cmp    eax,0x9d894517
  409763:	and    eax,0x1382b914
  409768:	std    
  409769:	jl     0x409749
  40976b:	fcomp  DWORD PTR [ebx-0x1b33081a]
  409771:	test   DWORD PTR [ebx],edx
  409773:	jo     0x40971d
  409775:	enter  0xbd9,0xf2
  409779:	lods   al,BYTE PTR ds:[esi]
  40977a:	aad    0xcc
  40977c:	mov    ds:0xe3f4b5b6,eax
  409781:	imul   edi,DWORD PTR [esi-0x13f73929],0x35c0730f
  40978b:	adc    al,0x6d
  40978d:	inc    esp
  40978e:	test   BYTE PTR [esi-0x9],0xcf
  409792:	push   eax
  409793:	add    eax,0x78289d15
  409798:	pop    esp
  409799:	ja     0x409785
  40979b:	push   esi
  40979c:	push   0xfffffff5
  40979e:	call   0x64afab6d
  4097a3:	dec    edi
  4097a4:	retf   0x7b8f
  4097a7:	and    eax,DWORD PTR ds:0xe13e6da3
  4097ad:	fcomp  QWORD PTR [ecx-0x27]
  4097b0:	iret   
  4097b1:	pop    es
  4097b2:	div    BYTE PTR [ebx-0x6e]
  4097b5:	xchg   ebx,eax
  4097b6:	inc    esp
  4097b7:	shl    BYTE PTR [eax],cl
  4097b9:	stos   BYTE PTR es:[edi],al
  4097ba:	scas   eax,DWORD PTR es:[edi]
  4097bb:	(bad)  
  4097bc:	push   0xffffffa9
  4097be:	adc    al,0xc4
  4097c0:	push   ds
  4097c1:	addr16 jg 0x40982d
  4097c4:	push   0xffffffe0
  4097c6:	and    al,0x81
  4097c8:	rcl    DWORD PTR ds:0x3b08fc11,0x3d
  4097cf:	and    al,0x8d
  4097d1:	add    eax,0xfdba95a1
  4097d6:	jle    0x409797
  4097d8:	jmp    0xc4794ad5
  4097dd:	jb     0x409817
  4097df:	mov    dl,0xd5
  4097e1:	iret   
  4097e2:	paddq  mm7,QWORD PTR [ebx]
  4097e5:	int3   
  4097e6:	std    
  4097e7:	pushf  
  4097e8:	scas   eax,DWORD PTR es:[edi]
  4097e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097ea:	dec    esp
  4097eb:	or     eax,0xc200117f
  4097f0:	in     al,dx
  4097f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097f2:	lods   al,BYTE PTR ds:[esi]
  4097f3:	inc    ebx
  4097f4:	fsub   QWORD PTR [eax-0x2c]
  4097f7:	jle    0x4097e7
  4097f9:	or     DWORD PTR [esi+0x1a],ebx
  4097fc:	mov    ebp,0xc4956d5c
  409801:	jae    0x409811
  409803:	xchg   esi,eax
  409804:	rcl    eax,1
  409806:	ret    
  409807:	ins    BYTE PTR es:[edi],dx
  409808:	aad    0x1
  40980a:	dec    ebx
  40980b:	pop    edi
  40980c:	sub    dh,BYTE PTR [edi]
  40980e:	jns    0x409800
  409810:	sub    cl,BYTE PTR [eax+ebx*4+0x76]
  409814:	pop    ds
  409815:	sbb    ebp,DWORD PTR [edi+0x63]
  409818:	fidiv  DWORD PTR [ebx-0x5fbabbf2]
  40981e:	inc    ebp
  40981f:	mov    edi,0x9c2aad15
  409824:	mov    ebx,0xf284111f
  409829:	cwde   
  40982a:	inc    ecx
  40982b:	fstp   TBYTE PTR [edi+edx*4+0x5e]
  40982f:	(bad)  [esi+0x15]
  409832:	pop    esi
  409833:	loop   0x409824
  409835:	xchg   ebp,eax
  409836:	out    dx,eax
  409837:	cs or  eax,0x7c6e5585
  40983d:	mov    WORD PTR [ebp+0x34f2269],es
  409843:	add    eax,0xb2a86f67
  409848:	push   ecx
  409849:	loop   0x4097d9
  40984b:	jle    0x409815
  40984d:	xchg   esi,eax
  40984e:	out    dx,eax
  40984f:	mov    ebx,0x4704e206
  409854:	call   0x9daa3a09
  409859:	pop    ss
  40985a:	and    eax,0x3816efe4
  40985f:	mov    al,ah
  409861:	add    eax,0x9ab1838e
  409866:	fsubr  DWORD PTR ds:0xf496ace
  40986c:	out    0x42,al
  40986e:	mov    ds:0xc574b81b,eax
  409873:	jne    0x409844
  409875:	rol    DWORD PTR [ecx-0x31e0cb6b],cl
  40987b:	fbld   TBYTE PTR [edx+0x3a6a1f37]
  409881:	ss jne 0x4098f6
  409884:	inc    ebp
  409885:	jge    0x409848
  409887:	adc    BYTE PTR [edi-0x7f],0x75
  40988b:	jo     0x40987a
  40988d:	mov    bh,0xa9
  40988f:	fnstsw WORD PTR [ecx]
  409891:	hlt    
  409892:	xor    al,0xd0
  409894:	mov    ds:0xd10ef12d,eax
  409899:	retf   
  40989a:	test   DWORD PTR [edi-0x5f],0xb27fd287
  4098a1:	ret    0xad30
  4098a4:	pop    es
  4098a5:	popa   
  4098a6:	mov    DWORD PTR [ecx-0x9ce02fc],ebp
  4098ac:	push   esp
  4098ad:	in     eax,dx
  4098ae:	push   0x546dd194
  4098b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098b4:	add    BYTE PTR [esi-0x750c1d8b],bh
  4098ba:	lea    ebx,[edx+0x23]
  4098bd:	jo     0x4098be
  4098bf:	xchg   esp,eax
  4098c0:	and    DWORD PTR [ecx+ebx*2-0x28],esp
  4098c4:	push   edi
  4098c5:	in     eax,dx
  4098c6:	jmp    0x40986b
  4098c8:	adc    esi,ebp
  4098ca:	sub    al,0x98
  4098cc:	(bad)  
  4098ce:	xchg   DWORD PTR [esi],ebx
  4098d0:	mov    ecx,0x82ab5622
  4098d5:	lods   al,BYTE PTR ds:[esi]
  4098d6:	or     DWORD PTR ds:0xf27266f3,esp
  4098dc:	mov    ch,dh
  4098de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098df:	add    eax,0x989156bc
  4098e4:	mov    eax,0x5b538fdc
  4098e9:	addr16 dec edi
  4098eb:	pop    es
  4098ec:	jne    0x409932
  4098ee:	xlat   BYTE PTR ds:[ebx]
  4098ef:	sar    esp,0x52
  4098f2:	in     eax,0x3b
  4098f4:	sbb    edx,DWORD PTR [eax]
  4098f6:	mov    ebp,0x59533c13
  4098fb:	sar    BYTE PTR [eax-0x4f3d2e1f],cl
  409901:	dec    ebp
  409902:	ins    BYTE PTR es:[edi],dx
  409903:	dec    ecx
  409904:	jb     0x40997e
  409906:	pop    ds
  409907:	adc    eax,0x47a77a89
  40990c:	mov    DWORD PTR ds:0x7e8f5f8d,ecx
  409912:	pop    ss
  409913:	inc    edx
  409914:	or     DWORD PTR ds:0x38145065,0x70
  40991b:	sbb    al,0xaa
  40991d:	xor    BYTE PTR [esi+0x4b9f61e1],0x9
  409924:	lock sbb ebp,DWORD PTR [esi+esi*1]
  409928:	(bad)  
  409929:	out    dx,eax
  40992a:	ror    BYTE PTR [ebp+0x27],1
  40992d:	repz xchg edi,eax
  40992f:	repnz dec ebp
  409931:	inc    ebx
  409932:	mov    ds:0x6d83cde1,al
  409937:	jne    0x409990
  409939:	and    dl,ah
  40993b:	into   
  40993c:	xor    cl,bh
  40993e:	mov    ebx,0x8c76b9a6
  409943:	add    ch,BYTE PTR [esi+0x134241d1]
  409949:	ret    
  40994a:	idiv   ecx
  40994c:	push   esi
  40994d:	or     cl,BYTE PTR [eax+0x9]
  409950:	fnsave [esi]
  409952:	int3   
  409953:	push   0x4b
  409955:	mov    al,BYTE PTR [ebp-0x2ce3cc94]
  40995b:	jmp    0xf68c495e
  409960:	adc    BYTE PTR [edi],ah
  409962:	test   BYTE PTR [eax],0xe
  409965:	jle    0x40996f
  409967:	aad    0xd9
  409969:	push   esp
  40996a:	cmp    eax,0xab5e5264
  40996f:	dec    edi
  409970:	cmp    al,0xe0
  409972:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409973:	push   0x7b7d291f
  409978:	and    DWORD PTR [edx+0x5f],ebx
  40997b:	sbb    eax,0x97de192
  409980:	inc    eax
  409981:	mov    DWORD PTR [edi],edx
  409983:	bound  esp,QWORD PTR [eax]
  409985:	imul   ebx,DWORD PTR [edx],0x7aee7e27
  40998b:	clc    
  40998c:	push   eax
  40998d:	outs   dx,BYTE PTR ds:[esi]
  40998e:	cmp    BYTE PTR [edi+0x8],bl
  409991:	mov    bl,0xd9
  409993:	bound  ebx,QWORD PTR [esi+0x28cef25c]
  409999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40999a:	(bad)  
  40999b:	xchg   edi,eax
  40999c:	xchg   edx,eax
  40999d:	pop    ds
  40999e:	pop    ebp
  40999f:	pop    ecx
  4099a0:	inc    edx
  4099a1:	retf   0xd934
  4099a4:	xchg   ebp,eax
  4099a5:	shl    BYTE PTR [esi],cl
  4099a7:	pop    edi
  4099a8:	les    ecx,FWORD PTR [eax-0x1704eb71]
  4099ae:	ror    DWORD PTR [ebx],1
  4099b0:	imul   ebx,DWORD PTR [edx+eax*1],0x4f20b2d9
  4099b7:	ret    
  4099b8:	sub    al,BYTE PTR [ebx]
  4099ba:	(bad)  
  4099bc:	(bad)  
  4099bd:	cmp    eax,ebp
  4099bf:	fwait
  4099c0:	popa   
  4099c1:	pop    ebp
  4099c2:	stos   DWORD PTR es:[edi],eax
  4099c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099c4:	sub    esp,DWORD PTR [edx+ecx*1+0x767fd619]
  4099cb:	aaa    
  4099cc:	les    ebx,FWORD PTR [edx]
  4099ce:	or     cl,bh
  4099d0:	mov    ds:0x3ffadf42,al
  4099d5:	in     eax,0xe7
  4099d7:	push   ds
  4099d8:	stc    
  4099d9:	dec    ebx
  4099da:	xlat   BYTE PTR ds:[ebx]
  4099db:	mov    dl,0x5
  4099dd:	and    eax,0x4c850712
  4099e2:	sbb    ebp,ebp
  4099e4:	cld    
  4099e5:	enter  0x9ac2,0x65
  4099e9:	mov    ecx,0xe2bf16d0
  4099ee:	xor    ecx,edx
  4099f0:	xchg   cx,ax
  4099f2:	pop    es
  4099f3:	ins    BYTE PTR es:[edi],dx
  4099f4:	(bad)  
  4099f5:	ja     0x409a3e
  4099f7:	cwde   
  4099f8:	adc    al,0xbc
  4099fa:	dec    ecx
  4099fb:	ja     0x409a43
  4099fd:	aas    
  4099fe:	and    DWORD PTR [eax-0x36],ecx
  409a01:	aaa    
  409a02:	in     al,0xd0
  409a04:	push   esi
  409a05:	test   BYTE PTR [edi],bh
  409a07:	mov    ch,0x3e
  409a09:	adc    edx,DWORD PTR [ebp-0x379e9a53]
  409a0f:	inc    ecx
  409a10:	(bad)  
  409a11:	lock retf 0xacb2
  409a15:	adc    dl,ah
  409a17:	repnz cmp DWORD PTR gs:[ecx+0x233c8338],ebx
  409a1f:	inc    esp
  409a20:	xor    edx,DWORD PTR [ecx+edi*2-0x2b7241e9]
  409a27:	retf   0x7176
  409a2a:	outs   dx,DWORD PTR ds:[esi]
  409a2b:	cmp    dl,BYTE PTR [eax]
  409a2d:	stc    
  409a2e:	jno    0x409a67
  409a30:	or     edx,DWORD PTR [ebp-0x22518179]
  409a36:	ror    DWORD PTR [ecx+0x43],cl
  409a39:	pop    edx
  409a3a:	or     esp,DWORD PTR gs:[ebx+0x20df704d]
  409a41:	adc    bl,al
  409a43:	aam    0x12
  409a45:	daa    
  409a46:	ds pop esp
  409a48:	push   esi
  409a49:	xchg   ecx,eax
  409a4a:	neg    al
  409a4c:	push   ss
  409a4d:	xlat   BYTE PTR ds:[ebx]
  409a4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a4f:	retf   0x5ab4
  409a52:	add    BYTE PTR [edi+0x40],ah
  409a55:	and    DWORD PTR [edx+0x11],ecx
  409a58:	es push edx
  409a5a:	inc    esi
  409a5b:	rcr    BYTE PTR [edx],1
  409a5d:	push   es
  409a5e:	cmp    DWORD PTR [esi-0x2d],edx
  409a61:	jg     0x409a82
  409a63:	aas    
  409a64:	jg     0x409a30
  409a66:	cmc    
  409a67:	push   ebp
  409a68:	jnp    0x409a18
  409a6a:	xchg   DWORD PTR gs:[esi],esp
  409a6d:	inc    esp
  409a6e:	ja     0x409aa6
  409a70:	push   esi
  409a71:	es sbb al,0x1f
  409a74:	pop    ebx
  409a75:	push   ecx
  409a76:	xor    eax,0x1b7ec5ed
  409a7b:	sub    al,0x1c
  409a7d:	hlt    
  409a7e:	sbb    bh,cl
  409a80:	cmp    esi,ecx
  409a82:	popf   
  409a83:	and    al,0x7d
  409a85:	nop
  409a86:	mov    DWORD PTR [ebp-0x34],ecx
  409a89:	adc    edi,DWORD PTR [ebp-0x34]
  409a8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a8d:	push   es
  409a8e:	mov    WORD PTR [edi-0xf],fs
  409a91:	xor    BYTE PTR [edi-0x5626c610],0x59
  409a98:	pop    esp
  409a99:	out    0xb5,eax
  409a9b:	and    al,0xfb
  409a9d:	adc    dh,dl
  409a9f:	adc    DWORD PTR [edx*4+0x53565d23],edx
  409aa6:	sub    al,0xe
  409aa8:	lods   al,BYTE PTR ds:[esi]
  409aa9:	and    BYTE PTR [ecx],dh
  409aab:	mov    ds:0x786a13e7,al
  409ab0:	push   0xfc9fd2c9
  409ab5:	add    BYTE PTR [ecx],cl
  409ab7:	pop    ebp
  409ab8:	push   esp
  409ab9:	dec    edx
  409aba:	mov    ds:0xbc7ccc7e,al
  409abf:	aam    0x1c
  409ac1:	(bad)  
  409ac2:	daa    
  409ac3:	adc    dl,BYTE PTR [edx]
  409ac5:	loop   0x409b32
  409ac7:	loope  0x409a8b
  409ac9:	jp     0x409aba
  409acb:	xchg   edx,eax
  409acc:	lea    ebx,[edx+esi*8-0x7dbb4c8]
  409ad3:	cmp    DWORD PTR [ecx],edx
  409ad5:	fidivr WORD PTR [edx-0x626e4d74]
  409adb:	push   0x32
  409add:	repnz scas eax,DWORD PTR es:[edi]
  409adf:	scas   al,BYTE PTR es:[edi]
  409ae0:	sub    ecx,DWORD PTR [esi]
  409ae2:	aad    0xbd
  409ae4:	ins    DWORD PTR es:[edi],dx
  409ae5:	adc    edx,edx
  409ae7:	jb     0x409b12
  409ae9:	mov    ds:0xbd1fe2fc,al
  409aee:	sub    eax,DWORD PTR [ebx]
  409af0:	mov    esi,0xd8a85a52
  409af5:	pop    edi
  409af6:	dec    ebx
  409af7:	fwait
  409af8:	mov    ds:0xf382aeb4,eax
  409afd:	dec    ebp
  409afe:	sub    DWORD PTR [edi],ecx
  409b00:	mov    ebp,0x3974db12
  409b05:	dec    esi
  409b06:	gs dec edx
  409b08:	pop    ss
  409b09:	sub    DWORD PTR [eax+0x3c],eax
  409b0c:	(bad)  
  409b0d:	fxch   st(3)
  409b0f:	jno    0x409b0f
  409b11:	mov    ds:0xa23ef36b,eax
  409b16:	loope  0x409b09
  409b18:	scas   al,BYTE PTR es:[edi]
  409b19:	mov    ch,0xdf
  409b1b:	mov    edi,0x93cb74f1
  409b20:	mov    dl,0x1c
  409b22:	pusha  
  409b23:	push   eax
  409b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b25:	pop    ebp
  409b26:	dec    eax
  409b27:	push   ebx
  409b28:	xor    al,0x42
  409b2a:	pop    es
  409b2b:	inc    ebp
  409b2c:	cdq    
  409b2d:	xor    DWORD PTR [ebx-0x3e],eax
  409b30:	inc    ebx
  409b31:	std    
  409b32:	push   esp
  409b33:	push   eax
  409b34:	push   ecx
  409b35:	je     0x409b99
  409b37:	dec    eax
  409b38:	add    al,0x3a
  409b3a:	inc    esp
  409b3b:	gs cli 
  409b3d:	and    cl,BYTE PTR [edi-0x4b04f62e]
  409b43:	xchg   esi,eax
  409b44:	or     eax,0x13158a19
  409b49:	cli    
  409b4a:	mov    edi,0x948936df
  409b4f:	ins    BYTE PTR es:[edi],dx
  409b50:	xchg   esi,eax
  409b51:	sar    esp,1
  409b53:	or     al,BYTE PTR [ecx-0x4b58fcba]
  409b59:	popf   
  409b5a:	mov    edx,cs
  409b5c:	and    BYTE PTR [esi+0x6],cl
  409b5f:	xor    al,0xd8
  409b61:	push   ecx
  409b62:	stc    
  409b63:	loop   0x409b9b
  409b65:	repnz in al,dx
  409b67:	push   edx
  409b68:	out    dx,al
  409b69:	lods   al,BYTE PTR ds:[esi]
  409b6a:	jns    0x409b9a
  409b6c:	lea    ecx,[ecx+0x5b834564]
  409b72:	xor    bl,cl
  409b74:	xchg   DWORD PTR [esi],edi
  409b76:	fs ja  0x409ba3
  409b79:	imul   esp,DWORD PTR [edi+0x7cb289c3],0x28
  409b80:	popf   
  409b81:	dec    esp
  409b82:	xor    eax,0x38f96ab9
  409b87:	xchg   ebp,eax
  409b88:	sub    BYTE PTR [esi-0x74b87d90],dh
  409b8e:	mov    ss,WORD PTR [edi+0x3cdd41b5]
  409b94:	mov    cl,0x74
  409b96:	cwde   
  409b97:	call   0xea91:0xebca38e7
  409b9e:	or     ah,0x86
  409ba1:	in     eax,dx
  409ba2:	adc    cl,BYTE PTR [edx+0x50]
  409ba5:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  409ba7:	xchg   edx,eax
  409ba8:	jg     0x409bd2
  409baa:	dec    ecx
  409bab:	cwde   
  409bac:	or     DWORD PTR [edi*8+0x6247dd7a],0x54
  409bb4:	icebp  
  409bb5:	and    edx,DWORD PTR [edi]
  409bb7:	xchg   DWORD PTR [ecx-0x32da3ce4],ebp
  409bbd:	shl    DWORD PTR [edx+ebx*1+0x7f536ea6],cl
  409bc4:	(bad)  
  409bc6:	loope  0x409c22
  409bc8:	adc    ch,cl
  409bca:	mov    al,0xbe
  409bcc:	sub    DWORD PTR [ebx-0x615902e7],edx
  409bd2:	aaa    
  409bd3:	dec    ebx
  409bd4:	mov    al,ds:0x5d71864e
  409bd9:	cmp    ebx,edx
  409bdb:	rcl    esi,0x78
  409bde:	(bad)  
  409bdf:	mov    dh,0xc8
  409be1:	pop    edx
  409be2:	jne    0x409b79
  409be4:	jge    0x409b87
  409be6:	push   eax
  409be7:	mov    cs,WORD PTR [edx-0x6b46535]
  409bed:	jle    0x409c06
  409bef:	push   eax
  409bf0:	jbe    0x409ba2
  409bf2:	dec    ebx
  409bf3:	mov    dl,bl
  409bf5:	inc    ebx
  409bf6:	mov    al,0x88
  409bf8:	dec    edx
  409bf9:	sub    al,0xd3
  409bfb:	loop   0x409bab
  409bfd:	xor    BYTE PTR [edx*1-0x6e7d6be],bl
  409c04:	shl    bh,0xfb
  409c07:	mov    al,0xbd
  409c09:	or     bh,BYTE PTR [edx-0x33009e93]
  409c0f:	scas   al,BYTE PTR es:[edi]
  409c10:	popa   
  409c11:	inc    esi
  409c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c13:	mov    dl,BYTE PTR [ebx]
  409c15:	pop    ss
  409c16:	and    DWORD PTR [ebx-0x78bd7b25],eax
  409c1c:	imul   edx,DWORD PTR [ebx-0x68],0xb14d1ba5
  409c23:	bound  esp,QWORD PTR [edi+0x4a05482f]
  409c29:	pop    edi
  409c2a:	xor    al,0x85
  409c2c:	and    DWORD PTR [eax+0x72],0x71
  409c30:	in     eax,dx
  409c31:	lods   al,BYTE PTR ds:[esi]
  409c32:	(bad)  
  409c33:	stos   DWORD PTR es:[edi],eax
  409c34:	or     eax,DWORD PTR [ecx]
  409c36:	jl     0x409bdb
  409c38:	cli    
  409c39:	ins    BYTE PTR es:[edi],dx
  409c3a:	jmp    0x7c71:0x7515ee49
  409c41:	out    0x2d,eax
  409c43:	inc    ebp
  409c44:	or     DWORD PTR [eax+0x2a],esp
  409c47:	cwde   
  409c48:	scas   eax,DWORD PTR es:[edi]
  409c49:	ins    DWORD PTR es:[edi],dx
  409c4a:	daa    
  409c4b:	test   edi,ecx
  409c4d:	sub    ebx,DWORD PTR [ecx+0x65]
  409c50:	mov    esp,0x5535be5f
  409c55:	mov    dh,0x3c
  409c57:	fs popf 
  409c59:	push   es
  409c5a:	cmp    DWORD PTR [ecx+0x57c16c93],ebx
  409c60:	dec    ebx
  409c61:	rol    BYTE PTR [eax+0x28],cl
  409c64:	scas   eax,DWORD PTR es:[edi]
  409c65:	mov    ecx,edi
  409c67:	add    ecx,DWORD PTR [ecx+0x72]
  409c6a:	out    0x24,al
  409c6c:	mov    BYTE PTR [edx+0x278e8a2b],ah
  409c72:	(bad)  
  409c73:	cmp    eax,0x1d0b0c2
  409c78:	sub    eax,0x18aca972
  409c7d:	dec    edi
  409c7e:	out    0xf2,al
  409c80:	call   0x348:0x439cd7d0
  409c87:	in     al,dx
  409c88:	cld    
  409c89:	xor    ebp,DWORD PTR [ebx-0x6b4d834a]
  409c8f:	inc    edx
  409c90:	mov    ds:0x40d88c02,eax
  409c95:	popa   
  409c96:	aad    0x4f
  409c98:	and    esp,DWORD PTR [ecx]
  409c9a:	jo     0x409cf5
  409c9c:	push   ss
  409c9d:	pop    es
  409c9e:	cld    
  409c9f:	jg     0x409d07
  409ca1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ca2:	test   al,0x94
  409ca4:	mov    al,ds:0x15f479c3
  409ca9:	adc    edi,ebp
  409cab:	dec    eax
  409cac:	or     al,0xe2
  409cae:	and    BYTE PTR [ebx+edx*4-0x45],dh
  409cb2:	fnstsw WORD PTR [esp+eax*1-0x5d]
  409cb6:	stc    
  409cb7:	xchg   ecx,eax
  409cb8:	enter  0x67d7,0xc4
  409cbc:	mov    ds:0x15ffd9fe,al
  409cc1:	shl    DWORD PTR [eax+eax*2],1
  409cc4:	fdiv   QWORD PTR [ebp+0x7235a8ef]
  409cca:	jl     0x409cc8
  409ccc:	sbb    ebx,DWORD PTR [ebx]
  409cce:	cdq    
  409ccf:	pushf  
  409cd0:	mov    es,WORD PTR [eax+0xb20ae96]
  409cd6:	imul   esp,DWORD PTR [eax],0x697b5155
  409cdc:	out    dx,eax
  409cdd:	mov    BYTE PTR [esi-0x58],ah
  409ce0:	cld    
  409ce1:	ds jo  0x409d4a
  409ce4:	pop    ds
  409ce5:	or     eax,0xefaf3a15
  409cea:	sub    eax,0xebf742e1
  409cef:	adc    edi,esp
  409cf1:	xchg   BYTE PTR [edx],dh
  409cf3:	sub    eax,0x63ce29c5
  409cf8:	je     0x409cae
  409cfa:	xor    al,0x79
  409cfc:	jmp    0xc52bf8de
  409d01:	dec    ecx
  409d02:	pop    ecx
  409d03:	es mov ebx,0xf53dd7c7
  409d09:	mov    eax,fs:0xef43b001
  409d0f:	and    ebp,esi
  409d11:	mov    ds:0xb4f2c90d,eax
  409d16:	inc    edx
  409d17:	sub    DWORD PTR [esi+0x692eeab5],ebx
  409d1d:	xor    cl,BYTE PTR [ebp-0x58450ff7]
  409d23:	push   es
  409d24:	push   ebp
  409d25:	and    esp,DWORD PTR [edx]
  409d27:	fmul   st,st(6)
  409d29:	fwait
  409d2a:	loopne 0x409d94
  409d2c:	adc    BYTE PTR [ebp+0x69c7b1f4],al
  409d32:	je     0x409d57
  409d34:	jne    0x409dad
  409d36:	adc    BYTE PTR [edx+0x4e],cl
  409d39:	clc    
  409d3a:	mov    al,0x3e
  409d3c:	cmp    ah,BYTE PTR [esi-0x1b349c83]
  409d42:	lods   eax,DWORD PTR ds:[esi]
  409d43:	cmp    eax,0xf1dbcde0
  409d48:	cmp    esi,edi
  409d4a:	mov    WORD PTR [ebx],es
  409d4c:	fstp   TBYTE PTR [ebx+0x55]
  409d4f:	(bad)  
  409d50:	loope  0x409dcd
  409d52:	adc    eax,DWORD PTR [eax]
  409d54:	sbb    dl,BYTE PTR [ecx]
  409d56:	add    eax,0xdac26c90
  409d5b:	mov    edx,0x53804e46
  409d60:	repz push edx
  409d62:	arpl   sp,si
  409d64:	sub    esi,edx
  409d66:	test   eax,0x37e2cf92
  409d6b:	xor    edx,DWORD PTR [ecx-0x48]
  409d6e:	inc    esi
  409d6f:	jae    0x409dac
  409d71:	mov    eax,ds:0xe440961
  409d76:	ins    DWORD PTR es:[edi],dx
  409d77:	mov    eax,0xd10fbebe
  409d7c:	hlt    
  409d7d:	outs   dx,BYTE PTR ds:[esi]
  409d7e:	sub    al,0xa6
  409d80:	sbb    esp,DWORD PTR [eax+0x54]
  409d83:	jnp    0x409d0e
  409d85:	lds    esi,FWORD PTR [ecx+0x2]
  409d88:	cs je  0x409daf
  409d8b:	les    ebx,FWORD PTR [ecx]
  409d8d:	cdq    
  409d8e:	and    bh,BYTE PTR [ebx-0x4d]
  409d91:	jae    0x409df8
  409d93:	cmp    eax,0xc45ec77b
  409d98:	out    dx,eax
  409d99:	jne    0x409da6
  409d9b:	pop    edx
  409d9c:	fmul   DWORD PTR [edi]
  409d9e:	ror    BYTE PTR [ecx],0x3a
  409da1:	mov    BYTE PTR [ebx+0x5f115bf2],ch
  409da7:	pop    ss
  409da8:	jmp    0x409dfe
  409daa:	push   edi
  409dab:	test   eax,0xd005b989
  409db0:	shl    ch,0x9c
  409db3:	inc    eax
  409db4:	mov    BYTE PTR [esi],dl
  409db6:	arpl   WORD PTR [ebx],cx
  409db8:	push   eax
  409db9:	pop    edi
  409dba:	fisubr DWORD PTR [ebp-0x6812d571]
  409dc0:	mov    ah,0xf
  409dc2:	and    al,0x65
  409dc4:	cmp    DWORD PTR [edx+ebx*1+0xc0ec3b5],ebp
  409dcb:	pop    esp
  409dcc:	(bad)  
  409dcd:	pop    eax
  409dce:	dec    ecx
  409dcf:	ds out dx,al
  409dd1:	push   esi
  409dd2:	add    cl,BYTE PTR [ecx-0x4f]
  409dd5:	cli    
  409dd6:	(bad)  
  409dd7:	xor    eax,0x3fee23fe
  409ddc:	addr16 das 
  409dde:	hlt    
  409ddf:	cli    
  409de0:	adc    bl,BYTE PTR [edi]
  409de2:	icebp  
  409de3:	div    cl
  409de5:	arpl   WORD PTR [esi+0x70209aea],si
  409deb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dec:	adc    eax,DWORD PTR [eax-0x2]
  409def:	sti    
  409df0:	sub    eax,ecx
  409df2:	mov    DWORD PTR [ebp-0x4],eax
  409df5:	or     DWORD PTR [ebp-0x4],0xf89c85bc
  409dfc:	mov    eax,DWORD PTR [ebp-0xc]
  409dff:	xor    eax,esi
  409e01:	add    eax,edi
  409e03:	push   eax
  409e04:	mov    eax,DWORD PTR [ebp-0x10]
  409e07:	xor    eax,esi
  409e09:	add    eax,edi
  409e0b:	push   eax
  409e0c:	mov    eax,DWORD PTR [ebp-0x4]
  409e0f:	xor    eax,esi
  409e11:	add    eax,edi
  409e13:	push   eax
  409e14:	lea    eax,[ebp-0x7c]
  409e17:	push   eax
  409e18:	push   DWORD PTR [ebp-0x2c]
  409e1b:	push   DWORD PTR [ebp-0x28]
  409e1e:	call   0x40c8dd
  409e23:	test   eax,eax
  409e25:	je     0x409e53
  409e2b:	lea    eax,[ebp-0x7c]
  409e2e:	push   eax
  409e2f:	mov    eax,DWORD PTR [ebp-0x28]
  409e32:	xor    eax,esi
  409e34:	add    eax,edi
  409e36:	push   eax
  409e37:	mov    eax,DWORD PTR [ebp-0x24]
  409e3a:	add    eax,0xaa
  409e3f:	push   eax
  409e40:	mov    eax,DWORD PTR [ebp-0x24]
  409e43:	mov    eax,DWORD PTR [eax+0x198]
  409e49:	push   DWORD PTR [eax]
  409e4b:	call   0x402992
  409e50:	mov    DWORD PTR [ebp-0x14],eax
  409e53:	lea    eax,[ebp+0x4]
  409e56:	mov    DWORD PTR [ebp-0x30],eax
  409e59:	mov    eax,DWORD PTR [ebp-0x14]
  409e5c:	test   eax,eax
  409e5e:	je     0x409ec6
  409e64:	lea    eax,[ebp-0x8]
  409e67:	mov    DWORD PTR [ebp-0x38],eax
  409e6a:	mov    eax,DWORD PTR [ebp-0x34]
  409e6d:	mov    DWORD PTR [ebp-0x8],eax
  409e70:	mov    eax,DWORD PTR [ebp-0x8]
  409e73:	mov    ecx,DWORD PTR [ebp-0x14]
  409e76:	sub    eax,ecx
  409e78:	mov    DWORD PTR [ebp-0x8],eax
  409e7b:	mov    ecx,DWORD PTR [ebp-0x4]
  409e7e:	xor    ecx,esi
  409e80:	mov    eax,0xffcd8d20
  409e85:	sub    eax,ecx
  409e87:	add    DWORD PTR [ebp-0x8],eax
  409e8a:	mov    eax,DWORD PTR [ebp-0x8]
  409e8d:	mov    ecx,DWORD PTR [ebp-0x14]
  409e90:	mov    DWORD PTR [ecx+0x1],eax
  409e93:	mov    eax,DWORD PTR [ebp-0x14]
  409e96:	push   DWORD PTR [ebp-0x24]
  409e99:	mov    BYTE PTR [eax],0xe9
  409e9c:	mov    eax,ds:0x42e18f
  409ea1:	push   DWORD PTR [eax]
  409ea3:	push   DWORD PTR ds:0x42e3eb
  409ea9:	push   DWORD PTR ds:0x42e197
  409eaf:	push   DWORD PTR ds:0x42e3cb
  409eb5:	push   DWORD PTR ds:0x42e6f3
  409ebb:	push   DWORD PTR [ebp-0x28]
  409ebe:	push   DWORD PTR [ebp-0x2c]
  409ec1:	mov    eax,DWORD PTR [ebp-0x14]
  409ec4:	call   eax
  409ec6:	mov    eax,DWORD PTR [ebp-0x30]
  409ec9:	mov    ecx,DWORD PTR ds:0x42e38f
  409ecf:	add    DWORD PTR [eax],ecx
  409ed1:	pop    edi
  409ed2:	pop    esi
  409ed3:	leave  
  409ed4:	ret    
  409ed5:	push   ebp
  409ed6:	mov    ebp,esp
  409ed8:	sub    esp,0x18
  409edb:	add    edx,DWORD PTR ds:0x42c004
  409ee1:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  409ee8:	xor    DWORD PTR ds:0x42d018,0x529f
  409ef2:	lea    eax,[ebp+0x14]
  409ef5:	sbb    ecx,edx
  409ef7:	mov    DWORD PTR [ebp-0x4],eax
  409efa:	add    DWORD PTR ds:0x429010,edx
  409f00:	push   esi
  409f01:	mov    DWORD PTR ds:0x429000,0x1b
  409f0b:	cmp    DWORD PTR ds:0x429000,0x0
  409f12:	je     0x409f77
  409f18:	cmp    DWORD PTR ds:0x429000,0xb
  409f1f:	jne    0x409f38
  409f25:	push   DWORD PTR [ebp-0x28]
  409f28:	push   0x0
  409f2a:	push   0x42d010
  409f2f:	push   DWORD PTR [ebp-0x1c]
  409f32:	call   DWORD PTR ds:0x42e9af
  409f38:	cmp    DWORD PTR ds:0x429000,0xc
  409f3f:	jne    0x409f54
  409f45:	xor    esi,esi
  409f47:	or     esi,DWORD PTR ds:0x429000
  409f4d:	dec    esi
  409f4e:	mov    DWORD PTR ds:0x429000,esi
  409f54:	mov    esi,DWORD PTR ds:0x429000
  409f5a:	dec    esi
  409f5b:	mov    DWORD PTR ds:0x429000,esi
  409f61:	jmp    0x409f0b
  409f66:	mov    ecx,DWORD PTR ds:0x41ac60
  409f6c:	mov    edx,DWORD PTR ds:0x41ac64
  409f72:	sub    ecx,edx
  409f74:	xor    ecx,DWORD PTR [ecx+edx*1]
  409f77:	mov    esi,0xf89c85b9
  409f7c:	xor    DWORD PTR ds:0x429028,edx
  409f82:	mov    DWORD PTR [ebp-0xc],esi
  409f85:	sub    DWORD PTR ds:0x42a014,edi
  409f8b:	lea    eax,[ebp-0xc]
  409f8e:	movzx  edx,BYTE PTR ds:0x42c014
  409f95:	adc    edx,DWORD PTR ds:0x42a004
  409f9b:	mov    DWORD PTR ds:0x42c014,edx
  409fa1:	mov    DWORD PTR [ebp-0x14],eax
  409fa4:	or     DWORD PTR ds:0x42d010,0xdad
  409fae:	mov    eax,DWORD PTR [ebp-0xc]
  409fb1:	and    DWORD PTR ds:0x429008,0x0
  409fbb:	jmp    0x409fcd
  409fc0:	mov    ecx,DWORD PTR ds:0x429008
  409fc6:	inc    ecx
  409fc7:	mov    DWORD PTR ds:0x429008,ecx
  409fcd:	cmp    DWORD PTR ds:0x429008,0x15
  409fd4:	jae    0x40a012
  409fda:	cmp    DWORD PTR ds:0x429008,0x9
  409fe1:	jne    0x409fed
  409fe7:	call   DWORD PTR ds:0x42e9b3
  409fed:	cmp    DWORD PTR ds:0x429008,0x8
  409ff4:	jne    0x40a007
  409ffa:	mov    ecx,DWORD PTR ds:0x429008
  40a000:	inc    ecx
  40a001:	mov    DWORD PTR ds:0x429008,ecx
  40a007:	jmp    0x409fc0
  40a00c:	sub    DWORD PTR ds:0x42901c,edx
  40a012:	mov    edx,DWORD PTR [ebp-0x14]
  40a015:	and    DWORD PTR ds:0x42b010,0x0
  40a01f:	jmp    0x40a031
  40a024:	mov    ecx,DWORD PTR ds:0x42b010
  40a02a:	inc    ecx
  40a02b:	mov    DWORD PTR ds:0x42b010,ecx
  40a031:	cmp    DWORD PTR ds:0x42b010,0x17
  40a038:	jae    0x40a06e
  40a03e:	cmp    DWORD PTR ds:0x42b010,0x19
  40a045:	jne    0x40a069
  40a04b:	push   DWORD PTR [ebp-0x10]
  40a04e:	push   0x429008
  40a053:	push   0x87b9
  40a058:	push   DWORD PTR [ebp-0x1c]
  40a05b:	push   DWORD PTR [ebp-0x24]
  40a05e:	push   0x8ec6
  40a063:	call   DWORD PTR ds:0x42e9b7
  40a069:	jmp    0x40a024
  40a06e:	mov    ecx,0x7510899
  40a073:	xor    eax,ecx
  40a075:	add    eax,0x3272e0
  40a07a:	mov    DWORD PTR [edx],eax
  40a07c:	mov    eax,ds:0x42e18b
  40a081:	add    DWORD PTR ds:0x429020,ebx
  40a087:	mov    edx,DWORD PTR [ebp-0x4]
  40a08a:	mov    eax,DWORD PTR [eax]
  40a08c:	add    DWORD PTR ds:0x42d010,0x42b008
  40a096:	add    eax,DWORD PTR [edx]
  40a098:	sbb    edx,DWORD PTR ds:0x42c00c
  40a09e:	push   edi
  40a09f:	mov    DWORD PTR [ebp-0x8],eax
  40a0a2:	and    DWORD PTR ds:0x42c014,0x0
  40a0ac:	jmp    0x40a0bf
  40a0b1:	xor    eax,eax
  40a0b3:	add    eax,DWORD PTR ds:0x42c014
  40a0b9:	inc    eax
  40a0ba:	mov    ds:0x42c014,eax
  40a0bf:	cmp    DWORD PTR ds:0x42c014,0x1d
  40a0c6:	jae    0x40a159
  40a0cc:	cmp    DWORD PTR ds:0x42c014,0x8
  40a0d3:	jne    0x40a0df
  40a0d9:	call   DWORD PTR ds:0x42e9bb
  40a0df:	cmp    DWORD PTR ds:0x42c014,0x7
  40a0e6:	jne    0x40a0fa
  40a0ec:	xor    eax,eax
  40a0ee:	xor    eax,DWORD PTR ds:0x42c014
  40a0f4:	inc    eax
  40a0f5:	mov    ds:0x42c014,eax
  40a0fa:	jmp    0x40a0b1
  40a0ff:	and    DWORD PTR ds:0x42d004,0x0
  40a109:	jmp    0x40a11c
  40a10e:	xor    eax,eax
  40a110:	or     eax,DWORD PTR ds:0x42d004
  40a116:	inc    eax
  40a117:	mov    ds:0x42d004,eax
  40a11c:	cmp    DWORD PTR ds:0x42d004,0x1c
  40a123:	jae    0x40a159
  40a129:	cmp    DWORD PTR ds:0x42d004,0x2b
  40a130:	jne    0x40a147
  40a136:	push   DWORD PTR [ebp-0x20]
  40a139:	push   0x429018
  40a13e:	push   DWORD PTR [ebp-0x1c]
  40a141:	call   DWORD PTR ds:0x42e9bf
  40a147:	jmp    0x40a10e
  40a14c:	movzx  edi,BYTE PTR ds:0x42c014
  40a153:	sbb    DWORD PTR ds:0x42a004,edi
  40a159:	mov    edi,DWORD PTR [ebp+0x8]
  40a15c:	adc    edx,edx
  40a15e:	mov    eax,ds:0x42e313
  40a163:	mov    eax,DWORD PTR [eax+0x198]
  40a169:	xor    edi,ecx
  40a16b:	mov    DWORD PTR ds:0x42a008,0x1f
  40a175:	cmp    DWORD PTR ds:0x42a008,0x0
  40a17c:	je     0x40a1b8
  40a182:	cmp    DWORD PTR ds:0x42a008,0x2d
  40a189:	jne    0x40a1a4
  40a18f:	push   0x42e000
  40a194:	push   0x42e139
  40a199:	push   0x400000
  40a19e:	call   DWORD PTR ds:0x42e9c7
  40a1a4:	xor    edx,edx
  40a1a6:	add    edx,DWORD PTR ds:0x42a008
  40a1ac:	dec    edx
  40a1ad:	mov    DWORD PTR ds:0x42a008,edx
  40a1b3:	jmp    0x40a175
  40a1b8:	mov    edx,0x3272e0
  40a1bd:	xor    DWORD PTR ds:0x429010,0x6770
  40a1c7:	add    edi,edx
  40a1c9:	cmp    DWORD PTR [eax],edi
  40a1cb:	mov    DWORD PTR ds:0x42900c,0x1dd7
  40a1d5:	je     0x40a1f6
  40a1db:	mov    DWORD PTR ds:0x429014,0x4354
  40a1e5:	mov    eax,DWORD PTR [eax]
  40a1e7:	mov    DWORD PTR ds:0x42900c,0x7b1e
  40a1f1:	jmp    0x40c789
  40a1f6:	mov    eax,ds:0x42a008
  40a1fb:	mov    eax,DWORD PTR [ebp+0x18]
  40a1fe:	cmp    eax,esi
  40a200:	jne    0x40a224
  40a206:	mov    DWORD PTR ds:0x429010,0x2813
  40a210:	push   0xf89c85b8
  40a215:	mov    DWORD PTR ds:0x429020,0x131a
  40a21f:	jmp    0x40c778
  40a224:	mov    esi,0x74b
  40a229:	mov    esi,DWORD PTR [ebp+0x18]
  40a22c:	mov    eax,0xf89c85bb
  40a231:	cmp    esi,eax
  40a233:	mov    DWORD PTR ds:0x42c010,0x1f83
  40a23d:	jne    0x40c768
  40a243:	add    esi,eax
  40a245:	mov    eax,DWORD PTR [ebp+0x10]
  40a248:	add    esi,0x4b50
  40a24e:	xor    eax,ecx
  40a250:	or     DWORD PTR ds:0x42c01c,edx
  40a256:	add    eax,edx
  40a258:	mov    DWORD PTR [ebp-0x18],eax
  40a25b:	sbb    DWORD PTR ds:0x42d01c,edx
  40a261:	mov    eax,DWORD PTR [ebp+0xc]
  40a264:	add    esi,0x5e8f
  40a26a:	mov    esi,DWORD PTR [ebp-0x8]
  40a26d:	xor    eax,ecx
  40a26f:	mov    DWORD PTR ds:0x42d004,0x61c0
  40a279:	add    eax,edx
  40a27b:	add    DWORD PTR ds:0x42a004,0x42d004
  40a285:	imul   eax,DWORD PTR [esi]
  40a288:	add    DWORD PTR ds:0x42d004,0x19e2
  40a292:	mov    esi,DWORD PTR [ebp+0x8]
  40a295:	xor    esi,ecx
  40a297:	add    esi,edx
  40a299:	cmp    esi,eax
  40a29b:	mov    eax,DWORD PTR [ebp-0x4]
  40a29e:	push   ebx
  40a29f:	je     0x40a2be
  40a2a5:	mov    esi,DWORD PTR [ebp-0x18]
  40a2a8:	add    DWORD PTR [eax],esi
  40a2aa:	mov    eax,DWORD PTR [ebp-0x4]
  40a2ad:	mov    esi,DWORD PTR [ebp+0xc]
  40a2b0:	xor    esi,ecx
  40a2b2:	add    esi,edx
  40a2b4:	imul   esi,DWORD PTR [eax]
  40a2b7:	mov    DWORD PTR [eax],esi
  40a2b9:	jmp    0x40a2c3
  40a2be:	mov    esi,DWORD PTR [ebp+0x14]
  40a2c1:	xor    DWORD PTR [eax],esi
  40a2c3:	mov    eax,DWORD PTR [ebp-0x4]
  40a2c6:	mov    edi,DWORD PTR [ebp+0x10]
  40a2c9:	xor    edi,ecx
  40a2cb:	mov    esi,0xffcd8d20
  40a2d0:	mov    ebx,esi
  40a2d2:	sub    ebx,edi
  40a2d4:	add    DWORD PTR [eax],ebx
  40a2d6:	mov    eax,DWORD PTR [ebp-0x4]
  40a2d9:	mov    edi,DWORD PTR [ebp-0x8]
  40a2dc:	add    edi,DWORD PTR [eax]
  40a2de:	mov    DWORD PTR [ebp-0x8],edi
  40a2e1:	mov    eax,DWORD PTR [ebp+0xc]
  40a2e4:	mov    edi,DWORD PTR [ebp+0xc]
  40a2e7:	xor    edi,ecx
  40a2e9:	jmp    0x40c634
  40a2ee:	neg    ch
  40a2f0:	jns    0x40a2c7
  40a2f2:	xchg   ecx,eax
  40a2f3:	mov    ch,0x76
  40a2f5:	popf   
  40a2f6:	outs   dx,BYTE PTR ds:[esi]
  40a2f7:	mov    ah,0x10
  40a2f9:	inc    esi
  40a2fa:	or     eax,0x2e302516
  40a2ff:	add    BYTE PTR [edx+0x7a],bh
  40a302:	inc    esp
  40a303:	pop    edi
  40a304:	jp     0x40a380
  40a306:	push   es
  40a307:	add    al,0x8b
  40a309:	push   ebx
  40a30a:	shl    DWORD PTR [edi-0x580c0328],cl
  40a310:	imul   BYTE PTR [edi]
  40a312:	je     0x40a2ce
  40a314:	cmp    bh,BYTE PTR [ebp+0x2d249a34]
  40a31a:	inc    ebx
  40a31b:	jge    0x40a33b
  40a31d:	imul   esi,DWORD PTR [edi],0x0
  40a320:	mov    cl,0x54
  40a322:	enter  0x9f22,0x53
  40a326:	call   0x2d6f:0xf4a3d576
  40a32d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a32e:	daa    
  40a32f:	imul   ecx,DWORD PTR [ebp-0xd],0xffffffc8
  40a333:	fdivrp st(3),st
  40a335:	xor    BYTE PTR [eax+0x255cb26],bh
  40a33b:	mov    WORD PTR [ebp-0x77],fs
  40a33e:	and    al,0xde
  40a340:	mov    dh,0x7a
  40a342:	dec    edx
  40a343:	cmp    bl,bl
  40a345:	icebp  
  40a346:	mov    bh,BYTE PTR [edx+0x55b93a8f]
  40a34c:	xchg   esi,eax
  40a34d:	jmp    0xe5f2:0xdd927cf6
  40a354:	sbb    esp,ecx
  40a356:	sahf   
  40a357:	enter  0xefd4,0xf2
  40a35b:	hlt    
  40a35c:	jne    0x40a38d
  40a35e:	into   
  40a35f:	scas   al,BYTE PTR es:[edi]
  40a360:	jmp    0xed4f:0xd985d3e7
  40a367:	sub    eax,0x7041b5aa
  40a36c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a36d:	pushf  
  40a36e:	add    eax,DWORD PTR [edx]
  40a370:	cmp    DWORD PTR [esi+ecx*1-0x59],0xd41552b3
  40a378:	sbb    al,0x9a
  40a37a:	outs   dx,BYTE PTR ds:[esi]
  40a37b:	jg     0x40a39c
  40a37d:	xlat   BYTE PTR ds:[ebx]
  40a37e:	xor    eax,0x287b93b1
  40a383:	adc    BYTE PTR [ecx+0x73663837],bl
  40a389:	test   DWORD PTR ds:0x29792ae9,edx
  40a38f:	mov    ebx,0x457e865d
  40a394:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a395:	daa    
  40a396:	inc    edi
  40a397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a398:	mov    ds:0xe7d11eea,al
  40a39d:	jne    0x40a3a8
  40a39f:	mov    ecx,0xd8dbc79f
  40a3a4:	and    dh,BYTE PTR [ebp+0x62bd905f]
  40a3aa:	sti    
  40a3ab:	push   esi
  40a3ac:	(bad)  [eax]
  40a3ae:	wrmsr  
  40a3b0:	ins    DWORD PTR es:[edi],dx
  40a3b1:	mov    esi,0xb7ef446a
  40a3b6:	and    DWORD PTR [edx-0x53],edi
  40a3b9:	push   ecx
  40a3ba:	aam    0x92
  40a3bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3bd:	and    al,0xa8
  40a3bf:	cmp    dh,BYTE PTR [eax]
  40a3c1:	sahf   
  40a3c2:	mov    ?,WORD PTR ds:0x8737c85
  40a3c8:	clc    
  40a3c9:	mov    eax,ds:0x1be17e93
  40a3ce:	lods   al,BYTE PTR ds:[esi]
  40a3cf:	out    dx,al
  40a3d0:	in     al,0x6c
  40a3d2:	adc    eax,0x3fc9bb19
  40a3d7:	push   esp
  40a3d8:	xchg   ebx,eax
  40a3d9:	dec    esi
  40a3da:	xchg   ecx,eax
  40a3db:	out    0x53,al
  40a3dd:	push   ds
  40a3de:	sub    bl,BYTE PTR [edi+0x4ee06167]
  40a3e4:	mov    ebx,0xed401185
  40a3e9:	or     ebp,DWORD PTR [edi+0x3679d08b]
  40a3ef:	sub    BYTE PTR [edi],bh
  40a3f1:	xor    ebx,eax
  40a3f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3f4:	or     al,cl
  40a3f6:	cmp    al,0xe3
  40a3f8:	mov    WORD PTR [ebx-0x2b1f88ae],ss
  40a3fe:	sub    BYTE PTR [eax],dl
  40a400:	imul   ecx,DWORD PTR [eax+0x4c],0x1bffb914
  40a407:	imul   esp,ebp,0x81f8d7c4
  40a40d:	jne    0x40a399
  40a40f:	push   cs
  40a410:	add    eax,0x7200d673
  40a415:	sub    eax,0x7cc325a0
  40a41a:	inc    edi
  40a41b:	sbb    eax,0xd38fbf68
  40a420:	dec    ecx
  40a421:	sub    eax,0xf4906699
  40a426:	inc    ebx
  40a427:	cmp    ecx,esp
  40a429:	test   bh,bl
  40a42b:	call   0xb195:0x644471c4
  40a432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a433:	(bad)  
  40a434:	jb     0x40a409
  40a436:	and    DWORD PTR fs:[esi],esi
  40a439:	adc    BYTE PTR [edx+0x52],bh
  40a43c:	push   es
  40a43d:	sub    dh,BYTE PTR [ecx]
  40a43f:	cmp    edx,ebp
  40a441:	in     eax,0xeb
  40a443:	lods   al,BYTE PTR ds:[esi]
  40a444:	pop    edi
  40a445:	xor    dl,BYTE PTR [ebx]
  40a447:	lock xor dl,al
  40a44a:	ds scas eax,DWORD PTR es:[edi]
  40a44c:	dec    edi
  40a44d:	jbe    0x40a41a
  40a44f:	push   ecx
  40a450:	int    0xc9
  40a452:	stos   BYTE PTR es:[edi],al
  40a453:	sub    cl,BYTE PTR [ebp+0x5c]
  40a456:	(bad)  
  40a457:	cld    
  40a458:	jle    0x40a45c
  40a45a:	mov    dl,0xa0
  40a45c:	test   BYTE PTR [edi],cl
  40a45e:	push   edi
  40a45f:	fs dec ebx
  40a461:	or     edx,DWORD PTR ds:[esi+ebp*1-0x6d]
  40a466:	(bad)  [ebp+0x5274c6f2]
  40a46c:	mov    ?,ebx
  40a46e:	add    edi,edi
  40a470:	lahf   
  40a471:	out    dx,al
  40a472:	enter  0x6db2,0x31
  40a476:	cdq    
  40a477:	push   ss
  40a478:	and    DWORD PTR [ebx],edi
  40a47a:	popf   
  40a47b:	xor    al,0xfd
  40a47d:	mov    al,0x28
  40a47f:	mov    ch,0xa8
  40a481:	xchg   esi,eax
  40a482:	jns    0x40a473
  40a484:	or     BYTE PTR [ebx-0x6605824d],al
  40a48a:	mov    ebx,0x742be925
  40a48f:	inc    ecx
  40a490:	retf   0x659e
  40a493:	mov    edi,0x5ff014ee
  40a498:	lock push eax
  40a49a:	inc    esp
  40a49b:	arpl   WORD PTR [ebx-0x606791e3],cx
  40a4a1:	push   0x22a5ad9b
  40a4a6:	mov    ds:0xff9fd0e2,al
  40a4ab:	dec    edi
  40a4ac:	dec    eax
  40a4ad:	pop    ecx
  40a4ae:	xor    DWORD PTR ds:0xd64a3fd5,edi
  40a4b4:	xor    DWORD PTR [edi],ebx
  40a4b6:	(bad)  
  40a4b7:	mov    eax,0x5fc2a0cf
  40a4bc:	ret    0x3105
  40a4bf:	mov    esi,0x1dc639fb
  40a4c4:	aam    0xe2
  40a4c6:	sub    eax,0xc13e4337
  40a4cb:	dec    ecx
  40a4cc:	mov    DWORD PTR [ebp-0x57101cc],esp
  40a4d2:	jp     0x40a4b6
  40a4d4:	aaa    
  40a4d5:	popa   
  40a4d6:	sbb    esi,DWORD PTR [edx]
  40a4d8:	dec    ebx
  40a4d9:	lods   al,BYTE PTR ds:[esi]
  40a4da:	mov    eax,0x2b58e2a7
  40a4df:	inc    esp
  40a4e0:	stos   DWORD PTR es:[edi],eax
  40a4e1:	icebp  
  40a4e2:	pop    edx
  40a4e3:	push   0xd4c45980
  40a4e8:	popa   
  40a4e9:	xor    al,0x88
  40a4eb:	div    edx
  40a4ed:	jecxz  0x40a488
  40a4ef:	mov    dh,BYTE PTR [esi]
  40a4f1:	int    0xa5
  40a4f3:	imul   ecx,edx,0xffffffc5
  40a4f6:	push   ebx
  40a4f7:	into   
  40a4f8:	sahf   
  40a4f9:	adc    cl,ch
  40a4fb:	lahf   
  40a4fc:	mov    dh,0x30
  40a4fe:	xor    eax,0x19abc837
  40a503:	dec    esp
  40a504:	jg     0x40a506
  40a506:	ds xor eax,0xfe72c35c
  40a50c:	mov    ds:0x7b1f7736,eax
  40a511:	push   ecx
  40a512:	mov    edx,0x44199953
  40a517:	(bad)  
  40a518:	sbb    BYTE PTR [esi+0x3e],al
  40a51b:	mov    ch,0xc1
  40a51d:	jge    0x40a53b
  40a51f:	sub    edi,DWORD PTR [esi]
  40a521:	push   edx
  40a522:	xchg   edi,eax
  40a523:	(bad)  
  40a524:	push   ss
  40a525:	sbb    eax,0xef5d9804
  40a52a:	test   al,0xb5
  40a52c:	xchg   BYTE PTR [ecx],ah
  40a52e:	adc    ebp,edx
  40a530:	and    DWORD PTR [ecx-0x2],ebp
  40a533:	stc    
  40a534:	jb     0x40a546
  40a536:	push   esi
  40a537:	xor    esi,edi
  40a539:	in     eax,dx
  40a53a:	jle    0x40a506
  40a53c:	mov    edi,0x17983c8f
  40a541:	sbb    cl,BYTE PTR [ecx]
  40a543:	mov    BYTE PTR [esi-0x5b],bh
  40a546:	jns    0x40a583
  40a548:	xchg   DWORD PTR [edi-0x4d],eax
  40a54b:	dec    ebx
  40a54c:	push   ebx
  40a54d:	push   cs
  40a54e:	pushf  
  40a54f:	lahf   
  40a550:	int3   
  40a551:	loopne 0x40a556
  40a553:	inc    esi
  40a554:	aas    
  40a555:	out    dx,al
  40a556:	mov    ah,BYTE PTR [edi]
  40a558:	dec    esi
  40a559:	adc    ebx,DWORD PTR [edx+0xa]
  40a55c:	into   
  40a55d:	mov    gs,eax
  40a55f:	mov    ebp,0x4364def
  40a564:	mov    ebp,DWORD PTR ds:0x3393df7e
  40a56a:	pop    DWORD PTR [edx+0x3449a2e]
  40a570:	or     edi,DWORD PTR [ebp+esi*4+0x3]
  40a574:	pop    es
  40a575:	in     eax,dx
  40a576:	mov    al,ds:0xf292bd2d
  40a57b:	ret    
  40a57c:	pop    ebp
  40a57d:	push   ss
  40a57e:	mov    ebp,DWORD PTR [eax-0x6673806b]
  40a584:	xchg   edx,eax
  40a585:	add    al,0xd0
  40a587:	jmp    0x97b81c6c
  40a58c:	sar    BYTE PTR [edi-0x31c29f58],cl
  40a592:	les    di,DWORD PTR [edx]
  40a595:	popf   
  40a596:	mov    ds:0x10f87d40,al
  40a59b:	bound  edi,QWORD PTR [edx]
  40a59d:	fidivr WORD PTR [eax-0x4]
  40a5a0:	es clc 
  40a5a2:	test   DWORD PTR [ebx+0x43573df2],esi
  40a5a8:	adc    BYTE PTR [edi-0x5],0x77
  40a5ac:	jno    0x40a5f4
  40a5ae:	cld    
  40a5af:	(bad)  
  40a5b0:	and    eax,0xd414bc3
  40a5b5:	cs pop edi
  40a5b7:	fisub  WORD PTR [ebp+0x27]
  40a5ba:	xchg   di,ax
  40a5bc:	inc    eax
  40a5bd:	cmp    DWORD PTR [eax],esp
  40a5bf:	test   eax,0x6b44e16f
  40a5c4:	adc    ebp,DWORD PTR [eax-0x2b]
  40a5c7:	jg     0x40a5e0
  40a5c9:	retf   0x6999
  40a5cc:	ficomp WORD PTR [ecx+0x12]
  40a5cf:	cmp    eax,0xbe6e2c92
  40a5d4:	int3   
  40a5d5:	scas   eax,DWORD PTR es:[edi]
  40a5d6:	mov    ah,0xf0
  40a5d8:	scas   al,BYTE PTR es:[edi]
  40a5d9:	cld    
  40a5da:	outs   dx,BYTE PTR ds:[esi]
  40a5db:	stos   DWORD PTR es:[edi],eax
  40a5dc:	pop    edx
  40a5dd:	shr    esi,0x19
  40a5e0:	jb     0x40a59c
  40a5e2:	lahf   
  40a5e3:	xchg   edi,eax
  40a5e4:	xchg   esi,eax
  40a5e5:	dec    edi
  40a5e6:	ins    DWORD PTR es:[edi],dx
  40a5e7:	cmp    al,0xa3
  40a5e9:	(bad)  
  40a5ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5eb:	ins    BYTE PTR es:[edi],dx
  40a5ec:	xchg   DWORD PTR [eax+0x66],ecx
  40a5ef:	in     al,0x8
  40a5f1:	dec    esp
  40a5f2:	je     0x40a5b3
  40a5f4:	out    0x1,eax
  40a5f6:	xor    cl,BYTE PTR ds:0x58626e3e
  40a5fc:	call   0xc635:0x1fad88ef
  40a603:	(bad)  [ecx]
  40a605:	fidivr DWORD PTR [ecx-0x67]
  40a608:	mov    dh,0x67
  40a60a:	jp     0x40a671
  40a60c:	je     0x40a642
  40a60e:	jns    0x40a5ce
  40a610:	sbb    al,0x4e
  40a612:	stos   DWORD PTR es:[edi],eax
  40a613:	sbb    ah,cl
  40a615:	and    eax,0xc8c8c88c
  40a61a:	mov    eax,ds:0x4da3b762
  40a61f:	stc    
  40a620:	and    dl,BYTE PTR [eax+0xf20d048]
  40a626:	mov    dh,0x1a
  40a628:	xor    al,0x8c
  40a62a:	xchg   ecx,eax
  40a62b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a62c:	add    cl,BYTE PTR [edx]
  40a62e:	clc    
  40a62f:	inc    edx
  40a630:	sbb    ecx,DWORD PTR [edx+0x18]
  40a633:	mov    DWORD PTR [edx-0x418ba153],esi
  40a639:	bound  edi,QWORD PTR [edi-0x65]
  40a63c:	jp     0x40a5d5
  40a63e:	mov    edx,0x4a7333ba
  40a643:	outs   dx,BYTE PTR ds:[esi]
  40a644:	out    dx,eax
  40a645:	ins    BYTE PTR es:[edi],dx
  40a646:	mov    ds:0x9c48d2b9,eax
  40a64b:	sbb    esi,DWORD PTR [ecx+0x673669a3]
  40a651:	mov    edi,0xe0e554cb
  40a656:	pop    ss
  40a657:	add    eax,0x6d381b8
  40a65c:	xor    al,BYTE PTR [edi+edi*1-0x68]
  40a660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a661:	push   esp
  40a662:	leave  
  40a663:	sbb    eax,0x9ccfe305
  40a668:	call   0xbab8:0xaed4821b
  40a66f:	imul   edx,DWORD PTR [edi+0x79],0x27
  40a673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a674:	add    eax,0xae87ecde
  40a679:	ds hlt 
  40a67b:	shl    BYTE PTR [ebx],1
  40a67d:	int3   
  40a67e:	out    dx,eax
  40a67f:	loope  0x40a67f
  40a681:	ins    DWORD PTR es:[edi],dx
  40a682:	loopne 0x40a6e2
  40a684:	mov    ah,0x72
  40a686:	ds jno 0x40a617
  40a689:	sti    
  40a68a:	das    
  40a68b:	test   BYTE PTR [eax],cl
  40a68d:	aad    0xb8
  40a68f:	sub    eax,0x7a63a24
  40a694:	fidiv  DWORD PTR [ebx+0x127e2975]
  40a69a:	stc    
  40a69b:	rcr    BYTE PTR [ebx+ecx*1-0x574202b3],0x1f
  40a6a3:	push   cs
  40a6a4:	push   ecx
  40a6a5:	mov    esp,0x7d133dbd
  40a6aa:	(bad)  
  40a6ab:	into   
  40a6ac:	je     0x40a69b
  40a6ae:	push   esi
  40a6af:	and    eax,0x177675c1
  40a6b4:	ss btr esi,ebp
  40a6b8:	rcl    DWORD PTR [edi+0x5bbb74da],cl
  40a6be:	fisubr DWORD PTR [ebp-0x4aca52c0]
  40a6c4:	fsub   DWORD PTR [edi-0xa35731a]
  40a6ca:	bound  ecx,QWORD PTR [ebp-0x24bfe9c0]
  40a6d0:	ins    BYTE PTR es:[edi],dx
  40a6d1:	xor    eax,0x16f2d64
  40a6d6:	(bad)  
  40a6d7:	rcl    esi,1
  40a6d9:	pcmpeqw mm2,QWORD PTR [ebx-0x6d]
  40a6dd:	cmp    DWORD PTR [ecx],ebx
  40a6df:	(bad)  
  40a6e0:	push   edx
  40a6e1:	add    eax,0xba99f77
  40a6e6:	or     bl,al
  40a6e8:	push   cs
  40a6e9:	in     al,0x90
  40a6eb:	adc    BYTE PTR [eax+0x1d6941cc],ah
  40a6f1:	sbb    dl,BYTE PTR [eax+esi*4-0x75581f57]
  40a6f8:	jb     0x40a683
  40a6fa:	adc    ebx,DWORD PTR [ebp-0x7b]
  40a6fd:	(bad)  [edi-0x32177984]
  40a703:	mov    al,0xbf
  40a705:	out    0xcb,al
  40a707:	rol    al,cl
  40a709:	imul   ebx,DWORD PTR [eax+0x2c],0x63
  40a70d:	pop    ebp
  40a70e:	pushf  
  40a70f:	retf   
  40a710:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a711:	or     dh,BYTE PTR [ecx+0x3e]
  40a714:	inc    eax
  40a715:	jp     0x40a6d3
  40a717:	mov    al,0x35
  40a719:	iret   
  40a71a:	push   eax
  40a71b:	std    
  40a71c:	dec    ecx
  40a71d:	stc    
  40a71e:	mov    bh,BYTE PTR [ebp-0x50]
  40a721:	xor    DWORD PTR ds:0x8a231bc1,ebp
  40a727:	cld    
  40a728:	out    dx,eax
  40a729:	test   BYTE PTR [ebp+0x63375013],cl
  40a72f:	xor    eax,DWORD PTR [edx+0x62]
  40a732:	and    edx,DWORD PTR [edx-0x59]
  40a735:	inc    edi
  40a736:	adc    bh,dh
  40a738:	dec    ecx
  40a739:	or     DWORD PTR [esi],0xc538dffd
  40a73f:	lahf   
  40a740:	xor    al,0x95
  40a742:	dec    edi
  40a743:	adc    BYTE PTR [edi+edx*1],bh
  40a746:	(bad)  
  40a747:	dec    edx
  40a748:	imul   ebp,ebx,0x56
  40a74b:	aad    0x3c
  40a74d:	cmp    eax,0x6a200415
  40a752:	out    0x31,eax
  40a754:	out    0x5f,eax
  40a756:	add    eax,0xbd5219cd
  40a75b:	and    al,0x41
  40a75d:	mov    dh,0x25
  40a75f:	bound  eax,QWORD PTR [esi]
  40a761:	in     eax,0xc4
  40a763:	in     eax,0x9f
  40a765:	mov    ds:0xba587bec,al
  40a76a:	add    DWORD PTR [esi-0x23],eax
  40a76d:	add    edx,DWORD PTR [ecx+0x607a1f33]
  40a773:	adc    eax,0x12aaa448
  40a778:	sbb    eax,0x367d4fe5
  40a77d:	out    dx,al
  40a77e:	aaa    
  40a77f:	out    0x21,al
  40a781:	xchg   esi,eax
  40a782:	xor    dh,BYTE PTR ds:0xf16a904f
  40a788:	sub    DWORD PTR [ebp+0x18],ecx
  40a78b:	fwait
  40a78c:	jp     0x40a72e
  40a78e:	sub    BYTE PTR [ecx+0xba85bbf],ah
  40a794:	inc    eax
  40a795:	arpl   WORD PTR [esi],dx
  40a797:	xchg   ebx,eax
  40a798:	cmp    esi,ebp
  40a79a:	call   0xbd45:0xa3a746f9
  40a7a1:	adc    eax,0xbdc6c23d
  40a7a6:	inc    esp
  40a7a7:	jmp    0x8d49:0x4717525e
  40a7ae:	fwait
  40a7af:	cmp    eax,0x3d26e864
  40a7b4:	mov    al,ds:0xb6c16c1c
  40a7b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7ba:	mov    eax,ds:0x76ebaa7a
  40a7bf:	scas   eax,DWORD PTR es:[edi]
  40a7c0:	dec    eax
  40a7c1:	mov    ecx,0xa397d9be
  40a7c6:	pop    ebp
  40a7c7:	jmp    0x40a7e2
  40a7c9:	mov    bh,0x6f
  40a7cb:	xchg   DWORD PTR [ebp-0x23],ecx
  40a7ce:	jne    0x40a841
  40a7d0:	xchg   edx,eax
  40a7d1:	fs pop eax
  40a7d3:	xlat   BYTE PTR ds:[ebx]
  40a7d4:	nop
  40a7d5:	aaa    
  40a7d6:	imul   bh
  40a7d8:	jb     0x40a817
  40a7da:	and    BYTE PTR [eax],0x97
  40a7dd:	test   DWORD PTR [ecx-0x6fba6c97],ecx
  40a7e3:	enter  0x34fd,0x64
  40a7e7:	adc    esp,DWORD PTR [ebx+edx*4]
  40a7ea:	out    dx,al
  40a7eb:	pop    edi
  40a7ec:	adc    ah,BYTE PTR [di]
  40a7ef:	enter  0x8f7b,0x89
  40a7f3:	pop    ecx
  40a7f4:	sub    ah,ch
  40a7f6:	inc    esi
  40a7f7:	or     BYTE PTR [ebx-0x63],dh
  40a7fa:	clc    
  40a7fb:	in     al,0x9
  40a7fd:	mov    BYTE PTR [ebp-0x53],dl
  40a800:	pop    esp
  40a801:	lds    esi,FWORD PTR [ebx]
  40a803:	cdq    
  40a804:	push   es
  40a805:	pop    ebp
  40a806:	loop   0x40a794
  40a808:	sbb    eax,0x99cb0d6f
  40a80d:	xor    esp,DWORD PTR [edx]
  40a80f:	jmp    0x17d2d902
  40a814:	scas   al,BYTE PTR es:[edi]
  40a815:	fisubr WORD PTR [edx+0x52]
  40a818:	cld    
  40a819:	ins    BYTE PTR es:[edi],dx
  40a81a:	test   BYTE PTR [eax+0x16],ch
  40a81d:	stos   BYTE PTR es:[edi],al
  40a81e:	sbb    eax,0xfca23a1
  40a823:	popf   
  40a824:	cli    
  40a825:	(bad)  
  40a826:	jmp    0x40a7cb
  40a828:	mov    dh,0xc9
  40a82a:	lahf   
  40a82b:	and    al,0x56
  40a82d:	jno    0x40a887
  40a82f:	xchg   ebx,eax
  40a830:	jb     0x40a86e
  40a832:	daa    
  40a833:	jae    0x40a86c
  40a835:	retf   0x7f26
  40a838:	dec    ecx
  40a839:	jno    0x40a810
  40a83b:	mov    ds:0x60de642a,al
  40a840:	lods   eax,DWORD PTR ds:[esi]
  40a841:	push   0x6b541474
  40a846:	jmp    0xb00b:0x6f92741f
  40a84d:	mov    edx,0xd36ead93
  40a852:	pop    edx
  40a853:	dec    esp
  40a854:	stc    
  40a855:	test   al,0x33
  40a857:	sbb    dl,BYTE PTR [eax+0x67fc8c82]
  40a85d:	sub    dl,bh
  40a85f:	iret   
  40a860:	mov    ch,0x62
  40a862:	out    0xe6,eax
  40a864:	aad    0xf9
  40a866:	ja     0x40a7ee
  40a868:	ja     0x40a853
  40a86a:	pushf  
  40a86b:	jae    0x40a8bc
  40a86d:	sbb    edi,edx
  40a86f:	js     0x40a83f
  40a871:	retf   0x55b5
  40a874:	jbe    0x40a8d4
  40a876:	pop    eax
  40a877:	iret   
  40a878:	jmp    0x40a8a5
  40a87a:	shl    ch,0x12
  40a87d:	sbb    al,0x82
  40a87f:	ja     0x40a882
  40a881:	push   edx
  40a882:	test   DWORD PTR [ecx-0x3c],0xcd3537af
  40a889:	pminsw mm5,QWORD PTR [ebx-0x7a]
  40a88d:	and    dl,BYTE PTR [ebx+eax*8]
  40a890:	xchg   ebx,eax
  40a891:	pop    esp
  40a892:	ds add eax,0xfd4bd6f9
  40a898:	sbb    ah,0xa4
  40a89b:	aas    
  40a89c:	or     ebp,DWORD PTR [esi-0x6d]
  40a89f:	inc    edx
  40a8a0:	jmp    0xcda9:0x8df7ca0e
  40a8a7:	xchg   ecx,eax
  40a8a8:	dec    ecx
  40a8a9:	push   0x8ef7e3f4
  40a8ae:	push   eax
  40a8af:	mov    bh,0xa4
  40a8b1:	xor    eax,0xdbc7ce8a
  40a8b6:	aas    
  40a8b7:	pop    edi
  40a8b8:	mov    ebx,0x3a6e3813
  40a8bd:	ins    BYTE PTR es:[edi],dx
  40a8be:	jbe    0x40a8cb
  40a8c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8c1:	dec    esp
  40a8c2:	inc    edi
  40a8c3:	dec    edi
  40a8c4:	out    0xfd,al
  40a8c6:	cmp    eax,0x9dfc4523
  40a8cb:	jb     0x40a933
  40a8cd:	rcr    BYTE PTR [edx],0xf3
  40a8d0:	enter  0x4476,0x3b
  40a8d4:	ret    
  40a8d5:	call   0x7e6bdbf7
  40a8da:	fdivr  QWORD PTR [esi+0x30ea9c6f]
  40a8e0:	and    eax,esp
  40a8e2:	xor    DWORD PTR [edi-0x67ee0252],edx
  40a8e8:	imul   edi,DWORD PTR [edi+0x9],0xe6994ea
  40a8ef:	dec    ecx
  40a8f0:	in     eax,dx
  40a8f1:	push   ebx
  40a8f2:	jp     0x40a8a5
  40a8f4:	or     al,0x53
  40a8f6:	push   cs
  40a8f7:	and    al,0xbd
  40a8f9:	jae    0x40a923
  40a8fb:	pop    ds
  40a8fc:	jle    0x40a979
  40a8fe:	enter  0xbd60,0xc9
  40a902:	adc    bl,BYTE PTR [eax+0x14]
  40a905:	arpl   WORD PTR [eax+0x12],dx
  40a908:	mov    esi,0xf63519ec
  40a90d:	cmp    al,0xd7
  40a90f:	jae    0x40a968
  40a911:	dec    esp
  40a912:	(bad)  
  40a914:	mul    BYTE PTR [eax+0x77]
  40a917:	stc    
  40a918:	dec    ecx
  40a919:	bound  edi,QWORD PTR [esi+eax*8+0x1e]
  40a91d:	add    bh,BYTE PTR cs:[bx+si+0x79]
  40a922:	xor    DWORD PTR [ecx-0x4781e965],ecx
  40a928:	nop
  40a929:	sub    DWORD PTR [ecx+0x3e],edi
  40a92c:	inc    edx
  40a92d:	jb     0x40a957
  40a92f:	imul   ebx,DWORD PTR [edi-0x345d62fb],0xbe3dddb0
  40a939:	sti    
  40a93a:	xchg   DWORD PTR [ebx+0x688ed147],edx
  40a940:	or     al,0x40
  40a942:	pop    ebx
  40a943:	shr    DWORD PTR [edi],0xf0
  40a946:	jge    0x40a959
  40a948:	lds    ecx,FWORD PTR [edi+0xa]
  40a94b:	test   al,0xbc
  40a94d:	add    bh,BYTE PTR [ebx-0x60b890a2]
  40a953:	fsub   QWORD PTR [edx]
  40a955:	in     al,0xcc
  40a957:	into   
  40a958:	jl     0x40a971
  40a95a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a95b:	mov    edx,0x4c3d44b9
  40a960:	mov    ds:0x315aa264,al
  40a965:	inc    esp
  40a966:	mov    edx,ebx
  40a968:	enter  0xaf1d,0x31
  40a96c:	scas   al,BYTE PTR es:[edi]
  40a96d:	inc    edi
  40a96e:	pop    ds
  40a96f:	mov    ah,0xb8
  40a971:	gs push esi
  40a973:	sub    esi,DWORD PTR [ebx]
  40a975:	imul   ebp,edi,0x14675ccf
  40a97b:	push   esp
  40a97c:	repz and DWORD PTR [ebx+0x20],ebx
  40a980:	aam    0xaa
  40a982:	jge    0x40a9d5
  40a984:	test   eax,0x8f304bab
  40a989:	daa    
  40a98a:	xor    dl,0xe8
  40a98d:	iret   
  40a98e:	retf   0x6b57
  40a991:	loopne 0x40a96d
  40a993:	icebp  
  40a994:	loopne 0x40a967
  40a996:	cs inc ebx
  40a998:	(bad)  
  40a999:	loop   0x40a99d
  40a99b:	jg     0x40a920
  40a99d:	stos   DWORD PTR es:[edi],eax
  40a99e:	mov    bh,0xc5
  40a9a0:	and    eax,0x439d9f80
  40a9a5:	push   edx
  40a9a6:	inc    ebp
  40a9a7:	not    DWORD PTR [esp+ebp*1+0x1414708f]
  40a9ae:	sbb    al,0x63
  40a9b0:	xor    ebp,edi
  40a9b2:	fsub   DWORD PTR [ebx-0x78]
  40a9b5:	xor    DWORD PTR [ebx-0x9748d43],edi
  40a9bb:	imul   eax,DWORD PTR [ecx],0x16
  40a9be:	mov    esi,0xcf639c5c
  40a9c3:	pop    ecx
  40a9c4:	or     eax,0x91de456a
  40a9c9:	addr16 pusha 
  40a9cb:	stos   DWORD PTR es:[edi],eax
  40a9cc:	mov    DWORD PTR [ebx+edi*1+0x66],0xbab2867d
  40a9d4:	stc    
  40a9d5:	loope  0x40aa54
  40a9d7:	outs   dx,BYTE PTR ds:[esi]
  40a9d8:	xchg   ch,dh
  40a9da:	jmp    0x1721:0xde3a24bf
  40a9e1:	or     ch,BYTE PTR [edx+edi*8-0x66]
  40a9e5:	sub    eax,0xa9fc808
  40a9ea:	mov    ds:0x872f79a3,al
  40a9ef:	out    0xd6,eax
  40a9f1:	loopne 0x40aa58
  40a9f3:	xchg   edi,eax
  40a9f4:	add    al,0xff
  40a9f6:	rcr    bh,1
  40a9f8:	mov    al,0xc4
  40a9fa:	and    DWORD PTR [edi],ebp
  40a9fc:	pop    edi
  40a9fd:	out    0x3b,al
  40a9ff:	push   es
  40aa00:	test   eax,0x96bc02e0
  40aa05:	shl    ebp,1
  40aa07:	push   0x8f1d9b67
  40aa0c:	jecxz  0x40aa37
  40aa0e:	mov    ebp,0xbdf02c3c
  40aa13:	jno    0x40aa25
  40aa15:	push   edx
  40aa16:	mov    al,0x56
  40aa18:	adc    DWORD PTR [edi-0x51],edx
  40aa1b:	and    eax,0x65ed640
  40aa20:	ja     0x40aa02
  40aa22:	push   ss
  40aa23:	inc    edi
  40aa24:	cmp    DWORD PTR [ebp-0x8],ecx
  40aa27:	or     edi,0x4c
  40aa2a:	shr    BYTE PTR [edi],0x1
  40aa2d:	cmp    ebp,edi
  40aa2f:	jno    0x40a9dd
  40aa31:	and    BYTE PTR [esi-0x61de69d4],0x74
  40aa38:	push   ecx
  40aa39:	xchg   ebp,eax
  40aa3a:	pop    eax
  40aa3b:	or     esi,DWORD PTR [eax]
  40aa3d:	xor    al,0x38
  40aa3f:	and    eax,0x1fb88cd3
  40aa44:	xor    ch,BYTE PTR [esi-0x64]
  40aa47:	jl     0x40aa84
  40aa49:	jo     0x40aa3c
  40aa4b:	jo     0x40aa15
  40aa4d:	mov    al,0xbe
  40aa4f:	test   ebp,edx
  40aa51:	jmp    0x8006:0xcaabeb7d
  40aa58:	mov    ebp,0xe9985c31
  40aa5d:	(bad)  
  40aa5e:	sub    BYTE PTR [eax],ch
  40aa60:	and    ch,BYTE PTR [edi+eax*1]
  40aa63:	enter  0xe055,0x35
  40aa67:	into   
  40aa68:	js     0x40aa96
  40aa6a:	jle    0x40aa15
  40aa6c:	dec    edx
  40aa6d:	je     0x40aa46
  40aa6f:	pop    edi
  40aa70:	enter  0xbd19,0x13
  40aa74:	(bad)  
  40aa75:	shl    BYTE PTR [ebp+0x1e],cl
  40aa78:	stos   BYTE PTR es:[edi],al
  40aa79:	rcl    BYTE PTR [edx],cl
  40aa7b:	and    DWORD PTR [ecx+edx*8],0x3e04650f
  40aa82:	pop    edi
  40aa83:	test   DWORD PTR ds:0xd8211813,esp
  40aa89:	ds and ah,bh
  40aa8c:	sub    ebp,DWORD PTR [ebp-0x33]
  40aa8f:	pop    esp
  40aa90:	mov    bh,0x50
  40aa92:	int3   
  40aa93:	push   ss
  40aa94:	sqrtps xmm1,XMMWORD PTR [eax]
  40aa97:	dec    ebx
  40aa98:	fwait
  40aa99:	mov    al,BYTE PTR [edi+0x49]
  40aa9c:	cmp    cl,0xda
  40aa9f:	sub    eax,0x365315d5
  40aaa4:	loopne 0x40aa92
  40aaa6:	retf   0x22ea
  40aaa9:	lds    esi,FWORD PTR [edi+0x27]
  40aaac:	iret   
  40aaad:	stos   DWORD PTR es:[edi],eax
  40aaae:	mov    DWORD PTR [eax-0x9],eax
  40aab1:	icebp  
  40aab2:	and    ch,dl
  40aab4:	stos   BYTE PTR es:[edi],al
  40aab5:	out    0x25,al
  40aab7:	hlt    
  40aab8:	mov    al,BYTE PTR [ecx+ebp*1-0x2a1ff0f9]
  40aabf:	and    DWORD PTR [ecx],ebp
  40aac1:	fwait
  40aac2:	loop   0x40aa48
  40aac4:	mov    dl,0x99
  40aac6:	jmp    0xa62e:0xb4311889
  40aacd:	and    bl,BYTE PTR [ecx+0x10]
  40aad0:	lds    edx,FWORD PTR ds:0xc40ef14c
  40aad6:	es ret 
  40aad8:	ins    DWORD PTR es:[edi],dx
  40aad9:	mov    ebp,0x6847a482
  40aade:	or     DWORD PTR [ebp-0x1c],ecx
  40aae1:	lea    esp,[ecx-0x33]
  40aae4:	jb     0x40aa7e
  40aae6:	cld    
  40aae7:	mov    dh,0x81
  40aae9:	out    0xa,al
  40aaeb:	jecxz  0x40ab04
  40aaed:	mov    eax,ds:0x405599ba
  40aaf2:	pop    esp
  40aaf3:	jae    0x40aa96
  40aaf5:	mov    dl,0xd4
  40aaf7:	dec    esp
  40aaf8:	push   esi
  40aaf9:	cli    
  40aafa:	push   esi
  40aafb:	jne    0x40aae1
  40aafd:	sub    ebx,ebx
  40aaff:	jge    0x40ab1c
  40ab01:	cdq    
  40ab02:	fist   WORD PTR [ecx+edi*8-0x3f]
  40ab06:	or     esp,DWORD PTR [ecx-0x5c286452]
  40ab0c:	in     al,0xc9
  40ab0e:	std    
  40ab0f:	retf   0x1cf7
  40ab12:	jae    0x40ab15
  40ab14:	push   ebx
  40ab15:	sub    eax,0xe25f1a3d
  40ab1a:	add    bh,BYTE PTR [ecx]
  40ab1c:	clc    
  40ab1d:	int3   
  40ab1e:	sbb    DWORD PTR [esp+ebx*1+0xefc6eae],edi
  40ab25:	mov    dh,0xcb
  40ab27:	sub    al,0x6a
  40ab29:	sub    ch,BYTE PTR ds:0xb12724fd
  40ab2f:	push   esp
  40ab30:	inc    esi
  40ab31:	loopne 0x40ab99
  40ab33:	(bad)  
  40ab34:	sub    eax,0x16e176be
  40ab39:	imul   edi,DWORD PTR [ecx-0x256cc1b],0xf
  40ab40:	sub    al,0x15
  40ab42:	add    al,0xa8
  40ab44:	jbe    0x40abab
  40ab46:	dec    edx
  40ab47:	mov    esi,0x12a238d4
  40ab4c:	push   ebp
  40ab4d:	scas   eax,DWORD PTR es:[edi]
  40ab4e:	mov    bl,0x4a
  40ab50:	and    eax,0x18812a7a
  40ab55:	setne  BYTE PTR [edi+0x22]
  40ab59:	jp     0x40aaed
  40ab5b:	cmc    
  40ab5c:	xchg   esp,eax
  40ab5d:	jns    0x40ab70
  40ab5f:	and    edi,DWORD PTR [edx+ebx*4+0x61]
  40ab63:	lock mov eax,?
  40ab66:	adc    eax,0x69c68c1c
  40ab6b:	gs xchg ebx,eax
  40ab6d:	imul   ebx,DWORD PTR [esi],0x19
  40ab70:	popf   
  40ab71:	add    DWORD PTR [ebp+0x6d],ebx
  40ab74:	add    BYTE PTR [eax-0x56b0db51],dl
  40ab7a:	adc    esi,0xfffffff1
  40ab7d:	pop    esp
  40ab7e:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab80:	cmp    BYTE PTR [ebx+0x6d],cl
  40ab83:	and    BYTE PTR fs:[edi],0x51
  40ab87:	xor    DWORD PTR [ebx+0x99912e4],ebp
  40ab8d:	cmp    eax,0x601d1640
  40ab92:	jge    0x40ab6e
  40ab94:	js     0x40ab5e
  40ab96:	mov    edi,0x1d9ea495
  40ab9b:	jo     0x40ac0e
  40ab9d:	dec    edi
  40ab9e:	xchg   edx,eax
  40ab9f:	inc    edi
  40aba0:	push   ebx
  40aba1:	mov    ecx,0xd9ca6c57
  40aba6:	push   ss
  40aba7:	sub    ecx,ebp
  40aba9:	push   ebx
  40abaa:	bound  edx,QWORD PTR [edi]
  40abac:	mov    bh,0x12
  40abae:	fst    DWORD PTR [esi]
  40abb0:	nop
  40abb1:	add    BYTE PTR [ecx],dh
  40abb3:	cwde   
  40abb4:	jb     0x40ab57
  40abb6:	cmp    eax,0x35423563
  40abbb:	pop    ebx
  40abbc:	dec    ebx
  40abbd:	jmp    0x7d5d847e
  40abc2:	sti    
  40abc3:	ds inc ebp
  40abc5:	mov    esi,DWORD PTR [ecx+0x6b]
  40abc8:	popa   
  40abc9:	(bad)  [edi+0x13]
  40abcc:	mov    ds:0x99a1431f,al
  40abd1:	lahf   
  40abd2:	jle    0x40ac4d
  40abd4:	cwde   
  40abd5:	add    dh,dh
  40abd7:	ja     0x40ac34
  40abd9:	(bad)  
  40abda:	loopne 0x40ab79
  40abdc:	jbe    0x40ac3a
  40abde:	adc    BYTE PTR [ecx-0x6d],0x61
  40abe2:	dec    ebx
  40abe3:	loop   0x40abe1
  40abe5:	push   edi
  40abe6:	dec    eax
  40abe7:	sbb    dl,BYTE PTR [edx]
  40abe9:	xchg   ecx,eax
  40abea:	push   ds
  40abeb:	in     al,dx
  40abec:	adc    al,0x1f
  40abee:	aaa    
  40abef:	int3   
  40abf0:	shl    BYTE PTR [edi+0x1e],1
  40abf3:	out    dx,eax
  40abf4:	push   ecx
  40abf5:	push   esi
  40abf6:	test   DWORD PTR [ebp+0x5f],0xee4f4b75
  40abfd:	or     al,0x53
  40abff:	push   esp
  40ac00:	inc    eax
  40ac01:	fidivr DWORD PTR [edi+0x145e814]
  40ac07:	std    
  40ac08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac09:	jmp    0x40abc4
  40ac0b:	xor    al,0x8a
  40ac0d:	mov    eax,0x12de8a98
  40ac12:	adc    DWORD PTR [eax],esi
  40ac14:	pop    ss
  40ac15:	push   ebp
  40ac16:	sbb    edi,DWORD PTR [edi+0x9]
  40ac19:	imul   edx,DWORD PTR [eax+0x3],0x67f596f4
  40ac20:	fs dec edx
  40ac22:	inc    ebx
  40ac23:	bound  esi,QWORD PTR [eax+0x12]
  40ac26:	xchg   edx,eax
  40ac27:	retf   0x26a5
  40ac2a:	mov    bh,BYTE PTR [edx+ecx*2]
  40ac2d:	out    0xb4,al
  40ac2f:	cmp    BYTE PTR [esi-0x752bc08f],bl
  40ac35:	shl    BYTE PTR [edx+0x420819e4],0xd4
  40ac3c:	(bad)  
  40ac3e:	ret    0xeb0d
  40ac41:	dec    ecx
  40ac42:	cld    
  40ac43:	adc    cl,BYTE PTR [edx]
  40ac45:	es aas 
  40ac47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac48:	cmc    
  40ac49:	call   FWORD PTR [ecx+0x12726cca]
  40ac4f:	into   
  40ac50:	add    ecx,DWORD PTR fs:[ebx]
  40ac53:	lahf   
  40ac54:	jecxz  0x40acd4
  40ac56:	xchg   ecx,eax
  40ac57:	sahf   
  40ac58:	mov    ch,0xfc
  40ac5a:	cmc    
  40ac5b:	jnp    0x40ac0f
  40ac5d:	mul    BYTE PTR [esi+eiz*4+0x56]
  40ac61:	sub    eax,0xa880c8f
  40ac66:	pop    edx
  40ac67:	pop    ecx
  40ac68:	sbb    DWORD PTR [edx+0x764f0a7],0xf270a2cd
  40ac72:	dec    ebx
  40ac73:	pop    ss
  40ac74:	jle    0x40ac40
  40ac76:	rcr    DWORD PTR [ebx+0x1e161546],0xdf
  40ac7d:	out    0x7e,eax
  40ac7f:	pop    ebp
  40ac80:	jnp    0x40ac94
  40ac82:	scas   eax,DWORD PTR es:[edi]
  40ac83:	ja     0x40aca5
  40ac85:	or     DWORD PTR [eax+eax*2],esp
  40ac88:	add    esi,edx
  40ac8a:	sbb    BYTE PTR [eax-0x7f4014fc],bl
  40ac90:	sbb    al,0xff
  40ac92:	daa    
  40ac93:	es sbb al,0xfc
  40ac96:	sub    eax,0xb5f1d8f9
  40ac9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac9c:	mov    ds:0x68a76548,eax
  40aca1:	icebp  
  40aca2:	(bad)  
  40aca4:	jb     0x40aca7
  40aca6:	or     bl,ah
  40aca8:	(bad)  
  40aca9:	xor    al,bh
  40acab:	imul   edx,DWORD PTR [ecx+ecx*8+0x2e],0xffffffa7
  40acb0:	jno    0x40acc7
  40acb2:	adc    BYTE PTR cs:[edi+0x5c],cl
  40acb6:	fwait
  40acb7:	in     al,0x1d
  40acb9:	sub    ah,BYTE PTR [edi+eiz*2]
  40acbc:	mov    bl,0xeb
  40acbe:	out    dx,eax
  40acbf:	es pop esp
  40acc1:	hlt    
  40acc2:	loopne 0x40ac5d
  40acc4:	sti    
  40acc5:	and    esi,DWORD PTR [ebp-0x66e3e060]
  40accb:	cmp    edi,DWORD PTR [ecx+0x42ec35b6]
  40acd1:	fstp   TBYTE PTR [ebx+0x4d]
  40acd4:	and    DWORD PTR [ebx],edi
  40acd6:	scas   eax,DWORD PTR es:[edi]
  40acd7:	mov    dh,0xa7
  40acd9:	add    DWORD PTR [edi+ecx*1-0x1c],ebp
  40acdd:	ret    
  40acde:	pop    esp
  40acdf:	xor    eax,0x87b134c3
  40ace4:	pop    ds
  40ace5:	xchg   edx,eax
  40ace6:	loopne 0x40ac7e
  40ace8:	inc    eax
  40ace9:	leave  
  40acea:	xor    eax,DWORD PTR [eax-0xbd6fb1e]
  40acf0:	scas   al,BYTE PTR es:[edi]
  40acf1:	or     esp,DWORD PTR [edi+ebx*8-0x7921372e]
  40acf8:	cmp    dl,ah
  40acfa:	sbb    al,0xbc
  40acfc:	sbb    DWORD PTR [esi-0x73],ebx
  40acff:	sub    DWORD PTR [eax+0x43],0xfffffff4
  40ad03:	pop    ebx
  40ad04:	adc    BYTE PTR ds:0x1300c3d,dh
  40ad0a:	aad    0x7c
  40ad0c:	xchg   ebx,eax
  40ad0d:	rcr    BYTE PTR [ecx+0x23],1
  40ad10:	and    BYTE PTR [eax-0x5e6d5457],dl
  40ad16:	mov    eax,0xd5c71e5f
  40ad1b:	cwde   
  40ad1c:	sbb    al,0x62
  40ad1e:	jne    0x40ad3a
  40ad20:	in     eax,dx
  40ad21:	mov    edi,0x2abd575a
  40ad26:	arpl   WORD PTR [edi],cx
  40ad28:	retf   0xe5d1
  40ad2b:	xchg   edi,eax
  40ad2c:	ficom  DWORD PTR [edi-0x7e31d9e3]
  40ad32:	js     0x40ad4f
  40ad34:	or     edx,DWORD PTR [ebp+esi*1+0x60]
  40ad38:	and    al,0xb5
  40ad3a:	int3   
  40ad3b:	js     0x40ad85
  40ad3d:	mov    edi,0x8a95b2f3
  40ad42:	push   ebp
  40ad43:	mov    bl,0x92
  40ad45:	popf   
  40ad46:	(bad)  
  40ad47:	mov    eax,ds:0xf45894
  40ad4c:	xchg   ecx,eax
  40ad4d:	or     BYTE PTR [ecx+0x5c],ch
  40ad50:	scas   al,BYTE PTR es:[edi]
  40ad51:	fld    QWORD PTR [eax-0x7ebadcd8]
  40ad57:	push   ebp
  40ad58:	and    eax,edi
  40ad5a:	mov    DWORD PTR [edi+0xa],edx
  40ad5d:	push   ebx
  40ad5e:	in     al,dx
  40ad5f:	mov    bl,0x68
  40ad61:	loopne 0x40ad7d
  40ad63:	mov    ebx,0xc7420fad
  40ad68:	ret    0xead5
  40ad6b:	sub    BYTE PTR [ecx],al
  40ad6d:	xchg   esi,eax
  40ad6e:	out    dx,eax
  40ad6f:	xchg   BYTE PTR [eax],al
  40ad71:	out    0x67,eax
  40ad73:	cdq    
  40ad74:	js     0x40adcb
  40ad76:	and    ebp,DWORD PTR [eax-0x4c]
  40ad79:	pusha  
  40ad7a:	jl     0x40ad60
  40ad7c:	imul   edi,DWORD PTR [ebx-0x4b],0xffffffa7
  40ad80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad81:	rcr    BYTE PTR [eax-0x63c0537d],1
  40ad87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad88:	stos   DWORD PTR es:[edi],eax
  40ad89:	jmp    0x59262913
  40ad8e:	push   ds
  40ad8f:	and    cl,BYTE PTR [ebp+0x7d13c2b4]
  40ad95:	ins    DWORD PTR es:[edi],dx
  40ad96:	idiv   DWORD PTR [eax]
  40ad98:	cli    
  40ad99:	add    BYTE PTR [ebx],cl
  40ad9b:	push   edi
  40ad9c:	jecxz  0x40ad36
  40ad9e:	in     al,dx
  40ad9f:	mov    ds:0x45633363,al
  40ada4:	push   cs
  40ada5:	push   ecx
  40ada6:	push   edi
  40ada7:	push   0xffffff80
  40ada9:	dec    eax
  40adaa:	push   ebp
  40adab:	sub    eax,0x5160bda
  40adb0:	in     al,0x3b
  40adb2:	xchg   BYTE PTR [eax+0x609ff703],dh
  40adb8:	popa   
  40adb9:	mov    bl,0x99
  40adbb:	icebp  
  40adbc:	mov    dl,0x13
  40adbe:	push   ss
  40adbf:	pop    esp
  40adc0:	inc    ebp
  40adc1:	das    
  40adc2:	cli    
  40adc3:	iret   
  40adc4:	jne    0x40ad83
  40adc6:	lahf   
  40adc7:	inc    esp
  40adc8:	(bad)  
  40adc9:	js     0x40adcb
  40adcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adcc:	cmp    esi,eax
  40adce:	sub    DWORD PTR gs:[ebx+0x61],eax
  40add2:	aad    0x83
  40add4:	adc    BYTE PTR [ecx+0x10],al
  40add7:	loope  0x40ad72
  40add9:	sub    eax,0x6937e04
  40adde:	push   ecx
  40addf:	pop    ebp
  40ade0:	cmp    eax,0xae3746e6
  40ade5:	gs pop ss
  40ade7:	aad    0x61
  40ade9:	pop    ebx
  40adea:	dec    edi
  40adeb:	sti    
  40adec:	test   BYTE PTR [ebx],0x72
  40adef:	mov    bh,0x3f
  40adf1:	sbb    al,0x38
  40adf3:	cmp    ch,BYTE PTR [ebx-0x34]
  40adf6:	xor    ebx,edi
  40adf8:	add    al,0xf2
  40adfa:	repnz stos BYTE PTR es:[edi],al
  40adfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adfd:	jbe    0x40adc1
  40adff:	mov    cl,0xc3
  40ae01:	and    ecx,edx
  40ae03:	ins    DWORD PTR es:[edi],dx
  40ae04:	mov    ecx,0xcfd2728a
  40ae09:	jnp    0x40adf9
  40ae0b:	jge    0x40ae3b
  40ae0d:	hlt    
  40ae0e:	pusha  
  40ae0f:	mov    edx,es
  40ae11:	call   0x73b1a7fe
  40ae16:	push   eax
  40ae17:	and    ecx,DWORD PTR [esi+0x4d]
  40ae1a:	lock mov edx,0x26e96162
  40ae20:	ss pop esi
  40ae22:	mov    al,0x2e
  40ae24:	jl     0x40adaf
  40ae26:	(bad)  
  40ae27:	adc    BYTE PTR [edi],cl
  40ae29:	clc    
  40ae2a:	loopne 0x40ae81
  40ae2c:	push   cs
  40ae2d:	or     DWORD PTR [edi+0x14],0x8
  40ae31:	sub    cl,dl
  40ae33:	ins    DWORD PTR es:[edi],dx
  40ae34:	push   ds
  40ae35:	inc    ebx
  40ae36:	ds inc ecx
  40ae38:	int    0xae
  40ae3a:	aam    0xd1
  40ae3c:	or     eax,0x81e16212
  40ae41:	xchg   esi,eax
  40ae42:	addr16 dec esp
  40ae44:	imul   edx,ebx,0x37
  40ae47:	push   edx
  40ae48:	push   ebx
  40ae49:	xchg   esi,eax
  40ae4a:	and    DWORD PTR [edx],ecx
  40ae4c:	lock xchg BYTE PTR [esi-0x6f5b0fe2],bh
  40ae53:	(bad)  [ebx+0x5e]
  40ae56:	adc    edi,DWORD PTR [ecx-0x6f]
  40ae59:	pusha  
  40ae5a:	outs   dx,BYTE PTR ds:[esi]
  40ae5b:	test   edx,0xfd95b864
  40ae61:	inc    ecx
  40ae62:	cmp    ebp,ebp
  40ae64:	sti    
  40ae65:	push   esi
  40ae66:	dec    ecx
  40ae67:	out    0xf1,eax
  40ae69:	inc    edx
  40ae6a:	out    0x7a,al
  40ae6c:	test   eax,0xaaf8bec0
  40ae71:	mov    edi,0x592e9096
  40ae76:	sbb    ebx,0x59
  40ae79:	and    al,0xa5
  40ae7b:	retf   
  40ae7c:	aas    
  40ae7d:	not    DWORD PTR [edx]
  40ae7f:	cmp    DWORD PTR [esi+0x5fc9d174],esp
  40ae85:	shl    dh,0xc3
  40ae88:	add    ebp,DWORD PTR [edx+0xa]
  40ae8b:	test   eax,0x47d39206
  40ae90:	mov    ah,al
  40ae92:	sub    ecx,DWORD PTR [edi+esi*4+0x74]
  40ae96:	mov    al,0x49
  40ae98:	pop    edx
  40ae99:	dec    eax
  40ae9a:	adc    eax,0xe53a5e29
  40ae9f:	idiv   BYTE PTR [edx-0x68]
  40aea2:	sub    esi,ecx
  40aea4:	mov    dh,0xb6
  40aea6:	lods   eax,DWORD PTR ds:[esi]
  40aea7:	add    edi,edx
  40aea9:	shr    BYTE PTR ds:0xbee903b5,cl
  40aeaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aeb0:	sbb    DWORD PTR [ebp+0x66fe88c8],0x2d8f1e90
  40aeba:	(bad)  
  40aebb:	pop    esp
  40aebc:	scas   eax,DWORD PTR es:[edi]
  40aebd:	and    ecx,ebx
  40aebf:	dec    ebp
  40aec0:	sub    bl,BYTE PTR [esi-0x78ec1517]
  40aec6:	sbb    al,0x6c
  40aec8:	adc    BYTE PTR [ebx+0x714531ab],bl
  40aece:	xchg   esi,esp
  40aed0:	xchg   ecx,eax
  40aed1:	push   es
  40aed2:	pop    eax
  40aed3:	hlt    
  40aed4:	jp     0x40aefa
  40aed6:	popf   
  40aed7:	aam    0x10
  40aed9:	pop    esi
  40aeda:	pop    esi
  40aedb:	inc    edi
  40aedc:	fucom  st(3)
  40aede:	gs pop bx
  40aee1:	lods   eax,DWORD PTR ds:[esi]
  40aee2:	iret   
  40aee3:	(bad)  
  40aee4:	icebp  
  40aee5:	into   
  40aee6:	lea    edi,[edx]
  40aee8:	jns    0x40af2d
  40aeea:	pop    ebx
  40aeeb:	sysenter 
  40aeed:	jmp    0xd46bf238
  40aef2:	fs xor esi,edi
  40aef5:	dec    ecx
  40aef6:	dec    esi
  40aef7:	jne    0x40af2f
  40aef9:	mov    DWORD PTR [ebx+0x3e],ebx
  40aefc:	sti    
  40aefd:	jns    0x40af61
  40aeff:	sbb    ebp,ebx
  40af01:	imul   ebx,DWORD PTR [ebx],0x13070ee7
  40af07:	pop    ebp
  40af08:	in     eax,0x50
  40af0a:	pusha  
  40af0b:	jge    0x40af5c
  40af0d:	gs push 0xfffffff9
  40af10:	test   BYTE PTR [ebp-0x43],ah
  40af13:	int3   
  40af14:	pop    ebx
  40af15:	mov    DWORD PTR [edi+0x3c],ebx
  40af18:	cmp    al,0x16
  40af1a:	in     al,0xa2
  40af1c:	jae    0x40af8a
  40af1e:	(bad)  
  40af1f:	or     DWORD PTR [edx-0x1af6cb20],ebx
  40af25:	xchg   ebp,eax
  40af26:	xor    BYTE PTR [edx+0x1181a260],ah
  40af2c:	xchg   ebp,eax
  40af2d:	in     eax,0xbf
  40af2f:	popf   
  40af30:	retf   0x1d7c
  40af33:	js     0x40af9a
  40af35:	shr    esi,1
  40af37:	stc    
  40af38:	(bad)  
  40af39:	sub    al,0xbb
  40af3b:	mov    ds:0xff07edba,eax
  40af40:	inc    edx
  40af41:	add    eax,edi
  40af43:	dec    esp
  40af44:	(bad)  
  40af45:	pop    ss
  40af46:	add    DWORD PTR [edi+0x77d434c1],esp
  40af4c:	popf   
  40af4d:	sbb    BYTE PTR [esp+esi*1-0x24],cl
  40af51:	ret    
  40af52:	inc    ebx
  40af53:	xchg   ebx,eax
  40af54:	cmp    ebp,DWORD PTR [ebp-0x2cc436af]
  40af5a:	pop    edx
  40af5b:	dec    edx
  40af5c:	push   edi
  40af5d:	fwait
  40af5e:	sub    eax,0xbde271a9
  40af63:	adc    BYTE PTR ds:[edi],0x77
  40af67:	mov    WORD PTR [edx-0x3dd81e65],?
  40af6d:	cli    
  40af6e:	inc    ebp
  40af6f:	xlat   BYTE PTR ds:[ebx]
  40af70:	aam    0xe4
  40af72:	lods   eax,DWORD PTR ds:[esi]
  40af73:	mov    ah,0xb7
  40af75:	add    al,0x77
  40af77:	dec    eax
  40af78:	jg     0x40afdc
  40af7a:	add    BYTE PTR [edx+0x69923dec],cl
  40af80:	adc    al,0xe7
  40af82:	sti    
  40af83:	imul   edi,DWORD PTR cs:[ebx-0x54],0x3daa70f0
  40af8b:	and    al,0xdf
  40af8d:	sub    eax,0x4a6c8402
  40af92:	mov    bp,0xcf50
  40af96:	jb     0x40af68
  40af98:	xor    cl,BYTE PTR [edx-0x653b2044]
  40af9e:	pop    eax
  40af9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afa0:	shl    al,1
  40afa2:	mov    eax,ds:0x9d5cfad3
  40afa7:	mov    ds,WORD PTR [ecx-0x40df966f]
  40afad:	cdq    
  40afae:	mov    edx,0x3848cc13
  40afb3:	rol    bl,0xba
  40afb6:	jl     0x40afb9
  40afb8:	xor    al,0xac
  40afba:	push   ebp
  40afbb:	adc    dl,BYTE PTR [edx+esi*1]
  40afbe:	fcmovnu st,st(3)
  40afc0:	dec    eax
  40afc1:	leave  
  40afc2:	sar    ebp,cl
  40afc4:	add    DWORD PTR [ebx+0x211f582e],ecx
  40afca:	and    eax,DWORD PTR ds:0xce7aff97
  40afd0:	pop    es
  40afd1:	xor    al,0x4b
  40afd3:	stc    
  40afd4:	sub    ah,BYTE PTR [eax-0x7b31d2fc]
  40afda:	jmp    0xaaa:0x3fdd2c1a
  40afe1:	arpl   WORD PTR [ebx],cx
  40afe3:	pushf  
  40afe4:	jle    0x40afbc
  40afe6:	jl     0x40af96
  40afe8:	lahf   
  40afe9:	sub    ecx,DWORD PTR [edi-0x74522a32]
  40afef:	inc    esp
  40aff0:	in     eax,dx
  40aff1:	xor    eax,0xf418e3f7
  40aff6:	xchg   edi,eax
  40aff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aff8:	mov    edx,0xac7a858
  40affd:	pushf  
  40affe:	inc    ebp
  40afff:	inc    ebx
  40b000:	push   ecx
  40b001:	int    0x12
  40b003:	inc    ebp
  40b004:	shl    dh,0x19
  40b007:	mov    edx,0xc17dd210
  40b00c:	fcomp  DWORD PTR [eax-0x31fe8aba]
  40b012:	push   esp
  40b013:	xor    ebx,ecx
  40b015:	mul    eax
  40b017:	pop    edx
  40b018:	push   esp
  40b019:	or     al,0xf5
  40b01b:	mov    al,0xdf
  40b01d:	je     0x40afbd
  40b01f:	jecxz  0x40b00f
  40b021:	push   eax
  40b022:	neg    DWORD PTR [eax-0x10ece429]
  40b028:	jmp    0xc7a2:0x4f6a6486
  40b02f:	mov    al,ds:0x1b2a08d6
  40b034:	cmp    eax,0xcb64b5a8
  40b039:	std    
  40b03a:	pop    ebx
  40b03b:	(bad)  
  40b03c:	sub    edx,DWORD PTR [ebp+0x2707a209]
  40b042:	mov    esp,0x89890b13
  40b047:	(bad)  
  40b048:	adc    ebx,esi
  40b04a:	cmp    edx,edi
  40b04c:	xor    edx,DWORD PTR [ebp+0x30]
  40b04f:	jl     0x40afd9
  40b051:	cwde   
  40b052:	cmc    
  40b053:	dec    BYTE PTR [ebp+0x5e]
  40b056:	or     esi,DWORD PTR ds:0x7cf59025
  40b05c:	and    al,0xf8
  40b05e:	jbe    0x40b072
  40b060:	adc    edi,DWORD PTR [edi]
  40b062:	adc    ch,bl
  40b064:	xor    al,0xdb
  40b066:	xchg   ebp,eax
  40b067:	or     eax,0xb1bdfeaf
  40b06c:	iret   
  40b06d:	sbb    al,0x53
  40b06f:	xor    eax,0xbfbc8b4c
  40b074:	jmp    0x40b07d
  40b076:	jnp    0x40b0ed
  40b078:	(bad)  
  40b07a:	inc    ecx
  40b07b:	mov    esp,0x9884875a
  40b080:	outs   dx,DWORD PTR ds:[esi]
  40b081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b082:	pop    eax
  40b083:	sub    ch,bl
  40b085:	sbb    edx,DWORD PTR [ebx+ebp*2]
  40b088:	mov    ah,0xbc
  40b08a:	and    eax,0xe5285000
  40b08f:	popa   
  40b090:	ret    0xf142
  40b093:	test   al,0x53
  40b095:	in     eax,0x72
  40b097:	sub    DWORD PTR [ebp+ebp*2+0x179381fc],ecx
  40b09e:	out    dx,al
  40b09f:	mov    ebx,DWORD PTR [edx+0x20a17c8d]
  40b0a5:	sahf   
  40b0a6:	jle    0x40b0a8
  40b0a8:	xchg   esp,eax
  40b0a9:	cdq    
  40b0aa:	add    eax,0x6976db28
  40b0af:	jecxz  0x40b0b8
  40b0b1:	addr16 test eax,0xdbbb1318
  40b0b7:	xor    eax,0xb1147cfb
  40b0bc:	fiadd  WORD PTR [esi+0xc]
  40b0bf:	xchg   esi,eax
  40b0c0:	xor    BYTE PTR [ecx],al
  40b0c2:	adc    eax,0x38f0dc06
  40b0c7:	sub    DWORD PTR [edx+ebp*1],edi
  40b0ca:	jno    0x40b07d
  40b0cc:	clc    
  40b0cd:	or     al,0x28
  40b0cf:	xchg   DWORD PTR [ebx+ecx*1+0x4f74b7bd],esi
  40b0d6:	pop    ss
  40b0d7:	pop    ecx
  40b0d8:	pushf  
  40b0d9:	jbe    0x40b124
  40b0db:	imul   ebx,DWORD PTR [eax+edx*8],0x1e1e766f
  40b0e2:	sti    
  40b0e3:	rol    DWORD PTR [ecx-0xdcf3226],0x15
  40b0ea:	dec    esi
  40b0eb:	call   0x3b0d414
  40b0f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0f1:	ret    0xcfb
  40b0f4:	test   al,0x93
  40b0f6:	or     esp,ebp
  40b0f8:	int    0xfa
  40b0fa:	mov    ebp,esi
  40b0fc:	pop    ebp
  40b0fd:	popa   
  40b0fe:	adc    al,bh
  40b100:	add    al,BYTE PTR [edi-0x64b0fadf]
  40b106:	test   DWORD PTR [ebp-0x59755a3],esi
  40b10c:	xchg   ebp,eax
  40b10d:	cwde   
  40b10e:	inc    eax
  40b10f:	js     0x40b0b6
  40b111:	sub    al,0x18
  40b113:	or     eax,0x1422c12f
  40b118:	mov    cl,0x70
  40b11a:	and    bh,dl
  40b11c:	int3   
  40b11d:	pop    ebx
  40b11e:	bound  eax,QWORD PTR [edx-0x5557caf4]
  40b124:	fdivr  st(3),st
  40b126:	jns    0x40b13a
  40b128:	outs   dx,DWORD PTR ds:[esi]
  40b129:	push   edx
  40b12a:	jo     0x40b158
  40b12c:	mov    edx,0x2cb5e44c
  40b131:	sbb    BYTE PTR [ecx-0x4347fc58],al
  40b137:	not    DWORD PTR [edx]
  40b139:	push   eax
  40b13a:	adc    BYTE PTR [ebp+0x4b],dh
  40b13d:	lods   eax,DWORD PTR ds:[esi]
  40b13e:	jne    0x40b16b
  40b140:	imul   ecx,edx,0xc967f98b
  40b146:	iret   
  40b147:	jmp    0x40b1b5
  40b149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b14a:	push   esp
  40b14b:	jne    0x40b19d
  40b14d:	fiadd  DWORD PTR [esi+0x26d8a72f]
  40b153:	and    al,0x84
  40b155:	scas   al,BYTE PTR es:[edi]
  40b156:	(bad)  
  40b157:	push   ebp
  40b158:	mov    esp,0xb9f8e039
  40b15d:	and    bl,dl
  40b15f:	in     al,dx
  40b160:	mov    al,ds:0xfeba4f27
  40b165:	das    
  40b166:	push   0xacbe3398
  40b16b:	push   ds
  40b16c:	shr    DWORD PTR [edi+edi*8+0x5f],1
  40b170:	xchg   esi,eax
  40b171:	pop    esp
  40b172:	lods   eax,DWORD PTR ds:[esi]
  40b173:	loop   0x40b1a8
  40b175:	nop
  40b176:	mov    ebx,DWORD PTR [edx-0x80]
  40b179:	inc    BYTE PTR ds:0x55cded4c
  40b17f:	aaa    
  40b180:	jl     0x40b1cc
  40b182:	cs icebp 
  40b184:	jbe    0x40b137
  40b186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b187:	fistp  WORD PTR [esi+0x74e8aad0]
  40b18d:	out    0xda,eax
  40b18f:	inc    edx
  40b190:	stos   DWORD PTR es:[edi],eax
  40b191:	mov    cl,0xd6
  40b193:	jp     0x40b125
  40b195:	pause  
  40b197:	adc    eax,0x1db3625b
  40b19c:	enter  0x28fa,0xf
  40b1a0:	cmc    
  40b1a1:	mov    WORD PTR ds:0xd8183b07,?
  40b1a7:	jae    0x40b1b1
  40b1a9:	icebp  
  40b1aa:	add    eax,0x22b42513
  40b1af:	inc    edx
  40b1b0:	xor    dh,BYTE PTR [edx-0x7e9f6990]
  40b1b6:	ins    DWORD PTR es:[edi],dx
  40b1b7:	hlt    
  40b1b8:	mov    dh,BYTE PTR [ecx+0x772d9a2]
  40b1be:	mov    BYTE PTR [eax],al
  40b1c0:	push   edi
  40b1c1:	clc    
  40b1c2:	jp     0x40b210
  40b1c4:	retf   0x7ce
  40b1c7:	mov    BYTE PTR [edi+0x469f41a2],ah
  40b1cd:	jne    0x40b207
  40b1cf:	mov    ah,BYTE PTR [ecx-0x1da5801e]
  40b1d5:	mov    ecx,0xa0948592
  40b1da:	cmp    DWORD PTR [edi-0x36],esp
  40b1dd:	xlat   BYTE PTR ds:[ebx]
  40b1de:	sub    al,0x9c
  40b1e0:	paddw  mm5,QWORD PTR [ebx+0x3e95eb33]
  40b1e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1e8:	mov    ds:0x5d7d4954,eax
  40b1ed:	sub    DWORD PTR [ebx],0x76
  40b1f0:	pop    ecx
  40b1f1:	mov    bl,0xc5
  40b1f3:	out    dx,al
  40b1f4:	cmp    ebx,0x7588c277
  40b1fa:	mov    edx,0xa1c10317
  40b1ff:	sub    eax,0x50ebd259
  40b204:	aaa    
  40b205:	dec    ebp
  40b206:	push   0xffffffd2
  40b208:	push   0xffffffb5
  40b20a:	ret    0xca09
  40b20d:	xchg   BYTE PTR [eax+0x2f],al
  40b210:	aad    0xbb
  40b212:	das    
  40b213:	jl     0x40b24e
  40b215:	xchg   BYTE PTR [ebx+0x17],dh
  40b218:	xchg   ebp,eax
  40b219:	call   0x2181b970
  40b21e:	inc    esi
  40b21f:	or     eax,0xbce33504
  40b224:	add    cl,BYTE PTR [esi*1-0x78b1876]
  40b22b:	mov    edx,ecx
  40b22d:	sbb    BYTE PTR [ecx],0x96
  40b230:	xchg   edi,eax
  40b231:	jmp    0x3c9e:0x44db00dc
  40b238:	gs loopne 0x40b265
  40b23b:	jmp    DWORD PTR [edi+0x1155b1b3]
  40b241:	and    ah,BYTE PTR [ecx+0x3c1ba3b]
  40b247:	cmp    DWORD PTR [edx+0x56dd1b5b],0xa723f931
  40b251:	call   0x404b1146
  40b256:	pop    esp
  40b257:	mov    eax,ds:0x42380c16
  40b25c:	jnp    0x40b271
  40b25e:	push   ss
  40b25f:	dec    ebx
  40b260:	call   0x62965d5
  40b265:	aam    0xa6
  40b267:	or     eax,0xe4a34b1a
  40b26c:	mov    al,0xfb
  40b26e:	mov    ah,0x59
  40b270:	lds    edx,FWORD PTR [ecx]
  40b272:	or     al,BYTE PTR [eax]
  40b274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b275:	out    dx,eax
  40b276:	mov    dh,ch
  40b278:	push   eax
  40b279:	push   esi
  40b27a:	ror    DWORD PTR [esi-0x3e182668],1
  40b280:	pop    edx
  40b281:	popa   
  40b282:	jg     0x40b245
  40b284:	pop    ds
  40b285:	scas   eax,DWORD PTR es:[edi]
  40b286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b287:	adc    ebp,DWORD PTR [edx-0x41]
  40b28a:	pop    ebp
  40b28b:	and    BYTE PTR [esi+0x2a],dl
  40b28e:	repz arpl WORD PTR [edi+esi*4+0x25],cx
  40b293:	mov    ecx,0xee0fcad8
  40b298:	push   cs
  40b299:	ret    0x62dc
  40b29c:	and    DWORD PTR [ecx-0x22],esp
  40b29f:	out    dx,eax
  40b2a0:	in     eax,0x7d
  40b2a2:	pop    es
  40b2a3:	test   DWORD PTR [eax-0x65],0xc32f8066
  40b2aa:	mov    dh,0xa1
  40b2ac:	add    eax,0x93743fea
  40b2b1:	loope  0x40b32d
  40b2b3:	aaa    
  40b2b4:	xor    ch,BYTE PTR [ecx]
  40b2b6:	push   0xffffffab
  40b2b8:	and    ah,BYTE PTR [esi+ecx*4-0xb]
  40b2bc:	dec    ebp
  40b2bd:	cmp    eax,0xfe1731ba
  40b2c2:	adc    DWORD PTR [ebp+0x72],esp
  40b2c5:	sub    edx,DWORD PTR [eax]
  40b2c7:	push   ebx
  40b2c8:	push   esi
  40b2c9:	sbb    eax,0x37aca088
  40b2ce:	jmp    0xf440:0x5aa6b1e9
  40b2d5:	scas   eax,DWORD PTR es:[edi]
  40b2d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2d7:	pop    es
  40b2d8:	test   DWORD PTR [eax+0x470addc2],0x6e6e68df
  40b2e2:	mov    al,ds:0x9aee8442
  40b2e7:	bound  ebx,QWORD PTR [ecx+0xe80d09]
  40b2ed:	jns    0x40b36c
  40b2ef:	xor    esp,DWORD PTR [ebx-0x7fc6724f]
  40b2f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2f6:	cs repz inc eax
  40b2f9:	inc    edi
  40b2fa:	nop
  40b2fb:	push   edi
  40b2fc:	inc    esp
  40b2fd:	dec    ebx
  40b2fe:	mov    esi,0x6b7159f7
  40b303:	xlat   BYTE PTR ds:[ebx]
  40b304:	xchg   ebx,eax
  40b305:	mov    ebp,0x8b781dbf
  40b30a:	adc    al,0x29
  40b30c:	jbe    0x40b352
  40b30e:	or     cl,BYTE PTR [esi]
  40b310:	shr    DWORD PTR [esi],1
  40b312:	(bad)  
  40b313:	aam    0xe6
  40b315:	sbb    al,0xda
  40b317:	adc    eax,DWORD PTR [esi-0x24]
  40b31a:	fsubr  DWORD PTR [eax-0x79]
  40b31d:	out    dx,al
  40b31e:	mov    ch,ah
  40b320:	push   es
  40b321:	shl    DWORD PTR [edi],0xd9
  40b324:	fnop   
  40b326:	fs (bad) 
  40b328:	popa   
  40b329:	retf   0x63d
  40b32c:	xor    esp,DWORD PTR [esi+0x4aa2c51d]
  40b332:	out    0x28,eax
  40b334:	xor    DWORD PTR [ecx-0x28],edi
  40b337:	pop    esp
  40b338:	out    0xce,al
  40b33a:	shr    BYTE PTR [ebp+0x7ae8d7ed],1
  40b340:	and    DWORD PTR [esi-0x50d621ba],edx
  40b346:	data16 or ch,bl
  40b349:	dec    esp
  40b34a:	push   cs
  40b34b:	mov    ecx,0x476ab5b9
  40b350:	sahf   
  40b351:	pusha  
  40b352:	mov    ah,0x55
  40b354:	lods   al,BYTE PTR ds:[esi]
  40b355:	add    BYTE PTR ds:0xd83c4046,dl
  40b35b:	popa   
  40b35c:	cmp    edi,DWORD PTR [ebx-0x20dd3f59]
  40b362:	into   
  40b363:	mov    ecx,0x9ab9c78
  40b368:	add    eax,ebx
  40b36a:	aam    0xe3
  40b36c:	push   esi
  40b36d:	jl     0x40b3a6
  40b36f:	lock (bad) 
  40b371:	push   ebp
  40b372:	jb     0x40b3ee
  40b374:	rep ins DWORD PTR es:[edi],dx
  40b376:	and    al,0x25
  40b378:	sbb    esp,edi
  40b37a:	addr16 and bl,dh
  40b37d:	jbe    0x40b364
  40b37f:	mov    esp,0xf0788b47
  40b384:	jmp    0x80791046
  40b389:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b38a:	rcr    eax,cl
  40b38c:	jecxz  0x40b3f5
  40b38e:	leave  
  40b38f:	sbb    BYTE PTR [eax],bl
  40b391:	(bad)  
  40b392:	mov    dh,0xc5
  40b394:	addr16 daa 
  40b396:	dec    esp
  40b397:	sub    DWORD PTR [eax],ebp
  40b399:	neg    DWORD PTR gs:[ebp-0x6c]
  40b39d:	jae    0x40b338
  40b39f:	ins    DWORD PTR es:[edi],dx
  40b3a0:	repz jbe 0x40b3b2
  40b3a3:	in     eax,dx
  40b3a4:	push   esi
  40b3a5:	xor    ebp,0xffffff87
  40b3a8:	adc    ch,cl
  40b3aa:	shr    al,0x3
  40b3ad:	aad    0x10
  40b3af:	push   esi
  40b3b0:	dec    ebp
  40b3b1:	rol    eax,1
  40b3b3:	xor    ebp,DWORD PTR [ecx+0x5bc424b8]
  40b3b9:	jg     0x40b428
  40b3bb:	out    0x4f,al
  40b3bd:	std    
  40b3be:	ja     0x40b3fa
  40b3c0:	inc    ebp
  40b3c1:	add    al,0x11
  40b3c3:	jge    0x40b37e
  40b3c5:	inc    edi
  40b3c6:	mov    eax,0xe5a98787
  40b3cb:	jmp    FWORD PTR [eax+0x606db43a]
  40b3d1:	in     al,dx
  40b3d2:	or     edx,DWORD PTR [eax-0x1d604718]
  40b3d8:	sub    al,0x98
  40b3da:	retf   
  40b3db:	or     eax,0x8442b286
  40b3e0:	hlt    
  40b3e1:	push   esp
  40b3e2:	and    al,0xff
  40b3e4:	je     0x40b413
  40b3e6:	cmc    
  40b3e7:	fld    TBYTE PTR [eax-0x5e]
  40b3ea:	ror    BYTE PTR [eax+0x2e],cl
  40b3ed:	jns    0x40b3f4
  40b3ef:	push   esp
  40b3f0:	inc    edi
  40b3f1:	xchg   esp,eax
  40b3f2:	int    0xf8
  40b3f4:	ffreep st(2)
  40b3f6:	imul   esp,DWORD PTR [ecx],0xf795d1b
  40b3fc:	mov    ecx,0x7b17290b
  40b401:	sub    DWORD PTR [edx-0x37],ecx
  40b404:	sbb    al,0x30
  40b406:	sub    cl,bl
  40b408:	scas   al,BYTE PTR es:[edi]
  40b409:	cmp    ecx,DWORD PTR [eax-0x79]
  40b40c:	fdivr  QWORD PTR [ebx+0x2416d81e]
  40b412:	idiv   BYTE PTR [edi-0x68428cc5]
  40b418:	jns    0x40b3ee
  40b41a:	pop    ecx
  40b41b:	inc    esp
  40b41c:	cmp    eax,0xb9d7b5d5
  40b421:	pop    eax
  40b422:	cli    
  40b423:	(bad)  
  40b424:	(bad)  ds:0xace3b1ba
  40b42a:	dec    ebp
  40b42b:	add    DWORD PTR [edx],ebp
  40b42d:	sub    ecx,DWORD PTR [ebp-0x6e]
  40b430:	adc    BYTE PTR [eax+0x57],0x71
  40b434:	cs add al,0x20
  40b437:	out    dx,eax
  40b438:	adc    eax,0x788b62ac
  40b43d:	lock retf 0x50fd
  40b441:	and    eax,0x7c470dcd
  40b446:	(bad)  
  40b447:	in     eax,dx
  40b448:	or     dh,bl
  40b44a:	lods   eax,DWORD PTR ds:[esi]
  40b44b:	jns    0x40b4b3
  40b44d:	ror    BYTE PTR [eax],cl
  40b44f:	(bad)  
  40b450:	push   edx
  40b451:	jecxz  0x40b415
  40b453:	ja     0x40b3f3
  40b455:	xchg   edx,eax
  40b456:	jecxz  0x40b402
  40b458:	ins    DWORD PTR es:[edi],dx
  40b459:	mov    ds:0x5993447d,al
  40b45e:	push   ebp
  40b45f:	push   eax
  40b460:	imul   esi,esp,0xa
  40b463:	xchg   edi,eax
  40b464:	xchg   ebp,esp
  40b466:	sub    BYTE PTR [ecx+0x2f],al
  40b469:	jecxz  0x40b4b3
  40b46b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b46c:	fisubr WORD PTR [edx+0x4631e80b]
  40b472:	arpl   di,bx
  40b474:	int3   
  40b475:	call   0x342e2c19
  40b47a:	mov    edx,0x6f51ab18
  40b47f:	inc    eax
  40b480:	inc    edx
  40b481:	cmp    edi,DWORD PTR [edi]
  40b483:	push   0x8a6c6e0b
  40b488:	ror    eax,1
  40b48a:	pop    edx
  40b48b:	xchg   ebp,eax
  40b48c:	lea    edx,[edx+0x30fa0898]
  40b492:	push   ecx
  40b493:	jge    0x40b4f9
  40b495:	add    ecx,DWORD PTR [ecx+0x4002bce1]
  40b49b:	and    edx,edi
  40b49d:	inc    eax
  40b49e:	dec    ebx
  40b49f:	out    0xf9,al
  40b4a1:	mov    ch,0x12
  40b4a3:	into   
  40b4a4:	jl     0x40b4fa
  40b4a6:	and    edi,DWORD PTR [edi]
  40b4a8:	jno    0x40b500
  40b4aa:	push   0xffffffed
  40b4ac:	jmp    DWORD PTR [eax+0x7f36d6cd]
  40b4b2:	nop
  40b4b3:	jmp    0x2528:0xee117bc1
  40b4ba:	das    
  40b4bb:	dec    eax
  40b4bc:	cli    
  40b4bd:	xchg   DWORD PTR [eax+0x66],esp
  40b4c0:	out    0xd8,eax
  40b4c2:	cmp    DWORD PTR ds:0xb12c3659,0x47
  40b4c9:	push   edi
  40b4ca:	push   ebp
  40b4cb:	call   0x7293:0xceb428e1
  40b4d2:	sbb    al,0xa8
  40b4d4:	mov    bl,0xfb
  40b4d6:	es mov edi,0xaa9b6222
  40b4dc:	push   ds
  40b4dd:	(bad)  
  40b4de:	ins    BYTE PTR es:[edi],dx
  40b4df:	push   ebp
  40b4e0:	push   esi
  40b4e1:	jae    0x40b478
  40b4e3:	add    eax,0xc510109f
  40b4e8:	sbb    DWORD PTR [ecx+0x3d],eax
  40b4eb:	in     eax,dx
  40b4ec:	nop
  40b4ed:	xor    al,0xf3
  40b4ef:	cmp    dh,BYTE PTR [edi-0x2]
  40b4f2:	sub    DWORD PTR [ecx-0x55dceeb3],edi
  40b4f8:	lods   eax,DWORD PTR ds:[esi]
  40b4f9:	inc    esi
  40b4fa:	xchg   DWORD PTR [eax+0x69],esi
  40b4fd:	xor    edi,DWORD PTR [eax+0x46953655]
  40b503:	sbb    al,0x8
  40b505:	xor    ebp,DWORD PTR [ecx-0x360f2162]
  40b50b:	mov    esp,edx
  40b50d:	jp     0x40b491
  40b50f:	imul   eax,DWORD PTR [ebx],0x17e2cea1
  40b515:	aas    
  40b516:	sub    DWORD PTR [esi+0x4b0e37ee],edx
  40b51c:	daa    
  40b51d:	and    BYTE PTR [edi-0x7a],0x7e
  40b521:	inc    ebp
  40b522:	add    DWORD PTR [ecx],esp
  40b524:	mov    bh,0xbb
  40b526:	(bad)  
  40b527:	and    BYTE PTR [ebx-0x9],cl
  40b52a:	jbe    0x40b518
  40b52c:	dec    edi
  40b52d:	xor    DWORD PTR [ebp+ecx*2-0x2d438552],eax
  40b534:	mov    ebx,0x96e437fa
  40b539:	mov    ebp,0x2b9ece90
  40b53e:	imul   esi,DWORD PTR [ebp+0x50173b18],0xe798be67
  40b548:	sbb    edi,ebp
  40b54a:	jmp    0xcaa:0xe1d6bd10
  40b551:	ja     0x40b58e
  40b553:	jb     0x40b54d
  40b555:	add    bh,BYTE PTR [esi+0x42]
  40b558:	dec    ecx
  40b559:	jnp    0x40b5b7
  40b55b:	adc    DWORD PTR [edi-0x36],ecx
  40b55e:	shl    BYTE PTR [ebp-0x2d300357],1
  40b564:	adc    DWORD PTR [esi],ebx
  40b566:	inc    ecx
  40b567:	adc    dh,BYTE PTR ds:0xa9735346
  40b56d:	loopne 0x40b55b
  40b56f:	pop    eax
  40b570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b571:	xor    al,0x70
  40b573:	mov    bl,0xeb
  40b575:	jle    0x40b560
  40b577:	and    eax,0x21de478f
  40b57c:	sbb    BYTE PTR [edi+0x7d14e49],ah
  40b582:	sbb    eax,0x3bdaad54
  40b587:	push   es
  40b588:	dec    esp
  40b589:	adc    ebp,DWORD PTR [eax+eiz*1+0x781d218f]
  40b590:	and    ecx,DWORD PTR [edi-0x61]
  40b593:	loop   0x40b537
  40b595:	and    BYTE PTR [edi-0x5defe931],ch
  40b59b:	inc    ecx
  40b59c:	xor    al,0x5a
  40b59e:	mov    ebp,0xd70a0e6e
  40b5a3:	pop    ebp
  40b5a4:	lods   eax,DWORD PTR ds:[esi]
  40b5a5:	dec    ebp
  40b5a6:	mov    dl,0xa8
  40b5a8:	xor    edx,edi
  40b5aa:	and    al,0x23
  40b5ac:	out    0x1b,eax
  40b5ae:	rcl    BYTE PTR [edx],1
  40b5b0:	fisttp QWORD PTR [esi+0x476b4dfd]
  40b5b6:	sub    BYTE PTR [eax-0x40],ch
  40b5b9:	or     BYTE PTR [esi+0x5f7058be],0x9
  40b5c0:	in     eax,dx
  40b5c1:	(bad)
  40b5c5:	and    ebp,DWORD PTR [esp+eax*4]
  40b5c8:	stos   BYTE PTR es:[edi],al
  40b5c9:	mov    edx,ebp
  40b5cb:	outs   dx,BYTE PTR ds:[esi]
  40b5cc:	adc    bh,BYTE PTR [ebp+0x24b1c200]
  40b5d2:	fisttp DWORD PTR [eax]
  40b5d4:	pop    esp
  40b5d5:	xor    eax,0xefe98f9b
  40b5da:	add    ah,dl
  40b5dc:	fld    QWORD PTR [ecx+0x752c2988]
  40b5e2:	frstor [edx+0x4c]
  40b5e5:	sahf   
  40b5e6:	jne    0x40b5b5
  40b5e8:	jle    0x40b58e
  40b5ea:	outs   dx,DWORD PTR ds:[esi]
  40b5eb:	sub    ebp,edx
  40b5ed:	pop    ecx
  40b5ee:	xor    BYTE PTR ds:0x5fc52c36,cl
  40b5f4:	and    DWORD PTR [ebp+0x7e],edi
  40b5f7:	push   edi
  40b5f8:	in     eax,0x45
  40b5fa:	mov    ah,BYTE PTR ds:0x27d41b9e
  40b600:	adc    cl,BYTE PTR [ebp+0x52d0b2bd]
  40b606:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b607:	pop    eax
  40b608:	push   cs
  40b609:	addr16 nop
  40b60b:	jb     0x40b61d
  40b60d:	stos   DWORD PTR es:[edi],eax
  40b60e:	out    dx,eax
  40b60f:	dec    ecx
  40b610:	push   edi
  40b611:	pop    ecx
  40b612:	mov    ebp,0xfcb48e8e
  40b617:	stos   BYTE PTR es:[edi],al
  40b618:	jg     0x40b5f9
  40b61a:	mov    ecx,0xa9f71cea
  40b61f:	mov    esi,DWORD PTR [eax]
  40b621:	xchg   BYTE PTR [edx-0x6e],bh
  40b624:	mov    WORD PTR [ebp+0x12],es
  40b627:	push   ss
  40b628:	push   ss
  40b629:	or     bl,dl
  40b62b:	dec    ebx
  40b62c:	stos   BYTE PTR es:[edi],al
  40b62d:	rcl    DWORD PTR [eax+0x206652e5],1
  40b633:	(bad)  
  40b634:	xchg   ecx,eax
  40b635:	xchg   BYTE PTR [edx-0x26],dh
  40b638:	fs jne 0x40b693
  40b63b:	adc    DWORD PTR [bp+0x27],0xed8a275
  40b643:	adc    esi,eax
  40b645:	cmc    
  40b646:	fisttp DWORD PTR gs:[eax-0x6]
  40b64a:	stc    
  40b64b:	aas    
  40b64c:	ins    DWORD PTR es:[edi],dx
  40b64d:	popa   
  40b64e:	mov    eax,ds:0x6c88b8e2
  40b653:	nop
  40b654:	iret   
  40b655:	and    edi,eax
  40b657:	aam    0xdd
  40b659:	test   BYTE PTR [ebp+ebp*1+0x1c],0x39
  40b65e:	mov    WORD PTR [edi-0x1ffa9afa],?
  40b664:	mov    esi,esp
  40b666:	add    BYTE PTR [edx+0x4c97ae15],cl
  40b66c:	jb     0x40b6ed
  40b66e:	xchg   esi,eax
  40b66f:	cli    
  40b670:	popa   
  40b671:	mov    es,WORD PTR [eax+0x41]
  40b674:	inc    esp
  40b675:	xchg   ebp,eax
  40b676:	xchg   esi,eax
  40b677:	pop    edx
  40b678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b679:	jecxz  0x40b5fb
  40b67b:	push   esi
  40b67c:	scas   al,BYTE PTR es:[edi]
  40b67d:	out    0xed,al
  40b67f:	addr16 push cs
  40b681:	push   0xffffffe4
  40b683:	pop    ss
  40b684:	fidivr WORD PTR [esi]
  40b686:	icebp  
  40b687:	cmp    bh,ah
  40b689:	les    esp,FWORD PTR [esp+ebp*4]
  40b68c:	test   al,0x2c
  40b68e:	push   ds
  40b68f:	(bad)  
  40b690:	xchg   ebx,eax
  40b691:	add    BYTE PTR [ecx*1+0x6ea29161],bh
  40b698:	adc    DWORD PTR [esi],eax
  40b69a:	pushf  
  40b69b:	cmp    DWORD PTR [edx+0x2ba0a8a1],esi
  40b6a1:	mov    esi,0xdee445b7
  40b6a6:	dec    edx
  40b6a7:	sbb    dh,ch
  40b6a9:	dec    DWORD PTR ds:0x84c1d56b
  40b6af:	repz jecxz 0x40b6d0
  40b6b2:	in     eax,dx
  40b6b3:	push   0xffffffa0
  40b6b5:	mov    eax,0x188f925c
  40b6ba:	sahf   
  40b6bb:	nop
  40b6bc:	mov    esp,0xab075c14
  40b6c1:	mov    dh,BYTE PTR [eax-0x53]
  40b6c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6c5:	rcl    BYTE PTR [edi-0xc],0x6d
  40b6c9:	pop    eax
  40b6ca:	nop
  40b6cb:	cdq    
  40b6cc:	push   ss
  40b6cd:	nop
  40b6ce:	adc    esi,DWORD PTR [edi+ebp*8]
  40b6d1:	pop    ebp
  40b6d3:	(bad)  
  40b6d4:	popf   
  40b6d5:	jne    0x40b662
  40b6d7:	mov    ebp,esp
  40b6d9:	sbb    BYTE PTR [ecx+0x50e5ea39],bh
  40b6df:	and    bl,BYTE PTR [eax]
  40b6e1:	daa    
  40b6e2:	std    
  40b6e3:	out    dx,eax
  40b6e4:	aaa    
  40b6e5:	pushf  
  40b6e6:	cmp    DWORD PTR [ecx],ebp
  40b6e8:	push   ebx
  40b6e9:	pop    ss
  40b6ea:	(bad)  
  40b6eb:	int3   
  40b6ec:	ret    0x817
  40b6ef:	bound  ebp,QWORD PTR [esi-0x2e]
  40b6f2:	dec    esp
  40b6f3:	sbb    DWORD PTR gs:[ebp-0x57],ebp
  40b6f7:	jp     0x40b6b4
  40b6f9:	out    dx,al
  40b6fa:	adc    al,0xf6
  40b6fc:	mov    ds,WORD PTR [esi]
  40b6fe:	fs mov eax,0x5a8f2786
  40b704:	adc    BYTE PTR [edx-0xd8fa9ee],ch
  40b70a:	fs mov dl,0xaa
  40b70d:	in     al,dx
  40b70e:	shl    DWORD PTR [ebx+eiz*8],1
  40b711:	add    al,0x68
  40b713:	sub    eax,0x43cc2f61
  40b718:	xchg   ebx,eax
  40b719:	jae    0x40b718
  40b71b:	not    DWORD PTR [ebx-0x19]
  40b71e:	adc    eax,0x4d2323f4
  40b723:	push   ebx
  40b724:	sbb    ecx,edx
  40b726:	mov    cl,0xde
  40b728:	mov    ah,0x17
  40b72a:	adc    DWORD PTR [ebx],esi
  40b72c:	out    dx,al
  40b72d:	ins    DWORD PTR es:[edi],dx
  40b72e:	or     al,BYTE PTR [edi-0x65601663]
  40b734:	rcl    DWORD PTR [ecx],1
  40b736:	adc    DWORD PTR [ecx+edx*8-0x23],0xffffffe4
  40b73b:	and    eax,0x4bf13d5d
  40b740:	es add al,0x5d
  40b743:	or     al,0x6
  40b745:	xor    dh,0xf9
  40b748:	scas   al,BYTE PTR es:[edi]
  40b749:	fidivr WORD PTR [ebx+0x6d]
  40b74c:	test   BYTE PTR [esi+0x64c4a8b8],bh
  40b752:	daa    
  40b753:	ret    
  40b754:	sbb    edx,ebx
  40b756:	mov    edx,0xcbb9621a
  40b75b:	outs   dx,BYTE PTR ds:[esi]
  40b75c:	inc    esi
  40b75e:	sub    DWORD PTR [edx-0x554a6775],0xffffffef
  40b765:	repz call 0xc12b3844
  40b76b:	inc    eax
  40b76c:	daa    
  40b76d:	xchg   edi,eax
  40b76e:	xor    edx,DWORD PTR [edx-0x71]
  40b771:	ja     0x40b728
  40b773:	jge    0x40b7ac
  40b775:	jb     0x40b7bc
  40b777:	ins    DWORD PTR es:[edi],dx
  40b778:	pop    ebp
  40b779:	mov    ecx,ss
  40b77b:	mov    edi,0xc14f2b1f
  40b780:	xchg   esp,eax
  40b781:	fs test ebp,edx
  40b784:	in     eax,dx
  40b785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b786:	fwait
  40b787:	inc    eax
  40b789:	pop    ebp
  40b78a:	ins    DWORD PTR es:[edi],dx
  40b78b:	mov    bl,0x54
  40b78d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b78e:	mov    edi,0x9b79e407
  40b793:	mov    dh,0x46
  40b795:	xor    dh,BYTE PTR [esp+esi*2]
  40b798:	ror    ebx,0x8b
  40b79b:	clc    
  40b79c:	imul   ecx,DWORD PTR [ebx+eiz*1+0x747042ad],0x7
  40b7a4:	push   es
  40b7a5:	and    DWORD PTR [ebp+0xe],eax
  40b7a8:	and    cl,0x3c
  40b7ab:	or     BYTE PTR [esi+0x33],bh
  40b7ae:	stc    
  40b7af:	sar    BYTE PTR [ebp-0x70bc8785],0xb3
  40b7b6:	sbb    ebp,edx
  40b7b8:	sti    
  40b7b9:	xor    eax,0xd0e9418e
  40b7be:	dec    esi
  40b7bf:	(bad)  
  40b7c0:	jp     0x40b779
  40b7c2:	mov    esi,0xe8d580cc
  40b7c7:	sahf   
  40b7c8:	dec    eax
  40b7c9:	xchg   esi,esi
  40b7cb:	aad    0xcc
  40b7cd:	std    
  40b7ce:	or     eax,0x56e63a4c
  40b7d3:	lahf   
  40b7d4:	(bad)  
  40b7d5:	pop    esi
  40b7d6:	mov    al,0x98
  40b7d8:	cmp    bh,BYTE PTR [ebx]
  40b7da:	jb     0x40b7a9
  40b7dc:	stos   DWORD PTR es:[edi],eax
  40b7dd:	inc    edx
  40b7de:	ja     0x40b817
  40b7e0:	push   es
  40b7e1:	sbb    DWORD PTR [ebp+0x174ca411],0xffffffda
  40b7e8:	sar    ch,cl
  40b7ea:	repz into 
  40b7ec:	add    ecx,DWORD PTR [edx-0x7]
  40b7ef:	call   0x2bc1d1b6
  40b7f4:	xlat   BYTE PTR ds:[ebx]
  40b7f5:	cmp    edi,DWORD PTR [ebp-0x66]
  40b7f8:	stos   DWORD PTR es:[edi],eax
  40b7f9:	xchg   edi,eax
  40b7fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7fb:	push   ss
  40b7fc:	inc    ecx
  40b7fd:	dec    ecx
  40b7fe:	pop    ds
  40b7ff:	push   0x1a
  40b801:	cdq    
  40b802:	in     al,0xe9
  40b804:	fcomp  st(6)
  40b806:	mov    eax,0xc9584361
  40b80b:	xor    DWORD PTR [ebx-0x54],esi
  40b80e:	add    BYTE PTR [esi-0x6a332354],ah
  40b814:	idiv   BYTE PTR [ebx-0x8]
  40b817:	and    DWORD PTR [edx+0x60],ebp
  40b81a:	adc    DWORD PTR [eax-0x31],ecx
  40b81d:	in     eax,dx
  40b81e:	and    eax,0x8451476f
  40b823:	sbb    esp,esi
  40b825:	mov    dh,0xe2
  40b827:	lea    edx,[edx+0x2cb9a90c]
  40b82d:	mov    dl,0xbb
  40b82f:	(bad)  
  40b830:	cs gs out 0x79,eax
  40b834:	(bad)  
  40b835:	aaa    
  40b836:	iret   
  40b837:	cmp    esp,ebx
  40b839:	sahf   
  40b83a:	xlat   BYTE PTR ds:[ebx]
  40b83b:	inc    ecx
  40b83c:	sahf   
  40b83d:	frstor [edi+0x21]
  40b840:	adc    al,0xe2
  40b842:	mov    dl,0xa1
  40b844:	into   
  40b845:	dec    ebp
  40b846:	add    BYTE PTR [esi+0x3d35ce6],dl
  40b84c:	nop
  40b84d:	inc    ebx
  40b84e:	sub    bl,bl
  40b850:	test   eax,0x1c775ed6
  40b855:	inc    ecx
  40b856:	sub    eax,0xd5eb95c4
  40b85b:	mov    DWORD PTR [ebp+ecx*1+0x67],ebx
  40b85f:	loop   0x40b8cd
  40b861:	or     al,0x60
  40b863:	shl    BYTE PTR [ebp+0x2d40bf5a],1
  40b869:	add    eax,0x7759fe0
  40b86e:	(bad)  
  40b86f:	pop    ebp
  40b870:	mov    eax,ds:0xdf3621a5
  40b875:	das    
  40b876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b877:	repz mov ah,BYTE PTR [si]
  40b87b:	mov    dh,0x3f
  40b87d:	xchg   al,dh
  40b87f:	dec    esp
  40b880:	int3   
  40b881:	push   edi
  40b882:	es mov bh,0xc7
  40b885:	adc    al,0xd1
  40b887:	fnstsw WORD PTR [ebx-0x2]
  40b88a:	test   DWORD PTR [edi],0xab8a5a0
  40b890:	retf   
  40b891:	dec    esp
  40b892:	pop    es
  40b893:	push   ss
  40b894:	and    bh,BYTE PTR [eax-0x77]
  40b897:	adc    DWORD PTR [esi+ebp*4],ebx
  40b89a:	scas   al,BYTE PTR es:[edi]
  40b89b:	inc    ebp
  40b89c:	stos   BYTE PTR es:[edi],al
  40b89d:	fdivr  QWORD PTR ss:[ebx+0x59e72393]
  40b8a4:	loopne 0x40b8ef
  40b8a6:	xor    eax,0xae33f292
  40b8ab:	in     eax,dx
  40b8ac:	dec    ecx
  40b8ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8ae:	sub    bh,BYTE PTR [edx]
  40b8b0:	shr    esi,cl
  40b8b2:	push   0x43
  40b8b4:	sub    eax,DWORD PTR [eax]
  40b8b6:	jbe    0x40b83d
  40b8b8:	js     0x40b8c9
  40b8ba:	mov    edi,0xc715f8e7
  40b8bf:	mov    edx,DWORD PTR [ebx+0x6e]
  40b8c2:	fwait
  40b8c3:	adc    esp,DWORD PTR [ebp+ecx*8-0x2ed01659]
  40b8ca:	xlat   BYTE PTR ds:[ebx]
  40b8cb:	retf   0xe54d
  40b8ce:	mov    edx,0xfa2ff51f
  40b8d3:	shl    BYTE PTR [bx-0x6e06],1
  40b8d8:	sub    DWORD PTR [ecx],ebx
  40b8da:	(bad)  
  40b8db:	imul   DWORD PTR [ecx]
  40b8dd:	outs   dx,BYTE PTR ds:[esi]
  40b8de:	jne    0x40b92a
  40b8e0:	retf   0x4a20
  40b8e3:	mov    esp,0x6455b639
  40b8e8:	aam    0x94
  40b8ea:	daa    
  40b8eb:	adc    al,0x23
  40b8ed:	jb     0x40b93b
  40b8ef:	cmp    bh,BYTE PTR [ecx+0x2d]
  40b8f2:	pop    ds
  40b8f3:	adc    eax,0x57a49d20
  40b8f8:	cs mov edx,0xad20d8bb
  40b8fe:	sub    eax,0x591ee21b
  40b903:	rcl    cl,cl
  40b905:	jns    0x40b982
  40b907:	dec    eax
  40b908:	call   0x42fd6ff1
  40b90d:	mov    ah,0xad
  40b90f:	xchg   ebp,eax
  40b910:	xchg   ebx,eax
  40b911:	jle    0x40b95e
  40b913:	push   0xffffffcd
  40b915:	push   edi
  40b916:	(bad)  
  40b917:	addr16 in al,0x47
  40b91a:	xor    eax,DWORD PTR [edi]
  40b91c:	xor    esi,0xe7a034b5
  40b922:	sti    
  40b923:	mov    dh,0x46
  40b925:	jbe    0x40b95e
  40b927:	jp     0x40b8cd
  40b929:	cmc    
  40b92a:	arpl   ax,cx
  40b92c:	cmc    
  40b92d:	push   esp
  40b92e:	inc    esp
  40b92f:	out    0x93,eax
  40b931:	add    eax,0xf5d781a2
  40b936:	sub    ecx,DWORD PTR [esi+0x3b]
  40b939:	push   ds
  40b93a:	cmp    BYTE PTR [eax],bl
  40b93c:	dec    esi
  40b93d:	push   eax
  40b93e:	je     0x40b98d
  40b940:	test   al,0x34
  40b942:	cdq    
  40b943:	adc    al,0x6d
  40b945:	add    BYTE PTR [esi+0x66],cl
  40b948:	lock xlat BYTE PTR ds:[ebx]
  40b94a:	sub    DWORD PTR [ecx+edi*8-0x798131c7],ebx
  40b951:	out    dx,eax
  40b952:	aad    0xb0
  40b954:	mov    dl,0x9b
  40b956:	sbb    al,0x7b
  40b958:	repnz hlt 
  40b95a:	(bad)  
  40b95b:	pushf  
  40b95c:	push   es
  40b95d:	jbe    0x40b994
  40b95f:	xlat   BYTE PTR ds:[ebx]
  40b960:	stc    
  40b961:	lahf   
  40b962:	push   ecx
  40b963:	sbb    esi,DWORD PTR [ebx+0x49]
  40b966:	xor    eax,0x1cdf05ba
  40b96b:	fistp  WORD PTR [edx+0x2f]
  40b96e:	xchg   ecx,eax
  40b96f:	pop    ecx
  40b970:	mov    edi,esi
  40b972:	sub    BYTE PTR ds:0x414652f4,0xa6
  40b979:	jnp    0x40b9be
  40b97b:	div    BYTE PTR [ecx-0x716f6a60]
  40b981:	js     0x40b9db
  40b983:	or     DWORD PTR [ebp+0x19],0x4eb82b6
  40b98a:	dec    esi
  40b98b:	hlt    
  40b98c:	xchg   edx,eax
  40b98d:	mov    bh,0xdf
  40b98f:	mov    ds:0xd95d82d,eax
  40b994:	pop    es
  40b995:	fwait
  40b996:	adc    al,0x95
  40b998:	fdiv   QWORD PTR [eax+edi*2-0x13]
  40b99c:	ja     0x40ba0a
  40b99e:	fild   DWORD PTR ds:0x977a35d4
  40b9a4:	adc    al,0x2b
  40b9a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9a7:	push   esp
  40b9a8:	call   0xd7bd8b3b
  40b9ad:	rcr    BYTE PTR [edi-0x3b908bea],cl
  40b9b3:	fldcw  WORD PTR [ebp+0x38]
  40b9b6:	fwait
  40b9b7:	jae    0x40b979
  40b9b9:	stos   DWORD PTR es:[edi],eax
  40b9ba:	shl    DWORD PTR [ecx+0x31],0x99
  40b9be:	push   ecx
  40b9bf:	sub    edi,DWORD PTR [ebx-0x3887884c]
  40b9c5:	out    dx,eax
  40b9c6:	and    eax,0x12109c29
  40b9cb:	adc    al,0xc3
  40b9cd:	cmp    eax,DWORD PTR [eax]
  40b9cf:	add    dh,dl
  40b9d1:	fld    TBYTE PTR [edi+eax*8]
  40b9d4:	jp     0x40b97e
  40b9d6:	pop    ebx
  40b9d7:	cmp    bh,BYTE PTR [ecx]
  40b9d9:	test   al,0xbc
  40b9db:	test   al,0x94
  40b9dd:	push   ecx
  40b9de:	dec    eax
  40b9df:	pushf  
  40b9e0:	pop    edx
  40b9e1:	sub    dh,BYTE PTR [eax]
  40b9e3:	push   es
  40b9e4:	jmp    0xd641:0xb8561a47
  40b9eb:	ficomp WORD PTR [esi+0x27]
  40b9ee:	retf   
  40b9ef:	clc    
  40b9f0:	pusha  
  40b9f1:	loopne 0x40b97c
  40b9f3:	fs xchg ebx,eax
  40b9f5:	pop    ebp
  40b9f6:	xchg   edx,eax
  40b9f7:	add    BYTE PTR [ebp*2-0x291bf89d],al
  40b9fe:	push   ds
  40b9ff:	or     DWORD PTR [esi+0x5f7a8cc4],esi
  40ba05:	mov    bl,0xd5
  40ba07:	xor    BYTE PTR [ebx+0x7f],dh
  40ba0a:	jg     0x40ba11
  40ba0c:	mov    esp,DWORD PTR [eax+0x6e]
  40ba0f:	js     0x40b9ff
  40ba11:	ins    DWORD PTR es:[edi],dx
  40ba12:	test   BYTE PTR [eax],dl
  40ba14:	pop    es
  40ba15:	push   0xffffffd0
  40ba17:	out    dx,eax
  40ba18:	scas   al,BYTE PTR es:[edi]
  40ba19:	and    eax,0x2254f566
  40ba1e:	mov    ?,WORD PTR [ebx+0x27]
  40ba21:	stc    
  40ba22:	(bad)  
  40ba23:	imul   ebp,DWORD PTR ds:0x249d37ad,0x33
  40ba2b:	aas    
  40ba2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba2d:	stc    
  40ba2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba2f:	push   cs
  40ba30:	ins    DWORD PTR es:[edi],dx
  40ba31:	arpl   WORD PTR [ebp-0x69f31f6b],sp
  40ba37:	data16 cld 
  40ba39:	idiv   BYTE PTR [esi-0x7d93313c]
  40ba3f:	inc    ecx
  40ba40:	pusha  
  40ba41:	das    
  40ba42:	cli    
  40ba43:	(bad)
  40ba48:	fcomp  DWORD PTR [esi+0x6c269e1b]
  40ba4e:	push   esp
  40ba4f:	cmp    al,0x8
  40ba51:	mov    al,0xa8
  40ba53:	cmp    eax,0x8d5acb62
  40ba58:	imul   ebx,DWORD PTR [ebx+edx*2],0xa
  40ba5c:	lock clc 
  40ba5e:	loop   0x40ba2a
  40ba60:	push   ebx
  40ba61:	hlt    
  40ba62:	cmc    
  40ba63:	div    DWORD PTR [ebx-0x9]
  40ba66:	test   al,0x53
  40ba68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba69:	dec    ebx
  40ba6a:	enter  0xbdee,0x22
  40ba6e:	or     ebp,edi
  40ba70:	loopne 0x40baba
  40ba72:	mov    dl,0x5e
  40ba74:	arpl   WORD PTR [ecx-0x19],dx
  40ba77:	aas    
  40ba78:	pop    ebp
  40ba79:	pop    edi
  40ba7a:	push   edi
  40ba7b:	mov    ch,0x55
  40ba7d:	mov    edi,0x49f2ed70
  40ba82:	jge    0x40bafe
  40ba84:	cmp    BYTE PTR [edi-0xa],0xb7
  40ba88:	pop    eax
  40ba89:	out    dx,eax
  40ba8a:	repnz (bad)
  40ba8d:	lds    esi,FWORD PTR [ecx-0x4c0777df]
  40ba93:	mov    esi,0x460b7a26
  40ba98:	ins    BYTE PTR es:[edi],dx
  40ba99:	ins    DWORD PTR es:[edi],dx
  40ba9a:	neg    esp
  40ba9c:	xor    DWORD PTR [eax+0x36f9c0d5],ebx
  40baa2:	jmp    0x2bf7:0xf4f96ff9
  40baa9:	ror    BYTE PTR [ebp+0x1942fdfa],1
  40baaf:	inc    ecx
  40bab0:	dec    ecx
  40bab1:	xchg   esi,eax
  40bab2:	cmc    
  40bab3:	icebp  
  40bab4:	out    dx,eax
  40bab5:	xor    dl,bl
  40bab7:	jno    0x40ba9e
  40bab9:	xchg   esi,eax
  40baba:	cmp    eax,0xf2b5115d
  40babf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bac0:	retf   0x8851
  40bac3:	cmp    BYTE PTR [ebx],cl
  40bac5:	jl     0x40bb27
  40bac7:	inc    eax
  40bac8:	paddw  mm7,mm7
  40bacb:	sbb    BYTE PTR [ebx],cl
  40bacd:	or     BYTE PTR [edi-0x19208a99],ah
  40bad3:	jmp    FWORD PTR [ecx]
  40bad5:	cmp    al,0xbd
  40bad7:	sbb    BYTE PTR [esp+edi*1+0x72],0xe
  40badc:	sbb    al,0xcc
  40bade:	fild   DWORD PTR [edx+0x7c25ecca]
  40bae4:	dec    ebx
  40bae5:	sbb    bl,BYTE PTR [ebp+0x49926615]
  40baeb:	(bad)  
  40baec:	cmp    al,BYTE PTR [eax+0x328a89a9]
  40baf2:	iret   
  40baf3:	shr    eax,cl
  40baf5:	fs cld 
  40baf7:	xor    eax,0x482f1c2d
  40bafc:	(bad)  
  40bafd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bafe:	jnp    0x40bb59
  40bb00:	sbb    eax,DWORD PTR [ebx-0xedeaaf6]
  40bb06:	shl    BYTE PTR [edi-0x50ef7b51],1
  40bb0c:	dec    eax
  40bb0d:	mov    ebx,0x30d8565b
  40bb12:	ss in  al,0xf4
  40bb15:	inc    ebx
  40bb16:	and    ebx,edx
  40bb18:	ret    
  40bb19:	in     eax,dx
  40bb1a:	ins    BYTE PTR es:[edi],dx
  40bb1b:	cmp    ch,BYTE PTR [ecx+0x57dcd001]
  40bb21:	imul   ecx,DWORD PTR [ebx],0x332797dd
  40bb27:	rol    cl,cl
  40bb29:	pop    esi
  40bb2a:	pushf  
  40bb2b:	fwait
  40bb2c:	sub    ah,BYTE PTR [edi+0x42]
  40bb2f:	(bad)  
  40bb30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb31:	inc    esi
  40bb32:	add    eax,0x9b6def93
  40bb37:	push   eax
  40bb38:	mov    edx,0x20755561
  40bb3d:	icebp  
  40bb3e:	test   al,0x78
  40bb40:	add    al,0xe3
  40bb42:	mov    ss,WORD PTR [edi-0x3e]
  40bb45:	inc    esp
  40bb46:	push   es
  40bb47:	adc    DWORD PTR [edx+0x53],ecx
  40bb4a:	pop    ebx
  40bb4b:	pusha  
  40bb4c:	ret    0x54ed
  40bb4f:	mov    cl,0x62
  40bb51:	adc    BYTE PTR [ebx-0x35f8d5d3],0xd4
  40bb58:	add    eax,edx
  40bb5a:	rcr    dh,cl
  40bb5c:	mov    ecx,0x558fa12b
  40bb61:	mov    dl,BYTE PTR [eax]
  40bb63:	sub    eax,0xf1b51fc5
  40bb68:	mov    edx,0x5308e687
  40bb6d:	mul    DWORD PTR [ebx]
  40bb6f:	popf   
  40bb70:	dec    ecx
  40bb71:	xchg   ebx,eax
  40bb72:	push   esi
  40bb73:	cmp    al,0x9d
  40bb75:	mov    BYTE PTR [esi+0x675d6e14],0x8b
  40bb7c:	aad    0x96
  40bb7e:	mov    ds:0x38eeea63,al
  40bb83:	lock xchg edx,ebx
  40bb86:	jmp    0x40bb1f
  40bb88:	adc    ch,BYTE PTR [edx]
  40bb8a:	sbb    al,0x9d
  40bb8d:	push   cs
  40bb8e:	out    dx,al
  40bb8f:	clc    
  40bb90:	fs jecxz 0x40bb35
  40bb93:	sbb    ah,BYTE PTR [ecx+edi*1-0x63]
  40bb97:	pop    esp
  40bb98:	dec    esi
  40bb99:	fist   DWORD PTR [eax]
  40bb9b:	inc    edi
  40bb9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb9d:	dec    edx
  40bb9e:	or     DWORD PTR ds:0xb3c7f158,0xe10aa304
  40bba8:	cmp    DWORD PTR [ebx],ebp
  40bbaa:	and    dh,BYTE PTR ds:0xb6d15a4a
  40bbb0:	popf   
  40bbb1:	adc    eax,0xaff2853d
  40bbb6:	lods   eax,DWORD PTR ds:[esi]
  40bbb7:	dec    esp
  40bbb8:	stos   DWORD PTR es:[edi],eax
  40bbb9:	fisubr DWORD PTR [esi-0xb558abf]
  40bbbf:	rol    BYTE PTR [ecx],1
  40bbc1:	int3   
  40bbc2:	mov    ecx,0x80d29fe6
  40bbc7:	add    al,0xcf
  40bbc9:	call   0x4878f314
  40bbce:	test   eax,0x13067e08
  40bbd3:	cdq    
  40bbd4:	jg     0x40bc06
  40bbd6:	inc    ecx
  40bbd7:	mov    eax,0xfd4cea52
  40bbdc:	cmp    BYTE PTR [ebx],bl
  40bbde:	outs   dx,DWORD PTR ds:[esi]
  40bbdf:	mov    ebx,0x2fa82b24
  40bbe4:	and    eax,0x69b59e93
  40bbe9:	stc    
  40bbea:	jmp    0x40bc14
  40bbec:	and    ah,BYTE PTR [edx+eiz*4-0x60bf1021]
  40bbf3:	pop    edx
  40bbf4:	jo     0x40bbab
  40bbf6:	jb     0x40bc32
  40bbf8:	push   ss
  40bbf9:	mov    esi,0x7209bb02
  40bbfe:	loopne 0x40bc72
  40bc00:	es pop ds
  40bc02:	fild   QWORD PTR ds:0xfd5446e6
  40bc08:	pop    ss
  40bc09:	das    
  40bc0a:	and    al,0xf3
  40bc0c:	das    
  40bc0d:	add    cl,BYTE PTR [ebp-0x6792b20e]
  40bc13:	into   
  40bc14:	sahf   
  40bc15:	and    al,0x25
  40bc17:	arpl   di,ax
  40bc19:	bound  esi,QWORD PTR [ecx]
  40bc1b:	jmp    0xaf4de287
  40bc20:	dec    edi
  40bc21:	imul   DWORD PTR ds:0x51902201
  40bc27:	call   0xffe5:0x1141ebe4
  40bc2e:	sahf   
  40bc2f:	fstp   DWORD PTR [ebx-0x207f6a35]
  40bc35:	mov    ss,ebx
  40bc37:	xor    cl,dh
  40bc39:	icebp  
  40bc3a:	daa    
  40bc3b:	aam    0x45
  40bc3d:	jecxz  0x40bc21
  40bc3f:	xchg   DWORD PTR ds:0x1213b070,esp
  40bc45:	outs   dx,DWORD PTR ds:[esi]
  40bc46:	out    0x4e,al
  40bc48:	push   es
  40bc49:	sahf   
  40bc4a:	add    al,0xf6
  40bc4c:	and    DWORD PTR [esi+eax*4+0x24bbaccf],edi
  40bc53:	add    eax,0x6ba88765
  40bc58:	and    eax,DWORD PTR [ecx]
  40bc5a:	test   dl,0xe0
  40bc5d:	fistp  QWORD PTR [ecx]
  40bc5f:	popa   
  40bc60:	dec    edx
  40bc61:	in     al,0xae
  40bc63:	cmp    DWORD PTR [si],ebp
  40bc66:	mov    edi,0x2d1f9dc2
  40bc6b:	pop    ds
  40bc6c:	imul   edx,DWORD PTR [edi],0x58
  40bc6f:	dec    ebp
  40bc70:	sub    ebp,DWORD PTR [edx+0x26]
  40bc73:	mov    eax,0x21ae30b
  40bc78:	loop   0x40bc23
  40bc7a:	and    edx,esi
  40bc7c:	les    edx,FWORD PTR ds:0x4c555bac
  40bc82:	cmp    DWORD PTR [edx-0x17],ebx
  40bc85:	add    BYTE PTR [eax],bl
  40bc87:	xor    BYTE PTR [edi-0x10],bl
  40bc8a:	sbb    eax,0x7d4985d
  40bc8f:	lock mov al,0x56
  40bc92:	xchg   ebx,eax
  40bc93:	push   ebp
  40bc94:	xchg   eax,edi
  40bc96:	push   es
  40bc97:	clc    
  40bc98:	and    DWORD PTR [edi-0x37df8d04],ecx
  40bc9e:	stc    
  40bc9f:	jp     0x40bc56
  40bca1:	loop   0x40bc2d
  40bca3:	sbb    BYTE PTR [ebp+0x71],0xd7
  40bca7:	xchg   edi,eax
  40bca8:	jne    0x40bc78
  40bcaa:	jle    0x40bc33
  40bcac:	jp     0x40bc58
  40bcae:	add    ebx,DWORD PTR [ecx+eax*8-0x51a6bb37]
  40bcb5:	(bad)  
  40bcb6:	mov    dl,0x7
  40bcb8:	mov    BYTE PTR [esi+0x58ef65fd],ah
  40bcbe:	push   0x60186254
  40bcc3:	test   eax,0x710b7410
  40bcc8:	mov    WORD PTR [esi-0x79],fs
  40bccb:	push   es
  40bccc:	add    BYTE PTR ds:0x28f28ab2,dl
  40bcd2:	xchg   edi,eax
  40bcd3:	dec    ebx
  40bcd4:	cmc    
  40bcd5:	jnp    0x40bcea
  40bcd7:	bound  ebx,QWORD PTR [ebp+0x14273e49]
  40bcdd:	jne    0x40bcc9
  40bcdf:	or     dl,BYTE PTR [edi+0x64]
  40bce2:	(bad)  
  40bce3:	pop    ecx
  40bce4:	push   edi
  40bce5:	mov    bh,0x17
  40bce7:	adc    DWORD PTR [ecx],ebx
  40bce9:	dec    esp
  40bcea:	cmp    ah,BYTE PTR [esp+ebp*1-0x148647d8]
  40bcf1:	jmp    0x1a73af9a
  40bcf6:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40bcf8:	cdq    
  40bcf9:	and    ah,dh
  40bcfb:	mov    bh,0x91
  40bcfd:	cmp    bh,dh
  40bcff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd00:	mov    al,BYTE PTR [ecx+eax*1]
  40bd03:	or     BYTE PTR [edi],bl
  40bd05:	call   0x3342:0x324ece24
  40bd0c:	mov    eax,0xc7236be3
  40bd11:	xlat   BYTE PTR fs:[ebx]
  40bd13:	(bad)  
  40bd14:	adc    DWORD PTR [edi],edi
  40bd16:	xchg   edi,eax
  40bd17:	in     eax,0xfe
  40bd19:	push   ds
  40bd1a:	inc    edi
  40bd1b:	add    bl,BYTE PTR [ebp-0x6b]
  40bd1e:	dec    esp
  40bd1f:	cmp    ebp,DWORD PTR [edx+ecx*1-0x57eda738]
  40bd26:	mov    edx,0xe66015bf
  40bd2b:	repnz bnd ja 0x40bcf0
  40bd2f:	jle    0x40bd09
  40bd31:	inc    edx
  40bd32:	dec    ebp
  40bd33:	xor    bl,BYTE PTR [ebx+0xa]
  40bd36:	and    eax,0x5e17f577
  40bd3b:	or     cl,BYTE PTR [ebp+0x57ffaf9f]
  40bd41:	out    0x44,eax
  40bd43:	shl    eax,0xd8
  40bd46:	sbb    DWORD PTR [edx+eiz*8+0x16],esp
  40bd4a:	test   BYTE PTR ds:0x9cd3a262,0x72
  40bd51:	out    dx,al
  40bd52:	fnsave [esi+0x572c9100]
  40bd58:	dec    DWORD PTR [edx]
  40bd5a:	sub    DWORD PTR [esi],ebp
  40bd5c:	fwait
  40bd5d:	mov    ?,WORD PTR [ecx+0x60]
  40bd60:	pusha  
  40bd61:	cmc    
  40bd62:	gs jae 0x40bdd1
  40bd65:	ficom  DWORD PTR [edx+edx*2-0x47]
  40bd69:	cmp    ebx,DWORD PTR [edi-0x3e044624]
  40bd6f:	stos   BYTE PTR es:[edi],al
  40bd70:	outs   dx,BYTE PTR ds:[esi]
  40bd71:	iret   
  40bd72:	bound  ecx,QWORD PTR [ecx+esi*4]
  40bd75:	mov    WORD PTR [edx-0x19],ds
  40bd78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd79:	loopne 0x40bd2c
  40bd7b:	adc    edx,DWORD PTR ds:0x34e5ab02
  40bd81:	pop    ebx
  40bd82:	pop    esp
  40bd83:	mov    eax,ds:0xe2e5330
  40bd88:	pop    DWORD PTR [ebx-0x1b]
  40bd8b:	inc    edi
  40bd8c:	inc    eax
  40bd8d:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40bd8f:	mov    es,edi
  40bd91:	pop    esp
  40bd92:	mov    ebp,0x8cca8290
  40bd97:	cmp    eax,0x6c3d586c
  40bd9c:	arpl   WORD PTR [esi-0xc],di
  40bd9f:	fwait
  40bda0:	sub    al,0xee
  40bda2:	fldenv [edi]
  40bda4:	xchg   esp,eax
  40bda5:	or     eax,0xa9a0ff12
  40bdaa:	daa    
  40bdab:	xchg   esp,eax
  40bdac:	xchg   esp,ebx
  40bdae:	push   es
  40bdaf:	xlat   BYTE PTR ds:[ebx]
  40bdb0:	xor    eax,0xdf18eddd
  40bdb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdb6:	fwait
  40bdb7:	push   0x35
  40bdb9:	mov    cl,0x2d
  40bdbb:	xor    ah,BYTE PTR [ecx+eax*4]
  40bdbe:	ret    0xe026
  40bdc1:	cli    
  40bdc2:	lds    ebx,FWORD PTR [ebx-0x6830c7f2]
  40bdc8:	popf   
  40bdc9:	addr16 push cs
  40bdcb:	ret    0x38e9
  40bdce:	mov    ch,0x10
  40bdd0:	cdq    
  40bdd1:	xchg   esi,eax
  40bdd2:	adc    al,0x4f
  40bdd4:	retf   0xa2a7
  40bdd7:	(bad)  
  40bdd8:	test   DWORD PTR [edx-0x1986f442],0x2a984d03
  40bde2:	or     DWORD PTR [ebx+ebx*1-0xd58be15],0xc5a436f
  40bded:	add    al,0xb7
  40bdef:	adc    DWORD PTR [ecx+0x93899cf],ecx
  40bdf5:	jae    0x40be17
  40bdf7:	xor    edx,esi
  40bdf9:	lock les ebp,FWORD PTR ds:0x20d63256
  40be00:	test   BYTE PTR [edx-0xf7e630c],dh
  40be06:	mov    ch,0xb0
  40be08:	inc    edx
  40be09:	mov    eax,ds:0xedda3611
  40be0e:	lods   eax,DWORD PTR ds:[esi]
  40be0f:	mov    eax,ds:0xfd56a105
  40be14:	repz inc ebx
  40be16:	adc    ecx,edi
  40be18:	xor    al,0x18
  40be1a:	jl     0x40bdfa
  40be1c:	sub    al,0x18
  40be1e:	mov    esi,gs
  40be20:	cmp    bh,BYTE PTR [ebx]
  40be22:	adc    DWORD PTR [edx],eax
  40be24:	cmp    esi,DWORD PTR [ebx-0x68]
  40be27:	ret    
  40be28:	xor    esi,DWORD PTR ss:[ebx]
  40be2b:	cmp    ch,0x52
  40be2e:	or     al,0x35
  40be30:	dec    eax
  40be31:	cmp    edi,DWORD PTR [edi+0x3d095ba8]
  40be37:	in     eax,dx
  40be38:	xchg   ebx,eax
  40be39:	fstp   TBYTE PTR [edi+0x9]
  40be3c:	push   esp
  40be3d:	scas   al,BYTE PTR es:[edi]
  40be3e:	leave  
  40be3f:	popa   
  40be40:	or     DWORD PTR [edi],edi
  40be42:	dec    edi
  40be43:	pushf  
  40be44:	push   ecx
  40be45:	add    cl,BYTE PTR [eax+0x30]
  40be48:	dec    ebx
  40be49:	int3   
  40be4a:	and    BYTE PTR [edx+0x2d224069],dh
  40be50:	add    ch,BYTE PTR [edx]
  40be52:	pop    esp
  40be53:	dec    edi
  40be54:	mov    WORD PTR ds:0xe3d48296,es
  40be5a:	xchg   BYTE PTR [ecx],cl
  40be5c:	add    al,0xb0
  40be5e:	ins    BYTE PTR es:[edi],dx
  40be5f:	push   ebx
  40be60:	scas   al,BYTE PTR es:[edi]
  40be61:	xchg   ebp,eax
  40be62:	popf   
  40be63:	adc    DWORD PTR [esi+0x5b],edx
  40be66:	push   ebx
  40be67:	(bad)  
  40be68:	inc    esp
  40be69:	into   
  40be6a:	cmp    ecx,DWORD PTR [eax+0xd4eec9e]
  40be70:	mov    bl,0x58
  40be72:	xchg   DWORD PTR [ebx],eax
  40be74:	mov    ecx,0x3af66cde
  40be79:	(bad)  
  40be7a:	fcom   DWORD PTR ds:0xf8d9343
  40be80:	lea    ebx,[ebp-0x40a8bcde]
  40be86:	addr16 or edx,esi
  40be89:	leave  
  40be8a:	jbe    0x40beb1
  40be8c:	inc    edi
  40be8d:	add    eax,0xf4ea9aed
  40be92:	ja     0x40bf0d
  40be94:	jnp    0x40be4b
  40be96:	and    cl,BYTE PTR [eax]
  40be98:	mov    esi,0x612b752f
  40be9d:	cmp    al,0xee
  40be9f:	xor    DWORD PTR [esi+0x60],0x49
  40bea3:	mov    edi,0x4c2b6904
  40bea8:	jge    0x40be9a
  40beaa:	mov    ecx,0x14b45f24
  40beaf:	sub    al,0xa3
  40beb1:	mov    eax,0xa01a570e
  40beb6:	loopne 0x40bf1c
  40beb8:	push   esi
  40beb9:	outs   dx,BYTE PTR ds:[esi]
  40beba:	(bad)  
  40bebb:	sbb    al,0x44
  40bebd:	mov    ebx,0x78328bbd
  40bec2:	data16 test BYTE PTR [ecx-0x1af47fcd],ah
  40bec9:	jmp    edx
  40becb:	sub    al,0x37
  40becd:	clc    
  40bece:	std    
  40becf:	push   edx
  40bed0:	fs mov bh,0xba
  40bed3:	(bad)  
  40bed4:	fsub   QWORD PTR [esi+0x72]
  40bed7:	shl    BYTE PTR [eax],1
  40bed9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40beda:	xor    edi,DWORD PTR [eax+0x49]
  40bedd:	and    bh,BYTE PTR [ecx-0x65]
  40bee0:	fs icebp 
  40bee2:	out    0x64,al
  40bee4:	sar    DWORD PTR [ecx-0x69],cl
  40bee7:	fisub  WORD PTR [edi-0x50cffca0]
  40beed:	inc    esp
  40beee:	mov    dl,0x7c
  40bef0:	xchg   esi,eax
  40bef1:	jae    0x40be7a
  40bef3:	iret   
  40bef4:	sub    eax,0x3756f09
  40bef9:	(bad)  
  40befa:	lea    ecx,[esi-0x68]
  40befd:	adc    BYTE PTR [edi],al
  40beff:	jno    0x40beb9
  40bf01:	inc    ebp
  40bf02:	adc    cl,ah
  40bf04:	xor    al,0xae
  40bf06:	sti    
  40bf07:	cld    
  40bf08:	retf   0x3b99
  40bf0b:	cmp    al,dl
  40bf0d:	sub    ecx,ecx
  40bf0f:	push   0xffffff93
  40bf11:	dec    esp
  40bf12:	sbb    al,0xd3
  40bf14:	lea    ecx,[esi-0x27b25d25]
  40bf1a:	mov    esi,0xc4a3f0a2
  40bf1f:	push   eax
  40bf20:	add    bl,cl
  40bf22:	loop   0x40bf53
  40bf24:	arpl   cx,dx
  40bf26:	imul   ebx,DWORD PTR [ebx],0x6c
  40bf29:	jbe    0x40befd
  40bf2b:	add    eax,0xfd3a3f31
  40bf30:	rol    BYTE PTR [ecx-0x77388382],1
  40bf36:	xor    DWORD PTR [eax+0x1f73e05a],esp
  40bf3c:	aad    0xab
  40bf3e:	int    0x88
  40bf40:	stos   BYTE PTR es:[edi],al
  40bf41:	jne    0x40bf42
  40bf43:	cdq    
  40bf44:	scas   al,BYTE PTR es:[edi]
  40bf45:	fdiv   QWORD PTR [ecx+eiz*8-0x7a1bc58e]
  40bf4c:	js     0x40bf65
  40bf4e:	aaa    
  40bf4f:	cli    
  40bf50:	loope  0x40bf8d
  40bf52:	add    DWORD PTR ds:0x9b43c228,esi
  40bf58:	gs ds xchg ah,ch
  40bf5c:	and    cl,ch
  40bf5e:	mov    edi,0x37303634
  40bf63:	jge    0x40bfda
  40bf65:	je     0x40bf02
  40bf67:	mov    DWORD PTR [ebp+ebx*1+0x49],esp
  40bf6b:	sub    eax,0xf7477fee
  40bf70:	cdq    
  40bf71:	push   cs
  40bf72:	mov    BYTE PTR [ecx+ebx*4],ah
  40bf75:	clc    
  40bf76:	mov    al,0x69
  40bf78:	sahf   
  40bf79:	(bad)  
  40bf7a:	sub    DWORD PTR [ebx+eiz*2+0x2d],esi
  40bf7e:	push   es
  40bf7f:	fst    st(1)
  40bf81:	pop    eax
  40bf82:	scas   al,BYTE PTR es:[edi]
  40bf83:	das    
  40bf84:	addr16 push cs
  40bf86:	jno    0x40bfd7
  40bf88:	jp     0x40bffe
  40bf8a:	into   
  40bf8b:	or     eax,0xe427b93c
  40bf90:	fist   DWORD PTR [esi]
  40bf92:	ficomp DWORD PTR [edx]
  40bf94:	mov    edi,0xa2971c0b
  40bf99:	dec    esp
  40bf9a:	mov    eax,0xd226ea88
  40bf9f:	in     eax,0x1e
  40bfa1:	dec    esi
  40bfa2:	add    al,bl
  40bfa4:	mov    edi,0x35e8fe85
  40bfa9:	int    0x79
  40bfab:	and    esi,esp
  40bfad:	push   0xfa2111f
  40bfb2:	xor    ebp,esi
  40bfb4:	rcr    BYTE PTR [esi-0xd18551],cl
  40bfba:	rcl    DWORD PTR [ecx],0x18
  40bfbd:	sbb    eax,0x1f094e4e
  40bfc2:	or     ebx,DWORD PTR [ebx]
  40bfc4:	int    0x13
  40bfc6:	scas   al,BYTE PTR es:[edi]
  40bfc7:	(bad)  
  40bfc8:	leave  
  40bfc9:	lahf   
  40bfca:	push   ebx
  40bfcb:	pop    ebx
  40bfcc:	mov    WORD PTR [eax+0x22c5c090],fs
  40bfd2:	mov    ecx,DWORD PTR [ebp+0x7e354483]
  40bfd8:	mov    ebx,DWORD PTR [esi+ecx*2-0x55]
  40bfdc:	not    ebx
  40bfde:	iret   
  40bfdf:	mov    DWORD PTR [ecx+0x23b8ad9f],esi
  40bfe5:	xchg   esp,eax
  40bfe6:	scas   al,BYTE PTR es:[edi]
  40bfe7:	cmp    al,0x63
  40bfe9:	mov    bh,0x64
  40bfeb:	xchg   ecx,esp
  40bfed:	dec    ecx
  40bfee:	jl     0x40bf78
  40bff0:	dec    ebp
  40bff1:	out    0x53,eax
  40bff3:	adc    al,0xe2
  40bff5:	scas   al,BYTE PTR es:[edi]
  40bff6:	fisttp WORD PTR [esi]
  40bff8:	mov    ah,BYTE PTR [eax+0x5615511a]
  40bffe:	xor    al,BYTE PTR [esi+eax*2]
  40c001:	cmp    eax,0xefb54445
  40c006:	cmp    dh,BYTE PTR [ebx+0x12ed0af7]
  40c00c:	bound  ebp,QWORD PTR [eax+0x749d3fe4]
  40c012:	jae    0x40c038
  40c014:	stos   DWORD PTR es:[edi],eax
  40c015:	in     eax,dx
  40c016:	dec    esp
  40c017:	sub    al,0x8
  40c019:	popw   es
  40c01b:	pop    ss
  40c01c:	push   edi
  40c01d:	xor    al,0xda
  40c01f:	pop    ss
  40c020:	idiv   DWORD PTR [esi-0x52]
  40c023:	mov    eax,ds:0x9a72bee6
  40c028:	push   edi
  40c029:	sbb    ch,BYTE PTR [eax]
  40c02b:	fsubr  DWORD PTR [ecx]
  40c02d:	xor    ah,BYTE PTR [edx]
  40c02f:	cld    
  40c030:	adc    bl,BYTE PTR ds:0x50a4fedc
  40c036:	sti    
  40c037:	test   eax,0x6cd0acdc
  40c03c:	fnstenv [ecx+ecx*4-0x38d0304f]
  40c043:	stc    
  40c044:	call   0x4a9292b3
  40c049:	jmp    0x40c02a
  40c04b:	inc    ebx
  40c04c:	pop    ebx
  40c04d:	dec    ebp
  40c04e:	leave  
  40c04f:	jno    0x40bfe2
  40c051:	push   ecx
  40c052:	mov    al,ds:0x2683c615
  40c057:	jle    0x40c0a1
  40c059:	cmp    al,BYTE PTR [edi+esi*4-0x33458598]
  40c060:	lods   eax,DWORD PTR ds:[esi]
  40c061:	fwait
  40c062:	(bad)  
  40c063:	mov    edx,DWORD PTR [eax-0x3c]
  40c066:	adc    BYTE PTR [ebp+0xb],bl
  40c069:	lock out 0xe8,eax
  40c06c:	or     esi,DWORD PTR [eax+ebx*2]
  40c06f:	fdiv   QWORD PTR [ebx-0x452f3ff8]
  40c075:	jle    0x40c064
  40c077:	ficomp WORD PTR [edi]
  40c079:	xchg   ebx,eax
  40c07a:	cwde   
  40c07b:	ror    ebx,0x76
  40c07e:	adc    BYTE PTR [eax+0x69],0xde
  40c082:	lods   al,BYTE PTR ds:[esi]
  40c083:	sbb    BYTE PTR [edi+edi*4],bl
  40c086:	imul   edi,DWORD PTR ds:0xb18eec3e,0x277c4dcb
  40c090:	push   esi
  40c091:	xor    eax,esp
  40c093:	sub    eax,0xcdaa73ab
  40c098:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c099:	stc    
  40c09a:	pop    eax
  40c09b:	inc    ecx
  40c09c:	jmp    0xb08ae02
  40c0a1:	ds aaa 
  40c0a3:	push   es
  40c0a4:	inc    esp
  40c0a5:	pop    ebx
  40c0a6:	test   BYTE PTR [edx-0x46],bl
  40c0a9:	pop    esp
  40c0aa:	and    eax,0x1d054993
  40c0af:	inc    ebp
  40c0b0:	push   ecx
  40c0b1:	adc    eax,0x1d74787f
  40c0b6:	or     eax,0xe640dc7a
  40c0bb:	scas   al,BYTE PTR es:[edi]
  40c0bc:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40c0be:	add    eax,0xa9b15f55
  40c0c3:	imul   bh
  40c0c5:	xchg   esp,eax
  40c0c6:	retf   0xf95a
  40c0c9:	(bad)  
  40c0ca:	daa    
  40c0cb:	pop    ebx
  40c0cc:	clc    
  40c0cd:	and    DWORD PTR [ecx+0x59b68134],edi
  40c0d3:	(bad)  
  40c0d5:	ds cmp ch,ah
  40c0d8:	je     0x40c11c
  40c0da:	aam    0xd6
  40c0dc:	enter  0x1fa2,0x72
  40c0e0:	out    dx,al
  40c0e1:	sub    dh,BYTE PTR [edi+0x45be821c]
  40c0e7:	push   ds
  40c0e8:	ins    BYTE PTR es:[edi],dx
  40c0e9:	fmul   st,st(0)
  40c0eb:	push   ecx
  40c0ec:	mov    ds:0x44740ff8,al
  40c0f1:	clc    
  40c0f2:	pusha  
  40c0f3:	lods   eax,DWORD PTR ds:[esi]
  40c0f4:	push   cs
  40c0f5:	repz dec edx
  40c0f7:	xchg   ebx,eax
  40c0f8:	xlat   BYTE PTR ds:[ebx]
  40c0f9:	call   0x2cae:0xd4c14dc9
  40c100:	fild   QWORD PTR [edx]
  40c102:	ins    BYTE PTR es:[edi],dx
  40c103:	leave  
  40c104:	inc    ebx
  40c105:	xlat   BYTE PTR ds:[ebx]
  40c106:	outs   dx,BYTE PTR ds:[esi]
  40c107:	stos   BYTE PTR es:[edi],al
  40c108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c109:	loop   0x40c140
  40c10b:	call   0x5cb8:0x126c04cf
  40c112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c113:	mov    ah,0xa5
  40c115:	jge    0x40c0c2
  40c117:	(bad)  
  40c118:	addr16 xor esi,esp
  40c11b:	aaa    
  40c11c:	sub    DWORD PTR ds:0xf979ceee,0xc41b9153
  40c126:	test   WORD PTR [ebx-0x28],bp
  40c12a:	sub    bl,BYTE PTR [ecx-0x48]
  40c12d:	push   0x547772f2
  40c132:	stc    
  40c133:	sbb    ebp,esi
  40c135:	xchg   ah,al
  40c137:	inc    eax
  40c138:	(bad)  
  40c13a:	bound  ebx,QWORD PTR ds:0x268a09b6
  40c140:	push   esp
  40c141:	imul   ebx,DWORD PTR [eax+0x2],0x7b
  40c145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c146:	mov    ah,0x9b
  40c148:	push   0x36
  40c14a:	ss xchg esi,eax
  40c14c:	xchg   ebp,eax
  40c14d:	in     eax,0x1b
  40c14f:	outs   dx,BYTE PTR ds:[esi]
  40c150:	sub    al,0xff
  40c152:	push   ds
  40c153:	inc    ebp
  40c154:	lods   eax,DWORD PTR ds:[esi]
  40c155:	inc    edi
  40c156:	(bad)  
  40c157:	sahf   
  40c158:	dec    ecx
  40c159:	jb     0x40c127
  40c15b:	in     eax,0xc8
  40c15d:	push   ebp
  40c15e:	ss lahf 
  40c160:	ret    
  40c161:	cs mov al,0x75
  40c164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c165:	sub    DWORD PTR ss:0x911d822e,ecx
  40c16c:	sbb    eax,0xca10e510
  40c171:	cmc    
  40c172:	inc    edi
  40c173:	aam    0x64
  40c175:	test   al,0xe5
  40c177:	push   ds
  40c178:	push   0x74ac2dd0
  40c17d:	ror    DWORD PTR [edx-0x16],1
  40c180:	mov    esp,0xa04783f1
  40c185:	inc    ebx
  40c186:	push   esp
  40c187:	sub    DWORD PTR [ecx+0x44],edx
  40c18a:	add    edx,DWORD PTR [ebp-0x69d6c2f3]
  40c190:	gs call 0x8739:0x2f13812
  40c198:	je     0x40c1c7
  40c19a:	dec    edx
  40c19b:	fidivr DWORD PTR [edi-0x62]
  40c19e:	push   ecx
  40c19f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1a0:	pop    eax
  40c1a1:	int3   
  40c1a2:	xchg   BYTE PTR [esi+0x4cc4a7ae],dh
  40c1a8:	loope  0x40c167
  40c1aa:	mov    ecx,0x38f16265
  40c1af:	add    eax,0xf4779694
  40c1b4:	mov    al,ds:0x86bb65a0
  40c1b9:	pushf  
  40c1ba:	in     al,0x69
  40c1bc:	sbb    DWORD PTR [ecx+0x52],0xffffffc4
  40c1c0:	add    bh,ch
  40c1c2:	add    eax,0xce8ac4a
  40c1c7:	loope  0x40c14e
  40c1c9:	jl     0x40c23d
  40c1cb:	mov    ch,BYTE PTR [ebx-0x7]
  40c1ce:	xlat   BYTE PTR ds:[ebx]
  40c1cf:	sahf   
  40c1d0:	sub    eax,0x32d27cff
  40c1d5:	mov    WORD PTR [ecx],gs
  40c1d7:	pop    edx
  40c1d8:	and    al,0xaa
  40c1da:	pop    ebx
  40c1db:	fisubr DWORD PTR ds:[eax+0x6d5c3640]
  40c1e2:	jnp    0x40c1f3
  40c1e4:	push   0xffffffd9
  40c1e6:	ins    BYTE PTR es:[edi],dx
  40c1e7:	je     0x40c1e5
  40c1e9:	ja     0x40c233
  40c1eb:	int3   
  40c1ec:	jmp    0x40c1d9
  40c1ee:	rcr    BYTE PTR [ebx-0x1ec3b01a],1
  40c1f4:	or     BYTE PTR [edx+eiz*2-0x4e6abaa9],dl
  40c1fb:	fisttp WORD PTR ds:0xf0a48c55
  40c201:	cdq    
  40c202:	enter  0xa507,0x2
  40c206:	inc    BYTE PTR [ebx]
  40c208:	lock sbb dh,BYTE PTR [esi]
  40c20b:	xchg   edx,eax
  40c20c:	mov    BYTE PTR [edx],ch
  40c20e:	ins    DWORD PTR es:[edi],dx
  40c20f:	jg     0x40c1c5
  40c211:	imul   edi,edi,0x6c
  40c214:	inc    ecx
  40c215:	les    ebp,FWORD PTR [esi-0x7]
  40c218:	sbb    DWORD PTR [edi],edi
  40c21a:	mov    dl,0xd
  40c21c:	mov    esi,0x2f60f950
  40c221:	loope  0x40c249
  40c223:	test   BYTE PTR [edx],bh
  40c225:	mov    ecx,0xa8576c1a
  40c22a:	jns    0x40c298
  40c22c:	les    edx,FWORD PTR ds:0xe15b90d7
  40c232:	add    eax,0xd05a3a35
  40c237:	fdiv   QWORD PTR [ebx]
  40c239:	cli    
  40c23a:	pop    ecx
  40c23b:	das    
  40c23c:	adc    ch,BYTE PTR [ebp+0x36e0006a]
  40c242:	call   0xfa6645d
  40c247:	mov    esp,0x349cae16
  40c24c:	mov    ds:0xab7ed77c,eax
  40c251:	popa   
  40c252:	idiv   ah
  40c254:	in     eax,dx
  40c255:	sub    eax,DWORD PTR [eax-0x41df267c]
  40c25b:	in     al,dx
  40c25c:	lods   al,BYTE PTR ss:[esi]
  40c25e:	dec    ebp
  40c25f:	fs xor eax,0x94f2774f
  40c265:	or     BYTE PTR [esi-0x741a94a9],ah
  40c26b:	lock fst QWORD PTR [edx]
  40c26e:	cmp    eax,DWORD PTR [ebx+0x509ff35e]
  40c274:	imul   esp,DWORD PTR [edi+eiz*1-0x4f],0x5e73b22d
  40c27c:	xchg   ecx,eax
  40c27d:	into   
  40c27e:	(bad)
  40c281:	dec    esp
  40c282:	push   esp
  40c283:	jmp    0xee42ed53
  40c288:	xchg   edx,eax
  40c289:	push   0xe
  40c28b:	xchg   ebx,eax
  40c28c:	pop    ebx
  40c28d:	aam    0x6d
  40c28f:	ret    0xaa02
  40c292:	pop    eax
  40c293:	stc    
  40c294:	leave  
  40c295:	inc    edx
  40c296:	xor    DWORD PTR [edx+0x1429b459],edx
  40c29c:	sar    BYTE PTR [ebx+0x43a0f5fe],0x8b
  40c2a3:	ss jl  0x40c2a1
  40c2a6:	ffreep st(6)
  40c2a8:	dec    edi
  40c2a9:	mov    dl,0x21
  40c2ab:	or     DWORD PTR [ecx+0x64180a95],esi
  40c2b1:	jbe    0x40c2f6
  40c2b3:	mov    esi,0x410fb805
  40c2b8:	retf   0x23b6
  40c2bb:	and    al,0xe
  40c2bd:	gs pop eax
  40c2bf:	or     DWORD PTR [esi+0x7c],0xffffffa9
  40c2c3:	bound  eax,QWORD PTR [ebx+0x4bbf3a8c]
  40c2c9:	lods   eax,DWORD PTR ds:[esi]
  40c2ca:	and    eax,0xcb3d471
  40c2cf:	in     eax,0x85
  40c2d1:	sbb    ebp,0x6
  40c2d4:	sbb    eax,0xad96ff4e
  40c2d9:	xchg   DWORD PTR [edi+0x1375a19],ebx
  40c2df:	jae    0x40c28b
  40c2e1:	ja     0x40c2a1
  40c2e3:	push   esi
  40c2e4:	lahf   
  40c2e5:	cli    
  40c2e6:	fwait
  40c2e7:	add    dl,BYTE PTR ds:0x5d6e9867
  40c2ed:	scas   al,BYTE PTR es:[edi]
  40c2ee:	push   eax
  40c2ef:	loope  0x40c2e3
  40c2f1:	mov    gs,esi
  40c2f3:	mov    ?,WORD PTR [edx+edi*8]
  40c2f6:	or     cl,BYTE PTR [ecx-0x45]
  40c2f9:	aam    0x46
  40c2fb:	cmp    al,0xa4
  40c2fd:	jb     0x40c29b
  40c2ff:	add    dh,bh
  40c301:	jbe    0x40c2bf
  40c303:	cmp    BYTE PTR [esi+0x22583351],dl
  40c309:	mov    esi,0xd0f0b5
  40c30e:	mov    dl,0xeb
  40c310:	push   ebx
  40c311:	stos   BYTE PTR es:[edi],al
  40c312:	(bad)  
  40c313:	cwde   
  40c314:	std    
  40c315:	jns    0x40c2d3
  40c317:	push   0x1d
  40c319:	push   ecx
  40c31a:	imul   ecx,DWORD PTR [esi+ebx*4],0x520a3de2
  40c321:	xchg   esp,eax
  40c322:	pop    esp
  40c323:	push   0xba45c1f0
  40c328:	xchg   esi,eax
  40c329:	loopne 0x40c2b6
  40c32b:	sbb    dh,ah
  40c32d:	shr    ch,cl
  40c32f:	in     al,dx
  40c330:	mov    esp,DWORD PTR [edi-0x26]
  40c333:	xor    BYTE PTR [esi-0x153547a5],bh
  40c339:	mov    ch,bl
  40c33b:	aas    
  40c33c:	div    ch
  40c33e:	fistp  DWORD PTR [ebp+0x1b2cc071]
  40c344:	cs jp  0x40c317
  40c347:	jne    0x40c34a
  40c349:	addr16 sbb al,0xca
  40c34c:	(bad)  
  40c34d:	xor    BYTE PTR [esi+0x6f],cl
  40c350:	daa    
  40c351:	fs push eax
  40c353:	xchg   esi,eax
  40c354:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c355:	fwait
  40c356:	test   edi,eax
  40c358:	mov    edx,0xec45f5f3
  40c35d:	mov    es,WORD PTR [ebx+0x5b]
  40c360:	repz and BYTE PTR [ebp-0x189c1a1c],0x45
  40c368:	mov    ecx,0x10ca4d78
  40c36d:	jmp    0xcf56:0xd552272
  40c374:	xchg   BYTE PTR [edx-0x3],dh
  40c377:	or     eax,0xbef89a40
  40c37c:	push   ds
  40c37d:	mov    BYTE PTR ds:0xef8d3db4,cl
  40c383:	cmp    al,0x17
  40c385:	adc    DWORD PTR [edi-0x6f],0x61131033
  40c38c:	pop    es
  40c38d:	push   cs
  40c38e:	fcmovu st,st(6)
  40c390:	inc    ebx
  40c391:	fisubr DWORD PTR [ebx-0xe4a5f1b]
  40c397:	shl    BYTE PTR [edi],1
  40c399:	pop    edi
  40c39a:	dec    ebp
  40c39b:	adc    al,dl
  40c39d:	pop    esp
  40c39e:	mov    bh,0x50
  40c3a0:	shl    BYTE PTR [eax-0x2ebc8ad6],0x25
  40c3a7:	mov    ecx,0x7279c17f
  40c3ac:	dec    ecx
  40c3ad:	inc    eax
  40c3ae:	outs   dx,BYTE PTR ds:[esi]
  40c3af:	pop    ecx
  40c3b0:	call   0x4399f426
  40c3b5:	out    dx,al
  40c3b6:	pop    DWORD PTR [ecx]
  40c3b8:	xchg   esp,eax
  40c3b9:	cmp    eax,0xaf7a593f
  40c3be:	lahf   
  40c3bf:	mov    ds:0x7a593fac,eax
  40c3c4:	sar    BYTE PTR [ecx],1
  40c3c6:	in     al,dx
  40c3c7:	(bad)  
  40c3c9:	dec    edi
  40c3ca:	pop    esp
  40c3cb:	fnstenv [ebx-0x19c1680b]
  40c3d1:	xor    DWORD PTR [edi+0x2c],ebx
  40c3d4:	sub    al,0x7b
  40c3d6:	push   esp
  40c3d7:	dec    edx
  40c3d8:	loop   0x40c3dd
  40c3da:	or     al,0xa9
  40c3dc:	adc    DWORD PTR [eax+0x29c2a41f],ebp
  40c3e2:	js     0x40c3dc
  40c3e4:	push   esp
  40c3e5:	and    DWORD PTR [edx],ecx
  40c3e7:	retf   0x4480
  40c3ea:	mov    al,ds:0xdb232716
  40c3ef:	jecxz  0x40c3f5
  40c3f1:	cmp    DWORD PTR [esi-0x21d46f08],0xffffff92
  40c3f8:	cs pop ebx
  40c3fa:	pop    edx
  40c3fb:	jmp    DWORD PTR [ebx-0x2897b22d]
  40c401:	fsubr  DWORD PTR [edx+0x61312758]
  40c407:	mov    ch,0x2f
  40c409:	ins    DWORD PTR es:[edi],dx
  40c40a:	mov    edi,0xcb50f6a5
  40c40f:	(bad)  
  40c410:	popf   
  40c411:	stos   BYTE PTR es:[edi],al
  40c412:	sbb    DWORD PTR [edx],ecx
  40c414:	imul   edi,DWORD PTR [esi],0x852bbd6e
  40c41a:	or     BYTE PTR [eax+ebp*4-0x6cd05d3e],bl
  40c421:	in     al,0x24
  40c423:	xchg   edi,eax
  40c424:	scas   al,BYTE PTR es:[edi]
  40c425:	(bad)  
  40c426:	xor    BYTE PTR cs:[ebp-0x62],0xad
  40c42b:	popa   
  40c42c:	icebp  
  40c42d:	push   0xd24196c6
  40c432:	fistp  WORD PTR [esi]
  40c434:	add    DWORD PTR ds:0xefd3d578,0x6394595c
  40c43e:	and    BYTE PTR [ebp-0x57],bl
  40c441:	and    DWORD PTR [esi],esi
  40c443:	or     eax,0xfd468904
  40c448:	xlat   BYTE PTR ds:[ebx]
  40c449:	ja     0x40c47f
  40c44b:	jmp    0x7990:0xbd7b597b
  40c452:	sub    cl,bh
  40c454:	mov    cl,0x50
  40c456:	mov    bl,0xbc
  40c458:	add    al,ch
  40c45a:	push   esi
  40c45b:	xor    eax,0x92a185c
  40c460:	aad    0x4f
  40c462:	std    
  40c463:	jmp    0x1a5e2e0
  40c468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c469:	lods   al,BYTE PTR ds:[esi]
  40c46a:	pop    eax
  40c46b:	ins    BYTE PTR es:[edi],dx
  40c46c:	mov    al,ds:0xe230bec5
  40c471:	aaa    
  40c472:	jl     0x40c4ad
  40c474:	adc    dl,al
  40c476:	mov    DWORD PTR [ebx+0x57ad406f],ebx
  40c47c:	sbb    DWORD PTR [ebx],0xffffffa6
  40c47f:	nop
  40c480:	and    esi,edi
  40c482:	adc    dh,BYTE PTR [ebp-0x1d]
  40c485:	mov    esi,0xade32ecf
  40c48a:	xchg   esp,eax
  40c48b:	cmp    al,0xd3
  40c48d:	call   0x6080:0xc2f6a439
  40c494:	mov    cl,BYTE PTR [ecx+0x36]
  40c497:	fist   WORD PTR [edx-0x5b8ba915]
  40c49d:	sti    
  40c49e:	aad    0xb4
  40c4a0:	lahf   
  40c4a1:	and    esp,0xffffff82
  40c4a4:	shld   DWORD PTR [esi+0xa11929f],esp,0x62
  40c4ac:	std    
  40c4ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4ae:	fdiv   DWORD PTR [eax-0x6f6bf3a6]
  40c4b4:	pop    eax
  40c4b5:	inc    edx
  40c4b6:	xchg   ebx,eax
  40c4b7:	jl     0x40c506
  40c4b9:	push   0x5f48996b
  40c4be:	sub    dh,bl
  40c4c0:	fsub   QWORD PTR [edx]
  40c4c2:	or     dh,BYTE PTR [edx-0x7c]
  40c4c5:	sub    DWORD PTR [ebp+0x32253935],ebp
  40c4cb:	pop    es
  40c4cc:	and    ebx,esi
  40c4ce:	cld    
  40c4cf:	rol    ch,1
  40c4d1:	rol    DWORD PTR [esi-0x46],1
  40c4d4:	mov    ah,0xba
  40c4d6:	sbb    BYTE PTR ds:0xc3f952d4,ah
  40c4dc:	add    eax,0xf512a7b7
  40c4e1:	xlat   BYTE PTR ds:[ebx]
  40c4e2:	jp     0x40c478
  40c4e4:	mov    bl,0x56
  40c4e6:	bound  eax,QWORD PTR [ecx+0x24]
  40c4e9:	push   ss
  40c4ea:	xchg   esi,eax
  40c4eb:	aas    
  40c4ec:	pop    ss
  40c4ed:	add    edi,edx
  40c4ef:	and    dl,BYTE PTR [ebx+0x49]
  40c4f2:	out    0xa8,al
  40c4f4:	jecxz  0x40c505
  40c4f6:	mov    bl,0xa6
  40c4f8:	sbb    DWORD PTR [esp+ecx*4],ebx
  40c4fb:	mov    edi,0xb24492a1
  40c500:	pop    esi
  40c501:	add    BYTE PTR [edx-0x66],dl
  40c504:	adc    DWORD PTR [esi],edi
  40c506:	mov    bl,0x99
  40c508:	neg    BYTE PTR ds:0xbf56e64
  40c50e:	scas   al,BYTE PTR es:[edi]
  40c50f:	pushf  
  40c510:	fwait
  40c511:	mov    WORD PTR [ecx],ss
  40c513:	mov    eax,ds:0x1a5ca8db
  40c518:	inc    esi
  40c519:	cmp    eax,0xad97b1c
  40c51e:	add    bh,ch
  40c520:	push   ebp
  40c521:	ret    0x9fcf
  40c524:	jle    0x40c50f
  40c526:	div    BYTE PTR [eax+0x10]
  40c529:	fstp   st(4)
  40c52b:	shl    DWORD PTR [edi],cl
  40c52d:	stos   DWORD PTR es:[edi],eax
  40c52e:	inc    eax
  40c52f:	shl    ebp,0x70
  40c532:	or     al,BYTE PTR [ebx+0x7c]
  40c535:	xchg   si,ax
  40c537:	xchg   edx,eax
  40c538:	mov    ebx,DWORD PTR [ecx]
  40c53a:	das    
  40c53b:	mov    ch,0x77
  40c53d:	(bad)  
  40c53e:	sbb    ch,BYTE PTR [ebx-0x3a]
  40c541:	into   
  40c542:	cmc    
  40c543:	mov    al,0x65
  40c545:	sub    eax,0x4852f752
  40c54a:	shl    dl,cl
  40c54c:	int3   
  40c54d:	ror    BYTE PTR [ebp-0x2fceeeef],1
  40c553:	jle    0x40c59d
  40c555:	add    al,0xa0
  40c557:	clc    
  40c558:	pop    ss
  40c559:	ret    
  40c55a:	push   0xd2d5216
  40c55f:	xor    DWORD PTR [ebx],ecx
  40c561:	in     al,0xb6
  40c563:	rcl    edx,0x8
  40c566:	fcmovnu st,st(7)
  40c568:	and    BYTE PTR [ecx],bl
  40c56a:	push   ss
  40c56b:	idiv   DWORD PTR [edx]
  40c56d:	ret    0xeea6
  40c570:	in     eax,dx
  40c571:	mov    WORD PTR [edx+edi*4-0x731e3156],fs
  40c578:	xchg   al,dl
  40c57a:	cli    
  40c57b:	imul   edx,DWORD PTR [ecx-0x74],0x53
  40c57f:	add    bl,BYTE PTR [ebp-0x2733054f]
  40c585:	daa    
  40c586:	push   0x51
  40c588:	test   DWORD PTR [eax],esp
  40c58a:	into   
  40c58b:	add    eax,0xa01297ba
  40c590:	push   0x6db15429
  40c595:	aaa    
  40c596:	push   ebx
  40c597:	test   al,0x4f
  40c599:	mov    eax,DWORD PTR [eax]
  40c59b:	jb     0x40c609
  40c59d:	mov    bx,0x5a05
  40c5a1:	aaa    
  40c5a2:	or     edx,edx
  40c5a4:	repnz sub esp,DWORD PTR [esp+ebp*1]
  40c5a8:	(bad)  
  40c5a9:	shl    DWORD PTR [edx-0x8],cl
  40c5ac:	or     BYTE PTR [ebx+eiz*8],dl
  40c5af:	pop    esp
  40c5b0:	xlat   BYTE PTR ds:[ebx]
  40c5b1:	cmp    dl,BYTE PTR [edx-0x4b309a60]
  40c5b7:	imul   ecx,DWORD PTR [eax+0x3a65ed06],0x4a297281
  40c5c1:	push   0x2e8c02e7
  40c5c6:	pop    eax
  40c5c7:	push   0x6c
  40c5c9:	daa    
  40c5ca:	sbb    dh,BYTE PTR [ebp-0x7d]
  40c5cd:	sbb    esp,DWORD PTR [ebx]
  40c5cf:	punpckhwd mm7,QWORD PTR [ebp-0x53]
  40c5d3:	xlat   BYTE PTR ds:[ebx]
  40c5d4:	es jmp 0x44cb:0x3eda51de
  40c5dc:	sbb    dh,BYTE PTR [ecx]
  40c5de:	xor    BYTE PTR [ebx+0x571eb023],cl
  40c5e4:	repz jbe 0x40c652
  40c5e7:	xchg   edi,eax
  40c5e8:	daa    
  40c5e9:	ret    0x278d
  40c5ec:	cli    
  40c5ed:	outs   dx,DWORD PTR ds:[esi]
  40c5ee:	jno    0x40c572
  40c5f0:	pusha  
  40c5f1:	pop    ecx
  40c5f2:	jo     0x40c5c0
  40c5f4:	test   al,bh
  40c5f6:	and    BYTE PTR [eax+0x39],ch
  40c5f9:	add    bl,0xe6
  40c5fc:	mov    eax,0x554628f2
  40c601:	mov    bl,0x54
  40c603:	xchg   BYTE PTR [ebx],ah
  40c605:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c606:	imul   ebx,ebp,0x77
  40c609:	test   DWORD PTR [eax-0xde8e973],edx
  40c60f:	xchg   edx,eax
  40c610:	test   eax,0x338156dd
  40c615:	mov    ebp,DWORD PTR [esi-0x557517ed]
  40c61b:	mov    dl,0xa1
  40c61d:	push   ebp
  40c61e:	mov    WORD PTR [esi+0x2d],es
  40c621:	fidiv  WORD PTR [eax+0x3348746a]
  40c627:	mov    ebp,0xcd3edab8
  40c62d:	gs mov esp,0xcdf7324d
  40c633:	inc    esp
  40c634:	xor    eax,ecx
  40c636:	lea    eax,[eax+edi*1+0x64e5c0]
  40c63d:	mov    edi,DWORD PTR [ebp+0xc]
  40c640:	xor    edi,ecx
  40c642:	add    edi,edx
  40c644:	imul   eax,edi
  40c647:	mov    edi,DWORD PTR [ebp+0xc]
  40c64a:	xor    edi,ecx
  40c64c:	sub    edi,eax
  40c64e:	mov    eax,DWORD PTR [ebp-0x4]
  40c651:	add    edi,edx
  40c653:	cmp    DWORD PTR [eax],edi
  40c655:	mov    eax,DWORD PTR [ebp-0x4]
  40c658:	mov    edi,DWORD PTR [ebp+0x10]
  40c65b:	jg     0x40c66e
  40c661:	xor    edi,ecx
  40c663:	mov    ebx,esi
  40c665:	sub    ebx,edi
  40c667:	add    DWORD PTR [eax],ebx
  40c669:	jmp    0x40c674
  40c66e:	xor    edi,ecx
  40c670:	add    edi,edx
  40c672:	add    DWORD PTR [eax],edi
  40c674:	mov    eax,DWORD PTR [ebp-0x8]
  40c677:	mov    edi,DWORD PTR [ebp-0x10]
  40c67a:	mov    eax,DWORD PTR [eax]
  40c67c:	xor    edi,ecx
  40c67e:	add    edi,0x3272df
  40c684:	not    edi
  40c686:	and    eax,edi
  40c688:	movsx  di,BYTE PTR [eax+0x1]
  40c68d:	mov    ebx,0x3b50
  40c692:	sub    di,bx
  40c695:	mov    ebx,0x8a8c
  40c69a:	xor    di,bx
  40c69d:	mov    ebx,0x4f86
  40c6a2:	cmp    di,bx
  40c6a5:	jne    0x40c6cd
  40c6ab:	movsx  di,BYTE PTR [eax]
  40c6af:	mov    ebx,0x3b50
  40c6b4:	sub    di,bx
  40c6b7:	mov    ebx,0x8a8c
  40c6bc:	xor    di,bx
  40c6bf:	mov    ebx,0x4e71
  40c6c4:	cmp    di,bx
  40c6c7:	je     0x40c6dd
  40c6cd:	mov    edi,DWORD PTR [ebp-0x10]
  40c6d0:	xor    edi,ecx
  40c6d2:	mov    ebx,esi
  40c6d4:	sub    ebx,edi
  40c6d6:	add    eax,ebx
  40c6d8:	jmp    0x40c688
  40c6dd:	mov    esi,DWORD PTR [ebp-0x14]
  40c6e0:	mov    esi,DWORD PTR [esi]
  40c6e2:	mov    edi,DWORD PTR [eax+0x3c]
  40c6e5:	lea    esi,[edi+esi*8+0x78]
  40c6e9:	mov    esi,DWORD PTR [esi+eax*1]
  40c6ec:	mov    DWORD PTR [ebp-0x8],esi
  40c6ef:	mov    esi,DWORD PTR [ebp+0x8]
  40c6f2:	xor    esi,ecx
  40c6f4:	add    esi,edx
  40c6f6:	mov    DWORD PTR [ebp-0x14],esi
  40c6f9:	mov    esi,DWORD PTR [ebp+0x8]
  40c6fc:	mov    edi,DWORD PTR [ebp-0x8]
  40c6ff:	xor    esi,ecx
  40c701:	add    esi,edx
  40c703:	pop    ebx
  40c704:	cmp    edi,esi
  40c706:	jne    0x40c724
  40c70c:	mov    eax,DWORD PTR [ebp+0xc]
  40c70f:	xor    eax,ecx
  40c711:	mov    ecx,DWORD PTR [ebp-0x8]
  40c714:	add    eax,edx
  40c716:	imul   eax,ecx
  40c719:	mov    DWORD PTR [ebp-0x8],eax
  40c71c:	push   DWORD PTR [ebp+0x18]
  40c71f:	jmp    0x40c778
  40c724:	mov    ecx,DWORD PTR [ebp-0x8]
  40c727:	add    ecx,eax
  40c729:	mov    DWORD PTR [ebp-0x14],ecx
  40c72c:	mov    ecx,DWORD PTR [ebp-0x14]
  40c72f:	mov    ecx,DWORD PTR [ecx+0xc]
  40c732:	movsx  cx,BYTE PTR [ecx+eax*1]
  40c737:	mov    edx,0x3b50
  40c73c:	sub    cx,dx
  40c73f:	mov    edx,0x8a8c
  40c744:	xor    cx,dx
  40c747:	mov    edx,0x4e77
  40c74c:	cmp    cx,dx
  40c74f:	jne    0x40c71c
  40c755:	mov    ecx,DWORD PTR ds:0x42e313
  40c75b:	mov    ecx,DWORD PTR [ecx+0x198]
  40c761:	mov    DWORD PTR [ecx],eax
  40c763:	jmp    0x40c789
  40c768:	mov    ecx,DWORD PTR [ebp+0x18]
  40c76b:	cmp    ecx,0xf89c85b8
  40c771:	jne    0x40c789
  40c777:	push   eax
  40c778:	push   DWORD PTR [ebp+0x14]
  40c77b:	push   DWORD PTR [ebp+0x10]
  40c77e:	push   DWORD PTR [ebp+0xc]
  40c781:	push   DWORD PTR [ebp+0x8]
  40c784:	call   0x409ed5
  40c789:	pop    edi
  40c78a:	pop    esi
  40c78b:	leave  
  40c78c:	ret    0x14
  40c78f:	push   ebp
  40c790:	mov    ebp,esp
  40c792:	sub    esp,0xc
  40c795:	push   esi
  40c796:	mov    esi,DWORD PTR ds:0x41ac40
  40c79c:	mov    ecx,DWORD PTR ds:0x41abdd
  40c7a2:	sub    esi,ecx
  40c7a4:	xor    esi,DWORD PTR [esi+ecx*1]
  40c7a7:	mov    esi,0xf89c85b9
  40c7ac:	sub    ecx,edx
  40c7ae:	mov    DWORD PTR [ebp-0x8],esi
  40c7b1:	sub    DWORD PTR ds:0x42b010,edi
  40c7b7:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  40c7be:	and    DWORD PTR ds:0x42901c,0x0
  40c7c8:	mov    edx,DWORD PTR ds:0x42901c
  40c7ce:	inc    edx
  40c7cf:	mov    DWORD PTR ds:0x42901c,edx
  40c7d5:	cmp    DWORD PTR ds:0x42901c,0x24
  40c7dc:	jne    0x40c7ed
  40c7e2:	push   0x42e127
  40c7e7:	call   DWORD PTR ds:0x42e9cb
  40c7ed:	cmp    DWORD PTR ds:0x42901c,0x18
  40c7f4:	jb     0x40c7c8
  40c7fa:	push   edi
  40c7fb:	mov    eax,eax
  40c7fd:	mov    eax,DWORD PTR [ebp-0x4]
  40c800:	mov    edi,DWORD PTR [ebp-0x8]
  40c803:	mov    ecx,0x7510899
  40c808:	xor    eax,ecx
  40c80a:	sub    edx,0x2378
  40c810:	xor    edi,ecx
  40c812:	adc    DWORD PTR ds:0x429020,0x74b2
  40c81c:	mov    edx,0x3272e0
  40c821:	mov    DWORD PTR ds:0x42901c,0x186b
  40c82b:	add    edi,edx
  40c82d:	add    eax,edx
  40c82f:	imul   eax,edi
  40c832:	mov    DWORD PTR ds:0x42b000,edi
  40c838:	mov    edi,DWORD PTR [ebp+0xc]
  40c83b:	cmp    edi,eax
  40c83d:	je     0x40c8c6
  40c843:	mov    DWORD PTR [ebp-0xc],esi
  40c846:	mov    eax,DWORD PTR [ebp-0xc]
  40c849:	sbb    DWORD PTR ds:0x42b008,0x2a28
  40c853:	mov    esi,DWORD PTR [ebp+0xc]
  40c856:	sub    DWORD PTR ds:0x42b010,0xd18
  40c860:	xor    eax,ecx
  40c862:	lea    eax,[eax*8+0x1939778]
  40c869:	add    DWORD PTR ds:0x42c00c,0x2208
  40c873:	mov    eax,DWORD PTR [esi+eax*1]
  40c876:	mov    DWORD PTR [ebp+0xc],eax
  40c879:	not    esi
  40c87b:	mov    eax,DWORD PTR [ebp-0x4]
  40c87e:	mov    esi,DWORD PTR [ebp-0x8]
  40c881:	or     DWORD PTR ds:0x42d008,0x42c01c
  40c88b:	xor    eax,ecx
  40c88d:	xor    esi,ecx
  40c88f:	sbb    DWORD PTR ds:0x42a008,0x42d00c
  40c899:	add    esi,edx
  40c89b:	add    eax,edx
  40c89d:	imul   eax,esi
  40c8a0:	mov    esi,DWORD PTR [ebp+0xc]
  40c8a3:	cmp    esi,eax
  40c8a5:	je     0x40c8c6
  40c8ab:	mov    eax,DWORD PTR [ebp-0x4]
  40c8ae:	xor    eax,ecx
  40c8b0:	mov    ecx,DWORD PTR [ebp+0xc]
  40c8b3:	add    eax,edx
  40c8b5:	imul   eax,ecx
  40c8b8:	add    eax,DWORD PTR [ebp+0x8]
  40c8bb:	mov    DWORD PTR [ebp+0xc],eax
  40c8be:	mov    eax,DWORD PTR [ebp+0xc]
  40c8c1:	jmp    0x40c8d7
  40c8c6:	mov    eax,DWORD PTR [ebp-0x4]
  40c8c9:	mov    esi,DWORD PTR [ebp-0x8]
  40c8cc:	xor    esi,ecx
  40c8ce:	xor    eax,ecx
  40c8d0:	add    esi,edx
  40c8d2:	add    eax,edx
  40c8d4:	imul   eax,esi
  40c8d7:	pop    edi
  40c8d8:	pop    esi
  40c8d9:	leave  
  40c8da:	ret    0x8
  40c8dd:	push   ebp
  40c8de:	mov    ebp,esp
  40c8e0:	push   ecx
  40c8e1:	add    edx,edx
  40c8e3:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  40c8ea:	adc    ecx,eax
  40c8ec:	mov    eax,DWORD PTR [ebp-0x4]
  40c8ef:	mov    edx,DWORD PTR [ebp+0x10]
  40c8f2:	mov    DWORD PTR ds:0x42b000,0x1c
  40c8fc:	cmp    DWORD PTR ds:0x42b000,0x0
  40c903:	je     0x40c957
  40c909:	cmp    DWORD PTR ds:0x42b000,0x8
  40c910:	jne    0x40c921
  40c916:	push   0x42c000
  40c91b:	call   DWORD PTR ds:0x42e9d3
  40c921:	cmp    DWORD PTR ds:0x42b000,0x9
  40c928:	jne    0x40c93b
  40c92e:	mov    ecx,DWORD PTR ds:0x42b000
  40c934:	dec    ecx
  40c935:	mov    DWORD PTR ds:0x42b000,ecx
  40c93b:	mov    ecx,DWORD PTR ds:0x42b000
  40c941:	dec    ecx
  40c942:	mov    DWORD PTR ds:0x42b000,ecx
  40c948:	jmp    0x40c8fc
  40c94d:	and    DWORD PTR ds:0x42c000,0x7708
  40c957:	mov    ecx,0x7510899
  40c95c:	xor    eax,ecx
  40c95e:	xor    DWORD PTR ds:0x42a018,0x429008
  40c968:	add    eax,0x3272e0
  40c96d:	mov    DWORD PTR [edx],eax
  40c96f:	mov    DWORD PTR ds:0x429018,0x10
  40c979:	cmp    DWORD PTR ds:0x429018,0x0
  40c980:	je     0x40c9d0
  40c986:	cmp    DWORD PTR ds:0x429018,0x4
  40c98d:	jne    0x40c9a8
  40c993:	push   0x42b008
  40c998:	push   0x429024
  40c99d:	push   0x42d000
  40c9a2:	call   DWORD PTR ds:0x42e993
  40c9a8:	cmp    DWORD PTR ds:0x429018,0x5
  40c9af:	jne    0x40c9c0
  40c9b5:	mov    eax,ds:0x429018
  40c9ba:	dec    eax
  40c9bb:	mov    ds:0x429018,eax
  40c9c0:	mov    eax,ds:0x429018
  40c9c5:	dec    eax
  40c9c6:	mov    ds:0x429018,eax
  40c9cb:	jmp    0x40c979
  40c9d0:	mov    eax,DWORD PTR [ebp+0xc]
  40c9d3:	xor    eax,ecx
  40c9d5:	push   esi
  40c9d6:	mov    esi,DWORD PTR [ebp+0x10]
  40c9d9:	mov    edx,0x3272e0
  40c9de:	add    eax,edx
  40c9e0:	mov    DWORD PTR [esi+0x4],eax
  40c9e3:	mov    eax,DWORD PTR [ebp+0x14]
  40c9e6:	mov    esi,DWORD PTR [ebp+0x10]
  40c9e9:	mov    DWORD PTR [esi+0x8],eax
  40c9ec:	mov    eax,DWORD PTR [ebp+0x18]
  40c9ef:	mov    esi,DWORD PTR [ebp+0x10]
  40c9f2:	mov    DWORD PTR [esi+0xc],eax
  40c9f5:	mov    eax,DWORD PTR [ebp+0x1c]
  40c9f8:	mov    esi,DWORD PTR [ebp+0x10]
  40c9fb:	mov    DWORD PTR [esi+0x10],eax
  40c9fe:	mov    eax,DWORD PTR [ebp+0x8]
  40ca01:	xor    eax,ecx
  40ca03:	add    eax,edx
  40ca05:	pop    esi
  40ca06:	leave  
  40ca07:	ret    0x18
  40ca0a:	push   ebp
  40ca0b:	mov    ebp,esp
  40ca0d:	sub    esp,0x9c
  40ca13:	mov    ecx,DWORD PTR [ebp+0x8]
  40ca16:	mov    DWORD PTR ds:0x429004,0x1d
  40ca20:	cmp    DWORD PTR ds:0x429004,0x0
  40ca27:	je     0x40cae1
  40ca2d:	cmp    DWORD PTR ds:0x429004,0x2
  40ca34:	jne    0x40ca4b
  40ca3a:	push   DWORD PTR [ebp-0x10]
  40ca3d:	push   DWORD PTR [ebp-0x24]
  40ca40:	push   0x1cdf
  40ca45:	call   DWORD PTR ds:0x42e997
  40ca4b:	cmp    DWORD PTR ds:0x429004,0x3
  40ca52:	jne    0x40ca66
  40ca58:	xor    eax,eax
  40ca5a:	add    eax,DWORD PTR ds:0x429004
  40ca60:	dec    eax
  40ca61:	mov    ds:0x429004,eax
  40ca66:	xor    eax,eax
  40ca68:	add    eax,DWORD PTR ds:0x429004
  40ca6e:	dec    eax
  40ca6f:	mov    ds:0x429004,eax
  40ca74:	jmp    0x40ca20
  40ca79:	and    DWORD PTR ds:0x42b00c,0x0
  40ca83:	mov    eax,ds:0x42b00c
  40ca88:	inc    eax
  40ca89:	mov    ds:0x42b00c,eax
  40ca8e:	cmp    DWORD PTR ds:0x42b00c,0x6
  40ca95:	jne    0x40cabc
  40ca9b:	push   DWORD PTR [ebp-0x28]
  40ca9e:	push   DWORD PTR [ebp-0xc]
  40caa1:	push   0x42b000
  40caa6:	push   DWORD PTR [ebp-0x20]
  40caa9:	push   0x567e
  40caae:	push   0x641c
  40cab3:	push   DWORD PTR [ebp-0x24]
  40cab6:	call   DWORD PTR ds:0x42e99f
  40cabc:	cmp    DWORD PTR ds:0x42b00c,0x5
  40cac3:	jne    0x40cad4
  40cac9:	mov    eax,ds:0x42b00c
  40cace:	inc    eax
  40cacf:	mov    ds:0x42b00c,eax
  40cad4:	cmp    DWORD PTR ds:0x42b00c,0x15
  40cadb:	jb     0x40ca83
  40cae1:	mov    eax,0x8a8c
  40cae6:	xor    ax,WORD PTR [ecx+0x20]
  40caea:	and    DWORD PTR ds:0x42c008,0x0
  40caf4:	jmp    0x40cb08
  40caf9:	xor    ecx,ecx
  40cafb:	or     ecx,DWORD PTR ds:0x42c008
  40cb01:	inc    ecx
  40cb02:	mov    DWORD PTR ds:0x42c008,ecx
  40cb08:	cmp    DWORD PTR ds:0x42c008,0x14
  40cb0f:	jae    0x40cb9f
  40cb15:	cmp    DWORD PTR ds:0x42c008,0x18
  40cb1c:	jne    0x40cb3d
  40cb22:	push   0x42d00c
  40cb27:	push   DWORD PTR [ebp-0x24]
  40cb2a:	push   0x42e0d9
  40cb2f:	push   0x627f
  40cb34:	push   DWORD PTR [ebp-0x1c]
  40cb37:	call   DWORD PTR ds:0x42e9a3
  40cb3d:	jmp    0x40caf9
  40cb42:	mov    DWORD PTR ds:0x42c010,0x15
  40cb4c:	cmp    DWORD PTR ds:0x42c010,0x0
  40cb53:	je     0x40cb9f
  40cb59:	cmp    DWORD PTR ds:0x42c010,0xa
  40cb60:	jne    0x40cb71
  40cb66:	push   0x42a000
  40cb6b:	call   DWORD PTR ds:0x42e9ab
  40cb71:	cmp    DWORD PTR ds:0x42c010,0xb
  40cb78:	jne    0x40cb8d
  40cb7e:	xor    ecx,ecx
  40cb80:	xor    ecx,DWORD PTR ds:0x42c010
  40cb86:	dec    ecx
  40cb87:	mov    DWORD PTR ds:0x42c010,ecx
  40cb8d:	mov    ecx,DWORD PTR ds:0x42c010
  40cb93:	dec    ecx
  40cb94:	mov    DWORD PTR ds:0x42c010,ecx
  40cb9a:	jmp    0x40cb4c
  40cb9f:	mov    ecx,0x3b50
  40cba4:	sub    DWORD PTR ds:0x42900c,0x429000
  40cbae:	add    ax,cx
  40cbb1:	movzx  eax,ax
  40cbb4:	mov    DWORD PTR ds:0x42b000,0x10
  40cbbe:	cmp    DWORD PTR ds:0x42b000,0x0
  40cbc5:	je     0x40cc00
  40cbcb:	cmp    DWORD PTR ds:0x42b000,0x17
  40cbd2:	jne    0x40cbee
  40cbd8:	push   0x898b
  40cbdd:	push   DWORD PTR [ebp-0x10]
  40cbe0:	push   0x429018
  40cbe5:	push   DWORD PTR [ebp-0xc]
  40cbe8:	call   DWORD PTR ds:0x42e9af
  40cbee:	mov    ecx,DWORD PTR ds:0x42b000
  40cbf4:	dec    ecx
  40cbf5:	mov    DWORD PTR ds:0x42b000,ecx
  40cbfb:	jmp    0x40cbbe
  40cc00:	mov    DWORD PTR [ebp-0x10],eax
  40cc03:	movzx  ecx,BYTE PTR ds:0x42d010
  40cc0a:	or     ecx,DWORD PTR ds:0x42a014
  40cc10:	mov    DWORD PTR ds:0x42d010,ecx
  40cc16:	mov    BYTE PTR [ebp-0x1],0x79
  40cc1a:	lea    eax,[ebp-0x1]
  40cc1d:	and    ecx,DWORD PTR ds:0x42b014
  40cc23:	mov    DWORD PTR [ebp-0xc],eax
  40cc26:	xor    DWORD PTR ds:0x42a00c,edx
  40cc2c:	jmp    0x40efb2
  40cc31:	mov    esp,0xfb9ef6c5
  40cc36:	lea    edx,[ebx+ecx*8+0x3e7be512]
  40cc3d:	sub    BYTE PTR [eax],bh
  40cc3f:	mov    ebx,0x7ae5f85a
  40cc44:	jp     0x40cc47
  40cc46:	pop    edi
  40cc47:	jp     0x40ccc3
  40cc49:	mov    esp,0x3c61a9b8
  40cc4e:	pop    ebp
  40cc4f:	dec    edx
  40cc50:	xchg   esp,eax
  40cc51:	jnp    0x40cc1f
  40cc53:	in     al,dx
  40cc54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc55:	iret   
  40cc56:	pop    ecx
  40cc57:	dec    edi
  40cc58:	sbb    eax,0x37f18e75
  40cc5d:	mov    BYTE PTR [edx-0x71],dl
  40cc60:	(bad)  [eax]
  40cc62:	cmp    ch,dh
  40cc64:	jecxz  0x40cc1b
  40cc66:	int    0x42
  40cc68:	xchg   ebx,eax
  40cc69:	(bad)  
  40cc6a:	sub    al,ah
  40cc6c:	lea    ecx,[ebp+0x2c]
  40cc6f:	ins    DWORD PTR es:[edi],dx
  40cc70:	jbe    0x40cc32
  40cc72:	add    edi,esi
  40cc74:	(bad)  
  40cc75:	lods   eax,DWORD PTR ds:[esi]
  40cc76:	or     al,0xa8
  40cc78:	scas   al,BYTE PTR es:[edi]
  40cc79:	cmp    eax,0x711c9e64
  40cc7e:	pop    ax
  40cc80:	addr16 repnz push ss
  40cc83:	pop    esp
  40cc84:	fs xor eax,0xe112269e
  40cc8a:	sub    eax,0x9120b786
  40cc8f:	mov    eax,ds:0xb1690b97
  40cc94:	sub    eax,0x83b0bbf7
  40cc99:	cmp    DWORD PTR [esi-0xa9de9e8],ebp
  40cc9f:	jp     0x40cc65
  40cca1:	push   eax
  40cca2:	sbb    BYTE PTR [esi],0xba
  40cca5:	xchg   edi,eax
  40cca6:	or     eax,0x28edc57b
  40ccab:	mov    ebp,0x3305e211
  40ccb0:	aaa    
  40ccb1:	mov    bh,cl
  40ccb3:	or     ecx,esi
  40ccb5:	xchg   ebp,eax
  40ccb6:	mov    dl,0xa8
  40ccb8:	dec    esp
  40ccb9:	xchg   ebp,eax
  40ccba:	mul    DWORD PTR [esi-0x3bf5d8ca]
  40ccc0:	sub    DWORD PTR [edx+eiz*4-0x34],esp
  40ccc4:	mov    ch,0xba
  40ccc6:	stos   BYTE PTR es:[edi],al
  40ccc7:	adc    DWORD PTR [ebp-0x6e],ecx
  40ccca:	mov    ecx,0x1b1b188e
  40cccf:	inc    esi
  40ccd0:	inc    edi
  40ccd1:	mov    esi,0x6cd8443d
  40ccd6:	push   ecx
  40ccd7:	in     eax,dx
  40ccd8:	(bad)  [edx+0x57]
  40ccdb:	cmp    eax,0xdfb5f5fa
  40cce0:	js     0x40ccfc
  40cce2:	les    ecx,FWORD PTR [ebp-0x45]
  40cce5:	push   ds
  40cce6:	hlt    
  40cce7:	shl    DWORD PTR [ebx+0x3b],1
  40ccea:	push   ecx
  40cceb:	xchg   DWORD PTR [esi+0x6c364cc8],eax
  40ccf1:	pop    edx
  40ccf2:	cmp    DWORD PTR [ecx],0x1d
  40ccf5:	enter  0x441b,0x80
  40ccf9:	xor    BYTE PTR [edx-0x59],cl
  40ccfc:	xchg   esi,eax
  40ccfd:	or     DWORD PTR [edi-0x3bf5e634],edi
  40cd03:	pop    ebx
  40cd04:	push   es
  40cd05:	jbe    0x40cd11
  40cd07:	enter  0x8d61,0x6d
  40cd0b:	pop    ebx
  40cd0c:	mov    esp,0xa112bf2
  40cd12:	dec    esi
  40cd13:	ins    BYTE PTR es:[edi],dx
  40cd14:	retf   
  40cd15:	cwde   
  40cd16:	mov    dh,0x56
  40cd18:	mov    fs,WORD PTR [edx-0x5f5c08dd]
  40cd1e:	lods   eax,DWORD PTR ds:[esi]
  40cd1f:	nop
  40cd20:	mov    dl,0x3e
  40cd22:	ja     0x40cd09
  40cd24:	dec    eax
  40cd25:	push   esi
  40cd26:	in     eax,0xd9
  40cd28:	add    eax,DWORD PTR [edx-0x6d]
  40cd2b:	outs   dx,BYTE PTR ds:[esi]
  40cd2c:	pusha  
  40cd2d:	out    dx,eax
  40cd2e:	mov    bh,0x7b
  40cd30:	sbb    ebx,esi
  40cd32:	sub    ch,BYTE PTR [ebp+0x3de222a8]
  40cd38:	out    0xe0,eax
  40cd3a:	jae    0x40cd61
  40cd3c:	sar    ch,0xed
  40cd3f:	pop    edx
  40cd40:	pop    ebx
  40cd41:	or     eax,0xee19df7d
  40cd46:	sbb    dl,BYTE PTR [eax-0x47]
  40cd49:	mov    cl,0xf3
  40cd4b:	adc    eax,0x17750720
  40cd50:	nop
  40cd51:	jo     0x40cd2e
  40cd53:	repnz and esp,DWORD PTR [edi]
  40cd56:	loop   0x40ccf5
  40cd58:	mov    ds:0x33cc47a5,eax
  40cd5d:	int3   
  40cd5e:	pop    ecx
  40cd5f:	push   0xdd20406f
  40cd64:	lods   al,BYTE PTR ds:[esi]
  40cd65:	scas   eax,DWORD PTR es:[edi]
  40cd66:	push   ecx
  40cd67:	dec    edi
  40cd68:	hlt    
  40cd69:	sub    bh,BYTE PTR [esi-0x22]
  40cd6c:	push   esi
  40cd6d:	push   ebp
  40cd6e:	xchg   ecx,eax
  40cd6f:	and    DWORD PTR [edi],esp
  40cd71:	fcomp  QWORD PTR [esi-0x37b57fc]
  40cd77:	sbb    eax,DWORD PTR [ebp+0x5fe5c1ea]
  40cd7d:	dec    esi
  40cd7e:	mov    edi,0x3ff3ff91
  40cd83:	pushf  
  40cd84:	jne    0x40cd0b
  40cd86:	mov    ds:0x85804b4,eax
  40cd8b:	cmc    
  40cd8c:	dec    eax
  40cd8d:	scas   al,BYTE PTR es:[edi]
  40cd8e:	sub    al,0x25
  40cd90:	add    al,0x99
  40cd92:	mov    edi,0x3c40a492
  40cd97:	aad    0x3
  40cd99:	xor    edx,DWORD PTR [eax-0x61]
  40cd9c:	inc    eax
  40cd9d:	inc    edi
  40cd9e:	(bad)  
  40cd9f:	jp     0x40ce15
  40cda1:	fisttp QWORD PTR [ebx+0x3a7b3201]
  40cda7:	bndldx bnd1,[ebp+ebx*2+0xa]
  40cdac:	inc    edx
  40cdad:	shl    esi,1
  40cdaf:	call   0xf759c849
  40cdb4:	sub    edx,ebp
  40cdb6:	rcr    DWORD PTR [ecx],1
  40cdb8:	rol    DWORD PTR [eax],1
  40cdba:	jno    0x40cdb5
  40cdbc:	adc    ch,BYTE PTR [eax+0x5f]
  40cdbf:	pop    ebp
  40cdc0:	in     eax,0x4a
  40cdc2:	call   0x4394bb76
  40cdc7:	mov    DWORD PTR [esi+0x2ef3fd8e],edi
  40cdcd:	pop    eax
  40cdce:	mov    bl,0xfa
  40cdd0:	jbe    0x40ce1a
  40cdd2:	pusha  
  40cdd3:	sub    BYTE PTR ds:0x522651b2,0xd7
  40cdda:	fsubp  st(4),st
  40cddc:	mov    ?,WORD PTR [ebp-0x7a]
  40cddf:	adc    dh,bh
  40cde1:	dec    esi
  40cde2:	add    edi,DWORD PTR [esi-0x73]
  40cde5:	jb     0x40cdcb
  40cde7:	imul   esp,DWORD PTR [edi+0x38376015],0xffffff97
  40cdee:	stos   BYTE PTR es:[edi],al
  40cdef:	dec    ebx
  40cdf0:	xchg   ecx,eax
  40cdf1:	pop    ebx
  40cdf2:	mov    WORD PTR [ebp-0x1],ds
  40cdf5:	in     eax,dx
  40cdf6:	in     eax,0xe1
  40cdf8:	test   al,0xde
  40cdfa:	mov    esi,0x2d8276e1
  40cdff:	adc    BYTE PTR [ebx],bl
  40ce01:	push   edx
  40ce02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce03:	and    ebp,esp
  40ce05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce06:	cmp    BYTE PTR [edx],dl
  40ce08:	xchg   DWORD PTR [ecx],eax
  40ce0a:	sbb    al,BYTE PTR ds:0x88267df3
  40ce10:	mov    esi,0x38930f36
  40ce15:	xor    DWORD PTR [ebx-0x7e31e36e],0x80c6ea6c
  40ce1f:	adc    BYTE PTR [esi+ecx*2+0xb],bh
  40ce23:	(bad)  
  40ce24:	out    dx,eax
  40ce25:	xchg   DWORD PTR [esi+0x1814c9a1],esp
  40ce2b:	or     eax,0x29aaf50a
  40ce30:	or     DWORD PTR [edx+0x1d],ecx
  40ce33:	inc    esi
  40ce34:	xchg   esp,eax
  40ce35:	neg    dh
  40ce37:	jmp    0xab5804ec
  40ce3c:	mov    ah,BYTE PTR [edx]
  40ce3e:	or     dl,BYTE PTR [ebx+edi*8]
  40ce41:	outs   dx,DWORD PTR ds:[esi]
  40ce42:	mov    eax,0x65f5c5c9
  40ce47:	and    BYTE PTR [edx+0x79390b45],0x73
  40ce4e:	out    0x9d,eax
  40ce50:	or     DWORD PTR [edi],eax
  40ce52:	sub    al,0x43
  40ce54:	sub    BYTE PTR [esi+0x57],bl
  40ce57:	push   es
  40ce58:	or     al,0xc2
  40ce5a:	leave  
  40ce5b:	sti    
  40ce5c:	je     0x40ceac
  40ce5e:	pop    es
  40ce5f:	test   al,0xef
  40ce61:	sub    al,0xa0
  40ce63:	or     BYTE PTR [ebp-0x3097c627],ah
  40ce69:	inc    edi
  40ce6a:	jb     0x40cee4
  40ce6c:	lock es fwait
  40ce6f:	shr    BYTE PTR [ebx],0x58
  40ce72:	dec    ecx
  40ce73:	inc    ecx
  40ce74:	dec    edi
  40ce75:	out    0x6e,eax
  40ce77:	add    ebp,DWORD PTR [edi+0x2d]
  40ce7a:	lods   al,BYTE PTR ds:[esi]
  40ce7b:	aad    0x66
  40ce7d:	ds (bad) 
  40ce7f:	dec    ecx
  40ce80:	mov    bh,0xa2
  40ce82:	fsubr  DWORD PTR [eax-0x48]
  40ce85:	or     cl,al
  40ce87:	add    edx,DWORD PTR [ecx+0x23]
  40ce8a:	pop    edi
  40ce8b:	cmp    bh,al
  40ce8d:	xchg   ecx,eax
  40ce8e:	test   eax,0xaa733fff
  40ce93:	icebp  
  40ce94:	jnp    0x40ce4e
  40ce96:	retf   0x638c
  40ce99:	jmp    0x6256c795
  40ce9e:	jcxz   0x40ce3f
  40cea1:	sbb    DWORD PTR [eax+0x52],0xffffffda
  40cea5:	adc    BYTE PTR [ebx-0x45],ah
  40cea8:	jecxz  0x40cebd
  40ceaa:	pop    ebp
  40ceab:	sub    DWORD PTR [edx+0x6e6dd032],esi
  40ceb1:	stc    
  40ceb2:	pop    edx
  40ceb3:	jg     0x40cebb
  40ceb5:	push   edx
  40ceb6:	pop    ebx
  40ceb7:	(bad)  
  40ceb8:	(bad)  
  40ceb9:	dec    ebx
  40ceba:	dec    esi
  40cebb:	xor    eax,0x85a2d1a0
  40cec0:	push   cs
  40cec1:	push   0xffffffa3
  40cec3:	sbb    eax,edx
  40cec5:	and    eax,0x49e74b5a
  40ceca:	and    ebx,0xffffffad
  40cecd:	out    dx,eax
  40cece:	scas   eax,DWORD PTR es:[edi]
  40cecf:	cmp    eax,0x7a82c669
  40ced4:	daa    
  40ced5:	dec    esi
  40ced6:	jle    0x40cefc
  40ced8:	xor    dh,BYTE PTR [edi-0x3d60b363]
  40cede:	aaa    
  40cedf:	add    eax,0x987d694b
  40cee4:	clc    
  40cee5:	or     esi,esi
  40cee7:	jbe    0x40cf4f
  40cee9:	adc    eax,0x4dbd352f
  40ceee:	or     eax,0xa4fe582c
  40cef3:	pop    edx
  40cef4:	adc    BYTE PTR fs:[ebx+edx*4+0x647c6c66],0x76
  40cefd:	xchg   esi,eax
  40cefe:	inc    ebx
  40ceff:	push   esi
  40cf00:	sub    eax,0x6252cda9
  40cf05:	std    
  40cf06:	in     eax,dx
  40cf07:	aam    0xd0
  40cf09:	jo     0x40cea4
  40cf0b:	pop    es
  40cf0c:	xor    BYTE PTR [ebx-0x7b],bl
  40cf0f:	popa   
  40cf10:	sub    eax,ecx
  40cf12:	xchg   ebp,eax
  40cf13:	daa    
  40cf14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf15:	retf   
  40cf16:	adc    al,BYTE PTR [edi+0x24]
  40cf19:	mov    ds:0x2b78e2e,eax
  40cf1e:	mov    ebx,0x1a9c41ad
  40cf23:	cmp    DWORD PTR [ecx],edi
  40cf25:	xor    bl,dl
  40cf27:	int    0x2c
  40cf29:	push   ebp
  40cf2a:	xchg   esp,eax
  40cf2b:	call   0x3939:0x4db6e4c8
  40cf32:	test   eax,0x854c3692
  40cf37:	and    edi,DWORD PTR ds:0x3fd540f2
  40cf3d:	sbb    ch,BYTE PTR [esi]
  40cf3f:	jne    0x40cf85
  40cf41:	mov    bl,0xb9
  40cf43:	xor    bl,BYTE PTR [ebx+0x57]
  40cf46:	les    ebp,FWORD PTR ds:0xbe185749
  40cf4c:	xchg   ebp,eax
  40cf4d:	and    DWORD PTR [ecx-0x1c28909e],0xffffffd7
  40cf54:	pushf  
  40cf55:	pop    ds
  40cf56:	xchg   edx,eax
  40cf57:	int    0x95
  40cf59:	imul   edx,DWORD PTR [eax+0xe7cd1dc],0xffffffe9
  40cf60:	or     eax,0x22618055
  40cf65:	addr16 jl 0x40cf84
  40cf68:	inc    esi
  40cf69:	cmp    eax,0xe8b7a6a2
  40cf6e:	cwde   
  40cf6f:	sbb    DWORD PTR [edx-0x4ddccdcc],esp
  40cf75:	test   DWORD PTR [edi-0x4184921d],esi
  40cf7b:	mov    bh,0xc3
  40cf7d:	push   edx
  40cf7e:	sti    
  40cf7f:	stos   DWORD PTR es:[edi],eax
  40cf80:	out    0x42,al
  40cf82:	cmp    ebx,DWORD PTR [ebp+0x7e]
  40cf85:	repz sbb al,0x90
  40cf88:	es jmp 0xa51:0xb03bd445
  40cf90:	outs   dx,BYTE PTR ds:[esi]
  40cf91:	jo     0x40cf2a
  40cf93:	int3   
  40cf94:	or     ecx,eax
  40cf96:	cld    
  40cf97:	pop    es
  40cf98:	(bad)  
  40cf9a:	mov    ds:0xb02dbddb,eax
  40cf9f:	adc    eax,DWORD PTR ds:0xf861cd3d
  40cfa5:	xchg   esi,eax
  40cfa6:	mov    dl,0x34
  40cfa8:	ins    BYTE PTR es:[edi],dx
  40cfa9:	mul    DWORD PTR [edx+0x5b]
  40cfac:	jecxz  0x40cff5
  40cfae:	sahf   
  40cfaf:	mov    cl,0x43
  40cfb1:	jne    0x40d01e
  40cfb3:	imul   esi,DWORD PTR ds:0xc8568389,0xffffffcb
  40cfba:	fcomip st,st(7)
  40cfbc:	add    eax,DWORD PTR [eax]
  40cfbe:	ror    bh,1
  40cfc0:	mov    BYTE PTR [edx+0x66],dl
  40cfc3:	mov    ds:0x8dcd1dfb,eax
  40cfc8:	inc    eax
  40cfc9:	retf   0x5453
  40cfcc:	add    BYTE PTR [esi],dh
  40cfce:	cmp    BYTE PTR [eax+0x20],dl
  40cfd1:	test   al,cl
  40cfd3:	xchg   ebx,eax
  40cfd4:	inc    edi
  40cfd5:	or     al,BYTE PTR [eax+0x58f8e599]
  40cfdb:	in     al,dx
  40cfdc:	popf   
  40cfdd:	cwde   
  40cfde:	dec    eax
  40cfdf:	and    al,0x97
  40cfe1:	xchg   ecx,eax
  40cfe2:	pop    es
  40cfe3:	sar    BYTE PTR [ebp+0x28c96754],1
  40cfe9:	retf   0x27d6
  40cfec:	cmp    al,BYTE PTR [eax-0x44]
  40cfef:	push   esi
  40cff0:	clc    
  40cff1:	jp     0x40cfb2
  40cff3:	sub    bh,BYTE PTR [edi-0x1a208309]
  40cff9:	and    ebp,0xf0c593b
  40cfff:	inc    ebx
  40d000:	mov    bh,0x42
  40d002:	push   ds
  40d003:	int    0x94
  40d005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d006:	(bad)  
  40d008:	pop    ds
  40d009:	jl     0x40d056
  40d00b:	test   BYTE PTR [eax-0x4b95288f],dh
  40d011:	(bad)
  40d015:	mov    dh,0x75
  40d017:	out    dx,al
  40d018:	sub    edi,DWORD PTR [ebx]
  40d01a:	(bad)  
  40d01b:	imul   edi,DWORD PTR [edx+edx*1+0x42f1a2ef],0xffffff95
  40d023:	mov    ss,WORD PTR [edi]
  40d025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d026:	push   ss
  40d027:	fmul   st,st(4)
  40d029:	out    dx,eax
  40d02a:	xor    al,0x1
  40d02c:	dec    edi
  40d02d:	clc    
  40d02e:	push   esp
  40d02f:	mov    esi,0xe2eaad9b
  40d034:	popa   
  40d035:	pop    ebx
  40d036:	loop   0x40d02a
  40d038:	(bad)  
  40d039:	aaa    
  40d03a:	mov    BYTE PTR [eax+eiz*4+0x5be4bef5],ah
  40d041:	ja     0x8e213a53
  40d047:	les    ebp,FWORD PTR [esi+0x3e]
  40d04a:	sbb    BYTE PTR [esi+0x6f],bl
  40d04d:	je     0x40d05c
  40d04f:	dec    eax
  40d050:	std    
  40d051:	mov    ebp,0x424f2f6b
  40d056:	fs jmp 0x9147:0xdcf35f8c
  40d05e:	sbb    edx,DWORD PTR [edi-0x35]
  40d061:	sti    
  40d062:	rcl    esp,1
  40d064:	inc    esp
  40d065:	es in  al,0xd8
  40d068:	adc    dl,bh
  40d06a:	push   es
  40d06b:	fild   QWORD PTR [ebx+0x16]
  40d06e:	xchg   ebx,eax
  40d06f:	retf   0x7933
  40d072:	mov    edx,DWORD PTR [edi]
  40d074:	mov    WORD PTR [ecx+0x12c651e9],?
  40d07a:	call   0xad9c5fe
  40d07f:	push   0x42
  40d081:	out    0xbc,al
  40d083:	test   al,0xc5
  40d085:	repz sub ecx,DWORD PTR [eax-0x25]
  40d089:	adc    edi,DWORD PTR [ebp+0x58a1b376]
  40d08f:	jae    0x40d0a2
  40d091:	add    al,0x25
  40d093:	loope  0x40d018
  40d095:	push   ebx
  40d096:	aas    
  40d097:	push   ebx
  40d098:	rcl    DWORD PTR ds:0x4326b51b,cl
  40d09e:	jae    0x40d0b7
  40d0a0:	jecxz  0x40d069
  40d0a2:	or     ch,ah
  40d0a4:	daa    
  40d0a5:	mov    ebx,0xda016770
  40d0aa:	and    BYTE PTR [eax+0x7aa53fa8],0x9b
  40d0b1:	mov    esi,0xbcdd4be6
  40d0b6:	jnp    0x40d03a
  40d0b8:	pop    ebx
  40d0b9:	mov    bh,0x4c
  40d0bb:	mov    ds:0x65657b5f,eax
  40d0c0:	and    bl,BYTE PTR [ecx+0x38d34031]
  40d0c6:	pop    gs
  40d0c8:	(bad)  
  40d0c9:	aaa    
  40d0ca:	loop   0x40d144
  40d0cc:	js     0x40d086
  40d0ce:	pop    esi
  40d0cf:	sub    eax,DWORD PTR [edx]
  40d0d1:	cdq    
  40d0d2:	cld    
  40d0d3:	sti    
  40d0d4:	mov    ds:0xc312d60f,al
  40d0d9:	das    
  40d0da:	repz sbb al,0x4f
  40d0dd:	in     eax,dx
  40d0de:	outs   dx,DWORD PTR ds:[esi]
  40d0df:	stc    
  40d0e0:	xor    al,0xd2
  40d0e2:	les    edi,FWORD PTR [edx+0x31]
  40d0e5:	into   
  40d0e6:	mov    al,BYTE PTR [edx-0x70c32957]
  40d0ec:	dec    ebx
  40d0ed:	lahf   
  40d0ee:	jecxz  0x40d0ac
  40d0f0:	mov    ds,WORD PTR [eax-0x6a23d8d2]
  40d0f6:	xor    DWORD PTR [ebx],0x4f
  40d0f9:	xchg   edx,eax
  40d0fa:	pmulhw mm1,QWORD PTR [ecx+0xf]
  40d0fe:	daa    
  40d0ff:	xchg   BYTE PTR [ebp+0x48],ch
  40d102:	aas    
  40d103:	xlat   BYTE PTR ds:[ebx]
  40d104:	add    al,0xf6
  40d106:	aaa    
  40d107:	call   0xe40d:0x4cc1e0e6
  40d10e:	or     eax,0x8afdf954
  40d113:	sbb    eax,eax
  40d115:	neg    dl
  40d117:	jae    0x40d0b4
  40d119:	xor    esi,DWORD PTR [eax-0x2b701647]
  40d11f:	dec    esp
  40d120:	hlt    
  40d121:	xchg   ebx,eax
  40d122:	int    0x3b
  40d124:	mov    edi,0x8b52acb7
  40d129:	inc    esi
  40d12a:	jo     0x40d14a
  40d12c:	add    ebx,DWORD PTR [edx+esi*4+0x713906db]
  40d133:	js     0x40d199
  40d135:	jp     0x40d174
  40d137:	adc    eax,DWORD PTR [ebx+0x2ae31cf3]
  40d13d:	das    
  40d13e:	push   cs
  40d13f:	psubusb mm0,QWORD PTR [esi-0x47]
  40d143:	fisub  WORD PTR [edx-0x6813fefa]
  40d149:	adc    DWORD PTR [ecx-0x2e],edi
  40d14c:	or     bh,ah
  40d14e:	jge    0x40d11d
  40d150:	pusha  
  40d151:	xchg   ebx,eax
  40d152:	jnp    0x40d0f6
  40d154:	loope  0x40d1a9
  40d156:	sti    
  40d157:	test   esp,ebx
  40d159:	push   eax
  40d15a:	enter  0xed16,0xc3
  40d15e:	inc    esp
  40d15f:	cdq    
  40d160:	retf   
  40d161:	xchg   edx,eax
  40d162:	(bad)  [ebx-0x270ae7c3]
  40d168:	push   edx
  40d169:	popf   
  40d16a:	mov    ebp,0xe7677abe
  40d16f:	imul   eax,DWORD PTR [esi],0x65
  40d172:	ret    
  40d173:	jl     0x40d1f4
  40d175:	sub    DWORD PTR [esi],esp
  40d177:	dec    esi
  40d178:	mov    dh,0xac
  40d17a:	and    al,0x3e
  40d17c:	stc    
  40d17d:	mov    dl,0xa0
  40d17f:	jmp    0x40d1cb
  40d181:	add    ch,BYTE PTR [ecx-0x6f]
  40d184:	retf   0x691b
  40d187:	mov    eax,ds:0xce652778
  40d18c:	push   ecx
  40d18d:	xor    eax,0xa8500377
  40d192:	jecxz  0x40d163
  40d194:	push   cs
  40d195:	sub    ch,dl
  40d197:	cmc    
  40d198:	add    BYTE PTR [ecx],dh
  40d19a:	mov    ds:0x213080ee,eax
  40d19f:	dec    edx
  40d1a0:	xchg   ebp,eax
  40d1a1:	lods   eax,DWORD PTR ds:[esi]
  40d1a2:	sbb    BYTE PTR [edi-0x59],dh
  40d1a5:	dec    ebp
  40d1a6:	cwde   
  40d1a7:	sar    DWORD PTR [edx+0x3a],cl
  40d1aa:	nop
  40d1ab:	xlat   BYTE PTR ds:[ebx]
  40d1ac:	bound  eax,QWORD PTR ds:0x5020e207
  40d1b2:	dec    eax
  40d1b3:	jge    0x40d200
  40d1b5:	jl     0x40d182
  40d1b7:	push   cs
  40d1b8:	jae    0x40d17c
  40d1ba:	aad    0x53
  40d1bc:	shl    DWORD PTR [edi-0x62],0xb
  40d1c0:	pop    es
  40d1c1:	mov    eax,0xddef1cf2
  40d1c6:	call   0x3763:0x28e76c94
  40d1cd:	js     0x40d229
  40d1cf:	sub    al,0xf9
  40d1d1:	inc    esp
  40d1d2:	ins    DWORD PTR es:[edi],dx
  40d1d3:	pusha  
  40d1d4:	leave  
  40d1d5:	mov    edi,DWORD PTR [eax-0x49]
  40d1d8:	mov    al,0xa8
  40d1da:	inc    ebx
  40d1db:	aad    0x1b
  40d1dd:	cld    
  40d1de:	ins    DWORD PTR es:[edi],dx
  40d1df:	fldcw  WORD PTR [edx-0x8]
  40d1e2:	push   ebp
  40d1e3:	fidivr WORD PTR [ecx]
  40d1e5:	mov    dl,0x57
  40d1e7:	icebp  
  40d1e8:	push   0xffffff9e
  40d1ea:	or     DWORD PTR [edx-0x37],ebx
  40d1ed:	add    eax,0xea42ee9b
  40d1f2:	jle    0x40d1a0
  40d1f4:	jecxz  0x40d1df
  40d1f6:	nop
  40d1f7:	and    BYTE PTR [esi],ah
  40d1f9:	jg     0x40d22f
  40d1fb:	lea    ebp,[eax]
  40d1fd:	dec    ebp
  40d1fe:	inc    ah
  40d200:	(bad)  
  40d202:	adc    BYTE PTR [edi+0x69f32c51],bh
  40d208:	xlat   BYTE PTR ds:[ebx]
  40d209:	jle    0x40d1eb
  40d20b:	das    
  40d20c:	mov    bh,0x8b
  40d20e:	jmp    0x40d1d0
  40d210:	and    BYTE PTR [ebp-0x3fcc86e7],cl
  40d216:	adc    bh,BYTE PTR ss:[eax+0x3d]
  40d21a:	pop    ecx
  40d21b:	mov    ah,0xee
  40d21d:	cwde   
  40d21e:	js     0x40d1c6
  40d220:	jnp    0x40d1b8
  40d222:	cmp    BYTE PTR [esi],0x7d
  40d225:	adc    bh,al
  40d227:	xor    DWORD PTR [ebx],0xa7a36cbd
  40d22d:	adc    DWORD PTR [edi-0x62],ecx
  40d230:	in     al,0x82
  40d232:	jo     0x40d21c
  40d234:	icebp  
  40d235:	mov    ah,0x15
  40d237:	dec    edi
  40d238:	sti    
  40d239:	ror    bh,0x7a
  40d23c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d23d:	icebp  
  40d23e:	cmp    DWORD PTR ss:[edi+esi*4+0xc],0xff5b0a4a
  40d247:	loop   0x40d265
  40d249:	xor    BYTE PTR [edi+0x65],bl
  40d24c:	mov    edx,0xbbc9c89c
  40d251:	inc    edx
  40d252:	bound  ecx,QWORD PTR [eax]
  40d254:	xchg   ecx,eax
  40d255:	jle    0x40d24b
  40d257:	inc    edx
  40d258:	div    BYTE PTR [edi+eax*8]
  40d25b:	and    eax,0x8df6ec14
  40d260:	and    DWORD PTR [ebx+0x19],ebx
  40d263:	(bad)  
  40d264:	or     al,0x28
  40d266:	mov    ch,0x92
  40d268:	pmuludq mm3,QWORD PTR [ecx+0x6b9e1294]
  40d26f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d270:	enter  0xb72c,0xb
  40d274:	outs   dx,DWORD PTR ds:[esi]
  40d275:	pop    esp
  40d276:	inc    ebx
  40d277:	sahf   
  40d278:	in     eax,0xab
  40d27a:	std    
  40d27b:	outs   dx,BYTE PTR ds:[esi]
  40d27c:	(bad)  
  40d27d:	out    dx,eax
  40d27e:	mov    eax,ds:0x9eb27165
  40d283:	cli    
  40d284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d285:	(bad)  
  40d286:	fisubr WORD PTR ds:0xf7c0a649
  40d28c:	mov    bh,0xe2
  40d28e:	mov    fs,WORD PTR [edi-0x4a8c4b8e]
  40d294:	mov    eax,ds:0x42fe7d
  40d299:	mov    DWORD PTR [eax],0xd97bdb6e
  40d29f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2a0:	add    ebp,eax
  40d2a2:	and    al,0xcd
  40d2a4:	scas   al,BYTE PTR es:[edi]
  40d2a5:	aas    
  40d2a6:	pop    ds
  40d2a7:	sub    al,0xc5
  40d2a9:	imul   edx,esp,0xc2f25a3f
  40d2af:	das    
  40d2b0:	cmp    DWORD PTR [esi-0x29037c62],0x7a
  40d2b7:	push   ebx
  40d2b8:	cmp    eax,0x5e3684b7
  40d2bd:	inc    ecx
  40d2be:	jp     0x40d2b1
  40d2c0:	loopne 0x40d2e6
  40d2c2:	mov    ch,0xdf
  40d2c4:	retf   
  40d2c5:	pop    ebp
  40d2c6:	push   cs
  40d2c7:	and    ah,BYTE PTR [ebp+ebx*4+0x77e2ee79]
  40d2ce:	pop    ecx
  40d2cf:	es leave 
  40d2d1:	pop    edx
  40d2d2:	(bad)  
  40d2d3:	fnsave [esi-0x2e870d05]
  40d2d9:	data16 loop 0x40d2a1
  40d2dc:	jbe    0x40d319
  40d2de:	out    dx,eax
  40d2df:	push   ecx
  40d2e0:	loop   0x40d2c2
  40d2e2:	lods   eax,DWORD PTR ds:[esi]
  40d2e3:	les    esi,FWORD PTR [edx]
  40d2e5:	pusha  
  40d2e6:	cmc    
  40d2e7:	mov    ebp,0x98f9d812
  40d2ec:	es jae 0x40d2eb
  40d2ef:	mov    edi,0x63e67bf1
  40d2f4:	fisttp WORD PTR [ebp-0x6a]
  40d2f7:	jne    0x40d2e5
  40d2f9:	adc    dh,ch
  40d2fb:	popa   
  40d2fc:	mov    edx,0xdb4491f8
  40d301:	mov    al,ds:0x127616dd
  40d306:	mov    bl,0xf8
  40d308:	xor    al,0x7
  40d30a:	or     cl,BYTE PTR [eax-0x23d3a2c2]
  40d310:	fwait
  40d311:	jp     0x40d2d2
  40d313:	push   es
  40d314:	sub    eax,0xb1295112
  40d319:	sbb    eax,0x7c0c6974
  40d31e:	dec    esi
  40d31f:	push   0x71
  40d321:	test   al,0xb7
  40d323:	data16 add BYTE PTR [ecx],al
  40d326:	jb     0x40d388
  40d328:	ins    DWORD PTR es:[edi],dx
  40d329:	stos   BYTE PTR es:[edi],al
  40d32a:	lds    edx,FWORD PTR [ebp+0x19033f1c]
  40d330:	stos   BYTE PTR es:[edi],al
  40d331:	ror    ebx,1
  40d333:	(bad)  
  40d335:	inc    ebp
  40d336:	lea    ebx,[eax-0x28e54d3]
  40d33c:	shl    edi,cl
  40d33e:	sbb    eax,0xddf8bcfe
  40d343:	dec    ebp
  40d344:	pop    esi
  40d345:	ins    DWORD PTR es:[edi],dx
  40d346:	or     ah,BYTE PTR [esi-0x7bce09b2]
  40d34c:	pop    ss
  40d34d:	xor    ebp,DWORD PTR [ebx+esi*1+0x43]
  40d351:	(bad)  
  40d353:	push   ds
  40d354:	inc    esi
  40d355:	xrelease xchg BYTE PTR [edi],dh
  40d358:	sti    
  40d359:	gs pop edx
  40d35b:	jb     0x40d39d
  40d35d:	adc    al,0xf5
  40d35f:	hlt    
  40d360:	test   al,0xcb
  40d362:	popa   
  40d363:	jecxz  0x40d356
  40d365:	les    edi,FWORD PTR [ebp-0x3ac7fb11]
  40d36b:	iret   
  40d36c:	dec    esp
  40d36d:	dec    eax
  40d36e:	lea    esp,ds:0xa4bc291c
  40d374:	sbb    ch,ah
  40d376:	(bad)  
  40d377:	cmp    ch,BYTE PTR [eax]
  40d379:	push   eax
  40d37a:	lods   eax,DWORD PTR ds:[esi]
  40d37b:	xor    DWORD PTR [edi+ecx*8],edi
  40d37e:	data16 jnp 0x40d3b3
  40d381:	rcr    BYTE PTR [esi+0x45e12a72],0xd6
  40d388:	ds pop edi
  40d38a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d38b:	mov    ch,0x1e
  40d38d:	in     al,dx
  40d38e:	xor    DWORD PTR [ecx],eax
  40d390:	sbb    al,0xcd
  40d392:	dec    ebx
  40d393:	or     ah,cl
  40d395:	mov    al,0x2c
  40d397:	out    dx,eax
  40d398:	or     BYTE PTR [esi-0x4e],dh
  40d39b:	sbb    al,0xb8
  40d39d:	mov    ch,0xa7
  40d39f:	daa    
  40d3a0:	dec    ebp
  40d3a1:	retf   0x9f96
  40d3a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3a5:	dec    esi
  40d3a6:	push   ecx
  40d3a7:	inc    ebx
  40d3a8:	xor    ecx,DWORD PTR [edx-0x31]
  40d3ab:	(bad)  
  40d3ac:	sub    esp,eax
  40d3ae:	sahf   
  40d3af:	popa   
  40d3b0:	sti    
  40d3b1:	daa    
  40d3b2:	mov    eax,ds:0xdde5378c
  40d3b7:	rol    DWORD PTR [edx-0x4b55f293],0x7b
  40d3be:	out    dx,eax
  40d3bf:	scas   eax,DWORD PTR es:[edi]
  40d3c0:	(bad)  
  40d3c1:	jbe    0x40d3b0
  40d3c3:	xchg   ecx,eax
  40d3c4:	scas   al,BYTE PTR es:[edi]
  40d3c5:	lea    ebp,[ebx-0x3e]
  40d3c8:	pop    edi
  40d3c9:	dec    ecx
  40d3ca:	inc    edi
  40d3cb:	push   0x8fc02de
  40d3d0:	or     esp,edi
  40d3d2:	push   ecx
  40d3d3:	shl    BYTE PTR [edx+ebp*1+0x3],0xa4
  40d3d8:	push   ecx
  40d3d9:	fimul  DWORD PTR [ecx+ebx*8+0x1294fb7e]
  40d3e0:	iret   
  40d3e1:	cmp    eax,0x57dad581
  40d3e6:	mov    ah,0x68
  40d3e8:	fsubr  st(7),st
  40d3ea:	jl     0x40d454
  40d3ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3ed:	sahf   
  40d3ee:	cmc    
  40d3ef:	xlat   BYTE PTR ds:[ebx]
  40d3f0:	inc    esp
  40d3f1:	xor    eax,0x7b04bd89
  40d3f6:	xor    eax,0x38a24d21
  40d3fb:	js     0x40d39c
  40d3fd:	into   
  40d3fe:	sub    DWORD PTR [esi],esi
  40d400:	sub    dh,BYTE PTR [esi-0xf41c9ac]
  40d406:	cs sbb al,0x8
  40d409:	rep outs dx,BYTE PTR ds:[esi]
  40d40b:	jo     0x40d42f
  40d40d:	cli    
  40d40e:	cmp    BYTE PTR [esi],ch
  40d410:	jbe    0x40d424
  40d412:	in     eax,dx
  40d413:	add    edx,esi
  40d415:	lock lds eax,FWORD PTR [ebp+0x70]
  40d419:	mov    al,ds:0x6617886b
  40d41e:	aas    
  40d41f:	mov    ds,esp
  40d421:	mov    eax,0x8b0110d2
  40d426:	mov    esi,0xebb33ee2
  40d42b:	and    DWORD PTR [ebp-0x7901cc5],esi
  40d431:	in     eax,dx
  40d432:	cmc    
  40d433:	das    
  40d434:	mov    edi,0x64d656d2
  40d439:	out    dx,eax
  40d43a:	mov    eax,0xb67ac6cb
  40d43f:	mov    esp,0xba76e890
  40d444:	push   edx
  40d445:	outs   dx,BYTE PTR ds:[esi]
  40d446:	mov    dh,0xdc
  40d448:	dec    edx
  40d449:	xchg   ebp,eax
  40d44a:	mov    al,ds:0x1d27765c
  40d44f:	fsubr  QWORD PTR [eax-0xe4c6a0b]
  40d455:	shl    BYTE PTR [edx-0x7f1dd056],1
  40d45b:	aad    0x62
  40d45d:	push   esp
  40d45e:	repz mov eax,ds:0xfb7b7e82
  40d464:	test   dh,ah
  40d466:	push   edx
  40d467:	dec    edx
  40d468:	or     eax,0xfe592ddc
  40d46d:	les    edi,FWORD PTR [ebp-0x4ddc0e0a]
  40d473:	xor    DWORD PTR [ecx-0x37a739c9],eax
  40d479:	pop    edi
  40d47a:	mov    dh,0x71
  40d47c:	(bad)
  40d47f:	mov    al,0x54
  40d481:	xchg   BYTE PTR [edx-0xd01114f],al
  40d487:	lods   al,BYTE PTR ds:[esi]
  40d488:	dec    edx
  40d489:	mov    bh,0x5e
  40d48b:	mov    edx,0x8fcb99d3
  40d490:	lods   eax,DWORD PTR ds:[esi]
  40d491:	jns    0x40d42c
  40d493:	aas    
  40d494:	out    0x50,al
  40d496:	mov    dl,0x56
  40d498:	stc    
  40d499:	pop    edx
  40d49a:	xor    DWORD PTR [ecx+0x40],edx
  40d49d:	cwde   
  40d49e:	push   cs
  40d49f:	mov    eax,ds:0x62318ac8
  40d4a4:	jne    0x40d4ae
  40d4a6:	mov    al,ds:0x4183452f
  40d4ab:	enter  0x897d,0xcd
  40d4af:	xlat   BYTE PTR ds:[ebx]
  40d4b0:	imul   edi,DWORD PTR [ebx],0x4210173
  40d4b6:	mov    ecx,0xa7958211
  40d4bb:	and    esi,esp
  40d4bd:	rcl    DWORD PTR [edx+0x63415540],1
  40d4c3:	aad    0xa9
  40d4c5:	aas    
  40d4c6:	jmp    0x40d466
  40d4c8:	popf   
  40d4c9:	shr    BYTE PTR [ebx+0x13],cl
  40d4cc:	cmp    edx,DWORD PTR [edx+0x101aa337]
  40d4d2:	add    al,BYTE PTR [ecx+ebp*4+0x3bdfe0e9]
  40d4d9:	jle    0x40d4a9
  40d4db:	inc    edi
  40d4dc:	repnz pop esp
  40d4de:	adc    BYTE PTR [eax-0x37d20728],bl
  40d4e4:	das    
  40d4e5:	sub    al,BYTE PTR [eax+0x45d5304e]
  40d4eb:	xchg   DWORD PTR [ebx],edx
  40d4ed:	xchg   edx,eax
  40d4ee:	out    dx,al
  40d4ef:	es pop es
  40d4f1:	addr16 pop eax
  40d4f3:	mov    BYTE PTR [ecx],al
  40d4f5:	(bad)  
  40d4f6:	xchg   esi,eax
  40d4f7:	push   esp
  40d4f8:	jg     0x40d51f
  40d4fa:	and    eax,0x1fa52468
  40d4ff:	xchg   ebx,eax
  40d500:	int3   
  40d501:	cmp    edi,DWORD PTR [eax-0x1f]
  40d504:	outs   dx,DWORD PTR ds:[esi]
  40d505:	and    DWORD PTR [esi-0x32a33414],eax
  40d50b:	cs push esi
  40d50d:	xchg   edx,eax
  40d50e:	leave  
  40d50f:	inc    edi
  40d510:	nop
  40d511:	inc    edx
  40d512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d513:	sbb    eax,0xd3c3ff29
  40d518:	shr    DWORD PTR ds:0xd0e297e9,1
  40d51e:	pop    eax
  40d51f:	jecxz  0x40d57f
  40d521:	leave  
  40d522:	repnz loop 0x40d54b
  40d525:	mov    al,BYTE PTR [ecx-0x5a]
  40d528:	div    DWORD PTR [edx]
  40d52a:	cli    
  40d52b:	scas   al,BYTE PTR es:[edi]
  40d52c:	or     eax,0x36231d9e
  40d531:	or     eax,0xc9aa8619
  40d536:	into   
  40d537:	jg     0x40d515
  40d539:	push   esi
  40d53a:	dec    esp
  40d53b:	inc    edx
  40d53c:	xchg   DWORD PTR [ebp-0x4f16c677],ecx
  40d542:	pop    fs
  40d544:	jb     0x40d4e4
  40d546:	fisub  WORD PTR [esi+ebp*2+0x49]
  40d54a:	push   esi
  40d54b:	aad    0xa9
  40d54d:	push   ss
  40d54e:	scas   eax,DWORD PTR es:[edi]
  40d54f:	cmc    
  40d550:	stos   BYTE PTR es:[edi],al
  40d551:	arpl   WORD PTR gs:[edi+0x5677c521],dx
  40d558:	mov    fs,WORD PTR [eax]
  40d55a:	out    0x86,al
  40d55c:	test   eax,0x6b2e80c5
  40d561:	pop    esi
  40d562:	fidivr DWORD PTR [edi+eiz*1-0x1e]
  40d566:	push   cs
  40d567:	push   0x7f
  40d569:	mov    esi,0xc2a29195
  40d56e:	lock imul ecx,DWORD PTR [ebp+edi*4-0x39e4273d],0x46
  40d577:	clc    
  40d578:	mov    esp,0x1048bd7b
  40d57d:	aam    0xf6
  40d57f:	add    ah,ah
  40d581:	add    BYTE PTR [edi-0x10],cl
  40d584:	sbb    eax,0x7d755c79
  40d589:	in     al,0xee
  40d58b:	test   BYTE PTR [eax-0x27],0x1
  40d58f:	mov    bh,0x86
  40d591:	lock test DWORD PTR [eax+eiz*4-0x28763e93],ebx
  40d599:	clc    
  40d59a:	push   0xffffff95
  40d59c:	mov    bl,0x11
  40d59f:	push   esi
  40d5a0:	adc    BYTE PTR [esp+edx*8],ah
  40d5a3:	mov    ebx,0xa105534c
  40d5a8:	adc    al,0x4d
  40d5aa:	pop    es
  40d5ab:	mov    ebp,gs
  40d5ad:	call   0xd3015028
  40d5b2:	outs   dx,DWORD PTR ds:[esi]
  40d5b4:	pop    edi
  40d5b5:	mov    dl,0xd8
  40d5b7:	lea    edx,[esi-0x43197790]
  40d5bd:	and    al,0xda
  40d5bf:	test   eax,0x7c22a2b
  40d5c4:	inc    eax
  40d5c5:	xor    BYTE PTR [ebx-0xe],bh
  40d5c8:	push   ss
  40d5c9:	fisub  WORD PTR [edi]
  40d5cb:	and    ecx,DWORD PTR [esi]
  40d5cd:	(bad)  
  40d5ce:	jmp    0x40d5c7
  40d5d0:	or     edi,edi
  40d5d2:	jmp    0x8d710de1
  40d5d7:	ds cli 
  40d5d9:	shl    BYTE PTR [ebx-0xe4057df],1
  40d5df:	retf   0x5312
  40d5e2:	mov    bl,0x51
  40d5e4:	jno    0x40d5cb
  40d5e6:	cmp    eax,0x25a178db
  40d5eb:	cmp    ch,BYTE PTR [ebp-0x43513bd5]
  40d5f1:	pop    edx
  40d5f2:	push   ss
  40d5f3:	cmp    eax,0x723bd2bd
  40d5f8:	jle    0x40d586
  40d5fa:	sub    eax,0x9ec2e192
  40d5ff:	mov    ebp,edx
  40d601:	push   eax
  40d602:	addr16 inc edx
  40d604:	cmp    DWORD PTR [ebx-0xd],ebx
  40d607:	popa   
  40d608:	jbe    0x40d687
  40d60a:	xchg   ecx,eax
  40d60b:	(bad)  
  40d60c:	xchg   ecx,eax
  40d60d:	push   cs
  40d60e:	out    dx,eax
  40d60f:	add    eax,0x3c2348c7
  40d614:	pusha  
  40d615:	out    dx,eax
  40d616:	rcl    DWORD PTR [ebp-0x5085f98a],0x52
  40d61d:	sar    DWORD PTR [ecx],1
  40d61f:	das    
  40d620:	fild   WORD PTR [edx]
  40d622:	cmp    al,0x25
  40d624:	clc    
  40d625:	in     al,0x72
  40d627:	dec    ebp
  40d628:	xchg   BYTE PTR [edi-0x68ac7214],ah
  40d62e:	fstp   DWORD PTR ds:0x672f5ecb
  40d634:	int3   
  40d635:	in     al,0xf3
  40d637:	cmp    dl,BYTE PTR [ecx]
  40d639:	adc    eax,0x28b68759
  40d63e:	pop    ecx
  40d63f:	cmp    ebp,DWORD PTR [ecx+0x6b]
  40d642:	cld    
  40d643:	stos   BYTE PTR es:[edi],al
  40d644:	cmp    DWORD PTR [eax+esi*8+0x6c41df11],0xffffff80
  40d64c:	mov    edi,0xc3c9a580
  40d651:	addr16 jge 0x40d645
  40d654:	mov    ?,WORD PTR [esi+0x3c883e08]
  40d65a:	sbb    DWORD PTR [eax-0x41],0x3ac08c57
  40d661:	pop    edi
  40d662:	inc    esp
  40d663:	cmp    BYTE PTR [eax],bl
  40d665:	out    dx,eax
  40d666:	icebp  
  40d667:	push   cs
  40d668:	jmp    0x40d674
  40d66a:	loop   0x40d6e8
  40d66c:	mov    ah,0x9e
  40d66e:	(bad)  
  40d66f:	in     eax,dx
  40d670:	inc    esp
  40d671:	mov    bh,0x21
  40d673:	mov    esp,0xe8837262
  40d678:	xchg   DWORD PTR [esi+eiz*8+0x76033b79],ecx
  40d67f:	aaa    
  40d680:	dec    edi
  40d681:	out    0x2f,eax
  40d683:	mov    esp,0x81680629
  40d688:	pop    edi
  40d689:	out    dx,al
  40d68a:	push   esi
  40d68b:	sbb    al,0x5d
  40d68d:	push   ebx
  40d68e:	mov    edi,0xd8a7a701
  40d693:	pop    es
  40d694:	call   0x312:0x1efd5565
  40d69b:	into   
  40d69c:	sub    ebx,ebx
  40d69e:	push   eax
  40d69f:	mov    ds:0xf88b3c38,eax
  40d6a4:	jb     0x40d6d5
  40d6a6:	xor    BYTE PTR [edi-0x15650f80],dl
  40d6ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6ad:	mov    dl,0xaa
  40d6af:	and    eax,0x4af377d4
  40d6b4:	adc    al,0x42
  40d6b6:	mov    ah,0x91
  40d6b8:	cs push ebp
  40d6ba:	jb     0x40d660
  40d6bc:	inc    esp
  40d6bd:	fld    DWORD PTR [ecx+0x69]
  40d6c0:	adc    BYTE PTR [ebx+0xbe79e5b],dl
  40d6c6:	or     esp,ecx
  40d6c8:	(bad)  
  40d6c9:	xor    ebp,DWORD PTR [eax+0x34]
  40d6cc:	adc    dl,BYTE PTR ds:0x7491b276
  40d6d2:	jmp    0x40d673
  40d6d4:	(bad)  
  40d6d6:	fstp   TBYTE PTR [eax+0x4c]
  40d6d9:	dec    eax
  40d6da:	pop    ss
  40d6db:	in     al,0x91
  40d6dd:	pop    ss
  40d6de:	inc    ebx
  40d6df:	jns    0x40d6e8
  40d6e1:	fidiv  DWORD PTR gs:[ebx-0x66]
  40d6e5:	sub    ah,BYTE PTR [ecx]
  40d6e7:	inc    edx
  40d6e8:	shr    DWORD PTR [edx-0x212b609],1
  40d6ee:	(bad)
  40d6f1:	dec    esp
  40d6f2:	sub    bh,dh
  40d6f4:	or     edi,DWORD PTR [eax-0x22]
  40d6f7:	and    DWORD PTR [ebx-0x6ba326d1],ebp
  40d6fd:	(bad)  
  40d6fe:	call   0xbe0:0x7ca12326
  40d705:	test   eax,0xc49256c9
  40d70a:	mul    ebx
  40d70c:	rcl    bh,1
  40d70e:	and    al,ch
  40d710:	fidivr DWORD PTR [edx+0x43c2aee2]
  40d716:	inc    esp
  40d717:	mov    edx,0x8623ff5d
  40d71c:	iret   
  40d71d:	int    0xe7
  40d71f:	loope  0x40d705
  40d721:	leave  
  40d722:	sub    cl,BYTE PTR [ebx-0x6323d9ad]
  40d728:	jg     0x40d774
  40d72a:	out    0xe,al
  40d72c:	pushf  
  40d72d:	icebp  
  40d72e:	cs mov bh,0xff
  40d731:	mov    bl,0x6d
  40d733:	lock fwait
  40d735:	test   BYTE PTR [eax],dh
  40d737:	push   ecx
  40d738:	les    esp,FWORD PTR [edx+0x6d08740]
  40d73e:	mov    DWORD PTR [eax+0x74],eax
  40d741:	cmc    
  40d742:	or     ebp,DWORD PTR [edx+0x11a646b3]
  40d748:	call   0xffca7311
  40d74d:	adc    al,0xb
  40d74f:	fwait
  40d750:	mov    ah,0xf4
  40d752:	cli    
  40d753:	add    esi,DWORD PTR [ebx+0x5c]
  40d756:	fadd   DWORD PTR [esi-0x42]
  40d759:	(bad)  
  40d75a:	or     DWORD PTR [eax+eiz*2+0x353716a4],eax
  40d761:	(bad)  
  40d762:	jl     0x40d7c1
  40d764:	adc    ebp,eax
  40d766:	shl    DWORD PTR [ecx],cl
  40d768:	cwde   
  40d769:	stos   DWORD PTR es:[edi],eax
  40d76a:	std    
  40d76b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d76c:	aad    0x40
  40d76e:	and    BYTE PTR [ebx],dh
  40d770:	mov    esi,0x79e5f0bf
  40d775:	scas   al,BYTE PTR es:[edi]
  40d776:	test   DWORD PTR [eax],0x791dbcb7
  40d77c:	jnp    0x40d78a
  40d77e:	outs   dx,BYTE PTR ds:[esi]
  40d77f:	mov    ecx,0x11feb45c
  40d784:	(bad)  
  40d785:	aam    0x21
  40d787:	mov    dl,0xfa
  40d789:	jg     0x40d782
  40d78b:	jp     0x40d7d2
  40d78d:	push   0x63
  40d78f:	bound  ecx,QWORD PTR ds:0x37827efd
  40d795:	int    0x11
  40d797:	inc    eax
  40d798:	je     0x40d757
  40d79a:	inc    eax
  40d79b:	popf   
  40d79c:	mov    esi,0x21068802
  40d7a1:	pop    ebp
  40d7a2:	push   edx
  40d7a3:	frstor [esi]
  40d7a5:	sub    bl,BYTE PTR [edi-0x4f]
  40d7a8:	stos   BYTE PTR es:[edi],al
  40d7a9:	jno    0x40d72e
  40d7ab:	leave  
  40d7ac:	(bad)  
  40d7ad:	mov    edx,0xc46e9380
  40d7b2:	mov    edi,0x8cf41e46
  40d7b7:	push   es
  40d7b8:	cmp    DWORD PTR [eax+0x573f19f5],ebp
  40d7be:	adc    ecx,DWORD PTR [eax]
  40d7c0:	out    0xb5,al
  40d7c2:	jmp    0x8885:0xa5d5292c
  40d7c9:	cmp    al,0xd3
  40d7cb:	mov    al,0xec
  40d7cd:	sub    eax,0x795e712b
  40d7d2:	mov    ds:0x762be454,eax
  40d7d7:	(bad)  
  40d7d8:	(bad)  
  40d7da:	or     eax,0x3b9e20a7
  40d7df:	shl    DWORD PTR [ebx+ebp*1-0x134f635d],0xf2
  40d7e7:	cmp    cl,BYTE PTR [ecx+0x596dc66d]
  40d7ed:	int3   
  40d7ee:	dec    ecx
  40d7ef:	lea    esi,[edi-0x5370de71]
  40d7f5:	outs   dx,BYTE PTR ds:[esi]
  40d7f6:	je     0x40d7c4
  40d7f8:	mov    ds:0xfafa5005,al
  40d7fd:	push   0x17
  40d7ff:	icebp  
  40d800:	repz sbb eax,0xcb2cf286
  40d806:	cwde   
  40d807:	std    
  40d808:	imul   ecx,eax,0xae026d98
  40d80e:	add    al,0xe1
  40d810:	add    al,0x55
  40d812:	fst    QWORD PTR [eax-0x7990445d]
  40d818:	test   eax,0xbc8f4444
  40d81d:	pop    ss
  40d81e:	pop    edi
  40d81f:	sub    BYTE PTR [esi],bh
  40d821:	pop    es
  40d822:	inc    edi
  40d823:	stos   DWORD PTR es:[edi],eax
  40d824:	(bad)  
  40d825:	adc    eax,edx
  40d827:	sar    BYTE PTR [eax-0x5bce1f1b],0x75
  40d82e:	aaa    
  40d82f:	outs   dx,DWORD PTR ds:[esi]
  40d830:	xchg   edi,eax
  40d831:	and    bh,cl
  40d833:	(bad)  
  40d834:	mov    ebx,0x2a5fbb06
  40d839:	xor    cl,0x1e
  40d83c:	jecxz  0x40d85d
  40d83e:	sub    esp,DWORD PTR [edx-0x47c34007]
  40d844:	sbb    eax,0xf81decb7
  40d849:	and    eax,0xfcb59d28
  40d84e:	sub    al,0x7c
  40d850:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d851:	xor    cl,BYTE PTR [ecx+0x4ba8cb5c]
  40d857:	and    edi,DWORD PTR [ecx]
  40d859:	push   eax
  40d85a:	inc    esp
  40d85b:	xor    al,0x5b
  40d85d:	xchg   cl,bh
  40d85f:	lea    eax,[ecx*2+0x6345bf47]
  40d866:	mov    al,0xa5
  40d868:	imul   ebx,DWORD PTR [ebp-0x5],0x7afc71e
  40d86f:	xchg   ecx,eax
  40d870:	add    al,0x38
  40d872:	in     al,0x7a
  40d874:	popf   
  40d875:	mov    ebx,0x7ab7c982
  40d87a:	add    BYTE PTR [esi+0x718bb26d],dl
  40d880:	data16 sbb dl,BYTE PTR [esi-0x1a04ee58]
  40d887:	cmp    ebx,eax
  40d889:	cmp    DWORD PTR [ebx],esp
  40d88b:	gs jo  0x40d90a
  40d88e:	sti    
  40d88f:	sub    al,0x70
  40d891:	xor    DWORD PTR [esi-0x7209f04e],0xe3d524f3
  40d89b:	xchg   bh,dl
  40d89d:	xor    ebx,ecx
  40d89f:	rcr    BYTE PTR [esi-0x58fc2ab5],cl
  40d8a5:	cld    
  40d8a6:	fcomp  st(2)
  40d8a8:	mov    gs,WORD PTR [edi]
  40d8aa:	sbb    al,0x23
  40d8ac:	cmp    al,al
  40d8ae:	mov    al,0xff
  40d8b0:	jno    0x40d893
  40d8b2:	mov    edi,0xcde2194f
  40d8b7:	jl     0x40d8fc
  40d8b9:	mov    ah,BYTE PTR [edx]
  40d8bb:	(bad)
  40d8be:	xchg   BYTE PTR [ebx+0x5d],ah
  40d8c1:	mov    ds,WORD PTR [esi-0x6b9a450a]
  40d8c7:	push   ebx
  40d8c8:	jae    0x40d921
  40d8ca:	adc    BYTE PTR ds:0xc4b2b9ed,al
  40d8d0:	sub    eax,0x212942fa
  40d8d5:	mov    ds:0xcb2f53c8,eax
  40d8da:	mul    DWORD PTR [esi-0x44]
  40d8dd:	in     eax,dx
  40d8de:	retf   
  40d8df:	and    eax,0xaf5e5b56
  40d8e4:	mov    bl,0x11
  40d8e6:	gs push ecx
  40d8e8:	push   ecx
  40d8e9:	dec    ebx
  40d8ea:	sbb    BYTE PTR [eax],dh
  40d8ec:	fs pop ss
  40d8ee:	and    al,0x6d
  40d8f0:	stos   DWORD PTR es:[edi],eax
  40d8f1:	push   ds
  40d8f2:	lahf   
  40d8f3:	loop   0x40d89c
  40d8f5:	je     0x40d885
  40d8f7:	lods   al,BYTE PTR ds:[esi]
  40d8f8:	xlat   BYTE PTR ds:[ebx]
  40d8f9:	inc    eax
  40d8fa:	ret    
  40d8fb:	les    eax,FWORD PTR [edi+edi*4-0x7a7f68ea]
  40d902:	jg     0x40d970
  40d904:	pop    ebp
  40d905:	retf   0xf922
  40d908:	sbb    ebx,esi
  40d90a:	shr    DWORD PTR [esi],1
  40d90c:	adc    BYTE PTR [edx],dh
  40d90e:	test   eax,0xc0b6f937
  40d913:	inc    ecx
  40d914:	xchg   ebx,eax
  40d915:	in     eax,0x93
  40d917:	jp     0x40d8e5
  40d919:	add    edx,DWORD PTR [ebx]
  40d91b:	retf   0x9ba8
  40d91e:	arpl   WORD PTR [ebx-0x3a294e0e],cx
  40d924:	sbb    al,0x79
  40d926:	pop    ecx
  40d927:	mov    BYTE PTR [ebx],dl
  40d929:	mov    edx,0x3e26bf20
  40d92e:	test   BYTE PTR [edx+0x4366c1a],ah
  40d934:	jbe    0x40d91c
  40d936:	sub    edi,edi
  40d938:	imul   esp,DWORD PTR [esp+edi*1],0x654f3c23
  40d93f:	adc    eax,0xe75d03b8
  40d944:	mov    WORD PTR [ebx+0x63],fs
  40d947:	mov    edi,DWORD PTR [ebx]
  40d949:	bound  ebx,QWORD PTR [edi-0x1f]
  40d94c:	(bad)  
  40d94d:	sbb    edx,DWORD PTR [ebx]
  40d94f:	dec    esp
  40d950:	and    BYTE PTR [ebp+0x5c],ah
  40d953:	fs scas al,BYTE PTR es:[edi]
  40d955:	(bad)  
  40d957:	push   eax
  40d958:	xor    dl,BYTE PTR [edx]
  40d95a:	push   esp
  40d95b:	daa    
  40d95c:	xchg   ecx,eax
  40d95d:	(bad)  [ebp-0xc]
  40d960:	sbb    eax,0x45003c4d
  40d965:	scas   eax,DWORD PTR es:[edi]
  40d966:	sbb    eax,DWORD PTR [esi]
  40d968:	aas    
  40d969:	stos   BYTE PTR es:[edi],al
  40d96a:	aad    0x1c
  40d96c:	push   esi
  40d96d:	mov    eax,0x303e478
  40d972:	ins    BYTE PTR es:[edi],dx
  40d973:	adc    eax,0x86545069
  40d978:	inc    edi
  40d979:	not    DWORD PTR [ecx-0x43f374da]
  40d97f:	inc    ebp
  40d980:	enter  0xb842,0x1d
  40d984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d985:	jmp    0x40d934
  40d987:	pop    ebx
  40d988:	pop    eax
  40d989:	lods   eax,DWORD PTR ds:[esi]
  40d98a:	xchg   edx,eax
  40d98b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d98c:	mov    bl,0x6e
  40d98e:	jo     0x40da04
  40d990:	leave  
  40d991:	out    0xa5,eax
  40d993:	(bad)  
  40d994:	lock sub bh,0xc9
  40d998:	cmp    edi,0xdd023039
  40d99e:	push   0x1
  40d9a0:	(bad)  
  40d9a1:	jae    0x40da02
  40d9a3:	cwde   
  40d9a4:	ret    
  40d9a5:	leave  
  40d9a6:	sbb    al,0x45
  40d9a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9a9:	out    0x9e,eax
  40d9ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9ac:	mov    ebp,0x48d268b7
  40d9b1:	pop    ebx
  40d9b2:	inc    eax
  40d9b3:	cmp    esp,edi
  40d9b5:	scas   eax,DWORD PTR es:[edi]
  40d9b6:	push   0xba9e668d
  40d9bb:	pop    esp
  40d9bc:	add    DWORD PTR [ecx],edi
  40d9be:	pop    esi
  40d9bf:	daa    
  40d9c0:	jl     0x40d997
  40d9c2:	dec    ebx
  40d9c3:	pop    es
  40d9c4:	outs   dx,DWORD PTR ds:[esi]
  40d9c5:	xchg   ebx,eax
  40d9c6:	jae    0x40da10
  40d9c8:	push   cs
  40d9c9:	fmul   st(7),st
  40d9cb:	(bad)
  40d9ce:	(bad)  
  40d9cf:	aas    
  40d9d0:	add    ax,0xd5ae
  40d9d4:	lea    ecx,[ecx]
  40d9d6:	retf   
  40d9d7:	mov    ?,WORD PTR ds:0x8599d528
  40d9dd:	mov    edx,0x9bf73e7
  40d9e2:	add    al,0xcc
  40d9e4:	test   BYTE PTR gs:[ebp+0x35b23e90],dh
  40d9eb:	push   ebx
  40d9ec:	xchg   esi,eax
  40d9ed:	cmc    
  40d9ee:	mov    ch,0x8b
  40d9f0:	outs   dx,BYTE PTR ds:[esi]
  40d9f1:	loope  0x40d9e2
  40d9f3:	(bad)  [eax+0x36]
  40d9f6:	mov    bh,0x72
  40d9f8:	mov    ebx,0xa067a57a
  40d9fd:	out    0x7f,al
  40d9ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da00:	pop    esp
  40da01:	pop    ecx
  40da02:	lds    esp,FWORD PTR [edi-0x5d18f2cb]
  40da08:	(bad)  
  40da09:	cmp    DWORD PTR [ecx-0x3e],edi
  40da0c:	add    BYTE PTR [ecx+0x7a],ah
  40da0f:	ret    
  40da10:	stos   BYTE PTR es:[edi],al
  40da11:	xchg   edi,eax
  40da12:	ja     0x40da8e
  40da14:	(bad)  
  40da15:	out    0xa8,eax
  40da17:	outs   dx,DWORD PTR ds:[esi]
  40da18:	shl    BYTE PTR [edi],1
  40da1a:	and    eax,0x7684ecae
  40da1f:	dec    ecx
  40da20:	inc    eax
  40da21:	test   BYTE PTR [edx+0x2a],dl
  40da24:	test   eax,0xd59be99a
  40da29:	rol    BYTE PTR [ebp+0x6c],1
  40da2c:	ss (bad) 
  40da2e:	inc    ebx
  40da2f:	push   0x46c8bb40
  40da34:	push   es
  40da35:	pop    ebp
  40da36:	in     eax,dx
  40da37:	into   
  40da38:	inc    edx
  40da39:	loope  0x40da10
  40da3b:	std    
  40da3c:	jecxz  0x40da15
  40da3e:	cmc    
  40da3f:	sub    al,0xc4
  40da41:	sbb    edi,esp
  40da43:	out    dx,eax
  40da44:	in     al,0x17
  40da46:	mov    eax,0xa716b9fa
  40da4b:	sub    DWORD PTR [eiz*8-0x5f5e3b6d],esp
  40da52:	fist   DWORD PTR cs:[edi]
  40da55:	gs inc ebx
  40da57:	(bad)  
  40da58:	and    DWORD PTR [edi],ebx
  40da5a:	stos   BYTE PTR es:[edi],al
  40da5b:	xchg   ecx,eax
  40da5c:	aas    
  40da5d:	pop    ecx
  40da5e:	rcl    DWORD PTR [edx-0x1f719acf],0xac
  40da65:	add    DWORD PTR [ebp+0x4f],edi
  40da68:	mov    ds,WORD PTR [edx+0x538ebfea]
  40da6e:	aad    0x75
  40da70:	cmp    eax,0x9f5b790d
  40da75:	(bad)  
  40da76:	cld    
  40da77:	add    al,0x63
  40da79:	push   ecx
  40da7a:	jp     0x40da21
  40da7c:	cdq    
  40da7d:	loope  0x40da3f
  40da7f:	xchg   ebx,eax
  40da80:	mov    ah,bh
  40da82:	mov    esp,0x8612f61d
  40da87:	bound  edi,QWORD PTR [ecx+eiz*1-0x5c]
  40da8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da8c:	arpl   WORD PTR [ecx-0x55],bp
  40da8f:	xor    BYTE PTR [eax+eax*4+0x106e445f],ah
  40da96:	push   eax
  40da97:	inc    esi
  40da98:	lods   al,BYTE PTR ds:[esi]
  40da99:	or     DWORD PTR [eax+0x1e],ecx
  40da9c:	stc    
  40da9d:	cmp    DWORD PTR [eax+0x31617bb3],edi
  40daa3:	rcr    DWORD PTR [ecx+0xb],0x54
  40daa7:	sahf   
  40daa8:	mov    al,0xe7
  40daaa:	iret   
  40daab:	sahf   
  40daac:	inc    edi
  40daad:	and    edx,ecx
  40daaf:	pop    eax
  40dab0:	inc    ebx
  40dab1:	ins    DWORD PTR es:[di],dx
  40dab3:	out    0x5d,al
  40dab5:	dec    ecx
  40dab6:	sub    bl,BYTE PTR [eax-0x18debca9]
  40dabc:	retf   0x610d
  40dabf:	iret   
  40dac0:	mov    ebp,0x4f41b107
  40dac5:	lods   eax,DWORD PTR ds:[esi]
  40dac6:	add    DWORD PTR [edx+ebp*1+0x2a],0x8824ec
  40dace:	aas    
  40dacf:	sbb    DWORD PTR [ebx],edi
  40dad1:	pop    esi
  40dad2:	imul   BYTE PTR [edx+0x65]
  40dad5:	pop    esp
  40dad6:	in     eax,dx
  40dad7:	lods   al,BYTE PTR ds:[esi]
  40dad8:	fcom   DWORD PTR [edi]
  40dada:	and    cl,dl
  40dadc:	test   BYTE PTR [ecx+ecx*1+0x150de8cb],bh
  40dae3:	sbb    DWORD PTR [ecx],ebx
  40dae5:	mov    DWORD PTR [ecx-0x3df7bf54],0xa0777344
  40daef:	es and eax,0xb0aaa411
  40daf5:	mov    esi,DWORD PTR [eax-0x6d]
  40daf8:	xor    edi,DWORD PTR [edx+0x6a89e65]
  40dafe:	adc    BYTE PTR [esi-0x5],al
  40db01:	mov    ds:0xebde9e05,al
  40db06:	mov    al,ds:0xf9446577
  40db0b:	mov    ah,0xd
  40db0d:	mov    BYTE PTR [edi+0x1f],al
  40db10:	push   ds
  40db11:	retf   
  40db12:	das    
  40db13:	scas   eax,DWORD PTR es:[edi]
  40db14:	fwait
  40db15:	outs   dx,DWORD PTR ds:[esi]
  40db16:	mov    dl,0x27
  40db18:	cwde   
  40db19:	adc    BYTE PTR [edx-0x56],cl
  40db1c:	mov    DWORD PTR [eax-0x17],esp
  40db1f:	cdq    
  40db20:	xchg   esp,eax
  40db21:	paddsb mm3,QWORD PTR [edi]
  40db24:	popf   
  40db25:	(bad)
  40db29:	adc    eax,0x4e66c06b
  40db2e:	fld    DWORD PTR [ecx]
  40db30:	mov    al,ch
  40db32:	fisttp WORD PTR [edx+0x441d8889]
  40db38:	sub    BYTE PTR [ecx],bh
  40db3a:	fucomp st(5)
  40db3c:	mov    bh,bl
  40db3e:	cs imul eax,ebx,0xffffff94
  40db42:	push   ebp
  40db43:	sub    eax,0x2149b92c
  40db48:	bound  ebx,QWORD PTR [eax+0x7ef88b59]
  40db4e:	xor    BYTE PTR [eax+eax*1],cl
  40db51:	(bad)  
  40db52:	mov    al,0xbb
  40db54:	retf   0xb02f
  40db57:	and    edi,DWORD PTR [edx+esi*1]
  40db5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db5b:	rcl    BYTE PTR [ecx+0x76],1
  40db5e:	std    
  40db5f:	push   ss
  40db60:	xchg   ebp,eax
  40db61:	add    al,0x26
  40db63:	loope  0x40daea
  40db65:	stc    
  40db66:	dec    ebp
  40db67:	xor    ch,BYTE PTR ds:0x2c41c11b
  40db6d:	mov    WORD PTR [esi],gs
  40db6f:	pop    ebp
  40db70:	xchg   DWORD PTR [eax-0x236931b7],ecx
  40db76:	enter  0x1c15,0xa7
  40db7a:	(bad)  
  40db7b:	mov    ds:0xa27657b5,eax
  40db80:	adc    eax,0xc2e742c7
  40db85:	jl     0x40db69
  40db87:	mov    bh,0xf3
  40db89:	in     eax,dx
  40db8a:	push   ebp
  40db8b:	push   eax
  40db8c:	pop    ebp
  40db8d:	mov    esp,DWORD PTR [eax+0x7f]
  40db90:	les    eax,FWORD PTR [eax]
  40db92:	adc    bh,BYTE PTR [edi+0x67]
  40db95:	push   ebx
  40db96:	xor    eax,0xebaf8aa6
  40db9b:	leave  
  40db9c:	je     0x40dbc9
  40db9e:	arpl   WORD PTR [eax-0x353d7c2c],ax
  40dba4:	and    ch,BYTE PTR [esi]
  40dba6:	pop    es
  40dba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dba8:	mov    edx,0x49c7c5af
  40dbad:	iret   
  40dbae:	adc    esp,DWORD PTR [ecx+0x26763b41]
  40dbb4:	push   edx
  40dbb5:	cwde   
  40dbb6:	fldenv [esi-0x35]
  40dbb9:	jbe    0x40dbb6
  40dbbb:	mov    ah,0x73
  40dbbd:	sub    edi,DWORD PTR [esi-0x2c]
  40dbc0:	push   ss
  40dbc1:	pop    eax
  40dbc2:	rcl    BYTE PTR [edi+0x7a],cl
  40dbc5:	mov    WORD PTR [ecx-0x632b81d0],ds
  40dbcb:	mov    ebx,DWORD PTR [eax+0x2d]
  40dbce:	fwait
  40dbcf:	mov    cl,0x24
  40dbd1:	cmp    DWORD PTR [ebp+0x5a3bb97b],0xffffff89
  40dbd8:	and    DWORD PTR [edx+0x1897a197],ebp
  40dbde:	mov    dh,0x71
  40dbe0:	push   edx
  40dbe1:	sbb    BYTE PTR ds:0x75c9baa8,bh
  40dbe7:	jbe    0x40dba0
  40dbe9:	pop    ebx
  40dbea:	sub    BYTE PTR ds:0xa1b0787,ch
  40dbf0:	pop    ebp
  40dbf1:	(bad)  
  40dbf2:	mov    ebp,0xaabd2f71
  40dbf7:	inc    ebp
  40dbf8:	dec    ecx
  40dbf9:	and    al,bl
  40dbfb:	or     al,0x85
  40dbfd:	test   DWORD PTR ds:0xb172d846,esi
  40dc03:	enter  0xaab6,0xec
  40dc07:	pop    esi
  40dc08:	sahf   
  40dc09:	pop    edi
  40dc0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc0b:	push   edi
  40dc0c:	and    DWORD PTR [eax-0x74e65923],ebx
  40dc12:	mov    al,ds:0x69f3b8e7
  40dc17:	xchg   edi,eax
  40dc18:	in     eax,dx
  40dc19:	aam    0xee
  40dc1b:	xchg   ebp,eax
  40dc1d:	aad    0xbe
  40dc1f:	ins    BYTE PTR es:[edi],dx
  40dc20:	and    ah,0xc9
  40dc23:	cmp    edi,DWORD PTR [ecx+0x71]
  40dc26:	lock sahf 
  40dc28:	or     DWORD PTR [edi+0x6f],ebp
  40dc2b:	mov    cs,WORD PTR [ebx+0x754c04ef]
  40dc31:	stos   DWORD PTR es:[edi],eax
  40dc32:	sub    BYTE PTR [edi+ecx*1+0x3a],bh
  40dc36:	xchg   ebx,eax
  40dc37:	pop    es
  40dc38:	addr16 xchg eax,eax
  40dc3b:	or     ebx,edx
  40dc3d:	ins    BYTE PTR es:[edi],dx
  40dc3e:	pop    ss
  40dc3f:	pusha  
  40dc40:	dec    eax
  40dc41:	sub    eax,0xe48c91da
  40dc46:	mov    eax,ds:0xc4a4bc30
  40dc4b:	inc    esp
  40dc4d:	in     eax,dx
  40dc4e:	jle    0x40dc6d
  40dc50:	jge    0x40dbe6
  40dc52:	call   0x5147bddf
  40dc57:	enter  0x1b9b,0x2a
  40dc5b:	outs   dx,DWORD PTR ds:[esi]
  40dc5c:	imul   ebp,ebp,0xffffff81
  40dc5f:	loope  0x40dcda
  40dc61:	jbe    0x40dc8c
  40dc63:	popa   
  40dc64:	cmp    BYTE PTR [eax+ecx*8+0xc6f1a70],dh
  40dc6b:	and    eax,0x1508bd
  40dc70:	shl    esi,cl
  40dc72:	jno    0x40dc04
  40dc74:	fmulp  st(0),st
  40dc76:	pop    edi
  40dc77:	dec    ebp
  40dc78:	popa   
  40dc79:	aam    0x73
  40dc7b:	rol    cl,1
  40dc7d:	xchg   edx,eax
  40dc7e:	xor    al,0xa4
  40dc80:	mov    ebp,0xeab552ae
  40dc85:	sbb    bl,ah
  40dc87:	clc    
  40dc88:	mov    al,0xde
  40dc8a:	inc    ebx
  40dc8b:	and    edx,0xdb61c33a
  40dc91:	loop   0x40dc37
  40dc93:	push   ds
  40dc94:	sub    BYTE PTR [esi+0x7b7823c8],dl
  40dc9a:	retf   
  40dc9b:	xchg   DWORD PTR [edi*4+0x7fd846d8],edi
  40dca2:	inc    ebx
  40dca3:	sbb    eax,0x286efb24
  40dca8:	adc    esi,DWORD PTR [ebx]
  40dcaa:	cld    
  40dcab:	adc    ebx,DWORD PTR [ebx+eiz*2-0xd]
  40dcaf:	push   es
  40dcb0:	out    dx,eax
  40dcb1:	cmp    eax,DWORD PTR [edx+0x4e]
  40dcb4:	js     0x40dc83
  40dcb6:	push   edi
  40dcb7:	jno    0x40dc58
  40dcb9:	jne    0x40dcbd
  40dcbb:	adc    ch,BYTE PTR [edi-0x78]
  40dcbe:	test   al,0x58
  40dcc0:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40dcc2:	out    dx,al
  40dcc3:	jl     0x40dcf5
  40dcc5:	cmp    al,ah
  40dcc7:	jmp    0x40dd45
  40dcc9:	fisub  DWORD PTR [ecx+eiz*8+0x78]
  40dccd:	push   cs
  40dcce:	daa    
  40dccf:	(bad)  
  40dcd0:	sub    eax,0xc7b32f9e
  40dcd5:	das    
  40dcd6:	xchg   edx,eax
  40dcd7:	aaa    
  40dcd8:	dec    edi
  40dcd9:	stos   BYTE PTR es:[edi],al
  40dcda:	(bad)  
  40dcdb:	arpl   WORD PTR [esi-0x40],sp
  40dcde:	in     eax,0x57
  40dce0:	or     eax,0x669506a0
  40dce5:	sbb    al,0x4b
  40dce7:	jge    0x40dc77
  40dce9:	push   esi
  40dcea:	pop    esi
  40dceb:	fild   WORD PTR [esi+0x215a96e0]
  40dcf1:	aad    0xcb
  40dcf3:	adc    eax,0x4e697972
  40dcf8:	xor    BYTE PTR [esi],bl
  40dcfa:	or     al,BYTE PTR [eax]
  40dcfc:	cs mov dh,0x3d
  40dcff:	sti    
  40dd00:	fistp  DWORD PTR [esi-0x6]
  40dd03:	sub    BYTE PTR [ebx],0x65
  40dd06:	xor    ecx,ebx
  40dd08:	pop    ds
  40dd09:	adc    cl,BYTE PTR [esi+0x32]
  40dd0c:	dec    ecx
  40dd0d:	add    ah,BYTE PTR [edi+0x64ebb29e]
  40dd13:	xlat   BYTE PTR ds:[ebx]
  40dd14:	mov    ds:0x1304fa27,al
  40dd19:	hlt    
  40dd1a:	sysret 
  40dd1c:	xor    eax,eax
  40dd1e:	and    ah,BYTE PTR fs:[edx+0x30]
  40dd22:	dec    esp
  40dd23:	or     eax,0x2b009eeb
  40dd28:	arpl   WORD PTR [edi-0x37],si
  40dd2b:	push   edx
  40dd2c:	pop    ecx
  40dd2d:	xor    eax,DWORD PTR [ebx+0x60]
  40dd30:	sti    
  40dd31:	aam    0xf6
  40dd33:	dec    ebp
  40dd34:	js     0x40ddaa
  40dd36:	push   ss
  40dd37:	adc    cl,ch
  40dd39:	mov    WORD PTR [esi],es
  40dd3b:	ret    
  40dd3c:	pop    es
  40dd3d:	adc    al,0x1e
  40dd3f:	pop    es
  40dd40:	jecxz  0x40dcdb
  40dd42:	in     eax,dx
  40dd43:	outs   dx,DWORD PTR ds:[esi]
  40dd44:	xchg   edx,eax
  40dd45:	retf   0x3426
  40dd48:	fadd   DWORD PTR ds:0x5d510774
  40dd4e:	data16 cmp al,0xc
  40dd51:	add    eax,0xd447bf45
  40dd56:	push   esi
  40dd57:	mov    cl,0x33
  40dd59:	push   ds
  40dd5a:	fld    TBYTE PTR [ecx]
  40dd5c:	add    BYTE PTR [eax-0x5394f279],dh
  40dd62:	lods   al,BYTE PTR ds:[esi]
  40dd63:	cmp    al,0x27
  40dd65:	jns    0x40ddd5
  40dd67:	mov    ch,0x97
  40dd69:	les    esp,FWORD PTR [ebx]
  40dd6b:	add    eax,0x6443f0db
  40dd70:	iret   
  40dd71:	out    dx,eax
  40dd72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd73:	(bad)  
  40dd74:	mov    esi,0x549411ed
  40dd79:	jns    0x40dd04
  40dd7b:	jae    0x40dd0c
  40dd7d:	mov    edi,0xace4ebf1
  40dd82:	cmp    eax,DWORD PTR [eax-0x261bd858]
  40dd88:	jno    0x40ddab
  40dd8a:	mov    cl,0xc8
  40dd8c:	xchg   ebp,eax
  40dd8d:	inc    esp
  40dd8e:	fistp  QWORD PTR [eax+0x1e]
  40dd91:	push   ss
  40dd92:	mov    ebp,0x9a2543d7
  40dd97:	pop    DWORD PTR [eax-0x66]
  40dd9a:	cdq    
  40dd9b:	xor    BYTE PTR [ebp+0x67],bl
  40dd9e:	hlt    
  40dd9f:	cmp    dl,dh
  40dda1:	addr16 es std 
  40dda4:	imul   esi,DWORD PTR [eax],0xffffffc2
  40dda7:	jbe    0x40ddba
  40dda9:	mov    WORD PTR [edx],ss
  40ddab:	call   0x70656b15
  40ddb0:	jle    0x40dd9f
  40ddb2:	push   ebx
  40ddb3:	xchg   esp,eax
  40ddb4:	sub    al,0xe6
  40ddb6:	push   ebx
  40ddb7:	neg    DWORD PTR [edi]
  40ddb9:	test   eax,0x23624305
  40ddbe:	jno    0x40dd99
  40ddc0:	ror    BYTE PTR [ebp-0x36c26599],1
  40ddc6:	jle    0x40ddca
  40ddc8:	(bad)  
  40ddc9:	jl     0x40dd70
  40ddcb:	fs inc eax
  40ddcd:	bound  eax,QWORD PTR [edi]
  40ddcf:	push   ebx
  40ddd0:	sub    DWORD PTR [ecx+edx*2+0x661f1303],ebx
  40ddd7:	retf   
  40ddd8:	cmc    
  40ddd9:	adc    edi,ebp
  40dddb:	sub    ah,cl
  40dddd:	sbb    al,0xe2
  40dddf:	js     0x40de24
  40dde1:	test   BYTE PTR [eax],dh
  40dde3:	lods   al,BYTE PTR ds:[esi]
  40dde4:	jmp    0xbd7a:0xf12b1413
  40ddeb:	xor    eax,0x9ede29f2
  40ddf0:	fwait
  40ddf1:	(bad)  
  40ddf2:	cwde   
  40ddf3:	jp     0x40dd9c
  40ddf5:	add    eax,0x6f8f0fc9
  40ddfa:	or     BYTE PTR [edx],bh
  40ddfc:	punpcklwd mm5,DWORD PTR [eax]
  40ddff:	sub    BYTE PTR [eax+0x4dfa8878],dh
  40de05:	sub    DWORD PTR [esi+edi*4],ecx
  40de08:	add    cl,dh
  40de0a:	in     al,dx
  40de0b:	push   ds
  40de0c:	add    DWORD PTR [ecx-0x5af1e250],edi
  40de12:	push   edi
  40de13:	pusha  
  40de14:	shl    BYTE PTR [edi-0x459c04a0],1
  40de1a:	add    DWORD PTR [edx],0xffffffa0
  40de1d:	add    DWORD PTR [edx+0x221287cb],edi
  40de23:	add    al,0xee
  40de25:	stos   DWORD PTR es:[edi],eax
  40de26:	adc    BYTE PTR [esi],dh
  40de28:	shr    DWORD PTR [esi-0x26687c50],1
  40de2e:	xchg   ebp,eax
  40de2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de30:	mov    eax,ds:0xf53d0f07
  40de35:	popa   
  40de36:	fdivr  DWORD PTR [ecx+0x47991aa9]
  40de3c:	sbb    DWORD PTR [ecx],esi
  40de3e:	rcr    DWORD PTR [edx-0xd06cbea],0x94
  40de45:	pop    ebx
  40de46:	inc    edx
  40de47:	push   0xfffffff9
  40de49:	out    dx,al
  40de4a:	fidivr WORD PTR [ecx+edi*2]
  40de4d:	mov    al,ds:0xdece911a
  40de52:	(bad)  
  40de54:	es das 
  40de56:	sub    al,ch
  40de58:	sub    eax,0x9dfc1348
  40de5d:	or     edi,edi
  40de5f:	js     0x40de7c
  40de61:	fs pusha 
  40de63:	sbb    eax,0x7d47843a
  40de68:	inc    eax
  40de69:	sub    dh,BYTE PTR [ebp-0x59]
  40de6c:	shl    DWORD PTR [esp+edx*2+0x318e50d8],cl
  40de73:	xchg   edx,eax
  40de74:	sub    BYTE PTR [edx],ch
  40de76:	adc    al,0x63
  40de78:	out    0x26,eax
  40de7a:	cmp    eax,0x3e639727
  40de7f:	xor    eax,0x3d8cc03
  40de84:	in     eax,dx
  40de85:	push   edi
  40de86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de87:	cli    
  40de88:	stos   BYTE PTR es:[edi],al
  40de89:	test   DWORD PTR [esi],esi
  40de8b:	std    
  40de8c:	add    DWORD PTR [esi-0x42],edi
  40de8f:	dec    edx
  40de90:	mov    fs,ebx
  40de92:	mov    dl,0x2
  40de94:	ror    ah,1
  40de96:	lods   al,BYTE PTR ds:[esi]
  40de97:	mov    al,0x81
  40de99:	cwde   
  40de9a:	and    al,0xf3
  40de9c:	xchg   esi,eax
  40de9d:	outs   dx,BYTE PTR ds:[esi]
  40de9e:	mov    al,0x2d
  40dea0:	cmc    
  40dea1:	mov    edi,0xacd2b321
  40dea6:	jp     0x40de38
  40dea8:	ja     0x40deb0
  40deaa:	xor    esi,DWORD PTR [esi]
  40deac:	lods   eax,DWORD PTR ds:[esi]
  40dead:	into   
  40deae:	adc    BYTE PTR [eax-0x58],ch
  40deb1:	ds call 0xc7e1:0x4b4de397
  40deb9:	mov    al,0xd4
  40debb:	lds    edi,FWORD PTR [eax+0x4e5f51be]
  40dec1:	lods   eax,DWORD PTR ds:[esi]
  40dec2:	mov    cl,0xa
  40dec4:	ins    BYTE PTR es:[edi],dx
  40dec5:	cdq    
  40dec6:	stc    
  40dec7:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dec9:	adc    BYTE PTR [ebp+edx*2+0x29a780f],ch
  40ded0:	cld    
  40ded1:	out    0x20,al
  40ded3:	ret    
  40ded4:	ret    0x4068
  40ded7:	int3   
  40ded8:	mov    eax,0x6c6f2f53
  40dedd:	aam    0xae
  40dedf:	fcomp  QWORD PTR [ebp+0x6060b367]
  40dee5:	mov    esp,0x59b2b016
  40deea:	jns    0x40df46
  40deec:	cdq    
  40deed:	in     al,0x1c
  40deef:	stc    
  40def0:	cmp    ebx,esi
  40def2:	test   DWORD PTR [edx+0x3c],0x86f475f8
  40def9:	xchg   ebx,eax
  40defa:	std    
  40defb:	dec    edi
  40defc:	retf   
  40defd:	cwde   
  40defe:	outs   dx,DWORD PTR ds:[esi]
  40deff:	mov    esp,0xefa09bf4
  40df04:	inc    eax
  40df05:	ret    0xfc18
  40df08:	sbb    al,0x98
  40df0a:	jecxz  0x40deac
  40df0c:	push   0xe58aadb8
  40df11:	xor    BYTE PTR [edi+0x5ff35c87],ch
  40df17:	in     al,0x83
  40df19:	call   0x1630:0xe6ce979d
  40df20:	aad    0xac
  40df22:	popf   
  40df23:	mov    ebx,0xb55ba4fa
  40df28:	adc    al,0x97
  40df2a:	pop    ebx
  40df2b:	in     eax,dx
  40df2c:	inc    ebx
  40df2d:	popf   
  40df2e:	and    BYTE PTR [edi+0x5b],ch
  40df31:	fwait
  40df32:	fwait
  40df33:	inc    esi
  40df34:	pop    esi
  40df35:	rol    BYTE PTR [edi+ecx*2-0x7ed1f156],1
  40df3c:	sti    
  40df3d:	jno    0x40ded8
  40df3f:	rol    BYTE PTR [ecx],cl
  40df41:	adc    DWORD PTR [ebp+0x677b453],eax
  40df47:	mov    edi,0x9a562333
  40df4c:	xchg   edx,eax
  40df4d:	mov    edx,0xd83c79e9
  40df52:	jle    0x40df6d
  40df54:	add    eax,0xf85a5a88
  40df59:	(bad)  
  40df5b:	clc    
  40df5c:	mov    esp,0x2e218e08
  40df61:	xchg   esi,eax
  40df62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df63:	inc    esp
  40df64:	sahf   
  40df65:	xchg   esi,eax
  40df66:	add    dl,BYTE PTR [ebp+0x19]
  40df69:	push   es
  40df6a:	jne    0x40dfce
  40df6c:	or     DWORD PTR ds:0xf77b37c6,ecx
  40df72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df73:	mov    ch,0xc
  40df75:	setae  BYTE PTR [ebp+0x7fae41f0]
  40df7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df7d:	pop    esp
  40df7e:	inc    ecx
  40df7f:	into   
  40df80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df81:	cmp    esp,DWORD PTR [edi+0x51]
  40df84:	sub    ebx,ebx
  40df86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df87:	stc    
  40df88:	add    BYTE PTR [eax],0x78
  40df8b:	or     bh,BYTE PTR [eax+edx*2]
  40df8e:	mov    DWORD PTR [esi-0x5b],edx
  40df91:	push   ecx
  40df92:	sub    BYTE PTR [ecx+0x75],bh
  40df95:	fucomi st,st(6)
  40df97:	add    di,0xa208
  40df9c:	fwait
  40df9d:	xor    BYTE PTR [edx],0xc2
  40dfa0:	adc    BYTE PTR [edi+ebp*1-0x7cf0e5d3],al
  40dfa7:	das    
  40dfa8:	aam    0x49
  40dfaa:	scas   eax,DWORD PTR es:[edi]
  40dfab:	jmp    0x40e027
  40dfad:	inc    ebp
  40dfae:	inc    esp
  40dfaf:	lea    edx,[edx-0x7429bd7d]
  40dfb5:	outs   dx,BYTE PTR ds:[esi]
  40dfb6:	add    ecx,ebx
  40dfb8:	adc    dl,al
  40dfba:	jno    0x40e008
  40dfbc:	aad    0x65
  40dfbe:	and    al,0x40
  40dfc0:	and    DWORD PTR [ecx-0xd3acdcc],0x4d1739ed
  40dfca:	jae    0x40e000
  40dfcc:	jno    0x40e01b
  40dfce:	iret   
  40dfcf:	je     0x40e004
  40dfd1:	jle    0x40dfa4
  40dfd3:	imul   esp,DWORD PTR [ebx-0x370b82d5],0xd8914e3d
  40dfdd:	pop    es
  40dfde:	nop
  40dfdf:	adc    eax,0x5d21681c
  40dfe4:	jns    0x40e016
  40dfe6:	outs   dx,BYTE PTR ds:[esi]
  40dfe7:	stos   DWORD PTR es:[edi],eax
  40dfe8:	sbb    BYTE PTR [edi-0x70dc8560],dl
  40dfee:	call   DWORD PTR ds:0x838a5734
  40dff4:	pop    esp
  40dff5:	mov    dl,0x31
  40dff7:	loopne 0x40dfc3
  40dff9:	je     0x40dfdf
  40dffb:	cmp    al,0x89
  40dffd:	sbb    bh,BYTE PTR [eax+0x10]
  40e000:	fsub   DWORD PTR [eax+ecx*4]
  40e003:	mov    ds:0x5b8850ac,eax
  40e008:	stos   DWORD PTR es:[edi],eax
  40e009:	fsub   DWORD PTR [ebx]
  40e00b:	aam    0x61
  40e00d:	sbb    bl,0x3
  40e010:	dec    ebp
  40e011:	pop    edx
  40e012:	dec    ecx
  40e013:	jl     0x40e05e
  40e015:	xchg   edx,eax
  40e016:	dec    ecx
  40e017:	and    eax,0x3a7a9138
  40e01c:	mov    dh,0xd4
  40e01e:	dec    ebp
  40e01f:	fs mov ah,0x61
  40e022:	jle    0x40e073
  40e024:	pop    edi
  40e025:	dec    ebx
  40e026:	out    0xb8,eax
  40e028:	aad    0xd8
  40e02a:	test   DWORD PTR [ecx],eax
  40e02c:	inc    ebx
  40e02d:	add    eax,edx
  40e02f:	sub    al,0x3f
  40e031:	cld    
  40e032:	lock jbe 0x40e083
  40e035:	subps  xmm6,xmm6
  40e038:	rol    ebx,0x95
  40e03b:	pop    ds
  40e03c:	mov    ah,0x45
  40e03e:	test   al,0x5d
  40e040:	inc    esp
  40e041:	int3   
  40e042:	add    al,0x71
  40e044:	jne    0x40e09d
  40e046:	call   0x1e31:0xa3532e98
  40e04d:	and    eax,ebx
  40e04f:	aaa    
  40e050:	iret   
  40e051:	gs pop ecx
  40e053:	imul   ebp,edi,0xffffffc4
  40e056:	data16 outs dx,BYTE PTR ds:[esi]
  40e058:	mov    eax,0x2dd71eaf
  40e05d:	mov    edx,0xc9aa1f2d
  40e062:	arpl   WORD PTR [esi-0x3d],di
  40e065:	sub    BYTE PTR [ecx-0x3e068c0d],0x7f
  40e06c:	ret    
  40e06d:	xchg   edi,eax
  40e06e:	inc    ebp
  40e06f:	les    esi,FWORD PTR [ebp-0x5f]
  40e072:	xor    eax,0xdc6b960d
  40e077:	dec    esi
  40e078:	inc    edi
  40e079:	outs   dx,DWORD PTR ds:[esi]
  40e07a:	mov    esp,0x593038d8
  40e07f:	xor    DWORD PTR [ebp+ebp*4+0x56],esp
  40e083:	pop    ebp
  40e084:	pop    edx
  40e085:	xchg   esp,eax
  40e086:	xor    ch,bh
  40e088:	(bad)  
  40e089:	jecxz  0x40e08e
  40e08b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e08c:	out    0x88,al
  40e08e:	cwde   
  40e08f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e090:	ret    
  40e091:	in     eax,dx
  40e092:	pop    ecx
  40e093:	out    dx,eax
  40e094:	add    BYTE PTR [ebx-0x64505518],bh
  40e09a:	dec    esi
  40e09b:	mov    esi,0xd04d1fb8
  40e0a0:	push   esp
  40e0a1:	call   0x31bfe1ea
  40e0a6:	push   ds
  40e0a7:	stc    
  40e0a8:	call   FWORD PTR [edi-0x31595d94]
  40e0ae:	cdq    
  40e0af:	inc    eax
  40e0b0:	push   edi
  40e0b1:	ins    DWORD PTR es:[edi],dx
  40e0b2:	mov    eax,ds:0x23b0ec9f
  40e0b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0b8:	push   ebp
  40e0b9:	push   ds
  40e0ba:	in     eax,0xab
  40e0bc:	dec    edi
  40e0bd:	push   edx
  40e0be:	imul   ecx,DWORD PTR [edx],0x77
  40e0c1:	pop    es
  40e0c2:	mul    BYTE PTR [esp+edi*8-0x1a]
  40e0c6:	jnp    0x40e136
  40e0c8:	inc    ebp
  40e0c9:	shr    BYTE PTR [eax-0x4e],0xed
  40e0cd:	dec    eax
  40e0ce:	shl    BYTE PTR [edx],1
  40e0d0:	int3   
  40e0d1:	(bad)  
  40e0d4:	or     DWORD PTR [eax],ecx
  40e0d6:	jle    0x40e06f
  40e0d8:	push   eax
  40e0d9:	mov    ecx,0xa34a7f47
  40e0de:	out    dx,eax
  40e0df:	mov    ds:0xd2a8fd95,eax
  40e0e4:	rcr    DWORD PTR [edi],1
  40e0e6:	add    BYTE PTR [eax],dh
  40e0e8:	jno    0x40e124
  40e0ea:	sub    eax,0xff8c2a65
  40e0ef:	test   BYTE PTR [esi+0x7f],dl
  40e0f2:	paddd  mm6,QWORD PTR [eax+0x6a3694e7]
  40e0f9:	fist   WORD PTR [esi+0x45e22cf6]
  40e0ff:	fnstenv [esi]
  40e101:	stos   DWORD PTR es:[edi],eax
  40e102:	mov    eax,0x5d731194
  40e107:	mov    esi,0x8295f9b7
  40e10c:	jno    0x40e17f
  40e10e:	popa   
  40e10f:	clc    
  40e110:	data16 lahf 
  40e112:	mov    dl,0x7c
  40e114:	xchg   ebx,eax
  40e115:	daa    
  40e116:	fcmovnb st,st(4)
  40e118:	mov    WORD PTR [ecx-0x5878217e],fs
  40e11e:	mov    al,0xa3
  40e120:	test   DWORD PTR [eax-0x2c3bcc79],edi
  40e126:	jg     0x40e18a
  40e128:	clc    
  40e129:	inc    esp
  40e12a:	push   esp
  40e12b:	push   ebp
  40e12c:	aam    0xec
  40e12e:	dec    edi
  40e12f:	xchg   edi,eax
  40e130:	test   BYTE PTR [esp+ebp*1-0x67],ch
  40e134:	ins    DWORD PTR es:[edi],dx
  40e135:	mov    edi,0x24d2f946
  40e13a:	imul   edi,DWORD PTR [ebp+eiz*4-0x54f71a62],0xffffffe8
  40e142:	pop    esi
  40e143:	comiss xmm7,DWORD PTR ds:0xfa69791e
  40e14a:	popa   
  40e14b:	jns    0x40e195
  40e14d:	arpl   WORD PTR [ecx+0x5a759d2d],dx
  40e153:	xor    al,0x4
  40e155:	sbb    ah,BYTE PTR [eax+0x71]
  40e158:	xacquire xchg DWORD PTR [edi-0x1849229e],eax
  40e15f:	ds push ebx
  40e161:	bound  eax,QWORD PTR [eax-0x3170819a]
  40e167:	adc    dh,BYTE PTR [esi+0x44]
  40e16a:	das    
  40e16b:	ds daa 
  40e16d:	data16 cmp al,0xde
  40e170:	jb     0x40e1ec
  40e172:	js     0x40e170
  40e174:	jae    0x40e1f4
  40e176:	cwde   
  40e177:	(bad)  
  40e178:	dec    esi
  40e179:	rol    BYTE PTR [ecx+ebx*1-0x77],1
  40e17d:	aam    0xa7
  40e17f:	xor    eax,0x678b1673
  40e184:	add    eax,0x4cbf608d
  40e189:	aas    
  40e18a:	add    ebp,eax
  40e18c:	mov    bl,0xfb
  40e18e:	aaa    
  40e18f:	out    0x83,eax
  40e191:	and    bh,BYTE PTR [esi+0x57]
  40e194:	or     DWORD PTR [ecx],esp
  40e196:	sbb    BYTE PTR [edi-0x28],dl
  40e199:	cs add al,0x13
  40e19c:	add    ebp,esi
  40e19e:	pop    ss
  40e19f:	loopne 0x40e178
  40e1a1:	sub    DWORD PTR [edi],esi
  40e1a3:	ret    
  40e1a4:	ret    
  40e1a5:	xchg   edx,eax
  40e1a6:	or     eax,DWORD PTR [ebx]
  40e1a8:	ins    DWORD PTR es:[edi],dx
  40e1a9:	out    0xa3,eax
  40e1ab:	shl    DWORD PTR [ebp+0x24],cl
  40e1ae:	je     0x40e18d
  40e1b0:	xchg   edx,eax
  40e1b1:	jecxz  0x40e1ff
  40e1b3:	mov    cl,0x8f
  40e1b5:	cmp    ebx,ecx
  40e1b7:	pusha  
  40e1b8:	mov    DWORD PTR [eax-0x1d895ab1],edi
  40e1be:	sbb    esp,DWORD PTR [esi-0x298410f]
  40e1c4:	xor    al,cl
  40e1c6:	(bad)  
  40e1c7:	pop    ds
  40e1c8:	aas    
  40e1c9:	js     0x40e22c
  40e1cb:	dec    edx
  40e1cc:	cmp    esi,edx
  40e1ce:	or     ebx,DWORD PTR [ebx-0x16]
  40e1d1:	or     eax,0x58c24a0f
  40e1d6:	mov    ds:0x6de17219,al
  40e1db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1dc:	(bad)  
  40e1dd:	out    dx,al
  40e1de:	leave  
  40e1df:	jecxz  0x40e251
  40e1e1:	xor    BYTE PTR [edi],ch
  40e1e3:	sub    ah,BYTE PTR [eax-0x62058da0]
  40e1e9:	add    al,0x6
  40e1eb:	outs   dx,DWORD PTR ds:[esi]
  40e1ec:	pop    edi
  40e1ed:	ja     0x40e24b
  40e1ef:	lea    ecx,[eax+0x42]
  40e1f2:	and    BYTE PTR fs:[edi],al
  40e1f5:	sbb    DWORD PTR [esp+edx*1+0x462f5d9d],ebx
  40e1fc:	fistp  QWORD PTR [ecx+0x2e58dd]
  40e202:	inc    edx
  40e203:	add    DWORD PTR [ebp+ecx*1-0x4c853302],esi
  40e20a:	aas    
  40e20b:	int    0xd3
  40e20d:	or     ah,BYTE PTR [ebx]
  40e20f:	xor    DWORD PTR [edx-0x3cee5543],0xeb698f45
  40e219:	jno    0x40e1e9
  40e21b:	xor    DWORD PTR [edx+0x6c107075],ecx
  40e221:	test   al,0x5
  40e223:	cmp    DWORD PTR [edi-0x39],ebx
  40e226:	pop    ss
  40e227:	inc    ecx
  40e228:	aad    0x2d
  40e22a:	fiadd  DWORD PTR [esi+0x3658486b]
  40e230:	sub    eax,0xdfe179c9
  40e235:	xchg   ebx,eax
  40e236:	cmp    DWORD PTR [ecx+ebx*8],esp
  40e239:	sub    al,0x71
  40e23b:	aas    
  40e23c:	js     0x40e2ac
  40e23e:	stos   DWORD PTR es:[edi],eax
  40e23f:	sbb    DWORD PTR [esi+0x60],0x28693a22
  40e246:	sar    DWORD PTR [esp+ebp*2-0x2fdf1d83],0x64
  40e24e:	push   eax
  40e24f:	mov    ah,bh
  40e251:	inc    ebp
  40e252:	js     0x40e253
  40e254:	hlt    
  40e255:	push   0xffffffe5
  40e257:	jle    0x40e286
  40e259:	fild   WORD PTR [esi+0x21]
  40e25c:	ficom  DWORD PTR [ebx-0x4b6f9334]
  40e262:	xchg   ebx,eax
  40e263:	or     al,BYTE PTR [ebp+0x43]
  40e266:	adc    DWORD PTR [ecx],ebx
  40e268:	or     al,0xe3
  40e26a:	inc    ebp
  40e26b:	out    dx,eax
  40e26c:	lea    edx,[edi]
  40e26e:	push   cs
  40e26f:	aam    0xe8
  40e271:	xchg   edx,eax
  40e272:	add    BYTE PTR [edi-0x2b],ah
  40e275:	mov    esp,0x3b8edcd7
  40e27a:	jae    0x40e224
  40e27c:	nop
  40e27d:	mov    ds:0xeca9d977,al
  40e282:	adc    DWORD PTR [esi],0xba0cf5a7
  40e288:	nop
  40e289:	jnp    0x40e2db
  40e28b:	xchg   ebx,eax
  40e28c:	pop    ebx
  40e28d:	in     eax,dx
  40e28e:	retf   0x8be4
  40e291:	repz sub al,0x2b
  40e294:	and    esi,0x33
  40e297:	lods   eax,DWORD PTR gs:[esi]
  40e299:	pop    ebp
  40e29a:	jnp    0x40e22d
  40e29c:	xor    ch,0x2e
  40e29f:	jmp    0x61fc:0x373331bb
  40e2a6:	ret    0xeaf5
  40e2a9:	ds pop ebp
  40e2ab:	xchg   edi,eax
  40e2ac:	imul   ebp,DWORD PTR [ebx-0x2f0a5e4d],0x2c
  40e2b3:	mov    al,BYTE PTR [esi]
  40e2b5:	in     eax,dx
  40e2b6:	xor    al,0x64
  40e2b8:	cmp    ecx,ecx
  40e2ba:	and    ecx,ebx
  40e2bc:	popa   
  40e2bd:	shl    bl,0x56
  40e2c0:	xlat   BYTE PTR ds:[ebx]
  40e2c1:	dec    ebp
  40e2c2:	test   ch,bh
  40e2c4:	xor    al,0xd
  40e2c6:	out    0x54,al
  40e2c8:	push   esi
  40e2c9:	or     eax,0xd58b1f98
  40e2ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2cf:	aad    0x5c
  40e2d1:	cmp    dh,BYTE PTR [esi+0x7a]
  40e2d4:	clc    
  40e2d5:	dec    esi
  40e2d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2d7:	imul   esi,DWORD PTR [ebp-0x78747978],0x5ce28d1e
  40e2e1:	leave  
  40e2e2:	int    0xd4
  40e2e4:	in     eax,dx
  40e2e5:	(bad)  
  40e2e6:	out    dx,eax
  40e2e7:	sbb    al,BYTE PTR ds:0xf19ac830
  40e2ed:	mov    ebx,DWORD PTR [eax]
  40e2ef:	or     bh,cl
  40e2f1:	into   
  40e2f2:	hlt    
  40e2f3:	stc    
  40e2f4:	inc    ebp
  40e2f5:	push   esi
  40e2f6:	dec    edi
  40e2f7:	aaa    
  40e2f8:	and    bl,BYTE PTR [edi+ebx*2-0x5]
  40e2fc:	sub    DWORD PTR [edi],ecx
  40e2fe:	mov    ah,0xe2
  40e300:	test   esi,eax
  40e302:	stos   BYTE PTR es:[edi],al
  40e303:	pop    ebx
  40e304:	(bad)
  40e307:	pusha  
  40e308:	pop    eax
  40e309:	stos   BYTE PTR es:[edi],al
  40e30a:	arpl   WORD PTR [eax],si
  40e30c:	test   al,0x1f
  40e30e:	(bad)  
  40e30f:	jmp    0x4f8315d6
  40e314:	test   BYTE PTR [ebp-0x6c],bh
  40e317:	fdiv   QWORD PTR ds:0x1884c8b0
  40e31d:	(bad)  
  40e31e:	xchg   ebx,eax
  40e31f:	mov    bh,0xfb
  40e321:	adc    DWORD PTR ds:0x85673fd2,0xffffffdc
  40e328:	loop   0x40e2ee
  40e32a:	stos   DWORD PTR es:[edi],eax
  40e32b:	cli    
  40e32c:	test   DWORD PTR ds:0xb89b366,esp
  40e332:	jae    0x40e2c1
  40e334:	adc    ebp,edx
  40e336:	cmp    eax,ecx
  40e338:	fld    DWORD PTR [esi-0x11]
  40e33b:	add    al,0xcd
  40e33d:	fdivrp st(1),st
  40e33f:	stos   BYTE PTR es:[edi],al
  40e340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e341:	adc    DWORD PTR [edi-0x2a],0x45e05edb
  40e348:	addr16 xchg ebp,eax
  40e34a:	imul   DWORD PTR [edi+0x10]
  40e34d:	dec    edx
  40e34e:	xchg   esp,eax
  40e34f:	and    esi,eax
  40e351:	push   esi
  40e352:	push   eax
  40e353:	mov    esp,0xe790b10e
  40e358:	fdiv   QWORD PTR [ecx+0x6d]
  40e35b:	mov    edx,0x103520cf
  40e360:	mov    al,0x43
  40e362:	sahf   
  40e363:	mov    al,ds:0x170c4cd8
  40e368:	inc    edi
  40e369:	fs iret 
  40e36b:	or     al,0x2f
  40e36d:	mov    bh,0x4f
  40e36f:	retf   
  40e370:	fist   WORD PTR [esi-0x3b]
  40e373:	into   
  40e374:	div    BYTE PTR [edx]
  40e376:	retf   0x6664
  40e379:	bound  edx,QWORD PTR [edi]
  40e37b:	xor    DWORD PTR [edi],esp
  40e37d:	inc    ecx
  40e37e:	xor    ebx,DWORD PTR [ecx+0x2c]
  40e381:	cmp    al,0xaa
  40e383:	(bad)  
  40e384:	push   eax
  40e385:	iret   
  40e386:	adc    eax,DWORD PTR [edi]
  40e388:	aaa    
  40e389:	test   DWORD PTR [ebp+eax*1-0x1c873996],edx
  40e390:	mov    bh,dl
  40e392:	mov    edx,0xc35ce9d1
  40e397:	push   0xffffff85
  40e399:	jmp    0x40e3ec
  40e39b:	push   cs
  40e39c:	and    ah,bl
  40e39e:	push   esi
  40e39f:	fdiv   QWORD PTR [ecx+0x2b09cd5d]
  40e3a5:	xchg   BYTE PTR [edi],ah
  40e3a7:	outs   dx,BYTE PTR ds:[esi]
  40e3a8:	add    edi,edx
  40e3aa:	pop    ss
  40e3ab:	in     al,dx
  40e3ac:	xor    BYTE PTR [esi],0x62
  40e3af:	mov    ch,0xa7
  40e3b1:	or     eax,0xbb436acb
  40e3b6:	mov    al,ds:0x879a61dc
  40e3bb:	mov    ch,0xdc
  40e3bd:	xchg   BYTE PTR [edi+0x3b65f205],dl
  40e3c3:	dec    edi
  40e3c4:	or     BYTE PTR [edi+esi*1],bh
  40e3c7:	or     al,0x9c
  40e3c9:	sbb    edi,DWORD PTR [ecx]
  40e3cb:	lods   al,BYTE PTR ds:[esi]
  40e3cc:	push   edi
  40e3cd:	int3   
  40e3ce:	sbb    edx,edx
  40e3d0:	pop    es
  40e3d1:	inc    esp
  40e3d2:	lea    esi,[esi-0x33]
  40e3d5:	push   ecx
  40e3d6:	gs test al,0x6d
  40e3d9:	and    edi,DWORD PTR [ecx]
  40e3db:	shr    ebx,0x92
  40e3de:	dec    ecx
  40e3df:	pop    ebp
  40e3e0:	dec    ecx
  40e3e1:	jl     0x40e3c1
  40e3e3:	fidiv  DWORD PTR [ebp+0x5fddfa91]
  40e3e9:	dec    eax
  40e3ea:	jae    0x40e38d
  40e3ec:	push   ds
  40e3ed:	(bad)  
  40e3ee:	div    DWORD PTR [esi]
  40e3f0:	xor    al,0xce
  40e3f2:	mov    ebp,0xdab63fa5
  40e3f7:	arpl   WORD PTR [edx],sp
  40e3f9:	push   cs
  40e3fa:	dec    ecx
  40e3fb:	cli    
  40e3fc:	push   ecx
  40e3fd:	mov    esi,0xc54933cd
  40e402:	inc    edx
  40e403:	push   ds
  40e404:	mov    BYTE PTR [edx],ah
  40e406:	popa   
  40e407:	inc    edi
  40e408:	jecxz  0x40e487
  40e40a:	xor    al,0x1f
  40e40c:	in     eax,dx
  40e40d:	icebp  
  40e40e:	lahf   
  40e40f:	push   edi
  40e410:	add    BYTE PTR [edx-0x6ce342fc],ah
  40e416:	adc    eax,0x39b09017
  40e41b:	adc    DWORD PTR [ebx-0x6eb669ac],0x7222aae3
  40e425:	fcom   DWORD PTR [esi-0x59]
  40e428:	daa    
  40e429:	int    0x91
  40e42b:	and    DWORD PTR [esi],0x71
  40e42e:	adc    al,0xd0
  40e430:	lods   al,BYTE PTR ds:[esi]
  40e431:	test   ecx,esp
  40e433:	test   BYTE PTR [esi+0x61a30608],ch
  40e439:	pop    ebp
  40e43a:	dec    ebx
  40e43b:	ror    DWORD PTR [ecx-0x68eeaf22],0xd6
  40e442:	mov    DWORD PTR [edx],esi
  40e444:	inc    ebp
  40e445:	inc    eax
  40e446:	mov    eax,ds:0x76e49c1
  40e44b:	xor    bh,bl
  40e44d:	push   cs
  40e44e:	leave  
  40e44f:	clc    
  40e450:	ret    
  40e451:	outs   dx,BYTE PTR ds:[esi]
  40e452:	(bad)  
  40e453:	jne    0x40e3f8
  40e455:	ds xchg edx,eax
  40e457:	imul   ecx,DWORD PTR [ebx-0x4d],0x51
  40e45b:	xchg   BYTE PTR [eax],dl
  40e45d:	out    0x8,eax
  40e45f:	shl    DWORD PTR [edx+esi*8],cl
  40e462:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e463:	outs   dx,BYTE PTR ds:[esi]
  40e464:	sub    bl,bh
  40e466:	stos   BYTE PTR es:[edi],al
  40e467:	(bad)
  40e46a:	xor    eax,0x5ed06330
  40e46f:	mov    bl,0x3c
  40e471:	ss stos DWORD PTR es:[edi],eax
  40e473:	inc    ebx
  40e474:	sahf   
  40e475:	(bad)  
  40e476:	addr16 int 0x5c
  40e479:	cld    
  40e47a:	cmp    edx,edx
  40e47c:	push   0xfffffffe
  40e47e:	xchg   ebx,eax
  40e47f:	loope  0x40e405
  40e481:	sbb    bh,BYTE PTR [edi+edx*8]
  40e484:	ror    BYTE PTR ss:[ebp+ecx*4+0x3d],cl
  40e489:	jmp    DWORD PTR [edi]
  40e48b:	adc    al,0x40
  40e48d:	(bad)  
  40e48e:	sar    BYTE PTR [edx-0x3a1e7d9e],1
  40e494:	ret    
  40e495:	fabs   
  40e497:	cmp    edi,eax
  40e499:	out    dx,al
  40e49a:	outs   dx,BYTE PTR ds:[esi]
  40e49b:	clc    
  40e49c:	sbb    al,0x3e
  40e49e:	cmp    BYTE PTR ds:0xd72f98ee,dl
  40e4a4:	inc    eax
  40e4a5:	jge    0x40e518
  40e4a7:	xchg   DWORD PTR [edx],esp
  40e4a9:	sbb    al,0x94
  40e4ab:	or     eax,0x3a45a706
  40e4b0:	dec    esp
  40e4b1:	fld    DWORD PTR [ecx+esi*8-0x66]
  40e4b5:	test   DWORD PTR [edi-0x4b25bc49],esp
  40e4bb:	int    0xe9
  40e4bd:	js     0x40e523
  40e4bf:	jle    0x40e521
  40e4c1:	push   edx
  40e4c2:	mov    ch,0x7e
  40e4c4:	mov    cl,0xd3
  40e4c6:	cld    
  40e4c7:	xchg   esi,eax
  40e4c8:	and    edi,ebx
  40e4ca:	xchg   ebp,eax
  40e4cb:	test   BYTE PTR [eax],0xbe
  40e4ce:	add    BYTE PTR [edi+0x34],bl
  40e4d1:	leave  
  40e4d2:	push   ds
  40e4d3:	inc    esi
  40e4d4:	ins    BYTE PTR es:[edi],dx
  40e4d5:	dec    ebx
  40e4d6:	lock or DWORD PTR [esp+ebx*2+0x7aba94c5],0xffffffbf
  40e4df:	pop    ebx
  40e4e0:	icebp  
  40e4e1:	adc    al,0xa3
  40e4e3:	(bad)  
  40e4e4:	mov    ds:0xa7edc334,eax
  40e4e9:	mov    ebp,0xa28e29c1
  40e4ee:	invd   
  40e4f0:	add    ch,0x4
  40e4f3:	ret    0x2305
  40e4f6:	ins    DWORD PTR es:[edi],dx
  40e4f7:	or     bh,BYTE PTR [edx-0x286c3223]
  40e4fd:	push   es
  40e4fe:	imul   ebx,DWORD PTR [ebp+ebp*1-0x63b410fb],0xffffff9d
  40e506:	call   0x54ed504b
  40e50b:	jle    0x40e576
  40e50d:	ret    
  40e50e:	dec    eax
  40e50f:	call   0x63b8:0xf1b541fc
  40e516:	mov    esi,0xbc27f438
  40e51b:	xor    edi,eax
  40e51d:	adc    DWORD PTR [edx+0x5579edc0],ebx
  40e523:	mov    bl,0xff
  40e525:	fstp   TBYTE PTR [esi+0x7249e643]
  40e52b:	ja     0x40e580
  40e52d:	push   ss
  40e52e:	aas    
  40e52f:	retf   
  40e530:	(bad)  
  40e531:	fdecstp 
  40e533:	sub    DWORD PTR [ebx+ecx*2-0x22],ebx
  40e537:	nop
  40e538:	push   ebx
  40e539:	outs   dx,BYTE PTR ds:[esi]
  40e53a:	pop    ecx
  40e53b:	fadd   QWORD PTR [ebp+0x2b508eb6]
  40e541:	mov    eax,ds:0xd753bd0d
  40e546:	and    ebx,ebp
  40e548:	out    0x70,eax
  40e54a:	(bad)  
  40e54b:	mov    al,ds:0xf0829309
  40e550:	inc    edi
  40e551:	mov    bl,0x36
  40e553:	add    al,0x22
  40e555:	pushf  
  40e556:	inc    ecx
  40e557:	mov    cl,0xb
  40e559:	fidivr DWORD PTR [ecx-0x69]
  40e55c:	pop    esp
  40e55d:	clc    
  40e55e:	stc    
  40e55f:	sub    BYTE PTR [ebp-0xdfb46ef],ah
  40e565:	hlt    
  40e566:	sub    ebx,DWORD PTR [edx]
  40e568:	mov    bh,dh
  40e56a:	jmp    0x6eed83ba
  40e56f:	jl     0x40e511
  40e571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e572:	mov    bl,0xb9
  40e574:	sub    DWORD PTR [ebx],eax
  40e576:	mov    ds:0x3f7d73c,al
  40e57b:	stos   DWORD PTR es:[edi],eax
  40e57c:	mov    ch,0x81
  40e57e:	popa   
  40e57f:	scas   eax,DWORD PTR es:[edi]
  40e580:	in     eax,0xa0
  40e582:	mov    ch,0xcd
  40e584:	nop
  40e585:	or     ebp,esp
  40e587:	outs   dx,BYTE PTR ds:[esi]
  40e588:	imul   ecx
  40e58a:	xchg   ebp,eax
  40e58b:	sbb    al,0x9e
  40e58d:	lods   eax,DWORD PTR ds:[esi]
  40e58e:	dec    ebp
  40e58f:	dec    ebx
  40e590:	jecxz  0x40e5f1
  40e592:	dec    edx
  40e593:	sbb    DWORD PTR [esi],0xb20d9486
  40e599:	(bad)  
  40e59a:	repz (bad) 
  40e59c:	in     al,dx
  40e59d:	dec    edx
  40e59e:	inc    BYTE PTR [edx]
  40e5a0:	mov    DWORD PTR ds:0x2ddeee47,edi
  40e5a6:	test   al,0x81
  40e5a8:	pop    edi
  40e5a9:	mov    WORD PTR ds:0xe35303e3,?
  40e5af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5b0:	xchg   ebx,eax
  40e5b1:	pop    ebp
  40e5b2:	dec    edi
  40e5b3:	xor    eax,0x11ed2cf6
  40e5b8:	call   0xf711:0xe57e7f06
  40e5bf:	inc    eax
  40e5c0:	push   ecx
  40e5c1:	dec    esi
  40e5c2:	lock ja 0x40e565
  40e5c5:	imul   ebp,DWORD PTR [eax+0x38641eb4],0xffffffc9
  40e5cc:	loope  0x40e5d6
  40e5ce:	addr16 pop esp
  40e5d0:	pop    ss
  40e5d1:	sbb    eax,0xf1940e9d
  40e5d6:	push   edi
  40e5d7:	jns    0x40e55f
  40e5d9:	inc    edi
  40e5da:	cmp    BYTE PTR [eax+0x3c],cl
  40e5dd:	cmp    al,0x1e
  40e5df:	cld    
  40e5e0:	xchg   edx,eax
  40e5e1:	ins    BYTE PTR es:[edi],dx
  40e5e2:	push   ds
  40e5e3:	or     eax,0xe9a03ba2
  40e5e8:	cmp    eax,0xd108912
  40e5ee:	and    eax,DWORD PTR [esi-0x43]
  40e5f1:	jae    0x40e60e
  40e5f3:	jnp    0x40e674
  40e5f5:	jae    0x40e62e
  40e5f7:	adc    dl,cl
  40e5f9:	(bad)  
  40e5fb:	stc    
  40e5fc:	(bad)  
  40e5fd:	int3   
  40e5fe:	mov    ax,ds:0xca6925d
  40e604:	xor    BYTE PTR [ebx],cl
  40e606:	daa    
  40e607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e608:	aaa    
  40e609:	mov    BYTE PTR ds:0x5377b849,cl
  40e60f:	shr    BYTE PTR [edx+0x4b],cl
  40e612:	ret    
  40e613:	push   ebx
  40e614:	pop    ds
  40e615:	popa   
  40e616:	and    DWORD PTR [eax+ebx*4-0x18],edx
  40e61a:	xchg   ecx,eax
  40e61b:	stos   BYTE PTR es:[edi],al
  40e61c:	jecxz  0x40e68b
  40e61e:	int    0x63
  40e620:	(bad)  
  40e621:	out    dx,al
  40e622:	ds dec ebx
  40e624:	mov    bl,0xb8
  40e626:	dec    edi
  40e627:	lods   al,BYTE PTR ds:[esi]
  40e628:	fisub  DWORD PTR [ecx-0x6c3ad8c]
  40e62e:	push   ds
  40e62f:	push   ecx
  40e630:	mov    ebx,DWORD PTR [esi+0x21]
  40e633:	pop    eax
  40e634:	mov    dl,0x17
  40e636:	outs   dx,DWORD PTR ds:[esi]
  40e637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e638:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e639:	or     eax,0xfd957c59
  40e63e:	(bad)  
  40e63f:	push   ebx
  40e640:	rcl    BYTE PTR [edx-0x4e],cl
  40e643:	sti    
  40e644:	hlt    
  40e645:	leave  
  40e646:	and    dl,BYTE PTR [ebx+0x7f]
  40e649:	std    
  40e64a:	add    ecx,DWORD PTR [esi+eiz*2-0x6a]
  40e64e:	and    eax,0x39a8109b
  40e653:	or     DWORD PTR [ebx-0x3ebee003],0x75db1616
  40e65d:	inc    edi
  40e65e:	popa   
  40e65f:	cmc    
  40e660:	add    edx,DWORD PTR [ecx+0x7b2bb946]
  40e666:	mov    BYTE PTR [edx-0x5460a872],cl
  40e66c:	mov    ecx,0xbbaffd7b
  40e671:	inc    edx
  40e672:	jns    0x40e6e1
  40e674:	mov    ebp,0xb4555f9b
  40e679:	sub    al,0x33
  40e67b:	imul   bl
  40e67d:	mov    bh,al
  40e67f:	push   es
  40e680:	add    al,bl
  40e682:	xchg   esi,eax
  40e683:	jne    0x40e6fe
  40e685:	push   edx
  40e686:	mov    BYTE PTR [edx-0x44b8ed47],dl
  40e68c:	sub    cl,BYTE PTR [esi+0x58]
  40e68f:	std    
  40e690:	(bad)  
  40e691:	es mov dl,0xc3
  40e694:	out    dx,eax
  40e695:	or     al,0x15
  40e697:	dec    edi
  40e698:	push   ds
  40e699:	in     eax,dx
  40e69a:	rcr    DWORD PTR [esp+ebx*4],cl
  40e69d:	jbe    0x40e628
  40e69f:	imul   ebx,DWORD PTR [eax+0x0],0xfffffffc
  40e6a3:	jmp    DWORD PTR ss:[edx]
  40e6a6:	jne    0x40e648
  40e6a8:	adc    ah,BYTE PTR [edi]
  40e6aa:	sar    DWORD PTR [eax+0x7e],cl
  40e6ad:	mov    eax,ds:0xe2eb5a5
  40e6b2:	int    0xa8
  40e6b4:	dec    ecx
  40e6b5:	cmp    ch,BYTE PTR [esi+0x1c496764]
  40e6bb:	fdiv   DWORD PTR [ecx]
  40e6bd:	iret   
  40e6be:	push   ebx
  40e6bf:	xor    BYTE PTR [edx],0x4d
  40e6c2:	jge    0x40e6d7
  40e6c4:	mov    esi,0x61151fdc
  40e6c9:	in     al,0x97
  40e6cb:	out    dx,eax
  40e6cc:	sub    eax,0xcd5a3883
  40e6d1:	xchg   edi,eax
  40e6d2:	push   cs
  40e6d3:	xchg   esi,eax
  40e6d4:	out    0x5e,eax
  40e6d6:	inc    edx
  40e6d7:	or     cl,cl
  40e6d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6da:	inc    edx
  40e6db:	out    0xad,eax
  40e6dd:	push   ds
  40e6de:	test   DWORD PTR [esi+0x63562e45],ebx
  40e6e4:	nop
  40e6e5:	fwait
  40e6e6:	mov    WORD PTR [eax-0x5c],gs
  40e6e9:	test   BYTE PTR [edx],dl
  40e6eb:	(bad)  [ebx+eiz*4+0x36964d68]
  40e6f2:	sbb    al,0x37
  40e6f4:	push   ebp
  40e6f5:	mov    ds:0x8cd58212,al
  40e6fa:	(bad)  
  40e6fb:	repnz das 
  40e6fd:	jno    0x40e6e9
  40e6ff:	into   
  40e700:	cmp    eax,0x1473abd1
  40e705:	sbb    edi,DWORD PTR [ebx+0x594411a0]
  40e70b:	sti    
  40e70c:	or     eax,0x4a09ae8a
  40e711:	mov    ?,WORD PTR [ebp+eax*1-0x4]
  40e715:	fwait
  40e716:	(bad)
  40e719:	cld    
  40e71a:	xchg   edi,eax
  40e71b:	xchg   esp,eax
  40e71c:	bound  edx,QWORD PTR [ecx]
  40e71e:	arpl   ax,si
  40e720:	cld    
  40e721:	mov    eax,ds:0xc68ffb19
  40e726:	jns    0x40e7a5
  40e728:	push   ds
  40e729:	loopne 0x40e720
  40e72b:	jne    0x40e6bf
  40e72d:	int3   
  40e72e:	jecxz  0x40e74f
  40e730:	pop    esi
  40e731:	push   ebx
  40e732:	sar    BYTE PTR [ebx],cl
  40e734:	and    dh,BYTE PTR [ecx]
  40e736:	loop   0x40e719
  40e738:	fcom   QWORD PTR [edx+ecx*4]
  40e73b:	shl    DWORD PTR [esi-0x72],1
  40e73e:	cmp    bh,BYTE PTR [ebx]
  40e740:	cli    
  40e741:	cmp    cl,ch
  40e743:	jbe    0x40e710
  40e745:	sar    dh,cl
  40e747:	pushf  
  40e748:	pop    edx
  40e749:	jno    0x40e7c6
  40e74b:	push   edi
  40e74c:	push   eax
  40e74d:	sub    al,0xf0
  40e74f:	adc    ah,BYTE PTR [eax+ebp*8]
  40e752:	mov    eax,0xa92ea16e
  40e757:	dec    eax
  40e758:	mov    ebp,DWORD PTR [ebp+eiz*4+0x4b]
  40e75c:	in     al,0x51
  40e75e:	sar    DWORD PTR [edx+0x13],cl
  40e761:	bound  eax,QWORD PTR [esp+esi*4-0xc]
  40e765:	sub    ch,BYTE PTR [ecx-0x7470b344]
  40e76b:	inc    ebp
  40e76c:	push   0x56
  40e76e:	push   es
  40e76f:	test   al,0xc
  40e771:	shr    DWORD PTR [esi+0x60],0xe1
  40e775:	xor    eax,0x99778aee
  40e77a:	add    al,0xe1
  40e77c:	outs   dx,DWORD PTR ds:[esi]
  40e77d:	and    BYTE PTR [ebx+0x1e323a8b],bh
  40e783:	mov    esi,0xf09de2c8
  40e788:	push   edx
  40e789:	mov    al,0xe3
  40e78b:	cli    
  40e78c:	jo     0x40e7ee
  40e78e:	inc    edi
  40e78f:	int3   
  40e790:	cdq    
  40e791:	popa   
  40e792:	xchg   edi,eax
  40e793:	push   ecx
  40e794:	sub    al,0xc8
  40e796:	adc    DWORD PTR ds:[esi],ecx
  40e799:	xchg   ebp,eax
  40e79a:	sub    eax,0x3fb31ca6
  40e79f:	stc    
  40e7a0:	sbb    DWORD PTR [esi-0x2265c867],esi
  40e7a6:	fwait
  40e7a7:	out    dx,eax
  40e7a8:	or     ecx,DWORD PTR [esi]
  40e7aa:	dec    esi
  40e7ab:	and    eax,0xc2a57459
  40e7b0:	loop   0x40e7a2
  40e7b2:	mov    ebx,0xe4aec70f
  40e7b7:	jle    0x40e7e3
  40e7b9:	sbb    dh,ch
  40e7bb:	jmp    0x40e7fc
  40e7bd:	loopne 0x40e821
  40e7bf:	jmp    0xe057:0xd99bc43c
  40e7c6:	cli    
  40e7c7:	mov    ebx,0x72ea8a36
  40e7cc:	adc    edi,eax
  40e7ce:	push   ss
  40e7cf:	xor    eax,DWORD PTR [bx+si-0x656b]
  40e7d4:	and    dl,BYTE PTR [edi]
  40e7d6:	sub    al,0x42
  40e7d8:	jp     0x40e84c
  40e7da:	in     eax,dx
  40e7db:	(bad)  
  40e7dc:	jbe    0x40e834
  40e7de:	bound  ecx,QWORD PTR [ecx]
  40e7e0:	not    BYTE PTR [ebp+ecx*8+0x26]
  40e7e4:	pop    ecx
  40e7e5:	imul   eax,DWORD PTR [edx],0xf6c33768
  40e7eb:	dec    ecx
  40e7ec:	mov    ds:0x8eaa565a,eax
  40e7f1:	iret   
  40e7f2:	xchg   edi,eax
  40e7f3:	add    eax,0xe1d70f10
  40e7f8:	popa   
  40e7f9:	jae    0x40e797
  40e7fb:	arpl   WORD PTR [ebp-0x6f83985],si
  40e801:	inc    edi
  40e802:	inc    ebx
  40e803:	jns    0x40e7f4
  40e805:	mov    esi,0x515e1ffb
  40e80a:	ror    BYTE PTR [ebx-0x230dd04f],cl
  40e810:	sar    DWORD PTR [eax+0x39a160f2],cl
  40e816:	sti    
  40e817:	sahf   
  40e818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e819:	outs   dx,BYTE PTR ds:[esi]
  40e81a:	mov    ecx,0x6aa2f3b9
  40e81f:	outs   dx,BYTE PTR ds:[esi]
  40e820:	dec    edi
  40e821:	pop    ebp
  40e822:	lea    edi,[esi-0x65]
  40e825:	test   DWORD PTR [eax+0x57],eax
  40e828:	arpl   di,bp
  40e82a:	sahf   
  40e82b:	and    ah,0xa1
  40e82e:	sbb    ch,BYTE PTR [edi]
  40e830:	dec    ebx
  40e831:	cld    
  40e832:	out    dx,al
  40e833:	int    0xa6
  40e835:	shl    dl,0x95
  40e838:	pop    esp
  40e839:	inc    ecx
  40e83a:	mov    esi,ebx
  40e83c:	mov    dh,0x95
  40e83e:	leave  
  40e83f:	loopne 0x40e88d
  40e841:	fcmovnu st,st(4)
  40e843:	mov    esi,0x54f0613a
  40e848:	xor    eax,0x4678d2e9
  40e84d:	loopne 0x40e811
  40e84f:	sub    dl,BYTE PTR [edx]
  40e851:	rcr    esp,cl
  40e853:	adc    esi,DWORD PTR [edi+0x546cc4d7]
  40e859:	cwde   
  40e85a:	mov    edi,0xa5715594
  40e85f:	jae    0x40e892
  40e861:	repz pop edx
  40e863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e864:	imul   ecx,DWORD PTR [ecx],0x12f396ff
  40e86a:	sbb    eax,0xb0b1994
  40e86f:	fimul  WORD PTR [eax-0x27d409c3]
  40e875:	imul   eax,DWORD PTR [ecx],0xb0996f05
  40e87b:	outs   dx,DWORD PTR ds:[esi]
  40e87c:	push   DWORD PTR [ebp-0x262e80ae]
  40e882:	push   0xffffffe5
  40e884:	je     0x40e8a5
  40e886:	pop    eax
  40e887:	(bad)  
  40e889:	xor    DWORD PTR [ecx+0x2f475636],ebx
  40e88f:	hlt    
  40e890:	inc    esp
  40e891:	pop    esp
  40e892:	add    al,0x2a
  40e894:	adc    eax,0xb84d3eff
  40e899:	sub    bh,bl
  40e89b:	pop    ebp
  40e89c:	outs   dx,DWORD PTR ds:[esi]
  40e89d:	stc    
  40e89e:	repnz lds eax,FWORD PTR es:[ebp+0x57a99c9c]
  40e8a6:	gs sbb eax,0x10de6215
  40e8ac:	into   
  40e8ad:	sub    dh,BYTE PTR ds:0xdf827a88
  40e8b3:	(bad)  
  40e8b4:	cdq    
  40e8b5:	lods   al,BYTE PTR ds:[esi]
  40e8b6:	dec    esi
  40e8b7:	add    BYTE PTR [eax],0x55
  40e8ba:	lods   al,BYTE PTR ds:[esi]
  40e8bb:	sbb    esi,0x4d444974
  40e8c1:	loop   0x40e8bf
  40e8c3:	mov    eax,0x24d04ca7
  40e8c8:	jg     0x40e8df
  40e8ca:	jno    0x40e895
  40e8cc:	add    DWORD PTR [ecx+0x5296db40],ecx
  40e8d2:	jnp    0x40e8c8
  40e8d4:	loope  0x40e869
  40e8d6:	lods   eax,DWORD PTR ds:[esi]
  40e8d7:	cmp    ebx,DWORD PTR [edx]
  40e8d9:	std    
  40e8da:	jno    0x40e928
  40e8dc:	cld    
  40e8dd:	sub    edi,ebx
  40e8df:	push   edx
  40e8e0:	mov    edi,0xf8d12ff7
  40e8e5:	xor    eax,0xf7e453fc
  40e8ea:	fs (bad) 
  40e8ec:	mov    esp,DWORD PTR ds:0xf2f676fb
  40e8f2:	out    dx,eax
  40e8f3:	mov    cl,0x8d
  40e8f5:	(bad)  
  40e8f6:	adc    edx,DWORD PTR [edi]
  40e8f8:	mov    al,0xfa
  40e8fa:	(bad)  
  40e8fc:	xchg   edi,eax
  40e8fd:	push   ds
  40e8fe:	rol    DWORD PTR [edi+0x949df2d],cl
  40e904:	sbb    BYTE PTR [edi+0x12f0cc8e],0xd
  40e90b:	pop    ebp
  40e90c:	test   al,0x15
  40e90e:	aas    
  40e90f:	xor    BYTE PTR [ebx-0x2585934d],bl
  40e915:	clc    
  40e916:	sub    edi,ebp
  40e918:	dec    ebp
  40e919:	in     al,dx
  40e91a:	jge    0x40e98f
  40e91c:	adc    BYTE PTR [esi-0x7b50c1ab],bl
  40e922:	cwde   
  40e923:	xor    eax,0x30c1bed9
  40e928:	inc    ecx
  40e929:	mov    ah,0x4
  40e92b:	inc    ebx
  40e92c:	bound  ecx,QWORD PTR [edx]
  40e92e:	fsubr  DWORD PTR [ebp+0x156adade]
  40e934:	fs jge 0x40e939
  40e937:	mov    eax,ds:0x11c43bfa
  40e93c:	push   ecx
  40e93d:	rol    DWORD PTR [ebx+0x6cbc1596],0xee
  40e944:	adc    eax,0xcdb510a4
  40e949:	dec    edi
  40e94a:	in     al,0x59
  40e94c:	push   cs
  40e94d:	xor    ebp,edx
  40e94f:	rcr    DWORD PTR [eax-0x4],cl
  40e952:	mov    edx,0x7294944d
  40e957:	(bad)  
  40e958:	mov    ch,0xd3
  40e95a:	fsubr  QWORD PTR [esi+0x2babab1a]
  40e960:	scas   al,BYTE PTR es:[edi]
  40e961:	sub    BYTE PTR [edx-0x25d162bc],ah
  40e967:	mov    edx,edx
  40e969:	fisttp DWORD PTR [edi]
  40e96b:	add    bh,al
  40e96d:	fsub   QWORD PTR [di+0x5592]
  40e972:	stos   DWORD PTR es:[edi],eax
  40e973:	fist   WORD PTR [eax+0x18f48020]
  40e979:	iret   
  40e97a:	out    0xc3,eax
  40e97c:	push   edi
  40e97d:	sub    BYTE PTR [eax+0x287df39d],al
  40e983:	add    al,0x83
  40e985:	cmp    eax,0x3ba8b510
  40e98a:	nop
  40e98b:	sahf   
  40e98c:	(bad)  
  40e98e:	popf   
  40e98f:	dec    esp
  40e990:	push   0xd7d663ef
  40e995:	rol    DWORD PTR [edx-0x10149e6b],0xcc
  40e99c:	add    dl,ch
  40e99e:	pusha  
  40e99f:	and    cl,ah
  40e9a1:	ja     0x40e928
  40e9a3:	retf   
  40e9a4:	aaa    
  40e9a5:	lods   al,BYTE PTR ds:[esi]
  40e9a6:	std    
  40e9a7:	sahf   
  40e9a8:	fcomp  st(4)
  40e9aa:	lods   eax,DWORD PTR ds:[esi]
  40e9ab:	mov    eax,ds:0xf559ae6
  40e9b0:	nop
  40e9b1:	mov    ds:0xddaf4780,al
  40e9b6:	xor    dh,BYTE PTR [ecx+0x2f23c546]
  40e9bc:	sbb    ah,cl
  40e9be:	or     ebx,DWORD PTR [ebx]
  40e9c0:	mov    bh,BYTE PTR [ebx-0x40940470]
  40e9c6:	fidiv  DWORD PTR [esi*4+0x2de639ad]
  40e9cd:	xchg   bh,al
  40e9cf:	mov    DWORD PTR [edx],esp
  40e9d1:	outs   dx,BYTE PTR ds:[esi]
  40e9d2:	inc    edi
  40e9d3:	stos   DWORD PTR es:[edi],eax
  40e9d4:	aaa    
  40e9d5:	push   ss
  40e9d6:	or     edi,ecx
  40e9d8:	mov    ebx,0x7c2bd66b
  40e9dd:	ret    
  40e9de:	push   es
  40e9df:	push   ds
  40e9e0:	fxam   
  40e9e2:	mov    ebx,DWORD PTR [ecx+0x7a]
  40e9e5:	xchg   ebx,eax
  40e9e6:	adc    DWORD PTR [eax+0x3136c6c0],ecx
  40e9ec:	not    DWORD PTR [ecx-0x1]
  40e9ef:	loop   0x40ea6a
  40e9f1:	rcr    DWORD PTR ds:[ebx+0x3b],1
  40e9f5:	pop    esp
  40e9f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9f7:	xor    dh,BYTE PTR [ebx+0x4e]
  40e9fa:	jmp    0x40e9e7
  40e9fc:	cld    
  40e9fd:	ret    
  40e9fe:	push   ss
  40e9ff:	out    dx,al
  40ea00:	fdivrp st(6),st
  40ea02:	xchg   esi,eax
  40ea03:	mov    dl,0x83
  40ea05:	(bad)  
  40ea06:	dec    edx
  40ea07:	repz dec esi
  40ea09:	xchg   ebp,eax
  40ea0a:	stos   WORD PTR es:[edi],ax
  40ea0c:	inc    edi
  40ea0d:	push   eax
  40ea0e:	sti    
  40ea0f:	and    eax,0x10feb66d
  40ea14:	fisub  DWORD PTR [edi-0x7f]
  40ea17:	cmp    dl,dl
  40ea19:	loopne 0x40ea4c
  40ea1b:	xlat   BYTE PTR ds:[ebx]
  40ea1c:	push   0x71c51aae
  40ea21:	sar    BYTE PTR [ebp-0x8],0x7e
  40ea25:	(bad)  
  40ea26:	(bad)  
  40ea27:	scas   eax,DWORD PTR es:[edi]
  40ea28:	mov    ecx,0x10cc22eb
  40ea2d:	xlat   BYTE PTR ds:[ebx]
  40ea2e:	cld    
  40ea2f:	fst    QWORD PTR [edi+0x14]
  40ea32:	aam    0x49
  40ea34:	xchg   BYTE PTR [edx],cl
  40ea36:	mov    edx,0x920b9375
  40ea3b:	pcmpgtb mm5,QWORD PTR [esi]
  40ea3e:	(bad)  
  40ea3f:	in     eax,dx
  40ea40:	jbe    0x40eab7
  40ea42:	cld    
  40ea43:	sub    eax,0xa6800962
  40ea48:	gs pop ebx
  40ea4a:	js     0x40ea70
  40ea4c:	sub    al,BYTE PTR ds:0x199c3b36
  40ea52:	neg    DWORD PTR [eax+eiz*4+0x21]
  40ea56:	xchg   edx,eax
  40ea57:	aam    0x11
  40ea59:	lods   eax,DWORD PTR ds:[esi]
  40ea5a:	clc    
  40ea5b:	xchg   DWORD PTR [edx+0x68],eax
  40ea5e:	lds    edx,FWORD PTR [edi+0x11a027]
  40ea64:	mov    bh,0x10
  40ea66:	js     0x40eac6
  40ea68:	and    eax,0x72cabc3
  40ea6d:	add    BYTE PTR [esi-0x2a],bl
  40ea70:	adc    ch,BYTE PTR [edi+ebp*1+0x8fb4abe]
  40ea77:	jae    0x40ea37
  40ea79:	addr16 pop eax
  40ea7b:	lods   eax,DWORD PTR ds:[esi]
  40ea7c:	into   
  40ea7d:	and    DWORD PTR [ebx+0x5661ff67],0xffffffa8
  40ea84:	push   cs
  40ea85:	aas    
  40ea86:	cmp    al,BYTE PTR [esi-0x23]
  40ea89:	and    esi,DWORD PTR [esi-0x23f6e250]
  40ea8f:	aad    0xd7
  40ea91:	push   esp
  40ea92:	add    eax,0xf7fcfb52
  40ea97:	in     eax,0x74
  40ea99:	shl    DWORD PTR ds:0x1bef9fd0,0x9b
  40eaa0:	into   
  40eaa1:	shr    dh,1
  40eaa3:	mov    edx,0x73d23b99
  40eaa8:	jge    0x40eabd
  40eaaa:	push   ebx
  40eaab:	test   DWORD PTR [ebp-0x52],eax
  40eaae:	ja     0x40eb17
  40eab0:	pop    eax
  40eab1:	js     0x40eaa6
  40eab3:	ins    BYTE PTR es:[edi],dx
  40eab4:	jge    0x40ea5c
  40eab6:	jo     0x40eb03
  40eab8:	push   esi
  40eab9:	mov    ebx,0x75a72950
  40eabe:	mov    dh,0xf
  40eac0:	mov    WORD PTR es:[esp+ebp*4+0x7a],es
  40eac5:	adc    BYTE PTR [esp+ebx*2-0x45],cl
  40eac9:	sub    eax,0x8f141893
  40eace:	add    DWORD PTR [eax-0x2ca3a9b3],esi
  40ead4:	repnz mov ch,0xfd
  40ead7:	jno    0x40ea7f
  40ead9:	sbb    BYTE PTR ds:0xd7d89714,bh
  40eadf:	mov    es,WORD PTR [ecx-0x4176faf2]
  40eae5:	scas   eax,DWORD PTR es:[edi]
  40eae6:	cmp    ah,0xb4
  40eae9:	sub    DWORD PTR [esi-0x5d2a8a1],ecx
  40eaef:	std    
  40eaf0:	fnstcw WORD PTR [ecx-0x534f9e43]
  40eaf6:	and    al,al
  40eaf8:	or     eax,0xb71415bd
  40eafd:	enter  0x284d,0x1f
  40eb01:	mov    ecx,ecx
  40eb03:	mov    esi,0x19f02b8e
  40eb08:	loop   0x40eb74
  40eb0a:	mov    edi,0x3020132c
  40eb0f:	(bad)  
  40eb11:	inc    ebx
  40eb12:	js     0x40eb3d
  40eb14:	xor    eax,0x621015b1
  40eb19:	int3   
  40eb1a:	loopne 0x40eb54
  40eb1c:	je     0x40eafd
  40eb1e:	cld    
  40eb1f:	adc    al,BYTE PTR [eax-0xb]
  40eb22:	or     eax,0x81c6bafb
  40eb27:	jp     0x40eb39
  40eb29:	and    DWORD PTR [edx-0x590436c5],ebx
  40eb2f:	ret    0x4da
  40eb32:	inc    ecx
  40eb33:	mov    edi,0x50e4cf25
  40eb38:	ins    DWORD PTR es:[edi],dx
  40eb39:	dec    ecx
  40eb3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb3b:	stc    
  40eb3c:	sbb    BYTE PTR [ebx+edx*4],dl
  40eb3f:	push   cs
  40eb40:	adc    BYTE PTR [ecx],ah
  40eb42:	inc    esp
  40eb43:	lods   al,BYTE PTR ds:[esi]
  40eb44:	push   es
  40eb45:	addr16 push edi
  40eb47:	mov    WORD PTR [ecx+0x68ad2b9e],?
  40eb4d:	or     al,BYTE PTR [ecx-0x4e9007ce]
  40eb53:	pop    esp
  40eb54:	fwait
  40eb55:	sub    ch,BYTE PTR [edx]
  40eb57:	out    dx,al
  40eb58:	addr16 out dx,eax
  40eb5a:	mov    eax,ds:0x5ab1b930
  40eb5f:	inc    esp
  40eb60:	je     0x40eb0c
  40eb62:	push   ecx
  40eb63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb64:	push   edi
  40eb65:	(bad)  
  40eb66:	jae    0x40eb6c
  40eb68:	mov    ebx,DWORD PTR [edx]
  40eb6a:	jl     0x40ebda
  40eb6c:	or     edx,edi
  40eb6e:	jp     0x40eba3
  40eb70:	inc    ebx
  40eb71:	pop    edi
  40eb72:	adc    eax,0xa99b886d
  40eb77:	mov    bl,0x89
  40eb79:	jle    0x40eb46
  40eb7b:	div    DWORD PTR [ecx+0x7aed2809]
  40eb81:	jp     0x40ebbd
  40eb83:	les    ecx,FWORD PTR [esi+edx*4+0x68783219]
  40eb8a:	test   BYTE PTR [edi-0x42f9fcc8],0xa8
  40eb91:	pop    esi
  40eb92:	loopne 0x40eba0
  40eb94:	cmp    al,0x24
  40eb96:	cli    
  40eb97:	rcr    esp,0xea
  40eb9a:	sbb    dl,cl
  40eb9c:	pushf  
  40eb9d:	jle    0x40eba1
  40eb9f:	outs   dx,BYTE PTR ds:[esi]
  40eba0:	jnp    0x40ebce
  40eba2:	ins    DWORD PTR es:[edi],dx
  40eba3:	rcr    DWORD PTR [si+0x19],cl
  40eba7:	push   eax
  40eba8:	xchg   ebp,eax
  40eba9:	sar    DWORD PTR [eax-0x52225beb],1
  40ebaf:	mov    ebx,0xd86453ac
  40ebb4:	mov    edi,DWORD PTR [esi+0x7b89a0e9]
  40ebba:	adc    al,0x42
  40ebbc:	cmc    
  40ebbd:	out    dx,al
  40ebbe:	hlt    
  40ebbf:	test   DWORD PTR [ecx],ebx
  40ebc1:	cmp    ch,ah
  40ebc3:	inc    ebx
  40ebc4:	sbb    eax,0xfe8dda94
  40ebc9:	or     DWORD PTR [ecx+ebp*2],esi
  40ebcc:	adc    DWORD PTR [eax],ebx
  40ebce:	cmp    edx,DWORD PTR [ebp-0x5e8b04a9]
  40ebd4:	popa   
  40ebd5:	or     ecx,ebp
  40ebd7:	enter  0xc771,0xb8
  40ebdb:	cmp    BYTE PTR [ebx],ah
  40ebdd:	cmp    eax,0xd1141c36
  40ebe2:	leave  
  40ebe3:	inc    ebx
  40ebe4:	add    dh,BYTE PTR [ebp+0x54]
  40ebe7:	(bad)  
  40ebe8:	push   ebp
  40ebe9:	sbb    BYTE PTR [ebp-0x48],al
  40ebec:	dec    edx
  40ebed:	xchg   edx,eax
  40ebee:	rcl    ebx,1
  40ebf0:	dec    esi
  40ebf1:	clc    
  40ebf2:	lods   al,BYTE PTR ds:[esi]
  40ebf3:	inc    edi
  40ebf4:	or     ch,BYTE PTR [ebp+0x10]
  40ebf7:	xchg   ecx,eax
  40ebf8:	push   ds
  40ebf9:	inc    ebp
  40ebfa:	loopne 0x40eb99
  40ebfc:	mov    bh,0x46
  40ebfe:	inc    esi
  40ebff:	cwde   
  40ec00:	mov    edx,ebx
  40ec02:	shl    DWORD PTR [ebx+0x14],1
  40ec05:	push   ds
  40ec06:	push   0xbbe7f779
  40ec0b:	mov    ds:0x189ff6a,al
  40ec10:	dec    BYTE PTR [esi]
  40ec12:	or     al,0xaa
  40ec14:	mov    ebx,0xf075fd55
  40ec19:	call   0x4d00578b
  40ec1e:	or     ebp,DWORD PTR [ebp-0x1b]
  40ec21:	les    esp,FWORD PTR [eax]
  40ec23:	and    ebp,DWORD PTR [edi]
  40ec25:	ins    DWORD PTR es:[edi],dx
  40ec26:	(bad)
  40ec2a:	and    al,0x9e
  40ec2c:	mov    edi,0x6204d1eb
  40ec31:	jae    0x40ec94
  40ec33:	das    
  40ec34:	add    ah,bh
  40ec36:	adc    BYTE PTR [edx],0xf2
  40ec39:	call   0xaa0d:0xcbf8ec90
  40ec40:	inc    esi
  40ec41:	pusha  
  40ec42:	std    
  40ec43:	or     ch,BYTE PTR [edx-0x7b8d20bb]
  40ec49:	retf   
  40ec4a:	adc    ecx,ebx
  40ec4c:	jle    0x40ec88
  40ec4e:	scas   eax,DWORD PTR es:[edi]
  40ec4f:	fisttp WORD PTR [ebx+0x5b1efc5e]
  40ec55:	popa   
  40ec56:	fist   DWORD PTR [esi-0x6cd3d842]
  40ec5c:	add    esi,0xffffffe8
  40ec5f:	and    ah,BYTE PTR [edx-0x1]
  40ec62:	jb     0x40ec5d
  40ec64:	out    dx,al
  40ec65:	cld    
  40ec66:	mov    ah,0x76
  40ec68:	pop    ss
  40ec69:	inc    ebx
  40ec6a:	inc    esi
  40ec6b:	push   ecx
  40ec6c:	aam    0xd7
  40ec6e:	xor    ebx,DWORD PTR [esp+esi*1]
  40ec71:	lahf   
  40ec72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec73:	pop    edx
  40ec74:	ss push edi
  40ec76:	stos   DWORD PTR es:[edi],eax
  40ec77:	dec    ebp
  40ec78:	stc    
  40ec79:	sbb    ch,BYTE PTR [esi]
  40ec7b:	sbb    al,0xff
  40ec7d:	push   0x16
  40ec7f:	push   ebx
  40ec80:	icebp  
  40ec81:	dec    edi
  40ec82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec84:	or     bh,BYTE PTR [edi]
  40ec86:	xor    ebx,DWORD PTR [ebx+esi*1+0x234b76b5]
  40ec8d:	mov    cl,0xad
  40ec8f:	retf   0xc7bc
  40ec92:	test   cl,ch
  40ec94:	in     al,dx
  40ec95:	fisttp DWORD PTR [eax-0x1435b862]
  40ec9b:	sahf   
  40ec9c:	shl    DWORD PTR [ecx-0x55],0x5b
  40eca0:	push   eax
  40eca1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eca2:	int    0xc1
  40eca4:	xor    BYTE PTR [eax-0x26],dh
  40eca7:	or     DWORD PTR [eax+0x65],eax
  40ecaa:	(bad)  
  40ecab:	fldl2e 
  40ecad:	dec    ebp
  40ecae:	pop    ss
  40ecaf:	ficom  DWORD PTR [ecx-0x6df61390]
  40ecb5:	pop    ebp
  40ecb6:	or     BYTE PTR [edx+0x16],ah
  40ecb9:	leave  
  40ecba:	into   
  40ecbb:	rcr    bl,1
  40ecbd:	mov    esp,0x1861781
  40ecc2:	je     0x40ecf5
  40ecc4:	mov    ds:0x9bbb919a,al
  40ecc9:	push   cx
  40eccb:	sub    ebp,edi
  40eccd:	jmp    0x40ecef
  40eccf:	iret   
  40ecd0:	daa    
  40ecd1:	push   eax
  40ecd2:	loope  0x40ed50
  40ecd4:	dec    ebp
  40ecd5:	dec    esi
  40ecd6:	mov    edx,DWORD PTR [ecx+0x75579738]
  40ecdc:	fild   QWORD PTR [esi+eax*2]
  40ecdf:	xchg   esp,eax
  40ece0:	mov    edx,0xd31ae95e
  40ece5:	imul   edx,esp,0xfffffffc
  40ece8:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40ecea:	jb     0x40ed05
  40ecec:	int    0x78
  40ecee:	lods   al,BYTE PTR ds:[esi]
  40ecef:	fcomp  DWORD PTR [ecx+eax*1]
  40ecf2:	dec    ecx
  40ecf3:	fldcw  WORD PTR [ecx+0x68]
  40ecf6:	leave  
  40ecf7:	jno    0x40ec81
  40ecf9:	xchg   esp,eax
  40ecfa:	test   bl,ah
  40ecfc:	cdq    
  40ecfd:	xor    DWORD PTR [esi-0x26],eax
  40ed00:	mov    cl,bl
  40ed02:	retf   
  40ed03:	popf   
  40ed04:	seto   BYTE PTR [ecx+0x4e]
  40ed08:	cmp    bh,BYTE PTR [ebx-0x4ca19690]
  40ed0e:	jge    0x40ecac
  40ed10:	ins    DWORD PTR es:[edi],dx
  40ed11:	mov    DWORD PTR [esi+0x32],0x3feb275f
  40ed18:	lock dec DWORD PTR [edx-0x3a3a7ae7]
  40ed1f:	dec    ebp
  40ed20:	or     ebp,esi
  40ed22:	stc    
  40ed23:	imul   ebp,DWORD PTR [ebx-0x661d8616],0x8a9f1253
  40ed2d:	add    esp,esp
  40ed2f:	jge    0x40ed69
  40ed31:	sbb    edx,eax
  40ed33:	in     al,0x23
  40ed35:	leave  
  40ed36:	fwait
  40ed37:	and    al,0xb1
  40ed39:	dec    eax
  40ed3a:	or     ah,BYTE PTR [eax+0x5bc0e00d]
  40ed40:	sub    DWORD PTR ds:0x2c0389f,eax
  40ed46:	pop    ds
  40ed47:	mov    ebp,0xfcdc0ab0
  40ed4c:	cdq    
  40ed4d:	arpl   WORD PTR [edi],bp
  40ed4f:	daa    
  40ed50:	out    0xf7,eax
  40ed52:	out    dx,al
  40ed53:	adc    BYTE PTR [eax+0x4049888],cl
  40ed59:	fs inc ebp
  40ed5b:	adc    cl,bh
  40ed5d:	push   ss
  40ed5e:	aaa    
  40ed5f:	add    edx,esi
  40ed61:	out    0x3e,eax
  40ed63:	mov    ds:0x5b38149e,eax
  40ed68:	inc    ebp
  40ed69:	sbb    BYTE PTR [esi+0x7e],cl
  40ed6c:	sbb    al,0x31
  40ed6e:	in     al,0xc5
  40ed70:	sub    cl,BYTE PTR [ecx-0x30]
  40ed73:	pop    edx
  40ed74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed75:	pop    esi
  40ed76:	mov    ds:0x8c9ac0f8,eax
  40ed7b:	xchg   edx,eax
  40ed7c:	icebp  
  40ed7d:	shl    BYTE PTR [edi],cl
  40ed7f:	xchg   esp,eax
  40ed80:	scas   eax,DWORD PTR es:[edi]
  40ed81:	jne    0x40ed7b
  40ed83:	(bad)  
  40ed84:	test   eax,0xc405cd5e
  40ed89:	pop    ds
  40ed8a:	mov    ds:0xe703db1,al
  40ed8f:	mov    esp,0x34598937
  40ed94:	(bad)  
  40ed95:	ror    DWORD PTR [esi-0x5f0ab9a7],0x58
  40ed9c:	mov    al,ds:0x20b89ce0
  40eda1:	inc    esi
  40eda2:	sbb    DWORD PTR [ebp+0x345429b2],0x7a
  40eda9:	fcomp  st(3)
  40edab:	xchg   edi,eax
  40edac:	fs jnp 0x40ed3d
  40edaf:	dec    esi
  40edb0:	aam    0xe8
  40edb2:	push   cs
  40edb3:	test   DWORD PTR [ebx],esp
  40edb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edb6:	or     edi,ebp
  40edb8:	rol    eax,0x17
  40edbb:	dec    edi
  40edbc:	and    al,0xa0
  40edbe:	or     eax,0xa0f4f2d1
  40edc3:	ss (bad) 
  40edc5:	jmp    0x40eddd
  40edc7:	ror    BYTE PTR [edx-0x51],0x1f
  40edcb:	adc    edi,DWORD PTR [ebp+0x63]
  40edce:	mov    WORD PTR [edi+0x405a8254],ds
  40edd4:	xlat   BYTE PTR ds:[ebx]
  40edd5:	mov    bh,0xdb
  40edd7:	pop    ds
  40edd8:	outs   dx,BYTE PTR ds:[esi]
  40edd9:	or     DWORD PTR es:[edi],edi
  40eddc:	dec    eax
  40eddd:	xchg   esp,eax
  40edde:	push   eax
  40eddf:	jp     0x40ee1c
  40ede1:	mov    dl,0x37
  40ede3:	fucomp st(7)
  40ede5:	sbb    dh,BYTE PTR [ebx]
  40ede7:	arpl   WORD PTR [edx+0x16],si
  40edea:	mov    eax,0x295a6b9a
  40edef:	xor    ah,bl
  40edf1:	iret   
  40edf2:	add    BYTE PTR ds:0x434be90f,cl
  40edf8:	(bad)  
  40edf9:	stc    
  40edfa:	mov    ebp,0x9296ead1
  40edff:	xor    BYTE PTR [eax+0x11a1258f],0xc4
  40ee06:	dec    edi
  40ee07:	jbe    0x40ed94
  40ee09:	inc    esp
  40ee0a:	add    cl,BYTE PTR [ebx*4-0x3a5fc344]
  40ee11:	loope  0x40ee5f
  40ee13:	xor    al,0x78
  40ee15:	call   FWORD PTR [eax+0x7ecdd3e0]
  40ee1b:	sti    
  40ee1c:	xrelease lock sbb BYTE PTR es:[ebx+0x4c],bh
  40ee22:	sub    ebp,DWORD PTR [ecx]
  40ee24:	jnp    0x40edbd
  40ee26:	mov    cl,dh
  40ee28:	test   eax,edi
  40ee2a:	lods   al,BYTE PTR ds:[esi]
  40ee2b:	outs   dx,DWORD PTR ds:[esi]
  40ee2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee2d:	mov    bl,0x9f
  40ee2f:	fsub   QWORD PTR [edx-0x182fd050]
  40ee35:	and    edx,edi
  40ee37:	mul    DWORD PTR [ecx-0x4c]
  40ee3a:	cmp    BYTE PTR [ecx],0x9e
  40ee3d:	push   es
  40ee3e:	sbb    BYTE PTR [ebp+0x6b],dl
  40ee41:	push   eax
  40ee42:	mov    edi,0x8265fd4d
  40ee47:	pop    ebx
  40ee48:	mov    bl,0xe1
  40ee4a:	dec    eax
  40ee4b:	jns    0x40eebd
  40ee4d:	and    DWORD PTR [edx-0x603702df],esi
  40ee53:	sbb    esp,DWORD PTR [ebp-0x74]
  40ee56:	mov    esp,0x456a1ca8
  40ee5b:	mov    edx,0xb2d55476
  40ee60:	(bad)  
  40ee61:	sbb    BYTE PTR [eax-0x12],dh
  40ee64:	test   DWORD PTR [ecx+0x3b7e8c6c],edi
  40ee6a:	neg    ecx
  40ee6c:	mov    ebp,0xddb0c8ba
  40ee71:	jge    0x40ee47
  40ee73:	cmp    dh,BYTE PTR [edi]
  40ee75:	mov    al,0x85
  40ee77:	mov    dl,0xbd
  40ee79:	jns    0x40ee1c
  40ee7b:	cwde   
  40ee7c:	stos   DWORD PTR es:[edi],eax
  40ee7d:	enter  0xa22f,0x94
  40ee81:	xchg   ebx,eax
  40ee82:	sub    eax,ebp
  40ee84:	jmp    0x40eec1
  40ee86:	hlt    
  40ee87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee88:	pop    esp
  40ee89:	sar    DWORD PTR [esi-0x7b344591],1
  40ee8f:	xchg   ebx,eax
  40ee90:	stos   BYTE PTR es:[edi],al
  40ee91:	scas   eax,DWORD PTR es:[edi]
  40ee92:	imul   ebp,ebp,0x73
  40ee95:	ds mov dl,0x57
  40ee98:	xchg   ebx,eax
  40ee99:	sbb    BYTE PTR [eax+0x74],cl
  40ee9c:	sub    bl,al
  40ee9e:	nop
  40ee9f:	pop    ecx
  40eea0:	xor    bh,BYTE PTR [ecx+0x10dc226a]
  40eea6:	mov    bl,0xc6
  40eea8:	fst    QWORD PTR [edi+ecx*8-0x17]
  40eeac:	mov    al,0xfd
  40eeae:	xlat   BYTE PTR ds:[ebx]
  40eeaf:	jbe    0x40ef05
  40eeb1:	bound  esi,QWORD PTR [edx-0x6bcf609a]
  40eeb7:	aas    
  40eeb8:	push   es
  40eeb9:	in     al,0x93
  40eebb:	push   esp
  40eebc:	inc    edi
  40eebd:	pop    edx
  40eebe:	out    dx,eax
  40eebf:	cs xchg esp,eax
  40eec1:	jae    0x40eea7
  40eec3:	enter  0x39b,0x94
  40eec7:	bnd jnp 0x40ee5d
  40eeca:	jecxz  0x40ef32
  40eecc:	ja     0x40ef26
  40eece:	cwde   
  40eecf:	das    
  40eed0:	inc    ebx
  40eed1:	(bad)  
  40eed2:	arpl   WORD PTR [ecx+0x227f049d],ax
  40eed8:	sahf   
  40eed9:	lock in eax,dx
  40eedb:	lahf   
  40eedc:	adc    eax,0xbf2b6b1
  40eee1:	jcxz   0x40ee7f
  40eee4:	jge    0x40eebd
  40eee6:	imul   esp,DWORD PTR [eax+0x18275184],0xffffffc4
  40eeed:	pushf  
  40eeee:	or     edx,DWORD PTR [ecx+0x178e8ece]
  40eef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eef5:	outs   dx,BYTE PTR ds:[esi]
  40eef6:	sbb    al,0x15
  40eef8:	push   edi
  40eef9:	mov    DWORD PTR [ebx],edx
  40eefb:	gs test al,0xf
  40eefe:	push   esi
  40eeff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef00:	dec    esp
  40ef01:	xchg   ebp,eax
  40ef02:	fld    st(5)
  40ef04:	jmp    0x7b48afe7
  40ef09:	fwait
  40ef0a:	xchg   ecx,eax
  40ef0b:	arpl   WORD PTR [edi+edx*4+0x44dbd8f3],sp
  40ef12:	add    BYTE PTR [ecx-0x5d],dh
  40ef15:	sbb    DWORD PTR [ebx],eax
  40ef17:	push   ss
  40ef18:	pop    ss
  40ef19:	mov    cl,0x67
  40ef1b:	or     al,0x58
  40ef1d:	sub    BYTE PTR [eax-0x61f34a7d],ah
  40ef23:	xor    esi,DWORD PTR [si]
  40ef26:	repz loopne 0x40eeb8
  40ef29:	pop    esi
  40ef2a:	retf   0x6da2
  40ef2d:	mov    ah,0xa4
  40ef2f:	inc    ebx
  40ef30:	xor    DWORD PTR [edi+0xb],edx
  40ef33:	cmp    eax,0xcd93c713
  40ef38:	add    dh,BYTE PTR [edi]
  40ef3a:	ret    0x881b
  40ef3d:	jne    0x40eed1
  40ef3f:	pop    esi
  40ef40:	das    
  40ef41:	mov    bh,0x8c
  40ef43:	aad    0xf9
  40ef45:	daa    
  40ef46:	pop    ebp
  40ef47:	sar    esi,1
  40ef49:	outs   dx,DWORD PTR ds:[esi]
  40ef4a:	dec    esi
  40ef4b:	cdq    
  40ef4c:	inc    edi
  40ef4d:	sub    BYTE PTR [ebx-0x7bb7b0e9],cl
  40ef53:	jecxz  0x40efcf
  40ef55:	pushf  
  40ef56:	cdq    
  40ef57:	test   eax,0xb5e917d7
  40ef5c:	cld    
  40ef5d:	(bad)  
  40ef5e:	push   edi
  40ef5f:	mov    ah,0xf6
  40ef61:	push   ss
  40ef62:	xor    esi,esp
  40ef64:	imul   ebp,edi,0xfffffff2
  40ef67:	fcomp  QWORD PTR [edi]
  40ef69:	dec    edx
  40ef6a:	push   cs
  40ef6b:	push   cs
  40ef6c:	pop    es
  40ef6d:	lahf   
  40ef6e:	scas   al,BYTE PTR es:[edi]
  40ef6f:	aas    
  40ef70:	jge    0x40ef51
  40ef72:	add    eax,0x9c027011
  40ef77:	or     ebp,esp
  40ef79:	shl    DWORD PTR [edx-0x4f],cl
  40ef7c:	(bad)  
  40ef7d:	int    0x84
  40ef7f:	enter  0x71bb,0xcd
  40ef83:	mov    bl,0xa0
  40ef85:	(bad)  
  40ef86:	xor    al,0xcc
  40ef88:	xor    al,0x99
  40ef8a:	popf   
  40ef8b:	mov    ecx,0x7be5a423
  40ef90:	jge    0x40efaa
  40ef92:	retf   
  40ef93:	mov    ds:0x552c8f8c,al
  40ef98:	in     eax,0x90
  40ef9a:	test   DWORD PTR [edx+0x783b7131],esi
  40efa0:	xor    bh,BYTE PTR [esp+edx*1]
  40efa3:	xchg   bl,dl
  40efa5:	loope  0x40efcd
  40efa7:	adc    eax,0x7f407119
  40efac:	push   0xadef5a35
  40efb1:	pop    ss
  40efb2:	mov    al,BYTE PTR [ebp-0x1]
  40efb5:	and    DWORD PTR ds:0x429018,0x0
  40efbf:	xor    ecx,ecx
  40efc1:	or     ecx,DWORD PTR ds:0x429018
  40efc7:	inc    ecx
  40efc8:	mov    DWORD PTR ds:0x429018,ecx
  40efce:	cmp    DWORD PTR ds:0x429018,0xa
  40efd5:	jne    0x40efe1
  40efdb:	call   DWORD PTR ds:0x42e9b3
  40efe1:	cmp    DWORD PTR ds:0x429018,0x9
  40efe8:	jne    0x40effb
  40efee:	mov    ecx,DWORD PTR ds:0x429018
  40eff4:	inc    ecx
  40eff5:	mov    DWORD PTR ds:0x429018,ecx
  40effb:	cmp    DWORD PTR ds:0x429018,0x1e
  40f002:	jb     0x40efbf
  40f008:	sub    DWORD PTR ds:0x42c014,ecx
  40f00e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f011:	xor    al,0x73
  40f013:	sub    al,0x9
  40f015:	mov    DWORD PTR ds:0x42b000,0xef4
  40f01f:	mov    BYTE PTR [ecx],al
  40f021:	and    DWORD PTR ds:0x42b01c,0x42a004
  40f02b:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  40f032:	sbb    DWORD PTR ds:0x429024,0xfd3
  40f03c:	push   ebx
  40f03d:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  40f044:	mov    ecx,DWORD PTR [ebp-0x18]
  40f047:	xor    eax,0x6376
  40f04c:	push   esi
  40f04d:	and    DWORD PTR ds:0x42c01c,0x0
  40f057:	jmp    0x40f06a
  40f05c:	xor    eax,eax
  40f05e:	add    eax,DWORD PTR ds:0x42c01c
  40f064:	inc    eax
  40f065:	mov    ds:0x42c01c,eax
  40f06a:	cmp    DWORD PTR ds:0x42c01c,0x16
  40f071:	jae    0x40f0bd
  40f077:	cmp    DWORD PTR ds:0x42c01c,0x4
  40f07e:	jne    0x40f0a0
  40f084:	push   DWORD PTR [ebp-0x24]
  40f087:	push   0x42901c
  40f08c:	push   DWORD PTR [ebp-0x18]
  40f08f:	push   DWORD PTR [ebp-0x14]
  40f092:	push   DWORD PTR [ebp-0x24]
  40f095:	push   0x236f
  40f09a:	call   DWORD PTR ds:0x42e9b7
  40f0a0:	cmp    DWORD PTR ds:0x42c01c,0x3
  40f0a7:	jne    0x40f0b8
  40f0ad:	mov    eax,ds:0x42c01c
  40f0b2:	inc    eax
  40f0b3:	mov    ds:0x42c01c,eax
  40f0b8:	jmp    0x40f05c
  40f0bd:	mov    eax,0x7510899
  40f0c2:	xor    ecx,eax
  40f0c4:	mov    esi,0x3272e0
  40f0c9:	adc    DWORD PTR ds:0x42a014,0x429010
  40f0d3:	push   edi
  40f0d4:	add    ecx,esi
  40f0d6:	jmp    0x40f0fa
  40f0db:	mov    DWORD PTR ds:0x42c014,0x1850
  40f0e5:	mov    dl,BYTE PTR [ebp-0x1]
  40f0e8:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40f0ef:	mov    DWORD PTR ds:0x42a00c,0x213a
  40f0f9:	inc    ecx
  40f0fa:	mov    DWORD PTR ds:0x42b000,0x51ce
  40f104:	cmp    ecx,0x40
  40f107:	jb     0x40f0db
  40f10d:	mov    edx,DWORD PTR [ebp-0x18]
  40f110:	xor    edx,eax
  40f112:	add    edx,esi
  40f114:	mov    DWORD PTR ds:0x42c00c,0x7eb4
  40f11e:	jmp    0x40f1de
  40f123:	sub    DWORD PTR ds:0x42d018,edi
  40f129:	mov    edi,DWORD PTR [ebp+0x8]
  40f12c:	and    DWORD PTR ds:0x42d008,0x0
  40f136:	jmp    0x40f14a
  40f13b:	xor    ecx,ecx
  40f13d:	or     ecx,DWORD PTR ds:0x42d008
  40f143:	inc    ecx
  40f144:	mov    DWORD PTR ds:0x42d008,ecx
  40f14a:	cmp    DWORD PTR ds:0x42d008,0x18
  40f151:	jae    0x40f175
  40f157:	cmp    DWORD PTR ds:0x42d008,0x26
  40f15e:	jne    0x40f16a
  40f164:	call   DWORD PTR ds:0x42e9bb
  40f16a:	jmp    0x40f13b
  40f16f:	xor    DWORD PTR ds:0x42a00c,edx
  40f175:	mov    ecx,0x8a8c
  40f17a:	xor    DWORD PTR ds:0x42a004,0x50dc
  40f184:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f189:	mov    edi,0x3b50
  40f18e:	add    DWORD PTR ds:0x429008,0x42b008
  40f198:	add    cx,di
  40f19b:	xor    DWORD PTR ds:0x429018,0x2fa9
  40f1a5:	movzx  ecx,cx
  40f1a8:	mov    DWORD PTR [ebp-0xc],ecx
  40f1ab:	mov    ecx,DWORD PTR [ebp+0x8]
  40f1ae:	add    DWORD PTR ds:0x42b000,0x4595
  40f1b8:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f1bc:	mov    DWORD PTR ds:0x42c010,0x3cf8
  40f1c6:	xor    ecx,0x8a8c
  40f1cc:	add    ecx,edi
  40f1ce:	mov    edi,0x13c
  40f1d3:	mov    edi,DWORD PTR [ebp-0xc]
  40f1d6:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40f1dd:	inc    edx
  40f1de:	mov    DWORD PTR ds:0x42c008,0x3284
  40f1e8:	mov    ecx,DWORD PTR [ebp-0x10]
  40f1eb:	mov    DWORD PTR ds:0x42d00c,0x2d6d
  40f1f5:	cmp    edx,ecx
  40f1f7:	jne    0x40f123
  40f1fd:	xor    edi,DWORD PTR ds:0x42900c
  40f203:	mov    ecx,DWORD PTR [ebp-0x18]
  40f206:	and    DWORD PTR ds:0x429024,0x0
  40f210:	jmp    0x40f224
  40f215:	xor    edx,edx
  40f217:	or     edx,DWORD PTR ds:0x429024
  40f21d:	inc    edx
  40f21e:	mov    DWORD PTR ds:0x429024,edx
  40f224:	cmp    DWORD PTR ds:0x429024,0x10
  40f22b:	jae    0x40f27a
  40f231:	cmp    DWORD PTR ds:0x429024,0xa
  40f238:	jne    0x40f24f
  40f23e:	push   DWORD PTR [ebp-0x14]
  40f241:	push   0x42b018
  40f246:	push   DWORD PTR [ebp-0x14]
  40f249:	call   DWORD PTR ds:0x42e9bf
  40f24f:	cmp    DWORD PTR ds:0x429024,0x9
  40f256:	jne    0x40f26b
  40f25c:	xor    edx,edx
  40f25e:	xor    edx,DWORD PTR ds:0x429024
  40f264:	inc    edx
  40f265:	mov    DWORD PTR ds:0x429024,edx
  40f26b:	jmp    0x40f215
  40f270:	adc    DWORD PTR ds:0x42d00c,0x5b30
  40f27a:	mov    edx,DWORD PTR [ebp+0x10]
  40f27d:	xor    edi,0x523a
  40f283:	xor    ecx,eax
  40f285:	dec    DWORD PTR ds:0x42b010
  40f28b:	add    ecx,esi
  40f28d:	mov    DWORD PTR [edx],ecx
  40f28f:	sbb    DWORD PTR ds:0x42d004,0x42a008
  40f299:	mov    ecx,DWORD PTR [ebp-0x18]
  40f29c:	inc    edi
  40f29d:	xor    ecx,eax
  40f29f:	mov    edi,DWORD PTR ds:0x42a000
  40f2a5:	xor    DWORD PTR ds:0x42a004,edi
  40f2ab:	add    ecx,esi
  40f2ad:	mov    DWORD PTR ds:0x42d000,0x15
  40f2b7:	cmp    DWORD PTR ds:0x42d000,0x0
  40f2be:	je     0x40f2f6
  40f2c4:	cmp    DWORD PTR ds:0x42d000,0x1a
  40f2cb:	jne    0x40f2e4
  40f2d1:	push   0x42e111
  40f2d6:	push   0x42e0c7
  40f2db:	push   DWORD PTR [ebp-0x20]
  40f2de:	call   DWORD PTR ds:0x42e9c7
  40f2e4:	mov    edi,DWORD PTR ds:0x42d000
  40f2ea:	dec    edi
  40f2eb:	mov    DWORD PTR ds:0x42d000,edi
  40f2f1:	jmp    0x40f2b7
  40f2f6:	mov    DWORD PTR [ebp-0xc],ecx
  40f2f9:	not    edi
  40f2fb:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  40f302:	mov    DWORD PTR [ebp-0x14],0xf89c85a9
  40f309:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  40f310:	and    DWORD PTR ds:0x42b010,ecx
  40f316:	mov    ecx,DWORD PTR [ebp-0x14]
  40f319:	mov    DWORD PTR ds:0x42b018,0x1d
  40f323:	cmp    DWORD PTR ds:0x42b018,0x0
  40f32a:	je     0x40f37c
  40f330:	cmp    DWORD PTR ds:0x42b018,0xc
  40f337:	jne    0x40f348
  40f33d:	push   0x42e0d9
  40f342:	call   DWORD PTR ds:0x42e9cb
  40f348:	cmp    DWORD PTR ds:0x42b018,0xd
  40f34f:	jne    0x40f362
  40f355:	mov    edi,DWORD PTR ds:0x42b018
  40f35b:	dec    edi
  40f35c:	mov    DWORD PTR ds:0x42b018,edi
  40f362:	xor    edi,edi
  40f364:	xor    edi,DWORD PTR ds:0x42b018
  40f36a:	dec    edi
  40f36b:	mov    DWORD PTR ds:0x42b018,edi
  40f371:	jmp    0x40f323
  40f376:	not    DWORD PTR ds:0x42d018
  40f37c:	mov    DWORD PTR [ebp+0x8],ecx
  40f37f:	sub    edi,ecx
  40f381:	mov    ecx,DWORD PTR [ebp+0x8]
  40f384:	and    DWORD PTR ds:0x42a010,0x408f
  40f38e:	xor    ecx,eax
  40f390:	add    ecx,esi
  40f392:	mov    ecx,0x242ebed
  40f397:	not    edi
  40f399:	mov    edi,0xf641bea
  40f39e:	je     0x418714
  40f3a4:	mov    edx,DWORD PTR [ebp+0x8]
  40f3a7:	or     DWORD PTR ds:0x429008,0x3119
  40f3b1:	mov    ebx,DWORD PTR [ebp-0x8]
  40f3b4:	adc    DWORD PTR ds:0x42a018,0x42c014
  40f3be:	xor    edx,eax
  40f3c0:	xor    ebx,eax
  40f3c2:	sub    DWORD PTR ds:0x42c004,0x429010
  40f3cc:	sub    edx,ebx
  40f3ce:	sub    edx,esi
  40f3d0:	xor    edx,eax
  40f3d2:	mov    DWORD PTR [ebp+0x8],edx
  40f3d5:	inc    DWORD PTR ds:0x42b010
  40f3db:	mov    edx,DWORD PTR [ebp+0x8]
  40f3de:	mov    ebx,DWORD PTR [ebp-0x58]
  40f3e1:	add    edx,0x5708f8
  40f3e7:	sub    DWORD PTR ds:0x42c01c,0x72ca
  40f3f1:	imul   edx,ebx
  40f3f4:	xor    DWORD PTR ds:0x429024,edi
  40f3fa:	mov    DWORD PTR [ebp-0x58],edx
  40f3fd:	and    DWORD PTR ds:0x42d004,0x0
  40f407:	mov    ebx,DWORD PTR ds:0x42d004
  40f40d:	inc    ebx
  40f40e:	mov    DWORD PTR ds:0x42d004,ebx
  40f414:	cmp    DWORD PTR ds:0x42d004,0x1e
  40f41b:	jne    0x40f42c
  40f421:	push   0x42a004
  40f426:	call   DWORD PTR ds:0x42e9d3
  40f42c:	cmp    DWORD PTR ds:0x42d004,0x17
  40f433:	jb     0x40f407
  40f439:	mov    edx,DWORD PTR [ebp+0x8]
  40f43c:	mov    ebx,DWORD PTR [ebp-0x54]
  40f43f:	add    edx,0x64f8da
  40f445:	xor    DWORD PTR ds:0x42b004,0x42b000
  40f44f:	or     edx,ebx
  40f451:	adc    DWORD PTR ds:0x42c014,0x3307
  40f45b:	mov    DWORD PTR [ebp-0x54],edx
  40f45e:	add    DWORD PTR ds:0x42d004,0x3241
  40f468:	mov    edx,DWORD PTR [ebp+0x8]
  40f46b:	sub    DWORD PTR ds:0x42900c,0x6cc3
  40f475:	mov    ebx,DWORD PTR [ebp-0x50]
  40f478:	xor    DWORD PTR ds:0x42b014,0x42c01c
  40f482:	add    edx,ecx
  40f484:	adc    DWORD PTR ds:0x42c000,0x429028
  40f48e:	xor    edx,ebx
  40f490:	mov    DWORD PTR [ebp-0x50],edx
  40f493:	and    DWORD PTR ds:0x429018,0x0
  40f49d:	mov    ebx,DWORD PTR ds:0x429018
  40f4a3:	inc    ebx
  40f4a4:	mov    DWORD PTR ds:0x429018,ebx
  40f4aa:	cmp    DWORD PTR ds:0x429018,0x1f
  40f4b1:	jne    0x40f4cc
  40f4b7:	push   0x42c010
  40f4bc:	push   0x42c018
  40f4c1:	push   0x42a008
  40f4c6:	call   DWORD PTR ds:0x42e993
  40f4cc:	cmp    DWORD PTR ds:0x429018,0x1e
  40f4d3:	jb     0x40f49d
  40f4d9:	inc    edx
  40f4da:	mov    edx,DWORD PTR [ebp+0x8]
  40f4dd:	mov    ebx,DWORD PTR [ebp-0x4c]
  40f4e0:	add    DWORD PTR ds:0x42d010,0x42d01c
  40f4ea:	add    edx,edi
  40f4ec:	adc    DWORD PTR ds:0x42d018,0x42b01c
  40f4f6:	and    edx,ebx
  40f4f8:	mov    DWORD PTR [ebp-0x4c],edx
  40f4fb:	or     edx,DWORD PTR ds:0x42b000
  40f501:	mov    edx,DWORD PTR [ebp+0x8]
  40f504:	mov    ebx,DWORD PTR ds:0x42d000
  40f50a:	sub    DWORD PTR ds:0x42a000,ebx
  40f510:	mov    ebx,DWORD PTR [ebp-0x48]
  40f513:	or     DWORD PTR ds:0x42c000,0x42c010
  40f51d:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f524:	mov    DWORD PTR [ebp-0x48],edx
  40f527:	mov    edx,DWORD PTR [ebp+0x8]
  40f52a:	mov    ebx,0xfa5e15e2
  40f52f:	inc    DWORD PTR ds:0x42d018
  40f535:	sub    ebx,edx
  40f537:	movzx  edx,WORD PTR ds:0x42c018
  40f53e:	adc    edx,DWORD PTR ds:0x429028
  40f544:	mov    DWORD PTR ds:0x42c018,edx
  40f54a:	add    ebx,DWORD PTR [ebp-0x44]
  40f54d:	mov    DWORD PTR [ebp-0x44],ebx
  40f550:	and    DWORD PTR ds:0x42b018,0x0
  40f55a:	jmp    0x40f56c
  40f55f:	mov    edx,DWORD PTR ds:0x42b018
  40f565:	inc    edx
  40f566:	mov    DWORD PTR ds:0x42b018,edx
  40f56c:	cmp    DWORD PTR ds:0x42b018,0x19
  40f573:	jae    0x40f616
  40f579:	cmp    DWORD PTR ds:0x42b018,0x6
  40f580:	jne    0x40f594
  40f586:	push   0x0
  40f588:	push   DWORD PTR [ebp-0x10]
  40f58b:	push   DWORD PTR [ebp-0x28]
  40f58e:	call   DWORD PTR ds:0x42e997
  40f594:	cmp    DWORD PTR ds:0x42b018,0x5
  40f59b:	jne    0x40f5ae
  40f5a1:	mov    edx,DWORD PTR ds:0x42b018
  40f5a7:	inc    edx
  40f5a8:	mov    DWORD PTR ds:0x42b018,edx
  40f5ae:	jmp    0x40f55f
  40f5b3:	mov    DWORD PTR ds:0x42b00c,0x18
  40f5bd:	cmp    DWORD PTR ds:0x42b00c,0x0
  40f5c4:	je     0x40f616
  40f5ca:	cmp    DWORD PTR ds:0x42b00c,0x1e
  40f5d1:	jne    0x40f5fa
  40f5d7:	push   0x3551
  40f5dc:	push   DWORD PTR [ebp-0x28]
  40f5df:	push   0x42c000
  40f5e4:	push   DWORD PTR [ebp-0x10]
  40f5e7:	push   0x1896
  40f5ec:	push   0x8105
  40f5f1:	push   DWORD PTR [ebp-0xc]
  40f5f4:	call   DWORD PTR ds:0x42e99f
  40f5fa:	mov    edx,DWORD PTR ds:0x42b00c
  40f600:	dec    edx
  40f601:	mov    DWORD PTR ds:0x42b00c,edx
  40f607:	jmp    0x40f5bd
  40f60c:	add    DWORD PTR ds:0x42d00c,0x25c6
  40f616:	mov    edx,DWORD PTR [ebp+0x8]
  40f619:	adc    DWORD PTR ds:0x42d018,0x42a00c
  40f623:	xor    edx,eax
  40f625:	adc    DWORD PTR ds:0x42b010,0x4589
  40f62f:	add    edx,esi
  40f631:	mov    DWORD PTR ds:0x42d014,0x3f58
  40f63b:	jne    0x40f3a4
  40f641:	jmp    0x418714
  40f646:	adc    edx,edx
  40f648:	mov    edx,DWORD PTR [ebp-0xc]
  40f64b:	sub    edx,esi
  40f64d:	xor    edx,eax
  40f64f:	mov    DWORD PTR [ebp-0x5c],edx
  40f652:	mov    edx,DWORD PTR [ebp-0x10]
  40f655:	mov    ebx,DWORD PTR [ebp-0x8]
  40f658:	xor    edx,eax
  40f65a:	xor    ebx,eax
  40f65c:	sub    edx,ebx
  40f65e:	sub    edx,esi
  40f660:	xor    edx,eax
  40f662:	mov    DWORD PTR [ebp-0x10],edx
  40f665:	mov    edx,DWORD PTR [ebp-0x14]
  40f668:	mov    DWORD PTR [ebp+0x8],edx
  40f66b:	jmp    0x411a66
  40f670:	mov    edx,DWORD PTR [ebp+0x8]
  40f673:	mov    ebx,DWORD PTR [ebp-0x8]
  40f676:	xor    edx,eax
  40f678:	xor    ebx,eax
  40f67a:	sub    edx,ebx
  40f67c:	sub    edx,esi
  40f67e:	xor    edx,eax
  40f680:	mov    DWORD PTR [ebp+0x8],edx
  40f683:	jmp    0x411a09
  40f688:	aaa    
  40f689:	xchg   BYTE PTR [edi-0x3a],cl
  40f68c:	jae    0x40f709
  40f68e:	mov    ebx,0xae43537b
  40f693:	xor    al,0x1c
  40f695:	inc    ebx
  40f696:	int    0x2b
  40f698:	xchg   edx,ecx
  40f69a:	jp     0x40f716
  40f69c:	add    DWORD PTR [edi+0x7a],ebx
  40f69f:	jp     0x40f6e4
  40f6a1:	inc    eax
  40f6a2:	mov    dl,0x72
  40f6a4:	mov    dl,0x86
  40f6a6:	les    ecx,FWORD PTR [eax+0x1fc0e893]
  40f6ac:	leave  
  40f6ad:	loopne 0x40f725
  40f6af:	sahf   
  40f6b0:	jle    0x40f63e
  40f6b2:	sub    ecx,eax
  40f6b4:	add    eax,0x94313052
  40f6b9:	push   ds
  40f6ba:	sub    DWORD PTR [edx],edx
  40f6bc:	add    edi,DWORD PTR [esi+0x16]
  40f6bf:	(bad)  
  40f6c0:	out    dx,al
  40f6c1:	dec    edx
  40f6c2:	ins    BYTE PTR es:[edi],dx
  40f6c3:	sbb    eax,eax
  40f6c5:	pusha  
  40f6c6:	popa   
  40f6c7:	cmp    DWORD PTR [edi],esp
  40f6c9:	(bad)  
  40f6ca:	cdq    
  40f6cb:	sub    DWORD PTR [ecx-0x38],ebx
  40f6ce:	pop    eax
  40f6cf:	sbb    ecx,DWORD PTR [eax]
  40f6d1:	cmp    al,0xcf
  40f6d3:	pop    edi
  40f6d4:	adc    ebp,edx
  40f6d6:	adc    esi,DWORD PTR [ebx+0x76]
  40f6d9:	(bad)  
  40f6da:	shl    BYTE PTR [edi+0x27dfbb4a],1
  40f6e0:	pushf  
  40f6e1:	fadd   DWORD PTR [ecx+0x40]
  40f6e4:	fucom  st(7)
  40f6e6:	dec    edi
  40f6e7:	sbb    DWORD PTR [ecx+edi*8+0x55],edx
  40f6eb:	lahf   
  40f6ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6ed:	cmp    ebx,DWORD PTR [edi]
  40f6ef:	pop    edi
  40f6f0:	xor    al,0x94
  40f6f2:	mov    ebp,0xad7e4852
  40f6f7:	in     al,0xf9
  40f6f9:	out    0x12,al
  40f6fb:	mov    ds:0x79a779ad,eax
  40f700:	aam    0xc8
  40f702:	push   es
  40f703:	imul   edi,DWORD PTR [edx+0x23],0xdd689251
  40f70a:	push   edi
  40f70b:	add    eax,DWORD PTR [edx-0x65]
  40f70e:	sub    al,0x93
  40f710:	ret    
  40f711:	mov    eax,ds:0x780d7d87
  40f716:	out    dx,al
  40f717:	stc    
  40f718:	mov    cl,0x67
  40f71a:	into   
  40f71b:	imul   edi,DWORD PTR [ebx],0xffffffdf
  40f71e:	or     edi,esi
  40f720:	test   eax,0x24586516
  40f725:	pop    esi
  40f726:	add    DWORD PTR [esi-0x43],esp
  40f729:	fnsave [edx-0x6c3c3161]
  40f72f:	scas   al,BYTE PTR es:[edi]
  40f730:	push   esi
  40f731:	push   edx
  40f732:	pop    edi
  40f733:	cdq    
  40f734:	(bad)  
  40f735:	push   edx
  40f736:	mov    DWORD PTR [ebp+0xc1e0378],edx
  40f73c:	cmp    esi,DWORD PTR [edi-0x6348cfc4]
  40f742:	adc    eax,0xa7267dea
  40f747:	and    ebp,0xffffffa6
  40f74a:	jg     0x40f6db
  40f74c:	add    BYTE PTR [eax],dh
  40f74e:	rol    bl,1
  40f750:	xchg   esi,eax
  40f751:	retf   
  40f752:	out    0xb9,eax
  40f754:	retf   
  40f755:	cmp    al,0x8d
  40f757:	cwde   
  40f758:	jbe    0x40f729
  40f75a:	inc    edi
  40f75b:	pop    ds
  40f75c:	mov    al,ds:0xe4db1c62
  40f761:	loop   0x40f783
  40f763:	mov    ds:0xccb6550d,al
  40f768:	(bad)  
  40f769:	xor    DWORD PTR [esi],edi
  40f76b:	xchg   edi,eax
  40f76c:	inc    ecx
  40f76d:	out    0x7e,al
  40f76f:	jbe    0x40f70e
  40f771:	sub    al,0xdd
  40f773:	jnp    0x40f7b7
  40f775:	daa    
  40f776:	call   0xb14106ca
  40f77b:	jmp    0x40f73a
  40f77d:	sub    eax,0xebb9d5bb
  40f782:	push   eax
  40f783:	adc    DWORD PTR ds:0x8eeec2dd,edx
  40f789:	lods   al,BYTE PTR ss:[esi]
  40f78b:	scas   al,BYTE PTR es:[edi]
  40f78c:	and    al,0x78
  40f78e:	int    0x1
  40f790:	xor    DWORD PTR [edx-0xb492197],esp
  40f796:	and    dh,BYTE PTR [edx+0x72c16520]
  40f79c:	mov    cl,0x2b
  40f79e:	in     eax,dx
  40f79f:	push   0x100cc907
  40f7a4:	(bad)  
  40f7a5:	clc    
  40f7a6:	test   DWORD PTR [ebp+0x40],edi
  40f7a9:	(bad)  
  40f7aa:	add    BYTE PTR [ebp+ecx*4+0x64],al
  40f7ae:	mov    ecx,0x20034b12
  40f7b3:	popf   
  40f7b4:	cld    
  40f7b5:	(bad)  
  40f7b7:	cmp    DWORD PTR [ecx],edx
  40f7b9:	addr16 inc esi
  40f7bb:	fs out 0x4b,al
  40f7be:	cmp    al,0x26
  40f7c0:	pop    esp
  40f7c1:	mov    eax,ds:0x61710ea6
  40f7c6:	sub    DWORD PTR [ecx-0x3],esi
  40f7c9:	adc    esp,DWORD PTR [edx]
  40f7cb:	cmc    
  40f7cc:	push   ecx
  40f7cd:	xchg   esi,eax
  40f7ce:	mov    ds:0xfc40aaf0,al
  40f7d3:	jge    0x40f81e
  40f7d5:	(bad)  
  40f7d6:	fadd   st,st(2)
  40f7d8:	addr16 jmp 0xec8a7dc0
  40f7de:	clc    
  40f7df:	test   DWORD PTR [edi-0x5f7a6cb4],ebx
  40f7e5:	mov    bl,0xed
  40f7e7:	repnz add BYTE PTR [ebx-0x298f3873],0x39
  40f7ef:	adc    al,0xca
  40f7f1:	inc    esi
  40f7f2:	and    al,BYTE PTR [edi+0x11]
  40f7f5:	ror    BYTE PTR [edx],1
  40f7f7:	repnz shl DWORD PTR [edx],1
  40f7fa:	idiv   bh
  40f7fc:	sbb    al,0xe
  40f7fe:	jp     0x40f846
  40f800:	enter  0x48f0,0xac
  40f804:	and    DWORD PTR [edx+0x34],esp
  40f807:	out    0xbb,eax
  40f809:	mov    eax,0x804ded7c
  40f80e:	xchg   ebx,eax
  40f80f:	(bad)  
  40f810:	mov    dl,0x18
  40f812:	stc    
  40f813:	in     eax,0x4c
  40f815:	inc    esp
  40f816:	dec    ecx
  40f817:	xchg   DWORD PTR [esp+edx*4-0x61acdbea],edi
  40f81e:	xchg   edx,eax
  40f81f:	push   ebp
  40f820:	pop    es
  40f821:	jmp    0x77dc:0xadb667a4
  40f828:	add    ebx,DWORD PTR [ebx+0x2]
  40f82b:	aaa    
  40f82c:	test   al,0xaf
  40f82e:	test   eax,0xc8c8475a
  40f833:	ds fucomip st,st(1)
  40f836:	hlt    
  40f837:	rcr    BYTE PTR [edi+edx*1-0x40],1
  40f83b:	mov    edi,0x6ebb5d1a
  40f840:	pop    ss
  40f841:	mov    fs,WORD PTR [esi]
  40f843:	(bad)  
  40f844:	mov    DWORD PTR [ebx+0x6d],ebp
  40f847:	(bad)  
  40f848:	fistp  QWORD PTR [edx-0xc]
  40f84b:	xor    BYTE PTR [edi-0x56],0x24
  40f84f:	push   cs
  40f850:	and    al,0x59
  40f852:	inc    edx
  40f853:	jl     0x40f8b8
  40f855:	(bad)  [ebx+0x2]
  40f858:	int    0x9a
  40f85a:	sbb    al,0xc6
  40f85c:	enter  0xa33e,0xbc
  40f860:	in     eax,0x1d
  40f862:	out    dx,eax
  40f863:	fiadd  WORD PTR [edi+0x71704411]
  40f869:	ror    ch,cl
  40f86b:	cli    
  40f86c:	xchg   edx,eax
  40f86d:	adc    esi,DWORD PTR [ecx]
  40f86f:	les    esi,FWORD PTR [edi]
  40f871:	jo     0x40f803
  40f873:	push   esp
  40f874:	xchg   DWORD PTR [ebx+0x77ea6db7],eax
  40f87a:	and    al,0xbb
  40f87c:	fistp  QWORD PTR [eax]
  40f87e:	mov    cs,WORD PTR [eax]
  40f880:	cmp    eax,0xa39138c9
  40f885:	rol    al,cl
  40f887:	int    0x71
  40f889:	repz ss inc ebp
  40f88c:	lods   al,BYTE PTR ds:[esi]
  40f88d:	(bad)  
  40f88e:	enter  0xd8c3,0xa6
  40f892:	adc    al,0x63
  40f894:	js     0x40f8b6
  40f896:	ja     0x40f872
  40f898:	lods   eax,DWORD PTR ds:[esi]
  40f899:	jns    0x40f8d5
  40f89b:	call   0xb70c2273
  40f8a0:	addr16 add eax,0x409e7ce2
  40f8a6:	outs   dx,DWORD PTR ds:[esi]
  40f8a7:	iret   
  40f8a8:	xor    esi,esp
  40f8aa:	and    al,0x1f
  40f8ac:	or     DWORD PTR [eax+eax*4+0x5f2f632c],edx
  40f8b3:	inc    ecx
  40f8b4:	cmp    bh,cl
  40f8b6:	ret    
  40f8b7:	push   eax
  40f8b8:	xor    ebx,ebp
  40f8ba:	mov    bh,0x90
  40f8bc:	inc    ebx
  40f8bd:	test   DWORD PTR [ecx-0x23a24dc1],esp
  40f8c3:	fnsave [edx-0x14]
  40f8c6:	xchg   esi,eax
  40f8c7:	pop    esp
  40f8c8:	adc    DWORD PTR [ecx-0x3b],eax
  40f8cb:	cmp    ebp,DWORD PTR [eax+ebx*1-0x23c83bce]
  40f8d2:	adc    bl,BYTE PTR ds:[esp+eax*1]
  40f8d6:	rcl    DWORD PTR [ecx+0x2e],cl
  40f8d9:	adc    DWORD PTR [ebp-0x70],0xfd717ba6
  40f8e0:	mov    dh,0xe9
  40f8e2:	dec    edx
  40f8e3:	or     dl,BYTE PTR [edi+ecx*8+0x2a]
  40f8e7:	dec    esp
  40f8e8:	jp     0x40f904
  40f8ea:	test   al,0x1b
  40f8ec:	icebp  
  40f8ed:	je     0x40f91c
  40f8ef:	stos   BYTE PTR es:[edi],al
  40f8f0:	dec    esi
  40f8f1:	clc    
  40f8f2:	jg     0x40f951
  40f8f4:	mov    bh,0x28
  40f8f6:	pop    ecx
  40f8f7:	fstp   QWORD PTR [ebx]
  40f8f9:	dec    ebp
  40f8fa:	pop    ss
  40f8fb:	fcomp  DWORD PTR [edx-0x3d95b91f]
  40f901:	jb     0x40f94f
  40f903:	in     eax,dx
  40f904:	popf   
  40f905:	inc    ebx
  40f906:	dec    edx
  40f907:	pop    esi
  40f908:	pushf  
  40f909:	aad    0xf2
  40f90b:	xor    dl,BYTE PTR [ebx]
  40f90d:	dec    ecx
  40f90e:	adc    BYTE PTR [ecx-0x7f],ah
  40f911:	iret   
  40f912:	call   DWORD PTR [esi-0x16]
  40f915:	sahf   
  40f916:	inc    ecx
  40f917:	arpl   WORD PTR [edi+0x7e],si
  40f91a:	adc    eax,0x7732ce87
  40f91f:	inc    ebp
  40f920:	scas   al,BYTE PTR es:[edi]
  40f921:	(bad)  
  40f922:	fpatan 
  40f924:	jle    0x40f8d7
  40f926:	push   eax
  40f927:	push   ebp
  40f928:	out    0x48,al
  40f92a:	out    0xb7,al
  40f92c:	inc    ebx
  40f92d:	sub    al,0x6d
  40f92f:	sbb    al,0x65
  40f931:	stos   DWORD PTR es:[edi],eax
  40f932:	xchg   DWORD PTR [esi-0x63],ebp
  40f935:	jmp    0xa9b4:0x7a86ffe9
  40f93c:	mov    ebx,0x1380b24
  40f941:	imul   esp,DWORD PTR [edi-0x3374c741],0x373aea65
  40f94b:	loope  0x40f8f5
  40f94d:	push   0xab15c30b
  40f952:	out    dx,al
  40f953:	xchg   edx,edx
  40f955:	push   ecx
  40f956:	aas    
  40f957:	sub    DWORD PTR [edx+eiz*4],ebp
  40f95a:	push   ss
  40f95b:	retf   
  40f95c:	in     al,0x38
  40f95e:	jne    0x40f9d7
  40f960:	push   esi
  40f961:	(bad)  
  40f962:	pusha  
  40f963:	jne    0x40f965
  40f965:	aad    0xdc
  40f967:	(bad)  
  40f968:	aaa    
  40f969:	mov    ebp,0x52b23b57
  40f96e:	stos   DWORD PTR es:[edi],eax
  40f96f:	jae    0x40f97a
  40f971:	jns    0x40f947
  40f973:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f974:	clc    
  40f975:	pop    ebp
  40f976:	fadd   DWORD PTR [edx+0x4b]
  40f979:	xor    eax,0xc04645d3
  40f97e:	jp     0x40f964
  40f980:	ja     0x40f911
  40f982:	jns    0x40f97c
  40f984:	mov    ah,0x32
  40f986:	mov    DWORD PTR [ecx],0x532dbb34
  40f98c:	pop    ecx
  40f98d:	or     al,0xef
  40f98f:	data16 (bad) 
  40f991:	fisttp DWORD PTR [edi]
  40f993:	add    ah,BYTE PTR [ecx+edi*1-0x51]
  40f997:	nop
  40f998:	das    
  40f999:	inc    ebp
  40f99a:	cmp    BYTE PTR [eax-0x6b3287a4],dl
  40f9a0:	or     bl,BYTE PTR [ecx+0x6aba9169]
  40f9a6:	pop    ss
  40f9a7:	xor    eax,0xa8e732b7
  40f9ac:	mov    WORD PTR [ecx-0x27],ds
  40f9af:	aaa    
  40f9b0:	pop    esi
  40f9b1:	out    0x9d,eax
  40f9b3:	inc    ebx
  40f9b4:	adc    DWORD PTR [ebx-0x3478b321],0xffffffbe
  40f9bb:	bound  esi,QWORD PTR [esi+0x6dd4eef0]
  40f9c1:	dec    ebx
  40f9c2:	push   0x41fb375c
  40f9c7:	mov    ah,0xd3
  40f9c9:	inc    edi
  40f9ca:	div    BYTE PTR [ecx]
  40f9cc:	mov    ch,0x76
  40f9ce:	sahf   
  40f9cf:	and    eax,0x5778d3f7
  40f9d4:	div    DWORD PTR [edi]
  40f9d6:	aaa    
  40f9d7:	or     bh,BYTE PTR [ebx+0x12e582b1]
  40f9dd:	cld    
  40f9de:	cwde   
  40f9df:	sbb    DWORD PTR [edx-0x345dbb2c],esi
  40f9e5:	fwait
  40f9e6:	loop   0x40f985
  40f9e8:	push   cs
  40f9e9:	and    al,0xbb
  40f9eb:	push   ebx
  40f9ec:	pop    ss
  40f9ed:	dec    edx
  40f9ee:	test   al,0xb2
  40f9f0:	and    bh,dl
  40f9f2:	stos   BYTE PTR es:[edi],al
  40f9f3:	or     al,0x24
  40f9f5:	js     0x40f9d9
  40f9f7:	xchg   esi,eax
  40f9f8:	jl     0x40f9d3
  40f9fa:	mov    ecx,0x21514f4a
  40f9ff:	stos   BYTE PTR es:[edi],al
  40fa00:	dec    edx
  40fa01:	xor    eax,DWORD PTR [eax+0x2a6a4ef4]
  40fa07:	ins    BYTE PTR es:[edi],dx
  40fa08:	push   esp
  40fa09:	push   0xab48f62
  40fa0e:	sub    al,bl
  40fa10:	mov    cl,0x1e
  40fa12:	inc    esi
  40fa13:	cdq    
  40fa14:	mov    esp,DWORD PTR [ecx-0x1e9634dc]
  40fa1a:	test   al,0xc2
  40fa1c:	mov    BYTE PTR [edx+0x0],ch
  40fa1f:	inc    ebp
  40fa20:	sbb    eax,0x4f47d059
  40fa25:	popf   
  40fa26:	sahf   
  40fa27:	arpl   WORD PTR [edx-0x943315e],sp
  40fa2d:	dec    DWORD PTR [edi]
  40fa2f:	add    dl,BYTE PTR [ecx+ebp*1+0x2b]
  40fa33:	jmp    0x2afd:0x2365bfae
  40fa3a:	cwde   
  40fa3b:	scas   eax,DWORD PTR es:[edi]
  40fa3c:	xchg   DWORD PTR [esi-0x7f191c51],edx
  40fa42:	fstp   TBYTE PTR [esi]
  40fa44:	dec    eax
  40fa45:	adc    bl,ch
  40fa47:	jb     0x40fa27
  40fa49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa4a:	jne    0x40fa07
  40fa4c:	xor    dh,BYTE PTR [eax+0x1eccff7f]
  40fa52:	out    dx,eax
  40fa53:	test   DWORD PTR [edi+esi*4+0x6cc4ee7c],0xc516635f
  40fa5e:	inc    eax
  40fa5f:	xor    eax,0x2833efe3
  40fa64:	cmp    bh,BYTE PTR [eiz*8+0x2f5dae3e]
  40fa6b:	and    eax,0xd2b31af3
  40fa70:	(bad)  
  40fa71:	icebp  
  40fa72:	test   al,0xe2
  40fa74:	add    DWORD PTR [ebx+eiz*1],esi
  40fa77:	lahf   
  40fa78:	dec    ebx
  40fa79:	jmp    0x40fa4a
  40fa7b:	mov    esi,0x1e103d51
  40fa80:	lods   al,BYTE PTR ds:[esi]
  40fa81:	jns    0x40fa9c
  40fa83:	ins    DWORD PTR es:[di],dx
  40fa85:	xchg   esp,eax
  40fa86:	(bad)  
  40fa87:	pop    ss
  40fa88:	push   ecx
  40fa89:	push   0x29868088
  40fa8e:	adc    edx,DWORD PTR [esi-0x1d]
  40fa91:	(bad)  [esi-0x51]
  40fa94:	mov    dl,0xc4
  40fa96:	popf   
  40fa97:	cs push 0x79
  40fa9a:	add    edx,DWORD PTR [eax-0x1e]
  40fa9d:	mov    edi,esi
  40fa9f:	jo     0x40fab3
  40faa1:	cli    
  40faa2:	shl    DWORD PTR [esi-0x3e8dba1d],cl
  40faa8:	daa    
  40faa9:	outs   dx,BYTE PTR ds:[esi]
  40faaa:	outs   dx,DWORD PTR ds:[esi]
  40faab:	xchg   esp,eax
  40faac:	nop
  40faad:	fs cmc 
  40faaf:	inc    edx
  40fab0:	rcr    dh,1
  40fab2:	xor    eax,0x8f3fd104
  40fab7:	ret    
  40fab8:	repnz mov ah,0x44
  40fabb:	std    
  40fabc:	loop   0x40fb22
  40fabe:	stos   BYTE PTR es:[edi],al
  40fabf:	aad    0x87
  40fac1:	in     al,dx
  40fac2:	imul   esp,ecx,0xc35a9453
  40fac8:	dec    edx
  40fac9:	mov    ah,0x84
  40facb:	lahf   
  40facc:	mov    al,ds:0x5a710024
  40fad1:	mov    eax,0xbbeb0e08
  40fad6:	xchg   BYTE PTR [esi],bl
  40fad8:	mov    dl,BYTE PTR [eax+0x61a28dd2]
  40fade:	sbb    al,0x9e
  40fae0:	sbb    al,0x3e
  40fae2:	cmp    esi,0xfcd3170d
  40fae8:	sahf   
  40fae9:	mov    esi,0x97719ac
  40faee:	mov    DWORD PTR [ebx+ebx*2-0x535bea82],esp
  40faf5:	or     eax,0x13af3e6f
  40fafa:	pop    eax
  40fafb:	repnz adc ah,0xc8
  40faff:	icebp  
  40fb00:	inc    edx
  40fb01:	into   
  40fb02:	test   DWORD PTR ds:0x988aae4d,0x12d959e2
  40fb0c:	inc    eax
  40fb0d:	aas    
  40fb0e:	add    ebx,DWORD PTR [edx-0x463c9f6d]
  40fb14:	test   eax,0x8eaebd1e
  40fb19:	inc    ebx
  40fb1a:	ret    0x3c8
  40fb1d:	stc    
  40fb1e:	sub    ch,BYTE PTR ds:0xb550c919
  40fb24:	enter  0x67c1,0xc0
  40fb28:	sbb    al,0x34
  40fb2a:	cmc    
  40fb2b:	(bad)  
  40fb2c:	test   al,0xc0
  40fb2e:	jmp    0xfd16391c
  40fb33:	mov    eax,ds:0x547d7abb
  40fb38:	cmp    DWORD PTR [edi+eiz*8-0x2b5fe0a0],0xffffffbd
  40fb40:	mov    al,0x52
  40fb42:	and    BYTE PTR [ecx],0x30
  40fb45:	cmp    BYTE PTR [eax+0x78],0x5d
  40fb49:	push   0x35
  40fb4b:	vrsqrtss xmm5,xmm1,xmm7
  40fb4f:	dec    edx
  40fb50:	fadd   DWORD PTR [eax+0x5c64268b]
  40fb56:	push   eax
  40fb57:	xor    DWORD PTR [ebp-0x7995d5d4],ecx
  40fb5d:	out    dx,al
  40fb5e:	xchg   edx,esi
  40fb60:	loopne 0x40fb6b
  40fb62:	(bad)  [ebx-0x18]
  40fb65:	or     eax,0x170bbb73
  40fb6a:	daa    
  40fb6b:	cdq    
  40fb6c:	out    0x1f,al
  40fb6e:	cmp    ebx,DWORD PTR [edi]
  40fb70:	mov    dl,0xb4
  40fb72:	ficom  DWORD PTR [edx]
  40fb74:	or     edi,eax
  40fb76:	mov    ebp,0x592d25f8
  40fb7b:	stos   DWORD PTR es:[edi],eax
  40fb7c:	add    cl,dh
  40fb7e:	inc    esi
  40fb7f:	mov    ch,bl
  40fb81:	fs cmp eax,0x2c87200a
  40fb87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb88:	pop    edi
  40fb89:	test   DWORD PTR [ebx],esp
  40fb8b:	in     al,0xc2
  40fb8d:	inc    ebx
  40fb8e:	sbb    DWORD PTR [ebx],ebp
  40fb90:	xchg   edi,eax
  40fb91:	inc    edx
  40fb92:	cmp    DWORD PTR [esi-0x2f],eax
  40fb95:	push   edx
  40fb96:	sub    BYTE PTR [edx],bl
  40fb98:	push   edi
  40fb99:	cmp    DWORD PTR ds:0x6afb988,edx
  40fb9f:	loop   0x40fb4a
  40fba1:	repz sti 
  40fba3:	push   esi
  40fba4:	mov    dx,0x3ac2
  40fba8:	jg     0x40fbe8
  40fbaa:	mov    edx,0xe8df9707
  40fbaf:	xor    ebp,DWORD PTR [ebp+ecx*8+0x4e]
  40fbb3:	mov    ds:0x891bb1c7,eax
  40fbb8:	ja     0x40fbc7
  40fbba:	sub    al,0x7f
  40fbbc:	inc    esp
  40fbbd:	loopne 0x40fb49
  40fbbf:	popa   
  40fbc0:	sub    al,0x82
  40fbc2:	ret    
  40fbc3:	aad    0x4b
  40fbc5:	push   cs
  40fbc6:	add    BYTE PTR [ecx],0xa3
  40fbc9:	push   0xffffffff
  40fbcb:	push   edx
  40fbcc:	imul   ecx,DWORD PTR [edx-0x7c2e9cdb],0x4a
  40fbd3:	or     ecx,DWORD PTR [esi+0xc]
  40fbd6:	mov    ecx,0xbafeaf2c
  40fbdb:	pop    edi
  40fbdc:	xor    eax,0x2bd055c0
  40fbe1:	(bad)  
  40fbe2:	mov    edi,0xda8e7335
  40fbe7:	sub    eax,0x8cae9f15
  40fbec:	imul   edi,DWORD PTR [ebp-0xc],0xffffffb7
  40fbf0:	inc    eax
  40fbf1:	fcmovnb st,st(1)
  40fbf3:	xor    dl,BYTE PTR [esi]
  40fbf5:	add    ebx,ebp
  40fbf7:	shr    BYTE PTR [ecx],1
  40fbf9:	test   DWORD PTR [ebx],eax
  40fbfb:	mov    edi,0x6167cb16
  40fc00:	xlat   BYTE PTR ds:[ebx]
  40fc01:	or     BYTE PTR [esi+0x31],al
  40fc04:	rol    DWORD PTR [ecx+0x66],1
  40fc07:	inc    ebx
  40fc08:	shl    DWORD PTR [edi+0x4b],1
  40fc0b:	in     eax,0x13
  40fc0d:	xor    esi,DWORD PTR [edi+ebx*1]
  40fc10:	mov    eax,0x28815de4
  40fc15:	fld    TBYTE PTR [edx-0x5d]
  40fc18:	aaa    
  40fc19:	dec    eax
  40fc1a:	test   al,0xb1
  40fc1c:	mov    dh,dl
  40fc1e:	mov    dh,0x42
  40fc20:	sbb    al,0x68
  40fc22:	or     BYTE PTR [edx+0x22de8775],0x58
  40fc29:	xor    ch,ah
  40fc2b:	inc    ebx
  40fc2c:	repnz imul esi,DWORD PTR ds:0x3b63baef,0x7f
  40fc34:	jbe    0x40fc24
  40fc36:	mov    ah,0x6c
  40fc38:	jmp    ebx
  40fc3a:	rcr    BYTE PTR [eax-0x1a8a6f4c],1
  40fc40:	pop    edx
  40fc41:	jmp    0x15e928fc
  40fc46:	sub    esi,ebp
  40fc48:	es adc al,0x65
  40fc4b:	loop   0x40fbd1
  40fc4d:	jmp    edi
  40fc4f:	dec    eax
  40fc50:	addr16 aas 
  40fc52:	imul   edi,DWORD PTR [edi],0xffffffa7
  40fc55:	jo     0x40fc8a
  40fc57:	pushf  
  40fc58:	and    al,0xf6
  40fc5a:	cmp    DWORD PTR [eax],esi
  40fc5c:	jmp    0xe1b52104
  40fc61:	lods   eax,DWORD PTR ds:[esi]
  40fc62:	sbb    eax,DWORD PTR [eax+0x601f10a1]
  40fc68:	pusha  
  40fc69:	addr16 (bad) 
  40fc6b:	pushf  
  40fc6c:	ins    BYTE PTR es:[edi],dx
  40fc6d:	jae    0x40fc61
  40fc6f:	rcr    BYTE PTR [eax],1
  40fc71:	mov    bh,0x3
  40fc73:	jne    0x40fcc6
  40fc75:	jg     0x40fc79
  40fc77:	(bad)
  40fc7b:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40fc7d:	sbb    al,0x28
  40fc7f:	mov    ds:0x2efdedd5,eax
  40fc84:	adc    BYTE PTR [esi+eiz*4-0x69544e6f],0x16
  40fc8c:	push   ss
  40fc8d:	cld    
  40fc8e:	adc    DWORD PTR [eax+0x63],esp
  40fc91:	mov    WORD PTR [esi-0x7c],ds
  40fc94:	mov    bl,0xd
  40fc96:	sbb    eax,0xcd8903fc
  40fc9b:	jl     0x40fc62
  40fc9d:	dec    eax
  40fc9e:	aam    0xa
  40fca0:	inc    ebp
  40fca2:	mov    eax,ds:0x511ebca0
  40fca7:	jbe    0x40fc63
  40fca9:	sub    DWORD PTR [ebx-0x2f],ecx
  40fcac:	daa    
  40fcad:	jns    0x40fcb3
  40fcaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcb0:	es jbe 0x40fc71
  40fcb3:	pop    ds
  40fcb4:	jg     0x40fcc1
  40fcb6:	mov    edx,0x927c5dc9
  40fcbb:	int    0x5b
  40fcbd:	sub    esp,DWORD PTR [edx+0x4f14f3c9]
  40fcc3:	xchg   edi,eax
  40fcc4:	shl    BYTE PTR [edi-0x31],0x67
  40fcc8:	pop    eax
  40fcc9:	mov    ds:0x730c0f92,al
  40fcce:	mov    dl,0x41
  40fcd0:	rcl    DWORD PTR [esi+0x70],0x17
  40fcd4:	and    DWORD PTR [edx+0x22],esp
  40fcd7:	out    dx,eax
  40fcd8:	sub    DWORD PTR [ebp-0xaae1a05],esp
  40fcde:	cmc    
  40fcdf:	sbb    BYTE PTR [esp+edx*8],bl
  40fce2:	cmp    dl,ah
  40fce4:	sbb    ch,bl
  40fce6:	lock es retf 
  40fce9:	cmp    al,0x22
  40fceb:	cli    
  40fcec:	popa   
  40fced:	popa   
  40fcee:	xchg   edx,eax
  40fcef:	sub    BYTE PTR [ebp+0x4590667c],ch
  40fcf5:	fisttp DWORD PTR [ecx+edx*4]
  40fcf8:	in     eax,dx
  40fcf9:	out    0x83,al
  40fcfb:	cs jmp 0xd15ea7f
  40fd01:	sub    eax,0xc3ee7d59
  40fd06:	rol    DWORD PTR [eax-0x28],cl
  40fd09:	(bad)  [edx-0x1dc0228b]
  40fd0f:	sub    BYTE PTR [ebp+0x5a4db4e8],dl
  40fd15:	and    eax,0xeb8f0b91
  40fd1a:	(bad)  
  40fd1b:	push   ebx
  40fd1c:	scas   al,BYTE PTR es:[edi]
  40fd1d:	(bad)  
  40fd1e:	aad    0xb
  40fd20:	addr16 pushf 
  40fd22:	xchg   edi,eax
  40fd23:	xchg   esi,eax
  40fd24:	and    eax,0x58fbce55
  40fd29:	sub    DWORD PTR [edx-0x78],ebp
  40fd2c:	daa    
  40fd2d:	dec    ebx
  40fd2e:	push   edx
  40fd2f:	and    eax,0x8c906318
  40fd34:	pop    ds
  40fd35:	sar    DWORD PTR [esi+eax*4+0x1bf4f0b8],0xa
  40fd3d:	xor    DWORD PTR [ebx+esi*4],edx
  40fd40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd41:	mov    ch,0x71
  40fd43:	inc    edi
  40fd44:	inc    eax
  40fd45:	ret    0x20e6
  40fd48:	ja     0x40fda5
  40fd4a:	fcmovu st,st(3)
  40fd4c:	shl    BYTE PTR [eax+0x49d4107c],cl
  40fd52:	adc    ebx,esi
  40fd54:	fnstcw WORD PTR [edi+0x9a00b9c]
  40fd5a:	fisubr DWORD PTR [edx]
  40fd5c:	pop    es
  40fd5d:	fld    DWORD PTR [edx]
  40fd5f:	xchg   eax,ebp
  40fd61:	stos   DWORD PTR es:[edi],eax
  40fd62:	xor    edi,edi
  40fd64:	mov    esi,0x23ee4665
  40fd69:	mov    DWORD PTR [ebx],0xdbb1d672
  40fd6f:	xor    ebp,edx
  40fd71:	xor    BYTE PTR [edi],bl
  40fd73:	ror    BYTE PTR [ebx+ecx*8-0x6ab442b3],0xdd
  40fd7b:	loopne 0x40fcfd
  40fd7d:	pop    es
  40fd7e:	leave  
  40fd7f:	jmp    0x7f50e24c
  40fd84:	pushf  
  40fd85:	clc    
  40fd86:	dec    eax
  40fd87:	in     al,dx
  40fd88:	ror    DWORD PTR [ebx],cl
  40fd8a:	stos   DWORD PTR es:[edi],eax
  40fd8b:	mov    WORD PTR [esi+eiz*1+0x12],gs
  40fd8f:	lods   al,BYTE PTR ds:[esi]
  40fd90:	mov    ebx,0x7a499460
  40fd95:	pop    esi
  40fd96:	inc    ebp
  40fd97:	xchg   BYTE PTR [edi],dl
  40fd99:	adc    BYTE PTR [ebx],bh
  40fd9b:	scas   al,BYTE PTR es:[edi]
  40fd9c:	mov    dh,BYTE PTR [edx+0x28e44e05]
  40fda2:	lock adc ch,cl
  40fda5:	and    al,0xf4
  40fda7:	adc    al,0xb
  40fda9:	cmp    ch,BYTE PTR [edx]
  40fdab:	icebp  
  40fdac:	sub    eax,DWORD PTR [edx]
  40fdae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdaf:	dec    esp
  40fdb0:	inc    ebx
  40fdb1:	xchg   edi,eax
  40fdb2:	cmp    al,0xc9
  40fdb4:	sbb    bh,BYTE PTR ds:0xad46e135
  40fdba:	pop    ss
  40fdbb:	test   al,0x7d
  40fdbd:	mov    WORD PTR [ecx],?
  40fdbf:	inc    ebp
  40fdc0:	repnz push ebx
  40fdc2:	push   ss
  40fdc3:	maxps  xmm2,XMMWORD PTR [edi-0x10]
  40fdc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdc8:	outs   dx,BYTE PTR ds:[esi]
  40fdc9:	xchg   DWORD PTR [esi],ebx
  40fdcb:	and    al,BYTE PTR [ecx+0x6d]
  40fdce:	icebp  
  40fdcf:	(bad)  
  40fdd0:	rcr    bl,cl
  40fdd2:	cmp    eax,0x633e092a
  40fdd7:	repz mov ecx,0xd4364f13
  40fddd:	arpl   sp,sp
  40fddf:	sar    dl,0x38
  40fde2:	addr16 repz ret 
  40fde5:	xor    eax,edx
  40fde7:	cs xor al,0xb0
  40fdea:	or     eax,0xa71ff33b
  40fdef:	mov    ch,0x9b
  40fdf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdf2:	ja     0x40fe22
  40fdf4:	sub    esi,edi
  40fdf6:	daa    
  40fdf7:	jp     0x40fd93
  40fdf9:	jne    0x40fdf3
  40fdfb:	sub    eax,0xfe0c2319
  40fe00:	xor    eax,DWORD PTR [edx]
  40fe02:	data16 out dx,al
  40fe04:	sbb    ch,BYTE PTR [eax]
  40fe06:	out    0x5c,al
  40fe08:	sbb    bl,bl
  40fe0a:	mov    eax,0x1e09b89f
  40fe0f:	stos   DWORD PTR es:[edi],eax
  40fe10:	xchg   esp,eax
  40fe11:	jmp    0x7be1:0x1e01e8b5
  40fe18:	das    
  40fe19:	ret    
  40fe1a:	jns    0x40fdd3
  40fe1c:	push   0xe95d45f7
  40fe21:	cdq    
  40fe22:	mov    eax,ds:0x708a8dd8
  40fe27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe28:	push   cs
  40fe29:	jno    0x40fe1a
  40fe2b:	xchg   BYTE PTR [eax-0x6394de04],dl
  40fe31:	stc    
  40fe32:	or     ch,bl
  40fe34:	mov    ah,0x1e
  40fe36:	stos   BYTE PTR es:[edi],al
  40fe37:	lds    esi,FWORD PTR [esi+0x4]
  40fe3a:	push   ds
  40fe3b:	rcl    BYTE PTR es:[ecx],cl
  40fe3e:	call   0x47bd:0x58353c2f
  40fe45:	xchg   esi,eax
  40fe46:	gs test al,0x2c
  40fe49:	add    DWORD PTR [ecx+0x5803b103],0xf8ec4e16
  40fe53:	mov    ecx,0x371b6566
  40fe58:	mov    ebp,0x3ce58fda
  40fe5d:	sbb    al,dl
  40fe5f:	scas   eax,DWORD PTR es:[edi]
  40fe60:	pop    eax
  40fe61:	stos   BYTE PTR es:[edi],al
  40fe62:	sub    BYTE PTR [ebx+0x4c36f5de],0x57
  40fe69:	or     DWORD PTR [eax+0x66c6d3bc],esp
  40fe6f:	scas   al,BYTE PTR es:[edi]
  40fe70:	jbe    0x40feda
  40fe72:	mov    bh,0x7
  40fe74:	arpl   WORD PTR [ebx],dx
  40fe76:	std    
  40fe77:	jno    0x40fe7a
  40fe79:	pop    ebx
  40fe7a:	call   0x445e552a
  40fe7f:	pop    ss
  40fe80:	sub    DWORD PTR [edi-0x10],edi
  40fe83:	bound  edi,QWORD PTR [eax+0x1b27c9e4]
  40fe89:	dec    esi
  40fe8a:	(bad)  
  40fe8c:	retf   0x6e6c
  40fe8f:	inc    esi
  40fe90:	sub    BYTE PTR [edx+ecx*1-0x3],al
  40fe94:	div    DWORD PTR [eax+0xd]
  40fe97:	ja     0x40fe57
  40fe99:	cdq    
  40fe9a:	sub    eax,edx
  40fe9c:	pop    eax
  40fe9d:	pop    ds
  40fe9e:	and    ebp,ebx
  40fea0:	cmp    ch,BYTE PTR es:[edi+edx*4-0x1f]
  40fea5:	xchg   ebx,eax
  40fea6:	stc    
  40fea7:	hlt    
  40fea8:	loopne 0x40fe4f
  40feaa:	pop    edx
  40feab:	repz and al,0x3f
  40feae:	jecxz  0x40ff29
  40feb0:	mov    ah,0xfe
  40feb2:	push   edi
  40feb3:	imul   esp,DWORD PTR [ebp-0x40],0x39
  40feb7:	imul   ecx,DWORD PTR [edx+ebp*1+0x4b4db3c1],0xffffff84
  40febf:	enter  0x9cce,0x44
  40fec3:	pop    ebx
  40fec4:	jmp    0x40fe6a
  40fec6:	push   es
  40fec7:	jbe    0x40fed3
  40fec9:	xchg   ebp,eax
  40feca:	mov    esp,0x97ec12e2
  40fecf:	dec    ebp
  40fed0:	cmp    ebx,DWORD PTR [eax+ecx*1+0x5c20f985]
  40fed7:	xor    BYTE PTR [edi-0x4f],dl
  40feda:	push   esp
  40fedb:	push   ecx
  40fedc:	xor    DWORD PTR [ebx],ecx
  40fede:	sti    
  40fedf:	loopne 0x40ff00
  40fee1:	fisubr WORD PTR [eax-0x5]
  40fee4:	and    cl,al
  40fee6:	int3   
  40fee7:	xchg   ebp,eax
  40fee8:	cld    
  40fee9:	dec    ebx
  40feea:	icebp  
  40feeb:	xor    cl,BYTE PTR [edi-0x36d1f853]
  40fef1:	mov    bl,BYTE PTR [ecx+0x30]
  40fef4:	fisttp WORD PTR [esi+0x2c]
  40fef7:	cmp    eax,0x7edf860c
  40fefc:	sbb    eax,0x7e
  40feff:	icebp  
  40ff00:	or     DWORD PTR [edx],0xfffffff8
  40ff03:	popa   
  40ff04:	cmc    
  40ff05:	lea    eax,[eax+ebp*8]
  40ff08:	sbb    cl,BYTE PTR [esi+ebx*8]
  40ff0b:	or     DWORD PTR [ebp-0x4f],eax
  40ff0e:	ret    0xf5f5
  40ff11:	(bad)  
  40ff12:	hlt    
  40ff13:	mov    ds:0xc1b606cf,al
  40ff18:	xchg   edx,edi
  40ff1a:	cmp    DWORD PTR [ecx-0x14ac579c],ebp
  40ff20:	(bad)  
  40ff21:	clc    
  40ff22:	in     eax,dx
  40ff23:	stos   BYTE PTR es:[edi],al
  40ff24:	xor    BYTE PTR [esi-0x2d],al
  40ff27:	mov    edx,0x9ee32ede
  40ff2c:	push   cs
  40ff2d:	loopne 0x40ff5e
  40ff2f:	inc    esp
  40ff30:	fs or  eax,0x396cb9d1
  40ff36:	jmp    0x13b:0xb0bdf093
  40ff3d:	(bad)  
  40ff3e:	mov    ds:0x90f35938,eax
  40ff43:	rol    BYTE PTR [edi],cl
  40ff45:	dec    esp
  40ff46:	icebp  
  40ff47:	sub    eax,0xa7b8e951
  40ff4c:	adc    DWORD PTR [ebp+0x28],esp
  40ff4f:	mov    ecx,0x49fa3238
  40ff54:	or     BYTE PTR [ecx+ebp*4],ch
  40ff57:	jns    0x40ff5f
  40ff59:	push   0xd68706c4
  40ff5e:	mov    BYTE PTR [edi+0x5d],ch
  40ff61:	adc    ebp,DWORD PTR [edi+0x214f8f8c]
  40ff67:	sub    al,0x6b
  40ff69:	into   
  40ff6a:	out    dx,al
  40ff6b:	sub    eax,0x629938b1
  40ff70:	popa   
  40ff71:	(bad)  
  40ff72:	aaa    
  40ff73:	sub    eax,0x6aab0492
  40ff78:	inc    esp
  40ff79:	push   esp
  40ff7a:	jecxz  0x40ffb7
  40ff7c:	xchg   esp,eax
  40ff7d:	rol    DWORD PTR [ecx+0x8],0x31
  40ff81:	(bad)  
  40ff82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff83:	jo     0x40ff5b
  40ff85:	xor    al,0xd9
  40ff87:	push   cs
  40ff88:	inc    ebp
  40ff89:	add    BYTE PTR [ebp-0x748ea643],al
  40ff8f:	push   0x13
  40ff91:	or     esp,DWORD PTR [ecx]
  40ff93:	mov    WORD PTR [ebx],?
  40ff95:	and    eax,0x292a5b19
  40ff9a:	loopne 0x40ffd9
  40ff9c:	mov    ecx,0xfdaf2dd0
  40ffa1:	dec    eax
  40ffa2:	pop    ds
  40ffa3:	aaa    
  40ffa4:	sahf   
  40ffa5:	outs   dx,DWORD PTR ds:[esi]
  40ffa6:	shl    BYTE PTR [eax+0x9],cl
  40ffa9:	add    eax,edi
  40ffab:	icebp  
  40ffac:	test   DWORD PTR [edx],esp
  40ffae:	sub    DWORD PTR [ebx-0x3f],edx
  40ffb1:	xor    ebx,esp
  40ffb3:	fild   WORD PTR [ecx]
  40ffb5:	imul   ebp,DWORD PTR [edi-0x41],0xe1422231
  40ffbc:	test   eax,0xde44175c
  40ffc1:	mov    ds:0xeca3c8f7,al
  40ffc6:	ret    
  40ffc7:	(bad)  
  40ffc8:	cdq    
  40ffc9:	pop    ds
  40ffca:	add    al,0x5b
  40ffcc:	mov    ebp,0x6bfa1ab5
  40ffd1:	xchg   BYTE PTR [edx],cl
  40ffd3:	mov    esi,0x6b38ef14
  40ffd8:	in     al,0x51
  40ffda:	cmp    BYTE PTR [ebp-0x36],bh
  40ffdd:	xchg   DWORD PTR [edi+0x1],edi
  40ffe0:	shl    BYTE PTR [edi],1
  40ffe2:	mov    al,ds:0xb8f40360
  40ffe7:	push   ebp
  40ffe8:	ins    DWORD PTR es:[edi],dx
  40ffe9:	(bad)  
  40ffea:	das    
  40ffeb:	sub    DWORD PTR [esp+esi*2+0x25998ca],ebp
  40fff2:	mov    ds:0xedec1a2b,al
  40fff7:	enter  0xb36,0xe0
  40fffb:	ins    DWORD PTR es:[edi],dx
  40fffc:	ins    BYTE PTR es:[edi],dx
  40fffd:	pop    es
  40fffe:	dec    edx
  40ffff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410000:	pop    ebp
  410001:	pop    edx
  410002:	cwde   
  410003:	sbb    eax,0x3f437bfc
  410008:	and    eax,ebx
  41000a:	loop   0x40ffde
  41000c:	imul   edx,DWORD PTR ds:0x175d93b8,0xd68eabd2
  410016:	lods   eax,DWORD PTR ds:[esi]
  410017:	add    esi,eax
  410019:	and    edi,DWORD PTR [eax]
  41001b:	jmp    0x93f4:0xf40f5406
  410022:	xor    ah,bh
  410024:	js     0x410028
  410026:	das    
  410027:	jg     0x41005a
  410029:	sbb    al,BYTE PTR [eax+0x18bd10b4]
  41002f:	push   0xffffff8a
  410031:	js     0x40ffe7
  410033:	hlt    
  410034:	shl    BYTE PTR [eax+0x46d9425f],1
  41003a:	pop    ecx
  41003b:	xor    ecx,DWORD PTR [esi]
  41003d:	or     eax,0x19e89a29
  410042:	mov    ds:0x8a14c326,eax
  410047:	dec    edx
  410048:	mov    eax,ds:0x9ff11e71
  41004d:	mov    ecx,0x6ea7a1cb
  410052:	push   es
  410053:	loopne 0x40fff6
  410055:	fild   QWORD PTR [ebx]
  410057:	aaa    
  410058:	push   ss
  410059:	mov    ds,WORD PTR [edi+0x5c]
  41005c:	add    BYTE PTR ds:0xae3ac558,ch
  410062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410063:	cmp    DWORD PTR [ecx-0xfc8a64f],ebp
  410069:	int3   
  41006a:	ins    BYTE PTR es:[edi],dx
  41006b:	fnstsw WORD PTR [edi-0x52df3]
  410071:	scas   al,BYTE PTR es:[edi]
  410072:	jl     0x410087
  410074:	inc    ebp
  410075:	push   ds
  410076:	xor    DWORD PTR [ebx+0x4c09f5d2],ebx
  41007c:	sbb    esp,0x4ffb7c46
  410082:	mov    esi,DWORD PTR [edi-0x13]
  410085:	stc    
  410086:	pop    eax
  410087:	dec    edx
  410088:	add    ebp,DWORD PTR [eax]
  41008a:	cmp    al,BYTE PTR [ebp+edx*8+0x44]
  41008e:	push   ecx
  41008f:	pop    edi
  410090:	or     edi,ebp
  410092:	fidiv  WORD PTR [edi]
  410094:	push   ecx
  410095:	fstp   TBYTE PTR [ecx]
  410097:	aas    
  410098:	clc    
  410099:	jnp    0x410106
  41009b:	neg    BYTE PTR [ecx-0x2ee4d4c0]
  4100a1:	cmp    eax,0x18821961
  4100a6:	out    0xf6,eax
  4100a8:	jae    0x41007f
  4100aa:	xor    eax,0x9fb33a08
  4100af:	adc    eax,0x44ac143a
  4100b4:	repz jbe 0x41012a
  4100b7:	ret    0xbdbb
  4100ba:	mov    al,0x43
  4100bc:	jmp    0x41004a
  4100be:	mov    ds:0xff41a6fd,eax
  4100c3:	dec    ecx
  4100c4:	push   0x5c2a5982
  4100c9:	aas    
  4100ca:	pop    ss
  4100cb:	sbb    BYTE PTR [edi],0xc9
  4100ce:	xlat   BYTE PTR ds:[ebx]
  4100cf:	xor    eax,0xc661fc71
  4100d4:	nop
  4100d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100d6:	leave  
  4100d7:	sub    dl,ch
  4100d9:	mov    ds:0x73729463,eax
  4100de:	sub    edx,DWORD PTR [edx+0x34]
  4100e1:	mov    ds:0x7f0311d0,al
  4100e6:	add    BYTE PTR [esi+0x23],ch
  4100e9:	and    eax,DWORD PTR [ebp+0x0]
  4100ec:	dec    ebp
  4100ed:	scas   eax,DWORD PTR es:[edi]
  4100ee:	pusha  
  4100ef:	addr16 mov dl,0xcf
  4100f2:	adc    al,BYTE PTR [eax+0x24]
  4100f5:	sbb    ch,BYTE PTR [esi+0x7b6e60ef]
  4100fb:	jp     0x410109
  4100fd:	add    DWORD PTR [ebx+0x2e0b37d3],eax
  410103:	idiv   BYTE PTR [ebp+0x78]
  410106:	sbb    DWORD PTR [eax+edx*2-0x7f3d8c8d],eax
  41010d:	xchg   BYTE PTR [edx-0x1afdddd4],cl
  410113:	data16 jg 0x4100ef
  410116:	sub    eax,0x5b6013d4
  41011b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41011c:	mov    cl,0xb4
  41011e:	mov    edx,0x88a2a2f8
  410123:	call   0x5d440a3
  410128:	sub    eax,0x86a41002
  41012d:	jg     0x4100cd
  41012f:	out    dx,al
  410130:	cmovb  eax,DWORD PTR [esi-0x45c0cf5b]
  410137:	fadd   QWORD PTR [eax]
  410139:	jl     0x410115
  41013b:	dec    esi
  41013c:	test   esp,0x953ec366
  410142:	call   FWORD PTR [ebx+0x21]
  410145:	test   eax,0xbbf9533e
  41014a:	dec    ebx
  41014b:	int3   
  41014c:	cmp    ebp,ecx
  41014e:	pop    eax
  41014f:	add    ecx,DWORD PTR [ebx]
  410151:	xor    eax,0xce7c85c8
  410156:	xor    BYTE PTR [edi],dl
  410158:	and    al,BYTE PTR [ecx]
  41015a:	xlat   BYTE PTR fs:[bx]
  41015d:	mov    ds,WORD PTR [eax]
  41015f:	in     eax,dx
  410160:	pushf  
  410161:	mov    cl,0xa5
  410163:	and    ebx,DWORD PTR [eax]
  410165:	(bad)  
  410166:	dec    edx
  410167:	or     eax,0xd1f235d3
  41016c:	sub    ah,al
  41016e:	xor    al,0xcc
  410170:	inc    esi
  410171:	mov    ds:0xb5b2a669,al
  410176:	xchg   DWORD PTR [edi-0x23],eax
  410179:	in     eax,dx
  41017a:	adc    eax,0xc55b978b
  41017f:	(bad)  
  410180:	dec    ebx
  410181:	mov    al,0x53
  410183:	sar    BYTE PTR [ebx+0x69b08582],0xa4
  41018a:	and    ebp,DWORD PTR [edx+0x28]
  41018d:	or     dl,bl
  41018f:	sub    al,0x4c
  410191:	std    
  410192:	xchg   ebp,eax
  410193:	jnp    0x4101e7
  410195:	retf   0x9b6d
  410198:	sbb    BYTE PTR [ecx+edi*4],bl
  41019b:	mov    ebp,0x90869c5c
  4101a0:	pop    es
  4101a1:	cmp    al,0xdf
  4101a3:	int    0x64
  4101a5:	ja     0x4101a5
  4101a7:	mov    WORD PTR [eax-0x51],ss
  4101aa:	mov    eax,0x74ee464c
  4101af:	stc    
  4101b0:	jle    0x410182
  4101b2:	inc    ecx
  4101b3:	push   esp
  4101b4:	jno    0x410225
  4101b6:	fsubr  st(0),st
  4101b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101b9:	xchg   ebp,eax
  4101ba:	push   ebx
  4101bb:	aas    
  4101bc:	(bad)  
  4101bd:	rol    bl,cl
  4101bf:	fxch   st(0)
  4101c1:	jnp    0x410219
  4101c3:	pop    edx
  4101c4:	es mov eax,edi
  4101c7:	inc    esp
  4101c8:	sub    DWORD PTR [ebp+0x1b],esp
  4101cb:	addr16 repnz inc esp
  4101ce:	mov    dh,0x59
  4101d0:	sub    edi,DWORD PTR [ecx-0x1e]
  4101d3:	lahf   
  4101d4:	push   esi
  4101d5:	not    DWORD PTR [eax]
  4101d7:	out    0xf1,eax
  4101d9:	push   edi
  4101da:	jecxz  0x410162
  4101dc:	mov    ds:0x6ab468de,eax
  4101e1:	fisttp WORD PTR [ecx]
  4101e3:	or     al,0x3f
  4101e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101e6:	clc    
  4101e7:	int3   
  4101e8:	pusha  
  4101e9:	add    edi,ecx
  4101eb:	loopne 0x4101b1
  4101ed:	add    DWORD PTR [esi],eax
  4101ef:	cld    
  4101f0:	pop    ss
  4101f1:	adc    eax,0x30e29513
  4101f6:	and    BYTE PTR [edi+0x5c81c3ad],al
  4101fc:	lea    ecx,[edi-0x5826e2e7]
  410202:	sahf   
  410203:	sub    dh,bl
  410205:	scas   al,BYTE PTR es:[edi]
  410206:	in     eax,0xc
  410208:	icebp  
  410209:	sahf   
  41020a:	mov    ecx,0xc2987c01
  41020f:	inc    ebp
  410210:	aam    0xe5
  410212:	lods   eax,DWORD PTR ds:[esi]
  410213:	(bad)  
  410214:	sub    BYTE PTR [ebx+ebx*4-0x3cb83e15],al
  41021b:	in     eax,dx
  41021c:	inc    ebx
  41021d:	xor    esi,DWORD PTR [esi-0x37cd84ca]
  410223:	fadd   DWORD PTR [ecx+0x5a688083]
  410229:	cld    
  41022a:	and    bh,BYTE PTR [esi]
  41022c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41022d:	or     eax,0x43025eae
  410232:	mov    edx,0x2a7bb6cb
  410237:	dec    esp
  410238:	jne    0x41020c
  41023a:	jecxz  0x410274
  41023c:	aaa    
  41023d:	jb     0x41023f
  41023f:	sbb    dl,bl
  410241:	push   ebp
  410242:	sub    eax,0x2853836e
  410247:	mov    edx,0x8741b082
  41024c:	fnstcw WORD PTR [edi+edi*1]
  41024f:	jg     0x41027f
  410251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410252:	jmp    0xb1d487e3
  410257:	popa   
  410258:	jne    0x4102c4
  41025a:	pop    esi
  41025b:	test   BYTE PTR [ecx],ah
  41025d:	and    eax,0x9100a313
  410262:	xor    al,0x9c
  410264:	add    bh,BYTE PTR [eax+0x79]
  410267:	mov    edx,0x45e182e8
  41026c:	xor    eax,DWORD PTR [ecx]
  41026e:	stos   DWORD PTR es:[edi],eax
  41026f:	in     al,0xd8
  410271:	and    al,0xa1
  410273:	out    dx,eax
  410274:	jbe    0x410200
  410276:	iret   
  410277:	fisub  WORD PTR [ecx+0x124bbb4f]
  41027d:	xor    al,0x0
  41027f:	adc    dl,BYTE PTR ds:0x2ed20d83
  410285:	add    bh,dh
  410287:	or     al,0x86
  410289:	xor    al,0x1f
  41028b:	or     ebx,DWORD PTR [esi+0x65f06c17]
  410291:	fmul   st,st(1)
  410293:	xor    ebx,DWORD PTR [ebx]
  410295:	cmp    al,0xef
  410297:	add    eax,0x5bc4a691
  41029c:	shr    ebp,1
  41029e:	shl    DWORD PTR [ebp-0x5b],cl
  4102a1:	dec    esp
  4102a2:	jp     0x4102f6
  4102a4:	sbb    BYTE PTR ds:0x3a311239,dl
  4102aa:	pop    gs
  4102ac:	and    DWORD PTR [esi-0x7],edi
  4102af:	pop    es
  4102b0:	xchg   DWORD PTR ds:0x48ffacb8,eax
  4102b6:	jg     0x4102a4
  4102b8:	xor    ebx,DWORD PTR ds:0xce132e8
  4102be:	cmp    cl,BYTE PTR ds:0x5bddca2d
  4102c4:	call   0xb6e2:0x14b792f2
  4102cb:	and    BYTE PTR [edx+edi*8],bh
  4102ce:	pop    esp
  4102cf:	mov    es,WORD PTR [ebx-0x5f]
  4102d2:	pop    es
  4102d3:	jmp    0x21e4bf04
  4102d8:	ds adc bh,al
  4102db:	inc    edi
  4102dc:	pop    ebx
  4102dd:	push   ebx
  4102de:	pop    esi
  4102df:	and    eax,0x842db90e
  4102e4:	mov    WORD PTR [edi],ds
  4102e6:	cmp    ebx,esp
  4102e8:	mov    al,0xaf
  4102ea:	test   al,0x7c
  4102ec:	or     dl,bl
  4102ee:	loop   0x4102a4
  4102f0:	mov    dh,0xc6
  4102f2:	ror    DWORD PTR [ecx+0x5f],1
  4102f5:	and    DWORD PTR [ebx],ebp
  4102f7:	dec    esp
  4102f8:	sbb    ebp,DWORD PTR [ecx+ebp*2-0x5a4eea66]
  4102ff:	dec    esi
  410300:	push   0x71
  410302:	fdivr  DWORD PTR [ecx-0x18]
  410305:	cdq    
  410306:	inc    esp
  410307:	push   0xe79573dc
  41030c:	scas   eax,DWORD PTR es:[edi]
  41030d:	mov    DWORD PTR [eax-0x21],ebp
  410310:	pushf  
  410311:	stos   BYTE PTR es:[edi],al
  410312:	js     0x41029a
  410314:	add    ah,BYTE PTR [edx+0x79704f62]
  41031a:	pop    edi
  41031b:	inc    ebp
  41031c:	lods   eax,DWORD PTR ds:[esi]
  41031d:	jg     0x41032a
  41031f:	mov    ds:0xfae80255,eax
  410324:	call   0x444d:0x55cbfc29
  41032b:	data16 outs dx,BYTE PTR ds:[esi]
  41032d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41032e:	in     al,0x24
  410330:	or     DWORD PTR [ebx+0x70],0xffffffc3
  410334:	and    al,0xac
  410337:	nop
  410338:	xlat   BYTE PTR ds:[ebx]
  410339:	xor    al,ch
  41033b:	pop    esp
  41033c:	imul   esi,DWORD PTR [ebp-0x7f],0x4667ec22
  410343:	xchg   ecx,eax
  410344:	es and al,0xe0
  410347:	inc    edx
  410348:	ins    BYTE PTR es:[edi],dx
  410349:	and    BYTE PTR fs:[edx+ebx*1+0xe],al
  41034e:	sti    
  41034f:	pop    ds
  410350:	imul   esp,eax,0x25
  410353:	push   ebp
  410354:	repz pop es
  410356:	add    edi,DWORD PTR [ecx-0x125c43de]
  41035c:	(bad)  
  41035d:	sub    eax,esi
  41035f:	pusha  
  410360:	ins    BYTE PTR es:[edi],dx
  410361:	sub    eax,0x5bfdd47d
  410366:	sahf   
  410367:	xchg   BYTE PTR [ebp-0x33],al
  41036a:	mov    esi,0x7a5ee6a4
  41036f:	cli    
  410370:	and    al,0x99
  410372:	scas   eax,DWORD PTR es:[edi]
  410373:	fadd   QWORD PTR [ecx]
  410375:	dec    edi
  410376:	repnz mov bh,0xbf
  410379:	call   0x90ad53cb
  41037e:	add    esp,DWORD PTR [eax-0x4b]
  410381:	jae    0x4103ea
  410383:	test   eax,0x4eb39af0
  410388:	jns    0x410364
  41038a:	lahf   
  41038b:	rol    dl,cl
  41038d:	loop   0x410356
  41038f:	dec    ebp
  410390:	aas    
  410391:	ret    
  410392:	js     0x410380
  410394:	mov    eax,0xeb673bee
  410399:	ins    BYTE PTR es:[edi],dx
  41039a:	icebp  
  41039b:	out    0x28,eax
  41039d:	push   edx
  41039e:	clc    
  41039f:	xchg   ebp,eax
  4103a0:	mov    al,0x58
  4103a2:	scas   eax,DWORD PTR es:[edi]
  4103a3:	(bad)  
  4103a4:	rcl    BYTE PTR [ecx+eiz*4-0x7c],cl
  4103a8:	outs   dx,BYTE PTR ds:[esi]
  4103a9:	mov    ecx,0xe297f76f
  4103ae:	mov    ah,0x9f
  4103b0:	loopne 0x410387
  4103b2:	loopne 0x4103c1
  4103b4:	test   eax,0xf4eabf31
  4103b9:	gs mov esi,0x32c95c2f
  4103bf:	or     BYTE PTR [ebp-0x46],bh
  4103c2:	jecxz  0x410405
  4103c4:	fcom   DWORD PTR ds:0xcbca501c
  4103ca:	jmp    0x41039d
  4103cc:	inc    esp
  4103cd:	cvttps2pi mm2,QWORD PTR [edi+edx*1]
  4103d1:	jns    0x410432
  4103d3:	pop    esp
  4103d4:	xchg   esp,eax
  4103d5:	jno    0x410423
  4103d7:	jno    0x410413
  4103d9:	xor    DWORD PTR [ecx-0x56],edx
  4103dc:	jp     0x410380
  4103de:	mov    edx,0x67400bb
  4103e3:	inc    ecx
  4103e4:	imul   ebx,DWORD PTR [ebx-0x30de039b],0xc791ba3e
  4103ee:	scas   al,BYTE PTR es:[edi]
  4103ef:	(bad)  
  4103f0:	icebp  
  4103f1:	gs test eax,0xc774ad06
  4103f7:	mov    ebx,0xc7d1fdaf
  4103fc:	mov    WORD PTR [edx-0x71],gs
  4103ff:	ficomp DWORD PTR [esi]
  410401:	mov    ch,0xb8
  410403:	rcr    ah,1
  410405:	mov    ebx,0x9ff88f1f
  41040a:	pop    esi
  41040b:	xchg   ebp,eax
  41040c:	daa    
  41040d:	rcr    BYTE PTR [edi+0x27],cl
  410410:	arpl   dx,ax
  410412:	sbb    al,0x40
  410414:	fs into 
  410416:	ins    DWORD PTR es:[edi],dx
  410417:	sub    eax,0x2fe7902a
  41041c:	rcl    DWORD PTR [edx],0x1d
  41041f:	mov    BYTE PTR [edi],0x7d
  410422:	or     eax,0x78af3cfc
  410427:	addr16 add eax,0xa6ec97c4
  41042d:	fsub   QWORD PTR [esp+edx*1+0x60]
  410431:	int3   
  410432:	(bad)  
  410433:	aam    0x77
  410435:	leave  
  410436:	mov    esp,0xbcf33133
  41043b:	scas   eax,DWORD PTR es:[edi]
  41043c:	fcmovbe st,st(3)
  41043e:	inc    edi
  41043f:	pusha  
  410440:	ficomp DWORD PTR [eax+ebx*8]
  410443:	std    
  410444:	fild   QWORD PTR [ebp+0x52]
  410447:	pop    ebx
  410448:	xor    al,0xed
  41044a:	es mov dl,0xcd
  41044d:	add    DWORD PTR [esi+ebx*8-0x6268f016],ebx
  410454:	in     eax,dx
  410455:	hlt    
  410456:	sahf   
  410457:	(bad)  
  410458:	mov    es,WORD PTR [edx+0x54]
  41045b:	bound  esi,QWORD PTR ds:0x8d5855c7
  410461:	test   al,0x5f
  410463:	xor    DWORD PTR [esi+0x39442ee0],ebp
  410469:	outs   dx,DWORD PTR ds:[esi]
  41046a:	in     eax,0x74
  41046c:	ins    DWORD PTR es:[edi],dx
  41046d:	mov    bl,0xcd
  41046f:	icebp  
  410470:	jae    0x41046a
  410472:	pusha  
  410473:	add    eax,0xd2c3c234
  410478:	ficom  WORD PTR [ebx+0x13]
  41047b:	leave  
  41047c:	mov    bh,BYTE PTR [ecx+0x4a]
  41047f:	retf   
  410480:	xor    BYTE PTR [eax+0x52],al
  410483:	pop    ecx
  410484:	sub    bl,cl
  410486:	out    dx,eax
  410487:	xchg   DWORD PTR [edx],esp
  410489:	cmc    
  41048a:	bound  ecx,QWORD PTR fs:[edx]
  41048d:	dec    edx
  41048e:	sbb    ebp,DWORD PTR [ebp+0x52]
  410491:	adc    DWORD PTR ds:0x65301bf0,ecx
  410497:	push   ebx
  410498:	daa    
  410499:	jg     0x410465
  41049b:	mov    ebx,0x40409aa8
  4104a0:	and    al,0xbb
  4104a2:	imul   eax,DWORD PTR [esp+ebx*4-0x7fd2e621],0xffffffd3
  4104aa:	(bad)  
  4104ab:	ja     0x41049c
  4104ad:	fnstcw WORD PTR [esi]
  4104af:	gs ja  0x41052c
  4104b2:	sbb    al,0xbb
  4104b4:	inc    ebx
  4104b5:	jne    0x41044d
  4104b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104b8:	sti    
  4104b9:	jne    0x410492
  4104bb:	sub    eax,0x873bfec8
  4104c0:	sbb    esi,ebx
  4104c2:	out    dx,al
  4104c3:	xor    esp,ecx
  4104c5:	mov    ds:0x3b3f0b54,eax
  4104ca:	add    al,0x43
  4104cc:	push   ss
  4104cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104ce:	and    DWORD PTR [edi],eax
  4104d0:	lock pop ds
  4104d2:	mov    DWORD PTR [edi-0xe335907],ecx
  4104d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104d9:	pop    ebp
  4104da:	jle    0x4104b5
  4104dc:	inc    ecx
  4104dd:	cmp    ebp,DWORD PTR [ecx]
  4104df:	jg     0x4104f2
  4104e1:	sub    BYTE PTR [esi],cl
  4104e3:	shr    BYTE PTR [eax-0x1024c2ed],0xa7
  4104ea:	dec    eax
  4104eb:	mov    ecx,0xaa6e73ff
  4104f0:	inc    eax
  4104f1:	dec    esi
  4104f2:	fdivr  st,st(1)
  4104f4:	xor    BYTE PTR [esi],ah
  4104f6:	pushf  
  4104f7:	(bad)  
  4104f9:	iret   
  4104fa:	inc    esi
  4104fb:	mov    ebp,0x17794f80
  410500:	shl    BYTE PTR [eax-0x39],cl
  410503:	out    dx,eax
  410504:	push   es
  410505:	xlat   BYTE PTR ds:[ebx]
  410506:	out    0x8c,eax
  410508:	lock jnp 0x41052d
  41050b:	jge    0x4104c6
  41050d:	mov    ebp,0x874c6727
  410512:	cwde   
  410513:	(bad)  
  410514:	adc    BYTE PTR [eax],bh
  410516:	push   eax
  410517:	jbe    0x410565
  410519:	hlt    
  41051a:	mov    ebx,0x1b401ceb
  41051f:	stos   DWORD PTR es:[edi],eax
  410520:	mov    ch,0xac
  410522:	cdq    
  410523:	aam    0xe5
  410525:	rcr    BYTE PTR [eax],cl
  410527:	pusha  
  410528:	aas    
  410529:	xchg   ebp,eax
  41052a:	repz rcl bl,1
  41052d:	jbe    0x4104c9
  41052f:	or     BYTE PTR [eax+edi*4-0x6d],0x73
  410534:	icebp  
  410535:	add    DWORD PTR [ebp+0x17],0x20
  410539:	dec    eax
  41053a:	daa    
  41053b:	xchg   edx,eax
  41053c:	inc    ebp
  41053d:	(bad)  
  41053e:	mov    ebp,0xb686fc29
  410543:	push   edx
  410544:	cdq    
  410545:	pop    esi
  410546:	gs std 
  410548:	fcomp  DWORD PTR [edi+0x498cf47e]
  41054e:	xchg   ecx,eax
  41054f:	in     eax,0x35
  410551:	mov    bl,0x8b
  410553:	ret    
  410554:	xchg   edx,eax
  410555:	out    0x47,al
  410557:	test   DWORD PTR [edi+0x42ae7f2],0xb277f30a
  410561:	dec    edi
  410562:	aas    
  410563:	push   di
  410565:	mov    bl,0xa7
  410567:	cmp    BYTE PTR [esi-0x78],al
  41056a:	mov    ebx,0x9b5bd47f
  41056f:	cmp    al,0x53
  410571:	pop    edi
  410572:	mov    ebp,0x72bb688b
  410577:	retf   
  410578:	or     BYTE PTR [edi-0x5b1c8f68],ah
  41057e:	dec    esi
  41057f:	mov    DWORD PTR [esi-0x3e],esp
  410582:	mul    BYTE PTR [ebx+ebp*8+0x40c0f024]
  410589:	fdiv   st,st(6)
  41058b:	sbb    al,0x16
  41058d:	repz mov ds:0x4c72ceeb,eax
  410593:	gs or  eax,0xcf181d2
  410599:	sub    eax,0x7d48d248
  41059e:	ins    BYTE PTR es:[edi],dx
  41059f:	idiv   ch
  4105a1:	in     al,dx
  4105a2:	cwde   
  4105a3:	push   edx
  4105a4:	fcmovbe st,st(7)
  4105a6:	push   esp
  4105a7:	xchg   ebx,eax
  4105a8:	mov    esi,0xe7652d8c
  4105ad:	mov    al,0xd4
  4105af:	or     BYTE PTR [ecx-0x631b8648],ah
  4105b5:	or     edi,DWORD PTR [ebp+0x189165b1]
  4105bb:	mov    edi,0xce12fdb7
  4105c0:	out    dx,eax
  4105c1:	sub    BYTE PTR fs:[bx-0x761c],0x1e
  4105c8:	xchg   esi,eax
  4105c9:	pop    edx
  4105ca:	push   ebx
  4105cb:	cmp    BYTE PTR [edx-0x5f5fb8a4],dh
  4105d1:	inc    ebp
  4105d2:	neg    edx
  4105d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105d6:	aam    0x5e
  4105d8:	cmp    BYTE PTR [edi+0x76],bl
  4105db:	jp     0x41061b
  4105dd:	mov    dl,0xca
  4105df:	add    al,0xbe
  4105e1:	loope  0x4105a6
  4105e3:	scas   al,BYTE PTR es:[edi]
  4105e4:	imul   edx,DWORD PTR [edx-0x7e],0xec665d43
  4105eb:	sub    al,0xe6
  4105ed:	ds pop es
  4105ef:	jo     0x41065b
  4105f1:	sti    
  4105f2:	jle    0x4105db
  4105f4:	jg     0x4105ea
  4105f6:	add    al,0x15
  4105f8:	sbb    BYTE PTR [ecx],ah
  4105fa:	dec    eax
  4105fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105fc:	loope  0x41066d
  4105fe:	sbb    bh,cl
  410600:	cmc    
  410601:	pop    eax
  410602:	in     al,0xaf
  410604:	dec    ebx
  410605:	pop    ds
  410606:	rcr    BYTE PTR [esi+ebp*8-0x4a1dbabd],cl
  41060d:	pop    eax
  41060e:	push   eax
  41060f:	nop
  410610:	mov    ds,ebp
  410612:	dec    esp
  410613:	hlt    
  410614:	xor    ah,BYTE PTR [ebx+0x4f]
  410617:	popa   
  410618:	xor    ch,BYTE PTR [ebx+0x5e577cf3]
  41061e:	add    al,0x80
  410620:	test   al,0x53
  410622:	cmp    bh,BYTE PTR [eax-0x6d4d28b7]
  410628:	ss hlt 
  41062a:	repz in al,dx
  41062c:	push   ss
  41062d:	mov    ecx,0x457dfbac
  410632:	push   edx
  410633:	in     al,dx
  410634:	cmp    edi,DWORD PTR [esi+0x13fda78a]
  41063a:	(bad)  
  41063b:	push   ecx
  41063c:	cmp    DWORD PTR [eax],eax
  41063e:	xchg   ebx,eax
  41063f:	mov    ebp,0xe5ddb0b
  410644:	lea    eax,ds:0xfb4b2a28
  41064a:	retf   0xb47b
  41064d:	inc    ebx
  41064e:	shl    DWORD PTR ss:[ecx+0x22d65a76],0x27
  410656:	cmp    BYTE PTR [ebp+0x7c],al
  410659:	or     ebx,ebx
  41065b:	stos   DWORD PTR es:[di],eax
  41065d:	pop    esi
  41065e:	push   0x9c9a3784
  410663:	jmp    0x410636
  410665:	pop    edx
  410666:	sub    eax,0xedd6f8b2
  41066b:	lahf   
  41066c:	test   ecx,eax
  41066e:	pop    eax
  41066f:	dec    esi
  410670:	daa    
  410671:	push   ds
  410672:	sar    DWORD PTR [edi],0x18
  410675:	cmp    DWORD PTR [edi+0x6f],esi
  410678:	and    eax,0xd52f0ac6
  41067d:	pop    ecx
  41067e:	mov    edi,fs
  410680:	add    DWORD PTR [ecx-0x21],ebp
  410683:	imul   esi,edi,0x394aa2dc
  410689:	cwde   
  41068a:	xchg   edi,eax
  41068b:	loopne 0x410679
  41068d:	out    0x2c,al
  41068f:	ret    
  410690:	call   0x93d1:0xc2970bba
  410697:	jge    0x410711
  410699:	hlt    
  41069a:	in     al,0x33
  41069c:	add    ecx,ecx
  41069e:	pop    edx
  41069f:	ret    
  4106a0:	cmp    al,0xf6
  4106a2:	and    eax,0xf1f2d3ed
  4106a7:	xchg   DWORD PTR [ebx+0x6e],ebp
  4106aa:	mov    ds:0x17f1aa25,al
  4106af:	aam    0x3
  4106b1:	mov    ah,dh
  4106b3:	scas   eax,DWORD PTR es:[edi]
  4106b4:	fimul  WORD PTR [edi+ebx*4]
  4106b7:	bound  ebx,QWORD PTR [edx-0x12a7ca2b]
  4106bd:	and    DWORD PTR [ebx],edi
  4106bf:	xchg   edi,eax
  4106c0:	xchg   edx,eax
  4106c1:	fadd   QWORD PTR [eax-0x30c6eb2a]
  4106c7:	sub    BYTE PTR [edi+0x1d],dh
  4106ca:	stc    
  4106cb:	mov    WORD PTR [edi],ds
  4106cd:	inc    edi
  4106ce:	ins    BYTE PTR es:[edi],dx
  4106cf:	and    ch,bh
  4106d1:	jns    0x410743
  4106d3:	jmp    0x4106e4
  4106d5:	fdiv   st(6),st
  4106d7:	dec    esi
  4106d8:	shl    bh,cl
  4106da:	dec    ebx
  4106db:	test   al,0xb1
  4106dd:	je     0x4106cb
  4106df:	sub    BYTE PTR [edi+0x61bd75d2],dl
  4106e5:	mov    ecx,DWORD PTR [esi+eiz*1]
  4106e8:	pushf  
  4106e9:	loopne 0x41071f
  4106eb:	rol    DWORD PTR [ecx-0x35],cl
  4106ee:	dec    edx
  4106ef:	sbb    eax,0x8a2a3458
  4106f4:	iret   
  4106f5:	imul   ecx,DWORD PTR [eax],0xffffff90
  4106f8:	dec    DWORD PTR [esi-0x2aafb13f]
  4106fe:	jg     0x41068e
  410700:	xchg   ebx,eax
  410701:	div    DWORD PTR [eax-0xf]
  410704:	pop    eax
  410705:	or     DWORD PTR ds:0xafd62aaf,edi
  41070b:	dec    esi
  41070c:	pop    edi
  41070d:	les    esi,FWORD PTR [eax+0x562aeafb]
  410713:	lods   eax,DWORD PTR ds:[esi]
  410714:	mov    dl,0x73
  410716:	shl    BYTE PTR [ecx-0x774718ab],cl
  41071c:	loope  0x410731
  41071e:	sbb    esp,esp
  410720:	outs   dx,BYTE PTR ds:[esi]
  410721:	dec    edx
  410722:	jae    0x4106fa
  410724:	inc    ebx
  410725:	daa    
  410726:	scas   al,BYTE PTR es:[edi]
  410727:	xchg   ebx,eax
  410728:	and    eax,0x79faa4ef
  41072d:	jbe    0x410779
  41072f:	js     0x41070a
  410731:	mov    esp,0x2f622297
  410736:	inc    eax
  410737:	in     eax,dx
  410738:	push   0x6042140b
  41073d:	xchg   ecx,eax
  41073e:	rcr    BYTE PTR [esi+0x36066c8e],cl
  410744:	ja     0x410710
  410746:	fwait
  410747:	add    ah,BYTE PTR [esi-0x66abfc9f]
  41074d:	push   ebx
  41074e:	sar    DWORD PTR [edx],1
  410750:	dec    edx
  410751:	or     esi,DWORD PTR [edi-0x52c01e7d]
  410757:	shl    BYTE PTR [eax-0x1c],cl
  41075a:	cmp    ah,cl
  41075c:	push   esp
  41075d:	push   edx
  41075e:	mov    ebx,0xa840d610
  410763:	leave  
  410764:	or     ebx,ecx
  410766:	test   eax,ebx
  410768:	adc    BYTE PTR [ebx],bl
  41076a:	add    DWORD PTR [ebx+0x3],ecx
  41076d:	push   edx
  41076e:	(bad)  
  41076f:	xor    esi,DWORD PTR [edx-0x64]
  410772:	jnp    0x410773
  410774:	sub    BYTE PTR [edi],dh
  410776:	sbb    BYTE PTR [ebx],0x1
  410779:	sar    BYTE PTR [edi],0xf
  41077c:	mov    ecx,0x3637bfdc
  410781:	retf   0x3463
  410784:	les    ecx,FWORD PTR [edx-0xe]
  410787:	addr16 or eax,0x7e9d54ec
  41078d:	xor    eax,0xbb2756c9
  410792:	sbb    al,0x51
  410794:	adc    al,BYTE PTR [ebp+ebp*2-0x5f]
  410798:	push   ss
  410799:	ins    DWORD PTR es:[edi],dx
  41079a:	test   al,0x1b
  41079c:	test   eax,0xd2d2e23a
  4107a1:	pop    ecx
  4107a2:	test   DWORD PTR [edx+0x6e],esp
  4107a5:	lods   eax,DWORD PTR ds:[esi]
  4107a6:	cmp    eax,0x44dadeff
  4107ab:	(bad)  
  4107ac:	mov    esp,0x67edfac0
  4107b1:	jg     0x410820
  4107b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107b4:	(bad)  
  4107b5:	popf   
  4107b6:	and    eax,0x5caf509c
  4107bb:	pop    ecx
  4107bc:	jne    0x410755
  4107be:	jp     0x41078b
  4107c0:	add    DWORD PTR [edx],0xfffffff0
  4107c3:	jbe    0x4107da
  4107c5:	pop    esi
  4107c6:	ret    
  4107c7:	mov    bl,0xbd
  4107c9:	out    dx,eax
  4107ca:	pop    esi
  4107cb:	addr16 jo 0x410775
  4107ce:	aad    0x4f
  4107d0:	or     al,0xd3
  4107d2:	push   edi
  4107d3:	sub    al,0xcf
  4107d5:	fwait
  4107d6:	sub    ebp,DWORD PTR [edi+0x7de3447e]
  4107dc:	je     0x410810
  4107de:	mov    ds:0x9f95faf6,eax
  4107e3:	je     0x41084a
  4107e5:	and    BYTE PTR [ebx-0x6b4a7f3a],dl
  4107eb:	outs   dx,BYTE PTR ds:[esi]
  4107ec:	outs   dx,DWORD PTR ds:[esi]
  4107ed:	cmp    al,0xcc
  4107ef:	mov    bh,0x84
  4107f1:	clc    
  4107f2:	mov    ch,dl
  4107f4:	jle    0x4107d5
  4107f6:	out    0x2f,al
  4107f8:	mov    DWORD PTR [eax-0x56],0xb4e4d1e2
  4107ff:	fld    DWORD PTR [eax+0x5c5383e6]
  410805:	push   ds
  410806:	jno    0x410856
  410808:	add    dl,0xc2
  41080b:	fwait
  41080c:	std    
  41080d:	xor    dl,cl
  41080f:	pusha  
  410810:	ficom  WORD PTR [ecx+0x647d7df2]
  410816:	sbb    ah,BYTE PTR [esi+edx*2-0x13a497e]
  41081d:	outs   dx,DWORD PTR ds:[esi]
  41081e:	in     eax,dx
  41081f:	cwde   
  410820:	mov    eax,0x6eb8a34d
  410825:	xor    BYTE PTR [ebx-0x65201149],ah
  41082b:	inc    edi
  41082c:	cdq    
  41082d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41082e:	repnz outs dx,DWORD PTR ds:[esi]
  410830:	mov    dh,0x9f
  410832:	inc    ebx
  410833:	mov    al,BYTE PTR [ebx-0x4c3b4f62]
  410839:	daa    
  41083a:	jge    0x4108b0
  41083c:	mov    ah,ch
  41083e:	xchg   BYTE PTR es:[ebp+ecx*4-0x52f35d3c],cl
  410846:	ins    DWORD PTR es:[edi],dx
  410847:	jae    0x4107ee
  410849:	or     al,0xc0
  41084b:	(bad)  
  41084c:	sbb    DWORD PTR [esp+ecx*4-0x44],ebp
  410850:	(bad)  
  410851:	frstpm(287 only) 
  410853:	sub    al,0xa1
  410855:	mov    edi,0xacd543dd
  41085a:	cld    
  41085b:	cmp    bl,dh
  41085d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41085e:	push   ebx
  41085f:	or     al,0xf9
  410861:	gs mov dl,0x9a
  410864:	mov    dl,0xc4
  410866:	leave  
  410867:	mov    ds:0xcfe5f8e,eax
  41086c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41086d:	and    BYTE PTR [ebx],ch
  41086f:	xor    eax,0xb411b0bf
  410874:	out    0x18,al
  410876:	daa    
  410877:	add    eax,0xc588319b
  41087c:	rcr    BYTE PTR [ecx+0x50],0xe2
  410880:	jns    0x4108b3
  410882:	fcmovu st,st(0)
  410884:	cmc    
  410885:	repnz sbb DWORD PTR [ebp-0x27],0x15bb330a
  41088d:	and    DWORD PTR [esi+0x73],ecx
  410890:	jne    0x4108c1
  410892:	addr16 sti 
  410894:	inc    esi
  410895:	sub    BYTE PTR [edx],ah
  410897:	pop    ecx
  410898:	xor    esi,DWORD PTR [esi-0x6fc09546]
  41089e:	fwait
  41089f:	dec    eax
  4108a0:	test   DWORD PTR [edx+0x298428d9],ecx
  4108a6:	and    BYTE PTR [ecx+0x6bfaf0b2],0x6a
  4108ad:	sahf   
  4108ae:	jne    0x410837
  4108b0:	ds pop edx
  4108b2:	xlat   BYTE PTR ds:[ebx]
  4108b3:	cli    
  4108b4:	xor    eax,0x8d4e864f
  4108b9:	aam    0x12
  4108bb:	es clc 
  4108bd:	and    al,0x68
  4108bf:	jae    0x410928
  4108c1:	xchg   edx,eax
  4108c2:	imul   BYTE PTR [esi+0x51]
  4108c5:	std    
  4108c6:	mov    ah,0x8f
  4108c8:	(bad)  
  4108c9:	ror    BYTE PTR [ebx+edx*2],0x1f
  4108cd:	xor    bl,dl
  4108cf:	fs pop edi
  4108d1:	xor    DWORD PTR [edx-0x46],0xdc782b57
  4108d8:	mov    edx,0xaf0574de
  4108dd:	adc    al,0x36
  4108df:	in     al,0x13
  4108e1:	push   0xffffff80
  4108e3:	fnstenv [esi]
  4108e5:	dec    ebp
  4108e6:	cmp    edi,ebp
  4108e8:	sbb    BYTE PTR [ecx+0x41],al
  4108eb:	imul   esp,DWORD PTR [eax-0x18],0x80f00691
  4108f2:	or     al,0x35
  4108f4:	outs   dx,BYTE PTR ds:[esi]
  4108f5:	inc    eax
  4108f6:	mov    DWORD PTR [edi+0x657749e3],esi
  4108fc:	add    eax,0x92ed479b
  410901:	xor    esp,esp
  410903:	and    bh,BYTE PTR [ecx]
  410905:	lods   eax,DWORD PTR ds:[esi]
  410906:	(bad)  
  410907:	push   esi
  410908:	pop    ebx
  410909:	jno    0x4108aa
  41090b:	and    DWORD PTR [ecx],ecx
  41090d:	fiadd  DWORD PTR ds:0x162df310
  410913:	mov    cl,0x4b
  410915:	push   cs
  410916:	sub    eax,0x71286e5f
  41091b:	pop    ds
  41091c:	aaa    
  41091d:	mov    al,BYTE PTR [ecx-0xb]
  410920:	sub    al,0xe8
  410922:	jp     0x410934
  410924:	or     al,0xbf
  410926:	inc    ecx
  410927:	(bad)  
  410929:	xor    al,dl
  41092b:	sbb    edi,edx
  41092d:	jbe    0x4108cc
  41092f:	mov    eax,0x1acfaba0
  410934:	mov    DWORD PTR [ebx+ebp*1+0x4c],ecx
  410938:	xor    ah,BYTE PTR [ebp+0x3e431dea]
  41093e:	adc    al,BYTE PTR [ebp+0x137bed79]
  410944:	cmp    edx,DWORD PTR [ecx-0x4d75e0b9]
  41094a:	mov    bl,0x7b
  41094c:	jge    0x410928
  41094e:	mov    BYTE PTR [ecx-0x79],ah
  410951:	test   eax,0x75fb68c7
  410956:	xchg   edx,eax
  410957:	add    BYTE PTR [edx],al
  410959:	idiv   ecx
  41095b:	leave  
  41095c:	jno    0x4108ef
  41095e:	dec    esi
  41095f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410960:	stc    
  410961:	fisttp DWORD PTR [edx-0x5e2aee8]
  410967:	jbe    0x410960
  410969:	jae    0x4108ee
  41096b:	and    DWORD PTR [ebp+0x71288a58],esp
  410971:	cwde   
  410972:	pop    es
  410973:	mov    eax,0x3612148c
  410978:	js     0x41094a
  41097a:	pop    esi
  41097b:	jmp    0xba19:0x9427a447
  410982:	scas   al,BYTE PTR es:[edi]
  410983:	js     0x410936
  410985:	std    
  410986:	pop    eax
  410987:	fcomp  DWORD PTR [edi-0x46d98082]
  41098d:	loopne 0x4109c1
  41098f:	sahf   
  410990:	mov    ch,0x9b
  410992:	(bad)  
  410993:	pop    edx
  410994:	std    
  410995:	ja     0x410942
  410997:	(bad)  
  410998:	pop    esp
  410999:	lahf   
  41099a:	add    eax,0x36bc0cf3
  41099f:	lahf   
  4109a0:	xor    ecx,DWORD PTR [edi-0x7f]
  4109a3:	pusha  
  4109a4:	fimul  DWORD PTR [ecx-0xa08d209]
  4109aa:	jge    0x410948
  4109ac:	mov    dl,0x5f
  4109ae:	mov    edi,0x84bdbc29
  4109b3:	add    ecx,DWORD PTR [eax-0x5484315c]
  4109b9:	mov    al,0x30
  4109bb:	mov    bh,0x7
  4109bd:	std    
  4109be:	dec    esi
  4109bf:	mov    cl,0x75
  4109c1:	mov    gs,WORD PTR ds:0x99053b2e
  4109c7:	lods   eax,DWORD PTR ds:[esi]
  4109c8:	data16 xlat BYTE PTR ds:[ebx]
  4109ca:	sub    esp,edx
  4109cc:	cmp    ebx,DWORD PTR [esp+ebp*8+0x7a]
  4109d0:	fnstsw WORD PTR [ebx-0x20]
  4109d3:	out    dx,eax
  4109d4:	sahf   
  4109d5:	rcr    edx,0x79
  4109d8:	or     dl,BYTE PTR [ebx]
  4109da:	push   0x3c
  4109dc:	(bad)  
  4109dd:	add    eax,0xdb2a2172
  4109e2:	int    0x1d
  4109e4:	pop    ss
  4109e5:	mov    ds,WORD PTR [ebx+0x5111a249]
  4109eb:	(bad)  
  4109ec:	or     al,0xbb
  4109ee:	cmp    DWORD PTR [esi+eax*8+0x5e73504e],edx
  4109f5:	mov    DWORD PTR [ebx-0x32],esp
  4109f8:	push   edx
  4109f9:	and    esi,DWORD PTR [ebp-0xc]
  4109fc:	mov    bl,dh
  4109fe:	ss cwde 
  410a00:	inc    esi
  410a01:	xchg   ebp,eax
  410a02:	iret   
  410a03:	in     eax,dx
  410a04:	shl    DWORD PTR [edx+0x6c],cl
  410a07:	imul   edi,ebp,0x29933803
  410a0d:	cdq    
  410a0e:	test   DWORD PTR [edi+0x5a],ebx
  410a11:	lds    ebp,FWORD PTR [edx-0x27]
  410a14:	iret   
  410a15:	pop    esp
  410a16:	jb     0x4109b2
  410a18:	mov    ds,WORD PTR [edi+0xdb3f441]
  410a1e:	neg    dl
  410a20:	xlat   BYTE PTR ds:[ebx]
  410a21:	clc    
  410a22:	xor    edi,DWORD PTR [eax]
  410a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a25:	sahf   
  410a26:	xor    ah,BYTE PTR [esi+0x26]
  410a29:	pop    edx
  410a2a:	xchg   edx,eax
  410a2b:	fadd   DWORD PTR [eax-0x58]
  410a2e:	fisttp WORD PTR [eax+0x7]
  410a31:	aad    0x75
  410a33:	jge    0x4109b7
  410a35:	jne    0x60a9983a
  410a3b:	mov    ds:0xed1d22db,al
  410a40:	mov    al,ds:0xdd0bf4d2
  410a45:	sub    ch,0xd
  410a48:	mov    cl,0xfc
  410a4a:	mov    ?,WORD PTR [ebx-0x75]
  410a4d:	mov    bh,0xb4
  410a4f:	sub    dh,ah
  410a51:	ss mov esi,0x5d0070d0
  410a57:	pop    esi
  410a58:	into   
  410a59:	stc    
  410a5a:	outs   dx,BYTE PTR ds:[esi]
  410a5b:	mov    ebx,0x978afc25
  410a60:	test   eax,0xe839a1b3
  410a65:	cmp    al,0xea
  410a67:	xor    DWORD PTR [ebx+0x3e0c7678],esi
  410a6d:	leave  
  410a6e:	mov    ch,0xf9
  410a70:	mov    al,0xab
  410a72:	cmp    DWORD PTR [ebx+eax*4-0x39869bdc],edx
  410a79:	mov    ebp,DWORD PTR [edi]
  410a7b:	sbb    al,0x7e
  410a7d:	cld    
  410a7e:	mov    esi,0x722f1518
  410a83:	fs pop es
  410a85:	fs addr16 into 
  410a88:	mov    esp,0x9aa9136
  410a8d:	mov    bl,0x81
  410a8f:	xchg   edi,eax
  410a90:	popa   
  410a91:	add    al,0xcf
  410a93:	push   ebp
  410a94:	and    al,cl
  410a96:	pushf  
  410a97:	retf   
  410a98:	xchg   ecx,eax
  410a99:	aam    0xf6
  410a9b:	and    BYTE PTR [edi+0x63],bh
  410a9e:	dec    eax
  410a9f:	sub    eax,0x4cdbf6e3
  410aa4:	out    0xc,al
  410aa6:	pop    DWORD PTR [eax+edx*1+0x65c192d6]
  410aad:	jp     0x410a47
  410aaf:	adc    BYTE PTR [edi-0x3f223cb7],bh
  410ab5:	dec    esi
  410ab6:	inc    edx
  410ab7:	jp     0x410a99
  410ab9:	mov    BYTE PTR [edx],cl
  410abb:	adc    eax,0xb28cc749
  410ac0:	fs out 0xc5,eax
  410ac3:	retf   0xefa7
  410ac6:	mov    WORD PTR [ebx-0x57],es
  410ac9:	or     al,0x77
  410acb:	sbb    BYTE PTR [edi+0x2a792855],0x6f
  410ad2:	jae    0x410ae8
  410ad4:	nop
  410ad5:	jae    0x410b00
  410ad7:	fisubr DWORD PTR [eax-0x12]
  410ada:	imul   esp,DWORD PTR [esi+0x58],0xffffffa1
  410ade:	xor    DWORD PTR [esi+edi*1],esp
  410ae1:	icebp  
  410ae2:	je     0x410b29
  410ae4:	mov    dh,0x98
  410ae6:	clc    
  410ae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ae9:	inc    ebx
  410aea:	jl     0x410b12
  410aec:	jl     0x410aaa
  410aee:	pop    edx
  410aef:	and    eax,0xf74daf03
  410af4:	outs   dx,BYTE PTR ds:[esi]
  410af5:	cmp    BYTE PTR [edi+ecx*8],al
  410af8:	sub    dh,al
  410afa:	test   eax,0x48ef5a6a
  410aff:	sti    
  410b00:	dec    edx
  410b01:	mov    DWORD PTR [edx-0x70],esp
  410b04:	cs std 
  410b06:	dec    eax
  410b07:	push   ss
  410b08:	pushf  
  410b09:	mov    WORD PTR [edx-0x28],cs
  410b0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b0d:	rcr    BYTE PTR [eax-0x74],cl
  410b10:	xchg   edi,eax
  410b11:	repnz outs dx,DWORD PTR ds:[esi]
  410b13:	fisub  WORD PTR [esi]
  410b15:	inc    esi
  410b16:	(bad)
  410b19:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  410b1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b1c:	fbstp  TBYTE PTR [esi]
  410b1e:	and    al,0xf6
  410b20:	mov    esp,0x272ec9b9
  410b25:	adc    BYTE PTR [ebx+0x44830620],bl
  410b2b:	adc    al,0xba
  410b2d:	and    cl,BYTE PTR [edi]
  410b2f:	adc    al,0x2
  410b31:	add    al,0x7a
  410b33:	cld    
  410b34:	out    0x2b,al
  410b36:	pop    es
  410b37:	pushf  
  410b38:	dec    esi
  410b39:	or     DWORD PTR [edi+eax*1+0x19da6815],0xffffffa4
  410b41:	push   eax
  410b42:	mov    ebx,DWORD PTR [esi]
  410b44:	sbb    eax,0xb651b499
  410b49:	dec    eax
  410b4a:	jp     0x410b32
  410b4c:	call   0x8d8bd5e9
  410b51:	lds    ebx,FWORD PTR [esi-0x6fd5f4f7]
  410b57:	jns    0x410b65
  410b59:	bound  ebp,QWORD PTR [eax+esi*8+0x68]
  410b5d:	aaa    
  410b5e:	sub    DWORD PTR es:[ecx],0xfffffff7
  410b62:	stos   BYTE PTR es:[edi],al
  410b63:	jmp    0x410af9
  410b65:	jae    0x410bbd
  410b67:	xlat   BYTE PTR ds:[ebx]
  410b68:	cmp    ecx,DWORD PTR [ebx-0x20db5d43]
  410b6e:	or     ecx,DWORD PTR [edx-0xf]
  410b71:	ja     0x410be0
  410b73:	sbb    esi,edi
  410b75:	or     BYTE PTR [ebx-0x57],dl
  410b78:	sbb    al,0x3b
  410b7a:	fst    DWORD PTR [edx-0x58]
  410b7d:	sti    
  410b7e:	scas   eax,DWORD PTR es:[edi]
  410b7f:	into   
  410b80:	mov    edi,esp
  410b82:	mov    esp,0x3a55c037
  410b87:	jle    0x410b34
  410b89:	cmp    edi,0x68bfa2e4
  410b8f:	pop    eax
  410b90:	jnp    0x410bab
  410b92:	inc    esi
  410b93:	and    al,0xf3
  410b95:	dec    edx
  410b96:	bound  eax,QWORD PTR [ecx-0x984614]
  410b9c:	xor    BYTE PTR [ecx+0x5ae59334],ah
  410ba2:	js     0x410bb2
  410ba4:	loop   0x410bdd
  410ba6:	bound  edi,QWORD PTR [edi+0x69]
  410ba9:	je     0x410baf
  410bab:	call   0x709c6448
  410bb0:	push   edx
  410bb1:	fsubr  st,st(2)
  410bb3:	lea    eax,[ebp-0x3046d450]
  410bb9:	or     eax,0xeda25924
  410bbe:	sub    eax,0x26f9a8a0
  410bc3:	ja     0x410b82
  410bc5:	push   cs
  410bc6:	pop    ds
  410bc7:	adc    BYTE PTR [edi+eiz*8+0x37827572],ah
  410bce:	cmp    al,dl
  410bd0:	xor    ch,BYTE PTR [eax]
  410bd2:	and    BYTE PTR [ebx],0x83
  410bd5:	xor    dl,BYTE PTR [edi]
  410bd7:	imul   esp,DWORD PTR [ebp+0x52],0x89beec52
  410bde:	jg     0x410b96
  410be0:	xchg   ecx,eax
  410be1:	xor    BYTE PTR [ebp+0x7e2c4171],dh
  410be7:	mov    dl,dl
  410be9:	and    ah,bh
  410beb:	dec    esp
  410bec:	adc    esi,edi
  410bee:	mov    dl,0xf0
  410bf0:	shr    ch,1
  410bf2:	dec    ecx
  410bf3:	or     eax,esi
  410bf5:	inc    ecx
  410bf6:	xchg   BYTE PTR [ecx+0x31],cl
  410bf9:	call   0xe6298537
  410bfe:	adc    eax,ecx
  410c00:	mov    dl,0xde
  410c02:	jbe    0x410bcc
  410c04:	pop    ds
  410c05:	and    eax,0x13836046
  410c0a:	pop    ebx
  410c0b:	iret   
  410c0c:	adc    al,0x58
  410c0e:	stc    
  410c0f:	mov    ecx,0xd146df22
  410c14:	adc    al,0xc5
  410c16:	fldenv [esp+eax*8]
  410c19:	scas   al,BYTE PTR es:[edi]
  410c1a:	aaa    
  410c1b:	jmp    0xc21d:0x3a6f839b
  410c22:	es in  al,0x15
  410c25:	push   ecx
  410c26:	(bad)  
  410c27:	pop    esi
  410c28:	test   eax,0x3be52db8
  410c2d:	ins    DWORD PTR es:[edi],dx
  410c2e:	data16 and al,0x84
  410c31:	shr    bh,1
  410c33:	add    bh,BYTE PTR [ebp-0x1a]
  410c36:	aad    0x84
  410c38:	cwde   
  410c39:	push   esp
  410c3a:	adc    DWORD PTR [esp+ebx*8],ebp
  410c3d:	imul   ebp,DWORD PTR [ebx+0x28],0x8c60367e
  410c44:	stc    
  410c45:	xchg   edx,eax
  410c46:	pop    edx
  410c47:	inc    ecx
  410c48:	lock repz shl BYTE PTR [esp-0x46a3b443],0xa0
  410c52:	aam    0x22
  410c54:	aam    0xc8
  410c56:	mov    dh,0x52
  410c58:	pop    ds
  410c59:	pop    ecx
  410c5a:	ins    BYTE PTR es:[edi],dx
  410c5b:	xchg   ecx,eax
  410c5c:	test   BYTE PTR cs:[ecx-0x14],dl
  410c60:	pop    ebp
  410c61:	pushf  
  410c62:	jo     0x410c82
  410c64:	imul   edx,DWORD PTR [edi-0x2762b12c],0x6cc04d9f
  410c6e:	sub    cl,BYTE PTR [esi-0x45]
  410c71:	xchg   DWORD PTR [edx-0x30],ecx
  410c74:	sbb    al,bl
  410c76:	mov    ds:0x18a7b4a,eax
  410c7b:	jmp    0x74f1f647
  410c80:	cwde   
  410c81:	sub    DWORD PTR [eax+0x44ef56b6],eax
  410c87:	and    ebp,ecx
  410c89:	push   DWORD PTR [ebx-0x39e9c8a6]
  410c8f:	ror    ecx,0x97
  410c92:	bound  ebp,QWORD PTR [edx-0x3d]
  410c95:	sbb    BYTE PTR [ecx+0xeab2412],dl
  410c9b:	loop   0x410ca3
  410c9d:	pop    edi
  410c9e:	cmp    ah,BYTE PTR cs:[edx-0x1cce423b]
  410ca5:	mov    al,ds:0x2e635c33
  410caa:	ds cmp ax,0x271c
  410caf:	icebp  
  410cb0:	iret   
  410cb1:	es push esp
  410cb3:	xor    DWORD PTR [ecx],eax
  410cb5:	or     BYTE PTR [eax],ch
  410cb7:	dec    eax
  410cb8:	repnz aam 0xd4
  410cbb:	xchg   esp,eax
  410cbc:	xor    edx,DWORD PTR [ebx+0x29]
  410cbf:	std    
  410cc0:	test   eax,0xb1dab0e8
  410cc5:	popa   
  410cc6:	pop    edx
  410cc7:	xchg   ecx,eax
  410cc8:	xlat   BYTE PTR ds:[ebx]
  410cc9:	jecxz  0x410d1d
  410ccb:	cmp    BYTE PTR [esi-0x54],ah
  410cce:	xchg   edx,eax
  410ccf:	stos   DWORD PTR es:[edi],eax
  410cd0:	and    BYTE PTR [esi+0x7a],dh
  410cd3:	fisttp QWORD PTR [esi]
  410cd5:	shl    cl,1
  410cd7:	sub    cl,BYTE PTR [edx-0x17]
  410cda:	and    BYTE PTR [ebx],0xd5
  410cdd:	fisubr WORD PTR [eax-0x3b312492]
  410ce3:	jecxz  0x410d3d
  410ce5:	pop    edi
  410ce6:	mov    eax,0x39e7b43f
  410ceb:	in     al,0x5e
  410ced:	xor    eax,esi
  410cef:	adc    eax,0x6c0d8bcb
  410cf4:	in     eax,0x2b
  410cf6:	or     eax,0x6402c2bb
  410cfb:	enter  0x966e,0xea
  410cff:	mov    ds:0x9cf6fd43,al
  410d04:	mov    ds:0x45f278af,eax
  410d09:	pop    ss
  410d0a:	jmp    0x410cde
  410d0c:	push   ecx
  410d0d:	mov    dh,0x99
  410d0f:	push   es
  410d10:	xor    al,0x69
  410d12:	jmp    0x4ee3:0x9dba43c3
  410d19:	fcomp  st(3)
  410d1b:	mul    ecx
  410d1d:	and    BYTE PTR [edx],dh
  410d1f:	hlt    
  410d20:	jno    0x410d9a
  410d22:	ins    BYTE PTR es:[edi],dx
  410d23:	or     BYTE PTR [ebp+0x2b3b5446],bl
  410d29:	push   ebp
  410d2a:	xor    edx,DWORD PTR [esi+0x3f]
  410d2d:	out    dx,al
  410d2e:	add    ch,bh
  410d30:	(bad)
  410d34:	push   0xb
  410d36:	mov    bh,0x19
  410d38:	shl    cl,1
  410d3a:	sub    cl,BYTE PTR [edi]
  410d3c:	pushf  
  410d3d:	mov    ch,0x29
  410d3f:	rol    BYTE PTR [ebp-0x70],1
  410d42:	sbb    ch,BYTE PTR [edx]
  410d44:	mov    dh,0x89
  410d46:	ss jne 0x410ce0
  410d49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d4a:	sbb    eax,edx
  410d4c:	dec    DWORD PTR [esi]
  410d4e:	jne    0x410cf2
  410d50:	cwde   
  410d51:	push   0x7e
  410d53:	adc    al,0x6a
  410d55:	imul   ecx,DWORD PTR [edi-0x1edd5d99],0x4b
  410d5c:	fcom   DWORD PTR [edi+0x7a]
  410d5f:	cdq    
  410d60:	mov    ds:0x9fe9dee9,al
  410d65:	jle    0x410db0
  410d67:	into   
  410d68:	sahf   
  410d69:	sbb    cl,bh
  410d6b:	icebp  
  410d6c:	xor    edi,ecx
  410d6e:	push   esp
  410d6f:	stos   DWORD PTR es:[edi],eax
  410d70:	sub    esi,DWORD PTR [edi]
  410d72:	adc    bl,al
  410d74:	fs inc edx
  410d76:	cmp    BYTE PTR [eax+ebx*8],dh
  410d79:	ss ret 
  410d7b:	jge    0x410d69
  410d7d:	mov    BYTE PTR [ecx],dh
  410d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d80:	xchg   edx,eax
  410d81:	das    
  410d82:	mov    al,es:0xf0b2506e
  410d88:	(bad)  
  410d89:	mov    ah,0x52
  410d8b:	sbb    bh,BYTE PTR [edi+0x77]
  410d8e:	xchg   edi,eax
  410d8f:	mov    ch,0xc6
  410d91:	loopne 0x410d38
  410d93:	push   esi
  410d94:	in     al,0x25
  410d96:	cmc    
  410d97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d98:	dec    ecx
  410d99:	dec    DWORD PTR [eax]
  410d9b:	ins    DWORD PTR es:[edi],dx
  410d9c:	adc    DWORD PTR [eax+0x2b],esi
  410d9f:	div    al
  410da1:	rol    BYTE PTR [edi+eax*8-0x57],cl
  410da5:	je     0x410e15
  410da7:	mov    al,ds:0x77498e39
  410dac:	and    ebp,esp
  410dae:	cld    
  410daf:	in     al,0x63
  410db1:	adc    BYTE PTR [esi+0x5a],dl
  410db4:	jae    0x410d90
  410db6:	not    DWORD PTR [esi]
  410db8:	mov    eax,0x976d20d8
  410dbd:	push   esp
  410dbe:	pop    esi
  410dbf:	sbb    dl,BYTE PTR [ecx-0x4268959c]
  410dc5:	or     DWORD PTR [edi+0x4],esp
  410dc8:	inc    esi
  410dc9:	push   0x97683b5b
  410dce:	sti    
  410dcf:	mov    al,ds:0x2ea04dbf
  410dd4:	xor    al,0x1
  410dd6:	shl    DWORD PTR [esi],1
  410dd8:	int3   
  410dd9:	gs (bad) 
  410ddb:	cwde   
  410ddc:	sub    bl,dl
  410dde:	out    dx,eax
  410ddf:	push   0xffffffa2
  410de1:	stc    
  410de2:	push   ss
  410de3:	(bad)  
  410de5:	jle    0x410dbe
  410de7:	adc    esi,edi
  410de9:	mov    es,esp
  410deb:	lds    ebp,FWORD PTR [ebp+0x5a]
  410dee:	aam    0x1a
  410df0:	(bad)  
  410df1:	out    dx,al
  410df2:	sti    
  410df3:	fwait
  410df4:	stc    
  410df5:	add    eax,0xe3a989bf
  410dfa:	fucomi st,st(6)
  410dfc:	inc    eax
  410dfd:	(bad)  
  410dfe:	mov    ds:0x3267a45b,eax
  410e03:	out    dx,eax
  410e04:	ins    BYTE PTR es:[edi],dx
  410e05:	aam    0xfd
  410e07:	jns    0x410e1b
  410e09:	test   eax,0xb95e642c
  410e0e:	std    
  410e0f:	pop    ecx
  410e10:	fbstp  TBYTE PTR [eax]
  410e12:	retf   0xfe7e
  410e15:	jle    0x410db0
  410e17:	out    dx,al
  410e18:	mov    edi,0x4de0343d
  410e1d:	inc    esi
  410e1e:	dec    eax
  410e1f:	and    ebx,ecx
  410e21:	int    0x9c
  410e23:	les    ebp,FWORD PTR [edx+eax*8]
  410e26:	adc    ecx,edx
  410e28:	in     al,dx
  410e29:	xor    edx,ebp
  410e2b:	mov    eax,ds:0x3e0060d6
  410e30:	add    al,BYTE PTR ds:0x4755f1a8
  410e36:	sbb    esi,ebp
  410e38:	daa    
  410e39:	shl    BYTE PTR [edx+0x596e0a26],0x5a
  410e40:	inc    eax
  410e41:	and    eax,0xb735157c
  410e46:	ss cli 
  410e48:	pop    ss
  410e49:	fcom   QWORD PTR ss:[eax]
  410e4c:	test   BYTE PTR ds:[ebx-0x57e60cf],0x1c
  410e54:	leave  
  410e55:	mov    dh,0x6
  410e57:	xor    BYTE PTR [edi+eiz*4-0x34d83acf],ah
  410e5e:	xor    DWORD PTR [edi],0x41
  410e61:	or     DWORD PTR [ecx-0xb97ab12],ecx
  410e67:	js     0x410e32
  410e69:	xchg   ebp,ebp
  410e6b:	push   esi
  410e6c:	pop    edi
  410e6d:	daa    
  410e6e:	add    al,0x5d
  410e70:	sub    ecx,DWORD PTR [eax-0x31]
  410e73:	add    edi,DWORD PTR [ebp-0x2b]
  410e76:	push   0xfce0a36b
  410e7b:	cmp    esp,DWORD PTR [edi-0x7a55118d]
  410e81:	mov    eax,ds:0x2992df55
  410e86:	test   BYTE PTR [edi+ebp*1],ch
  410e89:	jns    0x410ec2
  410e8b:	jl     0x410eed
  410e8d:	add    ebp,DWORD PTR [edx]
  410e8f:	inc    esi
  410e90:	jb     0x410eae
  410e92:	fld    TBYTE PTR [edi]
  410e94:	in     al,0x1e
  410e96:	lock rcr BYTE PTR [eax],1
  410e99:	cdq    
  410e9a:	jae    0x410e76
  410e9c:	pop    es
  410e9d:	inc    edx
  410e9e:	jbe    0x410e2e
  410ea0:	cmp    esi,DWORD PTR [esi+esi*8]
  410ea3:	popf   
  410ea4:	push   es
  410ea5:	ds pop eax
  410ea7:	bound  edi,QWORD PTR [edx-0x6adc27d]
  410ead:	mov    esp,0xffa0fdd0
  410eb2:	cs pushw ds
  410eb5:	push   ds
  410eb6:	les    edx,FWORD PTR [edx-0x60e1628b]
  410ebc:	(bad)  
  410ebe:	loop   0x410eef
  410ec0:	shl    DWORD PTR [edx+0x7a],cl
  410ec3:	mov    ecx,0x5b2f6714
  410ec8:	mov    dl,0xaf
  410eca:	arpl   ax,ax
  410ecc:	in     al,0xe4
  410ece:	xor    DWORD PTR [eax+0x7a],eax
  410ed1:	pop    esi
  410ed2:	push   es
  410ed3:	or     eax,0xf13e4de1
  410ed8:	pop    ebx
  410ed9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410eda:	mov    ss,WORD PTR [edi-0x30]
  410edd:	das    
  410ede:	sub    BYTE PTR [edi+0x25],ah
  410ee1:	pop    ds
  410ee2:	outs   dx,DWORD PTR ds:[esi]
  410ee3:	xor    eax,0x901f66cc
  410ee8:	xor    DWORD PTR [edx+0x7d92d63a],edi
  410eee:	push   ebp
  410eef:	ror    DWORD PTR [ebx+0x2f70d335],cl
  410ef5:	scas   al,BYTE PTR es:[edi]
  410ef6:	or     esp,DWORD PTR ds:0x74a982b3
  410efc:	test   ebx,ebp
  410efe:	ret    0x45f9
  410f01:	mov    DWORD PTR [eax+0x1f5829b2],ebp
  410f07:	repnz sub BYTE PTR [edx-0x34],ch
  410f0b:	jo     0x410f60
  410f0d:	mov    ds:0xba13ea73,eax
  410f12:	cmp    eax,0x57cec08
  410f17:	ret    0xedc1
  410f1a:	popf   
  410f1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f1c:	fstp   QWORD PTR [ebx]
  410f1e:	in     eax,dx
  410f1f:	mov    esp,0xe87f9e19
  410f24:	push   ds
  410f25:	ja     0x410eb7
  410f27:	pop    ecx
  410f28:	mov    edi,0xc10de46f
  410f2d:	mov    esp,ebp
  410f2f:	xor    BYTE PTR [edx-0x5c],dh
  410f32:	sbb    BYTE PTR [edi+0x2d020cfb],dh
  410f38:	push   ecx
  410f39:	jo     0x410fb4
  410f3b:	popa   
  410f3c:	out    0x26,eax
  410f3e:	lock sahf 
  410f40:	lods   eax,DWORD PTR cs:[esi]
  410f42:	fadd   DWORD PTR [eax-0x6afb48ac]
  410f48:	loop   0x410f31
  410f4a:	out    dx,al
  410f4b:	pop    ss
  410f4c:	arpl   WORD PTR [ebx-0x1a305786],ax
  410f52:	or     bl,dh
  410f54:	in     eax,dx
  410f55:	bound  ebp,QWORD PTR [eax]
  410f57:	inc    esp
  410f58:	and    al,BYTE PTR [edi-0x32]
  410f5b:	iret   
  410f5c:	arpl   bp,bp
  410f5e:	sbb    DWORD PTR [ebp-0x71fb330f],eax
  410f64:	outs   dx,BYTE PTR ds:[esi]
  410f65:	loop   0x410f9d
  410f67:	pusha  
  410f68:	mov    al,BYTE PTR [eax+0x23c35e31]
  410f6e:	enter  0x3a20,0xe
  410f72:	push   edi
  410f73:	adc    dh,BYTE PTR [edx+0x56]
  410f76:	ret    
  410f77:	push   ds
  410f78:	pop    ds
  410f79:	(bad)  
  410f7a:	(bad)  
  410f7b:	sbb    BYTE PTR [ebx],ch
  410f7d:	xor    bl,al
  410f7f:	jmp    0x410fcb
  410f81:	into   
  410f82:	test   bl,dh
  410f84:	cli    
  410f85:	daa    
  410f86:	cmp    al,0x4d
  410f88:	jne    0x410fcc
  410f8a:	es jge 0x410fe6
  410f8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f8e:	pop    ecx
  410f8f:	into   
  410f90:	ret    
  410f91:	dec    ebx
  410f92:	scas   eax,DWORD PTR es:[edi]
  410f93:	rcl    BYTE PTR gs:[eax-0x6c4632a8],0x93
  410f9b:	adc    eax,ecx
  410f9d:	ficomp WORD PTR [edi]
  410f9f:	jg     0x410fcd
  410fa1:	in     eax,dx
  410fa2:	sti    
  410fa3:	ins    DWORD PTR es:[edi],dx
  410fa4:	mov    esi,es
  410fa6:	pop    edx
  410fa7:	mov    dl,0x76
  410fa9:	stos   DWORD PTR es:[edi],eax
  410faa:	push   es
  410fab:	xchg   edx,eax
  410fac:	in     al,dx
  410fad:	int    0xb5
  410faf:	nop
  410fb0:	ret    
  410fb1:	popf   
  410fb2:	movaps xmm7,xmm1
  410fb5:	xchg   edi,eax
  410fb6:	cld    
  410fb7:	int3   
  410fb8:	cmp    al,0x41
  410fba:	ds jmp 0x60578e70
  410fc0:	xchg   ebp,eax
  410fc1:	(bad)  
  410fc2:	xchg   edx,eax
  410fc3:	xor    ah,BYTE PTR [esi]
  410fc5:	dec    ebx
  410fc6:	in     eax,0xb0
  410fc8:	fisubr WORD PTR [ebp-0x1bae8293]
  410fce:	push   0xb
  410fd0:	popa   
  410fd1:	mov    esp,0x3583d19a
  410fd6:	mov    edi,0x2d4ae2c4
  410fdb:	pusha  
  410fdc:	sbb    BYTE PTR [esp+ebx*2],ch
  410fdf:	or     BYTE PTR [edi],ah
  410fe1:	stos   BYTE PTR es:[edi],al
  410fe2:	(bad)  [esi-0x5096b8f6]
  410fe8:	inc    edi
  410fe9:	jmp    0x410f83
  410feb:	push   ebx
  410fec:	es mov ch,0x98
  410fef:	sub    eax,0x93f9e0e9
  410ff4:	or     esp,DWORD PTR [ebx-0x6b]
  410ff7:	clc    
  410ff8:	add    ebx,ebp
  410ffa:	mov    dh,0x7f
  410ffc:	lds    edi,FWORD PTR [ebx-0x516b945e]
  411002:	repnz test dl,cl
  411005:	jmp    0xdd4a:0x8b9c2a8
  41100c:	mov    eax,ds:0xabc023a2
  411011:	and    DWORD PTR [edx+0x53],esp
  411014:	mov    edi,0xb33a6bb
  411019:	xor    al,0x51
  41101b:	push   edi
  41101c:	aas    
  41101d:	test   al,0xc9
  41101f:	xchg   ecx,eax
  411020:	inc    esi
  411021:	mov    edi,0x4a4f4945
  411026:	gs push ebx
  411028:	jecxz  0x411046
  41102a:	bound  ebp,QWORD PTR [ebp-0x5cb086bf]
  411030:	fimul  DWORD PTR [ecx-0x75ae2ca5]
  411036:	mov    bl,BYTE PTR [edx+0xbf9f5df]
  41103c:	cli    
  41103d:	push   ss
  41103e:	mov    ebx,0x57561ecf
  411043:	add    bx,WORD PTR ds:0xa2c5dbe9
  41104a:	fnsave ss:[edx+0x2e1be5ed]
  411051:	loope  0x411025
  411053:	cdq    
  411054:	mov    bl,0xe
  411056:	mov    DWORD PTR [ebx+0x6bdddbc7],edi
  41105c:	ror    bl,1
  41105e:	mov    eax,0x8b95d847
  411063:	repz inc esi
  411065:	pop    es
  411066:	jmp    0x4110bf
  411068:	or     cl,0xe
  41106b:	sub    eax,0xb8b0dadc
  411070:	ins    DWORD PTR es:[edi],dx
  411071:	int    0x64
  411073:	sti    
  411074:	push   eax
  411075:	xchg   edi,eax
  411076:	popa   
  411077:	xchg   DWORD PTR [edi-0x57d988c3],esp
  41107d:	pop    ecx
  41107e:	mov    esi,esi
  411080:	cmp    al,0xb9
  411082:	nop
  411083:	shr    BYTE PTR [edx-0x4d828e6e],0xa4
  41108a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41108b:	jle    0x41106b
  41108d:	dec    ecx
  41108e:	je     0x41101e
  411090:	into   
  411091:	fimul  WORD PTR fs:[ecx+0x66dfb31b]
  411098:	jo     0x4110b3
  41109a:	mov    ch,0x65
  41109c:	ror    edi,1
  41109e:	cmp    al,0x32
  4110a0:	mul    BYTE PTR [esi-0x596a128a]
  4110a6:	mov    eax,0x34f7d270
  4110ab:	shl    esi,cl
  4110ad:	mov    dl,0x60
  4110af:	stc    
  4110b0:	jle    0x411128
  4110b2:	test   al,0x26
  4110b4:	mov    bl,0x48
  4110b6:	sbb    esp,DWORD PTR [ecx-0x42]
  4110b9:	sar    BYTE PTR [ebp-0x42],cl
  4110bc:	mov    DWORD PTR [eax],esi
  4110be:	mov    WORD PTR [edi-0x6a],es
  4110c1:	test   dl,ch
  4110c3:	xchg   edx,eax
  4110c4:	jle    0x41111f
  4110c6:	push   cs
  4110c7:	push   esi
  4110c8:	outs   dx,BYTE PTR ds:[esi]
  4110c9:	call   0xefa411e2
  4110ce:	call   0x49683061
  4110d3:	data16 hlt 
  4110d5:	inc    eax
  4110d6:	inc    esp
  4110d7:	fnstenv [ebp-0x3f25d858]
  4110dd:	xchg   DWORD PTR fs:[edi+0x5d],eax
  4110e1:	xor    ah,BYTE PTR [ecx]
  4110e3:	std    
  4110e4:	out    dx,al
  4110e5:	call   0x98c:0xf1769685
  4110ec:	test   al,0xc4
  4110ee:	mov    bh,0x9a
  4110f0:	push   eax
  4110f1:	data16 cmp al,0x7b
  4110f4:	push   esi
  4110f5:	adc    DWORD PTR [ecx+0x0],0x462f85a4
  4110fc:	dec    eax
  4110fd:	sti    
  4110fe:	xor    al,BYTE PTR [eax-0x1a223abc]
  411104:	in     eax,0x69
  411106:	mov    esp,0x90379d02
  41110b:	jl     0x411176
  41110d:	shl    ah,0x97
  411110:	sub    al,0x49
  411112:	adc    DWORD PTR [ebx],0xc
  411115:	cmp    edx,DWORD PTR [ecx+0x6c]
  411118:	sub    al,0xbd
  41111a:	jmp    0x84d1:0xad9a04d
  411121:	out    dx,eax
  411122:	push   esp
  411123:	sbb    esi,eax
  411125:	shl    BYTE PTR [eax+ebp*4-0x60c9d7e],1
  41112c:	jno    0x411138
  41112e:	adc    ch,BYTE PTR [edx-0x7574abb9]
  411134:	sbb    edi,edi
  411136:	frstor [esi-0xd]
  411139:	js     0x4110ff
  41113b:	mov    bl,0x83
  41113d:	in     al,dx
  41113e:	cmp    DWORD PTR [ebp+0x2b97dfa3],eax
  411144:	outs   dx,DWORD PTR ds:[esi]
  411145:	rcl    BYTE PTR [esi+0x64a314c8],cl
  41114b:	dec    ecx
  41114c:	inc    ebp
  41114d:	mov    ds:0x580eb57a,al
  411152:	push   cs
  411153:	dec    eax
  411154:	dec    ebx
  411155:	or     dh,dh
  411157:	push   edi
  411158:	cmc    
  411159:	fsubr  QWORD PTR [edi+eiz*4+0x54]
  41115d:	adc    al,BYTE PTR [ebx-0x7c]
  411160:	sbb    al,0xa6
  411162:	mov    gs:0xd2056f91,al
  411168:	jmp    0x46e122e0
  41116d:	and    ecx,DWORD PTR [ecx+0x76f13b4b]
  411173:	mov    bl,0x8c
  411175:	(bad)  
  411176:	out    0x77,eax
  411178:	retf   0x4297
  41117b:	or     dh,BYTE PTR [eax+ecx*4]
  41117e:	sub    edi,DWORD PTR [ebp+0x59b61a62]
  411184:	adc    eax,0x248d4e9f
  411189:	loopne 0x411150
  41118b:	pop    ebp
  41118c:	stos   DWORD PTR es:[edi],eax
  41118d:	sub    DWORD PTR [esi+0x68],esp
  411190:	dec    edi
  411191:	add    DWORD PTR [ebx-0x4742268b],esi
  411197:	pop    edi
  411198:	adc    eax,0xc3676b82
  41119d:	pop    ebx
  41119e:	pop    ebp
  41119f:	xchg   ecx,eax
  4111a0:	lods   al,BYTE PTR ds:[esi]
  4111a1:	jle    0x411133
  4111a3:	mov    BYTE PTR [eax+eiz*1-0x2a],bh
  4111a7:	push   ecx
  4111a8:	jo     0x411219
  4111aa:	pop    ebp
  4111ab:	xchg   edi,eax
  4111ac:	and    eax,0x6cf293d0
  4111b1:	ss out dx,eax
  4111b3:	test   BYTE PTR [ebp*1-0x2a7c0c0f],al
  4111ba:	icebp  
  4111bb:	clc    
  4111bc:	adc    bh,BYTE PTR [esi+0xe]
  4111bf:	test   BYTE PTR [ecx+0x66],dh
  4111c2:	push   ebp
  4111c3:	aad    0x2f
  4111c5:	dec    edi
  4111c6:	add    al,0xe1
  4111c8:	repz je 0x41116f
  4111cb:	push   ebp
  4111cc:	jmp    0xbdb3:0x67667030
  4111d3:	stos   BYTE PTR es:[edi],al
  4111d4:	test   DWORD PTR [eax],edx
  4111d6:	add    DWORD PTR [edx+0xb],ecx
  4111d9:	pop    ebp
  4111da:	out    0x29,eax
  4111dc:	nop    ebp
  4111df:	and    ah,BYTE PTR [ecx+0x61e4b98f]
  4111e5:	push   ebp
  4111e6:	stc    
  4111e7:	mov    edx,0x18ddb12f
  4111ec:	shr    BYTE PTR [esi-0xc],1
  4111ef:	inc    edx
  4111f0:	mov    DWORD PTR [edx],eax
  4111f2:	xchg   esi,eax
  4111f3:	inc    ecx
  4111f4:	(bad)  
  4111f5:	aaa    
  4111f6:	out    dx,eax
  4111f7:	jge    0x4111c7
  4111f9:	sbb    bh,ah
  4111fb:	hlt    
  4111fc:	inc    ebp
  4111fd:	push   ecx
  4111fe:	xchg   BYTE PTR [esi-0x31f4908e],cl
  411204:	in     al,0x21
  411206:	jne    0x411227
  411208:	gs in  eax,0x74
  41120b:	ret    
  41120c:	stos   BYTE PTR es:[edi],al
  41120d:	arpl   bx,bx
  41120f:	data16 arpl WORD PTR [ecx-0x35],bp
  411213:	repnz sti 
  411215:	sbb    BYTE PTR [ebx+esi*8],0xba
  411219:	fnstsw WORD PTR [ebx+ecx*8]
  41121c:	jno    0x411297
  41121e:	mov    al,0x83
  411220:	mov    esp,0xec497282
  411225:	aad    0x9c
  411227:	or     al,0x62
  411229:	push   0xcc98b02c
  41122e:	lahf   
  41122f:	mov    ah,0x79
  411231:	loopne 0x411244
  411233:	mov    WORD PTR [edi],ss
  411235:	inc    esp
  411236:	jno    0x411296
  411238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411239:	outs   dx,BYTE PTR ds:[esi]
  41123a:	shl    ah,1
  41123c:	shl    DWORD PTR [eax+eax*1+0x76],0xfe
  411241:	dec    esi
  411242:	cwde   
  411243:	push   0x3
  411245:	dec    eax
  411246:	mov    dh,0x1e
  411248:	clc    
  411249:	call   0x2d3b7343
  41124e:	hlt    
  41124f:	or     ebx,DWORD PTR [edi-0x4a]
  411252:	sub    DWORD PTR [ebp+esi*2+0x485a482f],ebp
  411259:	jnp    0x411217
  41125b:	popf   
  41125c:	dec    eax
  41125d:	ror    DWORD PTR [esi],cl
  41125f:	pop    esp
  411260:	or     ebp,esp
  411262:	lahf   
  411263:	xchg   ebp,eax
  411264:	les    esp,FWORD PTR [esp+esi*2-0x4eacda3a]
  41126b:	ror    DWORD PTR [eax],1
  41126d:	popf   
  41126e:	jmp    0x411250
  411270:	xlat   BYTE PTR ds:[ebx]
  411271:	ins    DWORD PTR es:[edi],dx
  411272:	in     al,0xa4
  411274:	and    al,0x7c
  411276:	jb     0x4112c9
  411278:	mov    ah,0x57
  41127a:	xchg   ecx,eax
  41127b:	(bad)  
  41127c:	hlt    
  41127d:	push   0xbe79f2b3
  411282:	add    eax,0x8d789766
  411287:	sub    al,0x95
  411289:	xor    eax,0xf00fc614
  41128e:	idiv   bl
  411290:	scas   eax,DWORD PTR es:[edi]
  411291:	mov    ds:0xfa473b39,eax
  411296:	dec    ebp
  411297:	push   ecx
  411298:	or     ebp,DWORD PTR [edi+0x6e4e159]
  41129e:	stos   BYTE PTR es:[edi],al
  41129f:	fadd   st(2),st
  4112a1:	jnp    0x4112cc
  4112a3:	call   0xd1da:0x7734994f
  4112aa:	fs dec esi
  4112ac:	inc    ecx
  4112ad:	push   ebx
  4112ae:	xlat   BYTE PTR ds:[ebx]
  4112af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112b0:	gs mov dh,0x96
  4112b3:	scas   eax,DWORD PTR es:[edi]
  4112b4:	sahf   
  4112b5:	mov    edx,0x245003b1
  4112ba:	xchg   DWORD PTR [ebx-0x59195ace],ebx
  4112c0:	loopne 0x41133a
  4112c2:	mov    DWORD PTR [ecx+eax*8+0x7b4fca64],ebx
  4112c9:	loopne 0x4112c8
  4112cb:	inc    esi
  4112cc:	push   cs
  4112cd:	jne    0x4112e5
  4112cf:	xor    BYTE PTR [eax+eiz*2],dh
  4112d2:	inc    eax
  4112d3:	sub    BYTE PTR ds:0x2acc757b,cl
  4112d9:	xor    bl,ch
  4112db:	jle    0x4112bf
  4112dd:	xor    BYTE PTR [esi],bh
  4112df:	dec    edx
  4112e0:	add    esp,DWORD PTR [edi]
  4112e2:	push   edx
  4112e3:	xchg   edx,eax
  4112e4:	jg     0x4112ec
  4112e6:	cmp    ah,BYTE PTR [edi+eax*8]
  4112e9:	in     eax,0xc7
  4112eb:	add    dh,BYTE PTR [esi+eax*4]
  4112ee:	retf   
  4112ef:	xchg   ebx,eax
  4112f0:	push   ds
  4112f1:	pop    ss
  4112f2:	cld    
  4112f3:	into   
  4112f4:	clc    
  4112f5:	or     dl,BYTE PTR [edi]
  4112f7:	mov    ebx,0x42f14a6c
  4112fc:	stc    
  4112fd:	fist   WORD PTR [esi+0x19]
  411300:	sti    
  411301:	sub    ecx,DWORD PTR [ebx+0x5b9e35aa]
  411307:	push   edx
  411308:	ins    DWORD PTR es:[edi],dx
  411309:	sub    eax,0xec22a5d8
  41130e:	imul   DWORD PTR [eax]
  411310:	xchg   ebx,eax
  411311:	repnz pop ecx
  411313:	bnd jbe 0x41132d
  411316:	push   ss
  411317:	rcr    DWORD PTR [ebx],1
  411319:	mov    dh,0xbb
  41131b:	sbb    BYTE PTR [esi],bh
  41131d:	lock xor ch,BYTE PTR [ebx]
  411320:	xchg   DWORD PTR [edi-0x4f],ebp
  411323:	push   ds
  411324:	popf   
  411325:	dec    eax
  411326:	dec    edx
  411327:	test   BYTE PTR ss:[eax],cl
  41132a:	pop    ecx
  41132b:	repnz mov ebx,0x428d18fc
  411331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411332:	aas    
  411333:	sbb    bh,BYTE PTR [ebx-0x41]
  411336:	das    
  411337:	and    esp,DWORD PTR [edi+0xb]
  41133a:	push   cs
  41133b:	sbb    ch,BYTE PTR [eax]
  41133d:	sbb    bl,al
  41133f:	aas    
  411340:	and    dh,BYTE PTR [edi-0x4a2bec4d]
  411346:	test   al,0x65
  411348:	cmc    
  411349:	out    dx,al
  41134a:	ins    DWORD PTR es:[edi],dx
  41134b:	xor    BYTE PTR [esi+0x4d],0x29
  41134f:	sbb    BYTE PTR [esi],dh
  411351:	lds    esp,FWORD PTR [esi+ebp*8-0x56078e1b]
  411358:	mov    ds:0x6dfcd9fc,eax
  41135d:	mov    BYTE PTR [edx+0x7b],al
  411360:	outs   dx,DWORD PTR ds:[esi]
  411361:	jae    0x41137e
  411363:	xlat   BYTE PTR ds:[ebx]
  411364:	sub    esi,eax
  411366:	sub    eax,0x24b0c582
  41136b:	or     al,0x67
  41136d:	fisub  DWORD PTR [ebp+0x2]
  411370:	xchg   ebx,eax
  411371:	or     BYTE PTR [ebx-0x1f],bh
  411374:	je     0x411380
  411376:	fist   DWORD PTR [edx+0x29dfd0b4]
  41137c:	addr16 into 
  41137e:	pop    edx
  41137f:	(bad)  
  411381:	into   
  411382:	jae    0x4113c0
  411384:	pop    ecx
  411385:	sub    bl,BYTE PTR [ebx-0x5c227fe9]
  41138b:	sub    ah,BYTE PTR [esi-0x54]
  41138e:	shl    DWORD PTR [ecx+0x1d],cl
  411391:	popa   
  411392:	xchg   ecx,eax
  411393:	dec    ebp
  411394:	test   eax,0x206f106
  411399:	push   edx
  41139a:	cwd    
  41139c:	adc    eax,DWORD PTR [ecx-0x11]
  41139f:	jb     0x41135e
  4113a1:	jbe    0x41137e
  4113a3:	lahf   
  4113a4:	imul   edx,DWORD PTR [esi+0x27],0x25
  4113a8:	or     eax,0x54027bc3
  4113ad:	sub    BYTE PTR [eax-0x588e5275],cl
  4113b3:	mov    edi,0x6030c866
  4113b8:	adc    bh,BYTE PTR [ebp+0x78]
  4113bb:	mov    ebx,0xb5741a74
  4113c0:	xchg   ebp,eax
  4113c1:	adc    al,0x64
  4113c3:	dec    edx
  4113c4:	loopne 0x41139c
  4113c6:	cdq    
  4113c7:	dec    ecx
  4113c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113c9:	push   edi
  4113ca:	adc    ecx,ecx
  4113cc:	int    0x3f
  4113ce:	fucomip st,st(3)
  4113d0:	mov    edi,0x67de89f5
  4113d5:	cmp    eax,0x93cf5388
  4113da:	rol    ebx,1
  4113dc:	mov    al,0x97
  4113de:	mov    ch,0xae
  4113e0:	lock scas eax,DWORD PTR es:[edi]
  4113e2:	xchg   ecx,eax
  4113e3:	ins    DWORD PTR es:[edi],dx
  4113e4:	aas    
  4113e5:	push   edx
  4113e6:	and    al,bl
  4113e8:	mov    al,ds:0xe696cad4
  4113ed:	unpcklps xmm6,XMMWORD PTR [ebp-0x44]
  4113f1:	or     dl,ah
  4113f3:	pop    edx
  4113f4:	and    ch,al
  4113f6:	mov    ecx,0x3c60884a
  4113fb:	mov    dl,0x3b
  4113fd:	cmp    DWORD PTR [edi],ebx
  4113ff:	call   0x5fc1:0x1f7bfd48
  411406:	mov    edx,0x982f438a
  41140b:	call   0xe926:0x6bb5fef0
  411412:	loope  0x411460
  411414:	lock dec eax
  411416:	jbe    0x4113a0
  411418:	shl    DWORD PTR [eax-0x49b0322a],cl
  41141e:	imul   BYTE PTR [ebp+0x607e2b37]
  411424:	push   cs
  411425:	into   
  411426:	adc    eax,ebp
  411428:	adc    al,0x34
  41142a:	mov    cl,0xf3
  41142c:	out    dx,eax
  41142d:	pop    edi
  41142e:	icebp  
  41142f:	mov    ebp,0xe807f23d
  411434:	dec    eax
  411435:	fidivr DWORD PTR [edx+0x7bc9b1b]
  41143b:	push   ebx
  41143c:	out    dx,al
  41143d:	xchg   esp,eax
  41143e:	popa   
  41143f:	enter  0x2482,0x2e
  411443:	into   
  411444:	hlt    
  411445:	adc    ebp,DWORD PTR [eax]
  411447:	push   es
  411448:	cs jo  0x41140b
  41144b:	add    BYTE PTR [ecx],cl
  41144d:	ret    
  41144e:	(bad)  
  41144f:	push   ss
  411450:	out    0x7f,al
  411452:	fwait
  411453:	stc    
  411454:	cmp    al,BYTE PTR [esi]
  411456:	push   esi
  411457:	and    al,0xb
  411459:	adc    ebp,esp
  41145b:	dec    eax
  41145c:	dec    edx
  41145d:	call   0xa4fc:0xdcaf25a7
  411464:	imul   esp,DWORD PTR [edx-0x5f],0x23
  411468:	call   0x71d47a48
  41146d:	in     eax,dx
  41146e:	cli    
  41146f:	mov    ecx,edx
  411471:	dec    esi
  411472:	ja     0x4114b7
  411474:	xchg   edi,eax
  411475:	xor    al,0x37
  411477:	or     bl,BYTE PTR [ebx+0x47]
  41147a:	sub    eax,0x4f6c0cd
  41147f:	add    BYTE PTR [ebx],ch
  411481:	jnp    0x4114a1
  411483:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411484:	dec    esi
  411485:	jge    0x41143e
  411487:	es jno 0x4114c2
  41148a:	test   ax,0x1cb
  41148e:	hlt    
  41148f:	fnstenv [ebx+edi*8+0x67e9aac3]
  411496:	jmp    DWORD PTR [eax+0x15c3904e]
  41149c:	loope  0x4114d7
  41149e:	sbb    esi,edi
  4114a0:	int    0xb3
  4114a2:	into   
  4114a3:	rol    dh,cl
  4114a5:	retf   
  4114a6:	dec    edi
  4114a7:	push   ebp
  4114a8:	push   esi
  4114a9:	cmp    DWORD PTR [edx],edx
  4114ab:	mul    BYTE PTR [esi-0x38]
  4114ae:	popf   
  4114af:	icebp  
  4114b0:	imul   eax,DWORD PTR [ecx],0x3904538c
  4114b6:	push   ss
  4114b7:	pop    esi
  4114b8:	push   ss
  4114b9:	add    DWORD PTR [edi+0x1458ad72],ebp
  4114bf:	ss mov ch,0x1c
  4114c2:	lock sbb ebp,DWORD PTR [eax+0x40]
  4114c6:	stos   BYTE PTR es:[edi],al
  4114c7:	push   esp
  4114c8:	adc    esp,ebx
  4114ca:	sub    DWORD PTR [ebx-0x413e0f95],ebp
  4114d0:	mov    ch,0x8e
  4114d2:	sar    DWORD PTR [edx+0x694ef623],0xac
  4114d9:	lock in al,dx
  4114db:	lds    esp,FWORD PTR [eax+edx*4+0x64b7276b]
  4114e2:	sub    esi,DWORD PTR [eax-0x61]
  4114e5:	mov    al,cl
  4114e7:	and    edi,DWORD PTR [esi-0x2e375e1c]
  4114ed:	sub    esi,DWORD PTR [ebp+0x6843b7f1]
  4114f3:	popf   
  4114f4:	pop    edi
  4114f5:	xchg   esp,eax
  4114f6:	inc    ebp
  4114f7:	pop    ebp
  4114f8:	mov    ch,0xf2
  4114fa:	xchg   ecx,eax
  4114fb:	ret    0xaf5a
  4114fe:	or     esp,esi
  411500:	mov    ah,0x77
  411502:	pop    edx
  411503:	not    ch
  411505:	ret    
  411506:	jge    0x41153c
  411508:	pushf  
  411509:	push   edx
  41150a:	push   ebp
  41150b:	or     BYTE PTR [eax],cl
  41150d:	mov    ebp,0x6459c102
  411512:	jbe    0x411586
  411514:	addr16 or eax,0x467cfc3f
  41151a:	jmp    0x4114da
  41151c:	and    eax,0x764b6ffc
  411521:	stos   DWORD PTR es:[edi],eax
  411522:	jg     0x411557
  411524:	xchg   BYTE PTR [ecx],bh
  411526:	call   0x75e58b3b
  41152b:	test   BYTE PTR [ebp+0x71],bl
  41152e:	stc    
  41152f:	push   eax
  411530:	rcl    BYTE PTR [edx+ebp*1+0x7c],1
  411534:	fs repnz add eax,0x52200d50
  41153b:	inc    eax
  41153c:	dec    ebp
  41153d:	fisttp QWORD PTR [ebx-0x68060070]
  411543:	xchg   edx,eax
  411544:	sub    dl,BYTE PTR [eax]
  411546:	test   al,0x73
  411548:	pop    ds
  411549:	int3   
  41154a:	mov    bh,0x5f
  41154c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41154d:	in     al,dx
  41154e:	push   ebx
  41154f:	shr    bh,0x85
  411552:	fucomip st,st(4)
  411554:	jge    0x411585
  411556:	jmp    0x71ae:0xd3eb9059
  41155d:	mov    ebx,0x126469f6
  411562:	aad    0xb9
  411564:	aaa    
  411565:	or     edi,edi
  411567:	sub    edx,DWORD PTR [edi+0x2f]
  41156a:	frstor [ebx]
  41156c:	push   es
  41156d:	pop    ebp
  41156e:	stc    
  41156f:	imul   ebp,DWORD PTR [bp+di-0x40a6],0x4b572f58
  411578:	push   eax
  411579:	mov    esp,0xa9ae53a7
  41157e:	cwde   
  41157f:	adc    BYTE PTR [eax+0x73],ah
  411582:	mov    ds:0x4588adb4,al
  411587:	adc    al,BYTE PTR [ecx+ebp*8-0x6f04f5f9]
  41158e:	sar    DWORD PTR [edi],0xe1
  411591:	dec    eax
  411592:	shl    BYTE PTR [eax+0x32d6a1bf],0x9d
  411599:	xchg   ebp,eax
  41159a:	mov    al,ds:0x8493c21c
  41159f:	arpl   WORD PTR [ecx-0x54],bx
  4115a2:	or     eax,0x4a7814c0
  4115a7:	jnp    0x4115fc
  4115a9:	mov    bl,0xd2
  4115ab:	jae    0x4115a7
  4115ad:	loopne 0x4115d1
  4115af:	cmp    BYTE PTR [ecx+0x6c],ch
  4115b2:	jns    0x41155f
  4115b4:	inc    ecx
  4115b5:	sub    ah,BYTE PTR ds:[ebx-0x7]
  4115b9:	dec    edi
  4115ba:	dec    esp
  4115bb:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4115bd:	outs   dx,BYTE PTR ds:[esi]
  4115be:	sub    dl,bh
  4115c0:	aam    0xd1
  4115c2:	fs and al,0xe
  4115c5:	mov    BYTE PTR [esi],dl
  4115c7:	adc    al,0xd
  4115c9:	jp     0x4115ca
  4115cb:	mov    edi,0x3eb337f8
  4115d0:	lea    edi,[ebx+0xb1c455e]
  4115d6:	call   0x65c5:0x28606c4d
  4115dd:	ror    DWORD PTR [edi-0x50],1
  4115e0:	mov    ds:0x870a98b3,al
  4115e5:	xor    eax,0xe22de0e8
  4115ea:	and    eax,0x862924ae
  4115ef:	dec    edx
  4115f0:	jle    0x4115d3
  4115f2:	xchg   ecx,eax
  4115f3:	jns    0x411585
  4115f5:	pop    ds
  4115f6:	bound  edi,QWORD PTR ds:0xcea7e4a1
  4115fc:	xchg   ebp,eax
  4115fd:	fwait
  4115fe:	cmp    esi,ebp
  411600:	push   edi
  411601:	pop    ecx
  411602:	dec    ebp
  411603:	(bad)  
  411604:	icebp  
  411605:	adc    al,0x18
  411607:	imul   edx,DWORD PTR [esi-0x285387fe],0x373b1a32
  411611:	mov    ds:0xff1eca67,al
  411616:	div    BYTE PTR [ebx-0x36]
  411619:	adc    dl,BYTE PTR [esi]
  41161b:	inc    esi
  41161c:	pop    esi
  41161d:	and    eax,0xf397008e
  411622:	(bad)  
  411623:	in     eax,0x63
  411625:	(bad)  
  411626:	sub    eax,0x9f106ac0
  41162b:	js     0x4115bf
  41162d:	jmp    0xe89e:0x1027f463
  411634:	inc    ebp
  411635:	int    0x4c
  411637:	cmp    dh,0x60
  41163a:	dec    esi
  41163b:	sbb    eax,0xfce4cd3a
  411640:	pop    ds
  411641:	pop    esi
  411642:	lahf   
  411643:	dec    ecx
  411644:	sbb    DWORD PTR [ebp-0x5b08a1fa],ebp
  41164a:	fild   QWORD PTR [esi-0x17604237]
  411650:	sahf   
  411651:	xor    BYTE PTR [ecx-0x6271f3cb],bh
  411657:	ja     0x41167d
  411659:	popf   
  41165a:	adc    eax,edi
  41165c:	sbb    eax,0xde10b1a4
  411661:	mov    bl,0xd0
  411663:	(bad)
  411668:	cmp    DWORD PTR [esi+eiz*8-0x76],ebp
  41166c:	or     eax,DWORD PTR [ebx-0x49]
  41166f:	jecxz  0x411691
  411671:	repz xor DWORD PTR [ecx],ebx
  411674:	xchg   esi,eax
  411675:	jns    0x4116a7
  411677:	popf   
  411678:	mov    edx,DWORD PTR [eax]
  41167a:	and    eax,0xf925c664
  41167f:	arpl   WORD PTR [eax+0x49],cx
  411682:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411684:	adc    al,BYTE PTR [eax+0x78]
  411687:	add    DWORD PTR [ebx+edi*8],esi
  41168a:	mov    eax,0x8d6f2ae
  41168f:	jg     0x4116a2
  411691:	mov    ecx,0x56a4193
  411696:	int3   
  411697:	arpl   WORD PTR [edi],sp
  411699:	pop    ebp
  41169a:	stc    
  41169b:	mov    bl,0xc8
  41169d:	jp     0x41162d
  41169f:	ret    0x662f
  4116a2:	adc    eax,0xbfa9b5a0
  4116a7:	add    BYTE PTR [esi+0x5db0087c],bl
  4116ad:	jmp    0x88489219
  4116b2:	mov    ah,BYTE PTR [ebx]
  4116b4:	imul   edx,DWORD PTR [ebx-0x40f9ad70],0x54e7eadd
  4116be:	push   ecx
  4116bf:	inc    eax
  4116c0:	pop    esp
  4116c1:	bound  eax,QWORD PTR [ebp-0x725b758f]
  4116c7:	jl     0x4116c0
  4116c9:	push   ds
  4116ca:	xchg   ebp,eax
  4116cb:	xor    al,bh
  4116cd:	dec    edi
  4116ce:	sbb    BYTE PTR [ebx+edi*2+0x4a],bh
  4116d2:	jbe    0x411751
  4116d4:	popa   
  4116d5:	pop    ds
  4116d6:	sbb    ebp,0xffffffd7
  4116d9:	xchg   ebp,eax
  4116da:	not    ebx
  4116dc:	inc    eax
  4116dd:	cmp    BYTE PTR [eax-0x5d],ch
  4116e0:	add    al,0xff
  4116e2:	mov    edx,0x2bfc54b8
  4116e7:	outs   dx,BYTE PTR ds:[esi]
  4116e8:	mov    WORD PTR [esi],?
  4116ea:	rcl    BYTE PTR [esi],cl
  4116ec:	mulps  xmm5,XMMWORD PTR [ebx-0x2e]
  4116f0:	fstp   QWORD PTR [ecx+0x64f4d034]
  4116f6:	pop    ebp
  4116f7:	xchg   ecx,eax
  4116f8:	pop    es
  4116f9:	cli    
  4116fa:	test   BYTE PTR fs:[edx-0x40ea58d1],ah
  411701:	sub    DWORD PTR [edi+ebx*8-0x2b636141],ecx
  411708:	mov    ds,WORD PTR [edi+0x3e]
  41170b:	xor    DWORD PTR [edx+0x41],ebx
  41170e:	fcomi  st,st(7)
  411710:	adc    esp,DWORD PTR [eax]
  411712:	gs sti 
  411714:	pop    esp
  411715:	out    0x23,eax
  411717:	(bad)  
  411718:	jno    0x41171a
  41171a:	push   0x36a51677
  41171f:	mov    ebx,0xbddc5d6
  411724:	inc    ebp
  411725:	add    cl,dl
  411727:	test   BYTE PTR [eax+0xf],0xf6
  41172b:	cmp    bh,ah
  41172d:	pop    edi
  41172e:	push   ebp
  41172f:	dec    ebp
  411730:	jns    0x4117ad
  411732:	sub    ebx,edx
  411734:	icebp  
  411735:	prefetch (bad)
  411736:	or     eax,0x2ede5ac4
  41173b:	mov    cl,0xdf
  41173d:	jecxz  0x4116d3
  41173f:	xor    DWORD PTR ds:0x11cd1fa9,edi
  411745:	aam    0xc4
  411747:	sbb    al,BYTE PTR [esi]
  411749:	mov    esi,0x2e10fc37
  41174e:	sub    BYTE PTR [ecx],ah
  411750:	push   esi
  411751:	mov    al,0x4d
  411753:	outs   dx,BYTE PTR ds:[esi]
  411754:	cs ret 
  411756:	mov    esp,DWORD PTR [ebx-0x5f67547c]
  41175c:	loop   0x411719
  41175e:	cmp    ch,BYTE PTR [edx-0x4d148c4d]
  411764:	out    dx,eax
  411765:	fdiv   DWORD PTR fs:[ecx-0x7c65a395]
  41176c:	push   ss
  41176d:	retf   0x7fcd
  411770:	or     ecx,ebx
  411772:	loop   0x4117cd
  411774:	jg     0x411793
  411776:	popf   
  411777:	fidiv  DWORD PTR [ebx-0x23]
  41177a:	fcomp  st(2)
  41177c:	test   DWORD PTR [ebx+0x562d7cf],esp
  411782:	add    dh,cl
  411784:	fidivr DWORD PTR [esi+0x1c]
  411787:	imul   eax,DWORD PTR [ebx+0x29de40a6],0xfe80d393
  411791:	call   0x7494ad61
  411796:	retf   0x5481
  411799:	sbb    al,0x32
  41179b:	test   BYTE PTR [ebp+0x47fcef6e],cl
  4117a1:	ror    BYTE PTR [ebx],1
  4117a3:	or     BYTE PTR [esi-0x6c],ch
  4117a6:	rol    DWORD PTR [esp+ecx*2+0x61],0xc1
  4117ab:	imul   ecx,DWORD PTR [ebp-0x42],0x2d633bec
  4117b2:	add    esi,DWORD PTR [eax+0x16556481]
  4117b8:	arpl   WORD PTR [eiz*8-0x4fd12c8b],sp
  4117bf:	jo     0x411823
  4117c1:	ins    BYTE PTR es:[edi],dx
  4117c2:	(bad)  
  4117c3:	outs   dx,BYTE PTR ds:[esi]
  4117c4:	push   ss
  4117c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117c6:	sbb    eax,0xa6d83bba
  4117cb:	inc    ebp
  4117cc:	pop    ds
  4117cd:	(bad)  
  4117cf:	fsubr  QWORD PTR [ebx+eax*2]
  4117d2:	in     al,dx
  4117d3:	std    
  4117d4:	pop    ebp
  4117d5:	push   ds
  4117d6:	and    bl,BYTE PTR [ecx]
  4117d8:	jne    0x4117a1
  4117da:	cmp    eax,0xc07a3786
  4117df:	es inc edx
  4117e1:	dec    eax
  4117e2:	inc    ebp
  4117e3:	xor    DWORD PTR [eax+0x10],edi
  4117e6:	mov    ds:0x58a64cc3,eax
  4117eb:	icebp  
  4117ec:	in     al,dx
  4117ed:	dec    ebx
  4117ee:	pop    ds
  4117ef:	sbb    DWORD PTR [ebx],esi
  4117f1:	inc    eax
  4117f2:	sub    al,0x88
  4117f4:	fisub  WORD PTR [ebx]
  4117f6:	sbb    cl,BYTE PTR [esp+ebx*8-0x1d2538b7]
  4117fd:	clc    
  4117fe:	sub    DWORD PTR [edx+edi*8],ebp
  411801:	retf   
  411802:	out    dx,al
  411803:	jae    0x4117d4
  411805:	stos   DWORD PTR es:[edi],eax
  411806:	mov    dl,0x49
  411808:	jg     0x411863
  41180a:	mov    esp,0xbba3ea0a
  41180f:	jb     0x4117ff
  411811:	mov    ebx,0x4268b60c
  411816:	mov    esp,0xeabbc90f
  41181b:	dec    ecx
  41181c:	pop    eax
  41181d:	fisttp WORD PTR [esi+0x64]
  411820:	add    DWORD PTR [edx+eax*1+0x1be571d9],edi
  411827:	jnp    0x411879
  411829:	dec    edi
  41182a:	rep outs dx,BYTE PTR ds:[esi]
  41182c:	push   edx
  41182d:	jge    0x411800
  41182f:	adc    dl,BYTE PTR [ebp+0x40]
  411832:	ins    DWORD PTR es:[edi],dx
  411833:	fdivp  st(7),st
  411835:	cwde   
  411836:	xor    cl,BYTE PTR [eax-0x4f01b457]
  41183c:	ds add eax,0x2bf7a29b
  411842:	cmp    BYTE PTR [edi+0x17],dl
  411845:	mov    al,0x62
  411847:	add    eax,DWORD PTR [esi-0x2d39e17a]
  41184d:	sar    DWORD PTR [ebx],1
  41184f:	add    BYTE PTR [ebx-0x7f2884ba],bh
  411855:	(bad)  
  411856:	push   ss
  411857:	jl     0x411869
  411859:	add    BYTE PTR [eax],ah
  41185b:	adc    esp,DWORD PTR [edx+eiz*4-0x64]
  41185f:	sbb    esp,DWORD PTR [esi-0x1d]
  411862:	pushf  
  411863:	adc    BYTE PTR [ecx],bh
  411865:	dec    edi
  411866:	jmp    0x411822
  411868:	mov    ebp,0x9de8284f
  41186d:	or     al,BYTE PTR [esi+0xc]
  411870:	jno    0x411833
  411872:	repnz xchg edx,eax
  411874:	sub    BYTE PTR [esi-0x7],0xd1
  411878:	out    0xa4,eax
  41187a:	dec    ebp
  41187b:	xor    al,0x4d
  41187d:	popf   
  41187e:	ins    BYTE PTR es:[edi],dx
  41187f:	push   ds
  411880:	fisubr DWORD PTR [edi]
  411882:	cmp    al,0x25
  411884:	or     DWORD PTR [edx],esi
  411886:	pop    ss
  411887:	or     ebp,ebx
  411889:	jae    0x411822
  41188b:	or     DWORD PTR [ecx+ebp*4],eax
  41188e:	push   esi
  41188f:	cmc    
  411890:	xchg   DWORD PTR [esi+0x3228b778],ebx
  411896:	cdq    
  411897:	pop    eax
  411898:	clc    
  411899:	call   FWORD PTR [edx+ebp*8-0x3ce63c11]
  4118a0:	ret    0xe24
  4118a3:	add    al,0x4e
  4118a5:	adc    al,BYTE PTR [eax+0x4a]
  4118a8:	pop    edi
  4118a9:	dec    esp
  4118aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118ab:	gs xchg edx,eax
  4118ad:	fldcw  WORD PTR [ecx-0x36]
  4118b0:	fisub  DWORD PTR [edx-0x41]
  4118b3:	gs mov edx,0x736afe90
  4118b9:	xchg   ebp,eax
  4118ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118bb:	sub    edx,ebx
  4118bd:	pop    eax
  4118be:	ins    DWORD PTR es:[edi],dx
  4118bf:	push   ecx
  4118c0:	pushf  
  4118c1:	jnp    0x411912
  4118c3:	adc    edi,DWORD PTR [edi+ecx*8]
  4118c6:	mov    ebp,0xfef3f606
  4118cb:	out    dx,al
  4118cc:	into   
  4118cd:	add    eax,0xeed138eb
  4118d2:	mov    ah,0x2d
  4118d4:	std    
  4118d5:	pushf  
  4118d6:	dec    ebx
  4118d7:	add    dh,BYTE PTR [edx-0x10f3b348]
  4118dd:	adc    eax,0xa2693c4e
  4118e2:	mov    DWORD PTR fs:[esi],esp
  4118e5:	mov    ebx,0xf607523d
  4118ea:	and    eax,0x6655d131
  4118ef:	dec    edx
  4118f0:	das    
  4118f1:	sub    dl,bh
  4118f3:	faddp  st(0),st
  4118f5:	push   ebx
  4118f6:	mov    dh,0xe8
  4118f8:	sbb    eax,0xd596ecfd
  4118fd:	jmp    0x941dc608
  411902:	pop    es
  411903:	cs (bad) 
  411905:	cmp    ebx,edx
  411907:	rcr    BYTE PTR [edi-0x11a14c8a],cl
  41190d:	fldcw  WORD PTR [ebp+0x3524f5e4]
  411913:	jo     0x4118b7
  411915:	fstp   DWORD PTR [edi-0x1]
  411918:	xor    ax,0xd9d1
  41191c:	jbe    0x411982
  41191e:	and    eax,DWORD PTR [esi+0x7c6ef8f9]
  411924:	add    DWORD PTR ds:0x9b4dcffb,edi
  41192a:	int    0xc7
  41192c:	push   ecx
  41192d:	xchg   DWORD PTR [eax-0x1946875d],edi
  411933:	in     eax,0x99
  411935:	sbb    cl,BYTE PTR [edi-0x4bf7754]
  41193b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41193c:	mov    al,0x7b
  41193e:	sti    
  41193f:	fadd   QWORD PTR [edx-0x2aaed23a]
  411945:	out    0xd0,al
  411947:	mov    al,0x57
  411949:	or     DWORD PTR [eax+ecx*2],0xffffffa0
  41194d:	aad    0x90
  41194f:	(bad)  
  411950:	sbb    BYTE PTR ds:0x8991e6ae,0x47
  411957:	xchg   BYTE PTR [esi+0x11],al
  41195a:	lods   eax,DWORD PTR ds:[esi]
  41195b:	fld    DWORD PTR ds:0xed58314a
  411961:	cmc    
  411962:	or     BYTE PTR [ecx+ecx*4-0x7c99dec9],al
  411969:	hlt    
  41196a:	cmp    DWORD PTR [ecx-0x4b75cd33],esi
  411970:	(bad)  
  411971:	mov    eax,0x58a60c96
  411976:	mov    eax,ds:0x16a1c454
  41197b:	inc    ebx
  41197c:	xor    eax,0x3390737e
  411981:	test   edi,eax
  411983:	out    0xc6,eax
  411985:	and    dl,BYTE PTR [eax-0x1d]
  411988:	push   edx
  411989:	sub    ebx,edi
  41198b:	(bad)  
  41198c:	mov    eax,0xe74db5e0
  411991:	int    0x3b
  411993:	jl     0x4119bc
  411995:	lds    ebx,FWORD PTR [edx]
  411997:	or     esp,DWORD PTR [esi]
  411999:	mov    ds,esi
  41199b:	arpl   WORD PTR [eax-0x69a092f3],dx
  4119a1:	pop    ebp
  4119a2:	bound  ecx,QWORD PTR [esi+edi*2-0x50c5134f]
  4119a9:	jo     0x411a11
  4119ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119ac:	mov    eax,ds:0xed5fbd75
  4119b1:	pop    ds
  4119b2:	and    DWORD PTR [edx-0x6a],esi
  4119b5:	test   al,0xf6
  4119b7:	ja     0x41198f
  4119b9:	test   BYTE PTR [edx-0x2f],ch
  4119bc:	retf   0x229e
  4119bf:	inc    ebx
  4119c0:	or     ah,BYTE PTR [ebx]
  4119c2:	cmp    al,0xaa
  4119c4:	add    dl,BYTE PTR [ecx-0x67]
  4119c7:	fucomp st(3)
  4119c9:	or     BYTE PTR [edx+esi*2-0x3b],dh
  4119cd:	or     al,0xbd
  4119cf:	inc    ebx
  4119d0:	or     al,BYTE PTR [edi+0x3a2f7bc2]
  4119d6:	repnz sti 
  4119d8:	xor    esi,DWORD PTR [ebx+esi*1]
  4119db:	lods   eax,DWORD PTR ds:[esi]
  4119dc:	popf   
  4119dd:	sti    
  4119de:	xchg   esi,eax
  4119df:	(bad)  
  4119e0:	xor    ecx,DWORD PTR [esi+ecx*4-0xbf66db7]
  4119e7:	mov    ds:0xb42a293,eax
  4119ec:	shl    DWORD PTR [edi-0x4eac7802],cl
  4119f2:	inc    edx
  4119f3:	jmp    0xafa1c17b
  4119f8:	adc    al,0x96
  4119fa:	add    esp,DWORD PTR [edi-0x59]
  4119fd:	ds mov al,0x17
  411a00:	xor    eax,0x29a62edb
  411a05:	(bad)  
  411a06:	xor    ebx,edx
  411a08:	push   0x8b08558b
  411a0d:	pop    ebp
  411a0e:	test   al,0x81
  411a10:	ret    0x8f8
  411a13:	push   edi
  411a14:	add    BYTE PTR [edi],cl
  411a16:	scas   eax,DWORD PTR es:[edi]
  411a17:	ror    DWORD PTR [ecx+0x558ba855],cl
  411a1d:	or     BYTE PTR [ebx-0x3d7e53a3],cl
  411a23:	(bad)  
  411a25:	add    BYTE PTR fs:[ebx],cl
  411a28:	ror    DWORD PTR [ecx+0x558bac55],cl
  411a2e:	or     BYTE PTR [ebx-0x2efc4fa3],cl
  411a34:	xor    edx,ebx
  411a36:	mov    DWORD PTR [ebp-0x50],edx
  411a39:	mov    edx,DWORD PTR [ebp+0x8]
  411a3c:	mov    ebx,DWORD PTR [ebp-0x4c]
  411a3f:	add    edx,edi
  411a41:	and    edx,ebx
  411a43:	mov    DWORD PTR [ebp-0x4c],edx
  411a46:	mov    edx,DWORD PTR [ebp+0x8]
  411a49:	mov    ebx,DWORD PTR [ebp-0x48]
  411a4c:	lea    edx,[ebx+edx*1+0x241fc1f]
  411a53:	mov    DWORD PTR [ebp-0x48],edx
  411a56:	mov    edx,DWORD PTR [ebp+0x8]
  411a59:	mov    ebx,0xfa5e15e2
  411a5e:	sub    ebx,edx
  411a60:	add    ebx,DWORD PTR [ebp-0x44]
  411a63:	mov    DWORD PTR [ebp-0x44],ebx
  411a66:	mov    edx,DWORD PTR [ebp+0x8]
  411a69:	xor    edx,eax
  411a6b:	add    edx,esi
  411a6d:	jne    0x40f670
  411a73:	mov    edx,DWORD PTR [ebp-0xc]
  411a76:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  411a7d:	mov    bl,BYTE PTR [ebp-0x1]
  411a80:	cmp    dl,bl
  411a82:	je     0x413ee6
  411a88:	mov    ecx,DWORD PTR [ebp-0x5c]
  411a8b:	mov    edx,DWORD PTR [ebp-0xc]
  411a8e:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  411a95:	mov    ebx,DWORD PTR [ebp+0xc]
  411a98:	xor    ecx,eax
  411a9a:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e0]
  411aa1:	jne    0x418726
  411aa7:	mov    ecx,DWORD PTR [ebp-0x5c]
  411aaa:	mov    edx,DWORD PTR [ebp+0xc]
  411aad:	xor    ecx,eax
  411aaf:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e0]
  411ab7:	mov    edx,DWORD PTR [ebp-0x18]
  411aba:	xor    edx,eax
  411abc:	add    edx,esi
  411abe:	cmp    ecx,edx
  411ac0:	mov    ecx,DWORD PTR [ebp-0x14]
  411ac3:	mov    DWORD PTR [ebp+0x8],ecx
  411ac6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ac9:	je     0x41abb4
  411acf:	xor    ecx,eax
  411ad1:	add    ecx,esi
  411ad3:	mov    ecx,0x242ebed
  411ad8:	je     0x4162f4
  411ade:	mov    edx,DWORD PTR [ebp+0x8]
  411ae1:	mov    ebx,DWORD PTR [ebp-0x8]
  411ae4:	xor    edx,eax
  411ae6:	xor    ebx,eax
  411ae8:	sub    edx,ebx
  411aea:	sub    edx,esi
  411aec:	xor    edx,eax
  411aee:	mov    DWORD PTR [ebp+0x8],edx
  411af1:	mov    edx,DWORD PTR [ebp+0x8]
  411af4:	mov    ebx,DWORD PTR [ebp-0x58]
  411af7:	add    edx,0x5708f8
  411afd:	imul   edx,ebx
  411b00:	mov    DWORD PTR [ebp-0x58],edx
  411b03:	mov    edx,DWORD PTR [ebp+0x8]
  411b06:	mov    ebx,DWORD PTR [ebp-0x54]
  411b09:	add    edx,0x64f8da
  411b0f:	or     edx,ebx
  411b11:	mov    DWORD PTR [ebp-0x54],edx
  411b14:	mov    edx,DWORD PTR [ebp+0x8]
  411b17:	mov    ebx,DWORD PTR [ebp-0x50]
  411b1a:	add    edx,ecx
  411b1c:	xor    edx,ebx
  411b1e:	mov    DWORD PTR [ebp-0x50],edx
  411b21:	mov    edx,DWORD PTR [ebp+0x8]
  411b24:	mov    ebx,DWORD PTR [ebp-0x4c]
  411b27:	add    edx,edi
  411b29:	and    edx,ebx
  411b2b:	mov    DWORD PTR [ebp-0x4c],edx
  411b2e:	mov    edx,DWORD PTR [ebp+0x8]
  411b31:	mov    ebx,DWORD PTR [ebp-0x48]
  411b34:	lea    edx,[ebx+edx*1+0x241fc1f]
  411b3b:	mov    DWORD PTR [ebp-0x48],edx
  411b3e:	mov    edx,DWORD PTR [ebp+0x8]
  411b41:	mov    ebx,0xfa5e15e2
  411b46:	sub    ebx,edx
  411b48:	add    ebx,DWORD PTR [ebp-0x44]
  411b4b:	mov    DWORD PTR [ebp-0x44],ebx
  411b4e:	mov    edx,DWORD PTR [ebp+0x8]
  411b51:	xor    edx,eax
  411b53:	add    edx,esi
  411b55:	jne    0x411ade
  411b5b:	jmp    0x4162f4
  411b60:	jmp    0x413ee6
  411b65:	out    0x82,al
  411b67:	push   es
  411b68:	and    eax,0x81c5a506
  411b6d:	outs   dx,BYTE PTR ds:[esi]
  411b6e:	fs sub eax,0xb2e9a8ed
  411b74:	outs   dx,BYTE PTR ds:[esi]
  411b75:	cs scas al,BYTE PTR es:[edi]
  411b77:	jp     0x411bf3
  411b79:	add    DWORD PTR [edi+0x7a],ebx
  411b7c:	jp     0x411b4c
  411b7e:	jl     0x411ba6
  411b80:	push   cs
  411b81:	sub    dh,BYTE PTR [ebx]
  411b83:	popa   
  411b84:	das    
  411b85:	mov    ds:0xe005bf05,al
  411b8a:	dec    ebx
  411b8b:	test   eax,0x32e82304
  411b90:	push   ebx
  411b91:	mov    eax,0x985ba017
  411b96:	jg     0x411b51
  411b98:	out    dx,eax
  411b99:	fistp  QWORD PTR [ebx]
  411b9b:	pop    ebx
  411b9c:	fiadd  DWORD PTR [edx+eiz*2+0xd]
  411ba0:	jmp    0x6fb:0x3e2c043
  411ba7:	jle    0x411c06
  411ba9:	aaa    
  411baa:	lods   eax,DWORD PTR ds:[esi]
  411bab:	sbb    ebx,DWORD PTR [esp+eax*4-0x4a]
  411baf:	push   cs
  411bb0:	je     0x411b84
  411bb2:	push   cs
  411bb3:	push   eax
  411bb4:	add    al,0xb6
  411bb6:	fwait
  411bb7:	icebp  
  411bb8:	scas   al,BYTE PTR es:[edi]
  411bb9:	jg     0x411c2f
  411bbb:	cmp    esp,esi
  411bbd:	sbb    al,0x8f
  411bbf:	loopne 0x411ba1
  411bc1:	mov    ch,0xd2
  411bc3:	stc    
  411bc4:	pop    ss
  411bc5:	clc    
  411bc6:	sub    eax,0x2a6e47dd
  411bcb:	push   cs
  411bcc:	hlt    
  411bcd:	sar    BYTE PTR [esi],1
  411bcf:	test   BYTE PTR [ebx+ebp*4+0x7d],bl
  411bd3:	dec    esi
  411bd4:	xlat   BYTE PTR ds:[ebx]
  411bd5:	inc    edi
  411bd6:	test   al,0xc6
  411bd8:	idiv   DWORD PTR [ecx-0x3657da24]
  411bde:	sbb    BYTE PTR [esi],dl
  411be0:	imul   eax,DWORD PTR [edx],0x100bed8
  411be6:	cs inc ecx
  411be8:	push   edx
  411be9:	ret    
  411bea:	shr    edi,0xfe
  411bed:	ins    DWORD PTR es:[edi],dx
  411bee:	pop    es
  411bef:	ja     0x411bce
  411bf1:	aad    0xd
  411bf3:	and    ecx,DWORD PTR [ebp+0x22]
  411bf6:	les    ebp,FWORD PTR [esi-0x769ebdc6]
  411bfc:	pop    esp
  411bfd:	sub    eax,0xd0489dc1
  411c02:	jecxz  0x411c1d
  411c04:	popa   
  411c05:	pop    ebp
  411c06:	stc    
  411c07:	das    
  411c08:	adc    BYTE PTR [eax-0x5234ca87],ah
  411c0e:	(bad)  
  411c0f:	popa   
  411c10:	cmp    DWORD PTR [ecx+0x4516ed45],ecx
  411c16:	mov    ebx,0x959f45e4
  411c1b:	pop    esi
  411c1c:	js     0x411ba4
  411c1e:	pop    esp
  411c1f:	ins    BYTE PTR es:[edi],dx
  411c20:	sbb    eax,0xff279160
  411c25:	jp     0x411bb4
  411c27:	nop
  411c28:	test   BYTE PTR [ebx+eax*4+0x19],ch
  411c2c:	push   esp
  411c2d:	test   BYTE PTR [ebx+0x6c],0x35
  411c31:	inc    eax
  411c32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c33:	add    BYTE PTR [edx+0x22d47f3a],dh
  411c39:	and    al,0x12
  411c3b:	(bad)  
  411c3d:	mov    ?,edx
  411c3f:	out    0xa1,al
  411c41:	lahf   
  411c42:	jmp    0x2f9ddad2
  411c47:	sahf   
  411c48:	mov    eax,ds:0x3c77d7c4
  411c4d:	push   ecx
  411c4e:	rcl    BYTE PTR [ebp-0x3d],0x32
  411c52:	dec    ebx
  411c53:	loopne 0x411cb7
  411c55:	add    BYTE PTR [eax-0x22],dh
  411c58:	sub    al,ch
  411c5a:	fwait
  411c5b:	sbb    eax,0x2834cacc
  411c60:	stos   BYTE PTR es:[edi],al
  411c61:	ret    
  411c62:	and    dl,dh
  411c64:	push   ss
  411c65:	jo     0x411c14
  411c67:	pop    edi
  411c68:	dec    ecx
  411c69:	add    eax,0xcc816c89
  411c6e:	es push edx
  411c70:	out    dx,al
  411c71:	dec    eax
  411c72:	dec    esi
  411c73:	xlat   BYTE PTR ds:[ebx]
  411c74:	cmc    
  411c75:	dec    esp
  411c76:	scas   al,BYTE PTR es:[edi]
  411c77:	mov    ?,edx
  411c79:	js     0x411c74
  411c7b:	repnz enter 0x39c8,0x20
  411c80:	add    BYTE PTR [esi-0x14ca4c23],al
  411c86:	call   0x37f4ec84
  411c8b:	into   
  411c8c:	(bad)  
  411c8d:	aad    0x47
  411c8f:	call   0x862744fa
  411c94:	add    eax,0xd10befd1
  411c99:	xchg   BYTE PTR [eax+ebp*1-0x470e1d99],bh
  411ca0:	cld    
  411ca1:	sahf   
  411ca2:	inc    ecx
  411ca3:	mov    edx,0x6b2316e9
  411ca8:	or     DWORD PTR [eax+0x351129d3],ecx
  411cae:	(bad)  
  411caf:	cmc    
  411cb0:	xchg   esp,eax
  411cb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cb3:	out    0x4e,al
  411cb5:	into   
  411cb6:	add    BYTE PTR [esi-0x2a00a91c],ah
  411cbc:	call   FWORD PTR [ecx-0x4519cb5a]
  411cc2:	outs   dx,DWORD PTR ds:[esi]
  411cc3:	push   edi
  411cc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cc5:	and    bh,0x5c
  411cc8:	leave  
  411cc9:	jp     0x411cf9
  411ccb:	sbb    BYTE PTR [esi+0x4d],0xce
  411ccf:	out    0x72,eax
  411cd1:	icebp  
  411cd2:	jg     0x411d3c
  411cd4:	sub    ebp,DWORD PTR [esi]
  411cd6:	cld    
  411cd7:	xchg   BYTE PTR [esi-0x4],bl
  411cda:	cmc    
  411cdb:	jne    0x411cc1
  411cdd:	enter  0x3024,0x9b
  411ce1:	and    DWORD PTR [ebx+edx*8],esp
  411ce4:	fwait
  411ce5:	daa    
  411ce6:	(bad)  
  411ce7:	sti    
  411ce8:	xor    eax,0x798270d7
  411ced:	les    eax,FWORD PTR ss:[eax]
  411cf0:	lock pop edx
  411cf2:	cmc    
  411cf3:	(bad)  
  411cf4:	fnstenv [esi]
  411cf6:	mov    al,ds:0x4e5aaed0
  411cfb:	pop    edx
  411cfc:	push   esi
  411cfd:	popf   
  411cfe:	shl    esp,0xdb
  411d01:	jp     0x411d81
  411d03:	test   eax,0x24f501ce
  411d08:	lahf   
  411d09:	popa   
  411d0a:	pop    ecx
  411d0b:	mov    ?,WORD PTR [ebp+ebp*1+0x18]
  411d0f:	in     eax,dx
  411d10:	lods   al,BYTE PTR ds:[esi]
  411d11:	loope  0x411cbe
  411d13:	pop    ss
  411d14:	xor    eax,0x7c17fe6f
  411d19:	(bad)  
  411d1b:	cmp    eax,0xffffffd3
  411d1e:	gs inc ebp
  411d20:	cmp    DWORD PTR [ebx+ecx*1+0x32],eax
  411d24:	shl    BYTE PTR [eax],0xe4
  411d27:	(bad)  
  411d28:	pop    edx
  411d29:	inc    eax
  411d2a:	and    cl,BYTE PTR [ecx+0x11a18b1c]
  411d30:	mov    ds:0x2c15899,al
  411d35:	test   eax,0x7aa0514f
  411d3a:	mov    fs,WORD PTR [edi-0x35]
  411d3d:	pop    ds
  411d3e:	lods   al,BYTE PTR ds:[esi]
  411d3f:	cmc    
  411d40:	shr    DWORD PTR [eax],1
  411d42:	dec    edi
  411d43:	inc    esp
  411d44:	lock shl esp,1
  411d47:	sbb    BYTE PTR [ecx+0x22],dl
  411d4a:	nop
  411d4b:	jmp    0x9595:0x78a996a2
  411d52:	mov    BYTE PTR [ebx-0x5a],ch
  411d55:	push   0xffffffb3
  411d57:	shr    DWORD PTR [ebp*8+0x5cf8525f],1
  411d5e:	jbe    0x411d90
  411d60:	imul   ebx,DWORD PTR [edx-0xe9ef06f],0x9
  411d67:	mov    dh,0xaf
  411d69:	cmp    eax,0x4046b779
  411d6e:	fidiv  DWORD PTR [edx]
  411d70:	lods   al,BYTE PTR ds:[esi]
  411d71:	jp     0x411dee
  411d73:	jb     0x411d5f
  411d75:	loop   0x411d71
  411d77:	test   dh,dl
  411d79:	sub    eax,0xde443efd
  411d7e:	push   ebx
  411d7f:	ret    
  411d80:	out    0x6b,eax
  411d82:	out    0xeb,al
  411d84:	hlt    
  411d85:	pop    eax
  411d86:	adc    ebx,DWORD PTR [edi+edx*2-0x633e8a4f]
  411d8d:	push   eax
  411d8e:	push   cs
  411d8f:	daa    
  411d90:	repz sub eax,0x3ab5aac8
  411d96:	imul   edx,DWORD PTR [esi],0xfffffff2
  411d99:	dec    esp
  411d9a:	pusha  
  411d9b:	xor    BYTE PTR [ebx+eax*1+0x1],0xcb
  411da0:	or     eax,0x90876423
  411da5:	xchg   ebp,eax
  411da6:	dec    eax
  411da7:	loopne 0x411d2a
  411da9:	test   al,0xe0
  411dab:	mov    dh,0x40
  411dad:	or     bh,BYTE PTR [esi+0x6f]
  411db0:	outs   dx,BYTE PTR es:[esi]
  411db2:	adc    bl,bl
  411db4:	push   ds
  411db5:	aaa    
  411db6:	out    dx,al
  411db7:	sbb    al,cl
  411db9:	iret   
  411dba:	pop    ebp
  411dbb:	and    al,BYTE PTR [edx-0x41]
  411dbe:	push   edi
  411dbf:	(bad)  
  411dc0:	mov    edi,0xf080fe20
  411dc5:	mov    esp,0x77c2f473
  411dca:	sub    eax,0x235ed74f
  411dcf:	push   es
  411dd0:	outs   dx,BYTE PTR ds:[esi]
  411dd1:	xor    eax,0xf64183ff
  411dd6:	jg     0x411d64
  411dd8:	xchg   ebx,eax
  411dd9:	push   ds
  411dda:	scas   eax,DWORD PTR es:[edi]
  411ddb:	push   DWORD PTR [edx-0xa]
  411dde:	mov    BYTE PTR [edx+0x16],bh
  411de1:	sbb    edx,DWORD PTR [ecx]
  411de3:	ror    DWORD PTR es:[eax+0x5b2720f7],0x18
  411deb:	xor    BYTE PTR [ebx-0x57],dh
  411dee:	adc    bh,BYTE PTR [esi+0x66]
  411df1:	sahf   
  411df2:	lock push 0x3e
  411df5:	rol    bl,0xae
  411df8:	repz mov ds:0xfa9b166d,eax
  411dfe:	std    
  411dff:	in     eax,0x26
  411e01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e02:	jl     0x411db2
  411e04:	xchg   ecx,eax
  411e05:	sar    DWORD PTR [edx+ebp*2-0x45e89d22],1
  411e0c:	push   esi
  411e0d:	pop    es
  411e0e:	mov    WORD PTR [ebx-0x48],gs
  411e11:	loopne 0x411e0d
  411e13:	fadd   st(6),st
  411e15:	retf   0xe765
  411e18:	xor    al,0xfb
  411e1a:	dec    edi
  411e1b:	mov    al,0xd9
  411e1d:	(bad)  
  411e1e:	aas    
  411e1f:	jb     0x411db9
  411e21:	xchg   ebp,eax
  411e22:	lods   eax,DWORD PTR ds:[esi]
  411e23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e24:	push   ebx
  411e25:	mov    edi,0xa5c6d157
  411e2a:	xchg   dh,al
  411e2c:	xlat   BYTE PTR fs:[ebx]
  411e2e:	adc    eax,0x32d177b8
  411e33:	or     eax,0x32cff0d0
  411e38:	repz das 
  411e3a:	xchg   edx,eax
  411e3b:	adc    BYTE PTR [ebx-0x7a],ah
  411e3e:	xor    BYTE PTR [edx+0x24],bh
  411e41:	addr16 (bad) 
  411e43:	and    DWORD PTR [eax-0x36],ebp
  411e46:	mov    bl,0x9c
  411e48:	pop    ecx
  411e49:	call   0xd34b:0xf4833baf
  411e50:	mov    esp,0xd66b159
  411e55:	rcr    BYTE PTR [edi],0xbc
  411e58:	jbe    0x411e69
  411e5a:	ins    DWORD PTR es:[edi],dx
  411e5b:	inc    esp
  411e5c:	sbb    bh,al
  411e5e:	dec    eax
  411e5f:	cmp    al,0xe5
  411e61:	in     al,0xa
  411e63:	and    ch,ah
  411e65:	dec    ebx
  411e66:	scas   al,BYTE PTR es:[edi]
  411e67:	inc    esp
  411e68:	out    dx,al
  411e69:	and    esp,DWORD PTR [edx+0x44]
  411e6c:	js     0x411e18
  411e6e:	xchg   ecx,eax
  411e6f:	call   FWORD PTR [ebx]
  411e71:	push   ebx
  411e72:	push   eax
  411e73:	pop    ebp
  411e74:	sahf   
  411e75:	pop    esi
  411e76:	(bad)  
  411e77:	push   ebx
  411e78:	shl    BYTE PTR [edi+0x1e],cl
  411e7b:	int3   
  411e7c:	shr    bl,cl
  411e7e:	push   edx
  411e7f:	fistp  WORD PTR [ebp-0x3a]
  411e82:	push   ss
  411e83:	mov    al,0x75
  411e85:	xbegin 0x157290ef
  411e8b:	in     eax,dx
  411e8c:	sar    edx,1
  411e8e:	mov    ah,0x4a
  411e90:	adc    DWORD PTR [eax-0x24839bf3],esp
  411e96:	ja     0x411e31
  411e98:	pop    ss
  411e99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e9a:	sub    dl,cl
  411e9c:	ror    BYTE PTR [ebp-0x5d3d2a80],1
  411ea2:	xor    BYTE PTR [eax-0x37fd4cec],bl
  411ea8:	std    
  411ea9:	pop    ebx
  411eaa:	push   ds
  411eab:	dec    edx
  411eac:	jns    0x411ec0
  411eae:	rcl    BYTE PTR [ecx],1
  411eb0:	fisub  WORD PTR [edx+esi*2+0x3b74eb4b]
  411eb7:	in     al,0xc4
  411eb9:	stos   DWORD PTR es:[edi],eax
  411eba:	dec    BYTE PTR [ebp+0x60af8d1c]
  411ec0:	inc    ebx
  411ec1:	add    al,0xfd
  411ec3:	cmp    bl,ch
  411ec5:	add    al,BYTE PTR [esi+0x6b]
  411ec8:	mov    WORD PTR es:[ebx],gs
  411ecb:	pop    ss
  411ecc:	fisub  DWORD PTR [ebp-0x333085f4]
  411ed2:	cmc    
  411ed3:	sub    edx,esp
  411ed5:	add    ebp,DWORD PTR [edx]
  411ed7:	pop    ss
  411ed8:	inc    eax
  411ed9:	jle    0x411eb8
  411edb:	rcr    ch,1
  411edd:	dec    ecx
  411ede:	push   ebx
  411edf:	adc    ebp,DWORD PTR [eax+edi*4]
  411ee2:	pop    edx
  411ee3:	or     DWORD PTR [ebx+0x389c56a8],ecx
  411ee9:	mov    ebx,0x95feb2d4
  411eee:	xchg   edi,eax
  411eef:	scas   eax,DWORD PTR es:[edi]
  411ef0:	outs   dx,DWORD PTR ds:[esi]
  411ef1:	ss out 0x89,al
  411ef4:	push   0x8f8e2cf2
  411ef9:	mov    ah,0x9d
  411efb:	adc    al,0xfa
  411efd:	sub    bl,BYTE PTR [edi]
  411eff:	out    0x47,eax
  411f01:	adc    eax,0xc5e3c6f5
  411f06:	rcr    DWORD PTR [edx],1
  411f08:	xchg   BYTE PTR [ebx+0x15],dl
  411f0b:	dec    edi
  411f0c:	hlt    
  411f0d:	mov    ds:0x2f0f1575,al
  411f12:	lock gs inc ch
  411f16:	cmp    edx,DWORD PTR [ecx]
  411f18:	jp     0x411f13
  411f1a:	fdiv   st,st(4)
  411f1c:	js     0x411f59
  411f1e:	mov    al,0xb1
  411f20:	in     al,0x80
  411f22:	mov    ds:0xeb376798,eax
  411f27:	xchg   DWORD PTR [ebp+0x66a651d],esp
  411f2d:	test   DWORD PTR [ebp+0x3685a77b],0xd74ba31c
  411f37:	shl    BYTE PTR [edx+0x35],1
  411f3a:	retf   0x1d4f
  411f3d:	dec    di
  411f3f:	push   0xffffffa1
  411f41:	push   0xffffffab
  411f43:	lods   al,BYTE PTR ds:[esi]
  411f44:	xor    BYTE PTR [ecx],al
  411f46:	or     al,0x17
  411f48:	pop    esi
  411f49:	adc    BYTE PTR [ebp+0x24],dl
  411f4c:	inc    ebx
  411f4d:	pop    esi
  411f4e:	sbb    BYTE PTR [edi-0x4f59980],bl
  411f54:	sbb    dh,dl
  411f56:	inc    edi
  411f57:	cld    
  411f58:	xor    ch,dl
  411f5a:	sahf   
  411f5b:	aam    0xd9
  411f5d:	pop    esi
  411f5e:	addr16 int3 
  411f60:	(bad)  
  411f61:	jecxz  0x411f63
  411f63:	dec    ebp
  411f64:	mov    WORD PTR [ecx-0x4b],?
  411f67:	imul   esp,DWORD PTR [esi-0x41],0x667f751c
  411f6e:	scas   al,BYTE PTR es:[edi]
  411f6f:	mov    WORD PTR [edx+0x1],ds
  411f72:	shl    bh,0x20
  411f75:	call   0x3967ede5
  411f7a:	cs js  0x411f2a
  411f7d:	ror    BYTE PTR [bp+si],cl
  411f80:	(bad)  
  411f81:	push   0xe489eca4
  411f86:	or     DWORD PTR [eax-0x50],ebp
  411f89:	not    DWORD PTR [ebx]
  411f8b:	pop    edx
  411f8c:	inc    ebx
  411f8d:	sti    
  411f8e:	loopne 0x411fb2
  411f90:	(bad)  
  411f91:	and    DWORD PTR [ecx],eax
  411f93:	jmp    0x65ebb288
  411f98:	out    0x6f,eax
  411f9a:	xor    eax,DWORD PTR [ecx+0x56386e25]
  411fa0:	outs   dx,DWORD PTR ds:[esi]
  411fa1:	jno    0x411fa8
  411fa3:	aas    
  411fa4:	imul   eax,DWORD PTR [edi+ebp*8-0xb],0xffffff90
  411fa9:	shl    DWORD PTR [edx+0x8a88a11],0xf3
  411fb0:	psrad  mm6,QWORD PTR [esi+eax*2+0x33374cfd]
  411fb8:	mov    ebp,0x6a878d1a
  411fbd:	cdq    
  411fbe:	cli    
  411fbf:	push   ecx
  411fc0:	cdq    
  411fc1:	mov    esp,0x24d5b17d
  411fc6:	jmp    0x412023
  411fc8:	fdivr  DWORD PTR [ecx+0x6b97a671]
  411fce:	or     DWORD PTR [ecx+0xe368e80],ebp
  411fd4:	push   ebp
  411fd5:	mov    ch,0x9f
  411fd7:	sub    BYTE PTR [ebx-0x484fdd8],bl
  411fdd:	iret   
  411fde:	pop    ds
  411fdf:	sub    BYTE PTR [ebx-0x294e099b],dh
  411fe5:	inc    BYTE PTR cs:[ebx-0x419e8bc]
  411fec:	repz popa 
  411fee:	push   ecx
  411fef:	jae    0x412050
  411ff1:	mov    dh,0xc6
  411ff3:	mov    BYTE PTR [bx+si-0x6],ch
  411ff7:	pop    edx
  411ff8:	mov    eax,ds:0x27558fcb
  411ffd:	out    dx,al
  411ffe:	loope  0x411f8f
  412000:	bound  eax,QWORD PTR [ecx+0x37fe99bc]
  412006:	call   0xd435b51b
  41200b:	xchg   ebx,eax
  41200c:	sub    esp,DWORD PTR [eax+edi*8+0x5500d94]
  412013:	and    esp,0xffffffdd
  412016:	xchg   ebx,eax
  412017:	ins    DWORD PTR es:[edi],dx
  412018:	fxch   st(4)
  41201a:	and    eax,0xa4e668db
  41201f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412020:	mov    ebx,0x553737a1
  412025:	out    0x3,eax
  412027:	lock pop ebx
  412029:	stos   DWORD PTR es:[edi],eax
  41202a:	ds adc eax,0x83ba9e2e
  412030:	repnz push eax
  412032:	add    ah,BYTE PTR [edi+0x2c]
  412035:	shl    DWORD PTR ds:0x123f0c9f,0xbe
  41203c:	lea    ebp,[esi+edi*4+0x52]
  412040:	clc    
  412041:	xor    BYTE PTR [ecx],al
  412043:	fild   DWORD PTR [esi-0x1abd4011]
  412049:	popa   
  41204a:	xchg   edi,eax
  41204b:	or     ah,al
  41204d:	imul   ebp,DWORD PTR [edi+0x6b],0x8d02d22e
  412054:	fild   DWORD PTR [ebp+0x5e2b4ff2]
  41205a:	sbb    ecx,esi
  41205c:	cmp    cl,0xdb
  41205f:	push   ss
  412060:	mov    ds:0x10318e8b,al
  412065:	imul   ebx,edi,0x85786f3d
  41206b:	rcr    DWORD PTR [edx+0x10f08b1e],cl
  412071:	cmp    al,0xe8
  412073:	fisttp QWORD PTR [ecx+0x7f753fef]
  412079:	dec    edi
  41207a:	repz sbb BYTE PTR [eax],cl
  41207d:	cs jle 0x412071
  412080:	xchg   edx,ebp
  412082:	(bad)  
  412083:	jb     0x4120b9
  412085:	inc    edx
  412086:	fdivr  QWORD PTR [edx+0x25]
  412089:	stos   BYTE PTR es:[edi],al
  41208a:	shl    BYTE PTR [ebp-0x16bbd61d],0x17
  412091:	scas   al,BYTE PTR es:[edi]
  412092:	mov    edx,0x17e30e9b
  412097:	inc    eax
  412098:	dec    ebx
  412099:	cmc    
  41209a:	mov    esi,0x806cebd5
  41209f:	js     0x4120ba
  4120a1:	sti    
  4120a2:	fild   DWORD PTR [edi+edi*1+0x29833ae9]
  4120a9:	es jecxz 0x412128
  4120ac:	or     al,0x87
  4120ae:	test   al,0x10
  4120b0:	gs dec esp
  4120b2:	mov    ebp,0x7f28ddc0
  4120b7:	jae    0x41205f
  4120b9:	xchg   edx,eax
  4120ba:	out    dx,eax
  4120bb:	dec    edi
  4120bc:	jg     0x41213d
  4120be:	jge    0x4120be
  4120c0:	rcl    DWORD PTR [edx],0xc6
  4120c3:	shl    DWORD PTR [ebp-0x67],1
  4120c6:	loopne 0x412074
  4120c8:	add    eax,0xed87730a
  4120cd:	loopne 0x412066
  4120cf:	sbb    eax,0x38e77cad
  4120d4:	data16 xor al,BYTE PTR [ebx-0x9]
  4120d8:	pop    esi
  4120d9:	pop    esp
  4120da:	ds aas 
  4120dc:	retf   
  4120dd:	ficom  WORD PTR [edi-0x6c]
  4120e0:	and    al,0xa2
  4120e2:	sbb    DWORD PTR [edi-0x47],eax
  4120e5:	iret   
  4120e6:	inc    esi
  4120e7:	mov    eax,ds:0x85f2b62e
  4120ec:	popa   
  4120ed:	mov    dl,0x2a
  4120ef:	sbb    BYTE PTR [edx],ch
  4120f1:	nop
  4120f2:	dec    esp
  4120f3:	aad    0x49
  4120f5:	mov    DWORD PTR [edx],ebp
  4120f7:	aaa    
  4120f8:	mov    esp,0x7fbaf737
  4120fd:	add    BYTE PTR [edx+edx*8+0x61045d51],ah
  412104:	cmp    DWORD PTR [edi+0x67],esi
  412107:	or     BYTE PTR [ecx+0x1808a6fb],cl
  41210d:	add    al,0xbe
  41210f:	jmp    0xef78:0xc71e8639
  412116:	bound  ebx,QWORD PTR [edi+0x9d09a47]
  41211c:	icebp  
  41211d:	push   edx
  41211e:	or     al,0xc2
  412120:	mov    ecx,0xd54cba3a
  412125:	inc    esp
  412126:	sub    eax,0xd856d652
  41212b:	xchg   DWORD PTR [ecx-0xa],ecx
  41212e:	inc    DWORD PTR [eax+0x0]
  412131:	inc    ebx
  412132:	xchg   ebx,eax
  412133:	call   0x5620ea0e
  412138:	mov    ds:0x4556e754,eax
  41213d:	jnp    0x41215b
  41213f:	xchg   edi,eax
  412140:	fld    DWORD PTR [esi+edx*2-0x4b8538e5]
  412147:	fwait
  412148:	(bad)  
  412149:	mov    edi,0x280e1717
  41214e:	cwde   
  41214f:	aad    0xd1
  412151:	lods   al,BYTE PTR ds:[esi]
  412152:	aaa    
  412153:	or     al,0xd
  412155:	retf   0x52b1
  412158:	nop
  412159:	aad    0x96
  41215b:	ja     0x41215a
  41215d:	add    esi,DWORD PTR fs:[eax]
  412160:	inc    esi
  412161:	mov    ds:0xc139c2eb,al
  412166:	pusha  
  412167:	cmc    
  412168:	mov    dl,0x8
  41216a:	fld    TBYTE PTR [eax-0x847fac4]
  412170:	sub    DWORD PTR [edi+0xb],ebp
  412173:	adc    al,0xec
  412175:	imul   esp,ebp,0x63
  412178:	xor    dh,dl
  41217a:	dec    eax
  41217b:	(bad)  
  41217c:	in     al,dx
  41217d:	in     eax,0x8d
  41217f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412180:	(bad)  
  412181:	das    
  412182:	xchg   BYTE PTR [ecx-0x20],cl
  412185:	adc    BYTE PTR [ebx+0x4b],0x45
  412189:	jmp    0x4121af
  41218b:	inc    ebp
  41218c:	or     edx,eax
  41218e:	xchg   esp,ecx
  412190:	ja     0x4121ca
  412192:	xchg   ebp,eax
  412193:	pop    eax
  412194:	mov    al,ds:0x3a48c929
  412199:	xor    bh,BYTE PTR [eax+0x64]
  41219c:	mov    BYTE PTR [ebx+esi*8],0xa7
  4121a0:	adc    BYTE PTR [esi-0x2d],bl
  4121a3:	scas   eax,DWORD PTR es:[edi]
  4121a4:	jae    0x412201
  4121a6:	xor    al,BYTE PTR [eax]
  4121a8:	push   edi
  4121a9:	xlat   BYTE PTR ds:[ebx]
  4121aa:	mov    BYTE PTR [esi],ah
  4121ac:	dec    ebx
  4121ad:	data16 sar BYTE PTR [ecx-0x74],1
  4121b1:	xchg   ecx,eax
  4121b2:	mov    ebx,DWORD PTR ds:0x1673cda4
  4121b8:	cwde   
  4121b9:	out    0x9a,al
  4121bb:	mov    fs,WORD PTR [ebp+eax*4+0x12887db1]
  4121c2:	outs   dx,BYTE PTR ds:[esi]
  4121c3:	inc    ebx
  4121c4:	repz retf 0x8068
  4121c8:	xor    al,0x8f
  4121ca:	iret   
  4121cb:	div    al
  4121cd:	xor    esi,DWORD PTR [esi]
  4121cf:	push   cs
  4121d0:	jns    0x4121c9
  4121d2:	ins    DWORD PTR es:[edi],dx
  4121d3:	inc    edi
  4121d4:	add    eax,0x4dc50749
  4121d9:	aad    0x23
  4121db:	cwde   
  4121dc:	dec    esp
  4121dd:	dec    edx
  4121de:	mov    cl,0x41
  4121e0:	add    bh,ah
  4121e2:	pop    edi
  4121e3:	in     al,dx
  4121e4:	nop
  4121e5:	jnp    0x41223e
  4121e7:	adc    al,0x53
  4121e9:	mov    ebp,?
  4121eb:	cmp    bl,BYTE PTR [edi+0x810bc5f]
  4121f1:	jl     0x412189
  4121f3:	imul   edx,DWORD PTR [ecx-0xf],0x1d67c31f
  4121fa:	shr    DWORD PTR [esi],0xe2
  4121fd:	ret    0x8424
  412200:	lods   eax,DWORD PTR ds:[esi]
  412201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412202:	das    
  412203:	mov    al,ds:0x92a8565
  412208:	lock push 0xfa710068
  41220e:	and    BYTE PTR ds:0xf76474a1,dh
  412214:	fdiv   DWORD PTR [ecx]
  412216:	(bad)  
  412217:	repnz fprem 
  41221a:	mov    DWORD PTR [edi],ebx
  41221c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41221d:	sbb    al,0xe1
  41221f:	iret   
  412220:	lahf   
  412221:	or     al,0xd
  412223:	(bad)
  412227:	mov    al,0x8c
  412229:	fdivr  DWORD PTR [edx-0x1788d84e]
  41222f:	jp     0x412278
  412231:	xchg   ecx,eax
  412232:	sbb    dh,BYTE PTR [esi-0x4be6a6d4]
  412238:	push   0x926d41f3
  41223d:	push   eax
  41223e:	inc    edi
  41223f:	sub    ch,BYTE PTR [ebp-0x564dedb5]
  412245:	(bad)  
  412246:	pop    ds
  412247:	lods   eax,DWORD PTR ds:[esi]
  412248:	(bad)  
  412249:	out    0xf7,al
  41224b:	out    dx,al
  41224c:	sahf   
  41224d:	dec    eax
  41224e:	je     0x412237
  412250:	pushf  
  412251:	mov    dl,0xc
  412253:	test   al,0x34
  412255:	pop    es
  412256:	sub    eax,0x8211f59c
  41225b:	xchg   edx,eax
  41225c:	call   0x6f41cbb8
  412261:	push   cs
  412262:	nop
  412263:	and    esi,DWORD PTR [edx]
  412265:	loopne 0x412273
  412267:	xchg   edi,eax
  412268:	sbb    ecx,eax
  41226a:	rcr    DWORD PTR [ebp+0x575544d1],cl
  412270:	ror    ebx,cl
  412272:	lds    esp,FWORD PTR [edx+0x2006475f]
  412278:	aad    0xf9
  41227a:	int    0xd3
  41227c:	jbe    0x4122b8
  41227e:	adc    cl,bl
  412280:	jle    0x4122d2
  412282:	pop    eax
  412283:	jp     0x4122b7
  412285:	dec    ecx
  412286:	push   es
  412287:	inc    esp
  412288:	mov    DWORD PTR [ebx+0x62],eax
  41228b:	test   BYTE PTR [eax],dh
  41228d:	push   esi
  41228e:	push   0xa7ec37e2
  412293:	leave  
  412294:	adc    BYTE PTR [ebx-0xd3c618a],dl
  41229a:	push   ebp
  41229b:	jo     0x412256
  41229d:	add    DWORD PTR [ecx-0x59],eax
  4122a0:	test   BYTE PTR [edx-0x616dc7ee],dh
  4122a6:	pop    ecx
  4122a7:	repnz sbb DWORD PTR fs:[edi-0xbf20641],edx
  4122af:	or     BYTE PTR [eax+0x2e497e08],dh
  4122b5:	xor    al,0xf2
  4122b7:	add    eax,0xee5f2b37
  4122bc:	and    DWORD PTR [edi+0x77],ebp
  4122bf:	pop    esi
  4122c0:	in     eax,dx
  4122c1:	mov    ebx,0x3a64cd32
  4122c6:	mov    WORD PTR [esi],cs
  4122c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122c9:	fistp  WORD PTR [ecx]
  4122cb:	lods   eax,DWORD PTR ds:[esi]
  4122cc:	sub    ecx,esp
  4122ce:	xchg   esi,eax
  4122cf:	or     DWORD PTR [ebp+eiz*1+0x1b],esp
  4122d3:	leave  
  4122d4:	push   edx
  4122d5:	jmp    0xafd4:0x958234f6
  4122dc:	pop    ecx
  4122dd:	lods   al,BYTE PTR ds:[esi]
  4122de:	sbb    DWORD PTR [edi],0x2496e772
  4122e4:	(bad)  
  4122e5:	mov    bh,0xbc
  4122e7:	or     edx,DWORD PTR gs:[eax]
  4122ea:	ret    0x985b
  4122ed:	add    BYTE PTR [ebx+0x4b70b861],bh
  4122f3:	and    al,0x1
  4122f5:	popa   
  4122f6:	loopne 0x412340
  4122f8:	add    edi,eax
  4122fa:	test   DWORD PTR [ebx+0xae689d8],0x59e87fc8
  412304:	imul   edx,DWORD PTR [ebp-0x71],0x756a6d0f
  41230b:	cmp    cl,bh
  41230d:	or     DWORD PTR [esi],esi
  41230f:	pushf  
  412310:	cmp    DWORD PTR [edx+0x1c],edx
  412313:	jge    0x412379
  412315:	sub    DWORD PTR [esi-0x5f325dc3],esi
  41231b:	adc    al,0x69
  41231d:	mov    bh,0xbd
  41231f:	sub    dh,bh
  412321:	push   ecx
  412322:	leave  
  412323:	dec    ebp
  412324:	loope  0x412330
  412326:	dec    edi
  412327:	pushf  
  412328:	mov    dh,0xfb
  41232a:	cwde   
  41232b:	(bad)  
  41232c:	iret   
  41232d:	xchg   BYTE PTR [ebp+0x2a7deda6],ch
  412333:	sbb    BYTE PTR [ebx+ebp*1],bh
  412336:	ffree  st(3)
  412338:	sahf   
  412339:	mov    bl,0xac
  41233b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41233c:	test   al,0x26
  41233e:	test   al,0xcd
  412340:	div    DWORD PTR [ecx-0x5c]
  412343:	outs   dx,BYTE PTR ds:[esi]
  412344:	jbe    0x4122f8
  412346:	mov    edi,eax
  412348:	cmp    BYTE PTR [eax-0x1c4b4b06],bl
  41234e:	or     dl,0x5b
  412351:	dec    ebp
  412352:	jae    0x412367
  412354:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412355:	daa    
  412356:	push   ecx
  412357:	scas   eax,DWORD PTR es:[edi]
  412358:	hlt    
  412359:	stc    
  41235a:	mov    al,ch
  41235c:	pop    DWORD PTR [edx+0x26]
  41235f:	sbb    DWORD PTR [edi+0x7],edx
  412362:	ss shl ecx,0x2c
  412366:	int3   
  412367:	fs mov ebp,0xcf606945
  41236d:	inc    ebx
  41236e:	cmp    al,0xcd
  412370:	dec    edx
  412371:	jp     0x4123ae
  412373:	les    edx,FWORD PTR [ecx-0x6cf53722]
  412379:	cmp    edx,edi
  41237b:	ret    
  41237c:	leave  
  41237d:	pop    ecx
  41237e:	jmp    0xd7eeb421
  412383:	jae    0x41230f
  412385:	vorps  xmm0,xmm4,XMMWORD PTR [ebx+0x49]
  41238a:	cmp    eax,0xebc33f1
  41238f:	xlat   BYTE PTR ds:[ebx]
  412390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412391:	mov    fs,WORD PTR [edx]
  412393:	dec    eax
  412394:	shl    BYTE PTR [ebx-0x6b],1
  412397:	sahf   
  412398:	daa    
  412399:	xor    DWORD PTR [ecx-0x38],eax
  41239c:	cs dec edx
  41239e:	mov    ebx,0x2ff0a56c
  4123a3:	cs mov ch,0x23
  4123a6:	inc    esi
  4123a7:	adc    al,0xe8
  4123a9:	xchg   DWORD PTR [ecx+0x4d8d17df],eax
  4123af:	ins    DWORD PTR es:[edi],dx
  4123b0:	jo     0x412393
  4123b2:	fadd   DWORD PTR [esi+ebx*8-0x41b123bb]
  4123b9:	sbb    bh,BYTE PTR [eax]
  4123bb:	je     0x41237c
  4123bd:	ins    BYTE PTR es:[edi],dx
  4123be:	sub    al,0xf4
  4123c0:	stos   DWORD PTR es:[edi],eax
  4123c1:	push   es
  4123c2:	(bad)  
  4123c3:	and    DWORD PTR [ebp-0x1533e73],esi
  4123c9:	sti    
  4123ca:	loopne 0x4123a7
  4123cc:	dec    esp
  4123cd:	adc    ch,BYTE PTR [esi+edi*8-0x47]
  4123d1:	ins    BYTE PTR es:[edi],dx
  4123d2:	xchg   edx,eax
  4123d3:	fsubr  DWORD PTR [eax+0x72]
  4123d6:	and    al,0xe6
  4123d8:	mov    ds:0xa09e02bd,eax
  4123dd:	iret   
  4123de:	outs   dx,BYTE PTR ds:[esi]
  4123df:	cmp    eax,0x115c2a26
  4123e4:	je     0x4123b6
  4123e6:	mov    ds,WORD PTR [edi+0x2e]
  4123e9:	mov    cl,0xd0
  4123eb:	and    ebx,DWORD PTR [ebx-0x1d]
  4123ee:	(bad)  
  4123ef:	mov    eax,0x2e3614e
  4123f4:	add    DWORD PTR [ebp+0x7d7442f6],edx
  4123fa:	jecxz  0x4123e5
  4123fc:	xchg   ebx,eax
  4123fd:	imul   esi,ebx,0xf3223604
  412403:	jns    0x4123b3
  412405:	push   ebx
  412406:	sub    al,0xe8
  412408:	cld    
  412409:	xchg   ebp,eax
  41240a:	scas   eax,DWORD PTR es:[edi]
  41240b:	push   cs
  41240c:	pop    edi
  41240d:	sbb    DWORD PTR [esi],0x8b8b0849
  412413:	mov    ecx,0xb23eddce
  412418:	arpl   WORD PTR [esi+0x37e8cad8],sp
  41241e:	mov    al,0x5e
  412420:	mov    al,ds:0xe8ed5483
  412425:	out    dx,al
  412426:	ret    
  412427:	xor    BYTE PTR [ecx-0x2ed12d0a],bl
  41242d:	mov    al,ds:0xb1424b14
  412432:	xlat   BYTE PTR ds:[ebx]
  412433:	dec    edx
  412434:	dec    esi
  412435:	retf   
  412436:	mov    DWORD PTR [eax],esi
  412438:	imul   esp,DWORD PTR [ecx-0x10ec4c92],0xfc7ef35f
  412442:	imul   eax,DWORD PTR [eax+0x3f],0x22463aee
  412449:	mov    al,0x46
  41244b:	std    
  41244c:	das    
  41244d:	test   eax,0x23668991
  412452:	and    ebp,DWORD PTR ds:0xd52f5d58
  412458:	sub    eax,0xc08d304c
  41245d:	inc    ebp
  41245e:	push   esp
  41245f:	push   ebp
  412460:	ret    
  412461:	enter  0xa854,0xd9
  412465:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412466:	adc    cl,bl
  412468:	dec    ecx
  412469:	addr16 mov cl,0x1b
  41246c:	xchg   edi,eax
  41246d:	jno    0x41243a
  41246f:	shr    DWORD PTR ds:0xf3b26a41,1
  412475:	retf   0x2cdb
  412478:	pop    ebx
  412479:	adc    al,0x7a
  41247b:	cmp    bh,BYTE PTR [eax]
  41247d:	stos   DWORD PTR es:[edi],eax
  41247e:	stos   BYTE PTR es:[edi],al
  41247f:	ret    
  412480:	xchg   esi,eax
  412481:	sub    dh,BYTE PTR [ebx+0x44]
  412484:	and    al,0x70
  412486:	sbb    DWORD PTR [ebx-0x5a],ebp
  412489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41248a:	fdivr  st,st(2)
  41248c:	scas   eax,DWORD PTR es:[edi]
  41248d:	mov    eax,ds:0xa62a4bc6
  412492:	push   cs
  412493:	xchg   BYTE PTR [edi+edx*2],bh
  412496:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412497:	loopne 0x412453
  412499:	inc    edi
  41249a:	push   edx
  41249b:	inc    edi
  41249c:	cmp    eax,0x62fa7ef
  4124a1:	ins    BYTE PTR es:[edi],dx
  4124a2:	shl    DWORD PTR [esi-0x2cadd98b],cl
  4124a8:	lea    edx,[edi+ecx*1-0x33]
  4124ac:	scas   eax,DWORD PTR es:[edi]
  4124ad:	adc    DWORD PTR [ebx+0x8709f09],esi
  4124b3:	rcr    DWORD PTR [esi+0x20],cl
  4124b6:	mov    ds:0xccc81ab0,al
  4124bb:	xchg   esi,eax
  4124bc:	pop    ecx
  4124bd:	mov    dh,0x6f
  4124bf:	fist   DWORD PTR [ebx+0x4a]
  4124c2:	sbb    DWORD PTR [ebp+0x37c575c6],ebx
  4124c8:	sub    ebp,esp
  4124ca:	sti    
  4124cb:	adc    ebx,DWORD PTR [ecx]
  4124cd:	pop    esp
  4124ce:	xchg   esp,eax
  4124cf:	sub    eax,0x838eb4f2
  4124d4:	push   ebx
  4124d5:	fiadd  DWORD PTR [ebx+0x0]
  4124d8:	call   0xbdee75fa
  4124dd:	xchg   ebx,eax
  4124de:	pop    ss
  4124df:	gs nop
  4124e1:	jp     0x4124ba
  4124e3:	imul   eax,DWORD PTR [eax-0x51adc71],0x66
  4124ea:	xchg   BYTE PTR [eax+0x42],al
  4124ed:	lods   eax,DWORD PTR ds:[esi]
  4124ee:	loopne 0x412544
  4124f0:	adc    ebp,DWORD PTR [ecx-0x5981cf64]
  4124f6:	cmp    eax,0xdc3bbb38
  4124fb:	inc    ebp
  4124fc:	cmp    al,0x26
  4124fe:	call   0x39c80f94
  412503:	jns    0x41255c
  412505:	lds    ebx,FWORD PTR [ebp+0x4e0eb36c]
  41250b:	mov    dh,bl
  41250d:	into   
  41250e:	xor    DWORD PTR [ecx],esp
  412510:	xchg   ebp,eax
  412511:	pop    ebp
  412512:	repnz dec ebx
  412514:	or     BYTE PTR [ebx+0x40e2f1b5],dl
  41251a:	mov    bh,0xb3
  41251c:	adc    BYTE PTR [edi],cl
  41251e:	adc    ah,BYTE PTR [esi-0x38]
  412521:	stos   BYTE PTR es:[edi],al
  412522:	enter  0x3273,0xca
  412526:	data16 xor BYTE PTR [esi+esi*8],dh
  41252a:	xchg   BYTE PTR [edi],dl
  41252c:	inc    ebx
  41252d:	cld    
  41252e:	push   0xffffffdf
  412530:	loope  0x41251e
  412532:	or     ch,BYTE PTR [ebp+0x6]
  412535:	sbb    eax,0x78ed3976
  41253a:	mov    esp,0xb2169f43
  41253f:	sub    edi,DWORD PTR [edi-0x4c]
  412542:	leave  
  412543:	pop    eax
  412544:	mov    ah,0xf2
  412546:	hlt    
  412547:	adc    BYTE PTR [edx+0x19b0d861],cl
  41254d:	inc    eax
  41254e:	mov    edi,0x957d39e3
  412553:	and    eax,0x7de4097e
  412558:	inc    ebx
  412559:	jne    0x41254b
  41255b:	sbb    eax,0xcfda0bfc
  412560:	jecxz  0x4125af
  412562:	mov    ah,0x6
  412564:	adc    esi,eax
  412566:	arpl   WORD PTR [ecx],bx
  412568:	fist   DWORD PTR [edx-0xb876588]
  41256e:	xor    eax,0xfedeeb56
  412573:	arpl   WORD PTR ds:0xc909df53,si
  412579:	adc    esi,DWORD PTR [edi]
  41257b:	js     0x41253a
  41257d:	dec    esp
  41257e:	sahf   
  41257f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412580:	mov    bl,0x59
  412582:	pop    eax
  412583:	mov    ebx,esi
  412585:	xchg   DWORD PTR [edx],ecx
  412587:	xchg   BYTE PTR [ebp+0x4a],ah
  41258a:	retf   0x22dc
  41258d:	add    BYTE PTR [eax+0xe8f690f],0xfe
  412594:	mov    dl,0xbf
  412596:	jno    0x4125d2
  412598:	(bad)  
  41259a:	push   esp
  41259b:	std    
  41259c:	fisttp WORD PTR [ebx]
  41259e:	arpl   dx,di
  4125a0:	jle    0x412557
  4125a2:	and    edx,edi
  4125a4:	pop    eax
  4125a5:	pushf  
  4125a6:	sub    al,0xd6
  4125a8:	adc    bl,dh
  4125aa:	push   ebp
  4125ab:	inc    edi
  4125ac:	cdq    
  4125ad:	mov    edx,0x3dbdb848
  4125b2:	js     0x412601
  4125b4:	sti    
  4125b5:	add    dh,ah
  4125b7:	sbb    dh,dh
  4125b9:	test   eax,0x24f88dc4
  4125be:	retf   0x8c18
  4125c1:	push   0xffffff80
  4125c3:	sub    ch,BYTE PTR [ebx]
  4125c5:	outs   dx,DWORD PTR ds:[esi]
  4125c6:	fistp  DWORD PTR [ebx+0x72c8afab]
  4125cc:	adc    eax,0x43da1743
  4125d1:	mov    edi,?
  4125d3:	sub    ebx,DWORD PTR [esi]
  4125d5:	mov    eax,0x60d1335
  4125da:	sbb    esi,DWORD PTR ds:0x9cfe06f7
  4125e0:	ins    DWORD PTR es:[edi],dx
  4125e1:	cmp    al,0x66
  4125e3:	push   ds
  4125e4:	mov    dh,0xa0
  4125e6:	(bad)  
  4125e7:	mov    dl,0xb3
  4125e9:	sub    ebx,DWORD PTR [eax+ecx*1+0x25e71d7a]
  4125f0:	gs inc esi
  4125f2:	or     bl,al
  4125f4:	mov    bh,0xad
  4125f6:	je     0x41266b
  4125f8:	pop    edi
  4125f9:	aaa    
  4125fa:	jb     0x4125d7
  4125fc:	and    BYTE PTR [ecx],al
  4125fe:	mov    edi,DWORD PTR [eax-0x12]
  412601:	mov    ds:0x23313e74,al
  412606:	or     dl,bh
  412608:	stos   BYTE PTR es:[edi],al
  412609:	das    
  41260a:	jmp    0x33814323
  41260f:	scas   eax,DWORD PTR es:[edi]
  412610:	lahf   
  412611:	mov    dl,0xda
  412613:	mov    eax,0xa58a4e06
  412618:	pop    ebp
  412619:	add    eax,0x1f34026e
  41261e:	popf   
  41261f:	repz mov al,0x57
  412622:	outs   dx,DWORD PTR ds:[esi]
  412623:	sbb    bh,BYTE PTR [edx-0x4c85162e]
  412629:	dec    ecx
  41262a:	or     DWORD PTR [ebx],0x4c
  41262d:	or     bh,BYTE PTR [edx-0x2b61a067]
  412633:	sbb    eax,0x577ee5c7
  412638:	sbb    bh,0x7f
  41263b:	data16 fcmovnb st,st(4)
  41263e:	dec    edx
  41263f:	test   DWORD PTR [esi-0x568b209e],edi
  412645:	cdq    
  412646:	dec    ebp
  412647:	or     DWORD PTR [eax-0x16],edi
  41264a:	das    
  41264b:	loopne 0x41266c
  41264d:	and    cl,BYTE PTR [edi-0x534f7c6f]
  412653:	inc    ebp
  412654:	inc    esp
  412655:	or     eax,DWORD PTR [ebx+0x3c2137b8]
  41265b:	(bad)  
  41265c:	fisubr DWORD PTR [edx-0x45]
  41265f:	pop    es
  412660:	sbb    al,0x57
  412662:	sti    
  412663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412664:	scas   al,BYTE PTR es:[edi]
  412665:	jg     0x412651
  412667:	repz retf 
  412669:	leave  
  41266a:	mov    BYTE PTR [ebx],ah
  41266c:	pusha  
  41266d:	lods   al,BYTE PTR ds:[esi]
  41266e:	mov    bh,0x5e
  412670:	add    al,0xab
  412672:	dec    DWORD PTR [esi+edi*8+0x435e1aff]
  412679:	or     eax,0x5061739c
  41267e:	mov    DWORD PTR [ebx+0x1b0a4488],esi
  412684:	cmp    eax,0x9aafe1ba
  412689:	add    BYTE PTR [edi+0x1],0x34
  41268d:	jp     0x41267d
  41268f:	(bad)  
  412690:	popa   
  412691:	push   ebp
  412692:	cmp    eax,DWORD PTR [edx]
  412694:	and    esp,DWORD PTR [ebx-0x6d]
  412697:	fdivr  DWORD PTR [eax-0x53]
  41269a:	and    ebp,0xffffff9a
  41269d:	retf   
  41269e:	lds    ebx,FWORD PTR [ebx+0x3c]
  4126a1:	push   ebx
  4126a2:	out    0x94,al
  4126a4:	inc    ecx
  4126a5:	mov    esi,0xf0a2b163
  4126aa:	call   0xa0dd3112
  4126af:	stc    
  4126b0:	jne    0x41265d
  4126b2:	sub    BYTE PTR [ecx-0x29],bh
  4126b5:	adc    eax,0x6ea0cc35
  4126ba:	mov    dl,0x6
  4126bd:	hlt    
  4126be:	sbb    ah,ch
  4126c0:	cs out 0xdd,eax
  4126c3:	adc    BYTE PTR [eax],0x9a
  4126c6:	mov    bh,BYTE PTR [edi+0x33]
  4126c9:	or     eax,0x9fa48156
  4126ce:	lock mov esi,0xf5627bf4
  4126d4:	int    0x5f
  4126d6:	hlt    
  4126d7:	inc    edx
  4126d8:	(bad)  
  4126d9:	test   BYTE PTR [ebx],0xa
  4126dc:	dec    esi
  4126dd:	test   DWORD PTR [esi+0x39338733],ebp
  4126e3:	mov    cl,0x5e
  4126e5:	inc    esp
  4126e6:	jp     0x41269d
  4126e8:	outs   dx,DWORD PTR ds:[esi]
  4126e9:	mov    edi,0x66184fb5
  4126ee:	mov    BYTE PTR es:[ebp+0x2e],bh
  4126f2:	stc    
  4126f3:	push   cs
  4126f4:	cdq    
  4126f5:	sbb    eax,0x6e4e0e73
  4126fa:	js     0x412712
  4126fc:	dec    ebp
  4126fd:	mov    ds:0x3248789e,eax
  412702:	jmp    0x412737
  412704:	and    edi,DWORD PTR ds:0x76e22db5
  41270a:	pushf  
  41270b:	scas   eax,DWORD PTR es:[edi]
  41270c:	mov    WORD PTR [esi],gs
  41270e:	inc    esp
  41270f:	in     eax,dx
  412710:	adc    BYTE PTR [edx+0x7f],al
  412713:	jp     0x412736
  412715:	dec    ebp
  412716:	jmp    0xc88f:0xb935c5e0
  41271d:	aad    0x6b
  41271f:	pop    edi
  412720:	aad    0x3
  412722:	dec    esp
  412723:	adc    al,0x63
  412725:	jbe    0x4126d2
  412727:	push   0xd584e4e0
  41272c:	push   eax
  41272d:	cld    
  41272e:	hlt    
  41272f:	or     dl,ch
  412731:	call   DWORD PTR [eax+edx*2]
  412734:	sub    DWORD PTR ds:0x50e5a28e,ebx
  41273a:	mov    edx,0x63015800
  41273f:	jmp    0x8dee3daa
  412744:	xor    ah,bl
  412746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412747:	dec    ecx
  412748:	es pop es
  41274a:	test   al,ah
  41274c:	sub    BYTE PTR [edi-0x13],dl
  41274f:	xchg   ecx,eax
  412750:	xchg   ebx,eax
  412751:	cmp    ch,BYTE PTR [edx+0x44]
  412754:	push   esi
  412755:	fbstp  TBYTE PTR [ecx+0x76ec0004]
  41275b:	adc    eax,DWORD PTR [ecx]
  41275d:	add    eax,0xd8201ffb
  412762:	jo     0x4127a0
  412764:	in     al,0x90
  412766:	mul    ebx
  412768:	lods   eax,DWORD PTR ds:[esi]
  412769:	out    dx,eax
  41276a:	mov    DWORD PTR [ebx-0x42],esi
  41276d:	sbb    DWORD PTR [esi-0x75017b17],ecx
  412773:	inc    esi
  412774:	mov    ds:0x7aad5331,al
  412779:	xlat   BYTE PTR ds:[ebx]
  41277a:	push   edx
  41277b:	mov    WORD PTR [eax+0x5c],gs
  41277e:	ja     0x41274d
  412780:	mov    ecx,0x245b294d
  412785:	xlat   BYTE PTR ds:[ebx]
  412786:	dec    esi
  412787:	cdq    
  412788:	aad    0x2
  41278a:	adc    eax,0xca25cef9
  41278f:	es in  eax,dx
  412791:	pop    edx
  412792:	in     al,dx
  412793:	mov    eax,ds:0x24fd83f9
  412798:	into   
  412799:	mov    eax,ds:0x76a50df9
  41279e:	dec    eax
  41279f:	xlat   BYTE PTR ds:[ebx]
  4127a0:	aas    
  4127a1:	xchg   BYTE PTR [edx],bl
  4127a3:	dec    ebx
  4127a4:	and    al,0x94
  4127a6:	xchg   ebp,eax
  4127a7:	cmp    BYTE PTR [ecx-0x3f1f7cfc],0xfe
  4127ae:	aam    0xf9
  4127b0:	pop    ds
  4127b1:	adc    BYTE PTR [eax-0x1c],ah
  4127b4:	mov    ah,0xc1
  4127b6:	cmp    eax,esp
  4127b8:	call   DWORD PTR [esi+ecx*1]
  4127bb:	jle    0x4127d8
  4127bd:	das    
  4127be:	jmp    0x619ac298
  4127c3:	cdq    
  4127c4:	(bad)  
  4127c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127c6:	stos   DWORD PTR es:[edi],eax
  4127c7:	test   eax,0xb93d1d4f
  4127cc:	cmp    DWORD PTR [edi+0x7],0xffffff91
  4127d0:	pop    ss
  4127d1:	mov    BYTE PTR [ecx],dl
  4127d3:	xrelease xchg DWORD PTR [ecx-0x66b51ba],ebp
  4127da:	shl    DWORD PTR [edi+esi*2],0x80
  4127de:	fwait
  4127df:	(bad)
  4127e3:	fbstp  TBYTE PTR [ebp-0x1334bd2e]
  4127e9:	mul    DWORD PTR [ebp+ecx*2-0x45]
  4127ed:	cmp    BYTE PTR [eax-0x15],ah
  4127f0:	popa   
  4127f1:	sbb    DWORD PTR [eax],ebp
  4127f3:	push   ss
  4127f4:	inc    ebx
  4127f5:	mov    ah,0xaa
  4127f7:	or     edi,ecx
  4127f9:	jl     0x4127e4
  4127fb:	fbld   TBYTE PTR [esi-0x6c3696b5]
  412801:	jae    0x412847
  412803:	sar    BYTE PTR [ecx+edx*4-0x6a847a45],1
  41280a:	pop    edi
  41280b:	scas   al,BYTE PTR es:[edi]
  41280c:	iret   
  41280d:	inc    edi
  41280e:	pop    ebp
  41280f:	into   
  412810:	cmp    BYTE PTR cs:[edx],0xa9
  412814:	test   DWORD PTR [edx-0x39],ebx
  412817:	xchg   ebp,eax
  412818:	into   
  412819:	(bad)  
  41281a:	aad    0xb0
  41281c:	mov    ecx,DWORD PTR [ecx-0x19]
  41281f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412820:	sub    eax,0x65a17951
  412825:	repnz xchg edi,eax
  412827:	stos   BYTE PTR es:[edi],al
  412828:	fbld   TBYTE PTR [esp+ecx*4+0x79]
  41282c:	icebp  
  41282d:	lock fld QWORD PTR [esi+0x3ed74010]
  412834:	pop    edi
  412835:	jp     0x41281f
  412837:	pop    ss
  412838:	cmp    esp,DWORD PTR [esi+0x65]
  41283b:	(bad)  
  41283d:	sbb    eax,esi
  41283f:	dec    esp
  412840:	les    edi,FWORD PTR [edi+ecx*2]
  412843:	shl    DWORD PTR [edx-0x4c],cl
  412846:	mov    dl,0xc8
  412848:	push   edi
  412849:	lods   eax,DWORD PTR ds:[esi]
  41284a:	pop    esi
  41284b:	xor    BYTE PTR [edx],ch
  41284d:	int3   
  41284e:	adc    cl,BYTE PTR [eax+0x3d]
  412851:	jno    0x4127ff
  412853:	ds enter 0xb8be,0x11
  412858:	hlt    
  412859:	ins    DWORD PTR es:[edi],dx
  41285a:	(bad)  
  41285b:	pop    esp
  41285c:	mov    bh,0xdf
  41285e:	lahf   
  41285f:	aad    0x64
  412861:	je     0x41281f
  412863:	jge    0x412861
  412865:	mov    eax,0x627523fb
  41286a:	jae    0x41288c
  41286c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41286d:	repz fistp QWORD PTR [ebx]
  412870:	hlt    
  412871:	clc    
  412872:	popf   
  412873:	ss pusha 
  412875:	jp     0x412856
  412877:	adc    ecx,esi
  412879:	jecxz  0x412820
  41287b:	mov    ebp,ecx
  41287d:	call   0x4f85:0x63b61ec
  412884:	(bad)  
  412885:	popa   
  412886:	mov    cl,dh
  412888:	test   BYTE PTR [eax],bh
  41288a:	cwde   
  41288b:	in     eax,dx
  41288c:	sar    BYTE PTR [ecx+0x474ac3b6],cl
  412892:	dec    edx
  412893:	cli    
  412894:	out    dx,al
  412895:	out    dx,al
  412896:	inc    ebx
  412897:	(bad)  
  412898:	fisub  WORD PTR [eax+esi*4]
  41289b:	sbb    al,0xf4
  41289d:	loop   0x4128bd
  41289f:	mov    ch,0x48
  4128a1:	xor    DWORD PTR [ebx-0x1dceebed],edi
  4128a7:	or     DWORD PTR [esp+0xe],ebp
  4128ab:	dec    esi
  4128ac:	pop    eax
  4128ad:	pop    ebx
  4128ae:	repz adc DWORD PTR [esi+0x1a],ebp
  4128b2:	push   ebx
  4128b3:	call   0xa34545fb
  4128b8:	dec    ebp
  4128b9:	adc    edi,DWORD PTR [ecx]
  4128bb:	adc    ebp,eax
  4128bd:	mov    edi,0xb660cfa5
  4128c2:	outs   dx,BYTE PTR ds:[esi]
  4128c3:	mov    ?,esp
  4128c5:	aad    0xb4
  4128c7:	hlt    
  4128c8:	jo     0x412908
  4128ca:	hlt    
  4128cb:	inc    esi
  4128cc:	inc    eax
  4128cd:	mov    DWORD PTR [edi-0x44],ecx
  4128d0:	add    al,0x23
  4128d2:	mov    cs,WORD PTR [edx+0x73]
  4128d5:	push   cs
  4128d6:	add    bl,bh
  4128d8:	push   cs
  4128d9:	cwde   
  4128da:	mov    ah,0xf8
  4128dc:	loope  0x412922
  4128de:	sub    al,BYTE PTR [ecx+0xfd38166]
  4128e4:	fist   DWORD PTR [edi+edi*2]
  4128e7:	rcr    BYTE PTR [esi+0x736235a5],0x26
  4128ee:	jecxz  0x4128f7
  4128f0:	dec    ebx
  4128f1:	in     eax,0xe8
  4128f3:	es jl  0x4128a1
  4128f6:	outs   dx,BYTE PTR ds:[esi]
  4128f7:	inc    ebp
  4128f8:	xor    DWORD PTR [ebx],ecx
  4128fa:	sbb    eax,0xf624d05c
  4128ff:	cmp    eax,0xdb079dfa
  412904:	fs push esp
  412906:	sbb    DWORD PTR [eax],esi
  412908:	cdq    
  412909:	xchg   DWORD PTR [esi-0xf],ecx
  41290c:	leave  
  41290d:	and    BYTE PTR [edi-0x1779a7fb],bh
  412913:	pop    ds
  412914:	jecxz  0x412918
  412916:	lds    eax,FWORD PTR [esi]
  412918:	xchg   DWORD PTR [edi+edx*8],esi
  41291b:	popa   
  41291c:	aas    
  41291d:	xchg   ebx,eax
  41291e:	ret    
  41291f:	push   cs
  412920:	pop    es
  412921:	mov    edi,ebp
  412923:	shl    BYTE PTR [edi-0x3f0256e7],0xde
  41292a:	ficom  WORD PTR ds:0x818065ec
  412930:	jmp    FWORD PTR [edi+0x5f02d81e]
  412936:	(bad)
  412939:	xor    ebx,0x7a
  41293c:	mov    WORD PTR es:[ebp+0x7c],ss
  412940:	cdq    
  412941:	sar    BYTE PTR [edi],1
  412943:	leave  
  412944:	sahf   
  412945:	cmp    ch,BYTE PTR [edx+ecx*4-0x849684]
  41294c:	lds    edx,FWORD PTR [eax+eax*4+0x26ccd055]
  412953:	jnp    0x412946
  412955:	cmp    DWORD PTR [edx+0x7a],ebp
  412958:	stos   DWORD PTR es:[edi],eax
  412959:	mov    cl,0x4e
  41295b:	xchg   dl,bl
  41295d:	xchg   esi,eax
  41295e:	adc    BYTE PTR ds:0x235c0627,al
  412964:	pop    ebx
  412965:	(bad)  
  412967:	pop    ecx
  412968:	loopne 0x412914
  41296a:	cdq    
  41296b:	jecxz  0x41291b
  41296d:	arpl   bp,sp
  41296f:	jge    0x4129dd
  412971:	out    0x9a,al
  412973:	ret    
  412974:	adc    eax,0x10290df5
  412979:	bound  edx,QWORD PTR [eax-0x619ca235]
  41297f:	jp     0x4129d9
  412981:	pmovmskb ecx,mm1
  412984:	sti    
  412985:	lds    ecx,FWORD PTR [ebp-0x11]
  412988:	pop    esp
  412989:	pop    edx
  41298a:	and    al,0xc5
  41298c:	mov    esp,0xc10fcc5b
  412991:	xor    DWORD PTR [edi-0x5d],ebx
  412994:	ds or  edx,esp
  412997:	dec    esp
  412998:	imul   ecx
  41299a:	jb     0x4129aa
  41299c:	popa   
  41299d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41299e:	jmp    0x412a1c
  4129a0:	mov    ds:0x8bdd792,al
  4129a5:	mov    ah,0x6
  4129a7:	mov    ebx,0xd72b4448
  4129ac:	mov    ebp,0xb60c7a5a
  4129b1:	imul   ecx,DWORD PTR [edx+0x7f],0xffffff91
  4129b5:	push   cs
  4129b6:	sub    al,0xab
  4129b8:	adc    al,0x82
  4129ba:	add    esi,DWORD PTR [edi]
  4129bc:	dec    ecx
  4129bd:	test   BYTE PTR [esi-0x5675c963],bl
  4129c3:	sti    
  4129c4:	push   edi
  4129c5:	ins    BYTE PTR es:[edi],dx
  4129c6:	aas    
  4129c7:	push   ebx
  4129c8:	daa    
  4129c9:	adc    esi,0x654b8df0
  4129cf:	adc    edx,eax
  4129d1:	in     eax,0x94
  4129d3:	(bad)
  4129d7:	(bad)  
  4129d8:	adc    bl,dl
  4129da:	cli    
  4129db:	mov    ds:0x2e7e406a,eax
  4129e0:	dec    eax
  4129e1:	sub    BYTE PTR ds:0xdddb27d5,cl
  4129e7:	addr16 push eax
  4129e9:	fst    DWORD PTR [edx-0x5e]
  4129ec:	mov    dl,BYTE PTR [esi+0x203a688c]
  4129f2:	mov    ch,0x17
  4129f4:	jmp    0x4129a0
  4129f6:	and    edx,DWORD PTR [ecx]
  4129f8:	fwait
  4129f9:	push   ebp
  4129fa:	sub    bh,BYTE PTR [esi-0x52ee77fc]
  412a00:	or     ecx,DWORD PTR [esi]
  412a02:	outs   dx,BYTE PTR ds:[esi]
  412a03:	jmp    0x412a36
  412a05:	cli    
  412a06:	or     eax,0xffca6cb
  412a0b:	fisubr DWORD PTR [ebp+0x36]
  412a0e:	push   esp
  412a0f:	stc    
  412a10:	and    esi,DWORD PTR [ecx-0x630c1ad4]
  412a16:	pop    esp
  412a17:	ror    BYTE PTR [edx+0x32c149f6],cl
  412a1d:	shr    dl,cl
  412a1f:	and    BYTE PTR [esi+0x30],ch
  412a22:	pop    eax
  412a23:	imul   ebx,DWORD PTR [eax+0x40],0xffffffa4
  412a27:	imul   esi,DWORD PTR [ebp-0x5b0766e6],0xd
  412a2e:	xchg   ebp,eax
  412a2f:	mov    ah,0x56
  412a31:	test   DWORD PTR ds:0x9c563f0f,edi
  412a37:	imul   ebx,DWORD PTR [ebx+edx*4-0x12],0x36
  412a3c:	and    DWORD PTR [ebx],esi
  412a3e:	cmp    bl,BYTE PTR [ebx]
  412a40:	xchg   BYTE PTR [edx],bl
  412a42:	push   0xffffffc1
  412a44:	int3   
  412a45:	(bad)  
  412a46:	dec    edi
  412a47:	and    ecx,DWORD PTR [edi+edi*8]
  412a4a:	sub    edx,edx
  412a4c:	in     eax,dx
  412a4d:	add    edx,DWORD PTR [ebp+0x43]
  412a50:	adc    bl,BYTE PTR [ebx]
  412a52:	pop    ds
  412a53:	xor    BYTE PTR [edi-0x79],bh
  412a56:	adc    DWORD PTR [edx+0x8611950],ecx
  412a5c:	add    eax,0xfaddb05c
  412a61:	dec    ecx
  412a62:	inc    esp
  412a63:	adc    dh,BYTE PTR [ebp+0x2af71d64]
  412a69:	sbb    bh,BYTE PTR [edx-0x37010656]
  412a6f:	adc    eax,0x9e9063f2
  412a74:	xor    BYTE PTR [esi+0x69],0x27
  412a78:	jns    0x412a16
  412a7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a7b:	push   ss
  412a7c:	mov    cl,0x80
  412a7e:	(bad)  
  412a7f:	and    esp,DWORD PTR [esi+eiz*1+0x6d310a82]
  412a86:	sub    ebp,esi
  412a88:	sub    bh,BYTE PTR [ecx]
  412a8a:	arpl   si,di
  412a8c:	lea    edi,[edx+0x11bd711a]
  412a92:	inc    esi
  412a93:	dec    ebp
  412a94:	mov    ?,WORD PTR [esi+0x7f]
  412a97:	(bad)  
  412a98:	pop    eax
  412a99:	sub    bl,dl
  412a9b:	jae    0x412ac3
  412a9d:	inc    eax
  412a9e:	adc    dl,0x66
  412aa1:	popf   
  412aa2:	sbb    bl,dl
  412aa4:	rcl    DWORD PTR [esi+0x45],cl
  412aa7:	enter  0xbf37,0x34
  412aab:	push   esi
  412aac:	xor    DWORD PTR [esi-0x21f5b5e6],eax
  412ab2:	mov    ebp,0x5dd6a930
  412ab7:	nop
  412ab8:	inc    BYTE PTR [ecx-0x3c4a0efa]
  412abe:	pop    es
  412abf:	jmp    0x38331c36
  412ac4:	imul   edi,DWORD PTR ds:0xd3b964b5,0x61
  412acb:	in     eax,dx
  412acc:	repnz sbb BYTE PTR [ebx],dh
  412acf:	cmp    eax,0xdc67bf7f
  412ad4:	xchg   esi,ebx
  412ad6:	or     al,0xd1
  412ad8:	sti    
  412ad9:	add    edi,eax
  412adb:	(bad)  
  412adc:	int    0x48
  412ade:	mov    edi,ebp
  412ae0:	lea    edi,[eax+0x14]
  412ae3:	cmp    bl,BYTE PTR ds:0xc02c2a29
  412ae9:	fistp  QWORD PTR [edx]
  412aeb:	cs cmc 
  412aed:	add    eax,0x3e039086
  412af2:	push   ecx
  412af3:	add    BYTE PTR [ecx-0x1],0x60
  412af7:	pop    esi
  412af8:	aam    0x11
  412afa:	xchg   DWORD PTR [ebp+0x16],ebx
  412afd:	cmp    DWORD PTR [edi+0x12],edi
  412b00:	mov    ecx,0x3b7e3c6d
  412b05:	ins    DWORD PTR es:[edi],dx
  412b06:	jg     0x412b1d
  412b08:	push   esp
  412b09:	sub    DWORD PTR ss:[eax-0xb],0xffffffc5
  412b0e:	inc    esp
  412b0f:	ins    BYTE PTR es:[edi],dx
  412b10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b11:	mov    edi,0x9017ceae
  412b16:	mov    bh,0xd7
  412b18:	lods   al,BYTE PTR ds:[esi]
  412b19:	or     DWORD PTR [eax+0x67cfb608],esi
  412b1f:	call   esi
  412b21:	jae    0x412b70
  412b23:	test   al,0xc5
  412b25:	cwde   
  412b26:	mov    ds:0xc3f71c2f,eax
  412b2b:	add    DWORD PTR [ebp+0x2f],edi
  412b2e:	inc    esi
  412b2f:	int3   
  412b30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b31:	jne    0x412b69
  412b33:	imul   DWORD PTR [ebp-0x5f]
  412b36:	sub    BYTE PTR [edx+esi*4+0x403c9e5b],bl
  412b3d:	and    dh,BYTE PTR [esi]
  412b3f:	fdiv   DWORD PTR [ecx]
  412b41:	push   0xffffffd5
  412b43:	popf   
  412b44:	mov    ebp,0x97b89e93
  412b49:	call   0x658e:0xe8d31a4f
  412b50:	xor    dh,BYTE PTR [edi-0x65bd2d85]
  412b56:	mov    edi,0x16546ef2
  412b5b:	xchg   BYTE PTR [ecx+0xb5fa604],bl
  412b61:	mov    esi,0x49c0d8e6
  412b66:	mov    BYTE PTR [esi+0x7a62a661],dh
  412b6c:	scas   al,BYTE PTR es:[edi]
  412b6d:	std    
  412b6e:	sub    al,0x2
  412b70:	iret   
  412b71:	pop    bx
  412b73:	into   
  412b74:	(bad)  
  412b75:	(bad)  
  412b76:	jecxz  0x412baa
  412b78:	or     al,0xc1
  412b7a:	add    al,0x79
  412b7c:	xor    ch,BYTE PTR [edi]
  412b7e:	mov    ebx,0x46cd554c
  412b83:	pop    edi
  412b84:	xchg   edi,eax
  412b85:	mov    al,ds:0xe7ed1e78
  412b8a:	scas   eax,DWORD PTR es:[edi]
  412b8b:	test   al,0xd5
  412b8d:	addr16 or eax,0x6e56e5f9
  412b93:	in     eax,dx
  412b94:	int    0xc7
  412b96:	add    ah,BYTE PTR [edx+0x20]
  412b99:	leave  
  412b9a:	pop    esp
  412b9b:	and    esp,DWORD PTR [edx+0x734b6824]
  412ba1:	jno    0x412b8e
  412ba3:	mov    al,0x3f
  412ba5:	cmp    eax,0xb012b898
  412baa:	test   al,0xf0
  412bac:	aaa    
  412bad:	sbb    al,BYTE PTR [esi]
  412baf:	lods   eax,DWORD PTR ds:[esi]
  412bb0:	stc    
  412bb1:	or     dl,BYTE PTR [ebx]
  412bb3:	imul   ecx,DWORD PTR [esi+0x50],0xffffffe4
  412bb7:	mov    esi,0x160de24
  412bbc:	ins    BYTE PTR es:[edi],dx
  412bbd:	xor    BYTE PTR [ecx-0x1],dh
  412bc0:	push   esp
  412bc1:	je     0x412c38
  412bc3:	adc    BYTE PTR [edi],ah
  412bc5:	push   esi
  412bc6:	ror    BYTE PTR [eax],cl
  412bc8:	mov    cl,0xaf
  412bca:	inc    esi
  412bcb:	cmp    DWORD PTR [edx],0xffffffd3
  412bce:	push   0x3926cb28
  412bd3:	ret    0x34e8
  412bd6:	sub    cl,BYTE PTR [edi]
  412bd8:	xor    bh,BYTE PTR [eax-0x6f]
  412bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bdc:	dec    ecx
  412bdd:	xchg   esi,eax
  412bde:	retf   
  412bdf:	lods   al,BYTE PTR ds:[esi]
  412be0:	mov    cl,0x81
  412be2:	inc    ebx
  412be3:	mov    eax,ds:0x78814baf
  412be8:	shl    DWORD PTR [esi-0xa],cl
  412beb:	mov    dl,0x8
  412bed:	add    eax,0x7c143a20
  412bf2:	fcom   QWORD PTR [ebx+ebx*2-0x273b9bf]
  412bf9:	sub    al,0xa5
  412bfb:	popf   
  412bfc:	popa   
  412bfd:	mov    ds:0xe8664376,eax
  412c02:	das    
  412c03:	push   ss
  412c04:	pop    eax
  412c05:	scas   eax,DWORD PTR es:[edi]
  412c06:	lea    eax,[ebx-0x1d]
  412c09:	rol    edi,1
  412c0b:	lea    ecx,[ecx+0x2b821cbc]
  412c11:	(bad)  
  412c12:	lea    eax,ds:0x564d28f6
  412c18:	fld    TBYTE PTR [ebp+0x43efc89]
  412c1e:	or     edx,eax
  412c20:	mov    ecx,0x5d673f6a
  412c25:	inc    ecx
  412c26:	clc    
  412c27:	mov    dh,0x89
  412c29:	jge    0x412c50
  412c2b:	and    bl,BYTE PTR [eax-0x23c23dec]
  412c31:	stos   DWORD PTR es:[edi],eax
  412c32:	pop    ebp
  412c33:	inc    eax
  412c34:	imul   ebp,DWORD PTR [edx],0x7b773aac
  412c3a:	push   ebp
  412c3b:	sub    dh,cl
  412c3d:	push   esp
  412c3e:	lods   eax,DWORD PTR ds:[esi]
  412c3f:	out    dx,al
  412c40:	sti    
  412c41:	jae    0x412c46
  412c43:	adc    al,0x41
  412c45:	jb     0x412c6e
  412c47:	sub    bh,BYTE PTR [edx+0x5fd668dd]
  412c4d:	out    0x7a,eax
  412c4f:	ret    
  412c50:	push   ecx
  412c51:	in     eax,dx
  412c52:	jle    0x412bd4
  412c54:	je     0x412c12
  412c56:	fnstenv [eax]
  412c58:	sti    
  412c59:	mul    BYTE PTR [edi-0x80]
  412c5c:	test   eax,0x5879df74
  412c61:	scas   al,BYTE PTR es:[edi]
  412c62:	xor    dl,al
  412c64:	push   ds
  412c65:	and    bh,al
  412c67:	in     al,dx
  412c68:	fidiv  DWORD PTR [ebx]
  412c6a:	and    BYTE PTR [ebx],cl
  412c6c:	sbb    al,dh
  412c6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c6f:	xor    al,0xfb
  412c71:	adc    al,0x6a
  412c73:	sbb    eax,0xf00e393e
  412c78:	xchg   esp,eax
  412c79:	ins    DWORD PTR es:[edi],dx
  412c7a:	sbb    esi,edi
  412c7c:	jmp    0x412c51
  412c7e:	adc    al,0x50
  412c80:	in     eax,0x3c
  412c82:	js     0x412c4e
  412c84:	add    ah,BYTE PTR [edi-0x5ce1de07]
  412c8a:	pop    edi
  412c8b:	and    ecx,DWORD PTR [edi]
  412c8d:	leave  
  412c8e:	mov    edx,0x5b2a08da
  412c93:	jo     0x412c1e
  412c95:	add    eax,0x258a283a
  412c9a:	scas   eax,DWORD PTR es:[edi]
  412c9b:	pop    edi
  412c9c:	add    BYTE PTR [esi],bh
  412c9e:	and    DWORD PTR [ebp-0x50198838],esp
  412ca4:	enter  0x3154,0x7e
  412ca8:	lahf   
  412ca9:	cli    
  412caa:	(bad)  
  412cab:	jmp    0xf0ab9641
  412cb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cb1:	test   DWORD PTR [esi-0x6a],ebp
  412cb4:	mov    ch,BYTE PTR [edx-0x34caa50f]
  412cba:	jg     0x412d05
  412cbc:	pop    edi
  412cbd:	sbb    al,0xf6
  412cbf:	sub    ch,al
  412cc1:	div    BYTE PTR [esi]
  412cc3:	sbb    BYTE PTR [ebp-0x1d],ch
  412cc6:	(bad)  
  412cc8:	mov    eax,ds:0x82b4a1f4
  412ccd:	adc    ebx,esi
  412ccf:	mov    ebx,0xb39d1388
  412cd4:	ins    BYTE PTR es:[edi],dx
  412cd5:	stc    
  412cd6:	and    cl,BYTE PTR [ebx]
  412cd8:	out    0x86,al
  412cda:	xor    DWORD PTR [ecx-0x41],esi
  412cdd:	pop    es
  412cde:	iret   
  412cdf:	sub    DWORD PTR [ebx],ebp
  412ce1:	fs data16 lahf 
  412ce4:	xchg   esi,eax
  412ce5:	or     ecx,DWORD PTR [ebp-0x7dd74d5c]
  412ceb:	ss xchg esp,eax
  412ced:	sbb    eax,0x9157b6f5
  412cf2:	aaa    
  412cf3:	fild   WORD PTR es:[edx-0x19e84b84]
  412cfb:	adc    ebx,DWORD PTR [ecx-0x7f1187e5]
  412d01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d02:	mov    ds:0x79b09a79,eax
  412d07:	cmc    
  412d08:	(bad)  
  412d09:	scas   al,BYTE PTR es:[edi]
  412d0a:	sbb    al,0x6
  412d0c:	add    cl,BYTE PTR [ecx]
  412d0e:	fisub  DWORD PTR [ecx-0x7ecf07c]
  412d14:	icebp  
  412d15:	jae    0x412d0e
  412d17:	pop    esp
  412d18:	jnp    0x412cae
  412d1a:	imul   edi,DWORD PTR [bx+di],0xdb2a77e1
  412d21:	jno    0x412d4b
  412d23:	fbstp  TBYTE PTR [edx]
  412d25:	jnp    0x412d8a
  412d27:	and    eax,0x1d07f34d
  412d2c:	cli    
  412d2d:	inc    eax
  412d2e:	sbb    ah,BYTE PTR [eax]
  412d30:	pop    eax
  412d31:	xor    dl,BYTE PTR [ebx+ebp*8-0x4da58dc3]
  412d38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d39:	lods   eax,DWORD PTR ds:[esi]
  412d3a:	xor    eax,0xde334a8f
  412d3f:	mov    ebp,0x75449df9
  412d44:	call   0x40430d87
  412d49:	fwait
  412d4a:	adc    eax,0x3459e9c7
  412d4f:	inc    esp
  412d50:	repz leave 
  412d52:	pop    ss
  412d53:	fsub   QWORD PTR [ecx+eax*2-0x295721c9]
  412d5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d5b:	(bad)  
  412d5c:	scas   al,BYTE PTR es:[edi]
  412d5d:	push   ecx
  412d5e:	or     eax,0x21aa4bc1
  412d63:	clc    
  412d64:	adc    eax,0x39a83f43
  412d69:	jb     0x412de3
  412d6b:	mov    esi,0x59295b2
  412d70:	xchg   ebp,eax
  412d71:	shl    ecx,cl
  412d73:	jbe    0x412dcb
  412d75:	test   eax,0x6206b82f
  412d7a:	pop    ds
  412d7b:	shl    BYTE PTR [eax],1
  412d7d:	shl    DWORD PTR ds:0xdbaf4678,1
  412d83:	enter  0x3fda,0xce
  412d87:	dec    edx
  412d88:	jne    0x412d54
  412d8a:	cmp    eax,0xe3849cb
  412d8f:	fwait
  412d90:	pop    edx
  412d91:	jl     0x412d7d
  412d93:	popa   
  412d94:	rcr    DWORD PTR [ebx-0x72],1
  412d97:	pushf  
  412d98:	dec    ebx
  412d99:	(bad)  
  412d9a:	fidivr WORD PTR [eax+0x11]
  412d9d:	imul   ecx,DWORD PTR [eax],0x6a
  412da0:	cli    
  412da1:	jbe    0x412d51
  412da3:	push   ecx
  412da4:	imul   eax,DWORD PTR [edi-0x3ddc0e84],0x1285505e
  412dae:	mov    esi,0xd6be2fb9
  412db3:	mov    BYTE PTR [ebp-0x5103bba],cl
  412db9:	fild   QWORD PTR [ecx-0x3e]
  412dbc:	shr    dl,1
  412dbe:	pop    esi
  412dbf:	ins    BYTE PTR es:[edi],dx
  412dc0:	sbb    eax,0x39ca8372
  412dc5:	ror    DWORD PTR [ecx+0x7d],1
  412dc8:	push   0x78
  412dca:	aaa    
  412dcb:	or     BYTE PTR [edx+0x871b64e],ch
  412dd1:	(bad)  
  412dd2:	dec    edx
  412dd3:	push   ebp
  412dd4:	in     eax,dx
  412dd5:	pop    edx
  412dd6:	sbb    DWORD PTR [edx+0x45],esi
  412dd9:	(bad)  
  412dda:	(bad)  
  412ddb:	shr    BYTE PTR [ebx+0x7d],0x4f
  412ddf:	add    eax,0xe030d948
  412de4:	mov    al,0x7e
  412de6:	out    0xfb,eax
  412de8:	mov    ds:0x833c28b2,al
  412ded:	lahf   
  412dee:	cdq    
  412def:	(bad)  [edi+0x22]
  412df2:	clc    
  412df3:	push   ecx
  412df4:	xchg   edi,eax
  412df5:	and    al,bh
  412df7:	test   DWORD PTR [edi+ebx*8+0x39],eax
  412dfb:	adc    eax,0xda6f698e
  412e00:	xor    al,BYTE PTR [edx+0x7c31f59f]
  412e06:	pop    esp
  412e07:	push   0x5dceb457
  412e0c:	jge    0x412db4
  412e0e:	sbb    bh,bl
  412e10:	sti    
  412e11:	mov    DWORD PTR [esi+0x70],edx
  412e14:	shl    BYTE PTR [edx-0x5d],1
  412e17:	mov    edi,DWORD PTR [edx+edx*1-0x5c3a1cc]
  412e1e:	add    al,0x8c
  412e20:	xchg   DWORD PTR [eax+0x1ea5be78],edx
  412e26:	fmul   st(3),st
  412e28:	add    DWORD PTR [ecx],ebx
  412e2a:	addr16 nop
  412e2c:	mov    ebx,0x7053355f
  412e31:	mov    edi,0x2294925f
  412e36:	sub    dh,BYTE PTR [ecx+0x7ffec484]
  412e3c:	mov    al,ds:0xbd7f110f
  412e41:	repz inc edi
  412e43:	mov    DWORD PTR [ebx-0x2b051fba],0x3b6abd39
  412e4d:	sub    al,0xba
  412e4f:	fsubr  QWORD PTR [ecx]
  412e51:	sar    BYTE PTR [esi+ebx*2],1
  412e54:	or     DWORD PTR [edx+ecx*1],ebp
  412e57:	and    DWORD PTR [ecx+0x37],edi
  412e5a:	and    eax,0x3ca87cc0
  412e5f:	repz ret 
  412e61:	and    esp,DWORD PTR [ecx+0x59]
  412e64:	inc    ecx
  412e65:	adc    bl,BYTE PTR [edx-0x5435d50c]
  412e6b:	xor    ch,BYTE PTR [eax-0x22]
  412e6e:	lea    esp,[edx+0x24c43cf0]
  412e74:	xchg   ebp,eax
  412e75:	inc    edx
  412e76:	loop   0x412e7f
  412e78:	ins    BYTE PTR es:[edi],dx
  412e79:	sar    edi,0xbc
  412e7c:	or     DWORD PTR [edx+0x10273a6f],esp
  412e82:	add    DWORD PTR [esi],0xa807f574
  412e88:	jg     0x412e6c
  412e8a:	sub    BYTE PTR [eax-0x1c],0x58
  412e8e:	mov    BYTE PTR ds:[ecx],cl
  412e91:	adc    dl,bl
  412e93:	inc    edi
  412e94:	out    dx,eax
  412e95:	sub    DWORD PTR [edx],ebp
  412e97:	fucomi st,st(7)
  412e99:	int    0xed
  412e9b:	aad    0xbc
  412e9d:	add    ch,BYTE PTR [ecx-0x518b73d]
  412ea3:	out    dx,al
  412ea4:	sar    DWORD PTR [edx+eax*8+0x24],cl
  412ea8:	pop    esi
  412ea9:	xchg   ebp,eax
  412eaa:	add    eax,0xb682c665
  412eaf:	fisttp QWORD PTR [eax-0x1e]
  412eb2:	xor    DWORD PTR [ebp-0x7a7b9ff3],edi
  412eb8:	sahf   
  412eb9:	fsub   st,st(5)
  412ebb:	dec    edx
  412ebc:	clc    
  412ebd:	stos   BYTE PTR es:[edi],al
  412ebe:	fwait
  412ebf:	(bad)
  412ec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ec5:	mov    ecx,0x8b7f3960
  412eca:	mov    DWORD PTR ds:0x87f3baa5,esi
  412ed0:	stc    
  412ed1:	fldcw  WORD PTR [eax+0x63]
  412ed4:	jg     0x412f03
  412ed6:	add    eax,0x73481d65
  412edb:	mov    ds,WORD PTR [esi-0x60dbfc49]
  412ee1:	inc    ebp
  412ee2:	fs push edi
  412ee4:	push   eax
  412ee5:	inc    ebp
  412ee6:	pop    edi
  412ee7:	inc    edi
  412ee8:	lahf   
  412ee9:	(bad)  
  412eea:	pop    edx
  412eeb:	(bad)  
  412eec:	mov    al,ds:0x380cd799
  412ef1:	sbb    BYTE PTR [ebx],dh
  412ef3:	cwde   
  412ef4:	test   DWORD PTR [edi+ecx*2+0x43cde0ad],ecx
  412efb:	idiv   BYTE PTR [esi+0x2c]
  412efe:	and    esp,DWORD PTR [eax+0x243fc2bf]
  412f04:	nop
  412f05:	fadd   QWORD PTR [bx+di-0x5842]
  412f0a:	nop
  412f0b:	or     al,0x95
  412f0d:	xor    ecx,DWORD PTR [edi+0x12e6d7b1]
  412f13:	(bad)  
  412f14:	or     al,0xca
  412f16:	pop    esi
  412f17:	ja     0x412f01
  412f19:	in     al,dx
  412f1a:	retf   
  412f1b:	mov    dl,ah
  412f1d:	shr    BYTE PTR ds:0x45b8a116,0x6e
  412f24:	icebp  
  412f25:	sub    al,BYTE PTR [ebx+0x38bbc8ec]
  412f2b:	jo     0x412f54
  412f2d:	mov    eax,0x1045b6c5
  412f32:	cmp    eax,0x2f88495
  412f37:	mov    ds:0x1510462a,eax
  412f3c:	adc    bh,BYTE PTR [edi-0x77]
  412f3f:	mov    al,ds:0x208500db
  412f44:	mov    edx,0xc903465d
  412f49:	int    0xdf
  412f4b:	jecxz  0x412f3b
  412f4d:	mov    dh,dl
  412f4f:	xor    al,0x98
  412f51:	dec    esp
  412f52:	mov    BYTE PTR [eax],bh
  412f54:	pusha  
  412f55:	iret   
  412f56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f57:	jne    0x412ee2
  412f59:	stos   BYTE PTR es:[edi],al
  412f5a:	repz jb 0x412ee5
  412f5d:	mov    ebx,0x8d57154a
  412f62:	cld    
  412f63:	jge    0x412fd2
  412f65:	mov    ah,0x3d
  412f67:	jmp    0x412f41
  412f69:	or     ebx,eax
  412f6b:	xchg   esi,eax
  412f6c:	call   0xdf910734
  412f71:	pop    edx
  412f72:	jmp    0x710c5e7d
  412f77:	adc    DWORD PTR [edi+0x5b468928],edi
  412f7d:	cmp    al,0x9f
  412f7f:	sbb    DWORD PTR [edi-0x7e69b8f2],eax
  412f85:	adc    al,0x31
  412f87:	and    DWORD PTR [esi],ebp
  412f89:	jmp    0xcafe:0x5268f3c2
  412f90:	out    0xa6,eax
  412f92:	sub    al,0x83
  412f94:	fmul   DWORD PTR [eax-0x80]
  412f97:	push   ecx
  412f98:	dec    ebx
  412f99:	sub    eax,DWORD PTR [edi+0x3d176641]
  412f9f:	mov    BYTE PTR [edx+0x1c7452ba],dl
  412fa5:	jle    0x412fcb
  412fa7:	mov    ecx,0x88ae761a
  412fac:	icebp  
  412fad:	pusha  
  412fae:	mov    ah,0x8e
  412fb0:	xchg   esi,eax
  412fb1:	sbb    al,0x96
  412fb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fb4:	jne    0x412f47
  412fb6:	test   BYTE PTR [eax+0x3a],ch
  412fb9:	or     DWORD PTR [edx+0x606e9c96],edi
  412fbf:	in     eax,0xe1
  412fc1:	sbb    eax,0xae3bed91
  412fc6:	sti    
  412fc7:	jae    0x412f91
  412fc9:	and    ch,bl
  412fcb:	das    
  412fcc:	gs mov ch,0x5f
  412fcf:	out    dx,al
  412fd0:	dec    eax
  412fd1:	inc    ebp
  412fd2:	(bad)  
  412fd3:	aaa    
  412fd4:	fldenv [eax+ebx*1]
  412fd7:	clc    
  412fd8:	cs pop es
  412fda:	mov    ebp,0x4dd7a1c
  412fdf:	ret    0xc00c
  412fe2:	push   ecx
  412fe3:	mov    dl,0xef
  412fe5:	int    0x7
  412fe7:	add    BYTE PTR [edi+edx*1-0x54],al
  412feb:	sub    ebx,0xffffffd0
  412fee:	pop    es
  412fef:	mov    DWORD PTR ds:0x1b701c8a,edi
  412ff5:	ds xchg ecx,eax
  412ff7:	inc    ebx
  412ff8:	jl     0x412ff0
  412ffa:	sti    
  412ffb:	fstp   DWORD PTR [eax+0x3420bc6c]
  413001:	push   ebx
  413002:	out    dx,eax
  413003:	cmp    ch,dl
  413005:	out    0x8d,al
  413007:	cmp    dh,BYTE PTR ds:0xd627a2ad
  41300d:	cmp    al,0xb1
  41300f:	and    eax,0x83775984
  413014:	(bad)  
  413015:	psrlw  mm2,mm0
  413018:	aas    
  413019:	fwait
  41301a:	(bad)  
  41301b:	out    dx,al
  41301c:	test   DWORD PTR [esi+0xb3698d9],ebx
  413022:	icebp  
  413023:	fcom   DWORD PTR [esp+edx*2]
  413026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413027:	pop    eax
  413028:	inc    ebx
  413029:	icebp  
  41302a:	dec    ecx
  41302b:	and    DWORD PTR [ebp+0x23],ecx
  41302e:	mov    ?,ebp
  413030:	push   edx
  413031:	push   cs
  413032:	je     0x413081
  413034:	sbb    al,0xd9
  413036:	adc    edi,esi
  413038:	cmp    esi,DWORD PTR [ebx]
  41303a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41303b:	lods   al,BYTE PTR ds:[esi]
  41303c:	jge    0x412fe3
  41303e:	hlt    
  41303f:	pop    ebp
  413040:	scas   al,BYTE PTR es:[edi]
  413041:	push   ebx
  413042:	jg     0x412fe1
  413044:	push   ds
  413045:	lds    edx,FWORD PTR [edx]
  413047:	inc    ebp
  413048:	pop    edi
  413049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41304a:	mov    ah,0x2b
  41304c:	imul   ebp,ebp,0xa28d61a2
  413052:	call   0x32752b94
  413057:	cmp    eax,0xad605f65
  41305c:	sbb    esi,DWORD PTR [ebx-0x295f9fe7]
  413062:	jle    0x413005
  413064:	in     al,0x5f
  413066:	jmp    0x413080
  413068:	pop    ss
  413069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41306a:	inc    edx
  41306b:	jge    0x413070
  41306d:	daa    
  41306e:	(bad)
  413072:	and    ah,BYTE PTR [eax-0x5]
  413075:	add    BYTE PTR [ebp-0x75],dl
  413078:	(bad)  
  413079:	mov    ah,0x5c
  41307b:	fisttp QWORD PTR [edx-0x5a323893]
  413081:	mov    esp,0x40d3d14a
  413086:	mov    ebp,0x55f8ea7f
  41308b:	xor    al,0xce
  41308d:	xor    edx,DWORD PTR [edx]
  41308f:	test   eax,0x99fb6a11
  413094:	and    ecx,ebx
  413096:	xchg   edi,eax
  413097:	retf   0x6ff9
  41309a:	(bad)  
  41309b:	pop    ebx
  41309c:	imul   esp,DWORD PTR [eax-0x78a33f73],0xffffff9f
  4130a3:	adc    eax,0x9e3c0f1a
  4130a8:	xlat   BYTE PTR ds:[ebx]
  4130a9:	mov    BYTE PTR [esi+edx*8-0x19],bl
  4130ad:	push   ss
  4130ae:	xor    bl,cl
  4130b0:	ins    BYTE PTR es:[edi],dx
  4130b1:	inc    ecx
  4130b2:	jmp    0x8079faed
  4130b7:	call   0x214f:0xe5f22bcb
  4130be:	lods   eax,DWORD PTR ds:[esi]
  4130bf:	pop    esp
  4130c0:	sub    DWORD PTR [edi+esi*8+0x64bd820],ecx
  4130c7:	mov    eax,ds:0x8f42f4a3
  4130cc:	bnd call 0x3fd5c151
  4130d2:	bound  esp,QWORD PTR [edi-0x1b]
  4130d5:	dec    edi
  4130d6:	add    eax,DWORD PTR [eax+0x46]
  4130d9:	ss int 0x61
  4130dc:	fldlg2 
  4130de:	push   ss
  4130df:	pop    edx
  4130e0:	sbb    eax,0xd26dfc83
  4130e5:	(bad)  
  4130e6:	mov    ah,0x85
  4130e8:	aas    
  4130e9:	fnsave [edi+0x7cbc0ee4]
  4130ef:	add    eax,0xeba021b8
  4130f4:	enter  0xc0d2,0x78
  4130f8:	sbb    eax,0xfb3d8643
  4130fd:	repnz fstp DWORD PTR [edx]
  413100:	loope  0x4130f2
  413102:	pop    ecx
  413103:	or     eax,DWORD PTR [edx]
  413105:	ret    0x1169
  413108:	popa   
  413109:	cmp    BYTE PTR [ecx],ah
  41310b:	pop    ebp
  41310c:	arpl   WORD PTR ds:0x109fd8ee,di
  413112:	and    al,BYTE PTR [eax+ebp*2-0x2e]
  413116:	xchg   esi,eax
  413117:	cwde   
  413118:	xor    DWORD PTR [ebp+0x1607fa69],0xffffff80
  41311f:	popf   
  413120:	shl    BYTE PTR ds:0x7b5a4f81,0x5d
  413127:	xor    eax,0x7074aeb
  41312c:	mov    ebp,0xb366255d
  413131:	sub    ecx,DWORD PTR [edi+0x7b]
  413134:	sub    BYTE PTR fs:0xcf6bf0ce,al
  41313b:	lock cmp al,0x90
  41313e:	inc    esp
  41313f:	dec    edx
  413140:	push   ecx
  413141:	test   al,0x83
  413144:	mov    bh,0x78
  413146:	mov    DWORD PTR [esi+edx*4+0x19],edx
  41314a:	mov    esp,0xa64ceb4d
  41314f:	mov    esi,0x3108b05e
  413154:	jg     0x4131b5
  413156:	sbb    esi,DWORD PTR [edx+ecx*4]
  413159:	call   0x5897a4c2
  41315e:	add    eax,0xc36dd1a5
  413163:	popf   
  413164:	xor    eax,0x862464d7
  413169:	sti    
  41316a:	push   esi
  41316b:	leave  
  41316c:	hlt    
  41316d:	les    ebp,FWORD PTR [ebp-0x45]
  413170:	adc    eax,0xa6bc216
  413175:	pop    esi
  413176:	test   eax,0x32fcfa4d
  41317b:	sar    BYTE PTR [edx+ecx*4],1
  41317e:	mov    dl,0x50
  413180:	fidiv  DWORD PTR [edi-0xc]
  413183:	dec    ebp
  413184:	and    DWORD PTR [ebx-0x65dacf37],0x39
  41318b:	test   al,0x21
  41318d:	add    BYTE PTR [ecx],dh
  41318f:	add    al,0x2a
  413191:	mov    eax,0xc490b4a
  413196:	cmp    al,0xef
  413198:	lods   eax,DWORD PTR ds:[esi]
  413199:	dec    edi
  41319a:	xor    eax,0x89a70c63
  41319f:	mov    eax,ds:0x5f265738
  4131a4:	mov    al,0x81
  4131a6:	mov    DWORD PTR [eax],esi
  4131a8:	fstp   st(7)
  4131aa:	arpl   WORD PTR [ecx-0x1c37b47d],di
  4131b0:	jg     0x4131cd
  4131b2:	call   0x5530a9e2
  4131b7:	dec    ecx
  4131b8:	xchg   esi,eax
  4131b9:	push   ss
  4131ba:	mov    DWORD PTR [esp+ecx*2+0x70],ebx
  4131be:	inc    eax
  4131bf:	fdivr  DWORD PTR [ecx+0x1a939da6]
  4131c5:	mov    al,ds:0x27ab30c0
  4131ca:	push   cs
  4131cb:	mov    bl,0x41
  4131cd:	enter  0xf7d9,0xff
  4131d1:	xor    eax,0xe5dc03f4
  4131d6:	or     al,0x96
  4131d8:	lea    esi,[esi-0x71]
  4131db:	jns    0x41322a
  4131dd:	mov    ebx,0x6263f673
  4131e2:	jno    0x4131df
  4131e4:	std    
  4131e5:	(bad)  
  4131e7:	(bad)  
  4131e8:	lods   eax,DWORD PTR ds:[esi]
  4131e9:	push   esp
  4131ea:	js     0x4131fe
  4131ec:	jg     0x4131be
  4131ee:	(bad)  
  4131ef:	and    al,0xe0
  4131f1:	jb     0x413263
  4131f3:	daa    
  4131f4:	jbe    0x4131a3
  4131f6:	xlat   BYTE PTR ds:[ebx]
  4131f7:	adc    ah,BYTE PTR [esi-0x6c]
  4131fa:	jne    0x4131aa
  4131fc:	xchg   edx,eax
  4131fd:	out    0xdd,eax
  4131ff:	pop    esp
  413200:	jmp    0x413275
  413202:	push   ecx
  413203:	jge    0x413234
  413205:	ficom  DWORD PTR [ebx-0x24df864c]
  41320b:	jle    0x4131cb
  41320d:	push   ecx
  41320e:	ret    
  41320f:	pop    ebp
  413210:	push   esi
  413211:	ss push edx
  413213:	dec    esp
  413214:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413215:	jmp    0xe4652783
  41321a:	imul   ebx,DWORD PTR [edx],0x9b528ab4
  413220:	xor    BYTE PTR [edi-0x3ea94a6e],0xb5
  413227:	add    esi,edi
  413229:	xchg   BYTE PTR [esi-0xf052bb],cl
  41322f:	mov    ecx,0x53fa84a1
  413234:	sub    eax,0x91cdd2e5
  413239:	in     al,0x69
  41323b:	fnstenv [ecx-0x74]
  41323e:	mov    ebp,0x8ec3a306
  413243:	inc    ebx
  413244:	arpl   WORD PTR [esi+0x256f0521],di
  41324a:	fsubrp st(3),st
  41324c:	jne    0x413232
  41324e:	push   ebx
  41324f:	xor    edx,DWORD PTR [esi]
  413251:	dec    edx
  413252:	pop    ss
  413253:	lahf   
  413254:	(bad)  
  413256:	and    BYTE PTR [eax-0x62],0xb4
  41325a:	inc    ecx
  41325b:	xor    bl,ch
  41325d:	test   al,0x1b
  41325f:	mov    ?,WORD PTR [edi+0x4d525442]
  413265:	fisubr DWORD PTR [esi-0x4d]
  413268:	imul   ebx,DWORD PTR [ebx+0xb],0x8d10dfde
  41326f:	cli    
  413270:	jmp    0x4131f4
  413272:	test   edx,eax
  413274:	pop    ebp
  413275:	mov    ecx,0x48f7c45f
  41327a:	jp     0x41321e
  41327c:	mov    ds:0xab95cc55,al
  413281:	sbb    BYTE PTR [ebp-0x3f],ch
  413284:	stc    
  413285:	aam    0xdc
  413287:	inc    edx
  413288:	dec    ecx
  413289:	in     eax,0x3c
  41328b:	stos   BYTE PTR es:[edi],al
  41328c:	mov    bh,0x71
  41328e:	push   ebp
  41328f:	pushf  
  413290:	mov    edi,0x57586e89
  413295:	idiv   BYTE PTR [ebx+ebx*4-0x5f]
  413299:	addr16 pop eax
  41329b:	or     BYTE PTR ds:0xbcd4031c,ah
  4132a1:	xchg   esp,eax
  4132a2:	push   eax
  4132a3:	js     0x41322b
  4132a5:	std    
  4132a6:	mov    al,fs:0x624cb0ad
  4132ac:	ret    
  4132ad:	adc    al,0xf7
  4132af:	pop    esi
  4132b0:	es ds sbb edi,esi
  4132b4:	jmp    0x408c:0x11b9166e
  4132bb:	add    al,0x2e
  4132bd:	les    edi,FWORD PTR [ecx-0x377ecee9]
  4132c3:	jo     0x4132a1
  4132c5:	jle    0x413279
  4132c7:	clc    
  4132c8:	in     eax,dx
  4132c9:	jmp    0x41334a
  4132cb:	xchg   ebp,eax
  4132cc:	std    
  4132cd:	inc    edx
  4132ce:	les    ebx,FWORD PTR [edi+0x1b]
  4132d1:	jo     0x4132a9
  4132d3:	sbb    eax,0x6f9ad7e5
  4132d8:	mov    esp,0xd72034fc
  4132dd:	imul   esp,DWORD PTR [esi-0x35fecf5d],0xca99726e
  4132e7:	sbb    ebx,DWORD PTR cs:[ebx-0x58]
  4132eb:	xchg   edi,eax
  4132ec:	loope  0x41335b
  4132ee:	jg     0x413287
  4132f0:	test   DWORD PTR [eax-0x78],ebx
  4132f3:	jo     0x41332e
  4132f5:	dec    ebx
  4132f6:	mov    ebx,esi
  4132f8:	repnz out 0x58,eax
  4132fb:	bound  esp,QWORD PTR [edx+0x52]
  4132fe:	scas   eax,DWORD PTR es:[edi]
  4132ff:	in     al,dx
  413300:	gs push ds
  413302:	inc    esi
  413303:	mov    DWORD PTR [ebp+eax*1+0x331f3059],esi
  41330a:	sbb    DWORD PTR [esi+0x41d91071],edx
  413310:	xor    BYTE PTR [esi+0x372407ef],dh
  413316:	push   ebp
  413317:	xchg   ebp,eax
  413318:	div    BYTE PTR [ebx-0x1f]
  41331b:	adc    BYTE PTR [ecx-0x759acf57],0x82
  413322:	ret    
  413323:	stc    
  413324:	and    al,0xe9
  413326:	repnz retf 0x9c76
  41332a:	ds mov cl,bh
  41332d:	idiv   DWORD PTR [ecx+0x74]
  413330:	jecxz  0x413338
  413332:	jae    0x4132ef
  413334:	arpl   WORD PTR [edx+esi*2],cx
  413337:	lea    esp,[ecx+0x53]
  41333a:	cmp    dl,bl
  41333c:	repnz add al,0x93
  41333f:	repz rol DWORD PTR [edx+0x41],1
  413343:	push   ebx
  413344:	stos   BYTE PTR es:[edi],al
  413345:	std    
  413346:	fst    DWORD PTR [ebp+0x4d]
  413349:	loopne 0x4132f9
  41334b:	out    0x20,eax
  41334d:	ror    DWORD PTR [ebx],0xdd
  413350:	xchg   edi,eax
  413351:	je     0x4133b5
  413353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413354:	jp     0x41335e
  413356:	popf   
  413357:	mov    ch,0x13
  413359:	icebp  
  41335a:	mov    eax,0x9acd5e8d
  41335f:	and    dl,al
  413361:	xchg   ebx,eax
  413362:	pusha  
  413363:	or     ebp,0x4b408a5b
  413369:	mov    edi,0x4cbccd38
  41336e:	mov    dl,0xda
  413370:	pop    esi
  413371:	push   0xffffffa2
  413373:	cmp    al,0xeb
  413375:	push   ecx
  413376:	(bad)  
  413377:	xchg   ebp,eax
  413378:	ret    
  413379:	mov    ebx,0xec3e9cbd
  41337e:	into   
  41337f:	imul   edi,DWORD PTR [ebp+0x34],0x9cb508f3
  413386:	mov    edx,0x501a1502
  41338b:	data16 jl 0x41338a
  41338e:	fwait
  41338f:	inc    ebx
  413390:	push   esp
  413391:	mov    ebx,0xf4db4077
  413396:	loop   0x41332d
  413398:	ret    
  413399:	mov    ds:0x7d99405,al
  41339e:	lock loope 0x413339
  4133a1:	jecxz  0x4133e0
  4133a3:	add    BYTE PTR [ecx],al
  4133a5:	lea    eax,[ecx-0x47]
  4133a8:	or     DWORD PTR [edx+0x19],0x4887e2f5
  4133af:	cmovs  eax,DWORD PTR [eax-0x1cac562d]
  4133b6:	mov    dl,0x66
  4133b8:	sbb    al,0x5b
  4133ba:	jmp    0x3a24a38a
  4133bf:	xor    al,0xe9
  4133c1:	xlat   BYTE PTR ds:[ebx]
  4133c2:	pop    ebp
  4133c3:	gs xchg ebp,eax
  4133c5:	mov    ch,dh
  4133c7:	jbe    0x413438
  4133c9:	mov    eax,ds:0x9ce6d436
  4133ce:	cmp    al,0xee
  4133d0:	repz mov ebp,0xae560bf7
  4133d6:	or     eax,0xed822989
  4133db:	pop    ds
  4133dc:	push   edx
  4133dd:	mul    ebx
  4133df:	adc    BYTE PTR [edx-0x16],ah
  4133e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133e3:	and    bl,BYTE PTR [esi+0x5f]
  4133e6:	inc    si
  4133e8:	test   al,0xa6
  4133ea:	addr16 icebp 
  4133ec:	les    ecx,FWORD PTR [ebx-0x66ba71eb]
  4133f2:	mov    al,0x25
  4133f4:	fnstsw WORD PTR [edi+ecx*4+0x6b3f5510]
  4133fb:	dec    ebx
  4133fc:	into   
  4133fd:	jg     0x413448
  4133ff:	adc    bl,dh
  413401:	cli    
  413402:	lea    esi,[edi-0x80]
  413405:	mov    ds:0x2db0c597,al
  41340a:	push   edx
  41340b:	xlat   BYTE PTR ds:[ebx]
  41340c:	mov    dl,0x8d
  41340e:	dec    ebx
  41340f:	sbb    DWORD PTR [edx-0x17f8126a],0x6fb399ff
  413419:	add    al,BYTE PTR [ecx-0x3146ac0e]
  41341f:	push   ds
  413420:	popf   
  413421:	jnp    0x41344b
  413423:	sub    eax,0x3b948b48
  413428:	leave  
  413429:	mov    dh,0xf
  41342b:	mov    DWORD PTR gs:[edx+ebp*2-0x37],edi
  413430:	xor    eax,0x59d874ab
  413435:	pop    eax
  413436:	cli    
  413437:	mov    esi,0x3b258422
  41343c:	cs inc esi
  41343e:	xor    edx,DWORD PTR [edi+0xf91475b]
  413444:	pop    ss
  413445:	push   cs
  413446:	hlt    
  413447:	stos   DWORD PTR es:[edi],eax
  413448:	mov    eax,ds:0xe8d227d5
  41344d:	(bad)  
  41344e:	shl    BYTE PTR [eax],cl
  413450:	aad    0xed
  413452:	in     al,0xc4
  413454:	and    BYTE PTR [di+0x1d],dl
  413458:	or     dh,al
  41345a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41345b:	iret   
  41345c:	aaa    
  41345d:	jecxz  0x4134b9
  41345f:	and    BYTE PTR [edx+0x40],cl
  413462:	aad    0xdc
  413464:	nop
  413465:	jnp    0x4134e4
  413467:	and    al,0xa7
  413469:	xor    eax,0x13e3c52b
  41346e:	push   ds
  41346f:	mov    esi,0x1933aa3d
  413474:	push   es
  413475:	and    BYTE PTR [ebx+0x1ac0af9d],cl
  41347b:	sbb    al,0xd3
  41347d:	retf   
  41347e:	inc    ecx
  41347f:	xchg   ebp,eax
  413480:	bnd fs jnp 0x41345e
  413484:	dec    esi
  413485:	stos   DWORD PTR es:[edi],eax
  413486:	sar    BYTE PTR [eax+0x4571ceb3],cl
  41348c:	neg    BYTE PTR [edi+edi*2]
  41348f:	dec    esp
  413490:	pop    ebp
  413491:	scas   al,BYTE PTR es:[edi]
  413492:	scas   eax,DWORD PTR es:[edi]
  413493:	xor    al,0x7b
  413495:	sbb    cl,cl
  413497:	call   0xc4c7:0x64aa340d
  41349e:	sbb    esi,DWORD PTR [eax]
  4134a0:	es jl  0x41345c
  4134a3:	mov    esp,0x39515ab8
  4134a8:	popf   
  4134a9:	adc    dl,BYTE PTR [ebx]
  4134ab:	stc    
  4134ac:	scas   eax,DWORD PTR es:[edi]
  4134ad:	jno    0x4134f2
  4134af:	sbb    edx,0x22
  4134b2:	xor    BYTE PTR [edx-0x26],dh
  4134b5:	push   ecx
  4134b6:	test   DWORD PTR [ecx+ebp*2],edi
  4134b9:	add    dh,dh
  4134bb:	test   al,0x92
  4134bd:	pushw  0xbae0
  4134c1:	cwde   
  4134c2:	shl    dl,0x25
  4134c5:	sub    edx,DWORD PTR [edi-0x6918443c]
  4134cb:	xchg   ebx,eax
  4134cc:	mov    esi,0xd2aee831
  4134d1:	jne    0x4134b4
  4134d3:	lea    eax,[ebx+0x552c215]
  4134d9:	mov    bl,BYTE PTR [ecx-0x22776e2d]
  4134df:	sub    al,0x5
  4134e1:	push   esp
  4134e2:	jge    0x413539
  4134e4:	push   ds
  4134e5:	pop    ebx
  4134e6:	icebp  
  4134e7:	cmc    
  4134e8:	cmp    BYTE PTR [eax+0x6b],dl
  4134eb:	or     BYTE PTR [ecx-0x7b106de5],cl
  4134f1:	mov    ah,0xa3
  4134f3:	rol    DWORD PTR [esi],0xe0
  4134f6:	and    al,0xe0
  4134f8:	in     al,0xbe
  4134fa:	in     eax,dx
  4134fb:	add    esp,DWORD PTR [eax]
  4134fd:	(bad)  
  4134fe:	mov    ch,0x58
  413500:	mov    esp,fs
  413502:	repnz enter 0x26ee,0x96
  413507:	add    eax,0x36b5f94f
  41350c:	dec    ecx
  41350d:	jl     0x413526
  41350f:	cmp    eax,0xf52f3066
  413514:	ret    0xcd9f
  413517:	sbb    DWORD PTR [edx],0x12
  41351a:	xchg   esi,eax
  41351b:	shl    DWORD PTR [ecx-0x53],1
  41351e:	(bad)
  413521:	push   eax
  413522:	mov    dh,0xb9
  413524:	sbb    DWORD PTR [ebx+ebp*2+0x6af1a115],edi
  41352b:	aam    0x5b
  41352d:	test   eax,0x693b0dd3
  413532:	mov    ah,0x6e
  413534:	cdq    
  413535:	outs   dx,DWORD PTR ds:[esi]
  413536:	out    dx,al
  413537:	add    DWORD PTR [esi+ecx*4],ebp
  41353a:	int    0xfc
  41353c:	mov    dh,bh
  41353e:	retf   
  41353f:	les    esi,FWORD PTR [ecx]
  413541:	nop
  413542:	cmp    BYTE PTR [edx-0x24f3f65a],al
  413548:	mov    eax,ds:0x65ae9634
  41354d:	mov    al,0xff
  41354f:	sub    ch,cl
  413551:	adc    al,0xf9
  413553:	test   ebp,0x85644716
  413559:	pop    ebp
  41355a:	mov    edi,0x99f311da
  41355f:	int3   
  413560:	mov    ah,0x30
  413562:	adc    BYTE PTR [eax+0x3e142ee3],al
  413568:	xchg   ebp,eax
  413569:	jnp    0x413513
  41356b:	lock loop 0x4135bc
  41356e:	add    al,0xa3
  413570:	sbb    ecx,edx
  413572:	hlt    
  413573:	sub    BYTE PTR [ecx+0x6144233f],cl
  413579:	test   BYTE PTR [esi+edi*4+0x3b37b7d5],bl
  413580:	popa   
  413581:	mov    eax,0x5cc09387
  413586:	xlat   BYTE PTR ds:[ebx]
  413587:	xchg   edx,eax
  413588:	lahf   
  413589:	jo     0x413579
  41358b:	fst    DWORD PTR [edi+ecx*4+0x5e4f6c85]
  413592:	or     al,0x6f
  413594:	loopne 0x4135d0
  413596:	lods   eax,DWORD PTR ds:[esi]
  413597:	add    al,0x15
  413599:	sub    al,0xfe
  41359b:	pop    edi
  41359c:	lds    ecx,FWORD PTR [esi+0x60df6222]
  4135a2:	lods   al,BYTE PTR ds:[esi]
  4135a3:	xchg   ecx,edi
  4135a5:	mov    sp,0xc27b
  4135a9:	inc    ebx
  4135aa:	add    al,0xce
  4135ac:	mov    cl,BYTE PTR [ecx+0x6b0fdfcd]
  4135b2:	sar    DWORD PTR [eax+0x76],1
  4135b5:	mov    ds:0xa108ce8e,al
  4135ba:	jbe    0x41361d
  4135bc:	out    dx,al
  4135bd:	ficom  WORD PTR [ebx]
  4135bf:	leave  
  4135c0:	fadd   QWORD PTR [ecx+0xc1e056e]
  4135c6:	pusha  
  4135c7:	retf   
  4135c8:	call   0x3e7be77d
  4135cd:	call   0x4eeb:0x1441895c
  4135d4:	xor    eax,0xa4ff107a
  4135d9:	xor    DWORD PTR [edi-0xa4aaafd],ebp
  4135df:	adc    bl,ah
  4135e1:	sub    al,0x1d
  4135e3:	test   DWORD PTR [edi+0x1d],ecx
  4135e6:	mov    edx,0x33c5012c
  4135eb:	dec    ecx
  4135ec:	jne    0x413617
  4135ee:	push   es
  4135ef:	add    eax,DWORD PTR [ebx+0x6b]
  4135f2:	sub    BYTE PTR [edx-0x5b],bh
  4135f5:	push   edx
  4135f6:	jno    0x4135f6
  4135f8:	(bad)  
  4135f9:	mul    bh
  4135fb:	pop    ds
  4135fc:	push   eax
  4135fd:	sub    eax,0xf2862546
  413602:	bound  edi,QWORD PTR [ebx-0x6f]
  413605:	pusha  
  413606:	jl     0x413641
  413608:	xchg   ebx,eax
  413609:	retf   0xe6f9
  41360c:	mov    ebp,0x9ac16ac5
  413611:	pop    es
  413612:	xchg   edi,eax
  413613:	std    
  413614:	and    BYTE PTR [ecx+eax*2+0x2f],bh
  413618:	stos   DWORD PTR es:[edi],eax
  413619:	test   al,0x87
  41361b:	stc    
  41361c:	bound  ebp,QWORD PTR [ecx-0x3602b0f8]
  413622:	pop    esp
  413623:	idiv   DWORD PTR [edi]
  413625:	or     dh,ah
  413627:	mov    ds:0x552da359,al
  41362c:	fst    DWORD PTR [edx-0x6cea00be]
  413632:	(bad)  
  413633:	mov    cl,0xaa
  413635:	xchg   esp,eax
  413636:	call   0xbd0266fb
  41363b:	jge    0x41369b
  41363d:	popa   
  41363e:	scas   al,BYTE PTR es:[edi]
  41363f:	push   ss
  413640:	mov    dl,cl
  413642:	and    DWORD PTR [esi-0x47812614],ecx
  413648:	add    eax,0xe6852ebb
  41364d:	scas   al,BYTE PTR es:[edi]
  41364e:	dec    edi
  41364f:	xor    al,0xea
  413651:	cmp    eax,0x8997bc05
  413656:	jbe    0x4136cc
  413658:	add    al,0xe1
  41365a:	mov    DWORD PTR [eax-0x1b],ecx
  41365d:	cmp    ebp,DWORD PTR [edx]
  41365f:	jns    0x41360e
  413661:	in     eax,0xfd
  413663:	ror    DWORD PTR [ecx-0x1a],cl
  413666:	push   0x5bf231ac
  41366b:	cmp    dh,BYTE PTR [edi+edx*4+0x22856eea]
  413672:	int    0x7c
  413674:	lock inc edi
  413676:	imul   ch
  413678:	adc    al,0xd2
  41367a:	scas   eax,DWORD PTR es:[edi]
  41367b:	push   0x70
  41367d:	je     0x413613
  41367f:	je     0x413614
  413681:	cmp    cl,BYTE PTR [ecx+0x4d4a036f]
  413687:	retf   
  413688:	test   al,0xe4
  41368a:	lds    edi,FWORD PTR ds:0x4d265e19
  413690:	(bad)  
  413691:	int    0x27
  413693:	lods   al,BYTE PTR ds:[esi]
  413694:	sahf   
  413695:	enter  0x8755,0x32
  413699:	mov    ah,0xcf
  41369b:	(bad)  [ebp+0x14]
  41369e:	and    DWORD PTR ds:0xe84420d2,ebp
  4136a4:	int    0xc7
  4136a6:	cld    
  4136a7:	dec    edx
  4136a8:	fsubr  st(2),st
  4136aa:	sbb    BYTE PTR [ebx+0x5f174521],cl
  4136b0:	sbb    al,0xe1
  4136b2:	xor    esi,DWORD PTR [ecx+0x54]
  4136b5:	aam    0xe2
  4136b7:	mov    ebp,0xa01911ae
  4136bc:	call   0xf704:0x11c46394
  4136c3:	jle    0x413706
  4136c5:	push   es
  4136c6:	pushf  
  4136c7:	mov    edi,0x94f01c43
  4136cc:	jns    0x413737
  4136ce:	repz jb 0x4136a3
  4136d1:	dec    esp
  4136d2:	adc    al,0x8b
  4136d4:	jecxz  0x413703
  4136d6:	sub    ch,cl
  4136d8:	mov    ?,WORD PTR [esi]
  4136da:	cs sub esi,edx
  4136dd:	mov    al,ds:0xc00cf88c
  4136e2:	scas   al,BYTE PTR es:[edi]
  4136e3:	mov    ebx,ebx
  4136e5:	ja     0x41368d
  4136e7:	test   ebp,edi
  4136e9:	or     eax,0x9f33f98f
  4136ee:	or     BYTE PTR [edi-0x33],bl
  4136f1:	mov    eax,ds:0x6abdfde1
  4136f6:	es imul ecx,ebx,0xffffffce
  4136fa:	in     eax,0x94
  4136fc:	shr    bl,0x41
  4136ff:	or     DWORD PTR [ebx],eax
  413701:	cmp    BYTE PTR [eiz*8-0x1df201d0],al
  413708:	dec    esp
  413709:	push   ecx
  41370a:	mov    ch,0x4d
  41370c:	popf   
  41370d:	test   al,0xd2
  41370f:	in     eax,0xe2
  413711:	(bad)  
  413712:	jge    0x41372b
  413714:	aam    0x22
  413716:	out    0xaf,al
  413718:	ja     0x4136f8
  41371a:	(bad)  
  41371b:	push   ss
  41371c:	sbb    ebp,DWORD PTR [edx-0x33]
  41371f:	inc    ebp
  413720:	lahf   
  413721:	jne    0x413728
  413723:	mov    ah,0x15
  413725:	(bad)  
  413726:	(bad)  
  413727:	fs hlt 
  413729:	pmuludq mm3,QWORD PTR [edi]
  41372c:	call   0x41fdb872
  413731:	and    BYTE PTR [edi],dl
  413733:	pushf  
  413734:	add    eax,0x4e872e04
  413739:	popf   
  41373a:	mov    ds:0x63230d98,al
  41373f:	pop    esi
  413740:	aas    
  413741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413742:	pop    edx
  413743:	call   0x489b:0x40175c6a
  41374a:	cmc    
  41374b:	sub    al,0x3b
  41374d:	mov    ds:0xb546c028,eax
  413752:	sti    
  413753:	fs out dx,al
  413755:	and    ecx,0x3687da81
  41375b:	push   0x6657ef9f
  413760:	repz fiadd WORD PTR [ebp-0x4a]
  413764:	sbb    al,0xe2
  413766:	cmp    DWORD PTR [edx-0x6b],esp
  413769:	pop    es
  41376a:	stc    
  41376b:	out    0xf9,al
  41376d:	inc    edx
  41376e:	imul   ecx,DWORD PTR [edi-0x23],0x4b
  413772:	jmp    0x96ef0960
  413777:	sub    bh,BYTE PTR [ebp+0xb]
  41377a:	sub    eax,0x721ba8da
  41377f:	fbstp  TBYTE PTR [ebp+0x6a]
  413782:	cmp    edx,ecx
  413784:	mov    bh,0xe4
  413786:	sbb    eax,0x1d62fe64
  41378b:	scas   al,BYTE PTR es:[edi]
  41378c:	mov    BYTE PTR [eax],0xb
  41378f:	rol    BYTE PTR [esi-0xe],1
  413792:	(bad)  
  413793:	cld    
  413794:	pop    edx
  413795:	in     eax,dx
  413796:	repz xchg edi,eax
  413798:	pop    edx
  413799:	cmp    al,0xb1
  41379b:	clc    
  41379c:	push   0x34
  41379e:	stos   BYTE PTR es:[edi],al
  41379f:	push   cs
  4137a0:	std    
  4137a1:	in     eax,0x57
  4137a3:	shl    DWORD PTR [edi+edx*2-0x62],0x0
  4137a8:	call   0xfbfd:0x47fefde0
  4137af:	fldcw  WORD PTR [esp+esi*4]
  4137b2:	(bad)  
  4137b3:	retf   
  4137b4:	fbstp  TBYTE PTR [edx]
  4137b6:	nop
  4137b7:	test   al,0xa
  4137b9:	push   esp
  4137ba:	div    BYTE PTR [eax+edx*1]
  4137bd:	mov    eax,es:0x48c7c2a1
  4137c3:	adc    edx,DWORD PTR [edi+0x41]
  4137c6:	fdivrp st(7),st
  4137c8:	pop    ebx
  4137c9:	mov    ds:0x2dc92657,eax
  4137ce:	jle    0x4137a1
  4137d0:	push   0xffffffbc
  4137d2:	cdq    
  4137d3:	dec    ebx
  4137d4:	jl     0x4137fe
  4137d6:	sti    
  4137d7:	or     al,0xd1
  4137d9:	std    
  4137da:	sbb    al,0xcc
  4137dc:	mov    bl,BYTE PTR [edi+0x60]
  4137df:	sbb    al,0x12
  4137e1:	rcr    BYTE PTR [esi-0x2d01d5e4],1
  4137e7:	sti    
  4137e8:	ror    BYTE PTR [esi-0x4b],0x3
  4137ec:	mov    cl,0x41
  4137ee:	jne    0x41378f
  4137f0:	mov    ebp,0x7f359aad
  4137f5:	in     al,dx
  4137f6:	push   eax
  4137f7:	sub    ebx,DWORD PTR [ebx]
  4137f9:	sbb    eax,0xa8738865
  4137fe:	fcomp  DWORD PTR [edx]
  413800:	bound  edi,QWORD PTR [edi]
  413802:	lods   al,BYTE PTR ds:[esi]
  413803:	imul   edi,esi,0x9e7a0b4e
  413809:	pop    ss
  41380a:	ret    0x343b
  41380d:	cmc    
  41380e:	ins    BYTE PTR es:[edi],dx
  41380f:	popf   
  413810:	packsswb mm2,QWORD PTR [ebx-0x25cd4ba0]
  413817:	loope  0x4137da
  413819:	lahf   
  41381a:	cs retf 
  41381c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41381d:	sti    
  41381e:	mov    ecx,0xd3db19dd
  413823:	push   0xa7809b33
  413828:	dec    edi
  413829:	iret   
  41382a:	ror    ecx,0x36
  41382d:	test   DWORD PTR [ebx],esi
  41382f:	jo     0x4138a7
  413831:	xor    BYTE PTR [ebx],ah
  413833:	mov    eax,0x1233b1d5
  413838:	adc    al,0x98
  41383a:	mov    esi,0xf2510851
  41383f:	inc    ecx
  413840:	sbb    eax,0xcfae68cc
  413845:	lock jl 0x41386c
  413848:	ins    DWORD PTR es:[edi],dx
  413849:	or     eax,0x37e014fb
  41384e:	fidiv  DWORD PTR [edx+0x77]
  413851:	mov    edx,0xc638e114
  413856:	scas   al,BYTE PTR es:[edi]
  413857:	imul   ebx,DWORD PTR [edi+0x7a],0xd
  41385b:	test   ah,al
  41385d:	rol    esp,cl
  41385f:	sbb    BYTE PTR [eax-0x6a33f977],ch
  413865:	das    
  413866:	in     al,dx
  413867:	lods   al,BYTE PTR ds:[esi]
  413868:	xor    eax,0x84c1b9e6
  41386d:	or     al,0x2b
  41386f:	add    BYTE PTR [ebp-0x53],0x99
  413873:	stos   DWORD PTR es:[edi],eax
  413874:	je     0x41381b
  413876:	or     eax,0xeda3f9d7
  41387b:	lea    ecx,[ebx+ebp*4-0x6d]
  41387f:	lods   eax,DWORD PTR ds:[esi]
  413880:	scas   eax,DWORD PTR es:[edi]
  413881:	push   ebp
  413882:	imul   edi,DWORD PTR [edi-0x3aeee4d9],0x67
  413889:	loopne 0x413884
  41388b:	int    0xe
  41388d:	and    esp,DWORD PTR [edx]
  41388f:	daa    
  413890:	addr16 mov esi,edx
  413893:	(bad)  
  413894:	pusha  
  413895:	push   0xd
  413897:	push   ebx
  413898:	pusha  
  413899:	ss jnp 0x413916
  41389c:	cmp    DWORD PTR [ecx+ebp*8],ebx
  41389f:	ret    0x1a44
  4138a2:	fmul   QWORD PTR [edi-0x483f7e9b]
  4138a8:	lods   al,BYTE PTR ds:[esi]
  4138a9:	xlat   BYTE PTR ds:[ebx]
  4138aa:	data16 mov al,ds:0x6baf2c64
  4138b0:	and    ebp,ebp
  4138b2:	lods   al,BYTE PTR ds:[esi]
  4138b3:	pop    ecx
  4138b4:	mov    ebx,0x74c0353
  4138b9:	jle    0x41384f
  4138bb:	inc    ebx
  4138bc:	jmp    0x24311498
  4138c1:	into   
  4138c2:	idiv   DWORD PTR [edx]
  4138c4:	push   ecx
  4138c5:	xor    eax,0xae95ef84
  4138ca:	sub    ah,cl
  4138cc:	out    0xf7,al
  4138ce:	and    BYTE PTR [esi+0x53],al
  4138d1:	(bad)
  4138d4:	push   ecx
  4138d5:	lahf   
  4138d6:	jmp    0x3bc677ef
  4138db:	dec    esp
  4138dc:	and    BYTE PTR [ecx],al
  4138de:	dec    ebx
  4138df:	fiadd  WORD PTR [ecx]
  4138e1:	out    dx,al
  4138e2:	test   BYTE PTR [esi],dh
  4138e4:	or     al,0x3a
  4138e6:	leave  
  4138e7:	mov    ecx,0xaf26e34d
  4138ec:	lds    edx,FWORD PTR [edx+0x6d76bc45]
  4138f2:	(bad)  
  4138f3:	jae    0x413944
  4138f5:	jle    0x41396e
  4138f7:	add    dl,dl
  4138f9:	les    ecx,FWORD PTR [edi+0x3dc40dbd]
  4138ff:	push   0xe4e3b76c
  413904:	not    BYTE PTR gs:[edi+0x19e9c623]
  41390b:	stos   DWORD PTR es:[edi],eax
  41390c:	std    
  41390d:	xor    al,0x35
  41390f:	mov    ch,BYTE PTR [eax-0x14]
  413912:	jae    0x413974
  413914:	or     bl,BYTE PTR [edi]
  413916:	sub    BYTE PTR [ecx-0x3c],cl
  413919:	sbb    edi,DWORD PTR [ebp+0x3f]
  41391c:	retf   
  41391d:	lock pop esi
  41391f:	addr16 loop 0x413948
  413922:	(bad)  
  413923:	iret   
  413924:	mov    al,ds:0x7019c79f
  413929:	dec    ecx
  41392a:	push   ecx
  41392b:	pop    ecx
  41392c:	push   cs
  41392d:	add    edi,0xffffff8b
  413930:	stos   BYTE PTR es:[edi],al
  413931:	(bad)  
  413932:	pop    cx
  413934:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413935:	daa    
  413936:	add    cl,BYTE PTR [ecx-0x4e667f71]
  41393c:	ret    0xd940
  41393f:	mov    cl,BYTE PTR [eax]
  413941:	les    edi,FWORD PTR [bp+si]
  413944:	int3   
  413945:	int    0xb6
  413947:	js     0x4139b6
  413949:	mov    eax,0x6920e041
  41394e:	sahf   
  41394f:	lds    ecx,FWORD PTR [edi]
  413951:	in     eax,0x51
  413953:	test   al,0x57
  413955:	mov    ds:0xf2612b0d,eax
  41395a:	call   0xf38e47a3
  41395f:	mov    bl,0x70
  413961:	and    dl,0x32
  413964:	sbb    ch,bh
  413966:	rcl    BYTE PTR [edi+0x2cedc636],cl
  41396c:	push   ebx
  41396d:	mov    eax,0xda5a57ec
  413972:	(bad)  
  413973:	pop    esp
  413974:	loop   0x4139c2
  413976:	shr    DWORD PTR [esi],0x2b
  413979:	cmc    
  41397a:	adc    eax,0xf9262045
  41397f:	jle    0x41396e
  413981:	mov    ch,0xd6
  413983:	icebp  
  413984:	and    BYTE PTR [edx+eiz*4],ch
  413987:	jmp    0x1402:0x8af9b81d
  41398e:	mov    ch,0xda
  413990:	lods   al,BYTE PTR ds:[esi]
  413991:	adc    al,0x0
  413993:	add    ebx,esi
  413995:	and    eax,0x89949049
  41399a:	out    dx,al
  41399b:	sbb    esp,DWORD PTR [ecx-0x70fe352d]
  4139a1:	jmp    0x64ecedc4
  4139a6:	add    BYTE PTR [edi+0x38edd68e],ch
  4139ac:	push   ds
  4139ad:	std    
  4139ae:	xchg   edi,eax
  4139af:	(bad)  
  4139b1:	inc    edx
  4139b2:	mov    dh,0xa5
  4139b4:	ins    DWORD PTR es:[edi],dx
  4139b5:	mov    ds:0x96e3259d,al
  4139ba:	popf   
  4139bb:	cmp    al,BYTE PTR [esi-0x15]
  4139be:	rcl    eax,0x99
  4139c1:	mov    edx,0x81a24154
  4139c6:	jmp    0x772a:0xbb3229f5
  4139cd:	add    eax,0x8f22389a
  4139d2:	or     dl,BYTE PTR [ebp-0x3c111ec0]
  4139d8:	retf   0xfbf5
  4139db:	pop    ecx
  4139dc:	inc    ebp
  4139dd:	je     0x413a3a
  4139df:	sub    al,0xb7
  4139e1:	hlt    
  4139e2:	aad    0xa
  4139e4:	mov    ah,0x11
  4139e6:	mov    bh,0x3a
  4139e8:	push   eax
  4139e9:	out    dx,al
  4139ea:	cmp    ebp,0xe6aaa5f8
  4139f0:	scas   eax,DWORD PTR es:[edi]
  4139f1:	xlat   BYTE PTR ds:[ebx]
  4139f2:	cmc    
  4139f3:	lods   al,BYTE PTR ds:[esi]
  4139f4:	adc    eax,0xcb1f6a40
  4139f9:	and    ah,BYTE PTR [edi+0x70c1b059]
  4139ff:	scas   al,BYTE PTR es:[edi]
  413a00:	jmp    0xbfcf6b2f
  413a05:	cmp    dh,BYTE PTR [esi+ebp*1+0x5ae9b5f5]
  413a0c:	ins    DWORD PTR es:[edi],dx
  413a0d:	mov    ?,WORD PTR [ebp+ebp*2+0xb]
  413a11:	cmp    al,0xdc
  413a13:	lods   eax,DWORD PTR ds:[esi]
  413a14:	cmp    DWORD PTR [ebx-0x22],edi
  413a17:	add    BYTE PTR [esi+eiz*2],ch
  413a1a:	sub    dl,ah
  413a1c:	xchg   esi,eax
  413a1d:	sbb    eax,0x87ec32f
  413a22:	int3   
  413a23:	rcr    DWORD PTR [eax],1
  413a25:	test   eax,0x8ab417a7
  413a2a:	jle    0x4139c1
  413a2c:	inc    ebp
  413a2d:	xor    DWORD PTR [eax],0x61
  413a30:	mov    eax,0x3750e63b
  413a35:	or     DWORD PTR [ebp-0xb],edx
  413a38:	cmp    BYTE PTR [ebp+0x3bdcd426],ah
  413a3e:	call   0x7f84:0x5535fe16
  413a45:	xchg   ah,ch
  413a47:	dec    ebx
  413a48:	push   esp
  413a49:	sub    ebx,ebp
  413a4b:	add    eax,0xbed4b652
  413a50:	retf   0x2fd8
  413a53:	mov    ds:0xbfb1ca66,eax
  413a58:	cmp    eax,0x3ed0a2e2
  413a5d:	or     al,0x41
  413a5f:	mov    ecx,0x9337acaf
  413a64:	sub    bl,bl
  413a66:	sub    ecx,ecx
  413a68:	jge    0x413a0e
  413a6a:	mov    ah,0x17
  413a6c:	fs pop ds
  413a6e:	dec    ebp
  413a6f:	mov    bh,0xc9
  413a71:	mov    DWORD PTR [edx+0x66],esi
  413a74:	xor    eax,0xc82600d
  413a79:	jg     0x413af1
  413a7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a7c:	adc    al,BYTE PTR [ecx-0x4b]
  413a7f:	push   0x6606223c
  413a84:	or     edi,DWORD PTR [ecx+0x5eafa4e8]
  413a8a:	pop    edx
  413a8b:	inc    edi
  413a8c:	fnsave [esi+ebx*4]
  413a8f:	dec    esp
  413a90:	cwde   
  413a91:	pop    esi
  413a92:	push   ds
  413a93:	in     eax,dx
  413a94:	int3   
  413a95:	xor    edx,esp
  413a97:	bound  edx,QWORD PTR [edi+edx*2]
  413a9a:	xor    eax,DWORD PTR [edx-0x20]
  413a9d:	adc    al,0xd7
  413a9f:	jg     0x413b0d
  413aa1:	and    edx,DWORD PTR [ebx-0x7726fa07]
  413aa7:	inc    ebx
  413aa8:	bound  edi,QWORD PTR [ecx]
  413aaa:	mov    ah,0x2c
  413aac:	mov    al,dh
  413aae:	lods   eax,DWORD PTR ds:[esi]
  413aaf:	jecxz  0x413a8c
  413ab1:	jae    0x413aa4
  413ab3:	stc    
  413ab4:	cli    
  413ab5:	nop
  413ab6:	(bad)  
  413ab7:	das    
  413ab8:	in     eax,dx
  413ab9:	sub    BYTE PTR [esi],al
  413abb:	jecxz  0x413b09
  413abd:	hlt    
  413abe:	das    
  413abf:	into   
  413ac0:	or     DWORD PTR ds:0x1f7a6cc5,edi
  413ac6:	pop    ebp
  413ac7:	pop    ebx
  413ac8:	jo     0x413ac5
  413aca:	repnz test eax,0x893f48a4
  413ad0:	(bad)  
  413ad1:	xor    eax,DWORD PTR [ebx-0x50]
  413ad4:	mov    ebx,0xe142c37d
  413ad9:	in     eax,0x2a
  413adb:	pushf  
  413adc:	test   al,0xb5
  413ade:	inc    esi
  413adf:	mov    al,0x74
  413ae1:	fnstenv [esi]
  413ae3:	dec    edi
  413ae4:	cmp    ax,0x6b90
  413ae8:	rcr    BYTE PTR [eax],cl
  413aea:	or     ebp,DWORD PTR [esi-0x7deb0d64]
  413af0:	cmp    al,0x69
  413af2:	add    ah,cl
  413af4:	or     edi,DWORD PTR [edi+0x2919cb83]
  413afa:	pop    esi
  413afb:	pusha  
  413afc:	mov    edi,0x5b1dd4b2
  413b01:	aas    
  413b02:	xchg   ebp,eax
  413b03:	mov    edx,gs
  413b05:	inc    eax
  413b06:	push   cs
  413b07:	mov    ds:0x544d604a,al
  413b0c:	push   cs
  413b0d:	icebp  
  413b0e:	mov    esp,0x6867dc32
  413b13:	inc    ebp
  413b14:	frstor [ebp+0x53]
  413b17:	pop    edx
  413b18:	cli    
  413b19:	enter  0x53cc,0x80
  413b1d:	imul   edx,DWORD PTR [edx+0x27b2d99a],0x45
  413b24:	ins    BYTE PTR es:[edi],dx
  413b25:	xchg   edx,eax
  413b26:	push   ds
  413b27:	mov    eax,0x7fa7a7dd
  413b2c:	arpl   WORD PTR [ebx],ax
  413b2e:	adc    eax,esi
  413b30:	lods   eax,DWORD PTR ds:[esi]
  413b31:	pop    ds
  413b32:	adc    al,0xf4
  413b34:	loopne 0x413b89
  413b36:	mov    bh,0x40
  413b38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b39:	aad    0x2a
  413b3b:	xchg   esp,eax
  413b3c:	and    eax,0xdec271c9
  413b41:	imul   edx,DWORD PTR [edx],0x48
  413b44:	(bad)  
  413b45:	stc    
  413b46:	out    dx,al
  413b47:	mov    ?,WORD PTR [edx-0x4e]
  413b4a:	loopne 0x413b8e
  413b4c:	add    DWORD PTR [ebx],esi
  413b4e:	in     eax,dx
  413b4f:	stc    
  413b50:	dec    esi
  413b51:	cmp    ebp,eax
  413b53:	arpl   WORD PTR [edi],dx
  413b55:	jl     0x413b10
  413b57:	leave  
  413b58:	jae    0x413b11
  413b5a:	cmp    bh,bl
  413b5c:	fwait
  413b5d:	sbb    dh,al
  413b5f:	out    dx,eax
  413b60:	das    
  413b61:	dec    eax
  413b62:	add    DWORD PTR [ebx+0x49b56b6e],edx
  413b68:	xchg   edx,eax
  413b69:	ret    
  413b6a:	mov    eax,0x2a222328
  413b6f:	or     DWORD PTR [edx+0x215c9383],ebp
  413b75:	std    
  413b76:	or     eax,0xcaf93bae
  413b7b:	jecxz  0x413b06
  413b7d:	clc    
  413b7e:	out    0x8c,eax
  413b80:	xor    esi,0xd5125b26
  413b86:	xchg   edx,eax
  413b87:	xlat   BYTE PTR ds:[ebx]
  413b88:	fs in  al,0x4f
  413b8b:	sbb    BYTE PTR [esi-0x10],ch
  413b8e:	retf   0x8bd0
  413b91:	hlt    
  413b92:	leave  
  413b93:	int3   
  413b94:	jbe    0x413bdb
  413b96:	or     dl,BYTE PTR [eax+0x707175ff]
  413b9c:	jge    0x413b8c
  413b9e:	jp     0x413bc2
  413ba0:	adc    al,0xc5
  413ba2:	jne    0x413bd6
  413ba4:	add    BYTE PTR [edi],0x6b
  413ba7:	xchg   ebx,eax
  413ba8:	dec    esi
  413ba9:	and    al,0xe1
  413bab:	fild   QWORD PTR [edi]
  413bad:	fwait
  413bae:	xchg   ebx,eax
  413baf:	or     ebx,0xffffffb2
  413bb2:	in     al,dx
  413bb3:	loop   0x413c28
  413bb5:	mov    ecx,0x159775e
  413bba:	mov    ds:0xaaa124dc,eax
  413bbf:	jp     0x413b49
  413bc1:	or     esp,DWORD PTR [esi+0x50]
  413bc4:	ins    DWORD PTR es:[edi],dx
  413bc5:	(bad)  
  413bc6:	push   ebp
  413bc7:	cmc    
  413bc8:	pop    ebp
  413bc9:	es pusha 
  413bcb:	ins    DWORD PTR es:[edi],dx
  413bcc:	pop    es
  413bcd:	or     eax,DWORD PTR [edx]
  413bcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bd0:	rol    DWORD PTR [eax-0x3d],cl
  413bd3:	ss push ebx
  413bd5:	mov    DWORD PTR fs:0x89df8e0f,edx
  413bdc:	cmp    bl,BYTE PTR [ecx]
  413bde:	loope  0x413b89
  413be0:	frstor [esi-0x20378b84]
  413be6:	mov    dl,0xc0
  413be8:	xchg   esp,eax
  413be9:	dec    ebp
  413bea:	add    cl,BYTE PTR [ebp+0x36]
  413bed:	fmul   DWORD PTR ds:0x23930285
  413bf3:	sbb    DWORD PTR [esi],edx
  413bf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bf6:	xchg   BYTE PTR [edi+eax*1],ch
  413bf9:	cmp    ecx,esi
  413bfb:	sub    ebx,DWORD PTR [edi-0x50]
  413bfe:	daa    
  413bff:	(bad)  
  413c00:	out    0x86,eax
  413c02:	hlt    
  413c03:	pushf  
  413c04:	ret    
  413c05:	(bad)  
  413c06:	dec    esp
  413c07:	fst    DWORD PTR ds:0xf8473348
  413c0d:	shr    DWORD PTR [esi+0x5fe89517],0xc0
  413c14:	xor    DWORD PTR [esi],ecx
  413c16:	push   ss
  413c17:	mov    eax,ds:0x892661f1
  413c1c:	jb     0x413be3
  413c1e:	int    0xc8
  413c20:	into   
  413c21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c22:	rol    DWORD PTR [esp+eiz*2+0x4ca2a74f],0x60
  413c2a:	inc    eax
  413c2b:	scas   eax,DWORD PTR es:[edi]
  413c2c:	sbb    BYTE PTR [ecx+0x10],0x34
  413c30:	out    dx,eax
  413c31:	scas   al,BYTE PTR es:[edi]
  413c32:	adc    eax,0xa4c1b0ac
  413c37:	retw   0xdb75
  413c3b:	jae    0x413bcd
  413c3d:	push   ecx
  413c3e:	retf   
  413c3f:	inc    ebp
  413c40:	sub    al,0xb7
  413c42:	addr16 xchg esi,eax
  413c44:	div    DWORD PTR [ecx-0x5b]
  413c47:	jo     0x413c3a
  413c49:	scas   eax,DWORD PTR es:[edi]
  413c4a:	sbb    cl,bl
  413c4c:	(bad)  
  413c4d:	push   edi
  413c4e:	or     al,0xcb
  413c50:	pusha  
  413c51:	sbb    al,0x3a
  413c53:	leave  
  413c54:	jno    0x413bdb
  413c56:	mov    DWORD PTR [esi-0x342e7f06],esi
  413c5c:	mov    edx,0x347973f4
  413c61:	addr16 jbe 0x413c6a
  413c64:	fs mov ebx,ds
  413c67:	inc    ebx
  413c68:	push   cs
  413c69:	mov    edi,0x9732c752
  413c6e:	in     al,dx
  413c6f:	mov    ecx,0x392bc817
  413c74:	jecxz  0x413c16
  413c76:	sar    esp,cl
  413c78:	clc    
  413c79:	into   
  413c7a:	xchg   ebx,eax
  413c7b:	(bad)
  413c7e:	mov    bh,0x30
  413c80:	int3   
  413c81:	loop   0x413c0f
  413c83:	mov    esi,0x2ddbd118
  413c88:	ds sub eax,0x42637648
  413c8e:	sbb    esi,ebx
  413c90:	push   es
  413c91:	popf   
  413c92:	pop    esp
  413c93:	repnz add BYTE PTR [eax+0x7d1a002d],bl
  413c9a:	das    
  413c9b:	mov    ebp,0xa9a53ee8
  413ca0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ca1:	mov    ds:0x3c042251,al
  413ca6:	ins    DWORD PTR es:[edi],dx
  413ca7:	outs   dx,DWORD PTR ds:[esi]
  413ca8:	sub    esp,DWORD PTR [esi+0x39a8e0dc]
  413cae:	push   es
  413caf:	fld    QWORD PTR [ebx]
  413cb1:	jp     0x413cfc
  413cb3:	gs pop edi
  413cb5:	add    esi,eax
  413cb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cb8:	mov    dl,BYTE PTR [ebp-0x700e7dd8]
  413cbe:	scas   eax,DWORD PTR es:[edi]
  413cbf:	sub    ebp,0x748240e8
  413cc5:	dec    eax
  413cc6:	lock mov esp,0x441fbb92
  413ccc:	or     eax,0xc1b1cc44
  413cd1:	pop    ss
  413cd2:	fild   WORD PTR [eax+0xbb80d22]
  413cd8:	mov    cl,0x92
  413cda:	sub    ebx,DWORD PTR [edi-0x7519778a]
  413ce0:	sub    BYTE PTR [ecx+ecx*4],dh
  413ce3:	adc    al,0xac
  413ce5:	fld    QWORD PTR [ebx+0x70]
  413ce8:	jne    0x413ca2
  413cea:	shl    DWORD PTR [edx+0x2290be9c],cl
  413cf0:	sbb    eax,0x27cf7e2
  413cf5:	lahf   
  413cf6:	lea    ebx,[esi]
  413cf8:	mov    ebx,0x4e048e35
  413cfd:	mov    ebp,0x54fb07d4
  413d02:	jmp    0x7bf6dd2f
  413d07:	les    edx,FWORD PTR [eax+0x46]
  413d0a:	push   ecx
  413d0b:	mov    esi,DWORD PTR [ecx]
  413d0d:	or     edx,DWORD PTR [eax+0x2]
  413d10:	and    esp,edi
  413d12:	das    
  413d13:	in     eax,dx
  413d14:	xchg   ebp,eax
  413d15:	xor    eax,DWORD PTR [edx]
  413d17:	imul   eax,ecx,0xffffffb1
  413d1a:	xor    esp,DWORD PTR [ecx]
  413d1c:	ror    cl,1
  413d1e:	jmp    0x701375ae
  413d23:	sub    al,0xfd
  413d25:	ret    
  413d26:	les    ebp,FWORD PTR [ebx+ebx*2+0x2d]
  413d2a:	xchg   BYTE PTR ds:0x79ce91c3,al
  413d30:	xchg   ebp,eax
  413d31:	dec    esp
  413d32:	add    ebp,0xf151406d
  413d38:	out    dx,eax
  413d39:	mov    esp,DWORD PTR [ecx+0x3c22ccf3]
  413d3f:	daa    
  413d40:	dec    edx
  413d41:	add    esp,DWORD PTR [edi]
  413d43:	push   0xffffff8c
  413d45:	push   ecx
  413d46:	mov    esp,0x661627e3
  413d4b:	inc    esp
  413d4c:	aam    0xd1
  413d4e:	test   al,0xc
  413d50:	out    dx,ax
  413d52:	mov    dl,0x75
  413d54:	rcl    edi,cl
  413d56:	stos   BYTE PTR es:[edi],al
  413d57:	xchg   esi,eax
  413d58:	cwde   
  413d59:	clc    
  413d5a:	and    ah,dl
  413d5c:	sbb    eax,0xc7fd4ce9
  413d61:	fadd   DWORD PTR [edi+eax*8-0xa]
  413d65:	xor    al,0x31
  413d67:	or     esp,ebx
  413d69:	adc    dh,bh
  413d6b:	push   edi
  413d6c:	mov    dl,BYTE PTR ds:0x33762bb8
  413d72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d73:	das    
  413d74:	mov    ds:0x9497daa0,al
  413d79:	out    dx,al
  413d7a:	mov    eax,DWORD PTR [edx-0x51]
  413d7d:	xchg   esi,eax
  413d7e:	mov    edi,0xbb55cdab
  413d83:	mov    WORD PTR ds:0xf99ca832,ds
  413d89:	dec    edi
  413d8a:	push   eax
  413d8b:	in     eax,dx
  413d8c:	int3   
  413d8d:	shr    BYTE PTR [edx+ebx*8-0x732621c2],0x57
  413d95:	or     dh,ah
  413d97:	mov    esi,0x59478c70
  413d9c:	addr16 out 0xb6,eax
  413d9f:	stos   BYTE PTR es:[edi],al
  413da0:	imul   edx,edi,0xabe70fb2
  413da6:	lea    ebp,[edx]
  413da8:	out    0xbb,eax
  413daa:	fnstcw WORD PTR [ebx-0x48]
  413dad:	loop   0x413da5
  413daf:	fst    DWORD PTR [edx]
  413db1:	lds    ebp,FWORD PTR [eax+0x4e]
  413db4:	imul   edx
  413db6:	jg     0x413e1a
  413db8:	(bad)  
  413db9:	rol    BYTE PTR [esi+0x1f766769],1
  413dbf:	inc    esp
  413dc0:	int3   
  413dc1:	dec    ebp
  413dc2:	mov    edi,0x7a0af116
  413dc7:	sar    esp,0xac
  413dca:	cmp    ebp,DWORD PTR [ebx]
  413dcc:	and    ecx,ebp
  413dce:	imul   eax,DWORD PTR [ebx+0x76],0xffffff88
  413dd2:	push   ebp
  413dd3:	jecxz  0x413d81
  413dd5:	sub    bl,BYTE PTR [ebx]
  413dd7:	dec    ecx
  413dd8:	cmp    esp,edi
  413dda:	fstp   DWORD PTR [ebx+0x7]
  413ddd:	mov    esi,ebx
  413ddf:	jmp    0x413e23
  413de1:	je     0x413e2c
  413de3:	mov    ebp,0x35717e43
  413de8:	inc    esi
  413de9:	and    al,0xfd
  413deb:	mov    eax,ds:0x95951a6
  413df0:	and    edi,DWORD PTR [ecx+0x108840bf]
  413df6:	xchg   BYTE PTR [eax],al
  413df8:	sub    al,dh
  413dfa:	jbe    0x413dc4
  413dfc:	or     eax,DWORD PTR [ebx]
  413dfe:	mov    dl,0xda
  413e00:	dec    edi
  413e01:	loop   0x413ddb
  413e03:	in     al,dx
  413e04:	mov    cl,0x40
  413e06:	and    cl,dl
  413e08:	push   ss
  413e09:	pop    esp
  413e0a:	sti    
  413e0b:	adc    eax,0x7ad1bff2
  413e10:	jo     0x413e77
  413e12:	(bad)  
  413e13:	jge    0x413e3e
  413e15:	iret   
  413e16:	stos   DWORD PTR es:[edi],eax
  413e17:	sbb    al,0x3b
  413e19:	xchg   ecx,eax
  413e1a:	mov    edi,0x68669234
  413e1f:	pop    edi
  413e20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e21:	ins    BYTE PTR es:[edi],dx
  413e22:	jbe    0x413df8
  413e24:	mov    DWORD PTR [edx+eiz*2],esi
  413e27:	xor    BYTE PTR [edx+0x57],dh
  413e2a:	imul   esi,DWORD PTR [esp+esi*2-0x61008ead],0xffffffad
  413e32:	sahf   
  413e33:	loopne 0x413e6d
  413e35:	add    dh,cl
  413e37:	stos   BYTE PTR es:[edi],al
  413e38:	inc    esi
  413e39:	mov    BYTE PTR [esi+0x1a04f2d6],bl
  413e3f:	sbb    edi,DWORD PTR ds:0x7ca8306
  413e45:	adc    eax,0xbea78b65
  413e4a:	xor    al,BYTE PTR [esi-0x136d6c51]
  413e50:	dec    eax
  413e51:	or     eax,0x56c6a8fc
  413e56:	sbb    BYTE PTR [eax+0x38d6ea8e],bl
  413e5c:	adc    esp,ecx
  413e5e:	call   0x520bb646
  413e63:	push   esp
  413e64:	nop
  413e65:	sub    bh,BYTE PTR [edx-0x4a462557]
  413e6b:	in     eax,dx
  413e6c:	je     0x413e01
  413e6e:	jb     0x413e2d
  413e70:	push   ds
  413e71:	add    eax,0x8b6d4a84
  413e76:	les    edx,FWORD PTR [ebp+0x2c0cb5eb]
  413e7c:	add    eax,0x2214f7b0
  413e81:	push   cs
  413e82:	pop    eax
  413e83:	jnp    0x413e7e
  413e85:	push   edi
  413e86:	leave  
  413e87:	(bad)  
  413e88:	cmp    ah,BYTE PTR [eax+0x2eb17c7e]
  413e8e:	popa   
  413e8f:	jb     0x413e76
  413e91:	pandn  mm6,QWORD PTR [edi-0x50]
  413e95:	sbb    cl,0xca
  413e98:	cwde   
  413e99:	(bad)  
  413e9a:	cli    
  413e9b:	push   esp
  413e9c:	mov    eax,ds:0xc4344dd4
  413ea1:	sbb    al,dh
  413ea3:	addr16 out dx,eax
  413ea5:	jae    0x413e4c
  413ea7:	mov    esi,ds
  413ea9:	int    0x81
  413eab:	add    al,0xb6
  413ead:	rcr    DWORD PTR [edx+0x6652b44],cl
  413eb3:	pop    ebx
  413eb4:	addr16 aam 0xfd
  413eb7:	arpl   WORD PTR [esp+ecx*8],sp
  413eba:	adc    eax,0x184620fe
  413ebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ec0:	lock inc ebp
  413ec2:	dec    ecx
  413ec3:	mov    ds:0x82106d85,al
  413ec8:	mov    cl,0x9c
  413eca:	dec    edi
  413ecb:	cdq    
  413ecc:	dec    ebp
  413ecd:	xchg   ebx,eax
  413ece:	int3   
  413ecf:	inc    ecx
  413ed0:	fld    QWORD PTR [ebx]
  413ed2:	adc    eax,0x9b7db63c
  413ed7:	mov    ecx,DWORD PTR [esi-0x52ece726]
  413edd:	and    dl,BYTE PTR [ebx-0x198d740e]
  413ee3:	loop   0x413eff
  413ee5:	xchg   edi,eax
  413ee6:	mov    edx,DWORD PTR [ebp-0x14]
  413ee9:	mov    DWORD PTR [ebp+0x8],edx
  413eec:	jmp    0x4162e7
  413ef1:	mov    edx,DWORD PTR [ebp+0x8]
  413ef4:	mov    ebx,DWORD PTR [ebp-0x8]
  413ef7:	xor    edx,eax
  413ef9:	xor    ebx,eax
  413efb:	sub    edx,ebx
  413efd:	sub    edx,esi
  413eff:	xor    edx,eax
  413f01:	mov    DWORD PTR [ebp+0x8],edx
  413f04:	mov    edx,DWORD PTR [ebp+0x8]
  413f07:	mov    ebx,DWORD PTR [ebp-0x58]
  413f0a:	add    edx,0x5708f8
  413f10:	imul   edx,ebx
  413f13:	jmp    0x416299
  413f18:	push   eax
  413f19:	pusha  
  413f1a:	clc    
  413f1b:	push   es
  413f1c:	call   0x5435b3a7
  413f21:	add    dh,bh
  413f23:	or     ah,cl
  413f25:	imul   ebp,DWORD PTR ds:0x7a73b5b9,0x7a
  413f2c:	add    DWORD PTR [edi+0x7a],ebx
  413f2f:	jp     0x413f84
  413f31:	(bad)  
  413f32:	sbb    cl,0xcc
  413f35:	jmp    0x413fa5
  413f37:	push   esi
  413f38:	aad    0xc5
  413f3a:	rol    DWORD PTR [edx],1
  413f3c:	out    0x25,eax
  413f3e:	add    al,0xe1
  413f40:	sbb    al,0xb7
  413f42:	jnp    0x413f78
  413f44:	add    ebx,esi
  413f46:	shl    DWORD PTR [ebx],0x90
  413f49:	xchg   edi,eax
  413f4a:	test   eax,0xaec6b6b8
  413f4f:	(bad)  
  413f50:	lock fmulp st(2),st
  413f53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f54:	and    ebp,edi
  413f56:	jmp    0x413f68
  413f58:	add    edx,DWORD PTR ds:0xf4ad79d
  413f5e:	clc    
  413f5f:	inc    ebp
  413f60:	push   es
  413f61:	fnstsw WORD PTR [esp+eax*2+0x72]
  413f65:	rol    al,1
  413f67:	iret   
  413f68:	xchg   ecx,eax
  413f69:	xchg   edx,eax
  413f6a:	mul    BYTE PTR [eax]
  413f6c:	inc    edi
  413f6d:	daa    
  413f6e:	ins    BYTE PTR es:[edi],dx
  413f6f:	pop    eax
  413f70:	rcr    ebx,0x42
  413f73:	inc    edi
  413f74:	mov    eax,0xb9b83140
  413f79:	mov    ah,0x53
  413f7b:	mov    ds:0xfb7c1c5e,al
  413f80:	jmp    0x413fb7
  413f82:	dec    ecx
  413f83:	mov    dh,0x41
  413f85:	test   eax,0xbeac32c
  413f8a:	lods   eax,DWORD PTR ds:[esi]
  413f8c:	(bad)  
  413f8d:	lds    esi,FWORD PTR [ebp-0xeea5378]
  413f93:	push   DWORD PTR [edi]
  413f95:	fcom   DWORD PTR [ebp-0x2e5d433c]
  413f9b:	stos   DWORD PTR es:[edi],eax
  413f9c:	lods   eax,DWORD PTR ds:[esi]
  413f9d:	ds je  0x41400a
  413fa0:	jle    0x413f97
  413fa2:	pusha  
  413fa3:	pop    ebx
  413fa4:	xchg   BYTE PTR ss:[ecx-0x4c],ch
  413fa8:	stos   BYTE PTR es:[edi],al
  413fa9:	sub    DWORD PTR [ecx+0x7e],esi
  413fac:	mov    eax,0xecb2d71e
  413fb1:	mov    ecx,0x169ac3c2
  413fb6:	sub    eax,0xe49702da
  413fbb:	xlat   BYTE PTR ds:[ebx]
  413fbc:	ss leave 
  413fbe:	xor    BYTE PTR [ecx],ch
  413fc0:	and    BYTE PTR [ebp-0x174192ed],bh
  413fc6:	out    0xdc,eax
  413fc8:	ds test eax,0x85eb80f7
  413fce:	in     eax,dx
  413fcf:	loop   0x413fdb
  413fd1:	dec    esp
  413fd2:	mov    eax,ds:0x3f3d0109
  413fd7:	inc    edx
  413fd8:	gs pushf 
  413fda:	mov    eax,0xd4fc2212
  413fdf:	sub    edx,ebx
  413fe1:	jecxz  0x414037
  413fe3:	and    eax,DWORD PTR [edx+0x2bbde084]
  413fe9:	jl     0x414067
  413feb:	or     eax,0x5f07982d
  413ff0:	ret    0x596f
  413ff3:	int    0x47
  413ff5:	popa   
  413ff6:	xchg   edi,eax
  413ff7:	test   BYTE PTR [eax-0x5260330],bh
  413ffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ffe:	xchg   ebp,eax
  413fff:	les    eax,FWORD PTR [esi]
  414001:	out    dx,eax
  414002:	nop
  414003:	outs   dx,BYTE PTR ds:[esi]
  414004:	or     esi,DWORD PTR [eax-0x45]
  414007:	and    eax,0x8294a30b
  41400c:	dec    ecx
  41400d:	rep outs dx,DWORD PTR ds:[esi]
  41400f:	out    0x79,al
  414011:	dec    ebx
  414012:	(bad)  
  414013:	adc    DWORD PTR [edx-0x72667325],esp
  414019:	mov    dh,0x60
  41401b:	bound  esp,QWORD PTR [esi]
  41401d:	das    
  41401e:	pop    eax
  41401f:	cld    
  414020:	sbb    al,0x57
  414022:	or     eax,0xfb282ca7
  414027:	cmp    eax,0x55bada1c
  41402c:	sub    eax,DWORD PTR [ecx-0x17]
  41402f:	clc    
  414030:	jp     0x414056
  414032:	and    DWORD PTR [edx],esp
  414034:	jmp    0xc59e:0x6d2a9698
  41403b:	test   eax,0x8d25f2ee
  414040:	mov    edx,DWORD PTR [esi+0x72ac44b1]
  414046:	ss shl edx,1
  414049:	xchg   esi,eax
  41404a:	adc    bh,BYTE PTR [ecx+0xe]
  41404d:	ror    BYTE PTR [ecx-0x4e],1
  414050:	cwde   
  414051:	mov    DWORD PTR [edx-0x58],0xa9a6d0fc
  414058:	pop    edi
  414059:	out    0x97,eax
  41405b:	mov    dh,0x3b
  41405d:	or     eax,0xa1d6e1ad
  414062:	and    BYTE PTR [ecx+0x3a4a90ee],ah
  414068:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414069:	xor    al,0xeb
  41406b:	dec    edx
  41406c:	jo     0x414057
  41406e:	call   0x7635:0x8e366983
  414075:	jmp    0xe34663f9
  41407a:	mov    DWORD PTR [esp+edi*1],esp
  41407d:	push   esi
  41407e:	rol    DWORD PTR [ebp-0x1d6afbe6],1
  414084:	push   esp
  414085:	es cld 
  414087:	jle    0x414053
  414089:	mov    dh,0xaf
  41408b:	cld    
  41408c:	mov    esi,0x12552f04
  414091:	jmp    0xec7e:0xb97a92b3
  414098:	fwait
  414099:	addr16 loop 0x414036
  41409c:	mov    dh,BYTE PTR [ecx-0x1f]
  41409f:	xchg   edx,eax
  4140a0:	and    eax,DWORD PTR [eax+ebx*1]
  4140a3:	jns    0x414124
  4140a5:	call   0x76e8:0x2f241a9d
  4140ac:	push   ds
  4140ad:	(bad)  
  4140ae:	fist   DWORD PTR ds:0x20e6f09c
  4140b4:	inc    ebp
  4140b5:	into   
  4140b6:	pop    ds
  4140b7:	xchg   esp,eax
  4140b8:	test   BYTE PTR ds:0x337ad78e,al
  4140be:	mov    ds:0xcbfc3862,eax
  4140c3:	lock push cs
  4140c5:	mov    BYTE PTR [edi],ah
  4140c7:	mov    dl,BYTE PTR [esi]
  4140c9:	cli    
  4140ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140cb:	push   eax
  4140cc:	ins    DWORD PTR es:[edi],dx
  4140cd:	sti    
  4140ce:	dec    ebx
  4140cf:	ins    DWORD PTR es:[edi],dx
  4140d0:	inc    ebp
  4140d1:	adc    al,0x46
  4140d3:	mov    bh,bl
  4140d5:	out    0x2b,eax
  4140d7:	out    0xbb,al
  4140d9:	mov    ebx,0xcee7221c
  4140de:	addr16 cmp esi,eax
  4140e1:	out    dx,eax
  4140e2:	and    BYTE PTR [edi-0x5186f43],0xcc
  4140e9:	or     cl,0xb2
  4140ec:	aas    
  4140ed:	or     ch,BYTE PTR [eax]
  4140ef:	daa    
  4140f0:	pop    ecx
  4140f1:	jne    0x414102
  4140f3:	iret   
  4140f4:	inc    esi
  4140f5:	xor    eax,0x2a193972
  4140fa:	cmp    ecx,DWORD PTR [ebx+0x4268160f]
  414100:	stos   BYTE PTR es:[di],al
  414102:	push   0xffffff9c
  414104:	mov    edi,esp
  414106:	mov    esp,0x13b079ae
  41410b:	out    dx,al
  41410c:	jmp    0x6d47:0x82a8712f
  414113:	int3   
  414114:	xchg   ebp,eax
  414115:	pop    ebp
  414116:	idiv   BYTE PTR [edx-0x7]
  414119:	jmp    0x18faf28
  41411e:	(bad)  [eax+ebp*8]
  414121:	pop    edx
  414122:	pop    eax
  414123:	mov    bl,0x86
  414125:	(bad)  
  414126:	in     eax,dx
  414127:	ins    DWORD PTR es:[edi],dx
  414128:	scas   eax,DWORD PTR es:[edi]
  414129:	xchg   esp,eax
  41412a:	sub    ebp,DWORD PTR [edx+ecx*1]
  41412d:	jle    0x41416f
  41412f:	fdecstp 
  414131:	push   0x43f92f2a
  414136:	pop    esp
  414137:	jne    0x4140ce
  414139:	jo     0x41413e
  41413b:	mov    edi,0x84d43955
  414140:	sbb    al,BYTE PTR [esp+eax*1]
  414143:	js     0x4141c1
  414145:	bnd ret 0x7abc
  414149:	or     DWORD PTR [eax],edi
  41414b:	or     BYTE PTR [edx-0x63f8bbbb],ah
  414151:	sbb    al,0x54
  414153:	aaa    
  414154:	push   esp
  414155:	jp     0x4140dd
  414157:	xor    al,0x7a
  414159:	jb     0x414101
  41415b:	gs pop ecx
  41415d:	dec    edx
  41415e:	dec    edi
  41415f:	xlat   BYTE PTR ds:[ebx]
  414160:	dec    ebp
  414161:	mov    ecx,0x39fac295
  414166:	xor    BYTE PTR [eax-0x5badb5b0],cl
  41416c:	lods   eax,DWORD PTR ds:[esi]
  41416d:	out    0x36,eax
  41416f:	and    bl,al
  414171:	loope  0x4140f9
  414173:	or     DWORD PTR [ebx-0x765035f7],0x225de43a
  41417d:	mov    ah,0xd5
  41417f:	jle    0x4141b1
  414181:	test   al,0xc4
  414183:	inc    esp
  414184:	shl    BYTE PTR [esi],0x67
  414187:	in     eax,0x40
  414189:	retf   
  41418a:	js     0x4141a2
  41418c:	add    ah,BYTE PTR [ecx-0x54]
  41418f:	mov    ch,0x74
  414191:	xchg   DWORD PTR [edx+0x9],ecx
  414194:	cmp    BYTE PTR [edi+0x4eb4cf00],al
  41419a:	jmp    0x414184
  41419c:	mov    ah,0x44
  41419e:	aam    0x8f
  4141a0:	ja     0x4141fc
  4141a2:	inc    esi
  4141a3:	push   0x40c366
  4141a8:	scas   eax,DWORD PTR es:[edi]
  4141a9:	or     ah,bh
  4141ab:	jp     0x41419c
  4141ad:	add    al,0xc
  4141af:	cmp    DWORD PTR [ebp+0x1f],edx
  4141b2:	and    ebx,DWORD PTR [ecx]
  4141b4:	sub    BYTE PTR [eax],ah
  4141b6:	test   eax,0xb0ebcc8e
  4141bb:	mov    es,ebp
  4141bd:	sbb    DWORD PTR [edi],esp
  4141bf:	inc    esp
  4141c0:	jns    0x41422e
  4141c2:	shr    esi,1
  4141c4:	imul   ebp,eax,0xff47ebb2
  4141ca:	nop
  4141cb:	jns    0x414246
  4141cd:	pop    ebx
  4141ce:	and    ebx,eax
  4141d0:	mov    dl,0xac
  4141d2:	das    
  4141d3:	xchg   BYTE PTR [edi-0x76],bl
  4141d6:	gs std 
  4141d8:	pushf  
  4141d9:	dec    ebx
  4141da:	fs js  0x4141bb
  4141dd:	lock sbb eax,0xece9ebe3
  4141e3:	sub    esp,edi
  4141e5:	jmp    0x3bac333e
  4141ea:	fst    QWORD PTR [eax]
  4141ec:	cld    
  4141ed:	pop    ebx
  4141ee:	rcr    DWORD PTR [edi],cl
  4141f0:	push   ds
  4141f1:	in     al,dx
  4141f2:	mov    esi,0x3ba95b88
  4141f7:	jnp    0x4141d3
  4141f9:	add    ch,BYTE PTR ds:0xe331a6d2
  4141ff:	sbb    al,0x33
  414201:	xor    DWORD PTR ds:0x4c06c46,ebp
  414207:	clc    
  414208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414209:	pushf  
  41420a:	pop    edx
  41420b:	call   0x9565:0x262e58e9
  414212:	push   ebp
  414213:	and    BYTE PTR [ebp-0x44],cl
  414216:	push   esi
  414217:	lahf   
  414218:	shr    BYTE PTR [eax+ebp*8-0x61],0x86
  41421d:	stc    
  41421e:	stos   DWORD PTR es:[edi],eax
  41421f:	mov    ch,0x8b
  414221:	int    0x2b
  414223:	(bad)  
  414224:	mov    edi,0x2a3ab6de
  414229:	jg     0x414249
  41422b:	pop    esp
  41422c:	cwde   
  41422d:	sti    
  41422e:	mov    cl,0x27
  414230:	outs   dx,DWORD PTR ds:[esi]
  414231:	daa    
  414232:	add    BYTE PTR [ebx],bh
  414234:	dec    esi
  414235:	pop    ebx
  414236:	cmp    eax,0x768ee34b
  41423b:	sbb    BYTE PTR [ebx],cl
  41423d:	addr16 pusha 
  41423f:	repz loop 0x414216
  414242:	fs cwde 
  414244:	mov    WORD PTR [ecx-0x603d276c],gs
  41424a:	jmp    0x4141ff
  41424c:	ret    
  41424d:	ins    DWORD PTR es:[edi],dx
  41424e:	inc    ebp
  41424f:	xor    BYTE PTR [edi],0x9c
  414252:	mov    bh,0x89
  414254:	cmc    
  414255:	jmp    FWORD PTR [edx-0x3c]
  414258:	leave  
  414259:	test   eax,0x131ec5f
  41425e:	dec    esp
  41425f:	jbe    0x41420e
  414261:	xchg   DWORD PTR [edi-0x5b8d2958],edx
  414267:	rcl    BYTE PTR [esi-0x3a],cl
  41426a:	jbe    0x41424b
  41426c:	and    DWORD PTR [eax-0x6cd6a06a],0x20
  414273:	sbb    DWORD PTR [eax-0x3cd759fb],edi
  414279:	mov    esp,0x7d993676
  41427e:	in     al,0xe5
  414280:	in     ax,dx
  414282:	repnz icebp 
  414284:	in     al,0xdc
  414286:	sbb    al,0xee
  414288:	fmul   st(6),st
  41428a:	mov    BYTE PTR [ecx+0x6b],dh
  41428d:	aaa    
  41428e:	and    eax,0x73424b58
  414293:	add    BYTE PTR [edi+ebp*2],ah
  414296:	adc    ebp,DWORD PTR [esi+0x7ff0eab1]
  41429c:	adc    eax,0xd91b7e4a
  4142a1:	mov    ecx,0x244847a2
  4142a6:	div    esi
  4142a8:	xor    edi,DWORD PTR [ebp+ecx*4-0x7b]
  4142ac:	push   esp
  4142ad:	std    
  4142ae:	test   al,0xc
  4142b1:	add    esp,DWORD PTR [ebp-0x6d0725e7]
  4142b7:	ds push ds
  4142b9:	mov    ebp,es
  4142bb:	std    
  4142bc:	xchg   ecx,eax
  4142bd:	mov    ah,BYTE PTR [ebx-0x5f797c30]
  4142c3:	lahf   
  4142c4:	push   esp
  4142c5:	retf   0x958e
  4142c8:	test   DWORD PTR [ebx],ecx
  4142ca:	and    eax,0x75ec0085
  4142cf:	adc    DWORD PTR [edx-0x625943b3],ebp
  4142d5:	xor    bl,cl
  4142d7:	lahf   
  4142d8:	nop
  4142d9:	pop    edi
  4142da:	fdivrp st(0),st
  4142dc:	xchg   esi,eax
  4142dd:	push   esp
  4142de:	jle    0x414263
  4142e0:	sub    eax,0xb5fe7e7d
  4142e5:	adc    eax,0xcebffbff
  4142ea:	pop    esp
  4142eb:	jp     0x414280
  4142ed:	xlat   BYTE PTR ds:[ebx]
  4142ee:	or     esp,eax
  4142f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142f1:	mov    ds:0x3febde2d,al
  4142f6:	out    dx,al
  4142f7:	ja     0x4142d6
  4142f9:	popf   
  4142fa:	adc    eax,0x6a013032
  4142ff:	mov    bl,0x1
  414301:	xchg   ecx,eax
  414302:	pop    es
  414303:	rol    edi,0x74
  414306:	jp     0x414321
  414308:	enter  0xaffd,0x43
  41430c:	(bad)  
  41430d:	ficomp DWORD PTR [eax]
  41430f:	popf   
  414310:	sub    al,0x27
  414312:	retf   0x1089
  414315:	inc    ebp
  414316:	push   ebp
  414317:	sub    cl,BYTE PTR [edx-0x7318f65]
  41431d:	inc    edx
  41431e:	push   es
  41431f:	inc    ecx
  414320:	xchg   esi,eax
  414321:	pop    edx
  414322:	push   eax
  414323:	test   eax,ebp
  414325:	mov    esi,0x2bf6870c
  41432a:	ret    0xc2ac
  41432d:	inc    ecx
  41432e:	jg     0x41436d
  414330:	inc    edx
  414331:	or     dh,BYTE PTR [edx+ebx*1]
  414334:	call   DWORD PTR [edi-0x57]
  414337:	hlt    
  414338:	add    cl,BYTE PTR [esp+ebp*4+0x1762716]
  41433f:	push   ecx
  414340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414341:	cmp    al,0x2c
  414343:	mov    ebx,DWORD PTR [eax]
  414345:	xchg   DWORD PTR [ecx-0x61],edi
  414348:	cld    
  414349:	inc    ebp
  41434a:	pop    esp
  41434b:	dec    ecx
  41434c:	js     0x4143ab
  41434e:	pop    esp
  41434f:	mov    dh,0xbc
  414351:	pop    ecx
  414352:	leave  
  414353:	xchg   edx,eax
  414354:	mov    bl,0xeb
  414356:	mov    al,0xbf
  414358:	and    bl,BYTE PTR [esi+0x4520bebc]
  41435e:	aaa    
  41435f:	add    bl,bh
  414361:	loopne 0x414335
  414363:	jne    0x414398
  414365:	loop   0x414380
  414367:	and    eax,0x8dcfce2c
  41436c:	jno    0x41432d
  41436e:	es add al,0x24
  414371:	ret    0x1287
  414374:	(bad)
  414378:	jecxz  0x414377
  41437a:	outs   dx,BYTE PTR ds:[esi]
  41437b:	or     BYTE PTR [ebp+0x56],ah
  41437e:	mov    ah,0x1e
  414380:	imul   edx,DWORD PTR [ebx+0x427c8751],0x4fedd07f
  41438a:	push   0x33
  41438c:	ret    0x9dc0
  41438f:	cmp    eax,DWORD PTR [ebx]
  414391:	test   eax,0x1bbaf26b
  414396:	mov    bh,0x4b
  414398:	cmp    esi,DWORD PTR [edx]
  41439a:	mov    DWORD PTR [edx],0x84e90035
  4143a0:	mov    bl,0xb0
  4143a2:	pop    ecx
  4143a3:	cs gs pop ss
  4143a6:	out    0x6d,al
  4143a8:	arpl   sp,cx
  4143aa:	add    al,BYTE PTR ds:0xb316f887
  4143b0:	add    BYTE PTR [esp+ebx*2+0x50],dl
  4143b4:	sbb    bh,bh
  4143b6:	sbb    dh,BYTE PTR [esi+0x3c]
  4143b9:	xchg   DWORD PTR [edi],ebx
  4143bb:	mov    esp,0x9365c18a
  4143c0:	clc    
  4143c1:	(bad)
  4143c4:	call   0x3eaeb699
  4143c9:	pop    di
  4143cb:	fstp   TBYTE PTR [edi+0xe]
  4143ce:	add    al,0x32
  4143d0:	mov    ds:0x671e45c2,eax
  4143d5:	popa   
  4143d6:	jb     0x4143df
  4143d8:	mov    cl,0x5f
  4143da:	add    al,0x92
  4143dc:	inc    esi
  4143dd:	popa   
  4143de:	lahf   
  4143df:	(bad)  
  4143e0:	add    edi,DWORD PTR [edi+0x7a]
  4143e3:	hlt    
  4143e4:	push   cs
  4143e5:	fcmovnb st,st(4)
  4143e7:	cmp    al,0xc0
  4143e9:	mov    cl,0x3c
  4143eb:	lods   al,BYTE PTR ds:[esi]
  4143ec:	push   ds
  4143ed:	fimul  DWORD PTR [esi+edi*8+0x3f]
  4143f1:	jae    0x4143b1
  4143f3:	pushf  
  4143f4:	sbb    ecx,DWORD PTR [ebx+0x583249fc]
  4143fa:	(bad)  
  4143fb:	sbb    ebp,edx
  4143fd:	xor    al,0xc5
  4143ff:	pop    es
  414400:	add    cl,cl
  414402:	xor    BYTE PTR [ecx-0x1e],dl
  414405:	push   ecx
  414406:	xchg   ebx,eax
  414407:	push   ecx
  414408:	aas    
  414409:	push   es
  41440a:	mov    ah,0xe8
  41440c:	and    DWORD PTR [edx],edx
  41440e:	je     0x41445a
  414410:	je     0x4143fc
  414412:	(bad)
  414415:	adc    esp,ebp
  414417:	mov    al,0x61
  414419:	pop    esi
  41441a:	push   ecx
  41441b:	mov    eax,0x549c594b
  414420:	sbb    dh,ah
  414422:	rcl    ebx,cl
  414424:	shl    DWORD PTR [ecx-0x5e4c9841],0x83
  41442b:	cmp    al,0x2f
  41442d:	inc    esp
  41442e:	popf   
  41442f:	push   cs
  414430:	dec    esp
  414431:	dec    edx
  414432:	sub    ebx,ebp
  414434:	sahf   
  414435:	adc    bh,bh
  414437:	mov    al,dh
  414439:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41443a:	int3   
  41443b:	sbb    al,0xd5
  41443d:	mov    fs,WORD PTR [edi]
  41443f:	fsubr  st(0),st
  414441:	pop    ecx
  414442:	fcom   QWORD PTR [eax]
  414444:	and    esp,eax
  414446:	(bad)  
  414447:	sbb    DWORD PTR [ecx+0x2f],ebx
  41444a:	jg     0x414406
  41444c:	pop    edi
  41444d:	shr    DWORD PTR [ecx-0x7b3163d1],1
  414453:	repnz mov ah,0x43
  414456:	dec    ebp
  414457:	(bad)  
  414458:	push   edx
  414459:	int3   
  41445a:	imul   ecx,DWORD PTR [ebp+edx*8-0x4db3b71a],0xffffff9b
  414462:	jle    0x41442e
  414464:	mov    bl,0x57
  414466:	xchg   edx,eax
  414467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414468:	int3   
  414469:	loopne 0x4144c1
  41446b:	mov    WORD PTR [esi-0x71f604e],?
  414471:	sbb    DWORD PTR [ebp-0x7061dc9f],ebx
  414477:	hlt    
  414478:	cmp    BYTE PTR [ecx-0x1],cl
  41447b:	adc    BYTE PTR [ecx+0x4cbfd4ec],al
  414481:	bound  ecx,QWORD PTR [esi+0x31]
  414484:	mov    eax,0x61eb82df
  414489:	fld    DWORD PTR [edx+0x2d52e8d]
  41448f:	inc    eax
  414490:	xchg   ecx,eax
  414491:	cdq    
  414492:	mov    bl,0x5
  414494:	jbe    0x41444f
  414496:	int3   
  414497:	out    0xfd,eax
  414499:	repz mov eax,ds:0x7918265
  41449f:	test   al,0xca
  4144a1:	test   eax,0x2a0a8724
  4144a6:	adc    BYTE PTR [ebp-0x4e],ch
  4144a9:	mov    esp,0xcb1daefe
  4144ae:	or     eax,0xedd6d63e
  4144b3:	mov    gs,WORD PTR [ebp+0xf]
  4144b6:	jmp    0x3e78:0x5dc63a9d
  4144bd:	jl     0x414450
  4144bf:	push   edi
  4144c0:	out    dx,eax
  4144c1:	and    DWORD PTR [edi+0x67],eax
  4144c4:	ror    DWORD PTR [ecx],0xc
  4144c7:	push   ecx
  4144c8:	dec    ebx
  4144c9:	out    0xe7,al
  4144cb:	ja     0x41450c
  4144cd:	test   DWORD PTR [ecx],edx
  4144cf:	pop    eax
  4144d0:	es std 
  4144d2:	cmp    BYTE PTR ds:0x9c3fd20f,dh
  4144d8:	adc    cl,BYTE PTR [edi]
  4144da:	xor    edi,DWORD PTR [ebp-0x42eda3d5]
  4144e0:	div    DWORD PTR [esp+edi*4-0x30554a8c]
  4144e7:	and    al,0x76
  4144e9:	ret    
  4144ea:	retf   
  4144eb:	scas   al,BYTE PTR es:[edi]
  4144ec:	inc    edi
  4144ed:	xchg   ecx,eax
  4144ee:	int3   
  4144ef:	add    eax,0x92887f93
  4144f4:	out    dx,eax
  4144f5:	bound  edx,QWORD PTR [ebp-0x257ef79b]
  4144fb:	rol    BYTE PTR [ebx+0x38],cl
  4144fe:	fcom   DWORD PTR [edx+0x17]
  414501:	push   ecx
  414502:	mov    edi,0x53ebd8ee
  414507:	ds mov ah,0xb4
  41450a:	std    
  41450b:	sub    DWORD PTR [edi-0x6d],ecx
  41450e:	add    eax,0x66af2b5d
  414513:	pusha  
  414514:	xchg   ecx,eax
  414515:	lock jnp 0x4144b0
  414518:	cld    
  414519:	das    
  41451a:	pop    esp
  41451b:	mov    ch,0xa
  41451d:	jge    0x414535
  41451f:	pop    eax
  414520:	in     eax,dx
  414521:	test   al,0xfa
  414523:	jne    0x41450d
  414525:	sub    DWORD PTR [ebp-0x4a1b9444],eax
  41452b:	mov    esi,0x9a7cbc69
  414530:	shl    BYTE PTR [esi-0x16196d19],1
  414536:	sub    dh,0x70
  414539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41453a:	cmp    bl,BYTE PTR [edx+eiz*2]
  41453d:	xchg   edx,ebx
  41453f:	push   edx
  414540:	add    al,BYTE PTR [eax]
  414542:	xor    eax,0x98107606
  414547:	jp     0x4144dd
  414549:	pop    ebx
  41454a:	sti    
  41454b:	mov    al,ds:0x94f7b149
  414550:	fistp  DWORD PTR [ebx]
  414552:	or     DWORD PTR [ebp+0x38e0fe19],edx
  414558:	test   eax,0x1b94e395
  41455d:	mov    BYTE PTR [edi-0x27],0x12
  414561:	mov    bh,0x8a
  414563:	and    al,0x78
  414565:	int3   
  414566:	mov    cl,0x7
  414568:	mov    bl,0xbb
  41456a:	sbb    eax,0xc345f925
  41456f:	inc    edi
  414570:	scas   al,BYTE PTR es:[edi]
  414571:	mov    ebp,0x7b018aba
  414576:	jmp    0x4145ad
  414578:	test   eax,0xc92d1f69
  41457d:	push   ss
  41457e:	call   0xcd3b:0x2923eba5
  414585:	dec    ebp
  414586:	pusha  
  414587:	in     eax,dx
  414588:	ss pop ebx
  41458a:	outs   dx,DWORD PTR ds:[esi]
  41458b:	sbb    edx,DWORD PTR [ecx+0x2eb2e780]
  414591:	sbb    esi,ecx
  414593:	push   eax
  414594:	pop    esi
  414595:	dec    ecx
  414596:	push   cs
  414597:	(bad)  
  414598:	es nop
  41459a:	mov    WORD PTR [edx+eiz*8+0x60],gs
  41459e:	pop    ecx
  41459f:	je     0x414571
  4145a1:	cmp    DWORD PTR [ebx-0x7b],edi
  4145a4:	jecxz  0x4145de
  4145a6:	mov    edx,0x52de41a5
  4145ab:	adc    eax,0xebfab470
  4145b0:	xchg   DWORD PTR [eax-0x1c1da1de],esp
  4145b6:	loopne 0x414616
  4145b8:	test   edx,0x50c5539
  4145be:	add    DWORD PTR [ebx+0x4c],esi
  4145c1:	nop
  4145c2:	(bad)  
  4145c3:	cs push edx
  4145c5:	clc    
  4145c6:	hlt    
  4145c7:	aad    0x92
  4145c9:	adc    BYTE PTR [esi],al
  4145cb:	jp     0x4145da
  4145cd:	push   ds
  4145ce:	add    DWORD PTR [ecx+edi*4],eax
  4145d1:	inc    esp
  4145d2:	mov    esp,0xd3b143d7
  4145d7:	rol    edx,0xcc
  4145da:	int3   
  4145db:	fsubr  QWORD PTR [ebx]
  4145dd:	push   es
  4145de:	out    dx,al
  4145df:	sahf   
  4145e0:	adc    esp,DWORD PTR [eax-0x41]
  4145e3:	inc    BYTE PTR [ecx+0x60]
  4145e6:	mov    WORD PTR [edi+0x16],ss
  4145e9:	nop
  4145ea:	mov    dh,0xf9
  4145ec:	dec    esp
  4145ed:	pop    edx
  4145ee:	pop    ds
  4145ef:	sub    BYTE PTR [eax-0x19],ah
  4145f2:	and    BYTE PTR [esi+ecx*2-0x2178889f],dh
  4145f9:	mov    dh,0x98
  4145fb:	jle    0x41459a
  4145fd:	mov    dl,0x24
  4145ff:	leave  
  414600:	inc    esi
  414601:	mov    al,0x31
  414603:	push   edx
  414604:	clc    
  414605:	(bad)  
  414606:	ret    
  414607:	add    eax,0xa586bd06
  41460c:	xchg   ebp,eax
  41460d:	fcom   QWORD PTR [esi]
  41460f:	mov    esp,0x415b11e1
  414614:	jp     0x414681
  414616:	mov    dl,0x3f
  414618:	xchg   esp,eax
  414619:	rol    BYTE PTR [ecx+0x54],0x30
  41461d:	dec    ebx
  41461e:	adc    al,BYTE PTR [eax]
  414620:	cmp    BYTE PTR [edi+eiz*8+0x6913ec3d],al
  414627:	or     eax,0xaa478b87
  41462c:	fs jno 0x4145cb
  41462f:	shl    BYTE PTR [edi],1
  414631:	pop    ss
  414632:	stos   DWORD PTR es:[edi],eax
  414633:	in     al,dx
  414634:	xor    ecx,DWORD PTR [ecx-0x47]
  414637:	and    edi,DWORD PTR [esi-0x63]
  41463a:	dec    eax
  41463b:	dec    edi
  41463c:	adc    ebx,DWORD PTR [esi-0x533dce35]
  414642:	sbb    al,0x6b
  414644:	push   0xffffff8b
  414646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414647:	sbb    BYTE PTR [ebx+edx*1+0x7b36c580],0x19
  41464f:	cli    
  414650:	xchg   ebp,eax
  414651:	fimul  DWORD PTR [edi+0x2b]
  414654:	fcmovb st,st(1)
  414656:	addr16 pop ebx
  414658:	add    eax,0x9456bb5
  41465d:	inc    ecx
  41465e:	pop    ecx
  41465f:	cmp    edx,DWORD PTR [esi]
  414661:	xor    al,0x31
  414663:	push   ecx
  414664:	(bad)  
  414665:	jg     0x41461f
  414667:	enter  0xc7f0,0xed
  41466b:	or     BYTE PTR [ecx],al
  41466d:	or     al,0x2c
  41466f:	pop    ebp
  414670:	pop    esi
  414671:	data16 and al,0x27
  414674:	jmp    0xffd51612
  414679:	retf   
  41467a:	dec    ecx
  41467b:	ffreep st(0)
  41467d:	out    dx,eax
  41467e:	(bad)  
  41467f:	fcmovb st,st(7)
  414681:	cwde   
  414682:	int3   
  414683:	call   0x4b0b:0x73b6d842
  41468a:	xchg   edi,eax
  41468b:	pop    esi
  41468c:	mov    al,0xa4
  41468e:	dec    BYTE PTR cs:[edx]
  414691:	xor    DWORD PTR [eax],0xb2de76a6
  414697:	loope  0x414635
  414699:	push   edx
  41469a:	pop    eax
  41469b:	test   DWORD PTR [eax],ebx
  41469d:	and    edx,DWORD PTR [eax+0x4d]
  4146a0:	jmp    0xddced039
  4146a5:	push   esi
  4146a6:	and    ah,ah
  4146a8:	inc    eax
  4146a9:	add    DWORD PTR [edi],0xaa0b119b
  4146af:	(bad)  
  4146b0:	in     al,dx
  4146b1:	or     DWORD PTR [ebx],0xd99c2689
  4146b7:	xor    BYTE PTR [edi+0x25],ch
  4146ba:	shl    DWORD PTR ds:0x81e458a0,1
  4146c0:	ins    DWORD PTR es:[edi],dx
  4146c1:	ss add ah,al
  4146c4:	(bad)
  4146c7:	inc    ebp
  4146c8:	mov    al,BYTE PTR [edi+ecx*1]
  4146cb:	and    eax,0x4b4160ee
  4146d0:	popf   
  4146d1:	adc    al,dh
  4146d3:	jg     0x41469c
  4146d5:	adc    DWORD PTR [eax],0x873cc4a6
  4146db:	sub    ecx,DWORD PTR ds:0xe8b008c
  4146e1:	pop    ds
  4146e2:	dec    BYTE PTR [ebx+eiz*2]
  4146e5:	stos   DWORD PTR es:[edi],eax
  4146e6:	ds push es
  4146e8:	aam    0x73
  4146ea:	xor    eax,0x8acbdd27
  4146ef:	les    edx,FWORD PTR [edx-0x80]
  4146f2:	fimul  DWORD PTR [ecx+0x2f]
  4146f5:	cmp    al,BYTE PTR [edi-0x2b]
  4146f8:	retf   
  4146f9:	retf   0x6808
  4146fc:	mov    ebp,DWORD PTR [esi]
  4146fe:	xchg   DWORD PTR [ebp+0x33],ecx
  414701:	mov    esi,0x391124e5
  414706:	adc    ch,BYTE PTR [edi]
  414708:	add    ecx,DWORD PTR [ecx]
  41470a:	sbb    BYTE PTR [ebp+0x10],cl
  41470d:	push   ss
  41470e:	mov    eax,0x9873698a
  414713:	ret    
  414714:	jb     0x41470a
  414716:	sub    esp,DWORD PTR [edx]
  414718:	dec    ecx
  414719:	sbb    ebp,DWORD PTR [edi+ebx*1+0x46]
  41471d:	lds    ebx,FWORD PTR [eax]
  41471f:	ss jle 0x4146c9
  414722:	sbb    DWORD PTR [esi-0x15],esp
  414725:	leave  
  414726:	lods   al,BYTE PTR ds:[esi]
  414727:	cdq    
  414728:	mov    bl,0x42
  41472a:	add    ah,BYTE PTR [ebx-0x4f2cebd9]
  414730:	pop    es
  414731:	in     al,dx
  414732:	into   
  414733:	and    BYTE PTR [esi-0x73b9915],al
  414739:	xchg   DWORD PTR [ebx+0x32],esi
  41473c:	pop    ebp
  41473d:	les    ecx,FWORD PTR [ebx-0x58908477]
  414743:	rcr    BYTE PTR [esp+esi*8-0x46],cl
  414747:	or     eax,0xb81e7db1
  41474c:	dec    esp
  41474d:	xchg   bl,bh
  41474f:	add    eax,0x8a781301
  414754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414755:	jb     0x414709
  414757:	psadbw mm6,QWORD PTR [edx-0x47]
  41475b:	dec    ecx
  41475c:	fstp   DWORD PTR [ebp+0x15a6fc93]
  414762:	test   al,0x25
  414764:	mov    eax,ds:0x7b9fde9f
  414769:	mov    eax,0x6ccf573f
  41476e:	xchg   ebp,eax
  41476f:	rcl    BYTE PTR [ecx+0x1074b700],cl
  414775:	sub    DWORD PTR [edi-0x7fe3921a],esp
  41477b:	add    ebx,ecx
  41477d:	repz imul edi,DWORD PTR [edi+ecx*1+0x4eb7fc04],0x80c8f114
  414789:	add    dl,cl
  41478b:	lds    ebx,FWORD PTR [edi]
  41478d:	dec    ebx
  41478e:	or     BYTE PTR [ebx],ah
  414790:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414792:	mov    esi,0xf1d3506a
  414797:	ss or  al,0x38
  41479a:	pop    edi
  41479b:	fmul   DWORD PTR [edx]
  41479d:	adc    eax,DWORD PTR [edx+esi*2-0x6e]
  4147a1:	aaa    
  4147a2:	lock push ebp
  4147a4:	dec    edx
  4147a5:	mov    ebx,0x723a80b6
  4147aa:	push   cs
  4147ab:	cmp    DWORD PTR [eax+0x44],ebp
  4147ae:	mov    BYTE PTR [edx-0x20e3cefa],dh
  4147b4:	leave  
  4147b5:	adc    edi,0x61fccf4
  4147bb:	xor    DWORD PTR [eax],ebp
  4147bd:	ins    DWORD PTR es:[edi],dx
  4147be:	minps  xmm5,xmm7
  4147c1:	inc    esi
  4147c2:	jl     0x41479f
  4147c4:	pop    edx
  4147c5:	or     ebp,DWORD PTR [ebp-0x76]
  4147c8:	sbb    bl,ch
  4147ca:	mov    ebx,ecx
  4147cc:	push   ds
  4147cd:	dec    ebx
  4147ce:	jg     0x414783
  4147d0:	jg     0x41476d
  4147d2:	test   eax,0x4a21a83c
  4147d7:	pop    ds
  4147d8:	fwait
  4147d9:	sbb    eax,0x4e7c637a
  4147de:	js     0x414760
  4147e0:	adc    al,0xbc
  4147e2:	xchg   edx,eax
  4147e3:	jae    0x4147c8
  4147e5:	arpl   WORD PTR [ebx],cx
  4147e7:	jecxz  0x414821
  4147e9:	nop
  4147ea:	mov    WORD PTR [ebx+0x4],gs
  4147ed:	xor    ah,dh
  4147ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147f0:	pop    es
  4147f1:	xchg   ecx,eax
  4147f2:	and    ah,ah
  4147f4:	(bad)  
  4147f5:	mov    esp,0xd791e3d0
  4147fa:	inc    ecx
  4147fb:	icebp  
  4147fc:	lods   al,BYTE PTR ds:[esi]
  4147fd:	add    DWORD PTR ds:0x823ad060,ebx
  414803:	pushf  
  414804:	mov    ebp,0x34f7452b
  414809:	pushf  
  41480a:	jmp    FWORD PTR [ebp+0x17e3783e]
  414810:	(bad)  
  414811:	sub    ch,BYTE PTR [eax+0x16]
  414814:	jmp    0x4147e8
  414816:	out    dx,al
  414817:	mov    ebx,0xceb4e373
  41481c:	jl     0x41485d
  41481e:	inc    ebp
  41481f:	xor    BYTE PTR [eax+0x79303b3c],cl
  414825:	push   eax
  414826:	xchg   ebx,eax
  414827:	pop    edx
  414828:	xchg   edx,eax
  414829:	and    eax,DWORD PTR [eax]
  41482b:	ss daa 
  41482d:	in     al,0x6d
  41482f:	adc    eax,0x377759db
  414834:	inc    esp
  414835:	dec    ecx
  414836:	xor    dl,BYTE PTR [eax-0xcf43f73]
  41483c:	sub    eax,0xc83cc910
  414841:	jmp    0x414875
  414843:	or     BYTE PTR [eax+0x7443682d],al
  414849:	xor    cl,ch
  41484b:	inc    esi
  41484c:	je     0x414879
  41484e:	popa   
  41484f:	adc    BYTE PTR [ecx],al
  414851:	jno    0x4147f9
  414853:	xchg   ebx,eax
  414854:	xchg   ecx,eax
  414855:	int3   
  414856:	into   
  414857:	aam    0xc3
  414859:	mov    bh,0xa2
  41485b:	(bad)  
  41485c:	cs (bad) 
  41485e:	mov    ah,0x4a
  414860:	mov    cl,0xa9
  414862:	jecxz  0x41485f
  414864:	shl    BYTE PTR [esi+ebx*1+0x51],cl
  414868:	nop
  414869:	xchg   edi,eax
  41486a:	aaa    
  41486b:	lods   al,BYTE PTR ds:[esi]
  41486c:	cmp    cl,BYTE PTR [ebx-0x18]
  41486f:	es into 
  414871:	sti    
  414872:	xchg   esi,eax
  414873:	pop    esi
  414874:	into   
  414875:	hlt    
  414876:	mov    dl,0xf8
  414878:	bound  ebx,QWORD PTR [ebx]
  41487a:	sub    al,0x3c
  41487c:	mov    ah,0xbd
  41487e:	pop    esi
  41487f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414880:	mov    bh,0x7a
  414882:	out    dx,al
  414883:	test   eax,0xdfe69f6e
  414888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414889:	dec    edx
  41488a:	rol    al,1
  41488c:	dec    esp
  41488d:	mul    BYTE PTR [esi+0x438851cb]
  414893:	(bad)  
  414894:	pushf  
  414895:	lea    ebx,ds:0x6a86b35b
  41489b:	jecxz  0x4148a7
  41489d:	push   0xb83c84eb
  4148a2:	(bad)  
  4148a3:	sub    DWORD PTR [esi+0x6eaba824],edx
  4148a9:	mov    edi,0xe49b9216
  4148ae:	xor    ah,bh
  4148b0:	pop    eax
  4148b1:	add    BYTE PTR [edx+0x52],0xd6
  4148b5:	sbb    eax,ecx
  4148b7:	push   esp
  4148b8:	and    dh,ch
  4148ba:	sar    BYTE PTR [esi],0x4c
  4148bd:	push   ds
  4148be:	dec    eax
  4148bf:	push   0xda36d742
  4148c4:	add    cl,BYTE PTR [eax]
  4148c6:	mov    dl,0xb2
  4148c8:	and    DWORD PTR [edx+edi*4],ebx
  4148cb:	aam    0x76
  4148cd:	jo     0x41494c
  4148cf:	xchg   edi,eax
  4148d0:	ins    DWORD PTR es:[edi],dx
  4148d1:	lea    esi,[edx]
  4148d3:	test   edx,0x2877305c
  4148d9:	aas    
  4148da:	pop    eax
  4148db:	cmp    eax,esp
  4148dd:	mov    eax,ds:0x5830b75e
  4148e2:	lds    ecx,FWORD PTR [esi-0x5eeeb187]
  4148e8:	cmovae ebp,DWORD PTR [eax+0xa2580b9]
  4148ef:	add    al,0xc4
  4148f1:	pop    es
  4148f2:	xor    dh,BYTE PTR [ebx-0x69]
  4148f5:	add    ebp,DWORD PTR [ecx]
  4148f7:	(bad)  
  4148f9:	push   esp
  4148fa:	adc    dh,al
  4148fc:	out    0xb7,eax
  4148fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148ff:	or     DWORD PTR [eax],edi
  414901:	xchg   ebp,eax
  414902:	cmp    ah,0x64
  414905:	das    
  414906:	push   ecx
  414907:	fmul   QWORD PTR [edi-0x26]
  41490a:	add    eax,0x6a211349
  41490f:	xor    esi,0xffffff87
  414912:	pop    esi
  414913:	fidivr DWORD PTR [eax+0x1f]
  414916:	and    edi,edx
  414918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414919:	imul   ebp,DWORD PTR [ebp+0x21],0xb0284082
  414920:	adc    ebp,0xfd44e9c0
  414926:	(bad)  [esi]
  414928:	int3   
  414929:	pop    ds
  41492a:	sub    BYTE PTR ds:[eax+0x5d],bh
  41492e:	lds    esi,FWORD PTR [eax+0x4bf0526]
  414934:	sub    bh,BYTE PTR [eax]
  414936:	imul   ecx,esi,0xa8dbc31e
  41493c:	xchg   ebp,eax
  41493d:	sub    bl,0xe4
  414940:	mov    ds:0x70aa1af3,eax
  414945:	sar    BYTE PTR [eax-0x1bdd7c9a],cl
  41494b:	and    BYTE PTR [esi-0x535d635a],dl
  414951:	adc    al,BYTE PTR [eax+0x36ae49e]
  414957:	(bad)  
  414958:	pop    esi
  414959:	sbb    dl,BYTE PTR [eax+0x5ac1664c]
  41495f:	dec    ecx
  414960:	xchg   DWORD PTR [ebx],edi
  414962:	les    edi,FWORD PTR [ebp+0x6f56d903]
  414968:	jbe    0x414974
  41496a:	cmp    al,0x15
  41496c:	les    edi,FWORD PTR [edi+eiz*4+0x6607c05d]
  414973:	sub    ebp,edx
  414975:	aad    0x49
  414977:	sub    al,0x2a
  414979:	out    0x52,eax
  41497b:	sbb    BYTE PTR [bx+si+0x2b],bl
  41497f:	sbb    al,BYTE PTR [eax]
  414981:	mov    al,ds:0x37586758
  414986:	mov    ah,0x36
  414988:	or     ecx,ebx
  41498a:	or     DWORD PTR [edx+0x2a38856e],0x5ea36507
  414994:	mov    edi,0x20f6fe71
  414999:	in     al,dx
  41499a:	jmp    0x7592a50e
  41499f:	iret   
  4149a0:	bound  edx,QWORD PTR [ecx+0x35]
  4149a3:	jl     0x414956
  4149a5:	jge    0x4149f3
  4149a7:	imul   esi,DWORD PTR [ecx-0x1e],0x7f9e3085
  4149ae:	loope  0x4149e3
  4149b0:	adc    dl,BYTE PTR [ebx+0x11200149]
  4149b6:	sti    
  4149b7:	inc    edi
  4149b8:	enter  0xbbb4,0x16
  4149bc:	pop    edi
  4149bd:	adc    ch,ch
  4149bf:	jne    0x414944
  4149c1:	and    DWORD PTR [eax],esp
  4149c3:	std    
  4149c4:	stos   DWORD PTR es:[edi],eax
  4149c5:	cmp    ecx,0x7f
  4149c8:	and    BYTE PTR [edx+0x47],ch
  4149cb:	int3   
  4149cc:	and    eax,0x3b908695
  4149d1:	xchg   edi,eax
  4149d2:	shl    DWORD PTR [ecx+0x8f03158],1
  4149d8:	adc    dh,BYTE PTR [eax+0x60f9327d]
  4149de:	das    
  4149df:	mov    al,0x79
  4149e1:	(bad)  
  4149e3:	mov    DWORD PTR [edi+0x14],ebx
  4149e6:	cs push ebx
  4149e8:	sub    al,0x3c
  4149ea:	xchg   edx,eax
  4149eb:	out    dx,al
  4149ec:	pop    eax
  4149ed:	lods   al,BYTE PTR ds:[esi]
  4149ee:	cld    
  4149ef:	les    ebp,FWORD PTR [ebp-0x80]
  4149f2:	cbw    
  4149f4:	mov    bh,0x75
  4149f6:	sub    al,0x64
  4149f8:	shl    BYTE PTR [esp+edx*8+0x44],cl
  4149fc:	add    BYTE PTR [esi-0x10],dl
  4149ff:	pop    eax
  414a00:	inc    edx
  414a01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a02:	and    BYTE PTR [ecx+eiz*1],ah
  414a05:	mov    WORD PTR [esi],es
  414a07:	push   0xfffffff8
  414a09:	retf   0xeaa2
  414a0c:	in     al,0xd2
  414a0e:	inc    esi
  414a0f:	push   es
  414a10:	jle    0x4149ed
  414a12:	cli    
  414a13:	sbb    BYTE PTR [edx-0x8],bh
  414a16:	cmp    eax,DWORD PTR [eax+0x7f983ad]
  414a1c:	cs ja  0x4149bb
  414a1f:	les    esi,FWORD PTR [edi+edi*8-0xd]
  414a23:	cmp    esp,ebx
  414a25:	jo     0x4149f0
  414a27:	mov    edx,0x30684bf6
  414a2c:	mov    WORD PTR [ebx-0x5221ff8e],ss
  414a32:	pop    ebp
  414a33:	aaa    
  414a34:	iret   
  414a35:	leave  
  414a36:	aas    
  414a37:	int3   
  414a38:	jmp    0xe5209f85
  414a3d:	inc    ebp
  414a3e:	xchg   ecx,eax
  414a3f:	les    ebx,FWORD PTR [edi]
  414a41:	xchg   DWORD PTR [ebx],esi
  414a43:	and    BYTE PTR [eax+0x23],ch
  414a46:	mov    edx,0x1f2c2578
  414a4b:	lahf   
  414a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a4d:	add    ebp,ecx
  414a4f:	mov    DWORD PTR [ebx],0xb5d31e48
  414a55:	fild   QWORD PTR [esi-0x1c5ca2ac]
  414a5b:	mov    ebp,0x7c1a4d64
  414a60:	jns    0x4149f8
  414a62:	sub    eax,0xbc9906c7
  414a67:	fdivr  st(1),st
  414a69:	mov    edx,0xf449e0f5
  414a6e:	or     bh,BYTE PTR [eax+esi*1]
  414a71:	mov    ds:0xb0d92b83,eax
  414a76:	inc    ebp
  414a77:	add    edi,esp
  414a79:	clc    
  414a7a:	add    ch,bl
  414a7c:	cmp    al,0x5d
  414a7e:	push   eax
  414a7f:	rcr    BYTE PTR [ebx],cl
  414a81:	in     eax,0x40
  414a83:	lods   eax,DWORD PTR ds:[esi]
  414a84:	add    esp,DWORD PTR [eax+0x1b6e8a0e]
  414a8a:	fdiv   QWORD PTR [edi]
  414a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a8e:	xchg   ebp,eax
  414a8f:	popf   
  414a90:	jmp    0x6dd7:0xc42bfb05
  414a97:	mov    esp,0xf1ebb4a7
  414a9c:	or     edi,DWORD PTR [ecx]
  414a9e:	mov    esp,0xf3d8d4ed
  414aa3:	mov    ebx,es
  414aa5:	adc    eax,0x20333092
  414aaa:	ret    
  414aab:	pop    edx
  414aac:	xor    esp,ebx
  414aae:	les    esp,FWORD PTR [ebx+0x63]
  414ab1:	and    ebp,DWORD PTR [edi+eax*1+0x51]
  414ab5:	mov    al,ds:0x9a53c67f
  414aba:	fld    TBYTE PTR [edi+0x1a]
  414abd:	xchg   esi,eax
  414abe:	push   0xffffffed
  414ac0:	or     ebx,DWORD PTR [esp+edx*2-0x2b5a223f]
  414ac7:	(bad)  
  414ac8:	push   cs
  414ac9:	push   ss
  414aca:	in     al,0xd0
  414acc:	mov    eax,ds:0x712f1c4f
  414ad1:	cwde   
  414ad2:	jns    0x414b07
  414ad4:	pop    ebx
  414ad5:	es int 0x59
  414ad8:	push   0xea9cefe9
  414add:	push   esi
  414ade:	push   0x7057af56
  414ae3:	push   ecx
  414ae4:	clts   
  414ae6:	js     0x414a9f
  414ae8:	mov    ebx,0xd7358409
  414aed:	loopne 0x414b05
  414aef:	cmp    al,0x1d
  414af1:	cwde   
  414af2:	dec    esp
  414af3:	push   edx
  414af4:	add    al,0x77
  414af6:	mov    fs,WORD PTR [ecx-0x180feb7e]
  414afc:	sub    edi,DWORD PTR [ebx-0x2a]
  414aff:	mov    ah,0xf0
  414b01:	push   0xcf52126a
  414b06:	xchg   esi,eax
  414b07:	ffree  st(2)
  414b09:	sub    dh,BYTE PTR [ebx]
  414b0b:	shr    BYTE PTR [ebx-0x6dad5322],cl
  414b11:	lahf   
  414b12:	and    BYTE PTR [ecx+0x2c],cl
  414b15:	pop    ecx
  414b16:	inc    esp
  414b17:	inc    ecx
  414b18:	nop
  414b19:	cld    
  414b1a:	leave  
  414b1b:	mov    ah,0x29
  414b1d:	mov    ds:0xda49ae94,al
  414b22:	or     al,0x8d
  414b24:	loope  0x414add
  414b26:	jbe    0x414af5
  414b28:	fwait
  414b29:	call   0x6afb:0xe199862e
  414b30:	lods   eax,DWORD PTR ds:[esi]
  414b31:	push   esi
  414b32:	leave  
  414b33:	sbb    DWORD PTR [edx-0x6c2ed9e6],edi
  414b39:	push   0x5e
  414b3b:	cmp    eax,DWORD PTR ds:0xea8e940c
  414b41:	(bad)  [edx+0x1bba77d1]
  414b47:	imul   BYTE PTR [edx]
  414b49:	cwde   
  414b4a:	dec    edx
  414b4b:	jmp    0xb9c044fa
  414b50:	xchg   ebp,eax
  414b51:	or     al,0x9a
  414b53:	test   al,0x58
  414b55:	shl    bh,cl
  414b57:	fiadd  WORD PTR [esi]
  414b59:	shl    DWORD PTR [eax+0xc],0x7
  414b5d:	test   DWORD PTR [esi+0x7d],edi
  414b60:	cmc    
  414b61:	mov    bh,0x3
  414b63:	popf   
  414b64:	out    0x51,eax
  414b66:	pop    edi
  414b67:	xlat   BYTE PTR ds:[ebx]
  414b68:	jge    0x414b84
  414b6a:	cmp    eax,0x694ba3a6
  414b6f:	ins    BYTE PTR es:[edi],dx
  414b70:	mov    edi,0x2d1c7f0a
  414b75:	in     eax,0x68
  414b77:	(bad)  
  414b78:	je     0x414b04
  414b7a:	add    eax,0xc995182e
  414b7f:	fsub   DWORD PTR [eax+0x2e]
  414b82:	ins    BYTE PTR es:[edi],dx
  414b83:	jb     0x414b80
  414b85:	mov    eax,ds:0xbf2be260
  414b8a:	dec    esp
  414b8b:	mov    gs,WORD PTR [ebx-0x567a043d]
  414b91:	div    BYTE PTR [ebp-0x23666ad8]
  414b97:	xchg   ch,cl
  414b99:	cmp    bh,cl
  414b9b:	inc    ecx
  414b9c:	out    0xa,eax
  414b9e:	fucomi st,st(7)
  414ba0:	js     0x414c0c
  414ba2:	cdq    
  414ba3:	sub    ebp,ecx
  414ba5:	mov    bl,0x79
  414ba7:	mov    bl,0x9d
  414ba9:	mov    ebx,0x97cfbe2e
  414bae:	sub    edi,edi
  414bb0:	inc    ecx
  414bb1:	or     eax,0x5dfa2d6d
  414bb6:	sahf   
  414bb7:	daa    
  414bb8:	aas    
  414bb9:	ja     0x414bb6
  414bbb:	out    dx,al
  414bbc:	adc    DWORD PTR [edi-0x4b],edi
  414bbf:	pop    ecx
  414bc0:	adc    edi,0x10
  414bc3:	dec    edi
  414bc4:	ja     0x414b63
  414bc6:	fisttp DWORD PTR [edx]
  414bc8:	mov    ebp,0x12da6659
  414bcd:	cwde   
  414bce:	icebp  
  414bcf:	pop    ds
  414bd0:	adc    eax,edx
  414bd2:	sbb    al,0xc0
  414bd4:	pop    ebp
  414bd5:	popf   
  414bd6:	sar    DWORD PTR [edi],1
  414bd8:	push   ecx
  414bd9:	cs out 0x2,eax
  414bdc:	jae    0x414bec
  414bde:	jmp    0xa62b4dcf
  414be3:	ds pop ecx
  414be5:	jae    0x414c20
  414be7:	push   esp
  414be8:	and    ah,BYTE PTR [ebp-0xe]
  414beb:	mov    edi,0xd8ae8c78
  414bf0:	aaa    
  414bf1:	xchg   ebp,eax
  414bf2:	dec    edx
  414bf3:	add    bl,bl
  414bf5:	fsub   DWORD PTR [ebx]
  414bf7:	and    eax,0xeb2f2a9a
  414bfc:	das    
  414bfd:	dec    esp
  414bfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bff:	mov    WORD PTR [esp+edx*4+0x4e],?
  414c03:	mov    BYTE PTR [ebx],cl
  414c05:	lahf   
  414c06:	adc    ebx,ecx
  414c08:	and    al,0xbb
  414c0a:	pop    ds
  414c0b:	outs   dx,BYTE PTR ds:[esi]
  414c0c:	mov    ebx,0x7bfe40b8
  414c11:	mov    esp,0x207259c9
  414c16:	push   es
  414c17:	rcl    bl,0x6d
  414c1a:	lods   al,BYTE PTR ds:[esi]
  414c1b:	sub    dh,BYTE PTR [esi]
  414c1d:	add    bh,BYTE PTR [eax]
  414c1f:	shr    ebx,1
  414c21:	fnstsw ax
  414c23:	dec    edi
  414c24:	cmp    ah,dh
  414c26:	mov    DWORD PTR [eax+esi*4],eax
  414c29:	sahf   
  414c2a:	daa    
  414c2b:	dec    esi
  414c2c:	mov    edx,0x4cf3117b
  414c31:	cmp    BYTE PTR [ecx+0x2a],0x22
  414c35:	pop    ds
  414c36:	mov    cl,0xc4
  414c38:	(bad)  [ebx-0x52]
  414c3b:	dec    edi
  414c3c:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  414c3e:	js     0x414bde
  414c40:	xchg   esi,eax
  414c41:	ret    0xa628
  414c44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c45:	aas    
  414c46:	mov    ds:0xaa268f97,al
  414c4b:	(bad)  
  414c4c:	leave  
  414c4d:	sbb    al,0x5b
  414c4f:	mov    dl,0xc5
  414c51:	adc    BYTE PTR [ebx],bh
  414c53:	adc    bl,BYTE PTR [ebx+0x5f2eb656]
  414c59:	jae    0x414bf2
  414c5b:	xchg   DWORD PTR [ebp-0xf19a15a],ebp
  414c61:	loope  0x414c05
  414c63:	sbb    ah,BYTE PTR [edi+0x38175c71]
  414c69:	and    DWORD PTR [edx-0x2c],edi
  414c6c:	dec    edi
  414c6d:	sbb    DWORD PTR [ebx-0x4f37e3bd],edi
  414c73:	aam    0x84
  414c75:	and    DWORD PTR [edi-0x53b72708],eax
  414c7b:	cli    
  414c7c:	sub    eax,0x4341fe13
  414c81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c83:	xlat   BYTE PTR ds:[ebx]
  414c84:	retf   0x85a2
  414c87:	out    0x8a,al
  414c89:	jl     0x414cf9
  414c8b:	fist   DWORD PTR [ecx]
  414c8d:	mov    eax,ds:0x2246f109
  414c92:	xchg   ebp,eax
  414c93:	iret   
  414c94:	call   0x442a:0x115e7ee7
  414c9b:	dec    esp
  414c9c:	cmp    eax,0xd97657d8
  414ca1:	cdq    
  414ca2:	adc    BYTE PTR [edx-0x6e3e7c86],bl
  414ca8:	nop
  414ca9:	repnz pop ebx
  414cab:	push   ds
  414cac:	aas    
  414cad:	or     BYTE PTR [ebp-0x35],dh
  414cb0:	retf   
  414cb1:	fsub   DWORD PTR [eax+edx*2-0x66]
  414cb5:	dec    ecx
  414cb6:	jg     0x414c96
  414cb8:	pop    ebx
  414cb9:	cmc    
  414cba:	jge    0x414c99
  414cbc:	mov    DWORD PTR [ebx],0xa10e8145
  414cc2:	(bad)  
  414cc3:	hlt    
  414cc4:	add    BYTE PTR ss:[ebx],0x84
  414cc8:	cs sub bh,dh
  414ccb:	sbb    eax,DWORD PTR [edi]
  414ccd:	js     0x414d35
  414ccf:	push   es
  414cd0:	and    esi,DWORD PTR [edx-0x5f548454]
  414cd6:	(bad)  
  414cd7:	pop    ds
  414cd8:	sbb    ah,ah
  414cda:	(bad)  
  414cdb:	sub    al,0xb6
  414cdd:	nop
  414cde:	aad    0x50
  414ce0:	in     al,dx
  414ce1:	cmovns edx,DWORD PTR [esi+0x3fbc3942]
  414ce8:	add    DWORD PTR [edi],ebp
  414cea:	mov    esi,0x7ea0faac
  414cef:	das    
  414cf0:	call   0x9776:0xc26687e3
  414cf7:	mov    esp,0x99b719de
  414cfc:	dec    ebx
  414cfd:	call   0x5b69:0x701e724b
  414d04:	jns    0x414c9b
  414d06:	mov    ebx,0x529c2a6
  414d0b:	adc    esp,ecx
  414d0d:	sti    
  414d0e:	ja     0x414d20
  414d10:	or     eax,DWORD PTR [ebp+0xa7908c9]
  414d16:	cwde   
  414d17:	rcr    eax,0xa
  414d1a:	adc    eax,0xeb733451
  414d1f:	nop
  414d20:	popf   
  414d21:	dec    esi
  414d22:	mov    bh,al
  414d24:	jl     0x414d59
  414d26:	(bad)  
  414d27:	dec    edi
  414d28:	cmp    DWORD PTR [ecx+0x533daf55],edx
  414d2e:	pushf  
  414d2f:	std    
  414d30:	jo     0x414d03
  414d32:	add    eax,DWORD PTR [edx+0x35]
  414d35:	xor    edi,0x39
  414d38:	stos   DWORD PTR es:[edi],eax
  414d39:	sub    BYTE PTR [esi],ch
  414d3b:	(bad)  
  414d3d:	mov    ecx,ebp
  414d3f:	pop    ebx
  414d40:	aas    
  414d41:	fadd   DWORD PTR [edx+0x1e]
  414d44:	in     al,dx
  414d45:	mov    ebx,0x52ed234
  414d4a:	pop    ebx
  414d4b:	test   BYTE PTR [edi],bl
  414d4d:	sbb    edx,DWORD PTR [ebp-0x302dd3ef]
  414d53:	jo     0x414cfd
  414d55:	sub    eax,0xb79823c6
  414d5a:	xchg   edi,eax
  414d5b:	and    edi,DWORD PTR [eax]
  414d5d:	push   eax
  414d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d5f:	fist   WORD PTR [edx]
  414d61:	jmp    0x414ddb
  414d63:	imul   eax,edx,0xffffff97
  414d66:	shr    DWORD PTR [ecx+0x2d8d22a8],1
  414d6c:	sub    eax,0xee9ecd5
  414d71:	jo     0x414db8
  414d73:	and    BYTE PTR [edi],ah
  414d75:	sub    esp,edx
  414d77:	mov    al,0xb0
  414d79:	sub    DWORD PTR [ecx-0x2f],esi
  414d7c:	inc    ebp
  414d7d:	or     DWORD PTR [edi+0x1329c6b4],eax
  414d83:	xchg   ecx,eax
  414d84:	add    al,dh
  414d86:	sub    esi,DWORD PTR [edi]
  414d88:	adc    bl,BYTE PTR [edi]
  414d8a:	push   es
  414d8b:	or     eax,edi
  414d8d:	push   0xa83808e3
  414d92:	push   0x72166156
  414d97:	push   ds
  414d98:	sub    eax,0x3940d227
  414d9d:	call   0xf9c4573a
  414da2:	mov    DWORD PTR [ebp+0x7a],ebx
  414da5:	out    0x16,eax
  414da7:	push   edi
  414da8:	sub    edx,DWORD PTR [ebx-0x3aaa933d]
  414dae:	xchg   bl,ch
  414db0:	push   ebp
  414db1:	test   al,0x15
  414db3:	xor    BYTE PTR [ecx],dl
  414db5:	pop    eax
  414db6:	aad    0xbb
  414db8:	daa    
  414db9:	dec    ebp
  414dba:	mov    eax,ds:0xd0d2da79
  414dc0:	push   ds
  414dc1:	in     al,0x84
  414dc3:	pop    DWORD PTR [edi+0x61eea8ed]
  414dc9:	(bad)  
  414dca:	and    BYTE PTR [ebp+0x2122ad07],0xd0
  414dd1:	dec    esi
  414dd2:	mov    ebp,0xbe57412a
  414dd7:	repnz mov DWORD PTR [edx-0x37bc3331],edi
  414dde:	add    esp,DWORD PTR [ebx+ebp*2]
  414de1:	mov    ch,0x3e
  414de3:	mov    bl,0x6
  414de5:	push   edi
  414de6:	in     al,0xbc
  414de8:	adc    eax,0x64f72445
  414ded:	dec    ebp
  414dee:	adc    DWORD PTR [ebx],0xff9ddd7e
  414df4:	mov    dh,0xc2
  414df6:	mov    eax,0x5984708d
  414dfb:	xor    esp,ebp
  414dfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dfe:	inc    esp
  414dff:	sbb    esp,DWORD PTR [eax]
  414e01:	rol    BYTE PTR [ecx],cl
  414e03:	sub    BYTE PTR [ecx-0x14318605],dl
  414e09:	mov    edx,0xd3c4afd7
  414e0e:	out    0xa3,eax
  414e10:	cld    
  414e11:	mov    ah,0xb0
  414e13:	or     ebp,eax
  414e15:	jno    0x414d9e
  414e17:	das    
  414e18:	mov    al,ds:0xae0612a9
  414e1d:	inc    edi
  414e1e:	ret    
  414e1f:	aaa    
  414e20:	mov    bl,0xc0
  414e22:	adc    ebp,DWORD PTR [ebp+0x3f]
  414e25:	and    al,0xec
  414e27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e28:	cmp    DWORD PTR [edi+0x59],esp
  414e2b:	das    
  414e2c:	cmp    BYTE PTR [eax],dl
  414e2e:	out    0xcd,eax
  414e30:	push   ss
  414e31:	or     BYTE PTR [edi],ch
  414e33:	mov    ds:0xbd03748,al
  414e38:	loope  0x414e6b
  414e3a:	fstp   TBYTE PTR [ebx+esi*1+0x71]
  414e3e:	mov    sp,0xebb6
  414e42:	cwde   
  414e43:	or     DWORD PTR [ecx+0x1bbd35ca],0xf
  414e4a:	jae    0x414e38
  414e4c:	or     eax,0x2297b3a1
  414e51:	ins    BYTE PTR es:[edi],dx
  414e52:	leave  
  414e53:	icebp  
  414e54:	xor    ch,BYTE PTR [edx-0x7c]
  414e57:	stos   BYTE PTR es:[edi],al
  414e58:	fwait
  414e59:	mov    eax,ds:0xe893511b
  414e5e:	idiv   eax
  414e60:	shl    DWORD PTR [ecx-0xb83ed61],0xa4
  414e67:	(bad)
  414e6a:	jae    0x414df5
  414e6c:	inc    ecx
  414e6d:	add    DWORD PTR [ebp-0x15],esp
  414e70:	push   ecx
  414e71:	jno    0x414e14
  414e73:	sbb    al,0xfc
  414e75:	push   ds
  414e76:	fistp  DWORD PTR [eax-0x47]
  414e79:	xor    edi,esi
  414e7b:	and    DWORD PTR [edi-0x1ec3ef90],esi
  414e81:	lock mov ebx,DWORD PTR [edi+0xdfc8d1]
  414e88:	mov    BYTE PTR [edi+0x7cfa5f1d],al
  414e8e:	out    0x26,al
  414e90:	mov    bh,0x20
  414e92:	mov    al,ds:0x93d076fc
  414e97:	mov    dh,0x86
  414e99:	loop   0x414eca
  414e9b:	xchg   ebx,eax
  414e9c:	add    DWORD PTR [ebp+edi*1-0x58ec4d77],0xbc3f779e
  414ea7:	popa   
  414ea8:	xchg   esi,eax
  414ea9:	mov    dh,0x33
  414eab:	bound  edx,QWORD PTR [ecx+0x64f68708]
  414eb1:	jb     0x414e63
  414eb3:	dec    ecx
  414eb4:	pop    esp
  414eb5:	fnstenv [eax+0x523cff2a]
  414ebb:	fcom   DWORD PTR [edx+0x22]
  414ebe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ebf:	es (bad) 
  414ec1:	shl    BYTE PTR [ebx],cl
  414ec3:	jmp    0x414e7d
  414ec5:	xor    eax,0xdad1d854
  414eca:	daa    
  414ecb:	inc    esi
  414ecc:	popa   
  414ecd:	add    al,0x86
  414ecf:	cdq    
  414ed0:	test   DWORD PTR [ebx+0x2367f619],ebp
  414ed6:	or     cl,al
  414ed8:	or     DWORD PTR [ebx+0x2],esi
  414edb:	test   BYTE PTR [edx+0x7b],ah
  414ede:	push   edx
  414edf:	push   edx
  414ee0:	test   al,0x77
  414ee2:	cmp    al,0x2c
  414ee4:	mov    edi,0xf4180a5
  414ee9:	xor    al,0xb3
  414eeb:	pop    ebp
  414eec:	sbb    al,0xbf
  414eee:	inc    edx
  414eef:	push   ss
  414ef0:	imul   esi,DWORD PTR [ecx+eiz*8],0x3c
  414ef4:	mov    ds:0xce76382e,al
  414ef9:	or     ebx,edi
  414efb:	mov    ecx,0x46d7a2f8
  414f00:	enter  0x3e1e,0x97
  414f04:	sub    al,0x3e
  414f06:	icebp  
  414f07:	jge    0x414eed
  414f09:	and    eax,0x8b7719ea
  414f0e:	inc    edi
  414f0f:	sbb    ah,BYTE PTR [ebp+0x43]
  414f12:	cwde   
  414f13:	rcl    DWORD PTR [di],1
  414f16:	mov    eax,0x65e9a881
  414f1b:	mov    fs,WORD PTR [esi+0x353f2068]
  414f21:	das    
  414f22:	pop    esp
  414f23:	jp     0x414ee6
  414f25:	out    0xe9,al
  414f27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f28:	xchg   dl,dl
  414f2a:	rcr    BYTE PTR [ebx],0x5f
  414f2d:	mov    esi,DWORD PTR [ebx+eiz*1-0x45419f41]
  414f34:	jg     0x414f24
  414f36:	dec    esi
  414f37:	dec    ecx
  414f38:	pop    esp
  414f39:	(bad)  
  414f3a:	inc    ecx
  414f3b:	jle    0x414ecc
  414f3d:	mov    ebp,0x51d15a86
  414f42:	ss int 0xbc
  414f45:	sub    dl,BYTE PTR [ecx-0x10]
  414f48:	add    ecx,ecx
  414f4a:	adc    ch,BYTE PTR ds:0xe0f1737d
  414f50:	pop    ss
  414f51:	xor    al,0xe3
  414f53:	out    dx,eax
  414f54:	into   
  414f55:	addr16 sbb eax,0xfaa97ed
  414f5b:	mov    ch,0x84
  414f5d:	loope  0x414f4f
  414f5f:	out    0x6,eax
  414f61:	pop    ebx
  414f62:	jb     0x414f7e
  414f64:	pushf  
  414f65:	add    eax,ebx
  414f67:	rcr    DWORD PTR [ebp+0x46],1
  414f6a:	shl    BYTE PTR [ebx+0x45],0x32
  414f6e:	and    DWORD PTR [ecx-0x72],ecx
  414f71:	fcmovne st,st(4)
  414f73:	adc    ebx,DWORD PTR [ebx+0x25782462]
  414f79:	xchg   esp,eax
  414f7a:	(bad)  
  414f7c:	dec    esi
  414f7d:	sub    eax,0x30cd6a06
  414f82:	test   al,0x67
  414f84:	xor    eax,0x1eb88f56
  414f89:	pop    edx
  414f8a:	cmp    al,0x97
  414f8c:	and    al,0xab
  414f8e:	retf   0x7de0
  414f91:	adc    bh,BYTE PTR [esp+esi*4-0x3b7d70e2]
  414f98:	ret    
  414f99:	push   ebp
  414f9a:	idiv   DWORD PTR [ecx]
  414f9c:	push   0xffffffce
  414f9e:	sahf   
  414f9f:	mov    edi,0x70fd7079
  414fa4:	ret    
  414fa5:	sbb    BYTE PTR [esi+0x30],ch
  414fa8:	ficom  DWORD PTR [edi-0x31a00f4b]
  414fae:	dec    edx
  414faf:	aaa    
  414fb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fb1:	fs inc dx
  414fb4:	cmp    BYTE PTR [edx+0x48fa6931],cl
  414fba:	nop
  414fbb:	push   cs
  414fbc:	out    0x53,al
  414fbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fbf:	(bad)  
  414fc0:	in     eax,0xbc
  414fc2:	shl    BYTE PTR [edi+0x7fdd9a9],0x7b
  414fc9:	outs   dx,DWORD PTR ds:[esi]
  414fca:	js     0x414faa
  414fcc:	pop    ecx
  414fcd:	inc    ebp
  414fce:	or     esi,DWORD PTR ds:0x55760fe4
  414fd4:	cs sbb eax,0xc87eec96
  414fda:	push   esi
  414fdb:	dec    esi
  414fdc:	add    eax,0x2ded33c2
  414fe1:	cwde   
  414fe2:	adc    esp,DWORD PTR [edx+0x59]
  414fe5:	jb     0x414fba
  414fe7:	inc    ebx
  414fe8:	popa   
  414fe9:	lahf   
  414fea:	mov    edx,0x5496d2de
  414fef:	jbe    0x414fca
  414ff1:	jg     0x414fe7
  414ff3:	jecxz  0x414f99
  414ff5:	pushf  
  414ff6:	gs push ds
  414ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ff9:	push   es
  414ffa:	jg     0x41501b
  414ffc:	aaa    
  414ffd:	loop   0x414fe6
  414fff:	dec    edi
  415000:	inc    esi
  415001:	or     al,0x81
  415003:	xor    edx,esp
  415005:	xor    dl,BYTE PTR [edx+ecx*2]
  415008:	jns    0x415059
  41500a:	add    eax,0xd5ed80dc
  41500f:	jb     0x414fb5
  415011:	mov    ebx,0xa2d6a20
  415016:	jp     0x414fbd
  415018:	dec    ecx
  415019:	faddp  st(3),st
  41501b:	fimul  WORD PTR [esi-0x59]
  41501e:	gs and al,0xaa
  415021:	xor    dh,BYTE PTR [ebp-0x65ee6c07]
  415027:	sbb    al,0x56
  415029:	push   ss
  41502a:	and    BYTE PTR [ecx+0x6],al
  41502d:	xor    BYTE PTR [eax],dl
  41502f:	gs sti 
  415031:	gs push es
  415033:	adc    ecx,ebp
  415035:	fld    DWORD PTR [edi-0x7b]
  415038:	mov    esi,0x5d4ec6de
  41503d:	inc    edi
  41503e:	inc    ebp
  41503f:	ds test eax,0x8b355962
  415045:	ret    0x809e
  415048:	jb     0x415074
  41504a:	in     eax,0x3
  41504c:	mov    al,0x3d
  41504e:	or     eax,0x804cde15
  415053:	jmp    DWORD PTR [esi+0x70f5b7dc]
  415059:	mov    bh,0xca
  41505b:	(bad)  
  41505c:	retf   
  41505d:	sub    al,0xd0
  41505f:	div    al
  415061:	cmp    eax,0xa15b6f0a
  415066:	repnz xchg ebx,eax
  415068:	lods   al,BYTE PTR ds:[esi]
  415069:	fistp  DWORD PTR [edx-0x1caa04d5]
  41506f:	in     eax,dx
  415070:	rol    DWORD PTR [edx-0x7a268814],1
  415076:	int    0xc9
  415078:	pop    ebx
  415079:	mov    edx,0xe8551444
  41507e:	daa    
  41507f:	mov    BYTE PTR [edx],bl
  415081:	lods   eax,DWORD PTR ds:[esi]
  415082:	dec    ebp
  415083:	sub    DWORD PTR [edx-0x6a9d0686],ecx
  415089:	ds ds dec ecx
  41508c:	push   esp
  41508d:	inc    ebp
  41508e:	mov    bl,BYTE PTR [ecx]
  415090:	cld    
  415091:	sub    al,0x39
  415093:	lds    esi,FWORD PTR [ecx]
  415095:	repz adc eax,0x5a2d1c26
  41509b:	xchg   edx,eax
  41509c:	mov    eax,0x69564d68
  4150a1:	out    0x55,eax
  4150a3:	leave  
  4150a4:	xchg   ecx,eax
  4150a5:	push   esp
  4150a6:	dec    ecx
  4150a7:	cwde   
  4150a8:	out    0xe6,al
  4150aa:	lock mov ebp,0xfe7274b5
  4150b0:	in     al,0x64
  4150b2:	loopne 0x415071
  4150b4:	into   
  4150b5:	jno    0x41507c
  4150b7:	xchg   edi,eax
  4150b8:	mov    al,cl
  4150ba:	aaa    
  4150bb:	ficom  WORD PTR [edi+eiz*2-0x4a]
  4150bf:	lahf   
  4150c0:	adc    BYTE PTR [ebp+eax*8-0x7cf522fc],ah
  4150c7:	pop    ds
  4150c8:	lods   al,BYTE PTR ds:[esi]
  4150c9:	adc    al,0xfd
  4150cb:	mov    cl,0x48
  4150cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150ce:	sub    al,0x16
  4150d0:	xor    dl,BYTE PTR [edx+0x1c3658b2]
  4150d6:	mov    edi,0xbde3c5fd
  4150db:	fdivr  DWORD PTR ss:[edx+0x165bad81]
  4150e2:	and    DWORD PTR [ebx+0x7c99f00e],edi
  4150e8:	cmp    al,0xf8
  4150ea:	or     ah,BYTE PTR [ebx-0x61159731]
  4150f0:	sti    
  4150f1:	in     al,dx
  4150f2:	mov    esp,0x73f251f
  4150f7:	inc    eax
  4150f8:	push   eax
  4150f9:	xor    BYTE PTR [ecx],0xce
  4150fc:	and    DWORD PTR [esp-0xabea59f],ecx
  415103:	aad    0xd9
  415105:	xor    BYTE PTR [ebx+0x53948625],bh
  41510b:	or     bl,BYTE PTR [ecx+0x6780a58b]
  415111:	inc    eax
  415112:	aam    0xc
  415114:	aam    0x3b
  415116:	mov    eax,0xa3d0a235
  41511b:	or     bl,BYTE PTR [edx+0x28]
  41511e:	jo     0x415134
  415120:	xchg   esi,eax
  415121:	sub    bl,ch
  415123:	and    BYTE PTR [esi*2-0x2385f952],cl
  41512a:	fwait
  41512b:	pop    es
  41512c:	sub    DWORD PTR [ebp+0x9],ecx
  41512f:	pop    ds
  415130:	jb     0x415168
  415132:	aam    0x17
  415134:	and    cl,dl
  415136:	enter  0x6304,0xe7
  41513a:	mov    bl,0x1e
  41513c:	ror    BYTE PTR [edi+ebp*2-0x2b7eebe3],cl
  415143:	sub    edx,esi
  415145:	mov    ecx,0x28694975
  41514a:	lds    esi,FWORD PTR [esi]
  41514c:	ins    DWORD PTR es:[edi],dx
  41514d:	dec    ebp
  41514e:	(bad)  
  41514f:	shr    bh,0xd6
  415152:	mov    al,ds:0x6297717
  415157:	pop    ss
  415158:	fwait
  415159:	icebp  
  41515a:	jae    0x415163
  41515c:	pop    ds
  41515d:	jle    0x41510e
  41515f:	cdq    
  415160:	outs   dx,BYTE PTR ds:[esi]
  415161:	out    0xdf,al
  415163:	adc    eax,DWORD PTR [esp+eiz*2-0x38b9e09d]
  41516a:	hlt    
  41516b:	in     al,dx
  41516c:	xchg   BYTE PTR [eax],cl
  41516e:	std    
  41516f:	cmp    eax,0x49020cbf
  415174:	rcl    edx,1
  415176:	or     esp,ebx
  415178:	ret    
  415179:	pop    eax
  41517a:	mov    edx,0x32feae85
  41517f:	push   ebp
  415180:	psrld  mm7,QWORD PTR [esi-0x4a]
  415184:	(bad)  
  415185:	loope  0x4151d3
  415187:	inc    edi
  415188:	mov    edx,0xed172b91
  41518d:	cli    
  41518e:	dec    esi
  41518f:	mov    ecx,0x958d82a1
  415194:	mov    al,0x2
  415196:	ja     0x415150
  415198:	cwde   
  415199:	cmp    bh,BYTE PTR [ecx-0x50c3d87b]
  41519f:	retf   
  4151a0:	daa    
  4151a1:	sub    ecx,DWORD PTR [edx+edi*4+0x5cf033bf]
  4151a8:	fdivr  DWORD PTR [eax-0x7340784b]
  4151ae:	xchg   ebx,eax
  4151af:	fimul  DWORD PTR cs:[edi]
  4151b2:	out    dx,eax
  4151b3:	xchg   esi,eax
  4151b4:	xchg   ebx,eax
  4151b5:	ret    
  4151b6:	fst    QWORD PTR [ecx+eiz*8-0x705e5940]
  4151bd:	hlt    
  4151be:	jmp    0x66af8b41
  4151c3:	loop   0x415192
  4151c5:	mov    edi,0xb69bd16c
  4151ca:	retf   
  4151cb:	add    dh,BYTE PTR [edx+0x6f]
  4151ce:	pop    eax
  4151cf:	inc    ebx
  4151d0:	je     0x41516a
  4151d2:	test   BYTE PTR [edx],bl
  4151d4:	ins    BYTE PTR es:[edi],dx
  4151d5:	push   edi
  4151d6:	cmp    ebp,edx
  4151d8:	mov    ch,0x16
  4151da:	sbb    DWORD PTR [ebp-0x75a80cf],ecx
  4151e0:	cli    
  4151e1:	add    ah,bh
  4151e3:	pop    esi
  4151e4:	leave  
  4151e5:	cli    
  4151e6:	inc    DWORD PTR [ebx+0x1cdfe8db]
  4151ec:	fldcw  WORD PTR [ecx+0x75]
  4151ef:	xchg   ebx,eax
  4151f0:	into   
  4151f1:	aaa    
  4151f2:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4151f4:	(bad)  
  4151f5:	in     eax,dx
  4151f6:	test   BYTE PTR [ebx+0x4c],ah
  4151f9:	xor    al,BYTE PTR [ebx+0x7c91d828]
  4151ff:	mov    ah,0x43
  415201:	dec    ecx
  415202:	out    dx,al
  415203:	pop    es
  415204:	adc    ch,BYTE PTR [eax-0x7d861150]
  41520a:	dec    edx
  41520b:	mov    bh,0xcc
  41520d:	mov    BYTE PTR [ebx],ch
  41520f:	(bad)  
  415210:	daa    
  415211:	cmp    ebx,ebp
  415213:	jp     0x41525e
  415215:	inc    esp
  415216:	sbb    esi,DWORD PTR [ecx+0x4d]
  415219:	inc    esi
  41521a:	dec    esi
  41521b:	aad    0x8b
  41521d:	xor    eax,DWORD PTR [ecx+esi*4-0x5cb30f75]
  415224:	jae    0x41525d
  415226:	outs   dx,BYTE PTR ds:[esi]
  415227:	daa    
  415228:	fcom   QWORD PTR [esp+edx*1]
  41522b:	add    al,0xfb
  41522d:	and    dh,BYTE PTR [edx+0x3b0c6c39]
  415233:	mov    ch,0x57
  415235:	mov    esp,0x2a1c4a37
  41523a:	jnp    0x415273
  41523c:	sub    BYTE PTR [edi],0x8d
  41523f:	xlat   BYTE PTR ds:[ebx]
  415240:	loope  0x415299
  415242:	or     bh,BYTE PTR [ebp+esi*2-0x70a810a9]
  415249:	fs push ss
  41524b:	iret   
  41524c:	es (bad) 
  41524e:	push   0x5989d9ee
  415253:	cs jle 0x4151f6
  415256:	out    0x70,eax
  415258:	xchg   edi,eax
  415259:	inc    ebp
  41525a:	xchg   edi,eax
  41525b:	push   esp
  41525c:	adc    eax,0xf6371456
  415261:	cmp    al,0x43
  415263:	int    0xd
  415265:	mov    DWORD PTR [edi],esp
  415267:	jmp    0x38df:0xad51e2ce
  41526e:	loope  0x41522b
  415270:	rcr    esi,1
  415272:	adc    eax,0xb69ce80d
  415277:	fcmovb st,st(5)
  415279:	fstp   QWORD PTR [ecx+edi*2]
  41527c:	inc    edx
  41527d:	ins    DWORD PTR es:[edi],dx
  41527e:	test   BYTE PTR [edi+0x4801e932],dl
  415284:	(bad)  
  415286:	pop    ecx
  415287:	fadd   DWORD PTR [esi-0x1f]
  41528a:	pop    ebx
  41528b:	test   DWORD PTR [edi+0x41],esi
  41528e:	mov    dl,0x50
  415290:	jp     0x4152f7
  415292:	cld    
  415293:	addr16 loope 0x415234
  415296:	pop    ds
  415297:	adc    DWORD PTR [ebp-0x15f093c9],edi
  41529d:	sub    esi,DWORD PTR [ebp+edi*1-0xf]
  4152a1:	clc    
  4152a2:	inc    edi
  4152a3:	repz dec edi
  4152a5:	sahf   
  4152a6:	popa   
  4152a7:	ret    0x52e7
  4152aa:	cmp    BYTE PTR [edx],dl
  4152ac:	pop    ecx
  4152ad:	cmp    BYTE PTR [esi-0x78],0x71
  4152b1:	call   0x3a35110a
  4152b6:	xchg   ebx,eax
  4152b7:	aam    0x36
  4152b9:	ret    
  4152ba:	ja     0x415332
  4152bc:	ja     0x41524f
  4152be:	cmp    eax,0x7f8e9363
  4152c3:	mov    cl,0x7f
  4152c5:	pop    esi
  4152c6:	push   esp
  4152c7:	push   es
  4152c8:	clc    
  4152c9:	xor    eax,0xcc95ec75
  4152ce:	shl    BYTE PTR [edx],1
  4152d0:	dec    ecx
  4152d1:	xor    BYTE PTR [ebp+0x147431ee],ah
  4152d7:	jle    0x4152d9
  4152d9:	mov    WORD PTR [edi],?
  4152db:	add    BYTE PTR [ebx-0x24ccfe84],dl
  4152e1:	mov    bl,0x30
  4152e3:	(bad)  
  4152e4:	in     eax,dx
  4152e5:	(bad)  
  4152e7:	xor    eax,DWORD PTR [edi-0x5d0a1ced]
  4152ed:	pop    esp
  4152ee:	sub    eax,0x34fb81fc
  4152f3:	inc    esp
  4152f4:	jo     0x415316
  4152f6:	pusha  
  4152f7:	dec    edx
  4152f8:	jb     0x415312
  4152fa:	int    0x43
  4152fc:	dec    ebx
  4152fd:	lods   al,BYTE PTR ds:[esi]
  4152fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152ff:	les    edx,FWORD PTR [edi+0x125997de]
  415305:	mov    ebx,0x682fc91f
  41530a:	fimul  DWORD PTR [ebp-0x1cb044de]
  415310:	mov    ah,0x45
  415312:	in     al,0xfc
  415314:	push   esi
  415315:	jnp    0x415311
  415317:	and    al,dl
  415319:	cmp    DWORD PTR [edx+0x2ffd02c8],esi
  41531f:	rcl    ebx,cl
  415321:	xchg   edx,eax
  415322:	mov    ebx,0x5e23c3b0
  415327:	cmp    WORD PTR [eax+0xb1191dc],0x12
  41532f:	fst    DWORD PTR [edx-0x2de46d07]
  415335:	test   eax,0x5fc2b314
  41533a:	jno    0x4152d4
  41533c:	or     eax,0xc41c4afc
  415341:	sti    
  415342:	pusha  
  415343:	repnz aas 
  415345:	cmp    eax,0x8585562b
  41534a:	sti    
  41534b:	or     ebx,DWORD PTR [esi+esi*4+0x17]
  41534f:	jg     0x415311
  415351:	adc    al,0x9e
  415353:	jb     0x415380
  415355:	add    DWORD PTR [eax],eax
  415357:	pop    esi
  415358:	pop    edx
  415359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41535a:	(bad)  
  41535b:	rcl    DWORD PTR [edx-0x4c42671c],cl
  415361:	imul   edx,DWORD PTR [eax+0x65895348],0x241d0688
  41536b:	ret    0x3833
  41536e:	lahf   
  41536f:	push   cs
  415370:	mov    ebx,DWORD PTR [eax+0x6b]
  415373:	sbb    edx,DWORD PTR [edx-0xd]
  415376:	dec    eax
  415377:	pop    DWORD PTR [ecx]
  415379:	(bad)  
  41537a:	scas   al,BYTE PTR es:[edi]
  41537b:	retf   
  41537c:	fidiv  WORD PTR [ebp-0xa]
  41537f:	jmp    0x415305
  415381:	(bad)  
  415382:	push   ecx
  415383:	mov    dh,0xa9
  415385:	sbb    al,0xc0
  415387:	cmp    eax,0x9cf3b75c
  41538c:	and    eax,0x62bc5469
  415391:	add    al,0xed
  415393:	or     BYTE PTR [ebx],0x41
  415396:	lods   eax,DWORD PTR ds:[esi]
  415397:	push   ebx
  415398:	add    dh,BYTE PTR [ebx+0x1f751888]
  41539e:	loopne 0x415393
  4153a0:	test   BYTE PTR [ebp-0x13600bb8],al
  4153a6:	mov    dh,0xf8
  4153a8:	adc    ecx,DWORD PTR [ebx]
  4153aa:	lock cdq 
  4153ac:	cmp    BYTE PTR [ebx-0x39fdc147],ah
  4153b2:	es in  eax,dx
  4153b4:	push   eax
  4153b5:	scas   al,BYTE PTR es:[edi]
  4153b6:	or     al,0x83
  4153b8:	mov    eax,ds:0xbd70c999
  4153bd:	jae    0x41543c
  4153bf:	push   esi
  4153c0:	xor    al,BYTE PTR [edi+0x1a853e0b]
  4153c6:	dec    edi
  4153c7:	pop    edx
  4153c8:	lds    edi,FWORD PTR [ecx+0x2b35b429]
  4153ce:	retf   0x7b4
  4153d1:	sbb    al,0x2
  4153d3:	fcmovbe st,st(3)
  4153d5:	retf   
  4153d6:	cmp    eax,0xf5f56e67
  4153db:	bound  edx,QWORD PTR [ebx-0x5c]
  4153de:	pusha  
  4153df:	repz or ah,0xd2
  4153e3:	jne    0x415418
  4153e5:	add    edi,DWORD PTR [ebx-0x1744d0a5]
  4153eb:	mov    bl,0x79
  4153ed:	(bad)  
  4153ee:	(bad)  
  4153ef:	aam    0xcc
  4153f1:	call   0x487e3c56
  4153f6:	adc    bh,BYTE PTR [esi]
  4153f8:	fstp   QWORD PTR [eax-0x16]
  4153fb:	test   BYTE PTR [eax+0x3fed870a],cl
  415401:	inc    eax
  415402:	or     al,0x57
  415404:	adc    BYTE PTR [ebp+0x9424673],0x7c
  41540b:	push   ss
  41540c:	sahf   
  41540d:	xchg   BYTE PTR [esi+0x4a],bl
  415410:	inc    esp
  415411:	xor    BYTE PTR [eax+0x6c],al
  415414:	add    esi,DWORD PTR [ebx+0x3e6d1f6d]
  41541a:	fisttp QWORD PTR [edx+0x75c18381]
  415420:	mov    edx,gs
  415422:	rcl    DWORD PTR [ecx],0xb2
  415425:	pop    ds
  415426:	or     esp,edi
  415428:	div    BYTE PTR [edx]
  41542a:	inc    edi
  41542b:	mov    al,0xa4
  41542d:	sti    
  41542e:	ffree  st(6)
  415430:	add    bl,cl
  415432:	clc    
  415433:	adc    al,0x52
  415435:	aad    0xac
  415437:	test   eax,0x31f061d1
  41543c:	lods   eax,DWORD PTR ds:[esi]
  41543d:	(bad)
  415440:	(bad)  
  415442:	sub    DWORD PTR ds:0x4ffd5f2e,ecx
  415448:	pop    ebx
  415449:	xchg   ecx,edx
  41544b:	loope  0x4154ca
  41544d:	lds    esp,FWORD PTR [eax]
  41544f:	shr    DWORD PTR [edi-0x6c],0xda
  415453:	std    
  415454:	test   eax,0xa6c42efb
  415459:	mov    ds:0x2b2ca2c5,al
  41545e:	dec    ebp
  41545f:	cmp    esi,DWORD PTR [edx+0x3]
  415462:	cmp    eax,eax
  415464:	xchg   ebx,eax
  415465:	outs   dx,DWORD PTR ds:[esi]
  415466:	scas   al,BYTE PTR es:[edi]
  415467:	mov    esp,0x895ac2ef
  41546c:	fdivr  DWORD PTR [ebx]
  41546e:	jno    0x4154b7
  415470:	outs   dx,BYTE PTR ds:[esi]
  415471:	push   esi
  415472:	std    
  415473:	fdivr  st,st(1)
  415475:	(bad)  
  415476:	sub    al,0xc
  415478:	fld    st(7)
  41547a:	retf   0xbd9b
  41547d:	(bad)  
  41547e:	std    
  41547f:	sbb    DWORD PTR [ebx],esi
  415481:	int3   
  415482:	pop    ds
  415483:	dec    esi
  415484:	js     0x415496
  415486:	adc    al,0x2d
  415488:	(bad)  [ecx-0x2f]
  41548b:	fadd   DWORD PTR [eax-0x13c5c05c]
  415491:	div    BYTE PTR [eax+0x5ee34791]
  415497:	sbb    esp,DWORD PTR [ebx+edi*4]
  41549a:	push   edx
  41549b:	or     DWORD PTR [esi-0x73],ebp
  41549e:	sbb    BYTE PTR [edx-0x27d5835d],ch
  4154a4:	jl     0x4154ef
  4154a6:	mov    cl,BYTE PTR [esi+eax*1-0x14]
  4154aa:	push   edi
  4154ab:	fpatan 
  4154ad:	mov    ecx,DWORD PTR [eax+ebx*8]
  4154b0:	rol    DWORD PTR [ebx],1
  4154b2:	cs dec esp
  4154b4:	xchg   edx,eax
  4154b5:	sbb    DWORD PTR [eax+0x41],ecx
  4154b8:	sub    DWORD PTR [ecx+0x4f],ecx
  4154bb:	xchg   edi,eax
  4154bc:	call   0x155a373f
  4154c1:	cdq    
  4154c2:	pop    esi
  4154c3:	cli    
  4154c4:	mov    edi,DWORD PTR [ecx+0x2628d5bc]
  4154ca:	mov    ds:0xaa4596b6,eax
  4154cf:	fwait
  4154d0:	sub    esi,ebp
  4154d2:	push   0x71
  4154d4:	iret   
  4154d5:	push   eax
  4154d6:	retf   
  4154d7:	jno    0x4154dc
  4154d9:	sub    al,0xc9
  4154db:	or     DWORD PTR [edx],edi
  4154dd:	adc    edx,DWORD PTR [eax-0x6e639f50]
  4154e3:	pop    esi
  4154e4:	in     al,0xa7
  4154e6:	and    al,0x88
  4154e8:	mov    edx,0x4c6660df
  4154ed:	pop    edi
  4154ee:	pop    ss
  4154ef:	or     eax,0xcaea001f
  4154f4:	aas    
  4154f5:	sub    eax,0xf52d242f
  4154fa:	rol    bh,cl
  4154fc:	cmp    eax,0xf72d582
  415501:	mov    bh,0x93
  415503:	adc    ah,BYTE PTR [ebp+0x26]
  415506:	mov    al,0xd5
  415508:	sub    al,ch
  41550a:	mov    eax,ds:0x406b08fe
  41550f:	cmp    cl,BYTE PTR ds:0xbc06cc2
  415515:	pop    edi
  415516:	xchg   edx,eax
  415517:	mov    cl,0x4b
  415519:	arpl   bp,cx
  41551b:	fsub   st(4),st
  41551d:	(bad)  
  41551e:	cld    
  41551f:	xchg   edx,eax
  415520:	hlt    
  415521:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415522:	fidivr DWORD PTR [ecx+0x30]
  415525:	pushf  
  415526:	jl     0x415527
  415528:	fsubr  DWORD PTR [eax-0x4f]
  41552b:	movq   mm7,QWORD PTR [eax]
  41552e:	pop    ds
  41552f:	mov    al,ds:0x204b18f1
  415534:	gs sbb ebp,ebx
  415537:	std    
  415538:	mov    edx,DWORD PTR [ebp+eiz*4-0x2f]
  41553c:	push   esp
  41553d:	sbb    dl,BYTE PTR [eax+0x6d]
  415540:	(bad)  
  415541:	mov    ds:0xc51f10df,al
  415546:	mov    ebp,0x4f06888d
  41554b:	das    
  41554c:	stos   BYTE PTR es:[edi],al
  41554d:	adc    al,0xbc
  41554f:	or     al,cl
  415551:	sbb    dl,bl
  415553:	mov    gs,ebx
  415555:	adc    DWORD PTR ds:0xb5a22ef9,0xffffffcb
  41555c:	add    DWORD PTR [esi+0x7],0x3ac1979
  415563:	cli    
  415564:	xchg   BYTE PTR [edx],dh
  415566:	icebp  
  415567:	(bad)  
  415568:	adc    eax,edi
  41556a:	mov    bl,0x65
  41556c:	sub    eax,0xb7504688
  415571:	sbb    BYTE PTR [edx-0x97506d3],0x6a
  415578:	popa   
  415579:	push   ebx
  41557a:	pop    edx
  41557b:	ins    BYTE PTR es:[edi],dx
  41557c:	dec    ebx
  41557d:	add    eax,DWORD PTR [ecx+0x75b8ab5b]
  415583:	mov    eax,ds:0x6e64e2f8
  415588:	push   0x566fc21a
  41558d:	retf   0x2b18
  415590:	outs   dx,DWORD PTR ds:[esi]
  415591:	pop    ss
  415592:	daa    
  415593:	mov    al,ds:0x7503e676
  415598:	cli    
  415599:	mov    bh,0xce
  41559b:	test   BYTE PTR [ecx],bl
  41559d:	mov    edx,DWORD PTR [ecx]
  41559f:	test   BYTE PTR [ebp+0x5eb008f],ah
  4155a5:	sub    BYTE PTR [edi],cl
  4155a7:	sbb    edx,DWORD PTR [eax-0x5b9df94c]
  4155ad:	pop    eax
  4155ae:	data16 arpl dx,bx
  4155b1:	repz mov esi,0x24d7914a
  4155b7:	fidiv  DWORD PTR [edi+0x33980424]
  4155bd:	xor    DWORD PTR [edi+eax*4],ebx
  4155c0:	pop    ds
  4155c1:	dec    eax
  4155c2:	das    
  4155c3:	jb     0x415599
  4155c5:	pop    ecx
  4155c6:	mov    ebp,0x8f6abb82
  4155cb:	out    dx,eax
  4155cc:	call   0x5317c97f
  4155d1:	retf   
  4155d2:	mov    ebx,DWORD PTR [ebp+0x42]
  4155d5:	adc    esi,DWORD PTR [esi+0x133ed433]
  4155db:	loop   0x415586
  4155dd:	cs jmp 0x2dde3d61
  4155e3:	mov    dl,0x5b
  4155e5:	jmp    0x415651
  4155e7:	mov    ch,0xb1
  4155e9:	leave  
  4155ea:	or     DWORD PTR [ebx+0xdff7fb5],0x15f278ff
  4155f4:	shl    BYTE PTR [esi-0x3767173f],1
  4155fa:	retf   
  4155fb:	shl    cl,cl
  4155fd:	cli    
  4155fe:	push   ecx
  4155ff:	dec    eax
  415600:	stos   BYTE PTR es:[edi],al
  415601:	pop    ss
  415602:	inc    esp
  415603:	fist   WORD PTR [edx]
  415605:	push   eax
  415606:	xlat   BYTE PTR ds:[ebx]
  415607:	and    BYTE PTR [esi-0x53],al
  41560a:	push   0xde6ffb16
  41560f:	sub    eax,0x7de7c
  415614:	or     al,0x28
  415616:	scas   al,BYTE PTR es:[edi]
  415617:	jb     0x4155e6
  415619:	(bad)  [ecx+0x5a]
  41561c:	push   esi
  41561d:	idiv   edi
  41561f:	rcl    BYTE PTR [ecx+eiz*1],cl
  415622:	mov    eax,ds:0x7a335af8
  415627:	test   eax,0xbcbb51b2
  41562c:	test   al,0x2
  41562e:	sub    edx,DWORD PTR [esp+eax*2]
  415631:	pushf  
  415632:	lea    esp,[ebp-0x66]
  415635:	rcl    DWORD PTR [edi],1
  415637:	fs leave 
  415639:	jecxz  0x4155cf
  41563b:	ja     0x41567c
  41563d:	fs push esp
  41563f:	push   ss
  415640:	retf   0x58cf
  415643:	jmp    0x8ac07c49
  415648:	or     al,dh
  41564a:	data16 jne 0x415662
  41564d:	retf   0xcf0a
  415650:	lds    eax,FWORD PTR [ebx]
  415652:	pop    esp
  415653:	neg    DWORD PTR [eax]
  415655:	mov    cl,0x9
  415657:	dec    esp
  415658:	xchg   ebp,eax
  415659:	or     DWORD PTR [esi-0x1b],eax
  41565c:	jnp    0x41561e
  41565e:	sbb    ch,ah
  415660:	add    esp,DWORD PTR [ebp+0x5c]
  415663:	jl     0x415656
  415665:	push   cs
  415666:	and    BYTE PTR [esi-0x3d],al
  415669:	test   eax,0x4576a2a1
  41566e:	jno    0x415623
  415670:	adc    eax,0x20e8c06c
  415675:	sub    cl,BYTE PTR ds:0xbe54c8db
  41567b:	push   ds
  41567c:	mov    al,0xd4
  41567e:	ss dec ebx
  415680:	ins    DWORD PTR es:[di],dx
  415682:	ret    
  415683:	loop   0x41561b
  415685:	jge    0x4156c0
  415687:	ret    0xbf70
  41568a:	out    0xa5,al
  41568c:	dec    ebp
  41568d:	xor    edi,eax
  41568f:	adc    ebp,eax
  415691:	jno    0x4156ee
  415693:	lods   al,BYTE PTR ds:[esi]
  415694:	(bad)  [edi+0x2a51100d]
  41569a:	lock push eax
  41569c:	fsub   DWORD PTR ds:0x548b0594
  4156a2:	inc    esp
  4156a3:	push   ebp
  4156a4:	mov    ecx,0x8b8424bd
  4156a9:	push   edx
  4156aa:	mov    ds:0xd38a40be,eax
  4156af:	pop    eax
  4156b0:	push   ss
  4156b1:	mov    ebp,0xbfaade7f
  4156b6:	sub    ecx,DWORD PTR [esi+0x5bed226c]
  4156bc:	mov    al,0x51
  4156be:	shr    DWORD PTR [ecx],0x2c
  4156c1:	fisubr WORD PTR [ebp+0x5f]
  4156c4:	push   ds
  4156c5:	mov    dl,0x7f
  4156c7:	and    esi,DWORD PTR [ebx-0xa]
  4156ca:	xchg   BYTE PTR [eax],ah
  4156cc:	jecxz  0x415719
  4156ce:	sbb    ebx,DWORD PTR ds:0x50a5b7a0
  4156d4:	out    0x33,eax
  4156d6:	mov    ah,0xee
  4156d8:	leave  
  4156d9:	idiv   BYTE PTR [eax+0x38069e8d]
  4156df:	cmp    al,0xab
  4156e1:	out    dx,eax
  4156e2:	cwde   
  4156e3:	shl    cl,0x29
  4156e6:	test   eax,0x297ce1d3
  4156eb:	lock jg 0x415721
  4156ee:	mov    ah,0x36
  4156f0:	rol    ecx,cl
  4156f2:	or     DWORD PTR [ebx-0x71f5e0ac],eax
  4156f8:	shl    BYTE PTR [edx+edx*8-0x2e],1
  4156fc:	sub    eax,0xdf3b2b9a
  415701:	or     eax,0x9a369142
  415706:	(bad)  
  415707:	scas   al,BYTE PTR es:[edi]
  415708:	mov    ds:0x2af00b1a,al
  41570d:	mov    ecx,0x9cf6aeda
  415712:	shrd   DWORD PTR ds:0xe1827fb1,edx,cl
  415719:	push   edx
  41571a:	adc    al,0x45
  41571c:	dec    esp
  41571d:	jmp    0x7b3ebae9
  415722:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415723:	mov    BYTE PTR [ebx-0x39],0x7d
  415727:	test   eax,0x82db916e
  41572c:	cli    
  41572d:	inc    esp
  41572e:	cmc    
  41572f:	cmp    DWORD PTR [ebx+esi*8-0x21],edi
  415733:	mov    edx,0xeb4f66d7
  415738:	mov    ecx,0x9200aec
  41573d:	xchg   ebp,eax
  41573e:	mov    ch,0x8a
  415740:	add    ebx,ebx
  415742:	retf   0xb90f
  415745:	js     0x4156e5
  415747:	gs jmp 0x415700
  41574a:	sar    BYTE PTR [esi],cl
  41574c:	jl     0x41570a
  41574e:	imul   edi,DWORD PTR [ecx],0x7e
  415751:	(bad)  
  415753:	push   esp
  415754:	push   0xfffffffb
  415756:	inc    ebp
  415757:	xor    bl,BYTE PTR [ebx-0x2aa1bc1d]
  41575d:	pop    ss
  41575e:	sub    DWORD PTR [edi+0x65f7a7b3],eax
  415764:	imul   esp,DWORD PTR [eax+0x5d8f7661],0x708870be
  41576e:	out    0x4d,al
  415770:	jge    0x415754
  415772:	outs   dx,DWORD PTR ds:[esi]
  415773:	stc    
  415774:	pusha  
  415775:	sbb    eax,0x78e78fca
  41577a:	aaa    
  41577b:	jp     0x41572d
  41577d:	in     al,dx
  41577e:	rcr    bh,cl
  415780:	cmc    
  415781:	jnp    0x415752
  415783:	scas   eax,DWORD PTR es:[edi]
  415784:	call   0xa53e:0x3aa9f9d2
  41578b:	lock jmp 0xc4bb:0x30f3dede
  415793:	jmp    0xa6a1:0x79e01d9e
  41579a:	xlat   BYTE PTR ds:[ebx]
  41579b:	inc    ebx
  41579c:	jo     0x415809
  41579e:	add    bh,dh
  4157a0:	xchg   ah,cl
  4157a2:	and    al,BYTE PTR [edx-0x15]
  4157a5:	jne    0x4157b7
  4157a7:	cmp    al,0x88
  4157a9:	cld    
  4157aa:	das    
  4157ab:	aad    0x67
  4157ad:	xchg   ebx,eax
  4157ae:	fld    QWORD PTR [ebx+0x1d605782]
  4157b4:	pop    ds
  4157b5:	inc    ebx
  4157b6:	push   ebp
  4157b7:	adc    edi,DWORD PTR [edx+0x16]
  4157ba:	xor    bl,BYTE PTR [eax]
  4157bc:	xor    cl,al
  4157be:	mov    eax,0xac73981f
  4157c3:	fwait
  4157c4:	ja     0x4157bc
  4157c6:	pop    ecx
  4157c7:	into   
  4157c8:	adc    ah,BYTE PTR [eax+eax*8]
  4157cb:	cmp    cl,BYTE PTR [esi]
  4157cd:	dec    edx
  4157ce:	cmp    al,0x72
  4157d0:	dec    esi
  4157d1:	out    dx,al
  4157d2:	call   0x10cb:0x385ee6a5
  4157d9:	dec    edi
  4157da:	into   
  4157db:	scas   al,BYTE PTR es:[edi]
  4157dc:	adc    DWORD PTR [ebx],ebp
  4157de:	scas   eax,DWORD PTR es:[edi]
  4157df:	stos   BYTE PTR es:[edi],al
  4157e0:	inc    ebx
  4157e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157e2:	sti    
  4157e3:	(bad)  
  4157e4:	dec    esi
  4157e5:	out    0x48,eax
  4157e7:	call   0x2ca199a8
  4157ec:	nop
  4157ed:	ja     0x415854
  4157ef:	adc    eax,0xde3f1b26
  4157f4:	and    BYTE PTR [ebx],bl
  4157f6:	(bad)  
  4157f7:	mov    ebp,0x2a0b229c
  4157fc:	ss adc edi,edi
  4157ff:	imul   esp
  415801:	shl    BYTE PTR [ecx],1
  415803:	es je  0x415813
  415806:	cmc    
  415807:	add    dh,al
  415809:	adc    al,0xf9
  41580b:	cdq    
  41580c:	sub    dl,BYTE PTR [ebx+ebp*1-0xf]
  415810:	out    0xd6,eax
  415812:	ret    0x90c1
  415815:	push   edi
  415816:	push   ss
  415817:	sub    al,0xd0
  415819:	adc    ch,BYTE PTR [ebx-0x340c9c59]
  41581f:	cmp    DWORD PTR [ebx-0xe],0xffffffa5
  415823:	mov    edx,0x1485f3e8
  415828:	pusha  
  415829:	xchg   ecx,eax
  41582a:	mov    esi,esi
  41582c:	sbb    al,0x8c
  41582e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41582f:	into   
  415830:	adc    BYTE PTR gs:[ebx-0x3f],al
  415834:	aad    0xf5
  415836:	push   edi
  415837:	mul    BYTE PTR [edx]
  415839:	fsub   QWORD PTR [edx+0x5a426642]
  41583f:	sub    al,0xb8
  415841:	bound  ebx,QWORD PTR [esi-0x8c9f06b]
  415847:	push   cs
  415848:	cdq    
  415849:	and    DWORD PTR [esi-0x58a3220d],0x468d6f79
  415853:	xor    al,0x38
  415855:	pop    esp
  415856:	sub    DWORD PTR [ecx+0x7576b94f],ebp
  41585c:	sti    
  41585d:	mov    edi,0x4fcb2729
  415862:	lods   eax,DWORD PTR ds:[esi]
  415863:	mov    BYTE PTR ds:0x5a32351,dh
  415869:	or     BYTE PTR [edi],0xf5
  41586c:	pop    edx
  41586d:	int    0xd5
  41586f:	pop    esi
  415870:	shl    DWORD PTR [esi],0x70
  415873:	les    eax,FWORD PTR [edi]
  415875:	add    eax,0x49df705d
  41587a:	lea    edx,[eax+0x1c]
  41587d:	gs jge 0x415829
  415880:	xchg   ecx,eax
  415881:	mov    esi,0xe62dd595
  415886:	adc    DWORD PTR [edi],edi
  415888:	pop    edi
  415889:	sub    cl,bh
  41588b:	gs ins BYTE PTR es:[edi],dx
  41588d:	push   0xffffff85
  41588f:	adc    eax,0x13db6431
  415894:	cmp    edx,DWORD PTR [ebx+esi*8-0x75]
  415898:	inc    esi
  415899:	fs push esi
  41589b:	jp     0x415836
  41589d:	loopne 0x4158df
  41589f:	fcom   DWORD PTR [edi-0x12]
  4158a2:	mov    esi,0xe4d0b23b
  4158a7:	inc    DWORD PTR [eax-0x77]
  4158aa:	mov    dh,0x9a
  4158ac:	dec    eax
  4158ad:	mov    ds:0x2293baaf,eax
  4158b2:	retf   0xa96f
  4158b5:	push   edx
  4158b6:	xchg   edx,eax
  4158b7:	mov    WORD PTR [edi+edi*8-0x52],?
  4158bb:	and    BYTE PTR [ebx],bl
  4158bd:	into   
  4158be:	sub    eax,0xfef301c7
  4158c3:	icebp  
  4158c4:	cli    
  4158c5:	inc    ebp
  4158c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158c7:	outs   dx,BYTE PTR ds:[esi]
  4158c8:	push   esp
  4158c9:	add    esi,DWORD PTR [edx+edi*2]
  4158cc:	enter  0x86fa,0x3e
  4158d0:	dec    edx
  4158d1:	sbb    BYTE PTR [eax],0x1c
  4158d4:	mov    edi,0x34a2eb31
  4158d9:	sub    al,0x85
  4158db:	out    dx,al
  4158dc:	pop    edx
  4158dd:	pop    edi
  4158de:	ror    edx,1
  4158e0:	es add al,0x24
  4158e3:	mov    ebx,DWORD PTR [edx+0x771312e2]
  4158e9:	ret    
  4158ea:	add    al,BYTE PTR ds:0xf6884c34
  4158f0:	mov    ch,0x29
  4158f2:	and    edi,DWORD PTR [ecx+0x2b]
  4158f5:	xor    ebx,DWORD PTR [esi]
  4158f7:	inc    edx
  4158f8:	les    di,DWORD PTR [esi]
  4158fb:	sub    bh,cl
  4158fd:	fidivr DWORD PTR [ecx+0x42]
  415900:	cmp    DWORD PTR [ecx-0x3cf0d395],ebx
  415906:	or     esi,DWORD PTR [eax]
  415908:	jbe    0x4158c0
  41590a:	daa    
  41590b:	leave  
  41590c:	dec    ecx
  41590d:	lods   eax,DWORD PTR ds:[esi]
  41590e:	gs sti 
  415910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415911:	xor    DWORD PTR [ecx],ecx
  415913:	adc    al,0x15
  415915:	mov    esp,cs
  415917:	mov    ebx,0x3a57ba57
  41591c:	jecxz  0x4158d1
  41591e:	and    ch,BYTE PTR [ecx-0x307ff929]
  415924:	jle    0x4158b1
  415926:	lds    esi,FWORD PTR [esi+ecx*8]
  415929:	dec    ebp
  41592a:	adc    al,0x9b
  41592c:	das    
  41592d:	push   esp
  41592e:	test   DWORD PTR [ecx],0x2d13c098
  415934:	fwait
  415935:	rcl    BYTE PTR [esi-0x55],1
  415938:	gs push ebx
  41593a:	push   es
  41593b:	xor    bh,cl
  41593d:	xchg   ebx,eax
  41593e:	dec    ebx
  41593f:	mov    eax,0xbfdfa539
  415944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415945:	inc    esp
  415946:	fdiv   DWORD PTR [ecx+0x4]
  415949:	jns    0x415908
  41594b:	pop    ebp
  41594c:	pop    edi
  41594d:	sbb    eax,0x83a1d819
  415952:	fs pop esi
  415954:	and    bl,BYTE PTR [eax-0x28]
  415957:	push   ebx
  415958:	jo     0x41596e
  41595a:	cmp    eax,0x255724cc
  41595f:	sahf   
  415960:	sbb    bl,BYTE PTR [ecx]
  415962:	mov    DWORD PTR [ebx],0x6211bb36
  415968:	jmp    0xba34:0xb829a7dd
  41596f:	icebp  
  415970:	out    dx,eax
  415971:	rcr    bl,cl
  415973:	xchg   edx,eax
  415974:	ret    
  415975:	or     esp,edx
  415977:	jb     0x4159f8
  415979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41597a:	gs mov dl,0x50
  41597d:	jno    0x415980
  41597f:	sar    DWORD PTR [esi],1
  415981:	inc    esp
  415982:	into   
  415983:	scas   eax,DWORD PTR es:[edi]
  415984:	popf   
  415985:	push   ebp
  415986:	mov    ds:0xd9d6f3e0,eax
  41598b:	pop    ss
  41598c:	push   cs
  41598d:	jno    0x415a0a
  41598f:	adc    BYTE PTR [ebx-0x4e7c5c0],bh
  415995:	popa   
  415996:	scas   eax,DWORD PTR es:[edi]
  415997:	ret    0xe2a
  41599a:	loopne 0x4159eb
  41599c:	adc    al,0x21
  41599e:	js     0x415995
  4159a0:	and    eax,0x8e47855d
  4159a5:	lock xchg ebp,eax
  4159a7:	inc    eax
  4159a8:	leave  
  4159a9:	xor    al,0xdc
  4159ab:	hlt    
  4159ac:	push   ds
  4159ad:	aad    0x3b
  4159af:	in     eax,0x45
  4159b1:	aas    
  4159b2:	jbe    0x41598f
  4159b4:	or     ch,0x9e
  4159b7:	pop    ecx
  4159b8:	mov    esp,0xe7fe41eb
  4159bd:	sbb    BYTE PTR [edx],0x64
  4159c0:	aas    
  4159c1:	adc    BYTE PTR ds:[ebx-0x4f044a65],0x34
  4159c9:	mov    al,ds:0xb0f937c
  4159ce:	nop
  4159cf:	retf   
  4159d0:	adc    BYTE PTR [edx-0x2f],0x99
  4159d4:	push   es
  4159d5:	pop    ecx
  4159d6:	mov    eax,DWORD PTR [ebx+0x755eb6fd]
  4159dc:	sub    bl,BYTE PTR [eax-0x15]
  4159df:	mov    edx,0xdafbaebe
  4159e4:	fadd   DWORD PTR [eax-0x458eb135]
  4159ea:	stc    
  4159eb:	cli    
  4159ec:	inc    edi
  4159ed:	inc    DWORD PTR [edx-0x47]
  4159f0:	or     eax,0x3481b17b
  4159f5:	jbe    0x4159b1
  4159f7:	and    eax,0x7d667a6d
  4159fd:	mov    bl,0x40
  4159ff:	push   es
  415a00:	(bad)  
  415a01:	dec    esp
  415a02:	mov    ch,0xd2
  415a04:	adc    al,0x8e
  415a06:	add    eax,0x1327c2ae
  415a0b:	mov    edi,0xf3e916cd
  415a10:	das    
  415a11:	test   dl,dh
  415a13:	stc    
  415a14:	or     BYTE PTR [ecx+0x3ad73cbe],0x99
  415a1b:	push   ds
  415a1c:	in     eax,dx
  415a1d:	ret    0xd81b
  415a20:	retf   0x62d2
  415a23:	push   es
  415a24:	pop    ebp
  415a25:	xor    DWORD PTR [ebp-0x2879c384],esi
  415a2b:	out    dx,eax
  415a2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a2d:	and    al,BYTE PTR [ebx-0x49]
  415a30:	ds test edx,0x34f990f7
  415a37:	sub    bh,cl
  415a39:	sbb    esi,DWORD PTR [edi-0xc87edc1]
  415a3f:	ss push ebx
  415a41:	push   ebx
  415a42:	fdivr  QWORD PTR [edx+0x640b571a]
  415a48:	mov    eax,0xe10bb785
  415a4d:	hlt    
  415a4e:	in     al,dx
  415a4f:	inc    edx
  415a50:	addr16 mov ah,0x30
  415a53:	pop    eax
  415a54:	dec    edi
  415a55:	jge    0x415ad1
  415a57:	imul   eax,DWORD PTR [edi],0xa6a5c922
  415a5d:	push   ecx
  415a5e:	cli    
  415a5f:	repz bound ebx,QWORD PTR [edx+0x6]
  415a63:	js     0x415aa4
  415a65:	(bad)  [esp+eax*8+0x5650cb9d]
  415a6c:	test   ebp,eax
  415a6e:	out    dx,al
  415a6f:	ins    BYTE PTR es:[edi],dx
  415a70:	es cmp ah,ah
  415a73:	jmp    0x83f2a3ea
  415a78:	inc    ebx
  415a79:	inc    ebp
  415a7a:	leave  
  415a7b:	or     eax,0xa8b6504d
  415a80:	fsubr  st,st(6)
  415a82:	bound  esp,QWORD PTR [ebp+0x405b9010]
  415a88:	pop    edi
  415a89:	inc    edx
  415a8a:	and    edi,DWORD PTR [edi-0x5cb59160]
  415a90:	xchg   BYTE PTR [eax+0x2ee4bb4b],dl
  415a96:	and    ch,bl
  415a98:	stos   BYTE PTR es:[edi],al
  415a99:	shl    BYTE PTR [esi+0x42],cl
  415a9c:	dec    esi
  415a9d:	pop    ebx
  415a9e:	inc    edx
  415a9f:	ins    DWORD PTR es:[edi],dx
  415aa0:	icebp  
  415aa1:	test   eax,0x67508263
  415aa6:	jmp    0x415a5b
  415aa8:	mul    BYTE PTR [edi+0x68]
  415aab:	in     al,0x5
  415aad:	retf   
  415aae:	push   ebp
  415aaf:	mov    edi,0xb6827de4
  415ab4:	out    0x92,al
  415ab6:	rcl    ah,cl
  415ab8:	ins    BYTE PTR es:[edi],dx
  415ab9:	or     eax,0x42932130
  415abe:	in     eax,dx
  415abf:	xor    al,BYTE PTR [edi-0x22]
  415ac2:	xor    al,0xd9
  415ac4:	(bad)  
  415ac5:	aad    0x33
  415ac7:	and    edi,DWORD PTR ds:0x50c6c72a
  415acd:	sub    al,0xe4
  415acf:	clc    
  415ad0:	les    ebx,FWORD PTR [ecx]
  415ad2:	ins    BYTE PTR es:[edi],dx
  415ad3:	jle    0x415b04
  415ad5:	dec    edi
  415ad6:	(bad)  
  415ad7:	mov    ds:0x24aa9f7f,al
  415adc:	jg     0x415ad2
  415ade:	dec    ebx
  415adf:	cmp    BYTE PTR [ecx-0x3f9cea0f],bl
  415ae5:	inc    ebp
  415ae6:	mov    WORD PTR [esi+0x26],cs
  415ae9:	or     DWORD PTR [ebx-0xf],esi
  415aec:	test   BYTE PTR [eax],al
  415aee:	not    BYTE PTR [ebx]
  415af0:	push   es
  415af1:	xchg   BYTE PTR ds:[edi+0xd],al
  415af5:	sbb    bl,BYTE PTR [eax*8-0x47f2d950]
  415afc:	xchg   esp,eax
  415afd:	in     al,dx
  415afe:	out    dx,al
  415aff:	mov    al,0xa8
  415b01:	lahf   
  415b02:	mov    DWORD PTR [edi+0x74],esp
  415b05:	int3   
  415b06:	sub    BYTE PTR [edx],dl
  415b08:	push   ds
  415b09:	or     eax,0xc44f77d4
  415b0e:	(bad)
  415b13:	inc    esp
  415b14:	sbb    dh,BYTE PTR [di-0x46]
  415b18:	sbb    eax,0xfb85f739
  415b1d:	xor    esp,DWORD PTR [ebp-0x7a6c35fb]
  415b23:	xor    bl,cl
  415b25:	mov    fs,WORD PTR [ebp-0x3b]
  415b28:	hlt    
  415b29:	mov    ds:0xe0592c6,eax
  415b2e:	out    0xf,al
  415b30:	repnz aas 
  415b32:	mov    esi,DWORD PTR [eax-0x718ade2e]
  415b38:	cmp    BYTE PTR [ecx-0x3c19c1ef],0x7d
  415b3f:	adc    ecx,DWORD PTR es:[esi]
  415b42:	inc    edx
  415b43:	call   0xa5a4:0xf4979e7
  415b4a:	sub    esi,DWORD PTR [esi-0x4b2f29a3]
  415b50:	mov    eax,ds:0x83acdbc0
  415b55:	mov    bl,al
  415b57:	dec    esi
  415b58:	std    
  415b59:	sahf   
  415b5a:	iret   
  415b5b:	xor    ecx,DWORD PTR [ecx-0xc]
  415b5e:	and    BYTE PTR [ebp-0x599110e9],0xa7
  415b65:	fidivr WORD PTR [esi-0x6e]
  415b68:	mov    edi,0xcf013448
  415b6d:	inc    DWORD PTR [edx-0x5a2ef7aa]
  415b73:	dec    ebx
  415b74:	loope  0x415b73
  415b76:	dec    ecx
  415b77:	xchg   edi,eax
  415b78:	jp     0x415b3a
  415b7a:	test   ah,0xd9
  415b7d:	and    eax,0x81c9a887
  415b82:	and    ah,BYTE PTR [eax]
  415b84:	pop    ebx
  415b85:	dec    edx
  415b86:	int    0x41
  415b88:	lea    ecx,[ecx]
  415b8a:	enter  0x24cf,0xd9
  415b8e:	stos   DWORD PTR es:[edi],eax
  415b8f:	(bad)  
  415b90:	stos   BYTE PTR es:[edi],al
  415b91:	adc    DWORD PTR [edi-0x532baff4],ecx
  415b97:	xchg   ebp,edx
  415b99:	inc    edi
  415b9a:	adc    ebx,DWORD PTR [edx+0x1c]
  415b9d:	sbb    eax,0x87c1c197
  415ba2:	cmp    BYTE PTR [eax+ebx*4+0x2],ch
  415ba6:	test   al,0x67
  415ba8:	outs   dx,BYTE PTR ds:[esi]
  415ba9:	jmp    0xcb6a:0x66e2312d
  415bb0:	mov    dh,0x3d
  415bb2:	rcl    DWORD PTR [eax+0x5385b71c],1
  415bb8:	sub    edi,DWORD PTR [edx+0x66]
  415bbb:	out    dx,eax
  415bbc:	mov    BYTE PTR [edx+0x4b52e85c],dh
  415bc2:	cmp    eax,ebp
  415bc4:	outs   dx,DWORD PTR ds:[esi]
  415bc5:	xor    al,0x76
  415bc7:	dec    esi
  415bc8:	not    BYTE PTR [edi+eiz*4]
  415bcb:	fistp  QWORD PTR [eax]
  415bcd:	xor    al,0x3
  415bcf:	xchg   BYTE PTR [eax+0x11],bl
  415bd2:	jp     0x415bd1
  415bd4:	cmp    edi,ecx
  415bd6:	inc    ebx
  415bd7:	fldenv [ebx-0x1696db8d]
  415bdd:	mov    al,ds:0x4853ce4b
  415be2:	fistp  WORD PTR [ebp+0x6e]
  415be5:	xchg   ebx,eax
  415be6:	sub    al,0x2a
  415be8:	sub    ebx,DWORD PTR [edi-0x71925932]
  415bee:	stos   DWORD PTR es:[edi],eax
  415bef:	scas   eax,DWORD PTR es:[edi]
  415bf0:	das    
  415bf1:	es icebp 
  415bf3:	ficomp DWORD PTR [edx-0x5c]
  415bf6:	retf   
  415bf7:	xchg   eax,ecx
  415bf9:	sub    al,0x98
  415bfb:	enter  0x3f8e,0x40
  415bff:	sbb    ebx,DWORD PTR [ebp-0x31]
  415c02:	mov    ebx,0xc23ab581
  415c07:	out    dx,eax
  415c08:	imul   edi,DWORD PTR [edx+eiz*1-0x9],0x12
  415c0d:	xchg   ecx,eax
  415c0e:	jno    0x415c4e
  415c10:	xchg   edx,eax
  415c11:	mov    edi,0xe93db687
  415c16:	gs adc eax,0xba10f3a4
  415c1c:	ds inc edx
  415c1e:	leave  
  415c1f:	in     eax,dx
  415c20:	int3   
  415c21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c22:	int    0xee
  415c24:	dec    esp
  415c25:	mov    ds:0x60bad04e,eax
  415c2a:	fistp  QWORD PTR [esi-0x79f66098]
  415c30:	iret   
  415c31:	xor    DWORD PTR [ebp+0x27],0xfffffff1
  415c35:	push   ebx
  415c36:	stc    
  415c37:	unpckhps xmm4,XMMWORD PTR [ebx]
  415c3a:	dec    ecx
  415c3b:	push   ecx
  415c3c:	(bad)  
  415c3d:	leave  
  415c3e:	je     0x415c3a
  415c40:	sub    al,0xe2
  415c42:	neg    DWORD PTR [esp+eax*4-0x5d697ef]
  415c49:	mov    es:0xe06f6483,eax
  415c4f:	push   ecx
  415c50:	dec    esi
  415c51:	(bad)  
  415c52:	sti    
  415c53:	gs jns 0x415c25
  415c56:	cs cdq 
  415c58:	ret    0x1ad2
  415c5b:	mov    eax,ds:0xfaea1e6c
  415c60:	pusha  
  415c61:	mov    bh,0xf2
  415c63:	push   edi
  415c64:	mov    dl,0x50
  415c66:	xor    ebx,DWORD PTR [edi-0x325bfaaf]
  415c6c:	imul   ebx,DWORD PTR es:[eax+0x26e255b5],0x60
  415c74:	pop    ss
  415c75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c76:	jnp    0x415c2d
  415c78:	xor    edx,ebp
  415c7a:	repz and edx,esp
  415c7d:	sub    DWORD PTR [edi-0x2b],ebp
  415c80:	pop    ebx
  415c81:	adc    al,0xc9
  415c83:	dec    edi
  415c84:	or     eax,0xbbcdf022
  415c89:	clc    
  415c8a:	out    dx,al
  415c8b:	jge    0x415c0d
  415c8d:	sub    DWORD PTR [ebp+0x64],eax
  415c90:	icebp  
  415c91:	int    0x2d
  415c93:	inc    edi
  415c94:	add    ebp,DWORD PTR [edi-0x33]
  415c97:	aad    0x4f
  415c99:	stos   DWORD PTR es:[di],eax
  415c9b:	xchg   esi,eax
  415c9c:	or     edi,DWORD PTR [edx+0x6]
  415c9f:	xchg   esi,eax
  415ca0:	ds (bad) 
  415ca2:	loope  0x415cfc
  415ca4:	or     al,0x71
  415ca6:	cmp    BYTE PTR [edx],ah
  415ca8:	jne    0x415c83
  415caa:	or     al,0xfb
  415cac:	sub    esi,DWORD PTR [ecx-0x1e]
  415caf:	cdq    
  415cb0:	shl    cl,1
  415cb2:	aas    
  415cb3:	inc    ecx
  415cb4:	add    DWORD PTR [esp+ebp*2+0x1a],ebp
  415cb8:	push   es
  415cb9:	xchg   ebx,eax
  415cba:	push   ebp
  415cbb:	mov    esi,0xd942571f
  415cc0:	mov    bl,bh
  415cc2:	inc    esp
  415cc3:	lahf   
  415cc4:	sbb    bl,BYTE PTR [ebp+0x25]
  415cc7:	loope  0x415c73
  415cc9:	lea    edx,[edx]
  415ccb:	call   0x2d44:0xc2c813b5
  415cd2:	stos   BYTE PTR es:[edi],al
  415cd3:	mov    edx,0x1a6215e
  415cd8:	shl    BYTE PTR [edx],1
  415cda:	scas   al,BYTE PTR es:[edi]
  415cdb:	mov    eax,0x2275a360
  415ce0:	inc    esi
  415ce1:	jle    0x415ca8
  415ce3:	cmp    al,0xc9
  415ce5:	jmp    0x415cca
  415ce7:	jb     0x415c9b
  415ce9:	xchg   edx,eax
  415cea:	(bad)
  415ced:	imul   dx,WORD PTR [esi+0x4c007807],0x63
  415cf5:	xchg   edi,eax
  415cf6:	lods   al,BYTE PTR ds:[esi]
  415cf7:	cmp    edi,DWORD PTR [esi-0x1c]
  415cfa:	pop    ebp
  415cfb:	and    BYTE PTR [edi-0x18edfcfc],ah
  415d01:	adc    bh,BYTE PTR [ebx+ebx*2+0x59]
  415d05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d06:	xchg   ebx,eax
  415d07:	in     eax,0x9a
  415d09:	xchg   ecx,eax
  415d0a:	add    dh,bh
  415d0c:	push   esp
  415d0d:	out    dx,eax
  415d0e:	rcl    DWORD PTR [esi-0x65],cl
  415d11:	(bad)  
  415d12:	jno    0x415cbd
  415d14:	mov    bh,0xef
  415d16:	mov    BYTE PTR [esi-0x1a],ch
  415d19:	fild   DWORD PTR [ecx-0x7a]
  415d1c:	retf   0x1e4b
  415d1f:	inc    edx
  415d20:	xor    esp,edi
  415d22:	pop    ebx
  415d23:	push   edx
  415d24:	ret    
  415d25:	fiadd  DWORD PTR [edx-0x4060eb11]
  415d2b:	fstp   QWORD PTR [eax]
  415d2d:	test   al,0xd7
  415d2f:	fldcw  WORD PTR [eax]
  415d31:	mov    esi,0x870a0e51
  415d36:	xchg   esi,eax
  415d37:	xchg   edi,eax
  415d38:	mov    ecx,0xe55ce4fd
  415d3d:	sar    DWORD PTR [ecx-0x5c9dfe82],cl
  415d43:	dec    ebx
  415d44:	mul    BYTE PTR [eax+0xb]
  415d47:	outs   dx,DWORD PTR ds:[esi]
  415d48:	or     esp,ebp
  415d4a:	mov    ebp,0x414369ec
  415d4f:	dec    eax
  415d50:	pop    edx
  415d51:	mov    ecx,0x1461827c
  415d56:	xor    DWORD PTR [eax],0xfffffff9
  415d59:	repnz les ebp,FWORD PTR [edx+eiz*2+0x2b]
  415d5e:	repnz jmp 0xf0d7:0x8fd8aa45
  415d66:	shl    BYTE PTR [ecx+0x24d4487c],1
  415d6c:	pop    ebx
  415d6d:	push   ss
  415d6e:	into   
  415d6f:	push   ss
  415d70:	jb     0x415d51
  415d72:	retf   
  415d73:	lods   al,BYTE PTR ds:[esi]
  415d74:	push   ebx
  415d75:	arpl   WORD PTR [esi+0x57],dx
  415d78:	push   es
  415d79:	mov    es,WORD PTR [edi-0x21]
  415d7c:	shl    BYTE PTR [ebx],0x36
  415d7f:	push   0xc5db2706
  415d84:	icebp  
  415d85:	mov    ds:0x885317e5,al
  415d8a:	sub    BYTE PTR [edi],dh
  415d8c:	xor    ecx,DWORD PTR [edi-0x379c9515]
  415d92:	cli    
  415d93:	pop    ds
  415d94:	call   0xf9c4:0xd488cd2b
  415d9b:	out    0xe,eax
  415d9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d9e:	lds    ecx,FWORD PTR [eax+0x43]
  415da1:	in     al,dx
  415da2:	fdivr  QWORD PTR [edx+0x3191059d]
  415da8:	mov    al,0xda
  415daa:	mov    dl,0xa3
  415dac:	stos   DWORD PTR es:[edi],eax
  415dad:	js     0x415d55
  415daf:	ins    BYTE PTR es:[edi],dx
  415db0:	shl    BYTE PTR [ebp+0x43],1
  415db3:	push   ecx
  415db4:	jnp    0x415df4
  415db6:	mov    bh,cl
  415db8:	addr16 pushf 
  415dba:	cmp    DWORD PTR [eax+0x8],ebx
  415dbd:	cdq    
  415dbe:	das    
  415dbf:	xchg   esp,eax
  415dc0:	mov    esi,0x8d81653d
  415dc5:	jno    0x415d97
  415dc7:	dec    ebp
  415dc8:	cmp    eax,0xb50fd31
  415dcd:	loope  0x415d93
  415dcf:	lahf   
  415dd0:	add    DWORD PTR [eax-0xe],esp
  415dd3:	xor    al,0xbf
  415dd5:	xchg   esp,eax
  415dd6:	pop    edx
  415dd7:	loop   0x415e51
  415dd9:	(bad)  
  415dda:	pop    es
  415ddb:	cmp    eax,0x9d1aa847
  415de0:	call   0xadf5:0x38036b39
  415de7:	loope  0x415e5c
  415de9:	sbb    edi,DWORD PTR [ebx*2-0x60c6b309]
  415df0:	sar    ebp,cl
  415df2:	pop    ss
  415df3:	aad    0x1
  415df5:	popa   
  415df6:	cs xor eax,0xd4db8935
  415dfc:	and    al,0x12
  415dfe:	test   eax,0xe2796e5e
  415e03:	fadd   st,st(5)
  415e05:	cmp    DWORD PTR [ebx+0x42],ebx
  415e08:	xor    eax,0x1d88f1a3
  415e0d:	push   0x37d524d6
  415e12:	pop    edx
  415e13:	adc    al,0x2a
  415e15:	jno    0x415e35
  415e17:	sub    eax,0x5858320a
  415e1c:	loopne 0x415d9f
  415e1e:	dec    ebx
  415e1f:	in     al,0xc
  415e21:	mov    esi,0x1e505e13
  415e26:	add    DWORD PTR [ebp-0x22fae037],edx
  415e2c:	mov    al,cl
  415e2e:	ror    DWORD PTR [ebx-0x2298888e],cl
  415e34:	cdq    
  415e35:	js     0x415dfa
  415e37:	dec    ebx
  415e38:	xchg   ebx,eax
  415e39:	xor    bh,al
  415e3b:	and    ebx,DWORD PTR [esp+edi*4+0x67da5583]
  415e42:	mov    ecx,0xeecb0b60
  415e47:	paddq  mm2,mm2
  415e4a:	bound  esp,QWORD PTR [ebx]
  415e4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e4d:	sbb    ebx,DWORD PTR [ecx-0x2]
  415e50:	xor    BYTE PTR [ebx],dl
  415e52:	mov    edx,0x4fd1294
  415e57:	fiadd  DWORD PTR [ebx]
  415e59:	cmp    al,0xbe
  415e5b:	in     al,dx
  415e5c:	aas    
  415e5d:	sbb    DWORD PTR [ebp+0x5e2c5c07],ebp
  415e63:	adc    edi,DWORD PTR [ecx+0x63]
  415e66:	das    
  415e67:	out    0xb1,al
  415e69:	data16 xor BYTE PTR gs:[esi+0x7d4bfe78],dl
  415e71:	inc    esp
  415e72:	aas    
  415e73:	and    edx,DWORD PTR [ebx+0x1523f3b1]
  415e79:	push   esp
  415e7a:	dec    edi
  415e7b:	repz into 
  415e7d:	jo     0x415e98
  415e7f:	pop    edi
  415e80:	and    DWORD PTR [ebx-0x20f5a010],edi
  415e86:	push   esi
  415e87:	and    edi,eax
  415e89:	sbb    ecx,eax
  415e8b:	dec    edi
  415e8c:	pop    esi
  415e8d:	lods   eax,DWORD PTR ds:[esi]
  415e8e:	jnp    0x415ee8
  415e90:	retf   
  415e91:	int3   
  415e92:	in     eax,0x62
  415e94:	popf   
  415e95:	shl    DWORD PTR [edi],1
  415e97:	xchg   edi,eax
  415e98:	or     esp,edx
  415e9a:	call   0x1889b698
  415e9f:	or     al,0xaa
  415ea1:	outs   dx,BYTE PTR ds:[esi]
  415ea2:	jmp    0x224c:0x2ffa0b2c
  415ea9:	stos   BYTE PTR es:[edi],al
  415eaa:	and    esp,DWORD PTR ds:0x96f2256f
  415eb0:	sub    DWORD PTR [edi+0x69],ecx
  415eb3:	mov    cl,0x13
  415eb5:	(bad)  
  415eb6:	fistp  DWORD PTR [ecx+0xede4287]
  415ebc:	add    esp,DWORD PTR [ebx-0x12de057c]
  415ec2:	xlat   BYTE PTR ds:[ebx]
  415ec3:	jnp    0x415e77
  415ec5:	add    eax,DWORD PTR [edx]
  415ec7:	mov    cl,0x3d
  415ec9:	retf   
  415eca:	sub    al,0xd4
  415ecc:	js     0x415ead
  415ece:	push   0xffffffd0
  415ed0:	(bad)  
  415ed1:	loop   0x415f03
  415ed3:	jge    0x415ec7
  415ed5:	loopne 0x415e79
  415ed7:	push   cs
  415ed8:	or     al,0xfb
  415eda:	iret   
  415edb:	pop    ds
  415edc:	dec    ecx
  415edd:	enter  0x8fdb,0x4f
  415ee1:	lods   eax,DWORD PTR ds:[esi]
  415ee2:	in     eax,0xf2
  415ee4:	pop    ecx
  415ee5:	adc    bl,ah
  415ee7:	outs   dx,DWORD PTR ds:[esi]
  415ee8:	ret    
  415ee9:	and    edi,DWORD PTR [ebp-0x21]
  415eec:	icebp  
  415eed:	(bad)  
  415eee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415eef:	stos   BYTE PTR es:[edi],al
  415ef0:	pop    ss
  415ef1:	dec    esi
  415ef2:	shl    DWORD PTR [ebx-0x595eabc3],1
  415ef8:	(bad)  
  415ef9:	std    
  415efa:	lock mov bl,0x3a
  415efd:	outs   dx,BYTE PTR ds:[esi]
  415efe:	adc    ax,0x9732
  415f02:	and    ecx,DWORD PTR [eax-0x57]
  415f05:	mov    ds:0xd5cada98,al
  415f0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f0b:	jge    0x415f65
  415f0d:	inc    ebp
  415f0e:	push   ss
  415f0f:	mov    dh,ah
  415f11:	repnz dec ebp
  415f13:	pop    es
  415f14:	sub    BYTE PTR [edi+0x7d5b56e],bl
  415f1a:	cmp    al,0xed
  415f1c:	shl    DWORD PTR [ebx-0xd2953e2],0x22
  415f23:	sub    cl,al
  415f25:	ins    BYTE PTR es:[edi],dx
  415f26:	aas    
  415f27:	test   al,0x28
  415f29:	data16 add al,0xc8
  415f2c:	xchg   DWORD PTR [ebp+0x5e],ebp
  415f2f:	and    al,BYTE PTR [esi+0xb]
  415f32:	push   esp
  415f33:	push   cs
  415f34:	(bad)  
  415f35:	jnp    0x415f2e
  415f37:	mov    ecx,0x7fbbd9f0
  415f3c:	outs   dx,DWORD PTR ds:[esi]
  415f3d:	pop    esi
  415f3e:	loope  0x415f39
  415f40:	push   cs
  415f41:	mov    al,0x3c
  415f43:	setae  BYTE PTR [esi-0x43]
  415f47:	xchg   cl,ah
  415f49:	mov    eax,ds:0xa6957082
  415f4e:	xchg   esi,eax
  415f4f:	fsubr  st(0),st
  415f51:	repz xor DWORD PTR [esi],ebp
  415f54:	sti    
  415f55:	add    BYTE PTR [bx+si+0x41d],cl
  415f5a:	cmp    ah,ah
  415f5c:	jp     0x415f3f
  415f5e:	inc    ecx
  415f5f:	test   BYTE PTR [edi-0x79],bh
  415f62:	aaa    
  415f63:	jnp    0x415f8d
  415f65:	div    bh
  415f67:	mov    ebx,0x5e51fa23
  415f6c:	fisub  DWORD PTR [edx]
  415f6e:	mov    eax,edi
  415f70:	xor    DWORD PTR ds:0x5513b445,0xffffffca
  415f77:	imul   edx,DWORD PTR [edx+ebp*1-0x3f2f1bf2],0xbcc5e8d2
  415f82:	fcmovbe st,st(1)
  415f84:	hlt    
  415f85:	cld    
  415f86:	push   ds
  415f87:	div    ebx
  415f89:	call   0xb24:0xd55fbe41
  415f90:	push   ds
  415f91:	jb     0x415f50
  415f93:	leave  
  415f94:	pop    ebp
  415f95:	mov    bh,0x6a
  415f97:	stos   BYTE PTR es:[edi],al
  415f98:	cmp    BYTE PTR [edx+edx*1],0x3b
  415f9c:	out    0x2b,al
  415f9e:	sbb    DWORD PTR [ebx-0x63f94f1d],edi
  415fa4:	and    al,0xe
  415fa6:	sub    edx,edx
  415fa8:	(bad)  
  415fa9:	std    
  415faa:	add    al,0x28
  415fac:	pop    esi
  415fad:	loop   0x415fec
  415faf:	pusha  
  415fb0:	pop    edi
  415fb1:	mov    esi,0x29e777f6
  415fb6:	mov    cl,BYTE PTR [ecx+0x14]
  415fb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fba:	cmp    esp,DWORD PTR [ebx+0x7d]
  415fbd:	mov    dh,bh
  415fbf:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  415fc1:	jmp    0x2e0d9f99
  415fc6:	aas    
  415fc7:	add    BYTE PTR [ebx-0x4c5d1e08],ch
  415fcd:	xor    eax,DWORD PTR [ebp+0x10]
  415fd0:	fs mov edx,ecx
  415fd3:	rcr    DWORD PTR [ebx-0x25813b6a],cl
  415fd9:	mul    BYTE PTR [ebp+0x2203314f]
  415fdf:	cmc    
  415fe0:	int3   
  415fe1:	sub    al,0x1
  415fe3:	or     DWORD PTR [esi+0x292498bb],ebx
  415fe9:	push   ecx
  415fea:	mov    edx,DWORD PTR [ebp-0x29]
  415fed:	sahf   
  415fee:	sbb    BYTE PTR [edx],0x56
  415ff1:	mov    al,0xa
  415ff3:	hlt    
  415ff4:	test   BYTE PTR [ebp-0x1e],bl
  415ff7:	jg     0x415f8c
  415ff9:	dec    esp
  415ffa:	sbb    edi,esp
  415ffc:	cmc    
  415ffd:	mov    esi,0x8e5dcea
  416002:	pop    esp
  416003:	(bad)  
  416004:	mov    cl,0xb9
  416006:	cdq    
  416007:	shl    BYTE PTR [edi],cl
  416009:	icebp  
  41600a:	mov    dl,0xc4
  41600c:	push   edx
  41600d:	fs stos DWORD PTR es:[edi],eax
  41600f:	iret   
  416010:	adc    eax,0x77511a32
  416015:	rcr    bh,1
  416017:	push   ds
  416018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416019:	jg     0x415f9b
  41601b:	addr16 sti 
  41601d:	push   ss
  41601e:	add    ebx,ebx
  416020:	sbb    BYTE PTR [ebp+0x5d6bdb7],0xa
  416027:	sahf   
  416028:	retf   
  416029:	fcomip st,st(5)
  41602b:	imul   esi,DWORD PTR [ebp+0x5e],0x2c5637fa
  416032:	mov    ch,0x18
  416034:	iret   
  416035:	gs push eax
  416037:	mov    ebx,0x6abcd604
  41603c:	fld    QWORD PTR [edi-0x419adaf5]
  416042:	lahf   
  416043:	cld    
  416044:	mov    WORD PTR [edi],?
  416046:	adc    eax,0x2af94790
  41604b:	xchg   ebx,eax
  41604c:	repnz push ds
  41604e:	ss inc edx
  416050:	sbb    esi,eax
  416052:	jbe    0x416081
  416054:	std    
  416055:	test   DWORD PTR ds:0xab06dd25,0xacb33f34
  41605f:	inc    edi
  416060:	or     DWORD PTR [eax-0x6f],ecx
  416063:	adc    DWORD PTR [eax-0x68209234],esi
  416069:	mov    dh,0xee
  41606b:	hlt    
  41606c:	mov    edi,0xbeff1951
  416071:	sub    BYTE PTR [esi-0x513ff413],dh
  416077:	stos   DWORD PTR es:[edi],eax
  416078:	cld    
  416079:	ja     0x416017
  41607b:	in     al,dx
  41607c:	cmp    DWORD PTR [eax],ecx
  41607e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41607f:	enter  0x95e7,0xce
  416083:	sub    bh,BYTE PTR ds:[edx-0x11995372]
  41608a:	xchg   esp,eax
  41608b:	mov    fs:0x89707b99,eax
  416091:	cmp    al,0x28
  416093:	lahf   
  416094:	popf   
  416095:	adc    BYTE PTR [ebx],dh
  416097:	inc    esi
  416098:	fistp  DWORD PTR [esp+ebx*4+0x45]
  41609c:	fdivr  DWORD PTR [ebp+0x7594a988]
  4160a2:	cli    
  4160a3:	call   0x6bbe1476
  4160a8:	sbb    ecx,esp
  4160aa:	sysexit 
  4160ac:	out    0xbc,eax
  4160ae:	mov    DWORD PTR [eax],0x2e96d293
  4160b4:	sub    ebx,edx
  4160b6:	clc    
  4160b7:	imul   esi,DWORD PTR ds:0xe33de8d5,0x5a
  4160be:	inc    edi
  4160bf:	jmp    0x18bb654
  4160c4:	pop    edi
  4160c5:	cld    
  4160c6:	and    al,0x16
  4160c8:	push   cs
  4160c9:	pop    es
  4160ca:	mov    ds:0x9c4865c5,al
  4160cf:	mov    bl,0xd7
  4160d1:	bnd jg 0x416092
  4160d4:	stc    
  4160d5:	inc    ebx
  4160d6:	mov    ecx,0x7604d1e3
  4160db:	aad    0xec
  4160dd:	test   al,0xa8
  4160df:	adc    BYTE PTR [eax+0x65d85884],ah
  4160e5:	es mov bl,0x95
  4160e8:	push   0xa6a8ee75
  4160ed:	fwait
  4160ee:	shr    DWORD PTR [edx+eax*8+0x29],cl
  4160f2:	push   0x61
  4160f4:	rcl    DWORD PTR [edi+0x51],0x5e
  4160f8:	cmp    eax,0x49273137
  4160fd:	cs mov bh,0xfb
  416100:	cvtdq2ps xmm1,XMMWORD PTR [edi+0x43]
  416104:	out    dx,eax
  416105:	js     0x41617c
  416107:	cs enter 0x9a34,0x34
  41610c:	mov    dl,BYTE PTR [ebx]
  41610e:	shl    DWORD PTR [edi-0x479bb32b],0x44
  416115:	lds    edi,FWORD PTR [edi+eax*1-0x3686efca]
  41611c:	lods   al,BYTE PTR ds:[esi]
  41611d:	jecxz  0x41613f
  41611f:	cs mov esp,0x2a82a0f6
  416125:	mov    ebp,0x2f5831a
  41612a:	loopne 0x41619f
  41612c:	jo     0x4160b1
  41612e:	out    dx,al
  41612f:	inc    esp
  416130:	aad    0xa0
  416132:	push   edx
  416133:	call   0xfd02f2e4
  416138:	rol    BYTE PTR [eax-0x2a],cl
  41613b:	pusha  
  41613c:	in     al,dx
  41613d:	and    bh,BYTE PTR [edx+0x47]
  416140:	sbb    BYTE PTR [edi-0x7a96d229],cl
  416146:	mov    al,ds:0xb8c52b1f
  41614b:	pop    edi
  41614c:	dec    ecx
  41614d:	fcomp  DWORD PTR [ebp+0x361cb36e]
  416153:	push   ebp
  416154:	popf   
  416155:	stc    
  416156:	out    dx,al
  416157:	ret    
  416158:	scas   eax,DWORD PTR es:[edi]
  416159:	mov    WORD PTR [esi+0xe],cs
  41615c:	gs aas 
  41615e:	push   ss
  41615f:	xor    ebp,DWORD PTR [esi]
  416161:	scas   eax,DWORD PTR es:[edi]
  416162:	repnz mov ds:0x701f9791,eax
  416168:	fist   WORD PTR [esi-0x3ea12f5]
  41616e:	fwait
  41616f:	xchg   dx,ax
  416171:	imul   edx,DWORD PTR [esi+0x28],0xd41da3b2
  416178:	sub    al,0x16
  41617a:	push   ecx
  41617b:	shl    DWORD PTR [edi-0x6e1f8ca5],0xbf
  416182:	push   edi
  416183:	push   esp
  416184:	inc    eax
  416185:	lods   al,BYTE PTR ds:[esi]
  416186:	adc    DWORD PTR [ebx+0x2e],ebx
  416189:	addr16 aaa 
  41618b:	jmp    0x4161ec
  41618d:	dec    ebp
  41618e:	bound  ebp,QWORD PTR [eax+0xb]
  416191:	mov    ds:0xe9f2b250,eax
  416196:	retf   
  416197:	cmp    al,0x56
  416199:	loope  0x41613f
  41619b:	fidiv  DWORD PTR ds:0x12a87eee
  4161a1:	sbb    al,0xd0
  4161a3:	fisubr WORD PTR [eax-0x58a4da43]
  4161a9:	mov    bh,0x27
  4161ab:	xchg   DWORD PTR [eax],ebx
  4161ad:	push   eax
  4161ae:	or     bl,BYTE PTR [edi]
  4161b0:	icebp  
  4161b1:	cld    
  4161b2:	xchg   ecx,eax
  4161b3:	test   ebp,ecx
  4161b5:	inc    cl
  4161b7:	jl     0x416167
  4161b9:	ret    
  4161ba:	es xchg edi,eax
  4161bc:	xchg   edx,eax
  4161bd:	sub    BYTE PTR [esp+eax*2-0x7e],0x78
  4161c2:	shl    BYTE PTR [eax],1
  4161c4:	lahf   
  4161c5:	dec    eax
  4161c6:	ss cmp al,0x5c
  4161c9:	hlt    
  4161ca:	mov    ebp,0xc47bc4bc
  4161cf:	pushf  
  4161d0:	sub    bl,BYTE PTR ds:0x7e4ebfed
  4161d6:	xchg   ebx,eax
  4161d7:	mov    al,0xdb
  4161d9:	and    ah,BYTE PTR [edx+0x19]
  4161dc:	lea    ebx,[ebx+0x5f6c5325]
  4161e2:	and    DWORD PTR [ecx+0x71],ebx
  4161e5:	or     dh,dh
  4161e7:	jmp    0x4161be
  4161e9:	daa    
  4161ea:	xchg   esp,eax
  4161eb:	xor    eax,0x46f3466d
  4161f0:	call   0x8f1eb2ca
  4161f5:	mov    ds:0xdf3b9569,al
  4161fa:	and    eax,0xff8160f4
  4161ff:	cwde   
  416200:	sbb    DWORD PTR [esi+0x42],ebp
  416203:	mov    ch,BYTE PTR [edi]
  416205:	push   edi
  416206:	xor    BYTE PTR [esi+edx*2-0x1b],0x9
  41620b:	xchg   dl,ah
  41620d:	xchg   ebp,eax
  41620e:	jp     0x416248
  416210:	pop    ds
  416211:	jl     0x4161c2
  416213:	jmp    0x4161ba
  416215:	xchg   DWORD PTR [edx-0x632087a1],ecx
  41621b:	mov    DWORD PTR [ebp+eiz*4-0x531e6ccd],edi
  416222:	lds    edi,FWORD PTR [ebp-0x72f0d11f]
  416228:	or     ebx,esi
  41622a:	mov    esi,0xe76af8e4
  41622f:	sbb    ah,BYTE PTR [esp+edx*1]
  416232:	stos   DWORD PTR es:[edi],eax
  416233:	bound  eax,QWORD PTR [ebp-0x2b8ec673]
  416239:	stos   DWORD PTR es:[edi],eax
  41623a:	mov    ebp,DWORD PTR [edi-0x5d]
  41623d:	inc    edi
  41623e:	xchg   ebp,eax
  41623f:	iret   
  416240:	(bad)  
  416241:	(bad)  
  416242:	jbe    0x416248
  416244:	mov    ah,0xef
  416246:	mov    ebp,DWORD PTR [ebx]
  416248:	and    bl,al
  41624a:	adc    edi,eax
  41624c:	pusha  
  41624d:	xchg   edx,eax
  41624e:	pop    es
  41624f:	jbe    0x416204
  416251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416252:	push   0x3e
  416254:	popa   
  416255:	inc    ebp
  416256:	inc    esi
  416257:	imul   esi,DWORD PTR [ebx+ecx*8+0x42801fb],0x65db0d3
  416262:	sub    DWORD PTR [eax],esp
  416264:	xor    al,0x51
  416266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416267:	popa   
  416268:	les    edi,FWORD PTR [esi-0x7f]
  41626b:	sbb    BYTE PTR [edx-0x7d],al
  41626e:	pop    edi
  41626f:	(bad)  
  416271:	jmp    DWORD PTR [esi+eiz*1-0x1dea6a3b]
  416278:	repnz cdq 
  41627a:	adc    esi,DWORD PTR [eax-0x1b]
  41627d:	fistp  WORD PTR [edx]
  41627f:	test   eax,0x9795167e
  416284:	loop   0x416206
  416286:	out    0x39,al
  416288:	call   0x88c83ccb
  41628d:	jmp    0xa00e:0x6fb1275f
  416294:	adc    al,0x3
  416296:	outs   dx,BYTE PTR ds:[esi]
  416297:	dec    esp
  416298:	mov    WORD PTR [ebp-0x58],dx
  41629c:	mov    edx,DWORD PTR [ebp+0x8]
  41629f:	mov    ebx,DWORD PTR [ebp-0x54]
  4162a2:	add    edx,0x64f8da
  4162a8:	or     edx,ebx
  4162aa:	mov    DWORD PTR [ebp-0x54],edx
  4162ad:	mov    edx,DWORD PTR [ebp+0x8]
  4162b0:	mov    ebx,DWORD PTR [ebp-0x50]
  4162b3:	add    edx,ecx
  4162b5:	xor    edx,ebx
  4162b7:	mov    DWORD PTR [ebp-0x50],edx
  4162ba:	mov    edx,DWORD PTR [ebp+0x8]
  4162bd:	mov    ebx,DWORD PTR [ebp-0x4c]
  4162c0:	add    edx,edi
  4162c2:	and    edx,ebx
  4162c4:	mov    DWORD PTR [ebp-0x4c],edx
  4162c7:	mov    edx,DWORD PTR [ebp+0x8]
  4162ca:	mov    ebx,DWORD PTR [ebp-0x48]
  4162cd:	lea    edx,[ebx+edx*1+0x241fc1f]
  4162d4:	mov    DWORD PTR [ebp-0x48],edx
  4162d7:	mov    edx,DWORD PTR [ebp+0x8]
  4162da:	mov    ebx,0xfa5e15e2
  4162df:	sub    ebx,edx
  4162e1:	add    ebx,DWORD PTR [ebp-0x44]
  4162e4:	mov    DWORD PTR [ebp-0x44],ebx
  4162e7:	mov    edx,DWORD PTR [ebp+0x8]
  4162ea:	xor    edx,eax
  4162ec:	add    edx,esi
  4162ee:	jne    0x413ef1
  4162f4:	mov    edx,DWORD PTR [ebp-0x14]
  4162f7:	mov    DWORD PTR [ebp+0x8],edx
  4162fa:	jmp    0x41636f
  4162ff:	mov    edx,DWORD PTR [ebp+0x8]
  416302:	mov    ebx,DWORD PTR [ebp-0x8]
  416305:	xor    edx,eax
  416307:	xor    ebx,eax
  416309:	sub    edx,ebx
  41630b:	sub    edx,esi
  41630d:	xor    edx,eax
  41630f:	mov    DWORD PTR [ebp+0x8],edx
  416312:	mov    edx,DWORD PTR [ebp+0x8]
  416315:	mov    ebx,DWORD PTR [ebp-0x58]
  416318:	add    edx,0x5708f8
  41631e:	imul   edx,ebx
  416321:	mov    DWORD PTR [ebp-0x58],edx
  416324:	mov    edx,DWORD PTR [ebp+0x8]
  416327:	mov    ebx,DWORD PTR [ebp-0x54]
  41632a:	add    edx,0x64f8da
  416330:	or     edx,ebx
  416332:	mov    DWORD PTR [ebp-0x54],edx
  416335:	mov    edx,DWORD PTR [ebp+0x8]
  416338:	mov    ebx,DWORD PTR [ebp-0x50]
  41633b:	add    edx,ecx
  41633d:	xor    edx,ebx
  41633f:	mov    DWORD PTR [ebp-0x50],edx
  416342:	mov    edx,DWORD PTR [ebp+0x8]
  416345:	mov    ebx,DWORD PTR [ebp-0x4c]
  416348:	add    edx,edi
  41634a:	and    edx,ebx
  41634c:	mov    DWORD PTR [ebp-0x4c],edx
  41634f:	mov    edx,DWORD PTR [ebp+0x8]
  416352:	mov    ebx,DWORD PTR [ebp-0x48]
  416355:	lea    edx,[ebx+edx*1+0x241fc1f]
  41635c:	mov    DWORD PTR [ebp-0x48],edx
  41635f:	mov    edx,DWORD PTR [ebp+0x8]
  416362:	mov    ebx,0xfa5e15e2
  416367:	sub    ebx,edx
  416369:	add    ebx,DWORD PTR [ebp-0x44]
  41636c:	mov    DWORD PTR [ebp-0x44],ebx
  41636f:	mov    edx,DWORD PTR [ebp+0x8]
  416372:	xor    edx,eax
  416374:	add    edx,esi
  416376:	jne    0x4162ff
  41637c:	mov    edx,DWORD PTR [ebp-0x8]
  41637f:	mov    ebx,DWORD PTR [ebp-0xc]
  416382:	jmp    0x418708
  416387:	nop
  416388:	test   BYTE PTR [ebp-0x643e8c3e],0xf4
  41638f:	add    DWORD PTR [ebp-0x5d],esp
  416392:	out    0x6c,eax
  416394:	jmp    DWORD PTR [edx+0x79575c1a]
  41639a:	jp     0x41639d
  41639c:	pop    edi
  41639d:	jp     0x416419
  41639f:	cdq    
  4163a0:	jo     0x416381
  4163a2:	pop    es
  4163a3:	jae    0x41641a
  4163a5:	cmp    al,0xc
  4163a7:	xchg   esp,eax
  4163a8:	in     al,0xae
  4163aa:	adc    bl,cl
  4163ac:	repz mov eax,ds:0xc8cd64da
  4163b2:	scas   al,BYTE PTR es:[edi]
  4163b3:	jb     0x41639f
  4163b5:	mov    ds:0x2a87045d,eax
  4163ba:	jp     0x416399
  4163bc:	pop    edx
  4163bd:	mov    ch,BYTE PTR [edi+0x75]
  4163c0:	jae    0x41635f
  4163c2:	or     al,0x74
  4163c4:	adc    eax,0xd68428a2
  4163c9:	pusha  
  4163ca:	test   DWORD PTR [ecx-0xe],edx
  4163cd:	in     eax,0xd
  4163cf:	sbb    BYTE PTR [ecx],ah
  4163d1:	mov    cl,0x87
  4163d3:	ret    
  4163d4:	pop    es
  4163d5:	lahf   
  4163d6:	push   ebx
  4163d7:	and    ebx,DWORD PTR [ebp+ebx*1+0x6d]
  4163db:	je     0x416361
  4163dd:	adc    eax,0xe2a3e5fa
  4163e2:	xchg   ecx,eax
  4163e3:	hlt    
  4163e4:	aas    
  4163e5:	je     0x416405
  4163e7:	jnp    0x41641c
  4163e9:	push   eax
  4163ea:	sub    eax,0x62a98390
  4163ef:	je     0x4163e8
  4163f1:	add    BYTE PTR [edi+0x74],bh
  4163f4:	ror    DWORD PTR [eax+0x30],1
  4163f7:	and    ah,BYTE PTR [ecx-0x35323529]
  4163fd:	xor    al,0x59
  4163ff:	sti    
  416400:	inc    ebp
  416401:	ja     0x41647a
  416403:	(bad)  
  416404:	fs mov ebx,0x2b2d4bf
  41640a:	test   eax,0xe45e14e7
  41640f:	adc    ch,BYTE PTR [ecx+0x2dae1d7d]
  416415:	stc    
  416416:	mov    dh,0x95
  416418:	std    
  416419:	ret    
  41641a:	mov    WORD PTR [edi],?
  41641c:	sar    BYTE PTR [edi+0x6d],cl
  41641f:	xchg   dh,cl
  416421:	fs dec edx
  416423:	xchg   ecx,eax
  416424:	add    al,0xf4
  416426:	xor    BYTE PTR [eax-0x32],al
  416429:	xchg   DWORD PTR [ebp+0x205fbfe0],ebx
  41642f:	add    al,0x93
  416431:	mov    cs,WORD PTR [ecx-0xdfbb68b]
  416437:	add    al,0xa9
  416439:	and    dl,BYTE PTR [edx]
  41643b:	into   
  41643c:	leave  
  41643d:	imul   eax,DWORD PTR [ebp+0xbe9ffb8],0x46
  416444:	cmp    BYTE PTR [ecx+ecx*8-0x44a22980],dl
  41644b:	or     al,0x66
  41644d:	pushf  
  41644e:	fmulp  st(1),st
  416450:	fnstsw WORD PTR [esi+0x40]
  416453:	and    ecx,DWORD PTR [ebx]
  416455:	js     0x4164d4
  416457:	neg    DWORD PTR [edi]
  416459:	adc    al,0x85
  41645b:	pop    esp
  41645c:	or     BYTE PTR [esp+eiz*8+0x7e80a358],bl
  416463:	inc    ebp
  416464:	sbb    BYTE PTR [ebx],0xda
  416467:	pop    edi
  416468:	stc    
  416469:	mov    BYTE PTR es:[ebp-0x1a],cl
  41646d:	(bad)  
  41646e:	add    WORD PTR [ecx-0x77],0x6e2d
  416474:	sub    dl,BYTE PTR [edi+0x4b803f18]
  41647a:	addr16 std 
  41647c:	scas   al,BYTE PTR es:[edi]
  41647d:	ret    
  41647e:	and    DWORD PTR [ebp-0x17],ebp
  416481:	sbb    al,0x71
  416483:	mov    esp,0x7eb000e8
  416488:	mov    ecx,0x939574d3
  41648d:	clc    
  41648e:	inc    esi
  41648f:	push   ecx
  416490:	dec    edi
  416491:	mov    ah,0xa3
  416493:	inc    ah
  416495:	jno    0x4164fc
  416497:	jp     0x4164af
  416499:	ds jne 0x416509
  41649c:	(bad)  
  41649d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41649e:	test   DWORD PTR es:[edx],edx
  4164a1:	repz sub al,0x11
  4164a4:	aam    0xe9
  4164a6:	xchg   ebx,eax
  4164a7:	xlat   BYTE PTR ds:[ebx]
  4164a8:	outs   dx,DWORD PTR ds:[esi]
  4164a9:	dec    ebx
  4164aa:	es push ebp
  4164ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164ad:	nop
  4164ae:	xor    BYTE PTR [edx+0x7e],0x8b
  4164b2:	call   0x8b53199f
  4164b7:	xor    BYTE PTR [eax-0x2b6fa2d0],al
  4164bd:	push   cs
  4164be:	adc    cl,BYTE PTR [edi+0x659eb1fb]
  4164c4:	xchg   esp,eax
  4164c5:	mov    dh,0xaf
  4164c7:	test   BYTE PTR [ebx+0x521b0d55],al
  4164cd:	dec    eax
  4164ce:	ja     0x416459
  4164d0:	aaa    
  4164d1:	mov    WORD PTR ds:0x76a0ec17,?
  4164d7:	sbb    al,0xd7
  4164d9:	popa   
  4164da:	mov    ah,0xf5
  4164dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164dd:	xchg   ecx,eax
  4164de:	sub    BYTE PTR [ebp-0x1e],0x70
  4164e2:	mov    ebp,0x84706829
  4164e7:	mov    bh,0x6c
  4164e9:	jns    0x416538
  4164eb:	push   ss
  4164ec:	test   BYTE PTR [edi+eax*2-0x227f5c31],0xbc
  4164f4:	mov    eax,0xc2388d06
  4164f9:	jg     0x4164c0
  4164fb:	push   edi
  4164fc:	mov    ebx,edi
  4164fe:	jmp    DWORD PTR [ebx+0x37]
  416501:	add    eax,0xa07abc60
  416506:	hlt    
  416507:	pop    ebx
  416508:	mov    edx,0xa7f0e5e7
  41650d:	inc    edx
  41650e:	sti    
  41650f:	loop   0x4164c5
  416511:	cdq    
  416512:	mov    edx,0x955b584a
  416517:	iret   
  416518:	sub    ebx,DWORD PTR [esi-0x1c]
  41651b:	add    al,0xad
  41651d:	or     DWORD PTR [esi+0x17d0260c],esi
  416523:	js     0x41656b
  416525:	push   ecx
  416526:	or     bh,BYTE PTR [eax-0x783217bd]
  41652c:	ins    BYTE PTR es:[edi],dx
  41652d:	fyl2x  
  41652f:	popf   
  416530:	mov    dh,0xf7
  416532:	mov    eax,0x6a69015c
  416537:	sbb    esi,DWORD PTR ds:0x6ed8821
  41653d:	leave  
  41653e:	mov    edx,edx
  416540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416541:	out    0x3b,eax
  416543:	pop    ecx
  416544:	sbb    dl,dh
  416546:	xchg   edi,eax
  416547:	xor    BYTE PTR [ecx-0x53e7ef42],ch
  41654d:	push   esi
  41654e:	cli    
  41654f:	sub    eax,0xedbfe3ee
  416554:	mov    edx,0x248aca23
  416559:	mov    esi,0x393b6fd8
  41655e:	cdq    
  41655f:	les    ecx,FWORD PTR [eax]
  416561:	test   al,0x46
  416563:	mov    bh,0x52
  416565:	push   ds
  416566:	js     0x4164ef
  416568:	or     ebp,DWORD PTR ds:0x30c309b4
  41656e:	js     0x416566
  416570:	aas    
  416571:	cli    
  416572:	pop    esp
  416573:	xchg   esi,eax
  416574:	pop    esi
  416575:	(bad)  
  416576:	lds    edi,FWORD PTR [ebx+ebp*8+0x2ddf6337]
  41657d:	fdivrp st(3),st
  41657f:	les    ebp,FWORD PTR [edi-0x1]
  416582:	jo     0x416553
  416584:	in     al,0x82
  416586:	add    eax,0x4c0b40b3
  41658b:	popa   
  41658c:	push   eax
  41658d:	xchg   esi,eax
  41658e:	adc    BYTE PTR [edi+0x386f9b72],bh
  416594:	retf   
  416595:	jo     0x4165c1
  416597:	aas    
  416598:	dec    esi
  416599:	test   al,0xbd
  41659b:	test   ebx,edi
  41659d:	(bad)  
  41659f:	and    edx,edi
  4165a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165a2:	mov    ch,0x96
  4165a4:	addr16 rcl ah,cl
  4165a7:	sbb    edx,DWORD PTR [edx-0x273985f2]
  4165ad:	jmp    0xa2ad:0x919014fb
  4165b4:	dec    edi
  4165b5:	adc    ebp,DWORD PTR ss:[edx-0x1]
  4165b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165ba:	or     bh,BYTE PTR [esi]
  4165bc:	jg     0x416618
  4165be:	hlt    
  4165bf:	add    DWORD PTR [ecx+0x63],edx
  4165c2:	jmp    0x416574
  4165c4:	jne    0x4165b6
  4165c6:	adc    eax,0x9c378892
  4165cb:	sti    
  4165cc:	scas   al,BYTE PTR es:[edi]
  4165cd:	jecxz  0x41655f
  4165cf:	nop
  4165d0:	or     al,0xfd
  4165d2:	jbe    0x416613
  4165d4:	push   ds
  4165d5:	fmul   DWORD PTR [ebx+0x6c]
  4165d8:	adc    edi,DWORD PTR [eax+esi*2+0x6a]
  4165dc:	fmul   DWORD PTR [ecx-0x1f95f7ed]
  4165e2:	mov    al,0x4e
  4165e4:	out    0x79,eax
  4165e6:	cmp    al,0xe8
  4165e8:	xchg   edi,eax
  4165e9:	div    BYTE PTR [esi+0x27]
  4165ec:	xchg   ebx,eax
  4165ed:	mov    eax,ds:0x12c64f96
  4165f2:	cmp    BYTE PTR [ebp-0x6d],dh
  4165f5:	out    dx,al
  4165f6:	popa   
  4165f7:	aas    
  4165f8:	xchg   ebx,eax
  4165f9:	jo     0x416667
  4165fb:	xor    ebp,DWORD PTR [eax-0x3c]
  4165fe:	and    eax,0xd86ab4eb
  416603:	fisttp QWORD PTR [esp+eiz*8]
  416606:	adc    ebp,edx
  416608:	mov    ds:0x3012f8d6,eax
  41660d:	clc    
  41660e:	ss dec ecx
  416610:	adc    cl,BYTE PTR [esi]
  416612:	cmc    
  416613:	cmp    ah,ch
  416615:	cmp    edx,DWORD PTR [eax]
  416617:	outs   dx,BYTE PTR ds:[esi]
  416618:	outs   dx,DWORD PTR ds:[esi]
  416619:	daa    
  41661a:	ret    0xd8a7
  41661d:	xlat   BYTE PTR ds:[ebx]
  41661e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41661f:	cli    
  416620:	add    al,0x5e
  416622:	mov    bl,0x94
  416624:	or     ah,BYTE PTR [esi-0x5a]
  416627:	xchg   ebx,eax
  416628:	jnp    0x4165eb
  41662a:	fldcw  WORD PTR [esp+ecx*1+0x4b]
  41662e:	inc    ebx
  41662f:	xor    al,0x55
  416631:	xchg   edx,eax
  416632:	repz dec eax
  416634:	or     eax,0xf5b55d1f
  416639:	xchg   ebp,eax
  41663a:	xchg   BYTE PTR [esi-0x45d8ac20],bh
  416640:	add    esi,DWORD PTR [edx-0x72]
  416643:	out    0x76,al
  416645:	adc    cl,BYTE PTR gs:[esi+0x3b]
  416649:	jge    0x416602
  41664b:	xchg   esp,eax
  41664c:	xor    al,0x1c
  41664e:	inc    esi
  41664f:	push   0xcf5de6d1
  416654:	mov    dh,0xc2
  416656:	(bad)  
  416657:	stos   BYTE PTR es:[edi],al
  416658:	mov    ebp,es
  41665a:	cmp    al,0x3f
  41665c:	jecxz  0x4166dd
  41665e:	mov    BYTE PTR [ebp-0x36d2ec8c],dl
  416664:	clc    
  416665:	retf   
  416666:	je     0x4166a5
  416668:	rcl    BYTE PTR [ebx],cl
  41666a:	adc    cl,BYTE PTR [edx]
  41666c:	out    dx,eax
  41666d:	push   es
  41666e:	ins    DWORD PTR es:[edi],dx
  41666f:	sub    al,BYTE PTR [esi]
  416671:	pop    edx
  416672:	or     BYTE PTR [ecx],dh
  416674:	and    ebx,edx
  416676:	pmaddwd mm2,QWORD PTR [esi-0x432018e]
  41667d:	mov    dh,0x48
  41667f:	xchg   ecx,eax
  416680:	rcl    BYTE PTR [edi+0x20898807],0xae
  416687:	inc    ecx
  416688:	outs   dx,BYTE PTR ds:[esi]
  416689:	or     eax,0xa059e6ba
  41668e:	jno    0x4166b5
  416690:	sbb    bh,BYTE PTR [edx]
  416692:	sub    bh,dl
  416694:	push   cs
  416695:	adc    BYTE PTR [ecx+0x0],dh
  416698:	jl     0x4166e7
  41669a:	jecxz  0x4166ba
  41669c:	jmp    0x1be98b4a
  4166a1:	stos   DWORD PTR es:[edi],eax
  4166a2:	int    0x81
  4166a4:	rcr    bh,cl
  4166a6:	xor    edx,edi
  4166a8:	mov    DWORD PTR [edx+esi*2],edx
  4166ab:	fcom   QWORD PTR [edi+0x3cf5c867]
  4166b1:	popa   
  4166b2:	outs   dx,DWORD PTR ds:[esi]
  4166b3:	mov    cs,WORD PTR [edx+0x15]
  4166b6:	jnp    0x4166a5
  4166b8:	jecxz  0x4166e3
  4166ba:	xor    ch,BYTE PTR ds:0x8e1f115
  4166c0:	push   ecx
  4166c1:	sub    bl,BYTE PTR [ebx+0x2f]
  4166c4:	dec    esi
  4166c5:	out    dx,eax
  4166c6:	mov    gs,WORD PTR [eax+ecx*1]
  4166c9:	pop    ds
  4166ca:	shr    esp,1
  4166cc:	mov    ecx,0x14d5b4ee
  4166d1:	clc    
  4166d2:	mov    BYTE PTR [eax],cl
  4166d4:	iret   
  4166d5:	mov    ds:0x7aa88f06,al
  4166da:	rcl    cl,cl
  4166dc:	sti    
  4166dd:	aam    0x64
  4166df:	cmp    BYTE PTR [esi+0xe],ah
  4166e2:	pop    ss
  4166e3:	sbb    eax,edi
  4166e5:	and    al,BYTE PTR [edx-0x5]
  4166e8:	sub    bh,BYTE PTR [eax+0x718aa6f3]
  4166ee:	sahf   
  4166ef:	test   dh,ch
  4166f1:	ja     0x416680
  4166f3:	push   ds
  4166f4:	jp     0x41676b
  4166f6:	jns    0x416708
  4166f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166f9:	add    DWORD PTR [esi],eax
  4166fb:	sub    edx,DWORD PTR [edi]
  4166fd:	dec    BYTE PTR [edx]
  4166ff:	cmp    eax,0x770aac01
  416704:	(bad)  
  416705:	cwde   
  416706:	repz push cs
  416708:	pop    edi
  416709:	mov    bl,0x91
  41670b:	imul   edx,eax,0x44
  41670e:	arpl   WORD PTR [ebx-0x2ca0abda],cx
  416714:	sub    bl,ch
  416716:	shl    DWORD PTR [ebx-0x436aa4c4],1
  41671c:	and    edi,DWORD PTR [ebx-0x49]
  41671f:	jb     0x4166bf
  416721:	psubusw mm4,QWORD PTR [ecx-0x63]
  416725:	ins    BYTE PTR es:[edi],dx
  416726:	or     cl,bl
  416728:	or     esi,DWORD PTR [ebp-0x61]
  41672b:	lahf   
  41672c:	pop    eax
  41672d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41672e:	inc    BYTE PTR [ebx]
  416730:	int3   
  416731:	xlat   BYTE PTR ds:[ebx]
  416732:	or     eax,0x22b653e2
  416737:	(bad)  
  416738:	inc    edi
  416739:	in     al,0x7c
  41673b:	pop    ds
  41673c:	pop    ebx
  41673d:	aad    0x53
  41673f:	fidiv  DWORD PTR [esi+0x7abf38ac]
  416745:	pop    esp
  416746:	xor    DWORD PTR [ecx-0xcabbecd],ebx
  41674c:	jo     0x4167a3
  41674e:	js     0x41676a
  416750:	rcl    DWORD PTR [esi],1
  416752:	mov    edi,ebp
  416754:	and    BYTE PTR [ebp-0x1a],bl
  416757:	add    cl,0xed
  41675a:	fsubr  QWORD PTR [eax+0x71]
  41675d:	mov    cl,0x38
  41675f:	mov    ebp,fs
  416761:	or     al,0x49
  416763:	jmp    0xe4e43f38
  416768:	or     eax,0xc3ae9b43
  41676d:	add    BYTE PTR [edx-0x6a],dl
  416770:	std    
  416771:	push   0xffffffc7
  416773:	out    0xde,al
  416775:	test   BYTE PTR [ebp-0x35],bl
  416778:	sub    al,0x7e
  41677a:	jne    0x41674c
  41677c:	ins    BYTE PTR es:[edi],dx
  41677d:	dec    edx
  41677e:	and    ebx,ecx
  416780:	shl    BYTE PTR [esp+ebp*1+0x267c9c24],1
  416787:	shl    esp,cl
  416789:	pop    edi
  41678a:	es aas 
  41678c:	cmc    
  41678d:	cmp    eax,0x188cbc88
  416792:	pop    ecx
  416793:	jne    0x416797
  416795:	imul   edx,esi,0x9f83fa58
  41679b:	jae    0x4167a1
  41679d:	sbb    eax,0xffffff83
  4167a0:	cmp    ebp,0xffffffc8
  4167a3:	sahf   
  4167a4:	mov    dh,0x9f
  4167a6:	or     al,0x86
  4167a8:	das    
  4167a9:	retf   
  4167aa:	xor    DWORD PTR [esi],esp
  4167ac:	cmc    
  4167ad:	push   ds
  4167ae:	and    dl,BYTE PTR [ebp-0x54657d56]
  4167b4:	cmc    
  4167b5:	shr    BYTE PTR [ebx-0x78],cl
  4167b8:	out    0xe9,eax
  4167ba:	retf   
  4167bb:	das    
  4167bc:	fs pop edi
  4167be:	lds    edx,FWORD PTR [edi-0x30]
  4167c1:	inc    esp
  4167c2:	xchg   ebp,eax
  4167c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167c5:	test   ch,dl
  4167c7:	cmp    dh,BYTE PTR [ebx+edx*2-0x11513cb3]
  4167ce:	adc    cl,BYTE PTR [edi+0x2c63275f]
  4167d4:	jp     0x416790
  4167d6:	inc    ebx
  4167d8:	push   ebp
  4167d9:	adc    al,0x96
  4167db:	mov    ah,0x1a
  4167dd:	push   ss
  4167de:	inc    esi
  4167df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167e0:	push   es
  4167e1:	cli    
  4167e2:	sbb    BYTE PTR ds:0xe6c2854,bh
  4167e8:	xchg   edi,eax
  4167e9:	jnp    0x4167ac
  4167eb:	retf   
  4167ec:	push   ebx
  4167ed:	repz cs loop 0x416783
  4167f1:	fisttp DWORD PTR [edx]
  4167f3:	mov    dh,0xff
  4167f5:	adc    BYTE PTR [esi],dl
  4167f7:	shl    DWORD PTR [ecx+0x16],0x3f
  4167fb:	xor    eax,ecx
  4167fd:	xchg   edx,eax
  4167fe:	cmp    al,0x2b
  416800:	(bad)  
  416801:	jmp    0x4167c6
  416803:	push   esi
  416804:	gs pop es
  416806:	js     0x4167a5
  416808:	shl    BYTE PTR [ecx+ebp*1],0xb8
  41680c:	loop   0x4167bb
  41680e:	add    dl,cl
  416810:	push   edx
  416811:	into   
  416812:	jmp    0x4167b1
  416814:	jb     0x4167fe
  416816:	enter  0x1276,0x89
  41681a:	pop    ebx
  41681b:	aas    
  41681c:	cmc    
  41681d:	(bad)  
  41681e:	cld    
  41681f:	xor    bh,BYTE PTR [ecx]
  416821:	mov    ah,0x6
  416823:	inc    ecx
  416824:	aam    0xc7
  416826:	popf   
  416827:	xor    eax,0x467015c6
  41682c:	outs   dx,DWORD PTR ds:[esi]
  41682d:	js     0x41684c
  41682f:	dec    ebp
  416830:	imul   edx,DWORD PTR [eax],0xffffff9a
  416833:	push   ecx
  416834:	fnsave [edi-0x2a38d29f]
  41683a:	mov    DWORD PTR [ecx-0x53],ebp
  41683d:	pushf  
  41683e:	pop    ebx
  41683f:	mov    WORD PTR [edi+esi*2+0x1d],es
  416843:	add    bl,0xef
  416846:	in     eax,0x70
  416848:	cmp    al,0x6d
  41684a:	or     eax,0xa65d0583
  41684f:	lock pop ebp
  416851:	cli    
  416852:	shl    DWORD PTR [ecx+0x7f],cl
  416855:	fnstsw WORD PTR [eax+0x5d]
  416858:	sub    edi,ebp
  41685a:	and    DWORD PTR es:[esi+0x10966cb6],edx
  416861:	rol    ebx,0xfb
  416864:	adc    eax,0x86462782
  416869:	pop    esp
  41686a:	jmp    0x4168eb
  41686c:	add    BYTE PTR [edx],al
  41686e:	xchg   esp,eax
  41686f:	push   ecx
  416870:	mov    eax,ds:0x3f80f35d
  416875:	and    eax,0xee9653aa
  41687a:	faddp  st(7),st
  41687c:	sbb    eax,0x508b6636
  416881:	mov    eax,ds:0x240849b4
  416886:	out    dx,al
  416887:	push   0x77
  416889:	scas   eax,DWORD PTR es:[edi]
  41688a:	jmp    0x416830
  41688c:	aas    
  41688d:	or     esp,DWORD PTR [edi-0x187f67b]
  416893:	xor    bl,BYTE PTR [edx]
  416895:	inc    ecx
  416896:	std    
  416897:	cwde   
  416898:	scas   al,BYTE PTR es:[edi]
  416899:	xchg   edx,eax
  41689a:	bsr    eax,DWORD PTR [ecx]
  41689d:	mov    al,0x6
  41689f:	mov    bl,0xd1
  4168a1:	scas   al,BYTE PTR es:[edi]
  4168a2:	mov    ebx,DWORD PTR [esi+0x306dabb5]
  4168a8:	push   ebx
  4168a9:	push   edx
  4168aa:	sbb    dl,BYTE PTR [esi]
  4168ac:	xchg   ebp,eax
  4168ad:	xor    edi,DWORD PTR [edi]
  4168af:	(bad)  
  4168b0:	jne    0x41683b
  4168b2:	pushf  
  4168b3:	inc    eax
  4168b4:	mov    esp,0xb3e5c3d9
  4168b9:	mov    ebp,0x7bb3f1db
  4168be:	push   0x122ebc8b
  4168c3:	ss push ds
  4168c5:	mul    cl
  4168c7:	xor    DWORD PTR [edi],edi
  4168c9:	stos   DWORD PTR es:[edi],eax
  4168ca:	int    0x35
  4168cc:	xor    ecx,DWORD PTR [edi*8+0x22617fbd]
  4168d3:	and    DWORD PTR [ebx+0x157407b6],ebp
  4168d9:	pop    ebp
  4168da:	es pop eax
  4168dc:	(bad)  
  4168dd:	jle    0x416873
  4168df:	clc    
  4168e0:	repz call 0x148f:0x60cee536
  4168e8:	lea    edx,[esi]
  4168ea:	mov    WORD PTR [ebp-0x61],ds
  4168ed:	xor    BYTE PTR [edi+0x26b7ddc3],ch
  4168f3:	jmp    0xccc4:0x6009b27f
  4168fa:	or     al,0x10
  4168fc:	mov    esp,ecx
  4168fe:	fwait
  4168ff:	cdq    
  416900:	jle    0x41690f
  416902:	pop    esi
  416903:	dec    edi
  416904:	fimul  WORD PTR [edi-0x35]
  416907:	test   DWORD PTR [eax+0x1a],ebp
  41690a:	lods   al,BYTE PTR ds:[esi]
  41690b:	inc    edx
  41690c:	(bad)  
  41690e:	retf   
  41690f:	imul   ebp,DWORD PTR [ebp+0x26],0x6b1d2738
  416916:	xchg   edx,eax
  416917:	(bad)  
  416918:	nop
  416919:	loop   0x41698e
  41691b:	sub    BYTE PTR [esi+0x20],0xef
  41691f:	ror    DWORD PTR [ebp+0x793f46db],0xee
  416926:	add    BYTE PTR [edi+0x7f],ch
  416929:	call   ebp
  41692b:	aad    0xd3
  41692d:	jp     0x41699a
  41692f:	add    eax,eax
  416931:	xchg   esi,eax
  416932:	add    DWORD PTR [esp+eax*8+0x9],eax
  416936:	popf   
  416937:	adc    dh,BYTE PTR [ecx]
  416939:	repz xchg esi,eax
  41693b:	jb     0x41695c
  41693d:	xchg   ebp,eax
  41693e:	xchg   edx,eax
  41693f:	test   ah,0xa
  416942:	and    DWORD PTR [edx],edi
  416944:	or     eax,0x471f1947
  416949:	fld    QWORD PTR [edx-0x55]
  41694c:	add    BYTE PTR [ebx],0xcb
  41694f:	xor    ebx,DWORD PTR [ecx]
  416951:	in     al,0x22
  416953:	jbe    0x4168e8
  416955:	xor    DWORD PTR [ebx],ebx
  416957:	cs mov cl,0xeb
  41695a:	lods   al,BYTE PTR ds:[esi]
  41695b:	hlt    
  41695c:	fild   QWORD PTR ds:0x3a753610
  416962:	xor    edi,DWORD PTR [edi+0x3b]
  416965:	and    BYTE PTR [esi-0x5d],cl
  416968:	pop    esi
  416969:	(bad)  
  41696a:	out    dx,eax
  41696b:	mov    esi,0xa932b32c
  416970:	aad    0x4e
  416972:	dec    eax
  416973:	fs jnp 0x4169b1
  416976:	fs (bad) 
  416978:	(bad)  
  416979:	aam    0x86
  41697b:	outs   dx,DWORD PTR ds:[esi]
  41697c:	sub    DWORD PTR [edi+0x65],ebx
  41697f:	mov    cs,WORD PTR [edx+edi*1-0x22]
  416983:	add    al,0x42
  416985:	and    esp,DWORD PTR ds:0x9842be0b
  41698b:	lea    ecx,[ebx+ebx*1]
  41698e:	pop    ecx
  41698f:	mov    esi,0xc6a97f4e
  416994:	(bad)  
  416997:	lock je 0x416955
  41699a:	ret    0x3d96
  41699d:	ror    DWORD PTR [ebx+edi*1+0x2a],0xc
  4169a2:	add    bh,dl
  4169a4:	mov    eax,DWORD PTR [ecx+0x6e]
  4169a7:	and    ebx,ebx
  4169a9:	shl    al,1
  4169ab:	xchg   ecx,eax
  4169ac:	mov    dl,ah
  4169ae:	cmp    eax,0x5136d217
  4169b3:	jle    0x416979
  4169b5:	push   esp
  4169b6:	and    al,ah
  4169b8:	iret   
  4169b9:	inc    edi
  4169ba:	cwde   
  4169bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169bc:	(bad)  
  4169be:	ss jmp 0x951680a
  4169c4:	outs   dx,DWORD PTR gs:[esi]
  4169c6:	cmp    eax,0x1e4c71cf
  4169cb:	push   ds
  4169cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169cd:	fld    QWORD PTR [ebx-0x5f]
  4169d0:	sbb    DWORD PTR [edx],edx
  4169d2:	pop    esp
  4169d3:	inc    ebp
  4169d4:	mov    ebx,0x59c1bba4
  4169d9:	mov    ch,0x0
  4169db:	push   ss
  4169dc:	repnz cmp BYTE PTR [edi+edi*4],dh
  4169e0:	jae    0x416a5c
  4169e2:	mov    al,ds:0xfd18fab3
  4169e7:	sub    bh,bh
  4169e9:	or     al,0x99
  4169eb:	cmp    eax,0x2d642480
  4169f0:	jne    0x416a18
  4169f2:	(bad)  
  4169f3:	fmul   QWORD PTR [edi]
  4169f5:	data16 mov al,ds:0xe899a8a5
  4169fb:	stc    
  4169fc:	mov    al,0x26
  4169fe:	cmp    dh,BYTE PTR [ebx]
  416a00:	ret    
  416a01:	jg     0x4169c0
  416a03:	cmp    edi,DWORD PTR [ecx+0x71f2db17]
  416a09:	pop    esi
  416a0a:	or     DWORD PTR [ebp-0x18],ebx
  416a0d:	jno    0x4169e3
  416a0f:	mov    cl,0x2d
  416a11:	stos   BYTE PTR es:[edi],al
  416a12:	add    eax,esp
  416a14:	lods   al,BYTE PTR ds:[esi]
  416a15:	xlat   BYTE PTR ds:[ebx]
  416a16:	out    dx,al
  416a17:	hlt    
  416a18:	(bad)  
  416a19:	sub    eax,0x911d3e91
  416a1e:	rep stos BYTE PTR es:[edi],al
  416a20:	jae    0x4169e7
  416a22:	fwait
  416a23:	sub    eax,0xe082bbb1
  416a28:	xchg   edx,eax
  416a29:	sbb    BYTE PTR [edx-0x48],cl
  416a2c:	lea    eax,[esi-0x719ed0c4]
  416a32:	xchg   edi,eax
  416a33:	add    BYTE PTR [ebp+ebx*8-0x4b],ch
  416a37:	scas   al,BYTE PTR es:[edi]
  416a38:	or     cl,BYTE PTR gs:[esi]
  416a3b:	imul   eax,DWORD PTR [esi],0xc8efa7f4
  416a41:	(bad)  
  416a42:	or     BYTE PTR es:[edi],dl
  416a45:	rcl    DWORD PTR [eax+0x62073659],1
  416a4b:	ret    
  416a4c:	addr16 push edi
  416a4e:	dec    esp
  416a4f:	mov    al,ds:0xedb1ef11
  416a54:	push   0xffffffd4
  416a56:	loope  0x416a86
  416a58:	inc    edi
  416a59:	adc    al,0xd8
  416a5b:	ins    DWORD PTR es:[edi],dx
  416a5c:	pop    ebp
  416a5d:	iret   
  416a5e:	loope  0x416a1c
  416a60:	mov    ds:0x955b632e,al
  416a65:	xor    al,ch
  416a67:	gs addr16 pop ebx
  416a6a:	aas    
  416a6b:	sub    BYTE PTR [ebx+esi*8-0x758def35],al
  416a72:	adc    eax,0x8a76d154
  416a77:	xchg   BYTE PTR [edi+0x62],dl
  416a7a:	sbb    ah,BYTE PTR [ebp+0x3a]
  416a7d:	lea    edx,[ecx-0x6e]
  416a80:	leave  
  416a81:	or     DWORD PTR [ecx-0x3f67615f],edi
  416a87:	call   0x89ea8f83
  416a8c:	cmp    ebx,DWORD PTR [esi+esi*1]
  416a8f:	pop    ss
  416a90:	popf   
  416a91:	add    BYTE PTR [ebp+0x7d],ch
  416a94:	int    0x2c
  416a96:	arpl   ax,bp
  416a98:	scas   al,BYTE PTR es:[edi]
  416a99:	fsubr  QWORD PTR [esp+esi*1+0x7eb82a88]
  416aa0:	test   DWORD PTR [eax-0x6f],eax
  416aa3:	mov    cl,0xbc
  416aa5:	out    dx,eax
  416aa6:	je     0x416ada
  416aa8:	cdq    
  416aa9:	call   0xa925:0xb8e2a9c0
  416ab0:	mov    eax,0xb84bb03a
  416ab5:	fst    QWORD PTR [ebx]
  416ab7:	test   eax,0x6732574a
  416abc:	and    ch,0x22
  416abf:	or     BYTE PTR [esi+0x787d684b],ch
  416ac5:	outs   dx,DWORD PTR ds:[esi]
  416ac6:	or     ebx,DWORD PTR [eax-0x4c]
  416ac9:	jns    0x416ae6
  416acb:	and    edx,ebp
  416acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ace:	push   ds
  416acf:	mov    ah,0xc6
  416ad1:	mov    bh,0x56
  416ad3:	psubq  mm2,QWORD PTR [esi]
  416ad6:	inc    ebp
  416ad7:	mov    eax,ds:0x7eb8157d
  416adc:	xor    esp,ebx
  416ade:	jl     0x416aac
  416ae0:	xchg   ebp,eax
  416ae1:	or     DWORD PTR [edx-0x213be9f0],edi
  416ae7:	arpl   WORD PTR [ebp-0x2842df0b],ax
  416aed:	iret   
  416aee:	inc    ecx
  416aef:	inc    esi
  416af0:	lods   eax,DWORD PTR ds:[esi]
  416af1:	(bad)  
  416af2:	sar    BYTE PTR [ebp+eax*4-0x749e940b],cl
  416af9:	add    ebx,ebp
  416afb:	dec    ebx
  416afc:	mov    ebp,0xd9135d95
  416b01:	jae    0x416b18
  416b03:	mov    bh,BYTE PTR [eax+edi*8+0xf]
  416b07:	jbe    0x416af4
  416b09:	inc    edx
  416b0a:	dec    ebx
  416b0b:	test   esi,esp
  416b0d:	xchg   BYTE PTR [edi-0x1a],bl
  416b10:	mov    ch,0xa6
  416b12:	stos   BYTE PTR es:[edi],al
  416b13:	sbb    eax,0xe2afed06
  416b18:	add    ah,dl
  416b1a:	push   esp
  416b1b:	add    ebp,esi
  416b1d:	sbb    esi,DWORD PTR [edx+0x43dce4e0]
  416b23:	add    ah,BYTE PTR [edx+0x6e]
  416b26:	jb     0x416aab
  416b28:	and    esi,ebp
  416b2a:	push   edi
  416b2b:	sbb    ebp,ebp
  416b2d:	(bad)  
  416b2e:	data16 lock add BYTE PTR [edi+edx*1+0x20],bh
  416b34:	in     eax,0x62
  416b36:	sbb    esi,DWORD PTR [esi-0x65]
  416b39:	mov    ds,WORD PTR ds:[eax+0x4e]
  416b3d:	or     DWORD PTR [esi],esp
  416b3f:	jae    0x416af6
  416b41:	inc    ecx
  416b42:	ja     0x416af2
  416b44:	(bad)  
  416b45:	leave  
  416b46:	jl     0x416b67
  416b48:	xor    al,0xa1
  416b4a:	jl     0x416b62
  416b4c:	cli    
  416b4d:	jmp    0x416b5c
  416b4f:	xchg   ecx,eax
  416b50:	and    eax,0x6c1f2a63
  416b55:	out    0x4a,eax
  416b57:	ja     0x416ba5
  416b59:	and    BYTE PTR [esp+eax*2-0x54b732f5],0x19
  416b61:	jmp    0x416bbf
  416b63:	cmp    cl,BYTE PTR [eax+0x2a12d04d]
  416b69:	push   es
  416b6a:	lock cmp BYTE PTR [edi],bh
  416b6d:	pop    ecx
  416b6e:	mov    DWORD PTR [eax-0x4f],ecx
  416b71:	mov    fs,WORD PTR [edx+0x197ccfdb]
  416b77:	jge    0x416bb4
  416b79:	cmp    al,0x71
  416b7b:	sub    al,0xa4
  416b7d:	mov    eax,0xc0fe7a7
  416b82:	dec    eax
  416b83:	jl     0x416c00
  416b85:	inc    ecx
  416b86:	(bad)  
  416b87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b88:	add    BYTE PTR [ebx+ebp*4+0x1340e6bc],ah
  416b8f:	adc    eax,0x4ecd19da
  416b94:	or     DWORD PTR [eax],edx
  416b96:	mov    esi,0xbc227b6c
  416b9b:	out    dx,al
  416b9c:	xchg   ebx,eax
  416b9d:	cmp    edx,DWORD PTR [ecx]
  416b9f:	(bad)  
  416ba0:	data16 sub al,0x3b
  416ba3:	xor    al,0x90
  416ba5:	retf   0x5f2d
  416ba8:	and    eax,DWORD PTR [esi+ebx*2+0x4e36b5db]
  416baf:	xor    DWORD PTR [ebp+0x78],esi
  416bb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bb3:	shl    DWORD PTR [esi-0x5c],0xe6
  416bb7:	ret    0xb8b
  416bba:	add    ch,BYTE PTR [ebp-0x1e162820]
  416bc0:	les    ebx,FWORD PTR [esi-0x60]
  416bc3:	(bad)  
  416bc4:	std    
  416bc5:	pop    esi
  416bc6:	out    dx,al
  416bc7:	sub    BYTE PTR [edi],0xda
  416bca:	add    al,ch
  416bcc:	or     esi,edi
  416bce:	mov    ah,0x5b
  416bd0:	xchg   edx,eax
  416bd1:	pop    ss
  416bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bd3:	call   0x1764:0x50ecac94
  416bda:	add    BYTE PTR [ebp+0xd45c4f3],cl
  416be0:	push   esi
  416be1:	repnz push esp
  416be3:	(bad)  
  416be4:	jns    0x416c65
  416be6:	call   0xbb73:0x1da2dfc0
  416bed:	and    DWORD PTR [ecx+edi*2],ebp
  416bf0:	sti    
  416bf1:	adc    edx,ebp
  416bf3:	jmp    0x416bcf
  416bf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bf6:	sbb    DWORD PTR [ecx-0x3f],esp
  416bf9:	xchg   ecx,eax
  416bfa:	and    eax,0xffffffa2
  416bfd:	pop    esi
  416bfe:	pop    edx
  416bff:	jecxz  0x416bb8
  416c01:	jno    0x416ba0
  416c03:	mov    bl,0x96
  416c05:	shl    DWORD PTR [ecx],cl
  416c07:	adc    dh,BYTE PTR [edx]
  416c09:	in     eax,dx
  416c0a:	cmc    
  416c0b:	jecxz  0x416c66
  416c0d:	outs   dx,DWORD PTR ds:[esi]
  416c0e:	mov    BYTE PTR [ebx+0x10f21f9c],dh
  416c14:	test   DWORD PTR [ecx-0x1b],ebp
  416c17:	stos   DWORD PTR es:[edi],eax
  416c18:	mov    DWORD PTR [ebx],edi
  416c1a:	and    edx,DWORD PTR [edi]
  416c1c:	mov    ebx,0xb7340288
  416c21:	inc    edi
  416c22:	clc    
  416c23:	les    eax,FWORD PTR [edx+0x358762a5]
  416c29:	or     al,BYTE PTR [edi+0x1e907ca7]
  416c2f:	or     eax,0x2a9ee02e
  416c34:	cld    
  416c35:	pop    es
  416c36:	jp     0x416c6e
  416c38:	out    dx,eax
  416c39:	jmp    0xb30d:0x374f0936
  416c40:	inc    edi
  416c41:	fild   QWORD PTR [ebx-0x8]
  416c44:	mov    ah,0x33
  416c46:	or     eax,0x6c19dc18
  416c4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c4c:	stos   DWORD PTR es:[edi],eax
  416c4d:	das    
  416c4e:	repz pop esp
  416c50:	stos   BYTE PTR es:[edi],al
  416c51:	addr16 mov cl,0x9b
  416c54:	and    al,0xbd
  416c56:	pop    ebx
  416c57:	xor    DWORD PTR [eax+0x25],0x7e45c0ee
  416c5e:	inc    ebp
  416c5f:	inc    esp
  416c60:	jae    0x416cb7
  416c62:	sbb    BYTE PTR [eax+0x7ade4f42],0xd3
  416c69:	icebp  
  416c6a:	jmp    0x816a:0x558c03a1
  416c71:	(bad)  
  416c72:	dec    ebp
  416c73:	out    dx,al
  416c74:	xchg   DWORD PTR [ebx],edx
  416c76:	repz xchg ebp,eax
  416c78:	ins    BYTE PTR es:[edi],dx
  416c79:	out    dx,eax
  416c7a:	repz adc al,0x63
  416c7d:	sub    DWORD PTR [ebx+0x18],ebp
  416c80:	rcl    ch,1
  416c82:	fldl2e 
  416c84:	mov    edx,0x361a5321
  416c89:	and    DWORD PTR [ebx],edi
  416c8b:	aas    
  416c8c:	mov    dh,0xec
  416c8e:	cs popa 
  416c90:	pop    ss
  416c91:	int3   
  416c92:	jae    0x416c21
  416c94:	pusha  
  416c95:	cwde   
  416c96:	mov    ebp,0x28618e7f
  416c9b:	push   eax
  416c9c:	mov    ecx,0xf6e63346
  416ca1:	xchg   ecx,eax
  416ca2:	aad    0x1e
  416ca4:	arpl   WORD PTR [esi+0x62],di
  416ca7:	cmp    ch,ah
  416ca9:	pop    esp
  416caa:	js     0x416cbc
  416cac:	mov    ebp,0x74d16aef
  416cb1:	pop    ebp
  416cb2:	in     al,0x58
  416cb4:	lods   al,BYTE PTR ds:[esi]
  416cb5:	gs dec edx
  416cb7:	pop    esp
  416cb8:	or     esi,DWORD PTR [ebp+0x187fa2e7]
  416cbe:	dec    esp
  416cbf:	imul   ecx,DWORD PTR [esi],0xffffffb1
  416cc2:	aad    0x5e
  416cc4:	cs aad 0xe2
  416cc7:	cli    
  416cc8:	inc    ebp
  416cc9:	inc    ecx
  416cca:	cld    
  416ccb:	inc    ecx
  416ccc:	jae    0x416d13
  416cce:	push   ss
  416ccf:	sbb    DWORD PTR [edi],0x3cc28eb
  416cd5:	(bad)  
  416cd7:	(bad)  
  416cd9:	inc    esi
  416cda:	xor    al,0x59
  416cdc:	loop   0x416ce9
  416cde:	and    DWORD PTR [esi-0x5721b468],esi
  416ce4:	cmp    bh,BYTE PTR [esi]
  416ce6:	cmp    BYTE PTR [eax],dl
  416ce8:	dec    ebp
  416ce9:	adc    al,0x77
  416ceb:	mov    esp,esi
  416ced:	aad    0xfc
  416cef:	adc    edx,ebx
  416cf1:	in     al,dx
  416cf2:	push   0xcdea40ae
  416cf7:	int    0x8f
  416cf9:	iret   
  416cfa:	mov    dh,0xba
  416cfc:	add    BYTE PTR [ebx-0x75],al
  416cff:	test   BYTE PTR [eax-0x299f4ff],bl
  416d05:	in     eax,dx
  416d06:	dec    esp
  416d07:	test   BYTE PTR [edx-0xb],0x54
  416d0b:	rcl    bl,0x88
  416d0e:	ret    
  416d0f:	mov    ebp,0x505e3a2c
  416d14:	mov    WORD PTR [ebp+0x47],?
  416d17:	imul   eax,edi,0x5e
  416d1a:	mov    ds:0x1c42a0d9,eax
  416d1f:	jbe    0x416cdc
  416d21:	hlt    
  416d22:	cmp    DWORD PTR [edx+ebx*8-0x61],ebx
  416d26:	ror    BYTE PTR [edi],0xc7
  416d29:	neg    BYTE PTR [ebx]
  416d2b:	jne    0x416d7f
  416d2d:	sub    BYTE PTR [ebp-0x3e],al
  416d30:	cmc    
  416d31:	pop    edi
  416d32:	lds    esp,FWORD PTR [eax-0x6833ac2c]
  416d38:	test   al,0xf8
  416d3a:	loope  0x416d88
  416d3c:	retf   
  416d3d:	repz mov al,0x94
  416d40:	jno    0x416d21
  416d42:	shl    dl,0xe1
  416d45:	bound  ebx,QWORD PTR [ebx+0x105baa7e]
  416d4b:	inc    ebp
  416d4c:	lea    eax,[esi-0x3b]
  416d4f:	mov    edi,0x3286cf94
  416d54:	inc    eax
  416d55:	ret    0x27a5
  416d58:	stc    
  416d59:	mov    eax,0x42c75e70
  416d5e:	cdq    
  416d5f:	push   esi
  416d60:	mov    eax,ds:0x35232b65
  416d65:	mov    cl,0xa0
  416d67:	pop    es
  416d68:	(bad)  
  416d6a:	(bad)  
  416d6b:	nop
  416d6c:	out    dx,al
  416d6d:	mov    ecx,0xccbf1e82
  416d72:	xchg   cl,al
  416d74:	aaa    
  416d75:	lods   eax,DWORD PTR ds:[esi]
  416d76:	in     eax,0x5d
  416d78:	aaa    
  416d79:	mov    ?,WORD PTR [esi]
  416d7b:	push   ebx
  416d7c:	mov    edx,0x7869206c
  416d81:	ja     0x416d69
  416d83:	sub    DWORD PTR [ebp+0xfc5ba41],esi
  416d89:	cmp    dh,ah
  416d8b:	and    al,0xad
  416d8d:	adc    al,0xd2
  416d8f:	icebp  
  416d90:	sub    edx,ebp
  416d92:	add    BYTE PTR [esp+esi*1],bl
  416d95:	in     al,0xdb
  416d97:	adc    esp,DWORD PTR [edi+0x32bad528]
  416d9d:	jno    0x416d43
  416d9f:	ja     0x416d6d
  416da1:	mov    ebx,ss
  416da3:	stos   DWORD PTR es:[edi],eax
  416da4:	cwde   
  416da5:	jmp    0x1f5f:0xabbab808
  416dac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dad:	call   0x79646537
  416db2:	sbb    eax,0x37fc71df
  416db7:	call   0x8b01:0x738f03dd
  416dbe:	jg     0x416dee
  416dc0:	fst    DWORD PTR [eax+0x238be420]
  416dc6:	inc    esp
  416dc7:	outs   dx,BYTE PTR ds:[esi]
  416dc8:	fisubr DWORD PTR [edi+0x71cdcc18]
  416dce:	inc    ebp
  416dcf:	sti    
  416dd0:	rol    DWORD PTR ds:0x98938198,0xe5
  416dd7:	not    BYTE PTR [ebp-0x4f]
  416dda:	daa    
  416ddb:	mov    bh,0xd
  416ddd:	fld    DWORD PTR [ecx+ecx*1]
  416de0:	jns    0x416daf
  416de2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416de3:	in     eax,dx
  416de4:	xchg   DWORD PTR [ebx],eax
  416de6:	lods   al,BYTE PTR ds:[esi]
  416de7:	shr    DWORD PTR [edi+esi*2+0x2f94cf59],cl
  416dee:	dec    esp
  416def:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416df0:	fs or  al,0x2c
  416df3:	or     al,0xba
  416df5:	push   edx
  416df6:	xchg   BYTE PTR [esi+0x25],bl
  416df9:	cmp    eax,0xb1bf1673
  416dfe:	loop   0x416e66
  416e00:	out    dx,al
  416e01:	mov    esp,0xac738833
  416e06:	mov    esi,0xd92330cd
  416e0b:	les    ebx,FWORD PTR [esi-0x1bf270a1]
  416e11:	xor    ch,cl
  416e13:	pop    esi
  416e14:	xchg   ebp,eax
  416e15:	aam    0x20
  416e17:	pop    eax
  416e18:	jmp    0xfcf8e4ba
  416e1d:	lahf   
  416e1e:	retf   0x8c8b
  416e21:	mov    ecx,0xcdb0ea8c
  416e26:	aad    0x5
  416e28:	jmp    DWORD PTR [ecx+edi*2-0x3d077de7]
  416e2f:	cld    
  416e30:	jne    0x416e54
  416e32:	popa   
  416e33:	pop    ebp
  416e34:	out    0xc0,eax
  416e36:	mov    cl,0x13
  416e38:	es dec edi
  416e3a:	or     BYTE PTR [edi+eiz*8],ch
  416e3d:	mov    eax,0x2a2ffb0a
  416e42:	jns    0x416eba
  416e44:	mov    ds:0x897647a,eax
  416e49:	push   cs
  416e4a:	mov    ebp,0x48d43a47
  416e4f:	ja     0x416e01
  416e51:	sub    eax,0x227abe1c
  416e56:	popf   
  416e57:	lea    esi,[edi]
  416e59:	dec    esi
  416e5a:	or     eax,0x75743fad
  416e5f:	dec    esp
  416e60:	xor    dl,BYTE PTR [ecx+0x67]
  416e63:	leave  
  416e64:	ja     0x416e04
  416e66:	pop    es
  416e67:	mov    ch,0x8
  416e69:	dec    esi
  416e6a:	xor    ch,BYTE PTR [ebp-0x56b436d]
  416e70:	dec    esp
  416e71:	dec    esi
  416e72:	mov    BYTE PTR [edi],0x96
  416e75:	xchg   esi,eax
  416e76:	mov    dl,BYTE PTR [eax]
  416e78:	ins    BYTE PTR es:[edi],dx
  416e79:	in     al,dx
  416e7a:	repnz pop edi
  416e7c:	dec    ebp
  416e7d:	std    
  416e7e:	inc    edi
  416e7f:	add    bl,bl
  416e81:	pop    esp
  416e82:	shl    ebx,1
  416e84:	lea    edx,[ebp+0x3bcc2507]
  416e8a:	out    0xb9,al
  416e8c:	js     0x416edc
  416e8e:	in     eax,0x3d
  416e90:	arpl   di,bx
  416e92:	ror    ah,0x48
  416e95:	dec    esi
  416e96:	and    BYTE PTR [edi+ebp*4-0x62],bh
  416e9a:	dec    edx
  416e9b:	xchg   esi,eax
  416e9c:	repz sbb ch,BYTE PTR gs:[esi-0x133d1139]
  416ea4:	jno    0x416e27
  416ea6:	loopne 0x416e9e
  416ea8:	lds    eax,FWORD PTR [ecx-0x72fdb7d]
  416eae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416eaf:	and    ebp,DWORD PTR [ecx+0x70]
  416eb2:	jge    0x416f29
  416eb4:	sahf   
  416eb5:	dec    eax
  416eb6:	or     dh,BYTE PTR [esi-0x4b]
  416eb9:	retf   0xa806
  416ebc:	inc    esi
  416ebd:	aam    0x85
  416ebf:	(bad)  
  416ec0:	rcl    DWORD PTR [ebx],1
  416ec2:	jmp    0xb5264012
  416ec7:	or     BYTE PTR ds:0x7167cbcd,dl
  416ecd:	sbb    al,0x73
  416ecf:	jae    0x416e87
  416ed1:	clc    
  416ed2:	inc    eax
  416ed3:	push   ebp
  416ed4:	xchg   ebp,eax
  416ed5:	mov    ds:0x894d7170,al
  416eda:	xlat   BYTE PTR ds:[ebx]
  416edb:	adc    eax,esp
  416edd:	sub    eax,0x94ec475d
  416ee2:	sbb    edi,DWORD PTR [ecx+0x2c96c14e]
  416ee8:	add    ecx,ebp
  416eea:	xor    esi,esi
  416eec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416eed:	and    BYTE PTR [edx+0x7b749a12],dh
  416ef3:	add    esi,edx
  416ef5:	mov    ch,0x76
  416ef7:	fwait
  416ef8:	jmp    0x416f2a
  416efa:	imul   edx,DWORD PTR [edx+0x28297d54],0xc1475c9d
  416f04:	(bad)  
  416f05:	adc    BYTE PTR [ecx-0x4dcaa107],cl
  416f0b:	in     al,0x53
  416f0d:	shl    BYTE PTR [ebx+0x20],cl
  416f10:	pop    edi
  416f11:	sar    BYTE PTR [ebx+0x33624bb9],1
  416f17:	movd   mm6,DWORD PTR [esi]
  416f1a:	jnp    0x416f56
  416f1c:	jmp    0x2a8a0de4
  416f21:	sub    bh,BYTE PTR es:[edi+esi*2+0x3a]
  416f26:	(bad)  
  416f28:	add    dl,cl
  416f2a:	sub    al,0xdd
  416f2c:	outs   dx,DWORD PTR ds:[esi]
  416f2d:	adc    eax,0x2e385890
  416f32:	not    DWORD PTR [ebx+0x3465e799]
  416f38:	dec    eax
  416f39:	call   0x38a9:0x4c642ba0
  416f40:	mov    bx,0x17d9
  416f44:	addr16 xchg ebx,eax
  416f46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f47:	rol    BYTE PTR [ebx+0x1a],0xa4
  416f4b:	out    0xe9,eax
  416f4d:	nop
  416f4e:	pop    edi
  416f4f:	(bad)  
  416f51:	lock inc esp
  416f53:	mov    ch,BYTE PTR [ebp+0x2095940d]
  416f59:	test   esi,eax
  416f5b:	clc    
  416f5c:	or     ecx,DWORD PTR [edi-0x42]
  416f5f:	xchg   DWORD PTR [edi],ebp
  416f61:	xchg   DWORD PTR [ebx+0x3fbd3006],esi
  416f67:	mov    ebx,DWORD PTR [edi]
  416f69:	inc    edi
  416f6a:	inc    esi
  416f6b:	push   edi
  416f6c:	rcl    ah,cl
  416f6e:	(bad)  
  416f6f:	pop    ebp
  416f70:	mov    bh,0xda
  416f72:	push   esp
  416f73:	lahf   
  416f74:	xor    DWORD PTR [ebx],eax
  416f76:	ins    BYTE PTR es:[edi],dx
  416f77:	dec    BYTE PTR [esi+0x4fb1e3bc]
  416f7d:	clc    
  416f7e:	int3   
  416f7f:	retf   
  416f80:	test   al,0xea
  416f82:	(bad)  
  416f83:	mov    bh,0x9
  416f85:	gs stos DWORD PTR es:[edi],eax
  416f87:	xchg   DWORD PTR [esi],esi
  416f89:	xchg   ecx,eax
  416f8a:	or     al,dl
  416f8c:	push   esp
  416f8d:	xchg   edx,eax
  416f8e:	push   edi
  416f8f:	idiv   DWORD PTR [esi+0x67]
  416f92:	xchg   esp,eax
  416f93:	nop
  416f94:	mov    esp,0x9163b67e
  416f99:	ja     0x416ff4
  416f9b:	sbb    DWORD PTR [edx-0x70a19307],edx
  416fa1:	out    dx,eax
  416fa2:	push   cs
  416fa3:	sub    BYTE PTR [edx],dl
  416fa5:	dec    ebx
  416fa6:	stos   BYTE PTR es:[edi],al
  416fa7:	clc    
  416fa8:	adc    DWORD PTR gs:[eax-0x25],ebp
  416fac:	(bad)  
  416fae:	mov    ecx,0xe7c81734
  416fb3:	sbb    cl,ch
  416fb5:	mov    BYTE PTR [ecx],dh
  416fb7:	dec    ebx
  416fb8:	call   0xf9bf:0x7cdd719b
  416fbf:	popf   
  416fc0:	sub    edi,DWORD PTR es:[edx]
  416fc3:	fcomp  DWORD PTR [ebx+0x4e]
  416fc6:	push   ecx
  416fc7:	push   ecx
  416fc8:	aas    
  416fc9:	pushf  
  416fca:	sub    ah,BYTE PTR [eax+eiz*2-0x1d]
  416fce:	fstp   TBYTE PTR [eax-0x5b0aca99]
  416fd4:	scas   al,BYTE PTR es:[edi]
  416fd5:	dec    esp
  416fd6:	data16 aam 0x15
  416fd9:	jg     0x416f6e
  416fdb:	jecxz  0x417009
  416fdd:	sbb    edx,edi
  416fdf:	and    al,0xd1
  416fe1:	pop    ebp
  416fe2:	sub    eax,0x40e2c216
  416fe7:	bnd jmp 0x65f05c3d
  416fed:	test   eax,0xf3d4f670
  416ff2:	jb     0x417010
  416ff4:	test   al,0x74
  416ff6:	xor    al,BYTE PTR [ecx+eiz*4+0x77]
  416ffa:	outs   dx,DWORD PTR ds:[esi]
  416ffb:	fsubrp st(3),st
  416ffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ffe:	or     al,0xe2
  417000:	mov    edx,0x50f80443
  417005:	stos   DWORD PTR es:[edi],eax
  417006:	iret   
  417007:	es rol bl,0xb3
  41700b:	retf   
  41700c:	sub    ebx,DWORD PTR [edi]
  41700e:	add    BYTE PTR [edi+0x2177a2c4],al
  417014:	addr16 jmp 0x417068
  417017:	pop    ss
  417018:	sbb    eax,0x1405cbe0
  41701d:	in     al,dx
  41701e:	jle    0x416fb4
  417020:	ds inc edi
  417022:	jo     0x41700f
  417024:	std    
  417025:	dec    esi
  417026:	rcr    DWORD PTR [eax],0xa2
  417029:	arpl   dx,di
  41702b:	lea    ebp,[ecx-0x6f865cfb]
  417031:	push   ecx
  417032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417033:	mov    bh,BYTE PTR cs:[edi+0x24]
  417037:	xor    edx,edi
  417039:	push   ss
  41703a:	(bad)  
  41703b:	sub    BYTE PTR [ebx-0x51],bh
  41703e:	sub    DWORD PTR [ebx+0x2a],edi
  417041:	out    dx,eax
  417042:	inc    esi
  417043:	das    
  417044:	inc    eax
  417045:	add    eax,0xfdf10e63
  41704a:	cmp    eax,0x43dcd6c
  41704f:	push   ebp
  417050:	jmp    0x417063
  417052:	jbe    0x41704f
  417054:	ja     0x417098
  417056:	div    DWORD PTR [ebx-0x2f]
  417059:	jmp    0x417078
  41705b:	mov    cl,BYTE PTR [edi]
  41705d:	int3   
  41705e:	daa    
  41705f:	pop    eax
  417060:	jo     0x417036
  417062:	inc    edi
  417063:	sub    ah,BYTE PTR [ebx]
  417065:	repz xchg ecx,eax
  417067:	test   al,0x10
  417069:	sbb    bh,cl
  41706b:	cmc    
  41706c:	pop    esi
  41706d:	pop    eax
  41706e:	push   esi
  41706f:	(bad)  
  417070:	out    dx,eax
  417071:	loope  0x41707b
  417073:	mov    esi,eax
  417075:	push   esp
  417076:	bound  eax,QWORD PTR [ebp+0x7cc19dac]
  41707c:	jmp    0x4170a6
  41707e:	call   0x3e63f112
  417083:	push   ecx
  417084:	sti    
  417085:	popf   
  417086:	cmp    al,0x66
  417088:	lods   al,BYTE PTR ds:[esi]
  417089:	adc    cl,BYTE PTR [edx]
  41708b:	lds    ebp,FWORD PTR [ebp+0x4e]
  41708e:	push   eax
  41708f:	in     eax,dx
  417090:	xchg   edx,eax
  417091:	sbb    esp,DWORD PTR [edx]
  417093:	clc    
  417094:	and    DWORD PTR [ecx+0x24cc41bc],esi
  41709a:	rcr    BYTE PTR [edi],0x64
  41709d:	lahf   
  41709e:	lods   al,BYTE PTR fs:[esi]
  4170a0:	mov    DWORD PTR [ebp-0x7d2cb7e2],ebx
  4170a6:	sbb    ch,0xcf
  4170a9:	add    esi,DWORD PTR [edi-0x4568918d]
  4170af:	outs   dx,BYTE PTR ds:[esi]
  4170b0:	sbb    esp,DWORD PTR [ecx]
  4170b2:	faddp  st(2),st
  4170b4:	ror    edi,cl
  4170b6:	pushf  
  4170b7:	sahf   
  4170b8:	inc    esp
  4170b9:	call   0xe2bf1812
  4170be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170bf:	shl    cl,1
  4170c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170c2:	dec    esi
  4170c3:	jecxz  0x4170ab
  4170c5:	pop    ss
  4170c6:	push   esi
  4170c7:	pusha  
  4170c8:	sub    esp,edx
  4170ca:	lea    edx,[eiz*4+0x22e9dfc5]
  4170d1:	or     DWORD PTR [eax],eax
  4170d3:	cmp    BYTE PTR [ebp+0x72],bl
  4170d6:	push   ss
  4170d7:	pushf  
  4170d8:	sbb    ecx,0x36ea6bc2
  4170de:	add    DWORD PTR ss:0xd8855d1b,0x18bc5b3f
  4170e9:	jnp    0x417095
  4170eb:	jo     0x4170b6
  4170ed:	shr    DWORD PTR [esi+0x43],0xb9
  4170f1:	outs   dx,BYTE PTR ds:[esi]
  4170f2:	lods   al,BYTE PTR ds:[esi]
  4170f3:	cdq    
  4170f4:	sub    DWORD PTR [ebx+0x5d9a8fe8],esp
  4170fa:	cwde   
  4170fb:	gs lahf 
  4170fd:	test   DWORD PTR [ebx-0x53d66e0b],edi
  417103:	scas   al,BYTE PTR es:[edi]
  417104:	mov    al,ds:0xdbe3fcd4
  417109:	add    bh,BYTE PTR [edx+0x36496181]
  41710f:	xchg   edx,eax
  417110:	add    edi,DWORD PTR [ebx+0x20]
  417113:	in     al,0x90
  417115:	scas   eax,DWORD PTR es:[edi]
  417116:	cmp    eax,0xb0c01752
  41711b:	xchg   edx,eax
  41711c:	pop    ss
  41711d:	fnsave [ebx]
  41711f:	ins    DWORD PTR es:[edi],dx
  417120:	repnz lods al,BYTE PTR ds:[esi]
  417122:	or     bl,al
  417124:	lock push ds
  417126:	mov    eax,ds:0x592f48e4
  41712b:	jns    0x41712f
  41712d:	out    0x85,eax
  41712f:	sub    esi,DWORD PTR [esi]
  417131:	xchg   ebx,eax
  417132:	jns    0x4170ff
  417134:	test   DWORD PTR [ecx+eax*8],edx
  417137:	test   eax,0x92fd9727
  41713c:	pop    eax
  41713d:	leave  
  41713e:	les    edi,FWORD PTR ds:0x69bf7a8
  417144:	inc    eax
  417145:	mov    cs,WORD PTR [ecx]
  417147:	jecxz  0x4171b9
  417149:	mov    ds:0x9f44b33f,eax
  41714e:	shl    ebx,1
  417150:	ss inc ebx
  417152:	jecxz  0x4170e7
  417154:	fwait
  417155:	int3   
  417156:	push   ecx
  417157:	popf   
  417158:	out    0x6f,al
  41715a:	mov    esp,0xbac90034
  41715f:	sub    ebp,DWORD PTR [esi+0x6c53060f]
  417165:	pop    ebp
  417166:	mov    al,ds:0x41c32651
  41716b:	push   0xdb9c3dca
  417170:	in     al,0x37
  417172:	repnz pop es
  417174:	sahf   
  417175:	cld    
  417176:	js     0x41718e
  417178:	ins    DWORD PTR es:[edi],dx
  417179:	push   eax
  41717a:	sbb    ah,BYTE PTR [eax]
  41717c:	pushf  
  41717d:	lods   eax,DWORD PTR ds:[esi]
  41717e:	(bad)  
  41717f:	jmp    0xd69c:0xfe05f5a9
  417186:	cdq    
  417187:	ins    DWORD PTR es:[edi],dx
  417188:	data16 jp 0x4171db
  41718b:	pop    ss
  41718c:	inc    edx
  41718d:	into   
  41718e:	sub    DWORD PTR [esi],ebx
  417190:	ret    0x6205
  417193:	rol    BYTE PTR [edi-0x13],1
  417196:	or     al,0x87
  417198:	or     al,0xe7
  41719a:	pop    ecx
  41719b:	mov    al,0x5c
  41719d:	mov    edi,0xa8f6b413
  4171a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171a3:	ins    DWORD PTR es:[edi],dx
  4171a4:	jo     0x41717c
  4171a6:	and    eax,0x5374bc6f
  4171ab:	sbb    eax,0xcf6da25e
  4171b0:	mov    ebx,0xb35ee280
  4171b5:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4171b7:	je     0x41722b
  4171b9:	mov    bl,0x6a
  4171bb:	or     ebp,DWORD PTR [ecx]
  4171bd:	loop   0x4171f0
  4171bf:	push   cs
  4171c0:	and    al,0x30
  4171c2:	dec    esi
  4171c3:	push   0x56
  4171c5:	mov    ebx,DWORD PTR [ecx]
  4171c7:	(bad)
  4171cb:	add    eax,0xa218a313
  4171d0:	das    
  4171d1:	in     al,0xd1
  4171d3:	test   DWORD PTR [ecx-0x61],edx
  4171d6:	mov    edi,0x2087de25
  4171db:	into   
  4171dc:	xlat   BYTE PTR ds:[ebx]
  4171dd:	mov    dh,0x66
  4171df:	jg     0x417191
  4171e1:	mov    ds:0x6adf432b,eax
  4171e6:	nop
  4171e7:	loop   0x41724a
  4171e9:	lds    edx,FWORD PTR [ebp+0x7f4e532b]
  4171ef:	stc    
  4171f0:	shl    DWORD PTR [ebp+0x12],0x5c
  4171f4:	sbb    al,0x19
  4171f6:	popa   
  4171f7:	test   DWORD PTR [esi-0x65],ebx
  4171fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171fb:	ficomp WORD PTR [ecx+esi*4+0x138d1322]
  417202:	fnstsw WORD PTR [ecx]
  417204:	sbb    ch,BYTE PTR [edi+ebx*1]
  417207:	stc    
  417208:	imul   ecx,ecx,0xe47999bb
  41720e:	add    al,0xb6
  417210:	test   edi,ecx
  417212:	sbb    dl,cl
  417214:	retf   
  417215:	sbb    BYTE PTR ss:[ecx],dl
  417218:	test   eax,0xbf51b029
  41721d:	or     BYTE PTR [esi+0x18],dl
  417220:	push   edx
  417221:	sub    ch,al
  417223:	ror    esp,0x8b
  417226:	adc    DWORD PTR ds:0xc15763e2,0x3e62f806
  417230:	in     eax,dx
  417231:	lds    edx,FWORD PTR [eax-0x71693bca]
  417237:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417238:	sub    DWORD PTR [ebx-0x3bb81142],0xc3d48ccb
  417242:	push   0xffffff8d
  417244:	je     0x429b81e4
  41724a:	lods   eax,DWORD PTR ds:[esi]
  41724b:	retf   
  41724c:	sub    ah,cl
  41724e:	inc    esi
  41724f:	(bad)  
  417251:	pop    edx
  417252:	dec    edi
  417253:	hlt    
  417254:	dec    al
  417256:	test   al,0xef
  417258:	mov    bl,BYTE PTR [edi]
  41725a:	or     al,0xc3
  41725c:	(bad)  
  41725e:	inc    eax
  41725f:	add    BYTE PTR [ecx-0x688c342b],cl
  417265:	repnz inc ebx
  417267:	jo     0x417261
  417269:	mov    esp,0xf3ae9a78
  41726e:	in     eax,0x2c
  417270:	lahf   
  417271:	cwde   
  417272:	scas   al,BYTE PTR es:[edi]
  417273:	pop    ss
  417274:	mov    cl,0xec
  417276:	push   edx
  417277:	lods   eax,DWORD PTR ds:[esi]
  417278:	nop
  417279:	dec    edx
  41727a:	dec    esi
  41727b:	jle    0x417278
  41727d:	mov    al,ds:0x740e51a6
  417282:	in     al,0x4f
  417284:	mov    eax,ds:0x4a194556
  417289:	mov    edx,0x91302966
  41728e:	sbb    DWORD PTR [ebx],edx
  417290:	aam    0x46
  417292:	(bad)  
  417293:	push   ebp
  417294:	aas    
  417295:	push   esi
  417296:	and    al,0x4f
  417298:	xchg   ebx,ebp
  41729a:	pop    ds
  41729b:	loope  0x417224
  41729d:	dec    ecx
  41729e:	inc    esp
  41729f:	fnstenv [eax+ecx*2-0xf]
  4172a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172a4:	adc    edx,DWORD PTR [eax-0x2]
  4172a7:	lods   al,BYTE PTR ds:[esi]
  4172a8:	rcl    DWORD PTR [esi+eax*1],1
  4172ab:	sub    esp,DWORD PTR [ebp+0x4e]
  4172ae:	(bad)  
  4172af:	sar    bh,cl
  4172b1:	jle    0x4172fd
  4172b3:	jecxz  0x4172be
  4172b5:	add    BYTE PTR [edx-0x7f],0xf3
  4172b9:	xor    BYTE PTR [eax+0x68],bl
  4172bc:	pop    esi
  4172bd:	std    
  4172be:	into   
  4172bf:	mov    dh,0xea
  4172c1:	loopne 0x4172eb
  4172c3:	sub    al,bh
  4172c5:	pop    ebx
  4172c6:	inc    esi
  4172c7:	xchg   edx,eax
  4172c8:	cmp    esi,esi
  4172ca:	call   0x24b9:0xb15b5ebf
  4172d1:	test   edx,edx
  4172d3:	jo     0x417330
  4172d5:	dec    ebp
  4172d6:	enter  0xf41,0xfb
  4172da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172db:	and    eax,0x1e08b869
  4172e0:	fcmovne st,st(7)
  4172e2:	(bad)  
  4172e3:	lahf   
  4172e4:	push   ebp
  4172e5:	inc    ecx
  4172e6:	mov    ebx,0xce083eae
  4172eb:	jle    0x41727a
  4172ed:	push   eax
  4172ee:	or     al,0xa2
  4172f0:	daa    
  4172f1:	inc    ecx
  4172f2:	xchg   ebp,eax
  4172f3:	mov    ebp,0x72680585
  4172f8:	inc    edi
  4172f9:	fcmovne st,st(1)
  4172fb:	xchg   ebx,eax
  4172fc:	lock sbb dh,ah
  4172ff:	scas   eax,DWORD PTR es:[edi]
  417300:	adc    eax,0x430ce942
  417305:	je     0x417323
  417307:	pusha  
  417308:	dec    ebp
  417309:	and    eax,0x716df62d
  41730e:	xor    al,0xa
  417310:	sbb    DWORD PTR [ebp+0x6bbfbf04],0x50d19b71
  41731a:	repz inc edx
  41731c:	sbb    edi,DWORD PTR [ecx+0x3b5ad5f5]
  417322:	out    dx,al
  417323:	es adc al,0x44
  417326:	test   BYTE PTR [eax+0x636b8c35],bh
  41732c:	mov    ebp,DWORD PTR [ecx+0x4f]
  41732f:	(bad)  
  417330:	mov    cl,BYTE PTR [ecx-0x30]
  417333:	mov    edi,DWORD PTR [edi]
  417335:	or     eax,0x657791d2
  41733a:	mov    edi,0x1150c70b
  41733f:	into   
  417340:	push   0xffffff98
  417342:	lds    ebx,FWORD PTR [edi-0x7e6a4a39]
  417348:	sahf   
  417349:	add    dl,BYTE PTR [edi]
  41734b:	lods   al,BYTE PTR ds:[esi]
  41734c:	fst    DWORD PTR [ebx-0x41]
  41734f:	leave  
  417350:	inc    esp
  417351:	dec    edi
  417352:	xor    bl,ch
  417354:	shr    DWORD PTR [ebx],1
  417356:	xor    BYTE PTR [ebx-0x75],bl
  417359:	pop    ebx
  41735a:	mov    dl,0x35
  41735c:	or     ecx,DWORD PTR [edx+0x77]
  41735f:	mov    bl,0x49
  417361:	dec    edx
  417362:	sub    BYTE PTR [ebx-0x69d8c8a6],al
  417368:	sub    ebp,DWORD PTR [ecx-0x12]
  41736b:	and    bl,BYTE PTR [ecx]
  41736d:	inc    ebp
  41736e:	push   ebp
  41736f:	xor    BYTE PTR [eax-0x1a],cl
  417372:	mov    ah,0x94
  417374:	mov    ah,0x0
  417376:	aaa    
  417377:	gs dec eax
  417379:	ja     0x4173f5
  41737b:	pop    edx
  41737c:	cld    
  41737d:	cs es pop ebx
  417380:	hlt    
  417381:	inc    eax
  417382:	jb     0x4173a1
  417384:	mov    ebp,0x2f1e9b3c
  417389:	popf   
  41738a:	jmp    0x7cf49be2
  41738f:	xchg   BYTE PTR [ecx],bh
  417391:	repnz mov ebp,0x98b0d5c8
  417397:	stos   DWORD PTR es:[edi],eax
  417398:	shl    BYTE PTR [edx],0xcf
  41739b:	cmp    eax,0xffb1edc6
  4173a0:	scas   al,BYTE PTR es:[edi]
  4173a1:	mov    al,0x40
  4173a3:	mov    al,BYTE PTR [edi]
  4173a5:	dec    ebp
  4173a6:	adc    cl,dh
  4173a8:	fnstsw WORD PTR [edx+0x4b]
  4173ab:	int    0xbd
  4173ad:	cli    
  4173ae:	xchg   edi,eax
  4173af:	jno    0x41737c
  4173b1:	fisubr DWORD PTR [esp+eax*8]
  4173b4:	xor    BYTE PTR [ebx],ah
  4173b6:	mov    ecx,0x27fe60ee
  4173bb:	push   ss
  4173bc:	(bad)  
  4173bd:	imul   esp,DWORD PTR ds:0xb6523101,0x923f0d0e
  4173c7:	mov    ecx,0x2771e81d
  4173cc:	(bad)  
  4173cd:	retf   
  4173ce:	sub    bh,bh
  4173d0:	rol    DWORD PTR [edx-0x11],0x93
  4173d4:	iret   
  4173d5:	push   0x2e
  4173d7:	lea    ebx,[eax-0x21c70a68]
  4173dd:	jle    0x417397
  4173df:	mov    edi,ecx
  4173e1:	or     BYTE PTR [ebx+0x559e18f4],ch
  4173e7:	(bad)  
  4173e8:	mov    WORD PTR [ebx],gs
  4173ea:	lahf   
  4173eb:	or     ebp,DWORD PTR [edi+0x79cf0230]
  4173f1:	xchg   edi,eax
  4173f2:	scas   al,BYTE PTR es:[edi]
  4173f3:	sar    DWORD PTR [edx],0x22
  4173f6:	cli    
  4173f7:	sti    
  4173f8:	lahf   
  4173f9:	mov    ebx,edi
  4173fb:	xor    BYTE PTR ds:0x982d1ba8,0x72
  417402:	and    BYTE PTR [ecx-0x55],al
  417405:	pusha  
  417406:	cmc    
  417407:	add    edi,DWORD PTR [eax+0x52]
  41740a:	dec    ecx
  41740b:	loop   0x4173bc
  41740d:	inc    edx
  41740e:	pop    ecx
  41740f:	or     DWORD PTR [edx+edi*2],ecx
  417412:	push   ebx
  417413:	lahf   
  417414:	mov    ebp,0xa299af62
  417419:	xor    al,0x14
  41741b:	(bad)  
  41741c:	xor    esp,esi
  41741e:	inc    edi
  41741f:	test   al,0xad
  417421:	or     ecx,DWORD PTR [edx+0x5063a6e0]
  417427:	xchg   ecx,eax
  417428:	sbb    esp,DWORD PTR [eax]
  41742a:	xchg   esp,eax
  41742b:	sub    bh,BYTE PTR [eax+0x63a44cc5]
  417431:	inc    ecx
  417432:	cmp    eax,DWORD PTR [ebx-0x585d2afc]
  417438:	mov    gs,WORD PTR [ecx-0x5d]
  41743b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41743c:	fsub   QWORD PTR [ebp+0x17]
  41743f:	xor    al,0xc0
  417441:	out    dx,eax
  417442:	push   edx
  417443:	mov    dh,0x7c
  417445:	test   DWORD PTR [ebp-0x26],ecx
  417448:	or     BYTE PTR [ebx-0x1d656ec3],dh
  41744e:	outs   dx,BYTE PTR ds:[esi]
  41744f:	cld    
  417450:	xchg   esp,eax
  417451:	in     eax,dx
  417452:	xchg   edi,eax
  417453:	in     eax,0x90
  417455:	add    bl,BYTE PTR [eax-0x6f]
  417458:	(bad)  
  417459:	data16 add al,0xbd
  41745c:	mov    ch,0x38
  41745e:	clc    
  41745f:	stc    
  417460:	push   edx
  417461:	cwde   
  417462:	mov    cl,0xe0
  417464:	xchg   BYTE PTR [edi],bh
  417466:	xchg   DWORD PTR [eax-0x44c0fd1],edi
  41746c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41746d:	loop   0x417486
  41746f:	loope  0x417491
  417471:	sbb    ch,BYTE PTR [edx+0xbafe966]
  417477:	(bad)  
  417478:	fwait
  417479:	lock jle 0x41749a
  41747c:	fidivr WORD PTR [esi+0x52]
  41747f:	addr16 mov dh,0xd9
  417482:	sub    al,0x34
  417484:	mov    BYTE PTR [esi+edi*8],bl
  417487:	sti    
  417488:	mov    eax,ds:0x38532a3a
  41748d:	les    ebx,FWORD PTR [ebx+eax*8]
  417490:	pop    es
  417491:	rcl    BYTE PTR [ebp+0x55],0x8c
  417495:	push   ebp
  417496:	push   ebp
  417497:	ins    DWORD PTR es:[edi],dx
  417498:	loop   0x4174c9
  41749a:	ficom  WORD PTR [edx-0xb]
  41749d:	inc    al
  41749f:	icebp  
  4174a0:	cld    
  4174a1:	retf   0xbb3d
  4174a4:	mov    cl,0xeb
  4174a6:	mov    ebp,0x19f88286
  4174ab:	push   ecx
  4174ac:	mov    edi,0xb105adbc
  4174b1:	and    DWORD PTR [edx+0xf],esp
  4174b4:	fiadd  WORD PTR [edx+0x4f]
  4174b7:	inc    ebx
  4174b8:	adc    cl,ch
  4174ba:	lahf   
  4174bb:	gs into 
  4174bd:	sbb    ah,BYTE PTR [ebx+0x60]
  4174c0:	sbb    edi,esi
  4174c2:	sub    al,0xfb
  4174c4:	inc    eax
  4174c5:	and    al,0x4c
  4174c7:	cmp    BYTE PTR [edi+0x78c26ecb],cl
  4174cd:	fcmovnu st,st(6)
  4174cf:	in     al,0x1d
  4174d1:	cli    
  4174d2:	(bad)  
  4174d3:	rcl    DWORD PTR [eax+0x22],1
  4174d6:	mov    eax,0x390a0119
  4174db:	test   DWORD PTR [esi+ebp*2-0x69efb9cd],ebx
  4174e2:	xchg   DWORD PTR [ecx-0x1a],edx
  4174e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174e6:	pop    edi
  4174e7:	int    0xda
  4174e9:	inc    esi
  4174ea:	enter  0xa33f,0x27
  4174ee:	daa    
  4174ef:	loopne 0x417557
  4174f1:	leave  
  4174f2:	inc    edi
  4174f3:	push   cs
  4174f4:	mov    esp,0xb1bd8b97
  4174f9:	sahf   
  4174fa:	addr16 imul ecx,ebx,0x7117a0bc
  417501:	xor    al,0x24
  417503:	xlat   BYTE PTR ds:[ebx]
  417504:	cmp    ch,BYTE PTR ds:0x1a527a17
  41750a:	daa    
  41750b:	arpl   bx,si
  41750d:	icebp  
  41750e:	outs   dx,DWORD PTR ds:[esi]
  41750f:	scas   eax,DWORD PTR es:[edi]
  417510:	out    0x39,eax
  417512:	lock cmp eax,0x7938d35
  417518:	ins    BYTE PTR es:[edi],dx
  417519:	mov    ecx,0xc67f1639
  41751e:	adc    bl,bl
  417520:	or     al,0x8d
  417522:	jmp    0x792659c9
  417527:	repz mov bl,0x9d
  41752a:	stos   BYTE PTR es:[edi],al
  41752b:	mov    DWORD PTR [edi-0x65],0x9d4640c0
  417532:	aad    0xdb
  417534:	mov    bl,ch
  417536:	repnz mov esp,0xeffb6938
  41753c:	mov    ss,esi
  41753e:	loop   0x4175a5
  417540:	inc    ebp
  417541:	adc    dl,al
  417543:	push   ss
  417544:	mov    BYTE PTR [edx],ch
  417546:	add    ebp,ebp
  417548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417549:	push   ebp
  41754a:	adc    eax,0x623caa12
  41754f:	das    
  417550:	xor    DWORD PTR [eax+0xb],edi
  417553:	inc    ebx
  417554:	or     al,0x38
  417556:	cld    
  417557:	out    0x84,eax
  417559:	arpl   WORD PTR [edx],dx
  41755b:	and    al,0x6b
  41755d:	jne    0x4175d4
  41755f:	and    ch,ch
  417561:	pop    edi
  417562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417563:	sub    eax,0x4efba714
  417568:	cli    
  417569:	and    ebx,DWORD PTR [edi-0x2934f91b]
  41756f:	pushf  
  417570:	mul    DWORD PTR [eax]
  417572:	lods   eax,DWORD PTR ds:[esi]
  417573:	xor    BYTE PTR [esi+0x783afee0],bl
  417579:	xchg   ebp,eax
  41757a:	in     eax,dx
  41757b:	test   al,0xa3
  41757d:	fistp  DWORD PTR [esi]
  41757f:	add    eax,0x739d16f3
  417584:	fcmovu st,st(4)
  417586:	jle    0x417525
  417588:	leave  
  417589:	imul   edi,DWORD PTR [esi-0x32acf1b1],0xf4e5b01e
  417593:	nop
  417594:	and    esp,edi
  417596:	lods   eax,DWORD PTR ds:[esi]
  417597:	inc    esi
  417598:	or     esp,DWORD PTR [ecx-0x17]
  41759b:	mov    dh,BYTE PTR [ecx]
  41759d:	push   ds
  41759e:	les    ebp,FWORD PTR [ecx-0x7]
  4175a1:	and    eax,0x71aae619
  4175a6:	mov    edx,0xac83c422
  4175ab:	lds    edi,FWORD PTR [eax]
  4175ad:	mov    al,dl
  4175af:	inc    edi
  4175b0:	dec    eax
  4175b1:	fstp   TBYTE PTR [eax-0x4c51a80]
  4175b7:	push   esi
  4175b8:	test   al,ah
  4175ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175bb:	xchg   esi,eax
  4175bc:	mov    BYTE PTR [eax-0x6974e071],ch
  4175c2:	mov    al,bl
  4175c4:	push   0x85997627
  4175c9:	xchg   esi,eax
  4175ca:	mov    dh,0xdd
  4175cc:	aas    
  4175cd:	sar    esp,cl
  4175cf:	pop    ecx
  4175d0:	cmp    ah,BYTE PTR [ecx]
  4175d2:	aas    
  4175d3:	mov    ebx,0x3a95aa91
  4175d8:	mov    ah,dl
  4175da:	pop    ss
  4175db:	xchg   ebp,eax
  4175dc:	in     eax,0xa5
  4175de:	ss adc ch,dh
  4175e1:	push   ebx
  4175e2:	mov    ecx,0x7bbde741
  4175e7:	sub    DWORD PTR [ebx+0x6c],eax
  4175ea:	cmp    eax,0x8374ae42
  4175ef:	popa   
  4175f0:	aam    0x3
  4175f2:	jbe    0x417627
  4175f4:	lods   al,BYTE PTR ds:[esi]
  4175f5:	(bad)  
  4175f6:	jbe    0x4175b3
  4175f8:	xchg   ebx,eax
  4175f9:	js     0x41765f
  4175fb:	hlt    
  4175fc:	sub    edx,DWORD PTR [ebx+0x3b]
  4175ff:	push   ecx
  417600:	xor    DWORD PTR [ebx-0x5d],eax
  417603:	in     eax,0x0
  417605:	out    0xf4,al
  417607:	popf   
  417608:	xchg   edi,eax
  417609:	inc    edi
  41760a:	pop    esi
  41760b:	sub    BYTE PTR [ecx-0xec6e802],bh
  417611:	not    bl
  417613:	loop   0x41765c
  417615:	xor    DWORD PTR [ebx-0x74edb25d],edx
  41761b:	pushf  
  41761c:	test   al,0xf9
  41761e:	fcomp  DWORD PTR [esi]
  417620:	sar    DWORD PTR [ecx],cl
  417622:	push   ds
  417623:	sub    esp,DWORD PTR [esi+edx*2-0x20]
  417627:	arpl   WORD PTR [eax-0x6],dx
  41762a:	add    eax,0x795b79a6
  41762f:	or     bh,bh
  417631:	aaa    
  417632:	mov    ebx,0x8cd43292
  417637:	fistp  WORD PTR [edi+0x747a765b]
  41763d:	fst    st(6)
  41763f:	mov    bl,0x39
  417641:	ficom  WORD PTR [edx+0x12e2f49b]
  417647:	lods   al,BYTE PTR ds:[esi]
  417648:	pop    ds
  417649:	jnp    0x417679
  41764b:	sub    BYTE PTR [ecx-0x459daf8],bl
  417651:	mov    BYTE PTR [esi],ch
  417653:	outs   dx,DWORD PTR ds:[esi]
  417654:	xor    DWORD PTR cs:[esi],ebp
  417657:	cmp    BYTE PTR [esi-0x48],dh
  41765a:	repnz pop esp
  41765c:	xchg   edx,eax
  41765d:	sbb    bl,BYTE PTR [edi-0x22]
  417660:	dec    edx
  417661:	adc    BYTE PTR [esi+0x4a],bl
  417664:	std    
  417665:	and    eax,0x29739ca4
  41766a:	dec    esi
  41766b:	int    0x8d
  41766d:	cdq    
  41766e:	mov    edi,0xc363daaf
  417673:	xlat   BYTE PTR ds:[ebx]
  417674:	stos   BYTE PTR es:[edi],al
  417675:	rcl    ah,1
  417677:	inc    edx
  417678:	cmp    ebp,DWORD PTR [edi-0x635bddc8]
  41767e:	adc    eax,0x7229b8ae
  417683:	aam    0xf3
  417685:	inc    edi
  417686:	or     ch,0x65
  417689:	push   ss
  41768a:	inc    edi
  41768b:	(bad)  
  41768c:	pusha  
  41768d:	and    edi,ecx
  41768f:	jbe    0x41767d
  417691:	pusha  
  417692:	aas    
  417693:	enter  0x268d,0x23
  417697:	pop    ebp
  417698:	sbb    eax,0x3c034c00
  41769d:	xlat   BYTE PTR ds:[ebx]
  41769e:	cs enter 0x5c53,0xf9
  4176a3:	push   ebx
  4176a4:	aas    
  4176a5:	sub    al,0x5c
  4176a7:	bound  eax,QWORD PTR [edi+ebx*4+0xb]
  4176ab:	push   ebp
  4176ac:	dec    ebp
  4176ad:	push   ebx
  4176ae:	js     0x417677
  4176b0:	sbb    eax,ebp
  4176b2:	mov    ss,WORD PTR [edi+0x9]
  4176b5:	cmp    BYTE PTR [ebx-0x54],dh
  4176b8:	enter  0x63dd,0x15
  4176bc:	pusha  
  4176bd:	mov    ecx,0x91d0ed60
  4176c2:	mov    esi,0x30cb2bfd
  4176c7:	pop    ecx
  4176c8:	lds    esp,FWORD PTR [ebp-0x1f]
  4176cb:	mov    cl,0x85
  4176cd:	iret   
  4176ce:	sub    BYTE PTR [edx+0x4f33811c],0x4b
  4176d5:	mov    cl,0xa4
  4176d7:	sub    edi,DWORD PTR [ecx]
  4176d9:	ins    BYTE PTR es:[edi],dx
  4176da:	(bad)  
  4176db:	mov    ebx,0x7133cfd6
  4176e0:	ja     0x417711
  4176e2:	cmp    edi,0xffffffa7
  4176e5:	jo     0x417739
  4176e7:	xchg   esi,ebx
  4176e9:	push   edx
  4176ea:	dec    edx
  4176eb:	das    
  4176ec:	jmp    0x7143e49e
  4176f1:	dec    ebx
  4176f2:	test   al,0xa4
  4176f4:	inc    ebp
  4176f5:	jmp    0x417774
  4176f7:	rcl    BYTE PTR [eax+0x32],1
  4176fa:	frstor [edi]
  4176fc:	mov    ebx,0x2f643879
  417701:	aas    
  417702:	imul   ecx,DWORD PTR [eax+0x63],0x28904aed
  417709:	pop    ecx
  41770a:	and    edx,DWORD PTR ds:0x95dfa2e4
  417710:	ja     0x41770a
  417712:	xor    dh,ch
  417714:	test   al,0x48
  417716:	jl     0x4176e5
  417718:	jns    0x4176ea
  41771a:	push   es
  41771b:	popf   
  41771c:	ja     0x41773d
  41771e:	in     al,dx
  41771f:	pop    ss
  417720:	rcr    ecx,0xb8
  417723:	jg     0x417703
  417725:	inc    ecx
  417726:	(bad)  
  417727:	(bad)  
  417728:	adc    BYTE PTR [ebx],ch
  41772a:	les    esp,FWORD PTR [edx+0x2eeec8db]
  417730:	sbb    al,0x89
  417732:	fisubr DWORD PTR [edi+0x6b]
  417735:	bound  edi,QWORD PTR [edx-0x79]
  417738:	push   ss
  417739:	jecxz  0x417737
  41773b:	or     ch,BYTE PTR ds:0x60167e5b
  417741:	push   ebp
  417742:	and    eax,0x2b5cef7e
  417747:	dec    esp
  417748:	fisub  WORD PTR [ecx+0x33d17eea]
  41774e:	mov    ebx,0x1dcb7590
  417753:	sahf   
  417754:	xor    ch,ch
  417756:	push   edx
  417757:	mov    dh,0x18
  417759:	std    
  41775a:	dec    ebx
  41775b:	ins    BYTE PTR es:[edi],dx
  41775c:	int    0x5e
  41775e:	retf   0xf661
  417761:	sub    ch,al
  417763:	jg     0x4176f5
  417765:	pushf  
  417766:	clc    
  417767:	arpl   WORD PTR [edi-0x6422d4ef],cx
  41776d:	dec    ebp
  41776e:	scas   eax,DWORD PTR es:[edi]
  41776f:	dec    ebx
  417770:	mov    ecx,0xe9f313b5
  417775:	sub    DWORD PTR [ecx],edi
  417777:	loop   0x417797
  417779:	pop    DWORD PTR [eax+0x39]
  41777c:	cmp    edx,DWORD PTR [eax]
  41777e:	ja     0x417713
  417780:	retf   0x5fc0
  417783:	mov    al,ds:0xf24bffdb
  417788:	mov    ah,0x9a
  41778a:	hlt    
  41778b:	xlat   BYTE PTR ds:[ebx]
  41778c:	enter  0x4028,0xea
  417790:	pop    esi
  417791:	jecxz  0x417811
  417793:	add    eax,0x9546b6b2
  417798:	pop    esp
  417799:	icebp  
  41779a:	cmp    ecx,DWORD PTR [edi+0x5d6cce50]
  4177a0:	les    ecx,FWORD PTR [ecx-0x4d]
  4177a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177a4:	popa   
  4177a5:	mov    cl,0x17
  4177a7:	mov    ecx,0x900f4de3
  4177ac:	pop    edx
  4177ad:	in     al,0x7e
  4177af:	call   0xa427:0x98192003
  4177b6:	addr16 dec esp
  4177b8:	stos   DWORD PTR es:[edi],eax
  4177b9:	outs   dx,BYTE PTR ds:[esi]
  4177ba:	and    esp,DWORD PTR [edx]
  4177bc:	sbb    ecx,DWORD PTR [esi]
  4177be:	mov    cl,0xfc
  4177c0:	add    edi,DWORD PTR [edx+0x7b]
  4177c3:	scas   al,BYTE PTR es:[edi]
  4177c4:	test   al,0xbe
  4177c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177c7:	call   0xdbb306a2
  4177cc:	xor    eax,0x4f4e4b54
  4177d1:	stc    
  4177d2:	sub    BYTE PTR [ebx-0x34999052],dh
  4177d8:	sbb    bh,al
  4177da:	outs   dx,DWORD PTR ds:[esi]
  4177db:	repnz push ebp
  4177dd:	cli    
  4177de:	mov    dh,0xa2
  4177e0:	ins    DWORD PTR es:[edi],dx
  4177e1:	popa   
  4177e2:	pop    ebx
  4177e3:	in     al,dx
  4177e4:	or     eax,0x20e517f7
  4177e9:	mov    ecx,0xcf3fa191
  4177ee:	mov    eax,ds:0xb8c8f2d1
  4177f3:	cmp    al,0x41
  4177f5:	push   esi
  4177f6:	repnz xchg esi,eax
  4177f8:	sub    cl,BYTE PTR [eax]
  4177fa:	mov    al,0x68
  4177fc:	(bad)  
  4177fd:	pop    ss
  4177fe:	or     DWORD PTR [eax+eiz*4+0x4a],ecx
  417802:	test   esp,eax
  417804:	cmp    BYTE PTR [edi+0x4d],0x91
  417808:	add    eax,0x4d773099
  41780d:	sar    ecx,0xe2
  417810:	jmp    0x1213:0xedc5a58e
  417817:	outs   dx,DWORD PTR gs:[esi]
  417819:	push   ecx
  41781a:	es mov esp,0xe0873dac
  417820:	ror    BYTE PTR [esi+ebp*2+0x27],cl
  417824:	pushf  
  417825:	stc    
  417826:	mov    eax,0xd89c6f61
  41782b:	test   dh,ch
  41782d:	adc    eax,0x94f00fcb
  417832:	mov    ebx,0xaeabfb5e
  417837:	ficom  DWORD PTR [ebp+0x6f]
  41783a:	test   BYTE PTR [edi+0x1bdc201d],al
  417840:	push   eax
  417841:	jne    0x4177d1
  417843:	sub    bl,BYTE PTR [edi]
  417845:	sbb    eax,0x69d65b8b
  41784a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41784b:	in     al,0xd3
  41784d:	mov    al,ds:0xe1a1fb2a
  417852:	pop    eax
  417853:	mov    bh,0x50
  417855:	ret    
  417856:	retf   0xb63c
  417859:	jg     0x417879
  41785b:	push   eax
  41785c:	(bad)  
  41785d:	and    ebp,edx
  41785f:	retf   
  417860:	cmp    DWORD PTR [esi+edx*1],ebp
  417863:	sub    eax,0x2b551f81
  417868:	clc    
  417869:	outs   dx,BYTE PTR ds:[esi]
  41786a:	pop    ebx
  41786b:	shl    BYTE PTR [edx+eiz*8+0x386bf255],0xb9
  417873:	imul   ebp,DWORD PTR [ebx-0x1d],0xca3f3cd
  41787a:	(bad)  
  41787b:	sbb    DWORD PTR [ebx],esi
  41787d:	popa   
  41787e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41787f:	fld    DWORD PTR [ebp-0x43]
  417882:	jp     0x41787a
  417884:	popa   
  417885:	xor    bh,dl
  417887:	iret   
  417888:	ret    
  417889:	pop    ss
  41788a:	push   edi
  41788b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41788c:	mov    ebx,0x29cb13ef
  417891:	and    al,0x16
  417893:	mov    esp,0x6ba5d22a
  417898:	popa   
  417899:	xchg   edi,eax
  41789a:	test   BYTE PTR [esi],0xdd
  41789d:	cmp    al,0xa4
  41789f:	add    esp,DWORD PTR [eax]
  4178a1:	jae    0x41791e
  4178a3:	mov    BYTE PTR [ebp+0x16],0x3e
  4178a7:	xlat   BYTE PTR ds:[ebx]
  4178a8:	mov    dl,0xd7
  4178aa:	sub    DWORD PTR [eax+ecx*1-0x6bb1485f],edi
  4178b1:	aad    0x44
  4178b3:	mov    al,0x27
  4178b5:	mov    ds:0xe7f0bc86,al
  4178ba:	test   DWORD PTR [edi+edi*1+0x3ffc9b07],edx
  4178c1:	xlat   BYTE PTR ds:[ebx]
  4178c2:	mov    ebp,0x69cdc61a
  4178c7:	mov    cl,ch
  4178c9:	out    dx,al
  4178ca:	cs or  al,0xec
  4178cd:	ret    
  4178ce:	adc    eax,0xd00275f3
  4178d3:	fs jo  0x4178b1
  4178d6:	push   ds
  4178d7:	cs xchg esp,eax
  4178d9:	mov    esp,?
  4178db:	xor    DWORD PTR [edi+0x5a4b479f],eax
  4178e1:	push   0xe18a9287
  4178e6:	xor    eax,0x1696ec48
  4178eb:	mov    ch,0x3
  4178ed:	fstp   TBYTE PTR [ebx]
  4178ef:	test   BYTE PTR [ebx],0x57
  4178f2:	(bad)  
  4178f4:	mov    dh,BYTE PTR [edi+0x31]
  4178f7:	daa    
  4178f8:	xchg   esp,eax
  4178f9:	sub    BYTE PTR [ebx+0x4c],0x9b
  4178fd:	adc    eax,0xf00b7f0b
  417902:	jnp    0x4178d4
  417904:	aaa    
  417905:	std    
  417906:	fst    DWORD PTR [ebp+0x4d]
  417909:	cmc    
  41790a:	sub    esi,ecx
  41790c:	mov    dl,0x84
  41790e:	(bad)  
  41790f:	(bad)  
  417910:	pop    ebx
  417911:	(bad)  
  417912:	dec    ebx
  417913:	ffreep st(6)
  417915:	jge    0x4178d3
  417917:	enter  0xfae8,0xd5
  41791b:	(bad)  
  41791c:	test   eax,0xdb505ae9
  417921:	push   ebp
  417922:	adc    eax,0x4db35b74
  417927:	fstp   QWORD PTR [esi+ebp*2]
  41792a:	fisttp DWORD PTR [edx+0x5b6c1484]
  417930:	jae    0x4178cb
  417932:	pop    ebx
  417933:	stos   DWORD PTR es:[edi],eax
  417934:	adc    eax,ebx
  417936:	imul   edx,DWORD PTR [eax-0x1e0e4a27],0xffffffee
  41793d:	inc    edi
  41793e:	pop    esi
  41793f:	inc    edi
  417940:	mov    esi,0x6cc8d36f
  417945:	pushf  
  417946:	jecxz  0x417944
  417948:	jbe    0x41790c
  41794a:	inc    esp
  41794b:	jmp    0xd7ae7d9
  417950:	add    ecx,eax
  417952:	enter  0x57cb,0x86
  417956:	test   bl,dl
  417958:	xor    dh,BYTE PTR ds:0x4b0aa19e
  41795e:	into   
  41795f:	add    eax,DWORD PTR [ecx-0x404a3544]
  417965:	xchg   ebp,eax
  417966:	fidivr WORD PTR [ebp-0x56]
  417969:	jge    0x417950
  41796b:	inc    esp
  41796c:	push   ecx
  41796d:	les    ebx,FWORD PTR [esi+0x681283bf]
  417973:	fstp   QWORD PTR [eax+0x22b7fe64]
  417979:	ds aam 0xc5
  41797c:	out    0x5a,eax
  41797e:	mov    ebx,0x57531366
  417983:	add    dh,dl
  417985:	lds    esp,FWORD PTR [esi+0x1fc0e39]
  41798b:	fcomp  DWORD PTR [eax-0x187df77f]
  417991:	clc    
  417992:	sub    dh,BYTE PTR [ebp+0x3f]
  417995:	call   FWORD PTR [edi+0x336c9680]
  41799b:	cwde   
  41799c:	push   ss
  41799d:	and    al,0x34
  41799f:	push   edi
  4179a0:	repnz nop
  4179a2:	ficom  WORD PTR [edi]
  4179a4:	cmp    al,0x9f
  4179a6:	ret    0x7949
  4179a9:	dec    esp
  4179aa:	sub    DWORD PTR [ebx-0x18],0xffffffc7
  4179ae:	xchg   ecx,eax
  4179af:	and    dl,BYTE PTR [ecx+0xc]
  4179b2:	sbb    BYTE PTR [esi],al
  4179b4:	lods   eax,DWORD PTR ds:[esi]
  4179b5:	add    ch,bh
  4179b7:	lods   al,BYTE PTR ds:[esi]
  4179b8:	cmp    bl,dl
  4179ba:	ret    0xd2db
  4179bd:	sub    ebp,DWORD PTR [ebp+0x5bc445aa]
  4179c3:	sbb    DWORD PTR [di-0x55],0x22
  4179c8:	inc    ecx
  4179c9:	in     eax,0xb7
  4179cb:	jbe    0x417a0b
  4179cd:	js     0x4179c9
  4179cf:	and    BYTE PTR [ebp+0x4fc87fd8],bl
  4179d5:	(bad)  
  4179d6:	clc    
  4179d7:	popf   
  4179d8:	jno    0x4179c9
  4179da:	icebp  
  4179db:	xchg   DWORD PTR [esi-0x6a],ecx
  4179de:	adc    eax,0x5ff57684
  4179e3:	shr    BYTE PTR [eax+0x6b],0x91
  4179e7:	xchg   ebx,eax
  4179e8:	dec    ecx
  4179e9:	in     al,0xc9
  4179eb:	fcomp  QWORD PTR [edx+0x7a]
  4179ee:	cmp    DWORD PTR [esi-0x26e8cb01],0xffffff8f
  4179f5:	(bad)  
  4179f6:	mov    esi,0xb880bbaf
  4179fb:	sti    
  4179fc:	jno    0x417a2e
  4179fe:	(bad)  
  4179ff:	mov    ebp,DWORD PTR [eax-0x50]
  417a02:	test   al,0xf7
  417a04:	sbb    BYTE PTR [esi+0x5c7fa575],cl
  417a0a:	inc    ecx
  417a0b:	and    DWORD PTR ds:0x8b322b52,edi
  417a11:	dec    ebx
  417a12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a13:	push   es
  417a14:	outs   dx,BYTE PTR ds:[esi]
  417a15:	inc    ebx
  417a16:	jge    0x417a0b
  417a18:	push   es
  417a19:	add    BYTE PTR [edi+0x11],bl
  417a1c:	mov    bh,BYTE PTR [ecx]
  417a1e:	rol    BYTE PTR [ecx+0x57c8665e],0x63
  417a25:	into   
  417a26:	dec    ebp
  417a27:	or     eax,0xf7e429b6
  417a2c:	stos   BYTE PTR es:[edi],al
  417a2d:	push   ebp
  417a2e:	xchg   edx,esi
  417a30:	sti    
  417a31:	jns    0x417a0f
  417a33:	repnz ror DWORD PTR [edx-0x54bb36d7],0xb7
  417a3b:	cmp    al,dh
  417a3d:	and    DWORD PTR [ebp+0x55b2573d],0x60a706a0
  417a47:	push   ecx
  417a48:	mov    ebx,0xba5ebddc
  417a4d:	xchg   BYTE PTR [edi],ch
  417a4f:	jb     0x4179fc
  417a51:	(bad)  
  417a52:	jmp    0x8c25:0xe99ae812
  417a59:	sbb    bh,BYTE PTR [edx]
  417a5b:	adc    DWORD PTR [ecx+edx*1],ecx
  417a5e:	stos   BYTE PTR es:[edi],al
  417a5f:	pop    eax
  417a60:	sub    DWORD PTR [edi+0x334104d3],edi
  417a66:	or     DWORD PTR [edx+0x66],edx
  417a69:	push   ecx
  417a6a:	jle    0x4179fd
  417a6c:	cmp    dl,0xb9
  417a6f:	cmp    BYTE PTR [esi-0x1],al
  417a72:	mov    ebx,0xc92d15ca
  417a77:	inc    edx
  417a78:	ins    DWORD PTR es:[edi],dx
  417a79:	or     BYTE PTR [eax-0xb],ch
  417a7c:	jmp    0x417a1c
  417a7e:	jo     0x417a64
  417a80:	mov    ebp,0xedf4c43b
  417a85:	aam    0x7d
  417a87:	in     eax,dx
  417a88:	(bad)  
  417a89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a8a:	pop    ss
  417a8b:	jne    0x417aa3
  417a8d:	fmul   DWORD PTR [ecx]
  417a8f:	test   eax,0x8ada7bea
  417a94:	rcr    BYTE PTR [esi],0x4d
  417a97:	sbb    BYTE PTR [ebp-0x80],0x66
  417a9b:	sub    eax,0xe94ba1dc
  417aa0:	out    dx,eax
  417aa1:	sahf   
  417aa2:	mov    dh,0xc2
  417aa4:	retf   0x457a
  417aa7:	pop    ss
  417aa8:	ins    BYTE PTR es:[edi],dx
  417aa9:	cmp    eax,0xbb535c20
  417aae:	jno    0x417a44
  417ab0:	stos   BYTE PTR es:[edi],al
  417ab1:	call   0xd375504f
  417ab6:	sub    eax,DWORD PTR [eax]
  417ab8:	jmp    0xb234cbac
  417abd:	test   DWORD PTR [ebp+0x70],0xa4676206
  417ac4:	shl    BYTE PTR [ecx+0x44],cl
  417ac7:	pop    edi
  417ac8:	(bad)  
  417ac9:	mov    ch,0xe9
  417acb:	adc    BYTE PTR [ebx+ebp*2],bh
  417ace:	inc    edx
  417acf:	jb     0x417a73
  417ad1:	popf   
  417ad2:	shl    BYTE PTR [edx-0x3c],cl
  417ad5:	loop   0x417b34
  417ad7:	push   eax
  417ad8:	sbb    BYTE PTR [esp+edx*4],ch
  417adb:	test   al,0x3a
  417add:	out    0x3d,eax
  417adf:	test   BYTE PTR [edi],0x1c
  417ae2:	push   esi
  417ae3:	push   eax
  417ae4:	fisttp DWORD PTR [edi]
  417ae6:	dec    edi
  417ae7:	lods   eax,DWORD PTR ds:[esi]
  417ae8:	aad    0x71
  417aea:	mov    edi,0x184974dd
  417aef:	mov    eax,ds:0xfe6527d5
  417af4:	pop    es
  417af5:	adc    eax,0xab1e7c64
  417afa:	lods   eax,DWORD PTR ds:[esi]
  417afb:	fs in  al,0xfa
  417afe:	sbb    DWORD PTR [esp+ebp*1],edi
  417b01:	ja     0x417b2c
  417b03:	jp     0x417afb
  417b05:	xchg   ebx,eax
  417b06:	pushf  
  417b07:	cmp    al,0xab
  417b09:	sbb    ecx,DWORD PTR es:[eax+0x73be3bd1]
  417b10:	aaa    
  417b11:	sti    
  417b12:	aam    0xd
  417b14:	mov    ah,0xd1
  417b16:	rol    edx,0xe0
  417b19:	xlat   BYTE PTR ds:[ebx]
  417b1a:	adc    edi,esi
  417b1c:	les    edx,FWORD PTR [ecx]
  417b1e:	mov    bh,0x52
  417b20:	popa   
  417b21:	push   ecx
  417b22:	mov    ch,0x76
  417b24:	arpl   WORD PTR [eax],cx
  417b26:	or     eax,0x67a035da
  417b2b:	jmp    0xfa619b49
  417b30:	jo     0x417b04
  417b32:	pusha  
  417b33:	push   ds
  417b34:	das    
  417b35:	pop    esi
  417b36:	cli    
  417b37:	push   ss
  417b38:	in     al,dx
  417b39:	sub    eax,0x28f7dc7f
  417b3e:	mov    dl,0x5b
  417b40:	shl    DWORD PTR ds:0x2239e632,0x8f
  417b47:	mov    ah,0xc2
  417b49:	fcmove st,st(4)
  417b4b:	rcr    BYTE PTR [ecx],1
  417b4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b4e:	push   0xffffffce
  417b50:	inc    edi
  417b51:	jmp    0x34687dfc
  417b56:	add    bl,BYTE PTR [ebp-0x53]
  417b59:	test   eax,0x7c6e83af
  417b5e:	popa   
  417b5f:	mov    esp,0x2930496e
  417b64:	aam    0xc1
  417b66:	mov    ds:0x52d7cbcf,eax
  417b6b:	or     BYTE PTR [edi+0x5e723fbb],0x5a
  417b72:	lods   al,BYTE PTR ds:[esi]
  417b73:	pushf  
  417b74:	pop    edi
  417b75:	gs pusha 
  417b77:	add    BYTE PTR [edi-0x3d],al
  417b7a:	mov    bh,0x90
  417b7c:	jp     0x417b84
  417b7e:	pop    edi
  417b7f:	shl    BYTE PTR [ecx+0x13],0xbf
  417b83:	push   ecx
  417b84:	daa    
  417b85:	xor    BYTE PTR [edi-0x7],dl
  417b88:	fdiv   QWORD PTR [esi+0x6c]
  417b8b:	or     eax,DWORD PTR [esi]
  417b8d:	mov    al,0x6a
  417b8f:	imul   BYTE PTR [esi-0x6f]
  417b92:	int3   
  417b93:	ret    0xa64d
  417b96:	icebp  
  417b97:	xchg   esi,eax
  417b98:	and    DWORD PTR [eax],0xffffffaa
  417b9b:	scas   eax,DWORD PTR es:[edi]
  417b9c:	test   BYTE PTR [ecx+0x25036510],dl
  417ba2:	jo     0x417bf8
  417ba4:	popa   
  417ba5:	or     ah,BYTE PTR [ebx-0x13a1a48c]
  417bab:	cmp    eax,0xc6415e99
  417bb0:	shl    DWORD PTR [ecx],1
  417bb2:	bound  ebx,QWORD PTR ds:0xcd5f2760
  417bb8:	arpl   si,di
  417bba:	ret    0x2630
  417bbd:	ret    
  417bbe:	aam    0x76
  417bc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bc1:	push   ebx
  417bc2:	sbb    edi,DWORD PTR [edi]
  417bc4:	ds ret 
  417bc6:	inc    esp
  417bc7:	pop    edx
  417bc8:	sbb    DWORD PTR [eax-0x60],esi
  417bcb:	loopne 0x417c48
  417bcd:	imul   edx,DWORD PTR [esp+eiz*4-0x6],0x265cc70
  417bd5:	jae    0x417b8b
  417bd7:	mov    cl,0x4e
  417bd9:	ror    DWORD PTR [esi],0x73
  417bdc:	mov    ?,WORD PTR [eax]
  417bde:	mov    ch,0xcc
  417be0:	pop    edx
  417be1:	retf   
  417be2:	sub    ch,BYTE PTR [eax+0x2d]
  417be5:	push   ss
  417be6:	mov    al,0xb2
  417be8:	ret    
  417be9:	xchg   edi,eax
  417bea:	pop    eax
  417beb:	xor    DWORD PTR [edx-0x44],ecx
  417bee:	gs dec esp
  417bf0:	fst    QWORD PTR [edi+0x4d40c1c7]
  417bf6:	cs jns 0x417b97
  417bf9:	mov    ds:0x136f063a,eax
  417bfe:	mov    esp,0x3ace1d67
  417c03:	dec    eax
  417c04:	xchg   edx,eax
  417c05:	aad    0xc7
  417c07:	mov    ecx,0x9628a572
  417c0c:	push   ecx
  417c0d:	sub    dl,BYTE PTR [ebx-0x46]
  417c10:	pop    ecx
  417c11:	jg     0x417c71
  417c13:	mov    bl,0xbd
  417c15:	out    0x39,al
  417c17:	inc    edi
  417c18:	dec    ebp
  417c19:	leave  
  417c1a:	and    dl,dl
  417c1c:	xchg   esp,eax
  417c1d:	int3   
  417c1e:	ins    BYTE PTR es:[edi],dx
  417c1f:	jecxz  0x417ba4
  417c21:	in     eax,dx
  417c22:	cmp    bh,bh
  417c24:	adc    DWORD PTR [edi+0x1b],esp
  417c27:	jge    0x417bd3
  417c29:	push   0xffffffca
  417c2b:	addr16 jmp 0xdfec:0xa5a6c09
  417c33:	icebp  
  417c34:	ja     0x417be3
  417c36:	(bad)  
  417c37:	fst    QWORD PTR [ecx+eax*1]
  417c3a:	dec    ebx
  417c3b:	cmp    BYTE PTR [ebx+0x6c],dl
  417c3e:	xchg   ecx,edi
  417c40:	daa    
  417c41:	rcl    BYTE PTR [edx+0xf],1
  417c44:	push   esi
  417c45:	sbb    DWORD PTR [eax],edi
  417c47:	jae    0x417c9f
  417c49:	jle    0x417bf8
  417c4b:	int    0xdb
  417c4d:	dec    edi
  417c4e:	mov    dl,0x9
  417c50:	ss jmp 0x417c67
  417c53:	add    ebp,esp
  417c55:	dec    esi
  417c56:	nop
  417c57:	dec    ecx
  417c58:	lds    eax,FWORD PTR [esi+0x1f]
  417c5b:	loope  0x417c76
  417c5d:	fcom   DWORD PTR [ecx-0x36d41bad]
  417c63:	and    al,0xb4
  417c65:	mov    BYTE PTR [edi],dl
  417c67:	imul   BYTE PTR [edi-0x657d241f]
  417c6d:	sbb    DWORD PTR [edi],eax
  417c6f:	sbb    DWORD PTR [eax-0x14dd72c2],edx
  417c75:	shr    DWORD PTR [esi],0x19
  417c78:	idiv   DWORD PTR ss:[edi+0x3055dd7f]
  417c7f:	or     eax,0x78fd0772
  417c84:	aaa    
  417c85:	fist   WORD PTR [ecx+esi*2]
  417c88:	push   esp
  417c89:	sub    eax,0x84f63da3
  417c8e:	inc    esi
  417c8f:	sub    BYTE PTR [edx+eiz*4],dh
  417c92:	call   0x5a64:0x4c3a23c8
  417c99:	pop    edx
  417c9a:	pop    ebx
  417c9b:	add    ch,BYTE PTR [esi-0x375ef9aa]
  417ca1:	pop    es
  417ca2:	js     0x417cc4
  417ca4:	jl     0x417cb1
  417ca6:	cdq    
  417ca7:	pop    eax
  417ca8:	mov    ecx,0xbc056369
  417cad:	jl     0x417cda
  417caf:	sub    al,0xad
  417cb1:	and    DWORD PTR [ebx*8-0x33f1f0e5],ecx
  417cb8:	imul   ecx,DWORD PTR [edx+0x41688086],0xc3f1990e
  417cc2:	sub    al,0xf9
  417cc4:	sbb    eax,0xbed4560f
  417cc9:	daa    
  417cca:	adc    esi,DWORD PTR [eax-0x36]
  417ccd:	aad    0x52
  417ccf:	(bad)  
  417cd0:	jecxz  0x417cdb
  417cd2:	jl     0x417c5a
  417cd4:	rcl    DWORD PTR [ebp-0x5ed5125a],0xe
  417cdb:	fcom   DWORD PTR [ecx]
  417cdd:	enter  0xe610,0x46
  417ce1:	pop    ds
  417ce2:	xchg   ebp,eax
  417ce3:	mov    ah,0xb4
  417ce5:	jmp    DWORD PTR [edi+0x13]
  417ce8:	(bad)  
  417cea:	(bad)  
  417cec:	pop    ebp
  417ced:	adc    edi,DWORD PTR [edi-0x33ff565b]
  417cf3:	push   ebx
  417cf4:	xchg   ebp,eax
  417cf5:	pusha  
  417cf6:	inc    eax
  417cf7:	cmp    DWORD PTR [edx-0x510ecfc5],esp
  417cfd:	mov    al,ds:0x3dee7fb7
  417d02:	dec    edx
  417d03:	imul   ebp,DWORD PTR ds:0x84f08c47,0xdad6da19
  417d0d:	sahf   
  417d0e:	jmp    0xcc9ffc35
  417d13:	mov    eax,0xd36a9424
  417d18:	rcr    BYTE PTR [edx-0x4f4b16af],cl
  417d1e:	inc    edi
  417d1f:	out    dx,eax
  417d20:	push   ecx
  417d21:	or     al,dh
  417d23:	xchg   ebx,eax
  417d24:	push   esi
  417d25:	jge    0x417cca
  417d27:	sbb    DWORD PTR [ebx+0x28],ebx
  417d2a:	and    BYTE PTR [edx],ah
  417d2c:	cmc    
  417d2d:	mov    bl,0x95
  417d2f:	fbld   TBYTE PTR [esi]
  417d31:	adc    DWORD PTR [edi+0xa8e6a93],esi
  417d37:	jge    0x417d9f
  417d39:	outs   dx,BYTE PTR ds:[esi]
  417d3a:	mov    ebx,0xa495fc0d
  417d3f:	adc    edi,esi
  417d41:	mov    al,ds:0xe94772e2
  417d46:	push   esp
  417d47:	cmp    BYTE PTR [ebx],0x4c
  417d4a:	mov    dh,0xe0
  417d4c:	ret    0x6eac
  417d4f:	pop    es
  417d50:	pop    es
  417d51:	lods   eax,DWORD PTR ds:[esi]
  417d52:	fcom   DWORD PTR [edi-0x55a85f0d]
  417d58:	bound  ebp,QWORD PTR [esi+0x33]
  417d5b:	rcl    BYTE PTR [ebx+ebx*1-0x40],0xba
  417d60:	std    
  417d61:	dec    ebp
  417d62:	mov    gs,WORD PTR [edx+0x55]
  417d65:	inc    ebp
  417d66:	ss scas eax,DWORD PTR es:[edi]
  417d68:	shl    DWORD PTR [esi],cl
  417d6a:	push   ss
  417d6b:	push   cs
  417d6c:	int    0x70
  417d6e:	pop    ss
  417d6f:	adc    BYTE PTR [ebp-0x68],cl
  417d72:	jge    0x417de1
  417d74:	in     al,dx
  417d75:	xlat   BYTE PTR ds:[ebx]
  417d76:	loop   0x417d7f
  417d78:	and    eax,0x56f6464a
  417d7d:	or     ah,bl
  417d7f:	mov    eax,ds:0xe4d71a86
  417d84:	push   ebx
  417d85:	or     bl,bh
  417d87:	add    DWORD PTR [ebx],eax
  417d89:	ret    
  417d8a:	or     eax,DWORD PTR ss:[edx]
  417d8d:	sub    BYTE PTR [ecx+esi*2+0x36],al
  417d91:	out    dx,eax
  417d92:	sahf   
  417d93:	or     ah,0xa0
  417d96:	js     0x417e17
  417d98:	push   edx
  417d99:	pop    eax
  417d9a:	into   
  417d9b:	push   DWORD PTR [ebx+esi*2+0x20]
  417d9f:	xor    eax,0xa056eeae
  417da4:	jle    0x417d2b
  417da6:	pushf  
  417da7:	sti    
  417da8:	xchg   edx,eax
  417da9:	mov    DWORD PTR [esi],esp
  417dab:	or     al,BYTE PTR [eax+0x5194436]
  417db1:	inc    ebp
  417db2:	adc    dh,cl
  417db4:	adc    al,0x6e
  417db6:	ja     0x417db8
  417db8:	scas   eax,DWORD PTR es:[edi]
  417db9:	inc    esp
  417dba:	repz and eax,0x886965
  417dc0:	adc    eax,0xfaaa39b6
  417dc5:	xchg   DWORD PTR [ecx-0x2c8025],edx
  417dcb:	dec    esp
  417dcc:	data16 icebp 
  417dce:	sbb    edi,DWORD PTR [ebp-0xcde7bb0]
  417dd4:	jmp    0x417d8a
  417dd6:	or     DWORD PTR [edx+ebx*2-0x11713a70],ebx
  417ddd:	pusha  
  417dde:	test   cl,bl
  417de0:	in     eax,dx
  417de1:	sub    esp,DWORD PTR ds:0xb113aa34
  417de7:	sbb    BYTE PTR [ebp+0x715d86fd],0xa4
  417dee:	in     eax,dx
  417def:	push   0xab6854d
  417df4:	jp     0x417e6b
  417df6:	ja     0x417d9c
  417df8:	push   0xffffffab
  417dfa:	shl    ebx,1
  417dfc:	xor    esp,0x31
  417dff:	mov    ah,dl
  417e01:	in     eax,dx
  417e02:	xchg   esp,eax
  417e03:	data16 and al,0x7e
  417e06:	cwde   
  417e07:	fcmovbe st,st(5)
  417e09:	mul    BYTE PTR [esi]
  417e0b:	pop    edx
  417e0c:	cmp    esi,0x374e0615
  417e12:	fsubrp st(3),st
  417e14:	cdq    
  417e15:	push   ss
  417e16:	les    ecx,FWORD PTR [eax-0x50b89e30]
  417e1c:	or     DWORD PTR [edi+eiz*4-0x4f1a93b9],0xadfc4bf
  417e27:	xchg   ecx,eax
  417e28:	mov    dl,0xcd
  417e2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e2b:	imul   esi,DWORD PTR [ebp+0x2f33417c],0xffffffd5
  417e32:	aaa    
  417e33:	psubb  mm2,mm2
  417e36:	aam    0xf0
  417e38:	xchg   ebx,eax
  417e39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e3a:	addr16 inc esp
  417e3c:	lock imul ebp,DWORD PTR [eax+0x245bf9af],0x31
  417e44:	stc    
  417e45:	cmp    eax,0xce8755ba
  417e4a:	mov    al,ds:0xe13eef47
  417e4f:	mov    WORD PTR [esi+0x60d007af],es
  417e55:	sub    ebx,DWORD PTR [esi+0x57257bcf]
  417e5b:	clc    
  417e5c:	inc    ecx
  417e5d:	fldcw  WORD PTR [ebx-0xe]
  417e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e61:	adc    al,BYTE PTR [edi]
  417e63:	leave  
  417e64:	(bad)  
  417e65:	push   ss
  417e66:	push   ecx
  417e67:	adc    BYTE PTR [eax+eax*2],dh
  417e6a:	fs das 
  417e6c:	sub    BYTE PTR [ebx+0x3f9ccae6],0x81
  417e73:	sbb    BYTE PTR [esi],0x1c
  417e76:	loopne 0x417e1d
  417e78:	clc    
  417e79:	push   es
  417e7a:	out    0x88,eax
  417e7c:	fsub   DWORD PTR [ebx-0x6ab23656]
  417e82:	(bad)  
  417e83:	adc    DWORD PTR [ebx],ebx
  417e85:	pop    ebp
  417e86:	imul   edx,DWORD PTR [edx-0x64],0xb84ff103
  417e8d:	(bad)  
  417e8e:	mov    WORD PTR [edx],ds
  417e90:	pop    esi
  417e91:	imul   ebp,DWORD PTR es:[ebx],0xffffffb1
  417e95:	and    DWORD PTR [esi-0x1e949025],esp
  417e9b:	inc    edx
  417e9c:	push   ebp
  417e9d:	in     al,0xe5
  417e9f:	out    dx,eax
  417ea0:	fcom   st(7)
  417ea2:	or     ch,BYTE PTR [edx+0x61]
  417ea5:	sub    al,0xba
  417ea7:	lds    ecx,FWORD PTR [edx]
  417ea9:	sub    bl,BYTE PTR [esi+esi*1]
  417eac:	push   es
  417ead:	push   ss
  417eae:	pop    ss
  417eaf:	dec    ebx
  417eb0:	mov    al,0x9c
  417eb2:	loope  0x417f02
  417eb4:	xor    DWORD PTR [edi+0x50999549],ebp
  417eba:	adc    eax,DWORD PTR [edx+ecx*2]
  417ebd:	xchg   DWORD PTR [eax+0x2c73c2f8],ecx
  417ec3:	hlt    
  417ec4:	jg     0x417e84
  417ec6:	xor    cl,BYTE PTR [ecx-0x118f54fa]
  417ecc:	jg     0x417efe
  417ece:	in     al,0xa7
  417ed0:	retf   
  417ed1:	stc    
  417ed2:	loopne 0x417f07
  417ed4:	cmp    dl,ah
  417ed6:	sbb    eax,0x4438832
  417edb:	cmp    BYTE PTR [edi-0xce41f78],ah
  417ee1:	xchg   DWORD PTR [esi-0x50],esp
  417ee4:	dec    ebx
  417ee5:	adc    DWORD PTR [edi],edx
  417ee7:	aas    
  417ee8:	xchg   ebp,eax
  417ee9:	sahf   
  417eea:	js     0x417e8d
  417eec:	lahf   
  417eed:	push   esi
  417eee:	xchg   esp,eax
  417eef:	ffree  st(0)
  417ef1:	test   eax,0x56c24cad
  417ef6:	sar    BYTE PTR [ebx],cl
  417ef8:	inc    esi
  417ef9:	leave  
  417efa:	arpl   WORD PTR [esi+esi*8],dx
  417efd:	pushf  
  417efe:	push   ecx
  417eff:	nop
  417f00:	ret    0x1245
  417f03:	jmp    DWORD PTR [ebp+0x59fd8c29]
  417f09:	fadd   QWORD PTR [edi]
  417f0b:	sbb    DWORD PTR [edi+0x4e40419d],esp
  417f11:	ret    
  417f12:	out    dx,al
  417f13:	push   eax
  417f14:	pop    es
  417f15:	stos   BYTE PTR es:[edi],al
  417f16:	mov    edi,0xf1b8b8a1
  417f1b:	enter  0x7222,0x15
  417f1f:	fnstenv [edi-0x3318eec9]
  417f25:	and    DWORD PTR [ebx+0x1e1d63d1],esp
  417f2b:	xchg   ebp,eax
  417f2c:	mov    ecx,0x2b92155e
  417f31:	sbb    DWORD PTR [edx],ecx
  417f33:	cwde   
  417f34:	enter  0xf82d,0x90
  417f38:	test   al,0xe5
  417f3a:	and    DWORD PTR [edx+0x3aef4419],eax
  417f40:	sbb    edx,edx
  417f42:	mov    ch,0x89
  417f44:	test   al,0xd3
  417f46:	mov    esi,DWORD PTR [edx]
  417f48:	retf   
  417f49:	xor    DWORD PTR [esi+0x69],ebp
  417f4c:	push   ebx
  417f4d:	cwde   
  417f4e:	stos   DWORD PTR es:[edi],eax
  417f4f:	mov    dl,0xe9
  417f51:	ds dec ebx
  417f53:	dec    ebp
  417f54:	or     al,0x9d
  417f56:	xchg   ebp,eax
  417f57:	repnz xor DWORD PTR [edx+0x4e],0x17
  417f5c:	icebp  
  417f5d:	je     0x417fb7
  417f5f:	lea    ebp,[ecx]
  417f61:	push   ecx
  417f62:	sahf   
  417f63:	scas   al,BYTE PTR es:[edi]
  417f64:	jb     0x417f54
  417f66:	adc    al,0xd1
  417f68:	mov    ds:0x2ba48e35,eax
  417f6d:	addr16 mov esp,es
  417f70:	outs   dx,BYTE PTR ds:[esi]
  417f71:	mov    ecx,0x7fd360f8
  417f76:	dec    esi
  417f77:	or     ecx,DWORD PTR [edi+0x64fc55e7]
  417f7d:	dec    ecx
  417f7e:	loope  0x417f64
  417f80:	and    eax,0x9ecc5d59
  417f85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f86:	pop    esp
  417f87:	sub    BYTE PTR [edi],al
  417f89:	cmp    eax,0xe4bf64bf
  417f8e:	xlat   BYTE PTR ds:[ebx]
  417f8f:	mov    dh,0xcb
  417f91:	pop    ds
  417f92:	inc    ebp
  417f93:	xchg   esp,eax
  417f94:	xchg   DWORD PTR [edi+0x11],edx
  417f97:	inc    esp
  417f98:	mov    bl,0xdc
  417f9a:	fstp   DWORD PTR [ebx-0x25]
  417f9d:	cs clc 
  417f9f:	inc    esp
  417fa0:	mov    eax,ds:0xb535253c
  417fa5:	inc    ebx
  417fa6:	push   eax
  417fa7:	ds xchg ebx,eax
  417fa9:	fimul  DWORD PTR [ecx-0x9]
  417fac:	push   ebp
  417fad:	adc    eax,0x869e424c
  417fb2:	mov    cl,0xee
  417fb4:	mov    ds,WORD PTR [ecx-0x28ca02fc]
  417fba:	sar    ah,cl
  417fbc:	mov    dl,0x26
  417fbe:	sub    esi,edi
  417fc0:	or     dl,ch
  417fc2:	jecxz  0x41801d
  417fc4:	dec    ecx
  417fc5:	push   ebp
  417fc6:	xlat   BYTE PTR ds:[ebx]
  417fc7:	jb     0x417f8f
  417fc9:	daa    
  417fca:	outs   dx,BYTE PTR cs:[esi]
  417fcc:	repz jnp 0x418033
  417fcf:	push   edx
  417fd0:	mov    al,0x5a
  417fd2:	or     eax,0xad32b790
  417fd7:	(bad)  
  417fd8:	mov    dl,0xa2
  417fda:	mov    eax,ds:0x2bfb078c
  417fdf:	imul   eax,edx,0x92772cb9
  417fe5:	lods   al,BYTE PTR ds:[esi]
  417fe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fe7:	mov    dh,0x3
  417fe9:	gs into 
  417feb:	sahf   
  417fec:	push   eax
  417fed:	xor    DWORD PTR [esi-0x49],ebp
  417ff0:	inc    ebp
  417ff1:	xor    ch,bh
  417ff3:	jae    0x417ff0
  417ff5:	test   ecx,edx
  417ff7:	aas    
  417ff8:	push   es
  417ff9:	cld    
  417ffa:	mov    ebp,0x219bca27
  417fff:	sub    ebp,DWORD PTR [esi]
  418001:	cmp    esi,DWORD PTR [edi+edi*1-0x7cae5a7b]
  418008:	adc    eax,edx
  41800a:	imul   ecx,ecx,0x75
  41800d:	xor    DWORD PTR [esi-0x2f76087e],eax
  418013:	addr16 pusha 
  418015:	mov    edx,0x62ab4a54
  41801a:	popf   
  41801b:	enter  0x1cb9,0xef
  41801f:	inc    edx
  418020:	mov    edi,0xfca2a7a8
  418025:	xlat   BYTE PTR ds:[ebx]
  418026:	inc    ebx
  418027:	inc    ebp
  418028:	cmc    
  418029:	dec    edx
  41802a:	sar    eax,0xec
  41802d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41802e:	or     al,0x9b
  418030:	pop    ebx
  418031:	das    
  418032:	gs fwait
  418034:	iret   
  418035:	arpl   cx,bp
  418037:	sbb    edx,esi
  418039:	sub    bh,BYTE PTR [ebp-0x2781075a]
  41803f:	aam    0xd0
  418041:	rcl    BYTE PTR [ebx+ebp*8+0x71351c39],1
  418048:	xlat   BYTE PTR ds:[ebx]
  41804a:	pop    ss
  41804b:	cmp    cl,BYTE PTR [edx+0x29]
  41804e:	sbb    eax,0x2bf2eb7
  418053:	shufps xmm5,XMMWORD PTR [ebp-0x4b],0x6f
  418058:	stos   BYTE PTR es:[edi],al
  418059:	mov    edx,0x62cdd0a7
  41805e:	pushf  
  41805f:	out    0xa,eax
  418061:	scas   al,BYTE PTR es:[edi]
  418062:	mov    ah,0xc5
  418064:	imul   ecx,ebx,0x4d3f1387
  41806a:	xchg   edx,eax
  41806b:	fs adc eax,0x3b373416
  418071:	ficomp WORD PTR [ecx-0x7f]
  418074:	cld    
  418075:	repnz push esp
  418077:	outs   dx,DWORD PTR ds:[esi]
  418078:	ret    
  418079:	xchg   edi,eax
  41807a:	push   ebx
  41807b:	sar    ch,1
  41807d:	frstor [ebp+0x104d7919]
  418083:	pop    edx
  418084:	add    eax,0x29cd318d
  418089:	hlt    
  41808a:	mov    esi,0x8361f320
  41808f:	xlat   BYTE PTR ds:[ebx]
  418090:	sub    bh,BYTE PTR [edi]
  418092:	push   ss
  418093:	jae    0x41806b
  418095:	add    esp,DWORD PTR [eax]
  418097:	xlat   BYTE PTR ds:[ebx]
  418098:	inc    eax
  418099:	(bad)  
  41809a:	hlt    
  41809b:	sub    BYTE PTR [ebp+0xf8fb56c],0x68
  4180a2:	mov    ebx,DWORD PTR [esi+0xf756764]
  4180a8:	mov    ecx,0x437616cc
  4180ad:	fst    DWORD PTR [ebx-0x547d8459]
  4180b3:	jne    0x41803f
  4180b5:	sbb    esp,DWORD PTR [ebp-0x4a]
  4180b8:	ss cs fwait
  4180bb:	push   ss
  4180bc:	adc    DWORD PTR [esi+eiz*2+0x16ca41d3],edx
  4180c3:	xor    DWORD PTR [edi+ebp*2],edi
  4180c6:	xor    eax,DWORD PTR ds:0x7dcca68
  4180cc:	outs   dx,BYTE PTR ds:[esi]
  4180cd:	bound  ecx,QWORD PTR [edx]
  4180cf:	fisub  WORD PTR [ecx+edi*2-0x548a3f0e]
  4180d6:	shl    BYTE PTR [esi],cl
  4180d8:	in     eax,dx
  4180d9:	and    al,0xce
  4180db:	cli    
  4180dc:	std    
  4180dd:	jae    0x418106
  4180df:	inc    ecx
  4180e0:	xlat   BYTE PTR ds:[ebx]
  4180e1:	stos   DWORD PTR es:[edi],eax
  4180e2:	push   es
  4180e3:	pop    ss
  4180e4:	in     al,0xd5
  4180e6:	(bad)
  4180e9:	out    dx,eax
  4180ea:	and    al,0x19
  4180ec:	add    BYTE PTR cs:[ebx+0x6e],ah
  4180f0:	sbb    bl,BYTE PTR [ecx-0x617bf80e]
  4180f6:	add    al,0x4c
  4180f8:	or     BYTE PTR [edx+eiz*4],ah
  4180fb:	pop    ds
  4180fc:	rcr    bl,cl
  4180fe:	mov    edx,0xf2dd864b
  418103:	ds mov esp,0x2392cbd8
  418109:	rep outs dx,DWORD PTR ds:[esi]
  41810b:	xchg   ecx,eax
  41810c:	scas   al,BYTE PTR es:[edi]
  41810d:	(bad)  
  41810e:	(bad)  
  41810f:	fisub  DWORD PTR ds:0x4bfc6471
  418115:	fsubr  st,st(0)
  418117:	cs test al,0x9
  41811a:	in     al,dx
  41811b:	adc    BYTE PTR [ebx],dl
  41811d:	rcr    BYTE PTR [ebp-0x40],1
  418120:	mov    esp,0x7e68a6de
  418125:	cwde   
  418126:	push   ebx
  418127:	shl    esp,cl
  418129:	xor    al,0x27
  41812b:	push   0xffffffab
  41812d:	sbb    eax,0x914cccb7
  418132:	dec    ebp
  418133:	pop    edi
  418134:	jmp    0x1a1d357f
  418139:	adc    BYTE PTR [eax-0x51d41398],bh
  41813f:	cld    
  418140:	jecxz  0x4181b6
  418142:	ss jecxz 0x4180f0
  418145:	iret   
  418146:	mov    ah,0xd7
  418148:	jnp    0x41815a
  41814a:	pop    edi
  41814b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41814c:	dec    ebx
  41814d:	push   ss
  41814e:	sbb    ebp,edx
  418150:	cmp    DWORD PTR [edx-0x3f],ebp
  418153:	retf   0x7210
  418156:	jmp    0x95a0:0xbe1c8c9d
  41815d:	push   ds
  41815e:	jne    0x41811f
  418160:	scas   eax,DWORD PTR es:[edi]
  418161:	sbb    DWORD PTR [ebp+0xe],esp
  418164:	sbb    al,0xa4
  418166:	add    BYTE PTR [ecx],ch
  418168:	sbb    DWORD PTR [edi+0x4d],0xdccbe52d
  41816f:	xor    eax,0x4b6aa779
  418174:	not    BYTE PTR [edx-0x299b7b2c]
  41817a:	mov    ss,WORD PTR [edi*8-0x128754cf]
  418181:	mov    dh,0x17
  418183:	xlat   BYTE PTR ds:[ebx]
  418184:	jl     0x4181a6
  418186:	ret    0x6197
  418189:	cli    
  41818a:	jg     0x41819e
  41818c:	pavgb  mm1,QWORD PTR [esi]
  41818f:	add    dl,BYTE PTR [eax+0x3decc551]
  418195:	packuswb mm3,QWORD PTR [ebp+0x1f]
  418199:	mov    DWORD PTR [eax-0x12d049aa],ecx
  41819f:	pop    eax
  4181a0:	add    al,0x88
  4181a2:	mov    ebx,0x478bd5b2
  4181a7:	mov    ch,0xfa
  4181a9:	or     eax,0xe707648f
  4181ae:	inc    edx
  4181af:	aad    0xd5
  4181b1:	pop    ss
  4181b2:	rol    DWORD PTR [edi+0x4613b144],cl
  4181b8:	(bad)  
  4181b9:	jecxz  0x418229
  4181bb:	xchg   edi,eax
  4181bc:	aad    0x40
  4181be:	push   ebx
  4181bf:	and    eax,0x8eef9157
  4181c4:	out    dx,eax
  4181c5:	or     DWORD PTR [ebx+0x27],ebx
  4181c8:	pop    ds
  4181c9:	dec    edi
  4181ca:	sbb    BYTE PTR [ecx+eax*4+0xf],0x30
  4181cf:	and    edx,DWORD PTR [ebp-0x946bbfe]
  4181d5:	jp     0x418225
  4181d7:	dec    ecx
  4181d8:	retf   0xd4
  4181db:	inc    esp
  4181dc:	jne    0x418185
  4181de:	lds    edx,FWORD PTR [edi-0x1f]
  4181e1:	jno    0x4181b3
  4181e3:	jmp    DWORD PTR [edx+0x18fa5e41]
  4181e9:	aam    0x8b
  4181eb:	cs gs mov bl,0x37
  4181ef:	hlt    
  4181f0:	or     BYTE PTR [edi],ch
  4181f2:	adc    ebx,DWORD PTR [eax]
  4181f4:	mov    eax,ds:0x6df22b99
  4181f9:	nop
  4181fa:	js     0x4181b3
  4181fc:	xchg   esp,eax
  4181fd:	push   ss
  4181fe:	arpl   WORD PTR [eax],bp
  418200:	test   edx,ebp
  418202:	mov    BYTE PTR [eax],bh
  418204:	dec    edx
  418205:	sti    
  418206:	sub    DWORD PTR [edx-0x3e03b4f1],edx
  41820c:	icebp  
  41820d:	inc    eax
  41820e:	aad    0x61
  418210:	or     BYTE PTR [ebx+eax*4],al
  418213:	pusha  
  418214:	stos   DWORD PTR es:[edi],eax
  418215:	retf   0x176d
  418218:	div    DWORD PTR [ecx]
  41821a:	outs   dx,BYTE PTR ds:[esi]
  41821b:	adc    dl,bh
  41821d:	jle    0x418260
  41821f:	idiv   cl
  418221:	pusha  
  418222:	pop    es
  418223:	ret    
  418224:	add    bl,dh
  418226:	mov    ecx,0x649381e7
  41822b:	pop    esp
  41822c:	or     BYTE PTR [eax+ecx*2],al
  41822f:	sbb    ah,BYTE PTR [ebp-0xea86c74]
  418235:	(bad)  
  418236:	cs test eax,0xb0eb72e8
  41823c:	cli    
  41823d:	lock repnz mov ecx,esp
  418241:	mov    edi,0x301d9722
  418246:	scas   al,BYTE PTR es:[edi]
  418247:	pop    ds
  418248:	arpl   WORD PTR [ecx],cx
  41824a:	mov    dh,0x31
  41824c:	adc    BYTE PTR [ecx-0x3f],ah
  41824f:	repnz lods eax,DWORD PTR ds:[esi]
  418251:	mov    al,ds:0x7817a5f5
  418256:	or     ah,dl
  418258:	ds cwde 
  41825a:	or     al,0xa0
  41825c:	sub    edx,DWORD PTR [edi+ebx*1+0x315adafb]
  418263:	daa    
  418264:	sub    cl,dh
  418266:	adc    DWORD PTR [edx-0x3b42791f],0xffffffa2
  41826d:	push   ss
  41826e:	pop    esi
  41826f:	jb     0x4182d5
  418271:	stos   DWORD PTR es:[edi],eax
  418272:	jmp    0xa188:0x6defc1ba
  418279:	push   0xffffff85
  41827b:	pop    edi
  41827c:	es mov ah,0x80
  41827f:	sar    BYTE PTR [ebx-0x2b],cl
  418282:	xchg   edi,ebp
  418284:	inc    esi
  418285:	stos   BYTE PTR es:[edi],al
  418286:	or     eax,0xaf674a2b
  41828b:	push   esi
  41828c:	out    dx,al
  41828d:	jp     0x418298
  41828f:	xlat   BYTE PTR ds:[ebx]
  418290:	jne    0x4182a6
  418292:	cmp    eax,0xfd19aa4c
  418297:	cmp    bh,ah
  418299:	push   0x50
  41829b:	aam    0x8
  41829d:	je     0x41825d
  41829f:	push   ebx
  4182a0:	jecxz  0x418239
  4182a2:	das    
  4182a3:	pop    edi
  4182a4:	mov    WORD PTR [ebx-0x4b4ef260],cs
  4182aa:	ins    DWORD PTR es:[edi],dx
  4182ab:	mov    ebx,DWORD PTR [ebx]
  4182ad:	repnz adc DWORD PTR fs:[esi],0x2f7eb27c
  4182b5:	fmul   QWORD PTR [esi]
  4182b7:	jnp    0x41824a
  4182b9:	inc    edx
  4182ba:	inc    ebp
  4182bb:	mov    ebp,0x392afef8
  4182c0:	fcom   st(2)
  4182c2:	lods   al,BYTE PTR ds:[esi]
  4182c3:	in     al,dx
  4182c4:	sub    al,dh
  4182c6:	mov    ?,WORD PTR [edx+0x11]
  4182c9:	jmp    0xea5f:0x97d7f71e
  4182d0:	cwde   
  4182d1:	(bad)  [esi+edx*1+0x1e8b7758]
  4182d8:	enter  0x591,0xc9
  4182dc:	inc    esi
  4182dd:	xor    edi,edx
  4182df:	sbb    ch,BYTE PTR [esp+eiz*8]
  4182e2:	fs data16 jns 0x41828d
  4182e6:	adc    bh,ch
  4182e8:	dec    esp
  4182e9:	pop    ss
  4182ea:	stc    
  4182eb:	test   esi,edi
  4182ed:	mov    ds:0xd11a52e9,al
  4182f2:	cs sahf 
  4182f4:	push   ss
  4182f5:	stos   BYTE PTR es:[edi],al
  4182f6:	mov    dh,0x4d
  4182f8:	inc    esi
  4182f9:	xchg   ecx,eax
  4182fa:	xchg   DWORD PTR [esi+eiz*2],edx
  4182fd:	or     ebp,DWORD PTR [eax+0x456420f5]
  418303:	scas   al,BYTE PTR es:[edi]
  418304:	cmc    
  418305:	mov    cs:0x9bb37ec1,al
  41830b:	std    
  41830c:	pop    ds
  41830d:	sbb    ebx,DWORD PTR [ecx-0x5e]
  418310:	cmp    BYTE PTR [edi-0x684286ff],0x2c
  418317:	dec    esi
  418318:	or     al,0x2a
  41831a:	jo     0x418365
  41831c:	jns    0x4182be
  41831e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41831f:	leave  
  418320:	in     eax,0x27
  418322:	(bad)  
  418323:	pop    esi
  418324:	pop    edi
  418325:	jp     0x4182f8
  418327:	stc    
  418328:	mov    bl,0x7c
  41832a:	call   0x151c:0xf43f6f9
  418331:	je     0x4182f5
  418333:	test   eax,0xd0b5813a
  418338:	push   ecx
  418339:	push   esp
  41833a:	sbb    eax,0x16eea1a1
  41833f:	cmp    eax,0x398cb747
  418344:	xor    eax,0x77058bf7
  418349:	cmp    al,0xca
  41834b:	mov    esi,0x267107e6
  418350:	popa   
  418351:	fadd   DWORD PTR [edi+0x29d3e306]
  418357:	mov    ds:0xfe7a555d,eax
  41835c:	stc    
  41835d:	xor    edi,ecx
  41835f:	xor    BYTE PTR [esi-0x69],0x68
  418363:	mov    cl,0x27
  418365:	mov    edx,0xe8b2ba24
  41836a:	int3   
  41836b:	pop    edi
  41836c:	or     ecx,DWORD PTR [eax-0x3b2fb235]
  418372:	cld    
  418373:	push   ebx
  418374:	fimul  WORD PTR ds:0x2a52dbe2
  41837a:	adc    ebp,esi
  41837c:	cmp    ebp,esp
  41837e:	ds fcmovnbe st,st(3)
  418381:	dec    edi
  418382:	xchg   esi,eax
  418383:	sub    bh,BYTE PTR [ecx+0x7f]
  418386:	mov    cl,0xcb
  418388:	pop    ss
  418389:	mov    BYTE PTR [edi-0x25],cl
  41838c:	mov    ds:0xe2022650,eax
  418391:	pop    esp
  418392:	imul   ecx,edx,0x13
  418395:	loopne 0x4183cc
  418397:	xlat   BYTE PTR ds:[ebx]
  418398:	outs   dx,BYTE PTR ds:[esi]
  418399:	mov    eax,DWORD PTR [eax]
  41839b:	sbb    eax,0xe81461ee
  4183a0:	jge    0x41841e
  4183a2:	adc    bh,BYTE PTR [edx]
  4183a4:	and    al,0xcb
  4183a6:	inc    esi
  4183a7:	sub    BYTE PTR [ebx-0x2d295064],cl
  4183ad:	mov    ch,0x6c
  4183af:	call   0xd4cec56d
  4183b4:	in     al,dx
  4183b5:	jns    0x6cba2028
  4183bb:	pop    ebx
  4183bc:	or     DWORD PTR ds:0x2a0fcb02,esp
  4183c2:	push   esp
  4183c3:	ficom  DWORD PTR [ecx]
  4183c5:	repnz xchg ecx,eax
  4183c7:	jnp    0x4183d2
  4183c9:	jle    0x4183a0
  4183cb:	adc    DWORD PTR [ebx-0xb],edi
  4183ce:	popf   
  4183cf:	cmp    ebx,DWORD PTR [ebx-0x69]
  4183d2:	pop    es
  4183d3:	jnp    0x41844c
  4183d5:	clc    
  4183d6:	(bad)  
  4183d7:	repz jmp 0x1f74:0x21d46fdb
  4183df:	lods   al,BYTE PTR ds:[esi]
  4183e0:	jp     0x418446
  4183e2:	sahf   
  4183e3:	shr    BYTE PTR [ebp-0x65887fda],1
  4183e9:	(bad)  
  4183ea:	cmp    al,dl
  4183ec:	ss push ss
  4183ee:	jno    0x4183c4
  4183f0:	fdivr  DWORD PTR [edx+0x5e7ab62c]
  4183f6:	fwait
  4183f7:	dec    ebx
  4183f8:	cwde   
  4183f9:	push   ebx
  4183fa:	mov    eax,0xdad4a547
  4183ff:	out    dx,al
  418400:	adc    eax,0x74d82e34
  418405:	mov    dh,0x7e
  418407:	jno    0x4183e3
  418409:	mov    edx,DWORD PTR [esp+eiz*4]
  41840c:	xchg   esp,eax
  41840d:	retf   
  41840e:	scas   eax,DWORD PTR es:[edi]
  41840f:	pushf  
  418410:	jno    0x4183f2
  418412:	add    BYTE PTR [edx],cl
  418414:	sub    BYTE PTR [ebx-0x1cc1d54c],0xe2
  41841b:	add    al,0xee
  41841d:	fcomp  QWORD PTR [ecx]
  41841f:	ret    0xe2d4
  418422:	xchg   ecx,eax
  418423:	sub    eax,0xb1169cfe
  418428:	arpl   WORD PTR [ebp+0x6429ec53],si
  41842e:	xor    DWORD PTR [esi],eax
  418430:	inc    ebx
  418431:	cmc    
  418432:	daa    
  418433:	mov    al,0x43
  418435:	push   ebp
  418436:	mov    edi,0xa663004b
  41843b:	jmp    0x418480
  41843d:	add    al,0x86
  41843f:	(bad)  
  418440:	cs fisttp QWORD PTR es:[esp+ecx*4]
  418445:	repz int3 
  418447:	cdq    
  418448:	mov    ah,0xa4
  41844a:	cld    
  41844b:	mov    esp,0xba4d75cb
  418450:	mov    edx,gs
  418452:	xchg   ecx,eax
  418453:	icebp  
  418454:	xor    al,0x5c
  418456:	sbb    ebp,edi
  418458:	in     eax,dx
  418459:	lds    edi,FWORD PTR ds:0xdc9cf143
  41845f:	dec    edi
  418460:	sub    eax,0xb58084bb
  418465:	cmp    ebp,DWORD PTR [eax-0x51]
  418468:	test   esi,ebp
  41846a:	sar    BYTE PTR [eax-0x7b],0xaf
  41846e:	ins    DWORD PTR es:[edi],dx
  41846f:	cs scas eax,DWORD PTR es:[edi]
  418471:	fbstp  TBYTE PTR [esi+0x26435962]
  418477:	dec    ebx
  418478:	sbb    BYTE PTR [edi+edi*2+0x75],cl
  41847c:	shl    DWORD PTR [esi],1
  41847e:	popf   
  41847f:	(bad)  
  418480:	sahf   
  418481:	jl     0x4184cc
  418483:	ds pop ecx
  418485:	lahf   
  418486:	inc    eax
  418487:	imul   edx,ebx,0x95a44d87
  41848d:	pop    esp
  41848e:	push   ss
  41848f:	jle    0x4184d7
  418491:	xor    BYTE PTR [ebx-0x17],0xf5
  418495:	fistp  DWORD PTR [eax]
  418497:	pop    edx
  418498:	inc    esi
  418499:	or     dh,bl
  41849b:	jmp    ecx
  41849d:	in     al,dx
  41849e:	retf   
  41849f:	pop    eax
  4184a0:	push   ebp
  4184a1:	inc    edi
  4184a2:	cmp    BYTE PTR [esi-0x3af84b0a],0x95
  4184a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184aa:	sub    ecx,DWORD PTR [esi]
  4184ac:	and    ebx,DWORD PTR [eax+0x17]
  4184af:	mov    ds:0x740a4d6c,al
  4184b4:	dec    esi
  4184b5:	jmp    0x418526
  4184b7:	jmp    0x1465:0xfeefbee7
  4184be:	cli    
  4184bf:	mov    ch,cl
  4184c1:	or     ch,BYTE PTR [eax]
  4184c3:	cmp    eax,0xe16c3168
  4184c8:	jbe    0x4184c0
  4184ca:	cdq    
  4184cb:	jmp    0x4aac:0xa061bce0
  4184d2:	test   al,0xd4
  4184d4:	mov    dh,0x32
  4184d6:	jge    0x4184db
  4184d8:	and    DWORD PTR [esi-0x48],ebp
  4184db:	pop    ds
  4184dc:	or     BYTE PTR [ebp+0x26],ch
  4184df:	dec    ebp
  4184e0:	push   ecx
  4184e1:	fisttp DWORD PTR [esi+0x7af8788d]
  4184e7:	mov    esp,0x4a4ca13f
  4184ec:	xor    BYTE PTR [edx-0x1505b6a2],dl
  4184f2:	in     al,dx
  4184f3:	test   DWORD PTR [esi],eax
  4184f5:	iret   
  4184f6:	test   al,0xb8
  4184f8:	mov    DWORD PTR [ebx-0x3b],edi
  4184fb:	(bad)  [edi-0x3]
  4184fe:	ss push cs
  418500:	lea    ecx,[edi-0x76]
  418503:	mov    bh,0xb6
  418505:	repz std 
  418507:	and    ebp,0x57
  41850a:	dec    edx
  41850b:	(bad)
  41850f:	pop    es
  418510:	mov    esp,0x78a9d7b6
  418515:	or     BYTE PTR [edx-0x635ff8a5],dh
  41851b:	cmp    ch,cl
  41851d:	pop    edi
  41851e:	sub    ecx,ecx
  418520:	xlat   BYTE PTR ds:[ebx]
  418521:	and    al,BYTE PTR [esi+0x1e]
  418524:	pop    ds
  418525:	out    dx,al
  418526:	imul   esi,DWORD PTR [eax+0x3f],0x95d57258
  41852d:	hlt    
  41852e:	xor    ebx,DWORD PTR ds:0x644d57e4
  418534:	cmc    
  418535:	mov    cl,0x98
  418537:	imul   ebp,DWORD PTR [eax],0x14
  41853a:	dec    ebx
  41853b:	cwde   
  41853c:	jbe    0x418596
  41853e:	push   edx
  41853f:	(bad)  
  418540:	bound  edx,QWORD PTR [edx+0x57]
  418543:	(bad)  
  418545:	fdiv   DWORD PTR [ebx+ecx*2-0x1806defa]
  41854c:	pop    ebp
  41854d:	mov    edi,0xe66a3ed0
  418552:	cdq    
  418553:	cmp    eax,DWORD PTR [ebp+0x6c3a6a78]
  418559:	rcr    BYTE PTR [ebx-0x53],cl
  41855c:	mov    esp,0x11cc4be7
  418561:	fist   DWORD PTR [ebp+0x269e3862]
  418567:	lds    edx,FWORD PTR [esp+esi*4-0x28d50bed]
  41856e:	aaa    
  41856f:	or     ch,ch
  418571:	les    ecx,FWORD PTR cs:[ebp-0x32412b3c]
  418578:	adc    BYTE PTR [ecx],dh
  41857a:	(bad)  
  41857b:	jecxz  0x41859d
  41857d:	aas    
  41857e:	mov    ds:0xf7d96feb,al
  418583:	xor    DWORD PTR [ebp+eiz*4-0x6472727b],0x3c
  41858b:	adc    eax,0xf9b9d681
  418590:	push   ebp
  418591:	(bad)  
  418592:	jge    0x41860d
  418594:	xchg   esp,eax
  418595:	fnsave [edi+esi*8]
  418598:	dec    eax
  418599:	daa    
  41859a:	hlt    
  41859b:	mov    ds:0xc483b76,eax
  4185a0:	cld    
  4185a1:	lock (bad) 
  4185a4:	mov    DWORD PTR [esi],edi
  4185a6:	mov    ebx,0x72be36ab
  4185ab:	es or  eax,0x55b45ba7
  4185b1:	jge    0x41858f
  4185b3:	clc    
  4185b4:	fcomp  QWORD PTR [edi+0x4e8ddd24]
  4185ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185bb:	or     BYTE PTR ds:0x732708ca,ch
  4185c1:	fist   DWORD PTR [eax-0x41718024]
  4185c7:	pusha  
  4185c8:	pop    esp
  4185c9:	pop    es
  4185ca:	test   eax,0x73a30d88
  4185cf:	mov    edi,0xdf4c809
  4185d4:	cmc    
  4185d5:	in     al,dx
  4185d6:	sub    DWORD PTR ds:0xe51fb4f5,ebp
  4185dc:	jno    0x41864a
  4185de:	xchg   ebx,eax
  4185df:	sub    bl,BYTE PTR [esi+ebp*2]
  4185e2:	mov    eax,ds:0x71d46302
  4185e7:	sub    bl,dl
  4185e9:	jmp    0x1c9579e4
  4185ee:	test   BYTE PTR [eax+0x4cf2e760],dh
  4185f4:	pop    eax
  4185f5:	mov    al,0xc7
  4185f7:	das    
  4185f8:	cli    
  4185f9:	int3   
  4185fa:	in     al,0xfc
  4185fc:	jne    0x418647
  4185fe:	test   eax,0x50e8882e
  418603:	jmp    0xb1ff7fa
  418608:	daa    
  418609:	jbe    0x4185cd
  41860b:	mov    eax,gs
  41860d:	imul   esi,DWORD PTR [eax-0x47],0xffffffbe
  418611:	cmp    DWORD PTR [esi+ebp*8-0x782f5934],ecx
  418618:	inc    edx
  418619:	adc    al,0x5c
  41861b:	repz mov cl,cl
  41861e:	bound  eax,QWORD PTR [ecx+0x5f49fde3]
  418624:	pop    eax
  418625:	ins    BYTE PTR es:[edi],dx
  418626:	outs   dx,BYTE PTR ds:[esi]
  418627:	or     eax,0xbf6e684a
  41862c:	pop    edi
  41862d:	inc    ecx
  41862e:	popf   
  41862f:	dec    eax
  418630:	test   BYTE PTR [esp+ebp*8-0x3d],0xc0
  418635:	xor    al,0x4e
  418637:	push   ebp
  418638:	arpl   di,sp
  41863a:	inc    ebp
  41863b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41863c:	test   eax,0x7e2c1f16
  418641:	imul   ebp,DWORD PTR [eax+0x6e0f000e],0xf4460c14
  41864b:	cdq    
  41864c:	mov    al,0xe7
  41864e:	in     al,dx
  41864f:	dec    eax
  418650:	inc    edi
  418651:	push   es
  418652:	dec    ebp
  418653:	(bad)  
  418654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418655:	rcl    BYTE PTR [esi-0x29],0x7
  418659:	add    eax,0xddc938e5
  41865e:	in     al,dx
  41865f:	and    DWORD PTR [ebx-0x3209e265],esp
  418665:	sub    al,0xab
  418667:	sbb    al,0xc6
  418669:	(bad)  
  41866a:	cmp    al,0xd
  41866c:	and    esi,DWORD PTR [ebp-0x4a]
  41866f:	push   edx
  418670:	lahf   
  418671:	das    
  418672:	inc    esp
  418673:	aad    0x67
  418675:	jl     0x418691
  418677:	xchg   ebx,eax
  418678:	(bad)  
  418679:	and    edx,DWORD PTR [ecx+0x1305a36d]
  41867f:	or     dl,ah
  418681:	test   ah,al
  418683:	test   DWORD PTR [esi],edx
  418685:	mov    al,ds:0xf4bc3518
  41868a:	cmp    eax,0xfaf0bfa4
  41868f:	xchg   ecx,eax
  418690:	in     al,0xcf
  418692:	daa    
  418693:	and    DWORD PTR [esi+ecx*1],esp
  418696:	mov    edi,0x16e55928
  41869b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41869c:	mov    ebx,0x9eac2538
  4186a1:	jecxz  0x4186d3
  4186a3:	adc    DWORD PTR [edi+0x4bbbdc3d],ebp
  4186a9:	dec    edi
  4186aa:	mov    eax,0xc35f5d1
  4186af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186b0:	adc    DWORD PTR [ebp+0x59983323],0xffffffa8
  4186b7:	sbb    ax,0xa300
  4186bb:	mov    ch,BYTE PTR [eax]
  4186bd:	fs mov ecx,0x423fbb1c
  4186c3:	in     eax,0x12
  4186c5:	out    0x23,eax
  4186c7:	sbb    BYTE PTR ds:0x8d2ff445,dl
  4186cd:	stos   DWORD PTR es:[edi],eax
  4186ce:	adc    BYTE PTR [eax],al
  4186d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186d1:	xlat   BYTE PTR ds:[ebx]
  4186d2:	(bad)  
  4186d3:	cmp    al,BYTE PTR [esi+ebp*2]
  4186d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186d7:	adc    eax,0x5038b6e
  4186dc:	adc    dh,cl
  4186de:	(bad)  [ecx]
  4186e0:	cmc    
  4186e1:	shl    DWORD PTR [esi+0x5bb70ed9],cl
  4186e7:	test   eax,0x9feb42b6
  4186ec:	mov    dh,0x2d
  4186ee:	fwait
  4186ef:	cmp    al,0x1
  4186f1:	mov    bl,0x62
  4186f3:	adc    DWORD PTR [eax-0x72],ebp
  4186f6:	add    eax,0x1f51d5c6
  4186fb:	jnp    0x41875b
  4186fd:	icebp  
  4186fe:	and    DWORD PTR ds:0x2d7680ab,ebp
  418704:	rol    DWORD PTR [edi-0x7],0x6c
  418708:	xor    edx,eax
  41870a:	lea    edx,[edx+ebx*1+0x3272e0]
  418711:	mov    DWORD PTR [ebp-0xc],edx
  418714:	mov    edx,DWORD PTR [ebp-0x10]
  418717:	xor    edx,eax
  418719:	add    edx,esi
  41871b:	jne    0x40f646
  418721:	jmp    0x41abbe
  418726:	mov    ecx,DWORD PTR [ebp-0x14]
  418729:	mov    DWORD PTR [ebp+0x8],ecx
  41872c:	jmp    0x4187a5
  418731:	mov    ecx,DWORD PTR [ebp+0x8]
  418734:	mov    edx,DWORD PTR [ebp-0x8]
  418737:	xor    ecx,eax
  418739:	xor    edx,eax
  41873b:	sub    ecx,edx
  41873d:	sub    ecx,esi
  41873f:	xor    ecx,eax
  418741:	mov    DWORD PTR [ebp+0x8],ecx
  418744:	mov    ecx,DWORD PTR [ebp+0x8]
  418747:	mov    edx,DWORD PTR [ebp-0x58]
  41874a:	add    ecx,0x5708f8
  418750:	imul   ecx,edx
  418753:	mov    DWORD PTR [ebp-0x58],ecx
  418756:	mov    ecx,DWORD PTR [ebp+0x8]
  418759:	mov    edx,DWORD PTR [ebp-0x54]
  41875c:	add    ecx,0x64f8da
  418762:	or     ecx,edx
  418764:	mov    DWORD PTR [ebp-0x54],ecx
  418767:	mov    ecx,DWORD PTR [ebp+0x8]
  41876a:	mov    edx,DWORD PTR [ebp-0x50]
  41876d:	add    ecx,0x242ebed
  418773:	xor    ecx,edx
  418775:	mov    DWORD PTR [ebp-0x50],ecx
  418778:	mov    ecx,DWORD PTR [ebp+0x8]
  41877b:	mov    edx,DWORD PTR [ebp-0x4c]
  41877e:	add    ecx,edi
  418780:	and    ecx,edx
  418782:	mov    DWORD PTR [ebp-0x4c],ecx
  418785:	mov    ecx,DWORD PTR [ebp+0x8]
  418788:	mov    edx,DWORD PTR [ebp-0x48]
  41878b:	lea    ecx,[edx+ecx*1+0x241fc1f]
  418792:	mov    DWORD PTR [ebp-0x48],ecx
  418795:	mov    ecx,DWORD PTR [ebp+0x8]
  418798:	mov    edx,0xfa5e15e2
  41879d:	sub    edx,ecx
  41879f:	add    edx,DWORD PTR [ebp-0x44]
  4187a2:	mov    DWORD PTR [ebp-0x44],edx
  4187a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4187a8:	xor    ecx,eax
  4187aa:	add    ecx,esi
  4187ac:	jne    0x418731
  4187b2:	jmp    0x41abca
  4187b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4187ba:	mov    edx,DWORD PTR [ebp-0x8]
  4187bd:	xor    ecx,eax
  4187bf:	xor    edx,eax
  4187c1:	sub    ecx,edx
  4187c3:	sub    ecx,esi
  4187c5:	xor    ecx,eax
  4187c7:	mov    DWORD PTR [ebp+0x8],ecx
  4187ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4187cd:	mov    edx,DWORD PTR [ebp-0x58]
  4187d0:	jmp    0x41ab56
  4187d5:	sub    eax,0x97a551eb
  4187da:	fwait
  4187db:	lods   eax,DWORD PTR ds:[esi]
  4187dc:	fistp  DWORD PTR [edx]
  4187de:	pop    ecx
  4187df:	imul   DWORD PTR [ecx]
  4187e1:	mov    WORD PTR [eax+0x34eb1fa1],ds
  4187e7:	jns    0x418863
  4187e9:	add    DWORD PTR [edi+0x7a],ebx
  4187ec:	jp     0x4187a2
  4187ee:	inc    ebx
  4187ef:	cli    
  4187f0:	fidivr WORD PTR [ecx-0x32]
  4187f3:	icebp  
  4187f4:	xchg   DWORD PTR [edx-0x10],edx
  4187f7:	and    al,0x35
  4187f9:	stc    
  4187fa:	pop    ss
  4187fb:	hlt    
  4187fc:	cwde   
  4187fd:	and    DWORD PTR [ecx+0x592b55f2],edi
  418803:	dec    ecx
  418804:	fstp   QWORD PTR [ecx+0x2fce9294]
  41880a:	sub    dl,BYTE PTR [edi+0x53]
  41880d:	lea    esi,[ebx]
  41880f:	aaa    
  418810:	sub    BYTE PTR [edx+0x462b3232],dl
  418816:	popa   
  418817:	lea    eax,[ebp-0x3c]
  41881a:	and    al,0x84
  41881c:	out    dx,al
  41881d:	(bad)  
  41881e:	pop    esp
  41881f:	sub    al,0x1b
  418821:	aad    0xb2
  418823:	mov    eax,0x3855be18
  418828:	aam    0x5f
  41882a:	arpl   WORD PTR [esi-0x7b],sp
  41882d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41882e:	mov    eax,ds:0xb862009c
  418833:	push   DWORD PTR [edx-0x3f342463]
  418839:	js     0x4188b4
  41883b:	sub    BYTE PTR [bx-0x40],0x4
  418840:	xchg   BYTE PTR [ebx+0x11],dh
  418843:	out    dx,eax
  418844:	inc    eax
  418845:	and    al,0xb6
  418847:	lea    ecx,[edx+0x21db2c01]
  41884d:	mov    BYTE PTR [ebp+0x3b],0x17
  418851:	jl     0x418865
  418853:	adc    al,0x9
  418855:	push   ecx
  418856:	jno    0x41885e
  418858:	in     eax,0x67
  41885a:	outs   dx,BYTE PTR ds:[si]
  41885c:	dec    esi
  41885d:	cmp    eax,0xee57964f
  418862:	ins    DWORD PTR es:[edi],dx
  418863:	and    eax,0x150777f7
  418868:	sbb    al,0x28
  41886a:	int    0xb6
  41886c:	sbb    al,BYTE PTR [eax-0x57771cea]
  418872:	rcr    DWORD PTR [edi-0x43eda35e],1
  418878:	aam    0x5e
  41887a:	xor    cl,BYTE PTR [esi+0x29a11911]
  418880:	cli    
  418881:	jnp    0x4188a4
  418883:	in     al,dx
  418884:	add    ch,BYTE PTR es:[edx]
  418887:	les    esi,FWORD PTR [ecx+0x51ba2947]
  41888d:	push   ebp
  41888e:	push   ss
  41888f:	in     al,dx
  418890:	bound  ebp,QWORD PTR [esi]
  418892:	ret    
  418893:	aad    0x26
  418895:	sub    al,0x6f
  418897:	ret    0xe2f5
  41889a:	xor    eax,0x9cc0afd1
  41889f:	(bad)  
  4188a0:	scas   eax,DWORD PTR es:[edi]
  4188a1:	sub    eax,0x81647402
  4188a6:	loopne 0x41885f
  4188a8:	sub    al,ch
  4188aa:	xchg   DWORD PTR [edx+0x647e6aae],ebx
  4188b0:	or     BYTE PTR ds:0xb4b589af,bh
  4188b6:	int    0xd6
  4188b8:	mov    edx,0xcfca562d
  4188bd:	jp     0x4188ee
  4188bf:	or     cl,dh
  4188c1:	cdq    
  4188c2:	imul   ebp,DWORD PTR [ebx],0xe2c3c709
  4188c8:	icebp  
  4188c9:	mov    BYTE PTR [ebx],dl
  4188cb:	cwde   
  4188cc:	inc    esp
  4188cd:	and    edx,edx
  4188cf:	(bad)  
  4188d1:	cmp    dl,BYTE PTR [ecx]
  4188d3:	(bad)  
  4188d5:	xor    dl,BYTE PTR [ebx+0x28]
  4188d8:	out    0xff,al
  4188da:	cmc    
  4188db:	inc    ebx
  4188dc:	pop    ds
  4188dd:	inc    esp
  4188de:	enter  0xe977,0x58
  4188e2:	mov    al,fs:0xac8fca44
  4188e8:	test   al,0x40
  4188ea:	push   edi
  4188eb:	xlat   BYTE PTR ds:[ebx]
  4188ec:	xor    al,0x7d
  4188ee:	lods   eax,DWORD PTR ds:[esi]
  4188ef:	inc    esi
  4188f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188f1:	push   0x1ac97492
  4188f6:	dec    esi
  4188f7:	and    DWORD PTR [esp+ebx*1-0x3f56710f],esi
  4188fe:	fs dec ecx
  418900:	inc    ecx
  418901:	pop    edx
  418902:	(bad)  
  418904:	mov    edx,0x20a5bb5
  418909:	loopne 0x4188ea
  41890b:	out    0x88,eax
  41890d:	add    eax,0x45917f62
  418912:	and    al,BYTE PTR [ebp+0x2f417a5]
  418918:	fidivr DWORD PTR [ecx]
  41891a:	dec    edi
  41891b:	and    DWORD PTR [ecx],esp
  41891d:	cld    
  41891e:	fidiv  DWORD PTR [edx-0x60]
  418921:	in     al,dx
  418922:	cdq    
  418923:	stos   BYTE PTR es:[edi],al
  418924:	mov    al,0xe3
  418926:	loop   0x4189a3
  418928:	push   0x91dbd178
  41892d:	xor    ch,BYTE PTR [edx-0x3c]
  418930:	lahf   
  418931:	mov    fs,ecx
  418933:	adc    eax,0xc75684dc
  418938:	std    
  418939:	mov    bl,0xf5
  41893b:	cmp    edx,DWORD PTR [ebp+0x28]
  41893e:	or     DWORD PTR [ebx+0x5e],edx
  418941:	xlat   BYTE PTR ds:[ebx]
  418942:	ins    DWORD PTR es:[edi],dx
  418943:	sub    eax,0x3b15a7f3
  418948:	inc    BYTE PTR [ebx+0x3d55e09d]
  41894e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41894f:	pusha  
  418950:	mov    ecx,ebp
  418952:	les    esi,FWORD PTR [ebx+0x142872ce]
  418958:	dec    esp
  418959:	gs sbb edi,eax
  41895c:	not    BYTE PTR [edx+0x21]
  41895f:	cld    
  418960:	dec    ebp
  418961:	(bad)  
  418963:	sub    eax,0x7bd98de7
  418968:	push   es
  418969:	retf   0x3cd9
  41896c:	jbe    0x4189a9
  41896e:	or     eax,0x4bf76d6a
  418973:	mov    bh,0xc5
  418975:	fsub   QWORD PTR [eax-0x502d9939]
  41897b:	or     eax,0x2ca613b8
  418980:	jmp    0x8548:0x6c50e0c7
  418987:	jne    0x418973
  418989:	xchg   ebx,eax
  41898a:	dec    ecx
  41898b:	push   ds
  41898c:	jae    0x4189df
  41898e:	mov    al,0xb7
  418990:	int3   
  418991:	or     BYTE PTR [eax],bl
  418993:	ins    DWORD PTR es:[edi],dx
  418994:	mov    ecx,gs
  418996:	jnp    0x41897c
  418998:	push   eax
  418999:	ins    BYTE PTR es:[edi],dx
  41899a:	jbe    0x418942
  41899c:	push   0xee883ca4
  4189a1:	jns    0x4189e9
  4189a3:	ins    DWORD PTR es:[edi],dx
  4189a4:	adc    edi,DWORD PTR [edi-0xa]
  4189a7:	pushf  
  4189a8:	xchg   edx,eax
  4189a9:	mov    bl,0x9f
  4189ab:	mov    BYTE PTR [ecx],ah
  4189ad:	fnstcw WORD PTR [ecx]
  4189af:	stos   DWORD PTR es:[edi],eax
  4189b0:	jb     0x41894e
  4189b2:	sub    BYTE PTR [ebp-0x58],dh
  4189b5:	add    ah,dh
  4189b7:	sbb    ebx,ecx
  4189b9:	lods   eax,DWORD PTR ds:[esi]
  4189ba:	ror    ecx,cl
  4189bc:	in     al,dx
  4189bd:	jg     0x418a0c
  4189bf:	xchg   sp,ax
  4189c1:	and    eax,0x1a472158
  4189c6:	xchg   esi,eax
  4189c7:	or     DWORD PTR [ebx-0x2ab6da41],ebx
  4189cd:	int3   
  4189ce:	mov    ds:0x645d2981,eax
  4189d3:	pusha  
  4189d4:	retf   
  4189d5:	sub    ebp,DWORD PTR [edi-0xb4599a5]
  4189db:	push   edi
  4189dc:	and    eax,0xe02bbf4a
  4189e1:	dec    edx
  4189e2:	hlt    
  4189e3:	jns    0x4189d1
  4189e5:	mov    al,0x9d
  4189e7:	sbb    eax,0x73b11a9c
  4189ec:	add    ebx,DWORD PTR [eax+0x651d7d9b]
  4189f2:	cmp    esi,DWORD PTR [esi]
  4189f4:	push   ecx
  4189f5:	jle    0x4189eb
  4189f7:	pop    esp
  4189f8:	push   edx
  4189f9:	aaa    
  4189fa:	inc    ebp
  4189fb:	sbb    esi,DWORD PTR [edi+0x697ac0dc]
  418a01:	jae    0x418995
  418a03:	push   ss
  418a04:	je     0x418a18
  418a06:	sbb    al,0x10
  418a08:	xchg   ebp,eax
  418a09:	mov    DWORD PTR [ebx+esi*8+0x99b1522],esp
  418a10:	adc    al,0x52
  418a12:	mov    BYTE PTR ss:[esp+ebp*8],dh
  418a16:	arpl   WORD PTR [ebx+0xa3bc4b9],bx
  418a1c:	enter  0xbcea,0x7
  418a20:	test   DWORD PTR [esi-0x6a],eax
  418a23:	dec    esi
  418a24:	mov    ds:0x32d13bfc,al
  418a29:	mov    BYTE PTR [ecx-0x2a],dl
  418a2c:	inc    esi
  418a2d:	push   ds
  418a2e:	xchg   edi,eax
  418a2f:	dec    edi
  418a30:	shl    DWORD PTR [eax+0x39],1
  418a33:	mov    gs:0x18ba859e,al
  418a39:	rol    BYTE PTR [ebx],0xfb
  418a3c:	fisubr WORD PTR [edi]
  418a3e:	mov    ds:0xbe742e79,eax
  418a43:	iret   
  418a44:	call   0x1228843b
  418a49:	add    DWORD PTR [edx+0x41],ecx
  418a4c:	mov    dl,BYTE PTR [ecx+0xd]
  418a4f:	pop    esi
  418a50:	scas   eax,DWORD PTR es:[edi]
  418a51:	bound  ebp,QWORD PTR [ebp+0x77]
  418a54:	ins    BYTE PTR es:[edi],dx
  418a55:	or     esp,eax
  418a57:	sub    eax,0xb6bd18f0
  418a5c:	jo     0x4189e4
  418a5e:	jge    0x418a25
  418a60:	mov    ebx,0xe575ff69
  418a65:	ret    
  418a66:	jno    0x418abd
  418a68:	add    DWORD PTR [ebx-0x44],esp
  418a6b:	inc    ebx
  418a6d:	cld    
  418a6e:	(bad)  
  418a6f:	jg     0x418aa1
  418a71:	(bad)  
  418a72:	mov    ecx,esp
  418a74:	lods   eax,DWORD PTR ds:[esi]
  418a75:	bnd jmp DWORD PTR [eax+0x3]
  418a79:	inc    ebp
  418a7a:	pop    edi
  418a7b:	lods   al,BYTE PTR ds:[esi]
  418a7c:	sub    ebx,DWORD PTR [ecx+0x74]
  418a7f:	mov    bh,0x35
  418a81:	xchg   ebx,eax
  418a82:	adc    al,0xff
  418a84:	fstp   DWORD PTR [ebp+0x32]
  418a88:	in     eax,0xa3
  418a8a:	push   esi
  418a8b:	mov    edx,0x52fe4b74
  418a90:	cmp    eax,0x90b09032
  418a95:	mov    ebp,DWORD PTR [ecx+0x70]
  418a98:	mov    ebx,0xa6cff6a6
  418a9d:	imul   ebp,ebp,0xb2e48008
  418aa3:	adc    al,0x6b
  418aa5:	bound  eax,QWORD PTR [eax+0x78bf4bc2]
  418aab:	dec    ebx
  418aac:	cmp    BYTE PTR [ecx],0xed
  418aaf:	out    0xbe,al
  418ab1:	xor    al,0x77
  418ab3:	push   ecx
  418ab4:	fisub  DWORD PTR [ebp-0x58]
  418ab7:	mov    esp,0x240f175e
  418abc:	call   0x6d3a517
  418ac1:	add    al,0xdf
  418ac3:	fnstenv [ecx]
  418ac5:	gs add eax,0xef1a96f4
  418acb:	inc    esi
  418acc:	adc    DWORD PTR [ebx],0xded36ad7
  418ad2:	sbb    BYTE PTR [ebx-0x3c61ca95],bl
  418ad8:	mov    eax,0x7bc76dff
  418add:	mov    ah,0xe3
  418adf:	push   ecx
  418ae0:	xchg   DWORD PTR [ebp-0x46],edi
  418ae3:	sub    al,BYTE PTR [eax]
  418ae5:	pusha  
  418ae6:	push   edi
  418ae7:	ret    
  418ae8:	dec    ebp
  418ae9:	xor    eax,0x7fb8c302
  418aee:	shl    DWORD PTR [esi],1
  418af0:	adc    ebp,DWORD PTR [eax]
  418af2:	fadd   DWORD PTR [esp+esi*4-0x51]
  418af6:	fisub  WORD PTR [ecx]
  418af8:	ror    bh,cl
  418afa:	outs   dx,DWORD PTR ds:[esi]
  418afb:	sub    bl,dl
  418afd:	(bad)  
  418afe:	push   eax
  418aff:	add    BYTE PTR [edx-0x35],dh
  418b02:	mov    ?,ebx
  418b04:	lahf   
  418b05:	or     al,0x56
  418b07:	add    ebx,edx
  418b09:	inc    ebp
  418b0a:	add    BYTE PTR [ecx],bh
  418b0c:	cwde   
  418b0d:	add    BYTE PTR [edx],0xcb
  418b10:	int    0x65
  418b12:	jne    0x418b3a
  418b14:	cmp    al,0x4a
  418b16:	dec    ebp
  418b17:	jnp    0x418aab
  418b19:	adc    esi,eax
  418b1b:	mov    bl,0x61
  418b1d:	out    dx,eax
  418b1e:	lods   eax,DWORD PTR ds:[esi]
  418b1f:	or     eax,0x9c891dc1
  418b24:	or     eax,0xfc36f662
  418b29:	into   
  418b2a:	or     DWORD PTR [ebp+0x44],ecx
  418b2d:	clc    
  418b2e:	push   edi
  418b2f:	sbb    ah,dh
  418b31:	xor    eax,0xe91c38df
  418b36:	sbb    DWORD PTR [esi+0x1ac629c1],edi
  418b3c:	es pop es
  418b3e:	or     edx,DWORD PTR [eax-0x38314aa0]
  418b44:	push   esi
  418b45:	rcr    edi,0xc1
  418b48:	and    BYTE PTR [ecx-0x53],0x42
  418b4c:	inc    eax
  418b4d:	mov    esp,0x2137451d
  418b52:	push   edi
  418b53:	es push ebx
  418b55:	call   0x114f:0xdd7160a0
  418b5c:	aam    0x19
  418b5e:	xchg   esi,eax
  418b5f:	stos   DWORD PTR es:[edi],eax
  418b60:	xor    al,0xd7
  418b62:	rcr    BYTE PTR [eax+0x52f836f0],1
  418b68:	inc    ecx
  418b69:	mov    edi,0xbe382859
  418b6e:	out    0x2a,eax
  418b70:	sub    edi,DWORD PTR [edx-0x2a7bf18d]
  418b76:	and    BYTE PTR [edx],bl
  418b78:	pop    eax
  418b79:	icebp  
  418b7a:	out    dx,al
  418b7b:	ss or  ecx,edx
  418b7e:	jge    0x418b25
  418b80:	pusha  
  418b81:	xchg   DWORD PTR [eax],ebp
  418b83:	push   0xffffffa6
  418b85:	test   DWORD PTR [ebx+0x438cc5f9],eax
  418b8b:	dec    edi
  418b8c:	jmp    0xa2d8:0xef1b457f
  418b93:	and    edx,DWORD PTR [ebx-0x198a3e97]
  418b99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b9a:	mov    ch,0x75
  418b9c:	xlat   BYTE PTR ds:[ebx]
  418b9d:	div    DWORD PTR [esi-0x4b]
  418ba0:	pop    ss
  418ba1:	jg     0x418b74
  418ba3:	jmp    0xa0ae:0xb7f6d0a0
  418baa:	and    ecx,ebp
  418bac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bad:	mov    dh,0xab
  418baf:	sbb    al,0xae
  418bb1:	in     eax,0x2d
  418bb3:	test   al,0xe7
  418bb5:	mov    ebx,0x66fce74b
  418bba:	call   0x83988c27
  418bbf:	loop   0x418ba4
  418bc1:	out    dx,eax
  418bc2:	cmp    BYTE PTR [eax+ecx*8-0x2fb74d4b],cl
  418bc9:	fwait
  418bca:	mov    eax,0xdae2781c
  418bcf:	adc    al,0x8f
  418bd1:	pop    ebx
  418bd2:	mov    al,0xa8
  418bd4:	test   BYTE PTR [esi+0x21],bh
  418bd7:	retf   
  418bd8:	std    
  418bd9:	mov    bh,0xc9
  418bdb:	sbb    ecx,DWORD PTR [ebx+0xd]
  418bde:	cwde   
  418bdf:	jb     0x418b7e
  418be1:	lods   al,BYTE PTR ds:[esi]
  418be2:	adc    eax,0x23077d7e
  418be7:	mov    ds:0xed6d9817,eax
  418bec:	test   eax,0x8461789d
  418bf1:	out    dx,al
  418bf2:	loop   0x418be9
  418bf4:	pusha  
  418bf5:	call   0xaee5:0x49dd6917
  418bfc:	mov    ebx,0xe93b5e6b
  418c01:	mov    bl,BYTE PTR [edi-0x8]
  418c04:	js     0x418c04
  418c06:	adc    eax,DWORD PTR [esp+ebx*4-0x5c9d99c9]
  418c0d:	adc    eax,0x585c592a
  418c12:	sahf   
  418c13:	sbb    BYTE PTR [ebp-0x1b],ah
  418c16:	outs   dx,DWORD PTR ds:[esi]
  418c17:	mov    cl,0x82
  418c19:	repz inc ecx
  418c1b:	(bad)  
  418c1c:	adc    DWORD PTR [esi+ebp*4+0x17],0xffffffd8
  418c21:	jmp    0x68d4bc95
  418c26:	popa   
  418c27:	sub    ah,ch
  418c29:	fwait
  418c2a:	mov    ds:0xb31d005c,eax
  418c2f:	bswap  edi
  418c31:	pop    eax
  418c32:	sub    DWORD PTR [edi-0x6b486f04],esp
  418c38:	div    DWORD PTR [esi]
  418c3a:	shr    DWORD PTR [ecx-0x58],0x6d
  418c3e:	add    BYTE PTR [edi-0x52],cl
  418c41:	inc    edi
  418c42:	in     al,0xe1
  418c44:	sub    esi,edi
  418c46:	adc    al,0x78
  418c48:	push   ecx
  418c49:	cmp    DWORD PTR [edx+0x5b236855],ecx
  418c4f:	(bad)  
  418c51:	sbb    bl,dl
  418c53:	das    
  418c54:	push   ebx
  418c55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c56:	jmp    0x1ea2f84e
  418c5b:	cmp    edi,DWORD PTR [esi-0x5c962f30]
  418c61:	mul    DWORD PTR [eax+0x4d89a45]
  418c67:	sbb    ebx,DWORD PTR [ebx+eax*4]
  418c6a:	mov    ebx,0xa3930ecc
  418c6f:	cmc    
  418c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c71:	sbb    ecx,eax
  418c73:	sub    dh,BYTE PTR [ebp+0x52]
  418c76:	pop    ss
  418c77:	pushw  ds
  418c79:	mov    ebx,0xa5f8d094
  418c7e:	mov    ebx,DWORD PTR [edx+0x26b75161]
  418c84:	enter  0x8d33,0x63
  418c88:	hlt    
  418c89:	shl    DWORD PTR [edx],0x5b
  418c8c:	in     eax,0xf2
  418c8e:	rol    BYTE PTR [esi-0x66],1
  418c91:	pop    esi
  418c92:	stos   DWORD PTR es:[edi],eax
  418c93:	mov    cl,0x8d
  418c95:	sahf   
  418c96:	icebp  
  418c97:	push   esi
  418c98:	out    dx,eax
  418c99:	pop    eax
  418c9a:	mov    ebp,0x8498584b
  418c9f:	repz adc al,0xb8
  418ca2:	sub    al,0x46
  418ca4:	(bad)  
  418ca5:	out    dx,eax
  418ca6:	inc    ebp
  418ca7:	adc    al,0x4c
  418ca9:	adc    DWORD PTR [ecx+eiz*8-0x7b8df4ef],ecx
  418cb0:	(bad)  
  418cb1:	aam    0x94
  418cb3:	cs add al,0x64
  418cb6:	out    0x11,eax
  418cb8:	jne    0x418d29
  418cba:	xchg   edi,eax
  418cbb:	fcmove st,st(7)
  418cbd:	sub    edi,DWORD PTR [ecx]
  418cbf:	sub    DWORD PTR [eax-0x14],0x64f62c5d
  418cc6:	sbb    ecx,eax
  418cc8:	lods   al,BYTE PTR ds:[esi]
  418cc9:	sahf   
  418cca:	mov    edi,0x2e2e2ce5
  418ccf:	push   ebx
  418cd0:	(bad)  
  418cd1:	or     esi,DWORD PTR [ecx-0xaa6ffcb]
  418cd7:	aas    
  418cd8:	xor    al,0x7
  418cda:	push   esp
  418cdb:	sbb    BYTE PTR [ebx+0xefb92b1],dl
  418ce1:	mov    ebx,0x85f1cc20
  418ce6:	mov    edi,0x7dbb1954
  418ceb:	idiv   BYTE PTR [ebp-0x5]
  418cee:	js     0x418cfb
  418cf0:	into   
  418cf1:	jle    0x418ca9
  418cf3:	inc    esp
  418cf4:	cmp    DWORD PTR [eax+0x36fc0a9c],esi
  418cfa:	xchg   edx,eax
  418cfb:	or     al,0x2a
  418cfd:	lods   eax,DWORD PTR ds:[esi]
  418cfe:	popa   
  418cff:	sub    eax,0xbfe9e5e1
  418d04:	in     eax,0xcd
  418d06:	hlt    
  418d07:	mov    BYTE PTR [esi-0x35479bfd],bl
  418d0d:	stos   DWORD PTR es:[edi],eax
  418d0e:	clc    
  418d0f:	ins    DWORD PTR es:[edi],dx
  418d10:	nop
  418d11:	(bad)  
  418d12:	mov    eax,ds:0x52d552a4
  418d17:	dec    esp
  418d18:	pusha  
  418d19:	push   ss
  418d1a:	rol    DWORD PTR [ecx+0x1b],0xfb
  418d1e:	xor    eax,0x687c4e4c
  418d23:	mov    al,BYTE PTR [eax]
  418d25:	test   BYTE PTR [ebp+eax*8-0x45255add],0x3c
  418d2d:	push   ds
  418d2e:	aam    0x79
  418d30:	out    dx,eax
  418d31:	adc    al,0xf8
  418d33:	in     al,dx
  418d34:	cmp    edi,DWORD PTR [esi-0x4c9bce3e]
  418d3a:	push   esi
  418d3b:	cs (bad) 
  418d3d:	retf   
  418d3e:	xor    al,0x98
  418d40:	pop    es
  418d41:	in     al,0x71
  418d43:	or     BYTE PTR [edx-0x2b368072],al
  418d49:	add    ebp,DWORD PTR [esi+edi*8]
  418d4c:	imul   eax,DWORD PTR [esi+0x40],0x2ce4bb81
  418d53:	push   ebp
  418d54:	mov    ah,0xb0
  418d56:	xor    al,0x92
  418d58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d59:	fidivr DWORD PTR [ebx+0x7]
  418d5c:	push   esi
  418d5d:	xchg   esi,eax
  418d5e:	aad    0xbe
  418d60:	and    eax,0x4c125b54
  418d65:	mov    esi,0x2b152055
  418d6a:	sti    
  418d6b:	stos   BYTE PTR es:[edi],al
  418d6c:	and    eax,0x98e232
  418d71:	jg     0x418d1f
  418d73:	push   esi
  418d74:	stos   DWORD PTR es:[edi],eax
  418d75:	popa   
  418d76:	push   ebp
  418d77:	aas    
  418d78:	cld    
  418d79:	mov    esp,0xc11bda95
  418d7e:	dec    esi
  418d7f:	out    0x83,al
  418d81:	call   0x1eca:0x7015ec8a
  418d88:	js     0x418e04
  418d8a:	inc    esp
  418d8b:	clc    
  418d8c:	and    dh,cl
  418d8e:	jnp    0x418d19
  418d90:	cmp    bh,BYTE PTR [ecx]
  418d92:	mov    ds:0xc73cabec,eax
  418d97:	enter  0x603a,0xdc
  418d9b:	jmp    0x5011ca94
  418da0:	and    dl,bl
  418da2:	cmp    DWORD PTR [ecx+eiz*2],0x43b757a
  418da9:	mov    al,0xd6
  418dab:	add    al,0xe
  418dad:	pop    es
  418dae:	jae    0x418ddc
  418db0:	pop    edi
  418db1:	xchg   edi,eax
  418db2:	aaa    
  418db3:	test   BYTE PTR [ebp-0xa],bl
  418db6:	in     eax,0x25
  418db8:	loop   0x418e05
  418dba:	stos   DWORD PTR es:[edi],eax
  418dbb:	mov    esp,0xafb44935
  418dc0:	sbb    esp,DWORD PTR [eax+edx*4]
  418dc3:	clc    
  418dc4:	js     0x418e33
  418dc6:	rcr    DWORD PTR [esi],1
  418dc8:	xor    eax,0x476fbd56
  418dcd:	pop    esi
  418dce:	out    0x7f,al
  418dd0:	fwait
  418dd1:	and    eax,ebx
  418dd3:	imul   edi,esp,0xd69c6fdc
  418dd9:	cmp    ebp,DWORD PTR [esi]
  418ddb:	imul   edi,DWORD PTR [eax],0x78397ea5
  418de1:	pusha  
  418de2:	cli    
  418de3:	add    eax,0x5c86c97d
  418de8:	or     eax,0xefccb06c
  418ded:	fwait
  418dee:	or     al,0x79
  418df0:	pusha  
  418df1:	jmp    0xae550971
  418df6:	retf   0x7658
  418df9:	pop    esi
  418dfa:	adc    ah,dl
  418dfc:	rcl    BYTE PTR [edx+0x2bda5a70],cl
  418e02:	std    
  418e03:	inc    edi
  418e04:	fisub  DWORD PTR [edi-0x7b]
  418e07:	mov    fs,WORD PTR [esi+eiz*2-0x513dcbff]
  418e0e:	xlat   BYTE PTR ds:[ebx]
  418e0f:	mov    esp,0xf4428b63
  418e14:	enter  0x3664,0xcf
  418e18:	dec    esi
  418e19:	loope  0x418e45
  418e1b:	fstp   DWORD PTR [edx]
  418e1d:	pop    esp
  418e1e:	hlt    
  418e1f:	cmp    ch,bh
  418e21:	(bad)  ds:0xebda69e3
  418e27:	stos   DWORD PTR es:[edi],eax
  418e28:	jl     0x418dc0
  418e2a:	sub    bl,bh
  418e2c:	jp     0x418e7e
  418e2e:	out    0xde,eax
  418e30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e31:	repz fwait
  418e33:	aam    0x48
  418e35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e36:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e38:	mov    BYTE PTR [esi+0x1f608e09],ah
  418e3e:	mov    cs,WORD PTR [edi-0xe]
  418e41:	repz jmp 0x418eb3
  418e44:	pusha  
  418e45:	lahf   
  418e46:	sub    dl,BYTE PTR [eax-0x51]
  418e49:	adc    al,BYTE PTR [esi+0x76]
  418e4c:	push   ds
  418e4d:	lock dec ebp
  418e4f:	xchg   edx,eax
  418e50:	sahf   
  418e51:	sbb    DWORD PTR [ecx+0x15a9f086],0xbce44fde
  418e5b:	rol    DWORD PTR [esi-0xa7b74d3],cl
  418e61:	iret   
  418e62:	mov    ds:0x1aa5076a,al
  418e67:	test   cl,al
  418e69:	(bad)  
  418e6a:	jmp    0xc5d72099
  418e6f:	retf   0xd5c1
  418e72:	stos   BYTE PTR es:[edi],al
  418e73:	fmul   st,st(2)
  418e75:	xchg   ecx,eax
  418e76:	push   cs
  418e77:	cmp    al,0x4e
  418e79:	dec    edx
  418e7a:	mov    esi,0x3d144849
  418e7f:	pop    eax
  418e80:	imul   esi,DWORD PTR [edi+0x65],0xffffffdd
  418e84:	out    0x12,eax
  418e86:	mov    DWORD PTR [edx-0x5ee2b91b],ecx
  418e8c:	mov    BYTE PTR [edi],cl
  418e8e:	push   ss
  418e8f:	(bad)  
  418e90:	push   ss
  418e91:	mov    esi,ecx
  418e93:	ins    DWORD PTR es:[edi],dx
  418e94:	jmp    0x418e45
  418e96:	jb     0x418e32
  418e98:	icebp  
  418e99:	fdivr  DWORD PTR [esi-0xed25ded]
  418e9f:	xchg   ebx,eax
  418ea0:	push   ebx
  418ea1:	stc    
  418ea2:	stc    
  418ea3:	dec    eax
  418ea5:	cmp    bl,dl
  418ea7:	(bad)  
  418eaa:	inc    esi
  418eab:	(bad)  
  418eac:	sbb    DWORD PTR cs:[ebp-0x45ba54c],edi
  418eb3:	mov    eax,0x33518b14
  418eb8:	lds    edx,FWORD PTR [edi+0x12396bb]
  418ebe:	push   esi
  418ebf:	(bad)  
  418ec1:	test   eax,0xb37471db
  418ec6:	inc    ecx
  418ec7:	or     DWORD PTR [esi-0x2d],ebx
  418eca:	test   DWORD PTR [eax-0x46],ebx
  418ecd:	push   0x37
  418ecf:	cmp    DWORD PTR [eax+0x32118447],edi
  418ed5:	(bad)  
  418ed6:	loopne 0x418e8e
  418ed8:	xchg   esi,eax
  418ed9:	sbb    DWORD PTR [ebx+0x19a7deb7],0xc3508977
  418ee3:	push   es
  418ee4:	jp     0x418f59
  418ee6:	and    eax,0xc238eb58
  418eeb:	shl    BYTE PTR [ebp+0x47],cl
  418eee:	cmp    BYTE PTR [esi-0x12],dh
  418ef1:	out    dx,al
  418ef2:	shl    DWORD PTR ds:[edi-0x33093164],cl
  418ef9:	xchg   BYTE PTR [edx+0x196615cf],dh
  418eff:	rcr    BYTE PTR [edx],0x1f
  418f02:	cwde   
  418f03:	xor    al,0x70
  418f05:	fcom   QWORD PTR [ecx+0x67e4563]
  418f0b:	pop    edx
  418f0c:	jns    0x418eb6
  418f0e:	(bad)
  418f12:	test   DWORD PTR [edx+eiz*2],ebp
  418f15:	fbld   TBYTE PTR [eax-0x77]
  418f18:	mov    edx,0xcf431e41
  418f1d:	and    dh,BYTE PTR [ecx-0x23351669]
  418f23:	inc    esp
  418f24:	fnstenv [ecx]
  418f26:	sbb    eax,0xf9077cd3
  418f2b:	fmulp  st(1),st
  418f2d:	adc    BYTE PTR [ecx],bh
  418f2f:	pop    ebx
  418f30:	push   esi
  418f31:	mov    ds:0xe39fea1a,al
  418f36:	test   BYTE PTR [ecx+0x7ec02ca3],0x2d
  418f3d:	mov    bh,bl
  418f3f:	lea    esi,[ebx-0x648cbc1]
  418f45:	rol    BYTE PTR [ebp-0x64a78d92],0xf3
  418f4c:	sub    BYTE PTR [edi+0x4e],dl
  418f4f:	js     0x418ee4
  418f51:	and    al,0x7d
  418f53:	stos   BYTE PTR es:[edi],al
  418f54:	lahf   
  418f55:	inc    ebx
  418f56:	mov    dl,0x1a
  418f58:	test   BYTE PTR [eax],0xc8
  418f5b:	xor    al,0x54
  418f5d:	xchg   ah,ch
  418f5f:	daa    
  418f60:	push   esi
  418f61:	pop    edx
  418f62:	nop    ecx
  418f65:	(bad)  
  418f66:	out    dx,al
  418f67:	push   esp
  418f68:	sub    bl,ah
  418f6a:	cmp    BYTE PTR [eax],dh
  418f6c:	adc    ebx,0xf58813a0
  418f72:	aaa    
  418f73:	out    0x73,al
  418f75:	sub    BYTE PTR [ecx+eiz*8],ch
  418f78:	sub    eax,0xd10de45d
  418f7d:	sub    ah,bh
  418f7f:	cmp    eax,esi
  418f81:	dec    edx
  418f82:	push   esi
  418f83:	sub    ch,BYTE PTR [esi-0x3a]
  418f86:	aaa    
  418f87:	not    DWORD PTR [ecx]
  418f89:	es dec ebp
  418f8b:	xor    ch,BYTE PTR [ecx-0x29b8923b]
  418f91:	mov    cl,0x71
  418f93:	in     al,dx
  418f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f95:	lock in al,dx
  418f97:	dec    edx
  418f98:	jp     0x418fb9
  418f9a:	sub    BYTE PTR fs:[edx-0x12b4a96d],bl
  418fa1:	mov    ecx,0x78bffc60
  418fa6:	dec    ebx
  418fa7:	mov    al,ds:0x2e11fbcf
  418fac:	pop    ecx
  418fad:	inc    esp
  418fae:	nop
  418faf:	into   
  418fb0:	call   0xf924:0x73aeacd6
  418fb7:	imul   eax,esi,0xe3d1e89d
  418fbd:	mov    bh,0xb2
  418fbf:	push   esi
  418fc0:	out    0x3,eax
  418fc2:	fld    DWORD PTR ds:0xadd4e5cd
  418fc8:	inc    ebp
  418fc9:	stos   DWORD PTR es:[edi],eax
  418fca:	add    DWORD PTR cs:[edx],ebx
  418fcd:	dec    ebp
  418fce:	inc    edi
  418fcf:	jmp    0x418f65
  418fd1:	mov    edi,0x22bb482b
  418fd6:	mov    bh,0xfc
  418fd8:	leave  
  418fd9:	enter  0x403c,0xa5
  418fdd:	push   edx
  418fde:	sub    dl,bh
  418fe0:	(bad)  
  418fe2:	(bad)  
  418fe3:	icebp  
  418fe4:	add    eax,0xad6149aa
  418fe9:	mov    esp,0xc029970b
  418fee:	lods   eax,DWORD PTR ds:[esi]
  418fef:	mov    eax,ds:0x671c1058
  418ff4:	cmp    DWORD PTR [edx-0x20],esi
  418ff7:	add    cl,cl
  418ff9:	and    BYTE PTR [ebp+0x54],cl
  418ffc:	add    eax,DWORD PTR [ebx-0x7]
  418fff:	xor    DWORD PTR [eax],ebp
  419001:	jmp    0x419060
  419003:	mov    dh,0xff
  419005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419006:	imul   ebp,edi,0xfffffff2
  419009:	adc    DWORD PTR [edx],edi
  41900b:	sar    BYTE PTR [ecx+0x464f6b60],0xc8
  419012:	mul    BYTE PTR [ecx+0x48aa0fac]
  419018:	adc    bh,BYTE PTR [edx]
  41901a:	icebp  
  41901b:	lss    edx,FWORD PTR [ebp+0x3e]
  41901f:	or     al,0xc6
  419021:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419022:	in     al,dx
  419023:	call   0x4fb5a606
  419028:	xor    al,0xf2
  41902a:	imul   ebp,DWORD PTR ds:0x27bd04e2,0x60
  419031:	arpl   WORD PTR ds:0x49f5b80a,bx
  419037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419038:	xchg   edi,eax
  419039:	xor    eax,0x12c62a8c
  41903e:	(bad)  
  41903f:	addr16 dec ebx
  419041:	jb     0x41904b
  419043:	outs   dx,DWORD PTR ds:[esi]
  419044:	cmp    DWORD PTR [esi+0x3b2250c8],ebp
  41904a:	push   es
  41904b:	repz dec ecx
  41904d:	lock push 0xffffff82
  419050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419051:	pop    ss
  419052:	fs push esi
  419054:	(bad)  
  419055:	scas   eax,DWORD PTR es:[edi]
  419056:	and    BYTE PTR [edi+0x7a],bh
  419059:	(bad)  
  41905a:	(bad)  
  41905c:	stos   BYTE PTR es:[edi],al
  41905d:	adc    eax,0x38bf400f
  419062:	fcomp  DWORD PTR [eax+0x23]
  419065:	lahf   
  419066:	int    0xa0
  419068:	jb     0x419085
  41906a:	mov    esp,0x45c36cd1
  41906f:	mov    bh,0xa3
  419071:	outs   dx,BYTE PTR ds:[esi]
  419072:	push   edi
  419073:	push   esp
  419074:	scas   al,BYTE PTR es:[edi]
  419075:	lahf   
  419076:	repz mov ds:0x7e7fdb9b,eax
  41907c:	lock aaa 
  41907e:	add    edx,DWORD PTR [edi+esi*2+0x5f]
  419082:	xor    eax,0xd3ba67a9
  419087:	es cld 
  419089:	and    ebp,ebp
  41908b:	dec    edx
  41908c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41908d:	cli    
  41908e:	push   ds
  41908f:	sub    edx,DWORD PTR [edi]
  419091:	sub    DWORD PTR [eax+0xc],ebx
  419094:	and    ch,0x2a
  419097:	push   edi
  419098:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41909a:	jns    0x419039
  41909c:	repnz xchg ecx,eax
  41909e:	xlat   BYTE PTR ds:[ebx]
  41909f:	add    BYTE PTR [eax+0x5c],0xd4
  4190a3:	push   esi
  4190a4:	pop    edi
  4190a5:	mov    edx,0x59eee098
  4190aa:	(bad)  
  4190ab:	sub    BYTE PTR [eax+0x4d4ca6da],ah
  4190b1:	xchg   edi,eax
  4190b2:	test   eax,0x45ebf4a
  4190b7:	retf   
  4190b8:	mov    bl,0xd
  4190ba:	push   edi
  4190bb:	push   eax
  4190bc:	add    al,0x76
  4190be:	xor    bh,BYTE PTR [esi-0x1e]
  4190c1:	jno    0x419048
  4190c3:	stc    
  4190c4:	in     eax,dx
  4190c5:	ss popa 
  4190c7:	mov    ah,0x4b
  4190c9:	test   DWORD PTR [ecx],esp
  4190cb:	dec    ebx
  4190cc:	inc    edi
  4190cd:	into   
  4190ce:	mov    ch,BYTE PTR [ecx+0x37]
  4190d1:	scas   al,BYTE PTR es:[edi]
  4190d2:	cmp    eax,0x62e1f96a
  4190d7:	cmp    dl,cl
  4190d9:	inc    edx
  4190da:	retf   
  4190db:	retf   0x2057
  4190de:	mov    esp,0x6b56dbe5
  4190e3:	mov    esp,0x75ee2c24
  4190e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190e9:	sbb    al,0xe5
  4190eb:	mov    al,0x17
  4190ed:	mov    al,ds:0x75b9973f
  4190f2:	test   BYTE PTR [ebx],al
  4190f4:	(bad)  
  4190f5:	int    0x2f
  4190f7:	or     BYTE PTR [edx],0x36
  4190fa:	or     ecx,DWORD PTR [edx]
  4190fc:	in     eax,dx
  4190fd:	xchg   ecx,eax
  4190fe:	lahf   
  4190ff:	jb     0x4190e3
  419101:	daa    
  419102:	je     0x419112
  419104:	addr16 dec edx
  419106:	push   esi
  419107:	icebp  
  419108:	jmp    0x4190b7
  41910a:	aas    
  41910b:	cmp    DWORD PTR [esi-0x6c],edi
  41910e:	sti    
  41910f:	cmp    DWORD PTR [edx+0x10],esp
  419112:	enter  0x6492,0xbb
  419116:	retf   0x596
  419119:	jecxz  0x4190f1
  41911b:	adc    esp,ebx
  41911d:	or     ch,BYTE PTR [ecx-0x6b]
  419120:	mov    BYTE PTR [ebp+0x74cab648],0x5e
  419127:	add    DWORD PTR [ebp-0x25],esp
  41912a:	repz stc 
  41912c:	imul   esp
  41912e:	sub    al,BYTE PTR [esi-0x1b]
  419131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419132:	dec    edx
  419133:	jecxz  0x419194
  419135:	adc    al,0x2c
  419137:	sub    eax,0x16d90f0a
  41913c:	out    0x3c,eax
  41913e:	fidivr DWORD PTR [esi+0x39]
  419141:	mov    ebp,0x81c22441
  419146:	push   ds
  419147:	es int 0x6b
  41914a:	sbb    eax,0xc82bd9c3
  41914f:	call   0x244:0xc323e620
  419156:	pop    es
  419157:	inc    ecx
  419158:	test   eax,0x1926667c
  41915d:	xchg   edi,eax
  41915e:	pusha  
  41915f:	jl     0x41913e
  419161:	lock jl 0x419124
  419164:	xchg   DWORD PTR [ebx-0x216cbe61],ebp
  41916a:	jp     0x4191bd
  41916c:	sbb    edi,esp
  41916e:	adc    al,0x76
  419170:	cmc    
  419171:	push   ds
  419172:	out    0x92,al
  419174:	lds    esp,FWORD PTR [edx+esi*1-0x758c7a7b]
  41917b:	les    edi,FWORD PTR fs:[ebx-0xe42faf1]
  419182:	mov    eax,0x6b0cdb59
  419187:	cmp    BYTE PTR [edi],0x71
  41918a:	xchg   esp,eax
  41918b:	sbb    BYTE PTR [ebp+ebp*8+0xbec2e95],ch
  419192:	std    
  419193:	and    BYTE PTR [esi+0x6f],al
  419196:	in     eax,0x15
  419198:	sub    DWORD PTR [esi],ecx
  41919a:	std    
  41919b:	inc    ebp
  41919c:	daa    
  41919d:	push   ds
  41919e:	add    eax,0x3bffc99b
  4191a3:	out    0x8d,al
  4191a5:	add    BYTE PTR [ecx-0x71d55895],bl
  4191ab:	sbb    BYTE PTR [edi+0x12],ah
  4191ae:	mov    ebp,0x1d4bfa47
  4191b3:	xlat   BYTE PTR ds:[ebx]
  4191b4:	mov    bh,BYTE PTR [ebx-0x2cd456d0]
  4191ba:	mov    BYTE PTR [ebx+0x3724493a],dh
  4191c0:	add    DWORD PTR [esi-0x35159046],edx
  4191c6:	or     edi,ebx
  4191c8:	sbb    dl,0xc5
  4191cb:	in     eax,dx
  4191cc:	cli    
  4191cd:	scas   eax,DWORD PTR es:[edi]
  4191ce:	add    BYTE PTR [ebp-0x10],bh
  4191d1:	push   ecx
  4191d2:	adc    dh,ch
  4191d4:	jno    0x419173
  4191d6:	lahf   
  4191d7:	push   cs
  4191d8:	int3   
  4191d9:	sbb    eax,0x2ca837a4
  4191de:	jl     0x4191fe
  4191e0:	cmc    
  4191e1:	mov    dh,0xe4
  4191e3:	jmp    0x41923b
  4191e5:	mov    bh,0x41
  4191e7:	ins    DWORD PTR es:[edi],dx
  4191e8:	adc    BYTE PTR [ebx],ch
  4191ea:	les    esi,FWORD PTR [edx-0x3b]
  4191ed:	das    
  4191ee:	push   ebx
  4191ef:	mov    WORD PTR [esi-0x5fc02054],?
  4191f5:	mov    esi,0x92804be6
  4191fa:	push   esi
  4191fb:	ins    DWORD PTR es:[edi],dx
  4191fc:	pop    edx
  4191fd:	call   DWORD PTR [edi]
  4191ff:	adc    al,0x67
  419201:	loope  0x4191a8
  419203:	enter  0x1bab,0x81
  419207:	cmp    eax,0xc4a7259b
  41920c:	sahf   
  41920d:	pusha  
  41920e:	into   
  41920f:	push   edx
  419210:	push   0x1b
  419212:	shr    DWORD PTR [ebx+edx*8],1
  419215:	xchg   BYTE PTR [esi+eiz*4-0x908b861],dl
  41921c:	inc    edi
  41921d:	pop    es
  41921e:	outs   dx,DWORD PTR ds:[esi]
  41921f:	cdq    
  419220:	or     DWORD PTR [ecx+0x28e25387],esi
  419226:	or     BYTE PTR [edi-0x1c5b060f],ah
  41922c:	mov    bl,0xa5
  41922e:	sbb    eax,0x9f6cf51e
  419233:	mov    ebp,DWORD PTR [ecx]
  419235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419236:	loopne 0x419231
  419238:	pusha  
  419239:	enter  0x92c7,0x4d
  41923d:	push   ds
  41923e:	xchg   DWORD PTR [esi+0x3d10f411],ecx
  419244:	push   edi
  419245:	hlt    
  419246:	into   
  419247:	jae    0x41920b
  419249:	aam    0xca
  41924b:	repnz syscall 
  41924e:	stos   DWORD PTR es:[edi],eax
  41924f:	fsub   st,st(1)
  419251:	pop    ecx
  419252:	lds    eax,FWORD PTR [ebx+edx*1]
  419255:	pop    esp
  419256:	das    
  419257:	fwait
  419258:	jp     0x419208
  41925a:	sbb    ecx,esi
  41925c:	ja     0x4192d8
  41925e:	sar    DWORD PTR [ecx],0xaf
  419261:	cmp    al,0x45
  419263:	jg     0x4191fc
  419265:	xchg   ecx,eax
  419266:	sbb    bh,BYTE PTR [eax+0x289a1b76]
  41926c:	dec    ebx
  41926d:	mov    ah,0x13
  41926f:	out    dx,al
  419270:	(bad)  
  419271:	pop    ebx
  419272:	jne    0x41923c
  419274:	xor    BYTE PTR [ebp+0x51],dh
  419277:	adc    al,bl
  419279:	ficomp WORD PTR [ecx]
  41927b:	jbe    0x4192b1
  41927d:	adc    DWORD PTR [ecx+0x76d5b888],esp
  419283:	pop    ebx
  419284:	xchg   ebp,eax
  419285:	pushf  
  419286:	jp     0x41923a
  419288:	ins    DWORD PTR es:[edi],dx
  419289:	jnp    0x4192e2
  41928b:	pop    eax
  41928c:	xchg   BYTE PTR [ebx-0x4f8f0129],cl
  419292:	push   es
  419293:	cmp    ebx,DWORD PTR [ecx+esi*8]
  419296:	out    0xf3,al
  419298:	nop
  419299:	xchg   edx,eax
  41929a:	je     0x419252
  41929c:	mov    edx,0xd5c491ed
  4192a1:	out    dx,eax
  4192a2:	and    BYTE PTR [esi+eax*2-0x64a97a0d],0x9
  4192aa:	or     BYTE PTR [eax-0x7d385a70],ch
  4192b0:	loopne 0x41928d
  4192b2:	(bad)  
  4192b3:	cdq    
  4192b4:	ret    
  4192b5:	fwait
  4192b6:	or     ecx,DWORD PTR [eax+ebp*1]
  4192b9:	sti    
  4192ba:	loope  0x41926b
  4192bc:	(bad)  
  4192be:	or     BYTE PTR [edx],ah
  4192c0:	dec    edi
  4192c1:	std    
  4192c2:	mov    esi,DWORD PTR [edi-0x5e1b7394]
  4192c8:	lds    ebx,FWORD PTR [ebx+0x5068c7b9]
  4192ce:	push   edx
  4192cf:	fs adc eax,0x7610f873
  4192d5:	jnp    0x41930f
  4192d7:	cmp    DWORD PTR [esi],ebp
  4192d9:	push   0x5d5d9144
  4192de:	ins    BYTE PTR es:[edi],dx
  4192df:	mov    ds:0x95edc06,al
  4192e4:	rcl    al,1
  4192e6:	fwait
  4192e7:	fwait
  4192e8:	in     eax,dx
  4192e9:	add    DWORD PTR [esi-0x30],eax
  4192ec:	or     al,ah
  4192ee:	xor    DWORD PTR [ebx-0x245ae56],0xe5d26ac2
  4192f8:	mov    edi,0x9371259b
  4192fd:	test   al,0x23
  4192ff:	or     DWORD PTR [eax+0xa6cc110],eax
  419305:	cmp    BYTE PTR [ebx],bl
  419307:	leave  
  419308:	xchg   esp,eax
  419309:	and    si,WORD PTR [esi]
  41930c:	adc    bh,ah
  41930e:	adc    dh,cl
  419310:	adc    BYTE PTR [edi+0x51],ah
  419313:	add    al,0x6c
  419315:	cdq    
  419316:	sub    eax,0x70d6b1c8
  41931b:	xor    DWORD PTR [eax*1+0x5f5f8ca4],ebp
  419322:	pushf  
  419323:	push   0x8193307
  419328:	jmp    0xa2abc8d1
  41932d:	jno    0x4192d0
  41932f:	push   es
  419330:	leave  
  419331:	add    ecx,ebx
  419333:	test   BYTE PTR [ecx+0x65],bh
  419336:	pusha  
  419337:	jmp    0x5fa78d80
  41933c:	sub    eax,0x9305b72a
  419341:	test   eax,0xb6902955
  419346:	nop
  419347:	push   0xffffffb7
  419349:	frstor [ebp+0x55]
  41934c:	cmp    BYTE PTR [edi+0x7e190b],dh
  419352:	xlat   BYTE PTR ds:[ebx]
  419353:	leave  
  419354:	aam    0x22
  419356:	adc    al,0xd
  419358:	xchg   esp,eax
  419359:	xor    bh,bh
  41935b:	ss call 0xca6e:0x69d4c38d
  419363:	or     al,0xd2
  419365:	pop    ebx
  419366:	(bad)  
  419368:	(bad)  
  419369:	je     0x4192f7
  41936b:	mov    ebx,0xd480eb29
  419370:	xchg   ecx,eax
  419371:	dec    eax
  419372:	(bad)  
  419374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419375:	fisub  DWORD PTR [ebx+0x6cfd0a22]
  41937b:	push   es
  41937c:	jmp    0x7eb9:0xe12b58a1
  419383:	and    cl,BYTE PTR [edx+0x6b]
  419386:	nop
  419387:	pop    esi
  419388:	ret    0xc452
  41938b:	(bad)  
  41938c:	int3   
  41938d:	mov    ch,0xec
  41938f:	mov    edx,0xd8e020da
  419394:	xor    BYTE PTR [eax],ch
  419396:	mov    ebx,0x8fb4a64e
  41939b:	and    BYTE PTR [ebx-0x4fc610b1],dl
  4193a1:	push   ebx
  4193a2:	scas   al,BYTE PTR es:[edi]
  4193a3:	mov    al,bh
  4193a5:	xchg   ecx,eax
  4193a6:	fwait
  4193a7:	xchg   ebp,eax
  4193a8:	aas    
  4193a9:	neg    BYTE PTR [eax+eax*8+0x1194d74e]
  4193b0:	shl    edx,cl
  4193b2:	enter  0x1af3,0xf6
  4193b6:	or     ch,BYTE PTR [edx-0xb]
  4193b9:	fld    DWORD PTR cs:[ebp+0x6aa8c615]
  4193c0:	or     eax,0x4500f2b0
  4193c5:	int    0x4c
  4193c7:	mov    esi,0xa58df3cd
  4193cc:	dec    esp
  4193cd:	mov    ah,0x9
  4193cf:	push   edi
  4193d0:	imul   DWORD PTR [esi-0x1f]
  4193d3:	pop    ds
  4193d4:	jecxz  0x419394
  4193d6:	imul   eax,DWORD PTR [esi-0x2c],0x8
  4193da:	jae    0x4193f7
  4193dc:	sub    DWORD PTR [esi-0x55],ecx
  4193df:	lea    edi,[esi-0x6175e463]
  4193e5:	shl    DWORD PTR [ebp-0x2a19aa73],1
  4193eb:	sub    al,0xe6
  4193ed:	pop    ss
  4193ee:	xor    ch,0x64
  4193f1:	icebp  
  4193f2:	frstor ds:0x1f956e68
  4193f8:	pusha  
  4193f9:	push   ss
  4193fa:	push   ds
  4193fb:	fst    DWORD PTR [edi-0x29]
  4193fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193ff:	or     dl,dl
  419401:	js     0x4193a8
  419403:	out    dx,eax
  419404:	xchg   edx,eax
  419405:	clc    
  419406:	jns    0x4193f4
  419408:	dec    esp
  419409:	or     esi,eax
  41940b:	call   0x8fc51a44
  419410:	and    ebx,DWORD PTR [eax]
  419412:	and    DWORD PTR [ecx+0x5c7b7f2c],esi
  419418:	ror    BYTE PTR [edi],cl
  41941a:	mov    al,0x95
  41941c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41941d:	ins    DWORD PTR es:[edi],dx
  41941e:	(bad)  
  41941f:	sub    DWORD PTR [ebx-0x2406a614],edx
  419425:	pushf  
  419426:	fist   WORD PTR [edi]
  419428:	mul    cl
  41942a:	das    
  41942b:	inc    edi
  41942c:	and    DWORD PTR [edx],edi
  41942e:	mov    ds:0xc9aba342,al
  419433:	xor    ecx,esi
  419435:	aas    
  419436:	push   es
  419437:	mov    ds:0x542c153e,eax
  41943c:	jmp    0x7b19:0x13c3edb7
  419443:	aad    0x43
  419445:	pop    esi
  419446:	push   ebx
  419447:	mov    dl,0x1b
  419449:	sahf   
  41944a:	adc    bh,BYTE PTR [edi-0x1fa55513]
  419450:	jo     0x4193dd
  419452:	jae    0x4194a6
  419454:	dec    esi
  419455:	(bad)  
  419456:	pushf  
  419457:	adc    al,0x65
  419459:	stc    
  41945a:	out    dx,al
  41945b:	mul    DWORD PTR [eax]
  41945d:	call   0xda9fb38c
  419462:	and    edx,DWORD PTR [esi]
  419464:	in     eax,0x67
  419466:	push   ecx
  419467:	dec    edx
  419468:	jl     0x4193ed
  41946a:	jne    0x4194b5
  41946c:	imul   edi,DWORD PTR [ebx],0x4de0a7b6
  419472:	pop    ds
  419473:	iret   
  419474:	push   esp
  419475:	sub    eax,DWORD PTR [ecx]
  419477:	inc    ecx
  419478:	je     0x41942b
  41947a:	mov    esp,0xddbbaa8d
  41947f:	out    0x9c,al
  419481:	ins    DWORD PTR es:[edi],dx
  419482:	and    bl,BYTE PTR [ecx+edi*8+0x48]
  419486:	and    BYTE PTR [edx],cl
  419488:	sbb    ah,BYTE PTR [ebx-0x1a]
  41948b:	cmp    BYTE PTR [ebx-0x5d914f5c],0x1e
  419492:	scas   al,BYTE PTR es:[edi]
  419493:	sub    al,BYTE PTR [ecx]
  419495:	mov    ecx,0xf6f1c9a3
  41949a:	push   esp
  41949b:	(bad)  
  41949c:	cs jnp 0x41947a
  41949f:	inc    esi
  4194a0:	xor    eax,DWORD PTR [edi+0x3c]
  4194a3:	mov    bh,BYTE PTR [edi-0x22e17932]
  4194a9:	pop    ebp
  4194aa:	loope  0x4194e2
  4194ac:	cwde   
  4194ad:	push   cs
  4194ae:	(bad)  
  4194b0:	imul   edi,DWORD PTR [edi+0x2c],0x5cb1437e
  4194b7:	xchg   edi,eax
  4194b8:	xor    al,0x3e
  4194ba:	(bad)  
  4194bc:	sub    bx,WORD PTR [eax-0x2b]
  4194c0:	jle    0x4194ed
  4194c2:	je     0x41947a
  4194c4:	call   0xbd9e:0xafdfb4a0
  4194cb:	sbb    BYTE PTR [eax-0x59059e75],al
  4194d1:	(bad)  
  4194d2:	pop    ecx
  4194d3:	packssdw mm1,QWORD PTR ds:0xb766fd8d
  4194da:	dec    edi
  4194db:	cmp    BYTE PTR [edx-0x392ec70d],ch
  4194e1:	add    DWORD PTR [edx+eax*4],eax
  4194e4:	or     al,0x59
  4194e6:	push   ebp
  4194e7:	cdq    
  4194e8:	js     0x41946e
  4194ea:	int    0xc2
  4194ec:	cwde   
  4194ed:	mov    ah,0x26
  4194ef:	push   ss
  4194f0:	std    
  4194f1:	or     BYTE PTR [ebx+0x34d05024],cl
  4194f7:	sbb    eax,0x47122421
  4194fc:	and    ecx,DWORD PTR [ebp-0x663a0579]
  419502:	and    ch,BYTE PTR [esi]
  419504:	mov    BYTE PTR [eax+0xe1c0a64],al
  41950a:	dec    eax
  41950b:	or     al,0x9
  41950d:	in     eax,dx
  41950e:	int    0xc1
  419510:	pushf  
  419511:	cmp    BYTE PTR [edx-0x65dfea2d],dh
  419517:	pop    esp
  419518:	inc    edi
  419519:	rol    BYTE PTR [ebp+ecx*2+0x785691ae],1
  419520:	mov    bh,0xc7
  419522:	loop   0x41958a
  419524:	stc    
  419525:	mov    cl,0xf1
  419527:	cmp    bh,BYTE PTR [edi]
  419529:	dec    ecx
  41952a:	jge    0x419535
  41952c:	mov    esi,0xf694bd80
  419531:	inc    ecx
  419532:	or     al,0x9e
  419534:	ror    edi,1
  419536:	adc    dl,0x24
  419539:	mov    ch,0x66
  41953b:	fidiv  DWORD PTR [eax+0x74]
  41953e:	shr    esp,cl
  419540:	outs   dx,DWORD PTR ds:[esi]
  419541:	adc    eax,0x63ca26c9
  419546:	xor    esp,esi
  419548:	imul   esp,DWORD PTR [ebp-0x3e],0xffffffa0
  41954c:	sub    bh,BYTE PTR [eax+0x49112837]
  419552:	dec    BYTE PTR [ecx]
  419554:	fcom   DWORD PTR [ebx-0x1715cfe1]
  41955a:	(bad)  
  41955b:	neg    DWORD PTR [edi-0x6e]
  41955e:	ret    
  41955f:	mov    BYTE PTR [edx+0x786860bb],al
  419565:	and    eax,0x68a7fc03
  41956a:	(bad)  
  41956b:	sti    
  41956c:	sbb    al,0x4e
  41956e:	sub    eax,0x11b0c29a
  419573:	inc    ebp
  419574:	shl    ecx,cl
  419576:	leave  
  419577:	dec    esi
  419578:	pop    esi
  419579:	add    BYTE PTR [eax],cl
  41957b:	inc    BYTE PTR [edi]
  41957d:	inc    edx
  41957e:	out    0xcb,eax
  419580:	cld    
  419581:	cld    
  419582:	mov    ch,0x5b
  419584:	addr16 rol bh,1
  419587:	mov    edx,0x91d2a46
  41958c:	sbb    BYTE PTR [esi-0x1c],dh
  41958f:	xchg   esp,eax
  419590:	in     al,dx
  419591:	pop    esi
  419592:	adc    bh,cl
  419594:	xchg   edi,eax
  419595:	and    BYTE PTR [eax],al
  419597:	imul   ebp,esi,0xbd73cd16
  41959d:	retf   0x24e7
  4195a0:	in     eax,0x1
  4195a2:	ds or  bl,dl
  4195a5:	xchg   esi,eax
  4195a6:	inc    esi
  4195a7:	add    eax,0xe51a923f
  4195ac:	mov    bl,0x65
  4195ae:	mov    ah,0x56
  4195b0:	cmp    al,0x98
  4195b2:	int    0x32
  4195b4:	pusha  
  4195b5:	sub    BYTE PTR [ebp+0x60],bl
  4195b8:	int3   
  4195b9:	cs xor eax,0x516cfd12
  4195bf:	into   
  4195c0:	jmp    0xcde3:0xc47445ee
  4195c7:	jnp    0x419616
  4195c9:	adc    cl,BYTE PTR [eax-0x2a]
  4195cc:	add    BYTE PTR [ebp-0x398ec13],ch
  4195d2:	xor    BYTE PTR [ebp+0xe],dh
  4195d5:	dec    eax
  4195d6:	fistp  WORD PTR [ecx-0x14049f91]
  4195dc:	retf   0xae18
  4195df:	lea    edx,ds:0x87b7e11a
  4195e5:	xchg   esi,eax
  4195e6:	jne    0x41965b
  4195e8:	das    
  4195e9:	clc    
  4195ea:	sub    ebp,DWORD PTR [edi+0x56]
  4195ed:	cli    
  4195ee:	adc    BYTE PTR [edi+0x16392e1],bh
  4195f4:	fcom   DWORD PTR ds:0xc897d726
  4195fa:	xchg   esi,eax
  4195fb:	icebp  
  4195fc:	pop    ebp
  4195fd:	cmp    bh,al
  4195ff:	inc    ebp
  419600:	arpl   WORD PTR ds:0x4e007ef9,si
  419606:	xchg   edi,eax
  419607:	inc    ebp
  419608:	mov    ch,0xd6
  41960a:	jmp    0x4195a3
  41960c:	cmp    dh,BYTE PTR [ebx+0x591b5335]
  419612:	shl    DWORD PTR [edi-0x73],cl
  419615:	jge    0x419649
  419617:	rcl    al,1
  419619:	in     eax,dx
  41961a:	xor    BYTE PTR [ecx-0x11],ah
  41961d:	mov    bl,0x46
  41961f:	pop    ebp
  419620:	das    
  419621:	adc    cl,ch
  419623:	cld    
  419624:	add    ebp,DWORD PTR [ebx-0x568c7fd9]
  41962a:	ficom  WORD PTR [ebp-0x80]
  41962d:	xchg   esp,eax
  41962e:	lock fadd DWORD PTR [edi+0x6a]
  419632:	xchg   esi,eax
  419633:	es retf 
  419635:	aad    0xc9
  419637:	mov    dl,0xfd
  419639:	jle    0x419654
  41963b:	and    cl,ah
  41963d:	pop    edx
  41963e:	sbb    eax,0xee8be658
  419643:	cwde   
  419644:	pop    esp
  419645:	cs dec edi
  419647:	inc    edi
  419648:	jle    0x4196a1
  41964a:	jmp    0x2c7c:0x451cfdfa
  419651:	pop    edi
  419652:	mov    ecx,0xa245ded0
  419657:	pop    ebp
  419658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419659:	or     ecx,DWORD PTR [edx+0x4c]
  41965c:	test   BYTE PTR [ecx],0x4c
  41965f:	stc    
  419660:	mov    WORD PTR [esi+ebx*1],gs
  419663:	pop    ebp
  419664:	push   ss
  419665:	xor    al,0xc2
  419667:	or     al,0xf8
  419669:	sub    BYTE PTR [ebx-0xc],dh
  41966c:	pop    esi
  41966d:	sub    al,0xf0
  41966f:	repnz mov dh,0x37
  419672:	sbb    eax,edx
  419674:	inc    edx
  419675:	out    dx,al
  419676:	in     al,0x2f
  419678:	dec    edx
  419679:	cli    
  41967a:	shr    esi,cl
  41967c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41967d:	add    eax,0x9225b9f3
  419682:	push   ecx
  419683:	sbb    al,0x9d
  419685:	repz pop ebx
  419687:	sbb    bl,BYTE PTR ds:0xd2932d9e
  41968d:	sbb    DWORD PTR [ecx+0x47],edx
  419690:	add    edx,ecx
  419692:	jo     0x4196a7
  419694:	dec    edi
  419695:	mov    bh,0xca
  419697:	jb     0x41969c
  419699:	push   eax
  41969a:	loopne 0x419637
  41969c:	nop
  41969d:	mov    ?,WORD PTR gs:[edx-0x6a26a392]
  4196a4:	mov    ah,0xb6
  4196a6:	fnstcw WORD PTR [esi+0x6d193e35]
  4196ac:	scas   eax,DWORD PTR es:[edi]
  4196ad:	pop    edi
  4196ae:	lock aad 0x9b
  4196b1:	daa    
  4196b2:	js     0x41970a
  4196b4:	pop    esi
  4196b5:	stc    
  4196b6:	fs daa 
  4196b8:	lods   eax,DWORD PTR ds:[esi]
  4196b9:	mov    al,0x2d
  4196bb:	pop    edx
  4196bc:	(bad)  
  4196bd:	mov    bh,0x3f
  4196bf:	jmp    0x925e0941
  4196c4:	inc    esi
  4196c5:	js     0x419715
  4196c7:	cmp    esi,DWORD PTR es:[edx-0x6649ee29]
  4196ce:	and    dl,ch
  4196d0:	push   cs
  4196d1:	sbb    esp,esp
  4196d3:	arpl   bp,di
  4196d5:	imul   esi,DWORD PTR [ebp+0x7b],0x20
  4196d9:	es mov esi,0xd9a6e501
  4196df:	push   edi
  4196e0:	enter  0x5533,0x0
  4196e4:	mov    esp,0xc5daaf74
  4196e9:	rol    edi,0xda
  4196ec:	ss mov ah,0x56
  4196ef:	xor    eax,0xe0eda636
  4196f4:	sub    bl,cl
  4196f6:	sub    ah,BYTE PTR [eax]
  4196f8:	add    eax,0x6bb0210d
  4196fd:	xor    DWORD PTR [edx-0x2db17fc7],esp
  419703:	sti    
  419704:	aaa    
  419705:	xchg   edi,eax
  419706:	call   0xdf2:0x7918480
  41970d:	xchg   esp,eax
  41970e:	or     BYTE PTR [ebx],al
  419710:	ret    
  419711:	mov    al,0x26
  419713:	fcmovne st,st(5)
  419715:	mov    dl,BYTE PTR [ebx]
  419717:	das    
  419718:	loope  0x41972f
  41971a:	and    ch,BYTE PTR [ecx-0x58a53927]
  419720:	jbe    0x419794
  419722:	dec    ecx
  419723:	and    eax,0xed8d03c1
  419728:	pop    ss
  419729:	into   
  41972a:	leave  
  41972b:	adc    edi,esi
  41972d:	retf   
  41972e:	lds    esi,FWORD PTR [ebx+esi*4+0x4b3c6205]
  419735:	sbb    bl,bl
  419737:	fwait
  419738:	pop    edi
  419739:	je     0x4196bb
  41973b:	jp     0x419703
  41973d:	adc    ah,BYTE PTR [esi]
  41973f:	mov    bh,0x72
  419741:	sbb    eax,0x31deede7
  419746:	jle    0x4196e3
  419748:	pop    edi
  419749:	leave  
  41974a:	push   0x2e15896d
  41974f:	mov    al,0xab
  419751:	mov    ecx,0x20da1f48
  419756:	jl     0x41970e
  419758:	pop    es
  419759:	sbb    BYTE PTR [ebp-0x45],bh
  41975c:	mov    eax,0x5fb367f7
  419761:	in     al,0x2d
  419763:	pop    esp
  419764:	mov    bh,0xe2
  419766:	mov    cl,0x75
  419768:	or     al,0x47
  41976a:	cmp    esp,DWORD PTR [ecx+0x0]
  41976d:	loopne 0x419789
  41976f:	mov    ds:0xb8d0f600,al
  419774:	js     0x419781
  419776:	ja     0x419706
  419778:	xchg   ebp,eax
  419779:	imul   eax,DWORD PTR ss:[eax+0x6e84ff30],0x541f3f05
  419784:	stos   BYTE PTR es:[edi],al
  419785:	test   eax,0xa3358901
  41978a:	xchg   ecx,eax
  41978b:	fimul  DWORD PTR [ecx]
  41978d:	xor    al,0x29
  41978f:	mov    ecx,0x182e3fef
  419794:	jne    0x41978c
  419796:	and    ah,BYTE PTR [ebp-0x324e6e17]
  41979c:	jl     0x4197dc
  41979e:	add    eax,DWORD PTR [edx+0x21df0724]
  4197a4:	or     esi,esp
  4197a6:	pop    ebp
  4197a7:	cmp    al,0x4
  4197a9:	icebp  
  4197aa:	ficom  WORD PTR [ebx+ebp*4+0x7bb9ebe2]
  4197b1:	shl    DWORD PTR [ecx-0x7c],0x2b
  4197b5:	fld    DWORD PTR [ecx+0x54]
  4197b8:	lods   al,BYTE PTR ds:[esi]
  4197b9:	push   ebp
  4197ba:	ss pop esp
  4197bc:	inc    ebp
  4197bd:	mov    edx,0xf35f7071
  4197c2:	push   ds
  4197c3:	arpl   WORD PTR ds:0x6e739167,dx
  4197c9:	adc    al,0x41
  4197cb:	jge    0x4197af
  4197cd:	jle    0x41976a
  4197cf:	call   0x5874c0f2
  4197d4:	(bad)  
  4197d5:	mov    bl,0xcd
  4197d7:	mov    BYTE PTR [ecx],bl
  4197d9:	addr16 xchg esi,eax
  4197db:	jecxz  0x419850
  4197dd:	and    ebx,DWORD PTR [edx]
  4197df:	(bad)  
  4197e0:	mov    edi,0x60229d96
  4197e5:	int3   
  4197e6:	mov    ebx,0x92d36551
  4197eb:	add    ah,ch
  4197ed:	cmp    al,0x2e
  4197ef:	fistp  WORD PTR [eax+0xa]
  4197f2:	scas   al,BYTE PTR es:[edi]
  4197f3:	xor    BYTE PTR [edx+edi*4],bl
  4197f6:	dec    ebx
  4197f7:	add    DWORD PTR [esi],ebx
  4197f9:	mov    eax,0x32c5e5a5
  4197fe:	cli    
  4197ff:	ins    DWORD PTR es:[edi],dx
  419800:	pop    ebp
  419801:	mov    edi,0x66e102f
  419806:	test   eax,0x27be061d
  41980b:	(bad)  
  41980c:	rcl    DWORD PTR [eax+0x7c],1
  41980f:	inc    edi
  419810:	jmp    0x4197c2
  419812:	dec    ebp
  419813:	xor    eax,0x341abac8
  419818:	xchg   DWORD PTR [eax+0x62],esi
  41981b:	xor    DWORD PTR [ebp+0x6e],eax
  41981e:	cli    
  41981f:	adc    DWORD PTR [eax-0x4b],ebx
  419822:	jg     0x4197f7
  419824:	inc    esi
  419825:	(bad)  
  419826:	xor    bl,BYTE PTR [ecx+0x5b]
  419829:	stos   DWORD PTR es:[edi],eax
  41982a:	xchg   esi,eax
  41982b:	dec    esi
  41982c:	imul   eax,DWORD PTR [edi*1-0x2ceb10a8],0xd1c4b574
  419837:	test   eax,0x6e19af6b
  41983c:	retf   
  41983d:	out    dx,al
  41983e:	fdiv   QWORD PTR [eax-0x76]
  419841:	pop    esp
  419842:	inc    edi
  419843:	mov    cl,0x6
  419845:	adc    DWORD PTR [esi-0x15c82e4d],edi
  41984b:	xchg   BYTE PTR [esp+edi*8],ch
  41984e:	scas   eax,DWORD PTR es:[edi]
  41984f:	cmp    al,bh
  419851:	fwait
  419852:	mov    ch,0x84
  419854:	fcomp  DWORD PTR [ecx-0xd]
  419857:	push   esi
  419858:	in     al,0x12
  41985a:	ins    BYTE PTR es:[edi],dx
  41985b:	xor    BYTE PTR [edx],0xf4
  41985e:	mov    WORD PTR [ebp-0x2b],cs
  419861:	mov    edx,0x3d30de3b
  419866:	jno    0x41983f
  419868:	jne    0x4198e5
  41986a:	imul   ebx,DWORD PTR [ecx-0x5a11b9ea],0x4a
  419871:	push   eax
  419872:	fimul  WORD PTR [ebp-0x4e]
  419875:	fldenv [ebx-0x6f2e23c8]
  41987b:	(bad)  
  41987c:	in     al,0xfb
  41987e:	not    BYTE PTR [ebx-0x3a]
  419881:	add    DWORD PTR [esi],ebp
  419883:	fld    QWORD PTR [edx+0xa]
  419886:	push   edx
  419887:	dec    esi
  419888:	mov    eax,ds:0xfb9b1a69
  41988d:	call   0x620afa8c
  419892:	mov    ah,0x8f
  419894:	pop    ebx
  419895:	shr    BYTE PTR [edi-0x2d7f4df3],cl
  41989b:	xor    eax,0xd6d8ce57
  4198a0:	xor    al,0xc3
  4198a2:	adc    eax,0x95ce1b5e
  4198a7:	jg     0x41983b
  4198a9:	adc    esp,eax
  4198ab:	pop    esp
  4198ac:	xchg   ebp,eax
  4198ad:	pop    ecx
  4198ae:	cmp    al,0x22
  4198b0:	inc    ebx
  4198b1:	inc    esi
  4198b2:	xchg   edx,eax
  4198b3:	loope  0x41983a
  4198b5:	xor    bh,dl
  4198b7:	out    0xca,al
  4198b9:	test   dl,cl
  4198bb:	clc    
  4198bc:	cs test al,bl
  4198bf:	mov    ch,dh
  4198c1:	sbb    esi,0x26
  4198c4:	enter  0x8233,0x28
  4198c8:	push   ebx
  4198c9:	test   eax,0xf0bf5c83
  4198ce:	(bad)  
  4198cf:	mov    WORD PTR [eax-0x32],cs
  4198d2:	popa   
  4198d3:	add    ch,dl
  4198d5:	mov    al,ds:0x22970942
  4198da:	ret    
  4198db:	aas    
  4198dc:	xchg   ebp,eax
  4198dd:	adc    DWORD PTR [eax],edi
  4198df:	push   ds
  4198e0:	dec    ebx
  4198e1:	ret    0x60da
  4198e4:	pop    DWORD PTR [edi+ecx*4-0x7c8985e4]
  4198eb:	aas    
  4198ec:	rol    BYTE PTR [eax+eax*1],cl
  4198ef:	push   0x8e0baff1
  4198f4:	xchg   edi,eax
  4198f5:	and    eax,0xe954aa1f
  4198fa:	idiv   DWORD PTR [edx-0x6858f22f]
  419900:	int    0x27
  419902:	ret    0xde40
  419905:	outs   dx,BYTE PTR ds:[esi]
  419906:	cwde   
  419907:	into   
  419908:	test   eax,0x88bae9b2
  41990d:	adc    BYTE PTR [esi],cl
  41990f:	push   esi
  419910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419911:	xchg   ebp,eax
  419912:	je     0x4198a0
  419914:	imul   ebx,ebp,0x6c8ebcfc
  41991a:	or     BYTE PTR [ebx+0x3f26452a],cl
  419920:	jmp    0x4b05:0xc1ad5242
  419927:	and    al,0x89
  419929:	imul   al
  41992b:	jle    0x419927
  41992d:	jmp    0x70d44990
  419932:	mov    al,ds:0x717bfe35
  419937:	push   esi
  419938:	mov    DWORD PTR [esi],edi
  41993a:	pop    es
  41993b:	jecxz  0x4199b0
  41993d:	or     ebx,esi
  41993f:	xchg   esi,eax
  419940:	inc    edi
  419941:	pop    eax
  419942:	rcr    DWORD PTR [ebp+0x2be11b7b],0xe0
  419949:	push   eax
  41994a:	outs   dx,BYTE PTR ds:[esi]
  41994b:	outs   dx,BYTE PTR ds:[esi]
  41994c:	rol    eax,1
  41994e:	mov    cl,0x26
  419950:	xor    eax,0x512d0a92
  419955:	scas   al,BYTE PTR es:[edi]
  419956:	fidiv  WORD PTR [esi]
  419958:	xchg   ebp,eax
  419959:	push   eax
  41995a:	arpl   WORD PTR [edi],si
  41995c:	repz int3 
  41995e:	lea    ecx,[ebp-0x5b]
  419961:	(bad)  
  419962:	xor    BYTE PTR [ecx],ch
  419964:	pop    eax
  419965:	icebp  
  419966:	xor    BYTE PTR [edx+edx*2],bl
  419969:	mov    al,ds:0x5b914c2a
  41996e:	xlat   BYTE PTR ds:[ebx]
  41996f:	fs out dx,al
  419971:	sar    BYTE PTR [esi-0x418d174a],1
  419977:	lahf   
  419978:	push   edi
  419979:	add    BYTE PTR [edx-0x1eb35396],bh
  41997f:	dec    ebp
  419980:	rcl    DWORD PTR [ecx+0x5e],1
  419983:	fsqrt  
  419985:	or     DWORD PTR [ebp+edx*4+0x62],0x5cfc077a
  41998d:	cmp    DWORD PTR [edx],esp
  41998f:	dec    ebp
  419990:	cld    
  419991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419992:	push   ss
  419993:	es dec edx
  419995:	not    DWORD PTR [ecx+0x2af4912c]
  41999b:	sub    eax,0xe05564c1
  4199a0:	lds    esi,FWORD PTR [ebx+0x35234b18]
  4199a6:	rol    DWORD PTR [edi+0x39],0x8c
  4199aa:	in     al,dx
  4199ab:	lahf   
  4199ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199ad:	pop    edx
  4199ae:	inc    edi
  4199af:	fs out 0xf3,eax
  4199b2:	mov    esi,ebp
  4199b4:	les    eax,FWORD PTR [ebx]
  4199b6:	in     al,0x67
  4199b8:	rcl    DWORD PTR [edx-0xe],cl
  4199bb:	stc    
  4199bc:	stos   DWORD PTR es:[edi],eax
  4199bd:	inc    ebx
  4199be:	pop    ebp
  4199bf:	pop    es
  4199c0:	fidiv  DWORD PTR [ebp+edi*1+0x32]
  4199c4:	lahf   
  4199c5:	push   esp
  4199c6:	sub    esi,ebx
  4199c8:	fisttp WORD PTR [ebp-0x11ffc05a]
  4199ce:	mov    edi,0x1bdcb307
  4199d3:	dec    ebp
  4199d4:	(bad)  
  4199d5:	jb     0x419a0e
  4199d7:	outs   dx,BYTE PTR ds:[esi]
  4199d8:	pop    ds
  4199d9:	jp     0x4199ea
  4199db:	dec    esp
  4199dc:	enter  0xf12e,0xb6
  4199e0:	(bad)  
  4199e1:	fld    TBYTE PTR [eax-0x27]
  4199e4:	jae    0x419a39
  4199e6:	pop    edi
  4199e7:	pop    ebp
  4199e8:	sub    edi,DWORD PTR [edx]
  4199ea:	add    bl,ch
  4199ec:	imul   DWORD PTR [esi+ebp*8]
  4199ef:	pop    ebx
  4199f0:	jo     0x4199bc
  4199f2:	xor    DWORD PTR [eax-0x117fb699],ebx
  4199f8:	or     DWORD PTR [eax-0x47],ebx
  4199fb:	mov    ebp,0x8f844c66
  419a00:	out    dx,al
  419a01:	cmc    
  419a02:	push   esp
  419a03:	xchg   esi,eax
  419a04:	sub    DWORD PTR [esi],ecx
  419a06:	xchg   BYTE PTR [eax-0x1d],bh
  419a09:	arpl   WORD PTR [ebx+ecx*8],di
  419a0c:	addr16 out dx,eax
  419a0e:	(bad)  
  419a0f:	and    bl,bh
  419a11:	loopne 0x419a3d
  419a13:	int    0x38
  419a15:	fs push esp
  419a17:	int    0x7f
  419a19:	fcomp  DWORD PTR [edx+0x1e050e74]
  419a1f:	sbb    DWORD PTR ds:0xc81e22c0,ecx
  419a25:	mov    al,0x9f
  419a27:	push   ds
  419a28:	mov    dh,0xf3
  419a2a:	arpl   cx,di
  419a2c:	out    dx,al
  419a2d:	jl     0x419a70
  419a2f:	mov    BYTE PTR [esi+0x4a7ef188],bh
  419a35:	pop    eax
  419a36:	outs   dx,DWORD PTR ds:[esi]
  419a37:	and    eax,0x114e4789
  419a3c:	inc    ecx
  419a3d:	out    dx,al
  419a3e:	test   al,0xb6
  419a40:	mov    al,0xe3
  419a42:	xor    ebx,DWORD PTR [ecx-0x60440445]
  419a48:	out    0xef,al
  419a4a:	test   DWORD PTR [edi],esi
  419a4c:	jbe    0x4199f0
  419a4e:	xchg   edi,eax
  419a4f:	mov    bl,0x60
  419a51:	and    BYTE PTR [esi-0x1eca6588],dh
  419a57:	jo     0x419a43
  419a59:	fucomip st,st(5)
  419a5b:	mov    esp,0x54f139d9
  419a60:	push   eax
  419a61:	sbb    DWORD PTR [eax],ebp
  419a63:	jg     0x419a78
  419a65:	pop    edx
  419a66:	je     0x4199ef
  419a68:	sub    eax,esi
  419a6a:	xchg   ebx,eax
  419a6b:	inc    esp
  419a6c:	xchg   ebp,eax
  419a6d:	imul   DWORD PTR [ecx+eax*2]
  419a70:	mov    al,ds:0x89354ac2
  419a75:	and    al,0xe4
  419a77:	dec    ebx
  419a78:	lea    esp,[esi-0x15]
  419a7b:	test   al,0x1d
  419a7d:	xchg   edx,eax
  419a7e:	dec    eax
  419a7f:	fwait
  419a80:	xor    BYTE PTR [ebp+eiz*1+0x6ee61e7b],0xa6
  419a88:	jbe    0x419ae3
  419a8a:	xor    BYTE PTR [ebx-0x6d77477],al
  419a90:	push   ss
  419a91:	mov    ds:0x4b1976c7,al
  419a96:	add    ebp,DWORD PTR [ecx-0x78c6c496]
  419a9c:	les    eax,FWORD PTR [edx+0x74cd3375]
  419aa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419aa3:	cmp    al,0x62
  419aa5:	or     esi,DWORD PTR [eax+0x4eb9f53f]
  419aab:	or     bh,al
  419aad:	push   esi
  419aae:	pop    eax
  419aaf:	lods   al,BYTE PTR ds:[esi]
  419ab0:	cwde   
  419ab1:	adc    eax,0x2823907d
  419ab6:	cmp    BYTE PTR [ebp-0x232674a],bh
  419abc:	(bad)  
  419abd:	pushf  
  419abe:	pusha  
  419abf:	sbb    eax,DWORD PTR [ebx]
  419ac1:	inc    edi
  419ac2:	iret   
  419ac3:	lahf   
  419ac4:	dec    esp
  419ac5:	sub    eax,0x416973b4
  419aca:	int3   
  419acb:	cmp    BYTE PTR ds:0xcb11b96c,0x10
  419ad2:	(bad)  
  419ad3:	int3   
  419ad4:	scas   al,BYTE PTR es:[edi]
  419ad5:	sahf   
  419ad6:	(bad)  
  419ad8:	and    bl,cl
  419ada:	hlt    
  419adb:	lock and BYTE PTR [ecx],bl
  419ade:	mov    esi,0x53395dd4
  419ae3:	bound  edx,QWORD PTR [edi-0x14]
  419ae6:	inc    edx
  419ae7:	ror    esp,1
  419ae9:	and    eax,0x1032c7a
  419aee:	adc    eax,0x975985ed
  419af3:	xchg   ebp,eax
  419af4:	int3   
  419af5:	out    dx,al
  419af6:	ror    BYTE PTR [eax-0x67da8fd4],0x27
  419afd:	mov    esi,0xc557c774
  419b02:	sub    eax,0x65c37c91
  419b07:	test   esp,edx
  419b09:	cmp    bh,cl
  419b0b:	shl    DWORD PTR [ecx-0x51bfe95c],0xf9
  419b12:	jnp    0x419b6d
  419b14:	sub    ecx,DWORD PTR [ebx]
  419b16:	aaa    
  419b17:	xchg   esp,eax
  419b18:	add    DWORD PTR [ebx+0x5761d392],ebx
  419b1e:	push   cs
  419b1f:	pop    ebp
  419b20:	std    
  419b21:	mov    al,ds:0x58f689d2
  419b26:	xor    DWORD PTR [edx-0x7b],ebp
  419b29:	xchg   esp,eax
  419b2a:	jl     0x419b02
  419b2c:	sete   BYTE PTR [ecx-0x29]
  419b30:	inc    eax
  419b31:	xchg   edx,esp
  419b33:	mov    dl,0x11
  419b35:	ds jmp 0x369b3e3d
  419b3b:	mov    ch,0xd2
  419b3d:	xchg   edx,eax
  419b3e:	cld    
  419b3f:	push   ebp
  419b40:	mov    ds:0x96c96932,al
  419b45:	mov    esi,0xc1e81108
  419b4a:	adc    cl,0xc9
  419b4d:	lahf   
  419b4e:	clc    
  419b4f:	pop    ebx
  419b50:	adc    edx,DWORD PTR [esi-0x3d]
  419b53:	push   cs
  419b54:	push   0x26
  419b56:	jl     0x419ba7
  419b58:	inc    BYTE PTR [ebx+0x3a7bb4da]
  419b5e:	dec    edi
  419b5f:	cmp    edi,eax
  419b61:	dec    edi
  419b62:	adc    ebx,DWORD PTR [edi]
  419b64:	inc    ebx
  419b65:	mov    DWORD PTR [ebp+0x7bd36346],ecx
  419b6b:	sbb    BYTE PTR [edx+ecx*4+0x72],ch
  419b6f:	es int 0x38
  419b72:	mov    dl,0xbe
  419b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b75:	ss aam 0x8d
  419b78:	adc    DWORD PTR ss:[ebx+eax*1-0x64],edi
  419b7d:	retf   0xf750
  419b80:	and    bh,BYTE PTR [edx]
  419b82:	push   ebx
  419b83:	jo     0x419b69
  419b85:	pop    edx
  419b86:	data16 hlt 
  419b88:	sub    al,0x40
  419b8a:	scas   eax,DWORD PTR es:[edi]
  419b8b:	inc    edx
  419b8c:	add    ebp,DWORD PTR [esp+edx*2+0x1d]
  419b90:	add    ah,BYTE PTR [esi]
  419b92:	jl     0x419be2
  419b94:	jb     0x419b1a
  419b96:	jmp    0x419bbc
  419b98:	fnstcw WORD PTR [edi-0x107171c4]
  419b9e:	ficomp DWORD PTR [ecx]
  419ba0:	pop    eax
  419ba1:	stos   DWORD PTR es:[edi],eax
  419ba2:	and    dh,bl
  419ba4:	cmp    ebx,DWORD PTR [edx+0x75b635ac]
  419baa:	add    eax,0xaabbfc0a
  419baf:	into   
  419bb0:	jmp    0x419bca
  419bb2:	lods   eax,DWORD PTR ds:[esi]
  419bb3:	arpl   WORD PTR [ebp+0x6bf926dc],si
  419bb9:	add    al,BYTE PTR [ebx+eiz*4-0x37]
  419bbd:	ret    0x2939
  419bc0:	popa   
  419bc1:	popf   
  419bc2:	(bad)  
  419bc3:	iret   
  419bc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bc5:	mov    ds:0x5c690c45,eax
  419bca:	sub    DWORD PTR [ebp+0x13],esp
  419bcd:	push   edx
  419bce:	push   esi
  419bcf:	or     edx,ebx
  419bd1:	mov    ah,0x8a
  419bd3:	retf   
  419bd4:	scas   al,BYTE PTR es:[edi]
  419bd5:	push   edx
  419bd6:	or     BYTE PTR [esi-0x391d9c73],0x51
  419bdd:	dec    ebp
  419bde:	je     0x419c36
  419be0:	jl     0x419bb0
  419be2:	mov    ah,0x0
  419be4:	cld    
  419be5:	in     al,dx
  419be6:	cld    
  419be7:	pop    ss
  419be8:	je     0x419c0e
  419bea:	jbe    0x419c07
  419bec:	mov    BYTE PTR ds:0xfe41f1b1,bl
  419bf2:	fmul   DWORD PTR [ebx+0x5f]
  419bf5:	xchg   edx,eax
  419bf6:	cwde   
  419bf7:	int3   
  419bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bf9:	fs loopne 0x419bd6
  419bfc:	out    0x69,eax
  419bfe:	sbb    eax,0x99b59d77
  419c03:	or     eax,0x8d95da5e
  419c08:	pushf  
  419c09:	jne    0x419c5f
  419c0b:	dec    edi
  419c0c:	sub    eax,0xb36b79c5
  419c11:	jmp    0x419c7e
  419c13:	loope  0x419c5a
  419c15:	inc    ecx
  419c16:	fs xchg edx,eax
  419c18:	ds ror al,cl
  419c1b:	mov    ch,0x6b
  419c1d:	icebp  
  419c1e:	retf   0x3789
  419c21:	jge    0x419bed
  419c23:	bound  eax,QWORD PTR [ebp-0x7f574c01]
  419c29:	lahf   
  419c2a:	push   esp
  419c2b:	xor    BYTE PTR [ebx+0x312fa5d6],0x4b
  419c32:	mov    cl,0xa3
  419c34:	cld    
  419c35:	jmp    DWORD PTR [eax+ecx*1-0x1140380b]
  419c3c:	inc    edi
  419c3d:	adc    edx,edx
  419c3f:	cdq    
  419c40:	xor    dh,0x10
  419c43:	xor    eax,0xbabd297c
  419c48:	jo     0x419c30
  419c4a:	mov    ds:0x58283107,al
  419c4f:	shl    BYTE PTR [ecx+eax*8],cl
  419c52:	add    eax,0xefc54477
  419c57:	(bad)  
  419c58:	les    edx,FWORD PTR [ebx]
  419c5a:	inc    esi
  419c5b:	data16 jo 0x419c9e
  419c5e:	or     al,0x1f
  419c60:	mov    bl,0x6d
  419c62:	int3   
  419c63:	(bad)  
  419c64:	leave  
  419c65:	enter  0xe8ac,0xee
  419c69:	mov    eax,0xa9471495
  419c6e:	sti    
  419c6f:	push   esi
  419c70:	adc    al,0x7a
  419c72:	out    0x98,eax
  419c74:	jbe    0x419cab
  419c76:	push   cs
  419c77:	push   0x37ff7c2c
  419c7c:	or     ah,bh
  419c7e:	retf   0x1080
  419c81:	jmp    0x442d:0x1d09d2d6
  419c88:	shr    BYTE PTR [esi],1
  419c8a:	cmp    eax,0xd7a29673
  419c8f:	add    DWORD PTR [edx+eiz*8],esi
  419c92:	adc    eax,0x922873c0
  419c97:	ss es inc ebp
  419c9a:	sar    DWORD PTR cs:[eax],1
  419c9d:	rol    DWORD PTR [ebx],cl
  419c9f:	pop    esp
  419ca0:	pop    esp
  419ca1:	adc    eax,0xa5053164
  419ca6:	push   ss
  419ca7:	sbb    BYTE PTR [ebp-0x4ae6b948],dl
  419cad:	push   cs
  419cae:	mov    eax,0x5a04c512
  419cb3:	aam    0x3a
  419cb5:	adc    al,0x3b
  419cb7:	xor    eax,0x49012155
  419cbc:	dec    ebp
  419cbd:	jbe    0x419c66
  419cbf:	fwait
  419cc0:	or     ecx,DWORD PTR [edx+0xf1038f3]
  419cc6:	sti    
  419cc7:	dec    esp
  419cc8:	mov    BYTE PTR [ebx],ch
  419cca:	popf   
  419ccb:	addr16 jns 0x419d2a
  419cce:	sub    DWORD PTR [esi+eiz*1],esp
  419cd1:	fnstenv [esi-0xdeb93d2]
  419cd7:	scas   al,BYTE PTR es:[edi]
  419cd8:	xor    al,0x69
  419cda:	cmp    ebx,DWORD PTR [esi+0x6e9c390e]
  419ce0:	fisub  DWORD PTR [eax]
  419ce2:	ins    DWORD PTR es:[edi],dx
  419ce3:	pop    esi
  419ce4:	shr    ah,cl
  419ce6:	and    esi,ecx
  419ce8:	mov    gs,ecx
  419cea:	add    BYTE PTR [eax-0x763d7339],dh
  419cf0:	cld    
  419cf1:	sbb    edx,DWORD PTR [ebx+ebp*2]
  419cf4:	cmp    DWORD PTR [ebx+edi*8+0x12475434],ecx
  419cfb:	mov    esp,0xaa05d70e
  419d00:	xor    edi,DWORD PTR ds:0xf93dcae8
  419d06:	adc    al,0x3
  419d08:	dec    esi
  419d09:	xor    DWORD PTR [ecx],ebp
  419d0b:	fistp  WORD PTR [edx+edx*2+0x35]
  419d0f:	push   0x71
  419d11:	cmp    BYTE PTR [ebx+0x27f98ccf],dl
  419d17:	add    al,0x59
  419d19:	push   ebx
  419d1a:	jp     0x419d86
  419d1c:	xchg   edx,eax
  419d1d:	stos   BYTE PTR es:[edi],al
  419d1e:	inc    eax
  419d1f:	jbe    0x419cf3
  419d21:	mov    ds:0xb4159d40,eax
  419d26:	scas   eax,DWORD PTR es:[edi]
  419d27:	push   eax
  419d28:	stos   BYTE PTR es:[edi],al
  419d29:	fstp   DWORD PTR [ebp-0x11]
  419d2c:	cmc    
  419d2d:	std    
  419d2e:	cmp    ecx,esp
  419d30:	inc    edi
  419d31:	xchg   esp,eax
  419d32:	inc    esp
  419d33:	pushf  
  419d34:	jp     0x419db3
  419d36:	sar    esi,0xca
  419d39:	sbb    edx,esp
  419d3b:	xlat   BYTE PTR ds:[ebx]
  419d3c:	push   ss
  419d3d:	aad    0x77
  419d3f:	xchg   esp,eax
  419d40:	push   ss
  419d41:	and    al,0x10
  419d43:	fwait
  419d44:	sbb    eax,0xd9fd3ed9
  419d49:	mul    BYTE PTR [ebx]
  419d4b:	dec    ebx
  419d4c:	and    eax,0x281f3821
  419d51:	ja     0x419d6b
  419d53:	dec    DWORD PTR [ecx+0x75]
  419d56:	repnz sti 
  419d58:	xor    eax,0xc4bf86c3
  419d5d:	in     eax,dx
  419d5e:	dec    edx
  419d5f:	sbb    DWORD PTR [eax+ecx*4],esp
  419d62:	mov    ebx,0x107caa9
  419d67:	inc    esp
  419d68:	and    ecx,DWORD PTR ds:0xbe560056
  419d6e:	add    eax,0xf9055161
  419d73:	arpl   WORD PTR [ebx],si
  419d75:	fs pop ebx
  419d77:	xchg   edi,eax
  419d78:	sub    BYTE PTR [ecx-0x31],bl
  419d7b:	hlt    
  419d7c:	sub    DWORD PTR [ebx+esi*2],ebx
  419d7f:	es xchg ebp,esp
  419d82:	add    al,0x92
  419d84:	inc    ecx
  419d85:	sti    
  419d86:	and    esi,edi
  419d88:	dec    ebp
  419d89:	add    BYTE PTR [esi],bl
  419d8b:	and    eax,0xcec2b28c
  419d90:	dec    edi
  419d91:	pop    es
  419d92:	inc    ebx
  419d93:	jmp    0x419d56
  419d95:	cmp    ch,BYTE PTR [eax+0x62ec0ec5]
  419d9b:	int    0x89
  419d9d:	lahf   
  419d9e:	jle    0x419d67
  419da0:	jnp    0x419dc7
  419da2:	popa   
  419da3:	aaa    
  419da4:	add    DWORD PTR [edi+edx*1],edx
  419da7:	adc    ecx,ecx
  419da9:	shl    BYTE PTR [esi-0x765bb02b],1
  419daf:	push   ebp
  419db0:	jg     0x419da5
  419db2:	scas   al,BYTE PTR es:[edi]
  419db3:	adc    DWORD PTR [ebx],0xfffffffe
  419db6:	mov    ebp,0xdbafac05
  419dbb:	fcomp  QWORD PTR [esi]
  419dbd:	pop    ebx
  419dbe:	sub    al,0xb2
  419dc0:	fdiv   QWORD PTR [ebx-0x7d33aa03]
  419dc6:	in     al,0x7b
  419dc8:	mov    edi,0xcb3b4a9b
  419dcd:	inc    ebp
  419dce:	mov    dl,0xa7
  419dd0:	inc    esp
  419dd1:	add    BYTE PTR [eax],al
  419dd3:	popf   
  419dd4:	je     0x419d79
  419dd6:	nop
  419dd7:	and    DWORD PTR [ecx+0x2438ba6f],ebp
  419ddd:	and    ebp,DWORD PTR [edi-0x49]
  419de0:	arpl   WORD PTR [edi],sp
  419de2:	cmp    eax,0x95a206ca
  419de7:	cmc    
  419de8:	dec    esi
  419de9:	jecxz  0x419da8
  419deb:	not    BYTE PTR [eax+0x49]
  419dee:	xor    eax,0x935806d1
  419df3:	daa    
  419df4:	mov    ds,ebp
  419df6:	aam    0xef
  419df8:	jmp    0x159d:0x2bc1b084
  419dff:	addr16 hlt 
  419e01:	sub    ebp,DWORD PTR [edi-0x6eebe676]
  419e07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e08:	(bad)  
  419e09:	jle    0x419e49
  419e0b:	test   eax,0x5c3a7e4f
  419e10:	out    0x21,eax
  419e12:	dec    ebp
  419e13:	jb     0x419de1
  419e15:	mov    dh,0x4d
  419e17:	leave  
  419e18:	sbb    eax,0xfa1495ff
  419e1d:	je     0x419e45
  419e1f:	je     0x419e75
  419e21:	add    esp,DWORD PTR [ebp+0x5d5c4318]
  419e27:	imul   esi,DWORD PTR [esi],0x25
  419e2a:	inc    ecx
  419e2b:	repz pop ss
  419e2d:	stc    
  419e2e:	jb     0x419e11
  419e30:	mov    al,ds:0xa1aeb94b
  419e35:	sub    BYTE PTR [ecx-0x15daf386],dl
  419e3b:	outs   dx,BYTE PTR ds:[esi]
  419e3c:	or     dl,BYTE PTR [ebx+0x40c10f67]
  419e42:	leave  
  419e43:	push   ds
  419e44:	int    0x5c
  419e46:	pop    ss
  419e47:	xor    dh,bh
  419e49:	out    dx,eax
  419e4a:	push   edi
  419e4b:	icebp  
  419e4c:	cmp    eax,ebp
  419e4e:	scas   eax,DWORD PTR es:[edi]
  419e4f:	sub    edx,esp
  419e51:	cmp    al,0x8b
  419e53:	leave  
  419e54:	into   
  419e55:	retf   
  419e56:	pop    ebx
  419e57:	dec    eax
  419e58:	jno    0x419e31
  419e5a:	xchg   esp,eax
  419e5b:	cli    
  419e5c:	dec    esp
  419e5d:	push   0x48
  419e5f:	sub    DWORD PTR [ebp*1-0x63229c6f],eax
  419e66:	das    
  419e67:	inc    edi
  419e68:	adc    ebx,ecx
  419e6a:	pop    edx
  419e6b:	xchg   edi,eax
  419e6c:	ret    0x6aac
  419e6f:	adc    al,0x2c
  419e71:	ret    
  419e72:	je     0x419eb0
  419e74:	or     al,BYTE PTR [ebx-0x37cb7aea]
  419e7a:	inc    esi
  419e7b:	inc    esi
  419e7c:	int3   
  419e7d:	frstor ds:0x9ced5d5d
  419e83:	dec    ebx
  419e84:	and    cl,BYTE PTR [edi-0x27]
  419e87:	outs   dx,BYTE PTR ds:[esi]
  419e88:	fwait
  419e89:	lods   eax,DWORD PTR ds:[esi]
  419e8a:	dec    ebx
  419e8b:	xlat   BYTE PTR ds:[ebx]
  419e8c:	(bad)  
  419e8d:	adc    BYTE PTR [ebx+0x246956dc],al
  419e93:	fs ja  0x419e57
  419e96:	mov    ah,0x21
  419e98:	sub    DWORD PTR [ecx],edi
  419e9a:	retf   0xd4b7
  419e9d:	iret   
  419e9e:	push   ecx
  419e9f:	add    ch,BYTE PTR [esi]
  419ea1:	repnz in eax,dx
  419ea3:	shr    DWORD PTR [esi+0x5038d28d],cl
  419ea9:	inc    eax
  419eaa:	outs   dx,BYTE PTR ds:[esi]
  419eab:	inc    esi
  419eac:	xchg   BYTE PTR [edx+0x49ca7f41],ah
  419eb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419eb3:	loop   0x419e78
  419eb5:	(bad)  
  419eb6:	icebp  
  419eb7:	mov    DWORD PTR [esi-0x77],0x399d8ade
  419ebe:	sub    eax,0xc268ee73
  419ec3:	mov    ?,WORD PTR [ecx+eiz*2]
  419ec6:	lods   eax,DWORD PTR ds:[esi]
  419ec7:	mov    dl,0xb
  419ec9:	into   
  419eca:	and    DWORD PTR [ebx-0x4c],ebp
  419ecd:	imul   esp,eax,0x79
  419ed0:	sahf   
  419ed1:	jecxz  0x419efd
  419ed3:	or     bh,BYTE PTR [eax-0x41445bbb]
  419ed9:	mov    al,ds:0x33b2a174
  419ede:	pop    eax
  419edf:	mov    ebp,0xb12b7908
  419ee4:	push   ds
  419ee5:	mov    ecx,0x60b0889d
  419eea:	jmp    0xae48:0xbce8bed5
  419ef1:	adc    al,0x11
  419ef3:	or     DWORD PTR [ebp-0x217636ed],0xb898b536
  419efd:	mov    dh,0xce
  419eff:	cli    
  419f00:	ins    DWORD PTR es:[edi],dx
  419f01:	mov    ah,0x60
  419f03:	ret    
  419f04:	iret   
  419f05:	sbb    DWORD PTR [edi+esi*2-0x18],ebp
  419f09:	fcom   DWORD PTR [edx-0x6b]
  419f0c:	dec    BYTE PTR [ecx+0x6ecb712b]
  419f12:	mov    esi,0xdb620051
  419f17:	push   edx
  419f18:	adc    ebp,0x5f36b468
  419f1e:	mov    DWORD PTR [edx],esp
  419f20:	xchg   edi,eax
  419f21:	shl    BYTE PTR [esi+eax*4-0x3fccf659],cl
  419f28:	jp     0x419eaf
  419f2a:	xchg   esp,eax
  419f2b:	rcl    ebx,0xd1
  419f2e:	sub    esp,DWORD PTR [ecx+0x37]
  419f31:	sub    al,0xb9
  419f33:	faddp  st(4),st
  419f35:	ss pusha 
  419f37:	and    al,0xf7
  419f39:	inc    esp
  419f3a:	adc    eax,0x1f50e3c8
  419f3f:	std    
  419f40:	xlat   BYTE PTR ds:[ebx]
  419f41:	retf   0x9a2c
  419f44:	ins    DWORD PTR es:[edi],dx
  419f45:	jb     0x419f09
  419f47:	cmp    bh,cl
  419f49:	pop    ss
  419f4a:	mov    al,0xb9
  419f4c:	aad    0x1f
  419f4e:	xchg   edi,eax
  419f4f:	shr    DWORD PTR [ecx+0x7850fd4d],1
  419f55:	sub    al,BYTE PTR [edx+0x71416823]
  419f5b:	dec    ecx
  419f5c:	or     ecx,DWORD PTR [eax+0x261afd8d]
  419f62:	jno    0x419f44
  419f64:	and    DWORD PTR [esi-0x23],ebx
  419f67:	xor    al,0xa6
  419f69:	aam    0xee
  419f6b:	xor    eax,0x3da561f7
  419f70:	in     eax,0x12
  419f72:	or     DWORD PTR [eiz*4+0x24d811d4],eax
  419f79:	aam    0xce
  419f7b:	mov    ebp,0x4a59029f
  419f80:	inc    edi
  419f81:	scas   al,BYTE PTR es:[edi]
  419f82:	(bad)  
  419f83:	fmul   st(5),st
  419f85:	xchg   edi,eax
  419f86:	fisttp WORD PTR [esi]
  419f88:	pop    esp
  419f89:	ds xchg esi,ecx
  419f8c:	call   0x7618e080
  419f91:	xor    ah,BYTE PTR [eax+ebx*4]
  419f94:	or     DWORD PTR [ebp+edx*8+0x6d3f7965],ecx
  419f9b:	into   
  419f9c:	dec    eax
  419f9d:	pop    esi
  419f9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f9f:	sub    eax,0x3b010f2a
  419fa4:	jl     0x419fa8
  419fa6:	imul   edi,DWORD PTR [ecx+0x31],0xffffffa0
  419faa:	scas   eax,DWORD PTR es:[edi]
  419fab:	sbb    DWORD PTR [edx+esi*4+0x5c],eax
  419faf:	sbb    DWORD PTR [esi+0x4c],ecx
  419fb2:	sbb    ch,BYTE PTR [esp+ebp*4+0x4347fb40]
  419fb9:	adc    esi,ebp
  419fbb:	stos   DWORD PTR es:[edi],eax
  419fbc:	fnstcw WORD PTR [eax+0x7f]
  419fbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fc1:	shl    DWORD PTR [ebp+0x2e],0x33
  419fc5:	stos   DWORD PTR es:[edi],eax
  419fc6:	add    ecx,eax
  419fc8:	xchg   ebx,eax
  419fc9:	cli    
  419fca:	aam    0xe7
  419fcc:	stc    
  419fcd:	into   
  419fce:	inc    ebp
  419fcf:	and    BYTE PTR [ebx+0x5a2e0d15],0xa0
  419fd6:	inc    esp
  419fd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fd8:	not    DWORD PTR [edx-0x4d]
  419fdb:	test   BYTE PTR [edi-0x2a2c1e65],ah
  419fe1:	pop    edx
  419fe2:	dec    ebp
  419fe3:	retf   
  419fe4:	dec    edi
  419fe5:	sub    al,0xb5
  419fe7:	adc    al,BYTE PTR [ebx+0xe]
  419fea:	aaa    
  419feb:	or     esp,edx
  419fed:	or     BYTE PTR [esi+0x10],cl
  419ff0:	inc    esp
  419ff1:	iret   
  419ff2:	inc    eax
  419ff3:	or     al,0xf
  419ff5:	call   DWORD PTR [ecx-0x73d3e68d]
  419ffb:	push   ebx
  419ffc:	popa   
  419ffd:	sti    
  419ffe:	repz sti 
  41a000:	jecxz  0x41a014
  41a002:	xlat   BYTE PTR ds:[ebx]
  41a003:	and    eax,0x87917a5d
  41a008:	pushf  
  41a009:	es test eax,0x9c3c55aa
  41a00f:	lock stos BYTE PTR es:[edi],al
  41a011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a012:	fcomi  st,st(0)
  41a014:	inc    ecx
  41a015:	rcl    BYTE PTR [ebx],cl
  41a017:	es jns 0x41a00f
  41a01a:	add    DWORD PTR [edx-0x56],ebx
  41a01d:	rol    edi,0x5f
  41a020:	mov    dl,ah
  41a022:	xlat   BYTE PTR ds:[ebx]
  41a023:	mov    ds:0xe48ddc5e,eax
  41a028:	in     eax,dx
  41a029:	push   ds
  41a02a:	inc    edi
  41a02b:	cs pop ebx
  41a02d:	hlt    
  41a02e:	(bad)  [ebp+0x2c849bb5]
  41a034:	mov    cl,0xdf
  41a036:	cmp    BYTE PTR [ebx-0x46],ch
  41a039:	and    DWORD PTR ds:0x8bd6993,edi
  41a03f:	hlt    
  41a040:	(bad)  
  41a041:	das    
  41a042:	xor    bh,BYTE PTR [ebx]
  41a044:	icebp  
  41a045:	add    edi,DWORD PTR [eax+0x1c]
  41a048:	adc    eax,0xf0ffd94f
  41a04d:	out    0x1e,al
  41a04f:	into   
  41a050:	sub    al,0x21
  41a052:	or     ch,bl
  41a054:	pop    ebp
  41a055:	dec    esp
  41a056:	add    edx,DWORD PTR [ebx-0x3211aa2d]
  41a05c:	lea    edx,[edi]
  41a05e:	adc    BYTE PTR [ecx-0x24511142],0xbc
  41a065:	push   ebx
  41a066:	pop    ebp
  41a067:	ins    BYTE PTR es:[edi],dx
  41a068:	out    0x60,eax
  41a06a:	mov    edx,0x32deea86
  41a06f:	stos   DWORD PTR es:[edi],eax
  41a070:	nop
  41a071:	aam    0x80
  41a073:	jp     0x41a05d
  41a075:	sub    al,0x6a
  41a077:	call   0x3373:0x3e126eab
  41a07e:	xchg   edx,eax
  41a07f:	xchg   esi,eax
  41a080:	push   0x286c127f
  41a085:	xlat   BYTE PTR ds:[ebx]
  41a086:	and    BYTE PTR [edi+0x4b1a99f8],cl
  41a08c:	cmp    DWORD PTR [ecx-0x5d],eax
  41a08f:	fwait
  41a090:	(bad)  
  41a091:	enter  0xc1ff,0xeb
  41a095:	retf   
  41a096:	mov    cl,0x1a
  41a098:	sub    DWORD PTR [eax+edi*1+0x6d],esp
  41a09c:	cmp    al,0xba
  41a09e:	xchg   DWORD PTR [eax-0x7d3c4fcd],esp
  41a0a4:	ss popa 
  41a0a6:	mov    esi,0x30856aa9
  41a0ab:	hlt    
  41a0ac:	je     0x41a128
  41a0ae:	lahf   
  41a0af:	and    al,0xfb
  41a0b1:	pop    edi
  41a0b2:	fiadd  WORD PTR [esi+0x71306b22]
  41a0b8:	jge    0x41a0be
  41a0ba:	cld    
  41a0bb:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41a0bd:	call   0xa8b2:0xc378bd33
  41a0c4:	iret   
  41a0c5:	in     eax,dx
  41a0c6:	(bad)  
  41a0c7:	inc    edx
  41a0c8:	inc    ebx
  41a0c9:	shr    DWORD PTR [ebx+edi*2+0x6fe4b05a],0x16
  41a0d1:	and    ecx,0xb
  41a0d4:	xor    DWORD PTR [ebx+0x6b84a770],ebx
  41a0da:	inc    edx
  41a0db:	jno    0x41a0f0
  41a0dd:	mul    DWORD PTR [esi]
  41a0df:	inc    ebp
  41a0e0:	js     0x41a0fa
  41a0e2:	int    0x56
  41a0e4:	adc    dh,0x56
  41a0e7:	push   ss
  41a0e8:	mov    ecx,0x13de9575
  41a0ed:	iret   
  41a0ee:	loop   0x41a164
  41a0f0:	push   cs
  41a0f1:	sbb    edi,DWORD PTR [ebp+0x62]
  41a0f4:	aas    
  41a0f5:	xor    bl,BYTE PTR ds:0xb0e49a06
  41a0fb:	lods   al,BYTE PTR ds:[esi]
  41a0fc:	push   ecx
  41a0fd:	xor    eax,0xcfa02313
  41a102:	xlat   BYTE PTR ds:[ebx]
  41a103:	pop    esi
  41a104:	add    BYTE PTR [ecx],dh
  41a106:	mov    eax,ds:0x11b5a13e
  41a10b:	adc    eax,0xf9dfc03a
  41a110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a112:	aad    0x7f
  41a114:	mul    DWORD PTR [ecx]
  41a116:	push   edi
  41a117:	outs   dx,DWORD PTR ds:[esi]
  41a118:	lea    esp,[ebx-0x28c07437]
  41a11e:	xor    BYTE PTR [ecx-0x116b9372],bh
  41a124:	stos   BYTE PTR es:[edi],al
  41a125:	inc    edi
  41a126:	xchg   ebp,eax
  41a127:	aad    0x29
  41a129:	or     DWORD PTR [eax-0x1a],ebx
  41a12c:	adc    DWORD PTR [edi],0xffffff94
  41a12f:	out    0xcc,eax
  41a131:	pusha  
  41a132:	jo     0x41a114
  41a134:	mov    ecx,0x98666c38
  41a139:	stos   BYTE PTR es:[edi],al
  41a13a:	fiadd  DWORD PTR [eax]
  41a13c:	and    eax,edx
  41a13e:	ret    0xd110
  41a141:	aas    
  41a142:	out    dx,eax
  41a143:	sub    esi,edx
  41a145:	push   ebp
  41a147:	daa    
  41a148:	mov    cl,0x75
  41a14a:	popa   
  41a14b:	mov    eax,ds:0x3a03648
  41a150:	(bad)  
  41a151:	or     eax,0x545ae6c
  41a156:	cdq    
  41a157:	leave  
  41a158:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a159:	mov    edx,0x995fa7cc
  41a15e:	mov    al,0x12
  41a160:	cmp    ch,BYTE PTR [ebx-0x59]
  41a163:	aaa    
  41a164:	in     eax,dx
  41a165:	into   
  41a166:	loope  0x41a16c
  41a168:	clc    
  41a169:	pop    esi
  41a16a:	adc    ecx,0xd45fedeb
  41a170:	pop    ds
  41a171:	push   ecx
  41a172:	mov    ds:0x262185f0,al
  41a177:	outs   dx,DWORD PTR ds:[esi]
  41a178:	sbb    eax,0x40cb26be
  41a17d:	or     eax,0x685a1bd7
  41a182:	nop
  41a183:	adc    BYTE PTR [esi+ebx*4-0x25],dl
  41a187:	mov    dl,0x5a
  41a189:	sahf   
  41a18a:	sub    eax,0x5be7a9ec
  41a18f:	mov    dh,0x68
  41a191:	aad    0xcc
  41a193:	mov    dl,BYTE PTR [ecx]
  41a195:	jmp    0x41a1e1
  41a197:	(bad)
  41a19a:	ins    BYTE PTR es:[edi],dx
  41a19b:	push   ebp
  41a19c:	cmc    
  41a19d:	popa   
  41a19e:	out    0x43,eax
  41a1a0:	addr16 mov ah,0xa5
  41a1a3:	pop    edx
  41a1a4:	rcl    BYTE PTR [ecx+0x72d27c47],1
  41a1aa:	fisubr WORD PTR [edi]
  41a1ac:	clc    
  41a1ad:	das    
  41a1ae:	push   edi
  41a1af:	outs   dx,DWORD PTR ds:[esi]
  41a1b1:	add    esi,DWORD PTR [edi-0x4e2b5ac1]
  41a1b7:	imul   esi,ebp,0xc0006eba
  41a1bd:	loopne 0x41a213
  41a1bf:	jb     0x41a172
  41a1c1:	and    esi,DWORD PTR [edx+0x752da108]
  41a1c7:	inc    eax
  41a1c8:	call   FWORD PTR [edx+0x55]
  41a1cb:	pop    edx
  41a1cc:	fnstsw WORD PTR [esi-0x35788a7e]
  41a1d2:	sub    al,al
  41a1d4:	pusha  
  41a1d5:	test   eax,0xdd7df2c8
  41a1da:	jmp    0xed81ec21
  41a1df:	in     eax,0xf3
  41a1e1:	xlat   BYTE PTR ds:[ebx]
  41a1e2:	xor    eax,0xcf47af27
  41a1e7:	xchg   edx,eax
  41a1e8:	stc    
  41a1e9:	test   DWORD PTR [esp+ecx*2-0x25],esi
  41a1ed:	or     ecx,DWORD PTR [ebx]
  41a1ef:	adc    eax,0x7f3cc013
  41a1f4:	fwait
  41a1f5:	sub    bl,cl
  41a1f7:	outs   dx,BYTE PTR ds:[esi]
  41a1f8:	lock cmp DWORD PTR [ecx-0x32],esi
  41a1fc:	jns    0x41a1e9
  41a1fe:	(bad)  
  41a1ff:	mov    eax,ds:0x671ae669
  41a204:	add    ebx,edx
  41a206:	shl    DWORD PTR [ecx+0x35dc9b0c],0x85
  41a20d:	les    esp,FWORD PTR [eax]
  41a20f:	jmp    0x29015f4e
  41a214:	push   edi
  41a215:	push   esp
  41a216:	cmp    BYTE PTR [eax],cl
  41a218:	jmp    0x2e23df5e
  41a21d:	and    bl,BYTE PTR [edx+0x1a703a71]
  41a223:	ins    DWORD PTR es:[edi],dx
  41a224:	jbe    0x41a1c0
  41a226:	jo     0x41a210
  41a228:	(bad)  
  41a229:	aad    0x8a
  41a22b:	mov    ebp,0xeb8d98aa
  41a230:	push   ss
  41a231:	ja     0x41a208
  41a233:	pop    esi
  41a234:	jp     0x41a1c1
  41a236:	xchg   ecx,eax
  41a237:	aam    0xa8
  41a239:	loop   0x41a1eb
  41a23b:	jnp    0x41a1f4
  41a23d:	jecxz  0x41a26e
  41a23f:	bound  edx,QWORD PTR [edx+0x25]
  41a242:	aam    0xc7
  41a244:	loopne 0x41a22c
  41a246:	test   al,0x2
  41a248:	adc    DWORD PTR [edx+0x3a],ebx
  41a24b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a24c:	mul    BYTE PTR [esi-0x4f]
  41a24f:	jbe    0x41a2a5
  41a251:	push   ds
  41a252:	xor    edx,esi
  41a254:	fidiv  WORD PTR [ebp+0x34665087]
  41a25a:	es pushf 
  41a25c:	es lahf 
  41a25e:	fmul   QWORD PTR [ebx]
  41a260:	mov    bh,0xc1
  41a262:	rcl    bl,0x56
  41a265:	mov    esi,0xdfe22b59
  41a26a:	mov    dh,0x82
  41a26c:	xor    al,0x3d
  41a26e:	add    dl,BYTE PTR [esi+0x5a]
  41a271:	(bad)  
  41a272:	ja     0x41a2b2
  41a274:	jmp    0x25e06943
  41a279:	and    al,0xe4
  41a27b:	ror    DWORD PTR [esi],0xd
  41a27e:	pop    esi
  41a27f:	adc    ah,BYTE PTR [eax-0x77]
  41a282:	adc    al,0x44
  41a284:	mov    ecx,0xbda2f537
  41a289:	and    eax,0x23658fe3
  41a28e:	out    0xac,eax
  41a290:	rcr    DWORD PTR [ecx-0x20],1
  41a293:	sbb    eax,0x27f87d82
  41a298:	push   ds
  41a299:	test   al,0x96
  41a29b:	aad    0xb0
  41a29d:	in     al,dx
  41a29e:	dec    ebp
  41a29f:	test   eax,0xaa2c378c
  41a2a4:	push   esp
  41a2a5:	jo     0x41a29a
  41a2a7:	cmp    BYTE PTR [edx+0x1],al
  41a2aa:	rcl    DWORD PTR [ecx+0x4],0xc9
  41a2ae:	push   eax
  41a2af:	mov    ds:0xdbda928b,al
  41a2b4:	cli    
  41a2b5:	push   esp
  41a2b6:	sar    DWORD PTR ds:0x9641d5fa,1
  41a2bc:	and    esi,DWORD PTR [ecx+0x36]
  41a2bf:	xchg   esp,eax
  41a2c0:	or     ebx,ebx
  41a2c2:	pop    ds
  41a2c3:	xchg   ecx,eax
  41a2c4:	scas   al,BYTE PTR es:[edi]
  41a2c5:	pop    eax
  41a2c6:	cdq    
  41a2c7:	xchg   al,ah
  41a2c9:	scas   al,BYTE PTR es:[edi]
  41a2ca:	ss repz sbb bl,bl
  41a2ce:	jmp    esp
  41a2d0:	sub    ah,BYTE PTR [edi-0x2d]
  41a2d3:	jmp    0xde3f13d9
  41a2d8:	int3   
  41a2d9:	or     BYTE PTR [ebp+0x71],0xff
  41a2dd:	(bad)  
  41a2df:	je     0x41a2a9
  41a2e1:	xchg   ebp,eax
  41a2e2:	sub    eax,0x967fa768
  41a2e7:	adc    eax,esp
  41a2e9:	pop    edi
  41a2ea:	dec    edx
  41a2eb:	sbb    ebp,eax
  41a2ed:	mov    edi,0x40d6d76c
  41a2f2:	and    BYTE PTR [ebx],ch
  41a2f4:	jmp    0xdfffdc45
  41a2f9:	test   al,0x38
  41a2fb:	inc    edi
  41a2fc:	(bad)  
  41a2fd:	pop    ecx
  41a2fe:	cli    
  41a2ff:	mov    bh,0xff
  41a301:	cmp    eax,0x3779eec6
  41a306:	gs daa 
  41a308:	shl    DWORD PTR [edx-0x4923a5c3],cl
  41a30e:	mov    ds,esp
  41a310:	mov    WORD PTR [ecx+0x30487575],es
  41a316:	mov    dh,0xb8
  41a318:	cli    
  41a319:	inc    ebx
  41a31a:	aas    
  41a31b:	dec    DWORD PTR [ecx-0x26bbb80a]
  41a321:	xchg   DWORD PTR [edi+edx*2+0x19],eax
  41a325:	daa    
  41a326:	mov    eax,0xbd0526da
  41a32b:	(bad)  
  41a32c:	frstor [edi]
  41a32f:	xor    dl,bl
  41a331:	jnp    0x41a2f7
  41a333:	add    al,0x43
  41a335:	rol    DWORD PTR [ecx+0x76],cl
  41a338:	outs   dx,DWORD PTR ds:[esi]
  41a339:	stc    
  41a33a:	dec    edx
  41a33b:	retf   
  41a33c:	dec    ecx
  41a33d:	cdq    
  41a33e:	xor    esp,DWORD PTR [edi+0x55379dab]
  41a344:	lods   eax,DWORD PTR ds:[esi]
  41a345:	aam    0x9f
  41a347:	sbb    al,0xeb
  41a349:	cmp    ecx,DWORD PTR [eax-0x39]
  41a34c:	call   0x1c37:0xe6897201
  41a353:	mov    cl,0x71
  41a355:	adc    al,0x98
  41a357:	in     eax,0xeb
  41a359:	dec    ecx
  41a35a:	ficomp DWORD PTR [esp+edx*4]
  41a35d:	fprem1 
  41a35f:	fs pop ebx
  41a361:	int3   
  41a362:	into   
  41a363:	imul   eax,DWORD PTR [ecx+edi*1-0x1703d9bb],0xffffffe7
  41a36b:	ins    DWORD PTR es:[edi],dx
  41a36c:	out    0xdc,eax
  41a36e:	jmp    0x41a3ae
  41a370:	dec    ecx
  41a371:	add    bh,bh
  41a373:	call   0x8c1c86e6
  41a378:	(bad)
  41a37b:	sbb    ch,BYTE PTR [ebx-0x7795a35b]
  41a381:	mov    bl,0x9d
  41a383:	outs   dx,BYTE PTR ds:[esi]
  41a384:	cmp    al,0xb2
  41a386:	xor    al,0xe6
  41a388:	ret    0xb522
  41a38b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a38c:	pop    ss
  41a38d:	pop    ecx
  41a38e:	pusha  
  41a38f:	mov    dh,0xf
  41a391:	fs (bad) 
  41a393:	mov    esp,0x6784fb66
  41a398:	loop   0x41a383
  41a39a:	dec    ecx
  41a39b:	scas   al,BYTE PTR es:[edi]
  41a39c:	dec    edi
  41a39d:	aad    0x7f
  41a39f:	push   cs
  41a3a0:	inc    ebx
  41a3a1:	mov    ds:0x3c91784d,eax
  41a3a6:	add    DWORD PTR [ebx+ebx*4-0x4b],esi
  41a3aa:	popfw  
  41a3ac:	add    BYTE PTR [esi],ch
  41a3ae:	inc    eax
  41a3af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3b0:	int    0x53
  41a3b2:	outs   dx,DWORD PTR ds:[esi]
  41a3b3:	(bad)  
  41a3b4:	pusha  
  41a3b5:	ror    BYTE PTR [ecx+0x1e],cl
  41a3b8:	mov    ds:0x46168197,eax
  41a3bd:	out    dx,eax
  41a3be:	mov    ds:0x706729c4,eax
  41a3c3:	adc    bl,BYTE PTR [edx+ecx*8]
  41a3c6:	sbb    al,0xf2
  41a3c8:	icebp  
  41a3c9:	dec    esi
  41a3ca:	gs mov esp,0x117cc969
  41a3d0:	xchg   edx,eax
  41a3d1:	clc    
  41a3d2:	sbb    al,0x82
  41a3d4:	sbb    dh,BYTE PTR [esi-0x15b25f90]
  41a3da:	dec    edx
  41a3db:	or     ecx,DWORD PTR [esi-0x4b381e46]
  41a3e1:	jmp    0x9e330c75
  41a3e6:	push   ebx
  41a3e7:	jno    0x41a38d
  41a3e9:	rcr    DWORD PTR [ebx],0xc6
  41a3ec:	(bad)
  41a3f0:	lock inc ebx
  41a3f2:	pop    ds
  41a3f3:	dec    esp
  41a3f4:	out    0x2a,eax
  41a3f6:	gs stc 
  41a3f8:	jp     0x41a3ff
  41a3fa:	ret    0x3f7a
  41a3fd:	mov    esi,0x26787372
  41a402:	xchg   bh,dl
  41a404:	js     0x41a473
  41a406:	push   eax
  41a407:	aam    0xe1
  41a409:	into   
  41a40a:	pop    ecx
  41a40b:	add    eax,0x7ffd1f94
  41a410:	xchg   esp,eax
  41a411:	push   edx
  41a412:	repnz cmp al,BYTE PTR [edi-0x6c]
  41a416:	pop    es
  41a417:	inc    edi
  41a418:	inc    edi
  41a419:	into   
  41a41a:	dec    ebp
  41a41b:	(bad)  
  41a41d:	xor    DWORD PTR ds:0xfe603556,esi
  41a423:	fisub  WORD PTR [edi-0x7baace44]
  41a429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a42a:	jp     0x41a49c
  41a42c:	fild   WORD PTR [esi-0x1f]
  41a42f:	inc    ch
  41a431:	push   ecx
  41a432:	xchg   ecx,eax
  41a433:	outs   dx,BYTE PTR ds:[esi]
  41a434:	add    DWORD PTR [ebx],0x4f
  41a437:	rcr    DWORD PTR [ecx-0x28e73833],1
  41a43d:	ss cdq 
  41a43f:	lods   eax,DWORD PTR ds:[esi]
  41a440:	mov    ebx,fs
  41a442:	les    ebx,FWORD PTR [edx]
  41a444:	jmp    0x5d92ee6b
  41a449:	push   esi
  41a44b:	inc    ebp
  41a44c:	jae    0x41a40e
  41a44e:	sar    BYTE PTR ds:[edi+0x25e80322],0x7e
  41a456:	cmp    esi,DWORD PTR gs:[edi]
  41a459:	sbb    dh,BYTE PTR [edi+0x2e502bef]
  41a45f:	mov    edi,0x5c0bc457
  41a464:	cmp    bh,BYTE PTR [ebx+ecx*4]
  41a467:	in     eax,dx
  41a468:	popf   
  41a469:	sbb    al,0xe6
  41a46b:	bound  ebx,QWORD PTR [edx]
  41a46d:	pop    ds
  41a46e:	dec    ebp
  41a46f:	adc    DWORD PTR [edi+0x4ed29726],esp
  41a475:	fdiv   DWORD PTR [esi]
  41a477:	mov    ah,0xc0
  41a479:	fidivr WORD PTR [eax+edi*1]
  41a47c:	xor    al,0xe6
  41a47e:	inc    eax
  41a47f:	jecxz  0x41a42c
  41a481:	pushf  
  41a482:	cmp    DWORD PTR [edi-0x21],eax
  41a485:	fwait
  41a486:	out    0x9,eax
  41a488:	fisttp WORD PTR [edx+0x5b9e39d6]
  41a48e:	inc    ebp
  41a48f:	pop    edx
  41a490:	popf   
  41a491:	and    eax,0x9d515404
  41a496:	in     al,0x38
  41a498:	lahf   
  41a499:	std    
  41a49a:	inc    esi
  41a49b:	test   BYTE PTR [ebx-0x3d3b8687],al
  41a4a1:	cwde   
  41a4a2:	out    0x4,eax
  41a4a4:	lea    ecx,[edi+0x6]
  41a4a7:	sub    esp,edi
  41a4a9:	xor    DWORD PTR [esi],esp
  41a4ab:	xor    al,0xa5
  41a4ad:	jne    0x41a488
  41a4af:	fs aam 0xd3
  41a4b2:	retf   0x3cd7
  41a4b5:	and    esi,DWORD PTR [ecx+0x49ff1198]
  41a4bb:	retf   
  41a4bc:	fbstp  TBYTE PTR [edx+0x76]
  41a4bf:	(bad)  
  41a4c0:	(bad)  
  41a4c1:	aaa    
  41a4c2:	xchg   edx,eax
  41a4c3:	xchg   edx,eax
  41a4c4:	add    DWORD PTR [edx+eax*1],ebx
  41a4c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4c8:	les    edx,FWORD PTR [edx-0x2a5547fc]
  41a4ce:	lock int3 
  41a4d0:	stos   BYTE PTR es:[edi],al
  41a4d1:	popa   
  41a4d2:	push   0xaa998717
  41a4d7:	xlat   BYTE PTR ds:[ebx]
  41a4d8:	data16 jg 0x41a4b8
  41a4db:	inc    ebx
  41a4dc:	ins    BYTE PTR es:[edi],dx
  41a4dd:	fwait
  41a4de:	sbb    al,0xa8
  41a4e0:	add    eax,0x13421817
  41a4e5:	stc    
  41a4e6:	sbb    eax,0xabd7807a
  41a4eb:	cs shr dh,cl
  41a4ee:	or     eax,0x9c3e07c3
  41a4f3:	rcr    ch,cl
  41a4f5:	mov    esi,0x9b7dee43
  41a4fa:	sub    bl,dl
  41a4fc:	xor    edx,esp
  41a4fe:	(bad)  
  41a4ff:	pop    edi
  41a500:	mov    bh,0xc0
  41a502:	mov    ecx,0xa5c4f1a5
  41a507:	jp     0x41a523
  41a509:	mov    ds:0xb2266e1a,eax
  41a50e:	test   al,0xf8
  41a510:	jnp    0x41a524
  41a512:	pop    esi
  41a513:	push   0xffffff9d
  41a515:	adc    esi,DWORD PTR [eax-0x3174d0b5]
  41a51b:	pop    eax
  41a51c:	loop   0x41a52c
  41a51e:	mov    edi,0x9fc1a7b7
  41a523:	push   esi
  41a524:	mov    al,ds:0xe3a07bd3
  41a529:	push   0xffffffaf
  41a52b:	fs (bad) 
  41a52d:	iret   
  41a52e:	imul   BYTE PTR [edi-0x637baa9d]
  41a534:	push   edx
  41a535:	pop    ebx
  41a536:	int3   
  41a537:	xchg   ecx,eax
  41a538:	je     0x41a4fa
  41a53a:	int    0x24
  41a53c:	sub    al,0x4d
  41a53e:	adc    esp,DWORD PTR ds:0xdbe9699f
  41a544:	push   ecx
  41a545:	clc    
  41a546:	sahf   
  41a547:	mov    bp,WORD PTR ds:[eax+ecx*4+0x6b]
  41a54d:	push   edi
  41a54e:	lods   al,BYTE PTR ds:[esi]
  41a54f:	sub    al,0xac
  41a551:	scas   eax,DWORD PTR es:[edi]
  41a552:	retf   
  41a553:	sar    DWORD PTR [edx-0x2a],0x91
  41a557:	mov    dh,0x54
  41a559:	imul   esp,DWORD PTR [ebx],0xf95dd004
  41a55f:	pop    ss
  41a560:	js     0x41a592
  41a562:	test   al,0x45
  41a564:	xor    bl,BYTE PTR [ecx-0x27ad6c15]
  41a56a:	add    eax,0xabba8b8c
  41a56f:	sbb    eax,0x12e0cd8a
  41a574:	addr16 cmc 
  41a576:	xor    ebx,ebx
  41a578:	inc    esp
  41a579:	adc    dh,BYTE PTR [ecx+0x5a]
  41a57c:	lea    ecx,[edx+0x37]
  41a57f:	push   edx
  41a580:	and    ebx,esi
  41a582:	sbb    BYTE PTR [edi],0xab
  41a585:	rcr    BYTE PTR [ecx],0xd1
  41a588:	loope  0x41a5b1
  41a58a:	sar    bl,1
  41a58c:	or     ebp,DWORD PTR [ebp-0x5bd8faf2]
  41a592:	cmp    eax,0xbb7769af
  41a597:	mov    bl,0xcb
  41a599:	add    DWORD PTR [ecx+0x33527578],ebp
  41a59f:	adc    BYTE PTR [edi],dl
  41a5a1:	or     BYTE PTR [edx-0x13],al
  41a5a4:	mov    ecx,0xf396945a
  41a5a9:	jp     0x41a617
  41a5ab:	jbe    0x41a594
  41a5ad:	xchg   BYTE PTR [edx+0x63],cl
  41a5b0:	jle    0x41a545
  41a5b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5b3:	jnp    0x41a558
  41a5b5:	ret    
  41a5b6:	jne    0x41a564
  41a5b8:	fstp   st(1)
  41a5ba:	pushf  
  41a5bb:	mov    bl,BYTE PTR [ebx+ecx*2-0x7c720d84]
  41a5c2:	sahf   
  41a5c3:	outs   dx,DWORD PTR ds:[esi]
  41a5c4:	or     BYTE PTR ds:0xdeaedc99,bl
  41a5ca:	mov    ch,0x21
  41a5cc:	test   DWORD PTR [edx-0x4d639cfe],ecx
  41a5d2:	sub    esp,DWORD PTR [ecx+0x30b9e529]
  41a5d8:	xlat   BYTE PTR ds:[ebx]
  41a5d9:	fimul  DWORD PTR [esi+0x7a]
  41a5dc:	fimul  WORD PTR [ebx+edi*8+0x0]
  41a5e0:	sub    al,0x84
  41a5e2:	sbb    edx,DWORD PTR [ebx+ebx*2-0x25302c58]
  41a5e9:	int    0x1c
  41a5eb:	mov    DWORD PTR [eax],edx
  41a5ed:	test   DWORD PTR [edi+0x67],ebx
  41a5f0:	sar    cl,0x75
  41a5f3:	je     0x41a587
  41a5f5:	xor    eax,0xcc3affdf
  41a5fa:	repnz fmul st(1),st
  41a5fd:	inc    ebp
  41a5fe:	ins    DWORD PTR es:[edi],dx
  41a5ff:	dec    edx
  41a600:	test   eax,0x4cb97b4a
  41a605:	push   ss
  41a606:	cs and al,0xa8
  41a609:	inc    edx
  41a60a:	push   ebx
  41a60b:	and    BYTE PTR [edi],0x83
  41a60e:	lahf   
  41a60f:	push   esp
  41a610:	dec    edi
  41a611:	scas   al,BYTE PTR es:[edi]
  41a612:	jae    0x41a601
  41a614:	(bad)  [esi-0x48]
  41a617:	mov    WORD PTR [eax-0x66],ss
  41a61a:	pop    ecx
  41a61b:	jns    0x41a63e
  41a61d:	mov    edi,0x220f13d1
  41a622:	push   ds
  41a623:	pop    ds
  41a624:	popa   
  41a625:	xchg   edi,eax
  41a626:	cwde   
  41a627:	pop    esi
  41a628:	in     al,0x80
  41a62a:	test   ah,bl
  41a62c:	lods   al,BYTE PTR ds:[esi]
  41a62d:	xchg   ecx,eax
  41a62e:	retf   0x8f6c
  41a631:	pop    eax
  41a632:	mov    edx,0x47c05495
  41a637:	cdq    
  41a638:	mov    ds:0x41a6cfe,al
  41a63d:	(bad)  
  41a63e:	jp     0x41a6b5
  41a640:	popa   
  41a641:	jmp    0xa2f:0x49863705
  41a648:	rep ins DWORD PTR es:[edi],dx
  41a64a:	pop    ss
  41a64b:	and    esp,DWORD PTR [ebp+ecx*2-0x36a13b59]
  41a652:	int3   
  41a653:	lahf   
  41a654:	call   0xbaa5:0xd61cf861
  41a65b:	mov    BYTE PTR [eax],dh
  41a65d:	sbb    esp,ecx
  41a65f:	sub    eax,0xdc4ad8bb
  41a664:	and    al,0x2d
  41a666:	inc    ebp
  41a667:	cmp    eax,0x80988a3b
  41a66c:	xor    al,0x48
  41a66e:	cdq    
  41a66f:	repnz mov ss,WORD PTR ds:0x68d3e50f
  41a676:	sbb    eax,0xb57b0c62
  41a67b:	push   ss
  41a67c:	cmc    
  41a67d:	call   0x92a3:0x79ca8640
  41a684:	pop    ecx
  41a685:	sub    eax,edx
  41a687:	mov    ch,0xfc
  41a689:	ins    DWORD PTR es:[edi],dx
  41a68a:	in     al,0x31
  41a68c:	or     esi,esi
  41a68e:	(bad)  
  41a68f:	(bad)  
  41a690:	jp     0x41a674
  41a692:	sti    
  41a693:	push   ds
  41a694:	xor    DWORD PTR [edi+0x57],esp
  41a697:	push   0xffffffdd
  41a699:	jmp    0x2e44:0x77b4454a
  41a6a0:	fxam   
  41a6a2:	inc    edx
  41a6a3:	call   0x11fe:0x21196aba
  41a6aa:	ja     0x41a68e
  41a6ac:	jae    0x41a63e
  41a6ae:	jns    0x41a6ab
  41a6b0:	pushf  
  41a6b1:	and    ecx,DWORD PTR [ebx]
  41a6b3:	fadd   QWORD PTR [ecx+0x5a]
  41a6b6:	xchg   ebp,eax
  41a6b7:	xchg   esp,eax
  41a6b8:	rol    BYTE PTR [edx+0x68],1
  41a6bb:	and    DWORD PTR [edx],0x77
  41a6be:	dec    ebx
  41a6bf:	out    0xba,al
  41a6c1:	imul   esp,DWORD PTR [ecx-0x34],0xa4499fe0
  41a6c8:	ret    
  41a6c9:	mov    edx,DWORD PTR [ecx+0x71]
  41a6cc:	add    eax,DWORD PTR [ebx]
  41a6ce:	ror    ah,cl
  41a6d0:	dec    ecx
  41a6d1:	or     eax,0xe7b863d2
  41a6d6:	sub    al,0x5a
  41a6d8:	sbb    cl,BYTE PTR [ebp+0xa]
  41a6db:	or     edi,DWORD PTR [ebp-0x68efa814]
  41a6e1:	in     eax,0x4a
  41a6e3:	inc    edx
  41a6e4:	stos   DWORD PTR es:[edi],eax
  41a6e5:	add    BYTE PTR [edi],dl
  41a6e7:	adc    al,0xad
  41a6e9:	or     BYTE PTR [edx+0x17],ah
  41a6ec:	add    DWORD PTR ds:[edx-0x79],esi
  41a6f0:	sub    DWORD PTR ss:[edx-0x4e],0xaf9dcfbf
  41a6f8:	ss push eax
  41a6fa:	out    0x98,eax
  41a6fc:	jo     0x41a6d7
  41a6fe:	and    ecx,ecx
  41a700:	sar    BYTE PTR [eax+0x25],1
  41a703:	(bad)  
  41a705:	je     0x41a6f6
  41a707:	pop    esi
  41a708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a709:	daa    
  41a70a:	xchg   esi,eax
  41a70b:	jbe    0x41a6fd
  41a70d:	xchg   esp,esi
  41a70f:	pop    edi
  41a710:	dec    ecx
  41a711:	nop
  41a712:	jle    0x41a6d7
  41a714:	shl    DWORD PTR [edi+0x2],0xb5
  41a718:	jnp    0x41a69f
  41a71a:	mov    ah,0xe7
  41a71c:	jp     0x41a777
  41a71e:	aaa    
  41a71f:	xlat   BYTE PTR ds:[ebx]
  41a720:	arpl   WORD PTR cs:[esi+0xf],bx
  41a724:	lahf   
  41a725:	jge    0x41a741
  41a727:	(bad)  
  41a728:	dec    ebx
  41a729:	leave  
  41a72a:	shr    BYTE PTR [ecx+0x7c],1
  41a72d:	jp     0x41a783
  41a72f:	out    dx,eax
  41a730:	sti    
  41a731:	push   eax
  41a732:	fisttp DWORD PTR fs:[esi-0x5b]
  41a736:	cwde   
  41a737:	sbb    edx,edx
  41a739:	adc    eax,0xc62c9cd1
  41a73e:	enter  0x70a,0x80
  41a742:	add    DWORD PTR [edx+0xd],ecx
  41a745:	int    0x74
  41a747:	inc    edx
  41a748:	call   0xffa2:0x1af6eb5c
  41a74f:	adc    al,BYTE PTR [esi]
  41a751:	jo     0x41a738
  41a753:	pushf  
  41a754:	xchg   edi,eax
  41a755:	(bad)
  41a759:	rcr    DWORD PTR [edx],1
  41a75b:	mov    esp,0xd7d7b0fd
  41a760:	xor    bh,BYTE PTR [ebx-0x4]
  41a763:	mov    ah,0x26
  41a765:	inc    edi
  41a766:	into   
  41a767:	test   BYTE PTR [eax+edi*4+0x1a],dl
  41a76b:	std    
  41a76c:	push   0x4a34c1e0
  41a771:	push   ds
  41a772:	xor    ebp,ecx
  41a774:	hlt    
  41a775:	mov    ebx,DWORD PTR [esi+edi*2]
  41a778:	jns    0x41a7b1
  41a77a:	lea    edi,[ebp-0xc]
  41a77d:	mov    edi,ebp
  41a77f:	push   ecx
  41a780:	(bad)  
  41a781:	mov    ecx,0xb22398c
  41a786:	cs enter 0xb390,0xb6
  41a78b:	in     al,0x48
  41a78d:	mov    esp,0x170e7b98
  41a792:	dec    esi
  41a793:	fsub   QWORD PTR [edx+0x2e02837c]
  41a799:	outs   dx,DWORD PTR ds:[esi]
  41a79a:	and    al,0xea
  41a79c:	mov    edi,0x770e56bd
  41a7a1:	mov    bl,0x53
  41a7a3:	inc    BYTE PTR [edi]
  41a7a5:	rol    DWORD PTR [edx+esi*2-0x33f104e3],cl
  41a7ac:	adc    BYTE PTR [ecx],dh
  41a7ae:	add    al,0x60
  41a7b0:	dec    edi
  41a7b1:	cmc    
  41a7b2:	push   esi
  41a7b3:	shl    BYTE PTR [eax+edx*2+0x1],0x23
  41a7b8:	test   eax,0x7d27b89e
  41a7bd:	sbb    al,0x3f
  41a7bf:	sub    DWORD PTR [eax-0x33],edi
  41a7c2:	sbb    edi,DWORD PTR [edi]
  41a7c4:	into   
  41a7c5:	rcl    BYTE PTR [ebx+0x52],cl
  41a7c8:	imul   eax,DWORD PTR [esi+0x68],0xffffffc2
  41a7cc:	cmp    esi,DWORD PTR [ecx-0x38fbce07]
  41a7d2:	retf   0x8e64
  41a7d5:	fwait
  41a7d6:	pop    ebx
  41a7d7:	cs stos DWORD PTR es:[edi],eax
  41a7d9:	lods   eax,DWORD PTR ds:[esi]
  41a7da:	adc    eax,0xe91d9056
  41a7df:	inc    ebp
  41a7e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7e1:	(bad)  
  41a7e2:	ins    BYTE PTR es:[edi],dx
  41a7e3:	out    dx,eax
  41a7e4:	test   eax,0xdcd7937d
  41a7e9:	fwait
  41a7ea:	arpl   WORD PTR [esi+0x3],si
  41a7ed:	cmp    BYTE PTR [ebx+0x3e],ch
  41a7f0:	push   edi
  41a7f1:	sahf   
  41a7f2:	dec    eax
  41a7f3:	mov    esp,0xddd1dd19
  41a7f8:	xor    al,0xf8
  41a7fa:	lds    ebx,FWORD PTR [edx]
  41a7fc:	out    dx,eax
  41a7fd:	not    BYTE PTR [edi]
  41a7ff:	dec    eax
  41a800:	aas    
  41a801:	pop    ebx
  41a802:	clc    
  41a803:	test   BYTE PTR [ebx],bl
  41a805:	in     al,dx
  41a806:	gs ret 0xcd51
  41a80a:	cwde   
  41a80b:	loop   0x41a883
  41a80d:	cs aad 0x58
  41a810:	jg     0x41a81a
  41a812:	fwait
  41a813:	repnz in al,0x64
  41a816:	fbld   TBYTE PTR [eax+0x62225bd9]
  41a81c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a81d:	mov    cx,0x1858
  41a821:	retf   0x331a
  41a824:	stos   DWORD PTR es:[edi],eax
  41a825:	mov    eax,0xfaa8faa7
  41a82a:	push   0x1514eb56
  41a82f:	and    eax,0x813c45bb
  41a834:	shr    bl,0xd6
  41a837:	pop    ebx
  41a838:	jbe    0x41a7dc
  41a83a:	ins    DWORD PTR es:[edi],dx
  41a83b:	xchg   ecx,eax
  41a83c:	push   edx
  41a83d:	add    ebp,DWORD PTR [edx+0x13]
  41a840:	ret    
  41a841:	scas   al,BYTE PTR es:[edi]
  41a842:	xor    ecx,DWORD PTR [ebx-0x3499218c]
  41a848:	in     al,dx
  41a849:	ja     0x41a814
  41a84b:	and    eax,0x6fb41bfd
  41a850:	jbe    0x41a8cb
  41a852:	cmp    DWORD PTR [edi],0xffffffd3
  41a855:	fild   DWORD PTR [ecx]
  41a857:	xchg   esp,eax
  41a858:	push   esp
  41a859:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a85a:	fisub  DWORD PTR [ebp+0x52000cd5]
  41a860:	cmp    al,0xaa
  41a862:	or     al,BYTE PTR [ecx]
  41a864:	frstor [edi-0x22]
  41a867:	pop    eax
  41a868:	lahf   
  41a869:	cmp    al,0x34
  41a86b:	pop    eax
  41a86c:	dec    esi
  41a86d:	inc    edi
  41a86e:	aam    0x30
  41a870:	mov    bl,0xda
  41a872:	xor    al,0x35
  41a874:	(bad)  
  41a875:	loop   0x41a856
  41a877:	int3   
  41a878:	dec    ebp
  41a879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a87a:	cli    
  41a87b:	rcr    ebp,cl
  41a87d:	out    dx,al
  41a87e:	jmp    0x41a875
  41a880:	xchg   ecx,eax
  41a881:	add    BYTE PTR [ebx],al
  41a883:	stc    
  41a884:	mov    al,0x17
  41a886:	aam    0x66
  41a888:	or     BYTE PTR [esi-0x656fda16],bl
  41a88e:	loopne 0x41a856
  41a890:	(bad)  
  41a891:	jg     0x41a88b
  41a893:	mov    cl,0xe0
  41a895:	add    al,0x29
  41a897:	sub    BYTE PTR ds:0xfcbb3665,bl
  41a89d:	mov    edi,0x2f4c0dcc
  41a8a2:	jnp    0x41a827
  41a8a4:	fadd   DWORD PTR [esi-0x3b471108]
  41a8aa:	cs add esi,eax
  41a8ad:	test   al,0x98
  41a8af:	int    0xfe
  41a8b1:	ss in  eax,dx
  41a8b3:	sahf   
  41a8b4:	or     bh,dh
  41a8b6:	xchg   edi,eax
  41a8b7:	adc    BYTE PTR [ecx+0x46],bh
  41a8ba:	xlat   BYTE PTR ds:[ebx]
  41a8bb:	rcl    edx,cl
  41a8bd:	cmp    eax,0x9bcc3607
  41a8c2:	mov    ebx,0x318980d4
  41a8c7:	int3   
  41a8c8:	int3   
  41a8c9:	fistp  DWORD PTR [ebx+0x5a]
  41a8cc:	repz out 0x11,eax
  41a8cf:	call   0x859f:0x43a7220f
  41a8d6:	cmp    ch,bh
  41a8d8:	loope  0x41a90c
  41a8da:	cmp    ch,ah
  41a8dc:	stos   DWORD PTR es:[edi],eax
  41a8dd:	jno    0x41a872
  41a8df:	push   ebx
  41a8e0:	mov    cs,WORD PTR [ebp+0x1847f5ca]
  41a8e6:	or     bl,al
  41a8e8:	dec    ebp
  41a8e9:	mov    ds:0x46c43a91,eax
  41a8ee:	jl     0x41a94e
  41a8f0:	aam    0xd2
  41a8f2:	out    dx,al
  41a8f3:	mov    dh,0xd0
  41a8f5:	xchg   esp,eax
  41a8f6:	cld    
  41a8f7:	inc    esi
  41a8f8:	jp     0x41a957
  41a8fa:	inc    edi
  41a8fb:	into   
  41a8fc:	out    0x14,al
  41a8fe:	mov    al,ds:0xb6b0868
  41a903:	das    
  41a904:	xor    BYTE PTR [edx],ch
  41a906:	and    ah,bl
  41a908:	sti    
  41a909:	cli    
  41a90a:	mov    edx,0xb841eb00
  41a90f:	pop    edx
  41a910:	jbe    0x41a8d0
  41a912:	jns    0x41a8f3
  41a914:	ret    
  41a915:	cld    
  41a916:	test   al,0x5b
  41a918:	adc    bl,ah
  41a91a:	stc    
  41a91b:	mov    bl,0xde
  41a91d:	xchg   esi,eax
  41a91e:	(bad)  
  41a91f:	lock call 0x64d6:0xd815fff8
  41a927:	or     al,0xf3
  41a929:	pop    ds
  41a92a:	push   0x8730b70a
  41a92f:	xchg   DWORD PTR [esi+0x4a],esi
  41a932:	scas   al,BYTE PTR es:[edi]
  41a933:	mov    WORD PTR [ebp-0x3f],?
  41a936:	stc    
  41a937:	xchg   BYTE PTR [ebp+0x6272f5ce],al
  41a93d:	adc    BYTE PTR [ebp+0x4c09ee1f],cl
  41a943:	icebp  
  41a944:	imul   ebp,DWORD PTR [edi+esi*2],0x4c
  41a948:	dec    edi
  41a949:	rcl    BYTE PTR [esp+eiz*4-0x7bf80116],1
  41a950:	xchg   edx,eax
  41a951:	pop    eax
  41a952:	sub    BYTE PTR [eax+0x3e],al
  41a955:	leave  
  41a956:	out    dx,al
  41a957:	pop    edx
  41a958:	outs   dx,DWORD PTR ds:[esi]
  41a959:	sub    al,0x87
  41a95b:	pusha  
  41a95c:	add    ebp,eax
  41a95e:	inc    DWORD PTR [esi-0xc]
  41a961:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a962:	adc    esp,DWORD PTR [ecx-0x63175abe]
  41a968:	(bad)  
  41a969:	jne    0x41a8f6
  41a96b:	ins    BYTE PTR es:[edi],dx
  41a96c:	dec    ebp
  41a96d:	in     al,dx
  41a96e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a96f:	or     DWORD PTR [ebp+0x2386db92],esi
  41a975:	mov    dl,0x30
  41a977:	loop   0x41a905
  41a979:	int    0xac
  41a97b:	vshufps xmm5,xmm0,XMMWORD PTR [edi-0x5c73fa74],0x17
  41a984:	nop
  41a985:	and    BYTE PTR [ebx-0x6a],ah
  41a988:	xchg   esp,eax
  41a989:	add    bh,BYTE PTR [edi-0x6e]
  41a98c:	jmp    0x7eb4:0x6226de89
  41a993:	mov    WORD PTR [eax],?
  41a995:	das    
  41a996:	push   ebx
  41a997:	test   BYTE PTR ds:0x2d2b898a,dl
  41a99d:	push   eax
  41a99e:	sub    bl,ch
  41a9a0:	retf   0x2829
  41a9a3:	je     0x41aa16
  41a9a5:	sti    
  41a9a6:	jmp    0x41a97c
  41a9a8:	stc    
  41a9a9:	push   edx
  41a9aa:	imul   ebp,DWORD PTR [ebp+0x49],0xc5e8a5ef
  41a9b1:	add    edx,eax
  41a9b3:	fidivr WORD PTR [edi+0x51]
  41a9b6:	outs   dx,BYTE PTR ds:[esi]
  41a9b7:	xchg   edx,eax
  41a9b8:	xchg   DWORD PTR [eax-0x46405c98],edx
  41a9be:	into   
  41a9bf:	jae    0x41a9fd
  41a9c1:	sub    cl,dl
  41a9c3:	and    al,0xeb
  41a9c5:	jns    0x41a9ae
  41a9c7:	das    
  41a9c8:	sub    ah,BYTE PTR [eax]
  41a9ca:	cmc    
  41a9cb:	ret    
  41a9cc:	push   0x9256b34a
  41a9d1:	addr16 rcl esp,0xd0
  41a9d5:	retf   0x5c2b
  41a9d8:	jecxz  0x41a98b
  41a9da:	int3   
  41a9db:	add    BYTE PTR [esi+0x7b],bl
  41a9de:	icebp  
  41a9df:	test   eax,0x94770a54
  41a9e4:	xchg   edx,eax
  41a9e5:	pop    ds
  41a9e6:	ficom  WORD PTR [ebp-0x60ae207f]
  41a9ec:	popf   
  41a9ed:	mov    DWORD PTR [eax+0x42],esi
  41a9f0:	xchg   esp,eax
  41a9f1:	add    ebx,ebp
  41a9f3:	loop   0x41aa31
  41a9f5:	jle    0x41aa3d
  41a9f7:	ror    BYTE PTR [edi],0xae
  41a9fa:	jg     0x41aa64
  41a9fc:	or     BYTE PTR [esi],ah
  41a9fe:	push   edi
  41a9ff:	dec    edi
  41aa00:	sbb    eax,0x92ad3bfa
  41aa05:	es lahf 
  41aa07:	aaa    
  41aa08:	aas    
  41aa09:	call   0x74ac7e4d
  41aa0e:	pop    edx
  41aa0f:	leave  
  41aa10:	popa   
  41aa11:	xor    eax,0x8f85feca
  41aa16:	jb     0x41aa74
  41aa18:	fs adc al,0x4c
  41aa1b:	mov    eax,0x2d34d536
  41aa20:	adc    ch,BYTE PTR [ebp+0xa64cd3c]
  41aa26:	jl     0x41a9e3
  41aa28:	jp     0x41a9bf
  41aa2a:	and    eax,0x5e9b9fb0
  41aa2f:	mov    eax,0xf15a1370
  41aa34:	sbb    dl,ch
  41aa36:	push   ecx
  41aa37:	mov    bh,0xf1
  41aa39:	mov    esp,0x8fd89564
  41aa3e:	repnz mov ecx,esp
  41aa41:	lahf   
  41aa42:	sbb    DWORD PTR [ebx+0x37425c6],esi
  41aa48:	cdq    
  41aa49:	imul   eax,DWORD PTR [edi+0x586ffe15],0x841be1d6
  41aa53:	dec    esp
  41aa54:	fstp   DWORD PTR [ebx]
  41aa56:	jle    0x41aa7b
  41aa58:	xchg   ebx,eax
  41aa59:	les    edi,FWORD PTR [eax]
  41aa5b:	pop    ss
  41aa5c:	mov    ds:0xe30c778b,eax
  41aa61:	les    eax,FWORD PTR [edx-0x5b]
  41aa64:	jns    0x41aab1
  41aa66:	jbe    0x41aad7
  41aa68:	jne    0x41aaa2
  41aa6a:	xchg   edx,eax
  41aa6b:	push   0x2ae8e684
  41aa70:	sbb    edi,DWORD PTR [edx]
  41aa72:	and    BYTE PTR [ebx-0x5b4a9d5c],0x15
  41aa79:	data16 (bad) 
  41aa7b:	and    BYTE PTR [esi-0x353f7539],ch
  41aa81:	dec    esp
  41aa82:	lock out 0x76,al
  41aa85:	mov    ds:0x4ecb4927,eax
  41aa8a:	cmp    ch,BYTE PTR [ebp-0x5d]
  41aa8d:	push   ss
  41aa8e:	call   0xb096:0x7339884e
  41aa95:	outs   dx,BYTE PTR ds:[esi]
  41aa96:	adc    eax,0x7ba1618a
  41aa9b:	iret   
  41aa9c:	sbb    DWORD PTR [esi+0x34],esp
  41aa9f:	push   ss
  41aaa0:	jge    0x41aa93
  41aaa2:	sbb    al,0xab
  41aaa4:	cmp    BYTE PTR [edx-0x94b2085],cl
  41aaaa:	sub    al,0xec
  41aaad:	call   0xbe195a0
  41aab2:	cmp    cl,BYTE PTR [ecx+esi*2-0x25]
  41aab6:	ret    
  41aab7:	fdiv   DWORD PTR [ebx]
  41aab9:	stc    
  41aaba:	call   0xb074:0x1a2e4bf6
  41aac1:	push   ds
  41aac2:	sbb    edx,DWORD PTR ds:0xe4d68766
  41aac8:	sub    eax,0x49faf55d
  41aacd:	mov    ebx,0x6685827d
  41aad2:	adc    cl,0xaf
  41aad5:	or     ebp,DWORD PTR [ebp-0x2ca74ca9]
  41aadb:	mov    esi,0x3c31d47e
  41aae0:	enter  0x2835,0xb1
  41aae4:	xlat   BYTE PTR ds:[ebx]
  41aae5:	xchg   al,cl
  41aae7:	(bad)  
  41aae8:	cwde   
  41aae9:	test   BYTE PTR [eax],ah
  41aaeb:	mov    eax,esi
  41aaed:	aam    0x8c
  41aaef:	les    edx,FWORD PTR [edx+0x1b]
  41aaf2:	mov    edi,0xf4d395db
  41aaf7:	pop    ecx
  41aaf8:	popf   
  41aaf9:	mov    edi,0x2af9922b
  41aafe:	int3   
  41aaff:	fidivr DWORD PTR [ecx-0x2dc23ff9]
  41ab05:	mov    eax,0x50133e6e
  41ab0a:	test   BYTE PTR [eax-0x1f],dh
  41ab0d:	int    0x9c
  41ab0f:	mov    eax,0x9a2d6ba4
  41ab14:	ja     0x41aaf8
  41ab16:	xchg   esi,eax
  41ab17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab18:	scas   al,BYTE PTR es:[edi]
  41ab19:	shr    DWORD PTR [ebx],1
  41ab1b:	fst    DWORD PTR [ebp+0x7db5bb00]
  41ab21:	lahf   
  41ab22:	mov    DWORD PTR [edi-0x1d93b55f],esp
  41ab28:	or     eax,0xb9896fc0
  41ab2d:	ins    DWORD PTR es:[edi],dx
  41ab2e:	mov    eax,eax
  41ab30:	rol    DWORD PTR [ebp+0x5a58469f],0xc3
  41ab37:	xchg   edi,eax
  41ab38:	sbb    al,0xdd
  41ab3a:	add    al,0x53
  41ab3c:	pop    ss
  41ab3d:	push   esi
  41ab3e:	mov    dh,0x84
  41ab40:	xor    edx,DWORD PTR [esi-0x3f]
  41ab43:	popf   
  41ab44:	test   al,0x6e
  41ab46:	push   ebx
  41ab47:	repnz rcr BYTE PTR [edx-0x66],1
  41ab4b:	or     bl,BYTE PTR [ebx]
  41ab4d:	addr16 dec ecx
  41ab4f:	pop    esi
  41ab50:	and    bl,BYTE PTR [esi]
  41ab52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab53:	mov    edx,DWORD PTR [ecx+0x13]
  41ab56:	add    ecx,0x5708f8
  41ab5c:	imul   ecx,edx
  41ab5f:	mov    DWORD PTR [ebp-0x58],ecx
  41ab62:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab65:	mov    edx,DWORD PTR [ebp-0x54]
  41ab68:	add    ecx,0x64f8da
  41ab6e:	or     ecx,edx
  41ab70:	mov    DWORD PTR [ebp-0x54],ecx
  41ab73:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab76:	mov    edx,DWORD PTR [ebp-0x50]
  41ab79:	add    ecx,0x242ebed
  41ab7f:	xor    ecx,edx
  41ab81:	mov    DWORD PTR [ebp-0x50],ecx
  41ab84:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab87:	mov    edx,DWORD PTR [ebp-0x4c]
  41ab8a:	add    ecx,edi
  41ab8c:	and    ecx,edx
  41ab8e:	mov    DWORD PTR [ebp-0x4c],ecx
  41ab91:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab94:	mov    edx,DWORD PTR [ebp-0x48]
  41ab97:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41ab9e:	mov    DWORD PTR [ebp-0x48],ecx
  41aba1:	mov    ecx,DWORD PTR [ebp+0x8]
  41aba4:	mov    edx,0xfa5e15e2
  41aba9:	sub    edx,ecx
  41abab:	add    edx,DWORD PTR [ebp-0x44]
  41abae:	mov    DWORD PTR [ebp-0x44],edx
  41abb1:	mov    ecx,DWORD PTR [ebp+0x8]
  41abb4:	xor    ecx,eax
  41abb6:	add    ecx,esi
  41abb8:	jne    0x4187b7
  41abbe:	mov    ecx,DWORD PTR [ebp-0x8]
  41abc1:	xor    ecx,eax
  41abc3:	mov    eax,DWORD PTR [ebp+0x10]
  41abc6:	add    ecx,esi
  41abc8:	mov    DWORD PTR [eax],ecx
  41abca:	pop    edi
  41abcb:	pop    esi
  41abcc:	pop    ebx
  41abcd:	leave  
  41abce:	ret    0xc
  41abd1:	add    BYTE PTR [eax-0x5ffbffbe],ah
  41abd7:	inc    edx
  41abd8:	add    BYTE PTR [eax],cl
  41abda:	mov    al,ds:0xa00c0042
  41abdf:	inc    edx
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    al,ds:0xa0140042
  41abe7:	inc    edx
  41abe8:	add    BYTE PTR [eax],bl
  41abea:	mov    al,ds:0xa01c0042
  41abef:	inc    edx
  41abf0:	add    BYTE PTR [eax],al
  41abf2:	rol    BYTE PTR [edx+0x0],1
  41abf5:	add    al,0xd0
  41abf7:	inc    edx
  41abf8:	add    BYTE PTR [eax],cl
  41abfa:	rol    BYTE PTR [edx+0x0],1
  41abfd:	or     al,0xd0
  41abff:	inc    edx
  41ac00:	add    BYTE PTR [eax],dl
  41ac02:	rol    BYTE PTR [edx+0x0],1
  41ac05:	adc    al,0xd0
  41ac07:	inc    edx
  41ac08:	add    BYTE PTR [eax],bl
  41ac0a:	rol    BYTE PTR [edx+0x0],1
  41ac0d:	sbb    al,0xd0
  41ac0f:	inc    edx
	...
  41ac24:	scas   al,BYTE PTR es:[edi]
  41ac25:	pop    esp
  41ac26:	nop
  41ac27:	dec    ebp
  41ac28:	add    BYTE PTR [eax],al
  41ac2a:	add    BYTE PTR [eax],al
  41ac2c:	add    al,BYTE PTR [eax]
  41ac2e:	add    BYTE PTR [eax],al
  41ac30:	cmp    eax,0xb0000000
  41ac35:	lods   al,BYTE PTR ds:[esi]
  41ac36:	add    DWORD PTR [eax],eax
  41ac38:	mov    al,0xa0
  41ac3a:	add    DWORD PTR [eax],eax
  41ac3c:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41ac42:	inc    edx
  41ac43:	add    BYTE PTR [eax],cl
  41ac45:	nop
  41ac46:	inc    edx
  41ac47:	add    BYTE PTR [eax+edx*4],cl
  41ac4a:	inc    edx
  41ac4b:	add    BYTE PTR [eax],dl
  41ac4d:	nop
  41ac4e:	inc    edx
  41ac4f:	add    BYTE PTR [eax+edx*4],dl
  41ac52:	inc    edx
  41ac53:	add    BYTE PTR [eax],bl
  41ac55:	nop
  41ac56:	inc    edx
  41ac57:	add    BYTE PTR [eax+edx*4],bl
  41ac5a:	inc    edx
  41ac5b:	add    BYTE PTR [eax],ah
  41ac5d:	nop
  41ac5e:	inc    edx
  41ac5f:	add    BYTE PTR [eax+edx*4],ah
  41ac62:	inc    edx
  41ac63:	add    BYTE PTR [eax],ch
  41ac65:	nop
  41ac66:	inc    edx
  41ac67:	add    BYTE PTR [eax],al
  41ac69:	mov    al,0x42
  41ac6b:	add    BYTE PTR [eax+esi*4],al
  41ac6e:	inc    edx
  41ac6f:	add    BYTE PTR [eax],cl
  41ac71:	mov    al,0x42
  41ac73:	add    BYTE PTR [eax+esi*4],cl
  41ac76:	inc    edx
  41ac77:	add    BYTE PTR [eax],dl
  41ac79:	mov    al,0x42
  41ac7b:	add    BYTE PTR [eax+esi*4],dl
  41ac7e:	inc    edx
  41ac7f:	add    BYTE PTR [eax],bl
  41ac81:	mov    al,0x42
  41ac83:	add    BYTE PTR [eax+esi*4],bl
  41ac86:	inc    edx
  41ac87:	add    BYTE PTR [eax],al
  41ac89:	rol    BYTE PTR [edx+0x0],0x4
  41ac8d:	rol    BYTE PTR [edx+0x0],0x8
  41ac91:	rol    BYTE PTR [edx+0x0],0xc
  41ac95:	rol    BYTE PTR [edx+0x0],0x10
  41ac99:	rol    BYTE PTR [edx+0x0],0x14
  41ac9d:	rol    BYTE PTR [edx+0x0],0x18
  41aca1:	rol    BYTE PTR [edx+0x0],0x1c
  41aca5:	rol    BYTE PTR [edx+0x0],0x0
  41aca9:	add    BYTE PTR [eax],al
  41acab:	add    BYTE PTR [eax],al
  41acad:	add    BYTE PTR [eax],al
  41acaf:	add    BYTE PTR [edx+0x53],dl
  41acb2:	inc    esp
  41acb3:	push   ebx
  41acb4:	mov    esi,0xb87a327f
  41acb9:	ret    0x4d05
  41acbc:	mov    edi,0x4e93fcbe
  41acc1:	cmp    BYTE PTR [esi],dl
  41acc3:	pop    ss
  41acc4:	add    DWORD PTR [eax],eax
  41acc6:	add    BYTE PTR [eax],al
  41acc8:	inc    ebx
  41acc9:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41accd:	jb     0x41ad41
  41accf:	outs   dx,BYTE PTR gs:[esi]
  41acd1:	je     0x41ad17
  41acd3:	popa   
  41acd4:	je     0x41ad37
  41acd6:	pop    esp
  41acd7:	dec    ebp
  41acd8:	outs   dx,DWORD PTR ds:[esi]
  41acd9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  41ace1:	ins    BYTE PTR es:[edi],dx
  41ace2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  41ace9:	dec    esi
  41acea:	gs ja  0x41aced
  41aced:	mov    edx,DWORD PTR [ebp-0x14]
  41acf0:	sub    esp,0xe4
  41acf6:	push   ebx
  41acf7:	push   edi
  41acf8:	mov    eax,ebx
  41acfa:	xchg   ecx,eax
  41acfb:	mov    eax,DWORD PTR [ebp+0x8]
  41acfe:	mov    edi,0xf89c85b9
  41ad03:	cmp    eax,edi
  41ad05:	jne    0x41b0a1
  41ad0b:	mov    eax,DWORD PTR [ebp+0xc]
  41ad0e:	cmp    eax,0xf89c85b8
  41ad13:	jne    0x41b0a1
  41ad19:	mov    eax,DWORD PTR [ebp+0x24]
  41ad1c:	mov    DWORD PTR [ebp-0x4],eax
  41ad1f:	mov    BYTE PTR [ebp-0x18],0x3
  41ad23:	mov    BYTE PTR [ebp-0x17],0x1e
  41ad27:	mov    BYTE PTR [ebp-0x16],0x1
  41ad2b:	mov    BYTE PTR [ebp-0x15],0x4f
  41ad2f:	mov    BYTE PTR [ebp-0x14],0x48
  41ad33:	mov    BYTE PTR [ebp-0x13],0x7a
  41ad37:	mov    BYTE PTR [ebp-0x20],0xd
  41ad3b:	mov    BYTE PTR [ebp-0x1f],0xf
  41ad3f:	mov    BYTE PTR [ebp-0x1e],0x1d
  41ad43:	mov    BYTE PTR [ebp-0x1d],0x8
  41ad47:	mov    BYTE PTR [ebp-0x1c],0x4f
  41ad4b:	mov    BYTE PTR [ebp-0x1b],0x48
  41ad4f:	mov    BYTE PTR [ebp-0x1a],0x7a
  41ad53:	mov    BYTE PTR [ebp-0x28],0xf
  41ad57:	mov    BYTE PTR [ebp-0x27],0x2
  41ad5b:	mov    BYTE PTR [ebp-0x26],0x6
  41ad5f:	mov    BYTE PTR [ebp-0x25],0xf3
  41ad63:	mov    BYTE PTR [ebp-0x24],0x19
  41ad67:	mov    BYTE PTR [ebp-0x23],0xa
  41ad6b:	push   esi
  41ad6c:	mov    BYTE PTR [ebp-0x22],0x1
  41ad70:	xor    edx,edx
  41ad72:	mov    BYTE PTR [ebp-0x21],0x7a
  41ad76:	xor    esi,esi
  41ad78:	mov    eax,0xf7
  41ad7d:	lea    ecx,[ebp+esi*1-0x18]
  41ad81:	movzx  ebx,BYTE PTR [ecx]
  41ad84:	xor    ebx,0x73
  41ad87:	add    ebx,eax
  41ad89:	inc    esi
  41ad8a:	mov    BYTE PTR [ecx],bl
  41ad8c:	cmp    esi,0x6
  41ad8f:	jb     0x41ad7d
  41ad91:	xor    esi,esi
  41ad93:	lea    ecx,[ebp+esi*1-0x20]
  41ad97:	movzx  ebx,BYTE PTR [ecx]
  41ad9a:	xor    ebx,0x73
  41ad9d:	add    ebx,eax
  41ad9f:	inc    esi
  41ada0:	mov    BYTE PTR [ecx],bl
  41ada2:	cmp    esi,0x7
  41ada5:	jb     0x41ad93
  41ada7:	xor    esi,esi
  41ada9:	lea    ecx,[ebp+esi*1-0x28]
  41adad:	movzx  ebx,BYTE PTR [ecx]
  41adb0:	xor    ebx,0x73
  41adb3:	add    ebx,eax
  41adb5:	inc    esi
  41adb6:	mov    BYTE PTR [ecx],bl
  41adb8:	cmp    esi,0x8
  41adbb:	jb     0x41ada9
  41adbd:	lea    eax,[ebp-0x2c]
  41adc0:	mov    DWORD PTR [ebp-0x8],eax
  41adc3:	mov    ecx,DWORD PTR [ebp-0x8]
  41adc6:	mov    eax,0x7113fcef
  41adcb:	mov    DWORD PTR [ecx],eax
  41adcd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41add0:	cmp    ecx,eax
  41add2:	jne    0x41adde
  41add4:	mov    DWORD PTR [ebp-0x8],edi
  41add7:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  41adde:	mov    eax,DWORD PTR [ebp-0x4]
  41ade1:	mov    eax,DWORD PTR [eax+0x18c]
  41ade7:	mov    ebx,0x7510899
  41adec:	mov    esi,0x3272e0
  41adf1:	cmp    DWORD PTR [eax],edx
  41adf3:	jne    0x41b03d
  41adf9:	mov    eax,DWORD PTR [ebp-0x4]
  41adfc:	mov    eax,DWORD PTR [eax+0x17c]
  41ae02:	mov    DWORD PTR [eax],edx
  41ae04:	mov    eax,DWORD PTR [ebp-0x4]
  41ae07:	mov    eax,DWORD PTR [eax+0x180]
  41ae0d:	mov    DWORD PTR [eax],edx
  41ae0f:	mov    edi,0x4e3c
  41ae14:	mov    eax,0x4f8f
  41ae19:	mov    WORD PTR [ebp-0x78],ax
  41ae1d:	mov    eax,edi
  41ae1f:	mov    WORD PTR [ebp-0x76],ax
  41ae23:	add    eax,0x43
  41ae26:	mov    WORD PTR [ebp-0x74],ax
  41ae2a:	lea    eax,[edi+0x3]
  41ae2d:	mov    WORD PTR [ebp-0x72],ax
  41ae31:	mov    eax,0x4fac
  41ae36:	mov    WORD PTR [ebp-0x70],ax
  41ae3a:	lea    eax,[edi-0x4]
  41ae3d:	mov    WORD PTR [ebp-0x6e],ax
  41ae41:	add    eax,0x45
  41ae44:	mov    WORD PTR [ebp-0x6c],ax
  41ae48:	lea    eax,[edi-0x2]
  41ae4b:	mov    WORD PTR [ebp-0x6a],ax
  41ae4f:	mov    eax,edi
  41ae51:	mov    WORD PTR [ebp-0x68],ax
  41ae55:	dec    eax
  41ae56:	mov    WORD PTR [ebp-0x66],ax
  41ae5a:	mov    eax,0x99ff
  41ae5f:	mov    WORD PTR [ebp-0x64],ax
  41ae63:	mov    eax,0x8288
  41ae68:	mov    WORD PTR [ebp-0x62],ax
  41ae6c:	mov    eax,0xd78d
  41ae71:	mov    WORD PTR [ebp-0x60],ax
  41ae75:	add    eax,0x1c
  41ae78:	mov    WORD PTR [ebp-0x5e],ax
  41ae7c:	mov    eax,0x27aa
  41ae81:	mov    WORD PTR [ebp-0x5c],ax
  41ae85:	mov    eax,0x47aa
  41ae8a:	mov    WORD PTR [ebp-0x5a],ax
  41ae8e:	lea    eax,[edi-0x3]
  41ae91:	push   0x8
  41ae93:	mov    WORD PTR [ebp-0x58],ax
  41ae97:	mov    DWORD PTR [ebp-0x10],0xf306020f
  41ae9e:	mov    DWORD PTR [ebp-0xc],0x7a010a19
  41aea5:	lea    eax,[ebp-0x10]
  41aea8:	pop    ecx
  41aea9:	mov    dl,BYTE PTR [eax]
  41aeab:	xor    dl,0x73
  41aeae:	sub    dl,0x9
  41aeb1:	mov    BYTE PTR [eax],dl
  41aeb3:	inc    eax
  41aeb4:	dec    ecx
  41aeb5:	jne    0x41aea9
  41aeb7:	lea    eax,[ebp-0x10]
  41aeba:	mov    DWORD PTR [ebp-0xb8],eax
  41aec0:	lea    eax,[ebp-0xbc]
  41aec6:	push   eax
  41aec7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeca:	xor    eax,ebx
  41aecc:	add    eax,esi
  41aece:	push   eax
  41aecf:	mov    eax,DWORD PTR [ebp-0x4]
  41aed2:	add    eax,0x66
  41aed5:	push   eax
  41aed6:	mov    eax,DWORD PTR [ebp-0x4]
  41aed9:	mov    eax,DWORD PTR [eax+0x198]
  41aedf:	mov    DWORD PTR [ebp-0xbc],0x1
  41aee9:	push   DWORD PTR [eax]
  41aeeb:	mov    eax,DWORD PTR [ebp+0x10]
  41aeee:	call   eax
  41aef0:	mov    ecx,DWORD PTR [ebp+0x8]
  41aef3:	xor    ecx,ebx
  41aef5:	add    ecx,esi
  41aef7:	mov    DWORD PTR [ebp-0x8],eax
  41aefa:	cmp    eax,ecx
  41aefc:	jne    0x41af17
  41aefe:	mov    eax,ds:0x33730bee
  41af03:	or     eax,0x22150bef
  41af08:	mov    ds:0x33730bee,eax
  41af0d:	add    eax,0x3372e90f
  41af12:	mov    ds:0x33730bee,eax
  41af17:	mov    ecx,0x4f84
  41af1c:	mov    eax,ecx
  41af1e:	mov    WORD PTR [ebp-0x40],ax
  41af22:	mov    eax,0x4e71
  41af27:	mov    edx,eax
  41af29:	mov    WORD PTR [ebp-0x3e],dx
  41af2d:	lea    edx,[ecx+0x15]
  41af30:	mov    WORD PTR [ebp-0x3c],dx
  41af34:	add    edx,0xfffffff8
  41af37:	mov    WORD PTR [ebp-0x3a],dx
  41af3b:	lea    edx,[ecx+0xf]
  41af3e:	mov    WORD PTR [ebp-0x38],dx
  41af42:	add    edx,0x1b
  41af45:	mov    WORD PTR [ebp-0x36],dx
  41af49:	lea    edx,[ecx+0x21]
  41af4c:	mov    WORD PTR [ebp-0x34],dx
  41af50:	mov    WORD PTR [ebp-0x32],cx
  41af54:	mov    ecx,edi
  41af56:	mov    WORD PTR [ebp-0x30],cx
  41af5a:	lea    ecx,[edx-0x1]
  41af5d:	mov    edx,ecx
  41af5f:	mov    WORD PTR [ebp-0x54],dx
  41af63:	mov    edx,eax
  41af65:	mov    WORD PTR [ebp-0x52],dx
  41af69:	add    edx,0x8
  41af6c:	mov    WORD PTR [ebp-0x50],dx
  41af70:	mov    WORD PTR [ebp-0x4e],ax
  41af74:	add    eax,0x2
  41af77:	mov    WORD PTR [ebp-0x4c],ax
  41af7b:	lea    eax,[ecx-0x16]
  41af7e:	mov    WORD PTR [ebp-0x4a],ax
  41af82:	add    eax,0xfffffff7
  41af85:	mov    WORD PTR [ebp-0x48],ax
  41af89:	mov    WORD PTR [ebp-0x46],cx
  41af8d:	mov    WORD PTR [ebp-0x44],di
  41af91:	mov    eax,DWORD PTR [ebp+0x8]
  41af94:	movzx  ecx,WORD PTR [ebp-0x54]
  41af98:	xor    eax,ebx
  41af9a:	add    eax,esi
  41af9c:	xor    eax,ecx
  41af9e:	mov    WORD PTR [ebp-0x54],ax
  41afa2:	mov    eax,DWORD PTR [ebp+0x8]
  41afa5:	movzx  ecx,WORD PTR [ebp-0x40]
  41afa9:	xor    eax,ebx
  41afab:	add    eax,esi
  41afad:	xor    eax,ecx
  41afaf:	mov    WORD PTR [ebp-0x40],ax
  41afb3:	xor    eax,eax
  41afb5:	mov    WORD PTR [ebp-0xd0],ax
  41afbc:	mov    WORD PTR [ebp-0xe4],ax
  41afc3:	mov    edi,DWORD PTR [ebp+0x24]
  41afc6:	lea    eax,[ebp-0xd0]
  41afcc:	lea    edx,[ebp-0x54]
  41afcf:	mov    DWORD PTR [ebp-0xbc],0x2
  41afd9:	mov    DWORD PTR [ebp-0xb8],eax
  41afdf:	call   0x41d97e
  41afe4:	mov    DWORD PTR [ebp-0xb4],eax
  41afea:	lea    eax,[ebp-0xbc]
  41aff0:	push   eax
  41aff1:	mov    eax,DWORD PTR [ebp+0xc]
  41aff4:	xor    eax,ebx
  41aff6:	add    eax,esi
  41aff8:	push   eax
  41aff9:	lea    eax,[ebp-0x78]
  41affc:	push   eax
  41affd:	push   DWORD PTR [ebp-0x8]
  41b000:	mov    eax,DWORD PTR [ebp+0x10]
  41b003:	call   eax
  41b005:	mov    edi,DWORD PTR [ebp+0x24]
  41b008:	lea    eax,[ebp-0xe4]
  41b00e:	lea    edx,[ebp-0x40]
  41b011:	mov    DWORD PTR [ebp-0xb8],eax
  41b017:	call   0x41d97e
  41b01c:	mov    DWORD PTR [ebp-0xb4],eax
  41b022:	lea    eax,[ebp-0xbc]
  41b028:	push   eax
  41b029:	mov    eax,DWORD PTR [ebp+0xc]
  41b02c:	xor    eax,ebx
  41b02e:	add    eax,esi
  41b030:	push   eax
  41b031:	lea    eax,[ebp-0x78]
  41b034:	push   eax
  41b035:	push   DWORD PTR [ebp-0x8]
  41b038:	mov    eax,DWORD PTR [ebp+0x10]
  41b03b:	call   eax
  41b03d:	mov    eax,DWORD PTR [ebp+0x14]
  41b040:	push   DWORD PTR [ebp-0x4]
  41b043:	push   DWORD PTR [ebp+0x20]
  41b046:	push   DWORD PTR [ebp+0x1c]
  41b049:	push   DWORD PTR [ebp+0x18]
  41b04c:	push   DWORD PTR [ebp+0x10]
  41b04f:	push   DWORD PTR [ebp+0x8]
  41b052:	push   DWORD PTR [ebp+0xc]
  41b055:	call   0x41c1fa
  41b05a:	test   eax,eax
  41b05c:	je     0x41b0a0
  41b05e:	add    DWORD PTR [ebp-0x4],eax
  41b061:	push   DWORD PTR [ebp-0x4]
  41b064:	lea    edi,[ebp+0x4]
  41b067:	call   0x41b490
  41b06c:	mov    eax,DWORD PTR [ebp-0x4]
  41b06f:	mov    eax,DWORD PTR [eax+0x1c8]
  41b075:	mov    eax,DWORD PTR [eax]
  41b077:	xor    eax,ebx
  41b079:	add    eax,esi
  41b07b:	mov    eax,DWORD PTR [ebp-0x4]
  41b07e:	jne    0x41b096
  41b080:	mov    ecx,DWORD PTR [ebp-0x4]
  41b083:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b089:	push   DWORD PTR [ecx]
  41b08b:	mov    eax,DWORD PTR [eax+0x1d8]
  41b091:	call   DWORD PTR [eax+0x28]
  41b094:	jmp    0x41b0a0
  41b096:	mov    eax,DWORD PTR [eax+0x17c]
  41b09c:	mov    eax,DWORD PTR [eax]
  41b09e:	add    DWORD PTR [edi],eax
  41b0a0:	pop    esi
  41b0a1:	pop    edi
  41b0a2:	pop    ebx
  41b0a3:	leave  
  41b0a4:	ret    0x20
  41b0a7:	push   edi
  41b0a8:	push   esi
  41b0a9:	push   ebx
  41b0aa:	push   ebp
  41b0ab:	mov    ebp,esp
  41b0ad:	mov    eax,DWORD PTR [ebp+0x24]
  41b0b0:	add    DWORD PTR [ebp+0x28],eax
  41b0b3:	push   eax
  41b0b4:	cld    
  41b0b5:	mov    esi,DWORD PTR [ebp+0x18]
  41b0b8:	add    DWORD PTR [ebp+0x1c],esi
  41b0bb:	push   esi
  41b0bc:	mov    esi,DWORD PTR [ebp+0x14]
  41b0bf:	lods   eax,DWORD PTR ds:[esi]
  41b0c0:	xchg   edx,eax
  41b0c1:	push   edx
  41b0c2:	mov    cl,BYTE PTR [esi-0x2]
  41b0c5:	or     eax,0xffffffff
  41b0c8:	shl    eax,cl
  41b0ca:	not    eax
  41b0cc:	push   eax
  41b0cd:	mov    cl,dh
  41b0cf:	or     eax,0xffffffff
  41b0d2:	shl    eax,cl
  41b0d4:	not    eax
  41b0d6:	push   eax
  41b0d7:	add    cl,dl
  41b0d9:	mov    edi,esi
  41b0db:	sub    esp,0xc
  41b0de:	sub    eax,eax
  41b0e0:	inc    eax
  41b0e1:	push   eax
  41b0e2:	push   eax
  41b0e3:	push   eax
  41b0e4:	push   eax
  41b0e5:	push   eax
  41b0e6:	push   edi
  41b0e7:	sub    esi,esi
  41b0e9:	push   esi
  41b0ea:	or     ebx,0xffffffff
  41b0ed:	mov    eax,0x300
  41b0f2:	shl    eax,cl
  41b0f4:	lea    ecx,[eax+0x736]
  41b0fa:	mov    eax,0x4000400
  41b0ff:	shr    ecx,1
  41b101:	rep stos DWORD PTR es:[edi],eax
  41b103:	push   0x5
  41b105:	pop    ecx
  41b106:	call   0x41b3f1
  41b10b:	loop   0x41b106
  41b10d:	lea    esi,[esi]
  41b10f:	lea    edi,[edi]
  41b111:	mov    edi,DWORD PTR [ebp-0x4]
  41b114:	mov    eax,DWORD PTR [ebp-0x10]
  41b117:	sub    edi,DWORD PTR [ebp+0x24]
  41b11a:	and    eax,edi
  41b11c:	mov    DWORD PTR [ebp-0x18],eax
  41b11f:	mov    al,0x0
  41b121:	call   0x41b409
  41b126:	jne    0x41b1c1
  41b12c:	mov    cl,BYTE PTR [ebp-0xc]
  41b12f:	and    edi,DWORD PTR [ebp-0x14]
  41b132:	shl    edi,cl
  41b134:	sub    cl,0x8
  41b137:	neg    cl
  41b139:	shr    esi,cl
  41b13b:	pop    eax
  41b13c:	add    edi,esi
  41b13e:	pop    esi
  41b13f:	lea    edi,[edi+edi*2]
  41b142:	shl    edi,0x8
  41b145:	cmp    al,0x7
  41b147:	pop    edx
  41b148:	lea    ecx,[esi+edi*2+0xe6c]
  41b14f:	push   ecx
  41b150:	push   esi
  41b151:	mov    esi,0x100
  41b156:	push   eax
  41b157:	mov    al,0x1
  41b159:	jb     0x41b18f
  41b15b:	mov    edi,DWORD PTR [ebp-0x4]
  41b15e:	sub    edi,DWORD PTR [ebp-0x24]
  41b161:	movzx  edi,BYTE PTR [edi]
  41b164:	mov    ebp,DWORD PTR [ebp-0x34]
  41b167:	shl    edi,1
  41b169:	mov    ecx,esi
  41b16b:	and    esi,edi
  41b16d:	add    ecx,esi
  41b16f:	lea    ebp,[ebp+ecx*2+0x0]
  41b173:	call   0x41b428
  41b178:	mov    ecx,eax
  41b17a:	shr    esi,0x8
  41b17d:	and    ecx,0x1
  41b180:	cmp    esi,ecx
  41b182:	mov    esi,0x100
  41b187:	jne    0x41b197
  41b189:	cmp    eax,esi
  41b18b:	jb     0x41b164
  41b18d:	jmp    0x41b1a3
  41b18f:	mov    ebp,DWORD PTR [ebp-0x34]
  41b192:	call   0x41b428
  41b197:	inc    eax
  41b198:	inc    esi
  41b199:	sub    eax,0x1
  41b19c:	sub    esi,0x1
  41b19f:	cmp    eax,esi
  41b1a1:	jb     0x41b18f
  41b1a3:	pop    edx
  41b1a4:	inc    edx
  41b1a5:	cmp    edx,0x5
  41b1a8:	dec    edx
  41b1a9:	mov    ecx,edx
  41b1ab:	jb     0x41b1bc
  41b1ad:	inc    edx
  41b1ae:	cmp    edx,0xb
  41b1b1:	dec    edx
  41b1b2:	mov    cl,0x4
  41b1b4:	dec    cl
  41b1b6:	jb     0x41b1bc
  41b1b8:	mov    cl,0x7
  41b1ba:	dec    cl
  41b1bc:	sub    edx,ecx
  41b1be:	push   edx
  41b1bf:	jmp    0x41b210
  41b1c1:	mov    al,0xc1
  41b1c3:	dec    al
  41b1c5:	call   0x41b419
  41b1ca:	jne    0x41b1e0
  41b1cc:	pop    eax
  41b1cd:	pop    edi
  41b1ce:	pop    edx
  41b1cf:	pop    ecx
  41b1d0:	pop    edx
  41b1d1:	pop    ecx
  41b1d2:	push   DWORD PTR [esp]
  41b1d5:	push   ecx
  41b1d6:	push   edx
  41b1d7:	mov    edx,0x664
  41b1dc:	mov    cl,0x0
  41b1de:	jmp    0x41b253
  41b1e0:	mov    al,0xcd
  41b1e2:	dec    al
  41b1e4:	call   0x41b419
  41b1e9:	jne    0x41b219
  41b1eb:	mov    al,0xf1
  41b1ed:	dec    al
  41b1ef:	call   0x41b409
  41b1f4:	jne    0x41b249
  41b1f6:	pop    eax
  41b1f7:	cmp    al,0x7
  41b1f9:	mov    al,0x9
  41b1fb:	jb     0x41b1ff
  41b1fd:	mov    al,0xb
  41b1ff:	push   eax
  41b200:	mov    esi,DWORD PTR [ebp-0x4]
  41b203:	sub    esi,DWORD PTR [ebp-0x24]
  41b206:	cmp    esi,DWORD PTR [ebp+0x24]
  41b209:	jb     0x41b3e0
  41b20f:	lods   al,BYTE PTR ds:[esi]
  41b210:	mov    edi,DWORD PTR [ebp-0x4]
  41b213:	stos   BYTE PTR es:[edi],al
  41b214:	jmp    0x41b3a7
  41b219:	mov    al,0xd8
  41b21b:	call   0x41b419
  41b220:	mov    esi,DWORD PTR [ebp-0x28]
  41b223:	je     0x41b240
  41b225:	mov    al,0xe4
  41b227:	call   0x41b419
  41b22c:	mov    esi,DWORD PTR [ebp-0x2c]
  41b22f:	je     0x41b23a
  41b231:	mov    esi,DWORD PTR [ebp-0x30]
  41b234:	mov    ecx,DWORD PTR [ebp-0x2c]
  41b237:	mov    DWORD PTR [ebp-0x30],ecx
  41b23a:	mov    ecx,DWORD PTR [ebp-0x28]
  41b23d:	mov    DWORD PTR [ebp-0x2c],ecx
  41b240:	mov    ecx,DWORD PTR [ebp-0x24]
  41b243:	mov    DWORD PTR [ebp-0x28],ecx
  41b246:	mov    DWORD PTR [ebp-0x24],esi
  41b249:	pop    eax
  41b24a:	pop    edi
  41b24b:	pop    ecx
  41b24c:	mov    edx,0xa68
  41b251:	mov    cl,0x8
  41b253:	add    edx,edi
  41b255:	push   edx
  41b256:	push   edi
  41b257:	cmp    al,0x7
  41b259:	mov    al,cl
  41b25b:	jb     0x41b25f
  41b25d:	add    al,0x3
  41b25f:	push   eax
  41b260:	mov    ebp,DWORD PTR [ebp-0x34]
  41b263:	call   0x41b426
  41b268:	jne    0x41b27e
  41b26a:	mov    eax,DWORD PTR [ebp-0x18]
  41b26d:	mov    edi,DWORD PTR [ebp-0x34]
  41b270:	shl    eax,0x3
  41b273:	sub    ecx,ecx
  41b275:	push   0x8
  41b277:	pop    esi
  41b278:	lea    edi,[edi+eax*2+0x4]
  41b27c:	jmp    0x41b2b3
  41b27e:	mov    ebp,DWORD PTR [ebp-0x34]
  41b281:	add    ebp,0x2
  41b284:	call   0x41b426
  41b289:	jne    0x41b2a3
  41b28b:	mov    eax,DWORD PTR [ebp-0x18]
  41b28e:	mov    edi,DWORD PTR [ebp-0x34]
  41b291:	shl    eax,0x3
  41b294:	push   0x8
  41b296:	pop    ecx
  41b297:	push   0x8
  41b299:	pop    esi
  41b29a:	lea    edi,[edi+eax*2+0x104]
  41b2a1:	jmp    0x41b2b3
  41b2a3:	mov    edi,0x204
  41b2a8:	add    edi,DWORD PTR [ebp-0x34]
  41b2ab:	push   0x10
  41b2ad:	pop    ecx
  41b2ae:	mov    esi,0x100
  41b2b3:	mov    DWORD PTR [ebp-0x1c],ecx
  41b2b6:	sub    eax,eax
  41b2b8:	inc    eax
  41b2b9:	mov    ebp,edi
  41b2bb:	call   0x41b428
  41b2c0:	mov    ecx,eax
  41b2c2:	sub    ecx,esi
  41b2c4:	jb     0x41b2b9
  41b2c6:	add    DWORD PTR [ebp-0x1c],ecx
  41b2c9:	cmp    DWORD PTR [ebp-0x3c],0x4
  41b2cd:	jae    0x41b383
  41b2d3:	add    DWORD PTR [ebp-0x3c],0x7
  41b2d7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b2da:	cmp    ecx,0x4
  41b2dd:	jb     0x41b2e2
  41b2df:	push   0x3
  41b2e1:	pop    ecx
  41b2e2:	mov    edi,DWORD PTR [ebp-0x38]
  41b2e5:	shl    ecx,0x6
  41b2e8:	sub    eax,eax
  41b2ea:	inc    eax
  41b2eb:	push   0x40
  41b2ed:	pop    esi
  41b2ee:	lea    edi,[edi+ecx*2+0x360]
  41b2f5:	mov    ebp,edi
  41b2f7:	call   0x41b428
  41b2fc:	mov    ecx,eax
  41b2fe:	sub    ecx,esi
  41b300:	jb     0x41b2f5
  41b302:	mov    DWORD PTR [ebp-0x18],ecx
  41b305:	mov    DWORD PTR [ebp-0x24],ecx
  41b308:	cmp    ecx,0x4
  41b30b:	jb     0x41b380
  41b30d:	mov    esi,ecx
  41b30f:	and    DWORD PTR [ebp-0x24],0x1
  41b313:	shr    esi,1
  41b315:	or     DWORD PTR [ebp-0x24],0x2
  41b319:	dec    esi
  41b31a:	cmp    ecx,0xe
  41b31d:	jae    0x41b338
  41b31f:	mov    eax,0x2af
  41b324:	sub    eax,ecx
  41b326:	mov    ecx,esi
  41b328:	shl    BYTE PTR [ebp-0x24],cl
  41b32b:	add    eax,DWORD PTR [ebp-0x24]
  41b32e:	shl    eax,1
  41b330:	add    eax,DWORD PTR [ebp-0x38]
  41b333:	mov    DWORD PTR [ebp-0x34],eax
  41b336:	jmp    0x41b365
  41b338:	sub    esi,0x4
  41b33b:	call   0x41b3e5
  41b340:	shr    ebx,1
  41b342:	shl    DWORD PTR [ebp-0x24],1
  41b345:	cmp    DWORD PTR [ebp-0x20],ebx
  41b348:	jb     0x41b350
  41b34a:	inc    DWORD PTR [ebp-0x24]
  41b34d:	sub    DWORD PTR [ebp-0x20],ebx
  41b350:	dec    esi
  41b351:	jne    0x41b33b
  41b353:	mov    eax,0x644
  41b358:	add    eax,DWORD PTR [ebp-0x38]
  41b35b:	mov    DWORD PTR [ebp-0x34],eax
  41b35e:	shl    DWORD PTR [ebp-0x24],0x4
  41b362:	push   0x4
  41b364:	pop    esi
  41b365:	sub    edi,edi
  41b367:	inc    edi
  41b368:	mov    eax,edi
  41b36a:	mov    ebp,DWORD PTR [ebp-0x34]
  41b36d:	call   0x41b428
  41b372:	test   al,0x1
  41b374:	je     0x41b379
  41b376:	or     DWORD PTR [ebp-0x24],edi
  41b379:	shl    edi,1
  41b37b:	dec    esi
  41b37c:	jne    0x41b36a
  41b37e:	jmp    0x41b380
  41b380:	inc    DWORD PTR [ebp-0x24]
  41b383:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b386:	add    ecx,0x2
  41b389:	mov    edi,DWORD PTR [ebp-0x4]
  41b38c:	mov    eax,edi
  41b38e:	sub    eax,DWORD PTR [ebp+0x24]
  41b391:	cmp    DWORD PTR [ebp-0x24],eax
  41b394:	ja     0x41b3e0
  41b396:	mov    esi,edi
  41b398:	sub    esi,DWORD PTR [ebp-0x24]
  41b39b:	mov    edx,DWORD PTR [ebp+0x28]
  41b39e:	lods   al,BYTE PTR ds:[esi]
  41b39f:	stos   BYTE PTR es:[edi],al
  41b3a0:	cmp    edi,edx
  41b3a2:	jae    0x41b3a7
  41b3a4:	dec    ecx
  41b3a5:	jne    0x41b39e
  41b3a7:	mov    DWORD PTR [ebp-0x4],edi
  41b3aa:	movzx  esi,al
  41b3ad:	cmp    edi,DWORD PTR [ebp+0x28]
  41b3b0:	jb     0x41b111
  41b3b6:	call   0x41b3e5
  41b3bb:	sub    eax,eax
  41b3bd:	lea    ebp,[esp+0x3c]
  41b3c1:	mov    edx,DWORD PTR [ebp+0x20]
  41b3c4:	mov    esi,DWORD PTR [ebp-0x8]
  41b3c7:	sub    esi,DWORD PTR [ebp+0x18]
  41b3ca:	mov    DWORD PTR [edx],esi
  41b3cc:	mov    edx,DWORD PTR [ebp+0x2c]
  41b3cf:	mov    edi,DWORD PTR [ebp-0x4]
  41b3d2:	sub    edi,DWORD PTR [ebp+0x24]
  41b3d5:	mov    DWORD PTR [edx],edi
  41b3d7:	leave  
  41b3d8:	pop    ebx
  41b3d9:	pop    esi
  41b3da:	pop    edi
  41b3db:	ret    0x1c
  41b3de:	pop    esi
  41b3df:	pop    eax
  41b3e0:	sub    eax,eax
  41b3e2:	inc    eax
  41b3e3:	jmp    0x41b3bd
  41b3e5:	cmp    ebx,0x1000000
  41b3eb:	jb     0x41b3ee
  41b3ed:	ret    
  41b3ee:	shl    ebx,0x8
  41b3f1:	push   esi
  41b3f2:	mov    esi,DWORD PTR [ebp-0x8]
  41b3f5:	cmp    esi,DWORD PTR [ebp+0x1c]
  41b3f8:	jae    0x41b3de
  41b3fa:	mov    eax,DWORD PTR [ebp-0x20]
  41b3fd:	shl    eax,0x8
  41b400:	lods   al,BYTE PTR ds:[esi]
  41b401:	mov    DWORD PTR [ebp-0x20],eax
  41b404:	mov    DWORD PTR [ebp-0x8],esi
  41b407:	pop    esi
  41b408:	ret    
  41b409:	mov    ecx,DWORD PTR [ebp-0x3c]
  41b40c:	movzx  eax,al
  41b40f:	shl    ecx,0x4
  41b412:	add    eax,DWORD PTR [ebp-0x18]
  41b415:	add    eax,ecx
  41b417:	jmp    0x41b41f
  41b419:	movzx  eax,al
  41b41c:	add    eax,DWORD PTR [ebp-0x3c]
  41b41f:	mov    ebp,DWORD PTR [ebp-0x38]
  41b422:	lea    ebp,[ebp+eax*2+0x0]
  41b426:	sub    eax,eax
  41b428:	lea    ebp,[ebp+eax*2+0x0]
  41b42c:	cmp    ebx,0x1000000
  41b432:	jae    0x41b450
  41b434:	mov    ecx,DWORD PTR [esp+0x38]
  41b438:	shl    DWORD PTR [esp+0x20],0x8
  41b43d:	cmp    ecx,DWORD PTR [esp+0x5c]
  41b441:	jae    0x41b3df
  41b443:	mov    dl,BYTE PTR [ecx]
  41b445:	inc    DWORD PTR [esp+0x38]
  41b449:	shl    ebx,0x8
  41b44c:	mov    BYTE PTR [esp+0x20],dl
  41b450:	mov    ecx,ebx
  41b452:	movzx  edx,WORD PTR [ebp+0x0]
  41b456:	shr    ecx,0xb
  41b459:	imul   ecx,edx
  41b45c:	cmp    DWORD PTR [esp+0x20],ecx
  41b460:	jae    0x41b479
  41b462:	mov    ebx,ecx
  41b464:	mov    ecx,0x800
  41b469:	sub    ecx,edx
  41b46b:	shr    ecx,0x5
  41b46e:	add    WORD PTR [ebp+0x0],cx
  41b472:	add    eax,eax
  41b474:	lea    ebp,[esp+0x40]
  41b478:	ret    
  41b479:	shr    edx,0x5
  41b47c:	sub    DWORD PTR [esp+0x20],ecx
  41b480:	sub    ebx,ecx
  41b482:	sub    WORD PTR [ebp+0x0],dx
  41b486:	add    eax,eax
  41b488:	add    eax,0x1
  41b48b:	lea    ebp,[esp+0x40]
  41b48f:	ret    
  41b490:	push   ebp
  41b491:	mov    ebp,esp
  41b493:	sub    esp,0x104
  41b499:	push   ebx
  41b49a:	push   esi
  41b49b:	push   edi
  41b49c:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41b4aa:	mov    eax,DWORD PTR [ebp+0x8]
  41b4ad:	mov    DWORD PTR [ebp+0x8],eax
  41b4b0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4b3:	mov    ebx,0x7510899
  41b4b8:	xor    ecx,ebx
  41b4ba:	mov    eax,0x3272e0
  41b4bf:	add    ecx,eax
  41b4c1:	mov    DWORD PTR [ebp-0x28],ecx
  41b4c4:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4c7:	xor    ecx,ebx
  41b4c9:	add    ecx,eax
  41b4cb:	mov    DWORD PTR [ebp-0x40],ecx
  41b4ce:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4d1:	xor    ecx,ebx
  41b4d3:	add    ecx,eax
  41b4d5:	mov    DWORD PTR [ebp-0x3c],ecx
  41b4d8:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4db:	xor    ecx,ebx
  41b4dd:	add    ecx,eax
  41b4df:	mov    DWORD PTR [ebp-0xa0],ecx
  41b4e5:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  41b4ec:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  41b4f3:	mov    DWORD PTR [ebp-0x4c],0xf89c85bd
  41b4fa:	push   0x25
  41b4fc:	pop    ecx
  41b4fd:	mov    DWORD PTR [ebp-0x2c],ecx
  41b500:	mov    DWORD PTR [ebp-0x2c],ecx
  41b503:	push   0x65
  41b505:	pop    ecx
  41b506:	mov    DWORD PTR [ebp-0x2c],ecx
  41b509:	mov    DWORD PTR [ebp-0x2c],ecx
  41b50c:	mov    DWORD PTR [ebp-0x2c],0x4d
  41b513:	mov    DWORD PTR [ebp-0x2c],0x43
  41b51a:	mov    ecx,DWORD PTR [ebp-0x14]
  41b51d:	xor    ecx,ebx
  41b51f:	add    ecx,eax
  41b521:	mov    DWORD PTR [ebp-0x2c],ecx
  41b524:	mov    ecx,DWORD PTR [ebp-0x14]
  41b527:	xor    ecx,ebx
  41b529:	add    ecx,eax
  41b52b:	mov    DWORD PTR [ebp-0x2c],ecx
  41b52e:	mov    DWORD PTR [ebp-0x24],0x257
  41b535:	mov    DWORD PTR [ebp-0x34],0x35
  41b53c:	mov    DWORD PTR [ebp-0x10],0x79
  41b543:	lea    edi,[ebp-0xe4]
  41b549:	lea    esi,[ebp-0x104]
  41b54f:	call   0x41c169
  41b554:	dec    DWORD PTR [ebp-0x10]
  41b557:	jne    0x41b543
  41b559:	dec    DWORD PTR [ebp-0x34]
  41b55c:	jne    0x41b53c
  41b55e:	dec    DWORD PTR [ebp-0x24]
  41b561:	jne    0x41b535
  41b563:	mov    DWORD PTR [ebp-0x24],0x400d
  41b56a:	mov    eax,DWORD PTR [ebp-0x14]
  41b56d:	xor    eax,ebx
  41b56f:	mov    esi,0x3272e0
  41b574:	add    eax,esi
  41b576:	mov    DWORD PTR [ebp-0x8],eax
  41b579:	mov    eax,DWORD PTR [ebp-0x14]
  41b57c:	and    DWORD PTR [ebp-0x94],0x0
  41b583:	xor    eax,ebx
  41b585:	add    eax,esi
  41b587:	mov    DWORD PTR [ebp-0x38],eax
  41b58a:	mov    eax,fs:0x18
  41b590:	mov    DWORD PTR [ebp-0x94],eax
  41b596:	mov    eax,DWORD PTR [eax+0x30]
  41b599:	mov    DWORD PTR [ebp-0x98],eax
  41b59f:	mov    eax,DWORD PTR [eax+0xc]
  41b5a2:	mov    DWORD PTR [ebp-0xc0],eax
  41b5a8:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ab:	lea    ecx,[ebp-0x94]
  41b5b1:	mov    DWORD PTR [eax+0x1a0],ecx
  41b5b7:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ba:	lea    ecx,[ebp-0x98]
  41b5c0:	mov    DWORD PTR [eax+0x1a4],ecx
  41b5c6:	mov    eax,DWORD PTR [ebp+0x8]
  41b5c9:	push   DWORD PTR [ebp+0x8]
  41b5cc:	lea    ecx,[ebp-0xc0]
  41b5d2:	mov    DWORD PTR [eax+0x1a8],ecx
  41b5d8:	call   0x41d94f
  41b5dd:	mov    ecx,DWORD PTR [ebp-0x14]
  41b5e0:	xor    ecx,ebx
  41b5e2:	add    ecx,esi
  41b5e4:	cmp    ecx,eax
  41b5e6:	je     0x41b8c3
  41b5ec:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ef:	mov    eax,DWORD PTR [eax+0x194]
  41b5f5:	mov    ecx,DWORD PTR [eax]
  41b5f7:	mov    eax,DWORD PTR [ebp+0x8]
  41b5fa:	mov    eax,DWORD PTR [eax+0x194]
  41b600:	mov    eax,DWORD PTR [eax]
  41b602:	add    eax,DWORD PTR [ecx+0x3c]
  41b605:	mov    ecx,DWORD PTR [ebp+0x8]
  41b608:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41b60e:	lea    edx,[ebp-0xc4]
  41b614:	push   edx
  41b615:	mov    edx,DWORD PTR [ebp+0x8]
  41b618:	mov    edx,DWORD PTR [edx+0x18c]
  41b61e:	mov    edx,DWORD PTR [edx]
  41b620:	add    edx,DWORD PTR [eax+0x88]
  41b626:	push   0x4
  41b628:	push   DWORD PTR [eax+0x8c]
  41b62e:	push   edx
  41b62f:	call   DWORD PTR [ecx+0x1c]
  41b632:	push   DWORD PTR [ebp+0x8]
  41b635:	mov    edi,DWORD PTR [ebp+0x8]
  41b638:	mov    eax,DWORD PTR [ebp+0x8]
  41b63b:	mov    edx,DWORD PTR [eax+0x1b8]
  41b641:	mov    DWORD PTR [ebp-0x68],0x80e0f06
  41b648:	mov    DWORD PTR [ebp-0x64],0x10a051f
  41b64f:	mov    WORD PTR [ebp-0x60],0x7a39
  41b655:	mov    DWORD PTR [ebp-0x90],0x23f0f21
  41b65f:	mov    DWORD PTR [ebp-0x8c],0x6390819
  41b669:	mov    DWORD PTR [ebp-0x88],0x2419020a
  41b673:	mov    DWORD PTR [ebp-0x84],0x81d050d
  41b67d:	mov    DWORD PTR [ebp-0x80],0x7a391f01
  41b684:	mov    DWORD PTR [ebp-0x7c],0x23f0f21
  41b68b:	mov    DWORD PTR [ebp-0x78],0x6390819
  41b692:	mov    DWORD PTR [ebp-0x74],0x2419020a
  41b699:	mov    DWORD PTR [ebp-0x70],0x81d050d
  41b6a0:	mov    DWORD PTR [ebp-0x6c],0x7a131f01
  41b6a7:	call   0x41d97e
  41b6ac:	push   eax
  41b6ad:	mov    eax,DWORD PTR [ebp+0x8]
  41b6b0:	mov    eax,DWORD PTR [eax+0x1a8]
  41b6b6:	push   DWORD PTR [eax]
  41b6b8:	call   0x41d61f
  41b6bd:	test   eax,eax
  41b6bf:	jne    0x41b711
  41b6c1:	mov    eax,DWORD PTR [ebp+0x8]
  41b6c4:	mov    eax,DWORD PTR [eax+0x1d8]
  41b6ca:	mov    edi,DWORD PTR [ebp+0x8]
  41b6cd:	add    eax,0x4
  41b6d0:	mov    DWORD PTR [ebp-0x20],eax
  41b6d3:	mov    eax,DWORD PTR [ebp+0x8]
  41b6d6:	mov    edx,DWORD PTR [eax+0x1b8]
  41b6dc:	call   0x41d97e
  41b6e1:	push   eax
  41b6e2:	mov    eax,DWORD PTR [ebp-0x20]
  41b6e5:	call   DWORD PTR [eax]
  41b6e7:	test   eax,eax
  41b6e9:	jne    0x41b711
  41b6eb:	mov    eax,DWORD PTR [ebp+0x8]
  41b6ee:	mov    eax,DWORD PTR [eax+0x1d8]
  41b6f4:	mov    edi,DWORD PTR [ebp+0x8]
  41b6f7:	add    eax,0x10
  41b6fa:	mov    DWORD PTR [ebp-0x20],eax
  41b6fd:	mov    eax,DWORD PTR [ebp+0x8]
  41b700:	mov    edx,DWORD PTR [eax+0x1b8]
  41b706:	call   0x41d97e
  41b70b:	push   eax
  41b70c:	mov    eax,DWORD PTR [ebp-0x20]
  41b70f:	call   DWORD PTR [eax]
  41b711:	mov    eax,DWORD PTR [ebp-0x14]
  41b714:	mov    ecx,DWORD PTR [ebp-0x24]
  41b717:	xor    eax,ebx
  41b719:	add    eax,esi
  41b71b:	cmp    eax,ecx
  41b71d:	je     0x41b89c
  41b723:	mov    eax,DWORD PTR [ebp-0x18]
  41b726:	xor    eax,ebx
  41b728:	mov    ecx,0xffcd8d20
  41b72d:	sub    ecx,eax
  41b72f:	add    ecx,DWORD PTR [ebp-0x24]
  41b732:	mov    eax,DWORD PTR [ebp-0x8]
  41b735:	cmp    eax,ecx
  41b737:	ja     0x41b89c
  41b73d:	mov    DWORD PTR [ebp-0x34],0x0
  41b744:	push   DWORD PTR [ebp+0x8]
  41b747:	mov    edi,DWORD PTR [ebp+0x8]
  41b74a:	mov    eax,DWORD PTR [ebp+0x8]
  41b74d:	mov    edx,DWORD PTR [eax+0x1b4]
  41b753:	call   0x41d97e
  41b758:	push   eax
  41b759:	mov    eax,DWORD PTR [ebp+0x8]
  41b75c:	mov    eax,DWORD PTR [eax+0x1a8]
  41b762:	push   DWORD PTR [eax]
  41b764:	call   0x41d61f
  41b769:	mov    ecx,DWORD PTR [ebp+0x8]
  41b76c:	mov    ecx,DWORD PTR [ecx+0x19c]
  41b772:	mov    DWORD PTR [ecx],eax
  41b774:	mov    eax,DWORD PTR [ebp+0x8]
  41b777:	mov    edi,DWORD PTR [eax+0x1d8]
  41b77d:	mov    esi,DWORD PTR [ebp+0x8]
  41b780:	xor    eax,eax
  41b782:	lea    edx,[ebp-0x7c]
  41b785:	call   0x41d9b4
  41b78a:	push   eax
  41b78b:	mov    eax,DWORD PTR [ebp+0x8]
  41b78e:	mov    eax,DWORD PTR [eax+0x19c]
  41b794:	push   DWORD PTR [eax]
  41b796:	call   DWORD PTR [edi+0x8]
  41b799:	mov    DWORD PTR [ebp-0x20],eax
  41b79c:	mov    eax,DWORD PTR [ebp+0x8]
  41b79f:	mov    edi,DWORD PTR [eax+0x1d8]
  41b7a5:	mov    esi,DWORD PTR [ebp+0x8]
  41b7a8:	xor    eax,eax
  41b7aa:	lea    edx,[ebp-0x90]
  41b7b0:	call   0x41d9b4
  41b7b5:	push   eax
  41b7b6:	mov    eax,DWORD PTR [ebp+0x8]
  41b7b9:	mov    eax,DWORD PTR [eax+0x19c]
  41b7bf:	push   DWORD PTR [eax]
  41b7c1:	call   DWORD PTR [edi+0x8]
  41b7c4:	and    DWORD PTR [ebp-0x1c],0x0
  41b7c8:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7cb:	and    eax,0x7
  41b7ce:	add    eax,0x31
  41b7d1:	push   eax
  41b7d2:	call   DWORD PTR [ebp-0x20]
  41b7d5:	test   eax,eax
  41b7d7:	jne    0x41b7de
  41b7d9:	and    DWORD PTR [ebp-0x10],eax
  41b7dc:	jmp    0x41b806
  41b7de:	mov    eax,DWORD PTR [ebp+0x8]
  41b7e1:	mov    edi,DWORD PTR [eax+0x1d8]
  41b7e7:	mov    esi,DWORD PTR [ebp+0x8]
  41b7ea:	xor    eax,eax
  41b7ec:	lea    edx,[ebp-0x68]
  41b7ef:	call   0x41d9b4
  41b7f4:	push   eax
  41b7f5:	mov    eax,DWORD PTR [ebp+0x8]
  41b7f8:	mov    eax,DWORD PTR [eax+0x198]
  41b7fe:	push   DWORD PTR [eax]
  41b800:	call   DWORD PTR [edi+0x8]
  41b803:	mov    DWORD PTR [ebp-0x10],eax
  41b806:	inc    DWORD PTR [ebp-0x1c]
  41b809:	cmp    DWORD PTR [ebp-0x1c],0x10
  41b80d:	jb     0x41b7c8
  41b80f:	mov    eax,DWORD PTR [ebp-0x18]
  41b812:	mov    esi,DWORD PTR [ebp+0x8]
  41b815:	xor    eax,ebx
  41b817:	mov    edi,0x3272e0
  41b81c:	add    eax,edi
  41b81e:	lea    edx,[ebp-0xe4]
  41b824:	call   0x41d9b4
  41b829:	push   eax
  41b82a:	mov    eax,DWORD PTR [ebp-0x14]
  41b82d:	mov    esi,DWORD PTR [ebp+0x8]
  41b830:	xor    eax,ebx
  41b832:	add    eax,edi
  41b834:	lea    edx,[ebp-0x104]
  41b83a:	call   0x41d9b4
  41b83f:	push   eax
  41b840:	call   DWORD PTR [ebp-0x10]
  41b843:	mov    ecx,DWORD PTR [ebp-0x14]
  41b846:	xor    ecx,ebx
  41b848:	add    ecx,edi
  41b84a:	cmp    ecx,eax
  41b84c:	jne    0x41b855
  41b84e:	mov    DWORD PTR [ebp-0x34],0x1
  41b855:	mov    eax,DWORD PTR [ebp-0x18]
  41b858:	mov    ecx,DWORD PTR [ebp-0x8]
  41b85b:	xor    eax,ebx
  41b85d:	lea    eax,[eax+ecx*1+0x3272e0]
  41b864:	mov    DWORD PTR [ebp-0x8],eax
  41b867:	mov    eax,DWORD PTR [ebp-0x34]
  41b86a:	test   eax,eax
  41b86c:	je     0x41b880
  41b86e:	mov    eax,DWORD PTR [ebp-0x18]
  41b871:	mov    ecx,DWORD PTR [ebp-0x38]
  41b874:	xor    eax,ebx
  41b876:	lea    eax,[eax+ecx*1+0x3272e0]
  41b87d:	mov    DWORD PTR [ebp-0x38],eax
  41b880:	mov    eax,DWORD PTR [ebp-0x18]
  41b883:	xor    eax,ebx
  41b885:	mov    ecx,0xffcd8d20
  41b88a:	sub    ecx,eax
  41b88c:	add    ecx,DWORD PTR [ebp-0x24]
  41b88f:	mov    eax,DWORD PTR [ebp-0x8]
  41b892:	cmp    eax,ecx
  41b894:	jbe    0x41b73d
  41b89a:	mov    esi,edi
  41b89c:	mov    eax,DWORD PTR [ebp-0x38]
  41b89f:	mov    ecx,DWORD PTR [ebp-0x8]
  41b8a2:	cmp    ecx,eax
  41b8a4:	jne    0x41b8b7
  41b8a6:	push   DWORD PTR [ebp+0x8]
  41b8a9:	lea    eax,[ebp-0x40]
  41b8ac:	push   eax
  41b8ad:	call   0x41e42c
  41b8b2:	mov    DWORD PTR [ebp-0x28],eax
  41b8b5:	jmp    0x41b8c3
  41b8b7:	mov    eax,DWORD PTR [ebp-0x28]
  41b8ba:	mov    ecx,DWORD PTR [ebp-0x18]
  41b8bd:	xor    ecx,ebx
  41b8bf:	add    ecx,esi
  41b8c1:	xor    DWORD PTR [eax],ecx
  41b8c3:	mov    eax,DWORD PTR [ebp-0x14]
  41b8c6:	mov    ecx,DWORD PTR [ebp-0x28]
  41b8c9:	xor    eax,ebx
  41b8cb:	add    eax,esi
  41b8cd:	cmp    eax,ecx
  41b8cf:	je     0x41c047
  41b8d5:	mov    eax,DWORD PTR [ebp-0x14]
  41b8d8:	mov    ecx,DWORD PTR [ebp-0x40]
  41b8db:	xor    eax,ebx
  41b8dd:	add    eax,esi
  41b8df:	cmp    eax,ecx
  41b8e1:	je     0x41c047
  41b8e7:	mov    eax,DWORD PTR [ebp-0x14]
  41b8ea:	xor    eax,ebx
  41b8ec:	add    eax,esi
  41b8ee:	jmp    0x41b90c
  41b8f0:	mov    edi,DWORD PTR [ebp-0x28]
  41b8f3:	mov    cl,al
  41b8f5:	and    cl,0x1f
  41b8f8:	or     dl,0xff
  41b8fb:	sub    dl,cl
  41b8fd:	add    BYTE PTR [edi+eax*1],dl
  41b900:	mov    ecx,DWORD PTR [ebp-0x18]
  41b903:	xor    ecx,ebx
  41b905:	lea    eax,[eax+ecx*1+0x3272e0]
  41b90c:	mov    ecx,DWORD PTR [ebp-0x40]
  41b90f:	cmp    eax,ecx
  41b911:	jb     0x41b8f0
  41b913:	mov    eax,DWORD PTR [ebp-0x40]
  41b916:	mov    DWORD PTR [ebp-0x24],eax
  41b919:	mov    eax,DWORD PTR [ebp-0x28]
  41b91c:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  41b923:	mov    DWORD PTR [ebp-0xbc],eax
  41b929:	mov    edi,0xf89c85b8
  41b92e:	mov    DWORD PTR [ebp-0x30],edi
  41b931:	mov    eax,DWORD PTR [ebp-0x38]
  41b934:	xor    eax,ebx
  41b936:	add    eax,esi
  41b938:	mov    DWORD PTR [ebp-0xc],eax
  41b93b:	mov    eax,DWORD PTR [ebp-0x38]
  41b93e:	xor    eax,ebx
  41b940:	add    eax,esi
  41b942:	mov    DWORD PTR [ebp-0x8],eax
  41b945:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  41b94c:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  41b953:	mov    eax,DWORD PTR [ebp-0x38]
  41b956:	mov    ecx,DWORD PTR [ebp-0x24]
  41b959:	xor    eax,ebx
  41b95b:	add    eax,esi
  41b95d:	cmp    ecx,eax
  41b95f:	je     0x41bb5e
  41b965:	jmp    0x41bb3a
  41b96a:	mov    ecx,DWORD PTR [ebp-0xc]
  41b96d:	mov    eax,DWORD PTR [ebp-0x24]
  41b970:	sub    eax,ecx
  41b972:	mov    ecx,DWORD PTR [ebp-0x48]
  41b975:	xor    ecx,ebx
  41b977:	add    ecx,esi
  41b979:	xor    edx,edx
  41b97b:	div    ecx
  41b97d:	mov    DWORD PTR [ebp-0x8],eax
  41b980:	mov    eax,DWORD PTR [ebp-0x54]
  41b983:	mov    ecx,DWORD PTR [ebp-0x8]
  41b986:	xor    eax,ebx
  41b988:	add    eax,esi
  41b98a:	cmp    ecx,eax
  41b98c:	jbe    0x41b998
  41b98e:	mov    eax,DWORD PTR [ebp-0x54]
  41b991:	xor    eax,ebx
  41b993:	add    eax,esi
  41b995:	mov    DWORD PTR [ebp-0x8],eax
  41b998:	mov    eax,DWORD PTR [ebp-0x48]
  41b99b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b99e:	xor    eax,ebx
  41b9a0:	add    eax,esi
  41b9a2:	imul   eax,ecx
  41b9a5:	mov    DWORD PTR [ebp-0x8],eax
  41b9a8:	mov    eax,DWORD PTR [ebp-0x38]
  41b9ab:	mov    ecx,DWORD PTR [ebp-0x8]
  41b9ae:	xor    eax,ebx
  41b9b0:	add    eax,esi
  41b9b2:	cmp    ecx,eax
  41b9b4:	je     0x41bb28
  41b9ba:	mov    eax,DWORD PTR [ebp-0x8]
  41b9bd:	mov    DWORD PTR [ebp-0x10],eax
  41b9c0:	mov    eax,DWORD PTR [ebp-0xc]
  41b9c3:	add    eax,DWORD PTR [ebp-0xbc]
  41b9c9:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  41b9d0:	mov    DWORD PTR [ebp-0x34],edi
  41b9d3:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  41b9dd:	mov    DWORD PTR [ebp-0x8],eax
  41b9e0:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  41b9e7:	mov    DWORD PTR [ebp-0x1c],edi
  41b9ea:	mov    eax,DWORD PTR [ebp-0x20]
  41b9ed:	xor    eax,ebx
  41b9ef:	add    eax,esi
  41b9f1:	jmp    0x41bae7
  41b9f6:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  41ba00:	mov    DWORD PTR [ebp-0xb8],0xf89c85ad
  41ba0a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba0d:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba10:	xor    eax,ebx
  41ba12:	add    eax,esi
  41ba14:	imul   eax,ecx
  41ba17:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba1a:	mov    al,BYTE PTR [eax+ecx*1]
  41ba1d:	mov    BYTE PTR [ebp-0x2],al
  41ba20:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba23:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba26:	xor    eax,ebx
  41ba28:	add    eax,esi
  41ba2a:	imul   eax,ecx
  41ba2d:	mov    ecx,DWORD PTR [ebp-0xa8]
  41ba33:	xor    ecx,ebx
  41ba35:	add    eax,ecx
  41ba37:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba3a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41ba42:	mov    ecx,DWORD PTR [ebp-0xb0]
  41ba48:	xor    ecx,ebx
  41ba4a:	lea    eax,[ecx+eax*1+0x3272e0]
  41ba51:	movzx  ecx,BYTE PTR [ebp-0x2]
  41ba55:	xor    ecx,eax
  41ba57:	mov    BYTE PTR [ebp-0x2],cl
  41ba5a:	mov    al,BYTE PTR [ebp-0x2]
  41ba5d:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ba60:	mov    edx,DWORD PTR [ebp-0x44]
  41ba63:	xor    ecx,ebx
  41ba65:	add    ecx,esi
  41ba67:	imul   ecx,edx
  41ba6a:	mov    edx,DWORD PTR [ebp-0x8]
  41ba6d:	mov    BYTE PTR [ecx+edx*1],al
  41ba70:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba73:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba76:	xor    eax,ebx
  41ba78:	add    eax,esi
  41ba7a:	imul   eax,ecx
  41ba7d:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba80:	mov    al,BYTE PTR [eax+ecx*1]
  41ba83:	mov    BYTE PTR [ebp-0x2],al
  41ba86:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba89:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba8c:	xor    eax,ebx
  41ba8e:	add    eax,esi
  41ba90:	imul   eax,ecx
  41ba93:	mov    ecx,DWORD PTR [ebp-0x34]
  41ba96:	xor    ecx,ebx
  41ba98:	add    eax,ecx
  41ba9a:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba9d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41baa5:	mov    ecx,DWORD PTR [ebp-0xb8]
  41baab:	xor    ecx,ebx
  41baad:	lea    eax,[ecx+eax*1+0x3272e0]
  41bab4:	movzx  ecx,BYTE PTR [ebp-0x2]
  41bab8:	xor    ecx,eax
  41baba:	mov    BYTE PTR [ebp-0x2],cl
  41babd:	mov    al,BYTE PTR [ebp-0x2]
  41bac0:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bac3:	mov    edx,DWORD PTR [ebp-0x44]
  41bac6:	xor    ecx,ebx
  41bac8:	add    ecx,esi
  41baca:	imul   ecx,edx
  41bacd:	mov    edx,DWORD PTR [ebp-0x8]
  41bad0:	mov    BYTE PTR [ecx+edx*1],al
  41bad3:	mov    eax,DWORD PTR [ebp-0x2c]
  41bad6:	mov    ecx,DWORD PTR [ebp-0x34]
  41bad9:	xor    eax,ebx
  41badb:	xor    ecx,ebx
  41badd:	add    eax,esi
  41badf:	add    ecx,esi
  41bae1:	imul   eax,ecx
  41bae4:	add    eax,DWORD PTR [ebp-0x44]
  41bae7:	mov    DWORD PTR [ebp-0x44],eax
  41baea:	mov    eax,DWORD PTR [ebp-0x44]
  41baed:	mov    ecx,DWORD PTR [ebp-0x10]
  41baf0:	cmp    ecx,eax
  41baf2:	jb     0x41b9f6
  41baf8:	mov    eax,DWORD PTR [ebp-0x34]
  41bafb:	mov    ecx,DWORD PTR [ebp-0x10]
  41bafe:	xor    eax,ebx
  41bb00:	add    eax,esi
  41bb02:	imul   eax,ecx
  41bb05:	mov    ecx,DWORD PTR [ebp-0x20]
  41bb08:	xor    ecx,ebx
  41bb0a:	add    ecx,esi
  41bb0c:	or     eax,ecx
  41bb0e:	mov    ecx,DWORD PTR [ebp-0x30]
  41bb11:	xor    ecx,ebx
  41bb13:	add    eax,ecx
  41bb15:	mov    ecx,DWORD PTR [ebp-0x30]
  41bb18:	xor    ecx,ebx
  41bb1a:	add    eax,ecx
  41bb1c:	mov    ecx,DWORD PTR [ebp-0xc]
  41bb1f:	lea    eax,[eax+ecx*1+0x64e5c0]
  41bb26:	jmp    0x41bb37
  41bb28:	mov    eax,DWORD PTR [ebp-0x30]
  41bb2b:	mov    ecx,DWORD PTR [ebp-0xc]
  41bb2e:	xor    eax,ebx
  41bb30:	lea    eax,[eax+ecx*1+0x3272e0]
  41bb37:	mov    DWORD PTR [ebp-0xc],eax
  41bb3a:	mov    eax,DWORD PTR [ebp-0x30]
  41bb3d:	xor    eax,ebx
  41bb3f:	mov    ecx,0xffcd8d20
  41bb44:	sub    ecx,eax
  41bb46:	add    ecx,DWORD PTR [ebp-0x24]
  41bb49:	mov    eax,DWORD PTR [ebp-0x30]
  41bb4c:	mov    edx,DWORD PTR [ebp-0xc]
  41bb4f:	xor    eax,ebx
  41bb51:	add    eax,esi
  41bb53:	imul   eax,edx
  41bb56:	cmp    eax,ecx
  41bb58:	jbe    0x41b96a
  41bb5e:	mov    eax,DWORD PTR [ebp-0x14]
  41bb61:	mov    ecx,DWORD PTR [ebp-0x40]
  41bb64:	mov    eax,DWORD PTR [ebp+0x8]
  41bb67:	mov    edx,DWORD PTR [ebp-0x4c]
  41bb6a:	mov    eax,DWORD PTR [eax+0x1d8]
  41bb70:	xor    edx,ebx
  41bb72:	add    edx,esi
  41bb74:	push   edx
  41bb75:	mov    edx,DWORD PTR [ebp-0x3c]
  41bb78:	xor    edx,ebx
  41bb7a:	add    edx,esi
  41bb7c:	push   edx
  41bb7d:	push   ecx
  41bb7e:	mov    DWORD PTR [ebp-0x2c],ecx
  41bb81:	mov    ecx,DWORD PTR [ebp-0x14]
  41bb84:	xor    ecx,ebx
  41bb86:	add    ecx,esi
  41bb88:	push   ecx
  41bb89:	call   DWORD PTR [eax+0x14]
  41bb8c:	mov    edi,eax
  41bb8e:	mov    eax,DWORD PTR [ebp-0x14]
  41bb91:	xor    eax,ebx
  41bb93:	add    eax,esi
  41bb95:	cmp    eax,edi
  41bb97:	je     0x41bbf2
  41bb99:	mov    eax,DWORD PTR [ebp-0x14]
  41bb9c:	jmp    0x41bbbf
  41bb9e:	mov    ecx,DWORD PTR [ebp-0x28]
  41bba1:	xor    eax,ebx
  41bba3:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  41bbaa:	mov    BYTE PTR [eax+edi*1+0x3272e0],cl
  41bbb1:	mov    ecx,DWORD PTR [ebp-0x18]
  41bbb4:	xor    ecx,ebx
  41bbb6:	lea    eax,[ecx+eax*1+0x3272e0]
  41bbbd:	xor    eax,ebx
  41bbbf:	mov    ecx,DWORD PTR [ebp-0x40]
  41bbc2:	sub    ecx,esi
  41bbc4:	xor    ecx,ebx
  41bbc6:	cmp    eax,ecx
  41bbc8:	jne    0x41bb9e
  41bbca:	mov    eax,DWORD PTR [ebp+0x8]
  41bbcd:	mov    ecx,DWORD PTR [ebp-0x50]
  41bbd0:	mov    eax,DWORD PTR [eax+0x1d8]
  41bbd6:	xor    ecx,ebx
  41bbd8:	add    ecx,esi
  41bbda:	push   ecx
  41bbdb:	mov    ecx,DWORD PTR [ebp-0x14]
  41bbde:	xor    ecx,ebx
  41bbe0:	add    ecx,esi
  41bbe2:	push   ecx
  41bbe3:	push   DWORD PTR [ebp-0x28]
  41bbe6:	call   DWORD PTR [eax+0x18]
  41bbe9:	mov    eax,DWORD PTR [ebp-0x2c]
  41bbec:	mov    DWORD PTR [ebp-0x28],edi
  41bbef:	mov    DWORD PTR [ebp-0x40],eax
  41bbf2:	mov    edi,DWORD PTR [ebp-0x28]
  41bbf5:	mov    eax,DWORD PTR [ebp-0x18]
  41bbf8:	mov    ecx,DWORD PTR [ebp-0x14]
  41bbfb:	xor    eax,ebx
  41bbfd:	mov    DWORD PTR [ebp-0x2c],edi
  41bc00:	add    eax,esi
  41bc02:	mov    DWORD PTR [ebp-0x5c],0x39122a12
  41bc09:	mov    DWORD PTR [ebp-0x58],0x27123f12
  41bc10:	jmp    0x41bc44
  41bc12:	xor    ecx,ebx
  41bc14:	mov    dl,BYTE PTR [ebp+ecx*1+0x327284]
  41bc1b:	xor    dl,0x73
  41bc1e:	sub    dl,0x9
  41bc21:	mov    DWORD PTR [ebp-0x3c],ecx
  41bc24:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272e0]
  41bc2c:	movzx  edx,dl
  41bc2f:	cmp    ecx,edx
  41bc31:	jne    0x41bc4e
  41bc33:	mov    ecx,DWORD PTR [ebp-0x18]
  41bc36:	mov    edx,DWORD PTR [ebp-0x3c]
  41bc39:	xor    ecx,ebx
  41bc3b:	lea    ecx,[ecx+edx*1+0x3272e0]
  41bc42:	xor    ecx,ebx
  41bc44:	cmp    ecx,0xf89c85b1
  41bc4a:	jne    0x41bc12
  41bc4c:	jmp    0x41bc55
  41bc4e:	mov    eax,DWORD PTR [ebp-0x14]
  41bc51:	xor    eax,ebx
  41bc53:	add    eax,esi
  41bc55:	mov    ecx,DWORD PTR [ebp-0x14]
  41bc58:	xor    ecx,ebx
  41bc5a:	add    ecx,esi
  41bc5c:	cmp    ecx,eax
  41bc5e:	je     0x41bdd1
  41bc64:	mov    eax,DWORD PTR [edi+0x8]
  41bc67:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41bc6e:	mov    DWORD PTR [ebp-0x3c],0xf89cc316
  41bc75:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  41bc7c:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41bc83:	mov    DWORD PTR [ebp-0x10],eax
  41bc86:	mov    eax,DWORD PTR [ebp+0x8]
  41bc89:	mov    ecx,DWORD PTR [ebp-0x20]
  41bc8c:	xor    ecx,ebx
  41bc8e:	add    ecx,esi
  41bc90:	push   ecx
  41bc91:	mov    ecx,DWORD PTR [ebp-0x48]
  41bc94:	mov    eax,DWORD PTR [eax+0x1d8]
  41bc9a:	xor    ecx,ebx
  41bc9c:	add    ecx,esi
  41bc9e:	push   ecx
  41bc9f:	mov    ecx,DWORD PTR [ebp-0x3c]
  41bca2:	xor    ecx,ebx
  41bca4:	add    ecx,esi
  41bca6:	push   ecx
  41bca7:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcaa:	xor    ecx,ebx
  41bcac:	add    ecx,esi
  41bcae:	push   ecx
  41bcaf:	call   DWORD PTR [eax+0x14]
  41bcb2:	mov    edi,eax
  41bcb4:	mov    eax,DWORD PTR [ebp+0x8]
  41bcb7:	mov    ecx,DWORD PTR [ebp-0x20]
  41bcba:	mov    eax,DWORD PTR [eax+0x1d8]
  41bcc0:	xor    ecx,ebx
  41bcc2:	add    ecx,esi
  41bcc4:	push   ecx
  41bcc5:	mov    ecx,DWORD PTR [ebp-0x48]
  41bcc8:	xor    ecx,ebx
  41bcca:	add    ecx,esi
  41bccc:	push   ecx
  41bccd:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcd0:	push   DWORD PTR [ebp-0x10]
  41bcd3:	xor    ecx,ebx
  41bcd5:	add    ecx,esi
  41bcd7:	push   ecx
  41bcd8:	call   DWORD PTR [eax+0x14]
  41bcdb:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcde:	xor    ecx,ebx
  41bce0:	add    ecx,esi
  41bce2:	mov    DWORD PTR [ebp-0x20],eax
  41bce5:	cmp    ecx,edi
  41bce7:	je     0x41c074
  41bced:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcf0:	xor    ecx,ebx
  41bcf2:	add    ecx,esi
  41bcf4:	cmp    ecx,eax
  41bcf6:	je     0x41c074
  41bcfc:	mov    DWORD PTR [ebp-0x3c],0xf89c85ba
  41bd03:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41bd0a:	mov    ecx,DWORD PTR [ebp-0x3c]
  41bd0d:	xor    cl,0x99
  41bd10:	sub    cl,0x20
  41bd13:	mov    BYTE PTR [edi],cl
  41bd15:	mov    ecx,DWORD PTR [ebp-0xc]
  41bd18:	xor    cl,0x99
  41bd1b:	sub    cl,0x20
  41bd1e:	mov    BYTE PTR [edi+0x1],cl
  41bd21:	mov    ecx,DWORD PTR [ebp-0x4c]
  41bd24:	xor    cl,0x99
  41bd27:	sub    cl,0x20
  41bd2a:	mov    BYTE PTR [edi+0x2],cl
  41bd2d:	and    DWORD PTR [ebp-0xb4],0x0
  41bd34:	and    DWORD PTR [ebp-0xa4],0x0
  41bd3b:	lea    ecx,[ebp-0xa4]
  41bd41:	push   ecx
  41bd42:	push   DWORD PTR [ebp-0x10]
  41bd45:	push   eax
  41bd46:	lea    eax,[ebp-0xb4]
  41bd4c:	push   eax
  41bd4d:	mov    eax,DWORD PTR [ebp-0x2c]
  41bd50:	push   DWORD PTR [eax+0xc]
  41bd53:	mov    eax,DWORD PTR [ebp-0x28]
  41bd56:	add    eax,0x10
  41bd59:	push   eax
  41bd5a:	push   edi
  41bd5b:	call   0x41b0a7
  41bd60:	mov    DWORD PTR [ebp-0x3c],eax
  41bd63:	mov    eax,DWORD PTR [ebp+0x8]
  41bd66:	mov    ecx,DWORD PTR [ebp-0x50]
  41bd69:	mov    eax,DWORD PTR [eax+0x1d8]
  41bd6f:	xor    ecx,ebx
  41bd71:	add    ecx,esi
  41bd73:	push   ecx
  41bd74:	mov    ecx,DWORD PTR [ebp-0xc]
  41bd77:	xor    ecx,ebx
  41bd79:	add    ecx,esi
  41bd7b:	push   ecx
  41bd7c:	push   edi
  41bd7d:	call   DWORD PTR [eax+0x18]
  41bd80:	mov    eax,DWORD PTR [ebp-0x3c]
  41bd83:	add    eax,0xffcd8d20
  41bd88:	xor    eax,ebx
  41bd8a:	cmp    eax,0xf89c85b9
  41bd8f:	mov    eax,DWORD PTR [ebp+0x8]
  41bd92:	mov    eax,DWORD PTR [eax+0x1d8]
  41bd98:	mov    ecx,DWORD PTR [ebp-0x50]
  41bd9b:	jne    0x41bdbe
  41bd9d:	xor    ecx,ebx
  41bd9f:	add    ecx,esi
  41bda1:	push   ecx
  41bda2:	mov    ecx,DWORD PTR [ebp-0xc]
  41bda5:	xor    ecx,ebx
  41bda7:	add    ecx,esi
  41bda9:	push   ecx
  41bdaa:	push   DWORD PTR [ebp-0x28]
  41bdad:	call   DWORD PTR [eax+0x18]
  41bdb0:	mov    eax,DWORD PTR [ebp-0x20]
  41bdb3:	mov    DWORD PTR [ebp-0x28],eax
  41bdb6:	mov    eax,DWORD PTR [ebp-0x10]
  41bdb9:	mov    DWORD PTR [ebp-0x40],eax
  41bdbc:	jmp    0x41bdd1
  41bdbe:	xor    ecx,ebx
  41bdc0:	add    ecx,esi
  41bdc2:	push   ecx
  41bdc3:	mov    ecx,DWORD PTR [ebp-0xc]
  41bdc6:	xor    ecx,ebx
  41bdc8:	add    ecx,esi
  41bdca:	push   ecx
  41bdcb:	push   DWORD PTR [ebp-0x20]
  41bdce:	call   DWORD PTR [eax+0x18]
  41bdd1:	mov    eax,DWORD PTR [ebp-0x40]
  41bdd4:	mov    DWORD PTR [ebp-0x38],eax
  41bdd7:	mov    eax,DWORD PTR [ebp-0x28]
  41bdda:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41bde1:	mov    DWORD PTR [ebp-0x3c],eax
  41bde4:	mov    edi,0xf89c85b8
  41bde9:	mov    DWORD PTR [ebp-0x30],edi
  41bdec:	mov    eax,DWORD PTR [ebp-0x24]
  41bdef:	xor    eax,ebx
  41bdf1:	add    eax,esi
  41bdf3:	mov    DWORD PTR [ebp-0xc],eax
  41bdf6:	mov    eax,DWORD PTR [ebp-0x24]
  41bdf9:	xor    eax,ebx
  41bdfb:	add    eax,esi
  41bdfd:	mov    DWORD PTR [ebp-0x10],eax
  41be00:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  41be07:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  41be0e:	mov    eax,DWORD PTR [ebp-0x24]
  41be11:	mov    ecx,DWORD PTR [ebp-0x38]
  41be14:	xor    eax,ebx
  41be16:	add    eax,esi
  41be18:	cmp    ecx,eax
  41be1a:	je     0x41c010
  41be20:	jmp    0x41bfec
  41be25:	mov    ecx,DWORD PTR [ebp-0xc]
  41be28:	mov    eax,DWORD PTR [ebp-0x38]
  41be2b:	sub    eax,ecx
  41be2d:	mov    ecx,DWORD PTR [ebp-0x48]
  41be30:	xor    ecx,ebx
  41be32:	add    ecx,esi
  41be34:	xor    edx,edx
  41be36:	div    ecx
  41be38:	mov    DWORD PTR [ebp-0x10],eax
  41be3b:	mov    eax,DWORD PTR [ebp-0x20]
  41be3e:	mov    ecx,DWORD PTR [ebp-0x10]
  41be41:	xor    eax,ebx
  41be43:	add    eax,esi
  41be45:	cmp    ecx,eax
  41be47:	jbe    0x41be53
  41be49:	mov    eax,DWORD PTR [ebp-0x20]
  41be4c:	xor    eax,ebx
  41be4e:	add    eax,esi
  41be50:	mov    DWORD PTR [ebp-0x10],eax
  41be53:	mov    eax,DWORD PTR [ebp-0x48]
  41be56:	mov    ecx,DWORD PTR [ebp-0x10]
  41be59:	xor    eax,ebx
  41be5b:	add    eax,esi
  41be5d:	imul   eax,ecx
  41be60:	mov    DWORD PTR [ebp-0x10],eax
  41be63:	mov    eax,DWORD PTR [ebp-0x24]
  41be66:	mov    ecx,DWORD PTR [ebp-0x10]
  41be69:	xor    eax,ebx
  41be6b:	add    eax,esi
  41be6d:	cmp    ecx,eax
  41be6f:	je     0x41bfda
  41be75:	mov    eax,DWORD PTR [ebp-0x10]
  41be78:	mov    DWORD PTR [ebp-0x34],eax
  41be7b:	mov    eax,DWORD PTR [ebp-0xc]
  41be7e:	add    eax,DWORD PTR [ebp-0x3c]
  41be81:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  41be88:	mov    DWORD PTR [ebp-0x10],edi
  41be8b:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41be92:	mov    DWORD PTR [ebp-0x1c],eax
  41be95:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  41be9c:	mov    DWORD PTR [ebp-0x8],edi
  41be9f:	mov    eax,DWORD PTR [ebp-0x54]
  41bea2:	xor    eax,ebx
  41bea4:	add    eax,esi
  41bea6:	jmp    0x41bf99
  41beab:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41beb5:	mov    DWORD PTR [ebp-0x9c],0xf89c85ad
  41bebf:	mov    eax,DWORD PTR [ebp-0x8]
  41bec2:	mov    ecx,DWORD PTR [ebp-0x18]
  41bec5:	xor    eax,ebx
  41bec7:	add    eax,esi
  41bec9:	imul   eax,ecx
  41becc:	mov    ecx,DWORD PTR [ebp-0x1c]
  41becf:	mov    al,BYTE PTR [eax+ecx*1]
  41bed2:	mov    BYTE PTR [ebp-0x1],al
  41bed5:	mov    eax,DWORD PTR [ebp-0x8]
  41bed8:	mov    ecx,DWORD PTR [ebp-0x18]
  41bedb:	xor    eax,ebx
  41bedd:	add    eax,esi
  41bedf:	imul   eax,ecx
  41bee2:	mov    ecx,DWORD PTR [ebp-0x4c]
  41bee5:	xor    ecx,ebx
  41bee7:	add    eax,ecx
  41bee9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41beec:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41bef4:	mov    ecx,DWORD PTR [ebp-0xac]
  41befa:	xor    ecx,ebx
  41befc:	lea    eax,[ecx+eax*1+0x3272e0]
  41bf03:	movzx  ecx,BYTE PTR [ebp-0x1]
  41bf07:	xor    ecx,eax
  41bf09:	mov    BYTE PTR [ebp-0x1],cl
  41bf0c:	mov    al,BYTE PTR [ebp-0x1]
  41bf0f:	mov    ecx,DWORD PTR [ebp-0x8]
  41bf12:	mov    edx,DWORD PTR [ebp-0x18]
  41bf15:	xor    ecx,ebx
  41bf17:	add    ecx,esi
  41bf19:	imul   ecx,edx
  41bf1c:	mov    edx,DWORD PTR [ebp-0x1c]
  41bf1f:	mov    BYTE PTR [ecx+edx*1],al
  41bf22:	mov    eax,DWORD PTR [ebp-0x8]
  41bf25:	mov    ecx,DWORD PTR [ebp-0x18]
  41bf28:	xor    eax,ebx
  41bf2a:	add    eax,esi
  41bf2c:	imul   eax,ecx
  41bf2f:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bf32:	mov    al,BYTE PTR [eax+ecx*1]
  41bf35:	mov    BYTE PTR [ebp-0x1],al
  41bf38:	mov    eax,DWORD PTR [ebp-0x8]
  41bf3b:	mov    ecx,DWORD PTR [ebp-0x18]
  41bf3e:	xor    eax,ebx
  41bf40:	add    eax,esi
  41bf42:	imul   eax,ecx
  41bf45:	mov    ecx,DWORD PTR [ebp-0x10]
  41bf48:	xor    ecx,ebx
  41bf4a:	add    eax,ecx
  41bf4c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bf4f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41bf57:	mov    ecx,DWORD PTR [ebp-0x9c]
  41bf5d:	xor    ecx,ebx
  41bf5f:	lea    eax,[ecx+eax*1+0x3272e0]
  41bf66:	movzx  ecx,BYTE PTR [ebp-0x1]
  41bf6a:	xor    ecx,eax
  41bf6c:	mov    BYTE PTR [ebp-0x1],cl
  41bf6f:	mov    al,BYTE PTR [ebp-0x1]
  41bf72:	mov    ecx,DWORD PTR [ebp-0x8]
  41bf75:	mov    edx,DWORD PTR [ebp-0x18]
  41bf78:	xor    ecx,ebx
  41bf7a:	add    ecx,esi
  41bf7c:	imul   ecx,edx
  41bf7f:	mov    edx,DWORD PTR [ebp-0x1c]
  41bf82:	mov    BYTE PTR [ecx+edx*1],al
  41bf85:	mov    eax,DWORD PTR [ebp-0x2c]
  41bf88:	mov    ecx,DWORD PTR [ebp-0x10]
  41bf8b:	xor    eax,ebx
  41bf8d:	xor    ecx,ebx
  41bf8f:	add    eax,esi
  41bf91:	add    ecx,esi
  41bf93:	imul   eax,ecx
  41bf96:	add    eax,DWORD PTR [ebp-0x18]
  41bf99:	mov    DWORD PTR [ebp-0x18],eax
  41bf9c:	mov    eax,DWORD PTR [ebp-0x18]
  41bf9f:	mov    ecx,DWORD PTR [ebp-0x34]
  41bfa2:	cmp    ecx,eax
  41bfa4:	jb     0x41beab
  41bfaa:	mov    eax,DWORD PTR [ebp-0x10]
  41bfad:	mov    ecx,DWORD PTR [ebp-0x34]
  41bfb0:	xor    eax,ebx
  41bfb2:	add    eax,esi
  41bfb4:	imul   eax,ecx
  41bfb7:	mov    ecx,DWORD PTR [ebp-0x54]
  41bfba:	xor    ecx,ebx
  41bfbc:	add    ecx,esi
  41bfbe:	or     eax,ecx
  41bfc0:	mov    ecx,DWORD PTR [ebp-0x30]
  41bfc3:	xor    ecx,ebx
  41bfc5:	add    eax,ecx
  41bfc7:	mov    ecx,DWORD PTR [ebp-0x30]
  41bfca:	xor    ecx,ebx
  41bfcc:	add    eax,ecx
  41bfce:	mov    ecx,DWORD PTR [ebp-0xc]
  41bfd1:	lea    eax,[eax+ecx*1+0x64e5c0]
  41bfd8:	jmp    0x41bfe9
  41bfda:	mov    eax,DWORD PTR [ebp-0x30]
  41bfdd:	mov    ecx,DWORD PTR [ebp-0xc]
  41bfe0:	xor    eax,ebx
  41bfe2:	lea    eax,[eax+ecx*1+0x3272e0]
  41bfe9:	mov    DWORD PTR [ebp-0xc],eax
  41bfec:	mov    eax,DWORD PTR [ebp-0x30]
  41bfef:	xor    eax,ebx
  41bff1:	mov    ecx,0xffcd8d20
  41bff6:	sub    ecx,eax
  41bff8:	add    ecx,DWORD PTR [ebp-0x38]
  41bffb:	mov    eax,DWORD PTR [ebp-0x30]
  41bffe:	mov    edx,DWORD PTR [ebp-0xc]
  41c001:	xor    eax,ebx
  41c003:	add    eax,esi
  41c005:	imul   eax,edx
  41c008:	cmp    eax,ecx
  41c00a:	jbe    0x41be25
  41c010:	push   DWORD PTR [ebp+0x8]
  41c013:	mov    eax,DWORD PTR [ebp+0x8]
  41c016:	push   DWORD PTR [eax+0x1cc]
  41c01c:	lea    eax,[ebp-0xa0]
  41c022:	push   eax
  41c023:	mov    eax,DWORD PTR [ebp+0x8]
  41c026:	mov    eax,DWORD PTR [eax+0x1c4]
  41c02c:	push   DWORD PTR [eax]
  41c02e:	mov    eax,DWORD PTR [ebp+0x8]
  41c031:	mov    eax,DWORD PTR [eax+0x1c0]
  41c037:	push   DWORD PTR [eax]
  41c039:	push   DWORD PTR [ebp-0x40]
  41c03c:	push   DWORD PTR [ebp-0x28]
  41c03f:	call   0x41cad6
  41c044:	mov    DWORD PTR [ebp-0x3c],eax
  41c047:	mov    eax,DWORD PTR [ebp-0x14]
  41c04a:	mov    ecx,DWORD PTR [ebp-0x28]
  41c04d:	xor    eax,ebx
  41c04f:	add    eax,esi
  41c051:	cmp    eax,ecx
  41c053:	je     0x41c074
  41c055:	mov    eax,DWORD PTR [ebp+0x8]
  41c058:	mov    ecx,DWORD PTR [ebp-0x50]
  41c05b:	mov    eax,DWORD PTR [eax+0x1d8]
  41c061:	xor    ecx,ebx
  41c063:	add    ecx,esi
  41c065:	push   ecx
  41c066:	mov    ecx,DWORD PTR [ebp-0x14]
  41c069:	xor    ecx,ebx
  41c06b:	add    ecx,esi
  41c06d:	push   ecx
  41c06e:	push   DWORD PTR [ebp-0x28]
  41c071:	call   DWORD PTR [eax+0x18]
  41c074:	pop    edi
  41c075:	pop    esi
  41c076:	pop    ebx
  41c077:	leave  
  41c078:	ret    0x4
  41c07b:	push   ebp
  41c07c:	mov    ebp,esp
  41c07e:	push   ecx
  41c07f:	push   ecx
  41c080:	lea    eax,[ebp-0x8]
  41c083:	mov    DWORD PTR [ebp-0x4],eax
  41c086:	push   esi
  41c087:	mov    esi,DWORD PTR [ebp-0x4]
  41c08a:	mov    eax,0xf881ba0f
  41c08f:	mov    DWORD PTR [esi],eax
  41c091:	mov    esi,DWORD PTR [ebp-0x8]
  41c094:	cmp    esi,eax
  41c096:	pop    esi
  41c097:	jne    0x41c0a1
  41c099:	mov    BYTE PTR [ecx+0xa],0x7a
  41c09d:	mov    BYTE PTR [edx+0x8],0x2f
  41c0a1:	mov    BYTE PTR [edx+0xa],0x7a
  41c0a5:	mov    BYTE PTR [ecx+0x2],0x4
  41c0a9:	leave  
  41c0aa:	ret    
  41c0ab:	push   ebp
  41c0ac:	mov    ebp,esp
  41c0ae:	push   ecx
  41c0af:	push   ecx
  41c0b0:	lea    eax,[ebp-0x8]
  41c0b3:	mov    DWORD PTR [ebp-0x4],eax
  41c0b6:	mov    edx,DWORD PTR [ebp-0x4]
  41c0b9:	mov    eax,0xf88b0be3
  41c0be:	mov    DWORD PTR [edx],eax
  41c0c0:	mov    edx,DWORD PTR [ebp-0x8]
  41c0c3:	cmp    edx,eax
  41c0c5:	jne    0x41c0d6
  41c0c7:	mov    eax,DWORD PTR [ebp+0x8]
  41c0ca:	mov    BYTE PTR [ecx+0x9],0xe
  41c0ce:	mov    BYTE PTR [eax+0x7],0x47
  41c0d2:	mov    BYTE PTR [ecx+0x6],0xf
  41c0d6:	mov    BYTE PTR [ecx+0x3],0x1e
  41c0da:	leave  
  41c0db:	ret    0x4
  41c0de:	push   ebp
  41c0df:	mov    ebp,esp
  41c0e1:	push   ecx
  41c0e2:	push   ecx
  41c0e3:	lea    eax,[ebp-0x8]
  41c0e6:	mov    DWORD PTR [ebp-0x4],eax
  41c0e9:	mov    edx,DWORD PTR [ebp-0x4]
  41c0ec:	mov    eax,0x7e0da0f
  41c0f1:	mov    DWORD PTR [edx],eax
  41c0f3:	mov    edx,DWORD PTR [ebp-0x8]
  41c0f6:	cmp    edx,eax
  41c0f8:	jne    0x41c0fe
  41c0fa:	mov    BYTE PTR [ecx+0x7],0x47
  41c0fe:	mov    eax,DWORD PTR [ebp+0x8]
  41c101:	mov    BYTE PTR [ecx+0x1],0x1
  41c105:	mov    BYTE PTR [eax+0x9],0x2e
  41c109:	leave  
  41c10a:	ret    0x4
  41c10d:	push   ebp
  41c10e:	mov    ebp,esp
  41c110:	push   ecx
  41c111:	push   ecx
  41c112:	lea    eax,[ebp-0x8]
  41c115:	mov    DWORD PTR [ebp-0x4],eax
  41c118:	push   esi
  41c119:	mov    esi,DWORD PTR [ebp-0x4]
  41c11c:	mov    eax,0x7060e3e
  41c121:	mov    DWORD PTR [esi],eax
  41c123:	mov    esi,DWORD PTR [ebp-0x8]
  41c126:	cmp    esi,eax
  41c128:	pop    esi
  41c129:	jne    0x41c135
  41c12b:	mov    BYTE PTR [edx+0x4],0xb
  41c12f:	mov    WORD PTR [ecx+0x3],0xb1e
  41c135:	mov    BYTE PTR [edx],0x3f
  41c138:	leave  
  41c139:	ret    
  41c13a:	push   ebp
  41c13b:	mov    ebp,esp
  41c13d:	push   ecx
  41c13e:	push   ecx
  41c13f:	lea    eax,[ebp-0x8]
  41c142:	mov    DWORD PTR [ebp-0x4],eax
  41c145:	mov    edx,DWORD PTR [ebp-0x4]
  41c148:	mov    eax,0xf8870b3f
  41c14d:	mov    DWORD PTR [edx],eax
  41c14f:	mov    edx,DWORD PTR [ebp-0x8]
  41c152:	cmp    edx,eax
  41c154:	jne    0x41c161
  41c156:	mov    eax,DWORD PTR [ebp+0x8]
  41c159:	mov    BYTE PTR [ecx+0x8],0xf
  41c15d:	mov    BYTE PTR [eax+0x1],0x1
  41c161:	mov    BYTE PTR [ecx+0x5],0xf3
  41c165:	leave  
  41c166:	ret    0x4
  41c169:	push   esi
  41c16a:	mov    ecx,edi
  41c16c:	call   0x41c13a
  41c171:	mov    edx,edi
  41c173:	mov    ecx,esi
  41c175:	mov    BYTE PTR [esi],0x1f
  41c178:	call   0x41c10d
  41c17d:	push   esi
  41c17e:	mov    ecx,edi
  41c180:	mov    BYTE PTR [esi+0x5],0xf3
  41c184:	call   0x41c0de
  41c189:	push   esi
  41c18a:	mov    BYTE PTR [esi+0x6],0xf
  41c18e:	call   0x41c0ab
  41c193:	mov    BYTE PTR [esi+0x2],0x4
  41c197:	mov    edx,esi
  41c199:	jmp    0x41c07b
  41c19e:	push   ebp
  41c19f:	mov    ebp,esp
  41c1a1:	push   ecx
  41c1a2:	mov    ecx,DWORD PTR [edx+0x194]
  41c1a8:	push   esi
  41c1a9:	mov    esi,DWORD PTR [ebp+0x8]
  41c1ac:	mov    esi,DWORD PTR [esi]
  41c1ae:	mov    DWORD PTR [ecx],esi
  41c1b0:	mov    ecx,DWORD PTR [edx+0x194]
  41c1b6:	mov    ecx,DWORD PTR [ecx]
  41c1b8:	mov    esi,DWORD PTR [edx+0x190]
  41c1be:	mov    DWORD PTR [esi],ecx
  41c1c0:	mov    eax,DWORD PTR [edx+0x194]
  41c1c6:	mov    ecx,DWORD PTR [eax]
  41c1c8:	mov    ecx,DWORD PTR [ecx+0x3c]
  41c1cb:	add    ecx,DWORD PTR [eax]
  41c1cd:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  41c1d4:	mov    eax,DWORD PTR [ebp-0x4]
  41c1d7:	movzx  ecx,WORD PTR [ecx+0x16]
  41c1db:	xor    eax,0x7510899
  41c1e0:	add    eax,0x3272e0
  41c1e5:	pop    esi
  41c1e6:	test   ecx,eax
  41c1e8:	je     0x41c1f6
  41c1ea:	mov    eax,DWORD PTR [edx+0x1c8]
  41c1f0:	mov    DWORD PTR [eax],0xf89c85b8
  41c1f6:	leave  
  41c1f7:	ret    0x4
  41c1fa:	push   ebp
  41c1fb:	mov    ebp,esp
  41c1fd:	sub    esp,0x70
  41c200:	and    DWORD PTR [ebp-0x20],0x0
  41c204:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  41c20b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  41c212:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  41c219:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41c220:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  41c227:	mov    eax,DWORD PTR [ebp+0x20]
  41c22a:	mov    eax,DWORD PTR [eax+0x194]
  41c230:	mov    DWORD PTR [ebp-0xc],eax
  41c233:	mov    eax,DWORD PTR [ebp+0x20]
  41c236:	push   ebx
  41c237:	push   esi
  41c238:	mov    esi,DWORD PTR [eax+0x190]
  41c23e:	mov    eax,DWORD PTR [ebp+0x20]
  41c241:	mov    eax,DWORD PTR [eax+0x18c]
  41c247:	mov    DWORD PTR [ebp-0x8],eax
  41c24a:	mov    eax,DWORD PTR [eax]
  41c24c:	push   edi
  41c24d:	mov    DWORD PTR [ebp-0x4],esi
  41c250:	test   eax,eax
  41c252:	jne    0x41c25f
  41c254:	push   DWORD PTR [ebp+0x1c]
  41c257:	mov    edx,DWORD PTR [ebp+0x20]
  41c25a:	call   0x41c19e
  41c25f:	mov    eax,DWORD PTR [esi]
  41c261:	mov    ebx,DWORD PTR [esi]
  41c263:	add    ebx,DWORD PTR [eax+0x3c]
  41c266:	mov    eax,DWORD PTR [ebp+0xc]
  41c269:	mov    ecx,DWORD PTR [ebp-0x8]
  41c26c:	mov    ecx,DWORD PTR [ecx]
  41c26e:	mov    esi,0x7510899
  41c273:	xor    eax,esi
  41c275:	mov    edi,0x3272e0
  41c27a:	add    eax,edi
  41c27c:	cmp    eax,ecx
  41c27e:	jne    0x41c4b6
  41c284:	mov    eax,DWORD PTR [ebp-0xc]
  41c287:	mov    eax,DWORD PTR [eax]
  41c289:	mov    DWORD PTR [ebp-0x10],eax
  41c28c:	mov    eax,DWORD PTR [ebx+0x50]
  41c28f:	mov    DWORD PTR [ebp-0x68],eax
  41c292:	mov    eax,DWORD PTR [ebp-0x18]
  41c295:	xor    eax,esi
  41c297:	add    eax,edi
  41c299:	mov    DWORD PTR [ebp-0x64],eax
  41c29c:	mov    eax,DWORD PTR [ebp-0x14]
  41c29f:	and    DWORD PTR [ebp-0x6c],0x0
  41c2a3:	xor    eax,esi
  41c2a5:	add    eax,edi
  41c2a7:	mov    DWORD PTR [ebp-0x60],eax
  41c2aa:	lea    eax,[ebp-0x70]
  41c2ad:	push   eax
  41c2ae:	mov    eax,DWORD PTR [ebp+0x8]
  41c2b1:	xor    eax,esi
  41c2b3:	add    eax,edi
  41c2b5:	push   eax
  41c2b6:	mov    eax,DWORD PTR [ebp+0x20]
  41c2b9:	add    eax,0xaa
  41c2be:	push   eax
  41c2bf:	mov    eax,DWORD PTR [ebp+0x20]
  41c2c2:	mov    eax,DWORD PTR [eax+0x198]
  41c2c8:	mov    DWORD PTR [ebp-0x70],0x4
  41c2cf:	push   DWORD PTR [eax]
  41c2d1:	mov    eax,DWORD PTR [ebp+0x10]
  41c2d4:	call   eax
  41c2d6:	mov    ecx,DWORD PTR [ebp-0xc]
  41c2d9:	mov    ecx,DWORD PTR [ecx]
  41c2db:	mov    edx,DWORD PTR [ebp-0x8]
  41c2de:	mov    DWORD PTR [ebp-0x6c],eax
  41c2e1:	mov    DWORD PTR [ebp+0x1c],eax
  41c2e4:	mov    DWORD PTR [edx],ecx
  41c2e6:	mov    ecx,DWORD PTR [ebp-0x4]
  41c2e9:	mov    DWORD PTR [ecx],eax
  41c2eb:	mov    eax,DWORD PTR [ebx+0x50]
  41c2ee:	mov    DWORD PTR [ebp-0x68],eax
  41c2f1:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2f4:	xor    eax,esi
  41c2f6:	add    eax,edi
  41c2f8:	mov    DWORD PTR [ebp-0x64],eax
  41c2fb:	lea    eax,[ebp-0x20]
  41c2fe:	mov    DWORD PTR [ebp-0x60],eax
  41c301:	lea    eax,[ebp-0x70]
  41c304:	push   eax
  41c305:	mov    eax,DWORD PTR [ebp+0x8]
  41c308:	xor    eax,esi
  41c30a:	add    eax,edi
  41c30c:	push   eax
  41c30d:	mov    eax,DWORD PTR [ebp+0x20]
  41c310:	add    eax,0xee
  41c315:	push   eax
  41c316:	mov    eax,DWORD PTR [ebp+0x20]
  41c319:	mov    eax,DWORD PTR [eax+0x198]
  41c31f:	mov    DWORD PTR [ebp-0x70],0x4
  41c326:	push   DWORD PTR [eax]
  41c328:	mov    eax,DWORD PTR [ebp+0x10]
  41c32b:	call   eax
  41c32d:	test   eax,eax
  41c32f:	je     0x41c354
  41c331:	and    DWORD PTR [ebp+0xc],0x0
  41c335:	cmp    DWORD PTR [ebx+0x50],0x0
  41c339:	jbe    0x41c354
  41c33b:	mov    eax,DWORD PTR [ebp+0x1c]
  41c33e:	mov    ecx,DWORD PTR [ebp-0x10]
  41c341:	sub    ecx,eax
  41c343:	mov    dl,BYTE PTR [ecx+eax*1]
  41c346:	inc    DWORD PTR [ebp+0xc]
  41c349:	mov    BYTE PTR [eax],dl
  41c34b:	mov    edx,DWORD PTR [ebp+0xc]
  41c34e:	inc    eax
  41c34f:	cmp    edx,DWORD PTR [ebx+0x50]
  41c352:	jb     0x41c343
  41c354:	mov    edx,DWORD PTR [ebp+0x1c]
  41c357:	mov    ecx,DWORD PTR [edx+0x3c]
  41c35a:	add    ecx,edx
  41c35c:	mov    eax,DWORD PTR [ecx+0xa0]
  41c362:	mov    ebx,DWORD PTR [ecx+0x28]
  41c365:	add    eax,edx
  41c367:	sub    edx,DWORD PTR [ebp-0x10]
  41c36a:	add    ebx,DWORD PTR [ebp+0x1c]
  41c36d:	mov    DWORD PTR [ebp+0xc],edx
  41c370:	mov    DWORD PTR [ebp-0x2c],ecx
  41c373:	mov    DWORD PTR [ebp-0x14],ebx
  41c376:	mov    DWORD PTR [ebp-0x8],0x0
  41c37d:	jmp    0x41c3f9
  41c37f:	add    edx,0xfffffff8
  41c382:	shr    edx,1
  41c384:	mov    DWORD PTR [ebp-0x18],edx
  41c387:	je     0x41c3e5
  41c389:	lea    edx,[eax+0x8]
  41c38c:	mov    DWORD PTR [ebp-0x4],edx
  41c38f:	mov    edx,DWORD PTR [ebp-0x18]
  41c392:	mov    DWORD PTR [ebp-0x18],edx
  41c395:	mov    edx,DWORD PTR [ebp-0x4]
  41c398:	movzx  edx,WORD PTR [edx]
  41c39b:	mov    DWORD PTR [ebp-0x24],edx
  41c39e:	and    edx,0xfff
  41c3a4:	mov    DWORD PTR [ebp-0x28],edx
  41c3a7:	mov    edx,DWORD PTR [ebp-0x24]
  41c3aa:	shr    edx,0xc
  41c3ad:	add    edx,0xffcd8d20
  41c3b3:	xor    edx,esi
  41c3b5:	cmp    edx,0xf89c85ba
  41c3bb:	jne    0x41c3dc
  41c3bd:	mov    edx,DWORD PTR [ebp-0x28]
  41c3c0:	add    edx,DWORD PTR [ebp+0x1c]
  41c3c3:	mov    ebx,DWORD PTR [eax]
  41c3c5:	cmp    DWORD PTR [ebx+edx*1],0x0
  41c3c9:	je     0x41c3d9
  41c3cb:	mov    ecx,DWORD PTR [ebp+0xc]
  41c3ce:	add    ecx,DWORD PTR [ebx+edx*1]
  41c3d1:	mov    ebx,DWORD PTR [eax]
  41c3d3:	mov    DWORD PTR [edx+ebx*1],ecx
  41c3d6:	mov    ecx,DWORD PTR [ebp-0x2c]
  41c3d9:	mov    ebx,DWORD PTR [ebp-0x14]
  41c3dc:	add    DWORD PTR [ebp-0x4],0x2
  41c3e0:	dec    DWORD PTR [ebp-0x18]
  41c3e3:	jne    0x41c395
  41c3e5:	mov    edx,DWORD PTR [ebp-0xc]
  41c3e8:	add    DWORD PTR [ebp-0x8],edx
  41c3eb:	mov    edx,DWORD PTR [ebp-0x8]
  41c3ee:	cmp    edx,DWORD PTR [ecx+0xa4]
  41c3f4:	jae    0x41c407
  41c3f6:	add    eax,DWORD PTR [ebp-0xc]
  41c3f9:	mov    edx,DWORD PTR [eax+0x4]
  41c3fc:	mov    DWORD PTR [ebp-0xc],edx
  41c3ff:	test   edx,edx
  41c401:	jne    0x41c37f
  41c407:	mov    eax,DWORD PTR [ebp-0x10]
  41c40a:	mov    DWORD PTR [ebp-0x6c],eax
  41c40d:	mov    DWORD PTR [ebp-0x70],0x4
  41c414:	mov    eax,DWORD PTR [ecx+0x50]
  41c417:	mov    DWORD PTR [ebp-0x68],eax
  41c41a:	mov    eax,DWORD PTR [ebp-0x1c]
  41c41d:	xor    eax,esi
  41c41f:	add    eax,edi
  41c421:	mov    DWORD PTR [ebp-0x64],eax
  41c424:	lea    eax,[ebp-0x20]
  41c427:	mov    DWORD PTR [ebp-0x60],eax
  41c42a:	lea    eax,[ebp-0x70]
  41c42d:	push   eax
  41c42e:	mov    eax,DWORD PTR [ebp+0x8]
  41c431:	xor    eax,esi
  41c433:	add    eax,edi
  41c435:	push   eax
  41c436:	mov    eax,DWORD PTR [ebp+0x20]
  41c439:	add    eax,0xee
  41c43e:	push   eax
  41c43f:	mov    eax,DWORD PTR [ebp+0x20]
  41c442:	mov    eax,DWORD PTR [eax+0x198]
  41c448:	push   DWORD PTR [eax]
  41c44a:	mov    eax,DWORD PTR [ebp+0x10]
  41c44d:	call   eax
  41c44f:	mov    eax,DWORD PTR [ebp+0x20]
  41c452:	mov    eax,DWORD PTR [eax+0x180]
  41c458:	add    eax,DWORD PTR [ebp+0xc]
  41c45b:	mov    ecx,DWORD PTR [ebp+0xc]
  41c45e:	push   DWORD PTR [ebp+0x18]
  41c461:	mov    DWORD PTR [eax],ecx
  41c463:	push   DWORD PTR [ebp+0x14]
  41c466:	push   DWORD PTR [ebp+0x1c]
  41c469:	call   ebx
  41c46b:	mov    ecx,DWORD PTR [ebp+0xc]
  41c46e:	add    ecx,DWORD PTR [ebp+0x20]
  41c471:	lea    eax,[ebp+0x4]
  41c474:	mov    DWORD PTR [ebp+0x20],ecx
  41c477:	mov    ecx,DWORD PTR [ebp+0x20]
  41c47a:	mov    ecx,DWORD PTR [ebp+0x20]
  41c47d:	mov    edx,DWORD PTR [ecx+0x190]
  41c483:	mov    ecx,DWORD PTR [ebp+0x20]
  41c486:	mov    ecx,DWORD PTR [ecx+0x18c]
  41c48c:	mov    esi,DWORD PTR [ecx]
  41c48e:	cmp    DWORD PTR [eax],esi
  41c490:	jb     0x41c4b1
  41c492:	mov    esi,DWORD PTR [edx]
  41c494:	mov    edi,DWORD PTR [edx]
  41c496:	mov    esi,DWORD PTR [esi+0x3c]
  41c499:	lea    esi,[edi+esi*1+0x50]
  41c49d:	mov    edi,DWORD PTR [ecx]
  41c49f:	add    edi,DWORD PTR [esi]
  41c4a1:	cmp    DWORD PTR [eax],edi
  41c4a3:	jae    0x41c4b1
  41c4a5:	mov    esi,DWORD PTR [ecx]
  41c4a7:	mov    ecx,DWORD PTR [eax]
  41c4a9:	mov    edx,DWORD PTR [edx]
  41c4ab:	sub    ecx,esi
  41c4ad:	add    edx,ecx
  41c4af:	mov    DWORD PTR [eax],edx
  41c4b1:	mov    eax,DWORD PTR [ebp+0xc]
  41c4b4:	jmp    0x41c4b8
  41c4b6:	xor    eax,eax
  41c4b8:	pop    edi
  41c4b9:	pop    esi
  41c4ba:	pop    ebx
  41c4bb:	leave  
  41c4bc:	ret    0x1c
  41c4bf:	push   ebp
  41c4c0:	mov    ebp,esp
  41c4c2:	sub    esp,0x1c
  41c4c5:	push   esi
  41c4c6:	mov    esi,eax
  41c4c8:	mov    eax,DWORD PTR [ecx+0x190]
  41c4ce:	cmp    DWORD PTR [eax],0x0
  41c4d1:	je     0x41c5e1
  41c4d7:	test   edx,edx
  41c4d9:	je     0x41c5e1
  41c4df:	test   esi,esi
  41c4e1:	je     0x41c5e1
  41c4e7:	mov    eax,DWORD PTR [esi+0x88]
  41c4ed:	test   eax,eax
  41c4ef:	je     0x41c5dc
  41c4f5:	cmp    DWORD PTR [esi+0x8c],0x10
  41c4fc:	je     0x41c5dc
  41c502:	cmp    DWORD PTR [esi+0x34],edx
  41c505:	je     0x41c5dc
  41c50b:	mov    esi,DWORD PTR [ecx+0x18c]
  41c511:	and    DWORD PTR [ebp-0x10],0x0
  41c515:	mov    ecx,edx
  41c517:	sub    ecx,DWORD PTR [esi]
  41c519:	add    eax,edx
  41c51b:	movzx  edx,WORD PTR [eax+0xc]
  41c51f:	mov    DWORD PTR [ebp-0x1c],ecx
  41c522:	movzx  ecx,WORD PTR [eax+0xe]
  41c526:	add    ecx,edx
  41c528:	je     0x41c5dc
  41c52e:	lea    ecx,[eax+0x14]
  41c531:	push   ebx
  41c532:	mov    DWORD PTR [ebp-0x18],ecx
  41c535:	mov    esi,0x7fffffff
  41c53a:	push   edi
  41c53b:	test   DWORD PTR [ecx],esi
  41c53d:	je     0x41c5be
  41c53f:	mov    edx,DWORD PTR [ecx]
  41c541:	and    DWORD PTR [ebp-0xc],0x0
  41c545:	and    edx,esi
  41c547:	add    edx,eax
  41c549:	movzx  edi,WORD PTR [edx+0xe]
  41c54d:	movzx  ebx,WORD PTR [edx+0xc]
  41c551:	add    edi,ebx
  41c553:	je     0x41c5be
  41c555:	lea    ecx,[edx+0x14]
  41c558:	mov    DWORD PTR [ebp-0x14],ecx
  41c55b:	test   DWORD PTR [ecx],esi
  41c55d:	je     0x41c5a0
  41c55f:	mov    ecx,DWORD PTR [ecx]
  41c561:	and    DWORD PTR [ebp-0x8],0x0
  41c565:	and    ecx,esi
  41c567:	add    ecx,eax
  41c569:	movzx  edi,WORD PTR [ecx+0xe]
  41c56d:	movzx  ebx,WORD PTR [ecx+0xc]
  41c571:	add    edi,ebx
  41c573:	je     0x41c5a0
  41c575:	lea    edi,[ecx+0x14]
  41c578:	mov    DWORD PTR [ebp-0x4],edi
  41c57b:	mov    edi,DWORD PTR [ebp-0x4]
  41c57e:	mov    edi,DWORD PTR [edi]
  41c580:	test   edi,edi
  41c582:	je     0x41c58a
  41c584:	mov    ebx,DWORD PTR [ebp-0x1c]
  41c587:	add    DWORD PTR [edi+eax*1],ebx
  41c58a:	movzx  edi,WORD PTR [ecx+0xe]
  41c58e:	movzx  ebx,WORD PTR [ecx+0xc]
  41c592:	inc    DWORD PTR [ebp-0x8]
  41c595:	add    DWORD PTR [ebp-0x4],0x8
  41c599:	add    edi,ebx
  41c59b:	cmp    DWORD PTR [ebp-0x8],edi
  41c59e:	jb     0x41c57b
  41c5a0:	movzx  edi,WORD PTR [edx+0xe]
  41c5a4:	movzx  ebx,WORD PTR [edx+0xc]
  41c5a8:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5ab:	inc    DWORD PTR [ebp-0xc]
  41c5ae:	add    ecx,0x8
  41c5b1:	add    edi,ebx
  41c5b3:	mov    DWORD PTR [ebp-0x14],ecx
  41c5b6:	cmp    DWORD PTR [ebp-0xc],edi
  41c5b9:	jb     0x41c55b
  41c5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  41c5be:	movzx  edx,WORD PTR [eax+0xe]
  41c5c2:	movzx  edi,WORD PTR [eax+0xc]
  41c5c6:	inc    DWORD PTR [ebp-0x10]
  41c5c9:	add    ecx,0x8
  41c5cc:	add    edx,edi
  41c5ce:	mov    DWORD PTR [ebp-0x18],ecx
  41c5d1:	cmp    DWORD PTR [ebp-0x10],edx
  41c5d4:	jb     0x41c53b
  41c5da:	pop    edi
  41c5db:	pop    ebx
  41c5dc:	xor    eax,eax
  41c5de:	inc    eax
  41c5df:	jmp    0x41c5e3
  41c5e1:	xor    eax,eax
  41c5e3:	pop    esi
  41c5e4:	leave  
  41c5e5:	ret    
  41c5e6:	push   ebp
  41c5e7:	mov    ebp,esp
  41c5e9:	mov    ecx,DWORD PTR [ecx+0x190]
  41c5ef:	mov    eax,DWORD PTR [ebp+0xc]
  41c5f2:	sub    esp,0x10
  41c5f5:	push   ebx
  41c5f6:	xor    ebx,ebx
  41c5f8:	push   esi
  41c5f9:	push   edi
  41c5fa:	cmp    DWORD PTR [ecx],ebx
  41c5fc:	je     0x41c684
  41c602:	cmp    eax,ebx
  41c604:	je     0x41c684
  41c606:	cmp    DWORD PTR [eax+0x78],ebx
  41c609:	jne    0x41c610
  41c60b:	xor    eax,eax
  41c60d:	inc    eax
  41c60e:	jmp    0x41c686
  41c610:	mov    eax,DWORD PTR [eax+0x78]
  41c613:	add    eax,DWORD PTR [ebp+0x8]
  41c616:	mov    ecx,DWORD PTR [eax+0x1c]
  41c619:	mov    edx,DWORD PTR [eax+0x24]
  41c61c:	mov    esi,DWORD PTR [eax+0x14]
  41c61f:	mov    edi,DWORD PTR [eax+0x18]
  41c622:	add    ecx,DWORD PTR [ebp+0x8]
  41c625:	add    edx,DWORD PTR [ebp+0x8]
  41c628:	mov    DWORD PTR [ebp-0x4],esi
  41c62b:	cmp    esi,edi
  41c62d:	ja     0x41c632
  41c62f:	mov    DWORD PTR [ebp-0x4],edi
  41c632:	mov    DWORD PTR [ebp-0x8],ebx
  41c635:	cmp    DWORD PTR [ebp-0x4],ebx
  41c638:	jbe    0x41c60b
  41c63a:	cmp    ebx,DWORD PTR [eax+0x14]
  41c63d:	jae    0x41c645
  41c63f:	movzx  esi,WORD PTR [edx+ebx*2]
  41c643:	jmp    0x41c647
  41c645:	mov    esi,ebx
  41c647:	lea    esi,[ecx+esi*4]
  41c64a:	mov    edi,DWORD PTR [esi]
  41c64c:	test   edi,edi
  41c64e:	je     0x41c679
  41c650:	add    edi,DWORD PTR [ebp+0x8]
  41c653:	mov    DWORD PTR [ebp-0x10],edi
  41c656:	cmp    edi,eax
  41c658:	jbe    0x41c66a
  41c65a:	mov    ebx,DWORD PTR [ebp+0xc]
  41c65d:	mov    ebx,DWORD PTR [ebx+0x7c]
  41c660:	add    ebx,eax
  41c662:	cmp    edi,ebx
  41c664:	jae    0x41c66a
  41c666:	mov    esi,DWORD PTR [esi]
  41c668:	jmp    0x41c672
  41c66a:	sub    edi,DWORD PTR [ebp+0x8]
  41c66d:	mov    DWORD PTR [esi],edi
  41c66f:	mov    esi,DWORD PTR [ebp-0x10]
  41c672:	test   esi,esi
  41c674:	je     0x41c684
  41c676:	mov    ebx,DWORD PTR [ebp-0x8]
  41c679:	inc    ebx
  41c67a:	mov    DWORD PTR [ebp-0x8],ebx
  41c67d:	cmp    ebx,DWORD PTR [ebp-0x4]
  41c680:	jb     0x41c63a
  41c682:	jmp    0x41c60b
  41c684:	xor    eax,eax
  41c686:	pop    edi
  41c687:	pop    esi
  41c688:	pop    ebx
  41c689:	leave  
  41c68a:	ret    0x8
  41c68d:	push   ebp
  41c68e:	mov    ebp,esp
  41c690:	sub    esp,0x2c
  41c693:	mov    edx,0xf89c85b9
  41c698:	mov    DWORD PTR [ebp-0x4],edx
  41c69b:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41c6a2:	mov    eax,DWORD PTR [ebp-0x4]
  41c6a5:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6a8:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6ab:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6b1:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6b4:	push   ebx
  41c6b5:	mov    ebx,DWORD PTR [ebp+0x10]
  41c6b8:	push   esi
  41c6b9:	mov    esi,0x7510899
  41c6be:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41c6c5:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6c8:	mov    ebx,DWORD PTR [ebx+0x190]
  41c6ce:	push   edi
  41c6cf:	mov    edi,0x3272e0
  41c6d4:	xor    ecx,esi
  41c6d6:	xor    eax,esi
  41c6d8:	add    eax,edi
  41c6da:	add    ecx,edi
  41c6dc:	mov    DWORD PTR [ebp-0x18],eax
  41c6df:	cmp    ecx,DWORD PTR [ebx]
  41c6e1:	je     0x41c962
  41c6e7:	mov    ebx,DWORD PTR [ebp-0x4]
  41c6ea:	mov    ecx,DWORD PTR [ebp+0xc]
  41c6ed:	xor    ebx,esi
  41c6ef:	add    ebx,edi
  41c6f1:	cmp    ebx,ecx
  41c6f3:	je     0x41c962
  41c6f9:	mov    ebx,DWORD PTR [ebp-0x4]
  41c6fc:	mov    ecx,DWORD PTR [ecx+0x80]
  41c702:	xor    ebx,esi
  41c704:	add    ebx,edi
  41c706:	cmp    ecx,ebx
  41c708:	je     0x41c95d
  41c70e:	add    ecx,DWORD PTR [ebp+0x8]
  41c711:	mov    DWORD PTR [ebp-0x2c],ecx
  41c714:	mov    ebx,edx
  41c716:	xor    ebx,esi
  41c718:	add    ebx,edi
  41c71a:	mov    DWORD PTR [ebp-0x10],ebx
  41c71d:	mov    ebx,DWORD PTR [ebp-0x10]
  41c720:	cmp    ebx,edx
  41c722:	je     0x41c736
  41c724:	mov    edx,DWORD PTR [ebp-0x10]
  41c727:	mov    ebx,DWORD PTR [ebp-0x4]
  41c72a:	imul   edx,edx,0x14
  41c72d:	xor    ebx,esi
  41c72f:	add    ebx,edi
  41c731:	cmp    DWORD PTR [edx+ecx*1],ebx
  41c734:	jne    0x41c74d
  41c736:	mov    edx,DWORD PTR [ebp-0x10]
  41c739:	mov    ebx,DWORD PTR [ebp-0x4]
  41c73c:	imul   edx,edx,0x14
  41c73f:	xor    ebx,esi
  41c741:	add    ebx,edi
  41c743:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41c747:	je     0x41c94f
  41c74d:	mov    eax,DWORD PTR [ebp-0x4]
  41c750:	mov    ebx,DWORD PTR [ebp-0x4]
  41c753:	mov    eax,DWORD PTR [ebp-0x10]
  41c756:	imul   eax,eax,0x14
  41c759:	add    eax,ecx
  41c75b:	mov    ecx,DWORD PTR [eax+0x10]
  41c75e:	add    ecx,DWORD PTR [ebp+0x8]
  41c761:	xor    ebx,esi
  41c763:	mov    DWORD PTR [ebp-0x1c],ecx
  41c766:	mov    ecx,DWORD PTR [ebp-0x4]
  41c769:	mov    edx,DWORD PTR [ebp-0x4]
  41c76c:	xor    ecx,esi
  41c76e:	add    ecx,edi
  41c770:	xor    edx,esi
  41c772:	mov    DWORD PTR [ebp-0x24],ecx
  41c775:	mov    ecx,DWORD PTR [eax]
  41c777:	add    edx,edi
  41c779:	add    ebx,edi
  41c77b:	cmp    ecx,edx
  41c77d:	je     0x41c785
  41c77f:	add    ecx,DWORD PTR [ebp+0x8]
  41c782:	mov    DWORD PTR [ebp-0x24],ecx
  41c785:	mov    ecx,DWORD PTR [ebp-0x4]
  41c788:	xor    ecx,esi
  41c78a:	add    ecx,DWORD PTR [eax+0xc]
  41c78d:	mov    eax,DWORD PTR [ebp+0x8]
  41c790:	lea    eax,[ecx+eax*1+0x3272e0]
  41c797:	mov    DWORD PTR [ebp+0xc],eax
  41c79a:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  41c7a1:	mov    eax,DWORD PTR [ebp+0x10]
  41c7a4:	push   DWORD PTR [ebp+0xc]
  41c7a7:	mov    eax,DWORD PTR [eax+0x1d8]
  41c7ad:	call   DWORD PTR [eax]
  41c7af:	mov    ecx,DWORD PTR [ebp-0x4]
  41c7b2:	xor    ecx,esi
  41c7b4:	add    ecx,edi
  41c7b6:	mov    DWORD PTR [ebp-0xc],eax
  41c7b9:	cmp    ecx,eax
  41c7bb:	jne    0x41c7cf
  41c7bd:	mov    eax,DWORD PTR [ebp+0x10]
  41c7c0:	push   DWORD PTR [ebp+0xc]
  41c7c3:	mov    eax,DWORD PTR [eax+0x1d8]
  41c7c9:	call   DWORD PTR [eax+0xc]
  41c7cc:	mov    DWORD PTR [ebp-0xc],eax
  41c7cf:	mov    DWORD PTR [ebp-0x20],0x7f661b00
  41c7d6:	mov    DWORD PTR [ebp-0x20],0xf89c9990
  41c7dd:	mov    eax,DWORD PTR [ebp-0x4]
  41c7e0:	xor    eax,esi
  41c7e2:	add    eax,edi
  41c7e4:	cmp    eax,DWORD PTR [ebp-0xc]
  41c7e7:	jne    0x41c80c
  41c7e9:	mov    eax,DWORD PTR [ebp-0x8]
  41c7ec:	mov    ecx,DWORD PTR [ebp-0x20]
  41c7ef:	xor    eax,esi
  41c7f1:	xor    ecx,esi
  41c7f3:	lea    ebx,[ebx+eax*1+0x3272e0]
  41c7fa:	mov    eax,DWORD PTR [ebp+0x10]
  41c7fd:	mov    eax,DWORD PTR [eax+0x1d8]
  41c803:	add    ecx,edi
  41c805:	imul   ecx,ebx
  41c808:	push   ecx
  41c809:	call   DWORD PTR [eax+0x24]
  41c80c:	mov    eax,DWORD PTR [ebp-0x4]
  41c80f:	xor    eax,esi
  41c811:	add    eax,edi
  41c813:	cmp    eax,DWORD PTR [ebp-0xc]
  41c816:	jne    0x41c827
  41c818:	mov    eax,DWORD PTR [ebp-0x28]
  41c81b:	xor    eax,esi
  41c81d:	add    eax,edi
  41c81f:	cmp    ebx,eax
  41c821:	jbe    0x41c7a1
  41c827:	mov    eax,DWORD PTR [ebp-0x4]
  41c82a:	xor    eax,esi
  41c82c:	add    eax,edi
  41c82e:	cmp    eax,DWORD PTR [ebp-0xc]
  41c831:	jne    0x41c84a
  41c833:	mov    eax,DWORD PTR [ebp-0x8]
  41c836:	mov    ecx,DWORD PTR [ebp-0x18]
  41c839:	xor    eax,esi
  41c83b:	lea    eax,[ecx+eax*1+0x3272e0]
  41c842:	mov    DWORD PTR [ebp-0x18],eax
  41c845:	jmp    0x41c939
  41c84a:	mov    DWORD PTR [ebp-0x14],0x1121b01
  41c851:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41c858:	mov    ebx,DWORD PTR [ebp-0x4]
  41c85b:	xor    ebx,esi
  41c85d:	add    ebx,edi
  41c85f:	jmp    0x41c926
  41c864:	mov    eax,DWORD PTR [ebp-0x4]
  41c867:	xor    eax,esi
  41c869:	add    eax,edi
  41c86b:	mov    DWORD PTR [ebp-0x14],eax
  41c86e:	mov    eax,DWORD PTR [ebp-0x4]
  41c871:	xor    eax,esi
  41c873:	add    eax,edi
  41c875:	mov    DWORD PTR [ebp+0xc],eax
  41c878:	mov    ecx,DWORD PTR [ebp-0x4]
  41c87b:	mov    eax,DWORD PTR [ebp-0x24]
  41c87e:	xor    ecx,esi
  41c880:	add    ecx,edi
  41c882:	cmp    ecx,eax
  41c884:	je     0x41c88c
  41c886:	mov    eax,DWORD PTR [eax+ebx*4]
  41c889:	mov    DWORD PTR [ebp-0x14],eax
  41c88c:	mov    eax,DWORD PTR [ebp-0x1c]
  41c88f:	mov    eax,DWORD PTR [eax+ebx*4]
  41c892:	mov    DWORD PTR [ebp+0xc],eax
  41c895:	mov    eax,DWORD PTR [ebp-0x4]
  41c898:	mov    ecx,DWORD PTR [ebp-0x14]
  41c89b:	xor    eax,esi
  41c89d:	add    eax,edi
  41c89f:	cmp    eax,ecx
  41c8a1:	je     0x41c8cc
  41c8a3:	mov    eax,DWORD PTR [ebp-0x4]
  41c8a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8a9:	xor    eax,esi
  41c8ab:	add    eax,edi
  41c8ad:	shr    ecx,0x1f
  41c8b0:	cmp    eax,ecx
  41c8b2:	je     0x41c8cc
  41c8b4:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8b7:	mov    eax,DWORD PTR [ebp+0x10]
  41c8ba:	mov    eax,DWORD PTR [eax+0x1d8]
  41c8c0:	movzx  ecx,cx
  41c8c3:	push   ecx
  41c8c4:	push   DWORD PTR [ebp-0xc]
  41c8c7:	call   DWORD PTR [eax+0x8]
  41c8ca:	jmp    0x41c8e5
  41c8cc:	mov    eax,DWORD PTR [ebp+0xc]
  41c8cf:	add    eax,DWORD PTR [ebp+0x8]
  41c8d2:	mov    ecx,DWORD PTR [ebp+0x10]
  41c8d5:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41c8db:	add    eax,0x2
  41c8de:	push   eax
  41c8df:	push   DWORD PTR [ebp-0xc]
  41c8e2:	call   DWORD PTR [ecx+0x8]
  41c8e5:	mov    DWORD PTR [ebp+0xc],eax
  41c8e8:	mov    eax,DWORD PTR [ebp-0x4]
  41c8eb:	mov    ecx,DWORD PTR [ebp+0xc]
  41c8ee:	xor    eax,esi
  41c8f0:	add    eax,edi
  41c8f2:	cmp    eax,ecx
  41c8f4:	mov    eax,DWORD PTR [ebp-0x8]
  41c8f7:	jne    0x41c90a
  41c8f9:	mov    ecx,DWORD PTR [ebp-0x18]
  41c8fc:	xor    eax,esi
  41c8fe:	lea    eax,[ecx+eax*1+0x3272e0]
  41c905:	mov    DWORD PTR [ebp-0x18],eax
  41c908:	jmp    0x41c91a
  41c90a:	mov    ecx,DWORD PTR [ebp+0xc]
  41c90d:	xor    eax,esi
  41c90f:	add    eax,edi
  41c911:	imul   eax,ecx
  41c914:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c917:	mov    DWORD PTR [ecx+ebx*4],eax
  41c91a:	mov    eax,DWORD PTR [ebp-0x8]
  41c91d:	xor    eax,esi
  41c91f:	lea    ebx,[ebx+eax*1+0x3272e0]
  41c926:	mov    eax,DWORD PTR [ebp-0x4]
  41c929:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c92c:	xor    eax,esi
  41c92e:	add    eax,edi
  41c930:	cmp    DWORD PTR [ecx+ebx*4],eax
  41c933:	jne    0x41c864
  41c939:	mov    edx,DWORD PTR [ebp-0x10]
  41c93c:	mov    eax,DWORD PTR [ebp-0x18]
  41c93f:	mov    ecx,DWORD PTR [ebp-0x2c]
  41c942:	sub    edx,0x3272df
  41c948:	xor    edx,esi
  41c94a:	jmp    0x41c714
  41c94f:	mov    ecx,DWORD PTR [ebp-0x4]
  41c952:	xor    ecx,esi
  41c954:	add    ecx,edi
  41c956:	cmp    eax,ecx
  41c958:	mov    eax,DWORD PTR [ebp-0x4]
  41c95b:	jne    0x41c965
  41c95d:	mov    eax,DWORD PTR [ebp-0x8]
  41c960:	jmp    0x41c965
  41c962:	mov    eax,DWORD PTR [ebp-0x4]
  41c965:	xor    eax,esi
  41c967:	add    eax,edi
  41c969:	pop    edi
  41c96a:	pop    esi
  41c96b:	pop    ebx
  41c96c:	leave  
  41c96d:	ret    0xc
  41c970:	push   ebp
  41c971:	mov    ebp,esp
  41c973:	sub    esp,0x28
  41c976:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41c97d:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41c984:	mov    eax,DWORD PTR [ebp+0xc]
  41c987:	mov    DWORD PTR [ebp+0xc],eax
  41c98a:	push   esi
  41c98b:	mov    eax,eax
  41c98d:	mov    eax,DWORD PTR [ebp-0x4]
  41c990:	mov    esi,DWORD PTR [ebp+0x8]
  41c993:	mov    ecx,0x7510899
  41c998:	xor    eax,ecx
  41c99a:	mov    edx,0x3272e0
  41c99f:	add    eax,edx
  41c9a1:	cmp    esi,eax
  41c9a3:	je     0x41caca
  41c9a9:	mov    eax,DWORD PTR [ebp+0x8]
  41c9ac:	mov    esi,DWORD PTR [ebp+0x8]
  41c9af:	add    esi,DWORD PTR [eax+0x3c]
  41c9b2:	push   edi
  41c9b3:	mov    DWORD PTR [ebp+0xc],esi
  41c9b6:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  41c9bd:	mov    eax,DWORD PTR [ebp-0x1c]
  41c9c0:	mov    esi,DWORD PTR [ebp-0x4]
  41c9c3:	mov    edi,DWORD PTR [ebp+0xc]
  41c9c6:	xor    esi,ecx
  41c9c8:	xor    eax,ecx
  41c9ca:	add    esi,edx
  41c9cc:	cmp    DWORD PTR [edi+eax*8+0x1939778],esi
  41c9d3:	je     0x41cac4
  41c9d9:	mov    esi,DWORD PTR [ebp+0xc]
  41c9dc:	mov    eax,DWORD PTR [ebp+0x8]
  41c9df:	add    eax,DWORD PTR [esi+0xa0]
  41c9e5:	mov    esi,DWORD PTR [ebp+0x8]
  41c9e8:	mov    edi,DWORD PTR [ebp+0xc]
  41c9eb:	sub    esi,DWORD PTR [edi+0x34]
  41c9ee:	mov    edi,DWORD PTR [ebp-0x4]
  41c9f1:	xor    edi,ecx
  41c9f3:	add    edi,edx
  41c9f5:	mov    DWORD PTR [ebp-0x24],esi
  41c9f8:	cmp    esi,edi
  41c9fa:	je     0x41cac4
  41ca00:	mov    esi,DWORD PTR [ebp-0x4]
  41ca03:	xor    esi,ecx
  41ca05:	add    esi,edx
  41ca07:	mov    DWORD PTR [ebp-0x8],esi
  41ca0a:	push   ebx
  41ca0b:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41ca12:	jmp    0x41caae
  41ca17:	mov    esi,DWORD PTR [ebp-0x4]
  41ca1a:	xor    esi,ecx
  41ca1c:	lea    edi,[ebx-0x8]
  41ca1f:	add    esi,edx
  41ca21:	shr    edi,1
  41ca23:	cmp    esi,edi
  41ca25:	jae    0x41ca94
  41ca27:	sub    edi,esi
  41ca29:	lea    ebx,[eax+esi*2+0x8]
  41ca2d:	mov    DWORD PTR [ebp-0x18],edi
  41ca30:	movzx  esi,WORD PTR [ebx]
  41ca33:	and    esi,0xfff
  41ca39:	mov    DWORD PTR [ebp-0x14],esi
  41ca3c:	mov    edi,DWORD PTR [ebp-0x14]
  41ca3f:	mov    esi,DWORD PTR [eax]
  41ca41:	sub    esi,edx
  41ca43:	add    edi,esi
  41ca45:	movzx  esi,WORD PTR [ebx]
  41ca48:	shr    esi,0xc
  41ca4b:	xor    edi,ecx
  41ca4d:	mov    DWORD PTR [ebp-0x20],edi
  41ca50:	mov    DWORD PTR [ebp-0x14],esi
  41ca53:	mov    esi,DWORD PTR [ebp-0x20]
  41ca56:	mov    edi,DWORD PTR [ebp+0x8]
  41ca59:	xor    esi,ecx
  41ca5b:	lea    esi,[esi+edi*1+0x3272e0]
  41ca62:	mov    DWORD PTR [ebp-0x20],esi
  41ca65:	mov    esi,DWORD PTR [ebp-0x10]
  41ca68:	mov    edi,DWORD PTR [ebp-0x14]
  41ca6b:	xor    esi,ecx
  41ca6d:	add    esi,edx
  41ca6f:	cmp    edi,esi
  41ca71:	jne    0x41ca89
  41ca73:	mov    esi,DWORD PTR [ebp-0x10]
  41ca76:	mov    edi,DWORD PTR [ebp-0x14]
  41ca79:	xor    esi,ecx
  41ca7b:	add    esi,edx
  41ca7d:	cmp    edi,esi
  41ca7f:	jne    0x41ca89
  41ca81:	mov    esi,DWORD PTR [ebp-0x20]
  41ca84:	mov    edi,DWORD PTR [ebp-0x24]
  41ca87:	add    DWORD PTR [esi],edi
  41ca89:	add    ebx,0x2
  41ca8c:	dec    DWORD PTR [ebp-0x18]
  41ca8f:	jne    0x41ca30
  41ca91:	mov    ebx,DWORD PTR [ebp-0xc]
  41ca94:	add    DWORD PTR [ebp-0x8],ebx
  41ca97:	mov    esi,DWORD PTR [ebp-0x1c]
  41ca9a:	mov    edi,DWORD PTR [ebp-0x8]
  41ca9d:	mov    ebx,DWORD PTR [ebp+0xc]
  41caa0:	xor    esi,ecx
  41caa2:	cmp    edi,DWORD PTR [ebx+esi*8+0x193977c]
  41caa9:	jae    0x41cac3
  41caab:	add    eax,DWORD PTR [ebp-0xc]
  41caae:	mov    esi,DWORD PTR [ebp-0x4]
  41cab1:	mov    ebx,DWORD PTR [eax+0x4]
  41cab4:	xor    esi,ecx
  41cab6:	add    esi,edx
  41cab8:	mov    DWORD PTR [ebp-0xc],ebx
  41cabb:	cmp    ebx,esi
  41cabd:	jne    0x41ca17
  41cac3:	pop    ebx
  41cac4:	mov    eax,DWORD PTR [ebp-0x28]
  41cac7:	pop    edi
  41cac8:	jmp    0x41cacd
  41caca:	mov    eax,DWORD PTR [ebp-0x4]
  41cacd:	xor    eax,ecx
  41cacf:	add    eax,edx
  41cad1:	pop    esi
  41cad2:	leave  
  41cad3:	ret    0x8
  41cad6:	push   ebp
  41cad7:	mov    ebp,esp
  41cad9:	sub    esp,0xcc
  41cadf:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41cae6:	mov    DWORD PTR [ebp-0x24],0xf89c85b8
  41caed:	mov    eax,DWORD PTR [ebp-0x4]
  41caf0:	push   ebx
  41caf1:	push   esi
  41caf2:	mov    esi,0x7510899
  41caf7:	xor    eax,esi
  41caf9:	push   edi
  41cafa:	mov    edi,0x3272e0
  41caff:	add    eax,edi
  41cb01:	mov    DWORD PTR [ebp-0x1c],eax
  41cb04:	mov    eax,DWORD PTR [ebp-0x4]
  41cb07:	xor    eax,esi
  41cb09:	add    eax,edi
  41cb0b:	mov    DWORD PTR [ebp-0x8],eax
  41cb0e:	mov    ebx,DWORD PTR [ebp+0x20]
  41cb11:	mov    eax,DWORD PTR [ebp-0x14]
  41cb14:	mov    ecx,DWORD PTR [ebp-0x14]
  41cb17:	xor    eax,ecx
  41cb19:	mov    DWORD PTR [ebp-0x14],eax
  41cb1c:	add    DWORD PTR [ebp-0x14],0xf89cb5b9
  41cb23:	mov    eax,DWORD PTR [ebp-0xc]
  41cb26:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb29:	xor    eax,ecx
  41cb2b:	mov    DWORD PTR [ebp-0xc],eax
  41cb2e:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  41cb35:	mov    eax,DWORD PTR [ebp-0x10]
  41cb38:	mov    ecx,DWORD PTR [ebp-0x10]
  41cb3b:	xor    eax,ecx
  41cb3d:	mov    DWORD PTR [ebp-0x10],eax
  41cb40:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  41cb47:	mov    eax,DWORD PTR [ebp-0x20]
  41cb4a:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb4d:	xor    eax,ecx
  41cb4f:	mov    DWORD PTR [ebp-0x20],eax
  41cb52:	add    DWORD PTR [ebp-0x20],0xf89f05b9
  41cb59:	mov    eax,0x9471
  41cb5e:	mov    WORD PTR [ebp+0x20],ax
  41cb62:	mov    eax,DWORD PTR [ebp+0x8]
  41cb65:	test   eax,eax
  41cb67:	je     0x41cfc2
  41cb6d:	mov    eax,DWORD PTR [ebp+0xc]
  41cb70:	test   eax,eax
  41cb72:	je     0x41cfc2
  41cb78:	mov    eax,DWORD PTR [ebp+0x18]
  41cb7b:	test   eax,eax
  41cb7d:	je     0x41cfc2
  41cb83:	mov    ax,WORD PTR [ebp+0x20]
  41cb87:	mov    ecx,0x8a8c
  41cb8c:	xor    ax,cx
  41cb8f:	mov    ecx,0x3b50
  41cb94:	add    ax,cx
  41cb97:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb9a:	cmp    WORD PTR [ecx],ax
  41cb9d:	jne    0x41cfc2
  41cba3:	mov    eax,DWORD PTR [ebp-0x4]
  41cba6:	xor    eax,esi
  41cba8:	add    eax,edi
  41cbaa:	mov    DWORD PTR [ebp-0x30],eax
  41cbad:	mov    eax,DWORD PTR [ebp-0x4]
  41cbb0:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbb3:	mov    eax,DWORD PTR [ebp+0x8]
  41cbb6:	add    eax,DWORD PTR [ecx+0x3c]
  41cbb9:	mov    DWORD PTR [ebp+0xc],eax
  41cbbc:	mov    eax,DWORD PTR [eax+0x50]
  41cbbf:	test   eax,eax
  41cbc1:	je     0x41cfc2
  41cbc7:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  41cbce:	mov    eax,DWORD PTR [ebp-0x2c]
  41cbd1:	xor    eax,esi
  41cbd3:	add    eax,edi
  41cbd5:	mov    DWORD PTR [ebp-0x2c],eax
  41cbd8:	mov    eax,DWORD PTR [ebp-0x4]
  41cbdb:	mov    eax,DWORD PTR [ebx+0x190]
  41cbe1:	mov    ecx,DWORD PTR [eax]
  41cbe3:	mov    ecx,DWORD PTR [ecx+0x3c]
  41cbe6:	add    ecx,DWORD PTR [eax]
  41cbe8:	mov    eax,DWORD PTR [ebp-0x4]
  41cbeb:	mov    eax,DWORD PTR [ebx+0x18c]
  41cbf1:	mov    edx,DWORD PTR [eax]
  41cbf3:	mov    DWORD PTR [ebp-0x18],ecx
  41cbf6:	mov    DWORD PTR [ebp+0x20],edx
  41cbf9:	cmp    edx,edx
  41cbfb:	jne    0x41cc2f
  41cbfd:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cc03:	lea    edx,[ebp-0x1c]
  41cc06:	push   edx
  41cc07:	mov    edx,DWORD PTR [ebp-0xc]
  41cc0a:	xor    edx,esi
  41cc0c:	add    edx,edi
  41cc0e:	push   edx
  41cc0f:	push   DWORD PTR [ecx+0x50]
  41cc12:	push   DWORD PTR [ebp+0x20]
  41cc15:	call   DWORD PTR [eax+0x1c]
  41cc18:	mov    eax,DWORD PTR [ebp-0x18]
  41cc1b:	mov    ecx,DWORD PTR [eax+0x54]
  41cc1e:	mov    eax,DWORD PTR [eax+0x50]
  41cc21:	sub    eax,ecx
  41cc23:	add    ecx,DWORD PTR [ebp+0x20]
  41cc26:	push   ecx
  41cc27:	call   0x41d5ae
  41cc2c:	mov    edx,DWORD PTR [ebp+0x20]
  41cc2f:	mov    eax,DWORD PTR [ebx+0x194]
  41cc35:	mov    DWORD PTR [eax],edx
  41cc37:	mov    eax,DWORD PTR [ebp+0xc]
  41cc3a:	push   DWORD PTR [eax+0x54]
  41cc3d:	push   DWORD PTR [ebp+0x8]
  41cc40:	push   edx
  41cc41:	call   0x41d455
  41cc46:	mov    ecx,DWORD PTR [ebp+0x20]
  41cc49:	mov    eax,DWORD PTR [ecx+0x3c]
  41cc4c:	add    eax,ecx
  41cc4e:	movzx  ecx,WORD PTR [eax+0x14]
  41cc52:	lea    ecx,[ecx+eax*1+0x18]
  41cc56:	mov    DWORD PTR [ebp+0x18],ecx
  41cc59:	mov    ecx,DWORD PTR [ebp-0x4]
  41cc5c:	movzx  edx,WORD PTR [eax+0x6]
  41cc60:	xor    ecx,esi
  41cc62:	add    ecx,edi
  41cc64:	mov    DWORD PTR [ebp+0xc],eax
  41cc67:	cmp    edx,ecx
  41cc69:	je     0x41cd16
  41cc6f:	mov    ecx,DWORD PTR [ebp-0x4]
  41cc72:	xor    ecx,esi
  41cc74:	add    ecx,edi
  41cc76:	mov    DWORD PTR [ebp-0x8],ecx
  41cc79:	mov    ecx,DWORD PTR [ebp-0x24]
  41cc7c:	movzx  edx,WORD PTR [eax+0x6]
  41cc80:	xor    ecx,esi
  41cc82:	sub    edx,ecx
  41cc84:	sub    edx,edi
  41cc86:	cmp    DWORD PTR [ebp-0x8],edx
  41cc89:	ja     0x41cd16
  41cc8f:	mov    edx,DWORD PTR [ebp+0x18]
  41cc92:	add    edx,0x8
  41cc95:	mov    DWORD PTR [ebp+0x18],edx
  41cc98:	jmp    0x41cc9d
  41cc9a:	mov    edx,DWORD PTR [ebp+0x18]
  41cc9d:	mov    eax,DWORD PTR [eax+0x38]
  41cca0:	lea    ecx,[eax-0x1]
  41cca3:	mov    DWORD PTR [ebp-0x34],eax
  41cca6:	mov    eax,DWORD PTR [edx]
  41cca8:	test   ecx,eax
  41ccaa:	je     0x41ccb3
  41ccac:	not    ecx
  41ccae:	and    eax,ecx
  41ccb0:	add    eax,DWORD PTR [ebp-0x34]
  41ccb3:	mov    ecx,DWORD PTR [edx+0x4]
  41ccb6:	add    ecx,DWORD PTR [ebp+0x20]
  41ccb9:	push   ecx
  41ccba:	call   0x41d5ae
  41ccbf:	mov    edx,DWORD PTR [ebp-0x4]
  41ccc2:	mov    eax,DWORD PTR [ebp+0x18]
  41ccc5:	mov    ecx,DWORD PTR [eax+0x8]
  41ccc8:	xor    edx,esi
  41ccca:	add    edx,edi
  41cccc:	cmp    ecx,edx
  41ccce:	je     0x41cce7
  41ccd0:	push   ecx
  41ccd1:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccd4:	add    ecx,DWORD PTR [eax+0xc]
  41ccd7:	mov    eax,DWORD PTR [eax+0x4]
  41ccda:	add    eax,DWORD PTR [ebp+0x20]
  41ccdd:	push   ecx
  41ccde:	push   eax
  41ccdf:	call   0x41d455
  41cce4:	mov    eax,DWORD PTR [ebp+0x18]
  41cce7:	mov    ecx,DWORD PTR [ebp-0x24]
  41ccea:	mov    edx,DWORD PTR [ebp-0x8]
  41cced:	add    eax,0x28
  41ccf0:	xor    ecx,esi
  41ccf2:	lea    ecx,[edx+ecx*1+0x3272e0]
  41ccf9:	mov    edx,DWORD PTR [ebp+0xc]
  41ccfc:	mov    DWORD PTR [ebp+0x18],eax
  41ccff:	mov    eax,DWORD PTR [ebp-0x24]
  41cd02:	movzx  edx,WORD PTR [edx+0x6]
  41cd06:	xor    eax,esi
  41cd08:	sub    edx,eax
  41cd0a:	mov    eax,DWORD PTR [ebp+0xc]
  41cd0d:	sub    edx,edi
  41cd0f:	mov    DWORD PTR [ebp-0x8],ecx
  41cd12:	cmp    ecx,edx
  41cd14:	jbe    0x41cc9a
  41cd16:	mov    edx,DWORD PTR [ebx+0x18c]
  41cd1c:	mov    ecx,DWORD PTR [ebp+0x20]
  41cd1f:	cmp    ecx,DWORD PTR [edx]
  41cd21:	jne    0x41cd4a
  41cd23:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cd29:	lea    edx,[ebp-0x1c]
  41cd2c:	push   edx
  41cd2d:	mov    edx,DWORD PTR [ebp-0x10]
  41cd30:	xor    edx,esi
  41cd32:	add    edx,edi
  41cd34:	push   edx
  41cd35:	mov    edx,DWORD PTR [ebp-0x18]
  41cd38:	push   DWORD PTR [edx+0x54]
  41cd3b:	push   ecx
  41cd3c:	call   DWORD PTR [eax+0x1c]
  41cd3f:	test   eax,eax
  41cd41:	je     0x41cfb3
  41cd47:	mov    eax,DWORD PTR [ebp+0xc]
  41cd4a:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41cd50:	mov    ecx,DWORD PTR [ecx]
  41cd52:	xor    ecx,esi
  41cd54:	add    ecx,edi
  41cd56:	je     0x41cede
  41cd5c:	and    DWORD PTR [ebp-0x28],0x0
  41cd60:	and    DWORD PTR [ebp+0x8],0x0
  41cd64:	mov    eax,0xf89c851d
  41cd69:	lea    ecx,[eax-0x8]
  41cd6c:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41cd73:	mov    DWORD PTR [ebp-0x48],0xf89c850d
  41cd7a:	mov    DWORD PTR [ebp-0x44],eax
  41cd7d:	mov    DWORD PTR [ebp-0x40],ecx
  41cd80:	mov    DWORD PTR [ebp-0x3c],ecx
  41cd83:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  41cd8a:	mov    edx,DWORD PTR [ebp+0x8]
  41cd8d:	mov    ecx,0x899
  41cd92:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41cd97:	mov    edx,0x72e0
  41cd9c:	add    cx,dx
  41cd9f:	mov    edx,DWORD PTR [ebp+0x8]
  41cda2:	inc    DWORD PTR [ebp+0x8]
  41cda5:	cmp    DWORD PTR [ebp+0x8],0x6
  41cda9:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41cdb1:	jb     0x41cd8a
  41cdb3:	mov    ecx,0xf89c850b
  41cdb8:	mov    DWORD PTR [ebp-0xa4],eax
  41cdbe:	mov    DWORD PTR [ebp-0x90],eax
  41cdc4:	mov    DWORD PTR [ebp-0x68],eax
  41cdc7:	mov    DWORD PTR [ebp-0x64],eax
  41cdca:	lea    eax,[ecx-0x1]
  41cdcd:	mov    edx,0xf89c85ff
  41cdd2:	mov    DWORD PTR [ebp-0x58],eax
  41cdd5:	mov    DWORD PTR [ebp-0x54],eax
  41cdd8:	mov    DWORD PTR [ebp-0xa8],0xf89c85f5
  41cde2:	mov    DWORD PTR [ebp-0xa0],ecx
  41cde8:	mov    DWORD PTR [ebp-0x9c],edx
  41cdee:	mov    DWORD PTR [ebp-0x98],0xf89c8510
  41cdf8:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41ce02:	mov    DWORD PTR [ebp-0x8c],0xf89c85fc
  41ce0c:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41ce16:	mov    DWORD PTR [ebp-0x84],0xf89c850d
  41ce20:	mov    DWORD PTR [ebp-0x80],ecx
  41ce23:	mov    DWORD PTR [ebp-0x7c],0xf89c8500
  41ce2a:	mov    DWORD PTR [ebp-0x78],edx
  41ce2d:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41ce34:	mov    DWORD PTR [ebp-0x70],ecx
  41ce37:	mov    DWORD PTR [ebp-0x6c],0xf89c85f8
  41ce3e:	mov    DWORD PTR [ebp-0x60],ecx
  41ce41:	mov    DWORD PTR [ebp-0x5c],0xf89c851c
  41ce48:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  41ce4f:	xor    eax,eax
  41ce51:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41ce58:	xor    cl,0x99
  41ce5b:	sub    cl,0x20
  41ce5e:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41ce65:	inc    eax
  41ce66:	cmp    eax,0x17
  41ce69:	jb     0x41ce51
  41ce6b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41ce71:	lea    ecx,[ebp-0xb4]
  41ce77:	push   ecx
  41ce78:	call   DWORD PTR [eax+0x4]
  41ce7b:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41ce81:	lea    edx,[ebp-0xcc]
  41ce87:	push   edx
  41ce88:	push   eax
  41ce89:	call   DWORD PTR [ecx+0x8]
  41ce8c:	lea    ecx,[ebp-0x28]
  41ce8f:	push   ecx
  41ce90:	mov    ecx,DWORD PTR [ebx+0x18c]
  41ce96:	push   DWORD PTR [ecx]
  41ce98:	call   eax
  41ce9a:	mov    eax,DWORD PTR [ebp-0x28]
  41ce9d:	test   eax,eax
  41ce9f:	je     0x41cedb
  41cea1:	mov    DWORD PTR [ebp+0x8],eax
  41cea4:	jmp    0x41ceb0
  41cea6:	mov    eax,DWORD PTR [eax]
  41cea8:	mov    DWORD PTR [ebp-0x28],eax
  41ceab:	cmp    eax,DWORD PTR [ebp+0x8]
  41ceae:	je     0x41cebd
  41ceb0:	mov    edx,DWORD PTR [eax+0x18]
  41ceb3:	mov    ecx,DWORD PTR [ebx+0x18c]
  41ceb9:	cmp    edx,DWORD PTR [ecx]
  41cebb:	jne    0x41cea6
  41cebd:	mov    edx,DWORD PTR [eax+0x18]
  41cec0:	mov    ecx,DWORD PTR [ebx+0x18c]
  41cec6:	cmp    edx,DWORD PTR [ecx]
  41cec8:	jne    0x41cedb
  41ceca:	mov    edx,DWORD PTR [ebp-0x18]
  41cecd:	mov    ecx,DWORD PTR [ebx+0x190]
  41ced3:	mov    edx,DWORD PTR [edx+0x28]
  41ced6:	add    edx,DWORD PTR [ecx]
  41ced8:	mov    DWORD PTR [eax+0x1c],edx
  41cedb:	mov    eax,DWORD PTR [ebp+0xc]
  41cede:	push   ebx
  41cedf:	push   eax
  41cee0:	push   DWORD PTR [ebp+0x20]
  41cee3:	call   0x41c68d
  41cee8:	test   eax,eax
  41ceea:	je     0x41cfb3
  41cef0:	push   DWORD PTR [ebp+0xc]
  41cef3:	mov    ecx,ebx
  41cef5:	push   DWORD PTR [ebp+0x20]
  41cef8:	call   0x41c5e6
  41cefd:	test   eax,eax
  41ceff:	je     0x41cfb3
  41cf05:	mov    eax,DWORD PTR [ebp+0xc]
  41cf08:	mov    edx,DWORD PTR [ebp+0x20]
  41cf0b:	mov    ecx,ebx
  41cf0d:	call   0x41c4bf
  41cf12:	test   eax,eax
  41cf14:	je     0x41cfb3
  41cf1a:	push   ebx
  41cf1b:	push   DWORD PTR [ebp+0x20]
  41cf1e:	call   0x41c970
  41cf23:	test   eax,eax
  41cf25:	je     0x41cfb3
  41cf2b:	mov    eax,DWORD PTR [ebx+0x18c]
  41cf31:	mov    edx,DWORD PTR [ebp+0x20]
  41cf34:	cmp    edx,DWORD PTR [eax]
  41cf36:	jne    0x41cf52
  41cf38:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cf3e:	lea    ecx,[ebp-0x1c]
  41cf41:	push   ecx
  41cf42:	push   DWORD PTR [ebp-0x1c]
  41cf45:	mov    ecx,DWORD PTR [ebp-0x18]
  41cf48:	push   DWORD PTR [ecx+0x54]
  41cf4b:	push   edx
  41cf4c:	call   DWORD PTR [eax+0x1c]
  41cf4f:	mov    edx,DWORD PTR [ebp+0x20]
  41cf52:	mov    eax,DWORD PTR [ebx+0x1c8]
  41cf58:	mov    eax,DWORD PTR [eax]
  41cf5a:	xor    eax,esi
  41cf5c:	add    eax,edi
  41cf5e:	je     0x41cf97
  41cf60:	mov    ecx,DWORD PTR [ebp+0xc]
  41cf63:	mov    eax,DWORD PTR [ecx+0x28]
  41cf66:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  41cf6d:	mov    esi,DWORD PTR [ebp+0x8]
  41cf70:	push   DWORD PTR [ebp+0x14]
  41cf73:	xor    esi,0x899
  41cf79:	push   DWORD PTR [ebp+0x10]
  41cf7c:	add    esi,0x72e0
  41cf82:	or     WORD PTR [ecx+0x16],si
  41cf86:	add    eax,edx
  41cf88:	push   edx
  41cf89:	call   eax
  41cf8b:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b8
  41cf95:	jmp    0x41cfa1
  41cf97:	mov    eax,DWORD PTR [ebp+0xc]
  41cf9a:	mov    eax,DWORD PTR [eax+0x28]
  41cf9d:	add    eax,edx
  41cf9f:	call   eax
  41cfa1:	mov    DWORD PTR [ebp-0x8],eax
  41cfa4:	mov    eax,DWORD PTR [ebp-0x8]
  41cfa7:	mov    ecx,DWORD PTR [ebp+0x1c]
  41cfaa:	mov    DWORD PTR [ecx],eax
  41cfac:	mov    DWORD PTR [ebp-0x30],0x1
  41cfb3:	cmp    DWORD PTR [ebp-0x30],0x0
  41cfb7:	jne    0x41cfbd
  41cfb9:	and    DWORD PTR [ebp+0x20],0x0
  41cfbd:	mov    eax,DWORD PTR [ebp+0x20]
  41cfc0:	jmp    0x41cfc4
  41cfc2:	xor    eax,eax
  41cfc4:	pop    edi
  41cfc5:	pop    esi
  41cfc6:	pop    ebx
  41cfc7:	leave  
  41cfc8:	ret    0x1c
  41cfcb:	push   ebp
  41cfcc:	mov    ebp,esp
  41cfce:	movzx  edx,WORD PTR [ecx+0x6]
  41cfd2:	movzx  eax,WORD PTR [ecx+0x14]
  41cfd6:	push   ebx
  41cfd7:	push   edi
  41cfd8:	xor    edi,edi
  41cfda:	lea    eax,[eax+ecx*1+0x18]
  41cfde:	test   edx,edx
  41cfe0:	je     0x41d001
  41cfe2:	mov    ecx,DWORD PTR [eax+0xc]
  41cfe5:	lea    ebx,[ecx+esi*1]
  41cfe8:	cmp    DWORD PTR [ebp+0x8],ebx
  41cfeb:	jb     0x41cff9
  41cfed:	mov    ebx,DWORD PTR [eax+0x8]
  41cff0:	add    ebx,ecx
  41cff2:	add    ebx,esi
  41cff4:	cmp    DWORD PTR [ebp+0x8],ebx
  41cff7:	jb     0x41d003
  41cff9:	add    eax,0x28
  41cffc:	inc    edi
  41cffd:	cmp    edi,edx
  41cfff:	jb     0x41cfe2
  41d001:	xor    eax,eax
  41d003:	pop    edi
  41d004:	pop    ebx
  41d005:	pop    ebp
  41d006:	ret    0x4
  41d009:	push   ebp
  41d00a:	mov    ebp,esp
  41d00c:	sub    esp,0x34
  41d00f:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41d016:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41d01d:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  41d024:	mov    DWORD PTR [ebp-0x8],0xf89c8518
  41d02b:	mov    DWORD PTR [ebp-0x20],0xf89c85f8
  41d032:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  41d039:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  41d040:	mov    DWORD PTR [ebp-0x10],eax
  41d043:	mov    eax,DWORD PTR [ebp+0x8]
  41d046:	mov    DWORD PTR [ebp-0x14],eax
  41d049:	mov    eax,DWORD PTR [ebp-0xc]
  41d04c:	push   ebx
  41d04d:	mov    ecx,0x7510899
  41d052:	xor    eax,ecx
  41d054:	push   esi
  41d055:	mov    esi,DWORD PTR [ebp-0x10]
  41d058:	mov    edx,0x3272e0
  41d05d:	add    eax,edx
  41d05f:	push   edi
  41d060:	cmp    esi,eax
  41d062:	je     0x41d241
  41d068:	mov    eax,DWORD PTR [ebp-0xc]
  41d06b:	mov    esi,DWORD PTR [ebp-0x14]
  41d06e:	xor    eax,ecx
  41d070:	add    eax,edx
  41d072:	cmp    esi,eax
  41d074:	je     0x41d241
  41d07a:	mov    eax,DWORD PTR [ebp-0xc]
  41d07d:	xor    eax,ecx
  41d07f:	add    eax,edx
  41d081:	mov    DWORD PTR [ebp-0x24],eax
  41d084:	mov    eax,DWORD PTR [ebp-0xc]
  41d087:	xor    eax,ecx
  41d089:	add    eax,edx
  41d08b:	mov    DWORD PTR [ebp-0x28],eax
  41d08e:	mov    edi,DWORD PTR [ebp-0x20]
  41d091:	mov    ebx,DWORD PTR [ebp-0x8]
  41d094:	mov    esi,0x899
  41d099:	xor    edi,esi
  41d09b:	mov    eax,0x72e0
  41d0a0:	xor    ebx,esi
  41d0a2:	add    edi,eax
  41d0a4:	add    ebx,eax
  41d0a6:	sub    ebx,edi
  41d0a8:	mov    WORD PTR [ebp-0x8],bx
  41d0ac:	jmp    0x41d171
  41d0b1:	mov    edi,DWORD PTR [ebp-0xc]
  41d0b4:	mov    bx,WORD PTR [ebp-0x4]
  41d0b8:	xor    edi,esi
  41d0ba:	add    edi,eax
  41d0bc:	cmp    bx,di
  41d0bf:	je     0x41d1b3
  41d0c5:	mov    edi,DWORD PTR [ebp-0xc]
  41d0c8:	mov    ebx,DWORD PTR [ebp+0xc]
  41d0cb:	xor    edi,ecx
  41d0cd:	add    edi,edx
  41d0cf:	cmp    ebx,edi
  41d0d1:	mov    di,WORD PTR [ebp-0x4]
  41d0d5:	mov    bx,WORD PTR [ebp+0x8]
  41d0d9:	je     0x41d144
  41d0db:	cmp    bx,di
  41d0de:	je     0x41d14d
  41d0e0:	mov    edi,DWORD PTR [ebp-0x20]
  41d0e3:	mov    bx,WORD PTR [ebp+0x8]
  41d0e7:	xor    edi,esi
  41d0e9:	add    edi,eax
  41d0eb:	cmp    bx,di
  41d0ee:	jb     0x41d10e
  41d0f0:	mov    edi,DWORD PTR [ebp-0x2c]
  41d0f3:	mov    bx,WORD PTR [ebp+0x8]
  41d0f7:	xor    edi,esi
  41d0f9:	add    edi,eax
  41d0fb:	cmp    bx,di
  41d0fe:	ja     0x41d10e
  41d100:	movzx  edi,WORD PTR [ebp+0x8]
  41d104:	movzx  ebx,WORD PTR [ebp-0x8]
  41d108:	add    edi,ebx
  41d10a:	mov    WORD PTR [ebp+0x8],di
  41d10e:	mov    edi,DWORD PTR [ebp-0x20]
  41d111:	mov    bx,WORD PTR [ebp-0x4]
  41d115:	xor    edi,esi
  41d117:	add    edi,eax
  41d119:	cmp    bx,di
  41d11c:	jb     0x41d13c
  41d11e:	mov    edi,DWORD PTR [ebp-0x2c]
  41d121:	mov    bx,WORD PTR [ebp-0x4]
  41d125:	xor    edi,esi
  41d127:	add    edi,eax
  41d129:	cmp    bx,di
  41d12c:	ja     0x41d13c
  41d12e:	movzx  edi,WORD PTR [ebp-0x4]
  41d132:	movzx  ebx,WORD PTR [ebp-0x8]
  41d136:	add    edi,ebx
  41d138:	mov    WORD PTR [ebp-0x4],di
  41d13c:	mov    di,WORD PTR [ebp-0x4]
  41d140:	mov    bx,WORD PTR [ebp+0x8]
  41d144:	cmp    bx,di
  41d147:	jne    0x41d241
  41d14d:	mov    edi,DWORD PTR [ebp-0x1c]
  41d150:	mov    ebx,DWORD PTR [ebp-0x10]
  41d153:	xor    edi,ecx
  41d155:	lea    edi,[edi+ebx*1+0x3272e0]
  41d15c:	mov    DWORD PTR [ebp-0x10],edi
  41d15f:	mov    edi,DWORD PTR [ebp-0x1c]
  41d162:	mov    ebx,DWORD PTR [ebp-0x14]
  41d165:	xor    edi,ecx
  41d167:	lea    edi,[edi+ebx*1+0x3272e0]
  41d16e:	mov    DWORD PTR [ebp-0x14],edi
  41d171:	mov    edi,DWORD PTR [ebp-0x24]
  41d174:	mov    ebx,DWORD PTR [ebp-0x10]
  41d177:	mov    di,WORD PTR [ebx+edi*2]
  41d17b:	mov    WORD PTR [ebp+0x8],di
  41d17f:	mov    edi,DWORD PTR [ebp-0x28]
  41d182:	mov    ebx,DWORD PTR [ebp-0x14]
  41d185:	mov    di,WORD PTR [ebx+edi*2]
  41d189:	mov    WORD PTR [ebp-0x4],di
  41d18d:	mov    edi,DWORD PTR [ebp-0xc]
  41d190:	mov    bx,WORD PTR [ebp+0x8]
  41d194:	xor    edi,esi
  41d196:	add    edi,eax
  41d198:	cmp    bx,di
  41d19b:	jne    0x41d0b1
  41d1a1:	mov    eax,DWORD PTR [ebp-0x18]
  41d1a4:	mov    esi,DWORD PTR [ebp-0xc]
  41d1a7:	xor    eax,ecx
  41d1a9:	add    eax,edx
  41d1ab:	imul   eax,esi
  41d1ae:	mov    DWORD PTR [ebp-0xc],eax
  41d1b1:	jmp    0x41d1c5
  41d1b3:	mov    eax,DWORD PTR [ebp-0xc]
  41d1b6:	mov    esi,DWORD PTR [ebp-0x18]
  41d1b9:	xor    eax,ecx
  41d1bb:	lea    eax,[eax+esi*1+0x3272e0]
  41d1c2:	mov    DWORD PTR [ebp-0x18],eax
  41d1c5:	mov    eax,DWORD PTR [ebp-0x24]
  41d1c8:	sub    eax,edx
  41d1ca:	xor    eax,ecx
  41d1cc:	mov    DWORD PTR [ebp-0x30],eax
  41d1cf:	mov    eax,DWORD PTR [ebp-0x28]
  41d1d2:	sub    eax,edx
  41d1d4:	xor    eax,ecx
  41d1d6:	mov    DWORD PTR [ebp-0x34],eax
  41d1d9:	mov    eax,DWORD PTR [ebp-0x34]
  41d1dc:	mov    esi,DWORD PTR [ebp-0x1c]
  41d1df:	xor    esi,ecx
  41d1e1:	add    esi,edx
  41d1e3:	xor    eax,ecx
  41d1e5:	add    eax,0x3272e0
  41d1ea:	imul   esi,eax
  41d1ed:	mov    eax,DWORD PTR [ebp-0x14]
  41d1f0:	movzx  eax,WORD PTR [esi+eax*1]
  41d1f4:	mov    esi,DWORD PTR [ebp-0x30]
  41d1f7:	mov    edi,DWORD PTR [ebp-0x1c]
  41d1fa:	xor    esi,ecx
  41d1fc:	add    esi,edx
  41d1fe:	xor    edi,ecx
  41d200:	add    edi,edx
  41d202:	imul   edi,esi
  41d205:	mov    esi,DWORD PTR [ebp-0x10]
  41d208:	movzx  esi,WORD PTR [edi+esi*1]
  41d20c:	sub    eax,edx
  41d20e:	sub    esi,edx
  41d210:	xor    eax,ecx
  41d212:	xor    esi,ecx
  41d214:	cmp    esi,eax
  41d216:	jne    0x41d241
  41d218:	mov    eax,DWORD PTR [ebp-0x30]
  41d21b:	mov    esi,DWORD PTR [ebp-0x1c]
  41d21e:	xor    eax,ecx
  41d220:	add    eax,0x3272e0
  41d225:	xor    esi,ecx
  41d227:	add    esi,edx
  41d229:	imul   esi,eax
  41d22c:	mov    eax,DWORD PTR [ebp-0x10]
  41d22f:	movzx  eax,WORD PTR [esi+eax*1]
  41d233:	mov    esi,DWORD PTR [ebp-0xc]
  41d236:	sub    eax,edx
  41d238:	xor    eax,ecx
  41d23a:	cmp    eax,esi
  41d23c:	mov    eax,DWORD PTR [ebp-0xc]
  41d23f:	je     0x41d244
  41d241:	mov    eax,DWORD PTR [ebp-0x18]
  41d244:	pop    edi
  41d245:	xor    eax,ecx
  41d247:	pop    esi
  41d248:	add    eax,edx
  41d24a:	pop    ebx
  41d24b:	leave  
  41d24c:	ret    0x8
  41d24f:	push   ebp
  41d250:	mov    ebp,esp
  41d252:	push   ecx
  41d253:	mov    cx,WORD PTR [eax]
  41d256:	push   esi
  41d257:	mov    esi,0x3b50
  41d25c:	sub    cx,si
  41d25f:	mov    esi,0x8a8c
  41d264:	xor    cx,si
  41d267:	mov    esi,0x4e3c
  41d26c:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d273:	mov    edx,0xf89c85b9
  41d278:	cmp    cx,si
  41d27b:	je     0x41d2da
  41d27d:	push   ebx
  41d27e:	push   edi
  41d27f:	movzx  ecx,cx
  41d282:	mov    edi,0xffcd8d20
  41d287:	mov    esi,0x7510899
  41d28c:	mov    ebx,0x4f80
  41d291:	cmp    cx,bx
  41d294:	jne    0x41d299
  41d296:	mov    DWORD PTR [ebp-0x4],edx
  41d299:	lea    edx,[edi+0x1]
  41d29c:	xor    edx,esi
  41d29e:	mov    edi,edx
  41d2a0:	xor    edi,esi
  41d2a2:	mov    cx,WORD PTR [eax+edi*2+0x64e5c0]
  41d2aa:	mov    ebx,0x3b50
  41d2af:	sub    cx,bx
  41d2b2:	mov    ebx,0x8a8c
  41d2b7:	xor    cx,bx
  41d2ba:	mov    ebx,0x4e3c
  41d2bf:	cmp    cx,bx
  41d2c2:	jne    0x41d28c
  41d2c4:	mov    ecx,DWORD PTR [ebp-0x4]
  41d2c7:	pop    edi
  41d2c8:	pop    ebx
  41d2c9:	cmp    ecx,0xf89c8586
  41d2cf:	je     0x41d2da
  41d2d1:	xor    ecx,esi
  41d2d3:	lea    eax,[eax+ecx*2+0x64e5c2]
  41d2da:	pop    esi
  41d2db:	leave  
  41d2dc:	ret    
  41d2dd:	push   ebp
  41d2de:	mov    ebp,esp
  41d2e0:	push   ecx
  41d2e1:	push   esi
  41d2e2:	push   edi
  41d2e3:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d2ea:	mov    esi,0xf89c85b9
  41d2ef:	call   0x41d24f
  41d2f4:	mov    edi,eax
  41d2f6:	mov    al,BYTE PTR [edi]
  41d2f8:	add    al,0x9
  41d2fa:	xor    al,0x73
  41d2fc:	cmp    al,0x7a
  41d2fe:	je     0x41d361
  41d300:	mov    eax,edi
  41d302:	mov    edx,0xffcd8d20
  41d307:	mov    ecx,0x7510899
  41d30c:	push   ebx
  41d30d:	mov    ax,WORD PTR [eax]
  41d310:	mov    ebx,0x3b50
  41d315:	sub    ax,bx
  41d318:	mov    ebx,0x8a8c
  41d31d:	xor    ax,bx
  41d320:	mov    ebx,0x4e52
  41d325:	cmp    ax,bx
  41d328:	jne    0x41d32d
  41d32a:	mov    DWORD PTR [ebp-0x4],esi
  41d32d:	lea    esi,[edx+0x1]
  41d330:	xor    esi,ecx
  41d332:	mov    edx,esi
  41d334:	xor    edx,ecx
  41d336:	lea    eax,[edi+edx*2+0x64e5c0]
  41d33d:	mov    bl,BYTE PTR [eax]
  41d33f:	add    bl,0x9
  41d342:	xor    bl,0x73
  41d345:	cmp    bl,0x7a
  41d348:	jne    0x41d30d
  41d34a:	mov    eax,DWORD PTR [ebp-0x4]
  41d34d:	pop    ebx
  41d34e:	cmp    eax,0xf89c8586
  41d353:	je     0x41d361
  41d355:	xor    eax,ecx
  41d357:	xor    ecx,ecx
  41d359:	mov    WORD PTR [edi+eax*2+0x64e5c0],cx
  41d361:	mov    eax,edi
  41d363:	pop    edi
  41d364:	pop    esi
  41d365:	leave  
  41d366:	ret    
  41d367:	push   ebp
  41d368:	mov    ebp,esp
  41d36a:	push   ecx
  41d36b:	push   esi
  41d36c:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d373:	mov    esi,0xf89c85b9
  41d378:	call   0x41d24f
  41d37d:	mov    cx,WORD PTR [eax]
  41d380:	mov    edx,0x3b50
  41d385:	sub    cx,dx
  41d388:	mov    edx,0x8a8c
  41d38d:	xor    cx,dx
  41d390:	mov    edx,0x4e3c
  41d395:	cmp    cx,dx
  41d398:	je     0x41d3f1
  41d39a:	push   ebx
  41d39b:	push   edi
  41d39c:	movzx  ecx,cx
  41d39f:	mov    edx,0xffcd8d20
  41d3a4:	mov    edi,0x7510899
  41d3a9:	mov    ebx,0x4e52
  41d3ae:	cmp    cx,bx
  41d3b1:	jne    0x41d3b6
  41d3b3:	mov    DWORD PTR [ebp-0x4],esi
  41d3b6:	lea    esi,[edx+0x1]
  41d3b9:	xor    esi,edi
  41d3bb:	mov    edx,esi
  41d3bd:	xor    edx,edi
  41d3bf:	mov    cx,WORD PTR [eax+edx*2+0x64e5c0]
  41d3c7:	mov    ebx,0x3b50
  41d3cc:	sub    cx,bx
  41d3cf:	mov    ebx,0x8a8c
  41d3d4:	xor    cx,bx
  41d3d7:	mov    ebx,0x4e3c
  41d3dc:	cmp    cx,bx
  41d3df:	jne    0x41d3a9
  41d3e1:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41d3e8:	pop    edi
  41d3e9:	pop    ebx
  41d3ea:	je     0x41d3f1
  41d3ec:	xor    eax,eax
  41d3ee:	inc    eax
  41d3ef:	jmp    0x41d3f3
  41d3f1:	xor    eax,eax
  41d3f3:	pop    esi
  41d3f4:	leave  
  41d3f5:	ret    
  41d3f6:	push   ebp
  41d3f7:	mov    ebp,esp
  41d3f9:	push   ecx
  41d3fa:	mov    eax,DWORD PTR [ebp+0x8]
  41d3fd:	movzx  ecx,WORD PTR [eax]
  41d400:	push   esi
  41d401:	lea    eax,[ecx-0x3b50]
  41d407:	mov    esi,0x8a8c
  41d40c:	push   edi
  41d40d:	xor    eax,esi
  41d40f:	mov    edi,0x4e3c
  41d414:	mov    DWORD PTR [ebp-0x4],edx
  41d417:	cmp    ax,di
  41d41a:	je     0x41d447
  41d41c:	mov    eax,DWORD PTR [ebp+0x8]
  41d41f:	sub    eax,edx
  41d421:	mov    DWORD PTR [ebp+0x8],eax
  41d424:	jmp    0x41d429
  41d426:	mov    eax,DWORD PTR [ebp+0x8]
  41d429:	mov    WORD PTR [edx],cx
  41d42c:	add    edx,0x2
  41d42f:	movzx  edi,WORD PTR [eax+edx*1]
  41d433:	mov    ecx,edi
  41d435:	add    edi,0xffffc4b0
  41d43b:	xor    edi,esi
  41d43d:	mov    eax,0x4e3c
  41d442:	cmp    di,ax
  41d445:	jne    0x41d426
  41d447:	xor    eax,eax
  41d449:	pop    edi
  41d44a:	mov    WORD PTR [edx],ax
  41d44d:	mov    eax,DWORD PTR [ebp-0x4]
  41d450:	pop    esi
  41d451:	leave  
  41d452:	ret    0x4
  41d455:	push   ebp
  41d456:	mov    ebp,esp
  41d458:	sub    esp,0x18
  41d45b:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41d462:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41d469:	mov    eax,DWORD PTR [ebp-0x14]
  41d46c:	xor    eax,0x7510899
  41d471:	add    eax,0x3272e0
  41d476:	mov    DWORD PTR [ebp-0x8],eax
  41d479:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  41d480:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41d487:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41d48e:	mov    eax,DWORD PTR [ebp-0x14]
  41d491:	xor    eax,0x7510899
  41d496:	mov    ecx,DWORD PTR [ebp-0x8]
  41d499:	lea    eax,[ecx+eax*1+0x3272e0]
  41d4a0:	mov    ecx,DWORD PTR [ebp-0x18]
  41d4a3:	xor    ecx,0x7510899
  41d4a9:	add    ecx,0x3272e0
  41d4af:	mov    edx,DWORD PTR [ebp+0x10]
  41d4b2:	imul   edx,ecx
  41d4b5:	cmp    eax,edx
  41d4b7:	jae    0x41d5aa
  41d4bd:	mov    eax,DWORD PTR [ebp+0x10]
  41d4c0:	mov    ecx,DWORD PTR [ebp-0x8]
  41d4c3:	sub    eax,ecx
  41d4c5:	mov    ecx,DWORD PTR [ebp-0x10]
  41d4c8:	xor    ecx,0x7510899
  41d4ce:	add    ecx,0x3272e0
  41d4d4:	cmp    eax,ecx
  41d4d6:	jbe    0x41d508
  41d4d8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4db:	add    eax,DWORD PTR [ebp-0x8]
  41d4de:	mov    ecx,DWORD PTR [ebp+0xc]
  41d4e1:	add    ecx,DWORD PTR [ebp-0x8]
  41d4e4:	mov    edx,DWORD PTR [ecx]
  41d4e6:	mov    DWORD PTR [eax],edx
  41d4e8:	mov    ecx,DWORD PTR [ecx+0x4]
  41d4eb:	mov    DWORD PTR [eax+0x4],ecx
  41d4ee:	mov    eax,DWORD PTR [ebp-0x10]
  41d4f1:	xor    eax,0x7510899
  41d4f6:	mov    ecx,DWORD PTR [ebp-0x8]
  41d4f9:	lea    eax,[ecx+eax*1+0x3272e0]
  41d500:	mov    DWORD PTR [ebp-0x8],eax
  41d503:	jmp    0x41d5a5
  41d508:	mov    eax,DWORD PTR [ebp+0x10]
  41d50b:	mov    ecx,DWORD PTR [ebp-0x8]
  41d50e:	sub    eax,ecx
  41d510:	mov    ecx,DWORD PTR [ebp-0xc]
  41d513:	xor    ecx,0x7510899
  41d519:	add    ecx,0x3272e0
  41d51f:	cmp    eax,ecx
  41d521:	jbe    0x41d54a
  41d523:	mov    eax,DWORD PTR [ebp+0x8]
  41d526:	add    eax,DWORD PTR [ebp-0x8]
  41d529:	mov    ecx,DWORD PTR [ebp+0xc]
  41d52c:	add    ecx,DWORD PTR [ebp-0x8]
  41d52f:	mov    ecx,DWORD PTR [ecx]
  41d531:	mov    DWORD PTR [eax],ecx
  41d533:	mov    eax,DWORD PTR [ebp-0xc]
  41d536:	xor    eax,0x7510899
  41d53b:	mov    ecx,DWORD PTR [ebp-0x8]
  41d53e:	lea    eax,[ecx+eax*1+0x3272e0]
  41d545:	mov    DWORD PTR [ebp-0x8],eax
  41d548:	jmp    0x41d5a5
  41d54a:	mov    eax,DWORD PTR [ebp+0x10]
  41d54d:	mov    ecx,DWORD PTR [ebp-0x8]
  41d550:	sub    eax,ecx
  41d552:	mov    ecx,DWORD PTR [ebp-0x4]
  41d555:	xor    ecx,0x7510899
  41d55b:	add    ecx,0x3272e0
  41d561:	cmp    eax,ecx
  41d563:	jbe    0x41d58e
  41d565:	mov    eax,DWORD PTR [ebp+0x8]
  41d568:	add    eax,DWORD PTR [ebp-0x8]
  41d56b:	mov    ecx,DWORD PTR [ebp+0xc]
  41d56e:	add    ecx,DWORD PTR [ebp-0x8]
  41d571:	mov    cx,WORD PTR [ecx]
  41d574:	mov    WORD PTR [eax],cx
  41d577:	mov    eax,DWORD PTR [ebp-0x4]
  41d57a:	xor    eax,0x7510899
  41d57f:	mov    ecx,DWORD PTR [ebp-0x8]
  41d582:	lea    eax,[ecx+eax*1+0x3272e0]
  41d589:	mov    DWORD PTR [ebp-0x8],eax
  41d58c:	jmp    0x41d5a5
  41d58e:	mov    eax,DWORD PTR [ebp+0x8]
  41d591:	add    eax,DWORD PTR [ebp-0x8]
  41d594:	mov    ecx,DWORD PTR [ebp+0xc]
  41d597:	add    ecx,DWORD PTR [ebp-0x8]
  41d59a:	mov    cl,BYTE PTR [ecx]
  41d59c:	mov    BYTE PTR [eax],cl
  41d59e:	mov    eax,DWORD PTR [ebp-0x8]
  41d5a1:	inc    eax
  41d5a2:	mov    DWORD PTR [ebp-0x8],eax
  41d5a5:	jmp    0x41d48e
  41d5aa:	leave  
  41d5ab:	ret    0xc
  41d5ae:	push   ebp
  41d5af:	mov    ebp,esp
  41d5b1:	sub    esp,0xc
  41d5b4:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41d5bb:	push   esi
  41d5bc:	mov    esi,eax
  41d5be:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41d5c5:	mov    edx,DWORD PTR [ebp-0x4]
  41d5c8:	mov    eax,0x7510899
  41d5cd:	xor    edx,eax
  41d5cf:	mov    ecx,0x3272e0
  41d5d4:	add    edx,ecx
  41d5d6:	cmp    esi,edx
  41d5d8:	je     0x41d61a
  41d5da:	push   ebx
  41d5db:	push   edi
  41d5dc:	mov    edx,DWORD PTR [ebp-0x8]
  41d5df:	mov    ebx,DWORD PTR [ebp+0x8]
  41d5e2:	xor    edx,eax
  41d5e4:	mov    edi,0xffcd8d20
  41d5e9:	sub    edi,edx
  41d5eb:	add    esi,edi
  41d5ed:	lea    edx,[esi-0x3272e0]
  41d5f3:	xor    edx,eax
  41d5f5:	mov    DWORD PTR [ebp-0xc],edx
  41d5f8:	mov    edx,DWORD PTR [ebp-0x4]
  41d5fb:	mov    edi,DWORD PTR [ebp-0xc]
  41d5fe:	xor    dl,0x99
  41d601:	sub    dl,0x20
  41d604:	xor    edi,eax
  41d606:	mov    BYTE PTR [edi+ebx*1+0x3272e0],dl
  41d60d:	mov    edx,DWORD PTR [ebp-0x4]
  41d610:	xor    edx,eax
  41d612:	add    edx,ecx
  41d614:	cmp    esi,edx
  41d616:	jne    0x41d5dc
  41d618:	pop    edi
  41d619:	pop    ebx
  41d61a:	pop    esi
  41d61b:	leave  
  41d61c:	ret    0x4
  41d61f:	push   ebp
  41d620:	mov    ebp,esp
  41d622:	sub    esp,0x21c
  41d628:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41d62f:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  41d636:	mov    eax,DWORD PTR [ebp+0x10]
  41d639:	mov    eax,DWORD PTR [ebp-0x4]
  41d63c:	mov    ecx,DWORD PTR [ebp+0x8]
  41d63f:	push   esi
  41d640:	push   edi
  41d641:	mov    edi,0x7510899
  41d646:	xor    eax,edi
  41d648:	mov    esi,0x3272e0
  41d64d:	add    eax,esi
  41d64f:	cmp    eax,ecx
  41d651:	mov    eax,DWORD PTR [ebp-0x4]
  41d654:	jne    0x41d65f
  41d656:	xor    eax,edi
  41d658:	add    eax,esi
  41d65a:	jmp    0x41d70b
  41d65f:	mov    ecx,DWORD PTR [ebp+0xc]
  41d662:	xor    eax,edi
  41d664:	add    eax,esi
  41d666:	cmp    eax,ecx
  41d668:	jne    0x41d66f
  41d66a:	mov    eax,DWORD PTR [ebp-0x4]
  41d66d:	jmp    0x41d656
  41d66f:	lea    eax,[ebp-0x21c]
  41d675:	mov    DWORD PTR [ebp-0x8],eax
  41d678:	mov    eax,DWORD PTR [ebp+0xc]
  41d67b:	mov    DWORD PTR [ebp-0x10],eax
  41d67e:	mov    eax,DWORD PTR [ebp-0x4]
  41d681:	xor    eax,edi
  41d683:	add    eax,esi
  41d685:	mov    DWORD PTR [ebp+0x10],eax
  41d688:	mov    eax,DWORD PTR [ebp+0xc]
  41d68b:	push   ebx
  41d68c:	call   0x41d367
  41d691:	mov    ebx,eax
  41d693:	mov    eax,DWORD PTR [ebp+0x8]
  41d696:	mov    eax,DWORD PTR [eax+0x14]
  41d699:	jmp    0x41d6f3
  41d69b:	mov    eax,DWORD PTR [ebp+0xc]
  41d69e:	sub    eax,0x8
  41d6a1:	mov    DWORD PTR [ebp-0xc],eax
  41d6a4:	mov    eax,DWORD PTR [ebp-0xc]
  41d6a7:	mov    eax,DWORD PTR [eax+0x28]
  41d6aa:	call   0x41d24f
  41d6af:	mov    DWORD PTR [ebp+0x10],eax
  41d6b2:	push   DWORD PTR [ebp+0x10]
  41d6b5:	mov    edx,DWORD PTR [ebp-0x8]
  41d6b8:	call   0x41d3f6
  41d6bd:	mov    eax,DWORD PTR [ebp-0x4]
  41d6c0:	xor    eax,edi
  41d6c2:	add    eax,esi
  41d6c4:	cmp    eax,ebx
  41d6c6:	jne    0x41d6d0
  41d6c8:	mov    eax,DWORD PTR [ebp-0x8]
  41d6cb:	call   0x41d2dd
  41d6d0:	mov    eax,DWORD PTR [ebp-0x14]
  41d6d3:	xor    eax,edi
  41d6d5:	add    eax,esi
  41d6d7:	push   eax
  41d6d8:	push   DWORD PTR [ebp-0x10]
  41d6db:	mov    eax,DWORD PTR [ebp-0x8]
  41d6de:	call   0x41d009
  41d6e3:	mov    ecx,DWORD PTR [ebp-0x4]
  41d6e6:	xor    ecx,edi
  41d6e8:	add    ecx,esi
  41d6ea:	cmp    eax,ecx
  41d6ec:	je     0x41d711
  41d6ee:	mov    eax,DWORD PTR [ebp+0xc]
  41d6f1:	mov    eax,DWORD PTR [eax]
  41d6f3:	mov    DWORD PTR [ebp+0xc],eax
  41d6f6:	mov    eax,DWORD PTR [ebp+0x8]
  41d6f9:	mov    ecx,DWORD PTR [ebp+0xc]
  41d6fc:	add    eax,0x14
  41d6ff:	cmp    ecx,eax
  41d701:	jne    0x41d69b
  41d703:	mov    eax,DWORD PTR [ebp-0x4]
  41d706:	xor    eax,edi
  41d708:	add    eax,esi
  41d70a:	pop    ebx
  41d70b:	pop    edi
  41d70c:	pop    esi
  41d70d:	leave  
  41d70e:	ret    0xc
  41d711:	mov    eax,DWORD PTR [ebp-0xc]
  41d714:	mov    eax,DWORD PTR [eax+0x18]
  41d717:	jmp    0x41d70a
  41d719:	push   ebp
  41d71a:	mov    ebp,esp
  41d71c:	mov    eax,DWORD PTR [ebp+0xc]
  41d71f:	sub    esp,0x10
  41d722:	cmp    DWORD PTR [ebp+0x8],0x0
  41d726:	push   ebx
  41d727:	push   esi
  41d728:	push   edi
  41d729:	je     0x41d7de
  41d72f:	test   eax,eax
  41d731:	je     0x41d7de
  41d737:	movzx  eax,WORD PTR [eax+0x20]
  41d73b:	mov    ecx,eax
  41d73d:	mov    DWORD PTR [ebp-0x10],eax
  41d740:	xor    edx,edx
  41d742:	and    DWORD PTR [ebp-0x8],edx
  41d745:	mov    eax,0x8a8c
  41d74a:	xor    ecx,eax
  41d74c:	add    ecx,0x3b50
  41d752:	mov    DWORD PTR [ebp-0xc],ecx
  41d755:	and    DWORD PTR [ebp-0x4],0x0
  41d759:	xor    ecx,ecx
  41d75b:	push   0x78
  41d75d:	pop    edi
  41d75e:	cmp    cx,WORD PTR [ebp-0xc]
  41d762:	jae    0x41d7c8
  41d764:	lea    esi,[edx-0x3b50]
  41d76a:	xor    esi,eax
  41d76c:	movzx  ecx,WORD PTR [ebp-0x4]
  41d770:	mov    ebx,DWORD PTR [ebp+0xc]
  41d773:	lea    ecx,[ebx+ecx*4]
  41d776:	cmp    WORD PTR [ecx+0x2],si
  41d77a:	jne    0x41d7b3
  41d77c:	movzx  ecx,WORD PTR [ecx]
  41d77f:	mov    edi,0x4e3c
  41d784:	cmp    cx,di
  41d787:	jne    0x41d795
  41d789:	mov    ebx,DWORD PTR [ebp+0x8]
  41d78c:	movzx  edi,dx
  41d78f:	cmp    BYTE PTR [edi+ebx*1],0x0
  41d793:	je     0x41d7c2
  41d795:	mov    ebx,DWORD PTR [ebp+0x8]
  41d798:	movzx  edi,dx
  41d79b:	movsx  di,BYTE PTR [edi+ebx*1]
  41d7a0:	mov    ebx,0x3b50
  41d7a5:	sub    di,bx
  41d7a8:	xor    di,ax
  41d7ab:	cmp    cx,di
  41d7ae:	je     0x41d7c2
  41d7b0:	push   0x7a
  41d7b2:	pop    edi
  41d7b3:	inc    DWORD PTR [ebp-0x4]
  41d7b6:	mov    cx,WORD PTR [ebp-0xc]
  41d7ba:	cmp    WORD PTR [ebp-0x4],cx
  41d7be:	jb     0x41d76c
  41d7c0:	jmp    0x41d7c8
  41d7c2:	inc    DWORD PTR [ebp-0x8]
  41d7c5:	push   0x79
  41d7c7:	pop    edi
  41d7c8:	mov    esi,DWORD PTR [ebp+0x8]
  41d7cb:	movzx  ecx,dx
  41d7ce:	cmp    BYTE PTR [ecx+esi*1],0x0
  41d7d2:	je     0x41d7e7
  41d7d4:	inc    edx
  41d7d5:	cmp    edi,0x7a
  41d7d8:	jne    0x41d755
  41d7de:	xor    eax,eax
  41d7e0:	pop    edi
  41d7e1:	pop    esi
  41d7e2:	pop    ebx
  41d7e3:	leave  
  41d7e4:	ret    0x8
  41d7e7:	mov    ecx,DWORD PTR [ebp-0x8]
  41d7ea:	add    ecx,0xffffc4b0
  41d7f0:	xor    cx,ax
  41d7f3:	xor    eax,eax
  41d7f5:	cmp    cx,WORD PTR [ebp-0x10]
  41d7f9:	sete   al
  41d7fc:	jmp    0x41d7e0
  41d7fe:	push   ebp
  41d7ff:	mov    ebp,esp
  41d801:	sub    esp,0x50
  41d804:	push   edi
  41d805:	mov    edi,eax
  41d807:	mov    eax,DWORD PTR [edi+0x1a8]
  41d80d:	cmp    DWORD PTR [eax],0x0
  41d810:	jne    0x41d819
  41d812:	xor    eax,eax
  41d814:	jmp    0x41d94a
  41d819:	push   DWORD PTR [ebp+0x8]
  41d81c:	push   0x2c
  41d81e:	pop    eax
  41d81f:	call   0x41d5ae
  41d824:	mov    edx,DWORD PTR [edi+0x1ac]
  41d82a:	lea    eax,[edi+0x22]
  41d82d:	mov    DWORD PTR [ebp-0x4c],eax
  41d830:	lea    eax,[edi+0x44]
  41d833:	mov    DWORD PTR [ebp-0x48],eax
  41d836:	lea    eax,[edi+0x66]
  41d839:	mov    DWORD PTR [ebp-0x44],eax
  41d83c:	lea    eax,[edi+0x88]
  41d842:	mov    DWORD PTR [ebp-0x40],eax
  41d845:	lea    eax,[edi+0xaa]
  41d84b:	mov    DWORD PTR [ebp-0x3c],eax
  41d84e:	lea    eax,[edi+0xcc]
  41d854:	mov    DWORD PTR [ebp-0x38],eax
  41d857:	lea    eax,[edi+0xee]
  41d85d:	mov    DWORD PTR [ebp-0x34],eax
  41d860:	lea    eax,[edi+0x110]
  41d866:	mov    DWORD PTR [ebp-0x30],eax
  41d869:	lea    eax,[edi+0x132]
  41d86f:	mov    DWORD PTR [ebp-0x2c],eax
  41d872:	lea    eax,[edi+0x154]
  41d878:	push   edi
  41d879:	mov    DWORD PTR [ebp-0x50],edi
  41d87c:	mov    DWORD PTR [ebp-0x28],eax
  41d87f:	call   0x41d97e
  41d884:	push   eax
  41d885:	mov    eax,DWORD PTR [edi+0x1a8]
  41d88b:	push   DWORD PTR [eax]
  41d88d:	call   0x41d61f
  41d892:	mov    DWORD PTR [ebp-0x10],eax
  41d895:	test   eax,eax
  41d897:	je     0x41d94a
  41d89d:	mov    ecx,DWORD PTR [eax+0x3c]
  41d8a0:	push   ebx
  41d8a1:	push   esi
  41d8a2:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41d8a6:	add    esi,eax
  41d8a8:	mov    edi,DWORD PTR [esi+0x24]
  41d8ab:	mov    ecx,DWORD PTR [esi+0x1c]
  41d8ae:	mov    edx,DWORD PTR [esi+0x20]
  41d8b1:	mov    ebx,DWORD PTR [esi+0x18]
  41d8b4:	add    edi,eax
  41d8b6:	mov    DWORD PTR [ebp-0x20],edi
  41d8b9:	mov    edi,DWORD PTR [esi+0x14]
  41d8bc:	add    ecx,eax
  41d8be:	add    edx,eax
  41d8c0:	mov    DWORD PTR [ebp-0xc],ecx
  41d8c3:	mov    DWORD PTR [ebp-0x1c],edx
  41d8c6:	mov    DWORD PTR [ebp-0x8],edi
  41d8c9:	cmp    edi,ebx
  41d8cb:	ja     0x41d8d0
  41d8cd:	mov    DWORD PTR [ebp-0x8],ebx
  41d8d0:	xor    ebx,ebx
  41d8d2:	mov    DWORD PTR [ebp-0x18],ebx
  41d8d5:	cmp    DWORD PTR [ebp-0x8],ebx
  41d8d8:	jbe    0x41d948
  41d8da:	jmp    0x41d8df
  41d8dc:	mov    edx,DWORD PTR [ebp-0x1c]
  41d8df:	mov    edi,DWORD PTR [ebp-0x20]
  41d8e2:	movzx  edi,WORD PTR [edi+ebx*2]
  41d8e6:	cmp    ebx,DWORD PTR [esi+0x18]
  41d8e9:	jae    0x41d948
  41d8eb:	cmp    edi,DWORD PTR [esi+0x14]
  41d8ee:	jae    0x41d948
  41d8f0:	mov    ebx,DWORD PTR [edx+ebx*4]
  41d8f3:	mov    edx,DWORD PTR [ebp+0x8]
  41d8f6:	mov    edi,DWORD PTR [ecx+edi*4]
  41d8f9:	mov    DWORD PTR [ebp-0x4],edx
  41d8fc:	lea    edx,[ebp-0x50]
  41d8ff:	add    ebx,eax
  41d901:	add    edi,eax
  41d903:	sub    edx,DWORD PTR [ebp+0x8]
  41d906:	mov    DWORD PTR [ebp-0x14],0xb
  41d90d:	mov    DWORD PTR [ebp-0x24],edx
  41d910:	mov    edx,DWORD PTR [ebp-0x4]
  41d913:	cmp    DWORD PTR [edx],0x0
  41d916:	jne    0x41d933
  41d918:	mov    eax,DWORD PTR [ebp-0x24]
  41d91b:	push   DWORD PTR [eax+edx*1]
  41d91e:	push   ebx
  41d91f:	call   0x41d719
  41d924:	mov    ecx,DWORD PTR [ebp-0xc]
  41d927:	test   eax,eax
  41d929:	je     0x41d930
  41d92b:	mov    eax,DWORD PTR [ebp-0x4]
  41d92e:	mov    DWORD PTR [eax],edi
  41d930:	mov    eax,DWORD PTR [ebp-0x10]
  41d933:	add    DWORD PTR [ebp-0x4],0x4
  41d937:	dec    DWORD PTR [ebp-0x14]
  41d93a:	jne    0x41d910
  41d93c:	mov    ebx,DWORD PTR [ebp-0x18]
  41d93f:	inc    ebx
  41d940:	mov    DWORD PTR [ebp-0x18],ebx
  41d943:	cmp    ebx,DWORD PTR [ebp-0x8]
  41d946:	jb     0x41d8dc
  41d948:	pop    esi
  41d949:	pop    ebx
  41d94a:	pop    edi
  41d94b:	leave  
  41d94c:	ret    0x4
  41d94f:	push   ebp
  41d950:	mov    ebp,esp
  41d952:	mov    eax,DWORD PTR [ebp+0x8]
  41d955:	push   esi
  41d956:	push   DWORD PTR [eax+0x1d8]
  41d95c:	lea    esi,[eax+0x198]
  41d962:	mov    eax,DWORD PTR [ebp+0x8]
  41d965:	call   0x41d7fe
  41d96a:	mov    ecx,DWORD PTR [esi]
  41d96c:	mov    DWORD PTR [ecx],eax
  41d96e:	mov    eax,DWORD PTR [esi]
  41d970:	xor    ecx,ecx
  41d972:	cmp    DWORD PTR [eax],ecx
  41d974:	pop    esi
  41d975:	setne  cl
  41d978:	mov    eax,ecx
  41d97a:	pop    ebp
  41d97b:	ret    0x4
  41d97e:	mov    ecx,DWORD PTR [edi+0x188]
  41d984:	push   ebx
  41d985:	jmp    0x41d99a
  41d987:	xor    eax,0x8a8c
  41d98c:	add    eax,0x3b50
  41d991:	mov    WORD PTR [ecx],ax
  41d994:	add    ecx,0x2
  41d997:	add    edx,0x2
  41d99a:	movzx  eax,WORD PTR [edx]
  41d99d:	mov    ebx,0x4e3c
  41d9a2:	cmp    ax,bx
  41d9a5:	jne    0x41d987
  41d9a7:	xor    eax,eax
  41d9a9:	mov    WORD PTR [ecx],ax
  41d9ac:	mov    eax,DWORD PTR [edi+0x188]
  41d9b2:	pop    ebx
  41d9b3:	ret    
  41d9b4:	push   edi
  41d9b5:	mov    edi,eax
  41d9b7:	mov    eax,DWORD PTR [esi+0x188]
  41d9bd:	shl    edi,0x6
  41d9c0:	add    eax,edi
  41d9c2:	jmp    0x41d9ce
  41d9c4:	xor    cl,0x73
  41d9c7:	sub    cl,0x9
  41d9ca:	mov    BYTE PTR [eax],cl
  41d9cc:	inc    eax
  41d9cd:	inc    edx
  41d9ce:	mov    cl,BYTE PTR [edx]
  41d9d0:	cmp    cl,0x7a
  41d9d3:	jne    0x41d9c4
  41d9d5:	mov    BYTE PTR [eax],0x0
  41d9d8:	mov    eax,DWORD PTR [esi+0x188]
  41d9de:	add    eax,edi
  41d9e0:	pop    edi
  41d9e1:	ret    
  41d9e2:	push   ebp
  41d9e3:	mov    ebp,esp
  41d9e5:	sub    esp,0x38
  41d9e8:	push   ebx
  41d9e9:	mov    ebx,0xf89c85b9
  41d9ee:	mov    DWORD PTR [ebp-0x4],ebx
  41d9f1:	lea    eax,[ebx-0x1]
  41d9f4:	push   esi
  41d9f5:	mov    DWORD PTR [ebp-0x24],eax
  41d9f8:	mov    ecx,DWORD PTR [ebp-0x4]
  41d9fb:	mov    edx,DWORD PTR [ebp+0x8]
  41d9fe:	mov    esi,0x7510899
  41da03:	push   edi
  41da04:	xor    ecx,esi
  41da06:	mov    edi,0x3272e0
  41da0b:	add    ecx,edi
  41da0d:	cmp    edx,ecx
  41da0f:	je     0x41db7d
  41da15:	mov    ecx,DWORD PTR [ebp-0x4]
  41da18:	mov    edx,DWORD PTR [ebp+0xc]
  41da1b:	xor    ecx,esi
  41da1d:	add    ecx,edi
  41da1f:	cmp    edx,ecx
  41da21:	je     0x41db7d
  41da27:	mov    ecx,DWORD PTR [ebp+0x10]
  41da2a:	mov    DWORD PTR [ebp-0x18],ecx
  41da2d:	mov    ecx,DWORD PTR [ebp+0xc]
  41da30:	mov    DWORD PTR [ebp-0x14],ecx
  41da33:	mov    ecx,DWORD PTR [ebp+0x8]
  41da36:	mov    DWORD PTR [ebp-0x1c],0xf89c8504
  41da3d:	mov    DWORD PTR [ebp-0x20],eax
  41da40:	mov    DWORD PTR [ebp-0x10],ebx
  41da43:	mov    DWORD PTR [ebp+0xc],eax
  41da46:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41da4d:	mov    eax,DWORD PTR [ebp+0xc]
  41da50:	mov    DWORD PTR [ebp-0xc],ecx
  41da53:	xor    eax,esi
  41da55:	mov    ecx,0xffcd8d20
  41da5a:	sub    ecx,eax
  41da5c:	add    ecx,DWORD PTR [ebp-0x14]
  41da5f:	mov    DWORD PTR [ebp+0x8],ecx
  41da62:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  41da69:	jmp    0x41db6d
  41da6e:	mov    eax,DWORD PTR [ebp+0xc]
  41da71:	mov    ecx,DWORD PTR [ebp+0xc]
  41da74:	xor    eax,esi
  41da76:	xor    ecx,esi
  41da78:	lea    ecx,[eax+ecx*1+0x64e5c0]
  41da7f:	mov    eax,DWORD PTR [ebp+0x8]
  41da82:	xor    edx,edx
  41da84:	div    ecx
  41da86:	mov    eax,DWORD PTR [ebp+0x10]
  41da89:	mov    ecx,DWORD PTR [ebp+0xc]
  41da8c:	xor    eax,esi
  41da8e:	xor    ecx,esi
  41da90:	sub    eax,ecx
  41da92:	cmp    edx,eax
  41da94:	jne    0x41db29
  41da9a:	mov    eax,DWORD PTR [ebp+0x8]
  41da9d:	add    eax,DWORD PTR [ebp-0xc]
  41daa0:	mov    dl,BYTE PTR [eax]
  41daa2:	mov    eax,DWORD PTR [ebp-0x10]
  41daa5:	mov    ecx,DWORD PTR [ebp-0x8]
  41daa8:	xor    eax,esi
  41daaa:	xor    ecx,esi
  41daac:	add    eax,edi
  41daae:	add    ecx,edi
  41dab0:	cmp    eax,ecx
  41dab2:	jae    0x41dafa
  41dab4:	lea    ecx,[eax-0x3272e0]
  41daba:	mov    DWORD PTR [ebp-0x4],ecx
  41dabd:	mov    ebx,DWORD PTR [ebp-0x4]
  41dac0:	xor    ebx,esi
  41dac2:	add    ebx,0x7f55d8fb
  41dac8:	lea    ecx,[ebp+eax*4-0x38]
  41dacc:	mov    DWORD PTR [ecx],ebx
  41dace:	mov    ebx,DWORD PTR [ecx]
  41dad0:	cmp    ebx,0x244ecbda
  41dad6:	jbe    0x41dae0
  41dad8:	add    DWORD PTR [ecx],0x405fc1d
  41dade:	jmp    0x41dae6
  41dae0:	add    DWORD PTR [ecx],0xfdaf43e3
  41dae6:	mov    ecx,DWORD PTR [ebp-0x8]
  41dae9:	xor    ecx,esi
  41daeb:	inc    eax
  41daec:	inc    DWORD PTR [ebp-0x4]
  41daef:	add    ecx,edi
  41daf1:	cmp    eax,ecx
  41daf3:	jb     0x41dabd
  41daf5:	mov    ebx,0xf89c85b9
  41dafa:	mov    eax,DWORD PTR [ebp-0x18]
  41dafd:	test   eax,eax
  41daff:	jne    0x41db09
  41db01:	xor    dl,0x73
  41db04:	sub    dl,0x9
  41db07:	jmp    0x41db1f
  41db09:	mov    eax,DWORD PTR [ebp-0x1c]
  41db0c:	xor    al,0x99
  41db0e:	mov    cl,0x20
  41db10:	sub    cl,al
  41db12:	add    dl,cl
  41db14:	mov    ecx,DWORD PTR [ebp-0x20]
  41db17:	xor    cl,0x99
  41db1a:	sub    cl,0x20
  41db1d:	ror    dl,cl
  41db1f:	xor    eax,eax
  41db21:	mov    eax,DWORD PTR [ebp+0x8]
  41db24:	add    eax,DWORD PTR [ebp-0xc]
  41db27:	mov    BYTE PTR [eax],dl
  41db29:	mov    eax,DWORD PTR [ebp+0x8]
  41db2c:	mov    ecx,DWORD PTR [ebp-0x10]
  41db2f:	sub    eax,edi
  41db31:	xor    eax,esi
  41db33:	cmp    eax,ecx
  41db35:	jne    0x41db5b
  41db37:	mov    eax,DWORD PTR [ebp+0x10]
  41db3a:	mov    ecx,DWORD PTR [ebp+0xc]
  41db3d:	xor    eax,esi
  41db3f:	xor    ecx,esi
  41db41:	sub    eax,ecx
  41db43:	sub    eax,edi
  41db45:	xor    eax,esi
  41db47:	mov    DWORD PTR [ebp+0x10],eax
  41db4a:	mov    eax,DWORD PTR [ebp+0xc]
  41db4d:	xor    eax,esi
  41db4f:	mov    ecx,0xffcd8d20
  41db54:	sub    ecx,eax
  41db56:	add    ecx,DWORD PTR [ebp-0x14]
  41db59:	jmp    0x41db6a
  41db5b:	mov    eax,DWORD PTR [ebp+0xc]
  41db5e:	xor    eax,esi
  41db60:	mov    ecx,0xffcd8d20
  41db65:	sub    ecx,eax
  41db67:	add    ecx,DWORD PTR [ebp+0x8]
  41db6a:	mov    DWORD PTR [ebp+0x8],ecx
  41db6d:	mov    eax,DWORD PTR [ebp+0x10]
  41db70:	cmp    eax,ebx
  41db72:	jne    0x41da6e
  41db78:	mov    eax,DWORD PTR [ebp-0x24]
  41db7b:	jmp    0x41db80
  41db7d:	mov    eax,DWORD PTR [ebp-0x4]
  41db80:	xor    eax,esi
  41db82:	add    eax,edi
  41db84:	pop    edi
  41db85:	pop    esi
  41db86:	pop    ebx
  41db87:	leave  
  41db88:	ret    0xc
  41db8b:	push   ebp
  41db8c:	mov    ebp,esp
  41db8e:	sub    esp,0x14
  41db91:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  41db98:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  41db9f:	mov    eax,DWORD PTR [ebx]
  41dba1:	mov    DWORD PTR [ebp-0x8],eax
  41dba4:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  41dbab:	push   esi
  41dbac:	push   edi
  41dbad:	mov    DWORD PTR [ebp-0x14],0xead718d9
  41dbb4:	mov    edi,DWORD PTR [ebp-0x4]
  41dbb7:	mov    ecx,DWORD PTR [ebp-0x10]
  41dbba:	mov    eax,0x7510899
  41dbbf:	xor    edi,eax
  41dbc1:	mov    edx,0x3272e0
  41dbc6:	xor    ecx,eax
  41dbc8:	add    edi,edx
  41dbca:	add    ecx,edx
  41dbcc:	imul   edi,ecx
  41dbcf:	jmp    0x41dc17
  41dbd1:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbd4:	mov    esi,DWORD PTR [ebp-0x4]
  41dbd7:	xor    ecx,eax
  41dbd9:	xor    esi,eax
  41dbdb:	add    ecx,edx
  41dbdd:	add    esi,edx
  41dbdf:	test   esi,ecx
  41dbe1:	mov    esi,DWORD PTR [ebp-0x8]
  41dbe4:	mov    ecx,DWORD PTR [ebp-0x4]
  41dbe7:	je     0x41dbfe
  41dbe9:	xor    ecx,eax
  41dbeb:	xor    esi,eax
  41dbed:	add    ecx,edx
  41dbef:	add    esi,edx
  41dbf1:	shr    esi,cl
  41dbf3:	mov    ecx,DWORD PTR [ebp-0x14]
  41dbf6:	xor    ecx,eax
  41dbf8:	add    ecx,edx
  41dbfa:	xor    esi,ecx
  41dbfc:	jmp    0x41dc08
  41dbfe:	xor    esi,eax
  41dc00:	xor    ecx,eax
  41dc02:	add    esi,edx
  41dc04:	add    ecx,edx
  41dc06:	shr    esi,cl
  41dc08:	mov    DWORD PTR [ebp-0x8],esi
  41dc0b:	mov    ecx,DWORD PTR [ebp-0x4]
  41dc0e:	xor    ecx,eax
  41dc10:	lea    edi,[edi+ecx*1+0x3272e0]
  41dc17:	mov    ecx,DWORD PTR [ebp-0xc]
  41dc1a:	mov    esi,DWORD PTR [ebp-0x4]
  41dc1d:	xor    esi,eax
  41dc1f:	xor    ecx,eax
  41dc21:	sub    ecx,esi
  41dc23:	cmp    edi,ecx
  41dc25:	jbe    0x41dbd1
  41dc27:	mov    eax,DWORD PTR [ebp-0x8]
  41dc2a:	pop    edi
  41dc2b:	mov    DWORD PTR [ebx],eax
  41dc2d:	mov    eax,DWORD PTR [ebp-0x8]
  41dc30:	pop    esi
  41dc31:	leave  
  41dc32:	ret    
  41dc33:	push   ebp
  41dc34:	mov    ebp,esp
  41dc36:	sub    esp,0x420
  41dc3c:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41dc43:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41dc4a:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  41dc51:	push   ebx
  41dc52:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41dc59:	mov    eax,DWORD PTR [ebp-0x14]
  41dc5c:	push   esi
  41dc5d:	mov    esi,0x7510899
  41dc62:	push   edi
  41dc63:	xor    eax,esi
  41dc65:	mov    edi,0x3272e0
  41dc6a:	add    eax,edi
  41dc6c:	mov    DWORD PTR [ebp-0x8],eax
  41dc6f:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  41dc76:	mov    DWORD PTR [ebp-0x4],0xead718d9
  41dc7d:	mov    DWORD PTR [ebp-0x10],0x8
  41dc84:	mov    ecx,ecx
  41dc86:	mov    eax,DWORD PTR [ebp-0xc]
  41dc89:	mov    ecx,DWORD PTR [ebp-0x14]
  41dc8c:	xor    eax,esi
  41dc8e:	xor    ecx,esi
  41dc90:	add    eax,edi
  41dc92:	add    ecx,edi
  41dc94:	imul   eax,ecx
  41dc97:	jmp    0x41dcca
  41dc99:	mov    eax,DWORD PTR [ebp-0x4]
  41dc9c:	sub    eax,edi
  41dc9e:	xor    eax,esi
  41dca0:	mov    DWORD PTR [ebp-0x8],eax
  41dca3:	lea    ebx,[ebp-0x8]
  41dca6:	call   0x41db8b
  41dcab:	mov    DWORD PTR [ebp-0x8],eax
  41dcae:	mov    eax,DWORD PTR [ebp-0x8]
  41dcb1:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcb4:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41dcbb:	mov    eax,DWORD PTR [ebp-0xc]
  41dcbe:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcc1:	xor    eax,esi
  41dcc3:	lea    eax,[eax+ecx*1+0x3272e0]
  41dcca:	mov    DWORD PTR [ebp-0x4],eax
  41dccd:	mov    eax,DWORD PTR [ebp-0x18]
  41dcd0:	mov    ecx,DWORD PTR [ebp-0xc]
  41dcd3:	xor    ecx,esi
  41dcd5:	xor    eax,esi
  41dcd7:	sub    eax,ecx
  41dcd9:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcdc:	cmp    ecx,eax
  41dcde:	jbe    0x41dc99
  41dce0:	mov    eax,DWORD PTR [ebp-0x1c]
  41dce3:	xor    eax,esi
  41dce5:	add    eax,edi
  41dce7:	mov    DWORD PTR [ebp-0x8],eax
  41dcea:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41dcf1:	mov    ebx,ebx
  41dcf3:	jmp    0x41dd56
  41dcf5:	mov    ecx,DWORD PTR [ebp-0x20]
  41dcf8:	mov    eax,DWORD PTR [ebp-0x8]
  41dcfb:	xor    ecx,esi
  41dcfd:	add    ecx,edi
  41dcff:	shr    eax,cl
  41dd01:	mov    DWORD PTR [ebp-0x4],eax
  41dd04:	mov    eax,DWORD PTR [ebp+0x8]
  41dd07:	mov    cl,BYTE PTR [eax]
  41dd09:	mov    BYTE PTR [ebp+0xb],cl
  41dd0c:	mov    cl,BYTE PTR [ebp+0xb]
  41dd0f:	mov    edx,DWORD PTR [ebp-0x8]
  41dd12:	movzx  ecx,cl
  41dd15:	xor    ecx,edx
  41dd17:	mov    DWORD PTR [ebp+0x8],ecx
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x18]
  41dd1d:	mov    edx,DWORD PTR [ebp+0x8]
  41dd20:	xor    ecx,esi
  41dd22:	add    ecx,edi
  41dd24:	and    ecx,edx
  41dd26:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41dd2d:	mov    edx,DWORD PTR [ebp-0x4]
  41dd30:	xor    ecx,edx
  41dd32:	mov    DWORD PTR [ebp-0x8],ecx
  41dd35:	mov    ecx,DWORD PTR [ebp-0xc]
  41dd38:	xor    ecx,esi
  41dd3a:	lea    eax,[eax+ecx*1+0x3272e0]
  41dd41:	mov    DWORD PTR [ebp+0x8],eax
  41dd44:	mov    eax,DWORD PTR [ebp-0xc]
  41dd47:	xor    eax,esi
  41dd49:	mov    ecx,0xffcd8d20
  41dd4e:	sub    ecx,eax
  41dd50:	add    ecx,DWORD PTR [ebp-0x10]
  41dd53:	mov    DWORD PTR [ebp-0x10],ecx
  41dd56:	mov    eax,DWORD PTR [ebp-0x14]
  41dd59:	mov    ecx,DWORD PTR [ebp-0x10]
  41dd5c:	xor    eax,esi
  41dd5e:	add    eax,edi
  41dd60:	cmp    ecx,eax
  41dd62:	jne    0x41dcf5
  41dd64:	mov    eax,DWORD PTR [ebp-0x1c]
  41dd67:	mov    ecx,DWORD PTR [ebp-0x8]
  41dd6a:	xor    eax,esi
  41dd6c:	add    eax,edi
  41dd6e:	pop    edi
  41dd6f:	pop    esi
  41dd70:	xor    eax,ecx
  41dd72:	pop    ebx
  41dd73:	leave  
  41dd74:	ret    0x4
  41dd77:	push   ebp
  41dd78:	mov    ebp,esp
  41dd7a:	mov    eax,DWORD PTR [ebp+0x1c]
  41dd7d:	mov    ecx,DWORD PTR [ebp+0x8]
  41dd80:	mov    edx,DWORD PTR [ebp+0x10]
  41dd83:	mov    eax,DWORD PTR [eax+0x190]
  41dd89:	mov    eax,DWORD PTR [eax]
  41dd8b:	sub    esp,0x64
  41dd8e:	push   ebx
  41dd8f:	push   esi
  41dd90:	push   edi
  41dd91:	mov    edi,0x7510899
  41dd96:	xor    ecx,edi
  41dd98:	mov    ebx,0x3272e0
  41dd9d:	add    ecx,ebx
  41dd9f:	cmp    ecx,edx
  41dda1:	jne    0x41ddb2
  41dda3:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41ddad:	jmp    0x41e2ae
  41ddb2:	mov    ecx,DWORD PTR [ebp+0x8]
  41ddb5:	mov    esi,DWORD PTR [ebp+0x14]
  41ddb8:	mov    edx,DWORD PTR [esi]
  41ddba:	xor    ecx,edi
  41ddbc:	add    ecx,ebx
  41ddbe:	cmp    edx,ecx
  41ddc0:	je     0x41e269
  41ddc6:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ddc9:	mov    DWORD PTR [ebp-0x1c],eax
  41ddcc:	mov    DWORD PTR [ebp+0x1c],ecx
  41ddcf:	mov    ecx,DWORD PTR [ebp+0x18]
  41ddd2:	mov    eax,DWORD PTR [esi]
  41ddd4:	mov    DWORD PTR [ebp-0x20],eax
  41ddd7:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  41ddde:	mov    edx,0xf89c85b8
  41dde3:	mov    DWORD PTR [ebp-0x8],edx
  41dde6:	mov    eax,DWORD PTR [ebp+0x1c]
  41dde9:	mov    DWORD PTR [ebp+0x1c],eax
  41ddec:	mov    eax,DWORD PTR [ebp+0x1c]
  41ddef:	mov    eax,DWORD PTR [eax+0x190]
  41ddf5:	mov    eax,DWORD PTR [eax]
  41ddf7:	mov    DWORD PTR [ebp-0x24],ecx
  41ddfa:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ddfd:	mov    ecx,DWORD PTR [ecx+0x190]
  41de03:	mov    ecx,DWORD PTR [ecx]
  41de05:	add    ecx,DWORD PTR [eax+0x3c]
  41de08:	mov    DWORD PTR [ebp+0x10],ecx
  41de0b:	mov    eax,DWORD PTR [ebp+0x8]
  41de0e:	xor    eax,edi
  41de10:	add    eax,ebx
  41de12:	mov    DWORD PTR [ebp-0x4],eax
  41de15:	mov    eax,DWORD PTR [ebp+0x8]
  41de18:	xor    eax,edi
  41de1a:	add    eax,ebx
  41de1c:	mov    DWORD PTR [ebp+0x18],eax
  41de1f:	mov    eax,DWORD PTR [ebp+0x10]
  41de22:	mov    eax,DWORD PTR [eax+0x50]
  41de25:	sub    eax,0xc
  41de28:	mov    DWORD PTR [ebp-0x28],eax
  41de2b:	mov    eax,DWORD PTR [ebp+0x10]
  41de2e:	mov    eax,DWORD PTR [eax+0x38]
  41de31:	mov    ecx,DWORD PTR [ebp+0x10]
  41de34:	dec    eax
  41de35:	test   DWORD PTR [ecx+0x54],eax
  41de38:	mov    eax,DWORD PTR [ebp+0x10]
  41de3b:	je     0x41de55
  41de3d:	mov    eax,DWORD PTR [eax+0x38]
  41de40:	mov    ecx,DWORD PTR [ebp+0x10]
  41de43:	mov    ecx,DWORD PTR [ecx+0x54]
  41de46:	dec    eax
  41de47:	not    eax
  41de49:	and    ecx,eax
  41de4b:	mov    eax,DWORD PTR [ebp+0x10]
  41de4e:	mov    eax,DWORD PTR [eax+0x38]
  41de51:	add    eax,ecx
  41de53:	jmp    0x41de58
  41de55:	mov    eax,DWORD PTR [eax+0x54]
  41de58:	mov    DWORD PTR [ebp+0x1c],eax
  41de5b:	mov    eax,DWORD PTR [ebp+0x8]
  41de5e:	xor    eax,edi
  41de60:	add    eax,ebx
  41de62:	mov    DWORD PTR [ebp+0x18],eax
  41de65:	mov    eax,DWORD PTR [ebp+0x8]
  41de68:	xor    eax,edi
  41de6a:	add    eax,ebx
  41de6c:	mov    DWORD PTR [ebp+0x18],eax
  41de6f:	mov    eax,DWORD PTR [ebp+0x8]
  41de72:	mov    ecx,DWORD PTR [ebp-0x24]
  41de75:	xor    eax,edi
  41de77:	add    eax,ebx
  41de79:	mov    DWORD PTR [ecx],eax
  41de7b:	mov    DWORD PTR [ebp+0x18],edx
  41de7e:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  41de85:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  41de8c:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  41de93:	mov    eax,DWORD PTR [ebp-0x8]
  41de96:	mov    ecx,DWORD PTR [ebp+0x1c]
  41de99:	xor    eax,edi
  41de9b:	add    eax,ebx
  41de9d:	imul   eax,ecx
  41dea0:	mov    ecx,DWORD PTR [ebp+0x8]
  41dea3:	mov    edx,DWORD PTR [ebp-0x28]
  41dea6:	xor    ecx,edi
  41dea8:	lea    ecx,[ecx+edx*1+0x3272e0]
  41deaf:	cmp    eax,ecx
  41deb1:	jae    0x41e262
  41deb7:	mov    eax,DWORD PTR [ebp+0x8]
  41deba:	xor    eax,edi
  41debc:	add    eax,ebx
  41debe:	mov    DWORD PTR [ebp+0x18],eax
  41dec1:	mov    eax,DWORD PTR [ebp+0x1c]
  41dec4:	add    eax,DWORD PTR [ebp-0x1c]
  41dec7:	mov    DWORD PTR [ebp-0x4],eax
  41deca:	push   DWORD PTR [ebp-0x4]
  41decd:	mov    esi,DWORD PTR [ebp-0x1c]
  41ded0:	mov    ecx,DWORD PTR [ebp+0x10]
  41ded3:	call   0x41cfcb
  41ded8:	mov    DWORD PTR [ebp+0xc],eax
  41dedb:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  41dee2:	mov    eax,DWORD PTR [ebp-0x18]
  41dee5:	xor    eax,edi
  41dee7:	lea    ecx,[ebp-0x40]
  41deea:	add    eax,ebx
  41deec:	push   ecx
  41deed:	call   0x41d5ae
  41def2:	mov    eax,DWORD PTR [ebp+0xc]
  41def5:	test   eax,eax
  41def7:	je     0x41df47
  41def9:	mov    eax,DWORD PTR [ebp-0x18]
  41defc:	xor    eax,edi
  41defe:	add    eax,ebx
  41df00:	push   eax
  41df01:	push   DWORD PTR [ebp+0xc]
  41df04:	lea    eax,[ebp-0x40]
  41df07:	push   eax
  41df08:	call   0x41d455
  41df0d:	mov    eax,DWORD PTR [ebp-0x4]
  41df10:	mov    DWORD PTR [ebp-0x18],eax
  41df13:	mov    eax,DWORD PTR [ebp-0x18]
  41df16:	mov    ecx,DWORD PTR [ebp-0x1c]
  41df19:	sub    eax,ecx
  41df1b:	mov    DWORD PTR [ebp-0x18],eax
  41df1e:	mov    eax,DWORD PTR [ebp+0xc]
  41df21:	mov    ecx,DWORD PTR [ebp+0xc]
  41df24:	mov    eax,DWORD PTR [eax+0x10]
  41df27:	add    eax,DWORD PTR [ecx+0xc]
  41df2a:	mov    ecx,DWORD PTR [ebp-0x18]
  41df2d:	cmp    ecx,eax
  41df2f:	jb     0x41df47
  41df31:	mov    eax,DWORD PTR [ebp+0xc]
  41df34:	mov    eax,DWORD PTR [eax+0xc]
  41df37:	mov    ecx,DWORD PTR [ebp+0xc]
  41df3a:	add    eax,DWORD PTR [ecx+0x8]
  41df3d:	mov    ecx,DWORD PTR [ebp-0x18]
  41df40:	sub    eax,ecx
  41df42:	jmp    0x41e235
  41df47:	push   0xc
  41df49:	push   DWORD PTR [ebp-0x4]
  41df4c:	lea    eax,[ebp-0x4c]
  41df4f:	push   eax
  41df50:	call   0x41d455
  41df55:	mov    eax,0xf89c85b9
  41df5a:	mov    DWORD PTR [ebp-0x2c],eax
  41df5d:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  41df64:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  41df6b:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  41df72:	lea    ecx,[ebp-0x2c]
  41df75:	mov    DWORD PTR [ebp-0xc],ecx
  41df78:	lea    ecx,[ebp-0x30]
  41df7b:	mov    DWORD PTR [ebp-0x10],ecx
  41df7e:	lea    ecx,[ebp-0x34]
  41df81:	mov    DWORD PTR [ebp+0xc],ecx
  41df84:	lea    ecx,[ebp-0x38]
  41df87:	mov    DWORD PTR [ebp-0x14],ecx
  41df8a:	mov    ecx,DWORD PTR [ebp+0x8]
  41df8d:	xor    ecx,edi
  41df8f:	add    ecx,ebx
  41df91:	mov    DWORD PTR [ebp-0x18],ecx
  41df94:	jmp    0x41e190
  41df99:	cmp    eax,0xf89c85bb
  41df9e:	je     0x41e1a2
  41dfa4:	mov    ecx,DWORD PTR [ebp-0x8]
  41dfa7:	xor    ecx,edi
  41dfa9:	mov    esi,eax
  41dfab:	add    ecx,ebx
  41dfad:	mov    DWORD PTR [ebp+0x18],ecx
  41dfb0:	mov    eax,DWORD PTR [ebp-0x18]
  41dfb3:	xor    esi,edi
  41dfb5:	lea    eax,[eax+esi*1+0x3272e0]
  41dfbc:	mov    DWORD PTR [ebp-0x18],eax
  41dfbf:	mov    eax,DWORD PTR [ebp-0x8]
  41dfc2:	mov    ecx,DWORD PTR [ebp-0x18]
  41dfc5:	xor    eax,edi
  41dfc7:	add    eax,ebx
  41dfc9:	cmp    ecx,eax
  41dfcb:	jne    0x41dfe0
  41dfcd:	mov    eax,DWORD PTR [ebp+0x8]
  41dfd0:	xor    eax,edi
  41dfd2:	add    eax,ebx
  41dfd4:	push   eax
  41dfd5:	push   0xc
  41dfd7:	lea    eax,[ebp-0x4c]
  41dfda:	push   eax
  41dfdb:	call   0x41d9e2
  41dfe0:	mov    eax,DWORD PTR [ebp-0xc]
  41dfe3:	mov    eax,DWORD PTR [eax]
  41dfe5:	xor    eax,edi
  41dfe7:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41dfee:	mov    ecx,DWORD PTR [ebp+0x8]
  41dff1:	xor    ecx,edi
  41dff3:	movzx  eax,al
  41dff6:	add    ecx,ebx
  41dff8:	cmp    eax,ecx
  41dffa:	je     0x41e178
  41e000:	mov    eax,DWORD PTR [ebp-0x10]
  41e003:	mov    eax,DWORD PTR [eax]
  41e005:	xor    eax,edi
  41e007:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e00e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e011:	xor    ecx,edi
  41e013:	movzx  eax,al
  41e016:	add    ecx,ebx
  41e018:	cmp    eax,ecx
  41e01a:	je     0x41e178
  41e020:	mov    eax,DWORD PTR [ebp+0xc]
  41e023:	mov    eax,DWORD PTR [eax]
  41e025:	xor    eax,edi
  41e027:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e02e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e031:	xor    ecx,edi
  41e033:	movzx  eax,al
  41e036:	add    ecx,ebx
  41e038:	cmp    eax,ecx
  41e03a:	je     0x41e178
  41e040:	mov    eax,DWORD PTR [ebp-0x14]
  41e043:	mov    eax,DWORD PTR [eax]
  41e045:	xor    eax,edi
  41e047:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e04e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e051:	xor    ecx,edi
  41e053:	movzx  eax,al
  41e056:	add    ecx,ebx
  41e058:	cmp    eax,ecx
  41e05a:	je     0x41e178
  41e060:	mov    eax,DWORD PTR [ebp-0x10]
  41e063:	mov    eax,DWORD PTR [eax]
  41e065:	xor    eax,edi
  41e067:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e06e:	mov    ecx,DWORD PTR [ebp-0xc]
  41e071:	mov    ecx,DWORD PTR [ecx]
  41e073:	xor    ecx,edi
  41e075:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e07c:	xor    al,cl
  41e07e:	mov    ecx,DWORD PTR [ebp+0xc]
  41e081:	mov    ecx,DWORD PTR [ecx]
  41e083:	xor    ecx,edi
  41e085:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e08c:	or     al,cl
  41e08e:	mov    ecx,DWORD PTR [ebp-0xc]
  41e091:	mov    ecx,DWORD PTR [ecx]
  41e093:	xor    ecx,edi
  41e095:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e09c:	cmp    cl,al
  41e09e:	jne    0x41e178
  41e0a4:	mov    eax,DWORD PTR [ebp+0xc]
  41e0a7:	mov    eax,DWORD PTR [eax]
  41e0a9:	xor    eax,edi
  41e0ab:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e0b2:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0b5:	mov    ecx,DWORD PTR [ecx]
  41e0b7:	xor    ecx,edi
  41e0b9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e0c0:	xor    al,cl
  41e0c2:	mov    ecx,DWORD PTR [ebp-0x14]
  41e0c5:	mov    ecx,DWORD PTR [ecx]
  41e0c7:	xor    ecx,edi
  41e0c9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e0d0:	or     al,cl
  41e0d2:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0d5:	mov    ecx,DWORD PTR [ecx]
  41e0d7:	xor    ecx,edi
  41e0d9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e0e0:	cmp    cl,al
  41e0e2:	jne    0x41e178
  41e0e8:	mov    eax,DWORD PTR [ebp-0x14]
  41e0eb:	mov    eax,DWORD PTR [eax]
  41e0ed:	xor    eax,edi
  41e0ef:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e0f6:	mov    ecx,DWORD PTR [ebp+0xc]
  41e0f9:	mov    ecx,DWORD PTR [ecx]
  41e0fb:	xor    ecx,edi
  41e0fd:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e104:	xor    al,cl
  41e106:	mov    ecx,DWORD PTR [ebp-0xc]
  41e109:	mov    ecx,DWORD PTR [ecx]
  41e10b:	xor    ecx,edi
  41e10d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e114:	or     al,cl
  41e116:	mov    ecx,DWORD PTR [ebp+0xc]
  41e119:	mov    ecx,DWORD PTR [ecx]
  41e11b:	xor    ecx,edi
  41e11d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e124:	cmp    cl,al
  41e126:	jne    0x41e178
  41e128:	mov    eax,DWORD PTR [ebp-0x14]
  41e12b:	mov    eax,DWORD PTR [eax]
  41e12d:	xor    eax,edi
  41e12f:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e136:	mov    ecx,DWORD PTR [ebp-0xc]
  41e139:	mov    ecx,DWORD PTR [ecx]
  41e13b:	xor    ecx,edi
  41e13d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e144:	xor    al,cl
  41e146:	mov    ecx,DWORD PTR [ebp-0x10]
  41e149:	mov    ecx,DWORD PTR [ecx]
  41e14b:	xor    ecx,edi
  41e14d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e154:	or     al,cl
  41e156:	mov    ecx,DWORD PTR [ebp-0x14]
  41e159:	mov    ecx,DWORD PTR [ecx]
  41e15b:	xor    ecx,edi
  41e15d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e164:	cmp    cl,al
  41e166:	jne    0x41e178
  41e168:	lea    eax,[ebp-0x4c]
  41e16b:	push   eax
  41e16c:	call   0x41dc33
  41e171:	mov    ecx,DWORD PTR [ebp-0x44]
  41e174:	cmp    eax,ecx
  41e176:	je     0x41e182
  41e178:	mov    eax,DWORD PTR [ebp+0x8]
  41e17b:	xor    eax,edi
  41e17d:	add    eax,ebx
  41e17f:	mov    DWORD PTR [ebp+0x18],eax
  41e182:	mov    eax,DWORD PTR [ebp-0x8]
  41e185:	xor    eax,edi
  41e187:	lea    eax,[eax+esi*1+0x3272e0]
  41e18e:	xor    eax,edi
  41e190:	mov    ecx,DWORD PTR [ebp+0x8]
  41e193:	mov    edx,DWORD PTR [ebp+0x18]
  41e196:	xor    ecx,edi
  41e198:	add    ecx,ebx
  41e19a:	cmp    edx,ecx
  41e19c:	je     0x41df99
  41e1a2:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a5:	mov    ecx,DWORD PTR [ebp+0x18]
  41e1a8:	xor    eax,edi
  41e1aa:	add    eax,ebx
  41e1ac:	cmp    ecx,eax
  41e1ae:	jne    0x41e1c1
  41e1b0:	mov    eax,DWORD PTR [ebp-0x8]
  41e1b3:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e1b6:	xor    eax,edi
  41e1b8:	lea    eax,[eax+ecx*1+0x3272e0]
  41e1bf:	jmp    0x41e238
  41e1c1:	push   0x18
  41e1c3:	push   DWORD PTR [ebp-0x4]
  41e1c6:	lea    eax,[ebp-0x64]
  41e1c9:	push   eax
  41e1ca:	call   0x41d455
  41e1cf:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d2:	mov    ecx,DWORD PTR [ebp-0x18]
  41e1d5:	xor    eax,edi
  41e1d7:	add    eax,ebx
  41e1d9:	cmp    eax,ecx
  41e1db:	je     0x41e1f0
  41e1dd:	mov    eax,DWORD PTR [ebp+0x8]
  41e1e0:	xor    eax,edi
  41e1e2:	add    eax,ebx
  41e1e4:	push   eax
  41e1e5:	push   0x18
  41e1e7:	lea    eax,[ebp-0x64]
  41e1ea:	push   eax
  41e1eb:	call   0x41d9e2
  41e1f0:	mov    eax,DWORD PTR [ebp-0x4]
  41e1f3:	add    eax,0x18
  41e1f6:	mov    DWORD PTR [ebp+0x18],eax
  41e1f9:	push   DWORD PTR [ebp-0x50]
  41e1fc:	push   DWORD PTR [ebp+0x18]
  41e1ff:	mov    eax,DWORD PTR [ebp-0x54]
  41e202:	add    eax,DWORD PTR [ebp-0x20]
  41e205:	push   eax
  41e206:	call   0x41d455
  41e20b:	mov    eax,DWORD PTR [ebp+0x8]
  41e20e:	mov    ecx,DWORD PTR [ebp-0x18]
  41e211:	xor    eax,edi
  41e213:	add    eax,ebx
  41e215:	cmp    eax,ecx
  41e217:	je     0x41e22a
  41e219:	push   0x0
  41e21b:	push   DWORD PTR [ebp-0x50]
  41e21e:	mov    eax,DWORD PTR [ebp-0x54]
  41e221:	add    eax,DWORD PTR [ebp-0x20]
  41e224:	push   eax
  41e225:	call   0x41d9e2
  41e22a:	mov    eax,DWORD PTR [ebp-0x24]
  41e22d:	mov    ecx,DWORD PTR [ebp-0x50]
  41e230:	add    DWORD PTR [eax],ecx
  41e232:	mov    eax,DWORD PTR [ebp-0x50]
  41e235:	add    eax,DWORD PTR [ebp+0x1c]
  41e238:	mov    DWORD PTR [ebp+0x1c],eax
  41e23b:	mov    eax,DWORD PTR [ebp-0x8]
  41e23e:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e241:	xor    eax,edi
  41e243:	add    eax,ebx
  41e245:	imul   eax,ecx
  41e248:	mov    ecx,DWORD PTR [ebp+0x8]
  41e24b:	mov    edx,DWORD PTR [ebp-0x28]
  41e24e:	xor    ecx,edi
  41e250:	lea    ecx,[ecx+edx*1+0x3272e0]
  41e257:	cmp    eax,ecx
  41e259:	jb     0x41deb7
  41e25f:	mov    esi,DWORD PTR [ebp+0x14]
  41e262:	mov    eax,DWORD PTR [ebp-0x20]
  41e265:	mov    DWORD PTR [esi],eax
  41e267:	jmp    0x41e2ae
  41e269:	mov    ecx,DWORD PTR [ebp+0x8]
  41e26c:	mov    edx,DWORD PTR [ebp+0xc]
  41e26f:	xor    ecx,edi
  41e271:	xor    edx,edi
  41e273:	add    ecx,ebx
  41e275:	add    edx,ebx
  41e277:	cmp    ecx,edx
  41e279:	jne    0x41e28d
  41e27b:	mov    eax,ds:0x7f642d1e
  41e280:	imul   eax,eax,0x9f15fcef
  41e286:	mov    ds:0x7f642d1e,eax
  41e28b:	jmp    0x41e2ae
  41e28d:	mov    ecx,DWORD PTR [ebp+0x8]
  41e290:	xor    ecx,edi
  41e292:	add    ecx,ebx
  41e294:	cmp    eax,ecx
  41e296:	je     0x41e2a4
  41e298:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  41e2a2:	jmp    0x41e2ae
  41e2a4:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  41e2ae:	pop    edi
  41e2af:	pop    esi
  41e2b0:	pop    ebx
  41e2b1:	leave  
  41e2b2:	ret    0x18
  41e2b5:	push   ebp
  41e2b6:	mov    ebp,esp
  41e2b8:	and    esp,0xfffffff8
  41e2bb:	mov    eax,DWORD PTR [ebp+0x20]
  41e2be:	sub    esp,0x14
  41e2c1:	push   ebx
  41e2c2:	mov    ebx,DWORD PTR [ebp+0x14]
  41e2c5:	push   esi
  41e2c6:	push   edi
  41e2c7:	cmp    eax,0xf89c85b9
  41e2cc:	jne    0x41e2d8
  41e2ce:	push   0xf89c85b8
  41e2d3:	jmp    0x41e40a
  41e2d8:	mov    eax,DWORD PTR [ebp+0x20]
  41e2db:	cmp    eax,0xf89c85b8
  41e2e0:	jne    0x41e2ec
  41e2e2:	push   0xf89c85bb
  41e2e7:	jmp    0x41e40a
  41e2ec:	mov    eax,DWORD PTR [ebp+0x20]
  41e2ef:	cmp    eax,0xf89c85bb
  41e2f4:	jne    0x41e300
  41e2f6:	push   0xf89c85ba
  41e2fb:	jmp    0x41e40a
  41e300:	mov    eax,DWORD PTR [ebp+0x20]
  41e303:	cmp    eax,0xf89c85ba
  41e308:	jne    0x41e314
  41e30a:	push   0xf89c85bd
  41e30f:	jmp    0x41e40a
  41e314:	mov    ecx,DWORD PTR [ebp+0x20]
  41e317:	mov    eax,0xf89c85be
  41e31c:	cmp    ecx,eax
  41e31e:	jne    0x41e3da
  41e324:	mov    eax,DWORD PTR [ebp+0x10]
  41e327:	mov    DWORD PTR [esp+0xc],eax
  41e32b:	mov    eax,DWORD PTR [ebp+0x18]
  41e32e:	mov    DWORD PTR [esp+0x14],eax
  41e332:	mov    eax,DWORD PTR [ebp+0xc]
  41e335:	mov    DWORD PTR [esp+0x18],eax
  41e339:	mov    eax,DWORD PTR [ebp+0x8]
  41e33c:	mov    DWORD PTR [esp+0x10],eax
  41e340:	mov    eax,DWORD PTR [esp+0x10]
  41e344:	mov    ecx,DWORD PTR [esp+0x14]
  41e348:	mov    edi,0x7510899
  41e34d:	xor    eax,edi
  41e34f:	mov    esi,0x3272e0
  41e354:	add    eax,esi
  41e356:	mov    DWORD PTR [ecx],eax
  41e358:	mov    eax,DWORD PTR [esp+0xc]
  41e35c:	mov    eax,DWORD PTR [eax+0x194]
  41e362:	mov    ecx,DWORD PTR [eax]
  41e364:	mov    eax,DWORD PTR [esp+0xc]
  41e368:	mov    eax,DWORD PTR [eax+0x194]
  41e36e:	mov    eax,DWORD PTR [eax]
  41e370:	add    eax,DWORD PTR [ecx+0x3c]
  41e373:	mov    ecx,DWORD PTR [esp+0xc]
  41e377:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41e37d:	mov    ecx,DWORD PTR [ecx+0x14]
  41e380:	push   0x4
  41e382:	push   0x3000
  41e387:	push   DWORD PTR [eax+0x50]
  41e38a:	push   0x0
  41e38c:	call   ecx
  41e38e:	mov    DWORD PTR [ebx],eax
  41e390:	mov    eax,DWORD PTR [esp+0x10]
  41e394:	push   DWORD PTR [esp+0xc]
  41e398:	xor    eax,edi
  41e39a:	add    eax,esi
  41e39c:	mov    DWORD PTR [esp+0x20],eax
  41e3a0:	lea    eax,[esp+0x20]
  41e3a4:	push   eax
  41e3a5:	push   ebx
  41e3a6:	push   DWORD PTR [esp+0x20]
  41e3aa:	push   DWORD PTR [esp+0x28]
  41e3ae:	push   DWORD PTR [esp+0x24]
  41e3b2:	call   0x41dd77
  41e3b7:	mov    eax,DWORD PTR [esp+0x10]
  41e3bb:	mov    ecx,DWORD PTR [ebx]
  41e3bd:	xor    eax,edi
  41e3bf:	add    eax,esi
  41e3c1:	cmp    ecx,eax
  41e3c3:	je     0x41e421
  41e3c5:	mov    eax,DWORD PTR [esp+0x18]
  41e3c9:	mov    ecx,DWORD PTR [esp+0x14]
  41e3cd:	xor    eax,edi
  41e3cf:	add    eax,esi
  41e3d1:	imul   eax,DWORD PTR [esp+0x1c]
  41e3d6:	mov    DWORD PTR [ecx],eax
  41e3d8:	jmp    0x41e421
  41e3da:	mov    ecx,DWORD PTR [ebp+0x20]
  41e3dd:	cmp    ecx,0xf89c85bd
  41e3e3:	jne    0x41e3ec
  41e3e5:	push   0xf89c85bc
  41e3ea:	jmp    0x41e40a
  41e3ec:	mov    ecx,DWORD PTR [ebp+0x20]
  41e3ef:	cmp    ecx,0xf89c85bc
  41e3f5:	jne    0x41e3fe
  41e3f7:	push   0xf89c85bf
  41e3fc:	jmp    0x41e40a
  41e3fe:	mov    ecx,DWORD PTR [ebp+0x20]
  41e401:	cmp    ecx,0xf89c85bf
  41e407:	jne    0x41e421
  41e409:	push   eax
  41e40a:	push   DWORD PTR [ebp+0x1c]
  41e40d:	push   DWORD PTR [ebp+0x18]
  41e410:	push   ebx
  41e411:	push   DWORD PTR [ebp+0x10]
  41e414:	push   DWORD PTR [ebp+0xc]
  41e417:	push   DWORD PTR [ebp+0x8]
  41e41a:	call   0x41e2b5
  41e41f:	mov    DWORD PTR [ebx],eax
  41e421:	mov    eax,DWORD PTR [ebx]
  41e423:	pop    edi
  41e424:	pop    esi
  41e425:	pop    ebx
  41e426:	mov    esp,ebp
  41e428:	pop    ebp
  41e429:	ret    0x1c
  41e42c:	push   ebp
  41e42d:	mov    ebp,esp
  41e42f:	sub    esp,0xc
  41e432:	mov    eax,0xf89c85b9
  41e437:	mov    DWORD PTR [ebp-0x8],eax
  41e43a:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41e441:	mov    ecx,DWORD PTR [ebp-0x8]
  41e444:	xor    ecx,0x7510899
  41e44a:	add    ecx,0x3272e0
  41e450:	mov    DWORD PTR [ebp-0x4],ecx
  41e453:	mov    ecx,DWORD PTR [ebp+0xc]
  41e456:	push   eax
  41e457:	mov    DWORD PTR [ebp+0xc],ecx
  41e45a:	push   DWORD PTR [ebp+0xc]
  41e45d:	lea    eax,[ebp-0x4]
  41e460:	push   DWORD PTR [ebp+0x8]
  41e463:	push   eax
  41e464:	push   DWORD PTR [ebp+0xc]
  41e467:	push   DWORD PTR [ebp-0xc]
  41e46a:	push   DWORD PTR [ebp-0x8]
  41e46d:	call   0x41e2b5
  41e472:	mov    DWORD PTR [ebp-0x4],eax
  41e475:	mov    eax,DWORD PTR [ebp-0x4]
  41e478:	leave  
  41e479:	ret    0x8
  41e47c:	jg     0x41e432
  41e47e:	jge    0xf741a453
  41e484:	xor    BYTE PTR [ebp-0x5ae76e92],0xdd
  41e48b:	idiv   al
  41e48d:	popa   
  41e48e:	add    DWORD PTR [eax],eax
  41e490:	xchg   BYTE PTR [edx],al
  41e492:	add    BYTE PTR [eax],al
  41e494:	xlat   BYTE PTR ds:[ebx]
  41e495:	rol    DWORD PTR [edx],1
  41e497:	outs   dx,BYTE PTR ds:[esi]
  41e498:	mov    ds:0xa012fa4e,eax
  41e49d:	and    dh,al
  41e49f:	pop    ss
  41e4a0:	add    al,0x48
  41e4a2:	sub    BYTE PTR ds:0x8a96c972,bl
  41e4a8:	sbb    cl,ah
  41e4aa:	push   0xc18a803
  41e4af:	fdiv   st,st(6)
  41e4b1:	sbb    al,0x9
  41e4b3:	repz xchg ecx,eax
  41e4b5:	jne    0x41e4e2
  41e4b7:	xchg   edi,eax
  41e4b8:	pop    es
  41e4b9:	or     DWORD PTR [ebx+0x6b4cbf49],0x894b6c6f
  41e4c3:	adc    BYTE PTR [ebx-0x4f],al
  41e4c6:	push   edx
  41e4c7:	adc    al,bh
  41e4c9:	jnp    0x41e4ca
  41e4cb:	icebp  
  41e4cc:	loope  0x41e4f4
  41e4ce:	cmp    eax,0x621002de
  41e4d3:	jge    0x41e4eb
  41e4d5:	and    al,0x6
  41e4d7:	fbstp  TBYTE PTR [ecx-0x4fc5028e]
  41e4dd:	mov    bh,0xfd
  41e4df:	mov    ch,0x1f
  41e4e1:	and    ah,BYTE PTR [eax+0x4f]
  41e4e4:	mov    ds:0x31c39ace,eax
  41e4e9:	aaa    
  41e4ea:	pop    ebp
  41e4eb:	jmp    DWORD PTR [eax+0x606301df]
  41e4f1:	out    dx,eax
  41e4f2:	jp     0x41e572
  41e4f4:	ins    DWORD PTR es:[edi],dx
  41e4f5:	test   eax,0x33f3e14d
  41e4fa:	lds    edi,FWORD PTR [esi-0x67f03d38]
  41e500:	dec    esp
  41e501:	rcl    BYTE PTR [edx+edx*2+0x68a100ed],cl
  41e508:	mov    edx,0xaedd21c8
  41e50d:	out    dx,al
  41e50e:	add    ebx,DWORD PTR [ebp-0x69]
  41e511:	repz fsubr st(6),st
  41e514:	scas   eax,DWORD PTR es:[edi]
  41e515:	mov    dh,BYTE PTR [edi]
  41e517:	dec    ebp
  41e518:	push   0xffffff9d
  41e51a:	(bad)  
  41e51b:	mov    DWORD PTR [ebp-0x9],ebx
  41e51e:	rcl    BYTE PTR [ebp-0x58f79968],1
  41e524:	out    0x68,eax
  41e526:	test   DWORD PTR [esp+ebp*1+0x33c507cb],0x6a50baa5
  41e531:	repnz cmc 
  41e533:	add    cl,BYTE PTR [esi+0x52d94029]
  41e539:	sbb    al,0x5b
  41e53b:	mov    edx,?
  41e53d:	daa    
  41e53e:	test   eax,0x371cffd7
  41e543:	fidivr WORD PTR [ecx]
  41e545:	xchg   ebx,eax
  41e546:	pop    es
  41e547:	ja     0x41e504
  41e549:	cli    
  41e54a:	aad    0x4a
  41e54c:	lahf   
  41e54d:	xor    BYTE PTR ds:0xa6766cba,ch
  41e553:	mov    edi,0x45f67244
  41e558:	cmp    bl,BYTE PTR [edx+0x2e]
  41e55b:	dec    ecx
  41e55c:	hlt    
  41e55d:	add    eax,0x4512f30d
  41e562:	test   al,0x52
  41e564:	mov    edi,0x3857c2e0
  41e569:	stos   DWORD PTR es:[edi],eax
  41e56a:	cmp    ecx,ebx
  41e56c:	mov    ebp,0xa37074a7
  41e571:	xlat   BYTE PTR ds:[ebx]
  41e572:	push   esi
  41e573:	scas   eax,DWORD PTR es:[edi]
  41e574:	mov    ds,WORD PTR ds:0x2680812c
  41e57a:	sar    DWORD PTR [esi],0x10
  41e57d:	leave  
  41e57e:	scas   al,BYTE PTR es:[edi]
  41e57f:	jmp    0xaaf33bf5
  41e584:	mov    ebx,0xa185948b
  41e589:	in     eax,dx
  41e58a:	mov    WORD PTR [edi],fs
  41e58c:	out    dx,eax
  41e58d:	xchg   esi,eax
  41e58e:	xchg   ecx,eax
  41e58f:	add    al,0xa6
  41e591:	jecxz  0x41e578
  41e593:	add    esi,DWORD PTR [ebp-0x5e10cd71]
  41e599:	out    0x33,al
  41e59b:	imul   eax,ebx,0xd987ae5a
  41e5a1:	in     eax,0x5b
  41e5a3:	jae    0x41e5c1
  41e5a5:	push   ebx
  41e5a6:	arpl   WORD PTR [esi],bx
  41e5a8:	dec    ebp
  41e5a9:	(bad)
  41e5ac:	mov    eax,DWORD PTR [ecx]
  41e5ae:	jnp    0x41e55c
  41e5b0:	jmp    0x1779be69
  41e5b5:	ds loopne 0x41e564
  41e5b8:	loopne 0x41e62b
  41e5ba:	mov    bh,0xa0
  41e5bc:	jb     0x41e61e
  41e5be:	jnp    0x41e54d
  41e5c0:	pushf  
  41e5c1:	push   0x61cacee2
  41e5c6:	bound  edx,QWORD PTR [edx]
  41e5c8:	adc    al,BYTE PTR [ecx-0x36]
  41e5cb:	sub    al,0xa6
  41e5cd:	sbb    DWORD PTR [ebx+0x7d7f84c0],ebp
  41e5d3:	stos   DWORD PTR es:[edi],eax
  41e5d4:	sbb    eax,0x7f881f01
  41e5d9:	lods   al,BYTE PTR ds:[esi]
  41e5da:	pop    edi
  41e5db:	mov    dh,0xc7
  41e5dd:	ret    0x9c3f
  41e5e0:	pop    ss
  41e5e1:	and    ecx,DWORD PTR [ebp+0x68]
  41e5e4:	mov    ch,BYTE PTR [ebx+0x6adbb62e]
  41e5ea:	ret    
  41e5eb:	dec    esi
  41e5ec:	push   0xfffffffc
  41e5ee:	pop    edx
  41e5ef:	jp     0x41e65c
  41e5f1:	jmp    0xdbe22a18
  41e5f6:	mov    cl,BYTE PTR [eax]
  41e5f8:	sub    eax,0x9e15a54c
  41e5fd:	(bad)  
  41e5fe:	je     0x41e58b
  41e600:	rcl    DWORD PTR [edx+0x7e4be20c],cl
  41e606:	xchg   edi,eax
  41e607:	xor    esi,0xffffffb5
  41e60a:	push   cs
  41e60b:	push   es
  41e60c:	push   0x2dd4b748
  41e611:	or     dh,BYTE PTR [edx]
  41e613:	mov    esi,0x66c0882
  41e618:	xor    BYTE PTR [ebp-0x49],0x2d
  41e61c:	(bad)  
  41e61d:	dec    esp
  41e61e:	jne    0x41e65b
  41e620:	xlat   BYTE PTR ds:[ebx]
  41e621:	lea    eax,[eax]
  41e623:	dec    eax
  41e624:	jns    0x41e5f2
  41e626:	push   cs
  41e627:	fwait
  41e628:	cmp    esi,DWORD PTR [ebp+0x37eae877]
  41e62e:	inc    eax
  41e62f:	mov    ebx,0x2234678
  41e634:	inc    ebp
  41e635:	stos   DWORD PTR es:[edi],eax
  41e636:	lds    edx,FWORD PTR [esi]
  41e638:	push   cs
  41e639:	cmc    
  41e63a:	cli    
  41e63b:	mov    ebp,0x56c7168a
  41e640:	repz adc BYTE PTR [ecx],cl
  41e643:	cdq    
  41e644:	xchg   BYTE PTR [ebx],dh
  41e646:	fimul  DWORD PTR ds:0x953d3aee
  41e64c:	adc    dl,BYTE PTR [ecx]
  41e64e:	inc    eax
  41e64f:	sahf   
  41e650:	add    al,0xef
  41e652:	lods   eax,DWORD PTR ds:[esi]
  41e653:	xor    al,BYTE PTR [esp+ecx*2]
  41e656:	in     eax,dx
  41e657:	imul   esi,ebx,0x96a26351
  41e65d:	xor    bl,ch
  41e65f:	dec    esp
  41e660:	sbb    edi,DWORD PTR [ebp-0x8bfe2a5]
  41e666:	repz xchg esi,eax
  41e668:	cmp    al,0xce
  41e66a:	jae    0x41e5f5
  41e66c:	scas   al,BYTE PTR es:[edi]
  41e66d:	call   0x8cac13ed
  41e672:	jecxz  0x41e658
  41e674:	jmp    0x41e635
  41e676:	lock popa 
  41e678:	mov    ebp,DWORD PTR [edx-0xe2fcbd4]
  41e67e:	loope  0x41e631
  41e680:	pushf  
  41e681:	mov    al,ds:0x162c5f8e
  41e686:	rcr    edi,cl
  41e688:	xor    DWORD PTR [eax],0x6b
  41e68b:	or     dh,ah
  41e68d:	mov    ch,0x42
  41e68f:	mov    ebx,0x680cda04
  41e694:	mov    dl,0x67
  41e696:	mov    edi,eax
  41e698:	sub    DWORD PTR ss:[eax-0x1b],edi
  41e69c:	mov    eax,ds:0xd1a078c5
  41e6a1:	sbb    BYTE PTR [esi],ah
  41e6a3:	repz or esp,DWORD PTR [esi+0x378bc16f]
  41e6aa:	jae    0x41e633
  41e6ac:	rcl    bl,1
  41e6ae:	rcl    DWORD PTR ds:0x79872597,cl
  41e6b4:	mov    DWORD PTR [edx-0x4f],0xa9c96039
  41e6bb:	xchg   ebp,eax
  41e6bc:	icebp  
  41e6bd:	cwde   
  41e6be:	dec    edx
  41e6bf:	aaa    
  41e6c0:	inc    ecx
  41e6c1:	xor    eax,0xf7678688
  41e6c6:	retf   
  41e6c7:	daa    
  41e6c8:	(bad)  
  41e6c9:	fdiv   QWORD PTR [edx-0x2f]
  41e6cc:	mov    dh,0x12
  41e6ce:	lds    edx,FWORD PTR [ecx-0x2546ecfc]
  41e6d4:	loope  0x41e65a
  41e6d6:	pop    esp
  41e6d7:	add    BYTE PTR [esi+0x21966e4f],al
  41e6dd:	in     eax,0x7e
  41e6df:	sub    BYTE PTR [esi+0x677e964f],ch
  41e6e5:	cmp    dl,bh
  41e6e7:	cmp    dh,dh
  41e6e9:	aaa    
  41e6ea:	arpl   WORD PTR [eax-0x24],sp
  41e6ed:	push   esi
  41e6ee:	sbb    BYTE PTR [edi+edi*1-0x28],ah
  41e6f2:	cwde   
  41e6f3:	mov    ecx,0xc9579e3e
  41e6f8:	mov    ebp,0xa0ac262d
  41e6fd:	inc    eax
  41e6fe:	retf   
  41e6ff:	xor    al,0xc9
  41e701:	push   esi
  41e702:	xor    al,0xa2
  41e704:	sbb    al,0x81
  41e706:	popa   
  41e707:	fcmovnu st,st(7)
  41e709:	pushf  
  41e70a:	bound  ebp,QWORD PTR [edi+0x3c]
  41e70d:	adc    DWORD PTR [ecx+ebp*2+0xb],ebx
  41e711:	sbb    al,0xcf
  41e713:	fst    DWORD PTR [edi]
  41e715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e716:	cmp    BYTE PTR [edi+0xd090],bh
  41e71c:	ja     0x41e76a
  41e71e:	idiv   dh
  41e720:	(bad)  
  41e721:	(bad)  
  41e722:	jg     0x41e6f1
  41e724:	mov    ah,0x6b
  41e726:	mov    dh,0x14
  41e728:	jb     0x41e6e8
  41e72a:	push   edx
  41e72b:	data16 jle 0x41e792
  41e72e:	add    DWORD PTR [eax],eax
  41e730:	xchg   BYTE PTR [edx],al
  41e732:	add    BYTE PTR [eax],al
  41e734:	inc    ebp
  41e735:	adc    ebx,DWORD PTR [ebp+0xc]
  41e738:	fdiv   QWORD PTR [esi]
  41e73a:	gs pop eax
  41e73c:	jmp    0x41e78e
  41e73e:	mov    ebx,0x174ce17c
  41e743:	imul   BYTE PTR [edx]
  41e745:	mov    WORD PTR [edx+0x9],gs
  41e748:	xchg   ecx,eax
  41e749:	cmp    ebp,edi
  41e74b:	mov    esp,0xde0f4167
  41e750:	push   ecx
  41e751:	cmp    eax,0x8f9a9b57
  41e756:	push   ecx
  41e757:	scas   eax,DWORD PTR es:[edi]
  41e758:	mov    dl,BYTE PTR [edx+ebp*8]
  41e75b:	outs   dx,DWORD PTR ds:[esi]
  41e75c:	xchg   esi,eax
  41e75d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e75e:	and    edi,DWORD PTR [bp+di+0x78d5]
  41e763:	std    
  41e764:	nop
  41e765:	push   edi
  41e766:	inc    esp
  41e767:	je     0x41e7cb
  41e769:	mov    bh,0xe
  41e76b:	jo     0x41e73c
  41e76d:	js     0x41e732
  41e76f:	sub    al,0x85
  41e771:	push   ebp
  41e772:	jne    0x41e7eb
  41e774:	repz mov al,0xbe
  41e777:	jbe    0x41e747
  41e779:	jle    0x41e702
  41e77b:	add    bh,bh
  41e77d:	fisub  DWORD PTR [esi]
  41e77f:	cmp    al,0x8
  41e781:	dec    edi
  41e782:	mov    ds:0x5ca24eb7,eax
  41e787:	lock outs dx,DWORD PTR ds:[esi]
  41e789:	xchg   ebx,eax
  41e78a:	idiv   BYTE PTR [edi+0x1b]
  41e78d:	rol    cl,cl
  41e78f:	cmp    edi,DWORD PTR [ecx+0x1b]
  41e792:	inc    ecx
  41e793:	imul   ecx,DWORD PTR [edi-0x4e906491],0xffffffeb
  41e79a:	push   0x88438bc1
  41e79f:	mov    dl,0x16
  41e7a1:	xor    al,0x23
  41e7a3:	mov    esp,gs
  41e7a5:	mov    ebp,0x1e80aa01
  41e7aa:	repnz lds eax,FWORD PTR [ebp-0x11f62169]
  41e7b1:	mov    dh,0x73
  41e7b3:	push   ds
  41e7b4:	imul   ebp,DWORD PTR [eax],0x5d87b883
  41e7ba:	adc    BYTE PTR [ebp-0x20],0xfa
  41e7be:	push   cs
  41e7bf:	cdq    
  41e7c0:	and    ebp,eax
  41e7c2:	fucomi st,st(7)
  41e7c4:	sbb    ebx,esi
  41e7c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7c7:	jmp    0x7488:0xa8ae7a1e
  41e7ce:	fmul   DWORD PTR [ecx]
  41e7d0:	sub    ebp,esp
  41e7d2:	ja     0x41e757
  41e7d4:	pop    edx
  41e7d5:	or     eax,esp
  41e7d7:	sub    al,0xd1
  41e7d9:	cs sbb eax,0x96246077
  41e7df:	push   0x891a2184
  41e7e4:	ja     0x41e784
  41e7e6:	and    DWORD PTR [eax],ebp
  41e7e8:	pop    edi
  41e7e9:	cmp    BYTE PTR [ecx+0x4b35abfa],0xe6
  41e7f0:	xchg   edi,eax
  41e7f1:	cmc    
  41e7f2:	mov    edx,0xe7b10402
  41e7f7:	inc    ecx
  41e7f8:	jb     0x41e856
  41e7fa:	fisubr WORD PTR [ecx-0x1e]
  41e7fd:	mov    BYTE PTR [ebx-0x62],al
  41e800:	mov    eax,ds:0x58ba16e4
  41e805:	jmp    0xb7b002fc
  41e80a:	and    eax,0xac534223
  41e80f:	jno    0x41e84b
  41e811:	outs   dx,DWORD PTR ds:[esi]
  41e812:	jge    0x41e7f0
  41e814:	sbb    BYTE PTR [esi-0x1bf6ee00],ah
  41e81a:	(bad)  
  41e81c:	outs   dx,DWORD PTR ds:[esi]
  41e81d:	xor    BYTE PTR [edx+0x17],dl
  41e820:	lock stc 
  41e822:	mov    esi,0x34990b63
  41e827:	int3   
  41e828:	mov    cl,0x1d
  41e82a:	jle    0x41e80e
  41e82c:	aas    
  41e82d:	fs xchg esp,eax
  41e82f:	lea    ebx,[edi-0x15]
  41e832:	push   ds
  41e833:	out    0x9c,al
  41e835:	mov    bl,0xbd
  41e837:	add    ah,ah
  41e839:	add    al,0xaf
  41e83b:	jmp    0x41e871
  41e83d:	aaa    
  41e83e:	(bad)  
  41e83f:	xchg   edi,eax
  41e840:	outs   dx,BYTE PTR ds:[esi]
  41e841:	dec    esi
  41e842:	lea    edi,[edi+0x782720f6]
  41e848:	mov    al,ds:0xc150cffb
  41e84d:	sbb    BYTE PTR [ebp+edx*1-0x36c31e35],bl
  41e854:	mov    esp,0x38fa612
  41e859:	(bad)  
  41e85b:	jbe    0x41e80f
  41e85d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e85e:	mov    ah,0xd3
  41e860:	stos   DWORD PTR es:[edi],eax
  41e861:	push   edx
  41e862:	call   0x1583:0x749bac70
  41e869:	cli    
  41e86a:	test   bh,0xa2
  41e86d:	inc    esp
  41e86e:	std    
  41e86f:	dec    ebx
  41e870:	sahf   
  41e871:	or     ch,BYTE PTR [ebx-0x44cb4015]
  41e877:	call   0xecd3:0xaad1fd3f
  41e87e:	mov    ecx,0x337beaf9
  41e883:	and    DWORD PTR [ecx-0x1c14c943],0x14
  41e88a:	rol    dl,cl
  41e88c:	cmp    dh,BYTE PTR [ebp-0x3ae485b0]
  41e892:	iret   
  41e893:	push   es
  41e894:	push   cs
  41e895:	es mov al,0x87
  41e898:	out    dx,eax
  41e899:	lds    eax,FWORD PTR [ecx-0x4c12c95e]
  41e89f:	fisttp QWORD PTR [edx-0x51]
  41e8a2:	or     eax,0xcd6c5550
  41e8a7:	cli    
  41e8a8:	mov    es,WORD PTR [esi-0x29]
  41e8ab:	or     al,0x9e
  41e8ad:	mov    ebp,0x55b560d8
  41e8b2:	jb     0x41e924
  41e8b4:	inc    esp
  41e8b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8b6:	loopne 0x41e870
  41e8b8:	inc    edx
  41e8b9:	and    al,0xb
  41e8bb:	cmp    al,0xb2
  41e8bd:	add    al,0xba
  41e8bf:	cmp    esi,ebp
  41e8c1:	shr    DWORD PTR [esi-0x3a],0x73
  41e8c5:	mov    eax,0x8e36b8e6
  41e8ca:	cmp    ecx,0x14
  41e8cd:	sub    BYTE PTR [ebx+0x2b714bd7],ch
  41e8d3:	xchg   BYTE PTR [edi+0x39e7ecfa],ch
  41e8d9:	mov    esp,0x68190e1a
  41e8de:	inc    esi
  41e8df:	sbb    eax,0x21165ebe
  41e8e4:	ins    BYTE PTR es:[edi],dx
  41e8e5:	adc    al,0x4a
  41e8e7:	dec    DWORD PTR [ebp+0x63]
  41e8ea:	xor    DWORD PTR [ebx-0x60],ecx
  41e8ed:	or     cl,bl
  41e8ef:	pop    ebp
  41e8f0:	outs   dx,DWORD PTR ds:[esi]
  41e8f1:	sbb    DWORD PTR ds:0x5364eda0,0x9facb14d
  41e8fb:	(bad)  
  41e8fc:	test   ax,dx
  41e8ff:	inc    ebx
  41e900:	(bad)
  41e903:	cmp    bl,BYTE PTR [ecx+0x594ca524]
  41e909:	cli    
  41e90a:	mov    eax,ds:0x7fa7eb6b
  41e90f:	ret    
  41e910:	outs   dx,DWORD PTR ds:[esi]
  41e911:	mov    esp,0x37a7cd86
  41e916:	xlat   BYTE PTR ds:[ebx]
  41e917:	sar    BYTE PTR [eax+0xb],1
  41e91a:	push   esi
  41e91b:	cmp    eax,esp
  41e91d:	pop    edi
  41e91e:	enter  0xab31,0xb6
  41e922:	sub    DWORD PTR [ebx-0x2d],eax
  41e925:	mov    bh,0x1e
  41e927:	sbb    al,0xe1
  41e929:	idiv   bh
  41e92b:	sbb    dl,BYTE PTR [ebx-0x4b]
  41e92e:	push   ecx
  41e92f:	fst    QWORD PTR [esi+0x2632c3f]
  41e935:	sahf   
  41e936:	neg    BYTE PTR [edx-0x536b6e17]
  41e93c:	mov    edi,?
  41e93e:	jno    0x41e993
  41e940:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e941:	or     ecx,DWORD PTR [esi-0x33b9d07b]
  41e947:	call   0xdffb9385
  41e94c:	sar    eax,cl
  41e94e:	cmp    BYTE PTR [edx],bh
  41e950:	jb     0x41e980
  41e952:	popa   
  41e953:	mov    edx,0x252ebec9
  41e958:	inc    edx
  41e959:	xchg   BYTE PTR [ebx],cl
  41e95b:	mov    WORD PTR cs:[edx-0x3c],cs
  41e95f:	sbb    al,0xc8
  41e961:	cmp    BYTE PTR [edx+0x2e],dh
  41e964:	ja     0x41e921
  41e966:	jl     0x41e94d
  41e968:	inc    ebx
  41e969:	push   es
  41e96a:	cld    
  41e96b:	in     al,dx
  41e96c:	pop    ecx
  41e96d:	jecxz  0x41e9cd
  41e96f:	(bad)  
  41e970:	mov    ebp,0xaf197505
  41e975:	jge    0x41e9a1
  41e977:	jge    0x41e943
  41e979:	push   ecx
  41e97a:	pop    ecx
  41e97b:	dec    esp
  41e97c:	inc    edi
  41e97d:	(bad)  
  41e97e:	mov    WORD PTR [edi+ecx*4-0x3b6ae057],gs
  41e985:	outs   dx,DWORD PTR ds:[esi]
  41e986:	push   ebp
  41e987:	jg     0x41e9b9
  41e989:	sbb    bl,BYTE PTR [edx+0x3e895222]
  41e98f:	es jno 0x41e961
  41e992:	pop    esp
  41e993:	in     al,dx
  41e994:	test   al,0x48
  41e996:	rcr    DWORD PTR [ebx+0x3fb70071],1
  41e99c:	mov    edi,0x5dbdc024
  41e9a1:	pop    es
  41e9a2:	and    ebx,0xc
  41e9a5:	mov    ebp,0xb6ed3baa
  41e9aa:	(bad)  
  41e9ab:	mov    eax,ds:0x8e1f0fc3
  41e9b0:	cmp    al,0xe3
  41e9b2:	xlat   BYTE PTR ds:[ebx]
  41e9b3:	leave  
  41e9b4:	xchg   ecx,eax
  41e9b5:	cmp    eax,0x6dd40678
  41e9ba:	add    BYTE PTR [eax],al
  41e9bc:	pop    es
  41e9bd:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  41e9c3:	pop    ds
  41e9c4:	xchg   BYTE PTR [ebx],bl
  41e9c6:	mov    edx,0x1b772ad0
  41e9cb:	inc    edx
  41e9cc:	add    al,0x67
  41e9ce:	add    DWORD PTR [eax],eax
  41e9d0:	xchg   BYTE PTR [edx],al
  41e9d2:	add    BYTE PTR [eax],al
  41e9d4:	icebp  
  41e9d5:	test   BYTE PTR [edi-0x76ee19f2],dh
  41e9db:	inc    esp
  41e9dc:	popa   
  41e9dd:	jp     0x41ea48
  41e9df:	push   edx
  41e9e0:	cmp    al,0xa5
  41e9e2:	push   cs
  41e9e3:	pop    esi
  41e9e4:	jle    0x41e9c4
  41e9e6:	aas    
  41e9e7:	js     0x41ea0d
  41e9e9:	ficomp DWORD PTR [ebx]
  41e9eb:	sbb    esp,0x63
  41e9ee:	stos   BYTE PTR es:[edi],al
  41e9ef:	mov    esi,0xcdda5114
  41e9f4:	repnz imul eax,DWORD PTR [ecx-0x2a],0xa80d95e2
  41e9fc:	push   ecx
  41e9fd:	mov    dl,0x0
  41e9ff:	test   esi,edx
  41ea01:	neg    ch
  41ea03:	scas   al,BYTE PTR es:[edi]
  41ea04:	xchg   ebp,eax
  41ea05:	cmp    ebx,DWORD PTR [eax+0x61]
  41ea08:	mov    ss,WORD PTR [ecx+0x73]
  41ea0b:	lds    esi,FWORD PTR [esp+ebp*2]
  41ea0e:	pop    esp
  41ea0f:	fwait
  41ea10:	mov    ds:0x26449799,al
  41ea15:	shl    dl,0x61
  41ea18:	sub    edi,DWORD PTR [ebp+0x14]
  41ea1b:	test   eax,0x9185a62d
  41ea20:	cmp    ch,BYTE PTR [ecx+edi*1]
  41ea23:	mov    DWORD PTR [esi-0x1951072],eax
  41ea29:	je     0x41e9ac
  41ea2b:	pushf  
  41ea2c:	xchg   si,ax
  41ea2e:	out    dx,eax
  41ea2f:	xchg   edx,eax
  41ea30:	outs   dx,BYTE PTR ds:[esi]
  41ea31:	scas   al,BYTE PTR es:[edi]
  41ea32:	xchg   ebp,eax
  41ea33:	adc    eax,0xa0574874
  41ea38:	shr    BYTE PTR [edi-0x7a],cl
  41ea3b:	(bad)  
  41ea3d:	jo     0x41e9fa
  41ea3f:	push   edi
  41ea40:	mov    edi,0xf0147fa8
  41ea45:	ret    0x937a
  41ea48:	inc    ebx
  41ea49:	xchg   ebx,eax
  41ea4a:	test   al,0x17
  41ea4c:	ret    0x8aaa
  41ea4f:	mov    esi,0x15469c31
  41ea54:	ret    0x2877
  41ea57:	int    0x27
  41ea59:	adc    ah,BYTE PTR [edi+0x2e1900a]
  41ea5f:	sub    DWORD PTR [ebx],edx
  41ea61:	sbb    al,0x6a
  41ea63:	shl    DWORD PTR ds:[edx],cl
  41ea66:	sub    esp,eax
  41ea68:	sar    DWORD PTR [ebx],cl
  41ea6a:	mov    dh,0x3b
  41ea6c:	mov    bl,0xa4
  41ea6e:	jge    0x41eacf
  41ea70:	pop    eax
  41ea71:	int    0x9f
  41ea73:	icebp  
  41ea74:	int3   
  41ea75:	sub    ch,BYTE PTR [ebx]
  41ea77:	retf   0xf17a
  41ea7a:	mov    edi,DWORD PTR [esi+0x6]
  41ea7d:	add    eax,0xd9f265f7
  41ea82:	xchg   edi,eax
  41ea83:	sbb    ecx,ebx
  41ea85:	fst    DWORD PTR [ebx+0x5201bc57]
  41ea8b:	xor    al,0xb2
  41ea8d:	pusha  
  41ea8e:	les    ebx,FWORD PTR [edx-0x16]
  41ea91:	jne    0x41eacc
  41ea93:	pop    ss
  41ea94:	adc    ecx,DWORD PTR [bp-0x4d37]
  41ea99:	ror    BYTE PTR [esi+0x6620f5d],0x3e
  41eaa0:	dec    esi
  41eaa1:	sub    BYTE PTR [ecx],bl
  41eaa3:	add    esi,DWORD PTR [esi-0x5c11f9b2]
  41eaa9:	jg     0x41ea79
  41eaab:	mov    ds:0x47a66e8,eax
  41eab0:	enter  0x4c24,0x2f
  41eab4:	pop    ebx
  41eab5:	xchg   esi,eax
  41eab6:	cwde   
  41eab7:	aaa    
  41eab8:	shl    DWORD PTR [edi],cl
  41eaba:	mov    edi,0xb2a2354
  41eabf:	mov    ah,0xf5
  41eac1:	retf   
  41eac2:	xlat   BYTE PTR ds:[ebx]
  41eac3:	adc    DWORD PTR [edi-0x60],ecx
  41eac6:	cmp    DWORD PTR gs:[ebp+0x7c],ebp
  41eaca:	cs mov ebx,0xdac51642
  41ead0:	jo     0x41eb14
  41ead2:	dec    edi
  41ead3:	jno    0x41eae3
  41ead5:	rol    BYTE PTR [edx+eiz*4],0xf9
  41ead9:	jnp    0x41eaf3
  41eadb:	dec    esp
  41eadc:	dec    ebp
  41eadd:	(bad)
  41eae1:	fcomp  QWORD PTR [edi+ebp*4]
  41eae4:	in     al,dx
  41eae5:	repnz bound eax,QWORD PTR [edi+esi*4+0x23]
  41eaea:	repnz jecxz 0x41ea86
  41eaed:	cmp    eax,0xe20831a0
  41eaf2:	or     al,0xd4
  41eaf4:	cmp    ch,dh
  41eaf6:	call   0x66d4:0x674f126a
  41eafd:	sub    al,0x7a
  41eaff:	mov    al,ds:0x767fdd9f
  41eb04:	rcl    BYTE PTR [ecx],1
  41eb06:	cmp    DWORD PTR [esi+0x5],esp
  41eb09:	fs xor ah,BYTE PTR es:[ecx+edx*1]
  41eb0e:	jmp    0x41eb65
  41eb10:	adc    DWORD PTR [ecx-0x3f],ebx
  41eb13:	out    0x96,eax
  41eb15:	repz xchg ebp,eax
  41eb17:	rcr    BYTE PTR [eax+0x6be127b3],0xc5
  41eb1e:	(bad)  
  41eb1f:	mov    ds:0x35b9acdc,eax
  41eb24:	pop    ecx
  41eb25:	sub    BYTE PTR [eax-0x1c],ah
  41eb28:	out    0x73,eax
  41eb2a:	and    al,BYTE PTR [ecx-0x5fd07756]
  41eb30:	dec    ebp
  41eb31:	std    
  41eb32:	and    DWORD PTR [edi+eiz*1],esp
  41eb35:	sbb    BYTE PTR [edx],0xee
  41eb38:	jge    0x41eb48
  41eb3a:	cld    
  41eb3b:	(bad)  
  41eb3c:	push   ebp
  41eb3d:	dec    esi
  41eb3e:	pop    ecx
  41eb3f:	sqrtps xmm3,xmm5
  41eb42:	sbb    ah,cl
  41eb44:	dec    eax
  41eb45:	dec    ecx
  41eb46:	pop    ds
  41eb47:	(bad)  
  41eb48:	fwait
  41eb49:	cmp    eax,esi
  41eb4b:	stos   BYTE PTR es:[edi],al
  41eb4c:	sub    bh,BYTE PTR [ebp-0x699e612a]
  41eb52:	loop   0x41ead8
  41eb54:	pushf  
  41eb55:	daa    
  41eb56:	pusha  
  41eb57:	in     eax,0xee
  41eb59:	data16 (bad) 
  41eb5b:	je     0x41ebd6
  41eb5d:	and    DWORD PTR [edi-0x767a4225],0x20
  41eb64:	mov    dh,0x45
  41eb66:	(bad)  [esi]
  41eb68:	push   edx
  41eb69:	ret    0x5821
  41eb6c:	cmp    eax,0xe83459c1
  41eb71:	fadd   DWORD PTR [ebx+edi*1-0x7938b62e]
  41eb78:	addr16 mov bh,0x18
  41eb7b:	xor    BYTE PTR [ecx],ch
  41eb7d:	jmp    0xdd97:0x15c21b2f
  41eb84:	fld    st(7)
  41eb86:	sahf   
  41eb87:	fld    TBYTE PTR [edx+0x35]
  41eb8a:	(bad)  
  41eb8b:	lods   al,BYTE PTR ds:[esi]
  41eb8c:	pushf  
  41eb8d:	pop    edi
  41eb8e:	ret    0xae58
  41eb91:	ss xor eax,0x611316f5
  41eb97:	mov    es,eax
  41eb99:	test   eax,0xb8d43170
  41eb9e:	push   cs
  41eb9f:	in     eax,dx
  41eba0:	fs fwait
  41eba2:	inc    edx
  41eba3:	mov    ebx,0xd99f5eb1
  41eba8:	mov    dh,0xe9
  41ebaa:	mov    eax,ds:0x2bf081a4
  41ebaf:	adc    ebp,DWORD PTR [ecx]
  41ebb1:	xor    eax,0x34126736
  41ebb6:	inc    edx
  41ebb7:	pop    ebp
  41ebb8:	cmp    DWORD PTR [eax+0x6a],ecx
  41ebbb:	lods   eax,DWORD PTR ds:[esi]
  41ebbc:	leave  
  41ebbd:	xchg   BYTE PTR [ecx+edx*1],ah
  41ebc0:	push   edi
  41ebc1:	call   DWORD PTR [ecx+0x67a6900d]
  41ebc7:	jp     0x41eb9d
  41ebc9:	call   0x9261:0xa1ab6b3c
  41ebd0:	popf   
  41ebd1:	fldenv [ecx]
  41ebd3:	mov    ds,WORD PTR [edi+0x3b]
  41ebd6:	mov    ds:0x491d1010,al
  41ebdb:	jae    0x41ebce
  41ebdd:	jnp    0x41ec0e
  41ebdf:	xor    al,0x39
  41ebe1:	cmp    cl,BYTE PTR [edi+0x4345d6aa]
  41ebe7:	jle    0x41ebcb
  41ebe9:	(bad)  
  41ebea:	and    eax,0x7c6b7422
  41ebef:	xchg   ecx,eax
  41ebf0:	loopne 0x41eb82
  41ebf2:	and    eax,0xf2afb700
  41ebf7:	lea    ecx,[ebx-0x465556a]
  41ebfd:	repz jne 0x41eba8
  41ec00:	daa    
  41ec01:	cld    
  41ec02:	into   
  41ec03:	cmp    DWORD PTR [ecx+eiz*8-0x5c],edx
  41ec07:	xchg   ebx,eax
  41ec08:	aad    0x12
  41ec0a:	mov    ebx,0x2f9273f0
  41ec0f:	dec    ecx
  41ec10:	or     DWORD PTR [edx-0x2a],eax
  41ec13:	test   eax,0x1559d883
  41ec18:	xor    eax,0xcd2fa697
  41ec1d:	bound  ecx,QWORD PTR [ecx+0x764e668a]
  41ec23:	out    0xd8,eax
  41ec25:	xchg   ebp,eax
  41ec26:	lock movs BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41ec29:	sbb    BYTE PTR [edx-0x6a],ah
  41ec2c:	fcom   QWORD PTR [edx]
  41ec2e:	arpl   WORD PTR [esi-0x7b],si
  41ec31:	enter  0x9bd4,0xbd
  41ec35:	xchg   ebp,eax
  41ec36:	dec    eax
  41ec37:	sbb    eax,0x4996b167
  41ec3c:	(bad)  
  41ec3e:	jnp    0x3a85a77
  41ec44:	les    eax,FWORD PTR [ecx+0x68e4c117]
  41ec4a:	test   al,0x34
  41ec4c:	les    esp,FWORD PTR [edi+0x4212669b]
  41ec52:	popa   
  41ec53:	dec    esp
  41ec54:	jp     0x41ecd3
  41ec56:	gs int3 
  41ec58:	and    eax,0x1e000051
  41ec5d:	add    al,0xa7
  41ec5f:	(bad)  
  41ec60:	mov    edi,0xf6dd7ee7
  41ec65:	jp     0x41ec30
  41ec67:	push   esi
  41ec68:	xchg   BYTE PTR ds:0x698a9240,ch
  41ec6e:	add    DWORD PTR [eax],eax
  41ec70:	xchg   BYTE PTR [edx],al
  41ec72:	add    BYTE PTR [eax],al
  41ec74:	(bad)  
  41ec75:	adc    al,0x9
  41ec77:	mov    al,ds:0xe56e632e
  41ec7c:	icebp  
  41ec7d:	xchg   edi,eax
  41ec7e:	dec    esp
  41ec7f:	fcom   DWORD PTR [edi-0x2106be28]
  41ec85:	pop    edx
  41ec86:	adc    DWORD PTR [edi+edx*8+0x38802481],ebx
  41ec8d:	or     al,0xd7
  41ec8f:	scas   eax,DWORD PTR es:[edi]
  41ec90:	shl    BYTE PTR [eax-0xb],0x28
  41ec94:	shl    DWORD PTR [esi+0x3d],cl
  41ec97:	mov    dh,dh
  41ec99:	cmp    eax,0xf7a29c27
  41ec9e:	fwait
  41ec9f:	sub    BYTE PTR [ebx+0x2ead931d],0x68
  41eca6:	dec    esp
  41eca7:	add    DWORD PTR [eax],ecx
  41eca9:	dec    eax
  41ecaa:	pushf  
  41ecab:	sub    eax,0xa67e607d
  41ecb0:	(bad)  
  41ecb1:	jmp    0x41ec94
  41ecb3:	popa   
  41ecb4:	add    DWORD PTR ds:0x2316a644,edx
  41ecba:	lea    edx,[esi]
  41ecbc:	mov    al,0xd2
  41ecbe:	jecxz  0x41ec76
  41ecc0:	cmp    bl,BYTE PTR [ebx]
  41ecc2:	cld    
  41ecc3:	add    al,BYTE PTR [ebx-0x3c]
  41ecc6:	jne    0x41eca5
  41ecc8:	dec    esi
  41ecc9:	aas    
  41ecca:	rcr    BYTE PTR [ebx+edx*8+0x19886bfa],cl
  41ecd1:	inc    ebx
  41ecd2:	shr    esi,cl
  41ecd4:	mov    dl,0x21
  41ecd6:	add    BYTE PTR [edi-0x324f08be],cl
  41ecdc:	xchg   edi,eax
  41ecdd:	dec    ebp
  41ecde:	jmp    0xcfc6:0xbf34a3a5
  41ece5:	mov    cl,0x81
  41ece7:	arpl   WORD PTR [ecx],cx
  41ece9:	repnz neg BYTE PTR [esi]
  41ecec:	imul   esi,DWORD PTR [esi+0x7eadbaa9],0x12bc39ba
  41ecf6:	push   ebx
  41ecf7:	push   edi
  41ecf8:	jb     0x41ed4a
  41ecfa:	mov    ds:0x62b87789,al
  41ecff:	mov    edi,DWORD PTR [eax]
  41ed01:	inc    ecx
  41ed02:	push   ecx
  41ed03:	pop    ecx
  41ed04:	retf   
  41ed05:	fdivr  DWORD PTR [eax+0x76df8676]
  41ed0b:	out    0xe2,al
  41ed0d:	in     al,0x9
  41ed0f:	fst    st(6)
  41ed11:	push   0xa8e90cf6
  41ed16:	jp     0x41ecd1
  41ed18:	aam    0xf7
  41ed1a:	adc    ch,BYTE PTR [esi]
  41ed1c:	sub    al,0x6f
  41ed1e:	das    
  41ed1f:	jecxz  0x41ed73
  41ed21:	sbb    dl,bh
  41ed23:	stc    
  41ed24:	xchg   esp,eax
  41ed25:	mov    BYTE PTR [edi+edi*4+0x5b7d991e],dh
  41ed2c:	test   eax,0x8709e978
  41ed31:	outs   dx,BYTE PTR ds:[esi]
  41ed32:	test   BYTE PTR [ecx],ch
  41ed34:	mov    al,BYTE PTR [ebx]
  41ed36:	mov    ecx,0xdcf6f398
  41ed3b:	retf   
  41ed3c:	sub    al,al
  41ed3e:	push   ecx
  41ed3f:	arpl   WORD PTR [esi+edx*8],bx
  41ed42:	daa    
  41ed43:	mov    ebp,0x9fdebe40
  41ed48:	in     al,dx
  41ed49:	mov    ecx,0xdfe3075b
  41ed4e:	(bad)  [ecx+ebp*1+0x24]
  41ed52:	xor    al,0xc3
  41ed54:	test   DWORD PTR [ecx],ebx
  41ed56:	or     cl,ah
  41ed58:	inc    esp
  41ed59:	pop    ss
  41ed5a:	push   ecx
  41ed5b:	rcl    DWORD PTR [edi],0x8c
  41ed5e:	and    esi,DWORD PTR [esi-0x48]
  41ed61:	inc    eax
  41ed62:	(bad)  
  41ed63:	fild   DWORD PTR [edi-0x1f]
  41ed66:	imul   edi,DWORD PTR [ecx+0x4e],0x7c20a959
  41ed6d:	push   0xffffffd7
  41ed6f:	add    eax,0x3c60a1da
  41ed74:	or     edx,esi
  41ed76:	mov    ds:0xd3bf28ce,al
  41ed7b:	or     BYTE PTR [edi+0x3552c1d5],ch
  41ed81:	cld    
  41ed82:	cmp    al,0xcc
  41ed84:	lods   eax,DWORD PTR ds:[esi]
  41ed85:	ss xchg edx,eax
  41ed87:	dec    edi
  41ed88:	hlt    
  41ed89:	outs   dx,BYTE PTR ds:[esi]
  41ed8a:	stos   DWORD PTR es:[edi],eax
  41ed8b:	aam    0x7
  41ed8d:	lods   eax,DWORD PTR ds:[esi]
  41ed8e:	xor    al,0x3a
  41ed90:	ror    BYTE PTR [edx+ebx*1-0xf],1
  41ed94:	outs   dx,DWORD PTR ds:[esi]
  41ed95:	pop    es
  41ed96:	dec    esp
  41ed97:	or     BYTE PTR [eax-0x11],0xee
  41ed9b:	mov    eax,ds:0x47cb270b
  41eda0:	gs loopne 0x41edcb
  41eda3:	sbb    eax,0x859917b7
  41eda8:	lahf   
  41eda9:	mov    ch,0x10
  41edab:	add    eax,0x9938f86e
  41edb0:	dec    eax
  41edb1:	mov    ebp,0x33282242
  41edb6:	sbb    eax,0x88b1c379
  41edbb:	out    dx,al
  41edbc:	icebp  
  41edbd:	es retf 0x2b6c
  41edc1:	adc    esi,DWORD PTR [edx+ebp*1+0x66]
  41edc5:	sbb    dh,BYTE PTR [esi-0x2f]
  41edc8:	sar    BYTE PTR [esi-0x36],1
  41edcb:	je     0x41edf5
  41edcd:	add    ah,bl
  41edcf:	test   eax,0x1b8d9983
  41edd4:	inc    esi
  41edd5:	mov    ds:0xeb7ef9dd,eax
  41edda:	fsin   
  41eddc:	imul   ebx,DWORD PTR [ecx],0x4c
  41eddf:	mov    esi,0x2f0110c5
  41ede4:	mov    al,BYTE PTR [ebx-0x3f]
  41ede7:	(bad)  
  41ede8:	out    0xa6,al
  41edea:	jg     0x41ee15
  41edec:	cmp    dl,BYTE PTR ds:0x60b4a0a4
  41edf2:	or     al,0x3
  41edf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edf5:	call   0xea166835
  41edfa:	imul   ebp,DWORD PTR [ecx+0x42],0xf14184ea
  41ee01:	jmp    0xb6fc:0x2c02e9e9
  41ee08:	push   ds
  41ee09:	inc    ebp
  41ee0a:	xchg   edx,eax
  41ee0b:	push   ebp
  41ee0c:	xchg   DWORD PTR [eax],eax
  41ee0e:	jne    0x41edc1
  41ee10:	(bad)  
  41ee12:	mov    bh,0x75
  41ee14:	mov    edx,0x48d72743
  41ee19:	xor    al,0x12
  41ee1b:	xor    eax,esp
  41ee1d:	jecxz  0x41ee44
  41ee1f:	jp     0x41edfa
  41ee21:	push   eax
  41ee22:	xor    DWORD PTR [edx-0x72],esp
  41ee25:	mov    edx,0x26863dbe
  41ee2a:	pop    ebx
  41ee2b:	sti    
  41ee2c:	mov    ecx,0xe78b267d
  41ee31:	das    
  41ee32:	mov    al,ds:0xd08df623
  41ee37:	scas   eax,DWORD PTR es:[edi]
  41ee38:	(bad)  
  41ee39:	jno    0x41ee3b
  41ee3b:	xor    bl,bl
  41ee3d:	icebp  
  41ee3e:	das    
  41ee3f:	ins    BYTE PTR es:[edi],dx
  41ee40:	and    edx,DWORD PTR [ecx+0x54a8dfcc]
  41ee46:	mov    edi,edi
  41ee48:	scas   al,BYTE PTR es:[edi]
  41ee49:	repz shl cl,cl
  41ee4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee4d:	mov    eax,DWORD PTR [eax+0x65]
  41ee50:	mov    dl,0xa0
  41ee52:	ds retf 
  41ee54:	xchg   esi,eax
  41ee55:	in     al,dx
  41ee56:	adc    al,0xf9
  41ee58:	dec    ebp
  41ee59:	jp     0x41eea5
  41ee5b:	retf   0x523a
  41ee5e:	ret    
  41ee5f:	jmp    esp
  41ee61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee62:	dec    eax
  41ee63:	ficom  DWORD PTR ds:0x4f455c4c
  41ee69:	retf   
  41ee6a:	jp     0x41eec2
  41ee6c:	pop    esp
  41ee6e:	addr16 push ecx
  41ee70:	into   
  41ee71:	aam    0x75
  41ee73:	and    esp,esi
  41ee75:	fistp  WORD PTR [ebp+esi*4+0x125786dc]
  41ee7c:	aam    0xdb
  41ee7e:	adc    al,0x7f
  41ee80:	lods   eax,DWORD PTR ds:[esi]
  41ee81:	dec    BYTE PTR [edi-0x343ff09f]
  41ee87:	cmp    DWORD PTR ss:[eax+0x4efdf9d1],edi
  41ee8e:	push   edx
  41ee8f:	push   edx
  41ee90:	push   esp
  41ee91:	sub    ecx,ebx
  41ee93:	sub    DWORD PTR [ebx+0x17],esp
  41ee96:	cli    
  41ee97:	pop    eax
  41ee98:	mov    ecx,ebx
  41ee9a:	arpl   WORD PTR ds:0x13ada3b7,dx
  41eea0:	retf   
  41eea1:	cld    
  41eea2:	cmp    BYTE PTR [ecx-0x74973de],bh
  41eea8:	int3   
  41eea9:	into   
  41eeaa:	arpl   WORD PTR [edx],di
  41eeac:	jo     0x41ee9c
  41eeae:	retf   
  41eeaf:	sti    
  41eeb0:	stc    
  41eeb1:	and    BYTE PTR [ebp-0xca6e822],dl
  41eeb7:	pop    ss
  41eeb8:	pop    ecx
  41eeb9:	jmp    0x41eed2
  41eebb:	gs sbb edx,DWORD PTR gs:[ecx+0x41]
  41eec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eec2:	fs imul eax,esp,0xe8d27b49
  41eec9:	push   es
  41eeca:	add    bh,BYTE PTR [ecx+ecx*8+0x7ad57976]
  41eed1:	(bad)  [eax]
  41eed3:	jmp    0xd8cb:0xaa80b5cd
  41eeda:	loopne 0x41ee64
  41eedc:	xchg   esi,eax
  41eedd:	cmp    eax,0xc43e2fcb
  41eee2:	jmp    0xe657bcad
  41eee7:	jg     0x41ee84
  41eee9:	and    DWORD PTR [ecx],ebx
  41eeeb:	popf   
  41eeec:	fstp   TBYTE PTR [eax+0x355d8fad]
  41eef2:	test   al,0xbc
  41eef4:	xor    edx,ebp
  41eef6:	sbb    BYTE PTR [esi+edi*8-0x12],dl
  41eefa:	add    BYTE PTR [eax],al
  41eefc:	js     0x41ee87
  41eefe:	hlt    
  41eeff:	mov    al,0xf5
  41ef01:	std    
  41ef02:	jl     0x41eecd
  41ef04:	dec    edi
  41ef05:	pop    ds
  41ef06:	cmp    DWORD PTR [ebx-0x5d],ebp
  41ef09:	add    eax,0x6c109785
  41ef0e:	add    DWORD PTR [eax],eax
  41ef10:	xchg   BYTE PTR [edx],al
  41ef12:	add    BYTE PTR [eax],al
  41ef14:	es push ds
  41ef16:	xlat   BYTE PTR ds:[ebx]
  41ef17:	adc    ebp,esi
  41ef19:	mov    ah,0xd2
  41ef1b:	and    ecx,eax
  41ef1d:	dec    esi
  41ef1e:	jmp    0x7e5e:0x5d1e8485
  41ef25:	or     esi,DWORD PTR [ecx-0x7445ce64]
  41ef2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef2c:	and    DWORD PTR [ebx-0xa52e01d],ecx
  41ef32:	mov    eax,ds:0xde810930
  41ef37:	in     al,dx
  41ef38:	(bad)  
  41ef39:	enter  0x40b6,0x65
  41ef3d:	sub    ebx,ecx
  41ef3f:	inc    ecx
  41ef40:	push   ebp
  41ef41:	jmp    0x71725bc8
  41ef46:	cmp    ecx,edi
  41ef48:	gs cli 
  41ef4a:	ins    BYTE PTR es:[edi],dx
  41ef4b:	jl     0x41ef4d
  41ef4d:	(bad)  
  41ef4e:	cmp    al,0xf4
  41ef50:	inc    edx
  41ef51:	pop    ebx
  41ef52:	sahf   
  41ef53:	in     eax,dx
  41ef54:	retf   
  41ef55:	(bad)  
  41ef56:	sub    dh,ah
  41ef58:	ror    edx,1
  41ef5a:	or     DWORD PTR [edi+ebp*4],ebx
  41ef5d:	(bad)  
  41ef5e:	clc    
  41ef5f:	or     ebx,DWORD PTR [eax]
  41ef61:	mov    eax,0xcadc98e2
  41ef66:	js     0x41ef14
  41ef68:	adc    BYTE PTR [edx-0x19],dh
  41ef6b:	cdq    
  41ef6c:	shr    eax,cl
  41ef6e:	xchg   DWORD PTR [edi+0x61],edx
  41ef71:	stos   DWORD PTR es:[edi],eax
  41ef72:	shl    ebx,1
  41ef74:	enter  0xd855,0x92
  41ef78:	push   ecx
  41ef79:	test   eax,0xced3650a
  41ef7e:	aad    0xb6
  41ef80:	fsubr  QWORD PTR [eax+0x32]
  41ef83:	xchg   BYTE PTR [edx-0x25],bl
  41ef86:	(bad)  
  41ef87:	das    
  41ef88:	mov    ds:0x1fdfe9a2,al
  41ef8d:	test   eax,0x1830d5a9
  41ef92:	push   ebp
  41ef93:	(bad)  
  41ef94:	scas   al,BYTE PTR es:[edi]
  41ef95:	xor    eax,0x4f8e8318
  41ef9a:	cmp    BYTE PTR [ecx],0xa2
  41ef9d:	and    eax,0xab8b22c
  41efa2:	test   eax,0x93902fba
  41efa7:	out    dx,al
  41efa8:	retf   
  41efa9:	adc    al,0x49
  41efab:	and    al,0xe4
  41efad:	aad    0x0
  41efaf:	sub    ah,BYTE PTR [eax]
  41efb1:	arpl   WORD PTR [esi+edi*8],bx
  41efb4:	jne    0x41efd4
  41efb6:	or     BYTE PTR [esi+0x72a16e9e],bl
  41efbc:	fadd   st(7),st
  41efbe:	clc    
  41efbf:	add    ebx,DWORD PTR [edx+0x4f]
  41efc2:	sbb    DWORD PTR [eax],ecx
  41efc4:	pop    esi
  41efc5:	test   DWORD PTR [eax+0x52],esi
  41efc8:	sti    
  41efc9:	adc    BYTE PTR [edx+0x78],dl
  41efcc:	dec    ebp
  41efcd:	inc    ebp
  41efce:	cmp    ch,BYTE PTR [ecx]
  41efd0:	aad    0x2
  41efd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efd3:	lods   eax,DWORD PTR ds:[esi]
  41efd4:	(bad)  
  41efd5:	adc    ch,BYTE PTR [eax+0x3bbf892b]
  41efdb:	xor    ebx,DWORD PTR [ecx]
  41efdd:	aam    0x17
  41efdf:	inc    ebx
  41efe0:	hlt    
  41efe1:	call   FWORD PTR [eax]
  41efe3:	ret    
  41efe4:	xor    eax,0x70e0d50e
  41efe9:	ss xchg esi,eax
  41efeb:	in     eax,dx
  41efec:	mov    dl,0x4e
  41efee:	mov    WORD PTR [esi],gs
  41eff0:	cmp    eax,0xf092b412
  41eff5:	retf   0x5b0f
  41eff8:	in     eax,dx
  41eff9:	bound  edx,QWORD PTR [ebp+0x1c]
  41effc:	and    esi,ecx
  41effe:	(bad)  [ecx+edx*2-0x630ed8ad]
  41f005:	icebp  
  41f006:	mov    cl,0x87
  41f008:	int3   
  41f009:	(bad)  
  41f00a:	push   esi
  41f00b:	repnz or cl,BYTE PTR [ecx]
  41f00e:	fisttp DWORD PTR [ecx]
  41f010:	inc    ecx
  41f011:	push   ebx
  41f012:	jb     0x41efc8
  41f014:	xor    DWORD PTR [eax-0x6b9997fc],0xffffff82
  41f01b:	fwait
  41f01c:	sahf   
  41f01d:	dec    ecx
  41f01e:	aam    0x41
  41f020:	dec    esp
  41f021:	repnz mov esp,0x8038d60e
  41f027:	stos   DWORD PTR es:[di],eax
  41f029:	lods   eax,DWORD PTR ds:[esi]
  41f02a:	inc    esp
  41f02b:	mov    cl,0xda
  41f02d:	clc    
  41f02e:	or     edx,DWORD PTR [eax-0x69]
  41f031:	in     al,dx
  41f032:	cli    
  41f033:	loop   0x41f04e
  41f035:	icebp  
  41f036:	neg    BYTE PTR [ebx]
  41f038:	jl     0x41f06e
  41f03a:	push   0x32
  41f03c:	xchg   esp,eax
  41f03d:	push   ss
  41f03e:	mov    esi,0x4301fc43
  41f043:	dec    esp
  41f044:	bts    esi,edx
  41f047:	lds    dx,DWORD PTR [ecx-0x5a99f632]
  41f04e:	jmp    0x749f4d03
  41f053:	pop    edi
  41f054:	push   0x958ad2df
  41f059:	leave  
  41f05a:	clc    
  41f05b:	or     ecx,0xffffffc1
  41f05e:	jge    0x41efe8
  41f060:	(bad)  
  41f062:	repz mov ds:0x8e52a815,eax
  41f068:	push   ebx
  41f069:	dec    edx
  41f06a:	mov    ch,BYTE PTR [edx-0x5c]
  41f06d:	outs   dx,BYTE PTR ds:[esi]
  41f06e:	ret    
  41f06f:	xor    DWORD PTR [ebp-0x775dc19e],ebp
  41f075:	xor    eax,0xf5b5f6be
  41f07a:	fmul   st,st(0)
  41f07c:	mov    eax,ds:0xd3cc3994
  41f081:	into   
  41f082:	outs   dx,DWORD PTR ds:[esi]
  41f083:	int    0x85
  41f085:	pushf  
  41f086:	bnd jle 0x41f057
  41f089:	jmp    0x6a63:0xd8a48be4
  41f090:	mov    esi,0xd80548f2
  41f095:	(bad)  
  41f096:	adc    bh,BYTE PTR [edi-0x6]
  41f099:	dec    edi
  41f09a:	push   ecx
  41f09c:	cs push esi
  41f09e:	aas    
  41f09f:	mov    al,ds:0xcdc9809d
  41f0a4:	push   edx
  41f0a5:	cmp    al,0xb2
  41f0a7:	loope  0x41f0c2
  41f0a9:	call   0x5a68:0x2d6d62f4
  41f0b0:	dec    edx
  41f0b1:	les    edx,FWORD PTR [ebp+0x15361c90]
  41f0b7:	das    
  41f0b8:	imul   ebp,esi,0x70
  41f0bb:	div    BYTE PTR [ebx-0x6f0b646a]
  41f0c1:	pop    es
  41f0c2:	push   es
  41f0c3:	cmp    DWORD PTR [edx+ebp*1],ebx
  41f0c6:	iret   
  41f0c7:	call   0x2d7fc53f
  41f0cc:	test   al,0xde
  41f0ce:	push   es
  41f0cf:	inc    ebx
  41f0d0:	data16 sbb al,0x5c
  41f0d3:	jno    0x41f063
  41f0d5:	pop    ecx
  41f0d6:	mov    ch,0xd3
  41f0d8:	bound  edi,QWORD PTR [edi-0x53]
  41f0db:	sub    ebx,DWORD PTR [eax]
  41f0dd:	jmp    0xf3e4b46a
  41f0e2:	and    bl,BYTE PTR [edi+0x14]
  41f0e5:	hlt    
  41f0e6:	sbb    al,BYTE PTR [ebp+0x1e5863dc]
  41f0ec:	ja     0x41f097
  41f0ee:	or     ah,ah
  41f0f0:	push   ebp
  41f0f2:	mov    bl,0xd9
  41f0f4:	addr16 repz pusha 
  41f0f7:	dec    esi
  41f0f8:	outs   dx,DWORD PTR ds:[esi]
  41f0f9:	cli    
  41f0fa:	aaa    
  41f0fb:	es fwait
  41f0fd:	push   ecx
  41f0fe:	repnz loop 0x41f176
  41f101:	adc    BYTE PTR [eax],ch
  41f103:	pop    ss
  41f104:	jmp    FWORD PTR [ebp-0x31742136]
  41f10a:	ja     0x41f0d7
  41f10c:	jmp    0xd2775f21
  41f111:	cwde   
  41f112:	push   ss
  41f113:	push   esp
  41f114:	aaa    
  41f115:	das    
  41f116:	fwait
  41f117:	push   cs
  41f118:	call   0xa3ead6be
  41f11d:	push   edx
  41f11e:	add    al,0xff
  41f120:	or     al,0x3
  41f122:	dec    esi
  41f123:	jmp    0x57c83c28
  41f128:	cmp    DWORD PTR [eax-0x48],edx
  41f12b:	adc    ch,BYTE PTR fs:[ebp-0x5d]
  41f12f:	cbw    
  41f131:	sub    DWORD PTR [ebx+0x4a],ebx
  41f134:	fstp   TBYTE PTR [edx]
  41f136:	mov    ebp,0xec37b33d
  41f13b:	xchg   DWORD PTR [ebx+0x25],ecx
  41f13e:	ss inc edx
  41f140:	xchg   BYTE PTR [ebp-0x2b],cl
  41f143:	das    
  41f144:	sbb    eax,0xb41fe67f
  41f149:	jo     0x41f1a0
  41f14b:	not    BYTE PTR [ecx+edi*8+0x3f02f521]
  41f152:	jno    0x41f1b9
  41f154:	mov    ds:0xeaefca3a,al
  41f159:	idiv   ch
  41f15b:	pushf  
  41f15c:	jns    0x41f11f
  41f15e:	jb     0x41f126
  41f160:	and    eax,0x36b11934
  41f165:	jmp    0x9fee:0x767e97b7
  41f16c:	mov    ds:0x98e4a0c9,al
  41f171:	sub    dl,bl
  41f173:	dec    ebx
  41f174:	mov    bl,0x6f
  41f176:	sub    al,BYTE PTR ds:0x9820ab1e
  41f17c:	ins    DWORD PTR es:[edi],dx
  41f17d:	sbb    BYTE PTR [ecx],ch
  41f17f:	pushf  
  41f180:	push   edx
  41f181:	cmc    
  41f182:	or     ebx,DWORD PTR [esi]
  41f184:	and    ebx,ebx
  41f186:	(bad)  
  41f187:	jnp    0x41f1f0
  41f189:	xlat   BYTE PTR ds:[ebx]
  41f18a:	loop   0x41f191
  41f18c:	sbb    DWORD PTR [ecx-0x45],ebp
  41f18f:	test   eax,0x2b1f30b
  41f194:	add    eax,0x86979636
  41f199:	daa    
  41f19a:	add    BYTE PTR [eax],al
  41f19c:	pop    esp
  41f19d:	mov    dh,BYTE PTR [edi-0x23800895]
  41f1a3:	mov    edi,0xd9de0759
  41f1a8:	fcomi  st,st(0)
  41f1aa:	push   ecx
  41f1ab:	dec    edi
  41f1ac:	xchg   esi,eax
  41f1ad:	outs   dx,BYTE PTR ds:[esi]
  41f1ae:	add    DWORD PTR [eax],eax
  41f1b0:	xchg   BYTE PTR [edx],al
  41f1b2:	add    BYTE PTR [eax],al
  41f1b4:	add    al,0x69
  41f1b6:	popf   
  41f1b7:	inc    edx
  41f1b8:	enter  0x3709,0xf2
  41f1bc:	ds mov ebp,ebp
  41f1bf:	stc    
  41f1c0:	data16 aad 0x47
  41f1c3:	pop    es
  41f1c4:	mov    ecx,0x6e04cad7
  41f1c9:	(bad)  
  41f1ca:	std    
  41f1cb:	shl    DWORD PTR [edi],0xe2
  41f1ce:	push   ss
  41f1cf:	mov    ds:0xfe0580ee,al
  41f1d4:	fild   WORD PTR [edx+0x12279506]
  41f1da:	or     al,0xda
  41f1dc:	into   
  41f1dd:	fist   DWORD PTR [ecx]
  41f1df:	add    eax,0x4151ef33
  41f1e4:	aaa    
  41f1e5:	adc    DWORD PTR [ecx-0x24],eax
  41f1e8:	inc    edi
  41f1e9:	aad    0xaa
  41f1eb:	(bad)  
  41f1ec:	jb     0x41f17b
  41f1ee:	or     eax,0x8c7fdbd9
  41f1f3:	fcomp  QWORD PTR [eax]
  41f1f5:	push   ebp
  41f1f6:	xchg   ebx,eax
  41f1f7:	shl    ah,0x6e
  41f1fa:	or     DWORD PTR [ecx*4-0x216883da],ecx
  41f201:	inc    sp
  41f203:	xchg   edi,eax
  41f204:	das    
  41f205:	fimul  WORD PTR gs:[ebx]
  41f208:	(bad)  [edi]
  41f20a:	out    dx,al
  41f20b:	popa   
  41f20c:	jae    0x41f257
  41f20e:	out    0xb2,al
  41f210:	hlt    
  41f211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f212:	ret    
  41f213:	js     0x41f21b
  41f215:	ins    DWORD PTR es:[edi],dx
  41f216:	arpl   WORD PTR [esi+0x5ac3caa3],sp
  41f21c:	pop    ecx
  41f21d:	sub    al,0x68
  41f21f:	gs fcmovnb st,st(3)
  41f222:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f223:	sbb    esi,DWORD PTR [ebp-0x19aefb24]
  41f229:	rcl    DWORD PTR [esi-0x4a],0x16
  41f22d:	pushf  
  41f22e:	call   0x3fc9:0x1909ebb1
  41f235:	inc    ebp
  41f236:	into   
  41f237:	icebp  
  41f238:	push   es
  41f239:	ins    BYTE PTR es:[edi],dx
  41f23a:	out    0xe7,eax
  41f23c:	mov    ecx,0xd869833f
  41f241:	das    
  41f242:	fisttp QWORD PTR [ebx-0x2e]
  41f245:	fistp  DWORD PTR [esi]
  41f247:	dec    edi
  41f248:	xchg   edx,eax
  41f249:	inc    ebx
  41f24a:	stos   BYTE PTR es:[edi],al
  41f24b:	mov    es,esp
  41f24d:	and    bl,BYTE PTR [edx]
  41f24f:	sbb    BYTE PTR [ebp-0x2e],bl
  41f252:	stos   BYTE PTR es:[edi],al
  41f253:	mov    ds:0x9f2e9192,eax
  41f258:	adc    eax,0x58f8500d
  41f25d:	es cs pushf 
  41f260:	xchg   edx,eax
  41f261:	mov    bl,0x90
  41f263:	xor    eax,0x5d988b5
  41f268:	stos   DWORD PTR es:[edi],eax
  41f269:	leave  
  41f26a:	mov    esp,0x68ca97c3
  41f26f:	xchg   edx,eax
  41f270:	and    BYTE PTR [edi+eax*4],dl
  41f273:	add    al,0x6f
  41f275:	pop    ebp
  41f276:	cwde   
  41f277:	or     eax,0x5a3e333b
  41f27c:	addr16 shl ah,1
  41f27f:	and    DWORD PTR [edi-0x16d7bf9b],0xd0f76cec
  41f289:	std    
  41f28a:	add    DWORD PTR [eax+0x57],esi
  41f28d:	add    eax,0x1cbe26f
  41f292:	addr16 iret 
  41f294:	in     al,dx
  41f295:	cdq    
  41f296:	pop    esp
  41f297:	jmp    0x41f282
  41f299:	inc    ebx
  41f29a:	dec    edi
  41f29b:	mov    dl,0x65
  41f29d:	adc    DWORD PTR [ebp-0x462904cb],ecx
  41f2a3:	adc    al,0x54
  41f2a5:	mov    esp,0x41bfd78d
  41f2aa:	rcr    esi,cl
  41f2ac:	in     eax,0xdc
  41f2ae:	cmp    ah,BYTE PTR [ebx]
  41f2b0:	sub    al,0x63
  41f2b2:	div    BYTE PTR ds:0xbdc20f12
  41f2b8:	stos   DWORD PTR es:[edi],eax
  41f2b9:	cwde   
  41f2ba:	(bad)  
  41f2bb:	scas   eax,DWORD PTR es:[edi]
  41f2bc:	inc    DWORD PTR [esi+0x7029adc5]
  41f2c2:	pop    ecx
  41f2c3:	out    dx,al
  41f2c4:	rcl    DWORD PTR es:[edi],0x46
  41f2c8:	pop    esp
  41f2c9:	dec    ebx
  41f2ca:	pop    ss
  41f2cb:	pop    ebx
  41f2cc:	retf   0x2a18
  41f2cf:	arpl   sp,bp
  41f2d1:	iret   
  41f2d2:	mov    al,ds:0x26baa2c5
  41f2d7:	or     ecx,DWORD PTR [ecx]
  41f2d9:	ss mov bh,0x8b
  41f2dc:	or     ebx,DWORD PTR [ebp-0x54b91d3]
  41f2e2:	and    al,0x33
  41f2e4:	adc    dh,BYTE PTR [ebx+eiz*2+0x5cfc75fc]
  41f2eb:	push   edi
  41f2ec:	or     dh,BYTE PTR [ebx+0x47]
  41f2ef:	add    al,0x8e
  41f2f1:	data16 test al,0x8
  41f2f4:	mov    cl,0xcb
  41f2f6:	jmp    0x41f2ad
  41f2f8:	jb     0x41f2a8
  41f2fa:	daa    
  41f2fb:	jae    0x41f370
  41f2fd:	mov    ch,0x2f
  41f2ff:	gs or  al,0xc6
  41f302:	pop    DWORD PTR [ebx+0x23]
  41f305:	sbb    edi,DWORD PTR ds:0x83c5d011
  41f30b:	xor    al,ch
  41f30d:	mov    bl,ch
  41f30f:	and    al,bh
  41f311:	jnp    0x41f343
  41f313:	inc    ebx
  41f314:	adc    eax,0xf6f5f650
  41f319:	mov    ah,0xc3
  41f31b:	sub    DWORD PTR [edx],0xffffff99
  41f31e:	lods   eax,DWORD PTR ds:[esi]
  41f31f:	out    0x36,al
  41f321:	inc    ebp
  41f322:	sub    BYTE PTR [ebp+0xa],ah
  41f325:	sub    al,0x51
  41f327:	(bad)  
  41f328:	mov    ebp,0x24afbcc5
  41f32d:	(bad)  
  41f32f:	gs test eax,0xf8afc25
  41f335:	fs (bad) 
  41f337:	jae    0x41f319
  41f339:	call   0x6fcde8e0
  41f33e:	xchg   ebx,eax
  41f33f:	cli    
  41f340:	inc    ah
  41f342:	xor    dh,ah
  41f344:	arpl   WORD PTR [ebx],dx
  41f346:	or     ah,0x7a
  41f349:	inc    eax
  41f34a:	scas   al,BYTE PTR es:[edi]
  41f34b:	aas    
  41f34c:	rcl    DWORD PTR [edi-0x16],cl
  41f34f:	fcom   DWORD PTR [edx+0x3c6a6537]
  41f355:	std    
  41f356:	sti    
  41f357:	(bad)  
  41f358:	jae    0x41f2dd
  41f35a:	add    DWORD PTR [ebx-0x57],esi
  41f35d:	mov    fs,WORD PTR ds:0xe4706df8
  41f363:	loop   0x41f3ce
  41f365:	cmp    ecx,DWORD PTR [edx+0x7e]
  41f368:	add    DWORD PTR [ecx],ebx
  41f36a:	sbb    BYTE PTR [edx-0x6a],ah
  41f36d:	xchg   esp,eax
  41f36e:	ins    DWORD PTR es:[edi],dx
  41f36f:	call   0xb0cd:0x8a5c6ebf
  41f376:	adc    eax,0x83948557
  41f37b:	icebp  
  41f37c:	aad    0x1d
  41f37e:	jecxz  0x41f3ea
  41f380:	jb     0x41f304
  41f382:	ja     0x41f3b3
  41f384:	aam    0xd6
  41f386:	pusha  
  41f387:	test   DWORD PTR [ecx+0x2b],eax
  41f38a:	xchg   esp,eax
  41f38b:	or     eax,0x4163d97f
  41f390:	dec    ebp
  41f391:	jmp    0x87d7:0x5f33ce5e
  41f398:	adc    DWORD PTR [edi+0x2b],ecx
  41f39b:	push   cs
  41f39c:	arpl   dx,si
  41f39e:	inc    ebp
  41f39f:	dec    BYTE PTR [edi+ebx*2]
  41f3a2:	mov    bh,0x6d
  41f3a4:	loope  0x41f38f
  41f3a6:	jmp    0xa14a:0x2290ceb4
  41f3ad:	xor    edx,DWORD PTR [ebx-0x38]
  41f3b0:	jmp    0x41f3f6
  41f3b2:	jnp    0x41f36f
  41f3b4:	popa   
  41f3b5:	test   BYTE PTR [ebx-0x4],cl
  41f3b8:	in     eax,dx
  41f3b9:	mov    cl,0x7a
  41f3bb:	mov    edi,0x916c1022
  41f3c0:	mov    ecx,0x154a73a1
  41f3c5:	loopne 0x41f42f
  41f3c7:	mov    WORD PTR [ecx+esi*1],fs
  41f3ca:	jno    0x41f40f
  41f3cc:	inc    ecx
  41f3cd:	jae    0x41f3a0
  41f3cf:	dec    esi
  41f3d0:	and    al,0x8c
  41f3d2:	push   esp
  41f3d3:	mov    ah,0x19
  41f3d5:	xor    dl,BYTE PTR [ebx-0xe]
  41f3d8:	or     edx,0x97b4d730
  41f3de:	mov    edx,0xc6cc316b
  41f3e3:	into   
  41f3e4:	js     0x41f459
  41f3e6:	pop    es
  41f3e7:	rcl    esi,cl
  41f3e9:	jmp    0x9ddf6303
  41f3ee:	int    0xe0
  41f3f0:	inc    eax
  41f3f1:	aad    0x60
  41f3f3:	rcl    DWORD PTR [ebx-0x707b95d5],0x77
  41f3fa:	lods   al,BYTE PTR ds:[esi]
  41f3fb:	and    BYTE PTR [esi-0xaa8b80],al
  41f401:	mov    edx,0x84ebcece
  41f406:	pop    esp
  41f407:	mov    eax,ds:0x23a3ecfc
  41f40c:	dec    esp
  41f40d:	inc    ebp
  41f40e:	or     ebx,DWORD PTR ds:0xca4b6fc5
  41f414:	jno    0x41f43d
  41f416:	inc    edx
  41f417:	mov    ah,0xe0
  41f419:	xchg   esi,eax
  41f41a:	sbb    al,0x6b
  41f41c:	in     al,0xdc
  41f41e:	leave  
  41f41f:	sub    DWORD PTR [edx-0xe],0xffffffcf
  41f423:	xor    al,0x3
  41f425:	repz push edi
  41f427:	test   DWORD PTR [ebx],ebp
  41f429:	push   es
  41f42a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f42b:	xchg   ebp,eax
  41f42c:	add    BYTE PTR [eax],0xe5
  41f42f:	cmova  eax,DWORD PTR [edi-0x1f56293c]
  41f436:	pop    ebp
  41f437:	mov    esp,0x107
  41f43c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f43d:	sbb    al,BYTE PTR [edi-0x204026]
  41f443:	jg     0x41f3f1
  41f445:	pop    ss
  41f446:	aad    0x14
  41f448:	loopne 0x41f4a6
  41f44a:	dec    edx
  41f44b:	xor    BYTE PTR [ecx+esi*2],bl
  41f44e:	add    DWORD PTR [eax],eax
  41f450:	xchg   BYTE PTR [edx],al
  41f452:	add    BYTE PTR [eax],al
  41f454:	and    al,0xd4
  41f456:	je     0x41f47c
  41f458:	fnsave [ecx-0x3619dda8]
  41f45e:	mov    esp,0x5a3f2b12
  41f463:	in     eax,dx
  41f464:	jl     0x41f3fe
  41f466:	sbb    bh,BYTE PTR [eax]
  41f468:	jmp    0x1dde:0xe1056874
  41f46f:	push   0x49973e25
  41f474:	inc    edx
  41f475:	jnp    0x41f4c3
  41f477:	stos   BYTE PTR es:[edi],al
  41f478:	push   ds
  41f479:	or     eax,0x9b589cb
  41f47e:	rcr    DWORD PTR [esi+0x1667e1d0],1
  41f484:	and    eax,0x712d541a
  41f489:	jmp    0x41f480
  41f48b:	or     al,0xb2
  41f48d:	add    esp,DWORD PTR [ebx]
  41f48f:	test   eax,esi
  41f491:	shl    dl,0x23
  41f494:	xor    BYTE PTR [edi+edx*8-0xa],dh
  41f498:	jmp    0x41f4d9
  41f49a:	and    DWORD PTR [ebp-0x4aa6be0b],edx
  41f4a0:	aas    
  41f4a1:	test   esi,ecx
  41f4a3:	into   
  41f4a4:	cdq    
  41f4a5:	mov    ebx,0x6e5494b9
  41f4aa:	pushf  
  41f4ab:	mov    cl,0xd
  41f4ad:	call   0x1250:0xcf91edce
  41f4b4:	inc    esp
  41f4b5:	push   ebp
  41f4b6:	std    
  41f4b7:	fdivr  DWORD PTR [edi-0x39]
  41f4ba:	cmp    DWORD PTR [esp+ebp*4-0x5f],ecx
  41f4be:	loopne 0x41f506
  41f4c0:	push   ecx
  41f4c1:	push   edi
  41f4c2:	mov    ds:0x68ce6eba,al
  41f4c7:	loope  0x41f4c1
  41f4c9:	mov    ds:0x958b86b3,al
  41f4ce:	mov    eax,0x9d2fe7be
  41f4d3:	fcom   QWORD PTR [esi]
  41f4d5:	sub    dh,BYTE PTR ss:[ebx+0x7a396c17]
  41f4dc:	daa    
  41f4dd:	clc    
  41f4de:	add    eax,0xedbd22b8
  41f4e3:	out    dx,eax
  41f4e4:	xchg   ebx,esp
  41f4e6:	lods   eax,DWORD PTR ds:[esi]
  41f4e7:	cli    
  41f4e8:	call   0xd335a3
  41f4ed:	stc    
  41f4ee:	jns    0x41f494
  41f4f0:	hlt    
  41f4f1:	jge    0x41f505
  41f4f3:	xor    eax,0xe7a90066
  41f4f8:	mov    edi,0x2df218f0
  41f4fd:	adc    eax,0xc723a7b8
  41f502:	mov    ah,0x36
  41f504:	cwde   
  41f505:	and    ah,dh
  41f507:	in     al,dx
  41f508:	jne    0x41f4f5
  41f50a:	xor    eax,0x24e1b17e
  41f50f:	cmp    bh,BYTE PTR [edx+0x4f]
  41f512:	call   0x51aa:0x3fc2dfe5
  41f519:	call   0x1e3de3d4
  41f51e:	inc    ebp
  41f51f:	jae    0x41f4f7
  41f521:	jp     0x41f52b
  41f523:	js     0x41f559
  41f525:	(bad)  
  41f526:	cld    
  41f527:	inc    esp
  41f528:	les    ecx,FWORD PTR [edx-0x38b2cc66]
  41f52e:	hlt    
  41f52f:	push   ss
  41f530:	(bad)  
  41f531:	mov    ds:0x774de07,al
  41f536:	xchg   DWORD PTR [edi+0x73f4141c],edi
  41f53c:	or     al,0xe2
  41f53e:	hlt    
  41f53f:	cld    
  41f540:	pop    ds
  41f541:	mov    eax,0xe3428755
  41f546:	out    0x36,al
  41f548:	aad    0x9c
  41f54a:	cmp    al,0x23
  41f54c:	xchg   esp,eax
  41f54d:	(bad)
  41f551:	add    DWORD PTR [edi-0x76],eax
  41f554:	sub    DWORD PTR [eax-0x66c31c29],ebp
  41f55a:	neg    DWORD PTR [edx]
  41f55c:	sub    eax,esp
  41f55e:	aaa    
  41f55f:	ins    DWORD PTR es:[edi],dx
  41f560:	test   eax,0x68c7d555
  41f565:	push   edx
  41f566:	lahf   
  41f567:	xor    eax,0x9213ae53
  41f56c:	lock out 0x68,eax
  41f56f:	hlt    
  41f570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f571:	out    0x6c,eax
  41f573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f574:	inc    BYTE PTR [ecx]
  41f576:	dec    edi
  41f577:	loope  0x41f5a4
  41f579:	mov    al,0xc8
  41f57b:	shl    ch,1
  41f57d:	or     BYTE PTR [ebx],dl
  41f57f:	inc    ecx
  41f580:	aas    
  41f581:	push   esi
  41f582:	rcr    eax,0xfe
  41f585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f586:	or     DWORD PTR [edi+0xe6b904d],0x7
  41f58d:	fstp   DWORD PTR [edx]
  41f58f:	mov    cl,bh
  41f591:	stc    
  41f592:	lahf   
  41f593:	cmp    eax,0x56e102c6
  41f598:	or     ah,dl
  41f59a:	lea    ecx,[eax+0x356a7044]
  41f5a0:	call   0xaf0e33f2
  41f5a5:	push   esi
  41f5a6:	dec    ebp
  41f5a7:	lock cwde 
  41f5a9:	pop    edi
  41f5aa:	xchg   ebp,eax
  41f5ab:	jl     0x41f55c
  41f5ad:	lods   eax,DWORD PTR ds:[esi]
  41f5ae:	adc    BYTE PTR [ebp-0x26],cl
  41f5b1:	cli    
  41f5b2:	(bad)  
  41f5b3:	sbb    ax,0x5aaf
  41f5b7:	cs in  eax,dx
  41f5b9:	call   0x7629bf47
  41f5be:	jno    0x41f567
  41f5c0:	(bad)  
  41f5c1:	ror    DWORD PTR [edx+0x92ce322],1
  41f5c7:	jle    0x41f576
  41f5c9:	gs hlt 
  41f5cb:	inc    edi
  41f5cc:	test   DWORD PTR [ecx+esi*1],ecx
  41f5cf:	mov    al,ds:0x81a803fd
  41f5d4:	sbb    al,0xf4
  41f5d6:	out    dx,eax
  41f5d7:	push   edi
  41f5d8:	shr    DWORD PTR [ebx+0x24d040c8],cl
  41f5de:	stos   DWORD PTR es:[edi],eax
  41f5df:	lds    ebx,FWORD PTR [edi+0x548f51c5]
  41f5e5:	inc    esi
  41f5e6:	fdiv   QWORD PTR [eax-0x1717a868]
  41f5ec:	adc    BYTE PTR [ebp+edx*1-0x7],al
  41f5f0:	mov    bh,0x3c
  41f5f2:	pop    esi
  41f5f3:	fcom   QWORD PTR [esi]
  41f5f5:	dec    edx
  41f5f6:	mul    DWORD PTR [ecx+0x1c]
  41f5f9:	and    BYTE PTR ds:0x48ff8fbc,dh
  41f5ff:	imul   ebp,DWORD PTR [ecx],0x21d2782c
  41f605:	and    ebx,DWORD PTR [esi]
  41f607:	pushf  
  41f608:	clc    
  41f609:	imul   esi,ebx,0x270512ea
  41f60f:	nop
  41f610:	stos   DWORD PTR es:[edi],eax
  41f611:	mov    bl,0x84
  41f613:	adc    ch,BYTE PTR [ebx]
  41f615:	aaa    
  41f616:	sub    al,0x13
  41f618:	mov    esi,0x2870609
  41f61d:	and    DWORD PTR [edi+0x1b],edi
  41f620:	sub    eax,0x98108081
  41f625:	cmp    BYTE PTR [ebx+eiz*4-0x4e],bl
  41f629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f62a:	add    ebp,DWORD PTR [ecx-0x16dd8b6a]
  41f630:	shl    bl,0xc0
  41f633:	mov    al,ds:0x407029d0
  41f638:	or     eax,0x3ecd1f21
  41f63d:	xor    eax,DWORD PTR [ebx]
  41f63f:	xor    esp,DWORD PTR [esi-0x30]
  41f642:	push   esp
  41f643:	mov    bl,0xee
  41f645:	lea    eax,[ebx+edi*1]
  41f648:	lahf   
  41f649:	(bad)  
  41f64a:	into   
  41f64b:	xchg   esi,eax
  41f64c:	iret   
  41f64d:	xchg   ebx,eax
  41f64e:	lahf   
  41f64f:	loopne 0x41f672
  41f651:	xchg   ebx,eax
  41f652:	(bad)  
  41f653:	pop    es
  41f654:	out    0xc1,eax
  41f656:	fucomi st,st(3)
  41f658:	add    eax,0xfc610407
  41f65d:	sbb    BYTE PTR [esi],dh
  41f65f:	gs ins BYTE PTR es:[edi],dx
  41f661:	xchg   edx,eax
  41f662:	aad    0x1b
  41f664:	popf   
  41f665:	mov    ds:0x2c491f93,eax
  41f66a:	scas   eax,DWORD PTR es:[edi]
  41f66b:	mov    eax,0xcf1e51eb
  41f670:	pop    esp
  41f671:	rcl    dh,cl
  41f673:	adc    BYTE PTR [edx+ebx*2-0x15c4f0b],ah
  41f67a:	fdivr  DWORD PTR [ebx+0x489006ba]
  41f680:	stc    
  41f681:	xor    edi,DWORD PTR [esi+ebx*2]
  41f684:	xchg   ecx,eax
  41f685:	mov    eax,ds:0x258eb315
  41f68a:	inc    edi
  41f68b:	push   esi
  41f68c:	dec    ebx
  41f68d:	fisub  DWORD PTR [eax+0x4f]
  41f690:	in     al,0xa6
  41f692:	repnz add ebp,DWORD PTR [ebx-0x21179789]
  41f699:	scas   al,BYTE PTR es:[edi]
  41f69a:	inc    edi
  41f69b:	cmp    DWORD PTR fs:[si+0x7c],esi
  41f6a0:	fld    st(1)
  41f6a2:	(bad)
  41f6a6:	push   cs
  41f6a7:	jnp    0x41f6a8
  41f6a9:	cmp    eax,0x81fefb56
  41f6ae:	repnz sub al,al
  41f6b1:	adc    al,0x7a
  41f6b3:	mov    bh,0xba
  41f6b5:	ret    0xd264
  41f6b8:	test   eax,0x5b36924f
  41f6bd:	call   0xe46d3d41
  41f6c2:	lock int 0xd9
  41f6c5:	call   0x5db:0xaedbdb48
  41f6cc:	adc    DWORD PTR [ebp-0x5faf8442],0x3f
  41f6d3:	test   eax,0xe0e0872f
  41f6d8:	inc    esp
  41f6d9:	lahf   
  41f6da:	add    BYTE PTR [eax],al
  41f6dc:	popf   
  41f6dd:	paddd  mm4,QWORD PTR [esi+edi*8-0x6c0200b]
  41f6e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6e6:	mov    bl,0x6e
  41f6e8:	and    esi,DWORD PTR [ecx]
  41f6ea:	jg     0x41f6ea
  41f6ec:	mov    ds:0x86000173,al
  41f6f1:	add    al,BYTE PTR [eax]
  41f6f3:	add    BYTE PTR [eax-0x7d],ch
  41f6f6:	(bad)  
  41f6f7:	cmp    bl,BYTE PTR cs:[esi-0x310f288a]
  41f6fe:	inc    ebx
  41f6ff:	std    
  41f700:	popa   
  41f701:	sub    al,0x76
  41f703:	rcr    BYTE PTR [edx],cl
  41f705:	stos   BYTE PTR es:[edi],al
  41f706:	jmp    0x771f7888
  41f70b:	cmp    esi,0xbc738884
  41f711:	fisttp WORD PTR [esi-0x70fcbd0d]
  41f717:	add    cl,cl
  41f719:	retf   
  41f71a:	je     0x41f6b5
  41f71c:	add    al,0xdc
  41f71e:	ins    DWORD PTR es:[edi],dx
  41f71f:	shld   DWORD PTR [eax+edx*8],ebp,cl
  41f723:	arpl   di,dx
  41f725:	int3   
  41f726:	ins    DWORD PTR es:[edi],dx
  41f727:	mov    ecx,gs
  41f729:	aam    0xe8
  41f72b:	call   0x4064:0xb9c3ae5
  41f732:	mov    ds:0x916a1f0c,al
  41f737:	mov    edi,DWORD PTR [edx]
  41f739:	push   ebp
  41f73a:	dec    ecx
  41f73b:	mov    BYTE PTR [ebp-0x65157e7e],ah
  41f741:	loope  0x41f7a1
  41f743:	add    al,0xe3
  41f745:	rcr    DWORD PTR [esi-0x78422d79],0xb2
  41f74c:	sbb    eax,0xe1d32f54
  41f752:	ins    BYTE PTR es:[edi],dx
  41f753:	and    dh,ch
  41f755:	aam    0x8e
  41f757:	xchg   esp,eax
  41f758:	ja     0x41f7ce
  41f75a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f75b:	mov    ebp,0xa0486196
  41f760:	leave  
  41f761:	inc    edi
  41f762:	lods   al,BYTE PTR ds:[esi]
  41f763:	push   ss
  41f764:	mov    esp,0x76c62385
  41f769:	mov    dl,0xc7
  41f76b:	or     dh,al
  41f76d:	iret   
  41f76e:	sub    al,0x51
  41f770:	je     0x41f736
  41f772:	sub    al,BYTE PTR [ecx-0x137079a8]
  41f778:	in     eax,0x64
  41f77a:	fst    QWORD PTR [ebp+0xfc27d6f]
  41f780:	test   BYTE PTR [ebx+0x553be71b],0xfb
  41f787:	mov    ebx,0xfe5a77e3
  41f78c:	imul   DWORD PTR [edi]
  41f78e:	mov    al,ah
  41f790:	je     0x41f73c
  41f792:	mov    esp,0x21d48a29
  41f797:	lods   eax,DWORD PTR ds:[esi]
  41f798:	je     0x41f71d
  41f79a:	jno    0x41f737
  41f79c:	stos   BYTE PTR es:[edi],al
  41f79d:	xchg   BYTE PTR [edx+0x4b],bl
  41f7a0:	sqrtps xmm0,xmm7
  41f7a3:	stc    
  41f7a4:	sub    ebp,edx
  41f7a6:	popf   
  41f7a7:	sbb    dh,BYTE PTR [ebp+0x32]
  41f7aa:	push   esp
  41f7ab:	or     DWORD PTR [ecx-0x7d],edx
  41f7ae:	aaa    
  41f7af:	xchg   edi,eax
  41f7b0:	das    
  41f7b1:	sub    BYTE PTR [ebp-0x78],bh
  41f7b4:	and    eax,0xaafec1e1
  41f7b9:	inc    esi
  41f7ba:	out    0x97,al
  41f7bc:	gs pop ds
  41f7be:	cmp    ch,BYTE PTR [ebp+0x61fa18c3]
  41f7c4:	inc    ebx
  41f7c5:	stos   DWORD PTR es:[edi],eax
  41f7c6:	scas   al,BYTE PTR es:[edi]
  41f7c7:	xor    al,0x95
  41f7c9:	dec    DWORD PTR [ebx+0x3e]
  41f7cc:	mov    bl,0x82
  41f7ce:	and    eax,0x32bbb970
  41f7d3:	imul   edi,DWORD PTR ds:[edx-0xe],0xffffffb6
  41f7d8:	xchg   esp,eax
  41f7d9:	xlat   BYTE PTR ds:[ebx]
  41f7da:	ret    0xe694
  41f7dd:	in     eax,0x28
  41f7df:	push   edx
  41f7e0:	push   esi
  41f7e1:	popa   
  41f7e2:	repnz loope 0x41f7b6
  41f7e5:	xchg   esi,eax
  41f7e6:	or     BYTE PTR [edx+ebx*1],ch
  41f7e9:	call   0x4491:0x41e86c69
  41f7f0:	cmp    eax,0x755916de
  41f7f5:	sbb    DWORD PTR [esi-0x657be0dd],edx
  41f7fb:	retf   
  41f7fc:	xor    DWORD PTR [edx+0x4],0x11
  41f800:	xchg   esp,eax
  41f801:	aam    0x50
  41f803:	jne    0x41f7bc
  41f805:	mov    ebp,0x11acaae2
  41f80a:	ret    
  41f80b:	mov    dh,0xf3
  41f80d:	out    0xaa,al
  41f80f:	clc    
  41f810:	xor    BYTE PTR [ecx+0x71],0x62
  41f814:	(bad)  
  41f815:	xlat   BYTE PTR ds:[ebx]
  41f816:	push   cs
  41f817:	outs   dx,BYTE PTR ds:[esi]
  41f818:	adc    eax,0xd489f53
  41f81d:	enter  0xa24e,0x6c
  41f821:	aad    0x4
  41f823:	repz frstor [ebx+0x48f8f535]
  41f82a:	lock iret 
  41f82c:	pushf  
  41f82d:	test   ebp,esi
  41f82f:	gs mov cl,0xe4
  41f832:	outs   dx,DWORD PTR ds:[esi]
  41f833:	push   ebx
  41f834:	mov    eax,0xb6002c56
  41f839:	scas   al,BYTE PTR es:[edi]
  41f83a:	mov    dh,BYTE PTR [esi-0x6df7fccb]
  41f840:	repz je 0x41f8b7
  41f843:	xor    BYTE PTR [ebx+0x7b],ah
  41f846:	xchg   edx,eax
  41f847:	jmp    DWORD PTR [ebx]
  41f849:	jb     0x41f873
  41f84b:	add    DWORD PTR [ebx+ebp*8],ebx
  41f84e:	add    al,0x55
  41f850:	rcl    DWORD PTR [edx-0x4923c364],0x5b
  41f857:	jno    0x41f872
  41f859:	int    0x42
  41f85b:	(bad)  
  41f85c:	cmp    bl,ah
  41f85e:	lock sar ecx,1
  41f861:	clc    
  41f862:	dec    ecx
  41f863:	scas   al,BYTE PTR es:[edi]
  41f864:	push   esi
  41f865:	(bad)  
  41f866:	pop    ss
  41f867:	mov    WORD PTR [ecx],ss
  41f869:	lods   eax,DWORD PTR ds:[esi]
  41f86a:	and    BYTE PTR [eax-0x2154d8b6],bh
  41f870:	mov    eax,0xa6f68349
  41f875:	jle    0x41f89a
  41f877:	inc    ebp
  41f878:	cwde   
  41f879:	add    dl,BYTE PTR [esi-0x1873586d]
  41f87f:	out    dx,eax
  41f880:	scas   al,BYTE PTR es:[edi]
  41f881:	loopne 0x41f8dd
  41f883:	dec    esi
  41f884:	sahf   
  41f885:	mov    bh,0x60
  41f887:	sbb    al,0x7e
  41f889:	mov    al,0x6
  41f88b:	stos   DWORD PTR es:[edi],eax
  41f88c:	mov    bh,0x44
  41f88e:	rcl    edi,1
  41f890:	mov    bh,0xbe
  41f892:	fwait
  41f893:	xor    eax,0x3f486aff
  41f898:	sub    ebx,DWORD PTR [ecx-0x77]
  41f89b:	or     eax,DWORD PTR [ecx-0x5e9decff]
  41f8a1:	pop    ss
  41f8a2:	repz adc al,0xa4
  41f8a5:	mov    ebx,0xfd5167f4
  41f8aa:	mov    cl,0xf1
  41f8ac:	mov    ds:0xaed27319,eax
  41f8b1:	add    eax,DWORD PTR [edx+edi*1-0x449bf55f]
  41f8b8:	xlat   BYTE PTR ds:[ebx]
  41f8b9:	(bad)  
  41f8ba:	pop    ss
  41f8bb:	jmp    0x13a32469
  41f8c0:	lahf   
  41f8c1:	xchg   esi,esp
  41f8c3:	and    eax,0x36e8abf3
  41f8c8:	cdq    
  41f8c9:	mov    fs,WORD PTR [ebx-0x1c704671]
  41f8cf:	or     eax,0x2e885cbf
  41f8d4:	sbb    al,0x4e
  41f8d6:	cwde   
  41f8d7:	stos   DWORD PTR es:[edi],eax
  41f8d8:	loopne 0x41f8a1
  41f8da:	ss popf 
  41f8dc:	sbb    eax,0x5432339c
  41f8e1:	xchg   ebp,eax
  41f8e2:	ss jle 0x41f8de
  41f8e5:	mov    edi,0x20527d1a
  41f8ea:	std    
  41f8eb:	leave  
  41f8ec:	aas    
  41f8ed:	js     0x41f884
  41f8ef:	dec    ebx
  41f8f0:	add    bl,BYTE PTR [esi+0x3a]
  41f8f3:	scas   eax,DWORD PTR es:[edi]
  41f8f4:	and    BYTE PTR [edi+0x41],ch
  41f8f7:	js     0x41f8a1
  41f8f9:	out    dx,eax
  41f8fa:	sbb    dh,BYTE PTR [edi-0x11]
  41f8fd:	sbb    eax,0x1ffceef2
  41f902:	mov    al,0x59
  41f904:	xchg   esp,eax
  41f905:	sbb    al,0xbf
  41f907:	outs   dx,DWORD PTR ds:[esi]
  41f908:	ja     0x41f8a0
  41f90a:	jecxz  0x41f8c5
  41f90c:	(bad)  
  41f90d:	pop    edi
  41f90e:	mov    ebx,0x6708b50f
  41f913:	cmp    ebx,DWORD PTR [edi]
  41f915:	daa    
  41f916:	push   es
  41f917:	push   ebx
  41f918:	daa    
  41f919:	ja     0x41f8ce
  41f91b:	int    0xa5
  41f91d:	sar    eax,1
  41f91f:	popa   
  41f920:	lahf   
  41f921:	jp     0x41f994
  41f923:	icebp  
  41f924:	and    al,0xe1
  41f926:	daa    
  41f927:	dec    eax
  41f928:	pop    es
  41f929:	je     0x41f986
  41f92b:	es pop edi
  41f92d:	scas   eax,DWORD PTR es:[edi]
  41f92e:	stc    
  41f92f:	sub    DWORD PTR [esp+ecx*2-0x6db7b8b2],ebx
  41f936:	out    dx,al
  41f937:	jmp    0x5bda3125
  41f93c:	imul   esi,esi,0x4c
  41f93f:	cmp    BYTE PTR [edi],dh
  41f941:	(bad)  
  41f942:	lds    edi,FWORD PTR [ebp-0x202e0bf8]
  41f948:	jp     0x41f9b3
  41f94a:	in     eax,0x5d
  41f94c:	leave  
  41f94d:	jae    0x41f8da
  41f94f:	jne    0x41f8dd
  41f951:	sub    al,0x2d
  41f953:	outs   dx,DWORD PTR ds:[esi]
  41f954:	push   0xe53f2ab3
  41f959:	push   edx
  41f95a:	cmp    DWORD PTR [ebx],eax
  41f95c:	leave  
  41f95d:	xor    ah,ch
  41f95f:	mov    eax,0x98b09b73
  41f964:	add    eax,0xfa273d47
  41f969:	rcr    BYTE PTR [eax-0x6d],1
  41f96c:	stos   BYTE PTR es:[di],al
  41f96e:	dec    edi
  41f96f:	pop    ebp
  41f970:	lds    edi,FWORD PTR [esi+0x48]
  41f973:	push   es
  41f974:	sbb    al,0xd
  41f976:	jnp    0x41f98d
  41f978:	adc    esp,DWORD PTR [eax+0x0]
  41f97b:	add    BYTE PTR [eax],ah
  41f97d:	push   ss
  41f97e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f97f:	lea    esi,[esi+0x25bf29bf]
  41f985:	lods   eax,DWORD PTR ds:[esi]
  41f986:	and    dl,al
  41f988:	push   es
  41f989:	jl     0x41f925
  41f98b:	leave  
  41f98c:	sub    BYTE PTR [esi+0x1],dh
  41f98f:	add    BYTE PTR [esi-0x49fffffe],al
  41f995:	in     al,dx
  41f996:	mov    ecx,0xddfb672b
  41f99b:	mov    eax,0x685155a0
  41f9a0:	retf   
  41f9a1:	xor    eax,DWORD PTR [edi+eax*1]
  41f9a4:	aas    
  41f9a5:	(bad)  
  41f9a6:	stos   DWORD PTR es:[edi],eax
  41f9a7:	xlat   BYTE PTR ds:[ebx]
  41f9a8:	test   eax,0x489730a
  41f9ad:	mov    ch,0x9d
  41f9af:	loop   0x41f942
  41f9b1:	bound  ebx,QWORD PTR [edi-0x40]
  41f9b4:	pop    edi
  41f9b5:	sbb    cl,al
  41f9b7:	dec    esp
  41f9b8:	or     eax,0xeaa37f03
  41f9bd:	aam    0xaf
  41f9bf:	add    BYTE PTR [edi-0x36],0x68
  41f9c3:	(bad)  
  41f9c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9c6:	xchg   ebp,eax
  41f9c7:	dec    edi
  41f9c8:	pop    edi
  41f9c9:	bnd jl 0x41f9c0
  41f9cc:	mov    esi,0x2ca556eb
  41f9d1:	pusha  
  41f9d2:	xor    BYTE PTR [ecx+ebx*1],ch
  41f9d5:	ss push ebp
  41f9d7:	mov    bl,BYTE PTR cs:[esi]
  41f9da:	mov    al,0x22
  41f9dc:	fwait
  41f9dd:	and    eax,0xad8f4860
  41f9e2:	rcl    BYTE PTR [ebx+edi*2-0x32],cl
  41f9e6:	xchg   esi,eax
  41f9e7:	lock mov ebx,0xa28c42b6
  41f9ed:	shr    BYTE PTR [edi+0x7b],0x8a
  41f9f1:	jno    0x41fa1e
  41f9f3:	jle    0x41fa08
  41f9f5:	hlt    
  41f9f6:	add    edx,DWORD PTR [ebp-0x158c4bbb]
  41f9fc:	xchg   esp,eax
  41f9fd:	sbb    DWORD PTR [ebx-0x7ce85369],ecx
  41fa03:	add    eax,0xbd1a8e3a
  41fa08:	mov    DWORD PTR [ebx+0x13],ecx
  41fa0b:	cmp    ch,BYTE PTR [ecx+edi*4]
  41fa0e:	push   ds
  41fa0f:	xchg   esi,eax
  41fa10:	out    0xae,eax
  41fa12:	hlt    
  41fa13:	xor    eax,0x89b34fa1
  41fa18:	fisub  WORD PTR [esi+0x60668bc6]
  41fa1e:	mov    bl,0x6
  41fa20:	or     ah,BYTE PTR ds:0xbb718f6b
  41fa26:	mov    DWORD PTR [esi+ebp*8],esi
  41fa29:	push   cs
  41fa2a:	das    
  41fa2b:	jecxz  0x41f9be
  41fa2d:	ja     0x41f9f6
  41fa2f:	xchg   edi,eax
  41fa30:	out    dx,al
  41fa31:	xor    ch,cl
  41fa33:	mov    ah,0xb2
  41fa35:	lock ret 0x7bfa
  41fa39:	push   es
  41fa3a:	pop    ebx
  41fa3b:	aaa    
  41fa3c:	popa   
  41fa3d:	arpl   WORD PTR [ebp-0x4d5799c2],cx
  41fa43:	aas    
  41fa44:	ret    
  41fa45:	xor    al,0x19
  41fa47:	sub    esi,DWORD PTR [eax-0x304e9ed5]
  41fa4d:	xchg   ebp,eax
  41fa4e:	int    0x16
  41fa50:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa52:	mov    eax,ds:0x5a201baa
  41fa57:	fild   WORD PTR [ecx+0x57]
  41fa5a:	arpl   WORD PTR [esi-0x41],cx
  41fa5d:	xchg   edi,eax
  41fa5e:	(bad)
  41fa63:	out    0xc,eax
  41fa65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa66:	ins    BYTE PTR es:[edi],dx
  41fa67:	mov    bh,0x14
  41fa69:	pop    esp
  41fa6a:	int3   
  41fa6b:	jge    0x41fa68
  41fa6d:	in     al,0x11
  41fa6f:	in     al,dx
  41fa70:	mov    eax,0x9627f8a
  41fa75:	aaa    
  41fa76:	pushf  
  41fa77:	add    cl,BYTE PTR [edx+0xe]
  41fa7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa7b:	xchg   DWORD PTR ds:0xcd638374,ebp
  41fa81:	sbb    al,0x3b
  41fa83:	(bad)  
  41fa84:	ins    BYTE PTR es:[edi],dx
  41fa85:	or     al,0xaa
  41fa87:	inc    ebx
  41fa88:	rcl    DWORD PTR [esi+0x30],cl
  41fa8b:	mov    edx,0xfb90ba8d
  41fa90:	scas   eax,DWORD PTR es:[edi]
  41fa91:	aad    0x2a
  41fa93:	sahf   
  41fa94:	or     ch,bh
  41fa96:	fs (bad) 
  41fa98:	inc    ah
  41fa9a:	popf   
  41fa9b:	sti    
  41fa9c:	je     0x41facb
  41fa9e:	push   edx
  41fa9f:	pop    es
  41faa0:	dec    ecx
  41faa1:	or     al,0x8c
  41faa3:	ret    0xccad
  41faa6:	sti    
  41faa7:	mov    bl,0x47
  41faa9:	leave  
  41faaa:	cmp    al,0x40
  41faac:	push   es
  41faad:	jmp    0xf547:0x78375990
  41fab4:	jmp    0x44ed6e80
  41fab9:	pop    esi
  41faba:	lahf   
  41fabb:	pop    es
  41fabc:	mov    ecx,0x1c6c53f8
  41fac1:	call   0x16e7d9ac
  41fac6:	pop    ebp
  41fac7:	xor    eax,0xfed9498d
  41facc:	pop    ss
  41facd:	out    dx,eax
  41face:	cld    
  41facf:	outs   dx,DWORD PTR ds:[esi]
  41fad0:	retf   0x2a48
  41fad3:	(bad)  
  41fad4:	stc    
  41fad5:	test   eax,0x306c776b
  41fada:	jnp    0x41faea
  41fadc:	adc    al,0xba
  41fade:	jecxz  0x41faf6
  41fae0:	cmp    eax,0xd96cba54
  41fae5:	fstp   DWORD PTR [ecx]
  41fae7:	outs   dx,BYTE PTR ds:[esi]
  41fae8:	jmp    0x84b0:0xc16d5414
  41faef:	jae    0x41fb15
  41faf1:	sar    DWORD PTR [ebp-0x42],cl
  41faf4:	adc    esp,ebx
  41faf6:	add    BYTE PTR [ebx],0x16
  41faf9:	dec    ebx
  41fafa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fafb:	cmp    BYTE PTR [eax-0x78],dl
  41fafe:	pop    edx
  41faff:	inc    edi
  41fb00:	and    DWORD PTR [esi+eiz*4+0x51],edx
  41fb04:	pop    esi
  41fb05:	mov    ecx,0xb124aa81
  41fb0a:	jge    0x41faf3
  41fb0c:	push   edx
  41fb0d:	lods   al,BYTE PTR ds:[esi]
  41fb0e:	inc    edx
  41fb0f:	sub    ecx,DWORD PTR [edx+0x54c7f099]
  41fb15:	jbe    0x41fb36
  41fb17:	out    0x54,al
  41fb19:	or     al,0x3d
  41fb1b:	test   BYTE PTR [ebx-0x2a6093c8],ah
  41fb21:	mov    dh,0x49
  41fb23:	hlt    
  41fb24:	psadbw mm4,QWORD PTR [edi+0x3c1d3a99]
  41fb2b:	dec    ebp
  41fb2c:	in     al,0xe1
  41fb2e:	not    ah
  41fb30:	pop    es
  41fb31:	sti    
  41fb32:	xor    eax,0x4b497dd5
  41fb37:	mov    esi,0x9f3fb20
  41fb3c:	sub    ebx,DWORD PTR [ecx+0x3e57473d]
  41fb42:	sbb    dl,BYTE PTR [esi+edi*1]
  41fb45:	retf   0x132c
  41fb48:	std    
  41fb49:	xchg   ecx,eax
  41fb4a:	in     eax,0xe0
  41fb4c:	dec    ecx
  41fb4d:	sbb    DWORD PTR [ebx-0x2ac5315c],ecx
  41fb53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb55:	xor    ecx,DWORD PTR [ebp-0x47]
  41fb58:	xchg   BYTE PTR [edi-0x31861706],dl
  41fb5e:	push   es
  41fb5f:	jecxz  0x41fb92
  41fb61:	push   ecx
  41fb62:	rcr    BYTE PTR [ebx],0x1d
  41fb65:	mov    dl,0x5d
  41fb67:	jbe    0x41fb4d
  41fb69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb6a:	aaa    
  41fb6b:	(bad)  
  41fb6d:	fnop   
  41fb6f:	adc    al,0x80
  41fb71:	stc    
  41fb72:	xchg   DWORD PTR [esi],ecx
  41fb74:	hlt    
  41fb75:	into   
  41fb76:	outs   dx,BYTE PTR ds:[esi]
  41fb77:	retf   0x2e7
  41fb7a:	mov    cl,0xc8
  41fb7c:	pop    ss
  41fb7d:	add    BYTE PTR [eax+esi*8-0x346f79da],cl
  41fb84:	test   esi,ecx
  41fb86:	cmp    edi,DWORD PTR [edx]
  41fb88:	add    DWORD PTR [ebp-0x47],ecx
  41fb8b:	mov    dx,WORD PTR [ebx-0x33c384e1]
  41fb92:	test   BYTE PTR [eax],bl
  41fb94:	or     ch,BYTE PTR [ecx-0x2d]
  41fb97:	xor    ecx,DWORD PTR [edi]
  41fb99:	nop
  41fb9a:	sub    dh,BYTE PTR [ebx]
  41fb9c:	out    0x10,eax
  41fb9e:	arpl   WORD PTR [edi+0x61c7d69b],sp
  41fba4:	cmp    al,0xff
  41fba6:	mov    WORD PTR [eax+0x62],ds
  41fba9:	add    DWORD PTR [ecx+0x67191541],ecx
  41fbaf:	fidiv  DWORD PTR [eax+0x52]
  41fbb2:	push   esp
  41fbb3:	lea    ecx,[edx]
  41fbb5:	out    0xf5,al
  41fbb7:	leave  
  41fbb8:	pop    esp
  41fbb9:	cmp    DWORD PTR [ecx+0x47dfad22],ebx
  41fbbf:	and    cl,BYTE PTR [eax+0x40e1cacd]
  41fbc5:	add    esi,eax
  41fbc7:	stc    
  41fbc8:	push   ds
  41fbc9:	mov    ebx,0x36a38b98
  41fbce:	(bad)  
  41fbcf:	lods   eax,DWORD PTR ds:[esi]
  41fbd0:	and    eax,0x3b133443
  41fbd5:	cli    
  41fbd6:	jmp    0x41fc00
  41fbd8:	fstp   QWORD PTR [ebx]
  41fbda:	sub    BYTE PTR [edi],cl
  41fbdc:	xor    cl,BYTE PTR [edx-0x18]
  41fbdf:	xchg   edi,eax
  41fbe0:	add    eax,0x600bf391
  41fbe5:	popa   
  41fbe6:	inc    esp
  41fbe7:	mov    edi,0x20a46643
  41fbec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbed:	and    cl,BYTE PTR [edx]
  41fbef:	xor    al,0x11
  41fbf1:	pop    ebx
  41fbf2:	dec    ebx
  41fbf3:	ret    0x6fb5
  41fbf6:	inc    ecx
  41fbf7:	pop    es
  41fbf8:	cmp    DWORD PTR [eax],edx
  41fbfa:	push   esp
  41fbfb:	cmc    
  41fbfc:	sbb    BYTE PTR [ebx-0x2f],0x26
  41fc00:	mov    edx,DWORD PTR [edx]
  41fc02:	pop    esp
  41fc03:	daa    
  41fc04:	push   ebp
  41fc05:	pop    edx
  41fc06:	sub    al,ch
  41fc08:	mov    edx,0xee12d227
  41fc0d:	aaa    
  41fc0e:	les    ecx,FWORD PTR [ecx+0x517b1b38]
  41fc14:	lods   al,BYTE PTR ds:[esi]
  41fc15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc16:	push   ebp
  41fc17:	inc    edi
  41fc18:	rcr    al,0x0
  41fc1b:	add    BYTE PTR [eax-0x4456c5cd],dh
  41fc21:	test   eax,0xb7853bb3
  41fc26:	mov    esi,0xb6ae3e0c
  41fc2b:	sub    al,0xae
  41fc2d:	js     0x41fc30
  41fc2f:	add    BYTE PTR [esi+0x44000002],al
  41fc35:	aaa    
  41fc36:	mov    al,ds:0xc233c72e
  41fc3b:	sbb    ch,0x85
  41fc3e:	fstp   QWORD PTR [ecx]
  41fc40:	setnp  BYTE PTR [ebp+0x60]
  41fc44:	mov    ch,0xd3
  41fc46:	sub    ebp,eax
  41fc48:	push   eax
  41fc49:	ja     0x41fc9d
  41fc4b:	push   es
  41fc4c:	add    eax,DWORD PTR [ecx+eax*1+0x660c2694]
  41fc53:	cld    
  41fc54:	xor    eax,ebp
  41fc56:	pop    ebp
  41fc57:	ds or  esi,esp
  41fc5a:	call   0x7cb73a34
  41fc5f:	mov    ecx,0x2d1653da
  41fc64:	mov    WORD PTR [ebp-0x73795ea1],?
  41fc6a:	sbb    ebp,DWORD PTR [eiz*2+0x32a4288c]
  41fc71:	retf   0x3e71
  41fc74:	idiv   DWORD PTR [edi+ebx*1]
  41fc77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc78:	mov    ecx,0xb4d263ee
  41fc7d:	jnp    0x41fc89
  41fc7f:	dec    ebx
  41fc80:	add    eax,0xb196e07c
  41fc85:	adc    dl,BYTE PTR [ebp-0x49]
  41fc88:	jae    0x41fc67
  41fc8a:	mov    edi,DWORD PTR ss:[esi]
  41fc8d:	or     DWORD PTR [edi+ebx*2],esp
  41fc90:	dec    ecx
  41fc91:	xchg   edi,eax
  41fc92:	popa   
  41fc93:	adc    al,BYTE PTR [ebp+0x481f4b3d]
  41fc99:	and    eax,0x3baec0ff
  41fc9e:	mov    al,0xf4
  41fca0:	aas    
  41fca1:	idiv   DWORD PTR [ecx-0x4a94e2ed]
  41fca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fca8:	xchg   edx,eax
  41fca9:	xlat   BYTE PTR ds:[ebx]
  41fcaa:	aam    0xa7
  41fcac:	cmp    al,0x72
  41fcae:	je     0x41fd2f
  41fcb0:	cmc    
  41fcb1:	mov    dl,bh
  41fcb3:	fld    QWORD PTR [ebp+0x77]
  41fcb6:	cmp    DWORD PTR [esi],ebx
  41fcb8:	cs cli 
  41fcba:	push   0xffffffcb
  41fcbc:	ds into 
  41fcbe:	int3   
  41fcbf:	fadd   QWORD PTR [ebp+0x6d7562cd]
  41fcc5:	daa    
  41fcc6:	jge    0x41fd06
  41fcc8:	push   es
  41fcc9:	or     al,0xb0
  41fccb:	in     eax,0xf0
  41fccd:	mov    bh,0x5c
  41fccf:	cmp    esp,DWORD PTR [ebx]
  41fcd1:	ret    
  41fcd2:	rcr    BYTE PTR [ecx-0x37d4a582],cl
  41fcd8:	lock ret 0xf327
  41fcdc:	mov    ecx,0x49084f45
  41fce1:	ficom  DWORD PTR [edi]
  41fce3:	sbb    DWORD PTR [ebp+0x3a],ebx
  41fce6:	and    al,0x64
  41fce8:	test   cl,0xdc
  41fceb:	lock sub eax,ecx
  41fcee:	sar    BYTE PTR [ecx+0x4b62316c],cl
  41fcf4:	dec    ebx
  41fcf5:	xlat   BYTE PTR ds:[ebx]
  41fcf6:	mov    esp,0xa98aaa3b
  41fcfb:	repnz or BYTE PTR [edi+0x6c],bh
  41fcff:	or     al,BYTE PTR [edi-0x42]
  41fd02:	xor    cl,BYTE PTR [ebp-0x11]
  41fd05:	ret    0x4e83
  41fd08:	icebp  
  41fd09:	sbb    al,0x61
  41fd0b:	mov    dl,0x37
  41fd0d:	psllq  mm7,QWORD PTR [edx+edx*8-0x41]
  41fd12:	into   
  41fd13:	fisttp WORD PTR [ebp-0x737eccc3]
  41fd19:	enter  0x47a6,0xd6
  41fd1d:	shl    dh,cl
  41fd1f:	loope  0x41fce8
  41fd21:	xchg   ebx,eax
  41fd22:	iret   
  41fd23:	xchg   edi,eax
  41fd24:	inc    edx
  41fd25:	mov    bh,0x92
  41fd27:	out    0xd1,eax
  41fd29:	push   edi
  41fd2a:	das    
  41fd2b:	inc    ecx
  41fd2c:	xor    edi,DWORD PTR [ebx-0x2f9508d6]
  41fd32:	cld    
  41fd33:	imul   DWORD PTR [ebp+0x13550bce]
  41fd39:	sti    
  41fd3a:	das    
  41fd3b:	idiv   BYTE PTR [esi-0xcf6e216]
  41fd41:	or     cl,BYTE PTR [esi]
  41fd43:	and    ah,BYTE PTR [edi]
  41fd45:	mov    ecx,0x4e0fb334
  41fd4a:	pusha  
  41fd4b:	xchg   esp,eax
  41fd4c:	mov    esi,0xbfdd1d11
  41fd51:	mov    al,ds:0xb452790d
  41fd56:	mov    eax,0x367d45a9
  41fd5b:	sbb    al,0x65
  41fd5d:	add    al,0xca
  41fd5f:	sahf   
  41fd60:	lods   eax,DWORD PTR ds:[esi]
  41fd61:	cmp    esi,DWORD PTR [ebx]
  41fd63:	pop    ss
  41fd64:	push   es
  41fd65:	bound  ebx,QWORD PTR [ecx+0x641cc66d]
  41fd6b:	add    dl,BYTE PTR [ecx-0x42]
  41fd6e:	xchg   esi,eax
  41fd6f:	cld    
  41fd70:	cld    
  41fd71:	sub    ebp,DWORD PTR ds:0x2f17664a
  41fd77:	enter  0xd509,0x6
  41fd7b:	hlt    
  41fd7c:	shl    DWORD PTR [ecx+0x63],0xb3
  41fd80:	into   
  41fd81:	aam    0x91
  41fd83:	sbb    al,0xd4
  41fd85:	sub    al,BYTE PTR [esi]
  41fd87:	xchg   ecx,edi
  41fd89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd8a:	adc    BYTE PTR [ecx],cl
  41fd8c:	imul   edx,DWORD PTR [esi-0x3b732dc5],0x236aa929
  41fd96:	(bad)  
  41fd97:	popa   
  41fd98:	jecxz  0x41fd41
  41fd9a:	xor    bh,BYTE PTR [ecx+0x56]
  41fd9d:	std    
  41fd9e:	mov    DWORD PTR [esi],edx
  41fda0:	lock test BYTE PTR [ebp+0x2],bh
  41fda4:	ds jnp 0x41fde6
  41fda7:	imul   esp,DWORD PTR [ebx],0x63
  41fdaa:	call   0xe7c:0xf336e877
  41fdb1:	retf   0x2995
  41fdb4:	xor    ah,BYTE PTR ds:0xe4f8a88b
  41fdba:	inc    edx
  41fdbb:	jnp    0x41fdc1
  41fdbd:	xchg   ebp,eax
  41fdbe:	in     eax,0x93
  41fdc0:	stos   DWORD PTR es:[edi],eax
  41fdc1:	mov    es,WORD PTR [ecx]
  41fdc3:	or     al,bl
  41fdc5:	cmp    al,0x83
  41fdc7:	ja     0x41fddf
  41fdc9:	sbb    esp,ebx
  41fdcb:	scas   eax,DWORD PTR es:[edi]
  41fdcc:	aas    
  41fdcd:	cli    
  41fdce:	pop    ds
  41fdcf:	and    BYTE PTR [eax-0x7],bh
  41fdd2:	fstp   DWORD PTR [edx+ecx*4+0x43a626bc]
  41fdd9:	repz push ebp
  41fddb:	js     0x41fdeb
  41fddd:	mov    cl,0x38
  41fddf:	sub    cl,ah
  41fde1:	push   ss
  41fde2:	add    DWORD PTR [edi],esi
  41fde4:	(bad)  
  41fde5:	fisttp DWORD PTR [ecx]
  41fde7:	leave  
  41fde8:	in     eax,0xcf
  41fdea:	xchg   ebx,eax
  41fdeb:	xor    DWORD PTR [ecx],ebx
  41fded:	push   ds
  41fdee:	or     al,0xf6
  41fdf0:	adc    eax,0x9f58093c
  41fdf5:	cwde   
  41fdf6:	xor    al,0x21
  41fdf8:	mov    eax,DWORD PTR [edx]
  41fdfa:	pushf  
  41fdfb:	sub    edi,ebx
  41fdfd:	and    esi,0x7
  41fe00:	out    dx,eax
  41fe01:	and    esp,DWORD PTR [ebp-0x8]
  41fe04:	aad    0xda
  41fe06:	xor    bl,0xf2
  41fe09:	test   BYTE PTR es:[esi],cl
  41fe0c:	and    esi,DWORD PTR [edi]
  41fe0e:	jle    0x41fe6d
  41fe10:	fadd   QWORD PTR [ecx-0x56e52285]
  41fe16:	bound  edx,QWORD PTR [ecx+0x6a]
  41fe19:	div    BYTE PTR [ebx+ebx*1]
  41fe1c:	jp     0x41fe1b
  41fe1e:	mov    gs,WORD PTR [edx+0x78d4b8b1]
  41fe24:	mov    al,ds:0x2ebec54d
  41fe29:	(bad)  
  41fe2a:	dec    edi
  41fe2b:	pop    es
  41fe2c:	and    BYTE PTR [esi-0x3d],0x8b
  41fe30:	jl     0x41fdfb
  41fe32:	cmp    bl,bh
  41fe34:	sbb    dh,bl
  41fe36:	inc    ecx
  41fe37:	and    eax,0x3e8e5e45
  41fe3c:	stos   DWORD PTR es:[edi],eax
  41fe3d:	(bad)  
  41fe3e:	stc    
  41fe3f:	mov    bh,0x20
  41fe41:	cmp    DWORD PTR [eax+0x6a],esp
  41fe44:	and    al,0xa1
  41fe46:	jae    0x41fe15
  41fe48:	sub    al,ch
  41fe4a:	push   ebx
  41fe4b:	jae    0x41fddc
  41fe4d:	or     DWORD PTR [edi+0x25],eax
  41fe50:	(bad)  
  41fe51:	xlat   BYTE PTR ds:[ebx]
  41fe52:	call   0x94cd:0x3610521d
  41fe59:	fisub  WORD PTR [ebx]
  41fe5b:	mov    ds:0xd55cc1da,al
  41fe60:	mov    edx,0xc5d6f581
  41fe65:	les    edi,FWORD PTR [esi+0x27]
  41fe68:	or     eax,0xc6fb6881
  41fe6d:	mov    eax,ds:0xca5a4f79
  41fe72:	jmp    0x5f4e:0xa25202e0
  41fe79:	jecxz  0x41fdfc
  41fe7b:	xor    ecx,DWORD PTR [edi+0x8be9ebc]
  41fe81:	mov    edi,0x63e46628
  41fe86:	lock push eax
  41fe88:	nop
  41fe89:	jg     0x41fe60
  41fe8b:	js     0x41fef8
  41fe8d:	out    0xe2,al
  41fe8f:	xor    eax,0xe35dcd3a
  41fe94:	mov    eax,ds:0xadb09ff1
  41fe99:	adc    DWORD PTR [esi+0x2],ebx
  41fe9c:	je     0x41fe4a
  41fe9e:	loop   0x41fe5c
  41fea0:	ror    BYTE PTR [ebx+ebx*4+0x6c],1
  41fea4:	mov    WORD PTR [bx],ds
  41fea7:	push   ecx
  41fea8:	mov    al,ds:0xeb16993f
  41fead:	adc    al,0x6a
  41feaf:	ss dec eax
  41feb1:	and    ch,BYTE PTR [ecx]
  41feb3:	clc    
  41feb4:	cmc    
  41feb5:	push   edx
  41feb6:	repnz xor DWORD PTR [edi-0x56ffffd3],edx
  41febd:	pop    esi
  41febe:	leave  
  41febf:	xchg   esp,eax
  41fec0:	call   DWORD PTR [edi-0x1bf58003]
  41fec6:	cdq    
  41fec7:	pop    ecx
  41fec8:	stc    
  41fec9:	outs   dx,BYTE PTR ds:[esi]
  41feca:	cmc    
  41fecb:	dec    eax
  41fecc:	xor    al,0x7b
  41fece:	add    DWORD PTR [eax],eax
  41fed0:	xchg   BYTE PTR [edx],al
  41fed2:	add    BYTE PTR [eax],al
  41fed4:	fucomi st,st(3)
  41fed6:	dec    ebp
  41fed7:	fsubr  DWORD PTR [eax]
  41fed9:	inc    esi
  41feda:	lods   eax,DWORD PTR ds:[esi]
  41fedb:	imul   esp,DWORD PTR [ecx],0xffffffe6
  41fede:	xchg   eax,esp
  41fee0:	push   esp
  41fee1:	loope  0x41ff15
  41fee3:	sar    edi,cl
  41fee5:	xchg   edi,eax
  41fee6:	cmp    ah,BYTE PTR [edi]
  41fee8:	or     bh,ch
  41feea:	loopne 0x41fe96
  41feec:	mov    edx,0x9e901b0f
  41fef1:	jo     0x41ff1e
  41fef3:	xchg   esi,eax
  41fef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fef5:	clc    
  41fef6:	pop    ds
  41fef7:	push   eax
  41fef8:	pop    ebx
  41fef9:	adc    cl,ah
  41fefb:	popa   
  41fefc:	sahf   
  41fefd:	add    cl,BYTE PTR [edx-0x1c]
  41ff00:	cs dec edx
  41ff02:	and    al,0x7d
  41ff04:	xchg   ecx,eax
  41ff05:	aam    0x92
  41ff07:	adc    cl,BYTE PTR [esi+0x6966b3b1]
  41ff0d:	xor    al,0x9f
  41ff0f:	xchg   BYTE PTR [esi+0x21],cl
  41ff12:	inc    esp
  41ff13:	sub    bl,ch
  41ff15:	icebp  
  41ff16:	push   esi
  41ff17:	mov    gs,edi
  41ff19:	test   eax,0x4d5f77d0
  41ff1e:	add    eax,DWORD PTR [ebx+eax*1]
  41ff21:	sub    eax,0x90d56b46
  41ff26:	test   eax,0xe7668e74
  41ff2b:	into   
  41ff2c:	stos   BYTE PTR es:[edi],al
  41ff2d:	xor    cl,ah
  41ff2f:	add    al,0xda
  41ff31:	aaa    
  41ff32:	inc    BYTE PTR [eax+0x35]
  41ff35:	xor    DWORD PTR [ebp+0x66],esp
  41ff38:	test   eax,0xad0d58de
  41ff3d:	cmp    al,0x1f
  41ff3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff40:	test   BYTE PTR [ebx+0x6e0c7fe3],dh
  41ff46:	and    DWORD PTR [eax-0x5d],ecx
  41ff49:	mov    edi,0x133b9291
  41ff4e:	adc    eax,0xdc3bc7f4
  41ff53:	and    BYTE PTR [ebp-0x68],al
  41ff56:	fmul   st,st(4)
  41ff58:	mov    esp,0x7c34fbdc
  41ff5d:	jmp    0x94d6:0x1e1f64a1
  41ff64:	cmp    ebx,0xb95187c6
  41ff6a:	jg     0x41ff66
  41ff6c:	or     DWORD PTR [ebx+0x26b2dfcb],ebp
  41ff72:	mov    edi,0xacfa2ef8
  41ff77:	popa   
  41ff78:	mov    bh,0x79
  41ff7a:	or     ebx,DWORD PTR [ebx+0x56995cfb]
  41ff80:	dec    edi
  41ff81:	push   ebx
  41ff82:	dec    ecx
  41ff83:	lock mov ebp,eax
  41ff86:	shl    DWORD PTR [esi-0x44e84f4b],0x2c
  41ff8d:	ds jge 0x41ff1a
  41ff90:	or     bl,BYTE PTR [eax-0x6b]
  41ff93:	or     eax,DWORD PTR [eax-0x69cbdb13]
  41ff99:	jp     0x41ff80
  41ff9b:	imul   ah
  41ff9d:	icebp  
  41ff9e:	lea    edx,[ebp+ebp*4+0x32]
  41ffa2:	gs hlt 
  41ffa4:	mov    al,ds:0x8cc4315b
  41ffa9:	lock dec esp
  41ffab:	in     eax,dx
  41ffac:	imul   ecx,DWORD PTR [ebx-0x6c],0xffffffa6
  41ffb0:	jmp    0xaf484e
  41ffb5:	jg     0x41ffd1
  41ffb7:	mov    esi,0x83e92e5b
  41ffbc:	test   BYTE PTR [ecx+ebx*2-0x17],cl
  41ffc0:	cwde   
  41ffc1:	xor    DWORD PTR ds:0xf0906469,ecx
  41ffc7:	push   eax
  41ffc8:	popf   
  41ffc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffca:	inc    edx
  41ffcb:	add    esi,edx
  41ffcd:	xor    al,0xd9
  41ffcf:	mov    al,ds:0xdbd4c738
  41ffd4:	int3   
  41ffd5:	bound  eax,QWORD PTR [ecx]
  41ffd7:	ja     0x41ff88
  41ffd9:	or     ebp,DWORD PTR [eax]
  41ffdb:	cdq    
  41ffdc:	loop   0x41ff8f
  41ffde:	adc    dh,ch
  41ffe0:	test   BYTE PTR [edi+0x257ac752],0x98
  41ffe7:	or     eax,DWORD PTR [edi-0x34acad81]
  41ffed:	mov    ch,ah
  41ffef:	das    
  41fff0:	or     BYTE PTR [ebx+0x16],ch
  41fff3:	adc    DWORD PTR ds:[eax-0x7d1dfde6],esp
  41fffa:	xchg   DWORD PTR [ebp+0x26cc9c15],ebx
  420000:	outs   dx,BYTE PTR ds:[esi]
  420001:	pop    edi
  420002:	gs push edi
  420004:	inc    edx
  420005:	pop    es
  420006:	psubb  mm2,QWORD PTR [ebx]
  420009:	js     0x41ffce
  42000b:	cmp    DWORD PTR [ebx-0x30bc592f],ecx
  420011:	push   esi
  420012:	cli    
  420013:	pop    ss
  420014:	call   0x33565b54
  420019:	lock mov ebx,0xfbbe094d
  42001f:	sub    BYTE PTR [ecx-0x3],dl
  420022:	push   0xffffffae
  420024:	mov    ds:0xa8736ab6,eax
  420029:	ret    
  42002a:	je     0x420092
  42002c:	inc    edi
  42002d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42002e:	jmp    0x244969c
  420033:	jnp    0x42008d
  420035:	xlat   BYTE PTR ds:[ebx]
  420036:	dec    ebx
  420037:	xor    dl,BYTE PTR [ecx]
  420039:	push   0x57
  42003b:	inc    ebx
  42003c:	and    edi,DWORD PTR [edx+0x78c2bbe6]
  420042:	ficomp WORD PTR [edi+edi*2]
  420045:	and    al,0x3b
  420047:	or     ebp,DWORD PTR cs:[ebx+0x1042de27]
  42004e:	gs dec eax
  420050:	ss fdivr st,st(6)
  420053:	pop    edx
  420054:	push   0x7f0d36e3
  420059:	in     eax,0xc
  42005b:	and    bh,BYTE PTR [edi-0x2d44846d]
  420061:	call   0xd33f30f5
  420066:	daa    
  420067:	movlps QWORD PTR [esi+0x0],xmm3
  42006b:	mov    al,ds:0x42b3e2a8
  420070:	daa    
  420071:	mov    edx,0xcf7da18a
  420076:	fild   QWORD PTR [ebx-0x2c6666d2]
  42007c:	rol    DWORD PTR [edi+0x59454481],cl
  420082:	adc    bh,dh
  420084:	sbb    ebx,ecx
  420086:	cli    
  420087:	jbe    0x4200a4
  420089:	fucomip st,st(3)
  42008b:	stos   DWORD PTR es:[edi],eax
  42008c:	clc    
  42008d:	cmp    ecx,DWORD PTR [esi+0xbd0950f]
  420093:	jno    0x4200d5
  420095:	dec    esi
  420096:	mov    eax,0x46d42810
  42009b:	inc    esp
  42009c:	sbb    ch,bl
  42009e:	pushf  
  42009f:	mov    DWORD PTR [ebx],eax
  4200a1:	(bad)  
  4200a3:	jmp    0x4200dd
  4200a5:	pop    ebx
  4200a7:	mov    dl,BYTE PTR ds:0xf624aea0
  4200ad:	fs or  eax,0x8c34c177
  4200b3:	mov    bh,0x58
  4200b5:	(bad)  
  4200b6:	xor    al,0x5a
  4200b8:	lods   al,BYTE PTR ds:[esi]
  4200b9:	sbb    ebx,DWORD PTR ds:0x6006828f
  4200bf:	daa    
  4200c0:	int3   
  4200c1:	sbb    cl,BYTE PTR [edx]
  4200c3:	and    ebx,edx
  4200c5:	in     eax,0xab
  4200c7:	xchg   DWORD PTR [edx-0x33],ecx
  4200ca:	jl     0x4200ed
  4200cc:	sahf   
  4200cd:	std    
  4200ce:	(bad)  [edx+esi*4+0x77]
  4200d2:	ins    BYTE PTR es:[edi],dx
  4200d3:	cmp    DWORD PTR [edx+0x8530a87],0xffffffce
  4200da:	aaa    
  4200db:	xchg   esi,eax
  4200dc:	mov    ecx,0x407ee860
  4200e1:	and    DWORD PTR [eax+0x25],edi
  4200e4:	or     ebp,DWORD PTR [ebx]
  4200e6:	jns    0x420086
  4200e8:	daa    
  4200e9:	pop    edx
  4200ea:	inc    ecx
  4200eb:	mov    ecx,DWORD PTR [esi-0x39]
  4200ee:	cmc    
  4200ef:	fbstp  TBYTE PTR [ebx-0x77]
  4200f2:	push   eax
  4200f3:	adc    al,0xab
  4200f5:	jle    0x4200ed
  4200f7:	mov    BYTE PTR [ebx+0x1a94a73d],dl
  4200fd:	mov    bl,BYTE PTR [eax]
  4200ff:	loop   0x4200e2
  420101:	cwde   
  420102:	sub    dh,BYTE PTR [esi]
  420104:	pop    edx
  420105:	mov    BYTE PTR [ecx-0x5478f575],al
  42010b:	iret   
  42010c:	scas   al,BYTE PTR es:[edi]
  42010d:	jmp    DWORD PTR [eax-0x59]
  420110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420112:	mov    ecx,DWORD PTR [esi]
  420114:	(bad)  
  420116:	inc    edi
  420117:	sbb    ecx,ebx
  420119:	lods   eax,DWORD PTR ds:[esi]
  42011a:	nop
  42011b:	ja     0x42018d
  42011d:	stc    
  42011e:	jmp    0x618ba465
  420123:	lods   al,BYTE PTR ds:[esi]
  420124:	sbb    DWORD PTR [edx],eax
  420126:	enter  0xe82b,0x3b
  42012a:	mov    dh,0x12
  42012c:	ins    DWORD PTR es:[edi],dx
  42012d:	xor    edx,DWORD PTR [ecx+esi*4+0x6059f04e]
  420134:	jb     0x420188
  420136:	jns    0x420124
  420138:	dec    edi
  420139:	outs   dx,DWORD PTR ds:[esi]
  42013a:	pop    ecx
  42013b:	lds    edx,FWORD PTR [eax+0x2d]
  42013e:	fidiv  WORD PTR ds:0xb1c6c2fb
  420144:	test   DWORD PTR [ebp+0x4],ebx
  420147:	push   ds
  420148:	pop    ebx
  420149:	repnz adc edi,0xf9c7db43
  420150:	icebp  
  420151:	or     dl,BYTE PTR [ebx]
  420153:	cmp    dl,BYTE PTR [edi-0x49]
  420156:	(bad)  
  420157:	push   ss
  420158:	shl    DWORD PTR [edi],1
  42015a:	add    BYTE PTR [eax],al
  42015c:	mov    ebx,0x7d7539cf
  420161:	idiv   edi
  420163:	iret   
  420164:	std    
  420165:	mov    ecx,DWORD PTR [esi+0x50a6c20f]
  42016b:	hlt    
  42016c:	mov    edx,0x8600017d
  420171:	add    al,BYTE PTR [eax]
  420173:	add    BYTE PTR [ebp+edx*1-0x4d7641ae],bl
  42017a:	jns    0x42017c
  42017c:	in     eax,0xe5
  42017e:	jnp    0x4201ba
  420180:	fcom   DWORD PTR [edi+0x2a]
  420183:	pop    esi
  420184:	mov    edx,0x458808ba
  420189:	adc    edx,DWORD PTR [esi+0x7c614af7]
  42018f:	pushf  
  420190:	outs   dx,BYTE PTR ds:[esi]
  420191:	cld    
  420192:	icebp  
  420193:	mov    cl,0x90
  420195:	call   0xa9c71d7e
  42019a:	push   ss
  42019b:	jne    0x420171
  42019d:	gs mov bh,0x32
  4201a0:	scas   eax,DWORD PTR es:[edi]
  4201a1:	ja     0x420209
  4201a3:	out    dx,al
  4201a4:	push   esi
  4201a5:	jle    0x420182
  4201a7:	sub    al,0x64
  4201a9:	call   eax
  4201ab:	int    0xd7
  4201ad:	or     ecx,0x1f
  4201b0:	sub    BYTE PTR [eax],dl
  4201b2:	(bad)  
  4201b4:	push   eax
  4201b5:	adc    BYTE PTR [edi],ah
  4201b7:	push   ds
  4201b8:	iret   
  4201b9:	repnz pop ebx
  4201bb:	icebp  
  4201bc:	dec    ebp
  4201bd:	fmul   QWORD PTR [ecx]
  4201bf:	and    ebx,DWORD PTR [ebp-0x2f5e71d7]
  4201c5:	cmc    
  4201c6:	push   0x3a
  4201c8:	xor    al,0xc9
  4201ca:	mov    ds:0xd5342f97,eax
  4201cf:	pop    ss
  4201d0:	cmp    al,0xb1
  4201d2:	mov    bh,0x7c
  4201d4:	dec    eax
  4201d5:	rol    esp,cl
  4201d7:	push   edi
  4201d8:	retf   
  4201d9:	(bad)  
  4201da:	repnz out dx,al
  4201dc:	cld    
  4201dd:	cmp    BYTE PTR [ecx-0x52],dh
  4201e0:	push   ss
  4201e1:	aaa    
  4201e2:	lds    edi,FWORD PTR [ebx+0x54]
  4201e5:	out    0xd3,eax
  4201e7:	or     al,0xb0
  4201e9:	xchg   ebp,eax
  4201ea:	popf   
  4201eb:	sub    edi,DWORD PTR [esp+esi*4]
  4201ee:	pop    edi
  4201ef:	mov    esp,0xdcf5b74f
  4201f4:	cmp    al,0xf0
  4201f6:	rol    DWORD PTR [eax+edx*8],0xac
  4201fa:	xchg   esp,eax
  4201fb:	push   es
  4201fc:	loop   0x42021b
  4201fe:	lea    esp,[esi]
  420200:	add    al,0x8
  420202:	shr    dh,cl
  420204:	inc    edi
  420205:	je     0x4201ca
  420207:	in     eax,0xad
  420209:	cld    
  42020a:	xchg   BYTE PTR [ebp+0x4],dl
  42020d:	xchg   edi,eax
  42020e:	loopne 0x420219
  420210:	ret    
  420211:	icebp  
  420212:	dec    esi
  420213:	dec    esp
  420214:	mov    al,ds:0xf03f495f
  420219:	loope  0x42024a
  42021b:	xor    al,0xbf
  42021d:	ss pop ebp
  42021f:	xchg   esi,eax
  420220:	mov    bl,0x80
  420222:	out    dx,eax
  420223:	iret   
  420224:	jns    0x420202
  420226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420227:	push   0x6734c0b8
  42022c:	dec    ecx
  42022d:	idiv   ah
  42022f:	fsub   st(4),st
  420231:	aam    0x14
  420233:	popa   
  420234:	(bad)  
  420235:	sti    
  420236:	push   cs
  420237:	mov    WORD PTR [ecx+0x25],es
  42023a:	xor    eax,0x93e81f0c
  42023f:	(bad)  
  420240:	jle    0x42021b
  420242:	jno    0x4202c1
  420244:	or     BYTE PTR [edi+0x606a3e75],ch
  42024a:	aad    0xe3
  42024c:	mov    ch,0xe1
  42024e:	fldenv [esi+0x28]
  420251:	bound  edx,QWORD PTR [eax-0x34236514]
  420257:	sti    
  420258:	lods   eax,DWORD PTR ds:[esi]
  420259:	mov    WORD PTR [edx+0x12],ss
  42025c:	mov    eax,0x9c4da22b
  420261:	scas   eax,DWORD PTR es:[edi]
  420262:	jg     0x4202a9
  420264:	(bad)  
  420265:	mov    esi,0xfb5f88ad
  42026a:	mov    DWORD PTR [edi+0x46c29bc],ecx
  420270:	out    0xce,al
  420272:	aas    
  420273:	ds retf 0x202c
  420277:	or     edx,DWORD PTR [eax]
  420279:	clc    
  42027a:	lods   eax,DWORD PTR ds:[esi]
  42027b:	aad    0x90
  42027d:	stc    
  42027e:	push   ebp
  42027f:	bound  esp,QWORD PTR [edi+0x44]
  420282:	xchg   ebp,eax
  420283:	ret    0x2782
  420286:	dec    eax
  420287:	loop   0x42021c
  420289:	sbb    ebp,DWORD PTR [edi+esi*4+0x7d98635c]
  420290:	pop    ebp
  420291:	push   0x6c44ffc7
  420296:	adc    eax,0x220a98f0
  42029b:	xor    dh,0x1e
  42029e:	pop    ebp
  42029f:	dec    ecx
  4202a0:	loopne 0x420273
  4202a2:	mov    ecx,0xae50d116
  4202a7:	(bad)  
  4202a8:	mov    ah,0x51
  4202aa:	ret    
  4202ab:	in     eax,dx
  4202ac:	mov    esp,0x95dcb568
  4202b1:	enter  0x9e1f,0x3a
  4202b5:	sbb    eax,0xe9323a21
  4202ba:	mov    eax,ds:0x7f7c2cd2
  4202bf:	in     al,0x22
  4202c1:	cmp    al,0x17
  4202c3:	rol    BYTE PTR [edx+edi*2-0x6f],cl
  4202c7:	fs sbb eax,0xe0011ee3
  4202cd:	cmp    BYTE PTR ds:0xebac2111,dh
  4202d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202d4:	and    BYTE PTR [ebp-0x2d78c8ed],0x55
  4202db:	ss retw 
  4202de:	mov    BYTE PTR es:[esi],ch
  4202e1:	xor    ebp,eax
  4202e3:	mov    edx,0x1fd7af98
  4202e8:	jle    0x42034b
  4202ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202eb:	or     edi,edi
  4202ed:	pop    ebp
  4202ee:	xor    al,0x46
  4202f0:	popa   
  4202f1:	jmp    0xa7a78486
  4202f6:	pop    es
  4202f7:	(bad)  
  4202f8:	dec    esp
  4202f9:	jmp    0xc1fd:0x2fda09b4
  420300:	(bad)  
  420301:	out    0x60,eax
  420303:	in     eax,dx
  420304:	retf   
  420305:	lahf   
  420306:	outs   dx,BYTE PTR ds:[esi]
  420307:	mov    dl,0x64
  420309:	and    dh,BYTE PTR [ebp+0x364cc07a]
  42030f:	in     eax,dx
  420310:	shl    DWORD PTR [eax+0x4aaa8b93],1
  420316:	test   DWORD PTR [edi],edx
  420318:	outs   dx,BYTE PTR ds:[esi]
  420319:	pop    ds
  42031a:	mov    cl,0x48
  42031c:	cmp    eax,0xde03f9dd
  420321:	add    eax,0xa3203756
  420326:	into   
  420327:	pushf  
  420328:	outs   dx,BYTE PTR ds:[esi]
  420329:	inc    esi
  42032a:	lock xlat BYTE PTR ds:[ebx]
  42032c:	rcr    DWORD PTR [eax-0x34],0x74
  420330:	mov    bl,0xd5
  420332:	mov    ecx,0xbdbeb00e
  420337:	mov    eax,0x47f13be
  42033c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42033d:	mov    gs,edx
  42033f:	pop    esp
  420340:	push   esp
  420341:	in     al,dx
  420342:	daa    
  420343:	rcr    dl,1
  420345:	cmp    DWORD PTR [ebp+0x40f43f73],esp
  42034b:	ins    DWORD PTR es:[edi],dx
  42034c:	leave  
  42034d:	cmp    DWORD PTR [ecx+0x1],edi
  420350:	repnz out dx,al
  420352:	int3   
  420353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420354:	mov    ds:0xc1e95f50,eax
  420359:	call   0xe90f:0x77dde484
  420360:	out    dx,al
  420361:	inc    edi
  420362:	add    al,0x8f
  420364:	mov    eax,ds:0x1c389ea5
  420369:	scas   eax,DWORD PTR es:[edi]
  42036a:	(bad)  [esi+0x70]
  42036d:	not    DWORD PTR [eax]
  42036f:	xor    ebp,DWORD PTR [edi+0x3f]
  420372:	sbb    BYTE PTR fs:[ebp-0x70],0x1c
  420377:	fcomp  QWORD PTR [ebx+0x5709f674]
  42037d:	aaa    
  42037e:	sub    al,0xcc
  420380:	pop    ds
  420381:	or     al,0xcf
  420383:	cmp    BYTE PTR ds:0xf50bde45,0x3b
  42038a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42038b:	mov    ah,0xf0
  42038d:	inc    ebp
  42038e:	scas   eax,DWORD PTR es:[edi]
  42038f:	pop    esi
  420390:	xchg   ecx,edx
  420392:	in     al,dx
  420393:	stos   BYTE PTR es:[edi],al
  420394:	outs   dx,DWORD PTR ds:[esi]
  420395:	mov    ebx,0xff70e707
  42039a:	out    0x70,eax
  42039c:	repnz xchg esp,eax
  42039e:	mov    al,0xd5
  4203a0:	sub    edi,edi
  4203a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203a3:	mov    al,ds:0xc13f005c
  4203a8:	and    eax,0x846c3aa0
  4203ad:	jle    0x42042d
  4203af:	aad    0xd2
  4203b1:	pop    ebx
  4203b2:	cmp    al,0x7f
  4203b4:	mov    bl,0xc2
  4203b6:	cdq    
  4203b7:	popa   
  4203b8:	popa   
  4203b9:	lahf   
  4203ba:	nop
  4203bb:	fst    DWORD PTR ds:0x2dc43b4c
  4203c1:	and    dh,dl
  4203c3:	(bad)  
  4203c4:	hlt    
  4203c5:	addr16 inc esp
  4203c7:	xor    eax,0x49b08554
  4203cc:	push   esi
  4203cd:	mov    edx,0xd9257c80
  4203d2:	jnp    0x4203ad
  4203d4:	repnz cwde 
  4203d6:	add    eax,0x69728290
  4203db:	mov    ch,0x96
  4203dd:	jecxz  0x420455
  4203df:	add    al,0xfd
  4203e1:	push   edi
  4203e2:	icebp  
  4203e3:	fwait
  4203e4:	or     esi,0xa25ffe0f
  4203ea:	call   0x4283:0x42c4794f
  4203f1:	out    dx,eax
  4203f2:	jbe    0x42037d
  4203f4:	add    eax,0x7f270129
  4203f9:	push   ss
  4203fa:	add    BYTE PTR [eax],al
  4203fc:	out    dx,al
  4203fd:	ret    0x2d9d
  420400:	mov    ebp,0x3fc3fe7f
  420405:	out    dx,eax
  420406:	mov    edi,0x8ccdc137
  42040b:	push   edx
  42040c:	inc    eax
  42040d:	add    BYTE PTR [ecx],0x0
  420410:	xchg   BYTE PTR [edx],al
  420412:	add    BYTE PTR [eax],al
  420414:	xor    ah,BYTE PTR [esi]
  420416:	cmp    ebp,DWORD PTR [eax-0x14240c0e]
  42041c:	das    
  42041d:	xchg   ebx,eax
  42041e:	aad    0xd6
  420420:	out    dx,eax
  420421:	sti    
  420422:	xor    al,0x7a
  420424:	cmp    al,0x19
  420426:	les    eax,FWORD PTR [ebx+0x1b1cc0af]
  42042c:	addr16 xchg esi,eax
  42042e:	sub    al,0x37
  420430:	push   eax
  420431:	fmul   QWORD PTR [ecx+0x1b]
  420434:	xor    DWORD PTR [esi],edx
  420436:	scas   eax,DWORD PTR es:[edi]
  420437:	out    0x36,al
  420439:	or     cl,BYTE PTR [eax]
  42043b:	das    
  42043c:	xchg   BYTE PTR [ebx+eiz*2],bh
  42043f:	dec    edi
  420440:	mov    ebp,0x276611ac
  420445:	inc    ebx
  420446:	call   0xa208:0x6f1dbcc7
  42044d:	jae    0x4203f1
  42044f:	pop    esp
  420450:	inc    edi
  420451:	jmp    0x42048f
  420453:	mov    ds:0x64941847,al
  420458:	jbe    0x4203fc
  42045a:	sti    
  42045b:	loopne 0x4204b6
  42045d:	ds loop 0x42042e
  420460:	xor    DWORD PTR [edi],esi
  420462:	(bad)  
  420463:	xchg   esi,eax
  420464:	fmul   QWORD PTR [edx]
  420466:	mov    fs,WORD PTR [edi-0x5751de42]
  42046c:	and    al,0x6d
  42046e:	enter  0xb11a,0x3c
  420472:	lock inc ebx
  420474:	mov    cl,0xac
  420476:	fisttp DWORD PTR ds:0x36958a1b
  42047c:	fwait
  42047d:	cmp    eax,DWORD PTR [eax+0x373197b7]
  420483:	clc    
  420484:	addr16 retf 
  420486:	xlat   BYTE PTR ds:[ebx]
  420487:	ret    
  420488:	push   edx
  420489:	mov    ecx,0x1dd7274e
  42048e:	(bad)  
  42048f:	mov    eax,0xb4cad9e9
  420494:	xchg   ebp,eax
  420495:	jb     0x420509
  420497:	stos   BYTE PTR es:[edi],al
  420498:	(bad)  
  420499:	sbb    cl,BYTE PTR [edi]
  42049b:	aaa    
  42049c:	jp     0x420471
  42049e:	inc    BYTE PTR [ecx+0x5e]
  4204a1:	hlt    
  4204a2:	(bad)  
  4204a3:	push   ecx
  4204a4:	shl    BYTE PTR [ecx+0x9],1
  4204a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204a8:	lea    ebx,[edx+eax*8-0x26]
  4204ac:	pop    esi
  4204ad:	cmp    DWORD PTR [edx-0x1ba57236],esp
  4204b3:	sbb    DWORD PTR [edx],ebx
  4204b5:	jmp    0x4204b7
  4204b7:	jg     0x420531
  4204b9:	sub    edx,ebp
  4204bb:	cmp    eax,0x20219d6d
  4204c0:	call   0x4df2:0x3101812a
  4204c7:	rcr    esp,cl
  4204c9:	adc    ah,BYTE PTR [ebx+eax*4]
  4204cc:	in     eax,0xac
  4204ce:	inc    eax
  4204cf:	inc    esp
  4204d0:	mov    eax,0x39904fe6
  4204d5:	fisub  DWORD PTR [edx]
  4204d7:	mov    ds:0xf128492c,eax
  4204dc:	stc    
  4204dd:	lods   al,BYTE PTR ds:[esi]
  4204de:	sbb    edx,DWORD PTR [ebx+0x1f0e2458]
  4204e4:	div    dl
  4204e6:	add    esp,DWORD PTR [ebp-0x3a4b5b0]
  4204ec:	mov    esi,0xeffd239d
  4204f1:	mov    ecx,0x877af026
  4204f6:	js     0x42047e
  4204f8:	xlat   BYTE PTR ds:[ebx]
  4204f9:	sub    DWORD PTR [ecx+0x5e],ebx
  4204fc:	pop    ecx
  4204fd:	sub    DWORD PTR [ebp-0x346a8818],edi
  420503:	cmp    edi,DWORD PTR [ebp-0x4d]
  420506:	fbld   TBYTE PTR [eax-0x723d0cec]
  42050c:	ins    BYTE PTR es:[edi],dx
  42050d:	stos   DWORD PTR es:[edi],eax
  42050e:	mov    dh,0x9b
  420510:	or     BYTE PTR [ebx],0xe1
  420513:	daa    
  420514:	test   BYTE PTR [edx+eax*4+0x65ed727f],0xc8
  42051c:	cs (bad) 
  42051e:	or     eax,0x86c61827
  420523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420524:	adc    esp,DWORD PTR [ecx]
  420526:	push   0x22
  420528:	inc    ebx
  420529:	(bad)  
  42052a:	loope  0x4204f2
  42052c:	call   0xba5d:0x21ca7f6a
  420533:	sub    BYTE PTR [ebp-0x7fe2fc3b],ah
  420539:	push   0x3ff4ceb2
  42053e:	and    ebp,DWORD PTR [edi+0x23]
  420541:	gs mov eax,0x177247ed
  420547:	mov    eax,0x23c5d670
  42054c:	xor    ah,BYTE PTR ds:0xf087b6dd
  420552:	mov    bh,0x97
  420554:	cmp    BYTE PTR [esp+ebx*2-0x5f],0xe
  420559:	ffreep st(2)
  42055b:	retf   0xf738
  42055e:	lahf   
  42055f:	xlat   BYTE PTR ds:[ebx]
  420560:	push   ss
  420561:	mov    ds:0x6930aa52,al
  420566:	mov    ch,0x3f
  420568:	xchg   BYTE PTR [esi+0x54b894dd],bh
  42056e:	dec    ebx
  42056f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420570:	adc    al,0xbe
  420572:	sbb    al,0x91
  420574:	mov    ?,WORD PTR [eax-0x4aed368c]
  42057a:	pop    esi
  42057b:	mov    esp,0x69baed91
  420580:	arpl   WORD PTR [eax],cx
  420582:	jl     0x4205e8
  420584:	mov    esi,0xcd48eac0
  420589:	dec    esp
  42058a:	rol    DWORD PTR [ecx-0x1d],0xf4
  42058e:	imul   ebp,DWORD PTR [edi-0x3f],0x31
  420592:	sub    eax,0xa0d07f67
  420597:	stos   BYTE PTR es:[edi],al
  420598:	cli    
  420599:	mov    cl,0xd9
  42059b:	ret    
  42059c:	cs jb  0x42055e
  42059f:	ficomp DWORD PTR [ebx-0x7e5fc5ca]
  4205a5:	(bad)  [edi+0x5cfe846d]
  4205ab:	pop    edi
  4205ac:	mov    edi,0xfa13c7e3
  4205b1:	and    ebp,DWORD PTR [edx+0x7246962f]
  4205b7:	sub    al,0x9
  4205b9:	clc    
  4205ba:	inc    eax
  4205bb:	(bad)  
  4205bc:	push   esi
  4205bd:	inc    ebp
  4205be:	out    dx,eax
  4205bf:	test   edi,ecx
  4205c1:	loop   0x4205fd
  4205c3:	in     al,dx
  4205c4:	xor    bl,BYTE PTR [eax]
  4205c6:	jmp    0x420610
  4205c8:	outs   dx,BYTE PTR ds:[esi]
  4205c9:	or     esi,edx
  4205cb:	or     ebx,esi
  4205cd:	fstp   DWORD PTR [esi-0x53dbe4d]
  4205d3:	enter  0x56ef,0xa3
  4205d7:	out    dx,al
  4205d8:	les    esp,FWORD PTR [edx]
  4205da:	sahf   
  4205db:	loope  0x42059b
  4205dd:	fwait
  4205de:	lods   al,BYTE PTR ds:[esi]
  4205df:	popf   
  4205e0:	and    dl,BYTE PTR [ecx-0x78df01ec]
  4205e6:	fmul   QWORD PTR [esp+eax*1+0x4f]
  4205ea:	cwde   
  4205eb:	push   cs
  4205ec:	dec    esi
  4205ed:	inc    esi
  4205ee:	hlt    
  4205ef:	dec    esp
  4205f0:	call   0x4f5d:0x184df6c0
  4205f7:	jmp    0x1f25:0x7d3216ca
  4205fe:	aas    
  4205ff:	or     DWORD PTR [edx+0x24],ecx
  420602:	xchg   esi,eax
  420603:	adc    BYTE PTR [esi-0x2d],bh
  420606:	mov    WORD PTR [ecx-0x24],fs
  420609:	mov    edx,0x7318e3a7
  42060e:	adc    al,0x9a
  420610:	adc    BYTE PTR [ecx-0x49],bl
  420613:	stos   BYTE PTR es:[edi],al
  420614:	adc    eax,0x58b7c815
  420619:	cmp    ebx,DWORD PTR [eax-0x66d16a5f]
  42061f:	push   eax
  420620:	aas    
  420621:	lahf   
  420622:	out    dx,al
  420623:	dec    esi
  420624:	push   esp
  420625:	cmp    edi,edi
  420627:	push   esp
  420628:	and    bh,BYTE PTR [edx]
  42062a:	mov    bl,0xf1
  42062c:	sbb    DWORD PTR [eax],eax
  42062e:	pop    ds
  42062f:	aaa    
  420630:	(bad)  
  420631:	jmp    0x1e1b46e4
  420636:	in     al,dx
  420637:	adc    BYTE PTR [eax-0x35],bl
  42063a:	dec    edi
  42063b:	sbb    BYTE PTR [ecx-0x5b7fc3dd],bh
  420641:	out    dx,al
  420642:	repz and cl,BYTE PTR ds:[edi-0x28]
  420647:	mov    dh,0x7e
  420649:	scas   eax,DWORD PTR es:[edi]
  42064a:	repnz push ds
  42064c:	mov    eax,0x8b67e93
  420651:	fild   DWORD PTR [edx-0x458e33f8]
  420657:	ret    
  420658:	jae    0x420600
  42065a:	cmp    dh,bh
  42065c:	push   esp
  42065d:	rcr    DWORD PTR [ecx+0x7db372fc],cl
  420663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420664:	and    DWORD PTR [edx-0x1b181ba0],ecx
  42066a:	push   cs
  42066b:	fild   WORD PTR [eax+0x5bd3d01f]
  420671:	leave  
  420672:	xchg   esp,eax
  420673:	loope  0x4206c9
  420675:	out    dx,al
  420676:	int    0x62
  420678:	fucomp st(0)
  42067a:	test   BYTE PTR [ebp+0x17db57fb],ah
  420680:	mov    esi,0xd412180b
  420685:	sar    BYTE PTR [esi+0x76],cl
  420688:	cmp    al,0xe8
  42068a:	sbb    BYTE PTR [esi-0x16],dh
  42068d:	mov    ch,0xc
  42068f:	in     al,dx
  420690:	inc    ecx
  420691:	retf   0x21e
  420694:	imul   ebx,DWORD PTR [ebp+esi*4+0xc],0x7ceb
  42069c:	push   ebx
  42069d:	(bad)  
  42069e:	(bad)  
  42069f:	push   esi
  4206a0:	(bad)  
  4206a1:	jle    0x42069e
  4206a3:	xlat   BYTE PTR ds:[ebx]
  4206a4:	outs   dx,DWORD PTR ds:[esi]
  4206a5:	mov    ah,0x77
  4206a7:	call   0x82c6:0x52db024
  4206ae:	add    DWORD PTR [eax],eax
  4206b0:	xchg   BYTE PTR [edx],al
  4206b2:	add    BYTE PTR [eax],al
  4206b4:	jl     0x420709
  4206b6:	out    dx,eax
  4206b7:	xchg   ecx,eax
  4206b8:	push   0x7ef7738a
  4206bd:	jge    0x420700
  4206bf:	inc    edx
  4206c0:	mov    BYTE PTR [esi+0x73575b61],ch
  4206c6:	jo     0x420734
  4206c8:	pop    edx
  4206c9:	jnp    0x4206c0
  4206cb:	dec    eax
  4206cc:	add    DWORD PTR [ebx+0x17],esp
  4206cf:	mov    ch,BYTE PTR [edx-0x21]
  4206d2:	hlt    
  4206d3:	mov    esi,0xdbbbfd21
  4206d8:	cmp    al,0xc6
  4206da:	jns    0x4206e9
  4206dc:	jmp    0xe5f3:0x4200a351
  4206e3:	cmc    
  4206e4:	mov    al,cl
  4206e6:	icebp  
  4206e7:	ds aad 0x79
  4206ea:	fidivr DWORD PTR ds:0x56532ab8
  4206f0:	in     al,dx
  4206f1:	in     eax,dx
  4206f2:	out    0xae,eax
  4206f4:	jp     0x420685
  4206f6:	dec    esi
  4206f7:	je     0x4206b6
  4206f9:	jae    0x42076e
  4206fb:	scas   eax,DWORD PTR es:[edi]
  4206fc:	mov    ebp,0x8c636f3b
  420701:	fild   DWORD PTR [ecx+0x26]
  420704:	mov    bh,0x56
  420706:	sub    esp,DWORD PTR [eax+0x12]
  420709:	and    BYTE PTR [esi+0x5140703c],dh
  42070f:	call   0x234ed623
  420714:	mul    DWORD PTR [ebp+0x6e]
  420717:	in     al,dx
  420718:	call   0x3bde:0x38736511
  42071f:	xchg   ebp,eax
  420720:	cmp    DWORD PTR [ecx+0x50],edi
  420723:	sbb    BYTE PTR [esi+0x56],al
  420726:	call   0x8894:0x32a6a8d3
  42072d:	inc    edi
  42072e:	push   ss
  42072f:	shl    bl,0xb1
  420732:	sub    ecx,DWORD PTR [ebx]
  420734:	jp     0x42075e
  420736:	adc    ebp,DWORD PTR [edi-0x31b62db3]
  42073c:	pusha  
  42073d:	imul   ebp,DWORD PTR [eax-0x36de1ca1],0x1d
  420744:	cmp    al,0xe1
  420746:	(bad)  
  420747:	cdq    
  420748:	test   al,0xc1
  42074a:	dec    ecx
  42074b:	push   ecx
  42074c:	push   edi
  42074d:	leave  
  42074e:	and    edx,ecx
  420750:	xchg   ebp,eax
  420751:	es pop ebx
  420753:	and    DWORD PTR [edx+0x4dd28915],0xb47cdd7b
  42075d:	fimul  WORD PTR [esi+0x5]
  420760:	jle    0x4207be
  420762:	cmp    DWORD PTR [ecx+0x1fe820b5],esp
  420768:	jne    0x4207d3
  42076a:	in     al,dx
  42076b:	popf   
  42076c:	cmp    al,0x60
  42076e:	mov    ebx,0x71e4595d
  420773:	sbb    dl,dh
  420775:	js     0x42074c
  420777:	(bad)  
  420779:	jmp    0x42070a
  42077b:	out    dx,eax
  42077c:	dec    esp
  42077d:	fbld   TBYTE PTR [ebp+0x50]
  420780:	sub    DWORD PTR [ebx+0x23da1017],edi
  420786:	push   esp
  420787:	cmp    al,0xf9
  420789:	call   0xda1:0x6416bd86
  420790:	inc    edi
  420791:	xchg   ebx,eax
  420792:	mov    ch,0xe2
  420794:	ins    BYTE PTR es:[edi],dx
  420795:	or     ecx,DWORD PTR [edx]
  420797:	int3   
  420798:	xor    BYTE PTR [ebp-0x5d829403],ah
  42079e:	xchg   ebx,eax
  42079f:	mov    bl,0x28
  4207a1:	int3   
  4207a2:	(bad)  
  4207a3:	jno    0x4207e6
  4207a5:	(bad)  
  4207a6:	adc    DWORD PTR [esi],eax
  4207a8:	mov    DWORD PTR fs:[eax+0x6e],ebp
  4207ac:	test   eax,0x949a8ac5
  4207b1:	arpl   WORD PTR [edx],dx
  4207b3:	js     0x42080d
  4207b5:	ficomp WORD PTR [edi+ecx*8+0x6a]
  4207b9:	hlt    
  4207ba:	or     eax,0x3fd42a7b
  4207bf:	not    DWORD PTR [ebx+edx*4+0x107ac8c8]
  4207c6:	sub    ebp,esp
  4207c8:	in     al,dx
  4207c9:	cwde   
  4207ca:	psubw  mm3,QWORD PTR [ebp-0x31c8b283]
  4207d1:	nop
  4207d2:	ins    BYTE PTR es:[edi],dx
  4207d3:	push   ss
  4207d4:	lea    edi,[eax+0x5397f906]
  4207da:	js     0x42080e
  4207dc:	(bad)  
  4207dd:	sub    bh,BYTE PTR [ebx-0x59]
  4207e0:	lds    ebx,FWORD PTR [esi-0x3d]
  4207e3:	mov    edx,0x4abd4c03
  4207e8:	imul   ecx,esp,0xfffffff3
  4207eb:	and    al,BYTE PTR [edi-0x2fdadd16]
  4207f1:	cmp    bh,BYTE PTR [eax]
  4207f3:	aad    0xf5
  4207f5:	dec    ecx
  4207f6:	or     DWORD PTR [ebx+eiz*2+0x37],eax
  4207fa:	pop    edi
  4207fb:	nop
  4207fc:	push   ebx
  4207fd:	addr16 push eax
  4207ff:	and    bl,BYTE PTR [edx-0x1f]
  420802:	adc    ah,dl
  420804:	jmp    0x8caf:0x9211ebc6
  42080b:	retf   0x30c1
  42080e:	daa    
  42080f:	sub    DWORD PTR [eax-0x14],0xb7ef12d
  420816:	push   cs
  420817:	aam    0x98
  420819:	sbb    ah,cl
  42081b:	out    dx,eax
  42081c:	xchg   ebp,eax
  42081d:	mov    cl,0x7d
  42081f:	(bad)
  420822:	adc    DWORD PTR [edi+0xd],ebp
  420825:	lahf   
  420826:	hlt    
  420827:	stos   BYTE PTR es:[edi],al
  420828:	jmp    0xcaec56
  42082d:	cmp    DWORD PTR [ecx-0x6e],eax
  420830:	add    al,0xbc
  420832:	jns    0x420886
  420834:	sub    eax,0x2c133a1d
  420839:	mov    eax,ds:0x7404e511
  42083e:	(bad)  
  420840:	ins    DWORD PTR es:[edi],dx
  420841:	(bad)  
  420842:	and    ah,dh
  420844:	and    al,0x7
  420846:	adc    edi,DWORD PTR [esi+0x23fb011c]
  42084c:	dec    ebp
  42084d:	xchg   ebp,eax
  42084e:	sub    esi,DWORD PTR [edx+0x7374939d]
  420854:	dec    edx
  420855:	sbb    DWORD PTR [edx+0x3f],eax
  420858:	bound  ebx,QWORD PTR [ebx+ecx*8-0x5c]
  42085c:	sub    al,0xe7
  42085e:	ja     0x42082b
  420860:	int    0xc8
  420862:	loopne 0x42081e
  420864:	mov    eax,ds:0xe49d28f4
  420869:	mov    eax,ds:0x82a7068e
  42086e:	sub    esi,DWORD PTR [ecx]
  420870:	les    esi,FWORD PTR [edi+0x27bf3ed1]
  420876:	mov    esp,0x9cfd85d4
  42087b:	pop    ebp
  42087c:	stos   BYTE PTR es:[edi],al
  42087d:	or     DWORD PTR [edi],esi
  42087f:	fdivr  QWORD PTR [ebx-0x5ca286a4]
  420885:	or     eax,0xd553bdb6
  42088a:	dec    esi
  42088b:	pop    esi
  42088c:	fsubr  QWORD PTR [ebp+0x62]
  42088f:	aas    
  420890:	mov    bl,0x74
  420892:	mov    al,0xfe
  420894:	fs push ebx
  420896:	sub    ecx,edi
  420898:	and    edx,DWORD PTR [ebx-0x1625e03]
  42089e:	cmp    ebx,DWORD PTR ds:0xe29a6851
  4208a4:	xchg   dl,dh
  4208a6:	xor    BYTE PTR [ebx],dh
  4208a8:	into   
  4208a9:	adc    ebx,DWORD PTR [esp+ebx*4+0x135ba358]
  4208b0:	xchg   edx,eax
  4208b1:	in     eax,dx
  4208b2:	cmp    ch,al
  4208b4:	sar    DWORD PTR [edx],1
  4208b6:	popf   
  4208b7:	or     BYTE PTR [ebp+0x28],0x8d
  4208bb:	lahf   
  4208bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208bd:	xchg   edi,eax
  4208be:	ds ret 
  4208c0:	aam    0x8f
  4208c2:	mov    bh,BYTE PTR [esi+0x7d]
  4208c5:	(bad)  
  4208c6:	outs   dx,DWORD PTR cs:[esi]
  4208c8:	mov    dl,0xd5
  4208ca:	or     bl,BYTE PTR [edx]
  4208cc:	xchg   DWORD PTR [esi+0x34],esp
  4208cf:	cmc    
  4208d0:	jp     0x4208c2
  4208d2:	push   ebp
  4208d3:	jecxz  0x4208b0
  4208d5:	pxor   mm3,QWORD PTR [ebx-0x30]
  4208d9:	sub    al,cl
  4208db:	lds    ecx,FWORD PTR [esi]
  4208dd:	mov    ebp,0xfc33bf57
  4208e2:	pop    esi
  4208e3:	sub    eax,0x9772143a
  4208e8:	mov    ecx,0x58fa7544
  4208ed:	lea    si,[esi+eax*4-0x46a9e606]
  4208f5:	(bad)  [edi-0x7d]
  4208f9:	(bad)  
  4208fa:	push   edx
  4208fb:	shr    DWORD PTR [ebx+edx*4],1
  4208fe:	int    0x3c
  420900:	mov    dh,0x1b
  420902:	or     bh,al
  420904:	das    
  420905:	lahf   
  420906:	inc    esp
  420907:	add    ah,bl
  420909:	jle    0x4208d2
  42090b:	push   ebx
  42090c:	sti    
  42090d:	mov    ah,BYTE PTR [eax+0x1b]
  420910:	ss ins BYTE PTR es:[edi],dx
  420912:	pop    esp
  420913:	push   ss
  420914:	int    0xfd
  420916:	sbb    eax,0x16112cec
  42091b:	(bad)
  42091f:	outs   dx,BYTE PTR ds:[esi]
  420920:	sbb    al,0xa3
  420922:	popf   
  420923:	leave  
  420924:	es pop es
  420926:	fbstp  TBYTE PTR [edi+0x69fbc479]
  42092c:	push   ebx
  42092d:	or     bh,BYTE PTR [eax]
  42092f:	adc    DWORD PTR [ecx+0x79],ebp
  420932:	retf   0xd285
  420935:	sub    eax,0x5bc8ef7e
  42093a:	add    BYTE PTR [eax],al
  42093c:	adc    DWORD PTR [esi],ecx
  42093e:	or     dl,ch
  420940:	pop    ds
  420941:	out    dx,al
  420942:	repz jmp FWORD PTR [edi-0x3b30fbda]
  420949:	add    al,0xb0
  42094b:	mov    esp,0x1854c
  420950:	xchg   BYTE PTR [edx],al
  420952:	add    BYTE PTR [eax],al
  420954:	mov    ?,WORD PTR [eax+0x27db5155]
  42095a:	mov    esi,0x796fd4bd
  42095f:	pusha  
  420960:	fwait
  420961:	jp     0x420923
  420963:	repz pop edi
  420965:	mov    ecx,0x813c7040
  42096a:	shl    DWORD PTR [edi-0x14],cl
  42096d:	pop    ss
  42096e:	sbb    BYTE PTR [ebx+0x23],dh
  420971:	out    dx,al
  420972:	xchg   esi,eax
  420973:	stc    
  420974:	xlat   BYTE PTR ds:[ebx]
  420975:	xor    eax,0xf422507a
  42097a:	addr16 bnd jae 0x42096f
  42097e:	xchg   DWORD PTR [edi+0x6d3e50d6],ebx
  420984:	div    DWORD PTR [edx+0x7f]
  420987:	and    ecx,DWORD PTR [ecx-0x30]
  42098a:	daa    
  42098b:	cwde   
  42098c:	std    
  42098d:	adc    BYTE PTR ds:0xf5d9c956,dh
  420993:	adc    BYTE PTR [ebx+ecx*2+0x2],0x19
  420998:	repz push ebp
  42099a:	jns    0x42091d
  42099c:	push   cs
  42099d:	icebp  
  42099e:	outs   dx,DWORD PTR ds:[esi]
  42099f:	inc    esp
  4209a0:	in     eax,dx
  4209a1:	ret    
  4209a2:	test   DWORD PTR [ecx],esi
  4209a4:	or     DWORD PTR [ecx-0x68],edi
  4209a7:	adc    DWORD PTR [edi-0x1b5058da],esi
  4209ad:	push   edi
  4209ae:	pop    eax
  4209af:	adc    BYTE PTR [ebx+0x4f82da05],0x99
  4209b6:	push   edx
  4209b7:	mov    eax,ds:0x5d5f7418
  4209bc:	jecxz  0x420a12
  4209be:	scas   al,BYTE PTR es:[edi]
  4209bf:	icebp  
  4209c0:	and    BYTE PTR [ebp+0x4807948],bl
  4209c6:	test   al,0xe
  4209c8:	mov    eax,ds:0x99d1b0a5
  4209cd:	jecxz  0x420a45
  4209cf:	sub    ecx,edi
  4209d1:	out    dx,eax
  4209d2:	imul   ebx,DWORD PTR [eax],0x1c973dcb
  4209d8:	pop    edx
  4209d9:	popa   
  4209da:	mov    esi,0x37813ad9
  4209df:	push   ebp
  4209e0:	add    al,BYTE PTR [ebp+ecx*8-0x7f78bc18]
  4209e7:	les    esi,FWORD PTR [eax-0x1400cb7d]
  4209ed:	or     eax,0xcaa2413b
  4209f2:	outs   dx,DWORD PTR ds:[esi]
  4209f3:	pop    edi
  4209f4:	arpl   WORD PTR [esi],bx
  4209f6:	dec    edi
  4209f7:	and    BYTE PTR [edi+0x411bb6bb],dh
  4209fd:	(bad)  
  4209fe:	adc    al,0xbd
  420a00:	push   edx
  420a01:	lock pop eax
  420a03:	dec    esi
  420a04:	sbb    ah,BYTE PTR cs:[edi+0x43417a91]
  420a0b:	lock aad 0x86
  420a0e:	call   0x1dbb:0xe2320a86
  420a15:	or     BYTE PTR [ebx],ch
  420a17:	repz (bad) 
  420a19:	je     0x4209e8
  420a1b:	gs iret 
  420a1d:	pop    es
  420a1e:	pop    ebp
  420a1f:	jp     0x420a68
  420a21:	xchg   edx,eax
  420a22:	xchg   ecx,eax
  420a23:	icebp  
  420a24:	leave  
  420a25:	aas    
  420a26:	xchg   edx,eax
  420a27:	cmc    
  420a28:	ret    
  420a29:	loope  0x420a52
  420a2b:	call   0x50d4:0x79269cc2
  420a32:	test   BYTE PTR [ebp+0x2d5b1c3e],0xa1
  420a39:	adc    BYTE PTR [edx+eiz*1-0x7c],ch
  420a3d:	cmp    esi,eax
  420a3f:	push   ecx
  420a40:	scas   eax,DWORD PTR es:[edi]
  420a41:	pop    ebx
  420a42:	xchg   edx,eax
  420a43:	push   0xffffff95
  420a45:	popa   
  420a46:	sbb    esi,DWORD PTR [esi-0x598527c6]
  420a4c:	test   al,0xfa
  420a4e:	adc    esp,DWORD PTR cs:[ecx]
  420a51:	add    eax,0x2b8cac5e
  420a56:	gs bnd jnp 0x420ab0
  420a5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a5c:	mov    esp,0xe227685a
  420a61:	lods   al,BYTE PTR ds:[esi]
  420a62:	cli    
  420a63:	push   edi
  420a64:	inc    esp
  420a65:	push   es
  420a66:	clc    
  420a67:	fild   DWORD PTR [edi-0x5a]
  420a6a:	inc    esi
  420a6b:	add    al,0x1d
  420a6d:	cmp    DWORD PTR [edi+ecx*4+0x10c3e1cb],ebp
  420a74:	ret    0xf99a
  420a77:	mov    al,cl
  420a79:	sub    BYTE PTR ds:0x21d6f12b,dh
  420a7f:	jbe    0x420aeb
  420a81:	push   ebx
  420a82:	fs inc edi
  420a84:	mov    cs,WORD PTR [ebp+0x60f45cd1]
  420a8a:	mov    edx,0x6de1d74c
  420a8f:	test   BYTE PTR [ebx+edi*4],al
  420a92:	mov    ss,WORD PTR [edx-0xfa8e9d9]
  420a98:	pop    ebp
  420a99:	div    bl
  420a9b:	ds (bad) 
  420a9d:	adc    eax,0x6609d05d
  420aa2:	inc    edi
  420aa3:	popa   
  420aa4:	outs   dx,BYTE PTR ds:[esi]
  420aa5:	je     0x420a46
  420aa7:	fucomp st(1)
  420aa9:	dec    ecx
  420aaa:	xchg   ebx,eax
  420aab:	pop    ecx
  420aac:	in     al,0xf5
  420aae:	and    dh,BYTE PTR [edx+0x5d]
  420ab1:	inc    ebp
  420ab2:	lods   al,BYTE PTR ds:[esi]
  420ab3:	pop    eax
  420ab4:	ret    
  420ab5:	adc    dh,BYTE PTR [eax+eax*1+0x13]
  420ab9:	stos   BYTE PTR es:[edi],al
  420aba:	lock dec eax
  420abc:	inc    edx
  420abd:	mov    dl,BYTE PTR [ecx+0x0]
  420ac0:	pop    ecx
  420ac1:	sub    al,0x8
  420ac3:	popf   
  420ac4:	inc    edx
  420ac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ac6:	cwde   
  420ac7:	add    bl,BYTE PTR gs:[esi]
  420aca:	sub    eax,0x4e853c4b
  420acf:	fwait
  420ad0:	xor    DWORD PTR [edx],esi
  420ad2:	scas   al,BYTE PTR es:[edi]
  420ad3:	sti    
  420ad4:	jne    0x420ae1
  420ad6:	cmp    ebx,DWORD PTR [ebp-0x46]
  420ad9:	lock push esi
  420adb:	in     al,dx
  420adc:	mov    bl,0x4d
  420ade:	or     al,0x2f
  420ae0:	(bad)  
  420ae1:	mov    esi,0xa530e1a9
  420ae6:	fmul   DWORD PTR [edx+0x4fe8e857]
  420aec:	arpl   sp,si
  420aee:	pop    esi
  420aef:	sbb    BYTE PTR [esi],0x7a
  420af2:	lds    eax,FWORD PTR [edi+0x4d3190b0]
  420af8:	cwde   
  420af9:	inc    eax
  420afa:	mov    al,0x66
  420afc:	push   esp
  420afd:	fs adc al,0x7
  420b00:	stos   BYTE PTR es:[edi],al
  420b01:	scas   eax,DWORD PTR es:[edi]
  420b02:	jno    0x420b5f
  420b04:	jne    0x420ad5
  420b06:	add    bl,BYTE PTR [ecx]
  420b08:	mov    eax,0xb374dcb5
  420b0d:	jns    0x420ad2
  420b0f:	lds    ebp,FWORD PTR [esi+0x1b02182b]
  420b15:	ins    BYTE PTR es:[edi],dx
  420b16:	jne    0x420aab
  420b18:	jne    0x420aaf
  420b1a:	xor    BYTE PTR [ebp-0x2],dl
  420b1d:	mov    dl,0xf5
  420b1f:	xor    eax,0xf2141a01
  420b24:	push   ss
  420b25:	shr    BYTE PTR [ecx+0x18],1
  420b28:	or     ah,0x38
  420b2b:	(bad)  
  420b2d:	nop
  420b2e:	dec    esp
  420b2f:	pop    edx
  420b30:	int    0xa5
  420b32:	test   eax,0xee6fee98
  420b37:	mov    ch,0xa9
  420b39:	lds    ebx,FWORD PTR [esi+0x7f]
  420b3c:	and    ecx,DWORD PTR [edx]
  420b3e:	rol    DWORD PTR [edx+0xb90833b],cl
  420b44:	adc    dl,ah
  420b46:	jo     0x420b4d
  420b48:	fld    st(3)
  420b4a:	jne    0x420b5e
  420b4c:	leave  
  420b4d:	adc    al,BYTE PTR [ebp-0x7d]
  420b50:	xchg   ecx,eax
  420b51:	adc    bl,BYTE PTR [eax+0x2b]
  420b54:	xor    eax,DWORD PTR [edx]
  420b56:	sub    esi,edi
  420b58:	scas   al,BYTE PTR es:[edi]
  420b59:	in     al,dx
  420b5a:	std    
  420b5b:	dec    edi
  420b5c:	call   0xa037:0xaaa8935f
  420b63:	ror    esp,cl
  420b65:	cdq    
  420b66:	(bad)  
  420b67:	(bad)  
  420b68:	jnp    0x420bce
  420b6a:	pusha  
  420b6b:	push   es
  420b6c:	aaa    
  420b6d:	mov    cl,0xfb
  420b6f:	mov    ebx,0x72aea722
  420b74:	jmp    0xfb55810f
  420b79:	js     0x420b17
  420b7b:	xchg   ebx,eax
  420b7c:	and    BYTE PTR [ecx+0x4a],0xc4
  420b80:	xchg   edx,eax
  420b81:	in     eax,0x87
  420b83:	push   0xa123791
  420b88:	icebp  
  420b89:	cli    
  420b8a:	sbb    eax,0x691e930b
  420b8f:	into   
  420b90:	pushf  
  420b91:	xchg   esi,eax
  420b92:	xchg   edi,eax
  420b93:	xchg   esi,eax
  420b94:	pop    esi
  420b95:	arpl   WORD PTR [edx-0x77ed3a46],ax
  420b9b:	mov    dl,0xc8
  420b9d:	xor    bh,BYTE PTR [edi-0x14]
  420ba0:	js     0x420bbb
  420ba2:	add    DWORD PTR [edi+0x680eb5fa],0xffffffd1
  420ba9:	aad    0x97
  420bab:	mov    bh,0x23
  420bad:	ja     0x420c27
  420baf:	loopne 0x420b32
  420bb1:	mov    sp,?
  420bb4:	inc    ebp
  420bb5:	xlat   BYTE PTR ds:[ebx]
  420bb6:	pushf  
  420bb7:	xchg   ebp,eax
  420bb8:	xlat   BYTE PTR ds:[ebx]
  420bb9:	int    0x9a
  420bbb:	ret    
  420bbc:	xchg   ebp,eax
  420bbd:	out    0x19,al
  420bbf:	repz xor eax,0x29133c78
  420bc5:	data16 aaa 
  420bc7:	add    al,0x6f
  420bc9:	lods   eax,DWORD PTR ds:[esi]
  420bca:	push   eax
  420bcb:	jnp    0x420b5f
  420bcd:	jns    0x4cbe618d
  420bd3:	cmc    
  420bd4:	jmp    0xbe:0x443c1cd6
  420bdb:	add    cl,cl
  420bdd:	xchg   esi,eax
  420bde:	ins    DWORD PTR es:[edi],dx
  420bdf:	mov    dh,0x7f
  420be1:	(bad)  
  420be2:	(bad)  
  420be4:	aam    0xd9
  420be6:	inc    ebx
  420be7:	fadd   st,st(0)
  420be9:	pop    ecx
  420bea:	mov    bl,0x2b
  420bec:	rol    BYTE PTR [edi+0x2860001],cl
  420bf2:	add    BYTE PTR [eax],al
  420bf4:	mov    dl,ah
  420bf6:	retf   0x2a60
  420bf9:	ficom  DWORD PTR [ebx+ecx*4]
  420bfc:	push   es
  420bfd:	ret    0x3189
  420c00:	jmp    DWORD PTR [ebp+0x2f6d7a78]
  420c06:	gs inc esi
  420c08:	lods   eax,DWORD PTR ds:[esi]
  420c09:	sbb    cl,cl
  420c0b:	repnz int 0x35
  420c0e:	jg     0x420c7d
  420c10:	xchg   esi,eax
  420c11:	fcomp  QWORD PTR [edx-0x10886d58]
  420c17:	push   edx
  420c18:	dec    edi
  420c19:	add    al,0x99
  420c1b:	aam    0x75
  420c1d:	loope  0x420c10
  420c1f:	pop    ss
  420c20:	or     dl,BYTE PTR [edx]
  420c22:	daa    
  420c23:	jmp    0xda789053
  420c28:	lahf   
  420c29:	pop    ebx
  420c2a:	or     eax,0x9ea38904
  420c2f:	push   ebp
  420c30:	sub    esi,DWORD PTR [eax]
  420c32:	ret    
  420c33:	or     al,0x82
  420c35:	and    al,0x37
  420c37:	mov    ds:0x36f2bdd8,al
  420c3c:	ins    DWORD PTR es:[edi],dx
  420c3d:	ds scas eax,DWORD PTR es:[edi]
  420c3f:	je     0x420c68
  420c41:	mov    edx,0x478cb9f7
  420c46:	je     0x420c7d
  420c48:	call   DWORD PTR [ebx]
  420c4a:	adc    edx,eax
  420c4c:	and    DWORD PTR [esi+0x7d3bc9b5],esi
  420c52:	sbb    eax,0x4318e5f9
  420c57:	sahf   
  420c58:	xchg   edi,eax
  420c59:	test   eax,0xd8d3bfe8
  420c5e:	sub    eax,0x43ed26d4
  420c63:	xor    eax,0x4dea4fb
  420c68:	mov    ds,edi
  420c6a:	lea    esp,[ebp-0x4dfd0f1d]
  420c70:	js     0x420c50
  420c72:	or     edi,DWORD PTR [ebx]
  420c74:	sbb    BYTE PTR [ebp-0x41bf1625],0x4e
  420c7b:	ins    DWORD PTR es:[edi],dx
  420c7c:	jno    0x420c32
  420c7e:	xor    ecx,DWORD PTR [esp+ebx*8]
  420c81:	fwait
  420c82:	outs   dx,DWORD PTR ds:[esi]
  420c83:	cmc    
  420c84:	sub    cl,BYTE PTR [edi-0x3cd6c4fc]
  420c8a:	les    eax,FWORD PTR [ebp-0x2e]
  420c8d:	mov    ch,0x62
  420c8f:	dec    eax
  420c90:	push   eax
  420c91:	or     DWORD PTR [eax],edx
  420c93:	jge    0x420c92
  420c95:	ret    
  420c96:	and    eax,0xd130c4ed
  420c9b:	mov    bl,0xdc
  420c9d:	lock lods eax,DWORD PTR ds:[esi]
  420c9f:	or     ah,0x4c
  420ca2:	mov    bh,0xe5
  420ca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ca5:	out    dx,eax
  420ca6:	cwde   
  420ca7:	dec    eax
  420ca8:	adc    al,0x8b
  420caa:	sar    BYTE PTR [edi],1
  420cac:	inc    esp
  420cad:	mov    eax,ds:0xbdddda94
  420cb2:	out    dx,al
  420cb3:	iret   
  420cb4:	jne    0x420cca
  420cb6:	push   0x2b0c69e1
  420cbb:	dec    esp
  420cbc:	cld    
  420cbd:	xor    al,0x5e
  420cbf:	mov    ?,WORD PTR [ebp-0x279b4fa5]
  420cc5:	add    al,0x36
  420cc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cc8:	leave  
  420cc9:	add    eax,0x56229be8
  420cce:	xchg   ebp,eax
  420ccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cd0:	shr    BYTE PTR [eax+0x6b5a06be],1
  420cd6:	js     0x420ce4
  420cd8:	aas    
  420cd9:	hlt    
  420cda:	adc    DWORD PTR [ecx+ebp*8+0x404a359f],ecx
  420ce1:	xor    ah,ch
  420ce3:	int    0xee
  420ce5:	xor    ch,BYTE PTR [eax]
  420ce7:	push   esp
  420ce8:	mov    bl,0xb2
  420cea:	mov    dl,0xa7
  420cec:	cli    
  420ced:	clc    
  420cee:	add    al,0x96
  420cf0:	xor    al,0xf4
  420cf2:	mov    ds:0x220b3eb5,eax
  420cf7:	sahf   
  420cf8:	aad    0xd6
  420cfa:	ja     0x420d44
  420cfc:	adc    DWORD PTR [edi-0x7d9f338e],edi
  420d02:	lea    esi,[ebx]
  420d04:	cmp    edx,DWORD PTR [eax+esi*4]
  420d07:	inc    edi
  420d08:	fs test al,0x8e
  420d0b:	push   edi
  420d0c:	mov    ds:0x7c0f0c4,eax
  420d11:	mov    bh,0xbd
  420d13:	cmc    
  420d14:	out    0xdc,eax
  420d16:	scas   al,BYTE PTR es:[edi]
  420d17:	pop    ss
  420d18:	enter  0x2354,0xb8
  420d1c:	icebp  
  420d1d:	std    
  420d1e:	push   edx
  420d1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d20:	lds    ebp,FWORD PTR [edx]
  420d22:	cdq    
  420d23:	outs   dx,DWORD PTR ds:[esi]
  420d24:	xor    eax,0x71cf95fd
  420d29:	mov    gs,WORD PTR [eax-0x13d6031c]
  420d2f:	xor    ch,BYTE PTR cs:[edx-0x1b]
  420d33:	adc    al,0x84
  420d35:	adc    esi,DWORD PTR [esi+0x43af1c3b]
  420d3b:	xchg   esi,eax
  420d3c:	idiv   cl
  420d3e:	(bad)  
  420d3f:	(bad)  
  420d40:	loopne 0x420cc4
  420d42:	jo     0x420d65
  420d44:	scas   al,BYTE PTR es:[edi]
  420d45:	sub    al,0xfb
  420d47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d48:	loopne 0x420d67
  420d4a:	enter  0xcd00,0x1
  420d4e:	fst    QWORD PTR [eax-0x68]
  420d51:	ficom  WORD PTR [edx+edi*2]
  420d54:	xor    DWORD PTR ds:0xc5af5bda,0x9e036677
  420d5e:	adc    eax,0xd9ea1e09
  420d63:	inc    esp
  420d64:	idiv   ebx
  420d66:	(bad)  
  420d68:	shl    dh,0xa5
  420d6b:	lods   al,BYTE PTR ds:[esi]
  420d6c:	(bad)  
  420d6d:	aaa    
  420d6e:	frstor [ebp+0xa40e1ce]
  420d74:	sub    esp,ebp
  420d76:	xor    cl,cl
  420d78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d79:	or     DWORD PTR [edx-0x75],ebx
  420d7c:	and    BYTE PTR [ebp+0x46b058d7],0xc8
  420d83:	xchg   esi,eax
  420d84:	jle    0x420d1d
  420d86:	xlat   BYTE PTR ds:[ebx]
  420d87:	sub    DWORD PTR [ecx],ebp
  420d89:	bound  esi,QWORD PTR [esi+0x5e29f236]
  420d8f:	das    
  420d90:	sbb    edx,DWORD PTR [ebx]
  420d92:	imul   sp,bx,0xffb1
  420d96:	mov    bl,0x4a
  420d98:	xchg   edi,eax
  420d99:	daa    
  420d9a:	out    dx,eax
  420d9b:	(bad)  [ebx+esi*1-0xf3d6207]
  420da2:	outs   dx,DWORD PTR ds:[esi]
  420da3:	jno    0x420d68
  420da5:	sub    BYTE PTR [edx-0x5f],0x8a
  420da9:	inc    eax
  420daa:	ds mov al,0xf0
  420dad:	jge    0x420d4f
  420daf:	adc    ecx,ebp
  420db1:	push   edi
  420db2:	sahf   
  420db3:	inc    esi
  420db4:	sbb    al,bl
  420db6:	xor    DWORD PTR [edi+0x20],ebp
  420db9:	nop
  420dba:	rcl    DWORD PTR [edi+esi*8+0x317c5d],cl
  420dc1:	add    BYTE PTR [ebx+edx*8-0x69],dl
  420dc5:	outs   dx,DWORD PTR ds:[esi]
  420dc6:	push   ebp
  420dc7:	sub    dh,cl
  420dc9:	call   0xa8e30a8b
  420dce:	out    dx,eax
  420dcf:	bound  esp,QWORD PTR [ecx+0x1e87745d]
  420dd5:	test   cl,dh
  420dd7:	add    al,0xbc
  420dd9:	cld    
  420dda:	lds    ebx,FWORD PTR [ecx+0x33]
  420ddd:	out    dx,al
  420dde:	lock mov bl,0x10
  420de1:	test   eax,0xe0b06963
  420de6:	ret    
  420de7:	pop    esp
  420de8:	les    ebp,FWORD PTR [eax+0x4a]
  420deb:	or     bl,BYTE PTR [esi-0x65]
  420dee:	xchg   DWORD PTR [ebp-0x76a32177],esi
  420df4:	cmc    
  420df5:	(bad)  
  420df6:	lahf   
  420df7:	dec    esi
  420df8:	push   ebx
  420df9:	add    BYTE PTR [edx-0x79b34ea1],ch
  420dff:	cmp    bh,bl
  420e01:	aas    
  420e02:	jne    0x59cd525f
  420e08:	mov    bh,0xd6
  420e0b:	(bad)  
  420e0c:	bound  edx,QWORD PTR [ebp-0x60b962e6]
  420e12:	les    ebp,FWORD PTR [ecx+0x4a]
  420e15:	push   esp
  420e16:	xchg   edi,eax
  420e17:	fwait
  420e18:	xchg   ecx,eax
  420e19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e1b:	in     al,0xca
  420e1d:	(bad)  
  420e1e:	loope  0x420e27
  420e20:	in     eax,0xf3
  420e22:	outs   dx,BYTE PTR ds:[esi]
  420e23:	mov    eax,ds:0x7d52b92a
  420e28:	sti    
  420e29:	aad    0x51
  420e2b:	push   ss
  420e2c:	xlat   BYTE PTR ds:[ebx]
  420e2d:	sbb    al,al
  420e2f:	pop    ds
  420e30:	mov    edi,0xbb8c9393
  420e35:	push   esp
  420e36:	int    0x73
  420e38:	clc    
  420e39:	dec    edx
  420e3a:	pusha  
  420e3b:	jbe    0x420e56
  420e3d:	pop    esi
  420e3e:	adc    eax,0xafa648f0
  420e43:	cmp    DWORD PTR [esi-0x489b0b77],ecx
  420e49:	mov    ds:0x62b39212,eax
  420e4e:	sbb    BYTE PTR [eax],bl
  420e50:	jmp    0xc1fe:0xedd46171
  420e57:	mov    eax,ds:0x1dc9df4b
  420e5c:	xrelease mov DWORD PTR [ebx-0x55dfed3],edx
  420e63:	inc    edi
  420e64:	les    edx,FWORD PTR [edi]
  420e66:	xchg   esi,eax
  420e67:	or     eax,0xefb8ff20
  420e6c:	ja     0x420dfa
  420e6e:	aaa    
  420e6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e70:	pop    esp
  420e71:	mov    dh,0x60
  420e73:	and    edi,DWORD PTR [esi]
  420e75:	sub    BYTE PTR [edx+0x46],ch
  420e78:	add    ah,bh
  420e7a:	add    BYTE PTR [eax],al
  420e7c:	dec    eax
  420e7d:	out    dx,eax
  420e7e:	ja     0x420eeb
  420e80:	idiv   ebx
  420e82:	pop    esp
  420e83:	out    dx,eax
  420e84:	dec    esp
  420e85:	mul    BYTE PTR [esi-0x7d]
  420e88:	pop    es
  420e89:	call   0x8a9a4fa1
  420e8e:	add    DWORD PTR [eax],eax
  420e90:	xchg   BYTE PTR [edx],al
  420e92:	add    BYTE PTR [eax],al
  420e94:	dec    edi
  420e95:	fstp   QWORD PTR ds:[ebx+ebp*8]
  420e99:	int3   
  420e9a:	add    al,0xfb
  420e9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e9d:	jb     0x420efd
  420e9f:	push   edx
  420ea0:	sbb    bl,BYTE PTR gs:[ebx]
  420ea3:	in     eax,dx
  420ea4:	inc    ebx
  420ea5:	pushf  
  420ea6:	sar    BYTE PTR [ebx+0x3daa429b],1
  420eac:	adc    DWORD PTR [eax-0x650e9914],ecx
  420eb2:	jl     0x420e66
  420eb4:	fbld   TBYTE PTR [eax]
  420eb6:	cmp    ch,BYTE PTR [edi]
  420eb8:	es push si
  420ebb:	xchg   ebp,ecx
  420ebd:	mov    eax,0xece0e0b7
  420ec2:	add    al,0xca
  420ec4:	lea    esi,[eax+edx*8-0x4a]
  420ec8:	je     0x420f3f
  420eca:	fisttp QWORD PTR [ecx+0x19]
  420ecd:	out    dx,al
  420ece:	out    dx,al
  420ecf:	mov    eax,ds:0x6a998f78
  420ed4:	adc    BYTE PTR [ebx],dh
  420ed6:	jg     0x420eda
  420ed8:	mov    al,ds:0x6803bab4
  420edd:	pop    edi
  420ede:	aad    0x52
  420ee0:	fmul   QWORD PTR fs:[ebp+0x5e007d10]
  420ee7:	popf   
  420ee8:	das    
  420ee9:	loopne 0x420ef3
  420eeb:	loopne 0x420ed9
  420eed:	push   ebp
  420eee:	xor    bl,cl
  420ef0:	mov    al,0x9
  420ef2:	xor    DWORD PTR [edi],esp
  420ef4:	das    
  420ef5:	sahf   
  420ef6:	(bad)  
  420ef7:	cs data16 cmp dl,bl
  420efb:	inc    esi
  420efc:	cmp    DWORD PTR ds:0xb3504454,ebx
  420f02:	loop   0x420e97
  420f04:	jmp    0x420f15
  420f06:	aad    0x5f
  420f08:	adc    dh,BYTE PTR [edi]
  420f0a:	std    
  420f0b:	mov    esp,0xb2a3e13f
  420f10:	xlat   BYTE PTR ds:[ebx]
  420f11:	push   DWORD PTR [edx]
  420f13:	and    DWORD PTR [edx+0x6e],esi
  420f16:	fisttp QWORD PTR [edi]
  420f18:	fcomp  QWORD PTR [edi+0x5b]
  420f1b:	adc    BYTE PTR [esp+ebp*4+0x2e],al
  420f1f:	daa    
  420f20:	iret   
  420f21:	out    0x29,al
  420f23:	ror    BYTE PTR [esi+ecx*1-0x2fa845a6],0xb5
  420f2b:	int    0x8d
  420f2d:	outs   dx,DWORD PTR ds:[esi]
  420f2e:	mov    ebx,0x5b7aa414
  420f33:	or     esi,DWORD PTR [edx-0x759ffc70]
  420f39:	sub    eax,0x846ebed4
  420f3e:	popa   
  420f3f:	xor    BYTE PTR [edi],al
  420f41:	mov    cl,bl
  420f43:	out    0x41,al
  420f45:	js     0x420ed2
  420f47:	sbb    eax,0x5110215f
  420f4c:	in     al,dx
  420f4d:	jmp    0x372179fc
  420f52:	aaa    
  420f53:	cmp    ch,BYTE PTR [edx-0x19831b41]
  420f59:	stos   DWORD PTR es:[edi],eax
  420f5a:	sti    
  420f5b:	ja     0x420f60
  420f5d:	push   es
  420f5e:	mov    eax,0xa8ef44d0
  420f63:	cmp    BYTE PTR [edx],ch
  420f65:	and    DWORD PTR [esi+0x3a],ebx
  420f68:	jb     0x420f40
  420f6a:	mov    ds:0x65dc61e8,eax
  420f6f:	adc    edx,esp
  420f71:	imul   DWORD PTR [ecx-0x1b]
  420f74:	mov    al,ds:0x26f8e2b
  420f79:	ds fs pushf 
  420f7c:	cwde   
  420f7d:	jne    0x420fd3
  420f7f:	dec    esi
  420f80:	sbb    DWORD PTR [esi+0x2a9ed78b],eax
  420f86:	fstp   TBYTE PTR ds:0x94c06ea0
  420f8c:	stc    
  420f8d:	push   cs
  420f8e:	jnp    0x420f27
  420f90:	(bad)  
  420f91:	pop    ss
  420f92:	push   edi
  420f93:	push   esi
  420f94:	push   ebx
  420f95:	mov    ebx,0x11ed3eb4
  420f9a:	mov    ds:0x31290e7c,eax
  420f9f:	retf   0xcff
  420fa2:	(bad)  
  420fa3:	xor    al,0x1b
  420fa5:	jp     0x420fee
  420fa7:	push   ecx
  420fa8:	sbb    eax,DWORD PTR [ecx]
  420faa:	and    ebx,DWORD PTR [eax+0x12673353]
  420fb0:	ja     0x420fd6
  420fb2:	push   ecx
  420fb3:	mov    dl,BYTE PTR [eax+0x7f8912f2]
  420fb9:	xlat   BYTE PTR ds:[ebx]
  420fba:	pop    edx
  420fbb:	dec    eax
  420fbc:	jle    0x420f40
  420fbe:	call   0x3aa5:0xd1a08f3b
  420fc5:	(bad)  
  420fc6:	jns    0x42101b
  420fc8:	dec    ecx
  420fc9:	bound  eax,QWORD PTR [ebp*4+0x77bbaf07]
  420fd0:	and    cl,BYTE PTR [ecx+0x72cfea7c]
  420fd6:	or     DWORD PTR [ebp+0x427ae34e],esi
  420fdc:	pop    ecx
  420fdd:	cmp    ecx,ecx
  420fdf:	sbb    BYTE PTR [edi+0x39d99aaa],ch
  420fe5:	mov    ecx,0x722fbfd7
  420fea:	inc    eax
  420feb:	int    0xd5
  420fed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fee:	mov    cl,0xec
  420ff0:	pusha  
  420ff1:	fs mov ebp,0xd38a42c4
  420ff7:	lock pushf 
  420ff9:	into   
  420ffa:	std    
  420ffb:	sti    
  420ffc:	(bad)  
  420ffd:	fisttp QWORD PTR [eax-0x61]
  421000:	pop    eax
  421001:	mov    ds:0xcd8ff8d7,eax
  421006:	iret   
  421007:	ins    BYTE PTR es:[edi],dx
  421008:	mov    ch,0xbf
  42100a:	mov    DWORD PTR [ebx+0x9],esp
  42100d:	outs   dx,DWORD PTR ds:[esi]
  42100e:	cmp    eax,0xdda60567
  421013:	data16 jge 0x421035
  421016:	sub    al,0xb6
  421018:	and    BYTE PTR ds:0xd6cecf0e,0xbd
  42101f:	mov    cl,0x8b
  421021:	(bad)  
  421022:	ficomp WORD PTR [esi+edx*8+0x11]
  421026:	not    DWORD PTR [ebx+0x5c]
  421029:	fsubr  DWORD PTR [edx+0x3a]
  42102c:	lea    esp,[esi+0x0]
  42102f:	imul   ebx,DWORD PTR [eax+edx*1-0x38],0x12073abc
  421037:	dec    ebp
  421038:	fnop   
  42103a:	xchg   ebp,eax
  42103b:	xor    al,0x6f
  42103d:	pop    edx
  42103e:	or     DWORD PTR [edx+0x73],edi
  421041:	imul   ecx,ebx,0x998dbf0b
  421047:	lods   eax,DWORD PTR ds:[esi]
  421048:	daa    
  421049:	neg    DWORD PTR [eax-0x67b0da55]
  42104f:	push   ss
  421050:	(bad)  [ecx-0x2b6926f7]
  421056:	pop    esp
  421057:	mov    ah,0x82
  421059:	and    eax,0xb903c0c3
  42105e:	push   edi
  42105f:	xor    ecx,ebx
  421061:	sub    BYTE PTR [edi-0x305acb75],0x78
  421068:	popa   
  421069:	fstp   DWORD PTR [edx+edi*2+0x566a8fac]
  421070:	push   esi
  421071:	inc    ebp
  421072:	out    dx,eax
  421073:	mov    al,0xe9
  421075:	pop    ss
  421076:	xlat   BYTE PTR ds:[ebx]
  421077:	aad    0xe8
  421079:	ins    BYTE PTR es:[edi],dx
  42107a:	xchg   ebx,eax
  42107b:	cmp    DWORD PTR [ebx],ecx
  42107d:	les    ebx,FWORD PTR [esi+0x7339e811]
  421083:	pop    ebp
  421084:	sbb    ebp,ebp
  421086:	cdq    
  421087:	inc    ecx
  421088:	add    ebx,DWORD PTR [ebx+0x1a]
  42108b:	js     0x421067
  42108d:	test   eax,0x44d5f4a4
  421092:	sbb    al,0x68
  421094:	in     eax,0x61
  421096:	imul   eax,DWORD PTR [eax+0x5b],0x63
  42109a:	adc    al,0x5c
  42109c:	push   0x41
  42109e:	test   BYTE PTR [edx-0x7a5443d8],al
  4210a4:	cld    
  4210a5:	pushf  
  4210a6:	icebp  
  4210a7:	pop    ss
  4210a8:	cmp    BYTE PTR [ecx+edx*2-0x704843ad],al
  4210af:	dec    esp
  4210b0:	hlt    
  4210b1:	pop    ds
  4210b2:	and    al,0x40
  4210b4:	adc    ecx,DWORD PTR [esi+0x546ce37c]
  4210ba:	test   ebp,edi
  4210bc:	adc    bl,BYTE PTR [ecx]
  4210be:	or     BYTE PTR [edx-0x124a1418],0xef
  4210c5:	ss dec ecx
  4210c7:	jb     0x42107e
  4210c9:	fisttp DWORD PTR [edi-0x27]
  4210cc:	mov    DWORD PTR [ecx+0x0],ecx
  4210cf:	out    0xf0,eax
  4210d1:	mov    al,ds:0x30c1f871
  4210d6:	xor    al,0xcd
  4210d8:	aaa    
  4210d9:	ja     0x4210ac
  4210db:	js     0x421104
  4210dd:	sti    
  4210de:	sub    ch,0x2d
  4210e1:	push   cs
  4210e2:	stc    
  4210e3:	or     bh,BYTE PTR [ebx+eiz*4+0x28]
  4210e7:	xchg   ebp,eax
  4210e8:	mov    DWORD PTR [ecx-0x2],esp
  4210eb:	push   0x531c74ff
  4210f0:	jns    0x421159
  4210f2:	and    al,0x7e
  4210f4:	push   es
  4210f5:	rcr    DWORD PTR ds:[esi+0x649a6520],1
  4210fc:	add    eax,0x9710f375
  421101:	and    ecx,DWORD PTR [edx]
  421103:	inc    esp
  421104:	inc    esi
  421105:	retf   
  421106:	add    eax,0x36dd1b4c
  42110b:	add    BYTE PTR [esi],bl
  42110d:	mov    eax,0xea6b31e3
  421112:	cmp    BYTE PTR [ecx+0x25],ah
  421115:	push   eax
  421116:	into   
  421117:	and    ah,BYTE PTR [edx+0x51]
  42111a:	add    BYTE PTR [eax],al
  42111c:	mov    al,0xe3
  42111e:	pop    edx
  42111f:	jecxz  0x42117c
  421121:	sti    
  421122:	mov    ecx,0x72415ff3
  421127:	test   edi,edx
  421129:	ror    BYTE PTR [edi+0x18cde2b],1
  42112f:	add    BYTE PTR [esi+0x70000002],al
  421135:	mov    ch,0x85
  421137:	sahf   
  421138:	add    bh,BYTE PTR [edi]
  42113a:	ins    BYTE PTR es:[edi],dx
  42113b:	lds    edx,FWORD PTR [ecx-0x7b]
  42113e:	sbb    al,BYTE PTR [esi+0x76]
  421141:	adc    eax,0x2bb3678
  421146:	dec    esp
  421147:	push   0x57
  421149:	arpl   WORD PTR [edx+0x13],cx
  42114c:	shr    BYTE PTR [ebx],1
  42114e:	xor    BYTE PTR [edx+0x2d],dh
  421151:	xlat   BYTE PTR ds:[ebx]
  421152:	inc    ebx
  421153:	mov    ecx,0x2d40baa1
  421158:	inc    ecx
  421159:	fisubr DWORD PTR [esi-0x77]
  42115c:	xchg   esp,eax
  42115d:	das    
  42115e:	xor    eax,0x41152645
  421163:	push   cs
  421164:	or     DWORD PTR [ebp+0x4a],ecx
  421167:	mov    esp,DWORD PTR [ebx+0x517d64ba]
  42116d:	loop   0x4211c1
  42116f:	jle    0x42117e
  421171:	jb     0x421193
  421173:	pop    ebx
  421174:	sbb    DWORD PTR [ebx],ecx
  421176:	mov    BYTE PTR [ebx],cl
  421178:	(bad)  
  421179:	icebp  
  42117a:	cmp    DWORD PTR [edx],0x38e0721c
  421180:	sub    bl,BYTE PTR [edx+ebp*8]
  421183:	(bad)  [edx]
  421185:	pop    ecx
  421186:	les    esp,FWORD PTR [esi+0x23]
  421189:	fdivr  DWORD PTR [ecx-0x7]
  42118c:	inc    ecx
  42118d:	lds    ebp,FWORD PTR [edi+0x49]
  421190:	or     eax,0xed35a19e
  421195:	test   BYTE PTR [ebp+ebx*4+0x4a],al
  421199:	adc    eax,0x765cf4a7
  42119e:	xor    eax,0x26d4c035
  4211a3:	xor    ebx,ecx
  4211a5:	rcl    DWORD PTR [edx],1
  4211a7:	shr    DWORD PTR ds:0x44abb8c8,cl
  4211ad:	cdq    
  4211ae:	add    eax,0xa7d80bac
  4211b3:	js     0x421189
  4211b5:	loope  0x42120a
  4211b7:	gs out 0xf1,eax
  4211ba:	and    BYTE PTR [ebx+0x1765bbe2],0xc
  4211c1:	js     0x421160
  4211c3:	in     al,0xd2
  4211c5:	jnp    0x421228
  4211c7:	leave  
  4211c8:	test   al,0x30
  4211ca:	stos   BYTE PTR es:[edi],al
  4211cb:	loope  0x4211d0
  4211cd:	mov    eax,0xc2aadaa7
  4211d2:	fist   DWORD PTR [edx+ebp*2]
  4211d5:	mov    esp,0x795ca5e
  4211da:	ds xchg esp,eax
  4211dc:	jo     0x421194
  4211de:	js     0x4211e0
  4211e0:	xlat   BYTE PTR ds:[ebx]
  4211e1:	rol    esi,0x9c
  4211e4:	mov    al,ds:0x7e61ce93
  4211e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211ea:	lods   al,BYTE PTR ds:[esi]
  4211eb:	in     al,dx
  4211ec:	in     al,dx
  4211ed:	push   eax
  4211ee:	mov    dh,0x33
  4211f0:	lea    esp,[edi-0x7b3c0db6]
  4211f6:	jmp    0x4211c2
  4211f8:	cs or  esp,eax
  4211fb:	cli    
  4211fc:	inc    ebx
  4211fd:	adc    ch,BYTE PTR [eax+0x5e96332b]
  421203:	out    0xe6,al
  421205:	sar    DWORD PTR [edx-0x3ddce6ee],0x45
  42120c:	mov    eax,ds:0xa69b18f4
  421211:	daa    
  421212:	xor    ebx,ecx
  421214:	pop    edi
  421215:	out    0x70,al
  421217:	scas   eax,DWORD PTR es:[edi]
  421218:	fwait
  421219:	jmp    0x13ee21bb
  42121e:	retf   0x21e1
  421221:	cmp    al,0x2d
  421223:	(bad)  
  421224:	xor    al,0xcf
  421226:	les    eax,FWORD PTR [ecx+esi*2-0xcd24ed4]
  42122d:	push   ebx
  42122e:	pop    esi
  42122f:	inc    edx
  421230:	jns    0x421222
  421232:	mov    cl,dl
  421234:	ds cwde 
  421236:	jge    0x42121f
  421238:	mov    BYTE PTR ds:0xd1720e31,dh
  42123e:	shl    BYTE PTR [esi-0x7c],0xb
  421242:	stos   DWORD PTR es:[edi],eax
  421243:	fmul   st(2),st
  421245:	mov    esp,0xb509b51d
  42124a:	mov    ch,0x5d
  42124c:	mov    al,ds:0xd41b4fd3
  421251:	test   DWORD PTR [ebx+0x575ffdbf],esp
  421257:	jne    0x421253
  421259:	test   al,0xbf
  42125b:	push   es
  42125c:	out    dx,eax
  42125d:	clc    
  42125e:	jbe    0x421239
  421260:	js     0x4211e8
  421262:	inc    edx
  421263:	nop
  421264:	jae    0x421229
  421266:	aad    0xc2
  421268:	and    al,0x19
  42126a:	lock (bad) 
  42126c:	push   0x36
  42126e:	mov    edi,0x367ac416
  421273:	cmc    
  421274:	xlat   BYTE PTR ds:[ebx]
  421275:	retf   0xf4c
  421278:	jbe    0x421254
  42127a:	out    0xf5,eax
  42127c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42127d:	push   cs
  42127e:	shl    edi,0x96
  421281:	mov    ebp,DWORD PTR [edx+esi*1+0x32]
  421285:	pop    esi
  421286:	jge    0x42128e
  421288:	leave  
  421289:	cmp    ecx,DWORD PTR [ecx+0xc225a95]
  42128f:	lahf   
  421290:	adc    al,0x65
  421292:	jg     0x4212ea
  421294:	into   
  421295:	(bad)  
  421296:	(bad)  
  421297:	mov    al,0x2c
  421299:	ror    DWORD PTR [ebx],1
  42129b:	jne    0x4212d7
  42129d:	pop    edx
  42129e:	stc    
  42129f:	dec    ebx
  4212a0:	push   edi
  4212a1:	xor    BYTE PTR [ebx-0xaf887be],dh
  4212a7:	push   esp
  4212a8:	fisubr DWORD PTR [ebx-0x1e]
  4212ab:	jl     0x42128b
  4212ad:	push   es
  4212ae:	inc    ebp
  4212af:	scas   eax,DWORD PTR es:[edi]
  4212b0:	xchg   ecx,eax
  4212b1:	dec    eax
  4212b2:	mov    esi,0x10e37605
  4212b7:	and    ebp,ebx
  4212b9:	push   ss
  4212ba:	sub    DWORD PTR [edi+0x7afe8c3],ecx
  4212c0:	cmp    ch,ah
  4212c2:	xchg   edi,eax
  4212c3:	rcr    ebp,1
  4212c5:	out    dx,eax
  4212c6:	add    DWORD PTR [eax+ecx*8],edi
  4212c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212ca:	or     DWORD PTR [eax],ebp
  4212cc:	or     eax,0xc25db13e
  4212d1:	ret    0xf433
  4212d4:	cld    
  4212d5:	pushf  
  4212d6:	xor    al,0x35
  4212d8:	mov    edx,0xfa32e6da
  4212dd:	sub    DWORD PTR [ecx],edi
  4212df:	dec    esp
  4212e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212e2:	cmp    BYTE PTR [ecx],ch
  4212e4:	test   esi,edx
  4212e6:	sbb    ah,BYTE PTR [edi]
  4212e8:	sbb    BYTE PTR [edx+0x7dc35045],ah
  4212ee:	push   0xffffff94
  4212f0:	push   0xffffffd3
  4212f2:	push   DWORD PTR [ecx]
  4212f4:	jb     0x421304
  4212f6:	out    0x3,eax
  4212f8:	add    bh,dh
  4212fa:	xchg   esi,ebp
  4212fc:	rol    BYTE PTR [esi-0x33c2be54],0x12
  421303:	or     DWORD PTR [esi+0x1c],esi
  421306:	jbe    0x4212f3
  421308:	ret    0x360a
  42130b:	and    eax,0x823f7723
  421310:	(bad)  
  421311:	mov    ch,0x57
  421313:	dec    ebp
  421314:	mov    WORD PTR [eax+0x5b],ss
  421317:	push   ds
  421318:	push   esp
  421319:	xchg   edi,eax
  42131a:	addr16 jns 0x42130d
  42131d:	shr    BYTE PTR [edi+ebp*8-0x3a2df0da],0x19
  421325:	lea    edx,[eax-0x80]
  421328:	(bad)  
  421329:	(bad)  
  42132a:	arpl   WORD PTR [ecx+ecx*2-0x1e1905cd],di
  421331:	scas   eax,DWORD PTR es:[edi]
  421332:	or     ecx,ecx
  421334:	lods   al,BYTE PTR ds:[esi]
  421335:	stos   BYTE PTR es:[edi],al
  421336:	mov    bh,BYTE PTR [edx]
  421338:	sub    ch,BYTE PTR [ebp-0x3c]
  42133b:	fbld   TBYTE PTR [ebx-0x8ee79d4]
  421341:	push   eax
  421342:	(bad)  
  421343:	popa   
  421344:	xor    al,0xd5
  421346:	out    dx,eax
  421347:	enter  0xdaee,0xe9
  42134b:	rcr    eax,1
  42134d:	jns    0x421357
  42134f:	fild   DWORD PTR [ebx]
  421351:	add    esi,DWORD PTR [esi+ebp*1+0x7cca609d]
  421358:	ins    BYTE PTR es:[edi],dx
  421359:	push   DWORD PTR [edx-0xa]
  42135c:	cmp    BYTE PTR [esi+0x7e],al
  42135f:	dec    esp
  421360:	xor    ebp,DWORD PTR [ebp-0x56d5042c]
  421366:	ja     0x4212fc
  421368:	cmp    BYTE PTR ds:0xc96738a0,0xad
  42136f:	and    eax,0x1c977ba9
  421374:	xchg   edx,eax
  421375:	loope  0x4213bb
  421377:	jg     0x4213ad
  421379:	cmp    BYTE PTR [edi+0x68948c13],dh
  42137f:	jg     0x421331
  421381:	ja     0x42139c
  421383:	xchg   DWORD PTR [ebx-0xf],edi
  421386:	loope  0x42133a
  421388:	cmp    cl,BYTE PTR [edi+0x61]
  42138b:	aaa    
  42138c:	and    dl,dl
  42138e:	stos   BYTE PTR es:[edi],al
  42138f:	pop    edx
  421390:	imul   edi,DWORD PTR [edi+0x7738c55c],0x22ecc545
  42139a:	pop    ecx
  42139b:	push   esp
  42139c:	es (bad) 
  42139e:	repz mov dl,0xa4
  4213a1:	imul   edx,ebp,0x6e
  4213a4:	push   ebx
  4213a5:	xor    DWORD PTR [bp+si-0x1b72],eax
  4213aa:	daa    
  4213ab:	adc    DWORD PTR [ecx],esi
  4213ad:	pusha  
  4213ae:	(bad)  
  4213af:	rcr    DWORD PTR [eiz*8-0x7e0e7c47],0xc4
  4213b7:	mov    WORD PTR [edx+0x350000a2],?
  4213bd:	mov    ss,WORD PTR [esi]
  4213bf:	push   es
  4213c0:	mov    edi,0x7bf359e
  4213c5:	call   0x5d41ce6a
  4213ca:	inc    esp
  4213cb:	add    eax,0x18f64
  4213d0:	xchg   BYTE PTR [edx],al
  4213d2:	add    BYTE PTR [eax],al
  4213d4:	cwde   
  4213d5:	adc    cl,bl
  4213d7:	pop    edi
  4213d8:	jge    0x421416
  4213da:	pushf  
  4213db:	sbb    DWORD PTR ds:0xde31f0b5,0x5b2dfad8
  4213e5:	sub    BYTE PTR [edi],bl
  4213e7:	fwait
  4213e8:	inc    esp
  4213e9:	dec    esi
  4213ea:	jns    0x421428
  4213ec:	cmp    ah,ah
  4213ee:	dec    eax
  4213ef:	jae    0x42142b
  4213f1:	sbb    al,0x37
  4213f3:	scas   eax,DWORD PTR es:[edi]
  4213f4:	push   ebp
  4213f5:	outs   dx,DWORD PTR ds:[esi]
  4213f6:	jno    0x421431
  4213f8:	mov    dl,BYTE PTR [ebp-0x52bf383a]
  4213fe:	inc    edi
  4213ff:	sar    DWORD PTR [edx+eax*8],1
  421402:	jbe    0x4213b2
  421404:	(bad)  
  421405:	es pop edi
  421407:	pop    eax
  421408:	or     BYTE PTR [edx+esi*2-0x7e],0x8f
  42140d:	inc    ecx
  42140e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42140f:	aaa    
  421410:	enter  0x9258,0x2b
  421414:	dec    eax
  421415:	mov    cl,0x47
  421417:	lods   eax,DWORD PTR ds:[esi]
  421418:	pop    esi
  421419:	leave  
  42141a:	(bad)  
  42141b:	(bad)  
  42141c:	aas    
  42141d:	sbb    DWORD PTR [ebx+0x67],ebp
  421420:	ins    DWORD PTR es:[edi],dx
  421421:	shr    esp,cl
  421423:	cmc    
  421424:	dec    ebp
  421425:	ror    BYTE PTR [ebx+eiz*1+0x31],0xbe
  42142a:	add    ah,ah
  42142c:	stos   BYTE PTR es:[edi],al
  42142d:	bound  esi,QWORD PTR [edi+esi*2]
  421430:	pop    edi
  421431:	add    ebx,DWORD PTR [ebx-0x39e82fbd]
  421437:	out    dx,al
  421438:	jg     0x421431
  42143a:	test   DWORD PTR ds:0xefcd16c4,ecx
  421440:	jle    0x421423
  421442:	sub    al,0xd2
  421444:	adc    DWORD PTR [eax+eax*8+0x2a4b9697],0xffffffb0
  42144c:	adc    cl,al
  42144e:	adc    dl,cl
  421450:	icebp  
  421451:	popa   
  421452:	data16 inc bx
  421455:	out    dx,eax
  421456:	mov    ch,0x31
  421458:	push   edx
  421459:	fsub   st,st(7)
  42145b:	xor    DWORD PTR [edx+0x66c36111],edx
  421461:	xchg   edi,eax
  421462:	fist   WORD PTR ss:0xed11759f
  421469:	mov    bl,0xab
  42146b:	jge    0x42141f
  42146d:	repnz (bad) 
  42146f:	aaa    
  421470:	inc    edi
  421471:	add    cl,ch
  421473:	push   eax
  421474:	cmp    esi,edi
  421476:	cs inc ebx
  421478:	int    0xda
  42147a:	dec    eax
  42147b:	or     al,0xc5
  42147d:	sbb    DWORD PTR [ecx],ecx
  42147f:	jne    0x421443
  421481:	pop    es
  421482:	mov    al,ds:0x60e3804b
  421487:	call   0x637f6270
  42148c:	ins    DWORD PTR es:[edi],dx
  42148d:	in     al,dx
  42148e:	shl    BYTE PTR [esi+ebx*1+0x720c1a2d],cl
  421495:	and    bl,BYTE PTR [edi+0x5892919a]
  42149b:	aam    0xd3
  42149d:	aaa    
  42149e:	jne    0x4214bd
  4214a0:	arpl   WORD PTR [edx],ax
  4214a2:	mov    bh,0x2b
  4214a4:	inc    eax
  4214a5:	cmp    ecx,ecx
  4214a7:	cmp    ebx,DWORD PTR [ebp+eax*2+0x24]
  4214ab:	pusha  
  4214ac:	(bad)  
  4214ad:	std    
  4214ae:	test   BYTE PTR [eax],ah
  4214b0:	dec    ecx
  4214b1:	sub    esi,DWORD PTR [esi+0x62b8863c]
  4214b7:	stos   BYTE PTR es:[edi],al
  4214b8:	out    0x61,al
  4214ba:	jb     0x4214b5
  4214bc:	fst    QWORD PTR [ecx]
  4214be:	cmp    bl,BYTE PTR [edi]
  4214c0:	xor    eax,0x7426e362
  4214c5:	sbb    al,0x5f
  4214c7:	inc    esp
  4214c8:	mov    DWORD PTR [ecx],ecx
  4214ca:	pop    ebp
  4214cb:	clc    
  4214cc:	sar    al,1
  4214ce:	arpl   dx,cx
  4214d0:	add    edx,DWORD PTR [ebx-0x546519ca]
  4214d6:	inc    ebx
  4214d7:	add    BYTE PTR [edi-0x11],ch
  4214da:	or     eax,0x32f237ae
  4214df:	repnz xchg edx,eax
  4214e1:	pop    ebp
  4214e2:	ins    BYTE PTR es:[edi],dx
  4214e3:	jle    0x421481
  4214e5:	(bad)  
  4214e6:	sub    cl,al
  4214e8:	and    al,0xba
  4214ea:	mov    bh,0xfb
  4214ec:	sbb    eax,0x8691e179
  4214f1:	fisub  WORD PTR [ebx]
  4214f3:	and    al,0x8d
  4214f5:	test   BYTE PTR [edx+0x62fa9532],0x11
  4214fc:	sub    al,0x6
  4214fe:	pop    esp
  4214ff:	sub    al,0xf3
  421501:	ss rol dl,1
  421504:	jae    0x4214de
  421506:	lods   eax,DWORD PTR ds:[esi]
  421507:	outs   dx,DWORD PTR ds:[esi]
  421508:	adc    al,0x1d
  42150a:	mov    dh,0xf8
  42150c:	test   eax,0xeccc587f
  421511:	test   DWORD PTR [esi+esi*2],0xeefb16e9
  421518:	(bad)  
  42151a:	fld    TBYTE PTR [edi]
  42151c:	and    eax,0xd95f2699
  421521:	sbb    edx,DWORD PTR [ebx]
  421523:	sahf   
  421524:	sar    DWORD PTR [eax-0x38df6a78],1
  42152a:	repz inc esi
  42152c:	stc    
  42152d:	push   0x42
  42152f:	add    bh,BYTE PTR ds:0x457fc851
  421535:	adc    al,0x0
  421537:	inc    esi
  421538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421539:	out    dx,al
  42153a:	and    eax,0xeae52d4b
  42153f:	sbb    DWORD PTR [edi+0x60],eax
  421542:	sahf   
  421543:	mov    ah,0x6d
  421545:	inc    edi
  421546:	cdq    
  421547:	ins    BYTE PTR es:[edi],dx
  421548:	mov    ecx,0xeb6bd3a8
  42154d:	lods   eax,DWORD PTR ds:[esi]
  42154e:	stc    
  42154f:	and    eax,0xa787f1fd
  421554:	xor    ecx,ebx
  421556:	sbb    ebx,DWORD PTR [ebx]
  421558:	or     BYTE PTR [edi+0x51],0x47
  42155c:	hlt    
  42155d:	jmp    0x6f5f:0xadced351
  421564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421565:	add    BYTE PTR [ebp-0x7d1938de],ch
  42156b:	fdivr  st(0),st
  42156d:	jns    0x42154e
  42156f:	jnp    0x42154c
  421571:	xchg   edx,eax
  421572:	xor    dh,BYTE PTR [edi]
  421574:	mov    edi,0xfbf3d670
  421579:	je     0x4215bf
  42157b:	gs xchg edi,eax
  42157d:	jne    0x42154f
  42157f:	add    al,0x5
  421581:	jmp    0xaa75:0x4b0a0f24
  421588:	add    cl,bl
  42158a:	arpl   WORD PTR [ebp+0x49d9f69f],cx
  421590:	hlt    
  421591:	outs   dx,BYTE PTR ds:[esi]
  421592:	sbb    BYTE PTR [edi],bl
  421594:	xor    eax,esi
  421596:	add    DWORD PTR [edx+0x7a],edi
  421599:	mov    bh,0x1e
  42159b:	dec    edx
  42159c:	cmp    ch,bl
  42159e:	cmpps  xmm3,xmm4,0x96
  4215a2:	inc    ebx
  4215a3:	fst    DWORD PTR [ebx]
  4215a5:	inc    ebx
  4215a6:	rcr    BYTE PTR [ebp+0x3372d678],cl
  4215ac:	add    al,0xe1
  4215ae:	inc    ebp
  4215af:	out    0x1a,al
  4215b1:	test   ah,ah
  4215b3:	(bad)  
  4215b4:	out    dx,eax
  4215b5:	inc    edi
  4215b6:	lahf   
  4215b7:	or     cl,BYTE PTR es:[ebx+0x4ce867e3]
  4215be:	jnp    0x42160f
  4215c0:	xlat   BYTE PTR ds:[ebx]
  4215c1:	mov    bh,0xd4
  4215c3:	call   0xd8d94385
  4215c8:	adc    DWORD PTR [edx],ecx
  4215ca:	pop    ds
  4215cb:	push   edi
  4215cc:	or     eax,0x773b3287
  4215d1:	test   bl,bl
  4215d3:	call   0x259e:0x93c91c17
  4215da:	in     eax,dx
  4215db:	add    DWORD PTR [ebx+esi*8+0x44],0xdf05c671
  4215e3:	pop    ebx
  4215e4:	mov    ds:0x76f3106c,eax
  4215e9:	dec    ebp
  4215ea:	outs   dx,BYTE PTR gs:[esi]
  4215ec:	outs   dx,DWORD PTR ds:[esi]
  4215ed:	cdq    
  4215ee:	cwde   
  4215ef:	sbb    ch,BYTE PTR ds:0xbca99792
  4215f5:	sbb    dl,ah
  4215f7:	sbb    ebx,edx
  4215f9:	inc    edi
  4215fa:	jmp    0x8dab:0xacf880ed
  421601:	mov    WORD PTR [edi],fs
  421603:	mov    ds:0x4317350b,al
  421608:	sub    al,0xa2
  42160a:	pop    esp
  42160b:	inc    ecx
  42160c:	out    dx,al
  42160d:	out    dx,eax
  42160e:	mov    edx,0x52205bfd
  421613:	xchg   edi,eax
  421614:	dec    ebp
  421615:	shl    BYTE PTR ds:0x67f90d7e,1
  42161b:	mov    cl,0x12
  42161d:	mov    ds:0x9c39a88,eax
  421622:	ret    0x5073
  421625:	ins    DWORD PTR es:[edi],dx
  421626:	mov    ch,0x2b
  421628:	push   0x5
  42162a:	adc    cl,BYTE PTR [ecx+0x34d56905]
  421630:	aad    0xff
  421632:	jmp    DWORD PTR [edi]
  421634:	jno    0x42164e
  421636:	dec    edx
  421637:	aaa    
  421638:	mov    ecx,eax
  42163a:	hlt    
  42163b:	adc    al,0x31
  42163d:	adc    al,0xcc
  42163f:	mov    BYTE PTR [edx-0x5e2e8e68],al
  421645:	call   0xb23c:0x52de6905
  42164c:	mov    cl,0x70
  42164e:	adc    eax,0xf8a64f6e
  421653:	jp     0x421661
  421655:	push   cs
  421656:	jae    0x42163a
  421658:	gs inc esi
  42165a:	add    BYTE PTR [eax],al
  42165c:	stc    
  42165d:	std    
  42165e:	in     eax,dx
  42165f:	mov    cl,0xed
  421661:	mov    cl,0xfd
  421663:	std    
  421664:	pop    ds
  421665:	xor    dl,0xed
  421668:	mov    al,0xe1
  42166a:	pop    eax
  42166b:	xor    edx,ebp
  42166d:	xchg   ecx,eax
  42166e:	add    DWORD PTR [eax],eax
  421670:	xchg   BYTE PTR [edx],al
  421672:	add    BYTE PTR [eax],al
  421674:	aaa    
  421675:	mov    esi,0xbdb7e2a5
  42167a:	push   cs
  42167b:	jge    0x4216d0
  42167d:	and    bh,cl
  42167f:	out    dx,al
  421680:	out    0x2b,al
  421682:	pop    esi
  421683:	mov    ds:0x86f42aa9,al
  421688:	ins    BYTE PTR es:[edi],dx
  421689:	add    BYTE PTR [ebp+0x492af8ac],0xa0
  421690:	sub    ch,ch
  421692:	xor    dh,bh
  421694:	sub    eax,0x9cc4571d
  421699:	xor    DWORD PTR [ebx],eax
  42169b:	mov    ecx,DWORD PTR [edi]
  42169d:	sbb    BYTE PTR [edx],ch
  42169f:	inc    edx
  4216a0:	sub    esi,DWORD PTR [edi-0x13fc9fe4]
  4216a6:	sub    BYTE PTR ss:[eax+0x49],ah
  4216aa:	adc    al,0x36
  4216ac:	or     eax,0x425de7ea
  4216b1:	fwait
  4216b2:	shl    BYTE PTR [ecx+0x37],0x62
  4216b6:	loope  0x4216f3
  4216b8:	jge    0x42171a
  4216ba:	mov    ds:0x7575533c,eax
  4216bf:	outs   dx,DWORD PTR ds:[esi]
  4216c0:	add    DWORD PTR [edx-0x77],esp
  4216c3:	xchg   edi,eax
  4216c4:	rcr    DWORD PTR [ebx],0xc9
  4216c7:	in     eax,0x25
  4216c9:	scas   eax,DWORD PTR es:[edi]
  4216ca:	mov    ds:0x740e5412,al
  4216cf:	add    eax,0x73ad527f
  4216d4:	mov    ecx,esi
  4216d6:	outs   dx,DWORD PTR ds:[esi]
  4216d7:	sub    ebp,ebx
  4216d9:	ins    DWORD PTR es:[edi],dx
  4216da:	cmc    
  4216db:	add    ecx,DWORD PTR [esi]
  4216dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216de:	jecxz  0x42174f
  4216e0:	call   FWORD PTR [eax-0x6b17588a]
  4216e6:	dec    edx
  4216e7:	int3   
  4216e8:	popa   
  4216e9:	in     al,dx
  4216ea:	push   ss
  4216eb:	inc    ebx
  4216ec:	out    dx,al
  4216ed:	inc    esp
  4216ee:	jns    0x42170f
  4216f0:	into   
  4216f1:	cmp    ch,ah
  4216f3:	fimul  WORD PTR [esi+0x6e4aa5d5]
  4216f9:	mov    dh,0x39
  4216fb:	js     0x4216df
  4216fd:	ficom  WORD PTR cs:[eax+0x7ba50e73]
  421704:	or     DWORD PTR [esi+0x638dc460],esp
  42170a:	push   es
  42170b:	xor    esi,DWORD PTR [esi-0x72]
  42170e:	push   cs
  42170f:	int3   
  421710:	imul   edi,DWORD PTR [esi],0xfffffffb
  421713:	mov    dh,0x4
  421715:	aad    0x60
  421717:	sti    
  421718:	pop    eax
  421719:	sbb    al,0xba
  42171b:	adc    al,0xbf
  42171d:	int    0x4f
  42171f:	stos   DWORD PTR es:[edi],eax
  421720:	pop    esp
  421721:	dec    ebx
  421722:	mov    esp,0xf0101bee
  421727:	push   eax
  421728:	data16 icebp 
  42172a:	fidiv  DWORD PTR [ecx-0x4f]
  42172d:	xchg   ebx,eax
  42172e:	retf   
  42172f:	je     0x42174a
  421731:	dec    esp
  421732:	adc    DWORD PTR [esi],0x77c69644
  421738:	daa    
  421739:	dec    eax
  42173a:	out    0x3b,al
  42173c:	push   esp
  42173d:	ss dec ebx
  42173f:	and    al,0x4a
  421741:	rol    esp,cl
  421743:	jns    0x4217c1
  421745:	jecxz  0x421773
  421747:	fdivr  st(3),st
  421749:	out    0xfa,al
  42174b:	ds out 0x85,al
  42174e:	in     eax,dx
  42174f:	shl    DWORD PTR [esi+0xd],0x2a
  421753:	mov    ch,BYTE PTR ds:0x9f2e729
  421759:	fwait
  42175a:	repnz test BYTE PTR [ebx+0x74],al
  42175e:	pusha  
  42175f:	cld    
  421760:	mov    edi,0x968483ae
  421765:	add    eax,0x68ed2f0
  42176a:	inc    edi
  42176b:	mov    ds:0x8717ddcf,al
  421770:	ss (bad) 
  421772:	popa   
  421773:	ja     0x4217c3
  421775:	mov    al,ds:0xd6ad79ea
  42177a:	xor    edi,ebp
  42177c:	jne    0x421702
  42177e:	sbb    BYTE PTR [ebx+0xe74e58b],0x9a
  421785:	scas   eax,DWORD PTR es:[edi]
  421786:	add    al,0xef
  421788:	cmc    
  421789:	and    ecx,ebx
  42178b:	pop    ss
  42178c:	and    edi,DWORD PTR [edi]
  42178e:	(bad)
  421792:	pop    ecx
  421793:	add    edx,DWORD PTR [ebx]
  421795:	lods   al,BYTE PTR ds:[esi]
  421796:	xor    eax,0x55793da9
  42179b:	xor    DWORD PTR [ebx],ebp
  42179d:	mov    ds:0x401281b3,al
  4217a2:	jp     0x421806
  4217a4:	mov    al,ds:0x582c7088
  4217a9:	stos   BYTE PTR es:[edi],al
  4217aa:	pop    ecx
  4217ab:	add    DWORD PTR [edi+0x51ccef75],eax
  4217b1:	dec    eax
  4217b2:	and    DWORD PTR [eax+ecx*1-0x65],ebx
  4217b6:	add    ch,ah
  4217b8:	pusha  
  4217b9:	pushf  
  4217ba:	mov    DWORD PTR [esi+0x6c],esp
  4217bd:	sbb    DWORD PTR [esi],edi
  4217bf:	or     BYTE PTR [ebx-0x73315a7d],0xd1
  4217c6:	addr16 mov ah,0x9c
  4217c9:	inc    edi
  4217ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217cb:	fistp  WORD PTR [ecx-0x3d59df19]
  4217d1:	cld    
  4217d2:	fsub   st,st(2)
  4217d4:	add    eax,DWORD PTR [ecx-0x1da1e975]
  4217da:	add    esp,DWORD PTR [esi+0x32812d70]
  4217e0:	(bad)  
  4217e2:	stc    
  4217e3:	mov    ebp,0xad78ba7a
  4217e8:	retf   
  4217e9:	jle    0x4217ee
  4217eb:	sub    edi,ebp
  4217ed:	clc    
  4217ee:	fisubr WORD PTR [esi]
  4217f0:	push   ecx
  4217f1:	test   DWORD PTR [eax],0xb47d5124
  4217f7:	je     0x421870
  4217f9:	dec    eax
  4217fa:	sub    BYTE PTR [eax-0x50],ch
  4217fd:	stos   BYTE PTR es:[edi],al
  4217fe:	dec    eax
  4217ff:	test   BYTE PTR [eax-0x21],0x61
  421803:	(bad)  
  421804:	mov    eax,ds:0xd2d14b39
  421809:	fisttp WORD PTR [edi]
  42180b:	cdq    
  42180c:	or     al,0x49
  42180e:	(bad)  
  42180f:	xchg   ecx,eax
  421810:	pop    edx
  421811:	or     dl,BYTE PTR [ebp+0x116f3a22]
  421817:	mov    ds:0x221e731e,al
  42181c:	mov    ebx,0xf2487d35
  421821:	mov    al,ds:0xe69ca3ca
  421826:	and    al,0x65
  421828:	leave  
  421829:	push   0xffffff8a
  42182b:	fild   WORD PTR [ecx]
  42182d:	(bad)  [ebx]
  42182f:	scas   eax,DWORD PTR es:[edi]
  421830:	fstp   TBYTE PTR [eax+0x17b170ba]
  421836:	mov    ?,WORD PTR [ecx]
  421838:	xchg   ebp,eax
  421839:	cdq    
  42183a:	ret    0x3b7e
  42183d:	xor    BYTE PTR [edx],al
  42183f:	rcr    ebp,1
  421841:	aaa    
  421842:	pop    esp
  421843:	aam    0x6d
  421845:	ret    
  421846:	jbe    0x4218a3
  421848:	cmp    dl,BYTE PTR [ebx-0x17db7ed8]
  42184e:	mov    al,ds:0x653a432a
  421853:	imul   cl
  421855:	jp     0x421872
  421857:	fucom  st(2)
  421859:	fbld   TBYTE PTR [eax]
  42185b:	cmp    BYTE PTR [ebx-0x5a4c75b9],bh
  421861:	inc    ebx
  421862:	or     eax,0x38a00d2c
  421867:	mov    cl,0x0
  421869:	cmp    eax,0xe48f62f6
  42186e:	or     edx,ecx
  421870:	lods   eax,DWORD PTR ds:[esi]
  421871:	shr    BYTE PTR [ebx-0x48],0x9
  421875:	adc    bh,BYTE PTR [edi-0x78]
  421878:	(bad)  [ebp-0x4d]
  42187b:	sbb    BYTE PTR [esi-0x779aae41],al
  421881:	lea    edi,[edi]
  421883:	sub    eax,0xb1fbe7f2
  421888:	jns    0x42189d
  42188a:	sub    esp,DWORD PTR [esi+0x12]
  42188d:	(bad)  
  42188e:	fidivr WORD PTR [ecx]
  421890:	arpl   cx,di
  421892:	sbb    bl,ch
  421894:	push   ss
  421895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421896:	pop    esi
  421897:	cli    
  421898:	push   ebx
  421899:	popf   
  42189a:	test   al,0x2
  42189c:	nop
  42189d:	inc    edi
  42189e:	in     al,0x5
  4218a0:	pop    esp
  4218a1:	fst    st(7)
  4218a3:	into   
  4218a4:	rcr    DWORD PTR [ecx+0x26],1
  4218a7:	xchg   ecx,eax
  4218a8:	pop    ebp
  4218a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218aa:	dec    esi
  4218ab:	mov    ah,0x5
  4218ad:	in     eax,dx
  4218ae:	pop    ebp
  4218af:	loop   0x4218d7
  4218b1:	pop    esp
  4218b2:	fmul   DWORD PTR [eax+0x37]
  4218b5:	add    BYTE PTR [ebx-0x49ea6caf],dh
  4218bb:	or     DWORD PTR [eax-0x14e45834],esp
  4218c1:	jae    0x421879
  4218c3:	cwde   
  4218c4:	and    al,0x97
  4218c6:	in     eax,dx
  4218c7:	ret    0x56de
  4218ca:	jmp    0x421920
  4218cc:	cmp    DWORD PTR ss:[ecx-0x1f],ebp
  4218d0:	adc    dh,dh
  4218d2:	neg    DWORD PTR [edx-0x29ea8b24]
  4218d8:	sahf   
  4218d9:	mov    edi,0xff18daa1
  4218de:	loop   0x4218d2
  4218e0:	sub    DWORD PTR [ebx+0x19],esp
  4218e3:	push   ebx
  4218e4:	add    esi,ecx
  4218e6:	push   edx
  4218e7:	jb     0x4218c4
  4218e9:	adc    al,ch
  4218eb:	mov    esi,0x4f2b5e70
  4218f0:	popf   
  4218f1:	lock or ah,al
  4218f4:	mov    ecx,0x15d4572e
  4218f9:	mov    DWORD PTR [eax],eax
  4218fb:	add    dl,dh
  4218fd:	rol    BYTE PTR ds:0xf6d53751,0xe3
  421904:	out    dx,al
  421905:	sub    ebp,esp
  421907:	cmovp  ebx,DWORD PTR [eax]
  42190a:	cmp    edx,DWORD PTR [ebx+0x70]
  42190d:	xchg   esp,eax
  42190e:	add    DWORD PTR [eax],eax
  421910:	xchg   BYTE PTR [edx],al
  421912:	add    BYTE PTR [eax],al
  421914:	push   edx
  421915:	jne    0x421897
  421917:	cmc    
  421918:	(bad)  
  421919:	mov    DWORD PTR [ebp-0x20],esi
  42191c:	int    0xc4
  42191e:	push   cs
  42191f:	add    eax,0x32bd62e9
  421924:	jp     0x421994
  421926:	dec    ebx
  421927:	jb     0x4218af
  421929:	cmp    dl,dh
  42192b:	jmp    DWORD PTR [ebp+0x0]
  42192e:	fldcw  WORD PTR [edx-0x531b72a5]
  421934:	pushf  
  421935:	add    ebp,ecx
  421937:	lods   eax,DWORD PTR ds:[esi]
  421938:	sbb    al,BYTE PTR [esi]
  42193a:	js     0x421910
  42193c:	mov    WORD PTR [ecx+0x1d],ds
  42193f:	scas   al,BYTE PTR es:[edi]
  421940:	push   edi
  421941:	hlt    
  421942:	retf   0xb1ee
  421945:	imul   edi,DWORD PTR [ebp-0x6a],0x5aa55f19
  42194c:	cwde   
  42194d:	out    0x41,al
  42194f:	xchg   esp,eax
  421950:	scas   eax,DWORD PTR es:[edi]
  421951:	iret   
  421952:	sub    ebx,DWORD PTR [edi]
  421954:	loope  0x4219a6
  421956:	xchg   edx,eax
  421957:	in     al,0x13
  421959:	jmp    0x421998
  42195b:	test   al,0x8a
  42195d:	xlat   BYTE PTR ds:[ebx]
  42195e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42195f:	ja     0x421917
  421961:	xchg   esp,eax
  421962:	arpl   WORD PTR [edx-0x7f],sp
  421965:	(bad)  
  421966:	mov    ecx,0x1e71a22d
  42196b:	dec    ecx
  42196c:	enter  0x9258,0xee
  421970:	ins    DWORD PTR es:[edi],dx
  421971:	pop    ss
  421972:	and    DWORD PTR [ebx],edi
  421974:	lea    edi,ds:0x26419dd5
  42197a:	(bad)  
  42197b:	and    eax,esp
  42197d:	xchg   DWORD PTR [eax+ecx*8],edi
  421980:	pop    esi
  421981:	repz mov cl,0x2e
  421984:	jae    0x421922
  421986:	loop   0x42195a
  421988:	aad    0x45
  42198a:	sub    al,0xa0
  42198c:	outs   dx,BYTE PTR ds:[esi]
  42198d:	sti    
  42198e:	sub    al,0xbe
  421990:	cld    
  421991:	xchg   edi,eax
  421992:	mov    eax,ds:0x4cd7547e
  421997:	popf   
  421998:	jne    0x4219ab
  42199a:	sbb    ch,0xa3
  42199d:	inc    ebx
  42199e:	jle    0x421a1f
  4219a0:	or     al,0x9c
  4219a2:	popf   
  4219a3:	mov    dh,dh
  4219a5:	mov    fs,WORD PTR [ebx+0x38f742d1]
  4219ab:	add    eax,0x1aa96407
  4219b0:	push   ecx
  4219b1:	jmp    0x421971
  4219b3:	retf   
  4219b4:	sbb    ebp,esi
  4219b6:	(bad)  
  4219b7:	xchg   ebx,eax
  4219b8:	(bad)  
  4219b9:	sub    ebx,esi
  4219bb:	or     esi,esp
  4219bd:	xor    bh,bl
  4219bf:	adc    bh,cl
  4219c1:	repnz out 0xe3,al
  4219c4:	jecxz  0x42197b
  4219c6:	out    dx,al
  4219c7:	icebp  
  4219c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219c9:	popf   
  4219ca:	les    esp,FWORD PTR [edx]
  4219cc:	or     eax,0x4aedcad0
  4219d1:	cmp    DWORD PTR [edx-0x25],0x5ef3d5e4
  4219d8:	xor    al,0xd9
  4219da:	pushf  
  4219db:	xchg   DWORD PTR [ebp-0x6a],ecx
  4219de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219df:	lods   eax,DWORD PTR ds:[esi]
  4219e0:	dec    esi
  4219e1:	dec    edx
  4219e2:	pop    ebp
  4219e3:	setno  BYTE PTR [ebx]
  4219e6:	push   esi
  4219e7:	cmp    eax,0x684f87c1
  4219ec:	enter  0xe730,0xda
  4219f0:	daa    
  4219f1:	pop    esp
  4219f2:	jg     0x4219c8
  4219f4:	addr16 dec ebx
  4219f6:	ins    BYTE PTR es:[edi],dx
  4219f7:	daa    
  4219f8:	sub    DWORD PTR [edi-0x183dc8a4],ebp
  4219fe:	push   edi
  4219ff:	and    DWORD PTR [edx],edx
  421a01:	mov    dh,0xdc
  421a03:	mov    esp,0xd76688df
  421a08:	xchg   ecx,eax
  421a09:	in     eax,0xc3
  421a0b:	test   eax,0xb5878d3e
  421a10:	loope  0x4219d1
  421a12:	xor    eax,0x39eab6de
  421a17:	sbb    al,0xfc
  421a19:	pop    ss
  421a1a:	xchg   esp,eax
  421a1b:	mov    bl,0x52
  421a1d:	pop    ecx
  421a1e:	das    
  421a1f:	repz ficom DWORD PTR [eax+0x29801a81]
  421a26:	sub    ah,BYTE PTR [ebx-0x79e30552]
  421a2c:	retf   
  421a2d:	jo     0x421a8a
  421a2f:	std    
  421a30:	jne    0x421a03
  421a32:	scas   al,BYTE PTR es:[edi]
  421a33:	sti    
  421a34:	sbb    dl,bh
  421a36:	mov    BYTE PTR [ebp+0x34],ch
  421a39:	cmp    BYTE PTR [eax+ebx*4-0x58cbceab],0x35
  421a41:	and    eax,0x6980f20
  421a46:	and    dl,BYTE PTR [edi-0x72]
  421a49:	sti    
  421a4a:	push   ss
  421a4b:	push   ecx
  421a4c:	sbb    esp,DWORD PTR [esi]
  421a4e:	into   
  421a4f:	sbb    cl,cl
  421a51:	cmp    ebx,ebx
  421a53:	fwait
  421a54:	pushf  
  421a55:	pop    ds
  421a56:	fwait
  421a57:	(bad)  
  421a58:	xor    eax,0xd44cc820
  421a5d:	inc    edi
  421a5e:	jp     0x421a8f
  421a60:	pop    esp
  421a61:	cmp    al,0xe7
  421a63:	ficom  DWORD PTR [esi-0x76]
  421a66:	jle    0x421adc
  421a68:	mov    dh,0xce
  421a6a:	ds daa 
  421a6c:	or     eax,0x844698d
  421a71:	mov    ecx,0xbf4d6646
  421a76:	sub    al,dh
  421a78:	push   es
  421a79:	out    0xf7,al
  421a7b:	jnp    0x421a8d
  421a7d:	addr16 push 0x3146c40b
  421a83:	jmp    0x6f12b25b
  421a88:	std    
  421a89:	jmp    0x48f7ed4b
  421a8e:	push   esp
  421a8f:	and    esp,DWORD PTR [esi]
  421a91:	push   ebx
  421a92:	xor    al,0x34
  421a94:	std    
  421a95:	cwde   
  421a96:	sbb    eax,0x39efd033
  421a9b:	or     al,0x69
  421a9e:	adc    al,0xd9
  421aa0:	mov    edx,esi
  421aa2:	inc    DWORD PTR [ebp+0x18]
  421aa5:	out    dx,al
  421aa6:	xor    BYTE PTR [edi+0x56],dl
  421aa9:	xor    eax,0x1f2477f9
  421aae:	inc    esi
  421aaf:	in     eax,0xa8
  421ab1:	test   eax,0x117c0005
  421ab6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ab7:	ins    DWORD PTR es:[edi],dx
  421ab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ab9:	ss dec ebx
  421abb:	test   BYTE PTR [ecx],al
  421abd:	add    bl,dl
  421abf:	mov    DWORD PTR [ebx],ebx
  421ac1:	push   esp
  421ac2:	xchg   ebx,eax
  421ac3:	std    
  421ac4:	lock repz cmp dh,BYTE PTR [eax]
  421ac8:	adc    al,0x8f
  421aca:	xchg   BYTE PTR [edi-0x15],dl
  421acd:	push   esp
  421ace:	pusha  
  421acf:	fstp   QWORD PTR [eax]
  421ad1:	jmp    0xd720e8f2
  421ad6:	js     0x421a6b
  421ad8:	jp     0x421aff
  421ada:	cs push edi
  421adc:	xchg   BYTE PTR [ebx],ah
  421ade:	aam    0x39
  421ae0:	mov    al,ds:0xfca8009f
  421ae5:	mov    ah,0x37
  421ae7:	and    bl,ah
  421ae9:	fcom   DWORD PTR cs:[edx+0x32e55bf0]
  421af0:	ins    DWORD PTR es:[edi],dx
  421af1:	mov    edi,0xea09ff
  421af6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421af7:	and    DWORD PTR [ebx-0x2a],ebp
  421afa:	and    ch,dl
  421afc:	lds    ebp,FWORD PTR [edx-0x66]
  421aff:	mov    WORD PTR [esi+0x44a9532c],es
  421b05:	mul    BYTE PTR ds:0x5816d80f
  421b0b:	or     eax,ebp
  421b0d:	inc    esi
  421b0e:	and    DWORD PTR [ecx],0x4d
  421b11:	stc    
  421b12:	add    DWORD PTR [ebp+edx*2-0x7dd99634],0x59016e9b
  421b1d:	(bad)
  421b21:	push   ss
  421b22:	enter  0x8333,0x9
  421b26:	inc    DWORD PTR [edx-0x22aedca0]
  421b2c:	pop    ebx
  421b2d:	mov    esp,DWORD PTR [esi-0x43e8c477]
  421b33:	mov    ds:0x4f34f0a1,al
  421b38:	mov    ecx,0x5b5281eb
  421b3d:	cs daa 
  421b3f:	jnp    0x421b82
  421b41:	(bad)  
  421b42:	mov    al,BYTE PTR [edi]
  421b44:	push   ds
  421b45:	fwait
  421b46:	bound  eax,QWORD PTR [ecx-0x7b]
  421b49:	mov    edx,0x6b9951f7
  421b4e:	xor    al,0x7c
  421b50:	mov    ds:0xcddeef7b,al
  421b55:	and    BYTE PTR [edi-0x3f96e56a],bh
  421b5b:	adc    BYTE PTR [esi+0x73],ah
  421b5e:	cmp    ecx,DWORD PTR [ecx-0x3a319b3a]
  421b64:	mov    cs,eax
  421b66:	out    0x7f,eax
  421b68:	inc    edx
  421b69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b6a:	js     0x421be7
  421b6c:	scas   eax,DWORD PTR es:[edi]
  421b6d:	jg     0x421b37
  421b6f:	aam    0x72
  421b71:	push   ebp
  421b72:	(bad)  
  421b74:	fwait
  421b75:	jecxz  0x421bed
  421b77:	call   0xc28b:0xc3400fdc
  421b7e:	(bad)  [edi]
  421b80:	and    eax,0x7b9b6fd6
  421b85:	jmp    0x421b26
  421b87:	push   esp
  421b88:	cmc    
  421b89:	jb     0x421bd6
  421b8b:	add    esp,ebx
  421b8d:	inc    ecx
  421b8e:	aaa    
  421b8f:	adc    DWORD PTR [ebx-0x1758c776],ecx
  421b95:	out    0xcf,al
  421b97:	shr    BYTE PTR [edx+0x4300006a],0x41
  421b9e:	popa   
  421b9f:	data16 arpl WORD PTR [esi+0x47],sp
  421ba3:	rcr    DWORD PTR gs:[edi+0x16],cl
  421ba7:	xor    cl,ah
  421ba9:	inc    edi
  421baa:	cwde   
  421bab:	in     eax,dx
  421bac:	not    BYTE PTR [esi+0x2860001]
  421bb2:	add    BYTE PTR [eax],al
  421bb4:	or     al,0xb
  421bb6:	ds call 0x9eff2f6f
  421bbc:	test   bh,bh
  421bbe:	retf   0xdb0a
  421bc1:	pop    ebx
  421bc2:	xor    eax,0xa57a4cc6
  421bc7:	lods   al,BYTE PTR ds:[esi]
  421bc8:	add    bh,BYTE PTR [edi+ecx*2+0x73]
  421bcc:	retf   0xb56f
  421bcf:	dec    esp
  421bd0:	jnp    0x421b9d
  421bd2:	add    dl,cl
  421bd4:	bound  edi,QWORD PTR [ecx-0x3c86ace9]
  421bda:	mov    esi,0x6e778e8d
  421bdf:	imul   edx,DWORD PTR ds:0xffff704a,0xab9183ec
  421be9:	push   ds
  421bea:	dec    esp
  421beb:	ret    
  421bec:	cdq    
  421bed:	xchg   edx,eax
  421bee:	setg   BYTE PTR [edi]
  421bf1:	loopne 0x421c10
  421bf3:	push   edi
  421bf4:	rol    DWORD PTR [edi*4-0x38474a6e],1
  421bfb:	inc    eax
  421bfc:	mov    edi,gs
  421bfe:	dec    ebx
  421bff:	(bad)  [edi+ebp*4-0x2f]
  421c03:	cmp    BYTE PTR [esi],0xc2
  421c06:	outs   dx,BYTE PTR ds:[esi]
  421c07:	sub    al,BYTE PTR [edx+0x30563f72]
  421c0d:	add    al,0xa4
  421c0f:	jne    0x421c16
  421c11:	inc    esi
  421c12:	and    eax,0x8279085b
  421c17:	push   ds
  421c18:	adc    al,dh
  421c1a:	adc    ebp,0xba55080d
  421c20:	es dec ecx
  421c22:	or     al,0x1
  421c24:	iret   
  421c25:	nop
  421c26:	xor    edi,DWORD PTR ds:0x87eb8ca1
  421c2c:	popf   
  421c2d:	pop    ebp
  421c2e:	ror    edi,1
  421c30:	or     eax,0x21866d6d
  421c35:	jnp    0x421c6a
  421c37:	hlt    
  421c38:	aam    0x84
  421c3a:	les    ebx,FWORD PTR [ebp+0x23]
  421c3d:	mov    al,ds:0x3594f0d7
  421c42:	adc    BYTE PTR [ebp+0x3b402468],dh
  421c48:	add    BYTE PTR [ebx+0x6f],ah
  421c4b:	sub    dl,dh
  421c4d:	repz inc edx
  421c4f:	call   0xdb1b:0x3324df60
  421c56:	ins    BYTE PTR es:[edi],dx
  421c57:	inc    esi
  421c58:	and    BYTE PTR [edi+edx*2],bl
  421c5b:	mov    esp,0x8ae2bdc7
  421c60:	push   edi
  421c61:	out    0x1d,al
  421c63:	aaa    
  421c64:	jbe    0x421c14
  421c66:	retf   0x691a
  421c69:	push   esp
  421c6a:	push   eax
  421c6b:	pop    ebx
  421c6c:	imul   esp,esp,0x22
  421c6f:	push   edx
  421c70:	cwde   
  421c71:	pop    es
  421c72:	fninit 
  421c74:	adc    ebp,DWORD PTR [ecx-0x290ad536]
  421c7a:	mov    bh,0x71
  421c7c:	outs   dx,BYTE PTR ds:[esi]
  421c7d:	call   0x5140ba37
  421c82:	inc    ebx
  421c83:	inc    ebp
  421c84:	in     eax,dx
  421c85:	nop
  421c86:	mov    al,ds:0x7e41ee31
  421c8b:	cdq    
  421c8c:	adc    BYTE PTR [esi],0x64
  421c8f:	data16 lods al,BYTE PTR ds:[esi]
  421c91:	sub    al,0xa4
  421c93:	jno    0x421ce9
  421c95:	sub    al,BYTE PTR [ebp-0x6a8f9e24]
  421c9b:	push   cs
  421c9c:	jmp    0x421d17
  421c9e:	jns    0x421cad
  421ca0:	jge    0x421ca1
  421ca2:	test   DWORD PTR [eax-0x19f211ce],0x5cb22d47
  421cac:	clc    
  421cad:	push   es
  421cae:	xor    DWORD PTR [esi+0x71],ecx
  421cb1:	and    ch,BYTE PTR [ebx]
  421cb3:	test   eax,0xc6ea1493
  421cb8:	mov    ?,WORD PTR es:[edx]
  421cbb:	mov    ah,BYTE PTR [ebx-0x76be5979]
  421cc1:	and    eax,0x5863139f
  421cc6:	and    BYTE PTR [esp-0x34],ah
  421cca:	lods   al,BYTE PTR ds:[esi]
  421ccb:	xor    bl,cl
  421ccd:	(bad)  
  421cce:	(bad)  
  421cd0:	js     0x421d21
  421cd2:	jmp    0xd3ea10f3
  421cd7:	stos   DWORD PTR es:[edi],eax
  421cd8:	and    eax,0xa894aec8
  421cdd:	mov    dh,0x15
  421cdf:	fidiv  DWORD PTR [eax]
  421ce1:	cmp    al,0x55
  421ce3:	cdq    
  421ce4:	mov    bh,BYTE PTR [edi+eiz*8-0x28928951]
  421ceb:	and    BYTE PTR [ebp+0x497732a4],0xfa
  421cf2:	dec    ebx
  421cf3:	inc    eax
  421cf4:	mov    dl,ah
  421cf6:	push   0xfffffff2
  421cf8:	inc    edx
  421cf9:	scas   al,BYTE PTR es:[edi]
  421cfa:	push   ebx
  421cfb:	arpl   WORD PTR [eax+edi*1-0x70517eaa],sp
  421d02:	out    dx,eax
  421d03:	sbb    DWORD PTR [esi-0x76fa1a73],esi
  421d09:	mov    ch,BYTE PTR [eax-0x1dbf65b0]
  421d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d10:	and    al,0x56
  421d12:	dec    esi
  421d13:	mov    esp,0xfa1ea52
  421d18:	aas    
  421d19:	and    BYTE PTR [edi+edx*8+0x65],bl
  421d1d:	jo     0x421d25
  421d1f:	loopne 0x421cd9
  421d21:	xchg   ebx,eax
  421d22:	or     ecx,DWORD PTR [edi-0x7251acb0]
  421d28:	sbb    ebp,DWORD PTR [eax]
  421d2a:	push   edi
  421d2b:	popa   
  421d2c:	cmp    ah,BYTE PTR [edx-0x4c]
  421d2f:	xlat   BYTE PTR ds:[ebx]
  421d30:	shr    DWORD PTR [edx],cl
  421d32:	cwde   
  421d33:	mov    edx,0x404cce7c
  421d38:	mov    ecx,0x76ce6b9f
  421d3d:	add    ecx,eax
  421d3f:	out    0x99,al
  421d41:	popf   
  421d42:	ret    
  421d43:	faddp  st(1),st
  421d45:	jecxz  0x421d20
  421d47:	and    edi,DWORD PTR [ebx]
  421d49:	sahf   
  421d4a:	ds push ebp
  421d4c:	ins    DWORD PTR es:[edi],dx
  421d4d:	or     edx,eax
  421d4f:	inc    edx
  421d50:	adc    dl,BYTE PTR [eax+eiz*2]
  421d53:	push   0xa13d4cdc
  421d58:	jo     0x421d7b
  421d5a:	mov    WORD PTR [ebp+0xf],?
  421d5d:	adc    BYTE PTR [ecx+0x74],bl
  421d60:	out    0xd5,al
  421d62:	popa   
  421d63:	fidiv  DWORD PTR [esi+eax*4+0x45]
  421d67:	enter  0x5907,0xa
  421d6b:	inc    edx
  421d6c:	and    bl,ah
  421d6e:	shl    BYTE PTR [esp+eax*4-0xaead8af],1
  421d75:	or     BYTE PTR [edi],cl
  421d77:	out    dx,eax
  421d78:	stc    
  421d79:	in     al,0x35
  421d7b:	repz (bad) 
  421d7d:	mov    dl,0x84
  421d7f:	in     al,0xa1
  421d81:	jbe    0x421dbc
  421d83:	cld    
  421d84:	and    BYTE PTR [ecx],al
  421d86:	mov    ecx,0x5fa575e4
  421d8b:	jne    0x421d0f
  421d8d:	ds ret 
  421d8f:	loopne 0x421dc8
  421d91:	ret    0xfa2c
  421d94:	add    BYTE PTR [edi+0x49b4befb],0x3f
  421d9b:	adc    al,0x71
  421d9d:	loop   0x421d8f
  421d9f:	cwde   
  421da0:	xor    eax,0xdeb35f
  421da5:	mov    eax,DWORD PTR [edi]
  421da7:	mov    al,ds:0x52b5205
  421dac:	les    ebp,FWORD PTR [edi+edi*4]
  421daf:	xor    ch,BYTE PTR [esi+0x4d]
  421db2:	scas   eax,DWORD PTR es:[edi]
  421db3:	or     DWORD PTR [ebx+0xa],0xa1adff9f
  421dba:	aad    0x30
  421dbc:	push   edi
  421dbd:	lods   eax,DWORD PTR ds:[esi]
  421dbe:	pusha  
  421dbf:	push   ebp
  421dc0:	iret   
  421dc1:	(bad)  
  421dc3:	leave  
  421dc4:	rcr    BYTE PTR [eax-0x32],cl
  421dc7:	out    dx,eax
  421dc8:	and    al,0xdd
  421dca:	div    DWORD PTR [ebp+0x5bc10b52]
  421dd0:	mov    BYTE PTR [eax-0x75ddca60],bl
  421dd6:	or     ah,cl
  421dd8:	and    esp,DWORD PTR [ecx-0x4c36ebbd]
  421dde:	sti    
  421ddf:	test   DWORD PTR [ecx+0x49],esp
  421de2:	mov    al,ds:0x8c7526e3
  421de7:	xor    al,0xdf
  421de9:	push   cs
  421dea:	push   0x18
  421dec:	pop    ebx
  421ded:	mov    BYTE PTR [esi-0x27],bh
  421df0:	aad    0x63
  421df2:	xchg   BYTE PTR [ebp+0x7dfc5593],bh
  421df8:	jl     0x421e46
  421dfa:	ds aam 0x8d
  421dfd:	or     edx,DWORD PTR [esi+eiz*2]
  421e00:	lds    ecx,FWORD PTR [ebx+eiz*2-0x63]
  421e04:	adc    DWORD PTR [ecx],eax
  421e06:	in     eax,dx
  421e07:	mov    ah,0xbb
  421e09:	push   ds
  421e0a:	ins    DWORD PTR es:[edi],dx
  421e0b:	pop    esi
  421e0c:	dec    esi
  421e0d:	sub    bh,BYTE PTR [ebp+0x149cffc]
  421e13:	or     eax,DWORD PTR [eax-0x21986488]
  421e19:	es out dx,eax
  421e1b:	fcmove st,st(6)
  421e1d:	(bad)  
  421e1e:	(bad)  
  421e20:	sahf   
  421e21:	sub    dh,BYTE PTR ds:0xc6b9f663
  421e27:	int    0x80
  421e29:	loop   0x421e3b
  421e2b:	pop    es
  421e2c:	fild   DWORD PTR [eax]
  421e2e:	sbb    BYTE PTR [ecx],ah
  421e30:	in     al,0x1f
  421e32:	mov    ch,0x7f
  421e34:	pop    ebx
  421e35:	das    
  421e36:	into   
  421e37:	shl    BYTE PTR [ebp+0x1d],0x0
  421e3b:	add    BYTE PTR [ebx-0xce42c16],cl
  421e41:	cmp    ecx,ebx
  421e43:	cli    
  421e44:	in     al,dx
  421e45:	jg     0x421e7e
  421e47:	loopne 0x421dd5
  421e49:	fbstp  TBYTE PTR [ebp+0x24]
  421e4c:	jl     0x421de7
  421e4e:	add    DWORD PTR [eax],eax
  421e50:	xchg   BYTE PTR [edx],al
  421e52:	add    BYTE PTR [eax],al
  421e54:	push   eax
  421e55:	es xor bl,ah
  421e58:	inc    ecx
  421e59:	out    0xa6,eax
  421e5b:	inc    esp
  421e5c:	sar    DWORD PTR [eax-0x927f894],1
  421e62:	sub    eax,ebp
  421e64:	mov    cs,WORD PTR [eax+0x35]
  421e67:	jae    0x421e13
  421e69:	pop    ebx
  421e6a:	pop    es
  421e6b:	data16 out 0xc7,al
  421e6e:	test   DWORD PTR [edi-0x460156bd],edx
  421e74:	(bad)  
  421e75:	adc    DWORD PTR [edx],esp
  421e77:	call   0x5b1b:0xef5aa3e6
  421e7e:	bound  esi,QWORD PTR [edi]
  421e80:	push   bx
  421e82:	repnz and dh,BYTE PTR [esi+0x4c7e2055]
  421e89:	out    0xda,eax
  421e8b:	les    edx,FWORD PTR [edi]
  421e8d:	add    dh,BYTE PTR [eax+edi*4]
  421e90:	xor    DWORD PTR [ebx],ebp
  421e92:	test   al,0x9c
  421e94:	imul   esp,DWORD PTR es:[ebp+0x3f],0xef2245d9
  421e9c:	ds jnp 0x421ea5
  421e9f:	sbb    cl,BYTE PTR [ebp-0x25]
  421ea2:	mov    ds:0xaba3ab3,eax
  421ea7:	or     ch,ch
  421ea9:	dec    esp
  421eaa:	cs sbb eax,0xe055dcd2
  421eb0:	call   0x25c6:0x2b7f6acd
  421eb7:	dec    ecx
  421eb8:	xchg   edi,eax
  421eb9:	daa    
  421eba:	push   ss
  421ebb:	out    0xe9,al
  421ebd:	fdivr  DWORD PTR [ebx-0x427c58bd]
  421ec3:	ret    0x99de
  421ec6:	es inc esp
  421ec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ec9:	jmp    0x7829651b
  421ece:	ret    
  421ecf:	setle  BYTE PTR [edi]
  421ed2:	adc    DWORD PTR [eax-0x32],ecx
  421ed5:	cli    
  421ed6:	fcmovnu st,st(1)
  421ed8:	mov    ds:0x7644598f,eax
  421edd:	scas   eax,DWORD PTR es:[edi]
  421ede:	push   ss
  421edf:	ret    
  421ee0:	cwde   
  421ee1:	ins    BYTE PTR es:[edi],dx
  421ee2:	sub    eax,0x5540a17f
  421ee7:	out    0xc0,eax
  421ee9:	test   DWORD PTR [ebx-0x5b93eb0b],esi
  421eef:	fbstp  TBYTE PTR [eax+0x66]
  421ef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ef3:	lea    ebx,[ebx]
  421ef5:	xchg   BYTE PTR [ebx],dh
  421ef7:	adc    esp,esi
  421ef9:	adc    ch,BYTE PTR [edx+0x28]
  421efc:	outs   dx,DWORD PTR ds:[esi]
  421efd:	loope  0x421eb0
  421eff:	adc    eax,0x44fc4288
  421f04:	enter  0xc47f,0x3c
  421f08:	pop    eax
  421f09:	fs dec ebx
  421f0b:	loope  0x421f7c
  421f0d:	enter  0xc9b8,0x3d
  421f11:	call   0x7ab300f8
  421f16:	xchg   bh,bh
  421f18:	jne    0x421f56
  421f1a:	mov    WORD PTR [ecx+0x5c67e6eb],cs
  421f20:	pusha  
  421f21:	xchg   DWORD PTR [ebx],ebp
  421f23:	in     al,dx
  421f24:	call   0x3f29:0x20d35016
  421f2b:	hlt    
  421f2c:	mov    ebp,0xeff8c783
  421f31:	retf   0xad63
  421f34:	scas   al,BYTE PTR es:[edi]
  421f35:	mov    gs,WORD PTR [eax+0x7e]
  421f38:	sub    ebp,DWORD PTR [edx+0x3d]
  421f3b:	mov    ?,WORD PTR [eax+esi*8-0x7e]
  421f3f:	push   ecx
  421f40:	adc    al,0x29
  421f42:	dec    esp
  421f43:	in     eax,dx
  421f44:	inc    edi
  421f45:	frstor [ebp-0x4e]
  421f48:	pop    edx
  421f49:	push   esi
  421f4a:	les    ebx,FWORD PTR [esi+eax*4+0xb3a83e7]
  421f51:	out    0x2c,al
  421f53:	xor    DWORD PTR [edi+0x4ca060b3],ebx
  421f59:	mov    edx,0x15f32fe9
  421f5e:	pop    eax
  421f5f:	or     eax,0x6aa334f3
  421f64:	dec    edi
  421f65:	cmp    bh,al
  421f67:	cs mov ch,0x7
  421f6a:	jl     0x421f05
  421f6c:	es xchg edi,eax
  421f6e:	dec    esi
  421f6f:	dec    edx
  421f70:	test   BYTE PTR [ebx+0x13c34927],al
  421f76:	mul    DWORD PTR [ecx-0x7a1bed74]
  421f7c:	sbb    edi,ecx
  421f7e:	mov    edx,ebp
  421f80:	mov    gs,WORD PTR [eax-0x75]
  421f83:	inc    eax
  421f84:	ret    
  421f85:	(bad)  
  421f86:	xlat   BYTE PTR ds:[ebx]
  421f87:	aas    
  421f88:	in     al,dx
  421f89:	mov    ds:0xafb19a2f,eax
  421f8e:	ror    ebx,0x50
  421f91:	(bad)  
  421f92:	dec    ebx
  421f93:	inc    esp
  421f94:	sbb    al,0x38
  421f96:	add    al,ah
  421f98:	mov    eax,ds:0x67c82ed1
  421f9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f9e:	sub    ecx,DWORD PTR [edx]
  421fa0:	jge    0x421f5a
  421fa2:	push   esi
  421fa3:	pushf  
  421fa4:	and    eax,0x957deb15
  421fa9:	out    dx,eax
  421faa:	repnz gs pushw ss
  421fae:	bound  ebx,QWORD PTR ds:0x34018328
  421fb4:	sbb    eax,0x84ddf99e
  421fb9:	nop
  421fba:	leave  
  421fbb:	push   ebx
  421fbc:	shl    BYTE PTR [ebp-0x38bc841b],cl
  421fc2:	int    0x59
  421fc4:	jns    0x421fc8
  421fc6:	jp     0x421fc5
  421fc8:	dec    esp
  421fc9:	lea    edi,[eax+0x1b]
  421fcc:	icebp  
  421fcd:	mov    edi,0xd9010736
  421fd2:	jp     0x421f88
  421fd4:	cli    
  421fd5:	xor    edi,DWORD PTR [edx]
  421fd7:	push   0xecd22cc
  421fdc:	adc    al,0xe9
  421fde:	pop    edx
  421fdf:	aad    0x45
  421fe1:	xor    ebx,ebx
  421fe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fe4:	daa    
  421fe5:	inc    ebp
  421fe6:	lea    ebp,[ebx-0x7ac155f6]
  421fec:	fwait
  421fed:	sbb    esi,ebp
  421fef:	push   ebp
  421ff0:	pusha  
  421ff1:	leave  
  421ff2:	or     ebp,DWORD PTR [edi-0x48]
  421ff5:	push   ebx
  421ff6:	pop    ebx
  421ff7:	push   cs
  421ff8:	inc    ebp
  421ff9:	(bad)  
  421ffa:	shl    BYTE PTR [eax-0x8a0b880],0x2
  422001:	dec    ebp
  422002:	scas   al,BYTE PTR es:[edi]
  422003:	mov    eax,DWORD PTR [esi]
  422005:	add    ah,BYTE PTR [ebx+0x7c]
  422008:	aam    0x94
  42200a:	in     eax,dx
  42200b:	mov    al,0x14
  42200d:	mov    ds:0xa931fb57,al
  422012:	pop    edi
  422013:	lods   al,BYTE PTR ds:[esi]
  422014:	jg     0x422034
  422016:	dec    esp
  422017:	pop    ds
  422018:	fldl2t 
  42201a:	jbe    0x421ff3
  42201c:	inc    edi
  42201d:	test   BYTE PTR [edx+0x50],0xf1
  422021:	push   edi
  422022:	inc    esp
  422023:	push   ebp
  422024:	loopne 0x421fd8
  422026:	jmp    0xc144:0xf93128e6
  42202d:	push   0x7
  42202f:	leave  
  422030:	(bad)  
  422031:	in     al,dx
  422032:	mov    bh,0x64
  422034:	add    ch,BYTE PTR [eax+0x536af17e]
  42203a:	inc    esi
  42203b:	xor    eax,0x781a0eb4
  422040:	inc    edx
  422041:	ja     0x422026
  422043:	das    
  422044:	clc    
  422045:	lock test BYTE PTR [eax-0x16ba6815],bh
  42204c:	add    al,0x8b
  42204e:	or     al,0xed
  422050:	add    DWORD PTR [esi+0x7b4b6456],0x12059999
  42205a:	call   0x4623:0x70459139
  422061:	jbe    0x422053
  422063:	les    ecx,FWORD PTR ds:0x3e205ec7
  422069:	aas    
  42206a:	jmp    0xfe3a:0x8bd55478
  422071:	inc    esp
  422072:	int3   
  422073:	psraw  mm7,QWORD PTR [eax-0x64f77874]
  42207a:	adc    esi,DWORD PTR fs:[ebx+eax*4]
  42207e:	loopne 0x422054
  422080:	xor    eax,DWORD PTR [edx]
  422082:	(bad)  
  422083:	aam    0xa5
  422085:	dec    ebx
  422086:	fidiv  DWORD PTR [ecx+0x59]
  422089:	aad    0xf5
  42208b:	pop    ebp
  42208c:	nop
  42208d:	cdq    
  42208e:	out    0x8c,al
  422090:	dec    edx
  422091:	fild   QWORD PTR [eax+0x73]
  422094:	and    edi,DWORD PTR [edi]
  422096:	or     BYTE PTR [edx],bh
  422098:	cs jge 0x4220dd
  42209b:	sub    esp,ebx
  42209d:	not    bl
  42209f:	mov    al,0x5b
  4220a1:	into   
  4220a2:	adc    DWORD PTR [edx+0x5a09089d],0xde83242e
  4220ac:	data16 fcom DWORD PTR [edi+0x5e2d0d4d]
  4220b3:	pop    ecx
  4220b4:	xchg   esp,eax
  4220b5:	loop   0x422106
  4220b7:	mov    ebp,0x485b1260
  4220bc:	addr16 (bad) 
  4220be:	(bad)  
  4220c0:	jmp    0x127bb75
  4220c5:	outs   dx,DWORD PTR ds:[esi]
  4220c6:	jno    0x422141
  4220c8:	popa   
  4220c9:	mov    esi,?
  4220cb:	pushf  
  4220cc:	adc    eax,DWORD PTR [edx*2+0x135eb436]
  4220d3:	outs   dx,BYTE PTR ds:[esi]
  4220d4:	push   cs
  4220d5:	pusha  
  4220d6:	out    0x1b,eax
  4220d8:	ja     0x4220bf
  4220da:	add    BYTE PTR [eax],al
  4220dc:	shl    BYTE PTR [edx],cl
  4220de:	xchg   esi,eax
  4220df:	call   0x1e52:0x6adebef6
  4220e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220e7:	and    ah,BYTE PTR ds:0x219908a
  4220ed:	pushf  
  4220ee:	add    DWORD PTR [eax],eax
  4220f0:	xchg   BYTE PTR [edx],al
  4220f2:	add    BYTE PTR [eax],al
  4220f4:	xchg   edi,eax
  4220f5:	dec    edi
  4220f6:	sbb    esp,DWORD PTR [ebx+0x8]
  4220f9:	les    esp,FWORD PTR [ecx+0x5b]
  4220fc:	cmp    bh,BYTE PTR [edi-0x1303b025]
  422102:	pop    ss
  422103:	push   0xffffffff
  422105:	dec    edx
  422106:	xchg   ecx,eax
  422107:	dec    ecx
  422108:	out    dx,eax
  422109:	clc    
  42210a:	add    DWORD PTR [ecx],0x16
  42210d:	nop
  42210e:	add    ebx,ebx
  422110:	fisttp DWORD PTR [ebx+ebp*4]
  422113:	mov    esp,0xdd059147
  422118:	sbb    DWORD PTR [edi+edx*4-0x2cd99c48],esp
  42211f:	pop    ebp
  422120:	dec    esi
  422121:	call   0xf484:0x799fc36d
  422128:	cmc    
  422129:	loope  0x4220e8
  42212b:	daa    
  42212c:	das    
  42212d:	cmc    
  42212e:	xchg   edx,eax
  42212f:	xchg   ecx,eax
  422130:	je     0x42217b
  422132:	and    ch,dl
  422134:	arpl   WORD PTR [ebp+edx*1+0x6110b610],si
  42213b:	setp   BYTE PTR [edi+0x41]
  42213f:	mov    ecx,0xd987af7a
  422144:	pop    ds
  422145:	call   0x6ac2:0x699ac222
  42214c:	jb     0x42212d
  42214e:	xor    DWORD PTR [ecx],ecx
  422150:	jmp    0x52e2ce4b
  422155:	jbe    0x4220f1
  422157:	pop    es
  422158:	mov    bh,BYTE PTR ds:0xd7d2c523
  42215e:	jmp    0x71f7:0x666baf2a
  422165:	xor    eax,ebp
  422167:	push   esi
  422168:	mov    DWORD PTR [esi+edi*8-0x228a08e7],ebp
  42216f:	add    esp,ebp
  422171:	popf   
  422172:	mov    eax,0xe7ac1224
  422177:	out    dx,al
  422178:	loope  0x4221c2
  42217a:	mov    cl,0x8a
  42217c:	aad    0x69
  42217e:	and    DWORD PTR [edi-0x3c],0x68944d35
  422185:	mov    ebp,0x2e716027
  42218a:	mov    ecx,0x62de1661
  42218f:	cmp    bl,0x80
  422192:	das    
  422193:	lods   eax,DWORD PTR ds:[esi]
  422194:	lods   al,BYTE PTR ds:[esi]
  422195:	mov    bh,0x9
  422197:	sti    
  422198:	cli    
  422199:	lahf   
  42219a:	pop    ds
  42219b:	inc    ebp
  42219c:	int3   
  42219d:	add    al,0x34
  42219f:	cmp    DWORD PTR [ebp+0x14],ebx
  4221a2:	test   BYTE PTR [ebx],al
  4221a4:	and    esp,DWORD PTR [ecx]
  4221a6:	push   eax
  4221a7:	xlat   BYTE PTR ds:[ebx]
  4221a8:	mov    dh,0x86
  4221aa:	popf   
  4221ab:	dec    ebp
  4221ac:	mov    esi,DWORD PTR [esi-0x55]
  4221af:	dec    edx
  4221b0:	ds inc ebx
  4221b2:	mul    BYTE PTR [edx-0x6a]
  4221b5:	push   cs
  4221b6:	push   0xee718487
  4221bb:	loope  0x42216c
  4221bd:	imul   edi,ecx,0x1c9bc384
  4221c3:	out    0x25,eax
  4221c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221c6:	fld    TBYTE PTR [esi-0x54]
  4221c9:	jmp    0xca1b1571
  4221ce:	mov    ebp,0xdad9de22
  4221d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221d4:	lea    eax,[ebp+0x6a2829c6]
  4221da:	mov    bh,0x8c
  4221dc:	push   es
  4221dd:	clc    
  4221de:	mov    dh,0x61
  4221e0:	push   esp
  4221e1:	arpl   WORD PTR [ebx],si
  4221e3:	loope  0x422248
  4221e5:	cmp    BYTE PTR ds:[ecx-0x786919da],0x7c
  4221ed:	jo     0x42226e
  4221ef:	jno    0x42223e
  4221f1:	mov    ebp,0xeabeb4f9
  4221f6:	add    bh,BYTE PTR [eax-0x4e53bd8e]
  4221fc:	pop    es
  4221fd:	inc    ebp
  4221fe:	fadd   DWORD PTR [eax+0x62]
  422201:	stc    
  422202:	or     edi,DWORD PTR ds:0xe97cbb28
  422208:	in     eax,dx
  422209:	jne    0x4221bd
  42220b:	push   0x46
  42220d:	sbb    esp,DWORD PTR ds:0x7a740424
  422213:	jns    0x4221c0
  422215:	mov    bl,0x3c
  422217:	out    dx,al
  422218:	stos   WORD PTR es:[edi],ax
  42221a:	dec    esp
  42221b:	or     al,BYTE PTR [ebx+eiz*4]
  42221e:	pop    ecx
  42221f:	jbe    0x4221e6
  422221:	out    0x61,al
  422223:	adc    BYTE PTR [ecx+0xa5bf99c],bh
  422229:	test   eax,0x6775032d
  42222e:	les    eax,FWORD PTR [ebx]
  422230:	mov    cl,0xbf
  422232:	dec    ebp
  422233:	in     eax,0xb
  422235:	loopne 0x422236
  422237:	aam    0x9c
  422239:	ror    DWORD PTR [ebx+0x24],1
  42223c:	call   0x3446:0x67f20cdc
  422243:	ss test eax,0xae210b8c
  422249:	push   eax
  42224a:	jge    0x4222ba
  42224c:	jae    0x422210
  42224e:	icebp  
  42224f:	scas   al,BYTE PTR es:[edi]
  422250:	fild   QWORD PTR [ebp+0x17a552d]
  422256:	mov    cl,0xf8
  422258:	mov    dl,0xe3
  42225a:	retf   
  42225b:	sub    DWORD PTR [ebx],edi
  42225d:	pop    esp
  42225e:	inc    ecx
  42225f:	dec    ebp
  422260:	pushf  
  422261:	lea    ecx,[ebx]
  422263:	ror    bh,0x99
  422266:	cs dec edx
  422268:	push   eax
  422269:	shl    BYTE PTR [ebx],0xc7
  42226c:	or     BYTE PTR ds:0xad1bb2d9,0x42
  422273:	jnp    0x422284
  422275:	mov    esi,0xe61b2cfa
  42227a:	inc    edi
  42227b:	cmp    eax,0x95779c4a
  422280:	xchg   DWORD PTR [eax+0x36],edx
  422283:	push   esi
  422284:	arpl   WORD PTR [edx-0x313c8d11],sp
  42228a:	dec    ebp
  42228b:	lods   eax,DWORD PTR ds:[esi]
  42228c:	adc    ebx,eax
  42228e:	sbb    eax,0x13d8ed96
  422293:	shr    DWORD PTR [edx-0x41e13c01],1
  422299:	adc    BYTE PTR [ebp-0x5f9bdaa],bh
  42229f:	sbb    al,0xe1
  4222a1:	mov    edx,0xff6e69c0
  4222a6:	jle    0x422229
  4222a8:	adc    bl,BYTE PTR [ecx]
  4222aa:	gs leave 
  4222ac:	dec    ebp
  4222ad:	neg    BYTE PTR [edx-0xcfb1ffb]
  4222b3:	adc    al,0xc4
  4222b5:	mov    ds:0xb14d6586,eax
  4222ba:	clc    
  4222bb:	out    dx,eax
  4222bc:	or     cl,BYTE PTR [ebx-0x20c5b1bb]
  4222c2:	adc    eax,DWORD PTR [edi+0x6673563e]
  4222c8:	jae    0x4222da
  4222ca:	xchg   edx,eax
  4222cb:	repz mov eax,0x1824789c
  4222d1:	pop    ebp
  4222d2:	imul   esp,edi,0xffffffe2
  4222d5:	iret   
  4222d6:	mov    al,ds:0xb3428c72
  4222db:	jae    0x4222a3
  4222dd:	ja     0x422305
  4222df:	daa    
  4222e0:	fcom   QWORD PTR [eax+0xc]
  4222e3:	aad    0x55
  4222e5:	cs leave 
  4222e7:	mov    dl,0x28
  4222e9:	shl    BYTE PTR [esi-0x6b2f5c06],0x3c
  4222f0:	outs   dx,BYTE PTR ds:[esi]
  4222f1:	aas    
  4222f2:	ret    0xfb21
  4222f5:	arpl   WORD PTR [esi+0x6e],ax
  4222f8:	(bad)  [edx-0x7f3b9f2b]
  4222fe:	pop    ds
  4222ff:	push   0x74317179
  422304:	jnp    0x4222ab
  422306:	lock adc DWORD PTR [edx],ebx
  422309:	pop    edi
  42230a:	xchg   edx,eax
  42230b:	repnz les ebp,FWORD PTR [edx+0x7]
  42230f:	rcr    DWORD PTR [edi],1
  422311:	add    eax,0x20fef266
  422316:	mov    al,ds:0xec8547a6
  42231b:	dec    ebx
  42231c:	repz sahf 
  42231e:	ror    BYTE PTR [ebx],1
  422320:	pop    edx
  422321:	cmp    eax,0xd42c8a74
  422326:	out    0x2a,al
  422328:	loop   0x422329
  42232a:	mov    eax,edx
  42232c:	stos   BYTE PTR es:[edi],al
  42232d:	sbb    eax,edx
  42232f:	add    al,0xa1
  422331:	or     eax,0x804e1ec5
  422336:	mov    esi,0x3c45a063
  42233b:	mov    al,ds:0x8cb52227
  422340:	aaa    
  422341:	jl     0x4223be
  422343:	adc    al,0x24
  422345:	pop    esi
  422346:	int    0x1a
  422348:	not    BYTE PTR [eax-0xded5917]
  42234e:	stc    
  42234f:	mov    ebp,0x9cfa3c15
  422354:	into   
  422355:	call   0x9ebf:0x28989913
  42235c:	sub    al,0xa0
  42235e:	adc    DWORD PTR [edi-0x41],ecx
  422361:	je     0x422378
  422363:	cwde   
  422364:	sbb    DWORD PTR [esi+0x45],ecx
  422367:	mov    esp,0x9528d86d
  42236c:	sub    ah,bh
  42236e:	shl    DWORD PTR [ebp+0x66],0x1a
  422372:	pop    ss
  422373:	(bad)  
  422375:	or     esp,edi
  422377:	pop    es
  422378:	push   edi
  422379:	jp     0x42237b
  42237b:	add    ch,bl
  42237d:	cmp    al,0x8f
  42237f:	mov    esp,0x7dffbfef
  422384:	add    al,BYTE PTR [ebp+0x13fd8dc1]
  42238a:	cwde   
  42238b:	sub    al,0x88
  42238d:	sahf   
  42238e:	add    DWORD PTR [eax],eax
  422390:	xchg   BYTE PTR [edx],al
  422392:	add    BYTE PTR [eax],al
  422394:	xchg   ebx,eax
  422395:	adc    al,ch
  422397:	xlat   BYTE PTR ds:[ebx]
  422398:	jmp    0xd7b24ce1
  42239d:	inc    esi
  42239e:	(bad)  
  42239f:	mov    ebx,0x42d0ed4c
  4223a4:	mov    dh,0xef
  4223a6:	pinsrw mm0,WORD PTR [edx],0x8b
  4223aa:	lea    edx,[edi]
  4223ac:	test   bh,cl
  4223ae:	jl     0x4223ec
  4223b0:	out    0x3f,al
  4223b2:	inc    edi
  4223b3:	mov    ds:0x7288e63,al
  4223b8:	aas    
  4223b9:	adc    BYTE PTR [esi],dl
  4223bb:	cmp    bh,ah
  4223bd:	pop    eax
  4223be:	inc    edx
  4223bf:	sbb    BYTE PTR ds:0x6af9970d,cl
  4223c5:	push   cs
  4223c6:	cmp    BYTE PTR [eax],ah
  4223c8:	mov    ch,0xb0
  4223cb:	pop    edi
  4223cc:	dec    eax
  4223cd:	test   BYTE PTR [ecx+0x37c6db58],cl
  4223d3:	in     al,0xfa
  4223d5:	mov    bl,0x28
  4223d7:	or     ah,BYTE PTR [ebp+0x45f7d7f6]
  4223dd:	icebp  
  4223de:	fst    DWORD PTR [ebx-0x19f02d2c]
  4223e4:	adc    ah,ah
  4223e6:	ins    DWORD PTR es:[edi],dx
  4223e7:	out    dx,al
  4223e8:	(bad)  
  4223e9:	scas   al,BYTE PTR es:[edi]
  4223ea:	mov    al,ds:0xb7a49efa
  4223ef:	stos   BYTE PTR es:[edi],al
  4223f0:	mov    dl,0xe6
  4223f2:	fiadd  WORD PTR ds:0x30e5c753
  4223f8:	shr    DWORD PTR [ecx+0x6f],1
  4223fb:	in     eax,0xd3
  4223fd:	sub    eax,0xee9f0654
  422402:	mov    ds:0x89cce3dd,al
  422407:	adc    al,0x3c
  422409:	js     0x4223d3
  42240b:	pusha  
  42240c:	call   0xcc3c08d9
  422411:	cmc    
  422412:	mov    ecx,0x55e56c3d
  422417:	js     0x4223e6
  422419:	call   0xb3c1441
  42241e:	dec    ebp
  42241f:	xor    ah,BYTE PTR [eax]
  422421:	jle    0x42244e
  422423:	cwde   
  422424:	adc    edi,DWORD PTR [ebx+edi*2]
  422427:	adc    eax,DWORD PTR [eax+ebp*2-0x19]
  42242b:	pop    esp
  42242c:	mov    ds:0x4a8d1254,al
  422431:	ja     0x422462
  422433:	adc    DWORD PTR [ebx+0x363ec00a],ecx
  422439:	and    ch,bl
  42243b:	dec    edx
  42243c:	sbb    ecx,edi
  42243e:	pushf  
  42243f:	sbb    al,0x84
  422441:	stc    
  422442:	push   edi
  422443:	and    ecx,DWORD PTR [eax+0x56]
  422446:	xchg   ebp,eax
  422447:	mov    WORD PTR [ecx+0x7b],cs
  42244a:	psrlq  mm1,QWORD PTR [esi]
  42244d:	sub    DWORD PTR [edx-0x6f1c5e9b],ebx
  422453:	jecxz  0x422415
  422455:	sbb    BYTE PTR [edx+0x6d],0x9c
  422459:	adc    BYTE PTR [edx+0x2d9b03db],0x21
  422460:	in     eax,dx
  422461:	push   ds
  422462:	pop    ebp
  422463:	xchg   edx,eax
  422464:	aas    
  422465:	icebp  
  422466:	std    
  422467:	push   cs
  422468:	mov    ecx,ecx
  42246a:	push   0x494bea28
  42246f:	out    0x63,al
  422471:	mov    dh,0x75
  422473:	mov    dl,0xbd
  422475:	push   ss
  422476:	jge    0x4224b2
  422478:	ds mov ebx,0x88d2fc80
  42247e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42247f:	test   bh,bh
  422481:	inc    esi
  422482:	jae    0x4224e7
  422484:	out    dx,al
  422485:	dec    sp
  422487:	int    0x31
  422489:	pop    eax
  42248a:	push   es
  42248b:	sub    eax,0x8ed8150c
  422490:	jecxz  0x4224b7
  422492:	cwde   
  422493:	adc    BYTE PTR [ecx+0x2],al
  422496:	mov    edi,0x211b5a01
  42249b:	lea    ecx,[ecx]
  42249d:	jl     0x42245e
  42249f:	pop    ss
  4224a0:	scas   al,BYTE PTR es:[edi]
  4224a1:	mul    bh
  4224a3:	ret    0x571b
  4224a6:	(bad)  
  4224a7:	xchg   esi,eax
  4224a8:	ins    BYTE PTR es:[edi],dx
  4224a9:	sbb    BYTE PTR ds:[esp+ebx*4],bl
  4224ad:	xlat   BYTE PTR ds:[ebx]
  4224ae:	or     DWORD PTR [edi-0xa],ecx
  4224b1:	cmp    edi,edi
  4224b3:	and    ebx,DWORD PTR [ebx+0x51]
  4224b6:	push   ds
  4224b7:	call   0x1d4c6a1d
  4224bc:	xchg   ebx,eax
  4224bd:	cmp    al,0x23
  4224bf:	dec    eax
  4224c0:	and    DWORD PTR [ecx],edx
  4224c2:	ficom  WORD PTR [edx+eiz*8+0x4]
  4224c6:	jbe    0x4224b1
  4224c8:	loop   0x42244a
  4224ca:	cmp    DWORD PTR [ecx],0x6ecd98e5
  4224d0:	sbb    edx,DWORD PTR [edi+ecx*1-0x5b]
  4224d4:	mov    ds:0x403f0259,al
  4224d9:	fisubr DWORD PTR [ebx+0x1752e148]
  4224df:	mov    ch,0x6
  4224e1:	cwde   
  4224e2:	jge    0x4224cc
  4224e4:	jns    0x422470
  4224e6:	xor    dh,BYTE PTR [edx]
  4224e8:	pop    es
  4224e9:	mov    WORD PTR [eax],?
  4224eb:	inc    edx
  4224ec:	add    BYTE PTR [edi+0x4826b10d],cl
  4224f2:	idiv   DWORD PTR [esi+0x11de067a]
  4224f8:	add    al,0x7a
  4224fa:	js     0x422523
  4224fc:	mov    esp,0x6389b9cb
  422501:	cmp    BYTE PTR [ecx+0x0],ch
  422504:	add    al,0xb1
  422506:	stc    
  422507:	xor    dh,BYTE PTR [esi-0x5]
  42250a:	cmp    al,BYTE PTR [eax-0x7f]
  42250d:	add    ebp,DWORD PTR [edi+0x38]
  422510:	out    dx,al
  422511:	hlt    
  422512:	imul   edi,DWORD PTR [esi+0x51],0xa2706959
  422519:	pop    ds
  42251a:	mov    cs,WORD PTR ss:[ebx+0x4]
  42251e:	mov    cl,0x58
  422520:	neg    esi
  422522:	hlt    
  422523:	ror    BYTE PTR [ebx+0x3e9613c0],1
  422529:	sub    BYTE PTR ds:0x66af45f0,al
  42252f:	jmp    0x4224bd
  422531:	lods   al,BYTE PTR ds:[esi]
  422532:	shr    BYTE PTR [ebp+edi*8-0x55],0xa
  422537:	pushf  
  422538:	dec    ecx
  422539:	and    BYTE PTR [eax-0x4c53423b],0x27
  422540:	retf   
  422541:	jbe    0x422520
  422543:	or     DWORD PTR [ebp+0xf],ecx
  422546:	add    ebx,DWORD PTR [esp+ebp*1]
  422549:	push   cs
  42254a:	push   cs
  42254b:	cmp    DWORD PTR [edx],esp
  42254d:	pop    edi
  42254e:	pushf  
  42254f:	dec    esp
  422550:	loop   0x4225a7
  422552:	cmp    bl,BYTE PTR [edx-0x6a]
  422555:	mov    eax,ds:0x736d5b5c
  42255a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42255b:	xor    di,WORD PTR [ebx-0xe]
  42255f:	cmp    ebp,DWORD PTR [edx]
  422561:	mov    cl,0xf9
  422563:	dec    ebx
  422564:	jae    0x4225c0
  422566:	push   0x8d9ef16b
  42256b:	inc    ebp
  42256c:	hlt    
  42256d:	mov    eax,0x4ec2c0be
  422572:	jmp    0xd1a9:0xb4b1915
  422579:	cmp    cl,cl
  42257b:	inc    ecx
  42257c:	pop    DWORD PTR [ebx+0x4d8d6762]
  422582:	shl    DWORD PTR [eax-0x63],0xb3
  422586:	test   al,0x8c
  422588:	sbb    al,0x5c
  42258a:	(bad)  
  42258b:	push   esp
  42258c:	cmp    edi,DWORD PTR ss:[ebp+0x5e]
  422590:	outs   dx,BYTE PTR ds:[esi]
  422591:	call   0x87ad:0x3db14253
  422598:	add    bh,cl
  42259a:	sbb    esi,DWORD PTR [edi+eax*1+0x3d]
  42259e:	sub    eax,0x1271d99a
  4225a3:	gs sub al,0x9a
  4225a6:	push   esp
  4225a7:	enter  0xe5b3,0x52
  4225ab:	or     BYTE PTR [ebx-0x3ca2],ch
  4225b1:	add    DWORD PTR [ebp-0x44],ebp
  4225b4:	aad    0x53
  4225b6:	mov    edi,DWORD PTR [ebp+0x9]
  4225b9:	push   es
  4225ba:	add    al,0x3f
  4225bc:	int3   
  4225bd:	or     dl,ah
  4225bf:	mov    fs,edi
  4225c1:	or     edi,edx
  4225c3:	cmp    ebp,DWORD PTR [ecx-0xc]
  4225c6:	lods   al,BYTE PTR ds:[esi]
  4225c7:	jg     0x42255e
  4225c9:	and    DWORD PTR [esi-0x386eed15],edx
  4225cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225d0:	mov    al,ds:0xfb85afee
  4225d5:	add    al,0x22
  4225d7:	mov    bl,0xab
  4225d9:	mov    eax,ds:0xfab4390f
  4225de:	leave  
  4225df:	into   
  4225e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225e1:	push   edx
  4225e2:	shr    DWORD PTR [edi],0x55
  4225e5:	cwde   
  4225e6:	call   0xd901ac26
  4225eb:	in     al,0x10
  4225ed:	mov    dh,0x82
  4225ef:	int3   
  4225f0:	jno    0x4225f0
  4225f2:	das    
  4225f3:	sti    
  4225f4:	sbb    dl,BYTE PTR [edi-0x161e0a02]
  4225fa:	dec    edx
  4225fb:	inc    ecx
  4225fc:	vmulps xmm3,xmm0,XMMWORD PTR [ecx-0x27b520a2]
  422604:	jns    0x422624
  422606:	cdq    
  422607:	xor    al,0x1e
  422609:	mov    esi,0x1eb103f
  42260e:	std    
  42260f:	mov    eax,ds:0x53fd70c7
  422614:	je     0x42263e
  422616:	aad    0xef
  422618:	xor    al,BYTE PTR [edi+0x0]
  42261b:	add    BYTE PTR [esi-0x4fd6421],dh
  422621:	inc    esi
  422622:	mov    edi,0x5e25f0ff
  422627:	and    eax,0xe8445693
  42262c:	push   cs
  42262d:	mov    eax,ds:0x2860001
  422632:	add    BYTE PTR [eax],al
  422634:	jp     0x4225c0
  422636:	pop    esi
  422637:	inc    edi
  422638:	clc    
  422639:	fs inc ebp
  42263b:	(bad)  
  42263d:	jmp    0x57c:0x76264a36
  422644:	outs   dx,BYTE PTR ds:[esi]
  422645:	and    eax,0xa913610
  42264a:	jb     0x422683
  42264c:	cli    
  42264d:	sub    eax,0x26b92686
  422652:	lods   eax,DWORD PTR ds:[esi]
  422653:	(bad)  
  422654:	adc    BYTE PTR [ebx],al
  422656:	in     eax,dx
  422657:	loop   0x4226c6
  422659:	xor    edx,DWORD PTR ds:0x9cf7d342
  42265f:	mov    ebp,0x5d6f8a3e
  422664:	in     eax,dx
  422665:	push   sp
  422667:	les    ebx,FWORD PTR [edx+0x2b]
  42266a:	sub    DWORD PTR [edx-0x17668fdd],edi
  422670:	cli    
  422671:	xchg   DWORD PTR [edi],esp
  422673:	in     al,dx
  422674:	add    cl,0x9a
  422677:	sahf   
  422678:	jno    0x4226be
  42267a:	sbb    ecx,ecx
  42267c:	or     BYTE PTR [eax],ah
  42267e:	repz xchg ebx,eax
  422680:	shr    BYTE PTR [ebx-0x1],1
  422683:	inc    edi
  422684:	das    
  422685:	push   esi
  422686:	pop    edx
  422687:	and    BYTE PTR [ecx],0x7a
  42268a:	xchg   esi,eax
  42268b:	je     0x42261d
  42268d:	jne    0x422675
  42268f:	bound  ebp,QWORD PTR [ebx+esi*1+0x20]
  422693:	add    al,0x54
  422695:	and    BYTE PTR [edx],dh
  422697:	jno    0x42270b
  422699:	and    DWORD PTR [eax-0x4f],0xffffff8c
  42269d:	cwde   
  42269e:	and    eax,DWORD PTR [ebx+ecx*4-0x57]
  4226a2:	int    0xbe
  4226a4:	mov    ds:0xe696a0,al
  4226a9:	mov    al,0xe2
  4226ab:	jno    0x42262f
  4226ad:	fadd   DWORD PTR [esi-0x39d715a]
  4226b3:	xor    eax,0x47b14ef
  4226b8:	dec    esp
  4226b9:	xchg   esp,eax
  4226ba:	fcomip st,st(7)
  4226bc:	in     eax,dx
  4226bd:	ficomp WORD PTR [bp+di]
  4226c0:	dec    edi
  4226c1:	cmp    eax,0xb45b81dc
  4226c6:	fmul   QWORD PTR [edi-0xa]
  4226c9:	(bad)  
  4226ca:	out    0xa8,al
  4226cc:	int    0xa4
  4226ce:	outs   dx,BYTE PTR ds:[esi]
  4226cf:	jl     0x422661
  4226d1:	lahf   
  4226d2:	mov    bl,0x46
  4226d5:	pop    ebp
  4226d6:	push   edi
  4226d7:	push   esp
  4226d8:	loop   0x4226b4
  4226da:	pop    edx
  4226db:	leave  
  4226dc:	mov    ebx,0x52cf9db8
  4226e1:	out    0x7d,eax
  4226e3:	test   al,0x98
  4226e5:	or     edx,0xffffffc3
  4226e8:	addr16 push ecx
  4226ea:	xlat   BYTE PTR ds:[ebx]
  4226eb:	push   ss
  4226ec:	(bad)  
  4226ed:	popf   
  4226ee:	loop   0x4226b5
  4226f0:	sahf   
  4226f1:	sub    esp,ebp
  4226f3:	retf   0x21df
  4226f6:	fstp   TBYTE PTR ds:0xa62947c8
  4226fc:	lahf   
  4226fd:	out    0x49,al
  4226ff:	sbb    al,0x20
  422701:	(bad)  
  422702:	xlat   BYTE PTR ds:[ebx]
  422703:	xlat   BYTE PTR ds:[ebx]
  422704:	fisubr DWORD PTR ds:0x19145dc0
  42270a:	fisubr DWORD PTR [edx+0x1f]
  42270d:	popa   
  42270e:	lock imul edi,DWORD PTR [bx+si],0xabdba24c
  422716:	mov    ch,BYTE PTR ds:0xa70a78e
  42271c:	dec    ebx
  42271d:	adc    edx,DWORD PTR fs:[esi]
  422720:	fiadd  WORD PTR [ebp+ebp*4+0x4c1b45db]
  422727:	push   edi
  422728:	jno    0x42278d
  42272a:	imul   edi,esp,0x9d5e2fbe
  422730:	fidiv  DWORD PTR [ecx]
  422732:	repnz push ebx
  422734:	fldcw  WORD PTR [edi-0x8]
  422737:	cmp    esi,esi
  422739:	cmp    eax,0xe8417b8c
  42273e:	sbb    ecx,DWORD PTR [edi+0x1b2d0027]
  422744:	aam    0x48
  422746:	xor    al,0x15
  422748:	lds    eax,FWORD PTR [esi-0x59]
  42274b:	cwde   
  42274c:	pop    es
  42274d:	jno    0x42279e
  42274f:	push   0x8f87c03d
  422754:	ins    BYTE PTR es:[edi],dx
  422755:	aad    0x8d
  422757:	repnz sbb eax,0xb760681c
  42275d:	push   eax
  42275e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42275f:	adc    DWORD PTR [edx+0x8dc433b],esp
  422765:	jns    0x42274f
  422767:	lds    edi,FWORD PTR [eax]
  422769:	or     ebp,DWORD PTR [ecx]
  42276b:	call   0xacb8:0xdbe4fbf1
  422772:	out    0xca,eax
  422774:	in     eax,0x8c
  422776:	adc    al,cl
  422778:	enter  0x4298,0xa8
  42277c:	enter  0x6bee,0x97
  422780:	test   DWORD PTR gs:[ebp+0x6e],0x8a0fd439
  422788:	inc    DWORD PTR ds:0xa3dacc1b
  42278e:	loop   0x422790
  422790:	hlt    
  422791:	dec    eax
  422792:	sub    esi,edi
  422794:	mov    BYTE PTR ds:0xd7ab6048,ch
  42279a:	inc    edx
  42279b:	(bad)  
  42279c:	jno    0x422784
  42279e:	aas    
  42279f:	sti    
  4227a0:	or     al,0x53
  4227a2:	ret    
  4227a3:	dec    edi
  4227a4:	xchg   esp,eax
  4227a5:	call   0xd79e4e5d
  4227aa:	mov    esp,DWORD PTR [esi]
  4227ac:	out    0x54,al
  4227ae:	dec    ebx
  4227af:	xchg   esi,eax
  4227b0:	and    dh,cl
  4227b2:	dec    esp
  4227b3:	(bad)
  4227b6:	cmovb  esp,DWORD PTR [esi+ecx*1]
  4227ba:	lea    ebp,ds:0xde1ddf87
  4227c0:	ficomp WORD PTR [edx]
  4227c2:	sbb    BYTE PTR [eax+0x12],bl
  4227c5:	iret   
  4227c6:	mov    bl,0x75
  4227c8:	into   
  4227c9:	sbb    BYTE PTR [edx],al
  4227cb:	data16 sub bh,BYTE PTR [ebx+0x73]
  4227cf:	call   0x740b:0x59c995d0
  4227d6:	mov    bl,0xa7
  4227d8:	mov    eax,0xd494a02a
  4227dd:	mov    eax,ds:0x8714ba80
  4227e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227e3:	stos   BYTE PTR es:[edi],al
  4227e4:	test   DWORD PTR [eax-0x17],esp
  4227e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227e8:	loop   0x4227b8
  4227ea:	dec    edi
  4227eb:	mov    ds:0x185439b8,eax
  4227f0:	(bad)  
  4227f2:	mov    bl,0x23
  4227f4:	punpckhwd mm7,mm6
  4227f7:	jmp    0x42285c
  4227f9:	(bad)  
  4227fa:	mov    BYTE PTR [ebx],dl
  4227fc:	mov    esp,0x3844cb1b
  422801:	fs xor eax,0xab7b5cfd
  422807:	mov    esp,0x31af1a2c
  42280c:	jl     0x422822
  42280e:	sub    DWORD PTR [edx+0x794036f6],eax
  422814:	mov    esi,0xc51a0e7d
  422819:	xchg   esp,eax
  42281a:	push   edx
  42281b:	test   bl,dl
  42281d:	fst    DWORD PTR [ebp+0x7509490a]
  422823:	mov    esi,0x423de1c
  422828:	adc    ebp,DWORD PTR [edi]
  42282a:	xchg   ecx,eax
  42282b:	jns    0x422833
  42282d:	stc    
  42282e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42282f:	out    dx,al
  422830:	inc    ebx
  422831:	lock imul esi,DWORD PTR [edi+0x1f],0xfffffffb
  422836:	stos   DWORD PTR es:[edi],eax
  422837:	lds    edx,FWORD PTR [ecx-0x52]
  42283a:	adc    al,0xfe
  42283c:	pop    ebp
  42283d:	mov    esi,0x1342554e
  422842:	lods   eax,DWORD PTR ds:[esi]
  422843:	outs   dx,BYTE PTR ds:[esi]
  422844:	mov    al,ds:0x5e08750a
  422849:	pop    eax
  42284a:	mov    bl,0xd
  42284c:	in     al,0x68
  42284e:	mov    esp,0x508abaa9
  422853:	pop    ds
  422854:	addr16 mov esp,0x126e7164
  42285a:	inc    edi
  42285b:	xlat   BYTE PTR ds:[ebx]
  42285c:	mov    cl,bh
  42285e:	pop    ecx
  42285f:	and    DWORD PTR [ecx],0xffffff87
  422862:	mov    eax,ds:0xc705ee13
  422867:	sar    DWORD PTR [edx+0x64c0d658],0x63
  42286e:	push   es
  42286f:	(bad)  
  422871:	pop    ds
  422872:	push   esp
  422873:	mov    bl,0x3e
  422875:	push   edi
  422876:	ins    BYTE PTR es:[edi],dx
  422877:	cs pop ecx
  422879:	sbb    eax,0x7a4aec5c
  42287e:	add    eax,ecx
  422880:	adc    edi,esp
  422882:	ret    
  422883:	out    dx,al
  422884:	xor    BYTE PTR [ecx+0x4c29b0d3],dl
  42288a:	inc    esi
  42288b:	xchg   ebx,eax
  42288c:	push   ebx
  42288d:	(bad)  
  42288f:	loopne 0x4228fa
  422891:	in     al,dx
  422892:	fnstenv [edx+0x7d]
  422895:	int    0x57
  422897:	jge    0x4228cb
  422899:	dec    edi
  42289a:	stos   DWORD PTR es:[edi],eax
  42289b:	lods   al,BYTE PTR ds:[esi]
  42289c:	js     0x4228fe
  42289e:	xchg   ecx,eax
  42289f:	loop   0x422832
  4228a1:	loope  0x422909
  4228a3:	mov    dl,0xc7
  4228a5:	es je  0x42291d
  4228a8:	push   ebx
  4228a9:	pop    ecx
  4228aa:	pop    ds
  4228ab:	or     BYTE PTR [edx],0x1b
  4228ae:	retf   0x582b
  4228b1:	pop    edi
  4228b2:	xchg   ebp,eax
  4228b3:	mov    dh,0x5c
  4228b5:	fidivr WORD PTR [ecx]
  4228b7:	cdq    
  4228b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228b9:	add    al,BYTE PTR [eax]
  4228bb:	add    al,bh
  4228bd:	mov    ah,0x7f
  4228bf:	cmp    eax,0xf5faff7f
  4228c4:	jle    0x4228c8
  4228c6:	xor    eax,DWORD PTR [esi-0x77]
  4228c9:	in     al,dx
  4228ca:	loop   0x42290d
  4228cc:	xchg   esp,eax
  4228cd:	mov    ds:0x2860001,eax
  4228d2:	add    BYTE PTR [eax],al
  4228d4:	sbb    BYTE PTR [eax],dl
  4228d6:	pop    DWORD PTR [esi+edi*4+0x66]
  4228da:	pop    eax
  4228db:	or     bl,BYTE PTR [edi+0x66e65ef1]
  4228e1:	daa    
  4228e2:	ins    BYTE PTR es:[edi],dx
  4228e3:	dec    ebp
  4228e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228e5:	popa   
  4228e6:	fstp   st(3)
  4228e8:	jmp    0xb98a:0x64355165
  4228ef:	out    0x7a,eax
  4228f1:	cmc    
  4228f2:	dec    edi
  4228f3:	ins    BYTE PTR es:[edi],dx
  4228f4:	adc    eax,0xdce4a4e7
  4228f9:	test   dh,dh
  4228fb:	test   BYTE PTR [ebx+0x416bdc3],ch
  422901:	(bad)  
  422902:	mov    eax,ds:0x48eb0bfc
  422907:	dec    edi
  422908:	xchg   ebp,eax
  422909:	fcomp  QWORD PTR [ecx]
  42290b:	push   eax
  42290c:	or     al,0x20
  42290e:	inc    esp
  42290f:	mov    al,ds:0xc50a76cc
  422914:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422915:	mov    ds:0x926da815,eax
  42291a:	dec    eax
  42291b:	retf   
  42291c:	lds    eax,FWORD PTR [edi]
  42291e:	daa    
  42291f:	fistp  QWORD PTR [eax+0x39]
  422922:	add    eax,0x71fe3fad
  422927:	mov    ebx,0x342b1940
  42292c:	pop    eax
  42292d:	sbb    ebx,ebx
  42292f:	jmp    0xdcf80c0b
  422934:	mov    ebp,0xd3d5f229
  422939:	aaa    
  42293a:	fcmovbe st,st(0)
  42293c:	jne    0x4228d0
  42293e:	xchg   ebx,eax
  42293f:	inc    ebx
  422940:	pop    edi
  422941:	test   ch,dh
  422943:	mov    dl,0x7
  422945:	sbb    al,0xbc
  422947:	test   eax,0xe23a7825
  42294c:	repz les esi,FWORD PTR [ecx+edi*8-0x57]
  422951:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422952:	es (bad) 
  422954:	mov    dh,0x97
  422956:	pop    esi
  422957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422958:	ja     0x4229ba
  42295a:	jl     0x4229bb
  42295c:	(bad)  
  42295d:	mov    ebx,0x4e289f8c
  422962:	xchg   ecx,eax
  422963:	and    eax,DWORD PTR [ecx-0x299f0276]
  422969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42296a:	ret    0xc705
  42296d:	aas    
  42296e:	xchg   esi,eax
  42296f:	push   cs
  422970:	test   al,0x21
  422972:	push   esp
  422973:	xor    al,0x6f
  422975:	fstp   QWORD PTR [ebx+0x1a]
  422978:	mov    ds:0xa211275d,eax
  42297d:	jno    0x4229c0
  42297f:	jg     0x422974
  422981:	pop    edi
  422982:	dec    ebp
  422983:	push   0xa2ad2d7
  422988:	push   ds
  422989:	out    0xf7,al
  42298b:	inc    DWORD PTR [esi+ecx*1]
  42298e:	ins    BYTE PTR es:[edi],dx
  42298f:	lods   eax,DWORD PTR ds:[esi]
  422990:	out    dx,eax
  422991:	jns    0x422918
  422993:	xchg   edx,eax
  422994:	je     0x4229cc
  422996:	adc    esi,DWORD PTR [edx]
  422998:	push   es
  422999:	cdq    
  42299a:	add    al,0x82
  42299c:	mov    bh,0x4e
  42299e:	mov    ecx,0x9979fe1b
  4229a3:	ins    BYTE PTR es:[edi],dx
  4229a4:	pop    ecx
  4229a5:	hlt    
  4229a6:	jp     0x4229e2
  4229a8:	ins    BYTE PTR es:[edi],dx
  4229a9:	lods   eax,DWORD PTR ds:[esi]
  4229aa:	cs cli 
  4229ac:	int3   
  4229ad:	sbb    edi,DWORD PTR [esp+eiz*4+0x27]
  4229b1:	or     eax,0x2545db4d
  4229b6:	cmp    BYTE PTR [edx-0xccd58f7],bl
  4229bc:	jp     0x422968
  4229be:	jg     0x422a39
  4229c0:	ror    BYTE PTR [edi-0x72c422f],0xe1
  4229c7:	jp     0x422950
  4229c9:	dec    esi
  4229ca:	mov    eax,ds:0xb841e339
  4229cf:	xchg   ebx,eax
  4229d0:	add    DWORD PTR [esi+ebp*4],ebp
  4229d3:	fisttp WORD PTR [eax]
  4229d5:	ficomp WORD PTR [edx+0x2914065]
  4229db:	stos   BYTE PTR es:[edi],al
  4229dc:	mov    eax,ds:0x775dd3ab
  4229e1:	dec    ebp
  4229e2:	jns    0x422988
  4229e4:	inc    DWORD PTR [ebx+0x6f]
  4229e7:	cmp    eax,0x9d95f31f
  4229ec:	sbb    BYTE PTR [bx+si+0xec],0x73
  4229f2:	test   eax,0x998938d6
  4229f7:	aam    0xf5
  4229f9:	jp     0x422a18
  4229fb:	pop    esp
  4229fc:	inc    ebx
  4229fd:	nop
  4229fe:	outs   dx,BYTE PTR ds:[esi]
  4229ff:	lock retf 
  422a01:	enter  0x959e,0x6e
  422a05:	fiadd  DWORD PTR [edx-0x350a4f1b]
  422a0b:	in     eax,0x93
  422a0d:	jae    0x422a22
  422a0f:	push   es
  422a10:	and    esi,edx
  422a12:	sbb    eax,0xbc011f80
  422a17:	and    dh,bl
  422a19:	fldenv [ebx-0x51ddfa3]
  422a1f:	jo     0x422a86
  422a21:	xchg   edi,eax
  422a22:	xor    esi,DWORD PTR [edx+0x3]
  422a25:	xchg   BYTE PTR [esi],dl
  422a27:	jmp    0x422a5e
  422a29:	cli    
  422a2a:	mov    al,ds:0x11cbabd8
  422a2f:	or     ah,BYTE PTR [edx-0x13]
  422a32:	(bad)  
  422a33:	sub    al,0xae
  422a35:	add    ebp,0x9e3c05fb
  422a3b:	nop
  422a3c:	int3   
  422a3d:	xlat   BYTE PTR ds:[ebx]
  422a3e:	popa   
  422a3f:	xor    ecx,DWORD PTR [ecx]
  422a41:	push   ebx
  422a42:	out    0x18,al
  422a44:	bound  eax,QWORD PTR [ebp+0x5ea88ab0]
  422a4a:	icebp  
  422a4b:	lea    edx,[ebp+0x8]
  422a4e:	inc    ecx
  422a4f:	(bad)  
  422a50:	lods   al,BYTE PTR ds:[esi]
  422a51:	stos   BYTE PTR es:[edi],al
  422a52:	imul   DWORD PTR [edi]
  422a54:	retf   0xe2cc
  422a57:	adc    eax,0xb8fd1281
  422a5c:	rol    ch,cl
  422a5e:	mov    dl,0xbc
  422a60:	int    0x3f
  422a62:	fist   WORD PTR ds:0xec1ad366
  422a68:	adc    ecx,DWORD PTR [edx]
  422a6a:	in     eax,0x95
  422a6c:	adc    BYTE PTR [ecx+0xc785628],ah
  422a72:	adc    ecx,DWORD PTR [ebx-0x29]
  422a75:	out    0x6c,eax
  422a77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a78:	xchg   ebp,eax
  422a79:	xchg   edi,eax
  422a7a:	inc    ebp
  422a7b:	call   FWORD PTR [ebx+eiz*2+0x3a]
  422a7f:	dec    esi
  422a80:	adc    ch,cl
  422a82:	mov    al,ds:0x5bae6311
  422a87:	jns    0x422aa0
  422a89:	xchg   esi,eax
  422a8a:	sbb    ch,dl
  422a8c:	dec    eax
  422a8d:	scas   al,BYTE PTR es:[edi]
  422a8e:	(bad)  
  422a8f:	jnp    0x422a15
  422a91:	cmp    BYTE PTR [esp+edx*2-0x58],0xcd
  422a96:	test   DWORD PTR ds:0xd42264da,esi
  422a9c:	and    al,0xac
  422a9e:	mov    WORD PTR ds:0xd532046e,es
  422aa4:	dec    esi
  422aa5:	gs hlt 
  422aa7:	mov    ecx,0x57dcf0a4
  422aac:	mov    cl,0x81
  422aae:	or     al,0xfc
  422ab0:	mov    dh,0x83
  422ab2:	es push edi
  422ab4:	cwde   
  422ab5:	mov    cl,0xa1
  422ab7:	shr    BYTE PTR [ebx+esi*4],cl
  422aba:	jb     0x422b17
  422abc:	cmp    ecx,0xecc981ce
  422ac2:	fdivr  DWORD PTR [edx+0x30]
  422ac5:	les    edi,FWORD PTR [edi+0x7b24c9b2]
  422acb:	add    BYTE PTR [ebp+0x54],0xf3
  422acf:	pop    ecx
  422ad0:	mov    ah,0x25
  422ad2:	loope  0x422acc
  422ad4:	fsub   st,st(2)
  422ad6:	lahf   
  422ad7:	out    dx,al
  422ad8:	or     DWORD PTR [ecx-0x52071763],esp
  422ade:	jg     0x422aba
  422ae0:	retf   
  422ae1:	pop    esi
  422ae2:	pop    ecx
  422ae3:	mov    edx,0x6ff6b692
  422ae8:	adc    ebx,DWORD PTR [esi+0x66f3f103]
  422aee:	mov    eax,ds:0x2df5627a
  422af3:	es inc ebp
  422af5:	lock xor ah,BYTE PTR [ecx+0x47]
  422af9:	dec    ebx
  422afa:	pop    edx
  422afb:	lahf   
  422afc:	retf   0x136d
  422aff:	out    0x49,eax
  422b01:	cmp    BYTE PTR [ebx+0x3b666613],0xf1
  422b08:	push   ecx
  422b09:	sub    DWORD PTR [ebx-0x15],edx
  422b0c:	mov    eax,ds:0xeb554a5a
  422b11:	xchg   edi,eax
  422b12:	test   esi,eax
  422b14:	jl     0x422ac0
  422b16:	mov    dl,0xa1
  422b18:	sbb    esi,DWORD PTR [ebx-0x8]
  422b1b:	mov    ebp,0xe1b519c8
  422b20:	push   edi
  422b21:	fisttp WORD PTR [edx]
  422b23:	dec    edx
  422b24:	pop    ecx
  422b25:	sbb    al,0x41
  422b27:	dec    ebp
  422b28:	mov    ah,dh
  422b2a:	lahf   
  422b2b:	fs out dx,eax
  422b2d:	outs   dx,DWORD PTR ds:[esi]
  422b2e:	popa   
  422b2f:	sar    DWORD PTR [esi-0x4b],cl
  422b32:	scas   eax,DWORD PTR es:[edi]
  422b33:	call   0x561160c2
  422b38:	xor    BYTE PTR [edx],al
  422b3a:	lods   eax,DWORD PTR ds:[esi]
  422b3b:	neg    ecx
  422b3d:	shl    eax,0x39
  422b40:	mov    eax,ds:0x99fdc479
  422b45:	add    BYTE PTR [ebx],ch
  422b47:	out    dx,al
  422b48:	sbb    bh,bl
  422b4a:	cli    
  422b4b:	pop    edi
  422b4c:	stos   BYTE PTR es:[edi],al
  422b4d:	xchg   ecx,eax
  422b4e:	ret    0x9436
  422b51:	add    cx,cx
  422b54:	mov    dl,0xd8
  422b56:	mov    esp,ebx
  422b58:	stc    
  422b59:	mov    BYTE PTR [eax],0x0
  422b5c:	cmp    DWORD PTR [ecx+ecx*4],ebx
  422b5f:	out    0xad,eax
  422b61:	idiv   DWORD PTR [edi-0x22]
  422b64:	mov    DWORD PTR [edx+0x79],ebp
  422b67:	adc    esi,0x1ae05489
  422b6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b6e:	add    DWORD PTR [eax],eax
  422b70:	xchg   BYTE PTR [edx],al
  422b72:	add    BYTE PTR [eax],al
  422b74:	xor    eax,0x26b7f7fd
  422b79:	push   ebp
  422b7a:	or     DWORD PTR [edi],ebp
  422b7c:	loopne 0x422b20
  422b7e:	jg     0x422bb4
  422b80:	gs jp  0x422b26
  422b83:	addr16 mov edi,0xe2ff943e
  422b89:	inc    eax
  422b8a:	cld    
  422b8b:	dec    esp
  422b8c:	inc    ebp
  422b8d:	push   edi
  422b8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b8f:	out    dx,eax
  422b90:	mov    eax,ds:0xe8f1ab06
  422b95:	mov    ah,0xd8
  422b97:	pop    ecx
  422b98:	pop    ebx
  422b99:	inc    edx
  422b9a:	jge    0x422c0a
  422b9c:	and    edx,eax
  422b9e:	xor    DWORD PTR [eax+0x18a3efb2],edi
  422ba4:	test   eax,0x14e5ac0d
  422ba9:	adc    BYTE PTR [eax+0x3a9cfccc],bl
  422baf:	add    esp,edi
  422bb1:	in     al,0xe2
  422bb3:	xchg   esp,eax
  422bb4:	add    eax,ebp
  422bb6:	(bad)  
  422bb7:	mov    eax,ds:0x1853e394
  422bbc:	mov    BYTE PTR [ebp+0x7d],bl
  422bbf:	mov    ch,0x40
  422bc1:	sbb    bl,dh
  422bc3:	push   edi
  422bc4:	pop    ebp
  422bc5:	les    ebx,FWORD PTR [edi+0x27]
  422bc8:	push   esi
  422bc9:	inc    ebp
  422bca:	cdq    
  422bcb:	rcr    bh,cl
  422bcd:	and    al,0xbd
  422bcf:	or     eax,0x9f335d33
  422bd4:	dec    esp
  422bd5:	stc    
  422bd6:	jp     0x422bc8
  422bd8:	retf   0xa912
  422bdb:	mov    esp,0xa5312e53
  422be0:	mov    bh,0x32
  422be2:	fistp  QWORD PTR [esi+0x1e]
  422be5:	jbe    0x422bf6
  422be7:	sbb    DWORD PTR [esi],ecx
  422be9:	mov    ah,0x39
  422beb:	sub    DWORD PTR [esi-0x1],ebx
  422bee:	jo     0x422c5a
  422bf0:	rcl    DWORD PTR [edx+ebp*8+0x3b009694],1
  422bf7:	scas   eax,DWORD PTR es:[edi]
  422bf8:	aas    
  422bf9:	scas   eax,DWORD PTR es:[edi]
  422bfa:	inc    eax
  422bfb:	cmp    cl,BYTE PTR [ecx-0x24]
  422bfe:	cmp    eax,0x4ff9309e
  422c03:	sbb    al,0xb1
  422c05:	retf   
  422c06:	mov    DWORD PTR [edx],esp
  422c08:	mov    DWORD PTR [edi+ebx*2],esp
  422c0b:	stc    
  422c0c:	jbe    0x422c2d
  422c0e:	xor    eax,0x59be5aca
  422c13:	loop   0x422c71
  422c15:	xor    BYTE PTR ds:0xd48fc151,al
  422c1b:	adc    DWORD PTR [esi+0x2e2825a1],edi
  422c21:	push   esp
  422c22:	mov    edx,0x5b58b095
  422c27:	sub    BYTE PTR [ecx-0x684cf084],0xdf
  422c2e:	gs mov esi,0x952bd49
  422c34:	(bad)  
  422c35:	lahf   
  422c36:	iret   
  422c37:	cmc    
  422c38:	addr16 sahf 
  422c3a:	adc    esp,eax
  422c3c:	pop    es
  422c3d:	(bad)  
  422c3f:	or     BYTE PTR [ebx-0x7c5ca51b],bl
  422c45:	ret    0x4981
  422c48:	xchg   ebp,edx
  422c4a:	fadd   DWORD PTR [ebp-0x41d092ab]
  422c50:	rcr    BYTE PTR [edi-0x7d],cl
  422c53:	ss mov cl,0x41
  422c56:	rcr    ecx,0x5d
  422c59:	jg     0x422c52
  422c5b:	push   esp
  422c5c:	jecxz  0x422c04
  422c5e:	jns    0x422ca4
  422c60:	xor    eax,0x3bc7e758
  422c65:	es and ebx,eax
  422c68:	cmp    ebp,ecx
  422c6a:	and    BYTE PTR [ecx+0x2566bf99],0xca
  422c71:	push   eax
  422c72:	pop    edi
  422c73:	adc    DWORD PTR [edx+0x65],eax
  422c76:	fisubr WORD PTR [esi]
  422c78:	cwde   
  422c79:	push   ss
  422c7a:	pop    ebp
  422c7b:	pop    esi
  422c7c:	or     ah,BYTE PTR [ebp+edi*2-0x41]
  422c80:	shl    DWORD PTR [esp+esi*1-0x45],cl
  422c84:	sub    DWORD PTR [eax-0x6b7b5e22],eax
  422c8a:	add    al,0x5c
  422c8c:	pop    ebp
  422c8d:	sar    BYTE PTR [ecx],cl
  422c8f:	push   edx
  422c90:	test   eax,0xd7f2bfd1
  422c95:	cmp    eax,0x6a09f3d7
  422c9a:	and    ebx,esi
  422c9c:	(bad)  
  422c9d:	out    dx,al
  422c9e:	nop
  422c9f:	sti    
  422ca0:	out    dx,al
  422ca1:	ja     0x422c45
  422ca3:	sbb    ebx,esp
  422ca5:	fadd   DWORD PTR [edx+0x69]
  422ca8:	sub    al,0xd9
  422caa:	and    DWORD PTR [edx+0x7c5cf950],eax
  422cb0:	or     dl,BYTE PTR [ebx-0x3c602a42]
  422cb6:	cmp    al,0xab
  422cb8:	cmp    BYTE PTR [edx],0x4e
  422cbb:	cli    
  422cbc:	dec    ebx
  422cbd:	xchg   esp,eax
  422cbe:	repnz aaa 
  422cc0:	adc    BYTE PTR [eax+0x53],ch
  422cc3:	xchg   ebx,eax
  422cc4:	imul   cl
  422cc6:	ins    BYTE PTR es:[edi],dx
  422cc7:	sub    al,0x6b
  422cc9:	scas   al,BYTE PTR es:[edi]
  422cca:	into   
  422ccb:	jae    0x422d34
  422ccd:	adc    eax,0xdee70277
  422cd2:	pop    edi
  422cd3:	xor    DWORD PTR [eax-0x2e],ebx
  422cd6:	sbb    DWORD PTR [ebx+0x50341b8e],ecx
  422cdc:	repz sbb al,0x7a
  422cdf:	out    dx,al
  422ce0:	xor    eax,DWORD PTR [ecx]
  422ce2:	mov    esp,0x7e02b55f
  422ce7:	push   0xb3f15294
  422cec:	mov    eax,0x48476fd1
  422cf1:	mov    esi,0xb2c05947
  422cf6:	push   ds
  422cf7:	pop    ecx
  422cf8:	(bad)  
  422cf9:	ud0    esp,DWORD PTR [ecx+ecx*2-0xe]
  422cfe:	add    BYTE PTR [ecx],0x88
  422d01:	mov    ecx,DWORD PTR [edi]
  422d03:	pop    esi
  422d04:	in     eax,0x65
  422d06:	xchg   esp,eax
  422d07:	repz inc ebp
  422d09:	dec    eax
  422d0a:	xor    al,0x19
  422d0c:	pop    ss
  422d0d:	mov    esp,0xa4842db5
  422d12:	inc    eax
  422d13:	loop   0x422d48
  422d15:	loope  0x422d6a
  422d17:	cmp    esi,DWORD PTR [eax]
  422d19:	push   ebp
  422d1a:	in     eax,dx
  422d1b:	repnz sub DWORD PTR [edx+0x7c],esp
  422d1f:	sar    ch,cl
  422d21:	rol    BYTE PTR [ebx],0xff
  422d24:	jl     0x422d74
  422d26:	rcr    BYTE PTR [esi+0x8],1
  422d29:	iret   
  422d2a:	mov    eax,ds:0x31710e88
  422d2f:	mov    cl,BYTE PTR [eax]
  422d31:	fs inc eax
  422d33:	(bad)  
  422d34:	aas    
  422d35:	sbb    ebx,esp
  422d37:	inc    edi
  422d38:	lods   al,BYTE PTR ds:[esi]
  422d39:	(bad)
  422d3c:	pop    edi
  422d3d:	fiadd  WORD PTR [eax+ebx*1]
  422d40:	add    esp,DWORD PTR [ebx-0x5bea273b]
  422d46:	fisubr WORD PTR [ecx-0xad34562]
  422d4c:	push   ebp
  422d4d:	imul   ebx,DWORD PTR [edi],0xdf53e4d4
  422d53:	inc    eax
  422d54:	dec    ebx
  422d55:	es hlt 
  422d57:	ror    DWORD PTR [ecx],cl
  422d59:	add    esp,DWORD PTR [edx]
  422d5b:	pushf  
  422d5c:	add    ah,BYTE PTR [ebx-0xf1f9a23]
  422d62:	test   BYTE PTR [eax+0x566b4c77],cl
  422d68:	jmp    FWORD PTR [edi+0x11]
  422d6b:	inc    esp
  422d6c:	stos   DWORD PTR es:[edi],eax
  422d6d:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  422d6f:	xor    al,0xfa
  422d71:	jmp    0x422d27
  422d73:	sti    
  422d74:	inc    edi
  422d75:	outs   dx,BYTE PTR ds:[esi]
  422d76:	or     eax,ebp
  422d78:	fcmovb st,st(5)
  422d7a:	add    DWORD PTR [edx],esp
  422d7c:	scas   al,BYTE PTR es:[edi]
  422d7d:	(bad)  
  422d7e:	mov    ds:0x6000693,eax
  422d83:	sub    dh,0x50
  422d86:	jo     0x422d37
  422d88:	cdq    
  422d89:	aas    
  422d8a:	sbb    eax,0x8bf1980f
  422d8f:	ss in  eax,dx
  422d91:	fadd   QWORD PTR [ecx-0x289a1777]
  422d97:	push   eax
  422d98:	sahf   
  422d99:	fs ret 
  422d9b:	rcl    DWORD PTR [ecx+0xfa776b9],1
  422da1:	dec    ebp
  422da2:	ret    
  422da3:	mov    DWORD PTR [ecx],edx
  422da5:	or     dl,cl
  422da7:	and    al,0xc4
  422da9:	xlat   BYTE PTR ds:[ebx]
  422daa:	rcl    BYTE PTR [eax*2-0x1ce98848],0xc6
  422db2:	pop    ecx
  422db3:	dec    ebp
  422db4:	retf   0x3341
  422db7:	fs into 
  422db9:	pusha  
  422dba:	dec    ebx
  422dbb:	xchg   edx,eax
  422dbc:	popf   
  422dbd:	ins    DWORD PTR es:[edi],dx
  422dbe:	xor    BYTE PTR fs:[edx+0x29],cl
  422dc2:	jb     0x422d50
  422dc4:	cmp    al,0xbe
  422dc6:	repz imul ebx,ebp,0x37
  422dca:	les    ebx,FWORD PTR [eax-0x129cdd72]
  422dd0:	pusha  
  422dd1:	loop   0x422d7c
  422dd3:	xor    al,0xc7
  422dd5:	ins    BYTE PTR es:[edi],dx
  422dd6:	cmp    esp,DWORD PTR [eax]
  422dd8:	call   0xa29b8159
  422ddd:	pop    ebp
  422dde:	xor    eax,0x808ef57b
  422de3:	ins    DWORD PTR es:[edi],dx
  422de4:	push   ebp
  422de5:	pop    ss
  422de6:	jns    0x422dc3
  422de8:	mov    bh,0x53
  422dea:	add    al,0x66
  422dec:	mov    ebx,0x4aa7fef3
  422df1:	mov    bl,0xb4
  422df3:	in     eax,dx
  422df4:	and    DWORD PTR [edx],esi
  422df6:	gs xchg bh,dh
  422df9:	or     al,BYTE PTR [eax]
  422dfb:	add    BYTE PTR [ebp-0x4c],ah
  422dfe:	sbb    dh,bl
  422e00:	fsin   
  422e02:	out    0xbf,eax
  422e04:	gs mov ah,0x46
  422e07:	imul   BYTE PTR [ebp-0x5fcddd7c]
  422e0d:	test   al,0x1
  422e0f:	add    BYTE PTR [esi+0x18000002],al
  422e15:	std    
  422e16:	or     BYTE PTR [edi+0x38e8f499],dl
  422e1c:	xchg   esp,eax
  422e1d:	lock aas 
  422e1f:	add    bl,BYTE PTR [eax-0x17]
  422e22:	and    ch,BYTE PTR [edx]
  422e24:	(bad)  
  422e26:	sbb    eax,0x8708232b
  422e2b:	sbb    DWORD PTR [ebp-0x43],0xfd1c9401
  422e32:	adc    edi,DWORD PTR [edi+0x5bc9f137]
  422e38:	fidivr DWORD PTR [ebx]
  422e3a:	enter  0xd897,0x8f
  422e3e:	sub    dl,BYTE PTR [esi-0x6a]
  422e41:	jae    0x422de4
  422e43:	ins    DWORD PTR es:[edi],dx
  422e44:	data16 (bad) 
  422e46:	sbb    al,0x47
  422e48:	cmp    eax,0x5ab8129e
  422e4d:	xor    BYTE PTR [eax+0x38b65797],ah
  422e53:	inc    ebx
  422e54:	ret    0x6c6
  422e57:	data16 loop 0x422e7c
  422e5a:	sub    al,0x7d
  422e5c:	mov    ch,0xa7
  422e5e:	pop    ebp
  422e5f:	jmp    0x756:0x70e168ee
  422e66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e67:	in     eax,dx
  422e68:	retf   
  422e69:	and    eax,0x813e7c2d
  422e6e:	adc    DWORD PTR [edi-0x197552d8],esi
  422e74:	sbb    edx,ebp
  422e76:	cld    
  422e77:	xchg   esp,eax
  422e78:	cmp    BYTE PTR [eax+0x6e075246],bl
  422e7e:	outs   dx,BYTE PTR ds:[esi]
  422e7f:	jmp    0x422eec
  422e81:	shl    BYTE PTR [edi-0x2fe8958a],1
  422e87:	(bad)  
  422e88:	in     eax,dx
  422e89:	fcomp  st(7)
  422e8b:	xor    esp,DWORD PTR [ebp+0x70]
  422e8e:	dec    eax
  422e8f:	rol    cl,cl
  422e91:	in     eax,dx
  422e92:	ficom  DWORD PTR fs:[ebx+0x6265792c]
  422e99:	xlat   BYTE PTR ds:[ebx]
  422e9a:	sub    bh,BYTE PTR [eax-0xcf1c771]
  422ea0:	enter  0xf969,0x9c
  422ea4:	add    BYTE PTR fs:[ebp+0x69],al
  422ea8:	shl    dl,0x32
  422eab:	mov    al,ds:0xa4110931
  422eb0:	jmp    0x30:0x6ee07629
  422eb7:	out    dx,eax
  422eb8:	or     eax,DWORD PTR [eax]
  422eba:	daa    
  422ebb:	pop    ebx
  422ebc:	ja     0x422ecd
  422ebe:	sbb    eax,0x168d50b1
  422ec3:	jecxz  0x422ea9
  422ec5:	adc    ecx,ecx
  422ec7:	call   0x86c2:0xc06c92a0
  422ece:	xlat   BYTE PTR ds:[ebx]
  422ecf:	enter  0xfd45,0x3a
  422ed3:	xor    al,0xd6
  422ed5:	leave  
  422ed6:	jp     0x422ea8
  422ed8:	xchg   ecx,eax
  422ed9:	push   0xd85f30c5
  422ede:	xor    DWORD PTR [edi-0x26bed86c],ebp
  422ee4:	adc    eax,0x71beb48f
  422ee9:	jp     0x422f3d
  422eeb:	cdq    
  422eec:	mov    bl,0x66
  422eee:	or     dl,BYTE PTR [edx-0x10]
  422ef1:	lods   al,BYTE PTR ds:[esi]
  422ef2:	dec    edx
  422ef3:	addr16 adc ebp,ebp
  422ef6:	out    0x90,eax
  422ef8:	out    dx,eax
  422ef9:	lock outs dx,BYTE PTR ds:[esi]
  422efb:	or     esi,edx
  422efd:	shrd   DWORD PTR [ebp+ecx*2-0x28],eax,0x8f
  422f03:	mov    ebp,0xdb6f84ec
  422f08:	rcr    BYTE PTR [ecx],cl
  422f0a:	add    al,0xf3
  422f0c:	inc    eax
  422f0d:	adc    BYTE PTR [esi],ah
  422f0f:	push   edx
  422f10:	and    al,0xed
  422f12:	mov    cl,0x91
  422f14:	sub    ecx,ebp
  422f16:	popf   
  422f17:	pop    edx
  422f18:	xor    BYTE PTR [edi],dh
  422f1a:	enter  0x2ced,0xd3
  422f1e:	xchg   edi,eax
  422f1f:	ror    DWORD PTR [edx],cl
  422f21:	iret   
  422f22:	fldcw  WORD PTR [ecx+edx*2]
  422f25:	sub    al,0xc3
  422f27:	in     al,dx
  422f28:	(bad)  
  422f29:	jp     0x422f90
  422f2b:	and    cl,al
  422f2d:	sahf   
  422f2e:	test   al,0x1d
  422f30:	sub    edi,DWORD PTR [ebp+0x2a]
  422f33:	xchg   BYTE PTR [esi],ah
  422f35:	mov    al,ds:0xa8a407e7
  422f3a:	cwde   
  422f3b:	jl     0x422f4b
  422f3d:	outs   dx,BYTE PTR ds:[esi]
  422f3e:	xor    eax,0xf8ae47a8
  422f43:	inc    esi
  422f44:	inc    edx
  422f45:	jbe    0x422f36
  422f47:	mov    bh,0xec
  422f49:	jnp    0x422f30
  422f4b:	mov    ds:0x16a902db,eax
  422f50:	outs   dx,DWORD PTR ds:[esi]
  422f51:	test   WORD PTR [edx+0x22],sp
  422f55:	and    DWORD PTR [ebx+0x70],ebx
  422f58:	pop    ecx
  422f59:	sbb    al,0x9f
  422f5b:	xchg   bh,dh
  422f5d:	cmp    BYTE PTR [eax+eiz*4+0x49402689],0x62
  422f65:	in     al,dx
  422f66:	dec    ebx
  422f67:	fdivr  DWORD PTR [esi]
  422f69:	lods   eax,DWORD PTR ds:[esi]
  422f6a:	mov    ds:0xe4466680,al
  422f6f:	rol    esp,cl
  422f71:	rcr    DWORD PTR [edx+edx*2-0x3f],0xf6
  422f76:	popf   
  422f77:	ss inc esi
  422f79:	cmp    DWORD PTR ds:0xd385057b,esp
  422f7f:	test   BYTE PTR [eax-0x2cb96ae2],bh
  422f85:	adc    ebp,DWORD PTR [edx]
  422f87:	cli    
  422f88:	popa   
  422f89:	(bad)  ds:0x1f3a4723
  422f8f:	adc    eax,0x5d1f543a
  422f94:	add    al,0xa5
  422f96:	aaa    
  422f97:	stos   BYTE PTR es:[edi],al
  422f98:	ins    BYTE PTR es:[edi],dx
  422f99:	jno    0x422f4b
  422f9b:	cmp    eax,DWORD PTR [edx]
  422f9d:	bound  esp,QWORD PTR [eax+edi*4]
  422fa0:	mov    eax,0xd9855eec
  422fa5:	outs   dx,BYTE PTR ds:[esi]
  422fa6:	lods   eax,DWORD PTR ds:[esi]
  422fa7:	and    al,0xa8
  422fa9:	cmp    eax,DWORD PTR [ecx]
  422fab:	xchg   edi,eax
  422fac:	in     al,0xdd
  422fae:	jecxz  0x422fdb
  422fb0:	mov    bh,0x2e
  422fb2:	mov    edi,0xe2633bce
  422fb7:	mov    bh,0x77
  422fb9:	jmp    0xad9f:0x5a2a13ed
  422fc0:	pop    edx
  422fc1:	in     eax,dx
  422fc2:	sahf   
  422fc3:	pop    esi
  422fc4:	inc    esp
  422fc5:	inc    eax
  422fc6:	rcl    BYTE PTR [ebx-0x5dc68546],0xcb
  422fcd:	arpl   ax,si
  422fcf:	adc    BYTE PTR [eax+0x1f],cl
  422fd2:	sub    DWORD PTR [eax+0x8edd2d0],edx
  422fd8:	loop   0x42301b
  422fda:	xchg   BYTE PTR [esi-0x719cf146],ah
  422fe0:	ret    0xee17
  422fe3:	jbe    0x422f7b
  422fe5:	mov    dl,0x3b
  422fe7:	add    BYTE PTR [edi],ch
  422fe9:	mov    ah,0x14
  422feb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fec:	cdq    
  422fed:	lds    edi,FWORD PTR [ecx-0x54]
  422ff0:	mov    bl,0xdb
  422ff2:	xor    dl,bh
  422ff4:	xor    edx,ebp
  422ff6:	sbb    eax,0xf49c92b
  422ffb:	sub    ah,ah
  422ffd:	scas   al,BYTE PTR es:[edi]
  422ffe:	pop    ebx
  422fff:	or     dl,cl
  423001:	outs   dx,DWORD PTR ds:[esi]
  423002:	call   0xbda0:0xe1c10716
  423009:	mov    edx,0xcf34b754
  42300e:	push   ebp
  42300f:	fidiv  DWORD PTR [edi-0x734df021]
  423015:	mov    al,ds:0xb3ce7534
  42301a:	dec    ebx
  42301b:	int    0x48
  42301d:	mov    DWORD PTR [esi],ebx
  42301f:	je     0x423076
  423021:	mov    edx,0x8aaaa353
  423026:	and    al,0xb
  423028:	sub    BYTE PTR [esi-0x40],ch
  42302b:	push   ss
  42302c:	mov    al,0x99
  42302e:	mov    ecx,0x11e51276
  423033:	mov    BYTE PTR [edi-0x78ca9e53],cl
  423039:	and    ch,BYTE PTR [esi+0x4b86dd8c]
  42303f:	add    al,bh
  423041:	mov    ebp,0x9f48eed1
  423046:	ret    0xac06
  423049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42304a:	and    bh,BYTE PTR [eax]
  42304c:	call   0x3168:0xdd95ab57
  423053:	push   0xfffffff8
  423055:	adc    eax,0x628d07b4
  42305a:	xchg   ecx,eax
  42305b:	jbe    0x423015
  42305d:	mov    esi,0x35fd1127
  423062:	xchg   edx,eax
  423063:	add    DWORD PTR [ecx+0x16],edx
  423066:	repnz shr edi,1
  423069:	push   0x13
  42306b:	mov    dl,0x75
  42306d:	aam    0xf
  42306f:	ret    
  423070:	loopne 0x42304e
  423072:	cli    
  423073:	out    dx,al
  423074:	int3   
  423075:	pop    es
  423076:	sub    eax,0x4379094a
  42307b:	sbb    eax,0xd2ee81a0
  423080:	mov    ds:0x2e078ce8,al
  423085:	mov    esp,0x69942ccb
  42308a:	cmp    eax,0xe8a3d775
  42308f:	(bad)
  423092:	mov    ebx,?
  423094:	div    DWORD PTR [ecx+0x1d9fd2db]
  42309a:	add    BYTE PTR [eax],al
  42309c:	adc    bl,al
  42309e:	arpl   WORD PTR [edx-0x15],si
  4230a1:	sti    
  4230a2:	adc    edi,eax
  4230a4:	sub    edi,DWORD PTR [ebx+0x345688f7]
  4230aa:	shr    BYTE PTR [ecx+0x1ab26],0x86
  4230b1:	add    al,BYTE PTR [eax]
  4230b3:	add    BYTE PTR [edi+0x39],al
  4230b6:	cld    
  4230b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230b8:	fdiv   DWORD PTR [eax-0x51231906]
  4230be:	mov    ebx,0xf276f266
  4230c3:	mov    es,WORD PTR [edx+0x23]
  4230c6:	pop    ds
  4230c7:	das    
  4230c8:	inc    esp
  4230c9:	je     0x423070
  4230cb:	pop    esi
  4230cc:	sti    
  4230cd:	fldcw  WORD PTR [esi+0x11cf22bb]
  4230d3:	jge    0x423085
  4230d5:	xor    bl,BYTE PTR [eax]
  4230d7:	scas   al,BYTE PTR es:[edi]
  4230d8:	int    0x83
  4230da:	pop    ecx
  4230db:	sbb    edi,DWORD PTR [esi+0x6f]
  4230de:	sbb    DWORD PTR [esi-0x14],ecx
  4230e1:	adc    BYTE PTR [eax+0x4391d64d],al
  4230e7:	stos   DWORD PTR es:[edi],eax
  4230e8:	push   cs
  4230e9:	loop   0x423107
  4230eb:	ja     0x42307d
  4230ed:	xor    BYTE PTR [esi],dl
  4230ef:	pusha  
  4230f0:	jp     0x4230eb
  4230f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230f3:	repnz inc edi
  4230f5:	or     al,0xfa
  4230f7:	sub    BYTE PTR [eax-0x33],dh
  4230fa:	dec    esp
  4230fb:	push   0x4329fe89
  423100:	in     eax,dx
  423101:	ins    DWORD PTR es:[edi],dx
  423102:	loope  0x423107
  423104:	shr    BYTE PTR [edx],1
  423106:	outs   dx,BYTE PTR ds:[esi]
  423107:	push   edx
  423108:	outs   dx,DWORD PTR ds:[esi]
  423109:	and    cl,BYTE PTR [edx]
  42310b:	popf   
  42310c:	adc    al,0xf7
  42310e:	retf   0x3879
  423111:	xchg   ecx,eax
  423112:	dec    edx
  423113:	cli    
  423114:	stc    
  423115:	ror    DWORD PTR [esi-0x45],0xf9
  423119:	sub    bl,BYTE PTR [edi-0x2a1f0871]
  42311f:	arpl   di,ax
  423121:	mov    eax,0xd8e81140
  423126:	test   DWORD PTR gs:[ebx-0x4a],edi
  42312a:	lods   eax,DWORD PTR ds:[esi]
  42312b:	std    
  42312c:	mov    cl,0x32
  42312e:	in     eax,dx
  42312f:	or     cl,BYTE PTR [edi-0x34]
  423132:	pusha  
  423133:	into   
  423134:	(bad)  
  423135:	sbb    eax,0xf2511c71
  42313a:	adc    al,0xdf
  42313c:	fsubr  QWORD PTR [eax+edi*1]
  42313f:	mov    dl,al
  423141:	fdiv   QWORD PTR [edi]
  423143:	sbb    BYTE PTR es:[ebp+0x339725bf],0x8f
  42314b:	xor    al,0xe2
  42314d:	mov    ah,dh
  42314f:	loopne 0x42310b
  423151:	fst    st(6)
  423153:	dec    esi
  423154:	inc    edi
  423155:	into   
  423156:	cmp    dh,ch
  423158:	xchg   edi,eax
  423159:	pop    ds
  42315a:	mov    ebp,0xce7f0f3f
  42315f:	sub    cl,bh
  423161:	dec    edi
  423162:	sahf   
  423163:	adc    DWORD PTR [ebx],ebp
  423165:	jne    0x4231b0
  423167:	popf   
  423168:	outs   dx,BYTE PTR ds:[esi]
  423169:	and    BYTE PTR [edx],al
  42316b:	or     al,0x33
  42316d:	test   eax,0xbf35bcf8
  423172:	sub    edi,DWORD PTR [ecx]
  423174:	popf   
  423175:	test   eax,0x847edb1d
  42317a:	sub    al,0xab
  42317c:	fld    DWORD PTR [edi+0x5c1561c3]
  423182:	ja     0x4231d2
  423184:	addr16 pop ds
  423186:	sub    cl,BYTE PTR [esi]
  423188:	xchg   edx,eax
  423189:	adc    ch,BYTE PTR [edi-0x41d4ca80]
  42318f:	les    esi,FWORD PTR [esi-0x34832ff4]
  423195:	mov    DWORD PTR [esi-0x1e],edx
  423198:	inc    esp
  423199:	je     0x42318e
  42319b:	jmp    0x42316c
  42319d:	mov    esi,DWORD PTR [edi-0x40]
  4231a0:	jge    0x4231b8
  4231a2:	sub    cl,BYTE PTR [ebx-0x41]
  4231a5:	cli    
  4231a6:	aas    
  4231a7:	inc    esp
  4231a8:	jmp    0x423154
  4231aa:	dec    ebp
  4231ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231ad:	sub    dh,ch
  4231af:	mov    eax,0x486dfb2
  4231b4:	inc    ebp
  4231b5:	inc    eax
  4231b6:	mov    ds:0xf8c66769,al
  4231bb:	(bad)  
  4231bc:	push   edi
  4231bd:	ins    DWORD PTR es:[edi],dx
  4231be:	dec    esi
  4231bf:	nop
  4231c0:	adc    al,0xdc
  4231c2:	jb     0x4231dd
  4231c4:	dec    eax
  4231c5:	sbb    edi,DWORD PTR [ebp+esi*1+0x72527041]
  4231cc:	jbe    0x4231ad
  4231ce:	or     BYTE PTR ds:0xfa03afd5,ah
  4231d4:	into   
  4231d5:	lods   al,BYTE PTR ds:[esi]
  4231d6:	retfw  
  4231d8:	mov    edx,0xfa0d6add
  4231dd:	das    
  4231de:	pushf  
  4231df:	leave  
  4231e0:	stos   DWORD PTR es:[edi],eax
  4231e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231e2:	sti    
  4231e3:	(bad)  
  4231e4:	bnd jae 0x42316e
  4231e7:	xchg   esi,eax
  4231e8:	test   BYTE PTR [esi-0x1c],dh
  4231eb:	inc    esi
  4231ec:	sbb    al,0xaa
  4231ee:	cdq    
  4231ef:	or     ch,ch
  4231f1:	es ins BYTE PTR es:[edi],dx
  4231f3:	cmp    DWORD PTR ds:0x5e020f8d,0x9fdc7eaa
  4231fd:	push   ebp
  4231fe:	jne    0x42318f
  423200:	out    dx,al
  423201:	test   eax,0xc46a0ca0
  423206:	jno    0x423188
  423208:	inc    edi
  423209:	jecxz  0x423213
  42320b:	ret    
  42320c:	dec    edx
  42320d:	mov    DWORD PTR [edi+0x3bc3149c],esi
  423213:	in     al,dx
  423214:	iret   
  423215:	mov    ds:0x7226a286,eax
  42321a:	sbb    eax,0x66645291
  42321f:	stos   DWORD PTR es:[edi],eax
  423220:	test   al,0xb7
  423222:	ss inc edx
  423224:	jno    0x423260
  423226:	or     DWORD PTR [esp+edi*1],ecx
  423229:	mov    ds:0x81b08925,eax
  42322e:	fsub   DWORD PTR [ebp+0x3da9ddaf]
  423234:	or     BYTE PTR [edx],ah
  423236:	xchg   esp,eax
  423237:	xor    al,cl
  423239:	fmul   st,st(2)
  42323b:	outs   dx,DWORD PTR ds:[esi]
  42323c:	pop    ebp
  42323d:	call   FWORD PTR [ebp+0x5f]
  423240:	adc    DWORD PTR [ebx+0x40aa37e2],ebx
  423246:	int3   
  423247:	retf   0xc269
  42324a:	popf   
  42324b:	adc    al,0x53
  42324d:	mov    ds:0xf587ad2d,al
  423252:	sub    eax,0x1093b4ac
  423257:	add    edx,DWORD PTR [ecx-0x3b]
  42325a:	int3   
  42325b:	dec    edi
  42325c:	sbb    BYTE PTR [edx+0x7f0e17ba],ch
  423262:	or     ecx,DWORD PTR [edx+esi*4-0x74966a95]
  423269:	push   edx
  42326a:	in     eax,dx
  42326b:	call   0x73256f0e
  423270:	out    dx,eax
  423271:	bound  eax,QWORD PTR [esi]
  423273:	fld    TBYTE PTR [ebx]
  423275:	or     eax,0x1e054c66
  42327a:	xchg   edx,eax
  42327b:	ret    
  42327c:	dec    ebx
  42327d:	popa   
  42327e:	cmp    eax,0x7422f80
  423283:	imul   edi,DWORD PTR [ebp+0x470775b2],0x6366e416
  42328d:	or     eax,0xb8e223e6
  423292:	and    al,BYTE PTR [ecx+0x51a184e0]
  423298:	dec    edx
  423299:	adc    al,0x50
  42329b:	mov    ah,0xe
  42329d:	pop    ecx
  42329e:	bound  ebp,QWORD PTR [ebx+edi*4]
  4232a1:	sub    BYTE PTR [ebx+0x25],bh
  4232a4:	xor    BYTE PTR [eax-0x56],ah
  4232a7:	dec    ecx
  4232a8:	adc    eax,0x2edeab13
  4232ad:	dec    esp
  4232ae:	sub    bl,al
  4232b0:	xor    ecx,DWORD PTR [bp-0x10]
  4232b4:	dec    ebp
  4232b5:	stos   BYTE PTR es:[edi],al
  4232b6:	ja     0x4232b9
  4232b8:	push   edx
  4232b9:	sti    
  4232ba:	retf   
  4232bb:	and    DWORD PTR [edx],edx
  4232bd:	add    DWORD PTR [edx-0x19],ebx
  4232c0:	out    0xea,al
  4232c2:	jne    0x423252
  4232c4:	push   0xffffffc1
  4232c6:	xor    al,0xbb
  4232c8:	test   ah,dh
  4232ca:	lfs    esp,FWORD PTR [edx]
  4232cd:	mov    ebp,0x9a368b48
  4232d2:	rcr    DWORD PTR [esi+ebx*8+0x13a51b35],cl
  4232d9:	mov    cl,0x43
  4232db:	pop    eax
  4232dc:	dec    ebx
  4232dd:	mov    eax,eax
  4232df:	ror    esi,1
  4232e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232e2:	fist   DWORD PTR [ebx+0x6b71d115]
  4232e8:	ret    0xec57
  4232eb:	mov    DWORD PTR [esi+0x755ac3fc],0x128aa3b6
  4232f5:	aas    
  4232f6:	ret    
  4232f7:	js     0x42332d
  4232f9:	sbb    al,0xcd
  4232fb:	sbb    al,0xb7
  4232fd:	(bad)  
  4232fe:	sar    DWORD PTR [edi-0x7d52ee8a],cl
  423304:	xor    eax,0x3eccdc1b
  423309:	sub    dl,bh
  42330b:	scas   al,BYTE PTR es:[edi]
  42330c:	sub    dl,BYTE PTR [ecx+0x43]
  42330f:	imul   edi,DWORD PTR [ebp-0x75e8150e],0x4a
  423316:	pop    es
  423317:	retf   0x819b
  42331a:	sar    DWORD PTR [edi],1
  42331c:	ja     0x4232f2
  42331e:	addr16 xchg ebx,eax
  423320:	ins    DWORD PTR es:[edi],dx
  423321:	(bad)  
  423322:	mov    ecx,0x2f1fe8d0
  423327:	jbe    0x15c82393
  42332d:	mov    BYTE PTR [edi-0x70885780],al
  423333:	loopne 0x42339c
  423335:	sbb    DWORD PTR fs:[edi+0x347b],0xe
  42333d:	and    BYTE PTR [eax-0x404051c1],cl
  423343:	xor    DWORD PTR [ebx+0x449289bd],edx
  423349:	pop    ecx
  42334a:	ret    0xacdf
  42334d:	lods   eax,DWORD PTR ds:[esi]
  42334e:	add    DWORD PTR [eax],eax
  423350:	xchg   BYTE PTR [edx],al
  423352:	add    BYTE PTR [eax],al
  423354:	inc    DWORD PTR [edx+ebx*2+0x2a684afe]
  42335b:	or     al,0xe8
  42335d:	mov    edx,0xcb99ee90
  423362:	pop    ecx
  423363:	lea    esp,[eax+0x1e16b749]
  423369:	pop    es
  42336a:	mov    edx,0xb17aa3b9
  42336f:	and    DWORD PTR [ecx+ebp*1-0x33f91f0],eax
  423376:	xlat   BYTE PTR ds:[ebx]
  423377:	out    0xc1,eax
  423379:	dec    edx
  42337a:	sti    
  42337b:	sar    DWORD PTR [edx-0x3e],cl
  42337e:	xor    DWORD PTR [ebp+0x444a6422],eax
  423384:	das    
  423385:	les    edi,FWORD PTR [esi-0x301b4cf2]
  42338b:	push   cs
  42338c:	dec    ebp
  42338d:	pop    esp
  42338e:	pop    ebx
  42338f:	push   ebp
  423390:	cmp    dl,BYTE PTR [edx]
  423392:	je     0x423386
  423394:	ss das 
  423396:	fild   DWORD PTR [eax+0x132eced1]
  42339c:	pop    esi
  42339d:	mov    ah,0xd7
  42339f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233a0:	sbb    esi,ebp
  4233a2:	ret    
  4233a3:	sub    dh,ah
  4233a5:	and    DWORD PTR [edi],edi
  4233a7:	sbb    bl,BYTE PTR [ecx]
  4233a9:	xchg   DWORD PTR [edi],esi
  4233ab:	xchg   ebx,eax
  4233ac:	fs into 
  4233ae:	xchg   ebp,eax
  4233af:	fld    st(2)
  4233b1:	mov    ds:0xf51dc5d,eax
  4233b6:	cmp    cl,BYTE PTR [ebx+0x7d64ea86]
  4233bc:	dec    ebx
  4233bd:	loope  0x4233f1
  4233bf:	cs add eax,0x759656e0
  4233c5:	scas   al,BYTE PTR es:[edi]
  4233c6:	(bad)  
  4233c7:	iret   
  4233c8:	xor    eax,0xc24443f8
  4233cd:	xchg   ebx,eax
  4233ce:	dec    eax
  4233cf:	mov    dl,0x79
  4233d1:	or     al,0x44
  4233d3:	mov    edi,0xf3165873
  4233d8:	(bad)  
  4233da:	arpl   WORD PTR [ebp-0x6f590464],bx
  4233e0:	lds    ebp,FWORD PTR es:[eax+eiz*8]
  4233e4:	or     ah,BYTE PTR [edi]
  4233e6:	or     eax,0xd932c5d3
  4233eb:	mov    ds:0xaeef1d7b,eax
  4233f0:	dec    eax
  4233f1:	std    
  4233f2:	sti    
  4233f3:	xlat   BYTE PTR ds:[ebx]
  4233f4:	sbb    DWORD PTR [esi+0x13],ebp
  4233f7:	cld    
  4233f8:	mov    ?,esp
  4233fa:	jnp    0x423430
  4233fc:	mov    eax,0xf9a46273
  423401:	cdq    
  423402:	jle    0x4233d1
  423404:	mov    eax,ds:0xd996acab
  423409:	sbb    DWORD PTR [esi-0x5e],0x49
  42340d:	mov    ecx,ss
  42340f:	daa    
  423410:	sub    DWORD PTR [eax-0x62],edx
  423413:	or     eax,0xce1ef924
  423418:	or     DWORD PTR [ebp+0x7d],esi
  42341b:	jbe    0x4233d1
  42341d:	jge    0x42348b
  42341f:	outs   dx,BYTE PTR ds:[esi]
  423420:	xor    ecx,esp
  423422:	xchg   edx,eax
  423423:	add    ah,dl
  423425:	pop    ecx
  423426:	pop    eax
  423427:	pop    es
  423428:	jnp    0x4234a1
  42342a:	(bad)  
  42342b:	ins    BYTE PTR es:[edi],dx
  42342c:	test   al,0x86
  42342e:	lea    esp,[esi-0x7b406ba5]
  423434:	test   BYTE PTR [ecx],al
  423436:	(bad)  
  423437:	sahf   
  423438:	jge    0x423426
  42343a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42343b:	adc    DWORD PTR [edi-0x13],edx
  42343e:	test   eax,0xf960aa1b
  423443:	inc    edi
  423444:	sbb    al,0xa9
  423446:	pop    ecx
  423447:	jns    0x4233ea
  423449:	adc    eax,0x8e67735c
  42344e:	std    
  42344f:	and    BYTE PTR [ecx-0x7f],ah
  423452:	nop
  423453:	sbb    eax,0xeda1807e
  423458:	mov    ebx,0x36eb562f
  42345d:	adc    eax,0x6694d3b5
  423462:	sub    ch,BYTE PTR [ecx+0x36]
  423465:	fcmovnb st,st(5)
  423467:	inc    ebp
  423468:	into   
  423469:	mov    dl,0x53
  42346b:	ret    0x38e5
  42346e:	or     DWORD PTR [edx+ebx*2-0x3007894f],0xbe680c9c
  423479:	pop    ss
  42347a:	pop    ds
  42347b:	pop    ebp
  42347c:	dec    esp
  42347d:	or     al,0x1c
  42347f:	mov    bh,0xc9
  423481:	test   DWORD PTR [ecx+ecx*4+0x229f6098],0x3007f89d
  42348c:	aas    
  42348d:	and    BYTE PTR [esi+0x1d],ah
  423490:	call   0xde43:0xefbc6f1a
  423497:	push   ss
  423498:	stos   BYTE PTR es:[edi],al
  423499:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42349b:	pop    ss
  42349c:	pop    eax
  42349d:	xor    al,BYTE PTR [edi]
  42349f:	shr    bh,cl
  4234a1:	inc    edi
  4234a2:	loope  0x4234fa
  4234a4:	xor    al,0xd0
  4234a6:	jbe    0x42349a
  4234a8:	xor    BYTE PTR [edx+0x742ecfc4],bh
  4234ae:	lea    ebp,[ebx]
  4234b0:	mov    DWORD PTR [edi],ebx
  4234b2:	outs   dx,DWORD PTR ds:[esi]
  4234b3:	adc    DWORD PTR [edx+edx*4-0x2e417c03],0x72
  4234bb:	inc    edx
  4234bc:	into   
  4234bd:	push   0xedb3c429
  4234c2:	dec    ecx
  4234c3:	int    0xdf
  4234c5:	sub    al,dl
  4234c7:	jno    0x42347e
  4234c9:	shr    BYTE PTR [ebp+0x25b182e2],1
  4234cf:	xchg   DWORD PTR [ebx-0x46],eax
  4234d2:	arpl   WORD PTR [ecx],dx
  4234d4:	mov    ebp,0xe0365ab4
  4234d9:	scas   al,BYTE PTR es:[edi]
  4234da:	pop    ds
  4234db:	xor    DWORD PTR [edx+ecx*1-0x6e],0x2a
  4234e0:	fisubr DWORD PTR [edx+0x10741be5]
  4234e6:	xor    ebp,DWORD PTR [ebx]
  4234e8:	mov    bl,0x32
  4234ea:	jecxz  0x423524
  4234ec:	push   ebp
  4234ed:	push   ds
  4234ee:	xchg   ecx,eax
  4234ef:	fild   DWORD PTR [eax+0x7eecc21a]
  4234f5:	adc    ecx,edi
  4234f7:	int    0x30
  4234f9:	inc    esi
  4234fa:	nop
  4234fb:	mov    ebp,0x75a114e
  423500:	sub    bh,BYTE PTR [eax]
  423502:	fisttp QWORD PTR [edi]
  423504:	rol    DWORD PTR [edi-0x2],cl
  423507:	jge    0x42354d
  423509:	out    0xcc,al
  42350b:	xor    ecx,eax
  42350d:	mov    cl,0xd
  42350f:	mov    ch,0xc3
  423511:	xor    ecx,DWORD PTR [ebp+0x48]
  423514:	xlat   BYTE PTR ds:[ebx]
  423515:	adc    dl,bh
  423517:	sbb    DWORD PTR [eax],ebx
  423519:	mov    esi,0x655a9e71
  42351e:	xchg   edi,eax
  42351f:	hlt    
  423520:	sbb    DWORD PTR [ecx],edx
  423522:	imul   edi,DWORD PTR [ebx-0xf],0xc092be54
  423529:	adc    al,0x56
  42352b:	aad    0x5f
  42352d:	jae    0x423505
  42352f:	ja     0x42358a
  423531:	xor    ebp,ecx
  423533:	cdq    
  423534:	cld    
  423535:	inc    ebp
  423536:	shl    BYTE PTR [ebp-0x538b4d99],1
  42353c:	shl    DWORD PTR [ebx+0xa69a9d0],1
  423542:	(bad)  
  423543:	out    dx,al
  423544:	adc    eax,0x77d76007
  423549:	dec    ebx
  42354a:	inc    ebp
  42354b:	pop    ebx
  42354c:	inc    esp
  42354d:	iret   
  42354e:	sbb    al,0xde
  423550:	sahf   
  423551:	push   ss
  423552:	or     al,0x78
  423554:	sub    cl,BYTE PTR [edx]
  423556:	sbb    eax,0x6fad5a0b
  42355b:	jmp    0xce6968
  423560:	rcl    DWORD PTR [ebx+0x6fe1d3c2],0xe3
  423567:	aas    
  423568:	bound  ebp,QWORD PTR ds:0x5b1028de
  42356e:	adc    eax,0x68aa27cf
  423573:	jmp    0x4235ee
  423575:	fistp  QWORD PTR [edx+ecx*8-0x2540b257]
  42357c:	inc    esp
  42357d:	cmp    edx,esi
  42357f:	cld    
  423580:	jmp    0xe030e410
  423585:	cmp    DWORD PTR [edx+0x1335c41b],ebp
  42358b:	pop    ebx
  42358c:	cld    
  42358d:	xchg   ecx,eax
  42358e:	xor    BYTE PTR [esi-0x6],0x38
  423592:	cmp    DWORD PTR [eax+eax*2],ebp
  423595:	loopne 0x423519
  423597:	lods   eax,DWORD PTR ds:[esi]
  423598:	mov    al,ds:0x5f27da7c
  42359d:	mov    dh,0x3d
  42359f:	jg     0x4235bd
  4235a1:	lock xchg BYTE PTR [ecx-0x38],dl
  4235a5:	pop    ecx
  4235a6:	ja     0x4235dc
  4235a8:	add    eax,0xbbf578ed
  4235ad:	jmp    0xf668c99c
  4235b2:	sti    
  4235b3:	dec    edx
  4235b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235b5:	pop    es
  4235b6:	ja     0x4235a0
  4235b8:	mov    ah,0x33
  4235ba:	pop    ss
  4235bb:	add    edi,edi
  4235bd:	call   0xd0f1:0x3a924693
  4235c4:	fdivr  QWORD PTR [eax+0x1230ef7d]
  4235ca:	out    0x2,al
  4235cc:	jb     0x42355b
  4235ce:	aad    0x3b
  4235d0:	(bad)  
  4235d1:	pop    edi
  4235d2:	cmp    esi,DWORD PTR [eax+0x3f]
  4235d5:	push   es
  4235d6:	call   0x5c00:0xcc9589
  4235dd:	mov    edi,0xdce35063
  4235e2:	jg     0x4235a3
  4235e4:	popa   
  4235e5:	hlt    
  4235e6:	mov    esi,0xa4528d1d
  4235eb:	test   eax,0x1b032
  4235f0:	xchg   BYTE PTR [edx],al
  4235f2:	add    BYTE PTR [eax],al
  4235f4:	sub    dl,BYTE PTR gs:[ecx+0xe]
  4235f8:	inc    esp
  4235f9:	xor    eax,0xc7806651
  4235fe:	scas   eax,DWORD PTR es:[edi]
  4235ff:	out    0x30,eax
  423601:	sub    edx,DWORD PTR [edx+0x272006f]
  423607:	icebp  
  423608:	mov    esi,0x27078f85
  42360d:	ret    
  42360e:	mov    cl,bh
  423610:	call   0x7262:0xfcf50edb
  423617:	imul   esp,DWORD PTR [ebp+0x4339a231],0xe4f1ff58
  423621:	(bad)  
  423622:	es retf 
  423624:	pop    edx
  423625:	push   ss
  423626:	fcmovb st,st(2)
  423628:	cmp    eax,0x2adb2a7
  42362d:	paddw  mm0,mm5
  423630:	punpckldq mm4,DWORD PTR [ecx+0x3da56634]
  423637:	pop    ds
  423638:	inc    edi
  423639:	add    eax,0x529cfe4f
  42363e:	nop
  42363f:	call   0x876c909a
  423644:	jb     0x423680
  423646:	sahf   
  423647:	inc    ebp
  423648:	arpl   di,sp
  42364a:	call   esi
  42364c:	fidiv  DWORD PTR es:[di-0x35ea]
  423652:	dec    ebp
  423653:	dec    edx
  423654:	stc    
  423655:	mov    dl,0xd4
  423657:	and    al,0x5a
  423659:	jl     0x4235ec
  42365b:	mov    DWORD PTR [esi+0x54],ebx
  42365e:	enter  0xa130,0xb7
  423662:	adc    BYTE PTR [ebx-0x4719d76d],bh
  423668:	jne    0x423611
  42366a:	in     eax,0xeb
  42366c:	sub    ah,al
  42366e:	idiv   DWORD PTR [ebp-0x2890c14c]
  423674:	or     eax,0x5f8b6bc4
  423679:	cmp    bl,BYTE PTR [ecx+0x63]
  42367c:	in     eax,0xba
  42367e:	ficomp DWORD PTR [edx]
  423680:	cmp    ebx,DWORD PTR [edi-0x29220960]
  423686:	call   0xac35:0xd691d38b
  42368d:	sar    DWORD PTR cs:0x955d8f27,0xe1
  423695:	adc    al,0xa6
  423697:	xlat   BYTE PTR ds:[ebx]
  423698:	inc    ebx
  423699:	adc    al,0x49
  42369b:	mov    ah,0xda
  42369d:	push   eax
  42369e:	or     esi,DWORD PTR [eax]
  4236a0:	and    DWORD PTR [ecx+0x21],0xffffffbb
  4236a4:	mov    eax,0x25b012b
  4236a9:	push   edx
  4236aa:	pop    eax
  4236ab:	das    
  4236ac:	lea    eax,[eax+0xa00e8d7]
  4236b2:	icebp  
  4236b3:	fbstp  TBYTE PTR [edx+0x5d]
  4236b6:	cld    
  4236b7:	or     dl,BYTE PTR [edi]
  4236b9:	fmul   DWORD PTR [edi+0x31b1bf93]
  4236bf:	stos   DWORD PTR es:[edi],eax
  4236c0:	pop    ss
  4236c1:	push   esi
  4236c2:	lods   al,BYTE PTR ds:[esi]
  4236c3:	(bad)  
  4236c4:	hlt    
  4236c5:	loope  0x4236f8
  4236c7:	push   es
  4236c8:	in     eax,0x30
  4236ca:	jl     0x4236fa
  4236cc:	imul   ebx,ebp,0x7d
  4236cf:	dec    ebp
  4236d0:	outs   dx,BYTE PTR ds:[esi]
  4236d1:	ins    BYTE PTR es:[edi],dx
  4236d2:	mov    edi,DWORD PTR [edx-0x2e]
  4236d5:	arpl   dx,dx
  4236d7:	xchg   ebx,eax
  4236d8:	xor    esi,ecx
  4236da:	dec    ebx
  4236db:	test   eax,0xdc41cd91
  4236e0:	jp     0x4236a8
  4236e2:	sub    eax,0x470ff234
  4236e7:	mov    dh,0xb
  4236e9:	xor    eax,DWORD PTR [ebp-0x7c0e3b7]
  4236ef:	pop    eax
  4236f0:	sbb    al,0xc7
  4236f2:	enter  0x2188,0x44
  4236f6:	cmp    ch,ch
  4236f8:	inc    ebx
  4236f9:	jp     0x423767
  4236fb:	popf   
  4236fc:	sbb    esp,esp
  4236fe:	test   al,0x9d
  423700:	mov    esi,0x66471043
  423705:	pusha  
  423706:	lock mov ah,0xc1
  423709:	or     bl,bh
  42370b:	cmp    edi,DWORD PTR [ecx-0x332bf4f2]
  423711:	inc    edx
  423712:	dec    ebx
  423713:	lahf   
  423714:	or     al,0x75
  423716:	inc    ebp
  423717:	adc    BYTE PTR [esi+0x18],dl
  42371a:	mov    edx,0xb2a2e257
  42371f:	jg     0x4236fb
  423721:	inc    esp
  423722:	sbb    bl,BYTE PTR [ebp+0x12]
  423725:	push   esp
  423726:	or     al,0x10
  423728:	dec    edx
  423729:	iret   
  42372a:	cdq    
  42372b:	fidivr DWORD PTR [ecx+0x53fecb4d]
  423731:	scas   al,BYTE PTR es:[edi]
  423732:	sar    BYTE PTR [edx],1
  423734:	push   esp
  423735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423736:	leave  
  423737:	ret    0x58ee
  42373a:	jnp    0x4237a5
  42373c:	clc    
  42373d:	retf   0xf674
  423740:	xor    esi,ebp
  423742:	scas   al,BYTE PTR es:[edi]
  423743:	imul   eax,DWORD PTR [eax-0xb],0xb8bc70d2
  42374a:	test   esp,esi
  42374c:	out    0x29,eax
  42374e:	leave  
  42374f:	imul   edi,ecx,0xde832d2c
  423755:	sub    BYTE PTR [edi+0x1fa62e49],bl
  42375b:	push   edx
  42375c:	sahf   
  42375d:	cwde   
  42375e:	stc    
  42375f:	call   0x9994:0xaa684606
  423766:	sbb    DWORD PTR [esi-0x45a1bc53],0x346f61b
  423770:	pop    edx
  423771:	imul   ecx,DWORD PTR [esi-0x5ee09be4],0x40
  423778:	fdiv   DWORD PTR [eax+0x5b]
  42377b:	addr16 in eax,0x79
  42377e:	inc    edx
  42377f:	mov    ch,0x8a
  423781:	cmp    al,0x56
  423783:	mov    edi,0x1f9d3d18
  423788:	fs (bad) 
  42378a:	(bad)  
  42378c:	mov    ah,0x88
  42378e:	fnstsw WORD PTR [edi-0x5a7a8c]
  423794:	pop    esi
  423795:	popa   
  423796:	jg     0x4237b9
  423798:	call   0x1e03:0xdb31caed
  42379f:	inc    ecx
  4237a0:	mov    cs,ebp
  4237a2:	es mov ah,0xfd
  4237a5:	repnz repz fistp WORD PTR [eax+esi*4+0x769dc252]
  4237ae:	xchg   DWORD PTR [edi+ebx*4+0xf060b70],ecx
  4237b5:	pop    ebx
  4237b6:	mov    edi,eax
  4237b8:	rcl    dh,1
  4237ba:	mov    eax,0x22c743fb
  4237bf:	iret   
  4237c0:	inc    ebx
  4237c1:	out    0x64,eax
  4237c3:	cmp    al,0x49
  4237c5:	add    eax,0xbd2f2fb6
  4237ca:	test   eax,0x24cf35b9
  4237cf:	jle    0x42378a
  4237d1:	xchg   ebp,eax
  4237d2:	fwait
  4237d3:	xchg   DWORD PTR [ebx-0x44eecbb8],edi
  4237d9:	push   ebp
  4237da:	xor    al,0x70
  4237dc:	mov    al,0x6f
  4237de:	xor    ebx,esp
  4237e0:	std    
  4237e1:	outs   dx,BYTE PTR ds:[esi]
  4237e2:	test   dl,cl
  4237e4:	les    ebp,FWORD PTR [edx]
  4237e6:	inc    ebp
  4237e7:	jb     0x42381d
  4237e9:	ins    DWORD PTR es:[edi],dx
  4237ea:	add    dh,BYTE PTR [ecx+ebp*1+0x29]
  4237ee:	mov    edi,0xc0710ad6
  4237f3:	int3   
  4237f4:	test   DWORD PTR [edx],ebx
  4237f6:	mov    edi,0x15d2cc60
  4237fb:	iret   
  4237fc:	and    ch,dh
  4237fe:	add    esp,DWORD PTR [ebp+0x60]
  423801:	jg     0x4237a6
  423803:	jl     0x423830
  423805:	mov    ch,BYTE PTR [ebx-0x7db83db6]
  42380b:	mov    ds:0x67b73b3d,eax
  423810:	jl     0x42381d
  423812:	js     0x4237df
  423814:	sub    DWORD PTR [ecx],0xf6b1e8fe
  42381a:	enter  0x44d,0xb9
  42381e:	adc    eax,DWORD PTR [ebx]
  423820:	rcl    DWORD PTR [ecx-0x5b69bed9],1
  423826:	fidiv  DWORD PTR [ebp-0x3c536e7f]
  42382c:	nop
  42382d:	cmp    ecx,edi
  42382f:	inc    esi
  423830:	loop   0x423821
  423832:	(bad)  [eax+ebp*4]
  423835:	mov    ds:0xa723f2dd,al
  42383a:	and    al,0x76
  42383c:	jecxz  0x4237d9
  42383e:	repnz fwait
  423840:	ret    0xe599
  423843:	adc    DWORD PTR [ecx-0x743cba2e],edi
  423849:	sbb    dh,cl
  42384b:	loopne 0x42382e
  42384d:	rcr    DWORD PTR [esi-0xd1a01a5],1
  423853:	add    DWORD PTR [ebx],ebp
  423855:	in     eax,dx
  423856:	jle    0x4237fc
  423858:	add    dl,dh
  42385a:	aas    
  42385b:	sbb    eax,ebx
  42385d:	cmp    al,0xa4
  42385f:	aaa    
  423860:	test   DWORD PTR [eax+0x52],ecx
  423863:	jp     0x423851
  423865:	shr    edx,1
  423867:	xchg   BYTE PTR [edi],ah
  423869:	pop    edx
  42386a:	gs push ebx
  42386c:	pop    eax
  42386d:	cmp    ebp,DWORD PTR [edx+0x182a39c5]
  423873:	adc    al,0x5d
  423875:	sub    ecx,ebp
  423877:	mov    cl,0x24
  423879:	rol    BYTE PTR [eax],1
  42387b:	add    BYTE PTR [ebx+0x55],al
  42387e:	pusha  
  42387f:	(bad)  
  423880:	jbe    0x423841
  423882:	out    dx,eax
  423883:	fnstsw WORD PTR [edx-0x4bbca93d]
  423889:	xor    eax,0xb2b83078
  42388e:	add    DWORD PTR [eax],eax
  423890:	xchg   BYTE PTR [edx],al
  423892:	add    BYTE PTR [eax],al
  423894:	mov    ecx,0x1ef65505
  423899:	sub    eax,0xb00278ee
  42389e:	mov    al,0x86
  4238a0:	jp     0x423865
  4238a2:	xchg   ebp,edi
  4238a4:	test   BYTE PTR [ecx-0x3b],al
  4238a7:	sub    DWORD PTR [esi+esi*4],edx
  4238aa:	inc    eax
  4238ab:	and    BYTE PTR [edi+0x26],0xe1
  4238af:	pop    esp
  4238b0:	xchg   esp,eax
  4238b1:	pop    eax
  4238b2:	inc    esi
  4238b3:	cmp    al,0xb8
  4238b5:	scas   al,BYTE PTR es:[edi]
  4238b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238b7:	pop    edi
  4238b8:	cmc    
  4238b9:	loopne 0x423869
  4238bb:	out    0xfa,al
  4238bd:	xchg   ebp,eax
  4238be:	or     al,0x21
  4238c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238c1:	(bad)  
  4238c2:	mov    dh,0x4b
  4238c4:	dec    ecx
  4238c5:	loope  0x4238bb
  4238c7:	mov    ah,0xda
  4238c9:	fisub  DWORD PTR [edi-0x10417ec2]
  4238cf:	or     DWORD PTR [esi+0x7e3b96d2],esi
  4238d5:	out    dx,al
  4238d6:	jmp    0x4238b6
  4238d8:	bound  esp,QWORD PTR [esp+eiz*4-0x5]
  4238dc:	ds xchg esi,eax
  4238de:	mov    ecx,0x3549f2d5
  4238e3:	and    ecx,0x841d3e5f
  4238e9:	fisub  DWORD PTR [edx+0x7d]
  4238ec:	aas    
  4238ed:	jnp    0x4238f3
  4238ef:	mov    gs,WORD PTR [edx-0x292a43cb]
  4238f5:	les    ecx,FWORD PTR [ebp-0x54]
  4238f8:	test   BYTE PTR [eax+edx*1-0x5b],0x96
  4238fd:	cs xchg ecx,eax
  4238ff:	aaa    
  423900:	or     edx,DWORD PTR ds:0x883e3ec5
  423906:	clc    
  423907:	lds    esi,FWORD PTR [edx-0x8d20d49]
  42390d:	cld    
  42390e:	retf   0x2bcd
  423911:	jg     0x42391f
  423913:	xchg   edi,eax
  423914:	cdq    
  423915:	cmp    esp,0x7650f068
  42391b:	inc    edx
  42391c:	das    
  42391d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42391e:	or     eax,0xddabe5fc
  423923:	and    al,0xfd
  423925:	inc    ebx
  423926:	call   0x47c8:0xc71bb7dc
  42392d:	xchg   esi,eax
  42392e:	or     BYTE PTR [edi],bh
  423930:	sub    BYTE PTR [esi],bl
  423932:	xchg   BYTE PTR [ebx-0x57],al
  423935:	jp     0x423976
  423937:	cmp    DWORD PTR [ecx+0x6e],esi
  42393a:	push   edi
  42393b:	loope  0x42392c
  42393d:	and    al,0x3f
  42393f:	add    DWORD PTR [edi+0x4a],ebp
  423942:	sub    eax,0xb9d25fa
  423947:	pop    edx
  423948:	loop   0x423984
  42394a:	cmc    
  42394b:	adc    eax,0xe90834df
  423950:	push   0x82d74889
  423955:	push   esp
  423956:	jnp    0x423973
  423958:	mov    esp,0xec97cf5d
  42395d:	rol    DWORD PTR [eax+0x52969996],1
  423963:	fidiv  DWORD PTR [edx*4-0x10f41a12]
  42396a:	pop    edi
  42396b:	inc    ecx
  42396c:	or     cl,ah
  42396e:	xor    dl,BYTE PTR [ebx]
  423970:	(bad)  
  423971:	mov    esp,0x9ca88a61
  423976:	push   es
  423977:	(bad)  
  423978:	pop    ss
  423979:	mov    DWORD PTR [ebp-0x2d9f6416],ebx
  42397f:	sub    bh,BYTE PTR [esi+0x3263f4cd]
  423985:	xlat   BYTE PTR ds:[ebx]
  423986:	ficomp DWORD PTR [esi-0x6c41b392]
  42398c:	lds    esi,FWORD PTR [eax-0x21]
  42398f:	push   edx
  423990:	daa    
  423991:	sub    BYTE PTR [ebx-0x541cabd6],bl
  423997:	jg     0x423948
  423999:	jb     0x42392f
  42399b:	mov    ebp,0x1d1815c0
  4239a0:	or     al,0xcf
  4239a2:	cmp    eax,0xa68e1fab
  4239a7:	mov    ds:0xd068a108,al
  4239ac:	std    
  4239ad:	popa   
  4239ae:	jp     0x42395c
  4239b0:	hlt    
  4239b1:	xchg   esp,eax
  4239b2:	push   ss
  4239b3:	into   
  4239b4:	test   cl,cl
  4239b6:	sbb    al,0xf6
  4239b8:	sub    bl,BYTE PTR [eax]
  4239ba:	sbb    al,0xa6
  4239bc:	or     eax,0xb54a35fb
  4239c1:	dec    DWORD PTR [esi-0xf500bbd]
  4239c7:	fild   QWORD PTR [edx]
  4239c9:	sahf   
  4239ca:	fsub   st(7),st
  4239cc:	push   ss
  4239cd:	shr    BYTE PTR [esi+ebp*2-0x38],cl
  4239d1:	and    dh,BYTE PTR [esi-0x80]
  4239d4:	jl     0x4239c6
  4239d6:	sub    eax,0xd913fb0f
  4239db:	xchg   edi,eax
  4239dc:	jle    0x423975
  4239de:	fbld   TBYTE PTR [ecx+0x6d]
  4239e1:	xchg   ecx,eax
  4239e2:	push   esi
  4239e3:	xor    BYTE PTR [edx],bh
  4239e5:	add    bl,BYTE PTR [edx]
  4239e7:	stos   DWORD PTR es:[edi],eax
  4239e8:	add    al,cl
  4239ea:	test   eax,0x82c3e46d
  4239ef:	out    0x7,eax
  4239f1:	jmp    0x423a4e
  4239f3:	jp     0x423a3f
  4239f5:	jmp    0x423a73
  4239f7:	dec    edx
  4239f8:	je     0x423998
  4239fa:	pop    edi
  4239fb:	sti    
  4239fc:	les    ebp,FWORD PTR [eax-0x6f7e00c]
  423a02:	and    BYTE PTR [ebp+0x1a75b913],0xc3
  423a09:	sbb    DWORD PTR [edx-0x9],ebp
  423a0c:	mov    ds:0x323cff0,al
  423a11:	adc    DWORD PTR [eax+0x512a1103],ecx
  423a17:	stc    
  423a18:	test   BYTE PTR [edi+0x583f20ff],dl
  423a1e:	sbb    BYTE PTR [edx],al
  423a20:	or     cl,0x20
  423a23:	xor    BYTE PTR ds:0x35091b5d,0xd1
  423a2a:	ins    BYTE PTR es:[edi],dx
  423a2b:	add    esp,DWORD PTR [edi-0xe80f802]
  423a31:	and    eax,0xf405c97f
  423a36:	repnz or DWORD PTR [edx+0x61],esp
  423a3a:	add    bl,BYTE PTR [ebp+0x3c]
  423a3d:	dec    esi
  423a3e:	jp     0x423a68
  423a40:	ins    DWORD PTR es:[edi],dx
  423a41:	test   BYTE PTR [esi+0x26],bh
  423a44:	xor    BYTE PTR [ebx+edx*1],0xd1
  423a48:	les    eax,FWORD PTR [esi+0x60]
  423a4b:	mov    ah,BYTE PTR [eax+0x3084d322]
  423a51:	js     0x423a00
  423a53:	movlps QWORD PTR ds:0x7bbd9501,xmm3
  423a5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a5b:	and    al,0xf5
  423a5d:	in     eax,0x9f
  423a5f:	clc    
  423a60:	push   ss
  423a61:	and    DWORD PTR [edi-0x6f75d65],edx
  423a67:	dec    edx
  423a68:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  423a6a:	aaa    
  423a6b:	and    ebp,ebx
  423a6d:	mov    edi,0xdb02cd9c
  423a72:	add    DWORD PTR [ecx-0x6e1a5a54],0x0
  423a79:	jge    0x423a30
  423a7b:	dec    edx
  423a7c:	(bad)  
  423a7e:	mov    ds:0x8a16c50,al
  423a83:	pslld  mm0,QWORD PTR [edx]
  423a86:	sbb    eax,DWORD PTR ds:0x4549984b
  423a8c:	ins    DWORD PTR es:[edi],dx
  423a8d:	mov    esi,0x4d436afd
  423a92:	jb     0x423a5d
  423a94:	div    DWORD PTR [edi-0x2825cbf5]
  423a9a:	dec    edi
  423a9b:	push   ecx
  423a9c:	ror    DWORD PTR [ebx+0x79],1
  423a9f:	loopne 0x423b14
  423aa1:	aad    0x8a
  423aa3:	push   0xffffff9f
  423aa5:	jecxz  0x423a5c
  423aa7:	mov    ecx,0xb9c55ac5
  423aac:	mov    ds,WORD PTR [edx-0x794e6698]
  423ab2:	dec    ebx
  423ab3:	push   edi
  423ab4:	push   edx
  423ab5:	mov    ds:0x10c29cbd,eax
  423aba:	lds    esi,FWORD PTR [edi]
  423abc:	data16 hlt 
  423abe:	jle    0x423a8d
  423ac0:	ins    DWORD PTR es:[edi],dx
  423ac1:	shl    bl,cl
  423ac3:	loop   0x423a63
  423ac5:	jnp    0x423aa7
  423ac7:	jbe    0x423a84
  423ac9:	inc    ebp
  423aca:	push   0x7f
  423acc:	xchg   ebx,eax
  423acd:	add    edi,DWORD PTR [ecx+0x4a7c0e20]
  423ad3:	push   ds
  423ad4:	psraw  mm7,QWORD PTR [ecx-0xed83728]
  423adb:	mov    ebx,0x651993d6
  423ae0:	dec    esi
  423ae1:	xor    DWORD PTR [edi],eax
  423ae3:	push   ss
  423ae4:	jne    0x423ab1
  423ae6:	push   cs
  423ae7:	xchg   ebp,eax
  423ae8:	in     al,dx
  423ae9:	fcompp 
  423aeb:	icebp  
  423aec:	leave  
  423aed:	jnp    0x423abc
  423aef:	and    BYTE PTR [eax],0x3b
  423af2:	js     0x423a94
  423af4:	pop    ebx
  423af5:	mov    es,edx
  423af7:	pop    ecx
  423af8:	pop    ds
  423af9:	(bad)  
  423afa:	sbb    ebp,ebp
  423afc:	pop    ds
  423afd:	pop    es
  423afe:	pshufw mm0,QWORD PTR [ecx-0x29],0x8b
  423b03:	fsubr  st,st(6)
  423b05:	or     cl,BYTE PTR [ebp+0x2e]
  423b08:	mov    ebx,ds
  423b0a:	fnstcw WORD PTR [ecx-0x33]
  423b0d:	hlt    
  423b0e:	sub    ah,BYTE PTR [edi-0x6cff3ae1]
  423b14:	mov    edx,0x23558a2b
  423b19:	test   al,0x0
  423b1b:	add    BYTE PTR [edi+0x2d],dl
  423b1e:	pop    es
  423b1f:	call   0x55de:0xeddfba7f
  423b26:	inc    ecx
  423b27:	adc    al,0x2b
  423b29:	mov    ds:0xb53ec91c,eax
  423b2e:	add    DWORD PTR [eax],eax
  423b30:	xchg   BYTE PTR [edx],al
  423b32:	add    BYTE PTR [eax],al
  423b34:	popa   
  423b35:	test   edx,0x787adfbc
  423b3b:	cmp    eax,DWORD PTR [ebp+0x76]
  423b3e:	nop
  423b3f:	lods   al,BYTE PTR ds:[esi]
  423b40:	adc    bl,BYTE PTR [eax+0x1e]
  423b43:	jne    0x423ae5
  423b45:	jp     0x423b3a
  423b47:	push   edx
  423b48:	jns    0x423b33
  423b4a:	leave  
  423b4b:	das    
  423b4c:	lods   eax,DWORD PTR ds:[esi]
  423b4d:	dec    eax
  423b4e:	into   
  423b4f:	mov    esi,0x37f1ebbe
  423b54:	push   0xaa9fad29
  423b59:	ret    
  423b5a:	(bad)  
  423b5b:	xchg   BYTE PTR [ebx-0x4b4cbb6c],dl
  423b61:	lods   eax,DWORD PTR ds:[esi]
  423b62:	xor    BYTE PTR [esi+0x21],dl
  423b65:	fild   DWORD PTR [ebx+eax*2-0xb]
  423b69:	nop
  423b6a:	sti    
  423b6b:	dec    ecx
  423b6c:	or     eax,DWORD PTR [eax]
  423b6e:	idiv   BYTE PTR [edx]
  423b70:	jg     0x423b67
  423b72:	fld1   
  423b74:	test   DWORD PTR [ebx-0x4d],ebx
  423b77:	add    al,0x81
  423b79:	popa   
  423b7a:	push   ecx
  423b7b:	sbb    BYTE PTR [edx],0x2b
  423b7e:	idiv   BYTE PTR [edi-0x44fa863a]
  423b84:	cs push ebx
  423b86:	ins    BYTE PTR es:[edi],dx
  423b87:	in     al,dx
  423b88:	stc    
  423b89:	mov    cl,0xf8
  423b8b:	dec    edi
  423b8c:	sbb    BYTE PTR [ebx],ah
  423b8e:	inc    ebp
  423b8f:	rcl    DWORD PTR [ebp+0x38b0d1fd],0x6e
  423b96:	xchg   ecx,eax
  423b97:	ret    0x42f
  423b9a:	in     al,0xa2
  423b9c:	mov    al,ds:0x7f5656d3
  423ba1:	ret    
  423ba2:	xchg   dx,ax
  423ba4:	retf   0x3042
  423ba7:	add    eax,0x8aa7fb17
  423bac:	cli    
  423bad:	and    al,BYTE PTR [edx+0x351ca43b]
  423bb3:	hlt    
  423bb4:	pop    ebp
  423bb5:	sahf   
  423bb6:	fsubr  st,st(7)
  423bb8:	mov    DWORD PTR [esi+ebx*4],edi
  423bbb:	es jb  0x423c32
  423bbe:	sbb    DWORD PTR [edi+eiz*8+0x68],ebx
  423bc2:	lods   eax,DWORD PTR ds:[esi]
  423bc3:	fwait
  423bc4:	stc    
  423bc5:	mov    ch,0x97
  423bc7:	repz loopne 0x423c01
  423bca:	add    bh,dl
  423bcc:	mov    ebp,esi
  423bce:	(bad)  [edx+edx*2-0x3e]
  423bd2:	xchg   ebp,eax
  423bd3:	cs sbb al,0x55
  423bd6:	arpl   WORD PTR [eax+0x63],bx
  423bd9:	cmp    BYTE PTR [edi],bh
  423bdb:	les    edx,FWORD PTR [edi+esi*2]
  423bde:	dec    edx
  423bdf:	xchg   BYTE PTR [edx+ebx*1+0x5d],dh
  423be3:	(bad)  
  423be4:	(bad)
  423be7:	inc    edx
  423be8:	push   edi
  423be9:	data16 and al,0xa3
  423bec:	xor    edx,ebp
  423bee:	cli    
  423bef:	and    ebp,0x6c
  423bf2:	(bad)  
  423bf3:	adc    dh,BYTE PTR [ebx]
  423bf5:	xchg   edx,eax
  423bf6:	pop    ss
  423bf7:	das    
  423bf8:	es int3 
  423bfa:	retf   
  423bfb:	push   ecx
  423bfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bfd:	cmc    
  423bfe:	add    DWORD PTR [eax+edx*8-0x626f7f1f],ebp
  423c05:	dec    edi
  423c06:	mov    ds:0x43bf4d58,al
  423c0b:	xchg   BYTE PTR [ebx-0x22],dh
  423c0e:	cli    
  423c0f:	push   es
  423c10:	sbb    bh,BYTE PTR [edx+0x12]
  423c13:	xor    DWORD PTR [esi],esp
  423c15:	push   ebp
  423c16:	fild   QWORD PTR [edx-0x3a6f142b]
  423c1c:	icebp  
  423c1d:	rcr    DWORD PTR ds:0xf3c865d4,cl
  423c23:	(bad)  [ebx]
  423c25:	neg    DWORD PTR [edi]
  423c27:	and    ebx,DWORD PTR [ecx+eax*8+0x6eed6cf]
  423c2e:	ins    BYTE PTR es:[edi],dx
  423c2f:	lods   al,BYTE PTR ds:[esi]
  423c30:	lods   al,BYTE PTR ds:[esi]
  423c31:	stos   DWORD PTR es:[edi],eax
  423c32:	pop    edi
  423c33:	bound  ecx,QWORD PTR [edx-0x708fd63d]
  423c39:	dec    eax
  423c3a:	mov    cl,bh
  423c3c:	cmp    al,0x6e
  423c3e:	inc    edx
  423c3f:	nop
  423c40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c41:	add    al,0x50
  423c43:	clc    
  423c44:	cld    
  423c45:	and    bl,ch
  423c47:	ficom  DWORD PTR [edx-0x16ddb2a6]
  423c4d:	cmp    eax,0x3cc1e423
  423c52:	push   eax
  423c53:	mov    bh,0xce
  423c55:	xor    eax,0x3dc0f538
  423c5a:	fdivr  DWORD PTR [ebp-0x53ebd33f]
  423c60:	nop
  423c61:	adc    al,0x26
  423c63:	or     dl,BYTE PTR [edx]
  423c65:	stos   DWORD PTR es:[edi],eax
  423c66:	mov    esi,0xce0be57a
  423c6b:	push   es
  423c6c:	inc    ebx
  423c6d:	mov    ebx,DWORD PTR [ebx]
  423c6f:	xor    ch,BYTE PTR [edi-0xba70aff]
  423c75:	dec    ebx
  423c76:	sahf   
  423c77:	pop    edx
  423c78:	ins    DWORD PTR es:[edi],dx
  423c79:	stos   BYTE PTR es:[edi],al
  423c7a:	addr16 pop esi
  423c7c:	mov    eax,0xa2137eb0
  423c81:	inc    eax
  423c82:	ret    
  423c83:	nop
  423c84:	xchg   edx,eax
  423c85:	rcr    DWORD PTR [eax],1
  423c87:	adc    al,0xc4
  423c89:	mov    dl,0x5b
  423c8b:	(bad)  
  423c8c:	ds ins BYTE PTR es:[edi],dx
  423c8e:	test   eax,esp
  423c90:	jle    0x423c5f
  423c92:	imul   edx,esp,0xffffffd2
  423c95:	imul   ebx,DWORD PTR [eax],0x8ce120b2
  423c9b:	mov    edx,0x7000538d
  423ca0:	sahf   
  423ca1:	imul   ecx,DWORD PTR [esi+ecx*4-0x5],0x38
  423ca6:	adc    DWORD PTR [ebx+edi*1],ebx
  423ca9:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  423cab:	inc    ecx
  423cac:	ins    BYTE PTR es:[edi],dx
  423cad:	mov    BYTE PTR [edx],al
  423caf:	das    
  423cb0:	popf   
  423cb1:	cmp    BYTE PTR [ecx+0x457e3ad3],ch
  423cb7:	xor    eax,0xc1381eb1
  423cbc:	add    DWORD PTR [ecx+0x40ee79ec],esp
  423cc2:	add    edx,eax
  423cc4:	pushf  
  423cc5:	push   eax
  423cc6:	and    edi,ebx
  423cc8:	inc    edi
  423cc9:	pop    ebx
  423cca:	ror    DWORD PTR [edi-0x6c],cl
  423ccd:	lods   al,BYTE PTR ds:[esi]
  423cce:	pop    ds
  423ccf:	mov    al,ds:0x65830026
  423cd4:	ror    DWORD PTR [edx-0x701a443c],1
  423cda:	imul   esp,ebx,0xffffffc6
  423cdd:	push   esi
  423cde:	dec    ecx
  423cdf:	xchg   bh,cl
  423ce1:	inc    eax
  423ce2:	sub    al,0x1b
  423ce4:	dec    ebp
  423ce5:	xor    al,0x42
  423ce7:	jp     0x423cd8
  423ce9:	(bad)  
  423cea:	jl     0x423d0d
  423cec:	pop    edx
  423ced:	aaa    
  423cee:	call   0xd08d61b2
  423cf3:	loop   0x423cd1
  423cf5:	push   esi
  423cf6:	xor    cl,BYTE PTR [esp+edx*2-0x26]
  423cfa:	outs   dx,DWORD PTR ds:[esi]
  423cfb:	cmp    esi,DWORD PTR [eax+0x479d0c47]
  423d01:	lea    ebx,[edx-0x23]
  423d04:	ret    0xd8f3
  423d07:	xchg   DWORD PTR [ecx+ebx*2-0x72],edx
  423d0b:	fdivr  QWORD PTR [edi+ebp*4]
  423d0e:	jnp    0x423cff
  423d10:	xchg   ebp,eax
  423d11:	ds loopne 0x423ce8
  423d14:	xor    ecx,DWORD PTR [ebx]
  423d16:	jmp    0x423d0f
  423d18:	dec    esp
  423d19:	jno    0x423cbc
  423d1b:	inc    ebx
  423d1c:	xor    esi,esp
  423d1e:	sbb    DWORD PTR [edx+0x7f4e42f0],esp
  423d24:	cli    
  423d25:	xcrypt-cfb (bad)
  423d26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d27:	and    dl,BYTE PTR [edi+0x5c]
  423d2a:	xchg   ebp,eax
  423d2b:	in     al,dx
  423d2c:	sti    
  423d2d:	jb     0x423cb8
  423d2f:	and    eax,0x822a77f4
  423d34:	mov    bl,0x70
  423d36:	jle    0x423ce9
  423d38:	into   
  423d39:	sub    ax,0x6bdc
  423d3d:	shr    BYTE PTR ds:0x939af375,1
  423d43:	rcl    BYTE PTR [ecx],0x59
  423d46:	call   0x8841:0x4155c87b
  423d4d:	mov    ah,BYTE PTR [ebx]
  423d4f:	inc    eax
  423d50:	imul   esp,DWORD PTR [ecx+0x3b],0xfffffffc
  423d54:	mov    ss,edx
  423d56:	mov    dl,0x1
  423d58:	test   BYTE PTR [ebx+0x12f87210],bh
  423d5e:	(bad)  
  423d5f:	fucomp st(2)
  423d61:	adc    BYTE PTR [esi+0x7cd326df],dl
  423d67:	ins    DWORD PTR es:[edi],dx
  423d68:	jns    0x423d98
  423d6a:	stos   BYTE PTR es:[edi],al
  423d6b:	div    DWORD PTR [edx-0x50]
  423d6e:	stos   BYTE PTR es:[edi],al
  423d6f:	leave  
  423d70:	sub    ecx,DWORD PTR [ecx+0x54ba4ab6]
  423d76:	add    eax,0x43b8c910
  423d7b:	enter  0xc43c,0x2d
  423d7f:	nop
  423d80:	mov    ecx,0x245f305d
  423d85:	mov    esp,0x9a094d96
  423d8a:	sbb    eax,0x7f80aa59
  423d8f:	es mov edx,0xcf1d1d99
  423d95:	mov    bl,0xc9
  423d97:	fwait
  423d98:	int    0x23
  423d9a:	lds    edx,FWORD PTR [edi]
  423d9c:	mov    dl,0xbe
  423d9e:	loop   0x423ddd
  423da0:	add    eax,0x472da304
  423da5:	outs   dx,DWORD PTR ds:[esi]
  423da6:	push   es
  423da7:	inc    ebx
  423da8:	mov    ds:0xa503d7de,eax
  423dad:	mov    al,0xe6
  423daf:	ds fldlg2 
  423db2:	jmp    DWORD PTR [esi]
  423db4:	pop    esi
  423db5:	xor    BYTE PTR [esi+0x443bdb],bl
  423dbb:	add    BYTE PTR [edx+ebp*1+0x2b],ch
  423dbf:	outs   dx,DWORD PTR es:[esi]
  423dc1:	daa    
  423dc2:	ins    DWORD PTR es:[edi],dx
  423dc3:	push   0xfffffff2
  423dc5:	push   esp
  423dc6:	stos   DWORD PTR es:[edi],eax
  423dc7:	adc    ebp,eax
  423dc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423dca:	add    DWORD PTR [esi-0x3c],esp
  423dcd:	mov    bh,0x1
  423dcf:	add    BYTE PTR [esi+0x78000002],al
  423dd5:	pop    esi
  423dd6:	push   edi
  423dd7:	lods   eax,DWORD PTR ds:[esi]
  423dd8:	jo     0x423e1e
  423dda:	shl    BYTE PTR [ebp+0x39],1
  423ddd:	jbe    0x423db3
  423ddf:	call   0x4300:0xddb5d347
  423de6:	je     0x423e04
  423de8:	aam    0xc
  423dea:	xor    BYTE PTR [ebx-0x50f868b4],ch
  423df0:	jmp    0x423d7c
  423df2:	popf   
  423df3:	jae    0x423e1c
  423df5:	mov    edx,0xa9f7cd4e
  423dfa:	push   cs
  423dfb:	into   
  423dfc:	lds    eax,FWORD PTR [edx+0x8]
  423dff:	inc    edi
  423e00:	popf   
  423e01:	mov    al,0x27
  423e03:	xor    DWORD PTR [ecx+0x169deff6],esi
  423e09:	jg     0x423e48
  423e0b:	test   cl,bh
  423e0d:	je     0x423e65
  423e0f:	test   DWORD PTR [ebp+eiz*1-0x3d],esp
  423e13:	cmp    dl,al
  423e15:	xchg   ecx,eax
  423e16:	sub    edi,DWORD PTR [edi]
  423e18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e19:	shl    BYTE PTR [ecx+ebx*8],1
  423e1c:	jle    0x423de6
  423e1e:	mov    bl,0xa8
  423e20:	int3   
  423e21:	int3   
  423e22:	les    esp,FWORD PTR [ebx+0x698ded0c]
  423e28:	int    0x22
  423e2a:	pop    esp
  423e2b:	mov    cl,BYTE PTR [ebp-0x1a]
  423e2e:	or     edi,edx
  423e30:	xchg   edi,eax
  423e31:	(bad)  
  423e32:	rcl    DWORD PTR [esi-0x7c],cl
  423e35:	jge    0x423e38
  423e37:	lds    ebp,FWORD PTR [esi-0xae81557]
  423e3d:	(bad)  
  423e3f:	hlt    
  423e40:	add    ch,BYTE PTR [ecx-0x7b625f74]
  423e46:	test   al,0xa4
  423e48:	int    0x51
  423e4a:	sti    
  423e4b:	cmp    al,BYTE PTR [ebx+0x48]
  423e4e:	mov    edx,0x843096d3
  423e53:	fld    DWORD PTR [eax+0xf3bf38b]
  423e59:	dec    ebp
  423e5a:	popa   
  423e5b:	shr    cl,0x10
  423e5e:	in     al,dx
  423e5f:	mov    cl,0xf4
  423e61:	out    dx,eax
  423e62:	mov    al,BYTE PTR [ecx]
  423e64:	mov    eax,ds:0xfd882c7d
  423e69:	mov    esi,0xbd90a42f
  423e6e:	rol    DWORD PTR [edi+edx*1],cl
  423e71:	adc    eax,0xc3a412d1
  423e76:	xor    dl,BYTE PTR [ebp-0x37c07921]
  423e7c:	adc    eax,0x55b6d23d
  423e81:	cmc    
  423e82:	ret    0x92bd
  423e85:	cmp    bh,cl
  423e87:	dec    esi
  423e88:	mov    cl,0x73
  423e8a:	jns    0x423ef7
  423e8c:	pop    edx
  423e8d:	(bad)  
  423e8e:	mov    cl,0x76
  423e90:	inc    ebp
  423e91:	sub    dl,BYTE PTR [edx+eiz*2]
  423e94:	popf   
  423e95:	cld    
  423e96:	fcomp  st(5)
  423e98:	pop    ecx
  423e99:	pop    esi
  423e9a:	rcr    BYTE PTR [esi-0x5b],0x98
  423e9e:	cmp    eax,0xa0d33a0e
  423ea3:	dec    ecx
  423ea4:	sbb    BYTE PTR [edi+ebx*4],ah
  423ea7:	enter  0x43cc,0xb
  423eab:	rcl    DWORD PTR [eax+0x5f],cl
  423eae:	cmp    al,0x59
  423eb1:	push   edi
  423eb2:	mov    WORD PTR [ecx],es
  423eb4:	stos   DWORD PTR es:[edi],eax
  423eb5:	xchg   ebp,esp
  423eb7:	cmp    al,0xb2
  423eb9:	scas   al,BYTE PTR es:[edi]
  423eba:	inc    esi
  423ebb:	sbb    cl,dh
  423ebd:	mov    ah,0xe7
  423ebf:	dec    ebx
  423ec0:	fmul   QWORD PTR [ebx-0x6d]
  423ec3:	inc    ebp
  423ec4:	mov    ch,cl
  423ec6:	mov    cs,WORD PTR [esi-0x2a]
  423ec9:	pop    eax
  423eca:	ret    
  423ecb:	fiadd  WORD PTR [edx]
  423ecd:	sub    esp,DWORD PTR [edi-0x62b369ff]
  423ed3:	and    BYTE PTR [eax],0xbd
  423ed6:	mov    edi,0xf35d8358
  423edb:	push   cs
  423edc:	mov    DWORD PTR [edi-0x16],0x9cef4399
  423ee3:	cwde   
  423ee4:	cdq    
  423ee5:	push   0xffffffdd
  423ee7:	mov    ah,0x84
  423ee9:	push   esi
  423eea:	mov    al,0xfa
  423eec:	scas   al,BYTE PTR es:[edi]
  423eed:	(bad)
  423ef1:	cmp    DWORD PTR [edx],edi
  423ef3:	mov    ds:0xc6e608,al
  423ef8:	scas   eax,DWORD PTR es:[edi]
  423ef9:	jb     0x423f45
  423efb:	fwait
  423efc:	cmp    BYTE PTR [esi],bl
  423efe:	aas    
  423eff:	xchg   ebx,eax
  423f00:	dec    eax
  423f01:	mov    ah,0x5f
  423f03:	neg    bh
  423f05:	mov    eax,0x7cf8dfe3
  423f0a:	push   ecx
  423f0b:	mov    ch,0xb5
  423f0d:	pop    ebx
  423f0e:	or     ch,bh
  423f10:	ds (bad) 
  423f12:	out    dx,eax
  423f13:	push   es
  423f14:	in     al,dx
  423f15:	iret   
  423f16:	mov    dh,0x96
  423f18:	iret   
  423f19:	xor    eax,0xd8bbcfb3
  423f1e:	sbb    ecx,DWORD PTR [eax+edi*8-0xc]
  423f22:	jg     0x423eae
  423f24:	movsx  esi,WORD PTR [ebp-0x4b8cb66e]
  423f2b:	xor    DWORD PTR [ebx-0x4ad4cca8],eax
  423f31:	mov    ds:0xa0d67e05,eax
  423f36:	xchg   edi,eax
  423f37:	scas   eax,DWORD PTR es:[edi]
  423f38:	sub    esi,DWORD PTR [ecx+0x56673775]
  423f3e:	and    ch,BYTE PTR [ebx+ebp*4+0x62d018ca]
  423f45:	dec    esp
  423f46:	pop    ebx
  423f47:	mov    es,WORD PTR [ebx+0x149ba0a9]
  423f4d:	out    dx,eax
  423f4e:	inc    ecx
  423f4f:	sbb    DWORD PTR [edi],0x117504fe
  423f55:	cli    
  423f56:	fidiv  WORD PTR [eax+ebx*1]
  423f59:	inc    ebp
  423f5a:	into   
  423f5b:	push   ecx
  423f5c:	in     al,dx
  423f5d:	and    BYTE PTR [edx-0x1a96faf7],ch
  423f63:	rcr    DWORD PTR [ecx-0x73a0d728],cl
  423f69:	retf   
  423f6a:	cmp    eax,0xa17db4a9
  423f6f:	pop    es
  423f70:	shl    BYTE PTR [edi],0xc1
  423f73:	mov    edx,0x5e00cc58
  423f78:	in     al,0x2a
  423f7a:	adc    al,0x90
  423f7c:	es add al,0xa6
  423f7f:	ins    DWORD PTR es:[edi],dx
  423f80:	ror    DWORD PTR [ebx+esi*8+0x40],cl
  423f84:	inc    edi
  423f85:	inc    eax
  423f86:	scas   al,BYTE PTR es:[edi]
  423f87:	sub    eax,0xa6c5ea44
  423f8c:	pop    ecx
  423f8d:	push   eax
  423f8e:	nop
  423f8f:	adc    cl,dl
  423f91:	xor    DWORD PTR [edi-0x3],eax
  423f94:	mov    BYTE PTR [ecx+0x12],dl
  423f97:	jo     0x42400c
  423f99:	push   ebx
  423f9a:	push   0x9e503345
  423f9f:	jecxz  0x423fd7
  423fa1:	xchg   edi,eax
  423fa2:	mov    dh,0x1e
  423fa4:	mov    dl,0x1a
  423fa6:	dec    eax
  423fa7:	in     eax,dx
  423fa8:	mov    edi,0x116d9bd2
  423fad:	mov    ch,0x1c
  423faf:	xlat   BYTE PTR ds:[ebx]
  423fb0:	push   eax
  423fb1:	inc    eax
  423fb2:	inc    BYTE PTR [ecx]
  423fb4:	sub    bl,0x66
  423fb7:	push   ebp
  423fb8:	pushf  
  423fb9:	out    0xe6,al
  423fbb:	ret    
  423fbc:	inc    esp
  423fbd:	xchg   ebp,eax
  423fbe:	xchg   DWORD PTR [edx+eiz*2-0xc20fd6c],edi
  423fc5:	popf   
  423fc6:	dec    edx
  423fc7:	jecxz  0x423f9a
  423fc9:	cmc    
  423fca:	and    ecx,DWORD PTR [ebp-0x1e]
  423fcd:	retfw  
  423fcf:	push   0x7c
  423fd1:	jne    0x423f55
  423fd3:	pop    edi
  423fd4:	ja     0x423fd9
  423fd6:	and    al,0xda
  423fd8:	jmp    0xd634:0x28c6b9db
  423fdf:	lods   al,BYTE PTR ds:[esi]
  423fe0:	fstp   QWORD PTR [edi+0x5fdd3926]
  423fe6:	stc    
  423fe7:	daa    
  423fe8:	dec    ebx
  423fe9:	or     eax,DWORD PTR [edi+0x4c737a15]
  423fef:	jl     0x424050
  423ff1:	adc    bl,bl
  423ff3:	sub    BYTE PTR [ebx-0x7c],dh
  423ff6:	inc    edi
  423ff7:	mov    cs,WORD PTR [ebx]
  423ff9:	sbb    BYTE PTR [esi+0x6bbe4346],bh
  423fff:	xchg   ebx,eax
  424000:	idiv   BYTE PTR [eax-0x5c]
  424003:	(bad)  
  424005:	in     al,dx
  424006:	call   0xdfc7:0x3ce57ba
  42400d:	and    al,0xc2
  42400f:	bound  edx,QWORD PTR [esi+0x3cf086c7]
  424015:	hlt    
  424016:	pop    edx
  424017:	xor    eax,0xd6d1a6e0
  42401c:	pusha  
  42401d:	fwait
  42401e:	jns    0x424078
  424020:	push   ss
  424021:	push   edx
  424022:	push   DWORD PTR [ebx-0x784f7af8]
  424028:	and    DWORD PTR gs:[bp-0x71],0xf4f77895
  424031:	idiv   BYTE PTR [ebx+0x2f]
  424034:	adc    BYTE PTR [eax],al
  424036:	sbb    al,0xf
  424038:	(bad)  
  424039:	shl    esi,1
  42403b:	adc    ecx,edx
  42403d:	xchg   ecx,eax
  42403e:	xor    edi,esp
  424040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424041:	shl    DWORD PTR [ebx+0x4b107129],1
  424047:	xchg   ebx,eax
  424048:	adc    DWORD PTR [eax+ecx*1-0x4396b302],0x4a4ed52f
  424053:	stc    
  424054:	or     DWORD PTR [edx],ebp
  424056:	sahf   
  424057:	push   ebp
  424058:	aas    
  424059:	inc    edi
  42405a:	add    BYTE PTR [eax],al
  42405c:	inc    ebx
  42405d:	lea    ebx,[edi]
  42405f:	and    bh,bl
  424061:	mov    dl,0x7f
  424063:	out    dx,eax
  424064:	add    BYTE PTR [ebx+0x3d982710],dl
  42406a:	or     eax,0x1ba4a7c
  42406f:	add    BYTE PTR [esi-0x4cfffffe],al
  424075:	(bad)  
  424077:	into   
  424078:	mov    BYTE PTR [esi],dh
  42407a:	sub    DWORD PTR [ebp+eax*1-0x1d2dca14],edx
  424081:	xor    al,0x80
  424083:	mov    DWORD PTR ds:0xcc0c933f,esi
  424089:	jge    0x42400f
  42408b:	retf   0xdacb
  42408e:	rcl    DWORD PTR [ebp+0x19],1
  424091:	sbb    BYTE PTR [ebx],dl
  424093:	add    BYTE PTR [ebx-0x21b859a3],cl
  424099:	or     ebp,DWORD PTR [ebx+eiz*2-0x14585e72]
  4240a0:	add    BYTE PTR [eax+0x75227c2a],bl
  4240a6:	sbb    BYTE PTR [ebx],ch
  4240a8:	pop    ebp
  4240a9:	push   esi
  4240aa:	icebp  
  4240ab:	cwde   
  4240ac:	test   edi,ebp
  4240ae:	or     al,0xc6
  4240b0:	dec    DWORD PTR [eax-0x68]
  4240b3:	rol    esp,0x20
  4240b6:	mov    bh,0x88
  4240b8:	cdq    
  4240b9:	clc    
  4240ba:	addr16 push ebx
  4240bc:	xor    al,0xff
  4240be:	fsubp  st(6),st
  4240c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240c1:	inc    eax
  4240c2:	mov    edi,DWORD PTR [ecx]
  4240c4:	in     eax,0xd2
  4240c6:	sub    DWORD PTR [ebp+0x101ef0c3],eax
  4240cc:	xlat   BYTE PTR ds:[ebx]
  4240cd:	mov    esi,DWORD PTR [ecx+ebp*4]
  4240d0:	sar    BYTE PTR [edi],1
  4240d2:	fild   DWORD PTR [ebx+0x50]
  4240d5:	push   0xf051ca7e
  4240da:	aaa    
  4240db:	imul   edi,DWORD PTR [edx+0x32ebdef],0x2c
  4240e2:	mov    gs,WORD PTR ds:0x87033afc
  4240e8:	dec    esp
  4240e9:	outs   dx,BYTE PTR ds:[esi]
  4240ea:	and    esp,DWORD PTR [ebp+0xcfeab5f]
  4240f0:	scas   al,BYTE PTR es:[edi]
  4240f1:	mov    ah,0x27
  4240f3:	loop   0x4240ee
  4240f5:	jmp    0xcf26:0x8f0d0d20
  4240fc:	jae    0x4240ab
  4240fe:	test   DWORD PTR [ecx+0x7b],0xf5bf7b32
  424105:	fsub   QWORD PTR [edi+ebx*2-0x5d]
  424109:	stc    
  42410a:	mov    WORD PTR [edx],ss
  42410c:	and    DWORD PTR [ebp+0xc418e22],0x1a5c5b3d
  424116:	cmp    esp,DWORD PTR [esp+ebp*2]
  424119:	cmp    ecx,DWORD PTR [edi+0xc]
  42411c:	pop    ebp
  42411d:	push   edi
  42411e:	lahf   
  42411f:	push   0x1b
  424121:	nop
  424122:	into   
  424123:	test   ecx,ebx
  424125:	mov    edi,DWORD PTR [ecx]
  424127:	test   DWORD PTR [edi],edi
  424129:	mov    ecx,0xda7dbcad
  42412e:	dec    esp
  42412f:	imul   esp,DWORD PTR [edi-0x6aae1830],0xf9912c3c
  424139:	std    
  42413a:	arpl   WORD PTR [ecx-0x43],dx
  42413d:	pusha  
  42413e:	mov    DWORD PTR [eax+0x7f],0x668a76a4
  424145:	lea    esi,[edi-0x5e]
  424148:	data16 scas al,BYTE PTR es:[edi]
  42414a:	xchg   ebp,eax
  42414b:	sub    DWORD PTR [esi+0x7b100d5d],ecx
  424151:	pusha  
  424152:	mov    edi,0x109df4c5
  424157:	dec    eax
  424158:	xchg   edi,eax
  424159:	jnp    0x424117
  42415b:	xchg   edx,eax
  42415c:	push   ds
  42415d:	sbb    BYTE PTR [eax+0x41],cl
  424160:	out    dx,eax
  424161:	in     eax,dx
  424162:	dec    ebp
  424163:	aaa    
  424164:	lahf   
  424165:	ffree  st(3)
  424167:	sbb    al,0x61
  424169:	ins    BYTE PTR es:[edi],dx
  42416a:	xchg   esi,eax
  42416b:	adc    al,0xd9
  42416d:	mov    eax,ds:0xb1153718
  424172:	jl     0x4241dc
  424174:	cwde   
  424175:	mov    eax,ds:0x4982ee03
  42417a:	mov    cl,0x3a
  42417c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42417d:	xlat   BYTE PTR ds:[ebx]
  42417e:	inc    ebp
  42417f:	ss add al,0x80
  424182:	je     0x4241ff
  424184:	or     eax,0xb9c417bf
  424189:	in     al,dx
  42418a:	lahf   
  42418b:	jmp    0xf720:0xbbcb7c61
  424192:	arpl   WORD PTR [edx],dx
  424194:	push   ebp
  424195:	pop    esi
  424196:	cmp    al,0xd0
  424198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424199:	push   esp
  42419a:	mov    ebx,0x849f8bd4
  42419f:	pop    ds
  4241a0:	daa    
  4241a1:	pop    ebp
  4241a2:	mov    al,ds:0x2563c890
  4241a7:	lahf   
  4241a8:	mov    al,ds:0x50f9781
  4241ad:	repz pop edi
  4241af:	cmp    ebp,DWORD PTR [edx]
  4241b1:	dec    esi
  4241b2:	jmp    0x864a8602
  4241b7:	ja     0x42416a
  4241b9:	push   ecx
  4241ba:	push   edi
  4241bb:	cmc    
  4241bc:	pop    ss
  4241bd:	jne    0x4241ea
  4241bf:	mov    eax,DWORD PTR [eax+esi*8]
  4241c2:	outs   dx,DWORD PTR ds:[esi]
  4241c3:	push   0x75
  4241c5:	add    eax,ebp
  4241c7:	push   0x7945086
  4241cc:	mov    ecx,0x41efa3f
  4241d1:	xlat   BYTE PTR ds:[ebx]
  4241d2:	cli    
  4241d3:	adc    eax,0xaeef155c
  4241d8:	dec    edi
  4241d9:	aad    0x43
  4241db:	cmp    ebp,ebx
  4241dd:	std    
  4241de:	mov    ah,0xaa
  4241e0:	sub    edi,ebx
  4241e2:	idiv   eax
  4241e4:	popa   
  4241e5:	ja     0x424258
  4241e7:	or     ebx,edi
  4241e9:	retf   0x3db3
  4241ec:	dec    edi
  4241ed:	dec    ecx
  4241ee:	fsubrp st(7),st
  4241f0:	cmp    eax,0x3bd1ec3d
  4241f5:	repnz mov ebp,0x63546aa8
  4241fb:	push   0x79c6ed0b
  424200:	jp     0x424207
  424202:	jmp    0x42425c
  424204:	pop    eax
  424205:	ss out 0x27,eax
  424208:	lock ss mov ch,0x11
  42420c:	xlat   BYTE PTR ds:[ebx]
  42420d:	not    DWORD PTR [eax+0x1a]
  424210:	jne    0x4241e0
  424212:	addr16 lock retf 0x83bb
  424217:	daa    
  424218:	xor    eax,0x93e219e2
  42421d:	stc    
  42421e:	loopne 0x42427e
  424220:	fidiv  DWORD PTR [edx]
  424222:	(bad)  
  424223:	xor    esp,edi
  424225:	and    al,0xfe
  424227:	inc    esp
  424228:	dec    edi
  424229:	inc    edi
  42422a:	xor    al,0x5b
  42422c:	xchg   esp,eax
  42422d:	add    BYTE PTR [esi+0x5],0xb8
  424231:	push   0xbb7deeb6
  424236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424237:	mov    bh,0x94
  424239:	mov    edi,0xf6778db9
  42423e:	aaa    
  42423f:	and    DWORD PTR [ebp-0x217cd53f],edi
  424245:	pop    esp
  424246:	or     BYTE PTR [edi-0x1e],ah
  424249:	jno    0x42429f
  42424b:	cdq    
  42424c:	xchg   BYTE PTR [ebx+edx*1+0x24],dh
  424250:	mov    ?,WORD PTR [ecx+0x339412d6]
  424256:	shl    ah,0xfa
  424259:	xchg   esp,eax
  42425a:	and    eax,0x9ffdfc97
  42425f:	(bad)  
  424260:	adc    edx,ebx
  424262:	lahf   
  424263:	stos   DWORD PTR es:[edi],eax
  424264:	add    ebp,esi
  424266:	aam    0xfa
  424268:	mov    eax,ds:0x5c2c1f2d
  42426d:	xchg   BYTE PTR [esi+0x67808a3a],dh
  424273:	leave  
  424274:	mov    BYTE PTR [ebx-0x36ef1bfc],bl
  42427a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42427b:	xor    eax,DWORD PTR [edx+0x66]
  42427e:	jbe    0x42427e
  424280:	pop    edx
  424281:	adc    eax,DWORD PTR [ebx]
  424283:	loopne 0x424262
  424285:	mov    ds:0xbe2b5f33,eax
  42428a:	stc    
  42428b:	mov    cl,0x27
  42428d:	pop    eax
  42428e:	jg     0x424240
  424290:	dec    ebx
  424291:	or     eax,0x96605c95
  424296:	imul   ebx,esi,0xbe87fcc
  42429c:	push   esp
  42429d:	mov    dh,0x4
  42429f:	mov    eax,0xe3239c31
  4242a4:	sub    eax,0x404606eb
  4242a9:	daa    
  4242aa:	or     dl,BYTE PTR [esi-0x773c2530]
  4242b0:	(bad)  
  4242b1:	push   eax
  4242b2:	or     edx,DWORD PTR [ecx-0x77]
  4242b5:	xor    edx,ebx
  4242b7:	mov    edx,0xa5fc3d2d
  4242bc:	lahf   
  4242bd:	data16 jo 0x4242c7
  4242c0:	mov    esp,0xf50a8fce
  4242c5:	dec    ebx
  4242c6:	es out dx,al
  4242c8:	ja     0x424292
  4242ca:	std    
  4242cb:	pop    edx
  4242cc:	sub    DWORD PTR [ecx+0x10431de9],edx
  4242d2:	nop    DWORD PTR [ebx-0xfe7640d]
  4242d9:	sbb    al,0xe0
  4242db:	dec    ebp
  4242dc:	pop    esp
  4242dd:	shr    dh,cl
  4242df:	jo     0x424328
  4242e1:	inc    esi
  4242e2:	pop    edi
  4242e3:	iret   
  4242e4:	fnstcw WORD PTR [esi-0x1d]
  4242e7:	adc    ebx,0x16
  4242ea:	pop    eax
  4242eb:	ror    BYTE PTR [esi],0x8c
  4242ee:	aas    
  4242ef:	pop    es
  4242f0:	inc    esp
  4242f1:	lods   eax,DWORD PTR ds:[esi]
  4242f2:	sahf   
  4242f3:	fcom   DWORD PTR [edi+0x4c]
  4242f6:	retf   
  4242f7:	push   0x29
  4242f9:	lds    eax,FWORD PTR [eax]
  4242fb:	add    ah,dh
  4242fd:	cmp    DWORD PTR [edx-0x2002081],edx
  424303:	mov    ebx,0xc0721507
  424308:	mov    ebp,ss
  42430a:	dec    edx
  42430b:	or     al,dl
  42430d:	mov    esp,0x2860001
  424312:	add    BYTE PTR [eax],al
  424314:	popa   
  424315:	inc    ebp
  424316:	dec    esp
  424317:	jmp    0x9f6394ad
  42431c:	mov    al,0x19
  42431e:	or     eax,0xe8ba8ae3
  424323:	mov    ebp,0x6a4ed45c
  424328:	not    DWORD PTR [esi+0x20b2e37e]
  42432e:	sbb    al,0xb4
  424330:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  424332:	loope  0x42431e
  424334:	dec    edi
  424335:	sbb    al,0xed
  424337:	push   cs
  424338:	aaa    
  424339:	repz retf 0xb79b
  42433d:	xor    bl,BYTE PTR [ebx+0x6d]
  424340:	ror    BYTE PTR [ebp+0x12056c45],0xad
  424347:	push   edi
  424348:	int3   
  424349:	ins    BYTE PTR es:[edi],dx
  42434a:	mov    edi,edi
  42434c:	mov    edx,0xfa7aa52c
  424351:	ja     0x424395
  424353:	mov    ecx,edx
  424355:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424356:	add    ecx,ecx
  424358:	iret   
  424359:	stos   DWORD PTR es:[edi],eax
  42435a:	sbb    dh,BYTE PTR [eax+edx*4-0x1d7f63c5]
  424361:	or     bh,BYTE PTR [ecx+0x5ba1425d]
  424367:	push   0xffffffd3
  424369:	je     0x4243b5
  42436b:	out    0x38,eax
  42436d:	xor    eax,0xb827d70c
  424372:	push   0xffffffb4
  424374:	push   es
  424375:	outs   dx,DWORD PTR ds:[esi]
  424376:	imul   ecx,DWORD PTR [ebx+0x660a93ac],0x2babcd0a
  424380:	data16 test al,0x3c
  424383:	scas   al,BYTE PTR es:[edi]
  424384:	push   edi
  424385:	ds pop edx
  424387:	int3   
  424388:	cmp    al,0x73
  42438a:	adc    DWORD PTR [eax+0x1988c87d],edi
  424390:	scas   al,BYTE PTR es:[edi]
  424391:	std    
  424392:	xor    DWORD PTR [edx+0x35],esi
  424395:	pop    esp
  424396:	push   esi
  424397:	push   edx
  424398:	push   0xcf7b7165
  42439d:	sar    BYTE PTR [eax-0x3c3c72d6],1
  4243a3:	and    BYTE PTR [ecx+0x15],al
  4243a6:	call   0xf72:0x6c05fc4c
  4243ad:	les    eax,FWORD PTR ds:0x2aebccd3
  4243b3:	out    dx,eax
  4243b4:	arpl   WORD PTR [ebp-0x64b186e4],bx
  4243ba:	xor    bh,BYTE PTR [edi+0xeff2b6c]
  4243c0:	mov    eax,ds:0x37264f04
  4243c5:	sbb    DWORD PTR [edi-0x17032c27],eax
  4243cb:	std    
  4243cc:	fldcw  WORD PTR [esi]
  4243ce:	adc    ebx,DWORD PTR [edx]
  4243d0:	dec    DWORD PTR [ebx]
  4243d2:	sub    BYTE PTR [esi],al
  4243d4:	push   0xffffff8b
  4243d6:	push   esp
  4243d7:	cmp    ebx,ecx
  4243d9:	dec    ecx
  4243da:	in     al,dx
  4243db:	repnz pop esi
  4243dd:	mov    edx,0x34981af2
  4243e2:	push   cs
  4243e3:	push   edx
  4243e4:	xchg   BYTE PTR [edx+0x40327fe6],bl
  4243ea:	mov    bh,0x6e
  4243ec:	inc    edi
  4243ed:	sub    bh,BYTE PTR [ecx-0x1f3a02be]
  4243f3:	push   ecx
  4243f4:	adc    eax,0x20878641
  4243f9:	and    bh,dl
  4243fb:	clc    
  4243fc:	call   0xa474c15a
  424401:	iret   
  424402:	sub    esp,DWORD PTR [edi+0x33]
  424405:	popf   
  424406:	or     dl,BYTE PTR [esp+edi*4+0x0]
  42440a:	scas   eax,DWORD PTR es:[edi]
  42440b:	mov    ch,0xc2
  42440d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42440e:	mov    eax,ds:0xc14fc53c
  424413:	xchg   BYTE PTR [ebp+0x6e7a0233],cl
  424419:	xchg   edx,eax
  42441a:	fcmovnu st,st(1)
  42441c:	xor    cl,dl
  42441e:	xor    esi,esi
  424420:	dec    edi
  424421:	retf   
  424422:	sub    BYTE PTR [ecx-0x3122bcdb],dl
  424428:	int3   
  424429:	scas   al,BYTE PTR es:[edi]
  42442a:	push   edi
  42442b:	dec    ebp
  42442c:	jmp    0xc75e718e
  424431:	or     ah,dl
  424433:	test   BYTE PTR [ecx],ch
  424435:	pop    ecx
  424436:	in     eax,0x37
  424438:	inc    ebx
  424439:	aas    
  42443a:	in     eax,dx
  42443b:	mov    eax,ds:0x4f038caf
  424440:	ror    DWORD PTR [ebp+0x33],1
  424443:	dec    ebx
  424444:	lods   eax,DWORD PTR ds:[esi]
  424445:	fsubr  DWORD PTR [edx]
  424447:	pop    ebx
  424448:	scas   eax,DWORD PTR es:[edi]
  424449:	add    bh,BYTE PTR ds:0x42ca405b
  42444f:	aam    0x7f
  424451:	inc    ebp
  424452:	pop    ecx
  424453:	xor    BYTE PTR [edi-0x5c499c],dl
  424459:	sbb    ah,BYTE PTR [esi]
  42445b:	fs icebp 
  42445d:	fdiv   DWORD PTR [ecx]
  42445f:	mov    cl,BYTE PTR [ebp+0x9]
  424462:	je     0x424487
  424464:	push   edx
  424465:	loopne 0x42444e
  424467:	cmp    DWORD PTR [ebx],esp
  424469:	add    DWORD PTR [edx+0x5e],0xe1baa8d7
  424470:	popf   
  424471:	xor    eax,0x14859d34
  424476:	or     BYTE PTR ss:[edx+0x42],0x51
  42447b:	daa    
  42447c:	test   BYTE PTR [eax+0x1d],ch
  42447f:	pushf  
  424480:	xchg   ebx,eax
  424481:	lds    ecx,FWORD PTR [ecx-0x60]
  424484:	dec    ebx
  424485:	call   0xb0a34cc5
  42448a:	(bad)  
  42448c:	and    DWORD PTR [ebx-0x75],ebp
  42448f:	cli    
  424490:	mov    al,dl
  424492:	xchg   esp,eax
  424493:	ret    
  424494:	pop    ecx
  424495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424496:	dec    edx
  424497:	ffreep st(1)
  424499:	add    DWORD PTR [ebp+0x65],edx
  42449c:	aad    0x7c
  42449e:	sbb    ebx,DWORD PTR [eax+0x846f113]
  4244a4:	lods   al,BYTE PTR ds:[esi]
  4244a5:	and    al,0x18
  4244a7:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4244a9:	push   ecx
  4244aa:	mov    edx,0xd438ed9a
  4244af:	(bad)  
  4244b0:	aaa    
  4244b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244b2:	stos   BYTE PTR es:[edi],al
  4244b3:	out    dx,al
  4244b4:	(bad)  
  4244b5:	(bad)  
  4244b6:	mul    dh
  4244b8:	outs   dx,BYTE PTR ds:[esi]
  4244b9:	cmp    al,0x9e
  4244bb:	sbb    eax,0xaa17a285
  4244c0:	test   DWORD PTR [esi],esp
  4244c2:	xchg   BYTE PTR [eax],ah
  4244c4:	fwait
  4244c5:	mov    al,ds:0xd6607681
  4244ca:	push   ebx
  4244cb:	dec    esi
  4244cc:	pop    esi
  4244cd:	dec    edi
  4244ce:	rcr    DWORD PTR [ecx+eiz*2+0x4914bc7a],0x94
  4244d6:	sub    esp,edx
  4244d8:	add    DWORD PTR [eax],ebp
  4244da:	jp     0x42450e
  4244dc:	mov    eax,0x1e620576
  4244e1:	dec    eax
  4244e2:	mov    ebx,0x52888ec3
  4244e7:	cmp    ebx,DWORD PTR [eax]
  4244e9:	jmp    0x9e47:0x340da0c0
  4244f0:	add    BYTE PTR [ecx],0x19
  4244f3:	test   DWORD PTR [ecx],esp
  4244f5:	iret   
  4244f6:	xchg   BYTE PTR [esi],bl
  4244f8:	dec    eax
  4244f9:	ror    BYTE PTR [edx+eax*2+0x37],cl
  4244fd:	ret    
  4244fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244ff:	cmp    eax,DWORD PTR [edi-0x542d39e2]
  424505:	nop
  424506:	cmp    ecx,ebx
  424508:	mov    al,ds:0x41d23e0b
  42450d:	mov    dl,0x23
  42450f:	mov    eax,ds:0x2a87eb63
  424514:	push   0xffffff91
  424516:	cs into 
  424518:	rol    DWORD PTR [esi-0x580d0f97],0x1e
  42451f:	lds    edx,FWORD PTR ds:[ebp-0x733128a7]
  424526:	jge    0x42451e
  424528:	mov    edx,fs
  42452a:	ret    
  42452b:	(bad)  
  42452c:	(bad)
  42452f:	adc    al,0x28
  424531:	adc    al,0x48
  424533:	ds adc bh,cl
  424536:	push   cs
  424537:	rcr    BYTE PTR [ebx+ebx*8-0x62],0xa7
  42453c:	les    ebx,FWORD PTR [edi+0x14]
  42453f:	sbb    DWORD PTR [edx*2-0x2098ef15],ebx
  424546:	enter  0x676,0xdf
  42454a:	pop    ds
  42454b:	sahf   
  42454c:	int    0x5a
  42454e:	out    0x3d,al
  424550:	or     al,0x4e
  424552:	mov    ebp,0x4310c178
  424557:	sub    BYTE PTR [ebx],al
  424559:	and    cl,dl
  42455b:	popf   
  42455c:	xor    BYTE PTR [ebx-0x5a],bl
  42455f:	jmp    0x20dcca3b
  424564:	mov    ebp,0x1bd3c03d
  424569:	inc    edi
  42456a:	and    eax,0xcbeae57e
  42456f:	push   ebp
  424570:	add    DWORD PTR [ebx],0xe3909009
  424576:	pop    ds
  424577:	ja     0x424564
  424579:	lds    edx,FWORD PTR [ebx+ebp*4]
  42457c:	pop    eax
  42457d:	fs mov bl,0xed
  424580:	out    0xb0,al
  424582:	xchg   ecx,eax
  424583:	shl    ebp,1
  424585:	cmp    BYTE PTR [eax+0x47],dh
  424588:	sti    
  424589:	sbb    bl,BYTE PTR [ebp+0x36bc456f]
  42458f:	je     0x4245ac
  424591:	mov    ds:0x201fcff7,eax
  424596:	int3   
  424597:	mov    esi,0xdc77
  42459c:	push   esp
  42459d:	ds and al,0x19
  4245a0:	outs   dx,BYTE PTR ds:[esi]
  4245a1:	sbb    edi,DWORD PTR [ebp+0x7f]
  4245a4:	(bad)  
  4245a5:	mov    eax,0x7dbecfc0
  4245aa:	imul   edi,DWORD PTR [esi+edx*2-0x79fffe41],0x9d000002
  4245b5:	push   edi
  4245b6:	enter  0x5ca8,0x3f
  4245ba:	jo     0x424613
  4245bc:	stos   BYTE PTR es:[edi],al
  4245bd:	mov    DWORD PTR [ebp-0x65],ebp
  4245c0:	repnz call 0xd2f1:0x47ca4193
  4245c8:	in     al,0x4f
  4245ca:	sub    DWORD PTR [ecx],ebp
  4245cc:	ins    DWORD PTR es:[edi],dx
  4245cd:	jp     0x42455f
  4245cf:	enter  0x1e84,0x90
  4245d3:	test   bh,ah
  4245d5:	xchg   ecx,eax
  4245d6:	jbe    0x4245fa
  4245d8:	cs stos DWORD PTR es:[edi],eax
  4245da:	pushf  
  4245db:	je     0x42463e
  4245dd:	fs mov edi,0xab1df36d
  4245e3:	mov    bl,0xe3
  4245e5:	cmc    
  4245e6:	shl    bl,cl
  4245e8:	sbb    ebx,DWORD PTR [ebx+0x1b3c3945]
  4245ee:	(bad)  
  4245ef:	in     eax,0x79
  4245f1:	mov    ebx,0xc1e8f2ef
  4245f6:	lahf   
  4245f7:	inc    esp
  4245f8:	pop    esi
  4245f9:	ret    
  4245fa:	adc    eax,0x7cf8325b
  4245ff:	jns    0x424586
  424601:	aam    0xcd
  424603:	jmp    0x4245fb
  424605:	imul   ebx,ebx,0xffffffd4
  424608:	sub    DWORD PTR [esi-0x323d6e4b],ecx
  42460e:	stos   DWORD PTR es:[edi],eax
  42460f:	mov    ds:0xbcb6253f,eax
  424614:	inc    eax
  424615:	loop   0x42463d
  424617:	push   0x30e27fc7
  42461c:	jp     0x42469b
  42461e:	aas    
  42461f:	sub    esi,DWORD PTR [esi-0x7dab942]
  424625:	jmp    0x3d01ee97
  42462a:	mov    dl,0x85
  42462c:	aaa    
  42462d:	dec    edi
  42462e:	xchg   ecx,eax
  42462f:	fld    TBYTE PTR [ebp+0x4628f78]
  424635:	xchg   esp,eax
  424636:	xor    eax,0x207ab49
  42463b:	nop
  42463c:	retf   
  42463d:	mov    ds:0x58c0b83d,eax
  424642:	adc    cl,BYTE PTR [esp+ebx*1+0x2d]
  424646:	xor    bh,dh
  424648:	xor    eax,0x4968b56e
  42464d:	out    dx,eax
  42464e:	fs add eax,0xf0a7d216
  424654:	and    DWORD PTR [esi+0x64e5f557],0x64
  42465b:	in     eax,0x47
  42465d:	push   ss
  42465e:	jbe    0x42468e
  424660:	sub    DWORD PTR [ecx],ebp
  424662:	sub    edi,DWORD PTR [ecx+0x7b5990b6]
  424668:	push   0xf741f7da
  42466d:	or     DWORD PTR [edi-0x1e],ebp
  424670:	add    ecx,DWORD PTR [eax+eax*4-0x640702e9]
  424677:	gs mov esp,0xa636aa5f
  42467d:	ficomp WORD PTR [ebp-0x2eb1de0f]
  424683:	data16 jae 0x424689
  424686:	leave  
  424687:	(bad)  
  424688:	out    dx,eax
  424689:	mov    ds:0x1bd2845e,eax
  42468e:	hlt    
  42468f:	mov    edi,es
  424691:	sbb    dl,BYTE PTR [edi+0x754d8a47]
  424697:	inc    eax
  424698:	cs lahf 
  42469a:	xchg   edx,eax
  42469b:	rcl    BYTE PTR [eax-0x35],1
  42469e:	imul   edi,DWORD PTR [eax-0x28],0x6e
  4246a2:	daa    
  4246a3:	and    esi,DWORD PTR [ebx+0x42]
  4246a6:	leave  
  4246a7:	mov    al,ds:0xb84fc5ec
  4246ac:	cmp    BYTE PTR [ebp+eax*1-0x70a7dc70],bh
  4246b3:	(bad)  
  4246b4:	mov    eax,0xa9d023e
  4246b9:	sbb    DWORD PTR [edx+esi*1],edi
  4246bc:	fist   WORD PTR fs:[ecx-0x738a3372]
  4246c3:	adc    al,0x54
  4246c5:	ret    
  4246c6:	mov    al,ds:0x8b61d018
  4246cb:	sbb    BYTE PTR [eax+eiz*2+0x6de9ac70],cl
  4246d2:	dec    esp
  4246d3:	fdivr  QWORD PTR [eax-0x7d]
  4246d6:	sub    bh,BYTE PTR [esi+ebx*1]
  4246d9:	hlt    
  4246da:	mov    esi,0x4e2b3365
  4246df:	xor    bh,BYTE PTR [esi]
  4246e1:	lahf   
  4246e2:	lods   eax,DWORD PTR ds:[esi]
  4246e3:	adc    eax,0x8b4a97e8
  4246e8:	pusha  
  4246e9:	and    eax,0x11241557
  4246ee:	pop    edi
  4246ef:	std    
  4246f0:	ins    BYTE PTR es:[edi],dx
  4246f1:	int    0x66
  4246f3:	pop    ecx
  4246f4:	out    dx,eax
  4246f5:	lods   eax,DWORD PTR ds:[esi]
  4246f6:	jg     0x4246cc
  4246f8:	das    
  4246f9:	lahf   
  4246fa:	ret    0x6ea6
  4246fd:	arpl   WORD PTR [ebx+0x21f804f0],ax
  424703:	(bad)  
  424704:	sbb    esi,esi
  424706:	jecxz  0x424706
  424708:	enter  0xa93c,0xf5
  42470c:	jnp    0x42474e
  42470e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42470f:	jp     0x4246b7
  424711:	push   ss
  424712:	loop   0x42471e
  424714:	lea    ebx,[ebx]
  424716:	loope  0x424700
  424718:	jp     0x42476f
  42471a:	je     0x424782
  42471c:	mov    esi,esi
  42471e:	sub    bh,BYTE PTR [ebp-0xe]
  424721:	adc    al,0xdf
  424723:	or     eax,ecx
  424725:	mov    bl,0x64
  424727:	mov    edx,0x1a4d2c4
  42472c:	jo     0x42476f
  42472e:	adc    eax,0xd459c5c2
  424733:	(bad)  
  424734:	xchg   edi,eax
  424735:	mov    ecx,0xef6442d9
  42473a:	push   cs
  42473b:	add    DWORD PTR [edi-0x1],esi
  42473e:	adc    cl,bh
  424740:	in     al,dx
  424741:	jae    0x424784
  424743:	or     cl,bh
  424745:	ds mov eax,0x3a286152
  42474b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42474c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42474d:	ret    0xf4ea
  424750:	(bad)  
  424751:	xor    DWORD PTR [ebp-0x717d5b42],esp
  424757:	xor    edx,ebx
  424759:	inc    ebx
  42475a:	inc    esp
  42475b:	int3   
  42475c:	ret    
  42475d:	mov    ah,0xec
  42475f:	imul   ebp,ebp,0xffffffb9
  424762:	xchg   edx,eax
  424763:	and    BYTE PTR [edi],0x7f
  424766:	ret    
  424767:	push   ebp
  424768:	aaa    
  424769:	or     al,0xf1
  42476b:	pop    eax
  42476c:	dec    ebx
  42476d:	fwait
  42476e:	(bad)  
  42476f:	imul   edx,DWORD PTR [ecx+0x4b9d4a42],0xffffff97
  424776:	scas   eax,DWORD PTR es:[edi]
  424777:	and    eax,0xc87137e3
  42477c:	mov    esp,DWORD PTR cs:[eax+ebx*2]
  424780:	pop    ebp
  424781:	or     al,0xc3
  424783:	or     BYTE PTR [esi+ebx*8+0x7e7d64fd],ch
  42478a:	aam    0xb2
  42478c:	sar    DWORD PTR [ebx+0x17ec2c39],0x22
  424793:	push   edx
  424794:	loopne 0x4247c2
  424796:	xorps  xmm1,XMMWORD PTR [ebx-0x5a]
  42479a:	inc    ebx
  42479b:	stc    
  42479c:	rol    DWORD PTR [ecx],cl
  42479e:	data16 outs dx,BYTE PTR ds:[esi]
  4247a0:	daa    
  4247a1:	xor    DWORD PTR ds:0x5aae860a,0xffffffb9
  4247a8:	aas    
  4247a9:	ss xchg edi,eax
  4247ab:	dec    edi
  4247ac:	sets   BYTE PTR [eax]
  4247af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247b0:	aas    
  4247b1:	inc    ecx
  4247b2:	lds    edx,FWORD PTR [ebp+0xe]
  4247b5:	and    BYTE PTR [eax],dl
  4247b7:	mov    edx,0x769c427f
  4247bc:	jo     0x4247ab
  4247be:	js     0x424755
  4247c0:	jae    0x4247af
  4247c2:	mov    cl,0x74
  4247c4:	cs dec esi
  4247c6:	cmp    dh,ch
  4247c8:	lods   al,BYTE PTR ds:[esi]
  4247c9:	or     BYTE PTR [ebx+eiz*2-0x60],al
  4247cd:	pop    ebx
  4247ce:	cmp    al,BYTE PTR [eax-0x12]
  4247d1:	mov    dh,0xe4
  4247d3:	push   esi
  4247d4:	pop    ebx
  4247d5:	sub    BYTE PTR [ecx+esi*8],dh
  4247d8:	stc    
  4247d9:	sbb    DWORD PTR [edx-0x18],edi
  4247dc:	not    DWORD PTR [edi+0xd]
  4247df:	dec    ebx
  4247e0:	ss (bad) 
  4247e2:	idiv   DWORD PTR [edi-0x3b]
  4247e5:	cmp    BYTE PTR [eax+eax*4-0x3c27401e],dl
  4247ec:	push   edi
  4247ed:	mov    al,ds:0xb3ce0422
  4247f2:	(bad)  
  4247f3:	add    esp,DWORD PTR ds:[esi]
  4247f6:	dec    eax
  4247f7:	pop    es
  4247f8:	xor    al,0x26
  4247fa:	gs cmp eax,0xbf96ed65
  424800:	enter  0x2fd2,0x34
  424804:	add    esi,DWORD PTR [ebx]
  424806:	mov    dl,0xc5
  424808:	sub    esp,DWORD PTR ss:[ebx+0x75cd2cf7]
  42480f:	and    eax,0x94e6382b
  424814:	and    al,0xa9
  424816:	pop    edi
  424817:	mov    ch,0x93
  424819:	cdq    
  42481a:	xchg   ecx,eax
  42481b:	mul    DWORD PTR [ecx]
  42481d:	jp     0x424892
  42481f:	xchg   DWORD PTR [esi+0x6788b92e],esi
  424825:	test   DWORD PTR [esi-0x2],0x4771f843
  42482c:	cmp    esi,DWORD PTR [ebp+ecx*4-0x6baa39ad]
  424833:	sbb    ebp,esi
  424835:	in     al,0xda
  424837:	mov    cl,0x5c
  424839:	jmp    0xeb00483e
  42483e:	je     0x42482f
  424840:	je     0x424841
  424842:	mov    edi,0x98b349fb
  424847:	xor    dl,BYTE PTR [eax]
  424849:	and    al,0xf7
  42484b:	mov    ah,bl
  42484d:	rol    DWORD PTR [ecx],0x0
  424850:	xchg   BYTE PTR [edx],al
  424852:	add    BYTE PTR [eax],al
  424854:	je     0x4248ce
  424856:	xchg   edx,eax
  424857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424858:	xchg   ebp,eax
  424859:	cdq    
  42485a:	cmp    DWORD PTR [ebx+0x71],0x517db1fc
  424861:	nop
  424862:	xor    al,0xb
  424864:	pop    ss
  424865:	aas    
  424866:	jo     0x424832
  424868:	test   al,0x56
  42486a:	je     0x4247ed
  42486c:	cmp    edi,DWORD PTR [ecx+0x7b]
  42486f:	call   0xfa18:0xab81e9d
  424876:	mov    dl,0xfb
  424878:	ret    
  424879:	pop    edi
  42487a:	sbb    bh,BYTE PTR [edx+0x12]
  42487d:	or     eax,DWORD PTR [ebx+esi*1+0x63c216d6]
  424884:	sub    dl,BYTE PTR [ecx+0x13609dd7]
  42488a:	jmp    0x9c75d0a3
  42488f:	jp     0x424904
  424891:	jge    0x424864
  424893:	jns    0x4248d7
  424895:	or     al,BYTE PTR [edx]
  424897:	cs or  eax,0xf42ffb4c
  42489d:	test   eax,0x38565a3e
  4248a2:	jno    0x42491c
  4248a4:	xchg   edx,eax
  4248a5:	div    DWORD PTR [edx-0x6277693b]
  4248ab:	fxch   st(4)
  4248ad:	xor    ch,BYTE PTR [ecx]
  4248af:	neg    BYTE PTR [esi+0x3c9bc935]
  4248b5:	add    al,0xe0
  4248b7:	adc    ebx,ecx
  4248b9:	inc    esp
  4248ba:	aaa    
  4248bb:	cmp    dh,BYTE PTR [ebp+0x563e6ee4]
  4248c1:	pop    es
  4248c2:	lock cmp DWORD PTR [edi+0x19],edi
  4248c6:	sar    dl,1
  4248c8:	inc    edi
  4248c9:	cmp    ah,dh
  4248cb:	add    edi,ecx
  4248cd:	xor    DWORD PTR [edi+0x4],edx
  4248d0:	jle    0x4248c3
  4248d2:	pop    esp
  4248d3:	dec    ebp
  4248d4:	(bad)  
  4248d5:	out    dx,al
  4248d6:	add    BYTE PTR [ebp*1+0x271bdf5e],ch
  4248dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248de:	or     ebp,DWORD PTR [eax]
  4248e0:	mov    al,ds:0xc3a2fb32
  4248e5:	add    BYTE PTR [esi],dl
  4248e7:	call   0xca6c53da
  4248ec:	ins    BYTE PTR es:[edi],dx
  4248ed:	mov    ss,ecx
  4248ef:	fwait
  4248f0:	nop
  4248f1:	mov    ch,0xbd
  4248f3:	cmp    ch,ch
  4248f5:	inc    edx
  4248f6:	mov    ds:0x20693d84,al
  4248fb:	sbb    ah,ah
  4248fd:	sahf   
  4248fe:	lods   al,BYTE PTR ds:[esi]
  4248ff:	out    dx,al
  424900:	rcl    cl,1
  424902:	in     al,0x61
  424904:	adc    esi,esp
  424906:	add    cl,BYTE PTR [eax-0x74895d71]
  42490c:	mov    esi,0x65aa4dda
  424911:	jmp    0x42492c
  424913:	pop    ebx
  424914:	jnp    0x424937
  424916:	push   ecx
  424917:	jge    0x42495b
  424919:	pop    es
  42491a:	ins    DWORD PTR es:[edi],dx
  42491b:	icebp  
  42491c:	push   0x6a
  42491e:	push   eax
  42491f:	ins    DWORD PTR es:[edi],dx
  424920:	jae    0x42491e
  424922:	aam    0x44
  424924:	sbb    ah,BYTE PTR [edi-0x1d]
  424927:	push   ds
  424928:	dec    eax
  424929:	xor    al,0x8
  42492b:	jle    0x4248b4
  42492d:	iret   
  42492e:	gs fsubr st(3),st
  424931:	jg     0x42491e
  424933:	sub    bh,BYTE PTR [edx]
  424935:	mov    cl,0x36
  424937:	scas   eax,DWORD PTR es:[edi]
  424938:	lahf   
  424939:	push   ss
  42493a:	inc    edi
  42493b:	(bad)  [eax+edi*1+0x1a]
  42493f:	fdivr  st(2),st
  424941:	imul   ecx,DWORD PTR [ebp+edx*2+0x2110744d],0x72c7b110
  42494c:	mov    WORD PTR [esi],gs
  42494e:	stos   DWORD PTR es:[edi],eax
  42494f:	sti    
  424950:	jo     0x4248ef
  424952:	mov    ds:0xda551101,al
  424957:	mov    ch,0x8d
  424959:	popa   
  42495a:	leave  
  42495b:	xchg   edx,eax
  42495c:	dec    edx
  42495d:	test   al,0xcd
  42495f:	outs   dx,DWORD PTR ds:[esi]
  424960:	fsubr  DWORD PTR [ebx-0x1e]
  424963:	loop   0x4249e1
  424965:	sbb    ebp,DWORD PTR [ebx]
  424967:	xchg   esp,eax
  424968:	lea    eax,fs:[eax+0xf]
  42496c:	and    edi,DWORD PTR [esi-0x5f]
  42496f:	xchg   BYTE PTR [edx-0x5b],dh
  424972:	inc    eax
  424973:	ins    BYTE PTR es:[edi],dx
  424974:	in     al,dx
  424975:	in     al,0x50
  424977:	xchg   ecx,eax
  424978:	rcr    BYTE PTR [edi+0x56],1
  42497b:	dec    eax
  42497c:	cwde   
  42497d:	push   ds
  42497e:	xor    eax,0xb5ef4941
  424983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424984:	push   0xffffffc5
  424986:	fdivr  QWORD PTR [edx-0x5d]
  424989:	lods   al,BYTE PTR ds:[esi]
  42498a:	xor    al,0xc8
  42498c:	out    dx,eax
  42498d:	fmul   DWORD PTR [edi-0x61c54631]
  424993:	dec    esp
  424994:	jle    0x42493b
  424996:	push   edx
  424997:	pop    eax
  424998:	mov    dl,dh
  42499a:	inc    ebx
  42499b:	or     ecx,DWORD PTR ds:0xdfddbb97
  4249a1:	xchg   ebx,eax
  4249a2:	xor    esp,DWORD PTR [ebx+0x63e1c0a6]
  4249a8:	mov    esi,0x5cc6e0f9
  4249ad:	enter  0xf528,0x88
  4249b1:	cs add eax,0xfbcc2b2
  4249b7:	hlt    
  4249b8:	dec    edx
  4249b9:	arpl   WORD PTR [esi-0x3317952e],sp
  4249bf:	mov    esi,0x47cba97c
  4249c4:	scas   eax,DWORD PTR es:[edi]
  4249c5:	mov    eax,ds:0xd5f4646f
  4249ca:	xchg   BYTE PTR [ebx],dh
  4249cc:	cmp    ah,BYTE PTR [edx-0x54]
  4249cf:	aam    0xb0
  4249d1:	adc    esp,DWORD PTR [eax+eax*8+0x48]
  4249d5:	sbb    ecx,edx
  4249d7:	das    
  4249d8:	mov    bh,0x5f
  4249da:	sti    
  4249db:	out    0x48,al
  4249dd:	push   edi
  4249de:	dec    edx
  4249df:	test   al,0x19
  4249e1:	xor    al,0xdc
  4249e3:	cs mov cl,0x27
  4249e6:	sub    BYTE PTR [ebx+0x500d0033],ch
  4249ec:	in     eax,0xb7
  4249ee:	xor    DWORD PTR [edx],0x1d
  4249f1:	jbe    0x4249b5
  4249f3:	mov    ch,0x3f
  4249f5:	and    BYTE PTR [ebp+0x4945bf7c],bh
  4249fb:	xchg   esi,eax
  4249fc:	xchg   esi,eax
  4249fd:	mov    eax,0xe8582210
  424a02:	fstp   TBYTE PTR [ebx]
  424a04:	inc    esp
  424a05:	popf   
  424a06:	pop    eax
  424a07:	mov    al,0x7e
  424a09:	or     edi,DWORD PTR [edx+0x52]
  424a0c:	sbb    al,0xe3
  424a0f:	pop    ecx
  424a10:	not    esp
  424a12:	cmc    
  424a13:	out    0x5b,al
  424a15:	hlt    
  424a16:	xor    edi,DWORD PTR [ebp-0x1437db60]
  424a1c:	popa   
  424a1d:	mov    gs,WORD PTR [eax-0x65]
  424a20:	retf   
  424a21:	mov    ds:0x92840563,eax
  424a26:	adc    eax,0x365685b8
  424a2b:	or     DWORD PTR [edi],0x743d259d
  424a31:	xor    DWORD PTR [edi-0x204b087b],esp
  424a37:	push   edi
  424a38:	icebp  
  424a39:	mov    dh,0xa2
  424a3b:	sti    
  424a3c:	int    0xca
  424a3e:	or     al,0x3f
  424a40:	mov    WORD PTR [ecx],es
  424a42:	pop    edx
  424a43:	mov    eax,ds:0xba9c952f
  424a48:	loopne 0x424a24
  424a4a:	jmp    0xa91a:0x81763908
  424a51:	inc    edi
  424a52:	shl    BYTE PTR [edi-0x26],1
  424a55:	sar    DWORD PTR [ebx-0x59f906bc],0xe7
  424a5c:	xchg   ebp,eax
  424a5d:	or     cl,0xfd
  424a60:	pop    ds
  424a61:	rol    DWORD PTR [eax+0x1427cd01],0x6b
  424a68:	add    al,0xb5
  424a6a:	jns    0x424a72
  424a6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a6d:	cmp    eax,0x502f0b6e
  424a72:	sub    DWORD PTR [ebx+ebx*1],ecx
  424a75:	sar    BYTE PTR [ecx+ecx*8+0x4da0f113],1
  424a7c:	shl    ecx,0x87
  424a7f:	add    ebp,DWORD PTR [esp+edi*1+0x4]
  424a83:	cmp    al,0xd9
  424a85:	addr16 clc 
  424a87:	dec    ebp
  424a88:	add    eax,0xd30321d2
  424a8d:	ja     0x424ac5
  424a8f:	jbe    0x424a5b
  424a91:	dec    esi
  424a92:	les    ecx,FWORD PTR ds:0x6b89c32a
  424a98:	ror    DWORD PTR [edx+0x29],cl
  424a9b:	je     0x424b19
  424a9d:	pop    ds
  424a9e:	stc    
  424a9f:	cmp    DWORD PTR [ecx+0x5809d4ec],0xe1662c48
  424aa9:	daa    
  424aaa:	sbb    esp,0xa5a4c451
  424ab0:	repz or ecx,edi
  424ab3:	in     eax,0xf
  424ab5:	imul   ebx,eax,0x77
  424ab8:	push   cs
  424ab9:	sbb    edi,DWORD PTR [ebx+0x4b]
  424abc:	xor    BYTE PTR [esp+esi*1+0x93653a9],ah
  424ac3:	sbb    esi,DWORD PTR [ebx-0x11]
  424ac6:	hlt    
  424ac7:	repz (bad) 
  424aca:	je     0x424ad7
  424acc:	mov    bh,0x78
  424ace:	mov    DWORD PTR [ecx],ecx
  424ad0:	cmp    BYTE PTR [edx],al
  424ad2:	stc    
  424ad3:	adc    eax,0x1932824a
  424ad8:	gs xchg edi,eax
  424ada:	add    BYTE PTR [eax],al
  424adc:	dec    ebx
  424add:	inc    ebp
  424ade:	mov    edx,0x5fffbeee
  424ae3:	in     eax,0x54
  424ae5:	stos   BYTE PTR es:[edi],al
  424ae6:	clc    
  424ae7:	adc    DWORD PTR [eax+0x62c66a59],esi
  424aed:	les    eax,FWORD PTR [ecx]
  424aef:	add    BYTE PTR [esi+0x69000002],al
  424af5:	aas    
  424af6:	nop
  424af7:	jmp    0x391dccf
  424afc:	xchg   dl,dl
  424afe:	jb     0x424a80
  424b00:	mov    ds:0x68fae7cc,eax
  424b05:	lods   al,BYTE PTR ds:[esi]
  424b06:	push   ecx
  424b07:	dec    ebx
  424b08:	mov    edx,0xb7441df7
  424b0d:	(bad)  
  424b0e:	dec    edi
  424b0f:	adc    BYTE PTR [ecx+0x10a54f02],bh
  424b15:	mov    ecx,0xb48ddae5
  424b1a:	bound  esp,QWORD PTR [ecx-0x30975b88]
  424b20:	cmp    al,0x9d
  424b22:	cld    
  424b23:	push   ebx
  424b24:	jnp    0x424aae
  424b26:	repz dec edi
  424b28:	add    al,0xd4
  424b2a:	add    DWORD PTR [ebp+0x0],edi
  424b2d:	sub    al,0x94
  424b2f:	scas   eax,DWORD PTR es:[edi]
  424b30:	dec    ebp
  424b31:	jo     0x424ba3
  424b33:	jge    0x424af7
  424b35:	push   ss
  424b36:	xor    ch,BYTE PTR [edi+0x6a]
  424b39:	stc    
  424b3a:	scas   al,BYTE PTR es:[edi]
  424b3b:	je     0x424b00
  424b3d:	daa    
  424b3e:	mov    eax,0xf5badaed
  424b43:	scas   eax,DWORD PTR es:[edi]
  424b44:	jnp    0x424b86
  424b46:	imul   ecx,DWORD PTR [eax+0x13],0xffffffbc
  424b4a:	xchg   esp,eax
  424b4b:	mov    esi,0xf7b110c
  424b50:	dec    esi
  424b51:	and    DWORD PTR [ebx-0xf],edi
  424b54:	pop    esp
  424b55:	(bad)  
  424b56:	es fwait
  424b58:	add    eax,0xc951813d
  424b5d:	xor    esi,edi
  424b5f:	imul   esp,DWORD PTR [ebp+0x4d],0x1c
  424b63:	pop    ss
  424b64:	cmp    DWORD PTR [edi-0xffcc94c],ecx
  424b6a:	pop    edi
  424b6b:	mov    WORD PTR [esi+0x5b282b26],ds
  424b71:	cmp    al,0x50
  424b73:	fiadd  DWORD PTR [eax+0x1f]
  424b76:	pop    edx
  424b77:	mov    al,ds:0xfac7ec0c
  424b7c:	add    ebp,esp
  424b7e:	outs   dx,BYTE PTR ds:[esi]
  424b7f:	aam    0xc7
  424b81:	xor    DWORD PTR gs:[esi+0x476bbab4],edx
  424b88:	gs in  eax,0x11
  424b8b:	xchg   esi,eax
  424b8c:	adc    bl,bh
  424b8e:	and    dl,BYTE PTR [eax]
  424b90:	mov    eax,ds:0xa245b0c1
  424b95:	jmp    0x424c14
  424b97:	pop    es
  424b98:	ins    BYTE PTR es:[edi],dx
  424b99:	gs xchg edx,eax
  424b9b:	dec    ebx
  424b9c:	mov    dh,0x18
  424b9e:	push   esp
  424b9f:	gs stos DWORD PTR es:[edi],eax
  424ba1:	js     0x424b66
  424ba3:	aaa    
  424ba4:	pusha  
  424ba5:	sub    eax,0xdd026f0d
  424baa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424bab:	add    DWORD PTR [eax-0x2b],eax
  424bae:	push   edx
  424baf:	hlt    
  424bb0:	and    al,BYTE PTR [edi]
  424bb2:	stos   DWORD PTR es:[edi],eax
  424bb3:	popf   
  424bb4:	jg     0x424b72
  424bb6:	(bad)  
  424bb7:	imul   ecx,DWORD PTR [eax-0x40d4064a],0xffffffb6
  424bbe:	sbb    DWORD PTR [ebx+0x69],0x3f
  424bc2:	popf   
  424bc3:	pop    ds
  424bc4:	icebp  
  424bc5:	(bad)  
  424bc6:	push   0xb
  424bc8:	adc    eax,DWORD PTR [esi+0x40cd1ba8]
  424bce:	sbb    esp,ebx
  424bd0:	jbe    0x424c51
  424bd2:	int    0x54
  424bd4:	enter  0x4f53,0x45
  424bd8:	icebp  
  424bd9:	(bad)  
  424bda:	xor    ebx,DWORD PTR [esi+0x2]
  424bdd:	and    DWORD PTR [ecx+ebx*4],edx
  424be0:	adc    eax,0x92233c67
  424be5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424be6:	imul   ebp,DWORD PTR [edi-0x690cce50],0xffffffda
  424bed:	mov    edx,0x585d104c
  424bf2:	test   DWORD PTR [edi-0x64c9ef31],ecx
  424bf8:	pop    ss
  424bf9:	out    dx,al
  424bfa:	xlat   BYTE PTR ds:[ebx]
  424bfb:	push   cs
  424bfc:	jb     0x424c1e
  424bfe:	ja     0x424be1
  424c00:	xor    BYTE PTR [ebp-0x4d6aeabf],ah
  424c06:	inc    ebx
  424c07:	or     eax,0x80ca698d
  424c0c:	jno    0x424be2
  424c0e:	ds test eax,0x2785b73
  424c14:	js     0x424c5f
  424c16:	sub    ecx,ebp
  424c18:	mov    fs,WORD PTR [edx]
  424c1a:	fs push esp
  424c1c:	les    edi,FWORD PTR [edx+ecx*8]
  424c1f:	xchg   edx,eax
  424c20:	mov    ds:0x394719a9,al
  424c25:	cdq    
  424c26:	mov    esi,esp
  424c28:	aam    0x74
  424c2a:	aam    0x6a
  424c2c:	cmp    al,0x79
  424c2e:	fsubr  DWORD PTR [esi]
  424c30:	shl    BYTE PTR [ebx-0x53d12eed],0x3a
  424c37:	loopne 0x424cac
  424c39:	and    BYTE PTR [edi-0x54],dh
  424c3c:	jmp    0x30b6d6c1
  424c41:	in     al,0xfd
  424c43:	fcom   QWORD PTR [esi-0x32866ed9]
  424c49:	retf   0x968e
  424c4c:	xlat   BYTE PTR ds:[ebx]
  424c4d:	pop    edx
  424c4e:	push   ebx
  424c4f:	pop    esi
  424c50:	jno    0x424c1a
  424c52:	cmp    ebp,0x4fddef3b
  424c58:	add    cl,BYTE PTR [ebp-0x9fdc021]
  424c5e:	and    al,0x2d
  424c60:	cdq    
  424c61:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  424c63:	sub    al,0x54
  424c65:	fcmovu st,st(7)
  424c67:	cmp    BYTE PTR [edi+0x19a89e89],dl
  424c6d:	fdivr  QWORD PTR [esi-0x2345eb35]
  424c73:	push   es
  424c74:	fs jg  0x424c0c
  424c77:	data16 sbb BYTE PTR [edi+0x2ff56ee7],bh
  424c7e:	aam    0x7
  424c80:	lock mov esi,0xbe0b6a94
  424c86:	loopne 0x424c36
  424c88:	xchg   ebx,eax
  424c89:	mov    eax,ds:0xe3ba5919
  424c8e:	jle    0x424c84
  424c90:	ror    DWORD PTR [edi],cl
  424c92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c93:	shl    BYTE PTR [ecx+0x4d],1
  424c96:	mov    ah,0x12
  424c98:	mov    ah,0x8f
  424c9a:	mov    dh,BYTE PTR [esp+edi*1]
  424c9d:	xchg   DWORD PTR [ebp+0x47],esp
  424ca0:	xor    dh,0x18
  424ca3:	mov    al,0xe5
  424ca5:	mov    DWORD PTR [esi+0x5741491],edi
  424cab:	mov    edi,0x414f67d6
  424cb0:	mov    ebx,0x45709122
  424cb5:	in     al,0x8d
  424cb7:	inc    esp
  424cb8:	pusha  
  424cb9:	pop    es
  424cba:	cmp    edi,ebx
  424cbc:	cmp    bl,BYTE PTR [ebp-0x657e8de3]
  424cc2:	in     eax,0xbd
  424cc4:	test   eax,0x4387f91b
  424cc9:	mov    al,BYTE PTR [esi-0x31]
  424ccc:	or     eax,0xdbee2bf8
  424cd1:	add    BYTE PTR [edi-0x7f],ah
  424cd4:	jae    0x424c76
  424cd6:	dec    ebx
  424cd7:	pop    es
  424cd8:	aam    0x67
  424cda:	mov    ecx,0x2be0f53b
  424cdf:	rcl    BYTE PTR [ebp-0xb],cl
  424ce2:	aaa    
  424ce3:	jmp    0x7b5eccf5
  424ce8:	mov    ds:0x4c0af660,eax
  424ced:	lods   eax,DWORD PTR ds:[esi]
  424cee:	aad    0x42
  424cf0:	rcl    BYTE PTR [esi+edx*4+0x41],0xb
  424cf5:	icebp  
  424cf6:	cdq    
  424cf7:	xchg   esp,eax
  424cf8:	mov    dl,0x86
  424cfa:	ja     0x424cae
  424cfc:	add    al,0x5e
  424cfe:	repnz aaa 
  424d00:	push   esp
  424d01:	mov    WORD PTR [ebp-0x70],gs
  424d04:	bswap  eax
  424d06:	push   ebx
  424d07:	pop    edx
  424d08:	xchg   edx,eax
  424d09:	fwait
  424d0a:	dec    ebp
  424d0b:	adc    edi,esi
  424d0d:	dec    ebx
  424d0e:	jno    0x424d4b
  424d10:	pop    ebx
  424d11:	pop    ebx
  424d12:	xchg   ecx,eax
  424d13:	dec    esi
  424d14:	mov    al,0xb7
  424d16:	cdq    
  424d17:	(bad)  
  424d19:	sub    esp,ebx
  424d1b:	std    
  424d1c:	sti    
  424d1d:	push   0xf75fadd4
  424d22:	cmp    al,BYTE PTR [ebx-0x4316ae7f]
  424d28:	mov    esp,0x7f0c6a94
  424d2d:	xchg   ebp,eax
  424d2e:	or     ebx,DWORD PTR [edi]
  424d30:	jbe    0x424d5c
  424d32:	add    BYTE PTR [edx],cl
  424d34:	dec    esp
  424d35:	xchg   BYTE PTR [ebx],al
  424d37:	adc    eax,0x9e4289e5
  424d3c:	hlt    
  424d3d:	xchg   edx,eax
  424d3e:	mov    esi,0x723bfeff
  424d43:	ja     0x424d81
  424d45:	pop    ecx
  424d46:	enter  0x2bd4,0x53
  424d4a:	jecxz  0x424d44
  424d4c:	pop    ecx
  424d4d:	xor    ch,al
  424d4f:	push   ebx
  424d50:	enter  0xe85d,0x26
  424d54:	lods   eax,DWORD PTR ds:[esi]
  424d55:	xchg   edx,esi
  424d57:	xlat   BYTE PTR ds:[ebx]
  424d58:	xchg   ecx,eax
  424d59:	fs xchg di,ax
  424d5c:	rol    BYTE PTR [edi],cl
  424d5e:	bound  edx,QWORD PTR [esp+esi*4]
  424d61:	adc    eax,0x8339ace4
  424d66:	jbe    0x424d23
  424d68:	ror    BYTE PTR [ebp+0x67],0xa2
  424d6c:	test   DWORD PTR [ebx-0x54ce071c],eax
  424d72:	inc    esp
  424d73:	cdq    
  424d74:	mov    bl,0x9b
  424d76:	bound  ecx,QWORD PTR [esi]
  424d78:	in     eax,0xb8
  424d7a:	add    BYTE PTR [eax],al
  424d7c:	stos   BYTE PTR es:[edi],al
  424d7d:	jo     0x424d5f
  424d7f:	dec    ecx
  424d80:	cli    
  424d81:	fldcw  WORD PTR [ebx-0x35bf70d]
  424d87:	loopne 0x424dd5
  424d89:	test   dh,cl
  424d8b:	or     eax,0x1c6e8
  424d90:	xchg   BYTE PTR [edx],al
  424d92:	add    BYTE PTR [eax],al
  424d94:	aad    0xd7
  424d96:	xchg   esp,eax
  424d97:	jno    0x424d8f
  424d99:	mov    eax,0x1e1f44b3
  424d9e:	(bad)  
  424d9f:	jp     0x424d80
  424da1:	fxch   st(3)
  424da3:	mov    cl,0x8c
  424da5:	ret    0xfd12
  424da8:	mov    al,0xbe
  424daa:	lds    esp,FWORD PTR [ebx-0x9]
  424dad:	or     al,0x52
  424daf:	(bad)  
  424db0:	push   ds
  424db1:	rcr    bl,0x32
  424db4:	mov    ecx,0x13475bd8
  424db9:	sbb    edx,ecx
  424dbb:	xor    BYTE PTR [ecx+0x70],dl
  424dbe:	in     al,0xe0
  424dc0:	int    0x2e
  424dc2:	jmp    0x424d9d
  424dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424dc5:	inc    ecx
  424dc6:	xor    dh,BYTE PTR [ecx-0x17b04ac8]
  424dcc:	push   edx
  424dcd:	ds sti 
  424dcf:	imul   ebp,DWORD PTR [edi+0x5feee2af],0x38
  424dd6:	jmp    0xfe6f8c0b
  424ddb:	popf   
  424ddc:	jmp    0xc605:0xe711a5d1
  424de3:	xchg   DWORD PTR [esi-0x18ff7ff],edi
  424de9:	inc    esp
  424dea:	push   ebp
  424deb:	ins    DWORD PTR es:[edi],dx
  424dec:	daa    
  424ded:	xor    BYTE PTR [esi],al
  424def:	xchg   DWORD PTR [eax],edx
  424df1:	sub    eax,0x5af27308
  424df6:	push   esp
  424df7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424df8:	mov    ds:0x55a3c423,eax
  424dfd:	adc    eax,0x58336580
  424e02:	lods   al,BYTE PTR ds:[esi]
  424e03:	or     ebp,edi
  424e05:	pop    ebp
  424e06:	mov    dl,0xfe
  424e08:	fmulp  st(0),st
  424e0a:	cmp    DWORD PTR [ebx-0x20e4a70d],eax
  424e10:	ja     0x424e68
  424e12:	sub    BYTE PTR [eax+0x59578743],dl
  424e18:	lea    esi,[ecx-0x53bdc67d]
  424e1e:	mov    eax,ds:0xd1b91e76
  424e23:	inc    edi
  424e24:	or     dh,BYTE PTR [edi+0x11]
  424e27:	cwde   
  424e28:	fidiv  WORD PTR [ebp-0x2e]
  424e2b:	adc    DWORD PTR [edx+0x2992746a],esi
  424e31:	dec    esi
  424e32:	dec    ebp
  424e33:	push   ebp
  424e34:	ds sbb ah,cl
  424e37:	adc    esi,esi
  424e39:	mov    bh,0xf8
  424e3b:	cmp    ah,dh
  424e3d:	cmp    al,0x47
  424e3f:	sub    DWORD PTR [edx],ecx
  424e41:	xchg   edx,eax
  424e42:	int3   
  424e43:	shl    BYTE PTR [edi+ecx*8-0x76],0x26
  424e48:	sti    
  424e49:	cmp    al,0x88
  424e4b:	fcmove st,st(7)
  424e4d:	mov    ebx,0x69b8beea
  424e52:	jne    0x424e69
  424e54:	adc    eax,0x383d9450
  424e59:	push   edx
  424e5a:	inc    esi
  424e5b:	push   esi
  424e5c:	mov    eax,0xbbb339f8
  424e61:	jp     0x424e45
  424e63:	xchg   esi,eax
  424e64:	dec    esi
  424e65:	mov    ds:0x5c4796c,al
  424e6a:	xor    edi,DWORD PTR [ebp+edx*4+0x1f]
  424e6e:	ror    BYTE PTR [ebx+ebp*2-0x65],0xcd
  424e73:	xor    ah,cl
  424e75:	sbb    ebx,DWORD PTR [edi+edi*4+0x33]
  424e79:	sub    edx,DWORD PTR [edi-0x58]
  424e7c:	test   DWORD PTR [eax-0x35],ebp
  424e7f:	mov    bl,0x11
  424e81:	aas    
  424e82:	jae    0x424e61
  424e84:	xor    bh,BYTE PTR [ebx+esi*4+0x3a9d941f]
  424e8b:	aad    0x29
  424e8d:	inc    esp
  424e8e:	push   ecx
  424e8f:	in     al,0x5a
  424e91:	push   cs
  424e92:	cli    
  424e93:	inc    esi
  424e94:	mov    ebp,DWORD PTR [eax+0x21]
  424e97:	mov    ecx,0xf52dd371
  424e9c:	(bad)  
  424e9d:	frstor [edi+0x44]
  424ea0:	fisttp WORD PTR [eax-0x27]
  424ea3:	or     al,0xaa
  424ea5:	pop    edx
  424ea6:	popa   
  424ea7:	stos   BYTE PTR es:[edi],al
  424ea8:	pop    edx
  424ea9:	mov    ebp,0x59f2ec94
  424eae:	inc    ebx
  424eaf:	jns    0x424ec2
  424eb1:	sbb    esp,ebp
  424eb3:	add    BYTE PTR [esi-0x75],cl
  424eb6:	jbe    0x424e68
  424eb8:	xchg   ecx,eax
  424eb9:	add    DWORD PTR [edx-0x3928c5a],edi
  424ebf:	out    0xcd,al
  424ec1:	xchg   ebp,eax
  424ec2:	xor    BYTE PTR [edx-0xf82f840],cl
  424ec8:	push   esi
  424ec9:	add    ah,cl
  424ecb:	stos   DWORD PTR es:[edi],eax
  424ecc:	lods   eax,DWORD PTR ds:[esi]
  424ecd:	or     esi,DWORD PTR ds:0x264817d3
  424ed3:	add    cl,bh
  424ed5:	add    eax,0x13a15531
  424eda:	or     ebx,DWORD PTR [edi]
  424edc:	(bad)  
  424edd:	aas    
  424ede:	xor    al,BYTE PTR [ebp-0x7b]
  424ee1:	leave  
  424ee2:	jb     0x424f21
  424ee4:	adc    al,0xf
  424ee6:	aam    0xeb
  424ee8:	ss jp  0x424ec4
  424eeb:	cmp    DWORD PTR [edi+0xbeff321],0xffffff89
  424ef2:	fadd   DWORD PTR [eax]
  424ef4:	(bad)  
  424ef5:	jge    0x424eb7
  424ef7:	cmp    al,0x53
  424ef9:	jmp    0x424e86
  424efb:	jbe    0x424f04
  424efd:	push   ebp
  424efe:	push   cs
  424eff:	mov    cl,0x50
  424f01:	stos   DWORD PTR es:[edi],eax
  424f02:	jb     0x424ef9
  424f04:	(bad)  
  424f05:	jo     0x424eb4
  424f07:	inc    eax
  424f08:	clc    
  424f09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f0a:	jge    0x424f65
  424f0c:	rol    bl,0x11
  424f0f:	xchg   esi,eax
  424f10:	loope  0x424f6c
  424f12:	or     al,0xcb
  424f15:	cli    
  424f16:	jmp    0x424ef8
  424f18:	outs   dx,DWORD PTR ds:[esi]
  424f19:	rol    bl,cl
  424f1b:	mov    dh,0x4b
  424f1d:	xchg   BYTE PTR [edx-0x5b],bl
  424f20:	jne    0x424f28
  424f22:	mov    WORD PTR es:[eax],es
  424f25:	sbb    cl,BYTE PTR [esp+eax*2-0x35]
  424f29:	or     DWORD PTR [ecx-0x5bd827c7],eax
  424f2f:	or     edi,DWORD PTR [eax+0x506a1029]
  424f35:	sbb    al,0x8a
  424f37:	enter  0x4f02,0xd6
  424f3b:	repz adc al,0x3e
  424f3e:	pusha  
  424f3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f40:	inc    ebx
  424f41:	or     DWORD PTR [ebp-0x53],ebp
  424f44:	aas    
  424f45:	ss std 
  424f47:	dec    edi
  424f48:	ja     0x424f76
  424f4a:	call   0xa3:0x6a1e163a
  424f51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f52:	cmp    BYTE PTR [ebp+0x6c],dh
  424f55:	jge    0x424f9a
  424f57:	mov    cl,0xeb
  424f59:	lock inc ebx
  424f5b:	retf   0x576
  424f5e:	mov    cl,0x77
  424f60:	cmc    
  424f61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f62:	adc    eax,DWORD PTR [ebx-0x1d]
  424f65:	xlat   BYTE PTR ds:[ebx]
  424f66:	(bad)  
  424f68:	add    DWORD PTR [edx-0x716931e6],esp
  424f6e:	mov    ebx,0xb9f998b2
  424f74:	cs pop ds
  424f76:	pop    ebp
  424f77:	or     BYTE PTR [edx+0x1f8ced9d],al
  424f7d:	les    ecx,FWORD PTR [ecx-0x1d7c8ed5]
  424f83:	popf   
  424f84:	(bad)  
  424f85:	pop    esp
  424f86:	inc    ecx
  424f87:	dec    ebp
  424f88:	xchg   esi,eax
  424f89:	arpl   WORD PTR [edi+0x4573e603],bp
  424f8f:	pop    esp
  424f90:	ins    BYTE PTR es:[edi],dx
  424f91:	push   ebx
  424f92:	pop    ebx
  424f93:	cmc    
  424f94:	mov    ebx,0x24951bdd
  424f99:	sbb    BYTE PTR [edi-0x8],bh
  424f9c:	pusha  
  424f9d:	mov    cx,0x5fcb
  424fa1:	loopne 0x424fb9
  424fa3:	mov    bl,0x27
  424fa5:	in     al,dx
  424fa6:	inc    ebx
  424fa7:	jb     0x424f42
  424fa9:	(bad)  
  424fab:	pop    edx
  424fac:	mov    ebp,0xd8fa274c
  424fb1:	ins    DWORD PTR es:[edi],dx
  424fb2:	xor    BYTE PTR [eax+0x75e8dc07],ch
  424fb8:	add    al,0x15
  424fba:	clc    
  424fbb:	daa    
  424fbc:	inc    ebx
  424fbd:	dec    ebp
  424fbe:	cld    
  424fbf:	mov    ds:0x1d07504e,al
  424fc4:	mov    al,0xfd
  424fc6:	cs fadd QWORD PTR fs:[ecx+0x51]
  424fcb:	ds adc ebp,edx
  424fce:	sbb    BYTE PTR [edi-0x26fdc2f6],bh
  424fd4:	pop    edi
  424fd5:	(bad)  
  424fd7:	jbe    0x424f59
  424fd9:	or     al,ch
  424fdb:	ret    
  424fdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424fdd:	bound  ebp,QWORD PTR [edi-0x4c]
  424fe0:	xchg   ebx,eax
  424fe1:	jge    0x425023
  424fe3:	jno    0x424ffb
  424fe5:	push   esi
  424fe6:	popa   
  424fe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424fe8:	test   eax,0x2fc68fac
  424fed:	in     al,0x90
  424fef:	out    dx,al
  424ff0:	dec    eax
  424ff1:	mov    eax,0x6e11ad38
  424ff6:	push   eax
  424ff7:	push   ss
  424ff8:	push   ss
  424ff9:	and    esp,DWORD PTR [eax]
  424ffb:	dec    esi
  424ffc:	imul   esi,DWORD PTR [ebx],0x15
  424fff:	mov    esp,0x5b4cc05d
  425004:	inc    ebp
  425005:	sub    al,0x81
  425007:	bound  eax,QWORD PTR [ebx-0xa]
  42500a:	xchg   ebx,eax
  42500b:	lahf   
  42500c:	aas    
  42500d:	sub    bl,ch
  42500f:	push   cs
  425010:	scas   eax,DWORD PTR es:[edi]
  425011:	popf   
  425012:	lds    esi,FWORD PTR [si]
  425015:	std    
  425016:	add    ecx,ebx
  425018:	(bad)  
  425019:	fadd   DWORD PTR [eax]
  42501b:	add    BYTE PTR [edx-0x79],cl
  42501e:	push   edx
  42501f:	dec    esp
  425020:	(bad)  
  425022:	pop    esi
  425023:	xchg   eax,esp
  425025:	js     0x424fa8
  425027:	mov    ebx,0x84d0e321
  42502c:	outs   dx,BYTE PTR ds:[esi]
  42502d:	leave  
  42502e:	add    DWORD PTR [eax],eax
  425030:	xchg   BYTE PTR [edx],al
  425032:	add    BYTE PTR [eax],al
  425034:	scas   eax,DWORD PTR es:[edi]
  425035:	xchg   ecx,eax
  425036:	test   eax,0x308b1957
  42503b:	aad    0x93
  42503d:	pop    esi
  42503e:	mov    ebp,0x8d93e9dd
  425043:	(bad)  
  425044:	(bad)  
  425045:	pop    ss
  425046:	push   edi
  425047:	and    al,0x68
  425049:	out    0x22,eax
  42504b:	mov    ebp,0xe80c30a0
  425050:	or     al,0x84
  425052:	fcom   st(1)
  425054:	addr16 repz pop edi
  425057:	bound  ebx,QWORD PTR [ecx]
  425059:	pop    eax
  42505a:	pushf  
  42505b:	retf   
  42505c:	repnz or al,0xa3
  42505f:	add    eax,0x49f7b467
  425064:	inc    eax
  425065:	fstp   TBYTE PTR [ebx]
  425067:	cvttps2pi mm6,QWORD PTR [esi-0x3c179916]
  42506e:	add    BYTE PTR [eax-0x4a7ee8c2],ah
  425074:	(bad)  
  425076:	jl     0x425054
  425078:	or     BYTE PTR [edx-0x2e],dh
  42507b:	jns    0x425072
  42507d:	dec    ebx
  42507e:	leave  
  42507f:	fidiv  WORD PTR [ebx]
  425081:	hlt    
  425082:	jl     0x4250d9
  425084:	jae    0x425092
  425086:	idiv   BYTE PTR ds:0x94f6c03a
  42508c:	nop
  42508d:	lock movups xmm7,XMMWORD PTR [ecx]
  425091:	mov    eax,ds:0xb5c468ad
  425096:	stos   DWORD PTR es:[edi],eax
  425097:	fsub   DWORD PTR [ecx-0x16]
  42509a:	jo     0x42504c
  42509c:	jmp    0xcbad:0xee358aa5
  4250a3:	push   ds
  4250a4:	mov    edx,0xd35d10b4
  4250a9:	sbb    al,0xae
  4250ab:	in     al,dx
  4250ac:	jecxz  0x42505d
  4250ae:	and    al,0x4a
  4250b0:	cmp    bh,BYTE PTR [ebp+0x43f1650b]
  4250b6:	xor    eax,0x9109340d
  4250bb:	call   0xb87:0x4b8a6e31
  4250c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4250c3:	inc    ebp
  4250c4:	jmp    0xb6d41ea9
  4250c9:	or     DWORD PTR [ecx-0xe],eax
  4250cc:	dec    ecx
  4250cd:	sbb    al,0x2
  4250cf:	mov    ebx,0xa13ce780
  4250d4:	jecxz  0x42509e
  4250d6:	scas   eax,DWORD PTR es:[edi]
  4250d7:	icebp  
  4250d8:	repnz inc eax
  4250da:	addr16 in al,dx
  4250dc:	and    DWORD PTR [ebx],ebp
  4250de:	retf   
  4250df:	fild   QWORD PTR [ebx+edi*8-0x2c]
  4250e3:	mov    esi,0xdd937a65
  4250e8:	fisubr DWORD PTR [ebx]
  4250ea:	cmp    al,0xfb
  4250ec:	cmps   WORD PTR gs:[esi],WORD PTR es:[edi]
  4250ef:	cmp    BYTE PTR [ecx],bh
  4250f1:	xor    cl,BYTE PTR [ebp+eax*8-0x71168995]
  4250f8:	and    dh,BYTE PTR [ebp-0x77]
  4250fb:	adc    al,0xf7
  4250fd:	clc    
  4250fe:	inc    ebx
  4250ff:	pop    ecx
  425100:	adc    edi,ebx
  425102:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425104:	out    0x2a,al
  425106:	fdivr  DWORD PTR [edi+0x1b]
  425109:	lock retf 
  42510b:	cwde   
  42510c:	repz inc eax
  42510e:	mov    ecx,0xc2f358e9
  425114:	popf   
  425115:	push   ss
  425116:	mov    ch,0x9b
  425118:	inc    eax
  425119:	mov    ds:0x2f363fde,al
  42511e:	into   
  42511f:	mov    ch,0x32
  425121:	sub    BYTE PTR [edx*4-0x121068b5],ah
  425128:	push   ds
  425129:	push   0xfffffff7
  42512b:	add    eax,0x66e69b60
  425130:	data16 arpl WORD PTR cs:[ebx-0x3619dfac],dx
  425138:	test   eax,ecx
  42513a:	xor    bl,0x94
  42513d:	mov    bh,0x43
  42513f:	pusha  
  425140:	push   0x5c
  425142:	pop    ds
  425143:	dec    eax
  425144:	add    eax,0x482473a8
  425149:	and    ebp,DWORD PTR [eax+0x62b9400e]
  42514f:	data16 ja 0x42519b
  425152:	xchg   edx,eax
  425153:	cmp    eax,0x8d15b67d
  425158:	sti    
  425159:	sub    DWORD PTR [ecx],ecx
  42515b:	adc    edx,edi
  42515d:	jo     0x425145
  42515f:	xchg   ebx,eax
  425160:	(bad)  
  425161:	stos   DWORD PTR es:[edi],eax
  425162:	pop    ds
  425163:	add    eax,0x8874bb35
  425168:	xchg   esp,eax
  425169:	adc    eax,DWORD PTR [edi]
  42516b:	mov    ds:0xf3a8fb74,eax
  425170:	cmp    BYTE PTR [esi+0x35493d8f],0x4a
  425177:	or     al,0x98
  425179:	sub    ax,0xa8f7
  42517d:	mov    bl,0x74
  42517f:	mov    edi,?
  425181:	add    DWORD PTR [edx+0x4a19d21a],eax
  425187:	mov    ch,0xb8
  425189:	call   0x20ffc5dc
  42518e:	mov    ah,BYTE PTR fs:[edx+0x5b0eb3c1]
  425195:	mov    esi,0x2d4dd842
  42519a:	retf   
  42519b:	retf   
  42519c:	call   0xfe06:0x8b0d7aba
  4251a3:	shl    BYTE PTR [ebx-0x2f],1
  4251a6:	pop    eax
  4251a7:	dec    esi
  4251a8:	(bad)  
  4251a9:	jnp    0x425228
  4251ab:	(bad)  
  4251ac:	cld    
  4251ad:	jl     0x425167
  4251af:	dec    ecx
  4251b0:	(bad)  
  4251b3:	in     al,dx
  4251b4:	ss pop ds
  4251b6:	push   ds
  4251b7:	pop    esp
  4251b8:	xchg   ebp,eax
  4251b9:	sbb    al,0xa4
  4251bb:	mov    ds:0xecaea7d1,al
  4251c0:	adc    bh,BYTE PTR [ecx]
  4251c2:	(bad)  
  4251c3:	aad    0x6f
  4251c5:	sbb    al,BYTE PTR [esi+0x48bab51e]
  4251cb:	mov    ebp,DWORD PTR [edx+0x2f8c2517]
  4251d1:	pop    ss
  4251d2:	aad    0xce
  4251d4:	aam    0x53
  4251d6:	pop    edx
  4251d7:	mov    esi,0x6f00cb89
  4251dc:	fcmovnu st,st(0)
  4251de:	lock int 0x16
  4251e1:	fdiv   QWORD PTR [ecx]
  4251e3:	(bad)  
  4251e5:	pushf  
  4251e6:	or     al,0x30
  4251e8:	bound  eax,QWORD PTR [edi]
  4251ea:	aaa    
  4251eb:	jg     0x42525a
  4251ed:	or     al,0x1c
  4251ef:	jmp    0x4251d4
  4251f1:	push   ds
  4251f2:	div    BYTE PTR [edi+0x46d12e6c]
  4251f8:	popf   
  4251f9:	stos   DWORD PTR es:[edi],eax
  4251fa:	nop
  4251fb:	std    
  4251fc:	push   esp
  4251fd:	aad    0x20
  4251ff:	int    0x3e
  425201:	loop   0x4251e1
  425203:	lock add cl,BYTE PTR [bp+si]
  425207:	add    edx,DWORD PTR [eax-0x4398fada]
  42520d:	(bad)  
  42520e:	push   esp
  42520f:	and    DWORD PTR [esi+0x404ac5de],eax
  425215:	mov    ds:0x6be34e5b,eax
  42521a:	cwde   
  42521b:	or     BYTE PTR [ebx+0x75c28d24],cl
  425221:	pcmpgtb mm7,QWORD PTR [edx]
  425224:	cmp    DWORD PTR [eax],edx
  425226:	cmp    dl,bl
  425228:	add    eax,0x1b526f8b
  42522d:	add    eax,0x876dfba1
  425232:	call   0x5d217c58
  425237:	sub    esp,esp
  425239:	cmp    eax,0x3633c5f7
  42523e:	xor    BYTE PTR [ebp+0x29ae1a70],ch
  425244:	inc    ebp
  425245:	sahf   
  425246:	jae    0x4251d9
  425248:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425249:	arpl   WORD PTR [edx-0x4723cdc0],bx
  42524f:	scas   eax,DWORD PTR es:[edi]
  425250:	pop    edx
  425251:	mov    edi,0x32cb6fbb
  425256:	xor    BYTE PTR [ecx],ch
  425258:	pushf  
  425259:	jmp    0x42521f
  42525b:	dec    edi
  42525c:	sub    DWORD PTR [edi+0x708a1430],ebp
  425262:	lds    eax,FWORD PTR cs:[eax+0x61]
  425266:	shl    BYTE PTR ds:0xf3cff7dd,1
  42526c:	xor    cl,BYTE PTR [ebx+edx*4-0x34]
  425270:	cmc    
  425271:	and    BYTE PTR [eax-0x706834a4],bl
  425277:	adc    dh,cl
  425279:	(bad)  
  42527a:	int    0x6b
  42527c:	mov    esp,0x5a55ca89
  425281:	(bad)
  425284:	xchg   ebp,eax
  425285:	push   ss
  425286:	sbb    DWORD PTR [edi*4-0x3864da3d],ebp
  42528d:	mov    ds:0x501e1269,al
  425292:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425293:	push   ss
  425294:	in     al,0x8c
  425296:	mov    bh,0x1b
  425298:	cli    
  425299:	mov    al,0x27
  42529b:	not    ah
  42529d:	or     BYTE PTR [eax+0x287d30f1],bh
  4252a3:	mov    esp,DWORD PTR [edi]
  4252a5:	(bad)  
  4252a6:	repnz fisubr DWORD PTR ds:0x63e8335f
  4252ad:	jp     0x425276
  4252af:	data16 jecxz 0x42531e
  4252b2:	sbb    cl,dl
  4252b4:	mov    dl,0x3c
  4252b6:	ins    DWORD PTR es:[edi],dx
  4252b7:	cli    
  4252b8:	sub    DWORD PTR [edi-0x6df60000],0x7c
  4252bf:	cmp    esp,edi
  4252c1:	dec    DWORD PTR [edi-0x4d]
  4252c4:	in     al,dx
  4252c5:	jo     0x42527e
  4252c7:	(bad)  
  4252c8:	hlt    
  4252c9:	dec    esp
  4252ca:	pop    ecx
  4252cb:	das    
  4252cc:	hlt    
  4252cd:	retf   
  4252ce:	add    DWORD PTR [eax],eax
  4252d0:	xchg   BYTE PTR [edx],al
  4252d2:	add    BYTE PTR [eax],al
  4252d4:	or     ah,dh
  4252d6:	mov    bh,0xfb
  4252d8:	adc    eax,0x96d38df8
  4252dd:	jne    0x42530c
  4252df:	mul    BYTE PTR [ebp-0x8]
  4252e2:	pop    ds
  4252e3:	jle    0x42529f
  4252e5:	pusha  
  4252e6:	adc    BYTE PTR [eax-0x31],bl
  4252e9:	aam    0x78
  4252eb:	jbe    0x425336
  4252ed:	mov    edi,0x26377f83
  4252f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4252f3:	pop    ss
  4252f4:	cmp    al,0xbc
  4252f6:	nop
  4252f7:	sub    BYTE PTR [ebp+0x4],dl
  4252fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4252fb:	std    
  4252fc:	jl     0x425372
  4252fe:	(bad)  
  4252ff:	popa   
  425300:	in     al,dx
  425301:	stos   DWORD PTR es:[edi],eax
  425302:	outs   dx,BYTE PTR ds:[esi]
  425303:	dec    esi
  425304:	stos   BYTE PTR es:[edi],al
  425305:	cwde   
  425306:	fsub   DWORD PTR [eax+0x49]
  425309:	in     eax,dx
  42530a:	dec    eax
  42530b:	jg     0x4252a7
  42530d:	lock scas al,BYTE PTR es:[edi]
  42530f:	push   0xb37205f6
  425314:	sti    
  425315:	pop    bp
  425317:	(bad)  
  425318:	enter  0xef6d,0x37
  42531c:	jne    0x425364
  42531e:	sub    esi,DWORD PTR [esi]
  425320:	inc    ebp
  425321:	pushf  
  425322:	mov    dh,0x1e
  425324:	pop    ebp
  425325:	cmp    cl,BYTE PTR [ecx-0x6187ea2e]
  42532b:	push   ebx
  42532c:	jnp    0x425355
  42532e:	sub    eax,0x837963
  425333:	push   0xbe3154a
  425338:	xor    eax,0xb440cc60
  42533d:	xchg   ecx,eax
  42533e:	sahf   
  42533f:	(bad)  
  425340:	mov    bh,0x3d
  425342:	pop    ebp
  425343:	mul    DWORD PTR [esi-0x4b]
  425346:	cmc    
  425347:	pop    esi
  425348:	push   ecx
  425349:	sti    
  42534a:	int    0x50
  42534c:	neg    DWORD PTR [ecx]
  42534e:	xor    DWORD PTR [bx+0x69f4],0x3d
  425354:	icebp  
  425355:	adc    eax,0xb604b5f6
  42535a:	adc    eax,0xac71cd15
  42535f:	call   0x3aa:0xdb916afc
  425366:	cld    
  425367:	jl     0x425389
  425369:	mov    es,WORD PTR [ecx+0x77]
  42536c:	xor    al,0x5f
  42536e:	adc    bl,ch
  425370:	out    0x8f,ax
  425373:	in     eax,0x80
  425375:	in     al,dx
  425376:	cld    
  425377:	fwait
  425378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425379:	loop   0x42532a
  42537b:	jmp    0x4253c5
  42537d:	icebp  
  42537e:	fs pop es
  425380:	test   al,0xef
  425382:	ror    DWORD PTR [ebp+0x0],cl
  425385:	inc    esp
  425386:	push   ss
  425387:	test   eax,0x2fde8123
  42538c:	jae    0x425361
  42538e:	or     DWORD PTR [esi+0x5741f7d2],0xc9e92ac
  425398:	fimul  WORD PTR [ecx-0x1d]
  42539b:	out    0xd7,eax
  42539d:	mov    ebp,0x65549371
  4253a2:	sbb    ecx,eax
  4253a4:	mov    al,0x3d
  4253a6:	(bad)  
  4253a7:	cmp    DWORD PTR [esi+0xe],esp
  4253aa:	pop    esp
  4253ab:	rol    edx,cl
  4253ad:	(bad)  
  4253ae:	fisttp QWORD PTR [ebx]
  4253b0:	push   0x6e1b63eb
  4253b5:	jb     0x425428
  4253b7:	inc    edx
  4253b8:	sar    BYTE PTR [ecx],0xf
  4253bb:	cld    
  4253bc:	pop    edi
  4253bd:	sahf   
  4253be:	dec    ebp
  4253bf:	pop    edx
  4253c0:	(bad)  
  4253c1:	scas   eax,DWORD PTR es:[edi]
  4253c2:	push   cs
  4253c3:	aad    0x86
  4253c5:	jl     0x425428
  4253c7:	mov    ch,0xda
  4253c9:	jg     0x4253b3
  4253cb:	(bad)
  4253ce:	mov    ds:0xd1e8d9d,al
  4253d3:	and    dh,BYTE PTR [edi-0x419d4abd]
  4253d9:	mov    ds:0x2604b965,al
  4253de:	pop    ds
  4253df:	jo     0x4253b0
  4253e1:	and    BYTE PTR [ebx+0x6e],ah
  4253e4:	fisubr WORD PTR [eax+0x67f4cc03]
  4253ea:	and    eax,0x88420a10
  4253ef:	imul   ebx,DWORD PTR [ecx+eax*1+0x24],0x1ddee8ef
  4253f7:	shr    BYTE PTR [ebp+0x3],1
  4253fa:	int    0xe9
  4253fc:	mov    eax,ds:0xe6ccafe
  425401:	push   0x78
  425403:	mov    ebp,0x6a1601a4
  425408:	pop    ds
  425409:	sbb    al,BYTE PTR [esi+0x6987aa0a]
  42540f:	push   es
  425410:	mov    ss,esi
  425412:	mov    DWORD PTR [eax+0x47],esi
  425415:	cmc    
  425416:	mov    BYTE PTR [edi-0x3972aa90],0xa3
  42541d:	sub    edi,DWORD PTR [esi+ebx*1+0x3c]
  425421:	popa   
  425422:	ins    BYTE PTR es:[edi],dx
  425423:	cld    
  425424:	cmp    dl,BYTE PTR [eax-0x71]
  425427:	mov    cs,WORD PTR [eax]
  425429:	aas    
  42542a:	cs xchg dl,ah
  42542d:	mov    ah,0x99
  42542f:	ss cli 
  425431:	mov    ch,cl
  425433:	outs   dx,DWORD PTR ds:[esi]
  425434:	cmp    BYTE PTR ds:0x3cb2bcb,cl
  42543a:	jecxz  0x4254aa
  42543c:	int    0xba
  42543e:	pop    esi
  42543f:	icebp  
  425440:	loope  0x4253d4
  425442:	gs xor eax,0xeadbd113
  425448:	pop    ss
  425449:	xchg   esi,eax
  42544a:	test   eax,0xec98f5a9
  42544f:	jmp    0x4a98:0x850b53df
  425456:	mov    ds:0x346eaebd,eax
  42545b:	xlat   BYTE PTR ds:[ebx]
  42545c:	dec    esi
  42545d:	and    esp,DWORD PTR [edi-0x28]
  425460:	(bad)  [ebp-0x59c20898]
  425466:	jae    0x42541e
  425468:	adc    eax,0x7c0ddaad
  42546d:	mov    esp,0x5689575e
  425472:	fsubr  DWORD PTR [ebx-0x52ddea61]
  425478:	(bad)  
  42547a:	push   ss
  42547b:	jmp    0x2326bca7
  425480:	shl    DWORD PTR [edi+0x3a],0xb7
  425484:	das    
  425485:	ret    0x2974
  425488:	lods   al,BYTE PTR ds:[esi]
  425489:	call   0xbf43e432
  42548e:	or     ebx,edx
  425490:	enter  0xabda,0xb2
  425494:	pop    esi
  425495:	popa   
  425496:	and    esi,DWORD PTR [edi+0x17]
  425499:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42549a:	ret    0x67c2
  42549d:	test   eax,0xd503a131
  4254a2:	pop    es
  4254a3:	adc    al,BYTE PTR [eax]
  4254a5:	ds scas eax,DWORD PTR es:[edi]
  4254a7:	mov    WORD PTR [edi],fs
  4254a9:	mov    esi,0xd02dc5c9
  4254ae:	rcr    DWORD PTR [esi-0x4ce5529d],1
  4254b4:	cmp    al,0x27
  4254b6:	xchg   edi,eax
  4254b7:	ret    0x34d9
  4254ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254bb:	push   esi
  4254bc:	cld    
  4254bd:	inc    esp
  4254be:	push   0xbca90eab
  4254c3:	mov    DWORD PTR [esi],eax
  4254c5:	dec    esi
  4254c6:	dec    esp
  4254c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254c8:	cmp    edx,DWORD PTR [eax-0x45fd9824]
  4254ce:	push   0xc2f73f88
  4254d3:	pop    edx
  4254d4:	inc    esi
  4254d5:	popf   
  4254d6:	aas    
  4254d7:	std    
  4254d8:	adc    BYTE PTR [ebx],dl
  4254da:	bnd jmp 0x425519
  4254dd:	mov    dl,0x6a
  4254df:	popa   
  4254e0:	out    0x53,eax
  4254e2:	jmp    0x33f2fd4
  4254e7:	or     dl,cl
  4254e9:	sub    DWORD PTR [esi+eax*8+0x17],0x5e
  4254ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254ef:	push   esp
  4254f0:	pop    ebx
  4254f1:	xor    edx,0x992d3473
  4254f7:	aam    0x3b
  4254f9:	pop    eax
  4254fa:	xor    al,0xa5
  4254fc:	xchg   edx,eax
  4254fd:	in     al,0x48
  4254ff:	hlt    
  425500:	aad    0x2d
  425502:	mov    al,0x82
  425504:	std    
  425505:	pop    esi
  425506:	pop    eax
  425507:	lods   eax,DWORD PTR ds:[esi]
  425508:	test   eax,0xcbe23dca
  42550d:	jnp    0x425495
  42550f:	or     BYTE PTR [esi+0x6fb3896f],0xdd
  425516:	xchg   ebx,eax
  425517:	ret    
  425518:	jno    0x4254fa
  42551a:	inc    ebx
  42551b:	inc    ecx
  42551c:	test   DWORD PTR [esi+0x18],ebx
  42551f:	cld    
  425520:	scas   eax,DWORD PTR es:[edi]
  425521:	pushf  
  425522:	dec    esp
  425523:	xlat   BYTE PTR ds:[ebx]
  425524:	adc    eax,0x91b74696
  425529:	cld    
  42552a:	sbb    DWORD PTR [eax],edx
  42552c:	(bad)  
  42552d:	mov    ebx,cs
  42552f:	xchg   ecx,eax
  425530:	sub    ebx,DWORD PTR [edi]
  425532:	cwde   
  425533:	mov    al,0x41
  425535:	xor    ch,BYTE PTR [edx+0x26]
  425538:	pop    es
  425539:	stc    
  42553a:	call   0x2195b293
  42553f:	(bad)  
  425540:	mov    ds:0xec5a8405,al
  425545:	mov    bh,0xb
  425547:	out    0xc7,eax
  425549:	adc    ecx,eax
  42554b:	sub    al,BYTE PTR [ebx+edi*2-0x44d61e79]
  425552:	imul   edx,DWORD PTR [ecx+0x34],0xfffffffa
  425556:	sub    DWORD PTR [edi],ebx
  425558:	mov    ebx,0xc30000a0
  42555d:	and    ecx,edx
  42555f:	dec    eax
  425560:	repz clc 
  425562:	fld    TBYTE PTR [ebx+0x202892a0]
  425568:	cmp    eax,0x7a4e61da
  42556d:	into   
  42556e:	add    DWORD PTR [eax],eax
  425570:	xchg   BYTE PTR [edx],al
  425572:	add    BYTE PTR [eax],al
  425574:	cmp    eax,0xabedacf0
  425579:	icebp  
  42557a:	bound  esp,QWORD PTR [edx+0x37]
  42557d:	xor    ah,cl
  42557f:	pop    es
  425580:	nop
  425581:	fld    QWORD PTR [ebp+0x7c75077b]
  425587:	fmul   st,st(2)
  425589:	scas   al,BYTE PTR es:[edi]
  42558a:	sar    DWORD PTR [eax+esi*8],0xef
  42558e:	adc    eax,DWORD PTR [esi]
  425590:	jmp    0x9ded:0x7abe4207
  425597:	shl    DWORD PTR [eax],cl
  425599:	pop    esi
  42559a:	add    ebx,DWORD PTR cs:[eax-0x6a]
  42559e:	xor    dl,BYTE PTR [edi]
  4255a0:	mov    ebx,0x2d17cfc6
  4255a5:	cmp    al,0x9e
  4255a7:	clc    
  4255a8:	retf   0xa4cf
  4255ab:	jmp    0x4255a2
  4255ad:	fisub  DWORD PTR [ebx-0x6c4bd69a]
  4255b3:	sbb    al,0xa1
  4255b5:	hlt    
  4255b6:	dec    eax
  4255b7:	(bad)  
  4255b8:	int3   
  4255b9:	cld    
  4255ba:	mov    ebx,0xce8f0c3c
  4255bf:	cmc    
  4255c0:	clc    
  4255c1:	cdq    
  4255c2:	cmp    eax,DWORD PTR [edx+0x4c71a708]
  4255c8:	(bad)  
  4255c9:	dec    edx
  4255ca:	out    dx,al
  4255cb:	inc    ebx
  4255cc:	data16 fbstp TBYTE PTR [edx+0x51]
  4255d0:	xchg   BYTE PTR [edx-0x65],ah
  4255d3:	ja     0x42556a
  4255d5:	(bad)  
  4255d6:	std    
  4255d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4255d8:	pop    ss
  4255d9:	hlt    
  4255da:	fild   QWORD PTR [edi-0x24]
  4255dd:	push   ss
  4255de:	fwait
  4255df:	sbb    eax,0xdbf911b5
  4255e4:	inc    DWORD PTR [ecx]
  4255e6:	test   eax,0x8a2c5803
  4255eb:	in     al,0x17
  4255ed:	mov    ebp,0xdc5749fa
  4255f2:	cdq    
  4255f3:	leave  
  4255f4:	push   ebx
  4255f5:	mov    cl,0x3e
  4255f7:	fwait
  4255f8:	dec    esi
  4255f9:	xor    eax,0x3b744660
  4255fe:	adc    bl,BYTE PTR [esi]
  425600:	mov    eax,0x9fcdc2c8
  425605:	xchg   dl,dh
  425607:	cmp    dh,dl
  425609:	adc    eax,0xb62a38aa
  42560e:	add    DWORD PTR [ecx-0x1d],edi
  425611:	aad    0x5
  425613:	and    DWORD PTR [ecx],ebx
  425615:	pop    edi
  425616:	nop
  425617:	inc    ecx
  425618:	ds sub eax,0x254b53f4
  42561e:	mov    ebx,0x6fb01335
  425623:	pop    ds
  425624:	arpl   dx,bx
  425626:	nop
  425627:	pop    ebx
  425628:	and    eax,DWORD PTR [eax+edi*8-0xc]
  42562c:	daa    
  42562d:	imul   esp,DWORD PTR [ebp-0x58],0x7c
  425631:	xlat   BYTE PTR ds:[ebx]
  425632:	cld    
  425633:	arpl   WORD PTR [edx],sp
  425635:	cmp    al,0x6
  425637:	ja     0x425603
  425639:	jnp    0x425660
  42563b:	in     al,0x9c
  42563d:	sti    
  42563e:	test   eax,0x4ba5e805
  425643:	int    0x77
  425645:	imul   eax
  425647:	ja     0x425676
  425649:	jmp    0xfea987eb
  42564e:	adc    ch,cl
  425650:	jl     0x425625
  425652:	or     eax,esi
  425654:	or     eax,0x10e01b76
  425659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42565a:	cld    
  42565b:	sahf   
  42565c:	test   eax,0x8e46bb3b
  425661:	repz add dl,BYTE PTR [edx+0x4f]
  425665:	dec    edx
  425666:	test   al,0xca
  425668:	mov    esp,0xbf48c622
  42566d:	fdiv   DWORD PTR [edi-0x80]
  425670:	jne    0x425657
  425672:	xchg   ch,ch
  425674:	push   0xffffff96
  425676:	shl    BYTE PTR [edx+0x65],1
  425679:	popf   
  42567a:	out    0x52,al
  42567c:	mov    ah,dl
  42567e:	stos   DWORD PTR es:[edi],eax
  42567f:	mov    dl,0xcc
  425681:	and    BYTE PTR [edi],dl
  425683:	in     al,dx
  425684:	dec    ecx
  425685:	repz push esi
  425687:	dec    eax
  425688:	push   es
  425689:	je     0x42566d
  42568b:	adc    eax,0xeb2f94f6
  425690:	(bad)  
  425691:	adc    al,0x2c
  425693:	into   
  425694:	int    0xbd
  425696:	std    
  425697:	cmp    dh,BYTE PTR [edx+ecx*8+0x58f9991d]
  42569e:	pop    ebp
  42569f:	mov    ah,BYTE PTR es:[ecx-0x2b]
  4256a3:	lods   al,BYTE PTR ds:[esi]
  4256a4:	xor    DWORD PTR [esi+ebx*4],esp
  4256a7:	xchg   edi,eax
  4256a8:	out    dx,eax
  4256a9:	or     al,0xad
  4256ab:	dec    esi
  4256ac:	and    cl,BYTE PTR [ebp*2+0x14fe728c]
  4256b3:	inc    eax
  4256b4:	dec    ebx
  4256b5:	pop    ebp
  4256b6:	mov    ds:0xca623810,eax
  4256bb:	jge    0x425696
  4256bd:	adc    bl,cl
  4256bf:	fstp   DWORD PTR [ecx-0x488bbe9c]
  4256c5:	jmp    0x42567b
  4256c7:	cmp    dh,BYTE PTR [esi]
  4256c9:	movhps xmm4,QWORD PTR [edi]
  4256cc:	fistp  QWORD PTR [ebp+0x3d0cee4f]
  4256d2:	mov    ah,0xc0
  4256d4:	adc    bh,BYTE PTR [esi+0x2074ad3]
  4256da:	mov    ebx,0x327b46f2
  4256df:	pop    ecx
  4256e0:	mov    ds:0xb7f462ba,al
  4256e5:	sbb    cl,BYTE PTR [ecx-0x4a9e72a]
  4256eb:	xor    eax,0x966ac7cf
  4256f0:	jge    0x425696
  4256f2:	rcr    BYTE PTR [edx+0x54],cl
  4256f5:	pop    es
  4256f6:	push   edi
  4256f7:	add    al,0x51
  4256f9:	jbe    0x4256e0
  4256fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4256fc:	xor    ch,BYTE PTR [ecx+0x88a4fd1]
  425702:	aas    
  425703:	pusha  
  425704:	cmp    esp,DWORD PTR [eax]
  425706:	lds    esp,FWORD PTR [eax]
  425708:	out    0x8c,eax
  42570a:	rcl    BYTE PTR [ecx+0x1c],cl
  42570d:	out    0xbe,eax
  42570f:	test   eax,0xe253ac
  425714:	cmp    edi,DWORD PTR [edi]
  425716:	lock not DWORD PTR [eax]
  425719:	mov    ecx,0x2c6d94b5
  42571e:	mov    ds:0xe740a1b5,al
  425723:	mov    eax,ds:0xdc9ee874
  425728:	cwde   
  425729:	clc    
  42572a:	mov    esi,0x657561d8
  42572f:	add    al,0xc0
  425731:	sahf   
  425732:	add    DWORD PTR [eax+edi*2],ecx
  425735:	js     0x425720
  425737:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425738:	mov    ebp,0x13fee733
  42573d:	or     ah,BYTE PTR [ebx]
  42573f:	popf   
  425740:	pop    ebx
  425741:	les    edx,FWORD PTR [edx+eiz*8]
  425744:	mov    ah,0x8a
  425746:	mov    dl,0x91
  425748:	and    cl,dh
  42574a:	cmp    al,0xa1
  42574c:	cmc    
  42574d:	fiadd  DWORD PTR [ebx]
  42574f:	sbb    al,0xf6
  425751:	and    BYTE PTR [eax+edi*2],bh
  425754:	cmp    BYTE PTR [edi],al
  425756:	cld    
  425757:	dec    edx
  425758:	mov    ss,WORD PTR [esi]
  42575a:	mov    ch,0x3b
  42575c:	fwait
  42575d:	inc    esp
  42575e:	leave  
  42575f:	popa   
  425760:	and    BYTE PTR [edi+0x63],dh
  425763:	cmp    eax,0x798837b8
  425768:	iret   
  425769:	pop    ecx
  42576a:	fild   QWORD PTR [edx+0x7260734e]
  425770:	xor    eax,DWORD PTR [eax]
  425772:	dec    edi
  425773:	or     al,0x1b
  425775:	ins    BYTE PTR es:[edi],dx
  425776:	jp     0x425708
  425778:	or     edi,DWORD PTR [eax]
  42577a:	xor    eax,ebx
  42577c:	clc    
  42577d:	iret   
  42577e:	bound  edi,QWORD PTR [edi]
  425780:	test   eax,0xda3579a8
  425785:	inc    esp
  425786:	fwait
  425787:	not    DWORD PTR [edx]
  425789:	dec    ebx
  42578a:	fmulp  st(7),st
  42578c:	repnz loopne 0x425798
  42578f:	sbb    eax,0x11f1dec4
  425794:	lock mov dh,0x59
  425797:	(bad)
  42579c:	lss    edx,FWORD PTR [ecx+0x6d]
  4257a0:	je     0x425724
  4257a2:	sahf   
  4257a3:	(bad)  
  4257a4:	push   esi
  4257a5:	push   esp
  4257a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257a8:	jb     0x4257a4
  4257aa:	mov    DWORD PTR ss:[edi+0x98556a0],ebp
  4257b1:	outs   dx,BYTE PTR ds:[esi]
  4257b2:	fisubr DWORD PTR [eax-0x2a60bc9]
  4257b8:	aad    0x34
  4257ba:	or     ebp,DWORD PTR [esi+ebx*8-0x75411be8]
  4257c1:	sub    dl,ah
  4257c3:	adc    ebp,DWORD PTR [ebx]
  4257c5:	pushf  
  4257c6:	pop    eax
  4257c7:	fnsave [esi-0x4b9ff713]
  4257cd:	nop
  4257ce:	dec    edx
  4257cf:	pop    ss
  4257d0:	and    esp,DWORD PTR [ebx+0x5e]
  4257d3:	aam    0xbd
  4257d5:	ins    BYTE PTR es:[edi],dx
  4257d6:	(bad)  
  4257d7:	ficomp DWORD PTR [ebx-0x3179876]
  4257dd:	mov    ds:0x74b55427,al
  4257e2:	in     eax,0x6f
  4257e4:	jno    0x4257aa
  4257e6:	add    al,0x30
  4257e8:	adc    DWORD PTR [eax+eiz*4+0x7e8f47ea],0x1c9ec458
  4257f3:	pop    ecx
  4257f4:	fsubr  DWORD PTR [ecx-0x22d64e4d]
  4257fa:	add    BYTE PTR [eax],al
  4257fc:	call   0x9eff:0xefe9ef59
  425803:	jnp    0x425848
  425805:	pop    ebp
  425806:	pop    esp
  425807:	mov    cl,0xa4
  425809:	aaa    
  42580a:	mov    bl,0x50
  42580c:	add    cl,dl
  42580e:	add    DWORD PTR [eax],eax
  425810:	xchg   BYTE PTR [edx],al
  425812:	add    BYTE PTR [eax],al
  425814:	cmp    eax,0x97c114be
  425819:	daa    
  42581a:	add    BYTE PTR [eax-0x68c28353],ch
  425820:	test   DWORD PTR [eax+edi*1+0x73b6ff5e],ebx
  425827:	push   esp
  425828:	sbb    ebx,edi
  42582a:	fisubr DWORD PTR [ecx+0x878f15]
  425830:	fwait
  425831:	or     ebp,DWORD PTR [ecx]
  425833:	or     BYTE PTR [edx],dh
  425835:	dec    ecx
  425836:	lahf   
  425837:	(bad)  
  425838:	push   ecx
  425839:	inc    ecx
  42583a:	mov    al,0xb5
  42583c:	dec    ebp
  42583d:	sbb    bh,dl
  42583f:	hlt    
  425840:	lods   al,BYTE PTR ds:[esi]
  425841:	sub    al,0xbf
  425843:	cdq    
  425844:	je     0x4257de
  425846:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425847:	fild   DWORD PTR [eax-0x2db40c42]
  42584d:	rcl    DWORD PTR [edx+0x54],0x47
  425851:	mov    ds:0x757491e9,eax
  425856:	xchg   esp,eax
  425857:	int3   
  425858:	jnp    0x42586a
  42585a:	shl    BYTE PTR [edx-0x22],1
  42585d:	cdq    
  42585e:	cmp    BYTE PTR [eax+ebp*2-0x7e],cl
  425862:	into   
  425863:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425865:	imul   ebx,DWORD PTR [eax-0x2b],0xffffffea
  425869:	or     DWORD PTR [edx],edi
  42586b:	call   0x44b7:0x5417aadd
  425872:	sub    cl,BYTE PTR [edx+0x54]
  425875:	rol    edi,0x42
  425878:	test   eax,0x9ced279b
  42587d:	shl    bh,cl
  42587f:	in     al,0x75
  425881:	mov    ch,0xef
  425883:	pop    ss
  425884:	mov    eax,0x763f50a3
  425889:	xchg   esi,eax
  42588a:	adc    esp,DWORD PTR [ebx+ecx*8-0x42]
  42588e:	adc    BYTE PTR [ecx+0x1aa4b3b9],cl
  425894:	push   edi
  425895:	mov    ebp,0x66ea48d0
  42589a:	sub    BYTE PTR [edx+0x24b50f6d],bh
  4258a0:	pop    ebp
  4258a1:	mov    DWORD PTR [eax+0x550bb8d5],ebp
  4258a7:	and    eax,0x2d40ebce
  4258ac:	pusha  
  4258ad:	or     al,0x99
  4258af:	loopne 0x4258eb
  4258b1:	xor    DWORD PTR es:[edx+0x76],esp
  4258b5:	lods   eax,DWORD PTR ds:[esi]
  4258b6:	shr    DWORD PTR [edx+eax*4+0x77597bab],1
  4258bd:	cmp    DWORD PTR [esi+eiz*2-0xbacf902],ebx
  4258c4:	fsin   
  4258c6:	ret    
  4258c7:	shl    DWORD PTR [edi-0x1a],1
  4258ca:	mov    ebp,0xeefe8f34
  4258cf:	sbb    al,0x8e
  4258d1:	jge    0x425951
  4258d3:	mov    edx,0x677f6316
  4258d8:	mov    BYTE PTR [ecx],dh
  4258da:	jne    0x4258e1
  4258dc:	pop    ecx
  4258dd:	mov    ebx,0xcd1d67c4
  4258e2:	jge    0x4258e1
  4258e4:	push   0x114c37ac
  4258e9:	jo     0x425915
  4258eb:	push   0x31
  4258ed:	inc    ebx
  4258ee:	into   
  4258ef:	xchg   esi,eax
  4258f0:	inc    ecx
  4258f1:	jecxz  0x42596c
  4258f3:	ss clc 
  4258f5:	out    dx,al
  4258f6:	add    BYTE PTR [ebx-0x2647589d],ch
  4258fc:	mov    ebp,0x6a040887
  425901:	sbb    DWORD PTR [edi-0x7f],0xffffff88
  425905:	pushf  
  425906:	and    al,0xd6
  425908:	jle    0x42590d
  42590a:	add    ecx,DWORD PTR [edi]
  42590c:	mov    ds:0x859bf4b9,al
  425911:	mov    al,ds:0x857bf1a9
  425916:	(bad)  
  425917:	mov    dl,0x6d
  425919:	pop    edi
  42591a:	xchg   ebp,eax
  42591b:	ficomp DWORD PTR [edi]
  42591d:	pop    edi
  42591e:	daa    
  42591f:	sub    DWORD PTR [esi],edi
  425921:	pop    es
  425922:	outs   dx,DWORD PTR ds:[esi]
  425923:	push   ds
  425924:	jmp    0x4258e4
  425926:	pop    esi
  425927:	stos   DWORD PTR es:[edi],eax
  425928:	iret   
  425929:	out    dx,eax
  42592a:	and    al,0x34
  42592c:	dec    eax
  42592d:	cli    
  42592e:	ret    
  42592f:	xchg   edx,eax
  425930:	inc    esi
  425931:	cld    
  425932:	adc    dh,BYTE PTR [ecx]
  425934:	dec    esp
  425935:	add    eax,esi
  425937:	shr    BYTE PTR [ebx-0x36932c37],cl
  42593d:	add    ah,BYTE PTR [ebp-0x36]
  425940:	pushf  
  425941:	iret   
  425942:	fadd   QWORD PTR [edi+0x5af5fdd0]
  425948:	(bad)  
  425949:	nop
  42594a:	in     eax,0x35
  42594c:	inc    eax
  42594d:	lds    edx,FWORD PTR [esi]
  42594f:	lahf   
  425950:	or     ecx,DWORD PTR [eax-0x1c0af051]
  425956:	cmp    DWORD PTR [edi-0x53],edi
  425959:	aam    0x33
  42595b:	and    BYTE PTR [ecx],0x29
  42595e:	dec    esi
  42595f:	hlt    
  425960:	(bad)  
  425961:	adc    DWORD PTR [eax+0x3aae1691],esi
  425967:	jecxz  0x425941
  425969:	jecxz  0x425916
  42596b:	and    DWORD PTR [ecx+0x76],0x7
  42596f:	push   ss
  425970:	pop    ecx
  425971:	jnp    0x425980
  425973:	aas    
  425974:	xor    ch,BYTE PTR [eax+ebp*2]
  425977:	mov    ?,WORD PTR ds:0x5bd60ac4
  42597d:	pop    ds
  42597e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42597f:	jns    0x42594f
  425981:	cmp    eax,0x7541b83c
  425986:	xor    eax,0xfce14168
  42598b:	retf   0x9352
  42598e:	or     eax,DWORD PTR [edx-0x4e]
  425991:	data16 mov bh,0xd7
  425994:	pop    ds
  425995:	out    dx,al
  425996:	and    bl,bh
  425998:	or     ch,BYTE PTR [ecx]
  42599a:	test   ebx,0x6a955898
  4259a0:	fs dec ebx
  4259a2:	addr16 popf 
  4259a4:	dec    ebx
  4259a5:	mov    al,BYTE PTR [edi-0x1f]
  4259a8:	js     0x425979
  4259aa:	iret   
  4259ab:	jnp    0x42593a
  4259ad:	cmp    esp,DWORD PTR [edi+edi*4+0x2]
  4259b1:	sub    bh,BYTE PTR [ebp+edx*8+0x66782b56]
  4259b8:	adc    BYTE PTR [edi+edi*2+0x37f29b2e],ah
  4259bf:	mov    ch,0xfc
  4259c1:	mov    edi,0xe2f51a1e
  4259c6:	jo     0x42598b
  4259c8:	dec    esi
  4259c9:	inc    eax
  4259ca:	inc    ebx
  4259cb:	(bad)  
  4259cc:	out    dx,al
  4259cd:	pop    esp
  4259ce:	inc    ecx
  4259cf:	jb     0x425a13
  4259d1:	ror    DWORD PTR [ebx+0x17e2e291],0xb9
  4259d8:	ss jp  0x4259a1
  4259db:	cdq    
  4259dc:	dec    ecx
  4259dd:	repnz fmul QWORD PTR [esi-0x2]
  4259e1:	fiadd  WORD PTR [esi+0x78609432]
  4259e7:	bound  eax,QWORD PTR [edi+edx*1]
  4259ea:	aaa    
  4259eb:	or     eax,DWORD PTR [ebp+0x6d]
  4259ee:	shl    BYTE PTR [eax+0x2c],cl
  4259f1:	test   BYTE PTR [esi+0x70b79faa],0x80
  4259f8:	add    BYTE PTR [ebx-0x230b3add],ah
  4259fe:	lods   eax,DWORD PTR ds:[esi]
  4259ff:	aas    
  425a00:	cmp    BYTE PTR [esi],0x7c
  425a03:	pop    ds
  425a04:	mov    ah,ch
  425a06:	cdq    
  425a07:	cmp    ebx,DWORD PTR [ebx+eiz*1-0x6e938391]
  425a0e:	sub    BYTE PTR [esi],ch
  425a10:	sub    BYTE PTR [ebx+0x19d47a83],bh
  425a16:	and    ah,BYTE PTR [edi-0xe2bb6db]
  425a1c:	ins    BYTE PTR es:[edi],dx
  425a1d:	push   esp
  425a1e:	cmp    DWORD PTR [ebp+0x447ccf7b],ebp
  425a24:	ss adc al,0xa9
  425a27:	(bad)  
  425a28:	pop    ebx
  425a29:	ins    DWORD PTR es:[edi],dx
  425a2a:	mov    ebx,0xa1006ede
  425a2f:	xor    DWORD PTR [ecx+0x5de8bcaa],edx
  425a35:	cdq    
  425a36:	(bad)  
  425a37:	fidivr WORD PTR [ecx]
  425a39:	test   BYTE PTR [eax],al
  425a3b:	sbb    BYTE PTR [edi-0x70],0x1b
  425a3f:	and    BYTE PTR [esi+esi*1+0x41057816],ah
  425a46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a47:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  425a49:	pusha  
  425a4a:	in     al,0xd0
  425a4c:	dec    edi
  425a4d:	(bad)  
  425a4e:	leave  
  425a4f:	and    DWORD PTR [edi],0x6f2e8cf6
  425a55:	add    al,0xac
  425a57:	xchg   ebx,eax
  425a58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a59:	stc    
  425a5a:	mov    ah,0x29
  425a5c:	mov    bh,0x94
  425a5e:	ret    
  425a5f:	or     esp,DWORD PTR ds:0xeb62d18
  425a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a66:	retf   
  425a67:	int    0x7b
  425a69:	aam    0xf4
  425a6b:	fstp   TBYTE PTR [edx+0x17be899f]
  425a71:	ins    BYTE PTR es:[edi],dx
  425a72:	scas   al,BYTE PTR es:[edi]
  425a73:	shr    BYTE PTR [eax+0xce99718],cl
  425a79:	jecxz  0x425ab7
  425a7b:	or     ch,BYTE PTR [edi-0x49b1d38f]
  425a81:	xor    dh,BYTE PTR [edi+0x5a63ed55]
  425a87:	cmp    eax,DWORD PTR [edx+ebp*4+0x2d]
  425a8b:	mov    ebp,0x399f21e7
  425a90:	dec    esi
  425a91:	cmp    eax,0xd10c0ee5
  425a96:	xor    esi,DWORD PTR [esi+eax*4+0x3c]
  425a9a:	add    BYTE PTR [eax],al
  425a9c:	(bad)  
  425a9d:	rol    BYTE PTR [edi],0x37
  425aa0:	dec    edi
  425aa1:	idiv   DWORD PTR [ebp+0x532a00fa]
  425aa7:	fstp   QWORD PTR [ecx+eiz*1+0x2d]
  425aab:	mov    WORD PTR [esi-0x79fffe2d],es
  425ab1:	add    al,BYTE PTR [eax]
  425ab3:	add    BYTE PTR [edi-0x76],bl
  425ab6:	xchg   DWORD PTR [ebx+0xc],ecx
  425ab9:	fs pop es
  425abb:	sub    ebx,edx
  425abd:	add    ah,BYTE PTR [ecx]
  425abf:	jno    0x425a80
  425ac1:	inc    edi
  425ac2:	dec    esi
  425ac3:	and    DWORD PTR [ebx-0x15294ab2],edx
  425ac9:	mov    esi,ecx
  425acb:	stc    
  425acc:	fs scas al,BYTE PTR es:[edi]
  425ace:	or     DWORD PTR [ebx+0x28f1a205],0xffffffa9
  425ad5:	fisttp QWORD PTR [esi+edx*2+0x56]
  425ad9:	inc    esi
  425ada:	loopne 0x425ae2
  425adc:	mov    al,0x29
  425ade:	sbb    ch,BYTE PTR [ecx-0x56]
  425ae1:	xor    al,0xc9
  425ae3:	adc    ah,BYTE PTR [ebx-0x6db6291e]
  425ae9:	aas    
  425aea:	sar    cl,1
  425aec:	scas   al,BYTE PTR es:[edi]
  425aed:	pop    ds
  425aee:	scas   eax,DWORD PTR es:[edi]
  425aef:	rcr    DWORD PTR [eax-0x129e091d],1
  425af5:	fbstp  TBYTE PTR [eax+0x31]
  425af8:	js     0x425ae7
  425afa:	test   DWORD PTR [edi-0x56],eax
  425afd:	ret    
  425afe:	xchg   edx,eax
  425aff:	xchg   esi,eax
  425b00:	and    eax,0x64797b2e
  425b05:	jp     0x425b32
  425b07:	shl    BYTE PTR [esp+ebp*2+0x24],1
  425b0b:	pop    esi
  425b0c:	fimul  WORD PTR [eax+esi*2+0x54975c66]
  425b13:	cdq    
  425b14:	inc    eax
  425b15:	push   ebp
  425b16:	out    dx,eax
  425b17:	ror    DWORD PTR [ebx-0x419b835c],cl
  425b1d:	repnz imul esi,DWORD PTR [ebx+eax*2],0xbfbfd1b7
  425b25:	pop    eax
  425b26:	jl     0x425ab7
  425b28:	sbb    ebp,edx
  425b2a:	(bad)  
  425b2b:	daa    
  425b2c:	ja     0x425ade
  425b2e:	sbb    BYTE PTR [esi],0xf
  425b31:	imul   esp,esp,0x29eb5a82
  425b37:	xor    BYTE PTR [ebx],bh
  425b39:	xchg   esp,eax
  425b3a:	sub    ebp,DWORD PTR [esi]
  425b3c:	adc    al,0x34
  425b3e:	push   ecx
  425b3f:	adc    DWORD PTR gs:[edi+0x7f25ac9f],edi
  425b46:	sub    cl,BYTE PTR [esi-0x364de38b]
  425b4c:	daa    
  425b4d:	cmp    DWORD PTR [ebx],edi
  425b4f:	cld    
  425b50:	mov    edx,0xe44fb566
  425b55:	into   
  425b56:	loope  0x425b7d
  425b58:	mov    ebp,0xa0d31cc7
  425b5d:	sub    DWORD PTR [ecx+ebp*8],eax
  425b60:	sub    bh,BYTE PTR [edi-0x4bff1162]
  425b66:	jnp    0x425b38
  425b68:	retf   
  425b69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b6a:	push   edi
  425b6b:	ins    BYTE PTR es:[edi],dx
  425b6c:	arpl   bp,bp
  425b6e:	and    ecx,DWORD PTR [ebx+ecx*2]
  425b71:	out    0xb4,eax
  425b73:	dec    BYTE PTR [ecx-0x2]
  425b76:	retf   
  425b77:	xor    bl,BYTE PTR [ebx+esi*8]
  425b7a:	aad    0xc9
  425b7c:	jae    0x425bed
  425b7e:	push   ebp
  425b7f:	in     al,dx
  425b80:	sub    DWORD PTR [esi+0x6d],ebx
  425b83:	dec    ebp
  425b84:	add    al,0xbd
  425b86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b87:	(bad)  
  425b88:	ds sti 
  425b8a:	xor    al,0x9e
  425b8c:	ss xor edi,DWORD PTR fs:0x7041c358
  425b94:	rcl    dh,cl
  425b96:	mov    gs,edx
  425b98:	cmp    eax,0x29909752
  425b9d:	test   al,0xbd
  425b9f:	push   ebx
  425ba0:	sbb    BYTE PTR [ecx+edx*2],ah
  425ba3:	inc    edi
  425ba4:	aaa    
  425ba5:	push   es
  425ba6:	jecxz  0x425bbe
  425ba8:	mov    ds:0x424d32bc,eax
  425bad:	repnz into 
  425baf:	inc    ecx
  425bb0:	rcl    BYTE PTR [ebp+0xd],cl
  425bb3:	push   edx
  425bb4:	xchg   esi,eax
  425bb5:	mov    DWORD PTR [edi+edx*1-0x2c],eax
  425bb9:	(bad)  
  425bba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425bbb:	lds    ecx,FWORD PTR [esi]
  425bbd:	jb     0x425c30
  425bbf:	add    ebx,DWORD PTR [ebx-0x39a9c79]
  425bc5:	int    0xd6
  425bc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425bc8:	mov    esi,cs
  425bca:	sqrtps xmm5,XMMWORD PTR [ebp+0x364f4927]
  425bd1:	scas   al,BYTE PTR es:[edi]
  425bd2:	data16 cmp al,BYTE PTR [ecx]
  425bd5:	cmp    al,0x44
  425bd7:	hlt    
  425bd8:	nop
  425bd9:	cdq    
  425bda:	(bad)  
  425bdb:	lds    ecx,FWORD PTR [edx+0x603c160f]
  425be1:	sbb    eax,0x35ef6c60
  425be6:	xor    ecx,DWORD PTR [esi+edi*1]
  425be9:	outs   dx,DWORD PTR ds:[esi]
  425bea:	test   edi,edi
  425bec:	push   0x2d
  425bee:	ror    BYTE PTR [ecx+0x2a],1
  425bf1:	ins    BYTE PTR es:[edi],dx
  425bf2:	mov    ebx,0x5d553021
  425bf7:	or     DWORD PTR [edi+0x5f734454],eax
  425bfd:	sar    DWORD PTR [ecx+0x5064be80],1
  425c03:	inc    esp
  425c04:	(bad)  
  425c05:	repz xchg esi,eax
  425c07:	push   eax
  425c08:	pop    edi
  425c09:	xchg   esi,eax
  425c0a:	not    DWORD PTR [esi+0x35]
  425c0d:	fucomp st(7)
  425c0f:	mov    ah,0x59
  425c11:	xor    al,0x8f
  425c13:	xchg   edx,eax
  425c14:	inc    ecx
  425c15:	cmp    dh,cl
  425c17:	push   0x45f2cac2
  425c1c:	pushf  
  425c1d:	push   0x1f
  425c1f:	fdivrp st(6),st
  425c21:	or     al,ah
  425c23:	ss xchg eax,esi
  425c26:	sbb    al,0x8c
  425c28:	dec    edx
  425c29:	iret   
  425c2a:	nop
  425c2b:	jb     0x425c7e
  425c2d:	pop    ebx
  425c2e:	iret   
  425c2f:	adc    BYTE PTR [esi-0x551705eb],cl
  425c35:	jle    0x425c2c
  425c37:	xor    al,ah
  425c39:	mov    edx,DWORD PTR [ebx+eiz*4+0x16]
  425c3d:	(bad)  
  425c3e:	sub    al,0x65
  425c40:	retf   
  425c41:	pop    esp
  425c42:	data16 loop 0x425c12
  425c45:	enter  0xa12d,0x8d
  425c49:	cmp    esp,DWORD PTR [esi-0x5813c243]
  425c4f:	clc    
  425c50:	dec    ebp
  425c51:	mov    al,ds:0xe2dc26ea
  425c56:	add    DWORD PTR [ebp+0x3580482],edi
  425c5c:	inc    ecx
  425c5d:	shr    DWORD PTR [esi-0x775259c8],0x28
  425c64:	inc    ecx
  425c65:	std    
  425c66:	and    BYTE PTR [edi],bh
  425c68:	es not edi
  425c6b:	sbb    eax,0xac370dba
  425c70:	out    0xdd,eax
  425c72:	fsubr  DWORD PTR [ebp+0x32aeb1cf]
  425c78:	aam    0x47
  425c7a:	or     BYTE PTR [eax-0x419ec1bb],dl
  425c80:	repnz (bad) [edi+eiz*8-0x3e]
  425c85:	jnp    0x425ce1
  425c87:	pop    esi
  425c88:	ret    0x3e3b
  425c8b:	jmp    0x85187c5b
  425c90:	push   es
  425c91:	(bad)  
  425c92:	out    dx,eax
  425c93:	jl     0x425c33
  425c95:	mov    esp,0x717a4af7
  425c9a:	jo     0x425c7d
  425c9c:	repz inc edi
  425c9e:	mov    ah,BYTE PTR [eax+0x7c1cc8d2]
  425ca4:	jbe    0x425cd5
  425ca6:	rol    BYTE PTR [ebp+0x41],0xac
  425caa:	jl     0x425c6f
  425cac:	call   0x1986b38f
  425cb1:	sbb    ah,BYTE PTR ds:0xe174c931
  425cb7:	mov    dl,0x70
  425cb9:	daa    
  425cba:	outs   dx,BYTE PTR ds:[esi]
  425cbb:	call   0xf456:0xa24033ab
  425cc2:	ja     0x425d01
  425cc4:	jecxz  0x425d40
  425cc6:	push   eax
  425cc7:	shl    DWORD PTR [esp+ebp*2],1
  425cca:	adc    DWORD PTR [eax+0x2b],0x7a
  425cce:	fwait
  425ccf:	adc    esi,esi
  425cd1:	mov    ah,0x17
  425cd3:	pusha  
  425cd4:	fsubp  st(5),st
  425cd6:	mov    BYTE PTR [ebp+0x2301a1b2],dh
  425cdc:	test   al,0x20
  425cde:	mov    bh,0x2e
  425ce0:	mov    cl,0xd2
  425ce2:	xor    eax,0x987252dd
  425ce7:	scas   al,BYTE PTR es:[edi]
  425ce8:	ret    
  425ce9:	fsub   QWORD PTR [edi+0x565f5290]
  425cef:	or     ch,al
  425cf1:	int3   
  425cf2:	test   DWORD PTR [esi+0x3c],esi
  425cf5:	les    edi,FWORD PTR [edx+0x4f]
  425cf8:	jb     0x425ceb
  425cfa:	or     esp,ebx
  425cfc:	neg    DWORD PTR [ebp-0x7a]
  425cff:	xor    al,0x76
  425d01:	out    0x40,eax
  425d03:	or     ebx,DWORD PTR [esi]
  425d05:	mov    ds:0xd7fb5593,eax
  425d0a:	jp     0x425c9a
  425d0c:	aaa    
  425d0d:	imul   esp,DWORD PTR [esi],0xffffffdd
  425d10:	dec    edx
  425d11:	pushf  
  425d12:	fcomp  DWORD PTR [edx+0xf0c4a2c]
  425d18:	pop    edi
  425d19:	call   0x21302318
  425d1e:	push   0xde5200f2
  425d23:	addr16 icebp 
  425d25:	or     BYTE PTR [ebx-0x10cbdb4c],ch
  425d2b:	mov    al,ds:0x7fce07f6
  425d30:	push   cs
  425d31:	frstor [esi+0x7bf34616]
  425d37:	adc    bh,BYTE PTR [ebx]
  425d39:	popf   
  425d3a:	add    BYTE PTR [eax],al
  425d3c:	mov    al,0x8a
  425d3e:	call   0xfa2657c4
  425d43:	mov    ebx,0x99242062
  425d48:	push   edx
  425d49:	shr    BYTE PTR [edx],0x27
  425d4c:	or     al,0xd6
  425d4e:	add    DWORD PTR [eax],eax
  425d50:	xchg   BYTE PTR [edx],al
  425d52:	add    BYTE PTR [eax],al
  425d54:	gs sbb al,0xc1
  425d57:	cmp    DWORD PTR [ecx+0x12],esp
  425d5a:	clc    
  425d5b:	xor    eax,0xcea3259b
  425d60:	(bad)  
  425d61:	sbb    al,0x43
  425d63:	(bad)  
  425d64:	nop
  425d65:	je     0x425d02
  425d67:	test   DWORD PTR ds:0x1592a049,0x15681881
  425d71:	sub    eax,0x3a298e88
  425d76:	dec    ebp
  425d77:	xadd   esi,edx
  425d7a:	cmp    eax,0x7bb54083
  425d7f:	ret    
  425d80:	sbb    eax,DWORD PTR [edi-0x51]
  425d83:	leave  
  425d84:	mov    dl,bh
  425d86:	mov    eax,0xdc9ac3f1
  425d8b:	(bad)  
  425d8c:	in     al,0xfd
  425d8e:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  425d90:	push   edi
  425d91:	xchg   ebx,eax
  425d92:	dec    eax
  425d93:	mov    ebp,0x3c4e2bcd
  425d98:	pop    ecx
  425d99:	and    DWORD PTR [edx+0x35],esp
  425d9c:	or     ebx,DWORD PTR [ecx+ebx*4-0x56ebc3f8]
  425da3:	dec    edi
  425da4:	adc    ebx,DWORD PTR [eax]
  425da6:	adc    ecx,DWORD PTR [ecx+ebx*1-0x7157634d]
  425dad:	jae    0xffce907d
  425db3:	sbb    eax,0x2287e72f
  425db8:	arpl   WORD PTR ds:0x33eb574d,sp
  425dbf:	and    DWORD PTR [esi],esi
  425dc1:	jmp    0x425e1a
  425dc3:	xchg   esp,eax
  425dc4:	out    dx,eax
  425dc5:	mov    dh,BYTE PTR [edx-0x6b]
  425dc8:	sti    
  425dc9:	test   DWORD PTR [ebp+0x72],esi
  425dcc:	inc    ebp
  425dcd:	scas   al,BYTE PTR es:[edi]
  425dce:	mov    eax,ds:0xd5d46295
  425dd3:	lahf   
  425dd4:	mov    sp,di
  425dd7:	adc    DWORD PTR [ebx],0x3476faa6
  425ddd:	inc    edx
  425dde:	sbb    bh,bl
  425de0:	xor    ebp,esp
  425de2:	call   0x3a34:0xdcf327a
  425de9:	jg     0x425dbd
  425deb:	mov    eax,0x7bf9986d
  425df0:	add    al,0xc3
  425df2:	and    ecx,eax
  425df4:	dec    edx
  425df5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425df6:	stos   DWORD PTR es:[edi],eax
  425df7:	xchg   ebx,eax
  425df8:	test   BYTE PTR [ebp+0x4d],bh
  425dfb:	or     BYTE PTR [edi+eiz*2-0x3a539c29],dh
  425e02:	stos   BYTE PTR es:[edi],al
  425e03:	sub    edi,DWORD PTR ds:0x1a2eb08a
  425e09:	dec    eax
  425e0a:	aaa    
  425e0b:	js     0x425dae
  425e0d:	inc    edx
  425e0e:	pop    esp
  425e0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e10:	mov    dh,0x88
  425e12:	fcmovnb st,st(4)
  425e14:	cwde   
  425e15:	or     BYTE PTR [eax],ah
  425e17:	(bad)  
  425e18:	fcomp  QWORD PTR [edi+eiz*1-0x7e781256]
  425e1f:	sbb    eax,DWORD PTR [ebp+0x26bcbc8a]
  425e25:	add    eax,0xa292a109
  425e2a:	imul   esp,esi,0x63
  425e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e2e:	sbb    DWORD PTR [edi+0x2d],esp
  425e31:	in     al,dx
  425e32:	adc    bl,BYTE PTR [esp+ecx*1-0x74]
  425e36:	cli    
  425e37:	xchg   ebx,eax
  425e38:	call   0xaace:0x8ac61f67
  425e3f:	(bad)  
  425e40:	dec    edi
  425e41:	mov    WORD PTR [esi+0x1e33edd8],?
  425e47:	in     al,0x14
  425e49:	mov    ebp,esp
  425e4b:	fild   QWORD PTR [esi+eax*1+0x47]
  425e4f:	pop    esi
  425e50:	pop    eax
  425e51:	aaa    
  425e52:	jnp    0x425e11
  425e54:	mov    ds:0xb11e7562,eax
  425e59:	add    ecx,0xfffffff5
  425e5c:	jle    0x425ed5
  425e5e:	push   edi
  425e5f:	stc    
  425e60:	or     ch,dh
  425e62:	add    dl,BYTE PTR [edi-0x78a0798a]
  425e68:	xor    al,0x5a
  425e6a:	add    DWORD PTR [edx],0xdd8e8605
  425e70:	dec    ecx
  425e71:	sbb    al,0x31
  425e73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e74:	pop    es
  425e75:	int    0x4b
  425e77:	ja     0x425e8d
  425e79:	cld    
  425e7a:	lahf   
  425e7b:	ficom  DWORD PTR [ebx+0x11da5b70]
  425e81:	lea    esi,[ebp-0x689e414a]
  425e87:	or     BYTE PTR [esi-0x5e],dl
  425e8a:	call   0xb1509b51
  425e8f:	fmul   st,st(7)
  425e91:	(bad)  
  425e92:	into   
  425e93:	dec    edi
  425e94:	and    BYTE PTR [eax+ebp*4-0x471e3df0],cl
  425e9b:	cld    
  425e9c:	mov    BYTE PTR [ecx],dl
  425e9e:	and    BYTE PTR [eax-0x65],bh
  425ea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ea2:	repz mov ah,0xa1
  425ea5:	rcl    DWORD PTR [ecx+0x574578d1],0x21
  425eac:	pop    eax
  425ead:	out    dx,eax
  425eae:	rol    DWORD PTR [edx],0xef
  425eb1:	shr    BYTE PTR [esi-0x15a8dbc9],1
  425eb7:	xchg   edi,eax
  425eb8:	push   0x35
  425eba:	lock jp 0x425f35
  425ebd:	or     al,0x52
  425ebf:	mov    esp,0xd6656451
  425ec4:	nop
  425ec5:	sub    BYTE PTR [eax+ecx*2+0x6b],bl
  425ec9:	push   ecx
  425eca:	out    dx,eax
  425ecb:	test   al,0xba
  425ecd:	mov    ds:0x68213b9d,al
  425ed2:	xchg   BYTE PTR [edx+ebx*4+0x7b110345],ch
  425ed9:	add    ecx,DWORD PTR [ebp+0x49]
  425edc:	jmp    0xd85a0697
  425ee1:	adc    al,0x71
  425ee3:	mov    ecx,edi
  425ee5:	jae    0x425ebc
  425ee7:	leave  
  425ee8:	xor    ecx,DWORD PTR [edi]
  425eea:	adc    esi,eax
  425eec:	xor    BYTE PTR [ecx+0xb],0xeb
  425ef0:	push   ebp
  425ef1:	ins    DWORD PTR es:[edi],dx
  425ef2:	sar    BYTE PTR [edx+0x1a],cl
  425ef5:	cli    
  425ef6:	lea    eax,[ebx-0x74]
  425ef9:	add    al,0x12
  425efb:	pop    ss
  425efc:	push   ecx
  425efd:	mov    DWORD PTR ds:0x7f960db8,edx
  425f03:	in     al,dx
  425f04:	cmp    DWORD PTR [edi+0x18def675],ecx
  425f0a:	inc    eax
  425f0b:	popf   
  425f0c:	pop    ss
  425f0d:	sub    dl,BYTE PTR [ecx]
  425f0f:	dec    ebx
  425f10:	shr    ebp,0x37
  425f13:	sub    DWORD PTR [eax],0xddf9a2a7
  425f19:	and    DWORD PTR [esi],0x94939e50
  425f1f:	cmp    BYTE PTR [edx+0x6f5fd3cd],al
  425f25:	and    DWORD PTR [esi],0x9180cfec
  425f2b:	in     eax,dx
  425f2c:	into   
  425f2d:	jge    0x425f46
  425f2f:	inc    edi
  425f30:	(bad)  
  425f31:	fdivr  QWORD PTR [eax]
  425f33:	pop    es
  425f34:	inc    edi
  425f35:	dec    ebx
  425f36:	js     0x425f12
  425f38:	cld    
  425f39:	jns    0x425f40
  425f3b:	push   eax
  425f3c:	pop    ss
  425f3d:	xchg   esp,eax
  425f3e:	gs es pop ebx
  425f41:	and    BYTE PTR [ebp+0x6a],0xd7
  425f45:	outs   dx,BYTE PTR ds:[esi]
  425f46:	dec    esi
  425f47:	push   ss
  425f48:	and    BYTE PTR [eax+0x54],cl
  425f4b:	push   ebp
  425f4c:	jmp    0x579f9150
  425f51:	sub    DWORD PTR [ecx],esp
  425f53:	push   esi
  425f54:	xor    DWORD PTR [edi],esp
  425f56:	cli    
  425f57:	xor    ecx,ebp
  425f59:	jnp    0x425f34
  425f5b:	inc    ecx
  425f5c:	repnz mov esi,0xd1d7f0ae
  425f62:	dec    esp
  425f63:	enter  0x992b,0xd5
  425f67:	xor    eax,0xa7e3319a
  425f6c:	in     al,dx
  425f6d:	aad    0x98
  425f6f:	out    0x66,eax
  425f71:	mov    edx,0xfd4dcc31
  425f76:	xchg   ebx,eax
  425f77:	call   DWORD PTR [eax+0x2d8e30f9]
  425f7d:	fwait
  425f7e:	iret   
  425f7f:	dec    ecx
  425f80:	and    esp,DWORD PTR [ecx-0x2df6f7b7]
  425f86:	mul    DWORD PTR [esi+0x7a]
  425f89:	dec    eax
  425f8a:	pop    esp
  425f8b:	mov    al,0x96
  425f8d:	xor    ebx,edx
  425f8f:	lods   al,BYTE PTR ds:[esi]
  425f90:	push   cs
  425f91:	mov    ecx,0xbc30ad36
  425f96:	adc    DWORD PTR [esi],ebp
  425f98:	dec    ebx
  425f99:	(bad)  
  425f9b:	xchg   DWORD PTR [edi-0x56bae81d],edi
  425fa1:	pop    ebx
  425fa2:	imul   edx,DWORD PTR [esi],0xfffffff2
  425fa5:	cmp    eax,0x333de716
  425faa:	xchg   BYTE PTR [eax],cl
  425fac:	aad    0x96
  425fae:	dec    esp
  425faf:	(bad)  
  425fb1:	imul   esi,DWORD PTR [esi+0x45],0x88751d09
  425fb8:	jnp    0x425ff7
  425fba:	das    
  425fbb:	push   ss
  425fbc:	mul    DWORD PTR [ecx-0x27]
  425fbf:	pop    ecx
  425fc0:	sub    BYTE PTR [ecx],al
  425fc2:	call   0x7f7:0xdde78c16
  425fc9:	cld    
  425fca:	mov    dh,0x81
  425fcc:	out    0x7a,al
  425fce:	dec    esi
  425fcf:	xor    eax,0x29422584
  425fd4:	mov    dl,0xa0
  425fd6:	mov    edi,0x9cd3f1
  425fdb:	add    BYTE PTR [edx-0x39253b74],cl
  425fe1:	ficomp DWORD PTR [esi+0x2983e7dc]
  425fe7:	mov    WORD PTR [edi-0x6da05b7d],?
  425fed:	fadd   DWORD PTR [ecx]
  425fef:	add    BYTE PTR [esi+0x58000002],al
  425ff5:	in     al,dx
  425ff6:	std    
  425ff7:	pop    ecx
  425ff8:	out    dx,al
  425ff9:	or     DWORD PTR [edx+0x2],0xffffff92
  425ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ffe:	mov    eax,0x9719f885
  426003:	lods   al,BYTE PTR ds:[esi]
  426004:	jl     0x425ffa
  426006:	xor    bh,BYTE PTR [ebx-0x74]
  426009:	push   0x186b8795
  42600e:	dec    esi
  42600f:	loop   0x425fc2
  426011:	mov    ds:0xb95d3a70,al
  426016:	cwde   
  426017:	mov    ecx,0x2349a434
  42601c:	out    dx,eax
  42601d:	xor    ah,BYTE PTR [ebp+0x54321a97]
  426023:	call   0x97831138
  426028:	or     al,0x77
  42602a:	mov    ecx,0xdd8004ee
  42602f:	and    DWORD PTR [esi-0x3b],eax
  426032:	fst    DWORD PTR [esp+ebp*8-0x4acacc5b]
  426039:	retf   0x1fca
  42603c:	data16 or bl,BYTE PTR ss:[ebx+0x4bdfdeff]
  426044:	in     al,dx
  426045:	repnz (bad) 
  426047:	jge    0x42600e
  426049:	cmp    al,0xda
  42604b:	in     eax,0x99
  42604d:	pop    es
  42604e:	push   ss
  42604f:	lods   al,BYTE PTR ds:[esi]
  426050:	arpl   bx,cx
  426052:	inc    esp
  426053:	xchg   ebp,eax
  426054:	or     BYTE PTR [ecx+0x22],ah
  426057:	add    ah,cl
  426059:	mov    bh,0xb5
  42605b:	push   0x6a01d720
  426060:	cmp    eax,0x8c0db581
  426065:	cdq    
  426066:	push   cs
  426067:	sbb    eax,0xa821f3cd
  42606c:	or     ebp,DWORD PTR [edi]
  42606e:	call   0x2824:0x1304b359
  426075:	pop    es
  426076:	ret    
  426077:	pop    es
  426078:	fisubr DWORD PTR [esi+esi*8+0x595cac09]
  42607f:	fcomp  DWORD PTR [edx+ebp*4]
  426082:	jg     0x4260f6
  426084:	jo     0x426051
  426086:	test   eax,0x617407eb
  42608b:	pop    ebp
  42608c:	or     eax,0xd716fe68
  426091:	pop    es
  426092:	xor    al,BYTE PTR [ebp+0x64feedae]
  426098:	ret    
  426099:	jns    0x42605f
  42609b:	js     0x4260a0
  42609d:	clc    
  42609e:	enter  0x29a7,0x9c
  4260a2:	fimul  DWORD PTR [ecx]
  4260a4:	popf   
  4260a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260a6:	dec    ecx
  4260a7:	cmc    
  4260a8:	cli    
  4260a9:	and    eax,0xe6ddbc08
  4260ae:	(bad)  
  4260af:	xchg   esi,eax
  4260b0:	ins    DWORD PTR es:[edi],dx
  4260b1:	push   ebp
  4260b2:	jge    0x42604e
  4260b4:	mov    BYTE PTR [ebp+0x74fcf62a],bh
  4260ba:	pop    esi
  4260bb:	out    0xf1,eax
  4260bd:	push   es
  4260be:	xchg   esp,eax
  4260bf:	xchg   edi,eax
  4260c0:	or     al,cl
  4260c2:	stc    
  4260c3:	in     al,dx
  4260c4:	xor    cl,dh
  4260c6:	adc    eax,0x3c3c8714
  4260cb:	pop    ebx
  4260cc:	ror    BYTE PTR [eax+edx*1],0x59
  4260d0:	ja     0x4260ba
  4260d2:	fwait
  4260d3:	out    dx,al
  4260d4:	sub    BYTE PTR [ebp-0x58],0x34
  4260d8:	sub    eax,0x5fe39fb5
  4260dd:	xchg   esp,eax
  4260de:	fstp   DWORD PTR ds:0x1226e62
  4260e4:	dec    esp
  4260e5:	in     eax,0x4c
  4260e7:	addr16 loope 0x4260a2
  4260ea:	xor    al,0xee
  4260ec:	nop
  4260ed:	les    edx,FWORD PTR [ebx]
  4260ef:	shr    DWORD PTR [esi-0x2384027d],1
  4260f5:	add    BYTE PTR fs:[esi+edx*1],cl
  4260f9:	aad    0x97
  4260fb:	jae    0x4260d0
  4260fd:	pop    esi
  4260fe:	mov    dh,0x52
  426100:	sub    eax,eax
  426102:	js     0x42608b
  426104:	arpl   WORD PTR [esi+0x6e],sp
  426107:	jg     0x42608a
  426109:	or     ah,bl
  42610b:	push   edi
  42610c:	ins    DWORD PTR es:[edi],dx
  42610d:	test   eax,0x49dd7d1f
  426112:	add    ebp,DWORD PTR [edi+0x53]
  426115:	jno    0x4260d9
  426117:	lds    ebx,FWORD PTR [ebx-0x7]
  42611a:	aam    0x20
  42611c:	je     0x4260c6
  42611e:	loop   0x426116
  426120:	loopne 0x426199
  426122:	mov    ebx,0x90f25973
  426127:	cmpxchg BYTE PTR [esi+0x72],ah
  42612b:	in     eax,dx
  42612c:	popf   
  42612d:	cmp    cl,ah
  42612f:	out    0x23,eax
  426131:	test   al,0xf6
  426133:	les    edi,FWORD PTR [esi+0x549d1f7d]
  426139:	jp     0x42617f
  42613b:	xchg   DWORD PTR [eax-0x7ea340b3],edx
  426141:	jns    0x426170
  426143:	mov    eax,ds:0x6490f04d
  426148:	inc    ecx
  426149:	and    edi,DWORD PTR [ebx-0x10]
  42614c:	popa   
  42614d:	repnz repz mov esi,DWORD PTR [ecx-0x58]
  426152:	pop    ds
  426153:	adc    BYTE PTR [ecx+0x6d6aa0e1],0xdb
  42615a:	pushf  
  42615b:	jae    0x4260e1
  42615d:	fmul   QWORD PTR [ecx]
  42615f:	mov    eax,0xa80b4571
  426164:	dec    ebp
  426165:	scas   eax,DWORD PTR es:[edi]
  426166:	cmp    al,0x19
  426168:	aaa    
  426169:	lea    edx,[esi+0x3f1a0b48]
  42616f:	bnd js 0x42614b
  426172:	scas   al,BYTE PTR es:[edi]
  426173:	mov    ebx,0xf9116950
  426178:	jb     0x426101
  42617a:	jmp    FWORD PTR [esp+esi*2+0x44]
  42617e:	mov    BYTE PTR cs:[edx],0xb8
  426182:	lods   al,BYTE PTR ds:[esi]
  426183:	mov    ds:0x1833cae6,al
  426188:	mov    esp,0xd7b20192
  42618d:	fstp   DWORD PTR [eax+0x73]
  426190:	pop    esi
  426191:	clc    
  426192:	out    dx,al
  426193:	es pusha 
  426195:	or     ebx,ebx
  426197:	sti    
  426198:	push   ss
  426199:	push   ebx
  42619a:	pusha  
  42619b:	push   0xffffffd4
  42619d:	dec    ebx
  42619e:	les    ecx,FWORD PTR [esi-0x21c96ff5]
  4261a4:	xchg   edx,eax
  4261a5:	mov    ds:0x85d561ae,eax
  4261aa:	mov    bh,0x8c
  4261ac:	mov    al,0x1f
  4261ae:	fld    st(2)
  4261b0:	lods   al,BYTE PTR ds:[esi]
  4261b1:	cmp    esp,edi
  4261b3:	loop   0x426143
  4261b5:	dec    edx
  4261b6:	(bad)  
  4261b7:	repnz scas al,BYTE PTR es:[edi]
  4261b9:	mov    edi,0xa9c3cd95
  4261be:	ret    
  4261bf:	enter  0x39db,0x1
  4261c3:	fucom  st(4)
  4261c5:	in     eax,0x28
  4261c7:	stc    
  4261c8:	mov    ecx,ebp
  4261ca:	icebp  
  4261cb:	je     0x426202
  4261cd:	outs   dx,BYTE PTR ds:[esi]
  4261ce:	sbb    ebx,eax
  4261d0:	jl     0x4261d7
  4261d2:	and    BYTE PTR ds:0x25b2b573,bh
  4261d8:	mov    ebp,0x7b3f35c1
  4261dd:	jbe    0x42616e
  4261df:	stos   DWORD PTR es:[edi],eax
  4261e0:	dec    edx
  4261e1:	cli    
  4261e2:	and    BYTE PTR [ebp+0x3c],0x69
  4261e6:	in     eax,dx
  4261e7:	xchg   DWORD PTR [edi-0x15fff034],ebp
  4261ed:	mov    ah,0x32
  4261ef:	or     al,0xf9
  4261f1:	or     ch,al
  4261f3:	inc    ecx
  4261f4:	sub    ah,dh
  4261f6:	jo     0x42619c
  4261f8:	lods   al,BYTE PTR ds:[esi]
  4261f9:	xlat   BYTE PTR ds:[ebx]
  4261fa:	stc    
  4261fb:	cs cwde 
  4261fd:	dec    esp
  4261fe:	mov    ah,0xcc
  426200:	ret    0xea4a
  426203:	mov    dh,0x55
  426205:	stc    
  426206:	and    ecx,esp
  426208:	shl    DWORD PTR [ebx],0x58
  42620b:	dec    ecx
  42620c:	pop    ebx
  42620d:	repz fadd QWORD PTR [eax]
  426210:	xchg   edx,eax
  426211:	not    BYTE PTR [ebp+0x6509f222]
  426217:	sahf   
  426218:	test   BYTE PTR [edx+0x32],bl
  42621b:	lahf   
  42621c:	test   ebp,esp
  42621e:	jg     0x426219
  426220:	mov    esi,0xb6e874c1
  426225:	dec    ebp
  426226:	out    dx,al
  426227:	fldenv [ecx-0x2b4f74d8]
  42622d:	fwait
  42622e:	loop   0x426293
  426230:	jl     0x426249
  426232:	or     dl,BYTE PTR [ebx+0x180e7035]
  426238:	inc    esi
  426239:	pusha  
  42623a:	shl    ch,0xc8
  42623d:	add    BYTE PTR [ebp+0x7d20771],0xb4
  426244:	fisub  DWORD PTR [ecx-0x63af74e]
  42624a:	inc    edx
  42624b:	push   cs
  42624c:	pop    edx
  42624d:	test   BYTE PTR [ecx+edx*2+0x49],dl
  426251:	ja     0x4262b0
  426253:	aaa    
  426254:	(bad)
  426257:	mov    ch,0x2b
  426259:	cld    
  42625a:	jp     0x426254
  42625c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42625d:	jle    0x4262b2
  42625f:	pop    edx
  426260:	xchg   esp,eax
  426261:	mov    eax,ds:0x5498b5d4
  426266:	scas   eax,DWORD PTR es:[edi]
  426267:	adc    BYTE PTR [esi+0x65992af4],dh
  42626d:	sbb    dl,al
  42626f:	inc    ecx
  426270:	mov    ebx,0x38c83c96
  426275:	ins    BYTE PTR es:[edi],dx
  426276:	or     al,0x21
  426278:	push   esp
  426279:	aaa    
  42627a:	add    BYTE PTR [eax],al
  42627c:	inc    eax
  42627d:	stos   BYTE PTR es:[edi],al
  42627e:	pop    edx
  42627f:	sbb    bh,dl
  426281:	cli    
  426282:	inc    eax
  426283:	cli    
  426284:	outs   dx,BYTE PTR ds:[esi]
  426285:	jmp    0x4e53:0xdbe0e400
  42628c:	sbb    bl,bl
  42628e:	add    DWORD PTR [eax],eax
  426290:	xchg   BYTE PTR [edx],al
  426292:	add    BYTE PTR [eax],al
  426294:	(bad)  
  426295:	(bad)  
  426296:	cmovnp esp,ebp
  426299:	aaa    
  42629a:	retf   
  42629b:	mov    ?,WORD PTR [ecx-0xb]
  42629e:	(bad)  
  42629f:	jmp    0x4262ac
  4262a1:	sbb    eax,0xa9060d8d
  4262a6:	push   ds
  4262a7:	jp     0x426289
  4262a9:	loop   0x4262e2
  4262ab:	push   eax
  4262ac:	les    ebx,FWORD PTR [edi+ebp*4]
  4262af:	or     ch,al
  4262b1:	jmp    0x2ccf:0x542311b7
  4262b8:	neg    BYTE PTR [ebx+0x38]
  4262bb:	cmp    ch,BYTE PTR [eax+0x435dc0f1]
  4262c1:	dec    esp
  4262c2:	dec    edx
  4262c3:	mov    esi,DWORD PTR [eax-0x13]
  4262c6:	xor    ah,ch
  4262c8:	cmp    al,0x96
  4262ca:	stos   BYTE PTR es:[edi],al
  4262cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262cc:	ret    0x38e0
  4262cf:	xchg   ebp,eax
  4262d0:	in     al,0xf5
  4262d2:	ds push 0x3d
  4262d5:	mov    DWORD PTR [esi-0x2d],edi
  4262d8:	lods   eax,DWORD PTR ds:[esi]
  4262d9:	outs   dx,DWORD PTR ds:[esi]
  4262da:	dec    eax
  4262db:	sub    BYTE PTR [edx-0x743baaf6],dl
  4262e1:	and    ecx,esp
  4262e3:	(bad)  [edi-0x5]
  4262e6:	rol    ch,1
  4262e8:	add    ebx,edx
  4262ea:	call   0xfc8e7cab
  4262ef:	mov    bl,0xf1
  4262f1:	and    ebx,edx
  4262f3:	frstor [eax]
  4262f5:	jle    0x4262cb
  4262f7:	sub    esi,edx
  4262f9:	cmp    al,0x97
  4262fb:	dec    ebx
  4262fc:	in     al,dx
  4262fd:	jno    0x4262e2
  4262ff:	xor    eax,0x13b17ae7
  426304:	in     eax,0xa1
  426306:	jge    0x4262e8
  426308:	ror    esp,cl
  42630a:	xchg   ebx,eax
  42630b:	add    dl,BYTE PTR [edx-0x2d]
  42630e:	mov    edi,0x6ac07c26
  426313:	in     eax,dx
  426314:	pop    esi
  426315:	pop    edi
  426316:	out    dx,al
  426317:	push   0xf380e0d0
  42631c:	fwait
  42631d:	add    ch,BYTE PTR [ebx-0x50261acb]
  426323:	push   es
  426324:	xchg   esp,eax
  426325:	(bad)  
  426326:	fsub   st,st(4)
  426328:	push   0xffffff81
  42632a:	outs   dx,BYTE PTR ds:[esi]
  42632b:	repz dec ecx
  42632d:	xor    al,0x8e
  42632f:	imul   ebp,DWORD PTR [edx-0x6d],0xc3c5ae82
  426336:	cmp    al,0xbf
  426338:	mov    al,0x5b
  42633a:	mov    gs,WORD PTR [eax+ecx*2-0x219cf19a]
  426341:	inc    ebp
  426342:	and    eax,0x8fc457a8
  426347:	mov    esi,0xa0b3ab88
  42634c:	mov    edi,0x918f5415
  426351:	shl    ch,cl
  426353:	ret    0xd92
  426356:	enter  0xfb9d,0x2b
  42635a:	icebp  
  42635b:	sahf   
  42635c:	mov    edx,0xfa345867
  426361:	test   al,0x92
  426363:	test   DWORD PTR [ecx+0x7e1fcb06],edx
  426369:	mov    ecx,0xbc3c1b08
  42636e:	repnz cmp BYTE PTR [eax+esi*2+0x2a11bd7e],ch
  426376:	jb     0x4263d8
  426378:	sti    
  426379:	jnp    0x4263c4
  42637b:	int    0x25
  42637d:	cmp    BYTE PTR [ebx],bl
  42637f:	push   cs
  426380:	sbb    ecx,edx
  426382:	repnz shl BYTE PTR [edi-0x52],1
  426386:	push   ds
  426387:	sahf   
  426388:	jo     0x42634c
  42638a:	call   0x9e12:0x68a553ab
  426391:	das    
  426392:	cmc    
  426393:	out    0x50,eax
  426395:	mov    cl,0x2f
  426397:	pop    es
  426398:	sub    al,BYTE PTR [eax-0x23444eb3]
  42639e:	mov    eax,ds:0xa0f6793e
  4263a3:	cwde   
  4263a4:	mov    edi,0x97f5f3d9
  4263a9:	push   edx
  4263aa:	jne    0x4263ee
  4263ac:	jmp    0x3a9e:0x8be57e66
  4263b3:	cmp    ebp,DWORD PTR [ebx+ebx*1-0x7a]
  4263b7:	jbe    0x4263ae
  4263b9:	stc    
  4263ba:	xor    BYTE PTR [ebp-0x1820b4a],al
  4263c0:	je     0x426369
  4263c2:	jmp    0xc8e8:0xd15fe8da
  4263c9:	out    dx,eax
  4263ca:	cmp    ecx,esi
  4263cc:	push   edi
  4263cd:	bound  esi,QWORD PTR [ecx]
  4263cf:	and    al,0x61
  4263d1:	add    ecx,ebx
  4263d3:	and    DWORD PTR [esi],eax
  4263d5:	and    eax,0xe03a58c8
  4263da:	lahf   
  4263db:	scas   al,BYTE PTR es:[edi]
  4263dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263dd:	xor    dl,BYTE PTR [edx]
  4263df:	sub    eax,0x86f3667c
  4263e4:	mov    ah,0xc4
  4263e6:	mov    dh,0xa9
  4263e8:	not    BYTE PTR [esi+edi*8]
  4263eb:	inc    eax
  4263ec:	jg     0x426420
  4263ee:	mov    WORD PTR [ecx],gs
  4263f0:	inc    eax
  4263f1:	sahf   
  4263f2:	fidiv  DWORD PTR [ebp+eiz*2+0x49]
  4263f6:	std    
  4263f7:	sub    DWORD PTR [eax-0x3bd0b60],eax
  4263fd:	xchg   esi,eax
  4263fe:	jnp    0x4263eb
  426400:	outs   dx,BYTE PTR ds:[esi]
  426401:	adc    eax,0x90b2fdcf
  426406:	imul   edi,DWORD PTR [ecx-0x6fd422e5],0x964c3eb1
  426410:	jp     0x426441
  426412:	call   0x48543e2d
  426417:	pusha  
  426418:	das    
  426419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42641a:	das    
  42641b:	js     0x426462
  42641d:	jns    0x426476
  42641f:	sub    al,0xf
  426421:	stos   BYTE PTR es:[edi],al
  426422:	std    
  426423:	stc    
  426424:	jecxz  0x42646b
  426426:	inc    ebx
  426427:	jmp    0x8e3c4a68
  42642c:	loopne 0x42647a
  42642e:	xchg   esp,eax
  42642f:	idiv   BYTE PTR [ebp+edi*2-0x4e]
  426433:	outs   dx,BYTE PTR ds:[esi]
  426434:	es mov esi,0xf9b1086
  42643a:	icebp  
  42643b:	outs   dx,DWORD PTR ds:[esi]
  42643c:	jns    0x4263d2
  42643e:	loope  0x42648e
  426440:	sub    bl,BYTE PTR [esp+edi*2-0x3cab82eb]
  426447:	or     ecx,DWORD PTR [eax-0x7c]
  42644a:	lock cmp edx,edx
  42644d:	retf   0x3ae
  426450:	or     ah,al
  426452:	or     BYTE PTR [ebp+0x47],dh
  426455:	mov    ds:0x74b6ba2d,eax
  42645a:	fimul  WORD PTR [ebp+0x58]
  42645d:	mov    ebp,fs
  42645f:	out    0xd3,eax
  426461:	imul   ebx,DWORD PTR [eax],0x12d9d2d0
  426467:	jnp    0x426499
  426469:	repz popa 
  42646b:	jb     0x4264e7
  42646d:	pop    edx
  42646e:	jl     0x426452
  426470:	mov    al,0xbb
  426472:	xchg   esi,eax
  426473:	stos   DWORD PTR es:[edi],eax
  426474:	mov    esi,eax
  426476:	inc    ebx
  426477:	fidiv  WORD PTR [ecx]
  426479:	mov    cl,BYTE PTR [ecx+ebx*2+0x5d236567]
  426480:	add    DWORD PTR [ebp+eax*2-0x58029a23],eax
  426487:	dec    eax
  426488:	mov    bl,BYTE PTR [ebx+0x6]
  42648b:	mov    ebx,0xfc4dd9c0
  426490:	dec    edx
  426491:	inc    esi
  426492:	fs aad 0xc6
  426495:	sub    ah,BYTE PTR [esi+esi*8]
  426498:	inc    eax
  426499:	shl    DWORD PTR [ebx],0x8d
  42649c:	test   eax,0x4e7194c2
  4264a1:	xor    DWORD PTR [edi],esi
  4264a3:	outs   dx,DWORD PTR ds:[esi]
  4264a4:	sbb    eax,0x99ca8f45
  4264a9:	aad    0x7
  4264ab:	ja     0x426477
  4264ad:	lahf   
  4264ae:	add    DWORD PTR [ecx],esi
  4264b0:	imul   edi,esi,0x302be2a
  4264b6:	cmc    
  4264b7:	(bad)  
  4264b8:	lods   al,BYTE PTR ds:[esi]
  4264b9:	xchg   edi,eax
  4264ba:	pop    es
  4264bb:	jns    0x4264cd
  4264bd:	mov    al,0x3b
  4264bf:	inc    esi
  4264c0:	mov    bh,0x95
  4264c2:	icebp  
  4264c3:	in     eax,0xe7
  4264c5:	xor    esi,eax
  4264c7:	and    al,0xad
  4264c9:	aam    0xaa
  4264cb:	or     al,0xef
  4264cd:	push   esi
  4264ce:	pop    eax
  4264cf:	pop    eax
  4264d0:	hlt    
  4264d1:	pop    ss
  4264d2:	in     al,dx
  4264d3:	in     al,dx
  4264d4:	mov    ah,0x20
  4264d6:	sub    BYTE PTR [esi-0x25b21511],bh
  4264dc:	outs   dx,BYTE PTR ds:[esi]
  4264dd:	fstp   QWORD PTR [ecx]
  4264df:	ret    
  4264e0:	sub    al,0x40
  4264e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264e3:	pop    ebp
  4264e4:	cmp    BYTE PTR [eax+0x60d99c63],al
  4264ea:	mov    ah,0x3a
  4264ec:	aaa    
  4264ed:	add    DWORD PTR [ebx+ebp*1],edx
  4264f0:	mov    ecx,0xc96457e1
  4264f5:	xchg   edx,eax
  4264f6:	add    ecx,DWORD PTR [ebp-0x433ab8fb]
  4264fc:	rol    DWORD PTR [esi+0x40edd74d],0x3f
  426503:	mov    cl,0x84
  426505:	das    
  426506:	nop
  426507:	push   eax
  426508:	jl     0x426575
  42650a:	jo     0x42658a
  42650c:	or     al,0x79
  42650e:	and    dh,al
  426510:	mov    edx,esi
  426512:	lahf   
  426513:	lds    edi,FWORD PTR [esi+0x6ec2a80d]
  426519:	mov    ds:0xe4b60000,eax
  42651e:	xlat   BYTE PTR ds:[ebx]
  42651f:	push   esp
  426520:	xlat   BYTE PTR ds:[ebx]
  426521:	ja     0x4264da
  426523:	out    0xf3,al
  426525:	ss icebp 
  426527:	mov    esp,0x7e25b9b
  42652c:	sahf   
  42652d:	fld    QWORD PTR [ecx]
  42652f:	add    BYTE PTR [esi-0x74fffffe],al
  426535:	and    BYTE PTR [edx],dh
  426537:	pop    ss
  426538:	cmp    al,0xe3
  42653a:	and    DWORD PTR [esi-0x76],ebx
  42653d:	rcl    DWORD PTR [edx-0xe0de4b],0x0
  426544:	out    dx,eax
  426545:	mov    es,WORD PTR [esp+esi*2+0x2f]
  426549:	iret   
  42654a:	call   0x151b1663
  42654f:	iret   
  426550:	inc    DWORD PTR ds:0x17b60095
  426556:	loopne 0x42651c
  426558:	inc    ecx
  426559:	or     edx,esi
  42655b:	bound  esi,QWORD PTR [ebp+0x2ae84595]
  426561:	sub    eax,0x1d53dbd1
  426566:	mov    ds:0x20d8b09b,eax
  42656b:	mov    eax,ds:0x26a9374e
  426570:	or     eax,0x4241372f
  426575:	cwde   
  426576:	xchg   edx,eax
  426577:	mov    ch,0xe7
  426579:	xor    edi,ecx
  42657b:	repnz into 
  42657d:	sbb    cl,BYTE PTR [esi]
  42657f:	call   0xe7bf:0x147afec
  426586:	pop    es
  426587:	mov    esi,0x89a02435
  42658c:	pop    ecx
  42658d:	les    ebx,FWORD PTR [edi+0x33]
  426590:	ja     0x42651f
  426592:	fnstsw WORD PTR [esi]
  426594:	adc    eax,0x8f99fca5
  426599:	shl    BYTE PTR [esi-0x12],1
  42659c:	push   esi
  42659d:	sbb    eax,0xe440dac5
  4265a2:	outs   dx,BYTE PTR ds:[esi]
  4265a3:	test   eax,0x20e84cd5
  4265a8:	jp     0x4265cd
  4265aa:	(bad)  
  4265ab:	aam    0x3c
  4265ad:	adc    al,0x68
  4265af:	sar    DWORD PTR [ebx],1
  4265b1:	nop
  4265b2:	adc    al,0x19
  4265b4:	aam    0x80
  4265b6:	pusha  
  4265b7:	pop    edx
  4265b8:	mov    ch,0x0
  4265ba:	sub    al,0xf1
  4265bc:	add    dh,BYTE PTR [esi+eiz*2+0x3406f4c5]
  4265c3:	ins    BYTE PTR es:[edi],dx
  4265c4:	jg     0x42654d
  4265c6:	pushf  
  4265c7:	cmp    DWORD PTR [esi+0x55],esp
  4265ca:	sbb    DWORD PTR [edi+0xd93a6bc],0xc244fa7e
  4265d4:	dec    esp
  4265d5:	adc    BYTE PTR [ecx+0x6d],cl
  4265d8:	pop    edi
  4265d9:	icebp  
  4265da:	pop    esi
  4265db:	inc    eax
  4265dc:	pop    esp
  4265dd:	sub    al,0x48
  4265df:	lods   eax,DWORD PTR ds:[esi]
  4265e0:	cmp    edi,ebx
  4265e2:	in     al,dx
  4265e3:	rol    DWORD PTR [edx],cl
  4265e5:	sub    edi,esi
  4265e7:	xchg   esi,eax
  4265e8:	pop    esp
  4265e9:	or     al,0x20
  4265eb:	idiv   BYTE PTR [ebp+0x6596874e]
  4265f1:	sub    eax,0xe3021359
  4265f6:	xchg   edi,eax
  4265f7:	mov    al,0x29
  4265f9:	(bad)  
  4265fa:	pusha  
  4265fb:	bound  esi,QWORD PTR [ebx+0x2298ddfa]
  426601:	fdivr  QWORD PTR [eax+ebp*4-0x2721ad71]
  426608:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426609:	pop    eax
  42660a:	test   eax,0x2d25fce6
  42660f:	sbb    ch,ch
  426611:	je     0x4265fd
  426613:	add    dl,bl
  426615:	jle    0x4265d6
  426617:	push   cs
  426618:	in     al,dx
  426619:	dec    edx
  42661a:	mov    esi,0xf6b15997
  426620:	add    bh,bh
  426622:	shl    al,1
  426624:	arpl   WORD PTR [ecx+0x1a71efb0],ax
  42662a:	sbb    bl,BYTE PTR [ebp+eax*4+0xf]
  42662e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42662f:	push   0xffffffa2
  426631:	jo     0x426662
  426633:	lea    esp,[esi+0xd]
  426636:	mov    cl,0x46
  426638:	dec    edi
  426639:	icebp  
  42663a:	xchg   edx,eax
  42663b:	loope  0x426650
  42663d:	jae    0x4265e1
  42663f:	lock dec eax
  426641:	mov    cs:0x6f00478c,eax
  426647:	adc    bl,al
  426649:	nop
  42664a:	hlt    
  42664b:	in     eax,dx
  42664c:	(bad)
  426650:	mov    DWORD PTR [ecx],edi
  426652:	add    al,0x36
  426654:	push   esi
  426656:	fs idiv ch
  426659:	test   BYTE PTR [edi],ah
  42665b:	xor    ah,BYTE PTR [esi-0x733a7b0f]
  426661:	stos   DWORD PTR es:[edi],eax
  426662:	mov    ebp,0xa8d02d63
  426667:	jg     0x4266ca
  426669:	loopne 0x42663f
  42666b:	jnp    0x426662
  42666d:	cmp    BYTE PTR [ebp+0x4d28849b],ah
  426673:	jle    0x426632
  426675:	(bad)  
  426676:	icebp  
  426677:	stos   DWORD PTR es:[edi],eax
  426678:	out    0x37,eax
  42667a:	cmp    esi,DWORD PTR ds:0x1a3e0319
  426680:	pop    es
  426681:	fld    TBYTE PTR [edi+0x1ab1b5]
  426687:	mov    edx,ss
  426689:	mov    esi,edi
  42668b:	and    DWORD PTR [ebx+0x497acf06],ecx
  426691:	and    BYTE PTR [ecx+0x32ae668f],dh
  426697:	jbe    0x426685
  426699:	sub    ch,BYTE PTR [ebx-0x49]
  42669c:	pop    ds
  42669d:	jo     0x42664c
  42669f:	jnp    0x4266e0
  4266a1:	xor    eax,ebp
  4266a3:	jmp    0xad9db369
  4266a8:	test   DWORD PTR [ebx+ebp*8+0xe],edi
  4266ac:	dec    ebp
  4266ad:	call   0xc9f6cd6f
  4266b2:	xchg   esp,eax
  4266b3:	(bad)  
  4266b4:	scas   eax,DWORD PTR es:[edi]
  4266b5:	dec    ecx
  4266b6:	fsubr  DWORD PTR [ecx+0x7]
  4266b9:	mov    ebx,0x3af662f2
  4266be:	aas    
  4266bf:	pusha  
  4266c0:	push   esi
  4266c1:	sbb    esp,0xffffff89
  4266c4:	arpl   WORD PTR [edi-0x5a],sp
  4266c7:	not    DWORD PTR [ebp+0x40]
  4266ca:	sub    DWORD PTR [ecx-0x45],ebx
  4266cd:	les    esi,FWORD PTR [ebx]
  4266cf:	mov    BYTE PTR [eax-0x454f820d],dl
  4266d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266d6:	pop    esp
  4266d7:	adc    esi,ebp
  4266d9:	mov    edi,0xa9d27a8
  4266de:	xchg   esp,eax
  4266df:	sbb    eax,0x6fe71f08
  4266e4:	daa    
  4266e5:	inc    ebx
  4266e6:	add    esi,DWORD PTR [ecx-0x10e68b5d]
  4266ec:	jbe    0x4266f4
  4266ee:	push   es
  4266ef:	ins    BYTE PTR es:[edi],dx
  4266f0:	shl    edi,cl
  4266f2:	pop    es
  4266f3:	xchg   esp,eax
  4266f4:	cmp    DWORD PTR [esp+edi*4],0xa
  4266f8:	mov    BYTE PTR [esi],ah
  4266fa:	loopne 0x4266cf
  4266fc:	aas    
  4266fd:	sub    cl,BYTE PTR [ebp+0x4db4085f]
  426703:	ja     0x4266fa
  426705:	daa    
  426706:	popf   
  426707:	sub    DWORD PTR [ecx+0x3a],ebx
  42670a:	mov    ds:0x8ecfecc2,eax
  42670f:	adc    eax,0x894b8077
  426714:	iret   
  426715:	xchg   ebp,eax
  426716:	imul   DWORD PTR [ecx+0x632f089d]
  42671c:	sub    ebx,esp
  42671e:	nop
  42671f:	jg     0x4266cd
  426721:	or     al,BYTE PTR [ecx-0x6f]
  426724:	test   DWORD PTR [ebp-0x3d],ebp
  426727:	(bad)  [ebp-0x1a999d81]
  42672d:	repz mul BYTE PTR [ecx-0x20]
  426731:	jae    0x42672e
  426733:	mov    edi,0xaa34a20f
  426738:	popa   
  426739:	dec    eax
  42673a:	test   BYTE PTR [edi+0x14780af1],0x8c
  426741:	cmp    DWORD PTR [edi+0x3a],0x3d
  426745:	sub    bh,BYTE PTR [edx-0x170c84ae]
  42674b:	inc    ebp
  42674c:	mov    cl,0x86
  42674e:	pop    ds
  42674f:	adc    DWORD PTR ds:0x5baf29a4,esi
  426755:	sub    BYTE PTR [eax],dh
  426757:	inc    edi
  426758:	lea    ecx,[esi+ebx*4]
  42675b:	dec    ecx
  42675c:	pop    esp
  42675d:	pop    ebp
  42675e:	inc    eax
  42675f:	sbb    ecx,DWORD PTR [ecx]
  426761:	iret   
  426762:	mov    es,WORD PTR [ecx+0x240243cf]
  426768:	frstor [eax-0x53]
  42676b:	(bad)  
  42676c:	mov    eax,ds:0xa26330f3
  426771:	stos   BYTE PTR es:[edi],al
  426772:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426773:	sub    BYTE PTR [edi+0x6d],0xe7
  426777:	jns    0x426742
  426779:	cs pop es
  42677b:	mov    ecx,0x42720031
  426780:	sbb    BYTE PTR [eax],bh
  426782:	test   edi,eax
  426784:	sti    
  426785:	ins    DWORD PTR es:[edi],dx
  426786:	loopne 0x426708
  426788:	call   0xbc86469a
  42678d:	xor    esp,DWORD PTR [esi+eiz*1-0x79]
  426791:	pop    ds
  426792:	push   ebx
  426793:	aaa    
  426794:	mov    BYTE PTR [esi-0x30f8687e],dh
  42679a:	stos   BYTE PTR es:[edi],al
  42679b:	mov    esi,0x13572885
  4267a0:	call   0x15b4:0x16df9db2
  4267a7:	fst    st(1)
  4267a9:	sbb    DWORD PTR [ebx],esi
  4267ab:	loope  0x42674a
  4267ad:	or     edx,DWORD PTR [edi-0x47]
  4267b0:	inc    ebx
  4267b1:	add    bl,BYTE PTR [edi]
  4267b3:	push   es
  4267b4:	lea    ebx,[edi]
  4267b6:	in     eax,0x1e
  4267b8:	sbb    ah,bl
  4267ba:	add    BYTE PTR [eax],al
  4267bc:	cli    
  4267bd:	rcl    DWORD PTR ds:0xfac73d07,cl
  4267c3:	push   DWORD PTR ds:0x2a1c7bfe
  4267c9:	jle    0x42677b
  4267cb:	ins    DWORD PTR es:[edi],dx
  4267cc:	and    al,0xe0
  4267ce:	add    DWORD PTR [eax],eax
  4267d0:	xchg   BYTE PTR [edx],al
  4267d2:	add    BYTE PTR [eax],al
  4267d4:	push   0x9606f04c
  4267d9:	aaa    
  4267da:	mov    dh,0xe
  4267dc:	adc    ch,BYTE PTR [esi+0x7a2bdd4d]
  4267e2:	push   es
  4267e3:	pop    esp
  4267e4:	test   DWORD PTR [ecx],edi
  4267e6:	xor    ebp,DWORD PTR [ebx]
  4267e8:	jg     0x426772
  4267ea:	jno    0x4267bb
  4267ec:	mov    ebp,0x1817f815
  4267f1:	dec    ebp
  4267f2:	push   ecx
  4267f3:	cwde   
  4267f4:	lods   eax,DWORD PTR ds:[esi]
  4267f5:	adc    cl,cl
  4267f7:	push   ebp
  4267f8:	imul   edx,ebp,0x73416e0e
  4267fe:	test   al,0x77
  426800:	push   esi
  426801:	xchg   ebp,eax
  426802:	sbb    eax,0x4b00a478
  426807:	dec    edx
  426808:	sti    
  426809:	jl     0x4267e2
  42680b:	mov    ebx,0xf7f0d288
  426810:	xor    DWORD PTR [eax-0x76],0xffffffc3
  426814:	shr    BYTE PTR [esi-0x48],0x3b
  426818:	nop
  426819:	imul   edx,DWORD PTR [ecx+0x4323369e],0x5b0dc5eb
  426823:	and    al,0x1
  426825:	sbb    WORD PTR ds:0xee1c4e9,sp
  42682c:	sbb    BYTE PTR [ebx-0x1a],0xa9
  426830:	push   0x6e
  426832:	and    esi,DWORD PTR [edx-0x7224095e]
  426838:	and    esp,esi
  42683a:	adc    DWORD PTR [edx],ebp
  42683c:	mov    ds:0xedb61545,eax
  426841:	jne    0x426896
  426843:	add    eax,0x9eb326d9
  426848:	push   edx
  426849:	pushf  
  42684a:	sub    BYTE PTR [ebp+0x20036bd0],dh
  426850:	mov    ds:0x52c50d30,al
  426855:	push   edi
  426856:	inc    ebp
  426857:	or     esi,eax
  426859:	das    
  42685a:	data16 scas al,BYTE PTR es:[edi]
  42685c:	pop    ebp
  42685d:	outs   dx,DWORD PTR ds:[esi]
  42685e:	fadd   QWORD PTR [edx+eiz*4-0x7f64da1b]
  426865:	jge    0x42681e
  426867:	mov    ah,0x33
  426869:	mov    dl,0xad
  42686b:	call   0xd85a:0xa77a87a4
  426872:	into   
  426873:	cmp    al,0x5a
  426875:	dec    eax
  426876:	jbe    0x42682d
  426878:	loop   0x42682d
  42687a:	mov    cl,0x72
  42687c:	jb     0x426823
  42687e:	cmc    
  42687f:	add    eax,0xb1082763
  426884:	push   ss
  426885:	push   eax
  426886:	xchg   ebx,eax
  426887:	es pop es
  426889:	icebp  
  42688a:	in     al,dx
  42688b:	fdivrp st(1),st
  42688d:	cld    
  42688e:	cmp    bx,WORD PTR [edi]
  426891:	inc    eax
  426892:	rol    DWORD PTR ss:[ecx-0x71],1
  426896:	aam    0x27
  426898:	jmp    0x5738:0xe72b520c
  42689f:	lds    eax,FWORD PTR [eax+0x40]
  4268a2:	sub    eax,0x92d7a478
  4268a7:	call   DWORD PTR [edi]
  4268a9:	in     al,0xda
  4268ab:	pushf  
  4268ac:	jnp    0x426878
  4268ae:	pusha  
  4268af:	sahf   
  4268b0:	sub    BYTE PTR [edi],dh
  4268b2:	sbb    ah,BYTE PTR [ebp+0xe]
  4268b5:	arpl   si,dx
  4268b7:	push   ecx
  4268b8:	pop    esi
  4268b9:	nop
  4268ba:	dec    edx
  4268bb:	out    0x12,eax
  4268bd:	and    eax,0xfe08ec6f
  4268c2:	pop    esi
  4268c3:	or     BYTE PTR [ebp-0x3fe098d3],ch
  4268c9:	sar    dh,0xb3
  4268cc:	outs   dx,DWORD PTR ds:[esi]
  4268cd:	xor    al,0xb4
  4268cf:	jno    0x42690e
  4268d1:	stc    
  4268d2:	popa   
  4268d3:	aas    
  4268d4:	out    dx,al
  4268d5:	es in  eax,dx
  4268d7:	xchg   edi,eax
  4268d8:	pop    esi
  4268d9:	ja     0x426948
  4268db:	(bad)
  4268de:	mov    DWORD PTR [ebp-0x4c],edi
  4268e1:	jl     0x426892
  4268e3:	jne    0x4268e5
  4268e5:	adc    ebp,DWORD PTR [bp-0x518d]
  4268ea:	sbb    BYTE PTR [ebx],dh
  4268ec:	mov    bl,0x7e
  4268ee:	pushf  
  4268ef:	stc    
  4268f0:	popa   
  4268f1:	ins    DWORD PTR es:[edi],dx
  4268f2:	scas   eax,DWORD PTR es:[edi]
  4268f3:	adc    al,0xa5
  4268f5:	add    DWORD PTR [esi],edx
  4268f7:	inc    edi
  4268f8:	adc    DWORD PTR [ebp+edi*1+0x7f44d2b6],ecx
  4268ff:	push   edx
  426900:	mov    eax,ds:0xc5fd1660
  426905:	stos   DWORD PTR es:[edi],eax
  426906:	dec    esi
  426907:	dec    eax
  426908:	ret    
  426909:	adc    DWORD PTR [edi],ebp
  42690b:	nop
  42690c:	aad    0x1d
  42690e:	jmp    0xb8c2:0xbf7d66c7
  426915:	arpl   WORD PTR [esi],dx
  426917:	adc    DWORD PTR [eax+ebx*2],esp
  42691a:	retf   
  42691b:	push   edi
  42691c:	std    
  42691d:	xor    BYTE PTR [edx],bh
  42691f:	mov    bh,0xbe
  426921:	sbb    esp,DWORD PTR ds:0xc6e6798e
  426927:	imul   ebx,DWORD PTR [ebp*1-0x68c18ec5],0xfffffff0
  42692f:	adc    ah,cl
  426931:	js     0x4268b3
  426933:	inc    esp
  426934:	js     0x4268db
  426936:	ret    0x1cab
  426939:	std    
  42693a:	aam    0xbd
  42693c:	adc    DWORD PTR [esi-0x135fb1a1],esi
  426942:	or     bh,dh
  426944:	cmp    ecx,DWORD PTR [edi+0x2aa7aca7]
  42694a:	push   edx
  42694b:	gs jo  0x426913
  42694e:	cmp    al,dl
  426950:	xchg   esp,eax
  426951:	fild   DWORD PTR [esi-0x3]
  426954:	adc    BYTE PTR [esi-0x6d6baba],bl
  42695a:	sbb    eax,0xbb8a7a25
  42695f:	mov    ds:0x3734ad5e,eax
  426964:	sbb    DWORD PTR [edx+0xaf51c77],0x4496fcfd
  42696e:	dec    ebp
  42696f:	mov    bl,0xe
  426971:	sar    BYTE PTR [eax+0x48ee591d],cl
  426977:	loop   0x426963
  426979:	push   edx
  42697a:	(bad)  
  42697b:	loop   0x42691c
  42697d:	in     eax,dx
  42697e:	adc    al,0xa2
  426980:	mov    ds:0x30b0eb39,al
  426985:	ds ja  0x4269ec
  426988:	out    dx,al
  426989:	or     eax,0x7c48386d
  42698e:	aad    0xd2
  426990:	out    dx,eax
  426991:	or     BYTE PTR [edx],dl
  426993:	mov    edi,DWORD PTR [ebp-0x327d939]
  426999:	adc    ebp,DWORD PTR [edx+edi*1]
  42699c:	inc    edi
  42699d:	xchg   ebp,eax
  42699e:	(bad)  
  42699f:	pop    ds
  4269a0:	pop    es
  4269a1:	add    ebx,DWORD PTR [ecx-0x78]
  4269a4:	ss push ecx
  4269a6:	cmp    ebx,edx
  4269a8:	xchg   edi,eax
  4269a9:	call   FWORD PTR [eax-0x33]
  4269ac:	lds    ecx,FWORD PTR [eax-0x15]
  4269af:	outs   dx,DWORD PTR ds:[esi]
  4269b0:	mov    bh,0xad
  4269b2:	push   ebx
  4269b3:	repnz loope 0x42699f
  4269b6:	mov    ecx,0x77eed113
  4269bb:	popf   
  4269bc:	push   DWORD PTR [eax+0x69]
  4269bf:	loopne 0x426a11
  4269c1:	je     0x42697a
  4269c3:	into   
  4269c4:	sti    
  4269c5:	repnz and eax,0xa13006d1
  4269cb:	lods   al,BYTE PTR ds:[esi]
  4269cc:	loope  0x4269aa
  4269ce:	xor    al,0xd0
  4269d0:	sbb    BYTE PTR [eax],bl
  4269d2:	pusha  
  4269d3:	rol    edx,cl
  4269d5:	rol    BYTE PTR [ecx],0xc5
  4269d8:	fist   DWORD PTR [edx-0x57a6acf5]
  4269de:	repnz arpl sp,sp
  4269e1:	rol    BYTE PTR [eax+0x680c8741],cl
  4269e7:	daa    
  4269e8:	pop    ebx
  4269e9:	jne    0x426988
  4269eb:	dec    eax
  4269ec:	inc    ecx
  4269ed:	push   ebp
  4269ee:	dec    edx
  4269ef:	loope  0x426980
  4269f1:	fwait
  4269f2:	not    BYTE PTR [ebx+0x43a3e1c3]
  4269f8:	lock or DWORD PTR [ebx+edi*8],0x50
  4269fd:	xchg   ebp,eax
  4269fe:	xchg   bl,cl
  426a00:	in     eax,0x99
  426a02:	inc    esp
  426a03:	(bad)  
  426a04:	(bad)
  426a07:	jbe    0x426a4e
  426a09:	leave  
  426a0a:	push   ds
  426a0b:	out    0xf5,eax
  426a0d:	cmp    edi,DWORD PTR [eax-0x21]
  426a10:	scas   eax,DWORD PTR es:[edi]
  426a11:	cwde   
  426a12:	in     eax,0xa2
  426a14:	int    0xd9
  426a16:	shr    DWORD PTR [edx-0x55],1
  426a19:	inc    edi
  426a1a:	push   edi
  426a1b:	or     al,0xeb
  426a1d:	pop    ss
  426a1e:	add    bh,BYTE PTR [edx]
  426a20:	aam    0x14
  426a22:	int3   
  426a23:	out    dx,eax
  426a24:	mov    dl,0xf9
  426a26:	mov    ebx,0xe6e60ccf
  426a2b:	cmp    DWORD PTR [eax+ebx*1-0x42e95d5f],0x1a
  426a33:	push   ss
  426a34:	mov    bl,BYTE PTR [esi]
  426a36:	out    0xc,eax
  426a38:	mov    ch,BYTE PTR [ebx+0x2c]
  426a3b:	sbb    DWORD PTR [ebx+eiz*1-0x67e76e06],edi
  426a42:	mov    cl,0x17
  426a44:	mov    ch,0xef
  426a46:	xor    eax,0xdf5177d1
  426a4b:	imul   edi,ebx,0xffffff96
  426a4e:	cmp    al,0x15
  426a50:	aaa    
  426a51:	inc    ebx
  426a52:	scas   al,BYTE PTR es:[edi]
  426a53:	push   esi
  426a54:	rcr    BYTE PTR [ecx+esi*1+0x40],1
  426a58:	sub    eax,DWORD PTR [eax-0x9310000]
  426a5e:	popf   
  426a5f:	push   eax
  426a60:	mov    ebp,0xefffcf7b
  426a65:	lods   al,BYTE PTR ds:[esi]
  426a66:	(bad)  
  426a67:	push   ss
  426a68:	cmp    dh,BYTE PTR [ebp-0x1d553da2]
  426a6e:	add    DWORD PTR [eax],eax
  426a70:	xchg   BYTE PTR [edx],al
  426a72:	add    BYTE PTR [eax],al
  426a74:	test   BYTE PTR [ebx+ebp*8-0x74],bh
  426a78:	jbe    0x426a60
  426a7a:	div    DWORD PTR [ebx+edx*1+0x46]
  426a7e:	daa    
  426a7f:	add    BYTE PTR [eax],dh
  426a81:	retf   
  426a82:	xchg   esp,eax
  426a83:	sbb    DWORD PTR [ebx-0x47],esp
  426a86:	xor    al,0xe2
  426a88:	jae    0x426a70
  426a8a:	xchg   edi,eax
  426a8b:	hlt    
  426a8c:	dec    edi
  426a8d:	jmp    0x8efd400e
  426a92:	push   ecx
  426a93:	outs   dx,DWORD PTR ds:[esi]
  426a94:	xchg   BYTE PTR [eax-0x4d9559d1],ah
  426a9a:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  426a9c:	enter  0x706d,0x74
  426aa0:	xchg   ebx,eax
  426aa1:	or     BYTE PTR [edx],ah
  426aa3:	push   eax
  426aa4:	mov    esp,0xe1cf0245
  426aa9:	xor    dh,BYTE PTR [ebx]
  426aab:	pop    ds
  426aac:	mov    esi,0x4396a0c2
  426ab1:	adc    DWORD PTR [esi-0x7d],ecx
  426ab4:	adc    esi,DWORD PTR [edx]
  426ab6:	adc    ch,al
  426ab8:	xchg   edx,eax
  426ab9:	xor    al,0xdb
  426abb:	retf   0x510a
  426abe:	out    0xc7,eax
  426ac0:	mov    eax,0xe31fd8ef
  426ac5:	imul   esp,ebp,0x78d867f9
  426acb:	jno    0x426a53
  426acd:	test   DWORD PTR [edi-0x63a5b903],edi
  426ad3:	out    dx,al
  426ad4:	xor    bl,0x34
  426ad7:	retf   0x678b
  426ada:	add    cl,BYTE PTR [edx+edx*2]
  426add:	xchg   ebp,eax
  426ade:	add    ah,BYTE PTR [edi]
  426ae0:	test   BYTE PTR [edi+0x73daa2b1],bl
  426ae6:	popf   
  426ae7:	jge    0x426ac2
  426ae9:	xlat   BYTE PTR ds:[ebx]
  426aea:	pop    edi
  426aeb:	adc    ecx,edx
  426aed:	dec    edx
  426aee:	xchg   esi,eax
  426aef:	and    eax,0x722f5415
  426af4:	sub    BYTE PTR [edi+0x28],bh
  426af7:	leave  
  426af8:	xchg   DWORD PTR [ecx+0x62c6194f],edx
  426afe:	ret    0x7e5d
  426b01:	inc    esi
  426b02:	lea    eax,[esi+0x2872679f]
  426b08:	pusha  
  426b09:	clc    
  426b0a:	sbb    ecx,ebx
  426b0c:	in     eax,0x5c
  426b0e:	stc    
  426b0f:	inc    esp
  426b10:	jnp    0x426b31
  426b12:	cmp    al,0x51
  426b14:	fucompp 
  426b16:	sbb    ah,dh
  426b18:	fistp  WORD PTR [eax+ebx*1]
  426b1b:	push   ss
  426b1c:	out    0xb6,al
  426b1e:	jmp    0xfac:0x5a2cb254
  426b25:	xchg   edx,eax
  426b26:	lods   al,BYTE PTR ds:[esi]
  426b27:	jo     0x426aac
  426b29:	(bad)  
  426b2a:	or     al,0xe3
  426b2c:	cmp    eax,0x1b640051
  426b31:	nop
  426b32:	aad    0xd5
  426b34:	push   esp
  426b35:	rcr    BYTE PTR [esi-0x78],0x50
  426b39:	jns    0x426acc
  426b3b:	add    DWORD PTR [ebx],edx
  426b3d:	and    DWORD PTR [esi+ebx*1],esi
  426b40:	dec    eax
  426b41:	dec    eax
  426b42:	arpl   WORD PTR ds:0x5ad008df,ax
  426b48:	pop    ss
  426b49:	(bad)  
  426b4a:	fucomi st,st(4)
  426b4c:	scas   al,BYTE PTR es:[edi]
  426b4d:	popa   
  426b4e:	xchg   BYTE PTR [ebx-0x6b],cl
  426b51:	jl     0x426ad4
  426b53:	dec    esi
  426b54:	jecxz  0x426b9f
  426b56:	call   0xae28:0xf4f1ba66
  426b5d:	sbb    BYTE PTR [ecx],ah
  426b5f:	jg     0x426b82
  426b61:	mov    es,ecx
  426b63:	push   0x61
  426b65:	mov    ebp,0xff5363ae
  426b6a:	dec    edi
  426b6b:	jecxz  0x426b9b
  426b6d:	cmp    ebx,0xffffff83
  426b70:	mov    esi,0xf385d898
  426b75:	sbb    DWORD PTR [ebp+0x7b],eax
  426b78:	js     0x426b42
  426b7a:	add    DWORD PTR [ebx+0x578d91c7],0x1d
  426b81:	mov    ebx,esi
  426b83:	loop   0x426bcc
  426b85:	xchg   esp,eax
  426b86:	aas    
  426b87:	ds pusha 
  426b89:	xor    al,0x12
  426b8b:	and    BYTE PTR [esi*2+0x18f0b9e],bl
  426b92:	mov    ebx,0x304a0084
  426b97:	mov    eax,0xd6319bdc
  426b9c:	inc    ebp
  426b9d:	or     BYTE PTR [ebx+ecx*2+0x3b],ah
  426ba1:	or     eax,DWORD PTR [edi+0x40f179ca]
  426ba7:	in     al,0xf6
  426ba9:	cmp    DWORD PTR [esi],0x9
  426bac:	enter  0xa268,0x78
  426bb0:	pop    edx
  426bb1:	sub    DWORD PTR [ecx-0x57],esp
  426bb4:	mov    eax,ds:0xfa92110b
  426bb9:	sub    DWORD PTR [esi+0x18],0x4e
  426bbd:	xchg   edx,eax
  426bbe:	adc    eax,esi
  426bc0:	loop   0x426c16
  426bc2:	sbb    bh,BYTE PTR [eax+eax*4+0x14]
  426bc6:	lds    edx,FWORD PTR [eax-0x62c3017b]
  426bcc:	pushf  
  426bcd:	xor    BYTE PTR [ebp+0x2e],bl
  426bd0:	imul   ecx,ebx,0x72
  426bd3:	xchg   edi,eax
  426bd4:	sbb    ebp,ebp
  426bd6:	add    al,0x46
  426bd8:	sbb    ah,dh
  426bda:	jb     0x426ba8
  426bdc:	jne    0x426be7
  426bde:	push   ecx
  426bdf:	or     DWORD PTR [ebx+0x12],ebp
  426be2:	mov    ch,0xe8
  426be4:	sub    DWORD PTR [ecx+0x45],eax
  426be7:	add    dl,ah
  426be9:	and    eax,0xc153992
  426bee:	sahf   
  426bef:	inc    esp
  426bf0:	xchg   ebx,eax
  426bf1:	mov    ah,BYTE PTR [edx-0x42]
  426bf4:	add    al,0x15
  426bf6:	in     eax,0x76
  426bf8:	adc    al,0xa7
  426bfa:	arpl   WORD PTR [ebx],dx
  426bfc:	mov    esi,0x41d0f43e
  426c01:	adc    DWORD PTR [ebp-0x9a772f],esp
  426c07:	push   edi
  426c08:	push   ecx
  426c09:	push   edx
  426c0a:	dec    ecx
  426c0b:	stc    
  426c0c:	mov    eax,ds:0xeed165bf
  426c11:	push   ss
  426c12:	adc    dh,BYTE PTR [ecx-0x39fa194a]
  426c18:	jo     0x426c0c
  426c1a:	sti    
  426c1b:	xor    al,0x13
  426c1d:	jnp    0x426bf4
  426c1f:	inc    ebx
  426c20:	ret    
  426c21:	or     ebx,DWORD PTR ds:0xd44efa71
  426c27:	mov    edi,0x69c6519c
  426c2c:	add    al,0x92
  426c2e:	inc    DWORD PTR [edx+0x5a]
  426c31:	sahf   
  426c32:	popa   
  426c33:	sar    BYTE PTR [edx+0x22],0xcf
  426c37:	retf   
  426c38:	mov    BYTE PTR [esi],cl
  426c3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426c3b:	dec    edi
  426c3c:	test   al,0xec
  426c3e:	sub    bl,BYTE PTR [esi-0x47]
  426c41:	cmp    DWORD PTR [edi+0x5d],ebp
  426c44:	lods   eax,DWORD PTR ds:[esi]
  426c45:	mov    esp,0xb43dd0e7
  426c4a:	data16 (bad) 
  426c4c:	mov    edx,0x2ff99c1d
  426c51:	mov    ebp,0x4a23e992
  426c56:	imul   edi,DWORD PTR [edx],0x38
  426c59:	or     eax,ebx
  426c5b:	xchg   edi,eax
  426c5c:	sbb    DWORD PTR [esi+0x14],ebx
  426c5f:	outs   dx,BYTE PTR ds:[esi]
  426c60:	cmc    
  426c61:	pusha  
  426c62:	push   esp
  426c63:	xor    ebp,ecx
  426c65:	nop
  426c66:	xchg   BYTE PTR [ebp-0x22452f3a],al
  426c6c:	into   
  426c6d:	xor    eax,0xca1a95a3
  426c72:	jg     0x426caf
  426c74:	inc    edi
  426c75:	cmp    eax,0xa2911874
  426c7a:	add    DWORD PTR [esi],esp
  426c7c:	push   ebx
  426c7d:	push   es
  426c7e:	and    al,0xd0
  426c80:	movups xmm5,XMMWORD PTR [ebx+eiz*2]
  426c84:	stc    
  426c85:	xchg   DWORD PTR [edi],ebp
  426c87:	push   es
  426c88:	(bad)  
  426c89:	cli    
  426c8a:	mov    WORD PTR [ecx+eiz*8+0x5e6445c6],?
  426c91:	into   
  426c92:	int3   
  426c93:	stc    
  426c94:	jb     0x426c50
  426c96:	or     ebp,esp
  426c98:	jno    0x426cfa
  426c9a:	je     0x426cd4
  426c9c:	jne    0x426c6a
  426c9e:	push   ss
  426c9f:	test   al,0x46
  426ca1:	inc    eax
  426ca2:	xor    eax,0xa9d4c517
  426ca7:	cmp    BYTE PTR [edi-0x73],bh
  426caa:	(bad)  
  426cab:	and    ebx,DWORD PTR [edx-0x345b8ea7]
  426cb1:	imul   ecx,DWORD PTR [ecx],0x3f
  426cb4:	mov    al,0x51
  426cb6:	mov    al,0xe0
  426cb8:	mov    eax,0x40883bd
  426cbd:	in     eax,dx
  426cbe:	sub    esi,edx
  426cc0:	mov    edx,0xfef9f4e
  426cc5:	adc    cl,BYTE PTR [edi]
  426cc7:	jno    0x426ce0
  426cc9:	into   
  426cca:	or     al,0xb9
  426ccc:	and    DWORD PTR [edi+0x1fdb042],ebx
  426cd2:	aad    0xa3
  426cd4:	rol    bl,0x7b
  426cd7:	(bad)  
  426cd8:	sbb    eax,0x99a635b3
  426cdd:	push   cs
  426cde:	fnstsw WORD PTR [edi+ebx*2+0x79]
  426ce2:	xor    DWORD PTR [ebx+0x41],0x6bf603b4
  426ce9:	pop    edi
  426cea:	inc    eax
  426ceb:	ins    DWORD PTR es:[edi],dx
  426cec:	or     edi,0xfcdd4c55
  426cf2:	shr    BYTE PTR [eax+0x51c57388],0xfe
  426cf9:	pop    es
  426cfa:	add    BYTE PTR [eax],al
  426cfc:	push   0x6f1e2d23
  426d01:	push   ds
  426d02:	jnp    0x426d7b
  426d04:	fisub  WORD PTR [ebp+0x58eeb036]
  426d0a:	push   edx
  426d0b:	add    dh,BYTE PTR [eax]
  426d0d:	in     eax,0x1
  426d0f:	add    BYTE PTR [esi-0x44fffffe],al
  426d15:	imul   edi,DWORD PTR [eax+0x3d29ec9],0xc634e269
  426d1f:	lahf   
  426d20:	ret    
  426d21:	adc    BYTE PTR [ebp-0x111090c6],0x61
  426d28:	pop    esi
  426d29:	lods   al,BYTE PTR ds:[esi]
  426d2a:	out    dx,al
  426d2b:	sbb    DWORD PTR [eax-0x6d],esp
  426d2e:	test   eax,0x654276b1
  426d33:	push   edx
  426d34:	jmp    0xe14b:0xf0cf5f38
  426d3b:	int3   
  426d3c:	in     al,dx
  426d3d:	sbb    eax,0x1d89ebd4
  426d42:	call   0x372d:0xb0d657f6
  426d49:	xor    edx,DWORD PTR [edx+0x6d]
  426d4c:	out    0xb0,al
  426d4e:	jg     0x426d21
  426d50:	pop    ecx
  426d51:	sbb    DWORD PTR [edx-0x65aef0ef],esi
  426d57:	add    al,BYTE PTR [edi+esi*2+0x2b37b633]
  426d5e:	dec    edi
  426d5f:	enter  0xfe3,0xce
  426d63:	fcmovnu st,st(6)
  426d65:	pop    esi
  426d66:	daa    
  426d67:	mov    ds:0xa60375cc,al
  426d6c:	adc    eax,ebp
  426d6e:	mov    edi,DWORD PTR [esi*1-0x4b116f0c]
  426d75:	dec    edi
  426d76:	dec    edi
  426d77:	dec    eax
  426d78:	mov    edi,esp
  426d7a:	or     DWORD PTR [ebx],esi
  426d7c:	test   DWORD PTR [eax+0x14],ecx
  426d7f:	jg     0x426dc0
  426d81:	xor    ch,BYTE PTR [ebx+0x34]
  426d84:	jbe    0x426dfb
  426d86:	cwde   
  426d87:	dec    edx
  426d88:	cmp    DWORD PTR [eax],edx
  426d8a:	xchg   DWORD PTR [edi+0x52845d7],ecx
  426d90:	ds inc esp
  426d92:	fstp   DWORD PTR [esi-0xa]
  426d95:	repz call 0x530c:0x371be792
  426d9d:	cmp    al,0x91
  426d9f:	xchg   ecx,eax
  426da0:	dec    ebp
  426da1:	mov    ds:0x8f176cf0,eax
  426da6:	mov    ecx,gs
  426da8:	ret    
  426da9:	loopne 0x426d6f
  426dab:	cmp    dh,0xc
  426dae:	test   eax,0x5b156b12
  426db3:	mov    WORD PTR [esi],ds
  426db5:	xor    eax,0x12996664
  426dba:	cld    
  426dbb:	leave  
  426dbc:	sbb    eax,0xba23215b
  426dc1:	mov    ch,0x79
  426dc3:	mov    edi,cs
  426dc5:	stos   DWORD PTR es:[edi],eax
  426dc6:	xchg   ecx,eax
  426dc7:	aaa    
  426dc8:	call   0xbf02:0xd9e68f62
  426dcf:	push   ebx
  426dd0:	jmp    0xf8c6:0xd0275bcb
  426dd7:	lock ret 
  426dd9:	pushf  
  426dda:	fimul  DWORD PTR [ecx]
  426ddc:	inc    esi
  426ddd:	or     dl,bh
  426ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426de0:	mov    bl,0xb1
  426de2:	cmp    eax,0x8d7f217b
  426de7:	fcmovu st,st(5)
  426de9:	call   FWORD PTR [esi-0x3c911e6a]
  426def:	popa   
  426df0:	repz ds (bad) 
  426df3:	js     0x426e39
  426df5:	mov    ebx,edx
  426df7:	and    DWORD PTR [eax+ebp*1],eax
  426dfa:	dec    ebx
  426dfb:	xchg   esp,eax
  426dfc:	sub    BYTE PTR [ebp+0x52],al
  426dff:	sub    al,0xc3
  426e01:	test   eax,0x3a748239
  426e06:	pop    edx
  426e07:	jge    0x426dfc
  426e09:	stos   BYTE PTR es:[edi],al
  426e0a:	sar    DWORD PTR [eax-0x1e1790d1],1
  426e10:	inc    edx
  426e11:	das    
  426e12:	mov    ds:0x3b807b9d,eax
  426e17:	call   0xdf3a:0x4aacd4f6
  426e1e:	adc    al,0x5c
  426e20:	push   ss
  426e21:	inc    edi
  426e22:	or     ch,BYTE PTR [edx-0x20]
  426e25:	lods   eax,DWORD PTR ds:[esi]
  426e26:	sbb    al,0x85
  426e28:	xchg   ebp,eax
  426e29:	add    al,0xee
  426e2b:	jmp    0x426e2a
  426e2d:	jp     0x426ddd
  426e2f:	rcr    BYTE PTR [ebp+0x63],0x62
  426e33:	dec    esp
  426e34:	pop    ss
  426e35:	call   0x6ca3fa44
  426e3a:	es add bh,al
  426e3d:	pusha  
  426e3e:	pushf  
  426e3f:	std    
  426e40:	inc    esp
  426e41:	retf   
  426e42:	stc    
  426e43:	or     al,0x92
  426e45:	and    BYTE PTR [ebx+0x20],0x64
  426e49:	mov    eax,ds:0x46c9aefe
  426e4e:	fistp  WORD PTR [edx+0x1b6ed364]
  426e54:	repnz mov ecx,0xd9080b06
  426e5a:	mov    ds:0xb6f6fb1b,eax
  426e5f:	push   ebx
  426e60:	rcr    DWORD PTR [edi],cl
  426e62:	inc    edi
  426e63:	sub    ah,BYTE PTR [ebp-0x6b9b253f]
  426e69:	scas   eax,DWORD PTR es:[edi]
  426e6a:	jl     0x426e42
  426e6c:	xor    al,0x71
  426e6e:	in     al,0x5e
  426e70:	xlat   BYTE PTR ds:[ebx]
  426e71:	hlt    
  426e72:	mov    al,0x81
  426e74:	aad    0xea
  426e76:	mov    bl,0xb7
  426e78:	adc    al,BYTE PTR [ecx+0x5cf24fb]
  426e7e:	mov    cl,BYTE PTR [ecx-0x41dcde25]
  426e84:	dec    esp
  426e85:	jo     0x426e60
  426e87:	ins    BYTE PTR es:[edi],dx
  426e88:	and    BYTE PTR [esp+eax*2-0x63],al
  426e8c:	jecxz  0x426eca
  426e8e:	jae    0x426e66
  426e90:	repnz sub DWORD PTR [ecx],edx
  426e93:	mov    ds:0x89f953b6,eax
  426e98:	mov    eax,edi
  426e9a:	dec    ebx
  426e9b:	out    0xc2,al
  426e9d:	iret   
  426e9e:	sbb    BYTE PTR [edx+0x221b988f],ah
  426ea4:	pop    edi
  426ea5:	fistp  QWORD PTR [edx-0x59907581]
  426eab:	push   eax
  426eac:	and    al,0xdd
  426eae:	sbb    DWORD PTR [ebx-0x31],ebp
  426eb1:	or     BYTE PTR [edi+edx*8-0x37f463c8],bl
  426eb8:	pop    ebp
  426eb9:	sbb    BYTE PTR [ebp-0x7d],ah
  426ebc:	or     BYTE PTR [ebp+0x66],bh
  426ebf:	cmp    ebx,edi
  426ec1:	popa   
  426ec2:	and    eax,0x812f8bc9
  426ec7:	mov    edi,0x3655501b
  426ecc:	jbe    0x426f1a
  426ece:	stc    
  426ecf:	push   ebx
  426ed0:	into   
  426ed1:	not    ch
  426ed3:	jge    0x426efa
  426ed5:	xchg   ecx,eax
  426ed6:	pop    ecx
  426ed7:	sbb    al,0x57
  426ed9:	push   ds
  426eda:	jecxz  0x426f07
  426edc:	jb     0x426f27
  426ede:	mov    bl,0x3a
  426ee0:	cmp    bh,BYTE PTR [esi]
  426ee2:	xlat   BYTE PTR ds:[ebx]
  426ee3:	mov    ebx,0xda19b16
  426ee8:	jb     0x426ef3
  426eea:	mov    edi,0xaf9952ce
  426eef:	fild   QWORD PTR ds:0x82afc144
  426ef5:	and    DWORD PTR [ecx],ebp
  426ef7:	sub    bh,BYTE PTR [edi+edx*4-0x41f5d032]
  426efe:	cli    
  426eff:	xor    cl,BYTE PTR [edi-0x6a0f38e4]
  426f05:	add    eax,0x23cafbb7
  426f0a:	pop    edx
  426f0b:	sbb    dh,ch
  426f0d:	ins    DWORD PTR es:[edi],dx
  426f0e:	add    dh,BYTE PTR [eax-0x21416e]
  426f14:	or     al,0x8c
  426f16:	push   eax
  426f17:	dec    esp
  426f18:	(bad)
  426f1b:	mov    ds:0x2b12c645,al
  426f20:	cmp    bh,BYTE PTR ds:0xb4c9f48
  426f26:	ds pop edx
  426f28:	sbb    al,0x54
  426f2a:	pop    eax
  426f2b:	shl    DWORD PTR [eiz*2-0x4324eb8d],1
  426f32:	scas   eax,DWORD PTR es:[edi]
  426f33:	xchg   esi,eax
  426f34:	mov    dl,0xd
  426f36:	jne    0x426eef
  426f38:	mov    ds:0xed039aa6,al
  426f3d:	or     bh,bh
  426f3f:	imul   esp,DWORD PTR [esi],0x7ff684ef
  426f45:	or     DWORD PTR [ecx+0x784b5e],edx
  426f4b:	test   eax,0x335203be
  426f50:	in     eax,0x37
  426f52:	clc    
  426f53:	xchg   edx,eax
  426f54:	jo     0x426f85
  426f56:	jns    0x426fa6
  426f58:	cmp    dh,BYTE PTR [ebp+0x19]
  426f5b:	push   eax
  426f5c:	push   0xffffffa8
  426f5e:	das    
  426f5f:	add    eax,0x33990e53
  426f64:	mov    BYTE PTR [eax+edx*4-0x17],bl
  426f68:	mov    eax,0x32de861a
  426f6d:	xor    bl,bl
  426f6f:	mov    bh,0x3e
  426f71:	unpcklps xmm6,XMMWORD PTR [edx+0x56]
  426f75:	lods   al,BYTE PTR ds:[esi]
  426f76:	mov    ebp,DWORD PTR [ebp+0x1e]
  426f79:	arpl   WORD PTR [edi],bp
  426f7b:	push   ss
  426f7c:	push   ds
  426f7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f7e:	sbb    BYTE PTR [esi+0x6b],0xa3
  426f82:	inc    esi
  426f83:	lds    ebp,FWORD PTR [ecx+edi*8+0x2c]
  426f87:	aaa    
  426f88:	or     ebp,DWORD PTR [eax+edi*8+0x647b53af]
  426f8f:	daa    
  426f90:	jns    0x426ff0
  426f92:	out    0x32,eax
  426f94:	into   
  426f95:	mov    edi,0xe6ab14d5
  426f9a:	add    BYTE PTR [eax],al
  426f9c:	cdq    
  426f9d:	enter  0x9ff8,0xf9
  426fa1:	mov    edi,0xdf92ceff
  426fa6:	push   ds
  426fa7:	outs   dx,BYTE PTR ds:[esi]
  426fa8:	xchg   edx,eax
  426fa9:	and    al,0x94
  426fab:	xor    BYTE PTR [esi-0x79fffe19],0x2
  426fb2:	add    BYTE PTR [eax],al
  426fb4:	push   0x46f97e70
  426fb9:	das    
  426fba:	enter  0x882b,0x27
  426fbe:	mov    cl,0x3e
  426fc0:	sti    
  426fc1:	push   esp
  426fc2:	or     DWORD PTR [ebx-0x29d2aded],0x45
  426fc9:	mul    BYTE PTR [eax+0x64]
  426fcc:	or     ch,BYTE PTR ds:0x12d01c2e
  426fd2:	call   0xc8c1:0x4849e237
  426fd9:	adc    eax,0x1f3a14f1
  426fde:	push   edi
  426fdf:	sbb    al,0x7d
  426fe1:	sbb    ebp,0xda1ab7f1
  426fe7:	xchg   edx,eax
  426fe8:	mov    esp,0xa91cc8e3
  426fed:	popa   
  426fee:	pushf  
  426fef:	clc    
  426ff0:	mov    ecx,0x6786c6af
  426ff5:	xchg   edx,eax
  426ff6:	lahf   
  426ff7:	mov    ah,0x5f
  426ff9:	pop    ecx
  426ffa:	and    BYTE PTR [edi+ebx*8+0x47],dh
  426ffe:	sub    DWORD PTR [esi],edx
  427000:	jle    0x426f8b
  427002:	add    BYTE PTR [edx],bl
  427004:	je     0x426f86
  427006:	and    dh,BYTE PTR ds:0x8d7beaa9
  42700c:	mov    bl,0xea
  42700e:	xchg   ebp,esp
  427010:	fmul   QWORD PTR [edi]
  427012:	adc    BYTE PTR [edi+ebp*4],ah
  427015:	out    0x4,al
  427017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427018:	mov    BYTE PTR [edi+0x12b94aaf],ch
  42701e:	ja     0x427021
  427020:	adc    BYTE PTR [ecx-0x542cc525],al
  427026:	dec    edx
  427027:	cmp    al,0x7c
  427029:	(bad)  
  42702a:	adc    BYTE PTR [edx],bh
  42702c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42702d:	xor    DWORD PTR [edx+0x6bbf1111],esp
  427033:	fwait
  427034:	neg    BYTE PTR [ebx+0x24]
  427037:	into   
  427038:	ds add eax,0xd0bb2502
  42703e:	push   ecx
  42703f:	aad    0xa4
  427041:	test   ah,cl
  427043:	pop    ecx
  427044:	cwde   
  427045:	imul   ecx,DWORD PTR [ecx],0x1eee82e4
  42704b:	mov    bh,0xb9
  42704d:	out    0x67,eax
  42704f:	mov    edx,0x2d324bf2
  427054:	mov    ah,0x3
  427056:	dec    ebp
  427057:	pusha  
  427058:	and    ah,BYTE PTR [ebp-0x11]
  42705b:	jge    0x42704f
  42705d:	mov    ecx,?
  42705f:	mov    ch,0xaa
  427061:	sti    
  427062:	mov    ss,WORD PTR [edi-0x6f]
  427065:	dec    ax
  427067:	ins    BYTE PTR es:[edi],dx
  427068:	(bad)  
  427069:	xchg   esi,eax
  42706a:	aad    0x2b
  42706c:	dec    ebx
  42706d:	mov    bh,0xac
  42706f:	xor    dh,al
  427071:	and    esi,DWORD PTR [esi+eax*2+0x1e9ca934]
  427078:	test   DWORD PTR ds:0x38a7422e,esp
  42707e:	cmp    al,0x58
  427080:	pop    ecx
  427081:	inc    ebp
  427082:	repnz ror edi,0xf5
  427086:	sbb    al,0x1a
  427088:	fwait
  427089:	push   ds
  42708a:	dec    ebx
  42708b:	xchg   ebp,eax
  42708c:	fbld   TBYTE PTR [ebx]
  42708e:	retf   0xc0b6
  427091:	shr    BYTE PTR [ebp-0x76557b6f],1
  427097:	ss dec ecx
  427099:	sbb    DWORD PTR [edx-0x3b8e61f1],edi
  42709f:	jle    0x427025
  4270a1:	ret    0x442e
  4270a4:	sub    BYTE PTR [ecx+0x6f0110c9],bl
  4270aa:	xchg   edx,eax
  4270ab:	jl     0x4270fc
  4270ad:	outs   dx,BYTE PTR ds:[esi]
  4270ae:	hlt    
  4270af:	inc    edx
  4270b0:	jge    0x427124
  4270b2:	push   0xfffffff4
  4270b4:	sbb    DWORD PTR [eax],0xffffff82
  4270b7:	sbb    ebp,DWORD PTR ss:[ebx+0x1b67f10d]
  4270be:	dec    esi
  4270bf:	mov    esp,0xcb2a90b3
  4270c4:	aam    0xb8
  4270c6:	fnstenv [ebx]
  4270c8:	xchg   edx,eax
  4270c9:	fisub  DWORD PTR [ebx+0x1eb1fa23]
  4270cf:	mov    al,dh
  4270d1:	sub    ah,BYTE PTR [edx+ebx*8-0x85f9129]
  4270d8:	es daa 
  4270da:	mov    dh,0x3b
  4270dc:	hlt    
  4270dd:	mov    DWORD PTR [ebp-0x7e],edx
  4270e0:	gs pop ss
  4270e2:	scas   eax,DWORD PTR es:[edi]
  4270e3:	pop    esp
  4270e4:	iret   
  4270e5:	ret    0xf9d0
  4270e8:	bound  esi,QWORD PTR [edi+0x3e]
  4270eb:	test   al,0x68
  4270ed:	push   ss
  4270ee:	mov    esi,0x1bab1824
  4270f3:	aam    0x5c
  4270f5:	mov    WORD PTR [ebx-0x62adde2d],?
  4270fb:	pop    ebx
  4270fc:	clc    
  4270fd:	or     al,BYTE PTR [edi+0x1ae2f805]
  427103:	jbe    0x427180
  427105:	xchg   BYTE PTR [ebp+0x17],ah
  427108:	adc    eax,0xfc35f129
  42710d:	xor    eax,0x574b4180
  427112:	inc    esp
  427113:	sub    al,BYTE PTR [ebx+edx*2+0x7120718d]
  42711a:	mov    al,0x96
  42711c:	mov    eax,0x88904c1a
  427121:	inc    DWORD PTR [ecx-0x31d82614]
  427127:	mov    ecx,DWORD PTR [edx-0x2e0a1a4a]
  42712d:	adc    ecx,ecx
  42712f:	or     DWORD PTR [ecx],eax
  427131:	mov    al,BYTE PTR [edi]
  427133:	das    
  427134:	jb     0x4270f0
  427136:	sbb    ah,bh
  427138:	jno    0x4270f7
  42713a:	mov    bh,0x1c
  42713c:	mov    edx,0x306cad01
  427141:	fsubr  QWORD PTR [eax+0x741649f]
  427147:	or     eax,esi
  427149:	inc    eax
  42714a:	xchg   esp,eax
  42714b:	out    0x75,al
  42714d:	jl     0x427133
  42714f:	xchg   edi,eax
  427150:	jl     0x4270de
  427152:	or     esp,DWORD PTR [edi-0x5ba69e73]
  427158:	sub    eax,0xd1642355
  42715d:	retf   
  42715e:	stos   BYTE PTR es:[edi],al
  42715f:	adc    cl,BYTE PTR [edi-0x72f93ad3]
  427165:	jg     0x42717e
  427167:	out    dx,eax
  427168:	(bad)  
  427169:	cdq    
  42716a:	pop    eax
  42716b:	and    ebp,DWORD PTR [eax]
  42716d:	outs   dx,BYTE PTR ds:[esi]
  42716e:	or     eax,0xd2e25726
  427173:	push   ebp
  427174:	mov    dl,0xc7
  427176:	sub    dh,BYTE PTR [edx+0x53]
  427179:	jbe    0x4271f5
  42717b:	sub    eax,0xd9e89e91
  427180:	push   ebx
  427181:	jmp    0x1303:0xfe3f6d92
  427188:	add    al,0xa3
  42718a:	in     al,dx
  42718b:	gs sahf 
  42718d:	sbb    al,0x18
  42718f:	sub    al,0xf7
  427191:	push   edx
  427192:	mov    dh,0x53
  427194:	sbb    al,0x2c
  427196:	jle    0x42716e
  427198:	cmp    edx,eax
  42719a:	ftst   
  42719c:	sbb    eax,0x88d1eebd
  4271a1:	lahf   
  4271a2:	pop    eax
  4271a3:	mov    bh,0x4e
  4271a5:	dec    esi
  4271a6:	pop    ebp
  4271a7:	or     BYTE PTR [edi-0x7f947d8b],al
  4271ad:	pop    ds
  4271ae:	push   0xffffffee
  4271b0:	ror    ch,cl
  4271b2:	int    0xfb
  4271b4:	mov    bl,BYTE PTR [edi]
  4271b6:	bnd jne 0x427171
  4271b9:	dec    eax
  4271ba:	xchg   edi,eax
  4271bb:	dec    edx
  4271bc:	pushf  
  4271bd:	mov    bh,0xb5
  4271bf:	xor    ch,BYTE PTR [ecx-0x2847524e]
  4271c5:	push   ebp
  4271c6:	es ds jl 0x427246
  4271ca:	mov    al,0x8b
  4271cc:	xlat   BYTE PTR ds:[ebx]
  4271cd:	or     cl,dl
  4271cf:	xor    DWORD PTR [esi-0x1a63bfea],esi
  4271d5:	or     ebx,DWORD PTR [eax]
  4271d7:	mov    eax,ds:0xad36c1d6
  4271dc:	mov    ds:0xf7ea24d3,al
  4271e1:	stc    
  4271e2:	mov    al,ds:0xfcf39fed
  4271e7:	mov    ch,0x6f
  4271e9:	test   al,0xd9
  4271eb:	arpl   WORD PTR [esi],dx
  4271ed:	mov    al,0xd5
  4271ef:	jbe    0x427266
  4271f1:	mov    WORD PTR [esi+edx*1],ds
  4271f4:	cdq    
  4271f5:	stos   DWORD PTR es:[edi],eax
  4271f6:	push   es
  4271f7:	adc    al,0x7b
  4271f9:	and    BYTE PTR [edx-0x53e9656b],0xd9
  427200:	xor    ah,ch
  427202:	add    ah,bl
  427204:	test   eax,0xa914fc27
  427209:	call   0x4b65:0x936cf844
  427210:	fadd   DWORD PTR gs:[ebx+0x75]
  427214:	test   eax,0x1a316b7d
  427219:	mov    WORD PTR [ebx+0x2e47744d],fs
  42721f:	int3   
  427220:	arpl   WORD PTR [ebx+0x30],sp
  427223:	mov    eax,ds:0xefda1511
  427228:	jl     0x427267
  42722a:	adc    DWORD PTR [edx+0x17e5027a],0xffffffdc
  427231:	adc    BYTE PTR [ebx-0x5a7d5529],0x61
  427238:	inc    edi
  427239:	xor    DWORD PTR [eax],eax
  42723b:	add    BYTE PTR [ecx+0xa],bh
  42723e:	sbb    BYTE PTR gs:[edi+0x7f],dh
  427242:	jge    0x4272af
  427244:	int3   
  427245:	outs   dx,BYTE PTR ds:[esi]
  427246:	xchg   esi,esi
  427248:	int    0x89
  42724a:	dec    edi
  42724b:	and    bh,BYTE PTR [edx+ebp*8]
  42724e:	add    DWORD PTR [eax],eax
  427250:	xchg   BYTE PTR [edx],al
  427252:	add    BYTE PTR [eax],al
  427254:	mov    al,ds:0xc45ada57
  427259:	jmp    0xaecb:0x67d33413
  427260:	pop    esi
  427261:	inc    ebx
  427262:	je     0x4272e3
  427264:	outs   dx,BYTE PTR ds:[esi]
  427265:	inc    eax
  427266:	jecxz  0x427247
  427268:	test   DWORD PTR [esi+ebx*1+0x18],esp
  42726c:	inc    esp
  42726d:	jae    0x427253
  42726f:	cwde   
  427270:	mov    ah,0xd2
  427272:	pop    ss
  427273:	jo     0x42728d
  427275:	(bad)  [edx]
  427277:	imul   ecx,DWORD PTR [ebx-0x1a],0xcd83e291
  42727e:	icebp  
  42727f:	mov    ds:0x5475f01b,eax
  427284:	xchg   edx,eax
  427285:	scas   al,BYTE PTR es:[edi]
  427286:	jno    0x427263
  427288:	imul   esi,edi,0xbeb87b56
  42728e:	bound  ecx,QWORD PTR [edi+0x42e12236]
  427294:	dec    eax
  427295:	or     BYTE PTR [ebx+0x13],bh
  427298:	repnz dec ebp
  42729a:	and    al,0x70
  42729c:	sbb    al,0x3
  42729e:	das    
  42729f:	fcom   st(6)
  4272a1:	pop    ecx
  4272a2:	pop    ds
  4272a3:	mov    ch,0xa3
  4272a5:	mov    cl,BYTE PTR [ebp+0x0]
  4272a8:	lock fcom QWORD PTR [edx]
  4272ab:	cli    
  4272ac:	into   
  4272ad:	inc    ecx
  4272ae:	repnz inc esi
  4272b0:	out    dx,al
  4272b1:	mov    BYTE PTR [ebx],ch
  4272b3:	test   DWORD PTR [ecx+0x47],esp
  4272b6:	in     eax,0x50
  4272b8:	and    al,0x77
  4272ba:	cmc    
  4272bb:	jmp    0x4fdceda2
  4272c0:	inc    esi
  4272c1:	push   ecx
  4272c2:	pop    ss
  4272c3:	lahf   
  4272c4:	mov    eax,cs
  4272c6:	stos   BYTE PTR es:[edi],al
  4272c7:	jp     0x427267
  4272c9:	mov    ebp,0x14124fa5
  4272ce:	mov    ah,0x83
  4272d0:	xor    bh,BYTE PTR [ebx]
  4272d2:	and    ch,BYTE PTR [ebx+0x59b1a733]
  4272d8:	xor    ebp,0x62
  4272db:	xor    ebx,DWORD PTR [esi+esi*8]
  4272de:	jge    0x4272ca
  4272e0:	mov    ecx,0xc0400c7e
  4272e5:	iret   
  4272e6:	mov    eax,ds:0xee74938f
  4272eb:	hlt    
  4272ec:	test   al,0xe8
  4272ee:	es test al,0x5f
  4272f1:	push   ss
  4272f2:	inc    DWORD PTR [esi+0x477d2af5]
  4272f8:	out    0x8f,al
  4272fa:	out    dx,eax
  4272fb:	mov    dl,0xc7
  4272fd:	adc    edx,DWORD PTR [ecx]
  4272ff:	ja     0x4272cd
  427301:	pop    ebp
  427302:	mov    bl,0xe4
  427304:	test   eax,ebp
  427306:	mov    edx,0xc9ccc520
  42730b:	mov    bl,0x9e
  42730d:	pop    ebx
  42730e:	inc    ecx
  42730f:	dec    esp
  427310:	xchg   esp,eax
  427311:	pop    esp
  427312:	test   DWORD PTR [ecx],ebx
  427314:	ins    BYTE PTR es:[edi],dx
  427315:	fidivr WORD PTR [ecx-0x51]
  427318:	daa    
  427319:	sbb    al,0x3d
  42731b:	scas   al,BYTE PTR es:[edi]
  42731c:	inc    ebx
  42731d:	sbb    ecx,edx
  42731f:	jns    0x4272df
  427321:	in     eax,0x26
  427323:	loope  0x42739d
  427325:	sub    ebx,DWORD PTR [ebp+ebp*2-0x40]
  427329:	dec    esp
  42732a:	inc    ebp
  42732b:	pop    eax
  42732c:	lds    edx,FWORD PTR [eax+0x1829c4b5]
  427332:	ds pop ecx
  427334:	int    0x2d
  427336:	xor    ah,BYTE PTR [edx+0x494c11e1]
  42733c:	icebp  
  42733d:	inc    DWORD PTR [ebx+0x67b44162]
  427343:	and    BYTE PTR [ecx],al
  427345:	and    ah,BYTE PTR [esi]
  427347:	fstp   QWORD PTR [esi-0x685e387d]
  42734d:	push   esi
  42734e:	cmp    DWORD PTR [edx-0x61],esp
  427351:	inc    eax
  427352:	scas   eax,DWORD PTR es:[edi]
  427353:	enter  0x7d96,0xfe
  427357:	ret    
  427358:	push   0xfffffffc
  42735a:	mov    ebx,0x7eddb6d9
  42735f:	and    ch,BYTE PTR [eax+edi*1+0x8]
  427363:	xchg   edi,eax
  427364:	cmp    BYTE PTR ss:[esi+0x6f],cl
  427368:	jecxz  0x4273b0
  42736a:	aam    0x97
  42736c:	adc    dh,BYTE PTR [edx-0x61]
  42736f:	test   BYTE PTR [edi],bl
  427371:	xchg   BYTE PTR [esi-0x41],ah
  427374:	sahf   
  427375:	sahf   
  427376:	stos   BYTE PTR es:[edi],al
  427377:	hlt    
  427378:	dec    esp
  427379:	xchg   ebp,eax
  42737a:	jmp    0x42736f
  42737c:	adc    DWORD PTR [edx+0x53ff3ce0],0xe19a9527
  427386:	fsubr  st(4),st
  427388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427389:	retf   
  42738a:	stos   DWORD PTR es:[edi],eax
  42738b:	ret    
  42738c:	or     eax,0xf6438d74
  427391:	jb     0x4273fc
  427393:	rcl    DWORD PTR [ecx+ebx*2-0x7e],cl
  427397:	div    ecx
  427399:	jae    0x427369
  42739b:	rcr    BYTE PTR [eax+edi*2],cl
  42739e:	popa   
  42739f:	jg     0x42738a
  4273a1:	ficom  WORD PTR [edx]
  4273a3:	cli    
  4273a4:	xchg   esp,eax
  4273a5:	xchg   ebp,eax
  4273a6:	aam    0x61
  4273a8:	inc    edi
  4273a9:	aad    0x29
  4273ab:	jl     0x4273d7
  4273ad:	(bad)  
  4273ae:	pusha  
  4273af:	js     0x4273bc
  4273b1:	ins    DWORD PTR es:[edi],dx
  4273b2:	jnp    0x427371
  4273b4:	sbb    al,dl
  4273b6:	into   
  4273b7:	and    ecx,edx
  4273b9:	mov    ebp,0x291cceab
  4273be:	adc    edx,DWORD PTR [eax]
  4273c0:	clc    
  4273c1:	cs popa 
  4273c3:	(bad)  
  4273c4:	out    dx,eax
  4273c5:	lahf   
  4273c6:	push   eax
  4273c7:	and    bh,ch
  4273c9:	in     al,dx
  4273ca:	xchg   edx,eax
  4273cb:	and    ecx,edi
  4273cd:	into   
  4273ce:	pop    esi
  4273cf:	mov    al,0x6b
  4273d1:	in     al,dx
  4273d2:	push   es
  4273d3:	and    DWORD PTR ds:0x16e20bf2,edi
  4273d9:	sub    al,0x51
  4273db:	xchg   edi,eax
  4273dc:	data16 aas 
  4273de:	das    
  4273df:	xchg   DWORD PTR [ecx+edx*8],edi
  4273e2:	mov    BYTE PTR [ebx+0x77],ch
  4273e5:	xor    eax,0xeffc247b
  4273ea:	std    
  4273eb:	out    0x5d,eax
  4273ed:	cld    
  4273ee:	in     al,dx
  4273ef:	jmp    0x427381
  4273f1:	jg     0x42742e
  4273f3:	mov    eax,ds:0x41f08109
  4273f8:	dec    ebp
  4273f9:	sbb    dh,BYTE PTR [eax]
  4273fb:	xor    BYTE PTR [edi-0x44],0x83
  4273ff:	adc    eax,0xd4d147c6
  427404:	push   edi
  427405:	mov    ds,WORD PTR [edi+0x77c36b26]
  42740b:	jae    0x4273d7
  42740d:	jecxz  0x4273f6
  42740f:	xor    cl,BYTE PTR [edx]
  427411:	into   
  427412:	call   0x6ea2:0xb84f1129
  427419:	mov    cl,0x54
  42741b:	xor    cl,BYTE PTR [ecx+0x42]
  42741e:	xor    ebp,ebx
  427420:	inc    ecx
  427421:	shl    BYTE PTR ds:0xba5009bf,1
  427427:	xchg   edx,eax
  427428:	lock mov edx,0xaed5cb62
  42742e:	out    0x4c,eax
  427430:	rcl    bh,0x3b
  427433:	adc    cl,0xd0
  427436:	test   DWORD PTR [esi],ecx
  427438:	(bad)  
  427439:	sar    DWORD PTR [ecx],cl
  42743b:	jmp    0xb66c:0xedb5f7de
  427442:	sub    DWORD PTR [ecx],ebx
  427444:	push   esp
  427445:	pop    ds
  427446:	jl     0x4274bd
  427448:	fadd   DWORD PTR [eax-0x4f]
  42744b:	es push es
  42744d:	stos   BYTE PTR es:[edi],al
  42744e:	mov    al,0x74
  427450:	or     ch,BYTE PTR [esi]
  427452:	add    BYTE PTR [ebx+eax*8+0x71],al
  427456:	and    ch,BYTE PTR [ebp+0x20]
  427459:	out    dx,eax
  42745a:	fwait
  42745b:	xor    eax,0xfcadbebd
  427460:	xchg   edx,eax
  427461:	xchg   edi,eax
  427462:	fs dec ebx
  427464:	fwait
  427465:	test   eax,0xb6af17a7
  42746a:	push   esp
  42746b:	sbb    DWORD PTR [edi+0x44],eax
  42746e:	jne    0x42745d
  427470:	jne    0x427447
  427472:	or     esi,edi
  427474:	adc    al,0xd7
  427476:	sbb    eax,0x14ebd14b
  42747b:	mov    edi,0x6dbb87f9
  427480:	sub    cl,BYTE PTR [esi-0x2e]
  427483:	inc    edx
  427484:	nop
  427485:	xchg   esp,eax
  427486:	xchg   edx,eax
  427487:	cli    
  427488:	ds mov ch,0x43
  42748b:	retf   
  42748c:	jb     0x427509
  42748e:	or     al,0xe4
  427490:	cmc    
  427491:	dec    ebp
  427492:	or     al,0xb8
  427494:	inc    ebp
  427495:	sbb    dh,dl
  427497:	xchg   eax,edi
  427499:	adc    bh,BYTE PTR [ecx-0x68]
  42749c:	shl    DWORD PTR [edi+0x36],1
  42749f:	dec    edx
  4274a0:	mov    eax,ds:0xc2fd8835
  4274a5:	stos   DWORD PTR es:[edi],eax
  4274a6:	mov    WORD PTR [ebx-0x342e4ff6],?
  4274ac:	pushf  
  4274ad:	sub    bh,0x74
  4274b0:	sbb    dl,BYTE PTR [edx+0x25]
  4274b3:	retf   0x6057
  4274b6:	sub    BYTE PTR [ebp-0x79231b9],ah
  4274bc:	das    
  4274bd:	pusha  
  4274be:	sbb    DWORD PTR [esi+0x7d],esi
  4274c1:	add    eax,0x940c63b1
  4274c6:	fs test al,0x6f
  4274c9:	(bad)  
  4274ca:	cwde   
  4274cb:	cli    
  4274cc:	gs pop edi
  4274ce:	(bad)  
  4274cf:	sbb    DWORD PTR [eax+0x7b4468df],ebp
  4274d5:	int3   
  4274d6:	(bad)  
  4274d7:	rcl    DWORD PTR [esi+0x590000a8],cl
  4274dd:	add    eax,ecx
  4274df:	inc    esp
  4274e0:	fcmovnb st,st(6)
  4274e2:	fstp   QWORD PTR [edi]
  4274e4:	sub    ebp,DWORD PTR [esi-0x1d0ac146]
  4274ea:	mov    ecx,0x1ecc2a1
  4274ef:	add    BYTE PTR [esi+0x5a000002],al
  4274f5:	sbb    ah,al
  4274f7:	mov    ebx,DWORD PTR [ecx]
  4274f9:	cld    
  4274fa:	pop    ss
  4274fb:	xchg   edi,eax
  4274fc:	ss enter 0x78ca,0x9b
  427501:	fwait
  427502:	pusha  
  427503:	jge    0x42749f
  427505:	cmp    al,0x2b
  427507:	(bad)  
  427508:	sbb    ebp,DWORD PTR [ecx+0x4b]
  42750b:	jo     0x42751b
  42750d:	xor    ch,0xf5
  427510:	ss or  al,0x53
  427513:	jl     0x42755b
  427515:	dec    edx
  427516:	fsubr  st,st(3)
  427518:	push   ss
  427519:	clc    
  42751a:	fsubr  DWORD PTR [eax+0x47]
  42751d:	push   ebx
  42751e:	outs   dx,DWORD PTR ds:[esi]
  42751f:	stos   BYTE PTR es:[edi],al
  427520:	or     eax,0x45b87b62
  427525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427526:	js     0x4274f2
  427528:	mov    edx,0x8fe7b38e
  42752d:	push   ebx
  42752e:	or     BYTE PTR [ebx-0x142f079b],bh
  427534:	adc    DWORD PTR [ecx],ebp
  427536:	push   ss
  427537:	repnz or BYTE PTR [ebx+0x407141f],0xa7
  42753f:	(bad)  
  427540:	bnd jne 0x42750f
  427543:	mov    dl,0x45
  427545:	sbb    al,0x21
  427547:	or     bh,al
  427549:	or     al,BYTE PTR [edi+0x36e87371]
  42754f:	dec    esp
  427550:	xchg   ecx,eax
  427551:	or     al,0xfe
  427553:	xchg   edi,eax
  427554:	mov    al,ds:0xa99746b7
  427559:	div    DWORD PTR [edi+0x7b]
  42755c:	test   al,0xfe
  42755e:	jl     0x4275cd
  427560:	add    dl,dl
  427562:	inc    eax
  427563:	inc    ebp
  427564:	retf   
  427565:	mov    dl,0xa8
  427567:	push   ds
  427568:	pop    esp
  427569:	mov    ebx,0xd7856c09
  42756e:	adc    dh,BYTE PTR [esi]
  427570:	pop    esi
  427571:	into   
  427572:	jne    0x4274fd
  427574:	dec    esp
  427575:	cmp    al,0x95
  427577:	in     al,0x17
  427579:	popa   
  42757a:	and    edx,ebp
  42757c:	fdivr  DWORD PTR [ebp-0x71]
  42757f:	out    0xd9,eax
  427581:	xchg   ebx,eax
  427582:	cmp    BYTE PTR [edi-0x4a93b026],bh
  427588:	int3   
  427589:	sub    al,0xa5
  42758b:	or     dl,dh
  42758d:	fldcw  WORD PTR [eax]
  42758f:	xor    edx,DWORD PTR [ecx+0x4191176f]
  427595:	xchg   esp,eax
  427596:	cmp    eax,0x20c5d479
  42759b:	jmp    0xcd26:0x6d3f
  4275a1:	jnp    0x4275e9
  4275a3:	push   cs
  4275a4:	daa    
  4275a5:	loope  0x4275d6
  4275a7:	retf   0xb70b
  4275aa:	out    dx,al
  4275ab:	push   eax
  4275ac:	cmp    DWORD PTR [ebx],ebp
  4275ae:	mov    esp,0x285064c3
  4275b3:	add    BYTE PTR [esi-0x25],dl
  4275b6:	sahf   
  4275b7:	aam    0x2
  4275b9:	ins    BYTE PTR es:[edi],dx
  4275ba:	pop    ebx
  4275bb:	mov    ebp,eax
  4275bd:	mov    ebx,0x7bb225fa
  4275c2:	out    0xe1,al
  4275c4:	sbb    al,0xac
  4275c6:	mov    bl,BYTE PTR [ecx+edx*2+0x47]
  4275ca:	pop    ebp
  4275cb:	jg     0x42758b
  4275cd:	out    dx,eax
  4275ce:	xchg   esi,eax
  4275cf:	test   BYTE PTR [eax+ebp*4-0x30558496],0xd7
  4275d7:	js     0x42760e
  4275d9:	sahf   
  4275da:	xchg   esp,eax
  4275db:	int3   
  4275dc:	dec    ebx
  4275dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275de:	mov    edi,0x2c054205
  4275e3:	sbb    al,0x7
  4275e5:	fcom   DWORD PTR ds:0x5f03d66c
  4275eb:	outs   dx,BYTE PTR ds:[esi]
  4275ec:	or     BYTE PTR [ebx],cl
  4275ee:	jmp    0xa3bd7edc
  4275f3:	mov    DWORD PTR [edi-0x4c],ebx
  4275f6:	cmp    BYTE PTR [esi+0xb8f9385],0x7b
  4275fd:	sbb    BYTE PTR [ebx],bh
  4275ff:	pop    edx
  427600:	mov    eax,ds:0x5fffc74e
  427605:	test   al,0xcc
  427607:	pop    esi
  427608:	pushf  
  427609:	cmp    ebp,DWORD PTR [eax]
  42760b:	jae    0x427660
  42760d:	popa   
  42760e:	lods   al,BYTE PTR ds:[esi]
  42760f:	clc    
  427610:	inc    ebx
  427611:	or     al,0xde
  427613:	xor    BYTE PTR ds:0x56b69d6c,ch
  427619:	xchg   esi,eax
  42761a:	enter  0x5063,0xfb
  42761e:	(bad)  
  42761f:	popf   
  427620:	fs jns 0x4275f1
  427623:	jmp    0x23f5:0xebd11863
  42762a:	popf   
  42762b:	fucomi st,st(2)
  42762d:	xor    BYTE PTR [esi-0x6cf8afce],al
  427633:	and    al,0x85
  427635:	jg     0x4275bb
  427637:	push   ebp
  427638:	lods   al,BYTE PTR ds:[esi]
  427639:	sub    dl,0x9
  42763c:	jge    0x42769b
  42763e:	mov    esp,0x3e0859c0
  427643:	out    0xf2,eax
  427645:	xor    eax,0x7469f607
  42764a:	sbb    BYTE PTR [edi],bh
  42764c:	mov    al,0x38
  42764e:	pop    ecx
  42764f:	mov    bl,0xf8
  427651:	sti    
  427652:	loop   0x42767c
  427654:	retf   0x81f1
  427657:	xchg   ebx,eax
  427658:	mov    esp,0xab2556f6
  42765d:	nop
  42765e:	dec    edx
  42765f:	push   cs
  427660:	mov    WORD PTR [ecx+0x10],es
  427663:	cmp    eax,DWORD PTR [ebp-0x7da8558b]
  427669:	dec    ebp
  42766a:	sbb    al,0x2a
  42766c:	cmp    eax,0xcb72c81b
  427671:	retf   
  427672:	cs scas al,BYTE PTR es:[edi]
  427674:	loop   0x4276ce
  427676:	cmc    
  427677:	pop    esp
  427678:	inc    edi
  427679:	fiadd  WORD PTR [edx+0x2c33d945]
  42767f:	mov    esp,0xfb3ea7f8
  427684:	mov    ds:0x81105463,al
  427689:	mov    bh,BYTE PTR [eax+0x799b048f]
  42768f:	jg     0x4276a6
  427691:	push   0xffffffe4
  427693:	vhaddps xmm7,xmm5,xmm5
  427697:	loope  0x42769c
  427699:	out    0x37,al
  42769b:	push   ebp
  42769c:	sbb    al,0xec
  42769e:	push   edx
  42769f:	fwait
  4276a0:	arpl   WORD PTR [esi+eax*8-0x6aac585f],cx
  4276a7:	rol    BYTE PTR [esi-0x1b0555e2],1
  4276ad:	and    esi,DWORD PTR [edi]
  4276af:	dec    edi
  4276b0:	(bad)  
  4276b1:	sbb    BYTE PTR [ebx],cl
  4276b3:	sar    DWORD PTR [ecx],0xa5
  4276b6:	xchg   edi,eax
  4276b7:	mov    esp,esi
  4276b9:	(bad)  
  4276ba:	mov    dh,0x6c
  4276bc:	and    ch,ch
  4276be:	inc    esi
  4276bf:	sub    eax,esp
  4276c1:	js     0x42767b
  4276c3:	cmp    DWORD PTR [eax+0x1e],edi
  4276c6:	mov    dl,0xe4
  4276c8:	test   eax,0x7704395e
  4276cd:	setae  BYTE PTR [ebp+0x5]
  4276d1:	retf   
  4276d2:	jae    0x4276a1
  4276d4:	mov    ah,0x3a
  4276d6:	loop   0x4276f0
  4276d8:	sub    edi,eax
  4276da:	je     0x427711
  4276dc:	enter  0x892,0x7c
  4276e0:	cmp    DWORD PTR [ebx+0x34a746a1],ebx
  4276e6:	fstp   TBYTE PTR [esi-0x618ab814]
  4276ec:	mov    esp,0xde303a49
  4276f1:	push   edi
  4276f2:	popf   
  4276f3:	stos   DWORD PTR es:[edi],eax
  4276f4:	ds aas 
  4276f6:	mov    al,ds:0xacd05e94
  4276fb:	clc    
  4276fc:	jmp    0xeb49:0x7dcc640d
  427703:	pop    ecx
  427704:	fadd   DWORD PTR [edi-0x12]
  427707:	jno    0x427728
  427709:	dec    esp
  42770a:	cmp    al,0xd0
  42770c:	ins    DWORD PTR es:[edi],dx
  42770d:	popf   
  42770e:	inc    edx
  42770f:	pop    eax
  427710:	test   al,0x86
  427712:	fiadd  DWORD PTR [eax]
  427714:	aam    0x43
  427716:	mov    esp,0x9260c7a3
  42771b:	dec    ebp
  42771c:	icebp  
  42771d:	jle    0x427785
  42771f:	ss lock dec esp
  427722:	mov    dh,0x84
  427724:	mov    ecx,DWORD PTR [ecx+0x3f57303a]
  42772a:	mov    ecx,0xa1a71070
  42772f:	enter  0x4db4,0x35
  427733:	icebp  
  427734:	xor    al,0x9f
  427736:	push   edi
  427737:	jnp    0x4277b2
  427739:	or     DWORD PTR [ebx+0x439f6c24],ebp
  42773f:	mov    gs,WORD PTR [ebx+0x3588f1fa]
  427745:	jmp    0x42779b
  427747:	xor    al,BYTE PTR [ebx]
  427749:	or     al,0x1b
  42774b:	add    BYTE PTR [eax+esi*8],dl
  42774e:	mov    edx,0x5f4f2a2b
  427753:	rol    BYTE PTR [esp+ebx*2+0x3fd81ed2],1
  42775a:	nop
  42775b:	xchg   ecx,eax
  42775c:	fwait
  42775d:	dec    ebp
  42775e:	cmp    eax,0x1ab305a
  427763:	outs   dx,DWORD PTR ds:[esi]
  427764:	or     DWORD PTR [ebx+0x1d69a5a3],0xdc1a955
  42776e:	(bad)  
  42776f:	mov    ah,0xd9
  427771:	sbb    DWORD PTR [ecx+0x7ceb13ec],ebx
  427777:	adc    al,0x9f
  427779:	fwait
  42777a:	add    BYTE PTR [eax],al
  42777c:	sbb    esp,DWORD PTR [edi]
  42777e:	pushf  
  42777f:	cli    
  427780:	mov    esp,0x2ae77ffb
  427785:	scas   al,BYTE PTR es:[edi]
  427786:	aad    0xf
  427788:	sbb    bh,BYTE PTR [esi]
  42778a:	andnps xmm1,XMMWORD PTR [eax-0x11]
  42778e:	add    DWORD PTR [eax],eax
  427790:	xchg   BYTE PTR [edx],al
  427792:	add    BYTE PTR [eax],al
  427794:	lea    esi,[ebx-0x3]
  427797:	pop    edi
  427798:	imul   ebx,DWORD PTR [ecx],0x48f4bdf7
  42779e:	daa    
  42779f:	inc    eax
  4277a0:	jne    0x42780d
  4277a2:	or     BYTE PTR [ebp+0x4],0x9b
  4277a6:	daa    
  4277a7:	jg     0x42779d
  4277a9:	fidiv  DWORD PTR [ebp+0x428a1e9b]
  4277af:	or     eax,DWORD PTR [edx+0x38]
  4277b2:	adc    esp,edx
  4277b4:	push   ebp
  4277b5:	jecxz  0x4277a7
  4277b7:	ret    0x6dea
  4277ba:	ins    DWORD PTR es:[edi],dx
  4277bb:	ret    0xabc5
  4277be:	test   edx,esp
  4277c0:	mov    es,WORD PTR [ecx]
  4277c2:	mov    ds:0x97b85aab,al
  4277c7:	sbb    BYTE PTR [ecx+eiz*8-0x58af32d9],cl
  4277ce:	cmp    edx,esp
  4277d0:	adc    al,0xd3
  4277d2:	xor    BYTE PTR ds:0xed9d0991,0xc3
  4277d9:	sahf   
  4277da:	pop    ebx
  4277db:	xlat   BYTE PTR ds:[ebx]
  4277dc:	inc    ebx
  4277dd:	and    BYTE PTR [ecx],bl
  4277df:	lods   eax,DWORD PTR ds:[esi]
  4277e0:	mov    al,ds:0xab4bd876
  4277e5:	xor    BYTE PTR [ebx+eiz*8-0x6a],al
  4277e9:	in     al,dx
  4277ea:	add    BYTE PTR [ebx-0x48],al
  4277ed:	or     eax,0x84926efa
  4277f2:	xchg   ecx,eax
  4277f3:	add    dh,BYTE PTR [ecx+0x18]
  4277f6:	retf   0x8a75
  4277f9:	cld    
  4277fa:	sbb    al,0xd2
  4277fc:	adc    BYTE PTR [edx+0x6a],dl
  4277ff:	lea    edi,[edx]
  427801:	repz dec ebx
  427803:	mov    cl,dl
  427805:	leave  
  427806:	gs (bad) 
  427808:	fidivr DWORD PTR [edx-0x736c569f]
  42780e:	dec    esi
  42780f:	mul    BYTE PTR [ecx-0x737bc868]
  427815:	xor    esp,edi
  427817:	push   cs
  427818:	inc    ecx
  427819:	(bad)
  42781c:	cli    
  42781d:	fidiv  WORD PTR [esi+0x1e]
  427820:	pop    es
  427821:	pop    esi
  427822:	mov    al,ds:0x7c3d2006
  427827:	pop    ds
  427828:	unpckhps xmm1,XMMWORD PTR [edi-0x2019c2f0]
  42782f:	nop
  427830:	lahf   
  427831:	jns    0x4277e7
  427833:	dec    ebx
  427834:	mov    al,0x9a
  427836:	icebp  
  427837:	add    ch,BYTE PTR [eax]
  427839:	xor    BYTE PTR [ecx-0x402b1717],dl
  42783f:	out    0x53,eax
  427841:	ja     0x42784f
  427843:	cmp    edx,eax
  427845:	inc    esi
  427846:	ds push cs
  427848:	(bad)  
  427849:	jle    0x4277f8
  42784b:	pop    esp
  42784c:	cdq    
  42784d:	mov    ecx,0xc9858d68
  427852:	mov    bh,0x8
  427854:	(bad)  
  427855:	test   eax,0xb81fbc3
  42785a:	sar    DWORD PTR ds:0x968cfa87,0x88
  427861:	icebp  
  427862:	(bad)  
  427863:	sahf   
  427864:	fnsave [esp+eax*2-0x4c]
  427868:	sub    DWORD PTR [edi+eiz*8-0x627dfde6],esi
  42786f:	hlt    
  427870:	mov    esp,0xba540cc6
  427875:	fistp  WORD PTR [edi]
  427877:	sub    DWORD PTR [ebp*2-0x44d779f8],esp
  42787e:	call   0xd9b8:0xa6992922
  427885:	fstp   QWORD PTR [ebx+eiz*4-0x69]
  427889:	xor    DWORD PTR [ebp+0x7d],esp
  42788c:	sbb    al,BYTE PTR [edi-0x51]
  42788f:	out    0x11,al
  427891:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427892:	bound  edx,QWORD PTR [esi+0x15]
  427895:	jb     0x4278f4
  427897:	neg    DWORD PTR [ecx]
  427899:	in     al,dx
  42789a:	test   BYTE PTR [edi-0x361ace25],al
  4278a0:	loopne 0x4278bf
  4278a2:	jo     0x42787c
  4278a4:	mov    ecx,0x1ad14057
  4278a9:	push   ebx
  4278aa:	test   eax,0xfc82901b
  4278af:	stos   BYTE PTR es:[edi],al
  4278b0:	bound  edi,QWORD PTR [eax+ecx*4]
  4278b3:	lahf   
  4278b4:	mov    bl,0x70
  4278b6:	ficom  DWORD PTR fs:[ebx]
  4278b9:	and    DWORD PTR [edx-0x33e26e6e],ecx
  4278bf:	add    eax,0xdc0ab570
  4278c4:	sub    al,0x68
  4278c6:	sbb    DWORD PTR [ebp-0x3b],edx
  4278c9:	sar    BYTE PTR [esi+0x2d9b4e4a],1
  4278cf:	ds jbe 0x427913
  4278d2:	daa    
  4278d3:	hlt    
  4278d4:	dec    esp
  4278d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4278d6:	inc    ebp
  4278d7:	sbb    DWORD PTR ds:0x1be77453,0xcaf76bf
  4278e1:	data16 mov ch,0x44
  4278e4:	and    eax,0xbea82f17
  4278e9:	sbb    eax,0x6054c777
  4278ee:	cs pop edi
  4278f0:	neg    bl
  4278f2:	jns    0x42794d
  4278f4:	repnz loop 0x4278d3
  4278f7:	mov    dl,0x73
  4278f9:	gs xchg esi,eax
  4278fb:	push   es
  4278fc:	jo     0x42795c
  4278fe:	popf   
  4278ff:	sub    DWORD PTR [edx+0x10],edx
  427902:	xor    eax,0xfa5cc914
  427907:	fmul   st(0),st
  427909:	xor    edx,edx
  42790b:	repz fild DWORD PTR [ecx+0x6c]
  42790f:	out    0x6f,eax
  427911:	sub    ebx,ebp
  427913:	adc    edi,0x4f28804c
  427919:	out    dx,al
  42791a:	cmp    edx,esp
  42791c:	xlat   BYTE PTR ds:[ebx]
  42791d:	mov    ecx,edi
  42791f:	jge    0x42793a
  427921:	je     0x4278e9
  427923:	adc    eax,0x10b4cba3
  427928:	icebp  
  427929:	cmp    DWORD PTR [esp+eax*8],eax
  42792c:	(bad)  [ebx-0x4d]
  42792f:	rol    BYTE PTR [edx-0x5741f70],0xe6
  427936:	and    bh,ah
  427938:	jb     0x427992
  42793a:	dec    eax
  42793b:	rcl    BYTE PTR [ebx-0x642e6c94],cl
  427941:	jecxz  0x427946
  427943:	clc    
  427944:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427945:	sub    DWORD PTR [esp+esi*4+0x2],edx
  427949:	inc    edx
  42794a:	ins    BYTE PTR es:[edi],dx
  42794b:	mov    al,0xc2
  42794d:	and    BYTE PTR [ebp+0x56],0xd8
  427951:	jnp    0x427984
  427953:	pop    ss
  427954:	icebp  
  427955:	rol    BYTE PTR [edi-0x38],cl
  427958:	ds hlt 
  42795a:	add    eax,0x6594eda1
  42795f:	push   ecx
  427960:	scas   al,BYTE PTR es:[edi]
  427961:	sub    ebp,ecx
  427963:	sub    al,al
  427965:	ds addr16 dec eax
  427968:	(bad)  
  42796a:	jns    0x4279d6
  42796c:	(bad)  
  42796d:	into   
  42796e:	in     al,0x29
  427970:	dec    eax
  427971:	test   DWORD PTR [eax+0x1675c347],0x43a2c7ec
  42797b:	leave  
  42797c:	ja     0x4279b1
  42797e:	pop    edx
  42797f:	xor    al,0x83
  427981:	and    dh,ah
  427983:	mov    dh,0xd2
  427985:	ins    BYTE PTR es:[edi],dx
  427986:	jle    0x42792c
  427988:	mov    WORD PTR [ecx+0x24],cs
  42798b:	(bad)  
  42798c:	push   esi
  42798d:	and    DWORD PTR [ebp-0x68d2c437],edx
  427993:	sbb    al,0x24
  427995:	popf   
  427996:	jnp    0x42792b
  427998:	lahf   
  427999:	popf   
  42799a:	imul   ecx,DWORD PTR [esi+ecx*8],0xf3486d0
  4279a1:	inc    sp
  4279a3:	cwde   
  4279a4:	popf   
  4279a5:	and    DWORD PTR [eax-0x383482a9],0xb8f25ebb
  4279af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279b0:	fsubr  QWORD PTR [edi+0x5e]
  4279b3:	popa   
  4279b4:	dec    ebp
  4279b5:	pop    edx
  4279b6:	jge    0x4279b6
  4279b8:	ss and dl,cl
  4279bb:	dec    esi
  4279bc:	inc    ebp
  4279bd:	cmp    edi,esp
  4279bf:	or     bl,BYTE PTR [ebx-0x39]
  4279c2:	in     eax,dx
  4279c3:	cmp    edi,DWORD PTR [ebx]
  4279c5:	fsubr  DWORD PTR [eax]
  4279c7:	retf   0x32d4
  4279ca:	xor    al,0x3b
  4279cc:	les    edx,FWORD PTR [ebx-0x4991aa4e]
  4279d2:	fstp   QWORD PTR [esi+esi*2+0x30cfa6c7]
  4279d9:	inc    ecx
  4279da:	jle    0x427a59
  4279dc:	add    eax,0x565ee8bf
  4279e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4279e2:	ret    
  4279e3:	pushf  
  4279e4:	mov    cl,0x3b
  4279e6:	mov    eax,ds:0x912ae808
  4279eb:	js     0x427a1c
  4279ed:	(bad)  
  4279ee:	(bad)  
  4279ef:	(bad)  
  4279f0:	shl    ebx,0x83
  4279f3:	push   0xbb294083
  4279f8:	push   ds
  4279f9:	push   ebx
  4279fa:	mov    edx,0x1ea85c8
  4279ff:	xchg   ebx,eax
  427a00:	mov    al,0x81
  427a02:	xchg   BYTE PTR [ecx],dh
  427a04:	xchg   DWORD PTR [ecx+0x48],esi
  427a07:	cmp    eax,0xa5cfa0b1
  427a0c:	inc    ebp
  427a0d:	(bad)  
  427a0e:	add    cl,BYTE PTR [eax+0x2e5825b]
  427a14:	fldenv [edx+ebp*1+0x52]
  427a18:	mov    eax,ds:0x9a000078
  427a1d:	inc    esp
  427a1e:	and    bh,al
  427a20:	(bad)  
  427a21:	(bad)  
  427a22:	fisub  DWORD PTR [esi+0x62]
  427a25:	mov    eax,0xd90c7475
  427a2a:	imul   ecx,eax,0x1f1ce
  427a30:	xchg   BYTE PTR [edx],al
  427a32:	add    BYTE PTR [eax],al
  427a34:	je     0x4279f5
  427a36:	cmp    eax,0x663639fa
  427a3b:	xor    al,BYTE PTR [esi-0x2603214c]
  427a41:	cli    
  427a42:	push   es
  427a43:	data16 ins BYTE PTR es:[edi],dx
  427a45:	xor    ebp,DWORD PTR [edi+0x56b6f694]
  427a4b:	(bad)  
  427a4c:	sar    al,1
  427a4e:	mov    cs,WORD PTR [esi]
  427a50:	mov    edi,DWORD PTR [esi-0x7f]
  427a53:	push   ss
  427a54:	retf   
  427a55:	sbb    dl,0xff
  427a58:	fwait
  427a59:	jnp    0x427a97
  427a5b:	mov    ?,WORD PTR [edi+0x28]
  427a5e:	adc    al,0x68
  427a60:	outs   dx,BYTE PTR ds:[esi]
  427a61:	(bad)  
  427a62:	(bad)  
  427a63:	aaa    
  427a64:	mov    ecx,0x84aa08c6
  427a69:	push   ebp
  427a6a:	ins    DWORD PTR es:[edi],dx
  427a6b:	imul   esi,esp,0x53
  427a6e:	jle    0x427a08
  427a70:	sub    eax,0xb9d8c4db
  427a75:	adc    eax,0x2a7c93d7
  427a7a:	mov    ds:0x35f1a080,eax
  427a7f:	popa   
  427a80:	lods   eax,DWORD PTR ds:[esi]
  427a81:	fidiv  DWORD PTR [esi+ebp*4]
  427a84:	inc    ebx
  427a85:	jno    0x427a7e
  427a87:	xor    BYTE PTR [edi],ch
  427a89:	add    ebp,DWORD PTR [ebp-0x57]
  427a8c:	repz inc ebp
  427a8e:	dec    ebp
  427a8f:	jb     0x427a1e
  427a91:	add    eax,0x2c111cc9
  427a96:	jno    0x427a95
  427a98:	xchg   esp,eax
  427a99:	sub    ch,BYTE PTR [eax+0x1b]
  427a9c:	add    eax,0x33e1eb8f
  427aa1:	jl     0x427a2c
  427aa3:	cmp    al,0x76
  427aa5:	and    BYTE PTR [ebx-0x3e],al
  427aa8:	or     eax,0x336866f2
  427aad:	pop    es
  427aae:	clc    
  427aaf:	nop
  427ab0:	mov    al,0xb0
  427ab2:	inc    esp
  427ab3:	adc    cl,BYTE PTR [edx+0x6284a266]
  427ab9:	cli    
  427aba:	test   DWORD PTR ds:0x441cc9d4,eax
  427ac0:	jmp    0xda184ade
  427ac5:	xchg   DWORD PTR [ebx-0x24],edx
  427ac8:	push   esi
  427ac9:	(bad)  
  427acb:	cmc    
  427acc:	jne    0x427a58
  427ace:	and    bh,BYTE PTR [edi]
  427ad0:	adc    BYTE PTR [eax],bl
  427ad2:	lods   eax,DWORD PTR ds:[esi]
  427ad3:	dec    edi
  427ad4:	adc    DWORD PTR [esi+0x8],esi
  427ad7:	fdiv   st(0),st
  427ad9:	pusha  
  427ada:	push   ecx
  427adb:	cmp    BYTE PTR [esi],0x6c
  427ade:	pop    ss
  427adf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ae0:	push   esi
  427ae1:	sbb    eax,0xb4fb42c2
  427ae6:	mov    eax,0xb421879e
  427aeb:	shl    BYTE PTR [ecx-0x6a],1
  427aee:	fs push edi
  427af0:	mov    al,bh
  427af2:	pop    edi
  427af3:	mov    DWORD PTR cs:[ebx+0x401c1def],ebx
  427afa:	mov    eax,0xc87dd740
  427aff:	mov    al,ah
  427b01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b02:	jnp    0x427a9f
  427b04:	aam    0xcb
  427b06:	(bad)  
  427b07:	dec    ebp
  427b08:	jnp    0x427b48
  427b0a:	jb     0x427b56
  427b0c:	dec    ebx
  427b0d:	mov    bl,0x5c
  427b0f:	add    al,0x20
  427b11:	aaa    
  427b12:	pop    es
  427b13:	(bad)  
  427b14:	out    0x39,al
  427b16:	push   esi
  427b17:	xor    BYTE PTR [esi+0x144a5f35],al
  427b1d:	arpl   WORD PTR [ecx],bp
  427b1f:	ds cmp eax,esp
  427b22:	dec    edi
  427b23:	mov    esi,0xa5c487ad
  427b28:	push   ecx
  427b29:	ja     0x427b3c
  427b2b:	stos   DWORD PTR es:[edi],eax
  427b2c:	leave  
  427b2d:	test   al,0xcc
  427b2f:	mov    ch,0x23
  427b31:	dec    edx
  427b32:	test   eax,0x2f877904
  427b37:	dec    ecx
  427b38:	sbb    bh,BYTE PTR [esp+ebx*2-0x64]
  427b3c:	or     DWORD PTR [edx+0x6f],ecx
  427b3f:	jnp    0x427b2c
  427b41:	icebp  
  427b42:	rol    DWORD PTR cs:[edx-0x74ec37a9],1
  427b49:	adc    dl,BYTE PTR [eax-0x30]
  427b4c:	xor    eax,0xa857543a
  427b51:	lods   al,BYTE PTR ds:[esi]
  427b52:	pushf  
  427b53:	clc    
  427b54:	and    DWORD PTR [edx+0x523cbcb8],ecx
  427b5a:	sub    BYTE PTR [eax-0x2883c584],dh
  427b60:	jmp    0x2bb81502
  427b65:	sub    BYTE PTR [edx],ch
  427b67:	jecxz  0x427b18
  427b69:	loope  0x427b35
  427b6b:	out    dx,eax
  427b6c:	xchg   BYTE PTR [ecx-0x47],dl
  427b6f:	fcomp  QWORD PTR [esi-0x29e416ca]
  427b75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b76:	fmul   st,st(1)
  427b78:	or     eax,0x441521f3
  427b7d:	retf   
  427b7e:	mov    cl,0x90
  427b80:	test   eax,0x50b2de3
  427b85:	cmp    ebx,ecx
  427b87:	ds lahf 
  427b89:	jae    0x427bc5
  427b8b:	aam    0x89
  427b8d:	int    0x1a
  427b8f:	sub    DWORD PTR ds:0x6e087b2c,ebx
  427b95:	pop    ecx
  427b96:	stos   BYTE PTR es:[edi],al
  427b97:	stos   BYTE PTR es:[edi],al
  427b98:	mov    al,ds:0x3b20170e
  427b9d:	or     edi,DWORD PTR [eax]
  427b9f:	push   ds
  427ba0:	mov    edx,0x9f4ca5e4
  427ba5:	out    dx,eax
  427ba6:	jb     0x427bd4
  427ba8:	fistp  DWORD PTR [esi+0x6e]
  427bab:	pop    ecx
  427bac:	ret    0x4fb
  427baf:	mov    ds:0x493a9629,al
  427bb4:	popf   
  427bb5:	das    
  427bb6:	mov    eax,ds:0xf99c39e8
  427bbb:	clc    
  427bbc:	addr16 aas 
  427bbe:	pop    es
  427bbf:	fcmovu st,st(4)
  427bc1:	(bad)  
  427bc2:	xchg   BYTE PTR [edi],al
  427bc4:	sahf   
  427bc5:	dec    ebp
  427bc6:	cmp    al,0xd5
  427bc8:	adc    BYTE PTR [ebx],dh
  427bca:	gs dec ecx
  427bcc:	popa   
  427bcd:	int3   
  427bce:	sbb    eax,0x21ea0d66
  427bd3:	pop    eax
  427bd4:	sbb    DWORD PTR ds:0xd6552ca1,esp
  427bda:	shr    DWORD PTR [ecx+0x30f5f480],0xc4
  427be1:	add    eax,0xf8d8b787
  427be6:	stos   DWORD PTR es:[edi],eax
  427be7:	aas    
  427be8:	cmp    al,0x77
  427bea:	test   DWORD PTR [ecx+edi*8+0x41d3c015],ebx
  427bf1:	push   esi
  427bf2:	hlt    
  427bf3:	mov    al,0xf0
  427bf5:	std    
  427bf6:	aas    
  427bf7:	shl    DWORD PTR [eax],0xa5
  427bfa:	mov    DWORD PTR [ebp+0xf9b8fc8],0x634088c9
  427c04:	add    eax,0xffffff83
  427c07:	inc    ebx
  427c08:	inc    edx
  427c09:	jnp    0x427b9c
  427c0b:	mov    ebp,0x8f24b5c6
  427c10:	mov    di,0xf4f2
  427c14:	cli    
  427c15:	ss push ecx
  427c17:	retf   
  427c18:	pop    esp
  427c19:	rcl    esi,1
  427c1b:	push   ds
  427c1c:	lock cwde 
  427c1e:	jmp    0x427c31
  427c20:	cmp    BYTE PTR ds:0x4d765db7,dl
  427c26:	ins    DWORD PTR es:[edi],dx
  427c27:	dec    ebx
  427c28:	outs   dx,BYTE PTR ds:[esi]
  427c29:	outs   dx,DWORD PTR ds:[esi]
  427c2a:	mov    dh,0x5
  427c2c:	pop    edx
  427c2d:	xchg   BYTE PTR [edx+esi*8-0x3bd617f6],cl
  427c34:	and    DWORD PTR [ebx-0x29],ebp
  427c37:	outs   dx,BYTE PTR ds:[esi]
  427c38:	in     eax,0xaa
  427c3a:	sbb    ah,ah
  427c3c:	into   
  427c3d:	sub    BYTE PTR [ebp-0x49],cl
  427c40:	xor    eax,0x9af6f844
  427c45:	bound  esi,QWORD PTR es:[esi+0x56da05df]
  427c4c:	mov    ebx,DWORD PTR [ebx+0x5b]
  427c4f:	mov    edx,DWORD PTR [eax-0x34]
  427c52:	sbb    al,0x1a
  427c54:	out    dx,al
  427c55:	lods   eax,DWORD PTR ds:[esi]
  427c56:	repz popf 
  427c58:	xor    BYTE PTR [ecx+0x2fb7cab5],dl
  427c5e:	xchg   DWORD PTR [esi-0x23],esi
  427c61:	cmp    al,BYTE PTR [eax]
  427c63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c64:	cmp    al,0xf3
  427c66:	jecxz  0x427cd5
  427c68:	mov    ?,WORD PTR [eax-0x2db167e1]
  427c6e:	bound  ecx,QWORD PTR [ebx]
  427c70:	push   ebp
  427c71:	aam    0xb2
  427c73:	push   edi
  427c74:	outs   dx,BYTE PTR ds:[esi]
  427c75:	jmp    0x427cb1
  427c77:	cmc    
  427c78:	push   ss
  427c79:	mov    eax,ds:0x211889b
  427c7e:	add    al,0xd
  427c80:	adc    bh,BYTE PTR [ebx+0x6f2454bc]
  427c86:	adc    ecx,DWORD PTR [edi-0x34a46909]
  427c8c:	sbb    al,0x2c
  427c8e:	sbb    eax,0xc986a9bc
  427c93:	jmp    0x10d6db8f
  427c98:	lods   al,BYTE PTR ds:[esi]
  427c99:	push   ebx
  427c9a:	dec    edx
  427c9b:	push   esp
  427c9c:	cdq    
  427c9d:	repz fcomp QWORD PTR [eax+0x3c595728]
  427ca4:	inc    esp
  427ca5:	out    0xd0,eax
  427ca7:	(bad)  
  427ca8:	adc    esp,DWORD PTR [edx+edx*2]
  427cab:	dec    edi
  427cac:	or     DWORD PTR [ebx+edi*8+0x25ecfc78],0x12
  427cb4:	xchg   edi,eax
  427cb5:	ds cwde 
  427cb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427cb8:	mov    esp,0x90000019
  427cbd:	stos   DWORD PTR es:[edi],eax
  427cbe:	es ret 
  427cc0:	aas    
  427cc1:	iret   
  427cc2:	cmc    
  427cc3:	sti    
  427cc4:	pushf  
  427cc5:	ds loop 0x427cb4
  427cc8:	retf   0xe35b
  427ccb:	lock push esp
  427ccd:	hlt    
  427cce:	add    DWORD PTR [eax],eax
  427cd0:	xchg   BYTE PTR [edx],al
  427cd2:	add    BYTE PTR [eax],al
  427cd4:	xor    eax,0x20005c0c
  427cd9:	pop    es
  427cda:	div    bl
  427cdc:	je     0x427ca1
  427cde:	jmp    0x427cf9
  427ce0:	sahf   
  427ce1:	lock push es
  427ce3:	mov    ds:0xd7d3f96f,eax
  427ce8:	push   ecx
  427ce9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427cea:	ins    DWORD PTR es:[edi],dx
  427ceb:	mov    dl,0xd9
  427ced:	(bad)  
  427cf0:	(bad)  
  427cf1:	cmp    al,0xa1
  427cf3:	loop   0x427d57
  427cf5:	mov    eax,ds:0x8927d590
  427cfa:	inc    edx
  427cfb:	stos   BYTE PTR es:[edi],al
  427cfc:	mov    dl,BYTE PTR [ebp+0x35]
  427cff:	fist   DWORD PTR [ebx+0x57]
  427d02:	pop    es
  427d03:	or     ah,BYTE PTR [eax-0x442fbfbb]
  427d09:	pop    ecx
  427d0a:	cmp    DWORD PTR [eax],eax
  427d0c:	in     eax,dx
  427d0d:	dec    eax
  427d0e:	inc    edi
  427d0f:	not    ebx
  427d11:	sbb    eax,0x131d86f9
  427d16:	xor    DWORD PTR [edx],0x43
  427d19:	es dec eax
  427d1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d1c:	add    bh,BYTE PTR [edi]
  427d1e:	aaa    
  427d1f:	test   eax,0x576424b
  427d24:	sbb    BYTE PTR [edi+0x53eb2edc],0x76
  427d2b:	sub    al,BYTE PTR ds:0x5e7f4007
  427d31:	fadd   QWORD PTR [esi]
  427d33:	and    ebx,ebp
  427d35:	push   ss
  427d36:	aaa    
  427d37:	sar    BYTE PTR [edx+edi*1],1
  427d3a:	cmc    
  427d3b:	cld    
  427d3c:	sbb    ch,dl
  427d3e:	jns    0x427d2c
  427d40:	nop
  427d41:	das    
  427d42:	push   edx
  427d43:	(bad)  [edi+0x37]
  427d46:	out    dx,eax
  427d47:	stos   DWORD PTR es:[edi],eax
  427d48:	daa    
  427d49:	leave  
  427d4a:	or     DWORD PTR [eiz*4+0x26a9f0e5],ecx
  427d51:	iret   
  427d52:	div    bh
  427d54:	fldenv [edi+0x0]
  427d57:	mov    edx,0xc1a8b7d2
  427d5c:	std    
  427d5d:	(bad)  
  427d5e:	push   0x66
  427d60:	lods   al,BYTE PTR ds:[esi]
  427d61:	imul   edi,DWORD PTR [ecx-0x5d],0xffffff85
  427d65:	or     DWORD PTR [eax-0x46],esi
  427d68:	add    eax,0x9a5008e2
  427d6d:	xor    bh,ah
  427d6f:	fist   WORD PTR [eax+0x1dc15a3b]
  427d75:	mov    eax,ds:0x16d1284
  427d7a:	dec    ecx
  427d7b:	mov    dl,0x18
  427d7d:	es imul esp,esp,0xa6ba1d75
  427d84:	loope  0x427dd3
  427d86:	outs   dx,BYTE PTR ds:[esi]
  427d87:	mov    ebp,0x23735b66
  427d8d:	pop    esp
  427d8e:	out    0x32,eax
  427d90:	into   
  427d91:	stos   BYTE PTR es:[edi],al
  427d92:	in     eax,dx
  427d93:	(bad)  
  427d95:	xor    esi,edx
  427d97:	test   DWORD PTR [edx+0x961ce55],esi
  427d9d:	fcomp  DWORD PTR [eax+edx*4]
  427da0:	cwde   
  427da1:	mov    al,0x21
  427da3:	mov    ecx,0xdb713528
  427da8:	inc    ecx
  427da9:	sbb    eax,0x6256ccd5
  427dae:	or     esp,DWORD PTR es:[eax]
  427db1:	inc    esi
  427db2:	add    DWORD PTR [ebp+0x61],ebx
  427db5:	or     ecx,ecx
  427db7:	xor    esp,DWORD PTR [ebp-0x25]
  427dba:	push   eax
  427dbb:	sub    ebp,DWORD PTR [edx+0x56ddc820]
  427dc1:	push   edx
  427dc2:	mov    bl,0x39
  427dc4:	out    dx,al
  427dc5:	pop    edx
  427dc6:	imul   ebp,DWORD PTR [edi+0x7ce1a9dc],0xffffffc9
  427dcd:	inc    ebp
  427dce:	adc    BYTE PTR [edx+0x4f],bl
  427dd1:	inc    edx
  427dd2:	mov    al,ds:0x2fa465f9
  427dd7:	mov    dh,0xf3
  427dd9:	imul   esi,ebp,0xa7ea4338
  427ddf:	jmp    0x427dae
  427de1:	add    ecx,DWORD PTR [edi+0x5b]
  427de4:	pop    ecx
  427de5:	daa    
  427de6:	cli    
  427de7:	mov    dl,0x18
  427de9:	(bad)  
  427dea:	aas    
  427deb:	push   esp
  427dec:	push   0xb38a4023
  427df1:	jae    0x427da3
  427df3:	dec    eax
  427df4:	leave  
  427df5:	shl    BYTE PTR ds:0x469218e,0x19
  427dfc:	fwait
  427dfd:	add    al,0xc
  427dff:	dec    ecx
  427e00:	sbb    BYTE PTR [ebx-0x6c],0x4b
  427e04:	(bad)  
  427e05:	fisubr DWORD PTR [edx-0x1c312fe]
  427e0b:	sti    
  427e0c:	and    DWORD PTR [edx],ebx
  427e0e:	jge    0x427dc9
  427e10:	ror    BYTE PTR [esi],cl
  427e12:	femms  
  427e14:	and    edi,DWORD PTR [ecx-0x701a30ac]
  427e1a:	js     0x427e27
  427e1c:	cmp    eax,0x418f8306
  427e21:	cmp    eax,0x3e5d0c7b
  427e26:	out    0x86,eax
  427e28:	push   ebp
  427e29:	test   DWORD PTR [esi+eax*1],eax
  427e2c:	xchg   ebx,eax
  427e2d:	push   esp
  427e2e:	push   eax
  427e2f:	repnz sbb ebx,ecx
  427e32:	sub    eax,0x1e8a77f4
  427e37:	sbb    DWORD PTR [edx-0x66ebe1e1],0x282167f6
  427e41:	cmc    
  427e42:	in     al,dx
  427e43:	jecxz  0x427de8
  427e45:	inc    esp
  427e46:	jne    0x427e7f
  427e48:	ret    
  427e49:	pinsrw mm2,WORD PTR ds:0xbae135c5,0x60
  427e51:	mov    cl,0xe3
  427e53:	stos   DWORD PTR es:[edi],eax
  427e54:	ds cli 
  427e56:	sub    BYTE PTR [ebx],bl
  427e58:	stos   BYTE PTR es:[edi],al
  427e59:	mov    al,ds:0x447f4434
  427e5e:	stos   DWORD PTR es:[edi],eax
  427e5f:	pop    esi
  427e60:	xchg   esp,eax
  427e61:	leave  
  427e62:	lds    esp,FWORD PTR [eax-0x51]
  427e65:	icebp  
  427e66:	jg     0x427ebf
  427e68:	dec    eax
  427e69:	ja     0x427ece
  427e6b:	mov    eax,0x7691a2c4
  427e70:	addr16 int 0x44
  427e73:	adc    DWORD PTR [ecx+0x37],eax
  427e76:	xchg   ebp,eax
  427e77:	pop    eax
  427e78:	xchg   esi,eax
  427e79:	daa    
  427e7a:	rcl    edi,cl
  427e7c:	inc    esp
  427e7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e7e:	jbe    0x427e79
  427e80:	fistp  DWORD PTR [ebx+edx*2+0x6f52b45]
  427e87:	lock out dx,eax
  427e89:	aad    0x5c
  427e8b:	or     eax,0x9c1948c6
  427e90:	jbe    0x427ecd
  427e92:	mov    DWORD PTR [edx],esi
  427e94:	cld    
  427e95:	sbb    DWORD PTR [ecx],ebp
  427e97:	ss dec ebx
  427e99:	arpl   bx,di
  427e9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e9c:	mov    BYTE PTR [ecx-0x188a6e3],dh
  427ea2:	mov    ebx,0xbda9b10e
  427ea7:	push   0x1
  427ea9:	cs cmp eax,0x97d6c3c8
  427eaf:	xchg   ecx,eax
  427eb0:	push   esp
  427eb1:	mov    BYTE PTR [eax+0x31e98462],dh
  427eb7:	fisub  DWORD PTR [ebx]
  427eb9:	push   ecx
  427eba:	and    al,0x86
  427ebc:	(bad)  
  427ebd:	das    
  427ebe:	mov    ah,0x2c
  427ec0:	in     eax,0x94
  427ec2:	scas   eax,DWORD PTR es:[edi]
  427ec3:	into   
  427ec4:	in     al,0xd3
  427ec6:	out    dx,eax
  427ec7:	adc    cl,BYTE PTR [esi+0x16ce4226]
  427ecd:	icebp  
  427ece:	retf   0x2377
  427ed1:	and    al,0x99
  427ed3:	dec    ebx
  427ed4:	(bad)  
  427ed5:	lock inc esi
  427ed7:	push   es
  427ed8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ed9:	dec    eax
  427eda:	(bad)  
  427edb:	mov    ?,WORD PTR [edx+0x4]
  427ede:	dec    ecx
  427edf:	push   ds
  427ee0:	dec    esp
  427ee1:	or     eax,0xfee8dfa5
  427ee6:	xchg   DWORD PTR [edx+eax*4-0x6f7dd183],ebx
  427eed:	xchg   edi,eax
  427eee:	(bad)  
  427eef:	scas   al,BYTE PTR es:[edi]
  427ef0:	push   edx
  427ef1:	aas    
  427ef2:	cdq    
  427ef3:	sbb    eax,0x33cb1b05
  427ef8:	xor    DWORD PTR [ebx-0x29],ebp
  427efb:	lds    eax,FWORD PTR [edx+eax*4+0x38a13876]
  427f02:	inc    DWORD PTR [edx+0x60]
  427f05:	test   eax,0x19e674b9
  427f0a:	jae    0x427eb0
  427f0c:	in     eax,dx
  427f0d:	sub    dl,BYTE PTR [ecx-0x4a758e8]
  427f13:	hlt    
  427f14:	(bad)  
  427f15:	mov    ah,0xf7
  427f17:	jne    0x427f72
  427f19:	ror    DWORD PTR [edi+0x47686763],1
  427f1f:	jns    0x427eee
  427f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427f22:	(bad)  
  427f23:	int3   
  427f24:	ret    
  427f25:	sbb    ah,BYTE PTR [ebp-0x6c]
  427f28:	in     al,0xb6
  427f2a:	sahf   
  427f2b:	ret    0x531
  427f2e:	xchg   BYTE PTR [edx-0x6a6a76c4],ah
  427f34:	jo     0x427fa8
  427f36:	sub    ah,BYTE PTR [edi]
  427f38:	mov    gs,WORD PTR [esi]
  427f3a:	add    dl,BYTE PTR [ecx+0x52]
  427f3d:	mov    cl,0xb
  427f3f:	lea    esp,ds:0x1ba6c908
  427f45:	clc    
  427f46:	xor    bl,al
  427f48:	(bad)  
  427f4a:	push   0x4ed393c2
  427f4f:	into   
  427f50:	icebp  
  427f51:	(bad)  [eax+0x6b8f0627]
  427f57:	jge    0x427fc4
  427f59:	sbb    al,0x0
  427f5b:	add    ch,bh
  427f5d:	cmp    DWORD PTR ds:0xfd1cf514,esi
  427f63:	stc    
  427f64:	int    0xea
  427f66:	xor    al,al
  427f68:	jmp    0x427f4c
  427f6a:	inc    edi
  427f6b:	or     al,0xda
  427f6d:	test   BYTE PTR [ecx],0x0
  427f70:	xchg   BYTE PTR [edx],al
  427f72:	add    BYTE PTR [eax],al
  427f74:	fmul   DWORD PTR [edx-0x4a83e21e]
  427f7a:	mov    edx,esp
  427f7c:	aaa    
  427f7d:	stc    
  427f7e:	jmp    0x427f64
  427f80:	int3   
  427f81:	inc    esp
  427f82:	mov    esi,0x213c7d37
  427f87:	mov    al,0x13
  427f89:	pop    edi
  427f8a:	mov    ds:0xb80de9de,eax
  427f8f:	pop    edx
  427f90:	mov    edi,0xa53f4a40
  427f95:	retf   0x1aa8
  427f98:	aaa    
  427f99:	dec    esi
  427f9a:	pop    esi
  427f9b:	sub    DWORD PTR [ebx+0x6d1fab69],eax
  427fa1:	push   cs
  427fa2:	mov    dl,0xd2
  427fa4:	xchg   edi,eax
  427fa5:	inc    esp
  427fa6:	(bad)  
  427fa8:	(bad)  
  427fa9:	lock xchg edx,eax
  427fab:	mov    ecx,esp
  427fad:	add    ebp,DWORD PTR [edi-0x61]
  427fb0:	mov    ebx,0x963e036f
  427fb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427fb6:	sbb    edi,DWORD PTR [esi+0x4c2b2d8f]
  427fbc:	nop
  427fbd:	das    
  427fbe:	iret   
  427fbf:	xor    DWORD PTR [ebx],edi
  427fc1:	cmp    bh,BYTE PTR [ecx-0x4dd118f5]
  427fc7:	cmp    al,0x11
  427fc9:	or     ecx,DWORD PTR [ebp+0x4d]
  427fcc:	fdiv   QWORD PTR [esi+0x55af2154]
  427fd2:	mov    cl,0x7b
  427fd4:	popf   
  427fd5:	scas   al,BYTE PTR es:[edi]
  427fd6:	xor    dl,ch
  427fd8:	outs   dx,BYTE PTR ds:[esi]
  427fd9:	iret   
  427fda:	imul   esp,ebp,0xf11e17e7
  427fe0:	dec    esi
  427fe1:	(bad)  
  427fe2:	lock sub esp,0xb76bec9e
  427fe9:	ins    DWORD PTR es:[edi],dx
  427fea:	sbb    bh,BYTE PTR [esi-0x663fe01c]
  427ff0:	(bad)  
  427ff2:	popf   
  427ff3:	xor    eax,0xd941db2f
  427ff8:	jecxz  0x427f9c
  427ffa:	popf   
  427ffb:	or     al,0xcc
  427ffd:	stos   BYTE PTR es:[edi],al
  427ffe:	out    dx,al
  427fff:	xchg   bl,ch
  428001:	and    ch,bl
  428003:	fcom   DWORD PTR [edx-0xa]
  428006:	adc    bl,BYTE PTR [esp+esi*4-0x6db8c444]
  42800d:	or     DWORD PTR [edx+0x1893ddf7],ebp
  428013:	and    edx,0x4c
  428016:	jo     0x427fb8
  428018:	sub    DWORD PTR [edi-0x56],ecx
  42801b:	nop
  42801c:	cwde   
  42801d:	ds jns 0x427fe4
  428020:	bound  ebp,QWORD PTR ds:0xab815c31
  428026:	mov    eax,ds:0x652d2b0c
  42802b:	xor    bh,BYTE PTR [eax-0x34d572a8]
  428031:	push   ecx
  428032:	push   esp
  428033:	inc    esi
  428034:	aaa    
  428035:	or     al,0x79
  428037:	data16 cmc 
  428039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42803a:	jae    0x428054
  42803c:	sar    DWORD PTR [ebx-0xa],cl
  42803f:	add    ch,dl
  428041:	ret    
  428042:	sub    edx,edi
  428044:	fs and eax,0xe56bae78
  42804a:	pop    ecx
  42804b:	call   DWORD PTR ds:0xd5153d03
  428051:	in     al,dx
  428052:	jmp    0xe2d8:0xc6ad8dc0
  428059:	inc    esi
  42805a:	sbb    ch,BYTE PTR [eax]
  42805c:	rol    edi,0x48
  42805f:	jg     0x4280cc
  428061:	jge    0x427ff1
  428063:	jg     0x42805d
  428065:	int    0x2e
  428067:	ret    
  428068:	shr    BYTE PTR [esi+0x164cbaf],1
  42806e:	dec    ebp
  42806f:	gs aad 0x25
  428072:	scas   eax,DWORD PTR es:[edi]
  428073:	xchg   DWORD PTR [ebp+0x66],ebp
  428076:	out    0x59,eax
  428078:	xchg   BYTE PTR [edx+0x6a9e81e1],dh
  42807e:	dec    eax
  42807f:	push   ecx
  428080:	shl    DWORD PTR [ebx],0xd2
  428083:	mov    cl,bl
  428085:	out    dx,eax
  428086:	pop    ebp
  428087:	push   0x91b924e5
  42808c:	dec    esi
  42808d:	pop    ds
  42808e:	and    BYTE PTR [ebx+0x65726e68],dl
  428094:	mov    dl,0x6e
  428096:	loope  0x4280d5
  428098:	mov    edx,0xf4387ee4
  42809d:	clc    
  42809e:	sub    bh,bh
  4280a0:	mov    DWORD PTR [eax],ecx
  4280a2:	inc    edi
  4280a3:	lea    esi,[esi+0x479eae09]
  4280a9:	out    dx,eax
  4280aa:	js     0x42804c
  4280ac:	cdq    
  4280ad:	imul   BYTE PTR [ecx+0x26]
  4280b0:	jp     0x4280df
  4280b2:	mov    bl,0x9a
  4280b4:	stc    
  4280b5:	shr    DWORD PTR [eax+ecx*8],1
  4280b8:	(bad)  [ebp-0x4b6e7db4]
  4280be:	xlat   BYTE PTR ds:[ebx]
  4280bf:	rcr    BYTE PTR [ecx-0x1d],cl
  4280c2:	stos   BYTE PTR es:[edi],al
  4280c3:	push   esi
  4280c4:	fdivr  DWORD PTR [esi+esi*4+0x33a072c6]
  4280cb:	imul   edi,ebx,0xfc3079d4
  4280d1:	mov    eax,DWORD PTR [eax]
  4280d3:	dec    edx
  4280d4:	(bad)  
  4280d5:	xchg   ecx,eax
  4280d6:	mov    ecx,0x32d148c6
  4280db:	ja     0x4280ca
  4280dd:	cmp    ecx,edi
  4280df:	or     ebx,DWORD PTR [eax-0x59]
  4280e2:	inc    ebp
  4280e3:	sub    al,0x88
  4280e5:	sub    ecx,esi
  4280e7:	or     BYTE PTR [edx],bh
  4280e9:	mov    ebp,0xaaa14dc4
  4280ee:	and    al,0x4c
  4280f0:	jmp    0xc034f37b
  4280f5:	sub    edi,DWORD PTR [edi]
  4280f7:	lahf   
  4280f8:	jne    0x428155
  4280fa:	xchg   ecx,eax
  4280fb:	fucomip st,st(6)
  4280fd:	and    eax,0xf22b3648
  428103:	and    DWORD PTR [ecx+0x30],ebp
  428106:	adc    al,0x2a
  428108:	scas   eax,DWORD PTR es:[edi]
  428109:	ja     0x428125
  42810b:	fld    TBYTE PTR [esi-0x70]
  42810e:	ret    
  42810f:	std    
  428110:	dec    esp
  428111:	leave  
  428112:	sub    BYTE PTR [esi+0x10cf8000],bh
  428118:	inc    edx
  428119:	shl    BYTE PTR [ebp+esi*4+0x49f7f967],cl
  428120:	sub    BYTE PTR [edi-0x9],cl
  428123:	mov    WORD PTR [esi+0xc6f518b],fs
  428129:	mov    ebx,0xc001b47f
  42812e:	(bad)  
  428130:	es cmp esi,0x99b80794
  428137:	dec    esp
  428138:	ret    
  428139:	cmp    al,0x82
  42813b:	jge    0x428196
  42813d:	lods   al,BYTE PTR ds:[esi]
  42813e:	test   esp,edx
  428140:	rcl    BYTE PTR ds:[edx-0x7bcb27b0],1
  428147:	rcl    edi,1
  428149:	jmp    0x1ff3146d
  42814e:	les    edx,FWORD PTR [ebx+0x4f982471]
  428154:	scas   eax,DWORD PTR es:[edi]
  428155:	dec    ecx
  428156:	pop    ecx
  428157:	xchg   ebx,ebx
  428159:	mov    dh,0xb8
  42815b:	xor    eax,0xf118de3
  428160:	imul   ecx,DWORD PTR [edx+0x3a],0x215e702b
  428167:	sub    edi,eax
  428169:	pusha  
  42816a:	clc    
  42816b:	jbe    0x42816c
  42816d:	jns    0x428135
  42816f:	push   ss
  428170:	pop    ecx
  428171:	lods   al,BYTE PTR ds:[esi]
  428172:	cmp    cl,BYTE PTR [edi]
  428174:	sub    esi,DWORD PTR [ebx]
  428176:	adc    al,0xef
  428178:	outs   dx,BYTE PTR ds:[esi]
  428179:	(bad)
  42817d:	adc    esi,DWORD PTR [esi+ecx*2+0x5b]
  428181:	cmp    al,0xb9
  428183:	sub    al,0x65
  428185:	sbb    eax,DWORD PTR [eax-0x6bc5b9e5]
  42818b:	jbe    0x4281e4
  42818d:	cs jmp 0x4281b6
  428190:	xor    ebp,DWORD PTR [esi+0xb82c528]
  428196:	inc    esp
  428197:	fsub   DWORD PTR [edx-0x19]
  42819a:	jno    0x428165
  42819c:	mov    BYTE PTR ds:0xc18d2d87,al
  4281a2:	cmp    BYTE PTR [eax],ah
  4281a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281a5:	mov    ds:0xc97772e5,al
  4281aa:	dec    edx
  4281ab:	(bad)  
  4281ac:	adc    dl,BYTE PTR [ebx]
  4281ae:	ds adc eax,0xfe3605ea
  4281b4:	sub    al,0x6e
  4281b6:	mov    ah,0x43
  4281b8:	leave  
  4281b9:	sbb    edx,DWORD PTR [edx+0x2b]
  4281bc:	fwait
  4281bd:	imul   edx,DWORD PTR [ecx-0x1c],0x92033612
  4281c4:	push   ds
  4281c5:	mov    edi,DWORD PTR [edx]
  4281c7:	test   eax,0xbb565dee
  4281cc:	sub    BYTE PTR [ebp*1+0x4adcb52],ch
  4281d3:	mov    es,WORD PTR ds:0x75ecc828
  4281d9:	test   DWORD PTR [eax],esp
  4281db:	push   ds
  4281dc:	fcmovnu st,st(6)
  4281de:	ss fdivp st(2),st
  4281e1:	pop    edx
  4281e2:	(bad)  
  4281e3:	jg     0x428204
  4281e5:	and    BYTE PTR [esi],bl
  4281e7:	add    bl,BYTE PTR [ebx]
  4281e9:	clc    
  4281ea:	test   al,0x1a
  4281ec:	xor    eax,0x3be65201
  4281f1:	and    bh,BYTE PTR [esi]
  4281f3:	sub    al,0x34
  4281f5:	adc    al,0x96
  4281f7:	mov    bh,0x23
  4281f9:	repz add BYTE PTR [eax],al
  4281fc:	test   eax,0xf82c6051
  428201:	cmp    eax,0x8ba9d5ed
  428206:	mov    ebx,0xe5e75992
  42820b:	bound  esp,QWORD PTR [eax-0x7]
  42820e:	add    DWORD PTR [eax],eax
  428210:	or     BYTE PTR [eax],al
  428212:	add    BYTE PTR [eax],al
  428214:	outs   dx,DWORD PTR ds:[esi]
  428215:	xchg   edi,eax
  428216:	adc    BYTE PTR [esi],0xcf
  428219:	push   edx
  42821a:	push   ebp
  42821b:	.byte 0x8
