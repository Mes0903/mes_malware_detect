
b9d1c4d5a6c05dd7e73356504fe485847ac6a8c976b59a0f754b22a531c7acb2.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	adc    ecx,0x4d2f
  40100a:	add    BYTE PTR [eax],al
  40100c:	add    al,BYTE PTR [eax]
  40100e:	add    BYTE PTR [eax],al
  401010:	cmp    al,BYTE PTR [eax]
  401012:	add    BYTE PTR [eax],al
  401014:	add    BYTE PTR [eax],al
  401016:	add    DWORD PTR [eax],eax
  401018:	add    BYTE PTR [edx-0x74ab0000],bh
  40101e:	in     al,dx
  40101f:	sub    esp,0x30
  401022:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  401029:	mov    eax,ds:0x44e414
  40102e:	adc    eax,DWORD PTR ds:0x44e428
  401034:	mov    ds:0x44e414,eax
  401039:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  401040:	xor    ecx,0x17d8
  401046:	mov    ecx,DWORD PTR [ebp-0x4]
  401049:	push   ebx
  40104a:	and    DWORD PTR ds:0x448994,0x0
  401054:	xor    eax,eax
  401056:	add    eax,DWORD PTR ds:0x448994
  40105c:	inc    eax
  40105d:	mov    ds:0x448994,eax
  401062:	cmp    DWORD PTR ds:0x448994,0xa
  401069:	jne    0x40108c
  40106f:	push   DWORD PTR [ebp-0x10]
  401072:	push   DWORD PTR [ebp-0x28]
  401075:	push   DWORD PTR [ebp-0x20]
  401078:	push   0x74f6
  40107d:	push   DWORD PTR [ebp-0x24]
  401080:	push   DWORD PTR [ebp-0x28]
  401083:	push   DWORD PTR [ebp-0x20]
  401086:	call   DWORD PTR ds:0x4430c4
  40108c:	cmp    DWORD PTR ds:0x448994,0x9
  401093:	jne    0x4010a4
  401099:	mov    eax,ds:0x448994
  40109e:	inc    eax
  40109f:	mov    ds:0x448994,eax
  4010a4:	cmp    DWORD PTR ds:0x448994,0x17
  4010ab:	jb     0x401054
  4010b1:	add    DWORD PTR ds:0x448980,ecx
  4010b7:	mov    eax,0x7510857
  4010bc:	xor    ecx,eax
  4010be:	xor    DWORD PTR ds:0x44b6dc,0x226
  4010c8:	mov    ebx,0x32729e
  4010cd:	not    DWORD PTR ds:0x44b6e0
  4010d3:	jmp    0x4011a6
  4010d8:	dec    esi
  4010d9:	dec    edx
  4010da:	xor    al,0x5c
  4010dc:	fcom   DWORD PTR [edx+0x66]
  4010df:	jp     0x4010bd
  4010e1:	test   DWORD PTR [ebx+0x58],0x8da59cd5
  4010e8:	jl     0x401166
  4010ea:	jl     0x401168
  4010ec:	mov    ds:0xcc7c7c7c,al
  4010f1:	(bad)  
  4010f2:	xor    ecx,ebx
  4010f4:	xor    eax,0xccddcfdb
  4010f9:	ja     0x401171
  4010fb:	or     ecx,DWORD PTR [esi]
  4010fd:	test   al,0xa
  4010ff:	(bad)  
  401101:	bswap  edx
  401103:	adc    dh,BYTE PTR [edi]
  401105:	sbb    bl,BYTE PTR [edi]
  401107:	mov    ch,0x52
  401109:	or     ah,BYTE PTR [edi-0x4e10f32f]
  40110f:	rol    esp,cl
  401111:	or     ecx,DWORD PTR [esp+edx*1+0x4da8e6bc]
  401118:	sbb    DWORD PTR [ecx+0x541fb4dc],esp
  40111e:	out    dx,al
  40111f:	outs   dx,DWORD PTR ds:[esi]
  401120:	add    ebx,DWORD PTR ds:0x4ac4729e
  401126:	mov    al,ds:0x36dd215b
  40112b:	mov    eax,ds:0xa3c97380
  401131:	je     0x401169
  401133:	fisttp DWORD PTR [ebp+0x359ac4f5]
  401139:	jecxz  0x401175
  40113b:	and    ebp,0x4f
  40113e:	aam    0x94
  401140:	dec    ebp
  401141:	inc    DWORD PTR [edi-0x2f5a886e]
  401147:	mov    cl,0x41
  401149:	loope  0x40116f
  40114b:	pop    ecx
  40114c:	sub    edi,DWORD PTR [eax-0x41639320]
  401152:	jae    0x401171
  401154:	retf   
  401155:	cwde   
  401156:	sub    eax,0xc85ce3c6
  40115b:	(bad)  
  40115c:	mov    dl,0xfa
  40115e:	loopne 0x4010f8
  401160:	cmp    eax,0xc76966cf
  401165:	sub    al,cl
  401167:	or     ch,dl
  401169:	sbb    eax,0xb39945d
  40116e:	outs   dx,DWORD PTR ds:[esi]
  40116f:	ins    DWORD PTR es:[edi],dx
  401170:	jb     0x401174
  401172:	cmp    eax,0x22468cd1
  401177:	jns    0x4011f8
  401179:	cmp    al,0x8f
  40117b:	add    bl,dl
  40117d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40117e:	add    edx,DWORD PTR [ebx+0x59]
  401181:	rol    esp,1
  401183:	add    eax,0x15d55edb
  401188:	jge    0x401126
  40118a:	mov    ah,0x43
  40118c:	daa    
  40118d:	sbb    DWORD PTR [ebx],esp
  40118f:	addr16 and eax,0x4f3cdb10
  401195:	loop   0x401158
  401197:	xchg   esi,eax
  401198:	push   eax
  401199:	cld    
  40119a:	lock add DWORD PTR [ecx-0x57],ebp
  40119e:	fld    QWORD PTR [esi]
  4011a0:	xlat   BYTE PTR ds:[ebx]
  4011a1:	je     0x4011e3
  4011a3:	popf   
  4011a4:	add    DWORD PTR [ebp+0x3],ebx
  4011a7:	retf   
  4011a8:	adc    DWORD PTR ds:0x42483f,0x44e418
  4011b2:	mov    DWORD PTR [ebp-0x1c],ecx
  4011b5:	xor    DWORD PTR ds:0x41074f,0x5a6f
  4011bf:	mov    ecx,DWORD PTR [ebp+0x14]
  4011c2:	adc    DWORD PTR ds:0x44e414,0x42483b
  4011cc:	jmp    0x40129f
  4011d1:	inc    edi
  4011d2:	in     eax,0x24
  4011d4:	xor    bh,BYTE PTR [edx+0x6b7d7dcd]
  4011da:	inc    ebp
  4011db:	in     al,dx
  4011dc:	xchg   BYTE PTR [edi-0x75],dl
  4011df:	pop    ds
  4011e0:	scas   al,BYTE PTR es:[edi]
  4011e1:	mov    ds:0xa27c7c7c,al
  4011e6:	jl     0x401264
  4011e8:	jl     0x40121f
  4011ea:	sar    DWORD PTR [edx-0x8],0xff
  4011ee:	sbb    eax,0x1d7df956
  4011f3:	adc    bh,BYTE PTR [ebp+0x51]
  4011f6:	retf   
  4011f7:	cmp    bl,al
  4011f9:	mov    eax,0xa7468b84
  4011fe:	fucomi st,st(3)
  401200:	fisubr DWORD PTR [eax-0x3c]
  401203:	and    cl,ch
  401205:	or     BYTE PTR [esi+0x5f],bh
  401208:	mov    al,0x85
  40120a:	cmp    al,dl
  40120c:	mov    edx,0xff06346d
  401211:	pop    ss
  401212:	scas   al,BYTE PTR es:[edi]
  401213:	inc    edx
  401214:	popf   
  401215:	fidiv  WORD PTR [edx+ecx*8]
  401218:	test   al,0xe1
  40121a:	fidiv  WORD PTR [edx]
  40121c:	inc    esp
  40121d:	and    BYTE PTR [ebp+0x6f],ch
  401220:	pop    esp
  401221:	icebp  
  401222:	fwait
  401223:	pop    ds
  401224:	cmp    DWORD PTR [ecx-0x49],edi
  401227:	pop    eax
  401228:	push   0x2346f3af
  40122d:	aaa    
  40122e:	das    
  40122f:	lds    edi,FWORD PTR [edi-0x54]
  401232:	ds (bad) 
  401234:	sti    
  401235:	jae    0x40124f
  401237:	outs   dx,BYTE PTR ds:[esi]
  401238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401239:	test   dl,bl
  40123b:	in     al,dx
  40123c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40123d:	and    esi,eax
  40123f:	inc    eax
  401240:	repnz sbb WORD PTR [ecx-0x40ced5fa],ax
  401248:	outs   dx,BYTE PTR ds:[esi]
  401249:	jae    0x401200
  40124b:	or     dl,BYTE PTR [eax-0x7b54c746]
  401251:	cli    
  401252:	mov    ds:0x4f926dc7,al
  401257:	mov    esi,0xb5ec69d6
  40125c:	pop    eax
  40125d:	jge    0x4012dc
  40125f:	jecxz  0x40125a
  401261:	pop    ecx
  401262:	mov    DWORD PTR [ebp+0x27306dc5],edi
  401268:	mov    bl,0xc8
  40126a:	dec    ecx
  40126b:	in     al,dx
  40126c:	dec    edx
  40126d:	fdivr  DWORD PTR [eax*2-0x7762a15f]
  401274:	jb     0x4012e3
  401276:	fcom   QWORD PTR [ebx-0x1c313bba]
  40127c:	call   0x52b1:0xe7169d0b
  401283:	retf   0x7900
  401286:	arpl   WORD PTR [edi+edi*1+0x1c858bfc],sp
  40128d:	xchg   ebp,eax
  40128e:	and    ch,BYTE PTR [eax-0x5c9bcdf4]
  401294:	test   BYTE PTR [ecx],ah
  401296:	adc    ch,BYTE PTR ds:0xd275e687
  40129c:	add    dl,al
  40129e:	adc    eax,0xc9855756
  4012a3:	mov    DWORD PTR ds:0x424843,0x53ab
  4012ad:	je     0x401398
  4012b3:	and    ecx,ecx
  4012b5:	mov    ecx,DWORD PTR [ebp+0x14]
  4012b8:	and    edi,edi
  4012ba:	jmp    0x40138d
  4012bf:	xchg   DWORD PTR [edi-0x31],eax
  4012c2:	or     ecx,edi
  4012c4:	mov    ebx,DWORD PTR [ebx+0x5b]
  4012c7:	dec    esi
  4012c8:	popa   
  4012c9:	enter  0xeefc,0x1e
  4012cd:	(bad)
  4012d1:	jl     0x40134f
  4012d3:	mov    ds:0x397c7c7c,al
  4012d8:	shl    esp,1
  4012da:	jno    0x4012c2
  4012dc:	out    0x9b,al
  4012de:	cli    
  4012df:	xor    dh,BYTE PTR [eax]
  4012e1:	loop   0x40132e
  4012e3:	pop    ecx
  4012e4:	ja     0x4012a2
  4012e6:	ins    DWORD PTR es:[edi],dx
  4012e7:	cld    
  4012e8:	push   edi
  4012e9:	dec    edi
  4012ea:	ror    BYTE PTR [edi+0x13],cl
  4012ed:	and    eax,DWORD PTR [ecx+0x69]
  4012f0:	sub    al,0xb
  4012f2:	lahf   
  4012f3:	dec    esi
  4012f4:	mov    ebp,0x3c583998
  4012f9:	loop   0x4012ba
  4012fb:	nop
  4012fc:	int3   
  4012fd:	add    edi,DWORD PTR [esi]
  4012ff:	and    eax,0xee07c528
  401304:	dec    esi
  401305:	fisub  DWORD PTR [edi+0x4558196b]
  40130b:	push   ss
  40130c:	xor    al,0xe2
  40130e:	sub    al,0x16
  401310:	inc    esp
  401311:	jmp    0xccf9:0xd5422d47
  401318:	xchg   esi,eax
  401319:	in     al,dx
  40131a:	pop    ds
  40131b:	test   al,0xa9
  40131d:	mov    ebx,0x155e5c83
  401322:	pop    ds
  401323:	or     cl,ch
  401325:	fs popf 
  401327:	test   BYTE PTR [ebx],bl
  401329:	retf   0x1fd9
  40132c:	cwde   
  40132d:	inc    eax
  40132e:	pop    ds
  40132f:	outs   dx,DWORD PTR ds:[esi]
  401330:	int    0x4a
  401332:	dec    esi
  401333:	push   ebx
  401334:	ret    0x8e04
  401337:	call   0x80c098b5
  40133c:	mov    esi,0x94f8037
  401341:	jmp    0xaf471726
  401346:	xor    bh,ah
  401348:	loop   0x401331
  40134a:	inc    ebp
  40134b:	mov    ds:0xa8dd4974,al
  401350:	push   esp
  401351:	jle    0x40134c
  401353:	mov    ds:0x53544c3f,eax
  401358:	(bad)  
  401359:	out    dx,eax
  40135a:	sar    DWORD PTR [ecx+0x58],1
  40135d:	jg     0x4013a3
  40135f:	inc    esi
  401360:	mov    cl,0xe8
  401362:	pop    ds
  401363:	icebp  
  401364:	frstor [eax-0x46]
  401367:	inc    esp
  401368:	cmc    
  401369:	int    0x17
  40136b:	mov    ebx,0x756fde99
  401370:	int3   
  401371:	push   ss
  401372:	adc    esp,DWORD PTR [eax-0x278c0b60]
  401378:	push   0x5a
  40137a:	ffree  st(7)
  40137c:	mov    al,0x31
  40137e:	(bad)  
  40137f:	xchg   ecx,eax
  401380:	push   edx
  401381:	ins    DWORD PTR es:[edi],dx
  401382:	jp     0x40130b
  401384:	push   esp
  401385:	mov    es,WORD PTR [ebx]
  401387:	dec    edx
  401388:	call   0x98b:0x49aa8cb5
  40138f:	sub    DWORD PTR ds:0x41074f,ebx
  401395:	mov    DWORD PTR [ebp-0x1c],ecx
  401398:	sbb    esi,ecx
  40139a:	imul   edx,eax
  40139d:	and    DWORD PTR ds:0x42483b,0x618e
  4013a7:	mov    ecx,0x4573
  4013ac:	mov    DWORD PTR ds:0x44b6d8,0x19
  4013b6:	cmp    DWORD PTR ds:0x44b6d8,0x0
  4013bd:	je     0x4013f3
  4013c3:	cmp    DWORD PTR ds:0x44b6d8,0x1a
  4013ca:	jne    0x4013d9
  4013d0:	push   DWORD PTR [ebp-0x1c]
  4013d3:	call   DWORD PTR ds:0x443338
  4013d9:	xor    edi,edi
  4013db:	or     edi,DWORD PTR ds:0x44b6d8
  4013e1:	dec    edi
  4013e2:	mov    DWORD PTR ds:0x44b6d8,edi
  4013e8:	jmp    0x4013b6
  4013ed:	xor    DWORD PTR ds:0x448980,edx
  4013f3:	add    edx,ecx
  4013f5:	inc    edi
  4013f6:	mov    esi,0x7879
  4013fb:	add    DWORD PTR ds:0x44b6e8,edx
  401401:	mov    edi,0x1556
  401406:	sub    DWORD PTR ds:0x4489a4,0x41074b
  401410:	xchg   esi,ecx
  401412:	xor    DWORD PTR ds:0x44e420,ecx
  401418:	sub    edx,edi
  40141a:	or     ecx,0x50d4
  401420:	xor    esi,esi
  401422:	mov    DWORD PTR [ebp-0x28],esi
  401425:	movzx  ecx,WORD PTR ds:0x44e420
  40142c:	xor    DWORD PTR ds:0x44e414,ecx
  401432:	mov    DWORD PTR [ebp-0x2c],esi
  401435:	or     ecx,0x6619
  40143b:	mov    DWORD PTR [ebp-0x14],esi
  40143e:	mov    ecx,DWORD PTR ds:0x410757
  401444:	xor    DWORD PTR ds:0x424833,ecx
  40144a:	jmp    0x40151d
  40144f:	ficom  WORD PTR [esi+0x7b7d5fa5]
  401455:	loop   0x401400
  401457:	sbb    al,0x21
  401459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40145a:	out    dx,eax
  40145b:	pop    ebx
  40145c:	jmp    0x7c7c:0x7e1e3bab
  401463:	mov    ds:0x547c7c7c,al
  401468:	mov    dl,0x7b
  40146a:	daa    
  40146b:	xchg   esi,eax
  40146d:	test   DWORD PTR [edi+0x5dd790da],ecx
  401473:	fild   DWORD PTR ds:0x2ea1ec0a
  401479:	dec    eax
  40147a:	or     DWORD PTR [esi],edi
  40147c:	jg     0x401489
  40147e:	mov    bl,0x28
  401480:	push   esi
  401481:	inc    edi
  401482:	aad    0xfa
  401484:	mov    bl,0xba
  401486:	jg     0x4014ec
  401488:	cmp    BYTE PTR [ecx-0x16427d5b],0xa2
  40148f:	add    eax,0x823cb4b0
  401494:	mov    dl,0xf5
  401496:	scas   al,BYTE PTR es:[edi]
  401497:	outs   dx,BYTE PTR ds:[esi]
  401498:	xchg   ecx,eax
  401499:	push   esi
  40149a:	xchg   edx,eax
  40149b:	sbb    al,0x26
  40149d:	repnz adc DWORD PTR [esi],edi
  4014a0:	fidiv  WORD PTR [ebx]
  4014a2:	ret    0x3968
  4014a5:	aas    
  4014a6:	sub    eax,0x794ba9ca
  4014ab:	xor    ebp,eax
  4014ad:	ins    DWORD PTR es:[edi],dx
  4014ae:	loopne 0x4014c1
  4014b0:	(bad)  
  4014b1:	hlt    
  4014b2:	rol    esi,0xc
  4014b5:	lods   al,BYTE PTR ds:[esi]
  4014b6:	mov    esi,0xece27dfd
  4014bb:	outs   dx,DWORD PTR ds:[esi]
  4014bc:	ja     0x4014ba
  4014be:	mov    ecx,0x1a744463
  4014c3:	aam    0x2d
  4014c5:	or     DWORD PTR [eax+0x5ce406c2],ebp
  4014cb:	jbe    0x4014e5
  4014cd:	xchg   edx,eax
  4014ce:	in     eax,dx
  4014cf:	jmp    0x4014fd
  4014d1:	and    DWORD PTR [eax-0x198354a4],esi
  4014d7:	jle    0x401475
  4014d9:	cwde   
  4014da:	lds    ecx,FWORD PTR [esi]
  4014dc:	adc    eax,0xe77b2b27
  4014e1:	cli    
  4014e2:	imul   eax,DWORD PTR [edx+0x548647ea],0x86e791cb
  4014ec:	sub    ebp,ecx
  4014ee:	sbb    DWORD PTR [eax],ecx
  4014f0:	fbstp  TBYTE PTR [edi-0x3a]
  4014f3:	out    dx,eax
  4014f4:	dec    ebx
  4014f5:	pusha  
  4014f6:	cmp    ebp,ecx
  4014f8:	and    al,0x9a
  4014fa:	mov    al,0x27
  4014fc:	xchg   ebp,eax
  4014fd:	and    eax,0xfbdb75bb
  401502:	xor    BYTE PTR [esi],0xae
  401505:	iret   
  401506:	shl    BYTE PTR [esi+edx*4],1
  401509:	inc    edx
  40150a:	in     al,0x99
  40150c:	lahf   
  40150d:	jne    0x401575
  40150f:	lods   eax,DWORD PTR ds:[esi]
  401510:	fidivr WORD PTR [ecx-0x1b]
  401513:	bound  eax,QWORD PTR [eax]
  401515:	add    eax,0x411a0a15
  40151a:	inc    eax
  40151b:	jnp    0x401535
  40151d:	mov    DWORD PTR [ebp-0x8],esi
  401520:	jmp    0x4015f3
  401525:	add    DWORD PTR [eax],edi
  401527:	repz push esp
  401529:	lods   eax,DWORD PTR ds:[esi]
  40152a:	addr16 std 
  40152c:	jge    0x401526
  40152e:	stc    
  40152f:	icebp  
  401530:	sahf   
  401531:	sub    ebp,DWORD PTR [edi+esi*1]
  401534:	pop    ebp
  401535:	inc    esp
  401536:	jle    0x4015b4
  401538:	jl     0x4014dc
  40153a:	jl     0x4015b8
  40153c:	jl     0x401597
  40153e:	in     al,0xd4
  401540:	mov    esi,0x9434391d
  401545:	and    DWORD PTR ds:0x9367cff8,eax
  40154b:	pop    ebx
  40154c:	sub    DWORD PTR [ebp+0xd],eax
  40154f:	outs   dx,DWORD PTR ds:[esi]
  401550:	mov    al,ds:0xfe77836a
  401555:	jne    0x401524
  401557:	rcl    BYTE PTR [esp+ecx*8+0xc7bdbb6],1
  40155e:	push   ebp
  40155f:	out    0xc0,al
  401561:	jo     0x401597
  401563:	xchg   ebp,eax
  401564:	mov    ebp,ss
  401566:	iret   
  401567:	dec    edx
  401568:	mov    al,0x2f
  40156a:	jecxz  0x40158d
  40156c:	js     0x401592
  40156e:	loopne 0x40156c
  401570:	dec    esi
  401571:	xchg   edi,eax
  401572:	dec    eax
  401573:	jg     0x40153b
  401575:	pop    ecx
  401576:	dec    esi
  401577:	push   esp
  401578:	daa    
  401579:	es dec ebp
  40157b:	daa    
  40157c:	sub    al,0x25
  40157e:	into   
  40157f:	cmc    
  401580:	dec    esi
  401581:	arpl   WORD PTR [edx],dx
  401583:	out    dx,eax
  401584:	(bad)  
  401585:	(bad)  
  401586:	adc    DWORD PTR [edx-0x2183090],eax
  40158c:	adc    al,0x6d
  40158e:	mov    ds:0x90d34f59,eax
  401593:	cmp    edi,DWORD PTR [ecx-0x9]
  401596:	xchg   ebx,eax
  401597:	sbb    BYTE PTR [ebx+0x1a],bl
  40159a:	inc    ebp
  40159b:	mov    ds:0x41f9b503,eax
  4015a0:	out    0xe2,al
  4015a2:	jo     0x40156f
  4015a4:	in     al,dx
  4015a5:	fnstsw WORD PTR ds:0xb4e00061
  4015ab:	call   0x29aa:0xd14f9ecb
  4015b2:	jae    0x401610
  4015b4:	ret    0xd2d0
  4015b7:	mov    ch,0xe3
  4015b9:	ja     0x4015b4
  4015bb:	jb     0x401610
  4015bd:	das    
  4015be:	(bad)  
  4015bf:	scas   eax,DWORD PTR es:[edi]
  4015c0:	pop    ss
  4015c1:	adc    DWORD PTR [edi-0x78],eax
  4015c4:	fbstp  TBYTE PTR [esi]
  4015c6:	cwde   
  4015c7:	cmp    ecx,DWORD PTR ds:0x479f1b2d
  4015cd:	cli    
  4015ce:	test   BYTE PTR [edx-0x1e],dl
  4015d1:	fsubr  DWORD PTR [edx]
  4015d3:	jae    0x4015d8
  4015d5:	jp     0x401641
  4015d7:	sub    esp,DWORD PTR [edx+0x3faf8fea]
  4015dd:	xor    edx,ebp
  4015df:	(bad)  
  4015e0:	(bad)  
  4015e1:	icebp  
  4015e2:	fs leave 
  4015e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015e5:	cmp    ebp,ebx
  4015e7:	call   0xda7a3806
  4015ec:	jno    0x40162a
  4015ee:	inc    ebp
  4015ef:	out    0x21,al
  4015f1:	rcr    BYTE PTR [edi-0x75],cl
  4015f4:	dec    ebp
  4015f5:	call   0x783337b
  4015fa:	inc    ecx
  4015fb:	add    BYTE PTR [edi+0x7],al
  4015fe:	inc    ecx
  4015ff:	add    BYTE PTR [ebx],dh
  401601:	enter  0x5c7,0x4b
  401605:	pop    es
  401606:	inc    ecx
  401607:	add    BYTE PTR [ebx],dl
  401609:	add    BYTE PTR [eax],al
  40160b:	add    BYTE PTR [ebx+0x41074b3d],al
  401611:	add    BYTE PTR [eax],al
  401613:	je     0x401657
  401619:	cmp    DWORD PTR ds:0x41074b,0x2
  401620:	jne    0x40162f
  401626:	push   DWORD PTR [ebp-0xc]
  401629:	call   DWORD PTR ds:0x44333c
  40162f:	cmp    DWORD PTR ds:0x41074b,0x3
  401636:	jne    0x401647
  40163c:	mov    eax,ds:0x41074b
  401641:	dec    eax
  401642:	mov    ds:0x41074b,eax
  401647:	mov    eax,ds:0x41074b
  40164c:	dec    eax
  40164d:	mov    ds:0x41074b,eax
  401652:	jmp    0x40160c
  401657:	xor    edi,edi
  401659:	add    ecx,ebx
  40165b:	mov    eax,ds:0x424847
  401660:	mov    DWORD PTR [ebp-0x20],ecx
  401663:	mov    eax,DWORD PTR [ebp-0x20]
  401666:	mov    DWORD PTR ds:0x410747,0x348
  401670:	je     0x402298
  401676:	mov    eax,DWORD PTR [ebp-0x4]
  401679:	xor    DWORD PTR ds:0x44b6d8,0x44e410
  401683:	xor    eax,0x7510857
  401688:	jmp    0x40175b
  40168d:	in     eax,0x57
  40168f:	iret   
  401690:	call   0x2571:0x577dba5d
  401697:	mov    esi,0x7f06406a
  40169c:	mov    bh,0x8a
  40169e:	jno    0x40171c
  4016a0:	jl     0x401644
  4016a2:	jl     0x401720
  4016a4:	jl     0x401661
  4016a6:	iret   
  4016a7:	jp     0x4016d7
  4016a9:	aad    0x3d
  4016ab:	pushf  
  4016ac:	std    
  4016ad:	xor    DWORD PTR [edx],ebp
  4016af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016b0:	retfw  
  4016b2:	syscall 
  4016b4:	leave  
  4016b5:	sar    BYTE PTR [edx+0x2f],cl
  4016b8:	mov    eax,ds:0xf914744e
  4016bd:	loop   0x401687
  4016bf:	(bad)  [ecx+0x1e20e5d8]
  4016c5:	pop    ebp
  4016c6:	adc    edi,esi
  4016c8:	(bad)  
  4016c9:	cs int 0xff
  4016cc:	adc    ebp,DWORD PTR [ecx*4-0x44af1111]
  4016d3:	sub    BYTE PTR [esi+0x3f],ah
  4016d6:	jne    0x40166d
  4016d8:	imul   esi,DWORD PTR [esi-0xe],0xffffff81
  4016dc:	pop    edi
  4016dd:	daa    
  4016de:	cwde   
  4016df:	pop    esp
  4016e0:	jbe    0x4016b8
  4016e2:	in     al,dx
  4016e3:	pusha  
  4016e4:	dec    ecx
  4016e5:	mov    ecx,0x1f43b6a7
  4016ea:	lods   al,BYTE PTR ds:[esi]
  4016eb:	fwait
  4016ec:	xchg   ebp,eax
  4016ed:	mov    ecx,0xffbe8cb8
  4016f2:	rcl    eax,0xa3
  4016f5:	rol    DWORD PTR [eax],0x5f
  4016f8:	lods   eax,DWORD PTR ds:[esi]
  4016f9:	mov    bh,0x7e
  4016fb:	sbb    BYTE PTR es:[esi-0x41],ch
  4016ff:	adc    BYTE PTR [esi+0x2719b938],0xd7
  401706:	sar    DWORD PTR [ebx],cl
  401708:	jl     0x401772
  40170a:	pop    ds
  40170b:	loop   0x40172b
  40170d:	sub    DWORD PTR [edi],esp
  40170f:	push   ebp
  401710:	cwde   
  401711:	xlat   BYTE PTR ds:[ebx]
  401712:	cmp    eax,0x3c2567ac
  401717:	mov    DWORD PTR [esp+ecx*8],ebx
  40171a:	xchg   DWORD PTR cs:[eax-0x73],edx
  40171e:	scas   eax,DWORD PTR es:[edi]
  40171f:	sbb    ch,BYTE PTR [edi]
  401721:	sbb    al,0x11
  401723:	inc    ebx
  401724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401725:	inc    ecx
  401726:	jmp    0x766871fd
  40172b:	inc    ebx
  40172c:	or     DWORD PTR [eax+0x52],esp
  40172f:	push   esp
  401730:	cmp    DWORD PTR ds:0x6a76e484,ecx
  401736:	bound  ecx,QWORD PTR [esi+edx*8-0x4783ff89]
  40173d:	ins    DWORD PTR es:[edi],dx
  40173e:	repz mov WORD PTR [ebp+0x63],fs
  401742:	mov    ds:0xcbb18074,al
  401747:	repnz xchg esi,eax
  401749:	xor    esi,DWORD PTR [eax-0x3a706ca4]
  40174f:	pop    ecx
  401750:	add    eax,0x6f140dbe
  401755:	adc    ecx,DWORD PTR [edi+0x6e23a27]
  40175b:	add    eax,ebx
  40175d:	mov    DWORD PTR ds:0x4489a4,0x156f
  401767:	cmp    edi,eax
  401769:	mov    DWORD PTR ds:0x44e414,0x5e58
  401773:	jne    0x401eef
  401779:	push   DWORD PTR [ebp+0x8]
  40177c:	add    DWORD PTR ds:0x44b6e4,0x4489a0
  401786:	call   0x409b25
  40178b:	mov    DWORD PTR ds:0x44e414,0x72d4
  401795:	mov    DWORD PTR [ebp-0x20],eax
  401798:	and    DWORD PTR ds:0x41073f,0x0
  4017a2:	jmp    0x4017b4
  4017a7:	mov    ecx,DWORD PTR ds:0x41073f
  4017ad:	inc    ecx
  4017ae:	mov    DWORD PTR ds:0x41073f,ecx
  4017b4:	cmp    DWORD PTR ds:0x41073f,0x16
  4017bb:	jae    0x4018af
  4017c1:	cmp    DWORD PTR ds:0x41073f,0x25
  4017c8:	jne    0x4017d7
  4017ce:	push   DWORD PTR [ebp-0x1c]
  4017d1:	call   DWORD PTR ds:0x443340
  4017d7:	jmp    0x4017a7
  4017dc:	jmp    0x4018af
  4017e1:	fdiv   st(2),st
  4017e3:	jmp    0xef7a:0x5462fa52
  4017ea:	into   
  4017eb:	outs   dx,DWORD PTR ds:[esi]
  4017ec:	inc    ecx
  4017ed:	retf   
  4017ee:	jae    0x4017d1
  4017f0:	xor    dh,BYTE PTR [eax]
  4017f2:	jo     0x401870
  4017f4:	jl     0x401798
  4017f6:	jl     0x401874
  4017f8:	jl     0x401835
  4017fa:	iret   
  4017fb:	mov    eax,ds:0x40667a8a
  401800:	int3   
  401801:	leave  
  401802:	fisttp DWORD PTR [edx+0x3f]
  401805:	or     al,0xe2
  401807:	bound  esi,QWORD PTR [ecx-0x40]
  40180a:	sub    DWORD PTR [ebx],ebx
  40180c:	fstp   QWORD PTR [ebp+0x5ad466a4]
  401812:	cmp    BYTE PTR ds:0x5c9a7b90,al
  401818:	sub    ecx,DWORD PTR [eax+esi*2]
  40181b:	shl    DWORD PTR [ebx+edi*8],cl
  40181e:	clc    
  40181f:	scas   eax,DWORD PTR es:[edi]
  401820:	imul   ecx,DWORD PTR [eax-0x20],0xdebce790
  401827:	xchg   esi,eax
  401828:	aad    0x8c
  40182a:	inc    ebp
  40182b:	clc    
  40182c:	popa   
  40182d:	mov    cl,0xb9
  40182f:	mov    ?,WORD PTR [ecx-0x10]
  401832:	data16 jnp 0x401803
  401835:	mov    eax,ds:0x6d8f50a7
  40183a:	or     eax,0x3e804e8a
  40183f:	outs   dx,DWORD PTR ds:[esi]
  401840:	fmul   QWORD PTR [edx+edi*2]
  401843:	arpl   WORD PTR [ebp-0x47],dx
  401846:	(bad)  [esi+0x16d96fb4]
  40184c:	gs and al,0x68
  40184f:	mov    ?,WORD PTR [ebx]
  401851:	xor    eax,0x6456c1f8
  401856:	adc    eax,0x6a6bef0d
  40185b:	dec    eax
  40185c:	out    dx,eax
  40185d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40185e:	aaa    
  40185f:	or     eax,ebp
  401861:	sar    dl,1
  401863:	call   0x9ba831b0
  401868:	bound  esi,QWORD PTR [ecx+0x60]
  40186b:	sbb    BYTE PTR [ecx-0x5bcdcfa3],al
  401871:	mov    ss,WORD PTR [eax+0x3f]
  401874:	jmp    0x8c4e:0x662ba38e
  40187b:	cwde   
  40187c:	sbb    bl,dl
  40187e:	fwait
  40187f:	push   esp
  401880:	add    bh,BYTE PTR [edi-0x75]
  401883:	xchg   DWORD PTR [esi],eax
  401885:	mov    ecx,0x223f0667
  40188a:	sbb    BYTE PTR [ecx*1+0x6d68168b],al
  401891:	shr    BYTE PTR [ebp+0x506a98d6],1
  401897:	mov    eax,ds:0x9d658eec
  40189c:	inc    ebp
  40189d:	pop    esi
  40189e:	(bad)  
  4018a0:	add    DWORD PTR cs:[ebx-0x7be6a70a],ecx
  4018a7:	pop    ebp
  4018a8:	inc    edi
  4018a9:	sub    al,0x0
  4018ab:	call   0x8b68de58
  4018b0:	inc    ebp
  4018b1:	cld    
  4018b2:	xor    DWORD PTR ds:0x44e40c,edi
  4018b8:	mov    ecx,DWORD PTR [ebp-0x20]
  4018bb:	adc    DWORD PTR ds:0x44b6d4,ebx
  4018c1:	mov    esi,0x7510857
  4018c6:	xor    eax,esi
  4018c8:	adc    DWORD PTR ds:0x44898c,0x424847
  4018d2:	add    eax,ebx
  4018d4:	mov    DWORD PTR ds:0x448998,0x1172
  4018de:	cmp    ecx,eax
  4018e0:	mov    DWORD PTR ds:0x44899c,0x309e
  4018ea:	je     0x4021a9
  4018f0:	sub    DWORD PTR ds:0x41074b,0x410743
  4018fa:	push   DWORD PTR [ebp-0x20]
  4018fd:	jmp    0x4019d0
  401902:	js     0x40197b
  401904:	dec    ecx
  401905:	mov    bh,BYTE PTR [ebp+0x4a]
  401908:	jnp    0x401903
  40190a:	hlt    
  40190b:	push   esi
  40190c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40190d:	imul   esi,DWORD PTR [edi+0x66b6bb6a],0x70
  401914:	jl     0x401992
  401916:	mov    ds:0xa87c7c7c,al
  40191b:	cs sbb ebx,DWORD PTR cs:[ecx-0x8]
  401920:	mov    eax,ds:0x4b023a8f
  401925:	xor    DWORD PTR [eax+0x30],esp
  401928:	push   ebp
  401929:	cmp    BYTE PTR [ecx-0x18bd4a23],cl
  40192f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401930:	jle    0x401946
  401932:	fwait
  401933:	jb     0x4018f4
  401935:	cwde   
  401936:	mov    ds:0x5294de5,eax
  40193b:	mov    ds:0x1314103e,al
  401940:	data16 jge 0x401924
  401943:	stos   BYTE PTR es:[edi],al
  401944:	mov    esp,0x70b7b79b
  401949:	and    ebx,DWORD PTR [eax]
  40194b:	gs ja  0x401950
  40194e:	inc    ebp
  40194f:	mov    ebp,0x10aff723
  401954:	mov    esp,0xc1e9a9d5
  401959:	out    0xd6,eax
  40195b:	fnstsw WORD PTR [edx+eax*4-0x1f]
  40195f:	jmp    0xb0fd:0xc2cd53fd
  401966:	sub    ebx,DWORD PTR [edx+0x13]
  401969:	xor    dh,cl
  40196b:	dec    ebx
  40196c:	mov    ds:0x3ad0d518,al
  401971:	xor    eax,0x4c34693f
  401976:	pop    es
  401977:	jns    0x401935
  401979:	out    dx,eax
  40197a:	pop    edi
  40197b:	or     eax,0x9e25f6bf
  401980:	sub    al,dh
  401982:	pop    ebp
  401983:	int    0xe9
  401985:	imul   ecx,DWORD PTR [esi-0x2248fbe5],0xffffff96
  40198c:	and    dl,BYTE PTR ds:0xaa925367
  401992:	jae    0x401924
  401994:	push   ss
  401995:	cmp    eax,0x2aa433db
  40199a:	fnstenv [esi]
  40199c:	mov    cl,0x38
  40199e:	sbb    al,0x4a
  4019a0:	or     eax,0x26625561
  4019a5:	jnp    0x40199a
  4019a7:	sbb    edi,DWORD PTR [ebx]
  4019a9:	jmp    0x2de60a3
  4019ae:	and    DWORD PTR [edi-0x2f],esi
  4019b1:	popf   
  4019b2:	xchg   ecx,eax
  4019b3:	ss mov bl,cl
  4019b6:	cmp    dh,ch
  4019b8:	jge    0x401a19
  4019ba:	xchg   esp,eax
  4019bb:	enter  0xd8c7,0xf3
  4019bf:	(bad)  
  4019c1:	nop
  4019c2:	shl    ebx,1
  4019c4:	mov    edx,DWORD PTR [ecx+0x6bd18d36]
  4019ca:	scas   eax,DWORD PTR es:[edi]
  4019cb:	pop    edi
  4019cc:	fidiv  DWORD PTR [ebp+0x75ffd5d9]
  4019d2:	or     al,ch
  4019d4:	mov    edi,0xe9000066
  4019d9:	into   
  4019da:	add    BYTE PTR [eax],al
  4019dc:	add    ah,bh
  4019de:	mov    ecx,eax
  4019e0:	mov    ecx,ebx
  4019e2:	dec    ebx
  4019e3:	mov    edi,0x495a648b
  4019e8:	aad    0xf1
  4019ea:	adc    eax,0x73accaa8
  4019ef:	jl     0x401a6d
  4019f1:	mov    ds:0x6c7c7c7c,al
  4019f6:	pushf  
  4019f7:	in     al,dx
  4019f8:	arpl   WORD PTR [esp+ebp*8],si
  4019fb:	and    DWORD PTR [ecx-0x3caf35f8],ecx
  401a01:	mov    DWORD PTR [edx+0x1d423991],eax
  401a07:	jo     0x4019dd
  401a09:	mov    bh,0xd5
  401a0b:	inc    ebp
  401a0c:	push   ecx
  401a0d:	dec    eax
  401a0e:	dec    edx
  401a0f:	xchg   ebp,eax
  401a10:	sbb    al,0xa5
  401a13:	cmp    DWORD PTR [ebp+0x16e2e085],ecx
  401a19:	jle    0x4019f9
  401a1b:	pop    ds
  401a1c:	xchg   ecx,eax
  401a1d:	mov    bl,0x7e
  401a1f:	out    dx,al
  401a20:	ret    0x833d
  401a23:	rol    DWORD PTR [ebp+0x7b908bc8],1
  401a29:	adc    ecx,ebp
  401a2b:	add    DWORD PTR [ecx-0x546dbbf4],eax
  401a31:	or     ah,bl
  401a33:	cli    
  401a34:	or     bh,BYTE PTR [ecx-0x3a]
  401a37:	mov    edi,0xd9c09901
  401a3c:	xor    BYTE PTR [ebx-0x10823578],dh
  401a42:	out    dx,eax
  401a43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a44:	shr    BYTE PTR ss:[ecx+0x58a7042c],0x87
  401a4c:	add    esi,DWORD PTR [eax]
  401a4e:	adc    eax,0xaaa95dd3
  401a53:	cld    
  401a54:	inc    edx
  401a55:	scas   eax,DWORD PTR es:[edi]
  401a56:	sub    BYTE PTR [esi-0x78dfdba4],bh
  401a5c:	sbb    eax,0x13c7941d
  401a61:	test   cl,bh
  401a63:	out    dx,al
  401a64:	shl    DWORD PTR [eax+ebp*8-0x77d13aa1],1
  401a6b:	stos   BYTE PTR es:[edi],al
  401a6c:	dec    ecx
  401a6d:	inc    BYTE PTR [edi]
  401a6f:	dec    edx
  401a70:	xchg   ecx,eax
  401a71:	mov    esi,0xe8ed07bf
  401a76:	jnp    0x4019f9
  401a78:	adc    edi,edi
  401a7a:	out    0x79,al
  401a7c:	stc    
  401a7d:	push   ds
  401a7e:	cmc    
  401a7f:	dec    ebp
  401a80:	add    ch,ch
  401a82:	std    
  401a83:	and    ebp,DWORD PTR ds:0x7495c827
  401a89:	xchg   BYTE PTR [eax+0x629d4950],al
  401a8f:	sar    eax,1
  401a91:	and    al,0x7d
  401a93:	dec    eax
  401a94:	out    0xc9,al
  401a96:	repz lds esp,FWORD PTR [ecx]
  401a99:	fnstsw WORD PTR [ebx-0x20f07ed5]
  401a9f:	jmp    DWORD PTR [esi]
  401aa1:	mov    BYTE PTR [esi-0x7d1c2b66],dh
  401aa7:	lods   eax,DWORD PTR ds:[esi]
  401aa8:	fsubp  st(7),st
  401aaa:	hlt    
  401aab:	mov    DWORD PTR [ebp-0x14],eax
  401aae:	mov    eax,DWORD PTR [ebp-0x4]
  401ab1:	add    DWORD PTR ds:0x44b6cc,ecx
  401ab7:	mov    ecx,DWORD PTR [ebp-0x14]
  401aba:	xor    eax,esi
  401abc:	add    eax,ebx
  401abe:	mov    DWORD PTR ds:0x42483f,0x6998
  401ac8:	cmp    ecx,eax
  401aca:	mov    DWORD PTR ds:0x44b6d4,0x4e4a
  401ad4:	je     0x4021a9
  401ada:	mov    eax,DWORD PTR [ebp-0x14]
  401add:	mov    eax,DWORD PTR [eax+0x18]
  401ae0:	and    DWORD PTR ds:0x448994,0x0
  401aea:	xor    ecx,ecx
  401aec:	add    ecx,DWORD PTR ds:0x448994
  401af2:	inc    ecx
  401af3:	mov    DWORD PTR ds:0x448994,ecx
  401af9:	cmp    DWORD PTR ds:0x448994,0x7
  401b00:	jne    0x401b19
  401b06:	push   0x41098d
  401b0b:	push   0x41075f
  401b10:	push   DWORD PTR [ebp-0x1c]
  401b13:	call   DWORD PTR ds:0x443344
  401b19:	cmp    DWORD PTR ds:0x448994,0x6
  401b20:	jne    0x401b35
  401b26:	xor    ecx,ecx
  401b28:	xor    ecx,DWORD PTR ds:0x448994
  401b2e:	inc    ecx
  401b2f:	mov    DWORD PTR ds:0x448994,ecx
  401b35:	cmp    DWORD PTR ds:0x448994,0x12
  401b3c:	jb     0x401aea
  401b42:	sub    DWORD PTR ds:0x424843,0x3b9b
  401b4c:	jmp    0x401c1f
  401b51:	inc    ecx
  401b52:	adc    eax,0x9d621a92
  401b57:	jns    0x401bc6
  401b59:	retf   
  401b5a:	push   cs
  401b5b:	ins    BYTE PTR es:[edi],dx
  401b5c:	jno    0x401af6
  401b5e:	sbb    eax,0x72d2007e
  401b63:	jl     0x401be1
  401b65:	mov    ds:0x387c7c7c,al
  401b6a:	sbb    edi,edx
  401b6c:	lock push eax
  401b6e:	mov    ebp,0x62d29fbb
  401b73:	fdivp  st(3),st
  401b75:	mov    ah,BYTE PTR [ecx]
  401b77:	jo     0x401b4c
  401b79:	fadd   QWORD PTR [ecx+edi*2]
  401b7c:	aam    0xaa
  401b7e:	leave  
  401b7f:	mov    bl,0x21
  401b81:	xor    bl,BYTE PTR [ebx+eax*1+0x47444216]
  401b88:	call   0x435fdc58
  401b8d:	add    BYTE PTR [eax],dl
  401b8f:	mov    dl,0x5
  401b91:	dec    esp
  401b92:	imul   eax,DWORD PTR gs:[esi+ebx*8+0xf8d840a],0x511dbb2f
  401b9e:	push   ss
  401b9f:	aam    0x54
  401ba1:	fs mov ebp,0x34b53ae5
  401ba7:	arpl   WORD PTR [edx-0x133d8f45],dx
  401bad:	daa    
  401bae:	inc    ebp
  401baf:	inc    esi
  401bb0:	add    esp,DWORD PTR [ecx-0x77489739]
  401bb6:	fldenv [edx+0x62afac78]
  401bbc:	fistp  QWORD PTR [edx]
  401bbe:	shl    BYTE PTR [eax+edi*1],1
  401bc1:	sar    dh,0x89
  401bc4:	sahf   
  401bc5:	sbb    BYTE PTR [eax-0x6d],ch
  401bc8:	sbb    esi,DWORD PTR [edi-0x115839f8]
  401bce:	mov    bl,0xd0
  401bd0:	sub    al,0x4
  401bd2:	enter  0xa56c,0x71
  401bd6:	out    dx,al
  401bd7:	cmp    dh,ch
  401bd9:	in     al,dx
  401bda:	jmp    0xe74c1aa9
  401bdf:	jno    0x401b8a
  401be1:	mov    esi,edi
  401be3:	aaa    
  401be4:	cld    
  401be5:	call   0xa362:0x6d6d79bf
  401bec:	clc    
  401bed:	push   edx
  401bee:	bound  eax,QWORD PTR [edx+0x60]
  401bf1:	aaa    
  401bf2:	add    ebx,ebp
  401bf4:	ds iret 
  401bf6:	call   0x4152e63a
  401bfb:	cwde   
  401bfc:	dec    edx
  401bfd:	mov    al,0xb7
  401bff:	sbb    BYTE PTR [ebx+0x71ae3f8f],dh
  401c05:	xlat   BYTE PTR ds:[ebx]
  401c06:	cmp    ecx,esp
  401c08:	mov    dl,0x4
  401c0a:	retf   0x4f08
  401c0d:	dec    esp
  401c0e:	in     eax,0x7f
  401c10:	inc    edx
  401c11:	jg     0x401c54
  401c13:	push   esi
  401c14:	cmp    al,0x18
  401c16:	jne    0x401c17
  401c18:	ret    
  401c19:	and    al,0x33
  401c1b:	mov    ah,dl
  401c1d:	(bad)  
  401c1e:	mov    WORD PTR [ecx-0x1e7e1fbb],cs
  401c24:	mov    bl,0x68
  401c26:	add    BYTE PTR [eax],al
  401c28:	mov    eax,DWORD PTR [ebp-0x14]
  401c2b:	mov    ecx,DWORD PTR [ebp+0x8]
  401c2e:	and    DWORD PTR ds:0x44899c,0x44b6e0
  401c38:	add    ecx,DWORD PTR [eax+0x20]
  401c3b:	movzx  eax,BYTE PTR ds:0x44e424
  401c42:	and    eax,DWORD PTR ds:0x44b6e4
  401c48:	mov    ds:0x44e424,eax
  401c4d:	mov    DWORD PTR [ebp-0x28],ecx
  401c50:	sub    DWORD PTR ds:0x42484b,ecx
  401c56:	mov    eax,DWORD PTR [ebp-0x14]
  401c59:	and    DWORD PTR ds:0x41074b,0x0
  401c63:	jmp    0x401c75
  401c68:	mov    ecx,DWORD PTR ds:0x41074b
  401c6e:	inc    ecx
  401c6f:	mov    DWORD PTR ds:0x41074b,ecx
  401c75:	cmp    DWORD PTR ds:0x41074b,0x1d
  401c7c:	jae    0x401cc9
  401c82:	cmp    DWORD PTR ds:0x41074b,0x9
  401c89:	jne    0x401caa
  401c8f:	push   DWORD PTR [ebp-0x20]
  401c92:	push   0x8068
  401c97:	push   0x67b9
  401c9c:	push   0x4109ab
  401ca1:	push   DWORD PTR [ebp-0x24]
  401ca4:	call   DWORD PTR ds:0x4430c8
  401caa:	cmp    DWORD PTR ds:0x41074b,0x8
  401cb1:	jne    0x401cc4
  401cb7:	mov    ecx,DWORD PTR ds:0x41074b
  401cbd:	inc    ecx
  401cbe:	mov    DWORD PTR ds:0x41074b,ecx
  401cc4:	jmp    0x401c68
  401cc9:	mov    ecx,DWORD PTR [ebp+0x8]
  401ccc:	not    DWORD PTR ds:0x44898c
  401cd2:	add    ecx,DWORD PTR [eax+0x24]
  401cd5:	xor    DWORD PTR ds:0x44b6e0,0x6435
  401cdf:	mov    DWORD PTR [ebp-0x2c],ecx
  401ce2:	jmp    0x401db5
  401ce7:	cmp    edi,DWORD PTR [ebx]
  401ce9:	mov    eax,0xbd95b815
  401cee:	cmp    eax,0x3403dcf7
  401cf3:	fld    QWORD PTR [esi+0x78]
  401cf6:	sub    DWORD PTR [eax],ebx
  401cf8:	jne    0x401d76
  401cfa:	jl     0x401c9e
  401cfc:	jl     0x401d7a
  401cfe:	jl     0x401ccb
  401d00:	or     DWORD PTR [edi-0x34eab50a],edi
  401d06:	xchg   ecx,eax
  401d07:	xor    DWORD PTR [esi+0x41],ecx
  401d0a:	and    dl,0x6f
  401d0d:	pop    ss
  401d0e:	out    0x6b,al
  401d10:	jle    0x401d3d
  401d12:	xchg   ebx,eax
  401d13:	mov    al,0xa1
  401d15:	mov    dh,0xc0
  401d17:	in     eax,0x4c
  401d19:	jno    0x401cd8
  401d1b:	adc    al,0x43
  401d1d:	inc    eax
  401d1e:	xchg   edi,eax
  401d1f:	rcl    al,cl
  401d21:	int3   
  401d22:	push   esp
  401d23:	dec    edi
  401d24:	sub    DWORD PTR [edi-0x2],ebx
  401d27:	aad    0xd4
  401d29:	pop    ebp
  401d2a:	lds    edx,FWORD PTR [edi-0x5f2b19f7]
  401d30:	aad    0x3
  401d32:	sbb    ch,BYTE PTR [edx+edi*2]
  401d35:	aad    0x3f
  401d37:	test   BYTE PTR [edx-0x7ca575e6],ah
  401d3d:	mov    ds:0xe41ea285,al
  401d42:	cmp    eax,0xa599110c
  401d47:	or     eax,DWORD PTR [eax-0x77e79ad7]
  401d4d:	or     DWORD PTR [edi-0x7b],0xffffff88
  401d51:	ret    0xce2c
  401d54:	popf   
  401d55:	sti    
  401d56:	rcr    BYTE PTR [ecx-0x24895059],0x50
  401d5d:	pop    ss
  401d5e:	dec    esp
  401d5f:	jbe    0x401d69
  401d61:	stos   DWORD PTR es:[edi],eax
  401d62:	inc    ecx
  401d63:	out    0xb7,eax
  401d65:	mov    bl,0x46
  401d67:	pop    ss
  401d68:	rcl    DWORD PTR [ebx+0x38],1
  401d6b:	pop    ebx
  401d6c:	and    cl,BYTE PTR [ecx]
  401d6e:	mov    ebx,0xc37f602
  401d73:	neg    DWORD PTR [ebx+0x3c493d38]
  401d79:	inc    ecx
  401d7a:	in     al,0x69
  401d7c:	enter  0xb40e,0x49
  401d80:	pop    esp
  401d81:	jmp    0x401d36
  401d83:	outs   dx,BYTE PTR ds:[esi]
  401d84:	rcr    DWORD PTR [edx+0x4d],cl
  401d87:	jp     0x401dc7
  401d89:	sub    ch,cl
  401d8b:	cwde   
  401d8c:	iret   
  401d8d:	push   es
  401d8e:	out    0x53,al
  401d90:	sbb    ecx,DWORD PTR [esi+ebx*1]
  401d93:	repz call 0xc199:0xedb39dbf
  401d9b:	add    BYTE PTR [eax+ebx*1-0x4e],cl
  401d9f:	clc    
  401da0:	nop
  401da1:	outs   dx,DWORD PTR ds:[esi]
  401da2:	and    cl,dh
  401da4:	jecxz  0x401e0f
  401da6:	add    esp,ebp
  401da8:	sbb    dl,BYTE PTR [edi+0x45]
  401dab:	test   al,0xeb
  401dad:	in     al,0x4a
  401daf:	es neg edi
  401db2:	sub    DWORD PTR [esi],esi
  401db4:	retf   0x458b
  401db7:	in     al,dx
  401db8:	mov    DWORD PTR ds:0x41075b,0x19
  401dc2:	cmp    DWORD PTR ds:0x41075b,0x0
  401dc9:	je     0x401e11
  401dcf:	cmp    DWORD PTR ds:0x41075b,0xb
  401dd6:	jne    0x401de5
  401ddc:	push   DWORD PTR [ebp-0x24]
  401ddf:	call   DWORD PTR ds:0x4430cc
  401de5:	cmp    DWORD PTR ds:0x41075b,0xc
  401dec:	jne    0x401dff
  401df2:	mov    ecx,DWORD PTR ds:0x41075b
  401df8:	dec    ecx
  401df9:	mov    DWORD PTR ds:0x41075b,ecx
  401dff:	mov    ecx,DWORD PTR ds:0x41075b
  401e05:	dec    ecx
  401e06:	mov    DWORD PTR ds:0x41075b,ecx
  401e0c:	jmp    0x401dc2
  401e11:	mov    ecx,DWORD PTR [ebp+0x8]
  401e14:	add    ecx,DWORD PTR [eax+0x1c]
  401e17:	xor    esi,esi
  401e19:	mov    DWORD PTR [ebp-0x14],ecx
  401e1c:	jmp    0x401eef
  401e21:	xor    al,0x72
  401e23:	mov    ds:0x46657dd5,eax
  401e28:	sub    eax,0xe5b1e0bc
  401e2d:	xlat   BYTE PTR ds:[bx]
  401e2f:	dec    ecx
  401e30:	push   0x4e
  401e32:	jne    0x401eb0
  401e34:	jl     0x401dd8
  401e36:	jl     0x401eb4
  401e38:	jl     0x401e4c
  401e3a:	cwde   
  401e3b:	add    ecx,DWORD PTR [ebp-0x34515dc2]
  401e41:	ja     0x401eab
  401e43:	cmp    ch,0x6d
  401e46:	push   eax
  401e47:	push   cs
  401e48:	mov    eax,ds:0x7000356b
  401e4d:	xchg   edx,eax
  401e4e:	mov    ecx,0xa17d1432
  401e53:	sahf   
  401e54:	sbb    DWORD PTR [eax-0x14],edx
  401e57:	sbb    eax,0xfa7daaa4
  401e5c:	scas   al,BYTE PTR es:[edi]
  401e5d:	xor    dh,dl
  401e5f:	idiv   al
  401e61:	pop    eax
  401e62:	pop    ebx
  401e63:	mov    eax,0x853af9df
  401e68:	jno    0x401e94
  401e6a:	pop    ebx
  401e6b:	mov    fs,WORD PTR [ebx]
  401e6d:	das    
  401e6e:	std    
  401e6f:	sub    DWORD PTR [ebp+0x42],0x3c96a473
  401e76:	int3   
  401e77:	mov    esp,0x45e17672
  401e7c:	push   0x42
  401e7e:	cwde   
  401e7f:	mov    bl,0x55
  401e81:	(bad)  
  401e82:	cli    
  401e83:	and    bh,BYTE PTR [eax]
  401e85:	mov    ebp,esi
  401e87:	in     eax,dx
  401e88:	cs fwait
  401e8a:	or     esi,ebp
  401e8c:	fs mov esi,0x84aaf365
  401e92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e93:	xor    eax,0xfffffffc
  401e96:	jae    0x401e6a
  401e98:	(bad)  
  401e99:	int3   
  401e9a:	pushf  
  401e9b:	xchg   ebx,eax
  401e9c:	fxch   st(4)
  401e9e:	add    ecx,DWORD PTR [ecx+0x69f5a1bd]
  401ea4:	aas    
  401ea5:	adc    al,0xf0
  401ea7:	mov    edi,0xc66301d
  401eac:	aaa    
  401ead:	and    ebx,ebp
  401eaf:	mov    edi,0xf71a4658
  401eb4:	push   edx
  401eb5:	adc    DWORD PTR [esi],ebx
  401eb7:	test   BYTE PTR [edx-0x7b08ac67],0x5c
  401ebe:	or     eax,0xbf5bfa41
  401ec3:	cmc    
  401ec4:	add    al,0x1d
  401ec6:	xchg   esi,ecx
  401ec8:	stos   DWORD PTR es:[edi],eax
  401ec9:	fmul   QWORD PTR [ebx+0x1c8f4bf8]
  401ecf:	mov    ecx,0x72047a80
  401ed4:	test   eax,0x2e01eb24
  401ed9:	lea    esp,[eax+0x11]
  401edc:	je     0x401e63
  401ede:	jo     0x401eea
  401ee0:	inc    esp
  401ee1:	fcomip st,st(1)
  401ee3:	mov    dl,0xe6
  401ee5:	pop    es
  401ee6:	mov    al,0x44
  401ee8:	pop    es
  401ee9:	jg     0x401f40
  401eeb:	cld    
  401eec:	cmp    eax,0x458b23c8
  401ef1:	fmul   DWORD PTR [ebx+0xc03084d]
  401ef7:	mov    eax,0x89f8458d
  401efc:	dec    ebp
  401efd:	rcl    BYTE PTR [eax-0x1],1
  401f00:	jne    0x401ed2
  401f02:	jmp    0x401fd5
  401f07:	pop    esp
  401f08:	jecxz  0x401f20
  401f0a:	xchg   ebp,eax
  401f0b:	mov    ebp,0x1ee56b7d
  401f10:	jb     0x401ec2
  401f12:	daa    
  401f13:	inc    esp
  401f14:	mov    esp,0x74f42fb4
  401f19:	jl     0x401f97
  401f1b:	mov    ds:0x287c7c7c,al
  401f20:	int3   
  401f21:	inc    eax
  401f22:	jae    0x401f53
  401f24:	or     eax,0x81f5063c
  401f29:	pop    esp
  401f2a:	push   ecx
  401f2b:	xchg   ebx,ebx
  401f2d:	fnstsw WORD PTR [esi]
  401f2f:	mov    DWORD PTR [ebp+eax*4-0x2a],ebx
  401f33:	dec    edi
  401f34:	inc    esp
  401f35:	xor    BYTE PTR [esi],dh
  401f37:	aas    
  401f38:	stc    
  401f39:	pop    esp
  401f3a:	cmp    BYTE PTR [edx],ah
  401f3c:	push   edx
  401f3d:	loop   0x401fb9
  401f3f:	add    al,0x31
  401f41:	rol    DWORD PTR [eax],cl
  401f43:	sub    al,0x1a
  401f45:	fmul   st(0),st
  401f47:	in     eax,0xba
  401f49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f4a:	xchg   ebp,eax
  401f4b:	jne    0x401f59
  401f4d:	pop    edi
  401f4e:	imul   DWORD PTR [ebp-0x64]
  401f51:	scas   eax,DWORD PTR es:[edi]
  401f52:	sysexit 
  401f54:	mov    ds:0x83d6f1a0,eax
  401f59:	loope  0x401f14
  401f5b:	cmp    al,0xd7
  401f5d:	jbe    0x401f23
  401f5f:	sbb    al,dl
  401f61:	push   0xd3480e67
  401f66:	das    
  401f67:	inc    edi
  401f68:	push   edi
  401f69:	mov    ?,WORD PTR [ebx*2+0x68751964]
  401f70:	hlt    
  401f71:	sub    edi,DWORD PTR [ebx+0x5bf37738]
  401f77:	out    dx,eax
  401f78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f79:	push   eax
  401f7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f7b:	in     al,dx
  401f7c:	popa   
  401f7d:	adc    eax,0x26451fac
  401f82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f83:	mov    esp,DWORD PTR [edi-0x67ccb49f]
  401f89:	add    al,0x77
  401f8b:	jecxz  0x401fe5
  401f8d:	sbb    BYTE PTR [ecx-0x5eca339],ah
  401f93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f94:	xor    eax,0xa48400b7
  401f99:	jl     0x401ff4
  401f9b:	jmp    DWORD PTR [ecx-0x4c]
  401f9e:	lods   eax,DWORD PTR ds:[esi]
  401f9f:	pop    ebx
  401fa0:	lods   eax,DWORD PTR ds:[esi]
  401fa1:	jmp    0xb9d:0x3dc6362f
  401fa8:	and    eax,0x6055de46
  401fad:	fild   DWORD PTR [ebp+0x3520c5ec]
  401fb3:	stos   DWORD PTR es:[edi],eax
  401fb4:	scas   al,BYTE PTR es:[edi]
  401fb5:	add    DWORD PTR [ecx],edx
  401fb7:	dec    edi
  401fb8:	or     al,0x94
  401fba:	stc    
  401fbb:	or     DWORD PTR [ecx-0x6bb38263],esi
  401fc1:	inc    eax
  401fc2:	test   al,0x8d
  401fc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fc5:	mov    ch,0xc8
  401fc7:	iret   
  401fc8:	ins    DWORD PTR es:[edi],dx
  401fc9:	int    0x10
  401fcb:	sub    DWORD PTR [eax-0x20a10213],edi
  401fd1:	sti    
  401fd2:	fidiv  WORD PTR [ebx+0xc75ff4c]
  401fd8:	jmp    0x4020ab
  401fdd:	or     dl,BYTE PTR [eax+ebp*1]
  401fe0:	mov    dl,0x2a
  401fe2:	mov    dl,0x6a
  401fe4:	push   esp
  401fe5:	int3   
  401fe6:	xchg   ebp,eax
  401fe7:	xchg   esp,eax
  401fe8:	int    0x6c
  401fea:	and    eax,0x773a0b70
  401fef:	jl     0x40206d
  401ff1:	mov    ds:0xbf7c7c7c,al
  401ff6:	pushf  
  401ff7:	push   esi
  401ff8:	add    edx,esp
  401ffa:	xor    ecx,eax
  401ffc:	popa   
  401ffd:	repnz repz test eax,0x4992ed99
  402004:	jle    0x402083
  402006:	dec    ebp
  402007:	fmul   QWORD PTR [esi]
  402009:	fdivr  QWORD PTR [eax]
  40200b:	mov    al,0x7
  40200d:	dec    ecx
  40200e:	sub    DWORD PTR [eax+0x5c],edi
  402011:	push   eax
  402012:	sbb    BYTE PTR [edi],ah
  402014:	sar    DWORD PTR [ebx+eax*4+0x7ee11b5e],0x68
  40201c:	sbb    DWORD PTR [ecx],esp
  40201e:	test   ebp,ebp
  402020:	sub    ebp,DWORD PTR [esp+ebp*1-0x57]
  402024:	dec    edx
  402025:	cld    
  402026:	adc    bh,BYTE PTR [ebx-0x6e]
  402029:	mov    eax,ds:0xf2731afc
  40202e:	retf   
  40202f:	add    al,0x47
  402031:	mov    dl,0x7
  402033:	inc    ebp
  402035:	in     al,dx
  402036:	or     ch,BYTE PTR [eax]
  402038:	or     bh,al
  40203a:	retw   0x59c0
  40203e:	push   ecx
  40203f:	sti    
  402040:	sub    al,0x53
  402042:	push   0x4d
  402044:	sahf   
  402045:	adc    eax,edi
  402047:	pop    ds
  402048:	sbb    ecx,DWORD PTR [eax]
  40204a:	fsubr  st(7),st
  40204c:	and    ebp,ecx
  40204e:	(bad)  
  402050:	pop    esp
  402051:	in     al,dx
  402052:	mov    esp,0x3eff93c0
  402057:	scas   eax,DWORD PTR es:[edi]
  402058:	xor    ebp,ebx
  40205a:	mov    ds:0x51f26cec,eax
  40205f:	test   ah,dh
  402061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402062:	stos   DWORD PTR es:[edi],eax
  402063:	or     BYTE PTR [eax],0x88
  402066:	push   es
  402067:	das    
  402068:	fwait
  402069:	mov    ch,0xb0
  40206b:	lods   al,BYTE PTR ds:[esi]
  40206c:	out    dx,al
  40206d:	fnsave [edi]
  40206f:	and    cl,BYTE PTR [eax]
  402071:	or     eax,0xf33387c
  402076:	jnp    0x4020e2
  402078:	inc    edi
  402079:	jae    0x402038
  40207b:	ja     0x4020ce
  40207d:	mov    ah,0x18
  40207f:	mov    esp,0x21f8f99c
  402084:	in     al,dx
  402085:	inc    eax
  402086:	pop    eax
  402087:	xchg   esi,eax
  402088:	mov    edx,0x95ec6a62
  40208d:	mov    ebp,0x21ece059
  402092:	repnz aaa 
  402094:	mov    bh,0x16
  402096:	jbe    0x40208d
  402098:	mov    bh,BYTE PTR [edx]
  40209a:	and    ecx,DWORD PTR [ebx]
  40209c:	push   0xffffffbf
  40209e:	dec    eax
  40209f:	or     ah,BYTE PTR [edx+0x51]
  4020a2:	test   al,0x1d
  4020a4:	sahf   
  4020a5:	nop
  4020a6:	rol    DWORD PTR [eax-0x7],cl
  4020a9:	mov    al,0xd3
  4020ab:	call   0x409298
  4020b0:	mov    eax,DWORD PTR [ebp-0x4]
  4020b3:	mov    ecx,DWORD PTR [ebp-0x8]
  4020b6:	xor    eax,0x7510857
  4020bb:	add    eax,ebx
  4020bd:	cmp    ecx,eax
  4020bf:	jne    0x4021b5
  4020c5:	jmp    0x402198
  4020ca:	dec    esp
  4020cb:	xchg   esp,eax
  4020cc:	pop    edi
  4020cd:	add    BYTE PTR [edi-0x25],ah
  4020d0:	arpl   WORD PTR [eax-0x10],bp
  4020d3:	adc    ebx,DWORD PTR [eax+0x4702d348]
  4020d9:	dec    eax
  4020da:	pusha  
  4020db:	ja     0x402159
  4020dd:	jl     0x402081
  4020df:	jl     0x40215d
  4020e1:	jl     0x402116
  4020e3:	js     0x4020bf
  4020e5:	ja     0x40206f
  4020e7:	dec    eax
  4020e8:	int    0x9
  4020ea:	(bad)  
  4020ec:	test   DWORD PTR [eax-0x13],esi
  4020ef:	call   0xe4f4:0xc16435f1
  4020f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020f7:	jbe    0x4020a1
  4020f9:	sbb    BYTE PTR [ebx],dh
  4020fb:	adc    ecx,esp
  4020fd:	dec    ebp
  4020fe:	mov    BYTE PTR [esi+0x16],ah
  402101:	push   esi
  402102:	repnz adc eax,0xeb7d791c
  402108:	jge    0x40212a
  40210a:	inc    ebp
  40210b:	sbb    al,0x51
  40210d:	adc    edi,DWORD PTR [esp+ebx*4+0x14fd2e13]
  402114:	mov    eax,0x6cece2e9
  402119:	cmp    eax,0x8de1ce2f
  40211e:	cli    
  40211f:	jmp    0x6c2b:0x180ebc20
  402126:	in     al,0x64
  402128:	lods   eax,DWORD PTR ds:[esi]
  402129:	fcomp  QWORD PTR [edx+0x10]
  40212c:	xchg   ecx,eax
  40212d:	shl    DWORD PTR [ebx+0x7d650766],1
  402133:	add    BYTE PTR [ecx],dl
  402135:	xor    eax,0x38c57c92
  40213b:	fild   QWORD PTR [ebx-0x16]
  40213e:	shl    DWORD PTR ds:0x56888614,0x6
  402145:	and    eax,0x23a0ecc9
  40214a:	leave  
  40214b:	mov    dh,0x22
  40214d:	dec    eax
  40214e:	or     cl,BYTE PTR [esi+0x6]
  402151:	mov    eax,ds:0x4bcc7eb6
  402156:	cdq    
  402157:	imul   edx,eax,0x21
  40215a:	aaa    
  40215b:	sar    DWORD PTR [ebp-0x5796d573],0x2
  402162:	aad    0x7a
  402164:	addr16 aaa 
  402166:	xchg   esi,eax
  402167:	fs mov bl,0xcd
  40216a:	cld    
  40216b:	cld    
  40216c:	sub    ch,BYTE PTR [ecx]
  40216e:	or     BYTE PTR [ebp+0x50],bl
  402171:	aad    0xeb
  402173:	xchg   edx,eax
  402174:	fsubr  DWORD PTR [ebx]
  402176:	fwait
  402177:	scas   al,BYTE PTR es:[edi]
  402178:	shl    BYTE PTR ds:0xba61dbf2,cl
  40217e:	mov    ebp,0xbf061c28
  402183:	les    ecx,FWORD PTR [edi]
  402185:	sub    BYTE PTR ds:0xc465f43c,ch
  40218b:	and    eax,0xaacfe07b
  402190:	inc    edi
  402191:	popf   
  402192:	dec    ebp
  402193:	prefetch (bad)
  402194:	or     eax,0x8bcebcf6
  402199:	inc    ebp
  40219a:	loopne 0x4021e3
  40219c:	cmp    edi,eax
  40219e:	jb     0x401676
  4021a4:	jmp    0x402298
  4021a9:	mov    eax,DWORD PTR [ebp-0x4]
  4021ac:	xor    eax,esi
  4021ae:	add    eax,ebx
  4021b0:	jmp    0x402c24
  4021b5:	mov    eax,DWORD PTR [ebp-0x2c]
  4021b8:	movzx  eax,WORD PTR [eax+edi*2]
  4021bc:	mov    ecx,DWORD PTR [ebp-0x14]
  4021bf:	mov    eax,DWORD PTR [ecx+eax*4]
  4021c2:	jmp    0x402295
  4021c7:	lods   eax,DWORD PTR ds:[esi]
  4021c8:	adc    ah,BYTE PTR [edi+0x7d7da75f]
  4021ce:	jmp    0xb78b:0xa7f835f7
  4021d5:	push   ecx
  4021d6:	sbb    DWORD PTR [esi-0x5d83838a],edx
  4021dc:	jl     0x40225a
  4021de:	jl     0x40217c
  4021e0:	ror    DWORD PTR [ebp-0x1bcedcf0],cl
  4021e6:	(bad)  
  4021e7:	int3   
  4021e8:	sub    esi,edx
  4021ea:	add    edi,DWORD PTR [edi-0x4066447c]
  4021f0:	je     0x402196
  4021f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021f3:	mov    dh,0x55
  4021f5:	and    BYTE PTR [edx],al
  4021f7:	xor    ebx,DWORD PTR [edi+0x5008697f]
  4021fd:	sub    ecx,DWORD PTR [ecx+0x3]
  402200:	inc    edx
  402201:	ins    DWORD PTR es:[edi],dx
  402202:	mov    eax,ds:0x7034d4d4
  402207:	stc    
  402208:	(bad)  
  402209:	dec    eax
  40220a:	mov    dh,0x81
  40220c:	call   0xb4e65948
  402211:	cmp    eax,0x2f4d561e
  402216:	pop    edi
  402217:	push   cs
  402218:	das    
  402219:	sbb    al,0x3c
  40221b:	push   esi
  40221c:	add    DWORD PTR [esi-0x34],edx
  40221f:	retf   
  402220:	pop    ecx
  402221:	(bad)  
  402222:	iret   
  402223:	enter  0x1534,0xc6
  402227:	popf   
  402228:	lea    edi,ds:0xe7f6b9ee
  40222e:	mov    ebx,0x4367da7
  402233:	mov    esi,0xb758fca2
  402238:	mov    esp,0xb859d734
  40223d:	aam    0x3b
  40223f:	add    esi,DWORD PTR [ebx]
  402241:	and    ecx,DWORD PTR [ebx]
  402243:	mov    dh,0x1d
  402245:	adc    eax,0xb15a6755
  40224a:	fadd   st(1),st
  40224c:	xor    edx,edx
  40224e:	fwait
  40224f:	(bad)  
  402250:	pop    eax
  402251:	loop   0x40220a
  402253:	xor    dl,bh
  402255:	add    dl,ch
  402257:	fistp  WORD PTR ds:0xf0383969
  40225d:	sub    ecx,edx
  40225f:	jge    0x4022b5
  402261:	pusha  
  402262:	out    0x25,al
  402264:	jb     0x40223c
  402266:	xlat   BYTE PTR ds:[ebx]
  402267:	xlat   BYTE PTR ds:[ebx]
  402268:	les    esi,FWORD PTR [eax-0x5f]
  40226b:	and    ah,dl
  40226d:	daa    
  40226e:	pop    ds
  40226f:	ja     0x402294
  402271:	mov    dh,0xfe
  402273:	xor    al,ah
  402275:	xchg   edx,eax
  402276:	pop    edx
  402277:	out    0x51,eax
  402279:	fidiv  WORD PTR [ecx-0x42f1075c]
  40227f:	aas    
  402280:	dec    DWORD PTR [eax]
  402282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402283:	nop
  402284:	aaa    
  402285:	aaa    
  402286:	jecxz  0x40221b
  402288:	add    bh,BYTE PTR [esi+edx*1+0x5d3335ba]
  40228f:	scas   eax,DWORD PTR es:[edi]
  402290:	dec    edx
  402291:	(bad)  
  402292:	aaa    
  402293:	shl    DWORD PTR [esi-0x74f3ba77],1
  402299:	inc    ebp
  40229a:	cld    
  40229b:	mov    ecx,DWORD PTR [ebp-0x8]
  40229e:	jmp    0x402371
  4022a3:	xchg   ebx,eax
  4022a4:	sub    al,BYTE PTR [esp+eax*1]
  4022a7:	cdq    
  4022a8:	cmp    dl,BYTE PTR [ebx+0x426f4fbd]
  4022ae:	mov    dh,0x10
  4022b0:	popf   
  4022b1:	test   BYTE PTR [ebx],ah
  4022b3:	fmul   QWORD PTR [ecx]
  4022b5:	jl     0x402333
  4022b7:	mov    ds:0xd67c7c7c,al
  4022bc:	mov    dl,0x20
  4022be:	sbb    DWORD PTR [esi-0x2b01fee4],esi
  4022c4:	jmp    0x169e4992
  4022c9:	lahf   
  4022ca:	mov    eax,0x198fc41c
  4022cf:	imul   edi,edi,0x6e
  4022d2:	dec    ebx
  4022d3:	and    eax,0xd99f4d6e
  4022d8:	jnp    0x402330
  4022da:	nop
  4022db:	inc    ebx
  4022dc:	add    al,0x65
  4022de:	pop    edx
  4022df:	jne    0x40226d
  4022e1:	xchg   BYTE PTR [ecx-0x248a30a2],al
  4022e7:	clc    
  4022e8:	pop    esp
  4022e9:	retf   
  4022ea:	aaa    
  4022eb:	ret    
  4022ec:	add    al,bh
  4022ee:	retf   0xfd77
  4022f1:	push   esp
  4022f2:	adc    bh,BYTE PTR [ebx]
  4022f4:	stos   DWORD PTR es:[edi],eax
  4022f5:	and    eax,DWORD PTR [edx+0x77e95a7b]
  4022fb:	push   ebp
  4022fc:	and    DWORD PTR [esi],eax
  4022fe:	loopne 0x402354
  402300:	cld    
  402301:	mov    eax,ss
  402303:	mov    ds:0x588bd6aa,eax
  402308:	fsub   DWORD PTR [eax-0x52800cec]
  40230e:	fbstp  TBYTE PTR [edi+ecx*2+0x64]
  402312:	sar    BYTE PTR es:[ebx],0x36
  402316:	dec    ecx
  402317:	cmp    al,0x7b
  402319:	sub    ch,0x95
  40231c:	mov    ebp,0x9f2ed810
  402321:	pop    eax
  402322:	fs iret 
  402324:	sahf   
  402325:	add    BYTE PTR [edx-0x10],dl
  402328:	shr    DWORD PTR [ecx],1
  40232a:	sbb    eax,0x1739e504
  40232f:	push   eax
  402330:	(bad)  
  402331:	or     al,0x42
  402333:	aas    
  402334:	test   eax,0xb5f837f9
  402339:	cmp    DWORD PTR [edi-0x190bedaa],esp
  40233f:	iret   
  402340:	or     ch,BYTE PTR [edx+0x3b]
  402343:	cli    
  402344:	fidiv  WORD PTR [edi+0x2a1e2d19]
  40234a:	loopne 0x4022cc
  40234c:	mov    eax,0x48692455
  402351:	std    
  402352:	jp     0x402367
  402354:	pop    esi
  402355:	cs jnp 0x402366
  402358:	imul   edx,DWORD PTR [edx+0x4e],0xffffffb2
  40235c:	ja     0x40237b
  40235e:	mov    cl,0x8
  402360:	jb     0x40231c
  402362:	add    DWORD PTR [edx-0x5f],edi
  402365:	push   ds
  402366:	inc    ebp
  402367:	dec    ecx
  402368:	jbe    0x402375
  40236a:	push   esp
  40236b:	pop    eax
  40236c:	pop    ebp
  40236d:	not    bh
  40236f:	rcl    BYTE PTR [ebx+0x35],1
  402372:	push   edi
  402373:	or     BYTE PTR [ecx+0x7],dl
  402376:	add    eax,ebx
  402378:	cmp    ecx,eax
  40237a:	jne    0x40238d
  402380:	mov    eax,DWORD PTR [ebp-0x4]
  402383:	xor    eax,0x7510857
  402388:	jmp    0x4021ae
  40238d:	mov    eax,DWORD PTR [ebp+0xc]
  402390:	add    eax,DWORD PTR [ebp+0x8]
  402393:	mov    DWORD PTR [ebp-0x10],eax
  402396:	mov    eax,DWORD PTR [ebp-0x1c]
  402399:	test   eax,eax
  40239b:	je     0x4026e4
  4023a1:	mov    DWORD PTR [ebp-0x24],esi
  4023a4:	push   0xb
  4023a6:	pop    ecx
  4023a7:	push   0x5
  4023a9:	dec    ecx
  4023aa:	pop    ebx
  4023ab:	xchg   ebx,ecx
  4023ad:	sub    ebx,ecx
  4023af:	xchg   ebx,ecx
  4023b1:	dec    ecx
  4023b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4023b5:	imul   eax,ecx
  4023b8:	sub    esp,eax
  4023ba:	mov    DWORD PTR [ebp-0x24],esp
  4023bd:	mov    eax,DWORD PTR [ebp-0x4]
  4023c0:	mov    ecx,0x7510857
  4023c5:	xor    eax,ecx
  4023c7:	mov    edx,0x32729e
  4023cc:	add    eax,edx
  4023ce:	mov    DWORD PTR [ebp+0x8],eax
  4023d1:	jmp    0x4024a4
  4023d6:	cmp    dl,BYTE PTR [esi+0x7b653be5]
  4023dc:	cli    
  4023dd:	test   eax,0x3babd173
  4023e2:	cli    
  4023e3:	and    eax,0x8023458
  4023e8:	jl     0x402466
  4023ea:	mov    ds:0x747c7c7c,al
  4023ef:	pop    ss
  4023f0:	aaa    
  4023f1:	repnz mov ds:0x75651862,eax
  4023f7:	fs cwde 
  4023f9:	test   al,0x68
  4023fb:	arpl   WORD PTR [ebp+ecx*4+0x26],si
  4023ff:	cmp    eax,0xbeecee30
  402404:	xor    eax,ecx
  402406:	data16 jnp 0x40239d
  402409:	mov    ah,0xa3
  40240b:	dec    ecx
  40240c:	push   ebx
  40240d:	lea    eax,[edx+0x2a9e2aba]
  402413:	sbb    bl,cl
  402415:	into   
  402416:	adc    DWORD PTR [ebx-0x3d603347],edx
  40241c:	adc    bh,ch
  40241e:	frstor [ebx+0x10]
  402421:	sahf   
  402422:	fisttp QWORD PTR [ebx]
  402424:	push   ecx
  402425:	dec    edi
  402426:	push   es
  402427:	adc    DWORD PTR [edx-0x68fd2d52],ecx
  40242d:	xor    ecx,DWORD PTR [ecx]
  40242f:	inc    esp
  402430:	mov    al,ds:0xffc11d45
  402435:	xor    eax,0xc4eb9dfa
  40243a:	dec    esp
  40243b:	or     eax,0xc54e0923
  402440:	and    dl,BYTE PTR [esi+0x6203c035]
  402446:	ret    0xc836
  402449:	push   esp
  40244a:	out    0x1,eax
  40244c:	push   es
  40244d:	aad    0xa5
  40244f:	dec    esi
  402450:	pushf  
  402451:	xchg   ebp,eax
  402452:	xor    eax,0x7082bf15
  402457:	js     0x402499
  402459:	sbb    eax,0xa40825a
  40245e:	dec    ebx
  40245f:	fdiv   st(2),st
  402461:	js     0x40248c
  402463:	inc    eax
  402464:	mov    ds:0xa20b8d29,eax
  402469:	hlt    
  40246a:	fcom   QWORD PTR [esi-0x21]
  40246d:	add    eax,0x6330b28c
  402472:	test   BYTE PTR [eax-0x7e],ch
  402475:	cdq    
  402476:	xchg   BYTE PTR [edx],dh
  402478:	pop    es
  402479:	stc    
  40247a:	add    ah,BYTE PTR [ebx+0x3bfffa8c]
  402480:	xchg   esp,eax
  402481:	cmp    eax,0x7bc101a8
  402486:	dec    esp
  402487:	cmp    BYTE PTR [edi-0x60],0x44
  40248b:	mov    bh,0x9f
  40248d:	mov    eax,0x81e01247
  402492:	or     BYTE PTR [ecx-0x50ff5dd5],0xb3
  402499:	add    al,bh
  40249b:	or     eax,0xe290f069
  4024a0:	sub    edx,eax
  4024a2:	push   esp
  4024a3:	dec    DWORD PTR [ebx-0x3ecc17bb]
  4024a9:	add    eax,edx
  4024ab:	mov    edx,DWORD PTR [ebp+0x14]
  4024ae:	jmp    0x402581
  4024b3:	and    al,0x81
  4024b5:	rep ins BYTE PTR es:[edi],dx
  4024b7:	lods   eax,DWORD PTR ds:[esi]
  4024b8:	(bad)  
  4024b9:	sti    
  4024ba:	pop    ecx
  4024bb:	xor    DWORD PTR [ebx],0x4fd0bfae
  4024c1:	add    eax,0x7c0848cb
  4024c6:	jl     0x40246a
  4024c8:	jl     0x402546
  4024ca:	jl     0x40249c
  4024cc:	nop
  4024cd:	(bad)  
  4024ce:	imul   eax,DWORD PTR [ebp+ecx*8+0x5fac56fe],0x6c
  4024d6:	(bad)  
  4024d7:	and    eax,0xb3912c2
  4024dc:	xchg   ebx,eax
  4024dd:	lods   al,BYTE PTR ds:[esi]
  4024de:	mov    WORD PTR [esi],cs
  4024e0:	sub    eax,0x8c8bcbb5
  4024e5:	jne    0x402506
  4024e7:	test   eax,0x3cbf50e3
  4024ec:	sbb    edi,DWORD PTR [esi]
  4024ee:	(bad)  
  4024f0:	out    0xb7,eax
  4024f2:	adc    eax,0x61bad324
  4024f7:	push   edi
  4024f8:	mov    cl,bh
  4024fa:	push   edx
  4024fb:	sub    eax,0xc580580a
  402500:	pop    esp
  402501:	in     eax,0xd7
  402503:	push   ss
  402504:	push   ebx
  402505:	outs   dx,DWORD PTR ds:[esi]
  402506:	jmp    0x7d0b:0x5e0fea46
  40250d:	out    dx,al
  40250e:	daa    
  40250f:	cwde   
  402510:	dec    esi
  402511:	push   edi
  402512:	jnp    0x402548
  402514:	popf   
  402515:	or     DWORD PTR [eax+0x4e],0xc155f6a
  40251c:	and    eax,0xb33dc5b
  402521:	scas   al,BYTE PTR es:[edi]
  402522:	add    ecx,DWORD PTR [edi-0x53]
  402525:	fidivr WORD PTR [esi-0x30369192]
  40252b:	xlat   BYTE PTR ds:[ebx]
  40252c:	mov    ds:0x5b1fc106,eax
  402531:	ret    
  402532:	or     eax,0x9794a2c7
  402537:	lods   al,BYTE PTR ds:[esi]
  402538:	xor    DWORD PTR [ebx+edx*1],ecx
  40253b:	and    eax,0x72e660bd
  402540:	mov    BYTE PTR [edx+0x73],ah
  402543:	sub    bl,al
  402545:	loop   0x402556
  402547:	mov    WORD PTR ds:0xfd5ddb49,cs
  40254d:	pusha  
  40254e:	jno    0x4024e6
  402550:	test   al,0xf6
  402552:	(bad)  
  402553:	test   eax,0x968bc28
  402558:	sahf   
  402559:	test   dh,dl
  40255b:	std    
  40255c:	aam    0x5d
  40255e:	dec    eax
  40255f:	in     al,dx
  402560:	sbb    esi,ebx
  402562:	out    0x47,eax
  402564:	adc    BYTE PTR [edx],al
  402566:	fucomi st,st(0)
  402568:	imul   eax,ecx,0xffffff99
  40256b:	inc    edi
  40256c:	(bad)  
  40256d:	and    cl,BYTE PTR [esi+0x77]
  402570:	sbb    al,0xd1
  402572:	mul    edi
  402574:	mov    esi,0xd9539616
  402579:	cli    
  40257a:	adc    al,0xcc
  40257c:	pop    esp
  40257d:	xchg   ebx,eax
  40257e:	fwait
  40257f:	dec    ebp
  402580:	imul   ecx,DWORD PTR [edi],0x558b02af
  402586:	cld    
  402587:	xor    edx,ecx
  402589:	mov    ecx,DWORD PTR [ebp+0x8]
  40258c:	lea    ecx,[edx+ecx*1+0x32729e]
  402593:	cmp    ecx,eax
  402595:	je     0x4026df
  40259b:	mov    edi,DWORD PTR [ebp-0x18]
  40259e:	mov    eax,DWORD PTR [ebp+0x8]
  4025a1:	mov    edx,DWORD PTR [ebp+0x14]
  4025a4:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4025a8:	mov    ecx,0x7510857
  4025ad:	xor    edx,edx
  4025af:	xor    edi,ecx
  4025b1:	mov    esi,0x32729e
  4025b6:	add    edi,esi
  4025b8:	div    edi
  4025ba:	mov    edx,DWORD PTR [ebp-0x4]
  4025bd:	xor    edx,ecx
  4025bf:	lea    eax,[edx+eax*1+0x32729e]
  4025c6:	mov    edx,DWORD PTR [ebp+0x8]
  4025c9:	mov    edi,DWORD PTR [ebp-0x24]
  4025cc:	mov    DWORD PTR [edi+edx*4],eax
  4025cf:	mov    eax,DWORD PTR [ebp-0x18]
  4025d2:	mov    edx,DWORD PTR [ebp+0x8]
  4025d5:	xor    eax,ecx
  4025d7:	lea    eax,[eax+edx*1+0x32729e]
  4025de:	mov    DWORD PTR [ebp+0x8],eax
  4025e1:	mov    eax,DWORD PTR [ebp-0x18]
  4025e4:	mov    edx,DWORD PTR [ebp+0x14]
  4025e7:	xor    eax,ecx
  4025e9:	add    eax,esi
  4025eb:	imul   eax,DWORD PTR [edx]
  4025ee:	mov    edx,DWORD PTR [ebp-0x4]
  4025f1:	xor    edx,ecx
  4025f3:	mov    ecx,DWORD PTR [ebp+0x8]
  4025f6:	lea    ecx,[edx+ecx*1+0x32729e]
  4025fd:	cmp    ecx,eax
  4025ff:	jne    0x40259b
  402605:	jmp    0x4026d8
  40260a:	xlat   BYTE PTR ds:[ebx]
  40260b:	pop    esp
  40260c:	cmp    DWORD PTR [eax-0x47],eax
  40260f:	pop    ebp
  402610:	ins    DWORD PTR es:[edi],dx
  402611:	jnp    0x4025e8
  402613:	sbb    ch,bl
  402615:	mov    edi,ebp
  402617:	pop    ecx
  402618:	scas   al,BYTE PTR es:[edi]
  402619:	and    edi,esi
  40261b:	or     edi,DWORD PTR [esp+edi*2-0x5e]
  40261f:	jl     0x40269d
  402621:	jl     0x402650
  402623:	sbb    cl,BYTE PTR [ebx-0x57229dc1]
  402629:	imul   esp,edx,0x6bbe8ed5
  40262f:	call   0x159b:0x7e4e739e
  402636:	in     eax,dx
  402637:	sbb    DWORD PTR [eax],edi
  402639:	rcl    DWORD PTR [edi+0x5b656051],0xe
  402640:	(bad)  
  402641:	xor    BYTE PTR [ecx],al
  402643:	jns    0x4026b3
  402645:	outs   dx,DWORD PTR ds:[esi]
  402646:	sahf   
  402647:	fsub   st(7),st
  402649:	jns    0x4025d2
  40264b:	test   DWORD PTR [edi],0xd3f7fe49
  402651:	mov    edx,0xffce5bbe
  402656:	imul   edi,DWORD PTR [edi-0x7bd9a060],0xffffffb9
  40265d:	or     edi,esp
  40265f:	lea    eax,[edx]
  402661:	jns    0x4026dd
  402663:	jbe    0x40263b
  402665:	dec    edi
  402666:	das    
  402667:	imul   edx,DWORD PTR [ecx],0xffffffbe
  40266a:	mov    dh,0x19
  40266c:	mov    ds:0xefe1266a,al
  402671:	iret   
  402672:	adc    edx,eax
  402674:	(bad)  
  402675:	out    dx,al
  402676:	(bad)  [ebp-0x3703d742]
  40267c:	mov    WORD PTR [esi+0x3a],?
  40267f:	out    0xd2,eax
  402681:	mov    ebx,0x6a790bec
  402686:	lock lock cmp dl,BYTE PTR [edi-0x6]
  40268b:	mov    BYTE PTR [ebp-0x3750f6e],al
  402691:	push   eax
  402692:	lahf   
  402693:	daa    
  402694:	sub    ebp,edx
  402696:	bound  eax,QWORD PTR [edx-0x4f251d69]
  40269c:	mov    dh,0xf2
  40269e:	sbb    esp,DWORD PTR [ebp+0x6a6690d]
  4026a4:	shr    BYTE PTR [ebx],1
  4026a6:	fcmovb st,st(6)
  4026a8:	add    edx,ebp
  4026aa:	fcmovne st,st(1)
  4026ac:	test   BYTE PTR [esi-0x35bc2077],bh
  4026b2:	ins    DWORD PTR es:[edi],dx
  4026b3:	fwait
  4026b4:	mov    ds:0xc3c45060,eax
  4026b9:	inc    ecx
  4026ba:	je     0x4026b0
  4026bc:	out    dx,eax
  4026bd:	sbb    eax,0x9e615b5
  4026c2:	js     0x402732
  4026c4:	mov    ds:0x39105eb1,al
  4026c9:	push   edi
  4026ca:	dec    ebx
  4026cb:	test   BYTE PTR [edx+0x1ad5eb4],dl
  4026d1:	(bad)  
  4026d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026d3:	and    BYTE PTR [ecx-0x75],dh
  4026d6:	les    ebx,FWORD PTR [edi-0x75]
  4026d9:	fsubp  st(1),st
  4026db:	add    eax,0xbb000000
  4026e0:	sahf   
  4026e1:	jb     0x402715
  4026e3:	add    BYTE PTR [ebx+0x5735fc45],cl
  4026e9:	or     BYTE PTR [ecx+0x7],dl
  4026ec:	jmp    0x4027bf
  4026f1:	(bad)  
  4026f2:	fsubr  st(2),st
  4026f4:	mov    esp,0x647a42fa
  4026f9:	clc    
  4026fa:	(bad)  
  4026fb:	mov    WORD PTR [ecx+0x47],?
  4026fe:	push   bp
  402700:	cmp    ah,BYTE PTR [edx+ecx*1]
  402703:	jl     0x402781
  402705:	mov    ds:0xd57c7c7c,al
  40270a:	sbb    DWORD PTR [ecx+0x5e80cd23],ebp
  402710:	nop
  402711:	pop    ebx
  402712:	sbb    al,0xf
  402714:	sbb    DWORD PTR [ecx-0x1f7d64df],ebp
  40271a:	mov    al,ds:0x90c43e10
  40271f:	mov    ds:0x1657d99f,eax
  402724:	jp     0x4026eb
  402726:	adc    eax,0xa73d1d4e
  40272b:	hlt    
  40272c:	mov    al,ds:0xced42bfc
  402731:	or     al,BYTE PTR [edi-0x2d]
  402734:	loop   0x4026b7
  402736:	inc    ebx
  402737:	add    bl,BYTE PTR [esi+0x687b5bc6]
  40273d:	or     eax,0x35efa603
  402742:	jbe    0x4027b9
  402744:	mov    bl,BYTE PTR [esi+0x3a]
  402747:	sub    ebp,edx
  402749:	outs   dx,DWORD PTR ds:[esi]
  40274a:	mov    eax,0xff77d8e4
  40274f:	call   0xdaee6572
  402754:	jno    0x40278a
  402756:	adc    dh,BYTE PTR [esi]
  402758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402759:	xlat   BYTE PTR ds:[ebx]
  40275a:	push   edi
  40275b:	push   0xffffffa1
  40275d:	and    DWORD PTR [eax+0x61],esi
  402760:	adc    al,0x51
  402762:	sbb    edx,ebx
  402764:	sub    eax,0x32326900
  402769:	fldcw  WORD PTR [edi+0x4d21a8ee]
  40276f:	or     eax,0x92490515
  402774:	push   esi
  402775:	jne    0x40270c
  402777:	(bad)  
  402778:	add    bh,BYTE PTR [ebx]
  40277a:	mov    eax,ds:0x3d7235f8
  40277f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402780:	push   es
  402781:	xchg   ebx,eax
  402782:	dec    ecx
  402783:	adc    bl,al
  402785:	popf   
  402786:	clc    
  402787:	mov    edi,0x40d122b3
  40278c:	dec    edi
  40278d:	imul   eax,DWORD PTR [ebx],0x4bc6ec3c
  402793:	and    eax,0x69ab1512
  402798:	mov    esi,edx
  40279a:	lods   eax,DWORD PTR ds:[esi]
  40279b:	dec    esp
  40279c:	ds inc ebp
  40279e:	out    dx,eax
  40279f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027a0:	push   es
  4027a1:	hlt    
  4027a2:	arpl   WORD PTR ss:[edx-0x54e15de4],si
  4027a9:	mov    BYTE PTR [ebx-0x10],dh
  4027ac:	xchg   edi,eax
  4027ad:	ins    DWORD PTR es:[edi],dx
  4027ae:	out    0x45,al
  4027b0:	mov    ch,BYTE PTR [ecx-0x12897f93]
  4027b6:	add    eax,DWORD PTR [ebp-0x36f48cb0]
  4027bc:	jecxz  0x4027bb
  4027be:	cmp    al,0x3
  4027c0:	ret    
  4027c1:	mov    DWORD PTR [ebp-0xc],eax
  4027c4:	jmp    0x402897
  4027c9:	pop    ebp
  4027ca:	fimul  WORD PTR [ebp+eiz*8+0x567d65bb]
  4027d1:	cdq    
  4027d2:	push   es
  4027d3:	mov    si,0xe954
  4027d7:	pop    ebp
  4027d8:	ret    
  4027d9:	push   0xa
  4027db:	jl     0x402859
  4027dd:	mov    ds:0xb97c7c7c,al
  4027e2:	out    dx,al
  4027e3:	dec    esp
  4027e4:	jp     0x402818
  4027e6:	int    0xf6
  4027e8:	xor    eax,0xb678d33f
  4027ed:	mov    esi,0x7bba2511
  4027f2:	jae    0x4027d6
  4027f4:	ja     0x4027b4
  4027f6:	push   eax
  4027f7:	stos   DWORD PTR es:[edi],eax
  4027f8:	inc    esi
  4027f9:	mov    bh,0x36
  4027fb:	push   0xffffff8d
  4027fd:	push   edx
  4027fe:	cmp    al,0x97
  402800:	(bad)  
  402801:	rol    BYTE PTR [esi],0x85
  402804:	sbb    al,0x49
  402806:	push   eax
  402807:	add    ebp,DWORD PTR [edi-0x7e]
  40280a:	cmp    DWORD PTR [esi-0x13],esi
  40280d:	jmp    0x1482:0x35350cb6
  402814:	sbb    eax,edx
  402816:	mov    eax,ds:0xe317ae66
  40281b:	mov    DWORD PTR [esi+0x37],eax
  40281e:	dec    eax
  40281f:	loopne 0x40288c
  402821:	xchg   esi,eax
  402822:	loope  0x4027a5
  402824:	xor    ecx,DWORD PTR [edi+0x1c]
  402827:	test   al,0x5f
  402829:	jbe    0x4027c4
  40282b:	test   DWORD PTR ds:0xc3da0903,ecx
  402831:	popa   
  402832:	out    dx,al
  402833:	push   ecx
  402834:	rol    ecx,0x2b
  402837:	daa    
  402838:	(bad)  
  402839:	mov    dl,0xef
  40283b:	cwde   
  40283c:	push   0x5f
  40283e:	je     0x402882
  402840:	pushw  ds
  402842:	nop
  402843:	pop    eax
  402844:	jle    0x402851
  402846:	or     esi,DWORD PTR [edi+ecx*4+0x69aa13f0]
  40284d:	loopne 0x402894
  40284f:	pop    ss
  402850:	xor    eax,DWORD PTR [ebx]
  402852:	arpl   di,bx
  402854:	push   eax
  402855:	call   0x353f:0xef68bb4c
  40285c:	adc    al,0xdd
  40285e:	fistp  DWORD PTR [eax-0x5f]
  402861:	fwait
  402862:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402863:	inc    esp
  402864:	loope  0x4027e7
  402866:	add    DWORD PTR [eax+0x5a52cab],ecx
  40286c:	out    dx,al
  40286d:	dec    esp
  40286e:	push   ss
  40286f:	(bad)  
  402870:	dec    ebx
  402871:	out    dx,eax
  402872:	inc    ebp
  402873:	push   eax
  402874:	in     eax,dx
  402875:	or     ebx,DWORD PTR [ecx-0x16]
  402878:	xor    al,0x39
  40287a:	inc    ecx
  40287b:	test   bl,cl
  40287d:	jp     0x402836
  40287f:	or     bl,al
  402881:	jns    0x402828
  402883:	int    0xc4
  402885:	pop    edi
  402886:	xchg   ecx,eax
  402887:	push   ebx
  402888:	jmp    0xf668c5ed
  40288d:	mov    eax,cs:0xb288e7aa
  402893:	faddp  st(2),st
  402895:	xchg   ebp,eax
  402896:	fidiv  WORD PTR [ebx]
  402898:	fisttp DWORD PTR [ebp+0x1803f045]
  40289e:	call   ebx
  4028a0:	xor    ebx,ebx
  4028a2:	inc    ebx
  4028a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4028a6:	jmp    0x402979
  4028ab:	jmp    0x4028ef
  4028ad:	inc    esp
  4028ae:	ins    BYTE PTR es:[edi],dx
  4028af:	jns    0x40292b
  4028b1:	jmp    0x402910
  4028b3:	loope  0x40292e
  4028b5:	pushf  
  4028b6:	or     BYTE PTR [edx+0x31],0xfb
  4028ba:	pop    esi
  4028bb:	nop
  4028bc:	or     eax,0x7ca27c7c
  4028c1:	jl     0x40293f
  4028c3:	iret   
  4028c4:	sbb    eax,0x90602077
  4028c9:	sbb    eax,edx
  4028cb:	aas    
  4028cc:	jge    0x402883
  4028ce:	mov    eax,ds:0xfe32a996
  4028d3:	aaa    
  4028d4:	imul   ecx,ecx,0xffffffb2
  4028d7:	pop    ss
  4028d8:	hlt    
  4028d9:	dec    edx
  4028da:	sahf   
  4028db:	inc    esp
  4028dc:	scas   eax,DWORD PTR es:[edi]
  4028dd:	jmp    0xbce9f27d
  4028e2:	mov    edx,0xbe1eeeac
  4028e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028e8:	xchg   ebp,eax
  4028e9:	lock adc DWORD PTR [ebp+0x5be0eedb],esi
  4028f0:	add    eax,0xacfd9964
  4028f5:	inc    esp
  4028f6:	jg     0x402967
  4028f8:	pop    ecx
  4028f9:	ret    0x2cec
  4028fc:	push   cs
  4028fd:	je     0x40294c
  4028ff:	mov    dh,BYTE PTR [edi+0x5fbb7329]
  402905:	dec    edx
  402907:	cmp    BYTE PTR [ecx],al
  402909:	pop    ss
  40290a:	aas    
  40290b:	out    dx,al
  40290c:	repz xchg ebx,eax
  40290e:	in     al,dx
  40290f:	adc    al,dl
  402911:	sub    ecx,DWORD PTR [edi-0x3]
  402914:	xchg   BYTE PTR [ecx+eiz*8+0x2c1c0a10],bh
  40291b:	sub    edx,esp
  40291d:	daa    
  40291e:	push   eax
  40291f:	pushf  
  402920:	push   0x2c
  402922:	xor    BYTE PTR [esi+ebp*4+0x5f757878],bh
  402929:	and    DWORD PTR [esi-0x47],esi
  40292c:	ja     0x402981
  40292e:	inc    esi
  40292f:	out    0xc0,eax
  402931:	sbb    eax,DWORD PTR [ecx]
  402933:	jp     0x402980
  402935:	fisttp QWORD PTR [edi-0x77]
  402938:	pusha  
  402939:	xchg   esp,eax
  40293a:	dec    ebx
  40293b:	in     eax,dx
  40293c:	add    bh,BYTE PTR [eax]
  40293e:	call   0x8a32:0x3361a166
  402945:	test   BYTE PTR [ebx-0xa],al
  402948:	dec    esi
  402949:	adc    ebx,edx
  40294b:	fwait
  40294c:	push   es
  40294d:	mov    edi,0x5a357570
  402952:	and    eax,0x651adddb
  402957:	mov    dl,0x18
  402959:	rol    dh,0xe7
  40295c:	(bad)  
  40295d:	mov    bl,0xc1
  40295f:	int3   
  402960:	inc    esi
  402961:	mov    dh,0xd5
  402963:	dec    edx
  402964:	cmp    eax,0xfb628087
  402969:	xchg   ecx,eax
  40296a:	loope  0x40295f
  40296c:	clc    
  40296d:	adc    ebx,edx
  40296f:	cmp    edi,esi
  402971:	mov    al,ch
  402973:	jl     0x40298f
  402975:	or     eax,0xf5ced02
  40297a:	test   BYTE PTR [eax],bl
  40297c:	add    BYTE PTR [eax],al
  40297e:	add    BYTE PTR [edx+0x6a590a6a],dl
  402984:	add    al,0x5b
  402986:	inc    ebx
  402987:	xchg   ebx,ecx
  402989:	sub    ebx,ecx
  40298b:	xchg   ebx,ecx
  40298d:	dec    ecx
  40298e:	mov    eax,DWORD PTR [ebp-0x1c]
  402991:	imul   eax,ecx
  402994:	add    esp,eax
  402996:	xchg   edx,eax
  402997:	push   eax
  402998:	xor    ebx,ebx
  40299a:	mov    edx,esp
  40299c:	jmp    0x402a6f
  4029a1:	jns    0x4029c0
  4029a3:	inc    ebp
  4029a4:	ds gs mov dh,0x7d
  4029a8:	mov    ebp,0x6beb4b4b
  4029ad:	inc    edi
  4029ae:	add    al,cl
  4029b0:	retf   
  4029b1:	(bad)  
  4029b2:	or     al,0x7c
  4029b4:	jl     0x402958
  4029b6:	jl     0x402a34
  4029b8:	jl     0x40297b
  4029ba:	sahf   
  4029bb:	mov    bh,0x35
  4029bd:	jns    0x4029ed
  4029bf:	xor    al,0x13
  4029c1:	adc    ch,ah
  4029c3:	or     al,0xc7
  4029c5:	dec    edi
  4029c6:	xor    esp,DWORD PTR [ebx-0x28227c94]
  4029cc:	jno    0x402a1c
  4029ce:	es push ebx
  4029d0:	mov    ds:0xb13d3473,al
  4029d5:	mov    bh,0x28
  4029d7:	(bad)  [edx+ebp*1-0x1f]
  4029db:	jmp    0xf7435556
  4029e0:	in     eax,dx
  4029e1:	out    0xf6,al
  4029e3:	aaa    
  4029e4:	pop    esi
  4029e5:	aas    
  4029e6:	mov    esp,0xee9a997
  4029eb:	popf   
  4029ec:	fwait
  4029ed:	xor    dl,cl
  4029ef:	add    al,0x53
  4029f1:	push   ebp
  4029f2:	xor    BYTE PTR [ecx+0x38f46aa3],cl
  4029f8:	ficom  DWORD PTR [edi+ebp*1]
  4029fb:	stc    
  4029fc:	hlt    
  4029fd:	inc    ebx
  4029fe:	out    dx,al
  4029ff:	(bad)  
  402a00:	fidiv  DWORD PTR [ebx-0x40f32a]
  402a06:	pop    eax
  402a07:	push   0x7f
  402a09:	sbb    DWORD PTR [ebx],ebp
  402a0b:	sub    DWORD PTR cs:[eax-0x29],edi
  402a0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a10:	fld    TBYTE PTR [ebx+0x442a201a]
  402a16:	lds    esp,FWORD PTR [ecx-0x291770ee]
  402a1c:	xlat   BYTE PTR ds:[ebx]
  402a1d:	dec    ebp
  402a1e:	mov    ah,0xd3
  402a20:	clc    
  402a21:	fbstp  TBYTE PTR [ecx-0x4]
  402a24:	jnp    0x402a6a
  402a26:	pmaddwd mm2,QWORD PTR [esi-0x6d997514]
  402a2d:	mov    ecx,gs
  402a2f:	int3   
  402a30:	lods   al,BYTE PTR ds:[esi]
  402a31:	mov    dl,0x23
  402a33:	sti    
  402a34:	test   eax,0x6fa66f7
  402a39:	cwde   
  402a3a:	sub    DWORD PTR [ebp+0x51],edx
  402a3d:	repnz rol BYTE PTR [ebx+0x35ab2062],cl
  402a44:	add    al,0x67
  402a46:	jmp    0x944e6495
  402a4b:	push   ebp
  402a4c:	mov    edi,0xf43c6b81
  402a51:	pop    es
  402a52:	hlt    
  402a53:	popf   
  402a54:	ds gs repnz in eax,0xa2
  402a59:	mov    eax,0x9a67930a
  402a5e:	div    cl
  402a60:	pop    edi
  402a61:	xchg   ecx,eax
  402a62:	retf   
  402a63:	pop    eax
  402a64:	inc    esp
  402a65:	inc    edx
  402a66:	xor    eax,0x54f06456
  402a6b:	mov    gs,edi
  402a6d:	pop    es
  402a6e:	outs   dx,DWORD PTR ds:[esi]
  402a6f:	dec    edx
  402a70:	inc    ebx
  402a71:	add    ebx,DWORD PTR [edx+ebx*1]
  402a74:	jmp    0x402b47
  402a79:	in     al,dx
  402a7a:	test   eax,0xb57d3fe8
  402a7f:	sti    
  402a80:	mov    ecx,0xb7fd3b83
  402a85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a86:	and    eax,0xf0cb2ab
  402a8b:	jl     0x402b09
  402a8d:	mov    ds:0x657c7c7c,al
  402a92:	dec    edx
  402a93:	call   0xccc1:0x1beb1e6a
  402a9a:	hlt    
  402a9b:	je     0x402a5f
  402a9d:	push   ebx
  402a9e:	ds out 0x83,eax
  402aa1:	push   cs
  402aa2:	sub    BYTE PTR [esi+0x345a79d],al
  402aa8:	fild   DWORD PTR [ebx-0x6e]
  402aab:	fdiv   DWORD PTR [edx-0x1a74af63]
  402ab1:	lahf   
  402ab2:	ret    
  402ab3:	repz dec edx
  402ab5:	stos   DWORD PTR es:[edi],eax
  402ab6:	pop    edi
  402ab7:	into   
  402ab8:	and    DWORD PTR [esp+edi*8],eax
  402abb:	or     eax,0xe9bd0662
  402ac0:	outs   dx,BYTE PTR ds:[esi]
  402ac1:	xor    BYTE PTR [esi-0x5f],dl
  402ac4:	pop    ecx
  402ac5:	gs ins BYTE PTR es:[edi],dx
  402ac7:	xchg   ebx,eax
  402ac8:	sahf   
  402ac9:	add    ebp,edx
  402acb:	cmp    eax,0x5a8ba61
  402ad0:	xchg   ebx,eax
  402ad1:	fidivr DWORD PTR [edx-0x3e]
  402ad4:	aad    0x24
  402ad6:	(bad)  
  402ad7:	xor    ebp,DWORD PTR [eax+0x57b0730e]
  402add:	out    0xbb,eax
  402adf:	inc    esp
  402ae0:	add    dl,BYTE PTR [edx]
  402ae2:	or     BYTE PTR [ebp+0x58b63d8e],bh
  402ae8:	cmp    al,0x44
  402aea:	xor    BYTE PTR [ecx-0x1cfef166],dh
  402af0:	push   esp
  402af1:	inc    DWORD PTR [esi-0x2f6aa7e7]
  402af7:	int    0x57
  402af9:	mov    bl,0xf
  402afb:	mov    ebp,0x2656eec5
  402b00:	aam    0xca
  402b02:	xor    al,0xd
  402b04:	mov    bh,0x1c
  402b06:	(bad)  
  402b07:	push   edx
  402b08:	div    dl
  402b0a:	jbe    0x402b63
  402b0c:	repz icebp 
  402b0e:	mov    ah,0x38
  402b10:	or     eax,0x1c45eb29
  402b15:	adc    bh,ch
  402b17:	test   DWORD PTR [eax],ebp
  402b19:	int3   
  402b1a:	aam    0xe2
  402b1c:	mov    al,ds:0x17b606bf
  402b21:	adc    BYTE PTR [ebp-0x80f1f7e],dl
  402b27:	sub    BYTE PTR [ecx+0x78],bh
  402b2a:	stos   BYTE PTR es:[edi],al
  402b2b:	mov    edi,0xf611e4c8
  402b30:	daa    
  402b31:	call   0xdb12f78b
  402b36:	push   ebx
  402b37:	repnz sbb dh,BYTE PTR [ebx+0x73]
  402b3b:	test   BYTE PTR [esi+0x710df5a6],ch
  402b41:	pop    ebx
  402b42:	lea    ecx,[ebp+0x4b255c4e]
  402b48:	xor    edx,edx
  402b4a:	add    DWORD PTR [ebp-0xc],ebx
  402b4d:	jmp    0x402c20
  402b52:	dec    ebx
  402b53:	jge    0x402bcf
  402b55:	cmp    BYTE PTR [edx-0x7d],0x6d
  402b59:	jge    0x402b07
  402b5b:	push   cs
  402b5c:	loope  0x402b36
  402b5e:	pushf  
  402b5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b60:	dec    ebp
  402b61:	cmp    eax,0x7c7c0fb2
  402b66:	mov    ds:0xf37c7c7c,al
  402b6b:	push   edi
  402b6c:	imul   eax,DWORD PTR [ebp+ebp*2-0x39],0xe53d6da1
  402b74:	ret    0xb7ea
  402b77:	ret    0xda17
  402b7a:	and    esi,edx
  402b7c:	push   ebx
  402b7d:	rol    dh,0xc0
  402b80:	sub    BYTE PTR [edx],0xd3
  402b83:	jge    0x402b5a
  402b85:	dec    ecx
  402b86:	fimul  DWORD PTR [esi+ecx*4]
  402b89:	jae    0x402b7f
  402b8b:	xchg   ebx,eax
  402b8c:	(bad)  
  402b8e:	cld    
  402b8f:	bound  esi,QWORD PTR [eax]
  402b91:	je     0x402b6b
  402b93:	sbb    BYTE PTR [ebp-0x638292e7],0x51
  402b9a:	data16 xor BYTE PTR [ebp+0xc],bl
  402b9e:	cmc    
  402b9f:	or     esp,esp
  402ba1:	mov    esp,0x78bd9525
  402ba6:	ror    BYTE PTR [ebp-0x17],0xe2
  402baa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bab:	dec    ebx
  402bac:	jbe    0x402c19
  402bae:	inc    edi
  402baf:	shl    DWORD PTR [ecx+0x69fcf23a],1
  402bb5:	pop    edx
  402bb6:	xchg   edx,eax
  402bb7:	(bad)  
  402bb8:	sub    dh,dl
  402bba:	adc    DWORD PTR [esi],ebx
  402bbc:	lock lea edx,[edi+edx*1+0x36ad946]
  402bc4:	add    bh,ah
  402bc6:	pop    DWORD PTR [edx-0x9]
  402bc9:	(bad)
  402bcd:	add    esp,DWORD PTR [ebx]
  402bcf:	jmp    0xafa3:0x5234b85b
  402bd6:	in     eax,dx
  402bd7:	lds    ebx,FWORD PTR [ebp-0x60]
  402bda:	ins    BYTE PTR es:[edi],dx
  402bdb:	inc    esp
  402bdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bdd:	mov    al,0xfb
  402bdf:	cmp    al,0x95
  402be1:	dec    ebp
  402be2:	mov    ebp,0xaed74379
  402be7:	mov    ch,BYTE PTR [ebx-0x2ec6aa2d]
  402bed:	popa   
  402bee:	in     al,0x4e
  402bf0:	pop    ecx
  402bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bf2:	in     al,0xdc
  402bf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bf5:	push   eax
  402bf6:	out    0xd4,eax
  402bf8:	mov    WORD PTR [eax+ebp*2-0x4a5ab5e],ss
  402bff:	and    eax,0x81db417a
  402c04:	push   0x82f8b850
  402c09:	cli    
  402c0a:	stc    
  402c0b:	inc    ebp
  402c0c:	(bad)  
  402c0d:	cwde   
  402c0e:	je     0x402c0a
  402c10:	(bad)  
  402c12:	or     BYTE PTR [ebx+0x41],dl
  402c15:	mov    ch,0xb0
  402c17:	lock pop ebx
  402c19:	cs sahf 
  402c1b:	in     eax,0xb6
  402c1d:	sub    eax,0x8b5bf373
  402c22:	inc    ebp
  402c23:	hlt    
  402c24:	pop    edi
  402c25:	pop    esi
  402c26:	pop    ebx
  402c27:	leave  
  402c28:	ret    0x10
  402c2b:	push   ebp
  402c2c:	mov    ebp,esp
  402c2e:	sub    esp,0x20
  402c31:	leave  
  402c32:	ret    0x10
  402c35:	push   ebp
  402c36:	mov    ebp,esp
  402c38:	push   ecx
  402c39:	and    DWORD PTR ds:0x424847,0x0
  402c43:	jmp    0x402c56
  402c48:	xor    eax,eax
  402c4a:	xor    eax,DWORD PTR ds:0x424847
  402c50:	inc    eax
  402c51:	mov    ds:0x424847,eax
  402c56:	cmp    DWORD PTR ds:0x424847,0x1e
  402c5d:	jae    0x402d01
  402c63:	cmp    DWORD PTR ds:0x424847,0x11
  402c6a:	jne    0x402c83
  402c70:	push   0x0
  402c72:	push   0x44b6e8
  402c77:	push   DWORD PTR [ebp-0x20]
  402c7a:	push   DWORD PTR [ebp-0x14]
  402c7d:	call   DWORD PTR ds:0x4430d0
  402c83:	cmp    DWORD PTR ds:0x424847,0x10
  402c8a:	jne    0x402c9e
  402c90:	xor    eax,eax
  402c92:	add    eax,DWORD PTR ds:0x424847
  402c98:	inc    eax
  402c99:	mov    ds:0x424847,eax
  402c9e:	jmp    0x402c48
  402ca3:	and    DWORD PTR ds:0x4489a4,0x0
  402cad:	mov    edx,DWORD PTR ds:0x4489a4
  402cb3:	inc    edx
  402cb4:	mov    DWORD PTR ds:0x4489a4,edx
  402cba:	cmp    DWORD PTR ds:0x4489a4,0xd
  402cc1:	jne    0x402cda
  402cc7:	push   0x424843
  402ccc:	push   DWORD PTR [ebp-0x28]
  402ccf:	push   0x3f88
  402cd4:	call   DWORD PTR ds:0x443000
  402cda:	cmp    DWORD PTR ds:0x4489a4,0xc
  402ce1:	jne    0x402cf4
  402ce7:	mov    edx,DWORD PTR ds:0x4489a4
  402ced:	inc    edx
  402cee:	mov    DWORD PTR ds:0x4489a4,edx
  402cf4:	cmp    DWORD PTR ds:0x4489a4,0x17
  402cfb:	jb     0x402cad
  402d01:	push   ecx
  402d02:	mov    eax,0xf89c8535
  402d07:	mov    DWORD PTR ds:0x42483b,0x10
  402d11:	cmp    DWORD PTR ds:0x42483b,0x0
  402d18:	je     0x402d61
  402d1e:	cmp    DWORD PTR ds:0x42483b,0x1d
  402d25:	jne    0x402d4f
  402d2b:	push   0x44b6d0
  402d30:	push   0x44b6d0
  402d35:	push   0x8e35
  402d3a:	push   0x4109ab
  402d3f:	push   0x410971
  402d44:	push   0x410927
  402d49:	call   DWORD PTR ds:0x443348
  402d4f:	mov    edx,DWORD PTR ds:0x42483b
  402d55:	dec    edx
  402d56:	mov    DWORD PTR ds:0x42483b,edx
  402d5c:	jmp    0x402d11
  402d61:	mov    DWORD PTR [ebp-0x8],eax
  402d64:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  402d6b:	mov    edx,DWORD PTR [ebp-0x8]
  402d6e:	push   esi
  402d6f:	mov    ecx,0x7510857
  402d74:	xor    edx,ecx
  402d76:	mov    esi,0x32729e
  402d7b:	push   edi
  402d7c:	mov    edi,DWORD PTR [ebp+0x10]
  402d7f:	add    edx,esi
  402d81:	cmp    edi,edx
  402d83:	je     0x403249
  402d89:	mov    edx,DWORD PTR [ebp-0x8]
  402d8c:	mov    eax,DWORD PTR [ebp-0x4]
  402d8f:	xor    eax,ecx
  402d91:	mov    edi,0xffcd8d62
  402d96:	sub    edi,eax
  402d98:	add    edi,DWORD PTR [ebp+0x10]
  402d9b:	xor    edx,ecx
  402d9d:	add    edx,esi
  402d9f:	cmp    edx,edi
  402da1:	ja     0x4030d5
  402da7:	jmp    0x402f16
  402dac:	sbb    eax,0xa4b3a405
  402db1:	ins    DWORD PTR es:[edi],dx
  402db2:	std    
  402db3:	pop    ebp
  402db4:	mov    eax,0xd5e45e2b
  402db9:	in     eax,dx
  402dba:	dec    edi
  402dbb:	sub    eax,edi
  402dbd:	push   cs
  402dbe:	jl     0x402e3c
  402dc0:	into   
  402dc1:	jg     0x402e3f
  402dc3:	jl     0x402da2
  402dc5:	mov    dh,0x48
  402dc7:	jmp    0x402da1
  402dc9:	sub    DWORD PTR [ebx-0x439ddec8],edi
  402dcf:	mov    eax,0x3ee7a44c
  402dd4:	jle    0x402e52
  402dd6:	mov    esi,0x3ff6e959
  402ddb:	out    0xc,al
  402ddd:	inc    edx
  402dde:	xor    al,0x54
  402de1:	push   esi
  402de2:	add    dh,BYTE PTR [edx+0x14ec984]
  402de8:	out    0x2b,al
  402dea:	inc    esp
  402deb:	sub    BYTE PTR [ebx+eax*4-0x3eb78398],bh
  402df2:	or     dh,BYTE PTR [esi+0x42]
  402df5:	sbb    BYTE PTR [esp+eax*8-0x4],0x75
  402dfa:	mov    dl,cl
  402dfc:	mov    BYTE PTR [eax],bh
  402dfe:	cmp    BYTE PTR [eax],ah
  402e00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e01:	sbb    esi,edx
  402e03:	test   cl,0xa
  402e06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e07:	mov    ch,0x31
  402e09:	push   ds
  402e0a:	repnz dec esp
  402e0c:	stos   BYTE PTR es:[edi],al
  402e0d:	lock mov ecx,0xe0b9d2a2
  402e13:	dec    esi
  402e14:	ror    DWORD PTR ds:0x5ed4d483,cl
  402e1a:	jbe    0x402e95
  402e1c:	jge    0x402daf
  402e1e:	pop    edx
  402e1f:	jo     0x402dd9
  402e21:	aam    0xc9
  402e23:	lahf   
  402e24:	mov    cl,0x14
  402e26:	cdq    
  402e27:	mov    eax,DWORD PTR [ebx+0x53]
  402e2a:	dec    ecx
  402e2b:	push   ebx
  402e2c:	rcl    BYTE PTR [ecx+0x67],0xe9
  402e30:	pop    es
  402e31:	sub    BYTE PTR [ebx+0x405be698],0xa3
  402e38:	pushf  
  402e39:	fild   DWORD PTR [eax-0x327e0847]
  402e3f:	aad    0x25
  402e41:	dec    ebx
  402e42:	aad    0x5d
  402e44:	loope  0x402ea5
  402e46:	or     DWORD PTR [edi-0x392073f6],ecx
  402e4c:	ss in  al,dx
  402e4e:	sbb    DWORD PTR [ebx],0xffffff84
  402e51:	xchg   edx,eax
  402e52:	test   DWORD PTR [ecx],esp
  402e54:	test   eax,0x5a226249
  402e59:	mov    bl,0x23
  402e5b:	pop    es
  402e5c:	test   BYTE PTR [esi+ebp*2+0x74],al
  402e60:	mov    fs,esp
  402e62:	mov    edi,0x8ee9b8bf
  402e67:	sub    eax,0x57bca612
  402e6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e6d:	loopne 0x402ea5
  402e6f:	sbb    BYTE PTR [ebx],bh
  402e71:	sbb    ecx,DWORD PTR [eax]
  402e73:	push   cs
  402e74:	fimul  WORD PTR [edi-0x6]
  402e77:	ret    0x52f5
  402e7a:	dec    ebp
  402e7b:	int    0x9f
  402e7d:	test   al,0xd6
  402e7f:	xchg   ebx,eax
  402e80:	jmp    0x402ed7
  402e82:	cmp    dl,dh
  402e84:	and    esi,DWORD PTR [eax-0x32]
  402e87:	sbb    eax,0xcbca714e
  402e8c:	push   esi
  402e8d:	xchg   al,cl
  402e8f:	ret    
  402e90:	jo     0x402e17
  402e92:	dec    ebp
  402e93:	ss out 0x36,al
  402e96:	adc    BYTE PTR [ebx],0x97
  402e99:	push   edx
  402e9a:	or     al,0xeb
  402e9c:	jl     0x402ea2
  402e9e:	jb     0x402ebe
  402ea0:	inc    ebp
  402ea1:	jae    0x402e47
  402ea3:	dec    eax
  402ea4:	pop    edi
  402ea5:	daa    
  402ea6:	pusha  
  402ea7:	pop    ss
  402ea8:	inc    esi
  402ea9:	and    ch,0x64
  402eac:	in     al,0xdb
  402eae:	cmp    eax,0x55dc002b
  402eb3:	lds    eax,FWORD PTR [ecx+0x1e]
  402eb6:	or     ecx,ecx
  402eb8:	fcomp  QWORD PTR [eax+esi*4-0x14]
  402ebc:	and    dl,0x11
  402ebf:	cli    
  402ec0:	clc    
  402ec1:	add    eax,0x3a1d63db
  402ec6:	xchg   ebp,eax
  402ec7:	pop    es
  402ec8:	xlat   BYTE PTR gs:[ebx]
  402eca:	push   eax
  402ecb:	jg     0x402f08
  402ecd:	fimul  WORD PTR [eax-0x109ee296]
  402ed3:	ret    
  402ed4:	mov    esi,0x1467f5e9
  402ed9:	and    ebp,ecx
  402edb:	push   0x568dbcf7
  402ee0:	cmp    al,BYTE PTR [esi-0x5f]
  402ee3:	and    eax,0x175cb6ea
  402ee8:	retf   
  402ee9:	in     al,dx
  402eea:	sahf   
  402eeb:	call   0x80ac6100
  402ef0:	add    ch,dh
  402ef2:	or     ebx,DWORD PTR [ebx+ebp*1+0x53]
  402ef6:	lds    edx,FWORD PTR [edi+0x17]
  402ef9:	inc    edi
  402efa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402efb:	and    al,0xc0
  402efd:	pop    edx
  402efe:	ins    BYTE PTR es:[edi],dx
  402eff:	mov    cl,0x3d
  402f01:	inc    eax
  402f02:	mov    ds:0xd7722f9b,al
  402f07:	mov    ebp,0x3dd04da3
  402f0c:	xor    eax,0xe0a97ffe
  402f11:	jne    0x402f30
  402f13:	in     eax,0x80
  402f15:	xor    dl,BYTE PTR [ebx-0x17]
  402f18:	add    eax,0xbe000000
  402f1d:	sahf   
  402f1e:	jb     0x402f52
  402f20:	add    BYTE PTR [ebx+0x7d8bf845],cl
  402f26:	cld    
  402f27:	xor    edi,ecx
  402f29:	add    edi,esi
  402f2b:	mov    esi,DWORD PTR [ebp+0x8]
  402f2e:	imul   edi,edx
  402f31:	mov    ebx,DWORD PTR [ebp+0xc]
  402f34:	xor    eax,ecx
  402f36:	add    eax,edx
  402f38:	mov    al,BYTE PTR [ebx+eax*1+0x32729e]
  402f3f:	mov    BYTE PTR [edi+esi*1],al
  402f42:	mov    eax,DWORD PTR [ebp-0x4]
  402f45:	xor    eax,ecx
  402f47:	lea    edx,[edx+eax*1+0x32729e]
  402f4e:	mov    eax,DWORD PTR [ebp-0x4]
  402f51:	xor    eax,ecx
  402f53:	mov    esi,0xffcd8d62
  402f58:	sub    esi,eax
  402f5a:	add    esi,DWORD PTR [ebp+0x10]
  402f5d:	jmp    0x4030cc
  402f62:	jp     0x402f87
  402f64:	pop    ebp
  402f65:	cmp    BYTE PTR [ebp+0x7a],bl
  402f68:	jge    0x402fcf
  402f6a:	mov    ss,WORD PTR [ebp+0x4f]
  402f6d:	push   edx
  402f6e:	je     0x402f70
  402f70:	ss pop ebx
  402f72:	dec    edx
  402f73:	add    DWORD PTR [esp+edi*2-0x32],edi
  402f77:	jg     0x402ff5
  402f79:	jl     0x402fd1
  402f7b:	sub    al,0x3a
  402f7d:	inc    eax
  402f7e:	add    al,BYTE PTR [esi-0x30980e73]
  402f84:	frstor [esi+0x14]
  402f87:	push   edi
  402f88:	dec    edi
  402f89:	jae    0x402f39
  402f8b:	pop    edi
  402f8c:	xor    BYTE PTR [eax+eiz*1+0x57873b99],cl
  402f93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f94:	xorps  xmm6,XMMWORD PTR [edi+0x50]
  402f98:	pop    es
  402f99:	popf   
  402f9a:	jmp    0x10faf830
  402f9f:	sbb    eax,0xd8387068
  402fa4:	inc    DWORD PTR [ebp-0x6f]
  402fa7:	pop    esi
  402fa8:	rcr    DWORD PTR [ecx+ebx*8-0x55],cl
  402fac:	jbe    0x402fd0
  402fae:	jno    0x402f33
  402fb0:	add    al,0xe6
  402fb2:	and    esp,DWORD PTR [eax+edx*1]
  402fb5:	jb     0x402f96
  402fb7:	pop    es
  402fb8:	sub    ecx,DWORD PTR [edx]
  402fba:	adc    al,0x52
  402fbc:	(bad)  
  402fbd:	out    0xb2,al
  402fbf:	push   ebp
  402fc0:	fnsave [edx+0x619df338]
  402fc6:	push   cs
  402fc7:	mov    ch,0x51
  402fc9:	in     al,dx
  402fca:	mov    ch,0x3d
  402fcc:	cmp    al,0x3d
  402fce:	(bad)  
  402fcf:	fst    DWORD PTR ds:0xa27077cd
  402fd5:	xor    DWORD PTR [edx],0xffffffc0
  402fd8:	adc    al,0x7d
  402fda:	(bad)  
  402fdb:	mov    eax,ds:0x170c0319
  402fe0:	pop    edi
  402fe1:	sub    esp,DWORD PTR [eax]
  402fe3:	lds    esp,FWORD PTR [ebp-0x1703a27b]
  402fe9:	cmp    al,0xff
  402feb:	sub    DWORD PTR [ecx+0x380cb4d0],ebp
  402ff1:	jl     0x403035
  402ff3:	push   DWORD PTR [ebp-0x7e]
  402ff6:	inc    ebp
  402ff7:	inc    esi
  402ff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ff9:	in     eax,dx
  402ffa:	xchg   ebp,eax
  402ffb:	xchg   DWORD PTR [eax-0x20],edi
  402ffe:	xchg   ecx,eax
  402fff:	sub    bl,BYTE PTR [esi+0x104123de]
  403005:	aaa    
  403006:	shr    bh,1
  403008:	(bad)  
  40300a:	push   ebx
  40300b:	loope  0x402f90
  40300d:	mov    bh,0xf7
  40300f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403010:	cmp    al,0x89
  403012:	retf   
  403013:	jmp    0xbe35:0xf8e2cfa7
  40301a:	es jmp 0xdfd7:0x508fde2c
  403022:	imul   ecx,DWORD PTR [esi+0x7b],0xfffffff8
  403026:	clc    
  403027:	(bad)  
  403028:	sar    BYTE PTR [edi+0x7d3f8f74],1
  40302e:	xor    DWORD PTR [ebx],edx
  403030:	xchg   DWORD PTR [esi],esp
  403032:	pushf  
  403033:	dec    esi
  403034:	loopne 0x402fc7
  403036:	jg     0x40304e
  403038:	icebp  
  403039:	mov    es,WORD PTR [ebp-0x5]
  40303c:	(bad)  
  40303d:	scas   eax,DWORD PTR es:[edi]
  40303e:	pop    esi
  40303f:	push   ebx
  403040:	cmp    al,0xb2
  403042:	mov    al,ds:0x67bbb9f
  403047:	ja     0x403084
  403049:	cmc    
  40304a:	call   0x2b2d:0x2baff550
  403051:	jnp    0x4030c9
  403053:	shr    DWORD PTR [di+0x3ce],1
  403058:	add    eax,DWORD PTR [edi]
  40305a:	into   
  40305b:	fisubr WORD PTR [ebx+eiz*1-0x72]
  40305f:	dec    edx
  403060:	int3   
  403061:	or     DWORD PTR [edi-0x5a],edx
  403064:	mov    ds:0x4e2973b9,eax
  403069:	(bad)  
  40306a:	mov    BYTE PTR [esi-0x6fb43b13],ch
  403070:	jp     0x40306a
  403072:	fild   QWORD PTR [ebx]
  403074:	out    dx,eax
  403075:	es dec edx
  403077:	adc    eax,0xaffcf5c6
  40307c:	mov    ds:0xe798118c,al
  403081:	push   esi
  403082:	das    
  403083:	(bad)  
  403084:	jle    0x4030e1
  403086:	idiv   edx
  403088:	jmp    0x40300f
  40308a:	pop    edx
  40308b:	cmc    
  40308c:	inc    ebx
  40308d:	dec    edx
  40308e:	shr    DWORD PTR [edi],1
  403090:	mov    ebp,0x38a6b561
  403095:	test   eax,0x46ee054a
  40309a:	jbe    0x4030a8
  40309c:	jg     0x4030b1
  40309e:	pop    ebp
  40309f:	mov    esp,0x79a626b8
  4030a4:	loope  0x403110
  4030a6:	jmp    0x403108
  4030a8:	ins    DWORD PTR es:[edi],dx
  4030a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030aa:	aad    0x7b
  4030ac:	repnz push ebx
  4030ae:	lods   al,BYTE PTR ds:[esi]
  4030af:	push   eax
  4030b0:	in     eax,0x53
  4030b2:	fwait
  4030b3:	adc    BYTE PTR [ebx],dh
  4030b5:	mov    al,ds:0xe1666697
  4030ba:	popf   
  4030bb:	xchg   BYTE PTR [ebx-0x469a5610],ah
  4030c1:	jl     0x4030e9
  4030c3:	sub    eax,0x16c7fc4
  4030c8:	push   0xfffffff8
  4030ca:	mov    edx,0xfd63b36
  4030cf:	xchg   BYTE PTR [eax-0x2],cl
  4030d2:	(bad)  
  4030d3:	call   FWORD PTR [ebx-0x48]
  4030d6:	xor    al,0x85
  4030d8:	pushf  
  4030d9:	clc    
  4030da:	jmp    0x403249
  4030df:	jno    0x403104
  4030e1:	in     al,0x69
  4030e3:	cli    
  4030e4:	ins    DWORD PTR es:[edi],dx
  4030e5:	cmp    DWORD PTR [ebx+0x12],0xa6299de8
  4030ec:	push   ds
  4030ed:	lahf   
  4030ee:	push   edx
  4030ef:	sbb    al,0x3
  4030f1:	jl     0x40316f
  4030f3:	into   
  4030f4:	jg     0x403172
  4030f6:	jl     0x4030a6
  4030f8:	jbe    0x40309b
  4030fa:	mov    al,ds:0xc95a3d63
  4030ff:	enter  0x28e2,0xb2
  403103:	pop    es
  403104:	inc    edx
  403105:	int    0x60
  403107:	sbb    al,0xa2
  403109:	sar    BYTE PTR [esi-0x2b5e98a3],cl
  40310f:	and    esi,0x28
  403112:	xchg   esp,eax
  403113:	fisub  WORD PTR [ecx]
  403115:	scas   eax,DWORD PTR es:[edi]
  403116:	cs mov ebx,0xb3eab908
  40311c:	aaa    
  40311d:	retf   
  40311e:	mov    ds:0x48e2d055,al
  403123:	push   0x38
  403125:	lahf   
  403126:	jbe    0x403145
  403128:	push   ebx
  403129:	pop    eax
  40312a:	stc    
  40312b:	popa   
  40312c:	add    bh,cl
  40312e:	(bad)  
  40312f:	(bad)  
  403130:	mov    edi,0x185d8535
  403135:	test   eax,0xd16cd09e
  40313a:	stos   DWORD PTR es:[edi],eax
  40313b:	sub    DWORD PTR [ecx],edx
  40313d:	scas   eax,DWORD PTR es:[edi]
  40313e:	xchg   ebx,eax
  40313f:	inc    ecx
  403140:	push   eax
  403141:	and    DWORD PTR [edx+0x180c0ed5],edi
  403147:	sbb    DWORD PTR [ecx+eax*2+0x20bb72a7],eax
  40314e:	push   ds
  40314f:	shr    BYTE PTR [edx+0xc],0xb2
  403153:	out    0x1d,al
  403155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403156:	hlt    
  403157:	mov    cl,0xc9
  403159:	stos   BYTE PTR es:[edi],al
  40315a:	sbb    ebx,eax
  40315c:	in     al,0x25
  40315e:	sti    
  40315f:	push   edi
  403160:	cmp    DWORD PTR [edx-0x3570493f],esi
  403166:	adc    DWORD PTR [ebp-0x32],ecx
  403169:	cmp    DWORD PTR ds:0x60466bfa,ebp
  40316f:	lods   eax,DWORD PTR ds:[esi]
  403170:	js     0x403174
  403172:	cmc    
  403173:	push   0x2a
  403175:	add    ebp,DWORD PTR [edx+0x55]
  403178:	pop    edi
  403179:	pop    es
  40317a:	xor    DWORD PTR [eax+eax*1],esi
  40317d:	pop    esi
  40317e:	sbb    al,0x93
  403180:	in     al,dx
  403181:	aad    0x2d
  403183:	mov    al,ds:0x9091530e
  403188:	sub    eax,0xa0aa0956
  40318d:	push   ebx
  40318e:	add    al,BYTE PTR [esi-0x65]
  403191:	cmc    
  403192:	or     BYTE PTR [edi-0x2f],bl
  403195:	sti    
  403196:	ret    0xff36
  403199:	(bad)  
  40319a:	sti    
  40319b:	dec    edi
  40319c:	xchg   edx,eax
  40319d:	rcl    dl,cl
  40319f:	add    al,0xcd
  4031a1:	int    0x31
  4031a3:	les    eax,FWORD PTR [edx+0x63]
  4031a6:	inc    ebp
  4031a7:	mov    esi,DWORD PTR [edx+ebp*1+0x3ab8691e]
  4031ae:	pop    eax
  4031af:	push   cs
  4031b0:	or     eax,esp
  4031b2:	pop    ss
  4031b3:	or     al,0x50
  4031b5:	ins    BYTE PTR es:[edi],dx
  4031b6:	push   eax
  4031b7:	sbb    eax,esp
  4031b9:	test   DWORD PTR [edx-0x32284c7c],edx
  4031bf:	dec    edx
  4031c0:	cmp    bh,BYTE PTR [edi]
  4031c2:	cmp    eax,0xf1780b5a
  4031c7:	in     eax,dx
  4031c8:	mov    dh,0xf2
  4031ca:	jno    0x403207
  4031cc:	mov    bl,0x2a
  4031ce:	rcl    BYTE PTR [eax+0x73],0x8d
  4031d2:	mov    ss,WORD PTR [edx+edx*4]
  4031d5:	and    esi,DWORD PTR [ebx]
  4031d7:	xchg   edx,eax
  4031d8:	xor    bh,dh
  4031da:	call   0xe578:0xfd4198ac
  4031e1:	and    eax,DWORD PTR [ecx-0x1bae8cc4]
  4031e7:	ror    BYTE PTR [eax+0x19],1
  4031ea:	leave  
  4031eb:	hlt    
  4031ec:	loope  0x403194
  4031ee:	sbb    al,0xbc
  4031f0:	cmp    ebp,edi
  4031f2:	jmp    0x4031f0
  4031f4:	scas   eax,DWORD PTR es:[edi]
  4031f5:	daa    
  4031f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031f7:	jecxz  0x403225
  4031f9:	mov    DWORD PTR [eax+eax*1+0x2fcb0be5],ebx
  403200:	sub    ecx,esi
  403202:	push   0xf8d91651
  403207:	push   ebp
  403208:	mov    bh,0xf5
  40320a:	rcl    ah,1
  40320c:	and    bl,BYTE PTR [ebx]
  40320e:	icebp  
  40320f:	adc    eax,0xb0f1640b
  403214:	adc    eax,DWORD PTR [ebp+0x7e703c04]
  40321a:	(bad)  
  40321b:	mov    esp,0xe7ab2e59
  403220:	jp     0x4031a5
  403222:	jmp    0x6918:0x37fc1bc2
  403229:	inc    esp
  40322a:	mov    ebp,0xc8831fae
  40322f:	ins    DWORD PTR es:[edi],dx
  403230:	in     al,dx
  403231:	fmul   st(5),st
  403233:	xchg   edi,eax
  403234:	push   edx
  403235:	or     edi,esi
  403237:	adc    al,0xc4
  403239:	push   ebx
  40323a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40323b:	mov    bh,0xf
  40323d:	sub    BYTE PTR ds:[esi],ah
  403240:	loope  0x4031dd
  403242:	mov    DWORD PTR [ebx],ecx
  403244:	je     0x403253
  403246:	pop    esi
  403247:	xor    DWORD PTR [edi+ebx*2+0x5e],ebp
  40324b:	leave  
  40324c:	ret    0xc
  40324f:	push   ebp
  403250:	mov    ebp,esp
  403252:	mov    eax,ds:0x445224
  403257:	add    DWORD PTR ds:0x448998,edx
  40325d:	mov    edx,0x32729e
  403262:	movzx  ecx,WORD PTR ds:0x424847
  403269:	or     DWORD PTR ds:0x44e40c,ecx
  40326f:	sub    eax,edx
  403271:	mov    ecx,DWORD PTR ds:0x44e41c
  403277:	or     DWORD PTR ds:0x44899c,ecx
  40327d:	mov    ecx,0x7510857
  403282:	and    DWORD PTR ds:0x44b6d0,0x4489a8
  40328c:	push   esi
  40328d:	and    DWORD PTR ds:0x41074b,0x0
  403297:	jmp    0x4032a9
  40329c:	mov    esi,DWORD PTR ds:0x41074b
  4032a2:	inc    esi
  4032a3:	mov    DWORD PTR ds:0x41074b,esi
  4032a9:	cmp    DWORD PTR ds:0x41074b,0x18
  4032b0:	jae    0x4032e1
  4032b6:	cmp    DWORD PTR ds:0x41074b,0x24
  4032bd:	jne    0x4032dc
  4032c3:	push   0x2dca
  4032c8:	push   0x41089f
  4032cd:	push   DWORD PTR [ebp-0x18]
  4032d0:	push   DWORD PTR [ebp-0x18]
  4032d3:	push   DWORD PTR [ebp-0x10]
  4032d6:	call   DWORD PTR ds:0x443004
  4032dc:	jmp    0x40329c
  4032e1:	mov    esi,DWORD PTR [ebp+0xc]
  4032e4:	add    DWORD PTR ds:0x448980,0x448994
  4032ee:	xor    eax,ecx
  4032f0:	cmp    eax,esi
  4032f2:	je     0x403532
  4032f8:	mov    eax,ds:0x44521c
  4032fd:	xor    DWORD PTR ds:0x44e428,0x43cf
  403307:	jmp    0x4033ac
  40330c:	rol    BYTE PTR ds:0xad798db9,1
  403312:	loopne 0x403391
  403314:	dec    esi
  403315:	push   edi
  403316:	mov    cl,0x6e
  403318:	jb     0x4032cc
  40331a:	dec    eax
  40331b:	test   esi,ebp
  40331d:	add    bh,BYTE PTR [esp+edi*2-0xc]
  403321:	jl     0x40339f
  403323:	jl     0x4032c0
  403325:	es loopne 0x40333e
  403328:	das    
  403329:	ss pop ds
  40332b:	add    ecx,DWORD PTR [edx+ebp*1+0x790ccf8f]
  403332:	repnz int 0x40
  403335:	jnp    0x4032da
  403337:	stc    
  403338:	cmp    al,0x4e
  40333a:	(bad)  
  40333b:	outs   dx,BYTE PTR ds:[esi]
  40333c:	jmp    0xb04340a2
  403341:	push   ss
  403342:	loop   0x4033a2
  403344:	out    0xf7,eax
  403346:	push   0x13
  403348:	jmp    FWORD PTR [ebp+0x41]
  40334b:	xchg   bl,bl
  40334d:	cmp    BYTE PTR [eax+0x6a045376],ah
  403353:	or     BYTE PTR [edi-0x5bd306e7],ah
  403359:	cmp    al,0x58
  40335b:	pop    ecx
  40335c:	ds add ecx,esi
  40335f:	cmp    edx,DWORD PTR [edi+ecx*2]
  403362:	lds    esi,FWORD PTR [ebx-0x63]
  403365:	retf   0x1e5a
  403368:	cli    
  403369:	xchg   DWORD PTR [ecx-0x4b9258f6],ecx
  40336f:	ficomp DWORD PTR [ebx+0x49644b2d]
  403375:	mov    ?,edx
  403377:	inc    edx
  403378:	adc    ecx,DWORD PTR [edi]
  40337a:	in     eax,0xa1
  40337c:	or     eax,0x22211fa0
  403381:	mov    eax,ds:0x34a27f03
  403386:	inc    ecx
  403387:	icebp  
  403388:	hlt    
  403389:	mov    ds:0xfcd315ac,eax
  40338e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40338f:	icebp  
  403390:	outs   dx,BYTE PTR ds:[esi]
  403391:	aam    0x82
  403393:	adc    ch,0x58
  403396:	dec    esp
  403397:	test   al,0xf2
  403399:	(bad)  
  40339a:	in     al,0xb2
  40339c:	and    BYTE PTR [ebx+0x10],ah
  40339f:	add    al,0xae
  4033a1:	xchg   ebx,eax
  4033a2:	and    ch,ah
  4033a4:	sub    BYTE PTR [ecx+ebx*1],al
  4033a7:	inc    ebp
  4033a8:	or     DWORD PTR [edi],esp
  4033aa:	cmp    BYTE PTR [eax-0x75],al
  4033ad:	jne    0x4033bb
  4033af:	sub    eax,edx
  4033b1:	jmp    0x403456
  4033b6:	sahf   
  4033b7:	and    al,0xc4
  4033b9:	cwde   
  4033ba:	inc    esi
  4033bb:	js     0x40340f
  4033bd:	cmp    dl,BYTE PTR [eax+0x4a]
  4033c0:	fucomp st(0)
  4033c2:	dec    edx
  4033c3:	test   DWORD PTR [ecx+esi*8],ecx
  4033c6:	data16 add bh,BYTE PTR [esp+edi*2-0xc]
  4033cb:	jl     0x403449
  4033cd:	jl     0x4033fe
  4033cf:	jmp    0x1dfd2193
  4033d4:	dec    ecx
  4033d5:	lods   al,BYTE PTR ds:[esi]
  4033d6:	(bad)  
  4033d7:	dec    ebp
  4033d8:	mov    dl,0x87
  4033da:	lds    esp,FWORD PTR [edx]
  4033dc:	cs pop eax
  4033de:	jl     0x4033dc
  4033e0:	dec    esi
  4033e1:	xchg   ebp,eax
  4033e2:	jecxz  0x40343e
  4033e4:	mov    eax,0xc1edf49f
  4033e9:	sbb    DWORD PTR [esi+0x22],ebx
  4033ec:	fsub   DWORD PTR [eax]
  4033ee:	sub    eax,0x8f223fbc
  4033f3:	dec    ebp
  4033f4:	inc    esi
  4033f5:	sbb    BYTE PTR [ecx-0x28],0xbe
  4033f9:	sub    BYTE PTR [eax-0x7c5dc043],bl
  4033ff:	cmp    DWORD PTR [esp+eiz*8+0x62],ecx
  403403:	mov    ds:0xf5dd756b,eax
  403408:	sub    eax,0x96acd753
  40340d:	or     eax,0xde9d83b4
  403412:	mov    al,es:0x327c8a4a
  403418:	inc    esp
  403419:	jae    0x403421
  40341b:	xchg   BYTE PTR [ebx-0x4316dac1],bl
  403421:	xor    eax,0x5213c547
  403426:	sti    
  403427:	faddp  st(5),st
  403429:	std    
  40342a:	mov    edx,0x327d9deb
  40342f:	sbb    dh,al
  403431:	xor    DWORD PTR [edx],esi
  403433:	rcl    esi,cl
  403435:	sbb    ebx,DWORD PTR [ebp-0x65]
  403438:	cld    
  403439:	add    al,0x74
  40343b:	xchg   edx,eax
  40343c:	rcr    BYTE PTR ds:0xe9490dba,0x5a
  403443:	or     BYTE PTR [ecx-0x63],0x51
  403447:	scas   ax,WORD PTR es:[edi]
  403449:	inc    edx
  40344a:	fincstp 
  40344c:	sbb    al,0xdc
  40344e:	mov    dh,0xe9
  403450:	pop    ebx
  403451:	and    BYTE PTR [edx],ch
  403453:	pop    esi
  403454:	cmp    eax,0x3bc133fc
  403459:	(bad)  
  40345a:	jne    0x403470
  403460:	mov    eax,ds:0x445224
  403465:	add    eax,DWORD PTR ds:0x44521c
  40346b:	jmp    0x40351c
  403470:	mov    eax,DWORD PTR [ebp+0xc]
  403473:	xor    eax,ecx
  403475:	jmp    0x40351a
  40347a:	ficomp WORD PTR [edx+0x22]
  40347d:	mov    WORD PTR [edx+0x277a5264],?
  403483:	adc    eax,0x38f5fc0e
  403488:	lea    ebx,[edx]
  40348a:	inc    BYTE PTR ds:0x7cf47c7c
  403490:	jl     0x40350e
  403492:	pop    ds
  403493:	call   0x8b9f9ca9
  403498:	xor    ah,BYTE PTR [ecx+0x4d616acd]
  40349e:	sbb    eax,0xcef53329
  4034a3:	aam    0x54
  4034a5:	jmp    0xaaeb:0xd22ffc24
  4034ac:	int3   
  4034ad:	mov    cl,0xc5
  4034af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034b0:	add    ebp,DWORD PTR [edx+0x75bd13a0]
  4034b6:	in     eax,dx
  4034b7:	push   edi
  4034b8:	(bad)  
  4034ba:	and    BYTE PTR [edx-0x100458fd],bh
  4034c0:	pop    esi
  4034c1:	mov    ch,0x5b
  4034c3:	loop   0x4034bb
  4034c5:	push   ebx
  4034c6:	dec    ebp
  4034c7:	and    esi,DWORD PTR ds:0xa140c90
  4034cd:	ret    
  4034ce:	or     eax,0xc334b978
  4034d3:	sbb    DWORD PTR [ebx+eiz*4-0x347fd113],0x4f
  4034db:	daa    
  4034dc:	repz cdq 
  4034de:	jb     0x4034cf
  4034e0:	mov    BYTE PTR [ecx-0x33],ch
  4034e3:	or     al,0x90
  4034e5:	xor    BYTE PTR [edx-0x73],dh
  4034e8:	js     0x4034ae
  4034ea:	inc    esi
  4034eb:	add    ecx,eax
  4034ed:	pop    esi
  4034ee:	jg     0x4034e0
  4034f0:	mov    bl,0xbb
  4034f2:	pop    esp
  4034f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034f4:	out    0x4c,eax
  4034f6:	and    ch,al
  4034f8:	jge    0x4034e1
  4034fa:	and    BYTE PTR [ebx-0x659de3d5],dh
  403500:	cmp    eax,0x1e0f7413
  403505:	les    ebp,FWORD PTR [ebx-0x507c0e34]
  40350b:	lods   al,BYTE PTR ds:[esi]
  40350c:	pop    ss
  40350d:	push   esi
  40350e:	ret    0xb0fe
  403511:	cmp    al,0x51
  403513:	leave  
  403514:	mov    esp,0x5dbdbf7c
  403519:	iret   
  40351a:	add    eax,edx
  40351c:	mov    ds:0x44521c,eax
  403521:	mov    eax,DWORD PTR [ebp+0xc]
  403524:	xor    eax,ecx
  403526:	add    eax,edx
  403528:	mov    ds:0x445224,eax
  40352d:	jmp    0x40353c
  403532:	mov    eax,ds:0x445224
  403537:	mov    ds:0x44521c,eax
  40353c:	mov    eax,DWORD PTR [ebp+0x8]
  40353f:	mov    eax,DWORD PTR [eax]
  403541:	mov    ecx,DWORD PTR ds:0x44521c
  403547:	add    DWORD PTR [eax],ecx
  403549:	pop    esi
  40354a:	pop    ebp
  40354b:	ret    0x8
  40354e:	push   ebp
  40354f:	mov    ebp,esp
  403551:	sub    esp,0x44
  403554:	push   edi
  403555:	mov    eax,DWORD PTR [ebp+0xc]
  403558:	and    edi,DWORD PTR ds:0x448984
  40355e:	mov    DWORD PTR [ebp-0x10],eax
  403561:	mov    DWORD PTR ds:0x44e424,0x11
  40356b:	cmp    DWORD PTR ds:0x44e424,0x0
  403572:	je     0x4035af
  403578:	cmp    DWORD PTR ds:0x44e424,0x1d
  40357f:	jne    0x403595
  403585:	push   0x4107d0
  40358a:	push   0x4107e6
  40358f:	call   DWORD PTR ds:0x44334c
  403595:	mov    eax,ds:0x44e424
  40359a:	dec    eax
  40359b:	mov    ds:0x44e424,eax
  4035a0:	jmp    0x40356b
  4035a5:	xor    DWORD PTR ds:0x44b6dc,0x5830
  4035af:	mov    eax,DWORD PTR [ebp+0x8]
  4035b2:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4035b9:	mov    edi,DWORD PTR ds:0x44b6d0
  4035bf:	xor    DWORD PTR ds:0x44b6e0,edi
  4035c5:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  4035cc:	xor    edx,DWORD PTR ds:0x424837
  4035d2:	mov    edx,DWORD PTR [ebp+0x8]
  4035d5:	and    edi,edi
  4035d7:	jmp    0x40373c
  4035dc:	loopne 0x4035cc
  4035de:	enter  0xcaef,0xfd
  4035e2:	sti    
  4035e3:	in     eax,0xa8
  4035e5:	cmp    eax,edi
  4035e7:	jg     0x4035ca
  4035e9:	xor    esi,DWORD PTR [edx+0x7c0476a3]
  4035ef:	jl     0x403625
  4035f1:	jg     0x40366f
  4035f3:	jl     0x403604
  4035f5:	lea    ecx,[esi+eiz*1]
  4035f8:	dec    ebp
  4035f9:	adc    al,0x51
  4035fb:	mov    ch,0x3c
  4035fd:	or     eax,0x2190469e
  403602:	rcl    ebx,cl
  403604:	sti    
  403605:	pop    esp
  403606:	and    esp,eax
  403608:	lods   al,BYTE PTR ds:[esi]
  403609:	mov    edi,ss
  40360b:	shl    DWORD PTR [edx-0x39],1
  40360e:	js     0x4035d6
  403610:	iret   
  403611:	cmp    dh,BYTE PTR [edx-0x6e6d559a]
  403617:	sbb    al,BYTE PTR [edx]
  403619:	lods   al,BYTE PTR ds:[esi]
  40361a:	lods   al,BYTE PTR ds:[esi]
  40361b:	xchg   BYTE PTR [ebp-0x7a],cl
  40361e:	imul   ebp,DWORD PTR [esi-0x56],0x5c
  403622:	cmp    esi,DWORD PTR [ebp+0x7a]
  403625:	or     ah,dh
  403627:	jb     0x403671
  403629:	adc    ebx,DWORD PTR [edx-0x42605829]
  40362f:	cdq    
  403630:	lods   eax,DWORD PTR ds:[esi]
  403631:	xor    al,0xa3
  403633:	xchg   ecx,eax
  403634:	test   DWORD PTR [eax+0x5a781f5d],0xe386985f
  40363e:	cwde   
  40363f:	pop    edx
  403640:	and    DWORD PTR [ebx],0x3a0da76e
  403646:	nop
  403647:	jmp    0x40366c
  403649:	pop    edx
  40364a:	mov    bh,0xd6
  40364c:	lahf   
  40364d:	cmc    
  40364e:	xor    ebp,DWORD PTR [edi]
  403650:	popa   
  403651:	jo     0x403658
  403653:	push   esp
  403654:	jmp    0x403644
  403656:	fild   WORD PTR [ecx]
  403658:	xor    ah,BYTE PTR [ebp-0x5b]
  40365b:	xchg   ebp,eax
  40365c:	sbb    DWORD PTR [esi],edx
  40365e:	and    BYTE PTR [eax-0x95e1cfd],bh
  403664:	mov    ebp,DWORD PTR [ecx+edi*2-0x17]
  403668:	push   es
  403669:	(bad)  
  40366a:	jecxz  0x4036df
  40366c:	or     eax,0x203d8d41
  403671:	mov    ebx,0xb5e2a392
  403676:	mov    eax,DWORD PTR [eax+0x4e]
  403679:	mov    eax,ds:0xdc6f601a
  40367e:	adc    DWORD PTR [ecx-0x6cabb01d],0xffffffb1
  403685:	int3   
  403686:	mov    ah,BYTE PTR [edx+ecx*8]
  403689:	outs   dx,BYTE PTR ds:[esi]
  40368a:	xchg   edx,ebx
  40368c:	adc    esp,DWORD PTR [edi-0x1fc92ef5]
  403692:	pop    edx
  403693:	dec    esi
  403694:	push   edx
  403695:	mov    tr3,esi
  403698:	cmp    eax,0x76de5bef
  40369d:	push   0x30efe987
  4036a2:	and    esi,DWORD PTR [ecx+0x6530ef51]
  4036a8:	jp     0x403669
  4036aa:	jns    0x403701
  4036ac:	rcl    DWORD PTR [esp+ecx*4-0x26],1
  4036b0:	adc    al,0xb9
  4036b2:	test   cl,0xe5
  4036b5:	std    
  4036b6:	xlat   BYTE PTR ds:[ebx]
  4036b7:	jb     0x403722
  4036b9:	sbb    dh,BYTE PTR [esi-0x76de401d]
  4036bf:	inc    eax
  4036c0:	dec    eax
  4036c1:	jo     0x403718
  4036c3:	test   al,0x50
  4036c5:	or     dl,BYTE PTR [ebx+0x4b]
  4036c8:	ins    DWORD PTR es:[edi],dx
  4036c9:	(bad)  
  4036ca:	ja     0x4036b8
  4036cc:	bound  ecx,QWORD PTR [eax]
  4036ce:	cmp    BYTE PTR [ebx+0x6d],bh
  4036d1:	ins    DWORD PTR es:[edi],dx
  4036d2:	out    dx,al
  4036d3:	sar    BYTE PTR [edi],1
  4036d5:	or     BYTE PTR [esi-0x62c9ca31],ah
  4036db:	jp     0x4036ea
  4036dd:	cmp    DWORD PTR [ecx-0x240e8d0d],ecx
  4036e3:	sub    DWORD PTR [ecx-0x208aba89],esp
  4036e9:	xchg   ecx,eax
  4036ea:	dec    esp
  4036eb:	xchg   BYTE PTR [ebx-0x36fe152d],dl
  4036f1:	mov    cl,0x44
  4036f3:	call   0x4ba93a9f
  4036f8:	fsub   DWORD PTR [edi]
  4036fa:	push   es
  4036fb:	inc    ecx
  4036fc:	test   DWORD PTR [edx],0xb07b34d3
  403702:	adc    BYTE PTR [edi],bh
  403704:	mov    ebx,0x7f0b485b
  403709:	sub    BYTE PTR ds:0xd8802069,0x3e
  403710:	lahf   
  403711:	or     BYTE PTR [edx-0x251eafdd],dh
  403717:	aaa    
  403718:	mov    eax,0xb2ac9eb2
  40371d:	ds add bh,ch
  403720:	es push 0xfaa143c9
  403726:	cs ins BYTE PTR es:[edi],dx
  403728:	push   ds
  403729:	(bad)  
  40372a:	fldl2t 
  40372c:	jmp    0x4036e6
  40372e:	cmc    
  40372f:	adc    al,0x82
  403731:	js     0x40373d
  403733:	outs   dx,DWORD PTR ds:[esi]
  403734:	test   edx,ebp
  403736:	ins    DWORD PTR es:[edi],dx
  403737:	and    BYTE PTR [edi-0x72],al
  40373a:	add    eax,0xc0458992
  40373f:	mov    eax,0x7510857
  403744:	xor    edx,eax
  403746:	mov    ecx,0x32729e
  40374b:	add    edx,ecx
  40374d:	adc    edi,DWORD PTR ds:0x448990
  403753:	mov    DWORD PTR [ebp-0x8],edx
  403756:	mov    edi,DWORD PTR ds:0x4489bc
  40375c:	mov    edx,DWORD PTR ds:0x4489c4
  403762:	sub    edx,edi
  403764:	xor    edi,DWORD PTR [edi+edx*1]
  403767:	mov    edx,DWORD PTR [ebp+0x8]
  40376a:	xor    edx,eax
  40376c:	not    edi
  40376e:	add    edx,ecx
  403770:	add    DWORD PTR ds:0x448984,ebx
  403776:	mov    DWORD PTR [ebp+0xc],edx
  403779:	and    DWORD PTR ds:0x424837,0x0
  403783:	mov    edx,DWORD PTR ds:0x424837
  403789:	inc    edx
  40378a:	mov    DWORD PTR ds:0x424837,edx
  403790:	cmp    DWORD PTR ds:0x424837,0x4
  403797:	jne    0x4037b0
  40379d:	push   0x41073f
  4037a2:	push   DWORD PTR [ebp-0x28]
  4037a5:	push   0x6880
  4037aa:	call   DWORD PTR ds:0x443350
  4037b0:	cmp    DWORD PTR ds:0x424837,0x3
  4037b7:	jne    0x4037cc
  4037bd:	xor    edx,edx
  4037bf:	xor    edx,DWORD PTR ds:0x424837
  4037c5:	inc    edx
  4037c6:	mov    DWORD PTR ds:0x424837,edx
  4037cc:	cmp    DWORD PTR ds:0x424837,0x1b
  4037d3:	jb     0x403783
  4037d9:	adc    edi,DWORD PTR ds:0x44b6cc
  4037df:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  4037e6:	adc    edi,DWORD PTR ds:0x4489a4
  4037ec:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  4037f3:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  4037fa:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  403801:	and    DWORD PTR ds:0x42483b,0x0
  40380b:	jmp    0x40381d
  403810:	mov    edx,DWORD PTR ds:0x42483b
  403816:	inc    edx
  403817:	mov    DWORD PTR ds:0x42483b,edx
  40381d:	cmp    DWORD PTR ds:0x42483b,0x1e
  403824:	jae    0x40386c
  40382a:	cmp    DWORD PTR ds:0x42483b,0xa
  403831:	jne    0x403847
  403837:	push   0x48af
  40383c:	push   0x400000
  403841:	call   DWORD PTR ds:0x443354
  403847:	cmp    DWORD PTR ds:0x42483b,0x9
  40384e:	jne    0x403861
  403854:	mov    edx,DWORD PTR ds:0x42483b
  40385a:	inc    edx
  40385b:	mov    DWORD PTR ds:0x42483b,edx
  403861:	jmp    0x403810
  403866:	or     DWORD PTR ds:0x448994,ecx
  40386c:	mov    DWORD PTR [ebp-0x34],0xf89c8530
  403873:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40387a:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  403881:	or     edi,edx
  403883:	mov    edx,DWORD PTR [ebp+0x8]
  403886:	mov    DWORD PTR ds:0x42484b,0x6ab7
  403890:	xor    edx,eax
  403892:	or     DWORD PTR ds:0x41075b,edx
  403898:	mov    edi,DWORD PTR [ebp-0x10]
  40389b:	add    edx,ecx
  40389d:	cmp    edi,edx
  40389f:	mov    DWORD PTR ds:0x448980,0x7f1d
  4038a9:	je     0x40511b
  4038af:	mov    DWORD PTR ds:0x424837,0x4e02
  4038b9:	push   ebx
  4038ba:	mov    DWORD PTR ds:0x44b6cc,0x557d
  4038c4:	jmp    0x4050f6
  4038c9:	mov    edx,DWORD PTR [ebp-0x8]
  4038cc:	and    DWORD PTR ds:0x44e41c,0x0
  4038d6:	jmp    0x4038e8
  4038db:	mov    edi,DWORD PTR ds:0x44e41c
  4038e1:	inc    edi
  4038e2:	mov    DWORD PTR ds:0x44e41c,edi
  4038e8:	cmp    DWORD PTR ds:0x44e41c,0x10
  4038ef:	jae    0x403921
  4038f5:	cmp    DWORD PTR ds:0x44e41c,0x19
  4038fc:	jne    0x403912
  403902:	push   0x7f28
  403907:	push   0x230d
  40390c:	call   DWORD PTR ds:0x443358
  403912:	jmp    0x4038db
  403917:	mov    DWORD PTR ds:0x448984,0x3377
  403921:	mov    edi,DWORD PTR [ebp-0x10]
  403924:	or     DWORD PTR ds:0x44b6e4,0x66ab
  40392e:	jmp    0x403a93
  403933:	std    
  403934:	xor    al,0x25
  403936:	mov    eax,ds:0x487d7d25
  40393b:	add    al,0x98
  40393d:	test   al,0x7f
  40393f:	push   cs
  403940:	addr16 aam 0x24
  403943:	into   
  403944:	pop    es
  403945:	jl     0x4039c3
  403947:	xor    al,0x7f
  403949:	jl     0x4039c7
  40394b:	in     eax,dx
  40394c:	clc    
  40394d:	into   
  40394e:	outs   dx,DWORD PTR ds:[esi]
  40394f:	outs   dx,BYTE PTR ds:[esi]
  403950:	fwait
  403951:	aaa    
  403952:	lods   al,BYTE PTR ds:[esi]
  403953:	pop    ds
  403954:	push   ebp
  403955:	jmp    0x403995
  403957:	cmp    esp,DWORD PTR [edx]
  403959:	pop    ds
  40395a:	popaw  
  40395c:	sub    bh,BYTE PTR [edi-0x3c]
  40395f:	imul   edi,DWORD PTR [edi-0x67],0x7caa84a7
  403966:	mov    bh,BYTE PTR [esi]
  403968:	sbb    esi,esi
  40396a:	mov    ds:0x2edc6a39,al
  40396f:	repnz imul esi,DWORD PTR [edi-0xa],0x35cb0091
  403977:	dec    ebx
  403978:	jle    0x40392e
  40397a:	gs pusha 
  40397c:	push   esi
  40397d:	pop    ss
  40397e:	pop    ebp
  40397f:	call   0x4fedfd7d
  403984:	popa   
  403985:	dec    BYTE PTR [ebp-0x52]
  403988:	mov    esi,0x8235196b
  40398d:	dec    edi
  40398e:	outs   dx,DWORD PTR ds:[esi]
  40398f:	in     eax,dx
  403990:	mov    ah,0xc6
  403992:	test   BYTE PTR [esi+0x6a5b9985],dh
  403998:	pop    ebx
  403999:	jne    0x4039f9
  40399b:	and    dh,BYTE PTR [ebx+0x4f]
  40399e:	mov    BYTE PTR [ebx+0x2d97ee09],bl
  4039a4:	inc    ebx
  4039a5:	adc    cl,BYTE PTR [edi]
  4039a7:	sub    DWORD PTR [ebx-0x27ab163a],esp
  4039ad:	dec    edi
  4039ae:	fwait
  4039af:	xchg   ch,ch
  4039b1:	inc    ebp
  4039b2:	add    cl,ch
  4039b4:	(bad)  
  4039b5:	xlat   BYTE PTR ds:[ebx]
  4039b6:	enter  0x6d0d,0x3f
  4039ba:	les    esi,FWORD PTR [ebx]
  4039bc:	xor    cl,bh
  4039be:	push   esp
  4039bf:	fwait
  4039c0:	push   es
  4039c1:	pop    ebx
  4039c2:	jle    0x4039c8
  4039c4:	sub    BYTE PTR [edi+0x4ea4a570],dl
  4039ca:	inc    ebx
  4039cb:	push   es
  4039cc:	inc    ebp
  4039cd:	xchg   edi,eax
  4039ce:	dec    edi
  4039cf:	ret    
  4039d0:	or     al,0xbe
  4039d2:	xchg   edx,eax
  4039d3:	cmp    DWORD PTR [esi],ecx
  4039d5:	inc    eax
  4039d6:	rep ins DWORD PTR es:[edi],dx
  4039d8:	int    0xb2
  4039da:	sti    
  4039db:	inc    ebx
  4039dc:	lods   eax,DWORD PTR ds:[esi]
  4039dd:	call   0x95d6:0x44a5f989
  4039e4:	inc    ecx
  4039e5:	push   ebp
  4039e6:	(bad)  
  4039e7:	std    
  4039e8:	push   0x366e3475
  4039ed:	add    DWORD PTR [ebx],ebx
  4039ef:	(bad)  
  4039f0:	pop    edi
  4039f1:	clc    
  4039f2:	enter  0xd932,0xea
  4039f6:	xchg   ebp,eax
  4039f8:	pop    edi
  4039f9:	in     eax,dx
  4039fa:	ss retf 0x7874
  4039fe:	outs   dx,DWORD PTR ds:[esi]
  4039ff:	sbb    eax,0x523001e8
  403a04:	pop    eax
  403a05:	inc    edx
  403a06:	mov    ds,WORD PTR fs:[esi]
  403a09:	dec    eax
  403a0a:	(bad)
  403a0e:	push   esi
  403a0f:	mov    eax,0xdb63dbc5
  403a14:	mov    ds:0xf3f3c6b5,al
  403a19:	fwait
  403a1a:	dec    eax
  403a1b:	outs   dx,BYTE PTR ds:[esi]
  403a1c:	iret   
  403a1d:	cmp    DWORD PTR [eax+0x167d21fc],ecx
  403a23:	shl    DWORD PTR [ebx+0x1e],0x3d
  403a27:	fldenv [ecx-0x657a889]
  403a2d:	or     ch,BYTE PTR [ecx-0x4e]
  403a30:	dec    ebp
  403a31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a32:	push   cs
  403a33:	test   DWORD PTR [eax],edi
  403a35:	mov    eax,ds:0xe19e0ee3
  403a3a:	xchg   ebx,eax
  403a3b:	cmc    
  403a3c:	or     bh,BYTE PTR [eax-0x6da421ef]
  403a42:	inc    edi
  403a43:	mov    ebp,0x78960659
  403a48:	je     0x403a4d
  403a4a:	ret    
  403a4b:	jo     0x403abd
  403a4d:	mov    cl,0x9d
  403a4f:	push   ecx
  403a50:	dec    esp
  403a51:	xchg   BYTE PTR [edx+0xa],ch
  403a54:	sbb    ebx,DWORD PTR [edi+0x5a]
  403a57:	xor    DWORD PTR ds:0x61a7a543,esp
  403a5d:	les    esi,FWORD PTR [ecx-0x2114edab]
  403a63:	in     al,0x6f
  403a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a66:	imul   esp,DWORD PTR [ecx],0xffffffa6
  403a69:	push   ebx
  403a6a:	jle    0x403a9b
  403a6c:	mov    esi,0x6ae97727
  403a71:	lea    edi,[esi+edi*2-0x13626967]
  403a78:	dec    esi
  403a79:	jno    0x403a7f
  403a7b:	mov    eax,0x88979054
  403a80:	jae    0x403ae8
  403a82:	jl     0x403a1d
  403a84:	(bad)  
  403a85:	outs   dx,DWORD PTR ds:[esi]
  403a86:	fsubr  QWORD PTR [eax+0xa9fd9f1]
  403a8c:	adc    DWORD PTR [ebp+0x65e9d873],ebx
  403a92:	fsubr  DWORD PTR [ebx]
  403a94:	cli    
  403a95:	adc    DWORD PTR ds:0x44e410,0x1ab0
  403a9f:	mov    edx,DWORD PTR [ebp-0x4]
  403aa2:	xor    DWORD PTR ds:0x44b6e4,0x35da
  403aac:	xor    edx,eax
  403aae:	xor    DWORD PTR ds:0x44b6e8,0x513b
  403ab8:	add    edx,ecx
  403aba:	mov    DWORD PTR ds:0x44e414,0x7aea
  403ac4:	cmp    edi,edx
  403ac6:	mov    DWORD PTR ds:0x41073f,0x2e05
  403ad0:	jb     0x40511a
  403ad6:	xor    edx,0x3e56
  403adc:	mov    edx,DWORD PTR [ebp-0x28]
  403adf:	mov    edi,DWORD PTR [ebp-0x4]
  403ae2:	xor    edx,eax
  403ae4:	and    DWORD PTR ds:0x448980,0x0
  403aee:	jmp    0x403b02
  403af3:	xor    ebx,ebx
  403af5:	xor    ebx,DWORD PTR ds:0x448980
  403afb:	inc    ebx
  403afc:	mov    DWORD PTR ds:0x448980,ebx
  403b02:	cmp    DWORD PTR ds:0x448980,0x16
  403b09:	jae    0x403b9b
  403b0f:	cmp    DWORD PTR ds:0x448980,0xd
  403b16:	jne    0x403b25
  403b1c:	push   DWORD PTR [ebp-0x18]
  403b1f:	call   DWORD PTR ds:0x443008
  403b25:	cmp    DWORD PTR ds:0x448980,0xc
  403b2c:	jne    0x403b41
  403b32:	xor    ebx,ebx
  403b34:	xor    ebx,DWORD PTR ds:0x448980
  403b3a:	inc    ebx
  403b3b:	mov    DWORD PTR ds:0x448980,ebx
  403b41:	jmp    0x403af3
  403b46:	and    DWORD PTR ds:0x448980,0x0
  403b50:	jmp    0x403b64
  403b55:	xor    ebx,ebx
  403b57:	add    ebx,DWORD PTR ds:0x448980
  403b5d:	inc    ebx
  403b5e:	mov    DWORD PTR ds:0x448980,ebx
  403b64:	cmp    DWORD PTR ds:0x448980,0x19
  403b6b:	jae    0x403b9b
  403b71:	cmp    DWORD PTR ds:0x448980,0x1e
  403b78:	jne    0x403b96
  403b7e:	push   DWORD PTR [ebp-0x1c]
  403b81:	push   0x4801
  403b86:	push   0x66a1
  403b8b:	push   0x3965
  403b90:	call   DWORD PTR ds:0x4430d4
  403b96:	jmp    0x403b55
  403b9b:	xor    edi,eax
  403b9d:	mov    ebx,DWORD PTR ds:0x4489ac
  403ba3:	mov    ebx,DWORD PTR [ebx]
  403ba5:	sbb    DWORD PTR ds:0x42482f,ebx
  403bab:	add    edi,ecx
  403bad:	jmp    0x403d12
  403bb2:	jno    0x403b37
  403bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bb5:	imul   esp,DWORD PTR [ebp+0x727dd96d],0x2a
  403bbc:	pop    esi
  403bbd:	clc    
  403bbe:	ja     0x403bab
  403bc0:	fs pop es
  403bc2:	xchg   BYTE PTR [esi],al
  403bc4:	jl     0x403c42
  403bc6:	xor    al,0x7f
  403bc8:	jl     0x403c46
  403bca:	pop    eax
  403bcb:	sub    BYTE PTR [ebx-0x4f],dl
  403bce:	retf   
  403bcf:	lods   al,BYTE PTR ds:[esi]
  403bd0:	dec    ebx
  403bd1:	add    eax,0xcd9983d5
  403bd6:	pop    ebx
  403bd7:	jnp    0x403c39
  403bd9:	mov    ds:0xb0562e69,eax
  403bde:	add    BYTE PTR [esi+0x55],ah
  403be1:	xchg   BYTE PTR [ecx],cl
  403be3:	xor    ebp,DWORD PTR [eax+eiz*2+0xd]
  403be7:	pushf  
  403be8:	cmp    DWORD PTR [eax+0x132c80ce],ebp
  403bee:	cs xchg edi,eax
  403bf0:	jle    0x403c32
  403bf2:	sbb    BYTE PTR [edi+0x52],0xb
  403bf6:	ins    DWORD PTR es:[edi],dx
  403bf7:	cmp    eax,0xd6cf22a
  403bfc:	outs   dx,BYTE PTR ds:[esi]
  403bfd:	cmp    DWORD PTR [ecx-0x3c7bda5b],esi
  403c03:	mov    eax,0xab0dedab
  403c08:	add    BYTE PTR [edi+edi*1+0x7c745158],dh
  403c0f:	rcr    BYTE PTR [esp+eax*1+0x60],1
  403c13:	jns    0x403c52
  403c15:	(bad)  
  403c16:	out    0xda,eax
  403c18:	sbb    ecx,0xdddda716
  403c1e:	rol    BYTE PTR [esi],1
  403c20:	xor    BYTE PTR [eax+esi*1-0x5823af74],ah
  403c27:	sub    DWORD PTR [esi+0x14efc5d2],esp
  403c2d:	fs mov ebx,0xa078b5bd
  403c33:	fist   WORD PTR [edx]
  403c35:	iret   
  403c36:	fwait
  403c37:	push   eax
  403c38:	or     al,0x25
  403c3a:	mov    WORD PTR [eax+eiz*1-0x2c],?
  403c3e:	(bad)  
  403c3f:	jge    0x403caf
  403c41:	enter  0x9c3e,0xd3
  403c45:	aam    0x9f
  403c47:	sub    al,0x28
  403c49:	jo     0x403cae
  403c4b:	ret    
  403c4c:	int    0xb4
  403c4e:	sub    DWORD PTR [ecx],esi
  403c50:	push   eax
  403c51:	mov    edx,0xef340d3
  403c56:	call   0xe861dd17
  403c5b:	push   0xffffffef
  403c5d:	in     al,0x86
  403c5f:	jmp    0x861a6081
  403c64:	and    eax,0x49575d55
  403c69:	mov    eax,0xbd23291f
  403c6e:	cmc    
  403c6f:	neg    DWORD PTR [edi+eax*2+0x1945a173]
  403c76:	and    BYTE PTR [ebx-0x4f5ed372],bl
  403c7c:	loopne 0x403c5c
  403c7e:	adc    edx,eax
  403c80:	xchg   DWORD PTR [edi+0x6336a9db],edi
  403c86:	enter  0x18e0,0x68
  403c8a:	mov    dl,BYTE PTR [edx+esi*4-0x45]
  403c8e:	(bad)  [esi-0x20]
  403c91:	adc    eax,0x6a2d6ecf
  403c96:	aad    0xb1
  403c98:	cld    
  403c99:	and    al,0xb1
  403c9b:	inc    edx
  403c9c:	jo     0x403cad
  403c9e:	inc    esp
  403c9f:	clc    
  403ca0:	jae    0x403c69
  403ca2:	fimul  WORD PTR [edi+0x1a]
  403ca5:	loopne 0x403c75
  403ca7:	sbb    DWORD PTR [eax],ecx
  403ca9:	in     eax,0xa0
  403cab:	cmp    edx,esi
  403cad:	mov    ds:0xe811d932,al
  403cb2:	adc    al,0x97
  403cb4:	jle    0x403d06
  403cb6:	sbb    eax,esp
  403cb8:	pushf  
  403cb9:	std    
  403cba:	icebp  
  403cbb:	mov    ebx,0xb56d47f2
  403cc0:	test   al,0x23
  403cc2:	call   FWORD PTR [edi+ebp*2]
  403cc5:	and    al,0xe8
  403cc7:	imul   ebx,DWORD PTR [esi],0x31eec830
  403ccd:	nop
  403cce:	pop    ebp
  403ccf:	push   edx
  403cd0:	inc    esi
  403cd1:	ror    DWORD PTR [ebx],0xbb
  403cd4:	icebp  
  403cd5:	inc    ebp
  403cd6:	pop    ebx
  403cd7:	xor    ebp,DWORD PTR [ebx+0x49]
  403cda:	mul    BYTE PTR [ecx+0x55283f4]
  403ce0:	leave  
  403ce1:	mov    ah,0xae
  403ce3:	adc    DWORD PTR [edx+0xd31d3df],eax
  403ce9:	adc    esi,DWORD PTR [eax]
  403ceb:	push   cs
  403cec:	enter  0xcd1e,0xa6
  403cf0:	cmp    ch,BYTE PTR [esi-0x63fb7a2b]
  403cf6:	cmp    al,0x4
  403cf8:	stos   DWORD PTR es:[edi],eax
  403cf9:	loopne 0x403d16
  403cfb:	lahf   
  403cfc:	sub    al,0xac
  403cfe:	adc    eax,0x683ae957
  403d03:	mov    al,0xf2
  403d05:	test   eax,0x77fe173d
  403d0a:	daa    
  403d0b:	push   ecx
  403d0c:	(bad)  
  403d0d:	adc    cl,BYTE PTR [esi]
  403d0f:	sti    
  403d10:	dec    ebx
  403d11:	fs add edx,ecx
  403d14:	and    DWORD PTR ds:0x42483b,0x0
  403d1e:	mov    ebx,DWORD PTR ds:0x42483b
  403d24:	inc    ebx
  403d25:	mov    DWORD PTR ds:0x42483b,ebx
  403d2b:	cmp    DWORD PTR ds:0x42483b,0x1a
  403d32:	jne    0x403d41
  403d38:	push   DWORD PTR [ebp-0xc]
  403d3b:	call   DWORD PTR ds:0x44300c
  403d41:	cmp    DWORD PTR ds:0x42483b,0x12
  403d48:	jb     0x403d1e
  403d4e:	add    ebx,DWORD PTR ds:0x44898c
  403d54:	imul   edx,edi
  403d57:	mov    edi,DWORD PTR [ebp-0x8]
  403d5a:	mov    ebx,DWORD PTR [ebp-0x10]
  403d5d:	sbb    DWORD PTR ds:0x44b6e0,0x3f1a
  403d67:	sub    ebx,edi
  403d69:	cmp    ebx,edx
  403d6b:	ja     0x403d93
  403d71:	add    edx,DWORD PTR ds:0x41074b
  403d77:	mov    edx,DWORD PTR [ebp-0x4]
  403d7a:	xor    edx,eax
  403d7c:	not    DWORD PTR ds:0x44e40c
  403d82:	add    edx,ecx
  403d84:	mov    DWORD PTR ds:0x44e418,0x3a6f
  403d8e:	jmp    0x4047a2
  403d93:	movzx  ebx,WORD PTR ds:0x44b6d4
  403d9a:	or     DWORD PTR ds:0x448990,ebx
  403da0:	mov    edx,DWORD PTR [ebp-0x2c]
  403da3:	mov    DWORD PTR ds:0x448994,0x16
  403dad:	cmp    DWORD PTR ds:0x448994,0x0
  403db4:	je     0x403e6e
  403dba:	cmp    DWORD PTR ds:0x448994,0x20
  403dc1:	jne    0x403dd5
  403dc7:	push   DWORD PTR [ebp-0x18]
  403dca:	push   0x4107a9
  403dcf:	call   DWORD PTR ds:0x44335c
  403dd5:	mov    ebx,DWORD PTR ds:0x448994
  403ddb:	dec    ebx
  403ddc:	mov    DWORD PTR ds:0x448994,ebx
  403de2:	jmp    0x403dad
  403de7:	and    DWORD PTR ds:0x424837,0x0
  403df1:	jmp    0x403e03
  403df6:	mov    ebx,DWORD PTR ds:0x424837
  403dfc:	inc    ebx
  403dfd:	mov    DWORD PTR ds:0x424837,ebx
  403e03:	cmp    DWORD PTR ds:0x424837,0x1c
  403e0a:	jae    0x403e6e
  403e10:	cmp    DWORD PTR ds:0x424837,0xc
  403e17:	jne    0x403e4f
  403e1d:	push   DWORD PTR [ebp-0x10]
  403e20:	push   0x1816
  403e25:	push   DWORD PTR [ebp-0x28]
  403e28:	push   0x7e95
  403e2d:	push   0x4109
  403e32:	push   0x336d
  403e37:	push   0x1411
  403e3c:	push   DWORD PTR [ebp-0x20]
  403e3f:	push   0x7b8b
  403e44:	push   0x3268
  403e49:	call   DWORD PTR ds:0x4430d8
  403e4f:	cmp    DWORD PTR ds:0x424837,0xb
  403e56:	jne    0x403e69
  403e5c:	mov    ebx,DWORD PTR ds:0x424837
  403e62:	inc    ebx
  403e63:	mov    DWORD PTR ds:0x424837,ebx
  403e69:	jmp    0x403df6
  403e6e:	mov    edi,DWORD PTR [ebp-0x4]
  403e71:	xor    edx,eax
  403e73:	xor    edi,eax
  403e75:	add    edi,ecx
  403e77:	add    edx,ecx
  403e79:	imul   edx,edi
  403e7c:	mov    edi,DWORD PTR [ebp-0x8]
  403e7f:	mov    ebx,DWORD PTR [ebp-0x10]
  403e82:	sub    ebx,edi
  403e84:	cmp    ebx,edx
  403e86:	ja     0x403e94
  403e8c:	mov    edx,DWORD PTR [ebp-0x28]
  403e8f:	jmp    0x40462f
  403e94:	mov    edx,DWORD PTR [ebp-0x30]
  403e97:	mov    edi,DWORD PTR [ebp-0x4]
  403e9a:	jmp    0x403fff
  403e9f:	dec    ebp
  403ea0:	xchg   esp,eax
  403ea1:	(bad)  
  403ea2:	call   0xa99e390c
  403ea7:	sub    ah,ah
  403ea9:	adc    al,0xc3
  403eab:	inc    edi
  403eac:	or     eax,0x195e3b7e
  403eb1:	jl     0x403f2f
  403eb3:	xor    al,0x7f
  403eb5:	jl     0x403f33
  403eb7:	xchg   ecx,eax
  403eb8:	inc    edx
  403eb9:	and    bl,BYTE PTR [ebx-0x3b]
  403ebc:	iret   
  403ebd:	(bad)  
  403ebe:	mov    edi,0x482cda14
  403ec3:	sbb    dl,dh
  403ec5:	mov    edx,0x98b48cad
  403eca:	sub    BYTE PTR [ebx-0x6e],dl
  403ecd:	fldenv [edx]
  403ecf:	arpl   WORD PTR [ebx+0x27bbadae],sp
  403ed5:	push   es
  403ed6:	push   ebp
  403ed7:	leave  
  403ed8:	mov    ah,0x77
  403eda:	in     eax,0x42
  403edc:	mov    bl,0x80
  403ede:	adc    eax,0x51a0ba28
  403ee3:	stos   DWORD PTR es:[edi],eax
  403ee4:	out    dx,eax
  403ee5:	jns    0x403eb0
  403ee7:	cmp    esp,DWORD PTR [ecx-0x57857e00]
  403eed:	push   eax
  403eee:	call   0xfb712e0b
  403ef3:	fadd   DWORD PTR [edi]
  403ef5:	jp     0x403ee7
  403ef7:	loop   0x403f04
  403ef9:	aam    0xca
  403efb:	arpl   WORD PTR [esi],di
  403efd:	into   
  403efe:	fdivr  st(6),st
  403f00:	test   DWORD PTR [edi],0x964369d8
  403f06:	inc    ebp
  403f07:	sti    
  403f08:	mov    ds:0x44888a5b,al
  403f0d:	cmp    ebx,ebx
  403f0f:	ss inc esi
  403f11:	push   ds
  403f12:	and    ebx,DWORD PTR [eax-0x2981f88a]
  403f18:	test   DWORD PTR [edx-0x4],eax
  403f1b:	nop
  403f1c:	sti    
  403f1d:	push   0x7032c3d
  403f22:	add    ecx,DWORD PTR [esi+ebp*8]
  403f25:	mov    WORD PTR [esi-0x7180c07f],gs
  403f2b:	or     DWORD PTR [ebx],eax
  403f2d:	sbb    al,0xde
  403f2f:	push   ds
  403f30:	mov    edi,0x8589e42e
  403f35:	(bad)  
  403f36:	push   ebp
  403f37:	adc    ecx,DWORD PTR [ecx+eiz*8-0x51]
  403f3b:	and    bh,dh
  403f3d:	adc    eax,0xf3e7e2ef
  403f42:	and    edi,DWORD PTR [esi]
  403f44:	dec    eax
  403f45:	adc    DWORD PTR [edi-0x63],ebx
  403f48:	int3   
  403f49:	inc    esi
  403f4a:	(bad)  
  403f4b:	out    0xa5,al
  403f4d:	mov    eax,0x443b9538
  403f52:	iret   
  403f53:	test   DWORD PTR [edx+0x1525caa5],ecx
  403f59:	mov    ah,0x95
  403f5b:	cld    
  403f5c:	pop    ss
  403f5d:	adc    eax,0xcc565a36
  403f62:	dec    edi
  403f63:	push   cs
  403f64:	mov    al,0x2
  403f66:	mov    eax,0x8f34e66f
  403f6b:	xchg   esp,eax
  403f6c:	cli    
  403f6d:	jne    0x403f0c
  403f6f:	repz aam 0xa9
  403f72:	dec    eax
  403f73:	add    eax,edi
  403f75:	pop    ds
  403f76:	rcl    BYTE PTR [ecx+esi*4-0x4372311],cl
  403f7d:	or     al,0x1e
  403f7f:	jnp    0x403ff8
  403f81:	outs   dx,DWORD PTR ds:[esi]
  403f82:	dec    eax
  403f83:	cmp    al,0x0
  403f85:	inc    ecx
  403f86:	add    ebp,DWORD PTR [ecx]
  403f88:	iret   
  403f89:	inc    edi
  403f8a:	sbb    DWORD PTR [ebp+0x45],0xddc097bd
  403f91:	enter  0x8105,0x1e
  403f95:	sub    eax,0xb022814f
  403f9a:	and    dh,al
  403f9c:	test   eax,0xf44e772a
  403fa1:	out    0x87,al
  403fa3:	stc    
  403fa4:	jne    0x403f3a
  403fa6:	sub    dl,BYTE PTR [edi+0xd340eae]
  403fac:	int3   
  403fad:	mov    ds:0x6df0602a,eax
  403fb2:	into   
  403fb3:	rol    DWORD PTR [edi],cl
  403fb5:	sti    
  403fb6:	jno    0x403f90
  403fb8:	call   0xdb2dd517
  403fbd:	cdq    
  403fbe:	sub    al,0xd4
  403fc0:	div    BYTE PTR [ebp+0x6d]
  403fc3:	add    DWORD PTR [edx],edi
  403fc5:	push   DWORD PTR [ebx-0x26]
  403fc8:	inc    ebx
  403fc9:	push   ss
  403fca:	stos   DWORD PTR es:[edi],eax
  403fcb:	xchg   DWORD PTR [ecx],eax
  403fcd:	xor    al,BYTE PTR ds:0x73507fee
  403fd3:	aaa    
  403fd4:	jmp    0x66db278c
  403fd9:	add    DWORD PTR [edi-0x52],ecx
  403fdc:	fs jle 0x403fec
  403fdf:	pop    edi
  403fe0:	jb     0x404055
  403fe2:	call   0xac31cdbd
  403fe7:	xchg   edi,edi
  403fe9:	inc    ecx
  403fea:	jge    0x40401f
  403fec:	call   0xf33d:0x76298ad7
  403ff3:	retf   0x6447
  403ff6:	fadd   st,st(4)
  403ff8:	mov    al,0x93
  403ffa:	jnp    0x404062
  403ffc:	and    al,0xa8
  403ffe:	sub    BYTE PTR [ebx],dh
  404000:	shl    BYTE PTR [ebx],1
  404002:	clc    
  404003:	add    edi,ecx
  404005:	add    edx,ecx
  404007:	imul   edx,edi
  40400a:	mov    edi,DWORD PTR [ebp-0x8]
  40400d:	mov    ebx,DWORD PTR [ebp-0x10]
  404010:	sub    ebx,edi
  404012:	cmp    ebx,edx
  404014:	ja     0x404022
  40401a:	mov    edx,DWORD PTR [ebp-0x2c]
  40401d:	jmp    0x40462f
  404022:	mov    edx,DWORD PTR [ebp-0x34]
  404025:	mov    edi,DWORD PTR [ebp-0x4]
  404028:	xor    edx,eax
  40402a:	xor    edi,eax
  40402c:	add    edi,ecx
  40402e:	add    edx,ecx
  404030:	imul   edx,edi
  404033:	mov    edi,DWORD PTR [ebp-0x8]
  404036:	mov    ebx,DWORD PTR [ebp-0x10]
  404039:	sub    ebx,edi
  40403b:	cmp    ebx,edx
  40403d:	jmp    0x4041a2
  404042:	sbb    DWORD PTR [edx+ecx*2],esi
  404045:	cs pop ebp
  404047:	mov    ds:0xe1ed77d,al
  40404c:	cmovae ebx,esi
  40404f:	leave  
  404050:	cmc    
  404051:	aam    0x16
  404053:	sbb    edi,DWORD PTR [esp+edi*2+0x34]
  404057:	jg     0x4040d5
  404059:	jl     0x404095
  40405b:	xlat   BYTE PTR ds:[ebx]
  40405c:	mov    bl,0xdb
  40405e:	xor    eax,0x370f78f0
  404063:	je     0x404090
  404065:	push   ebx
  404066:	inc    ebx
  404067:	xor    dl,bl
  404069:	loop   0x4040c4
  40406b:	dec    edx
  40406c:	inc    eax
  40406d:	cmp    BYTE PTR [edi],dl
  40406f:	dec    esp
  404070:	daa    
  404071:	fwait
  404072:	nop
  404073:	popa   
  404074:	mov    gs,WORD PTR [esi-0x18]
  404077:	test   al,0xd0
  404079:	push   0x18b40b4b
  40407e:	sahf   
  40407f:	cvtdq2ps xmm5,xmm4
  404082:	test   DWORD PTR [edx],edi
  404084:	sahf   
  404085:	dec    edx
  404086:	xor    eax,0xbe133ac5
  40408b:	mov    DWORD PTR [ebx-0x3e3ce29],0x6921b4e4
  404095:	(bad)  
  404097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404098:	call   0x27c1:0xa83b30bf
  40409f:	and    BYTE PTR [esi-0x7c],bh
  4040a2:	mov    bh,0x37
  4040a4:	mov    ds:0xf2b2b1d9,eax
  4040a9:	sub    al,0x43
  4040ab:	jbe    0x404094
  4040ad:	adc    eax,0x6404604b
  4040b2:	xchg   esp,eax
  4040b3:	xchg   ebx,eax
  4040b4:	jmp    0x20487c0a
  4040b9:	adc    al,0x27
  4040bb:	add    eax,esp
  4040bd:	xchg   esp,eax
  4040be:	and    dl,BYTE PTR [ebx-0x2598081]
  4040c4:	stc    
  4040c5:	or     esi,DWORD PTR [eax-0x6d]
  4040c8:	sbb    dh,BYTE PTR [ecx+0x4b42dbcf]
  4040ce:	int3   
  4040cf:	sub    al,0xf1
  4040d1:	aam    0xa7
  4040d3:	pushf  
  4040d4:	and    ecx,edx
  4040d6:	adc    BYTE PTR [esi-0x71],0x8a
  4040da:	arpl   WORD PTR [ebp+0x5ba2c1c5],sp
  4040e0:	dec    esp
  4040e1:	and    al,0xa0
  4040e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040e4:	(bad)  
  4040e5:	mov    edi,0x3344d17b
  4040ea:	in     eax,0xde
  4040ec:	and    DWORD PTR [ecx-0x168f9124],edi
  4040f2:	xor    DWORD PTR [ebx],esi
  4040f4:	dec    esi
  4040f5:	push   eax
  4040f6:	retf   
  4040f7:	lock test eax,0x7c3df724
  4040fd:	inc    edx
  4040fe:	mov    al,ds:0x40a4819c
  404103:	push   ss
  404104:	mov    eax,ds:0xeafe63b0
  404109:	mov    dl,0xda
  40410b:	inc    eax
  40410c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40410d:	cli    
  40410e:	in     eax,0xb1
  404110:	xlat   BYTE PTR ds:[ebx]
  404111:	fwait
  404112:	pusha  
  404113:	into   
  404114:	fdivr  st,st(2)
  404116:	inc    edi
  404117:	imul   DWORD PTR [ecx+0x7eee3a4f]
  40411d:	add    edi,esi
  40411f:	inc    esp
  404120:	sbb    al,0xec
  404122:	(bad)  
  404123:	bound  ebx,QWORD PTR [esi]
  404125:	cld    
  404126:	or     bh,BYTE PTR [ecx+0x32170ec]
  40412c:	pushf  
  40412d:	ss inc esp
  40412f:	xchg   ah,bh
  404131:	aad    0x40
  404133:	retf   
  404134:	jne    0x4040bd
  404136:	cli    
  404137:	push   edx
  404138:	icebp  
  404139:	aas    
  40413a:	nop
  40413b:	xor    DWORD PTR [edx],esi
  40413d:	sar    BYTE PTR [edi],cl
  40413f:	cmp    DWORD PTR [ebx],ebx
  404141:	inc    ebp
  404142:	mov    cl,0x37
  404144:	loope  0x4040f3
  404146:	mov    bh,0x17
  404148:	in     al,dx
  404149:	fbstp  TBYTE PTR [ecx+edi*2]
  40414c:	retf   0x9e29
  40414f:	mov    ah,0x36
  404151:	cmc    
  404152:	daa    
  404153:	(bad)  
  404154:	pop    ebx
  404155:	in     al,dx
  404156:	clc    
  404157:	pop    ecx
  404158:	in     al,dx
  404159:	xor    BYTE PTR [edx-0x5c],dl
  40415c:	std    
  40415d:	ja     0x4040fc
  40415f:	push   ebx
  404160:	(bad)  
  404161:	clc    
  404162:	and    DWORD PTR [ebx-0x24],edi
  404165:	sbb    edx,DWORD PTR [ebp-0x79558938]
  40416b:	gs jmp 0x7bfa:0x26f5de6a
  404173:	in     al,0x28
  404175:	aad    0x2
  404177:	adc    DWORD PTR [edi-0x2f],esp
  40417a:	or     edi,DWORD PTR [edi-0x6d]
  40417d:	push   0xe99b0545
  404182:	ret    
  404183:	scas   al,BYTE PTR es:[edi]
  404184:	cmp    DWORD PTR [esi-0xa],0x21
  404188:	jbe    0x404203
  40418a:	push   eax
  40418b:	mov    ecx,0x4cbc246
  404190:	(bad)  
  404191:	jne    0x404138
  404193:	loop   0x404179
  404195:	xchg   ch,cl
  404197:	dec    edi
  404198:	mov    dh,0xf4
  40419a:	xor    DWORD PTR [ebp-0x14],edx
  40419d:	push   0x1e160453
  4041a2:	ja     0x4041b0
  4041a8:	mov    edx,DWORD PTR [ebp-0x30]
  4041ab:	jmp    0x40462f
  4041b0:	mov    edx,DWORD PTR [ebp-0x38]
  4041b3:	mov    edi,DWORD PTR [ebp-0x4]
  4041b6:	xor    edx,eax
  4041b8:	xor    edi,eax
  4041ba:	jmp    0x40431f
  4041bf:	dec    ecx
  4041c0:	inc    ebx
  4041c1:	fdivr  st,st(0)
  4041c3:	fidivr DWORD PTR [ebx+0x69]
  4041c6:	gs jge 0x40418a
  4041c9:	shr    ebx,cl
  4041cb:	repz out dx,al
  4041cd:	dec    edx
  4041ce:	lods   al,BYTE PTR ds:[esi]
  4041cf:	out    dx,al
  4041d0:	sbb    bh,BYTE PTR [esp+edi*2+0x34]
  4041d4:	jg     0x404252
  4041d6:	jl     0x40417b
  4041d8:	stc    
  4041d9:	lfs    edx,FWORD PTR [ebx-0x60]
  4041dd:	cld    
  4041de:	std    
  4041df:	adc    al,0x9e
  4041e1:	(bad)  
  4041e2:	bound  ebx,QWORD PTR [esi-0x7]
  4041e5:	ror    DWORD PTR [ebx+eax*8+0x2b4e3561],cl
  4041ec:	ja     0x40425c
  4041ee:	not    BYTE PTR [edi-0x6a]
  4041f1:	mov    ebp,0x50e9f690
  4041f6:	clc    
  4041f7:	dec    ebx
  4041f8:	or     al,al
  4041fa:	xchg   esi,eax
  4041fb:	mov    ebp,0xfbc2e733
  404200:	int    0x5e
  404202:	clc    
  404203:	ficom  DWORD PTR [ecx+0x32ea3f3c]
  404209:	or     al,0x1b
  40420b:	into   
  40420c:	sub    al,0xbd
  40420e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40420f:	stc    
  404210:	aam    0x2d
  404212:	adc    DWORD PTR [ebx+0xe],ebp
  404215:	lahf   
  404216:	fiadd  WORD PTR [ebp+ebp*2+0x1c]
  40421a:	adc    esi,ebp
  40421c:	(bad)  
  40421d:	adc    esi,DWORD PTR [ecx+0x3c]
  404220:	or     al,0x97
  404222:	mov    cl,0xdc
  404224:	je     0x40422f
  404226:	ja     0x404286
  404228:	into   
  404229:	fldenv ds:0x90b00d73
  40422f:	inc    ebp
  404230:	outs   dx,DWORD PTR ds:[esi]
  404231:	pop    esi
  404232:	pop    ebp
  404233:	cmp    eax,0xc451887b
  404238:	imul   esi,DWORD PTR [edi],0x448fead7
  40423e:	icebp  
  40423f:	leave  
  404240:	out    0x2,eax
  404242:	sbb    esi,DWORD PTR [edx-0x408e43a4]
  404248:	xor    dl,dh
  40424a:	stos   DWORD PTR es:[edi],eax
  40424b:	repz mov ch,0xf6
  40424e:	retf   
  40424f:	rcl    DWORD PTR [edi+0x42],1
  404252:	adc    eax,0xdae5aaea
  404257:	inc    ecx
  404258:	das    
  404259:	adc    DWORD PTR [ebx-0xd],0xd92666f6
  404260:	ins    DWORD PTR es:[edi],dx
  404261:	cmp    BYTE PTR [esi-0x4],cl
  404264:	jnp    0x404293
  404266:	mov    ebp,0xf2668b81
  40426b:	repz out dx,al
  40426d:	stc    
  40426e:	xchg   esi,eax
  40426f:	mov    al,0xa6
  404271:	scas   eax,DWORD PTR es:[edi]
  404272:	add    BYTE PTR [ebx+0x13],cl
  404275:	dec    esi
  404276:	mov    edi,DWORD PTR [ebp-0x61]
  404279:	xor    esp,DWORD PTR [edi]
  40427b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40427c:	adc    al,0x69
  40427e:	leave  
  40427f:	sar    BYTE PTR [ecx],0x14
  404282:	mov    ds:0x74954923,eax
  404287:	mov    edi,0x63fa27b7
  40428d:	or     al,0xb
  40428f:	call   0x3a32:0xb263f225
  404296:	and    eax,0xf06d696
  40429b:	xchg   esi,eax
  40429c:	lahf   
  40429d:	jbe    0x4042d4
  40429f:	or     esi,DWORD PTR [edx-0x27acf35b]
  4042a5:	pop    ecx
  4042a6:	push   cs
  4042a7:	inc    esp
  4042a8:	psrlq  mm0,QWORD PTR [edx-0x19]
  4042ac:	jae    0x40429e
  4042ae:	mov    ebx,0x8f520641
  4042b3:	or     DWORD PTR [ecx-0x51],ecx
  4042b6:	arpl   WORD PTR ds:[edx],dx
  4042b9:	ins    DWORD PTR es:[edi],dx
  4042ba:	pop    edx
  4042bb:	pop    es
  4042bc:	push   0x7fc3f423
  4042c1:	cmp    al,0xff
  4042c3:	or     DWORD PTR [edi-0x3c],ebp
  4042c6:	push   0x6
  4042c8:	call   0xfd6f:0xeb88b334
  4042cf:	cmp    DWORD PTR [ebx-0x68],ebp
  4042d2:	hlt    
  4042d3:	neg    DWORD PTR [edi*1+0x736aa7e5]
  4042da:	leave  
  4042db:	cdq    
  4042dc:	xor    ecx,DWORD PTR [edi]
  4042de:	dec    edi
  4042df:	pop    esp
  4042e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042e1:	xchg   ebp,eax
  4042e2:	cld    
  4042e3:	mov    ah,0xf
  4042e5:	or     eax,0x322492a8
  4042ea:	into   
  4042eb:	adc    BYTE PTR [eax-0xf],0xa6
  4042ef:	sub    eax,0x3f366556
  4042f4:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042f6:	repnz daa 
  4042f8:	inc    edx
  4042f9:	mov    ebp,DWORD PTR [ecx-0x52a49498]
  4042ff:	je     0x4042e9
  404301:	outs   dx,DWORD PTR ds:[esi]
  404302:	mov    ebx,0x36a25b19
  404307:	dec    esi
  404308:	shl    ebp,0x70
  40430b:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40430d:	jl     0x404372
  40430f:	xchg   ebp,esi
  404311:	icebp  
  404312:	or     al,0x64
  404314:	gs in  al,dx
  404316:	mul    DWORD PTR [edi+0x4d]
  404319:	sti    
  40431a:	or     dh,BYTE PTR [edx+0x12]
  40431d:	mov    ebp,0x3f90360
  404322:	ror    DWORD PTR [edi],1
  404324:	scas   eax,DWORD PTR es:[edi]
  404325:	xlat   BYTE PTR ds:[ebx]
  404326:	mov    edi,DWORD PTR [ebp-0x8]
  404329:	jmp    0x40448e
  40432e:	fwait
  40432f:	bound  esp,QWORD PTR [edi]
  404331:	pushf  
  404332:	stc    
  404333:	ins    DWORD PTR es:[edi],dx
  404334:	fwait
  404335:	jge    0x4042bf
  404337:	les    ecx,FWORD PTR [ebp+0x29]
  40433a:	pop    edi
  40433b:	jge    0x40438a
  40433d:	in     eax,0xa6
  40433f:	sbb    eax,0x7f347c7c
  404344:	jl     0x4043c2
  404346:	push   ebx
  404347:	(bad)  
  404349:	lods   eax,DWORD PTR ds:[esi]
  40434a:	mov    eax,ds:0x5c4a388f
  40434f:	in     eax,0x9f
  404351:	(bad)  
  404352:	dec    ebx
  404353:	cld    
  404354:	fadd   DWORD PTR [ebp-0x37]
  404357:	sub    BYTE PTR [eax-0xa0d6670],0x75
  40435e:	mov    esp,0x6762c972
  404363:	pop    ecx
  404364:	mov    eax,0xe8ba142f
  404369:	dec    eax
  40436a:	push   ebp
  40436b:	test   eax,0xb2f193b6
  404370:	cmove  ebx,DWORD PTR [esp+edx*2+0xf]
  404375:	aam    0x51
  404377:	ja     0x40435d
  404379:	jbe    0x4043ef
  40437b:	cmp    eax,0x2beb55af
  404380:	and    bh,BYTE PTR [esi+0x50dfe0ce]
  404386:	mov    WORD PTR [ebx+ebx*1+0x33aa46d3],ss
  40438d:	fistp  QWORD PTR [edx-0x4]
  404390:	or     esp,ebx
  404392:	pop    edx
  404393:	(bad)  
  404394:	ja     0x40437a
  404396:	aam    0x60
  404398:	shr    DWORD PTR [esi],0xab
  40439b:	or     ch,0x27
  40439e:	stc    
  40439f:	and    ebx,esi
  4043a1:	test   eax,0xb519dc11
  4043a6:	jecxz  0x404337
  4043a8:	data16 (bad) 
  4043ad:	scas   eax,DWORD PTR es:[edi]
  4043ae:	sti    
  4043af:	xor    BYTE PTR [edi+0x6e10dc68],bh
  4043b5:	pop    esi
  4043b6:	retf   0xccb2
  4043b9:	in     eax,0x90
  4043bb:	push   es
  4043bc:	cmp    dl,0x72
  4043bf:	pop    ds
  4043c0:	mov    bl,0xf
  4043c2:	or     al,0x41
  4043c4:	out    0xc5,eax
  4043c6:	cmp    ch,dl
  4043c8:	pop    esi
  4043c9:	xor    ch,0x2e
  4043cc:	ds inc ecx
  4043ce:	aaa    
  4043cf:	adc    edx,0x2e
  4043d2:	js     0x404452
  4043d4:	push   ebx
  4043d5:	retf   0xa441
  4043d8:	pusha  
  4043d9:	sbb    ah,BYTE PTR [esi+edi*8-0x7a5a5b53]
  4043e0:	dec    edi
  4043e1:	lods   eax,DWORD PTR ds:[esi]
  4043e2:	dec    ebp
  4043e3:	cmp    BYTE PTR [edi-0x47c82b5c],0x6c
  4043ea:	lahf   
  4043eb:	mov    cl,0xe4
  4043ed:	lods   al,BYTE PTR ds:[esi]
  4043ee:	adc    esp,DWORD PTR [edi]
  4043f0:	jns    0x4043f7
  4043f2:	mov    edx,DWORD PTR ds:0x6aac4e72
  4043f8:	shr    DWORD PTR [ebx+eax*4],cl
  4043fb:	jmp    0x69f7:0xbe31c221
  404402:	jbe    0x4043c1
  404404:	stos   DWORD PTR es:[edi],eax
  404405:	(bad)  
  404406:	std    
  404407:	pop    es
  404408:	lock loop 0x404479
  40440b:	retf   0x9867
  40440e:	mov    al,0x1c
  404410:	xchg   edx,eax
  404411:	xchg   ecx,eax
  404412:	sbb    BYTE PTR [edi+0x21377726],dl
  404418:	or     al,0xd3
  40441a:	mov    bh,0xd0
  40441c:	mov    dh,0x19
  40441e:	mov    ecx,0xfc2453df
  404423:	test   ch,0x2f
  404426:	int3   
  404427:	test   BYTE PTR [edi+eiz*4+0x22],0x52
  40442c:	dec    edx
  40442d:	sbb    DWORD PTR [eax],edi
  40442f:	cli    
  404430:	xchg   esi,eax
  404431:	inc    eax
  404432:	sub    edx,esi
  404434:	ret    0xc8e2
  404437:	jo     0x4043e6
  404439:	mov    cl,0x94
  40443b:	repz mov edi,0x4e326965
  404441:	mov    bh,0xb0
  404443:	cmp    eax,DWORD PTR [eax]
  404445:	(bad)  
  404446:	sbb    al,BYTE PTR [edx]
  404448:	push   eax
  404449:	push   es
  40444a:	out    0xb2,eax
  40444c:	out    dx,eax
  40444d:	aas    
  40444e:	mov    ds:0xbcb454b3,eax
  404453:	inc    esp
  404454:	popf   
  404455:	mov    ebp,0x495e6c45
  40445a:	push   esi
  40445b:	xchg   edx,eax
  40445c:	or     bl,dl
  40445e:	mov    dh,0x45
  404460:	addr16 mov dl,0xaa
  404463:	sar    BYTE PTR [ebx+esi*2+0x522bbc5d],cl
  40446a:	dec    ecx
  40446b:	mov    edx,0x178b3979
  404470:	jp     0x40444b
  404472:	scas   al,BYTE PTR es:[edi]
  404473:	mov    al,BYTE PTR [edx+edi*1+0x143b37c5]
  40447a:	adc    ch,BYTE PTR [ecx-0x77]
  40447d:	hlt    
  40447e:	cwde   
  40447f:	or     BYTE PTR [ebp+0x35],dh
  404482:	imul   edi,DWORD PTR [ecx],0x1aa429d
  404488:	sbb    BYTE PTR ds:0x515e2b35,dh
  40448e:	mov    ebx,DWORD PTR [ebp-0x10]
  404491:	jmp    0x4045f6
  404496:	psraw  mm6,0x10
  40449a:	out    0xfb,al
  40449c:	frstor ds:0xaa51ed7e
  4044a2:	aad    0xf4
  4044a4:	loop   0x4044df
  4044a6:	jle    0x4044c7
  4044a8:	jl     0x404526
  4044aa:	xor    al,0x7f
  4044ac:	jl     0x40452a
  4044ae:	or     BYTE PTR [edi],bh
  4044b0:	je     0x40445d
  4044b2:	or     DWORD PTR [esi-0x61a074a2],edi
  4044b8:	xchg   edi,eax
  4044b9:	push   edx
  4044ba:	adc    al,0xb5
  4044bc:	and    DWORD PTR [ebx*1-0x701ab481],edi
  4044c3:	das    
  4044c4:	scas   eax,DWORD PTR es:[edi]
  4044c5:	dec    esp
  4044c6:	sub    edi,ebx
  4044c8:	mov    BYTE PTR [ebx+0x15],dh
  4044cb:	push   cs
  4044cc:	inc    ebx
  4044cd:	repz fisubr WORD PTR [ecx]
  4044d0:	je     0x4044c3
  4044d2:	xor    DWORD PTR [ebx+esi*1],ebx
  4044d5:	xchg   esi,eax
  4044d6:	clc    
  4044d7:	mov    dl,0x7e
  4044d9:	jp     0x4044da
  4044db:	ror    BYTE PTR [eax],0x2e
  4044de:	iret   
  4044df:	div    DWORD PTR [edi-0x71ac1b83]
  4044e5:	mov    WORD PTR [esi+0x5a],?
  4044e8:	cmp    ch,ch
  4044ea:	imul   eax,DWORD PTR [ecx-0x24b81f9],0x53
  4044f1:	call   0xba87:0x78315a51
  4044f8:	ret    0x1b8e
  4044fb:	jo     0x40450d
  4044fd:	cwde   
  4044fe:	add    al,0xbf
  404500:	push   ss
  404501:	add    dh,al
  404503:	cmp    eax,0xe01d60b4
  404508:	stc    
  404509:	and    eax,0x25f1645f
  40450e:	adc    eax,0xb18ee809
  404513:	cwde   
  404514:	mov    dh,0x77
  404516:	retf   0x8da5
  404519:	add    DWORD PTR [eax+0x5104078b],ebx
  40451f:	imul   ebx,DWORD PTR [edx-0x1ae08544],0x3d165e01
  404529:	clc    
  40452a:	sar    DWORD PTR ss:[ebx],cl
  40452d:	cmp    ah,BYTE PTR fs:[ecx]
  404530:	adc    ch,BYTE PTR [ebp+0x7c988a93]
  404536:	fnsave [eax]
  404538:	mov    ecx,0x1b56ae23
  40453d:	xor    al,0x99
  40453f:	(bad)  
  404540:	mov    ds:0x88d321d2,eax
  404545:	mul    BYTE PTR [ebx+0x54]
  404548:	pop    ebx
  404549:	fbstp  TBYTE PTR [eax+esi*8-0x5bebc65f]
  404550:	outs   dx,BYTE PTR ds:[esi]
  404551:	bound  esi,QWORD PTR [esi+0x1ea2eaa6]
  404557:	test   BYTE PTR [ebx+0x6209aa9a],dh
  40455d:	pushf  
  40455e:	and    bh,BYTE PTR [edx+0x774145a4]
  404564:	mov    ds:0x1ae7cd03,eax
  404569:	retf   
  40456a:	xor    BYTE PTR [edx-0x6f31faec],0xfd
  404571:	xchg   DWORD PTR [edx-0x14],eax
  404574:	mov    al,0xd9
  404576:	div    ch
  404578:	jae    0x404520
  40457a:	pop    edi
  40457b:	mov    ds:0x833e33b3,al
  404580:	or     al,0xe1
  404582:	repz in eax,0xd
  404585:	xor    edx,ebp
  404587:	xor    al,0xd6
  404589:	push   ss
  40458a:	xor    DWORD PTR [ebx],esi
  40458c:	leave  
  40458d:	rcr    DWORD PTR [ebp+0x72],1
  404590:	jge    0x40455c
  404592:	shl    BYTE PTR [esi+0xe],1
  404595:	mov    cl,0x3f
  404597:	add    al,0x58
  404599:	loop   0x4045a4
  40459b:	(bad)  
  40459c:	sbb    eax,0xe61008e3
  4045a1:	push   edi
  4045a2:	push   ecx
  4045a3:	adc    dl,cl
  4045a5:	cld    
  4045a6:	mov    esp,0x17581bb
  4045ab:	shl    DWORD PTR [edx-0x57],1
  4045ae:	ror    DWORD PTR [edi-0x6e42c7f5],cl
  4045b4:	adc    DWORD PTR [ecx-0x38],ebp
  4045b7:	aad    0x35
  4045b9:	in     eax,0x46
  4045bb:	cmc    
  4045bc:	mov    ch,0x1f
  4045be:	or     ebx,DWORD PTR [esp+edx*4+0xf]
  4045c2:	jo     0x4045b7
  4045c4:	es xchg edi,eax
  4045c6:	frstor [ebx+eiz*1+0x77]
  4045ca:	mov    ds:0x62752228,eax
  4045cf:	bound  eax,QWORD PTR [ebx+eiz*8-0x7ab2d3b6]
  4045d6:	call   FWORD PTR [edi+0x1fb76f4f]
  4045dc:	push   ebp
  4045dd:	fstp   TBYTE PTR [esi+esi*8+0x1]
  4045e1:	add    DWORD PTR [edx],0x90d55933
  4045e7:	stos   BYTE PTR es:[edi],al
  4045e8:	lahf   
  4045e9:	fadd   st,st(2)
  4045eb:	hlt    
  4045ec:	mov    bh,0x9b
  4045ee:	pusha  
  4045ef:	jnp    0x40463b
  4045f1:	mov    ebx,0xe7ba8afc
  4045f6:	sub    ebx,edi
  4045f8:	cmp    ebx,edx
  4045fa:	ja     0x404608
  404600:	mov    edx,DWORD PTR [ebp-0x34]
  404603:	jmp    0x40462f
  404608:	mov    edx,DWORD PTR [ebp-0x3c]
  40460b:	mov    edi,DWORD PTR [ebp-0x4]
  40460e:	xor    edx,eax
  404610:	xor    edi,eax
  404612:	add    edx,ecx
  404614:	add    edi,ecx
  404616:	imul   edx,edi
  404619:	mov    edi,DWORD PTR [ebp-0x8]
  40461c:	mov    ebx,DWORD PTR [ebp-0x10]
  40461f:	sub    ebx,edi
  404621:	cmp    ebx,edx
  404623:	mov    edx,DWORD PTR [ebp-0x38]
  404626:	jbe    0x40462f
  40462c:	mov    edx,DWORD PTR [ebp-0x3c]
  40462f:	mov    edi,DWORD PTR [ebp-0x4]
  404632:	xor    edi,eax
  404634:	xor    edx,eax
  404636:	add    edi,ecx
  404638:	add    edx,ecx
  40463a:	jmp    0x40479f
  40463f:	mov    WORD PTR [ecx+esi*8+0x3f],es
  404643:	dec    ecx
  404644:	(bad)  [esi+0x47]
  404647:	stos   BYTE PTR es:[edi],al
  404648:	call   0x1c22:0x981eb2d5
  40464f:	ss push ds
  404651:	jl     0x4046cf
  404653:	xor    al,0x7f
  404655:	jl     0x4046d3
  404657:	fld    DWORD PTR [edx]
  404659:	jns    0x404695
  40465b:	ins    BYTE PTR es:[edi],dx
  40465c:	push   eax
  40465d:	and    eax,0xa454f82f
  404662:	jns    0x404611
  404664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404665:	sbb    cl,0x9
  404668:	jle    0x4046b3
  40466a:	xchg   esp,eax
  40466b:	dec    esi
  40466c:	stos   DWORD PTR es:[edi],eax
  40466d:	cmp    edi,esp
  40466f:	xchg   ecx,eax
  404670:	imul   DWORD PTR [edx-0x55b6392]
  404676:	push   ebp
  404677:	mov    bh,0x12
  404679:	push   ecx
  40467a:	lods   eax,DWORD PTR ds:[esi]
  40467b:	inc    ebp
  40467c:	lods   eax,DWORD PTR ds:[esi]
  40467d:	imul   esp,ebp,0x66b7296a
  404683:	sbb    cl,ah
  404685:	sub    BYTE PTR [eax+eax*4-0x25],ch
  404689:	xchg   ecx,eax
  40468a:	xor    BYTE PTR [ecx],ah
  40468c:	adc    esp,esp
  40468e:	sbb    eax,0xf03b9095
  404693:	sbb    esi,edi
  404695:	push   0x6bacd802
  40469a:	adc    DWORD PTR [ebx],eax
  40469c:	in     al,0x97
  40469e:	xor    BYTE PTR [ecx],cl
  4046a0:	add    eax,0x37b41109
  4046a5:	and    BYTE PTR [esi+0x35],0x87
  4046a9:	ret    
  4046aa:	sar    BYTE PTR [ecx-0x3],cl
  4046ad:	jo     0x4046bc
  4046af:	scas   eax,DWORD PTR es:[edi]
  4046b0:	cli    
  4046b1:	cmc    
  4046b2:	mov    dh,0x3e
  4046b4:	hlt    
  4046b5:	mov    dh,0x98
  4046b7:	add    DWORD PTR [esi],0x5b
  4046ba:	mov    eax,0xd60babcf
  4046bf:	push   edx
  4046c0:	or     eax,0x4d600dad
  4046c5:	call   esi
  4046c7:	fsubr  DWORD PTR [ebx+0x6]
  4046ca:	adc    al,0x26
  4046cc:	jge    0x4046f5
  4046ce:	cwde   
  4046cf:	push   0x64
  4046d1:	xor    DWORD PTR [ebx+0x44],esp
  4046d4:	pop    ds
  4046d5:	jmp    0x404720
  4046d7:	xor    bh,BYTE PTR [ebx-0x2fca443c]
  4046dd:	gs test al,0xac
  4046e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046e1:	sbb    edx,DWORD PTR [ebx+ecx*2]
  4046e4:	adc    eax,0x935b94b4
  4046e9:	xchg   edx,eax
  4046ea:	repz rcr BYTE PTR [edi],0x91
  4046ee:	cmp    eax,0x7ecbfb81
  4046f3:	lods   al,BYTE PTR ds:[esi]
  4046f4:	xchg   DWORD PTR [edi+0x15],esp
  4046f7:	pop    edi
  4046f8:	stos   BYTE PTR es:[edi],al
  4046f9:	repnz sahf 
  4046fb:	sbb    al,0xa0
  4046fd:	add    al,0x19
  4046ff:	push   ebx
  404700:	pop    esp
  404701:	xor    DWORD PTR ds:[edi+0x2c],edx
  404705:	loopne 0x40475c
  404707:	jb     0x404734
  404709:	ret    
  40470a:	ficomp WORD PTR [edi]
  40470c:	xor    eax,0x23e30fef
  404711:	jmp    0x7514934
  404716:	call   0x113ab436
  40471b:	or     dh,ch
  40471d:	xchg   edi,eax
  40471e:	adc    BYTE PTR ds:0x2ed7a975,bh
  404724:	push   0xb708b071
  404729:	clc    
  40472a:	adc    eax,0x1758b
  40472f:	jp     0x404762
  404731:	arpl   WORD PTR [eax+0x4c2f9e5b],si
  404737:	rcr    BYTE PTR [edi+0x7b8f2c79],cl
  40473d:	or     eax,0x93658767
  404742:	and    DWORD PTR [ebp-0x73f0939],eax
  404748:	dec    ebp
  404749:	std    
  40474a:	xchg   DWORD PTR [ebp+0x6f],edx
  40474d:	rcl    BYTE PTR [edi-0x4a71eff4],0xba
  404754:	push   0x3337059c
  404759:	adc    bl,BYTE PTR [ebx+eiz*1]
  40475c:	fs aad 0x47
  40475f:	adc    DWORD PTR [ecx+0x49],edi
  404762:	pop    es
  404763:	cmp    BYTE PTR [ebx-0x3],al
  404766:	xor    dl,BYTE PTR [eax]
  404768:	mov    ds:0x2ff74bf0,al
  40476d:	ins    BYTE PTR es:[edi],dx
  40476e:	push   cs
  40476f:	cmp    al,0xbd
  404771:	mov    ds:0x5697ce15,eax
  404776:	ficom  WORD PTR [esp+ecx*1]
  404779:	lds    esp,FWORD PTR [ebp+0xe]
  40477c:	inc    esi
  40477d:	or     eax,0x5f84b027
  404782:	mov    cl,0xb7
  404784:	into   
  404785:	pop    ebx
  404786:	icebp  
  404787:	jmp    0x40479d
  404789:	pop    esp
  40478a:	leavew 
  40478c:	stc    
  40478d:	jne    0x40477e
  40478f:	test   eax,0x7d739b98
  404794:	jge    0x40472d
  404796:	pusha  
  404797:	xor    DWORD PTR [eax],eax
  404799:	in     eax,0x8b
  40479b:	push   ebx
  40479c:	(bad)  [ebp-0x2850f051]
  4047a2:	mov    DWORD PTR [ebp+0xc],edx
  4047a5:	mov    edx,DWORD PTR [ebp+0xc]
  4047a8:	mov    DWORD PTR [ebp-0x24],edx
  4047ab:	mov    edx,DWORD PTR [ebp-0x8]
  4047ae:	add    edx,DWORD PTR [ebp-0x40]
  4047b1:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  4047b8:	mov    DWORD PTR [ebp-0x1c],edx
  4047bb:	mov    DWORD PTR [ebp-0xc],0xf89c8534
  4047c2:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  4047c9:	mov    edx,DWORD PTR [ebp-0x18]
  4047cc:	xor    edx,eax
  4047ce:	add    edx,ecx
  4047d0:	jmp    0x404c6c
  4047d5:	mov    edx,DWORD PTR [ebp-0x18]
  4047d8:	xor    edx,eax
  4047da:	add    edx,DWORD PTR [ebp-0x14]
  4047dd:	mov    edi,DWORD PTR [ebp-0x1c]
  4047e0:	mov    dl,BYTE PTR [edx+edi*1+0x32729e]
  4047e7:	mov    BYTE PTR [ebp+0xf],dl
  4047ea:	jmp    0x40494f
  4047ef:	int    0xf4
  4047f1:	mov    esi,0xfd66b566
  4047f6:	mov    ebx,0x8fce1da9
  4047fb:	mov    esi,0x8e92db53
  404800:	adc    DWORD PTR [esp+edi*2+0x34],edi
  404804:	jg     0x404882
  404806:	jl     0x4047b4
  404808:	jp     0x404844
  40480a:	mov    al,0x7e
  40480c:	out    dx,al
  40480d:	int3   
  40480e:	sbb    edi,DWORD PTR [esi+0x3f]
  404811:	sub    eax,0x95023055
  404816:	and    edx,ecx
  404818:	or     ebx,DWORD PTR [ebx]
  40481a:	pop    ds
  40481b:	jns    0x4047d6
  40481d:	imul   DWORD PTR [ebx+0xd]
  404820:	mov    al,0xb6
  404822:	fdivr  st(1),st
  404824:	sar    ah,cl
  404826:	(bad)  
  404827:	sub    al,0x1
  404829:	xor    eax,0xda4966df
  40482e:	icebp  
  40482f:	lods   eax,DWORD PTR ds:[esi]
  404830:	repnz or esp,DWORD PTR [ecx+eax*1+0x2d661164]
  404838:	pop    DWORD PTR [esi-0x6183a91f]
  40483e:	leave  
  40483f:	mov    al,ds:0xd941a967
  404844:	adc    BYTE PTR [ebx+0x65009229],ah
  40484a:	xlat   BYTE PTR ds:[ebx]
  40484b:	clc    
  40484c:	mov    edi,ds
  40484e:	cs icebp 
  404850:	stos   DWORD PTR es:[edi],eax
  404851:	imul   edx,DWORD PTR [edx+0x4b],0x290b5efe
  404858:	gs mov esi,0xa0edf839
  40485e:	mov    ecx,0x45c024de
  404863:	es adc al,0x57
  404866:	inc    ebx
  404867:	int    0x37
  404869:	or     DWORD PTR [edx-0x727bb94d],esp
  40486f:	stc    
  404870:	repnz in al,0x53
  404873:	sti    
  404874:	fsubr  QWORD PTR [ebx+0x3670f28b]
  40487a:	xchg   ebp,esi
  40487c:	test   BYTE PTR [eax+0x5a],al
  40487f:	jmp    0x404805
  404881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404882:	addr16 adc edi,0x5c8da060
  404889:	push   esp
  40488a:	mov    ds:0xd4120377,al
  40488f:	mov    al,dl
  404891:	jbe    0x4048f7
  404893:	push   ecx
  404894:	lds    ebx,FWORD PTR [ebp+edx*1+0x4a8ee831]
  40489b:	push   ss
  40489c:	aad    0x0
  40489e:	retf   0xa7d5
  4048a1:	enter  0xd326,0x67
  4048a5:	dec    eax
  4048a6:	xor    DWORD PTR [ebx+ecx*2+0x7],eax
  4048aa:	jno    0x4048ec
  4048ac:	ret    
  4048ad:	dec    esi
  4048ae:	push   0x1a82b353
  4048b3:	sub    al,0x7f
  4048b5:	dec    esp
  4048b6:	push   ds
  4048b7:	(bad)
  4048bb:	out    dx,al
  4048bc:	cmp    al,BYTE PTR cs:[edi+eax*8-0x39]
  4048c1:	pop    ebp
  4048c2:	aaa    
  4048c3:	daa    
  4048c4:	and    edx,DWORD PTR [esi+0x744b78e7]
  4048ca:	push   cs
  4048cb:	ins    BYTE PTR es:[edi],dx
  4048cc:	cwde   
  4048cd:	hlt    
  4048ce:	test   DWORD PTR [edx+0x2c],esp
  4048d1:	jecxz  0x4048fc
  4048d3:	mov    ebp,0x158438b8
  4048d8:	(bad)  
  4048d9:	xchg   edi,eax
  4048da:	inc    eax
  4048db:	add    esp,ecx
  4048dd:	shl    DWORD PTR [edx+0x5f],cl
  4048e0:	iret   
  4048e1:	pop    edi
  4048e2:	dec    ebx
  4048e3:	and    al,0x9c
  4048e5:	out    dx,eax
  4048e6:	stos   BYTE PTR es:[edi],al
  4048e7:	cmp    ecx,DWORD PTR [esi+0x506af2e1]
  4048ed:	(bad)  
  4048ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048ef:	fwait
  4048f0:	lods   al,BYTE PTR ds:[esi]
  4048f1:	xchg   DWORD PTR [edx],esp
  4048f3:	fisttp WORD PTR [ecx-0x13]
  4048f6:	mov    ebp,0x28fbe05b
  4048fb:	fcom   QWORD PTR [edx+0x31]
  4048fe:	shl    edi,0x38
  404901:	sub    BYTE PTR [esi-0x40],0x98
  404905:	mov    eax,0x34e73344
  40490a:	rol    DWORD PTR [ebx],cl
  40490c:	pop    ds
  40490d:	pusha  
  40490e:	lds    ebx,FWORD PTR [esi-0x1e]
  404911:	les    esi,FWORD PTR [edx+0x1a]
  404914:	xor    edi,ecx
  404916:	inc    eax
  404917:	mov    ch,0x4f
  404919:	ins    BYTE PTR es:[edi],dx
  40491a:	pop    es
  40491b:	aam    0x70
  40491d:	xor    esi,DWORD PTR [edi+edx*8]
  404920:	lock (bad) 
  404922:	or     al,0x1e
  404924:	jge    0x404905
  404926:	xchg   ebx,eax
  404927:	xchg   ecx,eax
  404928:	sub    al,BYTE PTR [esi]
  40492a:	jg     0x404936
  40492c:	mov    ?,WORD PTR [edx+0x5b041ec0]
  404932:	imul   BYTE PTR [esi+0x36ed35ad]
  404938:	scas   eax,DWORD PTR es:[edi]
  404939:	je     0x4048e4
  40493b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40493c:	nop
  40493d:	inc    ecx
  40493e:	test   eax,0x346a8d40
  404943:	dec    eax
  404944:	arpl   bp,bx
  404946:	pop    esp
  404947:	out    0xdc,eax
  404949:	or     BYTE PTR [ebx+0x14],cl
  40494c:	dec    ebp
  40494d:	cmp    DWORD PTR [edx],ebx
  40494f:	mov    edx,DWORD PTR [ebp-0xc]
  404952:	xor    edx,eax
  404954:	add    edx,DWORD PTR [ebp-0x14]
  404957:	mov    edi,DWORD PTR [ebp-0x1c]
  40495a:	mov    dl,BYTE PTR [edx+edi*1+0x32729e]
  404961:	mov    BYTE PTR [ebp+0xb],dl
  404964:	mov    dl,BYTE PTR [ebp+0xf]
  404967:	mov    edi,DWORD PTR [ebp-0xc]
  40496a:	xor    edi,eax
  40496c:	add    edi,DWORD PTR [ebp-0x14]
  40496f:	mov    ebx,DWORD PTR [ebp-0x1c]
  404972:	mov    BYTE PTR [edi+ebx*1+0x32729e],dl
  404979:	jmp    0x404ade
  40497e:	adc    ebx,DWORD PTR cs:[ecx]
  404981:	iret   
  404982:	sbb    eax,0xb1d5e6fd
  404987:	and    edi,DWORD PTR ss:[ebx+0x19b93dd8]
  40498e:	inc    esi
  40498f:	adc    BYTE PTR [esp+edi*2+0x34],bh
  404993:	jg     0x404a11
  404995:	jl     0x404a15
  404997:	call   FWORD PTR fs:[edx]
  40499a:	dec    ebx
  40499b:	and    ebp,esi
  40499d:	(bad)  
  40499e:	(bad)  
  40499f:	cmc    
  4049a0:	xor    ch,cl
  4049a2:	cmp    eax,edx
  4049a4:	in     eax,0x39
  4049a6:	jnp    0x4049e5
  4049a8:	mov    edi,0xa26172db
  4049ad:	mov    eax,ds:0x7ffb15d6
  4049b2:	or     eax,DWORD PTR [edi-0x4eb8ac87]
  4049b8:	aaa    
  4049b9:	sub    BYTE PTR [edi-0x54324643],0x17
  4049c0:	push   ds
  4049c1:	(bad)  
  4049c2:	aas    
  4049c3:	inc    ebp
  4049c4:	sub    bl,0x65
  4049c7:	(bad)  
  4049c8:	xor    dl,BYTE PTR [esp+esi*4-0x555df89d]
  4049cf:	add    al,0x4f
  4049d1:	jge    0x404a22
  4049d3:	xchg   BYTE PTR [ebx+0x78bd268a],dh
  4049d9:	xor    al,0x4d
  4049db:	mov    eax,0x2c27007
  4049e0:	pop    ds
  4049e1:	(bad)  
  4049e2:	push   eax
  4049e3:	jmp    0xd5068ef5
  4049e8:	xchg   ebx,eax
  4049e9:	fs dec eax
  4049eb:	iret   
  4049ec:	jp     0x4049a6
  4049ee:	call   0x196:0x766b64df
  4049f5:	scas   eax,DWORD PTR es:[edi]
  4049f6:	mov    dl,cl
  4049f8:	xor    eax,0x4e8794ac
  4049fd:	call   0xcb88:0xdb716ad8
  404a04:	fstp   DWORD PTR [ecx+0xb2ea6c]
  404a0a:	jmp    0x86de4b33
  404a0f:	iret   
  404a10:	and    esi,ebx
  404a12:	lahf   
  404a13:	or     dh,bh
  404a15:	inc    ebp
  404a16:	mov    ds:0x2fa373d0,eax
  404a1b:	sub    ebx,DWORD PTR [esi+0x536dd615]
  404a21:	nop
  404a22:	pop    ss
  404a23:	repz js 0x4049bf
  404a26:	aad    0x54
  404a28:	cli    
  404a29:	sbb    eax,0x5cbe459f
  404a2e:	jmp    0xa1ce:0x90f3826e
  404a35:	sub    BYTE PTR [esp+ebp*2],ch
  404a38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a39:	fwait
  404a3a:	and    eax,0xb4ab78b5
  404a3f:	sub    eax,0x40fa685c
  404a44:	mov    edi,fs
  404a46:	sub    al,0x3
  404a48:	jbe    0x404a64
  404a4a:	enter  0x2056,0x50
  404a4e:	mov    ebp,0xad2f6ca4
  404a53:	in     al,0x8b
  404a55:	in     eax,dx
  404a56:	mov    dl,0x9e
  404a58:	mov    bh,0xa0
  404a5a:	inc    eax
  404a5b:	aaa    
  404a5c:	or     eax,0xb9ff55e7
  404a61:	test   BYTE PTR [ebx-0x80],bl
  404a64:	js     0x404a57
  404a66:	cli    
  404a67:	mov    ch,dh
  404a69:	jle    0x404ab9
  404a6b:	int    0x93
  404a6d:	xor    eax,0x6b70de17
  404a72:	ficom  WORD PTR [ebx]
  404a74:	(bad)  
  404a75:	lahf   
  404a76:	xchg   edi,eax
  404a77:	sub    al,0x35
  404a79:	rol    BYTE PTR ds:0xfc802be2,1
  404a7f:	ins    BYTE PTR es:[edi],dx
  404a80:	hlt    
  404a81:	pop    eax
  404a82:	dec    esp
  404a83:	pop    edx
  404a84:	sar    BYTE PTR [eax],0xcf
  404a87:	in     al,dx
  404a88:	dec    ebx
  404a89:	fistp  DWORD PTR [esi+0x5b]
  404a8c:	or     al,0x17
  404a8e:	test   dl,bl
  404a90:	sub    BYTE PTR [esi],dl
  404a92:	ret    0xa9c1
  404a95:	add    ecx,DWORD PTR [eax+0x68]
  404a98:	cmp    DWORD PTR [edi+0xd577c70],0xffffffe6
  404a9f:	loop   0x404aae
  404aa1:	inc    BYTE PTR [ebx]
  404aa3:	arpl   WORD PTR [esi+0x75],cx
  404aa6:	pop    es
  404aa7:	pop    edx
  404aa8:	stos   BYTE PTR es:[edi],al
  404aa9:	mov    WORD PTR [esi+eiz*1+0x7ee2da3c],?
  404ab0:	jno    0x404a8d
  404ab2:	icebp  
  404ab3:	and    esp,esp
  404ab5:	aas    
  404ab6:	loopne 0x404b1e
  404ab8:	in     al,0x8e
  404aba:	imul   esp,DWORD PTR [edi+0x4e980c3e],0xfffffffe
  404ac1:	mov    ds:0x2fc1905c,eax
  404ac6:	mov    dh,0xb1
  404ac8:	dec    edx
  404ac9:	aam    0xac
  404acb:	sbb    dl,dh
  404acd:	js     0x404a68
  404acf:	mov    gs,WORD PTR [eax+0x54ba1eb7]
  404ad5:	jns    0x404afc
  404ad7:	cmp    al,0xd7
  404ad9:	les    eax,FWORD PTR [ecx+edx*1-0x11]
  404add:	int3   
  404ade:	mov    dl,BYTE PTR [ebp+0xb]
  404ae1:	mov    edi,DWORD PTR [ebp-0x18]
  404ae4:	xor    edi,eax
  404ae6:	add    edi,DWORD PTR [ebp-0x14]
  404ae9:	mov    ebx,DWORD PTR [ebp-0x1c]
  404aec:	mov    BYTE PTR [edi+ebx*1+0x32729e],dl
  404af3:	mov    edx,DWORD PTR [ebp-0x44]
  404af6:	mov    edi,DWORD PTR [ebp-0xc]
  404af9:	xor    edx,eax
  404afb:	xor    edi,eax
  404afd:	add    edx,ecx
  404aff:	add    edi,ecx
  404b01:	imul   edx,edi
  404b04:	add    edx,DWORD PTR [ebp-0x14]
  404b07:	jmp    0x404c6c
  404b0c:	stos   DWORD PTR es:[edi],eax
  404b0d:	outs   dx,BYTE PTR ds:[esi]
  404b0e:	cmp    al,0x3d
  404b10:	fnstsw WORD PTR [ebp+0x313d6e7d]
  404b16:	lods   eax,DWORD PTR ds:[esi]
  404b17:	sbb    eax,0xb6844121
  404b1c:	push   ds
  404b1d:	adc    bh,BYTE PTR [esp+edi*2+0x34]
  404b21:	jg     0x404b9f
  404b23:	jl     0x404b98
  404b25:	pop    ebx
  404b26:	cmp    DWORD PTR [ecx+0x2a383ca0],ebp
  404b2c:	dec    ebx
  404b2d:	xchg   ecx,eax
  404b2e:	leave  
  404b2f:	or     al,bh
  404b31:	jmp    0x2661:0xb5d9f0b1
  404b38:	push   ecx
  404b39:	div    ah
  404b3b:	repnz out dx,eax
  404b3d:	pop    edi
  404b3e:	xchg   BYTE PTR [ecx-0x3eab4250],bh
  404b44:	icebp  
  404b45:	or     DWORD PTR [esi+eiz*4-0x5854b365],esi
  404b4c:	fxch   st(4)
  404b4e:	mov    esi,0x4d5083d2
  404b53:	jb     0x404b6e
  404b55:	stc    
  404b56:	and    bl,al
  404b58:	xor    BYTE PTR ds:0x89eb6435,dl
  404b5e:	(bad)  
  404b5f:	adc    al,0x6d
  404b61:	sub    al,0x96
  404b63:	jmp    0xead502ed
  404b68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b69:	fist   DWORD PTR [ebp+0x5a343c85]
  404b6f:	sbb    ebx,ebx
  404b71:	cmp    BYTE PTR [edx],0x97
  404b74:	add    cl,BYTE PTR [esi-0x3d]
  404b77:	and    DWORD PTR [ecx],esi
  404b79:	imul   ebp,DWORD PTR [edx],0x6ff8e69e
  404b7f:	stc    
  404b80:	xlat   BYTE PTR ds:[ebx]
  404b81:	call   0xb59f7e59
  404b86:	aaa    
  404b87:	addr16 retf 
  404b89:	add    DWORD PTR [esi],ebx
  404b8b:	repz lds edi,FWORD PTR [edi]
  404b8e:	outs   dx,DWORD PTR ds:[esi]
  404b8f:	(bad)  
  404b90:	daa    
  404b91:	and    BYTE PTR [ecx-0x36fa953a],ah
  404b97:	fmul   DWORD PTR [ecx]
  404b99:	ss sahf 
  404b9b:	ins    DWORD PTR es:[edi],dx
  404b9c:	xchg   ecx,eax
  404b9d:	and    al,0x74
  404b9f:	push   esi
  404ba0:	xor    DWORD PTR [edi],ecx
  404ba2:	in     al,dx
  404ba3:	xchg   BYTE PTR [ebx],bh
  404ba5:	repnz mov eax,ds:0x3f03728e
  404bab:	rcl    DWORD PTR [ecx-0x1290aceb],0x2f
  404bb2:	xor    al,0xef
  404bb4:	and    eax,DWORD PTR [edx-0x75]
  404bb7:	jecxz  0x404bd4
  404bb9:	and    BYTE PTR [edi-0x6a],al
  404bbc:	cmc    
  404bbd:	sar    BYTE PTR [esi+0x65c47ea],1
  404bc3:	add    DWORD PTR [ebx-0x59],edi
  404bc6:	cmp    eax,0x1a3021e
  404bcb:	xchg   ebx,eax
  404bcc:	cmp    al,0x31
  404bce:	stos   DWORD PTR es:[edi],eax
  404bcf:	test   BYTE PTR [ebp-0x52],bh
  404bd2:	dec    ebx
  404bd3:	stos   BYTE PTR es:[edi],al
  404bd4:	addr16 sbb al,0x21
  404bd7:	sbb    eax,0x10807c60
  404bdc:	and    al,ah
  404bde:	out    0x64,eax
  404be0:	fdivr  QWORD PTR [ecx]
  404be2:	pop    DWORD PTR [eax-0x5f]
  404be5:	lea    esi,[edx]
  404be7:	fwait
  404be8:	mov    edi,0x5b9c689f
  404bed:	int    0xc0
  404bef:	xor    BYTE PTR [edi+edi*8],ah
  404bf2:	pop    esi
  404bf3:	icebp  
  404bf4:	sub    DWORD PTR ds:0x9a7fb675,esp
  404bfa:	outs   dx,BYTE PTR ds:[esi]
  404bfb:	jg     0x404c58
  404bfd:	test   al,0xf5
  404bff:	mov    esp,0x48476bbe
  404c04:	xchg   BYTE PTR [ecx],dh
  404c06:	and    ah,bh
  404c08:	js     0x404be6
  404c0a:	mov    bh,0xec
  404c0c:	mov    edx,0x89f9c900
  404c11:	xchg   esp,eax
  404c12:	xor    al,0x6e
  404c14:	out    dx,al
  404c15:	data16 daa 
  404c17:	cdq    
  404c18:	or     esp,DWORD PTR [esi]
  404c1a:	inc    esi
  404c1b:	xchg   ebx,eax
  404c1c:	push   0x5e
  404c1e:	frstpm(287 only) 
  404c20:	add    DWORD PTR [ebp-0xe],0x50a7e520
  404c27:	push   es
  404c28:	inc    esi
  404c29:	inc    ecx
  404c2a:	sbb    ecx,DWORD PTR [edx]
  404c2c:	push   eax
  404c2d:	pop    edi
  404c2e:	(bad)  
  404c2f:	in     al,0xf3
  404c31:	lock pusha 
  404c33:	in     al,dx
  404c34:	ret    0xc588
  404c37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c38:	inc    ebx
  404c39:	jbe    0x404c5c
  404c3b:	and    eax,0xfe0f13a6
  404c40:	dec    edx
  404c41:	jecxz  0x404bcd
  404c43:	int    0x3f
  404c45:	mov    dl,0x14
  404c47:	in     eax,0xfd
  404c49:	xor    ebx,DWORD PTR ds:0x532541fc
  404c4f:	retf   
  404c50:	dec    esp
  404c51:	mov    esp,0x8e3e36af
  404c56:	addr16 aaa 
  404c58:	pop    es
  404c59:	xchg   ebp,eax
  404c5a:	mov    edx,0x7d79d349
  404c5f:	jmp    0x5d97:0x7a56b277
  404c66:	(bad)  
  404c67:	pop    edx
  404c68:	outs   dx,DWORD PTR ds:[esi]
  404c69:	les    esp,FWORD PTR [edx-0x5b]
  404c6c:	mov    DWORD PTR [ebp-0x14],edx
  404c6f:	mov    edx,DWORD PTR [ebp-0xc]
  404c72:	mov    edi,DWORD PTR [ebp-0x24]
  404c75:	jmp    0x404dda
  404c7a:	or     al,BYTE PTR [ecx-0x1aa2d1be]
  404c80:	push   0xffffffbd
  404c82:	cmp    eax,ecx
  404c84:	dec    esi
  404c85:	rcl    DWORD PTR [ebp+0x4a],0x82
  404c89:	jle    0x404c61
  404c8b:	adc    eax,0x7f347c7c
  404c90:	jl     0x404d0e
  404c92:	add    edi,DWORD PTR [eax+0x36]
  404c95:	push   ebp
  404c96:	and    BYTE PTR [esi],0xce
  404c99:	cmp    al,BYTE PTR [ebp+ecx*2+0x50]
  404c9d:	mov    ecx,es
  404c9f:	pop    eax
  404ca0:	cmp    cl,BYTE PTR [ebx+edx*2]
  404ca3:	je     0x404cb6
  404ca5:	mov    eax,ds:0xfe68423
  404caa:	mov    al,0xbf
  404cac:	icebp  
  404cad:	mov    ch,0x83
  404caf:	shr    DWORD PTR [edi+0x681e5ef1],cl
  404cb5:	pushf  
  404cb6:	ja     0x404d34
  404cb8:	sbb    BYTE PTR [ecx-0x74],bh
  404cbb:	push   ds
  404cbc:	mov    ecx,0x5a556dd
  404cc1:	pop    esp
  404cc2:	pop    ecx
  404cc3:	loope  0x404d1c
  404cc5:	adc    BYTE PTR [ebp+0x6fb92f26],dh
  404ccb:	push   eax
  404ccc:	aam    0xc0
  404cce:	push   ebx
  404ccf:	repz mov bh,0x70
  404cd2:	or     al,0x4b
  404cd4:	aas    
  404cd5:	ret    0xbafc
  404cd8:	aam    0x27
  404cda:	and    al,ch
  404cdc:	dec    esp
  404cdd:	inc    edi
  404cde:	cld    
  404cdf:	inc    edx
  404ce0:	mov    ds:0x68b2b34,eax
  404ce5:	jmp    0x47a339fe
  404cea:	outs   dx,DWORD PTR ss:[esi]
  404cec:	xlat   BYTE PTR ds:[ebx]
  404ced:	xchg   esi,eax
  404cee:	mov    BYTE PTR [eax],dh
  404cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cf1:	cmp    BYTE PTR [edx+eax*2+0x2f4dcaa4],dh
  404cf8:	repz dec eax
  404cfa:	jno    0x404d63
  404cfc:	jo     0x404ca5
  404cfe:	pop    cx
  404d00:	add    cl,0xb3
  404d03:	fnsave [ebx+edi*4+0x532ce6df]
  404d0a:	mov    ecx,0x8bac4341
  404d0f:	out    dx,al
  404d10:	mov    ?,WORD PTR [edx+0x74b6b763]
  404d16:	dec    esi
  404d17:	sahf   
  404d18:	push   esi
  404d19:	cli    
  404d1a:	retf   0x24ae
  404d1d:	mov    ebp,0x174ddc45
  404d22:	es clc 
  404d24:	or     bl,bh
  404d26:	and    BYTE PTR [ebx],ah
  404d28:	ins    BYTE PTR es:[edi],dx
  404d29:	(bad)  
  404d2a:	neg    BYTE PTR [ecx-0x3e0c3978]
  404d30:	imul   ebp,DWORD PTR [edi-0x4c888919],0xfffffffb
  404d37:	ret    
  404d38:	xchg   ebp,eax
  404d39:	mov    bl,0x9f
  404d3b:	and    DWORD PTR [edx],ebp
  404d3d:	lods   al,BYTE PTR ds:[esi]
  404d3e:	arpl   WORD PTR [eax],dx
  404d40:	or     ecx,DWORD PTR [ebp+eax*1-0x3b]
  404d44:	xor    ebp,0x65183eaa
  404d4a:	repz fist WORD PTR [esi-0x314a4fe6]
  404d51:	mov    esp,0x36f41345
  404d56:	push   ebx
  404d57:	aad    0x9e
  404d59:	lds    ecx,FWORD PTR ds:0xacc62e47
  404d5f:	push   si
  404d61:	lods   al,BYTE PTR ds:[esi]
  404d62:	push   esp
  404d63:	mov    eax,0xa10c8b99
  404d68:	loope  0x404da2
  404d6a:	stos   DWORD PTR es:[edi],eax
  404d6b:	xchg   ebp,eax
  404d6c:	jae    0x404dcf
  404d6e:	cmp    dl,0x2
  404d71:	rcl    DWORD PTR ds:0x86de96ba,1
  404d77:	(bad)  
  404d78:	mov    dh,0x3d
  404d7a:	loope  0x404ded
  404d7c:	inc    ebp
  404d7d:	out    dx,al
  404d7e:	in     al,0xe2
  404d80:	pop    ss
  404d81:	test   BYTE PTR [eax],bl
  404d83:	mov    edi,0x45369526
  404d88:	xchg   ecx,edi
  404d8a:	popf   
  404d8b:	cmp    esp,ebx
  404d8d:	repnz mov ah,0x15
  404d90:	imul   ebp,DWORD PTR [edi-0x7a08123d],0xedc34aaf
  404d9a:	scas   al,BYTE PTR es:[edi]
  404d9b:	ins    DWORD PTR es:[edi],dx
  404d9c:	js     0x404dc3
  404d9e:	and    eax,0xe7c9c99c
  404da3:	add    DWORD PTR [edi],0x52c613f1
  404da9:	add    eax,0xd0beaae7
  404dae:	mov    bl,0x17
  404db0:	lods   al,BYTE PTR ds:[esi]
  404db1:	inc    edx
  404db2:	ins    DWORD PTR es:[edi],dx
  404db3:	mov    ch,BYTE PTR [edx+0x3903d857]
  404db9:	inc    eax
  404dba:	test   BYTE PTR [edx-0x3095c42d],al
  404dc0:	xchg   edx,eax
  404dc1:	add    edi,DWORD PTR [ecx]
  404dc3:	call   0x37a1:0xd4ed70e0
  404dca:	imul   ebx,edx,0xffffff8d
  404dcd:	fst    QWORD PTR gs:[edi-0x13]
  404dd1:	add    dl,BYTE PTR [ebx+0x46]
  404dd4:	mov    ebx,0x7103ee7b
  404dd9:	adc    esi,DWORD PTR [ebx]
  404ddb:	rol    BYTE PTR [ebx],1
  404ddd:	ror    DWORD PTR [edi],1
  404ddf:	scas   eax,DWORD PTR es:[edi]
  404de0:	xlat   BYTE PTR ds:[ebx]
  404de1:	mov    edi,DWORD PTR [ebp-0xc]
  404de4:	xor    edi,eax
  404de6:	sub    edx,edi
  404de8:	mov    edi,DWORD PTR [ebp-0xc]
  404deb:	mov    ebx,DWORD PTR [ebp-0x14]
  404dee:	jmp    0x404f53
  404df3:	push   ebx
  404df4:	pop    ebx
  404df5:	inc    edx
  404df6:	cmp    DWORD PTR [edx-0x67],0x31957d53
  404dfd:	jb     0x404e2d
  404dff:	pusha  
  404e00:	out    0xd8,al
  404e02:	xchg   BYTE PTR [esi+0x347c7c14],ch
  404e08:	jg     0x404e86
  404e0a:	jl     0x404e21
  404e0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e0d:	sub    ebx,DWORD PTR [eax-0x6787c4a7]
  404e13:	inc    edi
  404e14:	mov    cl,0x33
  404e16:	mov    ss,ecx
  404e18:	and    BYTE PTR [ebx+0x97a0ceb],al
  404e1e:	ficom  WORD PTR [ebx+ebx*2-0x4ba55e85]
  404e25:	sub    ecx,DWORD PTR ds:0x236f8176
  404e2b:	xor    BYTE PTR [ebx+0x25529d82],dl
  404e31:	mov    ds:0xd69401f1,al
  404e36:	add    BYTE PTR [esi+0x3],0x4c
  404e3a:	(bad)  
  404e3c:	imul   eax,DWORD PTR [esi+0x54],0x9ea09de
  404e43:	outs   dx,BYTE PTR ds:[esi]
  404e44:	les    edx,FWORD PTR [edi]
  404e46:	push   eax
  404e47:	retf   0x5da0
  404e4a:	pop    eax
  404e4b:	arpl   WORD PTR [edx-0x76070382],bx
  404e51:	mov    ebx,0xefdeae99
  404e56:	and    al,0x57
  404e58:	and    cl,BYTE PTR [edx-0x1d]
  404e5b:	push   edi
  404e5c:	(bad)  
  404e5e:	test   BYTE PTR [eax],0x69
  404e61:	cmp    al,0xdb
  404e63:	mov    ah,0x2b
  404e65:	mov    al,ds:0x75bab9d4
  404e6a:	imul   eax,DWORD PTR [ebx+eiz*8+0xf],0x69
  404e6f:	adc    al,0xb7
  404e71:	push   ecx
  404e72:	cwde   
  404e73:	xchg   edx,eax
  404e74:	retf   
  404e75:	pop    ebx
  404e76:	jl     0x404e19
  404e78:	inc    eax
  404e79:	data16 jbe 0x404e6d
  404e7c:	dec    esi
  404e7d:	jbe    0x404e33
  404e7f:	jge    0x404e1d
  404e81:	xchg   BYTE PTR ds:0x8f18ec44,ah
  404e87:	cdq    
  404e88:	rol    DWORD PTR [ecx-0xa219561],cl
  404e8e:	lahf   
  404e8f:	fstp   QWORD PTR [ecx]
  404e91:	sub    al,0xda
  404e93:	or     ch,BYTE PTR [eax]
  404e95:	inc    ecx
  404e96:	jp     0x404e66
  404e98:	inc    ecx
  404e99:	inc    ecx
  404e9a:	(bad)  
  404e9b:	shl    BYTE PTR [esi],cl
  404e9d:	dec    edi
  404e9e:	mov    al,ds:0xb9b378f3
  404ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ea4:	mov    esi,0x536e8496
  404ea9:	jno    0x404eb4
  404eab:	cs loopne 0x404e52
  404eae:	jbe    0x404f00
  404eb0:	in     eax,dx
  404eb1:	das    
  404eb2:	bound  eax,QWORD PTR [ebx+edi*2+0x5f]
  404eb6:	dec    eax
  404eb7:	dec    edx
  404eb8:	adc    DWORD PTR [ebx+0x33a3ebd3],ebx
  404ebe:	inc    ecx
  404ebf:	fisttp QWORD PTR [esi-0x5d]
  404ec2:	xor    eax,0x24a04d43
  404ec7:	pushf  
  404ec8:	jmp    0x6a0746e2
  404ecd:	sub    edi,DWORD PTR [edi]
  404ecf:	dec    edi
  404ed0:	sub    ebx,edi
  404ed2:	pop    ebx
  404ed3:	leave  
  404ed4:	mov    WORD PTR ds:0x66712c85,cs
  404eda:	push   edx
  404edb:	test   dh,ch
  404edd:	ja     0x404f18
  404edf:	jecxz  0x404eea
  404ee1:	aas    
  404ee2:	and    BYTE PTR [edx+0x229b8cea],bh
  404ee8:	std    
  404ee9:	rcl    BYTE PTR [eax-0x58],1
  404eec:	push   0x3b
  404eee:	js     0x404e95
  404ef0:	xchg   edi,eax
  404ef1:	mov    ds:0x9f3fc253,eax
  404ef6:	out    0xae,ax
  404ef9:	push   0x992c91df
  404efe:	pop    es
  404eff:	in     eax,dx
  404f00:	outs   dx,BYTE PTR ds:[esi]
  404f01:	icebp  
  404f02:	clc    
  404f03:	fnsave [eax-0x62]
  404f06:	adc    eax,0x55036b6e
  404f0b:	push   eax
  404f0c:	push   0x5643120
  404f11:	and    bl,cl
  404f13:	jmp    0x404f44
  404f15:	retf   
  404f16:	jne    0x404ef2
  404f18:	inc    ebx
  404f19:	jg     0x404e9c
  404f1b:	rcr    BYTE PTR [edx],1
  404f1d:	push   ebx
  404f1e:	(bad)  
  404f1f:	call   0xb5c6:0x8dd81d42
  404f26:	sub    bh,ch
  404f28:	popa   
  404f29:	fwait
  404f2a:	mov    ds:0x5598618,eax
  404f2f:	mov    ch,BYTE PTR [ecx+0x7a]
  404f32:	in     al,dx
  404f33:	test   al,0x48
  404f35:	(bad)  
  404f36:	jmp    0x404f02
  404f38:	push   eax
  404f39:	jno    0x404f45
  404f3b:	cld    
  404f3c:	mov    edx,0x7515434d
  404f41:	out    dx,eax
  404f42:	sbb    al,0x4f
  404f44:	cmp    edi,DWORD PTR [esi+esi*4-0x2c44cb54]
  404f4b:	sbb    esp,edx
  404f4d:	pop    esp
  404f4e:	nop
  404f4f:	jp     0x404fae
  404f51:	je     0x404f86
  404f53:	xor    edi,eax
  404f55:	add    edi,ecx
  404f57:	imul   edi,ebx
  404f5a:	mov    ebx,DWORD PTR [ebp-0x18]
  404f5d:	xor    ebx,eax
  404f5f:	sub    edx,ecx
  404f61:	lea    edi,[edi+ebx*1+0x32729e]
  404f68:	cmp    edi,edx
  404f6a:	jbe    0x4047d5
  404f70:	mov    edx,DWORD PTR [ebp-0xc]
  404f73:	mov    edi,DWORD PTR [ebp-0x24]
  404f76:	xor    edx,eax
  404f78:	add    edx,ecx
  404f7a:	imul   edx,edi
  404f7d:	mov    edi,DWORD PTR [ebp-0x18]
  404f80:	xor    edi,eax
  404f82:	add    edx,edi
  404f84:	mov    edi,DWORD PTR [ebp-0x8]
  404f87:	lea    edx,[edx+edi*1+0x32729e]
  404f8e:	mov    DWORD PTR [ebp-0x8],edx
  404f91:	jmp    0x4050f6
  404f96:	jecxz  0x404f49
  404f98:	out    0xe3,eax
  404f9a:	jge    0x405019
  404f9c:	sti    
  404f9d:	mov    cl,0x66
  404f9f:	pop    edx
  404fa0:	cmp    BYTE PTR ds:0x171c02f,cl
  404fa6:	popw   ss
  404fa8:	jl     0x405026
  404faa:	xor    al,0x7f
  404fac:	jl     0x40502a
  404fae:	sbb    esp,eax
  404fb0:	repz popf 
  404fb2:	xor    eax,0x767bae1d
  404fb7:	ss pop eax
  404fb9:	test   DWORD PTR [edi],ebp
  404fbb:	in     eax,0xe7
  404fbd:	jge    0x405020
  404fbf:	pop    eax
  404fc0:	or     BYTE PTR [eax+ecx*8+0x1e462fc0],0xef
  404fc8:	pop    ds
  404fc9:	sub    dl,BYTE PTR [edx]
  404fcb:	fcom   QWORD PTR [ebx-0x43057462]
  404fd1:	jp     0x404ffb
  404fd3:	mov    ebp,0xace00fd6
  404fd8:	je     0x404f99
  404fda:	sbb    eax,0x36cbc4ef
  404fdf:	(bad)  
  404fe0:	jp     0x404f80
  404fe2:	lahf   
  404fe3:	and    ah,BYTE PTR [esi]
  404fe5:	sub    al,0x26
  404fe7:	adc    ch,BYTE PTR [ecx]
  404fe9:	xchg   esp,eax
  404fea:	test   edx,ebp
  404fec:	cmp    eax,0x4719a69a
  404ff1:	into   
  404ff2:	lahf   
  404ff3:	dec    BYTE PTR [ecx-0x5d]
  404ff6:	push   eax
  404ff7:	push   0x1c
  404ff9:	fbstp  TBYTE PTR [eax+edx*8]
  404ffc:	ss in  eax,dx
  404ffe:	lds    esi,FWORD PTR [edi+0x45809ff7]
  405004:	repz ss (bad) 
  405007:	push   esi
  405008:	lock push ebx
  40500a:	jne    0x405015
  40500c:	outs   dx,BYTE PTR ds:[esi]
  40500d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40500e:	jl     0x404ffc
  405010:	push   edi
  405011:	cmp    dh,BYTE PTR [edx-0x60]
  405014:	fcmove st,st(5)
  405016:	push   ss
  405017:	je     0x404fad
  405019:	cmc    
  40501a:	xor    DWORD PTR ds:0x4e18f943,ecx
  405020:	int3   
  405021:	xlat   BYTE PTR ds:[ebx]
  405022:	shl    BYTE PTR [esi+0x7b],1
  405025:	popf   
  405026:	int    0xef
  405028:	ret    
  405029:	mov    bl,BYTE PTR [edi+0x6f]
  40502c:	mov    eax,ds:0x2b261217
  405031:	leave  
  405032:	push   ebx
  405033:	popf   
  405034:	pop    ebp
  405035:	stc    
  405036:	repz xor eax,DWORD PTR [edx]
  405039:	xlat   BYTE PTR ds:[ebx]
  40503a:	inc    edx
  40503b:	sti    
  40503c:	jmp    0x405005
  40503e:	dec    ebx
  40503f:	xor    esp,esp
  405041:	mov    edi,0x7b63b628
  405046:	rep ins DWORD PTR es:[edi],dx
  405048:	aas    
  405049:	in     al,0xa0
  40504b:	popf   
  40504c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40504d:	mov    esi,0x2752f5bf
  405052:	push   esp
  405053:	mov    BYTE PTR [ebp-0x3a],ch
  405056:	rcl    DWORD PTR [eax],cl
  405058:	mov    dh,0x2e
  40505a:	fadd   st,st(1)
  40505c:	test   eax,0xd664a219
  405061:	xor    BYTE PTR [esi-0x52],bh
  405064:	in     eax,dx
  405065:	ja     0x405014
  405067:	adc    al,0xac
  405069:	xor    BYTE PTR [edx],dl
  40506b:	addr16 mov ebp,0x332d30b2
  405071:	(bad)  
  405072:	shl    BYTE PTR [ebx-0x654d6fc6],cl
  405078:	mov    ds,WORD PTR [esi-0xf]
  40507b:	push   0xffffff9b
  40507d:	scas   al,BYTE PTR es:[edi]
  40507e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40507f:	push   edi
  405080:	cwde   
  405081:	mov    edi,0x384aaed4
  405086:	cld    
  405087:	ret    
  405088:	sti    
  405089:	fidiv  DWORD PTR [ebx+0x7a]
  40508c:	stc    
  40508d:	mov    ?,WORD PTR [esi+0x6f]
  405090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405091:	sbb    dh,bh
  405093:	sbb    esp,DWORD PTR [edi]
  405095:	dec    esp
  405096:	and    dl,bh
  405098:	(bad)  
  405099:	or     eax,0x17210d6f
  40509e:	mov    ebp,0xd2930c02
  4050a3:	and    DWORD PTR [edx+0x19],esp
  4050a6:	and    al,0xb4
  4050a8:	push   0xffffff9e
  4050aa:	cmp    bl,BYTE PTR [edx+ebx*1]
  4050ad:	mov    cl,0x55
  4050af:	sar    BYTE PTR [ebx],cl
  4050b1:	out    0x21,al
  4050b3:	sbb    ch,bh
  4050b5:	icebp  
  4050b6:	cmp    DWORD PTR [esi+0x68217aaa],edi
  4050bc:	sub    ecx,DWORD PTR [esi+0x43f3f01e]
  4050c2:	sub    DWORD PTR [ecx-0x48c0667c],0x33
  4050c9:	call   0xaa9608d0
  4050ce:	jecxz  0x4050ba
  4050d0:	push   edx
  4050d1:	mov    BYTE PTR [ebx+0x22],dl
  4050d4:	push   ebx
  4050d5:	jp     0x4050aa
  4050d7:	lea    esp,[eax]
  4050d9:	ins    DWORD PTR es:[edi],dx
  4050da:	cli    
  4050db:	adc    eax,0x8f07e636
  4050e0:	sub    BYTE PTR [edx-0x16],cl
  4050e3:	add    al,0x55
  4050e5:	mov    edi,0xe6b14f5a
  4050ea:	sub    al,0x76
  4050ec:	xchg   ebx,eax
  4050ed:	inc    esp
  4050ee:	mov    edi,0x91d1a0fa
  4050f3:	lahf   
  4050f4:	ror    BYTE PTR [esi+0x33e0558b],0xd0
  4050fb:	mov    edi,0xffcd8d62
  405100:	sub    edi,edx
  405102:	add    edi,DWORD PTR [ebp-0x10]
  405105:	mov    edx,DWORD PTR [ebp-0x20]
  405108:	mov    ebx,DWORD PTR [ebp-0x8]
  40510b:	xor    edx,eax
  40510d:	add    edx,ecx
  40510f:	imul   edx,ebx
  405112:	cmp    edx,edi
  405114:	jbe    0x4038c9
  40511a:	pop    ebx
  40511b:	pop    edi
  40511c:	leave  
  40511d:	ret    0x8
  405120:	push   ebp
  405121:	mov    ebp,esp
  405123:	push   ecx
  405124:	adc    DWORD PTR ds:0x41074f,ebx
  40512a:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  405131:	and    DWORD PTR ds:0x4489a0,0x0
  40513b:	jmp    0x40514d
  405140:	mov    edx,DWORD PTR ds:0x4489a0
  405146:	inc    edx
  405147:	mov    DWORD PTR ds:0x4489a0,edx
  40514d:	cmp    DWORD PTR ds:0x4489a0,0x10
  405154:	jae    0x40518d
  40515a:	cmp    DWORD PTR ds:0x4489a0,0x18
  405161:	jne    0x40517b
  405167:	push   DWORD PTR [ebp-0x10]
  40516a:	push   DWORD PTR [ebp-0x14]
  40516d:	push   0x410939
  405172:	push   DWORD PTR [ebp-0x10]
  405175:	call   DWORD PTR ds:0x443010
  40517b:	jmp    0x405140
  405180:	movzx  edx,BYTE PTR ds:0x44b6e4
  405187:	adc    DWORD PTR ds:0x42482f,edx
  40518d:	mov    eax,DWORD PTR [ebp-0x4]
  405190:	adc    edx,ecx
  405192:	jmp    0x4052a5
  405197:	shr    DWORD PTR [ebp+0x4e7dfe7d],cl
  40519d:	sti    
  40519e:	ins    DWORD PTR es:[edi],dx
  40519f:	fs jne 0x40519a
  4051a2:	push   edi
  4051a3:	lock jns 0x7c698fb3
  4051aa:	jl     0x40520e
  4051ac:	jl     0x40522a
  4051ae:	jl     0x40521b
  4051b0:	dec    ebp
  4051b1:	dec    esi
  4051b2:	push   ss
  4051b3:	pusha  
  4051b4:	repnz mov ebx,0xc6ae72d8
  4051ba:	lea    edi,[ebp+eax*1-0x22]
  4051be:	loope  0x4051a3
  4051c0:	je     0x4051ea
  4051c2:	sub    bl,dh
  4051c4:	arpl   WORD PTR [ecx-0x57],dx
  4051c7:	jnp    0x405166
  4051c9:	dec    ebx
  4051ca:	jl     0x40520d
  4051cc:	jae    0x4051f3
  4051ce:	sbb    bl,cl
  4051d0:	(bad)  
  4051d1:	xchg   esi,eax
  4051d2:	test   bh,al
  4051d4:	inc    esi
  4051d5:	add    ebx,DWORD PTR [esi+0x28]
  4051d8:	xchg   edx,eax
  4051d9:	es sub DWORD PTR fs:[ebx],ebx
  4051dd:	les    edx,FWORD PTR [ebp-0x355b277b]
  4051e3:	es dec ebp
  4051e5:	inc    eax
  4051e6:	stos   DWORD PTR es:[edi],eax
  4051e7:	inc    edi
  4051e8:	xor    eax,0xd7fd9912
  4051ed:	adc    ch,BYTE PTR [ebp-0x2f]
  4051f0:	ror    DWORD PTR [ebx],0xe7
  4051f3:	mov    bh,0x7f
  4051f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051f6:	pop    ds
  4051f7:	xlat   BYTE PTR cs:[ebx]
  4051f9:	push   edi
  4051fa:	je     0x4051ff
  4051fc:	mov    esp,DWORD PTR [ebp+0x45964c83]
  405202:	dec    ebx
  405203:	ins    DWORD PTR es:[edi],dx
  405204:	fbstp  TBYTE PTR [edi+0x14ac109a]
  40520a:	dec    eax
  40520b:	xor    esp,DWORD PTR [eax-0xbe570f0]
  405211:	mov    dh,BYTE PTR [ecx+ebx*4-0x6b]
  405215:	imul   esi,DWORD PTR [esi],0x7f
  405218:	enter  0x882c,0xf6
  40521c:	push   esp
  40521d:	pop    ecx
  40521e:	jmp    0x4051c9
  405220:	idiv   DWORD PTR ds:0xa5973dc
  405226:	addr16 (bad) 
  405229:	pop    eax
  40522a:	sbb    al,0x7d
  40522c:	daa    
  40522d:	mov    cl,0x26
  40522f:	and    DWORD PTR [esi+0x1c],ebx
  405232:	mov    ah,0x96
  405234:	xlat   BYTE PTR ds:[ebx]
  405235:	ret    
  405236:	mov    bl,0x56
  405238:	not    BYTE PTR [ebp+0x7eeb699f]
  40523e:	pop    ebx
  40523f:	add    DWORD PTR [ebp-0x3b27dd],esi
  405245:	neg    BYTE PTR [edx+0x687e67c7]
  40524b:	in     eax,0xaf
  40524d:	dec    ebx
  40524e:	dec    eax
  40524f:	std    
  405250:	lahf   
  405251:	xchg   esi,eax
  405252:	(bad)  [eax]
  405254:	jge    0x405254
  405256:	pop    ebx
  405257:	out    dx,al
  405258:	outs   dx,DWORD PTR ds:[esi]
  405259:	int    0x58
  40525b:	xor    eax,0x11a7e49e
  405260:	or     edi,edx
  405262:	fcmovbe st,st(2)
  405264:	or     eax,0xd138ecb6
  405269:	add    al,0x13
  40526b:	cmp    al,0x37
  40526d:	mov    WORD PTR [ebx+0x6e89b433],gs
  405273:	or     dh,BYTE PTR [ecx-0x4e80eae4]
  405279:	mov    BYTE PTR [eax+0x60],al
  40527c:	xchg   esi,eax
  40527d:	add    eax,0xc2341e99
  405282:	imul   edi,DWORD PTR [ebx],0x99ffa459
  405288:	loop   0x405264
  40528a:	push   esp
  40528b:	sbb    BYTE PTR [esi-0x43],al
  40528e:	xchg   BYTE PTR ds:0xc3180e9e,dl
  405294:	dec    edx
  405295:	repz mov cl,dh
  405298:	inc    esp
  405299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40529a:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40529c:	xchg   esp,eax
  40529d:	and    edi,DWORD PTR [ebx+0x23]
  4052a0:	mov    DWORD PTR [ebp+esi*2+0x558b2b54],0x10ee910
  4052ab:	add    BYTE PTR [eax],al
  4052ad:	shl    ecx,0xe4
  4052b0:	xchg   edi,eax
  4052b1:	fs jns 0x4052f5
  4052b4:	jns    0x4052eb
  4052b6:	adc    al,0x56
  4052b8:	jne    0x4052a9
  4052ba:	inc    ebp
  4052bb:	or     BYTE PTR [esp+0x627c7c28],0x7c
  4052c3:	jl     0x405341
  4052c5:	or     cl,cl
  4052c7:	pushf  
  4052c8:	add    al,0x79
  4052ca:	lods   al,BYTE PTR ds:[esi]
  4052cb:	dec    edx
  4052cc:	arpl   WORD PTR [ecx-0x5af6f90a],dx
  4052d2:	xchg   edi,eax
  4052d3:	pushf  
  4052d4:	push   ebx
  4052d5:	push   0x817099e
  4052da:	retf   
  4052db:	jo     0x4052b8
  4052dd:	fcom   st(1)
  4052df:	mov    ch,0xf9
  4052e1:	lds    ecx,FWORD PTR [eax-0x7dd363a2]
  4052e7:	and    eax,0xdd28a6eb
  4052ec:	jl     0x40529b
  4052ee:	xor    eax,0xa4fec99a
  4052f3:	idiv   DWORD PTR [edx-0x42ec8a8f]
  4052f9:	xchg   DWORD PTR [edx],eax
  4052fb:	or     BYTE PTR [eax],dh
  4052fd:	sub    ah,BYTE PTR [edx+0x36]
  405300:	or     al,0x5d
  405302:	push   cs
  405303:	sbb    ecx,ebx
  405305:	(bad)  
  405307:	sbb    al,0xa4
  405309:	xor    BYTE PTR [eax],ch
  40530b:	sbb    eax,0xc5379a9e
  405310:	shr    BYTE PTR [ecx+0x11],cl
  405313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405314:	retf   0x1d5a
  405317:	adc    BYTE PTR [ecx],0xee
  40531a:	inc    ebx
  40531b:	pop    esp
  40531c:	jmp    0x4052be
  40531e:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  405320:	arpl   ax,bx
  405322:	int3   
  405323:	mov    cl,BYTE PTR cs:[edx-0x135f31d9]
  40532a:	and    al,0xd6
  40532c:	jns    0x4052c2
  40532e:	xchg   BYTE PTR [esi],dl
  405330:	lahf   
  405331:	inc    esi
  405332:	and    eax,0x8e602169
  405337:	ins    BYTE PTR es:[edi],dx
  405338:	xchg   ecx,eax
  405339:	scas   eax,DWORD PTR es:[edi]
  40533a:	in     al,0x3f
  40533c:	sub    BYTE PTR [esi+0x70aa0d23],cl
  405342:	sti    
  405343:	and    BYTE PTR [ecx+0x4c],dh
  405346:	fsubr  QWORD PTR [edx]
  405348:	or     al,0x7c
  40534a:	push   edi
  40534b:	int3   
  40534c:	cmp    bh,cl
  40534e:	cmp    eax,0xb347cfa9
  405353:	out    dx,al
  405354:	pop    ebx
  405355:	(bad)  
  405356:	out    0x52,al
  405358:	mov    cl,BYTE PTR [edi+eiz*2]
  40535b:	sbb    al,0xf
  40535d:	adc    BYTE PTR ds:0x6513c765,al
  405363:	ret    0x1331
  405366:	push   eax
  405367:	push   ss
  405368:	fcom   QWORD PTR [esi-0x49]
  40536b:	push   ecx
  40536c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40536d:	test   esp,esp
  40536f:	ret    
  405370:	jo     0x40533a
  405372:	add    al,0xbc
  405374:	mov    gs,WORD PTR ds:0x796ff114
  40537a:	jecxz  0x40538e
  40537c:	pop    ss
  40537d:	fstp   TBYTE PTR [edi-0x6b0fa460]
  405383:	sbb    BYTE PTR [edx-0x9],bh
  405386:	pop    ebp
  405387:	(bad)  
  405389:	dec    ecx
  40538a:	dec    ebp
  40538b:	add    DWORD PTR [edx+0x1a],esp
  40538e:	mov    eax,ds:0x6b6bd2b6
  405393:	mov    cl,0x96
  405395:	clc    
  405396:	cld    
  405397:	cmp    BYTE PTR [eax+0x9],0x94
  40539b:	inc    ebp
  40539c:	sub    al,0xb3
  40539e:	scas   eax,DWORD PTR es:[edi]
  40539f:	sbb    cl,BYTE PTR [ebp-0x75]
  4053a2:	js     0x405339
  4053a4:	sbb    al,0xf8
  4053a6:	cmp    al,0x65
  4053a8:	pop    edx
  4053a9:	push   ss
  4053aa:	das    
  4053ab:	xchg   ecx,eax
  4053ac:	cwde   
  4053ad:	xchg   edx,eax
  4053ae:	fbstp  TBYTE PTR [edx]
  4053b0:	mov    esp,0xa747050b
  4053b5:	pop    ebx
  4053b6:	ja     0x4053c0
  4053b8:	xor    ecx,ebx
  4053ba:	gs mov ecx,0x7510857
  4053c0:	xor    DWORD PTR ds:0x424837,0x5c99
  4053ca:	xor    eax,ecx
  4053cc:	add    eax,0x32729e
  4053d1:	sub    DWORD PTR ds:0x424843,0x41074b
  4053db:	mov    DWORD PTR [edx],eax
  4053dd:	mov    eax,DWORD PTR [ebp+0xc]
  4053e0:	xor    eax,ecx
  4053e2:	push   esi
  4053e3:	add    DWORD PTR ds:0x44b6e4,0x2efc
  4053ed:	mov    esi,DWORD PTR [ebp+0x10]
  4053f0:	mov    edx,0x32729e
  4053f5:	sub    DWORD PTR ds:0x44e428,0x7c97
  4053ff:	add    eax,edx
  405401:	xor    DWORD PTR ds:0x44e428,0x44b6dc
  40540b:	mov    DWORD PTR [esi+0x4],eax
  40540e:	mov    DWORD PTR ds:0x44e424,0x1d
  405418:	cmp    DWORD PTR ds:0x44e424,0x0
  40541f:	je     0x405452
  405425:	cmp    DWORD PTR ds:0x44e424,0x21
  40542c:	jne    0x405442
  405432:	push   0x4107d0
  405437:	push   0x400000
  40543c:	call   DWORD PTR ds:0x4430dc
  405442:	mov    eax,ds:0x44e424
  405447:	dec    eax
  405448:	mov    ds:0x44e424,eax
  40544d:	jmp    0x405418
  405452:	mov    eax,DWORD PTR [ebp+0x14]
  405455:	mov    esi,DWORD PTR [ebp+0x10]
  405458:	mov    DWORD PTR [esi+0x8],eax
  40545b:	mov    eax,DWORD PTR [ebp+0x18]
  40545e:	mov    esi,DWORD PTR [ebp+0x10]
  405461:	mov    DWORD PTR [esi+0xc],eax
  405464:	mov    eax,DWORD PTR [ebp+0x1c]
  405467:	mov    esi,DWORD PTR [ebp+0x10]
  40546a:	mov    DWORD PTR [esi+0x10],eax
  40546d:	mov    eax,eax
  40546f:	mov    eax,DWORD PTR [ebp+0x8]
  405472:	xor    eax,ecx
  405474:	add    eax,edx
  405476:	pop    esi
  405477:	leave  
  405478:	ret    0x18
  40547b:	push   ebp
  40547c:	mov    ebp,esp
  40547e:	mov    eax,DWORD PTR [ebp+0xc]
  405481:	xor    edx,edx
  405483:	mov    ecx,0x7264fcad
  405488:	jmp    0x40559b
  40548d:	enter  0x8006,0xb
  405491:	inc    edx
  405492:	lea    ebx,[ebx-0x27]
  405495:	mov    dl,0x23
  405497:	sub    dh,BYTE PTR [eax]
  405499:	pop    esi
  40549a:	lahf   
  40549b:	pop    es
  40549c:	sub    ch,BYTE PTR cs:[ebx]
  40549f:	jl     0x40551d
  4054a1:	bound  edi,QWORD PTR [esp+edi*2+0x7c]
  4054a5:	out    dx,al
  4054a6:	sahf   
  4054a7:	and    BYTE PTR [ebx-0x19f1116c],dl
  4054ad:	or     eax,0x4b33a7af
  4054b2:	sbb    bl,BYTE PTR [ebx]
  4054b4:	cdq    
  4054b5:	or     ah,BYTE PTR [edx]
  4054b7:	jo     0x40552b
  4054b9:	imul   ebp,esi,0x30
  4054bc:	frstor [edi]
  4054be:	ins    DWORD PTR es:[edi],dx
  4054bf:	in     al,0x94
  4054c1:	retf   0x1566
  4054c4:	fadd   st,st(7)
  4054c6:	mov    edi,0x3e09e56c
  4054cb:	xlat   BYTE PTR ds:[ebx]
  4054cc:	mov    eax,ds:0x70ee47cf
  4054d1:	mov    bh,0xb2
  4054d3:	add    BYTE PTR [esp+ebx*8-0x2b],0xb5
  4054d8:	dec    esp
  4054d9:	xor    ah,ah
  4054db:	ret    
  4054dc:	mov    ?,WORD PTR [ecx]
  4054de:	sbb    eax,0x1e992e69
  4054e3:	retf   
  4054e4:	test   BYTE PTR [eax+esi*8],dl
  4054e7:	sahf   
  4054e8:	pop    es
  4054e9:	xor    bh,BYTE PTR [esi-0xbe853e6]
  4054ef:	pushf  
  4054f0:	cmc    
  4054f1:	call   edi
  4054f3:	dec    ebx
  4054f4:	loopne 0x40554a
  4054f6:	mov    ds:0xf7172f59,al
  4054fb:	fbstp  TBYTE PTR [ebx+0x2b322f36]
  405501:	je     0x405508
  405503:	test   al,0x90
  405505:	test   al,0x1d
  405507:	inc    ebp
  405508:	stos   DWORD PTR es:[edi],eax
  405509:	or     BYTE PTR [edx+0x5c],al
  40550c:	push   ss
  40550d:	fcmovbe st,st(5)
  40550f:	sub    BYTE PTR [esi-0x5453fc72],ch
  405515:	xchg   DWORD PTR [ebx],ecx
  405517:	data16 repnz sub cl,al
  40551b:	jb     0x405565
  40551d:	inc    ebx
  40551e:	xor    eax,0x263be56c
  405523:	add    edi,DWORD PTR [edx+0x4d]
  405526:	ret    0x86a0
  405529:	mov    edx,0xb2e896c0
  40552e:	jb     0x40558a
  405530:	sub    eax,DWORD PTR [edx+0x56]
  405533:	int3   
  405534:	mov    eax,0x35d93021
  405539:	lahf   
  40553a:	test   eax,0x9443275
  40553f:	mov    ebx,DWORD PTR [ebp-0x26b37a72]
  405545:	outs   dx,DWORD PTR ds:[esi]
  405546:	ret    0x6744
  405549:	stos   DWORD PTR es:[edi],eax
  40554a:	add    DWORD PTR [ebx*1-0x4ce3d27d],esp
  405551:	add    DWORD PTR [eax],edi
  405553:	rcr    BYTE PTR [edx*4-0x31eeb37],cl
  40555a:	mov    esp,0x2ef9db6c
  40555f:	pop    esp
  405560:	inc    edi
  405561:	xor    eax,0x53fe76f2
  405566:	sub    eax,0x5818306a
  40556c:	cli    
  40556d:	add    BYTE PTR [edx-0x6e],dl
  405570:	enter  0x67a8,0x60
  405574:	pop    edi
  405575:	fcom   DWORD PTR [esi+0xa]
  405578:	sub    BYTE PTR [ecx],al
  40557a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40557b:	ins    DWORD PTR es:[edi],dx
  40557c:	and    ebp,DWORD PTR [ebp-0x7b]
  40557f:	cmp    DWORD PTR [eax],0x7e500f5a
  405585:	adc    al,0x63
  405587:	push   ebx
  405588:	add    ebp,DWORD PTR [ebp+eiz*8+0x4e]
  40558c:	jns    0x40555d
  40558e:	pop    esi
  40558f:	mov    bl,0x66
  405591:	sti    
  405592:	sub    eax,0x17351bc5
  405597:	in     al,dx
  405598:	or     BYTE PTR [esi],dl
  40559a:	push   es
  40559b:	div    ecx
  40559d:	mov    ecx,DWORD PTR [ebp+0x10]
  4055a0:	and    ecx,eax
  4055a2:	or     ecx,0x81161d8f
  4055a8:	mov    eax,ecx
  4055aa:	pop    ebp
  4055ab:	ret    0x18
  4055ae:	push   ebp
  4055af:	mov    ebp,esp
  4055b1:	push   ecx
  4055b2:	xor    edx,edx
  4055b4:	xor    edx,DWORD PTR ds:0x4454d4
  4055ba:	xor    ecx,ecx
  4055bc:	or     ecx,DWORD PTR ds:0x44b700
  4055c2:	sub    edx,ecx
  4055c4:	sub    edx,DWORD PTR [edx+ecx*1]
  4055c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4055ce:	movzx  eax,WORD PTR ds:0x44e424
  4055d5:	adc    DWORD PTR ds:0x42482f,eax
  4055db:	jmp    0x405714
  4055e0:	ins    DWORD PTR es:[edi],dx
  4055e1:	je     0x40559f
  4055e3:	xchg   DWORD PTR [ebp+0x47],edx
  4055e6:	jge    0x4055e2
  4055e8:	fs pop ebp
  4055ea:	mov    eax,0x2389b177
  4055ef:	sahf   
  4055f0:	adc    BYTE PTR [edx],ch
  4055f2:	jl     0x405670
  4055f4:	sbb    BYTE PTR [edi+0x7c],bh
  4055f7:	jl     0x405624
  4055f9:	sub    edi,DWORD PTR [ebx+0x53a70dbc]
  4055ff:	mov    ebx,0x9da99c50
  405604:	bound  ecx,QWORD PTR [ebx]
  405606:	cmp    al,0xc3
  405608:	add    al,0xf4
  40560a:	xchg   ecx,eax
  40560b:	dec    esp
  40560c:	ret    0x3205
  40560f:	push   0xed15ad4d
  405614:	cmc    
  405615:	(bad)  
  405616:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405617:	dec    edi
  405618:	or     ecx,DWORD PTR [eax+0x6b]
  40561b:	and    DWORD PTR [ebx-0x7c],ecx
  40561e:	mov    BYTE PTR ds:0x9a972c1e,al
  405624:	push   ecx
  405625:	mov    ebp,0xaf9c6dce
  40562a:	inc    ebx
  40562b:	imul   ecx,DWORD PTR [ecx+0x30ace930],0xffb9d52c
  405635:	mov    cl,0x8d
  405637:	jg     0x405646
  405639:	test   DWORD PTR [ebx+0x432df5b4],0x5e465b0b
  405643:	and    esi,DWORD PTR [ebx]
  405645:	cli    
  405646:	jmp    0x405621
  405648:	sub    bh,BYTE PTR [esi-0x5f]
  40564b:	push   eax
  40564c:	pop    ecx
  40564d:	cmp    DWORD PTR [edx],eax
  40564f:	dec    ecx
  405650:	pop    ebp
  405651:	gs mov edi,0xb3ffccb
  405657:	mov    bh,0x75
  405659:	ret    
  40565a:	nop
  40565b:	inc    edx
  40565c:	jae    0x4056dc
  40565e:	and    al,0x84
  405660:	cwde   
  405661:	pusha  
  405662:	sub    DWORD PTR [eax],esp
  405664:	dec    ebx
  405665:	imul   ebp,eax,0xf7c33158
  40566b:	cmp    BYTE PTR [edx],0x1c
  40566e:	adc    DWORD PTR [edx+ecx*2],esp
  405671:	xlat   BYTE PTR ds:[ebx]
  405672:	push   ebp
  405673:	fcmovbe st,st(5)
  405675:	xchg   ebx,eax
  405676:	aam    0x63
  405678:	lock cwde 
  40567a:	je     0x405697
  40567c:	push   eax
  40567d:	popf   
  40567e:	iret   
  40567f:	stos   DWORD PTR es:[edi],eax
  405680:	jecxz  0x4056c0
  405682:	add    BYTE PTR [ebp-0x6be7da4],cl
  405688:	xor    al,0xf1
  40568a:	xchg   esi,eax
  40568b:	push   eax
  40568c:	or     esi,eax
  40568e:	jae    0x405707
  405690:	mov    ?,esi
  405692:	mov    esi,0x89dbff42
  405697:	xor    bh,BYTE PTR [edi+edi*8+0x22217515]
  40569e:	(bad)  
  40569f:	pop    edi
  4056a0:	pop    edi
  4056a1:	test   al,0x23
  4056a3:	xlat   BYTE PTR ds:[ebx]
  4056a4:	xor    al,0xc4
  4056a6:	jne    0x405633
  4056a8:	mov    edi,DWORD PTR [eax]
  4056aa:	imul   esp,DWORD PTR [edx+0x45],0x988b56cc
  4056b1:	mov    gs:0x20ae7fb5,eax
  4056b7:	xchg   ecx,eax
  4056b8:	outs   dx,BYTE PTR ds:[esi]
  4056b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056ba:	(bad)  
  4056bc:	or     ah,BYTE PTR [eax+0x4595dad0]
  4056c2:	mov    eax,0x83226259
  4056c7:	pop    ss
  4056c8:	pop    esp
  4056c9:	push   edi
  4056ca:	jecxz  0x405696
  4056cc:	jp     0x4056e6
  4056ce:	(bad)  
  4056cf:	mov    ecx,0xa7967983
  4056d4:	and    al,0x9b
  4056d6:	jecxz  0x4056a6
  4056d8:	push   es
  4056d9:	data16 mov dl,0x43
  4056dc:	sbb    bh,al
  4056de:	push   0xffffff98
  4056e0:	xchg   esp,eax
  4056e1:	(bad)  
  4056e2:	cld    
  4056e3:	scas   al,BYTE PTR es:[edi]
  4056e4:	sub    eax,0xb3c2bc28
  4056e9:	sbb    ebp,eax
  4056eb:	clc    
  4056ec:	fsub   DWORD PTR [ebp-0x61]
  4056ef:	pop    ecx
  4056f0:	push   edi
  4056f1:	pusha  
  4056f2:	adc    eax,0x8b0e779d
  4056f7:	inc    ecx
  4056f8:	gs aas 
  4056fa:	je     0x4056ed
  4056fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056fd:	stos   DWORD PTR es:[edi],eax
  4056fe:	daa    
  4056ff:	mov    BYTE PTR [esi+0x40],al
  405702:	jecxz  0x4056b4
  405704:	test   al,0x20
  405706:	ret    0xd764
  405709:	push   0x5a961aa7
  40570e:	xchg   esi,eax
  40570f:	mov    DWORD PTR [ebx-0x740cf67b],eax
  405715:	inc    ebp
  405716:	cld    
  405717:	mov    edx,DWORD PTR [ebp+0x10]
  40571a:	or     ecx,0x2821
  405720:	mov    ecx,0x7510857
  405725:	not    DWORD PTR ds:0x42484b
  40572b:	jmp    0x405864
  405730:	xor    al,dh
  405732:	push   0x65
  405734:	jp     0x40579b
  405736:	fnstsw WORD PTR [ecx-0x7c]
  405739:	mov    ebp,0xb4110b79
  40573e:	outs   dx,DWORD PTR ds:[esi]
  40573f:	push   esp
  405740:	cmp    al,0x2d
  405742:	jl     0x4057c0
  405744:	sbb    BYTE PTR [edi+0x7c],bh
  405747:	jl     0x40578b
  405749:	xor    al,BYTE PTR [ebp+0x11730b1e]
  40574f:	loopne 0x4056df
  405751:	push   es
  405752:	mov    edx,0xe502ed0d
  405757:	ins    BYTE PTR es:[edi],dx
  405758:	mov    BYTE PTR [esi+0x4d],bl
  40575b:	inc    ebp
  40575c:	lahf   
  40575d:	push   0xffffffdf
  40575f:	mov    eax,DWORD PTR [edi]
  405761:	sub    ah,BYTE PTR [ebx-0x61a51636]
  405767:	inc    esp
  405768:	mov    bl,0xad
  40576a:	sub    esp,esi
  40576c:	fist   WORD PTR [bp+di]
  40576f:	es data16 mov dl,0x27
  405773:	mov    al,ds:0x57ab8e23
  405778:	pop    ds
  405779:	xchg   esp,eax
  40577a:	mov    ebx,0xf6868297
  40577f:	scas   eax,DWORD PTR es:[edi]
  405780:	mov    dh,0xaf
  405782:	sahf   
  405783:	mov    edi,0xd7d58fc9
  405788:	in     al,dx
  405789:	xchg   edi,eax
  40578a:	test   DWORD PTR [edx-0x68e1561],esi
  405790:	xchg   ebx,eax
  405791:	fmulp  st(0),st
  405793:	pop    edi
  405794:	fisttp DWORD PTR [ebp+0x7f966b1f]
  40579a:	(bad)  
  40579b:	adc    bh,BYTE PTR [esi-0x74]
  40579e:	(bad)  
  40579f:	in     eax,dx
  4057a0:	inc    edi
  4057a1:	lahf   
  4057a2:	sar    BYTE PTR [ebp-0x17e89680],cl
  4057a8:	icebp  
  4057a9:	dec    edi
  4057aa:	rcl    BYTE PTR [ecx+0x1adccb95],0x4a
  4057b1:	repnz cld 
  4057b3:	push   ebx
  4057b4:	mov    ch,0x1e
  4057b6:	push   ss
  4057b7:	pushf  
  4057b8:	aam    0xf2
  4057ba:	adc    DWORD PTR [ecx],ebp
  4057bc:	jecxz  0x405753
  4057be:	sti    
  4057bf:	or     eax,0x7ed4f8ca
  4057c4:	(bad)
  4057c8:	dec    ebx
  4057c9:	call   0xff4d:0x46009b5e
  4057d0:	aas    
  4057d1:	inc    esp
  4057d2:	ret    0xd5f8
  4057d5:	mov    ebp,0x384fc2ef
  4057da:	sbb    BYTE PTR [edi-0xe917440],ah
  4057e0:	adc    edi,DWORD PTR [eax-0x5c]
  4057e3:	pop    ss
  4057e4:	int    0x6a
  4057e6:	bnd je 0x40583d
  4057e9:	aam    0xd
  4057eb:	dec    esp
  4057ec:	es cld 
  4057ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057ef:	jno    0x405819
  4057f1:	cmp    eax,0xb608480f
  4057f6:	sub    bh,dh
  4057f8:	jns    0x40583a
  4057fa:	mov    dl,0xe8
  4057fc:	sti    
  4057fd:	mov    al,ds:0x2f2e875
  405802:	stos   DWORD PTR es:[edi],eax
  405803:	or     ecx,DWORD PTR [ebp+0x7e]
  405806:	leave  
  405807:	mov    ch,0xd8
  405809:	enter  0x451a,0xa7
  40580d:	xlat   BYTE PTR ds:[ebx]
  40580e:	pop    ss
  40580f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405810:	xor    ch,dh
  405812:	adc    al,0xea
  405814:	aaa    
  405815:	cmp    ecx,ecx
  405817:	loope  0x4057cf
  405819:	outs   dx,DWORD PTR ds:[esi]
  40581a:	inc    esi
  40581b:	mov    cs,eax
  40581d:	sbb    eax,0xaa82adac
  405822:	jmp    FWORD PTR [ebx+0x48]
  405825:	mov    ch,0xeb
  405827:	jno    0x405825
  405829:	arpl   WORD PTR [ebx+edx*1],bx
  40582c:	(bad)  
  40582d:	daa    
  40582e:	aaa    
  40582f:	retf   
  405830:	mov    ecx,0xae79c0af
  405835:	arpl   WORD PTR [edx+0xc8c4e0c],si
  40583b:	lock cmp DWORD PTR cs:[edx],ecx
  40583f:	push   0x6a016abf
  405844:	scas   eax,DWORD PTR es:[edi]
  405845:	cmp    eax,0xc86bfa9b
  40584a:	dec    esi
  40584b:	imul   esi,edi,0x34
  40584e:	cmp    DWORD PTR [edi-0x28],ecx
  405851:	daa    
  405852:	xchg   edi,eax
  405853:	ins    BYTE PTR es:[edi],dx
  405854:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405856:	push   esp
  405857:	xchg   ebx,edx
  405859:	push   esp
  40585a:	js     0x40583a
  40585c:	sbb    DWORD PTR [edx+0x5b52ee95],edx
  405862:	add    esp,edi
  405864:	xor    eax,ecx
  405866:	add    eax,0x32729e
  40586b:	or     DWORD PTR ds:0x424843,0x448984
  405875:	mov    DWORD PTR [edx],eax
  405877:	neg    edx
  405879:	mov    eax,DWORD PTR [ebp+0x14]
  40587c:	and    DWORD PTR ds:0x448994,0x0
  405886:	xor    edx,edx
  405888:	add    edx,DWORD PTR ds:0x448994
  40588e:	inc    edx
  40588f:	mov    DWORD PTR ds:0x448994,edx
  405895:	cmp    DWORD PTR ds:0x448994,0x14
  40589c:	jne    0x4058b0
  4058a2:	push   DWORD PTR [ebp-0x28]
  4058a5:	push   0x4489a4
  4058aa:	call   DWORD PTR ds:0x443360
  4058b0:	cmp    DWORD PTR ds:0x448994,0x13
  4058b7:	jb     0x405886
  4058bd:	mov    edx,DWORD PTR [ebp+0x10]
  4058c0:	mov    DWORD PTR [edx+0x4],eax
  4058c3:	mov    eax,DWORD PTR [ebp+0x18]
  4058c6:	mov    edx,DWORD PTR [ebp+0x10]
  4058c9:	mov    DWORD PTR [edx+0x8],eax
  4058cc:	mov    eax,DWORD PTR [ebp+0x1c]
  4058cf:	mov    edx,DWORD PTR [ebp+0x10]
  4058d2:	jmp    0x405a0b
  4058d7:	in     eax,0xab
  4058d9:	ins    DWORD PTR es:[edi],dx
  4058da:	push   es
  4058db:	jge    0x4058a3
  4058dd:	imul   edi,DWORD PTR gs:[ecx],0x49
  4058e1:	mov    al,ds:0x27696b9
  4058e6:	rcr    eax,cl
  4058e8:	sub    al,0x7c
  4058ea:	jl     0x405904
  4058ec:	jg     0x40596a
  4058ee:	jl     0x4058ac
  4058f0:	cmp    DWORD PTR [ecx],0xffffffa2
  4058f3:	push   ss
  4058f4:	inc    ebp
  4058f5:	add    eax,0x5b8cacde
  4058fa:	jo     0x405925
  4058fc:	push   ss
  4058fd:	nop
  4058fe:	and    ch,al
  405900:	inc    ebp
  405901:	call   0x9478:0xfce836d5
  405908:	(bad)  
  405909:	adc    cl,al
  40590b:	sahf   
  40590c:	sbb    ch,BYTE PTR [edx+0x5aee1cc8]
  405912:	mov    edx,0xd0147f22
  405917:	jbe    0x40595c
  405919:	mov    eax,ds:0xe6dd16fd
  40591e:	cmp    eax,0xa3cdcf98
  405923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405924:	mov    ah,0x8f
  405926:	lods   eax,DWORD PTR ds:[esi]
  405927:	pop    esp
  405928:	not    DWORD PTR [ecx-0xccb8812]
  40592e:	pop    edi
  40592f:	(bad)  
  405930:	jmp    0x8af7801f
  405935:	in     eax,0x22
  405937:	jnp    0x405976
  405939:	ja     0x40597f
  40593b:	jno    0x4058e2
  40593d:	push   ecx
  40593e:	repnz scas al,BYTE PTR es:[edi]
  405940:	sbb    ebp,DWORD PTR [ebp+eiz*2-0x7a4efc85]
  405947:	test   BYTE PTR [ecx],dl
  405949:	jns    0x405959
  40594b:	cwde   
  40594c:	jb     0x4059be
  40594e:	jbe    0x40595a
  405950:	aas    
  405951:	push   ds
  405952:	out    dx,al
  405953:	xor    al,0x98
  405955:	dec    DWORD PTR [ebx-0x79eca0d0]
  40595b:	pushf  
  40595c:	aad    0x29
  40595e:	(bad)  
  40595f:	sub    BYTE PTR [edi],bh
  405961:	and    cl,BYTE PTR [edx+ebp*1]
  405964:	in     eax,0x6c
  405966:	repz jne 0x40595a
  405969:	shl    BYTE PTR [ebx+0x7f],1
  40596c:	xchg   edx,eax
  40596d:	pop    ebp
  40596e:	adc    DWORD PTR [edi-0x30f525f9],ebp
  405974:	xchg   ecx,eax
  405975:	clc    
  405976:	jnp    0x405968
  405978:	xor    eax,0xbfd78c2c
  40597d:	fist   WORD PTR [eax+0x1]
  405980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405981:	jno    0x405942
  405983:	and    BYTE PTR [esi+esi*1+0x30],ah
  405987:	inc    ebx
  405988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405989:	daa    
  40598a:	test   DWORD PTR [esi],ebx
  40598c:	sub    eax,0x8c55c806
  405991:	(bad)  
  405992:	push   esp
  405993:	mov    eax,ebx
  405995:	mov    dl,0x32
  405997:	sbb    DWORD PTR ds:0x196615c4,ecx
  40599d:	ror    ecx,cl
  40599f:	or     al,0xdf
  4059a1:	mov    esi,0x8fed58c9
  4059a6:	xchg   ebp,eax
  4059a7:	ret    
  4059a8:	push   esi
  4059a9:	das    
  4059aa:	jae    0x40595c
  4059ac:	xchg   esi,eax
  4059ad:	dec    ebx
  4059ae:	xchg   ecx,eax
  4059af:	mov    al,ds:0x3a81c5e4
  4059b4:	fsub   st,st(1)
  4059b6:	repnz imul ecx,DWORD PTR [edx-0x18073703],0x70
  4059be:	fdivr  st(5),st
  4059c0:	and    eax,DWORD PTR gs:[ecx-0x76]
  4059c4:	imul   eax,DWORD PTR [esi],0x43
  4059c7:	or     bh,BYTE PTR [edi-0x48cda97]
  4059cd:	mov    ecx,0x856fd9d2
  4059d2:	fcomip st,st(3)
  4059d4:	fdivr  DWORD PTR [ebp-0xc7a3c06]
  4059da:	les    ebp,FWORD PTR [ecx-0x18]
  4059dd:	addr16 jle 0x4059dd
  4059e0:	jmp    0x5b603df6
  4059e5:	jmp    0xa551703a
  4059ea:	inc    ecx
  4059eb:	fsubr  DWORD PTR [esi]
  4059ed:	pop    es
  4059ee:	or     esp,DWORD PTR ds:0x8e112820
  4059f4:	out    dx,eax
  4059f5:	stos   BYTE PTR es:[edi],al
  4059f6:	inc    edx
  4059f7:	lahf   
  4059f8:	xchg   DWORD PTR [esi],ebp
  4059fa:	int3   
  4059fb:	adc    esi,ecx
  4059fd:	or     al,0xc5
  4059ff:	cmp    al,0xd5
  405a01:	mov    edx,0x8cffd77c
  405a06:	dec    bx
  405a08:	pop    ss
  405a09:	or     esp,0xffffff89
  405a0c:	inc    edx
  405a0d:	or     al,0x8b
  405a0f:	inc    ebp
  405a10:	and    BYTE PTR [ebx+0x42891055],cl
  405a16:	adc    BYTE PTR [ebx+0x14458bc0],cl
  405a1c:	test   eax,eax
  405a1e:	jmp    0x405b57
  405a23:	pop    edx
  405a24:	loope  0x405a4a
  405a26:	sbb    bh,BYTE PTR [ebx+0x5f617add]
  405a2c:	retf   
  405a2d:	mov    cl,0x6b
  405a2f:	or     DWORD PTR [esi],ebp
  405a31:	xchg   BYTE PTR [eax],ch
  405a33:	in     al,0x2f
  405a35:	jl     0x405ab3
  405a37:	sbb    BYTE PTR [edi+0x7c],bh
  405a3a:	jl     0x4059c8
  405a3c:	loope  0x405a6d
  405a3e:	mov    bl,0x7a
  405a40:	pop    eax
  405a41:	leave  
  405a42:	cmp    eax,DWORD PTR [eax]
  405a44:	(bad)  
  405a45:	aad    0x3a
  405a47:	fcmovbe st,st(1)
  405a49:	push   ds
  405a4a:	mov    esi,esi
  405a4c:	call   0x631ed3ef
  405a51:	pop    ds
  405a52:	ja     0x405a4e
  405a54:	sahf   
  405a55:	or     BYTE PTR [esi+esi*2+0x1d],bh
  405a59:	cmp    al,0x73
  405a5b:	dec    esp
  405a5c:	je     0x405a60
  405a5e:	iret   
  405a5f:	adc    DWORD PTR [ecx-0x4f6340e4],esi
  405a65:	popf   
  405a66:	add    al,BYTE PTR [ebx+esi*2-0x6bd18ffb]
  405a6d:	add    al,0x1d
  405a6f:	inc    esp
  405a70:	mov    esi,0xdc1ddb16
  405a75:	outs   dx,BYTE PTR ds:[esi]
  405a76:	pop    ebp
  405a77:	pop    edx
  405a78:	es loopne 0x405a66
  405a7b:	adc    DWORD PTR [esi+eax*8-0x42e4f11d],eax
  405a82:	cli    
  405a83:	sbb    BYTE PTR [ebx],dl
  405a85:	pop    es
  405a86:	lods   eax,DWORD PTR ds:[esi]
  405a87:	push   cs
  405a88:	ins    BYTE PTR es:[edi],dx
  405a89:	mov    esp,0xb3b97c3c
  405a8e:	cld    
  405a8f:	jp     0x405ad3
  405a91:	push   ebp
  405a92:	cdq    
  405a93:	jmp    DWORD PTR [ebx-0x6197473]
  405a99:	jmp    0xf1df:0x6dc251b
  405aa0:	test   bl,0x21
  405aa3:	aaa    
  405aa4:	mov    dh,0xf1
  405aa6:	add    ch,BYTE PTR [edx+0x74]
  405aa9:	or     ah,BYTE PTR [edi+0xe]
  405aac:	lods   al,BYTE PTR ds:[esi]
  405aad:	outs   dx,DWORD PTR ds:[esi]
  405aae:	rol    BYTE PTR [edi-0x2b],1
  405ab1:	imul   ebx,DWORD PTR [ebp+0x4272a221],0xb12ff46c
  405abb:	xchg   DWORD PTR [edx-0x6f],esp
  405abe:	bound  ecx,QWORD PTR [esi+0x4d62516c]
  405ac4:	cld    
  405ac5:	and    bl,BYTE PTR ds:0x574b04a7
  405acb:	aas    
  405acc:	dec    ecx
  405acd:	xor    bh,BYTE PTR [ebp+0x2]
  405ad0:	ret    
  405ad1:	dec    ebp
  405ad2:	xlat   BYTE PTR ds:[ebx]
  405ad3:	inc    ebx
  405ad4:	ret    
  405ad5:	mov    ah,0xa2
  405ad7:	addr16 inc ebp
  405ad9:	rol    ch,1
  405adb:	mov    ebx,0x7fb3070d
  405ae0:	cmp    eax,0xd9396366
  405ae5:	addr16 hlt 
  405ae7:	repz jg 0x405aca
  405aea:	add    DWORD PTR [ecx],edx
  405aec:	pop    ds
  405aed:	push   es
  405aee:	ret    
  405aef:	mov    eax,0x7aea8a77
  405af4:	mov    dh,0xf
  405af6:	or     ch,dl
  405af8:	adc    dl,dl
  405afa:	adc    dh,dl
  405afc:	fcomp  DWORD PTR [ebx-0x1e]
  405aff:	enter  0xbd23,0x3
  405b03:	outs   dx,DWORD PTR ds:[esi]
  405b04:	inc    eax
  405b05:	bound  ebp,QWORD PTR fs:[edx+0x54f4aa2d]
  405b0c:	fisttp QWORD PTR [ecx+0x5f]
  405b0f:	popa   
  405b10:	addr16 inc ebp
  405b12:	sub    DWORD PTR [edx],esi
  405b14:	or     DWORD PTR [esi],eax
  405b16:	gs daa 
  405b18:	dec    ebx
  405b19:	push   ss
  405b1a:	arpl   WORD PTR [ecx+0x6d],ax
  405b1d:	inc    edi
  405b1e:	sti    
  405b1f:	sub    BYTE PTR [ecx+0x1e],al
  405b22:	adc    bl,BYTE PTR [edi]
  405b24:	and    DWORD PTR [ebx+edx*4+0xf5d91db],ebx
  405b2b:	scas   eax,DWORD PTR es:[edi]
  405b2c:	std    
  405b2d:	inc    edi
  405b2e:	cs sub eax,0x987b9efb
  405b34:	cmp    eax,0x3a9208ad
  405b39:	aam    0x18
  405b3b:	ret    
  405b3c:	ror    DWORD PTR gs:[ebx-0x7003467b],1
  405b43:	dec    eax
  405b44:	(bad)  
  405b46:	in     al,dx
  405b47:	fstp   DWORD PTR [ebp-0x4]
  405b4a:	adc    esp,ebp
  405b4c:	fistp  WORD PTR [ebx-0x6f0404e6]
  405b52:	mov    eax,0x39ad8ac5
  405b57:	mov    eax,DWORD PTR [ebp+0x8]
  405b5a:	jne    0x405b63
  405b60:	mov    eax,DWORD PTR [ebp+0xc]
  405b63:	xor    eax,ecx
  405b65:	add    eax,0x32729e
  405b6a:	leave  
  405b6b:	ret    0x1c
  405b6e:	push   ebp
  405b6f:	mov    ebp,esp
  405b71:	sub    esp,0x78
  405b74:	adc    DWORD PTR ds:0x448988,0x7d94
  405b7e:	jmp    0x405caa
  405b83:	or     esp,ebx
  405b85:	dec    ecx
  405b86:	or     BYTE PTR [ecx-0x53],ch
  405b89:	dec    ebp
  405b8a:	aad    0x48
  405b8c:	aas    
  405b8d:	adc    esi,esp
  405b8f:	xchg   esp,eax
  405b90:	and    BYTE PTR [ecx+0x7c2e80bc],ah
  405b96:	jl     0x405ba5
  405b98:	jg     0x405c16
  405b9a:	jl     0x405ba0
  405b9c:	inc    edx
  405b9d:	dec    edx
  405b9e:	aas    
  405b9f:	dec    esi
  405ba0:	mov    cl,0x2
  405ba2:	sub    ebp,DWORD PTR [ecx-0x3e]
  405ba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ba6:	ds add al,BYTE PTR gs:[esi-0x638b2b2a]
  405bae:	in     al,dx
  405baf:	pop    esp
  405bb0:	mov    edi,0x611e25ab
  405bb5:	lock xchg edx,eax
  405bb7:	push   esi
  405bb8:	xchg   DWORD PTR [ebx-0x61e7a3cf],ecx
  405bbe:	mov    eax,0xacc9a412
  405bc3:	out    0x55,al
  405bc5:	sbb    ebp,esp
  405bc7:	or     ch,BYTE PTR [ecx+0x373568ab]
  405bcd:	fdivr  DWORD PTR [edi+eax*2]
  405bd0:	or     eax,0x21c9162c
  405bd5:	call   DWORD PTR [ebp+0x60c050c3]
  405bdb:	push   es
  405bdc:	dec    esi
  405bdd:	aad    0xba
  405bdf:	inc    esi
  405be0:	out    dx,al
  405be1:	sbb    bh,bl
  405be3:	dec    ebx
  405be4:	inc    esp
  405be5:	ds in  al,0xee
  405be8:	sbb    eax,0x6b327b4e
  405bed:	out    0xf,al
  405bef:	add    DWORD PTR [ebx+eax*8],eax
  405bf2:	jmp    0x613ce6f5
  405bf7:	fdivr  st,st(4)
  405bf9:	mov    fs,WORD PTR [ebp+0x78f989c5]
  405bff:	repnz int3 
  405c01:	sub    DWORD PTR [ecx+0x56],ebp
  405c04:	icebp  
  405c05:	mov    BYTE PTR [esi],bl
  405c07:	xchg   ebp,eax
  405c08:	dec    ebx
  405c09:	aas    
  405c0a:	fldenv [ebx+eax*2+0x6d4ddaa0]
  405c11:	pushf  
  405c12:	mov    cl,0xa4
  405c14:	scas   eax,DWORD PTR es:[edi]
  405c15:	test   cl,dl
  405c17:	fs into 
  405c19:	test   eax,0x5d76509f
  405c1e:	mov    eax,ds:0xb0b5dc4
  405c23:	addr16 call 0xa409001d
  405c29:	repz adc ecx,DWORD PTR [esi]
  405c2c:	push   ss
  405c2d:	xlat   BYTE PTR ds:[ebx]
  405c2e:	popf   
  405c2f:	mov    al,ds:0xc6b63c48
  405c34:	aam    0xae
  405c36:	addr16 mov ds:0x8348,al
  405c3a:	dec    esi
  405c3b:	bswap  ebp
  405c3d:	push   cs
  405c3e:	test   al,0x58
  405c40:	fcomp  st(6)
  405c42:	jle    0x405c37
  405c44:	adc    al,0xca
  405c46:	stos   BYTE PTR es:[edi],al
  405c47:	in     eax,0x42
  405c49:	mov    cl,al
  405c4b:	jae    0x405c71
  405c4d:	mov    cl,BYTE PTR [ecx-0x1841c7a6]
  405c53:	adc    eax,0x44c1f282
  405c58:	popf   
  405c59:	or     eax,esp
  405c5b:	dec    edi
  405c5c:	mov    ch,0x71
  405c5e:	clc    
  405c5f:	stos   BYTE PTR es:[edi],al
  405c60:	pop    ds
  405c61:	mov    ds:0xf7694315,al
  405c66:	pop    eax
  405c67:	(bad)  
  405c68:	jo     0x405c77
  405c6a:	fs sti 
  405c6c:	and    edi,DWORD PTR [edx-0x4cf657aa]
  405c72:	lock shl DWORD PTR [edx+0xf129f44],cl
  405c79:	inc    edi
  405c7a:	in     al,0xb5
  405c7c:	push   es
  405c7d:	adc    edx,edx
  405c7f:	jecxz  0x405c70
  405c81:	add    ebp,DWORD PTR [ecx+0x67]
  405c84:	imul   edi,DWORD PTR [ebx-0x4118a5e3],0x2
  405c8b:	mov    ds:0x870d78e9,eax
  405c90:	nop
  405c91:	or     ebx,DWORD PTR [ecx+0x6c1c6605]
  405c97:	mov    bh,0x18
  405c99:	rcr    DWORD PTR [ebx],0xfe
  405c9c:	test   BYTE PTR [edx+ebp*8+0x63],0xcf
  405ca1:	jb     0x405c4d
  405ca3:	stc    
  405ca4:	mov    dl,0x71
  405ca6:	fisttp DWORD PTR [ebx-0x5f5e22ef]
  405cac:	push   ecx
  405cad:	inc    esp
  405cae:	add    BYTE PTR [ecx-0x535e0fbb],cl
  405cb4:	push   edx
  405cb5:	inc    esp
  405cb6:	add    BYTE PTR [ecx+0x44e4102d],al
  405cbc:	add    ah,cl
  405cbe:	mov    dh,0x44
  405cc0:	add    BYTE PTR [ecx-0x27082fbb],cl
  405cc6:	mov    DWORD PTR [ebp-0xc],0xf89c8535
  405ccd:	adc    eax,DWORD PTR ds:0x42483b
  405cd3:	mov    DWORD PTR [ebp-0x14],0xf89c8534
  405cda:	mov    eax,DWORD PTR [ebp-0xc]
  405cdd:	xor    DWORD PTR ds:0x44b6e0,0x59fc
  405ce7:	push   ebx
  405ce8:	or     DWORD PTR ds:0x42484b,0x424843
  405cf2:	push   esi
  405cf3:	adc    DWORD PTR ds:0x424843,edi
  405cf9:	push   edi
  405cfa:	mov    DWORD PTR ds:0x44b6d4,0x13
  405d04:	cmp    DWORD PTR ds:0x44b6d4,0x0
  405d0b:	je     0x405e95
  405d11:	cmp    DWORD PTR ds:0x44b6d4,0x3
  405d18:	jne    0x405d31
  405d1e:	push   0x141c
  405d23:	push   0x6005
  405d28:	push   DWORD PTR [ebp-0xc]
  405d2b:	call   DWORD PTR ds:0x4430e0
  405d31:	cmp    DWORD PTR ds:0x44b6d4,0x4
  405d38:	jne    0x405d4d
  405d3e:	xor    edi,edi
  405d40:	xor    edi,DWORD PTR ds:0x44b6d4
  405d46:	dec    edi
  405d47:	mov    DWORD PTR ds:0x44b6d4,edi
  405d4d:	mov    edi,DWORD PTR ds:0x44b6d4
  405d53:	dec    edi
  405d54:	mov    DWORD PTR ds:0x44b6d4,edi
  405d5a:	jmp    0x405d04
  405d5f:	and    DWORD PTR ds:0x448988,0x5029
  405d69:	jmp    0x405e95
  405d6e:	out    0xd6,eax
  405d70:	(bad)  
  405d71:	sub    al,0xf9
  405d73:	sub    al,0xf9
  405d75:	jmp    0x592bcf2a
  405d7a:	xchg   ecx,eax
  405d7b:	sub    eax,0x219190d9
  405d80:	jl     0x405dfe
  405d82:	or     eax,0xf47c7c7f
  405d87:	jmp    0x17e574f6
  405d8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d8d:	or     al,0x8b
  405d8f:	icebp  
  405d90:	cmp    al,0x55
  405d92:	mov    gs,WORD PTR [esi+0x3c4f3c1f]
  405d98:	and    ch,ch
  405d9a:	ja     0x405d7d
  405d9c:	or     bl,0x81
  405d9f:	in     eax,0xec
  405da1:	mov    al,ds:0x352614c0
  405da6:	cs add al,0x9
  405da9:	cs call 0x2ca8f349
  405daf:	test   eax,0x28a77232
  405db4:	push   ecx
  405db5:	mov    cl,0xf0
  405db7:	sub    dh,cl
  405db9:	jae    0x405d45
  405dbb:	pop    ebp
  405dbc:	aas    
  405dbd:	repz aam 0xab
  405dc0:	call   0xb72398aa
  405dc5:	jg     0x405e35
  405dc7:	xor    BYTE PTR [eax+0x1353d0f9],0x76
  405dce:	and    DWORD PTR [ebx+0x23],esi
  405dd1:	xor    ch,BYTE PTR [ebx]
  405dd3:	fbstp  TBYTE PTR [esi+0x69]
  405dd6:	mov    dh,0x7f
  405dd8:	push   ebp
  405dd9:	pop    esp
  405dda:	mov    ds:0x5d619d3d,eax
  405ddf:	cmp    al,0x73
  405de1:	les    ebx,FWORD PTR es:[esi]
  405de4:	cdq    
  405de5:	xchg   edx,eax
  405de6:	fs icebp 
  405de8:	cmp    BYTE PTR ds:0xbcbbbde,bl
  405dee:	fs ins BYTE PTR es:[edi],dx
  405df0:	inc    ecx
  405df1:	rcr    DWORD PTR [edi-0x18],1
  405df4:	xchg   DWORD PTR [edi+0x15],esi
  405df7:	pop    ebp
  405df8:	mov    dl,0xd4
  405dfa:	jmp    0xb8a0ac46
  405dff:	clc    
  405e00:	mov    ebp,0x950691c2
  405e05:	and    ebp,DWORD PTR ds:[edi-0xd43d994]
  405e0c:	sub    eax,0x5023a110
  405e11:	out    dx,al
  405e12:	push   0x6448a154
  405e17:	add    ebp,DWORD PTR [edi]
  405e19:	cmp    BYTE PTR ds:0xf59fcd06,0x3f
  405e20:	adc    al,0xb9
  405e22:	fwait
  405e23:	mov    ds:0xe7a28bef,al
  405e28:	ins    DWORD PTR es:[edi],dx
  405e29:	fiadd  WORD PTR [ebp+0x74]
  405e2c:	loope  0x405e7a
  405e2e:	es mov esp,0x73a29925
  405e34:	xchg   BYTE PTR [ebx-0x749d47a0],dh
  405e3a:	ret    
  405e3b:	jl     0x405e07
  405e3d:	dec    ebx
  405e3e:	std    
  405e3f:	add    eax,0xdc8f25ad
  405e44:	cmp    DWORD PTR [esi+0x28],0x8ea47e24
  405e4b:	mov    ds:0xc9893e32,eax
  405e50:	or     al,0x46
  405e52:	sub    al,0xb3
  405e54:	mov    bl,0x58
  405e56:	bound  ebx,QWORD PTR [ebp+0x5c49b0a2]
  405e5c:	aad    0xca
  405e5e:	inc    esi
  405e5f:	inc    ecx
  405e60:	ja     0x405e83
  405e62:	rcl    DWORD PTR [edi],1
  405e64:	repz cmp BYTE PTR gs:[edx+0x5e],bl
  405e69:	imul   DWORD PTR [edi+0x2970f9ad]
  405e6f:	(bad)  
  405e70:	repz xchg esp,eax
  405e72:	mov    bh,ah
  405e74:	fiadd  DWORD PTR [eax-0x6e]
  405e77:	dec    edx
  405e78:	sbb    ecx,ebp
  405e7a:	icebp  
  405e7b:	fimul  WORD PTR [eax+0xf4caad1]
  405e81:	sbb    al,0x57
  405e83:	push   es
  405e84:	pop    ebx
  405e85:	cdq    
  405e86:	aas    
  405e87:	xor    ebx,DWORD PTR [edx+0x773a71ce]
  405e8d:	xor    DWORD PTR [esi],ebp
  405e8f:	push   ss
  405e90:	mov    ebp,0xcbc1d245
  405e95:	mov    esi,0x7510857
  405e9a:	xor    eax,esi
  405e9c:	movzx  edi,WORD PTR ds:0x410753
  405ea3:	xor    DWORD PTR ds:0x448980,edi
  405ea9:	mov    edi,0x32729e
  405eae:	jmp    0x405fda
  405eb3:	icebp  
  405eb4:	popa   
  405eb5:	jno    0x405f2b
  405eb7:	loope  0x405f1d
  405eb9:	mov    DWORD PTR [ecx-0x35],edi
  405ebc:	add    esi,DWORD PTR [esi+0x2d]
  405ebf:	repnz or eax,0x20aedd51
  405ec5:	jl     0x405f43
  405ec7:	or     eax,0xff7c7c7f
  405ecc:	xchg   ebx,eax
  405ecd:	mov    ecx,0xaeb9839d
  405ed2:	mov    bh,0xc1
  405ed4:	mov    bl,0x6f
  405ed6:	cmp    cl,BYTE PTR [esi+ebx*1+0x34]
  405eda:	out    dx,eax
  405edb:	les    ebx,FWORD PTR [ebx+0x1d402edf]
  405ee1:	dec    edi
  405ee2:	jecxz  0x405ed4
  405ee4:	and    ebx,DWORD PTR ds:0x4bd33ace
  405eea:	lods   eax,DWORD PTR ds:[esi]
  405eeb:	pop    esp
  405eec:	mov    ds:0x6759f574,al
  405ef1:	lock out 0x4,al
  405ef4:	jl     0x405ed4
  405ef6:	cmp    edx,esp
  405ef8:	push   edx
  405ef9:	push   edi
  405efa:	add    eax,0x98c9a5e2
  405eff:	sbb    ah,BYTE PTR [edi]
  405f01:	test   BYTE PTR [eax+0x3f],bl
  405f04:	xchg   ecx,eax
  405f05:	push   eax
  405f06:	ret    0x474
  405f09:	test   al,0x2a
  405f0b:	sub    BYTE PTR [eax-0x4c3ecf4b],cl
  405f11:	push   edi
  405f12:	inc    ebx
  405f13:	or     DWORD PTR [esi-0x1ac3fb1],esi
  405f19:	jno    0x405f71
  405f1b:	and    eax,0x2d7addc2
  405f20:	popa   
  405f21:	xchg   esp,eax
  405f22:	push   edi
  405f23:	xchg   DWORD PTR [edx*1+0x1fab9b8a],ebx
  405f2a:	in     al,0xb6
  405f2c:	idiv   esi
  405f2e:	mov    esp,0x7a7f697c
  405f33:	jmp    0x405f5f
  405f35:	retf   
  405f36:	imul   eax,DWORD PTR [eax],0xffffffa8
  405f39:	stos   DWORD PTR es:[edi],eax
  405f3a:	jle    0x405fb3
  405f3c:	lock inc ebp
  405f3e:	push   es
  405f3f:	or     DWORD PTR [edx+0x16],edx
  405f42:	xchg   esp,eax
  405f43:	(bad)  
  405f45:	inc    ebp
  405f46:	jg     0x405f63
  405f48:	cmp    ah,BYTE PTR [eax+0x723d569]
  405f4e:	(bad)  
  405f4f:	fild   DWORD PTR [edi]
  405f51:	push   0x84af3a8a
  405f56:	mov    cl,BYTE PTR [edi+0x6489c800]
  405f5c:	rcl    BYTE PTR [eax],cl
  405f5e:	add    eax,0x9d274567
  405f63:	pop    es
  405f64:	mov    esi,0x77010d93
  405f69:	sub    bh,bh
  405f6b:	data16 mov ah,0xb6
  405f6e:	jecxz  0x405f59
  405f70:	adc    al,0xed
  405f72:	pusha  
  405f73:	shl    BYTE PTR [ebp-0x56c5671c],cl
  405f79:	je     0x405f35
  405f7b:	pushfw 
  405f7d:	lea    edx,[esi+0xb]
  405f80:	out    dx,al
  405f81:	mov    al,0x7c
  405f83:	test   al,0xea
  405f85:	jne    0x405fa7
  405f87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f88:	mov    eax,ds:0xfc1c3d8e
  405f8d:	inc    eax
  405f8e:	push   ebp
  405f8f:	pop    ebp
  405f90:	dec    edx
  405f91:	jbe    0x405fac
  405f93:	mov    bl,0x32
  405f95:	mov    al,ds:0xeded5eca
  405f9a:	inc    ebp
  405f9b:	sti    
  405f9c:	adc    eax,0xe63246cb
  405fa1:	fucom  st(4)
  405fa3:	and    dh,cl
  405fa5:	fld    DWORD PTR [eax-0x2a]
  405fa8:	stc    
  405fa9:	xor    eax,0x351ea5cb
  405fae:	rol    BYTE PTR [edi+0xe],cl
  405fb1:	aaa    
  405fb2:	cmp    BYTE PTR [ebx+0x85c9c99],0x1
  405fb9:	call   0x8ffa436f
  405fbe:	pushf  
  405fbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fc0:	mov    dl,0x92
  405fc2:	xchg   ebx,eax
  405fc3:	inc    edi
  405fc4:	push   ss
  405fc5:	(bad)  
  405fc6:	cmp    BYTE PTR [esi+ebp*1+0x52],cl
  405fca:	pop    ecx
  405fcb:	mov    BYTE PTR [ebp+0x74],ch
  405fce:	adc    DWORD PTR [eax+0x99741c9],esp
  405fd4:	dec    esp
  405fd5:	push   ss
  405fd6:	in     al,0x2a
  405fd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fd9:	add    DWORD PTR [ebx],0xe04589c7
  405fdf:	mov    DWORD PTR ds:0x42483f,0x15
  405fe9:	cmp    DWORD PTR ds:0x42483f,0x0
  405ff0:	je     0x406021
  405ff6:	cmp    DWORD PTR ds:0x42483f,0x23
  405ffd:	jne    0x40600e
  406003:	push   0x410927
  406008:	call   DWORD PTR ds:0x4430e4
  40600e:	xor    eax,eax
  406010:	or     eax,DWORD PTR ds:0x42483f
  406016:	dec    eax
  406017:	mov    ds:0x42483f,eax
  40601c:	jmp    0x405fe9
  406021:	mov    DWORD PTR [ebp-0x28],0xf89cb535
  406028:	mov    DWORD PTR [ebp-0x34],0xf89f0535
  40602f:	mov    DWORD PTR ds:0x448994,0x1696
  406039:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  406040:	or     DWORD PTR ds:0x44b6e0,edx
  406046:	mov    DWORD PTR [ebp-0x24],0xf89c85d5
  40604d:	and    DWORD PTR ds:0x410743,0x0
  406057:	jmp    0x40606a
  40605c:	xor    eax,eax
  40605e:	xor    eax,DWORD PTR ds:0x410743
  406064:	inc    eax
  406065:	mov    ds:0x410743,eax
  40606a:	cmp    DWORD PTR ds:0x410743,0x1c
  406071:	jae    0x4060ad
  406077:	cmp    DWORD PTR ds:0x410743,0x2b
  40607e:	jne    0x4060a3
  406084:	push   0x78a8
  406089:	push   0x44b6e0
  40608e:	push   0x8180
  406093:	push   0x6239
  406098:	push   0x1782
  40609d:	call   DWORD PTR ds:0x443364
  4060a3:	jmp    0x40605c
  4060a8:	xor    eax,0x3639
  4060ad:	mov    eax,DWORD PTR [ebp-0xc]
  4060b0:	add    DWORD PTR ds:0x4489a4,0x2d0a
  4060ba:	xor    eax,esi
  4060bc:	sbb    DWORD PTR ds:0x42482f,0x6315
  4060c6:	add    eax,edi
  4060c8:	mov    DWORD PTR [ebp-0x18],eax
  4060cb:	or     DWORD PTR ds:0x44e414,0x658e
  4060d5:	mov    DWORD PTR [ebp-0x1c],0xf89c8530
  4060dc:	mov    BYTE PTR [ebp-0x1],0x57
  4060e0:	or     DWORD PTR ds:0x448994,edi
  4060e6:	mov    eax,DWORD PTR [ebp-0xc]
  4060e9:	xor    eax,esi
  4060eb:	add    eax,edi
  4060ed:	sbb    DWORD PTR ds:0x410753,0x34b4
  4060f7:	mov    DWORD PTR [ebp-0x18],eax
  4060fa:	dec    DWORD PTR ds:0x448998
  406100:	mov    eax,DWORD PTR [ebp-0x24]
  406103:	xor    eax,esi
  406105:	adc    DWORD PTR ds:0x41074b,0x44898c
  40610f:	add    eax,edi
  406111:	xor    DWORD PTR ds:0x448994,0x44e420
  40611b:	push   eax
  40611c:	mov    eax,DWORD PTR [ebp-0x28]
  40611f:	xor    eax,esi
  406121:	sbb    DWORD PTR ds:0x44899c,0x1e41
  40612b:	add    eax,edi
  40612d:	xor    DWORD PTR ds:0x448994,0x44e424
  406137:	push   eax
  406138:	and    DWORD PTR ds:0x41073f,0x0
  406142:	mov    eax,ds:0x41073f
  406147:	inc    eax
  406148:	mov    ds:0x41073f,eax
  40614d:	cmp    DWORD PTR ds:0x41073f,0xc
  406154:	jne    0x406170
  40615a:	push   0x8a0b
  40615f:	push   0x44b6d0
  406164:	push   DWORD PTR [ebp-0x28]
  406167:	push   DWORD PTR [ebp-0x20]
  40616a:	call   DWORD PTR ds:0x4430e8
  406170:	cmp    DWORD PTR ds:0x41073f,0xb
  406177:	jne    0x40618b
  40617d:	xor    eax,eax
  40617f:	add    eax,DWORD PTR ds:0x41073f
  406185:	inc    eax
  406186:	mov    ds:0x41073f,eax
  40618b:	cmp    DWORD PTR ds:0x41073f,0x17
  406192:	jb     0x406142
  406198:	movzx  eax,BYTE PTR ds:0x424837
  40619f:	xor    DWORD PTR ds:0x44b6d8,eax
  4061a5:	mov    eax,DWORD PTR [ebp-0x1c]
  4061a8:	neg    DWORD PTR ds:0x42483f
  4061ae:	xor    eax,esi
  4061b0:	add    eax,edi
  4061b2:	or     DWORD PTR ds:0x44b6d8,0x41073f
  4061bc:	jmp    0x4062e8
  4061c1:	sar    DWORD PTR [ebp+0x7d793df9],cl
  4061c7:	sar    DWORD PTR [ebp+0x7a],cl
  4061ca:	sub    eax,0x1db8f1da
  4061cf:	sub    eax,DWORD PTR [ebp+0x7c7c23bf]
  4061d5:	or     eax,0xec7c7c7f
  4061da:	and    edi,DWORD PTR [esi+0x463d6c6a]
  4061e0:	xchg   BYTE PTR [ebx],ah
  4061e2:	pop    ds
  4061e3:	mov    ebx,tr1
  4061e6:	arpl   WORD PTR [edx],cx
  4061e8:	mov    ah,0x26
  4061ea:	enter  0xba9,0x3e
  4061ee:	out    0xbd,eax
  4061f0:	out    0xa3,al
  4061f2:	retf   0xcdf5
  4061f5:	mov    ch,0x1a
  4061f7:	mov    ecx,0x521e8605
  4061fc:	cmp    al,0x30
  4061fe:	adc    DWORD PTR ds:0xfdc8b396,0x3f
  406205:	in     eax,dx
  406206:	add    DWORD PTR [eax],0xffffffae
  406209:	call   0x16ba:0xbe4c187d
  406210:	es dec edi
  406212:	inc    edi
  406213:	add    al,0xb1
  406215:	mov    bl,0x54
  406217:	ins    DWORD PTR es:[edi],dx
  406218:	xchg   BYTE PTR [edi],dl
  40621a:	mov    bl,0x78
  40621c:	sbb    ecx,edx
  40621e:	fadd   DWORD PTR [edx]
  406220:	imul   BYTE PTR [edx+ecx*2-0x29fdca4c]
  406227:	hlt    
  406228:	test   eax,0x5c14095e
  40622d:	or     edx,DWORD PTR [esi-0x66]
  406230:	fldcw  WORD PTR ds:[edx-0x18]
  406234:	pop    ebx
  406235:	pop    esi
  406236:	retf   0xbb92
  406239:	repnz cld 
  40623b:	sahf   
  40623c:	mov    bl,0x54
  40623e:	mov    edi,0xb836bcaa
  406243:	sbb    BYTE PTR [edx-0x73387fbf],ah
  406249:	sbb    esi,DWORD PTR [edi-0x18abcd6a]
  40624f:	lahf   
  406250:	mov    bl,0x83
  406252:	ror    BYTE PTR [ebx-0x258d694c],0xd6
  406259:	cmp    al,0x3b
  40625b:	test   BYTE PTR [edi+ecx*1+0x206029cc],al
  406262:	dec    eax
  406263:	jne    0x4061e5
  406265:	pop    eax
  406266:	cwde   
  406267:	mov    edi,0x8dc8ae00
  40626c:	test   eax,0xc877d3aa
  406271:	cld    
  406272:	mov    ss,WORD PTR [esi-0x76]
  406275:	rol    DWORD PTR [eax-0x690de1c9],0xa7
  40627c:	xchg   ebp,eax
  40627d:	aaa    
  40627e:	xchg   esp,eax
  40627f:	xchg   ecx,eax
  406280:	pop    edx
  406281:	fadd   DWORD PTR [ebx-0x44]
  406284:	xor    bh,BYTE PTR [edi+eiz*4]
  406287:	pop    esp
  406288:	xchg   DWORD PTR [ebp-0x215a350b],edi
  40628e:	imul   ebp,DWORD PTR [edx],0x5e
  406291:	inc    esi
  406292:	adc    DWORD PTR [ebx-0x51],edi
  406295:	push   edi
  406296:	out    0x1b,al
  406298:	es cdq 
  40629a:	or     bl,BYTE PTR [edi]
  40629c:	sub    DWORD PTR [esi],esi
  40629e:	jmp    0xe197e2b4
  4062a3:	push   ebp
  4062a4:	pop    ebp
  4062a5:	stc    
  4062a6:	or     bh,bl
  4062a8:	shl    DWORD PTR [esi-0x2f],0x90
  4062ac:	pop    ebx
  4062ad:	ins    BYTE PTR es:[edi],dx
  4062ae:	xchg   esi,eax
  4062af:	aad    0xf6
  4062b1:	rcr    DWORD PTR [ebp+0x7e],cl
  4062b4:	out    dx,al
  4062b5:	stc    
  4062b6:	xor    dh,ah
  4062b8:	sbb    DWORD PTR [edi],eax
  4062ba:	sbb    ebp,esi
  4062bc:	hlt    
  4062bd:	les    eax,FWORD PTR [eax+0x6cfaddbc]
  4062c3:	fdiv   st(2),st
  4062c5:	sub    eax,0xbb2833c0
  4062ca:	ret    0x3d92
  4062cd:	jb     0xb6065788
  4062d3:	iret   
  4062d4:	adc    cl,0x2a
  4062d7:	pop    esp
  4062d8:	fucom  st(2)
  4062da:	xchg   ebx,eax
  4062db:	stos   DWORD PTR es:[edi],eax
  4062dc:	push   ds
  4062dd:	cvtps2pd xmm6,xmm2
  4062e0:	jg     0x40626e
  4062e2:	aam    0x4
  4062e4:	test   eax,0x50211871
  4062e9:	lea    eax,[ebp-0x78]
  4062ec:	add    DWORD PTR ds:0x44e410,0x44e418
  4062f6:	push   eax
  4062f7:	or     DWORD PTR ds:0x4489a4,0x42483b
  406301:	push   DWORD PTR [ebp-0xc]
  406304:	add    DWORD PTR ds:0x44b6cc,0x424843
  40630e:	jmp    0x40643a
  406313:	push   edx
  406314:	repz fist WORD PTR [ebp-0x4cadaa2f]
  40631b:	adc    DWORD PTR [esi+0x419d30af],esp
  406321:	jo     0x406369
  406323:	dec    esp
  406324:	and    bh,BYTE PTR [esp+edi*2+0xd]
  406328:	jg     0x4063a6
  40632a:	jl     0x406360
  40632c:	scas   eax,DWORD PTR es:[edi]
  40632d:	sar    BYTE PTR [ecx],0x63
  406330:	fsubr  st(2),st
  406332:	mov    fs,WORD PTR [esp+ecx*1]
  406335:	mov    ah,0x8f
  406338:	or     BYTE PTR [esi-0x63],0x30
  40633c:	in     eax,0x91
  40633e:	pop    ss
  40633f:	in     eax,0xfc
  406341:	mov    ds:0x61d9dc3c,eax
  406346:	mov    ch,0x8a
  406348:	xor    eax,0x857965cc
  40634d:	jno    0x4063b4
  40634f:	out    0x1b,eax
  406351:	push   edi
  406352:	sbb    DWORD PTR [edx+0x348ca012],0xffffff8b
  406359:	or     DWORD PTR ds:0xae3ecc5b,esp
  40635f:	jne    0x406360
  406361:	jmp    0x24566f12
  406366:	pop    edx
  406367:	test   ebx,edx
  406369:	fs pop ds
  40636b:	cmp    al,0xd4
  40636d:	mov    ds:0x3a1c307d,eax
  406372:	sub    BYTE PTR [esi],dh
  406374:	iret   
  406375:	cwde   
  406376:	push   ecx
  406377:	pop    ds
  406378:	ret    
  406379:	inc    esi
  40637a:	mov    DWORD PTR [edi+0x2e657de9],ebp
  406380:	call   0x3da:0xc6e7a5cb
  406387:	retf   
  406388:	inc    ecx
  406389:	iret   
  40638a:	enter  0x936d,0x16
  40638e:	jge    0x4063c4
  406390:	dec    esp
  406391:	dec    ecx
  406392:	cmp    BYTE PTR [ebx+0x5cc2367d],0x2d
  406399:	cdq    
  40639a:	push   ebx
  40639b:	scas   eax,DWORD PTR es:[edi]
  40639c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40639d:	and    ch,al
  40639f:	adc    DWORD PTR [esi-0x2f],ebp
  4063a2:	mov    ebx,0xdc34b7be
  4063a7:	stos   BYTE PTR es:[edi],al
  4063a8:	xor    DWORD PTR [esi+0xa],edi
  4063ab:	in     al,dx
  4063ac:	pop    es
  4063ad:	jae    0x4063b5
  4063af:	or     eax,0xfd75985f
  4063b4:	cmp    esi,eax
  4063b6:	int3   
  4063b7:	es es (bad) 
  4063ba:	sbb    DWORD PTR [eax-0x32300e7c],ebp
  4063c0:	imul   edi,DWORD PTR [ebx],0x3e2ef9dd
  4063c6:	int3   
  4063c7:	mov    ds:0x80df4f8b,al
  4063cc:	mov    esp,0xdbe33ee3
  4063d1:	mov    eax,ds:0x87e594d4
  4063d6:	scas   eax,DWORD PTR es:[edi]
  4063d7:	push   0x1db978c0
  4063dc:	jb     0x406417
  4063de:	mov    BYTE PTR [eax],0xb8
  4063e1:	add    al,0xb0
  4063e3:	es lahf 
  4063e5:	outs   dx,BYTE PTR ds:[esi]
  4063e6:	and    ah,BYTE PTR [ebx+edx*2]
  4063e9:	dec    ebp
  4063ea:	xchg   ecx,eax
  4063eb:	push   cs
  4063ec:	pusha  
  4063ed:	or     BYTE PTR [ebp-0x1185831a],0x91
  4063f4:	dec    esi
  4063f5:	int3   
  4063f6:	and    BYTE PTR [ebx-0x7fd084b4],0x40
  4063fd:	and    ebx,DWORD PTR [edi-0x782b47f4]
  406403:	xchg   ecx,eax
  406404:	arpl   sp,cx
  406406:	ror    BYTE PTR [ecx-0xa],cl
  406409:	cmp    al,0x9c
  40640b:	lahf   
  40640c:	fwait
  40640d:	outs   dx,BYTE PTR ds:[esi]
  40640e:	pushf  
  40640f:	aad    0x9b
  406411:	fidivr DWORD PTR [ebx-0x36]
  406414:	jg     0x4063cb
  406416:	retf   0x8168
  406419:	out    0x91,al
  40641b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40641c:	inc    esi
  40641d:	adc    dh,BYTE PTR [ecx]
  40641f:	mov    cl,0x8c
  406421:	add    edi,DWORD PTR [edx+0x5391b81f]
  406427:	dec    ecx
  406428:	jmp    0x3546:0x8adb0eae
  40642f:	push   edx
  406430:	dec    edi
  406431:	jnp    0x4063e3
  406433:	jl     0x4063c5
  406435:	popf   
  406436:	aas    
  406437:	pop    eax
  406438:	push   ecx
  406439:	push   esp
  40643a:	push   DWORD PTR [ebp-0x14]
  40643d:	jmp    0x406569
  406442:	xchg   BYTE PTR [edi-0x29ad99e],ah
  406448:	pop    edx
  406449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40644a:	inc    eax
  40644b:	adc    al,0x79
  40644d:	sub    al,0x79
  40644f:	jl     0x4063f7
  406451:	(bad)  
  406452:	pop    ebp
  406453:	and    eax,0x7f0d7c7c
  406458:	jl     0x4064d6
  40645a:	push   0x702b8e2a
  40645f:	inc    eax
  406460:	cmp    eax,0x5fd3abec
  406465:	adc    BYTE PTR [ebp-0x48a50574],ah
  40646b:	out    0xb8,eax
  40646d:	adc    DWORD PTR [ecx],esi
  40646f:	xor    eax,0xd554fef5
  406474:	int3   
  406475:	push   ds
  406476:	jmp    0xc69:0xcb0474e2
  40647d:	(bad)  
  40647f:	inc    ebx
  406480:	inc    ecx
  406481:	rol    BYTE PTR [esi+0x267d0a2d],0xe8
  406488:	cli    
  406489:	push   cs
  40648a:	xor    al,0x2c
  40648c:	pop    esp
  40648d:	adc    BYTE PTR [ebx],ch
  40648f:	sub    BYTE PTR [ebx-0x32c0cff7],ch
  406495:	jle    0x406438
  406497:	dec    edx
  406498:	push   es
  406499:	xchg   ecx,eax
  40649a:	les    edx,FWORD PTR [ebp-0x38]
  40649d:	lahf   
  40649e:	shl    DWORD PTR [edx+0x6a0ae36e],cl
  4064a4:	iret   
  4064a5:	jae    0x40644d
  4064a7:	adc    bh,BYTE PTR [eax+0x2c]
  4064aa:	popf   
  4064ab:	xor    al,0xa1
  4064ad:	test   BYTE PTR [ebx+edx*4],dl
  4064b0:	imul   esi,DWORD PTR [edx+eiz*2],0x2d5ed3f4
  4064b7:	icebp  
  4064b8:	mov    eax,ds:0xef93e58a
  4064bd:	sahf   
  4064be:	sbb    edx,DWORD PTR [edi]
  4064c0:	test   eax,0x3be7a573
  4064c5:	hlt    
  4064c6:	fsub   st(7),st
  4064c8:	repz push edx
  4064ca:	stc    
  4064cb:	scas   eax,DWORD PTR es:[edi]
  4064cc:	jne    0x40647c
  4064ce:	sahf   
  4064cf:	inc    edx
  4064d0:	add    DWORD PTR [ebx],ebp
  4064d2:	mov    DWORD PTR [edi+0x5c9e0292],esi
  4064d8:	sub    al,0x22
  4064da:	add    BYTE PTR [ebp+ebx*1-0x5a],bl
  4064de:	test   BYTE PTR [ebx],dl
  4064e0:	in     eax,dx
  4064e1:	add    DWORD PTR [ebp-0x52],0x742ace51
  4064e8:	add    dh,dl
  4064ea:	xchg   esi,eax
  4064eb:	or     edx,edi
  4064ed:	iret   
  4064ee:	push   esp
  4064ef:	nop
  4064f0:	ret    
  4064f1:	sub    DWORD PTR [ebp+0x16d9c2c],edi
  4064f7:	aas    
  4064f8:	sbb    BYTE PTR [ecx-0x1a],bl
  4064fb:	adc    bl,BYTE PTR [edx+ebp*2+0x7e]
  4064ff:	out    0x4d,eax
  406501:	bnd addr16 jle 0x406574
  406505:	push   0x24a2730d
  40650a:	jnp    0x40653e
  40650c:	cmp    esi,DWORD PTR [esi]
  40650e:	inc    esi
  40650f:	imul   ebp,ebp,0x182764a
  406515:	xchg   edi,eax
  406516:	push   esp
  406517:	inc    ebx
  406518:	sbb    ecx,DWORD PTR [ecx+0xaeaffbf]
  40651e:	std    
  40651f:	call   0x3de4ad83
  406524:	out    0xba,al
  406526:	mov    ch,0xb5
  406528:	dec    edx
  406529:	xchg   ebp,eax
  40652a:	dec    esi
  40652b:	push   es
  40652c:	sbb    eax,0xec20efce
  406531:	xor    edx,DWORD PTR [ebx-0x2d]
  406534:	xchg   ebx,eax
  406535:	sub    BYTE PTR [edi],cl
  406537:	into   
  406538:	loope  0x40652d
  40653a:	stos   BYTE PTR es:[edi],al
  40653b:	sbb    ch,bh
  40653d:	clc    
  40653e:	cmp    al,0x87
  406540:	cmp    BYTE PTR [ebx],ch
  406542:	mov    ecx,0xd1297aea
  406547:	ss pop es
  406549:	test   BYTE PTR [ebp+esi*4+0x3beb1930],al
  406550:	and    eax,0x139648b0
  406555:	and    DWORD PTR [eax-0x641819b2],esi
  40655b:	push   ds
  40655c:	xchg   ebx,eax
  40655d:	jne    0x4065b1
  40655f:	bound  ecx,QWORD PTR [ebp-0x33]
  406562:	xchg   BYTE PTR fs:[edx+0x5f29bc2f],bl
  406569:	call   0x405120
  40656e:	test   eax,eax
  406570:	je     0x40692c
  406576:	sbb    DWORD PTR ds:0x41075b,0x44899c
  406580:	lea    eax,[ebp-0x78]
  406583:	push   eax
  406584:	mov    eax,DWORD PTR [ebp-0x14]
  406587:	xor    eax,esi
  406589:	add    eax,edi
  40658b:	push   eax
  40658c:	mov    eax,DWORD PTR [ebp-0x10]
  40658f:	jmp    0x4066bb
  406594:	dec    edx
  406595:	add    bh,BYTE PTR [ebx]
  406597:	cmp    DWORD PTR [ebx-0x43],0x6a
  40659b:	fnsave [eax]
  40659d:	xchg   ebx,eax
  40659e:	mov    al,0xc5
  4065a0:	xchg   edi,eax
  4065a1:	popf   
  4065a2:	xlat   BYTE PTR ds:[ebx]
  4065a3:	pop    es
  4065a4:	push   0x24
  4065a6:	jl     0x406624
  4065a8:	or     eax,0xcb7c7c7f
  4065ad:	and    cl,BYTE PTR [ecx+0x75]
  4065b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065b1:	and    al,0x6b
  4065b3:	add    DWORD PTR ds:0xd4b3,ecx
  4065b8:	inc    bp
  4065ba:	or     esp,esi
  4065bc:	cmp    BYTE PTR [ebx],ah
  4065be:	gs popf 
  4065c0:	test   BYTE PTR ds:0x6d5473e9,dl
  4065c6:	adc    BYTE PTR [eax+0x5ccd505a],dh
  4065cc:	retf   
  4065cd:	into   
  4065ce:	sub    al,0x4
  4065d0:	test   BYTE PTR [esi],cl
  4065d2:	xchg   ebp,eax
  4065d3:	pop    ebx
  4065d4:	cmp    bl,BYTE PTR [eax]
  4065d6:	aad    0xc7
  4065d8:	and    al,0x37
  4065da:	dec    ebx
  4065db:	push   0x74
  4065dd:	mov    bl,0xf3
  4065df:	(bad)  
  4065e0:	or     eax,0x1cfcd7cc
  4065e5:	mov    ds:0x3202e484,eax
  4065ea:	jnp    0x4065eb
  4065ec:	retf   0x4d1f
  4065ef:	scas   al,BYTE PTR es:[edi]
  4065f0:	ss or  dl,ah
  4065f3:	push   edi
  4065f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065f5:	aad    0x8c
  4065f7:	sbb    BYTE PTR [ecx-0x1afe8bf2],ch
  4065fd:	jge    0x4065c1
  4065ff:	cli    
  406600:	pusha  
  406601:	pop    ecx
  406602:	aaa    
  406603:	hlt    
  406604:	das    
  406605:	(bad)  
  406607:	repnz push es
  406609:	xchg   ebx,eax
  40660a:	out    0xc4,al
  40660c:	xor    al,0x83
  40660e:	push   esp
  40660f:	loope  0x406682
  406611:	dec    edi
  406612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406613:	sbb    dl,BYTE PTR [esi]
  406615:	sti    
  406616:	inc    edx
  406617:	lahf   
  406618:	stos   BYTE PTR es:[edi],al
  406619:	hlt    
  40661a:	ret    
  40661b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40661c:	dec    esi
  40661d:	jne    0x4065c9
  40661f:	jo     0x406691
  406621:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406622:	icebp  
  406623:	ja     0x40667e
  406625:	mov    ?,WORD PTR [edx]
  406627:	js     0x4065f5
  406629:	int    0xe2
  40662b:	push   0x66f5b691
  406630:	outs   dx,DWORD PTR ds:[esi]
  406631:	push   0x4a82dcbf
  406636:	inc    ecx
  406637:	sub    DWORD PTR [edx-0x7d],esp
  40663a:	fs jnp 0x4065f8
  40663d:	dec    ebx
  40663e:	mov    bl,0x50
  406640:	adc    eax,0xd9e674b7
  406645:	adc    al,BYTE PTR [eax-0x4508d793]
  40664b:	arpl   WORD PTR [ecx+0x3b98432],bp
  406651:	add    esi,ebx
  406653:	mov    ch,cl
  406655:	cmp    al,0x22
  406657:	push   ss
  406658:	pop    ds
  406659:	mov    ah,0xc2
  40665b:	inc    ecx
  40665c:	dec    esi
  40665d:	mov    dh,0xc5
  40665f:	in     al,dx
  406660:	and    edi,DWORD PTR [edx+eax*1-0x46]
  406664:	add    DWORD PTR [di],0xffffffe8
  406668:	pop    ss
  406669:	push   fs
  40666b:	sub    ah,bh
  40666d:	sub    al,0xb2
  40666f:	mov    ebx,0xc196b096
  406674:	fdivr  DWORD PTR [edx+edi*4-0x50]
  406678:	in     al,dx
  406679:	popf   
  40667a:	sbb    DWORD PTR [edi-0x33],0x30
  40667e:	mov    al,ds:0xe351eb9e
  406683:	mov    bh,0xdb
  406685:	inc    ecx
  406686:	cmp    eax,0x33a62c2c
  40668b:	fcom   DWORD PTR [edx+0x60015dad]
  406691:	adc    DWORD PTR [esi+0x7c0ff888],eax
  406697:	push   cs
  406698:	mov    esp,0x9c85c9de
  40669d:	es add eax,0x5df0a52d
  4066a3:	js     0x406645
  4066a5:	iret   
  4066a6:	pop    edi
  4066a7:	jp     0x4066ca
  4066a9:	repnz sbb al,0x50
  4066ac:	pop    ebx
  4066ad:	nop
  4066ae:	pop    edx
  4066af:	sbb    DWORD PTR [esi-0x17af026c],esi
  4066b5:	outs   dx,DWORD PTR ds:[esi]
  4066b6:	sub    al,0xb2
  4066b8:	xlat   BYTE PTR ds:[ebx]
  4066b9:	rol    BYTE PTR [edi],0x5
  4066bc:	stos   BYTE PTR es:[edi],al
  4066bd:	add    BYTE PTR [eax],al
  4066bf:	add    BYTE PTR [eax-0x17],dl
  4066c2:	daa    
  4066c3:	add    DWORD PTR [eax],eax
  4066c5:	add    BYTE PTR [ebx],ch
  4066c7:	dec    esp
  4066c8:	into   
  4066c9:	hlt    
  4066ca:	jge    0x4066c2
  4066cc:	jge    0x406731
  4066ce:	fnstenv [edi+0x64894a70]
  4066d4:	pop    edx
  4066d5:	jmp    0x7f0d:0x7c7c277b
  4066dc:	jl     0x40675a
  4066de:	ret    0xe3c8
  4066e1:	mov    edi,0x7c353608
  4066e6:	fldcw  WORD PTR [edx]
  4066e8:	daa    
  4066e9:	test   eax,0x5e9685a2
  4066ee:	jbe    0x4066cb
  4066f0:	lock aad 0xe
  4066f3:	mov    eax,0x5b463edf
  4066f8:	jo     0x406764
  4066fa:	or     ecx,DWORD PTR [edi-0x3e]
  4066fd:	ins    DWORD PTR es:[edi],dx
  4066fe:	push   edi
  4066ff:	jb     0x4066e9
  406701:	idiv   BYTE PTR [edi+0x45]
  406704:	imul   ebx,ebp,0xffffffa1
  406707:	jle    0x4066f7
  406709:	adc    eax,0x60
  40670c:	in     eax,0x81
  40670e:	jle    0x40671c
  406710:	retf   
  406711:	sti    
  406712:	stos   DWORD PTR es:[edi],eax
  406713:	and    ebx,DWORD PTR [edi+0x7a]
  406716:	out    0x2f,al
  406718:	mov    dh,0xb1
  40671a:	pop    ecx
  40671b:	mov    ecx,0xf81027d8
  406720:	mov    al,ds:0xa0461450
  406725:	sbb    bh,ch
  406727:	push   edx
  406728:	out    0xd8,al
  40672a:	mov    edx,0x822ceab5
  40672f:	cld    
  406730:	pop    ss
  406731:	scas   al,BYTE PTR es:[edi]
  406732:	aad    0x76
  406734:	pop    es
  406735:	lds    edi,FWORD PTR fs:[ebp-0x23ed15b6]
  40673c:	inc    esp
  40673d:	dec    ecx
  40673e:	push   esp
  40673f:	ror    BYTE PTR [edx+0x2f],0xc3
  406743:	cmp    esi,eax
  406745:	sub    esp,DWORD PTR [edx+0x3eab2fa5]
  40674b:	mov    ebp,0x5589b5d0
  406750:	push   ds
  406751:	scas   eax,DWORD PTR es:[edi]
  406752:	test   DWORD PTR [esp+eax*1-0x8],esi
  406756:	fstp   TBYTE PTR [edx-0x42ff8247]
  40675c:	int3   
  40675d:	push   edi
  40675e:	xor    eax,0xbb9c1c1c
  406763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406764:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406765:	clc    
  406766:	inc    esp
  406767:	cmp    dl,ah
  406769:	scas   eax,DWORD PTR es:[edi]
  40676a:	jg     0x406704
  40676c:	(bad)  
  40676d:	scas   al,BYTE PTR es:[edi]
  40676e:	or     eax,0xf2e6a4da
  406773:	clc    
  406774:	popa   
  406775:	js     0x4067d9
  406777:	aam    0x3e
  406779:	pop    es
  40677a:	adc    al,0xfe
  40677c:	jne    0x40677e
  40677e:	retw   
  406780:	iret   
  406781:	jo     0x406790
  406783:	vunpcklpd ymm6,ymm7,YMMWORD PTR [edi-0x76]
  406788:	pop    ds
  406789:	push   ds
  40678a:	pop    edx
  40678b:	(bad)  
  40678c:	push   0x73
  40678e:	adc    al,0xb0
  406790:	mov    esi,0x7259a966
  406795:	jo     0x4067ae
  406797:	imul   eax,DWORD PTR [ecx-0x2d],0xbab993f1
  40679e:	ins    BYTE PTR es:[edi],dx
  40679f:	add    al,0x29
  4067a1:	xor    BYTE PTR [edi+ebp*4+0xae730a6],dh
  4067a8:	mov    eax,ds:0xff76f5de
  4067ad:	jnp    0x4067d1
  4067af:	jnp    0x406776
  4067b1:	ja     0x4067a0
  4067b3:	lods   al,BYTE PTR ds:[esi]
  4067b4:	jns    0x4067c7
  4067b6:	retf   0xba9e
  4067b9:	mov    dl,0x2
  4067bb:	mov    esi,?
  4067bd:	xchg   esi,eax
  4067be:	jmp    0x8083:0x4f7b4881
  4067c5:	pop    ebp
  4067c6:	gs aaa 
  4067c8:	mov    al,0x4
  4067ca:	dec    esi
  4067cb:	sub    al,0xba
  4067cd:	jmp    0x697fb3cd
  4067d2:	aas    
  4067d3:	imul   ebp,eax,0x7f8896ef
  4067d9:	(bad)  
  4067da:	shl    DWORD PTR [eax-0x5f],1
  4067dd:	inc    eax
  4067de:	shr    DWORD PTR [ecx-0x726564d3],cl
  4067e4:	(bad)  
  4067e5:	mov    dh,0x29
  4067e7:	push   eax
  4067e8:	fld    QWORD PTR [ebx-0x74059838]
  4067ee:	inc    ebp
  4067ef:	lock mov eax,DWORD PTR [eax+0x198]
  4067f6:	jmp    0x406922
  4067fb:	shr    ecx,cl
  4067fd:	dec    esp
  4067fe:	pop    esi
  4067ff:	pop    edx
  406800:	jns    0x4067e7
  406802:	ins    DWORD PTR es:[edi],dx
  406803:	adc    eax,0xe5a54fb4
  406808:	inc    edi
  406809:	xor    bh,bl
  40680b:	or     BYTE PTR [ecx],bh
  40680d:	jl     0x40688b
  40680f:	or     eax,0x257c7c7f
  406814:	add    ecx,ecx
  406816:	push   0xffffffe3
  406818:	ss out dx,al
  40681a:	push   cs
  40681b:	jmp    FWORD PTR [ebp-0x6c59a6bf]
  406821:	add    BYTE PTR [edx+0x24],dl
  406824:	retf   0xbfc8
  406827:	dec    ebp
  406828:	mov    cl,0x7a
  40682a:	or     DWORD PTR [ecx],edx
  40682c:	lahf   
  40682d:	sub    eax,0x5a28f9a3
  406832:	(bad)  
  406833:	mov    ds:0xf05b16dc,eax
  406838:	aam    0xf8
  40683a:	fs add ax,0x4c2e
  40683f:	outs   dx,DWORD PTR ds:[esi]
  406840:	ss hlt 
  406842:	mov    ds:0xd829927c,eax
  406847:	or     ah,dh
  406849:	mov    DWORD PTR [ebx+0x2cc6b556],edx
  40684f:	sub    eax,ecx
  406851:	mov    ecx,0x376eab8f
  406856:	mov    al,0x43
  406858:	(bad)  
  406859:	arpl   WORD PTR [edx-0x410879d4],dx
  40685f:	data16 xor al,0xb1
  406862:	mov    dh,0x3b
  406864:	mov    esi,0x9123ec23
  406869:	xchg   edi,eax
  40686a:	fisttp DWORD PTR [ebp-0x2c]
  40686d:	jae    0x4068cf
  40686f:	push   ds
  406870:	out    0x9a,al
  406872:	int3   
  406873:	adc    BYTE PTR [eax+0xa32377b],bl
  406879:	icebp  
  40687a:	xor    dl,BYTE PTR [ecx-0x4828f7cb]
  406880:	pop    ebx
  406881:	mov    al,ds:0x3822383c
  406886:	popa   
  406887:	dec    ebx
  406888:	xchg   esi,eax
  406889:	push   ecx
  40688a:	out    dx,al
  40688b:	fmulp  st(2),st
  40688d:	lds    ecx,FWORD PTR [edx+edi*1-0x4d]
  406891:	sahf   
  406892:	or     DWORD PTR [edx-0x15],0xc0ee1ff8
  406899:	sub    al,0x50
  40689b:	loope  0x406852
  40689d:	cwde   
  40689e:	call   0x489d:0x60e8e6fd
  4068a5:	lods   al,BYTE PTR ds:[esi]
  4068a6:	jecxz  0x4068ee
  4068a8:	out    dx,al
  4068a9:	test   BYTE PTR [eax],cl
  4068ab:	cmp    BYTE PTR [eax],ch
  4068ad:	jmp    0x4068f3
  4068af:	cmp    DWORD PTR [ecx],eax
  4068b1:	cmp    ebp,DWORD PTR [ecx-0x18a9bfab]
  4068b7:	add    BYTE PTR [ebp+0x7325c38a],0x57
  4068be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068bf:	into   
  4068c0:	shl    DWORD PTR [edx+0x6e],0x76
  4068c4:	stos   DWORD PTR es:[edi],eax
  4068c5:	aam    0x15
  4068c7:	ins    BYTE PTR es:[edi],dx
  4068c8:	mov    edi,0xa31ad7c6
  4068cd:	add    bh,BYTE PTR [ecx+0x57097ec7]
  4068d3:	jae    0x406895
  4068d5:	xchg   esi,eax
  4068d6:	sub    ecx,edi
  4068d8:	push   0xffffffd9
  4068da:	ficom  WORD PTR [esi+esi*2]
  4068dd:	add    DWORD PTR es:[edi+edi*8-0x55],esp
  4068e2:	fistp  QWORD PTR [ecx]
  4068e4:	pop    ds
  4068e5:	outs   dx,BYTE PTR ds:[esi]
  4068e6:	icebp  
  4068e7:	aam    0x58
  4068e9:	xchg   ecx,eax
  4068ea:	stc    
  4068eb:	mov    ebp,0x3e53a010
  4068f0:	sbb    eax,0x6c8f1fa8
  4068f5:	loope  0x40688c
  4068f7:	and    al,0x64
  4068f9:	adc    dh,BYTE PTR [esi+0x51f828a8]
  4068ff:	inc    ebp
  406900:	enter  0x57db,0x31
  406904:	dec    esi
  406905:	rcr    DWORD PTR [edi+0x753bc9],0x9
  40690c:	inc    edi
  40690d:	sub    eax,0x6f29d884
  406912:	addr16 inc edx
  406914:	push   eax
  406915:	xor    esi,DWORD PTR [edx]
  406917:	xor    dl,BYTE PTR [edi+eiz*8-0x41cedea6]
  40691e:	add    al,0xa4
  406920:	xlat   BYTE PTR ds:[ebx]
  406921:	push   DWORD PTR cs:[eax]
  406924:	call   0x40101c
  406929:	mov    DWORD PTR [ebp-0x8],eax
  40692c:	cmp    DWORD PTR [ebp-0x8],0x0
  406930:	lea    eax,[ebp+0x4]
  406933:	mov    DWORD PTR [ebp-0x20],eax
  406936:	je     0x406fd6
  40693c:	lea    eax,[ebp-0x18]
  40693f:	push   eax
  406940:	mov    eax,DWORD PTR [ebp-0x2c]
  406943:	xor    eax,esi
  406945:	add    eax,edi
  406947:	push   eax
  406948:	mov    eax,DWORD PTR [ebp-0x1c]
  40694b:	xor    eax,esi
  40694d:	add    eax,edi
  40694f:	push   eax
  406950:	push   DWORD PTR [ebp-0x8]
  406953:	lea    eax,[ebp-0x78]
  406956:	push   eax
  406957:	push   DWORD PTR [ebp-0xc]
  40695a:	push   DWORD PTR [ebp-0x14]
  40695d:	call   0x4055ae
  406962:	test   eax,eax
  406964:	je     0x406abb
  40696a:	lea    eax,[ebp-0x78]
  40696d:	push   eax
  40696e:	mov    eax,DWORD PTR [ebp-0x14]
  406971:	xor    eax,esi
  406973:	add    eax,edi
  406975:	push   eax
  406976:	mov    eax,DWORD PTR [ebp-0x10]
  406979:	add    eax,0xee
  40697e:	push   eax
  40697f:	mov    eax,DWORD PTR [ebp-0x10]
  406982:	mov    eax,DWORD PTR [eax+0x198]
  406988:	push   DWORD PTR [eax]
  40698a:	jmp    0x406ab6
  40698f:	xor    BYTE PTR [ecx-0x12922c70],ch
  406995:	mov    bl,0xa9
  406997:	and    BYTE PTR [esi+eax*2-0x22],ch
  40699b:	push   es
  40699c:	jl     0x406a10
  40699e:	fcomp  DWORD PTR [ecx]
  4069a0:	cmp    BYTE PTR [esp+edi*2+0xd],bh
  4069a4:	jg     0x406a22
  4069a6:	jl     0x4069bf
  4069a8:	or     edx,DWORD PTR [ecx]
  4069aa:	lds    eax,FWORD PTR [esi]
  4069ac:	xor    bh,bh
  4069ae:	mov    esp,0xd8bb2fd3
  4069b3:	xchg   esp,eax
  4069b4:	fst    st(4)
  4069b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069b7:	not    ebp
  4069b9:	xchg   cx,ax
  4069bb:	push   ecx
  4069bc:	pop    es
  4069bd:	imul   ebp,edi,0x35
  4069c0:	and    ah,BYTE PTR [ebx-0x21]
  4069c3:	push   edi
  4069c4:	pop    edx
  4069c5:	cmp    al,0x48
  4069c7:	stos   DWORD PTR es:[edi],eax
  4069c8:	out    dx,eax
  4069c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069ca:	pushf  
  4069cb:	xor    ah,BYTE PTR [ebx-0x72fcd2bc]
  4069d1:	aam    0x97
  4069d3:	jg     0x4069b9
  4069d5:	sub    DWORD PTR [edx],0xffffffc2
  4069d8:	add    DWORD PTR [eax+eax*1],ecx
  4069db:	pop    eax
  4069dc:	in     eax,0x86
  4069de:	dec    esi
  4069df:	push   eax
  4069e0:	xor    BYTE PTR [eax-0x765f4331],0x17
  4069e7:	(bad)  
  4069e8:	stc    
  4069e9:	scas   al,BYTE PTR es:[edi]
  4069ea:	arpl   WORD PTR [eax],si
  4069ec:	out    dx,al
  4069ed:	ja     0x406990
  4069ef:	add    al,BYTE PTR [eax]
  4069f1:	(bad)  
  4069f3:	(bad)  
  4069f4:	mov    gs,WORD PTR [eax]
  4069f6:	test   eax,0x158ae5ce
  4069fb:	push   edi
  4069fc:	sub    DWORD PTR [edi],ebp
  4069fe:	pushf  
  4069ff:	pusha  
  406a00:	and    dh,al
  406a02:	mov    esp,0xc575d817
  406a07:	cmp    BYTE PTR [ebx],0x1d
  406a0a:	pop    ds
  406a0b:	xor    eax,DWORD PTR [ecx-0x23]
  406a0e:	and    cl,0x78
  406a11:	jo     0x406a1d
  406a13:	pop    ds
  406a14:	cmp    cl,cl
  406a16:	(bad)  
  406a17:	mov    edx,0x219ef1e3
  406a1c:	and    DWORD PTR ds:0x526cca89,esp
  406a22:	das    
  406a23:	or     BYTE PTR [ecx-0xf],ch
  406a26:	hlt    
  406a27:	inc    ebx
  406a28:	jp     0x406a5c
  406a2a:	in     eax,dx
  406a2b:	xchg   BYTE PTR [esp+esi*2+0x5c],al
  406a2f:	pop    ecx
  406a30:	jle    0x4069dd
  406a32:	ins    BYTE PTR es:[edi],dx
  406a33:	mov    ss,WORD PTR [eax+edx*8]
  406a36:	pop    es
  406a37:	lods   al,BYTE PTR ds:[esi]
  406a38:	rcl    BYTE PTR [ecx+0x21e7cdc4],0x3
  406a3f:	jmp    0x86e0:0x92390170
  406a46:	mov    ecx,0x424935e
  406a4b:	pop    eax
  406a4c:	call   0x998fc6a9
  406a51:	add    ebx,DWORD PTR [edi]
  406a53:	int3   
  406a54:	jmp    0x4069ee
  406a56:	sub    al,0x29
  406a58:	xor    ebp,DWORD PTR [ebx+edx*8+0x45e5a2a9]
  406a5f:	add    DWORD PTR ds:0xd795abf7,ebp
  406a65:	mov    ds:0xfdf4c63d,eax
  406a6a:	ds nop
  406a6c:	dec    ebp
  406a6d:	sbb    al,0x18
  406a6f:	hlt    
  406a70:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  406a72:	lods   al,BYTE PTR ds:[esi]
  406a73:	pop    edx
  406a74:	sbb    cl,ch
  406a76:	adc    BYTE PTR [esi+0x30],dl
  406a79:	pop    ebx
  406a7a:	fwait
  406a7b:	xor    dh,ch
  406a7d:	out    dx,al
  406a7e:	inc    esi
  406a7f:	dec    esp
  406a80:	xchg   ecx,eax
  406a81:	jecxz  0x406a2c
  406a83:	inc    esp
  406a84:	shr    BYTE PTR [esi],0x55
  406a87:	cli    
  406a88:	jns    0x406a27
  406a8a:	jns    0x406ade
  406a8c:	int3   
  406a8d:	push   es
  406a8e:	push   es
  406a8f:	adc    DWORD PTR [edi+0x41],0xffffffdd
  406a93:	ret    0xa88a
  406a96:	adc    al,0xc
  406a98:	ja     0x406aa4
  406a9a:	pusha  
  406a9b:	jmp    0xaf37f477
  406aa0:	jns    0x406af5
  406aa2:	xchg   BYTE PTR ds:0xad2cf4a5,ch
  406aa8:	cmc    
  406aa9:	lods   al,BYTE PTR ds:[esi]
  406aaa:	inc    ecx
  406aab:	add    edi,DWORD PTR [eax+0x447c9f06]
  406ab1:	mov    ss,WORD PTR [ebx+ecx*2]
  406ab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ab5:	daa    
  406ab6:	call   0x40101c
  406abb:	mov    ecx,DWORD PTR [ebp-0x1c]
  406abe:	xor    ecx,esi
  406ac0:	mov    eax,0xffcd8d62
  406ac5:	sub    eax,ecx
  406ac7:	jmp    0x406bf3
  406acc:	or     al,0x53
  406ace:	and    al,0x43
  406ad0:	jnp    0x406b2d
  406ad2:	jnp    0x406b27
  406ad4:	gs ins DWORD PTR es:[edi],dx
  406ad6:	push   esp
  406ad7:	and    BYTE PTR [ebx+0x2e],cl
  406ada:	mov    ds:0x7c3b1640,al
  406adf:	jl     0x406aee
  406ae1:	jg     0x406b5f
  406ae3:	jl     0x406ae4
  406ae5:	jmp    0x81c1:0xa2f86dbb
  406aec:	mov    edx,0x5896c51c
  406af1:	lahf   
  406af2:	daa    
  406af3:	sub    dl,0x57
  406af6:	int    0x94
  406af8:	mov    ebx,0xa7220d7
  406afd:	(bad)  
  406afe:	ds push cs
  406b00:	mov    edx,DWORD PTR [esi]
  406b02:	cdq    
  406b03:	jg     0x406ae0
  406b05:	mov    cs,WORD PTR [ebp+0x7d4145aa]
  406b0b:	inc    eax
  406b0c:	xchg   BYTE PTR [esi],dh
  406b0e:	les    edx,FWORD PTR [ebp-0x56339e5b]
  406b14:	or     ebp,esi
  406b16:	push   ebx
  406b17:	adc    al,0xad
  406b19:	adc    bl,BYTE PTR [ebp-0x16]
  406b1c:	mov    ch,0x78
  406b1e:	jnp    0x406b45
  406b20:	call   0xfa490eda
  406b25:	jl     0x406ab3
  406b27:	and    dl,ch
  406b29:	(bad)  
  406b2a:	cmc    
  406b2b:	fld    QWORD PTR [edi+ecx*2+0x39894c9d]
  406b32:	mov    ds:0x4ad6cde1,al
  406b37:	mov    ah,0x27
  406b39:	js     0x406b82
  406b3b:	retf   
  406b3c:	sbb    BYTE PTR [ecx+0x3],al
  406b3f:	mov    WORD PTR ss:[esi],fs
  406b42:	ds add al,0x2b
  406b45:	cmp    BYTE PTR [esi+0x48],ah
  406b48:	shr    DWORD PTR [eax-0x25adc823],cl
  406b4e:	inc    eax
  406b4f:	jae    0x406adf
  406b51:	pop    edx
  406b52:	jecxz  0x406b4b
  406b54:	mov    dh,0x7d
  406b56:	cmp    DWORD PTR [ebx],esp
  406b58:	bound  ebx,QWORD PTR [ebx]
  406b5a:	mov    ebp,0xfc1cccc4
  406b5f:	pop    es
  406b60:	dec    edi
  406b61:	adc    al,0x68
  406b63:	stc    
  406b64:	jo     0x406bb0
  406b66:	sub    ah,BYTE PTR [ecx]
  406b68:	mov    ss,WORD PTR [ecx-0x4bf2dde0]
  406b6e:	mov    ch,0x6f
  406b70:	xor    eax,0x24866d7f
  406b75:	jno    0x406b9e
  406b77:	push   0xd29193c0
  406b7c:	mov    DWORD PTR [edi+0x3ee8e025],ecx
  406b82:	cli    
  406b83:	mov    eax,0xfc604567
  406b88:	sbb    BYTE PTR [esi+0x7b6f406a],al
  406b8e:	in     al,0xbd
  406b90:	fs and al,0xf1
  406b93:	dec    edx
  406b94:	pop    edi
  406b95:	inc    ebx
  406b96:	fcmove st,st(3)
  406b98:	mov    ch,0x3e
  406b9a:	mov    bh,0x41
  406b9c:	aaa    
  406b9d:	clc    
  406b9e:	scas   al,BYTE PTR es:[edi]
  406b9f:	es (bad) 
  406ba1:	out    dx,eax
  406ba2:	ss dec di
  406ba5:	jle    0x406bc9
  406ba7:	test   al,0x3a
  406ba9:	dec    edi
  406baa:	aas    
  406bab:	cli    
  406bac:	pop    esp
  406bad:	pushf  
  406bae:	mov    BYTE PTR [ebx-0x7e],dh
  406bb1:	repnz loop 0x406bc2
  406bb4:	lds    ecx,FWORD PTR [eax-0x6d]
  406bb7:	enter  0x910,0xcd
  406bbb:	hlt    
  406bbc:	add    cl,BYTE PTR [esi+0x2ab93f6]
  406bc2:	adc    ch,al
  406bc4:	imul   ecx,DWORD PTR [ebx+0x49],0x463d1978
  406bcb:	outs   dx,DWORD PTR ds:[esi]
  406bcc:	sbb    DWORD PTR [edx+0x6],ebp
  406bcf:	stos   DWORD PTR es:[edi],eax
  406bd0:	in     eax,dx
  406bd1:	adc    eax,0xa7c468b1
  406bd6:	dec    eax
  406bd7:	sbb    bh,BYTE PTR [ecx+0x19]
  406bda:	mov    ebx,0xef3a74c2
  406bdf:	loopne 0x406bfa
  406be1:	xchg   DWORD PTR [ebp-0x5],ebp
  406be4:	dec    DWORD PTR [esi+0x49]
  406be7:	pop    eax
  406be8:	out    0x51,eax
  406bea:	lea    edx,[esi+0x7192077]
  406bf0:	and    esi,edx
  406bf2:	mov    bh,0x2b
  406bf4:	inc    ebp
  406bf5:	clc    
  406bf6:	mov    ecx,DWORD PTR [ebp-0x30]
  406bf9:	add    ecx,eax
  406bfb:	jmp    0x406d27
  406c00:	xchg   ebp,eax
  406c01:	(bad)  
  406c02:	out    0x14,eax
  406c04:	std    
  406c05:	push   esp
  406c06:	gs popf 
  406c08:	repz mov al,ds:0xb0bb9e75
  406c0e:	jb     0x406bd9
  406c10:	daa    
  406c11:	cmp    bh,BYTE PTR [esp+edi*2+0xd]
  406c15:	jg     0x406c93
  406c17:	jl     0x406c92
  406c19:	pusha  
  406c1a:	push   cs
  406c1b:	jl     0x406c35
  406c1d:	repz mov al,ds:0x19b4b12e
  406c23:	mov    cl,0x5a
  406c25:	bound  esp,QWORD PTR [ecx-0x2e206d20]
  406c2b:	pop    ebp
  406c2c:	jnp    0x406bea
  406c2e:	adc    al,0x7c
  406c30:	pop    ecx
  406c31:	sub    ecx,DWORD PTR [ebx]
  406c33:	fldcw  WORD PTR [eax]
  406c35:	add    ah,BYTE PTR [edx-0x1753357b]
  406c3b:	pop    ss
  406c3c:	mov    esp,0xae6b03ba
  406c41:	fwait
  406c42:	dec    ecx
  406c43:	jae    0x406c29
  406c45:	mov    cl,0x3
  406c47:	jg     0x406c6a
  406c49:	pop    ecx
  406c4a:	inc    esi
  406c4b:	ficomp DWORD PTR [esi+0x2c]
  406c4e:	jo     0x406c53
  406c50:	(bad)  
  406c51:	xor    esi,edi
  406c53:	mov    ch,BYTE PTR [edx]
  406c55:	push   edi
  406c56:	call   0x87c8dfd9
  406c5b:	clc    
  406c5c:	push   ebx
  406c5d:	mov    edi,0x60237d9e
  406c62:	mov    ebp,0xe9afb01b
  406c67:	mov    dh,0xdc
  406c69:	mov    al,ds:0xfc3d1e78
  406c6e:	dec    esp
  406c6f:	xor    bl,BYTE PTR [esi+0x19]
  406c72:	pushf  
  406c73:	(bad)  
  406c74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c75:	je     0x406c98
  406c77:	std    
  406c78:	dec    eax
  406c79:	dec    edx
  406c7a:	imul   ebx,ebp,0xed47e17e
  406c80:	jle    0x406cc4
  406c82:	push   eax
  406c83:	add    bh,BYTE PTR [edi]
  406c85:	mov    edi,0x347040e4
  406c8a:	ret    
  406c8b:	sub    edx,ebp
  406c8d:	popf   
  406c8e:	bnd jg 0x406cb5
  406c91:	or     eax,0xd37b9e33
  406c96:	xchg   ecx,eax
  406c97:	inc    edi
  406c98:	xor    ebp,ebp
  406c9a:	sti    
  406c9b:	outs   dx,DWORD PTR ds:[esi]
  406c9c:	inc    esp
  406c9d:	les    ebp,FWORD PTR [edi+0x61385fdc]
  406ca3:	mov    bh,0xf
  406ca5:	test   DWORD PTR [eax+0x39b885c9],esp
  406cab:	mov    edi,0xfa3fc48f
  406cb0:	mov    ebp,0xefdd09e1
  406cb5:	mov    cl,BYTE PTR [esi+ecx*1]
  406cb8:	cli    
  406cb9:	rol    BYTE PTR [ebx+0x480b6fb5],1
  406cbf:	cmp    eax,0xffffff82
  406cc2:	sub    dl,BYTE PTR [esi+0x1e4c0364]
  406cc8:	sub    DWORD PTR [ebx-0x55],esp
  406ccb:	aas    
  406ccc:	pop    ds
  406ccd:	add    cl,al
  406ccf:	rcr    al,1
  406cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cd2:	test   DWORD PTR [esi],edi
  406cd4:	test   eax,0x9e814314
  406cd9:	fcom   DWORD PTR [ecx]
  406cdb:	(bad)  
  406cdc:	call   0xbe984e77
  406ce1:	(bad)  
  406ce2:	call   0x2c2808f7
  406ce7:	retf   0x2df2
  406cea:	sbb    BYTE PTR [edi+ebp*2-0x1e764310],bh
  406cf1:	lahf   
  406cf2:	imul   edx,DWORD PTR [esi+0x9db0422],0x6ce4a6ab
  406cfc:	jb     0x406ce0
  406cfe:	lods   al,BYTE PTR ds:[esi]
  406cff:	dec    ecx
  406d00:	(bad)  
  406d01:	je     0x406ce7
  406d03:	rol    esi,cl
  406d05:	pop    esi
  406d06:	and    esi,DWORD PTR [ebx+0x58]
  406d09:	stc    
  406d0a:	cmp    eax,DWORD PTR [edi-0x6b9c19c2]
  406d10:	mov    bl,0xc8
  406d12:	dec    ecx
  406d13:	push   esp
  406d14:	inc    edx
  406d15:	or     DWORD PTR [ebp+0x5818d120],ecx
  406d1b:	inc    eax
  406d1c:	enter  0xa419,0xb5
  406d20:	pushf  
  406d21:	xor    eax,0xfde0fc51
  406d26:	call   0x8a38b2b6
  406d2b:	dec    eax
  406d2c:	add    DWORD PTR [edx+0x4d8bff45],ecx
  406d32:	clc    
  406d33:	xor    al,0x49
  406d35:	sub    al,0x35
  406d37:	mov    BYTE PTR [ecx],al
  406d39:	lea    eax,[ebp-0x8]
  406d3c:	inc    BYTE PTR [eax]
  406d3e:	inc    eax
  406d3f:	push   eax
  406d40:	pop    ecx
  406d41:	dec    ecx
  406d42:	xchg   ecx,edx
  406d44:	dec    BYTE PTR [edx]
  406d46:	push   DWORD PTR [ebp-0x10]
  406d49:	mov    eax,ds:0x44525c
  406d4e:	mov    eax,DWORD PTR [eax]
  406d50:	push   DWORD PTR [eax]
  406d52:	lea    eax,ds:0x445278
  406d58:	jmp    0x406e84
  406d5d:	scas   eax,DWORD PTR es:[edi]
  406d5e:	stos   DWORD PTR es:[edi],eax
  406d5f:	fs pop ds
  406d61:	js     0x406d46
  406d63:	addr16 mov ebx,0xcd1c5374
  406d69:	sub    DWORD PTR [ebx],edx
  406d6b:	add    al,BYTE PTR [ebp+0x34]
  406d6e:	cmp    eax,0x7f0d7c7c
  406d73:	jl     0x406df1
  406d75:	xor    al,0x94
  406d77:	test   eax,0x6e5687d0
  406d7c:	pop    eax
  406d7d:	jecxz  0x406d13
  406d7f:	adc    bh,BYTE PTR [esi+0x23]
  406d82:	push   eax
  406d83:	add    bh,BYTE PTR [ecx+0x4ddfd4c5]
  406d89:	js     0x406d3f
  406d8b:	dec    ebp
  406d8c:	push   0x4a
  406d8e:	les    ebp,FWORD PTR [edx-0x5325d736]
  406d94:	ror    BYTE PTR [ecx+0x25],cl
  406d97:	popf   
  406d98:	test   BYTE PTR [ebx],dl
  406d9a:	in     eax,dx
  406d9b:	int    0x8a
  406d9d:	inc    edx
  406d9e:	inc    edi
  406d9f:	adc    bh,BYTE PTR [ecx+0x5f49d415]
  406da5:	bnd jmp esi
  406da8:	mov    BYTE PTR [ebx-0x20],bh
  406dab:	sbb    eax,0x243cf02e
  406db0:	sbb    DWORD PTR cs:[edi],edx
  406db3:	hlt    
  406db4:	rcr    BYTE PTR [edi+ebp*4],1
  406db7:	jb     0x406e0f
  406db9:	push   esp
  406dba:	xlat   BYTE PTR ds:[ebx]
  406dbb:	cmc    
  406dbc:	jmp    0xbfee:0xeef49f71
  406dc3:	dec    esi
  406dc4:	popf   
  406dc5:	sti    
  406dc6:	in     al,dx
  406dc7:	push   ss
  406dc8:	xor    esp,DWORD PTR [edx+0x74]
  406dcb:	jne    0x406dcb
  406dcd:	dec    ebx
  406dce:	inc    ecx
  406dcf:	jns    0x406e16
  406dd1:	mov    bh,0x82
  406dd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dd4:	mov    edi,0x13694ce4
  406dd9:	in     eax,0x54
  406ddb:	pop    ecx
  406ddc:	and    dh,BYTE PTR [edi+edx*4]
  406ddf:	add    dl,BYTE PTR [ecx-0x4b2bd8d]
  406de5:	inc    esp
  406de6:	outs   dx,DWORD PTR ds:[esi]
  406de7:	cli    
  406de8:	cmp    BYTE PTR [eax],al
  406dea:	adc    al,0x2e
  406dec:	stos   DWORD PTR es:[edi],eax
  406ded:	popa   
  406dee:	stos   BYTE PTR es:[edi],al
  406def:	push   esi
  406df0:	jnp    0x406df6
  406df2:	cmp    esi,ecx
  406df4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406df5:	fs sub cl,ah
  406df8:	lahf   
  406df9:	pop    edi
  406dfa:	adc    dh,BYTE PTR [ebp-0x62]
  406dfd:	outs   dx,BYTE PTR ds:[esi]
  406dfe:	xchg   DWORD PTR [ecx-0x18ddec91],edx
  406e04:	push   ds
  406e05:	xor    eax,0x4d305999
  406e0a:	dec    ebx
  406e0b:	inc    esi
  406e0c:	xchg   edi,eax
  406e0d:	lahf   
  406e0e:	mov    ch,cl
  406e10:	push   ecx
  406e11:	hlt    
  406e12:	cmc    
  406e13:	nop
  406e14:	hlt    
  406e15:	pop    ss
  406e16:	sbb    al,0xb8
  406e18:	shl    dl,cl
  406e1a:	les    esi,FWORD PTR [edi+0xd0ec721]
  406e20:	or     al,0xb7
  406e22:	adc    BYTE PTR [edx-0x433f0de1],ch
  406e28:	inc    ecx
  406e29:	xchg   esi,eax
  406e2a:	iret   
  406e2b:	lods   al,BYTE PTR ds:[esi]
  406e2c:	aaa    
  406e2d:	fnstsw WORD PTR [edi-0x45c76273]
  406e33:	mov    eax,0x76b09d72
  406e38:	imul   ebx,DWORD PTR ds:0xb95fbc73,0xb5ad95f3
  406e42:	jbe    0x406e3d
  406e44:	jmp    0x1498:0xafc08b8b
  406e4b:	cli    
  406e4c:	cld    
  406e4d:	mov    eax,0xd3b9d0da
  406e52:	cdq    
  406e53:	xchg   edi,eax
  406e54:	cmp    al,0xb9
  406e56:	mov    ebp,0xd1655ffb
  406e5b:	iret   
  406e5c:	xchg   esp,eax
  406e5d:	pop    ebx
  406e5e:	rcl    DWORD PTR [ebp+0x51],0x21
  406e62:	shl    DWORD PTR [edi],0x3
  406e65:	mov    eax,ds:0x1f9b4b40
  406e6a:	sbb    al,0x51
  406e6c:	outs   dx,DWORD PTR ds:[esi]
  406e6d:	fcom   QWORD PTR [ecx+0x444c135c]
  406e73:	adc    esi,edi
  406e75:	xchg   ebx,eax
  406e76:	int    0x26
  406e78:	add    al,0x6c
  406e7a:	xchg   DWORD PTR [edi*4-0x146ee25],edx
  406e81:	scas   al,BYTE PTR es:[edi]
  406e82:	retf   
  406e83:	mov    ?,edi
  406e85:	xor    BYTE PTR [ebp+0x44502405],cl
  406e8b:	add    bh,bh
  406e8d:	xor    BYTE PTR [ebp+0x44525805],cl
  406e93:	add    bh,bh
  406e95:	xor    BYTE PTR [ebp+0x44534805],cl
  406e9b:	add    bh,bh
  406e9d:	xor    BYTE PTR [edi-0x16bcbc2d],al
  406ea3:	daa    
  406ea4:	add    DWORD PTR [eax],eax
  406ea6:	add    BYTE PTR [ecx],bl
  406ea8:	retf   
  406ea9:	mov    ecx,0xd9627d6c
  406eae:	ins    DWORD PTR es:[edi],dx
  406eaf:	lods   al,BYTE PTR ds:[esi]
  406eb0:	test   eax,0xb8247590
  406eb5:	in     eax,0x61
  406eb7:	lds    edi,FWORD PTR [esp+edi*2]
  406eba:	jl     0x406ec9
  406ebc:	jg     0x406f3a
  406ebe:	jl     0x406ee9
  406ec0:	lods   eax,DWORD PTR ds:[esi]
  406ec1:	add    edx,DWORD PTR [edx+0x7d]
  406ec4:	shl    BYTE PTR [edx-0x3],1
  406ec7:	sub    ch,cl
  406ec9:	fidiv  DWORD PTR ds:0x79cf88a0
  406ecf:	int3   
  406ed0:	mov    eax,ds:0xc37c653e
  406ed5:	pop    ss
  406ed6:	inc    edx
  406ed7:	xor    eax,0xa10a7db6
  406edc:	adc    al,BYTE PTR [ecx-0x24]
  406edf:	mov    esi,0xe0197d63
  406ee4:	cmp    eax,0x2bfa4df2
  406ee9:	mov    bh,bh
  406eeb:	cmp    ah,cl
  406eed:	xor    eax,0xf582c47a
  406ef2:	aaa    
  406ef3:	call   0x4171:0x4078286d
  406efa:	dec    edx
  406efb:	push   esi
  406efc:	mov    ch,0xde
  406efe:	mov    WORD PTR [edi],ss
  406f00:	dec    esi
  406f01:	(bad)  
  406f03:	outs   dx,DWORD PTR ds:[esi]
  406f04:	mov    edi,DWORD PTR [ebx+edx*2-0x1481d618]
  406f0b:	jge    0x406f58
  406f0d:	cdq    
  406f0e:	dec    edi
  406f0f:	mov    DWORD PTR [edi],esi
  406f11:	fadd   DWORD PTR [edx+ecx*2]
  406f14:	or     DWORD PTR [edx-0x2ea4d30c],0x54d24fe3
  406f1e:	aaa    
  406f1f:	jg     0x406ed6
  406f21:	test   ecx,0x42f6d15c
  406f27:	not    DWORD PTR [eax+0x1441e24c]
  406f2d:	cld    
  406f2e:	stc    
  406f2f:	inc    ebx
  406f30:	pushf  
  406f31:	jp     0x406f02
  406f33:	inc    edi
  406f34:	int    0xb5
  406f36:	jg     0x406f12
  406f38:	pop    edi
  406f39:	fwait
  406f3a:	xor    bh,al
  406f3c:	mov    esp,0x55c95567
  406f41:	pop    ecx
  406f42:	loop   0x406f95
  406f44:	cmp    al,0xc5
  406f46:	arpl   WORD PTR ds:0xcdf378c8,sp
  406f4c:	(bad)  
  406f4d:	retf   0xff20
  406f50:	retf   0x345e
  406f53:	inc    ebp
  406f54:	loope  0x406f23
  406f56:	mov    esp,DWORD PTR [ebp+0x66ac00f9]
  406f5c:	stc    
  406f5d:	lods   eax,DWORD PTR ds:[esi]
  406f5e:	or     eax,0x8ab11a6f
  406f63:	adc    BYTE PTR [ecx-0x3f],bl
  406f66:	mov    ebx,0x1c8e4995
  406f6b:	es pop ecx
  406f6d:	lods   al,BYTE PTR ds:[esi]
  406f6e:	loop   0x406f93
  406f70:	push   edi
  406f71:	retf   
  406f72:	jns    0x406f3d
  406f74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f75:	fwait
  406f76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f77:	leave  
  406f78:	xchg   ebx,eax
  406f79:	je     0x406f70
  406f7b:	push   ds
  406f7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f7d:	add    eax,0x6c04f22b
  406f82:	adc    ebx,DWORD PTR [esi-0x18e48f59]
  406f88:	ficom  DWORD PTR [bp+di-0x3a9f]
  406f8d:	add    DWORD PTR [esi-0xf],ebp
  406f90:	pop    esp
  406f91:	push   ebx
  406f92:	inc    BYTE PTR [ebp+0x1e286566]
  406f98:	add    DWORD PTR [ebx-0xb],ebp
  406f9b:	adc    al,0xc0
  406f9d:	ror    BYTE PTR [edi+eax*1],0xbe
  406fa1:	shl    DWORD PTR [eax],cl
  406fa3:	add    eax,0xaa2d30bd
  406fa8:	mov    eax,ds:0x6ff32016
  406fad:	bound  edx,QWORD PTR [esi]
  406faf:	call   0xd0e121d4
  406fb4:	aam    0xb1
  406fb6:	pop    DWORD PTR [ebx]
  406fb8:	push   0x45
  406fba:	les    esi,FWORD PTR [edx+0x8]
  406fbd:	add    al,0xd
  406fbf:	call   0x918c7a5a
  406fc4:	out    0x9,eax
  406fc6:	and    bh,dh
  406fc8:	fistp  QWORD PTR [ebp-0x56]
  406fcb:	inc    ecx
  406fcc:	push   esp
  406fcd:	push   ebx
  406fce:	sub    ebx,0x3
  406fd1:	push   ebx
  406fd2:	pop    eax
  406fd3:	call   DWORD PTR [eax+0x1]
  406fd6:	mov    eax,DWORD PTR [ebp-0x20]
  406fd9:	mov    ecx,DWORD PTR ds:0x44521c
  406fdf:	jmp    0x40710b
  406fe4:	gs jg  0x406fc0
  406fe7:	add    DWORD PTR [ebp-0x27],edi
  406fea:	jge    0x40703f
  406fec:	jecxz  0x406fd1
  406fee:	stos   DWORD PTR es:[edi],eax
  406fef:	ins    BYTE PTR es:[edi],dx
  406ff0:	fmul   QWORD PTR [edi+0x3fd227f0]
  406ff6:	jl     0x407074
  406ff8:	or     eax,0x4f7c7c7f
  406ffd:	cwde   
  406ffe:	fisub  DWORD PTR [edx+0x5d]
  407001:	push   es
  407002:	aad    0xbd
  407004:	popa   
  407005:	das    
  407006:	popf   
  407007:	stc    
  407008:	sar    ecx,0x94
  40700b:	gs or  eax,0x7a989b61
  407011:	enter  0x4e02,0xc7
  407015:	dec    ecx
  407016:	mov    edi,DWORD PTR [esi+0xec1ee92]
  40701c:	and    esp,DWORD PTR [ecx-0x78fc1207]
  407022:	dec    ebx
  407023:	(bad)  
  407024:	inc    edx
  407025:	imul   ebp,DWORD PTR [edi-0x3b62ef4b],0x2a
  40702c:	add    ch,BYTE PTR [esi+0x59]
  40702f:	in     al,dx
  407030:	(bad)  
  407032:	mov    ebp,0x59b530d1
  407037:	ins    DWORD PTR es:[edi],dx
  407038:	and    al,0x88
  40703a:	int    0x4a
  40703c:	stos   DWORD PTR es:[edi],eax
  40703d:	or     al,BYTE PTR [edi-0x548934a2]
  407043:	fdiv   DWORD PTR [ecx]
  407045:	fdivr  QWORD PTR [esp+ebp*8+0x5a916e8]
  40704c:	sti    
  40704d:	add    al,0xa8
  40704f:	shl    BYTE PTR [esi],1
  407051:	fmulp  st(0),st
  407053:	loope  0x40707d
  407055:	es pop ecx
  407057:	ficom  WORD PTR [eax+0x552bb25f]
  40705d:	outs   dx,BYTE PTR ds:[esi]
  40705e:	jno    0x407055
  407060:	out    0x26,al
  407062:	sbb    bh,BYTE PTR [ecx-0x4d2ac7d9]
  407068:	ins    BYTE PTR es:[edi],dx
  407069:	sbb    al,BYTE PTR [edx]
  40706b:	dec    ebp
  40706c:	sub    BYTE PTR [ecx-0x29],bh
  40706f:	mov    eax,0x883c2e02
  407074:	sbb    DWORD PTR [eax],edx
  407076:	into   
  407077:	fst    QWORD PTR [eax]
  407079:	and    eax,0x401e4454
  40707e:	mov    al,0xee
  407080:	pushf  
  407081:	scas   al,BYTE PTR es:[edi]
  407082:	retf   
  407083:	je     0x407023
  407085:	push   cs
  407086:	js     0x40707b
  407088:	pop    ebp
  407089:	mov    al,0xe9
  40708b:	xchg   ecx,eax
  40708c:	mov    ebp,0x1aa3bd75
  407091:	adc    al,0xcb
  407093:	aad    0xb8
  407095:	and    esp,DWORD PTR [ebx+0x7cf585f6]
  40709b:	or     edx,DWORD PTR [esi-0x6]
  40709e:	pop    es
  40709f:	jae    0x4070c8
  4070a1:	mov    ds:0xbff694b3,eax
  4070a6:	icebp  
  4070a7:	inc    esi
  4070a8:	xchg   ebx,eax
  4070a9:	add    DWORD PTR [ecx],edi
  4070ab:	(bad)  
  4070ac:	push   edx
  4070ad:	sub    DWORD PTR [edx],eax
  4070af:	sti    
  4070b0:	fstp   DWORD PTR [eax+ebp*4+0x5233897b]
  4070b7:	sub    ecx,DWORD PTR [ebx+eax*2-0x5d30811b]
  4070be:	stc    
  4070bf:	js     0x4070fe
  4070c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070c2:	or     al,0x1c
  4070c4:	sub    eax,0x7e829b85
  4070c9:	ficomp WORD PTR [ebp-0x71aef3ea]
  4070cf:	call   0x8eeb:0x925b67b
  4070d6:	push   ss
  4070d7:	loope  0x407098
  4070d9:	fisubr DWORD PTR [ebx]
  4070db:	xchg   esi,eax
  4070dc:	and    BYTE PTR [ebx+esi*8],0x85
  4070e0:	cmp    dh,cl
  4070e2:	shr    BYTE PTR [esi],cl
  4070e4:	or     DWORD PTR [esi+ebp*2-0x5479b47f],edi
  4070eb:	jmp    DWORD PTR [ecx]
  4070ed:	or     esi,ecx
  4070ef:	fdivr  QWORD PTR ds:[ebx]
  4070f2:	mov    al,0x61
  4070f4:	or     eax,0xfebd22be
  4070f9:	cmp    bh,BYTE PTR [eax-0x38]
  4070fc:	push   ecx
  4070fd:	mov    ch,0xb4
  4070ff:	or     DWORD PTR [esi-0xcb33d3d],esp
  407105:	dec    eax
  407106:	shl    dl,0x6e
  407109:	dec    ebp
  40710a:	adc    DWORD PTR [ecx],eax
  40710c:	or     BYTE PTR [edi+0x5e],bl
  40710f:	pop    ebx
  407110:	leave  
  407111:	ret    
  407112:	push   ebp
  407113:	mov    ebp,esp
  407115:	sub    esp,0x2c
  407118:	xor    eax,0x6ce
  40711d:	mov    DWORD PTR [ebp-0x8],0xf89c8534
  407124:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  40712b:	or     DWORD PTR ds:0x44e414,0x5a5
  407135:	jmp    0x40726c
  40713a:	push   ds
  40713b:	repz lock adc al,0x95
  40713f:	pop    ss
  407140:	stos   BYTE PTR es:[edi],al
  407141:	lea    edi,[esi+0x16]
  407144:	nop
  407145:	push   ebx
  407146:	outs   dx,BYTE PTR ds:[esi]
  407147:	ins    DWORD PTR es:[edi],dx
  407148:	scas   al,BYTE PTR es:[edi]
  407149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40714a:	jecxz  0x40718a
  40714c:	jl     0x4071ca
  40714e:	push   es
  40714f:	jg     0x4071cd
  407151:	jl     0x4071b8
  407153:	mov    edx,DWORD PTR [edi]
  407155:	adc    ah,dl
  407157:	mov    bl,BYTE PTR [ebp-0x32]
  40715a:	xor    al,0x99
  40715c:	fistp  DWORD PTR [eax+ecx*2+0x5360e848]
  407163:	mov    ecx,0x86b634eb
  407168:	test   eax,0x1f70ee8d
  40716d:	sub    eax,0x93743cf5
  407172:	xchg   BYTE PTR [eax-0xb],bh
  407175:	(bad)  
  407176:	retf   0x5e9d
  407179:	or     BYTE PTR [ecx],dh
  40717b:	cmp    eax,0x732f9436
  407180:	lock pop ds
  407182:	pop    esi
  407183:	mov    ebx,0xa2cf16da
  407188:	inc    ecx
  407189:	jnp    0x407147
  40718b:	les    edi,FWORD PTR [ecx]
  40718d:	retf   0xd73d
  407190:	aas    
  407191:	paddd  mm6,mm1
  407194:	ffreep st(7)
  407196:	popa   
  407197:	push   es
  407198:	ja     0x4071e7
  40719a:	push   cs
  40719b:	adc    eax,DWORD PTR [ebx-0x44]
  40719e:	jge    0x4071ac
  4071a0:	mov    edx,0xfe69e0b4
  4071a5:	push   0x35
  4071a7:	leave  
  4071a8:	lahf   
  4071a9:	sub    eax,0x6dca6791
  4071ae:	sbb    ah,BYTE PTR [eax+ecx*4-0x2b]
  4071b2:	mov    ah,0x7c
  4071b4:	mov    edi,0x9bb1184c
  4071b9:	mov    WORD PTR [ebp+0x30],ax
  4071bd:	test   DWORD PTR [edx],eax
  4071bf:	repz inc ebp
  4071c1:	push   eax
  4071c2:	mov    esi,0x50af2185
  4071c7:	jb     0x407176
  4071c9:	adc    al,0x1e
  4071cc:	repz mov ebx,0x90f03ab9
  4071d2:	int    0x86
  4071d4:	inc    esi
  4071d5:	or     eax,0xe800b98b
  4071da:	int3   
  4071db:	imul   edx,DWORD PTR [eax-0x67c738d0],0xcbb666c
  4071e5:	mov    esp,ebx
  4071e7:	mov    ebx,DWORD PTR [ebx-0x660fc3f2]
  4071ed:	nop
  4071ee:	and    eax,0x41a4e625
  4071f3:	cs mov ebp,0x9bbab8a9
  4071f9:	or     BYTE PTR [edx-0x580306d6],dl
  4071ff:	cli    
  407200:	imul   eax,DWORD PTR [esi+0x46],0xd26702a5
  407207:	push   esp
  407208:	sbb    al,0xb5
  40720a:	in     al,dx
  40720b:	xor    dl,BYTE PTR [esi-0x51aeadb7]
  407211:	xor    DWORD PTR [eax+ecx*1+0x3ff2b3e6],0x1740c887
  40721c:	mov    WORD PTR [ebx+0x56],es
  40721f:	sub    ebx,eax
  407221:	mov    dl,ch
  407223:	mov    DWORD PTR [ecx+ecx*4],edi
  407226:	aas    
  407227:	fcomp  DWORD PTR [ecx+0x20162ea7]
  40722d:	add    ah,dl
  40722f:	test   DWORD PTR [edx+0x3eeb4721],edi
  407235:	rol    dh,1
  407237:	(bad)  
  407239:	add    dh,bl
  40723b:	push   0x45
  40723d:	xchg   edi,eax
  40723e:	xchg   esp,eax
  40723f:	pusha  
  407240:	mov    ds:0x636e70ac,al
  407245:	shr    BYTE PTR [edi-0x7fc0c22],1
  40724b:	and    eax,0x3a2933ba
  407250:	neg    DWORD PTR [esi-0x4b14cdff]
  407256:	(bad)  
  407257:	aam    0x85
  407259:	cs xor al,0x83
  40725c:	sbb    eax,0x2d80d64
  407261:	pop    eax
  407262:	cmp    al,0x1e
  407264:	or     ebx,DWORD PTR ds:0x82d8b9fd
  40726a:	inc    ecx
  40726b:	xor    edi,DWORD PTR [eax+0x9507]
  407271:	and    DWORD PTR ds:0x41074f,0x0
  40727b:	mov    ecx,DWORD PTR ds:0x41074f
  407281:	inc    ecx
  407282:	mov    DWORD PTR ds:0x41074f,ecx
  407288:	cmp    DWORD PTR ds:0x41074f,0x20
  40728f:	jne    0x4072a0
  407295:	push   0x42483f
  40729a:	call   DWORD PTR ds:0x44336c
  4072a0:	cmp    DWORD PTR ds:0x41074f,0x10
  4072a7:	jb     0x40727b
  4072ad:	or     DWORD PTR ds:0x44b6dc,0x61e1
  4072b7:	mov    WORD PTR [ebp-0x4],ax
  4072bb:	xor    DWORD PTR ds:0x44b6e0,0xdd9
  4072c5:	lea    eax,[ebp-0x24]
  4072c8:	and    ecx,DWORD PTR ds:0x44b6d8
  4072ce:	jmp    0x407405
  4072d3:	div    DWORD PTR [eax]
  4072d5:	test   BYTE PTR [ebx],ah
  4072d7:	pop    ebx
  4072d8:	jnp    0x407285
  4072da:	js     0x407349
  4072dc:	ds xchg ebx,eax
  4072de:	mov    esp,0x966195e9
  4072e3:	lea    esi,[ecx]
  4072e5:	jl     0x407363
  4072e7:	push   es
  4072e8:	jg     0x407366
  4072ea:	jl     0x407282
  4072ec:	pop    edi
  4072ed:	adc    eax,0x3fd6a3bc
  4072f2:	mov    ebx,0x44453db8
  4072f7:	cmp    DWORD PTR [edi+0x104d1838],ebx
  4072fd:	mov    ds:0xe0bafd63,al
  407302:	push   edi
  407303:	xlat   BYTE PTR ds:[ebx]
  407304:	adc    ebx,eax
  407306:	jno    0x407334
  407308:	push   cs
  407309:	add    esi,DWORD PTR [ebx+0x33]
  40730c:	mov    eax,ds:0x2c6b9dd5
  407311:	ds es jge 0x4072dd
  407315:	cmc    
  407316:	pop    edx
  407317:	and    ch,BYTE PTR [edx-0x2b]
  40731a:	les    ebx,FWORD PTR [eax+esi*2-0x1a]
  40731e:	xchg   esp,eax
  40731f:	stc    
  407320:	fwait
  407321:	dec    esi
  407322:	(bad)  
  407323:	ss (bad) 
  407325:	pop    ds
  407326:	je     0x4072f1
  407328:	test   BYTE PTR [esi-0x2f],0x34
  40732c:	repnz in eax,0x3e
  40732f:	das    
  407330:	les    edx,FWORD PTR [eax-0xc]
  407333:	sub    BYTE PTR [ecx-0x16],dl
  407336:	cmp    BYTE PTR [edx+0x6f],cl
  407339:	pop    ss
  40733a:	or     dh,BYTE PTR [ebx+0x5bfef097]
  407340:	inc    esp
  407341:	jne    0x407354
  407343:	cdq    
  407344:	add    al,0x4c
  407346:	fstp   QWORD PTR [edx+0x7f]
  407349:	add    ecx,edi
  40734b:	jl     0x40734f
  40734d:	lods   al,BYTE PTR ds:[esi]
  40734e:	push   esp
  40734f:	fs xor al,0x1b
  407352:	mov    al,ds:0x7603a8e9
  407357:	xor    BYTE PTR [ebp-0x66],ch
  40735a:	and    DWORD PTR [esp+eax*2],esi
  40735d:	sar    BYTE PTR ds:0xe0f7dfb4,1
  407363:	js     0x407349
  407365:	push   ss
  407366:	sub    eax,0x1f76ef8f
  40736b:	cmp    bl,al
  40736d:	scas   eax,DWORD PTR es:[edi]
  40736e:	jnp    0x407329
  407370:	(bad)  
  407371:	sub    DWORD PTR gs:[edi+0x5b],0x30de1181
  407379:	out    0x7f,eax
  40737b:	mov    ds:0xc95ce143,al
  407380:	push   eax
  407381:	jae    0x407388
  407383:	lock shl DWORD PTR [edi],cl
  407386:	mov    esp,0x2daf3a53
  40738b:	mov    eax,DWORD PTR [esp+ecx*4-0x76]
  40738f:	scas   eax,DWORD PTR es:[edi]
  407390:	loopne 0x4073bf
  407392:	jno    0x40739d
  407394:	fcom   st(3)
  407396:	add    dl,BYTE PTR [edx+esi*8-0x5d]
  40739a:	sub    al,0x86
  40739c:	stos   DWORD PTR es:[edi],eax
  40739d:	(bad)  
  40739f:	cmp    edi,DWORD PTR [ebp-0x46b7a0a2]
  4073a5:	add    BYTE PTR [ebx+0x12025a0a],0xca
  4073ac:	ins    BYTE PTR es:[edi],dx
  4073ad:	nop
  4073ae:	jp     0x407363
  4073b0:	or     ebp,DWORD PTR [esi+0x67]
  4073b3:	popa   
  4073b4:	(bad)  
  4073b5:	sbb    BYTE PTR [edx+0x2a],cl
  4073b8:	call   0x7a6:0xb947c5c6
  4073bf:	pop    esp
  4073c0:	test   DWORD PTR [esi+0x2b],ecx
  4073c3:	call   0xb3df4019
  4073c8:	sbb    eax,DWORD PTR [ebx]
  4073ca:	sub    al,0xe6
  4073cc:	or     al,0xe5
  4073ce:	mov    BYTE PTR [edx+0x10],dl
  4073d1:	pop    esi
  4073d2:	das    
  4073d3:	mov    edx,0xd4ce3213
  4073d8:	xor    esp,DWORD PTR [ebp+0x58]
  4073db:	or     eax,0x3e61b3a7
  4073e0:	dec    esi
  4073e1:	ja     0x40737b
  4073e3:	mov    dh,bl
  4073e5:	push   ebx
  4073e6:	cli    
  4073e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073e8:	popa   
  4073e9:	and    dh,BYTE PTR [ecx]
  4073eb:	and    al,0xd8
  4073ed:	dec    esi
  4073ee:	adc    eax,0x2146da43
  4073f3:	call   0xb0a6c30e
  4073f8:	cmc    
  4073f9:	retf   0xf68e
  4073fc:	inc    esi
  4073fd:	xchg   esp,eax
  4073fe:	inc    ebx
  4073ff:	in     al,0x21
  407401:	jns    0x407440
  407403:	adc    DWORD PTR [ecx+ecx*4],0x32e9d845
  40740a:	add    DWORD PTR [eax],eax
  40740c:	add    BYTE PTR [ecx+ebx*8+0x66696689],ah
  407413:	fld    DWORD PTR [bp+si]
  407416:	xor    eax,0x300bcc56
  40741b:	arpl   WORD PTR [edi+edx*4+0x67c7c30],di
  407422:	jg     0x4074a0
  407424:	jl     0x407468
  407426:	sub    BYTE PTR [edx+0x55],0x6f
  40742a:	enter  0x55a8,0x54
  40742e:	ret    0x8a1a
  407431:	cmp    al,BYTE PTR [esi+0x43]
  407434:	out    0xaf,al
  407436:	aas    
  407437:	jbe    0x4073df
  407439:	(bad)  [edx]
  40743b:	mov    al,ds:0x32fcd3b9
  407440:	jl     0x40745f
  407442:	out    0xbf,eax
  407444:	aam    0x24
  407446:	sahf   
  407447:	push   0xb484d0b3
  40744c:	int    0xe2
  40744e:	mov    al,0x20
  407450:	dec    ecx
  407451:	sbb    cl,BYTE PTR [ecx-0x1142ec5f]
  407457:	adc    al,0x9e
  407459:	mov    al,0x1
  40745b:	push   es
  40745c:	mov    ds:0xcffdd8c2,al
  407461:	mov    ebp,0x7509388a
  407466:	(bad)  
  407468:	cbw    
  40746a:	mov    ah,0x9f
  40746c:	pushf  
  40746d:	mov    ds:0xc4799e42,al
  407472:	fs shr al,cl
  407475:	popf   
  407476:	sub    eax,0xb317dbca
  40747b:	ret    0x9f7d
  40747e:	ror    BYTE PTR ds:0xb652c13,cl
  407485:	jl     0x4074c5
  407487:	lock or DWORD PTR [eax+esi*8],edx
  40748b:	dec    ecx
  40748c:	pop    ebp
  40748d:	shl    BYTE PTR [esi+edx*4+0x68b2ba1e],1
  407494:	out    dx,al
  407495:	popf   
  407496:	xor    DWORD PTR [edx],ebx
  407498:	xor    dh,ch
  40749a:	sub    cl,ch
  40749c:	cmp    BYTE PTR [esi+0x99e229c],ch
  4074a2:	adc    dl,cl
  4074a4:	fst    DWORD PTR [esi]
  4074a6:	pop    ds
  4074a7:	je     0x4074be
  4074a9:	outs   dx,BYTE PTR ds:[esi]
  4074aa:	call   0xc4ca2ba2
  4074af:	mov    esp,0x6f465f62
  4074b4:	xchg   edi,eax
  4074b5:	(bad)  
  4074b6:	je     0x4074b7
  4074b8:	adc    al,0xd2
  4074ba:	lahf   
  4074bb:	and    DWORD PTR [esi+0x21],esp
  4074be:	xor    eax,0x8d7e100a
  4074c3:	dec    esi
  4074c4:	pusha  
  4074c5:	mov    es:0xe9f593be,eax
  4074cb:	xlat   BYTE PTR ds:[ebx]
  4074cc:	xchg   ecx,eax
  4074cd:	inc    edx
  4074ce:	dec    ecx
  4074cf:	push   ds
  4074d0:	cwde   
  4074d1:	lods   eax,DWORD PTR ds:[esi]
  4074d2:	push   ebp
  4074d3:	cs sub al,0x3f
  4074d6:	loop   0x407556
  4074d8:	xor    ecx,DWORD PTR [esi+0xa]
  4074db:	les    esi,FWORD PTR [ebx+0x360f51eb]
  4074e1:	adc    esi,DWORD PTR [esi+0x77]
  4074e4:	lahf   
  4074e5:	scas   eax,DWORD PTR es:[edi]
  4074e6:	push   ds
  4074e7:	inc    eax
  4074e8:	cmp    ch,BYTE PTR ds:0x766b96a9
  4074ee:	out    dx,al
  4074ef:	cmp    DWORD PTR [ecx],0x22
  4074f2:	(bad)  
  4074f3:	das    
  4074f4:	lods   al,BYTE PTR ds:[esi]
  4074f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074f6:	xchg   ecx,eax
  4074f7:	or     DWORD PTR [ebx],esp
  4074f9:	hlt    
  4074fa:	out    dx,al
  4074fb:	add    ah,ah
  4074fd:	sar    BYTE PTR [edx],cl
  4074ff:	out    dx,eax
  407500:	pop    ebx
  407501:	aaa    
  407502:	pushf  
  407503:	mov    eax,ds:0xb448bed7
  407508:	jne    0x4074f6
  40750a:	ret    
  40750b:	sahf   
  40750c:	mov    dh,0xd6
  40750e:	jle    0x407563
  407510:	mov    esi,0x5d1b28a2
  407515:	or     eax,0x230cf19e
  40751a:	out    0x1c,al
  40751c:	retf   
  40751d:	(bad)  [edx-0x74]
  407520:	push   es
  407521:	sub    BYTE PTR [ecx+0x7e008a95],bl
  407527:	mov    edi,0x3c54a882
  40752c:	add    eax,DWORD PTR [eax-0x80]
  40752f:	imul   esi,DWORD PTR [ebx-0x1fcc2cc1],0xffffffaa
  407536:	iret   
  407537:	(bad)  
  407538:	shl    DWORD PTR [esi-0x133874a4],cl
  40753e:	imul   ecx,DWORD PTR [ebx+0xd030845],0x44b6e0
  407548:	mov    DWORD PTR [ebp-0x20],eax
  40754b:	sbb    ecx,0x41ef
  407551:	push   ebx
  407552:	lea    eax,[ebp-0x18]
  407555:	mov    DWORD PTR [ebp-0x1c],eax
  407558:	mov    eax,DWORD PTR [ebp-0x1c]
  40755b:	adc    DWORD PTR ds:0x44e410,ecx
  407561:	push   esi
  407562:	push   edi
  407563:	mov    edi,0xf89f2dad
  407568:	or     DWORD PTR ds:0x44b6d8,0x25a
  407572:	mov    DWORD PTR [eax],edi
  407574:	mov    eax,DWORD PTR [ebp-0x14]
  407577:	mov    ebx,DWORD PTR [ebp-0x8]
  40757a:	and    esi,0x501d
  407580:	mov    ecx,0x7510857
  407585:	xor    eax,ecx
  407587:	and    DWORD PTR ds:0x42484b,0x0
  407591:	xor    esi,esi
  407593:	or     esi,DWORD PTR ds:0x42484b
  407599:	inc    esi
  40759a:	mov    DWORD PTR ds:0x42484b,esi
  4075a0:	cmp    DWORD PTR ds:0x42484b,0x24
  4075a7:	jne    0x4075b8
  4075ad:	push   0x41088a
  4075b2:	call   DWORD PTR ds:0x443374
  4075b8:	cmp    DWORD PTR ds:0x42484b,0x18
  4075bf:	jb     0x407591
  4075c5:	mov    esi,0x32729e
  4075ca:	adc    DWORD PTR ds:0x44e418,0x44e40c
  4075d4:	jmp    0x40770b
  4075d9:	adc    dh,al
  4075db:	in     al,0x9d
  4075dd:	data16 jge 0x407635
  4075e0:	mov    ebx,0x5b1ba91b
  4075e5:	pushf  
  4075e6:	cwde   
  4075e7:	clc    
  4075e8:	js     0x40759b
  4075ea:	xor    edi,DWORD PTR [esp+edi*2+0x6]
  4075ee:	jg     0x40766c
  4075f0:	jl     0x407613
  4075f2:	xchg   edx,eax
  4075f3:	rol    BYTE PTR [ebx+0x61f479f6],cl
  4075f9:	in     eax,dx
  4075fa:	inc    ebx
  4075fb:	ins    DWORD PTR es:[edi],dx
  4075fc:	jno    0x407639
  4075fe:	and    eax,0xa379c3db
  407603:	sahf   
  407604:	push   ebp
  407605:	pop    ds
  407606:	leave  
  407607:	dec    esp
  407608:	pop    esp
  407609:	mov    es:0xbe972b8b,al
  40760f:	inc    eax
  407610:	ja     0x407629
  407612:	cmp    al,0xe2
  407614:	mov    ebp,0x62ae56ad
  407619:	outs   dx,DWORD PTR ds:[esi]
  40761a:	fiadd  DWORD PTR [ebx-0x62e5efc3]
  407620:	jle    0x4075e0
  407622:	aas    
  407623:	ds dec esi
  407625:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407626:	xor    DWORD PTR [ebp+0x14],esi
  407629:	cmp    eax,0xa8fe8d83
  40762e:	mov    WORD PTR [esi+0x7d],ss
  407631:	sub    eax,0xe1fe4478
  407636:	imul   ebp,DWORD PTR [edi],0x7b8115b1
  40763c:	stos   BYTE PTR es:[edi],al
  40763d:	dec    esp
  40763e:	sub    BYTE PTR [ebx+0x599806ab],al
  407644:	push   esi
  407645:	mov    esp,0x80932fa9
  40764a:	push   0xffffffe0
  40764c:	stc    
  40764d:	fist   WORD PTR [edx+0x74]
  407650:	jne    0x40766f
  407652:	mov    bl,0xc7
  407654:	mov    ?,WORD PTR [ecx]
  407656:	pop    eax
  407657:	push   edi
  407658:	cmp    BYTE PTR [eax],ah
  40765a:	xor    ah,bl
  40765c:	rcl    DWORD PTR [ecx-0x33],cl
  40765f:	iret   
  407660:	inc    esp
  407661:	mov    ah,0xf2
  407663:	retf   0xfe5b
  407666:	or     al,BYTE PTR [ebp+0xc]
  407669:	cwde   
  40766a:	xor    BYTE PTR [edx],0x4a
  40766d:	sti    
  40766e:	nop
  40766f:	push   ds
  407670:	and    esi,DWORD PTR [ecx]
  407672:	adc    al,0x86
  407674:	int    0x90
  407676:	(bad)  
  407677:	int    0x8b
  407679:	or     edi,ebx
  40767b:	outs   dx,DWORD PTR ds:[esi]
  40767c:	retf   0x298e
  40767f:	add    DWORD PTR [esi+0x63],ecx
  407682:	inc    ebx
  407683:	dec    esi
  407684:	pusha  
  407685:	popa   
  407686:	jno    0x407675
  407688:	and    al,0x30
  40768a:	inc    edx
  40768b:	bound  edi,QWORD PTR es:[ebx]
  40768e:	mov    ebx,0x4413f57b
  407693:	inc    ebx
  407694:	adc    BYTE PTR [ecx+0x18],bl
  407697:	xchg   esp,eax
  407698:	cmp    BYTE PTR [ebp+0x7594e3a9],ah
  40769e:	inc    ecx
  40769f:	or     eax,0x19ef7249
  4076a4:	fcmovbe st,st(3)
  4076a6:	lods   al,BYTE PTR ds:[esi]
  4076a7:	call   0xedae19a9
  4076ac:	sbb    al,0x6b
  4076ae:	scas   eax,DWORD PTR es:[edi]
  4076af:	imul   ebp,DWORD PTR [edx-0x1dd98824],0xffffffa7
  4076b6:	jo     0x40763e
  4076b8:	nop
  4076b9:	inc    ecx
  4076ba:	sbb    al,0x87
  4076bc:	or     edi,DWORD PTR [ebp+0x5e]
  4076bf:	out    dx,al
  4076c0:	add    DWORD PTR [eax-0xf],0xffffffeb
  4076c4:	pushf  
  4076c5:	xchg   edi,eax
  4076c6:	cs xchg ebp,eax
  4076c8:	jne    0x4076f6
  4076ca:	in     al,dx
  4076cb:	and    al,0x42
  4076cd:	cld    
  4076ce:	pop    ds
  4076cf:	and    DWORD PTR [ecx+0xf],eax
  4076d2:	enter  0xba2f,0x9b
  4076d6:	push   ss
  4076d7:	popa   
  4076d8:	data16 mov bl,0x8a
  4076db:	pop    ebp
  4076dc:	aad    0xfc
  4076de:	js     0x407715
  4076e0:	pop    ecx
  4076e1:	mov    cl,0xdb
  4076e3:	arpl   di,sp
  4076e5:	sbb    BYTE PTR [ecx+0x1ef394db],dh
  4076eb:	and    edx,DWORD PTR [ebp+0x2bc99498]
  4076f1:	sub    eax,DWORD PTR [ebp-0x17]
  4076f4:	dec    esp
  4076f5:	push   ebp
  4076f6:	rcl    DWORD PTR ds:0x53b64505,0x2d
  4076fd:	test   eax,0xeb16204c
  407702:	xchg   ebp,eax
  407703:	xor    ch,ch
  407705:	mov    ebx,0xd861a685
  40770a:	(bad)  [ebx]
  40770c:	fld    st(7)
  40770e:	add    eax,0x41075b
  407713:	sbb    eax,0x33000075
  407718:	rol    BYTE PTR [ecx+0x44898005],cl
  40771e:	add    dl,bl
  407720:	push   cs
  407721:	add    BYTE PTR [eax],al
  407723:	add    eax,esi
  407725:	and    DWORD PTR ds:0x448980,0x424847
  40772f:	add    ebx,esi
  407731:	mov    DWORD PTR ds:0x448988,0x5df4
  40773b:	jmp    0x407872
  407740:	ss push 0x77
  407743:	call   0x6b2de4f3
  407748:	pop    ecx
  407749:	fcom   st(3)
  40774b:	xor    al,0xdf
  40774d:	and    esi,DWORD PTR [esi-0x66]
  407750:	pop    ebx
  407751:	xor    bh,BYTE PTR [esp+edi*2+0x6]
  407755:	jg     0x4077d3
  407757:	jl     0x4077b4
  407759:	mov    esp,0xc357e2ec
  40775e:	cwde   
  40775f:	cmp    BYTE PTR ds:0x1ff9bcca,0x6b
  407766:	sub    edx,DWORD PTR [esp+edx*8+0x1a]
  40776a:	push   cs
  40776b:	xchg   esi,eax
  40776c:	fs add al,0x4f
  40776f:	out    0x5e,al
  407771:	sub    DWORD PTR [esi-0x7d],esp
  407774:	push   ecx
  407775:	lods   al,BYTE PTR ds:[esi]
  407776:	dec    ebx
  407777:	cmp    BYTE PTR [ebx+ebx*2-0x1779a41f],0xf1
  40777f:	stos   DWORD PTR es:[edi],eax
  407780:	shl    ecx,cl
  407782:	loope  0x40778b
  407784:	stc    
  407785:	adc    BYTE PTR [ebx+0x5f0f76fd],bh
  40778b:	fistp  DWORD PTR ds:0x65f61b91
  407791:	not    al
  407793:	(bad)  
  407794:	mov    ecx,0x7f87fb94
  407799:	push   ds
  40779a:	push   0x37
  40779c:	mov    ecx,edx
  40779e:	jb     0x4077ba
  4077a0:	push   ss
  4077a1:	icebp  
  4077a2:	ss sahf 
  4077a4:	js     0x407823
  4077a6:	xchg   edx,eax
  4077a7:	repz xchg edx,eax
  4077a9:	daa    
  4077aa:	xlat   BYTE PTR ds:[ebx]
  4077ab:	xor    esp,esi
  4077ad:	in     eax,dx
  4077ae:	fsubr  st,st(2)
  4077b0:	xor    bh,ah
  4077b2:	imul   ebx,DWORD PTR [edi+0x6f],0xb07cf299
  4077b9:	call   0xc5e3:0x5678507a
  4077c0:	xchg   ebp,eax
  4077c1:	or     al,bl
  4077c3:	mov    ecx,DWORD PTR [ecx]
  4077c5:	inc    ecx
  4077c6:	ror    BYTE PTR [edx+0xfbcaa39],cl
  4077cc:	push   ebx
  4077cd:	dec    ecx
  4077ce:	adc    DWORD PTR [edi],0xcfdff3a1
  4077d4:	push   0xc87b90de
  4077d9:	inc    eax
  4077da:	mov    edx,0x772be5ba
  4077df:	cmp    eax,DWORD PTR [eax-0x75]
  4077e2:	loopne 0x4077ed
  4077e4:	cmp    eax,0xb0cb1c92
  4077e9:	popa   
  4077ea:	aaa    
  4077eb:	dec    ebp
  4077ec:	sbb    BYTE PTR [ebx-0x13adef79],dl
  4077f2:	xor    al,0xc1
  4077f4:	mov    al,0x6c
  4077f6:	int3   
  4077f7:	fimul  WORD PTR [ecx+0x6e]
  4077fa:	dec    edi
  4077fb:	ret    
  4077fc:	outs   dx,BYTE PTR ds:[esi]
  4077fd:	lock mov ebp,0x443d3adb
  407803:	sub    dl,BYTE PTR [ebx-0x1499387]
  407809:	adc    eax,0x413ab708
  40780e:	cdq    
  40780f:	ds lock dec edi
  407812:	or     ah,bl
  407814:	mov    esi,0x7f4626df
  407819:	pop    ds
  40781a:	daa    
  40781b:	popa   
  40781c:	mov    ds:0x28642831,al
  407821:	daa    
  407822:	jae    0x40784c
  407824:	inc    eax
  407825:	(bad)  
  407826:	xlat   BYTE PTR ds:[ebx]
  407827:	xor    eax,0x3a22e116
  40782c:	mov    ds:0x363eccff,al
  407831:	into   
  407832:	imul   esp,DWORD PTR [esi-0x4888d3cd],0x50eed001
  40783c:	lock add al,0xc6
  40783f:	jp     0x407854
  407841:	les    esi,FWORD PTR [edx-0x15]
  407844:	xchg   DWORD PTR [ebx],eax
  407846:	out    dx,eax
  407847:	jmp    0x4078b1
  407849:	pushf  
  40784a:	xchg   esi,eax
  40784b:	das    
  40784c:	fcmovb st,st(3)
  40784e:	mov    ds:0x575a65e7,al
  407853:	test   BYTE PTR [eax+0x1a],ch
  407856:	sbb    DWORD PTR [ebx+0x32dfaab1],eax
  40785c:	ds (bad) 
  40785e:	sbb    eax,0xd159b406
  407863:	fdiv   QWORD PTR [edx]
  407865:	or     eax,0x6e44ea23
  40786a:	sub    dh,BYTE PTR [eax]
  40786c:	bound  edx,QWORD PTR [eax+0x39]
  40786f:	adc    bh,BYTE PTR [ecx]
  407871:	inc    ecx
  407872:	div    ebx
  407874:	mov    edx,DWORD PTR ds:0x424837
  40787a:	mov    edx,DWORD PTR [ebp-0x20]
  40787d:	mov    DWORD PTR [ebp-0x2c],0x4eb5
  407884:	mov    DWORD PTR ds:0x44b6e8,0x3c9f
  40788e:	cmp    eax,DWORD PTR [edx]
  407890:	je     0x408082
  407896:	mov    edx,DWORD PTR ds:0x410743
  40789c:	and    DWORD PTR ds:0x44e418,edx
  4078a2:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  4078a9:	and    DWORD PTR ds:0x42483b,0x0
  4078b3:	mov    edx,DWORD PTR ds:0x42483b
  4078b9:	inc    edx
  4078ba:	mov    DWORD PTR ds:0x42483b,edx
  4078c0:	cmp    DWORD PTR ds:0x42483b,0x16
  4078c7:	jne    0x4078f0
  4078cd:	push   DWORD PTR [ebp-0x20]
  4078d0:	push   0x3477
  4078d5:	push   0x4489a0
  4078da:	push   DWORD PTR [ebp-0x10]
  4078dd:	push   0x7aad
  4078e2:	push   0x3f84
  4078e7:	push   DWORD PTR [ebp-0x1c]
  4078ea:	call   DWORD PTR ds:0x443014
  4078f0:	cmp    DWORD PTR ds:0x42483b,0x13
  4078f7:	jb     0x4078b3
  4078fd:	lea    eax,[ebp-0xc]
  407900:	mov    DWORD PTR [ebp-0x10],eax
  407903:	xor    edx,edx
  407905:	xor    edx,DWORD PTR ds:0x4454e4
  40790b:	mov    eax,ds:0x4489b8
  407910:	sub    edx,eax
  407912:	xor    edx,DWORD PTR [edx+eax*1]
  407915:	jmp    0x407a4c
  40791a:	lea    eax,[eax+ebx*1]
  40791d:	mov    WORD PTR [ebp+0x1d8d80],ds
  407923:	std    
  407924:	inc    esi
  407925:	nop
  407926:	xchg   edx,eax
  407927:	push   cs
  407928:	pop    eax
  407929:	xor    ah,BYTE PTR [ebp+0x35]
  40792c:	jl     0x4079aa
  40792e:	push   es
  40792f:	jg     0x4079ad
  407931:	jl     0x4078e5
  407933:	xor    eax,0x27034f31
  407938:	add    bh,BYTE PTR [ebx]
  40793a:	adc    ebx,DWORD PTR [ebx+0x7b]
  40793d:	ret    
  40793e:	mov    cl,0xc4
  407940:	jmp    0x1c46:0x335980d6
  407947:	add    DWORD PTR [edx+0x1e],edx
  40794a:	xor    edx,DWORD PTR [esi-0x7c16a693]
  407950:	pop    ebx
  407951:	xchg   edi,eax
  407952:	pop    edx
  407953:	fst    DWORD PTR [ebp+0x27]
  407956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407957:	or     eax,0x9abe4c20
  40795c:	adc    al,0xbb
  40795e:	xor    DWORD PTR [edx-0x63e9b4c6],ebx
  407964:	jns    0x407993
  407966:	sbb    DWORD PTR [edx+0x20],ecx
  407969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40796a:	sub    dl,BYTE PTR [esi-0x7734deba]
  407970:	repz popf 
  407972:	mov    edx,0x70b74094
  407977:	mov    ah,0xdc
  407979:	mov    ?,WORD PTR [esi]
  40797b:	xor    bh,ah
  40797d:	(bad)  
  40797e:	mov    al,ds:0x5148498a
  407983:	(bad)  
  407984:	mov    ch,0x3d
  407986:	pop    eax
  407987:	data16 or dl,BYTE PTR [si]
  40798b:	or     al,0x33
  40798d:	adc    eax,0x1d0fa0a3
  407992:	sbb    ch,BYTE PTR [edx]
  407994:	dec    ebx
  407995:	pop    esp
  407996:	adc    DWORD PTR [esi-0x467c15a1],0xffffffbd
  40799d:	push   ebx
  40799e:	cmp    DWORD PTR [esi],0xffffffe3
  4079a1:	bnd jae 0x40798e
  4079a4:	hlt    
  4079a5:	sti    
  4079a6:	pop    ds
  4079a7:	repz jge 0x407953
  4079aa:	pop    esi
  4079ab:	mov    ds:0x8e7a5bf4,al
  4079b0:	or     ebx,DWORD PTR [esi]
  4079b2:	jp     0x4079ba
  4079b4:	push   0xffffffef
  4079b6:	mov    eax,0x3ba1a9b2
  4079bb:	pushf  
  4079bc:	xor    ecx,DWORD PTR [eax]
  4079be:	sub    al,0xc4
  4079c0:	or     BYTE PTR [ecx+0x56],0xd9
  4079c4:	mov    eax,0x8b0714db
  4079c9:	rcl    BYTE PTR [ebx-0x65],0x3
  4079cd:	(bad)  
  4079ce:	jmp    0x911f5539
  4079d3:	in     al,dx
  4079d4:	ror    BYTE PTR [edx-0x69],cl
  4079d7:	cmp    eax,0x4fd04c25
  4079dc:	(bad)  
  4079de:	stos   BYTE PTR es:[edi],al
  4079df:	push   esi
  4079e0:	sub    eax,0x230666e2
  4079e5:	cmp    eax,edi
  4079e7:	xchg   ebp,eax
  4079e8:	shl    DWORD PTR [esi],1
  4079ea:	call   0x2bc7cb10
  4079ef:	pop    ss
  4079f0:	out    0xce,eax
  4079f2:	lock call 0xc7fe:0xea121a6b
  4079fa:	mov    bh,0xd6
  4079fc:	call   0x2f55:0xa31011cb
  407a03:	fwait
  407a04:	push   esp
  407a05:	add    cl,BYTE PTR ds:0xe499a555
  407a0b:	pop    esp
  407a0c:	cld    
  407a0d:	sbb    eax,0xfb574565
  407a12:	fs xor eax,0x81a3242d
  407a18:	out    dx,al
  407a19:	les    esi,FWORD PTR [eax+ebp*1+0x68]
  407a1d:	xor    al,0x48
  407a1f:	dec    esi
  407a20:	jge    0x407a33
  407a22:	lea    ebp,[edi+0x3c]
  407a25:	clc    
  407a26:	iret   
  407a27:	mov    al,ds:0x903023eb
  407a2c:	(bad)  
  407a2d:	es adc al,bh
  407a30:	pop    ds
  407a31:	adc    BYTE PTR [esi+0x1b019403],bl
  407a37:	inc    edi
  407a38:	inc    esp
  407a39:	ret    
  407a3a:	int    0xc1
  407a3c:	aas    
  407a3d:	(bad)  
  407a3e:	pop    edx
  407a3f:	call   0x9d04f94c
  407a44:	enter  0xb64d,0x53
  407a48:	cs test al,0x63
  407a4b:	mov    al,0x8b
  407a4d:	inc    ebp
  407a4e:	lock mov DWORD PTR ds:0x448994,0x1e
  407a59:	cmp    DWORD PTR ds:0x448994,0x0
  407a60:	je     0x407aad
  407a66:	cmp    DWORD PTR ds:0x448994,0x10
  407a6d:	jne    0x407a7f
  407a73:	push   DWORD PTR [ebp-0x1c]
  407a76:	push   DWORD PTR [ebp-0x18]
  407a79:	call   DWORD PTR ds:0x443018
  407a7f:	cmp    DWORD PTR ds:0x448994,0x11
  407a86:	jne    0x407a99
  407a8c:	mov    edx,DWORD PTR ds:0x448994
  407a92:	dec    edx
  407a93:	mov    DWORD PTR ds:0x448994,edx
  407a99:	xor    edx,edx
  407a9b:	add    edx,DWORD PTR ds:0x448994
  407aa1:	dec    edx
  407aa2:	mov    DWORD PTR ds:0x448994,edx
  407aa8:	jmp    0x407a59
  407aad:	mov    edx,DWORD PTR [eax]
  407aaf:	imul   edx,edx,0xf89ea9e0
  407ab5:	mov    DWORD PTR [eax],edx
  407ab7:	mov    eax,DWORD PTR [ebp-0xc]
  407aba:	cmp    eax,0x1fe34420
  407abf:	je     0x407c13
  407ac5:	mov    eax,DWORD PTR [ebp-0x1c]
  407ac8:	jmp    0x407bff
  407acd:	(bad)  
  407ace:	fsub   DWORD PTR [edx+0x76]
  407ad1:	jp     0x407a69
  407ad3:	jp     0x407b2d
  407ad5:	mov    ch,0xbf
  407ad7:	xchg   ebp,eax
  407ad8:	fisttp WORD PTR [edi+0x29]
  407adb:	cmp    DWORD PTR [edi],esi
  407add:	getsec 
  407adf:	jl     0x407b5d
  407ae1:	push   es
  407ae2:	jg     0x407b60
  407ae4:	jl     0x407a6c
  407ae6:	xor    dh,BYTE PTR [ebx+0x72ec964a]
  407aec:	xchg   ebp,eax
  407aed:	mov    eax,ds:0x6dafb1c
  407af2:	stos   BYTE PTR es:[edi],al
  407af3:	iret   
  407af4:	and    edx,DWORD PTR [edi-0x308ca808]
  407afa:	or     eax,0xb8df478f
  407aff:	cmp    al,0x6f
  407b01:	nop
  407b02:	jecxz  0x407b37
  407b04:	cmp    al,0x7c
  407b06:	dec    ebp
  407b07:	or     esp,esi
  407b09:	push   esp
  407b0a:	in     al,0xfa
  407b0c:	sub    eax,0xe0fc169d
  407b11:	ins    DWORD PTR es:[edi],dx
  407b12:	std    
  407b13:	gs xchg ebp,eax
  407b15:	clc    
  407b16:	shl    DWORD PTR [ecx-0x19],0xbf
  407b1a:	pop    ss
  407b1b:	loopne 0x407ae9
  407b1d:	rcl    BYTE PTR [ebx],cl
  407b1f:	cwde   
  407b20:	cmp    BYTE PTR [eax],ah
  407b22:	jmp    0x407b6e
  407b24:	jg     0x407b04
  407b26:	xor    edi,esi
  407b28:	sub    edi,DWORD PTR [edx+0x3906c99d]
  407b2e:	nop
  407b2f:	cmp    bh,BYTE PTR [ebp+eiz*4-0x308a807b]
  407b36:	sbb    ecx,DWORD PTR [esi]
  407b38:	push   ds
  407b39:	dec    esp
  407b3a:	sub    eax,0xbe237a99
  407b3f:	outs   dx,BYTE PTR ds:[esi]
  407b40:	(bad)  
  407b41:	rcl    DWORD PTR [edi+0x45],1
  407b44:	cmp    bl,cl
  407b46:	lods   al,BYTE PTR ds:[esi]
  407b47:	xor    bh,bl
  407b49:	sbb    BYTE PTR [edi+0x30fa7082],0x17
  407b50:	adc    BYTE PTR [esi+0x26fb0909],0xc7
  407b57:	retf   0xf63f
  407b5a:	rol    BYTE PTR [edi-0x1ae8727f],cl
  407b60:	nop
  407b61:	cmc    
  407b62:	push   eax
  407b63:	jmp    0x407b2a
  407b65:	pop    ecx
  407b66:	adc    al,0x74
  407b68:	jne    0x407b51
  407b6a:	mov    ah,0xf6
  407b6c:	call   0x185646da
  407b71:	das    
  407b72:	mov    ds:0x88650805,eax
  407b77:	ror    DWORD PTR [ecx-0x39],0x9a
  407b7b:	mov    ds:0x3069618f,eax
  407b80:	add    dh,BYTE PTR [eax]
  407b82:	clc    
  407b83:	cwde   
  407b84:	cs and ch,al
  407b87:	icebp  
  407b88:	das    
  407b89:	push   cs
  407b8a:	popa   
  407b8b:	jp     0x407b3f
  407b8d:	fwait
  407b8e:	xor    eax,0xc559251b
  407b93:	popa   
  407b94:	dec    edi
  407b95:	xchg   esi,eax
  407b96:	add    eax,0xc23a906a
  407b9b:	bound  edx,QWORD PTR [eax+0x16]
  407b9e:	jae    0x407bab
  407ba0:	in     eax,0xac
  407ba2:	and    al,0x7e
  407ba4:	add    cl,BYTE PTR [ebx-0x2a508fac]
  407baa:	jo     0x407b6f
  407bac:	jno    0x407bf2
  407bae:	ret    0x4e7b
  407bb1:	icebp  
  407bb2:	adc    ah,BYTE PTR ds:0x3ed6e497
  407bb8:	adc    bh,cl
  407bba:	cmc    
  407bbb:	push   esp
  407bbc:	cmp    DWORD PTR [esi],edi
  407bbe:	or     eax,0x25e5982f
  407bc3:	mov    DWORD PTR [bp-0x6],eax
  407bc7:	mov    cl,0x80
  407bc9:	out    0x90,al
  407bcb:	gs in  eax,0x8e
  407bce:	mov    esp,0xa1e37c24
  407bd3:	int3   
  407bd4:	mov    edx,0xdea78190
  407bd9:	and    edi,DWORD PTR [esp+ebx*1]
  407bdc:	(bad)  
  407bdd:	repz jp 0x407b79
  407be0:	(bad)  
  407be1:	stc    
  407be2:	mov    eax,ds:0x983d3945
  407be7:	les    ebp,FWORD PTR [ebx-0x5d030550]
  407bed:	test   eax,0xeaf94ff4
  407bf2:	test   BYTE PTR [ecx],dh
  407bf4:	jno    0x407b7b
  407bf6:	jle    0x407bca
  407bf8:	lods   al,BYTE PTR ds:[esi]
  407bf9:	nop
  407bfa:	push   0x407c615
  407bff:	or     DWORD PTR [eax],0x60751c90
  407c05:	mov    eax,DWORD PTR [ebp-0x8]
  407c08:	xor    eax,ecx
  407c0a:	add    eax,esi
  407c0c:	pop    edi
  407c0d:	pop    esi
  407c0e:	pop    ebx
  407c0f:	leave  
  407c10:	ret    0x4
  407c13:	mov    eax,DWORD PTR [ebp-0xc]
  407c16:	add    eax,DWORD PTR [ebp-0x18]
  407c19:	cmp    eax,0x188271cd
  407c1e:	je     0x407d69
  407c24:	mov    eax,DWORD PTR [ebp-0x10]
  407c27:	and    DWORD PTR [eax],0x751c9d
  407c2d:	jmp    0x407c05
  407c32:	jmp    0x407d69
  407c37:	jnp    0x407be9
  407c39:	lds    edx,FWORD PTR [eax+0x5b7da5fd]
  407c3f:	cmp    ah,BYTE PTR [ebp+0x70]
  407c42:	adc    eax,0xff90051a
  407c47:	sub    DWORD PTR [esi],esi
  407c49:	jl     0x407cc7
  407c4b:	push   es
  407c4c:	jg     0x407cca
  407c4e:	jl     0x407c7f
  407c50:	not    edx
  407c52:	fs xchg ebp,eax
  407c54:	cmovae eax,DWORD PTR [eax+0x67]
  407c58:	cmp    BYTE PTR ds:0xa8857cfa,cl
  407c5e:	dec    eax
  407c5f:	pop    eax
  407c60:	(bad)  
  407c61:	scas   eax,DWORD PTR es:[edi]
  407c62:	xchg   DWORD PTR [ebx],esp
  407c64:	push   esp
  407c65:	jl     0x407c0f
  407c67:	sbb    BYTE PTR [edi],bl
  407c69:	retf   
  407c6a:	jnp    0x407c36
  407c6c:	shr    ebp,1
  407c6e:	jbe    0x407cd6
  407c70:	lea    ecx,[esi-0x432eb094]
  407c76:	xchg   bh,ah
  407c78:	xor    DWORD PTR [ecx-0x62],edi
  407c7b:	lea    ecx,[eax-0x3c385059]
  407c81:	(bad)  
  407c82:	imul   edi,DWORD PTR [eax+0x30],0x33767168
  407c89:	sbb    al,0xe4
  407c8b:	xor    esp,DWORD PTR [edi-0x34]
  407c8e:	std    
  407c8f:	jo     0x407cb7
  407c91:	test   DWORD PTR [edi],eax
  407c93:	es dec edx
  407c95:	sub    edx,DWORD PTR [eax+ebp*1-0x7b6bb141]
  407c9c:	mov    eax,ds:0x708954c2
  407ca1:	(bad)  
  407ca2:	inc    DWORD PTR [ecx+0x6fc0ef3a]
  407ca8:	(bad)  
  407caa:	mov    ds:0x5c482898,al
  407caf:	popa   
  407cb0:	rcr    esp,0x54
  407cb3:	fstp   st(7)
  407cb5:	stos   DWORD PTR es:[edi],eax
  407cb6:	push   ebx
  407cb7:	inc    esp
  407cb8:	push   ebp
  407cb9:	imul   edx,DWORD PTR [ebx-0x3e61c78e],0x2aec46a0
  407cc3:	mov    ah,ah
  407cc5:	or     DWORD PTR [ecx+0xf],ecx
  407cc8:	popf   
  407cc9:	nop
  407cca:	retf   0x7a30
  407ccd:	sbb    bl,BYTE PTR [edi-0x48c1cf52]
  407cd3:	sbb    edx,DWORD PTR [ecx-0x486c70ca]
  407cd9:	rol    esi,cl
  407cdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cdc:	dec    esi
  407cdd:	dec    ebp
  407cde:	dec    ebx
  407cdf:	fld    DWORD PTR [ecx]
  407ce1:	sahf   
  407ce2:	xchg   edi,eax
  407ce3:	leave  
  407ce4:	pop    ecx
  407ce5:	outs   dx,BYTE PTR ds:[esi]
  407ce6:	div    edx
  407ce8:	inc    edi
  407ce9:	add    BYTE PTR [ecx*4-0x60229873],0xfb
  407cf1:	mov    ecx,ebx
  407cf3:	inc    esp
  407cf4:	sbb    al,0x47
  407cf6:	and    al,0x2f
  407cf8:	inc    edi
  407cf9:	cmp    al,0xb3
  407cfb:	mov    cl,ah
  407cfd:	imul   esp,DWORD PTR ds:0x3e5d45a2,0x3a
  407d04:	adc    BYTE PTR [edi],0xdc
  407d07:	fmul   QWORD PTR [eax-0x3f]
  407d0a:	out    0xe5,al
  407d0c:	sub    al,0x6a
  407d0e:	stos   DWORD PTR es:[edi],eax
  407d0f:	pushf  
  407d10:	in     eax,dx
  407d11:	lods   eax,DWORD PTR ds:[esi]
  407d12:	sub    eax,0x4646e1aa
  407d17:	inc    ebp
  407d18:	scas   eax,DWORD PTR es:[edi]
  407d19:	mov    dh,0xd1
  407d1b:	jb     0x407d4e
  407d1d:	sub    eax,esp
  407d1f:	push   edi
  407d20:	sbb    al,BYTE PTR ds:0x7c96646
  407d26:	add    BYTE PTR [edi],cl
  407d28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d29:	rcl    bl,0x8
  407d2c:	fcomp  st(5)
  407d2e:	adc    DWORD PTR [ecx-0x2e],ebx
  407d31:	fild   DWORD PTR [edi]
  407d33:	pop    ecx
  407d34:	adc    al,0xf1
  407d36:	adc    dh,dl
  407d38:	int3   
  407d39:	sbb    esi,DWORD PTR [eax+0x5edd9c2f]
  407d3f:	(bad)  
  407d40:	sbb    ah,BYTE PTR [ebx+0x242bcc05]
  407d46:	add    ebx,ebx
  407d48:	stos   BYTE PTR es:[edi],al
  407d49:	sbb    DWORD PTR [ebp+0x11],esp
  407d4c:	in     eax,dx
  407d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d4e:	cmp    DWORD PTR [ecx+0x1a],esi
  407d51:	and    DWORD PTR [esi+0x1e],ecx
  407d54:	test   edx,ebx
  407d56:	mov    ds:0x678d0dec,eax
  407d5b:	cwde   
  407d5c:	mov    esi,0x193404ee
  407d61:	push   ds
  407d62:	sub    eax,0x9119ce79
  407d67:	stos   BYTE PTR es:[edi],al
  407d68:	and    cl,BYTE PTR [ebx+0x558bf445]
  407d6e:	call   0xad7e3f7e
  407d73:	ins    DWORD PTR es:[edi],dx
  407d74:	(bad)  
  407d75:	dec    DWORD PTR [edi]
  407d77:	test   BYTE PTR [ebp+0x1],al
  407d7a:	add    BYTE PTR [eax],al
  407d7c:	mov    eax,DWORD PTR [ebp-0x10]
  407d7f:	jmp    0x407eb6
  407d84:	push   edi
  407d85:	add    BYTE PTR [esi-0x1b],bh
  407d88:	jge    0x407d6f
  407d8a:	jnp    0x407d26
  407d8c:	and    al,BYTE PTR [ebx-0x657a8a9c]
  407d92:	(bad)  
  407d93:	in     al,0x33
  407d95:	leave  
  407d96:	jl     0x407e14
  407d98:	push   es
  407d99:	jg     0x407e17
  407d9b:	jl     0x407d4e
  407d9d:	nop
  407d9e:	popa   
  407d9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407da0:	and    eax,ecx
  407da2:	sub    ebp,DWORD PTR [eax+esi*1]
  407da5:	(bad)  
  407da6:	aas    
  407da7:	inc    eax
  407da8:	adc    eax,0x693b95ef
  407dad:	mov    ah,0xf9
  407daf:	mov    ebp,0xa9cdaad0
  407db4:	cmp    BYTE PTR [ecx-0xc],bl
  407db7:	cmp    esi,DWORD PTR [edx+eax*1+0x5e1f000b]
  407dbe:	sub    ah,BYTE PTR [edi-0x65c687b5]
  407dc4:	or     al,0xd3
  407dc6:	push   esp
  407dc7:	leave  
  407dc8:	push   0x3742df75
  407dcd:	cmc    
  407dce:	dec    ebx
  407dcf:	call   0x375c2342
  407dd4:	repnz xchg ecx,eax
  407dd6:	call   0xdd5f:0x5efa03db
  407ddd:	sub    BYTE PTR [ebx],bl
  407ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407de0:	xor    dl,BYTE PTR [esi]
  407de2:	and    BYTE PTR [ebx-0x73],bh
  407de5:	pop    ds
  407de6:	jo     0x407d88
  407de8:	loopne 0x407d97
  407dea:	push   0x8
  407dec:	dec    esi
  407ded:	out    0x5f,eax
  407def:	retf   0xb4d6
  407df2:	imul   esi,DWORD PTR [edi+0x31229f0e],0xffffff81
  407df9:	inc    ebx
  407dfa:	bound  ebp,QWORD PTR [ecx+0x22d5c6f1]
  407e00:	je     0x407e3a
  407e02:	mov    dh,0xa9
  407e04:	fwait
  407e05:	les    edx,FWORD PTR [esi+0x5c]
  407e08:	jbe    0x407e84
  407e0a:	out    0x7f,eax
  407e0c:	vmovntpd YMMWORD PTR [ecx],ymm7
  407e10:	sub    eax,0x7fcde218
  407e15:	in     eax,0x95
  407e17:	dec    edi
  407e18:	gs (bad) 
  407e1a:	sub    esp,DWORD PTR ds:0xefc9c2f9
  407e20:	test   BYTE PTR [ecx+0x27b9aace],ah
  407e26:	outs   dx,DWORD PTR ds:[esi]
  407e27:	cmova  edi,DWORD PTR [esi+edx*8]
  407e2b:	addr16 test al,dh
  407e2e:	mul    esp
  407e30:	loop   0x407def
  407e32:	sbb    DWORD PTR [esi],0x15260eeb
  407e38:	pop    esi
  407e39:	mov    edi,0xc07af96
  407e3e:	add    eax,0x3eb0c555
  407e43:	inc    edx
  407e44:	or     al,0x28
  407e46:	inc    edx
  407e47:	jmp    0x407dcb
  407e49:	mov    al,BYTE PTR [edi-0x36e1b6d9]
  407e4f:	retf   
  407e50:	cli    
  407e51:	jae    0x407e7c
  407e53:	mov    eax,0xd600c241
  407e58:	sbb    DWORD PTR [edi-0x18],eax
  407e5b:	in     al,0x90
  407e5d:	bnd jnp 0x407e7f
  407e60:	fdivr  DWORD PTR [edx-0x193b1141]
  407e66:	out    dx,eax
  407e67:	aad    0x7e
  407e69:	je     0x407e06
  407e6b:	or     edi,DWORD PTR [edx]
  407e6d:	and    cl,BYTE PTR [edi]
  407e6f:	dec    ebp
  407e70:	dec    esi
  407e71:	jae    0x407ed9
  407e73:	mov    ds:0xf46c7041,eax
  407e78:	xor    cl,BYTE PTR [eax+0x21]
  407e7b:	(bad)  
  407e7c:	(bad)  
  407e7d:	outs   dx,DWORD PTR ds:[esi]
  407e7e:	xor    bh,al
  407e80:	fcmove st,st(2)
  407e82:	xor    eax,0x1db6b44b
  407e87:	mov    edx,edx
  407e89:	call   0x5393189e
  407e8e:	cli    
  407e8f:	aam    0xe1
  407e91:	xchg   esi,eax
  407e92:	xor    eax,0x53013a7f
  407e97:	xor    BYTE PTR [ebx+0x7a],ch
  407e9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e9b:	into   
  407e9c:	loopne 0x407e6e
  407e9e:	fsubr  st,st(4)
  407ea0:	jnp    0x407e75
  407ea2:	cmp    al,0xef
  407ea4:	jecxz  0x407ea2
  407ea6:	mov    WORD PTR [ebp-0x2d5433f1],es
  407eac:	inc    eax
  407ead:	mov    al,0x50
  407eaf:	(bad)  
  407eb0:	jmp    0x9245d13e
  407eb5:	js     0x407e38
  407eb7:	xor    BYTE PTR [edi-0x16d9af06],cl
  407ebd:	inc    esp
  407ebe:	std    
  407ebf:	(bad)  
  407ec0:	jmp    DWORD PTR [esi-0x75]
  407ec3:	inc    ebp
  407ec4:	cld    
  407ec5:	mov    edi,DWORD PTR [ebp+0x8]
  407ec8:	mov    edi,DWORD PTR [edi]
  407eca:	mov    edx,0x8a42
  407ecf:	xor    ax,dx
  407ed2:	mov    edx,0x3b08
  407ed7:	add    ax,dx
  407eda:	cmp    ax,WORD PTR [edi]
  407edd:	je     0x408061
  407ee3:	mov    eax,DWORD PTR [ebp-0x14]
  407ee6:	xor    eax,ecx
  407ee8:	jmp    0x40801f
  407eed:	(bad)  
  407eee:	pop    edx
  407eef:	fst    st(3)
  407ef1:	jge    0x407f46
  407ef3:	out    0x5d,al
  407ef5:	jnp    0x407ee7
  407ef7:	inc    esi
  407ef8:	sub    DWORD PTR [edi+esi*8-0x3722476e],esp
  407eff:	jl     0x407f7d
  407f01:	push   es
  407f02:	jg     0x407f80
  407f04:	jl     0x407f79
  407f06:	and    al,0xa7
  407f08:	outs   dx,DWORD PTR ds:[esi]
  407f09:	fcom   st(4)
  407f0b:	xlat   BYTE PTR ds:[ebx]
  407f0c:	imul   esp,DWORD PTR [edx+0x1d8c5f52],0xffffffe7
  407f13:	test   eax,0x70f94bba
  407f18:	call   0x64883114
  407f1d:	add    al,0x89
  407f1f:	(bad)  
  407f20:	pop    ebp
  407f21:	(bad)  ds:0xc99a872f
  407f27:	dec    esi
  407f28:	mov    edx,0x249fac70
  407f2d:	aam    0xe6
  407f2f:	xor    DWORD PTR [edi+0xaed69c0],0xfffffffe
  407f36:	leave  
  407f37:	hlt    
  407f38:	mov    ah,bl
  407f3a:	cmp    DWORD PTR [edx],esi
  407f3c:	adc    eax,0x1e0caaf3
  407f41:	loopne 0x407f9b
  407f43:	pushf  
  407f44:	jnp    0x407ee8
  407f46:	cs test eax,0xbafe43ba
  407f4c:	bound  edi,QWORD PTR [ecx+0x6]
  407f4f:	add    ebx,DWORD PTR [ebp+0x7c]
  407f52:	pop    ds
  407f53:	jmp    0x8401:0x3215ee0f
  407f5a:	clc    
  407f5b:	ja     0x407f4d
  407f5d:	xlat   BYTE PTR ds:[ebx]
  407f5e:	cdq    
  407f5f:	les    esp,FWORD PTR [esi-0x42]
  407f62:	or     ch,BYTE PTR [ebx]
  407f64:	fnop   
  407f66:	cmp    eax,0xdfe1b31b
  407f6b:	in     al,0xa2
  407f6d:	ins    BYTE PTR es:[edi],dx
  407f6e:	fstp   QWORD PTR [ecx+0x39]
  407f71:	fiadd  WORD PTR [edi]
  407f73:	pop    ss
  407f74:	shl    BYTE PTR [ebx],1
  407f76:	pop    eax
  407f77:	loop   0x407f83
  407f79:	idiv   BYTE PTR [ecx+0x41]
  407f7c:	lds    ecx,FWORD PTR [esi+ebp*4]
  407f7f:	inc    edx
  407f80:	ins    BYTE PTR es:[edi],dx
  407f81:	aaa    
  407f82:	dec    edi
  407f83:	pusha  
  407f84:	repz ds js 0x407fd5
  407f88:	daa    
  407f89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f8a:	(bad)  
  407f8b:	mov    ah,0x36
  407f8d:	pusha  
  407f8e:	outs   dx,BYTE PTR ds:[esi]
  407f8f:	dec    edx
  407f90:	ins    DWORD PTR es:[edi],dx
  407f91:	dec    ebx
  407f92:	push   edx
  407f93:	and    ah,dl
  407f95:	xchg   DWORD PTR [edi+0x4c03d03b],ecx
  407f9b:	popa   
  407f9c:	mov    eax,0x9a49d9da
  407fa1:	sbb    DWORD PTR [ebp+0x16cf738e],ecx
  407fa7:	fisttp DWORD PTR [eax]
  407fa9:	cdq    
  407faa:	aad    0xaa
  407fac:	jmp    0x407f4f
  407fae:	mov    ecx,0x2cd5378e
  407fb3:	dec    ecx
  407fb4:	xchg   ecx,eax
  407fb5:	add    BYTE PTR [edi-0x1bc4dbb2],ah
  407fbb:	mov    BYTE PTR [edi],al
  407fbd:	(bad)  
  407fbe:	jmp    0x9304a513
  407fc3:	lea    edx,[edi-0x6e79bb9d]
  407fc9:	pop    esi
  407fca:	adc    ebx,DWORD PTR [ebx]
  407fcc:	gs cmp ch,cl
  407fcf:	mov    esi,0xd9c8d28e
  407fd4:	or     DWORD PTR [ebx-0x5b],0xfffffff0
  407fd8:	add    ebx,DWORD PTR [ebx-0x49586ced]
  407fde:	fcomp  DWORD PTR [ebx+esi*2-0x2b]
  407fe2:	lods   al,BYTE PTR ds:[esi]
  407fe3:	ins    BYTE PTR es:[edi],dx
  407fe4:	int    0xef
  407fe6:	sahf   
  407fe7:	push   esi
  407fe8:	das    
  407fe9:	lock sub ah,ch
  407fec:	inc    edi
  407fed:	or     ch,BYTE PTR [esi+0x13]
  407ff0:	cli    
  407ff1:	mov    ah,cl
  407ff3:	sub    al,0xa0
  407ff5:	fsub   st(1),st
  407ff7:	jne    0x407ff0
  407ff9:	pop    eax
  407ffa:	or     esi,edx
  407ffc:	cmp    BYTE PTR [ecx+0x47],ch
  407fff:	test   DWORD PTR [ebx+edi*4-0x76],ebx
  408003:	pop    es
  408004:	dec    ecx
  408005:	repz add al,0xa8
  408008:	mov    bh,0x3a
  40800a:	cmp    eax,0x1754bbd0
  40800f:	inc    ecx
  408010:	shl    BYTE PTR [esi-0x2b15006],1
  408016:	clc    
  408017:	cli    
  408018:	jno    0x40802d
  40801a:	inc    ecx
  40801b:	out    dx,eax
  40801c:	and    DWORD PTR [edx+0x4b],esp
  40801f:	add    eax,esi
  408021:	mov    DWORD PTR [ebp-0x24],eax
  408024:	mov    eax,DWORD PTR [ebp-0x28]
  408027:	mov    di,WORD PTR [ebp-0x2c]
  40802b:	mov    ebx,0x8a42
  408030:	xor    di,bx
  408033:	add    di,dx
  408036:	movzx  edx,di
  408039:	mov    edi,DWORD PTR [ebp-0x8]
  40803c:	xor    edi,ecx
  40803e:	lea    edx,[edx+edi*1+0x32729e]
  408045:	add    DWORD PTR [eax],edx
  408047:	mov    eax,DWORD PTR [ebp-0x20]
  40804a:	mov    edx,DWORD PTR [ebp-0x8]
  40804d:	mov    edi,DWORD PTR [ebp-0x24]
  408050:	xor    edx,ecx
  408052:	add    edx,esi
  408054:	imul   edx,edi
  408057:	sub    DWORD PTR [eax],edx
  408059:	mov    eax,DWORD PTR [ebp-0x14]
  40805c:	jmp    0x407c08
  408061:	mov    eax,DWORD PTR [ebp-0xc]
  408064:	mov    edx,DWORD PTR [ebp-0x18]
  408067:	xor    eax,edx
  408069:	cmp    eax,0xe77c698d
  40806e:	je     0x407c05
  408074:	mov    eax,DWORD PTR [ebp-0x10]
  408077:	add    DWORD PTR [eax],0x7403501
  40807d:	jmp    0x407c05
  408082:	mov    eax,DWORD PTR [ebp-0x1c]
  408085:	cmp    DWORD PTR [eax],edi
  408087:	je     0x407c05
  40808d:	mov    eax,0x800f1c9c
  408092:	jmp    0x407c0c
  408097:	push   ebp
  408098:	mov    ebp,esp
  40809a:	push   ecx
  40809b:	xor    eax,eax
  40809d:	push   ecx
  40809e:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  4080a5:	sub    edx,0x2ef1
  4080ab:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  4080b2:	xor    ecx,ecx
  4080b4:	or     ecx,DWORD PTR ds:0x44e420
  4080ba:	sbb    ecx,DWORD PTR ds:0x410753
  4080c0:	mov    DWORD PTR ds:0x44e420,ecx
  4080c6:	mov    eax,DWORD PTR [ebp-0x4]
  4080c9:	dec    DWORD PTR ds:0x410753
  4080cf:	push   esi
  4080d0:	add    DWORD PTR ds:0x44b6cc,0x9cd
  4080da:	mov    esi,DWORD PTR [ebp-0x8]
  4080dd:	xor    ecx,0x7d4d
  4080e3:	mov    edx,0x7510857
  4080e8:	xor    eax,edx
  4080ea:	adc    DWORD PTR ds:0x42483f,0x7d5d
  4080f4:	xor    esi,edx
  4080f6:	and    DWORD PTR ds:0x44e410,0x0
  408100:	mov    ecx,DWORD PTR ds:0x44e410
  408106:	inc    ecx
  408107:	mov    DWORD PTR ds:0x44e410,ecx
  40810d:	cmp    DWORD PTR ds:0x44e410,0x1b
  408114:	jne    0x408125
  40811a:	push   0x410845
  40811f:	call   DWORD PTR ds:0x443378
  408125:	cmp    DWORD PTR ds:0x44e410,0x13
  40812c:	jb     0x408100
  408132:	mov    ecx,0x32729e
  408137:	add    esi,ecx
  408139:	jmp    0x4081e2
  40813e:	xchg   esp,eax
  40813f:	and    al,ch
  408141:	and    al,0x5d
  408143:	out    0x6d,eax
  408145:	mov    ds:0x3d17a190,al
  40814a:	push   edx
  40814b:	push   ss
  40814c:	dec    ebp
  40814d:	sub    edi,esp
  40814f:	retf   
  408150:	jl     0x4081ce
  408152:	mov    BYTE PTR [esp+edi*2+0x7c],bh
  408156:	or     al,0xa3
  408158:	dec    eax
  408159:	cmp    ch,dl
  40815b:	pop    es
  40815c:	out    0x1c,al
  40815e:	lods   al,BYTE PTR ds:[esi]
  40815f:	mov    ah,0x40
  408161:	daa    
  408162:	push   edx
  408163:	add    al,0x37
  408165:	shr    BYTE PTR [ebx+ecx*8],cl
  408168:	(bad)  
  408169:	cs scas al,BYTE PTR es:[edi]
  40816b:	dec    esp
  40816c:	jae    0x40812b
  40816e:	ret    
  40816f:	inc    eax
  408170:	outs   dx,DWORD PTR ds:[esi]
  408171:	repz push edx
  408173:	sbb    ah,ch
  408175:	and    eax,0x3e7e5988
  40817a:	push   ss
  40817b:	dec    edx
  40817c:	inc    ebx
  40817d:	mov    al,ds:0x8e55e6d4
  408182:	and    al,BYTE PTR [eax]
  408184:	cmp    cl,BYTE PTR [ebp-0x6e]
  408187:	sub    ecx,DWORD PTR [ebx+0x14]
  40818a:	or     eax,0x76365a46
  40818f:	loop   0x408155
  408191:	lods   eax,DWORD PTR ds:[esi]
  408192:	pop    ebx
  408193:	test   BYTE PTR [ebx-0x2f],0xa2
  408197:	mov    ebp,DWORD PTR [ebp+edi*2-0x182adb80]
  40819e:	jecxz  0x408216
  4081a0:	xchg   ebx,eax
  4081a1:	enter  0x7af1,0xac
  4081a5:	int3   
  4081a6:	mov    DWORD PTR [ebx+eax*8+0x36],esp
  4081aa:	dec    ebx
  4081ab:	add    DWORD PTR [ecx+0x54],0x2204d6ac
  4081b2:	or     eax,0x5edc21c2
  4081b7:	imul   esp,eax,0xdcffc44f
  4081bd:	sub    eax,DWORD PTR [ecx]
  4081bf:	mov    ds:0x55c38527,eax
  4081c4:	adc    al,0x45
  4081c6:	pop    esi
  4081c7:	and    al,0xef
  4081c9:	xchg   esi,eax
  4081ca:	pop    eax
  4081cb:	repz (bad) 
  4081cd:	cmp    edi,esp
  4081cf:	mov    ch,0x63
  4081d1:	in     eax,0xd2
  4081d3:	pushf  
  4081d4:	cmp    BYTE PTR [ebp+0x21],0xc
  4081d8:	xor    ebp,eax
  4081da:	int    0xbd
  4081dc:	mov    eax,ds:0xfc128282
  4081e1:	dec    eax
  4081e2:	add    eax,ecx
  4081e4:	imul   eax,esi
  4081e7:	mov    esi,DWORD PTR [ebp+0xc]
  4081ea:	mov    DWORD PTR ds:0x44b6d0,0x538a
  4081f4:	cmp    esi,eax
  4081f6:	jne    0x40826b
  4081fc:	mov    DWORD PTR ds:0x44b6d4,0x1c
  408206:	cmp    DWORD PTR ds:0x44b6d4,0x0
  40820d:	je     0x408255
  408213:	cmp    DWORD PTR ds:0x44b6d4,0xe
  40821a:	jne    0x408229
  408220:	push   DWORD PTR [ebp-0x14]
  408223:	call   DWORD PTR ds:0x44301c
  408229:	cmp    DWORD PTR ds:0x44b6d4,0xf
  408230:	jne    0x408243
  408236:	mov    esi,DWORD PTR ds:0x44b6d4
  40823c:	dec    esi
  40823d:	mov    DWORD PTR ds:0x44b6d4,esi
  408243:	mov    esi,DWORD PTR ds:0x44b6d4
  408249:	dec    esi
  40824a:	mov    DWORD PTR ds:0x44b6d4,esi
  408250:	jmp    0x408206
  408255:	mov    eax,DWORD PTR [ebp-0x4]
  408258:	mov    esi,DWORD PTR [ebp-0x8]
  40825b:	xor    eax,edx
  40825d:	xor    esi,edx
  40825f:	add    eax,ecx
  408261:	add    esi,ecx
  408263:	imul   eax,esi
  408266:	jmp    0x40834f
  40826b:	mov    eax,DWORD PTR [ebp+0xc]
  40826e:	mov    eax,DWORD PTR [eax+0x78]
  408271:	mov    DWORD PTR [ebp+0xc],eax
  408274:	mov    eax,DWORD PTR [ebp-0x4]
  408277:	mov    esi,DWORD PTR [ebp-0x8]
  40827a:	xor    eax,edx
  40827c:	xor    esi,edx
  40827e:	jmp    0x408327
  408283:	mov    edi,0x6a6fd0cd
  408288:	jns    0x4082cd
  40828a:	std    
  40828b:	ficomp WORD PTR [ebx+0x10]
  40828e:	jo     0x4082b0
  408290:	mov    ebp,0xca738da1
  408295:	jl     0x408313
  408297:	mov    BYTE PTR [esp+edi*2+0x7c],bh
  40829b:	xchg   ebp,eax
  40829c:	cmc    
  40829d:	loope  0x40830f
  40829f:	aad    0x11
  4082a1:	jg     0x408255
  4082a3:	jecxz  0x408249
  4082a5:	fisub  DWORD PTR [esi-0x577c3a0b]
  4082ab:	push   esi
  4082ac:	jecxz  0x408254
  4082ae:	mov    eax,ds:0xff44f412
  4082b3:	inc    DWORD PTR [eax-0x721948f3]
  4082b9:	push   0xffffff82
  4082bb:	loope  0x40825b
  4082bd:	mov    esi,0x6bb032d9
  4082c2:	mul    DWORD PTR [ebx-0x73e14481]
  4082c8:	(bad)  
  4082ca:	or     DWORD PTR [edx],0x691038af
  4082d0:	and    eax,0x3f0fe96c
  4082d5:	mov    al,0x21
  4082d7:	lds    eax,FWORD PTR [eax+0x52]
  4082da:	retf   
  4082db:	and    DWORD PTR [edi+0x61d64901],ebx
  4082e1:	loopne 0x4082fe
  4082e3:	or     dh,BYTE PTR [eax-0x3577bd]
  4082e9:	add    esp,ebx
  4082eb:	(bad)  
  4082ec:	jne    0x408283
  4082ee:	sahf   
  4082ef:	mov    eax,ds:0x6aa2bae4
  4082f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082f5:	inc    ebx
  4082f6:	cwde   
  4082f7:	out    0x1d,al
  4082f9:	and    al,0x14
  4082fb:	sti    
  4082fc:	xor    edx,DWORD PTR [ecx+0xfecfc26]
  408302:	loopne 0x4082b0
  408304:	push   edi
  408305:	inc    ebp
  408306:	inc    eax
  408307:	mov    dl,0xc
  408309:	lahf   
  40830a:	enter  0xd840,0x4d
  40830e:	mov    dl,0x8b
  408310:	adc    eax,0xa021bd6e
  408315:	xchg   edx,eax
  408316:	mov    al,0xeb
  408318:	stos   BYTE PTR es:[edi],al
  408319:	adc    BYTE PTR [ecx+0x60],bl
  40831c:	sub    bh,BYTE PTR [ebx-0x26]
  40831f:	xor    BYTE PTR [edx-0xa9aa75d],dh
  408325:	pop    esi
  408326:	add    DWORD PTR [ebx],0xffffffc1
  408329:	add    esi,ecx
  40832b:	imul   eax,esi
  40832e:	mov    esi,DWORD PTR [ebp+0xc]
  408331:	cmp    esi,eax
  408333:	mov    eax,DWORD PTR [ebp-0x4]
  408336:	je     0x408258
  40833c:	xor    eax,edx
  40833e:	add    eax,ecx
  408340:	mov    ecx,DWORD PTR [ebp+0xc]
  408343:	imul   eax,ecx
  408346:	add    eax,DWORD PTR [ebp+0x8]
  408349:	mov    DWORD PTR [ebp+0xc],eax
  40834c:	mov    eax,DWORD PTR [ebp+0xc]
  40834f:	pop    esi
  408350:	leave  
  408351:	ret    0x8
  408354:	push   ebp
  408355:	mov    ebp,esp
  408357:	sub    esp,0xa0
  40835d:	push   0x4452b8
  408362:	xor    DWORD PTR ds:0x44e418,0x56f9
  40836c:	call   DWORD PTR ds:0x4430a0
  408372:	adc    DWORD PTR ds:0x448980,0x42484b
  40837c:	test   eax,eax
  40837e:	mov    DWORD PTR ds:0x448984,0xdf5
  408388:	je     0x40839f
  40838e:	or     DWORD PTR ds:0x44b6e4,0x448990
  408398:	xor    eax,eax
  40839a:	jmp    0x409294
  40839f:	sub    DWORD PTR ds:0x44b6dc,0x44899c
  4083a9:	push   esi
  4083aa:	and    DWORD PTR ds:0x42484b,0x0
  4083b4:	jmp    0x4083c6
  4083b9:	mov    esi,DWORD PTR ds:0x42484b
  4083bf:	inc    esi
  4083c0:	mov    DWORD PTR ds:0x42484b,esi
  4083c6:	cmp    DWORD PTR ds:0x42484b,0x1f
  4083cd:	jae    0x408414
  4083d3:	cmp    DWORD PTR ds:0x42484b,0x9
  4083da:	jne    0x4083eb
  4083e0:	push   0x3309
  4083e5:	call   DWORD PTR ds:0x44337c
  4083eb:	cmp    DWORD PTR ds:0x42484b,0x8
  4083f2:	jne    0x408405
  4083f8:	mov    esi,DWORD PTR ds:0x42484b
  4083fe:	inc    esi
  4083ff:	mov    DWORD PTR ds:0x42484b,esi
  408405:	jmp    0x4083b9
  40840a:	or     DWORD PTR ds:0x44b6e0,0x7a7b
  408414:	mov    esi,0x876987
  408419:	mov    DWORD PTR ds:0x448990,0x1efc
  408423:	push   esi
  408424:	push   0x4452fc
  408429:	push   0x445324
  40842e:	call   DWORD PTR ds:0x443370
  408434:	mov    DWORD PTR ds:0x44e424,0x50e
  40843e:	cmp    eax,esi
  408440:	je     0x4084a1
  408446:	or     DWORD PTR ds:0x448980,0x78e6
  408450:	push   0x98786856
  408455:	add    DWORD PTR ds:0x424843,0x6d32
  40845f:	push   0x344
  408464:	adc    DWORD PTR ds:0x41074f,0x5b99
  40846e:	push   0x545
  408473:	adc    DWORD PTR ds:0x44899c,0x2d37
  40847d:	push   0x675765
  408482:	sbb    DWORD PTR ds:0x410743,0x42484b
  40848c:	push   0x67576
  408491:	push   0x86789768
  408496:	call   DWORD PTR ds:0x443368
  40849c:	jmp    0x409293
  4084a1:	or     edx,0x6156
  4084a7:	mov    ecx,0xf89c8535
  4084ac:	and    esi,0x7fd
  4084b2:	mov    DWORD PTR [ebp-0x20],ecx
  4084b5:	sub    esi,0x48f6
  4084bb:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  4084c2:	lea    eax,[ebp-0x4c]
  4084c5:	adc    DWORD PTR ds:0x44e424,ebx
  4084cb:	mov    DWORD PTR [ebp-0x30],eax
  4084ce:	add    esi,DWORD PTR ds:0x4489a0
  4084d4:	lea    eax,[ebp-0x54]
  4084d7:	mov    DWORD PTR [ebp-0x14],eax
  4084da:	mov    DWORD PTR ds:0x4489a4,0x12
  4084e4:	cmp    DWORD PTR ds:0x4489a4,0x0
  4084eb:	je     0x40853a
  4084f1:	cmp    DWORD PTR ds:0x4489a4,0x6
  4084f8:	jne    0x408509
  4084fe:	push   0x8a27
  408503:	call   DWORD PTR ds:0x443380
  408509:	cmp    DWORD PTR ds:0x4489a4,0x7
  408510:	jne    0x408521
  408516:	mov    eax,ds:0x4489a4
  40851b:	dec    eax
  40851c:	mov    ds:0x4489a4,eax
  408521:	xor    eax,eax
  408523:	xor    eax,DWORD PTR ds:0x4489a4
  408529:	dec    eax
  40852a:	mov    ds:0x4489a4,eax
  40852f:	jmp    0x4084e4
  408534:	sbb    esi,DWORD PTR ds:0x44e418
  40853a:	mov    eax,ds:0x4451a0
  40853f:	and    DWORD PTR ds:0x44e414,0x0
  408549:	jmp    0x40855b
  40854e:	mov    esi,DWORD PTR ds:0x44e414
  408554:	inc    esi
  408555:	mov    DWORD PTR ds:0x44e414,esi
  40855b:	cmp    DWORD PTR ds:0x44e414,0x16
  408562:	jae    0x4085a2
  408568:	cmp    DWORD PTR ds:0x44e414,0x1d
  40856f:	jne    0x40858a
  408575:	push   0x61c5
  40857a:	push   0x7b2c
  40857f:	push   0x2e55
  408584:	call   DWORD PTR ds:0x443384
  40858a:	jmp    0x40854e
  40858f:	movzx  edx,WORD PTR ds:0x44b6e0
  408596:	sbb    edx,DWORD PTR ds:0x424847
  40859c:	mov    DWORD PTR ds:0x44b6e0,edx
  4085a2:	mov    eax,DWORD PTR [eax+0x1c8]
  4085a8:	xor    edx,edx
  4085aa:	mov    eax,DWORD PTR [eax]
  4085ac:	mov    DWORD PTR ds:0x44e428,0x299a
  4085b6:	mov    edx,DWORD PTR [ebp-0x14]
  4085b9:	and    DWORD PTR ds:0x44e414,0x0
  4085c3:	xor    esi,esi
  4085c5:	add    esi,DWORD PTR ds:0x44e414
  4085cb:	inc    esi
  4085cc:	mov    DWORD PTR ds:0x44e414,esi
  4085d2:	cmp    DWORD PTR ds:0x44e414,0x27
  4085d9:	jne    0x4085f1
  4085df:	push   0x7f38
  4085e4:	push   0x1
  4085e6:	push   0x41098d
  4085eb:	call   DWORD PTR ds:0x443388
  4085f1:	cmp    DWORD PTR ds:0x44e414,0x1d
  4085f8:	jb     0x4085c3
  4085fe:	and    DWORD PTR ds:0x44b6d4,0x0
  408608:	xor    esi,esi
  40860a:	add    esi,DWORD PTR ds:0x44b6d4
  408610:	inc    esi
  408611:	mov    DWORD PTR ds:0x44b6d4,esi
  408617:	cmp    DWORD PTR ds:0x44b6d4,0xa
  40861e:	jne    0x40862f
  408624:	push   0x40b4
  408629:	call   DWORD PTR ds:0x4430ec
  40862f:	cmp    DWORD PTR ds:0x44b6d4,0x9
  408636:	jne    0x408649
  40863c:	mov    esi,DWORD PTR ds:0x44b6d4
  408642:	inc    esi
  408643:	mov    DWORD PTR ds:0x44b6d4,esi
  408649:	cmp    DWORD PTR ds:0x44b6d4,0x1b
  408650:	jb     0x408608
  408656:	or     DWORD PTR ds:0x4489a0,0x1250
  408660:	push   ebx
  408661:	movzx  esi,BYTE PTR ds:0x448990
  408668:	sub    esi,DWORD PTR ds:0x424843
  40866e:	mov    DWORD PTR ds:0x448990,esi
  408674:	mov    esi,0x7510857
  408679:	mov    DWORD PTR ds:0x424843,0x4f36
  408683:	xor    eax,esi
  408685:	sub    DWORD PTR ds:0x44e40c,0x44b6e8
  40868f:	push   edi
  408690:	mov    DWORD PTR ds:0x448990,0x1b
  40869a:	cmp    DWORD PTR ds:0x448990,0x0
  4086a1:	je     0x408750
  4086a7:	cmp    DWORD PTR ds:0x448990,0xd
  4086ae:	jne    0x4086c9
  4086b4:	push   0x7f5c
  4086b9:	push   0x1
  4086bb:	push   DWORD PTR [ebp-0x18]
  4086be:	push   0x52f7
  4086c3:	call   DWORD PTR ds:0x4430f0
  4086c9:	cmp    DWORD PTR ds:0x448990,0xe
  4086d0:	jne    0x4086e3
  4086d6:	mov    edi,DWORD PTR ds:0x448990
  4086dc:	dec    edi
  4086dd:	mov    DWORD PTR ds:0x448990,edi
  4086e3:	mov    edi,DWORD PTR ds:0x448990
  4086e9:	dec    edi
  4086ea:	mov    DWORD PTR ds:0x448990,edi
  4086f0:	jmp    0x40869a
  4086f5:	and    DWORD PTR ds:0x44e428,0x0
  4086ff:	mov    edi,DWORD PTR ds:0x44e428
  408705:	inc    edi
  408706:	mov    DWORD PTR ds:0x44e428,edi
  40870c:	cmp    DWORD PTR ds:0x44e428,0x9
  408713:	jne    0x408729
  408719:	push   0x3065
  40871e:	push   0x34da
  408723:	call   DWORD PTR ds:0x44338c
  408729:	cmp    DWORD PTR ds:0x44e428,0x8
  408730:	jne    0x408743
  408736:	mov    edi,DWORD PTR ds:0x44e428
  40873c:	inc    edi
  40873d:	mov    DWORD PTR ds:0x44e428,edi
  408743:	cmp    DWORD PTR ds:0x44e428,0x12
  40874a:	jb     0x4086ff
  408750:	mov    edi,0x32729e
  408755:	sbb    DWORD PTR ds:0x44e424,0x410753
  40875f:	add    eax,edi
  408761:	mov    DWORD PTR [edx],eax
  408763:	movzx  eax,BYTE PTR ds:0x44b6cc
  40876a:	mov    eax,ds:0x44541c
  40876f:	cmp    eax,0x23d14057
  408774:	mov    DWORD PTR ds:0x42483b,0x37ed
  40877e:	mov    eax,DWORD PTR [ebp-0x18]
  408781:	mov    DWORD PTR ds:0x44b6e4,0x441f
  40878b:	je     0x4087a5
  408791:	neg    ecx
  408793:	mov    ecx,DWORD PTR [ebp-0x20]
  408796:	xor    eax,esi
  408798:	add    eax,edi
  40879a:	imul   eax,ecx
  40879d:	mov    DWORD PTR [ebp-0x20],eax
  4087a0:	jmp    0x40903b
  4087a5:	xor    edx,DWORD PTR ds:0x44b6cc
  4087ab:	xor    eax,esi
  4087ad:	add    eax,edi
  4087af:	and    DWORD PTR ds:0x448994,0x0
  4087b9:	mov    edx,DWORD PTR ds:0x448994
  4087bf:	inc    edx
  4087c0:	mov    DWORD PTR ds:0x448994,edx
  4087c6:	cmp    DWORD PTR ds:0x448994,0x1c
  4087cd:	jne    0x4087eb
  4087d3:	push   0x41098d
  4087d8:	push   0x5d39
  4087dd:	push   DWORD PTR [ebp-0x18]
  4087e0:	push   0x7a56
  4087e5:	call   DWORD PTR ds:0x443390
  4087eb:	cmp    DWORD PTR ds:0x448994,0x11
  4087f2:	jb     0x4087b9
  4087f8:	mov    ds:0x4452b0,eax
  4087fd:	mov    eax,DWORD PTR [ebp-0x20]
  408800:	xor    eax,esi
  408802:	inc    edx
  408803:	add    eax,edi
  408805:	movzx  edx,BYTE PTR ds:0x44b6e4
  40880c:	sub    edx,DWORD PTR ds:0x44898c
  408812:	mov    DWORD PTR ds:0x44b6e4,edx
  408818:	mov    ds:0x44541c,eax
  40881d:	mov    eax,DWORD PTR [ebp-0x18]
  408820:	or     DWORD PTR ds:0x41074b,0x6341
  40882a:	mov    edx,DWORD PTR ds:0x4452b0
  408830:	sbb    DWORD PTR ds:0x44899c,0x44b6e8
  40883a:	xor    eax,esi
  40883c:	sbb    DWORD PTR ds:0x44b6d4,0x68
  408846:	add    eax,edi
  408848:	mov    DWORD PTR ds:0x44b6e0,0x7dde
  408852:	cmp    edx,eax
  408854:	jne    0x40903b
  40885a:	mov    eax,DWORD PTR [ebp-0x18]
  40885d:	sbb    ebx,edx
  40885f:	mov    DWORD PTR [ebp-0x28],eax
  408862:	xor    eax,eax
  408864:	add    eax,DWORD PTR ds:0x4454e0
  40886a:	mov    ebx,DWORD PTR ds:0x4454ec
  408870:	sub    eax,ebx
  408872:	add    eax,DWORD PTR [eax+ebx*1]
  408875:	mov    eax,DWORD PTR [ebp-0x20]
  408878:	mov    DWORD PTR [ebp-0x1c],eax
  40887b:	mov    eax,ds:0x4451a0
  408880:	and    DWORD PTR ds:0x4489a4,0x0
  40888a:	mov    ebx,DWORD PTR ds:0x4489a4
  408890:	inc    ebx
  408891:	mov    DWORD PTR ds:0x4489a4,ebx
  408897:	cmp    DWORD PTR ds:0x4489a4,0x21
  40889e:	jne    0x4088b5
  4088a4:	push   0x32f9
  4088a9:	push   DWORD PTR [ebp-0x20]
  4088ac:	push   DWORD PTR [ebp-0x18]
  4088af:	call   DWORD PTR ds:0x4430f4
  4088b5:	cmp    DWORD PTR ds:0x4489a4,0x13
  4088bc:	jb     0x40888a
  4088c2:	mov    DWORD PTR ds:0x44b6e8,0x1c
  4088cc:	cmp    DWORD PTR ds:0x44b6e8,0x0
  4088d3:	je     0x408985
  4088d9:	cmp    DWORD PTR ds:0x44b6e8,0xe
  4088e0:	jne    0x4088ef
  4088e6:	push   DWORD PTR [ebp-0x24]
  4088e9:	call   DWORD PTR ds:0x4430f8
  4088ef:	cmp    DWORD PTR ds:0x44b6e8,0xf
  4088f6:	jne    0x40890b
  4088fc:	xor    edx,edx
  4088fe:	xor    edx,DWORD PTR ds:0x44b6e8
  408904:	dec    edx
  408905:	mov    DWORD PTR ds:0x44b6e8,edx
  40890b:	mov    edx,DWORD PTR ds:0x44b6e8
  408911:	dec    edx
  408912:	mov    DWORD PTR ds:0x44b6e8,edx
  408918:	jmp    0x4088cc
  40891d:	and    DWORD PTR ds:0x41073f,0x0
  408927:	jmp    0x40893b
  40892c:	xor    edx,edx
  40892e:	xor    edx,DWORD PTR ds:0x41073f
  408934:	inc    edx
  408935:	mov    DWORD PTR ds:0x41073f,edx
  40893b:	cmp    DWORD PTR ds:0x41073f,0x11
  408942:	jae    0x408985
  408948:	cmp    DWORD PTR ds:0x41073f,0x7
  40894f:	jne    0x40895e
  408955:	push   DWORD PTR [ebp-0xc]
  408958:	call   DWORD PTR ds:0x443394
  40895e:	cmp    DWORD PTR ds:0x41073f,0x6
  408965:	jne    0x40897a
  40896b:	xor    edx,edx
  40896d:	or     edx,DWORD PTR ds:0x41073f
  408973:	inc    edx
  408974:	mov    DWORD PTR ds:0x41073f,edx
  40897a:	jmp    0x40892c
  40897f:	xor    DWORD PTR ds:0x4489a8,ebx
  408985:	mov    eax,DWORD PTR [eax+0x198]
  40898b:	mov    DWORD PTR [ebp-0x8],eax
  40898e:	or     DWORD PTR ds:0x4489a4,0xc15
  408998:	mov    eax,DWORD PTR [ebp-0x1c]
  40899b:	mov    edx,DWORD PTR [ebp-0x8]
  40899e:	xor    ebx,0x1805
  4089a4:	xor    eax,esi
  4089a6:	dec    ebx
  4089a7:	add    eax,edi
  4089a9:	sbb    ebx,DWORD PTR ds:0x41074f
  4089af:	mov    DWORD PTR [edx],eax
  4089b1:	add    ebx,DWORD PTR ds:0x44b6d4
  4089b7:	lea    eax,[ebp-0x10]
  4089ba:	dec    ebx
  4089bb:	mov    DWORD PTR [ebp-0x34],eax
  4089be:	and    DWORD PTR ds:0x410757,0x0
  4089c8:	jmp    0x4089db
  4089cd:	xor    eax,eax
  4089cf:	or     eax,DWORD PTR ds:0x410757
  4089d5:	inc    eax
  4089d6:	mov    ds:0x410757,eax
  4089db:	cmp    DWORD PTR ds:0x410757,0x13
  4089e2:	jae    0x408a35
  4089e8:	cmp    DWORD PTR ds:0x410757,0x6
  4089ef:	jne    0x408a0d
  4089f5:	push   0x1b4e
  4089fa:	push   0x76a9
  4089ff:	push   DWORD PTR [ebp-0x1c]
  408a02:	push   0x886b
  408a07:	call   DWORD PTR ds:0x443398
  408a0d:	cmp    DWORD PTR ds:0x410757,0x5
  408a14:	jne    0x408a25
  408a1a:	mov    eax,ds:0x410757
  408a1f:	inc    eax
  408a20:	mov    ds:0x410757,eax
  408a25:	jmp    0x4089cd
  408a2a:	mov    eax,ds:0x44b6dc
  408a2f:	and    DWORD PTR ds:0x42483b,eax
  408a35:	mov    eax,DWORD PTR [ebp-0x1c]
  408a38:	adc    edx,0x330f
  408a3e:	mov    edx,DWORD PTR [ebp-0x34]
  408a41:	sub    DWORD PTR ds:0x41074b,ebx
  408a47:	xor    eax,esi
  408a49:	mov    DWORD PTR ds:0x448980,0x18
  408a53:	cmp    DWORD PTR ds:0x448980,0x0
  408a5a:	je     0x408b05
  408a60:	cmp    DWORD PTR ds:0x448980,0x2
  408a67:	jne    0x408a82
  408a6d:	push   DWORD PTR [ebp-0x28]
  408a70:	push   DWORD PTR [ebp-0x20]
  408a73:	push   DWORD PTR [ebp-0x10]
  408a76:	push   DWORD PTR [ebp-0x1c]
  408a79:	push   DWORD PTR [ebp-0x28]
  408a7c:	call   DWORD PTR ds:0x4430fc
  408a82:	cmp    DWORD PTR ds:0x448980,0x3
  408a89:	jne    0x408a9e
  408a8f:	xor    ebx,ebx
  408a91:	xor    ebx,DWORD PTR ds:0x448980
  408a97:	dec    ebx
  408a98:	mov    DWORD PTR ds:0x448980,ebx
  408a9e:	xor    ebx,ebx
  408aa0:	add    ebx,DWORD PTR ds:0x448980
  408aa6:	dec    ebx
  408aa7:	mov    DWORD PTR ds:0x448980,ebx
  408aad:	jmp    0x408a53
  408ab2:	and    DWORD PTR ds:0x424837,0x0
  408abc:	jmp    0x408ace
  408ac1:	mov    ebx,DWORD PTR ds:0x424837
  408ac7:	inc    ebx
  408ac8:	mov    DWORD PTR ds:0x424837,ebx
  408ace:	cmp    DWORD PTR ds:0x424837,0x10
  408ad5:	jae    0x408b05
  408adb:	cmp    DWORD PTR ds:0x424837,0x19
  408ae2:	jne    0x408af3
  408ae8:	push   0x82d5
  408aed:	call   DWORD PTR ds:0x443100
  408af3:	jmp    0x408ac1
  408af8:	movzx  ebx,WORD PTR ds:0x410757
  408aff:	and    DWORD PTR ds:0x4489a8,ebx
  408b05:	add    eax,edi
  408b07:	adc    DWORD PTR ds:0x424843,0x6c9f
  408b11:	mov    DWORD PTR [edx],eax
  408b13:	mov    DWORD PTR [ebp-0x2c],ecx
  408b16:	lea    eax,[ebp-0x2c]
  408b19:	or     ebx,ebx
  408b1b:	mov    DWORD PTR [ebp-0x14],eax
  408b1e:	add    ebx,eax
  408b20:	mov    eax,DWORD PTR [ebp-0x2c]
  408b23:	sub    ebx,0x4e67
  408b29:	mov    ecx,DWORD PTR [ebp-0x14]
  408b2c:	xor    eax,esi
  408b2e:	adc    ebx,0x2698
  408b34:	add    eax,0x32729e
  408b39:	and    DWORD PTR ds:0x42484b,0x0
  408b43:	mov    ebx,DWORD PTR ds:0x42484b
  408b49:	inc    ebx
  408b4a:	mov    DWORD PTR ds:0x42484b,ebx
  408b50:	cmp    DWORD PTR ds:0x42484b,0xb
  408b57:	jne    0x408b68
  408b5d:	push   0x410870
  408b62:	call   DWORD PTR ds:0x443104
  408b68:	cmp    DWORD PTR ds:0x42484b,0xa
  408b6f:	jne    0x408b82
  408b75:	mov    ebx,DWORD PTR ds:0x42484b
  408b7b:	inc    ebx
  408b7c:	mov    DWORD PTR ds:0x42484b,ebx
  408b82:	cmp    DWORD PTR ds:0x42484b,0x19
  408b89:	jb     0x408b43
  408b8f:	adc    ebx,DWORD PTR ds:0x41074b
  408b95:	mov    DWORD PTR [ecx],eax
  408b97:	sub    DWORD PTR ds:0x44b6dc,0x6b19
  408ba1:	mov    eax,ds:0x445274
  408ba6:	sbb    ebx,0x4548
  408bac:	mov    DWORD PTR [ebp-0x24],0x8e12febe
  408bb3:	xor    DWORD PTR ds:0x448998,edx
  408bb9:	mov    eax,DWORD PTR [eax]
  408bbb:	xor    DWORD PTR ds:0x44b6d0,ebx
  408bc1:	mov    cx,WORD PTR [ebp-0x10]
  408bc5:	movzx  ecx,cx
  408bc8:	xor    ebx,DWORD PTR ds:0x410757
  408bce:	add    ecx,DWORD PTR [eax]
  408bd0:	mov    DWORD PTR [ebp-0x40],0xf89c8531
  408bd7:	mov    ebx,DWORD PTR ds:0x448994
  408bdd:	sub    DWORD PTR ds:0x44b6e0,ebx
  408be3:	mov    DWORD PTR [ebp-0x14],ecx
  408be6:	xor    ebx,ebx
  408be8:	mov    ebx,0x5a3fc9e
  408bed:	and    DWORD PTR ds:0x44898c,0x0
  408bf7:	mov    ecx,DWORD PTR ds:0x44898c
  408bfd:	inc    ecx
  408bfe:	mov    DWORD PTR ds:0x44898c,ecx
  408c04:	cmp    DWORD PTR ds:0x44898c,0x7
  408c0b:	jne    0x408c36
  408c11:	push   0x7083
  408c16:	push   0x1db3
  408c1b:	push   0x7eea
  408c20:	push   0x448984
  408c25:	push   DWORD PTR [ebp-0x14]
  408c28:	push   DWORD PTR [ebp-0x24]
  408c2b:	push   0x41089f
  408c30:	call   DWORD PTR ds:0x44339c
  408c36:	cmp    DWORD PTR ds:0x44898c,0x6
  408c3d:	jne    0x408c50
  408c43:	mov    ecx,DWORD PTR ds:0x44898c
  408c49:	inc    ecx
  408c4a:	mov    DWORD PTR ds:0x44898c,ecx
  408c50:	cmp    DWORD PTR ds:0x44898c,0x10
  408c57:	jb     0x408bf7
  408c5d:	mov    eax,DWORD PTR [ebp-0x1c]
  408c60:	mov    ecx,DWORD PTR [ebp-0x8]
  408c63:	xor    eax,esi
  408c65:	add    eax,edi
  408c67:	mov    DWORD PTR ds:0x410757,0x128d
  408c71:	cmp    DWORD PTR [ecx],eax
  408c73:	mov    DWORD PTR ds:0x424847,0x2c74
  408c7d:	jne    0x408de6
  408c83:	movzx  eax,BYTE PTR ds:0x410747
  408c8a:	adc    eax,DWORD PTR ds:0x410753
  408c90:	mov    ds:0x410747,eax
  408c95:	mov    eax,DWORD PTR [ebp-0x1c]
  408c98:	mov    ecx,DWORD PTR [ebp-0x14]
  408c9b:	or     DWORD PTR ds:0x44e424,0x44e420
  408ca5:	xor    eax,esi
  408ca7:	or     DWORD PTR ds:0x448988,0x44e428
  408cb1:	add    eax,edi
  408cb3:	mov    DWORD PTR ds:0x44899c,0x2417
  408cbd:	cmp    DWORD PTR [ecx],eax
  408cbf:	jne    0x408d21
  408cc5:	dec    edx
  408cc6:	mov    eax,DWORD PTR [ebp-0x1c]
  408cc9:	sbb    DWORD PTR ds:0x44e424,0x7bb6
  408cd3:	mov    ecx,DWORD PTR [ebp-0x34]
  408cd6:	adc    DWORD PTR ds:0x448990,ecx
  408cdc:	xor    eax,esi
  408cde:	xor    DWORD PTR ds:0x44e420,0x6611
  408ce8:	add    eax,edi
  408cea:	movzx  edx,WORD PTR ds:0x424833
  408cf1:	sbb    DWORD PTR ds:0x42483b,edx
  408cf7:	mov    DWORD PTR [ecx],eax
  408cf9:	dec    ecx
  408cfa:	mov    eax,DWORD PTR [ebp-0x34]
  408cfd:	mov    ecx,DWORD PTR [ebp-0x40]
  408d00:	sbb    edx,DWORD PTR ds:0x44e420
  408d06:	xor    ecx,esi
  408d08:	adc    edx,DWORD PTR ds:0x4489a8
  408d0e:	mov    edx,0xffcd8d62
  408d13:	sbb    DWORD PTR ds:0x448984,0x448980
  408d1d:	sub    edx,ecx
  408d1f:	add    DWORD PTR [eax],edx
  408d21:	mov    DWORD PTR ds:0x410747,0x19
  408d2b:	cmp    DWORD PTR ds:0x410747,0x0
  408d32:	je     0x408d8e
  408d38:	cmp    DWORD PTR ds:0x410747,0x5
  408d3f:	jne    0x408d63
  408d45:	push   DWORD PTR [ebp-0x1c]
  408d48:	push   0x2684
  408d4d:	push   DWORD PTR [ebp-0x18]
  408d50:	push   DWORD PTR [ebp-0x28]
  408d53:	push   0x71f6
  408d58:	push   0x2f24
  408d5d:	call   DWORD PTR ds:0x4433a0
  408d63:	cmp    DWORD PTR ds:0x410747,0x6
  408d6a:	jne    0x408d7b
  408d70:	mov    eax,ds:0x410747
  408d75:	dec    eax
  408d76:	mov    ds:0x410747,eax
  408d7b:	xor    eax,eax
  408d7d:	or     eax,DWORD PTR ds:0x410747
  408d83:	dec    eax
  408d84:	mov    ds:0x410747,eax
  408d89:	jmp    0x408d2b
  408d8e:	mov    eax,ds:0x445274
  408d93:	mov    eax,DWORD PTR [eax]
  408d95:	mov    cx,WORD PTR [ebp-0x10]
  408d99:	movzx  ecx,cx
  408d9c:	add    ecx,DWORD PTR [eax]
  408d9e:	mov    DWORD PTR [ebp-0x14],ecx
  408da1:	mov    eax,DWORD PTR [ebp-0x28]
  408da4:	mov    ecx,DWORD PTR [ebp-0x28]
  408da7:	xor    eax,esi
  408da9:	lea    eax,[eax+eax*1+0x32729e]
  408db0:	xor    ecx,esi
  408db2:	sub    ecx,eax
  408db4:	mov    ax,WORD PTR [ebp-0x10]
  408db8:	movzx  eax,ax
  408dbb:	cmp    eax,ecx
  408dbd:	mov    eax,DWORD PTR [ebp-0x40]
  408dc0:	movzx  ecx,WORD PTR [ebp-0x10]
  408dc4:	jg     0x408dd9
  408dca:	xor    eax,esi
  408dcc:	sub    ecx,eax
  408dce:	sub    ecx,edi
  408dd0:	mov    WORD PTR [ebp-0x10],cx
  408dd4:	jmp    0x408de6
  408dd9:	xor    eax,esi
  408ddb:	lea    eax,[eax+ecx*1+0x32729e]
  408de2:	mov    WORD PTR [ebp-0x10],ax
  408de6:	mov    ecx,DWORD PTR [ebp-0x24]
  408de9:	mov    eax,0x8e12febe
  408dee:	cmp    ecx,eax
  408df0:	je     0x408e04
  408df6:	mov    eax,DWORD PTR [ebp-0x8]
  408df9:	mov    DWORD PTR [eax],0x60341e8d
  408dff:	jmp    0x40902a
  408e04:	mov    ecx,DWORD PTR [ebp-0x24]
  408e07:	cmp    ecx,0x5142ddbc
  408e0d:	jne    0x408e85
  408e13:	mov    eax,DWORD PTR [ebp-0x8]
  408e16:	mov    DWORD PTR [eax],0x4214febc
  408e1c:	mov    eax,DWORD PTR [ebp-0x8]
  408e1f:	mov    DWORD PTR [ebp-0xc],eax
  408e22:	mov    eax,DWORD PTR [ebp-0x28]
  408e25:	mov    eax,DWORD PTR [ebp-0x1c]
  408e28:	mov    DWORD PTR [ebp-0x3c],ebx
  408e2b:	mov    eax,DWORD PTR [ebp-0x3c]
  408e2e:	mov    DWORD PTR [ebp-0x4],0x4eb5
  408e35:	cmp    eax,ebx
  408e37:	jne    0x40902a
  408e3d:	mov    ax,WORD PTR [ebp-0x4]
  408e41:	mov    ecx,0x8a42
  408e46:	xor    ax,cx
  408e49:	mov    ecx,0x3b08
  408e4e:	add    ax,cx
  408e51:	mov    ecx,DWORD PTR [ebp-0xc]
  408e54:	movzx  eax,ax
  408e57:	not    eax
  408e59:	and    eax,DWORD PTR [ecx]
  408e5b:	mov    ecx,DWORD PTR [ebp-0xc]
  408e5e:	mov    DWORD PTR [ecx],eax
  408e60:	jmp    0x408e6c
  408e65:	xor    DWORD PTR [ebp-0x3c],0xe149ebe
  408e6c:	mov    ax,WORD PTR [ebp-0x4]
  408e70:	push   DWORD PTR [ebp-0xc]
  408e73:	call   0x407112
  408e78:	test   eax,eax
  408e7a:	je     0x408e65
  408e80:	jmp    0x40902a
  408e85:	mov    ecx,DWORD PTR [ebp-0x24]
  408e88:	cmp    ecx,0x1443fcbd
  408e8e:	jne    0x408ea2
  408e94:	mov    eax,DWORD PTR [ebp-0x8]
  408e97:	mov    DWORD PTR [eax],0x60062d8f
  408e9d:	jmp    0x40902a
  408ea2:	mov    ecx,DWORD PTR [ebp-0x24]
  408ea5:	cmp    ecx,eax
  408ea7:	jne    0x408faf
  408ead:	mov    eax,DWORD PTR [ebp-0x1c]
  408eb0:	mov    ecx,DWORD PTR [ebp-0x8]
  408eb3:	xor    eax,esi
  408eb5:	add    eax,edi
  408eb7:	cmp    DWORD PTR [ecx],eax
  408eb9:	je     0x408f3c
  408ebf:	mov    ecx,DWORD PTR [ebp-0x2c]
  408ec2:	mov    eax,DWORD PTR [ebp-0x8]
  408ec5:	mov    eax,DWORD PTR [eax]
  408ec7:	mov    eax,DWORD PTR [eax+0x3c]
  408eca:	lea    ecx,[ecx*8+0x78]
  408ed1:	add    eax,ecx
  408ed3:	mov    ecx,DWORD PTR [ebp-0x8]
  408ed6:	mov    ecx,DWORD PTR [ecx]
  408ed8:	mov    eax,DWORD PTR [eax+ecx*1]
  408edb:	mov    DWORD PTR [ebp-0x4],eax
  408ede:	mov    eax,DWORD PTR [ebp-0x1c]
  408ee1:	xor    eax,esi
  408ee3:	add    eax,edi
  408ee5:	mov    DWORD PTR [ebp-0xc],eax
  408ee8:	mov    eax,DWORD PTR [ebp-0x1c]
  408eeb:	mov    ecx,DWORD PTR [ebp-0x4]
  408eee:	xor    eax,esi
  408ef0:	add    eax,edi
  408ef2:	cmp    ecx,eax
  408ef4:	je     0x40902a
  408efa:	mov    eax,DWORD PTR [ebp-0x8]
  408efd:	mov    ecx,DWORD PTR [ebp-0x4]
  408f00:	add    ecx,DWORD PTR [eax]
  408f02:	mov    DWORD PTR [ebp-0xc],ecx
  408f05:	mov    eax,DWORD PTR [ebp-0xc]
  408f08:	mov    ecx,DWORD PTR [ebp-0x8]
  408f0b:	mov    eax,DWORD PTR [eax+0xc]
  408f0e:	mov    ecx,DWORD PTR [ecx]
  408f10:	mov    al,BYTE PTR [eax+ecx*1]
  408f13:	add    al,0x35
  408f15:	xor    al,0x49
  408f17:	cmp    al,0xc9
  408f19:	je     0x408f30
  408f1f:	mov    eax,DWORD PTR [ebp-0x1c]
  408f22:	mov    ecx,DWORD PTR [ebp-0x8]
  408f25:	xor    eax,esi
  408f27:	add    eax,edi
  408f29:	mov    DWORD PTR [ecx],eax
  408f2b:	jmp    0x40902a
  408f30:	xor    DWORD PTR [ebp-0x24],0x5fd8f
  408f37:	jmp    0x40902a
  408f3c:	mov    eax,DWORD PTR [ebp-0x8]
  408f3f:	mov    ecx,DWORD PTR [ebp-0x14]
  408f42:	mov    ecx,DWORD PTR [ecx]
  408f44:	mov    DWORD PTR [eax],ecx
  408f46:	mov    eax,DWORD PTR [ebp-0x8]
  408f49:	mov    DWORD PTR [ebp-0xc],eax
  408f4c:	mov    eax,DWORD PTR [ebp-0x28]
  408f4f:	mov    eax,DWORD PTR [ebp-0x1c]
  408f52:	mov    DWORD PTR [ebp-0x44],ebx
  408f55:	mov    eax,DWORD PTR [ebp-0x44]
  408f58:	mov    DWORD PTR [ebp-0x4],0x4eb5
  408f5f:	cmp    eax,ebx
  408f61:	jne    0x40902a
  408f67:	mov    ax,WORD PTR [ebp-0x4]
  408f6b:	mov    ecx,0x8a42
  408f70:	xor    ax,cx
  408f73:	mov    ecx,0x3b08
  408f78:	add    ax,cx
  408f7b:	mov    ecx,DWORD PTR [ebp-0xc]
  408f7e:	movzx  eax,ax
  408f81:	not    eax
  408f83:	and    eax,DWORD PTR [ecx]
  408f85:	mov    ecx,DWORD PTR [ebp-0xc]
  408f88:	mov    DWORD PTR [ecx],eax
  408f8a:	jmp    0x408f96
  408f8f:	xor    DWORD PTR [ebp-0x44],0xe149ebe
  408f96:	mov    ax,WORD PTR [ebp-0x4]
  408f9a:	push   DWORD PTR [ebp-0xc]
  408f9d:	call   0x407112
  408fa2:	test   eax,eax
  408fa4:	je     0x408f8f
  408faa:	jmp    0x40902a
  408faf:	mov    eax,DWORD PTR [ebp-0x24]
  408fb2:	cmp    eax,0x33450cad
  408fb7:	jne    0x40902a
  408fbd:	mov    eax,DWORD PTR [ebp-0x8]
  408fc0:	mov    DWORD PTR [eax],0x443dc9d
  408fc6:	mov    eax,DWORD PTR [ebp-0x8]
  408fc9:	mov    DWORD PTR [ebp-0xc],eax
  408fcc:	mov    eax,DWORD PTR [ebp-0x28]
  408fcf:	mov    eax,DWORD PTR [ebp-0x1c]
  408fd2:	mov    DWORD PTR [ebp-0x38],ebx
  408fd5:	mov    eax,DWORD PTR [ebp-0x38]
  408fd8:	mov    DWORD PTR [ebp-0x4],0x4eb5
  408fdf:	cmp    eax,ebx
  408fe1:	jne    0x40902a
  408fe7:	mov    ax,WORD PTR [ebp-0x4]
  408feb:	mov    ecx,0x8a42
  408ff0:	xor    ax,cx
  408ff3:	mov    ecx,0x3b08
  408ff8:	add    ax,cx
  408ffb:	mov    ecx,DWORD PTR [ebp-0xc]
  408ffe:	movzx  eax,ax
  409001:	not    eax
  409003:	and    eax,DWORD PTR [ecx]
  409005:	mov    ecx,DWORD PTR [ebp-0xc]
  409008:	mov    DWORD PTR [ecx],eax
  40900a:	jmp    0x409016
  40900f:	xor    DWORD PTR [ebp-0x38],0xe149ebe
  409016:	mov    ax,WORD PTR [ebp-0x4]
  40901a:	push   DWORD PTR [ebp-0xc]
  40901d:	call   0x407112
  409022:	test   eax,eax
  409024:	je     0x40900f
  40902a:	mov    eax,DWORD PTR [ebp-0x24]
  40902d:	cmp    eax,0x8e12febe
  409032:	je     0x408bed
  409038:	mov    eax,DWORD PTR [ebp-0x8]
  40903b:	mov    eax,ds:0x4451a0
  409040:	mov    eax,DWORD PTR [eax+0x18c]
  409046:	mov    eax,DWORD PTR [eax]
  409048:	mov    DWORD PTR [ebp-0x58],eax
  40904b:	mov    eax,0xf89c8531
  409050:	mov    DWORD PTR [ebp-0x14],eax
  409053:	mov    DWORD PTR [ebp-0x14],eax
  409056:	mov    DWORD PTR [ebp-0x14],eax
  409059:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  409060:	mov    DWORD PTR [ebp-0x4],eax
  409063:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  40906a:	mov    ebx,DWORD PTR [ebp-0x20]
  40906d:	xor    ebx,esi
  40906f:	add    ebx,edi
  409071:	jmp    0x4090ac
  409076:	mov    eax,DWORD PTR [ebp-0x18]
  409079:	xor    eax,esi
  40907b:	lea    eax,[eax+ebx*1+0x32729e]
  409082:	push   eax
  409083:	mov    eax,DWORD PTR [ebp-0x14]
  409086:	xor    eax,esi
  409088:	lea    eax,[ebp+eax*1+0x3272a6]
  40908f:	push   eax
  409090:	mov    eax,ds:0x4451a0
  409095:	push   DWORD PTR [eax+0x1bc]
  40909b:	call   0x402c35
  4090a0:	mov    eax,DWORD PTR [ebp-0x18]
  4090a3:	xor    eax,esi
  4090a5:	lea    ebx,[ebx+eax*1+0x32729e]
  4090ac:	mov    eax,DWORD PTR [ebp-0x18]
  4090af:	mov    ecx,DWORD PTR [ebp-0x18]
  4090b2:	xor    ecx,esi
  4090b4:	xor    eax,esi
  4090b6:	add    eax,ecx
  4090b8:	mov    ecx,DWORD PTR [ebp-0x18]
  4090bb:	xor    ecx,esi
  4090bd:	lea    eax,[eax+ecx*1+0x9757da]
  4090c4:	cmp    ebx,eax
  4090c6:	jbe    0x409076
  4090cc:	mov    eax,DWORD PTR [ebp+0xc]
  4090cf:	mov    ds:0x445024,eax
  4090d4:	mov    eax,DWORD PTR [ebp+0x10]
  4090d7:	mov    ds:0x445278,eax
  4090dc:	mov    eax,ds:0x445024
  4090e1:	mov    ecx,DWORD PTR [ebp-0x30]
  4090e4:	sub    eax,edi
  4090e6:	xor    eax,esi
  4090e8:	mov    DWORD PTR [ecx],eax
  4090ea:	mov    eax,DWORD PTR [ebp-0x4c]
  4090ed:	cmp    eax,0xf89c8534
  4090f2:	je     0x40914f
  4090f8:	mov    eax,DWORD PTR [ebp-0x20]
  4090fb:	mov    ecx,DWORD PTR [ebp-0x54]
  4090fe:	xor    eax,esi
  409100:	add    eax,edi
  409102:	cmp    eax,ecx
  409104:	je     0x40914f
  40910a:	mov    eax,ds:0x4451a0
  40910f:	mov    eax,DWORD PTR [eax+0x194]
  409115:	mov    ecx,DWORD PTR [eax]
  409117:	mov    eax,DWORD PTR [ecx+0x3c]
  40911a:	push   DWORD PTR ds:0x445278
  409120:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  409124:	push   DWORD PTR ds:0x445024
  40912a:	add    eax,ecx
  40912c:	mov    ecx,DWORD PTR ds:0x4451a0
  409132:	mov    ecx,DWORD PTR [ecx+0x194]
  409138:	push   DWORD PTR [ecx]
  40913a:	call   eax
  40913c:	mov    ecx,DWORD PTR ds:0x4451a0
  409142:	mov    ecx,DWORD PTR [ecx+0x1cc]
  409148:	mov    DWORD PTR [ecx],eax
  40914a:	jmp    0x409276
  40914f:	mov    eax,DWORD PTR [ebp-0x20]
  409152:	mov    ecx,DWORD PTR [ebp-0x58]
  409155:	xor    eax,esi
  409157:	add    eax,edi
  409159:	cmp    eax,ecx
  40915b:	jne    0x409259
  409161:	mov    eax,DWORD PTR [ebp-0x20]
  409164:	xor    eax,esi
  409166:	add    eax,edi
  409168:	mov    ds:0x445224,eax
  40916d:	mov    eax,DWORD PTR [ebp-0x20]
  409170:	xor    eax,esi
  409172:	add    eax,edi
  409174:	mov    ds:0x44521c,eax
  409179:	mov    eax,DWORD PTR [ebp-0x18]
  40917c:	mov    DWORD PTR [ebp-0x14],eax
  40917f:	mov    eax,DWORD PTR [ebp-0x20]
  409182:	mov    DWORD PTR [ebp+0xc],eax
  409185:	mov    eax,DWORD PTR [ebp+0xc]
  409188:	xor    eax,esi
  40918a:	add    eax,edi
  40918c:	mov    DWORD PTR [ebp+0xc],eax
  40918f:	mov    eax,ds:0x445020
  409194:	mov    eax,DWORD PTR [eax]
  409196:	mov    DWORD PTR [ebp+0xc],eax
  409199:	mov    eax,ds:0x445228
  40919e:	mov    eax,DWORD PTR [eax]
  4091a0:	mov    DWORD PTR [ebp-0x30],eax
  4091a3:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  4091aa:	mov    eax,DWORD PTR [ebp+0x10]
  4091ad:	xor    eax,esi
  4091af:	add    eax,edi
  4091b1:	mov    DWORD PTR [ebp+0x10],eax
  4091b4:	mov    eax,ds:0x4451a0
  4091b9:	mov    DWORD PTR [ebp+0x10],eax
  4091bc:	mov    eax,DWORD PTR [ebp+0xc]
  4091bf:	mov    DWORD PTR [ebp+0xc],eax
  4091c2:	mov    eax,DWORD PTR [ebp+0xc]
  4091c5:	push   0x4
  4091c7:	pop    ecx
  4091c8:	sub    ecx,eax
  4091ca:	add    ecx,DWORD PTR [ebp-0x30]
  4091cd:	mov    DWORD PTR [ebp-0x4],0xf89c85f5
  4091d4:	mov    DWORD PTR [ebp+0x10],ecx
  4091d7:	mov    DWORD PTR [ebp-0xa0],0xf89c8531
  4091e1:	mov    eax,DWORD PTR [ebp+0xc]
  4091e4:	mov    DWORD PTR [ebp-0x9c],eax
  4091ea:	mov    eax,DWORD PTR [ebp+0x10]
  4091ed:	mov    DWORD PTR [ebp-0x98],eax
  4091f3:	mov    eax,DWORD PTR [ebp-0x4]
  4091f6:	xor    eax,esi
  4091f8:	add    eax,edi
  4091fa:	mov    DWORD PTR [ebp-0x94],eax
  409200:	lea    eax,[ebp-0x5c]
  409203:	mov    DWORD PTR [ebp-0x90],eax
  409209:	mov    eax,DWORD PTR [ebp-0xa0]
  40920f:	xor    eax,esi
  409211:	add    eax,edi
  409213:	mov    DWORD PTR [ebp-0xa0],eax
  409219:	lea    eax,[ebp-0xa0]
  40921f:	push   eax
  409220:	mov    eax,DWORD PTR [ebp-0x14]
  409223:	xor    eax,esi
  409225:	add    eax,edi
  409227:	push   eax
  409228:	mov    eax,ds:0x4451c0
  40922d:	push   0x445116
  409232:	push   DWORD PTR [eax]
  409234:	call   0x40101c
  409239:	xor    esi,esi
  40923b:	mov    eax,DWORD PTR [ebp+0x10]
  40923e:	sub    eax,esi
  409240:	push   eax
  409241:	mov    eax,DWORD PTR [ebp+0xc]
  409244:	add    eax,esi
  409246:	push   eax
  409247:	call   0x40354e
  40924c:	inc    esi
  40924d:	cmp    esi,0x52
  409250:	jb     0x40923b
  409256:	mov    eax,DWORD PTR [ebp-0x14]
  409259:	call   0x405b6e
  40925e:	lea    eax,[ebp+0x4]
  409261:	mov    DWORD PTR [ebp-0x50],eax
  409264:	mov    eax,DWORD PTR [ebp-0x48]
  409267:	mov    eax,DWORD PTR [ebp-0x18]
  40926a:	push   DWORD PTR [ebp-0x20]
  40926d:	lea    eax,[ebp-0x50]
  409270:	push   eax
  409271:	call   0x40324f
  409276:	mov    eax,ds:0x4451a0
  40927b:	push   0x4
  40927d:	add    eax,0x1cc
  409282:	push   eax
  409283:	lea    eax,[ebp-0x48]
  409286:	push   eax
  409287:	call   0x402c35
  40928c:	mov    eax,DWORD PTR [ebp-0x48]
  40928f:	mov    eax,DWORD PTR [eax]
  409291:	pop    edi
  409292:	pop    ebx
  409293:	pop    esi
  409294:	leave  
  409295:	ret    0xc
  409298:	push   ebp
  409299:	mov    ebp,esp
  40929b:	sub    esp,0x58
  40929e:	add    eax,ecx
  4092a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4092a3:	sub    eax,DWORD PTR ds:0x448988
  4092a9:	mov    eax,0x8a42
  4092ae:	add    DWORD PTR ds:0x410753,0x42483b
  4092b8:	xor    ax,WORD PTR [ecx+0x20]
  4092bc:	and    DWORD PTR ds:0x448990,0x0
  4092c6:	mov    ecx,DWORD PTR ds:0x448990
  4092cc:	inc    ecx
  4092cd:	mov    DWORD PTR ds:0x448990,ecx
  4092d3:	cmp    DWORD PTR ds:0x448990,0x9
  4092da:	jne    0x4092f3
  4092e0:	push   DWORD PTR [ebp-0x28]
  4092e3:	push   0x44899c
  4092e8:	push   0x55d9
  4092ed:	call   DWORD PTR ds:0x4433a4
  4092f3:	cmp    DWORD PTR ds:0x448990,0x8
  4092fa:	jne    0x40930d
  409300:	mov    ecx,DWORD PTR ds:0x448990
  409306:	inc    ecx
  409307:	mov    DWORD PTR ds:0x448990,ecx
  40930d:	cmp    DWORD PTR ds:0x448990,0x14
  409314:	jb     0x4092c6
  40931a:	mov    ecx,0x3b08
  40931f:	add    ax,cx
  409322:	movzx  eax,ax
  409325:	sub    ecx,0x7afe
  40932b:	mov    DWORD PTR [ebp-0xc],eax
  40932e:	mov    BYTE PTR [ebp-0x1],0x7f
  409332:	lea    eax,[ebp-0x1]
  409335:	mov    DWORD PTR [ebp-0x10],eax
  409338:	and    ecx,0x503
  40933e:	jmp    0x409494
  409343:	mov    ?,ebx
  409345:	icebp  
  409346:	test   al,0x85
  409348:	stos   BYTE PTR es:[edi],al
  409349:	mov    ebp,0xef32abd
  40934e:	cmp    eax,0xa9d2d576
  409353:	(bad)  
  409357:	daa    
  409358:	jg     0x4093d6
  40935a:	jl     0x4093c2
  40935c:	leave  
  40935d:	sub    BYTE PTR [esi],dh
  40935f:	(bad)  
  409361:	hlt    
  409362:	sub    al,0xff
  409364:	xchg   DWORD PTR [ecx],ebp
  409366:	out    0x7e,al
  409368:	xchg   esp,eax
  409369:	cld    
  40936a:	repz pop edi
  40936c:	cmp    cl,ch
  40936e:	push   esi
  40936f:	ret    
  409370:	stos   BYTE PTR es:[edi],al
  409371:	mov    bh,0x38
  409373:	fs dec esi
  409375:	mov    esp,0xde492401
  40937a:	imul   esp,DWORD PTR [eax],0x3f0811eb
  409380:	test   eax,0x271e8ec8
  409385:	je     0x409317
  409387:	mov    ebx,0xa2f2048f
  40938c:	mov    bh,0xa9
  40938e:	sbb    BYTE PTR [edx],ch
  409390:	sbb    esp,DWORD PTR [esi+0x69]
  409393:	jmp    0x40932d
  409395:	xor    al,0x3d
  409397:	shl    BYTE PTR [edx+0x6328abc7],0xa6
  40939e:	and    eax,0x995e2d4e
  4093a3:	sub    al,al
  4093a5:	fsub   st,st(0)
  4093a7:	(bad)
  4093aa:	or     bh,bl
  4093ac:	push   0x4c
  4093ae:	div    BYTE PTR [ebx]
  4093b0:	or     DWORD PTR [ebx],ebp
  4093b2:	pop    ds
  4093b3:	adc    DWORD PTR [ebx],0x57
  4093b6:	pushf  
  4093b7:	mov    al,ds:0x2474d179
  4093bc:	dec    eax
  4093bd:	jecxz  0x40937b
  4093bf:	mov    ecx,0x9b3d18b8
  4093c4:	pop    edx
  4093c5:	and    al,0xa2
  4093c7:	scas   al,BYTE PTR es:[edi]
  4093c8:	out    dx,al
  4093c9:	fwait
  4093ca:	lods   eax,DWORD PTR ds:[esi]
  4093cb:	mov    cl,0x25
  4093cd:	xor    cl,BYTE PTR [eax-0x22]
  4093d0:	ret    0xe348
  4093d3:	pop    ecx
  4093d4:	push   esi
  4093d5:	mov    WORD PTR [esp+edi*8-0x1fdf20bd],ss
  4093dc:	mov    al,ch
  4093de:	mov    ch,0xbc
  4093e0:	jl     0x4093d3
  4093e2:	inc    ebp
  4093e3:	leave  
  4093e4:	xor    BYTE PTR [edi-0x60],cl
  4093e7:	adc    eax,0x65dbac33
  4093ec:	popa   
  4093ed:	sti    
  4093ee:	xchg   ecx,eax
  4093ef:	push   edx
  4093f0:	xchg   BYTE PTR [edi+0x438f2618],al
  4093f6:	in     eax,dx
  4093f7:	mov    esp,0x2421931d
  4093fc:	sbb    al,0xab
  4093fe:	push   edx
  4093ff:	mov    ds:0xd0b05947,al
  409404:	mov    eax,0xfd00c714
  409409:	pop    ecx
  40940a:	out    dx,al
  40940b:	push   0xb10ccb20
  409410:	jle    0x4093c3
  409412:	adc    al,0xd3
  409414:	pop    edx
  409415:	fistp  DWORD PTR [ebx]
  409417:	push   es
  409418:	mov    ah,0x5d
  40941a:	cmp    DWORD PTR [esi-0x6b5f6430],eax
  409420:	or     eax,0xb9912cf7
  409425:	mov    DWORD PTR [ebp-0x5],esp
  409428:	mov    al,ds:0x7e1fe6d4
  40942d:	clc    
  40942e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40942f:	loop   0x409449
  409431:	or     ah,BYTE PTR [esi-0x6450357a]
  409437:	inc    edx
  409438:	sbb    ecx,ebp
  40943a:	jmp    0xe7dfe02d
  40943f:	mov    eax,0x6c9e4950
  409444:	inc    esi
  409445:	mov    WORD PTR [edi],ss
  409447:	(bad)  
  409448:	loope  0x4093e9
  40944a:	das    
  40944b:	and    BYTE PTR [ebx+0x63b9393d],ah
  409451:	xchg   edi,eax
  409452:	aaa    
  409453:	pop    es
  409454:	cdq    
  409455:	js     0x4094ba
  409457:	adc    DWORD PTR [ecx-0x45],ebx
  40945a:	push   esp
  40945b:	clc    
  40945c:	push   ebx
  40945d:	and    ch,bl
  40945f:	dec    esp
  409460:	clc    
  409461:	cmc    
  409462:	jmp    0x8951:0x693a7130
  409469:	dec    eax
  40946a:	stc    
  40946b:	mov    DWORD PTR [ebp+0x27],esp
  40946e:	test   al,0x82
  409470:	out    0xc6,eax
  409472:	retf   0xae7d
  409475:	cmp    esi,DWORD PTR [eax-0x5d782878]
  40947b:	mov    al,ds:0x6bcb15f4
  409480:	stos   DWORD PTR es:[edi],eax
  409481:	or     BYTE PTR [ecx+0x7a],dl
  409484:	dec    ecx
  409485:	cmp    ebx,DWORD PTR [ecx]
  409487:	add    DWORD PTR [esi],0xc
  40948a:	and    BYTE PTR [edx],al
  40948c:	pop    ss
  40948d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40948e:	cmp    eax,0xb5ba337f
  409494:	mov    al,BYTE PTR [ebp-0x1]
  409497:	xor    DWORD PTR ds:0x424847,0x9c1
  4094a1:	mov    ecx,DWORD PTR [ebp-0x10]
  4094a4:	and    DWORD PTR ds:0x44b6e4,0x7bc2
  4094ae:	xor    al,0x49
  4094b0:	sub    al,0x35
  4094b2:	mov    DWORD PTR ds:0x41074f,0x4e04
  4094bc:	mov    BYTE PTR [ecx],al
  4094be:	sbb    DWORD PTR ds:0x448990,0x3d76
  4094c8:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  4094cf:	mov    DWORD PTR [ebp-0x10],0xf89c8534
  4094d6:	or     ecx,0x8aa
  4094dc:	mov    eax,DWORD PTR [ebp-0x8]
  4094df:	and    DWORD PTR ds:0x44e410,0x0
  4094e9:	mov    ecx,DWORD PTR ds:0x44e410
  4094ef:	inc    ecx
  4094f0:	mov    DWORD PTR ds:0x44e410,ecx
  4094f6:	cmp    DWORD PTR ds:0x44e410,0x1e
  4094fd:	jne    0x40951b
  409503:	push   DWORD PTR [ebp-0x10]
  409506:	push   0x410939
  40950b:	push   0x41098d
  409510:	push   0x410939
  409515:	call   DWORD PTR ds:0x443040
  40951b:	cmp    DWORD PTR ds:0x44e410,0x11
  409522:	jb     0x4094e9
  409528:	xor    DWORD PTR ds:0x424833,ebx
  40952e:	mov    ecx,0x7510857
  409533:	push   esi
  409534:	and    DWORD PTR ds:0x44b6d4,0x0
  40953e:	jmp    0x409550
  409543:	mov    esi,DWORD PTR ds:0x44b6d4
  409549:	inc    esi
  40954a:	mov    DWORD PTR ds:0x44b6d4,esi
  409550:	cmp    DWORD PTR ds:0x44b6d4,0x17
  409557:	jae    0x409585
  40955d:	cmp    DWORD PTR ds:0x44b6d4,0x1e
  409564:	jne    0x409580
  40956a:	push   0x4107a9
  40956f:	push   DWORD PTR [ebp-0x20]
  409572:	push   DWORD PTR [ebp-0x20]
  409575:	push   0x7787
  40957a:	call   DWORD PTR ds:0x4433a8
  409580:	jmp    0x409543
  409585:	xor    eax,ecx
  409587:	mov    esi,0x32729e
  40958c:	add    eax,esi
  40958e:	jmp    0x4095af
  409593:	mov    DWORD PTR ds:0x44b6e0,0x1147
  40959d:	mov    dl,BYTE PTR [ebp-0x1]
  4095a0:	mov    DWORD PTR ds:0x4489a4,0x2700
  4095aa:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  4095ae:	inc    eax
  4095af:	mov    DWORD PTR ds:0x44b6dc,0x2e0e
  4095b9:	cmp    eax,0x40
  4095bc:	jb     0x409593
  4095c2:	mov    edx,DWORD PTR [ebp-0x8]
  4095c5:	xor    DWORD PTR ds:0x41073f,0x7536
  4095cf:	mov    eax,DWORD PTR [ebp-0xc]
  4095d2:	add    DWORD PTR ds:0x4489a0,0x44e41c
  4095dc:	jmp    0x409732
  4095e1:	cmp    eax,ebx
  4095e3:	bound  edx,QWORD PTR [edx+0x65]
  4095e6:	push   0x39
  4095e8:	pop    ebx
  4095e9:	jmp    0x4095e6
  4095eb:	adc    al,0xc5
  4095ed:	and    esi,esi
  4095ef:	mov    gs,ebx
  4095f1:	mov    dh,0xcd
  4095f3:	jl     0x409671
  4095f5:	daa    
  4095f6:	jg     0x409674
  4095f8:	jl     0x409615
  4095fa:	mov    eax,0x22dc4c5d
  4095ff:	cmp    bh,BYTE PTR [ebx]
  409601:	mov    dh,0x1d
  409603:	or     ch,bh
  409605:	add    DWORD PTR [eax],ebp
  409607:	cld    
  409608:	xchg   edx,eax
  409609:	arpl   WORD PTR [ebx-0x68cc113f],bp
  40960f:	lods   al,BYTE PTR ds:[esi]
  409610:	in     eax,0x9a
  409612:	(bad)  
  409613:	pop    ds
  409614:	push   ebx
  409615:	jnp    0x4095bc
  409617:	mov    edi,DWORD PTR [edx]
  409619:	ss mov esp,0x653d6b40
  40961f:	in     eax,0x5d
  409621:	adc    al,0xde
  409623:	and    BYTE PTR [edx-0x1f],dl
  409626:	add    al,0x71
  409628:	cmp    eax,0xc1e34d39
  40962d:	fiadd  DWORD PTR ds:0x7c0fc679
  409633:	sub    DWORD PTR [edi-0x63],edi
  409636:	xchg   edi,eax
  409637:	cmp    eax,0xa47ce4c3
  40963c:	out    0x65,eax
  40963e:	jge    0x409656
  409640:	loop   0x4095dd
  409642:	mov    edx,0x55db6ca6
  409647:	push   edi
  409648:	imul   edi,DWORD PTR [ebp+ecx*4-0x6e206e47],0xffffff90
  409650:	lea    ecx,[eax]
  409652:	arpl   si,bx
  409654:	call   0xf268896
  409659:	inc    ecx
  40965a:	cmp    al,0xda
  40965c:	adc    eax,0x8ac9c507
  409661:	out    0x63,al
  409663:	pop    eax
  409664:	icebp  
  409665:	jo     0x40960c
  409667:	rcr    DWORD PTR [edi+0x7e5089af],1
  40966d:	sub    DWORD PTR [ebp-0x37],edx
  409670:	nop
  409671:	jl     0x409610
  409673:	sub    DWORD PTR [ebx],edx
  409675:	add    DWORD PTR [ebp-0x59],esp
  409678:	div    bl
  40967a:	pop    eax
  40967b:	inc    eax
  40967c:	pusha  
  40967d:	xchg   esi,eax
  40967e:	adc    ecx,DWORD PTR [eax]
  409680:	out    dx,al
  409681:	js     0x4096f2
  409683:	shr    ah,1
  409685:	stos   BYTE PTR es:[edi],al
  409686:	sti    
  409687:	sbb    ebx,ebx
  409689:	nop
  40968a:	nop
  40968b:	cld    
  40968c:	mov    eax,0x739c6b47
  409691:	jecxz  0x4096cf
  409693:	adc    ecx,eax
  409695:	(bad)  
  409696:	mov    dl,0x7e
  409698:	test   DWORD PTR [esi],edi
  40969a:	rcr    dh,1
  40969c:	ret    
  40969d:	and    ebp,DWORD PTR [esi+0x0]
  4096a0:	mov    ebp,0x2ff0d98c
  4096a5:	vpmacssdd ymm6,ymm4,YMMWORD PTR [eax-0x798a3ed7],ymm2
  4096af:	mov    eax,0xc7d6576f
  4096b4:	arpl   WORD PTR ds:0x94011b60,bx
  4096ba:	ret    0x4171
  4096bd:	xchg   ecx,eax
  4096be:	sbb    DWORD PTR [esi+0x62],eax
  4096c1:	jle    0x4096ad
  4096c3:	sbb    eax,0x6d8b773e
  4096c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096c9:	retf   0x1510
  4096cc:	not    BYTE PTR [ebx+0xf7de43a]
  4096d2:	inc    esi
  4096d3:	xchg   ebp,eax
  4096d4:	jno    0x4096e2
  4096d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096d7:	loop   0x4096dd
  4096d9:	stos   BYTE PTR es:[edi],al
  4096da:	adc    DWORD PTR [esi],esi
  4096dc:	aaa    
  4096dd:	mov    ds:0xbdd067c,eax
  4096e2:	imul   esp,DWORD PTR [ebx+0x27de3250],0x5a3ce797
  4096ec:	fcomp  QWORD PTR [edx-0x33]
  4096ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096f0:	sub    eax,0xda94957
  4096f5:	(bad)  
  4096f6:	daa    
  4096f7:	retf   
  4096f8:	dec    ebp
  4096f9:	xchg   ebp,eax
  4096fa:	push   ebx
  4096fb:	inc    ebp
  4096fc:	sub    al,0xe0
  4096fe:	or     al,0xf5
  409700:	inc    eax
  409701:	arpl   WORD PTR [eax-0x763a2170],dx
  409707:	fcomip st,st(1)
  409709:	mov    fs,WORD PTR [esi+edx*4-0x24ba8132]
  409710:	bound  esp,QWORD PTR [ebx]
  409712:	aad    0x97
  409714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409715:	push   ecx
  409716:	jl     0x409782
  409718:	or     edx,DWORD PTR [edi+ecx*8-0x72]
  40971c:	or     bl,BYTE PTR [ebx-0x1a2e9fcc]
  409722:	xor    DWORD PTR [ecx+0x6],edx
  409725:	sub    DWORD PTR [edi],0x740d083e
  40972b:	gs fwait
  40972d:	jns    0x409708
  40972f:	inc    esi
  409730:	jne    0x40979c
  409732:	xor    edx,ecx
  409734:	add    edx,esi
  409736:	mov    DWORD PTR ds:0x44899c,0x4464
  409740:	cmp    edx,eax
  409742:	mov    DWORD PTR ds:0x424843,0xc14
  40974c:	je     0x40993f
  409752:	add    DWORD PTR ds:0x448998,0x1465
  40975c:	push   ebx
  40975d:	and    DWORD PTR ds:0x44b6d8,0x0
  409767:	mov    eax,ds:0x44b6d8
  40976c:	inc    eax
  40976d:	mov    ds:0x44b6d8,eax
  409772:	cmp    DWORD PTR ds:0x44b6d8,0x10
  409779:	jne    0x409785
  40977f:	call   DWORD PTR ds:0x4433ac
  409785:	cmp    DWORD PTR ds:0x44b6d8,0xf
  40978c:	jne    0x40979d
  409792:	mov    eax,ds:0x44b6d8
  409797:	inc    eax
  409798:	mov    ds:0x44b6d8,eax
  40979d:	cmp    DWORD PTR ds:0x44b6d8,0x1d
  4097a4:	jb     0x409767
  4097aa:	push   edi
  4097ab:	jmp    0x409901
  4097b0:	push   esp
  4097b1:	ss push edx
  4097b3:	std    
  4097b4:	push   edx
  4097b5:	jge    0x40981e
  4097b7:	pop    ebp
  4097b8:	add    al,0xa1
  4097ba:	or     eax,0x518b5a0d
  4097bf:	shl    BYTE PTR [ecx-0x31],0x7c
  4097c3:	jl     0x4097ec
  4097c5:	jg     0x409843
  4097c7:	jl     0x40980a
  4097c9:	push   esp
  4097ca:	push   gs
  4097cc:	add    al,0xa0
  4097ce:	jns    0x409847
  4097d0:	mov    es,WORD PTR [ecx-0x7e]
  4097d3:	in     al,dx
  4097d4:	leave  
  4097d5:	xchg   edi,eax
  4097d6:	inc    esp
  4097d7:	jmp    0xa6e9:0x4b21f6c4
  4097de:	rol    BYTE PTR [edx],1
  4097e0:	and    BYTE PTR [edx+0x31],cl
  4097e3:	mov    ss,WORD PTR [esi+0x39]
  4097e6:	push   cs
  4097e7:	dec    ebp
  4097e8:	repnz xchg ecx,eax
  4097ea:	and    edx,DWORD PTR [ebp-0xaf22829]
  4097f0:	sahf   
  4097f1:	and    al,0xa4
  4097f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097f4:	xor    eax,0x358fbc12
  4097f9:	xchg   ecx,eax
  4097fa:	out    dx,eax
  4097fb:	ins    DWORD PTR es:[edi],dx
  4097fc:	aad    0x90
  4097fe:	inc    edi
  4097ff:	and    DWORD PTR [esi+0x421cd616],edx
  409805:	cmp    DWORD PTR [esi],esp
  409807:	(bad)  
  409808:	cmp    eax,0xf67ef15c
  40980d:	mov    bh,0x68
  40980f:	push   edx
  409810:	stc    
  409811:	xor    ah,BYTE PTR [ebx+0x3717014b]
  409817:	xor    BYTE PTR [ecx-0x3400508d],ah
  40981d:	loop   0x4097f6
  40981f:	idiv   DWORD PTR [eax+0x2ba57c75]
  409825:	out    dx,al
  409826:	push   ss
  409827:	shr    eax,1
  409829:	fs xchg esi,eax
  40982b:	pop    es
  40982c:	(bad)  
  40982d:	in     eax,dx
  40982e:	xor    esp,DWORD PTR [esi+0x5d2f0d2a]
  409834:	or     al,0x82
  409836:	lds    edi,FWORD PTR [edx-0x6f]
  409839:	dec    esp
  40983a:	hlt    
  40983b:	in     eax,dx
  40983c:	sub    al,0x9c
  40983e:	push   edx
  40983f:	jne    0x4098af
  409841:	ins    DWORD PTR es:[edi],dx
  409842:	xchg   edx,eax
  409843:	lods   al,BYTE PTR ds:[esi]
  409844:	cs ins BYTE PTR es:[edi],dx
  409846:	int    0x6
  409848:	and    BYTE PTR [edx+ebx*4-0x32b2dabd],ah
  40984f:	mov    eax,0xa101b753
  409854:	mov    edx,0x8e96d9a4
  409859:	outs   dx,BYTE PTR ds:[esi]
  40985a:	in     al,0x9e
  40985c:	pop    edx
  40985d:	pop    ss
  40985e:	pop    ebp
  40985f:	pushf  
  409860:	adc    cl,BYTE PTR [eax-0x3c3231e2]
  409866:	xor    eax,0xf91858a2
  40986b:	dec    ebp
  40986c:	mov    edx,0x18741d3f
  409871:	dec    edx
  409872:	inc    esi
  409873:	mov    al,ds:0xc76a3529
  409878:	pop    ebp
  409879:	xchg   esp,eax
  40987a:	jecxz  0x4098a4
  40987c:	push   esi
  40987d:	inc    ebx
  40987e:	cmp    al,0xe7
  409880:	sbb    cl,BYTE PTR [edi]
  409882:	jge    0x40988d
  409884:	popa   
  409885:	fwait
  409886:	mov    ch,0xa0
  409888:	jns    0x40986b
  40988a:	or     dh,BYTE PTR [edi]
  40988c:	(bad)  
  40988d:	mov    dh,0xe3
  40988f:	jnp    0x40989c
  409891:	mov    WORD PTR [esi-0x1602544],gs
  409897:	stc    
  409898:	add    al,ch
  40989a:	loope  0x409821
  40989c:	cmp    BYTE PTR [ebp-0x19d01a3e],bl
  4098a2:	pop    edi
  4098a3:	mov    edx,0x6f3bae58
  4098a8:	test   al,0x8e
  4098aa:	jb     0x409870
  4098ac:	fcom   QWORD PTR [esi+0x56fcb8f4]
  4098b2:	ret    
  4098b3:	inc    edx
  4098b4:	mov    ah,0xd7
  4098b6:	sbb    cl,BYTE PTR [ebp+0x9]
  4098b9:	aas    
  4098ba:	stos   DWORD PTR es:[edi],eax
  4098bb:	adc    al,0xcc
  4098bd:	add    esi,DWORD PTR [ebx+0x713175a3]
  4098c3:	(bad)  
  4098c4:	ss das 
  4098c6:	test   eax,0xbe2e4f92
  4098cb:	fiadd  DWORD PTR [ebp+0x4b]
  4098ce:	inc    DWORD PTR [edx]
  4098d0:	push   cs
  4098d1:	scas   al,BYTE PTR es:[edi]
  4098d2:	cmc    
  4098d3:	cs dec edx
  4098d5:	mov    ds:0xefd23b93,eax
  4098da:	addps  xmm0,xmm0
  4098dd:	jmp    0x58c20942
  4098e2:	add    ebx,edi
  4098e4:	stos   BYTE PTR es:[edi],al
  4098e5:	mov    ebp,DWORD PTR [edx+ebp*1+0x24a5294e]
  4098ec:	daa    
  4098ed:	pop    es
  4098ee:	in     al,0x73
  4098f0:	(bad)  
  4098f2:	les    edx,FWORD PTR [edi-0x25]
  4098f5:	push   esp
  4098f6:	in     eax,0x13
  4098f8:	ins    BYTE PTR es:[edi],dx
  4098f9:	xor    ebx,DWORD PTR [eax]
  4098fb:	(bad)  
  4098fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098fd:	sbb    bh,BYTE PTR [edi]
  4098ff:	jge    0x4098de
  409901:	mov    edi,DWORD PTR [ebp+0x8]
  409904:	mov    eax,0x8a42
  409909:	xor    ax,WORD PTR [edi+edx*4+0x2]
  40990e:	mov    edi,0x3b08
  409913:	add    ax,di
  409916:	movzx  eax,ax
  409919:	mov    DWORD PTR [ebp-0x14],eax
  40991c:	mov    eax,DWORD PTR [ebp+0x8]
  40991f:	movzx  eax,WORD PTR [eax+edx*4]
  409923:	xor    eax,0x8a42
  409928:	add    eax,edi
  40992a:	mov    edi,DWORD PTR [ebp-0x14]
  40992d:	mov    BYTE PTR [ebp+edi*1-0x58],al
  409931:	mov    eax,DWORD PTR [ebp-0xc]
  409934:	inc    edx
  409935:	cmp    edx,eax
  409937:	jne    0x409901
  40993d:	pop    edi
  40993e:	pop    ebx
  40993f:	mov    eax,DWORD PTR [ebp-0x8]
  409942:	mov    edx,DWORD PTR [ebp+0x10]
  409945:	xor    eax,ecx
  409947:	add    eax,esi
  409949:	mov    DWORD PTR [edx],eax
  40994b:	mov    eax,DWORD PTR [ebp-0x8]
  40994e:	xor    eax,ecx
  409950:	add    eax,esi
  409952:	mov    DWORD PTR [ebp+0x8],eax
  409955:	mov    eax,DWORD PTR [ebp+0x8]
  409958:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  40995c:	mov    dl,BYTE PTR [ebp-0x1]
  40995f:	cmp    al,dl
  409961:	je     0x409afa
  409967:	mov    eax,DWORD PTR [ebp+0x8]
  40996a:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  40996e:	mov    edx,DWORD PTR [ebp+0xc]
  409971:	cmp    al,BYTE PTR [edx]
  409973:	jne    0x409b20
  409979:	mov    eax,DWORD PTR [ebp-0x8]
  40997c:	mov    edx,DWORD PTR [ebp+0xc]
  40997f:	movsx  edx,BYTE PTR [edx]
  409982:	xor    eax,ecx
  409984:	add    eax,esi
  409986:	cmp    edx,eax
  409988:	je     0x409b14
  40998e:	jmp    0x409ae4
  409993:	add    ah,ah
  409995:	clc    
  409996:	pop    es
  409997:	clc    
  409998:	sbb    esp,ebx
  40999a:	sti    
  40999b:	ins    DWORD PTR es:[edi],dx
  40999c:	sbb    BYTE PTR [esp+ebp*8],ch
  40999f:	dec    edx
  4099a0:	shl    BYTE PTR [ecx+0x7cce38fd],1
  4099a6:	jl     0x4099cf
  4099a8:	jg     0x409a26
  4099aa:	jl     0x40995b
  4099ac:	cmp    cl,bh
  4099ae:	fdiv   QWORD PTR [ebp+0x3]
  4099b1:	xchg   DWORD PTR [ecx+0x278903ab],esi
  4099b7:	std    
  4099b8:	inc    ebp
  4099b9:	xchg   ebp,eax
  4099ba:	add    BYTE PTR [edi+0x6ad8fd5c],bh
  4099c0:	mov    al,0x2e
  4099c2:	fisub  DWORD PTR [esi-0x66506f18]
  4099c8:	pop    ecx
  4099c9:	and    eax,DWORD PTR [edi-0x15]
  4099cc:	inc    edi
  4099cd:	mov    BYTE PTR [esi-0x62],ah
  4099d0:	sub    BYTE PTR [ecx*8-0x7e428319],ch
  4099d7:	push   0x5e
  4099d9:	mov    al,0xa1
  4099db:	int    0x92
  4099dd:	jnp    0x409a41
  4099df:	sbb    BYTE PTR ds:0x7ae5efe0,0x69
  4099e6:	inc    edx
  4099e7:	mov    DWORD PTR [ecx],0x36be35c3
  4099ed:	int3   
  4099ee:	sbb    al,0x20
  4099f0:	(bad)  
  4099f1:	leave  
  4099f2:	aad    0xa
  4099f4:	jge    0x409a6f
  4099f6:	adc    eax,0x67e45ff4
  4099fb:	loopne 0x409a5b
  4099fd:	jae    0x4099f1
  4099ff:	sbb    dl,BYTE PTR [edx]
  409a01:	push   es
  409a02:	arpl   WORD PTR [ecx+0x2],si
  409a05:	shrd   edx,esi,cl
  409a08:	jle    0x4099a8
  409a0a:	push   ebx
  409a0b:	inc    ebx
  409a0c:	cmp    BYTE PTR gs:[ecx-0x45],ch
  409a10:	lods   eax,DWORD PTR ds:[esi]
  409a11:	lods   eax,DWORD PTR ds:[esi]
  409a12:	cmp    eax,0x54811937
  409a17:	cld    
  409a18:	call   edx
  409a1a:	jmp    0x79a8f1e8
  409a1f:	add    dh,dl
  409a21:	sbb    al,0xbf
  409a23:	jge    0x4099a8
  409a25:	add    dl,dl
  409a27:	xor    al,0x48
  409a29:	out    0x59,eax
  409a2b:	jle    0x409a3a
  409a2d:	icebp  
  409a2e:	call   0x9c05:0x96c6c088
  409a35:	mov    al,ds:0xe67b8850
  409a3a:	fldenv [ebx-0x52fbac7]
  409a40:	das    
  409a41:	sti    
  409a42:	cwde   
  409a43:	fidiv  WORD PTR [eax-0x2d]
  409a46:	adc    BYTE PTR [esi+eiz*8+0x145cc1a6],ch
  409a4d:	inc    ecx
  409a4e:	sahf   
  409a4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a50:	ret    
  409a51:	mov    eax,0xd10802c0
  409a56:	loopne 0x4099f3
  409a58:	pop    edi
  409a59:	daa    
  409a5a:	adc    ch,ch
  409a5c:	repnz push ecx
  409a5e:	js     0x409aab
  409a60:	xchg   esp,eax
  409a61:	xchg   edx,eax
  409a62:	leave  
  409a63:	mov    ecx,0xd589bbb5
  409a68:	inc    ebx
  409a69:	mov    al,0x7b
  409a6b:	push   cx
  409a6d:	fild   DWORD PTR [ebx-0x305dd8be]
  409a73:	dec    ecx
  409a74:	sbb    ebx,DWORD PTR [edx]
  409a76:	fdivr  QWORD PTR [edx-0x714fa996]
  409a7c:	rol    DWORD PTR [edx],1
  409a7e:	push   0xb19c0113
  409a83:	test   BYTE PTR ds:0xe9b9e834,ah
  409a89:	das    
  409a8a:	and    eax,0xfd5af4b6
  409a8f:	jns    0x409b04
  409a91:	(bad)
  409a95:	mov    ch,0xd6
  409a97:	idiv   BYTE PTR [edi-0x7]
  409a9a:	dec    ebx
  409a9b:	mov    ah,0x15
  409a9d:	ja     0x409ae0
  409a9f:	cmp    ecx,0xffffffe0
  409aa2:	mov    edi,0x129f09b
  409aa7:	sub    dh,BYTE PTR [esi+esi*2]
  409aaa:	pop    ebp
  409aab:	sub    BYTE PTR [esi],0x4
  409aae:	in     eax,0xf6
  409ab0:	mov    dh,0x67
  409ab2:	xor    edi,DWORD PTR [edx+0x790de0df]
  409ab8:	dec    eax
  409ab9:	and    al,0x94
  409abb:	ds xor eax,0x29f4b758
  409ac1:	out    dx,eax
  409ac2:	icebp  
  409ac3:	arpl   WORD PTR [esi+eiz*8-0x30],dx
  409ac7:	test   DWORD PTR [ebx+ecx*8],esi
  409aca:	popf   
  409acb:	xchg   DWORD PTR [edi],edx
  409acd:	xor    DWORD PTR [edi+0x2b3b1fe8],esi
  409ad3:	xor    BYTE PTR [eax],dh
  409ad5:	adc    BYTE PTR [ebp-0x53],0x71
  409ad9:	loop   0x409af5
  409adb:	dec    esp
  409adc:	pmaxsw mm2,QWORD PTR [ebx-0x30b46fce]
  409ae3:	mov    bl,0xc7
  409ae5:	inc    ebp
  409ae6:	call   0x746987a
  409aeb:	lea    eax,[ebp-0x18]
  409aee:	mov    DWORD PTR [ebp-0x14],eax
  409af1:	mov    eax,DWORD PTR [ebp-0x14]
  409af4:	add    DWORD PTR [eax],0x705fa8f
  409afa:	mov    eax,DWORD PTR [ebp-0x10]
  409afd:	mov    edx,DWORD PTR [ebp+0x8]
  409b00:	xor    eax,ecx
  409b02:	lea    eax,[eax+edx*1+0x32729e]
  409b09:	mov    DWORD PTR [ebp+0x8],eax
  409b0c:	inc    DWORD PTR [ebp+0xc]
  409b0f:	jmp    0x409955
  409b14:	mov    eax,DWORD PTR [ebp-0x10]
  409b17:	xor    eax,ecx
  409b19:	mov    ecx,DWORD PTR [ebp+0x10]
  409b1c:	add    eax,esi
  409b1e:	mov    DWORD PTR [ecx],eax
  409b20:	pop    esi
  409b21:	leave  
  409b22:	ret    0xc
  409b25:	push   ebp
  409b26:	mov    ebp,esp
  409b28:	push   ecx
  409b29:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  409b30:	sub    DWORD PTR ds:0x41074b,edx
  409b36:	mov    eax,DWORD PTR [ebp+0x8]
  409b39:	jmp    0x409ca4
  409b3e:	push   cs
  409b3f:	xchg   BYTE PTR [esi],dl
  409b41:	fs xchg esi,eax
  409b43:	fs dec esi
  409b45:	data16 jg 0x409bb3
  409b48:	pop    esp
  409b49:	lds    esp,FWORD PTR [edi]
  409b4b:	cli    
  409b4c:	push   ss
  409b4d:	popf   
  409b4e:	jecxz  0x409b11
  409b50:	jl     0x409bce
  409b52:	retf   0x7c7f
  409b55:	jl     0x409b95
  409b57:	push   0x56
  409b59:	mov    bh,cl
  409b5b:	in     eax,dx
  409b5c:	xor    BYTE PTR [esi-0x53],dl
  409b5f:	push   ebp
  409b60:	je     0x409b8d
  409b62:	lock push ecx
  409b64:	call   0x2ced:0xca46225b
  409b6b:	xchg   BYTE PTR [ebx-0x51],ah
  409b6e:	jp     0x409ba6
  409b70:	rcr    BYTE PTR [esi-0x6f],0xf7
  409b74:	mov    ds:0x21f0c7c6,al
  409b79:	lahf   
  409b7a:	ins    BYTE PTR es:[edi],dx
  409b7b:	je     0x409bd2
  409b7d:	nop
  409b7e:	gs arpl cx,bx
  409b81:	and    bh,BYTE PTR [ebp-0x21cfb7f1]
  409b87:	pop    ebp
  409b88:	das    
  409b89:	sub    al,BYTE PTR [edi-0x162af2a6]
  409b8f:	in     eax,dx
  409b90:	and    DWORD PTR [edx],esi
  409b92:	imul   esp,DWORD PTR [ecx],0xbe6ea6fe
  409b98:	and    BYTE PTR [esi],dh
  409b9a:	xchg   esi,eax
  409b9b:	sti    
  409b9c:	cmp    DWORD PTR [edi+ebx*8+0x773cc94e],esp
  409ba3:	sbb    ebp,DWORD PTR [ebx-0x3fc8971c]
  409ba9:	xor    al,0x83
  409bab:	pop    ds
  409bac:	cmp    esi,DWORD PTR [edx+0x2f]
  409baf:	jnp    0x409bf5
  409bb1:	fcomi  st,st(4)
  409bb3:	inc    edx
  409bb4:	xchg   DWORD PTR [ebx-0x3d550e47],esp
  409bba:	xor    ebp,DWORD PTR [ecx-0x468edb78]
  409bc0:	and    al,0x6a
  409bc2:	repnz push ecx
  409bc4:	in     al,0xc3
  409bc6:	or     eax,0xcc8e1e3b
  409bcb:	mov    BYTE PTR [edi],cl
  409bcd:	adc    ebp,eax
  409bcf:	hlt    
  409bd0:	sub    DWORD PTR [edi+esi*8],edi
  409bd3:	out    dx,al
  409bd4:	add    bl,ah
  409bd6:	hlt    
  409bd7:	retf   0x42eb
  409bda:	inc    edx
  409bdb:	mov    eax,0x5c6e0e71
  409be0:	mov    esi,0x5a4a9535
  409be5:	mov    ?,dx
  409be8:	shl    BYTE PTR [esi+0x33c5f15d],0x4f
  409bef:	lock pusha 
  409bf1:	cld    
  409bf2:	aaa    
  409bf3:	xchg   ecx,eax
  409bf4:	dec    esp
  409bf5:	sbb    eax,0xb46d70f3
  409bfa:	inc    ebp
  409bfb:	sbb    esi,ebp
  409bfd:	inc    ebx
  409bfe:	or     ebp,DWORD PTR [eax]
  409c00:	test   edi,esi
  409c02:	add    al,0xba
  409c04:	in     eax,0x6d
  409c06:	daa    
  409c07:	pop    ebx
  409c08:	cmp    DWORD PTR [edi+0x41],0xe2d61af3
  409c0f:	js     0x409be4
  409c11:	jmp    0xd45c28eb
  409c16:	xchg   edi,eax
  409c17:	shl    ecx,cl
  409c19:	imul   edi,DWORD PTR [edx+0x69918b79],0x6c23e1a6
  409c23:	jns    0x409c1a
  409c25:	loope  0x409bed
  409c27:	jl     0x409c18
  409c29:	inc    esp
  409c2a:	adc    DWORD PTR fs:[esi-0x2bee3ddc],edi
  409c31:	pop    eax
  409c32:	mov    ch,BYTE PTR [ecx+ecx*1-0x1b]
  409c36:	or     BYTE PTR [esp+esi*8-0x5c],ah
  409c3a:	test   al,0xca
  409c3c:	xor    BYTE PTR [eax],dl
  409c3e:	dec    ecx
  409c3f:	aas    
  409c40:	lock push es
  409c42:	mov    ecx,0xcea23e1e
  409c47:	mov    ah,0xec
  409c49:	jecxz  0x409c33
  409c4b:	push   ebx
  409c4c:	mov    ds:0x52199a7a,eax
  409c51:	and    DWORD PTR [eax-0x15d19886],eax
  409c57:	mov    esp,0xd3f9b078
  409c5c:	inc    esi
  409c5d:	test   eax,0xae3b6bcb
  409c62:	ret    
  409c63:	mov    ds:0x3d5751f0,eax
  409c68:	loope  0x409c59
  409c6a:	mov    ds:0x74a348b0,al
  409c6f:	int3   
  409c70:	push   esi
  409c71:	adc    cl,ah
  409c73:	and    eax,0x1044c7a9
  409c78:	sub    ecx,eax
  409c7a:	xor    eax,0x4d60faf0
  409c7f:	pop    edx
  409c80:	mov    eax,0x9dd00518
  409c85:	jae    0x409cdf
  409c87:	out    dx,eax
  409c88:	push   ebx
  409c89:	movlhps xmm4,xmm3
  409c8c:	mov    al,ds:0xeb7e9ca
  409c91:	or     BYTE PTR [ebx+0x785d8558],ah
  409c97:	xchg   BYTE PTR [esi],al
  409c99:	loope  0x409cd8
  409c9b:	xor    eax,0x1a58512
  409ca0:	jle    0x409d1e
  409ca2:	rcl    DWORD PTR [edi+0x1581008a],0x47
  409ca9:	dec    eax
  409caa:	inc    edx
  409cab:	add    al,ah
  409cad:	mov    dh,0x44
  409caf:	add    BYTE PTR [esi*1+0x66e94934],al
  409cb6:	add    DWORD PTR [eax],eax
  409cb8:	add    BYTE PTR [ecx],al
  409cba:	bound  esp,QWORD PTR [eax-0x13]
  409cbd:	arpl   bp,bp
  409cbf:	cdq    
  409cc0:	jp     0x409c53
  409cc2:	fldenv [esi+ebx*2+0x297db5c6]
  409cc9:	mov    cl,0xc0
  409ccb:	jl     0x409d49
  409ccd:	retf   0x7c7f
  409cd0:	jl     0x409d43
  409cd2:	mov    bh,0xe6
  409cd4:	mov    al,ds:0x519d3398
  409cd9:	leave  
  409cda:	sub    BYTE PTR [edx-0x6e],0xdf
  409cde:	and    dh,ah
  409ce0:	pop    ebp
  409ce1:	fild   DWORD PTR [esi]
  409ce3:	ret    
  409ce4:	into   
  409ce5:	or     al,0xc4
  409ce7:	cmp    BYTE PTR [ebp+0x5afabfe0],0x37
  409cee:	ds inc edx
  409cf0:	xor    al,BYTE PTR [ebx+0x10f1d681]
  409cf6:	(bad)  [edi+0x45eec268]
  409cfc:	sbb    BYTE PTR [ecx+eiz*8-0x41cb9225],cl
  409d03:	or     esi,DWORD PTR [ecx-0x20]
  409d06:	add    al,0x40
  409d08:	and    DWORD PTR [edi+0x38],esi
  409d0b:	jg     0x409ca5
  409d0d:	in     eax,0x60
  409d0f:	cmp    bl,bh
  409d11:	mov    ds:0x4a3782d1,al
  409d16:	adc    BYTE PTR [eax+0x44],0xa3
  409d1a:	jp     0x409d49
  409d1c:	test   eax,0x3641d91e
  409d21:	add    DWORD PTR [edx+0x2c],ecx
  409d24:	std    
  409d25:	push   ebx
  409d26:	loop   0x409d96
  409d28:	jecxz  0x409d9d
  409d2a:	or     eax,0x2f4c203
  409d2f:	mov    BYTE PTR [edi+0x35],bh
  409d32:	xchg   esi,eax
  409d33:	push   edx
  409d34:	(bad)  
  409d35:	dec    DWORD PTR [ebp-0x29]
  409d38:	into   
  409d39:	lock add BYTE PTR [edi-0x463823bf],0x50
  409d41:	cmp    eax,0xa0b5c5cd
  409d46:	jbe    0x409d31
  409d48:	lea    esi,[edx]
  409d4a:	rol    BYTE PTR [edx],cl
  409d4c:	jno    0x409dc7
  409d4e:	cmp    dh,BYTE PTR [edi]
  409d50:	jle    0x409d44
  409d52:	repnz int 0x54
  409d55:	jmp    0xab89287
  409d5a:	sub    dh,BYTE PTR [edi+ebx*2]
  409d5d:	shr    BYTE PTR [edi-0x4a322b06],0xac
  409d64:	push   ss
  409d65:	mov    eax,ds:0x6898d455
  409d6a:	shl    BYTE PTR [esi+ebp*2],cl
  409d6d:	daa    
  409d6e:	jp     0x409da9
  409d70:	dec    eax
  409d71:	out    0xb2,al
  409d73:	mov    al,BYTE PTR es:[eax-0x2338dd65]
  409d7a:	or     eax,0x2bf63b82
  409d7f:	mov    ch,0xc6
  409d81:	fild   WORD PTR [edx]
  409d83:	outs   dx,BYTE PTR ds:[esi]
  409d84:	cwde   
  409d85:	je     0x409d07
  409d87:	adc    al,0xd8
  409d89:	lahf   
  409d8a:	cmp    al,0x7a
  409d8c:	loopne 0x409d3d
  409d8e:	int3   
  409d8f:	mov    dh,0xb5
  409d91:	pop    eax
  409d92:	push   ds
  409d93:	add    ecx,DWORD PTR [eax]
  409d95:	jns    0x409d24
  409d97:	mov    ebx,esi
  409d99:	lock paddd mm0,mm4
  409d9d:	add    eax,edi
  409d9f:	cwde   
  409da0:	test   eax,0xed56e6a5
  409da5:	mov    dh,0xb7
  409da7:	int3   
  409da8:	test   al,0x39
  409daa:	ds imul eax,esi,0x61
  409dae:	inc    esi
  409daf:	sub    BYTE PTR [eax+0x1d],ch
  409db2:	fstp   QWORD PTR [esi]
  409db4:	dec    esi
  409db5:	pop    es
  409db6:	js     0x409d99
  409db8:	div    BYTE PTR [ecx+0x6ec60ea]
  409dbe:	outs   dx,BYTE PTR ds:[esi]
  409dbf:	in     eax,0x39
  409dc1:	out    dx,eax
  409dc2:	adc    cl,BYTE PTR [ebx]
  409dc4:	mov    ch,0x53
  409dc6:	push   ss
  409dc7:	jg     0x409d82
  409dc9:	fisubr WORD PTR [esi+0x26a34163]
  409dcf:	in     al,dx
  409dd0:	xchg   ebp,eax
  409dd1:	pop    ebp
  409dd2:	and    DWORD PTR [ecx],ebp
  409dd4:	mov    BYTE PTR [eax+0x2cb12c34],ah
  409dda:	push   edi
  409ddb:	or     al,0x41
  409ddd:	nop
  409dde:	out    0x2e,al
  409de0:	adc    cl,dh
  409de2:	int3   
  409de3:	adc    eax,0xf76597b0
  409de8:	stc    
  409de9:	out    0xf8,eax
  409deb:	ins    DWORD PTR es:[edi],dx
  409dec:	str    WORD PTR [edx]
  409def:	push   0x90bbb3dd
  409df4:	and    dl,BYTE PTR [edx-0x15]
  409df7:	cmp    DWORD PTR [edi+0x3dc8482d],ebx
  409dfd:	jecxz  0x409e77
  409dff:	inc    ebp
  409e00:	fcom   DWORD PTR ds:0x81694fc4
  409e06:	xchg   edi,eax
  409e07:	mov    ecx,edx
  409e09:	inc    esp
  409e0a:	push   ebx
  409e0b:	mov    ah,0x92
  409e0d:	aam    0x20
  409e0f:	(bad)
  409e12:	mov    ds:0x7bd7463b,eax
  409e17:	clc    
  409e18:	out    dx,eax
  409e19:	mov    eax,0xfaaf58b5
  409e1e:	ret    
  409e1f:	cmp    al,0xcb
  409e21:	mov    DWORD PTR ds:0x42482f,0x71b7
  409e2b:	jne    0x40a324
  409e31:	or     DWORD PTR ds:0x410757,edx
  409e37:	mov    eax,DWORD PTR [ebp+0x8]
  409e3a:	mov    ecx,DWORD PTR [ebp+0x8]
  409e3d:	adc    DWORD PTR ds:0x448988,0x48d6
  409e47:	add    ecx,DWORD PTR [eax+0x3c]
  409e4a:	mov    edx,DWORD PTR ds:0x4454dc
  409e50:	xor    eax,eax
  409e52:	or     eax,DWORD PTR ds:0x4454e8
  409e58:	sub    eax,edx
  409e5a:	and    edx,DWORD PTR [edx+eax*1]
  409e5d:	mov    edx,0x7510857
  409e62:	mov    DWORD PTR ds:0x410743,0x1d
  409e6c:	cmp    DWORD PTR ds:0x410743,0x0
  409e73:	je     0x409eb2
  409e79:	cmp    DWORD PTR ds:0x410743,0x2c
  409e80:	jne    0x409ea2
  409e86:	push   DWORD PTR [ebp-0x1c]
  409e89:	push   DWORD PTR [ebp-0x28]
  409e8c:	push   DWORD PTR [ebp-0x10]
  409e8f:	push   0x1f6d
  409e94:	push   0x61b1
  409e99:	push   DWORD PTR [ebp-0x14]
  409e9c:	call   DWORD PTR ds:0x443044
  409ea2:	mov    eax,ds:0x410743
  409ea7:	dec    eax
  409ea8:	mov    ds:0x410743,eax
  409ead:	jmp    0x409e6c
  409eb2:	mov    DWORD PTR [ebp+0x8],ecx
  409eb5:	mov    eax,DWORD PTR [ebp-0x4]
  409eb8:	xor    eax,edx
  409eba:	push   esi
  409ebb:	mov    esi,DWORD PTR [ebp+0x8]
  409ebe:	mov    ecx,0x32729e
  409ec3:	add    eax,ecx
  409ec5:	cmp    DWORD PTR [esi+0x54],eax
  409ec8:	jmp    0x40a033
  409ecd:	mov    esi,0x45a9bf40
  409ed2:	mov    ebp,0xfb297b56
  409ed7:	test   BYTE PTR [esi+0x5e580c25],bl
  409edd:	cmpps  xmm7,XMMWORD PTR [esp+edi*2-0x36],0x7f
  409ee3:	jl     0x409f61
  409ee5:	stos   DWORD PTR es:[edi],eax
  409ee6:	xlat   BYTE PTR ds:[ebx]
  409ee7:	dec    esp
  409ee8:	push   ebp
  409ee9:	inc    ebp
  409eea:	std    
  409eeb:	jno    0x409f45
  409eed:	dec    edx
  409eee:	and    ch,BYTE PTR [eax-0x71]
  409ef1:	lods   al,BYTE PTR ds:[esi]
  409ef2:	sbb    BYTE PTR [esi],al
  409ef4:	fnsave [eax-0x1e28e6fc]
  409efa:	out    0xc8,eax
  409efc:	ins    BYTE PTR es:[edi],dx
  409efd:	jns    0x409ee5
  409eff:	inc    ebp
  409f00:	inc    ebx
  409f01:	popa   
  409f02:	loopne 0x409eb3
  409f04:	mov    ecx,0x67ac02e6
  409f09:	adc    DWORD PTR [esi-0x4a],edx
  409f0c:	dec    ecx
  409f0d:	pop    edx
  409f0e:	xlat   BYTE PTR ds:[ebx]
  409f0f:	xlat   BYTE PTR ds:[ebx]
  409f10:	pusha  
  409f11:	gs ins DWORD PTR es:[edi],dx
  409f13:	mov    ah,0x54
  409f15:	mov    ah,0xa8
  409f17:	add    DWORD PTR [eax],edi
  409f19:	je     0x409f3a
  409f1b:	mov    ds:0xf4adefe6,eax
  409f20:	pop    ss
  409f21:	popa   
  409f22:	and    bl,ch
  409f24:	sbb    eax,0xc1e5418
  409f29:	retf   0xf85b
  409f2c:	je     0x409f3e
  409f2e:	fld    DWORD PTR [esi-0x1b42a044]
  409f34:	or     dh,ah
  409f36:	sbb    al,0xe
  409f38:	or     BYTE PTR [edi-0x20],ah
  409f3b:	out    0xa9,al
  409f3d:	sti    
  409f3e:	lods   al,BYTE PTR ds:[esi]
  409f3f:	and    eax,DWORD PTR [ebx+0x1a]
  409f42:	(bad)  
  409f43:	retf   0xad67
  409f46:	cwde   
  409f47:	lea    edi,[esi+0x70]
  409f4a:	add    DWORD PTR [ebx+0x25],edi
  409f4d:	loop   0x409f31
  409f4f:	jecxz  0x409fac
  409f51:	dec    esi
  409f52:	pop    ebp
  409f53:	and    al,0x9d
  409f55:	and    BYTE PTR [edi],0xe
  409f58:	repz les eax,FWORD PTR [edi-0x16974718]
  409f5f:	dec    ebx
  409f60:	stc    
  409f61:	gs enter 0x6527,0xe4
  409f66:	popw   ds
  409f68:	int    0xd8
  409f6a:	call   0x6701:0x3433aaec
  409f71:	and    al,0xc2
  409f73:	mov    ebx,es
  409f75:	push   0x108f6b08
  409f7a:	xor    ah,BYTE PTR [ecx+edx*1-0xa]
  409f7e:	cld    
  409f7f:	arpl   WORD PTR [ebp+0x55],bx
  409f82:	sub    al,0x3c
  409f84:	mov    bl,0x5b
  409f86:	xchg   BYTE PTR [ecx+0x6c],bh
  409f89:	push   ebp
  409f8a:	xor    ecx,DWORD PTR [edi]
  409f8c:	cmp    al,0x43
  409f8e:	scas   al,BYTE PTR es:[edi]
  409f8f:	nop
  409f90:	mov    ebx,0xa6c096e0
  409f95:	mov    esi,0x37b59d47
  409f9a:	inc    eax
  409f9b:	cmp    al,0x29
  409f9d:	adc    eax,0x4cef959d
  409fa2:	retf   
  409fa3:	mov    esi,esp
  409fa5:	ret    
  409fa6:	sbb    eax,0x2d42cc26
  409fab:	or     al,0x70
  409fad:	mov    cl,0x7d
  409faf:	out    0xc4,eax
  409fb1:	mov    al,0x6f
  409fb3:	jo     0x409f7d
  409fb5:	out    dx,al
  409fb6:	and    bl,BYTE PTR [esi+0x53]
  409fb9:	xchg   ebp,eax
  409fba:	iret   
  409fbb:	pushf  
  409fbc:	dec    edx
  409fbd:	aam    0x22
  409fbf:	xor    ah,BYTE PTR [ebp-0x4562c4b2]
  409fc5:	mov    ah,0x52
  409fc7:	ins    BYTE PTR es:[edi],dx
  409fc8:	arpl   di,cx
  409fca:	retf   
  409fcb:	sub    eax,DWORD PTR [edi]
  409fcd:	mov    bh,0x9b
  409fcf:	test   eax,0xc5bd81d2
  409fd4:	imul   ebx,eax,0xffffffac
  409fd7:	repnz (bad) 
  409fda:	outs   dx,BYTE PTR ds:[esi]
  409fdb:	out    0x90,eax
  409fdd:	jnp    0x409fec
  409fdf:	pop    ecx
  409fe0:	dec    edi
  409fe1:	fwait
  409fe2:	inc    esi
  409fe3:	pop    esp
  409fe4:	lahf   
  409fe5:	data16 mov al,ds:0x3debfee5
  409feb:	cmp    bh,0x14
  409fee:	mov    DWORD PTR [ebx],edi
  409ff0:	in     al,dx
  409ff1:	pop    esi
  409ff2:	out    dx,eax
  409ff3:	xor    ebx,esp
  409ff5:	imul   ecx,edx,0x4709fcbf
  409ffb:	int3   
  409ffc:	push   edx
  409ffd:	int3   
  409ffe:	add    ebx,DWORD PTR [eax-0x8]
  40a001:	adc    ecx,ebp
  40a003:	sub    ah,cl
  40a005:	mov    eax,ds:0x258ca942
  40a00a:	inc    ebp
  40a00c:	ret    
  40a00d:	and    al,0xbb
  40a00f:	cmp    eax,DWORD PTR [edx+edi*8-0x60]
  40a013:	loopne 0x40a01e
  40a015:	ins    DWORD PTR es:[edi],dx
  40a016:	int    0xa5
  40a018:	or     edx,DWORD PTR ds:0xe61e12d8
  40a01e:	mov    bh,0xbe
  40a020:	fld    QWORD PTR [eax+0x37]
  40a023:	sbb    ch,dl
  40a025:	xchg   edx,eax
  40a026:	call   0xd0493ba6
  40a02b:	push   cs
  40a02c:	test   BYTE PTR [ecx],dh
  40a02e:	adc    DWORD PTR [esi-0x16],eax
  40a031:	std    
  40a032:	cmp    al,0x5e
  40a034:	je     0x40a1ad
  40a03a:	mov    eax,DWORD PTR [ebp+0x8]
  40a03d:	jmp    0x40a331
  40a042:	jmp    0x40a1ad
  40a047:	xchg   ecx,eax
  40a048:	test   dh,dl
  40a04a:	loopne 0x40a045
  40a04c:	bound  edi,QWORD PTR [ebp+0x7db7845d]
  40a052:	add    ebp,edx
  40a054:	mov    ds:0xc5dd0f2c,eax
  40a059:	jl     0x40a0d7
  40a05b:	retf   0x7c7f
  40a05e:	jl     0x409fec
  40a060:	cld    
  40a061:	lock xchg BYTE PTR [esp+eiz*4+0x4c],dl
  40a066:	mov    esp,0xadced228
  40a06b:	inc    esi
  40a06c:	loope  0x40a077
  40a06e:	xor    al,0xff
  40a070:	jmp    0x9d42ddb5
  40a075:	icebp  
  40a076:	inc    esp
  40a077:	cmp    ebx,edx
  40a079:	sbb    BYTE PTR [edi+eiz*2+0x5de56622],dl
  40a080:	mov    bl,0x31
  40a082:	in     eax,dx
  40a083:	mov    ebp,0x94a1958c
  40a088:	in     eax,0x8a
  40a08a:	es sub bl,dh
  40a08d:	ds in  eax,dx
  40a08f:	dec    ebx
  40a090:	mov    edi,0xfbbe70eb
  40a095:	inc    eax
  40a096:	mov    eax,ds:0x7a8b94ad
  40a09b:	psrlw  mm2,QWORD PTR [edi+0x56467f19]
  40a0a2:	sub    ebx,esp
  40a0a4:	mov    edi,ebp
  40a0a6:	lods   al,BYTE PTR ds:[esi]
  40a0a7:	add    BYTE PTR [esi-0x6d],bh
  40a0aa:	or     al,0x57
  40a0ac:	imul   esp,ebx,0xffffffec
  40a0af:	xlat   BYTE PTR ds:[ebx]
  40a0b0:	dec    esp
  40a0b1:	push   ebx
  40a0b2:	push   0xffffffa9
  40a0b4:	cdq    
  40a0b5:	dec    ebx
  40a0b6:	les    edx,FWORD PTR [eax]
  40a0b8:	add    BYTE PTR [ebp+0x5c],ch
  40a0bb:	inc    edx
  40a0bc:	mov    ds:0x7661d515,al
  40a0c1:	lea    ebx,[edi+0x5b]
  40a0c4:	cld    
  40a0c5:	push   cs
  40a0c6:	fild   DWORD PTR [esi-0x9]
  40a0c9:	ds push esp
  40a0cb:	rcr    BYTE PTR [ebx+esi*8],cl
  40a0ce:	leave  
  40a0cf:	adc    al,BYTE PTR [ebx-0x67576552]
  40a0d5:	mov    bh,0xc8
  40a0d7:	and    ebx,ecx
  40a0d9:	test   BYTE PTR [eax-0x20],cl
  40a0dc:	and    cl,BYTE PTR [esi+0xd1beffb]
  40a0e2:	mov    cl,0x1e
  40a0e4:	aad    0x39
  40a0e6:	cdq    
  40a0e7:	rcr    DWORD PTR [ecx+0x31],cl
  40a0ea:	add    al,0xa8
  40a0ec:	cli    
  40a0ed:	lods   eax,DWORD PTR ds:[esi]
  40a0ee:	out    0xce,eax
  40a0f0:	retf   0x7df8
  40a0f3:	fsubr  DWORD PTR [esi+ebp*4+0x25]
  40a0f7:	out    dx,al
  40a0f8:	mov    dh,0x86
  40a0fa:	in     al,dx
  40a0fb:	or     BYTE PTR [ecx],bh
  40a0fd:	mov    eax,0x3e7fa6b1
  40a102:	mov    dl,0xa9
  40a104:	in     eax,dx
  40a105:	or     edi,DWORD PTR [eax]
  40a107:	test   DWORD PTR [esi+0x13],0x86edfcbe
  40a10e:	ret    
  40a10f:	into   
  40a110:	aad    0xa0
  40a112:	retf   
  40a113:	repnz stos WORD PTR es:[edi],ax
  40a116:	fcom   QWORD PTR [esi-0x6b]
  40a119:	xchg   esi,eax
  40a11a:	addr16 mov edi,0x2421c859
  40a120:	in     al,0x17
  40a122:	push   cs
  40a123:	xchg   DWORD PTR [edi],eax
  40a125:	ins    DWORD PTR es:[edi],dx
  40a126:	xchg   ecx,eax
  40a127:	sbb    DWORD PTR [ecx-0x10dd1dd5],edx
  40a12d:	cmp    BYTE PTR [edi-0x276199a3],cl
  40a133:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a134:	test   al,0x63
  40a136:	sti    
  40a137:	out    0x9a,al
  40a139:	jo     0x40a11e
  40a13b:	mov    BYTE PTR [ecx+eiz*2],al
  40a13e:	pushf  
  40a13f:	shr    al,1
  40a141:	ret    0xf8d3
  40a144:	lock push esp
  40a146:	pop    es
  40a147:	int3   
  40a148:	lahf   
  40a149:	popf   
  40a14a:	push   eax
  40a14b:	test   eax,0xe594eb30
  40a150:	outs   dx,BYTE PTR ds:[esi]
  40a151:	int    0xfe
  40a153:	pusha  
  40a154:	or     eax,0x3d447439
  40a159:	sbb    BYTE PTR [edi-0x57d4571b],0xf3
  40a160:	push   ds
  40a161:	mov    ch,0xf5
  40a163:	pop    esi
  40a164:	xchg   esp,eax
  40a165:	mov    ebx,0xe7a4a2e4
  40a16a:	loop   0x40a1c9
  40a16c:	xor    BYTE PTR [edi],bl
  40a16e:	adc    al,0x6d
  40a170:	jmp    0xf820:0x6060cf06
  40a177:	(bad)  
  40a178:	outs   dx,DWORD PTR ds:[esi]
  40a179:	inc    eax
  40a17a:	push   0x6dc81599
  40a17f:	add    al,0x69
  40a181:	jne    0x40a1f7
  40a183:	and    eax,0xcc200f32
  40a188:	add    cl,BYTE PTR [ecx+0xc]
  40a18b:	inc    ecx
  40a18c:	outs   dx,DWORD PTR ds:[esi]
  40a18d:	ret    
  40a18e:	mov    dl,0xa4
  40a190:	mov    edx,0xa73d1290
  40a195:	mov    dh,0xff
  40a197:	popa   
  40a198:	cli    
  40a199:	sub    DWORD PTR [ecx+0x3a12eed7],esp
  40a19f:	add    DWORD PTR [esi+ebx*4-0x2af3643b],esi
  40a1a6:	adc    eax,0x2afcb146
  40a1ab:	dec    eax
  40a1ac:	mov    bl,0x8b
  40a1ae:	inc    ebp
  40a1af:	cld    
  40a1b0:	jmp    0x40a31b
  40a1b5:	aam    0x68
  40a1b7:	rol    BYTE PTR [eax+0x50],1
  40a1ba:	pop    eax
  40a1bb:	fs js  0x40a15e
  40a1be:	jge    0x40a14e
  40a1c0:	ficomp WORD PTR [edx+0x79]
  40a1c3:	lods   eax,DWORD PTR ds:[esi]
  40a1c4:	bts    esp,eax
  40a1c7:	jl     0x40a245
  40a1c9:	retf   0x7c7f
  40a1cc:	jl     0x40a249
  40a1ce:	es pusha 
  40a1d0:	test   al,0x5
  40a1d2:	sub    DWORD PTR [edi],ebx
  40a1d4:	lods   eax,DWORD PTR ds:[esi]
  40a1d5:	out    0x83,al
  40a1d7:	push   0x1676de22
  40a1dc:	push   eax
  40a1dd:	or     al,0xa2
  40a1df:	mov    al,0x7f
  40a1e1:	aad    0x5a
  40a1e3:	jle    0x40a16a
  40a1e5:	pop    eax
  40a1e6:	dec    edi
  40a1e7:	shr    BYTE PTR [ebp+esi*2-0x48],cl
  40a1eb:	lods   al,BYTE PTR ds:[esi]
  40a1ec:	or     edx,ebx
  40a1ee:	pop    ss
  40a1ef:	dec    eax
  40a1f0:	out    0xe3,al
  40a1f2:	sbb    al,0xc
  40a1f4:	ins    DWORD PTR es:[edi],dx
  40a1f5:	aad    0xf7
  40a1f7:	and    WORD PTR [eax-0xc84cee2],bp
  40a1fe:	repz repnz push eax
  40a201:	push   ebp
  40a202:	gs sbb eax,0x413873c9
  40a208:	push   esp
  40a209:	push   esp
  40a20a:	mov    ecx,0xa7717e09
  40a20f:	push   edx
  40a210:	jnp    0x40a286
  40a212:	js     0x40a24e
  40a214:	popa   
  40a215:	mov    BYTE PTR [ebx+esi*2-0x40],0xef
  40a21a:	cmc    
  40a21b:	dec    esi
  40a21c:	enter  0xbd53,0x40
  40a220:	and    al,0x54
  40a222:	ins    DWORD PTR es:[edi],dx
  40a223:	inc    esp
  40a224:	repnz inc edi
  40a226:	dec    esi
  40a227:	fisttp WORD PTR [edi]
  40a229:	retf   0x3b7d
  40a22c:	dec    ebx
  40a22d:	sahf   
  40a22e:	sub    eax,0xccfc53bf
  40a233:	cmp    BYTE PTR [ecx+0x144d1558],cl
  40a239:	xchg   edx,eax
  40a23a:	int3   
  40a23b:	imul   esi,DWORD PTR [edx],0x7383cb4d
  40a241:	sub    ebx,DWORD PTR [esi]
  40a243:	jmp    0x4956:0x56673a11
  40a24a:	cmp    al,0xe7
  40a24c:	sub    eax,0xc7e0e023
  40a251:	outs   dx,BYTE PTR ds:[esi]
  40a252:	pop    esp
  40a253:	push   ecx
  40a254:	jmp    0x74e1:0xa32784f
  40a25b:	loop   0x40a2c3
  40a25d:	pop    edx
  40a25e:	xchg   ebp,eax
  40a25f:	ret    
  40a260:	mov    DWORD PTR [esi+0x48],ecx
  40a263:	inc    ebp
  40a264:	push   ss
  40a265:	repz pop esi
  40a267:	mov    bl,BYTE PTR [esi-0x2b]
  40a26a:	sub    dl,al
  40a26c:	xor    eax,DWORD PTR [esp+edx*2]
  40a26f:	push   esp
  40a270:	bound  esi,QWORD PTR [eax+0x32]
  40a273:	sub    edx,DWORD PTR [esi+0x68c8710b]
  40a279:	rep lods eax,DWORD PTR ds:[esi]
  40a27b:	mov    al,dh
  40a27d:	sti    
  40a27e:	pop    ebp
  40a27f:	cdq    
  40a280:	out    dx,eax
  40a281:	ds sbb ch,0xf6
  40a285:	adc    al,0x5b
  40a287:	stos   DWORD PTR es:[edi],eax
  40a288:	mov    ds:0x15841a13,eax
  40a28d:	icebp  
  40a28e:	cmp    bh,BYTE PTR [edx+0x1d]
  40a291:	lea    si,[ecx]
  40a294:	mov    ds:0x5b81525a,al
  40a299:	call   0x4adb:0x473653e4
  40a2a0:	and    edx,DWORD PTR [edi-0x3a]
  40a2a3:	call   0x7b650a09
  40a2a8:	mov    eax,0x1fff7cd2
  40a2ad:	fisttp QWORD PTR ds:0x9ee19776
  40a2b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2b4:	dec    esp
  40a2b5:	jmp    0xa6f2:0xdaf5ca5a
  40a2bc:	clc    
  40a2bd:	pop    ecx
  40a2be:	cld    
  40a2bf:	je     0x40a24b
  40a2c1:	cmc    
  40a2c2:	iret   
  40a2c3:	adc    al,0x7b
  40a2c5:	cmp    DWORD PTR [ebx+0x20],edx
  40a2c8:	jbe    0x40a2f8
  40a2ca:	dec    esi
  40a2cb:	add    DWORD PTR [esi],0x92f2fc97
  40a2d1:	inc    ecx
  40a2d2:	(bad)  
  40a2d3:	mov    ah,0x41
  40a2d5:	inc    edi
  40a2d6:	daa    
  40a2d7:	les    esi,FWORD PTR [esi+edx*4+0x6b1065f0]
  40a2de:	dec    ebx
  40a2df:	jp     0x40a2ea
  40a2e1:	jb     0x40a314
  40a2e3:	jle    0x40a27b
  40a2e5:	dec    edi
  40a2e6:	jo     0x40a32e
  40a2e8:	hlt    
  40a2e9:	push   esp
  40a2ea:	dec    edx
  40a2eb:	test   al,al
  40a2ed:	cdq    
  40a2ee:	shr    BYTE PTR [ecx],1
  40a2f0:	xchg   BYTE PTR [esp+eiz*8],bh
  40a2f3:	mov    dh,0xfb
  40a2f5:	inc    eax
  40a2f6:	xor    al,0x2d
  40a2f8:	ret    
  40a2f9:	popf   
  40a2fa:	mov    al,0x6
  40a2fc:	dec    eax
  40a2fd:	sti    
  40a2fe:	pop    es
  40a2ff:	test   eax,0x3b0955ee
  40a304:	std    
  40a305:	jbe    0x40a2df
  40a307:	fdivr  DWORD PTR [esi-0x138108d1]
  40a30d:	sbb    al,0xe1
  40a30f:	dec    ebp
  40a310:	cld    
  40a311:	adc    cl,BYTE PTR [ebx+eiz*8-0x28]
  40a315:	stos   DWORD PTR es:[edi],eax
  40a316:	sbb    ah,dl
  40a318:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a319:	xlat   BYTE PTR ds:[ebx]
  40a31a:	or     al,0x33
  40a31c:	ret    0xc103
  40a31f:	jmp    0x40a331
  40a324:	mov    eax,DWORD PTR [ebp-0x4]
  40a327:	xor    eax,0x7510857
  40a32c:	add    eax,0x32729e
  40a331:	leave  
  40a332:	ret    0x4
  40a335:	dec    ebp
  40a336:	push   ebp
  40a337:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40a33d:	mov    esp,ebp
  40a33f:	or     ah,dh
  40a341:	dec    ebp
  40a342:	add    bh,al
  40a344:	add    BYTE PTR [eax],cl
  40a346:	add    BYTE PTR [eax],al
  40a348:	mov    DWORD PTR [eax],0x40f44545
  40a34e:	xor    eax,0x9c8b8500
  40a353:	hlt    
  40a354:	clc    
  40a355:	retf   
  40a356:	(bad)  
  40a357:	enter  0x4d45,0xbc
  40a35b:	mov    esi,DWORD PTR [esp+esi*8]
  40a35e:	test   ebx,ecx
  40a360:	pushf  
  40a361:	enter  0x4df8,0x8b
  40a365:	mov    DWORD PTR [ebp-0x20],0x890208
  40a36c:	inc    ebp
  40a36d:	inc    ebp
  40a36e:	cld    
  40a36f:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40a375:	or     BYTE PTR [ebx+0x0],dl
  40a378:	mov    ebx,0x8bd5700
  40a37d:	call   DWORD PTR [ecx-0x1]
  40a380:	pop    es
  40a381:	mov    ch,0x33
  40a383:	dec    ebx
  40a385:	(bad)  
  40a386:	mov    eax,0x72009ea4
  40a38b:	push   DWORD PTR [edx]
  40a38d:	or     BYTE PTR [eax],al
  40a38f:	jmp    0xff89:0x75c84d03
  40a396:	dec    ebp
  40a397:	loopne 0x40a369
  40a399:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40a39f:	add    BYTE PTR [ebx],dh
  40a3a1:	mov    ecx,ebx
  40a3a3:	hlt    
  40a3a4:	add    ecx,ebx
  40a3a6:	enter  0x899e,0x32
  40a3aa:	dec    ebp
  40a3ab:	add    ecx,eax
  40a3ad:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40a3b3:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40a3ba:	xor    ecx,ebx
  40a3bc:	retf   
  40a3bd:	enter  0x4d03,0xc8
  40a3c1:	mov    DWORD PTR fs:[eax],ebx
  40a3c4:	lea    eax,[eax]
  40a3c6:	push   esp
  40a3c7:	mov    edi,edi
  40a3c9:	fs (bad) 
  40a3cb:	(bad)  
  40a3cc:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40a3d2:	push   0xffffffff
  40a3d4:	and    bh,bh
  40a3d6:	pop    ecx
  40a3d7:	inc    eax
  40a3d8:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40a3de:	push   0xffffff8b
  40a3e0:	pop    ecx
  40a3e1:	cld    
  40a3e2:	dec    ebp
  40a3e3:	lea    ecx,[ecx+0x45ff08ff]
  40a3e9:	mov    BYTE PTR [edx+0x1],cl
  40a3ec:	add    BYTE PTR [eax],al
  40a3ee:	mov    DWORD PTR [ebp+0x8],0x58008d
  40a3f5:	dec    DWORD PTR [ebp-0x77]
  40a3f8:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40a3ff:	cld    
  40a400:	dec    ebp
  40a401:	jne    0x40a436
  40a403:	lea    eax,[ebx]
  40a405:	push   eax
  40a406:	mov    edi,edi
  40a408:	or     BYTE PTR [ecx+0x54a845],cl
  40a40e:	add    al,ch
  40a410:	(bad)  
  40a411:	sub    ebp,esp
  40a413:	add    BYTE PTR [eax],al
  40a415:	rol    BYTE PTR [eax],0x84
  40a418:	inc    ebp
  40a419:	add    dh,BYTE PTR [esi+0x0]
  40a41c:	add    BYTE PTR [ebp-0x73],al
  40a41f:	mov    ebp,DWORD PTR [esp+edx*4]
  40a422:	inc    DWORD PTR [eax]
  40a424:	lea    ecx,[ebx-0x30074f4]
  40a42a:	call   0x41afaf
  40a42f:	add    BYTE PTR [ebp+0x0],cl
  40a432:	jne    0x40a475
  40a434:	dec    DWORD PTR [ebx-0x76210314]
  40a43a:	dec    ebp
  40a43b:	add    DWORD PTR [ebp+0x0],esi
  40a43e:	(bad)  
  40a43f:	xchg   ebp,eax
  40a440:	loopne 0x40a441
  40a442:	inc    eax
  40a443:	inc    DWORD PTR [eax]
  40a445:	mov    ecx,DWORD PTR [ebp-0x4]
  40a448:	xor    edx,DWORD PTR [edx+0x7201b8]
  40a44e:	add    BYTE PTR [edx],dl
  40a450:	enter  0x4d90,0x0
  40a454:	mov    eax,DWORD PTR [eax]
  40a456:	hlt    
  40a457:	add    al,0xa5
  40a459:	mov    al,0xff
  40a45b:	add    bh,bh
  40a45d:	add    BYTE PTR [ebx],dh
  40a45f:	inc    DWORD PTR [ebx]
  40a461:	sbb    al,0x89
  40a463:	jne    0x40a43d
  40a465:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40a46b:	mov    eax,DWORD PTR [ebp-0xff0048]
  40a471:	mov    DWORD PTR [eax-0x70],0xee58e189
  40a478:	inc    DWORD PTR [ebp-0x75]
  40a47b:	ror    DWORD PTR [esp+ebp*8],1
  40a47e:	test   DWORD PTR [esi-0x1],esp
  40a481:	inc    ebp
  40a482:	(bad)  
  40a483:	aas    
  40a484:	inc    ebp
  40a485:	(bad)  
  40a486:	lea    edi,[esp+eiz*2-0x1]
  40a48a:	push   DWORD PTR [edi]
  40a48c:	mov    DWORD PTR [ecx],esi
  40a48e:	mov    al,ds:0x8b8000c7
  40a493:	out    dx,al
  40a494:	cld    
  40a495:	call   0xed3fea27
  40a49a:	(bad)  
  40a49b:	fisttp WORD PTR [eax+0x8801c7]
  40a4a1:	jmp    0x40a4e8
  40a4a3:	out    dx,al
  40a4a4:	inc    DWORD PTR [ebp-0x4]
  40a4a7:	xlat   BYTE PTR ds:[ebx]
  40a4a8:	lea    edi,[edi]
  40a4aa:	inc    edi
  40a4ac:	jmp    FWORD PTR [eax-0x78]
  40a4af:	inc    DWORD PTR [ecx]
  40a4b1:	aaa    
  40a4b2:	add    BYTE PTR [ecx],dh
  40a4b4:	pop    ecx
  40a4b5:	mov    DWORD PTR [eax],0xfff856c
  40a4bb:	ffreep st(5)
  40a4bd:	aas    
  40a4be:	add    bh,al
  40a4c0:	mov    esi,DWORD PTR [eax-0x4]
  40a4c3:	inc    DWORD PTR [eax+0xdf01ec]
  40a4c9:	(bad)  
  40a4ca:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40a4ce:	mov    esp,ebx
  40a4d0:	xchg   esp,eax
  40a4d1:	rol    DWORD PTR [eax],cl
  40a4d3:	(bad)  
  40a4d4:	mov    edi,DWORD PTR [eax+0x3]
  40a4d7:	(bad)  
  40a4d8:	cmp    al,0xd7
  40a4da:	dec    ebp
  40a4db:	lds    ecx,FWORD PTR [ebx+0x2ad8e8]
  40a4e1:	add    BYTE PTR [ebp-0x3b375],cl
  40a4e7:	adc    BYTE PTR [edx+0x1],0x55
  40a4eb:	add    BYTE PTR [ebx+0x6c8c30],cl
  40a4f1:	add    BYTE PTR [ebx-0x778afc7b],cl
  40a4f7:	mov    eax,DWORD PTR [eax]
  40a4f9:	cld    
  40a4fa:	push   0x7d
  40a4fc:	dec    DWORD PTR [ebx+0xd88c]
  40a502:	push   edx
  40a503:	mov    edx,DWORD PTR [ecx-0x4]
  40a506:	call   DWORD PTR [eax+0x7d01fc]
  40a50c:	mov    ecx,DWORD PTR [ebx+0x509000fc]
  40a512:	add    DWORD PTR [esi+0x0],edx
  40a515:	test   DWORD PTR [ebp+0x75],eax
  40a518:	call   0xc83d85a8
  40a51d:	jge    0x40a4b3
  40a51f:	mov    ebp,ebx
  40a521:	fcom   st(7)
  40a523:	add    bh,al
  40a525:	mov    ebx,DWORD PTR [eax-0x7a6f8304]
  40a52b:	add    edi,edi
  40a52d:	add    bh,bh
  40a52f:	imul   esp,ecx,0x4550d400
  40a535:	push   esi
  40a536:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40a53c:	test   BYTE PTR [ebx],dh
  40a53e:	aam    0x5
  40a540:	retf   0x4572
  40a543:	add    bl,ah
  40a545:	rcl    ebx,0x84
  40a548:	mov    DWORD PTR [ecx],0x46d1008c
  40a54e:	jl     0x40a550
  40a550:	test   edi,eax
  40a552:	jmp    esp
  40a554:	inc    DWORD PTR [eax]
  40a556:	loope  0x40a558
  40a558:	aam    0x75
  40a55a:	test   DWORD PTR [ebx+0x45fffcff],ecx
  40a560:	out    dx,al
  40a561:	mov    ebp,eax
  40a563:	mov    ah,0x85
  40a565:	add    bh,bh
  40a567:	call   0x114d06b
  40a56c:	retf   0x858b
  40a56f:	cld    
  40a570:	inc    DWORD PTR [eax+0xeb01ff]
  40a576:	out    dx,al
  40a577:	xor    BYTE PTR [ebp-0xff001e],al
  40a57d:	mov    edx,ecx
  40a57f:	cld    
  40a580:	jl     0x40a50b
  40a582:	mov    edx,0x50000001
  40a587:	add    DWORD PTR [ebp+0x45],eax
  40a58a:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40a590:	dec    DWORD PTR [ebx-0x3fd80318]
  40a596:	add    BYTE PTR [ebp-0xbf0040],dl
  40a59c:	inc    ebp
  40a59d:	xor    DWORD PTR [ebx-0x4faf0400],ecx
  40a5a3:	inc    ebp
  40a5a4:	add    DWORD PTR [ebx+0x459c00],ecx
  40a5aa:	mov    edi,edi
  40a5ac:	mov    eax,0xe80800ff
  40a5b1:	inc    ebp
  40a5b2:	sub    cl,BYTE PTR [ebx-0x47000400]
  40a5b8:	add    al,0x1
  40a5ba:	rol    BYTE PTR [eax],0x1e
  40a5bd:	jne    0x40a604
  40a5bf:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40a5c5:	inc    DWORD PTR [ecx]
  40a5c7:	call   0x85cfcc
  40a5cc:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40a5d2:	call   0x40cfd8
  40a5d7:	xor    bh,bh
  40a5d9:	push   edi
  40a5da:	adc    BYTE PTR [ebx-0x747423bb],al
  40a5e0:	loopne 0x40a5be
  40a5e2:	ret    
  40a5e3:	loopne 0x40a583
  40a5e5:	xor    DWORD PTR [edx],0x31
  40a5e8:	cmp    edi,edi
  40a5ea:	bswap  esp
  40a5ec:	rol    BYTE PTR gs:[eax],0x5
  40a5f0:	jmp    0x12ba73a
  40a5f5:	mov    eax,DWORD PTR [ebp-0x4]
  40a5f8:	add    BYTE PTR [eax+0xff0100],bh
  40a5fe:	cld    
  40a5ff:	jne    0x40a67e
  40a601:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40a607:	mov    DWORD PTR [ecx],0x30500000
  40a60d:	inc    ebp
  40a60e:	add    BYTE PTR [ebx+0x459850],cl
  40a614:	mov    edi,edi
  40a616:	test   al,0xff
  40a618:	add    BYTE PTR [eax],cl
  40a61a:	inc    DWORD PTR [ebp-0x18]
  40a61d:	jmp    DWORD PTR [esi]
  40a61f:	fadd   QWORD PTR [eax]
  40a621:	jge    0x40a670
  40a623:	adc    BYTE PTR [ebx+0x459cb9],cl
  40a629:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40a62f:	sahf   
  40a630:	mov    eax,0x30132
  40a635:	lea    esi,[ebp+0x2c]
  40a638:	xor    edi,edi
  40a63a:	(bad)  
  40a63b:	call   0x13fcfa8
  40a640:	call   0x134d0d0
  40a645:	jne    0x40a5d2
  40a647:	xor    edi,esp
  40a649:	add    eax,DWORD PTR [eax+0xc018d]
  40a64f:	push   DWORD PTR [eax]
  40a651:	call   0xc9cfad
  40a656:	int3   
  40a657:	inc    DWORD PTR [ebp-0x14]
  40a65a:	mov    ecx,DWORD PTR [ebp-0x28]
  40a65d:	xor    eax,DWORD PTR [eax]
  40a65f:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40a665:	(bad)  
  40a666:	xchg   ebp,eax
  40a667:	in     al,0xff
  40a669:	add    bh,bh
  40a66b:	add    BYTE PTR [esi],al
  40a66d:	inc    ebp
  40a66e:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  40a674:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff62]
  40a67b:	mov    edi,edi
  40a67d:	or     BYTE PTR [eax],cl
  40a67f:	inc    ebp
  40a680:	test   DWORD PTR gs:[eax],eax
  40a683:	je     0x40a6ca
  40a685:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40a68b:	xor    edx,DWORD PTR [eax-0x73]
  40a68e:	push   ebp
  40a68f:	or     BYTE PTR [ebp+0x21007572],al
  40a695:	inc    ebp
  40a696:	in     al,dx
  40a697:	mov    ebp,DWORD PTR [eax]
  40a699:	mov    esp,0x628bc345
  40a69e:	fmul   st,st(5)
  40a6a0:	add    BYTE PTR [ebx],ch
  40a6a2:	mov    eax,DWORD PTR [ebx]
  40a6a4:	cld    
  40a6a5:	loopne 0x40a667
  40a6a7:	inc    ebp
  40a6a8:	push   ebp
  40a6a9:	cmp    ebp,eax
  40a6ab:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  40a6b2:	cld    
  40a6b3:	fadd   DWORD PTR [eax+0x3b014d]
  40a6b9:	jne    0x40a6eb
  40a6bb:	push   0xf8898557
  40a6c0:	in     al,dx
  40a6c1:	jne    0x40a708
  40a6c3:	lea    eax,[ebx+0x72e8dcc8]
  40a6c9:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  40a6cf:	jmp    0x40a704
  40a6d1:	mov    edi,DWORD PTR [edi+0x4572bc]
  40a6d7:	xor    eax,edi
  40a6d9:	adc    DWORD PTR [ebp-0xcd0062],0x8b9231
  40a6e3:	rcl    BYTE PTR [eax-0x40],1
  40a6e6:	inc    ebp
  40a6e7:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40a6ef:	inc    ebp
  40a6f0:	xchg   ebp,eax
  40a6f1:	ud0    ebp,DWORD PTR [ebx]
  40a6f4:	inc    DWORD PTR [eax]
  40a6f6:	jl     0x40a76e
  40a6f8:	add    BYTE PTR [edx+0x1f558050],cl
  40a6fe:	mov    ecx,DWORD PTR [esp+esi*8]
  40a701:	inc    eax
  40a702:	retf   
  40a703:	inc    ebp
  40a704:	iret   
  40a705:	jb     0x40a6cf
  40a707:	mov    eax,DWORD PTR [edi]
  40a709:	enter  0x4545,0x1
  40a70d:	xor    eax,0x898b9c00
  40a712:	mov    esp,0x33344df0
  40a717:	pushf  
  40a718:	lea    ecx,[ecx+0x4d72e008]
  40a71e:	add    BYTE PTR [ebx],dh
  40a720:	inc    ebp
  40a721:	mov    DWORD PTR [ebx-0x3f611b4c],ecx
  40a727:	xor    dl,BYTE PTR [edx]
  40a729:	add    eax,DWORD PTR [ebp-0x77]
  40a72c:	mov    eax,esp
  40a72e:	fmul   DWORD PTR [ebp-0x3d]
  40a731:	xor    eax,DWORD PTR [ebx+eax*1+0x832899e]
  40a738:	mov    DWORD PTR [ebp-0x28],eax
  40a73b:	aad    0x45
  40a73d:	pushf  
  40a73e:	xor    eax,edi
  40a740:	mov    ecx,0xff858db0
  40a745:	clc    
  40a746:	enter  0x4d45,0x32
  40a74a:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40a751:	test   esi,edi
  40a753:	clc    
  40a754:	inc    DWORD PTR [ebp+0x45]
  40a757:	xor    BYTE PTR [ebx-0x3738f764],cl
  40a75d:	test   al,0x16
  40a75f:	test   DWORD PTR ds:0xff459cf8,esi
  40a765:	ds cld 
  40a767:	pushf  
  40a768:	inc    ebp
  40a769:	mov    edx,DWORD PTR [eax-0x28]
  40a76c:	outs   dx,DWORD PTR ds:[esi]
  40a76d:	push   ebp
  40a76e:	add    BYTE PTR [ebx],dh
  40a770:	mov    DWORD PTR [ebx],eax
  40a772:	sar    BYTE PTR [ebx],1
  40a774:	adc    BYTE PTR [edi],cl
  40a776:	dec    ebp
  40a777:	adc    al,0x8b
  40a779:	add    al,dl
  40a77b:	jmp    0x101a94b
  40a780:	jb     0x40a7cf
  40a782:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40a788:	xor    ecx,DWORD PTR [ebp+0x3b]
  40a78b:	xor    ecx,DWORD PTR [edi]
  40a78d:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40a791:	(bad)  
  40a793:	clc    
  40a794:	enter  0x8400,0x8b
  40a798:	pop    es
  40a799:	mov    al,0x0
  40a79b:	push   ebp
  40a79c:	push   cs
  40a79d:	xor    ecx,eax
  40a79f:	xor    esp,ecx
  40a7a1:	add    ebp,DWORD PTR [eax]
  40a7a3:	add    esi,DWORD PTR [eax]
  40a7a5:	(bad)  
  40a7a7:	retf   0x55c8
  40a7aa:	repnz mov eax,DWORD PTR [ebp-0x10]
  40a7ae:	(bad)  
  40a7af:	cli    
  40a7b0:	fdivr  st,st(1)
  40a7b2:	test   DWORD PTR [eax+edi*8],ecx
  40a7b5:	dec    ebp
  40a7b6:	inc    ebp
  40a7b7:	xor    edi,DWORD PTR [eax-0x7167afd]
  40a7bd:	add    BYTE PTR [ebp+0x0],al
  40a7c0:	mov    ecx,DWORD PTR [ebp-0x28]
  40a7c3:	mov    ecx,ebx
  40a7c5:	clc    
  40a7c6:	jne    0x40a793
  40a7c8:	mov    esi,0xd672d3
  40a7cd:	into   
  40a7ce:	into   
  40a7cf:	scas   eax,DWORD PTR es:[edi]
  40a7d0:	dec    ebp
  40a7d1:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40a7d7:	sub    ecx,esi
  40a7d9:	cmp    ecx,DWORD PTR [ebp+0x77]
  40a7dc:	(bad)  
  40a7dd:	mov    edi,eax
  40a7df:	mov    al,0x85
  40a7e1:	mov    eax,edi
  40a7e3:	add    BYTE PTR [ebp-0x75],al
  40a7e6:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40a7ed:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40a7f3:	rdtsc  
  40a7f5:	retf   0x559c
  40a7f8:	(bad)  
  40a7f9:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40a800:	inc    ebp
  40a801:	add    eax,0xeb9c4d3f
  40a806:	(bad)  
  40a807:	mov    ecx,esp
  40a809:	lods   al,BYTE PTR ds:[esi]
  40a80a:	test   DWORD PTR [ebp-0x8],edx
  40a80d:	xor    ecx,DWORD PTR [ebp+0x33]
  40a810:	mov    eax,DWORD PTR [ebx]
  40a812:	lock add ecx,ebx
  40a815:	bswap  esi
  40a817:	retf   0x55d1
  40a81a:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40a820:	jmp    0x40a81b
  40a822:	add    BYTE PTR ds:0xebc44d8b,al
  40a828:	push   ebp
  40a829:	mov    ebp,DWORD PTR [ebx]
  40a82b:	test   al,0x8b
  40a82d:	push   ebp
  40a82e:	clc    
  40a82f:	xor    ecx,ebx
  40a831:	xor    ecx,esi
  40a833:	add    edx,ecx
  40a835:	add    eax,DWORD PTR [edx+0xca010f]
  40a83b:	push   ebp
  40a83c:	dec    ebp
  40a83d:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40a843:	stc    
  40a844:	rol    DWORD PTR ds:0xebce4dd6,cl
  40a84a:	scas   eax,DWORD PTR es:[edi]
  40a84b:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40a851:	xor    ebp,DWORD PTR [ebx]
  40a853:	xor    edi,DWORD PTR [ebx]
  40a855:	add    esi,DWORD PTR [edi+0x3]
  40a858:	mov    ecx,DWORD PTR [edi]
  40a85a:	clc    
  40a85b:	retf   0x55cb
  40a85e:	into   
  40a85f:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40a866:	mov    eax,0x3376554d
  40a86b:	mov    esi,DWORD PTR [ebx]
  40a86d:	int3   
  40a86e:	add    edx,DWORD PTR [ebp+0x3]
  40a871:	xor    ecx,DWORD PTR [edi]
  40a873:	xor    ecx,edx
  40a875:	add    edx,DWORD PTR [ebp+0x3]
  40a878:	mov    ecx,DWORD PTR [edi]
  40a87a:	lock retf 0x4dfa
  40a87e:	stc    
  40a87f:	mov    ecx,DWORD PTR [eax]
  40a881:	or     BYTE PTR [ebp+0x4d],cl
  40a884:	jmp    0x104a914
  40a889:	dec    ebp
  40a88a:	dec    ebp
  40a88b:	(bad)  
  40a88c:	mov    ebx,esp
  40a88e:	clc    
  40a88f:	test   ebx,ecx
  40a891:	clc    
  40a892:	ror    DWORD PTR [ebp-0x2a],cl
  40a895:	mov    esi,ecx
  40a897:	call   0x33cbee4b
  40a89c:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40a8a3:	retf   
  40a8a4:	ja     0x40a874
  40a8a6:	mov    ebp,DWORD PTR [eax-0x48]
  40a8a9:	dec    ebp
  40a8aa:	xor    ecx,DWORD PTR [di+0x3]
  40a8ae:	mov    esp,esp
  40a8b0:	clc    
  40a8b1:	push   ebp
  40a8b2:	retf   
  40a8b3:	mov    dl,bl
  40a8b5:	adc    esi,edx
  40a8b7:	jb     0x40a887
  40a8b9:	add    BYTE PTR [edi-0x3b7474b3],ch
  40a8bf:	call   0x4d6c7441
  40a8c4:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40a8ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8cb:	sahf   
  40a8cc:	inc    ebp
  40a8cd:	xor    cl,BYTE PTR [ebp-0x78]
  40a8d0:	mov    edx,edi
  40a8d2:	clc    
  40a8d3:	dec    ebp
  40a8d4:	retf   
  40a8d5:	mov    edx,ebx
  40a8d7:	call   0x560f7cb2
  40a8dc:	scas   eax,DWORD PTR es:[edi]
  40a8dd:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40a8e3:	sahf   
  40a8e4:	sub    esi,DWORD PTR [edx]
  40a8e6:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40a8ec:	lods   al,BYTE PTR ds:[esi]
  40a8ed:	xor    esp,DWORD PTR [ebx]
  40a8ef:	add    ecx,DWORD PTR [ebp-0x1c]
  40a8f2:	mov    edi,DWORD PTR [ebp-0x8]
  40a8f5:	mov    bl,cl
  40a8f7:	cmp    dl,bl
  40a8f9:	jb     0x40a8c9
  40a8fb:	add    dh,dl
  40a8fd:	dec    ebp
  40a8fe:	scas   eax,DWORD PTR es:[edi]
  40a8ff:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40a905:	shr    DWORD PTR [ebx],cl
  40a907:	into   
  40a908:	cmp    edx,esi
  40a90a:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40a910:	dec    ebp
  40a911:	dec    ebp
  40a912:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40a918:	retf   
  40a919:	xor    edx,esi
  40a91b:	add    ecx,esi
  40a91d:	imul   ecx,edx
  40a920:	mov    DWORD PTR [ebp+0x8],edx
  40a923:	xor    ecx,DWORD PTR [ebp+0x2b]
  40a926:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40a92c:	add    esi,DWORD PTR [ebx]
  40a92e:	mov    ah,0x3
  40a930:	inc    ebp
  40a931:	sysexit 
  40a933:	xlat   BYTE PTR ds:[ebx]
  40a934:	pushf  
  40a935:	jge    0x40a8c0
  40a937:	xor    ebx,eax
  40a939:	sub    eax,DWORD PTR [ebp-0x73]
  40a93c:	(bad)  
  40a93d:	cmp    al,al
  40a93f:	jb     0x40a8c6
  40a941:	add    al,bh
  40a943:	ror    DWORD PTR [ebp-0x7a],1
  40a946:	xor    edi,edi
  40a948:	add    edi,edi
  40a94a:	jmp    0x40a999
  40a94c:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40a952:	dec    ebp
  40a953:	into   
  40a954:	mov    ebp,DWORD PTR [edi-0x23737428]
  40a95a:	sahf   
  40a95b:	shl    DWORD PTR [edx],cl
  40a95d:	retf   0x5588
  40a960:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40a966:	add    eax,DWORD PTR [eax]
  40a968:	in     al,0x4d
  40a96a:	push   ebp
  40a96b:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40a971:	bound  eax,QWORD PTR [eax]
  40a973:	int    0x4d
  40a975:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40a97b:	dec    ebp
  40a97c:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40a982:	jge    0x40a952
  40a984:	mov    BYTE PTR [edi+0xf723b3a],ch
  40a98a:	add    cl,dh
  40a98c:	dec    ebp
  40a98d:	dec    DWORD PTR [ebx-0x2c032375]
  40a993:	adc    BYTE PTR [ebp+0x1],0x8b
  40a997:	add    al,bl
  40a999:	jge    0x40a927
  40a99b:	push   0xffffff9e
  40a99d:	push   0x8b3032
  40a9a2:	shl    BYTE PTR [ebp+0x55],0x6a
  40a9a6:	xor    edi,edi
  40a9a8:	xor    edx,DWORD PTR [ebx+eax*1]
  40a9ab:	inc    ebp
  40a9ac:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40a9b2:	dec    ebp
  40a9b3:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40a9b9:	jbe    0x40a946
  40a9bb:	mov    ebp,esp
  40a9bd:	ror    bl,1
  40a9bf:	enter  0x14ce,0xaf
  40a9c3:	dec    DWORD PTR [ebx-0x2cef17f8]
  40a9c9:	push   ebp
  40a9ca:	retf   0x5540
  40a9cd:	push   ebp
  40a9ce:	mov    esi,DWORD PTR [edx-0x1c]
  40a9d1:	mov    edx,ebx
  40a9d3:	cld    
  40a9d4:	(bad)  
  40a9d5:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40a9dc:	sti    
  40a9dd:	add    dh,cl
  40a9df:	push   0xffffff94
  40a9e1:	call   FWORD PTR [esi+0x3b5032d0]
  40a9e7:	mov    ecx,DWORD PTR [edi]
  40a9e9:	int3   
  40a9ea:	pop    esi
  40a9eb:	inc    ebp
  40a9ec:	dec    DWORD PTR [ecx+0x45e8c88b]
  40a9f2:	push   ebp
  40a9f3:	xor    esi,DWORD PTR [ebx]
  40a9f5:	mov    DWORD PTR [ebx],0xcacc0f9c
  40a9fb:	aas    
  40a9fc:	push   ebp
  40a9fd:	inc    ebp
  40a9fe:	xor    eax,esp
  40aa00:	add    eax,esp
  40aa02:	mov    eax,DWORD PTR [ebx]
  40aa04:	(bad)  
  40aa05:	jmp    0x40a993
  40aa07:	mov    bl,BYTE PTR [esi-0x7674cdfb]
  40aa0d:	rol    ah,1
  40aa0f:	mov    esi,0xf133104d
  40aa14:	mov    edx,0xff358d80
  40aa19:	mov    dh,0xd1
  40aa1b:	cmp    edx,DWORD PTR [ebp+0xf]
  40aa1e:	mov    eax,DWORD PTR [edx-0x20]
  40aa21:	add    BYTE PTR [ebp-0x75],bh
  40aa24:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40aa2b:	sahf   
  40aa2c:	retf   0x8632
  40aa2f:	cmp    ebp,0x8
  40aa32:	call   ebx
  40aa34:	inc    ebp
  40aa35:	inc    ebp
  40aa36:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40aa3c:	mov    esi,DWORD PTR ds:0xc7049cc8
  40aa42:	add    al,al
  40aa44:	add    bl,al
  40aa46:	(bad)  
  40aa47:	clc    
  40aa48:	enter  0x45,0x35
  40aa4c:	push   eax
  40aa4d:	pushf  
  40aa4e:	mov    edi,eax
  40aa50:	int3   
  40aa51:	or     al,al
  40aa53:	test   DWORD PTR [edi],edi
  40aa55:	clc    
  40aa56:	gs inc ebp
  40aa58:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40aa5e:	push   ss
  40aa5f:	xor    ecx,DWORD PTR [ebp+0x3]
  40aa62:	sub    edx,DWORD PTR [ecx-0x76]
  40aa65:	dec    ebp
  40aa66:	add    DWORD PTR [ebx+0x88d845],ecx
  40aa6c:	mov    esi,DWORD PTR [ebx]
  40aa6e:	or     BYTE PTR [ebx],al
  40aa70:	cmp    edx,DWORD PTR [ecx-0x38]
  40aa73:	dec    ebp
  40aa74:	out    dx,eax
  40aa75:	xor    eax,DWORD PTR [ebp+0x3]
  40aa78:	mov    edx,DWORD PTR [ecx-0x28]
  40aa7b:	dec    ebp
  40aa7c:	add    BYTE PTR [ebx],dh
  40aa7e:	push   0x518003
  40aa83:	push   eax
  40aa84:	add    BYTE PTR [ebx-0x300748b],cl
  40aa8a:	sbb    BYTE PTR [ebp+0x45],cl
  40aa8d:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40aa93:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40aa99:	dec    ebp
  40aa9a:	inc    ebp
  40aa9b:	xor    eax,esp
  40aa9d:	add    eax,esp
  40aa9f:	push   ecx
  40aaa0:	(bad)  
  40aaa1:	dec    ebp
  40aaa2:	mov    al,ds:0xc9e031ff
  40aaa7:	retf   
  40aaa8:	(bad)  
  40aaa9:	into   
  40aaaa:	sub    bh,bh
  40aaac:	dec    esp
  40aaad:	adc    al,0x9c
  40aaaf:	inc    ebp
  40aab0:	push   ebp
  40aab1:	test   DWORD PTR [edi],ecx
  40aab3:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab6ff80]
  40aaba:	jmp    0xc9b9b9ce
  40aabf:	add    cl,dl
  40aac1:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40aacb:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40aad1:	rol    BYTE PTR [eax],0x57
  40aad4:	clc    
  40aad5:	bound  esi,QWORD PTR [edx+0x7]
  40aad8:	mov    eax,DWORD PTR [ebp-0x30]
  40aadb:	xor    al,0x40
  40aadd:	sub    al,0xc7
  40aadf:	mov    ah,ch
  40aae1:	add    DWORD PTR [ebp+0x4534f845],eax
  40aae7:	sub    al,0x86
  40aae9:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40aaf0:	mov    ch,0xff
  40aaf2:	clc    
  40aaf3:	add    DWORD PTR [ebp+0x60],0x31
  40aaf7:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40aafe:	inc    ebp
  40aaff:	dec    DWORD PTR [ebx-0x341ff701]
  40ab05:	test   esi,ecx
  40ab07:	dec    DWORD PTR [ebx-0x7f8a3301]
  40ab0d:	push   eax
  40ab0e:	add    DWORD PTR [ebp+0x0],eax
  40ab11:	dec    ebx
  40ab13:	or     al,0xce
  40ab15:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40ab1c:	into   
  40ab1d:	add    BYTE PTR [ebx-0x34ff1400],cl
  40ab23:	mov    esi,ecx
  40ab25:	sar    bh,0x45
  40ab28:	adc    al,0x8b
  40ab2a:	clc    
  40ab2b:	fadd   DWORD PTR [ebp+0x0]
  40ab2e:	mov    ebp,DWORD PTR [edx+0x8]
  40ab31:	push   edi
  40ab32:	adc    BYTE PTR [eax+0x1],0x83
  40ab36:	add    al,al
  40ab38:	retf   
  40ab39:	mov    ecx,esi
  40ab3b:	cld    
  40ab3c:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40ab42:	into   
  40ab43:	add    BYTE PTR [ebx+0x756aec00],cl
  40ab49:	jne    0x40ab7e
  40ab4b:	inc    DWORD PTR [ebx]
  40ab4d:	rcl    BYTE PTR [ecx+0x50],1
  40ab50:	push   eax
  40ab51:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40ab57:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40ab5e:	sar    bh,0x84
  40ab61:	or     BYTE PTR [ebx],al
  40ab63:	push   eax
  40ab64:	add    BYTE PTR [ebx+0x4532c845],cl
  40ab6a:	pushf  
  40ab6b:	xor    eax,0x89b49cc7
  40ab70:	test   eax,ebp
  40ab72:	clc    
  40ab73:	inc    ebp
  40ab74:	inc    ebp
  40ab75:	mov    DWORD PTR [eax+eax*8],esi
  40ab78:	sub    al,0x34
  40ab7a:	mov    BYTE PTR [ebx+ecx*4+0x57d8ec89],bl
  40ab81:	dec    ebp
  40ab82:	bound  esi,QWORD PTR [ebx]
  40ab84:	inc    edi
  40ab85:	add    ecx,DWORD PTR [ebx+0x57f4b489]
  40ab8b:	dec    ebp
  40ab8c:	bound  esi,QWORD PTR [ebx]
  40ab8e:	inc    edi
  40ab8f:	add    eax,DWORD PTR [ebx-0xf7a377]
  40ab95:	inc    ebp
  40ab96:	add    ch,dl
  40ab98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab99:	pushf  
  40ab9a:	inc    edi
  40ab9c:	dec    esp
  40ab9e:	lea    eax,[ebp+0x45fff860]
  40aba4:	push   eax
  40aba5:	xor    dh,BYTE PTR [ebp-0x64]
  40aba8:	(bad)  
  40aba9:	(bad)  
  40abaa:	pop    esp
  40abab:	lods   al,BYTE PTR ds:[esi]
  40abac:	inc    DWORD PTR [ebp+0x4508f8ff]
  40abb2:	mov    esi,DWORD PTR [eax]
  40abb4:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40abbb:	test   DWORD PTR [edi-0x8],edx
  40abbe:	inc    esi
  40abbf:	inc    ebp
  40abc0:	add    BYTE PTR [esi],bh
  40abc2:	push   0x8b809c
  40abc7:	in     al,dx
  40abc8:	inc    ebp
  40abc9:	push   ebp
  40abca:	mov    esi,DWORD PTR [ebx]
  40abcc:	cld    
  40abcd:	add    eax,DWORD PTR [eax+0xf013b]
  40abd3:	adc    al,0x0
  40abd5:	add    bh,bh
  40abd7:	jmp    0xbdacf4
  40abdc:	add    BYTE PTR [ebp+0x45],cl
  40abdf:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40abe5:	dec    ebp
  40abe6:	push   0x38033
  40abeb:	cmp    eax,DWORD PTR [eax]
  40abed:	unpcklps xmm7,xmm0
  40abf0:	jne    0x40abf2
  40abf2:	dec    DWORD PTR [ebx+0x5545cc18]
  40abf8:	mov    DWORD PTR [ebx],esi
  40abfa:	shl    BYTE PTR [ebx],1
  40abfc:	inc    ebp
  40abfd:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40ac03:	retf   0x5575
  40ac06:	dec    DWORD PTR [ebx-0x5ba17e8]
  40ac0c:	(bad)  
  40ac0d:	stc    
  40ac0e:	in     al,dx
  40ac0f:	or     al,0x85
  40ac11:	dec    ebp
  40ac12:	clc    
  40ac13:	xor    eax,DWORD PTR [ebp+0x3]
  40ac16:	mov    ebp,ecx
  40ac18:	rol    BYTE PTR [eax],1
  40ac1a:	inc    ebp
  40ac1b:	add    BYTE PTR [eax-0x7747ab3],bh
  40ac21:	clc    
  40ac22:	inc    ebp
  40ac23:	retf   
  40ac24:	mov    edx,ebx
  40ac26:	in     al,dx
  40ac27:	(bad)  
  40ac28:	retf   
  40ac29:	into   
  40ac2a:	into   
  40ac2b:	scas   eax,DWORD PTR es:[edi]
  40ac2c:	dec    ebp
  40ac2d:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40ac33:	sub    ecx,esi
  40ac35:	cmp    ecx,DWORD PTR [ebp+0x77]
  40ac38:	(bad)  
  40ac39:	mov    edi,eax
  40ac3b:	int3   
  40ac3c:	test   DWORD PTR [ecx-0x74baff08],ecx
  40ac42:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40ac49:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40ac4f:	rdtsc  
  40ac51:	retf   0x559c
  40ac54:	(bad)  
  40ac55:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40ac5c:	inc    ebp
  40ac5d:	add    eax,0xeb9c4d3f
  40ac62:	(bad)  
  40ac63:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40ac69:	xor    ecx,DWORD PTR [ebp+0x33]
  40ac6c:	mov    eax,DWORD PTR [ebx]
  40ac6e:	call   0xce507776
  40ac73:	retf   0x55d1
  40ac76:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40ac7c:	jmp    0x40ac77
  40ac7e:	add    BYTE PTR ds:0xebf44d8b,al
  40ac84:	push   ebp
  40ac85:	mov    ebp,DWORD PTR [ebx]
  40ac87:	mov    eax,0x33f8558b
  40ac8c:	retf   
  40ac8d:	xor    ecx,esi
  40ac8f:	add    edx,ecx
  40ac91:	add    eax,DWORD PTR [edx+0xca010f]
  40ac97:	push   ebp
  40ac98:	dec    ebp
  40ac99:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40ac9f:	stc    
  40aca0:	rol    DWORD PTR ds:0xebce4dd6,cl
  40aca6:	scas   eax,DWORD PTR es:[edi]
  40aca7:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40acad:	xor    ebp,DWORD PTR [ebx]
  40acaf:	xor    edi,DWORD PTR [ebx]
  40acb1:	add    esi,DWORD PTR [edi+0x3]
  40acb4:	mov    ecx,DWORD PTR [edi]
  40acb6:	clc    
  40acb7:	retf   0x55cb
  40acba:	into   
  40acbb:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40acc2:	test   al,0x4d
  40acc4:	push   ebp
  40acc5:	jbe    0x40acfa
  40acc7:	mov    esi,DWORD PTR [ebx]
  40acc9:	mov    al,0x3
  40accb:	push   ebp
  40accc:	add    esi,DWORD PTR [ebx]
  40acce:	rdpmc  
  40acd0:	retf   0x5503
  40acd3:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40acd9:	dec    ebp
  40acda:	stc    
  40acdb:	mov    ecx,DWORD PTR [eax]
  40acdd:	or     BYTE PTR [ebp+0x4d],cl
  40ace0:	jmp    0x134ad70
  40ace5:	dec    ebp
  40ace6:	dec    ebp
  40ace7:	(bad)  
  40ace8:	mov    ebx,esp
  40acea:	clc    
  40aceb:	test   ebx,ecx
  40aced:	clc    
  40acee:	ror    DWORD PTR [ebp-0x2a],cl
  40acf1:	mov    esi,ecx
  40acf3:	lock scas eax,DWORD PTR es:[edi]
  40acf5:	inc    ebp
  40acf6:	mov    esi,DWORD PTR [ebx]
  40acf8:	hlt    
  40acf9:	pushf  
  40acfa:	jge    0x40ac87
  40acfc:	sub    ebx,esp
  40acfe:	cmp    ecx,ebx
  40ad00:	ja     0x40acd0
  40ad02:	mov    ebp,DWORD PTR [eax-0x58]
  40ad05:	dec    ebp
  40ad06:	xor    ecx,DWORD PTR [di+0x3]
  40ad0a:	mov    esp,esp
  40ad0c:	clc    
  40ad0d:	push   ebp
  40ad0e:	retf   
  40ad0f:	mov    dl,bl
  40ad11:	adc    esi,edx
  40ad13:	jb     0x40ace3
  40ad15:	add    BYTE PTR [edi-0xb7474b3],ch
  40ad1b:	lock jge 0x40ace9
  40ad1e:	sub    ecx,DWORD PTR [ebp+0x3b]
  40ad21:	mov    esi,DWORD PTR [edi-0x20]
  40ad24:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459e]
  40ad2b:	mov    BYTE PTR [ebx-0x34b20729],cl
  40ad31:	mov    edx,ebx
  40ad33:	lock (bad) 
  40ad35:	ror    esi,cl
  40ad37:	push   ebp
  40ad38:	scas   eax,DWORD PTR es:[edi]
  40ad39:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40ad3f:	sahf   
  40ad40:	sub    esi,DWORD PTR [edx]
  40ad42:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40ad48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad49:	xor    esp,DWORD PTR [ebx]
  40ad4b:	add    ecx,DWORD PTR [ebp-0x1c]
  40ad4e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad51:	mov    bl,cl
  40ad53:	cmp    dl,bl
  40ad55:	jb     0x40ad25
  40ad57:	add    dh,dl
  40ad59:	dec    ebp
  40ad5a:	scas   eax,DWORD PTR es:[edi]
  40ad5b:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40ad61:	shr    DWORD PTR [ebx],cl
  40ad63:	into   
  40ad64:	cmp    edx,esi
  40ad66:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40ad6c:	dec    ebp
  40ad6d:	dec    ebp
  40ad6e:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40ad74:	retf   
  40ad75:	xor    edx,esi
  40ad77:	add    ecx,esi
  40ad79:	imul   ecx,edx
  40ad7c:	mov    DWORD PTR [ebp+0x8],edx
  40ad7f:	xor    ecx,DWORD PTR [ebp+0x2b]
  40ad82:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40ad88:	add    esi,DWORD PTR [ebx]
  40ad8a:	rol    BYTE PTR [ebx],0x45
  40ad8d:	sysexit 
  40ad8f:	xlat   BYTE PTR ds:[ebx]
  40ad90:	pushf  
  40ad91:	jge    0x40ad1c
  40ad93:	xor    esp,eax
  40ad95:	sub    eax,DWORD PTR [ebp-0x73]
  40ad98:	(bad)  
  40ad99:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40ada0:	dec    ebp
  40ada1:	xchg   BYTE PTR [ebx],dh
  40ada3:	inc    DWORD PTR [ebx]
  40ada5:	(bad)  
  40ada6:	jmp    0x40adf5
  40ada8:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40adae:	dec    ebp
  40adaf:	into   
  40adb0:	mov    ebp,DWORD PTR [edi-0x23737420]
  40adb6:	sahf   
  40adb7:	shl    DWORD PTR [edx],cl
  40adb9:	retf   0x5588
  40adbc:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40adc2:	add    eax,DWORD PTR [eax]
  40adc4:	in     al,0x4d
  40adc6:	push   ebp
  40adc7:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40adcd:	bound  eax,QWORD PTR [eax]
  40adcf:	int    0x4d
  40add1:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40add7:	dec    ebp
  40add8:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40adde:	jge    0x40adae
  40ade0:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ade6:	add    cl,dh
  40ade8:	dec    ebp
  40ade9:	dec    DWORD PTR [ebx-0x2c032301]
  40adef:	inc    ebp
  40adf0:	push   ebp
  40adf1:	dec    DWORD PTR [ebx-0x73ff1f34]
  40adf7:	lea    ebx,[esi-0x7400cdac]
  40adfd:	push   eax
  40adfe:	mov    ah,0x45
  40ae00:	push   ebp
  40ae01:	mov    esi,DWORD PTR [ebx]
  40ae03:	les    esi,FWORD PTR [ebx]
  40ae05:	add    BYTE PTR [ebx],al
  40ae07:	inc    DWORD PTR [ebx]
  40ae09:	mov    ecx,DWORD PTR [edi]
  40ae0b:	cld    
  40ae0c:	retf   0x4d80
  40ae0f:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40ae15:	jne    0x40ada2
  40ae17:	(bad)  
  40ae18:	in     al,dx
  40ae19:	ror    bl,1
  40ae1b:	pop    edi
  40ae1c:	into   
  40ae1d:	add    BYTE PTR [edi-0xf2f7475],ch
  40ae23:	not    bl
  40ae25:	adc    al,0xca
  40ae27:	inc    ebp
  40ae28:	push   ebp
  40ae29:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40ae2f:	push   0xaf80d6
  40ae34:	mov    eax,DWORD PTR [eax]
  40ae36:	fdiv   st(7),st
  40ae38:	sti    
  40ae39:	sbb    dh,cl
  40ae3b:	pop    esi
  40ae3c:	xchg   esp,eax
  40ae3d:	leave  
  40ae3e:	sahf   
  40ae3f:	add    al,0x32
  40ae41:	push   ebp
  40ae42:	cmp    ebp,esp
  40ae44:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40ae48:	dec    DWORD PTR [ecx-0x740f0375]
  40ae4e:	push   ebp
  40ae4f:	cld    
  40ae50:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40ae56:	retf   0x558b
  40ae59:	clc    
  40ae5a:	xor    esi,eax
  40ae5c:	add    esi,DWORD PTR [ebp-0x75]
  40ae5f:	(bad)  
  40ae60:	hlt    
  40ae61:	or     cl,BYTE PTR [esi+eax*8-0x39cdf762]
  40ae68:	mov    DWORD PTR [edx],ecx
  40ae6a:	hlt    
  40ae6b:	(bad)  
  40ae6c:	dec    ebp
  40ae6d:	add    dh,BYTE PTR [ebx]
  40ae6f:	leave  
  40ae70:	mov    edx,0xffec8d55
  40ae75:	push   ecx
  40ae76:	rol    DWORD PTR [ebp+0x55],1
  40ae79:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40ae7f:	mov    eax,0xf8030b33
  40ae84:	lar    ecx,di
  40ae87:	push   ebp
  40ae88:	retf   0x863b
  40ae8b:	jne    0x40ae8a
  40ae8d:	mov    edi,edi
  40ae8f:	or     BYTE PTR [ebp+0x41],dh
  40ae92:	mov    esp,eax
  40ae94:	cld    
  40ae95:	inc    eax
  40ae96:	mov    al,0x29
  40ae98:	add    DWORD PTR [ecx+0x0],eax
  40ae9b:	loope  0x40ae22
  40ae9d:	inc    ecx
  40ae9e:	call   eax
  40aea0:	inc    edx
  40aea2:	mov    eax,DWORD PTR [eax]
  40aea4:	cld    
  40aea5:	mov    eax,DWORD PTR [eax+0x8d0151]
  40aeab:	clc    
  40aeac:	xor    BYTE PTR [ebp+0x45],al
  40aeaf:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40aeb5:	loopne 0x40aeb6
  40aeb7:	mov    edi,edi
  40aeb9:	mov    ecx,eax
  40aebb:	clc    
  40aebc:	jne    0x40ae8e
  40aebe:	call   0x81c1c7
  40aec3:	sub    DWORD PTR [ebp+0x45],esi
  40aec6:	test   esi,eax
  40aec8:	je     0x40aecb
  40aeca:	mov    eax,esi
  40aecc:	cld    
  40aecd:	or     DWORD PTR [eax+0x401c9],eax
  40aed3:	push   ebp
  40aed4:	add    ah,ch
  40aed6:	add    BYTE PTR [ecx+0x6a],dl
  40aed9:	inc    ebp
  40aeda:	push   esi
  40aedb:	mov    DWORD PTR [eax-0x4],edx
  40aede:	pop    edi
  40aedf:	mov    ebx,DWORD PTR [ebx-0x4]
  40aee2:	ret    0xbe
  40aee5:	push   es
  40aee6:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40aeec:	clc    
  40aeed:	lock inc ebp
  40aeef:	jne    0x40af47
  40aef1:	(bad)  
  40aef2:	jne    0x40aef8
  40aef4:	mov    eax,0xf841ba66
  40aef9:	rol    BYTE PTR [esi],1
  40aefb:	(bad)  
  40aefc:	jne    0x40af2f
  40aefe:	cmp    eax,ebx
  40af00:	pop    esi
  40af01:	mov    ecx,DWORD PTR [eax]
  40af03:	push   ecx
  40af04:	inc    ecx
  40af05:	lea    edi,[eax+edi*8+0x42]
  40af09:	inc    ebp
  40af0a:	ror    DWORD PTR [ebx-0x408303be],0x41
  40af11:	xchg   edx,ebp
  40af13:	mov    ebx,eax
  40af15:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40af1b:	or     edi,eax
  40af1d:	inc    ebp
  40af1e:	inc    ebp
  40af1f:	(bad)  
  40af20:	mov    ecx,DWORD PTR [eax]
  40af22:	cld    
  40af23:	(bad)  
  40af24:	jmp    0x40af27
  40af26:	mov    eax,esi
  40af28:	mov    DWORD PTR ds:0x4f8c98b,eax
  40af2e:	rcl    BYTE PTR [esi+0xf],1
  40af31:	iret   
  40af32:	inc    ebp
  40af33:	leave  
  40af34:	(bad)  
  40af35:	dec    DWORD PTR [ecx]
  40af37:	mov    eax,esi
  40af39:	mov    eax,DWORD PTR [edi]
  40af3b:	mov    dh,0xd1
  40af3e:	push   es
  40af3f:	nop
  40af40:	(bad)  
  40af41:	inc    DWORD PTR [ebx]
  40af43:	push   esi
  40af44:	leave  
  40af45:	iret   
  40af46:	add    al,0x46
  40af48:	push   ebp
  40af49:	in     eax,0xec
  40af4b:	push   ebp
  40af4c:	push   ecx
  40af4d:	inc    DWORD PTR [ebp+0x56]
  40af50:	mov    DWORD PTR [esi-0x4],eax
  40af53:	loope  0x40afaa
  40af55:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40af5b:	add    al,BYTE PTR [edx]
  40af5d:	mov    edx,DWORD PTR [ebp-0x17]
  40af60:	cmp    edi,esi
  40af62:	jne    0x40af63
  40af64:	(bad)  
  40af65:	push   esi
  40af66:	pop    es
  40af67:	push   ebp
  40af68:	mov    ebp,esp
  40af6a:	or     BYTE PTR [ebp+0x41],al
  40af6d:	add    edi,edx
  40af6f:	sub    BYTE PTR [eax-0x4],al
  40af72:	shl    BYTE PTR [ebp-0x3e],0x1
  40af76:	add    BYTE PTR [ebx+ecx*4],bl
  40af79:	mov    edx,DWORD PTR [ecx+0x14]
  40af7c:	lea    edx,[edx-0x1ba7508]
  40af82:	push   esi
  40af83:	enter  0xd375,0xb8
  40af87:	test   DWORD PTR [esi],0x6ce0750
  40af8d:	enter  0xd375,0x3b
  40af91:	neg    DWORD PTR [esi+0x50]
  40af94:	or     cl,dl
  40af96:	inc    edx
  40af97:	(bad)  
  40af98:	in     eax,dx
  40af99:	in     al,dx
  40af9a:	(bad)  
  40af9b:	sub    eax,DWORD PTR [ebx]
  40af9d:	inc    eax
  40af9e:	in     eax,dx
  40af9f:	push   eax
  40afa0:	add    dl,BYTE PTR [eax-0x37]
  40afa3:	push   edi
  40afa4:	push   ebp
  40afa5:	imul   ah
  40afa7:	adc    DWORD PTR [ecx-0x1],0x45
  40afab:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40afb1:	lea    edi,[eax-0x7fff4ca]
  40afb7:	mov    eax,0x4550402
  40afbc:	cmp    ebp,ecx
  40afbe:	jne    0x40af6b
  40afc0:	mov    eax,DWORD PTR ds:0x241e808
  40afc6:	loope  0x40afc8
  40afc8:	inc    eax
  40afc9:	stc    
  40afca:	xlat   BYTE PTR ds:[ebx]
  40afcb:	ss inc ecx
  40afcd:	aas    
  40afce:	in     eax,0x7d
  40afd0:	ret    0x8b
  40afd3:	lock mov edi,DWORD PTR [ebp-0x18]
  40afd7:	and    edi,edi
  40afd9:	mov    edi,edi
  40afdb:	call   0xe40eb0b7
  40afe0:	push   es
  40afe1:	add    al,ch
  40afe3:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40afea:	(bad)  
  40afeb:	hlt    
  40afec:	add    eax,0xffd3e87d
  40aff1:	cmp    bh,0x8
  40aff4:	(bad)  
  40aff5:	fld    DWORD PTR [esi]
  40aff7:	out    dx,al
  40aff8:	call   0xff9faf00
  40affd:	cmp    al,0x46
  40afff:	shr    edx,0x8
  40b002:	(bad)  
  40b003:	pop    es
  40b004:	fisttp QWORD PTR [ebp+0xe577eff]
  40b00a:	push   ebx
  40b00b:	add    BYTE PTR [ebx+0x24008b56],cl
  40b011:	add    BYTE PTR [ebp+0x50],al
  40b014:	push   eax
  40b015:	add    DWORD PTR [ebx+0x757d1834],ecx
  40b01b:	sub    edx,DWORD PTR [esi-0x24]
  40b01e:	jne    0x40afd6
  40b020:	lods   eax,DWORD PTR ds:[esi]
  40b021:	mov    edx,DWORD PTR [edx-0x34]
  40b024:	dec    esi
  40b025:	out    0x83,eax
  40b027:	into   
  40b028:	push   edi
  40b02a:	loopne 0x40affa
  40b02c:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40b030:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40b037:	rol    DWORD PTR [edx],0x8
  40b03a:	mov    esp,ecx
  40b03c:	cmp    DWORD PTR [ebx],0xc
  40b03f:	mov    esi,0x5001c0
  40b044:	push   eax
  40b045:	push   cs
  40b046:	push   eax
  40b047:	(bad)  
  40b048:	sub    edx,edi
  40b04a:	push   esi
  40b04b:	adc    al,0xcb
  40b04d:	ins    DWORD PTR es:[edi],dx
  40b04e:	mov    eax,0x203e8
  40b053:	add    al,ah
  40b055:	inc    esi
  40b056:	mov    al,ch
  40b058:	pop    es
  40b059:	add    DWORD PTR [eax],0x1
  40b05c:	add    dh,al
  40b05e:	add    ah,ch
  40b060:	rol    DWORD PTR [edx-0xd],1
  40b063:	cli    
  40b064:	push   0x4a
  40b066:	pop    ecx
  40b067:	retf   0xfe6
  40b06a:	add    BYTE PTR [ebx-0x4e72f41e],al
  40b070:	(bad)  
  40b071:	dec    BYTE PTR [ebx+0x45b1fc72]
  40b077:	(bad)  
  40b078:	sub    ebp,DWORD PTR [ebx]
  40b07a:	and    al,0x52
  40b07c:	(bad)  
  40b07d:	dec    edi
  40b07e:	inc    ebp
  40b07f:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40b086:	add    BYTE PTR [ebp-0x7b],dh
  40b089:	pop    eax
  40b08a:	add    BYTE PTR [edx+0x0],bl
  40b08d:	pop    edx
  40b08e:	dec    ebp
  40b08f:	jmp    DWORD PTR [ebx]
  40b091:	and    al,0xec
  40b093:	push   edx
  40b094:	out    0x64,eax
  40b096:	jmp    0xd3f2a69b
  40b09b:	jmp    0x40b0f5
  40b09d:	mov    al,0xfe
  40b09f:	dec    BYTE PTR [ebp-0x18fd8018]
  40b0a5:	add    BYTE PTR [esi+ebp*1],bh
  40b0a8:	pop    edx
  40b0a9:	icebp  
  40b0aa:	mov    eax,cs
  40b0ac:	ins    BYTE PTR es:[edi],dx
  40b0ad:	adc    eax,0x75510000
  40b0b2:	mov    esi,0x70158
  40b0b7:	or     DWORD PTR [eax-0x74f48dfe],esi
  40b0bd:	mov    edi,esp
  40b0bf:	cld    
  40b0c0:	jge    0x40b137
  40b0c2:	(bad)  
  40b0c4:	aas    
  40b0c5:	and    al,0x6d
  40b0c7:	adc    cl,0x1
  40b0ca:	mov    eax,DWORD PTR [eax]
  40b0cc:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40b0d2:	dec    ebp
  40b0d3:	add    eax,ebp
  40b0d5:	add    BYTE PTR [edx],al
  40b0d7:	fadd   DWORD PTR [eax]
  40b0d9:	stc    
  40b0da:	enter  0xee00,0x8b
  40b0de:	sbb    eax,0x1
  40b0e1:	sbb    esi,ecx
  40b0e3:	in     al,0x0
  40b0e5:	in     eax,dx
  40b0e6:	add    BYTE PTR [eax],al
  40b0e8:	jne    0x40b075
  40b0ea:	cmp    edx,esp
  40b0ec:	jb     0x40b0f7
  40b0ee:	jmp    0x40b165
  40b0f0:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40b0f6:	add    BYTE PTR [ebx+0x4d83d840],cl
  40b0fc:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40b102:	jb     0x40b08d
  40b104:	pop    edx
  40b105:	fadd   QWORD PTR [ebx-0x7445faa1]
  40b10b:	or     dh,BYTE PTR [edx+0x0]
  40b10e:	inc    edx
  40b10f:	or     dl,bh
  40b111:	xlat   BYTE PTR ds:[ebx]
  40b112:	dec    edx
  40b113:	push   edi
  40b114:	add    al,0x7
  40b116:	leave  
  40b117:	rol    DWORD PTR [edx+eax*1],0x7
  40b11b:	add    ecx,ecx
  40b11d:	mov    edx,ecx
  40b11f:	int3   
  40b120:	jmp    0x40b0e0
  40b122:	mov    al,0x0
  40b124:	(bad)  
  40b125:	jne    0x40b10f
  40b127:	mov    eax,DWORD PTR [edx]
  40b129:	call   0xc1552e2e
  40b12e:	pop    edi
  40b12f:	add    ebx,DWORD PTR [ecx-0x37]
  40b132:	pop    ecx
  40b133:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40b13a:	push   es
  40b13b:	mov    eax,DWORD PTR [eax]
  40b13d:	int3   
  40b13e:	add    ch,al
  40b140:	jae    0x40b12a
  40b142:	int    0x1
  40b144:	enter  0x3000,0x18
  40b148:	add    BYTE PTR [ebp+0x75],al
  40b14b:	mov    esi,DWORD PTR [eax-0x171f0134]
  40b151:	push   0x2
  40b153:	pop    ecx
  40b154:	add    BYTE PTR [eax],cl
  40b156:	push   ebx
  40b157:	lea    edi,[edi+eax*2]
  40b15a:	mov    al,0x1
  40b15c:	jb     0x40b15e
  40b15e:	mov    al,0x10
  40b160:	push   eax
  40b161:	add    al,0x75
  40b163:	add    BYTE PTR [ebx],ch
  40b165:	add    ebx,esp
  40b167:	int3   
  40b168:	jne    0x40b17a
  40b16a:	movsx  edx,cl
  40b16d:	add    DWORD PTR [eax],eax
  40b16f:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40b176:	mov    gs,edi
  40b178:	add    BYTE PTR [eax-0x50],ch
  40b17b:	add    al,ch
  40b17d:	mov    eax,DWORD PTR [ecx]
  40b17f:	sub    eax,DWORD PTR [eax]
  40b181:	jb     0x40b1f8
  40b183:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40b187:	jge    0x40b171
  40b189:	add    al,0x1
  40b18b:	add    DWORD PTR [eax],0x0
  40b18e:	jne    0x40b190
  40b190:	je     0x40b1d7
  40b192:	mov    eax,DWORD PTR [edi]
  40b194:	ror    BYTE PTR [ebp+0x4d],1
  40b197:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40b19e:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40b1a4:	mov    DWORD PTR [ebx],ebp
  40b1a6:	fadd   DWORD PTR [eax+0x75]
  40b1a9:	inc    eax
  40b1aa:	pop    eax
  40b1ab:	lea    ebx,[ecx+0x4f]
  40b1ae:	push   0xb1000003
  40b1b3:	out    dx,eax
  40b1b4:	add    ebp,DWORD PTR [edx+edx*2]
  40b1b7:	add    BYTE PTR [ebx+ecx*4],bh
  40b1ba:	mov    ch,BYTE PTR [ebx]
  40b1bc:	jb     0x40b230
  40b1be:	add    al,0x89
  40b1c0:	push   eax
  40b1c1:	call   0x8428ff33
  40b1c6:	add    DWORD PTR [eax+eax*1],eax
  40b1c9:	jae    0x40b1df
  40b1cb:	icebp  
  40b1cc:	inc    ebp
  40b1cd:	mov    eax,DWORD PTR gs:[ecx]
  40b1d0:	int3   
  40b1d1:	out    dx,al
  40b1d2:	loopne 0x40b221
  40b1d4:	sub    eax,DWORD PTR [edx]
  40b1d6:	push   0xffffff83
  40b1d8:	pop    esi
  40b1d9:	push   cs
  40b1da:	jl     0x40b1f5
  40b1dc:	add    al,0xaf
  40b1de:	xor    eax,0x832b6d00
  40b1e3:	mov    eax,DWORD PTR [edx]
  40b1e5:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40b1eb:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40b1f1:	inc    ebp
  40b1f2:	shr    ebx,0x3
  40b1f5:	or     DWORD PTR [eax],0x4
  40b1f8:	push   0xffffffa5
  40b1fa:	pop    esi
  40b1fb:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40b202:	jmp    0x40b261
  40b204:	mov    edi,0xff0272
  40b209:	fdivr  QWORD PTR [ebp+0x5d]
  40b20c:	push   0x4e
  40b20e:	pop    ecx
  40b20f:	call   0x40f614
  40b214:	mov    DWORD PTR [ebx],eax
  40b216:	in     al,0xc8
  40b218:	rol    BYTE PTR [ebp-0x75],0xc1
  40b21c:	call   0xaab3fd
  40b221:	pop    esi
  40b222:	enter  0xceff,0x8b
  40b226:	repz mov ecx,DWORD PTR [ebp-0x34]
  40b22a:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40b231:	je     0x40b233
  40b233:	or     DWORD PTR [ebx-0x74183b24],eax
  40b239:	jne    0x40b21f
  40b23b:	jmp    0x40b236
  40b23d:	push   DWORD PTR [edx-0x24]
  40b240:	push   0x4d
  40b242:	pop    ecx
  40b243:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40b247:	jge    0x40b24f
  40b249:	mov    eax,eax
  40b24b:	sub    ebp,DWORD PTR [edx+0x24]
  40b24e:	pop    esi
  40b24f:	inc    ebp
  40b250:	mov    esp,0x8b6077
  40b255:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40b25b:	lods   al,BYTE PTR ds:[esi]
  40b25c:	add    BYTE PTR [ebx],bh
  40b25e:	enter  0xce73,0x49
  40b262:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40b26a:	stc    
  40b26b:	jge    0x40b2df
  40b26d:	jnp    0xdd4035ce
  40b273:	call   0xc3b349
  40b278:	fadd   st(0),st
  40b27a:	dec    esi
  40b27b:	ins    BYTE PTR es:[edi],dx
  40b27c:	stc    
  40b27d:	cmp    al,0x73
  40b27f:	push   ebp
  40b280:	mov    eax,0xf8028b
  40b285:	jne    0x40b248
  40b287:	mov    esi,ecx
  40b289:	mov    esp,DWORD PTR [ebp+0x2c]
  40b28c:	add    edi,DWORD PTR [ebp-0x24]
  40b28f:	sub    esp,eax
  40b291:	and    al,0x45
  40b293:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40b299:	sbb    al,0xee
  40b29b:	pop    esi
  40b29c:	call   0x80b2cc
  40b2a1:	fsubr  st,st(3)
  40b2a3:	sti    
  40b2a4:	add    BYTE PTR gs:[ecx],bh
  40b2a7:	add    eax,esp
  40b2a9:	add    DWORD PTR [esi],eax
  40b2ab:	rol    DWORD PTR [ebp+0x8],0x29
  40b2af:	mov    esp,eax
  40b2b1:	clc    
  40b2b2:	jne    0x40b329
  40b2b4:	mov    eax,0x8b0673
  40b2b9:	loopne 0x40b300
  40b2bb:	loopne 0x40b246
  40b2bd:	lods   al,BYTE PTR ds:[esi]
  40b2be:	int3   
  40b2bf:	inc    ebp
  40b2c0:	mov    DWORD PTR gs:[eax+edi*8],eax
  40b2c4:	add    al,0xc3
  40b2c6:	sub    ecx,DWORD PTR [ebp+0x47]
  40b2c9:	(bad)  
  40b2cb:	shr    BYTE PTR [ebp-0x1f],0xe8
  40b2cf:	add    eax,DWORD PTR [eax]
  40b2d1:	call   0x64273d6
  40b2d6:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40b2dc:	dec    esi
  40b2dd:	ins    DWORD PTR es:[edi],dx
  40b2de:	in     al,dx
  40b2df:	lea    eax,[eax]
  40b2e1:	inc    ebp
  40b2e2:	inc    ebp
  40b2e3:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40b2e9:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40b2f3:	and    al,0xdc
  40b2f5:	ror    DWORD PTR [edx+0x24],0xf7
  40b2f9:	or     BYTE PTR [ebp+0x4c],dh
  40b2fc:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40b300:	stos   BYTE PTR es:[edi],al
  40b301:	adc    edx,edi
  40b303:	inc    esp
  40b304:	add    edi,DWORD PTR [eax]
  40b306:	jne    0x40b2eb
  40b308:	mov    DWORD PTR [eax-0x7449db04],ecx
  40b30e:	cmp    ecx,DWORD PTR [edi]
  40b310:	sub    BYTE PTR [ebp-0x7e],dl
  40b313:	sar    ebp,0xb
  40b316:	jmp    FWORD PTR [edi+0x2400392a]
  40b31c:	sub    esi,DWORD PTR [ebx-0x73]
  40b31f:	mov    esp,DWORD PTR [ecx+edi*4]
  40b322:	mov    ecx,DWORD PTR [eax]
  40b324:	and    BYTE PTR [eax],al
  40b326:	jne    0x40b2f2
  40b328:	sub    ebp,ecx
  40b32a:	sbb    BYTE PTR [esi+0x32],ah
  40b32d:	dec    ebp
  40b32e:	push   ebp
  40b32f:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40b335:	ret    
  40b336:	mov    edx,ebp
  40b338:	leave  
  40b339:	sub    DWORD PTR [esi+0x24],ebx
  40b33c:	ret    0x2b
  40b33f:	pop    ax
  40b341:	push   ebp
  40b342:	rol    BYTE PTR [ebx],0xeb
  40b345:	add    DWORD PTR [ecx+0x6c0001],0x40
  40b34c:	jb     0x40b3a3
  40b34e:	ret    
  40b34f:	in     al,dx
  40b350:	jecxz  0x40b2dd
  40b352:	push   esi
  40b353:	xchg   esp,eax
  40b354:	jne    0x40b356
  40b356:	cmp    edx,DWORD PTR [esi+0x1c]
  40b359:	jne    0x40b33f
  40b35b:	mov    eax,DWORD PTR [ebp-0x77]
  40b35e:	ror    DWORD PTR [ebx+0x899408],0xe0
  40b365:	mov    esi,DWORD PTR [ebp-0x75]
  40b368:	pop    esi
  40b369:	nop
  40b36a:	mov    eax,DWORD PTR [eax]
  40b36c:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40b372:	add    al,0x0
  40b374:	inc    ebp
  40b375:	mov    eax,DWORD PTR [ebx]
  40b377:	mov    ebp,ebx
  40b379:	cmp    al,0xf
  40b37b:	or     al,al
  40b37d:	inc    ebp
  40b37e:	inc    ebp
  40b37f:	xor    eax,0x8bc89c8b
  40b384:	ins    BYTE PTR es:[edi],dx
  40b385:	cld    
  40b386:	add    BYTE PTR [edi+0x576c16c0],dh
  40b38c:	add    BYTE PTR [ecx-0x5],dl
  40b38f:	add    eax,0x17200
  40b394:	sbb    al,0x85
  40b396:	dec    esp
  40b397:	je     0x40b3d1
  40b399:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40b39d:	add    BYTE PTR [ebx],bh
  40b39f:	(bad)  
  40b3a0:	and    al,0x34
  40b3a2:	jae    0x40b340
  40b3a4:	mov    cl,cl
  40b3a6:	inc    DWORD PTR [esp]
  40b3a9:	push   ebp
  40b3aa:	shr    esp,0x8
  40b3ad:	in     al,dx
  40b3ae:	push   esp
  40b3af:	and    DWORD PTR [eax],0xffffffdc
  40b3b2:	retf   
  40b3b3:	(bad)  
  40b3b4:	mov    bh,0xe4
  40b3b6:	add    BYTE PTR [ebp+0x450ff8e9],dh
  40b3bc:	retf   0x4cf5
  40b3bf:	pushf  
  40b3c0:	and    bh,al
  40b3c2:	pop    ss
  40b3c3:	rcr    cl,1
  40b3c5:	test   DWORD PTR [eax],eax
  40b3c7:	clc    
  40b3c8:	add    BYTE PTR [ebp+0x2b],al
  40b3cb:	xor    eax,ecx
  40b3cd:	pushf  
  40b3ce:	add    eax,0xd001c7
  40b3d3:	add    eax,0x456cf8c0
  40b3d8:	inc    eax
  40b3d9:	push   ebx
  40b3da:	rcr    DWORD PTR [eax+0x4c0105],0x20
  40b3e1:	inc    ebp
  40b3e2:	fst    DWORD PTR [esi+0x29]
  40b3e5:	mov    eax,DWORD PTR [eax]
  40b3e7:	nop
  40b3e8:	rol    BYTE PTR [eax],0xc0
  40b3eb:	mov    ecx,DWORD PTR [ebp-0x3c4fdbe4]
  40b3f1:	add    DWORD PTR [ebx-0x75f9af00],ecx
  40b3f7:	pop    ebp
  40b3f8:	add    DWORD PTR [ecx+0x758bf800],ecx
  40b3fe:	or     BYTE PTR [ebp-0xce8aca],al
  40b404:	mov    bl,BYTE PTR [eax]
  40b406:	add    DWORD PTR [ebp+0x0],edx
  40b409:	call   0xfff3b317
  40b40e:	add    DWORD PTR [edi],ecx
  40b410:	add    BYTE PTR [edi],al
  40b412:	push   cs
  40b413:	inc    ecx
  40b414:	or     BYTE PTR [ebx+0x18008901],0x8
  40b41b:	leave  
  40b41c:	dec    ecx
  40b41d:	dec    esi
  40b41e:	add    esi,DWORD PTR [ebp-0x39]
  40b421:	call   0xffe6a322
  40b426:	clc    
  40b427:	inc    ebp
  40b428:	inc    ebp
  40b429:	mov    ecx,DWORD PTR [edi]
  40b42b:	enter  0x49,0x35
  40b42f:	mov    ecx,DWORD PTR [eax]
  40b431:	xor    eax,0x79e0807
  40b436:	xor    bl,BYTE PTR [esi-0x743ecda2]
  40b43c:	or     al,0x1c
  40b43e:	sbb    BYTE PTR ds:0x8b004d01,0x0
  40b445:	int3   
  40b446:	test   DWORD PTR [eax],eax
  40b448:	clc    
  40b449:	inc    edx
  40b44b:	mov    eax,DWORD PTR [eax]
  40b44d:	fmul   DWORD PTR [ebx+0x74ff8300]
  40b453:	sub    BYTE PTR [ebp-0x40],ah
  40b456:	add    BYTE PTR [esi+0x45],bl
  40b459:	leave  
  40b45a:	xor    eax,0xc78b9c18
  40b45f:	jl     0x40b441
  40b461:	add    BYTE PTR [ebp+0x458df88b],al
  40b467:	add    al,0x31
  40b469:	or     BYTE PTR [eax+ebp*8-0x3617f139],bl
  40b470:	test   edx,esp
  40b472:	clc    
  40b473:	or     eax,DWORD PTR [ebp+0x40]
  40b476:	xor    eax,0x8b949f89
  40b47b:	inc    ebp
  40b47c:	sbb    al,0xbe
  40b47e:	mov    ecx,DWORD PTR [eax]
  40b480:	xchg   esp,eax
  40b481:	pop    es
  40b482:	add    dh,al
  40b484:	mov    esp,DWORD PTR [ebp+0x1c]
  40b487:	add    BYTE PTR [edi-0x62],dl
  40b48a:	mov    eax,0x30132
  40b48f:	mov    DWORD PTR [ebp-0x68],eax
  40b492:	mov    eax,DWORD PTR [ebp-0x74]
  40b495:	xor    eax,DWORD PTR [eax]
  40b497:	add    ecx,DWORD PTR [ebx-0xf637677]
  40b49d:	inc    ebp
  40b49e:	jge    0x40b4f0
  40b4a0:	mov    DWORD PTR [ebp-0xc],eax
  40b4a3:	xor    eax,eax
  40b4a5:	add    ecx,DWORD PTR [ebx]
  40b4a7:	push   eax
  40b4a8:	jne    0x40b4ef
  40b4aa:	mov    eax,DWORD PTR ds:0x3f001c
  40b4b0:	dec    DWORD PTR [ebx-0x7f74e375]
  40b4b6:	add    eax,DWORD PTR [ecx]
  40b4b8:	cmp    al,0x0
  40b4ba:	push   cs
  40b4bb:	inc    ebp
  40b4bc:	inc    ebp
  40b4bd:	add    al,0x85
  40b4bf:	add    BYTE PTR [edi+edi*8-0x1],dh
  40b4c3:	mov    ebx,DWORD PTR [esp+ecx*1]
  40b4c6:	mov    ebp,0x8bffff4d
  40b4cb:	mov    ebx,DWORD PTR [esp+esi*8]
  40b4ce:	sbb    al,0x1
  40b4d1:	inc    ebp
  40b4d2:	add    BYTE PTR [ebx-0x74a87700],cl
  40b4d8:	push   ecx
  40b4d9:	clc    
  40b4da:	add    eax,0x457218
  40b4df:	mov    eax,DWORD PTR [ebp+0x50]
  40b4e2:	jne    0x40b529
  40b4e4:	mov    ecx,DWORD PTR [ebx-0x39761fe4]
  40b4ea:	add    edi,eax
  40b4ec:	add    BYTE PTR [ebp+0x31],al
  40b4ef:	lea    eax,[eax+0x4501dc]
  40b4f5:	lea    edx,[eax-0x74]
  40b4f8:	xor    ecx,DWORD PTR [ebx-0x39a4f7a1]
  40b4fe:	ret    0xc7
  40b501:	mov    eax,DWORD PTR [eax+0xee011c]
  40b507:	add    BYTE PTR [eax],cl
  40b509:	push   eax
  40b50a:	inc    ebp
  40b50b:	inc    ebp
  40b50c:	add    DWORD PTR [ebx+0x8b98eb],ecx
  40b512:	test   edi,eax
  40b514:	jne    0x40b4a2
  40b516:	mov    eax,DWORD PTR [eax]
  40b518:	mov    eax,DWORD PTR [eax]
  40b51a:	push   eax
  40b51b:	pop    ebp
  40b51c:	inc    ebp
  40b51d:	dec    DWORD PTR [ebx+0x570ce48b]
  40b523:	rcl    BYTE PTR [ecx-0x40],1
  40b526:	xor    esi,DWORD PTR [eax]
  40b528:	add    DWORD PTR [ebp-0x70],0xffffff83
  40b52c:	mov    edi,0x8372fc
  40b531:	push   eax
  40b532:	(bad)  
  40b533:	jbe    0x40b57a
  40b535:	mov    ecx,DWORD PTR [ebx-0x39341714]
  40b53b:	ret    
  40b53c:	(bad)  
  40b53d:	dec    ebp
  40b53e:	inc    ebp
  40b53f:	jmp    0x40b4ce
  40b541:	mov    ecx,DWORD PTR [esp+eiz*8-0xf7f375]
  40b548:	(bad)  
  40b549:	cld    
  40b54a:	(bad)  
  40b54b:	push   ebp
  40b54c:	mov    ecx,DWORD PTR [eax+0x18aa8b1c]
  40b552:	add    BYTE PTR [ebx],bh
  40b554:	push   eax
  40b555:	push   eax
  40b556:	inc    ebp
  40b557:	jmp    0x3d900e7
  40b55c:	add    BYTE PTR [ebx+0x8ca0c7],cl
  40b562:	add    BYTE PTR [ebx-0x13cfd500],cl
  40b568:	inc    ebp
  40b569:	ret    
  40b56a:	mov    DWORD PTR [ebp-0x14],edx
  40b56d:	mov    edx,eax
  40b56f:	sub    BYTE PTR [ebp-0x2d],cl
  40b572:	mov    ecx,DWORD PTR [ebp-0x75]
  40b575:	mov    eax,esi
  40b577:	rol    BYTE PTR [eax],1
  40b579:	inc    ebp
  40b57a:	add    DWORD PTR [eax],eax
  40b57c:	inc    ebp
  40b57d:	add    BYTE PTR [ecx+0x18838beb],cl
  40b583:	clc    
  40b584:	inc    eax
  40b585:	jmp    0x8d45:0x74945589
  40b58c:	xor    ecx,DWORD PTR [eax]
  40b58e:	add    edx,DWORD PTR [ebp-0x77]
  40b591:	mov    ebx,DWORD PTR [eax-0x76aaba18]
  40b597:	mov    ebx,DWORD PTR [eax+edi*8-0x76af48bb]
  40b59e:	inc    ebp
  40b59f:	fdiv   DWORD PTR [ebx]
  40b5a1:	loop   0x40b5a6
  40b5a3:	(bad)  
  40b5a5:	add    BYTE PTR [ebp+0x55],al
  40b5a8:	add    eax,0xd8008b
  40b5ad:	jmp    0xcd80:0x621c818b
  40b5b4:	add    DWORD PTR [ebx],esi
  40b5b6:	add    BYTE PTR [ecx-0x63fbcdbb],al
  40b5bc:	add    BYTE PTR [ebp-0x77],dh
  40b5bf:	mov    edx,DWORD PTR [eax+0x45cb30d4]
  40b5c5:	dec    ebp
  40b5c6:	inc    DWORD PTR [ebx]
  40b5c8:	test   DWORD PTR [ebx+0x108b0074],eax
  40b5ce:	sbb    BYTE PTR [ebp+0x65],dl
  40b5d1:	add    eax,DWORD PTR [eax]
  40b5d3:	mov    edi,DWORD PTR [eax-0x75]
  40b5d6:	add    ah,dl
  40b5d8:	and    edx,DWORD PTR [ecx*2-0x741bd475]
  40b5df:	dec    ebp
  40b5e0:	mov    DWORD PTR [ebx-0xfc071c],eax
  40b5e6:	dec    ebp
  40b5e7:	call   0x55426376
  40b5ec:	inc    ebp
  40b5ed:	add    DWORD PTR [ebx+0x855fcf4],ecx
  40b5f3:	cmp    ecx,DWORD PTR [ebp-0x5c]
  40b5f6:	inc    eax
  40b5f7:	add    BYTE PTR [ecx+0x73],dl
  40b5fa:	jb     0x40b5ff
  40b5fc:	mov    esi,eax
  40b5fe:	cmp    al,0x50
  40b600:	retf   
  40b601:	mov    DWORD PTR [ecx+0x4500f0],eax
  40b607:	test   ebx,edx
  40b609:	andnps xmm6,XMMWORD PTR [edx+0x3]
  40b60d:	dec    DWORD PTR [ecx+0x51ecfc8b]
  40b613:	inc    ebp
  40b614:	add    eax,edi
  40b616:	mov    DWORD PTR [eax+ebx*1-0x38ffab00],ecx
  40b61d:	inc    ecx
  40b61e:	hlt    
  40b61f:	mov    DWORD PTR [eax],eax
  40b621:	xchg   esp,eax
  40b622:	add    BYTE PTR [ebp+0x7d],al
  40b625:	xor    eax,edx
  40b627:	add    edx,ecx
  40b629:	mov    DWORD PTR [ecx+0x5f45e898],ecx
  40b62f:	mov    DWORD PTR [eax-0x64],edx
  40b632:	mov    DWORD PTR [ebp-0x8],eax
  40b635:	push   eax
  40b636:	push   ebp
  40b637:	inc    ebp
  40b638:	mov    DWORD PTR [ebx],esi
  40b63a:	call   0xf910b42
  40b63f:	inc    ebp
  40b640:	adc    al,BYTE PTR ds:0x810055
  40b646:	dec    DWORD PTR [ebx-0x7f76e400]
  40b64c:	aam    0x1
  40b64e:	push   ebp
  40b64f:	add    cl,al
  40b651:	xor    BYTE PTR [eax*2-0x7472003e],cl
  40b658:	call   FWORD PTR [esi+edx*8]
  40b65b:	cmp    dl,0x1
  40b65e:	test   DWORD PTR [eax],eax
  40b660:	clc    
  40b661:	inc    ebp
  40b662:	and    cl,BYTE PTR [ebx+0x7503fc4d]
  40b668:	mov    DWORD PTR [ecx+0x1008ffd4],ecx
  40b66e:	cmp    edi,edi
  40b670:	je     0x40b642
  40b672:	mov    eax,DWORD PTR [ebp-0x4]
  40b675:	add    edx,DWORD PTR [ecx]
  40b677:	sbb    al,0x0
  40b679:	dec    ebp
  40b67a:	dec    ebp
  40b67b:	mov    DWORD PTR [ecx+0x4545011c],ecx
  40b681:	mov    ecx,DWORD PTR [ebx+0x4590181c]
  40b687:	add    DWORD PTR [edx],eax
  40b689:	add    BYTE PTR [ebp+0x45],cl
  40b68c:	jne    0x40b619
  40b68e:	mov    ecx,DWORD PTR [eax+esi*8-0x7474ab00]
  40b695:	cmp    esp,esi
  40b697:	jb     0x40b62a
  40b699:	mov    eax,DWORD PTR [eax]
  40b69b:	mov    eax,DWORD PTR [eax]
  40b69d:	mov    edx,DWORD PTR [esp+edi*1]
  40b6a0:	inc    ebp
  40b6a1:	je     0x40b62e
  40b6a3:	push   eax
  40b6a4:	add    al,0x38
  40b6a6:	push   ebp
  40b6a7:	mov    DWORD PTR ds:[ecx],edi
  40b6aa:	in     al,0xc
  40b6ac:	shl    BYTE PTR [eax],cl
  40b6ae:	test   DWORD PTR [ecx],eax
  40b6b0:	call   DWORD PTR [edx]
  40b6b2:	inc    esi
  40b6b4:	inc    ebp
  40b6b5:	ror    BYTE PTR [ecx+0x45459011],1
  40b6bb:	jmp    0xff41b3c4
  40b6c0:	mov    ecx,DWORD PTR [ebx-0xfba7eb0]
  40b6c6:	mov    eax,DWORD PTR [eax]
  40b6c8:	loopne 0x40b655
  40b6ca:	(bad)  
  40b6cb:	sbb    al,0xc7
  40b6cd:	inc    ebp
  40b6ce:	inc    ebp
  40b6cf:	push   ebx
  40b6d0:	lea    edi,[eax+0x454fdc]
  40b6d6:	lea    ecx,[ecx-0x74a774]
  40b6dc:	or     BYTE PTR [edi-0x3a],dl
  40b6df:	js     0x40b6a8
  40b6e1:	mov    ecx,DWORD PTR [ebx-0x117ae39a]
  40b6e7:	inc    DWORD PTR [eax]
  40b6e9:	call   DWORD PTR [eax+0x79]
  40b6ec:	inc    ebp
  40b6ed:	add    BYTE PTR [ebx+0x859866],cl
  40b6f3:	(bad)  
  40b6f4:	(bad)  
  40b6f5:	dec    DWORD PTR [ebx-0x2f99f3b9]
  40b6fb:	test   DWORD PTR [ebp-0x1],eax
  40b6fe:	mov    edi,edi
  40b700:	add    al,0x0
  40b703:	add    ax,WORD PTR [ebp-0xb20004]
  40b70a:	inc    DWORD PTR [edx+0x14]
  40b70d:	add    BYTE PTR [eax],cl
  40b70f:	data16 jne 0x40b697
  40b712:	push   ebx
  40b713:	call   DWORD PTR [ebp-0x1]
  40b716:	mov    eax,eax
  40b718:	cld    
  40b719:	inc    bp
  40b71b:	test   DWORD PTR [ebp+0x45ff04ff],ecx
  40b721:	inc    eax
  40b722:	mov    eax,DWORD PTR [eax]
  40b724:	sbb    al,0x66
  40b726:	inc    ebp
  40b727:	test   DWORD PTR [ebx+0xff90ff],ecx
  40b72d:	ror    BYTE PTR [ebx-0x7f7ae39a],0xff
  40b734:	add    edi,edi
  40b736:	add    BYTE PTR [ebp+0x30],al
  40b739:	add    BYTE PTR [ecx],dh
  40b73b:	popw   ds
  40b73d:	test   DWORD PTR [edx],esi
  40b73f:	(bad)  
  40b740:	cmp    bh,bh
  40b742:	jbe    0x40b70b
  40b744:	lea    ecx,[ecx-0x7493c9]
  40b74a:	add    edi,DWORD PTR [eax+0x734f39]
  40b750:	mov    ecx,DWORD PTR [ecx-0x749175]
  40b756:	sub    edi,DWORD PTR [eax+0x89d003]
  40b75c:	mov    ecx,DWORD PTR [ecx-0x698f04]
  40b762:	(bad)  
  40b763:	mov    eax,0xecd755
  40b768:	in     al,dx
  40b769:	mov    DWORD PTR [eax],eax
  40b76b:	jb     0x40b76d
  40b76d:	inc    DWORD PTR [ebp-0x48]
  40b770:	mov    ecx,esp
  40b772:	sbb    al,0x0
  40b774:	push   esi
  40b775:	mov    DWORD PTR ds:0x66ff0074,ecx
  40b77b:	mov    DWORD PTR [ebp-0x7a0014],0xad7d8df8
  40b785:	add    bh,al
  40b787:	mov    WORD PTR [ebp-0xa6],ax
  40b78e:	mov    eax,0x354f45
  40b793:	pushf  
  40b794:	mov    DWORD PTR [ebp-0x7600fda4],ecx
  40b79a:	lea    edi,[eax+0x4]
  40b79d:	dec    DWORD PTR [ecx-0x1ba13a]
  40b7a3:	mov    BYTE PTR [ebx-0x7639af1b],0xe6
  40b7aa:	pusha  
  40b7ab:	(bad)  
  40b7ac:	jmp    edi
  40b7ae:	mov    eax,0xe84fc6
  40b7b3:	xor    ecx,DWORD PTR [ecx-0x169d3a]
  40b7b9:	xor    eax,DWORD PTR [ebx-0x76ff3a42]
  40b7bf:	add    BYTE PTR [esp+eax*2-0x1],ah
  40b7c3:	in     al,0xb8
  40b7c5:	mov    dh,0x4f
  40b7c7:	add    DWORD PTR [eax],0x49
  40b7ca:	mov    esi,ebx
  40b7cc:	data16 mov bh,bh
  40b7cf:	add    DWORD PTR [ebx-0x7613c7fa],0x45
  40b7d6:	push   0xb845ffe3
  40b7db:	loope  0x40b82c
  40b7dd:	inc    ebp
  40b7de:	add    bl,dl
  40b7e0:	mov    DWORD PTR [ebp+0x6a],eax
  40b7e3:	out    dx,al
  40b7e4:	inc    DWORD PTR [ebp-0x75]
  40b7e7:	and    DWORD PTR [esi+0x45],esp
  40b7ea:	test   DWORD PTR [esi],ebp
  40b7ec:	inc    DWORD PTR [ebp-0x1]
  40b7ef:	jl     0x40b83a
  40b7f1:	leave  
  40b7f2:	add    BYTE PTR [esi+eiz*2-0x24],al
  40b7f6:	test   DWORD PTR [esi+0x49ff83ff],esi
  40b7fc:	outs   dx,DWORD PTR ds:[esi]
  40b7fd:	fiadd  WORD PTR [eax]
  40b7ff:	mov    BYTE PTR [esi-0x7d],ah
  40b802:	test   DWORD PTR [edi],eax
  40b804:	(bad)  
  40b805:	in     al,dx
  40b806:	inc    DWORD PTR [ebp+0x6c]
  40b809:	loope  0x40b80b
  40b80b:	inc    ebp
  40b80c:	data16 aam 0x85
  40b80f:	inc    ebp
  40b810:	(bad)  
  40b811:	call   0xe5bcfe15
  40b816:	add    BYTE PTR [ebp+0x66],al
  40b819:	fild   WORD PTR [ebp-0x1300bb]
  40b81f:	inc    ebp
  40b820:	inc    ebp
  40b821:	xlat   BYTE PTR ds:[ebx]
  40b822:	xor    al,0x45
  40b824:	pushf  
  40b825:	jl     0x40b7df
  40b827:	leave  
  40b828:	icebp  
  40b829:	inc    esp
  40b82a:	add    ah,dl
  40b82c:	mov    DWORD PTR [esi+0x49ff8376],esi
  40b832:	(bad)  
  40b833:	fdivrp st(0),st
  40b835:	mov    BYTE PTR [ebp+0x4708f883],al
  40b83b:	in     al,dx
  40b83c:	test   WORD PTR [ebp-0x1],ax
  40b843:	inc    ebp
  40b844:	inc    ebp
  40b845:	mov    edx,ebp
  40b847:	cld    
  40b848:	inc    ebp
  40b849:	out    dx,eax
  40b84a:	rcl    BYTE PTR [ebx],1
  40b84c:	inc    ebp
  40b84d:	mov    edi,edx
  40b84f:	mov    eax,DWORD PTR [ebp+0x54]
  40b852:	and    edi,edi
  40b854:	inc    ebp
  40b855:	cmp    ebp,DWORD PTR [esi]
  40b857:	jne    0x40b82b
  40b859:	mov    DWORD PTR [ebp-0x44],0xf8c9857c
  40b860:	retf   
  40b861:	inc    ebp
  40b862:	add    dl,ah
  40b864:	lea    ebx,[ebp+ecx*1+0x181c0f8b]
  40b86b:	xor    bl,0x1
  40b86e:	add    eax,DWORD PTR [eax]
  40b870:	inc    ecx
  40b871:	adc    BYTE PTR [eax],bl
  40b873:	test   ecx,edi
  40b875:	add    dh,BYTE PTR [edx+0x0]
  40b878:	mov    BYTE PTR [ebp-0x24],0x8b
  40b87c:	(bad)  
  40b87d:	jl     0x40b85c
  40b87f:	add    dh,al
  40b881:	mov    esi,ebx
  40b883:	mov    eax,esi
  40b885:	sbb    al,0xdf
  40b887:	add    dh,0x1
  40b88a:	loopne 0x40b88c
  40b88c:	(bad)  
  40b88d:	adc    cl,ah
  40b88f:	or     dh,al
  40b891:	inc    ebp
  40b892:	loop   0x40b875
  40b894:	xor    ebp,eax
  40b896:	(bad)  
  40b897:	(bad)  
  40b898:	or     eax,0x18ec0ff8
  40b89d:	jl     0x40b892
  40b89f:	inc    ebp
  40b8a0:	add    ebx,DWORD PTR [ecx+0x41]
  40b8a3:	adc    BYTE PTR [eax],bl
  40b8a5:	repnz stc 
  40b8a7:	xor    BYTE PTR [edx+0x35],0xc6
  40b8ab:	adc    ah,dl
  40b8ad:	dec    ecx
  40b8ae:	(bad)  
  40b8af:	repnz aad 0x45
  40b8b2:	(bad)  
  40b8b3:	mov    esi,edx
  40b8b5:	adc    al,0xc6
  40b8b7:	call   edi
  40b8b9:	(bad)  
  40b8ba:	(bad)  
  40b8bb:	adc    al,bl
  40b8bd:	inc    esi
  40b8bf:	push   eax
  40b8c0:	fld    DWORD PTR [ebp-0x3a]
  40b8c3:	mov    esi,0x7c608da
  40b8c8:	fcmovnb st,st(6)
  40b8ca:	xor    ebx,DWORD PTR [esi+0x30d328d]
  40b8d0:	(bad)  
  40b8d2:	sbb    BYTE PTR [ebp-0xd],al
  40b8d5:	add    DWORD PTR [ebx],0x66
  40b8d8:	inc    ecx
  40b8d9:	mov    ebx,DWORD PTR [eax]
  40b8db:	sbb    al,0xf9
  40b8dd:	xor    BYTE PTR [edx+0x1],0x8d
  40b8e1:	add    BYTE PTR [ebp+eax*4-0x1],dl
  40b8e5:	dec    DWORD PTR [ecx+0x4d00fcff]
  40b8eb:	add    BYTE PTR [eax+0x7145fc30],bh
  40b8f1:	inc    DWORD PTR [ecx]
  40b8f3:	mov    ecx,DWORD PTR [ebp-0x310010]
  40b8f9:	retf   
  40b8fa:	enter  0xe45,0x3b
  40b8fe:	inc    ebp
  40b8ff:	jne    0x40b936
  40b901:	mov    eax,ds:0x33c70b9c
  40b906:	mov    esp,0xf81585ef
  40b90b:	mov    ds:0x338b0b45,eax
  40b910:	mov    WORD PTR [edi-0x5cc68e00],cs
  40b916:	ud2    
  40b918:	xchg   ebp,eax
  40b919:	xor    eax,DWORD PTR [eax]
  40b91b:	dec    edx
  40b91c:	mov    eax,DWORD PTR [eax]
  40b91e:	sbb    al,0x83
  40b920:	cmp    ah,0x1
  40b923:	push   0x0
  40b925:	pop    eax
  40b926:	adc    BYTE PTR [ecx-0x7483bb],cl
  40b92c:	and    BYTE PTR [esi+0x0],0x85
  40b930:	mov    edi,edi
  40b932:	push   0xffffffff
  40b934:	(bad)  
  40b935:	mov    esp,esi
  40b937:	adc    ah,0x75
  40b93a:	in     eax,0x66
  40b93c:	inc    ebp
  40b93d:	inc    ebp
  40b93e:	fild   QWORD PTR [edx-0x29]
  40b941:	mov    ecx,DWORD PTR [ebp-0x75990be4]
  40b947:	inc    ebp
  40b948:	sub    BYTE PTR [edx+0x49],0x58
  40b94c:	jmp    0x752c:0x40868889
  40b953:	lea    ax,[ebp-0xc]
  40b957:	xor    eax,DWORD PTR [ebp-0x5f0078]
  40b95d:	mov    DWORD PTR [ebp-0x820076],eax
  40b963:	stos   DWORD PTR es:[edi],eax
  40b964:	mov    ebp,DWORD PTR [ebx-0x43a87414]
  40b96a:	push   ecx
  40b96b:	test   DWORD PTR [ebx],esi
  40b96d:	(bad)  
  40b96e:	mov    ebx,0xc072ff
  40b973:	push   ebp
  40b974:	ret    
  40b975:	(bad)  
  40b976:	mov    eax,eax
  40b978:	sbb    al,0xdf
  40b97a:	rcl    ah,0x50
  40b97d:	inc    ebp
  40b97e:	inc    ebp
  40b97f:	into   
  40b980:	mov    ebp,ebx
  40b982:	cwde   
  40b983:	mov    DWORD PTR [eax],0x10d3c7c8
  40b989:	call   0xdf41ff8d
  40b98e:	add    cl,ch
  40b990:	jmp    DWORD PTR [esi-0x75]
  40b993:	inc    ebp
  40b994:	or     BYTE PTR [edi],bh
  40b996:	rol    bh,1
  40b998:	dec    ebp
  40b999:	adc    BYTE PTR [ebx],dh
  40b99b:	inc    DWORD PTR [ebx]
  40b99d:	add    cl,BYTE PTR [ecx-0x3e174400]
  40b9a3:	push   ss
  40b9a4:	push   ds
  40b9a5:	add    dh,ch
  40b9a7:	test   DWORD PTR [ebx-0x1],esi
  40b9aa:	or     eax,0x22850bff
  40b9af:	(bad)  
  40b9b0:	out    dx,al
  40b9b1:	push   DWORD PTR [ebx-0x75]
  40b9b4:	add    eax,0x3357e9ec
  40b9b9:	push   ecx
  40b9ba:	out    dx,al
  40b9bb:	xor    esi,DWORD PTR [ebx+0x3]
  40b9be:	jmp    0x85bb13
  40b9c3:	and    DWORD PTR [ebp+0x44],0x0
  40b9c7:	mov    esp,DWORD PTR [eax]
  40b9c9:	sbb    al,0x66
  40b9cb:	add    BYTE PTR [ebp-0xff00ff],0x30
  40b9d2:	mov    DWORD PTR [ebp+0x7e],eax
  40b9d5:	(bad)  
  40b9d6:	inc    DWORD PTR [ebx-0xbadf9a]
  40b9dc:	push   0xffffffff
  40b9de:	pop    eax
  40b9df:	clc    
  40b9e0:	mov    DWORD PTR [eax],ecx
  40b9e2:	or     BYTE PTR [ecx-0x8aef8d],0x58
  40b9e9:	mov    DWORD PTR [ecx+0x76ff8428],ecx
  40b9ef:	lea    esp,[esi+0x10]
  40b9f2:	inc    ebp
  40b9f3:	jmp    FWORD PTR [edx+0x50]
  40b9f6:	pop    eax
  40b9f7:	inc    ebp
  40b9f8:	mov    DWORD PTR [ebx],esi
  40b9fa:	mov    BYTE PTR [ebx],al
  40b9fc:	rcl    BYTE PTR [eax+0x45],0x85
  40ba00:	inc    WORD PTR [ebp-0x1]
  40ba04:	lea    ecx,[ebx-0x7f99e35f]
  40ba0a:	stos   BYTE PTR es:[edi],al
  40ba0b:	add    DWORD PTR [ebp+0x0],eax
  40ba0e:	mov    ecx,ecx
  40ba10:	adc    al,0x95
  40ba12:	(bad)  
  40ba13:	push   DWORD PTR [ebx]
  40ba15:	dec    DWORD PTR [ebp+0x45ffc095]
  40ba1b:	dec    esp
  40ba1d:	push   ebp
  40ba1e:	loopne 0x40b9a9
  40ba20:	(bad)  
  40ba21:	adc    al,0xc4
  40ba23:	call   ebx
  40ba25:	mov    ebp,ebp
  40ba27:	sbb    BYTE PTR [ebp-0x1],al
  40ba2a:	loop   0x40b9b5
  40ba2c:	ds and al,0xc7
  40ba2f:	dec    esp
  40ba31:	mov    edx,ebp
  40ba33:	sub    al,0xe1
  40ba35:	inc    edi
  40ba37:	mov    eax,edx
  40ba39:	xor    BYTE PTR [edi+edi*8-0x7b],bh
  40ba3d:	(bad)  
  40ba3e:	dec    DWORD PTR [ebx-0x2ffff701]
  40ba44:	add    BYTE PTR [ebp+0x2c],al
  40ba47:	push   eax
  40ba48:	add    bh,dl
  40ba4a:	mov    DWORD PTR [ebp+0x18],edi
  40ba4d:	jbe    0x40ba4e
  40ba4f:	test   DWORD PTR [ebp-0xffefff],ecx
  40ba55:	inc    ebp
  40ba56:	push   eax
  40ba57:	add    DWORD PTR [ebp-0x4],0x801be
  40ba5e:	pop    es
  40ba5f:	add    dh,0xfe
  40ba62:	ret    
  40ba63:	dec    DWORD PTR [ebx-0x3fffe346]
  40ba69:	mov    ecx,0x454f50
  40ba6e:	mov    eax,ecx
  40ba70:	cwde   
  40ba71:	mov    DWORD PTR [eax],eax
  40ba73:	test   al,0xff
  40ba75:	ror    BYTE PTR [ebx-0x2f99f775],0x55
  40ba7c:	lea    ecx,[ebp-0x7600f201]
  40ba82:	mov    ebp,DWORD PTR [edx+ebp*2-0x7a99a73e]
  40ba89:	push   ebp
  40ba8a:	dec    DWORD PTR [ebp-0x767aec01]
  40ba90:	push   DWORD PTR [eax+0x6685c2ff]
  40ba96:	call   DWORD PTR [ebp-0x1]
  40ba99:	lea    ecx,[ebx-0x397613df]
  40ba9f:	mov    ah,0xc3
  40baa1:	mov    DWORD PTR [ebp-0x30a74a],ecx
  40baa7:	mov    DWORD PTR [eax-0x48],edx
  40baaa:	inc    ebp
  40baab:	dec    edx
  40baac:	mov    ecx,DWORD PTR [ebx+0x55006698]
  40bab2:	xor    ecx,DWORD PTR [ebx+0x557c668d]
  40bab8:	dec    DWORD PTR [ebp-0x76e3b277]
  40babe:	call   DWORD PTR [eax-0x6d5f7673]
  40bac4:	lea    eax,[ecx-0x1]
  40bac7:	inc    WORD PTR [ebp-0x73]
  40bacb:	cmp    edi,0x3
  40bace:	dec    DWORD PTR [ecx+0x41ff9695]
  40bad4:	jmp    DWORD PTR [esi-0x73]
  40bad7:	inc    ebp
  40bad8:	jmp    DWORD PTR [esi-0x1]
  40badb:	dec    ebp
  40badc:	lea    esp,[esi-0x1]
  40badf:	jge    0x40bae0
  40bae1:	mov    esi,DWORD PTR [eax]
  40bae3:	lock inc ebp
  40bae5:	mov    bh,0xff
  40bae7:	mov    WORD PTR [ebp-0x3c5f3a],cs
  40baed:	rol    DWORD PTR [eax+0xf8ca289],0x45
  40baf4:	push   cs
  40baf5:	str    WORD PTR [ebp-0x1]
  40baf9:	xor    edi,esp
  40bafb:	add    edi,DWORD PTR [ebp+0x33]
  40bafe:	add    BYTE PTR [esi+0x0],ah
  40bb01:	inc    ebp
  40bb02:	rdpmc  
  40bb04:	mov    edi,0xbf45ff66
  40bb09:	dec    si
  40bb0b:	inc    ebp
  40bb0c:	add    BYTE PTR [ebx+0x45000c12],cl
  40bb12:	mov    edi,edi
  40bb14:	data16 sbb al,0x45
  40bb17:	jne    0x40ba9c
  40bb19:	push   ebp
  40bb1b:	adc    al,0xd0
  40bb1d:	jne    0x40baa8
  40bb1f:	jmp    FWORD PTR [edx+0x66755108]
  40bb25:	call   0xffc4b37f
  40bb2a:	or     BYTE PTR [ebp-0x77],al
  40bb2d:	mov    ebp,DWORD PTR [esi+0x6645511c]
  40bb33:	mov    edx,DWORD PTR [ebp-0x70]
  40bb36:	add    DWORD PTR [eax],0x3
  40bb39:	mov    ecx,DWORD PTR [ecx+0x5180b21c]
  40bb3f:	add    DWORD PTR [esi+0x0],esp
  40bb42:	push   ebp
  40bb43:	xor    BYTE PTR [esi+0x4d],ah
  40bb46:	dec    ebp
  40bb47:	mov    ecx,DWORD PTR [ebx+0x4d72663b]
  40bb4d:	mov    ecx,DWORD PTR [ebp-0x2ec30075]
  40bb53:	jl     0x40bade
  40bb55:	push   eax
  40bb56:	mov    esi,?
  40bb58:	rcl    bh,1
  40bb5a:	mov    DWORD PTR [esi],eax
  40bb5c:	mov    es,esi
  40bb5e:	push   ecx
  40bb5f:	ret    0x166
  40bb62:	push   ebp
  40bb63:	pop    esi
  40bb64:	leavew 
  40bb66:	inc    ebp
  40bb67:	sbb    BYTE PTR [ebp-0x76132cab],cl
  40bb6d:	in     al,dx
  40bb6e:	xchg   esp,eax
  40bb6f:	push   esi
  40bb70:	shl    al,0x66
  40bb73:	add    DWORD PTR [ebp+0x1],0x38e1008d
  40bb7a:	mov    DWORD PTR [edi],ecx
  40bb7c:	cwde   
  40bb7d:	or     cl,BYTE PTR [ecx-0x767a6600]
  40bb83:	setl   BYTE PTR [edx]
  40bb86:	inc    ebp
  40bb87:	add    BYTE PTR [edi],cl
  40bb89:	test   DWORD PTR [ebp+0xf],ecx
  40bb8c:	xor    edi,edx
  40bb8e:	add    eax,DWORD PTR [eax]
  40bb90:	xor    ecx,DWORD PTR [ebx+0x458866]
  40bb96:	mov    eax,DWORD PTR [ebp-0x1848f010]
  40bb9c:	test   al,0x0
  40bb9e:	mov    BYTE PTR [ebx+0xc18cc3],0x89
  40bba5:	adc    BYTE PTR [eax-0x76ff3f7c],ch
  40bbab:	add    BYTE PTR [eax-0x57f076aa],ch
  40bbb1:	rol    DWORD PTR [ebp+0x0],1
  40bbb4:	mov    ecx,DWORD PTR [ebx+0x758cf0]
  40bbba:	inc    DWORD PTR [ebx-0x748a0fe8]
  40bbc0:	jmp    FWORD PTR [ebx]
  40bbc2:	adc    BYTE PTR [ebx],al
  40bbc4:	jne    0x40bbd5
  40bbc6:	call   DWORD PTR [eax-0x14]
  40bbc9:	mov    DWORD PTR [edi-0x1c],edi
  40bbcc:	push   DWORD PTR [edi-0x35e3f1ff]
  40bbd2:	inc    ebp
  40bbd3:	test   BYTE PTR [ebx-0x47ffe400],cl
  40bbd9:	dec    eax
  40bbda:	add    DWORD PTR [ebx+0x0],edx
  40bbdd:	dec    ebp
  40bbde:	inc    ebp
  40bbdf:	mov    esi,0x7f8cff8b
  40bbe4:	add    BYTE PTR [ebp-0x74728b75],al
  40bbea:	add    al,0x83
  40bbec:	adc    esp,esi
  40bbee:	(bad)  
  40bbef:	and    edx,DWORD PTR ds:0x780f0703
  40bbf5:	jp     0x40bb82
  40bbf7:	sysret 
  40bbf9:	pop    edx
  40bbfa:	add    eax,DWORD PTR [ebx]
  40bbfc:	cmp    esi,DWORD PTR [ebx+esi*2-0x73]
  40bc00:	sub    edx,DWORD PTR [ebx+eax*1]
  40bc03:	dec    ebp
  40bc04:	mov    DWORD PTR [ebp-0x74a48ba1],eax
  40bc0a:	ret    0x83
  40bc0d:	clc    
  40bc0e:	mov    esp,DWORD PTR [ebx]
  40bc10:	add    DWORD PTR [ebx],0x1c
  40bc13:	jnp    0x90504792
  40bc19:	pop    ecx
  40bc1a:	add    BYTE PTR [ebx],al
  40bc1c:	xor    DWORD PTR [eax+eax*1-0x73],0xffffff84
  40bc21:	adc    al,0x1
  40bc23:	jge    0x40bc25
  40bc25:	mov    edx,edx
  40bc27:	cld    
  40bc28:	test   BYTE PTR [edi],bh
  40bc2a:	add    edi,edi
  40bc2c:	add    BYTE PTR [esi],al
  40bc2e:	neg    BYTE PTR [ebp-0x7c]
  40bc31:	add    DWORD PTR [eax],eax
  40bc33:	pop    es
  40bc34:	add    BYTE PTR [edi-0x48fff17a],dh
  40bc3a:	add    BYTE PTR [eax+eax*8],cl
  40bc3d:	inc    ebp
  40bc3e:	test   BYTE PTR [ebx+0x300fc00],al
  40bc44:	mov    esi,0xf80039
  40bc49:	fisttp DWORD PTR [edi]
  40bc4b:	mov    bh,0xda
  40bc4d:	push   cs
  40bc4e:	add    BYTE PTR [edi+0x4d340c39],dh
  40bc54:	test   bh,bh
  40bc56:	add    ah,dh
  40bc58:	add    cl,al
  40bc5a:	mov    cl,0x3
  40bc5c:	add    DWORD PTR [ecx+0x7d65ec00],ecx
  40bc62:	add    BYTE PTR [edx-0x36],dh
  40bc65:	mov    ecx,DWORD PTR [esi]
  40bc67:	call   0xef8742e
  40bc6c:	or     al,0xb7
  40bc6e:	dec    ebp
  40bc6f:	or     al,0xf
  40bc71:	inc    ebp
  40bc72:	dec    eax
  40bc73:	add    DWORD PTR [ebx],0x8
  40bc76:	(bad)  
  40bc78:	scas   al,BYTE PTR es:[edi]
  40bc79:	dec    ebp
  40bc7a:	add    BYTE PTR [ecx],bh
  40bc7c:	(bad)  
  40bc7d:	lock adc al,0x82
  40bc80:	mov    edi,edi
  40bc82:	call   0xff9cbc86
  40bc87:	rcl    BYTE PTR [edi-0x15],0x31
  40bc8b:	xor    edi,DWORD PTR [edi+0x5e]
  40bc8e:	adc    ebx,eax
  40bc90:	mov    eax,DWORD PTR gs:[eax]
  40bc93:	mov    edx,esi
  40bc95:	nop
  40bc96:	rol    BYTE PTR [eax],1
  40bc98:	mov    bh,0x83
  40bc9a:	push   cs
  40bc9b:	or     al,0xb7
  40bc9d:	xor    ecx,DWORD PTR [esi+edx*2]
  40bca0:	sti    
  40bca1:	cmp    DWORD PTR [ecx+0xf],ebp
  40bca4:	dec    edx
  40bca5:	test   DWORD PTR [ecx+0x318bec00],ecx
  40bcab:	or     al,0x41
  40bcad:	ret    
  40bcae:	or     DWORD PTR [esi+0x65],edi
  40bcb1:	pop    eax
  40bcb2:	add    BYTE PTR [ebp-0x32],dh
  40bcb5:	xor    ecx,eax
  40bcb7:	inc    eax
  40bcb8:	mov    bh,0x76
  40bcba:	push   cs
  40bcbb:	inc    eax
  40bcbc:	mov    bh,0x3
  40bcbe:	or     al,0x8
  40bcc0:	sti    
  40bcc1:	dec    eax
  40bcc2:	sub    ecx,DWORD PTR [ebx+0x70892479]
  40bcc8:	cld    
  40bcc9:	mov    edi,DWORD PTR [ebp+0x18]
  40bccc:	mov    ecx,DWORD PTR [ebp-0x7b]
  40bccf:	add    esi,DWORD PTR [eax+ecx*1-0x75]
  40bcd3:	jne    0x40bcb9
  40bcd5:	cmp    ebx,DWORD PTR [edi+esi*2]
  40bcd8:	jns    0xff50b957
  40bcde:	pop    ecx
  40bcdf:	jge    0x40bce0
  40bce1:	cmp    eax,edi
  40bce3:	cld    
  40bce4:	inc    ebp
  40bce5:	iret   
  40bce6:	or     BYTE PTR [eax-0x5],bh
  40bce9:	jae    0x40bd68
  40bceb:	(bad)  
  40bced:	xor    al,0xf
  40bcef:	jmp    0x40bd6b
  40bcf1:	mov    ecx,DWORD PTR [edi]
  40bcf3:	lea    ebx,[edx-0x4f]
  40bcf6:	mov    esi,DWORD PTR [ebx]
  40bcf8:	in     al,dx
  40bcf9:	test   BYTE PTR [ebp+0x27],0x83
  40bcfd:	jge    0x40bd07
  40bcff:	add    edi,ebx
  40bd01:	mov    DWORD PTR [ebp-0x8],ecx
  40bd04:	cmp    eax,edi
  40bd06:	hlt    
  40bd07:	adc    ah,BYTE PTR [eax+0xf8b4d7d]
  40bd0d:	jl     0x40bd5f
  40bd0f:	clc    
  40bd10:	(bad)  
  40bd12:	js     0x40bc9f
  40bd14:	push   DWORD PTR [edx-0x10]
  40bd17:	mov    eax,ecx
  40bd19:	clc    
  40bd1a:	add    edi,edi
  40bd1c:	mov    DWORD PTR [eax],edx
  40bd1e:	call   0xfbe125e
  40bd23:	inc    edi
  40bd24:	popa   
  40bd25:	jge    0x40bd26
  40bd27:	cmp    ebx,DWORD PTR [edi-0x4]
  40bd2a:	xor    edi,DWORD PTR [edx-0x3ffd78c0]
  40bd30:	rcr    BYTE PTR [esi-0x37],0xc9
  40bd34:	push   ebp
  40bd35:	or     ah,ch
  40bd37:	push   ebp
  40bd38:	sub    ah,0x1
  40bd3b:	in     al,dx
  40bd3c:	add    BYTE PTR [edx-0x7ac7a14],bh
  40bd42:	fist   DWORD PTR [ebp+0x57]
  40bd45:	(bad)  
  40bd46:	sbb    al,bh
  40bd48:	test   BYTE PTR [ebp+0x4500f800],al
  40bd4e:	inc    ebp
  40bd4f:	mov    edi,DWORD PTR [ebx]
  40bd51:	cld    
  40bd52:	je     0x40bda1
  40bd54:	cmp    DWORD PTR [ebx+0x4d05fc78],ecx
  40bd5a:	ror    BYTE PTR [ebx-0x74740315],0x78
  40bd61:	adc    BYTE PTR [ebp-0x42],al
  40bd64:	mov    ecx,DWORD PTR [eax]
  40bd66:	sbb    al,0x7
  40bd68:	push   eax
  40bd69:	inc    ebp
  40bd6a:	mov    ecx,DWORD PTR [edi-0x7487adec]
  40bd70:	add    edi,esp
  40bd72:	or     BYTE PTR [ebx+0x890155],bl
  40bd78:	cld    
  40bd79:	mov    edi,0x372f7
  40bd7e:	jge    0x40bd4e
  40bd80:	xor    eax,esi
  40bd82:	mov    edi,eax
  40bd84:	hlt    
  40bd85:	iret   
  40bd86:	pop    ebp
  40bd87:	inc    ebp
  40bd88:	jbe    0x40bdc5
  40bd8a:	cmp    ecx,DWORD PTR [edi]
  40bd8c:	adc    al,0x7b
  40bd8e:	push   es
  40bd8f:	add    BYTE PTR [edi+0x2fc7a8b],dh
  40bd95:	dec    ebp
  40bd96:	div    DWORD PTR [ebx]
  40bd98:	sbb    al,0x3
  40bd9a:	mov    edi,DWORD PTR [ebx]
  40bd9c:	test   DWORD PTR [edi],ecx
  40bd9e:	je     0x40be09
  40bda0:	mov    eax,DWORD PTR [eax]
  40bda2:	or     BYTE PTR [ebx-0x76820302],cl
  40bda8:	cmp    eax,DWORD PTR [eax]
  40bdaa:	jbe    0x40bdac
  40bdac:	mov    ebx,esi
  40bdae:	or     al,0xdf
  40bdb0:	jg     0x40bd7d
  40bdb2:	add    eax,DWORD PTR [ecx+edi*1-0x1ff07fe]
  40bdb9:	dec    ebp
  40bdba:	add    ecx,DWORD PTR [ecx-0x257a2b83]
  40bdc0:	je     0x40bda0
  40bdc2:	mov    edi,ebx
  40bdc4:	mov    ebx,DWORD PTR [ebp-0xc]
  40bdc7:	mov    ecx,DWORD PTR [ecx+0x7ddaf4f0]
  40bdcd:	adc    dh,BYTE PTR [edx+0x55]
  40bdd0:	jmp    0x40bd5d
  40bdd2:	xor    edi,esp
  40bdd4:	pop    edi
  40bdd5:	rcr    BYTE PTR [ebx+0x33],cl
  40bdd8:	ret    0x3
  40bddb:	cmp    DWORD PTR [ebx+0x2c17830a],ecx
  40bde1:	push   ebp
  40bde2:	xor    eax,0x89fc9c8b
  40bde7:	sar    ah,cl
  40bde9:	xor    eax,DWORD PTR [ebp+0x3]
  40bdec:	xor    al,0x39
  40bdee:	pushf  
  40bdef:	or     cl,BYTE PTR [ebx+0x4d02fc0f]
  40bdf5:	add    BYTE PTR [ebx+0x4dfcfc8b],cl
  40bdfb:	pop    ebp
  40bdfc:	mov    ecx,DWORD PTR [ebx-0x3fb20f04]
  40be02:	push   ebx
  40be03:	add    ebx,DWORD PTR [ebp-0x75]
  40be06:	push   esi
  40be07:	adc    BYTE PTR [edi+0x4d],dl
  40be0a:	push   ecx
  40be0b:	xor    eax,edi
  40be0d:	mov    eax,esi
  40be0f:	in     al,0xeb
  40be11:	dec    ebp
  40be12:	add    ecx,DWORD PTR [ebx-0x317403b3]
  40be18:	nop
  40be19:	iret   
  40be1a:	add    dh,dl
  40be1c:	push   edi
  40be1d:	dec    ebp
  40be1e:	sahf   
  40be1f:	mov    esi,DWORD PTR [edx]
  40be21:	add    esi,DWORD PTR [ebx]
  40be23:	add    esi,DWORD PTR [ebx]
  40be25:	cmp    eax,DWORD PTR [ebx]
  40be27:	je     0x40be2c
  40be29:	add    ecx,DWORD PTR [ecx+0xb4de808]
  40be2f:	mov    eax,DWORD PTR [esp+edi*8+0x4800ce02]
  40be36:	pop    ebp
  40be37:	mov    ecx,DWORD PTR [ebx-0x217bf3f8]
  40be3d:	sahf   
  40be3e:	fbstp  TBYTE PTR [edx]
  40be40:	(bad)  [ecx+0x45020c84]
  40be46:	add    BYTE PTR [eax],dh
  40be48:	pop    ebp
  40be49:	pushf  
  40be4a:	mov    ecx,DWORD PTR [ebx+0x75001080]
  40be50:	xor    ecx,DWORD PTR [ebx+0x3bd803]
  40be56:	ud0    ecx,DWORD PTR [edi-0x75]
  40be5a:	add    ah,bh
  40be5c:	add    ecx,esi
  40be5e:	or     bh,cl
  40be60:	dec    ebp
  40be61:	inc    ebp
  40be62:	mov    edi,DWORD PTR [ebx]
  40be64:	xor    esi,DWORD PTR [ebp+0x3]
  40be67:	mov    ecx,DWORD PTR [ecx+0x5d75f010]
  40be6d:	mov    edi,DWORD PTR [ebx]
  40be6f:	fdiv   DWORD PTR [eax+eax*1-0x75]
  40be73:	push   eax
  40be75:	or     al,0x5d
  40be77:	inc    ebp
  40be78:	imul   eax,edi,0x14
  40be7b:	loopne 0x40be5b
  40be7d:	sbb    ebx,edi
  40be7f:	jg     0x40be9d
  40be81:	inc    ebp
  40be82:	jne    0x40bea0
  40be84:	mov    ebx,DWORD PTR [eax+esi*8+0x6bfc5d8b]
  40be8b:	(bad)  
  40be8c:	adc    al,0xc7
  40be8e:	fiadd  WORD PTR [ebp-0x21]
  40be91:	jne    0x40beef
  40be93:	mov    edx,DWORD PTR [eax]
  40be95:	clc    
  40be96:	test   BYTE PTR [ebp+0x2],cl
  40be99:	xor    eax,DWORD PTR [eax]
  40be9b:	xor    eax,DWORD PTR [ebp-0x73]
  40be9e:	mov    eax,DWORD PTR [ebx]
  40bea0:	cld    
  40bea1:	jb     0x40bee8
  40bea3:	add    BYTE PTR [ebx+0x45],ch
  40bea6:	adc    al,0x8b
  40bea8:	rcr    eax,0x48
  40beab:	add    BYTE PTR [ebx],al
  40bead:	add    ecx,DWORD PTR [eax]
  40beaf:	pmaxub mm1,mm3
  40beb2:	dec    ebp
  40beb3:	dec    DWORD PTR [ebx+0x5545fc24]
  40beb9:	xor    esi,DWORD PTR [ebx]
  40bebb:	add    eax,DWORD PTR [ebx]
  40bebd:	cmp    esi,DWORD PTR [ebx]
  40bebf:	hlt    
  40bec0:	mov    DWORD PTR [edi],ecx
  40bec2:	fadd   QWORD PTR [ebp+0x8]
  40bec5:	xor    edx,edi
  40bec7:	add    ebx,edi
  40bec9:	cmp    ecx,edx
  40becb:	clts   
  40becd:	jp     0x40bf1c
  40becf:	dec    DWORD PTR [ecx+0x4dfcdc8b]
  40bed5:	(bad)  
  40bed6:	xor    eax,edi
  40bed8:	add    eax,DWORD PTR [ebp+0xc]
  40bedb:	jne    0x40bf22
  40bedd:	mov    ecx,DWORD PTR [ebp+0x724d01f8]
  40bee3:	xor    eax,DWORD PTR [eax]
  40bee5:	lea    eax,[ebp+0x1]
  40bee8:	(bad)  
  40bee9:	jb     0x40bec3
  40beeb:	add    BYTE PTR [ebp+0x45e9f845],al
  40bef1:	add    bh,bh
  40bef3:	add    BYTE PTR [eax*2+0x12018d80],cl
  40befa:	add    bh,al
  40befc:	adc    BYTE PTR [ecx*2+0x30e332d],cl
  40bf03:	pop    ebp
  40bf04:	mov    DWORD PTR [ebx],esi
  40bf06:	hlt    
  40bf07:	add    ecx,eax
  40bf09:	jmp    0x85bf20
  40bf0e:	inc    DWORD PTR [ebp+0xc]
  40bf11:	xor    eax,DWORD PTR [eax+0x890103]
  40bf17:	in     al,dx
  40bf18:	push   eax
  40bf19:	inc    ebp
  40bf1a:	mov    DWORD PTR [ebx],esi
  40bf1c:	hlt    
  40bf1d:	add    eax,DWORD PTR [ebp-0x77]
  40bf20:	mov    WORD PTR [esi+eiz*2],cs
  40bf23:	dec    ebp
  40bf24:	(bad)  
  40bf25:	mov    esp,eax
  40bf27:	fcomp  QWORD PTR [ecx+0x45cff8ce]
  40bf2d:	enter  0x633,0x3
  40bf31:	add    al,0x3b
  40bf33:	mov    esp,esi
  40bf35:	in     al,dx
  40bf36:	and    eax,DWORD PTR [ebp+0x45]
  40bf39:	mov    ecx,DWORD PTR [ebx-0x39ba1f68]
  40bf3f:	mov    ecx,esi
  40bf41:	cld    
  40bf42:	pushf  
  40bf43:	dec    ebp
  40bf44:	sahf   
  40bf45:	xor    esi,DWORD PTR [edx]
  40bf47:	add    ecx,DWORD PTR [ebx-0x7f8befc5]
  40bf4d:	mov    eax,DWORD PTR [ecx]
  40bf4f:	cld    
  40bf50:	add    BYTE PTR [ebp-0x31],cl
  40bf53:	xor    ebp,DWORD PTR [edi+0x50c15103]
  40bf59:	pop    ds
  40bf5a:	mov    eax,ecx
  40bf5c:	cld    
  40bf5d:	sbb    dh,al
  40bf5f:	dec    ebp
  40bf60:	(bad)  
  40bf61:	mov    eax,DWORD PTR [ebp+0x10]
  40bf64:	jne    0x40bee6
  40bf66:	mov    eax,DWORD PTR [ecx]
  40bf68:	fadd   DWORD PTR [eax]
  40bf6a:	(bad)  
  40bf6b:	mov    bh,0xc7
  40bf6d:	push   ecx
  40bf6e:	fdiv   DWORD PTR [ebp-0x7a]
  40bf71:	(bad)  
  40bf72:	dec    DWORD PTR [eax]
  40bf74:	call   FWORD PTR [ecx]
  40bf76:	inc    ebp
  40bf77:	inc    ebp
  40bf78:	xor    eax,DWORD PTR [ebx]
  40bf7a:	add    ecx,DWORD PTR [eax]
  40bf7c:	cmp    ecx,DWORD PTR [ebp-0xc]
  40bf7f:	mov    edx,DWORD PTR [edi]
  40bf81:	fadd   DWORD PTR [ebp+0x0]
  40bf84:	mov    eax,DWORD PTR [ebx-0x39fd18]
  40bf8a:	test   ah,dh
  40bf8c:	sahf   
  40bf8d:	push   ecx
  40bf8e:	xor    cl,BYTE PTR [ecx+0x45e80c89]
  40bf94:	out    dx,eax
  40bf95:	mov    eax,DWORD PTR [eax]
  40bf97:	or     al,0xc7
  40bf99:	(bad)  
  40bf9a:	in     al,dx
  40bf9b:	(bad)  
  40bf9c:	sbb    eax,ecx
  40bf9e:	add    DWORD PTR [ebp+0x45],eax
  40bfa1:	jne    0x40bf32
  40bfa3:	mov    eax,DWORD PTR [eax+ebp*8]
  40bfa6:	mov    eax,esi
  40bfa8:	cld    
  40bfa9:	test   dh,bl
  40bfab:	sahf   
  40bfac:	fbstp  TBYTE PTR [edx]
  40bfae:	ret    0x89
  40bfb1:	call   0x4e3cd041
  40bfb6:	(bad)  
  40bfb7:	xor    eax,edi
  40bfb9:	add    eax,DWORD PTR [ebp+0xf]
  40bfbc:	mov    eax,ecx
  40bfbe:	cld    
  40bfbf:	dec    ebp
  40bfc0:	(bad)  
  40bfc1:	mov    edi,eax
  40bfc3:	cdq    
  40bfc4:	inc    ebp
  40bfc5:	inc    ebp
  40bfc6:	mov    esi,DWORD PTR [ebx]
  40bfc8:	cld    
  40bfc9:	lea    eax,[ebp+0x3]
  40bfcc:	xor    esi,DWORD PTR [edx+0x3]
  40bfcf:	add    BYTE PTR [ebx],bh
  40bfd1:	inc    ebp
  40bfd2:	je     0x40bf5f
  40bfd4:	mov    esp,esp
  40bfd6:	cwde   
  40bfd7:	mov    BYTE PTR [ebp-0x39],0x8b
  40bfdb:	add    al,0xe4
  40bfdd:	(bad)  
  40bfdf:	sub    ecx,DWORD PTR [ecx+0x458b0cff]
  40bfe5:	lock mov eax,DWORD PTR [ebp-0x14]
  40bfe9:	mov    eax,esi
  40bfeb:	aam    0xc7
  40bfed:	jmp    0xd645:0x2972c1
  40bff4:	mov    eax,ebp
  40bff6:	in     al,dx
  40bff7:	inc    esi
  40bff9:	mov    eax,edi
  40bffb:	cld    
  40bffc:	jmp    0x750ffbcf
  40c001:	ror    DWORD PTR [ebx+0x4575ec45],0x8b
  40c008:	mov    edi,eax
  40c00a:	fadd   DWORD PTR [ebx]
  40c00c:	add    BYTE PTR [ebp+0xf],al
  40c00f:	xor    ecx,ecx
  40c011:	add    edi,edi
  40c013:	pop    edi
  40c014:	hlt    
  40c015:	pop    ebx
  40c016:	push   eax
  40c017:	ret    0xeb
  40c01a:	mov    ecx,DWORD PTR [ebx+0x2845830c]
  40c020:	mov    eax,DWORD PTR [ebp+0x10]
  40c023:	xor    eax,0xc7019c89
  40c028:	add    al,bl
  40c02a:	rol    BYTE PTR [ebp+0x4575f850],0xff
  40c031:	mov    DWORD PTR [eax],ecx
  40c033:	or     al,0x45
  40c035:	inc    ebp
  40c036:	mov    edi,DWORD PTR [ecx+0x74d08fc]
  40c03c:	xor    eax,ecx
  40c03e:	add    ebx,DWORD PTR [esi+0x568b323b]
  40c044:	clc    
  40c045:	jne    0x40c058
  40c047:	add    ecx,DWORD PTR [ebp+0x3b]
  40c04a:	xor    ecx,DWORD PTR [edi]
  40c04c:	lea    esp,[ecx]
  40c04e:	add    DWORD PTR [eax],eax
  40c050:	jb     0x40bfdd
  40c052:	add    BYTE PTR [eax],cl
  40c054:	inc    ebp
  40c055:	jne    0x40c042
  40c057:	add    ecx,DWORD PTR [ebx-0x3976f3c4]
  40c05d:	or     al,0xc7
  40c05f:	inc    ebp
  40c060:	scas   eax,DWORD PTR es:[edi]
  40c061:	xor    BYTE PTR [ebx+0x48be49c],cl
  40c067:	in     al,0x8b
  40c069:	jne    0x40c063
  40c06b:	mov    eax,esi
  40c06d:	or     al,0x9c
  40c06f:	icebp  
  40c070:	sahf   
  40c071:	shl    DWORD PTR [edx],0xf2
  40c074:	mov    esi,DWORD PTR [esp+edi*8+0x33934d68]
  40c07b:	lsl    ebp,bx
  40c07e:	cmp    DWORD PTR [eax],eax
  40c080:	cdq    
  40c081:	mov    eax,DWORD PTR [ebp-0xba00f4]
  40c087:	add    edx,DWORD PTR [ebp-0x60]
  40c08a:	mov    eax,DWORD PTR [eax]
  40c08c:	call   0x81490e1c
  40c091:	jge    0x40c030
  40c093:	sub    esi,DWORD PTR [edx]
  40c095:	xor    al,0x33
  40c097:	jge    0x40c082
  40c099:	xor    edi,ebp
  40c09b:	add    edi,edi
  40c09d:	mov    DWORD PTR [ebp-0x24],ecx
  40c0a0:	xor    esi,edi
  40c0a2:	add    eax,DWORD PTR [ebx+edi*1-0x3ff7500]
  40c0a9:	jne    0x40c0b3
  40c0ab:	xor    eax,DWORD PTR [ebp+0x3]
  40c0ae:	jmp    0x40c039
  40c0b0:	mov    edi,eax
  40c0b2:	cld    
  40c0b3:	mov    esi,0x5e85c7f0
  40c0b9:	clc    
  40c0ba:	leave  
  40c0bb:	xchg   edi,eax
  40c0bc:	or     al,0x0
  40c0be:	push   ebp
  40c0bf:	mov    ebp,esp
  40c0c1:	cld    
  40c0c2:	in     al,dx
  40c0c3:	icebp  
  40c0c4:	(bad)  
  40c0c5:	jnp    0x40c0c3
  40c0c7:	add    eax,DWORD PTR [ebp+0x453bf8d1]
  40c0cd:	jae    0x40c103
  40c0cf:	sub    ebx,DWORD PTR [ebp+ecx*4-0x76f38f75]
  40c0d6:	inc    ebp
  40c0d7:	call   0x823d7867
  40c0dc:	push   edi
  40c0dd:	call   DWORD PTR [ecx+0x0]
  40c0e0:	xor    ecx,DWORD PTR [ecx+0x7d72ecba]
  40c0e6:	add    BYTE PTR [ebx+0x3082b8b],cl
  40c0ec:	ret    0xf00f
  40c0ef:	xor    eax,DWORD PTR [esi+ebp*8-0x76ffccff]
  40c0f6:	inc    ebp
  40c0f7:	loopne 0x40c084
  40c0f9:	jne    0x40c103
  40c0fb:	mov    esi,DWORD PTR [eax-0x20]
  40c0fe:	push   edi
  40c0ff:	jge    0x40c176
  40c101:	xor    eax,edi
  40c103:	(bad)  
  40c104:	in     al,0x3e
  40c106:	test   DWORD PTR [edx-0x8],esi
  40c109:	add    BYTE PTR [ebp+0x75],al
  40c10c:	mov    ecx,DWORD PTR [ebx+0x7d7df0fc]
  40c112:	xor    esi,DWORD PTR [ebx]
  40c114:	xor    eax,DWORD PTR [ebx]
  40c116:	add    edi,DWORD PTR [ebx]
  40c118:	cmp    DWORD PTR [ebp-0x39],esi
  40c11b:	mov    edx,DWORD PTR [ebp-0x7b82fe10]
  40c121:	xor    eax,DWORD PTR [eax]
  40c123:	add    eax,DWORD PTR [eax]
  40c125:	cmp    esi,DWORD PTR [ebp+0x75]
  40c128:	mov    ecx,DWORD PTR [ebx+0x7d86e008]
  40c12e:	add    BYTE PTR [ecx],al
  40c130:	add    BYTE PTR [ebx+0x4d8b0275],al
  40c136:	or     al,0x75
  40c138:	ja     0x40c0c5
  40c13a:	mov    esi,esp
  40c13c:	cld    
  40c13d:	pop    ebp
  40c13e:	stc    
  40c13f:	mov    edi,edx
  40c141:	in     al,0x75
  40c143:	jge    0x40c180
  40c145:	mov    ecx,DWORD PTR [edi]
  40c147:	or     al,0xc4
  40c149:	icebp  
  40c14a:	add    BYTE PTR [ebx+ecx*4-0xe6c0394],bh
  40c151:	jae    0x40c145
  40c153:	add    esi,DWORD PTR [ebp-0xc]
  40c156:	push   ebx
  40c157:	jne    0x40c19e
  40c159:	mov    esi,DWORD PTR [edx]
  40c15b:	add    al,0x9c
  40c15d:	icebp  
  40c15e:	jmp    0x9dc255
  40c163:	cmp    esi,DWORD PTR [ebp+0xf]
  40c166:	xor    edx,DWORD PTR [ebp+ecx*4-0x1]
  40c16a:	clc    
  40c16b:	pop    ebx
  40c16c:	repnz inc ebp
  40c16e:	out    dx,eax
  40c16f:	pop    edi
  40c170:	test   DWORD PTR [ebx],0x33fe456d
  40c176:	pop    esp
  40c177:	add    ecx,DWORD PTR [eax]
  40c179:	pop    esi
  40c17a:	jge    0x40c13e
  40c17c:	(bad)  
  40c17e:	xor    ecx,DWORD PTR [ebx+0x540f83e6]
  40c184:	add    BYTE PTR [ebp+0x75],al
  40c187:	xor    eax,0xc7ec9c8b
  40c18c:	xor    ah,bl
  40c18e:	repnz test esi,edi
  40c191:	clc    
  40c192:	mov    bh,0x45
  40c194:	rcl    DWORD PTR [ebx+0xc],0xbe
  40c198:	stc    
  40c199:	or     BYTE PTR [ebp+0x7],bh
  40c19c:	mov    esi,eax
  40c19e:	in     al,dx
  40c19f:	sahf   
  40c1a0:	jne    0x40c1d4
  40c1a2:	mov    eax,DWORD PTR [ebx]
  40c1a4:	or     BYTE PTR [ecx+0x45b4e8f1],cl
  40c1aa:	sahf   
  40c1ab:	xor    esi,DWORD PTR [edx]
  40c1ad:	add    ecx,DWORD PTR [ecx+0x75e0e089]
  40c1b3:	mov    ecx,DWORD PTR [ebx-0xeba13e0]
  40c1b9:	mov    esi,edx
  40c1bb:	lock inc cl
  40c1be:	push   ss
  40c1bf:	inc    ebp
  40c1c0:	jne    0x40c143
  40c1c2:	mov    esi,eax
  40c1c4:	in     al,dx
  40c1c5:	mov    ch,0xf1
  40c1c7:	clc    
  40c1c8:	repnz inc ebp
  40c1ca:	dec    BYTE PTR [ebx-0x3e8a07f8]
  40c1d0:	mov    eax,DWORD PTR [ebp-0x24]
  40c1d3:	cmp    DWORD PTR [esi],0xff85c3f8
  40c1d9:	clc    
  40c1da:	call   0x5dcc6124
  40c1df:	hlt    
  40c1e0:	add    ecx,eax
  40c1e2:	clc    
  40c1e3:	inc    ebp
  40c1e4:	jne    0x40c167
  40c1e6:	mov    esi,esp
  40c1e8:	clc    
  40c1e9:	test   DWORD PTR [ebp-0x8],ebx
  40c1ec:	xor    eax,DWORD PTR [ebp+0x3b]
  40c1ef:	mov    esi,ebx
  40c1f1:	in     al,dx
  40c1f2:	xchg   ebp,eax
  40c1f3:	rol    DWORD PTR [ecx],0x45
  40c1f6:	sbb    BYTE PTR [ecx+0x58bec45],al
  40c1fc:	cld    
  40c1fd:	clc    
  40c1fe:	pop    eax
  40c1ff:	pop    es
  40c200:	xor    eax,DWORD PTR [eax]
  40c202:	add    esp,DWORD PTR [esi-0x77]
  40c205:	inc    ebp
  40c206:	hlt    
  40c207:	mov    ebx,esi
  40c209:	or     BYTE PTR [ebp-0x7b0040],al
  40c20f:	add    ecx,DWORD PTR [ebx-0x14ba2800]
  40c215:	test   DWORD PTR [ebx-0x3e2b03f1],ecx
  40c21b:	add    dl,al
  40c21d:	mov    ecx,ecx
  40c21f:	sbb    BYTE PTR [eax],cl
  40c221:	rcl    BYTE PTR [ebp-0x7c],0xec
  40c225:	add    ebp,esp
  40c227:	add    bh,al
  40c229:	mov    edi,esp
  40c22b:	and    BYTE PTR [ebp+0x4500f842],al
  40c231:	data16 xor al,0xc1
  40c234:	pushf  
  40c235:	or     BYTE PTR [ebx+0x5666fc00],cl
  40c23b:	rcl    DWORD PTR [edi+0x4d],0x51
  40c23f:	xor    ax,WORD PTR [ecx]
  40c242:	mov    ebx,0x37285
  40c247:	add    bl,al
  40c249:	inc    ebp
  40c24a:	inc    ebp
  40c24b:	mov    ecx,DWORD PTR [ebx-0x39ba03f8]
  40c251:	add    eax,ebx
  40c253:	cmp    al,0x45
  40c255:	inc    ebp
  40c256:	push   edi
  40c257:	mov    edi,DWORD PTR [ebp+0x50]
  40c25a:	mov    eax,eax
  40c25c:	lock test BYTE PTR [ebp+0x3],cl
  40c260:	xor    eax,DWORD PTR [eax]
  40c262:	mov    DWORD PTR [ebp-0x10],eax
  40c265:	xor    eax,0x8b358c45
  40c26a:	pushf  
  40c26b:	aam    0x8b
  40c26d:	xabort 0xc3
  40c270:	dec    ebp
  40c271:	inc    ebp
  40c272:	xor    ecx,DWORD PTR [ebx-0x78070377]
  40c278:	inc    ebp
  40c279:	add    ebp,esi
  40c27b:	add    BYTE PTR [eax+ecx*1+0x3f4498b],bl
  40c282:	dec    ebp
  40c283:	mov    esi,DWORD PTR [ebx]
  40c285:	cld    
  40c286:	mov    DWORD PTR [edi+0x4501f4],eax
  40c28c:	xor    DWORD PTR [eax],edx
  40c28e:	pushf  
  40c28f:	dec    ebp
  40c290:	mov    ecx,DWORD PTR [ecx-0x2db2df14]
  40c296:	xor    esi,DWORD PTR [ebx]
  40c298:	mov    DWORD PTR [edi+0x4501ec],eax
  40c29e:	xor    eax,0xb8529f55
  40c2a3:	push   ebp
  40c2a4:	xchg   ebp,eax
  40c2a5:	xor    eax,DWORD PTR [eax]
  40c2a7:	add    ecx,DWORD PTR [ecx+0x45712052]
  40c2ad:	inc    DWORD PTR [ebp-0x20aff0e0]
  40c2b3:	mov    eax,DWORD PTR [eax]
  40c2b5:	in     al,0x8b
  40c2b7:	inc    ecx
  40c2b8:	or     al,0x8b
  40c2ba:	rcl    BYTE PTR [eax-0x7c],0xc8
  40c2be:	add    eax,DWORD PTR [ebp+0x0]
  40c2c1:	push   ecx
  40c2c2:	inc    ebp
  40c2c3:	call   0x4fcc4d
  40c2c8:	leave  
  40c2c9:	push   ebp
  40c2ca:	add    BYTE PTR [ebx+0x459466],cl
  40c2d0:	mov    ecx,0x8b8a89
  40c2d5:	or     al,0x33
  40c2d7:	jo     0x40c292
  40c2d9:	(bad)  
  40c2da:	cmp    ecx,DWORD PTR [eax]
  40c2dc:	add    al,ch
  40c2de:	add    eax,DWORD PTR [edi]
  40c2e0:	mov    eax,DWORD PTR [eax]
  40c2e2:	or     BYTE PTR [ebp+0x39],cl
  40c2e5:	mov    ecx,DWORD PTR [edi]
  40c2e7:	cmp    al,0xa9
  40c2e9:	rol    DWORD PTR [eax],0xb7
  40c2ec:	mov    edx,DWORD PTR [esp+edi*8]
  40c2ef:	dec    esp
  40c2f0:	dec    ebp
  40c2f1:	sbb    BYTE PTR [ebx+0x418b084d],cl
  40c2f7:	cld    
  40c2f8:	mov    DWORD PTR [edi-0x31bff9f4],esi
  40c2fe:	test   ebx,ecx
  40c300:	cmovne ecx,DWORD PTR [edi-0x38f0ffc5]
  40c307:	test   al,0xd4
  40c309:	add    BYTE PTR [ebp+0x45fcf88b],al
  40c30f:	into   
  40c310:	xor    ecx,ebx
  40c312:	add    ecx,DWORD PTR [ebp-0x77]
  40c315:	mov    edx,esp
  40c317:	fadd   QWORD PTR [ebp-0x49]
  40c31a:	mov    eax,DWORD PTR [esi]
  40c31c:	nop
  40c31d:	into   
  40c31e:	add    cl,dl
  40c320:	mov    edx,ebx
  40c322:	mov    edx,DWORD PTR [ebp+0x3c]
  40c325:	invd   
  40c327:	mov    BYTE PTR [ebp+0x0],al
  40c32a:	mov    ecx,DWORD PTR [ebx-0x3dffe774]
  40c330:	mov    ecx,DWORD PTR [ecx+0x3e41889]
  40c336:	push   ebp
  40c337:	push   ebp
  40c338:	cmp    ecx,DWORD PTR [ebx+0x488b3875]
  40c33e:	fmul   DWORD PTR [ecx+0x28dd000]
  40c344:	call   0xf8484f0a
  40c349:	rcl    esi,1
  40c34b:	rcl    ebx,0x45
  40c34e:	call   DWORD PTR [eax+0x50]
  40c351:	inc    edx
  40c352:	jne    0x40c357
  40c354:	jmp    DWORD PTR [eax]
  40c356:	sbb    al,0xe8
  40c358:	dec    ebp
  40c359:	or     BYTE PTR [ebx+0x49555400],cl
  40c35f:	mov    ebp,DWORD PTR [ebx]
  40c361:	sbb    BYTE PTR [ebx],al
  40c363:	dec    eax
  40c364:	and    BYTE PTR [ebx],dh
  40c366:	push   eax
  40c367:	add    edi,DWORD PTR [ebx]
  40c369:	cmp    eax,DWORD PTR [eax]
  40c36b:	je     0x40c2f8
  40c36d:	push   ecx
  40c36e:	and    BYTE PTR [ebp-0x79],cl
  40c371:	add    eax,DWORD PTR [ecx]
  40c373:	or     al,0x0
  40c375:	inc    eax
  40c376:	adc    BYTE PTR [ebx],al
  40c378:	inc    ebp
  40c379:	and    bh,bh
  40c37b:	push   eax
  40c37c:	push   esp
  40c37d:	sub    DWORD PTR [ebp+0x0],esi
  40c380:	push   edx
  40c381:	mov    ecx,eax
  40c383:	sbb    BYTE PTR [eax],al
  40c385:	dec    ebp
  40c386:	mov    ecx,DWORD PTR [ebx-0x3fbe1fe0]
  40c38c:	add    esi,DWORD PTR [ebx]
  40c38e:	jge    0x72cdcddc
  40c394:	add    DWORD PTR [eax],eax
  40c396:	mov    DWORD PTR [ebp+0x18],edx
  40c399:	mov    DWORD PTR [ebp+0x18],ecx
  40c39c:	cmovne edx,DWORD PTR [eax+0xf]
  40c3a0:	xor    edx,DWORD PTR [edx+0x3]
  40c3a3:	xor    ecx,DWORD PTR [ecx-0x2e74f3d5]
  40c3a9:	or     al,0x84
  40c3ab:	rol    DWORD PTR [eax],cl
  40c3ad:	dec    ebp
  40c3ae:	add    BYTE PTR [ebx],bh
  40c3b0:	dec    ebp
  40c3b1:	jbe    0x40c3e6
  40c3b3:	mov    eax,DWORD PTR [ebx]
  40c3b5:	cld    
  40c3b6:	mov    DWORD PTR [edi+0x4d01e0],edx
  40c3bc:	bswap  esi
  40c3be:	push   eax
  40c3bf:	retf   
  40c3c0:	xor    ecx,DWORD PTR [ebp+0x2b]
  40c3c3:	mov    ebp,DWORD PTR [ebx]
  40c3c5:	and    BYTE PTR [ecx],bh
  40c3c7:	or     ah,al
  40c3c9:	daa    
  40c3ca:	xchg   DWORD PTR [edi+0x100],eax
  40c3d0:	push   ebp
  40c3d1:	push   ebp
  40c3d2:	adc    DWORD PTR [edx+0x8],0x55
  40c3d6:	push   ebp
  40c3d7:	xor    ebp,ebx
  40c3d9:	add    ecx,DWORD PTR [ebx+0x40551852]
  40c3df:	dec    DWORD PTR [ebp+0x45ffff54]
  40c3e5:	sbb    al,0x8b
  40c3e7:	rol    BYTE PTR [ebp-0x8fe8b7c],0x0
  40c3ee:	and    eax,DWORD PTR [ebp+0x3]
  40c3f1:	mov    edx,eax
  40c3f3:	enter  0x8b,0x4
  40c3f7:	mov    eax,DWORD PTR [ebp+0x33]
  40c3fa:	push   eax
  40c3fb:	add    esp,DWORD PTR [edi-0x74f5fff1]
  40c401:	add    ah,bh
  40c403:	add    DWORD PTR [ebp-0x28],0xffffff8b
  40c407:	mov    eax,0xd64f08
  40c40c:	ror    DWORD PTR [ecx-0x3fe83b36],cl
  40c412:	mov    esp,DWORD PTR [esi+0x8]
  40c415:	inc    ebp
  40c416:	dec    eax
  40c417:	mov    eax,0x44f8b
  40c41c:	inc    ebp
  40c41d:	mov    DWORD PTR [ecx-0x38],edx
  40c420:	call   0xc3cbe5
  40c425:	or     BYTE PTR [ebp-0x75],al
  40c428:	mov    esp,DWORD PTR [esi-0x24]
  40c42b:	inc    ebp
  40c42c:	push   ebp
  40c42d:	mov    eax,0x284e83
  40c432:	into   
  40c433:	mov    DWORD PTR [edx+ecx*8-0x31cd7662],ecx
  40c43a:	mov    eax,DWORD PTR [ebp+0xc]
  40c43d:	lea    eax,[ebp+0x45]
  40c440:	mov    edi,DWORD PTR [ecx+0xb78adc]
  40c446:	push   es
  40c447:	xor    eax,esi
  40c449:	mov    edx,0x453bd0
  40c44e:	sub    eax,DWORD PTR [ebx]
  40c450:	mov    edi,edi
  40c452:	loopne 0x40c45c
  40c454:	retf   0x837d
  40c457:	push   es
  40c458:	dec    ebp
  40c459:	mov    DWORD PTR [ebx+0xc78c72],ecx
  40c45f:	lods   al,BYTE PTR ds:[esi]
  40c460:	xor    edx,eax
  40c462:	add    esi,DWORD PTR [edx]
  40c464:	mov    DWORD PTR [ebp+0x18],eax
  40c467:	xlat   BYTE PTR ds:[ebx]
  40c468:	dec    ebp
  40c469:	sar    BYTE PTR [ebx],1
  40c46b:	(bad)  
  40c46c:	jne    0x40c422
  40c46e:	mov    esp,eax
  40c470:	fsub   st,st(7)
  40c472:	add    BYTE PTR [ebp-0x73],al
  40c475:	xor    ch,al
  40c477:	out    dx,al
  40c478:	mov    eax,edi
  40c47a:	hlt    
  40c47b:	mov    esp,0xd3d3d0d6
  40c480:	mov    eax,edi
  40c482:	in     al,0xc0
  40c484:	jb     0x40c467
  40c486:	push   ecx
  40c487:	inc    ebp
  40c488:	push   eax
  40c489:	jl     0x40c410
  40c48b:	leave  
  40c48c:	cmove  esi,esp
  40c48f:	lods   al,BYTE PTR ds:[esi]
  40c490:	add    BYTE PTR [eax],dl
  40c492:	mov    esi,edx
  40c494:	or     al,0x80
  40c496:	(bad)  
  40c497:	xor    eax,0x83008801
  40c49c:	or     DWORD PTR [edi],edx
  40c49e:	into   
  40c49f:	in     al,dx
  40c4a0:	retf   
  40c4a1:	xchg   DWORD PTR [ecx+eax*1+0x4d000001],eax
  40c4a8:	gs push ecx
  40c4aa:	add    BYTE PTR [eax+0x24],dl
  40c4ad:	mov    eax,DWORD PTR [eax]
  40c4af:	fsub   DWORD PTR [esi+0x0]
  40c4b2:	inc    ebp
  40c4b3:	lea    eax,[ebx-0x76aff554]
  40c4b9:	push   ecx
  40c4ba:	(bad)  
  40c4bb:	lea    ebx,[esi]
  40c4bd:	fadd   DWORD PTR [eax]
  40c4bf:	mov    esp,DWORD PTR [esi-0x74]
  40c4c2:	inc    ebp
  40c4c3:	add    BYTE PTR [ebx+0x65ff08ff],al
  40c4c9:	mov    eax,DWORD PTR [eax]
  40c4cb:	fmul   st,st(0)
  40c4cd:	ror    BYTE PTR [ecx-0x45ba33c6],0xeb
  40c4d4:	add    BYTE PTR [ebx-0x27b2769a],cl
  40c4da:	inc    bp
  40c4dc:	inc    ebp
  40c4dd:	je     0x40c46a
  40c4df:	mov    ecx,DWORD PTR [eax]
  40c4e1:	sbb    BYTE PTR [edi+ecx*4-0x3c],al
  40c4e5:	add    DWORD PTR [edx+0x0],eax
  40c4e8:	add    BYTE PTR [ecx],dl
  40c4ea:	jmpw   0x14f6
  40c4ee:	or     BYTE PTR [ebx+0x668c00],cl
  40c4f4:	retf   0x453b
  40c4f7:	jne    0x40c47c
  40c4f9:	mov    ecx,DWORD PTR [eax]
  40c4fb:	in     al,0x66
  40c4fd:	(bad)
  40c501:	add    BYTE PTR [ebp+0x52],al
  40c504:	enter  0xee03,0x89
  40c508:	(bad)  
  40c509:	sbb    al,0xb0
  40c50b:	inc    ebp
  40c50c:	jmp    0xea20:0x45ff3357
  40c513:	and    dh,ch
  40c515:	inc    edi
  40c517:	test   DWORD PTR [eax+0x3fc3ed0f],edi
  40c51d:	add    BYTE PTR [ebp-0x1],al
  40c520:	ror    BYTE PTR [esi+ebp*8],1
  40c523:	(bad)  
  40c524:	data16 jne 0x40c56c
  40c527:	call   0x7bd0d
  40c52c:	ret    0x33c0
  40c52f:	test   BYTE PTR [ebp-0x75fff300],cl
  40c535:	inc    ebp
  40c536:	or     BYTE PTR [ebx-0x3015dfb7],0x41
  40c53d:	sub    BYTE PTR [eax],dl
  40c53f:	(bad)  
  40c540:	stc    
  40c541:	test   DWORD PTR [edx+0xf],esi
  40c544:	mov    ebx,DWORD PTR [ecx+0x570000d8]
  40c54a:	lea    esi,[ebp-0x3c]
  40c54d:	call   0xff45c051
  40c552:	pop    eax
  40c554:	add    DWORD PTR [eax+eax*1+0x52005500],eax
  40c55b:	xchg   edi,edi
  40c55d:	add    DWORD PTR [eax],ecx
  40c55f:	add    BYTE PTR [ebp+0x55],cl
  40c562:	push   ecx
  40c563:	cmp    ecx,DWORD PTR [edi+0x8b0175]
  40c569:	fdiv   DWORD PTR [ecx]
  40c56b:	add    al,dl
  40c56d:	lea    eax,[ebp-0x18]
  40c570:	test   edi,edi
  40c572:	je     0x40c55c
  40c574:	mov    DWORD PTR [ebp+0x8],ecx
  40c577:	dec    DWORD PTR [edx]
  40c579:	push   esp
  40c57a:	add    bh,bh
  40c57c:	inc    ebp
  40c57d:	sbb    al,0x3b
  40c57f:	push   ebp
  40c580:	or     BYTE PTR [ebx+0x50c80d],cl
  40c586:	mov    ecx,DWORD PTR [ebx+0x300338c]
  40c58c:	cmp    esi,DWORD PTR [ebp+esi*2-0x75]
  40c590:	mov    ecx,DWORD PTR [eax+ebx*1]
  40c593:	inc    ecx
  40c594:	pop    edi
  40c596:	add    DWORD PTR [eax],ecx
  40c598:	add    BYTE PTR [ebp+0x7511f811],ah
  40c59e:	push   ebp
  40c59f:	dec    DWORD PTR [ebx+0xf69014]
  40c5a5:	or     BYTE PTR [ebx+0x11752800],cl
  40c5ab:	adc    DWORD PTR [eax-0x62],0x660c008b
  40c5b2:	push   eax
  40c5b3:	jno    0x40c62a
  40c5b5:	add    ebp,eax
  40c5b7:	push   edx
  40c5b8:	clc    
  40c5b9:	sar    bh,1
  40c5bb:	xchg   eax,eax
  40c5bd:	add    DWORD PTR [eax+eax*1-0x7ff7b00],eax
  40c5c4:	jne    0x40c5d0
  40c5c6:	mov    eax,DWORD PTR [ebp-0x1]
  40c5c9:	mov    esp,DWORD PTR [eax]
  40c5cb:	sub    BYTE PTR [edx+eax*8-0x1],ah
  40c5cf:	rol    BYTE PTR [ebp-0x5174f0bb],1
  40c5d5:	loopne 0x40c5d7
  40c5d7:	dec    ebp
  40c5d8:	mov    ecx,DWORD PTR [ecx+0x1855c70c]
  40c5de:	mov    eax,DWORD PTR [eax]
  40c5e0:	call   0xffbebbe5
  40c5e5:	add    al,al
  40c5e7:	add    al,0x84
  40c5e9:	add    BYTE PTR gs:[eax],al
  40c5ec:	add    BYTE PTR [ebp-0x1],al
  40c5ef:	jmp    0x40c611
  40c5f1:	xor    ecx,eax
  40c5f3:	pop    edi
  40c5f4:	call   FWORD PTR [ebx-0x7b]
  40c5f7:	ret    0xf
  40c5fa:	mov    BYTE PTR [ebx+0x518b0f00],cl
  40c600:	mov    WORD PTR [edi],cs
  40c602:	add    BYTE PTR [ecx-0x75],al
  40c605:	push   ebx
  40c606:	and    BYTE PTR [ebx],dh
  40c608:	adc    BYTE PTR [ebp-0x7a78f7e6],cl
  40c60e:	add    DWORD PTR [eax+eax*1-0x75],esi
  40c612:	dec    ebp
  40c613:	or     al,0x51
  40c615:	sbb    al,0x75
  40c617:	cmp    DWORD PTR [ebx+0x710ce408],ecx
  40c61d:	pop    eax
  40c61e:	push   edx
  40c61f:	add    edx,DWORD PTR [eax+0x3]
  40c622:	mov    edi,DWORD PTR [ecx]
  40c624:	and    BYTE PTR [eax],cl
  40c626:	xchg   DWORD PTR [edx],ecx
  40c628:	add    eax,eax
  40c62a:	add    BYTE PTR [edi+0x0],al
  40c62d:	cli    
  40c62e:	(bad)  
  40c62f:	loope  0x40c5f4
  40c631:	shl    BYTE PTR [edi],0x5b
  40c634:	dec    ebp
  40c635:	ret    0x8b
  40c638:	sub    BYTE PTR [ebx+0x28358345],cl
  40c63e:	pushf  
  40c63f:	inc    ebp
  40c640:	mov    esi,DWORD PTR ds:0xc7759c08
  40c646:	and    esp,0xf8008557
  40c64c:	inc    DWORD PTR [ebp+0x10]
  40c64f:	xor    eax,esi
  40c651:	pushf  
  40c652:	jb     0x40c60c
  40c654:	add    BYTE PTR [edi+0x9],cl
  40c657:	add    BYTE PTR [esi],dl
  40c659:	mov    edx,eax
  40c65b:	hlt    
  40c65c:	inc    eax
  40c65e:	(bad)  
  40c65f:	data16 rol BYTE PTR [ebp+0x0],1
  40c663:	mov    eax,0x9c4f34
  40c668:	jmp    0x40c5f3
  40c66a:	mov    edi,eax
  40c66c:	or     al,0xc0
  40c66e:	inc    eax
  40c66f:	add    ax,WORD PTR [ebp-0x1]
  40c673:	mov    ecx,DWORD PTR [ecx+0x4545e008]
  40c679:	mov    ecx,DWORD PTR [ebx+0x1451c0c]
  40c67f:	mov    eax,DWORD PTR [ebp-0x10]
  40c682:	add    DWORD PTR [ecx+0x7830800],edi
  40c688:	sbb    cl,al
  40c68a:	jne    0x40c617
  40c68c:	sub    esp,0x20
  40c68f:	sahf   
  40c690:	mov    esi,DWORD PTR [edx]
  40c692:	and    BYTE PTR [ebx],al
  40c694:	add    dl,BYTE PTR [edi-0x40]
  40c697:	lock pop esi
  40c699:	test   cl,cl
  40c69b:	add    DWORD PTR [eax+eax*1],ebx
  40c69e:	push   ebp
  40c69f:	inc    ebp
  40c6a0:	in     al,dx
  40c6a1:	mov    esi,DWORD PTR [edi-0x483ef918]
  40c6a7:	ret    0xf014
  40c6aa:	push   edi
  40c6ab:	test   bh,bh
  40c6ad:	add    DWORD PTR [eax+eax*1+0x18],eax
  40c6b1:	inc    ebp
  40c6b2:	shl    BYTE PTR [ebx],cl
  40c6b4:	pop    ds
  40c6b5:	add    ecx,DWORD PTR [eax-0x77]
  40c6b8:	(bad)  
  40c6b9:	loopne 0x40c6ec
  40c6bb:	inc    ebp
  40c6bc:	pop    ebp
  40c6bd:	xor    esi,DWORD PTR [edx+0x3]
  40c6c0:	mov    ecx,DWORD PTR [ecx-0x482623f8]
  40c6c6:	fdivp  st(4),st
  40c6c8:	pop    ebp
  40c6c9:	mov    bh,0x72
  40c6cb:	hlt    
  40c6cc:	add    DWORD PTR [edx+0x28],0x0
  40c6d0:	cmp    esp,DWORD PTR [esi+0x72]
  40c6d3:	lock xor eax,DWORD PTR [edx+0x5f]
  40c6d7:	add    BYTE PTR [ebp+0x66],bl
  40c6da:	add    al,0xfb
  40c6dc:	push   ebp
  40c6dd:	or     ah,ch
  40c6df:	add    ah,ch
  40c6e1:	data16 (bad) 
  40c6e3:	lock lock add eax,DWORD PTR [ebp+0x4566f82b]
  40c6eb:	jge    0x40c721
  40c6ed:	mov    ebx,DWORD PTR [eax+eiz*8+0x66d87dc7]
  40c6f4:	test   DWORD PTR [eax+edi*8],esi
  40c6f7:	sbb    si,WORD PTR [ebp+0x0]
  40c6fb:	mov    esp,DWORD PTR [esi-0x24]
  40c6fe:	inc    ebp
  40c6ff:	jge    0x40c684
  40c701:	pushaw 
  40c703:	xor    al,0x89
  40c705:	data16 cld 
  40c707:	jne    0x40c739
  40c709:	mov    esi,0x667200
  40c70e:	inc    ebp
  40c70f:	or     BYTE PTR [ebx-0x76742000],al
  40c715:	lock clc 
  40c717:	mov    eax,DWORD PTR [ebp+0xc]
  40c71a:	mov    edi,esi
  40c71c:	in     al,dx
  40c71d:	or     BYTE PTR [ebp+0x0],al
  40c720:	mov    esi,edi
  40c722:	call   0x53500c62
  40c727:	sbb    dl,BYTE PTR [edi+0x0]
  40c72a:	push   ecx
  40c72b:	mov    esi,DWORD PTR [ebx]
  40c72d:	lock push esi
  40c72f:	pop    ebp
  40c730:	jne    0x40c765
  40c732:	mov    edx,0x3b7203
  40c737:	retw   0x3b7d
  40c73b:	minpd  xmm7,xmm0
  40c73f:	str    WORD PTR [ebp+0x66f0008b]
  40c746:	jne    0x40c727
  40c748:	xor    eax,DWORD PTR [ebx+eax*1+0xf003b00]
  40c74f:	mov    esp,esi
  40c751:	cld    
  40c752:	add    BYTE PTR [edx-0x75],al
  40c755:	add    al,dh
  40c757:	sar    bx,0xc2
  40c75b:	mov    eax,DWORD PTR [ebp+0x8]
  40c75e:	mov    eax,DWORD PTR [ebx]
  40c760:	lock rcr di,0xc2
  40c765:	es inc ebp
  40c767:	mov    ecx,DWORD PTR [edi]
  40c769:	clc    
  40c76a:	jne    0x40c7ae
  40c76c:	(bad)  
  40c76e:	jge    0x40c7d6
  40c770:	mov    eax,0x8b8afb
  40c775:	or     BYTE PTR [ebx],dh
  40c777:	add    edi,DWORD PTR [ebx+0xdf8a66]
  40c77d:	push   cs
  40c77e:	xor    esi,DWORD PTR [edi-0x48c4f748]
  40c784:	add    ah,dh
  40c786:	add    edi,ebx
  40c788:	mov    ax,di
  40c78b:	or     dh,bh
  40c78d:	mov    ecx,DWORD PTR [ecx+0x7542f4fc]
  40c793:	add    BYTE PTR [ebx-0x7404139a],cl
  40c799:	mov    esi,DWORD PTR [edi+0xc]
  40c79c:	mov    DWORD PTR [ebx],eax
  40c79e:	or     BYTE PTR [esi+0x75],ah
  40c7a1:	fisttp WORD PTR [ebx-0x747417da]
  40c7a7:	clc    
  40c7a8:	ja     0x40c7ec
  40c7aa:	mov    DWORD PTR [eax],eax
  40c7ac:	or     al,0x66
  40c7ae:	sahf   
  40c7af:	sti    
  40c7b0:	add    BYTE PTR [ebx+0x3010ce9],cl
  40c7b6:	add    BYTE PTR [esi+0x7d],ah
  40c7b9:	fbld   TBYTE PTR [esi+0xe]
  40c7bc:	pop    ebp
  40c7bd:	mov    bh,0x81
  40c7bf:	or     al,0x57
  40c7c1:	mov    bh,0x0
  40c7c3:	hlt    
  40c7c4:	add    edi,ebx
  40c7c6:	mov    di,bx
  40c7c9:	or     al,0x84
  40c7cb:	mov    eax,DWORD PTR [ecx]
  40c7cd:	or     al,0x0
  40c7cf:	mov    edi,DWORD PTR [ebp+0x8]
  40c7d2:	mov    edi,DWORD PTR [ebx]
  40c7d4:	adc    BYTE PTR [edi],cl
  40c7d6:	stc    
  40c7d7:	mov    ebx,0x8bdf00fa
  40c7dc:	mov    ebx,eax
  40c7de:	or     al,0x5d
  40c7e0:	mov    esi,DWORD PTR [ebx]
  40c7e2:	or     BYTE PTR [ebp+0x72001f84],cl
  40c7e8:	add    BYTE PTR [eax],al
  40c7ea:	cmp    edi,DWORD PTR [ebp+0xf]
  40c7ed:	mov    ecx,DWORD PTR [ebp+0x665d00d8]
  40c7f3:	xor    edi,DWORD PTR [ebp-0x73]
  40c7f6:	mov    ebx,0x728a1f
  40c7fb:	add    BYTE PTR [ebx],dh
  40c7fd:	jge    0x40c865
  40c7ff:	mov    ebx,DWORD PTR [ebp-0x20]
  40c802:	pop    bp
  40c804:	clc    
  40c805:	cmp    di,WORD PTR [edx+esi*2]
  40c809:	data16 data16 jge 0x40c88a
  40c80d:	mov    edi,DWORD PTR [ebx+0x5d8adc]
  40c813:	xor    di,WORD PTR [esi+eiz*2]
  40c817:	pop    bp
  40c819:	jge    0x40c881
  40c81b:	mov    edi,eax
  40c81d:	lock cmp ecx,DWORD PTR [ebx-0x8f0f789]
  40c824:	jge    0x40c82e
  40c826:	ltr    WORD PTR [ebp-0x2]
  40c82a:	add    edi,DWORD PTR [ebx]
  40c82c:	hsubpd xmm4,xmm0
  40c830:	data16 (bad) 
  40c832:	jge    0x40c7bf
  40c834:	mov    ebx,0xf18ae4
  40c839:	dec    ebp
  40c83a:	xor    eax,DWORD PTR [ebx]
  40c83c:	minpd  xmm6,xmm1
  40c840:	data16 jne 0x40c83b
  40c843:	jmp    0x40c880
  40c845:	mov    esi,DWORD PTR [edx-0x10]
  40c848:	sar    WORD PTR [ebp+0x4d],1
  40c84c:	mov    ebx,0xa8a8d
  40c851:	jb     0x40c886
  40c853:	add    BYTE PTR [esi+0x4d],ah
  40c856:	pop    ebp
  40c857:	mov    esp,DWORD PTR [esi-0x20]
  40c85a:	clc    
  40c85b:	jne    0x40c898
  40c85d:	data16 ja 0x40c894
  40c860:	jnp    0xf1502ee3
  40c866:	pop    ebp
  40c867:	inc    edx
  40c868:	add    eax,DWORD PTR [eax]
  40c86a:	data16 data16 jge 0x40c860
  40c86e:	mov    dx,0x7d
  40c872:	data16 pop bp
  40c875:	icebp  
  40c876:	sbb    di,bx
  40c879:	jne    0x40c800
  40c87b:	mov    eax,DWORD PTR [eax]
  40c87d:	call   0x77be5382
  40c882:	mov    ebp,DWORD PTR [ebx]
  40c884:	in     al,dx
  40c885:	data16 stc 
  40c887:	repnz mov esp,0x32759e3b
  40c88d:	xor    ecx,DWORD PTR [ecx+0x7d33eceb]
  40c893:	inc    eax
  40c894:	mov    eax,DWORD PTR [edi]
  40c896:	call   0xbc74c1e0
  40c89b:	add    ebx,DWORD PTR [esi-0x76a4cda1]
  40c8a1:	ret    0xe8
  40c8a4:	jge    0x40c831
  40c8a6:	mov    edx,DWORD PTR [ecx-0x14]
  40c8a9:	mov    ecx,DWORD PTR [ebx-0x76f784aa]
  40c8af:	add    BYTE PTR [eax],cl
  40c8b1:	data16 jge 0x40c882
  40c8b4:	mov    eax,DWORD PTR [edx-0x18]
  40c8b7:	add    BYTE PTR [ebx-0x7631849a],cl
  40c8bd:	mov    edx,0xc77d000c
  40c8c2:	data16 cld 
  40c8c4:	pop    ebp
  40c8c5:	test   DWORD PTR [ecx+0x3557f8],eax
  40c8cb:	pushf  
  40c8cc:	add    esp,DWORD PTR [esi+0x66]
  40c8cf:	into   
  40c8d0:	fistp  WORD PTR [ebp-0x7b]
  40c8d3:	push   edi
  40c8d4:	(bad)  
  40c8d5:	mov    bh,0xff
  40c8d7:	mov    edi,0xff338d75
  40c8dc:	mov    edx,DWORD PTR [edi-0x10]
  40c8df:	push   ecx
  40c8e0:	repnz mov ebx,0x894faf
  40c8e6:	lock cmp edx,DWORD PTR [edx]
  40c8e9:	jne    0x40c940
  40c8eb:	mov    DWORD PTR [ebx],esi
  40c8ed:	cld    
  40c8ee:	mov    edx,DWORD PTR [edi-0x1c]
  40c8f1:	xor    ecx,DWORD PTR [ebx+ecx*4+0x6632339e]
  40c8f8:	mov    DWORD PTR [esp+eiz*8-0x749baac4],ecx
  40c8ff:	mov    ebx,0x8b3bec
  40c904:	push   esi
  40c905:	sub    ecx,eax
  40c907:	mov    ebx,0xba8a2b
  40c90c:	mov    dh,BYTE PTR [ebx]
  40c90e:	add    BYTE PTR [ebx+0xb94e33],bh
  40c914:	dec    esi
  40c915:	cmp    eax,DWORD PTR [eax]
  40c917:	jne    0x40c954
  40c919:	mov    esi,DWORD PTR [ebp-0x4]
  40c91c:	mov    ebx,DWORD PTR [ebx-0x24]
  40c91f:	stc    
  40c920:	jge    0x40c8a7
  40c922:	data16 clc 
  40c924:	xor    al,0x9
  40c926:	data16 into 
  40c928:	lock test BYTE PTR [ebx],dh
  40c92b:	ds data16 fs icebp 
  40c92f:	pop    esi
  40c930:	add    al,0xc3
  40c932:	ror    BYTE PTR [ebx+0x57c0510c],0xeb
  40c939:	inc    ebp
  40c93a:	mov    esi,DWORD PTR [esi]
  40c93c:	in     al,0x9c
  40c93e:	sar    DWORD PTR [esi-0x7a17a3e],0xc9
  40c945:	pop    ebx
  40c946:	or     al,0xff
  40c948:	push   ebp
  40c949:	mov    ebp,esp
  40c94b:	mov    ah,BYTE PTR [esi+0x4]
  40c94e:	or     BYTE PTR [esi+edi*4],dh
  40c951:	cmp    al,0x3b
  40c953:	je     0x40c955
  40c955:	mov    ebp,DWORD PTR [ebx]
  40c957:	mov    edx,0xff8a8dbe
  40c95c:	add    BYTE PTR [edi+0x33],dl
  40c95f:	push   ecx
  40c960:	mov    esi,0x8b4e53
  40c965:	mov    ebx,0x363b45
  40c96a:	pushf  
  40c96b:	sub    edi,DWORD PTR [edx-0x7757a45]
  40c971:	add    BYTE PTR [ebx],bh
  40c973:	xor    esi,DWORD PTR [ebx+edi*4+0x53]
  40c977:	dec    edi
  40c978:	str    ecx
  40c97b:	cmp    esp,DWORD PTR [edx+0x75]
  40c97e:	int    0x89
  40c980:	mov    esi,0x77208fc
  40c985:	xor    edx,DWORD PTR [esi]
  40c987:	mov    eax,DWORD PTR [eax]
  40c989:	xor    esp,DWORD PTR [esi-0x73]
  40c98c:	retf   
  40c98d:	push   edi
  40c98e:	add    esp,ebp
  40c990:	push   ebp
  40c991:	add    BYTE PTR [ebp-0x293cfee8],cl
  40c997:	cmp    dl,0x49
  40c99a:	(bad)  
  40c99b:	sti    
  40c99c:	mov    esi,DWORD PTR [ebp+0x78]
  40c99f:	mov    esp,ebp
  40c9a1:	cld    
  40c9a2:	add    BYTE PTR ds:0xf8008508,bh
  40c9a8:	data16 or al,0xcb
  40c9ab:	rol    DWORD PTR [edx-0x37],0x0
  40c9af:	mov    DWORD PTR [esi+0x47],esp
  40c9b2:	retf   
  40c9b3:	in     eax,0xba
  40c9b5:	add    BYTE PTR [eax],al
  40c9b7:	(bad)  
  40c9b8:	pop    si
  40c9ba:	retf   
  40c9bb:	ret    
  40c9bc:	enter  0x4d8b,0x51
  40c9c0:	pop    edi
  40c9c1:	mov    DWORD PTR [ecx-0x637ac904],0x333574f8
  40c9cb:	pushf  
  40c9cc:	(bad)  
  40c9cd:	call   0x26c81a
  40c9d2:	add    BYTE PTR [ebx+0x3b55bac9],cl
  40c9d8:	in     al,dx
  40c9d9:	add    BYTE PTR [esi+0x2b],dl
  40c9dc:	(bad)  
  40c9dd:	mov    edx,0x858afc
  40c9e2:	clc    
  40c9e3:	xor    esi,DWORD PTR ds:0xe84e9cba
  40c9e9:	add    bh,bh
  40c9eb:	cmp    edi,edi
  40c9ed:	je     0x40c9e7
  40c9ef:	push   ebx
  40c9f0:	pop    es
  40c9f1:	sysexit 
  40c9f3:	leave  
  40c9f4:	dec    ecx
  40c9f5:	bound  edi,QWORD PTR [ebp+ecx*8+0x61]
  40c9f9:	mov    edi,0x76208c7
  40c9fe:	int    0x64
  40ca00:	mov    ecx,0x7660800
  40ca05:	retf   
  40ca06:	add    ax,WORD PTR [eax]
  40ca09:	jne    0x40ca13
  40ca0b:	lea    eax,[eax]
  40ca0d:	add    DWORD PTR [esi-0x9],esp
  40ca10:	ret    
  40ca11:	(bad)  
  40ca12:	inc    edx
  40ca13:	xlat   BYTE PTR ds:[ebx]
  40ca14:	add    BYTE PTR [ebx-0x1a3caf9a],cl
  40ca1a:	add    BYTE PTR fs:[eax],al
  40ca1d:	or     BYTE PTR [esi+0x0],ah
  40ca20:	ret    
  40ca21:	add    cx,bx
  40ca24:	jne    0x40ca68
  40ca26:	lea    eax,[eax]
  40ca28:	add    DWORD PTR [esi-0xf],esp
  40ca2b:	retf   
  40ca2c:	(bad)  
  40ca2d:	mov    edx,0x668400d1
  40ca32:	cmp    al,0xcb
  40ca34:	fs enter 0x7d8a,0x80
  40ca39:	ss xor eax,0x805ff39c
  40ca3f:	je     0x40cabd
  40ca41:	xor    eax,ebx
  40ca43:	inc    eax
  40ca44:	inc    ebp
  40ca45:	add    bl,BYTE PTR [ebx-0x40]
  40ca48:	ss leave 
  40ca4a:	pushf  
  40ca4b:	push   ebp
  40ca4c:	je     0x40ca3a
  40ca4e:	xor    ecx,DWORD PTR [ebx-0x4899f7cd]
  40ca54:	mov    WORD PTR [esi+0x3c],ss
  40ca57:	and    DWORD PTR [esp+eax*8-0x75],0xc9425fff
  40ca5f:	add    BYTE PTR [ebp+0x57],dl
  40ca62:	in     al,dx
  40ca63:	(bad)  
  40ca64:	push   esi
  40ca65:	mov    edx,0x89360045
  40ca6a:	pushf  
  40ca6b:	cld    
  40ca6c:	mov    esi,0xf874853b
  40ca71:	mov    edx,edx
  40ca73:	or     bh,bh
  40ca75:	ret    0x4566
  40ca78:	or     bl,ch
  40ca7a:	or     BYTE PTR [ebx-0x7699f800],cl
  40ca80:	retf   0x4283
  40ca83:	add    al,BYTE PTR [eax]
  40ca85:	mov    bh,0x66
  40ca87:	adc    dl,cl
  40ca89:	iret   
  40ca8a:	mov    edx,0x66c400c7
  40ca8f:	dec    edx
  40ca91:	(bad)  
  40ca92:	push   edi
  40ca93:	mov    edx,0x66b70057
  40ca98:	mov    edx,0xffdf8df8
  40ca9d:	rcl    BYTE PTR [edi+0x66],0x51
  40caa1:	add    bh,BYTE PTR [ebx+0x5e4f45]
  40caa7:	ret    0x3b
  40caaa:	jne    0x40ca37
  40caac:	mov    DWORD PTR [ebx+0x457218fc],eax
  40cab2:	xor    esi,DWORD PTR ds:0xc7339c8b
  40cab8:	callw  0x5048
  40cabc:	cmp    al,0xf8
  40cabe:	fs inc ebp
  40cac0:	mov    ebx,0x83b35
  40cac5:	pop    es
  40cac6:	sub    ebx,DWORD PTR [esi-0x7675cd45]
  40cacc:	add    al,bh
  40cace:	xor    eax,DWORD PTR [ebp-0x45]
  40cad1:	cmp    eax,0xc7009c4e
  40cad6:	cmp    esi,esp
  40cad8:	jne    0x40ca5f
  40cada:	cmp    eax,0x338545fc
  40cae0:	clc    
  40cae1:	pushf  
  40cae2:	pop    ebx
  40cae3:	mov    eax,DWORD PTR ds:0xeb57c0ec
  40cae9:	push   ecx
  40caea:	xor    ecx,DWORD PTR [ebx-0x7b3c07a2]
  40caf0:	mov    ebx,DWORD PTR [esi-0x74bacdaf]
  40caf6:	psubsb mm1,QWORD PTR [eax]
  40caf9:	icebp  
  40cafa:	lea    ecx,[eax]
  40cafc:	clc    
  40cafd:	pop    es
  40cafe:	inc    ecx
  40cb00:	mov    esi,0x8a72
  40cb05:	push   ebp
  40cb06:	xor    ecx,DWORD PTR [edi]
  40cb08:	mov    edi,0xc24ed1
  40cb0d:	adc    DWORD PTR [ebp+0x0],0x66
  40cb11:	add    bh,al
  40cb13:	inc    ebp
  40cb14:	sub    ecx,DWORD PTR [ebx-0x3ed407bb]
  40cb1a:	mov    DWORD PTR [ebp+0x8],ecx
  40cb1d:	add    DWORD PTR [ebx],0x66514557
  40cb23:	or     DWORD PTR [edx],0xf32c29e
  40cb29:	cmp    edi,DWORD PTR [esi+esi*2]
  40cb2c:	mov    ecx,DWORD PTR [ebx+0x45f80881]
  40cb32:	dec    DWORD PTR [ebx+0x4db80c33]
  40cb38:	dec    esi
  40cb39:	mov    eax,DWORD PTR [eax]
  40cb3b:	mov    DWORD PTR [ebx],edi
  40cb3d:	mov    esi,DWORD PTR [ebp+0x4]
  40cb40:	xor    ecx,DWORD PTR [eax+0x5f]
  40cb43:	mov    ecx,DWORD PTR [ecx-0x3a87410]
  40cb49:	push   ecx
  40cb4a:	leave  
  40cb4b:	mov    eax,DWORD PTR [eax+edi*8]
  40cb4e:	push   ebp
  40cb4f:	test   ah,ch
  40cb51:	sahf   
  40cb52:	in     al,dx
  40cb53:	xor    al,bh
  40cb55:	mov    esp,ebp
  40cb57:	clc    
  40cb58:	test   DWORD PTR [ebp-0x74baff08],ebx
  40cb5e:	xor    al,0x10
  40cb60:	pushf  
  40cb61:	dec    ebp
  40cb62:	mov    ebp,DWORD PTR [ebx]
  40cb64:	in     al,dx
  40cb65:	mov    edx,DWORD PTR [edi-0xc]
  40cb68:	push   ecx
  40cb69:	icebp  
  40cb6a:	add    eax,0x77208
  40cb6f:	rol    DWORD PTR [ebp+0x72],0xc7
  40cb73:	add    al,dh
  40cb75:	rol    DWORD PTR [ebp+0x4545f827],0x3
  40cb7c:	xor    eax,edi
  40cb7e:	pushf  
  40cb7f:	dec    ebp
  40cb80:	mov    DWORD PTR [ebx],0x985f8fc
  40cb86:	clc    
  40cb87:	or     BYTE PTR [ebp+0x45],al
  40cb8a:	xor    eax,0x7080835
  40cb8f:	pop    es
  40cb90:	dec    ebp
  40cb91:	dec    ebp
  40cb92:	lea    ecx,[ebp+0x72720101]
  40cb98:	add    BYTE PTR [eax],al
  40cb9a:	dec    ebp
  40cb9b:	inc    ebp
  40cb9c:	sub    ebx,0x10518b57
  40cba2:	or     DWORD PTR [ebp-0x62],0x8b8b322b
  40cba9:	cld    
  40cbaa:	adc    cl,dh
  40cbac:	scas   eax,DWORD PTR es:[edi]
  40cbad:	or     BYTE PTR [ebx],bh
  40cbaf:	pop    es
  40cbb0:	xadd   ebp,ebp
  40cbb3:	jb     0x40cbb5
  40cbb5:	add    BYTE PTR [ebx+0x4d2910c1],cl
  40cbbb:	inc    ebp
  40cbbc:	sub    eax,DWORD PTR [ebx]
  40cbbe:	mov    edi,eax
  40cbc0:	lock dec ebp
  40cbc2:	icebp  
  40cbc3:	add    ecx,DWORD PTR [eax]
  40cbc5:	clc    
  40cbc6:	pop    es
  40cbc7:	mov    eax,ecx
  40cbc9:	data16 jb 0x40cbd4
  40cbcc:	add    BYTE PTR [ebp-0x3f],al
  40cbcf:	xor    eax,0x7450830
  40cbd4:	add    ecx,DWORD PTR [ebp-0x8]
  40cbd7:	lea    ecx,[ebp+0x1]
  40cbda:	add    esi,DWORD PTR [edx-0x8]
  40cbdd:	add    BYTE PTR [ecx],dl
  40cbdf:	inc    ebp
  40cbe0:	adc    bl,ch
  40cbe2:	dec    ecx
  40cbe3:	mov    ecx,DWORD PTR [ecx+0x45450408]
  40cbe9:	mov    esi,DWORD PTR ds:0x74d080c
  40cbef:	mov    cl,BYTE PTR [ebp-0x78]
  40cbf2:	lea    ecx,[ebx-0x768d07ff]
  40cbf8:	add    al,bh
  40cbfa:	inc    ebp
  40cbfb:	in     al,0xe9
  40cbfd:	inc    DWORD PTR [eax]
  40cbff:	leave  
  40cc00:	add    BYTE PTR [eax*2-0x71374ab],cl
  40cc07:	push   ecx
  40cc08:	rol    DWORD PTR [ebp+0x4d],0x35
  40cc0c:	sbb    DWORD PTR [edi+edx*2-0x7e07ae39],0x32f89e85
  40cc17:	sar    BYTE PTR [ebx],0x74
  40cc1a:	jbe    0x40cba7
  40cc1c:	mov    edi,esp
  40cc1e:	or     BYTE PTR [edi+0x45],dl
  40cc21:	push   ecx
  40cc22:	mov    eax,DWORD PTR ds:0x4d720c
  40cc28:	mov    eax,DWORD PTR [ebp-0x77]
  40cc2b:	jne    0x40cbb8
  40cc2d:	jmp    0x40cc23
  40cc2f:	mov    edx,DWORD PTR [edi-0x8]
  40cc32:	push   ecx
  40cc33:	push   edi
  40cc34:	mov    edx,DWORD PTR [ecx-0x8]
  40cc37:	add    eax,0x9e7284
  40cc3c:	xor    cl,BYTE PTR [ebp-0x77]
  40cc3f:	sub    edi,eax
  40cc41:	mov    DWORD PTR [ebx+0xc],ebx
  40cc44:	inc    ebp
  40cc45:	inc    ebp
  40cc46:	mov    esi,DWORD PTR ds:0x7c108f8
  40cc4c:	dec    ebp
  40cc4d:	sahf   
  40cc4e:	xor    DWORD PTR [edx],0x8518b57
  40cc54:	or     DWORD PTR [ebp-0x62],0x3beb3288
  40cc5b:	leave  
  40cc5c:	jbe    0x40cc66
  40cc5e:	mov    edx,DWORD PTR [ebp+0x8]
  40cc61:	in     al,dx
  40cc62:	inc    ebp
  40cc63:	in     al,dx
  40cc64:	mov    eax,DWORD PTR [edx]
  40cc66:	or     al,0x0
  40cc68:	dec    ebp
  40cc69:	inc    ebp
  40cc6a:	xor    ax,0x9c09
  40cc6e:	mov    edi,eax
  40cc70:	mov    esi,eax
  40cc72:	cld    
  40cc73:	test   DWORD PTR [edi-0x8],edx
  40cc76:	push   ecx
  40cc77:	inc    ebp
  40cc78:	mov    ecx,DWORD PTR [ebx-0x3f7bf708]
  40cc7e:	sahf   
  40cc7f:	pop    es
  40cc80:	xor    al,al
  40cc82:	mov    DWORD PTR [ebp-0x74e8ff08],esp
  40cc88:	inc    ebp
  40cc89:	or     al,0x3
  40cc8b:	sar    al,0xf2
  40cc8e:	dec    ebp
  40cc8f:	lea    eax,[ebx]
  40cc91:	in     al,0xf8
  40cc93:	dec    DWORD PTR [ecx]
  40cc95:	mov    DWORD PTR [eax],ecx
  40cc97:	cld    
  40cc98:	inc    ebp
  40cc99:	inc    ebp
  40cc9a:	inc    eax
  40cc9b:	mov    DWORD PTR [ebp-0x14],eax
  40cc9e:	jmp    0xff97cae8
  40cca3:	mov    edi,0x70008c2
  40cca8:	mov    eax,edi
  40ccaa:	push   ecx
  40ccab:	sahf   
  40ccac:	(bad)  
  40ccad:	xor    bh,ah
  40ccaf:	add    eax,DWORD PTR [ebp+0x4510f889]
  40ccb5:	inc    ebp
  40ccb6:	xor    al,0xe8
  40ccb8:	pushf  
  40ccb9:	std    
  40ccba:	xor    edi,edi
  40ccbc:	inc    eax
  40ccbd:	fadd   DWORD PTR [eax+0x45]
  40ccc0:	inc    ebp
  40ccc1:	mov    esi,DWORD PTR ds:0x7510814
  40ccc7:	inc    ebp
  40ccc8:	sahf   
  40ccc9:	xor    DWORD PTR [edx],0x8
  40cccc:	cmp    DWORD PTR [ebp+0xc],eax
  40cccf:	mov    eax,DWORD PTR [edx]
  40ccd1:	clc    
  40ccd2:	sub    al,0x40
  40ccd4:	inc    ebp
  40ccd5:	call   0xff49c80f
  40ccda:	pop    es
  40ccdb:	inc    ebp
  40ccdc:	sahf   
  40ccdd:	push   DWORD PTR [edx]
  40ccdf:	adc    BYTE PTR [ebx-0x3717f3ab],cl
  40cce5:	std    
  40cce6:	dec    ebp
  40cce7:	dec    DWORD PTR [ebx+0x5708fcdb]
  40cced:	inc    ebp
  40ccee:	push   ecx
  40ccef:	call   0xffb3c8f9
  40ccf4:	add    BYTE PTR [ebp+0x4d],al
  40ccf7:	xor    eax,DWORD PTR [ebx]
  40ccf9:	add    ecx,DWORD PTR [eax+edx*2]
  40ccfc:	add    DWORD PTR [ebp-0x45],esi
  40ccff:	inc    edx
  40cd01:	cld    
  40cd02:	add    BYTE PTR [ecx],dh
  40cd04:	mov    edi,edi
  40cd06:	or     DWORD PTR [ebx-0x30ff0be4],0xc1f4cec7
  40cd10:	test   DWORD PTR [esi],ebx
  40cd12:	clc    
  40cd13:	inc    ebp
  40cd14:	inc    ebp
  40cd15:	mov    esi,DWORD PTR [ecx+ecx*4]
  40cd18:	pushf  
  40cd19:	or     al,0x8b
  40cd1b:	inc    ebp
  40cd1c:	adc    BYTE PTR [ebx-0x3f7af3bb],cl
  40cd22:	jne    0x40cd5f
  40cd24:	xor    esi,DWORD PTR [ebp-0x17]
  40cd27:	xor    eax,DWORD PTR [eax]
  40cd29:	pop    edi
  40cd2a:	add    BYTE PTR [ebx+0x45],bl
  40cd2d:	ret    0x85
  40cd30:	je     0x40cd77
  40cd32:	push   ebx
  40cd33:	mov    eax,DWORD PTR [ebp-0xe02e8]
  40cd39:	mov    eax,DWORD PTR [ebp-0x75]
  40cd3c:	mov    ecx,DWORD PTR [esp+ecx*1]
  40cd3f:	in     al,dx
  40cd40:	inc    ebp
  40cd41:	or     DWORD PTR [ebx+0x5753f408],0x57
  40cd48:	push   edi
  40cd49:	test   BYTE PTR [ecx+0x0],dl
  40cd4c:	xor    eax,DWORD PTR [eax]
  40cd4e:	mov    esi,0x8472c0
  40cd53:	add    dh,al
  40cd55:	add    BYTE PTR [ebp-0x49],al
  40cd58:	mov    esp,DWORD PTR [eax]
  40cd5a:	or     al,0xc8
  40cd5c:	add    BYTE PTR [ebp-0x1],al
  40cd5f:	xor    ecx,DWORD PTR [ebx+0x8f88b21]
  40cd65:	inc    edx
  40cd66:	inc    eax
  40cd67:	add    bl,ch
  40cd69:	xor    ecx,DWORD PTR [ebx-0x17f7f37f]
  40cd6f:	add    BYTE PTR [ecx+0x45f4f889],cl
  40cd75:	mov    eax,DWORD PTR gs:[eax]
  40cd78:	sub    cl,cl
  40cd7a:	retf   0xff7e
  40cd7d:	mov    WORD PTR [ebp+0x10],cx
  40cd81:	jae    0x40cdf8
  40cd83:	lea    ecx,[ebx+0x63fffcf8]
  40cd89:	xor    edi,edi
  40cd8b:	jne    0x8bcc42de
  40cd91:	or     al,0xfc
  40cd93:	or     al,0x3e
  40cd95:	push   WORD PTR [ecx-0x75]
  40cd99:	jne    0x40cd8b
  40cd9b:	cmpxchg8b QWORD PTR [ecx]
  40cd9e:	(bad)  
  40cd9f:	mov    edx,0x66ec00ff
  40cda4:	jne    0x40cd75
  40cda6:	call   0xff9ec6b7
  40cdab:	cmovge edi,edx
  40cdae:	xor    edi,DWORD PTR [ebx+eax*1]
  40cdb1:	add    BYTE PTR [ebx],bh
  40cdb3:	sub    eax,0xf8b5d74
  40cdb8:	or     al,0xfa
  40cdba:	add    BYTE PTR [edi],cl
  40cdbc:	inc    ebp
  40cdbd:	cmp    al,0x8b
  40cdbf:	mov    ebx,0x4d3b08
  40cdc4:	sub    DWORD PTR [ebx],0x14
  40cdc7:	enterw 0x9ff8,0x3b
  40cdcc:	shl    BYTE PTR [esi+ebx*2+0x6a],0xc9
  40cdd1:	pop    edi
  40cdd2:	or     al,0x45
  40cdd4:	mov    esp,DWORD PTR [esi-0x8]
  40cdd7:	dec    ebp
  40cdd8:	inc    eax
  40cdd9:	data16 jmp 0x40ce29
  40cddc:	push   ebp
  40cddd:	jb     0x40cdcb
  40cddf:	jmp    0x40ce26
  40cde1:	inc    DWORD PTR [ebx+0x7d7f10f8]
  40cde7:	mov    eax,DWORD PTR [eax]
  40cde9:	or     BYTE PTR [esi-0x49],dl
  40cdec:	jo     0x7440ffa1
  40cdf2:	test   DWORD PTR [edx+0xf],eax
  40cdf5:	jmp    DWORD PTR [edi+0xf77000f]
  40cdfb:	inc    DWORD PTR [eax+0x33]
  40cdfe:	mov    ebx,DWORD PTR [edi-0x77]
  40ce01:	pop    ebx
  40ce02:	lock ret 0xd2
  40ce06:	push   ebp
  40ce07:	dec    ebp
  40ce08:	mov    eax,0xf88a81
  40ce0d:	dec    eax
  40ce0f:	ror    ax,0x3b
  40ce13:	rol    BYTE PTR [eax],0x3b
  40ce16:	dec    ebp
  40ce17:	lock adc DWORD PTR [esp+edi*8+0x6a5533eb],0xffffffec
  40ce20:	pop    edi
  40ce21:	in     al,dx
  40ce22:	cmp    edx,DWORD PTR [edi-0xc]
  40ce25:	clc    
  40ce26:	xchg   DWORD PTR fs:[edx-0xff3bff],esi
  40ce2d:	cmp    al,dh
  40ce2f:	jne    0x40cde8
  40ce31:	xor    edi,esp
  40ce33:	jmp    0xcdcf95
  40ce38:	mov    ebp,DWORD PTR [ecx+edi*1]
  40ce3b:	jne    0x40ce3f
  40ce3d:	call   0xfff8cb79
  40ce42:	mov    edi,0x14e97
  40ce47:	add    BYTE PTR [ebx],bh
  40ce49:	inc    edi
  40ce4a:	jne    0x40cdd5
  40ce4c:	mov    esi,DWORD PTR [eax+ecx*1-0x7f7648b9]
  40ce53:	mov    eax,0x8974471f
  40ce58:	mov    edi,DWORD PTR [eax+ecx*1+0x6600b787]
  40ce5f:	add    BYTE PTR [esi+0x88d1f45],bh
  40ce65:	stos   BYTE PTR es:[edi],al
  40ce66:	add    BYTE PTR [eax],al
  40ce68:	mov    bx,di
  40ce6b:	les    esi,FWORD PTR [ebx]
  40ce6d:	xchg   DWORD PTR [esi+0x0],esp
  40ce70:	iret   
  40ce71:	add    BYTE PTR [edx],dl
  40ce73:	inc    ebp
  40ce74:	jl     0x40ce03
  40ce76:	(bad)  
  40ce77:	out    dx,al
  40ce78:	cld    
  40ce79:	add    BYTE PTR [ebx+0x39ccf489],cl
  40ce7f:	xchg   esp,edi
  40ce81:	add    DWORD PTR [eax+eax*1-0x72babafa],ebp
  40ce88:	push   0x32
  40ce8a:	pop    edi
  40ce8b:	add    BYTE PTR [ebp-0x77],dh
  40ce8e:	paddq  mm1,mm2
  40ce91:	xchg   DWORD PTR [ecx+eax*1],edi
  40ce94:	add    BYTE PTR [eax],al
  40ce96:	adc    ecx,DWORD PTR [ecx+0x457cb083]
  40ce9c:	test   eax,ebp
  40ce9e:	inc    DWORD PTR [eax]
  40cea0:	inc    DWORD PTR [eax]
  40cea2:	ror    BYTE PTR [ebx+0xc9a85e],0x8
  40cea9:	dec    DWORD PTR [ebx-0x3e020718]
  40ceaf:	inc    esp
  40ceb1:	inc    ebp
  40ceb2:	inc    DWORD PTR [ebp-0x52ccf0cd]
  40ceb8:	data16 add BYTE PTR [ebp-0x75],cl
  40cebc:	(bad)  
  40cebe:	rcl    BYTE PTR [esi-0x1e],0x74
  40cec2:	mov    edi,DWORD PTR [eax-0x7d]
  40cec5:	lock push eax
  40cec7:	jle    0x40ce54
  40cec9:	mov    ecx,DWORD PTR [ebx+0x56a81c]
  40cecf:	mov    eax,DWORD PTR [ebx+0x7f80018]
  40ced5:	jge    0x40ce97
  40ced7:	mov    esi,DWORD PTR [eax]
  40ced9:	adc    al,0x0
  40cedb:	enter  0xd06a,0xff
  40cedf:	dec    ebp
  40cee0:	or     BYTE PTR [ecx+0x7dffe4c1],cl
  40cee6:	mov    edi,DWORD PTR [ebx]
  40cee8:	lods   al,BYTE PTR ds:[esi]
  40cee9:	ja     0x40ceeb
  40ceeb:	mov    DWORD PTR [ebp+0x45db22f8],ecx
  40cef1:	pop    ebp
  40cef2:	lea    edi,[ecx]
  40cef4:	inc    esp
  40cef5:	clc    
  40cef6:	inc    ebp
  40cef7:	outs   dx,BYTE PTR ds:[esi]
  40cef8:	lea    eax,[ebx]
  40cefa:	push   bp
  40cefc:	inc    ebp
  40cefd:	mov    ecx,DWORD PTR [ebp+0xb788e0]
  40cf03:	pop    edi
  40cf04:	mov    DWORD PTR [esi-0x40],ebx
  40cf07:	jae    0x40ce90
  40cf09:	cmp    eax,DWORD PTR [eax]
  40cf0b:	adc    al,0x0
  40cf0d:	pop    eax
  40cf0e:	inc    ebp
  40cf0f:	sbb    al,0x8d
  40cf11:	mov    ecx,esp
  40cf13:	or     BYTE PTR [eax],al
  40cf15:	cmp    al,0x89
  40cf17:	mov    eax,ecx
  40cf19:	cld    
  40cf1a:	xchg   DWORD PTR [ebp+0x0],edx
  40cf1d:	add    eax,DWORD PTR [eax]
  40cf1f:	add    eax,DWORD PTR [ebp+0x2b]
  40cf22:	lea    ecx,[eax]
  40cf24:	adc    BYTE PTR [ebp+0x0],al
  40cf27:	or     ecx,DWORD PTR [ecx-0x78763000]
  40cf2d:	fadd   QWORD PTR [ecx]
  40cf2f:	push   ebp
  40cf30:	add    BYTE PTR [ebx+0x1b8d0045],al
  40cf36:	push   esp
  40cf37:	inc    ebp
  40cf38:	add    bh,bh
  40cf3a:	push   edi
  40cf3b:	adc    BYTE PTR [ebp-0x18],bh
  40cf3e:	mov    ebp,edi
  40cf40:	fdivr  st,st(7)
  40cf42:	cli    
  40cf43:	dec    ebp
  40cf44:	add    BYTE PTR [ebp-0x74788bb0],al
  40cf4a:	add    esp,edi
  40cf4c:	add    BYTE PTR [eax],bh
  40cf4e:	xor    BYTE PTR [ebp-0x51],al
  40cf51:	cmp    edi,0xfffffffc
  40cf54:	mov    edi,edi
  40cf56:	lock in al,dx
  40cf58:	rcl    ah,0x84
  40cf5b:	pop    ebp
  40cf5c:	add    BYTE PTR [ebx+0x0],al
  40cf5f:	pop    ebp
  40cf60:	dec    eax
  40cf61:	cmp    edx,DWORD PTR [ebx-0x8]
  40cf64:	mov    edx,DWORD PTR [ecx+eax*1-0x7436fca5]
  40cf6b:	add    al,0x24
  40cf6d:	push   ebp
  40cf6e:	dec    esi
  40cf6f:	in     al,dx
  40cf70:	mov    eax,DWORD PTR [ebp+0x20]
  40cf73:	push   esi
  40cf74:	pop    esi
  40cf75:	mov    al,0x3
  40cf77:	add    DWORD PTR [ecx+0x7eb0e000],ecx
  40cf7d:	add    DWORD PTR [ebx],eax
  40cf7f:	add    BYTE PTR [ebx],al
  40cf81:	inc    ebp
  40cf82:	mov    eax,ebp
  40cf84:	hlt    
  40cf85:	(bad)  
  40cf86:	push   ebp
  40cf87:	dec    DWORD PTR [ecx-0x4fe07f2]
  40cf8d:	push   es
  40cf8e:	add    ecx,ecx
  40cf90:	pop    ebp
  40cf91:	or     BYTE PTR [ebx],dh
  40cf93:	jns    0x5e02b85a
  40cf99:	ret    0x76
  40cf9c:	jmp    0x40cf2d
  40cf9e:	mov    eax,DWORD PTR [ecx]
  40cfa0:	in     al,0x0
  40cfa2:	jge    0x40cf8f
  40cfa4:	sysexit 
  40cfa6:	cmp    al,0x8a
  40cfa8:	cmp    eax,DWORD PTR [eax]
  40cfaa:	sbb    BYTE PTR [eax],cl
  40cfac:	pop    ebp
  40cfad:	add    BYTE PTR [esi+0x66],bh
  40cfb0:	jae    0x40cfb3
  40cfb2:	mov    eax,ecx
  40cfb4:	call   0xb9b7:0x8b025583
  40cfbb:	mov    ebx,0x8d4e55
  40cfc0:	mov    al,0x3b
  40cfc2:	fdiv   DWORD PTR [ebp-0x8]
  40cfc5:	xor    edx,DWORD PTR [ebp+0x66]
  40cfc8:	mov    DWORD PTR [ecx],0x10087ec
  40cfce:	add    BYTE PTR [eax],al
  40cfd0:	push   ebp
  40cfd1:	ret    
  40cfd2:	mov    ecx,DWORD PTR [ebx-0x77c57404]
  40cfd8:	jne    0x40cfda
  40cfda:	mov    eax,ecx
  40cfdc:	fadd   QWORD PTR [esi]
  40cfde:	xor    al,0xc7
  40cfe0:	push   ebx
  40cfe1:	or     dh,dh
  40cfe3:	icebp  
  40cfe4:	inc    DWORD PTR [eax+0x8f4358b]
  40cfea:	rol    BYTE PTR [edx+0x5],0xa
  40cfee:	inc    ebp
  40cfef:	stc    
  40cff0:	mov    DWORD PTR [ebp-0x75],esi
  40cff3:	(bad)  
  40cff4:	lock add BYTE PTR [ebp-0x7a],al
  40cff8:	add    al,0x1
  40cffa:	dec    ebp
  40cffb:	add    BYTE PTR [ebp-0x39],dh
  40cffe:	mov    eax,ebx
  40d000:	call   0xe8c45990
  40d005:	sbb    al,0x5d
  40d007:	mov    edi,0xf85e8572
  40d00c:	pop    edi
  40d00d:	jge    0x40cfd1
  40d00f:	lea    eax,[eax]
  40d011:	dec    DWORD PTR [ebx+0x88b8b45]
  40d017:	or     bh,bh
  40d019:	leave  
  40d01a:	fadd   DWORD PTR [eax+eax*1-0x67ff7300]
  40d021:	dec    ebp
  40d022:	add    BYTE PTR [ebp-0xff7f075],al
  40d028:	xchg   ebp,eax
  40d029:	add    bh,bh
  40d02b:	mov    ecx,DWORD PTR [ebx-0x74b276f0]
  40d031:	mov    esi,DWORD PTR [ebx]
  40d033:	or     al,0x39
  40d035:	dec    ebp
  40d036:	pop    esi
  40d037:	mov    edx,DWORD PTR [ebp+0x5d458b08]
  40d03d:	in     al,0x4
  40d03f:	pushf  
  40d040:	mov    ecx,DWORD PTR [ecx-0x76ff1378]
  40d046:	push   ebx
  40d047:	call   0xc83595f
  40d04c:	add    BYTE PTR [ebp+0x5],cl
  40d04f:	(bad)  
  40d050:	cmp    edx,DWORD PTR [eax]
  40d052:	add    BYTE PTR [ebp+0x5783f889],al
  40d058:	add    dl,BYTE PTR [ecx-0x3e]
  40d05b:	mov    ebx,0xff028d0f
  40d060:	mov    edx,0x66330045
  40d065:	mov    eax,ebx
  40d067:	sub    esp,eax
  40d069:	add    eax,eax
  40d06b:	clc    
  40d06c:	mov    DWORD PTR [ebx-0x7477ff75],edx
  40d072:	add    BYTE PTR [ebx+ebx*2],cl
  40d075:	dec    ebp
  40d076:	push   edi
  40d077:	xor    edi,eax
  40d079:	xor    eax,DWORD PTR [esi+0x8018d]
  40d07f:	in     eax,0xe7
  40d081:	add    BYTE PTR [ebx],al
  40d083:	inc    ebp
  40d084:	jmp    0x40d0b9
  40d086:	xor    bh,0x49
  40d089:	mov    ebp,ecx
  40d08b:	adc    BYTE PTR [eax-0x75ccbfb3],cl
  40d091:	xor    eax,DWORD PTR [eax-0x10c483d5]
  40d097:	jne    0x40d099
  40d099:	mov    ecx,DWORD PTR [ebx+0x458808]
  40d09f:	mov    eax,DWORD PTR [ebx]
  40d0a1:	hlt    
  40d0a2:	pop    edi
  40d0a3:	add    BYTE PTR [ebp-0x37],dl
  40d0a6:	in     al,dx
  40d0a7:	push   es
  40d0a8:	in     al,dx
  40d0a9:	dec    ecx
  40d0aa:	push   edi
  40d0ab:	xor    eax,0x4d9c1735
  40d0b0:	mov    DWORD PTR [eax+0x624757e8],eax
  40d0b6:	mov    ecx,edx
  40d0b8:	in     al,0x4d
  40d0ba:	dec    ebp
  40d0bb:	add    BYTE PTR [ebp-0x43df0a9],0xe9
  40d0c2:	add    dl,dl
  40d0c4:	mov    ecx,DWORD PTR [ebx+0x4dc9080c]
  40d0ca:	test   BYTE PTR [eax+0x8008b00],cl
  40d0d0:	dec    ebp
  40d0d1:	push   ebp
  40d0d2:	mov    DWORD PTR [eax+0x4d72f4],edi
  40d0d8:	mov    eax,ecx
  40d0da:	clc    
  40d0db:	into   
  40d0dc:	dec    ebp
  40d0dd:	retf   0x18c7
  40d0e0:	lock dec ebp
  40d0e2:	test   DWORD PTR [ebx-0x31baf308],ecx
  40d0e8:	push   ebx
  40d0e9:	(bad)  
  40d0ea:	jge    0x40d0b6
  40d0ec:	push   esi
  40d0ed:	enter  0xce45,0x89
  40d0f1:	dec    ebp
  40d0f2:	cld    
  40d0f3:	jmp    0xff74d03d
  40d0f8:	pushf  
  40d0f9:	inc    ebp
  40d0fa:	mov    esi,0x78b0833
  40d0ff:	sub    esp,DWORD PTR [edx+0x3]
  40d102:	int    0x8
  40d104:	mov    ecx,DWORD PTR [ebp+0xc]
  40d107:	mov    eax,esi
  40d109:	adc    bl,cl
  40d10b:	(bad)  
  40d10c:	enter  0x4d85,0xff
  40d110:	jmp    0x85d214
  40d115:	xor    eax,DWORD PTR [ebp+0x5e]
  40d118:	mov    ebp,ebx
  40d11a:	or     al,0x8b
  40d11c:	(bad)  
  40d11d:	call   0x51cd28f0
  40d122:	cmp    al,0x5
  40d124:	fs jb  0x40d0b2
  40d127:	add    BYTE PTR [eax],cl
  40d129:	leave  
  40d12a:	ror    BYTE PTR [ecx+esi*8],cl
  40d12d:	push   ebp
  40d12e:	inc    ebp
  40d12f:	in     al,dx
  40d130:	mov    ebp,esp
  40d132:	or     al,0xc7
  40d134:	(bad)  
  40d135:	lock into 
  40d137:	test   ecx,eax
  40d139:	clc    
  40d13a:	rol    BYTE PTR [ebp+0x34],1
  40d13d:	xor    al,0x45
  40d13f:	pushf  
  40d140:	add    ecx,DWORD PTR [ebx-0x7b27604]
  40d146:	mov    al,BYTE PTR [ebp-0x7b]
  40d149:	cmp    eax,0x56349c75
  40d14e:	sub    al,0xc7
  40d150:	jmp    0x40d13e
  40d152:	mov    ebx,DWORD PTR [eax]
  40d154:	lock jmp 0xf02a:0x8bb27df1
  40d15c:	mov    edx,DWORD PTR [edi-0x14]
  40d15f:	push   ecx
  40d160:	icebp  
  40d161:	xor    eax,DWORD PTR [edx]
  40d163:	mov    edx,0x627280
  40d168:	enter  0x4dc8,0xfa
  40d16c:	add    ecx,edx
  40d16e:	cld    
  40d16f:	scas   eax,DWORD PTR es:[edi]
  40d170:	add    ebx,ebp
  40d172:	dec    ebp
  40d173:	mov    ecx,DWORD PTR [ebx-0x618a1708]
  40d179:	xor    esi,DWORD PTR [edx]
  40d17b:	xor    ebp,DWORD PTR [ebx]
  40d17d:	add    esi,DWORD PTR [ebx]
  40d17f:	add    edi,DWORD PTR [ebx]
  40d181:	test   DWORD PTR [ebp-0x75],esi
  40d184:	mov    edi,eax
  40d186:	adc    BYTE PTR [ebp+0x55],cl
  40d189:	je     0x40d1be
  40d18b:	xor    esi,DWORD PTR [ebx]
  40d18d:	xor    ebp,DWORD PTR [ebx]
  40d18f:	add    ebp,DWORD PTR [ebx]
  40d191:	add    esi,DWORD PTR [ebx]
  40d193:	ror    DWORD PTR [ecx+0x68ec108b],cl
  40d199:	enter  0xcaff,0x8b
  40d19d:	icebp  
  40d19e:	or     al,0xa
  40d1a0:	(bad)  
  40d1a1:	lock retf 
  40d1a3:	enter  0xf2c8,0x4d
  40d1a7:	retf   0xee89
  40d1aa:	or     BYTE PTR [ebp+0x45],dh
  40d1ad:	mov    edi,DWORD PTR [ebx]
  40d1af:	cld    
  40d1b0:	bswap  eax
  40d1b2:	pop    edi
  40d1b3:	mov    esp,0x328b9eff
  40d1b8:	in     al,0x8b
  40d1ba:	(bad)  
  40d1bb:	hlt    
  40d1bc:	pop    ebx
  40d1bd:	jne    0x40d1c7
  40d1bf:	xor    eax,DWORD PTR [ebp+0x33]
  40d1c2:	xor    eax,0x73b082b
  40d1c7:	jbe    0x40d167
  40d1c9:	mov    esi,DWORD PTR [edx]
  40d1cb:	clc    
  40d1cc:	pop    edi
  40d1cd:	mov    edx,eax
  40d1cf:	mov    eax,DWORD PTR [eax]
  40d1d1:	clc    
  40d1d2:	mov    ecx,ecx
  40d1d4:	adc    DWORD PTR [ebp+0x14],0xffffffec
  40d1d8:	inc    ebp
  40d1d9:	in     al,dx
  40d1da:	xor    eax,0xc7009c04
  40d1df:	inc    ebp
  40d1e0:	cld    
  40d1e1:	xor    eax,0xc7f89c85
  40d1e6:	add    esi,esp
  40d1e8:	inc    ebp
  40d1e9:	test   edi,eax
  40d1eb:	clc    
  40d1ec:	hlt    
  40d1ed:	inc    ebp
  40d1ee:	test   DWORD PTR ds:0x53579cf8,esi
  40d1f4:	inc    ebp
  40d1f5:	inc    ebp
  40d1f6:	aad    0x36
  40d1f8:	xlat   BYTE PTR ds:[ebx]
  40d1f9:	pushf  
  40d1fa:	mov    ecx,DWORD PTR [ebx-0x41b21304]
  40d200:	mov    eax,0x7070808
  40d205:	xor    edi,eax
  40d207:	mov    edi,0x32729e
  40d20c:	xor    eax,edi
  40d20e:	add    eax,DWORD PTR [ebp+0x3]
  40d211:	(bad)  
  40d212:	pavgb  mm7,mm1
  40d215:	test   DWORD PTR [esi-0x8],eax
  40d218:	dec    ebp
  40d219:	inc    ebp
  40d21a:	mov    edx,ebp
  40d21c:	cld    
  40d21d:	xlat   BYTE PTR ds:[ebx]
  40d21e:	enter  0xf0c7,0xf0
  40d222:	retf   0xf200
  40d225:	add    dh,cl
  40d227:	leave  
  40d228:	jne    0x40d26f
  40d22a:	mov    ecx,DWORD PTR [ebx-0x39ea1304]
  40d230:	enter  0xf0ce,0xc7
  40d234:	retf   0xf2cf
  40d237:	scas   eax,DWORD PTR es:[edi]
  40d238:	out    dx,al
  40d239:	jmp    0x40d288
  40d23b:	mov    esi,DWORD PTR [ebx]
  40d23d:	cld    
  40d23e:	add    eax,edi
  40d240:	xor    eax,esi
  40d242:	jmp    0x40d289
  40d244:	xor    ecx,DWORD PTR [ebp-0x1ffc07cd]
  40d24a:	add    edi,edi
  40d24c:	ror    DWORD PTR [ecx+0x45f8f889],cl
  40d252:	dec    ebp
  40d253:	mov    esi,DWORD PTR [ebx]
  40d255:	cld    
  40d256:	lea    eax,[edi+ecx*1+0xff72e0]
  40d25d:	mov    ecx,DWORD PTR [ebp-0xc]
  40d260:	mov    ecx,DWORD PTR [ebp-0x4]
  40d263:	xor    esi,eax
  40d265:	(bad)  
  40d266:	enter  0xce08,0x72
  40d26a:	stc    
  40d26b:	add    BYTE PTR [edx+0x5f8b4545],ch
  40d271:	call   0x33861f79
  40d276:	pop    esi
  40d277:	xor    eax,ebx
  40d279:	sub    ecx,DWORD PTR [ebx+0x20fc818b]
  40d27f:	enter  0xb900,0xc7
  40d283:	inc    ebp
  40d284:	in     al,dx
  40d285:	xor    eax,DWORD PTR [ebp+0x4589f803]
  40d28b:	clc    
  40d28c:	xor    al,0x45
  40d28e:	pushf  
  40d28f:	ss (bad) 
  40d291:	pushf  
  40d292:	call   0xf92c5922
  40d297:	mov    eax,edi
  40d299:	loopne 0x40d27f
  40d29b:	inc    ebp
  40d29c:	test   DWORD PTR [ebx],esi
  40d29e:	clc    
  40d29f:	add    eax,DWORD PTR [ebp-0x2d]
  40d2a2:	push   esi
  40d2a3:	mov    DWORD PTR [edi-0x4],edx
  40d2a6:	push   ecx
  40d2a7:	inc    ebp
  40d2a8:	push   edi
  40d2a9:	mov    al,dh
  40d2ab:	mov    BYTE PTR [esi+0x34d320b],bl
  40d2b1:	mov    ecx,DWORD PTR [ecx+0x45b6f8f8]
  40d2b7:	xor    edi,DWORD PTR ds:0xc7089c89
  40d2bd:	dec    ebp
  40d2be:	cld    
  40d2bf:	mov    ebx,DWORD PTR [eax]
  40d2c1:	or     dl,ch
  40d2c3:	into   
  40d2c4:	inc    ebp
  40d2c5:	iret   
  40d2c6:	or     dl,cl
  40d2c8:	add    BYTE PTR [ebx+ecx*4-0xb007420],cl
  40d2cf:	mov    ecx,DWORD PTR [ebp-0x4]
  40d2d2:	xor    ecx,edx
  40d2d4:	xor    ecx,DWORD PTR [ebp+0x3]
  40d2d7:	mov    eax,DWORD PTR [ebx]
  40d2d9:	hlt    
  40d2da:	bswap  esi
  40d2dc:	rol    DWORD PTR [ecx+esi*1+0x2b32459e],0x89
  40d2e4:	xor    ecx,DWORD PTR [eax]
  40d2e6:	mov    DWORD PTR [ebp-0x8],eax
  40d2e9:	xor    ebx,DWORD PTR [ebp-0x47]
  40d2ec:	call   0x40d17e
  40d2f1:	enter  0x4d45,0x8b
  40d2f5:	mov    eax,edi
  40d2f7:	lock dec ebp
  40d2f9:	inc    ebp
  40d2fa:	mov    DWORD PTR [ebx-0x39040f73],ecx
  40d300:	inc    edi
  40d302:	inc    ebp
  40d303:	enter  0x918b,0xfc
  40d307:	inc    ebp
  40d308:	(bad)  
  40d309:	mov    eax,DWORD PTR [eax+edi*8-0x38cd3962]
  40d310:	mov    DWORD PTR [esi-0x4],ebx
  40d313:	rol    DWORD PTR [ebp-0x37],0x8b
  40d317:	add    al,0xf4
  40d319:	push   ebp
  40d31a:	into   
  40d31b:	in     al,dx
  40d31c:	mov    BYTE PTR [ebp-0x3f],0x8b
  40d320:	dec    ebp
  40d321:	or     BYTE PTR [ebx],bh
  40d323:	xor    BYTE PTR [esi+0x1],0x8b
  40d327:	add    ah,ah
  40d329:	add    dh,al
  40d32b:	in     al,dx
  40d32c:	(bad)  
  40d32d:	push   ebx
  40d32e:	inc    ebp
  40d32f:	mov    eax,edi
  40d331:	adc    al,ch
  40d333:	push   ss
  40d334:	xchg   BYTE PTR [edi+0x7db08f8],bh
  40d33a:	popa   
  40d33b:	iret   
  40d33c:	dec    ebp
  40d33d:	sahf   
  40d33e:	mov    esi,DWORD PTR [edx]
  40d340:	clc    
  40d341:	add    ecx,esi
  40d343:	cmp    ecx,edi
  40d345:	jne    0x40d32f
  40d347:	add    DWORD PTR [ebp-0x62],0x4208648b
  40d34e:	or     BYTE PTR [ebx+0x48ae94d],bl
  40d354:	or     eax,DWORD PTR [eax]
  40d356:	push   ebp
  40d357:	dec    ebp
  40d358:	jnp    0xd00ae027
  40d35e:	dec    ebp
  40d35f:	xlat   BYTE PTR ds:[ebx]
  40d360:	mov    ecx,ebx
  40d362:	call   0x340b293a
  40d367:	lsl    ecx,WORD PTR ds:0x7f8b2d23
  40d36e:	(bad)  
  40d36f:	cld    
  40d370:	sti    
  40d371:	lahf   
  40d372:	(bad)  
  40d373:	mov    ebp,0x8b330055
  40d378:	mov    DWORD PTR [eax],ecx
  40d37a:	clc    
  40d37b:	iret   
  40d37c:	dec    ebp
  40d37d:	retf   
  40d37e:	xor    eax,ecx
  40d380:	lea    eax,[eax+ecx*1+0x7204]
  40d387:	dec    ebp
  40d388:	inc    ebp
  40d389:	mov    DWORD PTR [ebx-0x39b20b24],ecx
  40d38f:	mov    esp,DWORD PTR [edx+0x14]
  40d392:	int    0x6
  40d394:	sub    eax,DWORD PTR [ebp+0x3]
  40d397:	(bad)  
  40d398:	lock or BYTE PTR [ebp-0x7b],cl
  40d39c:	mov    edi,eax
  40d39e:	in     al,dx
  40d39f:	xor    al,0x4d
  40d3a1:	pushf  
  40d3a2:	xor    ecx,DWORD PTR [ecx+0x453bf003]
  40d3a8:	jne    0x40d333
  40d3aa:	mov    ebx,DWORD PTR [eax]
  40d3ac:	in     al,0x45
  40d3ae:	dec    ebp
  40d3af:	mov    esi,DWORD PTR [ebx]
  40d3b1:	nop
  40d3b2:	add    eax,DWORD PTR [eax]
  40d3b4:	pop    edi
  40d3b5:	mov    esi,DWORD PTR [ebx]
  40d3b7:	mov    DWORD PTR [ebx-0x2c],ebx
  40d3ba:	ret    0x4d
  40d3bd:	mov    ecx,DWORD PTR [ebx+0x18008b90]
  40d3c3:	mov    ecx,DWORD PTR [ebp+0x3]
  40d3c6:	mov    edi,DWORD PTR [eax+edx*4]
  40d3c9:	dec    ebp
  40d3ca:	add    BYTE PTR [ebx-0x387cf775],cl
  40d3d0:	jo     0x40d395
  40d3d2:	push   esi
  40d3d3:	inc    ebp
  40d3d4:	jne    0x40d361
  40d3d6:	mov    ecx,DWORD PTR [eax]
  40d3d8:	push   edi
  40d3d9:	(bad)  
  40d3da:	push   edi
  40d3db:	ret    
  40d3dc:	push   ecx
  40d3dd:	inc    ebp
  40d3de:	xor    ecx,DWORD PTR [ebx+0x40720cbb]
  40d3e4:	add    BYTE PTR [ebx+0x45d10ccb],al
  40d3ea:	jnp    0x406de01d
  40d3f0:	jg     0x40d37d
  40d3f2:	jmp    0x54:0xde85700c
  40d3f9:	inc    ebp
  40d3fa:	mov    esi,DWORD PTR [eax+ecx*1-0x75]
  40d3fe:	push   ebp
  40d3ff:	cmp    BYTE PTR [ebx],dh
  40d401:	dec    ebp
  40d402:	xor    ecx,DWORD PTR [ebx-0x8fcabfd]
  40d408:	cmp    esp,DWORD PTR [ebx]
  40d40a:	jne    0x40d397
  40d40c:	or     DWORD PTR [esi+ebx*4],0xef036440
  40d413:	jmp    0x40d42a
  40d415:	mov    ebp,ecx
  40d417:	push   esp
  40d418:	add    al,0x45
  40d41a:	add    BYTE PTR [ebx-0x38ccf7b3],cl
  40d420:	add    eax,ebx
  40d422:	cmp    eax,DWORD PTR [ebp+0xf]
  40d425:	mov    esp,DWORD PTR [eax+ecx*1-0x3c743900]
  40d42c:	sbb    BYTE PTR [ebp+0x45],al
  40d42f:	mov    ecx,DWORD PTR [ecx+0x4d4d1808]
  40d435:	xor    ecx,DWORD PTR [ebx-0x277676fd]
  40d43b:	mov    DWORD PTR [ebp+0x14],eax
  40d43e:	xor    eax,0xba339c45
  40d443:	pushf  
  40d444:	test   edi,eax
  40d446:	clc    
  40d447:	adc    al,0x55
  40d449:	test   DWORD PTR [ebx+0x454518f8],ecx
  40d44f:	xor    DWORD PTR [ebx-0x7f74e764],ecx
  40d455:	lock add DWORD PTR [ebp+0x0],ecx
  40d459:	xor    eax,DWORD PTR [eax]
  40d45b:	add    ecx,DWORD PTR [ebp+0xf]
  40d45e:	mov    eax,ecx
  40d460:	sbb    BYTE PTR [ebp-0x77],cl
  40d463:	mov    eax,DWORD PTR [ecx]
  40d465:	rol    BYTE PTR [eax],1
  40d467:	iret   
  40d468:	or     DWORD PTR [eax+ecx*2+0xc32899e],ecx
  40d46f:	cmp    eax,DWORD PTR [ebp+0xf]
  40d472:	xor    ebp,DWORD PTR [ebx+eax*1-0xb747700]
  40d479:	or     BYTE PTR [ebp-0x39],al
  40d47c:	xor    eax,ebx
  40d47e:	add    eax,DWORD PTR [ebp-0x77]
  40d481:	mov    edx,DWORD PTR [eax+ebx*1]
  40d484:	inc    ebp
  40d485:	inc    ebp
  40d486:	mov    ecx,DWORD PTR [ecx+0x75e8f450]
  40d48c:	mov    DWORD PTR [ebx+0x4d45dcd0],ecx
  40d492:	mov    ebp,eax
  40d494:	cmp    cl,dh
  40d496:	dec    ebp
  40d497:	dec    DWORD PTR [eax+0x45]
  40d49a:	inc    ecx
  40d49b:	(bad)  
  40d49c:	mov    esp,eax
  40d49e:	or     al,0x85
  40d4a0:	sbb    al,bh
  40d4a2:	inc    eax
  40d4a3:	inc    ebp
  40d4a4:	mov    esi,DWORD PTR [ebx]
  40d4a6:	or     al,0x3
  40d4a8:	dec    ecx
  40d4a9:	push   eax
  40d4aa:	dec    eax
  40d4ab:	inc    ebp
  40d4ac:	rcl    BYTE PTR [eax-0x38],1
  40d4af:	push   eax
  40d4b0:	inc    ebp
  40d4b1:	dec    DWORD PTR [ebx-0x3e07c775]
  40d4b7:	rol    BYTE PTR [ebx],0x4e
  40d4ba:	inc    eax
  40d4bb:	inc    ebp
  40d4bc:	mov    DWORD PTR [ebx],esi
  40d4be:	sbb    BYTE PTR [ebx],al
  40d4c0:	inc    ebp
  40d4c1:	push   eax
  40d4c2:	xor    esi,DWORD PTR [ebp+0x3]
  40d4c5:	lea    ecx,[ecx+0x45e814b8]
  40d4cb:	cmc    
  40d4cc:	xor    edi,edi
  40d4ce:	add    eax,DWORD PTR [ebp-0x77]
  40d4d1:	mov    DWORD PTR [eax+eiz*8],edx
  40d4d4:	inc    ebp
  40d4d5:	inc    ebp
  40d4d6:	mov    ecx,DWORD PTR [ebx-0x3e38232c]
  40d4dc:	ret    
  40d4dd:	inc    ebp
  40d4de:	add    DWORD PTR [ebx+0x4dc7f855],ecx
  40d4e4:	adc    al,0x8b
  40d4e6:	test   DWORD PTR [eax],edx
  40d4e8:	clc    
  40d4e9:	inc    ecx
  40d4ea:	inc    ebp
  40d4eb:	mov    esi,DWORD PTR [edx]
  40d4ed:	loopne 0x40d48b
  40d4ef:	enter  0x16c7,0x14
  40d4f3:	inc    ebp
  40d4f4:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  40d4fa:	mov    eax,DWORD PTR [ebx]
  40d4fc:	sbb    BYTE PTR [eax],cl
  40d4fe:	(bad)  
  40d4ff:	dec    ebp
  40d500:	ret    
  40d501:	sub    ebp,DWORD PTR [edi+0x8028be9]
  40d507:	add    BYTE PTR [ebp+0xc],dl
  40d50a:	xor    esi,DWORD PTR [ebp-0x73]
  40d50d:	lea    edx,[ecx]
  40d50f:	lods   al,BYTE PTR ds:[esi]
  40d510:	jb     0x40d4fa
  40d512:	add    ch,dh
  40d514:	sar    edi,0x83
  40d517:	xor    eax,0x89009c03
  40d51c:	inc    ebp
  40d51d:	int3   
  40d51e:	xor    eax,DWORD PTR [ebp+0x3]
  40d521:	xor    al,0x89
  40d523:	pushf  
  40d524:	adc    al,0xc7
  40d526:	inc    ebp
  40d527:	les    eax,FWORD PTR [ebx]
  40d529:	test   esp,ebx
  40d52b:	clc    
  40d52c:	inc    ebp
  40d52d:	inc    ebp
  40d52e:	push   DWORD PTR [edx]
  40d530:	hlt    
  40d531:	pushf  
  40d532:	jne    0x40d4c1
  40d534:	mov    ecx,esp
  40d536:	or     al,0x4d
  40d538:	bound  ecx,QWORD PTR [ebp+0x4d89c8ff]
  40d53e:	clc    
  40d53f:	lea    eax,[ebp-0x3c]
  40d542:	cmp    eax,0x8b8d9c4d
  40d547:	shl    al,0x4d
  40d54a:	(bad)  
  40d54b:	mov    eax,ebx
  40d54d:	or     BYTE PTR [ebp-0x17344731],cl
  40d553:	dec    ebp
  40d554:	imul   ecx
  40d556:	inc    DWORD PTR [ecx]
  40d558:	inc    ebp
  40d559:	add    BYTE PTR [ebp-0x74638bcd],al
  40d55f:	pavgb  mm7,mm6
  40d562:	mov    DWORD PTR [eax],0xf0ff8bc3
  40d568:	clc    
  40d569:	iret   
  40d56a:	inc    ebp
  40d56b:	lock push eax
  40d56d:	retf   
  40d56e:	fmul   QWORD PTR [ebp-0x1]
  40d571:	mov    ecx,DWORD PTR [ebx+0x45f7f4e0]
  40d577:	test   BYTE PTR [ebx+0x4d32e09e],cl
  40d57d:	mov    DWORD PTR [ebx],ebp
  40d57f:	loopne 0x40d50a
  40d581:	inc    ebp
  40d582:	loopne 0x40d50f
  40d584:	inc    ebp
  40d585:	loopne 0x40d512
  40d587:	xbegin 0x4091650
  40d58d:	adc    ecx,DWORD PTR [eax*2+0x33b334d]
  40d594:	jb     0x40d5e6
  40d596:	mov    ecx,DWORD PTR [eax+edi*8]
  40d599:	inc    ebp
  40d59a:	inc    eax
  40d59b:	push   eax
  40d59c:	mov    ebx,DWORD PTR [edi-0x8]
  40d59f:	inc    DWORD PTR [ecx-0x75]
  40d5a2:	mov    ebp,esp
  40d5a4:	loopne 0x40d5a6
  40d5a6:	rol    edi,0xee
  40d5a9:	test   BYTE PTR [eax],al
  40d5ab:	dec    edx
  40d5ac:	push   0x32
  40d5ae:	dec    DWORD PTR [ebx-0x30baf70c]
  40d5b4:	push   eax
  40d5b5:	mov    dh,0x94
  40d5b7:	add    edi,edi
  40d5b9:	cmp    edi,DWORD PTR [eax-0x7877af1]
  40d5bf:	add    BYTE PTR [ebp-0x75],al
  40d5c2:	(bad)  
  40d5c3:	call   0xc7c5d690
  40d5c8:	clc    
  40d5c9:	test   BYTE PTR [ebp+0x4a],al
  40d5cc:	xor    esi,DWORD PTR [edx]
  40d5ce:	pushf  
  40d5cf:	mov    eax,edi
  40d5d1:	or     al,al
  40d5d3:	iret   
  40d5d4:	test   DWORD PTR [esi+0x3b4d03f8],esi
  40d5da:	mov    DWORD PTR [edi],ecx
  40d5dc:	in     al,dx
  40d5dd:	pop    eax
  40d5de:	dec    ebp
  40d5df:	add    BYTE PTR [ecx+0x4df8e88b],cl
  40d5e5:	add    BYTE PTR [ecx+0x4d84f8c7],cl
  40d5eb:	dec    edx
  40d5ec:	mov    DWORD PTR [edx],esi
  40d5ee:	in     al,0x8b
  40d5f0:	dec    ebp
  40d5f1:	or     BYTE PTR [ebx],dh
  40d5f3:	iret   
  40d5f4:	add    esi,DWORD PTR [esi+0x3be00389]
  40d5fa:	test   DWORD PTR [edi],0x3d3800
  40d600:	test   DWORD PTR [ebx+0x84e4f8],ecx
  40d606:	add    edi,eax
  40d608:	add    BYTE PTR [ebp+ecx*2-0x74cdccb6],al
  40d60f:	mov    eax,DWORD PTR [ebx]
  40d611:	or     BYTE PTR [ecx+0x45b614cf],cl
  40d617:	add    esi,DWORD PTR [ebx]
  40d619:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  40d61f:	add    BYTE PTR [eax],al
  40d621:	mov    eax,DWORD PTR [ebp-0x18]
  40d624:	mov    eax,DWORD PTR [eax]
  40d626:	lock (bad) 
  40d628:	dec    ebp
  40d629:	test   BYTE PTR [ebx],dh
  40d62b:	dec    edx
  40d62c:	add    esi,DWORD PTR [edx]
  40d62e:	cmp    ecx,DWORD PTR [ebx+0x98bec75]
  40d634:	or     bh,cl
  40d636:	(bad)  
  40d637:	mov    ebx,es
  40d639:	dec    edx
  40d63a:	push   0x32
  40d63c:	lea    esi,[edx]
  40d63e:	lods   al,BYTE PTR ds:[esi]
  40d63f:	mov    ebp,eax
  40d641:	clc    
  40d642:	cli    
  40d643:	or     edi,edi
  40d645:	iret   
  40d646:	inc    ebp
  40d647:	mov    WORD PTR [ebx-0x75cdccb6],cs
  40d64d:	or     al,BYTE PTR ds:0xec728b
  40d653:	or     DWORD PTR [ebp-0x31],ecx
  40d656:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb2]
  40d65d:	cmp    al,cl
  40d65f:	je     0x40d839
  40d665:	mov    eax,DWORD PTR [ebp-0x8]
  40d668:	mov    eax,DWORD PTR [eax]
  40d66a:	xor    eax,edi
  40d66c:	mov    al,BYTE PTR [ebp+eax*1+0x32724a]
  40d673:	mov    ecx,DWORD PTR [ebp-0x18]
  40d676:	xor    ecx,DWORD PTR [ecx]
  40d678:	bswap  edi
  40d67a:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb6],0x32
  40d682:	add    DWORD PTR [ebx+0x945e400],ecx
  40d688:	mov    ecx,edi
  40d68a:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054a]
  40d691:	or     al,BYTE PTR [eax]
  40d693:	mov    ecx,DWORD PTR [ebp-0x18]
  40d696:	xor    ecx,DWORD PTR [ecx]
  40d698:	bswap  edi
  40d69a:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb2],0x3a
  40d6a2:	add    DWORD PTR [edi],ecx
  40d6a4:	add    BYTE PTR [eax-0x7474ffbb],dl
  40d6aa:	xor    esp,esp
  40d6ac:	mov    al,BYTE PTR [eax]
  40d6ae:	add    eax,0x8472c7
  40d6b3:	dec    edx
  40d6b4:	dec    ebp
  40d6b5:	xor    dh,BYTE PTR [ebx]
  40d6b7:	mov    ecx,DWORD PTR [edi]
  40d6b9:	clc    
  40d6ba:	ror    BYTE PTR [ecx],0xcb
  40d6bd:	iret   
  40d6be:	ror    DWORD PTR [esp+eax*4+0x32014a],0x32
  40d6c6:	inc    ebp
  40d6c7:	mov    ecx,DWORD PTR [ebx-0x75f6cc14]
  40d6cd:	iret   
  40d6ce:	add    eax,0x4a728c
  40d6d3:	xor    cl,BYTE PTR [ebp+0xa]
  40d6d6:	mov    ecx,DWORD PTR [ebx+0x98af833]
  40d6dc:	or     eax,0x8c72cf
  40d6e1:	dec    esi
  40d6e2:	shl    DWORD PTR [edx],0x4d
  40d6e5:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  40d6eb:	in     al,0xd
  40d6ed:	add    BYTE PTR [edx-0x39],dh
  40d6f0:	add    BYTE PTR [ecx+eax*8-0x74cdb2b6],al
  40d6f7:	mov    esi,DWORD PTR [ebx]
  40d6f9:	in     al,dx
  40d6fa:	mov    cl,BYTE PTR [ecx]
  40d6fc:	or     eax,0x8c72cf
  40d701:	dec    edx
  40d702:	enter  0x8532,0x32
  40d706:	add    BYTE PTR [ebx+0x945e800],cl
  40d70c:	mov    ecx,edi
  40d70e:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054a]
  40d715:	or     al,BYTE PTR [eax]
  40d717:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d71a:	mov    ecx,DWORD PTR [ecx]
  40d71c:	xor    ecx,edi
  40d71e:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724e]
  40d725:	cmp    al,cl
  40d727:	jne    0x40d776
  40d729:	lea    ecx,[ebx-0x7517cc54]
  40d72f:	cli    
  40d730:	or     eax,0x4d72ff
  40d735:	cmp    eax,ecx
  40d737:	je     0x40d786
  40d739:	mov    ecx,DWORD PTR [ebx-0x7538ccf8]
  40d73f:	ret    
  40d740:	or     eax,0x8b7245
  40d745:	lock enter 0x85c7,0x84
  40d74a:	add    BYTE PTR [esi+0x33453200],bl
  40d750:	mov    ecx,DWORD PTR [ebx+0x558a0833]
  40d756:	add    eax,0x37233
  40d75b:	cmp    ecx,DWORD PTR [ebp+0xf]
  40d75e:	mov    esi,edi
  40d760:	xor    edi,edi
  40d762:	mov    cl,BYTE PTR [ebx+0x4d72080d]
  40d768:	add    BYTE PTR [ebx],dh
  40d76a:	rol    DWORD PTR [ebx],0x4d
  40d76d:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  40d773:	lock or eax,0x33724d
  40d779:	(bad)  
  40d77a:	ror    DWORD PTR [eax],0x4d
  40d77d:	jb     0x40d70a
  40d77f:	add    BYTE PTR [ebx],dh
  40d781:	ja     0x40d70d
  40d783:	sbb    BYTE PTR ds:0x8d7275,cl
  40d789:	xchg   esp,eax
  40d78a:	enter  0x50e8,0xf3
  40d78e:	inc    ebp
  40d78f:	dec    DWORD PTR [ebx-0x7574ccbb]
  40d795:	loopne 0x40d79c
  40d797:	(bad)  
  40d798:	jb     0x40d75d
  40d79a:	add    cl,al
  40d79c:	dec    ebp
  40d79d:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  40d7a3:	add    ecx,DWORD PTR ds:0x187250
  40d7a9:	inc    ebp
  40d7aa:	rcl    DWORD PTR [eax+0x4d],0x4f
  40d7ae:	mov    edi,edi
  40d7b0:	xor    ecx,DWORD PTR [ebx-0x3ff20b76]
  40d7b6:	jb     0x40d741
  40d7b8:	add    BYTE PTR [ecx+eax*8],dl
  40d7bb:	jne    0x40d80a
  40d7bd:	dec    DWORD PTR [ebx-0x75baccec]
  40d7c3:	add    ecx,DWORD PTR ds:0xe872d8
  40d7c9:	repnz enter 0x10ff,0x45
  40d7ce:	inc    ebp
  40d7cf:	mov    edx,DWORD PTR [eax-0x20]
  40d7d2:	mov    ds:0x8bc3ffc7,eax
  40d7d7:	shl    DWORD PTR [ecx+edx*1+0x750a00c1],0x45
  40d7df:	mov    esi,DWORD PTR [ebx]
  40d7e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7e2:	add    eax,DWORD PTR [ebp-0x77]
  40d7e5:	push   eax
  40d7e6:	adc    al,0x15
  40d7e8:	inc    ebp
  40d7e9:	push   DWORD PTR [ebx]
  40d7eb:	mov    ecx,DWORD PTR [ebp+0x724d30d4]
  40d7f1:	add    DWORD PTR [eax],eax
  40d7f3:	mov    eax,edi
  40d7f5:	test   al,0x4d
  40d7f7:	inc    ebp
  40d7f8:	mov    ecx,DWORD PTR [ecx+0x45cf1814]
  40d7fe:	retf   
  40d7ff:	mov    edx,ecx
  40d801:	sbb    BYTE PTR [edi+eax*8-0x50003c03],al
  40d808:	inc    ebp
  40d809:	mov    ecx,DWORD PTR [ebx-0x38aaebf8]
  40d80f:	xor    eax,ebx
  40d811:	(bad)  
  40d812:	enter  0x1111,0x72
  40d816:	inc    ebp
  40d817:	add    BYTE PTR [ebx-0x387de73f],cl
  40d81d:	cld    
  40d81e:	test   bh,bh
  40d820:	sahf   
  40d821:	jne    0x40d855
  40d823:	mov    ebp,ebx
  40d825:	fsubr  DWORD PTR [edx+0x6]
  40d828:	dec    DWORD PTR [edx]
  40d82a:	hlt    
  40d82b:	xor    eax,0x7f502d45
  40d830:	sbb    ch,ah
  40d832:	call   DWORD PTR [edx-0x75]
  40d835:	pop    esi
  40d836:	or     cl,cl
  40d838:	dec    ebp
  40d839:	adc    al,0x33
  40d83b:	push   ebp
  40d83c:	add    ebp,esp
  40d83e:	cmp    esp,esp
  40d840:	je     0x40d7c5
  40d842:	mov    esp,DWORD PTR [eax]
  40d844:	or     BYTE PTR ds:0x89c39cc7,dh
  40d84a:	push   0x24
  40d84c:	lea    ecx,[ebp+0x44e8ff94]
  40d852:	clc    
  40d853:	or     al,0xff
  40d855:	push   esp
  40d856:	inc    ebp
  40d857:	or     BYTE PTR [ebx+0x450818be],al
  40d85d:	pop    es
  40d85e:	call   esi
  40d860:	test   al,0xbf
  40d862:	jne    0x40d8d6
  40d864:	mov    eax,DWORD PTR [eax]
  40d866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d867:	xlat   BYTE PTR ds:[ebx]
  40d868:	inc    ebp
  40d869:	push   esp
  40d86a:	push   eax
  40d86b:	or     al,0xde
  40d86d:	push   ebp
  40d86e:	dec    DWORD PTR [ecx-0x74f7db75]
  40d874:	dec    ebp
  40d875:	adc    BYTE PTR [ebx],dh
  40d877:	rol    DWORD PTR [ebx],1
  40d879:	sbb    BYTE PTR [ebx],bh
  40d87b:	dec    esp
  40d87c:	je     0x40d892
  40d87e:	push   0x54
  40d880:	call   DWORD PTR [eax]
  40d882:	test   al,0xce
  40d884:	inc    ebp
  40d885:	iret   
  40d886:	add    ebp,DWORD PTR [edi+0x24e889d8]
  40d88c:	clc    
  40d88d:	jmp    0x85da91
  40d892:	mov    edx,eax
  40d894:	test   al,0x1f
  40d896:	or     BYTE PTR [ebp+eax*2+0x10],al
  40d89a:	add    ecx,DWORD PTR [eax+ebx*1+0x14]
  40d89e:	inc    ebp
  40d89f:	(bad)  
  40d8a0:	mov    eax,DWORD PTR [eax+esi*8+0x33324d9e]
  40d8a7:	mov    DWORD PTR [ebx],eax
  40d8a9:	and    al,0xf
  40d8ab:	push   0xf84d85c1
  40d8b0:	mov    edi,ebp
  40d8b2:	rol    BYTE PTR [eax],1
  40d8b4:	iret   
  40d8b5:	or     DWORD PTR [ebx+esi*1+0x75329c9e],0x850f683b
  40d8c0:	push   edi
  40d8c1:	clc    
  40d8c2:	(bad)  
  40d8c3:	jmp    0x40d850
  40d8c5:	add    BYTE PTR [eax],dl
  40d8c7:	mov    eax,0xf8898545
  40d8cc:	jmp    0x40d89e
  40d8ce:	add    DWORD PTR [ebp+0x64009e],0x206544bf
  40d8d8:	pop    edi
  40d8d9:	inc    esp
  40d8da:	pop    ebx
  40d8db:	sbb    dl,al
  40d8dd:	inc    ebp
  40d8de:	add    BYTE PTR [ecx-0x747cdb75],cl
  40d8e4:	clc    
  40d8e5:	and    al,0xec
  40d8e7:	mov    DWORD PTR [ecx-0x7747adc],edi
  40d8ed:	and    al,0x4c
  40d8ef:	mov    DWORD PTR [eax],ecx
  40d8f1:	and    al,0x41
  40d8f3:	mov    ecx,DWORD PTR [ecx-0x7474dbdc]
  40d8f9:	and    al,0x24
  40d8fb:	xor    edx,DWORD PTR [esi+0x3]
  40d8fe:	push   edi
  40d8ff:	mov    DWORD PTR [ecx-0x75],edx
  40d902:	xor    esp,DWORD PTR [edi+edx*2]
  40d905:	mov    ebx,DWORD PTR [esi+0x3003294]
  40d90b:	mov    ecx,DWORD PTR [ecx-0x74dbdb75]
  40d911:	mov    ecx,DWORD PTR [esp+edx*4]
  40d914:	push   esp
  40d915:	add    BYTE PTR [eax],ah
  40d917:	mov    edx,DWORD PTR [ebp+0x3]
  40d91a:	cmp    edi,DWORD PTR [esi*2+0x24188b4c]
  40d921:	mov    DWORD PTR [ebx+0x33002401],ecx
  40d927:	dec    ecx
  40d928:	add    ebp,DWORD PTR [edx+0xf]
  40d92b:	push   0x4c30ca
  40d930:	adc    BYTE PTR [eax+0x1f],dh
  40d933:	push   0x0
  40d935:	(bad)  
  40d936:	cmp    ecx,DWORD PTR [ecx-0x7474db8b]
  40d93c:	and    al,0x24
  40d93e:	mov    esi,DWORD PTR [ebx]
  40d940:	and    al,0x3
  40d942:	xor    ecx,DWORD PTR [ecx-0x74f7db73]
  40d948:	jb     0x40d96e
  40d94a:	add    bh,bh
  40d94c:	inc    esp
  40d94d:	and    al,0x14
  40d94f:	lea    esi,[ebx]
  40d951:	and    al,0x9c
  40d953:	push   eax
  40d954:	jmp    0x54d99d
  40d959:	(bad)  
  40d95a:	cli    
  40d95b:	and    al,0x85
  40d95d:	(bad)  
  40d95e:	clc    
  40d95f:	and    al,0xa
  40d961:	call   0xffddd298
  40d966:	jmp    0x54d9af
  40d96b:	dec    esp
  40d96c:	aas    
  40d96d:	or     al,0x9c
  40d96f:	(bad)  
  40d970:	cmp    eax,edi
  40d972:	bswap  eax
  40d974:	mov    bh,0x4b
  40d976:	add    BYTE PTR [ebx+ecx*4+0x20],al
  40d97a:	and    al,0x4c
  40d97c:	mov    DWORD PTR [esp],ebx
  40d97f:	(bad)  
  40d980:	mov    eax,edi
  40d982:	or     BYTE PTR [edi-0x76e3dbbc],ch
  40d988:	inc    esp
  40d989:	jmp    0x40d99f
  40d98b:	add    DWORD PTR [edx+esi*1+0x20],0x1075449c
  40d993:	push   0xf8148544
  40d998:	inc    esp
  40d999:	sbb    BYTE PTR [edx+edi*8],dl
  40d99c:	dec    esp
  40d99d:	test   DWORD PTR [eax+edi*8],ebx
  40d9a0:	mov    BYTE PTR [edi],0xc7
  40d9a3:	xor    BYTE PTR [ecx],al
  40d9a5:	pushf  
  40d9a6:	inc    esp
  40d9a7:	jmp    0x40d9c1
  40d9a9:	add    DWORD PTR [eax+0x9c0130],0x44500875
  40d9b3:	jne    0x40d9cd
  40d9b5:	or     DWORD PTR [eax+0x100185],eax
  40d9bb:	or     al,0x0
  40d9bd:	jne    0x40da00
  40d9bf:	call   0xff65d84f
  40d9c4:	mov    eax,DWORD PTR [eax+ebx*8+0xc]
  40d9c8:	add    BYTE PTR [ebx+ecx*4+0xc],al
  40d9cc:	adc    al,0x5e
  40d9ce:	add    al,0xe5
  40d9d0:	add    dl,al
  40d9d2:	add    BYTE PTR [eax],al
  40d9d4:	inc    DWORD PTR [ecx]
  40d9d6:	push   eax
  40d9d7:	cli    
  40d9d8:	add    al,bh
  40d9da:	shl    DWORD PTR [ecx],1
  40d9dc:	inc    esp
  40d9dd:	jmp    0x40d9eb
  40d9df:	xor    DWORD PTR [ebp+esi*2+0x14],eax
  40d9e3:	test   esi,eax
  40d9e5:	cli    
  40d9e6:	(bad)  
  40d9e7:	inc    DWORD PTR [eax+ecx*1+0x24]
  40d9eb:	inc    DWORD PTR [esp+0x1c]
  40d9ef:	and    al,0x74
  40d9f1:	mov    ebx,DWORD PTR [eax]
  40d9f3:	or     al,0x44
  40d9f5:	and    al,0x28
  40d9f7:	and    al,0x8d
  40d9f9:	add    esp,DWORD PTR [esp+esi*2]
  40d9fc:	push   eax
  40d9fd:	and    al,0x74
  40d9ff:	and    al,0x2c
  40da01:	add    esi,DWORD PTR [esp+eax*2+0x24]
  40da05:	ss mov bl,0x7
  40da08:	inc    DWORD PTR [ecx-0x7749775]
  40da0e:	xor    edi,DWORD PTR [esi+0x3b]
  40da11:	mov    ecx,DWORD PTR [ebx+0xf338b5d]
  40da17:	and    al,0x85
  40da19:	pushf  
  40da1a:	pushf  
  40da1b:	clc    
  40da1c:	dec    DWORD PTR [ecx+0x41073f5f]
  40da22:	add    BYTE PTR [ebx+0x7],al
  40da25:	inc    ecx
  40da26:	add    BYTE PTR [edi+0x7],al
  40da29:	inc    ecx
  40da2a:	add    BYTE PTR [ebx+0x7],cl
  40da2d:	inc    ecx
  40da2e:	add    BYTE PTR [edi+0x7],cl
  40da31:	inc    ecx
  40da32:	add    BYTE PTR [ebx+0x7],dl
  40da35:	inc    ecx
  40da36:	add    BYTE PTR [edi+0x7],dl
  40da39:	inc    ecx
  40da3a:	add    BYTE PTR [ebx+0x7],bl
  40da3d:	inc    ecx
  40da3e:	add    ah,dl
  40da40:	(bad)  
  40da41:	in     eax,dx
  40da42:	jp     0x40da33
  40da44:	jp     0x40da1d
  40da46:	(bad)  
  40da47:	jnp    0x40da85
  40da49:	adc    ecx,DWORD PTR [esi-0x2c]
  40da4c:	or     DWORD PTR [edx+eiz*4-0x46],ebp
  40da50:	loope  0x40da52
  40da52:	add    BYTE PTR ds:0xa7000007,ah
  40da58:	inc    esp
  40da59:	cs mov bh,0x83
  40da5c:	mov    ah,0x9a
  40da5e:	add    ebp,DWORD PTR ds:0xb270fcdf
  40da64:	int    0x13
  40da66:	scas   eax,DWORD PTR es:[edi]
  40da67:	(bad)  
  40da68:	fsubr  DWORD PTR [ebx+0x75]
  40da6b:	outs   dx,DWORD PTR ds:[esi]
  40da6c:	popf   
  40da6d:	pop    ss
  40da6e:	mov    edi,0xc541cad3
  40da73:	stos   BYTE PTR es:[edi],al
  40da74:	add    BYTE PTR [edi],bh
  40da76:	jp     0x40da95
  40da78:	ins    BYTE PTR es:[edi],dx
  40da79:	pop    eax
  40da7a:	ds xchg ebp,eax
  40da7c:	inc    edi
  40da7d:	cwde   
  40da7e:	iret   
  40da7f:	cwde   
  40da80:	mov    WORD PTR [edi-0x80],ss
  40da83:	pop    edx
  40da84:	ds add al,0x3a
  40da87:	int    0x4a
  40da89:	or     al,0x16
  40da8b:	(bad)  
  40da8d:	rol    BYTE PTR [edi-0x2ffa3a7e],1
  40da93:	loop   0x40daf5
  40da95:	loope  0x40da6b
  40da97:	daa    
  40da98:	xchg   ecx,eax
  40da99:	aaa    
  40da9a:	jns    0x40da2f
  40da9c:	sbb    DWORD PTR [ebp-0x1a],esi
  40da9f:	lea    esp,[edi+0x4f3a212d]
  40daa5:	std    
  40daa6:	add    DWORD PTR es:[eax],ecx
  40daa9:	mov    ecx,0x1df57eba
  40daae:	jnp    0x40db2b
  40dab0:	(bad)  
  40dab1:	mov    esp,0xb7291b63
  40dab6:	cmc    
  40dab7:	cmp    dl,BYTE PTR [edx-0x4f]
  40daba:	mov    ds:0xf3014aee,al
  40dabf:	test   BYTE PTR [edx],dl
  40dac1:	or     edi,DWORD PTR ds:0xf3ae2b7f
  40dac7:	in     al,0xea
  40dac9:	inc    ecx
  40daca:	push   edi
  40dacb:	mov    esp,0xa1faacfb
  40dad0:	aaa    
  40dad1:	mov    eax,0x4715cf30
  40dad6:	xchg   ebp,eax
  40dad7:	mov    WORD PTR [ecx],cs
  40dad9:	shl    BYTE PTR [edi+0x4b2b66d0],cl
  40dadf:	fsubr  QWORD PTR [edx-0x6a]
  40dae2:	mov    ebx,DWORD PTR [eax]
  40dae4:	adc    DWORD PTR [edx],edx
  40dae6:	push   ebx
  40dae7:	enter  0xff69,0x96
  40daeb:	jae    0x40db39
  40daed:	stc    
  40daee:	mov    ds:0x118d4037,eax
  40daf3:	pop    ebp
  40daf4:	sbb    ebx,DWORD PTR [eax+edi*2+0x20]
  40daf8:	lods   eax,DWORD PTR ds:[esi]
  40daf9:	xchg   edx,eax
  40dafa:	(bad)  
  40dafb:	adc    edi,edx
  40dafd:	inc    ecx
  40dafe:	jge    0x40dabf
  40db00:	stos   DWORD PTR es:[edi],eax
  40db01:	les    ax,DWORD PTR [ecx+0x49]
  40db05:	stos   BYTE PTR es:[edi],al
  40db06:	lea    edi,[ecx+0x1d]
  40db09:	imul   edi,DWORD PTR [edi],0x7a38241d
  40db0f:	sbb    eax,0x2af190af
  40db14:	fld    QWORD PTR [eax+ebx*1+0x14523ac5]
  40db1b:	test   eax,0xae21d989
  40db20:	shl    DWORD PTR [eax],1
  40db22:	dec    ebx
  40db23:	inc    eax
  40db24:	inc    eax
  40db25:	cmp    BYTE PTR [ecx+0x78],cl
  40db28:	jle    0x40daae
  40db2a:	inc    eax
  40db2b:	cmc    
  40db2c:	pop    ecx
  40db2d:	and    DWORD PTR [edx+0x38],0xbab05943
  40db34:	jp     0x40db66
  40db36:	sub    BYTE PTR [esi+edi*4-0x6d],bh
  40db3a:	int    0xa7
  40db3c:	scas   eax,DWORD PTR es:[edi]
  40db3d:	out    0x76,eax
  40db3f:	mov    al,0xc2
  40db41:	out    0x37,al
  40db43:	lods   eax,DWORD PTR ds:[esi]
  40db44:	or     dh,BYTE PTR [edi-0x34]
  40db47:	mov    cl,0xbb
  40db49:	sbb    eax,0x9686be15
  40db4e:	jle    0x40db82
  40db50:	xchg   ecx,eax
  40db51:	stos   BYTE PTR es:[edi],al
  40db52:	pop    edx
  40db53:	mov    bl,0xda
  40db55:	jp     0x40db31
  40db57:	mov    edi,DWORD PTR [ecx]
  40db59:	mov    cl,0x80
  40db5b:	outs   dx,DWORD PTR ds:[esi]
  40db5c:	retf   
  40db5d:	lods   al,BYTE PTR ds:[esi]
  40db5e:	cmp    dh,ah
  40db60:	inc    edi
  40db61:	lea    ebx,cs:[edx+0x4f456c1c]
  40db68:	bound  eax,QWORD PTR es:[edx+0x9]
  40db6c:	iret   
  40db6d:	(bad)  
  40db6f:	jbe    0x40dbeb
  40db71:	cmp    ecx,esi
  40db73:	ffreep st(1)
  40db75:	add    DWORD PTR [ecx],ecx
  40db77:	adc    eax,0x69be43c2
  40db7c:	push   ss
  40db7d:	into   
  40db7e:	pop    ds
  40db7f:	ss dec dh
  40db82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db83:	les    ebx,FWORD PTR [edx+0x22]
  40db86:	adc    BYTE PTR [edi],al
  40db88:	fs or  bl,bh
  40db8b:	push   esi
  40db8c:	ja     0x40dbba
  40db8e:	js     0x40db39
  40db90:	stos   BYTE PTR es:[edi],al
  40db91:	lods   eax,DWORD PTR ds:[esi]
  40db92:	retf   0x44d3
  40db95:	sbb    bl,BYTE PTR [edi]
  40db97:	(bad)
  40db9b:	adc    eax,0x7332a1af
  40dba0:	ins    DWORD PTR es:[edi],dx
  40dba1:	xchg   esi,eax
  40dba2:	ja     0x40db9c
  40dba4:	xchg   edi,eax
  40dba5:	adc    edx,DWORD PTR [eax]
  40dba7:	push   0x489e34e9
  40dbac:	or     ebp,DWORD PTR [ebx]
  40dbae:	xor    DWORD PTR [ecx+0x418dcd6a],0xda3b0c4a
  40dbb8:	cmp    BYTE PTR [esi+0x1],al
  40dbbb:	fidivr DWORD PTR [edx+eax*8]
  40dbbe:	mov    ch,0x4a
  40dbc0:	pop    ecx
  40dbc1:	stos   DWORD PTR es:[edi],eax
  40dbc2:	ret    
  40dbc3:	mov    ds:0x69b67f44,eax
  40dbc8:	dec    esi
  40dbc9:	jecxz  0x40dc46
  40dbcb:	test   DWORD PTR [edx],edx
  40dbcd:	fidivr WORD PTR [eax-0x65]
  40dbd0:	je     0x40db78
  40dbd2:	cmp    ch,cl
  40dbd4:	mov    ecx,0xe51c2f9b
  40dbd9:	leave  
  40dbda:	pop    edi
  40dbdb:	retf   0xfaa
  40dbde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbdf:	fidiv  WORD PTR [edx+0x35]
  40dbe2:	les    ebx,FWORD PTR [ebp+0x1c9aa353]
  40dbe8:	xchg   ebx,eax
  40dbe9:	jmp    0xd383:0xeaca3fce
  40dbf0:	mov    ebp,0x1d94331f
  40dbf5:	cmp    al,0x11
  40dbf7:	mov    eax,0x2dc7dd4
  40dbfc:	mov    ds:0xdd72590d,al
  40dc01:	sbb    BYTE PTR [edi+0x78],bl
  40dc04:	cmp    edx,ecx
  40dc06:	cwde   
  40dc07:	xchg   ebp,eax
  40dc08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc09:	(bad)  [edi+0x52]
  40dc0c:	ins    BYTE PTR es:[edi],dx
  40dc0d:	sub    BYTE PTR [ebx-0x651d49d6],dl
  40dc13:	stos   BYTE PTR es:[edi],al
  40dc14:	call   0xb00b9181
  40dc19:	cvtdq2ps xmm7,XMMWORD PTR [ebp-0x69]
  40dc1d:	add    ch,BYTE PTR [eax]
  40dc1f:	arpl   WORD PTR [ecx-0x312dd8af],cx
  40dc25:	pop    ss
  40dc26:	sub    eax,DWORD PTR [edi+0x2f7e42e6]
  40dc2c:	push   ebp
  40dc2d:	rol    DWORD PTR [ecx],1
  40dc2f:	pop    esp
  40dc30:	ja     0x40dc45
  40dc32:	add    DWORD PTR [ebx-0xb640a83],esp
  40dc38:	adc    eax,0x23ab230b
  40dc3d:	sbb    eax,0x63919ab3
  40dc42:	push   ecx
  40dc43:	das    
  40dc44:	fs test eax,0x3f83735d
  40dc4a:	ins    BYTE PTR es:[edi],dx
  40dc4b:	adc    ebx,DWORD PTR [esi+0x2948c35f]
  40dc51:	adc    DWORD PTR [esi],0x35
  40dc54:	aaa    
  40dc55:	jmp    0x7b74:0x6cb177a6
  40dc5c:	jmp    0xec3ca22c
  40dc61:	hlt    
  40dc62:	or     dl,ah
  40dc64:	aaa    
  40dc65:	sub    BYTE PTR [ebp+0x1b],bl
  40dc68:	ret    0xe774
  40dc6b:	mov    bh,0xd0
  40dc6d:	push   edx
  40dc6e:	jo     0x40dc81
  40dc70:	cwde   
  40dc71:	mov    dl,0xe4
  40dc73:	jno    0x40dc0a
  40dc75:	push   ss
  40dc76:	push   ebx
  40dc77:	push   es
  40dc78:	xchg   ebp,eax
  40dc79:	pop    edi
  40dc7a:	sar    BYTE PTR [esi],1
  40dc7c:	adc    edi,ebx
  40dc7e:	daa    
  40dc7f:	xlat   BYTE PTR ds:[ebx]
  40dc80:	mov    al,0x38
  40dc82:	test   DWORD PTR [ecx-0x1362b2c1],ebp
  40dc88:	mov    dh,0xd
  40dc8a:	bound  edi,QWORD PTR [ebp-0x43]
  40dc8d:	adc    BYTE PTR [eax-0x31],dl
  40dc90:	ret    0xde12
  40dc93:	jge    0x40dc61
  40dc95:	aaa    
  40dc96:	inc    eax
  40dc97:	mov    edi,0x8d98f066
  40dc9c:	cmp    ebp,DWORD PTR [edi+esi*8]
  40dc9f:	and    eax,0x68969bbe
  40dca4:	inc    edx
  40dca5:	mov    eax,ds:0xc30fbffc
  40dcaa:	arpl   WORD PTR [ebp+0x52],bx
  40dcad:	inc    edi
  40dcae:	mov    eax,0xeda16ab1
  40dcb3:	jge    0x40dc93
  40dcb5:	imul   eax,ebp,0xa2688e34
  40dcbb:	outs   dx,DWORD PTR ds:[esi]
  40dcbc:	cmc    
  40dcbd:	sbb    cl,BYTE PTR [ebx+edx*8]
  40dcc0:	jmp    0x40dd18
  40dcc2:	ja     0x40dc81
  40dcc4:	or     DWORD PTR [eax-0x7a],edx
  40dcc7:	mov    cl,0xab
  40dcc9:	fs pop ecx
  40dccb:	adc    bl,ah
  40dccd:	fbstp  TBYTE PTR [esp+eax*1+0x37]
  40dcd1:	mov    ?,eax
  40dcd3:	lock sub BYTE PTR [edx],dl
  40dcd6:	jbe    0x40dcb3
  40dcd8:	inc    ebp
  40dcd9:	cmp    ch,BYTE PTR [edi-0x2bb2b99e]
  40dcdf:	mov    esi,0x6d97bb7a
  40dce4:	and    eax,DWORD PTR [ecx+0x398a61f8]
  40dcea:	jne    0x40dd12
  40dcec:	push   ebp
  40dced:	sub    BYTE PTR [edx+0x60],0x3f
  40dcf1:	lock sub ch,BYTE PTR [edx]
  40dcf4:	add    eax,0x27ae6b49
  40dcf9:	ja     0x40dce3
  40dcfb:	(bad)  
  40dcfc:	pop    esp
  40dcfd:	push   ds
  40dcfe:	cmp    bl,ah
  40dd00:	out    dx,al
  40dd01:	in     al,dx
  40dd02:	push   ss
  40dd03:	mov    al,ds:0x660b355e
  40dd08:	or     bl,bl
  40dd0a:	push   es
  40dd0b:	test   BYTE PTR [ebp-0x4a0e4543],ch
  40dd11:	jmp    0x9d83:0x702cc9b6
  40dd18:	jno    0x40dd92
  40dd1a:	mov    ds:0x88b08a64,al
  40dd1f:	xchg   ebx,eax
  40dd20:	adc    al,0x60
  40dd22:	aaa    
  40dd23:	les    esi,FWORD PTR [eax+0x5a]
  40dd26:	dec    bh
  40dd28:	fcom   DWORD PTR [ebp+0x71c75b07]
  40dd2e:	sbb    dl,ch
  40dd30:	add    BYTE PTR [ebx+0x2229fc4e],ah
  40dd36:	jg     0x40dcee
  40dd38:	sbb    esp,DWORD PTR [edx]
  40dd3a:	out    dx,al
  40dd3b:	mov    ch,0x10
  40dd3d:	mov    dh,0x23
  40dd3f:	add    esp,edx
  40dd41:	mov    dh,0xb4
  40dd43:	ror    BYTE PTR [ebx+edi*4-0x18bbc91b],1
  40dd4a:	loop   0x40dd36
  40dd4c:	in     eax,0xff
  40dd4e:	int    0x12
  40dd50:	int    0x36
  40dd52:	jmp    0xe823:0x552084dd
  40dd59:	enter  0x4368,0x9c
  40dd5d:	fcomi  st,st(7)
  40dd5f:	shl    ah,0x6c
  40dd62:	jbe    0x40dd8b
  40dd64:	jp     0x40dd2a
  40dd66:	pop    eax
  40dd67:	dec    ebp
  40dd68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd69:	lods   al,BYTE PTR ds:[esi]
  40dd6a:	xchg   edx,eax
  40dd6b:	das    
  40dd6c:	jno    0x40dd06
  40dd6e:	and    dl,cl
  40dd70:	retf   0xfe5d
  40dd73:	cwde   
  40dd74:	fs push es
  40dd76:	sar    DWORD PTR [ecx+0x1024040b],1
  40dd7c:	in     al,0x9e
  40dd7e:	inc    edi
  40dd7f:	into   
  40dd80:	mov    bl,dh
  40dd82:	addr16 sti 
  40dd84:	mov    al,0x6f
  40dd86:	cmp    DWORD PTR [eax],eax
  40dd88:	pop    esp
  40dd89:	cmp    al,0xc4
  40dd8b:	sti    
  40dd8c:	adc    esp,ebx
  40dd8e:	call   0x98507636
  40dd93:	mov    esi,0x32331d00
  40dd98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd99:	xor    bh,0x2e
  40dd9c:	jne    0x40dda1
  40dd9e:	and    ecx,esi
  40dda0:	adc    ebx,ebp
  40dda2:	test   BYTE PTR [esi+0x3a],0xb
  40dda6:	xchg   ah,cl
  40dda8:	jp     0x40dd80
  40ddaa:	repz out 0xa3,al
  40ddad:	cli    
  40ddae:	call   FWORD PTR [edi-0x5]
  40ddb1:	pushf  
  40ddb2:	lods   eax,DWORD PTR ds:[esi]
  40ddb3:	neg    esp
  40ddb5:	(bad)  
  40ddb7:	xor    ecx,DWORD PTR [edx+0x6aa2ec5a]
  40ddbd:	add    bh,BYTE PTR [eax]
  40ddbf:	imul   esp,ebp,0xffffffdb
  40ddc2:	test   eax,0x591263
  40ddc7:	add    DWORD PTR [ebp+0x43],0xffffffb5
  40ddcb:	in     al,dx
  40ddcc:	popa   
  40ddcd:	jbe    0x40de38
  40ddcf:	mov    eax,ds:0xd9d35de1
  40ddd4:	out    0xab,al
  40ddd6:	jle    0x40de26
  40ddd8:	cmp    DWORD PTR [esi],ebx
  40ddda:	mov    cl,0x29
  40dddc:	sbb    al,0x8d
  40ddde:	enter  0x4db4,0x2d
  40dde2:	std    
  40dde3:	out    dx,eax
  40dde4:	adc    bl,bl
  40dde6:	test   DWORD PTR [ebp+edx*2-0x2f],ebp
  40ddea:	push   DWORD PTR [edi-0x56a93002]
  40ddf0:	xchg   ecx,eax
  40ddf1:	sub    ch,BYTE PTR [esi-0x2c]
  40ddf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddf5:	push   esp
  40ddf6:	sti    
  40ddf7:	xchg   esi,eax
  40ddf8:	std    
  40ddf9:	frstor [esp+ecx*8-0x77]
  40ddfd:	lahf   
  40ddfe:	jbe    0x40dd91
  40de00:	repnz xor ah,al
  40de03:	add    BYTE PTR [eax-0x6b982992],ch
  40de09:	test   DWORD PTR [ebx-0x60],esi
  40de0c:	in     al,dx
  40de0d:	test   eax,0xaa10bb50
  40de12:	shl    BYTE PTR [ebp-0x2c],0x6e
  40de16:	lea    eax,[edi+0x34]
  40de19:	arpl   WORD PTR [edx-0x3ab97908],si
  40de1f:	aaa    
  40de20:	stos   BYTE PTR es:[edi],al
  40de21:	sahf   
  40de22:	int    0xc9
  40de24:	or     ch,bh
  40de26:	sbb    DWORD PTR [ebx],ecx
  40de28:	cwde   
  40de29:	sub    edx,DWORD PTR [ebp+eiz*1+0x2785eb44]
  40de30:	add    DWORD PTR [esi],edi
  40de32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de33:	add    ecx,DWORD PTR [esi-0x2b]
  40de36:	out    dx,al
  40de37:	stos   DWORD PTR es:[edi],eax
  40de38:	icebp  
  40de39:	out    dx,al
  40de3a:	cmp    eax,0x531b2a85
  40de3f:	push   ecx
  40de40:	pop    ss
  40de41:	cmp    BYTE PTR [ebx],ch
  40de43:	ret    
  40de44:	popa   
  40de45:	rol    cl,1
  40de47:	and    DWORD PTR [eax],edx
  40de49:	fmul   QWORD PTR [ecx+0x75]
  40de4c:	shl    BYTE PTR [eax],1
  40de4e:	push   ss
  40de4f:	stos   DWORD PTR es:[edi],eax
  40de50:	stc    
  40de51:	push   edi
  40de52:	jnp    0x40de4d
  40de54:	inc    esi
  40de55:	mov    eax,ds:0x595b3387
  40de5a:	sub    bl,BYTE PTR [ecx+0x49446fc3]
  40de60:	aam    0x1f
  40de62:	test   BYTE PTR [eax-0x47752cc2],cl
  40de68:	mov    ah,BYTE PTR ds:0x7d76e9c4
  40de6e:	(bad)  
  40de6f:	call   0xe8d5:0x20cd4883
  40de76:	aam    0xdd
  40de78:	pop    ebp
  40de79:	xchg   edi,eax
  40de7a:	jnp    0x40de52
  40de7c:	jb     0x40dee4
  40de7e:	clc    
  40de7f:	add    BYTE PTR [esi-0x100dcce8],al
  40de85:	out    0x6b,eax
  40de87:	xor    edx,DWORD PTR [ecx+eiz*2+0x41b3ac34]
  40de8e:	test   al,0xb5
  40de90:	out    dx,eax
  40de91:	mov    eax,0xd88a7eac
  40de97:	ss icebp 
  40de99:	xor    BYTE PTR [esi+0x5810051b],cl
  40de9f:	push   cs
  40dea0:	xchg   BYTE PTR [edx],dl
  40dea2:	fsubr  st(2),st
  40dea4:	stos   DWORD PTR es:[edi],eax
  40dea5:	sbb    eax,0xca1e0d59
  40deaa:	gs mov edx,0xcc53b4cb
  40deb0:	push   0x22
  40deb2:	retf   
  40deb3:	sub    ch,BYTE PTR [esi]
  40deb5:	pushf  
  40deb6:	test   ebx,0xd5a5414f
  40debc:	xchg   ebp,eax
  40debd:	scas   al,BYTE PTR es:[edi]
  40debe:	push   0xb6282f5c
  40dec3:	arpl   dx,si
  40dec5:	and    edi,DWORD PTR [ebx]
  40dec7:	cs jmp 0x40df13
  40deca:	xchg   ecx,eax
  40decb:	xchg   ebx,eax
  40decc:	mov    DWORD PTR [ebx+0x70],ebp
  40decf:	mov    gs,WORD PTR [eax]
  40ded1:	adc    BYTE PTR [esp+edx*8+0x47a19531],0x18
  40ded9:	and    al,0xf1
  40dedb:	fmul   DWORD PTR fs:[edi]
  40dede:	repz jmp FWORD PTR [edi-0x7d907439]
  40dee5:	jge    0x40deb9
  40dee7:	not    cl
  40dee9:	and    dh,ch
  40deeb:	xor    BYTE PTR [esi+0x33],al
  40deee:	in     eax,0x82
  40def0:	and    DWORD PTR [ebp*2-0x57e3e2e2],edx
  40def7:	add    DWORD PTR [esi-0x76bdea26],0x6
  40defe:	mov    ebx,ebx
  40df00:	mov    ah,0xe7
  40df02:	push   ebp
  40df03:	rol    BYTE PTR [ecx+ecx*4+0x6f],1
  40df07:	dec    ecx
  40df08:	inc    ecx
  40df09:	fdivr  DWORD PTR [edi]
  40df0b:	pop    ecx
  40df0c:	das    
  40df0d:	fnstsw WORD PTR [ebp+0x29]
  40df10:	js     0x40deac
  40df12:	repnz bound edi,QWORD PTR [edi+ebp*8]
  40df16:	hlt    
  40df17:	mov    ch,0x24
  40df19:	dec    ecx
  40df1a:	fcom   QWORD PTR [edi+ebx*8-0x15]
  40df1e:	mov    cl,0x22
  40df20:	fstp   DWORD PTR [edx+0x37]
  40df23:	jecxz  0x40deb7
  40df25:	cwde   
  40df26:	js     0x40debc
  40df28:	adc    eax,0xb2fd456c
  40df2d:	repz pop ss
  40df2f:	sbb    eax,DWORD PTR [ecx]
  40df31:	rol    BYTE PTR [ebp-0x2e22d51f],cl
  40df37:	or     al,0xf2
  40df3a:	mov    bl,0xe
  40df3c:	cmp    esp,DWORD PTR [ebx+0x56]
  40df3f:	dec    esp
  40df40:	into   
  40df41:	arpl   WORD PTR [ebx+ebx*4],si
  40df44:	rcr    BYTE PTR [esi-0x12],0x2d
  40df48:	fst    DWORD PTR [edx+ecx*1]
  40df4b:	lahf   
  40df4c:	int    0x9d
  40df4e:	mov    eax,ds:0x7ad15803
  40df53:	cmp    DWORD PTR [eax-0x7a],0xcca5b63c
  40df5a:	lds    ebp,FWORD PTR [ebx+0x2f6971ce]
  40df60:	pop    esi
  40df61:	es fsub st,st(3)
  40df64:	mov    ecx,ebp
  40df66:	push   ebp
  40df67:	mov    eax,0x83d02c89
  40df6c:	sbb    al,BYTE PTR [edi-0x3b56518b]
  40df72:	cmp    BYTE PTR [ebp+0x2d],cl
  40df75:	adc    al,0x50
  40df77:	jae    0x40dfc3
  40df79:	mov    ebx,0xe7000170
  40df7e:	test   eax,0x32521e7a
  40df83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df84:	(bad)  
  40df85:	jae    0x40df53
  40df87:	data16 scas al,BYTE PTR es:[edi]
  40df89:	sub    DWORD PTR [esi],eax
  40df8b:	into   
  40df8c:	std    
  40df8d:	fnstenv [ecx]
  40df8f:	mov    dh,BYTE PTR [eax-0x63799d1d]
  40df95:	or     al,0xe4
  40df97:	sbb    eax,0x7b77214
  40df9c:	out    0x7f,eax
  40df9e:	push   ebp
  40df9f:	mov    gs:0x4f60ca06,al
  40dfa5:	xchg   esi,eax
  40dfa6:	add    al,0x1
  40dfa8:	mov    cl,0xd8
  40dfaa:	shl    eax,cl
  40dfac:	int    0xd2
  40dfae:	aam    0xa2
  40dfb0:	scas   eax,DWORD PTR es:[edi]
  40dfb1:	and    edx,esi
  40dfb3:	xchg   ebx,eax
  40dfb4:	aaa    
  40dfb5:	fdiv   QWORD PTR [ecx-0xe]
  40dfb8:	xchg   BYTE PTR [ecx*4-0x77827420],ch
  40dfbf:	sub    DWORD PTR [edi],0x996ab85c
  40dfc5:	push   esp
  40dfc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfc7:	sbb    BYTE PTR [edx+esi*4],dh
  40dfca:	cwde   
  40dfcb:	jo     0x40e007
  40dfcd:	outs   dx,DWORD PTR ds:[esi]
  40dfce:	into   
  40dfcf:	cmp    eax,0x464abeb4
  40dfd4:	jmp    0xb402fecb
  40dfd9:	divps  xmm2,XMMWORD PTR [eax]
  40dfdc:	cmc    
  40dfdd:	or     BYTE PTR [eax+0x2d],dh
  40dfe0:	(bad)  
  40dfe2:	mov    esi,0xd7a72829
  40dfe7:	push   ds
  40dfe8:	nop
  40dfe9:	cmp    DWORD PTR [esi-0x77],0xd
  40dfed:	xor    DWORD PTR [eax-0x72c44ef],0xffffffb2
  40dff4:	maskmovq mm2,mm3
  40dff7:	jecxz  0x40dfd8
  40dff9:	xchg   DWORD PTR cs:[eax],edi
  40dffc:	bound  ecx,QWORD PTR [esi-0x66]
  40dfff:	add    bh,BYTE PTR [ecx]
  40e001:	(bad)  
  40e002:	mov    ?,WORD PTR ds:0xd72df8f7
  40e008:	sbb    DWORD PTR [ebp-0x66],esp
  40e00b:	inc    esp
  40e00c:	shr    BYTE PTR [eax],0x51
  40e00f:	cmp    al,0x4a
  40e011:	jmp    0xb187491d
  40e016:	sub    DWORD PTR ds:0x25fab180,edx
  40e01c:	dec    esi
  40e01d:	add    edx,DWORD PTR [edx]
  40e01f:	xlat   BYTE PTR ds:[ebx]
  40e020:	push   ebp
  40e021:	pop    ebx
  40e022:	xchg   esi,eax
  40e023:	aaa    
  40e024:	xlat   BYTE PTR ds:[ebx]
  40e025:	ja     0x40e04d
  40e027:	sbb    al,0x55
  40e029:	dec    edi
  40e02a:	sub    esp,DWORD PTR [eax+ebx*4-0x3c16f9d]
  40e031:	ret    
  40e032:	cmp    bl,BYTE PTR [edx-0x1d]
  40e035:	push   ecx
  40e036:	push   DWORD PTR [ebp+0xfda4e53]
  40e03c:	ds push 0x2c
  40e03f:	shr    BYTE PTR [edi],cl
  40e041:	adc    eax,0x6392e715
  40e046:	aad    0xa8
  40e048:	xor    al,0xab
  40e04a:	or     eax,0x12796c7c
  40e04f:	pop    ecx
  40e050:	cmp    BYTE PTR [eax-0x51a3e68b],bl
  40e056:	aam    0x5b
  40e058:	xor    edx,DWORD PTR [esi]
  40e05a:	mov    ch,0x55
  40e05c:	push   edi
  40e05d:	cmc    
  40e05e:	mov    al,0xe6
  40e060:	call   0x25a25c72
  40e065:	out    dx,eax
  40e066:	mov    ecx,0xe9f4f9f4
  40e06b:	xor    esi,DWORD PTR [eax*8+0x55876222]
  40e072:	ret    
  40e073:	xchg   ecx,eax
  40e074:	or     eax,0xa5462254
  40e079:	mov    eax,0xb871cd72
  40e07e:	call   0xc22b76d
  40e083:	in     al,dx
  40e084:	in     eax,0xf9
  40e086:	and    BYTE PTR [ebp+ebx*1+0x38],bh
  40e08a:	pop    ecx
  40e08b:	xor    BYTE PTR [edx],cl
  40e08d:	xchg   ebp,eax
  40e08e:	scas   eax,DWORD PTR es:[edi]
  40e08f:	xor    bh,BYTE PTR [ebx]
  40e091:	inc    edx
  40e092:	cmp    bh,BYTE PTR [ecx+ebp*1]
  40e095:	call   0xe59e7dba
  40e09a:	inc    edx
  40e09b:	out    0xb3,al
  40e09d:	call   0x89272f61
  40e0a2:	scas   al,BYTE PTR es:[edi]
  40e0a3:	popa   
  40e0a4:	pop    ecx
  40e0a5:	pop    edx
  40e0a6:	sub    al,0x93
  40e0a8:	sbb    edi,DWORD PTR [esi-0x7bbaf9cb]
  40e0ae:	std    
  40e0af:	fisubr WORD PTR [ecx-0x350d20a]
  40e0b5:	xor    al,0x6
  40e0b7:	int3   
  40e0b8:	frstor [ebp-0x72]
  40e0bb:	pop    es
  40e0bc:	and    DWORD PTR [edx-0x54],ecx
  40e0bf:	pushf  
  40e0c0:	outs   dx,BYTE PTR ds:[esi]
  40e0c1:	test   al,0xc3
  40e0c3:	pop    ebx
  40e0c4:	push   ecx
  40e0c5:	outs   dx,DWORD PTR ds:[esi]
  40e0c6:	lea    ebx,[edx+0x22]
  40e0c9:	mov    ebx,0x76b6b05a
  40e0ce:	sub    esi,eax
  40e0d0:	mov    dh,0xde
  40e0d2:	sub    eax,0xdf718182
  40e0d7:	ins    DWORD PTR es:[edi],dx
  40e0d8:	jge    0x40e099
  40e0da:	inc    ebp
  40e0db:	ins    DWORD PTR es:[edi],dx
  40e0dc:	retf   0xbf19
  40e0df:	mov    edx,0x6b37aa46
  40e0e4:	loope  0x40e12b
  40e0e6:	ja     0x40e144
  40e0e8:	leave  
  40e0e9:	leave  
  40e0ea:	aaa    
  40e0eb:	stc    
  40e0ec:	aas    
  40e0ed:	jnp    0x40e08f
  40e0ef:	sbb    edx,DWORD PTR [ebx+edi*1-0x26fd02b0]
  40e0f6:	xchg   bl,ch
  40e0f8:	push   ecx
  40e0f9:	imul   eax,DWORD PTR [edi+edx*1+0x27],0xed4df47e
  40e101:	outs   dx,BYTE PTR ds:[esi]
  40e102:	jae    0x40e16a
  40e104:	push   esp
  40e105:	xor    ebp,DWORD PTR [edi-0x169a2723]
  40e10b:	xchg   esp,eax
  40e10c:	xchg   ebp,eax
  40e10d:	ficomp WORD PTR [edx-0x5e]
  40e110:	call   0xe058ab8d
  40e115:	fnstcw WORD PTR ds:0xbc373e67
  40e11b:	shl    edx,0xb4
  40e11e:	dec    edi
  40e11f:	das    
  40e120:	leave  
  40e121:	and    al,0x50
  40e123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e124:	or     dh,BYTE PTR ds:0x41e65d5d
  40e12a:	sub    DWORD PTR [ecx+esi*2],ebx
  40e12d:	adc    DWORD PTR [esi+0xd],ebp
  40e130:	xor    ebp,ebp
  40e132:	adc    al,0x35
  40e134:	mov    edi,edx
  40e136:	retf   0xc7b4
  40e139:	pop    es
  40e13a:	mov    ecx,0x33f72949
  40e13f:	pop    ss
  40e140:	inc    ebx
  40e141:	call   0x1669:0x92d5adc6
  40e148:	xchg   ebx,eax
  40e149:	inc    edx
  40e14a:	sbb    al,0xe8
  40e14c:	xchg   esi,eax
  40e14d:	jle    0x40e0f2
  40e14f:	xchg   edi,eax
  40e150:	inc    esi
  40e151:	or     BYTE PTR [esi],ch
  40e153:	in     eax,0x32
  40e155:	pop    esp
  40e156:	iret   
  40e157:	test   DWORD PTR [edx],esp
  40e159:	hlt    
  40e15a:	inc    esp
  40e15b:	pop    ebx
  40e15c:	icebp  
  40e15d:	out    0x2f,eax
  40e15f:	and    BYTE PTR [ebx+0x2a],cl
  40e162:	inc    esi
  40e163:	inc    edx
  40e164:	push   eax
  40e165:	lds    esi,FWORD PTR [ebp-0x68a882cf]
  40e16b:	ds out 0x8,eax
  40e16e:	dec    ebp
  40e16f:	pop    esp
  40e170:	lods   eax,DWORD PTR ds:[esi]
  40e171:	mov    edi,0x93decaf4
  40e176:	dec    ecx
  40e177:	fidiv  DWORD PTR [ecx+0xcc57b6]
	...
  40e1bd:	add    BYTE PTR [eax],al
  40e1bf:	call   0xbb94:0xbf94b5b1
  40e1c6:	mov    edi,0x1b5d8b00
  40e1cb:	xor    DWORD PTR [edx-0x1720395d],0x0
  40e1d2:	add    BYTE PTR ds:0xea000007,ah
  40e1d8:	push   edx
  40e1d9:	mov    bh,0x9a
  40e1db:	push   0x7d4a35d8
  40e1e0:	js     0x40e163
  40e1e2:	adc    dh,BYTE PTR [eax+0x42]
  40e1e5:	xor    al,0xd5
  40e1e7:	stos   BYTE PTR es:[edi],al
  40e1e8:	sahf   
  40e1e9:	mov    WORD PTR [ebx+0x3c],ss
  40e1ec:	pop    esi
  40e1ed:	mov    cl,0xb6
  40e1ef:	xchg   esp,eax
  40e1f0:	dec    ebp
  40e1f1:	push   ss
  40e1f2:	or     al,al
  40e1f4:	mov    WORD PTR [ebp+0x9],?
  40e1f7:	xchg   ebx,eax
  40e1f8:	and    al,0x2d
  40e1fa:	outs   dx,BYTE PTR ds:[esi]
  40e1fb:	pop    esi
  40e1fc:	pop    ecx
  40e1fd:	push   esi
  40e1fe:	and    al,0x7d
  40e200:	push   ss
  40e201:	pop    ss
  40e202:	jg     0x40e25d
  40e204:	fwait
  40e205:	sbb    eax,0xfd6fee11
  40e20a:	repz test eax,0x10dafdf1
  40e210:	je     0x40e239
  40e212:	and    al,0xb0
  40e214:	jb     0x40e218
  40e216:	mov    ds:0x4eaf17d1,eax
  40e21b:	cdq    
  40e21c:	inc    ebx
  40e21d:	and    eax,0x6c1505b
  40e222:	cmp    eax,0xfb58c434
  40e227:	add    al,BYTE PTR [eax]
  40e229:	dec    edi
  40e22a:	into   
  40e22b:	and    eax,DWORD PTR [ebx+0x9]
  40e22e:	out    dx,al
  40e22f:	add    eax,0x20c656c8
  40e234:	mov    bl,0xf7
  40e236:	cs dec ebx
  40e238:	lock test BYTE PTR [ecx+0x48aa3922],dh
  40e23f:	iret   
  40e240:	ret    
  40e241:	ins    DWORD PTR es:[edi],dx
  40e242:	xchg   eax,edx
  40e244:	cmp    ah,BYTE PTR ds:0xa42bbe6
  40e24a:	push   esp
  40e24b:	neg    BYTE PTR [esi]
  40e24d:	ret    
  40e24e:	mov    esp,gs
  40e250:	jbe    0x40e2c6
  40e252:	mov    dh,0xd7
  40e254:	sub    dh,bl
  40e256:	or     DWORD PTR [edi],ebx
  40e258:	mov    ebx,0x753b9446
  40e25d:	jnp    0x40e2db
  40e25f:	daa    
  40e260:	scas   al,BYTE PTR es:[edi]
  40e261:	shl    ecx,0xfb
  40e264:	pop    esi
  40e265:	fcmovnb st,st(4)
  40e267:	inc    ecx
  40e268:	pop    es
  40e269:	call   0xc480:0x90d319a7
  40e270:	pop    esi
  40e271:	bound  esp,QWORD PTR [edi]
  40e273:	test   BYTE PTR [edx+0x3d90e330],al
  40e279:	icebp  
  40e27a:	stos   DWORD PTR es:[edi],eax
  40e27b:	sbb    DWORD PTR [esp+ebp*1],esi
  40e27e:	adc    esi,DWORD PTR [edx+0x51d43243]
  40e284:	call   0x8531fffe
  40e289:	out    0xf4,eax
  40e28b:	ss loop 0x40e231
  40e28e:	dec    ecx
  40e28f:	cmp    ah,dh
  40e291:	push   ss
  40e292:	fild   WORD PTR ds:0x72f6b8cc
  40e298:	out    dx,eax
  40e299:	adc    eax,0xce6dd332
  40e29e:	and    eax,0xe0225199
  40e2a3:	rol    ch,1
  40e2a5:	bound  ecx,QWORD PTR [esi]
  40e2a7:	pop    edi
  40e2a8:	pop    eax
  40e2a9:	mov    dl,0x80
  40e2ab:	sub    al,bh
  40e2ad:	pop    es
  40e2ae:	add    al,0xb5
  40e2b0:	gs es out 0x62,al
  40e2b4:	pop    edi
  40e2b5:	or     eax,0xca529d43
  40e2ba:	fsin   
  40e2bc:	dec    bl
  40e2be:	add    eax,0x7601bbb1
  40e2c3:	dec    esp
  40e2c4:	mov    ebp,0xc29b71c4
  40e2c9:	add    BYTE PTR [ebp+0x36],dh
  40e2cc:	and    ecx,DWORD PTR [eax+0x34]
  40e2cf:	loop   0x40e29b
  40e2d1:	cmp    dl,BYTE PTR [edx+0x34]
  40e2d4:	push   0x46
  40e2d6:	jp     0x40e27c
  40e2d8:	mov    ecx,0x5273f4bd
  40e2dd:	repnz dec esi
  40e2df:	call   0x12c8:0x408e37be
  40e2e6:	add    DWORD PTR [eax],ebx
  40e2e8:	imul   edx,DWORD PTR [ebx],0xffffffc6
  40e2eb:	sub    al,0x41
  40e2ed:	pop    edx
  40e2ee:	xor    edi,DWORD PTR ds:0xf093ea53
  40e2f4:	mov    cl,0xa9
  40e2f6:	pushf  
  40e2f7:	das    
  40e2f8:	lods   al,BYTE PTR ds:[esi]
  40e2f9:	xor    DWORD PTR [edx-0x7f50f1c],esp
  40e2ff:	je     0x40e286
  40e301:	je     0x40e318
  40e303:	pushf  
  40e304:	xor    al,0x21
  40e306:	sbb    bl,BYTE PTR [ebx+0x263d4415]
  40e30c:	outs   dx,BYTE PTR ds:[esi]
  40e30d:	aam    0x94
  40e30f:	in     al,dx
  40e310:	test   DWORD PTR [esi-0x22b2e19d],ebx
  40e316:	push   0x5f
  40e318:	jle    0x40e352
  40e31a:	add    eax,DWORD PTR [ecx]
  40e31c:	jno    0x40e2b5
  40e31e:	mov    ah,0x3b
  40e320:	(bad)  
  40e321:	jle    0x40e323
  40e323:	sbb    bh,BYTE PTR [ecx-0x1ed0819f]
  40e329:	shl    BYTE PTR ds:0x29400d81,1
  40e32f:	je     0x40e2f0
  40e331:	rcl    BYTE PTR [edx+0x46],cl
  40e334:	add    edx,ebx
  40e336:	ror    BYTE PTR [esi-0x4e],1
  40e339:	pop    es
  40e33a:	sub    eax,0x588de959
  40e33f:	scas   al,BYTE PTR es:[edi]
  40e340:	inc    edi
  40e341:	cdq    
  40e342:	aam    0x98
  40e344:	inc    esp
  40e345:	mov    ebp,0x8f8eb8d0
  40e34a:	popf   
  40e34b:	and    al,0x43
  40e34d:	cmp    cl,al
  40e34f:	sbb    DWORD PTR [ecx+eax*4],ebp
  40e352:	loop   0x40e2e4
  40e354:	(bad)  
  40e356:	(bad)  
  40e357:	pop    ebp
  40e358:	repnz in eax,dx
  40e35a:	jae    0x40e36e
  40e35c:	loopne 0x40e37b
  40e35e:	icebp  
  40e35f:	mov    ebp,0xeb5aa204
  40e364:	fld    TBYTE PTR [eax-0x41]
  40e367:	pop    edx
  40e368:	or     BYTE PTR [edi+ebp*8-0x72],ah
  40e36c:	or     BYTE PTR ss:[eax-0x56c07f61],ah
  40e373:	and    esi,DWORD PTR [ebx+0x2b2d6da6]
  40e379:	fld    QWORD PTR [ecx]
  40e37b:	inc    esi
  40e37c:	xchg   DWORD PTR [esi+0x71],eax
  40e37f:	shl    DWORD PTR [ebx-0x49337ed9],0x1e
  40e386:	ja     0x40e3ba
  40e388:	in     eax,dx
  40e389:	cmc    
  40e38a:	rol    DWORD PTR [edi+0x22732d79],0x79
  40e391:	loop   0x40e34a
  40e393:	dec    edx
  40e394:	pop    edi
  40e395:	jne    0x40e345
  40e397:	cmp    ebx,DWORD PTR [ebx-0x67fabb3a]
  40e39d:	xor    eax,0x4bf3cefe
  40e3a2:	pop    ss
  40e3a3:	jno    0x40e3f0
  40e3a5:	pop    edi
  40e3a6:	mov    edx,0x8b62d8fa
  40e3ab:	retf   
  40e3ac:	clc    
  40e3ad:	sbb    al,0xe8
  40e3af:	cdq    
  40e3b0:	dec    eax
  40e3b1:	pop    ecx
  40e3b2:	mov    ebp,0xa8e0c67b
  40e3b7:	imul   eax,DWORD PTR [esi+ecx*2-0x57506e48],0x5fe2f9ab
  40e3c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3c3:	push   ss
  40e3c4:	inc    eax
  40e3c5:	outs   dx,BYTE PTR ds:[esi]
  40e3c6:	or     DWORD PTR [ecx-0x4a7fc9cb],0x8478ed52
  40e3d0:	add    bh,BYTE PTR [edi+0x524aeefa]
  40e3d6:	jge    0x40e452
  40e3d8:	in     al,dx
  40e3d9:	inc    ebp
  40e3da:	test   eax,0x5a54f629
  40e3df:	push   cs
  40e3e0:	pop    edx
  40e3e1:	dec    ecx
  40e3e2:	xchg   esp,eax
  40e3e3:	je     0x40e3a2
  40e3e5:	dec    ebx
  40e3e6:	or     al,0x9f
  40e3e8:	sub    DWORD PTR [edx-0x12804a4f],ebp
  40e3ee:	or     DWORD PTR [ebp+0x20e1090d],ebx
  40e3f4:	dec    esi
  40e3f5:	outs   dx,DWORD PTR ds:[esi]
  40e3f6:	add    BYTE PTR [esi-0x28],ah
  40e3f9:	aam    0x71
  40e3fb:	jae    0x40e41d
  40e3fd:	sti    
  40e3fe:	or     edx,DWORD PTR [ecx+0x75]
  40e401:	rcl    BYTE PTR [ebp-0xf],1
  40e404:	fmul   QWORD PTR [esi+edx*4-0x58]
  40e408:	pusha  
  40e409:	add    bl,BYTE PTR [eax+0x10efb449]
  40e40f:	scas   eax,DWORD PTR es:[edi]
  40e410:	xchg   esp,eax
  40e411:	daa    
  40e412:	xchg   edx,eax
  40e413:	in     eax,dx
  40e414:	mov    ds:0x6b3eee89,al
  40e419:	sbb    al,BYTE PTR [ebx-0x31396117]
  40e41f:	lahf   
  40e420:	sbb    ah,BYTE PTR [edx+0x49eb8c80]
  40e426:	retf   
  40e427:	or     eax,0x353aa7e3
  40e42c:	bnd jp 0x40e409
  40e42f:	pop    eax
  40e430:	and    eax,0x3f6d7846
  40e435:	sub    al,0x0
  40e437:	mov    ebx,DWORD PTR [edx]
  40e439:	pop    ss
  40e43a:	sbb    al,0x7
  40e43c:	fld    QWORD PTR gs:[ebx]
  40e43f:	jo     0x40e458
  40e441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e442:	pop    ds
  40e443:	mov    eax,0x71bed438
  40e448:	mov    ebx,0x787d2236
  40e44d:	inc    esp
  40e44e:	icebp  
  40e44f:	mov    db6,esi
  40e452:	fisub  WORD PTR [eax+0x6fb42fe0]
  40e458:	icebp  
  40e459:	or     BYTE PTR [edx-0x727187e7],bh
  40e45f:	in     eax,dx
  40e460:	in     eax,dx
  40e461:	mov    al,0x92
  40e463:	dec    ebx
  40e464:	dec    ecx
  40e465:	pop    eax
  40e466:	loop   0x40e42d
  40e468:	pop    ecx
  40e469:	jle    0x40e418
  40e46b:	shl    BYTE PTR [eax-0x42253b80],0xa3
  40e472:	(bad)  
  40e473:	pop    ecx
  40e474:	xchg   esp,eax
  40e475:	sub    dl,BYTE PTR [ebx]
  40e477:	ficomp WORD PTR [esi+0x238efaca]
  40e47d:	repnz push ds
  40e47f:	and    al,0x86
  40e481:	and    DWORD PTR [edi],ebx
  40e483:	ins    DWORD PTR es:[edi],dx
  40e484:	arpl   WORD PTR [edx+0x7e84ab4d],dx
  40e48a:	enter  0xea1a,0xad
  40e48e:	ds jnp 0x40e41b
  40e491:	sahf   
  40e492:	std    
  40e493:	aam    0xe7
  40e495:	js     0x40e4fc
  40e497:	call   0xc3850d46
  40e49c:	sub    esp,ebx
  40e49e:	sbb    eax,0xb80205e0
  40e4a3:	xor    esp,ecx
  40e4a5:	sub    ebp,0xfcbac526
  40e4ab:	push   esp
  40e4ac:	xchg   ecx,eax
  40e4ad:	(bad)  
  40e4ae:	cmc    
  40e4af:	pushf  
  40e4b0:	or     dl,BYTE PTR [eax-0x42]
  40e4b3:	(bad)  
  40e4b4:	in     al,dx
  40e4b5:	dec    edi
  40e4b6:	sub    eax,0xd2e46419
  40e4bb:	push   ss
  40e4bc:	push   ebx
  40e4bd:	dec    eax
  40e4be:	out    0xff,eax
  40e4c0:	sub    BYTE PTR [ebx],dh
  40e4c2:	dec    ebx
  40e4c3:	ins    BYTE PTR es:[edi],dx
  40e4c4:	dec    ebx
  40e4c5:	outs   dx,DWORD PTR ds:[esi]
  40e4c6:	lods   al,BYTE PTR ds:[esi]
  40e4c7:	push   esi
  40e4c8:	jmp    0x5f9a841a
  40e4cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4ce:	pushf  
  40e4cf:	and    al,0x57
  40e4d1:	retf   0x279d
  40e4d4:	repz sbb eax,0x9cbb0898
  40e4da:	pop    ebp
  40e4db:	xor    al,0xc
  40e4dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4de:	mov    edi,0xca77595a
  40e4e3:	cmp    DWORD PTR [ebx],eax
  40e4e5:	push   0xa77cd125
  40e4ea:	or     ecx,DWORD PTR [esp+ebp*2+0x4fb38ed5]
  40e4f1:	mov    ds:0xcf388ff7,eax
  40e4f6:	sahf   
  40e4f7:	mov    edx,0x46c75308
  40e4fc:	add    dl,bh
  40e4fe:	mov    al,0x78
  40e500:	mov    ch,BYTE PTR [ebx-0x158923e3]
  40e506:	outs   dx,BYTE PTR ds:[esi]
  40e507:	(bad)  
  40e508:	fsub   DWORD PTR [edx]
  40e50a:	mov    esp,esi
  40e50c:	mov    ecx,0xdc157623
  40e511:	push   esp
  40e512:	push   cs
  40e513:	xchg   edi,eax
  40e514:	xchg   ebx,eax
  40e515:	mov    dh,0xca
  40e517:	or     eax,0x1966ea02
  40e51c:	bswap  ebp
  40e51e:	mov    edx,0xb997a47e
  40e523:	mov    dl,0x75
  40e525:	inc    esi
  40e526:	out    dx,eax
  40e527:	dec    esp
  40e528:	xchg   edi,eax
  40e529:	inc    ebx
  40e52a:	add    esi,esp
  40e52c:	aaa    
  40e52d:	jge    0x40e53c
  40e52f:	fwait
  40e530:	jmp    esi
  40e532:	sub    DWORD PTR [edi-0x1b],ebx
  40e535:	daa    
  40e536:	test   eax,0xb4e5cfd2
  40e53b:	(bad)  
  40e53c:	std    
  40e53d:	repnz rcl DWORD PTR [ecx+0x79ea6c01],0x8e
  40e545:	mov    dh,BYTE PTR [ebx+0x3a0f8fe2]
  40e54b:	and    eax,edx
  40e54d:	int    0x2e
  40e54f:	retf   0x1977
  40e552:	inc    edx
  40e553:	mov    ds:0x98104ea2,al
  40e558:	pop    eax
  40e559:	jbe    0x40e4ec
  40e55b:	sti    
  40e55c:	cmc    
  40e55d:	pop    ecx
  40e55e:	(bad)  
  40e55f:	(bad)
  40e564:	loope  0x40e5bb
  40e566:	push   ebx
  40e567:	mov    DWORD PTR [edi*8-0x62e57e7f],edi
  40e56e:	push   es
  40e56f:	mov    dh,dh
  40e571:	add    cl,BYTE PTR [edx]
  40e573:	sbb    edx,0x487acdbf
  40e579:	jnp    0x40e574
  40e57b:	adc    eax,0xd3e543f
  40e580:	pop    edi
  40e581:	add    DWORD PTR [edi+0x24],edx
  40e584:	neg    DWORD PTR [eax]
  40e586:	push   cs
  40e587:	ret    0xd92f
  40e58a:	test   eax,0xcb629ca5
  40e58f:	in     eax,dx
  40e590:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e591:	sub    esi,DWORD PTR [edx]
  40e593:	nop
  40e594:	popa   
  40e595:	or     DWORD PTR [edx-0x2b],edx
  40e598:	adc    BYTE PTR [esi-0x1e332202],bl
  40e59e:	fcomp  QWORD PTR [ecx+0x3045024e]
  40e5a4:	mov    esp,edx
  40e5a6:	mov    esi,0xf55520aa
  40e5ab:	shr    DWORD PTR [esp+ebx*1+0x3bf822ef],1
  40e5b2:	lahf   
  40e5b3:	(bad)
  40e5b7:	in     al,0xa3
  40e5b9:	jle    0x40e610
  40e5bb:	jno    0x40e617
  40e5bd:	and    al,0x45
  40e5bf:	cmp    ah,BYTE PTR [esp+eiz*4+0x16]
  40e5c3:	add    BYTE PTR [ebx],dl
  40e5c5:	jge    0x40e5c3
  40e5c7:	arpl   WORD PTR [ecx-0x7f],si
  40e5ca:	fcmovu st,st(7)
  40e5cc:	sahf   
  40e5cd:	pop    edx
  40e5ce:	pop    ds
  40e5cf:	add    eax,0x2630d9f9
  40e5d4:	sbb    edx,edx
  40e5d6:	xchg   ebx,eax
  40e5d7:	add    ecx,esi
  40e5d9:	clc    
  40e5da:	xor    eax,0x14480d75
  40e5df:	aam    0xdf
  40e5e1:	sub    bl,ah
  40e5e3:	push   edx
  40e5e4:	retf   0xae3c
  40e5e7:	or     eax,edx
  40e5e9:	fist   WORD PTR [edx-0x1fb5b835]
  40e5ef:	sti    
  40e5f0:	lods   al,BYTE PTR ds:[esi]
  40e5f1:	pop    es
  40e5f2:	cs add ebx,ebp
  40e5f5:	mov    ds,WORD PTR [edx+eiz*4+0x5a974dbe]
  40e5fc:	push   esp
  40e5fd:	add    al,0x4
  40e5ff:	stc    
  40e600:	jg     0x40e5a0
  40e602:	jg     0x40e5ba
  40e604:	iret   
  40e605:	sbb    DWORD PTR [edx],0x32
  40e608:	dec    edi
  40e609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e60a:	(bad)  
  40e60b:	ins    BYTE PTR es:[edi],dx
  40e60c:	dec    ecx
  40e60d:	fmul   QWORD PTR [eax+0x59ee9c94]
  40e613:	call   0x543a1412
  40e618:	es aad 0xf1
  40e61b:	jmp    0x62eec269
  40e620:	rcl    BYTE PTR [esi+edi*2-0x20],1
  40e624:	in     eax,dx
  40e625:	loope  0x40e673
  40e627:	or     edx,eax
  40e629:	jmp    0xed7bace8
  40e62e:	push   ss
  40e62f:	fist   DWORD PTR [edi-0x9683249]
  40e635:	out    0x65,eax
  40e637:	mov    edi,0xaa57a1a
  40e63c:	addr16 js 0x40e659
  40e63f:	icebp  
  40e640:	sub    BYTE PTR [edi+edi*4],bh
  40e643:	xor    esi,edx
  40e645:	int    0x34
  40e647:	daa    
  40e648:	or     al,0xcb
  40e64a:	jnp    0x40e632
  40e64c:	jl     0x40e690
  40e64e:	neg    BYTE PTR [ebx]
  40e650:	push   ecx
  40e651:	push   cs
  40e652:	cdq    
  40e653:	push   0x96e09cc5
  40e658:	adc    DWORD PTR [ebp+0x3f],ebx
  40e65b:	mov    bh,0xbc
  40e65d:	cs js  0x40e5ef
  40e660:	jp     0x40e665
  40e662:	cmp    dl,BYTE PTR [ecx+0x6c1a2db3]
  40e668:	lahf   
  40e669:	fdiv   DWORD PTR [edi+eiz*2+0x1f]
  40e66d:	push   0xd
  40e66f:	jno    0x40e612
  40e671:	in     al,dx
  40e672:	and    BYTE PTR [ebx+0xd],0xd4
  40e676:	icebp  
  40e677:	aad    0x9b
  40e679:	sub    BYTE PTR [ecx-0x57fa434],0xa1
  40e680:	out    0x2c,al
  40e682:	or     eax,0xce5fbefd
  40e687:	mov    BYTE PTR [eax],dl
  40e689:	in     al,dx
  40e68a:	jns    0x40e636
  40e68c:	add    eax,0xe4511f11
  40e691:	mov    cl,0x37
  40e693:	jecxz  0x40e625
  40e695:	pop    ebx
  40e696:	(bad)  
  40e697:	popa   
  40e698:	dec    ecx
  40e699:	inc    esi
  40e69a:	imul   ebp,DWORD PTR [esi],0x1fe3563b
  40e6a0:	sbb    al,0x2c
  40e6a2:	add    al,0xef
  40e6a4:	pop    ebp
  40e6a5:	jmp    0x532451ba
  40e6aa:	or     edi,ecx
  40e6ac:	bound  esp,QWORD PTR [esi-0x37]
  40e6af:	loopne 0x40e6b4
  40e6b1:	adc    eax,0x2af0995e
  40e6b6:	les    edx,FWORD PTR [edx-0x5ea9953b]
  40e6bc:	test   BYTE PTR [eax],bh
  40e6be:	(bad)  
  40e6bf:	pop    ss
  40e6c0:	ins    DWORD PTR es:[edi],dx
  40e6c1:	push   ds
  40e6c2:	push   edi
  40e6c3:	mov    ch,0x2c
  40e6c5:	mov    ebx,0x3e38d237
  40e6ca:	popa   
  40e6cb:	mov    DWORD PTR [edi+eiz*8+0xabd127d],ebp
  40e6d2:	cmp    esp,DWORD PTR [edx-0x1b]
  40e6d5:	dec    ecx
  40e6d6:	dec    ebx
  40e6d7:	bound  esp,QWORD PTR [ecx-0x16]
  40e6da:	jge    0x40e72f
  40e6dc:	aam    0x46
  40e6de:	out    dx,al
  40e6df:	mov    eax,ds:0x455d25
  40e6e4:	fcomip st,st(4)
  40e6e6:	jg     0x40e67f
  40e6e8:	ja     0x40e6c3
  40e6ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6eb:	dec    eax
  40e6ec:	retf   
  40e6ed:	int    0xc6
  40e6ef:	mov    bh,0x3f
  40e6f1:	into   
  40e6f2:	inc    esp
  40e6f3:	inc    ebx
  40e6f4:	jne    0x40e6f6
  40e6f6:	ret    0x9846
  40e6f9:	test   DWORD PTR [eax+0x30e9d641],edi
  40e6ff:	fisttp QWORD PTR [esi+eax*4]
  40e702:	hlt    
  40e703:	loop   0x40e702
  40e705:	test   BYTE PTR [ebp+0xe6688f2],0x4b
  40e70c:	or     bl,ch
  40e70e:	mov    esp,0x5a677e9d
  40e713:	jno    0x40e78d
  40e715:	inc    ebp
  40e716:	mov    bl,0xeb
  40e718:	rdpmc  
  40e71a:	mov    ebp,0xdc4a81bc
  40e71f:	or     BYTE PTR [edx+0x53db5255],bh
  40e725:	loopne 0x40e6cf
  40e727:	dec    ebp
  40e728:	mov    ecx,0xdb50c54b
  40e72d:	mov    ebx,0xe8c6fb4e
  40e732:	bound  edx,QWORD PTR [edi-0x5c]
  40e735:	fcom   QWORD PTR [esi+eax*4]
  40e738:	and    edx,DWORD PTR [edx]
  40e73a:	pop    ebx
  40e73b:	pushf  
  40e73c:	out    dx,al
  40e73d:	dec    ebx
  40e73e:	jecxz  0x40e6ea
  40e740:	xor    eax,0xdf84621c
  40e745:	sub    al,BYTE PTR [esi]
  40e747:	jmp    ebp
  40e749:	neg    BYTE PTR [eax-0x52]
  40e74c:	push   edi
  40e74d:	dec    edx
  40e74e:	(bad)  [edi+edx*8-0x4d]
  40e752:	inc    ebx
  40e753:	xor    eax,eax
  40e755:	push   ecx
  40e756:	out    0x40,eax
  40e758:	sahf   
  40e759:	in     eax,0x91
  40e75b:	add    eax,0xb2723dcf
  40e760:	and    al,0x67
  40e762:	cdq    
  40e763:	jae    0x40e79c
  40e765:	xchg   BYTE PTR ds:0x9bf5c718,cl
  40e76b:	out    dx,al
  40e76c:	pop    es
  40e76d:	fmul   QWORD PTR [edx]
  40e76f:	fcom   DWORD PTR [esi]
  40e771:	iret   
  40e772:	cmp    ch,BYTE PTR [eax-0x1b]
  40e775:	jb     0x40e7a0
  40e777:	jno    0x40e7c5
  40e779:	sbb    eax,0xe12d6e27
  40e77e:	push   ds
  40e77f:	test   al,0x27
  40e781:	into   
  40e782:	lock add BYTE PTR ds:0x5d066791,0xc4
  40e78a:	push   ebx
  40e78b:	les    edx,FWORD PTR [ebp+0x1048e3e6]
  40e791:	or     al,0x55
  40e793:	stos   DWORD PTR es:[edi],eax
  40e794:	mov    esp,cs
  40e796:	xchg   esi,eax
  40e797:	xor    DWORD PTR [ebx],ebp
  40e799:	mov    ebx,DWORD PTR [eax+ebx*2]
  40e79c:	push   edx
  40e79d:	popf   
  40e79e:	push   ebx
  40e79f:	ins    DWORD PTR es:[edi],dx
  40e7a0:	and    ah,BYTE PTR [eax-0x5d0fc9c8]
  40e7a6:	test   DWORD PTR [esi+0x1d652a54],edi
  40e7ac:	scas   al,BYTE PTR es:[edi]
  40e7ad:	xor    DWORD PTR [esi],eax
  40e7af:	sub    BYTE PTR es:[esi+0x1e],dh
  40e7b3:	pop    ebx
  40e7b4:	xchg   DWORD PTR [ebx+0x13],esp
  40e7b7:	jb     0x40e819
  40e7b9:	mov    ds:0xf13a209b,al
  40e7be:	in     eax,dx
  40e7bf:	mov    eax,ds:0x49882340
  40e7c4:	mov    bl,0xc2
  40e7c6:	retf   0xe885
  40e7c9:	fdivr  DWORD PTR [esi+0x3c4eeb04]
  40e7cf:	rol    DWORD PTR [edi-0x58ddce9b],1
  40e7d5:	xor    dl,BYTE PTR [edx]
  40e7d7:	inc    ebp
  40e7d8:	punpckhbw mm2,QWORD PTR [eax]
  40e7db:	xchg   esi,eax
  40e7dc:	jmp    0xae05abb5
  40e7e1:	mov    DWORD PTR [edi-0x2e],edi
  40e7e4:	call   0x9bf37905
  40e7e9:	das    
  40e7ea:	or     ebx,ebx
  40e7ec:	sti    
  40e7ed:	sbb    edx,DWORD PTR [ecx+0x1262133a]
  40e7f3:	aam    0xf
  40e7f5:	xor    edx,DWORD PTR [esi-0x4c]
  40e7f8:	pop    ebx
  40e7f9:	inc    esi
  40e7fa:	jo     0x6cfba935
  40e800:	imul   eax,DWORD PTR ds:[esi+0x46c0692],0xffffffac
  40e808:	stc    
  40e809:	fild   DWORD PTR [edi+eiz*4-0x3ab72c46]
  40e810:	sbb    BYTE PTR [ebx],al
  40e812:	gs jne 0x40e7a5
  40e815:	adc    ecx,DWORD PTR [edi-0x4a]
  40e818:	xchg   ebx,eax
  40e819:	xchg   esi,eax
  40e81a:	test   BYTE PTR ds:0xde7989e3,0x96
  40e821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e822:	add    al,0x2e
  40e824:	imul   esp,DWORD PTR [edi],0xffffffec
  40e827:	pop    ebp
  40e828:	add    al,0x56
  40e82a:	cdq    
  40e82b:	sahf   
  40e82c:	ins    BYTE PTR es:[edi],dx
  40e82d:	dec    esi
  40e82e:	dec    ecx
  40e82f:	(bad)  
  40e830:	(bad)  
  40e831:	sub    DWORD PTR [ebp-0x40512f65],esi
  40e837:	mov    edx,0xe05b832
  40e83c:	jnp    0x40e8b1
  40e83e:	inc    esp
  40e83f:	adc    eax,0xea079f1d
  40e844:	push   es
  40e845:	jo     0x40e83f
  40e847:	int3   
  40e848:	sbb    ch,BYTE PTR [edi+0x64]
  40e84b:	mov    ebp,esp
  40e84d:	test   DWORD PTR [ecx-0x1d],0x11f41d48
  40e854:	pop    esi
  40e855:	(bad)  
  40e856:	je     0x40e8cb
  40e858:	das    
  40e859:	or     BYTE PTR [ebp+0x3c],bl
  40e85c:	push   esi
  40e85d:	iret   
  40e85e:	lds    ebp,FWORD PTR [ecx+0x3b]
  40e861:	mov    ecx,0x4f5b1d92
  40e866:	or     ch,BYTE PTR [esi-0x18daa34]
  40e86c:	mov    ecx,0xe83dfbb7
  40e871:	into   
  40e872:	cs xchg ecx,eax
  40e874:	and    ebx,DWORD PTR [ecx+0x62]
  40e877:	mov    ecx,0xc8a3873c
  40e87c:	inc    eax
  40e87d:	and    BYTE PTR [edx],al
  40e87f:	dec    BYTE PTR [esi]
  40e881:	push   ss
  40e882:	sub    al,al
  40e884:	xchg   ecx,eax
  40e885:	shl    bh,1
  40e887:	xchg   esp,eax
  40e888:	ja     0x40e8f3
  40e88a:	push   edx
  40e88b:	mov    bl,0x86
  40e88d:	xchg   edi,eax
  40e88e:	fisttp WORD PTR [ebx]
  40e890:	and    esi,DWORD PTR [ebp+0x6]
  40e893:	iret   
  40e894:	cmp    DWORD PTR [ebx-0x60f08a66],esi
  40e89a:	cli    
  40e89b:	outs   dx,DWORD PTR ds:[esi]
  40e89c:	dec    esi
  40e89d:	rcl    DWORD PTR [ebx-0x8],1
  40e8a0:	push   ecx
  40e8a1:	stos   BYTE PTR es:[edi],al
  40e8a2:	cli    
  40e8a3:	pop    es
  40e8a4:	imul   esp,DWORD PTR [edi],0x28
  40e8a7:	call   0x8466:0xbf8d5119
  40e8ae:	sbb    eax,0x324f208d
  40e8b3:	shl    BYTE PTR [si+0x7338],1
  40e8b8:	sbb    DWORD PTR [edi],0x2f53772a
  40e8be:	js     0x40e8f4
  40e8c0:	and    DWORD PTR [ebx],ecx
  40e8c2:	xchg   ecx,eax
  40e8c3:	test   al,0xdc
  40e8c5:	add    eax,0xefb6f51a
  40e8ca:	push   ds
  40e8cb:	pop    es
  40e8cc:	das    
  40e8cd:	adc    BYTE PTR [ecx-0x3a372c47],cl
  40e8d3:	sbb    DWORD PTR [ecx-0x7f],esi
  40e8d6:	or     eax,0x4fc7cd03
  40e8db:	and    BYTE PTR [eax+ecx*4-0x41],ah
  40e8df:	sub    ebp,ebx
  40e8e1:	mov    bh,0x1f
  40e8e3:	or     al,bh
  40e8e5:	adc    ebp,DWORD PTR [esi+0x7c]
  40e8e8:	mov    ebx,0xda54ac7f
  40e8ed:	ins    BYTE PTR es:[edi],dx
  40e8ee:	out    dx,al
  40e8ef:	pop    esi
  40e8f0:	push   0xb63457a4
  40e8f5:	push   es
  40e8f6:	fs cdq 
  40e8f8:	and    al,0xf9
  40e8fa:	rol    DWORD PTR [edi+0x0],0x0
	...
  40e93e:	add    BYTE PTR [eax+0x34],ch
  40e941:	fs mov esi,0xf6fafe7c
  40e947:	mov    bl,0x9d
  40e949:	aam    0xd4
  40e94b:	call   0x47c5204
  40e950:	lock add BYTE PTR [eax],al
  40e953:	and    eax,0x8f000007
  40e958:	jle    0x40e96f
  40e95a:	leave  
  40e95b:	fst    QWORD PTR [eax+0x4a]
  40e95e:	jo     0x40e8fb
  40e960:	sub    eax,0xa8443139
  40e965:	fcom   DWORD PTR [edx-0x2]
  40e968:	xchg   edx,eax
  40e969:	mov    ebx,0x3e6b3f8b
  40e96e:	and    BYTE PTR [ebx],dl
  40e970:	(bad)  
  40e972:	pushf  
  40e973:	je     0x40e96d
  40e975:	add    eax,0x12908ee2
  40e97a:	mov    fs,ebx
  40e97c:	push   esp
  40e97d:	pop    ebx
  40e97e:	fld    TBYTE PTR [edi-0x755e5ac3]
  40e984:	dec    eax
  40e985:	ficom  WORD PTR [edi]
  40e987:	sbb    al,ch
  40e989:	jae    0x40e985
  40e98b:	dec    esi
  40e98c:	retf   0x5aff
  40e98f:	sbb    BYTE PTR [esi+0x477792a3],ch
  40e995:	stc    
  40e996:	sub    eax,0x62baad4b
  40e99b:	adc    dh,BYTE PTR [edx+0x715476b5]
  40e9a1:	jge    0x40e9f8
  40e9a3:	jl     0x40e95b
  40e9a5:	cmc    
  40e9a6:	pop    ecx
  40e9a7:	pop    eax
  40e9a8:	loope  0x40ea0c
  40e9aa:	fcom   QWORD PTR [eax-0x2d6925d8]
  40e9b0:	xor    cl,BYTE PTR [edx-0x68]
  40e9b3:	dec    ecx
  40e9b4:	cmp    al,BYTE PTR [edx+0x40d3f9f7]
  40e9ba:	pop    esi
  40e9bb:	lea    ecx,[ecx+0x72ac742b]
  40e9c1:	or     BYTE PTR [ebx],bh
  40e9c3:	out    0x55,eax
  40e9c5:	mov    cl,BYTE PTR [esi]
  40e9c7:	push   cs
  40e9c8:	popf   
  40e9c9:	dec    eax
  40e9ca:	push   edx
  40e9cb:	xor    DWORD PTR [eax],eax
  40e9cd:	call   0x64235756
  40e9d2:	leave  
  40e9d3:	lock xor esp,0x271abd7
  40e9da:	div    edi
  40e9dc:	les    ebp,FWORD PTR [edx-0x2dd59447]
  40e9e2:	sbb    al,0x40
  40e9e4:	or     DWORD PTR [edx],esi
  40e9e6:	mov    WORD PTR [ebp-0x4b56f209],es
  40e9ec:	popf   
  40e9ed:	adc    al,0xf7
  40e9ef:	ja     0x40e9c0
  40e9f1:	mov    BYTE PTR [ebx],bh
  40e9f3:	stos   DWORD PTR es:[edi],eax
  40e9f4:	dec    ebp
  40e9f5:	sub    al,0x89
  40e9f7:	aad    0xf8
  40e9f9:	mov    al,ds:0xa4bde34b
  40e9fe:	jle    0x40ea60
  40ea00:	cmp    eax,DWORD PTR [ebx+0x79736854]
  40ea06:	jl     0x40e990
  40ea08:	in     eax,0x80
  40ea0a:	mov    ds:0xd1ace1f,al
  40ea0f:	push   ebp
  40ea10:	jmp    0x40e9a2
  40ea12:	mov    ?,edi
  40ea14:	cmp    DWORD PTR [edx-0x2ffd572d],esi
  40ea1a:	jns    0x40e9a9
  40ea1c:	pop    ds
  40ea1d:	enter  0xa22d,0xc3
  40ea21:	cld    
  40ea22:	sub    eax,0x7fce9f8a
  40ea27:	cdq    
  40ea28:	push   edi
  40ea29:	fnstenv [ebp-0x6b]
  40ea2c:	popf   
  40ea2d:	or     DWORD PTR [esp+eax*4+0x494b7c86],edi
  40ea34:	lods   al,BYTE PTR ds:[esi]
  40ea35:	dec    edi
  40ea36:	jmp    0x65ce:0xef3e1ff4
  40ea3d:	mov    eax,0xf291829d
  40ea42:	push   0xe0ffe84
  40ea47:	sbb    DWORD PTR ds:0x860c549f,esi
  40ea4d:	pop    esi
  40ea4e:	popa   
  40ea4f:	inc    esp
  40ea50:	push   0xffffffc9
  40ea52:	out    dx,al
  40ea53:	(bad)  
  40ea54:	sub    al,0x81
  40ea56:	mov    ecx,0xbc95ef02
  40ea5b:	enter  0x9886,0x35
  40ea5f:	push   edx
  40ea61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea62:	in     al,dx
  40ea63:	lock ins DWORD PTR es:[edi],dx
  40ea65:	into   
  40ea66:	in     eax,dx
  40ea67:	js     0x40ea33
  40ea69:	add    al,0xa4
  40ea6b:	das    
  40ea6c:	rcr    bh,1
  40ea6e:	pop    DWORD PTR [eax+0x7cb9731d]
  40ea74:	add    esi,edi
  40ea76:	js     0x40ea8c
  40ea78:	(bad)  
  40ea7a:	je     0x40ea1e
  40ea7c:	(bad)  
  40ea7d:	fld    QWORD PTR [edi+ecx*4+0x689acd4b]
  40ea84:	lock stc 
  40ea86:	inc    ecx
  40ea87:	push   ebp
  40ea88:	or     esi,0x44ebeb
  40ea8e:	xchg   esi,eax
  40ea8f:	sbb    esp,DWORD PTR [ecx+0x21b84c1b]
  40ea95:	and    eax,0x81f36ca2
  40ea9a:	xchg   BYTE PTR [ebx],al
  40ea9c:	cmp    al,0x61
  40ea9e:	sbb    DWORD PTR [esi+0x774af3c1],0x5e
  40eaa5:	repnz into 
  40eaa7:	enter  0xa5e8,0xd8
  40eaab:	or     DWORD PTR [esi],ebx
  40eaad:	mov    ebx,0x99bd833f
  40eab2:	clc    
  40eab3:	shr    DWORD PTR [eax],cl
  40eab5:	cs or  al,0x86
  40eab8:	mov    WORD PTR [esi-0x7e],?
  40eabb:	scas   al,BYTE PTR es:[edi]
  40eabc:	or     BYTE PTR [edx+0x21],0x17
  40eac0:	nop
  40eac1:	inc    edi
  40eac2:	push   edi
  40eac3:	pop    ebx
  40eac4:	and    esp,eax
  40eac6:	dec    eax
  40eac7:	cmp    DWORD PTR [ebp+0xe],edx
  40eaca:	call   0x212a:0xa3d70d19
  40ead1:	fistp  QWORD PTR fs:[ebx+ebp*4-0x48ad1de4]
  40ead9:	dec    eax
  40eada:	stc    
  40eadb:	or     al,0xf6
  40eadd:	(bad)  
  40eadf:	fldcw  WORD PTR ss:[edx-0x19]
  40eae3:	out    0xf8,al
  40eae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eae6:	pop    edx
  40eae7:	lds    ebx,FWORD PTR [eax-0x64]
  40eaea:	sti    
  40eaeb:	mov    esp,DWORD PTR ds:0x3843b98
  40eaf1:	xchg   ebp,eax
  40eaf2:	popf   
  40eaf3:	not    esi
  40eaf5:	xor    eax,0xb06b4630
  40eafa:	or     dh,BYTE PTR [eax-0x723e4a46]
  40eb00:	jp     0x40eb2b
  40eb02:	(bad)
  40eb06:	out    dx,eax
  40eb07:	push   ds
  40eb08:	jge    0x40eb88
  40eb0a:	sbb    bl,BYTE PTR [edx+0x17]
  40eb0d:	shr    BYTE PTR [ebx-0x143e5107],0x85
  40eb14:	push   esi
  40eb15:	shl    DWORD PTR [eax+0x1acf00a5],0xe
  40eb1c:	jmp    0x40eb43
  40eb1e:	xor    eax,0xf23434f7
  40eb23:	dec    eax
  40eb24:	inc    edi
  40eb25:	fldenv [esi-0x53]
  40eb28:	ret    0x6676
  40eb2b:	lea    edi,[edi-0x3e]
  40eb2e:	or     ebx,ecx
  40eb30:	retf   0xc2eb
  40eb33:	popa   
  40eb34:	mov    bh,0xf0
  40eb36:	xchg   edi,eax
  40eb37:	ds popa 
  40eb39:	fwait
  40eb3a:	dec    edi
  40eb3b:	push   esi
  40eb3c:	std    
  40eb3d:	xchg   esi,eax
  40eb3e:	dec    eax
  40eb3f:	dec    ecx
  40eb40:	idiv   DWORD PTR [eax+0x10c12240]
  40eb46:	call   0x4118094f
  40eb4b:	xchg   ebx,eax
  40eb4c:	add    cl,BYTE PTR [ebp+0x52]
  40eb4f:	jle    0x40eb70
  40eb51:	shl    BYTE PTR [edi],cl
  40eb53:	sti    
  40eb54:	sbb    bl,BYTE PTR [edi]
  40eb56:	(bad)  
  40eb57:	dec    BYTE PTR [edx+0x56]
  40eb5a:	int3   
  40eb5b:	and    al,0xb4
  40eb5d:	push   edx
  40eb5e:	shl    DWORD PTR [ebx],0xb7
  40eb61:	ja     0x40eb52
  40eb63:	or     esi,esp
  40eb65:	and    bl,BYTE PTR [edi-0x1532a568]
  40eb6b:	fs cmp ebx,DWORD PTR cs:[ebp+0x1]
  40eb70:	jnp    0x40eb08
  40eb72:	push   ds
  40eb73:	xor    eax,0xa0eab11a
  40eb78:	or     eax,0xdcd8a878
  40eb7d:	sahf   
  40eb7e:	js     0x40eb13
  40eb80:	xchg   edi,eax
  40eb81:	(bad)  
  40eb82:	adc    BYTE PTR [edi],ch
  40eb84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb85:	inc    BYTE PTR ds:0x5ccb3b7b
  40eb8b:	or     DWORD PTR [ecx+esi*2],edi
  40eb8e:	fldenv [edi]
  40eb90:	sbb    al,0xf6
  40eb92:	mov    esi,0xeae03cad
  40eb97:	mov    ecx,gs
  40eb99:	xor    DWORD PTR [ecx+0x7a],esi
  40eb9c:	mov    eax,0xfbc4986c
  40eba1:	sub    DWORD PTR [esi],edi
  40eba3:	push   ecx
  40eba4:	cdq    
  40eba5:	(bad)  
  40eba6:	lods   eax,DWORD PTR ds:[esi]
  40eba7:	inc    eax
  40eba8:	or     al,0xea
  40ebaa:	scas   eax,DWORD PTR es:[edi]
  40ebab:	pop    edx
  40ebac:	adc    BYTE PTR [eax+esi*2],0x84
  40ebb0:	sub    esp,esp
  40ebb2:	sbb    al,0xa9
  40ebb4:	jbe    0x40eb7a
  40ebb6:	sub    DWORD PTR [edx+0x456659b9],ecx
  40ebbc:	adc    BYTE PTR [ebx+0x19],0xf9
  40ebc0:	push   esp
  40ebc1:	mov    al,ds:0xa2f23e80
  40ebc6:	sub    al,0x4f
  40ebc8:	es xchg edi,eax
  40ebca:	or     eax,0x9e6617e0
  40ebcf:	loopne 0x40ebbc
  40ebd1:	cmp    edx,DWORD PTR [edi+0x85b78e3]
  40ebd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebd8:	int3   
  40ebd9:	mov    ds:0x574fa672,al
  40ebde:	mov    eax,0xd4300b74
  40ebe3:	lahf   
  40ebe4:	lds    edi,FWORD PTR [ecx]
  40ebe6:	adc    ah,0x48
  40ebe9:	xchg   BYTE PTR [eax+0x47],bh
  40ebec:	push   ss
  40ebed:	fcom   QWORD PTR [eax+0x2d6d49d1]
  40ebf3:	pop    edx
  40ebf4:	mov    ch,0xad
  40ebf6:	pop    ss
  40ebf7:	mov    WORD PTR [eax-0x4],ss
  40ebfa:	ja     0x40ebd9
  40ebfc:	test   eax,0x698112b7
  40ec01:	retf   
  40ec02:	shl    DWORD PTR [edi+0xf],0x72
  40ec06:	rol    DWORD PTR ds:0xf981cdf3,0x13
  40ec0d:	hlt    
  40ec0e:	pop    es
  40ec0f:	sbb    al,0x6d
  40ec11:	cmp    DWORD PTR [ebx-0x3abd2dd7],eax
  40ec17:	jne    0x40ebfe
  40ec19:	mov    edx,0x2e7f3756
  40ec1e:	add    bh,ah
  40ec20:	mov    al,ds:0x84f9d9c
  40ec25:	xchg   edi,eax
  40ec26:	(bad)  
  40ec29:	loop   0x40ec16
  40ec2b:	push   0xd4d427ca
  40ec30:	test   BYTE PTR [ecx+0x5358eee],bh
  40ec36:	ds (bad) 
  40ec38:	jg     0x40ec71
  40ec3a:	or     DWORD PTR [ebp+0x7ca1bc23],ebp
  40ec40:	push   cs
  40ec41:	popf   
  40ec42:	stos   DWORD PTR es:[edi],eax
  40ec43:	push   edx
  40ec44:	pusha  
  40ec45:	cmp    BYTE PTR [edx-0x6cb90a7b],cl
  40ec4b:	xchg   esp,eax
  40ec4c:	pushf  
  40ec4d:	mov    al,ds:0x665733ab
  40ec52:	loop   0x40ec47
  40ec54:	int3   
  40ec55:	cld    
  40ec56:	hlt    
  40ec57:	push   0xffffffd1
  40ec59:	pop    ebx
  40ec5a:	push   0xffffff85
  40ec5c:	add    al,0xa1
  40ec5e:	cmc    
  40ec5f:	jnp    0x40eca9
  40ec61:	out    0x60,al
  40ec63:	aam    0x57
  40ec65:	in     eax,dx
  40ec66:	mov    al,0x5d
  40ec68:	int    0x2c
  40ec6a:	inc    edi
  40ec6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec6c:	or     al,0x22
  40ec6e:	hlt    
  40ec6f:	jmp    0x7c0f:0x709be4b3
  40ec76:	add    BYTE PTR [ecx-0x2cdcb6e9],0xec
  40ec7d:	test   al,0x5b
  40ec7f:	inc    ebp
  40ec80:	in     eax,0x3a
  40ec82:	inc    ecx
  40ec83:	add    eax,edx
  40ec85:	imul   ch
  40ec87:	out    0xf4,eax
  40ec89:	pop    esp
  40ec8a:	repz inc ecx
  40ec8c:	dec    esi
  40ec8d:	mov    esi,0xe7148ba5
  40ec92:	xchg   edi,eax
  40ec93:	mov    edi,0x400198c3
  40ec98:	sub    eax,0xf1d5e9ff
  40ec9d:	xchg   BYTE PTR [ecx-0x138dab0b],ah
  40eca3:	inc    esp
  40eca4:	mov    ds:0x11b04abc,al
  40eca9:	push   eax
  40ecaa:	mov    al,ds:0xbd9e6b61
  40ecaf:	pop    ss
  40ecb0:	push   eax
  40ecb1:	rcl    BYTE PTR [ebp+0x49bfcc24],0x8
  40ecb8:	pop    ebx
  40ecb9:	es ja  0x40ec6c
  40ecbc:	jns    0x40ed00
  40ecbe:	repz not DWORD PTR ds:0xd015288b
  40ecc5:	shl    eax,1
  40ecc7:	call   0x186f:0x4130c0d5
  40ecce:	xor    DWORD PTR [esi],ebx
  40ecd0:	call   0xad66:0x33b25d92
  40ecd7:	or     al,0x4a
  40ecd9:	mov    ebx,0x1ef32b2b
  40ecde:	dec    esi
  40ecdf:	push   edi
  40ece0:	xor    eax,0x38a0b63c
  40ece5:	sahf   
  40ece6:	xor    al,0xc0
  40ece8:	pop    ebx
  40ece9:	sbb    cl,BYTE PTR [esi+0x27]
  40ecec:	aam    0x74
  40ecee:	enter  0x6157,0xa6
  40ecf2:	dec    eax
  40ecf3:	test   al,0xd1
  40ecf5:	jp     0x40ecca
  40ecf7:	push   ds
  40ecf8:	xor    cl,al
  40ecfa:	(bad)  
  40ecfb:	test   BYTE PTR [ecx],0x9e
  40ecfe:	cmp    BYTE PTR [edi],ah
  40ed00:	jg     0x40eca5
  40ed02:	and    DWORD PTR [esi],0x29
  40ed05:	aad    0x4a
  40ed07:	nop
  40ed08:	rcr    DWORD PTR [esi+0x51],1
  40ed0b:	sahf   
  40ed0c:	imul   eax,DWORD PTR [ebx-0x77bc0d8d],0xffffffcf
  40ed13:	popa   
  40ed14:	mov    ecx,0x6c559c6b
  40ed19:	test   BYTE PTR [esi+ebp*1-0x16525e94],ch
  40ed20:	call   0xf6cfa88e
  40ed25:	test   eax,0xc6ef308d
  40ed2a:	cld    
  40ed2b:	pop    esp
  40ed2c:	(bad)  
  40ed2d:	in     eax,0x59
  40ed2f:	adc    al,0x0
  40ed31:	pop    ebx
  40ed32:	sbb    dh,BYTE PTR [ebp+esi*2-0x22f89b93]
  40ed39:	mov    ds:0x8d6ba402,al
  40ed3e:	xor    bl,BYTE PTR [ebx-0x7f]
  40ed41:	sbb    DWORD PTR [ebx-0x246c2dad],ebx
  40ed47:	cmp    edx,DWORD PTR [edx]
  40ed49:	ss popf 
  40ed4b:	xchg   edi,eax
  40ed4c:	jae    0x40ed3d
  40ed4e:	jo     0x40ed4b
  40ed50:	inc    ebx
  40ed51:	push   ebx
  40ed52:	loopne 0x40ed75
  40ed54:	push   0x53f707cc
  40ed59:	dec    ebx
  40ed5a:	push   ds
  40ed5b:	sbb    esi,DWORD PTR [edi+ebp*1+0x823510d]
  40ed62:	fidivr WORD PTR [ebp+0x4f]
  40ed65:	add    esp,DWORD PTR [eax+0x6f8ead9a]
  40ed6b:	xor    ebx,eax
  40ed6d:	sbb    eax,DWORD PTR [edi+0x4]
  40ed70:	leave  
  40ed71:	inc    edx
  40ed72:	shl    BYTE PTR [edx+eax*2-0x23a98a73],0x31
  40ed7a:	jmp    FWORD PTR [esi-0x1c]
  40ed7d:	mov    edi,0xb3ce8e3e
  40ed82:	outs   dx,DWORD PTR ds:[esi]
  40ed83:	lds    edi,FWORD PTR ds:0x34f45e04
  40ed89:	xor    dl,BYTE PTR [ebx]
  40ed8b:	imul   ecx,DWORD PTR [esi+0x33b2118b],0xffffffdb
  40ed92:	cmp    dl,dl
  40ed94:	inc    dl
  40ed96:	jns    0x40ed1f
  40ed98:	push   edi
  40ed99:	jecxz  0x40edfc
  40ed9b:	sbb    ebx,DWORD PTR [ebx]
  40ed9d:	mov    ah,0xed
  40ed9f:	push   esi
  40eda0:	out    dx,al
  40eda1:	mov    ah,0x39
  40eda3:	jne    0x40ee00
  40eda5:	rol    BYTE PTR [esi+0x3713bb2c],0xc0
  40edac:	scas   al,BYTE PTR es:[edi]
  40edad:	out    dx,eax
  40edae:	sbb    esi,DWORD PTR [ecx+0x59584b14]
  40edb4:	jb     0x40ed64
  40edb6:	jecxz  0x40ee18
  40edb8:	daa    
  40edb9:	xchg   esp,eax
  40edba:	jne    0x40ee36
  40edbc:	sbb    DWORD PTR [esi+0x44],edx
  40edbf:	cmp    eax,0x9ab0777e
  40edc4:	sbb    al,0x99
  40edc6:	adc    BYTE PTR [eax],dh
  40edc8:	rcl    edi,1
  40edca:	scas   al,BYTE PTR es:[edi]
  40edcb:	mov    al,ds:0x375b6470
  40edd0:	retf   
  40edd1:	xor    DWORD PTR [ebp-0x10],ecx
  40edd4:	mov    eax,ds:0x1e3b1523
  40edd9:	adc    edi,DWORD PTR [edi]
  40eddb:	inc    al
  40eddd:	xor    BYTE PTR [ebx+0x31],ch
  40ede0:	sub    eax,0x6d42e02f
  40ede5:	aas    
  40ede6:	xor    BYTE PTR [ebx+ebx*4+0x72],dh
  40edea:	loope  0x40ed81
  40edec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eded:	mov    dl,0x79
  40edef:	sbb    eax,0xfa3f2444
  40edf4:	sub    DWORD PTR [ebp+0x1b2fc793],ecx
  40edfa:	cmc    
  40edfb:	cmp    ebp,esp
  40edfd:	pop    edi
  40edfe:	ins    BYTE PTR es:[edi],dx
  40edff:	stos   BYTE PTR es:[edi],al
  40ee00:	fld    st(5)
  40ee02:	sbb    eax,0xaa17021c
  40ee07:	es out 0x87,eax
  40ee0a:	pop    esp
  40ee0b:	outs   dx,BYTE PTR ds:[esi]
  40ee0c:	add    ah,BYTE PTR [edi+ebx*4-0x2cf95320]
  40ee13:	mov    ecx,0x1987c299
  40ee18:	test   al,cl
  40ee1a:	scas   eax,DWORD PTR es:[edi]
  40ee1b:	adc    bl,BYTE PTR [edx-0x50260e0b]
  40ee21:	cmp    edx,ecx
  40ee23:	jae    0x40ee62
  40ee25:	push   edi
  40ee26:	mov    edx,0x88e39db4
  40ee2b:	mov    ah,0x94
  40ee2d:	mov    al,ds:0x9261ff2f
  40ee32:	jmp    0x40ee3f
  40ee34:	sub    al,0x5c
  40ee36:	mov    ch,ah
  40ee38:	cdq    
  40ee39:	inc    esp
  40ee3a:	sub    dh,dh
  40ee3c:	scas   al,BYTE PTR es:[edi]
  40ee3d:	and    edx,DWORD PTR [ebp-0x3771b810]
  40ee43:	xor    cl,BYTE PTR [ecx-0x28]
  40ee46:	xor    cl,bl
  40ee48:	mov    esp,?
  40ee4a:	mov    al,ds:0x17026ab5
  40ee4f:	sub    DWORD PTR [ebx+0x2b70f242],edi
  40ee55:	out    dx,al
  40ee56:	ds hlt 
  40ee58:	push   esp
  40ee59:	mov    bl,bh
  40ee5b:	js     0x40ee84
  40ee5d:	fwait
  40ee5e:	xchg   ecx,eax
  40ee5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee60:	mov    eax,0x63be4666
  40ee65:	jnp    0x40ee29
  40ee67:	fs cmp al,0xd4
  40ee6a:	inc    edx
  40ee6b:	sbb    DWORD PTR [esi],edi
  40ee6d:	add    eax,0x1fadf361
  40ee72:	xchg   ebp,eax
  40ee73:	and    al,0x36
  40ee75:	mov    WORD PTR [edi-0x5438d338],ds
  40ee7b:	inc    esp
  40ee7c:	out    0x5c,al
  40ee7e:	xor    BYTE PTR [edi+0x60],0x46
  40ee82:	xchg   edx,eax
  40ee83:	add    eax,0x6c058fc0
  40ee88:	push   ss
  40ee89:	mov    ah,0xfc
  40ee8b:	pop    edx
  40ee8c:	mov    ah,0xeb
  40ee8e:	or     DWORD PTR [ecx],0x22
  40ee91:	jo     0x40ef0c
  40ee93:	and    eax,0x8d447f84
  40ee98:	add    eax,0xd63309b6
  40ee9d:	mov    cl,0x3d
  40ee9f:	or     ebp,0xffffff95
  40eea2:	test   al,0xfd
  40eea4:	sbb    DWORD PTR [esi-0x1c2229bb],0xffffffd8
  40eeab:	sbb    DWORD PTR [ecx+0x53],ecx
  40eeae:	test   al,0xd7
  40eeb0:	mov    cl,0x32
  40eeb2:	sbb    bl,BYTE PTR [edx-0x5c]
  40eeb5:	sub    ch,BYTE PTR [ebp-0x27]
  40eeb8:	rcr    ch,1
  40eeba:	cmp    ecx,esi
  40eebc:	imul   ebx,DWORD PTR [eax+esi*1],0xfffffffb
  40eec0:	lds    esp,FWORD PTR [eax]
  40eec2:	xchg   BYTE PTR [ecx],dh
  40eec4:	xchg   esp,eax
  40eec5:	xor    ecx,edi
  40eec7:	mov    ecx,0x772d533
  40eecc:	into   
  40eecd:	xlat   BYTE PTR ds:[ebx]
  40eece:	lock (bad) 
  40eed0:	mov    ebx,0x77536a11
  40eed5:	call   0x8106:0x94f9eda5
  40eedc:	arpl   WORD PTR [ecx+0x2cd84064],sp
  40eee2:	ror    BYTE PTR [ebp-0x67],1
  40eee5:	or     DWORD PTR [edi],esp
  40eee7:	inc    eax
  40eee8:	xchg   edx,eax
  40eee9:	sub    al,0xf4
  40eeeb:	mov    bl,BYTE PTR [ecx]
  40eeed:	les    ecx,FWORD PTR [edi+ecx*1+0x52]
  40eef1:	adc    eax,0x764b0abb
  40eef6:	mov    DWORD PTR [esi+ebp*4-0x3a],esp
  40eefa:	gs add esi,esi
  40eefd:	jecxz  0x40eeef
  40eeff:	fsub   QWORD PTR [edi+ecx*8-0x6]
  40ef03:	cdq    
  40ef04:	xor    al,0xf8
  40ef06:	lahf   
  40ef07:	fmul   st,st(1)
  40ef09:	mov    bl,0xa3
  40ef0b:	imul   ebp,edx,0xffffffc7
  40ef0e:	or     dh,dl
  40ef10:	jne    0x40ef06
  40ef12:	inc    ebx
  40ef13:	xor    bl,BYTE PTR [ebx+0x5c321bdd]
  40ef19:	mov    edi,0xa6d400c0
  40ef1e:	jnp    0x40eebd
  40ef20:	inc    ebx
  40ef21:	jg     0x40ef37
  40ef23:	call   FWORD PTR [edi-0x3f]
  40ef26:	cmp    eax,0x2fa74a97
  40ef2b:	dec    edi
  40ef2c:	pop    edi
  40ef2d:	mov    ds:0x365a8207,eax
  40ef32:	ret    
  40ef33:	in     al,dx
  40ef34:	int    0x14
  40ef36:	push   ecx
  40ef37:	in     eax,0x4b
  40ef39:	pop    esp
  40ef3a:	jl     0x40eee9
  40ef3c:	xor    al,0xc4
  40ef3e:	and    eax,ebp
  40ef40:	mov    ah,0x5d
  40ef42:	test   ecx,edi
  40ef44:	jno    0x40ef9f
  40ef46:	mov    esi,0x4a263005
  40ef4b:	rcl    BYTE PTR [eax],cl
  40ef4d:	pop    edi
  40ef4e:	jmp    0x40ef2c
  40ef50:	push   0xedef87a7
  40ef55:	imul   ebx,DWORD PTR [ebp+eiz*4-0xc7d5ac2],0xba1f9120
  40ef60:	or     DWORD PTR [ecx-0x6d],edi
  40ef63:	(bad)  
  40ef64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef65:	xchg   ebx,eax
  40ef66:	loopne 0x40ef6c
  40ef68:	fdivr  QWORD PTR [edx-0x49]
  40ef6b:	jl     0x40efd1
  40ef6d:	pushf  
  40ef6e:	aam    0x65
  40ef70:	adc    BYTE PTR [ebx],cl
  40ef72:	xchg   ebx,eax
  40ef73:	pop    esp
  40ef74:	cwde   
  40ef75:	push   cs
  40ef76:	xlat   BYTE PTR ds:[ebx]
  40ef77:	daa    
  40ef78:	push   edx
  40ef79:	or     eax,0xf0235d33
  40ef7e:	inc    edx
  40ef7f:	stos   DWORD PTR es:[edi],eax
  40ef80:	or     BYTE PTR [ebp+esi*2+0x63],cl
  40ef84:	cwde   
  40ef85:	xor    DWORD PTR [ecx+0x273a0d8c],edi
  40ef8b:	enter  0x927d,0x9b
  40ef8f:	push   esi
  40ef90:	inc    eax
  40ef91:	xchg   BYTE PTR [esi],ch
  40ef93:	mov    esi,DWORD PTR [eax+0x72]
  40ef96:	jge    0x40efb8
  40ef98:	mov    WORD PTR [edx-0x59],es
  40ef9b:	(bad)  
  40ef9d:	adc    al,0xd9
  40ef9f:	cmc    
  40efa0:	out    0x60,al
  40efa2:	ds dec eax
  40efa4:	jle    0x40ef9d
  40efa6:	or     DWORD PTR [edi+0x6e],edx
  40efa9:	int    0xc6
  40efab:	fnstenv [edx+0x71]
  40efae:	sbb    eax,DWORD PTR [ebp-0x5e]
  40efb1:	and    DWORD PTR [esp+esi*1+0x16f2009c],esp
  40efb8:	fiadd  WORD PTR [esi-0x57]
  40efbb:	sub    BYTE PTR [edi-0x40],dl
  40efbe:	mov    eax,0x71801fce
  40efc3:	jno    0x40ef59
  40efc5:	push   esp
  40efc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efc7:	sbb    esi,esi
  40efc9:	and    ah,ah
  40efcb:	pop    ds
  40efcc:	pop    edx
  40efcd:	push   eax
  40efce:	xchg   bh,ah
  40efd0:	xchg   ecx,eax
  40efd1:	sbb    eax,0x270d7fec
  40efd6:	xlat   BYTE PTR ds:[ebx]
  40efd7:	(bad)  
  40efd8:	mov    bh,0x24
  40efda:	scas   eax,DWORD PTR es:[edi]
  40efdb:	push   edx
  40efdc:	test   DWORD PTR [edx],ebx
  40efde:	enter  0xa1c6,0x2f
  40efe2:	ror    bh,cl
  40efe4:	out    0x9e,al
  40efe6:	sar    DWORD PTR [esi-0x53faa2fe],1
  40efec:	inc    esp
  40efed:	dec    eax
  40efee:	inc    ebp
  40efef:	ffreep st(6)
  40eff1:	dec    edi
  40eff2:	xor    cl,BYTE PTR [eax]
  40eff4:	jmp    0x32e5f63d
  40eff9:	fiadd  DWORD PTR [ebx+edx*2]
  40effc:	mov    ecx,0xaa637ef0
  40f001:	call   0x1f81:0x2a189b57
  40f008:	mov    ds:0x2b888566,eax
  40f00d:	jbe    0x40efe1
  40f00f:	lods   eax,DWORD PTR ds:[esi]
  40f010:	or     eax,0x1707c84e
  40f015:	pop    ss
  40f016:	aaa    
  40f017:	(bad)  
  40f018:	out    0x3d,al
  40f01a:	mov    ss,WORD PTR [edi+0x54]
  40f01d:	fnstcw WORD PTR [esi-0x235b3846]
  40f023:	out    dx,al
  40f024:	push   eax
  40f025:	data16 fcom DWORD PTR [ecx-0x3fc41194]
  40f02c:	call   0x8cc0:0xcafbec6b
  40f033:	lock arpl WORD PTR [edi],sp
  40f036:	push   ebp
  40f037:	cld    
  40f038:	scas   eax,DWORD PTR es:[edi]
  40f039:	jge    0x40f069
  40f03b:	outs   dx,BYTE PTR ds:[esi]
  40f03c:	int    0x7d
  40f03e:	mov    edi,0xe8b10ad
  40f043:	aaa    
  40f044:	sbb    eax,0x940cff4d
  40f049:	ss jno 0x40f0a2
  40f04c:	mov    ah,0xc5
  40f04e:	pop    ecx
  40f04f:	jne    0x40f05a
  40f051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f052:	or     DWORD PTR [ecx+edx*4],edi
  40f055:	(bad)  
  40f056:	sti    
  40f057:	xchg   bh,ah
  40f059:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f05a:	and    BYTE PTR ds:0xf24b39e7,bh
  40f060:	cmp    DWORD PTR [ebx],ecx
  40f062:	nop
  40f063:	xor    ah,dl
  40f065:	mov    eax,0x642b5b76
  40f06a:	dec    ecx
  40f06b:	(bad)  
  40f06c:	fs cli 
  40f06e:	inc    eax
  40f06f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f070:	test   esi,0xeb09ed2c
  40f076:	mov    al,ds:0xb02a0d0c
  40f07b:	ret    0x0
	...
  40f0be:	add    ah,ch
  40f0c0:	ss ins BYTE PTR es:[edi],dx
  40f0c2:	or     esi,edi
  40f0c4:	pop    ebx
  40f0c5:	in     eax,dx
  40f0c6:	test   DWORD PTR [edi-0x26],0x61ac9ed2
  40f0cd:	jg     0x40f073
  40f0cf:	sub    edi,esi
  40f0d1:	add    BYTE PTR [eax],al
  40f0d3:	and    eax,0x83000007
  40f0d8:	cmp    eax,0x819e81fd
  40f0dd:	js     0x40f0db
  40f0df:	(bad)  
  40f0e0:	push   eax
  40f0e1:	pop    ebx
  40f0e2:	loopne 0x40f109
  40f0e4:	inc    esi
  40f0e5:	gs out 0x8a,al
  40f0e8:	mov    ch,0xd2
  40f0ea:	mov    eax,ds:0x9a6a2937
  40f0ef:	popf   
  40f0f0:	in     eax,dx
  40f0f1:	lea    ebx,[esi+0x56]
  40f0f4:	pop    esi
  40f0f5:	std    
  40f0f6:	popf   
  40f0f7:	sub    BYTE PTR [ebp-0x1f90f79c],dl
  40f0fd:	mov    ds:0x7f4855a3,al
  40f102:	retf   
  40f103:	dec    esp
  40f104:	mov    al,0x9
  40f106:	sub    ecx,edi
  40f108:	pop    esi
  40f109:	int3   
  40f10a:	stc    
  40f10b:	in     eax,0x8b
  40f10d:	mov    ebp,gs
  40f10f:	dec    eax
  40f110:	or     DWORD PTR [ebx+0x6d],edi
  40f113:	fisttp QWORD PTR [edx]
  40f115:	mov    bl,0x26
  40f117:	or     BYTE PTR [edi-0x2e],0xd2
  40f11b:	sub    BYTE PTR [esp+edi*1+0x2e7183a2],dh
  40f122:	push   edi
  40f123:	test   ebx,edi
  40f125:	adc    bl,BYTE PTR [edx-0x4efc25a7]
  40f12b:	pop    ds
  40f12c:	je     0x40f169
  40f12e:	aas    
  40f12f:	cmp    al,0x42
  40f131:	(bad)  
  40f133:	in     al,0x9c
  40f135:	mov    edi,DWORD PTR [edi-0x1]
  40f138:	mov    bh,0x96
  40f13a:	into   
  40f13b:	arpl   WORD PTR [esi+0x7281134c],bp
  40f141:	call   edx
  40f143:	sbb    ebp,DWORD PTR [edi-0x49]
  40f146:	cmc    
  40f147:	and    BYTE PTR [eax],bl
  40f149:	mov    ah,0xf3
  40f14b:	mov    bh,0x8e
  40f14d:	jns    0x40f0d2
  40f14f:	out    0x5e,eax
  40f151:	sar    dl,1
  40f153:	push   esp
  40f154:	adc    bh,dh
  40f156:	xor    BYTE PTR [edx+0x462a3003],ah
  40f15c:	ror    ecx,1
  40f15e:	test   DWORD PTR [edi+0x52],edi
  40f161:	scas   eax,DWORD PTR es:[edi]
  40f162:	std    
  40f163:	mov    ds:0x44a3838b,eax
  40f168:	sub    DWORD PTR [ebp+0x3ec34920],ecx
  40f16e:	jecxz  0x40f18e
  40f170:	mov    ebx,0x1017a783
  40f175:	or     eax,DWORD PTR [eax]
  40f177:	jp     0x40f1d5
  40f179:	sar    BYTE PTR [esi-0x795743e7],cl
  40f17f:	mov    ah,0xe9
  40f181:	hlt    
  40f182:	bound  esp,QWORD PTR [ebx-0x8]
  40f185:	adc    ch,cl
  40f187:	push   ds
  40f188:	mov    edx,0xef3aa06b
  40f18d:	dec    edi
  40f18e:	jbe    0x40f19d
  40f190:	gs sbb al,0x7a
  40f193:	sub    BYTE PTR [ebx+0x3e],al
  40f196:	push   ds
  40f197:	add    edx,DWORD PTR cs:[edx-0x6b]
  40f19b:	in     eax,0x7c
  40f19d:	jecxz  0x40f148
  40f19f:	cmp    cl,BYTE PTR [edx-0x3dcb98dd]
  40f1a5:	into   
  40f1a6:	jl     0x40f220
  40f1a8:	xchg   ecx,eax
  40f1a9:	sahf   
  40f1aa:	pop    esp
  40f1ab:	pusha  
  40f1ac:	repz add DWORD PTR [edi],ebp
  40f1af:	jge    0x40f17b
  40f1b1:	(bad)  
  40f1b2:	(bad)  
  40f1b3:	cwde   
  40f1b4:	push   esi
  40f1b5:	(bad)  
  40f1b6:	pop    esi
  40f1b7:	shr    BYTE PTR [ecx+0x7a],1
  40f1ba:	hlt    
  40f1bb:	imul   ecx,DWORD PTR [eax+edi*1+0x3eaded6f],0x32
  40f1c3:	adc    DWORD PTR [ecx],0x77
  40f1c6:	mov    eax,ds:0x94c05b14
  40f1cb:	inc    esp
  40f1cc:	cdq    
  40f1cd:	cwde   
  40f1ce:	fucom  st(4)
  40f1d0:	in     eax,dx
  40f1d1:	jo     0x40f185
  40f1d3:	cdq    
  40f1d4:	test   DWORD PTR [esi+0x60],0x7dfb69e3
  40f1db:	aad    0xaf
  40f1dd:	mov    al,BYTE PTR [edi+0x64c2ed39]
  40f1e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1e4:	mov    dl,0x32
  40f1e6:	retf   
  40f1e7:	out    dx,al
  40f1e8:	fisubr DWORD PTR [ebp+0x52]
  40f1eb:	(bad)  
  40f1ed:	bound  edx,QWORD PTR [ebx]
  40f1ef:	cmp    bl,BYTE PTR [esi]
  40f1f1:	pop    ds
  40f1f2:	sbb    al,dh
  40f1f4:	and    di,dx
  40f1f7:	or     BYTE PTR [ecx-0x343fd334],al
  40f1fd:	sub    ebp,DWORD PTR [esi]
  40f1ff:	fidiv  WORD PTR [ecx-0x171d073b]
  40f205:	in     eax,dx
  40f206:	push   ss
  40f207:	bound  ecx,QWORD PTR [ebx]
  40f209:	popa   
  40f20a:	loop   0x40f284
  40f20c:	scas   eax,DWORD PTR es:[edi]
  40f20d:	cmp    ebx,esp
  40f20f:	leave  
  40f210:	lds    ebp,FWORD PTR [ebp-0x3fa9eb37]
  40f216:	xor    ecx,DWORD PTR [ecx-0x45]
  40f219:	test   al,0xe4
  40f21b:	mov    eax,ds:0x385e66b6
  40f220:	mov    al,ds:0x6861079
  40f225:	inc    edi
  40f226:	sbb    DWORD PTR [esi],edi
  40f228:	and    edi,DWORD PTR [eax-0x56]
  40f22b:	(bad)  [eax]
  40f22d:	mov    ebp,0x430c6a2
  40f232:	add    DWORD PTR [ebp-0x18c2ebb0],eax
  40f238:	sub    DWORD PTR [edi],ebp
  40f23a:	inc    eax
  40f23b:	push   eax
  40f23c:	std    
  40f23d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f23e:	enter  0xdf51,0x1c
  40f242:	push   ebp
  40f243:	jbe    0x40f259
  40f245:	lock push ecx
  40f247:	inc    esp
  40f248:	sbb    al,0xf
  40f24a:	mov    ds:0x1c563e58,al
  40f24f:	call   0x440d:0xcaa70ce9
  40f256:	pop    edi
  40f257:	aas    
  40f258:	or     al,0x5c
  40f25a:	mov    esi,0x79b86475
  40f25f:	pop    ebp
  40f260:	xor    al,0x3b
  40f262:	pop    es
  40f263:	push   ecx
  40f264:	cld    
  40f265:	push   cs
  40f266:	dec    esp
  40f267:	xchg   ebp,eax
  40f268:	cmp    al,0x64
  40f26a:	or     eax,0xfbd0c723
  40f26f:	cld    
  40f270:	ror    BYTE PTR ds:0x2517e12e,cl
  40f276:	bound  ecx,QWORD PTR [edx+0x43a2133]
  40f27c:	push   eax
  40f27d:	clc    
  40f27e:	repnz or dx,si
  40f282:	fdiv   DWORD PTR [ecx]
  40f284:	in     eax,0x8
  40f286:	daa    
  40f287:	sub    ch,BYTE PTR [ebp+0x24]
  40f28a:	xchg   esi,eax
  40f28b:	out    0x9d,eax
  40f28d:	(bad)  
  40f28e:	nop
  40f28f:	popa   
  40f290:	dec    ecx
  40f291:	ins    BYTE PTR es:[edi],dx
  40f292:	shl    edx,1
  40f294:	jo     0x40f27f
  40f296:	cmp    bh,bh
  40f298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f299:	sahf   
  40f29a:	cwde   
  40f29b:	dec    edx
  40f29c:	fcom   st(6)
  40f29e:	lods   al,BYTE PTR ds:[esi]
  40f29f:	dec    esp
  40f2a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2a1:	retf   0xfabb
  40f2a4:	adc    DWORD PTR [edi-0x64ea29c2],ebx
  40f2aa:	cmp    DWORD PTR [ebx+0x54330b9a],0x6678a0c8
  40f2b4:	ins    BYTE PTR es:[edi],dx
  40f2b5:	loopne 0x40f2da
  40f2b7:	pushf  
  40f2b8:	jp     0x40f2d8
  40f2ba:	or     al,0xe4
  40f2bc:	add    DWORD PTR [eax+0x7f55b9f4],0xffffffb5
  40f2c3:	cli    
  40f2c4:	xchg   BYTE PTR [esi-0x51055a2b],ah
  40f2ca:	and    DWORD PTR ds:0x91d734b6,ebx
  40f2d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2d1:	jecxz  0x40f350
  40f2d3:	pop    ds
  40f2d4:	push   ss
  40f2d5:	push   0x2dfbfa52
  40f2da:	dec    edx
  40f2db:	jae    0x40f31f
  40f2dd:	xchg   DWORD PTR [eax+0x28ea2419],edx
  40f2e3:	sbb    esi,DWORD PTR [edi+0x3d7d0a1d]
  40f2e9:	test   DWORD PTR [esi],esp
  40f2eb:	fld    TBYTE PTR [edx+0x52]
  40f2ee:	les    edx,FWORD PTR [ebx-0x47]
  40f2f1:	mov    DWORD PTR [ebp+0x57],ecx
  40f2f4:	dec    edx
  40f2f5:	shl    edi,0xb6
  40f2f8:	dec    esp
  40f2f9:	inc    esp
  40f2fa:	pop    ds
  40f2fb:	out    dx,eax
  40f2fc:	retf   
  40f2fd:	stc    
  40f2fe:	pushf  
  40f2ff:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f301:	aas    
  40f302:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40f304:	jo     0x40f2b4
  40f306:	aas    
  40f307:	aam    0x6
  40f309:	popf   
  40f30a:	mov    ecx,0x693bfda1
  40f30f:	sbb    al,0xa9
  40f311:	mov    WORD PTR ds:0x220dd161,?
  40f317:	cmp    dl,BYTE PTR [ecx+0x434f1a01]
  40f31d:	aad    0x4
  40f31f:	or     DWORD PTR [edx],ebp
  40f321:	jo     0x40f326
  40f323:	push   edi
  40f324:	inc    esp
  40f325:	sub    esi,eax
  40f327:	sub    BYTE PTR [ecx],bh
  40f329:	test   BYTE PTR [edx+0x78],0x56
  40f32d:	hlt    
  40f32e:	mov    ds:0xfd37a724,al
  40f333:	jae    0x40f373
  40f335:	stos   BYTE PTR es:[edi],al
  40f336:	mov    ebx,0xad714461
  40f33b:	dec    ecx
  40f33c:	sub    BYTE PTR [edi+0x65d96644],0xcb
  40f343:	aad    0xbd
  40f345:	lds    eax,FWORD PTR [edi+0x1dd26a0b]
  40f34b:	dec    ebx
  40f34c:	pop    esp
  40f34d:	in     eax,0x76
  40f34f:	sub    BYTE PTR [edi],ch
  40f351:	sbb    BYTE PTR [esi-0x7ef78036],ah
  40f357:	mov    al,0xfa
  40f359:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40f35b:	cdq    
  40f35c:	ror    esp,0xa3
  40f35f:	cmp    bh,BYTE PTR [ecx+0x41]
  40f362:	popa   
  40f363:	push   ds
  40f364:	test   bh,cl
  40f366:	loope  0x40f324
  40f368:	scas   eax,DWORD PTR es:[edi]
  40f369:	out    0xe7,al
  40f36b:	jmp    0xa490f9c4
  40f370:	mov    ds:0xc03143a2,al
  40f375:	ja     0x40f3e3
  40f377:	xor    dh,BYTE PTR [esi+ebp*2+0x2d0d93d0]
  40f37e:	data16 jnp 0x40f33c
  40f381:	or     BYTE PTR ds:[ebp-0x2c],dh
  40f385:	test   al,0x25
  40f387:	mov    ds:0x18fba834,eax
  40f38c:	imul   BYTE PTR [edi-0x632c2e6]
  40f392:	dec    ebx
  40f393:	mov    bh,BYTE PTR [ebx+0x32]
  40f396:	ror    ch,0x3c
  40f399:	push   esi
  40f39a:	fdivp  st(0),st
  40f39c:	dec    ebx
  40f39d:	adc    dl,ah
  40f39f:	rcr    DWORD PTR [ecx+0x1a],0xbb
  40f3a3:	(bad)  
  40f3a5:	lea    edi,[ecx]
  40f3a7:	pop    es
  40f3a8:	mov    edi,DWORD PTR [edi+0x53]
  40f3ab:	stos   BYTE PTR es:[edi],al
  40f3ac:	les    ebx,FWORD PTR [eax+0x64]
  40f3af:	cmp    eax,0xa6668c48
  40f3b4:	(bad)  [esi-0x67]
  40f3b7:	xchg   ecx,eax
  40f3b8:	(bad)
  40f3bb:	in     eax,0x46
  40f3bd:	vmulss xmm0,xmm2,DWORD PTR [ebx-0x168a44ab]
  40f3c5:	in     al,0x26
  40f3c7:	pop    ss
  40f3c8:	xor    DWORD PTR [edi-0x5bb33d52],0x2
  40f3cf:	adc    eax,0x93ee28b0
  40f3d4:	add    eax,0xa25aaceb
  40f3d9:	cld    
  40f3da:	xor    al,0xc6
  40f3dc:	push   edx
  40f3dd:	mov    esp,0xd27064b2
  40f3e2:	mov    ebx,0xbfce9539
  40f3e7:	call   0xecf69015
  40f3ec:	outs   dx,BYTE PTR ds:[esi]
  40f3ed:	jmp    0x40f432
  40f3ef:	gs int3 
  40f3f1:	ret    
  40f3f2:	sbb    bh,BYTE PTR [ebx]
  40f3f4:	add    bl,BYTE PTR [edx-0x15]
  40f3f7:	jae    0x40f432
  40f3f9:	lods   al,BYTE PTR ds:[esi]
  40f3fa:	call   DWORD PTR [esi+0x42b2f857]
  40f400:	aad    0xc0
  40f402:	push   es
  40f403:	sub    al,0xff
  40f405:	arpl   WORD PTR es:[ecx],cx
  40f408:	sbb    DWORD PTR [esi+ebx*2+0x7f485168],esi
  40f40f:	mov    cs,WORD PTR [esi-0x37]
  40f412:	leave  
  40f413:	push   DWORD PTR [edx]
  40f415:	jnp    0x40f437
  40f417:	and    ecx,edx
  40f419:	lds    ebp,FWORD PTR [ebx]
  40f41b:	jb     0x40f478
  40f41d:	sbb    al,0x5a
  40f41f:	push   ds
  40f420:	in     al,dx
  40f421:	leave  
  40f422:	inc    ecx
  40f423:	mov    al,ds:0x91e76c8a
  40f428:	adc    ah,dh
  40f42a:	cwde   
  40f42b:	enter  0xb802,0xd9
  40f42f:	jg     0x40f4a3
  40f431:	adc    al,0x6e
  40f433:	push   0xe53873e0
  40f438:	pop    eax
  40f439:	mov    ds:0x99fb51fe,al
  40f43e:	call   0x510463ab
  40f443:	mov    edx,0xfde08ab7
  40f448:	jg     0x40f48f
  40f44a:	addr16 mov al,0xff
  40f44d:	in     eax,0x4c
  40f44f:	popf   
  40f450:	push   0x430af581
  40f455:	call   0x56b8:0xeff0fbe6
  40f45c:	jb     0x40f410
  40f45e:	add    al,0x3e
  40f460:	retf   
  40f461:	cwde   
  40f462:	out    0x3f,al
  40f464:	mov    DWORD PTR [ebx+0x5b],ebx
  40f467:	repnz loope 0x40f3fd
  40f46a:	je     0x40f4be
  40f46c:	sahf   
  40f46d:	adc    al,0x15
  40f46f:	adc    ecx,DWORD PTR [eax-0x2256fc29]
  40f475:	push   edi
  40f476:	jmp    0xb75c6516
  40f47b:	sub    eax,0xb55f6145
  40f480:	or     edi,0x202c5caa
  40f486:	cdq    
  40f487:	xchg   esp,eax
  40f488:	sbb    al,ah
  40f48a:	xchg   ebx,eax
  40f48b:	and    ch,BYTE PTR [edi]
  40f48d:	mov    ebp,0x7359bd37
  40f492:	mov    esi,0xf845b2be
  40f497:	(bad)  
  40f498:	out    dx,al
  40f499:	jl     0x40f495
  40f49b:	cmp    BYTE PTR [eax+0x75b5037f],ch
  40f4a1:	ror    DWORD PTR ds:0x8bfed6aa,0x70
  40f4a8:	xor    dh,BYTE PTR [edx-0x434ff1af]
  40f4ae:	sbb    al,0x6
  40f4b0:	adc    BYTE PTR [eax+0x1f47c19b],bh
  40f4b6:	lahf   
  40f4b7:	call   0x41cd59bc
  40f4bc:	test   DWORD PTR [esi+0xf4d3d22],0xee5b9007
  40f4c6:	pushf  
  40f4c7:	out    dx,al
  40f4c8:	arpl   WORD PTR [esi],dx
  40f4ca:	stc    
  40f4cb:	mov    ah,0x74
  40f4cd:	xchg   edx,eax
  40f4ce:	retf   0x7c14
  40f4d1:	imul   ebp,DWORD PTR [eax],0xac62400
  40f4d7:	dec    edi
  40f4d8:	xor    eax,0x5037e2a8
  40f4dd:	mov    BYTE PTR [bx],dh
  40f4e0:	pop    ecx
  40f4e1:	jl     0x40f4ff
  40f4e3:	imul   ebx,DWORD PTR [edx+0x5d],0x55b26480
  40f4ea:	jp     0x40f477
  40f4ec:	out    0x54,eax
  40f4ee:	jecxz  0x40f559
  40f4f0:	jle    0x40f516
  40f4f2:	les    ebp,FWORD PTR [ebp+0x61]
  40f4f5:	push   edi
  40f4f6:	push   edx
  40f4f7:	fisttp QWORD PTR [esp+eax*4-0x19aa11c3]
  40f4fe:	call   0x97fc:0xad86ce
  40f505:	sbb    BYTE PTR [ecx+ebp*8-0x5e5f38fc],ch
  40f50c:	mov    ah,0x90
  40f50e:	(bad)  
  40f510:	and    ch,BYTE PTR ds:0x2bdc64e2
  40f516:	mov    ebp,0xd9534dff
  40f51b:	inc    edx
  40f51c:	xor    BYTE PTR [eax],dh
  40f51e:	pop    ebx
  40f51f:	dec    ecx
  40f520:	ret    
  40f521:	stos   BYTE PTR es:[edi],al
  40f522:	push   cs
  40f523:	nop
  40f524:	fcom   QWORD PTR [ebx]
  40f526:	nop
  40f527:	inc    eax
  40f528:	test   al,0xbf
  40f52a:	ds (bad) 
  40f52c:	mov    ch,0x4f
  40f52e:	mov    ch,BYTE PTR [edi-0x2c9393ec]
  40f534:	or     DWORD PTR [eax-0x4a99db42],ecx
  40f53a:	jle    0x40f519
  40f53c:	inc    ebp
  40f53d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f53e:	jae    0x40f53e
  40f540:	adc    BYTE PTR [esi],0x6
  40f543:	test   al,0xda
  40f545:	add    bl,al
  40f547:	int    0x8c
  40f549:	out    0xd,eax
  40f54b:	cmc    
  40f54c:	in     eax,dx
  40f54d:	xchg   ecx,eax
  40f54e:	mov    esi,0xeadc99ad
  40f553:	inc    ebx
  40f554:	js     0x40f5a2
  40f556:	scas   eax,DWORD PTR es:[edi]
  40f557:	es push esp
  40f559:	mov    ah,BYTE PTR [edx+0x63]
  40f55c:	jmp    0xf894c756
  40f561:	cmp    al,0x9e
  40f563:	push   ecx
  40f564:	mov    dl,0xe
  40f566:	or     dh,BYTE PTR [edi+0x21caac5b]
  40f56c:	pusha  
  40f56d:	rep ins BYTE PTR es:[edi],dx
  40f56f:	out    dx,eax
  40f570:	cmp    DWORD PTR [ebp-0x6d],eax
  40f573:	pop    edi
  40f574:	adc    eax,ebp
  40f576:	push   ds
  40f577:	cmp    al,0x92
  40f579:	ret    0x1df2
  40f57c:	inc    ebx
  40f57d:	pop    eax
  40f57e:	pop    esi
  40f57f:	repz loop 0x40f58b
  40f582:	add    al,0xd3
  40f584:	fnstcw WORD PTR [esi+edx*4]
  40f587:	fadd   st(3),st
  40f589:	mov    ebx,edi
  40f58b:	pushf  
  40f58c:	push   esi
  40f58d:	js     0x40f519
  40f58f:	repz jmp 0x4354:0x8b73dc6f
  40f597:	xchg   BYTE PTR [ecx],ah
  40f599:	mov    ebx,0xa4b6fd1e
  40f59e:	imul   esi,DWORD PTR [ecx-0x29],0x3b794f94
  40f5a5:	and    DWORD PTR [ebx-0x22],edi
  40f5a8:	jno    0x40f5e8
  40f5aa:	inc    eax
  40f5ab:	gs loope 0x40f5c5
  40f5ae:	sbb    esi,DWORD PTR [edx-0x46]
  40f5b1:	mov    ds:0xa163d53b,eax
  40f5b6:	mov    ds:0x3b42c356,eax
  40f5bb:	cmp    esi,DWORD PTR ds:0x423d26f7
  40f5c1:	and    al,0x8a
  40f5c3:	xor    DWORD PTR [edx+0x1f],0xffffff94
  40f5c7:	push   0x3209e91f
  40f5cc:	repnz rcl bh,0x60
  40f5d0:	pop    ds
  40f5d1:	and    bl,BYTE PTR [ecx]
  40f5d3:	shl    cl,cl
  40f5d5:	dec    ecx
  40f5d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5d7:	xor    ah,BYTE PTR [edx-0x75e4bd41]
  40f5dd:	mov    bh,0xd
  40f5df:	shr    DWORD PTR [edi],0x7f
  40f5e2:	mov    ds:0xb573fe23,eax
  40f5e7:	jo     0x40f5bb
  40f5e9:	hlt    
  40f5ea:	clc    
  40f5eb:	test   eax,0x97ab91e2
  40f5f0:	lock ds pushf 
  40f5f3:	mov    ebp,0x8e914a50
  40f5f8:	stos   BYTE PTR es:[edi],al
  40f5f9:	leave  
  40f5fa:	rcl    DWORD PTR [ecx-0x1a],cl
  40f5fd:	or     al,0xf7
  40f5ff:	and    ebp,DWORD PTR [ecx+0x4bda47f9]
  40f605:	fld    DWORD PTR [esi+0x4b]
  40f608:	xchg   ecx,eax
  40f609:	bound  eax,QWORD PTR [ecx+ebp*2-0x3b]
  40f60d:	jle    0x40f622
  40f60f:	or     DWORD PTR [edx],esi
  40f611:	jg     0x40f665
  40f613:	pop    ebp
  40f614:	pop    edi
  40f615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f616:	sbb    eax,DWORD PTR [ebp-0xbb156ec]
  40f61c:	pop    esi
  40f61d:	pop    esi
  40f61e:	cmp    bh,BYTE PTR [esi-0x9df05c3]
  40f624:	and    al,0x67
  40f626:	repz mov edx,0xff517eaf
  40f62c:	outs   dx,BYTE PTR ds:[esi]
  40f62d:	mov    dl,0x2
  40f62f:	or     DWORD PTR [edi],esi
  40f631:	(bad)  
  40f632:	in     al,0x91
  40f634:	xor    esi,edi
  40f636:	push   esi
  40f637:	dec    ecx
  40f638:	addr16 lock ret 0x3b87
  40f63d:	imul   edi
  40f63f:	adc    al,0x71
  40f641:	mov    es,WORD PTR [ebp-0xd]
  40f644:	inc    edi
  40f645:	jnp    0x40f65d
  40f647:	pop    edi
  40f648:	push   cs
  40f649:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f64a:	shl    DWORD PTR [esi+0xa97169c],cl
  40f650:	cmp    al,0xe0
  40f652:	jle    0x40f5d6
  40f654:	and    eax,DWORD PTR [esi+esi*1]
  40f657:	aad    0x9a
  40f659:	xor    DWORD PTR ds:0x9d0c2f99,esp
  40f65f:	xor    edx,edi
  40f661:	pusha  
  40f662:	and    ah,BYTE PTR ds:0xe6acee88
  40f668:	pop    esp
  40f669:	and    eax,0x52773bf3
  40f66e:	sub    al,cl
  40f670:	ja     0x40f5f2
  40f672:	jne    0x40f61a
  40f674:	loopne 0x40f636
  40f676:	cvtps2pi mm6,QWORD PTR ds:0x384939fb
  40f67d:	pushf  
  40f67e:	mov    edx,0x59b68bb2
  40f683:	mov    ?,WORD PTR [edi]
  40f685:	sti    
  40f686:	mov    cl,0xb4
  40f688:	inc    edx
  40f689:	xchg   DWORD PTR [edx],ebp
  40f68b:	neg    DWORD PTR [eax-0x5c]
  40f68e:	inc    eax
  40f68f:	sbb    esp,DWORD PTR [esi+ebx*4]
  40f692:	adc    bl,BYTE PTR [edi+0x48]
  40f695:	adc    al,0xbe
  40f697:	inc    esp
  40f698:	xlat   BYTE PTR ds:[ebx]
  40f699:	add    bl,BYTE PTR ss:0x93793494
  40f6a0:	inc    edx
  40f6a1:	pop    esp
  40f6a2:	cmp    ebx,DWORD PTR [ecx+0x77]
  40f6a5:	adc    ch,BYTE PTR [ecx+0x9]
  40f6a8:	lods   al,BYTE PTR ds:[esi]
  40f6a9:	int    0xf0
  40f6ab:	shl    DWORD PTR [ecx+0x611f0ced],0x9b
  40f6b2:	dec    ebx
  40f6b3:	(bad)  
  40f6b5:	fidiv  WORD PTR [edi]
  40f6b7:	repz retf 0x957a
  40f6bb:	mov    DWORD PTR [edi-0x151987c5],ebx
  40f6c1:	dec    ebx
  40f6c2:	cdq    
  40f6c3:	repnz mov eax,0x570961c8
  40f6c9:	mov    al,ds:0xcce00b19
  40f6ce:	pop    edx
  40f6cf:	mov    bl,0x42
  40f6d1:	es jecxz 0x40f669
  40f6d4:	mov    edx,0x6d5eb7e0
  40f6d9:	test   al,0xf
  40f6db:	cmp    BYTE PTR [ecx-0x40],bl
  40f6de:	pushf  
  40f6df:	xchg   esi,eax
  40f6e0:	push   esp
  40f6e1:	pop    ss
  40f6e2:	lahf   
  40f6e3:	xor    BYTE PTR [ebp+0x7a],dl
  40f6e6:	jge    0x40f74f
  40f6e8:	retf   0xcebf
  40f6eb:	pusha  
  40f6ec:	push   eax
  40f6ed:	mov    eax,0x2476a333
  40f6f2:	pop    ebp
  40f6f3:	lea    ebp,[esi+0x30]
  40f6f6:	out    0x2c,eax
  40f6f8:	mov    esi,0x27888231
  40f6fd:	pop    ds
  40f6fe:	inc    esi
  40f6ff:	mov    DWORD PTR [eax+0x215cab00],ebp
  40f705:	mov    DWORD PTR [ecx],ebp
  40f707:	push   0x5208c70a
  40f70c:	ss daa 
  40f70e:	mov    ebp,0x92d51ddf
  40f714:	jl     0x40f768
  40f716:	test   al,0xf8
  40f718:	scas   eax,DWORD PTR es:[edi]
  40f719:	js     0x40f6af
  40f71b:	into   
  40f71c:	test   esi,eax
  40f71e:	nop
  40f71f:	xchg   edx,eax
  40f720:	mov    al,0x41
  40f722:	(bad)  
  40f723:	mov    bl,0xe3
  40f725:	add    ebx,esp
  40f727:	ror    BYTE PTR [ebp-0x7a],cl
  40f72a:	ret    
  40f72b:	repnz (bad) 
  40f72d:	xchg   ebp,eax
  40f72e:	test   eax,0xf3e6e978
  40f733:	mov    ch,0xba
  40f735:	pop    ds
  40f736:	lock mov ss,WORD PTR [esi-0x46f6c508]
  40f73d:	nop
  40f73e:	or     al,0x35
  40f740:	mov    ebx,0xb9f10a17
  40f745:	imul   dx,WORD PTR [edi+0x2e],0x6b
  40f74a:	jno    0x40f708
  40f74c:	xchg   esp,eax
  40f74d:	mov    ebx,0x6e3bc2cf
  40f752:	dec    esi
  40f753:	jae    0x40f7b8
  40f755:	and    ecx,ebp
  40f757:	jne    0x40f793
  40f759:	pushf  
  40f75a:	push   esp
  40f75b:	aaa    
  40f75c:	and    DWORD PTR ds:0x6f790120,0x2c5a0180
  40f766:	push   0x4e91043e
  40f76b:	mov    ds:0x99666ecd,eax
  40f770:	fnsave [eax-0x5f]
  40f773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f774:	adc    al,bh
  40f776:	dec    ebp
  40f777:	fld    TBYTE PTR [ebx+0x5ca670cc]
  40f77d:	shr    BYTE PTR ds:[ebx-0x2afbff82],0x37
  40f785:	int3   
  40f786:	sbb    esi,ecx
  40f788:	and    ecx,DWORD PTR [ebx+0x1c]
  40f78b:	cmp    edx,DWORD PTR [ebx]
  40f78d:	or     al,0xa5
  40f78f:	cs mov bl,0x63
  40f792:	pop    eax
  40f793:	mov    ds:0xb38db0ed,al
  40f798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f799:	adc    al,0x2f
  40f79b:	outs   dx,BYTE PTR ds:[esi]
  40f79c:	cmp    ch,dh
  40f79e:	and    bh,BYTE PTR [edx+0x1a]
  40f7a1:	add    DWORD PTR [eax-0x5b223c7e],edi
  40f7a7:	jnp    0x40f7b3
  40f7a9:	sub    ebp,ebp
  40f7ab:	pop    ecx
  40f7ac:	nop
  40f7ad:	mov    al,0x29
  40f7af:	scas   eax,DWORD PTR es:[edi]
  40f7b0:	pop    ecx
  40f7b1:	jo     0xe84af4a7
  40f7b7:	sub    DWORD PTR [ecx-0x57],edi
  40f7ba:	int    0x16
  40f7bc:	push   ebp
  40f7bd:	aad    0xdb
  40f7bf:	jge    0x40f783
  40f7c1:	jbe    0x40f7ba
  40f7c3:	add    bl,bh
  40f7c5:	mov    esi,0x983f996f
  40f7ca:	scas   al,BYTE PTR es:[edi]
  40f7cb:	mov    dl,0x30
  40f7cd:	test   DWORD PTR [edx-0x5d38e4c3],ebx
  40f7d3:	loopne 0x40f7e6
  40f7d5:	jb     0x40f7e7
  40f7d7:	sub    eax,0x63e4846a
  40f7dc:	out    dx,eax
  40f7dd:	js     0x40f760
  40f7df:	adc    BYTE PTR [eax+0x24],bh
  40f7e2:	pop    ecx
  40f7e3:	mov    bl,0x11
  40f7e5:	jno    0x40f798
  40f7e7:	cdq    
  40f7e8:	adc    DWORD PTR [ecx+0x7b3262df],esp
  40f7ee:	ins    BYTE PTR es:[edi],dx
  40f7ef:	(bad)
  40f7f2:	(bad)  
  40f7f4:	cmp    BYTE PTR [eax-0x57],0x8d
  40f7f8:	add    ebx,DWORD PTR [edx+ebx*4+0x2d]
	...
  40f83f:	adc    DWORD PTR [ebp-0x1caa2],esp
  40f845:	jnp    0x40f7ec
  40f847:	int    0xa1
  40f849:	ficom  WORD PTR [esi+ecx*8-0x1c]
  40f84d:	inc    edx
  40f84e:	ins    BYTE PTR es:[edi],dx
  40f84f:	dec    esi
  40f850:	inc    BYTE PTR [eax]
  40f852:	add    BYTE PTR ds:0x5000007,ah
  40f858:	jmp    0xd1f877d1
  40f85d:	sbb    ebp,DWORD PTR cs:[edi+ebx*1]
  40f861:	mov    bl,0x8d
  40f863:	add    eax,0x5cee8763
  40f868:	pop    ebx
  40f869:	fld    DWORD PTR [esi+0x7c503c79]
  40f86f:	lahf   
  40f870:	push   ecx
  40f871:	outs   dx,DWORD PTR es:[esi]
  40f873:	ja     0x40f8ca
  40f875:	arpl   WORD PTR [edi],sp
  40f877:	inc    esp
  40f878:	sahf   
  40f879:	inc    esp
  40f87a:	lock (bad) 
  40f87c:	call   0x1f1b3af
  40f881:	lock std 
  40f883:	jo     0x40f8a5
  40f885:	push   eax
  40f886:	pop    ss
  40f887:	jns    0x40f814
  40f889:	fsubr  QWORD PTR [esi-0x64a341ea]
  40f88f:	frstor [edi]
  40f892:	data16 jge 0x40f839
  40f895:	sbb    BYTE PTR [esp+ebx*8+0x20],bh
  40f899:	rcr    ah,0x3f
  40f89c:	div    DWORD PTR [ecx]
  40f89e:	xchg   ecx,eax
  40f89f:	jg     0x40f831
  40f8a1:	into   
  40f8a2:	je     0x40f859
  40f8a4:	aaa    
  40f8a5:	sub    edi,DWORD PTR [eax+0x6fe0dde4]
  40f8ab:	les    ebp,FWORD PTR [esi]
  40f8ad:	sar    BYTE PTR [ecx+0x68],0x88
  40f8b1:	dec    edi
  40f8b2:	ins    DWORD PTR es:[edi],dx
  40f8b3:	test   DWORD PTR [esi-0x5c],ecx
  40f8b6:	retf   
  40f8b7:	shl    BYTE PTR [edx-0x38],cl
  40f8ba:	and    esp,ebx
  40f8bc:	mov    eax,0xb0f7a73
  40f8c1:	add    esi,DWORD PTR ds:[edi-0x5a]
  40f8c5:	push   ebp
  40f8c6:	add    BYTE PTR [edi-0x5d],bh
  40f8c9:	lods   al,BYTE PTR ds:[esi]
  40f8ca:	imul   ebp,DWORD PTR [edx+0x2c],0x95dd63fc
  40f8d1:	adc    edi,DWORD PTR [edi+esi*4]
  40f8d4:	dec    ebp
  40f8d5:	scas   eax,DWORD PTR es:[edi]
  40f8d6:	int    0xe1
  40f8d8:	std    
  40f8d9:	loop   0x40f942
  40f8db:	fdivr  st(0),st
  40f8dd:	loop   0x40f89c
  40f8df:	je     0x40f88d
  40f8e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8e2:	aad    0x2e
  40f8e4:	aas    
  40f8e5:	(bad)  
  40f8e6:	sbb    eax,0xcf546f9e
  40f8eb:	in     al,0x86
  40f8ed:	xchg   esi,eax
  40f8ee:	nop
  40f8ef:	bound  ebx,QWORD PTR [edi+edi*1-0xe]
  40f8f3:	xchg   esp,eax
  40f8f4:	repnz mov ch,0xa2
  40f8f7:	jbe    0x40f93e
  40f8f9:	mov    ds,ebp
  40f8fb:	pop    esi
  40f8fc:	(bad)  
  40f8fd:	pop    edx
  40f8fe:	adc    eax,0x241cfac
  40f903:	jb     0x40f945
  40f905:	xor    DWORD PTR [eax-0x53],eax
  40f908:	ret    0xbc42
  40f90b:	mov    ds:0xadf0966e,eax
  40f910:	push   0x48
  40f912:	ds push ss
  40f914:	lahf   
  40f915:	cld    
  40f916:	inc    edi
  40f917:	in     al,dx
  40f918:	daa    
  40f919:	nop
  40f91a:	lods   eax,DWORD PTR ds:[esi]
  40f91b:	adc    al,0xa8
  40f91d:	bound  esi,QWORD PTR [ecx-0x2b]
  40f920:	sbb    dl,BYTE PTR [esi]
  40f922:	sub    ebx,DWORD PTR [ebx-0x3543f612]
  40f928:	pop    eax
  40f929:	dec    esi
  40f92a:	pop    ds
  40f92b:	outs   dx,BYTE PTR ds:[esi]
  40f92c:	sbb    bh,BYTE PTR [edx-0x4d]
  40f92f:	stc    
  40f930:	xchg   esi,eax
  40f931:	scas   eax,DWORD PTR es:[edi]
  40f932:	iret   
  40f933:	fs dec ecx
  40f935:	push   cs
  40f936:	je     0x40f99a
  40f938:	mov    edi,DWORD PTR [ecx]
  40f93a:	daa    
  40f93b:	stos   DWORD PTR es:[edi],eax
  40f93c:	(bad)  
  40f93d:	into   
  40f93e:	les    esi,FWORD PTR [esi-0x31]
  40f941:	mov    ah,0x8
  40f943:	inc    edi
  40f944:	(bad)  
  40f945:	loopne 0x40f900
  40f947:	fcomp  DWORD PTR [edi+0x75707671]
  40f94d:	pushf  
  40f94e:	shr    BYTE PTR [edx-0x71],1
  40f951:	jle    0x40f947
  40f953:	ret    0x3607
  40f956:	xor    BYTE PTR [ebx+ebp*1+0x5f9e148b],dl
  40f95d:	mov    esi,0xdbf26b8c
  40f962:	xchg   edi,eax
  40f963:	xchg   DWORD PTR [ebx],ebp
  40f965:	fs repnz and al,0xb4
  40f969:	rcr    DWORD PTR [ebp-0x64],1
  40f96c:	push   ds
  40f96d:	dec    esp
  40f96e:	retf   
  40f96f:	xor    ebx,DWORD PTR [edx+0x78]
  40f972:	pop    ebp
  40f973:	push   ebx
  40f974:	mov    ds:0xdd041cc5,al
  40f979:	mov    eax,ds:0x990ce04e
  40f97e:	jmp    0x2c6d173e
  40f983:	add    al,0xb7
  40f985:	mov    ch,0xb1
  40f987:	fiadd  WORD PTR [esi+0x619f37f]
  40f98d:	ins    DWORD PTR es:[edi],dx
  40f98e:	int3   
  40f98f:	fwait
  40f990:	inc    esi
  40f991:	pusha  
  40f992:	(bad)
  40f996:	test   DWORD PTR [esi],edx
  40f998:	jb     0x40f945
  40f99a:	or     edi,DWORD PTR [ecx]
  40f99c:	imul   edi,DWORD PTR [edi-0x222e61ac],0x883eaab7
  40f9a6:	and    bl,BYTE PTR [ebp-0x7]
  40f9a9:	sub    ah,BYTE PTR [edx-0x1d189dfe]
  40f9af:	les    esp,FWORD PTR [edi]
  40f9b1:	not    DWORD PTR [ebx]
  40f9b3:	dec    eax
  40f9b4:	or     ebp,DWORD PTR [ebx]
  40f9b6:	fdivr  DWORD PTR [ebx-0x64c314c8]
  40f9bc:	in     al,0xa5
  40f9be:	popa   
  40f9bf:	and    ebp,ebp
  40f9c1:	mov    al,ds:0x5b5e6bd1
  40f9c6:	cmp    BYTE PTR [esi],0x57
  40f9c9:	scas   al,BYTE PTR es:[edi]
  40f9ca:	data16 (bad) [ebp+edi*4-0x205e7ac4]
  40f9d2:	enter  0x87f4,0x97
  40f9d6:	shr    BYTE PTR [esi+0x3a],cl
  40f9d9:	fisubr DWORD PTR [edx]
  40f9db:	in     al,0xdb
  40f9dd:	xchg   ecx,eax
  40f9de:	nop
  40f9df:	jne    0x40fa44
  40f9e1:	call   0xbccc9514
  40f9e6:	sbb    al,0x1f
  40f9e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9e9:	ret    0xf25
  40f9ec:	jno    0x40fa2d
  40f9ee:	mov    ebp,ebp
  40f9f0:	icebp  
  40f9f1:	das    
  40f9f2:	mov    ds:0xcd47587a,al
  40f9f7:	loope  0x40fa0a
  40f9f9:	lods   eax,DWORD PTR ds:[esi]
  40f9fa:	fscale 
  40f9fc:	mov    fs,WORD PTR [ebp+0x5c]
  40f9ff:	jne    0x40f9d3
  40fa01:	xor    eax,eax
  40fa03:	sub    DWORD PTR [esi],esp
  40fa05:	popf   
  40fa06:	jg     0x40fa53
  40fa08:	jmp    0xbd7b1c7b
  40fa0d:	mov    WORD PTR [eax-0x47],?
  40fa10:	outs   dx,DWORD PTR ds:[esi]
  40fa11:	and    al,0x58
  40fa13:	mov    edx,edi
  40fa15:	hlt    
  40fa16:	mov    esp,0x6612aaa9
  40fa1b:	rcl    BYTE PTR [edx],cl
  40fa1d:	pop    esi
  40fa1e:	xchg   edi,edx
  40fa20:	jge    0x40fa41
  40fa22:	mov    ebx,0x1cfcfb1d
  40fa27:	push   ebx
  40fa28:	and    BYTE PTR [esp+esi*2-0x51cb2a14],bh
  40fa2f:	xchg   ebp,eax
  40fa30:	pop    es
  40fa31:	retf   0x66b1
  40fa34:	out    dx,al
  40fa35:	and    BYTE PTR [eax-0x7936d753],0xc0
  40fa3c:	inc    ebp
  40fa3d:	mov    ds:0x83b633,al
  40fa42:	shr    DWORD PTR [edi+0x2a],cl
  40fa45:	pop    ss
  40fa46:	js     0x40fa59
  40fa48:	ss lock sti 
  40fa4b:	cmp    BYTE PTR [edx*1-0x2db52f51],dl
  40fa52:	into   
  40fa53:	sahf   
  40fa54:	call   0x2d6f:0xc6883987
  40fa5b:	adc    BYTE PTR [ecx],ah
  40fa5d:	fwait
  40fa5e:	test   eax,0x47e72629
  40fa63:	cmp    esp,DWORD PTR [ecx+edx*1-0x11]
  40fa67:	in     eax,0xd7
  40fa69:	test   al,0x8e
  40fa6b:	pop    ecx
  40fa6c:	test   al,0x3b
  40fa6e:	sbb    eax,0xffffffc0
  40fa71:	cld    
  40fa72:	and    edi,eax
  40fa74:	enter  0x91d7,0xb5
  40fa78:	jb     0x40fa96
  40fa7a:	icebp  
  40fa7b:	jle    0x40faf2
  40fa7d:	adc    ecx,DWORD PTR ds:0xcb0b50c2
  40fa83:	aas    
  40fa84:	int    0x65
  40fa86:	xor    eax,0x51327f7f
  40fa8b:	ja     0x40fa33
  40fa8d:	or     ah,cl
  40fa8f:	rol    BYTE PTR [esi-0x573ae443],0x73
  40fa96:	cmp    ah,BYTE PTR [edi-0x3f2cd647]
  40fa9c:	fs push esp
  40fa9e:	popf   
  40fa9f:	pop    esi
  40faa0:	pushf  
  40faa1:	(bad)  
  40faa2:	push   ss
  40faa3:	popa   
  40faa4:	mov    WORD PTR [ecx+edx*1+0x1517a41d],ds
  40faab:	add    esp,DWORD PTR [ebx-0x4b5814c1]
  40fab1:	mov    ds:0xa0110dd2,eax
  40fab6:	sahf   
  40fab7:	cwde   
  40fab8:	sbb    al,0x84
  40faba:	fiadd  WORD PTR [ecx-0x256f075d]
  40fac0:	mov    eax,0xf91ebad4
  40fac5:	ins    BYTE PTR es:[edi],dx
  40fac6:	pop    ebp
  40fac7:	mov    ?,WORD PTR [esi-0x30d75553]
  40facd:	popf   
  40face:	call   0x49b125dd
  40fad3:	ins    BYTE PTR es:[edi],dx
  40fad4:	aas    
  40fad5:	pop    ss
  40fad6:	gs xchg edi,eax
  40fad8:	pop    ebp
  40fad9:	sbb    edi,DWORD PTR [ebx*4-0x2c23972b]
  40fae0:	mov    esp,0x6e6e8583
  40fae5:	mov    ds:0x213832,al
  40faea:	jmp    0x40fb13
  40faec:	adc    bh,dl
  40faee:	push   esp
  40faef:	xor    ah,BYTE PTR [edx-0x4489e82]
  40faf5:	add    DWORD PTR [edx+0x7930afdf],esp
  40fafb:	out    dx,eax
  40fafc:	mov    ch,0x20
  40fafe:	add    DWORD PTR [eax+ebp*8+0x50],0xf135cba1
  40fb06:	adc    eax,DWORD PTR [ebp-0x5]
  40fb09:	inc    ebx
  40fb0a:	mov    BYTE PTR [ebx-0x57],ah
  40fb0d:	mov    cl,BYTE PTR [edx-0xe5b36e7]
  40fb13:	out    dx,eax
  40fb14:	xor    DWORD PTR [edx+ecx*1-0x7f],esi
  40fb18:	pop    esp
  40fb19:	popf   
  40fb1a:	push   esi
  40fb1b:	loopne 0x40faa4
  40fb1d:	addr16 pusha 
  40fb1f:	xor    cl,BYTE PTR [ebx+0x31040dc2]
  40fb25:	mov    esi,DWORD PTR [ebx]
  40fb27:	jnp    0x40fb11
  40fb29:	pop    ebp
  40fb2a:	sbb    ebx,DWORD PTR [eax-0x1e]
  40fb2d:	mov    edx,DWORD PTR [ebp+0x78]
  40fb30:	and    DWORD PTR [ebx*4-0x363b603a],ebp
  40fb37:	cmp    eax,0xc017ec91
  40fb3c:	xor    edx,DWORD PTR [edi+0x28]
  40fb3f:	or     ch,BYTE PTR [esi+0x0]
  40fb42:	jnp    0x40fae3
  40fb44:	jo     0x40fb70
  40fb46:	add    DWORD PTR [esi-0x3f],esi
  40fb49:	add    cl,BYTE PTR [esi-0x33]
  40fb4c:	inc    edi
  40fb4d:	fdiv   DWORD PTR [eax+edx*2+0x69]
  40fb51:	shr    DWORD PTR [esi+0x5d221203],cl
  40fb57:	repnz adc edx,ebx
  40fb5a:	dec    edx
  40fb5b:	bound  edi,QWORD PTR [eax]
  40fb5d:	mov    al,ds:0x90f622a4
  40fb62:	mov    al,0x2b
  40fb64:	out    0x2f,al
  40fb66:	add    eax,0xcae8f944
  40fb6b:	cld    
  40fb6c:	mov    ds:0x90efe94d,eax
  40fb71:	xchg   edx,eax
  40fb72:	pop    esi
  40fb73:	loop   0x40fb70
  40fb75:	or     DWORD PTR [edx-0x2a],esi
  40fb78:	lss    esi,FWORD PTR [eax]
  40fb7b:	pop    ss
  40fb7c:	jp     0x40fbe1
  40fb7e:	xor    al,BYTE PTR [edx]
  40fb80:	pop    esp
  40fb81:	bound  edi,QWORD PTR [eax+0x4b]
  40fb84:	jmp    0x40fbf9
  40fb86:	mov    ds:0x298edf9b,al
  40fb8b:	xchg   edi,eax
  40fb8c:	inc    ecx
  40fb8d:	mov    edx,0xc9e48117
  40fb92:	jge    0x40fb95
  40fb94:	call   0xf466:0x26d7edd8
  40fb9b:	xlat   BYTE PTR ds:[ebx]
  40fb9c:	stos   DWORD PTR es:[edi],eax
  40fb9d:	out    dx,eax
  40fb9e:	pusha  
  40fb9f:	pushf  
  40fba0:	mov    al,0x43
  40fba2:	cmc    
  40fba3:	sub    eax,DWORD PTR ds:0xbd725602
  40fba9:	sbb    esi,DWORD PTR [ebp-0x2b]
  40fbac:	add    ecx,DWORD PTR [ebp-0x64]
  40fbaf:	mov    al,ds:0x97422899
  40fbb4:	icebp  
  40fbb5:	xchg   esi,eax
  40fbb6:	mov    ch,0x95
  40fbb8:	out    dx,eax
  40fbb9:	jo     0x40fb43
  40fbbb:	mov    ch,0xc1
  40fbbd:	sbb    DWORD PTR [ebp-0x6648286f],eax
  40fbc3:	add    cl,dh
  40fbc5:	pop    ecx
  40fbc6:	xor    dl,BYTE PTR [ecx]
  40fbc8:	pop    ebp
  40fbc9:	data16 and al,0x1e
  40fbcc:	ins    DWORD PTR es:[edi],dx
  40fbcd:	push   esi
  40fbce:	stos   DWORD PTR es:[edi],eax
  40fbcf:	mov    dl,0x51
  40fbd1:	xor    eax,0xef2b53fb
  40fbd6:	jbe    0x40fb68
  40fbd8:	or     edi,DWORD PTR [ebx+0x780a6078]
  40fbde:	push   0x177e0f27
  40fbe3:	xchg   ecx,eax
  40fbe4:	cmp    ebx,DWORD PTR [edx]
  40fbe6:	fldlg2 
  40fbe8:	adc    bh,cl
  40fbea:	dec    ebx
  40fbeb:	pop    esp
  40fbec:	xor    al,0x49
  40fbee:	mov    dh,0xde
  40fbf0:	into   
  40fbf1:	jecxz  0x40fbec
  40fbf3:	cmp    eax,0xca61b840
  40fbf8:	and    al,0xb6
  40fbfa:	ins    BYTE PTR es:[edi],dx
  40fbfb:	out    dx,eax
  40fbfc:	push   edx
  40fbfd:	sbb    eax,0x4431e889
  40fc02:	scas   al,BYTE PTR es:[edi]
  40fc03:	int3   
  40fc04:	or     edi,DWORD PTR [eax*8-0x51fec814]
  40fc0b:	or     esi,DWORD PTR [edi-0x79]
  40fc0e:	and    cl,BYTE PTR [edi+0x25d1de48]
  40fc14:	jmp    0x1d5183da
  40fc19:	jno    0x40fba5
  40fc1b:	dec    edi
  40fc1c:	aas    
  40fc1d:	out    dx,al
  40fc1e:	mov    ds:0xff87fe29,eax
  40fc23:	pushf  
  40fc24:	pop    ecx
  40fc25:	inc    edx
  40fc26:	out    dx,eax
  40fc27:	sub    BYTE PTR [ecx+edi*2-0x759fde43],al
  40fc2e:	js     0x40fc68
  40fc30:	(bad)  
  40fc31:	push   esp
  40fc32:	inc    ecx
  40fc33:	ret    
  40fc34:	fimul  DWORD PTR [edi+0x5a937044]
  40fc3a:	jle    0x40fbd6
  40fc3c:	pushf  
  40fc3d:	repz fldenv [edi]
  40fc40:	mov    gs,WORD PTR [ebp-0x3e8d7437]
  40fc46:	sub    DWORD PTR [edi+0x1c],0x57
  40fc4a:	lods   eax,DWORD PTR ds:[esi]
  40fc4b:	dec    edi
  40fc4c:	xchg   ebp,eax
  40fc4d:	icebp  
  40fc4e:	stos   BYTE PTR es:[edi],al
  40fc4f:	mov    ch,0x35
  40fc51:	outs   dx,BYTE PTR ds:[esi]
  40fc52:	inc    eax
  40fc53:	dec    ebx
  40fc54:	cwde   
  40fc55:	and    dl,bh
  40fc57:	add    ch,BYTE PTR [eax+edx*1]
  40fc5a:	xchg   edi,eax
  40fc5b:	stos   BYTE PTR es:[edi],al
  40fc5c:	xchg   ecx,eax
  40fc5d:	mov    al,ds:0x3b35174a
  40fc62:	jecxz  0x40fc66
  40fc64:	in     eax,dx
  40fc65:	test   BYTE PTR [esi+0x53a0e33],dh
  40fc6b:	push   edx
  40fc6c:	retf   0xff7c
  40fc6f:	fiadd  WORD PTR [edi]
  40fc71:	push   esp
  40fc72:	sti    
  40fc73:	mov    ch,0x6b
  40fc75:	fadd   st,st(3)
  40fc77:	jge    0x40fc90
  40fc79:	out    0x99,al
  40fc7b:	jb     0x40fc2a
  40fc7d:	cmc    
  40fc7e:	(bad)  
  40fc7f:	iret   
  40fc80:	adc    esi,ecx
  40fc82:	jnp    0x40fc06
  40fc84:	pop    ebp
  40fc85:	scas   eax,DWORD PTR es:[edi]
  40fc86:	aad    0xd8
  40fc88:	sar    ebx,cl
  40fc8a:	test   DWORD PTR [ebx],edi
  40fc8c:	fdivrp st(4),st
  40fc8e:	pop    ecx
  40fc8f:	push   edx
  40fc90:	jns    0x40fc48
  40fc92:	fbstp  TBYTE PTR [edx-0x4e9ea95]
  40fc98:	cdq    
  40fc99:	jle    0x40fc1d
  40fc9b:	push   es
  40fc9c:	(bad)  
  40fc9d:	test   esi,0x676ab372
  40fca3:	int    0xb6
  40fca5:	and    esp,DWORD PTR [ebx+edi*4+0x61f20e97]
  40fcac:	ja     0x40fc4c
  40fcae:	jo     0x40fce7
  40fcb0:	ds arpl dx,sp
  40fcb3:	call   0x6a3a:0xd203e2e7
  40fcba:	jo     0x40fd03
  40fcbc:	pop    eax
  40fcbd:	adc    al,ah
  40fcbf:	(bad)  
  40fcc0:	cmp    al,0xe6
  40fcc2:	push   cs
  40fcc3:	dec    ebp
  40fcc4:	fwait
  40fcc5:	lahf   
  40fcc6:	not    BYTE PTR ds:[esi+0x54]
  40fcca:	ror    DWORD PTR [esi],1
  40fccc:	or     ch,BYTE PTR [ecx]
  40fcce:	mov    ds:0x7300e47f,al
  40fcd3:	fist   WORD PTR [edx+0x19472262]
  40fcd9:	sub    al,dl
  40fcdb:	out    dx,al
  40fcdc:	pop    edx
  40fcdd:	push   0x5f
  40fcdf:	sub    DWORD PTR [edx-0x24],ebx
  40fce2:	and    bh,ch
  40fce4:	aas    
  40fce5:	add    cl,BYTE PTR [esp+ebx*8+0x43]
  40fce9:	ret    
  40fcea:	fistp  DWORD PTR [ebp+0x67]
  40fced:	push   ebp
  40fcee:	setbe  BYTE PTR [eax]
  40fcf1:	xchg   edx,eax
  40fcf2:	daa    
  40fcf3:	xor    BYTE PTR [edx+ecx*4+0x2c5f4195],ch
  40fcfa:	inc    esi
  40fcfb:	ret    0x3083
  40fcfe:	test   DWORD PTR [ebx-0x52],0xcae3d7e0
  40fd05:	aas    
  40fd06:	push   ebx
  40fd07:	push   cs
  40fd08:	ret    0x4819
  40fd0b:	mov    bl,0x1f
  40fd0d:	xchg   ecx,eax
  40fd0e:	mov    edi,0x3dbabdaa
  40fd13:	xchg   DWORD PTR [ecx+0x10da22d],ebp
  40fd19:	push   esi
  40fd1a:	loope  0x40fccd
  40fd1c:	jl     0x40fce7
  40fd1e:	hlt    
  40fd1f:	push   DWORD PTR [edx-0x49475870]
  40fd25:	or     al,0xec
  40fd27:	les    ebx,FWORD PTR [ebx]
  40fd29:	push   0x1
  40fd2b:	leave  
  40fd2c:	or     al,0xc6
  40fd2e:	xchg   edx,eax
  40fd2f:	lods   eax,DWORD PTR ds:[esi]
  40fd30:	aad    0xe0
  40fd32:	test   DWORD PTR [ecx],0xa77a9d84
  40fd38:	and    al,cl
  40fd3a:	das    
  40fd3b:	in     eax,0x83
  40fd3d:	cs dec esp
  40fd3f:	fsub   st,st(7)
  40fd41:	sub    al,ch
  40fd43:	pusha  
  40fd44:	xor    cl,BYTE PTR [esi-0x256a2053]
  40fd4a:	pushf  
  40fd4b:	dec    esi
  40fd4c:	int3   
  40fd4d:	fist   WORD PTR [ebx]
  40fd4f:	xchg   ebx,eax
  40fd50:	shl    DWORD PTR [edx-0x4097de34],1
  40fd56:	jecxz  0x40fcec
  40fd58:	nop
  40fd59:	xchg   esi,eax
  40fd5a:	xor    edx,DWORD PTR [edx+0x447495cf]
  40fd60:	lea    ecx,[esi-0x2364b2db]
  40fd66:	push   ss
  40fd67:	inc    edi
  40fd68:	les    edi,FWORD PTR [ebx-0x60]
  40fd6b:	enter  0x728b,0x9f
  40fd6f:	aaa    
  40fd70:	jge    0x40fd07
  40fd72:	mov    ch,0x84
  40fd74:	cmc    
  40fd75:	popa   
  40fd76:	mov    esp,0x9468a9c4
  40fd7b:	jbe    0x40fd73
  40fd7d:	nop
  40fd7e:	add    ch,0xdb
  40fd81:	bound  ecx,QWORD PTR [edi]
  40fd83:	aad    0xea
  40fd85:	or     dl,BYTE PTR [ecx+0x76]
  40fd88:	daa    
  40fd89:	stos   BYTE PTR es:[edi],al
  40fd8a:	mov    ch,BYTE PTR [ebx-0x4e]
  40fd8d:	lods   eax,DWORD PTR ds:[esi]
  40fd8e:	int    0x94
  40fd90:	sahf   
  40fd91:	inc    ecx
  40fd92:	and    eax,0xbb9a4fb
  40fd97:	stos   BYTE PTR es:[edi],al
  40fd98:	lahf   
  40fd99:	jmp    FWORD PTR [esi+edx*8-0x6e]
  40fd9d:	mov    esi,DWORD PTR [esp+edx*8]
  40fda0:	les    ecx,FWORD PTR [ecx-0x64773662]
  40fda6:	jo     0x40fd31
  40fda8:	mov    eax,0xacc4ed1e
  40fdad:	lea    ecx,ds:0x82e80cb5
  40fdb3:	xor    eax,0xd68a43fb
  40fdb8:	(bad)  
  40fdb9:	fld    st(6)
  40fdbb:	stc    
  40fdbc:	jl     0x40fdb7
  40fdbe:	cmc    
  40fdbf:	xchg   esi,eax
  40fdc0:	shl    DWORD PTR [edi+0x6a],cl
  40fdc3:	(bad)  
  40fdc4:	ffree  st(2)
  40fdc6:	adc    BYTE PTR [eax-0x21e9804a],bl
  40fdcc:	pop    edi
  40fdcd:	out    dx,eax
  40fdce:	pop    edx
  40fdcf:	dec    eax
  40fdd0:	out    dx,al
  40fdd1:	cld    
  40fdd2:	(bad)  
  40fdd4:	dec    ebx
  40fdd5:	(bad)  
  40fdd6:	adc    ecx,DWORD PTR [edx-0x3c]
  40fdd9:	les    ecx,FWORD PTR [ebx+0x7191b642]
  40fddf:	ret    0x1ca
  40fde2:	cmp    al,0x84
  40fde4:	test   eax,0x33b77b09
  40fde9:	pop    edx
  40fdea:	in     eax,0xd7
  40fdec:	sbb    BYTE PTR [ebx+edx*8+0x13543837],bl
  40fdf3:	jl     0x40fe6b
  40fdf5:	mov    bl,0x32
  40fdf7:	addr16 call 0xa875:0x1ac3ba57
  40fdff:	cmp    edi,ecx
  40fe01:	mov    eax,0x7ccabbe1
  40fe06:	lds    eax,FWORD PTR ds:0x42c34ed5
  40fe0c:	imul   esp,edx,0x33277e4a
  40fe12:	(bad)  
  40fe13:	jbe    0x40fdc2
  40fe15:	add    eax,0xba2cca38
  40fe1a:	push   ebx
  40fe1b:	out    dx,al
  40fe1c:	fidivr WORD PTR [ecx]
  40fe1e:	out    0x9c,al
  40fe20:	sub    BYTE PTR [edx+0x63],ah
  40fe23:	cmp    bh,cl
  40fe25:	mov    ds:0x78df5e81,al
  40fe2a:	sub    BYTE PTR [ebx],bl
  40fe2c:	mov    edx,0x765bec76
  40fe31:	cwde   
  40fe32:	test   DWORD PTR [edx],edx
  40fe34:	div    BYTE PTR [eax+ebp*4-0x4636043a]
  40fe3b:	idiv   DWORD PTR [edi-0x755dbeb8]
  40fe41:	fmul   DWORD PTR [ecx+ecx*2-0x58]
  40fe45:	inc    edi
  40fe46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe47:	loopne 0x40fe05
  40fe49:	dec    esp
  40fe4a:	icebp  
  40fe4b:	jle    0x40fe82
  40fe4d:	dec    edx
  40fe4e:	mov    al,ds:0xb0f2ad24
  40fe53:	jb     0x40fe15
  40fe55:	push   ecx
  40fe56:	ins    DWORD PTR es:[edi],dx
  40fe57:	mov    ah,0x9c
  40fe59:	hlt    
  40fe5a:	push   edi
  40fe5b:	dec    eax
  40fe5c:	inc    esi
  40fe5d:	imul   edi,DWORD PTR [edi],0x6c
  40fe60:	push   eax
  40fe61:	inc    esp
  40fe62:	outs   dx,BYTE PTR ds:[esi]
  40fe63:	push   0x26
  40fe65:	stos   BYTE PTR es:[edi],al
  40fe66:	dec    ecx
  40fe67:	adc    bh,ch
  40fe69:	int3   
  40fe6a:	mov    cl,0x61
  40fe6c:	push   esi
  40fe6d:	adc    eax,0xbbbd7b62
  40fe72:	mov    ds:0x2fd6f99e,eax
  40fe77:	bound  esi,QWORD PTR [esi]
  40fe79:	xor    eax,0x411087a6
  40fe7e:	icebp  
  40fe7f:	mov    al,ds:0x6fe55e26
  40fe84:	cmp    al,0x94
  40fe86:	mov    edi,0x36abcbdb
  40fe8b:	pop    esp
  40fe8c:	retf   
  40fe8d:	arpl   WORD PTR [edx-0x15f4f541],cx
  40fe93:	adc    cl,BYTE PTR [ebp+0x3c263856]
  40fe99:	mov    edx,0x5519be46
  40fe9e:	nop
  40fe9f:	pop    edx
  40fea0:	jmp    0x40fe3b
  40fea2:	shr    BYTE PTR [eax+0x7507fcd0],cl
  40fea8:	xor    DWORD PTR [esi+0x26a95646],esp
  40feae:	in     al,dx
  40feaf:	adc    edi,ecx
  40feb1:	pop    ebx
  40feb2:	pop    esp
  40feb3:	cld    
  40feb4:	das    
  40feb5:	into   
  40feb6:	mov    ds:0xb9065b0a,al
  40febb:	cmp    bh,BYTE PTR [ebp-0x423a7597]
  40fec1:	repnz lds esi,FWORD PTR [ebx+0x62]
  40fec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fec6:	fist   DWORD PTR [esp+esi*2]
  40fec9:	push   ecx
  40feca:	jge    0xa6c760e2
  40fed0:	lock mov dl,0x6d
  40fed3:	test   eax,0x7d702974
  40fed8:	jg     0x40feff
  40feda:	or     BYTE PTR [edx-0x222e63ba],cl
  40fee0:	fdivr  st(4),st
  40fee2:	xor    eax,ecx
  40fee4:	retf   0x6e49
  40fee7:	mov    eax,ds:0x75cf05e6
  40feec:	inc    eax
  40feed:	sti    
  40feee:	xor    eax,0x4ec6d76e
  40fef3:	sar    DWORD PTR [edi-0x67f5e336],0xe8
  40fefa:	xor    ah,BYTE PTR [ebp+0x1f187df4]
  40ff00:	dec    ebx
  40ff01:	pop    ds
  40ff02:	pop    ebx
  40ff03:	pop    esp
  40ff04:	pushf  
  40ff05:	xor    eax,0x681483b1
  40ff0a:	adc    DWORD PTR [ebp-0x16],ebx
  40ff0d:	xor    dl,BYTE PTR [eax]
  40ff0f:	aas    
  40ff10:	aam    0xd0
  40ff12:	iret   
  40ff13:	outs   dx,DWORD PTR ds:[esi]
  40ff14:	aad    0x6b
  40ff16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff17:	add    DWORD PTR [ebx+eiz*2+0x5a],0x4f
  40ff1c:	or     BYTE PTR [ecx+0x64],ch
  40ff1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff20:	pop    esi
  40ff21:	sub    BYTE PTR ds:0x3885ed48,dh
  40ff27:	ror    bh,0xcb
  40ff2a:	out    0xe4,eax
  40ff2c:	push   cs
  40ff2d:	pop    ds
  40ff2e:	dec    DWORD PTR [ecx-0x623e9d1e]
  40ff34:	imul   esi,DWORD PTR [ebp-0x26],0xd7c7539f
  40ff3b:	rol    bl,0xdb
  40ff3e:	fwait
  40ff3f:	mov    bl,BYTE PTR [ecx-0x1ca8c1c4]
  40ff45:	or     DWORD PTR [edx+ecx*4-0x26dbfeef],esp
  40ff4c:	mov    esp,0x676b423a
  40ff51:	inc    edx
  40ff52:	ror    al,0xee
  40ff55:	jb     0x40ffa9
  40ff57:	inc    eax
  40ff58:	cmp    BYTE PTR [edi],dh
  40ff5a:	push   es
  40ff5b:	lahf   
  40ff5c:	out    dx,al
  40ff5d:	or     al,0xdd
  40ff5f:	stc    
  40ff60:	mov    al,0x7b
  40ff62:	imul   esi,DWORD PTR [edi-0x7c2d3894],0xffffffe6
  40ff69:	push   eax
  40ff6a:	data16 std 
  40ff6c:	loopne 0x40ff94
  40ff6e:	(bad)  
  40ff70:	and    DWORD PTR fs:[esi],0x57
  40ff74:	lahf   
  40ff75:	jmp    0x40ffeb
  40ff77:	rcl    ah,cl
  40ff79:	int3   
  40ff7a:	or     bl,dl
	...
  40ffbc:	add    BYTE PTR [eax],al
  40ffbe:	add    BYTE PTR [edi-0x5c],ch
  40ffc1:	daa    
  40ffc2:	jbe    0x40ffb3
  40ffc4:	idiv   DWORD PTR [edi-0x43]
  40ffc7:	mov    ecx,0xb916f8af
  40ffcc:	cmp    eax,DWORD PTR ds:0x10573b8
  40ffd2:	add    BYTE PTR ds:0x86000007,ah
  40ffd8:	pop    ss
  40ffd9:	dec    ebp
  40ffda:	nop
  40ffdb:	jo     0x40ffb3
  40ffdd:	sbb    edx,DWORD PTR [edx+0x56]
  40ffe0:	cli    
  40ffe1:	adc    bl,bl
  40ffe3:	xor    ecx,DWORD PTR [ebp-0x60]
  40ffe6:	xor    eax,0xb71ab188
  40ffeb:	mov    edi,0x3fe0586f
  40fff0:	lock ins DWORD PTR es:[edi],dx
  40fff2:	rol    BYTE PTR [ecx-0x16],1
  40fff5:	loop   0x40ff82
  40fff7:	sub    ecx,DWORD PTR [ebx+0x54280d2d]
  40fffd:	hlt    
  40fffe:	mov    cl,0x2d
  410000:	pop    edi
  410001:	int    0xc
  410003:	mov    dh,0x7e
  410005:	out    0x20,al
  410007:	(bad)  
  410009:	pop    edx
  41000a:	stc    
  41000b:	push   edi
  41000c:	sbb    eax,0x50fcd5dc
  410011:	(bad)  
  410012:	inc    edx
  410013:	into   
  410014:	jnp    0x410052
  410016:	(bad)  
  410017:	or     DWORD PTR [ebx+eiz*4+0x5d1be499],edi
  41001e:	gs push esi
  410020:	add    eax,0x3a2fc33d
  410025:	xlat   BYTE PTR ds:[ebx]
  410026:	aam    0x9d
  410028:	(bad)
  41002c:	in     eax,dx
  41002d:	push   edx
  41002e:	aad    0xef
  410030:	adc    al,0x2f
  410032:	push   eax
  410033:	cwde   
  410034:	and    DWORD PTR [edx+0x48],ecx
  410037:	sbb    BYTE PTR [ecx+0x2017c406],dl
  41003d:	adc    BYTE PTR [eax+0x62],ch
  410040:	sbb    al,0x49
  410042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410043:	xchg   esi,eax
  410044:	jo     0x4100a0
  410046:	push   0x17
  410048:	(bad)  
  410049:	ins    DWORD PTR es:[edi],dx
  41004a:	and    ch,BYTE PTR [ebx+0x2ef338ed]
  410050:	adc    eax,0x685764ee
  410055:	(bad)  
  410056:	push   ds
  410057:	and    eax,edx
  410059:	xor    al,0x1b
  41005b:	pop    esp
  41005c:	fist   WORD PTR [edx]
  41005e:	mov    esi,DWORD PTR [ecx-0x301f20fc]
  410064:	pushf  
  410065:	test   eax,0x615adaa3
  41006a:	stc    
  41006b:	mov    ebp,0x53c1ebf5
  410070:	mov    eax,ds:0x76cb53e7
  410075:	cmc    
  410076:	jnp    0x4100ba
  410078:	mov    dl,0x6a
  41007a:	jle    0x4100a1
  41007c:	hlt    
  41007d:	sub    DWORD PTR [ecx],esp
  41007f:	outs   dx,DWORD PTR ds:[esi]
  410080:	icebp  
  410081:	pushf  
  410082:	add    DWORD PTR [ebp+esi*1-0x58],esi
  410086:	mov    bl,0xac
  410088:	mov    ch,0xc5
  41008a:	pop    esi
  41008b:	loope  0x41007a
  41008d:	add    esi,DWORD PTR [edx+esi*8+0x3e]
  410091:	addr16 push cs
  410093:	scas   al,BYTE PTR es:[edi]
  410094:	cdq    
  410095:	mov    ebp,0xd76a5a3c
  41009a:	dec    ebx
  41009b:	pusha  
  41009c:	xchg   ebx,eax
  41009d:	mov    bl,0x86
  41009f:	ja     0x41011c
  4100a1:	xor    eax,0x6abc8949
  4100a6:	push   es
  4100a7:	sub    BYTE PTR [ebx],dl
  4100a9:	loopne 0x4100b8
  4100ab:	std    
  4100ac:	ss pop edx
  4100ae:	fisub  DWORD PTR [edi-0x30]
  4100b1:	dec    eax
  4100b2:	arpl   WORD PTR [ecx],di
  4100b4:	rcl    BYTE PTR [ecx],cl
  4100b6:	push   ds
  4100b7:	test   eax,0xc3e8e607
  4100bc:	inc    ebp
  4100bd:	inc    edi
  4100be:	xchg   edi,eax
  4100bf:	pop    ss
  4100c0:	sub    ebp,DWORD PTR [ebx-0x4115c2bb]
  4100c6:	mov    bl,0x11
  4100c8:	js     0x4100aa
  4100ca:	cmp    esp,DWORD PTR [ecx]
  4100cc:	jle    0x410113
  4100ce:	add    ch,al
  4100d0:	jne    0x410087
  4100d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100d3:	mov    ebp,0x111afee
  4100d8:	lods   al,BYTE PTR ds:[esi]
  4100d9:	das    
  4100da:	pop    ss
  4100db:	pushf  
  4100dc:	add    dl,bl
  4100de:	mov    esi,0xb5907bdf
  4100e3:	cmp    al,0x7
  4100e5:	add    BYTE PTR [eax-0x23],bl
  4100e8:	dec    edi
  4100e9:	imul   ebx,DWORD PTR [edi+0x43],0x7
  4100ed:	or     al,0x47
  4100ef:	inc    esi
  4100f0:	out    dx,eax
  4100f1:	pop    eax
  4100f2:	retf   0x547
  4100f5:	prefetcht1 BYTE PTR [ebx]
  4100f8:	jns    0x4100df
  4100fa:	repnz mov ebp,DWORD PTR [esi]
  4100fd:	aam    0xb4
  4100ff:	shl    DWORD PTR [edi+0x1e],0x18
  410103:	out    0xc1,al
  410105:	test   eax,0x6a4e6047
  41010a:	jo     0x41009e
  41010c:	push   ss
  41010d:	xchg   esi,eax
  41010e:	sar    DWORD PTR [esi],1
  410110:	adc    BYTE PTR [ebp+edx*4+0x7ade53b0],al
  410117:	inc    edx
  410118:	in     al,dx
  410119:	das    
  41011a:	arpl   WORD PTR [esi+0x38c992ee],cx
  410120:	(bad)  
  410121:	pusha  
  410122:	ja     0x410170
  410124:	and    esp,DWORD PTR [eax-0x75]
  410127:	adc    al,0x4f
  410129:	jmp    0x65bd:0x58280b6b
  410130:	xor    ch,BYTE PTR [esi]
  410132:	jmp    0x6649:0xc04dd38b
  410139:	inc    eax
  41013a:	mov    cl,0x7b
  41013c:	fiadd  DWORD PTR fs:[edi]
  41013f:	jl     0x41010a
  410141:	mov    ah,0xd8
  410143:	clc    
  410144:	and    esi,esi
  410146:	in     al,0xeb
  410148:	cwde   
  410149:	in     eax,0x29
  41014b:	gs mov dl,bh
  41014e:	lea    edx,[edx+0x25b4633f]
  410154:	add    eax,0x2f5e8996
  410159:	out    dx,eax
  41015a:	sbb    eax,0x2a96e65e
  41015f:	in     al,dx
  410160:	ins    BYTE PTR es:[edi],dx
  410161:	pop    ecx
  410162:	gs cld 
  410164:	fcomip st,st(6)
  410166:	test   al,0x83
  410168:	in     al,dx
  410169:	push   esp
  41016a:	dec    DWORD PTR [ecx-0x6ad615b]
  410170:	fisub  WORD PTR ds:0x3f8cdef4
  410176:	mov    cl,BYTE PTR [edi]
  410178:	aam    0xfc
  41017a:	mov    ebx,0xf0dacc16
  41017f:	push   ebp
  410180:	rcr    BYTE PTR [ebx-0x3569be4c],cl
  410186:	fs in  al,0xed
  410189:	cwde   
  41018a:	outs   dx,BYTE PTR ds:[esi]
  41018b:	xchg   BYTE PTR [edx+0x48],dl
  41018e:	add    dh,bl
  410190:	imul   DWORD PTR [ebp-0x468b264c]
  410196:	dec    esp
  410197:	push   0xffffffac
  410199:	cld    
  41019a:	mov    ecx,0xa4411921
  41019f:	imul   eax,DWORD PTR [ebx+0x13e620c4],0x535e5ecc
  4101a9:	cmp    BYTE PTR [edx+0x4043fa81],cl
  4101af:	imul   edi,DWORD PTR [edx-0x53],0xa9873231
  4101b6:	mov    ecx,0x4bc01ab9
  4101bb:	repz fidivr DWORD PTR [ebp+0x6e95c3b9]
  4101c2:	or     edi,DWORD PTR [edi]
  4101c4:	jae    0x41021f
  4101c6:	mov    esi,0x13f47280
  4101cb:	cs je  0x410173
  4101ce:	xor    BYTE PTR [esi+ebp*2],al
  4101d1:	retf   0x576d
  4101d4:	call   0x3ea8:0xe247370c
  4101db:	push   0x2110cc9d
  4101e0:	pop    ss
  4101e1:	out    dx,al
  4101e2:	cmp    edi,DWORD PTR [edx-0x58]
  4101e5:	push   es
  4101e6:	inc    edi
  4101e7:	xchg   DWORD PTR [esi+eiz*4+0x76],edx
  4101eb:	in     al,dx
  4101ec:	dec    edi
  4101ed:	pop    ebx
  4101ee:	div    DWORD PTR [edi+0xb]
  4101f1:	daa    
  4101f2:	mov    al,0x74
  4101f4:	mov    ch,0x18
  4101f6:	bound  edi,QWORD PTR [ecx-0x722b37d0]
  4101fc:	cmp    bh,al
  4101fe:	jb     0x4101f7
  410200:	mov    cl,0x1a
  410202:	or     DWORD PTR [ebx+0x23a5b354],ebp
  410208:	xchg   edx,eax
  410209:	pop    ebx
  41020a:	test   cl,dl
  41020c:	dec    ecx
  41020d:	outs   dx,BYTE PTR ds:[esi]
  41020e:	stos   DWORD PTR es:[edi],eax
  41020f:	inc    esp
  410210:	pusha  
  410211:	cwde   
  410212:	mov    bh,0x38
  410214:	addr16 inc eax
  410216:	outs   dx,BYTE PTR ds:[esi]
  410217:	cwde   
  410218:	mov    edi,0x5c2dd576
  41021d:	popf   
  41021e:	stos   BYTE PTR es:[edi],al
  41021f:	dec    ebp
  410220:	cmp    eax,0x57bb589c
  410225:	or     edi,DWORD PTR [eax+eax*2]
  410228:	cwde   
  410229:	push   0x17
  41022b:	jne    0x41028b
  41022d:	cmp    eax,0x15d269d7
  410232:	lods   eax,DWORD PTR ds:[esi]
  410233:	jmp    0x41022a
  410235:	inc    edi
  410236:	dec    dx
  410238:	jmp    0x33ba:0x6c2017d5
  41023f:	jle    0x41022c
  410241:	(bad)  
  410242:	std    
  410243:	js     0x4102b5
  410245:	and    al,0x37
  410247:	fs xchg ecx,eax
  410249:	mov    esi,0xd5816c37
  41024e:	inc    di
  410250:	cs repz popa 
  410253:	and    ebx,ebp
  410255:	(bad)  
  410256:	clc    
  410257:	pop    ds
  410258:	(bad)  
  410259:	cld    
  41025a:	pop    esi
  41025b:	xchg   ebx,eax
  41025c:	test   BYTE PTR [ebx+0x4d],0xf9
  410260:	out    dx,eax
  410261:	pusha  
  410262:	mov    ch,0x6a
  410264:	mov    DWORD PTR [esi],eax
  410266:	idiv   edi
  410268:	mov    eax,0xcfd75514
  41026d:	add    al,0x74
  41026f:	js     0x410264
  410271:	jae    0x4102cd
  410273:	pop    ebp
  410274:	pusha  
  410275:	popa   
  410276:	mov    ebp,0xb406de38
  41027b:	fucomi st,st(6)
  41027d:	xor    eax,0x1e9000e8
  410282:	add    BYTE PTR [eax-0x2c],0xf2
  410286:	dec    ebp
  410287:	imul   esp,edi,0x9967eff6
  41028d:	imul   edi,DWORD PTR [eax+0x248a0205],0xffffffd3
  410294:	div    BYTE PTR [ebx+esi*4-0x20]
  410298:	and    al,0xa5
  41029a:	ret    0x8437
  41029d:	int    0x6e
  41029f:	sbb    ebx,ebx
  4102a1:	mov    edx,0xefe87916
  4102a6:	test   DWORD PTR [esi-0x745321d1],ebp
  4102ac:	dec    eax
  4102ad:	ror    esi,0x7b
  4102b0:	mov    al,ds:0xe34017b8
  4102b5:	adc    BYTE PTR [edi+0xaefa373],bl
  4102bb:	cmc    
  4102bc:	pop    esi
  4102bd:	fcmovbe st,st(0)
  4102bf:	push   ds
  4102c0:	jle    0x41024c
  4102c2:	ins    BYTE PTR es:[edi],dx
  4102c3:	and    al,0x20
  4102c5:	xchg   edi,eax
  4102c6:	push   ebx
  4102c7:	call   0xa0db:0x55c90cff
  4102ce:	outs   dx,DWORD PTR ds:[esi]
  4102cf:	sub    DWORD PTR [edx-0x58],0x8a80965a
  4102d6:	cmp    al,0x99
  4102d8:	add    al,0x7f
  4102da:	fdivp  st(4),st
  4102dc:	pop    ds
  4102dd:	mov    esi,esp
  4102df:	xor    dl,BYTE PTR [ecx+0x38373f6b]
  4102e5:	enter  0x4e52,0xda
  4102e9:	sub    dh,BYTE PTR [ecx-0x2c]
  4102ec:	sub    bl,0xbe
  4102ef:	push   0x9af32a05
  4102f4:	sti    
  4102f5:	push   cs
  4102f6:	repnz push 0x24
  4102f9:	aas    
  4102fa:	fmul   DWORD PTR [ebx+0x70f87b80]
  410300:	into   
  410301:	fist   WORD PTR [esi]
  410303:	(bad)  
  410304:	jecxz  0x410384
  410306:	ficom  DWORD PTR ds:0x41172729
  41030c:	add    al,0x11
  41030e:	lods   eax,DWORD PTR ds:[esi]
  41030f:	jae    0x410351
  410311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410312:	mov    eax,0x6a47d437
  410317:	in     eax,dx
  410318:	scas   al,BYTE PTR es:[edi]
  410319:	fcom   DWORD PTR [ebp-0x7850b32a]
  41031f:	call   0xa143:0x82938504
  410326:	mov    ds:0x5d734676,al
  41032b:	xchg   ebp,eax
  41032c:	std    
  41032d:	push   ebp
  41032e:	fadd   DWORD PTR [edi-0x1b]
  410331:	jnp    0x410384
  410333:	inc    ebx
  410334:	mov    bh,0x53
  410336:	push   ebx
  410337:	int3   
  410338:	sub    DWORD PTR [ebx+0x64cdb7f],0x6b4f9ca
  410342:	ss mov al,0xfe
  410345:	or     ah,BYTE PTR ds:0x3b804cda
  41034b:	bound  esp,QWORD PTR [edx+0x446510a3]
  410351:	xor    eax,0xa1b54b2f
  410356:	xor    eax,esi
  410358:	jmp    0x638da8f
  41035d:	shr    BYTE PTR ds:0x6784ce12,1
  410363:	jns    0x4103db
  410365:	lahf   
  410366:	jecxz  0x41035d
  410368:	jg     0x410388
  41036a:	adc    ebx,DWORD PTR [ecx]
  41036c:	push   esi
  41036d:	rcl    BYTE PTR [eax-0x6786278d],cl
  410373:	xchg   BYTE PTR [eax+0x21],al
  410376:	pop    ecx
  410377:	adc    BYTE PTR [ebx],dl
  410379:	scas   eax,DWORD PTR es:[edi]
  41037a:	or     edx,ebp
  41037c:	loop   0x4103ed
  41037e:	dec    esp
  41037f:	push   ecx
  410380:	xchg   edx,eax
  410381:	dec    eax
  410382:	push   eax
  410383:	mov    cs,WORD PTR [ecx+0x17db0f71]
  410389:	cld    
  41038a:	jns    0x410320
  41038c:	int    0xd0
  41038e:	mov    dl,dh
  410390:	imul   esp,DWORD PTR ds:0x278471ad,0x6454f853
  41039a:	inc    edi
  41039b:	dec    ecx
  41039c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41039d:	sub    ebx,DWORD PTR [ebx+0x8]
  4103a0:	loopne 0x410412
  4103a2:	loope  0x410362
  4103a4:	(bad)  
  4103a5:	sub    ch,dh
  4103a7:	pop    ebx
  4103a8:	fidivr DWORD PTR [esi+0x2]
  4103ab:	jno    0x41037c
  4103ad:	aaa    
  4103ae:	ins    DWORD PTR es:[edi],dx
  4103af:	dec    esp
  4103b0:	cli    
  4103b1:	adc    BYTE PTR [edi+eiz*2],bh
  4103b4:	sbb    eax,0x4d487cc3
  4103b9:	or     ah,BYTE PTR [ecx+0x19c84cd2]
  4103bf:	mov    cl,0xce
  4103c1:	imul   ebx,DWORD PTR [eax-0x39be62b6],0x7f
  4103c8:	dec    edi
  4103c9:	ror    DWORD PTR [ebx+0x2a],cl
  4103cc:	sbb    eax,0x40c368fc
  4103d1:	sub    al,bh
  4103d3:	jmp    0x47d9:0x5005061b
  4103da:	rcl    BYTE PTR [esi],cl
  4103dc:	sbb    al,0xb4
  4103de:	ss cmp ebx,esp
  4103e1:	(bad)  
  4103e2:	std    
  4103e3:	push   ss
  4103e4:	sbb    DWORD PTR [ebx],0x12
  4103e7:	add    BYTE PTR [ebp-0x1f4b60fc],cl
  4103ed:	mov    ebx,0xe1265eaf
  4103f2:	cmp    BYTE PTR [ebp+0x12],bh
  4103f5:	add    al,0x3c
  4103f7:	cwde   
  4103f8:	in     al,dx
  4103f9:	ss pushf 
  4103fb:	test   DWORD PTR ds:0xf65c7f49,eax
  410401:	test   al,0xf4
  410403:	dec    BYTE PTR [eax]
  410405:	js     0x410454
  410407:	sbb    esi,ecx
  410409:	lds    ecx,FWORD PTR [edi+0x1ca4968a]
  41040f:	xchg   esi,eax
  410410:	inc    ebp
  410411:	jecxz  0x4103b5
  410413:	ins    BYTE PTR es:[edi],dx
  410414:	pushf  
  410415:	fild   QWORD PTR [eax-0x7412c758]
  41041b:	mov    DWORD PTR [edx+eiz*8-0x2275b122],ecx
  410422:	ds aaa 
  410424:	gs pop ds
  410426:	nop
  410427:	mov    ah,0xa0
  410429:	xor    BYTE PTR [edx+ebp*1-0x4c],dh
  41042d:	test   bh,cl
  41042f:	ret    
  410430:	mov    dl,0xdc
  410432:	fisub  WORD PTR [ebx+esi*1-0x179df4ab]
  410439:	or     DWORD PTR [eax],0x3674a35f
  41043f:	sbb    BYTE PTR ds:0x4112ae1c,al
  410445:	mov    DWORD PTR [eax-0x1f],eax
  410448:	aaa    
  410449:	inc    edi
  41044a:	xor    dh,cl
  41044c:	sbb    ebx,DWORD PTR [eax+eax*4+0x2]
  410450:	push   ss
  410451:	leave  
  410452:	in     eax,0x33
  410454:	xor    eax,0x5e14f4ff
  410459:	js     0x4104b0
  41045b:	fldz   
  41045e:	mov    BYTE PTR [ebp-0x68550dd8],0x3f
  410465:	sbb    DWORD PTR ds:0x9286e75,0x4a
  41046c:	cmc    
  41046d:	repz repz aam 0x1c
  410471:	or     BYTE PTR [esi+0x27cd57f7],dh
  410477:	in     al,0x2e
  410479:	dec    esp
  41047a:	sub    eax,0xa1b3dd5a
  41047f:	popa   
  410480:	cmp    eax,0xc069df77
  410485:	(bad)  
  410486:	out    0xd8,al
  410488:	clc    
  410489:	bound  eax,QWORD PTR [ebx+0x31f9d5ef]
  41048f:	add    ecx,ecx
  410491:	and    DWORD PTR [ecx],0x76eaba99
  410497:	dec    ecx
  410498:	sbb    ecx,DWORD PTR [ebx+0x0]
  41049b:	ret    
  41049c:	iret   
  41049d:	stc    
  41049e:	cs test dl,ah
  4104a1:	test   eax,0x672c2fb0
  4104a6:	xor    BYTE PTR [esi+0x3c],cl
  4104a9:	rol    edi,cl
  4104ab:	jae    0x4104f1
  4104ad:	ret    
  4104ae:	mov    al,0x0
  4104b0:	retf   0x2d5b
  4104b3:	cs or  eax,0x6f02e1e9
  4104b9:	push   es
  4104ba:	mov    al,0x64
  4104bc:	inc    ebp
  4104bd:	and    BYTE PTR [ebx-0xc00f262],ah
  4104c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104c4:	nop
  4104c5:	or     eax,0x15a7b93a
  4104ca:	lods   al,BYTE PTR ds:[esi]
  4104cb:	je     0x4104af
  4104cd:	and    al,BYTE PTR [edx+0x16]
  4104d0:	sti    
  4104d1:	retf   
  4104d2:	add    bl,BYTE PTR [eax-0x7c5e8b5c]
  4104d8:	out    dx,eax
  4104d9:	sbb    eax,0xbb5d3db1
  4104de:	loop   0x41048e
  4104e0:	xor    ch,BYTE PTR [edx+eiz*1-0x63]
  4104e4:	in     al,dx
  4104e5:	push   ebx
  4104e6:	cwde   
  4104e7:	int    0xa6
  4104e9:	dec    esi
  4104ea:	nop
  4104eb:	dec    esp
  4104ec:	rol    DWORD PTR [eax+0x36],cl
  4104ef:	repz test BYTE PTR [ebp-0x537e39c6],dl
  4104f6:	jl     0x41054c
  4104f8:	xchg   ebp,eax
  4104f9:	rcl    BYTE PTR [ebx-0x82e8efb],0xc0
  410500:	push   ebp
  410501:	dec    edx
  410502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410503:	xchg   esi,eax
  410504:	lods   eax,DWORD PTR ds:[esi]
  410505:	jae    0x4104bd
  410507:	popa   
  410508:	sub    al,0x4e
  41050a:	and    bl,bh
  41050c:	cmp    DWORD PTR [ebx-0x3c7a52a],edx
  410512:	jmp    0x1e0a:0x4babd06e
  410519:	jae    0x41058f
  41051b:	or     eax,0x227be3c3
  410520:	arpl   dx,sp
  410522:	fsub   QWORD PTR [edi+0x6]
  410525:	mov    ah,BYTE PTR [ebx]
  410527:	test   BYTE PTR [esi],0x5b
  41052a:	retf   0xb826
  41052d:	jle    0x410522
  41052f:	jl     0x4104fc
  410531:	mov    ds:0x58d3c9ec,al
  410536:	sbb    esi,DWORD PTR [ebx+0x698f9ada]
  41053c:	sbb    dl,BYTE PTR [ecx]
  41053e:	push   ebx
  41053f:	imul   ebx,DWORD PTR [edx],0x22
  410542:	aas    
  410543:	adc    BYTE PTR [esi],cl
  410545:	push   ss
  410546:	outs   dx,BYTE PTR ds:[esi]
  410547:	add    ch,bh
  410549:	popf   
  41054a:	(bad)  
  41054b:	push   ss
  41054c:	xchg   ebp,eax
  41054d:	test   bl,bh
  41054f:	std    
  410550:	or     al,0xd7
  410552:	jo     0x4105cf
  410554:	inc    ebx
  410555:	cmp    DWORD PTR [ecx+0x4a],ecx
  410558:	fistp  WORD PTR [edi+ebp*2+0x28]
  41055c:	fnstenv [edx+0x77]
  41055f:	test   DWORD PTR [edi+0x4a],esp
  410562:	ins    DWORD PTR es:[edi],dx
  410563:	adc    esi,DWORD PTR [edx]
  410565:	fimul  DWORD PTR [ebx+esi*4+0x63dd5c4d]
  41056c:	mov    al,0xea
  41056e:	adc    al,0x69
  410570:	repz call 0x22a2:0xd17c7a6b
  410578:	jmp    0x4105cf
  41057a:	jns    0x410599
  41057c:	mul    cl
  41057e:	dec    ecx
  41057f:	mov    ah,0xf1
  410581:	push   esi
  410582:	cli    
  410583:	cmp    esi,esp
  410585:	jg     0x41056d
  410587:	ss cwde 
  410589:	fisttp WORD PTR [ebx]
  41058b:	in     al,0xfa
  41058d:	inc    esi
  41058e:	sub    eax,0x574e8a60
  410593:	ficom  DWORD PTR [eax+esi*1]
  410596:	shl    edi,0x32
  410599:	test   edx,0x51a809ba
  41059f:	add    edi,ebx
  4105a1:	cmp    al,0x3d
  4105a3:	sub    edx,DWORD PTR [edi]
  4105a5:	jl     0x410621
  4105a7:	cmp    DWORD PTR [esi+0x5c704ea],edx
  4105ad:	bound  esi,QWORD PTR ds:0x92613598
  4105b3:	sbb    cl,BYTE PTR [ebx-0x2417a95b]
  4105b9:	(bad)  
  4105ba:	pop    ebx
  4105bb:	in     al,0x68
  4105bd:	jg     0x4105e1
  4105bf:	or     ecx,DWORD PTR [ebx]
  4105c1:	outs   dx,DWORD PTR ds:[esi]
  4105c2:	mov    ds:0xfc187035,eax
  4105c7:	das    
  4105c8:	sar    DWORD PTR [edi+0x3f],cl
  4105cb:	add    BYTE PTR [ecx+0x79fc630d],ch
  4105d1:	xchg   esp,eax
  4105d2:	rcl    esp,0x33
  4105d5:	push   eax
  4105d6:	pop    ebp
  4105d7:	add    BYTE PTR [ebp-0x7e6c2f2d],dl
  4105dd:	mov    ebx,DWORD PTR [eax]
  4105df:	stc    
  4105e0:	adc    ch,BYTE PTR [ebx]
  4105e2:	add    BYTE PTR [edi-0x274414f],dh
  4105e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105e9:	jp     0x4105db
  4105eb:	sub    al,0xf6
  4105ed:	mov    dl,BYTE PTR [eax-0xc]
  4105f0:	adc    al,0x15
  4105f2:	inc    edi
  4105f3:	dec    ebx
  4105f4:	lea    ecx,[ebp+0xfd781b1]
  4105fa:	mov    esp,DWORD PTR ds:0x2ed39523
  410600:	pop    edx
  410601:	push   ds
  410602:	mov    ah,0xc4
  410604:	jl     0x41059f
  410606:	(bad)  
  410607:	pop    ecx
  410608:	adc    eax,0xce402fbc
  41060d:	push   0xffffffbd
  41060f:	loope  0x41062c
  410611:	sbb    BYTE PTR [ebx-0x104d942f],0xaf
  410618:	je     0x410639
  41061a:	ror    DWORD PTR [ecx],0xb1
  41061d:	popf   
  41061e:	lea    edx,[ecx-0x39]
  410621:	cmc    
  410622:	mov    DWORD PTR [ebx+0x3],esp
  410625:	xchg   BYTE PTR [edi+0x3f],cl
  410628:	dec    esp
  410629:	pop    esi
  41062a:	test   DWORD PTR [eax],esp
  41062c:	sar    BYTE PTR [ecx+0x6e],1
  41062f:	mov    ch,0x40
  410631:	pop    ebp
  410632:	cld    
  410633:	lods   al,BYTE PTR ds:[esi]
  410634:	pop    ebx
  410635:	fwait
  410636:	push   ecx
  410637:	mov    al,0xbb
  410639:	mov    dh,BYTE PTR [ebp-0x2e]
  41063c:	push   edx
  41063d:	push   ecx
  41063e:	fwait
  41063f:	retf   0xf35f
  410642:	mov    DWORD PTR [ebx-0x33],esp
  410645:	std    
  410646:	aas    
  410647:	cli    
  410648:	sub    eax,0x1a71aac9
  41064d:	inc    edx
  41064e:	hlt    
  41064f:	jnp    0x4105fb
  410651:	and    al,0x83
  410653:	(bad)  
  410654:	adc    ah,ah
  410656:	add    eax,0xc93f643d
  41065b:	in     al,0x9e
  41065d:	lock loopne 0x4105f7
  410660:	jg     0x410607
  410662:	mov    cl,0x7f
  410664:	or     ah,BYTE PTR [edi]
  410666:	push   ebp
  410667:	outs   dx,BYTE PTR ds:[esi]
  410668:	loop   0x410636
  41066a:	and    DWORD PTR [esp+ebp*4+0x446eaf9e],eax
  410671:	mov    eax,ds:0x7e773e0e
  410676:	outs   dx,BYTE PTR ds:[esi]
  410677:	scas   al,BYTE PTR es:[edi]
  410678:	push   eax
  410679:	(bad)  
  41067a:	test   BYTE PTR [ecx+0x17],0x7d
  41067e:	mov    ebp,0x6a484245
  410683:	ja     0x4106b1
  410685:	push   0x48
  410687:	jl     0x4106e1
  410689:	xchg   DWORD PTR [ebx-0x7854cabc],esp
  41068f:	rcl    bl,cl
  410691:	pusha  
  410692:	push   esp
  410693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410694:	retf   
  410695:	sbb    esp,ebp
  410697:	jnp    0x4106c6
  410699:	sbb    eax,0x73e1b7ca
  41069e:	call   0xcfdfa70a
  4106a3:	ss push ss
  4106a5:	fisttp QWORD PTR [edx-0x32]
  4106a8:	lds    ecx,FWORD PTR [edi]
  4106aa:	icebp  
  4106ab:	shl    dl,cl
  4106ad:	ja     0x410719
  4106af:	mov    BYTE PTR ds:0x7a728824,bl
  4106b5:	in     al,0x70
  4106b7:	and    eax,0xc7b1ac8b
  4106bc:	sbb    DWORD PTR [edi+0x3f354ca9],0x3b
  4106c3:	fdiv   DWORD PTR [esi-0x3a]
  4106c6:	mov    edi,0xf755d25d
  4106cb:	mov    al,0xd4
  4106cd:	lock push ss
  4106cf:	(bad)  
  4106d0:	adc    eax,0x8fc96200
  4106d5:	push   esp
  4106d6:	push   edx
  4106d7:	and    bh,BYTE PTR [ecx-0x668666fb]
  4106dd:	add    eax,DWORD PTR [ebp+0x7fba4522]
  4106e3:	lds    edi,FWORD PTR [ebp+0x4e1423fe]
  4106e9:	or     edi,ecx
  4106eb:	iret   
  4106ec:	and    cl,BYTE PTR [edi+ebp*4-0x22586ce7]
  4106f3:	dec    esp
  4106f4:	inc    edi
  4106f5:	mov    bh,0x93
  4106f7:	add    edx,DWORD PTR [ecx]
  4106f9:	fprem1 
  4106fb:	push   ecx
	...
  41073c:	add    BYTE PTR [eax],al
  41073e:	add    BYTE PTR [ebx+0x1b],bh
  410741:	adc    BYTE PTR [eax],al
  410743:	lods   al,BYTE PTR ds:[esi]
  410744:	push   ebp
  410745:	adc    BYTE PTR [eax],al
  410747:	punpcklwd mm2,DWORD PTR [eax]
  41074a:	add    BYTE PTR [edi+0x6300100d],ch
  410750:	adc    BYTE PTR gs:[eax],al
  410753:	shl    BYTE PTR [edi],0x10
  410756:	add    BYTE PTR [ecx+0x7300101d],dh
  41075c:	js     0x41076e
  41075e:	add    BYTE PTR [ebp+0x38],al
  410761:	xor    eax,0x565f3235
  410766:	aaa    
  410767:	add    BYTE PTR [eax+0x30],dl
  41076a:	push   esp
  41076b:	pop    edi
  41076c:	inc    edi
  41076d:	dec    ebp
  41076e:	xor    bl,BYTE PTR [edx+0x5f]
  410771:	inc    esp
  410772:	ss xor BYTE PTR ss:0x4f494c00,dh
  41077a:	xor    BYTE PTR [edi],dh
  41077c:	pop    edi
  41077d:	dec    edx
  41077e:	inc    ecx
  41077f:	add    BYTE PTR [ecx+0x47],bl
  410782:	pop    edx
  410783:	xor    eax,0x4442595f
  410788:	dec    esi
  410789:	inc    ebx
  41078a:	pop    edi
  41078b:	xor    eax,0x334a0048
  410790:	push   ecx
  410791:	pop    edi
  410792:	xor    al,BYTE PTR [esi+0x35]
  410795:	push   eax
  410796:	cmp    DWORD PTR [eax],edi
  410798:	add    BYTE PTR [ebp+0x32],dl
  41079b:	push   edi
  41079c:	xor    BYTE PTR [edi+0x42],bl
  41079f:	dec    eax
  4107a0:	inc    ebp
  4107a1:	pop    edi
  4107a2:	xor    ebx,DWORD PTR [eax+0x46]
  4107a5:	dec    ebx
  4107a6:	inc    esp
  4107a7:	aaa    
  4107a8:	add    BYTE PTR [edi+0x46],cl
  4107ab:	push   esi
  4107ac:	xor    al,0x34
  4107ae:	pop    edi
  4107af:	inc    edi
  4107b0:	inc    edi
  4107b1:	push   esp
  4107b2:	pop    edx
  4107b3:	inc    edx
  4107b4:	pop    edi
  4107b5:	push   ebp
  4107b6:	add    BYTE PTR [edi+0x41],al
  4107b9:	xor    al,0x39
  4107bb:	xor    BYTE PTR [edi+0x39],bl
  4107be:	inc    edx
  4107bf:	add    BYTE PTR [esi+0x36],cl
  4107c2:	xor    bl,BYTE PTR [edi+0x41]
  4107c5:	xor    ebx,DWORD PTR ss:[edi+0x38]
  4107c9:	xor    eax,DWORD PTR [ecx+0x52]
  4107cc:	push   ebx
  4107cd:	pop    edi
  4107ce:	inc    esi
  4107cf:	add    BYTE PTR [ecx+0x57],al
  4107d2:	push   ebp
  4107d3:	pop    edi
  4107d4:	inc    esi
  4107d5:	pop    edx
  4107d6:	push   ebp
  4107d7:	xor    dh,BYTE PTR [esi]
  4107d9:	add    BYTE PTR [edi+0x48],al
  4107dc:	xor    BYTE PTR [edi+0x33],bl
  4107df:	inc    ebp
  4107e0:	cmp    DWORD PTR [edi+0x5f],ecx
  4107e3:	push   ebx
  4107e4:	cmp    DWORD PTR [eax],eax
  4107e6:	push   esp
  4107e7:	xor    al,0x51
  4107e9:	cmp    BYTE PTR [esi],dh
  4107eb:	pop    edi
  4107ec:	push   esp
  4107ed:	dec    ecx
  4107ee:	dec    edi
  4107ef:	add    BYTE PTR [esp+ecx*2+0x5a],al
  4107f3:	pop    edi
  4107f4:	pop    edx
  4107f5:	dec    edx
  4107f6:	cmp    BYTE PTR [ebx+eax*2+0x5f],dl
  4107fa:	cmp    DWORD PTR [ecx],edi
  4107fc:	add    BYTE PTR [eax+0x4e],dl
  4107ff:	xor    al,0x5f
  410801:	dec    esi
  410802:	inc    esp
  410803:	xor    DWORD PTR [edi],esi
  410805:	pop    edi
  410806:	cmp    DWORD PTR [ecx+0x41],edx
  410809:	add    BYTE PTR [edx+0x54],cl
  41080c:	xor    bl,BYTE PTR [edi+0x50]
  41080f:	push   ebx
  410810:	push   esi
  410811:	inc    esp
  410812:	pop    edi
  410813:	push   edx
  410814:	xor    BYTE PTR [ecx+0x0],bl
  410817:	push   esi
  410818:	inc    esp
  410819:	push   esp
  41081a:	pop    edi
  41081b:	dec    esp
  41081c:	xor    al,0x33
  41081e:	cmp    DWORD PTR [eax+eax*1+0x59],edx
  410822:	inc    edi
  410823:	inc    ebp
  410824:	pop    edi
  410825:	push   ebp
  410826:	pop    edx
  410827:	push   eax
  410828:	dec    edi
  410829:	pop    edi
  41082a:	push   esi
  41082b:	xor    BYTE PTR [eax],al
  41082d:	pop    eax
  41082e:	push   edi
  41082f:	push   esi
  410830:	cmp    BYTE PTR [edi+0x47],bl
  410833:	dec    ecx
  410834:	push   esp
  410835:	push   edx
  410836:	dec    ebx
  410837:	xor    BYTE PTR [edi+0x0],cl
  41083a:	dec    ecx
  41083b:	dec    esi
  41083c:	xor    eax,0x33345f30
  410841:	push   eax
  410842:	dec    edx
  410843:	cmp    BYTE PTR [eax],al
  410845:	pop    eax
  410846:	inc    ecx
  410847:	dec    esi
  410848:	pop    edi
  410849:	inc    edx
  41084a:	push   ebp
  41084b:	push   ecx
  41084c:	pop    edi
  41084d:	inc    ecx
  41084e:	add    BYTE PTR [edi+0x58],al
  410851:	xor    BYTE PTR [edi+0x4c],bl
  410854:	dec    ebp
  410855:	cmp    DWORD PTR [ebp+0x5f],edx
  410858:	push   esp
  410859:	push   edx
  41085a:	add    BYTE PTR [eax+0x38],cl
  41085d:	dec    edi
  41085e:	xor    eax,0x594b535f
  410863:	xor    BYTE PTR [ebp+0x0],cl
  410866:	inc    ecx
  410867:	dec    eax
  410868:	xor    DWORD PTR [edi+0x4e],ebx
  41086b:	ss inc esp
  41086d:	dec    eax
  41086e:	cmp    DWORD PTR [eax],eax
  410870:	push   esi
  410871:	push   esp
  410872:	aaa    
  410873:	xor    bh,BYTE PTR [ecx]
  410875:	xor    al,0x31
  410877:	pop    edi
  410878:	push   edx
  410879:	push   edi
  41087a:	push   edx
  41087b:	dec    ecx
  41087c:	pop    edi
  41087d:	inc    esp
  41087e:	add    BYTE PTR [edi+0x52],dl
  410881:	pop    ecx
  410882:	xor    eax,0x5045395f
  410887:	pop    edi
  410888:	xor    eax,DWORD PTR [eax]
  41088a:	inc    ebp
  41088b:	xor    dl,BYTE PTR [ebx+0x39]
  41088e:	xor    dh,BYTE PTR [esi]
  410890:	xor    eax,0x4900525f
  410895:	push   esp
  410896:	xor    bl,BYTE PTR [edi+0x41]
  410899:	dec    edx
  41089a:	xor    eax,0x4c3737
  41089f:	push   ecx
  4108a0:	add    BYTE PTR [edi+0x0],al
  4108a3:	pop    ecx
  4108a4:	add    BYTE PTR [edi+0x0],bl
  4108a7:	push   ebx
  4108a8:	add    BYTE PTR [ebx+0x0],al
  4108ab:	xor    al,BYTE PTR [eax]
  4108ad:	pop    edx
  4108ae:	add    BYTE PTR [edi+0x0],dl
  4108b1:	add    BYTE PTR [eax],al
  4108b3:	push   edx
  4108b4:	add    BYTE PTR [eax+eax*1+0x4d],dl
  4108b8:	add    BYTE PTR [edi+0x0],bl
  4108bb:	dec    eax
  4108bc:	add    BYTE PTR [ebx+0x0],cl
  4108bf:	xor    DWORD PTR [eax],eax
  4108c1:	pop    edi
  4108c2:	add    BYTE PTR [ecx+0x0],al
  4108c5:	push   ebp
  4108c6:	add    BYTE PTR [ecx],bh
  4108c8:	add    BYTE PTR [esi+0x0],dl
  4108cb:	xor    al,BYTE PTR [eax]
  4108cd:	pop    edi
  4108ce:	add    BYTE PTR [edx],dh
  4108d0:	add    BYTE PTR [eax],al
  4108d2:	add    BYTE PTR [ecx+0x0],dl
  4108d5:	xor    al,0x0
  4108d7:	inc    edx
  4108d8:	add    BYTE PTR [edi+0x0],bl
  4108db:	inc    esp
  4108dc:	add    BYTE PTR [esi+0x0],dl
  4108df:	xor    eax,0x5f005500
  4108e4:	add    BYTE PTR [ebx+0x0],al
  4108e7:	inc    ebx
  4108e8:	add    BYTE PTR [eax],al
  4108ea:	add    BYTE PTR [eax+0x0],cl
  4108ed:	inc    edx
  4108ee:	add    BYTE PTR [ecx+0x0],dl
  4108f1:	pop    edi
  4108f2:	add    BYTE PTR [eax+eax*1+0x38],dl
  4108f6:	add    BYTE PTR [eax+0x0],dl
  4108f9:	push   edx
  4108fa:	add    BYTE PTR [ecx+0x0],cl
  4108fd:	pop    edi
  4108fe:	add    BYTE PTR [ebp+0x0],al
  410901:	dec    ebp
  410902:	add    BYTE PTR [ebp+0x0],dl
  410905:	add    BYTE PTR [eax],al
  410907:	inc    edi
  410908:	add    BYTE PTR [edi+0x0],cl
  41090b:	xor    eax,0x32005f00
  410910:	add    BYTE PTR [ebx+0x0],dl
  410913:	inc    ebp
  410914:	add    BYTE PTR [ecx],bh
  410916:	add    BYTE PTR [esi],dh
  410918:	add    BYTE PTR [edi+0x0],bl
  41091b:	pop    eax
  41091c:	add    BYTE PTR [edx+0x0],bl
  41091f:	xor    al,0x0
  410921:	pop    edi
  410922:	add    BYTE PTR [edi+0x0],cl
  410925:	add    BYTE PTR [eax],al
  410927:	push   ebx
  410928:	add    BYTE PTR [eax],dh
  41092a:	add    BYTE PTR [ecx+0x0],dl
  41092d:	pop    edi
  41092e:	add    BYTE PTR [ebp+0x0],dl
  410931:	dec    ecx
  410932:	add    BYTE PTR [ecx+0x0],bl
  410935:	xor    al,BYTE PTR [eax]
  410937:	add    BYTE PTR [eax],al
  410939:	dec    eax
  41093a:	add    BYTE PTR [edi],dh
  41093c:	add    BYTE PTR [ecx+0x0],bl
  41093f:	aaa    
  410940:	add    BYTE PTR [edi+0x0],bl
  410943:	inc    esi
  410944:	add    BYTE PTR [edi],dh
  410946:	add    BYTE PTR [ecx+0x0],bl
  410949:	inc    esp
  41094a:	add    BYTE PTR [edi+0x0],bl
  41094d:	xor    eax,0x52000000
  410952:	add    BYTE PTR [eax+0x0],dl
  410955:	inc    esi
  410956:	add    BYTE PTR [edi+0x0],bl
  410959:	dec    esp
  41095a:	add    BYTE PTR [ecx+0x0],al
  41095d:	push   eax
  41095e:	add    BYTE PTR [edi+0x0],bl
  410961:	inc    ecx
  410962:	add    BYTE PTR [edi],dh
  410964:	add    BYTE PTR [eax+eax*1+0x4a],al
  410968:	add    BYTE PTR [ebp+0x0],al
  41096b:	pop    edi
  41096c:	add    BYTE PTR [eax+eax*1],dh
  41096f:	add    BYTE PTR [eax],al
  410971:	dec    esp
  410972:	add    BYTE PTR [edi],dh
  410974:	add    BYTE PTR [ebp+0x0],cl
  410977:	cmp    BYTE PTR [eax],al
  410979:	xor    al,BYTE PTR [eax]
  41097b:	pop    edi
  41097c:	add    BYTE PTR [eax],bh
  41097e:	add    BYTE PTR [ecx+0x0],al
  410981:	pop    edx
  410982:	add    BYTE PTR [edx+0x0],bl
  410985:	pop    edi
  410986:	add    BYTE PTR [ebx],dh
  410988:	add    BYTE PTR [ebx+0x0],dl
  41098b:	add    BYTE PTR [eax],al
  41098d:	push   esi
  41098e:	add    BYTE PTR [eax],bh
  410990:	add    BYTE PTR [esi+0x0],dl
  410993:	xor    al,BYTE PTR [eax]
  410995:	pop    edi
  410996:	add    BYTE PTR [esi+0x0],al
  410999:	inc    ebx
  41099a:	add    BYTE PTR [edi+0x0],al
  41099d:	push   edi
  41099e:	add    BYTE PTR [edi+0x0],bl
  4109a1:	dec    eax
  4109a2:	add    BYTE PTR [edx+0x0],cl
  4109a5:	cmp    DWORD PTR [eax],eax
  4109a7:	aaa    
  4109a8:	add    BYTE PTR [eax],al
  4109aa:	add    BYTE PTR [ecx+0x0],cl
  4109ad:	dec    edx
  4109ae:	add    BYTE PTR [ecx+0x0],al
  4109b1:	pop    edi
  4109b2:	add    BYTE PTR [edx+0x0],cl
  4109b5:	inc    esi
  4109b6:	add    BYTE PTR [edi+0x0],dl
  4109b9:	xor    eax,DWORD PTR [eax]
  4109bb:	dec    ebp
  4109bc:	add    BYTE PTR [edi+0x0],bl
  4109bf:	push   eax
  4109c0:	add    BYTE PTR [ecx+0x0],al
  4109c3:	add    BYTE PTR [eax],al
  4109c5:	dec    edi
  4109c6:	add    BYTE PTR [ecx+0x0],bl
  4109c9:	dec    eax
  4109ca:	add    BYTE PTR [edi+0x0],bl
  4109cd:	xor    eax,0x0
	...
  4109da:	add    al,0x0
  4109dc:	add    BYTE PTR [eax],al
  4109de:	push   cs
  4109df:	add    BYTE PTR [eax],al
  4109e1:	add    BYTE PTR [eax],al
  4109e3:	pop    es
  4109e4:	add    BYTE PTR [eax-0x7fffff80],al
  4109ea:	cs pop es
  4109ec:	add    BYTE PTR [eax-0x7fffff68],al
  4109f2:	test   al,0x7
  4109f4:	add    BYTE PTR [eax-0x7fffff30],al
  4109fa:	rol    BYTE PTR [edi],cl
  4109fc:	add    BYTE PTR [eax-0x7fffff18],al
  410a02:	add    al,0x8
  410a04:	add    BYTE PTR [eax-0x7ffffef0],al
  410a0a:	xor    BYTE PTR [eax],cl
  410a0c:	add    BYTE PTR [eax-0x7ffffed8],al
  410a12:	pusha  
  410a13:	or     BYTE PTR [eax],al
  410a15:	adc    BYTE PTR [eax+0x1],0x0
  410a19:	cmp    BYTE PTR [edx+0x8],0x0
  410a1d:	sub    BYTE PTR [eax+0x1],0x0
  410a21:	adc    dh,0x8
  410a24:	add    BYTE PTR [eax-0x7ffffe60],al
  410a2a:	call   0xb8c10a37
  410a2f:	add    DWORD PTR [eax],eax
  410a31:	sbb    BYTE PTR [eax],0x9
  410a34:	add    BYTE PTR [eax-0x7ffffe28],al
  410a3a:	dec    eax
  410a3b:	or     DWORD PTR [eax],eax
  410a3d:	add    BYTE PTR [eax],0x2
  410a40:	add    BYTE PTR [eax-0x7ffff67e],al
  410a46:	sbb    BYTE PTR [edx],al
  410a48:	add    BYTE PTR [eax-0x7ffff64e],al
  410a4e:	cmp    BYTE PTR [edx],al
  410a50:	add    BYTE PTR [eax+0x0],al
  410a56:	add    BYTE PTR [eax],al
  410a58:	add    BYTE PTR [eax],al
  410a5a:	add    al,0x0
  410a5c:	add    BYTE PTR [eax],al
  410a5e:	add    DWORD PTR [eax],eax
  410a60:	add    BYTE PTR [eax],al
  410a62:	sbb    al,0x7
  410a64:	add    BYTE PTR [eax-0x7ffffdb0],al
	...
  410a72:	add    al,0x0
  410a74:	add    BYTE PTR [eax],al
  410a76:	add    al,0x0
  410a78:	add    DWORD PTR [eax],eax
  410a7a:	dec    esi
  410a7b:	pop    es
  410a7c:	add    BYTE PTR [eax-0x7ffffd98],al
  410a82:	bound  eax,QWORD PTR [edi]
  410a84:	add    BYTE PTR [eax-0x7ffffd80],al
  410a8a:	jp     0x410a93
  410a8c:	add    BYTE PTR [eax-0x7ffffd68],al
  410a92:	mov    es,WORD PTR [edi]
  410a94:	add    BYTE PTR [eax-0x7ffffd50],al
  410a9a:	and    DWORD PTR [edx+0x0],0x0
  410a9e:	enter  0x2,0x80
	...
  410aaa:	add    al,0x0
  410aac:	add    BYTE PTR [eax],al
  410aae:	add    DWORD PTR [eax],eax
  410ab0:	add    BYTE PTR [eax],al
  410ab2:	mov    edx,0xe0800007
  410ab7:	add    al,BYTE PTR [eax]
  410ab9:	add    BYTE PTR [eax],0x0
  410abc:	add    BYTE PTR [eax],al
  410abe:	add    BYTE PTR [eax],al
  410ac0:	add    BYTE PTR [eax],al
  410ac2:	add    al,0x0
  410ac4:	add    BYTE PTR [eax],al
  410ac6:	add    DWORD PTR [eax],eax
  410ac8:	add    al,BYTE PTR [eax]
  410aca:	repnz pop es
  410acc:	add    BYTE PTR [eax-0x7ffffd08],al
  410ad2:	fstp   QWORD PTR [esi]
  410ad4:	add    BYTE PTR [eax],al
  410ad6:	adc    BYTE PTR [ebx],al
  410ad8:	add    BYTE PTR [eax+0x2c95],al
  410ade:	sub    BYTE PTR [ebx],al
  410ae0:	add    BYTE PTR [eax+0x0],al
  410ae6:	add    BYTE PTR [eax],al
  410ae8:	add    BYTE PTR [eax],al
  410aea:	add    al,0x0
  410aec:	add    BYTE PTR [eax],al
  410aee:	add    DWORD PTR [eax],eax
  410af0:	add    BYTE PTR [eax],al
  410af2:	push   ds
  410af3:	or     BYTE PTR [eax],al
  410af5:	add    BYTE PTR [eax+0x3],0x0
  410af9:	add    BYTE PTR [eax],0x0
  410afc:	add    BYTE PTR [eax],al
  410afe:	add    BYTE PTR [eax],al
  410b00:	add    BYTE PTR [eax],al
  410b02:	add    al,0x0
  410b04:	add    BYTE PTR [eax],al
  410b06:	add    DWORD PTR [eax],eax
  410b08:	add    al,BYTE PTR [eax]
  410b0a:	dec    esi
  410b0b:	or     BYTE PTR [eax],al
  410b0d:	sbb    BYTE PTR [eax+0x3],0x0
  410b11:	sub    BYTE PTR [ecx+edx*1+0x0],0x0
  410b16:	jo     0x410b1b
  410b18:	add    BYTE PTR [eax+0x24ad],al
  410b1e:	mov    BYTE PTR [ebx],al
  410b20:	add    BYTE PTR [eax+0x0],al
  410b26:	add    BYTE PTR [eax],al
  410b28:	add    BYTE PTR [eax],al
  410b2a:	add    al,0x0
  410b2c:	add    BYTE PTR [eax],al
  410b2e:	add    BYTE PTR [eax],al
  410b30:	add    DWORD PTR [eax],eax
  410b32:	jg     0x410b43
  410b34:	add    BYTE PTR [eax],al
  410b36:	mov    al,ds:0x800003
  410b3b:	add    BYTE PTR [eax],al
  410b3d:	add    BYTE PTR [eax],al
  410b3f:	add    BYTE PTR [eax],al
  410b41:	add    BYTE PTR [eax+eax*1],al
  410b44:	add    BYTE PTR [eax],al
  410b46:	add    eax,DWORD PTR [eax]
  410b48:	add    al,BYTE PTR [eax]
  410b4a:	nop
  410b4b:	or     BYTE PTR [eax],al
  410b4d:	cmp    BYTE PTR [eax-0x537ffffd],0x8
  410b54:	add    BYTE PTR [eax-0x7ffffc30],al
  410b5a:	mov    esi,0xe8800008
  410b5f:	add    eax,DWORD PTR [eax]
  410b61:	xor    bh,0x3
  410b64:	add    BYTE PTR [eax],al
  410b66:	add    BYTE PTR [eax+eax*1],al
  410b69:	or     BYTE PTR [esi+0x18000018],0x4
  410b70:	add    BYTE PTR [eax+0x0],al
  410b76:	add    BYTE PTR [eax],al
  410b78:	add    BYTE PTR [eax],al
  410b7a:	add    al,0x0
  410b7c:	add    BYTE PTR [eax],al
  410b7e:	add    BYTE PTR [eax],al
  410b80:	add    DWORD PTR [eax],eax
  410b82:	mov    esp,0x30000047
  410b87:	add    al,0x0
  410b89:	add    BYTE PTR [eax],0x0
  410b8c:	add    BYTE PTR [eax],al
  410b8e:	add    BYTE PTR [eax],al
  410b90:	add    BYTE PTR [eax],al
  410b92:	add    al,0x0
  410b94:	add    BYTE PTR [eax],al
  410b96:	add    DWORD PTR [eax],eax
  410b98:	add    DWORD PTR [eax],eax
  410b9a:	add    cl,BYTE PTR [ecx]
  410b9c:	add    BYTE PTR [eax-0x7ffffbb8],al
  410ba2:	shr    BYTE PTR [edi+0x0],cl
  410ba5:	add    BYTE PTR [eax+0x4],ah
  410ba8:	add    BYTE PTR [eax+0x0],al
  410bae:	add    BYTE PTR [eax],al
  410bb0:	add    BYTE PTR [eax],al
  410bb2:	add    al,0x0
  410bb4:	add    BYTE PTR [eax],al
  410bb6:	add    DWORD PTR [eax],eax
  410bb8:	add    al,BYTE PTR [eax]
  410bba:	xor    al,0x9
  410bbc:	add    BYTE PTR [eax-0x7ffffb88],al
  410bc2:	mov    ds:0x90000012,eax
  410bc7:	add    al,0x0
  410bc9:	and    BYTE PTR [edx],0x7b
  410bcc:	add    BYTE PTR [eax],al
  410bce:	test   al,0x4
  410bd0:	add    BYTE PTR [eax+0x0],al
  410bd6:	add    BYTE PTR [eax],al
  410bd8:	add    BYTE PTR [eax],al
  410bda:	add    al,0x0
  410bdc:	add    BYTE PTR [eax],al
  410bde:	add    DWORD PTR [eax],eax
  410be0:	add    BYTE PTR [eax],al
  410be2:	or     DWORD PTR fs:[eax],eax
  410be5:	add    al,0x4
  410be8:	add    BYTE PTR [eax+0x0],al
  410bee:	add    BYTE PTR [eax],al
  410bf0:	add    BYTE PTR [eax],al
  410bf2:	add    al,0x0
  410bf4:	add    BYTE PTR [eax],al
  410bf6:	add    DWORD PTR [eax],eax
  410bf8:	add    DWORD PTR [eax],eax
  410bfa:	xchg   esp,eax
  410bfb:	or     DWORD PTR [eax],eax
  410bfd:	sbb    al,0x4
  410c00:	add    BYTE PTR [eax+0x7254],al
  410c06:	lock add al,0x0
  410c09:	add    BYTE PTR [eax],0x0
  410c0c:	add    BYTE PTR [eax],al
  410c0e:	add    BYTE PTR [eax],al
  410c10:	add    BYTE PTR [eax],al
  410c12:	add    al,0x0
  410c14:	add    BYTE PTR [eax],al
  410c16:	add    DWORD PTR [eax],eax
  410c18:	add    BYTE PTR [eax],al
  410c1a:	int3   
  410c1b:	or     DWORD PTR [eax],eax
  410c1d:	or     BYTE PTR [eax],0x5
  410c20:	add    BYTE PTR [eax+0x0],al
  410c26:	add    BYTE PTR [eax],al
  410c28:	add    BYTE PTR [eax],al
  410c2a:	add    al,0x0
  410c2c:	add    BYTE PTR [eax],al
  410c2e:	add    BYTE PTR [eax],al
  410c30:	add    DWORD PTR [eax],eax
  410c32:	or     DWORD PTR [eax+eax*1],eax
  410c35:	add    BYTE PTR [eax],ah
  410c37:	add    eax,0x0
  410c3c:	add    BYTE PTR [eax],al
  410c3e:	add    BYTE PTR [eax],al
  410c40:	add    BYTE PTR [eax],al
  410c42:	add    al,0x0
  410c44:	add    BYTE PTR [eax],al
  410c46:	add    BYTE PTR [eax],al
  410c48:	add    DWORD PTR [eax],eax
  410c4a:	or     DWORD PTR [eax+eax*1],eax
  410c4d:	add    BYTE PTR [eax],dh
  410c4f:	add    eax,0x0
  410c54:	add    BYTE PTR [eax],al
  410c56:	add    BYTE PTR [eax],al
  410c58:	add    BYTE PTR [eax],al
  410c5a:	add    al,0x0
  410c5c:	add    BYTE PTR [eax],al
  410c5e:	add    BYTE PTR [eax],al
  410c60:	add    DWORD PTR [eax],eax
  410c62:	or     DWORD PTR [eax+eax*1],eax
  410c65:	add    BYTE PTR [eax+0x5],al
	...
  410c70:	add    BYTE PTR [eax],al
  410c72:	add    al,0x0
  410c74:	add    BYTE PTR [eax],al
  410c76:	add    BYTE PTR [eax],al
  410c78:	add    DWORD PTR [eax],eax
  410c7a:	or     DWORD PTR [eax+eax*1],eax
  410c7d:	add    BYTE PTR [eax+0x5],dl
	...
  410c88:	add    BYTE PTR [eax],al
  410c8a:	add    al,0x0
  410c8c:	add    BYTE PTR [eax],al
  410c8e:	add    BYTE PTR [eax],al
  410c90:	add    DWORD PTR [eax],eax
  410c92:	or     DWORD PTR [eax+eax*1],eax
  410c95:	add    BYTE PTR [eax+0x5],ah
	...
  410ca0:	add    BYTE PTR [eax],al
  410ca2:	add    al,0x0
  410ca4:	add    BYTE PTR [eax],al
  410ca6:	add    BYTE PTR [eax],al
  410ca8:	add    DWORD PTR [eax],eax
  410caa:	or     DWORD PTR [eax+eax*1],eax
  410cad:	add    BYTE PTR [eax+0x5],dh
	...
  410cb8:	add    BYTE PTR [eax],al
  410cba:	add    al,0x0
  410cbc:	add    BYTE PTR [eax],al
  410cbe:	add    BYTE PTR [eax],al
  410cc0:	add    DWORD PTR [eax],eax
  410cc2:	or     DWORD PTR [eax+eax*1],eax
  410cc5:	add    BYTE PTR [eax+0x5],al
  410ccb:	add    BYTE PTR [eax],al
  410ccd:	add    BYTE PTR [eax],al
  410ccf:	add    BYTE PTR [eax],al
  410cd1:	add    BYTE PTR [eax+eax*1],al
  410cd4:	add    BYTE PTR [eax],al
  410cd6:	add    BYTE PTR [eax],al
  410cd8:	add    DWORD PTR [eax],eax
  410cda:	or     DWORD PTR [eax+eax*1],eax
  410cdd:	add    BYTE PTR [eax+0x5],dl
  410ce3:	add    BYTE PTR [eax],al
  410ce5:	add    BYTE PTR [eax],al
  410ce7:	add    BYTE PTR [eax],al
  410ce9:	add    BYTE PTR [eax+eax*1],al
  410cec:	add    BYTE PTR [eax],al
  410cee:	add    BYTE PTR [eax],al
  410cf0:	add    DWORD PTR [eax],eax
  410cf2:	or     DWORD PTR [eax+eax*1],eax
  410cf5:	add    BYTE PTR [eax+0x5],ah
  410cfb:	add    BYTE PTR [eax],al
  410cfd:	add    BYTE PTR [eax],al
  410cff:	add    BYTE PTR [eax],al
  410d01:	add    BYTE PTR [eax+eax*1],al
  410d04:	add    BYTE PTR [eax],al
  410d06:	add    BYTE PTR [eax],al
  410d08:	add    DWORD PTR [eax],eax
  410d0a:	or     DWORD PTR [eax+eax*1],eax
  410d0d:	add    BYTE PTR [eax+0x5],dh
  410d13:	add    BYTE PTR [eax],al
  410d15:	add    BYTE PTR [eax],al
  410d17:	add    BYTE PTR [eax],al
  410d19:	add    BYTE PTR [eax+eax*1],al
  410d1c:	add    BYTE PTR [eax],al
  410d1e:	add    BYTE PTR [eax],al
  410d20:	add    DWORD PTR [eax],eax
  410d22:	or     DWORD PTR [eax+eax*1],eax
  410d25:	add    al,al
  410d27:	add    eax,0x0
  410d2c:	add    BYTE PTR [eax],al
  410d2e:	add    BYTE PTR [eax],al
  410d30:	add    BYTE PTR [eax],al
  410d32:	add    al,0x0
  410d34:	add    BYTE PTR [eax],al
  410d36:	add    BYTE PTR [eax],al
  410d38:	add    DWORD PTR [eax],eax
  410d3a:	or     DWORD PTR [eax+eax*1],eax
  410d3d:	add    al,dl
  410d3f:	add    eax,0x0
  410d44:	add    BYTE PTR [eax],al
  410d46:	add    BYTE PTR [eax],al
  410d48:	add    BYTE PTR [eax],al
  410d4a:	add    al,0x0
  410d4c:	add    BYTE PTR [eax],al
  410d4e:	add    BYTE PTR [eax],al
  410d50:	add    DWORD PTR [eax],eax
  410d52:	or     DWORD PTR [eax+eax*1],eax
  410d55:	add    al,ah
  410d57:	add    eax,0x0
  410d5c:	add    BYTE PTR [eax],al
  410d5e:	add    BYTE PTR [eax],al
  410d60:	add    BYTE PTR [eax],al
  410d62:	add    al,0x0
  410d64:	add    BYTE PTR [eax],al
  410d66:	add    BYTE PTR [eax],al
  410d68:	add    DWORD PTR [eax],eax
  410d6a:	or     DWORD PTR [eax+eax*1],eax
  410d6d:	add    al,dh
  410d6f:	add    eax,0x0
  410d74:	add    BYTE PTR [eax],al
  410d76:	add    BYTE PTR [eax],al
  410d78:	add    BYTE PTR [eax],al
  410d7a:	add    al,0x0
  410d7c:	add    BYTE PTR [eax],al
  410d7e:	add    BYTE PTR [eax],al
  410d80:	add    DWORD PTR [eax],eax
  410d82:	or     DWORD PTR [eax+eax*1],eax
  410d85:	add    BYTE PTR [eax],al
  410d87:	push   es
	...
  410d90:	add    BYTE PTR [eax],al
  410d92:	add    al,0x0
  410d94:	add    BYTE PTR [eax],al
  410d96:	add    BYTE PTR [eax],al
  410d98:	add    DWORD PTR [eax],eax
  410d9a:	or     DWORD PTR [eax+eax*1],eax
  410d9d:	add    BYTE PTR [eax],dl
  410d9f:	push   es
	...
  410da8:	add    BYTE PTR [eax],al
  410daa:	add    al,0x0
  410dac:	add    BYTE PTR [eax],al
  410dae:	add    BYTE PTR [eax],al
  410db0:	add    DWORD PTR [eax],eax
  410db2:	or     DWORD PTR [eax+eax*1],eax
  410db5:	add    BYTE PTR [eax],ah
  410db7:	push   es
	...
  410dc0:	add    BYTE PTR [eax],al
  410dc2:	add    al,0x0
  410dc4:	add    BYTE PTR [eax],al
  410dc6:	add    BYTE PTR [eax],al
  410dc8:	add    DWORD PTR [eax],eax
  410dca:	or     DWORD PTR [eax+eax*1],eax
  410dcd:	add    BYTE PTR [eax],dh
  410dcf:	push   es
	...
  410dd8:	add    BYTE PTR [eax],al
  410dda:	add    al,0x0
  410ddc:	add    BYTE PTR [eax],al
  410dde:	add    BYTE PTR [eax],al
  410de0:	add    DWORD PTR [eax],eax
  410de2:	or     DWORD PTR [eax+eax*1],eax
  410de5:	add    BYTE PTR [eax+0x6],al
	...
  410df0:	add    BYTE PTR [eax],al
  410df2:	add    al,0x0
  410df4:	add    BYTE PTR [eax],al
  410df6:	add    BYTE PTR [eax],al
  410df8:	add    DWORD PTR [eax],eax
  410dfa:	or     DWORD PTR [eax+eax*1],eax
  410dfd:	add    BYTE PTR [eax+0x6],dl
	...
  410e08:	add    BYTE PTR [eax],al
  410e0a:	add    al,0x0
  410e0c:	add    BYTE PTR [eax],al
  410e0e:	add    BYTE PTR [eax],al
  410e10:	add    DWORD PTR [eax],eax
  410e12:	or     DWORD PTR [eax+eax*1],eax
  410e15:	add    BYTE PTR [eax+0x6],ah
	...
  410e20:	add    BYTE PTR [eax],al
  410e22:	add    al,0x0
  410e24:	add    BYTE PTR [eax],al
  410e26:	add    BYTE PTR [eax],al
  410e28:	add    DWORD PTR [eax],eax
  410e2a:	or     DWORD PTR [eax+eax*1],eax
  410e2d:	add    BYTE PTR [eax+0x6],dh
	...
  410e38:	add    BYTE PTR [eax],al
  410e3a:	add    al,0x0
  410e3c:	add    BYTE PTR [eax],al
  410e3e:	add    BYTE PTR [eax],al
  410e40:	add    DWORD PTR [eax],eax
  410e42:	or     DWORD PTR [eax+eax*1],eax
  410e45:	add    BYTE PTR [eax+0x6],al
  410e4b:	add    BYTE PTR [eax],al
  410e4d:	add    BYTE PTR [eax],al
  410e4f:	add    BYTE PTR [eax],al
  410e51:	add    BYTE PTR [eax+eax*1],al
  410e54:	add    BYTE PTR [eax],al
  410e56:	add    BYTE PTR [eax],al
  410e58:	add    DWORD PTR [eax],eax
  410e5a:	or     DWORD PTR [eax+eax*1],eax
  410e5d:	add    BYTE PTR [eax+0x6],dl
  410e63:	add    BYTE PTR [eax],al
  410e65:	add    BYTE PTR [eax],al
  410e67:	add    BYTE PTR [eax],al
  410e69:	add    BYTE PTR [eax+eax*1],al
  410e6c:	add    BYTE PTR [eax],al
  410e6e:	add    BYTE PTR [eax],al
  410e70:	add    DWORD PTR [eax],eax
  410e72:	or     DWORD PTR [eax+eax*1],eax
  410e75:	add    BYTE PTR [eax+0x6],ah
  410e7b:	add    BYTE PTR [eax],al
  410e7d:	add    BYTE PTR [eax],al
  410e7f:	add    BYTE PTR [eax],al
  410e81:	add    BYTE PTR [eax+eax*1],al
  410e84:	add    BYTE PTR [eax],al
  410e86:	add    BYTE PTR [eax],al
  410e88:	add    DWORD PTR [eax],eax
  410e8a:	or     DWORD PTR [eax+eax*1],eax
  410e8d:	add    BYTE PTR [eax+0x6],dh
  410e93:	add    BYTE PTR [eax],al
  410e95:	add    BYTE PTR [eax],al
  410e97:	add    BYTE PTR [eax],al
  410e99:	add    BYTE PTR [eax+eax*1],al
  410e9c:	add    BYTE PTR [eax],al
  410e9e:	add    BYTE PTR [eax],al
  410ea0:	add    DWORD PTR [eax],eax
  410ea2:	or     DWORD PTR [eax+eax*1],eax
  410ea5:	add    al,al
  410ea7:	push   es
	...
  410eb0:	add    BYTE PTR [eax],al
  410eb2:	add    al,0x0
  410eb4:	add    BYTE PTR [eax],al
  410eb6:	add    BYTE PTR [eax],al
  410eb8:	add    DWORD PTR [eax],eax
  410eba:	or     DWORD PTR [eax+eax*1],eax
  410ebd:	add    al,dl
  410ebf:	push   es
	...
  410ec8:	add    BYTE PTR [eax],al
  410eca:	add    al,0x0
  410ecc:	add    BYTE PTR [eax],al
  410ece:	add    BYTE PTR [eax],al
  410ed0:	add    DWORD PTR [eax],eax
  410ed2:	or     DWORD PTR [eax+eax*1],eax
  410ed5:	add    al,ah
  410ed7:	push   es
	...
  410ee0:	add    BYTE PTR [eax],al
  410ee2:	add    al,0x0
  410ee4:	add    BYTE PTR [eax],al
  410ee6:	add    BYTE PTR [eax],al
  410ee8:	add    DWORD PTR [eax],eax
  410eea:	or     DWORD PTR [eax+eax*1],eax
  410eed:	add    al,dh
  410eef:	push   es
  410ef0:	add    BYTE PTR [eax],al
  410ef2:	ret    0x113
  410ef5:	add    BYTE PTR [ecx],ah
  410ef7:	or     DWORD PTR [eax],eax
  410ef9:	add    ah,ah
  410efb:	add    al,0x0
  410efd:	add    BYTE PTR [eax],al
  410eff:	add    BYTE PTR [eax],al
  410f01:	add    bl,ah
  410f03:	sbb    al,0x1
  410f05:	add    BYTE PTR ds:0xe4000009,dl
  410f0b:	add    al,0x0
  410f0d:	add    BYTE PTR [eax],al
  410f0f:	add    BYTE PTR [eax],al
  410f11:	add    al,bh
  410f13:	and    eax,0x9110001
  410f18:	add    BYTE PTR [eax],al
  410f1a:	in     al,0x4
  410f1c:	add    BYTE PTR [eax],al
  410f1e:	add    BYTE PTR [eax],al
  410f20:	add    BYTE PTR [eax],al
  410f22:	or     DWORD PTR [edi],ebp
  410f24:	add    DWORD PTR [eax],eax
  410f26:	add    DWORD PTR [ecx],ecx
  410f28:	add    BYTE PTR [eax],al
  410f2a:	in     al,0x4
  410f2c:	add    BYTE PTR [eax],al
  410f2e:	add    BYTE PTR [eax],al
  410f30:	add    BYTE PTR [eax],al
  410f32:	or     bh,BYTE PTR [eax]
  410f34:	add    DWORD PTR [eax],eax
  410f36:	sbb    eax,0xe4000009
  410f3b:	add    al,0x0
  410f3d:	add    BYTE PTR [eax],al
  410f3f:	add    BYTE PTR [eax],al
  410f41:	add    BYTE PTR [edi],ah
  410f43:	inc    ecx
  410f44:	add    DWORD PTR [eax],eax
  410f46:	adc    DWORD PTR [ecx],ecx
  410f48:	add    BYTE PTR [eax],al
  410f4a:	in     al,0x4
  410f4c:	add    BYTE PTR [eax],al
  410f4e:	add    BYTE PTR [eax],al
  410f50:	add    BYTE PTR [eax],al
  410f52:	cmp    BYTE PTR [edx+0x1],cl
  410f55:	add    BYTE PTR ds:0xe4000009,dl
  410f5b:	add    al,0x0
  410f5d:	add    BYTE PTR [eax],al
  410f5f:	add    BYTE PTR [eax],al
  410f61:	add    BYTE PTR [ebp+0x53],cl
  410f64:	add    DWORD PTR [eax],eax
  410f66:	or     eax,0xe4000009
  410f6b:	add    al,0x0
  410f6d:	add    BYTE PTR [eax],al
  410f6f:	add    BYTE PTR [eax],al
  410f71:	add    BYTE PTR [edx+0x5c],bl
  410f74:	add    DWORD PTR [eax],eax
  410f76:	sbb    DWORD PTR [ecx],ecx
  410f78:	add    BYTE PTR [eax],al
  410f7a:	in     al,0x4
  410f7c:	add    BYTE PTR [eax],al
  410f7e:	add    BYTE PTR [eax],al
  410f80:	add    BYTE PTR [eax],al
  410f82:	jae    0x410fe9
  410f84:	add    DWORD PTR [eax],eax
  410f86:	adc    eax,0xe4000009
  410f8b:	add    al,0x0
  410f8d:	add    BYTE PTR [eax],al
  410f8f:	add    BYTE PTR [eax],al
  410f91:	add    BYTE PTR [eax+0x900016e],cl
  410f97:	or     DWORD PTR [eax],eax
  410f99:	add    ah,ah
  410f9b:	add    al,0x0
  410f9d:	add    BYTE PTR [eax],al
  410f9f:	add    BYTE PTR [eax],al
  410fa1:	add    BYTE PTR [ecx+0xd000177],dl
  410fa7:	or     DWORD PTR [eax],eax
  410fa9:	add    ah,ah
  410fab:	add    al,0x0
  410fad:	add    BYTE PTR [eax],al
  410faf:	add    BYTE PTR [eax],al
  410fb1:	add    BYTE PTR [esi+0x11000180],bl
  410fb7:	or     DWORD PTR [eax],eax
  410fb9:	add    ah,ah
  410fbb:	add    al,0x0
  410fbd:	add    BYTE PTR [eax],al
  410fbf:	add    BYTE PTR [eax],al
  410fc1:	add    BYTE PTR [edi+0xd000189],ch
  410fc7:	or     DWORD PTR [eax],eax
  410fc9:	add    ah,ah
  410fcb:	add    al,0x0
  410fcd:	add    BYTE PTR [eax],al
  410fcf:	add    BYTE PTR [eax],al
  410fd1:	add    BYTE PTR [edx+edx*4+0x9110001],bh
  410fd8:	add    BYTE PTR [eax],al
  410fda:	in     al,0x4
  410fdc:	add    BYTE PTR [eax],al
  410fde:	add    BYTE PTR [eax],al
  410fe0:	add    BYTE PTR [eax],al
  410fe2:	int    0x9b
  410fe4:	add    DWORD PTR [eax],eax
  410fe6:	adc    DWORD PTR [ecx],ecx
  410fe8:	add    BYTE PTR [eax],al
  410fea:	in     al,0x4
  410fec:	add    BYTE PTR [eax],al
  410fee:	add    BYTE PTR [eax],al
  410ff0:	add    BYTE PTR [eax],al
  410ff2:	fisub  WORD PTR [ecx+eax*1+0x2000]
  410ff9:	add    ah,ah
  410ffb:	add    al,0x0
  410ffd:	add    BYTE PTR [eax],al
  410fff:	add    BYTE PTR [eax],al
  411001:	add    dh,bh
  411003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411004:	add    DWORD PTR [eax],eax
  411006:	adc    eax,0xe4000009
  41100b:	add    al,0x0
  41100d:	add    BYTE PTR [eax],al
  41100f:	add    BYTE PTR [eax],al
  411011:	add    BYTE PTR [ebx],dl
  411013:	scas   al,BYTE PTR es:[edi]
  411014:	add    DWORD PTR [eax],eax
  411016:	adc    DWORD PTR [ecx],ecx
  411018:	add    BYTE PTR [eax],al
  41101a:	in     al,0x4
  41101c:	add    BYTE PTR [eax],al
  41101e:	add    BYTE PTR [eax],al
  411020:	add    BYTE PTR [eax],al
  411022:	and    al,0xb7
  411024:	add    DWORD PTR [eax],eax
  411026:	sbb    DWORD PTR [ecx],ecx
  411028:	add    BYTE PTR [eax],al
  41102a:	in     al,0x4
  41102c:	add    BYTE PTR [eax],al
  41102e:	add    BYTE PTR [eax],al
  411030:	add    BYTE PTR [eax],al
  411032:	cmp    eax,0xd0001c0
  411037:	or     DWORD PTR [eax],eax
  411039:	add    ah,ah
  41103b:	add    al,0x0
  41103d:	add    BYTE PTR [eax],al
  41103f:	add    BYTE PTR [eax],al
  411041:	add    BYTE PTR [edx-0x37],cl
  411044:	add    DWORD PTR [eax],eax
  411046:	adc    DWORD PTR [ecx],ecx
  411048:	add    BYTE PTR [eax],al
  41104a:	in     al,0x4
  41104c:	add    BYTE PTR [eax],al
  41104e:	add    BYTE PTR [eax],al
  411050:	add    BYTE PTR [eax],al
  411052:	pop    ebx
  411053:	rol    BYTE PTR [ecx],cl
  411055:	add    BYTE PTR ds:0xe4000009,cl
  41105b:	add    al,0x0
  41105d:	add    BYTE PTR [eax],al
  41105f:	add    BYTE PTR [eax],al
  411061:	add    BYTE PTR [eax-0x25],ch
  411064:	add    DWORD PTR [eax],eax
  411066:	sbb    DWORD PTR [ecx],ecx
  411068:	add    BYTE PTR [eax],al
  41106a:	in     al,0x4
  41106c:	add    BYTE PTR [eax],al
  41106e:	add    BYTE PTR [eax],al
  411070:	add    BYTE PTR [eax],al
  411072:	and    esp,0x91d0001
  411078:	add    BYTE PTR [eax],al
  41107a:	in     al,0x4
  41107c:	add    BYTE PTR [eax],al
  41107e:	add    BYTE PTR [eax],al
  411080:	add    BYTE PTR [eax],al
  411082:	sahf   
  411083:	in     eax,dx
  411084:	add    DWORD PTR [eax],eax
  411086:	sbb    eax,0xe4000009
  41108b:	add    al,0x0
  41108d:	add    BYTE PTR [eax],al
  41108f:	add    BYTE PTR [eax],al
  411091:	add    BYTE PTR [ebx+0x190001f6],bh
  411097:	or     DWORD PTR [eax],eax
  411099:	add    ah,ah
  41109b:	add    al,0x0
  41109d:	add    BYTE PTR [eax],al
  41109f:	add    BYTE PTR [eax],al
  4110a1:	add    ah,dl
  4110a3:	inc    DWORD PTR [ecx]
  4110a5:	add    BYTE PTR [ecx],dl
  4110a7:	or     DWORD PTR [eax],eax
  4110a9:	add    ah,ah
  4110ab:	add    al,0x0
  4110ad:	add    BYTE PTR [eax],al
  4110af:	add    BYTE PTR [eax],al
  4110b1:	add    ch,ah
  4110b3:	or     BYTE PTR [edx],al
  4110b5:	add    BYTE PTR ds:0xe4000009,dl
  4110bb:	add    al,0x0
  4110bd:	add    BYTE PTR [eax],al
  4110bf:	add    BYTE PTR [eax],al
  4110c1:	add    dl,bh
  4110c3:	adc    DWORD PTR [edx],eax
  4110c5:	add    BYTE PTR ds:0xe4000009,dl
  4110cb:	add    al,0x0
  4110cd:	add    BYTE PTR [eax],al
  4110cf:	add    BYTE PTR [eax],al
  4110d1:	add    BYTE PTR ds:0x42004400,cl
  4110d7:	add    BYTE PTR [ebx+0x0],dl
  4110da:	pop    edi
  4110db:	add    BYTE PTR [eax],dh
  4110dd:	add    BYTE PTR [ebp+0x0],dl
  4110e0:	inc    esi
  4110e1:	add    BYTE PTR [eax+0x0],cl
  4110e4:	inc    ebx
  4110e5:	add    BYTE PTR [edi+0x0],bl
  4110e8:	aaa    
  4110e9:	add    BYTE PTR [ebx+0x0],cl
  4110ec:	xor    al,0x0
  4110ee:	or     BYTE PTR [eax],al
  4110f0:	push   ebx
  4110f1:	add    BYTE PTR [ebp+0x0],cl
  4110f4:	xor    DWORD PTR [eax],eax
  4110f6:	pop    edi
  4110f7:	add    BYTE PTR [ebp+0x0],al
  4110fa:	push   ebp
  4110fb:	add    BYTE PTR [edi],dh
  4110fd:	add    BYTE PTR [eax],dh
  4110ff:	add    BYTE PTR [edi],cl
  411101:	add    BYTE PTR [eax+eax*1+0x4f],al
  411105:	add    BYTE PTR [ecx+0x0],dl
  411108:	pop    edi
  411109:	add    BYTE PTR [eax+eax*1+0x32],cl
  41110d:	add    BYTE PTR ds:0x59003600,dh
  411113:	add    BYTE PTR [edi+0x0],bl
  411116:	cmp    DWORD PTR [eax],eax
  411118:	cmp    DWORD PTR [eax],eax
  41111a:	push   edx
  41111b:	add    BYTE PTR [ebx],dh
  41111d:	add    BYTE PTR [edx+0x0],dl
  411120:	or     DWORD PTR [eax],eax
  411122:	inc    edx
  411123:	add    BYTE PTR [eax],dh
  411125:	add    BYTE PTR [edx+0x0],bl
  411128:	xor    eax,0x5f003500
  41112d:	add    BYTE PTR ds:0x36004f00,dh
  411133:	add    BYTE PTR [ebx],cl
  411135:	add    BYTE PTR [eax+eax*1+0x32],al
  411139:	add    BYTE PTR [eax+0x0],dl
  41113c:	xor    eax,DWORD PTR [eax]
  41113e:	xor    eax,DWORD PTR [eax]
  411140:	add    BYTE PTR ss:[ecx],dh
  411143:	add    BYTE PTR [edx],dh
  411145:	add    BYTE PTR [edi+0x0],bl
  411148:	cmp    BYTE PTR [eax],al
  41114a:	inc    edx
  41114b:	add    BYTE PTR [ecx],cl
  41114d:	add    BYTE PTR [ebp+0x0],al
  411150:	push   esp
  411151:	add    BYTE PTR [edx+0x0],cl
  411154:	pop    edi
  411155:	add    BYTE PTR [ecx+0x0],dl
  411158:	xor    DWORD PTR [eax],eax
  41115a:	dec    ecx
  41115b:	add    BYTE PTR [eax+eax*1],dh
  41115e:	cmp    BYTE PTR [eax],al
  411160:	or     al,0x0
  411162:	push   ecx
  411163:	add    BYTE PTR [ebp+0x0],dl
  411166:	inc    ebx
  411167:	add    BYTE PTR [edi+0x0],bl
  41116a:	xor    eax,0x32004400
  41116f:	add    BYTE PTR [eax],dh
  411171:	add    BYTE PTR [edi+0x0],bl
  411174:	xor    al,BYTE PTR [eax]
  411176:	dec    ecx
  411177:	add    BYTE PTR [edi+0x0],dl
  41117a:	or     BYTE PTR [eax],al
  41117c:	inc    ebp
  41117d:	add    BYTE PTR [eax],bh
  41117f:	add    BYTE PTR [eax],bh
  411181:	add    BYTE PTR [edi+0x0],bl
  411184:	dec    ebx
  411185:	add    BYTE PTR [eax+0x0],cl
  411188:	push   eax
  411189:	add    BYTE PTR [ecx],bh
  41118b:	add    BYTE PTR [ebx],cl
  41118d:	add    BYTE PTR [edi+0x0],cl
  411190:	aaa    
  411191:	add    BYTE PTR [eax],dh
  411193:	add    BYTE PTR [edx],dh
  411195:	add    BYTE PTR [edi+0x0],bl
  411198:	cmp    DWORD PTR [eax],eax
  41119a:	cmp    BYTE PTR [eax],al
  41119c:	inc    edi
  41119d:	add    BYTE PTR [edi+0x0],bl
  4111a0:	xor    BYTE PTR [eax],al
  4111a2:	dec    ebp
  4111a3:	add    BYTE PTR [edi],cl
  4111a5:	add    BYTE PTR [esi+0x0],al
  4111a8:	inc    esp
  4111a9:	add    BYTE PTR ds:0x36003300,dh
  4111af:	add    BYTE PTR [edi+0x0],bl
  4111b2:	push   esi
  4111b3:	add    BYTE PTR [ebp+0x0],dl
  4111b6:	dec    ebp
  4111b7:	add    BYTE PTR [esi+0x0],al
  4111ba:	pop    edi
  4111bb:	add    BYTE PTR [ecx],dh
  4111bd:	add    BYTE PTR [edx+0x0],bl
  4111c0:	inc    edi
  4111c1:	add    BYTE PTR [ecx+0x0],bl
  4111c4:	or     BYTE PTR [eax],al
  4111c6:	push   eax
  4111c7:	add    BYTE PTR [eax],dh
  4111c9:	add    BYTE PTR [edx],dh
  4111cb:	add    BYTE PTR [ebx],dh
  4111cd:	add    BYTE PTR [edi+0x0],bl
  4111d0:	push   eax
  4111d1:	add    BYTE PTR [eax],bh
  4111d3:	add    BYTE PTR [ecx+0x0],dl
  4111d6:	or     al,0x0
  4111d8:	inc    esi
  4111d9:	add    BYTE PTR [edx+0x0],bl
  4111dc:	dec    esp
  4111dd:	add    BYTE PTR [edi+0x0],bl
  4111e0:	add    BYTE PTR ss:[ebx],dh
  4111e3:	add    BYTE PTR [edi+0x0],cl
  4111e6:	push   esi
  4111e7:	add    BYTE PTR [eax+eax*1],dh
  4111ea:	pop    edi
  4111eb:	add    BYTE PTR [eax],bh
  4111ed:	add    BYTE PTR [esi+0x0],cl
  4111f0:	or     BYTE PTR [eax],al
  4111f2:	dec    edi
  4111f3:	add    BYTE PTR [edx+0x0],dl
  4111f6:	push   esp
  4111f7:	add    BYTE PTR [edi+0x0],bl
  4111fa:	push   ebp
  4111fb:	add    BYTE PTR [edx],dh
  4111fd:	add    BYTE PTR [ecx+0x0],bl
  411200:	xor    eax,DWORD PTR [eax]
  411202:	push   cs
  411203:	add    BYTE PTR [eax+0x0],cl
  411206:	cmp    DWORD PTR [eax],eax
  411208:	dec    ebx
  411209:	add    BYTE PTR [edi+0x0],bl
  41120c:	xor    al,0x0
  41120e:	inc    ecx
  41120f:	add    BYTE PTR [ecx],bh
  411211:	add    BYTE PTR [esi+0x0],dl
  411214:	cmp    DWORD PTR [eax],eax
  411216:	pop    edi
  411217:	add    BYTE PTR [eax+0x0],cl
  41121a:	dec    ecx
  41121b:	add    BYTE PTR [eax+eax*1+0x58],al
  41121f:	add    BYTE PTR [eax],cl
  411221:	add    BYTE PTR [eax+0x0],dl
  411224:	dec    esi
  411225:	add    BYTE PTR [eax+0x0],cl
  411228:	pop    edi
  411229:	add    BYTE PTR [eax],dh
  41122b:	add    BYTE PTR [ecx+0x0],dl
  41122e:	xor    DWORD PTR [eax],eax
  411230:	dec    ebp
  411231:	add    BYTE PTR [eax+eax*1],cl
  411234:	dec    edx
  411235:	add    BYTE PTR [eax+0x0],dl
  411238:	push   ecx
  411239:	add    BYTE PTR [edi+0x0],bl
  41123c:	dec    ecx
  41123d:	add    BYTE PTR [eax+eax*1+0x48],al
  411241:	add    BYTE PTR [edx+0x0],cl
  411244:	pop    edi
  411245:	add    BYTE PTR [ebp+0x0],al
  411248:	inc    ebp
  411249:	add    BYTE PTR [eax],dh
  41124b:	add    BYTE PTR [edx],cl
  41124d:	add    BYTE PTR [ebx+0x0],cl
  411250:	xor    BYTE PTR [eax],al
  411252:	xor    eax,0x54005f00
  411257:	add    BYTE PTR ds:0x53005700,dh
  41125d:	add    BYTE PTR [ecx],bh
  41125f:	add    BYTE PTR [eax+eax*1+0xd],dl
  411263:	add    BYTE PTR [eax+eax*1+0x5a],al
  411267:	add    BYTE PTR [eax],bh
  411269:	add    BYTE PTR ds:0x30005f00,dh
  41126f:	add    BYTE PTR [ebp+0x0],cl
  411272:	inc    ebx
  411273:	add    BYTE PTR [eax+eax*1+0x30],cl
  411277:	add    BYTE PTR [edi+0x0],bl
  41127a:	dec    ecx
  41127b:	add    BYTE PTR [ebx+0x0],al
  41127e:	or     BYTE PTR [eax],al
  411280:	dec    esi
  411281:	add    BYTE PTR [ebp+0x0],al
  411284:	dec    ecx
  411285:	add    BYTE PTR [edi+0x0],bl
  411288:	dec    ecx
  411289:	add    BYTE PTR [edx+0x0],dl
  41128c:	xor    BYTE PTR [eax],al
  41128e:	pop    edx
  41128f:	add    BYTE PTR [ebx],cl
  411291:	add    BYTE PTR [esi+0x0],dl
  411294:	dec    edx
  411295:	add    BYTE PTR [eax+eax*1+0x5f],al
  411299:	add    BYTE PTR [eax+0x0],bl
  41129c:	cmp    BYTE PTR [eax],al
  41129e:	xor    al,0x0
  4112a0:	pop    edx
  4112a1:	add    BYTE PTR [ecx],bh
  4112a3:	add    BYTE PTR [esi],dh
  4112a5:	add    BYTE PTR ds:0x4c000800,dh
  4112ab:	add    BYTE PTR [eax+0x0],bl
  4112ae:	dec    esp
  4112af:	add    BYTE PTR [edi+0x0],bl
  4112b2:	push   eax
  4112b3:	add    BYTE PTR [edx+0x0],cl
  4112b6:	xor    eax,DWORD PTR [eax]
  4112b8:	inc    edi
  4112b9:	add    BYTE PTR [eax+eax*1],cl
  4112bc:	push   eax
  4112bd:	add    BYTE PTR [ebx],dh
  4112bf:	add    BYTE PTR [ebx+0x0],al
  4112c2:	pop    edi
  4112c3:	add    BYTE PTR [edx+0x0],bl
  4112c6:	xor    al,BYTE PTR [eax]
  4112c8:	inc    edi
  4112c9:	add    BYTE PTR [eax],bh
  4112cb:	add    BYTE PTR [edx+0x0],al
  4112ce:	pop    edi
  4112cf:	add    BYTE PTR [edx+0x0],cl
  4112d2:	pop    ecx
  4112d3:	add    BYTE PTR [edx],cl
  4112d5:	add    BYTE PTR [edi+0x0],al
  4112d8:	push   esi
  4112d9:	add    BYTE PTR [ebp+0x0],dl
  4112dc:	cmp    BYTE PTR [eax],al
  4112de:	xor    DWORD PTR [eax],eax
  4112e0:	add    BYTE PTR ss:[edi+0x0],bl
  4112e4:	pop    ecx
  4112e5:	add    BYTE PTR [edx+0x0],bl
  4112e8:	push   ebx
  4112e9:	add    BYTE PTR ds:0x42005100,cl
  4112ef:	add    BYTE PTR [ecx],bh
  4112f1:	add    BYTE PTR [edi+0x0],bl
  4112f4:	inc    ecx
  4112f5:	add    BYTE PTR [esi],dh
  4112f7:	add    BYTE PTR [ecx],bh
  4112f9:	add    BYTE PTR [esi+0x0],dl
  4112fc:	inc    esp
  4112fd:	add    BYTE PTR [edi+0x0],bl
  411300:	inc    ebp
  411301:	add    BYTE PTR [edi+0x0],dl
  411304:	add    BYTE PTR ss:[ecx],cl
  411307:	add    BYTE PTR [edx+0x0],bl
  41130a:	dec    esp
  41130b:	add    BYTE PTR [ecx],dh
  41130d:	add    BYTE PTR [edi+0x0],bl
  411310:	push   ecx
  411311:	add    BYTE PTR [eax+0x0],dl
  411314:	pop    eax
  411315:	add    BYTE PTR [edi+0x0],bl
  411318:	inc    ebp
  411319:	add    BYTE PTR ds:0x47005600,cl
  41131f:	add    BYTE PTR [edx],dh
  411321:	add    BYTE PTR [edi+0x0],bl
  411324:	push   esi
  411325:	add    BYTE PTR [edi+0x0],al
  411328:	inc    ebx
  411329:	add    BYTE PTR [edx+0x0],dl
  41132c:	dec    esi
  41132d:	add    BYTE PTR [edi+0x0],bl
  411330:	inc    edi
  411331:	add    BYTE PTR [eax+eax*1],dh
  411334:	xor    DWORD PTR [eax],eax
  411336:	push   cs
  411337:	add    BYTE PTR [esi+0x0],al
  41133a:	push   esp
  41133b:	add    BYTE PTR [edx+0x0],bl
  41133e:	pop    edi
  41133f:	add    BYTE PTR [edi+0x0],cl
  411342:	inc    edi
  411343:	add    BYTE PTR [ecx+0x0],cl
  411346:	dec    eax
  411347:	add    BYTE PTR [ebx+0x0],cl
  41134a:	pop    edi
  41134b:	add    BYTE PTR [ebx+0x0],cl
  41134e:	push   eax
  41134f:	add    BYTE PTR [edi+0x0],cl
  411352:	dec    esp
  411353:	add    BYTE PTR [eax],cl
  411355:	add    BYTE PTR [eax+0x0],bl
  411358:	push   esi
  411359:	add    BYTE PTR [ebx],dh
  41135b:	add    BYTE PTR [edx],dh
  41135d:	add    BYTE PTR [eax],dh
  41135f:	add    BYTE PTR [eax],dh
  411361:	add    BYTE PTR [eax],bh
  411363:	add    BYTE PTR [edi+0x0],cl
  411366:	push   cs
  411367:	add    BYTE PTR [ecx+0x0],al
  41136a:	inc    ebx
  41136b:	add    BYTE PTR [ecx+0x0],al
  41136e:	cmp    BYTE PTR [eax],al
  411370:	pop    edi
  411371:	add    BYTE PTR [esi+0x0],dl
  411374:	pop    eax
  411375:	add    BYTE PTR [eax],bh
  411377:	add    BYTE PTR [edi+0x0],bl
  41137a:	inc    ebx
  41137b:	add    BYTE PTR [ebp+0x0],al
  41137e:	pop    eax
  41137f:	add    BYTE PTR [eax+eax*1],dh
  411382:	aaa    
  411383:	add    BYTE PTR [eax+eax*1],cl
  411386:	pop    ecx
  411387:	add    BYTE PTR [esi+0x0],cl
  41138a:	push   ecx
  41138b:	add    BYTE PTR [edi+0x0],bl
  41138e:	push   edi
  41138f:	add    BYTE PTR [edx],dh
  411391:	add    BYTE PTR [edi+0x0],al
  411394:	xor    al,BYTE PTR [eax]
  411396:	xor    BYTE PTR [eax],al
  411398:	pop    edi
  411399:	add    BYTE PTR [eax+eax*1+0x47],cl
  41139d:	add    BYTE PTR [edi],cl
  41139f:	add    BYTE PTR [ecx+0x0],al
  4113a2:	cmp    BYTE PTR [eax],al
  4113a4:	push   ecx
  4113a5:	add    BYTE PTR [edi+0x0],bl
  4113a8:	xor    al,0x0
  4113aa:	xor    BYTE PTR [eax],al
  4113ac:	dec    esi
  4113ad:	add    BYTE PTR [ecx+0x0],al
  4113b0:	cmp    BYTE PTR [eax],al
  4113b2:	pop    edi
  4113b3:	add    BYTE PTR ds:0x53004e00,dh
  4113b9:	add    BYTE PTR [ebp+0x0],al
  4113bc:	cmp    BYTE PTR [eax],al
  4113be:	add    BYTE PTR [eax],al
  4113c0:	add    BYTE PTR [eax],al
  4113c2:	pop    ebp
  4113c3:	add    DWORD PTR [edx+0x7debdeea],0x4880e6b7
  4113cd:	shl    BYTE PTR [ebx-0x40],cl
  4113d0:	daa    
  4113d1:	or     ebp,DWORD PTR [edi]
  4113d3:	pop    ebx
  4113d4:	add    DWORD PTR [eax],eax
  4113d6:	and    eax,0x78000007
  4113db:	loopne 0x41144d
  4113dd:	enter  0x5e59,0xcb
  4113e1:	iret   
  4113e2:	(bad)
  4113e7:	mov    cl,0xfe
  4113e9:	xchg   ecx,eax
  4113ea:	out    0xb6,eax
  4113ec:	daa    
  4113ed:	inc    ecx
  4113ee:	pop    ss
  4113ef:	ja     0x4113cb
  4113f1:	sti    
  4113f2:	dec    edi
  4113f3:	gs retf 
  4113f5:	push   edx
  4113f6:	lock ror DWORD PTR [ebx+ebp*1+0x78],0xaa
  4113fc:	sbb    al,0xf4
  4113fe:	ficom  WORD PTR [esi+eiz*8-0x3d]
  411402:	jp     0x411443
  411404:	mov    ah,0x4e
  411406:	inc    edx
  411407:	adc    al,0x9e
  411409:	and    al,0x48
  41140b:	mov    al,0xb7
  41140d:	aas    
  41140e:	or     al,0x58
  411410:	jp     0x41146f
  411412:	pop    ss
  411413:	jne    0x411460
  411415:	mov    ds:0xe959ca7,eax
  41141a:	pop    es
  41141b:	pop    edi
  41141c:	push   cs
  41141d:	or     eax,0x61eb0533
  411422:	dec    eax
  411423:	data16 mov ch,0x80
  411426:	mov    esi,0x27373ded
  41142b:	or     cl,BYTE PTR [ebx+0xcd90709]
  411431:	scas   eax,DWORD PTR es:[edi]
  411432:	mov    ebp,0x4e2be069
  411437:	pop    edx
  411438:	jo     0x4114b4
  41143a:	or     al,0xaf
  41143c:	(bad)  
  41143d:	fcmovbe st,st(4)
  41143f:	jbe    0x41147d
  411441:	add    DWORD PTR [ebx],edx
  411443:	mov    bl,0x7
  411445:	cmp    BYTE PTR ss:[edx+0xd],bh
  411449:	xchg   edi,eax
  41144a:	mov    BYTE PTR [esi+0x15],bh
  41144d:	fild   WORD PTR ds:0x6e5538c6
  411453:	loopne 0x41144a
  411455:	enter  0xec9e,0x9
  411459:	(bad)  
  41145b:	cmp    DWORD PTR [esi+0x241f9903],edi
  411461:	repz pmovmskb ebp,mm7
  411465:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411466:	mov    al,bl
  411468:	jnp    0x411448
  41146a:	enter  0xd175,0x5a
  41146e:	inc    ebx
  41146f:	retf   
  411470:	adc    ch,BYTE PTR [esi-0x33]
  411473:	pop    esi
  411474:	sbb    ebx,DWORD PTR [edi]
  411476:	(bad)  
  411477:	clc    
  411478:	dec    ecx
  411479:	out    dx,eax
  41147a:	sub    esi,DWORD PTR [ecx]
  41147c:	sub    al,0xf
  41147e:	push   eax
  41147f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411480:	push   ebp
  411481:	pmuludq mm4,QWORD PTR [ebx+0x7ed76527]
  411488:	push   ebp
  411489:	out    0x35,al
  41148b:	mov    ss,WORD PTR [esi-0x243fe700]
  411491:	cs inc edi
  411493:	retf   0xe6c5
  411496:	push   ds
  411497:	push   ebp
  411498:	fidiv  DWORD PTR [eax]
  41149a:	xor    eax,0xb632e30d
  41149f:	jns    0x4114d8
  4114a1:	sbb    ebp,DWORD PTR [ebp+0x3a]
  4114a4:	jg     0x2b3ff090
  4114aa:	inc    esi
  4114ab:	push   ss
  4114ac:	aam    0x2d
  4114ae:	ror    BYTE PTR [esi],1
  4114b0:	add    ch,BYTE PTR [ebx]
  4114b2:	inc    edi
  4114b3:	push   ss
  4114b4:	adc    ecx,0x4082fc2a
  4114ba:	sbb    ch,ch
  4114bc:	rol    BYTE PTR [esi-0x23],1
  4114bf:	std    
  4114c0:	sub    dl,BYTE PTR [edi]
  4114c2:	shr    DWORD PTR [esi],0xf7
  4114c5:	and    esp,ebx
  4114c7:	std    
  4114c8:	jmp    0x4114f9
  4114ca:	mov    DWORD PTR [edi+ebp*1+0x5b],ebp
  4114ce:	jbe    0x411473
  4114d0:	push   esp
  4114d1:	shl    BYTE PTR [ebx],cl
  4114d3:	outs   dx,DWORD PTR ds:[esi]
  4114d4:	push   ds
  4114d5:	mov    esp,0x29926f94
  4114da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114db:	jg     0x4114d8
  4114dd:	adc    esp,esi
  4114df:	mov    ds:0x22bac1f2,al
  4114e4:	cs inc ebx
  4114e6:	or     BYTE PTR [ebx-0x13],al
  4114e9:	mov    ds:0xdb26c73e,eax
  4114ee:	ja     0x411480
  4114f0:	jle    0x4114cc
  4114f2:	push   es
  4114f3:	mov    eax,0x766fbdaf
  4114f8:	cmp    BYTE PTR [bp+si+0x11],bl
  4114fc:	jbe    0x411499
  4114fe:	(bad)  
  4114ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411500:	in     eax,dx
  411501:	sub    cl,BYTE PTR [edi+0x7c]
  411504:	cli    
  411505:	add    ebx,DWORD PTR [esi]
  411507:	jmp    FWORD PTR [edi-0x53]
  41150a:	jmp    0xe7e6571b
  41150f:	xchg   esi,eax
  411510:	sub    BYTE PTR [edx],ah
  411512:	cmp    BYTE PTR [edi+0x3f997b11],cl
  411518:	sub    edi,ebx
  41151a:	xchg   edx,eax
  41151b:	push   edi
  41151d:	mov    ah,0x3e
  41151f:	or     al,0x37
  411521:	fild   DWORD PTR [esi+0x30]
  411524:	gs loopne 0x411557
  411527:	in     al,0x59
  411529:	adc    esi,DWORD PTR [eax-0x4de8969f]
  41152f:	arpl   WORD PTR [esi-0x14bd8bcc],bx
  411535:	test   DWORD PTR [esi+0x69],ebx
  411538:	(bad)  
  411539:	xor    edi,ebx
  41153b:	retf   0x6f92
  41153e:	lea    ebp,[esp+edi*8]
  411541:	ret    
  411542:	fwait
  411543:	xor    ecx,0xffffffd1
  411546:	inc    esi
  411547:	aad    0x1e
  411549:	and    bl,ah
  41154b:	xchg   edi,eax
  41154c:	test   BYTE PTR [edi],dl
  41154e:	popf   
  41154f:	inc    edi
  411550:	add    al,0xd6
  411552:	sub    edx,ecx
  411554:	out    0x27,eax
  411556:	sbb    BYTE PTR [ebx-0xa9e546c],dl
  41155c:	pop    es
  41155d:	mov    edx,edx
  41155f:	xor    al,0xf1
  411561:	outs   dx,BYTE PTR ds:[esi]
  411562:	sbb    esp,esi
  411564:	mov    bh,0x9f
  411566:	jns    0x411566
  411568:	mov    ecx,0xedeac5c
  41156d:	push   edi
  41156e:	(bad)  
  41156f:	lea    esp,[ebp+0x1]
  411572:	mov    ecx,0xe221176c
  411577:	fstp   TBYTE PTR [esi-0x28]
  41157a:	jb     0x4115c0
  41157c:	mov    WORD PTR [edx],ds
  41157e:	mov    ds:0x4e6c0ad3,al
  411583:	mov    ebx,0x8ef29f51
  411588:	sti    
  411589:	enter  0x5daf,0xc9
  41158d:	mov    eax,0xba102e59
  411592:	retf   0x3be8
  411595:	or     al,0xc6
  411597:	dec    edi
  411598:	push   esi
  411599:	mov    ch,0x1
  41159b:	std    
  41159c:	xchg   ebp,eax
  41159d:	fadd   DWORD PTR [esi+0x55]
  4115a0:	mov    eax,0x9a7e15ee
  4115a5:	pusha  
  4115a6:	(bad)  
  4115a8:	push   es
  4115a9:	popa   
  4115aa:	cs pop ds
  4115ac:	nop
  4115ad:	pop    ebp
  4115ae:	push   ebx
  4115af:	clc    
  4115b0:	in     eax,0xa8
  4115b2:	jl     0x411596
  4115b4:	or     eax,0x81407c64
  4115b9:	jnp    0x41161b
  4115bb:	adc    dl,BYTE PTR ds:0x83b64b94
  4115c1:	cmp    esp,edx
  4115c3:	stos   BYTE PTR es:[edi],al
  4115c4:	jl     0x41158b
  4115c6:	mov    esp,0x41ddb822
  4115cb:	les    ebp,FWORD PTR [esi]
  4115cd:	mov    edi,0xf4755c33
  4115d2:	fisub  DWORD PTR [eax+0x289026e9]
  4115d8:	mov    cl,0x63
  4115da:	ror    DWORD PTR ds:0x9db0797e,0xaf
  4115e1:	pop    esi
  4115e2:	fdiv   DWORD PTR [ebx+0x67956690]
  4115e8:	sbb    esi,edi
  4115ea:	aam    0x60
  4115ec:	sti    
  4115ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115ee:	mov    bl,0xa
  4115f0:	jmp    0x7593021b
  4115f5:	stc    
  4115f6:	fisubr DWORD PTR [ecx+0x5c]
  4115f9:	pop    DWORD PTR [ebp-0x405f8e73]
  4115ff:	dec    edx
  411600:	xchg   eax,eax
  411602:	add    eax,0x87e5af9a
  411607:	push   0x4bc737de
  41160c:	test   DWORD PTR [ecx+0x7734749f],edi
  411612:	in     eax,dx
  411613:	sub    eax,0x62f0c3e7
  411618:	inc    ebp
  411619:	pop    edx
  41161a:	xchg   bh,al
  41161c:	cmc    
  41161d:	stos   DWORD PTR es:[edi],eax
  41161e:	stc    
  41161f:	inc    esi
  411620:	inc    edi
  411621:	adc    edx,DWORD PTR [ecx]
  411623:	add    DWORD PTR [ecx+0x22ff9767],0x3f
  41162a:	pop    edi
  41162b:	ja     0x411622
  41162d:	imul   edi,DWORD PTR [ecx],0xffffff83
  411630:	inc    edx
  411631:	int3   
  411632:	xor    eax,0xccb63ab0
  411637:	inc    edi
  411638:	addr16 add al,0x39
  41163b:	shr    DWORD PTR [edx-0x5179d9f4],0x94
  411642:	sub    eax,0xd12bdcf5
  411647:	popf   
  411648:	pop    esi
  411649:	es sbb dh,cl
  41164c:	bound  ebx,QWORD PTR [edx]
  41164e:	add    DWORD PTR [eax+0x11],ebp
  411651:	and    eax,0x904f965d
  411656:	or     cl,bl
  411658:	dec    edi
  411659:	mov    bl,0x1e
  41165b:	cmp    dh,BYTE PTR [ebx+0x5d]
  41165e:	adc    al,0x56
  411660:	js     0x41161e
  411662:	inc    edi
  411663:	js     0x4116de
  411665:	dec    ebp
  411666:	jecxz  0x41166d
  411668:	ret    
  411669:	cwde   
  41166a:	push   esp
  41166b:	rcr    DWORD PTR [edi-0x63],cl
  41166e:	pop    edi
  41166f:	or     edi,DWORD PTR [eax]
  411671:	je     0x4115fb
  411673:	(bad)  
  411674:	aad    0xbc
  411676:	mov    cl,0x33
  411678:	dec    eax
  411679:	rol    BYTE PTR [edx+0x516b9a9],cl
  41167f:	add    al,0x7d
  411681:	add    ecx,ebx
  411683:	jecxz  0x41169b
  411685:	out    0xe4,al
  411687:	mov    eax,0xa4855561
  41168c:	mov    bl,0xd7
  41168e:	jle    0x41165f
  411690:	jmp    0x41163c
  411692:	leave  
  411693:	(bad)  
  411694:	and    BYTE PTR [ecx-0x5f909cc9],bh
  41169a:	fiadd  DWORD PTR [eax-0x7da3e3cd]
  4116a0:	push   0xffffffad
  4116a2:	cmp    dl,BYTE PTR [ecx-0x4d48ba80]
  4116a8:	cwde   
  4116a9:	shl    DWORD PTR [esp+eiz*8-0x7962753d],0xb7
  4116b1:	call   0xa3ee5446
  4116b6:	(bad)  
  4116b7:	jp     0x411643
  4116b9:	fisubr DWORD PTR [edx+0x24]
  4116bc:	js     0x4116d9
  4116be:	or     BYTE PTR [eax-0x7b],ch
  4116c1:	retf   
  4116c2:	sti    
  4116c3:	xor    esp,DWORD PTR [eax-0x2]
  4116c6:	test   BYTE PTR [edi+edx*4],0x97
  4116ca:	mov    ah,0x70
  4116cc:	sbb    DWORD PTR [edx*2-0xe61738a],edi
  4116d3:	or     eax,DWORD PTR [edi+0x65a9d05c]
  4116d9:	push   0x29b79291
  4116de:	cwde   
  4116df:	xchg   esi,ebp
  4116e1:	ins    BYTE PTR es:[edi],dx
  4116e2:	int    0xf1
  4116e4:	push   edx
  4116e5:	jns    0x4116dd
  4116e7:	nop
  4116e8:	xchg   esi,eax
  4116e9:	sub    ecx,DWORD PTR [esi-0x1c]
  4116ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116ed:	(bad)  
  4116ee:	xchg   esp,eax
  4116ef:	pop    ecx
  4116f0:	cmp    edi,ebp
  4116f2:	out    dx,al
  4116f3:	imul   esp,DWORD PTR [edx],0x6bddcf14
  4116f9:	fs ins BYTE PTR es:[edi],dx
  4116fb:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4116fd:	addr16 int 0x5c
  411700:	ret    
  411701:	mov    ebx,0x8d105261
  411706:	mov    dh,0xdb
  411708:	jl     0x41170f
  41170a:	out    dx,eax
  41170b:	mov    gs,WORD PTR [eax]
  41170d:	jecxz  0x411761
  41170f:	ret    
  411710:	out    0xd9,eax
  411712:	test   BYTE PTR [ecx+0x5ea8ee33],al
  411718:	in     al,0x7e
  41171a:	into   
  41171b:	mov    al,ds:0x72d42f1a
  411720:	cli    
  411721:	cmc    
  411722:	inc    ebx
  411723:	call   0x6268d6a4
  411728:	inc    eax
  411729:	add    al,0xa2
  41172b:	(bad)  
  41172c:	mov    dl,0x54
  41172e:	xor    eax,0x4449cfa9
  411733:	dec    edi
  411734:	jle    0x411755
  411736:	aam    0x5a
  411738:	gs jl  0x41175e
  41173b:	push   edx
  41173c:	loopne 0x4117ba
  41173e:	and    eax,DWORD PTR [ecx-0x6]
  411741:	ins    DWORD PTR es:[edi],dx
  411742:	loope  0x4116ce
  411744:	loopne 0x411702
  411746:	in     al,dx
  411747:	mov    ecx,0x7ac6ae3b
  41174c:	mov    ah,0x1c
  41174e:	bound  ebx,QWORD PTR [edi+edx*2-0x7c]
  411752:	jge    0x411744
  411754:	adc    eax,0x736e523e
  411759:	sar    DWORD PTR [eax],cl
  41175b:	add    al,0x94
  41175d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41175e:	lods   al,BYTE PTR ds:[esi]
  41175f:	lods   al,BYTE PTR ds:[esi]
  411760:	mov    al,0x95
  411762:	xchg   edi,eax
  411763:	mov    ds:0x3f6c3947,al
  411768:	pop    DWORD PTR [edx+0x44fefe33]
  41176e:	xchg   esp,eax
  41176f:	pusha  
  411770:	retf   
  411771:	jge    0x4117e0
  411773:	push   ebx
  411774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411775:	mov    eax,0xfe9e96ff
  41177a:	(bad)  [si+0x1f]
  41177e:	(bad)  
  41177f:	in     eax,dx
  411780:	aad    0x5f
  411782:	sti    
  411783:	int    0x8e
  411785:	sbb    al,0x28
  411787:	mov    gs,WORD PTR [ecx+0x3255f323]
  41178d:	jno    0x41177c
  41178f:	mov    DWORD PTR [ebx+edi*1+0x56],0x8b264dae
  411797:	aam    0xd
  411799:	sub    BYTE PTR [eax-0x17],0xdf
  41179d:	inc    esp
  41179e:	loop   0x411805
  4117a0:	add    DWORD PTR [eax+edx*8-0x80],ebp
  4117a4:	pop    ecx
  4117a5:	cwde   
  4117a6:	enter  0x8d6f,0xe9
  4117aa:	mov    ecx,0x5cecb40e
  4117af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117b0:	push   es
  4117b1:	or     DWORD PTR [edx-0x7549a1a4],esp
  4117b7:	push   ss
  4117b8:	and    eax,DWORD PTR [ecx+0x53]
  4117bb:	inc    esp
  4117bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117bd:	mov    BYTE PTR [ecx+0x71],cl
  4117c0:	or     ax,dx
  4117c3:	(bad)
  4117c6:	jl     0x411752
  4117c8:	mov    edx,0x1adcd5a8
  4117cd:	icebp  
  4117ce:	xchg   BYTE PTR gs:[ecx+0x6f21467],cl
  4117d5:	xchg   BYTE PTR [eax-0x498be542],bh
  4117db:	jmp    0x4117db
  4117dd:	cwde   
  4117de:	jns    0x41176e
  4117e0:	fs jnp 0x4117ce
  4117e3:	add    ebx,eax
  4117e5:	fldcw  WORD PTR [esi+ebx*4-0x3e267259]
  4117ec:	fistp  DWORD PTR [ebx+edx*1-0x64]
  4117f0:	or     dl,BYTE PTR [edx]
  4117f2:	cmp    eax,0x7b4e4c02
  4117f7:	ficom  DWORD PTR [ecx]
  4117f9:	dec    esi
  4117fa:	and    al,0xe9
  4117fc:	not    BYTE PTR ds:0xbc4513dd
  411802:	pushf  
  411803:	loopne 0x41185e
  411805:	sbb    DWORD PTR [eax-0x8ba25ed],0x70
  41180c:	test   BYTE PTR [ebx],bl
  41180e:	cmp    esi,ebx
  411810:	adc    al,bh
  411812:	es stc 
  411814:	sbb    al,0xde
  411816:	dec    ebp
  411817:	and    ebp,DWORD PTR [ebp-0x6cd74ea5]
  41181d:	dec    ebp
  41181e:	fwait
  41181f:	dec    ebx
  411820:	call   0x1aa5:0xaea5b558
  411827:	inc    ecx
  411828:	je     0x411851
  41182a:	inc    edx
  41182b:	jnp    0x4117f3
  41182d:	es jns 0x4117db
  411830:	push   esi
  411831:	out    dx,al
  411832:	in     eax,0x6c
  411834:	push   esi
  411835:	jmp    0xbda7d087
  41183a:	dec    esi
  41183b:	stos   DWORD PTR es:[edi],eax
  41183c:	stos   DWORD PTR es:[edi],eax
  41183d:	jg     0x411848
  41183f:	push   0xffffff9c
  411841:	sbb    ebx,eax
  411843:	mov    edx,DWORD PTR [eax-0x71]
  411846:	pop    ecx
  411847:	add    DWORD PTR [esi],ebx
  411849:	test   BYTE PTR [eax+0x6b38fd4b],dl
  41184f:	push   cs
  411850:	cwde   
  411851:	add    eax,0xd6614f5d
  411856:	and    edi,DWORD PTR ss:[esp+ebx*2]
  41185a:	aaa    
  41185b:	jmp    0xfbc811b6
  411860:	mov    DWORD PTR [ebx+0x68],esi
  411863:	mov    ebp,DWORD PTR [ebp+eax*2+0x631245f9]
  41186a:	dec    ecx
  41186b:	test   DWORD PTR ds:0xc4548162,0x5c20844
  411875:	mov    edx,0x4b156c80
  41187a:	mov    esi,0xee924647
  41187f:	enter  0xb2ac,0x77
  411883:	and    eax,0x7d1397e8
  411888:	pop    eax
  411889:	push   edx
  41188a:	mov    ds:0xedd79875,al
  41188f:	push   esi
  411890:	push   edi
  411891:	in     al,0x51
  411893:	ss pushf 
  411895:	or     BYTE PTR [ecx],0xe6
  411898:	imul   edi,esp,0xc8f72a83
  41189e:	mov    ch,BYTE PTR [esi]
  4118a0:	xchg   ebp,eax
  4118a1:	adc    ch,BYTE PTR [eax+0x6678b403]
  4118a7:	iret   
  4118a8:	loopne 0x4118b3
  4118aa:	xor    DWORD PTR [esi+0x3f],esp
  4118ad:	mov    ah,0x50
  4118af:	and    eax,0xc998e31b
  4118b4:	xchg   esp,eax
  4118b5:	add    ch,ch
  4118b7:	iret   
  4118b8:	dec    esp
  4118b9:	sbb    eax,0x22c8e9c5
  4118be:	mov    ch,BYTE PTR [ecx-0x19a88de8]
  4118c4:	fwait
  4118c5:	outs   dx,BYTE PTR ds:[esi]
  4118c6:	mov    cl,0x10
  4118c8:	push   ds
  4118c9:	loop   0x41188b
  4118cb:	test   BYTE PTR [ebx],0x11
  4118ce:	push   ebx
  4118cf:	push   ebp
  4118d0:	aas    
  4118d1:	sub    eax,0xad299772
  4118d6:	aad    0x3
  4118d8:	jp     0x4118c3
  4118da:	outs   dx,BYTE PTR ds:[esi]
  4118db:	dec    edx
  4118dc:	gs ins BYTE PTR es:[edi],dx
  4118de:	jmp    0x411902
  4118e0:	nop
  4118e1:	fwait
  4118e2:	rcl    DWORD PTR [ebp+0x72a3cfa5],cl
  4118e8:	jno    0x411949
  4118ea:	sub    dl,BYTE PTR [ebx]
  4118ec:	xchg   esp,eax
  4118ed:	in     eax,0xcf
  4118ef:	std    
  4118f0:	fwait
  4118f1:	(bad)  
  4118f2:	jl     0x41190d
  4118f4:	ds xchg esp,eax
  4118f6:	sbb    bl,BYTE PTR [eax]
  4118f8:	inc    esi
  4118f9:	mov    ds:0x513aacdc,al
  4118fe:	gs cmp dl,bl
  411901:	lea    esi,[edi+0x4fc28b8e]
  411907:	fs int3 
  411909:	jmp    0xf460:0xd7b46620
  411910:	or     BYTE PTR [ecx-0x75440b77],bl
  411916:	out    0x76,al
  411918:	not    DWORD PTR [esi+0x395d3722]
  41191e:	out    dx,eax
  41191f:	add    BYTE PTR [edi-0x4d],cl
  411922:	es aas 
  411924:	pop    ebp
  411925:	ds retf 0xd5c0
  411929:	aam    0x59
  41192b:	mov    ch,0x60
  41192d:	lea    eax,ds:0x35cc4df0
  411933:	xor    ecx,eax
  411935:	dec    edi
  411936:	fldenv [esi-0x43]
  411939:	call   0x5836:0xd39e0f83
  411940:	in     eax,dx
  411941:	das    
  411942:	fdiv   QWORD PTR [edi+edi*4+0x27e650dd]
  411949:	ret    0x5a4d
  41194c:	mov    fs,WORD PTR [edx]
  41194e:	sti    
  41194f:	loopne 0x4119b9
  411951:	mov    ebp,0xddf6c7c4
  411956:	jnp    0x41190c
  411958:	push   edx
  411959:	pop    edi
  41195a:	inc    edi
  41195b:	mov    bl,0xda
  41195d:	les    esp,FWORD PTR [eax]
  41195f:	sub    al,0x6c
  411961:	or     al,BYTE PTR [esi+eiz*1-0x3ca9d4c1]
  411968:	out    0x9a,eax
  41196a:	lock xchg esi,eax
  41196c:	jmp    0x411946
  41196e:	cmc    
  41196f:	inc    eax
  411970:	xchg   ebx,eax
  411971:	clc    
  411972:	pop    ebx
  411973:	pop    ss
  411974:	int    0xf9
  411976:	stos   BYTE PTR es:[edi],al
  411977:	fwait
  411978:	(bad)  
  411979:	scas   eax,DWORD PTR es:[edi]
  41197a:	pop    ebx
  41197b:	ins    DWORD PTR es:[edi],dx
  41197c:	shr    BYTE PTR ds:0x3f9c7f6b,0xb8
  411983:	fcmovnu st,st(1)
  411985:	inc    esi
  411986:	dec    edi
  411987:	jmp    0x2a012651
  41198c:	retf   
  41198d:	test   BYTE PTR [edx+0x3f],ah
  411990:	lock adc al,0x71
  411993:	sub    al,0xf4
  411995:	sbb    edi,edi
  411997:	jns    0x4119b6
  411999:	or     esp,DWORD PTR [ebx]
  41199b:	and    ah,BYTE PTR [edi+0x20]
  41199e:	int    0xa2
  4119a0:	sar    dl,cl
  4119a2:	push   eax
  4119a3:	lea    eax,[eax+0x3c1e5d7d]
  4119a9:	iret   
  4119aa:	popf   
  4119ab:	lahf   
  4119ac:	fidivr WORD PTR [ebx-0x19d6e71b]
  4119b2:	ret    
  4119b3:	rcl    ebp,cl
  4119b5:	xchg   DWORD PTR ds:0xde550e28,ebp
  4119bb:	inc    esp
  4119bc:	popa   
  4119bd:	pop    ebx
  4119be:	hlt    
  4119bf:	push   0xffffffc0
  4119c1:	xor    al,0x10
  4119c3:	in     al,dx
  4119c4:	psadbw mm6,QWORD PTR [esi]
  4119c7:	out    dx,al
  4119c8:	xlat   BYTE PTR ds:[ebx]
  4119c9:	pop    ebp
  4119ca:	test   DWORD PTR [ebp-0x66],edi
  4119cd:	xor    BYTE PTR [edi+0x51],dl
  4119d0:	dec    ebx
  4119d1:	push   ebx
  4119d2:	sub    ch,dh
  4119d4:	jp     0x41197d
  4119d6:	mov    ds:0xb275730b,al
  4119db:	enter  0xbe1f,0xfb
  4119df:	sub    ah,dl
  4119e1:	pop    ecx
  4119e2:	repz ja 0x4119e4
  4119e5:	call   0xed187ba5
  4119ea:	mov    al,ds:0x99bc27d5
  4119ef:	leave  
  4119f0:	int    0x2a
  4119f2:	imul   esi,DWORD PTR [ecx],0x52ec6c86
  4119f8:	xchg   ebp,eax
  4119f9:	pop    ebx
  4119fa:	lahf   
  4119fb:	sbb    al,0xa2
  4119fd:	loop   0x411a58
  4119ff:	pop    esi
  411a00:	mov    ecx,0xab2be21b
  411a05:	cmp    esi,eax
  411a07:	ret    
  411a08:	pusha  
  411a09:	dec    edx
  411a0a:	fld    QWORD PTR [edi]
  411a0c:	add    DWORD PTR [ebp+ecx*4+0x15ca6337],esi
  411a13:	mov    ch,0x91
  411a15:	cdq    
  411a16:	pop    esp
  411a17:	inc    edi
  411a18:	cs pop ds
  411a1a:	mov    DWORD PTR [edx],0x60a10536
  411a20:	dec    edx
  411a21:	inc    ebx
  411a22:	cmc    
  411a23:	and    ebp,eax
  411a25:	cdq    
  411a26:	jne    0x411a82
  411a28:	mov    ecx,0x8be7267b
  411a2d:	lods   al,BYTE PTR ds:[esi]
  411a2e:	and    ebx,DWORD PTR [ecx+ebp*2]
  411a31:	aas    
  411a32:	jno    0x411a78
  411a34:	mov    ebx,0x993f54f5
  411a39:	scas   eax,DWORD PTR es:[edi]
  411a3a:	inc    edx
  411a3b:	loopne 0x411a14
  411a3d:	test   eax,0xc085d2f2
  411a42:	mov    dh,dh
  411a44:	loope  0x411a57
  411a46:	jno    0x411aa0
  411a48:	sub    ebp,edi
  411a4a:	cs repnz mov eax,0x37c08ad8
  411a51:	push   eax
  411a52:	adc    eax,0xe612aad9
  411a57:	cdq    
  411a58:	dec    ebp
  411a59:	dec    ebx
  411a5a:	xor    esi,DWORD PTR [ebx-0x3b]
  411a5d:	stc    
  411a5e:	out    dx,al
  411a5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a60:	hlt    
  411a61:	int    0xc
  411a63:	fadd   DWORD PTR [ecx-0x14f9eae3]
  411a69:	in     eax,0x7c
  411a6b:	jb     0x411ab2
  411a6d:	or     eax,0x97d8582c
  411a72:	dec    esp
  411a73:	or     DWORD PTR [ecx+0x7f13108b],edx
  411a79:	scas   al,BYTE PTR es:[edi]
  411a7a:	aas    
  411a7b:	pop    ebp
  411a7c:	jmp    0x5981366d
  411a81:	xchg   edi,eax
  411a82:	jae    0x411af2
  411a84:	sub    eax,0x539b76c1
  411a89:	xor    cl,BYTE PTR [ecx+0x7a]
  411a8c:	jno    0x411a93
  411a8e:	in     al,dx
  411a8f:	(bad)  
  411a90:	sar    DWORD PTR [edx],cl
  411a92:	xor    al,0x1b
  411a94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a95:	xor    cl,al
  411a97:	jnp    0x411a5d
  411a99:	lods   al,BYTE PTR ds:[esi]
  411a9a:	or     al,0xfb
  411a9c:	nop
  411a9d:	pop    ss
  411a9e:	(bad)  
  411a9f:	dec    edx
  411aa0:	lods   eax,DWORD PTR ds:[esi]
  411aa1:	inc    ebx
  411aa2:	std    
  411aa3:	add    eax,0xb208f605
  411aa8:	and    dl,ah
  411aaa:	scas   al,BYTE PTR es:[edi]
  411aab:	lds    esi,FWORD PTR [ebp+0x59]
  411aae:	sub    cl,ch
  411ab0:	(bad)  
  411ab2:	nop
  411ab3:	fstp   QWORD PTR [edx+0x8]
  411ab6:	push   ebx
  411ab7:	sbb    dh,BYTE PTR ds:0x99c211a9
  411abd:	lahf   
  411abe:	out    0xaa,eax
  411ac0:	jl     0x411b31
  411ac2:	rcl    DWORD PTR [esi-0x4e],1
  411ac5:	je     0x411abf
  411ac7:	in     al,0xe
  411ac9:	or     dh,BYTE PTR [edi+ebp*1+0x16ce89f3]
  411ad0:	cmp    DWORD PTR [edi+0x97db393],eax
  411ad6:	jge    0x411b13
  411ad8:	sub    ecx,DWORD PTR [eax+ebp*1+0x58fb8bf4]
  411adf:	repnz sar BYTE PTR [ecx],0x69
  411ae3:	loopne 0x411b1a
  411ae5:	mov    dh,cl
  411ae7:	shl    al,cl
  411ae9:	scas   al,BYTE PTR es:[edi]
  411aea:	shl    al,0x16
  411aed:	or     esp,esi
  411aef:	pop    ebx
  411af0:	pop    ecx
  411af1:	or     BYTE PTR [ebp+0x2acdd07],ch
  411af7:	xor    dl,ch
  411af9:	push   cs
  411afa:	addr16 test al,bl
  411afd:	cmp    WORD PTR [eax],ax
	...
  411ce0:	add    BYTE PTR [eax],al
  411ce2:	add    BYTE PTR [eax],ah
  411ce4:	lahf   
  411ce5:	arpl   WORD PTR [ebp-0x40110201],cx
  411ceb:	mov    gs,WORD PTR [ebx+0xe004100]
  411cf1:	mov    dh,0xc9
  411cf3:	rol    BYTE PTR [ebp+0x1],0x0
  411cf7:	and    eax,0x2000007
  411cfc:	mov    esp,0x4dcf56f3
  411d01:	clc    
  411d02:	mov    ecx,0x4c9e9d08
  411d07:	jne    0x411cd2
  411d09:	outs   dx,BYTE PTR ds:[esi]
  411d0a:	fisttp DWORD PTR [eax+0x5b848aee]
  411d10:	call   DWORD PTR [ebx+0x528e4c4f]
  411d16:	dec    ebx
  411d17:	push   ebx
  411d18:	jne    0x411d0a
  411d1a:	stos   BYTE PTR es:[edi],al
  411d1b:	lods   eax,DWORD PTR ds:[esi]
  411d1c:	(bad)  
  411d1d:	je     0x411d9e
  411d1f:	loop   0x411d09
  411d21:	push   esi
  411d22:	mov    dl,0x66
  411d24:	jnp    0x411cdc
  411d26:	add    edx,DWORD PTR [esi]
  411d28:	dec    ebp
  411d29:	mov    bh,bl
  411d2b:	mov    ecx,0xb3874bc3
  411d30:	cld    
  411d31:	xor    edi,DWORD PTR [ecx]
  411d33:	dec    esi
  411d34:	pop    ebx
  411d35:	xchg   esp,eax
  411d36:	sub    BYTE PTR [edi-0x1a],al
  411d39:	and    bh,BYTE PTR [edx+ecx*8-0x5d]
  411d3d:	jecxz  0x411d14
  411d3f:	dec    ebp
  411d40:	enter  0x6236,0x33
  411d44:	inc    esp
  411d45:	stos   DWORD PTR es:[edi],eax
  411d46:	sbb    BYTE PTR [edi+0x3e],bh
  411d49:	adc    esi,0xd4492181
  411d4f:	mov    esi,0x14482ab7
  411d54:	or     ebp,DWORD PTR [edi]
  411d56:	sub    BYTE PTR [edi-0x7d],bl
  411d59:	sbb    DWORD PTR [eax+0x6eadade5],ebp
  411d5f:	and    eax,DWORD PTR [ecx]
  411d61:	xchg   ebx,eax
  411d62:	adc    ecx,DWORD PTR [eax]
  411d64:	mov    DWORD PTR ds:0xc3f67e6d,esi
  411d6a:	les    eax,FWORD PTR [esi-0x2d]
  411d6d:	sub    DWORD PTR [ecx],ecx
  411d6f:	fimul  WORD PTR [ecx+ecx*2-0x54]
  411d73:	shl    BYTE PTR [ecx+0x6d],1
  411d76:	jns    0x411d2c
  411d78:	ret    
  411d79:	push   esp
  411d7a:	add    DWORD PTR [ebx+0x1d],ecx
  411d7d:	test   eax,0x9af23947
  411d82:	enter  0x4fe7,0xcd
  411d86:	popa   
  411d87:	fmul   st(0),st
  411d89:	jno    0x411dde
  411d8b:	repz aaa 
  411d8d:	pop    edx
  411d8e:	test   eax,0x34cb60e1
  411d93:	jae    0x411dc5
  411d95:	test   al,0x33
  411d97:	repnz aaa 
  411d99:	icebp  
  411d9a:	pop    edi
  411d9b:	dec    esp
  411d9c:	cmp    al,bh
  411d9e:	cmp    eax,DWORD PTR [edx-0x329bfa87]
  411da4:	jp     0x411dc2
  411da6:	inc    eax
  411da7:	leave  
  411da8:	push   cs
  411da9:	je     0x411e09
  411dab:	push   es
  411dac:	or     ebp,DWORD PTR [edi]
  411dae:	jns    0x411d60
  411db0:	jl     0x411dc1
  411db2:	jge    0x411e0b
  411db4:	out    dx,eax
  411db5:	test   al,0x36
  411db7:	dec    edi
  411db8:	fnstenv [edx]
  411dba:	add    bh,BYTE PTR [esi+0x2f49d6d0]
  411dc0:	fnstcw WORD PTR [edx+0x6b4d8550]
  411dc6:	lock mov esi,0xc8d0cbd5
  411dcc:	loop   0x411d83
  411dce:	sar    DWORD PTR [edi],cl
  411dd0:	pop    eax
  411dd1:	adc    BYTE PTR [edi+0x6b634f26],bl
  411dd7:	jno    0x411d5c
  411dd9:	and    cl,bl
  411ddb:	cmp    bp,bx
  411dde:	pop    edx
  411ddf:	mov    ebp,0x62fef5bc
  411de4:	mov    bl,0x66
  411de6:	dec    esp
  411de7:	retf   0x8780
  411dea:	shl    DWORD PTR [ebp+0x324ffc64],cl
  411df0:	add    eax,0x7d6da90
  411df5:	popf   
  411df6:	into   
  411df7:	je     0x411e25
  411df9:	cmp    DWORD PTR ds:[esp+eax*8-0xd],esp
  411dfe:	mov    al,ds:0xab3a2c84
  411e03:	adc    al,0xea
  411e05:	mov    bh,ch
  411e07:	mov    ds:0x14330938,eax
  411e0c:	aas    
  411e0d:	ret    
  411e0e:	mov    edx,0x43abaa79
  411e13:	lea    edx,gs:[edx+0x68]
  411e17:	add    esp,DWORD PTR ds:0x81a70f23
  411e1d:	aaa    
  411e1e:	jge    0x411e84
  411e20:	xor    edx,ecx
  411e22:	in     al,dx
  411e23:	mov    cs,WORD PTR [ebp+0x10]
  411e26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e27:	inc    eax
  411e28:	xchg   BYTE PTR [ecx],dl
  411e2a:	mov    ds:0x97a57e68,al
  411e2f:	icebp  
  411e30:	sbb    cl,ch
  411e32:	lahf   
  411e33:	fst    DWORD PTR [ecx-0x5070a729]
  411e39:	(bad)
  411e3c:	or     ebx,edi
  411e3e:	jo     0x411de5
  411e40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e41:	popa   
  411e42:	push   ss
  411e43:	pop    ss
  411e44:	pop    ecx
  411e45:	inc    ebx
  411e46:	sub    DWORD PTR [esi],edi
  411e48:	or     dl,0x6c
  411e4b:	add    DWORD PTR [edi-0x75],0xf5f6674a
  411e52:	sar    BYTE PTR [edx-0x32e8f94b],cl
  411e58:	emms   
  411e5a:	xchg   eax,ecx
  411e5c:	dec    esp
  411e5d:	sar    ecx,cl
  411e5f:	push   ebp
  411e60:	scas   eax,DWORD PTR es:[edi]
  411e61:	(bad)  
  411e62:	adc    al,0xee
  411e64:	pop    esp
  411e65:	scas   al,BYTE PTR es:[edi]
  411e66:	pop    ebp
  411e67:	cmp    ch,BYTE PTR [eax]
  411e69:	jnp    0x411e04
  411e6b:	jle    0x411edc
  411e6d:	inc    esi
  411e6e:	das    
  411e6f:	push   ss
  411e70:	cdq    
  411e71:	inc    ebx
  411e72:	xchg   ebx,eax
  411e73:	push   ds
  411e74:	add    bl,al
  411e76:	inc    esi
  411e77:	mov    al,0xfd
  411e79:	dec    edi
  411e7a:	add    bh,dl
  411e7c:	sub    esi,DWORD PTR [ebx+0x3856b0c8]
  411e82:	bound  edi,QWORD PTR [ebp-0x67]
  411e85:	stos   DWORD PTR es:[edi],eax
  411e86:	jbe    0x411e89
  411e88:	mov    ds:0x9437b39e,eax
  411e8d:	daa    
  411e8e:	fstp   TBYTE PTR [ebx+eiz*4]
  411e91:	push   ebx
  411e92:	push   ds
  411e93:	adc    al,BYTE PTR [eax+0x6]
  411e96:	mov    edi,0x579d93e4
  411e9b:	xor    bl,BYTE PTR [edx-0x108f1dab]
  411ea1:	packssdw mm4,QWORD PTR [edx+eiz*2-0xc205cea]
  411ea9:	cmc    
  411eaa:	or     DWORD PTR [ebx+ebx*8],edi
  411ead:	loope  0x411e5d
  411eaf:	lds    edx,FWORD PTR [ecx+0x670c8ce0]
  411eb5:	xor    al,0x57
  411eb7:	mov    DWORD PTR [edi-0x59],edx
  411eba:	mov    ebp,0xec600ee3
  411ebf:	jmp    0x4b98ef6a
  411ec4:	pop    ss
  411ec5:	xchg   ecx,eax
  411ec6:	sar    DWORD PTR [ebx+0x15dbf08c],1
  411ecc:	xor    BYTE PTR [ebx+0x3ae54536],ah
  411ed2:	jecxz  0x411f36
  411ed4:	fnstsw WORD PTR [edx]
  411ed6:	leave  
  411ed7:	jb     0x411eff
  411ed9:	inc    edi
  411eda:	push   cs
  411edb:	vpor   ymm5,ymm7,ymm0
  411edf:	and    DWORD PTR [eax],0x26bf434f
  411ee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ee6:	call   0x454db4b
  411eeb:	push   0xdb6bc1ba
  411ef0:	sub    eax,0x5c32256b
  411ef5:	xchg   ebp,eax
  411ef6:	shl    BYTE PTR [ebp+0x43],cl
  411ef9:	stos   DWORD PTR es:[edi],eax
  411efa:	gs pop ecx
  411efc:	pop    edi
  411efd:	mov    cs,WORD PTR gs:[ebp-0x14]
  411f01:	repnz pop ebx
  411f03:	jb     0x411ed2
  411f05:	dec    ebp
  411f06:	jbe    0x411ecc
  411f08:	xchg   esp,eax
  411f09:	inc    ebp
  411f0a:	ficom  WORD PTR [ebp-0x5fbbd47]
  411f10:	xchg   esp,eax
  411f11:	inc    ebp
  411f12:	or     BYTE PTR [eax],ah
  411f14:	leave  
  411f15:	xor    BYTE PTR [ecx-0x7],ch
  411f18:	add    eax,0xca8ad120
  411f1d:	jmp    0x938cbe60
  411f22:	bound  edi,QWORD PTR [ecx+0x783b95e4]
  411f28:	lds    ebp,FWORD PTR [edx+0x6d9efdf3]
  411f2e:	pop    ss
  411f2f:	add    BYTE PTR [ebx],bl
  411f31:	xor    al,0xeb
  411f33:	popf   
  411f34:	push   0x68b49ddb
  411f39:	enter  0x856d,0x69
  411f3d:	pushf  
  411f3e:	dec    edx
  411f3f:	(bad)
  411f43:	shr    BYTE PTR [edi],cl
  411f45:	repz jo 0x411fb2
  411f48:	mov    eax,0x706e343a
  411f4d:	push   cs
  411f4e:	pop    ds
  411f4f:	mov    ebp,eax
  411f51:	xlat   BYTE PTR ds:[ebx]
  411f52:	stos   BYTE PTR es:[edi],al
  411f53:	jnp    0x411f63
  411f55:	mov    ds,WORD PTR [ebp+0x79a12cad]
  411f5b:	jecxz  0x411f20
  411f5d:	fnsave [ebp-0x60]
  411f60:	mov    edx,0xec83b485
  411f65:	add    bh,bh
  411f67:	xchg   ebp,eax
  411f68:	pop    edi
  411f69:	call   0x3e6adf9e
  411f6e:	inc    ecx
  411f6f:	lahf   
  411f70:	in     al,0xb
  411f72:	inc    edx
  411f73:	jmp    0xcd8f2e6f
  411f78:	fdiv   QWORD PTR [ebx+esi*2]
  411f7b:	lock sbb BYTE PTR [ebx],al
  411f7e:	add    eax,eax
  411f80:	scas   al,BYTE PTR es:[edi]
  411f81:	arpl   WORD PTR [ecx-0x1ba2837a],bx
  411f87:	dec    ebx
  411f88:	dec    edi
  411f89:	outs   dx,BYTE PTR ds:[esi]
  411f8a:	xor    al,0xaa
  411f8c:	push   esi
  411f8d:	push   ecx
  411f8e:	adc    DWORD PTR [ebx+0x5b315ed0],ebx
  411f94:	mov    bh,0x18
  411f96:	sbb    BYTE PTR [edx-0x51],ch
  411f99:	pop    ebp
  411f9a:	scas   al,BYTE PTR es:[edi]
  411f9b:	es in  al,dx
  411f9d:	inc    eax
  411f9e:	gs sti 
  411fa0:	cmp    eax,0xdd75f568
  411fa5:	pop    es
  411fa6:	test   al,0x63
  411fa8:	mov    dh,0xfc
  411faa:	imul   ebp,DWORD PTR [edi],0xffffffb9
  411fad:	pop    ebx
  411fae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411faf:	sub    DWORD PTR [edi-0x599593ec],edx
  411fb5:	mov    edx,0xedb390a5
  411fba:	adc    DWORD PTR [edx-0x47],0xf85cded9
  411fc1:	sub    eax,0x914e6b50
  411fc6:	mov    bh,0xb0
  411fc8:	sbb    ch,dh
  411fca:	sub    eax,0x459f9123
  411fcf:	gs aam 0x2f
  411fd2:	sub    DWORD PTR [ecx-0x4],edx
  411fd5:	in     al,dx
  411fd6:	into   
  411fd7:	ins    BYTE PTR es:[edi],dx
  411fd8:	out    dx,al
  411fd9:	repz mov al,ds:0x2700269e
  411fdf:	pop    eax
  411fe0:	imul   DWORD PTR [eax+ebx*2+0x23eae67e]
  411fe7:	lea    ecx,[ecx-0x3a3f3e3b]
  411fed:	ins    DWORD PTR es:[edi],dx
  411fee:	sahf   
  411fef:	push   ebp
  411ff0:	xchg   edx,eax
  411ff1:	nop
  411ff2:	jns    0x412045
  411ff4:	ja     0x41203b
  411ff6:	xor    edx,edi
  411ff8:	jge    0x411ff5
  411ffa:	leave  
  411ffb:	daa    
  411ffc:	jecxz  0x41206c
  411ffe:	mov    dh,0xf2
  412000:	(bad)  
  412001:	outs   dx,DWORD PTR ds:[esi]
  412002:	test   al,0x17
  412004:	mov    eax,ds:0xf206bc6c
  412009:	xchg   DWORD PTR [eax-0xa9a6471],eax
  41200f:	jle    0x41200f
  412011:	hlt    
  412012:	mov    eax,0x78d09b99
  412017:	std    
  412018:	rol    ch,0xd3
  41201b:	cmp    dh,BYTE PTR [eax+0x41baa176]
  412021:	imul   ecx,esi,0x79f7a903
  412027:	sbb    al,0xec
  412029:	add    eax,DWORD PTR [ebp+0x2f]
  41202c:	adc    DWORD PTR [ebx+0x68f7a712],ebx
  412032:	sub    cl,cl
  412034:	ror    BYTE PTR [ebp-0x11],cl
  412037:	mov    DWORD PTR [ecx+0x1b],esi
  41203a:	push   ss
  41203b:	sub    eax,ebp
  41203d:	push   edi
  41203e:	fsub   DWORD PTR [ebx+0x3377c8c0]
  412044:	adc    eax,0xef30c36
  412049:	mov    ds:0x6078c2f2,eax
  41204e:	sar    ecx,cl
  412050:	ss fwait
  412052:	xor    al,0x93
  412054:	ret    
  412055:	iret   
  412056:	stc    
  412057:	sbb    DWORD PTR ds:[esi-0x29286435],edx
  41205e:	xchg   esp,eax
  41205f:	cld    
  412060:	mov    ah,0x49
  412062:	or     eax,0xb4b8c956
  412067:	les    edx,FWORD PTR [ebx]
  412069:	repz and DWORD PTR [edi],ecx
  41206c:	mov    ebx,0xdcee2693
  412071:	adc    dh,dl
  412073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412074:	xor    al,0xe9
  412076:	repz das 
  412078:	adc    edi,DWORD PTR [ecx]
  41207a:	xor    al,0x26
  41207c:	mov    gs,WORD PTR [ecx-0x20982b42]
  412082:	repz jbe 0x412092
  412085:	xor    eax,eax
  412087:	jo     0x41203b
  412089:	fsubr  DWORD PTR [edx+0x6e]
  41208c:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41208e:	mov    dl,0xd5
  412090:	out    0x5f,al
  412092:	mov    cl,0xfa
  412094:	cmp    dl,ch
  412096:	out    0x64,eax
  412098:	inc    edi
  412099:	xchg   eax,ecx
  41209b:	jl     0x412035
  41209d:	sbb    bh,bl
  41209f:	dec    ecx
  4120a0:	pushf  
  4120a1:	fs call 0xce25:0x6c472c11
  4120a9:	cmp    ebx,DWORD PTR [ecx]
  4120ab:	mov    ebp,0xecab16bf
  4120b0:	daa    
  4120b1:	aad    0xe3
  4120b3:	mov    ebx,0x30d62bc6
  4120b8:	pop    ebp
  4120b9:	std    
  4120ba:	push   es
  4120bb:	out    dx,al
  4120bc:	push   ecx
  4120bd:	loop   0x4120a3
  4120bf:	repnz loope 0x412135
  4120c2:	sahf   
  4120c3:	jmp    0xc0da:0xb3c8dc4a
  4120ca:	push   es
  4120cb:	sahf   
  4120cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120cd:	aaa    
  4120ce:	sub    bl,BYTE PTR [edi]
  4120d0:	sbb    eax,0x108204fe
  4120d5:	sti    
  4120d6:	sti    
  4120d7:	mov    eax,0x91aff00c
  4120dc:	jge    0x412065
  4120de:	es dec edx
  4120e0:	inc    ebp
  4120e1:	out    0x7b,eax
  4120e3:	xor    DWORD PTR [esp-0x2b],esp
  4120e7:	sub    edx,DWORD PTR [edx+0x49]
  4120ea:	fnstenv [esp+ebp*1-0x6b]
  4120ee:	xor    DWORD PTR [eax+eax*1],ebp
  4120f1:	inc    edx
  4120f2:	ja     0x41208f
  4120f4:	std    
  4120f5:	imul   edx,ecx,0x62638f7b
  4120fb:	mov    bh,0x80
  4120fd:	xchg   esi,eax
  4120fe:	or     eax,0x3b9cc255
  412103:	or     DWORD PTR gs:[ebx],edx
  412106:	pop    ebx
  412107:	cmp    al,0x46
  412109:	arpl   WORD PTR ds:0xe49b5508,di
  41210f:	retf   0xb50f
  412112:	cmp    esp,ebp
  412114:	dec    edi
  412115:	aas    
  412116:	inc    ebx
  412117:	jg     0x4120c6
  412119:	jl     0x4120cb
  41211b:	or     DWORD PTR [edi],edx
  41211d:	jmp    0xd08f:0x7b1b1702
  412124:	pop    eax
  412125:	std    
  412126:	pop    esp
  412127:	xchg   BYTE PTR [ebx+0x3dca090e],cl
  41212d:	rep ins BYTE PTR es:[edi],dx
  41212f:	call   0x4193e9eb
  412134:	and    ecx,ebp
  412136:	cmp    eax,0x467d338b
  41213b:	and    ch,al
  41213d:	ja     0x4120f0
  41213f:	arpl   WORD PTR [eax-0x1a],dx
  412142:	data16 jp 0x412144
  412145:	mov    edx,DWORD PTR [edx+ebp*2+0x280c2969]
  41214c:	fist   DWORD PTR [edi+ebp*8-0x43]
  412150:	push   0xffffffec
  412152:	jne    0x412157
  412154:	push   0xffffff91
  412156:	int    0x9b
  412158:	nop
  412159:	inc    edx
  41215a:	jae    0x4120de
  41215c:	test   BYTE PTR [esi],ch
  41215e:	and    esp,DWORD PTR [ebx]
  412160:	enter  0x1e9d,0xd7
  412164:	imul   edi,DWORD PTR [ecx+0x3b],0x1aaed72e
  41216b:	mov    esi,0xec03aaab
  412170:	mov    ch,0x7e
  412172:	(bad)  
  412173:	rol    DWORD PTR [ebx+0x66],1
  412176:	sub    eax,0x9b941d38
  41217b:	adc    BYTE PTR [ebp-0x12],ch
  41217e:	xchg   edx,eax
  41217f:	add    eax,0x6178c89
  412184:	push   0xffffffda
  412186:	mov    WORD PTR [ebx+ebx*1+0x47],fs
  41218a:	mov    eax,ds:0xfa223ac1
  41218f:	mov    BYTE PTR [ecx+0x9],ch
  412192:	(bad)  
  412194:	popf   
  412195:	je     0x4121a8
  412197:	dec    DWORD PTR [ecx-0x3ca7347b]
  41219d:	hlt    
  41219e:	mov    al,0xa6
  4121a0:	xchg   DWORD PTR [edx+ebx*4+0x6d47a375],edx
  4121a7:	mov    WORD PTR [edi+esi*8],?
  4121aa:	aas    
  4121ab:	addr16 add eax,0x9e5f19ff
  4121b1:	inc    esp
  4121b2:	sbb    BYTE PTR [ebx-0x31],0x54
  4121b6:	add    edi,DWORD PTR [ecx]
  4121b8:	adc    edx,ebx
  4121ba:	arpl   WORD PTR [edi-0x6f4e60aa],sp
  4121c0:	repnz data16 fwait
  4121c3:	sbb    al,0x46
  4121c5:	bound  ebx,QWORD PTR [edx]
  4121c7:	cmp    DWORD PTR cs:[ebx],esi
  4121ca:	nop
  4121cb:	dec    ecx
  4121cc:	loope  0x41224b
  4121ce:	adc    DWORD PTR [eax],esi
  4121d0:	xchg   ecx,eax
  4121d1:	pop    ebx
  4121d2:	adc    al,0x69
  4121d4:	or     eax,0xb6ce8408
  4121d9:	scas   al,BYTE PTR es:[edi]
  4121da:	xchg   edi,eax
  4121db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121dc:	pop    ss
  4121dd:	outs   dx,BYTE PTR ds:[esi]
  4121de:	test   al,0x50
  4121e0:	adc    edi,DWORD PTR [ebx+0x23515ff1]
  4121e6:	sbb    ebp,DWORD PTR [eax+0x6b]
  4121e9:	sub    edi,DWORD PTR [ebp+0x1c]
  4121ec:	xlat   BYTE PTR ds:[ebx]
  4121ed:	loope  0x4121d7
  4121ef:	in     eax,dx
  4121f0:	in     eax,0x65
  4121f2:	pushf  
  4121f3:	cmp    al,0xfd
  4121f5:	stc    
  4121f6:	jmp    0x82e52a2d
  4121fb:	pop    eax
  4121fc:	mov    esp,0x74b14fb5
  412201:	loope  0x412236
  412203:	sbb    ebp,DWORD PTR [edx]
  412205:	cs push esp
  412207:	push   cs
  412208:	sbb    BYTE PTR [ecx-0x65fbc2a5],al
  41220e:	jae    0x412256
  412210:	stc    
  412211:	in     eax,dx
  412212:	pusha  
  412213:	mov    ds:0x210bc8ec,al
  412218:	sti    
  412219:	xchg   ebx,eax
  41221a:	cdq    
  41221b:	ss test al,0xc8
  41221e:	repnz sti 
  412220:	out    dx,al
  412221:	adc    cl,BYTE PTR ds:0x5f4f4397
  412227:	setns  BYTE PTR [eax-0x7339649c]
  41222e:	adc    eax,0x75e684d4
  412233:	add    DWORD PTR [ecx+0x55dda7f7],eax
  412239:	mov    dl,0xca
  41223b:	fucom  st(1)
  41223d:	aaa    
  41223e:	push   edi
  41223f:	stc    
  412240:	mov    al,0x98
  412242:	imul   esp,DWORD PTR [esp+eax*2+0x7e],0x3e
  412247:	cmc    
  412248:	test   BYTE PTR [edi+ebp*4-0x7d6bcf16],cl
  41224f:	mov    ss,WORD PTR [esi]
  412251:	and    BYTE PTR [ebp-0x7b],dl
  412254:	xor    eax,0xb1d94d61
  412259:	or     eax,0xb193a51e
  41225e:	cmp    al,0xa8
  412260:	pop    es
  412261:	xor    esi,edi
  412263:	push   esp
  412264:	imul   al
  412266:	jnp    0x41229c
  412268:	mov    BYTE PTR [eax+0x7e],cl
  41226b:	or     BYTE PTR [esi+esi*8+0x20dbb519],ah
  412272:	in     eax,0xb2
  412274:	dec    ebp
  412275:	or     bl,BYTE PTR [ecx-0x38be7170]
  41227b:	pushf  
  41227c:	mov    ebx,0xf073c254
  412281:	lds    esi,FWORD PTR [eax+edx*1+0x1]
  412285:	(bad)  
  412286:	sti    
  412287:	in     al,dx
  412288:	les    esi,FWORD PTR [edi]
  41228a:	shl    BYTE PTR [ebx-0xf96bbd1],cl
  412290:	fidiv  DWORD PTR [ebx-0x6a]
  412293:	adc    BYTE PTR [ecx-0x4154e6ef],dh
  412299:	sbb    ebp,ebp
  41229b:	lock mov ds:0xd693c977,eax
  4122a1:	lea    eax,[ebx+0x32d4d46b]
  4122a7:	push   es
  4122a8:	clc    
  4122a9:	xlat   BYTE PTR ds:[ebx]
  4122aa:	xchg   edi,eax
  4122ab:	scas   eax,DWORD PTR es:[edi]
  4122ac:	mov    edx,0xf31d5f89
  4122b1:	xchg   BYTE PTR [edx],ch
  4122b3:	adc    al,0xe3
  4122b5:	cld    
  4122b6:	dec    edx
  4122b7:	or     DWORD PTR [ecx+esi*4+0x23],ecx
  4122bb:	or     ebx,DWORD PTR [eax+ebx*4]
  4122be:	xchg   edx,eax
  4122bf:	and    DWORD PTR [eax],esp
  4122c1:	xchg   esi,eax
  4122c2:	lahf   
  4122c3:	shl    DWORD PTR gs:[edi-0x57],1
  4122c7:	xor    eax,0x86dc1d7b
  4122cc:	mov    eax,ds:0x427f4e7e
  4122d1:	dec    ecx
  4122d2:	cdq    
  4122d3:	push   0x8500db85
  4122d8:	inc    esp
  4122d9:	pop    esp
  4122da:	mov    bh,0x10
  4122dc:	xor    ebx,ecx
  4122de:	in     al,dx
  4122df:	jp     0x4122bf
  4122e1:	dec    edx
  4122e2:	mov    ebx,0x79b83cac
  4122e7:	pop    ebx
  4122e8:	ins    BYTE PTR es:[edi],dx
  4122e9:	(bad)  
  4122ea:	cmp    eax,DWORD PTR [ebx+0x507c13a8]
  4122f0:	xchg   DWORD PTR [edi+0x4],ecx
  4122f3:	xchg   ebp,eax
  4122f4:	or     eax,0xf746057f
  4122f9:	push   0x7041b8fe
  4122fe:	(bad)  
  4122ff:	fbld   TBYTE PTR [esi]
  412301:	out    0x53,eax
  412303:	aam    0xfc
  412305:	(bad)  
  412306:	fisttp DWORD PTR [ebx+0xd]
  412309:	mov    ah,0x6a
  41230b:	mov    cl,0x23
  41230d:	pop    ds
  41230e:	xor    al,0x8
  412310:	adc    BYTE PTR [ecx],0x6e
  412313:	fimul  WORD PTR [ebx+eiz*4-0x2528698d]
  41231a:	push   0xc11a4d7f
  41231f:	xor    BYTE PTR [edx-0x4d],dh
  412322:	fld    TBYTE PTR [ebp-0x31]
  412325:	shl    al,cl
  412327:	test   al,0xfb
  412329:	lds    ecx,FWORD PTR ds:[edi]
  41232c:	(bad)  
  41232d:	mov    edx,0x76b6afc8
  412332:	test   al,0x24
  412334:	shr    BYTE PTR [edi+0x16],0x3a
  412338:	xchg   esi,eax
  412339:	push   edi
  41233a:	stos   BYTE PTR es:[edi],al
  41233b:	mov    dh,0x78
  41233d:	sbb    BYTE PTR [ebx+0x57],dh
  412340:	pop    edx
  412341:	icebp  
  412342:	sti    
  412343:	and    esi,DWORD PTR [eax]
  412345:	(bad)  
  412346:	and    eax,0x1d8c573d
  41234b:	pop    ds
  41234c:	mov    dl,0x32
  41234e:	ins    BYTE PTR es:[edi],dx
  41234f:	popa   
  412350:	cmc    
  412351:	xor    al,0x7a
  412353:	outs   dx,DWORD PTR ds:[esi]
  412354:	out    0x7,al
  412356:	inc    esi
  412357:	test   eax,0xce0482f3
  41235c:	inc    ebx
  41235d:	sub    eax,0x1397862e
  412362:	cmp    BYTE PTR [esi],0x98
  412365:	push   ss
  412366:	sub    edx,ebp
  412368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412369:	dec    edx
  41236a:	repz imul ebp,DWORD PTR ds:0x1d03aa8d,0xfffffff5
  412372:	mov    eax,0x9a83c7b5
  412377:	clc    
  412378:	add    BYTE PTR [ecx+0x75],0x6a
  41237c:	aam    0x90
  41237e:	jno    0x412324
  412380:	stc    
  412381:	add    eax,0xa5a99159
  412386:	rcl    ebp,cl
  412388:	add    eax,0x24fc9f3e
  41238d:	xchg   ebp,eax
  41238e:	dec    eax
  41238f:	mov    bl,0x61
  412391:	push   ecx
  412392:	(bad)  [eax-0x7f]
  412395:	sub    eax,0xce23b263
  41239a:	popf   
  41239b:	cmp    edx,DWORD PTR [ecx]
  41239d:	push   eax
  41239e:	fld    QWORD PTR [edx]
  4123a0:	ds loop 0x4123ed
  4123a3:	ss xchg ecx,eax
  4123a5:	repz not DWORD PTR [edx]
  4123a8:	pop    ss
  4123a9:	add    bl,BYTE PTR [esi+0x2171332f]
  4123af:	xchg   esi,eax
  4123b0:	add    DWORD PTR [edi-0x60],esi
  4123b3:	and    al,0xde
  4123b5:	addr16 mov al,ds:0x1182
  4123b9:	adc    al,0x4
  4123bb:	jecxz  0x41235a
  4123bd:	jg     0x4123de
  4123bf:	adc    DWORD PTR [edx],ebp
  4123c1:	int3   
  4123c2:	scas   al,BYTE PTR es:[edi]
  4123c3:	dec    edi
  4123c4:	lds    ecx,FWORD PTR [edi-0x16]
  4123c7:	push   edx
  4123c8:	adc    DWORD PTR [esi],edx
  4123ca:	dec    ecx
  4123cb:	xor    al,0xb3
  4123cd:	sub    eax,0x580f9ec
  4123d2:	(bad)  
  4123d4:	stos   DWORD PTR es:[edi],eax
  4123d5:	or     bh,0xb0
  4123d8:	(bad)  [ecx+0x2e568af4]
  4123de:	pop    ss
  4123df:	or     ebp,esi
  4123e1:	add    eax,0xd7f269b9
  4123e6:	jecxz  0x412425
  4123e8:	imul   ecx,DWORD PTR [ebx+0x68d84ad8],0xffffff9e
  4123ef:	popf   
  4123f0:	mov    bl,0x97
  4123f2:	sahf   
  4123f3:	fs add al,0xa9
  4123f6:	into   
  4123f7:	repnz popf 
  4123f9:	fbstp  TBYTE PTR [ecx-0x5e]
  4123fc:	cmp    cl,ah
  4123fe:	xor    esp,ebp
  412400:	repnz adc eax,0xbdf8fc42
  412406:	sbb    eax,0x85c68a7f
  41240b:	call   0x34fa53d1
  412410:	jmp    0x1319b1aa
  412415:	test   bh,dl
  412417:	cmp    DWORD PTR [edi+eax*4-0x2c21e410],edx
  41241e:	xchg   ebx,eax
  41241f:	push   esp
	...
  4125f8:	sbb    al,0x6c
  4125fa:	ins    DWORD PTR es:[edi],dx
  4125fb:	les    edi,FWORD PTR [ebp-0x3b]
  4125fe:	mov    ebp,0x7e8bcdfc
  412603:	jae    0x41267b
  412605:	iret   
  412606:	xlat   BYTE PTR ds:[ebx]
  412607:	daa    
  412608:	fwait
  412609:	add    DWORD PTR ds:[eax],eax
  41260c:	and    eax,0x19000007
  412611:	add    ch,BYTE PTR ds:0x95a40e25
  412617:	xor    al,0xcd
  412619:	nop
  41261a:	aas    
  41261b:	pop    ecx
  41261c:	dec    esp
  41261d:	cld    
  41261e:	in     eax,0x32
  412620:	js     0x41268e
  412622:	(bad)  
  412623:	punpckhbw mm1,QWORD PTR [esi-0x41]
  412627:	mov    ebx,0x5eab3a47
  41262c:	stc    
  41262d:	jp     0x412621
  41262f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412630:	ror    DWORD PTR [edi-0x5c],1
  412633:	out    dx,al
  412634:	ds push cs
  412636:	or     al,0xeb
  412638:	mov    ah,0x12
  41263a:	(bad)
  41263d:	push   esi
  41263e:	sbb    al,0x53
  412640:	sub    BYTE PTR [ebx+0x6a],0xde
  412644:	retf   0xb9d9
  412647:	xor    al,al
  412649:	xchg   DWORD PTR [ebp+esi*4+0x33b6b87a],ecx
  412650:	aaa    
  412651:	(bad)  
  412652:	neg    BYTE PTR [esi]
  412654:	shl    DWORD PTR ds:0xb33c6761,1
  41265a:	imul   esi,DWORD PTR [esi+0x150016e5],0xffffffe1
  412661:	cmp    eax,0x1ad5fb17
  412666:	mul    BYTE PTR [ebp-0x57a60c7c]
  41266c:	mov    ebx,0x1fbaf3c7
  412671:	dec    ebx
  412672:	(bad)  
  412673:	mov    dl,0xe5
  412675:	cmp    al,0xbc
  412677:	stos   BYTE PTR es:[edi],al
  412678:	adc    BYTE PTR [esi-0x36],cl
  41267b:	scas   eax,DWORD PTR es:[edi]
  41267c:	cld    
  41267d:	mul    BYTE PTR [ecx]
  41267f:	mov    al,ds:0x107f7e9a
  412684:	frstor [esi]
  412686:	js     0x41262c
  412688:	cmp    eax,0x4b48219d
  41268d:	sar    BYTE PTR [eax-0x7a5b946a],0x78
  412694:	jg     0x412617
  412696:	or     ebx,esp
  412698:	push   ss
  412699:	add    al,BYTE PTR [edx]
  41269b:	pop    esi
  41269c:	icebp  
  41269d:	jp     0x412701
  41269f:	adc    eax,0xf2af75d9
  4126a4:	push   cs
  4126a5:	ror    DWORD PTR [esi],cl
  4126a7:	aad    0x83
  4126a9:	dec    ebp
  4126aa:	jp     0x4126d3
  4126ac:	aad    0x4a
  4126ae:	xor    al,BYTE PTR ds:0x1d2599b2
  4126b4:	xchg   esi,eax
  4126b5:	jnp    0x4126a0
  4126b7:	das    
  4126b8:	push   cs
  4126b9:	ja     0x412681
  4126bb:	les    ecx,FWORD PTR [esi+eiz*2-0x57e7aed2]
  4126c2:	inc    edx
  4126c3:	pop    ds
  4126c4:	loop   0x41270e
  4126c6:	xor    al,0x23
  4126c8:	repz scas eax,DWORD PTR es:[edi]
  4126ca:	jae    0x412662
  4126cc:	hlt    
  4126cd:	jl     0x41274b
  4126cf:	or     DWORD PTR [edi-0x49245397],esp
  4126d5:	ins    DWORD PTR es:[edi],dx
  4126d6:	scas   eax,DWORD PTR es:[edi]
  4126d7:	rcr    BYTE PTR [esp+ebp*1+0x5b],1
  4126db:	add    ebx,ecx
  4126dd:	jp     0x412689
  4126df:	je     0x412742
  4126e1:	aas    
  4126e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126e3:	xchg   dl,ah
  4126e5:	sub    eax,0xfb2d910d
  4126ea:	(bad)  
  4126eb:	pop    ebp
  4126ec:	sub    DWORD PTR [ebp-0x71bf653],esp
  4126f2:	pop    ecx
  4126f3:	fmul   DWORD PTR ds:0xcb030f79
  4126f9:	or     BYTE PTR [esi-0xbaae019],al
  4126ff:	ror    DWORD PTR [edx-0x57b51820],0x51
  412706:	punpcklwd mm6,DWORD PTR [esi+0x2]
  41270a:	loopne 0x4126cd
  41270c:	mov    dl,0x39
  41270e:	mov    ds:0x2db93713,eax
  412713:	in     al,0xb6
  412715:	adc    ebx,DWORD PTR [esi*1-0x2c421e4f]
  41271c:	jo     0x4126db
  41271e:	adc    al,0x93
  412720:	dec    ecx
  412721:	mov    bh,0xed
  412723:	and    ah,dl
  412725:	jmp    0xef5b:0xa5f6e49a
  41272c:	jp     0x412788
  41272e:	cmp    edi,DWORD PTR [edi]
  412730:	pushf  
  412731:	push   ebx
  412732:	stc    
  412733:	xor    edx,DWORD PTR [edx]
  412735:	stos   BYTE PTR es:[edi],al
  412736:	pop    ecx
  412737:	push   ds
  412738:	sbb    ecx,DWORD PTR [edi]
  41273a:	push   eax
  41273b:	or     bl,ch
  41273d:	sahf   
  41273e:	sub    eax,0xdbac354b
  412743:	mov    DWORD PTR [eax],eax
  412745:	and    DWORD PTR [edx+0x54e1c1af],eax
  41274b:	pusha  
  41274c:	pop    ebx
  41274d:	push   esp
  41274e:	sub    dh,bl
  412750:	(bad)  
  412752:	in     al,0x15
  412754:	fst    DWORD PTR [esi]
  412756:	push   edx
  412757:	lods   al,BYTE PTR ds:[esi]
  412758:	(bad)  
  412759:	clc    
  41275a:	int    0x73
  41275c:	pop    ecx
  41275d:	sbb    al,0x6b
  41275f:	cs data16 (bad) 
  412762:	cld    
  412763:	push   ss
  412764:	(bad)  
  412765:	sbb    al,0x84
  412767:	xor    cl,dl
  412769:	sub    eax,DWORD PTR [ecx]
  41276b:	pop    edx
  41276c:	cmp    cl,BYTE PTR [edx]
  41276e:	adc    BYTE PTR [bp+si],ah
  412771:	mov    al,ds:0x7a39508c
  412776:	ror    DWORD PTR [edx-0x1b],cl
  412779:	ja     0x412725
  41277b:	sbb    edx,DWORD PTR [edi+0xd]
  41277e:	retf   0xfc09
  412781:	sub    eax,DWORD PTR [edx+0x2f]
  412784:	jecxz  0x41273d
  412786:	loopne 0x4127cd
  412788:	(bad)  
  412789:	sti    
  41278a:	das    
  41278b:	(bad)  
  41278c:	retf   
  41278d:	test   al,0xfb
  41278f:	push   esp
  412790:	add    DWORD PTR ds:0xc686485a,0x6a0b60b
  41279a:	fimul  WORD PTR [ebx-0x7a]
  41279d:	sub    edi,DWORD PTR [ebx-0x7b76ed3b]
  4127a3:	jnp    0x4127e6
  4127a5:	pushf  
  4127a6:	int3   
  4127a7:	repz imul esp,DWORD PTR [esi],0x50896d2b
  4127ae:	repnz sub DWORD PTR [edi+0x2eaeaf0],esi
  4127b5:	jp     0x412739
  4127b7:	out    dx,eax
  4127b8:	mov    ebx,ebp
  4127ba:	ins    DWORD PTR es:[edi],dx
  4127bb:	int3   
  4127bc:	or     edx,DWORD PTR [edx-0x54702dfb]
  4127c2:	aaa    
  4127c3:	jg     0x412750
  4127c5:	imul   edx,DWORD PTR [esi-0x603bbc16],0x1
  4127cc:	or     DWORD PTR [eax+ecx*1+0xf],ebx
  4127d0:	mov    DWORD PTR [edx-0x101a751f],ecx
  4127d6:	dec    ebp
  4127d8:	fstp   TBYTE PTR [edx+0x17871f6e]
  4127de:	ja     0x412777
  4127e0:	(bad)  
  4127e1:	jmp    0x4127d7
  4127e3:	neg    DWORD PTR [ecx-0x324368c4]
  4127e9:	xchg   ecx,eax
  4127ea:	jne    0x41282e
  4127ec:	(bad)  
  4127ed:	dec    esp
  4127ee:	inc    ebp
  4127ef:	fisub  WORD PTR [edi]
  4127f1:	outs   dx,BYTE PTR ss:[esi]
  4127f3:	mov    ah,dh
  4127f5:	stos   BYTE PTR es:[edi],al
  4127f6:	repz jno 0x4127e1
  4127f9:	fnstcw WORD PTR [ecx+ebp*8+0x37]
  4127fd:	nop
  4127fe:	cmp    DWORD PTR [esi+0x1d],edi
  412801:	idiv   DWORD PTR [eax-0x67]
  412804:	imul   ecx,DWORD PTR [ebx-0x537c20ea],0x32
  41280b:	push   ebx
  41280c:	xor    al,dl
  41280e:	push   ss
  41280f:	aaa    
  412810:	lods   al,BYTE PTR ds:[esi]
  412811:	xor    BYTE PTR [ecx+0x2047f080],0xaf
  412818:	lds    ebx,FWORD PTR [ebx+0x4b]
  41281b:	(bad)  
  41281c:	jp     0x41288b
  41281e:	sbb    DWORD PTR [ebx+ebp*4+0x34bf3961],esp
  412825:	lods   eax,DWORD PTR ds:[esi]
  412826:	and    WORD PTR [ebx*4+0x1ee491f4],ax
  41282e:	xor    BYTE PTR [eax],ah
  412830:	fs push es
  412832:	retf   0xf1a6
  412835:	pop    esi
  412836:	add    BYTE PTR [esi],dl
  412838:	fs xchg edi,eax
  41283a:	mov    ecx,0x52090ad8
  41283f:	inc    eax
  412840:	dec    esi
  412841:	and    al,0x33
  412843:	mov    eax,ds:0xc607e820
  412848:	pop    es
  412849:	into   
  41284a:	push   ebx
  41284b:	lds    ebx,FWORD PTR [edi+0xc9a6699]
  412851:	jnp    0x412886
  412853:	sub    eax,0xfa632f76
  412858:	jmp    0x5bcf:0x3e1acf3d
  41285f:	sti    
  412860:	mov    dl,0x8c
  412862:	call   0xe89836c5
  412867:	push   esp
  412868:	jmp    0xd01316f9
  41286d:	imul   esi,DWORD PTR cs:[eax+0x4d],0x61b27128
  412875:	dec    edi
  412876:	out    0xb8,al
  412878:	shl    DWORD PTR [eax+edx*2-0x39],1
  41287c:	stos   BYTE PTR es:[edi],al
  41287d:	adc    ebx,0x30
  412880:	adc    esp,edi
  412882:	xchg   edi,eax
  412883:	lgs    esi,FWORD PTR [ecx]
  412886:	mov    ebp,0xfa4d9a6b
  41288b:	out    dx,eax
  41288c:	adc    BYTE PTR [esi-0x79],ch
  41288f:	jae    0x41289e
  412891:	hlt    
  412892:	and    BYTE PTR es:[ebp-0xf],0xb3
  412897:	push   ebp
  412898:	push   edi
  412899:	mov    ebx,0x4badc962
  41289e:	jmp    0x223c:0x12f27240
  4128a5:	cmp    eax,0x36b73f0f
  4128aa:	or     BYTE PTR [ebp-0x1bb9d96e],ah
  4128b0:	pop    esi
  4128b1:	fucomip st,st(0)
  4128b3:	xlat   BYTE PTR ds:[ebx]
  4128b4:	jle    0x4128ef
  4128b6:	cmp    edi,esp
  4128b8:	lock sub dh,bl
  4128bb:	retf   
  4128bc:	in     eax,dx
  4128bd:	or     BYTE PTR [ebx-0x7927d10a],0x8e
  4128c4:	dec    ecx
  4128c5:	in     eax,0x67
  4128c7:	popa   
  4128c8:	pushf  
  4128c9:	xchg   edi,eax
  4128ca:	gs (bad) 
  4128cc:	loope  0x41290a
  4128ce:	mov    DWORD PTR [edx+0x20ce85e5],0x1aaddef3
  4128d8:	rcl    edi,cl
  4128da:	retf   0xe818
  4128dd:	jne    0x412879
  4128df:	and    BYTE PTR [ebx-0x5e5e684c],cl
  4128e5:	xchg   edi,eax
  4128e6:	cs xchg esi,eax
  4128e8:	jns    0x41291a
  4128ea:	sbb    ecx,DWORD PTR [esi]
  4128ec:	jmp    0x412923
  4128ee:	and    al,0x2c
  4128f1:	(bad)  
  4128f2:	and    BYTE PTR [edx],dl
  4128f4:	test   DWORD PTR [ebp-0x1b75c642],0x9479f28
  4128fe:	rcl    DWORD PTR [edx-0x36eab6c0],cl
  412904:	aas    
  412905:	out    0x5f,al
  412907:	out    dx,al
  412908:	int3   
  412909:	(bad)  
  41290a:	in     al,0xe3
  41290c:	xchg   edi,eax
  41290d:	scas   al,BYTE PTR es:[edi]
  41290e:	mov    eax,ds:0xc9b53d8a
  412913:	mov    ds,WORD PTR [esi-0x5d]
  412916:	fisttp QWORD PTR [ebp-0x2b]
  412919:	(bad)  
  41291a:	shl    BYTE PTR [ebp-0x22fe8089],1
  412920:	cmc    
  412921:	inc    ebp
  412922:	pop    eax
  412923:	mov    ds:0x3964e7bd,al
  412928:	pop    ds
  412929:	popf   
  41292a:	pop    edi
  41292b:	push   ecx
  41292c:	mov    bh,0x57
  41292e:	jo     0x4129a7
  412930:	dec    edi
  412931:	xor    dl,BYTE PTR [edi-0x18]
  412934:	retf   0x46cb
  412937:	inc    eax
  412938:	ret    0x5436
  41293b:	das    
  41293c:	pop    ss
  41293d:	ret    
  41293e:	rcr    DWORD PTR [esi-0x1f],0x15
  412942:	outs   dx,BYTE PTR ds:[esi]
  412943:	in     eax,0x9c
  412945:	mov    ch,0x70
  412947:	and    edx,DWORD PTR [ecx+eiz*1-0x2]
  41294b:	jae    0x4129a0
  41294d:	sub    BYTE PTR [ebp+0xa40a32d],0x3
  412954:	mov    ds:0x9ed730d9,al
  412959:	shl    BYTE PTR [eax],cl
  41295b:	or     eax,0x577b9fc0
  412960:	ins    BYTE PTR es:[edi],dx
  412961:	pop    esp
  412962:	and    edx,DWORD PTR [eax-0x1471715e]
  412968:	int    0xb
  41296a:	cmp    DWORD PTR [ebp-0x34],0xffffff96
  41296e:	mov    ch,0xfd
  412970:	shl    esp,0x4a
  412973:	mov    ecx,0xd6d6e269
  412978:	loopne 0x41298c
  41297a:	sbb    eax,0x4f1eb412
  41297f:	push   edx
  412980:	xchg   edi,eax
  412981:	pop    edi
  412982:	inc    ebx
  412983:	call   0x3cd6:0x70685440
  41298a:	(bad)
  41298f:	mov    ah,0x20
  412991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412992:	dec    ecx
  412993:	push   0x2d
  412995:	pop    DWORD PTR [edi+ebp*4-0x9191267]
  41299c:	dec    edx
  41299d:	ror    BYTE PTR [esi+0x75],0x3e
  4129a1:	xchg   esp,eax
  4129a2:	cs mov cs,ecx
  4129a5:	push   esi
  4129a6:	add    al,0x8c
  4129a8:	hlt    
  4129a9:	ret    0xd1d4
  4129ac:	imul   edi,DWORD PTR [esi+0x54],0xffffffb4
  4129b0:	clc    
  4129b1:	das    
  4129b2:	out    dx,al
  4129b3:	pop    esp
  4129b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129b5:	jmp    DWORD PTR [ecx+edi*4+0x79]
  4129b9:	xchg   edi,eax
  4129ba:	nop
  4129bb:	repnz mov ebx,eax
  4129be:	ret    
  4129bf:	iret   
  4129c0:	(bad)  
  4129c1:	mov    bl,0xc7
  4129c3:	or     DWORD PTR [ecx],0x67
  4129c6:	loope  0x41294b
  4129c8:	stos   BYTE PTR es:[edi],al
  4129c9:	or     BYTE PTR [ebx+0x66],dh
  4129cc:	inc    ebx
  4129cd:	cs leave 
  4129cf:	xchg   esi,eax
  4129d0:	ds push esp
  4129d2:	fsubrp st(6),st
  4129d4:	sub    eax,0x891d248
  4129d9:	jle    0x4129ad
  4129db:	sahf   
  4129dc:	addr16 icebp 
  4129de:	cld    
  4129df:	js     0x4129a6
  4129e1:	add    eax,0x1559f31d
  4129e6:	xchg   ebx,eax
  4129e7:	and    BYTE PTR [ebx],bl
  4129e9:	xor    ebx,DWORD PTR [ebx]
  4129eb:	(bad)  
  4129ed:	mov    esi,esp
  4129ef:	arpl   ax,bx
  4129f1:	in     eax,0xb5
  4129f3:	xchg   edx,edi
  4129f5:	add    eax,0x75d449c3
  4129fa:	and    eax,0xc7971e30
  4129ff:	lea    esp,[ecx+0x7cc8eae9]
  412a05:	mov    bl,0xe6
  412a07:	stos   BYTE PTR es:[edi],al
  412a08:	fmul   QWORD PTR [esi]
  412a0a:	and    bl,BYTE PTR [eax+0x39883f2]
  412a10:	in     al,0x4d
  412a12:	lock or al,0xf8
  412a15:	sub    eax,0xe2cc9c48
  412a1a:	cmp    bl,ah
  412a1c:	mov    esp,0xe1f6d48c
  412a21:	cmp    bh,BYTE PTR [edx]
  412a23:	mov    ecx,DWORD PTR ds:[edx]
  412a26:	mov    ebp,0x1bdd00d1
  412a2b:	pushf  
  412a2c:	push   esp
  412a2d:	and    BYTE PTR [eax+0x59],al
  412a30:	retf   
  412a31:	ror    BYTE PTR [ecx+eiz*4],0xeb
  412a35:	and    bl,ah
  412a37:	add    esp,DWORD PTR cs:[edi]
  412a3a:	in     al,0x6a
  412a3c:	adc    eax,0xdb589204
  412a41:	pop    es
  412a42:	add    BYTE PTR [ecx-0x1c],ah
  412a45:	mov    dh,0x7a
  412a47:	repz fs xlat BYTE PTR ss:[ebx]
  412a4b:	mov    ebp,0x6d02ce67
  412a50:	es push 0xfffffff7
  412a53:	add    dh,BYTE PTR [edx+0x2e]
  412a56:	call   0x668a:0xb8d6323c
  412a5d:	in     eax,0x8a
  412a5f:	lea    edx,[eax-0x48]
  412a62:	test   eax,0xbe8062fc
  412a67:	xchg   DWORD PTR [edx+0x43],eax
  412a6a:	shl    DWORD PTR [edx-0xf712900],1
  412a70:	sub    esp,esi
  412a72:	lock ror DWORD PTR ds:0xd165a367,0xa3
  412a7a:	xor    ch,cl
  412a7c:	shr    BYTE PTR [edx+ecx*1],1
  412a7f:	xchg   edx,eax
  412a80:	(bad)  ds:0x1e895c2
  412a86:	and    esi,DWORD PTR [ebx+0x38]
  412a89:	add    al,0x33
  412a8b:	sub    DWORD PTR [ecx],0xffffffd0
  412a8e:	xchg   ebp,eax
  412a8f:	imul   ecx,DWORD PTR [edi],0xd4d44035
  412a95:	or     esp,ebp
  412a97:	mov    BYTE PTR [ebx],al
  412a99:	mov    DWORD PTR [edi+ecx*8+0x4],ebx
  412a9d:	pusha  
  412a9e:	inc    ebx
  412a9f:	outs   dx,BYTE PTR ds:[esi]
  412aa0:	js     0x412b15
  412aa2:	add    DWORD PTR [eax-0x55],esi
  412aa5:	ds retf 
  412aa7:	dec    ebp
  412aa8:	mov    bl,0xf
  412aaa:	or     eax,0x7c3dd724
  412aaf:	gs push cs
  412ab1:	mov    ds:0xf89211d0,eax
  412ab6:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  412ab8:	daa    
  412ab9:	ds dec ebx
  412abb:	jecxz  0x412a4f
  412abd:	xchg   ebp,eax
  412abe:	mov    al,ds:0x30c77e62
  412ac3:	adc    BYTE PTR [eax],ch
  412ac5:	stos   BYTE PTR es:[edi],al
  412ac6:	mov    WORD PTR [eax+0x7a052c31],fs
  412acc:	in     eax,0x1a
  412ace:	aas    
  412acf:	ficom  DWORD PTR [edi+0x35]
  412ad2:	inc    ecx
  412ad3:	sub    ah,BYTE PTR [esi]
  412ad5:	shl    DWORD PTR [eax+0x46e3ceb2],1
  412adb:	das    
  412adc:	(bad)  
  412add:	hlt    
  412ade:	and    al,0x3
  412ae0:	and    DWORD PTR [eax+0x46],edi
  412ae3:	jne    0x412ae3
  412ae5:	pushf  
  412ae6:	cwde   
  412ae7:	cmp    DWORD PTR ss:[ebx+edx*2+0x1abfd0f5],0x6c
  412af0:	inc    edi
  412af1:	stc    
  412af2:	cs inc edx
  412af4:	fild   DWORD PTR [esi-0x44df321c]
  412afa:	lods   al,BYTE PTR ds:[esi]
  412afb:	dec    eax
  412afc:	jmp    0x412af7
  412afe:	out    0xb0,al
  412b00:	sub    ebp,eax
  412b02:	(bad)
  412b06:	sub    DWORD PTR [esi-0x7efd03a],esp
  412b0c:	(bad)  
  412b0e:	aas    
  412b0f:	jae    0x412b7f
  412b11:	retf   
  412b12:	(bad)  
  412b13:	outs   dx,DWORD PTR ds:[esi]
  412b14:	sahf   
  412b15:	ficomp DWORD PTR [ecx-0x1c]
  412b18:	rcr    DWORD PTR [esi],0x4b
  412b1b:	mov    al,ds:0x6705d97
  412b20:	mov    eax,0x60780a78
  412b25:	and    eax,0xd19fce2b
  412b2a:	sbb    ch,BYTE PTR [ecx]
  412b2c:	push   0xd2b1f8ae
  412b31:	pop    esp
  412b32:	jno    0x412b8b
  412b34:	mov    BYTE PTR [ecx+0x1c0435f0],ch
  412b3a:	test   al,0xe0
  412b3c:	cwde   
  412b3d:	scas   eax,DWORD PTR es:[edi]
  412b3e:	xchg   esp,eax
  412b3f:	dec    ebp
  412b40:	out    0x1d,al
  412b42:	dec    esi
  412b43:	pop    edx
  412b44:	pop    ds
  412b45:	pushf  
  412b46:	jl     0x412ad4
  412b48:	xchg   DWORD PTR [edx+0x2d],ebp
  412b4b:	jns    0x412aea
  412b4d:	xor    al,0x79
  412b4f:	cmp    bl,ch
  412b51:	pusha  
  412b52:	enter  0x8153,0xa1
  412b56:	xlat   BYTE PTR ds:[ebx]
  412b57:	or     BYTE PTR [ecx-0x10645645],0x92
  412b5e:	jmp    0x412b78
  412b60:	imul   eax,DWORD PTR [ebx-0x34f3c085],0xffffffbf
  412b67:	mov    BYTE PTR [eax-0x73],ah
  412b6a:	loopne 0x412bd2
  412b6c:	jns    0x412b33
  412b6e:	pop    ds
  412b6f:	pop    ss
  412b70:	push   ebp
  412b71:	add    DWORD PTR [edi+ebx*2+0x14],ebp
  412b75:	xchg   esp,eax
  412b76:	adc    DWORD PTR [eax],ecx
  412b78:	push   ecx
  412b79:	pushf  
  412b7a:	sub    bl,dh
  412b7c:	call   0xe0fb08df
  412b81:	mov    cs,WORD PTR [edx-0x3f]
  412b84:	aad    0x4f
  412b86:	pop    ebx
  412b87:	xor    al,0x20
  412b89:	inc    esp
  412b8a:	fistp  WORD PTR [ebp-0x328307cb]
  412b90:	xchg   ebp,eax
  412b91:	and    ch,BYTE PTR [ebp+0x20103f7]
  412b97:	fwait
  412b98:	mov    eax,ds:0x1ac8da28
  412b9d:	push   edi
  412b9e:	cwde   
  412b9f:	push   0x63899aff
  412ba4:	inc    ecx
  412ba5:	mov    ebx,0x3c8b8cae
  412baa:	stos   BYTE PTR es:[edi],al
  412bab:	enter  0x8f94,0x8b
  412baf:	fdivp  st(3),st
  412bb1:	sub    BYTE PTR [ecx+0x30c5a564],cl
  412bb7:	or     BYTE PTR [ebx+0x79],0x71
  412bbb:	pop    ebp
  412bbc:	mov    eax,es:0xd74031e4
  412bc2:	loopne 0x412b59
  412bc4:	rol    BYTE PTR [edx],cl
  412bc6:	sbb    eax,0xc819335b
  412bcb:	cdq    
  412bcc:	(bad)  
  412bcd:	mov    cl,0xb8
  412bcf:	test   bh,dl
  412bd1:	mov    al,0xdb
  412bd3:	test   eax,0xb0618a24
  412bd8:	int3   
  412bd9:	imul   DWORD PTR ss:[ecx]
  412bdc:	ret    
  412bdd:	arpl   WORD PTR [edi+0x1],cx
  412be0:	vpunpcklqdq xmm2,xmm4,XMMWORD PTR [ecx-0x6e]
  412be5:	push   ecx
  412be6:	adc    edx,edi
  412be8:	fld    TBYTE PTR [esi+0x600f47ac]
  412bee:	pusha  
  412bef:	xchg   esi,eax
  412bf0:	std    
  412bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bf2:	jle    0x412c5f
  412bf4:	fdiv   DWORD PTR [esi+ebp*1-0x30]
  412bf8:	gs scas eax,DWORD PTR es:[edi]
  412bfa:	pop    esi
  412bfb:	test   BYTE PTR [esi-0x5d705caa],0x40
  412c02:	stc    
  412c03:	lahf   
  412c04:	jbe    0x412bb1
  412c06:	jp     0x412b9c
  412c08:	dec    esp
  412c09:	repnz out dx,eax
  412c0b:	in     eax,dx
  412c0c:	xchg   ebx,eax
  412c0d:	push   eax
  412c0e:	clc    
  412c0f:	jne    0x412bb7
  412c11:	stc    
  412c12:	xor    cl,BYTE PTR [edx]
  412c14:	fwait
  412c15:	push   ds
  412c16:	inc    ebx
  412c17:	or     cl,al
  412c19:	or     bh,0xfc
  412c1c:	pop    esi
  412c1d:	je     0x412c24
  412c1f:	pop    ebx
  412c20:	in     al,0x60
  412c22:	cld    
  412c23:	push   ecx
  412c24:	sti    
  412c25:	repnz imul ebp,ebx,0xecd139de
  412c2c:	adc    ecx,DWORD PTR [eax-0x5f619f93]
  412c32:	inc    eax
  412c33:	push   ds
  412c34:	cwde   
  412c35:	inc    ecx
  412c36:	or     dl,0x36
  412c39:	adc    BYTE PTR ds:0x240ba528,ah
  412c3f:	(bad)  
  412c41:	in     eax,0xf9
  412c43:	cld    
  412c44:	bound  eax,QWORD PTR [eax-0x35]
  412c47:	retf   
  412c48:	clc    
  412c49:	retf   
  412c4a:	lahf   
  412c4b:	pop    ebx
  412c4c:	in     eax,0xef
  412c4e:	int    0xc7
  412c50:	lods   al,BYTE PTR ds:[esi]
  412c51:	sub    eax,DWORD PTR [ebx]
  412c53:	pop    ds
  412c54:	mov    al,0x43
  412c56:	add    ch,BYTE PTR [ebx-0x5e]
  412c59:	adc    DWORD PTR ds:0xeb11264f,edx
  412c5f:	cmp    BYTE PTR [ebp+0x5f15ef73],bh
  412c65:	out    dx,eax
  412c66:	mov    esi,0x8244f413
  412c6b:	jne    0x412c35
  412c6d:	mov    bh,dl
  412c6f:	ficom  WORD PTR ds:0x266ae1db
  412c75:	mov    ds,ebx
  412c77:	ins    BYTE PTR es:[edi],dx
  412c78:	pop    eax
  412c79:	cmp    bl,BYTE PTR [edi]
  412c7b:	in     al,dx
  412c7c:	out    dx,eax
  412c7d:	std    
  412c7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c7f:	cmp    eax,0x4d1ddc91
  412c84:	test   al,0x6d
  412c86:	cdq    
  412c87:	adc    eax,0xfd2cb2c
  412c8c:	pop    edx
  412c8d:	ins    BYTE PTR es:[edi],dx
  412c8e:	and    bh,bh
  412c90:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  412c92:	push   ds
  412c93:	dec    DWORD PTR [edi]
  412c95:	and    ch,bh
  412c97:	xor    DWORD PTR [eax+esi*8-0x9],eax
  412c9b:	mov    dh,0x4f
  412c9d:	push   cs
  412c9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c9f:	and    BYTE PTR [edx],bh
  412ca1:	adc    esp,edi
  412ca3:	cmp    DWORD PTR [esi+edi*4],0x140f225c
  412caa:	sub    BYTE PTR [esp+eiz*4-0x79a81def],bh
  412cb1:	mov    al,BYTE PTR [edx]
  412cb3:	push   cs
  412cb4:	outs   dx,BYTE PTR ds:[esi]
  412cb5:	push   es
  412cb6:	and    bh,BYTE PTR [ebx]
  412cb8:	cs mov ch,0xe8
  412cbb:	jp     0x412c62
  412cbd:	or     BYTE PTR [edi+0x4775c77c],al
  412cc3:	vsqrtss xmm2,xmm6,xmm0
  412cc7:	data16 (bad) 
  412cc9:	iret   
  412cca:	loope  0x412cdb
  412ccc:	and    ebp,DWORD PTR [ebx]
  412cce:	retf   
  412ccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cd0:	push   0xffffffeb
  412cd2:	pusha  
  412cd3:	cdq    
  412cd4:	stos   DWORD PTR es:[edi],eax
  412cd5:	jp     0x412c6f
  412cd7:	push   edx
  412cd8:	mov    al,BYTE PTR [ecx+0x49]
  412cdb:	popf   
  412cdc:	(bad)  
  412cdd:	mov    esp,0x5c3ddf74
  412ce2:	mov    al,ds:0x5616434a
  412ce7:	fs sbb al,0x1d
  412cea:	cmp    cl,BYTE PTR [ecx+0x6b]
  412ced:	dec    edx
  412cee:	or     DWORD PTR [eax],esi
  412cf0:	scas   al,BYTE PTR es:[edi]
  412cf1:	jl     0x412cd2
  412cf3:	sbb    ch,bh
  412cf5:	call   0xcbe57311
  412cfa:	jl     0x412d78
  412cfc:	outs   dx,DWORD PTR ds:[esi]
  412cfd:	pop    esp
  412cfe:	lds    eax,FWORD PTR [ecx]
  412d00:	rcr    DWORD PTR [esi-0x5c],0xfe
  412d04:	mov    BYTE PTR [ebx-0x731fed59],al
  412d0a:	sub    ecx,edi
  412d0c:	int3   
  412d0d:	xor    esp,eax
  412d0f:	lds    eax,FWORD PTR [ecx]
  412d11:	sti    
  412d12:	stc    
  412d13:	dec    esp
  412d14:	dec    eax
  412d15:	mov    ah,0xb0
  412d17:	xor    ebx,DWORD PTR [esi]
  412d19:	mov    esi,0x913f6336
  412d1e:	clc    
  412d1f:	xchg   ecx,eax
  412d20:	mov    ah,0x99
  412d22:	dec    BYTE PTR [edx+0x2e0c63e]
  412d28:	mov    cs,ecx
  412d2a:	in     eax,dx
  412d2b:	pop    edx
  412d2c:	ja     0x412d12
  412d2e:	imul   eax,DWORD PTR [ebp-0x8],0x5c26aed2
	...
  412f09:	pop    esi
  412f0a:	mov    DWORD PTR ds:0x7feed766,eax
  412f10:	mov    ecx,0x4f6277d8
  412f15:	pusha  
  412f16:	repz frstor [ebp+eiz*8+0x2500014c]
  412f1e:	pop    es
  412f1f:	add    BYTE PTR [eax],al
  412f21:	or     eax,0x5f591041
  412f26:	mov    dl,BYTE PTR [eax+ebx*4]
  412f29:	or     edi,esi
  412f2b:	pop    esp
  412f2c:	stos   BYTE PTR es:[edi],al
  412f2d:	fsubr  st,st(3)
  412f2f:	sub    BYTE PTR [edx],dl
  412f31:	xchg   ebx,eax
  412f32:	xchg   BYTE PTR [edi],dl
  412f34:	(bad)  
  412f35:	int    0xc2
  412f37:	mov    bh,0x8d
  412f39:	push   eax
  412f3a:	add    BYTE PTR [edx+0xc],cl
  412f3d:	adc    esp,DWORD PTR [ecx]
  412f3f:	mul    ecx
  412f41:	cs mov edx,0x169b64fc
  412f47:	packsswb mm4,QWORD PTR ds:0xd2187054
  412f4e:	mov    eax,ds:0xe5a0bb70
  412f53:	dec    esp
  412f54:	add    ah,0x1a
  412f57:	mov    ebp,DWORD PTR [eax-0x1c]
  412f5a:	or     eax,0x8ce06587
  412f5f:	add    eax,0x611c79a7
  412f64:	jno    0x412f9b
  412f66:	std    
  412f67:	adc    BYTE PTR [ebx],dh
  412f69:	lods   al,BYTE PTR ds:[esi]
  412f6a:	loope  0x412fad
  412f6c:	mov    ecx,0x94b1ebf7
  412f71:	nop
  412f72:	pop    esp
  412f73:	xchg   esp,eax
  412f74:	add    BYTE PTR [ebp-0x1c176c58],bh
  412f7a:	jge    0x412f32
  412f7c:	outs   dx,DWORD PTR ds:[esi]
  412f7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f7e:	cwde   
  412f7f:	add    DWORD PTR [ebp+0x19],eax
  412f82:	dec    esp
  412f83:	push   0xffffffb0
  412f85:	ss out 0xa1,eax
  412f88:	cwde   
  412f89:	push   0x1bfe02c3
  412f8e:	fcomp  DWORD PTR [ebx]
  412f90:	sbb    al,0xdf
  412f92:	sub    eax,0x89d88d90
  412f97:	in     al,0x88
  412f99:	or     al,0xab
  412f9b:	mov    al,ds:0xf08698ab
  412fa0:	(bad)  
  412fa1:	in     eax,0x56
  412fa3:	pusha  
  412fa4:	mov    cl,0xd4
  412fa6:	fs loop 0x412fda
  412fa9:	inc    edx
  412faa:	and    esi,DWORD PTR [edx-0x19]
  412fad:	jecxz  0x412f53
  412faf:	shl    DWORD PTR [eax+eax*4+0x5],1
  412fb3:	jp     0x412f5b
  412fb5:	and    dh,ah
  412fb7:	jmp    0x4c67c6ac
  412fbc:	and    DWORD PTR [ecx+0x496a2cef],ebx
  412fc2:	pop    ecx
  412fc3:	pop    ss
  412fc4:	leave  
  412fc5:	mov    al,0xdb
  412fc7:	aas    
  412fc8:	jno    0x412f87
  412fca:	adc    ecx,DWORD PTR [ecx-0x2d9d286]
  412fd0:	sub    BYTE PTR [ebp-0x32],dh
  412fd3:	popa   
  412fd4:	lahf   
  412fd5:	mov    WORD PTR [eax],ss
  412fd7:	setle  BYTE PTR [ebx+0x7ae195f9]
  412fde:	pop    ss
  412fdf:	xor    cl,BYTE PTR [edx]
  412fe1:	jmp    FWORD PTR [ebp-0x2a]
  412fe4:	lods   eax,DWORD PTR ds:[esi]
  412fe5:	inc    ebp
  412fe6:	loopne 0x41305a
  412fe8:	shl    BYTE PTR [ecx+eax*4+0x29806a66],0x8
  412ff0:	les    esi,FWORD PTR [esi-0x2b2c4950]
  412ff6:	add    esi,DWORD PTR [edx+0x77c53ed4]
  412ffc:	ds xchg esi,eax
  412ffe:	pop    ss
  412fff:	push   cs
  413000:	jo     0x6c6ca735
  413006:	mov    ecx,gs
  413008:	arpl   cx,bp
  41300a:	ffree  st(6)
  41300c:	push   es
  41300d:	nop
  41300e:	sbb    DWORD PTR [esi],ebp
  413010:	jbe    0x413054
  413012:	imul   edi,ebx,0x4a
  413015:	or     DWORD PTR [ebx],ebx
  413017:	bound  eax,QWORD PTR [esi]
  413019:	into   
  41301a:	add    ah,BYTE PTR [ebp+0x36]
  41301d:	dec    ebp
  41301e:	stc    
  41301f:	sbb    BYTE PTR [edx+0x3f],ch
  413022:	xor    ebp,DWORD PTR [ebx-0x3ee30075]
  413028:	push   0xffffffc9
  41302a:	jg     0x413000
  41302c:	xor    DWORD PTR [ebp-0x39108b7b],esi
  413032:	sbb    eax,0x816c823e
  413037:	daa    
  413038:	out    dx,al
  413039:	scas   al,BYTE PTR es:[edi]
  41303a:	mov    DWORD PTR [esi+0x2b],edi
  41303d:	cli    
  41303e:	imul   ecx,DWORD PTR [ebx+0x34],0x84fa8617
  413045:	(bad)  
  413047:	jg     0x41301b
  413049:	jp     0x4130c0
  41304b:	test   al,0x1e
  41304d:	push   ds
  41304e:	cdq    
  41304f:	inc    esp
  413050:	shr    ecx,1
  413052:	mov    ds:0x28acb021,eax
  413057:	cmp    al,0x27
  413059:	scas   al,BYTE PTR es:[edi]
  41305a:	out    0x9f,al
  41305c:	sti    
  41305d:	xchg   esi,eax
  41305e:	aas    
  41305f:	cmp    BYTE PTR [edx+0x13447296],cl
  413065:	into   
  413066:	adc    bl,BYTE PTR [esi+0x5]
  413069:	imul   eax,DWORD PTR [edi],0xffffffdc
  41306c:	push   edx
  41306d:	fistp  DWORD PTR [edx-0x63507c72]
  413073:	gs call 0xc91e:0x21e43f49
  41307b:	jns    0x41305f
  41307d:	lock cmp DWORD PTR [esp+ebp*1+0x0],edi
  413082:	iret   
  413083:	jo     0x4130e8
  413085:	pop    ebx
  413086:	cmp    bh,BYTE PTR [ebp+0x37fc499b]
  41308c:	mov    dh,0x22
  41308e:	test   eax,0x951abdf4
  413093:	(bad)  
  413094:	loop   0x41305f
  413096:	jne    0x4130e4
  413098:	loop   0x413087
  41309a:	xchg   esp,eax
  41309b:	or     al,0xf7
  41309d:	into   
  41309e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41309f:	shl    edi,1
  4130a1:	aas    
  4130a2:	pop    ebp
  4130a3:	mov    ecx,0xc74c776a
  4130a8:	push   esp
  4130a9:	mov    BYTE PTR [edx+eax*1-0x78],dl
  4130ad:	rcl    dl,0x69
  4130b0:	dec    esi
  4130b1:	out    dx,al
  4130b2:	jmp    0x7aa0:0x301b8186
  4130b9:	pop    ebx
  4130ba:	scas   eax,DWORD PTR es:[edi]
  4130bb:	retf   0x5693
  4130be:	shl    BYTE PTR [esi],cl
  4130c0:	push   esp
  4130c1:	ins    DWORD PTR es:[edi],dx
  4130c2:	dec    edi
  4130c3:	and    cl,BYTE PTR [esi+0xd]
  4130c6:	aam    0x17
  4130c8:	ret    0x18e5
  4130cb:	leave  
  4130cc:	sub    DWORD PTR [eax+eax*2-0x5a78b2e5],esi
  4130d3:	mov    bl,0xc3
  4130d5:	dec    esp
  4130d6:	aam    0xa9
  4130d8:	div    ah
  4130da:	jae    0x413129
  4130dc:	das    
  4130dd:	mov    DWORD PTR [ecx-0x59b7d01c],esp
  4130e3:	mov    ds:0xb9531ced,al
  4130e8:	dec    ebp
  4130e9:	std    
  4130ea:	xchg   BYTE PTR ds:0x667e45a9,ah
  4130f0:	add    DWORD PTR [edi+ebx*8+0x54],0x925932b8
  4130f8:	in     al,0x9e
  4130fa:	inc    esi
  4130fb:	sbb    eax,0x91e7843e
  413100:	mov    ah,0x17
  413102:	xor    dl,BYTE PTR cs:[edx]
  413105:	mov    ebp,0xd98c3fb4
  41310a:	cmp    bl,BYTE PTR [ebx+0x7a91429a]
  413110:	inc    eax
  413111:	adc    edx,DWORD PTR [edi+0x26]
  413114:	retf   
  413115:	cmp    bl,BYTE PTR [edi+0x20]
  413118:	cmp    ebp,DWORD PTR [ebp+0x568fbfe0]
  41311e:	into   
  41311f:	lds    esi,FWORD PTR [edi]
  413121:	mov    eax,0x6e182810
  413126:	mov    ebp,ebp
  413128:	push   cs
  413129:	ret    0x5f03
  41312c:	xchg   ebp,eax
  41312d:	call   0x7135b432
  413132:	or     al,0x55
  413135:	cmp    al,ch
  413137:	mov    ecx,0x58f374e3
  41313c:	rcr    BYTE PTR [edx],cl
  41313e:	mov    eax,ds:0x60350bf8
  413143:	or     al,0x45
  413145:	xchg   BYTE PTR [esi-0x61],ch
  413148:	imul   eax,DWORD PTR [eax+0x2b],0x2899af73
  41314f:	pop    es
  413150:	pop    edx
  413151:	rcl    bh,cl
  413153:	sar    BYTE PTR [eax-0x7379dd8a],0x38
  41315a:	addr16 dec edx
  41315c:	mov    bl,0x33
  41315e:	outs   dx,BYTE PTR ds:[esi]
  41315f:	inc    ecx
  413160:	loope  0x4131bf
  413162:	push   ebx
  413163:	(bad)  
  413164:	ficom  DWORD PTR [edi]
  413166:	popf   
  413167:	mov    ecx,0x895ecb7c
  41316c:	sti    
  41316d:	dec    edi
  41316e:	ja     0x4131ea
  413170:	cdq    
  413171:	sbb    DWORD PTR [ebp+ecx*1-0x5d],0xeb5a0edc
  413179:	mov    bh,0xe1
  41317b:	sub    BYTE PTR [edx+eiz*1-0x6c],al
  41317f:	call   0x8f3c1
  413184:	lods   eax,DWORD PTR ds:[esi]
  413185:	ins    BYTE PTR es:[edi],dx
  413186:	aad    0xf1
  413188:	cmp    eax,0xcec1ac36
  41318d:	pushw  0xb8c4
  413191:	dec    ebp
  413192:	or     esp,edi
  413194:	hlt    
  413195:	adc    eax,0x14227bc3
  41319a:	mov    bl,0xa4
  41319c:	scas   al,BYTE PTR es:[edi]
  41319d:	jno    0x41320d
  41319f:	push   es
  4131a0:	pop    esp
  4131a1:	push   esp
  4131a2:	mov    edi,DWORD PTR [edx+0x660272d0]
  4131a8:	and    al,0xba
  4131aa:	xor    ebp,0x17
  4131ad:	add    al,0x10
  4131af:	push   eax
  4131b0:	lods   eax,DWORD PTR ds:[esi]
  4131b1:	sub    eax,0x6fd3c726
  4131b6:	dec    ebp
  4131b7:	inc    ecx
  4131b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131b9:	push   esp
  4131ba:	dec    edi
  4131bb:	dec    edi
  4131bc:	push   0xfa4e44ff
  4131c1:	or     al,0x9f
  4131c3:	and    DWORD PTR [eax+0x6c39fcb8],esi
  4131c9:	fidiv  WORD PTR [eax-0x48]
  4131cc:	jb     0x41315c
  4131ce:	aad    0x20
  4131d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131d1:	jne    0x41321f
  4131d3:	cmp    eax,ecx
  4131d5:	pop    ebx
  4131d6:	adc    al,0xf0
  4131d8:	out    0x4a,eax
  4131da:	repz sbb BYTE PTR [ebp+0x31504ecf],bh
  4131e1:	xor    ebx,DWORD PTR [ebp+0x2f]
  4131e4:	pop    esp
  4131e5:	xchg   esi,eax
  4131e6:	in     eax,dx
  4131e7:	outs   dx,BYTE PTR ds:[esi]
  4131e8:	and    ch,BYTE PTR [eax+0x36]
  4131eb:	mov    ebp,0x2459bc0f
  4131f0:	adc    BYTE PTR [eax-0x27],ah
  4131f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131f4:	mov    cl,0x39
  4131f6:	(bad)  [edi]
  4131f8:	aad    0xab
  4131fa:	or     eax,esi
  4131fc:	cs (bad) 
  4131fe:	pop    esi
  4131ff:	retf   
  413200:	xor    BYTE PTR [ecx+0x61dc1bfb],dl
  413206:	pop    ss
  413207:	imul   ch
  413209:	xchg   ecx,eax
  41320a:	das    
  41320b:	outs   dx,BYTE PTR ds:[esi]
  41320c:	das    
  41320d:	pop    ebp
  41320e:	add    BYTE PTR [ebp-0xdc7251f],bh
  413214:	stc    
  413215:	fsub   DWORD PTR [ebx]
  413217:	push   cs
  413218:	add    DWORD PTR [edi-0x2d],edx
  41321b:	fisttp QWORD PTR [edx-0x6a]
  41321e:	sub    bl,BYTE PTR [ecx]
  413220:	ds and ebp,eax
  413223:	or     eax,0x82c13a1f
  413228:	in     eax,0x63
  41322a:	adc    edi,DWORD PTR [edx-0x55]
  41322d:	call   0x65db:0xa33d83ea
  413234:	pop    ecx
  413235:	lock imul BYTE PTR [esi+0x2]
  413239:	adc    eax,esi
  41323b:	and    BYTE PTR [ebp-0x38],ch
  41323e:	addr16 retf 0x1e0b
  413242:	ins    BYTE PTR es:[edi],dx
  413243:	icebp  
  413244:	sub    edx,DWORD PTR [eax+0x5044d56a]
  41324a:	(bad)  
  41324b:	adc    BYTE PTR [esi-0x5d3167ac],bl
  413251:	into   
  413252:	push   0xffffffe0
  413254:	(bad)  
  413255:	retf   
  413256:	mov    edi,edi
  413258:	pop    edx
  413259:	das    
  41325a:	or     ebx,DWORD PTR ss:[esi-0x34c6783d]
  413261:	out    dx,eax
  413262:	ja     0x41328f
  413264:	div    BYTE PTR [esi-0x8]
  413267:	dec    ebp
  413268:	call   0xc055:0x65c1dde6
  41326f:	add    BYTE PTR [ebx],bl
  413271:	stc    
  413272:	dec    esi
  413273:	sbb    al,0x47
  413275:	daa    
  413276:	xchg   edx,eax
  413277:	and    eax,0x846615e9
  41327c:	add    BYTE PTR [ecx+0x2443f2de],bl
  413282:	dec    ecx
  413283:	add    al,BYTE PTR [ecx-0x2583b843]
  413289:	fisttp WORD PTR [ebx+eax*1]
  41328c:	mov    ds:0xf8d7bc06,al
  413291:	xchg   BYTE PTR ds:0x42c3091,dl
  413297:	dec    esi
  413298:	sub    BYTE PTR [ebx+0x2badd0d1],ch
  41329e:	arpl   WORD PTR [edx-0x3fab688e],sp
  4132a4:	mov    bh,0x3d
  4132a6:	les    ebx,FWORD PTR [eax]
  4132a8:	jle    0x4132a0
  4132aa:	mov    bh,0xea
  4132ac:	outs   dx,DWORD PTR ds:[esi]
  4132ad:	in     al,dx
  4132ae:	out    0x82,eax
  4132b0:	mov    eax,ds:0x301b90d3
  4132b5:	idiv   BYTE PTR [esi+0x4e]
  4132b8:	das    
  4132b9:	in     al,0xc5
  4132bb:	repnz adc al,0x0
  4132be:	mov    bl,0x49
  4132c0:	mov    al,0x56
  4132c2:	inc    esi
  4132c3:	xchg   edx,eax
  4132c4:	mov    eax,ds:0xd88b56ea
  4132c9:	lds    esp,FWORD PTR [ecx+0x36]
  4132cc:	sub    eax,0x3f55320c
  4132d1:	mov    dl,0x50
  4132d3:	mov    bh,0xb6
  4132d5:	sub    al,0xe6
  4132d7:	sbb    bh,dl
  4132d9:	jb     0x413311
  4132db:	mov    ebp,0x629dc893
  4132e0:	push   eax
  4132e1:	add    BYTE PTR [eax-0x27163c6e],dh
  4132e7:	jae    0x4132b5
  4132e9:	mov    bl,0xf8
  4132eb:	push   ecx
  4132ec:	fwait
  4132ed:	lahf   
  4132ee:	xor    DWORD PTR [eax],ebx
  4132f0:	add    BYTE PTR [ebp+esi*1-0x1e],dh
  4132f4:	hlt    
  4132f5:	jnp    0x41330c
  4132f7:	add    al,0xb1
  4132f9:	retf   
  4132fa:	daa    
  4132fb:	cmp    bl,BYTE PTR [ecx+0x51]
  4132fe:	or     al,BYTE PTR [eax+edx*1+0x42]
  413302:	add    BYTE PTR es:[ecx-0x65],dl
  413306:	adc    eax,0x46b23d61
  41330b:	xchg   ebp,eax
  41330c:	and    al,dl
  41330e:	mov    eax,0x531ae53f
  413313:	arpl   WORD PTR [ebx],cx
  413315:	(bad)  
  413316:	push   edi
  413317:	push   ecx
  413318:	outs   dx,BYTE PTR ds:[esi]
  413319:	leave  
  41331a:	add    DWORD PTR [edx],0xde5ce48f
  413320:	ja     0x413331
  413322:	aam    0x86
  413324:	cmp    eax,0xf5399a3
  413329:	in     eax,dx
  41332a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41332b:	movq   QWORD PTR [edx],mm7
  41332e:	inc    esi
  41332f:	and    BYTE PTR [edx*8-0x24ee4655],cl
  413336:	addr16 jnp 0x413387
  413339:	cs test al,0xa1
  41333c:	mov    al,ds:0x22757845
  413341:	retf   
  413342:	push   ds
  413343:	scas   eax,DWORD PTR es:[edi]
  413344:	dec    ebp
  413345:	push   eax
  413346:	jp     0x41336e
  413348:	ja     0x4133c6
  41334a:	(bad)  
  41334b:	mov    eax,0x3e069f15
  413350:	(bad)  
  413351:	fnstenv [ecx-0x21]
  413354:	and    DWORD PTR [ecx+0xb715cbb],ebx
  41335a:	mov    ah,0x7c
  41335c:	push   esi
  41335d:	imul   esp,DWORD PTR [edi-0x11b7ff0d]
  413364:	hlt    
  413365:	pop    ss
  413366:	jae    0x413328
  413368:	aas    
  413369:	sub    DWORD PTR [edi+ebp*4-0xc0ab115],ecx
  413370:	mov    al,0x36
  413372:	jbe    0x4133ae
  413374:	mov    dl,0xd5
  413376:	xchg   BYTE PTR [eax+0x73ec86c9],bl
  41337c:	repz in al,dx
  41337e:	call   0xa945:0x833a2dad
  413385:	and    esi,eax
  413387:	xchg   edi,eax
  413388:	push   eax
  413389:	jnp    0x41337e
  41338b:	data16 add ah,0xc1
  41338f:	mov    eax,ds:0x6defa166
  413394:	sub    edx,DWORD PTR [edx+edi*8+0x45]
  413398:	xor    BYTE PTR [ecx-0x4e],al
  41339b:	mov    ebx,0xce3a0584
  4133a0:	int3   
  4133a1:	dec    ebp
  4133a2:	xor    cl,al
  4133a4:	sar    BYTE PTR [ebx],cl
  4133a6:	push   0xbb2d5753
  4133ab:	push   ss
  4133ac:	xor    al,0x4d
  4133ae:	jnp    0x4133fb
  4133b0:	stos   DWORD PTR es:[edi],eax
  4133b1:	or     BYTE PTR [ebp+0x32],bh
  4133b4:	mov    BYTE PTR [ecx-0x7851be21],0x2b
  4133bb:	pushf  
  4133bc:	or     al,ah
  4133be:	dec    ecx
  4133bf:	nop
  4133c0:	mov    ch,0x6b
  4133c2:	shl    ebx,1
  4133c4:	jne    0x413400
  4133c6:	cmc    
  4133c7:	xor    cl,cl
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	and    DWORD PTR [ebp-0xd511053],esi
  4133d0:	xlat   BYTE PTR ds:[ebx]
  4133d1:	sub    ch,BYTE PTR ds:0xa7404051
  4133d7:	test   DWORD PTR [eax+0x3fa2c7d6],0x6d4097
  4133e1:	fcomp  DWORD PTR [ebx+0x7b]
  4133e4:	mov    ds:0xca2344ce,al
  4133e9:	or     eax,0x5b3e054d
  4133ee:	retf   0x1aaf
  4133f1:	push   cs
  4133f2:	dec    ebp
  4133f3:	xchg   BYTE PTR ds:0xbddd0d78,ch
  4133f9:	call   0xc33327b8
  4133fe:	cmp    ch,BYTE PTR [eax+ebp*1]
  413401:	inc    esi
  413402:	pusha  
  413403:	mov    cl,0x53
  413405:	xchg   esp,eax
  413406:	rep ins BYTE PTR es:[edi],dx
  413408:	pop    ds
  413409:	xor    ebp,edx
  41340b:	or     edx,ecx
  41340d:	sub    DWORD PTR [edi-0xdece4c3],0xfac0bfb7
  413417:	dec    edx
  413418:	push   edi
  413419:	dec    ebx
  41341a:	inc    ecx
  41341b:	pop    esp
  41341c:	fucom  st(2)
  41341e:	fnstenv [eax+0x4e]
  413421:	sub    BYTE PTR [edx-0x32b45555],dh
  413427:	xchg   edx,eax
  413428:	xchg   ecx,eax
  413429:	ds push cs
  41342b:	mov    esp,0x4b2813ac
  413430:	(bad)  
  413431:	push   esp
  413432:	add    BYTE PTR [ebx-0x77],dl
  413435:	jl     0x413416
  413437:	xlat   BYTE PTR ds:[ebx]
  413438:	add    BYTE PTR [esi],bh
  41343a:	pop    ss
  41343b:	xchg   ch,cl
  41343d:	add    BYTE PTR [eax-0xec3b7b9],ch
  413443:	sub    eax,0x4bc41f8b
  413448:	fdivr  QWORD PTR [ebp+edi*4+0x75]
  41344c:	xor    ebx,DWORD PTR [ecx+0x7bc8ea8d]
  413452:	icebp  
  413453:	mov    ds:0xcd4a0e30,al
  413458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413459:	mov    esi,0x5ebd28fc
  41345e:	popf   
  41345f:	out    dx,eax
  413460:	test   al,0x5f
  413462:	js     0x4133fb
  413464:	mov    eax,0xc730714e
  413469:	(bad)  
  41346a:	mov    ds:0xc718240c,al
  41346f:	arpl   WORD PTR [ebp+0x7fdb5f0f],sp
  413475:	popf   
  413476:	add    BYTE PTR [eax+0x1d],0xe0
  41347a:	push   ebx
  41347b:	adc    edi,DWORD PTR [eax-0x36c3b45c]
  413481:	out    dx,eax
  413482:	mov    ds:0xd65ccbec,eax
  413487:	xlat   BYTE PTR ds:[ebx]
  413488:	xchg   ebx,eax
  413489:	lods   al,BYTE PTR ds:[esi]
  41348a:	(bad)  
  41348d:	(bad)  
  41348e:	fidivr WORD PTR [eax]
  413490:	mov    al,0xfd
  413492:	jb     0x413499
  413494:	xchg   ebp,eax
  413495:	cmp    edx,DWORD PTR fs:[edi+0x6360cd8b]
  41349c:	loopne 0x4134ca
  41349e:	add    BYTE PTR [edx],dl
  4134a0:	lods   eax,DWORD PTR ds:[esi]
  4134a1:	repz pop es
  4134a3:	sbb    DWORD PTR [ebp+edx*2-0x76f89433],ebx
  4134aa:	mov    DWORD PTR [edi+0x5e1a5940],0x9527c63e
  4134b4:	xchg   edx,eax
  4134b5:	push   esp
  4134b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134b7:	jae    0x413537
  4134b9:	fwait
  4134ba:	mov    DWORD PTR [ebp+0x1d],esp
  4134bd:	clc    
  4134be:	xlat   BYTE PTR ds:[ebx]
  4134bf:	popa   
  4134c0:	das    
  4134c1:	mov    ch,0xce
  4134c3:	cmp    eax,0x1b2e6298
  4134c8:	shl    BYTE PTR [ecx+0x13d7313f],0x30
  4134cf:	jp     0x413502
  4134d1:	adc    BYTE PTR [esp+esi*8+0xb44bb90],ah
  4134d8:	jle    0x41346d
  4134da:	xchg   BYTE PTR [ebx],dh
  4134dc:	retf   
  4134dd:	pop    esp
  4134de:	fs pop eax
  4134e0:	push   es
  4134e1:	adc    ebp,DWORD PTR [eax]
  4134e3:	enter  0xe1d4,0xa2
  4134e7:	push   ebx
  4134e8:	jns    0x413516
  4134ea:	and    al,0xa9
  4134ec:	push   cs
  4134ed:	inc    esp
  4134ee:	jge    0x4134e1
  4134f0:	dec    eax
  4134f1:	int3   
  4134f2:	mov    al,ds:0x4abf8536
  4134f7:	xor    dl,BYTE PTR [ecx+0x1a]
  4134fa:	lods   al,BYTE PTR ds:[esi]
  4134fb:	loop   0x4134d1
  4134fd:	(bad)
  413500:	in     al,0x74
  413502:	test   eax,0x4c9524f3
  413507:	mov    edx,0x69cd8e83
  41350c:	sbb    bl,BYTE PTR [edi+0x21]
  41350f:	mov    eax,ds:0x3cc3590c
  413514:	dec    edx
  413515:	cmp    eax,0x8ca48fff
  41351a:	into   
  41351b:	sbb    esi,DWORD PTR [esi+0x73]
  41351e:	adc    ebp,0xc0e64e46
  413524:	mov    ds:0xf07d0fb2,eax
  413529:	out    0xc1,al
  41352b:	cmc    
  41352c:	or     dl,bh
  41352e:	dec    ebx
  41352f:	outs   dx,DWORD PTR ds:[esi]
  413530:	mov    cl,0xdc
  413532:	jne    0x41354e
  413534:	lock lahf 
  413536:	shl    BYTE PTR [edi+0x4d05a98a],0xdb
  41353d:	cmp    al,0x45
  41353f:	fnstcw WORD PTR [ebx+0x28d7c52b]
  413545:	(bad)  
  413546:	imul   esp,edi,0xffffffc8
  413549:	pop    ss
  41354a:	repz stc 
  41354c:	push   esp
  41354d:	pop    ss
  41354e:	mov    bl,0x14
  413550:	shl    dh,0x54
  413553:	nop
  413554:	or     BYTE PTR [esi-0x3e],ch
  413557:	imul   esp,esi,0x39
  41355a:	push   edx
  41355b:	scas   eax,DWORD PTR es:[edi]
  41355c:	aas    
  41355d:	rol    dl,1
  41355f:	pop    ss
  413560:	pop    ebx
  413561:	jne    0x4134fe
  413563:	(bad)  
  413564:	xlat   BYTE PTR ds:[ebx]
  413565:	add    bl,bl
  413567:	cmp    al,0x9e
  413569:	pop    ecx
  41356a:	lods   eax,DWORD PTR ds:[esi]
  41356b:	jecxz  0x413566
  41356d:	mov    es,edi
  41356f:	call   0x56d:0xb3da75d7
  413576:	mov    ebp,0x5b87d64c
  41357b:	stos   DWORD PTR es:[edi],eax
  41357c:	adc    al,0xef
  41357e:	les    edi,FWORD PTR [ecx-0x2aa082ee]
  413584:	popf   
  413585:	inc    ebx
  413586:	les    edx,FWORD PTR [eax+0xe307f4d]
  41358c:	adc    DWORD PTR [ecx+0x6c11c503],esp
  413592:	inc    eax
  413593:	fimul  DWORD PTR [ebx]
  413595:	sbb    al,dh
  413597:	js     0x4135b2
  413599:	aam    0x17
  41359b:	hlt    
  41359c:	xlat   BYTE PTR ds:[ebx]
  41359d:	stc    
  41359e:	stos   DWORD PTR es:[edi],eax
  41359f:	jg     0x41358c
  4135a1:	lahf   
  4135a2:	cmp    edi,DWORD PTR [edx]
  4135a4:	pop    ebx
  4135a5:	(bad)  
  4135a6:	div    BYTE PTR [esi+ebx*4+0x42f9b47f]
  4135ad:	pop    ss
  4135ae:	test   DWORD PTR [edx],0x731f2984
  4135b4:	or     edi,esp
  4135b6:	pop    edx
  4135b8:	pusha  
  4135b9:	mov    edx,DWORD PTR [ecx]
  4135bb:	lea    eax,[ecx]
  4135bd:	mov    DWORD PTR [ecx],ebx
  4135bf:	xchg   BYTE PTR [esi],dh
  4135c1:	and    DWORD PTR [ebx-0x4e89088c],ebp
  4135c7:	lahf   
  4135c8:	mov    bl,0xf1
  4135ca:	sub    ebx,edx
  4135cc:	enter  0x828f,0x3
  4135d0:	add    bl,BYTE PTR [edx]
  4135d2:	sub    BYTE PTR [ecx-0xf],0x89
  4135d6:	cs jno 0x413650
  4135d9:	call   0xe9583b5e
  4135de:	popf   
  4135df:	jae    0x413623
  4135e1:	mov    dl,0x87
  4135e3:	jno    0x41359e
  4135e5:	jle    0x413609
  4135e7:	test   eax,0x47a19056
  4135ec:	mov    DWORD PTR [ebx],esp
  4135ee:	add    edx,DWORD PTR [edi+ebp*4]
  4135f1:	pop    edx
  4135f2:	jno    0x4135cc
  4135f4:	call   0xf47480fc
  4135f9:	hlt    
  4135fa:	and    DWORD PTR [ecx+edi*8-0x57],edi
  4135fe:	sti    
  4135ff:	xchg   ebp,eax
  413600:	and    dl,BYTE PTR [esi]
  413602:	mov    al,ds:0xbed1c681
  413607:	inc    ecx
  413608:	and    DWORD PTR [eax+edx*8+0x1b],ebx
  41360c:	dec    ecx
  41360d:	inc    ebp
  41360e:	faddp  st(3),st
  413610:	ror    DWORD PTR [ecx+0x66f4b096],cl
  413616:	imul   DWORD PTR ds:0xa44565d5
  41361c:	sbb    ah,dh
  41361e:	arpl   WORD PTR [eax+0x46],cx
  413621:	pushf  
  413622:	add    ah,BYTE PTR [ebp+0xe]
  413625:	and    al,0xde
  413627:	hlt    
  413628:	outs   dx,BYTE PTR ds:[esi]
  413629:	and    eax,0xe8851b34
  41362e:	xchg   esp,eax
  41362f:	rcr    BYTE PTR [edi+0x12],0xa9
  413633:	aas    
  413634:	out    dx,eax
  413635:	mov    dl,0xc6
  413637:	es dec ebp
  413639:	popa   
  41363a:	stos   BYTE PTR es:[edi],al
  41363b:	(bad)  
  41363c:	aad    0x35
  41363e:	in     al,0x2d
  413640:	enter  0x851b,0x89
  413644:	or     edi,ebp
	...
  41380a:	jecxz  0x41382b
  41380c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41380d:	adc    al,0xfe
  41380f:	mov    ebp,0x9faffff3
  413814:	test   ah,0xae
  413817:	loop   0x4137bf
  413819:	(bad)  
  41381a:	jbe    0x413853
  41381c:	add    DWORD PTR [eax],eax
  41381e:	and    eax,0x88000007
  413823:	pop    ebp
  413824:	test   al,0x74
  413826:	push   0xa674775e
  41382b:	stos   DWORD PTR es:[edi],eax
  41382c:	aad    0x43
  41382e:	data16 jg 0x4137fb
  413831:	push   esp
  413832:	out    0xf3,eax
  413834:	mov    eax,fs
  413836:	push   edi
  413837:	sub    esp,edi
  413839:	mov    ah,0x26
  41383b:	mov    edx,0x97f1a07e
  413840:	ins    DWORD PTR es:[edi],dx
  413841:	push   edi
  413842:	or     eax,0x9f9758ed
  413847:	adc    dh,BYTE PTR [edi+0x41]
  41384a:	cmc    
  41384b:	mov    ah,0x70
  41384d:	mov    ecx,esp
  41384f:	dec    esi
  413850:	repnz loope 0x413829
  413853:	mov    ds,edx
  413855:	(bad)  
  413856:	xor    bl,BYTE PTR [esi+eiz*4+0x4d31c137]
  41385d:	or     ah,BYTE PTR [esp+ecx*8-0x66]
  413861:	out    dx,al
  413862:	adc    ch,BYTE PTR [ebp+0x6]
  413865:	jl     0x4138d9
  413867:	imul   ebp,DWORD PTR [eax],0x65
  41386a:	inc    edx
  41386b:	leave  
  41386c:	add    DWORD PTR [edx+0x79],ebx
  41386f:	mov    ebx,0x4c03f973
  413874:	jo     0x4138c2
  413876:	inc    BYTE PTR [esi]
  413878:	xlat   BYTE PTR ds:[ebx]
  413879:	sbb    DWORD PTR [ebx-0xa],esi
  41387c:	mov    BYTE PTR [edx-0x9],al
  41387f:	push   ebx
  413880:	jbe    0x4138d3
  413882:	jg     0x413860
  413884:	pushf  
  413885:	push   0xcbf7beb9
  41388a:	and    eax,0x75e84e5b
  41388f:	cmp    eax,0xa8641712
  413894:	xchg   edi,eax
  413895:	es mov edi,0x4b91cb6a
  41389b:	jno    0x41382d
  41389d:	in     eax,0x19
  41389f:	cld    
  4138a0:	sbb    ch,BYTE PTR [ebp+0x6e53a62]
  4138a6:	inc    DWORD PTR [edi+0x77]
  4138a9:	jle    0x41384f
  4138ab:	jmp    DWORD PTR [edx+0x47698f5e]
  4138b1:	les    esi,FWORD PTR [edx+0x4566e11]
  4138b7:	sub    edx,DWORD PTR [ebx]
  4138b9:	in     eax,0xa8
  4138bb:	xchg   esp,eax
  4138bc:	adc    al,0xd3
  4138be:	(bad)  
  4138bf:	retf   0x6aff
  4138c2:	xchg   edx,eax
  4138c3:	iret   
  4138c4:	loope  0x4138ef
  4138c6:	dec    esi
  4138c7:	inc    ecx
  4138c8:	ror    BYTE PTR [esi+0x66],1
  4138cb:	mov    dl,0x6b
  4138cd:	dec    esp
  4138ce:	and    al,BYTE PTR [eax+edx*1]
  4138d1:	sbb    ebp,ebp
  4138d3:	or     dl,BYTE PTR [ecx]
  4138d5:	pop    ss
  4138d6:	call   0x3cff01a0
  4138db:	dec    ebx
  4138dc:	nop
  4138dd:	ins    BYTE PTR es:[edi],dx
  4138de:	(bad)  
  4138df:	mov    ebp,DWORD PTR cs:[ebx+0x6d]
  4138e3:	enter  0x43e0,0x4a
  4138e7:	nop
  4138e8:	dec    esp
  4138e9:	sub    bl,cl
  4138eb:	jno    0x413884
  4138ed:	sbb    DWORD PTR [ecx],ebp
  4138ef:	and    DWORD PTR [eax],ebx
  4138f1:	or     al,0x8a
  4138f3:	mov    dl,BYTE PTR [ecx-0x205861b]
  4138f9:	fcmovbe st,st(0)
  4138fb:	ret    
  4138fc:	loop   0x413890
  4138fe:	not    DWORD PTR [eax-0x75]
  413901:	rcl    DWORD PTR [ebp-0xc29aab],cl
  413907:	xchg   ebx,eax
  413908:	pop    edx
  413909:	fsubr  QWORD PTR [eax+esi*4-0x55]
  41390d:	mov    DWORD PTR [ebp-0x27b465e0],esp
  413913:	enter  0xe1a6,0xf2
  413917:	dec    esi
  413918:	ret    0xe985
  41391b:	and    dh,BYTE PTR [edi]
  41391d:	adc    BYTE PTR [edx-0x1cf3a7c5],0x34
  413924:	int3   
  413925:	jg     0x413941
  413927:	xchg   edi,eax
  413928:	xchg   BYTE PTR [eax+0xfd15a8c],al
  41392e:	push   eax
  41392f:	leave  
  413930:	jmp    0x41399d
  413932:	pop    ebp
  413933:	adc    BYTE PTR [edx-0x3ceb5b81],cl
  413939:	ins    DWORD PTR es:[edi],dx
  41393a:	xlat   BYTE PTR ds:[ebx]
  41393b:	call   FWORD PTR [eax+0x36a3257d]
  413941:	pusha  
  413942:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413943:	test   edx,edi
  413945:	push   eax
  413946:	shl    DWORD PTR [bx+si+0x53],0x49
  41394b:	xor    bl,dl
  41394d:	sbb    DWORD PTR [ecx-0x2d],ebx
  413950:	dec    edx
  413951:	ret    0x5ae1
  413954:	test   DWORD PTR [esi-0x4235cf16],eax
  41395a:	and    ebp,DWORD PTR [edx-0x2fd9b34]
  413960:	sbb    al,0xc9
  413962:	out    dx,eax
  413963:	(bad)  
  413964:	std    
  413965:	push   ebx
  413966:	pop    esp
  413967:	mov    ah,0x66
  413969:	aas    
  41396a:	stos   BYTE PTR es:[edi],al
  41396b:	out    dx,al
  41396c:	pop    esi
  41396d:	inc    esp
  41396e:	push   esp
  41396f:	add    eax,0x8dd2b5ee
  413974:	inc    ebp
  413975:	pop    ebp
  413976:	sbb    al,0xb1
  413978:	in     eax,dx
  413979:	pop    eax
  41397a:	(bad)
  41397e:	(bad)  
  41397f:	les    edi,FWORD PTR [esi+0x72]
  413982:	adc    edx,DWORD PTR [eax]
  413984:	in     eax,dx
  413985:	retf   
  413986:	mov    ah,0x5
  413988:	imul   edx,DWORD PTR [ebp-0xd],0x778ca1e7
  41398f:	outs   dx,DWORD PTR ds:[esi]
  413990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413991:	inc    esp
  413992:	fs cli 
  413994:	pushf  
  413995:	fisttp WORD PTR [edx+0x43]
  413998:	test   ecx,eax
  41399a:	pop    ebx
  41399b:	push   es
  41399c:	push   0xd
  41399e:	pop    esi
  41399f:	fbld   TBYTE PTR [ecx]
  4139a1:	lods   al,BYTE PTR ds:[esi]
  4139a2:	xor    DWORD PTR [edx+0x3b],esi
  4139a5:	xchg   esp,eax
  4139a6:	xor    dl,ah
  4139a8:	push   esp
  4139a9:	sbb    al,BYTE PTR [eax+0x6e7a2626]
  4139af:	sgdtd  [edi-0x5c]
  4139b3:	fisttp QWORD PTR [esi]
  4139b5:	mov    esi,DWORD PTR [esi+0x355f252e]
  4139bb:	fst    st(1)
  4139bd:	aas    
  4139be:	adc    dh,BYTE PTR [edx+0x30]
  4139c1:	xchg   edi,eax
  4139c2:	push   esp
  4139c3:	(bad)  
  4139c4:	hlt    
  4139c5:	mov    cl,0xff
  4139c7:	push   ecx
  4139c8:	cmp    DWORD PTR [ebp-0x74],esp
  4139cb:	stos   BYTE PTR es:[edi],al
  4139cc:	hlt    
  4139cd:	and    eax,0xb7500008
  4139d2:	or     dl,BYTE PTR [ebx+ecx*1-0x47863a3d]
  4139d9:	mov    ch,BYTE PTR [esi-0x5ac1ad57]
  4139df:	(bad)  [ecx]
  4139e1:	scas   eax,DWORD PTR es:[edi]
  4139e2:	push   ecx
  4139e3:	adc    eax,DWORD PTR [esi-0x2c67c566]
  4139e9:	enter  0xea46,0x78
  4139ed:	fsubrp st(0),st
  4139ef:	aam    0xac
  4139f1:	xor    edx,edi
  4139f3:	(bad)  
  4139f4:	bound  edx,QWORD PTR [edi]
  4139f6:	mov    esi,0x102ebc08
  4139fb:	mov    cl,0x50
  4139fd:	clc    
  4139fe:	and    ebp,DWORD PTR [ebx+0x49]
  413a01:	xchg   edx,eax
  413a02:	xchg   ecx,eax
  413a03:	retf   
  413a04:	mov    dh,BYTE PTR [edi]
  413a06:	test   al,0x3d
  413a08:	or     edx,DWORD PTR [esi]
  413a0a:	pop    ss
  413a0b:	ds or  ch,dh
  413a0e:	add    DWORD PTR [eax-0x4d60d7ba],0x64d773f8
  413a18:	int    0xbc
  413a1a:	es pop esi
  413a1c:	adc    esi,edi
  413a1e:	out    dx,al
  413a1f:	(bad)  
  413a20:	cli    
  413a21:	addr16 mov al,ch
  413a24:	and    DWORD PTR [esp+edi*2+0x3eb583a7],esp
  413a2b:	xor    cl,ah
  413a2d:	(bad)  
  413a2e:	cli    
  413a2f:	inc    ecx
  413a30:	retf   
  413a31:	xor    BYTE PTR [ebx+0x65872e35],cl
  413a37:	mov    ds:0xc68796de,al
  413a3c:	test   BYTE PTR ds:0xeeab3847,ah
  413a42:	psadbw mm7,QWORD PTR [ebp-0x34]
  413a46:	into   
  413a47:	or     dh,BYTE PTR [ebx]
  413a49:	mov    bh,0xcb
  413a4b:	aaa    
  413a4c:	jmp    0xb8c37d18
  413a51:	call   0x50cdee27
  413a56:	aad    0x69
  413a58:	xor    al,0x5f
  413a5a:	cwde   
  413a5b:	call   0x21250976
  413a60:	call   0x75aa6306
  413a65:	adc    eax,0x1d3a5027
  413a6a:	sti    
  413a6b:	push   edx
  413a6c:	int3   
  413a6d:	ret    
  413a6e:	mov    esp,0xd24ddf13
  413a73:	aaa    
  413a74:	les    ebp,FWORD PTR [eax-0x3ae955fe]
  413a7a:	xor    edx,DWORD PTR [ebx+0x55]
  413a7d:	cld    
  413a7e:	cmc    
  413a7f:	push   esp
  413a80:	adc    esp,eax
  413a82:	add    al,0x62
  413a84:	dec    edx
  413a85:	adc    cl,bh
  413a87:	xor    ebx,DWORD PTR [ebp-0x6e]
  413a8a:	mov    dh,0x63
  413a8c:	jp     0x413a2f
  413a8e:	sub    DWORD PTR [ecx],eax
  413a90:	fidiv  DWORD PTR [ecx+eiz*8]
  413a93:	add    eax,0xaf933299
  413a98:	stos   BYTE PTR es:[edi],al
  413a99:	mov    BYTE PTR [eax],bl
  413a9b:	adc    al,0x51
  413a9d:	mov    ecx,ecx
  413a9f:	aad    0xc2
  413aa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413aa2:	cwde   
  413aa3:	das    
  413aa4:	and    eax,0x348eec07
  413aa9:	neg    dl
  413aab:	out    dx,al
  413aac:	jecxz  0x413ae6
  413aae:	push   esp
  413aaf:	nop
  413ab0:	in     al,dx
  413ab1:	xor    eax,0x4e35bff3
  413ab6:	out    0x3b,eax
  413ab8:	jl     0x413b0e
  413aba:	xchg   ebx,eax
  413abb:	daa    
  413abc:	mov    DWORD PTR [ebx+0x6272897],ebx
  413ac2:	das    
  413ac3:	cmc    
  413ac4:	lea    esi,[ebp+0x63a2a78d]
  413aca:	jle    0xa7650997
  413ad0:	mov    bh,0xf0
  413ad2:	xchg   esp,eax
  413ad3:	(bad)  
  413ad5:	xchg   ebx,eax
  413ad6:	aam    0x3e
  413ad8:	rol    BYTE PTR [edx+0x46e7f855],1
  413ade:	in     al,0x29
  413ae0:	mov    al,0xca
  413ae2:	cmp    al,0x4f
  413ae4:	push   0x857e7966
  413ae9:	sub    BYTE PTR ds:0x99f51165,ch
  413aef:	mov    ebx,0x58c2ecd8
  413af4:	dec    eax
  413af5:	ret    0x2c8b
  413af8:	fcom   DWORD PTR [ebx+0x4dea87b]
  413afe:	stos   DWORD PTR es:[edi],eax
  413aff:	ret    0x9f8e
  413b02:	fldenv [edi-0x63623ff5]
  413b08:	add    BYTE PTR [eax+0x4074088f],0x54
  413b0f:	je     0x413ac6
  413b11:	jge    0x413b39
  413b13:	cdq    
  413b14:	jb     0x413ae5
  413b16:	dec    ebx
  413b17:	je     0x413ab2
  413b19:	js     0x413b66
  413b1b:	js     0x413b26
  413b1d:	sub    BYTE PTR [ebx+0x46],bh
  413b20:	shl    BYTE PTR ds:0x33deb024,cl
  413b26:	mov    bl,BYTE PTR [esi]
  413b28:	mov    ah,0x2a
  413b2a:	xor    BYTE PTR [ebx+0x61],bl
  413b2d:	les    edx,FWORD PTR [ebp-0x10]
  413b30:	popa   
  413b31:	aas    
  413b32:	shr    BYTE PTR [ebx],1
  413b34:	mov    ah,0xa0
  413b36:	(bad)  
  413b37:	arpl   WORD PTR [eax-0x28],dx
  413b3a:	jbe    0x413acc
  413b3c:	pop    ebx
  413b3d:	and    eax,esi
  413b3f:	mov    DWORD PTR [edx],eax
  413b41:	mov    BYTE PTR [ebp+0x6ccddfd],bl
  413b47:	add    eax,0x4828aae2
  413b4c:	push   0xffffffb8
  413b4e:	mov    esi,0xada47701
  413b53:	jo     0x413b9b
  413b55:	mov    ah,0x89
  413b57:	in     al,0x89
  413b59:	pop    edx
  413b5a:	std    
  413b5b:	inc    edi
  413b5c:	imul   esp,DWORD PTR ds:0x41cfc33f,0x8c3f49a4
  413b66:	xor    eax,0xf022363
  413b6b:	add    dl,BYTE PTR [ebx+eax*1]
  413b6e:	xor    DWORD PTR [ebp+0x65],edx
  413b71:	(bad)  
  413b72:	xchg   edi,eax
  413b73:	repz dec esi
  413b75:	adc    al,0xd1
  413b77:	push   eax
  413b78:	pop    ecx
  413b79:	std    
  413b7a:	div    BYTE PTR [ebx+eax*8+0x9bfb9b9]
  413b81:	mul    DWORD PTR [eax+0x6eef32ca]
  413b87:	or     BYTE PTR [edx+ecx*1+0x7593d629],0xf9
  413b8f:	jecxz  0x413bb4
  413b91:	loopne 0x413be0
  413b93:	sbb    DWORD PTR [ebx-0x36c94c6d],edi
  413b99:	push   es
  413b9a:	(bad)  
  413b9b:	dec    edi
  413b9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b9d:	mov    bl,0x92
  413b9f:	jne    0x413bcd
  413ba1:	mov    WORD PTR [ecx],gs
  413ba3:	lds    edi,FWORD PTR [edx]
  413ba5:	inc    ebx
  413ba6:	mov    ds:0x9d1efbb,eax
  413bab:	ficom  WORD PTR [edx+0x18]
  413bae:	out    dx,al
  413baf:	mov    BYTE PTR [ebx+eiz*4],0xb5
  413bb3:	xor    DWORD PTR [edi],ebp
  413bb5:	push   ebx
  413bb6:	out    dx,al
  413bb7:	shl    BYTE PTR [edi],0xa
  413bba:	sub    edx,DWORD PTR [esi-0x7b717288]
  413bc0:	imul   edi,DWORD PTR [ebp-0x5b],0xca0715c9
  413bc7:	jbe    0x413b9c
  413bc9:	pushf  
  413bca:	js     0x413b4d
  413bcc:	xchg   edx,eax
  413bcd:	imul   edi,DWORD PTR [eax+0x27],0x4a3f69b
  413bd4:	adc    BYTE PTR [edi-0x48],bh
  413bd7:	fsubr  st,st(0)
  413bda:	or     BYTE PTR [ebx+0x5f7de418],dh
  413be0:	loop   0x413bdb
  413be2:	stos   BYTE PTR es:[edi],al
  413be3:	in     al,0x8c
  413be5:	ss out 0x62,al
  413be8:	add    eax,0x25ea2ad7
  413bed:	and    ebx,DWORD PTR [edx+0x2f0912f]
  413bf3:	out    dx,eax
  413bf4:	repnz sub DWORD PTR [ebx+ebp*2+0x5da57b1],esi
  413bfc:	xor    al,bl
  413bfe:	mov    ds:0xe57d2ae9,eax
  413c03:	xor    ch,cl
  413c05:	popa   
  413c06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c07:	pop    edx
  413c08:	push   edx
  413c09:	add    DWORD PTR [eax-0x3f],esi
  413c0c:	popa   
  413c0d:	retf   
  413c0e:	add    DWORD PTR cs:[ebp+ebp*8-0x4356bdc8],eax
  413c16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c17:	dec    esp
  413c18:	pop    ebp
  413c19:	js     0x413c6f
  413c1b:	or     eax,0x2a092e70
  413c20:	xor    ch,BYTE PTR [ecx-0x1bf1bc9b]
  413c26:	inc    eax
  413c27:	clc    
  413c28:	add    ecx,esi
  413c2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c2b:	ins    DWORD PTR es:[edi],dx
  413c2c:	xor    eax,0xc5ce0ad8
  413c31:	(bad)  
  413c33:	mov    al,BYTE PTR [eax]
  413c35:	push   edi
  413c36:	sbb    ch,BYTE PTR [esi+0xdeb4f44]
  413c3c:	sub    BYTE PTR [eax-0x326baf4a],0x69
  413c43:	scas   al,BYTE PTR es:[edi]
  413c44:	sub    BYTE PTR [eax+esi*4-0x22527422],ah
  413c4b:	xchg   ebp,eax
  413c4c:	in     al,0x8c
  413c4e:	push   eax
  413c4f:	mov    eax,ds:0x919e1709
  413c54:	sbb    esi,esp
  413c56:	cwde   
  413c57:	dec    ebp
  413c58:	inc    esi
  413c59:	fadd   st(7),st
  413c5b:	dec    edx
  413c5c:	ror    DWORD PTR [eax+ecx*4+0x573521ad],0xdc
  413c64:	je     0x413cae
  413c66:	jecxz  0x413bf7
  413c68:	addr16 aas 
  413c6a:	loopne 0x413c0b
  413c6c:	mov    esp,0xd38c41e
  413c71:	loope  0x413c1c
  413c73:	neg    BYTE PTR [edi+0x36]
  413c76:	adc    eax,0x5212840c
  413c7b:	loopne 0x413cb8
  413c7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c7e:	je     0x413c78
  413c80:	jge    0x413d00
  413c82:	mov    esi,0xfcfa4dd3
  413c87:	call   0x6e0e:0x7db0b3e0
  413c8e:	and    al,0x6c
  413c90:	mov    ds:0x7ba6e97c,eax
  413c95:	mov    ebx,0x2b63777a
  413c9a:	adc    ebp,DWORD PTR [ecx]
  413c9c:	pop    eax
  413c9d:	sbb    ebx,esi
  413c9f:	sbb    BYTE PTR [ebp-0x40],al
  413ca2:	push   edx
  413ca3:	add    DWORD PTR [edi-0x46d43a7e],esp
  413ca9:	pop    edx
  413caa:	lods   eax,DWORD PTR ds:[esi]
  413cab:	adc    al,0xa9
  413cad:	sub    dh,bl
  413caf:	dec    esi
  413cb0:	leave  
  413cb1:	sbb    DWORD PTR [eiz*4+0x3a0d1d59],0xffffff81
  413cb9:	pop    eax
  413cba:	aad    0x64
  413cbc:	push   ebx
  413cbd:	inc    edx
  413cbe:	jmp    0x3789b719
  413cc3:	inc    esp
  413cc4:	dec    edi
  413cc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cc6:	cmp    ecx,DWORD PTR [esi-0x544ffc45]
  413ccc:	data16 js 0x413d31
  413ccf:	jb     0x413d02
  413cd1:	adc    BYTE PTR [esp+ebp*2-0x4c],0xdb
  413cd6:	inc    edi
  413cd7:	adc    ecx,edx
  413cd9:	sbb    eax,0xc498a38b
  413cde:	xchg   ebp,eax
  413cdf:	inc    edx
  413ce0:	cmove  ecx,DWORD PTR [edi+edx*8]
  413ce4:	mov    esp,0xa5df944e
  413ce9:	or     ebx,DWORD PTR [edx]
  413ceb:	neg    BYTE PTR [ecx]
  413ced:	dec    ecx
  413cee:	sbb    eax,0xddfe68aa
  413cf3:	or     ah,BYTE PTR [ebp-0x78878b11]
  413cf9:	cmp    bl,ah
  413cfb:	xor    BYTE PTR [esi],ah
  413cfd:	and    DWORD PTR [ebx],ebp
  413cff:	and    edi,DWORD PTR [ebp+esi*8+0x3a]
  413d03:	loope  0x413d3d
  413d05:	jbe    0x413c9f
  413d07:	pop    DWORD PTR [edi-0x682debe5]
  413d0d:	sub    BYTE PTR [ebx+0x5251da78],cl
  413d13:	(bad)  
  413d14:	xchg   ecx,eax
  413d15:	ret    
  413d16:	scas   al,BYTE PTR es:[edi]
  413d17:	inc    ecx
  413d18:	cmp    edx,eax
  413d1a:	jb     0x37ebf3cb
  413d20:	mov    esi,0x7f42ea62
  413d25:	cli    
  413d26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d27:	arpl   WORD PTR [ecx],sp
  413d29:	inc    edx
  413d2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d2b:	stos   DWORD PTR es:[edi],eax
  413d2c:	inc    ebp
  413d2d:	inc    al
  413d2f:	push   ds
  413d30:	pop    edi
  413d31:	xchg   ebx,eax
  413d32:	inc    ebx
  413d33:	leave  
  413d34:	sub    BYTE PTR [edx],cl
  413d36:	leave  
  413d37:	inc    edi
  413d38:	inc    BYTE PTR [edi-0x45]
  413d3b:	push   ebp
  413d3c:	idiv   ebp
  413d3e:	addr16 and al,al
  413d41:	dec    ebx
  413d42:	test   BYTE PTR [esi+0x3fb64b2],dl
  413d48:	mov    esp,0xe4903de1
  413d4d:	enter  0x6f18,0x60
  413d51:	aad    0x53
  413d53:	xchg   esi,eax
  413d54:	pop    ss
  413d55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d56:	(bad)
  413d59:	out    dx,al
  413d5a:	xor    DWORD PTR ds:0xe8520baf,esi
  413d60:	bound  edx,QWORD PTR [esi]
  413d62:	(bad)  
  413d63:	iret   
  413d64:	fs sub al,ah
  413d67:	dec    edx
  413d68:	jmp    0x9060:0x1fb8fef7
  413d6f:	xor    BYTE PTR [ebx+0x70],bl
  413d72:	ret    
  413d73:	dec    edx
  413d74:	mov    ebx,0x8514678d
  413d79:	add    al,bl
  413d7b:	(bad)  
  413d7c:	cmp    eax,0x4284bba7
  413d81:	sbb    ebx,esp
  413d83:	add    eax,0x7ea6c85c
  413d88:	mov    ebp,0x7d38e047
  413d8d:	dec    ebp
  413d8f:	ins    DWORD PTR es:[edi],dx
  413d90:	dec    eax
  413d91:	pop    ds
  413d92:	and    DWORD PTR [esi-0x7eb82ca6],esi
  413d98:	es jmp 0xf2d4:0x97063877
  413da0:	mov    eax,0x22e188d1
  413da5:	mov    dl,0x6f
  413da7:	dec    esi
  413da8:	xchg   esi,eax
  413da9:	and    DWORD PTR [eax],esp
  413dab:	add    bl,dl
  413dad:	xlat   BYTE PTR ds:[ebx]
  413dae:	xlat   BYTE PTR ds:[ebx]
  413daf:	jmp    0x413d36
  413db1:	mov    esi,0xe07a22c6
  413db6:	mov    edx,0x4361bc35
  413dbb:	popf   
  413dbc:	popf   
  413dbd:	mov    ebp,DWORD PTR [ebp-0x38]
  413dc0:	jmp    0x413e2e
  413dc2:	push   ecx
  413dc3:	stos   DWORD PTR es:[edi],eax
  413dc4:	bound  esi,QWORD PTR [eax-0x3396911d]
  413dca:	mov    DWORD PTR [ebx],edi
  413dcc:	dec    ebp
  413dcd:	adc    eax,0x941d8203
  413dd2:	and    bl,BYTE PTR [ecx]
  413dd4:	jnp    0x413d79
  413dd6:	pop    edx
  413dd7:	test   DWORD PTR es:[ebx-0x69fd3eac],eax
  413dde:	xlat   BYTE PTR ds:[ebx]
  413ddf:	popf   
  413de0:	in     al,dx
  413de1:	outs   dx,BYTE PTR ds:[esi]
  413de2:	xor    al,0xe6
  413de4:	mov    ds:0x1fc9b5a9,eax
  413de9:	xor    eax,0xc96e4e64
  413dee:	inc    ebp
  413def:	pop    ecx
  413df0:	jp     0x413e0a
  413df2:	imul   edi,DWORD PTR [ebx-0x76],0x39b10231
  413df9:	nop
  413dfa:	shl    BYTE PTR [ecx],cl
  413dfc:	repnz sbb edi,esi
  413dff:	mov    ah,0x7f
  413e01:	(bad)  
  413e03:	cs stos DWORD PTR es:[edi],eax
  413e05:	imul   edi,DWORD PTR [edx-0x36],0x3eb7aefa
  413e0c:	stos   DWORD PTR es:[edi],eax
  413e0d:	lahf   
  413e0e:	jb     0x413e72
  413e10:	and    eax,0xff16a6d7
  413e15:	(bad)
  413e18:	mov    ah,0xcc
  413e1a:	cmp    cl,0xf8
  413e1d:	outs   dx,BYTE PTR ds:[esi]
  413e1e:	aas    
  413e1f:	ficom  DWORD PTR [ecx-0x3f]
  413e22:	xor    eax,DWORD PTR ds:0x6c9c4a38
  413e28:	or     ebx,0x7ab58c9d
  413e2e:	cmp    ebx,DWORD PTR ds:[ecx+0x26]
  413e32:	imul   eax,DWORD PTR [esi-0x6e],0x4f
  413e36:	xchg   edi,eax
  413e37:	xchg   ebx,eax
  413e38:	adc    eax,0xa6e4d6d2
  413e3d:	jne    0x413e9f
  413e3f:	jecxz  0x413e8d
  413e41:	mov    dl,0x30
  413e43:	xchg   DWORD PTR [edi-0x41],ecx
  413e46:	pop    ecx
  413e47:	es dec esi
  413e49:	test   al,0x47
  413e4b:	mov    fs,WORD PTR [ecx-0x6d]
  413e4e:	push   eax
  413e4f:	aad    0x4f
  413e51:	dec    ebx
  413e52:	push   ecx
  413e53:	mov    WORD PTR [edx-0x22296084],cs
  413e59:	jne    0x413e0c
  413e5b:	push   es
  413e5c:	mov    ds:0xb9d1116c,al
  413e61:	xchg   esi,eax
  413e62:	dec    edx
  413e63:	or     eax,0xc05081b9
  413e68:	in     eax,dx
  413e69:	xor    DWORD PTR ds:0x9b13201c,edi
  413e6f:	imul   esi,DWORD PTR [ecx],0xfffffff1
  413e72:	(bad)  
  413e73:	rcr    dl,0x7b
  413e76:	mov    ah,0x43
  413e78:	jp     0x413e16
  413e7a:	cmp    al,0x59
  413e7c:	fwait
  413e7d:	mov    edx,0x3ee946a0
  413e82:	lds    esp,FWORD PTR [eax]
  413e84:	inc    eax
  413e85:	aam    0x4
  413e87:	xor    esp,eax
  413e89:	mov    ecx,DWORD PTR [esi+0x40]
  413e8c:	cli    
  413e8d:	jmp    0x4547:0x2e502f7
  413e94:	into   
  413e95:	sub    BYTE PTR [edx+0x2855534e],cl
  413e9b:	jl     0x413ebb
  413e9d:	mov    ebx,0x54cdc860
  413ea2:	or     esi,DWORD PTR [ebx-0x2f]
  413ea5:	lods   eax,DWORD PTR ds:[esi]
  413ea6:	cld    
  413ea7:	cmp    DWORD PTR ds:0xdeac57a8,0x89e37841
  413eb1:	adc    dh,BYTE PTR [edx-0x6331c7a6]
  413eb7:	std    
  413eb8:	jl     0x413ec0
  413eba:	xchg   BYTE PTR [edx],bh
  413ebc:	xchg   ebp,eax
  413ebd:	cs jl  0x413f08
  413ec0:	inc    edx
  413ec1:	push   edi
  413ec2:	add    edi,0x3eb238cc
  413ec8:	sub    al,0xb2
  413eca:	adc    DWORD PTR ds:0xe62aec2e,esp
  413ed0:	xor    esi,DWORD PTR [esp+ebp*1+0x48]
  413ed4:	sub    dh,bh
  413ed6:	add    eax,0xb6716670
  413edb:	mov    ds:0x3cfe3c5f,eax
  413ee0:	ss jl  0x413eae
  413ee3:	adc    eax,esp
  413ee5:	mov    ch,0x3f
  413ee7:	shrd   DWORD PTR [ecx+0x49],ebp,0x3f
  413eec:	jno    0x413ed7
  413eee:	add    eax,0xe99407ed
  413ef3:	jmp    0x617e4bd7
  413ef8:	mov    ebx,0xfd7579aa
  413efd:	xor    ch,BYTE PTR [ebx]
  413eff:	and    eax,0xf25682f4
  413f04:	mov    ah,0xcc
  413f06:	sbb    eax,0x4ef3f3bc
  413f0b:	loopne 0x413f0e
  413f0d:	xchg   ecx,eax
  413f0e:	test   BYTE PTR [ebp-0x9b9c2bb],0x2b
  413f15:	sti    
  413f16:	jns    0x413eb2
  413f18:	xor    dh,BYTE PTR [ecx]
  413f1a:	das    
  413f1b:	ins    DWORD PTR es:[edi],dx
  413f1c:	add    al,0xac
  413f1e:	les    esp,FWORD PTR [edx-0x3f34e0d9]
  413f24:	xor    ebx,DWORD PTR [esi-0x47]
  413f27:	adc    ecx,edx
  413f29:	fwait
  413f2a:	inc    esi
  413f2b:	je     0x413f57
  413f2d:	xchg   ebp,eax
  413f2e:	push   0xffffff9a
  413f30:	mov    esp,0x45608e26
  413f35:	fild   WORD PTR [esi+0x3]
  413f38:	icebp  
  413f39:	imul   edx,DWORD PTR [eax+0x63effdea],0x30
  413f40:	shl    cl,0x9c
  413f43:	call   0x0:0x22f251
	...
  414126:	add    BYTE PTR [ebx+0x42],dl
  414129:	or     DWORD PTR [ecx+ebx*1-0x2a100801],edi
  414130:	pop    eax
  414131:	cdq    
  414132:	shr    DWORD PTR [esi],0xf8
  414135:	ja     0x4140c6
  414137:	or     dl,BYTE PTR [ecx+eax*1+0x0]
  41413b:	and    eax,0xb7000007
  414140:	out    dx,al
  414141:	push   es
  414142:	leave  
  414143:	nop
  414144:	xor    BYTE PTR [edi-0x5d],0xd0
  414148:	mov    ah,BYTE PTR [edi+0x1]
  41414b:	push   eax
  41414c:	call   0xb66df7eb
  414151:	push   esp
  414152:	cmc    
  414153:	shl    DWORD PTR [eax-0x10e0400a],0x98
  41415a:	out    0xf1,al
  41415c:	xor    DWORD PTR [edx-0x48],ebp
  41415f:	test   bh,al
  414161:	cmp    BYTE PTR [esi],al
  414163:	pushf  
  414164:	int    0xc2
  414166:	dec    ah
  414168:	fstp   QWORD PTR [esi-0x53]
  41416b:	xchg   edi,eax
  41416c:	add    DWORD PTR [edi],eax
  41416e:	cdq    
  41416f:	(bad)  [edx]
  414171:	mov    ecx,0xc2565fc
  414176:	fist   DWORD PTR [esi]
  414178:	fadd   st,st(4)
  41417a:	pop    esi
  41417b:	es adc cl,bl
  41417e:	mov    ebx,0x2b80f2a0
  414183:	imul   bl
  414185:	into   
  414186:	mov    ebx,0x1ca0d2ee
  41418b:	int3   
  41418c:	aas    
  41418d:	xlat   BYTE PTR ds:[ebx]
  41418e:	test   eax,0xf4713add
  414193:	inc    ecx
  414194:	fistp  QWORD PTR [edi+edx*1-0x59bff4b2]
  41419b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41419c:	cmc    
  41419d:	adc    dh,BYTE PTR ds:0x299b3e03
  4141a3:	jns    0x414176
  4141a5:	mov    DWORD PTR [eax+eiz*8],edi
  4141a8:	call   0xbb82:0x7d7d28dc
  4141af:	fwait
  4141b0:	(bad)  
  4141b1:	(bad)  
  4141b2:	scas   al,BYTE PTR es:[edi]
  4141b3:	xchg   edx,eax
  4141b4:	nop
  4141b5:	add    BYTE PTR [eax],ch
  4141b7:	stos   BYTE PTR es:[edi],al
  4141b8:	mov    ebp,DWORD PTR [esi+0x39ff0272]
  4141be:	inc    esp
  4141bf:	push   ebp
  4141c0:	rcr    DWORD PTR [ebp-0x39049f42],1
  4141c6:	test   DWORD PTR [ebp+0x28],edi
  4141c9:	lds    eax,FWORD PTR [edx]
  4141cb:	xchg   ecx,eax
  4141cc:	popa   
  4141cd:	dec    eax
  4141ce:	adc    bh,ch
  4141d0:	xor    DWORD PTR [ebx],ecx
  4141d2:	hlt    
  4141d3:	cli    
  4141d4:	xor    DWORD PTR [edx+0x1e9ecf66],edx
  4141da:	popa   
  4141db:	sub    BYTE PTR [bx+si],0xc7
  4141df:	inc    esp
  4141e0:	mov    edx,ds
  4141e2:	call   0x427e01f0
  4141e7:	or     dl,dh
  4141e9:	shl    BYTE PTR [edx+0x10e07965],cl
  4141ef:	inc    eax
  4141f0:	nop
  4141f1:	dec    esi
  4141f2:	mov    al,ds:0xe79f189a
  4141f7:	pop    ds
  4141f8:	lods   al,BYTE PTR ds:[si]
  4141fa:	mov    cl,0xd2
  4141fc:	(bad)  
  4141fd:	pop    eax
  4141fe:	std    
  4141ff:	push   eax
  414200:	jl     0x41421e
  414202:	fwait
  414203:	add    DWORD PTR [ecx+0x16c39c9d],esp
  414209:	jl     0x414237
  41420b:	fsub   QWORD PTR [esi+0x47ab50f8]
  414211:	arpl   WORD PTR [eax+0x3a94de74],ax
  414217:	lock sbb DWORD PTR [bx+di+0x70de],ebx
  41421d:	cdq    
  41421e:	sbb    eax,0xa638f178
  414223:	jmp    0x77c8:0xe840436b
  41422a:	ret    0x8335
  41422d:	psubusb mm4,QWORD PTR [esp+edx*1-0x26]
  414232:	jo     0x41426f
  414234:	add    BYTE PTR [ecx],dh
  414236:	cmp    ch,BYTE PTR [eax+0x62a5fab8]
  41423c:	jecxz  0x414238
  41423e:	fild   WORD PTR [edx-0x1b]
  414241:	jmp    0xdc37f781
  414246:	in     al,0xb6
  414248:	sbb    BYTE PTR [edi+0x7a32778e],bl
  41424e:	xor    eax,0xdf51f437
  414253:	push   eax
  414254:	mov    edi,0xb4201f0
  414259:	xchg   edi,eax
  41425a:	leave  
  41425b:	push   0xf781a672
  414260:	dec    ebp
  414261:	outs   dx,DWORD PTR ds:[esi]
  414262:	mul    DWORD PTR [edx]
  414264:	sub    eax,DWORD PTR [edi+0x76]
  414267:	repnz adc dl,BYTE PTR [ecx]
  41426a:	fild   WORD PTR [eax]
  41426c:	jmp    0xfcac2321
  414271:	popa   
  414272:	ja     0x41426e
  414274:	popa   
  414275:	inc    esp
  414276:	sub    eax,0x9bb98310
  41427b:	iret   
  41427c:	(bad)  
  41427e:	jmp    0x34f0:0x3dd4a349
  414285:	pop    esp
  414286:	dec    esp
  414287:	(bad)  
  414289:	aas    
  41428a:	xchg   esi,eax
  41428b:	jmp    0x73ed:0x92031d14
  414292:	call   0xea118714
  414297:	mov    dl,0x8f
  414299:	mov    ds:0x37848597,eax
  41429e:	push   ecx
  41429f:	stos   BYTE PTR es:[edi],al
  4142a0:	pop    ecx
  4142a1:	in     eax,0x96
  4142a3:	repnz mov dh,0x7d
  4142a6:	adc    dh,BYTE PTR [ebp-0x64c874ad]
  4142ac:	push   edi
  4142ad:	push   0xf7219443
  4142b2:	mov    bl,0xf0
  4142b4:	mov    ds:0x964ac951,al
  4142b9:	push   ebx
  4142ba:	ror    bh,cl
  4142bc:	mov    cl,cl
  4142be:	adc    bh,ch
  4142c0:	rcr    cl,0x9b
  4142c3:	pop    esi
  4142c4:	popa   
  4142c5:	mov    ss,WORD PTR [eax+0x63eb00b5]
  4142cb:	push   es
  4142cc:	ins    BYTE PTR es:[edi],dx
  4142cd:	imul   edi,DWORD PTR [ebp-0x7b2f6fc6],0xef86b6a4
  4142d7:	stos   BYTE PTR es:[edi],al
  4142d8:	push   esp
  4142d9:	dec    esi
  4142da:	sbb    DWORD PTR [edi],0xfffffff0
  4142dd:	lods   al,BYTE PTR ds:[esi]
  4142de:	sub    BYTE PTR [ebp-0x64],bl
  4142e1:	dec    edx
  4142e2:	push   esp
  4142e3:	jmp    0x414346
  4142e5:	leave  
  4142e6:	or     eax,0xa4ba9649
  4142eb:	push   esp
  4142ec:	mov    bl,0x68
  4142ee:	mov    edi,esi
  4142f0:	xchg   ecx,eax
  4142f1:	and    al,0xde
  4142f3:	add    al,0x2a
  4142f5:	xor    al,0x62
  4142f7:	pop    esp
  4142f8:	sbb    dh,BYTE PTR [edi+0x45620a03]
  4142fe:	sub    al,0xb3
  414300:	fsubr  QWORD PTR [ebx-0x99111b7]
  414306:	ficomp WORD PTR [bx+si-0x8]
  41430a:	hlt    
  41430b:	mov    bl,BYTE PTR [edi+0x7e0e4194]
  414311:	inc    edi
  414312:	repnz dec ebp
  414314:	pminsw mm0,QWORD PTR [ebx+0x64f5e374]
  41431b:	je     0x4142d9
  41431d:	(bad)  
  41431e:	and    al,0x3
  414320:	jge    0x4142fc
  414322:	fdivp  st(4),st
  414324:	retf   0x14e4
  414327:	mov    eax,ds:0x3e9710d1
  41432c:	pop    esi
  41432d:	jmp    0xa5c86a97
  414332:	pop    ecx
  414333:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414334:	clc    
  414335:	mov    ds:0x5bbd83ed,al
  41433a:	in     eax,0x7a
  41433c:	int3   
  41433d:	adc    eax,0x63a6d36c
  414342:	daa    
  414343:	jle    0x4142c7
  414345:	lea    ecx,[ebp+0x78]
  414348:	add    ah,BYTE PTR ds:0x9c541cae
  41434e:	push   cs
  41434f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414350:	leave  
  414351:	prefetch (bad)
  414352:	or     eax,0xe2ca32fc
  414357:	mov    ds:0x6857ac26,al
  41435c:	xor    eax,0x306677d1
  414361:	hlt    
  414362:	xor    al,0x24
  414364:	add    dh,bl
  414366:	xor    bl,BYTE PTR [edx+0x3cc3fac1]
  41436c:	jo     0x414339
  41436e:	inc    ebp
  41436f:	(bad)  
  414370:	retf   0x5b11
  414373:	cmp    ah,bl
  414375:	inc    edx
  414376:	inc    ch
  414378:	adc    DWORD PTR [ecx-0x53],edx
  41437b:	inc    esi
  41437c:	or     BYTE PTR [edx],dh
  41437e:	push   ds
  41437f:	xchg   ebp,eax
  414380:	fcom   QWORD PTR [ebp+0x42]
  414383:	mov    bl,0x6b
  414385:	es sahf 
  414387:	(bad)  
  414388:	pop    ecx
  414389:	push   esp
  41438a:	popa   
  41438b:	clc    
  41438c:	and    ebx,esp
  41438e:	xchg   edx,eax
  41438f:	pop    edx
  414390:	nop
  414391:	cmp    al,0x56
  414393:	mov    ah,0x71
  414395:	clc    
  414396:	fcmovu st,st(2)
  414398:	mov    ah,BYTE PTR ds:[edi-0x2d286668]
  41439f:	rcl    BYTE PTR [ecx-0x1a],cl
  4143a2:	dec    ebp
  4143a3:	mov    edi,ss
  4143a5:	test   al,0x4e
  4143a7:	or     al,0x55
  4143a9:	mov    eax,0x3d296c6a
  4143ae:	sbb    esi,DWORD PTR [edx-0x5290ab94]
  4143b4:	in     al,dx
  4143b5:	push   esp
  4143b6:	dec    edi
  4143b7:	add    ebp,DWORD PTR [eax-0x24]
  4143ba:	mov    ebx,cs
  4143bc:	add    eax,0xd2eaea8f
  4143c1:	dec    ebx
  4143c2:	sti    
  4143c3:	jg     0x414390
  4143c5:	iret   
  4143c6:	xchg   BYTE PTR [eax],bl
  4143c8:	lea    esp,fs:[eax+0x4e]
  4143cc:	(bad)
  4143d1:	test   BYTE PTR [edi-0x51dc8133],0xa
  4143d8:	jmp    FWORD PTR [ebx+edi*8]
  4143db:	inc    ebx
  4143dc:	pop    esp
  4143dd:	ror    BYTE PTR [edi-0x28],cl
  4143e0:	xor    eax,DWORD PTR [ebx-0x7f]
  4143e3:	adc    esp,edx
  4143e5:	pop    eax
  4143e6:	mov    eax,0x2778bfb6
  4143eb:	jb     0x4143b6
  4143ed:	add    esi,DWORD PTR [esi-0x338a8076]
  4143f3:	stc    
  4143f4:	nop
  4143f5:	scas   eax,DWORD PTR es:[edi]
  4143f6:	mov    ah,0x3f
  4143f8:	lea    esi,ds:0xb65b6292
  4143fe:	out    dx,al
  4143ff:	leave  
  414400:	push   esi
  414401:	mov    ds:0x865e3203,al
  414406:	stos   DWORD PTR es:[edi],eax
  414407:	push   esi
  414408:	clc    
  414409:	adc    eax,0x2d3a833c
  41440e:	cmp    ebp,DWORD PTR [ecx]
  414410:	and    al,0xa2
  414412:	and    eax,0x87e86a50
  414417:	sub    BYTE PTR [esp+ecx*1-0x4d66bbbb],cl
  41441e:	lahf   
  41441f:	aas    
  414420:	mov    BYTE PTR [eax],ch
  414422:	pop    ds
  414423:	xchg   edx,eax
  414424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414425:	jae    0x4143f2
  414427:	out    dx,eax
  414428:	sti    
  414429:	sbb    dh,al
  41442b:	xchg   esi,eax
  41442c:	sub    dh,BYTE PTR [ebx-0x6a10b452]
  414432:	cmp    ah,al
  414434:	inc    esp
  414435:	(bad)  
  414436:	cmp    ah,BYTE PTR [eax+0x13c092bf]
  41443c:	pop    es
  41443d:	xchg   edx,eax
  41443e:	sub    DWORD PTR [ecx-0xe],esp
  414441:	add    eax,0xec1db17f
  414446:	lods   al,BYTE PTR ds:[esi]
  414447:	jno    0x4143ef
  414449:	out    0x94,al
  41444b:	stos   BYTE PTR es:[edi],al
  41444c:	stos   BYTE PTR es:[edi],al
  41444d:	sub    ch,dh
  41444f:	add    DWORD PTR [ecx+0xa],ebp
  414452:	iret   
  414453:	dec    esi
  414454:	retf   0xa810
  414457:	leave  
  414458:	ins    DWORD PTR es:[edi],dx
  414459:	and    ebp,DWORD PTR [edi-0x6a]
  41445c:	jmp    0xbe3da87e
  414461:	mov    bl,0x78
  414463:	(bad)  
  414464:	dec    eax
  414465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414466:	xchg   ebp,eax
  414467:	cmp    DWORD PTR [ebx],ebx
  414469:	sbb    al,0x2
  41446b:	dec    edx
  41446c:	adc    bl,BYTE PTR [esi]
  41446e:	cmp    BYTE PTR [edi],dl
  414470:	mov    eax,ds:0x4c187099
  414475:	ret    0x9acb
  414478:	xchg   edi,eax
  414479:	mov    ebx,0x48a39671
  41447e:	es jo  0x41449a
  414481:	mov    dh,0x16
  414483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414484:	cs push 0x1
  414487:	add    DWORD PTR [ebp-0x38c01bbd],ecx
  41448d:	dec    ecx
  41448e:	ins    DWORD PTR es:[edi],dx
  41448f:	cmp    al,0xa2
  414491:	mov    esi,0x8e86ba9a
  414496:	retf   
  414497:	inc    esi
  414498:	pop    edx
  414499:	retf   0x5b48
  41449c:	enter  0xcdab,0x5
  4144a0:	jne    0x4144a7
  4144a2:	mov    bh,0xa7
  4144a4:	inc    ebx
  4144a5:	jg     0x4144ea
  4144a7:	jnp    0x4144e9
  4144a9:	xchg   esp,eax
  4144aa:	push   cs
  4144ab:	jne    0x414446
  4144ad:	mov    ch,0x8
  4144af:	push   edx
  4144b0:	iret   
  4144b1:	push   ds
  4144b2:	adc    eax,0x602a3251
  4144b7:	sbb    DWORD PTR [esi-0x4f767651],esi
  4144bd:	or     cl,BYTE PTR [ebx+0x14bfa188]
  4144c3:	sub    ecx,ebx
  4144c5:	xchg   ebx,eax
  4144c6:	in     al,dx
  4144c7:	mov    ds:0xac27385f,eax
  4144cc:	push   0xffffffa9
  4144ce:	in     eax,dx
  4144cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144d0:	nop
  4144d1:	pop    esp
  4144d2:	pop    esi
  4144d3:	jbe    0x4144e4
  4144d5:	mov    al,ds:0x5a0b9b66
  4144da:	scas   al,BYTE PTR es:[edi]
  4144db:	fcomp  DWORD PTR fs:[ebp-0x46]
  4144df:	int3   
  4144e0:	dec    ebx
  4144e1:	cmp    al,0xff
  4144e3:	push   ebp
  4144e4:	call   0x1643b1b
  4144e9:	call   0x2e3db42b
  4144ee:	inc    esp
  4144ef:	cmp    ebx,DWORD PTR [eax-0x340c5361]
  4144f5:	rcl    DWORD PTR [esi+eax*1],cl
  4144f8:	lahf   
  4144f9:	jg     0x4144ed
  4144fb:	xor    ch,cl
  4144fd:	stos   BYTE PTR es:[edi],al
  4144fe:	mov    dl,0x80
  414500:	(bad)  
  414501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414502:	push   ebp
  414503:	xchg   edx,eax
  414504:	loop   0x4144fb
  414506:	jne    0x414576
  414508:	ss pop ebx
  41450a:	xchg   edx,eax
  41450b:	and    ecx,DWORD PTR [ecx-0x3d]
  41450e:	scas   eax,DWORD PTR es:[edi]
  41450f:	lea    ebp,[esi-0x3249d6f2]
  414515:	(bad)  
  414516:	clc    
  414517:	neg    BYTE PTR [ebp-0x27]
  41451a:	ds in  eax,dx
  41451c:	jecxz  0x4144cd
  41451e:	lea    ebp,[ebp-0x3f]
  414521:	imul   eax,DWORD PTR [esi+ecx*1],0x6d
  414525:	lea    esi,[eax+0x46f0c4f8]
  41452b:	xor    al,0xbf
  41452d:	(bad)  
  41452e:	loop   0x4144f7
  414530:	test   BYTE PTR [esi+0x6769087e],0xf6
  414537:	mov    WORD PTR [ebp-0x508ad98b],es
  41453d:	inc    esi
  41453e:	or     BYTE PTR [esi*1+0x2b51f0cf],0xea
  414546:	repnz loopne 0x4144f6
  414549:	fcmove st,st(0)
  41454b:	jl     0x41456c
  41454d:	int    0x5f
  41454f:	cmp    eax,0x6e861b6f
  414554:	rcr    ah,cl
  414556:	jge    0x41453c
  414558:	leave  
  414559:	inc    esp
  41455a:	gs jns 0x41455e
  41455d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41455e:	mov    dh,0x2b
  414560:	in     eax,0x30
  414562:	mov    ch,0x56
  414564:	rep lods al,BYTE PTR ds:[esi]
  414566:	pop    ds
  414567:	jge    0x41456f
  414569:	add    al,0xfa
  41456b:	fidiv  WORD PTR [eax]
  41456d:	in     eax,dx
  41456e:	fcmove st,st(0)
  414570:	adc    DWORD PTR [ecx],edi
  414572:	repnz mov ecx,0xfa877cb4
  414578:	add    BYTE PTR [edx+0x136f3514],dh
  41457e:	jmp    0x925b:0x23b46c5a
  414585:	(bad)  
  414586:	cld    
  414587:	mov    eax,0x7ee72a62
  41458c:	jnp    0x4145d8
  41458e:	or     BYTE PTR [ebx],dh
  414590:	mov    edx,0xdb473eed
  414595:	ror    edx,0x4f
  414598:	pop    ebx
  414599:	outs   dx,DWORD PTR ds:[esi]
  41459a:	call   0xa6a88f44
  41459f:	and    BYTE PTR [esi-0x6babddbc],0x91
  4145a6:	cmc    
  4145a7:	lds    edi,FWORD PTR [ecx-0x55]
  4145aa:	nop
  4145ab:	shl    bh,1
  4145ad:	test   eax,0xa196f1bf
  4145b2:	fsubr  st(5),st
  4145b4:	daa    
  4145b5:	cmp    BYTE PTR es:[edx+0x3ea853e1],dl
  4145bc:	mov    DWORD PTR [esi-0x47],ebp
  4145bf:	push   eax
  4145c0:	lds    ebx,FWORD PTR [ebx-0x72]
  4145c3:	jmp    0xabd0:0x42dcae68
  4145ca:	sub    ecx,edx
  4145cc:	inc    ebx
  4145cd:	fnstcw WORD PTR [ecx+0xd]
  4145d0:	nop
  4145d1:	pop    esi
  4145d2:	mov    BYTE PTR [ebp-0x5e2e295a],cl
  4145d8:	mov    ds:0xd90b6873,al
  4145dd:	mov    ah,0x43
  4145df:	lahf   
  4145e0:	rcr    DWORD PTR [eax+0x21e47a77],0xb8
  4145e7:	pminub mm2,mm0
  4145ea:	xchg   al,dh
  4145ec:	aaa    
  4145ed:	and    al,0xe6
  4145ef:	shl    BYTE PTR [eax],cl
  4145f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145f2:	in     al,dx
  4145f3:	push   edx
  4145f4:	jecxz  0x41459d
  4145f6:	cli    
  4145f7:	fwait
  4145f8:	lods   al,BYTE PTR ds:[esi]
  4145f9:	pusha  
  4145fa:	jg     0x4145a4
  4145fc:	push   0xe8d08fe
  414601:	mov    al,ds:0x47be1542
  414606:	push   ebx
  414607:	out    0x13,eax
  414609:	adc    al,0x81
  41460b:	(bad)  
  41460d:	popa   
  41460e:	mov    eax,ds:0xbf3be9be
  414613:	and    esp,DWORD PTR [ebx-0x6b671976]
  414619:	jae    0x414614
  41461b:	push   0x18a12962
  414620:	or     bh,bh
  414622:	dec    esi
  414623:	mov    al,ds:0x27b18227
  414628:	fimul  DWORD PTR [edi]
  41462a:	cld    
  41462b:	inc    esp
  41462c:	int    0xa6
  41462e:	scas   al,BYTE PTR es:[edi]
  41462f:	imul   esp,DWORD PTR [esi],0xffffffcf
  414632:	mov    ebp,0xf99b0daf
  414637:	nop
  414638:	test   DWORD PTR [ebp-0x752a1dfa],ebp
  41463e:	sbb    dh,dl
  414640:	shl    esi,0xdf
  414643:	add    BYTE PTR [eax+ecx*8],0xb5
  414647:	mov    WORD PTR [ecx],fs
  414649:	jmp    0x5861:0xe2d2fa04
  414650:	push   0xa
  414652:	test   eax,0xf6da5f65
  414657:	mov    BYTE PTR [edi-0x6],dh
  41465a:	dec    ebp
  41465b:	es test eax,0x264ef4bf
  414661:	sti    
  414662:	int    0xde
  414664:	push   ds
  414665:	(bad)  
  414666:	push   edi
  414667:	xchg   ebp,eax
  414668:	cld    
  414669:	mov    dl,0xdd
  41466b:	in     eax,dx
  41466c:	test   BYTE PTR [edx+0x882748b],dh
  414672:	cmp    esi,DWORD PTR [edi]
  414674:	inc    ebp
  414675:	mov    ds:0x9c83672f,eax
  41467a:	mov    eax,0x1f7b92f8
  41467f:	mov    esi,0x6087dc4
  414684:	xchg   DWORD PTR [ecx-0x307ef300],edx
  41468a:	out    dx,eax
  41468b:	mov    bl,0x55
  41468d:	test   dh,bl
  41468f:	clc    
  414690:	cmp    ebx,DWORD PTR [esi]
  414692:	popf   
  414693:	push   ebx
  414694:	dec    ecx
  414695:	bound  ebp,QWORD PTR [ebx+0x7a686092]
  41469b:	mov    ss,WORD PTR [ecx]
  41469d:	sub    DWORD PTR [esi],esp
  41469f:	mov    bl,0x17
  4146a1:	ja     0x41467f
  4146a3:	mov    ecx,0xd713e703
  4146a8:	mov    al,ds:0x44b92fcf
  4146ad:	xor    esp,eax
  4146af:	adc    eax,DWORD PTR [edx+edx*8]
  4146b2:	add    dl,dh
  4146b4:	mov    cl,BYTE PTR [esp+edi*1+0x37]
  4146b8:	add    eax,0xe97996e4
  4146bd:	ds pop eax
  4146bf:	mov    ecx,0x8bb10002
  4146c4:	outs   dx,BYTE PTR ds:[esi]
  4146c5:	outs   dx,BYTE PTR ds:[esi]
  4146c6:	jo     0x4146c3
  4146c8:	(bad)  
  4146c9:	aam    0x6d
  4146cb:	xchg   ebp,eax
  4146cc:	xor    esi,DWORD PTR [edx]
  4146ce:	push   0xffffffb0
  4146d0:	stos   BYTE PTR es:[edi],al
  4146d1:	fwait
  4146d2:	inc    esp
  4146d3:	ss or  eax,eax
  4146d6:	jmp    0x10758fc9
  4146db:	cwde   
  4146dc:	and    DWORD PTR [edi-0x119091f5],esi
  4146e2:	mov    edx,DWORD PTR [ebx]
  4146e4:	jne    0x41475c
  4146e6:	inc    esi
  4146e7:	fsubr  QWORD PTR [edx-0x3f]
  4146ea:	out    0x12,al
  4146ec:	mov    esp,0x4009d592
  4146f1:	ss pop esi
  4146f3:	loopne 0x414712
  4146f5:	and    ebp,esp
  4146f7:	adc    esi,ebp
  4146f9:	mov    ds:0xb15c68f3,eax
  4146fe:	daa    
  4146ff:	repnz add ah,BYTE PTR [eax]
  414702:	xchg   ebx,eax
  414703:	mov    al,0x45
  414705:	xchg   edx,eax
  414706:	xor    ecx,DWORD PTR [edi-0x35]
  414709:	stos   BYTE PTR es:[edi],al
  41470a:	mov    WORD PTR [edi+ebp*1+0x582cdd3e],fs
  414711:	lock retf 
  414713:	les    ebx,FWORD PTR [esi-0x6200df16]
  414719:	mov    eax,ds:0x490741c7
  41471e:	push   esp
  41471f:	xchg   esi,eax
  414720:	cli    
  414721:	(bad)
  414724:	push   ecx
  414725:	ret    
  414726:	cld    
  414727:	cmp    edi,DWORD PTR [eax-0xccbcb12]
  41472d:	adc    ch,BYTE PTR [ebp+0x53]
  414730:	jns    0x4146c5
  414732:	or     BYTE PTR [ebp-0x6c],bl
  414735:	rcl    DWORD PTR [ebx],1
  414737:	pop    esi
  414738:	mov    esi,0x54f44f5a
  41473d:	push   ecx
  41473e:	pop    ebp
  41473f:	ret    0x9440
  414742:	push   0x76dbd68b
  414747:	jmp    0xcdbd:0x212e4211
  41474e:	or     ah,al
  414750:	pusha  
  414751:	adc    al,0x60
  414753:	fisub  WORD PTR [ecx-0x44883824]
  414759:	retf   0xbac
  41475c:	and    eax,0x19b5b43e
  414761:	mov    esi,DWORD PTR [edx-0x11bb5952]
  414767:	fcomi  st,st(1)
  414769:	xchg   ebp,eax
  41476a:	shr    BYTE PTR [esi-0x4fd1793d],cl
  414770:	retf   0xbb28
  414773:	xlat   BYTE PTR ds:[ebx]
  414774:	retf   
  414775:	add    DWORD PTR [ecx-0x68eee2fd],0xdfcbbbc1
  41477f:	jecxz  0x414715
  414781:	lods   eax,DWORD PTR ds:[esi]
  414782:	fcmovb st,st(4)
  414784:	sbb    BYTE PTR [ebx-0x2f70eb6f],dl
  41478a:	mov    bl,BYTE PTR [ebp+0x6cdbefb1]
  414790:	ret    0xbb3c
  414793:	int    0xcc
  414795:	jno    0x414815
  414797:	fstp   DWORD PTR ds:[edi-0x28]
  41479b:	ret    
  41479c:	dec    ebx
  41479d:	lods   al,BYTE PTR ds:[esi]
  41479e:	aam    0x65
  4147a0:	push   ss
  4147a1:	dec    ecx
  4147a2:	js     0x4147f6
  4147a4:	(bad)  
  4147a5:	repnz xchg ebx,eax
  4147a7:	cmp    cl,bh
  4147a9:	mov    edi,0xf6d38f6e
  4147ae:	jo     0x4147a0
  4147b0:	arpl   WORD PTR [edi],bp
  4147b2:	rcl    DWORD PTR [ecx-0x11],cl
  4147b5:	and    eax,eax
  4147b7:	aam    0x68
  4147b9:	jmp    0xd2b08248
  4147be:	xor    eax,0x3bfa70bf
  4147c3:	pusha  
  4147c4:	call   0xab9:0x8e30f028
  4147cb:	retf   
  4147cc:	push   cs
  4147cd:	sub    DWORD PTR [ebx-0x37aef76c],0xb33e5004
  4147d7:	out    dx,eax
  4147d8:	mov    dh,0xaf
  4147da:	push   0xffffff82
  4147dc:	sar    DWORD PTR [ecx],cl
  4147de:	cld    
  4147df:	scas   al,BYTE PTR es:[edi]
  4147e0:	fdiv   DWORD PTR [ebp-0x47]
  4147e3:	or     al,0x10
  4147e5:	ss enter 0xea73,0x85
  4147ea:	dec    edx
  4147eb:	push   esp
  4147ed:	in     al,dx
  4147ee:	pusha  
  4147ef:	jge    0x414860
  4147f1:	push   edi
  4147f2:	xchg   esp,eax
  4147f3:	mov    al,ds:0xa749a907
  4147f8:	adc    eax,0xffa4149d
  4147fd:	loopne 0x414844
  4147ff:	pop    ebx
  414800:	test   eax,0xd3034fdf
  414805:	sub    eax,DWORD PTR [ebp-0x13633d0d]
  41480b:	data16 cld 
  41480d:	pusha  
  41480e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41480f:	xor    ebx,DWORD PTR [eax]
  414811:	mov    edi,0x302e50d5
  414816:	pop    ecx
  414817:	(bad)  
  414818:	fstp   TBYTE PTR ds:0xbd07be77
  41481e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41481f:	in     al,dx
  414820:	rol    BYTE PTR [ebx],0x9e
  414823:	xor    esp,DWORD PTR [ebp-0x6f]
  414826:	(bad)  
  414827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414828:	out    dx,eax
  414829:	jbe    0x414822
  41482b:	and    eax,0x1836dfd8
  414830:	jae    0x414873
  414832:	push   ebx
  414833:	mov    eax,ds:0xc25f2b07
  414838:	jmp    0x3dcd:0x4a4885c6
  41483f:	mov    bl,0xd9
  414841:	adc    DWORD PTR [ebp-0x78],edi
  414844:	xor    eax,0xaacff56
  414849:	cmp    BYTE PTR fs:[esi-0x6e251504],al
  414850:	mov    esi,0x9d09291e
  414855:	inc    eax
  414856:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414857:	inc    ecx
  414858:	icebp  
  414859:	add    ebp,DWORD PTR [esi+ecx*1]
  41485c:	sbb    al,al
  41485e:	xchg   cx,ax
  414860:	jle    0x41d7a9
	...
  414a36:	add    BYTE PTR [eax],al
  414a38:	jecxz  0x414a40
  414a3a:	add    DWORD PTR [edi-0x1b],esi
  414a3d:	ja     0x414a36
  414a3f:	xchg   esi,eax
  414a40:	popf   
  414a41:	mov    edx,0x984cc648
  414a46:	push   0xffffff99
  414a48:	(bad)  
  414a49:	test   eax,0x7250001
  414a4e:	add    BYTE PTR [eax],al
  414a50:	das    
  414a51:	lea    edi,[edi-0x60]
  414a54:	jo     0x414a1a
  414a56:	pop    edi
  414a57:	adc    eax,0x3480b943
  414a5c:	mov    al,ds:0xaa6095c
  414a61:	inc    esi
  414a62:	pop    eax
  414a63:	sbb    edx,ebp
  414a65:	add    DWORD PTR [ecx-0x114405b9],ebp
  414a6b:	or     al,0xdd
  414a6d:	(bad)  
  414a6e:	jb     0x414aeb
  414a70:	icebp  
  414a71:	popf   
  414a72:	iret   
  414a73:	pop    es
  414a74:	sub    DWORD PTR [esi],ebx
  414a76:	daa    
  414a77:	jnp    0x414a86
  414a79:	in     eax,dx
  414a7a:	sub    BYTE PTR [eax+edx*8],0x21
  414a7e:	jnp    0x414a52
  414a80:	iret   
  414a81:	jbe    0x99736494
  414a87:	int    0x86
  414a89:	adc    bl,BYTE PTR [ebx-0x603506c2]
  414a8f:	outs   dx,BYTE PTR ds:[esi]
  414a90:	stc    
  414a91:	push   ebx
  414a92:	(bad)  
  414a93:	icebp  
  414a94:	ins    DWORD PTR es:[edi],dx
  414a95:	jl     0x414aa5
  414a97:	jno    0x414b15
  414a99:	xchg   ecx,eax
  414a9a:	fsubr  DWORD PTR [esi-0x3b]
  414a9d:	dec    esi
  414a9e:	bound  esp,QWORD PTR [edx]
  414aa0:	dec    edi
  414aa1:	add    edi,DWORD PTR [edx]
  414aa3:	mov    al,0x1d
  414aa5:	or     al,BYTE PTR [edi+0x222952fb]
  414aab:	ss mov ch,0x49
  414aae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414aaf:	add    bl,bh
  414ab1:	outs   dx,DWORD PTR ds:[esi]
  414ab2:	sub    ebx,edx
  414ab4:	loop   0x414ae7
  414ab6:	dec    edi
  414ab7:	pop    ebp
  414ab8:	add    ah,BYTE PTR [edx]
  414aba:	test   DWORD PTR [edx],ebp
  414abc:	sub    BYTE PTR [ebp-0xf1240d],bl
  414ac2:	push   edx
  414ac3:	cdq    
  414ac4:	push   0xffffffc6
  414ac6:	mov    ebx,0xe66c8ca1
  414acb:	mov    esi,0x4493aa0f
  414ad0:	pop    esi
  414ad1:	cmp    ebp,0x3c1c3fb0
  414ad7:	mov    fs,WORD PTR [edx-0x42]
  414ada:	mov    BYTE PTR [edx+0x22f2b4d8],ah
  414ae0:	xor    esp,ebp
  414ae2:	in     eax,0x5a
  414ae4:	push   ecx
  414ae5:	xchg   esp,eax
  414ae6:	test   DWORD PTR [edx-0x24d1e418],edi
  414aec:	jns    0x414b3e
  414aee:	adc    al,0xc2
  414af0:	mov    ds:0xc743efb7,eax
  414af5:	or     dl,BYTE PTR [ebx+0x53]
  414af8:	loopne 0x414b49
  414afa:	pushf  
  414afb:	fst    QWORD PTR [ebx+0x28]
  414afe:	jecxz  0x414acc
  414b00:	jmp    0x4fcf:0x524e2420
  414b07:	rol    BYTE PTR [edx+edx*2],1
  414b0a:	dec    esp
  414b0b:	pop    ss
  414b0c:	push   ecx
  414b0d:	or     eax,ebp
  414b0f:	add    DWORD PTR [ebx-0x6bdc2828],edx
  414b15:	jne    0x414b76
  414b17:	dec    ecx
  414b18:	push   edx
  414b19:	sahf   
  414b1a:	daa    
  414b1b:	adc    BYTE PTR [edx],al
  414b1d:	xchg   esp,eax
  414b1e:	sti    
  414b1f:	inc    esi
  414b20:	or     BYTE PTR [ebx],ah
  414b22:	aaa    
  414b23:	out    dx,al
  414b24:	cdq    
  414b25:	leave  
  414b26:	int3   
  414b27:	adc    ch,al
  414b29:	xor    ebp,edi
  414b2b:	loopne 0x414b45
  414b2d:	push   ebx
  414b2e:	sub    DWORD PTR [edx-0x15d6ff98],ebp
  414b34:	in     eax,dx
  414b35:	out    dx,eax
  414b36:	jo     0x414baa
  414b38:	out    0x4c,eax
  414b3a:	inc    BYTE PTR [ebx+edi*1]
  414b3d:	lods   al,BYTE PTR ds:[esi]
  414b3e:	xchg   ebx,eax
  414b3f:	inc    ebp
  414b40:	repnz std 
  414b42:	out    dx,al
  414b43:	cwde   
  414b44:	clc    
  414b45:	push   cs
  414b46:	push   ss
  414b47:	fild   DWORD PTR [ebp+0x5ab91080]
  414b4d:	push   es
  414b4e:	mov    al,0x7f
  414b50:	pop    es
  414b51:	and    ch,BYTE PTR [edi]
  414b53:	imul   esp,DWORD PTR [ecx-0x9],0xd1116d0
  414b5a:	shr    BYTE PTR [eax],0xe4
  414b5d:	sub    al,0xf
  414b5f:	je     0x414b10
  414b61:	adc    al,0x36
  414b63:	stc    
  414b64:	inc    esp
  414b65:	pop    ebp
  414b66:	into   
  414b67:	lock xor edx,0x6f
  414b6b:	jg     0x414b6d
  414b6d:	pusha  
  414b6e:	out    0xa4,eax
  414b70:	xor    DWORD PTR [ecx-0x37],eax
  414b73:	setnp  BYTE PTR [esp+ebp*8+0x70d5db01]
  414b7b:	sub    al,BYTE PTR [ecx]
  414b7d:	jmp    0xecc7:0x3734a08d
  414b84:	or     eax,0x9227367e
  414b89:	or     esp,DWORD PTR [ebp+0x29]
  414b8c:	mov    eax,ds:0x79cd22c8
  414b91:	mov    cl,0x93
  414b93:	add    DWORD PTR [edi+esi*1],edx
  414b96:	aad    0x7c
  414b98:	mov    dh,0x8
  414b9a:	sbb    ebx,ebx
  414b9c:	xchg   ebp,eax
  414b9d:	sbb    esp,edx
  414b9f:	hlt    
  414ba0:	jmp    0x9c75:0x81b6e43f
  414ba7:	push   eax
  414ba8:	ds dec esi
  414baa:	pop    esi
  414bab:	div    BYTE PTR [eax+0x2f]
  414bae:	jmp    0xf1467ed8
  414bb3:	jne    0x414bdc
  414bb5:	pop    esi
  414bb6:	jp     0x414b70
  414bb8:	and    esi,ebx
  414bba:	(bad)  
  414bbb:	and    al,0x78
  414bbd:	aaa    
  414bbe:	xchg   ecx,eax
  414bbf:	scas   al,BYTE PTR es:[edi]
  414bc0:	pop    ebp
  414bc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bc2:	in     al,0x86
  414bc4:	rcl    BYTE PTR [ebx-0x2e],0xb8
  414bc8:	mov    eax,0xa91be191
  414bcd:	inc    eax
  414bce:	push   ecx
  414bcf:	scas   eax,DWORD PTR es:[edi]
  414bd0:	das    
  414bd1:	fnstsw WORD PTR [esi+eiz*1]
  414bd4:	ja     0x414b7e
  414bd6:	sahf   
  414bd7:	sub    dh,BYTE PTR [edx]
  414bd9:	adc    edi,DWORD PTR [ecx-0x76d55708]
  414bdf:	popa   
  414be0:	mov    esp,0x1ff37005
  414be5:	cmc    
  414be6:	nop
  414be7:	loope  0x414bb0
  414be9:	pop    ebp
  414bea:	shl    BYTE PTR es:[ebx+0x4f3612ed],cl
  414bf1:	xchg   edi,eax
  414bf2:	aam    0x91
  414bf4:	in     eax,dx
  414bf5:	adc    al,0x41
  414bf7:	sbb    ch,bl
  414bf9:	jb     0x414bcd
  414bfb:	jle    0x414bd4
  414bfd:	ins    DWORD PTR es:[edi],dx
  414bfe:	mov    BYTE PTR [eax+0x6],al
  414c01:	leave  
  414c02:	or     DWORD PTR [ecx-0x52b12dcd],ebx
  414c08:	ja     0x414bc5
  414c0a:	cmc    
  414c0b:	mul    BYTE PTR [edi-0x6ea25976]
  414c11:	xchg   ebp,ecx
  414c13:	rcr    DWORD PTR [eax-0x28],cl
  414c16:	cmp    DWORD PTR [esi+ebx*1],edi
  414c19:	xchg   esp,eax
  414c1a:	mov    cl,0xdd
  414c1c:	fbstp  TBYTE PTR [edx]
  414c1e:	dec    ecx
  414c1f:	pop    ss
  414c20:	dec    ebx
  414c21:	cmc    
  414c22:	mov    eax,ds:0x47fec467
  414c27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c28:	test   eax,0xc9bb7db1
  414c2d:	loope  0x414bef
  414c2f:	test   al,0xd3
  414c31:	loope  0x414ca0
  414c33:	(bad)
  414c36:	or     esi,DWORD PTR [edi-0x56]
  414c39:	inc    ecx
  414c3a:	jne    0x414c8c
  414c3c:	push   edi
  414c3d:	push   ebx
  414c3e:	fcomp  QWORD PTR [edx-0x414ac36d]
  414c44:	sar    BYTE PTR [esi-0x26],1
  414c47:	es sbb al,0x19
  414c4a:	int3   
  414c4b:	cs (bad) 
  414c4d:	clc    
  414c4e:	push   edx
  414c4f:	push   ebx
  414c50:	in     eax,0xd2
  414c52:	sbb    dl,BYTE PTR [ecx+0x3bab509c]
  414c58:	repnz ds push ds
  414c5b:	pop    edi
  414c5c:	mov    ah,bh
  414c5e:	lock xchg ecx,eax
  414c60:	mov    gs,WORD PTR [edi]
  414c62:	cmp    eax,0x6104c312
  414c67:	(bad)  
  414c68:	mov    esi,0x53fe28bf
  414c6d:	or     dh,BYTE PTR [esi]
  414c6f:	xchg   BYTE PTR [ecx],ah
  414c71:	and    BYTE PTR [ebx+edi*4+0x68],0x38
  414c76:	push   eax
  414c77:	out    dx,al
  414c78:	sbb    DWORD PTR [edx+edi*8+0x3f],ebp
  414c7c:	mov    eax,0xb91efb67
  414c81:	cmp    bl,BYTE PTR [edi]
  414c83:	out    dx,al
  414c84:	lock ret 0x6b61
  414c88:	xchg   ebp,eax
  414c89:	ja     0x414c15
  414c8b:	into   
  414c8c:	repnz xchg edx,eax
  414c8e:	addr16 xchg esp,eax
  414c90:	dec    eax
  414c91:	jecxz  0x414c1a
  414c93:	fistp  DWORD PTR [esp+ebx*2]
  414c96:	adc    eax,0xa1ddb0db
  414c9b:	lahf   
  414c9c:	test   al,0x32
  414c9e:	cli    
  414c9f:	rol    DWORD PTR [esi+0x35c7ebfa],0xa9
  414ca6:	mov    bh,0xe3
  414ca8:	add    eax,0x84877d4e
  414cad:	jmp    0x6342:0xe00fc040
  414cb4:	scas   al,BYTE PTR es:[edi]
  414cb5:	(bad)  
  414cb6:	pop    edi
  414cb7:	inc    esp
  414cb8:	or     BYTE PTR [edi],bh
  414cba:	xor    dl,bl
  414cbc:	(bad)  
  414cbd:	aaa    
  414cbe:	fcom   DWORD PTR [ebp-0x7e]
  414cc1:	rcr    BYTE PTR [edi+0x2d],0x74
  414cc5:	jecxz  0x414d1b
  414cc7:	mov    ebp,DWORD PTR [esi]
  414cc9:	fsub   QWORD PTR [esi-0x67d4ed87]
  414ccf:	xlat   BYTE PTR ds:[ebx]
  414cd0:	stc    
  414cd1:	loop   0x414c7b
  414cd3:	push   ds
  414cd4:	lock adc cl,dl
  414cd7:	shl    eax,1
  414cd9:	inc    eax
  414cda:	leave  
  414cdb:	(bad)  
  414cdc:	sti    
  414cdd:	fiadd  DWORD PTR [edx]
  414cdf:	pop    esi
  414ce0:	adc    bh,ch
  414ce2:	ds push ebp
  414ce4:	push   edi
  414ce5:	stos   BYTE PTR es:[edi],al
  414ce6:	shl    esi,cl
  414ce8:	jns    0x414cc7
  414cea:	je     0x414cc4
  414cec:	cmp    ebp,DWORD PTR [edx+esi*8+0x10]
  414cf0:	mov    esp,0xe305d721
  414cf5:	mov    ch,0x5a
  414cf7:	inc    edi
  414cf8:	jmp    0x414d64
  414cfa:	adc    bh,BYTE PTR [edi-0x2b]
  414cfd:	xor    eax,0x6f849628
  414d02:	(bad)  
  414d03:	jb     0x414d45
  414d05:	jge    0x414cda
  414d07:	in     al,dx
  414d08:	jecxz  0x414d59
  414d0a:	popa   
  414d0b:	mov    dl,0x8
  414d0d:	jecxz  0x414cc1
  414d0f:	adc    BYTE PTR [edx-0x5fa67e0],ah
  414d15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d16:	or     bh,BYTE PTR [esi]
  414d18:	push   ss
  414d19:	xor    ah,BYTE PTR [edx-0x4500f8b5]
  414d1f:	iret   
  414d20:	push   ebp
  414d21:	adc    dl,BYTE PTR es:[edx+0x7927bd6]
  414d28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d29:	fadd   QWORD PTR ss:[edi-0x2c9bfc98]
  414d30:	mov    edx,0xe5869413
  414d35:	jbe    0x414d6b
  414d37:	aas    
  414d38:	ds retf 
  414d3a:	int3   
  414d3b:	clc    
  414d3c:	fwait
  414d3d:	add    eax,0xd1996fd1
  414d42:	ins    BYTE PTR es:[edi],dx
  414d43:	test   BYTE PTR [ecx-0x3f],0xc7
  414d47:	mov    edi,DWORD PTR [ebx]
  414d49:	shl    DWORD PTR [eax+0x48],1
  414d4c:	cmp    DWORD PTR [edi-0x7a],esp
  414d4f:	mov    ah,0x3d
  414d51:	dec    esi
  414d52:	mov    ds:0x56ed973,eax
  414d57:	mov    edi,0x36e6a0f4
  414d5c:	out    0x36,eax
  414d5e:	mov    dh,0x8
  414d60:	mov    eax,ds:0xc2d34ba6
  414d65:	sbb    eax,0x894516b6
  414d6a:	add    ch,BYTE PTR [ebx-0x27d88de5]
  414d70:	dec    edi
  414d71:	retf   
  414d72:	xor    al,BYTE PTR [edi+eiz*1]
  414d75:	(bad)  
  414d76:	jp     0x414db9
  414d78:	jno    0x414dc2
  414d7a:	popa   
  414d7b:	jp     0x414d9a
  414d7d:	test   DWORD PTR [ecx],edx
  414d7f:	mov    bl,0xdb
  414d81:	adc    eax,0xa33e2942
  414d86:	mov    es,WORD PTR [edx]
  414d88:	icebp  
  414d89:	je     0x414d85
  414d8b:	fimul  WORD PTR [ecx-0x7a]
  414d8e:	pop    ss
  414d8f:	mov    al,ds:0xe1c83e07
  414d94:	arpl   WORD PTR [ebx+0x10],bx
  414d97:	add    DWORD PTR [edi],ecx
  414d99:	enter  0x2973,0xf5
  414d9d:	fadd   QWORD PTR [edx]
  414d9f:	push   ebx
  414da0:	fwait
  414da1:	xchg   ebp,ebx
  414da3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414da4:	loopne 0x414d4f
  414da6:	jne    0x414dbe
  414da8:	sub    al,0x3
  414daa:	fadd   QWORD PTR [edx-0x70a20941]
  414db0:	repz push ds
  414db2:	mov    ecx,0xe3caaffe
  414db7:	mov    ebx,0xdcdf089a
  414dbc:	outs   dx,DWORD PTR ds:[esi]
  414dbd:	(bad)  
  414dbf:	or     eax,0x4944a111
  414dc4:	mov    esp,0x5220bc16
  414dc9:	mov    esp,0x74542782
  414dce:	in     al,0xd8
  414dd0:	jge    0x414e10
  414dd2:	jns    0x414e00
  414dd4:	xor    BYTE PTR [esi],bl
  414dd6:	mov    ebx,0xc07b238a
  414ddb:	mov    al,ds:0xc49124d6
  414de0:	xchg   al,dh
  414de2:	popf   
  414de3:	sub    dh,dh
  414de5:	pop    ebp
  414de6:	or     al,0x27
  414de8:	repz loope 0x414d9e
  414deb:	pop    es
  414dec:	fld    DWORD PTR [ebp+0x36]
  414def:	in     eax,dx
  414df0:	mov    esp,0xbedb6ed1
  414df5:	cli    
  414df6:	sub    ebp,edi
  414df8:	(bad)  
  414df9:	cmp    BYTE PTR [esi+edi*1-0x47],ch
  414dfd:	shl    DWORD PTR [edi+0x39d1da0e],0xb1
  414e04:	adc    al,0x2d
  414e06:	xchg   ebx,eax
  414e07:	cli    
  414e08:	ret    
  414e09:	pop    ebp
  414e0a:	push   cs
  414e0b:	ins    DWORD PTR es:[edi],dx
  414e0c:	iret   
  414e0d:	cmc    
  414e0e:	xchg   edi,eax
  414e0f:	xor    al,0x1c
  414e11:	jl     0x414e62
  414e13:	or     DWORD PTR [ebx+0x657114f0],ebx
  414e19:	js     0x414db9
  414e1b:	jg     0x414dad
  414e1d:	push   edx
  414e1e:	push   ebp
  414e1f:	and    BYTE PTR [edi+0x3901c7ed],dh
  414e25:	inc    edi
  414e26:	shl    DWORD PTR [edx+0x1f591b1f],cl
  414e2c:	xor    eax,0x691be6d
  414e31:	add    BYTE PTR [ebx],dh
  414e33:	sbb    edx,DWORD PTR [edx]
  414e35:	(bad)  
  414e36:	xchg   edx,eax
  414e37:	mov    eax,0xa98cec06
  414e3c:	popa   
  414e3d:	rcr    BYTE PTR [edi+0x2cd8de1],1
  414e43:	jo     0x414e60
  414e45:	stos   DWORD PTR es:[edi],eax
  414e46:	add    al,ah
  414e48:	cmp    al,0xfe
  414e4a:	cwde   
  414e4b:	dec    ebx
  414e4c:	and    al,0xb8
  414e4e:	jo     0x414df1
  414e50:	cs inc edi
  414e52:	cmp    al,0x3d
  414e54:	dec    edx
  414e55:	imul   ebx,ebp,0x507ffb68
  414e5b:	nop
  414e5c:	xchg   edi,eax
  414e5d:	cmp    esp,DWORD PTR [edx-0x586fe067]
  414e63:	add    DWORD PTR [ebx-0x1],eax
  414e66:	mov    WORD PTR [ebp-0x374a9ba],ds
  414e6c:	cdq    
  414e6d:	pushf  
  414e6e:	(bad)  
  414e6f:	push   DWORD PTR [edx+0x1ea50ddc]
  414e75:	gs add eax,0x10fd4111
  414e7b:	mov    al,ds:0x51785bdd
  414e80:	xor    eax,0xcdad717c
  414e85:	loopne 0x414efa
  414e87:	jge    0x414e5e
  414e89:	mov    bl,cl
  414e8b:	mov    bl,0xf5
  414e8d:	in     al,dx
  414e8e:	div    BYTE PTR [edi-0x74]
  414e91:	in     eax,0x1a
  414e93:	scas   eax,DWORD PTR es:[edi]
  414e94:	loopne 0x414e48
  414e96:	test   edx,esi
  414e98:	int    0xb7
  414e9a:	mov    al,ds:0x83b648b8
  414e9f:	sub    BYTE PTR [edi+0x7f],ah
  414ea2:	sbb    al,0xef
  414ea4:	xchg   ebp,eax
  414ea5:	stos   DWORD PTR es:[edi],eax
  414ea6:	out    0x43,eax
  414ea8:	retf   0x728a
  414eab:	dec    eax
  414eac:	dec    edi
  414ead:	and    eax,0xd591c35f
  414eb2:	push   edi
  414eb3:	and    al,0x50
  414eb5:	or     eax,0x8f08745c
  414eba:	fcompp 
  414ebc:	enter  0x5bcf,0x69
  414ec0:	xor    BYTE PTR [ebp+0x2e4c88c0],al
  414ec6:	stos   BYTE PTR es:[edi],al
  414ec7:	xchg   ebp,eax
  414ec8:	dec    edi
  414ec9:	popa   
  414eca:	loope  0x414f26
  414ecc:	js     0x414f1d
  414ece:	and    bl,BYTE PTR [edx+0xb]
  414ed1:	popf   
  414ed2:	xchg   esp,eax
  414ed3:	stc    
  414ed4:	mov    al,ds:0x69d046cf
  414ed9:	mov    DWORD PTR [eax],esi
  414edb:	push   0x9993e4ca
  414ee0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ee1:	jecxz  0x414e99
  414ee3:	mov    dl,ah
  414ee5:	std    
  414ee6:	sar    DWORD PTR [ebp-0x25],1
  414ee9:	cli    
  414eea:	aaa    
  414eeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eec:	sbb    eax,0xcdbb86fd
  414ef2:	imul   edi,DWORD PTR [ebx+edx*1-0x3da6a6e8],0xffffffd7
  414efa:	jp     0x414ef7
  414efc:	and    ebx,edx
  414efe:	loope  0x414ebe
  414f00:	fild   DWORD PTR ds:[ebp+0x77ac5295]
  414f07:	in     eax,0xec
  414f09:	std    
  414f0a:	jecxz  0x414f14
  414f0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f0d:	call   0xb4cd:0xd5220e90
  414f14:	retw   
  414f16:	pop    edx
  414f17:	pop    edx
  414f18:	sbb    DWORD PTR [eax+0x554e9d2a],0xf0d6f1b5
  414f22:	mov    edi,0x1d6b5422
  414f27:	aaa    
  414f28:	mov    ds:0xf9a6a0e7,al
  414f2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f2e:	inc    edi
  414f2f:	mov    ch,0xef
  414f31:	aad    0x27
  414f33:	in     al,0x2f
  414f35:	pusha  
  414f36:	push   eax
  414f37:	fchs   
  414f39:	loop   0x414f75
  414f3b:	xor    al,0xdb
  414f3d:	xor    BYTE PTR [ecx+0x2f],dh
  414f40:	loope  0x414f0c
  414f42:	stc    
  414f43:	push   0xb9a615a4
  414f48:	(bad)  
  414f49:	call   0x1e4e:0xeeeffe56
  414f50:	or     eax,0xd8cff9ec
  414f55:	sbb    cl,BYTE PTR [esi-0x31b31b49]
  414f5b:	stc    
  414f5c:	sub    bl,0x7e
  414f5f:	stc    
  414f60:	push   eax
  414f61:	jle    0x414fa9
  414f63:	cld    
  414f64:	stos   DWORD PTR es:[edi],eax
  414f65:	bound  ebx,QWORD PTR [ebx-0x2b]
  414f68:	push   eax
  414f69:	retf   0x6d40
  414f6c:	nop
  414f6d:	and    al,BYTE PTR [edx+ebp*2+0x7dab33cb]
  414f74:	add    DWORD PTR [esi+0x9b41964],ecx
  414f7a:	cmp    al,0x8d
  414f7c:	imul   BYTE PTR [edi+eax*4]
  414f7f:	imul   BYTE PTR [ebx-0x39050ec6]
  414f85:	pop    edi
  414f86:	dec    ebp
  414f87:	or     al,BYTE PTR [eax+eax*4+0x66701d91]
  414f8e:	inc    ebp
  414f8f:	into   
  414f90:	mov    eax,0x140c8df
  414f95:	cmc    
  414f96:	xor    eax,0xc9d6872c
  414f9b:	sbb    al,ch
  414f9d:	sub    al,0xbc
  414f9f:	push   ecx
  414fa0:	in     eax,dx
  414fa1:	xchg   ebx,eax
  414fa2:	or     eax,0x344cb094
  414fa7:	jbe    0x414f83
  414fa9:	inc    ebx
  414faa:	sub    al,0x6b
  414fac:	pushf  
  414fad:	add    al,0x1a
  414faf:	jmp    0x2686ec7
  414fb4:	cmc    
  414fb5:	or     edi,DWORD PTR [ebp-0x162acd21]
  414fbb:	push   eax
  414fbc:	pop    eax
  414fbd:	jne    0x414fd4
  414fbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fc0:	push   ds
  414fc1:	mov    edi,0xd67d7234
  414fc6:	xlat   BYTE PTR ds:[ebx]
  414fc7:	add    eax,0xf9bd9c2b
  414fcc:	cld    
  414fcd:	out    dx,eax
  414fce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fcf:	aaa    
  414fd0:	pop    edx
  414fd1:	pop    esi
  414fd2:	(bad)  
  414fd3:	sub    ebp,esi
  414fd5:	mov    edi,DWORD PTR [edx+0x65]
  414fd8:	outs   dx,BYTE PTR ds:[esi]
  414fd9:	adc    eax,0x66e3daa5
  414fde:	jmp    0xaab3:0xacca0912
  414fe5:	pop    ecx
  414fe6:	and    ch,0xdd
  414fe9:	mov    ch,0x0
  414feb:	mov    cl,0xe6
  414fed:	push   esp
  414fee:	push   edi
  414fef:	push   ds
  414ff0:	ins    BYTE PTR es:[edi],dx
  414ff1:	fiadd  WORD PTR [ebp+ebx*1-0x68f4d3cf]
  414ff8:	cdq    
  414ff9:	xor    esi,esp
  414ffb:	xchg   esi,eax
  414ffc:	sub    eax,0x2233e36c
  415001:	mov    eax,0xac1bb9a5
  415006:	daa    
  415007:	xchg   ecx,eax
  415008:	imul   edi,DWORD PTR [ebx],0x9d601ec
  41500e:	sbb    edi,edx
  415010:	jecxz  0x415048
  415012:	shr    BYTE PTR [edx-0x3f],0xea
  415016:	push   0xffffffcf
  415018:	jne    0x41506c
  41501a:	iret   
  41501b:	dec    esi
  41501c:	ins    BYTE PTR es:[edi],dx
  41501d:	aaa    
  41501e:	inc    DWORD PTR [edi+edi*2+0x29]
  415022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415023:	add    dl,BYTE PTR [ebp-0x60]
  415026:	jns    0x415086
  415028:	mov    eax,0xc77a3b28
  41502d:	pop    ss
  41502e:	dec    cl
  415030:	push   edi
  415031:	sub    esi,ecx
  415033:	xchg   BYTE PTR ds:0x4cea7948,ah
  415039:	cmp    BYTE PTR [ecx+eiz*2-0x29],dh
  41503d:	sub    eax,0xc9acd883
  415042:	xor    ebx,DWORD PTR [ecx-0x5c]
  415045:	cmp    al,0xb4
  415047:	shl    BYTE PTR [ecx],0x5a
  41504a:	or     BYTE PTR [eax+ebx*1-0x16e2f7c1],0x4e
  415052:	retf   0x6ec6
  415055:	loop   0x41504e
  415057:	call   0xa2e4:0x22e12f67
  41505e:	jl     0x415048
  415060:	gs mov bl,0x97
  415063:	fs mov eax,0x2fd2f40f
  415069:	cs fs jl 0x415038
  41506d:	stc    
  41506e:	adc    esp,esi
  415070:	pop    ecx
  415071:	push   ss
  415072:	ja     0x41501e
  415074:	mov    edi,0x4cc42cfb
  415079:	mov    edx,0xcd778fa8
  41507e:	arpl   WORD PTR [esi+esi*1+0x72adf5c8],bx
  415085:	lock test al,0x7f
  415088:	faddp  st(3),st
  41508a:	aam    0x4c
  41508c:	xchg   BYTE PTR [edx+ebp*1],ch
  41508f:	(bad)  
  415090:	pushw  ss
  415092:	lahf   
  415093:	cmp    BYTE PTR [ebx],0xed
  415096:	lahf   
  415097:	mov    bl,0x26
  415099:	mov    ebp,0xcfe6f33a
  41509e:	stos   BYTE PTR es:[edi],al
  41509f:	retf   
  4150a0:	bound  edi,QWORD PTR [edx+0x4ff181c6]
  4150a6:	inc    edx
  4150a7:	and    eax,0x2e1fac3
  4150ac:	xor    BYTE PTR [ebx-0x15],0x72
  4150b0:	mov    ah,ch
  4150b2:	adc    ah,bl
  4150b4:	shr    BYTE PTR [ecx-0x64],1
  4150b7:	and    eax,0xcecd7dd9
  4150bc:	add    al,0x5f
  4150be:	cmp    eax,0x6032ef55
  4150c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150c4:	jo     0x41508a
  4150c6:	ins    DWORD PTR es:[edi],dx
  4150c7:	imul   eax,DWORD PTR [ebx+0x56],0x4659d168
  4150ce:	fneni(8087 only) 
  4150d0:	sbb    eax,0x8e278a95
  4150d5:	or     DWORD PTR ds:0x33215c7,edi
  4150db:	ds sar ch,1
  4150de:	pop    ss
  4150df:	in     eax,dx
  4150e0:	rol    BYTE PTR [edx+0x9d2b1cc],cl
  4150e6:	pop    ebx
  4150e7:	mov    ds:0xabbb7dc5,al
  4150ec:	xchg   ecx,eax
  4150ed:	and    eax,0x8a50c573
  4150f2:	into   
  4150f3:	(bad)  
  4150f4:	sbb    eax,0xf16fe791
  4150f9:	xor    al,0xb2
  4150fb:	sti    
  4150fc:	(bad)  [esi]
  4150fe:	int    0x8
  415100:	stc    
  415101:	mov    al,0xae
  415103:	mov    al,ds:0xc0c18185
  415108:	cmp    cl,bl
  41510a:	cdq    
  41510b:	mov    ebp,0x7de38535
  415110:	mov    esi,0xf6f6fad4
  415115:	inc    edx
  415116:	fsub   DWORD PTR [edi+0x75466bf9]
  41511c:	sbb    BYTE PTR [edx+0x3b3580bc],ah
  415122:	xchg   esp,eax
  415123:	jo     0x415139
  415125:	imul   ecx
  415127:	sbb    cl,ah
  415129:	packssdw mm7,QWORD PTR [ebx+ebx*2-0x6de8c56b]
  415131:	xchg   ebp,eax
  415132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415133:	es adc edi,ecx
  415136:	mov    al,0xf7
  415138:	test   bh,ch
  41513a:	cld    
  41513b:	aas    
  41513c:	fwait
  41513d:	div    cl
  41513f:	cmp    ecx,0xfffffff0
  415142:	daa    
  415143:	sub    ecx,edi
  415145:	nop
  415146:	xchg   ah,bh
  415148:	test   al,0xde
  41514a:	imul   ebp,DWORD PTR [edi],0xb211f24c
  415150:	jb     0x4150fe
  415152:	sub    BYTE PTR [edx-0x8266c4c],bl
  415158:	xor    BYTE PTR ds:0xb8551e80,0xea
  41515f:	(bad)  
  415160:	or     al,0x43
  415162:	(bad)  
  415163:	shr    DWORD PTR [eax-0x5e90369a],cl
  415169:	add    ch,al
  41516b:	add    edi,esp
  41516d:	fcomip st,st(1)
  41516f:	rcl    esi,1
  415171:	aaa    
  415172:	push   esi
  415173:	push   edx
  415174:	mov    WORD PTR [eax],es
	...
  41534a:	add    BYTE PTR [eax],al
  41534c:	add    BYTE PTR [esi-0x9b72fa0],al
  415352:	clc    
  415353:	sahf   
  415354:	out    dx,al
  415355:	or     eax,0x4ab0d536
  41535a:	loope  0x41537c
  41535c:	aam    0x79
  41535e:	imul   eax,DWORD PTR [ecx],0x72500
  415364:	add    dl,bl
  415366:	in     al,dx
  415367:	jae    0x415341
  415369:	rol    DWORD PTR [edx-0x2c],cl
  41536c:	lds    esp,FWORD PTR [eax-0xf06bf75]
  415372:	fs push 0x9148f93e
  415378:	sbb    BYTE PTR [esi+0x2e],bh
  41537b:	jae    0x41536f
  41537d:	add    al,0xa5
  41537f:	loopne 0x4153e8
  415381:	pop    edx
  415382:	mov    ss,WORD PTR [ebx+ebp*1+0x3f]
  415386:	fist   WORD PTR [edi+0x6f]
  415389:	jp     0x41531f
  41538b:	ds pop ss
  41538d:	pop    es
  41538e:	jle    0x41540e
  415390:	outs   dx,DWORD PTR ds:[esi]
  415391:	add    BYTE PTR [ecx+0x5805dc0],ch
  415397:	(bad)  
  415399:	outs   dx,BYTE PTR ds:[esi]
  41539a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41539b:	or     ebx,DWORD PTR [edi]
  41539d:	aas    
  41539e:	adc    dl,ah
  4153a0:	add    edi,edx
  4153a2:	cmp    eax,0x97574ad6
  4153a7:	popf   
  4153a8:	ja     0x415406
  4153aa:	mov    cl,0x77
  4153ac:	adc    al,0x23
  4153ae:	or     eax,ecx
  4153b0:	pop    ecx
  4153b1:	pop    ss
  4153b2:	inc    edi
  4153b3:	cmp    eax,0x902531ea
  4153b8:	aam    0x49
  4153ba:	sbb    al,0x3
  4153bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153bd:	push   esi
  4153be:	call   0x5169:0xe5489f6f
  4153c5:	aaa    
  4153c6:	repz pop edi
  4153c8:	test   ah,ch
  4153ca:	lods   al,BYTE PTR ds:[esi]
  4153cb:	ror    ebp,cl
  4153cd:	aaa    
  4153ce:	adc    al,0x1b
  4153d0:	or     DWORD PTR [ebp+ebp*8+0x10],ebx
  4153d4:	cli    
  4153d5:	add    ebp,esi
  4153d7:	cmp    ebx,DWORD PTR [edx]
  4153d9:	lock adc dh,BYTE PTR gs:0x54e04f43
  4153e1:	cmp    esp,DWORD PTR [edx+edx*2]
  4153e4:	dec    esi
  4153e5:	mov    eax,ds:0xd2b7a7ad
  4153ea:	(bad)  
  4153eb:	pop    esi
  4153ec:	adc    eax,0xbe3cb4f5
  4153f1:	xchg   dl,bh
  4153f3:	sub    eax,0xb6754b03
  4153f8:	mov    edi,0x10338e75
  4153fd:	dec    ebx
  4153fe:	inc    eax
  4153ff:	pop    es
  415400:	sbb    BYTE PTR [eax+ebx*2+0x19b8dd79],ch
  415407:	(bad)  
  415408:	fldcw  WORD PTR [esi]
  41540a:	retf   
  41540b:	mov    BYTE PTR [edx-0x3],al
  41540e:	mov    WORD PTR [ecx-0x22],es
  415411:	fiadd  WORD PTR [edx-0x3db8ecc0]
  415417:	popa   
  415418:	mov    edi,0x5c19e6b
  41541d:	add    BYTE PTR [eax+0xf7031e8],0x72
  415424:	jmp    0x3f01:0x12601651
  41542b:	jl     0x4154a7
  41542d:	mov    edx,0x8b9ffb84
  415432:	dec    eax
  415433:	rcl    esp,0xf9
  415436:	mov    cl,0x7d
  415438:	test   BYTE PTR ss:[ebx+0x6],0xc0
  41543d:	xchg   edx,eax
  41543e:	test   al,0x69
  415440:	sar    BYTE PTR [eax+0x37],0x32
  415444:	pop    ebp
  415445:	loopne 0x4153d3
  415447:	mov    esp,0xfe512bef
  41544c:	xor    al,0xa0
  41544e:	mov    ecx,0xd9477e69
  415453:	dec    ecx
  415454:	outs   dx,BYTE PTR ds:[esi]
  415455:	and    ch,bl
  415457:	add    dl,BYTE PTR [edi]
  415459:	ficomp DWORD PTR [esi+0x54]
  41545c:	leave  
  41545d:	sbb    al,0x2c
  41545f:	adc    eax,0x762845b3
  415464:	pop    es
  415465:	sub    dh,dl
  415467:	mov    edi,0xbe3b7fe0
  41546c:	dec    esp
  41546d:	adc    eax,0x9d8b7b43
  415472:	ss iret 
  415474:	mov    ds:0x99487ca0,eax
  415479:	cmp    edx,DWORD PTR [edi]
  41547b:	push   ebp
  41547c:	sbb    DWORD PTR [esi-0x4a78ba83],esi
  415482:	or     DWORD PTR [ebx-0x21f29bbb],edx
  415488:	and    ebx,ecx
  41548a:	fcom   QWORD PTR [ecx+0x18c3a6e8]
  415490:	adc    dl,al
  415492:	les    ecx,FWORD PTR [eax-0x54]
  415495:	push   esi
  415496:	dec    esp
  415497:	ss (bad) 
  415499:	call   0x93cce8ae
  41549e:	lds    ecx,FWORD PTR [edi-0x68]
  4154a1:	aas    
  4154a2:	inc    ebx
  4154a3:	mov    ebx,0xd7c58826
  4154a8:	fisttp WORD PTR [ebx-0x5d3ac589]
  4154ae:	mov    esi,0xec416012
  4154b3:	cmp    al,0xb0
  4154b5:	iret   
  4154b6:	ins    DWORD PTR es:[edi],dx
  4154b7:	sub    al,bh
  4154b9:	rcr    ah,0x62
  4154bc:	xchg   edx,eax
  4154bd:	loopne 0x415514
  4154bf:	lea    esp,[esi-0x3be1ff16]
  4154c5:	rol    BYTE PTR [eax],0x99
  4154c8:	sbb    BYTE PTR [esi+0x39acefa5],al
  4154ce:	xchg   ebx,eax
  4154cf:	adc    DWORD PTR [esi+ebp*2-0x28],edi
  4154d3:	mov    cl,bh
  4154d5:	(bad)  
  4154d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154d7:	inc    esi
  4154d8:	js     0x415519
  4154da:	int    0x8c
  4154dc:	je     0x4154fa
  4154de:	cmp    ecx,ecx
  4154e0:	mov    ebp,0x80317151
  4154e5:	int3   
  4154e6:	retf   
  4154e7:	xlat   BYTE PTR ds:[ebx]
  4154e8:	sahf   
  4154e9:	push   0xcd9e2b6c
  4154ee:	(bad)  
  4154ef:	js     0x4154f8
  4154f1:	jge    0x41552e
  4154f3:	mov    ds:0xe70b6be0,eax
  4154f8:	aas    
  4154f9:	sbb    DWORD PTR [ebp-0x76],0x7f3b84c2
  415500:	push   eax
  415501:	and    esp,DWORD PTR [edx-0x10]
  415504:	xchg   ch,ch
  415506:	sbb    al,0x3b
  415508:	shr    DWORD PTR [ecx-0x642fbea2],0x77
  41550f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415510:	and    BYTE PTR [esp+edx*4-0x7],al
  415514:	jb     0x415567
  415516:	fld    QWORD PTR [eax]
  415518:	mov    ebx,0x282821b2
  41551d:	or     DWORD PTR [esi],0x62
  415520:	test   eax,0x66f7fd3f
  415525:	sbb    BYTE PTR [edx+0x36],bh
  415528:	sbb    DWORD PTR [ecx+0x77],0xfffffff3
  41552c:	pcmpgtb mm4,QWORD PTR [esi+0x43]
  415530:	pop    edi
  415531:	ins    BYTE PTR es:[edi],dx
  415532:	aam    0xa6
  415534:	inc    eax
  415535:	imul   ebx,DWORD PTR ds:0xd1f28755,0x6226d63f
  41553f:	dec    edi
  415540:	jl     0x415562
  415542:	cmp    BYTE PTR [ecx-0x27],0xe8
  415546:	push   ecx
  415547:	fisubr WORD PTR [ecx+0x50]
  41554a:	scas   eax,DWORD PTR es:[edi]
  41554b:	mov    ah,0x39
  41554d:	ins    DWORD PTR es:[edi],dx
  41554e:	adc    BYTE PTR [eax],cl
  415550:	lods   al,BYTE PTR ds:[esi]
  415551:	cmp    ebx,DWORD PTR [esi+0x69c23880]
  415557:	mov    edi,0x41c21ef9
  41555c:	hlt    
  41555d:	cmp    dl,BYTE PTR [eax+0x37ee92a]
  415563:	inc    edi
  415564:	les    esi,FWORD PTR [edx-0x6e47fd38]
  41556a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41556b:	mov    BYTE PTR [eax],cl
  41556d:	xor    edi,ebx
  41556f:	jbe    0x4155c3
  415571:	imul   eax
  415573:	add    edx,DWORD PTR [edx]
  415575:	mov    ds:0xbadc2563,al
  41557a:	xstore-rng (bad)
  41557b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41557c:	ret    0x444f
  41557f:	jmp    0x415509
  415581:	dec    esi
  415582:	and    al,0x89
  415584:	or     eax,0xd232fed
  415589:	mov    ebp,0xf84c04cd
  41558e:	clc    
  41558f:	inc    ecx
  415590:	jg     0x4155bc
  415592:	pop    eax
  415593:	jg     0x415561
  415595:	sub    al,0xde
  415598:	lods   al,BYTE PTR ds:[esi]
  415599:	dec    edx
  41559a:	push   0x1233d741
  41559f:	jecxz  0x4155cf
  4155a1:	ror    BYTE PTR [edi+0x7181fb58],1
  4155a7:	jnp    0x415586
  4155a9:	mov    DWORD PTR [ecx+ecx*2],edx
  4155ac:	repz cld 
  4155ae:	or     dl,BYTE PTR [eax+0x5ec1d181]
  4155b4:	push   ds
  4155b5:	and    ebp,DWORD PTR [eax]
  4155b7:	inc    esp
  4155b8:	arpl   WORD PTR [esi+0x1e],bx
  4155bb:	lea    ebp,[ebx]
  4155bd:	jbe    0x4155c8
  4155bf:	icebp  
  4155c0:	(bad)  
  4155c1:	jb     0x4155fc
  4155c3:	pop    ds
  4155c4:	ins    BYTE PTR es:[edi],dx
  4155c5:	lods   al,BYTE PTR ds:[esi]
  4155c6:	xor    dh,BYTE PTR [esi-0x203a7a5]
  4155cc:	test   BYTE PTR [edi-0xf],al
  4155cf:	add    esp,esp
  4155d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155d3:	es iret 
  4155d5:	adc    ecx,edx
  4155d7:	rol    DWORD PTR [ebx-0x19c6a7af],1
  4155dd:	and    al,0xa5
  4155df:	mov    al,ds:0x678476d4
  4155e4:	mov    ah,BYTE PTR [edx+0x59]
  4155e7:	jbe    0x415587
  4155e9:	xchg   esp,eax
  4155ea:	sbb    DWORD PTR [edx],eax
  4155ec:	ret    0xbbe6
  4155ef:	xchg   ebp,eax
  4155f0:	mov    DWORD PTR [esi+ebx*8-0x23],ebx
  4155f4:	pop    DWORD PTR [esi]
  4155f6:	out    0x5d,al
  4155f8:	push   ebp
  4155f9:	and    edi,DWORD PTR [edi+0x7cf94a8f]
  4155ff:	add    eax,0x947af006
  415604:	add    bl,BYTE PTR [ebp+0x45]
  415607:	inc    ebp
  415608:	mov    esi,0xefb6ff50
  41560d:	(bad)  
  41560e:	jo     0x415681
  415610:	mov    edx,0xb05d2a68
  415615:	mov    dh,0xc0
  415617:	and    BYTE PTR [ebp-0x2b],cl
  41561a:	sub    BYTE PTR [ebx],al
  41561c:	adc    DWORD PTR [ebx+esi*2-0x1b7c88b5],0xffffff8b
  415624:	fdivrp st(5),st
  415626:	xchg   ecx,eax
  415627:	shl    ch,0xd7
  41562a:	pop    ss
  41562b:	inc    ebx
  41562c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41562d:	(bad)  
  41562e:	push   esi
  41562f:	dec    DWORD PTR [edi]
  415631:	enter  0x8a10,0x76
  415635:	xchg   esp,eax
  415636:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415637:	bound  edx,QWORD PTR [ebp+0x6f]
  41563a:	jp     0x415632
  41563c:	clc    
  41563d:	repz inc esp
  41563f:	jne    0x415609
  415641:	dec    ebp
  415642:	rol    cl,cl
  415644:	sbb    DWORD PTR [edx+0x39e66da6],0xa478c225
  41564e:	pop    es
  41564f:	jno    0x4155e3
  415651:	das    
  415652:	clc    
  415653:	inc    ecx
  415654:	out    0x5b,al
  415656:	daa    
  415657:	jg     0x415681
  415659:	into   
  41565a:	bound  esi,QWORD PTR [edi+0xd5f45d7]
  415660:	or     ah,BYTE PTR [eax]
  415662:	(bad)  
  415663:	mov    ebx,0x27e5058c
  415668:	pop    esp
  415669:	sbb    al,0x49
  41566b:	into   
  41566c:	aad    0x97
  41566e:	aam    0x4e
  415670:	cs push eax
  415672:	test   DWORD PTR [esi+0x1e],ecx
  415675:	shl    DWORD PTR [eax-0xe783dfe],0x90
  41567c:	int3   
  41567d:	dec    ebp
  41567e:	ds push esi
  415680:	mov    ah,0x86
  415682:	rcr    bl,cl
  415684:	out    0x98,al
  415686:	or     bl,BYTE PTR [ecx+0x56]
  415689:	arpl   dx,ax
  41568b:	cmp    eax,0x43e20b09
  415690:	nop
  415691:	mov    eax,0x94cc496e
  415696:	or     DWORD PTR [edi-0x26b94959],ebp
  41569c:	mov    ecx,0x8bae8102
  4156a1:	call   0xff97:0x73c729d9
  4156a8:	push   ecx
  4156a9:	mov    ebx,0xa691ddf3
  4156ae:	mov    dh,0xf2
  4156b0:	icebp  
  4156b1:	xlat   BYTE PTR ds:[ebx]
  4156b2:	mov    eax,ds:0xe82794a4
  4156b7:	pop    es
  4156b8:	enter  0x60cf,0x6b
  4156bc:	aaa    
  4156bd:	add    esi,DWORD PTR [ebp+0x568d94b5]
  4156c3:	std    
  4156c4:	daa    
  4156c5:	inc    edi
  4156c6:	jno    0x4156e2
  4156c8:	or     DWORD PTR [ecx-0x7f],eax
  4156cb:	popa   
  4156cc:	out    0x7c,al
  4156ce:	rcl    DWORD PTR [esi-0x30],cl
  4156d1:	add    eax,0x67f8d47b
  4156d6:	arpl   WORD PTR [ecx+0x75],si
  4156d9:	mov    esp,0x1d2da10a
  4156de:	dec    esi
  4156df:	fstp   DWORD PTR [edx-0x3b]
  4156e2:	add    DWORD PTR [ebp+esi*1-0x29],0xffffff94
  4156e7:	into   
  4156e8:	test   ebx,ebp
  4156ea:	fwait
  4156eb:	cld    
  4156ec:	inc    esp
  4156ed:	and    eax,0x7073c7ce
  4156f2:	dec    eax
  4156f3:	repnz aas 
  4156f5:	pop    edi
  4156f6:	dec    ebp
  4156f7:	cdq    
  4156f8:	jecxz  0x4156a5
  4156fa:	add    eax,DWORD PTR [ebp+0x3b2cf527]
  415700:	arpl   WORD PTR [eax-0x26cbad52],sp
  415706:	mov    edi,0x8d46f591
  41570b:	(bad)  
  41570c:	shl    BYTE PTR [esi-0x3f],0x7b
  415710:	cwde   
  415711:	ret    
  415712:	enter  0x5245,0x62
  415716:	retf   
  415717:	and    al,cl
  415719:	mov    bl,0xe8
  41571b:	cmp    BYTE PTR [edi+0x5f],0x3f
  41571f:	pop    ecx
  415720:	fld    DWORD PTR [eax]
  415722:	jns    0x415796
  415724:	je     0x41570c
  415726:	imul   edi,DWORD PTR [esi-0x398590bb],0x3f
  41572d:	inc    eax
  41572e:	jmp    0x4156df
  415730:	out    dx,eax
  415731:	inc    esi
  415732:	cwde   
  415733:	mov    ds:0x1d8e7429,al
  415738:	xchg   ebx,eax
  415739:	or     eax,0x61767595
  41573e:	test   eax,0xbe56195d
  415743:	mov    eax,ds:0xc3a69ac0
  415748:	xor    ah,cl
  41574a:	mov    ecx,0xec0ef311
  41574f:	fwait
  415750:	imul   esi,DWORD PTR cs:[edx+ebx*2+0x502d78cf],0xffffffb8
  415759:	add    ah,dl
  41575b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41575c:	call   0x85374d1
  415761:	fs adc al,0xd3
  415764:	pop    esp
  415765:	dec    ebp
  415766:	shr    ebx,cl
  415768:	dec    ecx
  415769:	mov    ds:0xddd1ad42,al
  41576e:	and    BYTE PTR [ebp-0x327df320],dh
  415774:	pop    edx
  415775:	dec    esp
  415776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415777:	push   esp
  415778:	clc    
  415779:	leave  
  41577a:	fiadd  WORD PTR [edx+ecx*2]
  41577d:	pop    es
  41577e:	fiadd  DWORD PTR [ebx+0x73]
  415781:	repnz out 0x3a,eax
  415784:	xchg   edi,eax
  415785:	cmp    ch,bh
  415787:	add    al,0xc0
  415789:	inc    edx
  41578a:	lock (bad) 
  41578c:	ss pusha 
  41578e:	push   0x555d5820
  415793:	icebp  
  415794:	std    
  415795:	lods   al,BYTE PTR ds:[esi]
  415796:	rcr    dl,cl
  415798:	jle    0x415757
  41579a:	cwde   
  41579b:	test   DWORD PTR [ebx+eiz*8-0x73a4d5d7],ebp
  4157a2:	test   al,0xa
  4157a4:	adc    BYTE PTR [esi+ebp*1+0x5a],dh
  4157a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157a9:	sar    DWORD PTR [ecx+edi*8-0x4a],cl
  4157ad:	sub    al,0x89
  4157af:	inc    BYTE PTR [ecx]
  4157b1:	push   ebx
  4157b2:	test   BYTE PTR [ebx+0x5bad57f3],0x89
  4157b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157ba:	jecxz  0x4157e2
  4157bc:	dec    edi
  4157bd:	inc    edx
  4157be:	mov    ch,0xeb
  4157c0:	aam    0x69
  4157c2:	add    bh,BYTE PTR [edi]
  4157c4:	inc    bh
  4157c6:	int    0xdd
  4157c8:	lods   al,BYTE PTR ds:[esi]
  4157c9:	mov    edi,0x5ed2fd31
  4157ce:	jmp    0x41579d
  4157d0:	or     DWORD PTR [ecx-0x1614a52e],edx
  4157d6:	inc    esi
  4157d7:	test   eax,0x1d713029
  4157dc:	sbb    esp,esi
  4157de:	cmp    al,0x22
  4157e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157e1:	stos   DWORD PTR es:[edi],eax
  4157e2:	std    
  4157e3:	int3   
  4157e4:	sub    ecx,DWORD PTR [ecx-0x29]
  4157e7:	pop    ss
  4157e8:	jae    0x4157bc
  4157ea:	mov    ds:0xf06e068,eax
  4157ef:	(bad)  
  4157f0:	out    0x48,eax
  4157f2:	jo     0x41582a
  4157f4:	sub    bl,BYTE PTR [edx+0x6e]
  4157f7:	adc    eax,0x302b879d
  4157fc:	xor    edx,edx
  4157fe:	stos   DWORD PTR es:[edi],eax
  4157ff:	imul   edi
  415801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415802:	not    BYTE PTR [edx+0x4fedd97f]
  415808:	jg     0x415793
  41580a:	popa   
  41580b:	dec    ecx
  41580c:	es cmp bh,dh
  41580f:	or     edi,DWORD PTR [eax-0x6b]
  415812:	fdiv   DWORD PTR ss:[ebp-0x462af0a4]
  415819:	jbe    0x415894
  41581b:	data16 fisttp QWORD PTR [ecx+0x40]
  41581f:	xor    DWORD PTR [esi+0x32416285],edi
  415825:	mov    edi,0xf29e4f20
  41582a:	and    eax,0xd86d2528
  41582f:	add    al,0xc3
  415831:	mov    dh,0xb
  415833:	jb     0x4157ce
  415835:	push   ecx
  415836:	sti    
  415837:	push   es
  415838:	mov    cs,ebx
  41583a:	jae    0x4158a8
  41583c:	loope  0x415885
  41583e:	out    dx,al
  41583f:	dec    esi
  415840:	fistp  DWORD PTR [edx]
  415842:	nop
  415843:	test   DWORD PTR ds:0x711f00fc,0x6d79e139
  41584d:	jecxz  0x4158c0
  41584f:	xchg   edi,ebp
  415851:	pop    esp
  415852:	xchg   DWORD PTR [esi],edx
  415854:	or     ebp,DWORD PTR [edi]
  415856:	cmp    esp,ebx
  415858:	stos   DWORD PTR es:[edi],eax
  415859:	push   ss
  41585a:	inc    eax
  41585b:	into   
  41585c:	jp     0x415818
  41585e:	sub    ah,BYTE PTR [edx-0x67a4ccac]
  415864:	xchg   dx,ax
  415866:	mov    ah,0x83
  415868:	aaa    
  415869:	mov    edi,0x2a60f28f
  41586e:	add    ebp,DWORD PTR [ebx]
  415870:	jmp    0x415841
  415872:	jge    0x41580f
  415874:	lods   al,BYTE PTR ds:[esi]
  415875:	ror    BYTE PTR [ebx-0x51],1
  415878:	data16 (bad) 
  41587a:	jp     0x41587b
  41587c:	adc    esi,DWORD PTR [eax]
  41587e:	sbb    esi,DWORD PTR [edx+0xa]
  415881:	xchg   ecx,eax
  415882:	ss inc esp
  415884:	das    
  415885:	mov    WORD PTR [esi],es
  415887:	or     dl,BYTE PTR [esi]
  415889:	pop    ss
  41588a:	sub    esp,edi
  41588c:	adc    DWORD PTR [edi+0x52],esi
  41588f:	mov    edx,0xbcd2066f
  415894:	cmp    DWORD PTR [edx-0x26b827ad],edx
  41589a:	xchg   ecx,eax
  41589b:	shl    DWORD PTR [esi+0x3d],0x2d
  41589f:	xor    BYTE PTR [edi*2-0x51d321da],bh
  4158a6:	das    
  4158a7:	and    eax,0x4c7b3082
  4158ac:	inc    ebx
  4158ad:	popf   
  4158ae:	lahf   
  4158af:	sub    al,0xfa
  4158b1:	int3   
  4158b2:	(bad)  
  4158b4:	(bad)  
  4158b5:	lods   al,BYTE PTR ds:[esi]
  4158b6:	fisub  DWORD PTR [eax+edi*1-0x741ea5a8]
  4158bd:	and    al,0xc9
  4158bf:	mov    bh,0xe0
  4158c1:	stos   BYTE PTR es:[edi],al
  4158c2:	out    dx,eax
  4158c3:	sub    edi,DWORD PTR [edx]
  4158c5:	sbb    al,0x90
  4158c7:	movsx  esi,bx
  4158ca:	pop    ss
  4158cb:	loope  0x4158e9
  4158cd:	fild   WORD PTR [ebp+0x51]
  4158d0:	mov    ah,0x30
  4158d2:	mov    ecx,DWORD PTR ds:0x437754bf
  4158d8:	jmp    0x415927
  4158da:	pop    ecx
  4158db:	push   esp
  4158dc:	aam    0x50
  4158de:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4158e0:	loop   0x415951
  4158e2:	mov    esp,0x9b31e99c
  4158e7:	(bad)  
  4158e8:	mov    ah,0x45
  4158ea:	mov    dh,0x1a
  4158ec:	fidiv  DWORD PTR [ebp+0x67]
  4158ef:	enter  0xa462,0xce
  4158f3:	test   BYTE PTR [ecx],bl
  4158f5:	dec    esp
  4158f6:	lea    edi,[ecx-0x48a7b667]
  4158fc:	popa   
  4158fd:	mov    edi,eax
  4158ff:	shl    BYTE PTR [esi],cl
  415901:	out    0xb9,al
  415903:	nop
  415904:	push   ss
  415905:	es cmp eax,0x8cbf13f0
  41590b:	adc    eax,DWORD PTR [edx]
  41590d:	pop    ds
  41590e:	test   al,bl
  415910:	xchg   ebx,eax
  415911:	or     DWORD PTR [ebx+0x39],0x964172e8
  415918:	xchg   edx,eax
  415919:	cmp    al,0xd
  41591b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41591c:	popa   
  41591d:	dec    edi
  41591e:	mov    dl,0xca
  415920:	sbb    BYTE PTR fs:[ebx],dh
  415923:	xchg   ebx,eax
  415924:	sbb    DWORD PTR [eax+0x3],0x29
  415928:	inc    bp
  41592a:	loope  0x415992
  41592c:	popf   
  41592d:	xor    eax,0x9753afcf
  415932:	sbb    ah,ch
  415934:	or     DWORD PTR [ebp+0x0],ebp
  415937:	mov    ds:0x9833c57d,al
  41593c:	stos   DWORD PTR es:[edi],eax
  41593d:	jge    0x4159b9
  41593f:	sub    DWORD PTR [edx-0x6e],edi
  415942:	push   esi
  415943:	jnp    0x415976
  415945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415946:	cwde   
  415947:	ins    BYTE PTR es:[edi],dx
  415948:	(bad)  
  415949:	or     eax,0x73f23e4e
  41594e:	xor    edi,DWORD PTR [ebx-0x10]
  415951:	scas   al,BYTE PTR es:[edi]
  415952:	or     dh,cl
  415954:	pop    ebp
  415955:	shr    DWORD PTR [edx+0x4bf05e78],0x7b
  41595c:	xor    al,BYTE PTR [ecx-0x6e]
  41595f:	inc    ecx
  415960:	rcl    BYTE PTR [ebp+0x2ee427ca],0x5f
  415967:	and    eax,0x28118c48
  41596c:	repz popa 
  41596e:	pop    esp
  41596f:	hlt    
  415970:	sub    eax,0x64690e32
  415975:	cli    
  415976:	shl    DWORD PTR [esi+ecx*8],1
  415979:	inc    ecx
  41597a:	icebp  
  41597b:	rol    DWORD PTR [eax*2-0x18e36819],0x15
  415983:	mov    eax,ds:0x9c946f93
  415988:	sub    al,0x73
  41598a:	(bad)  
  41598b:	rcl    BYTE PTR [esi+0x298f2079],cl
  415991:	mov    DWORD PTR [ecx+0x13dc5852],ebx
  415997:	mov    esi,0x49d0cf7
  41599c:	stc    
  41599d:	add    ebp,edx
  41599f:	jo     0x415961
  4159a1:	test   al,0xcd
  4159a3:	dec    edi
  4159a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159a5:	inc    eax
  4159a6:	int    0x27
  4159a8:	jcxz   0x415966
  4159ab:	sub    eax,0xf4d90519
  4159b0:	fbld   TBYTE PTR [ecx-0x73b74fed]
  4159b6:	push   edx
  4159b7:	mov    ds:0xbda02783,al
  4159bc:	sbb    al,0x2b
  4159be:	mov    dl,0x56
  4159c0:	das    
  4159c1:	mov    esp,DWORD PTR [eax]
  4159c3:	or     eax,0x78ea39ed
  4159c8:	push   ebx
  4159c9:	pushf  
  4159ca:	fisttp DWORD PTR [edi]
  4159cc:	sub    edx,edx
  4159ce:	or     BYTE PTR [ebx-0x3c7bcfd5],0x4f
  4159d5:	(bad)  
  4159d6:	and    al,0x35
  4159d8:	jecxz  0x4159c1
  4159da:	repz mov WORD PTR [eax+0x66fe7a7f],cs
  4159e1:	sar    DWORD PTR [esi-0x753c3d1d],1
  4159e7:	dec    ebp
  4159e8:	int    0x9
  4159ea:	jecxz  0x4159b4
  4159ec:	sahf   
  4159ed:	imul   BYTE PTR es:[edi+0x3084a311]
  4159f4:	ret    0xdf3e
  4159f7:	rcr    DWORD PTR [esi+esi*8+0x4e],cl
  4159fb:	jmp    0x4159b3
  4159fd:	xor    eax,0x1e3b5e62
  415a02:	adc    al,0x61
  415a04:	push   eax
  415a05:	push   ss
  415a06:	dec    edi
  415a07:	jge    0x4159ed
  415a09:	jo     0x4159ca
  415a0b:	push   0xfffffff9
  415a0d:	xor    edi,DWORD PTR [ebx-0x75]
  415a10:	or     al,0xf6
  415a12:	ss scas al,BYTE PTR es:[edi]
  415a14:	fldcw  WORD PTR [eax]
  415a16:	sub    DWORD PTR [esp+eax*1+0xfd981d0],0xc8910d76
  415a21:	xor    DWORD PTR [ebx-0x26765f4a],ebp
  415a27:	pop    eax
  415a28:	fiadd  WORD PTR [eax+eax*1-0xd]
  415a2c:	jne    0x415a7e
  415a2e:	(bad)  
  415a2f:	jae    0x415a91
  415a31:	fcom   st(1)
  415a33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a34:	add    DWORD PTR [esi-0x69],ebx
  415a37:	stos   BYTE PTR es:[edi],al
  415a38:	lods   al,BYTE PTR ds:[esi]
  415a39:	lods   eax,DWORD PTR ds:[esi]
  415a3a:	mov    al,ds:0x6b0ede6f
  415a3f:	dec    esi
  415a40:	test   BYTE PTR [ebx],0x25
  415a43:	pop    edx
  415a44:	sub    al,0x6
  415a46:	test   BYTE PTR [ebp+0x39c42eaf],dl
  415a4c:	pop    esp
  415a4d:	jns    0x4159dd
  415a4f:	fs addr16 adc eax,0x6143b718
  415a56:	dec    ecx
  415a57:	ins    BYTE PTR es:[edi],dx
  415a58:	lock scas eax,DWORD PTR es:[edi]
  415a5a:	cs retf 
  415a5c:	cmp    al,0x66
  415a5e:	hlt    
  415a5f:	xor    eax,0xb01cf636
  415a64:	inc    ecx
  415a65:	push   0xffffffd6
  415a67:	push   cs
  415a68:	inc    edi
  415a69:	mov    ebp,0x4e6f4c8c
  415a6e:	cmc    
  415a6f:	test   eax,0xbbc87285
  415a74:	mov    DWORD PTR [edi-0x22b78961],edi
  415a7a:	xchg   ebx,eax
  415a7b:	add    cl,BYTE PTR [edx]
  415a7d:	xchg   ebp,esp
  415a7f:	push   es
  415a80:	dec    eax
  415a81:	lds    eax,FWORD PTR [eax+0x46]
  415a84:	dec    eax
  415a85:	xchg   edi,eax
  415a86:	xchg   edi,eax
  415a87:	mov    eax,gs
  415a89:	dec    edx
	...
  415c5a:	in     eax,dx
  415c5b:	jle    0x415c4f
  415c5d:	ret    
  415c5e:	repz iret 
  415c60:	std    
  415c61:	jle    0x415c42
  415c63:	loope  0x415ca7
  415c65:	mov    al,0x90
  415c67:	sbb    eax,0x6254a4cd
  415c6c:	add    DWORD PTR [eax],eax
  415c6e:	and    eax,0xdf000007
  415c73:	mov    al,0x85
  415c75:	(bad)  
  415c76:	ds pushf 
  415c78:	jns    0x415c45
  415c7a:	into   
  415c7b:	loope  0x415c96
  415c7d:	push   ss
  415c7e:	sub    dh,dl
  415c80:	sti    
  415c81:	pop    edx
  415c82:	js     0x415c64
  415c84:	adc    BYTE PTR [ecx-0x7c63e5eb],al
  415c8a:	in     eax,dx
  415c8b:	cwde   
  415c8c:	adc    al,0xff
  415c8e:	mov    ch,0x8d
  415c90:	shr    DWORD PTR ds:0x919f4454,cl
  415c96:	adc    edx,DWORD PTR [esi+0x3c]
  415c99:	sbb    al,0x86
  415c9b:	mov    ?,WORD PTR [edi+0x2074e8df]
  415ca1:	sbb    esp,eax
  415ca3:	scas   al,BYTE PTR es:[edi]
  415ca4:	mov    WORD PTR [ecx],es
  415ca6:	xor    al,0xe2
  415ca8:	cmp    cl,al
  415caa:	mov    al,0x47
  415cac:	cmc    
  415cad:	cmp    esi,DWORD PTR [esi-0x6c0e773d]
  415cb3:	sbb    DWORD PTR [edx-0x30],edx
  415cb6:	jle    0x415c7a
  415cb8:	jno    0x415d01
  415cba:	outs   dx,BYTE PTR ds:[esi]
  415cbb:	ins    BYTE PTR es:[edi],dx
  415cbc:	mov    dl,0xad
  415cbe:	mov    ah,0xbc
  415cc0:	scas   eax,DWORD PTR es:[edi]
  415cc1:	ja     0x415c72
  415cc3:	fdiv   st(0),st
  415cc5:	loop   0x415d0d
  415cc7:	shl    ch,1
  415cc9:	mov    esp,0x626b3c74
  415cce:	sub    BYTE PTR [ebx],cl
  415cd0:	pushf  
  415cd1:	mov    ds:0xa597d8d1,eax
  415cd6:	fst    QWORD PTR [ebx]
  415cd8:	xchg   ebx,eax
  415cd9:	xor    BYTE PTR [edi+edi*2+0x35],cl
  415cdd:	aas    
  415cde:	dec    edx
  415cdf:	jecxz  0x415ca5
  415ce1:	in     al,dx
  415ce2:	rol    DWORD PTR [ebx],1
  415ce4:	mov    ds:0xf8905f13,al
  415ce9:	pop    ds
  415cea:	ror    DWORD PTR [ebx+0x71],cl
  415ced:	ins    BYTE PTR es:[edi],dx
  415cee:	push   di
  415cf0:	xchg   DWORD PTR [ebx-0x2c8f1b6a],esi
  415cf6:	sub    esi,0xd796047a
  415cfc:	and    BYTE PTR [ecx+0x4d],cl
  415cff:	xchg   esi,eax
  415d00:	test   dl,al
  415d02:	loopne 0x415cff
  415d04:	add    eax,0x926b9afe
  415d09:	das    
  415d0a:	mov    al,0xf7
  415d0c:	mov    ecx,0x6320c220
  415d11:	mov    WORD PTR [edi+eiz*2],es
  415d14:	or     DWORD PTR [edi],ebx
  415d16:	mov    dh,0x9f
  415d18:	mul    al
  415d1a:	fimul  DWORD PTR [esp+ebx*1]
  415d1d:	dec    esi
  415d1e:	mov    DWORD PTR [edx+0x66],0xcf84661e
  415d25:	ret    
  415d26:	stos   BYTE PTR es:[edi],al
  415d27:	or     DWORD PTR [ebp-0x62],ebx
  415d2a:	push   eax
  415d2b:	cmp    bh,BYTE PTR [eax]
  415d2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d2e:	mov    BYTE PTR [edx+0x1b51a24b],al
  415d34:	jl     0x415d1d
  415d36:	mov    bh,0x3
  415d38:	imul   edx,DWORD PTR [edx+0x7d],0xffffff89
  415d3c:	mov    ecx,ecx
  415d3e:	xor    al,0xc0
  415d40:	xchg   edi,eax
  415d41:	loope  0x415d79
  415d43:	cld    
  415d44:	mov    bl,0xa2
  415d46:	retf   
  415d47:	sub    ebx,eax
  415d49:	repz jne 0x415d94
  415d4c:	pop    eax
  415d4d:	adc    DWORD PTR [esi-0x68b1778],esp
  415d53:	adc    cl,dl
  415d55:	mov    DWORD PTR [ebx+ecx*1],0xcffd80ad
  415d5c:	and    BYTE PTR [ebp+0x6aabe317],ah
  415d62:	jp     0x415d46
  415d64:	cmp    al,0x93
  415d66:	hlt    
  415d67:	inc    eax
  415d68:	xor    ebx,edx
  415d6a:	add    al,0x73
  415d6c:	lds    ebp,FWORD PTR ds:0xd7e89be7
  415d72:	mul    BYTE PTR [ebp-0x34]
  415d75:	jmp    0xf69f:0xb6130291
  415d7c:	xchg   edx,eax
  415d7d:	ins    DWORD PTR es:[edi],dx
  415d7e:	cdq    
  415d7f:	out    dx,al
  415d80:	mov    cl,0xdf
  415d82:	andnps xmm2,xmm3
  415d85:	jle    0x415df0
  415d87:	jp     0x415d8d
  415d89:	cmc    
  415d8a:	les    esp,FWORD PTR [ebp+0x5579ad72]
  415d90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d91:	sub    DWORD PTR [edx-0x20],ecx
  415d94:	in     al,0x3c
  415d96:	cmp    bl,bh
  415d98:	and    DWORD PTR [esi],edx
  415d9a:	dec    esp
  415d9b:	test   al,0x92
  415d9d:	xadd   DWORD PTR [ebx-0x70403b7e],eax
  415da4:	adc    al,0x1a
  415da7:	or     eax,0xcbc7a166
  415dac:	ins    DWORD PTR es:[edi],dx
  415dad:	(bad)  
  415daf:	not    DWORD PTR [ebx+eiz*8+0x33]
  415db3:	ret    0x6bf2
  415db6:	jae    0x415d48
  415db8:	sub    eax,0xa3ac470d
  415dbd:	and    BYTE PTR ds:0x6f116ad9,ah
  415dc3:	popa   
  415dc4:	nop    DWORD PTR [edx-0x16a7636e]
  415dcb:	sar    BYTE PTR [eax-0x1f],1
  415dce:	or     dl,ah
  415dd0:	pop    esi
  415dd1:	mov    esp,0x3e8e3521
  415dd6:	xchg   ecx,eax
  415dd7:	mov    ecx,ecx
  415dd9:	adc    bh,al
  415ddb:	sbb    cl,BYTE PTR [ebx]
  415ddd:	jne    0x415dd6
  415ddf:	add    al,0x31
  415de1:	jmp    0x415d8a
  415de3:	mov    eax,DWORD PTR [eax]
  415de5:	or     DWORD PTR [edi+0x71],ecx
  415de8:	xchg   edx,eax
  415de9:	mov    WORD PTR [eax+0x1c],?
  415dec:	(bad)  
  415ded:	inc    esp
  415dee:	and    al,0xb8
  415df0:	rcl    DWORD PTR [ebp-0x3e],0xf7
  415df4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415df5:	mov    DWORD PTR [ebp-0x5c4ef05d],edx
  415dfb:	dec    ebp
  415dfc:	enter  0xdbb8,0xd0
  415e00:	xchg   esp,eax
  415e01:	loopne 0x415da0
  415e03:	mov    dl,0x32
  415e05:	outs   dx,DWORD PTR ds:[esi]
  415e06:	pop    ebx
  415e07:	fnstcw WORD PTR [edi-0x39]
  415e0a:	sub    BYTE PTR [esi+edx*1],cl
  415e0d:	std    
  415e0e:	cwde   
  415e0f:	mov    esp,0x97db1bfe
  415e14:	dec    esp
  415e15:	add    al,0xfd
  415e17:	mov    ebp,0x2c85664a
  415e1c:	outs   dx,DWORD PTR ds:[esi]
  415e1d:	or     al,0xdf
  415e1f:	fiadd  WORD PTR [edx-0x3df39275]
  415e25:	jnp    0x415e10
  415e27:	or     al,0x9b
  415e29:	fwait
  415e2a:	test   al,0xe6
  415e2c:	addr16 mov cl,0xcc
  415e2f:	popa   
  415e30:	jmp    0x3395:0x38eeb25
  415e37:	imul   eax,DWORD PTR [ebx+eiz*4+0x5e],0x54b31eaf
  415e3f:	cs xchg ebp,eax
  415e41:	add    DWORD PTR [esi-0x17],ebp
  415e44:	ret    0xfa8b
  415e47:	in     eax,dx
  415e48:	or     eax,0xd646e1ef
  415e4d:	cmp    eax,DWORD PTR [ecx+edi*4+0x26]
  415e51:	sti    
  415e52:	repz in al,dx
  415e54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e55:	push   eax
  415e56:	stc    
  415e57:	cmp    al,0x64
  415e59:	pop    ebx
  415e5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e5b:	test   al,0xc0
  415e5d:	sti    
  415e5e:	push   edx
  415e5f:	(bad)  
  415e60:	mov    ah,0x65
  415e62:	fnsave [ebx+edi*4]
  415e65:	cdq    
  415e66:	fdivr  QWORD PTR [edx-0x66fbe03d]
  415e6c:	jl     0x415eaf
  415e6e:	cdq    
  415e6f:	sub    al,0xf1
  415e71:	mov    bl,0x2a
  415e73:	mov    al,0xa3
  415e75:	std    
  415e76:	sahf   
  415e77:	dec    eax
  415e78:	dec    edi
  415e79:	add    ax,0xf3c8
  415e7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e7e:	je     0x415e91
  415e80:	int3   
  415e81:	and    al,0x79
  415e83:	jmp    0x42fb:0x6498db6b
  415e8a:	ins    BYTE PTR es:[edi],dx
  415e8b:	cmp    bl,BYTE PTR [esi]
  415e8d:	jnp    0x415e5d
  415e8f:	adc    bl,bl
  415e91:	std    
  415e92:	call   0x2539:0x28a0f3d8
  415e99:	iret   
  415e9a:	dec    edi
  415e9b:	push   es
  415e9c:	xor    al,BYTE PTR [ecx+0x7575f95b]
  415ea2:	and    eax,0x2b9e669f
  415ea7:	shl    ah,0x73
  415eaa:	and    eax,0xd4c1da8b
  415eaf:	imul   edi,DWORD PTR [esi+ebp*1-0xadf2899],0xa33ae90f
  415eba:	sbb    DWORD PTR [esp+ebx*2-0x55],edi
  415ebe:	pop    eax
  415ebf:	adc    eax,0x63c73e3
  415ec4:	rcr    eax,0xf9
  415ec7:	outs   dx,BYTE PTR ds:[esi]
  415ec8:	dec    eax
  415ec9:	pop    ss
  415eca:	sbb    BYTE PTR [edx-0xf],al
  415ecd:	call   0x970d:0x58a266f2
  415ed4:	in     eax,dx
  415ed5:	cld    
  415ed6:	mov    esi,ebx
  415ed8:	cmc    
  415ed9:	mov    ds:0x2b5f214,al
  415ede:	xchg   ebp,eax
  415edf:	sar    edx,cl
  415ee1:	arpl   bx,bx
  415ee3:	ror    dl,cl
  415ee5:	mov    al,0xd8
  415ee7:	cld    
  415ee8:	dec    esi
  415ee9:	ins    DWORD PTR es:[edi],dx
  415eea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415eeb:	fidiv  DWORD PTR [ebx+0x1]
  415eee:	jg     0x415ee2
  415ef0:	call   0x9708:0xc1cc7c22
  415ef7:	mov    bh,0x73
  415ef9:	inc    edi
  415efa:	or     dh,BYTE PTR [esi-0x57]
  415efd:	dec    ecx
  415efe:	ror    bl,cl
  415f00:	dec    ecx
  415f01:	and    eax,0x9115e2b1
  415f06:	xchg   esp,eax
  415f07:	and    BYTE PTR [ecx-0x9d734ed],bl
  415f0d:	sub    esp,DWORD PTR [edi-0x42]
  415f10:	dec    edx
  415f11:	(bad)  [ecx]
  415f13:	test   al,0xae
  415f16:	loope  0x415ec3
  415f18:	loope  0x415efc
  415f1a:	jbe    0x415f83
  415f1c:	jge    0x415f67
  415f1e:	sub    eax,0x850e9d1c
  415f23:	xor    BYTE PTR [ebp-0x1c],ch
  415f26:	push   esp
  415f28:	pop    ss
  415f29:	xchg   ebp,eax
  415f2a:	cmp    bl,BYTE PTR [esi-0x7ac22a90]
  415f30:	pop    eax
  415f31:	and    al,0x12
  415f33:	test   al,0x8b
  415f35:	sub    ebx,DWORD PTR [eax+0x38]
  415f38:	mov    edx,0xf53b2918
  415f3d:	jp     0x415f2c
  415f3f:	and    DWORD PTR [edx-0x7fb1cb12],ecx
  415f45:	or     dl,dl
  415f47:	mov    ecx,ebx
  415f49:	adc    dl,BYTE PTR [ecx-0x21]
  415f4c:	xchg   DWORD PTR [eax+0x521eadb],esi
  415f52:	lods   al,BYTE PTR es:[esi]
  415f54:	shl    eax,1
  415f56:	or     al,0xd8
  415f58:	mov    dl,0xa5
  415f5a:	mov    ds:0xc618bfb8,al
  415f5f:	push   es
  415f60:	call   0xcb25:0xfeda507f
  415f67:	in     al,0xef
  415f69:	bnd jmp 0x415f12
  415f6c:	ror    BYTE PTR [ebp+0x3c506035],1
  415f72:	sti    
  415f73:	sbb    al,0x77
  415f75:	jg     0x415fe5
  415f77:	xlat   BYTE PTR ds:[ebx]
  415f78:	jecxz  0x415f76
  415f7a:	or     DWORD PTR [edi],0x13cd34d1
  415f80:	or     BYTE PTR [ecx],dl
  415f82:	inc    edi
  415f83:	or     BYTE PTR ds:0xbd74403f,0x5b
  415f8a:	dec    edi
  415f8b:	xlat   BYTE PTR ds:[ebx]
  415f8c:	femms  
  415f8e:	jmp    0xf958:0x56f2d594
  415f95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f96:	ret    0x1e07
  415f99:	addr16 xchg esi,eax
  415f9b:	jg     0x416009
  415f9d:	cmp    eax,0x2fed263f
  415fa2:	sbb    DWORD PTR [ebp+0x12],ecx
  415fa5:	inc    ebx
  415fa6:	xor    al,0xe8
  415fa8:	daa    
  415fa9:	xchg   esp,eax
  415faa:	sub    al,0x4e
  415fac:	sbb    al,0x85
  415fae:	cdq    
  415faf:	icebp  
  415fb0:	clc    
  415fb1:	jmp    0x415f99
  415fb3:	pop    eax
  415fb4:	add    DWORD PTR [ecx-0x7c71e3b0],ebp
  415fba:	cmc    
  415fbb:	dec    ebx
  415fbc:	cli    
  415fbd:	fs or  edi,esi
  415fc0:	jns    0x41602f
  415fc2:	test   BYTE PTR [edi],bl
  415fc4:	sub    ebp,DWORD PTR [esi]
  415fc6:	mov    cl,0x48
  415fc8:	pop    eax
  415fc9:	inc    edi
  415fca:	xor    eax,0xa5c2e1b8
  415fcf:	outs   dx,DWORD PTR ds:[esi]
  415fd0:	sub    ebx,esp
  415fd2:	sbb    ebx,DWORD PTR ds:0xb27749e7
  415fd8:	mov    ebx,0x4e578e47
  415fdd:	mov    cl,0x6
  415fdf:	push   0xd509204f
  415fe4:	leave  
  415fe5:	aas    
  415fe6:	or     edx,DWORD PTR [eax+edi*4-0x60]
  415fea:	adc    dl,cl
  415fec:	rol    BYTE PTR [eax+edi*2],1
  415fef:	outs   dx,DWORD PTR ds:[esi]
  415ff0:	push   ds
  415ff1:	jnp    0x416069
  415ff3:	xor    eax,DWORD PTR [edi+0x3b184df7]
  415ff9:	push   ds
  415ffa:	jns    0x416025
  415ffc:	popf   
  415ffd:	in     eax,0x80
  415fff:	inc    ebx
  416000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416001:	and    eax,0xc15c3792
  416006:	pop    ds
  416007:	pop    esp
  416008:	push   eax
  416009:	sahf   
  41600a:	ficomp DWORD PTR [edi+0x728a6554]
  416010:	jae    0x41603b
  416012:	mov    ebp,0x52dd5085
  416017:	cmp    BYTE PTR [edx+ebx*4+0x4e919bf],cl
  41601e:	jbe    0x41601f
  416020:	inc    edi
  416021:	push   ecx
  416022:	push   ecx
  416023:	and    DWORD PTR [ebx+eax*4-0x5f],esi
  416027:	push   ebp
  416028:	xchg   esp,eax
  416029:	xchg   edi,eax
  41602a:	out    0xb4,eax
  41602c:	push   0xffffffc0
  41602e:	or     BYTE PTR [edi+0x4],bl
  416031:	sub    al,0xd3
  416033:	leave  
  416034:	dec    ebx
  416035:	add    al,BYTE PTR [edx]
  416037:	cdq    
  416038:	xchg   edi,eax
  416039:	pop    ss
  41603a:	pop    edx
  41603b:	leave  
  41603c:	lods   al,BYTE PTR ds:[esi]
  41603d:	hlt    
  41603e:	fs popa 
  416040:	sbb    BYTE PTR [ebp+ecx*8-0x62730722],bh
  416047:	es adc eax,0xfe7c8a00
  41604d:	mov    al,ds:0xfe98eab0
  416052:	(bad)  
  416053:	std    
  416054:	in     eax,0x75
  416056:	xchg   ebp,eax
  416057:	fidiv  DWORD PTR [ecx-0x78]
  41605a:	dec    ecx
  41605b:	xchg   esp,eax
  41605c:	fcmovnu st,st(5)
  41605e:	test   eax,0x614ba2f9
  416063:	mov    edi,0xa902fa35
  416068:	adc    DWORD PTR [ebp+0x54bbfeb7],eax
  41606e:	(bad)  
  41606f:	mov    eax,0xf2a2f004
  416074:	sbb    BYTE PTR [ecx],0xfe
  416077:	xchg   edi,eax
  416078:	adc    DWORD PTR [eax],edi
  41607a:	pop    esi
  41607b:	repnz mov eax,0x248cfa73
  416081:	mov    ds:0xe1b74ed7,eax
  416086:	repz fimul WORD PTR [esi-0x50f3872b]
  41608d:	call   0x16445f70
  416092:	push   cs
  416093:	dec    ebp
  416094:	mov    edi,0x71e02293
  416099:	call   0x8510:0x60654293
  4160a0:	sub    DWORD PTR [ecx-0x29f6d661],0xffffffc9
  4160a7:	or     bh,BYTE PTR [ecx+0x69]
  4160aa:	pop    ebp
  4160ab:	mov    WORD PTR [edx-0x61],ss
  4160ae:	dec    ebp
  4160af:	sub    eax,0x97cd4286
  4160b4:	inc    eax
  4160b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160b6:	jnp    0x416040
  4160b8:	(bad)  
  4160b9:	fisubr WORD PTR [ebx]
  4160bb:	mov    eax,ds:0x5356fadf
  4160c0:	xor    esp,eax
  4160c2:	mov    WORD PTR ds:0xb90d3204,es
  4160c8:	cmc    
  4160c9:	repz jge 0x416102
  4160cc:	ss sub al,0xee
  4160cf:	mov    dl,0xed
  4160d1:	sbb    edx,DWORD PTR ds:0xd89d7a75
  4160d7:	jle    0x4160cb
  4160d9:	ret    
  4160da:	sbb    BYTE PTR [ebx-0x511c5531],0x27
  4160e1:	test   dh,ch
  4160e3:	aaa    
  4160e4:	pop    edi
  4160e5:	jno    0x416119
  4160e7:	les    ebp,FWORD PTR [ecx]
  4160e9:	inc    ebx
  4160ea:	push   ds
  4160eb:	imul   eax,DWORD PTR [edi+0x5a1fb3c8],0x3e
  4160f2:	jmp    0x6e7136b6
  4160f7:	xor    eax,0x61b58cdd
  4160fc:	ins    DWORD PTR es:[edi],dx
  4160fd:	stos   BYTE PTR es:[edi],al
  4160fe:	cmp    esp,esi
  416100:	ins    BYTE PTR es:[edi],dx
  416101:	and    BYTE PTR [ebx+0x1e],dl
  416104:	aam    0xa3
  416106:	mov    ah,0x2d
  416108:	stc    
  416109:	or     esi,DWORD PTR [edi]
  41610b:	lods   al,BYTE PTR ds:[esi]
  41610c:	xchg   ebp,eax
  41610d:	imul   edx,DWORD PTR [edx+eiz*4+0x5b],0xffffff8f
  416112:	cmp    DWORD PTR cs:[edx-0x2d],esi
  416116:	ins    DWORD PTR es:[edi],dx
  416117:	cwde   
  416118:	jmp    0x41609a
  41611a:	sahf   
  41611b:	icebp  
  41611c:	adc    ebp,edi
  41611e:	sub    BYTE PTR [edx+0x6da0354e],al
  416124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416125:	cdq    
  416126:	lods   al,BYTE PTR ds:[esi]
  416127:	lods   eax,DWORD PTR ds:[esi]
  416128:	or     DWORD PTR [eax],edx
  41612a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41612b:	ja     0x4160ea
  41612d:	mov    ebp,0x8159717f
  416132:	mov    bh,0xac
  416134:	pop    ebp
  416135:	addr16 cwde 
  416137:	arpl   dx,ax
  416139:	mov    DWORD PTR ds:0x2598f346,ecx
  41613f:	mov    ds:0xd37fa8d3,eax
  416144:	(bad)  
  416145:	jmp    0xf8eb1278
  41614a:	add    eax,0xf5896a3b
  41614f:	shl    dh,cl
  416151:	push   esi
  416152:	inc    edx
  416153:	mov    eax,0xa92e6912
  416158:	xor    eax,0xf2b6806d
  41615d:	pop    ebx
  41615e:	data16 adc BYTE PTR [edi-0x3d],0xa7
  416163:	mov    esi,0xefc391a7
  416168:	aam    0x4
  41616a:	push   ss
  41616b:	sub    al,0x5d
  41616d:	nop
  41616e:	sbb    al,0xd7
  416170:	inc    ebx
  416171:	add    al,0x16
  416173:	inc    ebp
  416174:	add    BYTE PTR [ecx],bl
  416176:	mov    esp,0xd7844e77
  41617b:	xor    dh,0x7f
  41617e:	movaps XMMWORD PTR [ecx-0x70],xmm7
  416182:	push   ss
  416183:	sub    ebp,edx
  416185:	and    BYTE PTR [edx],0x5c
  416188:	(bad)  
  416189:	iret   
  41618a:	sub    esp,DWORD PTR [eax]
  41618c:	test   al,0x32
  41618e:	lds    esp,FWORD PTR [ecx+0x5d]
  416191:	sbb    BYTE PTR [ebx],cl
  416193:	(bad)
  416196:	popf   
  416197:	imul   edi,DWORD PTR [ecx],0x66cafbba
  41619d:	ret    0x52c6
  4161a0:	mov    eax,ds:0xc5515e4a
  4161a5:	cmp    ecx,esp
  4161a7:	inc    eax
  4161a8:	pop    edx
  4161a9:	ins    BYTE PTR es:[edi],dx
  4161aa:	fwait
  4161ab:	and    edi,DWORD PTR [eax-0x57288d33]
  4161b1:	imul   esp,DWORD PTR [edi+0x3],0x565c615f
  4161b8:	js     0x41614f
  4161ba:	mov    dh,0x39
  4161bc:	mov    edi,0xda250e7b
  4161c1:	stc    
  4161c2:	mov    bl,0x87
  4161c4:	les    ebx,FWORD PTR [edi+0x61]
  4161c7:	(bad)  
  4161c9:	sar    ecx,cl
  4161cb:	pop    ebp
  4161cc:	call   0x4aa1139d
  4161d1:	lea    edi,[ecx+0x4b2f2c11]
  4161d7:	lea    esp,[eax+0x132b52b9]
  4161dd:	mov    cl,0x6e
  4161df:	inc    esi
  4161e0:	adc    esi,eax
  4161e2:	xor    eax,0xbfd05b1a
  4161e7:	or     BYTE PTR ds:0xb6809ac5,dl
  4161ed:	mov    ebp,DWORD PTR [edi-0x78]
  4161f0:	into   
  4161f1:	test   al,0xd7
  4161f3:	cmp    esp,esp
  4161f5:	popa   
  4161f6:	call   0x106b:0x4c5573bc
  4161fd:	mov    gs,WORD PTR [ebp+0x44]
  416200:	pop    eax
  416201:	out    dx,al
  416202:	repnz retf 
  416204:	push   cs
  416205:	pop    eax
  416206:	mov    edx,0x71c45e3f
  41620b:	cmp    edx,esi
  41620d:	mov    bl,0x7b
  41620f:	sbb    BYTE PTR [edx-0x3cfe3724],bl
  416215:	adc    al,0xbb
  416217:	xlat   BYTE PTR ds:[ebx]
  416218:	mov    edx,0x98d45d36
  41621d:	std    
  41621e:	cmp    DWORD PTR [esi+0x23],ebx
  416221:	pop    esp
  416222:	imul   DWORD PTR [esi+0x58b5b52a]
  416228:	icebp  
  416229:	push   ebp
  41622a:	lds    esp,FWORD PTR [ebx]
  41622c:	add    ecx,DWORD PTR [eax-0x4b]
  41622f:	xor    al,BYTE PTR [ebx+0x1cce4382]
  416235:	dec    eax
  416236:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416237:	pop    ds
  416238:	mov    cl,0x2c
  41623a:	adc    bh,ch
  41623c:	and    eax,0x7a196d67
  416241:	push   esi
  416242:	aad    0xb5
  416244:	jge    0x416272
  416246:	imul   edx,DWORD PTR [edx],0x73
  416249:	jns    0x4161cf
  41624b:	cmc    
  41624c:	cld    
  41624d:	mov    ?,WORD PTR [esi+eax*4]
  416250:	dec    edi
  416251:	lock or eax,0x743c60fd
  416257:	imul   ecx,DWORD PTR [edx-0x71c46498],0x3f9e31f4
  416261:	adc    edx,0x21
  416264:	in     eax,0x66
  416266:	adc    BYTE PTR ds:[ebx],0x24
  41626a:	imul   ecx,DWORD PTR [ebp-0x79],0xe733ef8b
  416271:	std    
  416272:	scas   al,BYTE PTR es:[edi]
  416273:	enter  0xb0fe,0x15
  416277:	loop   0x41620f
  416279:	dec    esi
  41627a:	mov    al,0xb0
  41627c:	cmp    esp,edi
  41627e:	(bad)  
  41627f:	(bad)  
  416280:	fisttp QWORD PTR [eax]
  416282:	lds    esi,FWORD PTR ds:0x7db38092
  416288:	add    bh,0xd6
  41628b:	xchg   esi,eax
  41628c:	fisttp WORD PTR [edx-0x6a186ae8]
  416292:	xor    dh,BYTE PTR [edi+0xe62c157]
  416298:	(bad)  
  416299:	in     eax,dx
  41629a:	xchg   edi,eax
  41629b:	fsubr  st(6),st
  41629d:	out    0x3d,al
  41629f:	inc    esi
  4162a0:	push   0x65
  4162a2:	xor    dl,0x89
  4162a5:	test   dl,dl
  4162a7:	es inc ebp
  4162a9:	ret    
  4162aa:	sbb    al,0xfc
  4162ac:	ins    DWORD PTR es:[edi],dx
  4162ad:	or     BYTE PTR [esi+esi*4+0x30],bh
  4162b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162b2:	mov    esp,0x9b806896
  4162b7:	mov    esi,0x2ad8ca0b
  4162bc:	int    0xfd
  4162be:	std    
  4162bf:	fnstsw WORD PTR [ebp+ebp*4-0x2]
  4162c3:	or     al,BYTE PTR [esi+0x76849974]
  4162c9:	cmp    ah,BYTE PTR [ebp+0x4e3db1c4]
  4162cf:	sahf   
  4162d0:	inc    edx
  4162d1:	mov    al,ds:0xcd70f3db
  4162d6:	add    al,0xd2
  4162d8:	fstp   DWORD PTR [ecx+eiz*8]
  4162db:	faddp  st(7),st
  4162dd:	mov    ds:0xfd1c6d32,al
  4162e2:	xor    al,0x49
  4162e4:	push   esi
  4162e5:	inc    esp
  4162e6:	icebp  
  4162e7:	mov    gs,WORD PTR [edx]
  4162e9:	test   BYTE PTR [ecx],0xd9
  4162ec:	out    0xf2,al
  4162ee:	jo     0x416287
  4162f0:	ins    BYTE PTR es:[edi],dx
  4162f1:	mov    es,edx
  4162f3:	mov    esp,0x7efa9993
  4162f8:	pop    es
  4162f9:	fwait
  4162fa:	les    ebp,FWORD PTR [esp+ecx*8+0x1a]
  4162fe:	lods   al,BYTE PTR ds:[esi]
  4162ff:	mov    WORD PTR [edi-0x69759a6a],es
  416305:	add    al,0x79
  416307:	push   0xa7d4cd6c
  41630c:	add    edi,DWORD PTR [edi-0x2032439d]
  416312:	nop
  416313:	test   BYTE PTR [ebx+0x50],ah
  416316:	(bad)  
  416318:	enter  0xab22,0xb7
  41631c:	imul   ebx,DWORD PTR [ecx],0x70f3412c
  416322:	in     al,dx
  416323:	cmc    
  416324:	(bad)  
  416325:	rcl    BYTE PTR [ebp-0x1e3e69f7],1
  41632b:	cmp    al,0xd8
  41632d:	mov    esp,0xb8bddd3f
  416332:	inc    esi
  416333:	shl    DWORD PTR [edx],cl
  416335:	add    edi,DWORD PTR [ebx]
  416337:	out    0x9,eax
  416339:	not    BYTE PTR [ebx+0x26]
  41633c:	mov    ds:0xf0deb87f,al
  416341:	push   ds
  416342:	inc    ecx
  416343:	inc    ecx
  416344:	add    ebx,DWORD PTR ds:0x6158cd94
  41634a:	dec    DWORD PTR [ebx-0x6f]
  41634d:	bound  esi,QWORD PTR [ebp-0x1d805c0b]
  416353:	popa   
  416354:	sbb    DWORD PTR [ebx],ebx
  416356:	or     eax,0xba26d6ee
  41635b:	mov    bl,0xb
  41635d:	and    esp,DWORD PTR [esi]
  41635f:	cmp    BYTE PTR [esi-0x54ab6acd],0xfc
  416366:	fstp   QWORD PTR [esi]
  416368:	push   es
  416369:	out    dx,al
  41636a:	and    esp,DWORD PTR [ebx-0x28]
  41636d:	daa    
  41636e:	loope  0x416364
  416370:	jp     0x4163b2
  416372:	pop    ebx
  416373:	out    0xcc,al
  416375:	(bad)  
  416377:	or     dh,0xda
  41637a:	pop    esp
  41637b:	ins    DWORD PTR es:[edi],dx
  41637c:	fs dec edi
  41637e:	outs   dx,BYTE PTR ds:[esi]
  41637f:	repnz cs mov dh,0xc3
  416383:	dec    ebx
  416384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416385:	push   ss
  416386:	lods   al,BYTE PTR ds:[esi]
  416387:	(bad)  
  416388:	call   0x42c0:0x26d77c41
  41638f:	push   0x9cee175d
  416394:	sub    al,0x7
  416396:	cmp    eax,DWORD PTR [eax]
	...
  416570:	add    BYTE PTR [eax],al
  416572:	add    al,ch
  416574:	shl    BYTE PTR [edi+0x76],1
  416577:	jg     0x416570
  416579:	stc    
  41657a:	ficom  WORD PTR [ebp+0x2e]
  41657d:	inc    esp
  41657e:	and    al,0xfe
  416580:	add    ebx,esp
  416582:	loop   0x416522
  416584:	jo     0x416587
  416586:	add    BYTE PTR ds:0xba000007,ah
  41658c:	retf   0x3479
  41658f:	stc    
  416590:	sti    
  416591:	fsub   DWORD PTR [edx+0x68]
  416594:	in     eax,dx
  416595:	loop   0x41651b
  416597:	imul   ebx,DWORD PTR [ebx-0x38],0x6b
  41659b:	mov    al,ds:0x85904b4f
  4165a0:	xchg   ebx,eax
  4165a2:	jg     0x4165b1
  4165a4:	stos   DWORD PTR es:[edi],eax
  4165a5:	rol    DWORD PTR [ebx-0x43],cl
  4165a8:	cld    
  4165a9:	into   
  4165aa:	das    
  4165ab:	ja     0x416582
  4165ad:	xchg   ebp,eax
  4165ae:	xchg   esi,eax
  4165af:	into   
  4165b0:	xchg   esp,eax
  4165b1:	jg     0x41654a
  4165b3:	leave  
  4165b4:	mov    bh,0x1e
  4165b6:	xor    eax,0x9136bf81
  4165bb:	mov    bh,0xda
  4165bd:	xor    BYTE PTR [edi+0x39dc48b6],al
  4165c3:	mov    DWORD PTR [esi+0x3a],eax
  4165c6:	mov    esp,0x558155db
  4165cb:	sub    edx,DWORD PTR [eax-0x58580b5e]
  4165d1:	push   ebp
  4165d2:	mov    cs:0x4fd0737a,eax
  4165d8:	xchg   edx,eax
  4165d9:	in     al,0x41
  4165db:	xor    al,0xc5
  4165dd:	in     al,dx
  4165de:	jne    0x416584
  4165e0:	pop    ecx
  4165e1:	dec    ebx
  4165e2:	scas   eax,DWORD PTR es:[edi]
  4165e3:	test   al,0x3
  4165e5:	pushf  
  4165e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165e7:	div    bh
  4165e9:	dec    edi
  4165ea:	adc    BYTE PTR [ebx+0x6295d02e],0x6
  4165f1:	rol    BYTE PTR [esi-0x26],0xc
  4165f5:	jae    0x4165cd
  4165f7:	mov    cl,0x65
  4165f9:	pop    esp
  4165fa:	imul   ebx,DWORD PTR [edx-0x2477a982],0x189abcda
  416604:	fwait
  416605:	sbb    bl,BYTE PTR [ebx-0x26b4fd95]
  41660b:	mov    ecx,0xeac5336c
  416610:	and    eax,ebp
  416612:	sbb    eax,0x69a67b57
  416617:	mov    eax,0xff91206a
  41661c:	jg     0x41664c
  41661e:	jo     0x416686
  416620:	inc    ebp
  416621:	loope  0x41666a
  416623:	bound  esp,QWORD PTR [ebp+0x26]
  416626:	int    0xd4
  416628:	push   esi
  416629:	push   0x8208e539
  41662e:	xor    al,0x22
  416630:	sbb    DWORD PTR [edi],ecx
  416632:	scas   eax,DWORD PTR es:[edi]
  416633:	mov    esp,0xed5f1822
  416638:	call   0xd2eabdea
  41663d:	xor    DWORD PTR [ebx-0x65cfaeb6],esi
  416643:	add    dl,dl
  416645:	lea    ebx,[eax+ecx*1]
  416648:	ins    DWORD PTR es:[edi],dx
  416649:	xor    DWORD PTR [ecx],esp
  41664b:	mov    DWORD PTR [ecx-0x55],esp
  41664e:	jmp    0xced256f4
  416653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416654:	mov    DWORD PTR [ebp-0x29],0xb9769431
  41665b:	mov    al,0x17
  41665d:	inc    ecx
  41665e:	pop    esi
  41665f:	mov    eax,ds:0x6f670116
  416664:	es addr16 pop ebx
  416667:	sbb    eax,0x319b6b6a
  41666c:	xchg   ebp,eax
  41666d:	add    ebp,DWORD PTR [esi-0x45]
  416670:	mov    ebx,es
  416672:	add    edi,DWORD PTR ds:0xfb80a87
  416678:	inc    edi
  416679:	ins    DWORD PTR es:[edi],dx
  41667a:	outs   dx,DWORD PTR ds:[esi]
  41667b:	mov    WORD PTR [eax-0x6a9ca859],cs
  416681:	xor    al,0x58
  416683:	add    eax,0xdf025f56
  416688:	cs sahf 
  41668a:	mov    BYTE PTR [ebp+0x7a],bl
  41668d:	jmp    0x7271:0x615ec47f
  416694:	jp     0x416688
  416696:	inc    edx
  416697:	sbb    ecx,edx
  416699:	jne    0x4166a0
  41669b:	test   eax,0xea596990
  4166a0:	leave  
  4166a1:	jmp    0x4166a9
  4166a3:	test   DWORD PTR [ebx+0x200e985a],ebp
  4166a9:	mov    WORD PTR [ebp+0x24d770be],fs
  4166af:	add    eax,0x4a253
  4166b4:	dec    eax
  4166b5:	pop    esi
  4166b6:	adc    DWORD PTR [eax-0x7f],eax
  4166b9:	call   DWORD PTR [edx]
  4166bb:	inc    edx
  4166bc:	jl     0x41670c
  4166be:	sub    ebx,eax
  4166c0:	and    BYTE PTR [ecx],ch
  4166c2:	push   esp
  4166c3:	mov    dh,0xab
  4166c5:	mov    al,cl
  4166c7:	sbb    BYTE PTR [eax-0x37],dh
  4166ca:	lods   al,BYTE PTR ds:[esi]
  4166cb:	lods   al,BYTE PTR ds:[esi]
  4166cc:	mov    dh,0x85
  4166ce:	jae    0x416658
  4166d0:	adc    DWORD PTR [esi+0x9],edx
  4166d3:	(bad)
  4166d6:	(bad)  
  4166d7:	jo     0x41665a
  4166d9:	xchg   ebx,eax
  4166da:	dec    eax
  4166db:	std    
  4166dc:	out    dx,al
  4166dd:	pop    ss
  4166de:	cwde   
  4166df:	sahf   
  4166e0:	loopne 0x416697
  4166e2:	and    BYTE PTR [edx],dh
  4166e4:	mov    ah,BYTE PTR ds:0xa498dcb3
  4166ea:	mov    ?,WORD PTR [esp+ebx*8+0x49]
  4166ee:	pop    edi
  4166ef:	inc    ebx
  4166f0:	cmp    BYTE PTR [ecx-0x28d6e90],bh
  4166f6:	add    ebx,DWORD PTR [ebp+0x29300525]
  4166fc:	repnz push cs
  4166fe:	pop    esi
  4166ff:	sbb    cl,BYTE PTR [esi+0x68]
  416702:	int    0x4c
  416704:	dec    esi
  416705:	lods   eax,DWORD PTR ds:[esi]
  416706:	add    eax,0xadd0d33d
  41670b:	jbe    0x4166e5
  41670d:	inc    ebx
  41670e:	fwait
  41670f:	retf   0x10f2
  416712:	pop    ss
  416713:	fs pushf 
  416715:	frstor [edi+edi*1]
  416718:	es frndint 
  41671b:	shr    ah,1
  41671d:	cwde   
  41671e:	mov    bh,BYTE PTR [eax]
  416720:	out    0x28,eax
  416722:	jle    0x41678b
  416724:	pop    ecx
  416725:	bound  edi,QWORD PTR [esp+eax*4]
  416728:	adc    DWORD PTR [eax+0x6d],ebx
  41672b:	ror    BYTE PTR [ebx],0x4d
  41672e:	push   esi
  41672f:	mov    dh,0xf0
  416731:	lea    esp,[ecx-0x5e]
  416734:	fistp  QWORD PTR [ebp-0x2ab31f9d]
  41673a:	into   
  41673b:	mov    edx,0x1505e28c
  416740:	pop    esp
  416741:	xchg   ecx,eax
  416742:	mov    edi,0xd7cff355
  416747:	adc    esi,DWORD PTR [ecx]
  416749:	lock cli 
  41674b:	das    
  41674c:	jne    0x41672b
  41674e:	mov    dh,0xbb
  416750:	test   al,0xa6
  416752:	addr16 pop edi
  416754:	loop   0x41676c
  416756:	fld    DWORD PTR [edi+edx*4+0x69702d01]
  41675d:	jbe    0x4167cc
  41675f:	aad    0x30
  416761:	sti    
  416762:	mov    dl,0x1e
  416764:	dec    edi
  416765:	jmp    0x416766
  416767:	mov    bl,0x1d
  416769:	pop    ds
  41676a:	(bad)  
  41676b:	outs   dx,DWORD PTR ds:[esi]
  41676c:	sbb    eax,0xc6b74e3d
  416771:	dec    esp
  416772:	scas   eax,DWORD PTR es:[edi]
  416773:	or     cl,0x1d
  416776:	fldcw  WORD PTR [ebp-0x16debb6e]
  41677c:	jae    0x416707
  41677e:	aam    0xed
  416780:	int3   
  416781:	sub    al,0xe2
  416783:	mov    BYTE PTR [eax-0x35],cl
  416786:	cmp    ebp,DWORD PTR [ecx+0x78]
  416789:	mov    ch,0x69
  41678b:	dec    esp
  41678c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41678d:	ins    BYTE PTR es:[edi],dx
  41678e:	sti    
  41678f:	aam    0xdd
  416791:	jp     0x41675d
  416793:	int3   
  416794:	push   edi
  416795:	xchg   esp,eax
  416796:	mov    ebp,0x7e5d5626
  41679b:	stos   DWORD PTR es:[edi],eax
  41679c:	mov    edx,0xd9569d8e
  4167a1:	ret    
  4167a2:	cmp    eax,0xc1f31717
  4167a7:	aad    0xb4
  4167a9:	adc    eax,0x65a02fa8
  4167ae:	gs cdq 
  4167b0:	jmp    0x4167d6
  4167b2:	jmp    0xd40a48ad
  4167b7:	shl    BYTE PTR [esi+eiz*4-0x54c8409a],0xc
  4167bf:	mov    esi,0xb7a50fa5
  4167c4:	out    0x89,al
  4167c6:	iret   
  4167c7:	adc    DWORD PTR [edx-0x336e07fe],esp
  4167cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167ce:	add    ecx,DWORD PTR [ebx]
  4167d0:	push   eax
  4167d1:	repz adc DWORD PTR [edi+ebp*2+0x7d],0xfffffff5
  4167d7:	mov    ebx,DWORD PTR [edx]
  4167d9:	dec    ebp
  4167da:	fisub  WORD PTR [ebx]
  4167dc:	dec    edx
  4167dd:	icebp  
  4167de:	push   ss
  4167df:	bound  eax,QWORD PTR [edi]
  4167e1:	lds    edi,FWORD PTR [esi+0x0]
  4167e4:	(bad)  
  4167e5:	pop    ds
  4167e6:	ja     0x4167c4
  4167e8:	mov    ds:0xf8e2d898,al
  4167ed:	and    DWORD PTR [eax],ebx
  4167ef:	retf   
  4167f0:	push   ecx
  4167f1:	mov    al,0xc8
  4167f3:	mov    cl,0x71
  4167f5:	adc    al,0x5a
  4167f7:	or     al,0x76
  4167f9:	inc    edi
  4167fa:	call   0x26f575f2
  4167ff:	or     BYTE PTR [ecx],bh
  416801:	lods   al,BYTE PTR ds:[esi]
  416802:	adc    esi,DWORD PTR [edx]
  416804:	xchg   esi,eax
  416805:	mov    bl,0x94
  416807:	fbld   TBYTE PTR [ecx]
  416809:	adc    edi,ecx
  41680b:	aas    
  41680c:	inc    ebp
  41680d:	add    DWORD PTR [ebx],esp
  41680f:	retf   
  416810:	std    
  416811:	pop    eax
  416812:	sbb    eax,0x7ce787f0
  416817:	out    0xa8,eax
  416819:	or     al,0xea
  41681b:	arpl   WORD PTR [ebp+eax*1+0x337597b5],di
  416822:	cs push ebp
  416824:	add    al,0xe8
  416826:	outs   dx,BYTE PTR ds:[esi]
  416827:	mov    ebp,0xf625c9be
  41682c:	add    eax,0x92944a52
  416831:	push   esi
  416832:	outs   dx,BYTE PTR ds:[esi]
  416833:	pop    ds
  416834:	mov    gs,ebx
  416836:	add    eax,0x862887c4
  41683b:	xor    DWORD PTR [ebp+ebp*8+0xcbfeb72],ebx
  416842:	ins    DWORD PTR es:[edi],dx
  416843:	fcomp  QWORD PTR [edi+0x3afda9e8]
  416849:	xchg   esi,eax
  41684a:	mov    WORD PTR [ecx-0x68],?
  41684d:	outs   dx,BYTE PTR ds:[esi]
  41684e:	pop    edi
  41684f:	push   esp
  416850:	mov    al,0xb8
  416852:	es or  al,0x59
  416855:	loope  0x4168cd
  416857:	in     al,dx
  416858:	jae    0x41684e
  41685a:	shr    edx,cl
  41685c:	cli    
  41685d:	mov    ebx,0x171c03ce
  416862:	and    al,0xb9
  416864:	(bad)  
  416865:	xlat   BYTE PTR ds:[ebx]
  416866:	fwait
  416867:	(bad)  
  416868:	sti    
  416869:	cmc    
  41686a:	imul   BYTE PTR [ebp+ebp*8-0x3b5160a2]
  416871:	and    DWORD PTR [ebp+edi*8+0x7],eax
  416875:	pop    ebp
  416876:	mov    ?,edx
  416878:	add    eax,0xf6d7fca0
  41687d:	std    
  41687e:	ins    DWORD PTR es:[edi],dx
  41687f:	or     edi,DWORD PTR [ecx]
  416881:	fs jp  0x416868
  416884:	jns    0x4168e7
  416886:	pop    edi
  416887:	lock pusha 
  416889:	adc    esp,DWORD PTR [eax+0x1d]
  41688c:	rol    DWORD PTR [edx],0x0
  41688f:	mov    al,ds:0xccd34bf0
  416894:	pop    edx
  416895:	xchg   ebx,eax
  416896:	mov    ebx,0x138ee8fa
  41689b:	mov    ?,WORD PTR [ecx-0x521367cb]
  4168a1:	add    eax,0x4345d96a
  4168a6:	imul   edx,DWORD PTR [ecx],0xffffffe2
  4168a9:	out    0x9b,al
  4168ab:	add    edx,DWORD PTR [ebx+0x6c]
  4168ae:	inc    esi
  4168af:	or     ah,BYTE PTR [eax-0x9]
  4168b2:	les    ebp,FWORD PTR [edi+0x7c]
  4168b5:	jmp    0x1322:0x523235e8
  4168bc:	dec    DWORD PTR ds:0x7e82051d
  4168c2:	sub    DWORD PTR [edi+0x30],esp
  4168c5:	bound  edi,QWORD PTR [esi+0x2d]
  4168c8:	fabs   
  4168ca:	mov    ah,0x14
  4168cc:	mov    eax,0xee9e449c
  4168d1:	jb     0x416877
  4168d3:	lea    edi,[ebx+0x58]
  4168d6:	(bad)  
  4168d8:	mov    ch,0x86
  4168da:	loopne 0x4168fd
  4168dc:	and    DWORD PTR gs:[ebp-0x15],edx
  4168e0:	nop
  4168e1:	inc    edi
  4168e2:	iret   
  4168e3:	int3   
  4168e4:	pushf  
  4168e5:	jp     0x4168e7
  4168e7:	adc    BYTE PTR [eax-0x2b],0xff
  4168eb:	inc    ecx
  4168ec:	in     al,0x94
  4168ee:	inc    edx
  4168ef:	fist   DWORD PTR [ebx]
  4168f1:	(bad)  
  4168f3:	in     al,dx
  4168f4:	jmp    0x4168ce
  4168f6:	repnz lods eax,DWORD PTR ds:[esi]
  4168f8:	pop    eax
  4168f9:	ret    
  4168fa:	xchg   esi,eax
  4168fb:	nop
  4168fc:	gs dec esi
  4168fe:	push   0xc3221ae9
  416903:	xlat   BYTE PTR ds:[ebx]
  416904:	pop    ds
  416905:	lds    esp,FWORD PTR [edi-0x5a8cdce3]
  41690b:	icebp  
  41690c:	push   0x353d979e
  416911:	jp     0x416967
  416913:	cmp    bh,BYTE PTR ds:0x3c91efe3
  416919:	jl     0x416939
  41691b:	loop   0x41693a
  41691d:	sub    BYTE PTR [esi-0x4e6ef558],dh
  416923:	scas   al,BYTE PTR es:[edi]
  416924:	inc    esp
  416925:	sbb    DWORD PTR [edx+0x20],ecx
  416928:	or     eax,0x3e81bb0a
  41692d:	mov    ebp,0x3534a2e1
  416932:	outs   dx,BYTE PTR ds:[esi]
  416933:	mov    ecx,0x566f35e0
  416938:	js     0x416903
  41693a:	adc    bh,BYTE PTR [edi+ebp*2]
  41693d:	jge    0x416975
  41693f:	popf   
  416940:	push   esp
  416941:	xor    edi,ecx
  416943:	jno    0x416929
  416945:	inc    esp
  416946:	ficomp DWORD PTR [esi-0x56353cd2]
  41694c:	xchg   edx,eax
  41694d:	sbb    eax,0xe3b5714e
  416952:	and    DWORD PTR [ebp+0x3e],esi
  416955:	mov    bl,0x2e
  416957:	xchg   ecx,eax
  416958:	add    DWORD PTR [ebx-0x41],eax
  41695b:	retf   
  41695c:	nop
  41695d:	jae    0x416981
  41695f:	fisub  WORD PTR [esi]
  416961:	out    0x6c,eax
  416963:	push   edx
  416964:	jno    0x416911
  416966:	sub    dh,BYTE PTR [ebx-0x1c]
  416969:	jne    0x4169a8
  41696b:	mov    cs,esp
  41696d:	jae    0x4169a2
  41696f:	pop    edx
  416970:	and    al,0x4c
  416972:	ror    DWORD PTR [eax-0x79],cl
  416975:	hlt    
  416976:	or     DWORD PTR [edx],edx
  416978:	pop    ecx
  416979:	out    0x2d,al
  41697b:	mov    ebp,0x273bdaf0
  416980:	inc    ebp
  416981:	repnz sub ch,BYTE PTR [edx+0x28473291]
  416988:	sub    ebx,esp
  41698a:	clc    
  41698b:	mov    edi,0xde23b575
  416990:	xor    DWORD PTR [edx-0x1f980fa4],edi
  416996:	lds    ebx,FWORD PTR [edi-0x44]
  416999:	add    al,0xc7
  41699b:	jns    0x416930
  41699d:	push   eax
  41699e:	dec    ecx
  41699f:	aaa    
  4169a0:	lods   al,BYTE PTR ds:[esi]
  4169a1:	enter  0x13a9,0x35
  4169a5:	fmul   DWORD PTR [edx+0x170b1b11]
  4169ab:	outs   dx,DWORD PTR ds:[esi]
  4169ac:	mov    ah,0x81
  4169ae:	js     0x4169f0
  4169b0:	dec    ax
  4169b2:	dec    esp
  4169b3:	ret    
  4169b4:	mov    ds:0x818d064b,eax
  4169b9:	shr    bl,cl
  4169bb:	sub    eax,DWORD PTR [ebx]
  4169bd:	pusha  
  4169be:	pop    eax
  4169bf:	ja     0x4169ab
  4169c1:	stos   DWORD PTR es:[edi],eax
  4169c2:	push   edi
  4169c3:	bound  ebp,QWORD PTR [esp+ebp*8+0x4fdd8b84]
  4169ca:	pop    ebp
  4169cb:	in     eax,0x61
  4169cd:	xor    BYTE PTR [ebx+0x170bb45d],cl
  4169d3:	adc    DWORD PTR [edi-0x1072ad9a],ebx
  4169d9:	push   ebx
  4169da:	sub    al,0x6f
  4169dd:	or     al,0x42
  4169df:	jg     0x41697e
  4169e1:	rcr    DWORD PTR [edi+ecx*8-0x3d],1
  4169e5:	adc    dl,cl
  4169e7:	sub    ebx,DWORD PTR [ecx]
  4169e9:	and    eax,0x8b62e573
  4169ee:	(bad)  
  4169ef:	mov    ah,0x62
  4169f1:	call   0xb4aab692
  4169f6:	push   cs
  4169f7:	repnz cs mov dh,0xdc
  4169fb:	cmp    bh,bh
  4169fd:	push   ds
  4169fe:	idiv   ah
  416a00:	lahf   
  416a01:	hlt    
  416a02:	mov    edx,DWORD PTR [ecx+eax*8-0x15f41f8e]
  416a09:	mov    cl,0xe1
  416a0b:	xchg   edx,eax
  416a0c:	std    
  416a0d:	dec    ecx
  416a0e:	in     al,dx
  416a0f:	stos   BYTE PTR es:[edi],al
  416a10:	xor    bh,bh
  416a12:	jb     0x4169a2
  416a14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a15:	pop    DWORD PTR [edx]
  416a17:	call   0x2a75:0xc36ceac8
  416a1e:	or     al,BYTE PTR [edx-0x32023432]
  416a24:	in     eax,dx
  416a25:	outs   dx,BYTE PTR ds:[esi]
  416a26:	jb     0x416a3b
  416a28:	into   
  416a29:	cs in  al,0xd9
  416a2c:	test   al,0x7d
  416a2e:	mov    bl,0xb4
  416a30:	push   ecx
  416a31:	inc    ebp
  416a32:	idiv   BYTE PTR [edi]
  416a34:	jle    0x416a84
  416a36:	iret   
  416a37:	dec    edx
  416a38:	nop
  416a39:	cmp    al,0x1c
  416a3b:	xchg   edi,eax
  416a3c:	inc    esi
  416a3d:	cdq    
  416a3e:	adc    BYTE PTR [edi-0x72a99e72],0xc7
  416a45:	sbb    dl,BYTE PTR [ebx]
  416a47:	jmp    0x416a19
  416a49:	scas   eax,DWORD PTR es:[edi]
  416a4a:	sti    
  416a4b:	pop    esi
  416a4c:	sbb    al,0x5f
  416a4e:	xor    dh,BYTE PTR [edi+0x5fe9557a]
  416a54:	mov    bl,0x58
  416a56:	mov    edx,0x7a793c25
  416a5b:	and    al,0xd6
  416a5d:	pop    edi
  416a5e:	das    
  416a5f:	and    ch,BYTE PTR ds:[edx+eiz*1+0x31]
  416a64:	xchg   esp,eax
  416a65:	push   esp
  416a66:	lods   al,BYTE PTR ds:[esi]
  416a67:	adc    ch,bh
  416a69:	test   DWORD PTR [ecx],edx
  416a6b:	je     0x416aa1
  416a6d:	fidivr WORD PTR [edx]
  416a6f:	mov    bl,0x5c
  416a71:	repz test eax,0x282a6cea
  416a77:	add    dl,BYTE PTR [ebx-0xc886d90]
  416a7d:	xchg   edi,eax
  416a7e:	sub    al,0x16
  416a80:	mov    edx,0xacefc5f4
  416a86:	jmp    0x9da:0xdcee6d31
  416a8d:	out    0x87,eax
  416a8f:	sbb    al,0x5e
  416a91:	cmp    ah,BYTE PTR [ebx]
  416a93:	jbe    0x416acc
  416a95:	xlat   BYTE PTR ds:[ebx]
  416a96:	push   ebp
  416a97:	add    eax,0x46893b3f
  416a9c:	loopne 0x416aa4
  416a9e:	or     BYTE PTR [edx-0x40],bh
  416aa1:	push   edi
  416aa2:	add    DWORD PTR [esi-0x40],esi
  416aa5:	or     eax,0xdbc4d1db
  416aaa:	cmp    eax,0x6bea936b
  416aaf:	scas   eax,DWORD PTR es:[edi]
  416ab0:	imul   ebx,DWORD PTR [esi],0x75
  416ab3:	lea    edx,[eax-0xd538e63]
  416ab9:	jno    0x416b26
  416abb:	cdq    
  416abc:	push   0xbcddb030
  416ac1:	mov    ch,0x5e
  416ac3:	popf   
  416ac4:	fsub   DWORD PTR [esp+eax*4+0x4058c9c1]
  416acb:	and    al,0x24
  416acd:	out    0xa6,eax
  416acf:	mov    eax,es
  416ad1:	jnp    0x416b45
  416ad3:	out    0x81,eax
  416ad5:	cmp    esi,0xffffff93
  416ad8:	xor    al,0x7b
  416ada:	mov    edx,DWORD PTR [edi+0x2e658d6a]
  416ae0:	sbb    DWORD PTR [edi],edi
  416ae2:	das    
  416ae3:	push   ecx
  416ae4:	mov    ecx,0xa92cb8d9
  416ae9:	jge    0x416b4c
  416aeb:	rcl    ebp,0xb
  416aee:	inc    ebx
  416aef:	add    DWORD PTR [edx],ecx
  416af1:	mov    eax,0xbdb6da73
  416af6:	xchg   ecx,eax
  416af7:	xlat   BYTE PTR ds:[ebx]
  416af8:	inc    edx
  416af9:	rol    BYTE PTR [eax-0x5],cl
  416afc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416afd:	out    dx,eax
  416afe:	push   edx
  416aff:	and    al,0xbc
  416b01:	retf   
  416b02:	retf   0xa4e8
  416b05:	mov    edi,0xca70a3cc
  416b0a:	idiv   DWORD PTR [ecx]
  416b0c:	jb     0x416aed
  416b0e:	add    al,ah
  416b10:	stos   DWORD PTR es:[edi],eax
  416b11:	mov    ecx,0x5408130d
  416b16:	push   esp
  416b17:	mov    bh,0x10
  416b19:	sbb    al,0xfd
  416b1b:	mov    ch,0xf2
  416b1d:	in     al,dx
  416b1e:	dec    ecx
  416b1f:	hlt    
  416b20:	mov    ?,edx
  416b22:	pop    edx
  416b23:	das    
  416b24:	or     DWORD PTR [edi+0x66c6aad6],0x7bbf8044
  416b2e:	jl     0x416ab5
  416b30:	int    0x69
  416b32:	mov    al,fs:0xf6c3189a
  416b38:	mov    DWORD PTR [edx+0x55],ebx
  416b3b:	loopne 0x416b55
  416b3d:	xor    edx,eax
  416b3f:	mov    ecx,0xec64213
  416b44:	mov    ah,0x84
  416b46:	mov    fs,WORD PTR [esi-0x248572b3]
  416b4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b4d:	pop    edx
  416b4e:	push   esp
  416b4f:	test   eax,0x4ae3a340
  416b54:	lock sub eax,0xe9f21b76
  416b5a:	xchg   BYTE PTR ds:0x89e169bb,cl
  416b60:	mov    DWORD PTR [ebp+0x31b64a07],ebp
  416b66:	mov    dh,0x4b
  416b68:	enter  0x8c3f,0x91
  416b6c:	pop    ecx
  416b6d:	xchg   edi,eax
  416b6e:	je     0x416b68
  416b70:	pop    ss
  416b71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b72:	ss push eax
  416b74:	mov    cl,0xf
  416b76:	inc    eax
  416b77:	call   0xfec:0x56be9ba
  416b7e:	mov    BYTE PTR [eax+ebp*8+0xf21a2bb],bh
  416b85:	xor    DWORD PTR [edi-0x26b61835],edi
  416b8b:	dec    eax
  416b8c:	jecxz  0x416b8e
  416b8e:	xor    eax,0x848d9e68
  416b93:	sbb    DWORD PTR ds:[eax-0x3414e8a2],ecx
  416b9a:	lock bswap esp
  416b9d:	test   BYTE PTR ds:[edi],dh
  416ba0:	icebp  
  416ba1:	fdivr  st(4),st
  416ba3:	jle    0x416b73
  416ba5:	xchg   ecx,eax
  416ba6:	push   ebx
  416ba7:	out    0x67,eax
  416ba9:	mov    cl,0x54
  416bab:	add    DWORD PTR [edi-0x33],ebp
  416bae:	mov    ebp,0xe059d812
  416bb3:	test   edi,0x875c1f2b
  416bb9:	(bad)  
  416bba:	icebp  
  416bbb:	icebp  
  416bbc:	or     ebx,DWORD PTR [esi+0x7aff81b5]
  416bc2:	lods   al,BYTE PTR ds:[esi]
  416bc3:	pop    ecx
  416bc4:	pop    ebx
  416bc5:	sbb    al,0x4
  416bc7:	xor    eax,0x4f0702c0
  416bcc:	mov    ecx,0x72eaefc7
  416bd1:	test   BYTE PTR [esp+eiz*4+0x3797e87e],dl
  416bd8:	scas   eax,DWORD PTR es:[edi]
  416bd9:	pop    es
  416bda:	push   cs
  416bdb:	mov    ebx,0x2d6aafdb
  416be0:	mov    DWORD PTR [edx-0x517e9b72],esi
  416be6:	loope  0x416c50
  416be8:	pusha  
  416be9:	jo     0x416bf5
  416beb:	mov    ah,0x21
  416bed:	xchg   ebp,eax
  416bee:	fimul  WORD PTR gs:[ecx-0x4e1ee204]
  416bf5:	or     al,0x89
  416bf7:	bswap  esp
  416bf9:	repnz adc al,0x1f
  416bfc:	stos   DWORD PTR es:[edi],eax
  416bfd:	mov    edi,edx
  416bff:	push   es
  416c00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c01:	dec    esp
  416c02:	rcr    DWORD PTR [edx+esi*8],1
  416c05:	mov    dl,0x71
  416c07:	ds add ebp,esp
  416c0a:	xor    BYTE PTR [ebp+0x1ed37786],al
  416c10:	and    BYTE PTR [edx],ch
  416c12:	xor    bh,BYTE PTR [ebx+0x3a0d34ae]
  416c18:	inc    edi
  416c19:	cli    
  416c1a:	xor    eax,0x133e62a0
  416c1f:	call   0xa689:0xa49413db
  416c26:	mov    DWORD PTR [ecx],esi
  416c28:	push   esp
  416c29:	rcr    bl,1
  416c2b:	jge    0x416bef
  416c2d:	mov    dh,ah
  416c2f:	jbe    0x416c4b
  416c31:	dec    ebx
  416c32:	test   al,ah
  416c34:	into   
  416c35:	push   edx
  416c36:	pop    es
  416c37:	cmp    eax,0xc95ce634
  416c3c:	add    esp,DWORD PTR [edx+ebx*4+0x4f05c965]
  416c43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c44:	call   0x7922:0xd229447c
  416c4b:	xchg   ecx,eax
  416c4c:	rcl    DWORD PTR [edx+0xd],1
  416c4f:	mov    BYTE PTR [eax+0x707437e1],al
  416c55:	xchg   BYTE PTR ds:[eax+0x9],dh
  416c59:	push   0xd2e42844
  416c5e:	out    dx,eax
  416c5f:	push   es
  416c60:	cs int 0xac
  416c63:	lahf   
  416c64:	cmp    BYTE PTR [ebx+0x7],ah
  416c67:	mov    edx,0x236c2315
  416c6c:	xor    BYTE PTR [edx-0x3f87dfcb],ah
  416c72:	and    DWORD PTR [ecx-0x2141d1d4],ecx
  416c78:	and    al,BYTE PTR [esi]
  416c7a:	cmp    BYTE PTR [ecx],dl
  416c7c:	dec    eax
  416c7d:	out    0x2d,eax
  416c7f:	jecxz  0x416c2e
  416c81:	retf   
  416c82:	xchg   edx,eax
  416c83:	repz adc BYTE PTR [edx+edi*2],ch
  416c87:	or     DWORD PTR [edx+0x169a50f6],edi
  416c8d:	mov    cl,0x7a
  416c8f:	mov    esp,0x13456c8c
  416c94:	or     ebp,DWORD PTR [edx]
  416c96:	rol    DWORD PTR [ebp-0x7cb45000],0xa1
  416c9d:	cmc    
  416c9e:	js     0x416cb0
  416ca0:	in     eax,0xcb
  416ca2:	pop    eax
  416ca3:	xchg   edx,eax
  416ca4:	dec    esp
  416ca5:	mul    BYTE PTR [ebx]
  416ca7:	mov    ah,0x89
  416ca9:	pusha  
  416caa:	xor    DWORD PTR [ebx-0x1d],eax
  416cad:	mov    al,ds:0xdfc3
	...
  416e86:	add    BYTE PTR [eax],al
  416e88:	mov    ?,WORD PTR [ebp-0x1b]
  416e8b:	in     al,dx
  416e8c:	idiv   esp
  416e8e:	(bad)  
  416e8f:	jg     0x416f03
  416e91:	and    eax,0xb21d1474
  416e96:	jmp    FWORD PTR [ebx]
  416e98:	pop    edx
  416e99:	mov    BYTE PTR [ecx],0x0
  416e9c:	and    eax,0xad000007
  416ea1:	xchg   ebx,eax
  416ea2:	cmc    
  416ea3:	mov    ds:0x7ce01a55,al
  416ea8:	popa   
  416ea9:	jnp    0x416e64
  416eab:	nop
  416eac:	scas   eax,DWORD PTR es:[edi]
  416ead:	jae    0x416ea7
  416eaf:	bound  ecx,QWORD PTR [esi-0x16]
  416eb2:	pop    esp
  416eb3:	fnsave [edi+0x1dd2a644]
  416eb9:	imul   ebx,DWORD PTR [esi],0x8f6ec8d5
  416ebf:	pop    ss
  416ec0:	adc    al,0x24
  416ec2:	mov    ah,0x12
  416ec4:	add    bh,al
  416ec6:	(bad)  
  416ec7:	icebp  
  416ec8:	push   ecx
  416ec9:	or     al,0x32
  416ecb:	sbb    DWORD PTR [ecx-0x1b],edx
  416ece:	pop    ds
  416ecf:	dec    ebx
  416ed0:	jbe    0x416f3b
  416ed2:	cmp    cl,al
  416ed4:	add    al,0x7a
  416ed6:	mov    ebp,0xeaea823d
  416edb:	sbb    DWORD PTR [esi+ebp*8-0x4e],edi
  416edf:	jno    0x416ecb
  416ee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ee2:	add    eax,0xea54c0bd
  416ee7:	cmp    BYTE PTR [ebp-0x52],0x4a
  416eeb:	bnd jge 0x416eb4
  416eee:	pop    ecx
  416eef:	push   esi
  416ef0:	das    
  416ef1:	test   al,0x9c
  416ef3:	or     eax,0x8c408dd8
  416ef8:	pop    ds
  416ef9:	shr    DWORD PTR [esi],cl
  416efb:	pop    ss
  416efc:	dec    edx
  416efd:	fwait
  416efe:	rcl    dl,1
  416f00:	adc    bl,BYTE PTR [edi]
  416f02:	or     al,0x8d
  416f04:	pusha  
  416f05:	xchg   edx,eax
  416f06:	cs sahf 
  416f08:	daa    
  416f09:	push   edx
  416f0a:	mul    eax
  416f0c:	jo     0x416f85
  416f0e:	adc    esp,ebp
  416f10:	mov    al,ds:0x9ba50439
  416f15:	sub    edx,ecx
  416f17:	ss push edi
  416f19:	test   al,0x37
  416f1b:	enter  0x39f,0xdc
  416f1f:	and    BYTE PTR [edi-0x54],0x4e
  416f23:	rol    DWORD PTR [ebp-0x4214ffcf],cl
  416f29:	mov    edx,0xb9ced6e8
  416f2e:	out    0x3,eax
  416f30:	mov    dl,0x39
  416f32:	test   al,0x66
  416f34:	into   
  416f35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f36:	ds inc ebp
  416f38:	repnz pop ecx
  416f3a:	xchg   ecx,eax
  416f3b:	aam    0x0
  416f3d:	lock jns 0x416f95
  416f40:	or     BYTE PTR [eax],dh
  416f42:	(bad)  
  416f43:	(bad)  
  416f44:	pop    ecx
  416f45:	push   esi
  416f46:	xchg   ecx,eax
  416f47:	xchg   esi,eax
  416f48:	sbb    al,0xf2
  416f4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f4b:	arpl   WORD PTR [eax-0x5f5fbbf7],cx
  416f51:	call   0x6adc75b4
  416f56:	lahf   
  416f57:	scas   eax,DWORD PTR es:[edi]
  416f58:	cmc    
  416f59:	mov    dh,0xc
  416f5b:	sbb    BYTE PTR [edx+0x76],dl
  416f5e:	mov    ebx,0x75fc37d1
  416f63:	cmp    esi,DWORD PTR [ebx+0x3a]
  416f66:	jmp    0x416fc0
  416f68:	mov    esp,0x1f708a96
  416f6d:	inc    ecx
  416f6e:	add    esp,edi
  416f70:	(bad)  
  416f71:	loopne 0x416f03
  416f73:	xchg   edi,eax
  416f74:	mov    esp,0xe6271d04
  416f79:	or     al,0xfc
  416f7b:	jp     0x416f13
  416f7d:	lods   eax,DWORD PTR ds:[esi]
  416f7e:	int3   
  416f7f:	xchg   ecx,eax
  416f80:	jle    0x416fc1
  416f82:	xor    cl,BYTE PTR [esi]
  416f84:	jmp    0x8db:0x5375f0be
  416f8b:	out    dx,al
  416f8c:	ror    edx,0x14
  416f8f:	xchg   BYTE PTR ds:0xea02c873,bh
  416f95:	xor    eax,DWORD PTR [esp+ebp*1]
  416f98:	sub    eax,0x66e0efa9
  416f9d:	(bad)  
  416f9e:	dec    edi
  416f9f:	scas   al,BYTE PTR es:[edi]
  416fa0:	push   ss
  416fa1:	xor    eax,0xa8348e36
  416fa6:	in     eax,0x7
  416fa8:	pop    edx
  416fa9:	jle    0x416fe1
  416fab:	pop    es
  416fac:	rcl    BYTE PTR [ebx],1
  416fae:	sbb    eax,0xfd4581f9
  416fb3:	inc    ecx
  416fb4:	cdq    
  416fb5:	mov    al,0x63
  416fb7:	ret    
  416fb8:	(bad)  
  416fb9:	mov    cl,0x11
  416fbb:	inc    ebp
  416fbc:	sbb    eax,0x1275dc00
  416fc1:	pop    ebp
  416fc2:	repz mov edx,0x272d8cf2
  416fc8:	dec    edi
  416fc9:	leave  
  416fca:	push   ds
  416fcb:	ins    DWORD PTR es:[edi],dx
  416fcc:	inc    ebx
  416fcd:	xor    esi,ebx
  416fcf:	outs   dx,DWORD PTR ds:[esi]
  416fd0:	(bad)  
  416fd1:	sub    eax,0xa1ee5af4
  416fd6:	inc    ebp
  416fd7:	jnp    0x417048
  416fd9:	jge    0x417001
  416fdb:	mov    edi,0xf230e3ec
  416fe0:	repz sbb eax,0xcde87289
  416fe6:	cmp    al,0xb2
  416fe8:	jb     0x41700a
  416fea:	imul   ebx,DWORD PTR [ebp-0xd],0xf5b0968
  416ff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ff2:	jb     0x417008
  416ff4:	rol    BYTE PTR [edx],1
  416ff6:	cmp    al,0xa
  416ff8:	push   cs
  416ff9:	test   eax,0x1ffe8c2d
  416ffe:	cmp    ecx,ecx
  417000:	jne    0x416f87
  417002:	jnp    0x41700e
  417004:	cs mov ebx,0x6acd2cec
  41700a:	mov    WORD PTR [esi-0x4],fs
  41700d:	cmovo  ebx,DWORD PTR [eax+0x41]
  417011:	test   DWORD PTR [edx+0x1a],edi
  417014:	loop   0x416fbc
  417016:	inc    edx
  417017:	test   eax,0x4c52bc60
  41701c:	sbb    ecx,ebp
  41701e:	push   cs
  41701f:	fld    TBYTE PTR [esi-0x5d]
  417022:	sub    al,0x5d
  417024:	jl     0x416fad
  417026:	mov    ch,0xf1
  417028:	scas   eax,DWORD PTR es:[edi]
  417029:	push   eax
  41702a:	scas   eax,DWORD PTR es:[edi]
  41702b:	mov    bh,0x67
  41702d:	push   cs
  41702e:	cmc    
  41702f:	cmp    ah,BYTE PTR [ebp+0x48752cb0]
  417035:	or     al,0xd
  417037:	sub    BYTE PTR [ebp+0x1c13070f],bl
  41703d:	ss adc al,0x47
  417040:	adc    DWORD PTR [ebx+0x4c],esi
  417043:	lods   al,BYTE PTR ds:[esi]
  417044:	push   0xfffffff2
  417046:	mov    ebp,0xe26b27f2
  41704b:	(bad)  
  41704c:	ins    DWORD PTR es:[edi],dx
  41704d:	pop    edi
  41704e:	data16 sub dl,ch
  417051:	leave  
  417052:	xor    eax,0x494b29bc
  417057:	jp     0x416fe1
  417059:	dec    esp
  41705a:	jmp    0x1716f8d2
  41705f:	mov    eax,ds:0xff0f9aee
  417064:	jnp    0x417034
  417066:	sahf   
  417067:	(bad)  
  417068:	retf   
  417069:	jno    0x417077
  41706b:	xchg   BYTE PTR [edx],ch
  41706d:	cmp    DWORD PTR [ecx+0x70],edi
  417070:	add    DWORD PTR [edi],eax
  417072:	xchg   esi,eax
  417073:	mov    al,0x40
  417075:	push   cs
  417076:	fidivr DWORD PTR ds:0x52bda01f
  41707c:	jmp    FWORD PTR [esi]
  41707e:	sti    
  41707f:	in     al,0x1f
  417081:	xor    al,BYTE PTR [ebx-0x6b]
  417084:	ds arpl cx,dx
  417087:	inc    ecx
  417088:	pop    es
  417089:	lea    ebp,[eax+0x6012ed3e]
  41708f:	popf   
  417090:	jp     0x4170fa
  417092:	pop    eax
  417093:	or     BYTE PTR [edx+0x642c31bf],0x2a
  41709a:	inc    eax
  41709b:	dec    esi
  41709c:	add    eax,0xc96f2e4
  4170a1:	rcl    ah,cl
  4170a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170a4:	dec    ebp
  4170a5:	xchg   ebp,eax
  4170a6:	cld    
  4170a7:	loop   0x4170fc
  4170a9:	xor    dh,bl
  4170ab:	inc    ecx
  4170ac:	dec    edx
  4170ad:	int    0x85
  4170af:	mov    al,ds:0x662fc037
  4170b4:	scas   eax,DWORD PTR es:[edi]
  4170b5:	push   esi
  4170b6:	jb     0x41711e
  4170b8:	jp     0x41710c
  4170ba:	aam    0x70
  4170bc:	imul   ebx,DWORD PTR [ebx],0xe4d7a2d6
  4170c2:	dec    ecx
  4170c3:	cmp    DWORD PTR [ebp-0x1197cdea],esp
  4170c9:	fcomp  QWORD PTR [esi]
  4170cb:	jp     0x4170e2
  4170cd:	jle    0x4170c6
  4170cf:	stos   BYTE PTR es:[edi],al
  4170d0:	add    ah,bl
  4170d2:	push   es
  4170d3:	mov    esi,0xc579320
  4170d8:	repz inc esi
  4170da:	fld    DWORD PTR cs:[edi+0x2c]
  4170de:	es pop edi
  4170e0:	pop    ecx
  4170e1:	jmp    0xffc6:0x91d4194e
  4170e8:	push   edi
  4170e9:	test   eax,0xdabeb23d
  4170ee:	inc    ecx
  4170ef:	push   edi
  4170f0:	pop    es
  4170f1:	addr16 mov esi,0xc864e6a3
  4170f7:	jmp    0xc20d:0xafad1c7a
  4170fe:	xlat   BYTE PTR ds:[ebx]
  4170ff:	inc    esi
  417100:	loop   0x417101
  417102:	xlat   BYTE PTR ds:[ebx]
  417103:	fcom   QWORD PTR [esi]
  417105:	retf   
  417106:	jns    0x4170f9
  417108:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417109:	enter  0x1968,0xc4
  41710d:	sahf   
  41710e:	pop    ebx
  41710f:	fdivr  st(4),st
  417111:	and    esp,ecx
  417113:	adc    eax,ebp
  417115:	jmp    0xb8a6:0x85a36e0e
  41711c:	xor    ah,al
  41711e:	out    0xec,al
  417120:	adc    esi,DWORD PTR [ecx-0x7beb4b28]
  417126:	dec    edx
  417127:	xor    ebp,edi
  417129:	pop    ebx
  41712a:	sbb    BYTE PTR [esi+eax*2+0x79],bh
  41712e:	rol    DWORD PTR [ecx+0x2447cd24],cl
  417134:	lods   al,BYTE PTR ds:[esi]
  417135:	bound  ecx,QWORD PTR [edi+esi*8+0x66]
  417139:	dec    eax
  41713a:	mov    bh,0x57
  41713c:	add    eax,0xaae8c67a
  417141:	fstp   DWORD PTR [edi]
  417143:	imul   DWORD PTR [edi+0x2fb995f4]
  417149:	in     al,0xe2
  41714b:	loop   0x4170fb
  41714d:	ins    BYTE PTR es:[di],dx
  41714f:	(bad)  
  417150:	fsubp  st(1),st
  417152:	and    DWORD PTR [esi-0x72],esp
  417155:	and    DWORD PTR [ebp+0x5d],ecx
  417158:	leave  
  417159:	sar    BYTE PTR [edi+0x4aedd8c2],cl
  41715f:	add    al,0xde
  417161:	mov    al,ds:0x5301c83
  417166:	(bad)  
  417168:	mov    edi,0xee2ce07b
  41716d:	jmp    0xa037:0x5e642cf9
  417174:	inc    esp
  417175:	fdivp  st(4),st
  417177:	adc    edx,ecx
  417179:	mov    edi,0x4a938e8f
  41717e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41717f:	add    BYTE PTR [edx],0x2d
  417182:	adc    BYTE PTR [edi-0x4],ah
  417185:	push   edx
  417186:	out    dx,eax
  417187:	sbb    eax,0x41f0652d
  41718c:	dec    esi
  41718d:	popa   
  41718e:	push   0x66
  417190:	pop    ds
  417191:	cs adc al,0x7a
  417194:	mov    BYTE PTR [ebp+0x46],ch
  417197:	lods   al,BYTE PTR ds:[esi]
  417198:	rcl    DWORD PTR [edx],1
  41719a:	ss aad 0xb2
  41719d:	shr    BYTE PTR [ecx+0x54],0x5e
  4171a1:	push   ecx
  4171a2:	push   esi
  4171a3:	clc    
  4171a4:	xchg   esp,eax
  4171a5:	ja     0x41712e
  4171a7:	scas   eax,DWORD PTR es:[edi]
  4171a8:	sbb    esp,DWORD PTR [esi+0x67]
  4171ab:	mov    eax,0xe92c254e
  4171b0:	mov    esi,0x46ade135
  4171b5:	loopne 0x4171db
  4171b7:	repz frstor [esi+0x3e902680]
  4171be:	gs int3 
  4171c0:	cmp    DWORD PTR [esi-0x36d67f46],edx
  4171c6:	dec    ebx
  4171c7:	pop    ss
  4171c8:	mov    ecx,DWORD PTR [ecx-0x324d0152]
  4171ce:	mov    edi,0xaafa81d2
  4171d3:	and    cl,BYTE PTR [eax+0x44]
  4171d6:	pop    ebx
  4171d7:	push   edi
  4171d8:	mov    ecx,0x3e9db47e
  4171dd:	sbb    ebp,ecx
  4171df:	mov    ebp,0xcd33aa89
  4171e4:	test   eax,0xd6655e5f
  4171e9:	pop    esp
  4171ea:	fstp   QWORD PTR [edi]
  4171ec:	gs dec edx
  4171ee:	out    dx,eax
  4171ef:	es out dx,al
  4171f1:	(bad)  
  4171f3:	js     0x417241
  4171f5:	sub    DWORD PTR [eax],eax
  4171f7:	adc    DWORD PTR ds:0xcdd9339d,eax
  4171fd:	jne    0x41726f
  4171ff:	sbb    DWORD PTR [esi],edx
  417201:	pop    edi
  417202:	add    eax,0x42bd63a5
  417207:	stos   BYTE PTR es:[edi],al
  417208:	inc    esp
  417209:	push   esi
  41720a:	and    DWORD PTR [edi],edi
  41720c:	cmp    edi,DWORD PTR [edx+0x111b3009]
  417212:	push   es
  417213:	getsec 
  417215:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  417217:	xchg   edi,eax
  417218:	mov    al,ds:0x59cab229
  41721d:	jno    0x417234
  41721f:	fs lock nop
  417222:	ds mov dh,0xc6
  417225:	pop    esp
  417226:	retf   
  417227:	ja     0x417258
  417229:	push   ds
  41722a:	icebp  
  41722b:	push   ebp
  41722c:	adc    al,0x6b
  41722e:	out    dx,eax
  41722f:	repnz add bh,BYTE PTR [ecx]
  417232:	lea    esi,[esi+0x40]
  417235:	pop    ebp
  417236:	jae    0x417277
  417238:	aam    0x1
  41723a:	mov    eax,0xa034d879
  41723f:	test   eax,edi
  417241:	cmp    al,0xa0
  417243:	sub    eax,0xd9575034
  417248:	fist   WORD PTR [ecx+0x2]
  41724b:	xchg   edx,eax
  41724c:	(bad)  
  41724d:	out    dx,eax
  41724e:	push   esi
  41724f:	int3   
  417250:	inc    edx
  417252:	pop    es
  417253:	test   DWORD PTR [ebx-0x5a],ebx
  417256:	jno    0x4172b2
  417258:	ret    
  417259:	mov    esi,0xb729dbb7
  41725e:	and    al,0x86
  417260:	inc    edx
  417261:	add    ecx,DWORD PTR [ebx+0x3f]
  417264:	cmp    cl,BYTE PTR [ecx+0x232a6065]
  41726a:	call   0x9ea6:0xf993d697
  417271:	mov    ds:0xb37f5f0c,al
  417276:	inc    edx
  417277:	std    
  417278:	or     al,0xc3
  41727a:	scas   al,BYTE PTR es:[edi]
  41727b:	test   DWORD PTR [esi],ebx
  41727d:	cs repz push cs
  417280:	inc    edi
  417281:	imul   ebx,DWORD PTR [edi],0x89df7698
  417287:	(bad)  
  417288:	and    ebp,esp
  41728a:	and    eax,0x2a0cdaa5
  41728f:	stos   DWORD PTR es:[edi],eax
  417290:	pop    eax
  417291:	inc    eax
  417292:	xor    eax,0xfc4df4ca
  417297:	sbb    eax,0x88f0ff7f
  41729c:	xchg   edi,eax
  41729d:	(bad)  
  41729e:	out    dx,al
  41729f:	inc    DWORD PTR [ebp+ebx*1+0x69]
  4172a3:	repz mov eax,ds:0x3032d4a4
  4172a9:	jo     0x41726d
  4172ab:	mov    ah,0x1e
  4172ad:	sbb    al,0xdf
  4172af:	jecxz  0x41724d
  4172b1:	stos   DWORD PTR es:[edi],eax
  4172b2:	fild   WORD PTR [eax+0x3f]
  4172b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172b6:	pop    ebp
  4172b7:	add    eax,0xf709c36
  4172bc:	outs   dx,BYTE PTR ds:[esi]
  4172bd:	or     BYTE PTR [ebx],dh
  4172bf:	sahf   
  4172c0:	sahf   
  4172c1:	stos   BYTE PTR es:[edi],al
  4172c2:	pop    es
  4172c3:	pop    ecx
  4172c4:	xchg   esi,eax
  4172c5:	dec    esi
  4172c6:	xchg   esp,eax
  4172c7:	sbb    ecx,edi
  4172c9:	inc    edx
  4172ca:	pop    esi
  4172cb:	mov    cl,BYTE PTR [ecx-0x7b5fe47a]
  4172d1:	dec    ecx
  4172d2:	mov    eax,0x396f36c8
  4172d7:	call   0x917e:0x2b5a2ab2
  4172de:	test   al,0xfb
  4172e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172e1:	adc    ecx,DWORD PTR [esi]
  4172e3:	adc    al,0x8f
  4172e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172e6:	or     ah,BYTE PTR [eax-0x38fc5648]
  4172ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172ed:	push   edx
  4172ee:	inc    ebx
  4172ef:	jno    0x4172fc
  4172f1:	cmc    
  4172f2:	mov    eax,0x2550c74a
  4172f7:	ja     0x4172c6
  4172f9:	fst    DWORD PTR [esi-0x1e674f05]
  4172ff:	inc    ecx
  417300:	out    0xa,eax
  417302:	stc    
  417303:	inc    ebx
  417304:	emms   
  417306:	scas   al,BYTE PTR es:[edi]
  417307:	outs   dx,DWORD PTR ds:[esi]
  417308:	or     eax,0x3f908c5
  41730d:	fistp  DWORD PTR [ecx+edi*4]
  417310:	mov    eax,0xc1ef5195
  417315:	dec    edx
  417316:	sti    
  417317:	and    DWORD PTR [edx],0xefb92580
  41731d:	int    0xb8
  41731f:	into   
  417320:	lock ins DWORD PTR es:[edi],dx
  417322:	shl    DWORD PTR ds:0x816c87ad,1
  417328:	dec    ebp
  417329:	sbb    cl,BYTE PTR ss:[edx]
  41732c:	lods   eax,DWORD PTR ds:[esi]
  41732d:	outs   dx,DWORD PTR ds:[esi]
  41732e:	sub    BYTE PTR [ecx+0x48b1d95],bh
  417334:	or     eax,0x2107d039
  417339:	push   cx
  41733b:	popa   
  41733c:	jns    0x4172c6
  41733e:	add    eax,0x4db07f85
  417343:	fwait
  417344:	out    0x57,al
  417346:	je     0x41739a
  417348:	or     edi,ebx
  41734a:	or     edi,esi
  41734c:	pop    ecx
  41734d:	xor    eax,0x806c651c
  417352:	aad    0xeb
  417354:	jmp    0x1958:0x1acc964e
  41735b:	ret    
  41735c:	dec    edi
  41735d:	sbb    esp,DWORD PTR [eax]
  41735f:	xor    BYTE PTR [ecx+0x27],0x5
  417363:	adc    al,0x31
  417365:	dec    eax
  417366:	mov    esp,0x996cd5eb
  41736b:	xor    ebx,0x5e58aaaa
  417371:	dec    ecx
  417372:	push   ecx
  417373:	call   0xf34ed8bc
  417378:	scas   eax,DWORD PTR es:[edi]
  417379:	inc    ebp
  41737a:	mov    ebp,0xb496cd12
  41737f:	jae    0x41737e
  417381:	push   esp
  417382:	pushf  
  417383:	popf   
  417384:	dec    ecx
  417385:	sbb    eax,0x87ac4305
  41738a:	loopne 0x4173ae
  41738c:	daa    
  41738d:	cmp    BYTE PTR [edx],dl
  41738f:	popf   
  417390:	or     BYTE PTR [eax],dl
  417392:	aas    
  417393:	adc    BYTE PTR [eax+0x58],ch
  417396:	sub    dl,bl
  417398:	fadd   DWORD PTR [esi]
  41739a:	push   cs
  41739b:	jmp    0x224cf480
  4173a0:	add    DWORD PTR [edi],eax
  4173a2:	pop    es
  4173a3:	mov    ds:0xb4596782,eax
  4173a8:	push   eax
  4173a9:	cld    
  4173aa:	fisubr WORD PTR [edx+0x67ae2870]
  4173b0:	xchg   BYTE PTR [ebp-0x1e],al
  4173b3:	push   esp
  4173b4:	sbb    ecx,DWORD PTR [ebx-0x65ed7183]
  4173ba:	popf   
  4173bb:	jmp    0x417417
  4173bd:	dec    esi
  4173be:	mov    edi,0x85d296c7
  4173c3:	push   es
  4173c4:	lahf   
  4173c5:	daa    
  4173c6:	mov    al,ds:0x630a408b
  4173cb:	add    dh,al
  4173cd:	test   DWORD PTR [edx-0x7f4249d7],ebp
  4173d3:	mov    cl,0xc7
  4173d5:	xor    BYTE PTR [eax-0x2b1f52e3],dl
  4173db:	jno    0x417378
  4173dd:	int3   
  4173de:	add    eax,0xee5b6329
  4173e3:	sub    al,dl
  4173e5:	jle    0x417457
  4173e7:	jo     0x417376
  4173e9:	cli    
  4173ea:	hlt    
  4173eb:	and    ch,BYTE PTR [edi+0x454d2894]
  4173f1:	jl     0x41746d
  4173f3:	and    edi,DWORD PTR [eax]
  4173f5:	push   edi
  4173f6:	add    bh,BYTE PTR [esi-0x5f8cc9c7]
  4173fc:	pusha  
  4173fd:	dec    edi
  4173fe:	(bad)  
  417401:	into   
  417402:	push   cs
  417403:	jae    0x4173f9
  417405:	push   0x5cd34ee
  41740a:	or     ecx,0x32e6f124
  417410:	jnp    0x417430
  417412:	out    dx,al
  417413:	cmp    al,0x52
  417415:	retf   
  417416:	out    dx,al
  417417:	add    ecx,eax
  417419:	test   al,0xf
  41741b:	inc    esp
  41741c:	xor    al,0xe2
  41741e:	in     al,dx
  41741f:	mov    BYTE PTR [ecx+esi*2-0x52705725],ah
  417426:	fisttp QWORD PTR [ebp+0x1c]
  417429:	(bad)  
  41742a:	xor    DWORD PTR [edi],edx
  41742c:	mov    ch,cl
  41742e:	xchg   ebx,eax
  41742f:	push   cs
  417430:	push   edx
  417431:	sbb    ah,BYTE PTR [ebx+0x1ea053b2]
  417437:	leave  
  417438:	hlt    
  417439:	cmp    al,0x8
  41743b:	inc    esi
  41743c:	sub    ch,bl
  41743e:	out    0xb,eax
  417440:	arpl   WORD PTR [esp+ebx*4],di
  417443:	arpl   WORD PTR [ebx+0x41],cx
  417446:	xchg   ebx,eax
  417447:	push   eax
  417448:	jmp    ecx
  41744a:	and    eax,0x295ef453
  41744f:	jns    0x41742f
  417451:	mov    ch,0x66
  417453:	inc    ebp
  417454:	pop    es
  417455:	ins    BYTE PTR es:[edi],dx
  417456:	mov    dl,0x4e
  417458:	cs pop esp
  41745a:	mov    bl,BYTE PTR [ebx]
  41745c:	outs   dx,DWORD PTR ds:[esi]
  41745d:	mov    al,0xc9
  41745f:	sub    DWORD PTR [edx-0x4fcd70b8],ecx
  417465:	add    dh,BYTE PTR [edx-0x18]
  417468:	mov    DWORD PTR [ecx],esi
  41746a:	aad    0x5f
  41746c:	outs   dx,DWORD PTR ds:[esi]
  41746d:	imul   ecx,DWORD PTR [ebp+0x4ee23c82],0xc6ec01ba
  417477:	scas   al,BYTE PTR es:[edi]
  417478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417479:	add    edx,DWORD PTR [ebx-0x4b5990e9]
  41747f:	retf   
  417480:	xor    eax,DWORD PTR [ecx]
  417482:	(bad)  
  417483:	sbb    al,0xfd
  417485:	test   DWORD PTR [edx+0x2e02d2e],edx
  41748b:	jnp    0x4174e0
  41748d:	add    eax,0x5d8190fd
  417492:	js     0x41749b
  417494:	pushf  
  417495:	pop    edi
  417496:	out    dx,al
  417497:	xor    al,0xfc
  417499:	pushf  
  41749a:	jns    0x417445
  41749c:	call   0x8ddbf26b
  4174a1:	inc    ebp
  4174a2:	or     esi,edi
  4174a4:	imul   edi,DWORD PTR [edx+ebx*8],0xebc8d920
  4174ab:	add    eax,0x9f513b6f
  4174b0:	mov    edi,0x7633c45c
  4174b5:	pop    es
  4174b6:	vcvtdq2pd xmm2,xmm1
  4174ba:	daa    
  4174bb:	(bad)  
  4174bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174bd:	pop    esi
  4174be:	pop    eax
  4174bf:	imul   edi,DWORD PTR [ebx],0xffffff81
  4174c2:	cmp    DWORD PTR [edi],ecx
  4174c4:	add    al,0xaf
  4174c6:	cmp    ebx,DWORD PTR [edx]
  4174c8:	sub    al,0x85
  4174ca:	(bad)  
  4174cb:	fmul   st,st(1)
  4174cd:	call   FWORD PTR [edi]
  4174cf:	xchg   esi,eax
  4174d0:	loope  0x417478
  4174d2:	lods   eax,DWORD PTR ds:[esi]
  4174d3:	pop    ds
  4174d4:	jecxz  0x417504
  4174d6:	sub    BYTE PTR [edi],al
  4174d8:	hlt    
  4174d9:	call   0x4eed:0xa49d1c60
  4174e0:	int3   
  4174e1:	iret   
  4174e2:	ds or  al,0xae
  4174e5:	jmp    0x4497065d
  4174ea:	mov    ds:0xb39be7ac,eax
  4174ef:	fdiv   st(6),st
  4174f1:	pop    esi
  4174f2:	(bad)  
  4174f3:	fisttp DWORD PTR [ecx-0x18]
  4174f6:	and    bl,dh
  4174f8:	adc    BYTE PTR [eax-0x19e373d5],dl
  4174fe:	push   edx
  4174ff:	out    dx,al
  417500:	aaa    
  417501:	jle    0x417543
  417503:	(bad)  
  417505:	test   al,0xbd
  417507:	or     al,0xda
  417509:	ins    BYTE PTR es:[edi],dx
  41750a:	pop    ebp
  41750b:	mov    al,0x6a
  41750d:	push   cs
  41750e:	lods   eax,DWORD PTR ds:[esi]
  41750f:	jg     0x41754a
  417511:	jns    0x4174da
  417513:	mov    dl,0xe7
  417515:	mov    ds:0x49fec8c,eax
  41751a:	call   0x6cd8:0x87a26505
  417521:	xchg   ecx,eax
  417522:	or     al,0x3
  417524:	add    ecx,DWORD PTR [ecx]
  417526:	xor    BYTE PTR [esp+esi*8-0x2bc3f3ba],dl
  41752d:	xchg   ebx,eax
  41752e:	ja     0x4174c3
  417530:	add    al,BYTE PTR [edi]
  417532:	stos   BYTE PTR es:[edi],al
  417533:	(bad)  [edi]
  417535:	std    
  417536:	jo     0x417591
  417538:	retf   0xb26b
  41753b:	fs adc al,0x93
  41753e:	cs dec ebx
  417540:	mov    al,0xf2
  417542:	shr    BYTE PTR [ebp+0x5ca7afdc],cl
  417548:	jmp    0x4174f9
  41754a:	pop    ebp
  41754b:	out    0x54,eax
  41754d:	cmp    al,0xad
  41754f:	adc    BYTE PTR [esi-0x6a],bh
  417552:	push   esp
  417553:	sar    eax,0xa
  417556:	call   0x1b5d:0x49434e69
  41755d:	fisub  WORD PTR [eax+0x7b6a9e04]
  417563:	mov    eax,ds:0xb637cc90
  417568:	jns    0x4175cd
  41756a:	mov    ah,BYTE PTR gs:[ebx+0xdffd671]
  417571:	push   edi
  417572:	test   BYTE PTR [esi-0x50],ah
  417575:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417576:	dec    ebp
  417577:	(bad)  
  417579:	or     esi,DWORD PTR [esi-0x3e]
  41757c:	jae    0x417520
  41757e:	(bad)  
  41757f:	call   0xe2f9e8d2
  417584:	pop    esi
  417585:	add    al,BYTE PTR [esi+edi*2+0x6f85bbb7]
  41758c:	lock cmp edx,DWORD PTR [esi-0x40]
  417590:	pop    esi
  417591:	jmp    0x4175f1
  417593:	jo     0x41751d
  417595:	add    ecx,DWORD PTR [esi-0x1]
  417598:	(bad)  
  41759a:	inc    edx
  41759b:	inc    eax
  41759c:	jmp    0xd25c9f47
  4175a1:	xchg   esp,eax
  4175a2:	or     DWORD PTR [edx+edx*8-0x18638202],eax
  4175a9:	aad    0xfa
  4175ab:	rcr    BYTE PTR [eax-0x411aa3c],cl
  4175b1:	ins    BYTE PTR es:[edi],dx
  4175b2:	sub    DWORD PTR [esi+eiz*8+0x563c6efb],edx
  4175b9:	imul   ecx,DWORD PTR [esi-0x3c9ce475],0xedaa88d0
  4175c3:	icebp  
  4175c4:	scas   al,BYTE PTR es:[edi]
	...
  417791:	arpl   WORD PTR [esi+0x63ff63be],bx
  417797:	call   FWORD PTR [esi-0x676d79db]
  41779d:	repnz es fsubp st(2),st
  4177a1:	adc    BYTE PTR [eax+0x7250001],bh
  4177a7:	add    BYTE PTR [eax],al
  4177a9:	gs mov ah,0xd7
  4177ac:	test   edx,ebp
  4177ae:	mov    ah,0x73
  4177b0:	inc    ebx
  4177b1:	cmp    dl,BYTE PTR [edi]
  4177b3:	enter  0x5a7d,0xea
  4177b7:	iret   
  4177b8:	mov    edx,0xcf2043d7
  4177bd:	rcr    DWORD PTR [ebx+0x5e],1
  4177c0:	test   DWORD PTR [esi+0x70b784c0],0x4cbd6d72
  4177ca:	mov    eax,0x56463d2
  4177cf:	adc    ah,al
  4177d1:	dec    esi
  4177d2:	pop    ss
  4177d3:	(bad)  
  4177d4:	cmp    DWORD PTR [esi-0x504d6859],edx
  4177da:	fist   DWORD PTR ds:0x1fcd7671
  4177e0:	sbb    al,0xa3
  4177e2:	fmul   QWORD PTR [edx+0xfab2fb4]
  4177e8:	inc    edi
  4177e9:	xchg   esi,eax
  4177ea:	and    edi,DWORD PTR [eax-0x4f69951f]
  4177f0:	out    0x58,al
  4177f2:	sub    esp,edi
  4177f4:	ror    DWORD PTR [edx+0x283ab0f7],1
  4177fa:	(bad)  
  4177fb:	push   edi
  4177fc:	das    
  4177fd:	push   edx
  4177fe:	sbb    ebx,DWORD PTR [ebx-0x64]
  417801:	imul   eax,DWORD PTR [ecx],0xffffffcf
  417804:	xchg   ecx,eax
  417805:	sub    al,0xca
  417807:	dec    ecx
  417808:	and    BYTE PTR [edi-0x52],al
  41780b:	inc    esi
  41780c:	fistp  DWORD PTR [esi-0x71]
  41780f:	fstp   TBYTE PTR [edx-0x7d56c310]
  417815:	or     eax,0xacf5b55c
  41781a:	adc    cl,BYTE PTR ds:0x95970d0e
  417820:	mov    ah,0x2d
  417822:	mov    dh,0x30
  417824:	add    BYTE PTR [esi-0x6614502a],cl
  41782a:	stc    
  41782b:	push   0x3c
  41782d:	scas   al,BYTE PTR es:[edi]
  41782e:	outs   dx,DWORD PTR ds:[esi]
  41782f:	mov    ebp,0x1508b477
  417834:	pop    ss
  417835:	inc    edx
  417836:	fild   DWORD PTR [edi-0x188c1dd0]
  41783c:	adc    BYTE PTR [eax-0x71],0x50
  417840:	push   esp
  417841:	cmp    DWORD PTR [esi-0x7e],eax
  417844:	in     al,0xbf
  417846:	or     esp,DWORD PTR [edi-0x6f]
  417849:	cmp    ch,BYTE PTR [edx-0x20]
  41784c:	jae    0x41789a
  41784e:	pop    edi
  41784f:	loopne 0x417827
  417851:	or     DWORD PTR [ebx+0x77],edi
  417854:	pop    edi
  417855:	(bad)  
  417856:	pop    edi
  417857:	xchg   ebx,eax
  417858:	jp     0x41784a
  41785a:	xchg   bh,ah
  41785c:	mov    dh,0x5c
  41785e:	jo     0x41789e
  417860:	adc    eax,0xd796b222
  417865:	xchg   esi,eax
  417866:	mov    cl,0x71
  417868:	mov    edx,0x45e34015
  41786d:	outs   dx,BYTE PTR ds:[si]
  41786f:	in     eax,dx
  417870:	fnstenv [edx+0x1a6256af]
  417876:	xchg   ebp,eax
  417877:	repz mov edi,0x33267111
  41787d:	mov    ch,0x94
  41787f:	scas   al,BYTE PTR es:[edi]
  417880:	xor    BYTE PTR [eax+0x67ebb60a],bl
  417886:	stc    
  417887:	shl    BYTE PTR [ebx],cl
  417889:	dec    ebx
  41788a:	dec    edx
  41788b:	mov    ah,0xbd
  41788d:	xchg   esi,eax
  41788e:	ins    DWORD PTR es:[edi],dx
  41788f:	(bad)  
  417890:	daa    
  417891:	jp     0x417823
  417893:	add    DWORD PTR [eax],ebp
  417895:	push   edi
  417896:	sbb    ch,BYTE PTR [edi+0x5b]
  417899:	xchg   DWORD PTR [ebx+0xcfc8b8a],edx
  41789f:	push   esi
  4178a0:	loop   0x4178c9
  4178a2:	push   cs
  4178a3:	push   0xffffffdb
  4178a5:	mov    al,0x4b
  4178a7:	pop    edi
  4178a8:	fistp  QWORD PTR [edx+0x8dbbff0]
  4178ae:	sub    dh,0x33
  4178b1:	sbb    BYTE PTR [edi-0x2d],bl
  4178b4:	sub    BYTE PTR cs:[ebx],ah
  4178b7:	adc    DWORD PTR [edi+0x13],ebp
  4178ba:	sahf   
  4178bb:	rol    BYTE PTR [ebx-0x31],1
  4178be:	mov    ebx,0x46af567f
  4178c3:	or     BYTE PTR [ecx-0x7b82e601],0xe5
  4178ca:	adc    al,0xeb
  4178cc:	mov    WORD PTR [edi],es
  4178ce:	jbe    0x417918
  4178d0:	inc    eax
  4178d1:	push   ebx
  4178d2:	push   cs
  4178d3:	test   al,0xc3
  4178d5:	pause  
  4178d7:	jmp    FWORD PTR [esi]
  4178d9:	and    eax,0xa997b2bf
  4178de:	imul   ebp,edx,0x67
  4178e1:	in     al,dx
  4178e2:	and    bh,BYTE PTR [eax]
  4178e4:	ss out 0x57,al
  4178e7:	aad    0x39
  4178e9:	and    al,0xbf
  4178eb:	and    DWORD PTR ss:[eax],ebp
  4178ee:	je     0x4178d1
  4178f0:	jmp    0x9b94251e
  4178f5:	sbb    bh,BYTE PTR [eax+0x19]
  4178f8:	out    0x9c,al
  4178fa:	(bad)  
  4178fb:	cld    
  4178fc:	shl    DWORD PTR [edi-0x33],cl
  4178ff:	or     DWORD PTR [edi+ebp*4+0xc7cbb9f],0x63
  417907:	nop
  417908:	push   0x3
  41790a:	push   esp
  41790b:	cmc    
  41790c:	pop    edi
  41790d:	jnp    0x4178f9
  41790f:	enter  0xaff5,0xb3
  417913:	jb     0x4178f4
  417915:	jb     0x417961
  417917:	adc    eax,ebp
  417919:	and    al,0x3a
  41791b:	cs mov al,0x85
  41791e:	ins    DWORD PTR es:[edi],dx
  41791f:	repnz mov cl,BYTE PTR [eax+0x41]
  417923:	adc    al,0x88
  417925:	mov    bl,0x44
  417927:	jle    0x417979
  417929:	fild   QWORD PTR [esi]
  41792b:	mov    ds:0xd88d998d,al
  417930:	popf   
  417931:	std    
  417932:	cmp    esi,edx
  417934:	int    0x96
  417936:	out    0xdc,al
  417938:	jl     0x417968
  41793a:	sbb    dl,BYTE PTR fs:[edi-0xe84c1aa]
  417941:	or     eax,0x8e3c71c1
  417946:	pop    edi
  417947:	jb     0x417929
  417949:	mov    al,0xb7
  41794b:	jmp    FWORD PTR gs:[ecx+0x4ff345e4]
  417952:	clc    
  417953:	jecxz  0x41794d
  417955:	push   esp
  417956:	div    BYTE PTR [edx]
  417958:	dec    esp
  417959:	add    DWORD PTR [esi],ecx
  41795b:	xchg   edi,eax
  41795c:	add    al,0x6f
  41795e:	das    
  41795f:	mov    ah,0x42
  417961:	adc    bh,BYTE PTR fs:[ecx*1+0x75373a2c]
  417969:	out    0x1c,al
  41796b:	mov    cl,0x17
  41796d:	daa    
  41796e:	lahf   
  41796f:	sti    
  417970:	mov    edi,0x8611fca7
  417975:	mov    esi,0x90a97d82
  41797a:	push   ebx
  41797b:	push   esp
  41797c:	test   al,0xd3
  41797e:	and    BYTE PTR [ebx],ah
  417980:	push   edi
  417981:	push   ss
  417982:	jmp    0xd1003b2b
  417987:	mov    BYTE PTR [edx+0x39],ah
  41798a:	sbb    al,0x16
  41798c:	addr16 push edi
  41798e:	into   
  41798f:	mov    ah,0xf5
  417991:	xor    eax,0x8251f5cf
  417996:	add    bh,dh
  417998:	scas   al,BYTE PTR es:[edi]
  417999:	sub    ebx,DWORD PTR [ecx]
  41799b:	inc    edi
  41799c:	popa   
  41799d:	(bad)  
  41799e:	cmc    
  41799f:	xor    al,BYTE PTR [ecx+0x4a52988e]
  4179a5:	out    dx,eax
  4179a6:	jb     0x417a02
  4179a8:	jb     0x417980
  4179aa:	and    al,0xb3
  4179ac:	addr16 in al,0x80
  4179af:	scas   eax,DWORD PTR es:[edi]
  4179b0:	jmp    0x23ad:0xf0f3c1e4
  4179b7:	pop    edx
  4179b8:	dec    edx
  4179b9:	inc    eax
  4179ba:	scas   eax,DWORD PTR es:[edi]
  4179bb:	xchg   BYTE PTR ds:0x8c0f0189,al
  4179c1:	sbb    bh,al
  4179c3:	test   eax,0x241faf97
  4179c8:	stos   BYTE PTR es:[edi],al
  4179c9:	hlt    
  4179ca:	adc    eax,0xfbea15d5
  4179cf:	scas   eax,DWORD PTR es:[edi]
  4179d0:	xchg   ebp,eax
  4179d1:	call   0xb1ef:0x581648c4
  4179d8:	dec    edx
  4179d9:	call   0xa1e9:0x6bf34b76
  4179e0:	pop    esp
  4179e1:	data16 xor BYTE PTR [esi-0x6ceb506c],0x40
  4179e9:	pop    esi
  4179ea:	jl     0x417a18
  4179ec:	cli    
  4179ed:	pop    ss
  4179ee:	loope  0x41798d
  4179f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179f1:	push   0x57654ee6
  4179f6:	sahf   
  4179f7:	test   eax,0xa9b83953
  4179fc:	mov    ebp,0x21e0adec
  417a01:	jne    0x417a73
  417a03:	or     BYTE PTR [ebx],bl
  417a05:	and    BYTE PTR [ebp-0x6171fdb2],cl
  417a0b:	call   0x9824:0x3e2789b4
  417a12:	div    BYTE PTR [ebx-0x6df1380e]
  417a18:	int3   
  417a19:	lds    esp,FWORD PTR [ecx]
  417a1b:	cmp    ah,dl
  417a1d:	in     al,dx
  417a1e:	ds jle 0x417a18
  417a21:	ret    0x4959
  417a24:	mov    al,ds:0xb1f925e7
  417a29:	push   esp
  417a2a:	fnsave [edi]
  417a2c:	loopne 0x4179d5
  417a2e:	sbb    al,0xa2
  417a30:	inc    esi
  417a31:	xchg   BYTE PTR [ecx-0x53a74df4],ah
  417a37:	or     dh,BYTE PTR [edi+0x48a094ca]
  417a3d:	xchg   ebx,eax
  417a3e:	mov    bh,0x2c
  417a40:	sub    esp,ecx
  417a42:	outs   dx,DWORD PTR ds:[esi]
  417a43:	sub    eax,DWORD PTR ds:0x3ac5908e
  417a49:	mov    eax,ds:0x4430d941
  417a4e:	stos   BYTE PTR es:[edi],al
  417a4f:	xchg   edx,eax
  417a50:	push   edi
  417a51:	cli    
  417a52:	sub    BYTE PTR [ecx+0x60],dh
  417a55:	add    bl,ch
  417a57:	add    edi,ebx
  417a59:	cmp    DWORD PTR [esi],0x6f088c0
  417a5f:	sub    ch,cl
  417a61:	sbb    DWORD PTR [edi],esp
  417a63:	adc    bl,BYTE PTR [edi+0xf]
  417a66:	(bad)  
  417a67:	xchg   edx,eax
  417a68:	inc    ebx
  417a69:	mov    esp,DWORD PTR [eax+edi*8-0x43]
  417a6d:	mov    al,0xde
  417a6f:	jmp    0x11f15a35
  417a74:	ss iret 
  417a76:	mov    esi,0x9be118c9
  417a7b:	lahf   
  417a7c:	outs   dx,BYTE PTR ds:[esi]
  417a7d:	mov    ah,BYTE PTR [esi+0x764098f4]
  417a83:	adc    BYTE PTR [ebp+eiz*1+0x38],bh
  417a87:	(bad)  
  417a88:	push   ebp
  417a89:	test   BYTE PTR ds:0x5cf06b27,ch
  417a8f:	loopne 0x417a4a
  417a91:	inc    edi
  417a92:	test   BYTE PTR [edx],0x8a
  417a95:	ss fdivp st(0),st
  417a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a99:	out    0xc6,al
  417a9b:	retf   
  417a9c:	aaa    
  417a9d:	cli    
  417a9e:	sub    BYTE PTR [esi+ebx*8-0x24627a58],ah
  417aa5:	fxch   st(6)
  417aa7:	call   0x58b5:0x3e21d5f4
  417aae:	dec    ebp
  417aaf:	pop    ecx
  417ab0:	out    0x7,eax
  417ab2:	mov    edx,ebx
  417ab4:	gs ins BYTE PTR es:[edi],dx
  417ab6:	ins    BYTE PTR es:[edi],dx
  417ab7:	fwait
  417ab8:	xchg   BYTE PTR [ebp-0x11ff0b8f],al
  417abe:	add    eax,DWORD PTR [edx-0x6e]
  417ac1:	mov    ch,0x3e
  417ac3:	imul   esi,esp,0xa036af6a
  417ac9:	imul   DWORD PTR [esi+0x51d72cc7]
  417acf:	daa    
  417ad0:	xchg   ebx,eax
  417ad1:	add    eax,0xe11113a3
  417ad6:	js     0x417a8a
  417ad8:	outs   dx,BYTE PTR ds:[esi]
  417ad9:	test   eax,0xec9b523a
  417ade:	pop    edi
  417adf:	hlt    
  417ae0:	mov    ah,0x45
  417ae2:	mov    ebp,DWORD PTR [ecx+0x5847a0b1]
  417ae8:	enter  0xd410,0xe1
  417aec:	push   ebx
  417aed:	mov    BYTE PTR [edi],ah
  417aef:	in     eax,dx
  417af0:	dec    eax
  417af1:	and    DWORD PTR [ecx+0x3],eax
  417af4:	dec    edx
  417af5:	sbb    BYTE PTR [edx+0x5182021d],bl
  417afb:	dec    edi
  417afc:	inc    esp
  417afd:	adc    BYTE PTR [ecx-0x3026115],bh
  417b03:	frstor [ebx]
  417b05:	in     al,dx
  417b06:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b08:	or     dh,cl
  417b0a:	xor    cl,cl
  417b0c:	cmovle edx,ebx
  417b0f:	imul   edx,DWORD PTR [edi+0x6c],0xffdf379a
  417b16:	cli    
  417b17:	(bad)  
  417b18:	sub    dl,BYTE PTR [ebx+ebx*8]
  417b1b:	jne    0x417ae6
  417b1d:	cmp    al,0xf0
  417b1f:	jne    0x417b21
  417b21:	in     al,dx
  417b22:	cli    
  417b23:	shl    DWORD PTR [edx+edx*4-0x9],1
  417b27:	outs   dx,DWORD PTR ds:[esi]
  417b28:	pop    esi
  417b29:	sub    al,0x4a
  417b2b:	in     eax,dx
  417b2c:	lock je 0x417ae7
  417b2f:	push   edi
  417b30:	loope  0x417b71
  417b32:	cdq    
  417b33:	and    eax,0x37edafb9
  417b38:	nop
  417b39:	lds    eax,FWORD PTR [ecx+edi*1-0x4e51f432]
  417b40:	iret   
  417b41:	mov    ds:0x5a12a90e,al
  417b46:	outs   dx,DWORD PTR ds:[esi]
  417b47:	aam    0xf4
  417b49:	pop    es
  417b4a:	js     0x417b2e
  417b4c:	xchg   ecx,eax
  417b4d:	push   edi
  417b4e:	jl     0x417af2
  417b50:	js     0x417b40
  417b52:	lods   al,BYTE PTR ds:[esi]
  417b53:	xchg   esp,eax
  417b54:	sub    dh,BYTE PTR [ecx+0xd]
  417b57:	pop    es
  417b58:	cmp    al,0xc9
  417b5a:	mov    ds:0x72407f27,eax
  417b5f:	adc    al,0x85
  417b61:	out    dx,al
  417b62:	out    0xbc,eax
  417b64:	aad    0x90
  417b66:	div    BYTE PTR [esi]
  417b68:	push   ecx
  417b69:	adc    eax,0x8d5d0053
  417b6e:	pop    ecx
  417b6f:	dec    ebp
  417b70:	dec    ebp
  417b71:	ret    
  417b72:	test   ch,al
  417b74:	and    edi,DWORD PTR [ebx]
  417b76:	fstp   TBYTE PTR [ebp+0x20dea04c]
  417b7c:	push   ss
  417b7d:	cmc    
  417b7e:	sub    al,0x7e
  417b80:	xor    ecx,DWORD PTR [ebx+0x6e]
  417b83:	adc    DWORD PTR [eax-0x7a4a0c9c],ebx
  417b89:	scas   eax,DWORD PTR es:[edi]
  417b8a:	inc    ebp
  417b8b:	dec    ebx
  417b8c:	inc    esi
  417b8d:	imul   BYTE PTR [ebp+0x12]
  417b90:	cmp    ecx,edx
  417b92:	add    bl,BYTE PTR [ebx+edx*8-0x19]
  417b96:	inc    ebp
  417b97:	(bad)  
  417b98:	inc    esi
  417b99:	outs   dx,DWORD PTR ds:[esi]
  417b9a:	xchg   esp,eax
  417b9b:	push   ds
  417b9c:	cmp    edx,esp
  417b9e:	push   0xffffffae
  417ba0:	(bad)  
  417ba1:	and    DWORD PTR [ebx],edx
  417ba3:	sbb    bh,BYTE PTR ds:0xaebadf9d
  417ba9:	xor    cl,BYTE PTR [ebx]
  417bab:	fst    QWORD PTR [ecx+edi*8]
  417bae:	imul   edx,DWORD PTR [edi-0x5b957e36],0xffffffd9
  417bb5:	mov    DWORD PTR [ecx],ebx
  417bb7:	stc    
  417bb8:	arpl   WORD PTR [edx],si
  417bba:	mov    esp,0xda4a115c
  417bbf:	pop    esi
  417bc0:	and    ah,BYTE PTR [edx+0x34]
  417bc3:	pmulhuw mm3,QWORD PTR [esi+0x53]
  417bc7:	(bad)  
  417bc8:	push   edi
  417bc9:	scas   eax,DWORD PTR es:[edi]
  417bca:	(bad)  
  417bcb:	sub    al,0x68
  417bcd:	cmp    BYTE PTR [eax+0x23263cfb],cl
  417bd3:	add    eax,0x5d057764
  417bd8:	std    
  417bd9:	cmp    DWORD PTR [ebx-0xe],eax
  417bdc:	add    DWORD PTR [edx-0x61],ebp
  417bdf:	out    dx,eax
  417be0:	jle    0x417bbc
  417be2:	bound  ecx,QWORD PTR [edi+0x78514449]
  417be8:	inc    esi
  417be9:	push   edx
  417bea:	icebp  
  417beb:	inc    esp
  417bec:	out    dx,eax
  417bed:	loop   0x417c6a
  417bef:	call   0xf3692ea1
  417bf4:	xchg   edx,eax
  417bf5:	jp     0x417be8
  417bf7:	mov    al,0xda
  417bf9:	pop    ss
  417bfa:	ds pop edx
  417bfc:	xchg   ebp,eax
  417bfd:	dec    ebp
  417bfe:	or     DWORD PTR [ebp-0x2],0x191822f8
  417c05:	ret    
  417c06:	cs icebp 
  417c08:	fnsave [eax+0x44]
  417c0b:	rcl    BYTE PTR [ecx-0x277eeb05],1
  417c11:	fist   WORD PTR ds:0xfd5dbda1
  417c17:	lahf   
  417c18:	push   0x46757682
  417c1d:	inc    ebx
  417c1e:	push   ebx
  417c1f:	cmp    cl,BYTE PTR [edx]
  417c21:	push   ecx
  417c22:	sbb    bh,BYTE PTR [edx+0x11]
  417c25:	lds    ebx,FWORD PTR [ecx]
  417c27:	inc    esp
  417c28:	pop    ebp
  417c29:	pusha  
  417c2a:	fistp  DWORD PTR [ebx+0x5ccbf65a]
  417c30:	push   esi
  417c31:	mov    ch,0x7e
  417c33:	ds pop ebp
  417c35:	sbb    eax,0x5bb72fab
  417c3a:	jns    0x417bd1
  417c3c:	cdq    
  417c3d:	leave  
  417c3e:	pop    ebp
  417c3f:	adc    eax,0x50e1d969
  417c44:	hlt    
  417c45:	call   0x90d8:0x2f50c87
  417c4c:	daa    
  417c4d:	lock or al,0xd8
  417c50:	xor    eax,0x4bd87b68
  417c55:	call   0x599f:0x7d2a3b09
  417c5c:	mov    dl,0xed
  417c5e:	xor    al,0xe4
  417c60:	call   0x32554c40
  417c65:	jmp    0x417cd3
  417c67:	inc    ebx
  417c68:	pop    eax
  417c69:	jl     0x417cd1
  417c6b:	out    0xde,al
  417c6d:	jecxz  0x417cc2
  417c6f:	inc    edx
  417c70:	sbb    ch,BYTE PTR [eax]
  417c72:	loop   0x417ced
  417c74:	and    eax,DWORD PTR [eax-0x2c]
  417c77:	ins    DWORD PTR es:[edi],dx
  417c78:	cmp    al,BYTE PTR [ecx]
  417c7a:	cmp    cl,bh
  417c7c:	ds adc eax,0x53f1d459
  417c82:	ss jmp 0x3ebb:0x8f11e758
  417c8a:	add    BYTE PTR [ebp+0x39],cl
  417c8d:	adc    BYTE PTR [esi+0x7006d24e],ch
  417c93:	pop    edi
  417c94:	sbb    al,0x28
  417c96:	repz mov al,0x79
  417c99:	mov    WORD PTR [bp+si-0xc],?
  417c9d:	xor    BYTE PTR [esi],bh
  417c9f:	sbb    eax,0xb3e421a6
  417ca4:	scas   al,BYTE PTR es:[edi]
  417ca5:	mov    edx,0xc8d436b3
  417caa:	dec    edi
  417cab:	sub    bh,BYTE PTR [ecx+edi*1-0x79]
  417caf:	or     eax,0xe48162a1
  417cb4:	dec    eax
  417cb5:	fwait
  417cb6:	push   cs
  417cb7:	lods   eax,DWORD PTR ds:[esi]
  417cb8:	(bad)  
  417cb9:	data16 mov bh,0xcf
  417cbc:	jge    0x417c65
  417cbe:	les    ebp,FWORD PTR [edi+0x14ad7627]
  417cc4:	or     ecx,DWORD PTR [esi+0x19]
  417cc7:	(bad)  
  417cc8:	sti    
  417cc9:	int    0x11
  417ccb:	jge    0x417c54
  417ccd:	push   0x7495d3a6
  417cd2:	out    dx,eax
  417cd3:	outs   dx,DWORD PTR ds:[esi]
  417cd4:	add    ah,cl
  417cd6:	cdq    
  417cd7:	adc    eax,0xf6661286
  417cdc:	adc    al,0x72
  417cde:	lea    ebp,[ebp-0x1bc426e5]
  417ce4:	or     eax,0x13890164
  417ce9:	mov    ebp,0xf8c34bab
  417cee:	add    al,0x6a
  417cf0:	or     al,0x6
  417cf2:	jle    0x417c76
  417cf4:	stos   BYTE PTR es:[edi],al
  417cf5:	bound  esi,QWORD PTR [ecx+0x18]
  417cf8:	adc    eax,0x8ad17a27
  417cfd:	ds ins DWORD PTR es:[edi],dx
  417cff:	js     0x417d78
  417d01:	cld    
  417d02:	cwde   
  417d03:	dec    esp
  417d04:	add    al,0xad
  417d06:	test   eax,0xe222b008
  417d0b:	hlt    
  417d0c:	es push ss
  417d0e:	cld    
  417d0f:	or     dh,BYTE PTR ds:0xfcaabc65
  417d15:	pop    ebx
  417d16:	fdiv   DWORD PTR [eax+0x35e9a7c0]
  417d1c:	dec    ebp
  417d1d:	popf   
  417d1e:	adc    esi,edx
  417d20:	das    
  417d21:	cs out 0x82,al
  417d24:	mov    dh,0xb8
  417d26:	xor    eax,0xd0a7a21c
  417d2b:	sub    ebp,esi
  417d2d:	int    0x4e
  417d2f:	outs   dx,DWORD PTR ds:[esi]
  417d30:	and    eax,0x123effe4
  417d35:	inc    ecx
  417d36:	sbb    esp,DWORD PTR [edi+0x13690127]
  417d3c:	fdiv   QWORD PTR [edx+0x2f092e94]
  417d42:	pushf  
  417d43:	mov    esp,0xf9b6b262
  417d48:	pop    esi
  417d49:	push   es
  417d4a:	(bad)  
  417d4b:	(bad)  
  417d4c:	jns    0x417d7b
  417d4e:	fwait
  417d4f:	sub    bl,cl
  417d51:	xor    ch,bh
  417d53:	test   DWORD PTR [ecx],esp
  417d55:	adc    BYTE PTR [ebx],0x8f
  417d58:	dec    edx
  417d59:	xchg   esi,eax
  417d5a:	sbb    eax,0xba14d932
  417d5f:	and    al,0xfe
  417d61:	ror    BYTE PTR [ecx],1
  417d63:	and    esi,DWORD PTR [eax+0x2e1f450d]
  417d69:	jmp    0x164d7f9c
  417d6e:	push   esp
  417d6f:	cmp    al,0xb6
  417d71:	push   cs
  417d72:	adc    eax,0x11f4743f
  417d77:	sub    eax,0x73334d4c
  417d7c:	xor    al,0x94
  417d7e:	or     eax,0x15a5602c
  417d83:	imul   edi,DWORD PTR [edx+0x3e],0x4e284788
  417d8a:	in     eax,0x6e
  417d8c:	pop    es
  417d8d:	bound  esi,QWORD PTR [edi-0x1]
  417d90:	ins    BYTE PTR es:[edi],dx
  417d91:	adc    DWORD PTR [ebx-0x20221b57],ecx
  417d97:	and    BYTE PTR [esi+0x70f46fc7],ch
  417d9d:	(bad)  
  417da0:	fwait
  417da1:	fs jbe 0x417d44
  417da4:	ret    0x217a
  417da7:	add    al,0xe1
  417da9:	push   0x4e
  417dab:	cwde   
  417dac:	push   edx
  417dad:	mov    ah,dl
  417daf:	pop    edx
  417db0:	addr16 or al,0x48
  417db3:	sbb    BYTE PTR [ecx+0x2f],0xe8
  417db7:	pop    es
  417db8:	sbb    BYTE PTR [esi+0x2a],ah
  417dbb:	mov    DWORD PTR [ebp-0x6636e504],esp
  417dc1:	adc    edi,edi
  417dc3:	leave  
  417dc4:	sub    BYTE PTR [edi],al
  417dc6:	or     esp,DWORD PTR ds:0xf705de9f
  417dcc:	mov    ecx,0x2a1c1142
  417dd1:	(bad)  
  417dd2:	and    ebx,esi
  417dd4:	adc    al,0xee
  417dd6:	sbb    al,0x58
  417dd8:	add    eax,0x44dbe661
  417ddd:	outs   dx,BYTE PTR ds:[esi]
  417dde:	dec    eax
  417ddf:	or     dl,dl
  417de1:	cmp    BYTE PTR [esi-0x77c049fe],ah
  417de7:	cdq    
  417de8:	cli    
  417de9:	xchg   ecx,eax
  417dea:	inc    esi
  417deb:	arpl   sp,ax
  417ded:	je     0x417e68
  417def:	fldcw  WORD PTR [edx+0x7e]
  417df2:	inc    ebp
  417df3:	(bad)  
  417df6:	cwde   
  417df7:	(bad)  
  417dfa:	mov    DWORD PTR [ecx+0x71fade5f],ebx
  417e00:	jbe    0x417dec
  417e02:	repz sbb al,0xe3
  417e05:	(bad)  
  417e06:	lock xchg DWORD PTR [ebp-0x30f86ddf],esp
  417e0d:	jmp    0x417dc6
  417e0f:	imul   BYTE PTR [ecx]
  417e11:	jnp    0x417e5d
  417e13:	xchg   BYTE PTR [eax],cl
  417e15:	fistp  WORD PTR [ebx-0x32369f62]
  417e1b:	xor    al,BYTE PTR [ebx-0x39a78c32]
  417e21:	shl    DWORD PTR [esi-0x50],0xc5
  417e25:	cmc    
  417e26:	pop    eax
  417e27:	retf   
  417e28:	outs   dx,BYTE PTR ds:[esi]
  417e29:	fldenv [esi-0x514d0fa4]
  417e2f:	data16 mov dl,0x41
  417e32:	in     al,dx
  417e33:	sbb    al,0xad
  417e35:	fwait
  417e36:	xchg   DWORD PTR [eax+0x7a],eax
  417e39:	sub    ebp,esi
  417e3b:	repz jnp 0x417e42
  417e3e:	adc    bh,BYTE PTR [ebp-0xf3a93c9]
  417e44:	inc    esi
  417e45:	lds    ecx,FWORD PTR [ebx]
  417e47:	std    
  417e48:	aad    0x7e
  417e4a:	push   cs
  417e4b:	out    0x7f,eax
  417e4d:	cmp    DWORD PTR [eax+edx*2],esi
  417e50:	aaa    
  417e51:	mov    al,0x31
  417e53:	jmp    0x9f8e3d9d
  417e58:	repz or DWORD PTR [ecx+0x3e],0x3acb56e0
  417e60:	dec    ebp
  417e61:	pop    ebx
  417e62:	dec    ebx
  417e63:	jno    0x417ede
  417e65:	fdiv   QWORD PTR [esi]
  417e67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e68:	xchg   ebx,eax
  417e69:	mov    edi,0x94a91988
  417e6e:	ds repnz cld 
  417e71:	jno    0x417df7
  417e73:	iret   
  417e74:	or     DWORD PTR [ebx-0x63],edx
  417e77:	sbb    eax,0xce857075
  417e7c:	push   ds
  417e7d:	lods   al,BYTE PTR ds:[esi]
  417e7e:	xor    ah,BYTE PTR [ecx+0x16]
  417e81:	call   0x14a86ff9
  417e86:	cmp    edi,DWORD PTR [eax+0x54d9b1]
  417e8c:	pop    esp
  417e8d:	dec    esi
  417e8e:	(bad)  
  417e8f:	out    dx,eax
  417e90:	call   0xaa4e2c2d
  417e95:	loope  0x417ec8
  417e97:	int    0xa9
  417e99:	loope  0x417ee1
  417e9b:	add    eax,0x37cd22fb
  417ea0:	mov    WORD PTR [eax+0x13b31324],es
  417ea6:	dec    ebx
  417ea7:	and    BYTE PTR [edi],dh
  417ea9:	test   BYTE PTR [eax],ch
  417eab:	scas   eax,DWORD PTR es:[edi]
  417eac:	jge    0x417e72
  417eae:	loop   0x417e83
  417eb0:	les    eax,FWORD PTR [edi]
  417eb2:	es and al,0x37
  417eb5:	aaa    
  417eb6:	sub    dl,bl
  417eb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417eb9:	cmp    ebp,DWORD PTR [ecx]
  417ebb:	mov    esi,0x16fd720
  417ec0:	inc    ebx
  417ec1:	cmp    BYTE PTR [ecx-0x5833f8e1],0x8b
  417ec8:	sbb    esp,DWORD PTR [ebx]
  417eca:	stc    
  417ecb:	and    BYTE PTR [ebx-0x7e],ah
	...
  41809e:	pushf  
  41809f:	sbb    al,bl
  4180a1:	push   esi
  4180a2:	(bad)  
  4180a4:	sahf   
  4180a5:	fidivr DWORD PTR [esi-0x64]
  4180a8:	add    al,ah
  4180aa:	test   al,0xe0
  4180ac:	adc    DWORD PTR [ebx],0xffffffeb
  4180af:	mov    al,0x1
  4180b1:	add    BYTE PTR ds:0x66000007,ah
  4180b7:	dec    eax
  4180b8:	rol    DWORD PTR [edi],0xad
  4180bb:	popf   
  4180bc:	stos   BYTE PTR es:[edi],al
  4180bd:	mov    ebx,0xd997af7a
  4180c2:	sub    dh,bl
  4180c4:	cmp    eax,0x42a425cf
  4180c9:	pop    esp
  4180ca:	inc    edi
  4180cb:	outs   dx,BYTE PTR ds:[esi]
  4180cc:	jno    0x418148
  4180ce:	xadd   ah,ch
  4180d1:	nop
  4180d2:	lea    edx,[edx+eiz*4-0x52]
  4180d6:	jmp    0x41805b
  4180d8:	popa   
  4180d9:	test   BYTE PTR [eax-0x10],0x69
  4180dd:	mov    cl,BYTE PTR [esi+0x67]
  4180e0:	(bad)  
  4180e1:	and    al,0x63
  4180e3:	ds call 0xbce5:0x8f50cbfc
  4180eb:	xchg   esi,eax
  4180ec:	adc    BYTE PTR [edi+0x5c714eac],al
  4180f2:	sbb    esi,0xd20d492b
  4180f8:	pop    edx
  4180f9:	int3   
  4180fa:	lods   al,BYTE PTR ds:[esi]
  4180fb:	xchg   esi,eax
  4180fc:	ja     0x4180eb
  4180fe:	call   0x118:0x84b8d0d
  418105:	aam    0xf8
  418107:	sub    ebp,DWORD PTR [ebx+0x60]
  41810a:	jae    0x418132
  41810c:	add    eax,0x9fc786c4
  418111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418112:	mov    cl,0x94
  418114:	adc    ah,BYTE PTR [ebx-0x50e92cf5]
  41811a:	mov    dh,0x71
  41811c:	pop    ebx
  41811d:	in     al,dx
  41811e:	in     eax,dx
  41811f:	outs   dx,BYTE PTR ds:[esi]
  418120:	out    0x85,eax
  418122:	aaa    
  418123:	js     0x418164
  418125:	mov    edx,0x24c73c87
  41812a:	xchg   ebp,eax
  41812b:	cmp    ebp,ebp
  41812d:	fldcw  WORD PTR [edx+ebx*8]
  418130:	adc    eax,0xa5e35ccd
  418135:	sbb    BYTE PTR [ecx-0x2d],bh
  418138:	sub    eax,0xffa712a6
  41813d:	addr16 fucom st(2)
  418140:	shr    BYTE PTR [ecx-0x5832837e],cl
  418146:	out    dx,eax
  418147:	xlat   BYTE PTR ds:[ebx]
  418148:	add    eax,0xd58e9ed9
  41814d:	cmp    eax,0x858ae1e0
  418152:	outs   dx,BYTE PTR ds:[esi]
  418153:	stc    
  418154:	stc    
  418155:	dec    edi
  418156:	push   ebp
  418157:	adc    edx,ecx
  418159:	iret   
  41815a:	cmc    
  41815b:	xchg   ebx,eax
  41815c:	mov    eax,ds:0xa5c0b987
  418161:	and    DWORD PTR [esi],0x2d
  418164:	add    al,ah
  418166:	dec    edx
  418167:	adc    eax,0x7db96799
  41816c:	mov    BYTE PTR [eax+edx*2-0x4c],0x37
  418171:	mov    esp,ecx
  418173:	mov    ecx,0x2bad4bd1
  418178:	sub    eax,0x4206b4e2
  41817d:	inc    esi
  41817e:	pop    ecx
  41817f:	cmp    DWORD PTR [ecx],0x81cc4cb8
  418185:	mov    edi,0x4139a98f
  41818a:	mov    cl,0xf8
  41818c:	xor    eax,0x45b711a2
  418191:	cmp    eax,0x3f5b66b3
  418196:	es std 
  418198:	pop    esi
  418199:	jecxz  0x4181a2
  41819b:	imul   ebp,DWORD PTR [eax],0xe8ed2b1b
  4181a1:	test   eax,0x2716d98e
  4181a6:	ret    0xc8da
  4181a9:	jecxz  0x41821e
  4181ab:	mov    ebp,DWORD PTR [esi+eiz*2-0x7c]
  4181af:	outs   dx,DWORD PTR ds:[esi]
  4181b0:	out    0xc,eax
  4181b2:	inc    ecx
  4181b3:	cmp    BYTE PTR [ebx-0x1bd3c12],ch
  4181b9:	cmp    BYTE PTR [ebx+0x46],ch
  4181bc:	xchg   BYTE PTR [eax],ch
  4181be:	push   ecx
  4181bf:	adc    BYTE PTR [ecx],ah
  4181c1:	mov    ecx,0x1ef7488
  4181c6:	rcr    DWORD PTR [ebp-0x285278e0],cl
  4181cc:	mov    ebp,0xcf203264
  4181d1:	fild   WORD PTR [edi-0x41cff91a]
  4181d7:	dec    edx
  4181d8:	xor    ebx,DWORD PTR [esi-0x6]
  4181db:	lods   eax,DWORD PTR ds:[esi]
  4181dc:	inc    ebx
  4181dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181de:	sbb    edx,ebx
  4181e0:	push   esp
  4181e1:	je     0x4181ce
  4181e3:	aas    
  4181e4:	aaa    
  4181e5:	dec    edx
  4181e6:	das    
  4181e7:	je     0x41821b
  4181e9:	cmp    BYTE PTR [esi],0xdb
  4181ec:	int3   
  4181ed:	int3   
  4181ee:	ins    DWORD PTR es:[edi],dx
  4181ef:	es push 0xbd06d180
  4181f5:	mov    al,ds:0x7e232896
  4181fa:	fwait
  4181fb:	xchg   ecx,eax
  4181fc:	int3   
  4181fd:	xchg   BYTE PTR [ecx+eiz*4],dl
  418200:	lods   al,BYTE PTR ds:[esi]
  418201:	mov    edi,0xfadb6ab9
  418206:	test   al,0x90
  418208:	mov    al,0xf9
  41820a:	je     0x41820d
  41820c:	jg     0x41825f
  41820e:	out    dx,al
  41820f:	jecxz  0x41823c
  418211:	mov    edx,0x13c9a342
  418216:	dec    eax
  418217:	dec    ecx
  418218:	test   DWORD PTR [eax-0x79f117a5],0xc2bee465
  418222:	pop    ss
  418223:	shl    BYTE PTR [edi+esi*8],1
  418226:	push   ebp
  418227:	sahf   
  418228:	or     eax,0xd8bdfdc6
  41822d:	dec    esi
  41822e:	aam    0xd6
  418230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418231:	xor    eax,esi
  418233:	lahf   
  418234:	sub    eax,0xf6a1ef4b
  418239:	neg    ebx
  41823b:	int    0xca
  41823d:	pop    ebp
  41823e:	shl    BYTE PTR [edx-0x71f8a05d],0x94
  418245:	int3   
  418246:	sub    esp,DWORD PTR [eax-0x58]
  418249:	clc    
  41824a:	or     BYTE PTR [edx+0x6a],0x63
  41824e:	mov    esp,0x5ae578cd
  418253:	and    DWORD PTR [eax],edx
  418255:	jne    0x4182b3
  418257:	jno    0x4181e3
  418259:	push   0xd76f0494
  41825e:	call   eax
  418260:	in     al,dx
  418261:	push   ds
  418262:	lea    ebx,[eax+0x3c7f1fa3]
  418268:	and    bl,BYTE PTR [edi+ecx*8+0x2e3c3f60]
  41826f:	je     0x418235
  418271:	adc    eax,0x409f4ad1
  418276:	pop    esi
  418277:	pop    esi
  418278:	aad    0xfc
  41827a:	dec    ecx
  41827b:	dec    esi
  41827c:	inc    edx
  41827d:	inc    edx
  41827e:	fadd   DWORD PTR [edi-0x13]
  418281:	xchg   esi,eax
  418282:	jo     0x41828b
  418284:	inc    edi
  418285:	shl    BYTE PTR [ebp+0x1a702762],cl
  41828b:	test   BYTE PTR [ebx+0x7f],al
  41828e:	outs   dx,BYTE PTR ds:[esi]
  41828f:	pop    eax
  418290:	dec    esi
  418291:	stc    
  418292:	sbb    bl,BYTE PTR [ebx-0x27d4b8a4]
  418298:	test   cl,bl
  41829a:	xor    al,0xbd
  41829c:	mov    eax,ds:0xf1c1b1e2
  4182a1:	in     al,dx
  4182a2:	mov    bh,0x24
  4182a4:	test   ah,al
  4182a6:	xor    ah,BYTE PTR ds:0x32fc7669
  4182ac:	test   eax,0x765ae958
  4182b1:	ja     0x4182d4
  4182b3:	sub    eax,0xa4f0a09b
  4182b8:	shl    BYTE PTR [ebp+esi*2-0x29555b74],0x42
  4182c0:	cmp    eax,0x1a782438
  4182c5:	call   0x874c4b6
  4182ca:	mov    dl,0xa9
  4182cc:	sbb    DWORD PTR [ecx],esi
  4182ce:	sub    esp,DWORD PTR [edi+0x71]
  4182d1:	sti    
  4182d2:	(bad)  
  4182d3:	pop    ds
  4182d4:	fwait
  4182d5:	sbb    ch,bl
  4182d7:	mov    ah,0xff
  4182d9:	sub    BYTE PTR [esi+ebx*8-0x58],ch
  4182dd:	adc    dl,dl
  4182df:	jne    0x4182de
  4182e1:	dec    edx
  4182e2:	xor    bl,bl
  4182e4:	(bad)  
  4182e5:	add    ch,0x70
  4182e8:	repnz pop es
  4182ea:	mov    al,ds:0x25b90c7f
  4182ef:	jnp    0x4182d6
  4182f1:	sbb    al,0x6c
  4182f3:	jmp    0x29f:0x22b78884
  4182fa:	mov    DWORD PTR [ebx],ecx
  4182fc:	dec    ecx
  4182fd:	mov    bh,0xac
  4182ff:	cwde   
  418300:	xchg   DWORD PTR ss:[eax+edx*8],edx
  418304:	sbb    al,0x8e
  418306:	and    eax,0x1a5b487c
  41830b:	fdivr  QWORD PTR [edi+0x1dc27a9d]
  418311:	pop    esi
  418312:	xchg   ecx,eax
  418313:	add    ah,bl
  418315:	lods   eax,DWORD PTR ds:[esi]
  418316:	pop    esp
  418317:	fmul   st,st(2)
  418319:	outs   dx,DWORD PTR ds:[esi]
  41831a:	add    al,0x57
  41831c:	mov    al,ds:0x89675754
  418321:	xchg   esp,eax
  418322:	xor    dh,BYTE PTR [ebp-0x44]
  418325:	add    ch,cl
  418327:	gs mov edi,0x6319c0c8
  41832d:	sub    edx,DWORD PTR [esi-0x44]
  418330:	dec    ecx
  418331:	mov    bh,0x8e
  418333:	retf   0x6eb3
  418336:	add    dh,BYTE PTR [esi+edx*2]
  418339:	cli    
  41833a:	jns    0x4182da
  41833c:	mov    ebx,0x91cd72fe
  418341:	std    
  418342:	and    BYTE PTR [ebx-0x7bc97e6],0xbf
  418349:	add    dl,BYTE PTR [ebp-0x1e]
  41834c:	cdq    
  41834d:	sbb    al,0x3f
  41834f:	dec    ebx
  418350:	cdq    
  418351:	repz cmc 
  418353:	frstor [esi]
  418355:	push   ss
  418356:	aam    0x49
  418358:	xchg   esp,eax
  418359:	out    dx,eax
  41835a:	cli    
  41835b:	pop    eax
  41835c:	push   ebx
  41835d:	add    esi,DWORD PTR [edx]
  41835f:	cli    
  418360:	mov    ch,0xc3
  418362:	aas    
  418363:	dec    eax
  418364:	and    eax,0xcebf9c2b
  418369:	pop    edx
  41836a:	pop    ebp
  41836b:	aam    0xbd
  41836d:	jnp    0x4183b6
  41836f:	sar    DWORD PTR [esi+0x58da8cd],1
  418375:	jge    0x418321
  418377:	mov    ebx,0x3f2d6953
  41837c:	mov    ebp,0xc2bc405
  418381:	add    bh,ah
  418383:	dec    esp
  418384:	nop
  418385:	mov    DWORD PTR [ebp-0x48],esp
  418388:	int    0x96
  41838a:	push   esi
  41838b:	push   es
  41838c:	int    0xc1
  41838e:	xchg   esp,eax
  41838f:	mov    edx,DWORD PTR [ebp+0x60ac4da7]
  418395:	out    dx,eax
  418396:	jnp    0x4183c2
  418398:	mov    ah,0x63
  41839a:	add    edx,DWORD PTR [ecx-0x281fbd1b]
  4183a0:	jno    0x418356
  4183a2:	pop    ebp
  4183a3:	or     DWORD PTR [edi-0x79],0xffffff9c
  4183a7:	(bad)  
  4183a8:	lods   al,BYTE PTR ds:[esi]
  4183a9:	clc    
  4183aa:	jnp    0x41841f
  4183ac:	icebp  
  4183ad:	mov    dl,0x2d
  4183af:	push   esi
  4183b0:	or     bh,BYTE PTR [ecx+ebp*8+0x44ce241d]
  4183b7:	ret    
  4183b8:	cmp    DWORD PTR [edi+0xb79602],eax
  4183be:	nop
  4183bf:	out    dx,al
  4183c0:	loope  0x41837b
  4183c2:	mov    al,ds:0x517bd935
  4183c7:	cs iret 
  4183c9:	xor    BYTE PTR [ebx+0x79e86b27],ah
  4183cf:	cli    
  4183d0:	rep outs dx,BYTE PTR ds:[esi]
  4183d2:	xchg   ebp,eax
  4183d3:	mov    DWORD PTR [edx+0x3cec4927],esi
  4183d9:	imul   edx,DWORD PTR [edx-0x3340f1c0],0x6913d122
  4183e3:	mov    esp,0xddbd1a8d
  4183e8:	xchg   edi,eax
  4183e9:	xchg   esp,eax
  4183ea:	jmp    0x5d080f17
  4183ef:	test   BYTE PTR [edi-0x5a],0xaa
  4183f3:	mov    ah,0x63
  4183f5:	push   0x5735b76e
  4183fa:	sahf   
  4183fb:	dec    ecx
  4183fc:	sub    ecx,ecx
  4183fe:	inc    ebx
  4183ff:	in     al,dx
  418400:	cmc    
  418401:	mov    ah,BYTE PTR [edx+0x198ac037]
  418407:	add    edi,DWORD PTR [ecx-0x1f6bf880]
  41840d:	stc    
  41840e:	(bad)  
  418410:	in     eax,dx
  418411:	dec    edi
  418412:	dec    ebp
  418413:	je     0x4183f5
  418415:	cmp    BYTE PTR [ecx-0x53],al
  418418:	arpl   WORD PTR [esi-0x5395cdae],di
  41841e:	add    BYTE PTR [ecx],bl
  418420:	ja     0x418480
  418422:	adc    al,0x1
  418424:	jmp    0x41846b
  418426:	jno    0x4183e6
  418428:	scas   al,BYTE PTR es:[edi]
  418429:	xor    dl,BYTE PTR [eax+edx*1-0x4b]
  41842d:	adc    dl,cl
  41842f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418430:	sbb    cl,BYTE PTR [ecx-0x548bf4c1]
  418436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418437:	and    bh,bl
  418439:	sbb    eax,0x6d5617bf
  41843e:	aas    
  41843f:	mov    ds:0x7557d61f,al
  418444:	xor    al,0x26
  418446:	sti    
  418447:	stos   DWORD PTR es:[edi],eax
  418448:	lods   eax,DWORD PTR ds:[esi]
  418449:	sbb    eax,0xff8f90b0
  41844e:	and    BYTE PTR [eax],0x98
  418451:	xchg   ecx,eax
  418452:	rcl    DWORD PTR [esp+edi*2-0x22038af2],0x44
  41845a:	push   ecx
  41845b:	xor    DWORD PTR [esi+0x32],edi
  41845e:	gs or  al,0x77
  418461:	aam    0xdf
  418463:	imul   esp,DWORD PTR [esi+0x7e],0xe927400
  41846a:	push   ss
  41846b:	in     al,dx
  41846c:	push   0xffffffcf
  41846e:	imul   DWORD PTR [eax]
  418470:	push   es
  418471:	push   esp
  418472:	ins    BYTE PTR es:[edi],dx
  418473:	fidiv  DWORD PTR [edx-0x7c]
  418476:	inc    esp
  418477:	fcomp  DWORD PTR [ecx]
  418479:	push   0xfffffff5
  41847b:	lods   al,BYTE PTR ds:[esi]
  41847c:	jns    0x4184ce
  41847e:	scas   al,BYTE PTR es:[edi]
  41847f:	and    ch,BYTE PTR [edi+0x3c]
  418482:	xchg   edi,eax
  418483:	mov    ?,WORD PTR [ecx]
  418485:	mov    ecx,0x97cb4c53
  41848a:	jmp    0x5c0b:0x676bfd28
  418491:	dec    ebx
  418492:	ret    0x3ef6
  418495:	shl    dl,0x4c
  418498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418499:	into   
  41849a:	sahf   
  41849b:	adc    dh,BYTE PTR [ebx+0x5b]
  41849e:	mov    ch,0xed
  4184a0:	std    
  4184a1:	adc    BYTE PTR [eax+0x11],bl
  4184a4:	push   esp
  4184a5:	xchg   ecx,eax
  4184a6:	int3   
  4184a7:	retf   
  4184a8:	shl    BYTE PTR [esi-0x52],cl
  4184ab:	push   ss
  4184ac:	and    BYTE PTR [ebp+0x52],dl
  4184af:	jno    0x4184fd
  4184b1:	sbb    eax,0x5ef5c411
  4184b6:	xchg   DWORD PTR [bx+si-0xbf1],esp
  4184bb:	adc    al,0x70
  4184bd:	and    BYTE PTR [esi+ebp*2+0x4388807],ch
  4184c4:	inc    ebx
  4184c5:	or     DWORD PTR ds:0x2037508d,ecx
  4184cb:	adc    bh,dl
  4184cd:	test   al,0x36
  4184cf:	neg    BYTE PTR [esi+0x76]
  4184d2:	adc    DWORD PTR [edx],esp
  4184d4:	mov    edx,0xe1ab4183
  4184d9:	adc    ebp,DWORD PTR [ecx]
  4184db:	mov    eax,ds:0xea56ba8c
  4184e0:	adc    al,0x93
  4184e2:	pop    edi
  4184e3:	pusha  
  4184e4:	lods   al,BYTE PTR ds:[esi]
  4184e5:	stos   BYTE PTR es:[edi],al
  4184e6:	fdiv   QWORD PTR [ecx-0x48]
  4184e9:	adc    eax,0x13707776
  4184ee:	inc    ebx
  4184ef:	dec    ebp
  4184f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184f1:	pusha  
  4184f2:	mov    esp,0xacbf9b5
  4184f7:	sub    eax,0x207bc894
  4184fc:	mov    bh,0x3d
  4184fe:	sub    cl,BYTE PTR [edi-0x11]
  418501:	sbb    BYTE PTR es:[ecx+0x75],al
  418505:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418506:	std    
  418507:	addr16 in eax,dx
  418509:	test   ch,0x21
  41850c:	loopne 0x418555
  41850e:	push   eax
  41850f:	jne    0x4184cc
  418511:	test   DWORD PTR [edi+0x22],ebx
  418514:	fistp  DWORD PTR [ebx-0x4b]
  418517:	dec    esi
  418518:	in     al,dx
  418519:	fld    TBYTE PTR [ebp-0x21563407]
  41851f:	repnz daa 
  418521:	inc    eax
  418522:	cmp    dl,BYTE PTR [eax-0x30]
  418525:	cdq    
  418526:	push   edi
  418527:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418528:	add    DWORD PTR [edx+0x42],eax
  41852b:	push   ecx
  41852c:	pusha  
  41852d:	pop    eax
  41852e:	scas   al,BYTE PTR es:[edi]
  41852f:	mov    esp,0xc47db69a
  418534:	push   0xf5349ff3
  418539:	fistp  DWORD PTR [edx]
  41853b:	mov    eax,ecx
  41853d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41853e:	mov    bl,bl
  418540:	(bad)  
  418541:	(bad)  
  418542:	daa    
  418543:	xchg   edx,eax
  418544:	fild   DWORD PTR [edi-0x42eab5aa]
  41854a:	xor    DWORD PTR [edi+0x436b9fec],esi
  418550:	(bad)  
  418551:	cmp    DWORD PTR [edx-0x72117733],eax
  418557:	mov    dl,0xd0
  418559:	sbb    al,0xac
  41855b:	mov    edi,0xf90a8351
  418560:	mov    edx,0xa9a211c8
  418565:	icebp  
  418566:	rcl    edx,1
  418568:	clc    
  418569:	xchg   esp,eax
  41856a:	sub    bh,BYTE PTR [eax+0x2c0af993]
  418570:	stos   DWORD PTR es:[edi],eax
  418571:	add    DWORD PTR [edx-0x3b6b6a78],ecx
  418577:	mov    esp,DWORD PTR [edx]
  418579:	sub    DWORD PTR [ebx+0x49e49509],esi
  41857f:	mov    ss,WORD PTR [edi-0x42]
  418582:	(bad)  
  418583:	push   ebx
  418584:	push   eax
  418585:	dec    ecx
  418586:	(bad)  
  418587:	cmp    DWORD PTR [eax+0x4b8f46b2],eax
  41858d:	cdq    
  41858e:	mov    dl,0x7a
  418590:	outs   dx,BYTE PTR ds:[esi]
  418591:	dec    edi
  418592:	lods   al,BYTE PTR ds:[esi]
  418593:	xchg   edx,eax
  418594:	mov    dl,0x8
  418596:	out    dx,eax
  418597:	inc    esi
  418598:	and    dh,cl
  41859a:	gs dec edi
  41859c:	das    
  41859d:	jmp    0xf2db:0x1eef9ec4
  4185a4:	neg    BYTE PTR [eax-0x64]
  4185a7:	and    BYTE PTR [edx],0xd7
  4185aa:	push   0xb
  4185ac:	hlt    
  4185ad:	sub    esi,DWORD PTR [ecx+0x16]
  4185b0:	push   edi
  4185b1:	mov    bl,0x78
  4185b3:	xchg   DWORD PTR ds:[ebp+0x52caaff3],ebp
  4185ba:	icebp  
  4185bb:	sbb    BYTE PTR [eax-0x60],dh
  4185be:	add    al,0x60
  4185c0:	ret    
  4185c1:	cmp    eax,esp
  4185c3:	sti    
  4185c4:	pop    esi
  4185c5:	out    0xd5,al
  4185c7:	and    al,0x93
  4185c9:	jo     0x41856c
  4185cb:	push   0xbc5f24db
  4185d0:	pop    ds
  4185d1:	xor    al,0x6d
  4185d3:	nop
  4185d4:	in     al,0xb3
  4185d6:	or     DWORD PTR [edx-0x3b],0x47
  4185da:	jo     0x418595
  4185dc:	mov    eax,ds:0xed5e5e74
  4185e1:	cmc    
  4185e2:	rol    ebx,1
  4185e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185e5:	test   eax,0x2c6b7a3d
  4185ea:	(bad)  
  4185eb:	cmp    al,bl
  4185ed:	gs rol dl,cl
  4185f0:	mov    ch,0xa6
  4185f2:	out    dx,eax
  4185f3:	enter  0x616a,0x51
  4185f7:	cmp    esp,esp
  4185f9:	cmp    BYTE PTR [ebx],dh
  4185fb:	jb     0x418627
  4185fd:	in     eax,0xd7
  4185ff:	rcr    edx,1
  418601:	push   ds
  418602:	jmp    0x9210:0x29317f20
  418609:	ficom  WORD PTR [esi-0xc]
  41860c:	loope  0x418626
  41860e:	jge    0x4185de
  418610:	cwde   
  418611:	stos   DWORD PTR es:[edi],eax
  418612:	les    eax,FWORD PTR [ebx-0x47]
  418615:	mov    ah,0x2
  418617:	outs   dx,BYTE PTR ds:[esi]
  418618:	dec    ebp
  418619:	sub    eax,0xa183a3d6
  41861e:	push   esp
  41861f:	cmp    BYTE PTR [eax],dl
  418621:	gs pushf 
  418623:	cmp    ebx,DWORD PTR [ecx]
  418625:	inc    edi
  418626:	(bad)  
  418627:	rcr    BYTE PTR [ebx],1
  418629:	push   ss
  41862a:	stc    
  41862b:	adc    BYTE PTR [edx],bl
  41862d:	mov    bl,0x17
  41862f:	xor    edx,DWORD PTR [eax]
  418631:	lods   eax,DWORD PTR ds:[esi]
  418632:	fadd   DWORD PTR [esi+0x0]
  418635:	jl     0x418602
  418637:	jmp    0xb1ac295
  41863c:	js     0x41861b
  41863e:	loop   0x41865b
  418640:	inc    ebp
  418641:	pop    ds
  418642:	pop    ecx
  418643:	pop    ds
  418644:	popf   
  418645:	lds    eax,FWORD PTR [edi]
  418647:	shl    edx,0x80
  41864a:	push   ss
  41864b:	and    eax,0x92bf3f75
  418650:	call   0xd36d:0x144d002f
  418657:	push   0x62
  418659:	mov    al,0xf6
  41865b:	inc    esi
  41865c:	repz in al,0xb2
  41865f:	push   ss
  418660:	dec    dh
  418662:	stos   BYTE PTR es:[edi],al
  418663:	retf   0x2f9
  418666:	enter  0xb61e,0x6b
  41866a:	xchg   ebp,eax
  41866b:	pop    ebp
  41866c:	das    
  41866d:	dec    ecx
  41866e:	ror    DWORD PTR [edi],cl
  418670:	mov    ch,0x8d
  418672:	aad    0x2e
  418674:	jo     0x4186ed
  418676:	(bad)  
  418678:	push   edi
  418679:	add    al,0x5
  41867b:	loop   0x418683
  41867d:	dec    ebx
  41867e:	lahf   
  41867f:	pusha  
  418680:	adc    edx,esi
  418682:	stos   DWORD PTR es:[edi],eax
  418683:	popa   
  418684:	iret   
  418685:	push   ebx
  418686:	icebp  
  418687:	cmp    al,0x6e
  418689:	fs sahf 
  41868b:	fldcw  WORD PTR [ebx-0x52]
  41868e:	sbb    dh,dl
  418690:	cmp    eax,DWORD PTR [eax]
  418692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418693:	mov    ?,WORD PTR [esi]
  418695:	mov    dl,0xc2
  418697:	pop    ebx
  418698:	xchg   BYTE PTR [ebp-0x64ab39cc],cl
  41869e:	mov    ecx,0x80e57b1a
  4186a3:	stc    
  4186a4:	fdiv   st,st(5)
  4186a6:	xchg   ebp,eax
  4186a7:	test   ecx,eax
  4186a9:	imul   ebx,edx,0xffffffcb
  4186ac:	mov    bh,0xc7
  4186ae:	mov    ebp,0xcd0d3586
  4186b3:	stos   DWORD PTR es:[edi],eax
  4186b4:	adc    esp,DWORD PTR [ebx-0x42]
  4186b7:	pop    es
  4186b8:	scas   eax,DWORD PTR es:[edi]
  4186b9:	xor    cl,BYTE PTR fs:[eax-0x6feb23cb]
  4186c0:	packuswb mm1,mm5
  4186c3:	and    ebp,DWORD PTR [ebx-0x4b]
  4186c6:	and    eax,0x4c50a236
  4186cb:	sbb    esi,DWORD PTR [edi+0x420f32d]
  4186d1:	mov    edi,0x73cd037c
  4186d6:	jnp    0x4186e9
  4186d8:	aas    
  4186d9:	xchg   edi,eax
  4186da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186db:	mov    edx,0xb37f63f9
  4186e0:	mov    ecx,0xbf3b50e2
  4186e5:	pop    esi
  4186e6:	and    al,0xe9
  4186e8:	sub    cl,BYTE PTR [edi+0x41]
  4186eb:	fcomp  QWORD PTR [eax-0x3408a983]
  4186f1:	fs (bad) 
  4186f3:	jno    0x41872e
  4186f5:	call   0xc3292bf7
  4186fa:	cmc    
  4186fb:	scas   al,BYTE PTR es:[edi]
  4186fc:	dec    ebx
  4186fd:	jecxz  0x41877c
  4186ff:	pop    eax
  418700:	ss mov bh,0x7e
  418703:	xor    eax,0xe3278448
  418708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418709:	adc    DWORD PTR [ebx-0x25],edx
  41870c:	mov    dh,0xa1
  41870e:	shr    BYTE PTR [eax+eax*8-0x2f],0x54
  418713:	xchg   edi,eax
  418714:	ins    BYTE PTR es:[edi],dx
  418715:	and    BYTE PTR [edx],dl
  418717:	ret    
  418718:	pop    esi
  418719:	cmp    BYTE PTR [ebx],bh
  41871b:	fimul  WORD PTR [edi+0x74]
  41871e:	pop    ebp
  41871f:	cwde   
  418720:	into   
  418721:	xchg   esi,eax
  418722:	jnp    0x418778
  418724:	retf   
  418725:	jmp    FWORD PTR [ebp+ebp*1-0x2e57941b]
  41872c:	pop    esp
  41872d:	pop    ds
  41872e:	retf   
  41872f:	lea    edx,[esi+ebx*2]
  418732:	pop    ss
  418733:	aad    0x77
  418735:	fisubr DWORD PTR [edx+ebx*4-0x27]
  418739:	and    ch,bl
  41873b:	push   es
  41873c:	lods   al,BYTE PTR ds:[esi]
  41873d:	fimul  WORD PTR [edx+0x7cc77992]
  418743:	popa   
  418744:	dec    ecx
  418745:	jmp    0x418753
  418747:	or     ebp,ebp
  418749:	loop   0x41874e
  41874b:	push   ebp
  41874c:	mov    ah,0xe0
  41874e:	je     0x41878c
  418750:	fld    DWORD PTR [ebp-0x78]
  418753:	mov    cs,WORD PTR [ebp+0x4736fd7b]
  418759:	add    eax,DWORD PTR [ecx+eax*4+0x79]
  41875d:	enter  0xd4d8,0x76
  418761:	inc    ecx
  418762:	int    0x26
  418764:	nop
  418765:	sbb    al,0xaa
  418767:	pop    ecx
  418768:	out    0xd4,al
  41876a:	sbb    ah,bl
  41876c:	xchg   edx,eax
  41876d:	inc    esp
  41876e:	and    eax,0x5021162a
  418773:	ss (bad) 
  418775:	xchg   ebx,eax
  418776:	xchg   DWORD PTR [ebx+0x3],eax
  418779:	jg     0x4187d6
  41877b:	ror    DWORD PTR [ebp-0x72],0x87
  41877f:	dec    edi
  418780:	adc    cl,BYTE PTR [edx+0x5624be1b]
  418786:	and    ch,ch
  418788:	cmc    
  418789:	data16 jb 0x4187a3
  41878c:	push   ebp
  41878d:	add    DWORD PTR [ebx+0x5e972ebf],0xffffffcf
  418794:	xor    BYTE PTR [eax+0x300a26b7],dh
  41879a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41879b:	inc    eax
  41879c:	cdq    
  41879d:	movhps xmm3,QWORD PTR [edi]
  4187a0:	and    dl,ah
  4187a2:	cmp    al,0x3f
  4187a4:	int    0x43
  4187a6:	inc    edi
  4187a7:	aas    
  4187a8:	pop    ebx
  4187a9:	pop    ebx
  4187aa:	and    eax,0xd542e2ce
  4187af:	out    dx,eax
  4187b0:	mov    dh,0x82
  4187b2:	outs   dx,DWORD PTR ds:[esi]
  4187b3:	dec    eax
  4187b4:	call   0xe1595ec2
  4187b9:	mov    ebp,0x80f9abb0
  4187be:	jg     0x41880f
  4187c0:	mov    dh,0x62
  4187c2:	dec    ebx
  4187c3:	jecxz  0x418794
  4187c5:	call   0x20a8:0x17f5694e
  4187cc:	inc    eax
  4187cd:	dec    eax
  4187ce:	push   0xfffffff4
  4187d0:	paddw  mm4,QWORD PTR [eax-0x1b]
  4187d4:	dec    edi
  4187d5:	lods   al,BYTE PTR ds:[esi]
  4187d6:	xchg   edi,eax
  4187d7:	lahf   
  4187d8:	mov    ds:0x54c,al
	...
  4189ad:	add    BYTE PTR [eax],al
  4189af:	(bad)  
  4189b0:	stc    
  4189b1:	out    0xe3,eax
  4189b3:	(bad)  
  4189b4:	inc    edi
  4189b6:	std    
  4189b7:	fidivr WORD PTR [ebx]
  4189b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189ba:	dec    esp
  4189bb:	cmp    eax,0x35461b03
  4189c0:	mov    edi,0x7250001
  4189c5:	add    BYTE PTR [eax],al
  4189c7:	and    al,0x45
  4189c9:	pushf  
  4189ca:	sub    al,0x74
  4189cc:	ins    DWORD PTR es:[edi],dx
  4189cd:	mov    al,0xd4
  4189cf:	repz pop esp
  4189d1:	jl     0x41895f
  4189d3:	aaa    
  4189d4:	addr16 in eax,0xe3
  4189d7:	or     DWORD PTR [ebx+0xd],esp
  4189da:	in     al,0xd2
  4189dc:	rcl    DWORD PTR [ebx+0x4e],1
  4189df:	mov    esi,DWORD PTR [eax+edx*2]
  4189e2:	mov    cl,0xcc
  4189e4:	out    dx,eax
  4189e5:	push   es
  4189e6:	int3   
  4189e7:	jp     0x418976
  4189e9:	push   edx
  4189ea:	jne    0x418a4c
  4189ec:	push   0xa32ff961
  4189f1:	into   
  4189f2:	or     ebp,DWORD PTR [edx-0x1728a670]
  4189f8:	ror    edi,cl
  4189fa:	mov    esp,0xa850f9ca
  4189ff:	in     al,dx
  418a00:	and    BYTE PTR [ebx],bl
  418a02:	dec    ecx
  418a03:	repnz sahf 
  418a05:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  418a07:	lods   eax,DWORD PTR ds:[esi]
  418a08:	add    BYTE PTR [esi+edx*1],bl
  418a0b:	cli    
  418a0c:	icebp  
  418a0d:	imul   edx,DWORD PTR [esi+0x51e9fc37],0x6ddd36df
  418a17:	dec    esp
  418a18:	out    dx,al
  418a19:	pop    esp
  418a1a:	enter  0x5524,0x8
  418a1e:	(bad)  
  418a1f:	aam    0xc
  418a21:	push   0xdbecfc77
  418a26:	cmp    eax,0xd2ece261
  418a2b:	adc    BYTE PTR [edi],dh
  418a2d:	jne    0x418a0c
  418a2f:	loope  0x4189f9
  418a31:	lods   eax,DWORD PTR ds:[esi]
  418a32:	sbb    bh,BYTE PTR [ebx+ecx*2+0x6c53a68a]
  418a39:	lds    edx,FWORD PTR [edi-0x7c]
  418a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a3d:	dec    eax
  418a3e:	mov    bl,0x2b
  418a40:	mov    DWORD PTR [ecx],ebx
  418a42:	hlt    
  418a43:	(bad)  
  418a44:	xor    eax,0x1e15f804
  418a49:	adc    esp,DWORD PTR [edi+0x21b1bf66]
  418a4f:	stos   DWORD PTR es:[edi],eax
  418a50:	jge    0x418a5a
  418a52:	retf   0xd2a3
  418a55:	aam    0x9a
  418a57:	or     al,0xb7
  418a59:	or     bl,BYTE PTR [ecx+0x7c9aabb4]
  418a5f:	ret    
  418a60:	sub    bl,BYTE PTR [edx]
  418a62:	ja     0x418a7d
  418a64:	pop    eax
  418a65:	cs mov bh,0xb6
  418a68:	push   0x0
  418a6a:	add    eax,0xb9163b0e
  418a6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a70:	hlt    
  418a71:	jb     0x418a42
  418a73:	pop    ebp
  418a74:	push   edx
  418a75:	or     eax,0x46085e2d
  418a7b:	pop    ss
  418a7c:	ret    0xdba
  418a7f:	jmp    0xcb6bae68
  418a84:	retf   0x9420
  418a87:	sbb    bh,BYTE PTR [ecx]
  418a89:	(bad)  
  418a8a:	scas   al,BYTE PTR es:[edi]
  418a8b:	jb     0x418a63
  418a8d:	push   eax
  418a8e:	ss into 
  418a90:	out    dx,eax
  418a91:	ret    
  418a92:	clc    
  418a93:	mov    eax,0xae7ffd21
  418a98:	push   esp
  418a99:	in     al,dx
  418a9a:	je     0x418ab6
  418a9c:	sub    BYTE PTR [eax],bl
  418a9e:	add    BYTE PTR [edx-0x6cf18d55],bh
  418aa4:	inc    esp
  418aa5:	pop    esp
  418aa6:	rcl    DWORD PTR [ecx+eax*2-0x31c67dc4],0xce
  418aae:	jl     0x418a79
  418ab0:	pop    ebp
  418ab1:	scas   eax,DWORD PTR es:[edi]
  418ab2:	cdq    
  418ab3:	iret   
  418ab4:	mov    eax,ds:0x3e7dea87
  418ab9:	fnsave [ebx]
  418abb:	leave  
  418abc:	sbb    edi,ebp
  418abe:	pop    ebp
  418abf:	sub    cl,BYTE PTR [edx]
  418ac1:	mov    esi,0xf3c641c1
  418ac6:	dec    esi
  418ac7:	sbb    ch,dh
  418ac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418aca:	sbb    BYTE PTR [ebx-0x644382d],0x79
  418ad1:	dec    edi
  418ad3:	(bad)  
  418ad4:	cmp    DWORD PTR [esi-0xf],edi
  418ad7:	dec    ebp
  418ad8:	and    BYTE PTR [edx+eiz*8-0x79],cl
  418adc:	aad    0x12
  418ade:	inc    edx
  418adf:	or     dl,BYTE PTR [esi+0x6]
  418ae2:	pop    esi
  418ae3:	pop    ss
  418ae4:	fadd   DWORD PTR ds:0xac1b0253
  418aea:	jg     0x418ac8
  418aec:	outs   dx,DWORD PTR ds:[esi]
  418aed:	hlt    
  418aee:	dec    edi
  418aef:	aaa    
  418af0:	stos   BYTE PTR es:[edi],al
  418af1:	fdivp  st(6),st
  418af3:	stc    
  418af4:	jmp    0x418b74
  418af6:	add    eax,0xc064a5f9
  418afb:	fild   DWORD PTR [ebp-0x7b8584a6]
  418b01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b02:	and    DWORD PTR [edi-0xb],edi
  418b05:	fcmovnu st,st(1)
  418b07:	or     edx,DWORD PTR [esi+0x29]
  418b0a:	outs   dx,BYTE PTR ds:[esi]
  418b0b:	fbld   TBYTE PTR [eax-0x28cf5518]
  418b11:	call   0x56e3:0x436a22b0
  418b18:	sbb    al,0xd8
  418b1a:	mov    ebp,0xe1c677bd
  418b1f:	into   
  418b20:	sahf   
  418b21:	pop    esi
  418b22:	inc    esp
  418b23:	retf   
  418b24:	sub    eax,DWORD PTR [edx-0x7c4a6a2b]
  418b2a:	int    0x27
  418b2c:	xchg   esi,eax
  418b2d:	mov    cl,0x82
  418b2f:	fimul  WORD PTR ds:0x31b319b
  418b35:	or     al,0x92
  418b37:	in     eax,dx
  418b38:	rcl    DWORD PTR ds:[ebx],1
  418b3b:	mov    cs,WORD PTR [edi]
  418b3d:	jo     0x418b28
  418b3f:	mov    ebp,0xf62e5189
  418b44:	jnp    0x418ad7
  418b46:	fdivr  QWORD PTR ds:0xeffb7010
  418b4c:	mov    cl,0x5
  418b4e:	sbb    al,0xf6
  418b50:	lahf   
  418b51:	mov    ss,esp
  418b53:	sub    ebp,DWORD PTR [edx-0x72]
  418b56:	aaa    
  418b57:	xlat   BYTE PTR ds:[ebx]
  418b58:	mov    edx,0x67619fa9
  418b5d:	hlt    
  418b5e:	addr16 jle 0x418bd6
  418b61:	jp     0x418bd8
  418b63:	aad    0x2a
  418b65:	xor    BYTE PTR [esi-0x50],ch
  418b68:	repz je 0x418b41
  418b6b:	retf   0x35ae
  418b6e:	mov    al,0xc1
  418b70:	sbb    al,0xa4
  418b72:	shl    DWORD PTR [ebx],cl
  418b74:	or     BYTE PTR [edi-0x79],bl
  418b77:	jne    0x418b0c
  418b79:	fst    QWORD PTR [eax-0x72b46c5a]
  418b7f:	aaa    
  418b80:	or     BYTE PTR cs:[ecx+0x0],ch
  418b84:	jae    0x418b0f
  418b86:	lods   eax,DWORD PTR ds:[esi]
  418b87:	aas    
  418b88:	scas   eax,DWORD PTR es:[edi]
  418b89:	outs   dx,DWORD PTR ds:[esi]
  418b8a:	dec    ecx
  418b8b:	out    0xf3,eax
  418b8d:	xchg   BYTE PTR [edi-0x4e79fd69],ch
  418b93:	enter  0xe161,0x1f
  418b97:	jle    0x418b89
  418b99:	or     ebx,DWORD PTR [edx+0x34]
  418b9c:	imul   eax,DWORD PTR [edx],0x1298ddd1
  418ba2:	in     eax,dx
  418ba3:	sbb    al,0x91
  418ba5:	add    al,0x21
  418ba7:	and    DWORD PTR [edi],esi
  418ba9:	test   eax,0xb626e54
  418bae:	jge    0x418b89
  418bb0:	test   al,0x55
  418bb2:	xor    eax,0x19ba0680
  418bb7:	add    dh,0xeb
  418bba:	push   ds
  418bbb:	mov    esi,0x5b77a63c
  418bc0:	mov    DWORD PTR [ebp-0x64],edx
  418bc3:	mov    al,ds:0xefb2289a
  418bc8:	gs dec edx
  418bca:	inc    ecx
  418bcb:	lea    edx,[esi+ecx*1]
  418bce:	add    DWORD PTR [eax+0x1b],esp
  418bd1:	pop    esp
  418bd2:	mov    dl,BYTE PTR [edx]
  418bd4:	loopne 0x418bf0
  418bd6:	fcom   QWORD PTR [esi]
  418bd8:	pop    ebp
  418bd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bda:	jae    0x418b77
  418bdc:	(bad)  
  418bdd:	mov    al,0x73
  418bdf:	stos   BYTE PTR es:[edi],al
  418be0:	aas    
  418be1:	pop    eax
  418be2:	ror    DWORD PTR [edi-0x6734c8e],1
  418be8:	in     al,0x1c
  418bea:	(bad)  
  418beb:	sbb    al,0x69
  418bed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bee:	adc    al,ah
  418bf0:	mov    edi,DWORD PTR [eax-0x62]
  418bf3:	pop    esp
  418bf4:	ss pop ds
  418bf6:	push   es
  418bf7:	ja     0x418bf1
  418bf9:	add    al,0x9c
  418bfb:	outs   dx,BYTE PTR ds:[esi]
  418bfc:	dec    esp
  418bfd:	aam    0x4e
  418bff:	add    al,0x8f
  418c01:	lock pop edx
  418c03:	ret    0xecb4
  418c06:	clc    
  418c07:	sub    BYTE PTR [ecx],cl
  418c09:	out    0x7b,eax
  418c0b:	sbb    DWORD PTR [ebx+edi*1-0x2231ead6],esp
  418c12:	in     eax,dx
  418c13:	stos   DWORD PTR es:[edi],eax
  418c14:	add    cl,BYTE PTR [esi]
  418c16:	jae    0x418c57
  418c18:	jnp    0x418bb8
  418c1a:	outs   dx,BYTE PTR ds:[esi]
  418c1b:	add    BYTE PTR [edi+0x6],0x86
  418c1f:	scas   eax,DWORD PTR es:[edi]
  418c20:	inc    ecx
  418c21:	pop    ebp
  418c22:	mov    esp,0xc858cfe2
  418c27:	loope  0x418c1a
  418c29:	xchg   ecx,eax
  418c2a:	aad    0x5b
  418c2c:	inc    ecx
  418c2d:	jecxz  0x418c8f
  418c2f:	xor    eax,DWORD PTR [ebx-0x2e]
  418c32:	imul   edx,DWORD PTR [edx+0x29],0xb002636d
  418c39:	sub    ebx,esi
  418c3b:	scas   al,BYTE PTR es:[edi]
  418c3c:	and    al,0x64
  418c3e:	jns    0x418c63
  418c40:	jne    0x418c54
  418c42:	xchg   ebx,eax
  418c43:	or     al,0xb2
  418c45:	dec    esp
  418c47:	mov    edi,0xfa18cc68
  418c4c:	lahf   
  418c4d:	sar    DWORD PTR [ecx+0x48],1
  418c50:	dec    ecx
  418c51:	fldcw  WORD PTR [ecx+0x69]
  418c54:	pusha  
  418c55:	leave  
  418c56:	dec    ebx
  418c57:	cmp    eax,DWORD PTR ds:0xe7ba2a74
  418c5d:	or     bh,BYTE PTR [eax+0x6e]
  418c60:	inc    eax
  418c61:	xor    eax,0x762d3745
  418c66:	push   0x45affcf8
  418c6b:	bswap  ebx
  418c6d:	adc    eax,0x1726296e
  418c72:	test   al,0x7f
  418c74:	push   edi
  418c75:	xchg   esp,eax
  418c76:	pop    edi
  418c77:	(bad)  [ecx]
  418c79:	fs jmp 0x1bdc:0x1e915882
  418c81:	mov    edx,DWORD PTR [esi-0x38ea4fba]
  418c87:	fsubr  QWORD PTR [edx]
  418c89:	or     DWORD PTR [ebx-0x63c5a1f3],0x63
  418c90:	xor    eax,0xbc3a7213
  418c95:	popf   
  418c96:	and    edi,edx
  418c98:	xbegin 0x1e2fe40a
  418c9e:	mov    bl,0x55
  418ca0:	cmp    DWORD PTR [esi+0x1],esi
  418ca3:	bound  ebx,QWORD PTR [esi]
  418ca5:	jmp    0xb7237a6a
  418caa:	mov    bh,bl
  418cac:	shl    BYTE PTR [ebp+0x6a7661a1],1
  418cb2:	inc    eax
  418cb3:	bound  esp,QWORD PTR [esi]
  418cb5:	fs adc al,0x79
  418cb8:	mov    BYTE PTR [edi+0x74],cl
  418cbb:	or     DWORD PTR [eax-0x798a42de],esp
  418cc1:	and    BYTE PTR [ebp+0x7809e9a3],bl
  418cc7:	arpl   WORD PTR [ecx+0x7bd065c3],bp
  418ccd:	cdq    
  418cce:	fs nop
  418cd0:	sbb    ecx,DWORD PTR [ebp+ecx*8+0x16edfa0]
  418cd7:	leave  
  418cd8:	aam    0xa2
  418cda:	xchg   edi,edi
  418cdc:	sysexit 
  418cde:	neg    BYTE PTR [eax+0x32]
  418ce1:	in     eax,0x0
  418ce3:	mov    al,0xfe
  418ce5:	ins    DWORD PTR es:[edi],dx
  418ce6:	ins    BYTE PTR es:[edi],dx
  418ce7:	dec    esi
  418ce8:	fisub  DWORD PTR [esi]
  418cea:	sbb    esp,DWORD PTR [ebp+0x3196aaf1]
  418cf0:	out    dx,al
  418cf1:	jne    0x418cf1
  418cf3:	add    dh,dl
  418cf5:	std    
  418cf6:	adc    dh,ch
  418cf8:	fucomp st(7)
  418cfa:	or     al,0x2d
  418cfc:	pop    ds
  418cfd:	mov    al,ds:0x653020cf
  418d02:	push   edx
  418d03:	and    BYTE PTR [ebx+0x5f],0xac
  418d07:	add    DWORD PTR [edx-0x40],ebp
  418d0a:	jmp    0x5037f4eb
  418d0f:	aam    0x2
  418d11:	(bad)  
  418d12:	adc    DWORD PTR [esi],esp
  418d14:	jne    0x418d66
  418d16:	aam    0xcf
  418d18:	or     cl,dl
  418d1a:	mov    edx,0xd5d795a6
  418d1f:	scas   al,BYTE PTR es:[edi]
  418d20:	dec    eax
  418d21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d22:	jnp    0x418d44
  418d24:	pusha  
  418d25:	xchg   esi,eax
  418d26:	mov    ebx,0x5bb651d6
  418d2b:	mov    eax,esi
  418d2d:	add    dl,BYTE PTR [ecx]
  418d2f:	retf   
  418d30:	mov    dl,0xe8
  418d32:	jne    0x418cb7
  418d34:	or     al,BYTE PTR [edx+edi*2-0x4e]
  418d38:	xchg   ebx,eax
  418d39:	scas   eax,DWORD PTR es:[edi]
  418d3a:	dec    esi
  418d3b:	and    cl,BYTE PTR [ebx]
  418d3d:	xchg   ebp,eax
  418d3e:	cmp    edi,DWORD PTR [edx+0x68]
  418d41:	lock cmc 
  418d43:	mov    edi,0xda0992a
  418d48:	rcl    bh,cl
  418d4a:	push   0xb9604699
  418d4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d50:	mov    edx,0xbdd0dc3
  418d55:	hlt    
  418d56:	mov    eax,ds:0xe7e3dff9
  418d5b:	xchg   ebx,eax
  418d5c:	loope  0x418dbd
  418d5e:	cwde   
  418d5f:	jb     0x418da1
  418d61:	repz adc eax,0x92721526
  418d67:	lock pop ecx
  418d69:	out    0xcf,eax
  418d6b:	outs   dx,BYTE PTR ds:[esi]
  418d6c:	mov    cl,0x55
  418d6e:	imul   esi,DWORD PTR [edx],0x13
  418d71:	xchg   DWORD PTR [edi],eax
  418d73:	test   DWORD PTR [ecx],edi
  418d75:	(bad)  
  418d76:	mov    cl,0x10
  418d78:	ret    0xb292
  418d7b:	adc    ebp,DWORD PTR [esi]
  418d7d:	(bad)  
  418d7e:	and    al,0x32
  418d80:	mov    ah,0x17
  418d82:	pop    eax
  418d83:	sbb    ebx,DWORD PTR [edx]
  418d85:	in     eax,dx
  418d86:	dec    ebx
  418d87:	jo     0x418d75
  418d89:	shl    cl,cl
  418d8b:	push   ecx
  418d8c:	fwait
  418d8d:	(bad)  
  418d8e:	shl    cl,1
  418d90:	jmp    0xac7f:0x96834724
  418d97:	(bad)  
  418d98:	iret   
  418d99:	in     al,0x49
  418d9b:	mov    cl,0xbb
  418d9d:	mov    BYTE PTR [ecx+0x73],dl
  418da0:	dec    ebx
  418da1:	mov    esi,0x52eab0d4
  418da6:	push   edx
  418da7:	stos   BYTE PTR es:[edi],al
  418da8:	sub    BYTE PTR [edx-0x6a],0xf2
  418dac:	sbb    al,0x26
  418dae:	inc    eax
  418daf:	lods   al,BYTE PTR ds:[esi]
  418db0:	dec    esi
  418db1:	(bad)  
  418db3:	imul   esi,DWORD PTR [eax-0x35],0x4b265b82
  418dba:	or     BYTE PTR [esi-0x176f004a],al
  418dc0:	sahf   
  418dc1:	add    ah,bh
  418dc3:	test   esi,0x465d091d
  418dc9:	xchg   ebx,eax
  418dca:	fsubr  st,st(0)
  418dcc:	pop    esi
  418dcd:	(bad)  
  418dce:	mov    eax,ds:0x2fab7cec
  418dd3:	jo     0x418e00
  418dd5:	test   eax,0x8b57f566
  418dda:	pop    esp
  418ddb:	xor    al,0x95
  418ddd:	cmp    al,0xe4
  418ddf:	cmp    BYTE PTR [ebx],ch
  418de1:	idiv   DWORD PTR [edx+ebx*4-0x15fe946d]
  418de8:	mov    eax,ds:0x93906aac
  418ded:	popf   
  418dee:	outs   dx,DWORD PTR ds:[esi]
  418def:	jp     0x418e49
  418df1:	mov    bl,0x46
  418df3:	cmp    ebx,DWORD PTR [edx]
  418df5:	push   ecx
  418df6:	jno    0x418dce
  418df8:	xor    eax,0x982f2ba7
  418dfd:	jnp    0x418d8a
  418dff:	and    DWORD PTR [ebx],eax
  418e01:	pop    ebx
  418e02:	jo     0x418dac
  418e04:	jmp    0xa0a244e6
  418e09:	mov    bl,0xd7
  418e0b:	push   ss
  418e0c:	or     DWORD PTR [eax-0x6d65750c],esp
  418e12:	js     0x418e67
  418e14:	das    
  418e15:	dec    ecx
  418e16:	arpl   sp,bx
  418e18:	daa    
  418e19:	push   ds
  418e1a:	sbb    bl,cl
  418e1c:	add    DWORD PTR [esi+esi*8-0x914e785],ebx
  418e23:	test   eax,0x86f52c16
  418e28:	push   0x9558143c
  418e2d:	xchg   DWORD PTR [edx+0x1e],edx
  418e30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e31:	xor    esi,DWORD PTR [edx+ecx*4-0x50]
  418e35:	inc    ebx
  418e36:	xor    al,0x36
  418e38:	loope  0x418e29
  418e3a:	mov    bl,0x55
  418e3c:	cld    
  418e3d:	out    0x9e,eax
  418e3f:	sti    
  418e40:	retf   
  418e41:	jno    0x418dc3
  418e43:	test   BYTE PTR [ebx-0x66],ah
  418e46:	and    edx,ebx
  418e48:	push   cs
  418e49:	sub    BYTE PTR [ebx-0x2aef40fa],al
  418e4f:	mov    ebp,0x7f04a02c
  418e54:	lods   al,BYTE PTR ds:[esi]
  418e55:	pop    eax
  418e56:	sti    
  418e57:	sbb    al,0x7
  418e59:	dec    ecx
  418e5a:	mov    eax,0x3dda351d
  418e5f:	add    dl,BYTE PTR [edi-0xc8b6ec1]
  418e65:	inc    edx
  418e66:	pop    ebx
  418e67:	push   ebx
  418e68:	shl    BYTE PTR [edx+0x74f8ccd5],cl
  418e6e:	les    eax,FWORD PTR [eax]
  418e70:	mov    ds:0xcd5a518d,al
  418e75:	or     al,0x5e
  418e77:	imul   edi,DWORD PTR [ebp+0x14],0xfffffffd
  418e7b:	push   ebp
  418e7c:	mov    edx,0x9bce2ea9
  418e81:	xchg   esp,eax
  418e82:	fcom   QWORD PTR [eax-0x5db599ab]
  418e88:	out    0xbf,al
  418e8a:	add    BYTE PTR [edx+0x11],bl
  418e8d:	les    edx,FWORD PTR [edx-0x4c]
  418e90:	inc    edx
  418e91:	imul   ebp,DWORD PTR [edi],0x23d3faa2
  418e97:	mov    cs,WORD PTR [ebp+0x2b2a289b]
  418e9d:	cmc    
  418e9e:	pop    esp
  418e9f:	push   edi
  418ea0:	bound  ecx,QWORD PTR [ebx+0xa]
  418ea3:	or     BYTE PTR [edi],dh
  418ea5:	and    eax,0x75ff6c4e
  418eaa:	mov    cl,0xdb
  418eac:	jmp    0x418eaf
  418eae:	in     eax,0xf3
  418eb0:	jmp    0x418f0a
  418eb2:	pop    edx
  418eb3:	add    al,0x93
  418eb5:	sbb    ah,cl
  418eb7:	cdq    
  418eb8:	int3   
  418eb9:	mov    ch,0xce
  418ebb:	mov    ds:0x841cca67,eax
  418ec0:	(bad)  
  418ec1:	in     eax,dx
  418ec2:	stc    
  418ec3:	mov    ch,0xc7
  418ec5:	mov    ebx,0xc30552
  418eca:	mov    ah,0xdf
  418ecc:	loopne 0x418e77
  418ece:	fild   QWORD PTR [edx+0x40]
  418ed1:	fmul   QWORD PTR [ecx+0x7c]
  418ed4:	sub    edx,ebp
  418ed6:	jb     0x418e99
  418ed8:	jns    0x418e7e
  418eda:	rol    bl,0xc8
  418edd:	and    ecx,DWORD PTR [edi]
  418edf:	push   ebx
  418ee0:	ret    0xc3e7
  418ee3:	mov    ch,0x4b
  418ee5:	retf   
  418ee6:	lock outs dx,DWORD PTR ds:[esi]
  418ee8:	mov    edx,0x664b622f
  418eed:	les    esp,FWORD PTR [ebx-0x45]
  418ef0:	aaa    
  418ef1:	and    eax,0xed338367
  418ef6:	(bad)  
  418ef7:	mov    bl,0x37
  418ef9:	ins    DWORD PTR es:[edi],dx
  418efa:	or     BYTE PTR [edi-0x7f31aa8a],0xa2
  418f01:	cmp    ebx,edx
  418f03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f04:	imul   eax,esp,0xffffffb7
  418f07:	aam    0x7b
  418f09:	popa   
  418f0a:	jecxz  0x418ea8
  418f0c:	add    esi,DWORD PTR [esi+0x30e8820f]
  418f12:	xor    DWORD PTR [edx],0xffffffbc
  418f15:	add    DWORD PTR [edi],eax
  418f17:	sub    ebp,DWORD PTR [eax-0x21]
  418f1a:	scas   eax,DWORD PTR es:[edi]
  418f1b:	mov    eax,0xd3932ee6
  418f20:	ror    DWORD PTR [ebx-0x9],1
  418f23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f24:	sbb    al,0xf4
  418f26:	inc    esp
  418f27:	add    DWORD PTR [esi],ebp
  418f29:	dec    edx
  418f2a:	adc    cl,BYTE PTR [esi+0x7fe93617]
  418f30:	lea    ecx,[esi]
  418f32:	iret   
  418f33:	(bad)  
  418f34:	repz inc ecx
  418f36:	es and eax,esi
  418f39:	xchg   ecx,eax
  418f3a:	cmc    
  418f3b:	das    
  418f3c:	jmp    0x418eca
  418f3e:	nop
  418f3f:	jecxz  0x418ef1
  418f41:	push   DWORD PTR [edx-0x6dac685b]
  418f47:	dec    edi
  418f48:	sub    edx,DWORD PTR [esi]
  418f4a:	retf   
  418f4b:	mov    bh,BYTE PTR [ebx]
  418f4d:	pop    ecx
  418f4e:	push   0x1b
  418f50:	test   ch,cl
  418f52:	mov    eax,ds:0x4d7b4e70
  418f57:	cmp    BYTE PTR [edx],ch
  418f59:	in     al,0x73
  418f5b:	daa    
  418f5c:	sub    dh,BYTE PTR [ecx-0x2e]
  418f5f:	fwait
  418f60:	xor    eax,0xb5d7f658
  418f65:	into   
  418f66:	push   edi
  418f67:	and    esp,eax
  418f69:	jnp    0x418f60
  418f6b:	push   0xffffffa5
  418f6d:	mov    ch,0x8e
  418f6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f70:	pop    edi
  418f71:	sub    BYTE PTR [edx-0x54],dh
  418f74:	adc    BYTE PTR [edi-0x12],0xa5
  418f78:	shl    BYTE PTR [edx+0x62],0xd0
  418f7c:	popf   
  418f7d:	and    esp,DWORD PTR [esi-0x6d4f3b77]
  418f83:	stc    
  418f84:	hlt    
  418f85:	cmp    al,0xd
  418f87:	xor    edi,edi
  418f89:	add    bh,BYTE PTR [esi+0x70]
  418f8c:	mov    ch,0xcd
  418f8e:	repz hlt 
  418f90:	lods   al,BYTE PTR gs:[esi]
  418f92:	cmp    eax,DWORD PTR [eax+0x62896472]
  418f98:	pop    esi
  418f99:	or     edi,DWORD PTR [eax+0x466fd1e2]
  418f9f:	push   es
  418fa0:	mov    dh,0xb2
  418fa2:	mov    ebx,0x15493d9b
  418fa7:	xor    al,0x57
  418fa9:	cmp    ch,BYTE PTR [esi]
  418fab:	addr16 ins DWORD PTR es:[di],dx
  418fae:	xor    DWORD PTR [esi+0x7104d43f],ebx
  418fb4:	das    
  418fb5:	clc    
  418fb6:	inc    esp
  418fb8:	and    eax,0xc47adc08
  418fbd:	push   eax
  418fbe:	hlt    
  418fbf:	jp     0x418fd1
  418fc1:	mov    dh,0x68
  418fc3:	xor    eax,0xafc6be04
  418fc8:	sbb    DWORD PTR [ebx+0x2dc91202],ecx
  418fce:	push   ds
  418fcf:	add    al,0x46
  418fd1:	icebp  
  418fd2:	pop    ds
  418fd3:	dec    ebx
  418fd4:	push   esp
  418fd5:	pop    es
  418fd6:	push   cs
  418fd7:	sbb    DWORD PTR [esi-0x5837b305],0xe5581862
  418fe1:	in     al,dx
  418fe2:	inc    esi
  418fe3:	inc    edi
  418fe4:	and    DWORD PTR [edx+0x4e],edx
  418fe7:	in     eax,0x22
  418fe9:	jmp    0x418ff8
  418feb:	jne    0x418fb0
  418fed:	clc    
  418fee:	xlat   BYTE PTR es:[ebx]
  418ff0:	dec    esi
  418ff1:	xlat   BYTE PTR ds:[ebx]
  418ff2:	or     al,0x3c
  418ff4:	pop    ecx
  418ff5:	(bad)  
  418ff7:	push   es
  418ff8:	int    0x7a
  418ffa:	fwait
  418ffb:	pop    edi
  418ffc:	mov    al,ds:0x4b517881
  419001:	in     eax,dx
  419002:	in     al,0x37
  419004:	in     al,0xcb
  419006:	push   ds
  419007:	xlat   BYTE PTR ds:[ebx]
  419008:	cmc    
  419009:	scas   eax,DWORD PTR es:[edi]
  41900a:	lock push ss
  41900c:	xchg   DWORD PTR [eax-0x2e],esp
  41900f:	sti    
  419010:	mov    edx,0x9048400c
  419015:	pop    ds
  419016:	adc    ah,ch
  419018:	fist   WORD PTR [ecx-0x23]
  41901b:	fbld   TBYTE PTR [edi-0x7d]
  41901e:	jbe    0x418fb4
  419020:	mov    ds:0x6c59b0e9,al
  419025:	fidivr WORD PTR [edi-0x5b0a46fb]
  41902b:	das    
  41902c:	push   ds
  41902d:	nop
  41902e:	popa   
  41902f:	cmp    DWORD PTR [ecx+0x70],0x568f0b55
  419036:	adc    al,0x25
  419038:	cmp    al,0xaf
  41903a:	mov    cs,ebp
  41903c:	mov    ch,0xe2
  41903e:	and    bl,BYTE PTR [di]
  419041:	pop    eax
  419042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419043:	jns    0x4190a8
  419045:	pop    es
  419046:	in     al,0xe4
  419048:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419049:	fdivr  DWORD PTR [ebx]
  41904b:	sub    ecx,DWORD PTR [eax+edx*4]
  41904e:	popa   
  41904f:	xbegin 0xf40ebb8b
  419055:	(bad)  
  419056:	pop    edi
  419057:	jmp    0x419066
  419059:	pushf  
  41905a:	int3   
  41905b:	pop    ebx
  41905c:	xchg   esi,eax
  41905d:	or     dh,BYTE PTR [ebp+0x9]
  419060:	inc    BYTE PTR ds:[edi-0x6a]
  419064:	jns    0x419028
  419066:	mov    ?,ebp
  419068:	xchg   edi,eax
  419069:	aas    
  41906a:	inc    ebp
  41906b:	xchg   esi,eax
  41906c:	je     0x41906e
  41906e:	pop    ecx
  41906f:	inc    edi
  419070:	ja     0x41906b
  419072:	jne    0x419002
  419074:	fist   WORD PTR [ebp-0x4]
  419077:	mov    gs,WORD PTR [esi-0x46]
  41907a:	inc    ecx
  41907b:	loope  0x419084
  41907d:	lea    esi,[ecx+0x67ba1a73]
  419083:	jg     0x419012
  419085:	daa    
  419086:	mov    WORD PTR [edi],ss
  419088:	jno    0x419013
  41908a:	pop    esi
  41908b:	mov    BYTE PTR [eax],bl
  41908d:	lods   eax,DWORD PTR ds:[esi]
  41908e:	(bad)  
  41908f:	clc    
  419090:	not    DWORD PTR [esi-0x33f41ac4]
  419096:	loop   0x4190a5
  419098:	add    esi,DWORD PTR [ebp+0x7fb76e51]
  41909e:	test   al,0x20
  4190a0:	add    ch,ah
  4190a2:	mov    dl,0xaf
  4190a4:	mov    edx,0x57d266b0
  4190a9:	cmp    eax,0xad9ed29e
  4190ae:	push   edx
  4190af:	sub    dh,bl
  4190b1:	hlt    
  4190b2:	jmp    0xaa9f:0xbe4c7e35
  4190b9:	adc    eax,0x42b5c95b
  4190be:	mov    BYTE PTR [eax-0x69],bh
  4190c1:	push   esi
  4190c2:	stc    
  4190c3:	in     eax,0xe5
  4190c5:	stos   BYTE PTR es:[edi],al
  4190c6:	mov    ebx,esp
  4190c8:	push   ecx
  4190c9:	cmp    edx,edi
  4190cb:	es add dl,cl
  4190ce:	mov    DWORD PTR [ebx-0x12],ebx
  4190d1:	pop    es
  4190d2:	xor    eax,0xaca1f74e
  4190d7:	push   ebx
  4190d8:	retf   
  4190d9:	inc    eax
  4190da:	cdq    
  4190db:	pop    ebp
  4190dc:	jg     0x4190e5
  4190de:	dec    ecx
  4190df:	mov    dl,0xb4
  4190e1:	jnp    0x41909f
  4190e3:	cmp    dh,BYTE PTR [ecx]
  4190e5:	(bad)
  4190e9:	mov    ah,0xa3
  4190eb:	fild   WORD PTR [eax]
	...
  4192b9:	add    BYTE PTR [eax],al
  4192bb:	add    dl,dl
  4192bd:	in     al,dx
  4192be:	and    edx,DWORD PTR [ecx]
  4192c0:	aas    
  4192c1:	fcomip st,st(2)
  4192c3:	out    dx,eax
  4192c4:	or     DWORD PTR [esi+0x1461eacd],ebp
  4192ca:	out    dx,al
  4192cb:	or     BYTE PTR [edi-0x33],bh
  4192ce:	add    DWORD PTR [eax],eax
  4192d0:	and    eax,0x99000007
  4192d5:	jns    0x41932d
  4192d7:	cld    
  4192d8:	push   cs
  4192d9:	retf   
  4192da:	add    DWORD PTR [edi+0x19b9f4e4],ecx
  4192e0:	jnp    0x4192ac
  4192e2:	xor    dl,BYTE PTR [ebx]
  4192e4:	cmp    eax,0x3b71b50
  4192e9:	pop    ebp
  4192ea:	int    0xa
  4192ec:	cmp    BYTE PTR [eax-0x1d],dh
  4192ef:	div    bh
  4192f1:	xor    eax,0x69027300
  4192f6:	shl    BYTE PTR [edx],1
  4192f8:	add    ecx,ecx
  4192fa:	out    0xde,eax
  4192fc:	mov    gs,edx
  4192fe:	add    DWORD PTR [eax+0x40289653],ebp
  419304:	leave  
  419305:	int    0x3b
  419307:	mov    ?,WORD PTR [eax+eiz*1+0x37]
  41930b:	mov    BYTE PTR [edi-0x4bdcd0e8],dh
  419311:	jo     0x4192b2
  419313:	bound  ecx,QWORD PTR [eax+0x43]
  419316:	lods   al,BYTE PTR ds:[esi]
  419317:	xchg   bh,cl
  419319:	xchg   edx,eax
  41931a:	adc    DWORD PTR [ebp-0x1c],0x8d0bb927
  419321:	jp     0x419349
  419323:	int3   
  419324:	push   ss
  419325:	xor    DWORD PTR [edx+0x6e],esi
  419328:	mov    esi,0x7b6e1e6f
  41932d:	iret   
  41932e:	push   ss
  41932f:	and    BYTE PTR [edi+0x29],cl
  419332:	out    0x8,al
  419334:	dec    esp
  419335:	popa   
  419336:	test   eax,0x76b09c19
  41933b:	(bad)  
  41933e:	inc    edx
  41933f:	dec    esi
  419340:	push   esi
  419341:	ret    0x3e43
  419344:	xchg   edi,eax
  419345:	adc    BYTE PTR [ecx+0x5b],dl
  419348:	inc    edx
  419349:	mov    edx,0x7f9e079e
  41934e:	jns    0x419320
  419350:	mov    cl,0x29
  419352:	pop    eax
  419353:	imul   edx,DWORD PTR [ebp+ebp*4-0x55],0xdea65c41
  41935b:	scas   al,BYTE PTR es:[edi]
  41935c:	aas    
  41935d:	inc    edi
  41935e:	push   0xf7e6ab3d
  419363:	scas   eax,DWORD PTR es:[edi]
  419364:	pop    eax
  419365:	or     al,0x9e
  419367:	mov    BYTE PTR [edi+edx*2],dh
  41936a:	pop    es
  41936b:	add    BYTE PTR [ebp+0x1c722751],bl
  419371:	test   eax,0x3e74b719
  419376:	dec    edi
  419377:	shl    DWORD PTR [esi+0x4a],1
  41937a:	std    
  41937b:	xchg   edi,eax
  41937c:	jecxz  0x419330
  41937e:	add    bh,BYTE PTR [edi]
  419380:	xchg   bl,bh
  419382:	aam    0x4c
  419384:	ja     0x4193c4
  419386:	add    edx,DWORD PTR [edx]
  419388:	popa   
  419389:	neg    DWORD PTR [edi+0x1582cb67]
  41938f:	jle    0x419408
  419391:	pop    edi
  419392:	inc    bp
  419394:	les    ebx,FWORD PTR [edi]
  419396:	dec    ebp
  419397:	mov    ah,0xd5
  419399:	and    al,0x8e
  41939b:	call   0xbdc:0x2c9498df
  4193a2:	ins    BYTE PTR es:[edi],dx
  4193a3:	imul   ebx,DWORD PTR [eax-0xc],0xffffff92
  4193a7:	pop    esp
  4193a8:	(bad)  
  4193a9:	adc    eax,0xe3986155
  4193ae:	mov    cs,WORD PTR [ecx]
  4193b0:	jl     0x41938f
  4193b2:	sti    
  4193b3:	addr16 mov edx,0xd9f1c258
  4193b9:	mov    ebx,0x6955728b
  4193be:	gs aaa 
  4193c0:	push   0xffffff87
  4193c2:	jns    0x4193ff
  4193c4:	hlt    
  4193c5:	gs sbb ah,ch
  4193c8:	xor    ch,BYTE PTR [edx-0x3697a517]
  4193ce:	pop    eax
  4193cf:	xor    DWORD PTR [edx-0x6b],edi
  4193d2:	dec    DWORD PTR [edx+0x37]
  4193d5:	inc    BYTE PTR [ebx]
  4193d7:	inc    esi
  4193d8:	jo     0x41937e
  4193da:	pop    edi
  4193db:	cmp    eax,DWORD PTR cs:0x7058b926
  4193e2:	push   edx
  4193e3:	or     ch,dl
  4193e5:	fucom  st(7)
  4193e7:	or     al,0xc5
  4193e9:	push   esp
  4193ea:	loopne 0x419374
  4193ec:	pop    esi
  4193ed:	add    dh,BYTE PTR [ebx+0x6e]
  4193f0:	xlat   BYTE PTR ds:[ebx]
  4193f1:	arpl   WORD PTR [eax],dx
  4193f3:	outs   dx,DWORD PTR ds:[esi]
  4193f4:	shl    DWORD PTR [eax-0x66],1
  4193f7:	(bad)  
  4193f8:	jmp    0xd725:0x43a863bf
  4193ff:	xor    esi,DWORD PTR [esi]
  419401:	cli    
  419402:	in     al,0xdd
  419404:	push   ecx
  419405:	sub    eax,0x6d49292e
  41940a:	cmp    al,BYTE PTR [edi-0x6f]
  41940d:	xor    esp,ebx
  41940f:	xchg   DWORD PTR [edx-0x56],eax
  419412:	popf   
  419413:	cwde   
  419414:	mov    edi,0x3cd7718d
  419419:	pop    ebp
  41941a:	ins    DWORD PTR es:[edi],dx
  41941b:	cmp    dl,dh
  41941d:	jne    0x41942f
  41941f:	mov    ds:0x9e953de1,eax
  419424:	xor    eax,0xf6d50487
  419429:	and    DWORD PTR [ebx-0x1840c0c6],edi
  41942f:	icebp  
  419430:	out    dx,eax
  419431:	jbe    0x419469
  419433:	dec    ecx
  419434:	jmp    0x4b47fff7
  419439:	loopne 0x419405
  41943b:	or     bl,BYTE PTR [edx-0x6f]
  41943e:	xor    bh,cl
  419440:	adc    BYTE PTR [eax],al
  419442:	call   0xa952b446
  419447:	inc    ecx
  419448:	jne    0x41943a
  41944a:	std    
  41944b:	popf   
  41944c:	shl    cl,1
  41944e:	inc    esi
  41944f:	sahf   
  419450:	and    ch,BYTE PTR [esi-0x10c2286]
  419456:	jmp    0x419465
  419458:	sub    BYTE PTR [ecx+0x75ca882b],0x71
  41945f:	and    ecx,edi
  419461:	in     eax,0xf2
  419463:	or     esp,ebp
  419465:	add    ah,BYTE PTR [edi-0x2c62ba50]
  41946b:	or     al,0xe0
  41946d:	dec    ecx
  41946e:	std    
  41946f:	xchg   DWORD PTR [ecx-0x24],ebx
  419472:	retf   
  419473:	add    DWORD PTR [eax-0x13],edx
  419476:	lock xchg esp,eax
  419478:	jmp    0x431261ce
  41947d:	push   esi
  41947e:	test   ah,cl
  419480:	outs   dx,BYTE PTR ds:[esi]
  419481:	lods   al,BYTE PTR ds:[esi]
  419482:	pop    eax
  419483:	ret    0x30fa
  419486:	jle    0x419472
  419488:	jne    0x419457
  41948a:	xchg   edi,eax
  41948b:	xchg   ebp,eax
  41948c:	sahf   
  41948d:	sahf   
  41948e:	and    al,0xca
  419490:	mov    edx,?
  419492:	test   eax,0xb91840d3
  419497:	dec    esp
  419498:	inc    edi
  419499:	add    al,BYTE PTR [ebx+0x1e]
  41949c:	clc    
  41949d:	inc    esp
  41949e:	sar    BYTE PTR [ebx-0xf6d07c6],1
  4194a4:	aad    0x90
  4194a6:	adc    DWORD PTR [esi+0x77],0x3
  4194aa:	push   esi
  4194ab:	es mov ecx,es
  4194ae:	in     eax,dx
  4194af:	aas    
  4194b0:	push   ebp
  4194b1:	cmp    eax,0x40997f28
  4194b6:	into   
  4194b7:	mov    BYTE PTR [esi+0x55],bl
  4194ba:	jle    0x41944a
  4194bc:	mov    esi,0x751feec0
  4194c1:	(bad)  
  4194c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194c3:	fisub  DWORD PTR [ecx]
  4194c5:	inc    esp
  4194c6:	jo     0x4194ba
  4194c8:	mov    DWORD PTR [esi+0x69dcbac2],eax
  4194ce:	and    ah,cl
  4194d0:	and    DWORD PTR [edi],0xffffff8c
  4194d3:	sbb    eax,0x71754fcb
  4194d8:	jmp    0x4194ec
  4194da:	jmp    0xf71c:0x9b8dcd4
  4194e1:	adc    eax,0xb53a0ee7
  4194e6:	(bad)  ds:0xb9b04ca6
  4194ec:	add    eax,0x50c65ad8
  4194f1:	and    al,0x52
  4194f3:	mov    esp,0x4f5d6e11
  4194f8:	(bad)  
  4194f9:	fisub  DWORD PTR [esi+0x6b]
  4194fc:	inc    eax
  4194fd:	inc    esp
  4194fe:	sbb    bh,bh
  419500:	jge    0x41956c
  419502:	jg     0x4194f2
  419504:	pop    ds
  419505:	call   DWORD PTR [ecx-0x5c]
  419508:	(bad)  
  419509:	int    0x35
  41950b:	fcom   QWORD PTR [ebx-0x11]
  41950e:	push   es
  41950f:	and    eax,0xadf6f47f
  419514:	push   edx
  419515:	(bad)  
  419516:	cmp    eax,0x5f1edc42
  41951b:	adc    cl,BYTE PTR [ebp+0x68]
  41951e:	jg     0x419583
  419520:	stos   BYTE PTR es:[edi],al
  419521:	mul    DWORD PTR fs:[ecx-0x16]
  419525:	sub    esi,DWORD PTR [esi]
  419527:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419528:	jecxz  0x419588
  41952a:	cmp    eax,0x61b02d82
  41952f:	xor    DWORD PTR [ebx+0x73dcd7a8],esi
  419535:	cdq    
  419536:	sbb    dh,BYTE PTR [ecx+0x5eddfa18]
  41953c:	jmp    0x1ba3:0x9d72ba78
  419543:	push   edi
  419544:	xor    al,0xa6
  419546:	pop    edi
  419547:	inc    ebx
  419548:	add    ah,BYTE PTR [eax+0x33]
  41954b:	add    ah,al
  41954d:	in     al,0x4a
  41954f:	or     ch,BYTE PTR [esi+edx*2]
  419552:	jle    0x4195bb
  419554:	(bad)  
  419555:	jb     0x4195c8
  419557:	jmp    0x47ee384b
  41955c:	cmc    
  41955d:	jbe    0x419583
  41955f:	jle    0x41958a
  419561:	mov    ds:0x6178448,al
  419566:	int3   
  419567:	mov    ?,WORD PTR ds:[edx-0x4c7164f8]
  41956e:	in     al,0xe3
  419570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419571:	fld    TBYTE PTR [edx]
  419573:	mov    DWORD PTR [esi+edi*4-0x73],ecx
  419577:	jb     0x4195d5
  419579:	dec    ebx
  41957a:	sbb    bh,BYTE PTR [edx+0x61]
  41957d:	into   
  41957e:	je     0x419560
  419580:	nop
  419581:	pop    ds
  419582:	clc    
  419583:	mov    ecx,0x570250ca
  419588:	push   edx
  419589:	mov    eax,ds:0x518a4b72
  41958e:	rcl    bl,1
  419590:	lahf   
  419591:	imul   DWORD PTR [esi-0x69]
  419594:	dec    esi
  419595:	iret   
  419596:	leave  
  419597:	sub    DWORD PTR [ecx],0x55a150ea
  41959d:	sub    eax,0x35f98038
  4195a2:	test   esi,ecx
  4195a4:	sbb    cl,dl
  4195a6:	inc    edi
  4195a7:	adc    DWORD PTR [ecx+0x35],eax
  4195aa:	add    ebx,edx
  4195ac:	sbb    eax,0x379cd40c
  4195b1:	aaa    
  4195b2:	adc    BYTE PTR [eax+ebp*1],dh
  4195b5:	sti    
  4195b6:	sub    al,ch
  4195b8:	ins    BYTE PTR es:[edi],dx
  4195b9:	out    dx,eax
  4195ba:	pop    ss
  4195bb:	scas   eax,DWORD PTR es:[edi]
  4195bc:	test   al,0x4b
  4195be:	sbb    BYTE PTR [eax],cl
  4195c0:	mov    bl,0x2f
  4195c2:	jns    0x419619
  4195c4:	in     al,dx
  4195c5:	push   edx
  4195c6:	dec    edi
  4195c7:	mov    ecx,0xa4e864a1
  4195cc:	mov    ds:0x10c087c3,al
  4195d1:	pop    esi
  4195d2:	bound  ecx,QWORD PTR [esi+0x7a]
  4195d5:	das    
  4195d6:	rcl    DWORD PTR [esi],0x41
  4195d9:	xlat   BYTE PTR ds:[ebx]
  4195da:	(bad)  
  4195db:	test   ecx,0x2b547d0f
  4195e1:	push   ds
  4195e2:	mov    eax,0xb996da19
  4195e7:	and    dh,BYTE PTR [ebx]
  4195e9:	je     0x4195fb
  4195eb:	les    ecx,FWORD PTR [esi+eiz*1-0x70]
  4195ef:	dec    ebp
  4195f0:	imul   edi,eax,0x6bba455c
  4195f6:	push   esp
  4195f7:	mov    dl,0x8f
  4195f9:	mov    ch,0xa4
  4195fb:	fistp  DWORD PTR [edx]
  4195fd:	jp     0x419665
  4195ff:	add    eax,0x3632285f
  419604:	add    BYTE PTR [edi+eiz*4],0xba
  419608:	jmp    0x4195c9
  41960a:	scas   eax,DWORD PTR es:[edi]
  41960b:	xchg   ecx,eax
  41960c:	jae    0x419658
  41960e:	lea    ecx,[edi]
  419610:	inc    ebp
  419611:	sub    edi,eax
  419613:	or     al,0x7
  419615:	jmp    0x6662b9b4
  41961a:	push   0xffffffdb
  41961c:	es in  al,0x6a
  41961f:	ret    
  419620:	int    0x3c
  419622:	sub    dl,BYTE PTR [eax]
  419624:	push   0x50
  419626:	fisttp QWORD PTR [eax-0x786a7af5]
  41962c:	xor    BYTE PTR [edx+edi*4-0x54],bh
  419630:	mov    ah,dl
  419632:	xor    eax,0x746e836e
  419637:	push   ebx
  419638:	push   cs
  419639:	push   0x1c
  41963b:	mov    ds:0x7318569b,al
  419640:	mov    al,0xf2
  419642:	loope  0x419611
  419644:	sub    ah,ah
  419646:	mov    edi,0x61280d9b
  41964b:	mov    esp,esp
  41964d:	add    BYTE PTR [ecx],0x5c
  419650:	push   esp
  419651:	lahf   
  419652:	fwait
  419653:	imul   ebp,DWORD PTR [ebx],0x1088958e
  419659:	pop    eax
  41965a:	xchg   esi,eax
  41965b:	shl    DWORD PTR ds:[ecx],1
  41965e:	cdq    
  41965f:	xor    cl,BYTE PTR [esi]
  419661:	nop
  419662:	xchg   ebx,eax
  419663:	loopne 0x41964b
  419665:	(bad)  
  419666:	pushf  
  419667:	dec    edx
  419668:	jmp    0x15576664
  41966d:	ins    BYTE PTR es:[edi],dx
  41966e:	xchg   ecx,eax
  41966f:	inc    edx
  419670:	jl     0x4196ec
  419672:	int3   
  419673:	mov    ah,0x1b
  419675:	rol    DWORD PTR [edi-0x3f001e49],1
  41967b:	cld    
  41967c:	push   esp
  41967d:	je     0x419657
  41967f:	push   esp
  419680:	iret   
  419681:	mov    ecx,0x56fffadc
  419686:	sti    
  419687:	mov    esp,DWORD PTR [ebx+ebx*2]
  41968a:	xor    eax,0x9b0e709d
  41968f:	add    BYTE PTR [ebx],dl
  419691:	sub    DWORD PTR [ecx],0x1b
  419694:	(bad)  
  419695:	not    BYTE PTR [ecx+eax*1]
  419698:	lea    edx,[esi+0x8]
  41969b:	adc    DWORD PTR [ebp+0x545dc270],eax
  4196a1:	sbb    bh,ah
  4196a3:	push   es
  4196a4:	and    BYTE PTR [ecx],0xe
  4196a7:	xor    eax,0x2cb09bb1
  4196ac:	ja     0x419684
  4196ae:	jns    0x419655
  4196b0:	dec    ebp
  4196b1:	or     al,0x75
  4196b3:	shr    DWORD PTR [edi],1
  4196b5:	int    0xa0
  4196b7:	daa    
  4196b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196b9:	fild   DWORD PTR [ebx]
  4196bb:	lahf   
  4196bc:	int3   
  4196bd:	xor    cl,BYTE PTR [ebx+0x7c6032ba]
  4196c3:	mov    bh,0x8d
  4196c5:	(bad)  
  4196c7:	lods   eax,DWORD PTR ds:[esi]
  4196c8:	adc    esp,ebx
  4196ca:	arpl   WORD PTR [edx-0x633df210],sp
  4196d0:	cmp    DWORD PTR [eax],edi
  4196d2:	and    ecx,DWORD PTR [edx+ecx*1-0x35a41972]
  4196d9:	imul   edi,DWORD PTR [ebp-0x66],0x971a59ce
  4196e0:	es jle 0x4196a0
  4196e3:	mov    bh,0xcb
  4196e5:	out    dx,eax
  4196e6:	cmovp  eax,DWORD PTR [edx]
  4196e9:	fcmovne st,st(6)
  4196eb:	les    esp,FWORD PTR [ebx+0x21]
  4196ee:	int3   
  4196ef:	mov    ch,0xd
  4196f1:	(bad)  
  4196f2:	enter  0x58a3,0x9d
  4196f6:	dec    eax
  4196f7:	sub    eax,0x7afbdaa1
  4196fc:	xor    DWORD PTR [eax],edx
  4196fe:	std    
  4196ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419700:	inc    edx
  419701:	outs   dx,DWORD PTR ds:[esi]
  419702:	fistp  DWORD PTR [edx-0x80]
  419705:	cmp    BYTE PTR [ebp-0x156787d9],0x3c
  41970c:	lods   al,BYTE PTR ds:[esi]
  41970d:	push   ebx
  41970e:	enter  0xfbce,0xb9
  419712:	retf   0xe5dc
  419715:	push   eax
  419716:	cli    
  419717:	push   ebp
  419718:	jae    0x41977b
  41971a:	push   edi
  41971b:	test   eax,0x2acb6970
  419720:	xchg   eax,edx
  419722:	inc    edi
  419723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419724:	in     eax,0x27
  419726:	mov    edx,0xf1ad36ec
  41972b:	adc    BYTE PTR [ebx-0x3253735c],bl
  419731:	cmp    ah,BYTE PTR [ebp-0x3b]
  419734:	xor    dl,BYTE PTR [eax-0x41]
  419737:	shr    dl,0x13
  41973a:	into   
  41973b:	outs   dx,BYTE PTR ds:[esi]
  41973c:	addr16 sahf 
  41973e:	xchg   esi,eax
  41973f:	sti    
  419740:	add    al,0xbc
  419742:	mov    edx,0x18244f5e
  419747:	sub    DWORD PTR [esi],0xffffffdc
  41974a:	lahf   
  41974b:	mov    edx,0xb0866a21
  419750:	cdq    
  419751:	push   ds
  419752:	pop    ss
  419753:	in     al,0x2e
  419755:	ins    DWORD PTR es:[edi],dx
  419756:	pusha  
  419757:	mov    ds:0x8e86c909,eax
  41975c:	rcr    dh,0x2c
  41975f:	sub    DWORD PTR [ebx],eax
  419761:	push   ss
  419762:	gs jne 0x4197bb
  419765:	outs   dx,DWORD PTR ds:[esi]
  419766:	and    eax,0x38b00a18
  41976b:	inc    ebx
  41976c:	xchg   ebp,eax
  41976d:	dec    edi
  41976e:	popa   
  41976f:	out    0x4f,eax
  419771:	ficomp WORD PTR [eax+edx*1]
  419774:	test   eax,0x4268f1f2
  419779:	cld    
  41977a:	pop    ebx
  41977b:	adc    ah,BYTE PTR [edx]
  41977d:	add    eax,0xe2ba6cb8
  419782:	inc    ecx
  419783:	jnp    0x41974d
  419785:	cmp    dl,dh
  419787:	in     eax,dx
  419788:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419789:	sub    bh,al
  41978b:	and    DWORD PTR [ebx-0x40ed6f73],ebx
  419791:	adc    edx,DWORD PTR [edx+0x30]
  419794:	mov    dh,0xa5
  419796:	cdq    
  419797:	push   0x78
  419799:	xchg   DWORD PTR [edx-0x1ed3e4e2],ebp
  41979f:	sar    DWORD PTR [eax-0x30713f60],1
  4197a5:	jbe    0x419729
  4197a7:	popf   
  4197a8:	xchg   DWORD PTR [edx+0x54],esi
  4197ab:	(bad)  
  4197ac:	mov    al,ds:0x4e508c21
  4197b1:	pop    esp
  4197b2:	imul   esi,DWORD PTR [esi+0x35e30930],0xffffffb9
  4197b9:	jp     0x41978a
  4197bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197bc:	popa   
  4197bd:	loop   0x41982c
  4197bf:	pop    esi
  4197c0:	mov    ds:0x59aa2142,al
  4197c5:	adc    al,0x56
  4197c7:	fisttp DWORD PTR [esp+ebx*4]
  4197ca:	out    0x55,al
  4197cc:	call   edx
  4197ce:	add    eax,DWORD PTR [eax-0x25]
  4197d1:	(bad)  
  4197d3:	inc    esp
  4197d4:	xor    esi,DWORD PTR [eax]
  4197d6:	sbb    dh,BYTE PTR [eax+0x68]
  4197d9:	ss add eax,edi
  4197dc:	pop    ecx
  4197dd:	add    bh,bh
  4197df:	out    dx,eax
  4197e0:	lods   eax,DWORD PTR ds:[esi]
  4197e1:	adc    esp,DWORD PTR ds:0x75226bcb
  4197e7:	and    dl,BYTE PTR [esi+0x4d5b1bf9]
  4197ed:	xor    eax,0xfc214248
  4197f2:	out    dx,al
  4197f3:	sti    
  4197f4:	add    eax,DWORD PTR [edi]
  4197f6:	shr    BYTE PTR [ebx],1
  4197f8:	xor    eax,0xb161d81a
  4197fd:	lock jne 0x41985e
  419800:	shr    DWORD PTR ds:0xcea964b1,0x3f
  419807:	push   esp
  419808:	mov    bh,0x87
  41980a:	stc    
  41980b:	mov    ds:0x387f42b7,al
  419810:	loop   0x4197eb
  419812:	push   eax
  419813:	mov    ch,0x80
  419815:	dec    esi
  419816:	jecxz  0x41988a
  419818:	push   edx
  419819:	frstor [esi]
  41981b:	adc    eax,0x715682e9
  419820:	cmp    eax,0x2ab2bd0e
  419825:	or     eax,eax
  419827:	adc    ah,BYTE PTR [esi+0x44]
  41982a:	test   BYTE PTR [edx-0x38],ah
  41982d:	dec    DWORD PTR [eax-0x54f3d21f]
  419833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419834:	sbb    BYTE PTR [eax-0x2d75374f],al
  41983a:	int3   
  41983b:	repz imul edx,DWORD PTR [esi+0x68],0x23
  419840:	or     al,0xea
  419842:	repnz inc ebx
  419844:	sahf   
  419845:	cs cmp ebx,0x7ae4b689
  41984c:	sti    
  41984d:	test   DWORD PTR [eax-0x1d],ebx
  419850:	fist   WORD PTR [eax-0x4995f54a]
  419856:	int    0x8
  419858:	cmc    
  419859:	les    ebx,FWORD PTR [esi]
  41985b:	mov    al,0x3f
  41985d:	xchg   esp,eax
  41985e:	clc    
  41985f:	test   al,0x7e
  419861:	jmp    0x4197ef
  419863:	jbe    0x4197f1
  419865:	stos   BYTE PTR es:[edi],al
  419866:	adc    eax,0xbc3bd7a3
  41986b:	mov    ah,0x10
  41986d:	and    DWORD PTR [ebx],eax
  41986f:	pop    ds
  419870:	inc    edx
  419871:	jle    0x419816
  419873:	sbb    eax,0x15d3ba0c
  419878:	scas   eax,DWORD PTR es:[edi]
  419879:	mov    al,ds:0xbecf7391
  41987e:	pop    ds
  41987f:	sbb    eax,DWORD PTR [esi]
  419881:	lahf   
  419882:	push   esp
  419883:	xchg   ebx,eax
  419884:	in     al,dx
  419885:	loopne 0x419881
  419887:	scas   al,BYTE PTR es:[edi]
  419888:	inc    eax
  419889:	shr    esi,0x37
  41988c:	pop    ds
  41988d:	rcl    DWORD PTR [eax-0x543c6cda],cl
  419893:	call   FWORD PTR [ebp+0x40]
  419896:	outs   dx,BYTE PTR ds:[esi]
  419897:	call   0xba26:0xa6024e5a
  41989e:	xor    dh,BYTE PTR [edi+0x2d097014]
  4198a4:	add    DWORD PTR [ebx+0x2b],esp
  4198a7:	jge    0x419829
  4198a9:	fadd   DWORD PTR [edi+0x64e763da]
  4198af:	inc    dl
  4198b1:	aad    0xe
  4198b3:	mul    dl
  4198b5:	jns    0x41984f
  4198b7:	scas   eax,DWORD PTR es:[edi]
  4198b8:	fcmovb st,st(1)
  4198ba:	pop    es
  4198bb:	jp     0x4198c6
  4198bd:	aaa    
  4198be:	dec    ebx
  4198bf:	shl    DWORD PTR [esi-0x6a8bd4d7],cl
  4198c5:	jp     0x4198d5
  4198c7:	pop    edi
  4198c8:	dec    ecx
  4198c9:	or     BYTE PTR [edx+0x7a],0x7f
  4198cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198ce:	add    al,0x2d
  4198d0:	inc    eax
  4198d1:	sub    edi,edx
  4198d3:	aaa    
  4198d4:	mov    dh,0x54
  4198d6:	pop    edx
  4198d7:	jno    0x4198cc
  4198d9:	mov    ecx,0xf45a4bce
  4198de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198df:	or     BYTE PTR [ebp-0x48],ch
  4198e2:	pop    ebx
  4198e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198e4:	xor    ecx,edi
  4198e6:	sar    BYTE PTR [ecx],cl
  4198e8:	out    dx,al
  4198e9:	sti    
  4198ea:	push   ds
  4198eb:	jl     0x419955
  4198ed:	add    eax,0x7f482943
  4198f2:	aaa    
  4198f3:	test   DWORD PTR [esi+0xda79d5e],eax
  4198f9:	repnz dec esp
  4198fb:	mov    ds,WORD PTR [ebp-0x78d3166c]
  419901:	fsub   DWORD PTR [esp+ebp*1]
  419904:	or     ecx,ecx
  419906:	les    esi,FWORD PTR ds:0xe4a19ff4
  41990c:	arpl   WORD PTR [edi-0x5b3dcb6c],cx
  419912:	push   ebx
  419913:	sbb    al,0x6d
  419915:	add    esp,esp
  419917:	aaa    
  419918:	pop    eax
  419919:	mov    dh,0x64
  41991b:	call   0xd412:0x44668b3b
  419922:	mov    ss,ebp
  419924:	jb     0x419970
  419926:	jmp    0x5836:0x710ace2a
  41992d:	dec    eax
  41992e:	lahf   
  41992f:	adc    BYTE PTR [ebp+0x1],0xef
  419933:	cmp    dh,bh
  419935:	inc    eax
  419936:	mov    eax,ds:0xcf7226a1
  41993b:	inc    ebx
  41993c:	call   0x69d61f12
  419941:	retf   
  419942:	imul   ebx,DWORD PTR [edx-0x73],0xe7b6aa63
  419949:	add    bl,BYTE PTR [edi-0x53]
  41994c:	xor    DWORD PTR [edi-0x5c],0xf7abb4be
  419953:	stos   BYTE PTR es:[edi],al
  419954:	mov    bl,0x66
  419956:	or     eax,0xd515d718
  41995b:	fld    TBYTE PTR [edi]
  41995d:	mov    bh,0x83
  41995f:	mov    DWORD PTR [edi+0x4f9e9661],ecx
  419965:	mov    ecx,0x21933f73
  41996a:	daa    
  41996b:	stos   DWORD PTR es:[edi],eax
  41996c:	ror    BYTE PTR [esi],1
  41996e:	mov    eax,0x833d60ea
  419973:	fistp  QWORD PTR [edx-0x520b729c]
  419979:	ss imul esp
  41997c:	in     al,dx
  41997d:	imul   esi,DWORD PTR [edi+ecx*8],0xd1fa052f
  419984:	sub    ebp,DWORD PTR [edi-0x7955d301]
  41998a:	cmp    BYTE PTR [ebp-0x6a],bl
  41998d:	sbb    ebx,eax
  41998f:	jne    0x41995a
  419991:	or     BYTE PTR [edx-0x629d064d],0x41
  419998:	or     al,0x13
  41999a:	inc    esp
  41999b:	cmp    esp,0xd2c46efe
  4199a1:	in     eax,0xcf
  4199a3:	(bad)  [ecx+eiz*8]
  4199a6:	repnz sti 
  4199a8:	fs push ebp
  4199aa:	nop
  4199ab:	xchg   ebx,eax
  4199ac:	int3   
  4199ad:	das    
  4199ae:	repz mov bh,0x64
  4199b1:	nop
  4199b2:	aas    
  4199b3:	adc    eax,DWORD PTR [edi]
  4199b5:	and    BYTE PTR ds:0xefec63df,ah
  4199bb:	cmp    DWORD PTR [ecx+esi*4-0x5],edx
  4199bf:	addr16 or edx,ecx
  4199c2:	or     edi,edi
  4199c4:	mov    esi,ecx
  4199c6:	scas   eax,DWORD PTR es:[edi]
  4199c7:	call   DWORD PTR [ecx+ecx*2]
  4199ca:	sbb    cl,dh
  4199cc:	int3   
  4199cd:	imul   edi,DWORD PTR [edi+0x24dc978],0x4112aaea
  4199d7:	popa   
  4199d8:	add    eax,0xa29e7a01
  4199dd:	cli    
  4199de:	jns    0x4199b5
  4199e0:	test   BYTE PTR [ecx+0x52042e1e],bl
  4199e6:	outs   dx,BYTE PTR ds:[esi]
  4199e7:	lods   al,BYTE PTR ds:[esi]
  4199e8:	jmp    0x5c88:0x149c4c45
  4199ef:	dec    esp
  4199f0:	or     BYTE PTR [edx+edi*1+0x5],cl
  4199f4:	jmp    0xa64cf8b7
	...
  419bcd:	out    0xd2,al
  419bcf:	xchg   esp,eax
  419bd0:	icebp  
  419bd1:	mov    ah,0xf7
  419bd3:	out    0xd7,eax
  419bd5:	aad    0x75
  419bd7:	(bad)  
  419bd8:	adc    DWORD PTR [ecx],ebx
  419bda:	shl    BYTE PTR ds:0x1f1384b,0x0
  419be1:	and    eax,0x71000007
  419be6:	lods   al,BYTE PTR ds:[esi]
  419be7:	mov    esi,0x8bb3737f
  419bec:	pop    edi
  419bed:	fmul   QWORD PTR [esi+edx*2-0x16a17b4]
  419bf4:	pop    eax
  419bf5:	dec    ebp
  419bf6:	fwait
  419bf7:	pop    ds
  419bf8:	(bad)  
  419bf9:	adc    BYTE PTR [ebx],dl
  419bfb:	outs   dx,BYTE PTR ds:[esi]
  419bfc:	push   edi
  419bfd:	xor    dl,al
  419bff:	adc    DWORD PTR [ebx+0x69271707],edi
  419c05:	(bad)  
  419c06:	in     al,0xac
  419c08:	xor    esi,edx
  419c0a:	call   0x24b780c8
  419c0f:	cmc    
  419c10:	mov    al,al
  419c12:	xor    eax,0xdceb5fa2
  419c17:	mov    esp,0xc78564fc
  419c1c:	xor    ebx,edx
  419c1e:	sub    eax,ecx
  419c20:	cwde   
  419c21:	push   ebx
  419c22:	or     eax,ebx
  419c24:	aad    0x8f
  419c26:	xchg   ecx,eax
  419c27:	gs push ebp
  419c29:	mov    cl,0x79
  419c2b:	mov    eax,ds:0x3eb63fa
  419c30:	in     al,0x48
  419c32:	retf   0x5949
  419c35:	mov    esp,DWORD PTR [ebp+0x5634086]
  419c3b:	xor    edi,DWORD PTR [edi-0x58]
  419c3e:	in     eax,0x7a
  419c40:	cdq    
  419c41:	xor    eax,0x91cdede6
  419c46:	jmp    0xf98c06a4
  419c4b:	jmp    0x52bc7dea
  419c50:	rcr    BYTE PTR [ebx],0x67
  419c53:	div    BYTE PTR [eax+0x31ab28f9]
  419c59:	and    ah,BYTE PTR [ebp-0x23]
  419c5c:	or     BYTE PTR [edx-0x48],bh
  419c5f:	jge    0x419c11
  419c61:	ret    0x82e1
  419c64:	int    0x3f
  419c66:	sti    
  419c67:	cmp    edi,DWORD PTR [eax+0xc]
  419c6a:	mov    bh,0x7e
  419c6c:	div    cl
  419c6e:	or     cl,BYTE PTR [edi]
  419c70:	add    al,0x3
  419c72:	push   ds
  419c73:	les    esi,FWORD PTR [edx-0x4c08a7ed]
  419c79:	pop    ebp
  419c7a:	jl     0x419c1d
  419c7c:	jp     0x419c15
  419c7e:	or     DWORD PTR [ecx],eax
  419c80:	inc    ebp
  419c81:	(bad)  
  419c82:	and    BYTE PTR ds:0x4b90442a,bl
  419c88:	or     BYTE PTR [edi+0x30c5e7bd],dh
  419c8e:	mov    ds:0xf5352f28,eax
  419c93:	stos   DWORD PTR es:[edi],eax
  419c94:	mov    WORD PTR [ecx-0x6a],?
  419c97:	sbb    ebx,ecx
  419c99:	pavgb  mm4,QWORD PTR ds:0xf73eeab0
  419ca0:	pop    edx
  419ca1:	sti    
  419ca2:	inc    ebp
  419ca3:	xchg   esi,eax
  419ca4:	shl    DWORD PTR [eax-0x464e9df],cl
  419caa:	faddp  st(3),st
  419cac:	lods   eax,DWORD PTR ds:[esi]
  419cad:	cli    
  419cae:	fcmovne st,st(0)
  419cb0:	sub    eax,0x389d86b2
  419cb5:	inc    ecx
  419cb6:	fidivr WORD PTR [edi-0x7a]
  419cb9:	ds mov esp,0x327aef7e
  419cbf:	retf   0x1055
  419cc2:	loope  0x419cd7
  419cc4:	add    edi,ebp
  419cc6:	mov    ebx,0xe9482253
  419ccb:	mov    ds:0x610452c7,al
  419cd0:	jno    0x419c7b
  419cd2:	stos   BYTE PTR es:[edi],al
  419cd3:	inc    ebp
  419cd4:	mov    esp,0x55a7ef11
  419cd9:	mov    ds:0xb6466833,eax
  419cde:	push   ecx
  419cdf:	mov    ecx,0xdb1714dd
  419ce4:	inc    edi
  419ce5:	pop    edx
  419ce6:	mov    ecx,0x14ae657
  419ceb:	push   ecx
  419cec:	int3   
  419ced:	sub    ch,al
  419cef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cf0:	int3   
  419cf1:	add    eax,0xfbde6b3
  419cf6:	jge    0x419cd3
  419cf8:	xor    al,0x89
  419cfa:	aas    
  419cfb:	jnp    0x419cbe
  419cfd:	push   0xd30183f
  419d02:	scas   al,BYTE PTR es:[edi]
  419d03:	in     al,0x99
  419d05:	in     eax,dx
  419d06:	pushf  
  419d07:	sahf   
  419d08:	inc    ecx
  419d09:	dec    esi
  419d0a:	sub    DWORD PTR [ebp-0x60],0x664a2193
  419d11:	or     eax,0xa544d0d1
  419d16:	ja     0x419d91
  419d18:	sub    BYTE PTR [esi+0x7c],ch
  419d1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d1c:	sar    BYTE PTR [edx+0x57b52c4a],0x6a
  419d23:	test   BYTE PTR [esi],bh
  419d25:	or     edx,DWORD PTR [esi-0x49]
  419d28:	push   eax
  419d29:	call   0x2f58:0xd26487bc
  419d30:	adc    BYTE PTR [ebx],bl
  419d32:	mov    bl,0xd4
  419d34:	retf   0x1e75
  419d37:	fsubr  st(1),st
  419d39:	jge    0x419d07
  419d3b:	push   ebx
  419d3c:	mov    ebx,0xe3548456
  419d41:	popa   
  419d42:	gs mov ah,0x1d
  419d45:	das    
  419d46:	fiadd  WORD PTR [esi-0x7ebdb537]
  419d4c:	shr    DWORD PTR ds:0xede6,cl
  419d52:	dec    eax
  419d53:	sbb    eax,0xb81c4ace
  419d58:	add    DWORD PTR [ebx-0x3e295859],edi
  419d5e:	adc    DWORD PTR ds:0x47e23331,edx
  419d64:	pop    esi
  419d65:	imul   edi,eax,0xf7f4d6dc
  419d6b:	xchg   ebx,eax
  419d6c:	jnp    0x419d23
  419d6e:	test   DWORD PTR ds:0x30cadf85,esp
  419d74:	nop
  419d75:	jle    0x419d5e
  419d77:	inc    edi
  419d78:	push   ds
  419d79:	and    esp,DWORD PTR [ebx-0xb]
  419d7c:	ins    BYTE PTR es:[edi],dx
  419d7d:	mov    eax,0xd2170613
  419d82:	mov    bh,0x25
  419d84:	popa   
  419d85:	stc    
  419d86:	jmp    0x419dd4
  419d88:	mov    dh,0x70
  419d8a:	outs   dx,DWORD PTR ds:[esi]
  419d8b:	adc    eax,ebp
  419d8d:	mov    al,0x67
  419d8f:	dec    edi
  419d90:	sub    al,0x28
  419d92:	cmp    eax,DWORD PTR [eax]
  419d94:	fsubr  st,st(1)
  419d96:	jae    0x419dd3
  419d98:	(bad)  
  419d99:	mov    ch,0x77
  419d9b:	jmp    0x759410e2
  419da0:	stos   BYTE PTR es:[edi],al
  419da1:	xor    eax,0x58e6156e
  419da6:	sub    DWORD PTR [eax+0xe],edx
  419da9:	sahf   
  419daa:	(bad)  
  419dab:	out    dx,eax
  419dac:	pop    edi
  419dad:	nop
  419dae:	pop    ss
  419daf:	or     esp,DWORD PTR [esi-0x38f71363]
  419db5:	outs   dx,BYTE PTR ds:[esi]
  419db6:	stc    
  419db7:	(bad)  
  419db8:	pop    edx
  419db9:	mov    esi,?
  419dbb:	xchg   ecx,eax
  419dbc:	test   eax,0xe5174e0
  419dc1:	xor    DWORD PTR [esi+0x59e28c03],ebx
  419dc7:	mov    esi,0x251f7b61
  419dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dcd:	cdq    
  419dce:	cmp    eax,0x2fda6cdc
  419dd3:	xor    eax,0x7c4a038a
  419dd8:	add    eax,0xdf910d01
  419ddd:	add    al,0x2c
  419ddf:	jno    0x419dc4
  419de1:	js     0x419dfc
  419de3:	push   ds
  419de4:	test   ecx,esi
  419de6:	xor    eax,0x84e74612
  419deb:	ret    
  419dec:	imul   ecx,DWORD PTR [ebx-0x4e],0xffffffde
  419df0:	out    dx,eax
  419df1:	cwde   
  419df2:	stc    
  419df3:	xchg   ebp,eax
  419df4:	xchg   ebx,eax
  419df5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419df6:	mov    dl,0xa0
  419df8:	call   DWORD PTR [eax+0x3b]
  419dfb:	inc    edi
  419dfc:	out    0x85,al
  419dfe:	adc    edi,DWORD PTR [edi+0x48]
  419e01:	pop    edx
  419e02:	xor    edi,DWORD PTR [edx-0x6e8dae2]
  419e08:	fiadd  WORD PTR [esi]
  419e0a:	and    dl,al
  419e0c:	out    0x49,al
  419e0e:	fldenv [ebp+0x26]
  419e11:	pop    es
  419e12:	inc    esi
  419e13:	outs   dx,DWORD PTR ds:[esi]
  419e14:	jns    0x419e65
  419e16:	or     DWORD PTR [edi-0x38870c82],0x26cb82a9
  419e20:	cld    
  419e21:	xor    BYTE PTR [edi+0xde37db8],cl
  419e27:	jmp    0xf737824d
  419e2c:	push   ebx
  419e2d:	jbe    0x419df1
  419e2f:	mov    ebp,DWORD PTR [esi+edx*4-0x6dc115c3]
  419e36:	in     eax,0xca
  419e38:	hlt    
  419e39:	repnz call 0xf870:0x3401d76f
  419e41:	mov    esp,0xd1fbb09a
  419e46:	sbb    DWORD PTR [ecx-0x23],esp
  419e49:	pop    ds
  419e4a:	xchg   edi,eax
  419e4b:	push   edi
  419e4c:	adc    dh,BYTE PTR ds:0x998200c4
  419e52:	mov    bl,0x32
  419e54:	xchg   edi,eax
  419e55:	inc    edi
  419e56:	popa   
  419e57:	pushf  
  419e58:	fsubr  st(1),st
  419e5a:	stos   BYTE PTR es:[edi],al
  419e5b:	clc    
  419e5c:	or     edx,esi
  419e5e:	jecxz  0x419e18
  419e60:	adc    eax,0x4198eb0e
  419e65:	mov    al,BYTE PTR [eax+0x4394b465]
  419e6b:	repz or ax,0x41d0
  419e70:	minps  xmm0,xmm2
  419e73:	mov    cl,0x4e
  419e75:	out    dx,al
  419e76:	je     0x419e8d
  419e78:	fld    TBYTE PTR [edi-0x1a079d33]
  419e7e:	test   BYTE PTR [eax-0x1a56a4a9],0xd0
  419e85:	shl    BYTE PTR [eax+edx*2],0xa5
  419e89:	pop    ebx
  419e8a:	dec    ebx
  419e8b:	push   edx
  419e8c:	adc    BYTE PTR [edi+eax*1-0x2c],cl
  419e90:	dec    BYTE PTR ds:0xddf59e68
  419e96:	push   0xf166203f
  419e9b:	lods   al,BYTE PTR ds:[esi]
  419e9c:	xor    ch,BYTE PTR [eax]
  419e9e:	ins    BYTE PTR es:[edi],dx
  419e9f:	mov    DWORD PTR [edx],eax
  419ea1:	ins    BYTE PTR es:[edi],dx
  419ea2:	and    BYTE PTR [esi+0x15],0x69
  419ea6:	dec    eax
  419ea7:	add    al,0x5b
  419ea9:	dec    esp
  419eaa:	imul   BYTE PTR [ecx+0xd097145]
  419eb0:	mov    ah,0x71
  419eb2:	add    ebx,ebx
  419eb4:	and    BYTE PTR [edx],al
  419eb6:	sbb    eax,0x35d047a
  419ebb:	jg     0x419e99
  419ebd:	xor    eax,0x8ddf0543
  419ec2:	adc    DWORD PTR [ebx-0x3b],0x6b
  419ec6:	dec    eax
  419ec7:	and    bl,dl
  419ec9:	jmp    0x419f2b
  419ecb:	mov    bl,0x7c
  419ecd:	neg    DWORD PTR [ecx+0x55]
  419ed0:	and    ah,BYTE PTR [edi]
  419ed2:	rcr    DWORD PTR [edx+0x5f],0xc4
  419ed6:	loop   0x419f0f
  419ed8:	push   eax
  419ed9:	pop    es
  419eda:	pusha  
  419edb:	sub    bh,BYTE PTR [ecx]
  419edd:	into   
  419ede:	outs   dx,BYTE PTR ds:[esi]
  419edf:	push   esi
  419ee0:	push   esp
  419ee1:	mov    edx,0x4f140274
  419ee6:	mov    esi,0x869f8870
  419eeb:	lahf   
  419eec:	dec    esi
  419eed:	mov    DWORD PTR [esi+0x28250de9],ebp
  419ef3:	shr    edx,1
  419ef5:	sahf   
  419ef6:	and    al,0x34
  419ef8:	shl    esi,0x52
  419efb:	push   bp
  419efd:	xor    eax,0x2fca1dd9
  419f02:	nop
  419f03:	cwde   
  419f04:	dec    edi
  419f05:	pop    ds
  419f06:	stc    
  419f07:	or     BYTE PTR [esi],dl
  419f09:	js     0x419f76
  419f0b:	push   esp
  419f0c:	mov    WORD PTR [edx+eiz*8],ds
  419f0f:	cs lahf 
  419f11:	mov    al,ds:0x856919a7
  419f16:	pop    esi
  419f17:	popf   
  419f18:	ss sub al,dh
  419f1b:	enter  0x9819,0xef
  419f1f:	dec    edi
  419f20:	mov    al,0xc3
  419f22:	ror    DWORD PTR [ecx],cl
  419f24:	into   
  419f25:	xor    al,0x70
  419f27:	test   BYTE PTR [ebp-0x22],dh
  419f2a:	pop    ss
  419f2b:	pusha  
  419f2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f2d:	xor    ebx,DWORD PTR [ebp+0xc]
  419f30:	js     0x419eb4
  419f32:	pop    edx
  419f33:	pop    ss
  419f34:	ss fwait
  419f36:	pushf  
  419f37:	cmc    
  419f38:	adc    DWORD PTR [ebx-0x69],ebx
  419f3b:	jne    0x419f19
  419f3d:	jmp    0x6fa1:0xfda723fe
  419f44:	loope  0x419f4d
  419f46:	in     al,dx
  419f47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f48:	adc    ebx,eax
  419f4a:	in     al,dx
  419f4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f4c:	scas   eax,DWORD PTR es:[edi]
  419f4d:	shr    DWORD PTR [edx+0x7566ee45],cl
  419f53:	(bad)  
  419f54:	je     0x419fbe
  419f56:	int    0xd7
  419f58:	addr16 dec ecx
  419f5a:	pop    es
  419f5b:	repnz add esi,DWORD PTR ds:0xd0bd9b66
  419f62:	cmp    al,BYTE PTR [edi+edx*4]
  419f65:	mov    ebp,0x531816b2
  419f6a:	lods   al,BYTE PTR ds:[esi]
  419f6b:	add    DWORD PTR [eax],ebp
  419f6d:	add    al,0x1a
  419f6f:	jae    0x419fe5
  419f71:	push   ebx
  419f72:	sahf   
  419f73:	add    edx,esi
  419f75:	pop    esi
  419f76:	fimul  WORD PTR [eax+0x71]
  419f79:	push   edi
  419f7a:	dec    edi
  419f7b:	jmp    0x71daf8e8
  419f80:	cdq    
  419f81:	cdq    
  419f82:	push   esp
  419f83:	(bad)  
  419f84:	pop    ebx
  419f85:	jmp    0x419fc6
  419f87:	or     al,0x5c
  419f89:	outs   dx,BYTE PTR ds:[esi]
  419f8a:	mov    esi,DWORD PTR [edx]
  419f8c:	jmp    0x419f39
  419f8e:	and    bl,BYTE PTR [ecx]
  419f90:	mov    BYTE PTR [edi+0xea51b10],dl
  419f96:	popa   
  419f97:	or     DWORD PTR [edx-0x158f901b],edi
  419f9d:	dec    eax
  419f9e:	(bad)  
  419f9f:	jecxz  0x419ffa
  419fa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fa2:	add    bh,bl
  419fa4:	dec    edx
  419fa5:	mov    ch,0x53
  419fa7:	sub    eax,DWORD PTR [edi+0x12ac260b]
  419fad:	mov    edi,0xebab587a
  419fb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fb3:	or     eax,0xb1c4e718
  419fb8:	add    eax,0x43e55317
  419fbd:	pushf  
  419fbe:	xor    bl,BYTE PTR [esi-0x4e]
  419fc1:	fisubr WORD PTR [edi]
  419fc3:	push   0x4f7fad3b
  419fc8:	test   BYTE PTR [edx],dh
  419fca:	xchg   ebx,eax
  419fcb:	sbb    BYTE PTR [esp+ecx*4],bl
  419fce:	inc    esi
  419fcf:	nop
  419fd0:	in     al,0x7b
  419fd2:	adc    BYTE PTR [ebx+0x6c],al
  419fd5:	in     eax,0x77
  419fd7:	dec    esp
  419fd8:	sub    cl,0x1c
  419fdb:	scas   al,BYTE PTR es:[edi]
  419fdc:	mov    esi,0x9384cca7
  419fe1:	fwait
  419fe2:	xor    DWORD PTR [ecx+edx*1],ebx
  419fe5:	sbb    al,0x89
  419fe7:	aas    
  419fe8:	jae    0x41a029
  419fea:	jb     0x419ff1
  419fec:	mov    ds:0x8616bdc,al
  419ff1:	dec    esp
  419ff2:	in     eax,0xdd
  419ff4:	mov    al,0x3d
  419ff6:	leave  
  419ff7:	loop   0x41a057
  419ff9:	dec    esi
  419ffa:	dec    bh
  419ffc:	fistp  QWORD PTR [edi+0x6fb28eb0]
  41a002:	sti    
  41a003:	push   ebp
  41a004:	adc    BYTE PTR [eax+0x30],ch
  41a007:	mov    DWORD PTR [edx],esp
  41a009:	aam    0xe7
  41a00b:	(bad)  
  41a00c:	sub    DWORD PTR [esi],edx
  41a00e:	dec    edx
  41a00f:	add    ch,BYTE PTR [edi+0x41e78682]
  41a015:	mov    bh,0x9d
  41a017:	mov    al,ds:0x41f79877
  41a01c:	mov    ebp,0xcd6b07d9
  41a021:	and    DWORD PTR [eax-0x73],ebp
  41a024:	fsubr  QWORD PTR [eax+0x53758060]
  41a02a:	idiv   DWORD PTR [ecx]
  41a02c:	aaa    
  41a02d:	dec    esi
  41a02e:	or     BYTE PTR [ecx+0x2da13c2e],al
  41a034:	es or  al,0x8
  41a037:	in     eax,0x21
  41a039:	jecxz  0x41a06a
  41a03b:	xchg   edi,eax
  41a03c:	mov    ah,BYTE PTR [ebx-0x80]
  41a03f:	fs mov ebp,0x5b030278
  41a045:	xchg   esi,eax
  41a046:	shr    BYTE PTR [ecx-0x3],0xe
  41a04a:	popf   
  41a04b:	inc    eax
  41a04c:	imul   edx,DWORD PTR ds:[esi],0x73
  41a050:	mov    bh,0x2
  41a052:	and    eax,0x8c23799e
  41a057:	out    0x35,eax
  41a059:	push   es
  41a05a:	add    al,0x97
  41a05c:	adc    eax,0x61288036
  41a061:	jg     0x41a061
  41a063:	aas    
  41a064:	jns    0x41a02e
  41a066:	pop    edi
  41a067:	mov    dh,BYTE PTR [eax-0x5c]
  41a06a:	mov    esp,0xbb6fbd70
  41a06f:	add    esi,DWORD PTR [ebx]
  41a071:	repnz scas al,BYTE PTR es:[edi]
  41a073:	mov    ebx,0x4db1003e
  41a078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a079:	push   ebp
  41a07a:	aad    0xee
  41a07c:	mov    DWORD PTR [ecx+0x2741a718],edi
  41a082:	mov    ah,0x26
  41a084:	pusha  
  41a085:	repz add bl,BYTE PTR [ebx-0x72]
  41a089:	xchg   ebx,eax
  41a08a:	bound  eax,QWORD PTR ds:0x14e3e2d3
  41a090:	xchg   ecx,eax
  41a091:	push   DWORD PTR [ebx+edx*8+0x19]
  41a095:	loop   0x41a0b5
  41a097:	(bad)  
  41a098:	xor    edx,DWORD PTR es:[ecx-0x12]
  41a09c:	inc    eax
  41a09d:	stc    
  41a09e:	xchg   DWORD PTR [edi+edx*8+0x2e2bf39],esp
  41a0a5:	daa    
  41a0a6:	mov    ecx,0x5a773f07
  41a0ab:	mov    ah,0xd2
  41a0ad:	fistp  DWORD PTR [ecx+0x68]
  41a0b0:	push   ebp
  41a0b1:	inc    ecx
  41a0b2:	lock popa 
  41a0b4:	lds    edx,FWORD PTR [esi+0x41a6d594]
  41a0ba:	jnp    0x41a0dd
  41a0bc:	dec    eax
  41a0bd:	adc    eax,0xe09e0e6e
  41a0c2:	mov    ebx,0x33865253
  41a0c7:	pop    edx
  41a0c8:	adc    al,0xd
  41a0ca:	pop    esp
  41a0cb:	mov    esi,DWORD PTR [edi]
  41a0cd:	sub    BYTE PTR [ebp-0x4c],cl
  41a0d0:	push   ecx
  41a0d1:	rcl    ebp,cl
  41a0d3:	adc    BYTE PTR gs:[ebx],cl
  41a0d6:	jne    0x41a137
  41a0d8:	and    esi,DWORD PTR [esi+0x8]
  41a0db:	xchg   bl,dh
  41a0dd:	inc    ecx
  41a0de:	mov    ebp,0xe760209a
  41a0e3:	aad    0xfe
  41a0e5:	pop    eax
  41a0e6:	fnstsw ax
  41a0e8:	fdiv   DWORD PTR [ebx]
  41a0ea:	pop    ds
  41a0eb:	xlat   BYTE PTR ds:[ebx]
  41a0ec:	das    
  41a0ed:	mov    edx,DWORD PTR [eax-0x224d6d5]
  41a0f3:	scas   al,BYTE PTR es:[edi]
  41a0f4:	mov    dl,0x11
  41a0f6:	aas    
  41a0f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0f9:	loope  0x41a14d
  41a0fb:	push   ecx
  41a0fc:	cmp    eax,0xefef2203
  41a101:	inc    edi
  41a102:	rcl    DWORD PTR [eax+edx*4+0x7c],0x9e
  41a107:	mov    ebp,DWORD PTR [ebx]
  41a109:	cmp    BYTE PTR [ebp+0x7d],0x12
  41a10d:	adc    ebx,esp
  41a10f:	repnz outs dx,BYTE PTR ds:[esi]
  41a111:	mov    DWORD PTR [edx+edx*4-0x23],ebp
  41a115:	or     bl,0x26
  41a118:	and    DWORD PTR [ecx],esi
  41a11a:	dec    ebx
  41a11b:	sahf   
  41a11c:	cmp    bl,al
  41a11e:	push   ebx
  41a11f:	jns    0x41a0cd
  41a121:	jg     0x41a188
  41a123:	xchg   esi,eax
  41a124:	xchg   edi,eax
  41a125:	(bad)  
  41a128:	or     ebx,DWORD PTR [eax+esi*2+0x6de719f1]
  41a12f:	iret   
  41a130:	and    esp,ebx
  41a132:	and    ebx,DWORD PTR [esp+ebp*2-0x19]
  41a136:	pop    ebx
  41a137:	rol    BYTE PTR [edx],cl
  41a139:	repnz adc DWORD PTR [ecx-0x29],esi
  41a13d:	adc    DWORD PTR [ebx],ecx
  41a13f:	push   edx
  41a140:	push   cs
  41a141:	gs ss aaa 
  41a144:	loope  0x41a126
  41a146:	imul   eax
  41a148:	rcl    BYTE PTR [ebp+ebp*1+0x42],1
  41a14c:	retf   0xa100
  41a14f:	nop
  41a150:	outs   dx,BYTE PTR ds:[esi]
  41a151:	fisttp WORD PTR [edx]
  41a153:	fcmovb st,st(7)
  41a155:	jecxz  0x41a198
  41a157:	sbb    BYTE PTR [esp+edx*1],al
  41a15a:	cmp    eax,DWORD PTR [eax]
  41a15c:	loop   0x41a196
  41a15e:	sub    ebp,DWORD PTR [eax]
  41a160:	adc    ch,cl
  41a162:	and    al,0x68
  41a164:	call   0x7d89:0x5f6d09e8
  41a16b:	or     eax,0xebcd2c24
  41a170:	stos   BYTE PTR es:[edi],al
  41a171:	jne    0x41a12f
  41a173:	fisubr WORD PTR ds:0x2ba50e27
  41a179:	loopne 0x41a1e9
  41a17b:	jle    0x41a1b8
  41a17d:	loopne 0x41a1bb
  41a17f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a180:	add    eax,0x1fd00b13
  41a185:	or     eax,0xce1ae59b
  41a18a:	ins    DWORD PTR es:[edi],dx
  41a18b:	test   al,0xbb
  41a18d:	call   0x83f28b82
  41a192:	push   cs
  41a193:	xchg   ebp,eax
  41a194:	lahf   
  41a195:	rcl    BYTE PTR [ebp-0xd],cl
  41a198:	call   0x7c36:0xc7730c0d
  41a19f:	adc    al,BYTE PTR [eax+0x74]
  41a1a2:	imul   edi
  41a1a4:	rcr    BYTE PTR [edx],1
  41a1a6:	or     al,0xd5
  41a1a8:	repz fbld TBYTE PTR ds:[eax-0x27]
  41a1ad:	stc    
  41a1ae:	stos   DWORD PTR es:[edi],eax
  41a1af:	xchg   BYTE PTR [eax-0x51b85cd5],bl
  41a1b5:	and    ch,bh
  41a1b7:	cmp    eax,0xee3f289f
  41a1bc:	or     DWORD PTR [ebp+ecx*4+0x67],ecx
  41a1c0:	mov    ecx,0xd75afb74
  41a1c5:	bound  eax,QWORD PTR [ecx+0x764f52f8]
  41a1cb:	and    DWORD PTR ds:0x297dc099,eax
  41a1d1:	dec    edi
  41a1d2:	push   eax
  41a1d3:	cs pushf 
  41a1d5:	iret   
  41a1d6:	rcr    DWORD PTR [ecx-0x9],cl
  41a1d9:	push   esp
  41a1da:	arpl   WORD PTR [eax-0x4],ax
  41a1dd:	out    dx,al
  41a1de:	jae    0x41a161
  41a1e0:	lahf   
  41a1e1:	ficom  WORD PTR [edx]
  41a1e3:	mov    ds:0x332fdb95,al
  41a1e8:	enterw 0xfaf5,0x31
  41a1ed:	adc    al,0x9c
  41a1ef:	and    DWORD PTR [eax],edi
  41a1f1:	clc    
  41a1f2:	add    DWORD PTR ds:0xe223aa94,0x5190214
  41a1fc:	adc    al,0x9b
  41a1fe:	ret    
  41a1ff:	rol    BYTE PTR [edi],1
  41a201:	push   ss
  41a202:	xchg   edx,eax
  41a203:	or     ah,ch
  41a205:	popa   
  41a206:	cld    
  41a207:	std    
  41a208:	cmp    ecx,edx
  41a20a:	mov    ebp,0xd30b53b0
  41a20f:	xor    BYTE PTR [eax],al
  41a211:	test   DWORD PTR [edi],esp
  41a213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a214:	mov    ?,WORD PTR [ecx-0x7253b8c9]
  41a21a:	jl     0x41a245
  41a21c:	repz hlt 
  41a21e:	sbb    DWORD PTR [edx+0x5d],ebx
  41a221:	pushf  
  41a222:	add    eax,0x4cb1ed0f
  41a227:	aas    
  41a228:	fstp   QWORD PTR [eax-0x7abb33ea]
  41a22e:	pop    es
  41a22f:	std    
  41a230:	mov    ecx,0x555b3d3b
  41a235:	pop    ebx
  41a236:	in     eax,dx
  41a237:	mov    bh,0xe2
  41a239:	and    ah,BYTE PTR [esi-0xd2e2828]
  41a23f:	jecxz  0x41a21b
  41a241:	loopne 0x41a20d
  41a243:	pop    ds
  41a244:	or     al,ch
  41a246:	leave  
  41a247:	dec    ecx
  41a248:	aas    
  41a249:	lds    edi,FWORD PTR [eax-0x1dd675]
  41a24f:	inc    ecx
  41a250:	dec    edx
  41a251:	retf   0xa820
  41a254:	sahf   
  41a255:	ja     0x41a2ae
  41a257:	gs xchg ecx,eax
  41a259:	hlt    
  41a25a:	das    
  41a25b:	mov    ds:0x8a0e1e10,eax
  41a260:	inc    ecx
  41a261:	(bad)  
  41a262:	mov    eax,0xa88954bb
  41a267:	lock movs DWORD PTR es:[edi],DWORD PTR es:[esi]
  41a26a:	rcr    BYTE PTR [ebx-0x2c9ce4ca],cl
  41a270:	mov    cs,WORD PTR [ebx+edi*4+0x2061b64b]
  41a277:	aas    
  41a278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a279:	mov    dl,0x69
  41a27b:	pop    es
  41a27c:	pop    edi
  41a27d:	in     al,dx
  41a27e:	mov    dh,0xd8
  41a280:	nop
  41a281:	inc    ebx
  41a282:	push   esi
  41a283:	sbb    bl,dh
  41a285:	adc    BYTE PTR [ecx-0x56],cl
  41a288:	fwait
  41a289:	mov    dl,0xa5
  41a28b:	fild   QWORD PTR gs:0xaf9c2d17
  41a292:	jl     0x41a26f
  41a294:	or     eax,0xec967f5a
  41a299:	add    ebp,0xffffff96
  41a29c:	xchg   ebx,eax
  41a29d:	mov    ah,0xda
  41a29f:	in     al,0xa1
  41a2a1:	xchg   esp,eax
  41a2a2:	sbb    al,BYTE PTR [ebp-0x14dbdfce]
  41a2a8:	mov    al,0x53
  41a2aa:	(bad)  
  41a2ab:	pop    eax
  41a2ac:	mov    DWORD PTR [esi-0x21],eax
  41a2af:	push   ds
  41a2b0:	inc    ebp
  41a2b1:	cmp    eax,0xcb13c18
  41a2b6:	xchg   esp,eax
  41a2b7:	pop    esp
  41a2b8:	scas   al,BYTE PTR es:[edi]
  41a2b9:	and    eax,0x7e706d5f
  41a2be:	ret    0xc47f
  41a2c1:	bnd jbe 0x41a2b9
  41a2c4:	inc    edx
  41a2c5:	jecxz  0x41a337
  41a2c7:	out    dx,eax
  41a2c8:	xchg   ebx,eax
  41a2c9:	mov    al,0xe5
  41a2cb:	shl    BYTE PTR [ecx+0x35cbb3e4],0xf4
  41a2d2:	ds inc edi
  41a2d4:	cmp    eax,0x4a739510
  41a2d9:	mov    eax,0x1ad45837
  41a2de:	jae    0x41a2d8
  41a2e0:	pop    ecx
  41a2e1:	cs loopne 0x41a32a
  41a2e4:	inc    edi
  41a2e5:	stc    
  41a2e6:	jno    0x41a2fd
  41a2e8:	and    bl,BYTE PTR [eax-0x74]
  41a2eb:	sbb    al,0x5f
  41a2ed:	scas   eax,DWORD PTR es:[edi]
  41a2ee:	dec    eax
  41a2ef:	mov    esi,DWORD PTR [edx]
  41a2f1:	call   0xd46f:0x6eafdf0a
  41a2f8:	ret    0xb40a
  41a2fb:	or     esp,DWORD PTR [eax+ebp*4-0x5c]
  41a2ff:	mov    bl,0xdf
  41a301:	xchg   ebp,eax
  41a302:	dec    esp
  41a303:	int    0xc8
  41a305:	scas   al,BYTE PTR es:[edi]
  41a306:	imul   eax,DWORD PTR [ebx],0xf104
	...
  41a4dc:	add    BYTE PTR [eax],al
  41a4de:	jbe    0x41a50b
  41a4e0:	dec    eax
  41a4e1:	jbe    0x41a540
  41a4e3:	ja     0x41a563
  41a4e5:	sub    esi,DWORD PTR [ebp-0x4b]
  41a4e8:	(bad)  
  41a4e9:	retf   0x8bc8
  41a4ec:	inc    edx
  41a4ed:	daa    
  41a4ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4ef:	push   es
  41a4f0:	add    al,BYTE PTR [eax]
  41a4f2:	or     BYTE PTR [eax],al
  41a4f4:	add    BYTE PTR [eax],al
  41a4f6:	lock mov eax,ds:0x67ac5346
  41a4fc:	dec    esp
  41a4fd:	push   cs
  41a4fe:	mov    edi,0xed95a576
  41a503:	xlat   BYTE PTR ds:[ebx]
  41a504:	mov    edi,0xa0a36c7e
  41a509:	rol    BYTE PTR [edx+0x5dacfc0b],0xf8
  41a510:	add    DWORD PTR [eax],eax
  41a512:	and    eax,0x9d000007
  41a517:	stos   DWORD PTR es:[edi],eax
  41a518:	fisttp WORD PTR [esi-0x2a]
  41a51b:	ss jns 0x41a500
  41a51e:	jbe    0x41a546
  41a520:	sbb    al,BYTE PTR [edx-0x51]
  41a523:	or     eax,0x76ea8b4f
  41a528:	sbb    bl,bh
  41a52a:	xor    bh,BYTE PTR [ebx+0x49dcd228]
  41a530:	outs   dx,BYTE PTR ds:[esi]
  41a531:	mov    ds:0xf64d42bb,al
  41a536:	mov    al,ds:0x641050d0
  41a53b:	aad    0x4b
  41a53d:	fsubr  QWORD PTR [eax+0x4]
  41a540:	add    bh,ah
  41a542:	dec    edi
  41a543:	sub    al,0x73
  41a545:	add    eax,0xb3e14f60
  41a54a:	push   ecx
  41a54b:	fdivr  QWORD PTR [esi+0x7]
  41a54e:	sub    eax,0xe87e61b1
  41a553:	call   0xf35d:0x7a9be3b8
  41a55a:	popa   
  41a55b:	or     BYTE PTR [ebx+0x2b7e3f49],0x7b
  41a562:	shl    DWORD PTR [edi-0x63],1
  41a565:	sahf   
  41a566:	in     al,0x4d
  41a568:	xchg   esp,eax
  41a569:	fcom   DWORD PTR [edx+0x5ad35009]
  41a56f:	pop    edx
  41a570:	in     al,0xa3
  41a572:	(bad)  
  41a573:	xor    eax,0x1d549eee
  41a578:	repz cmc 
  41a57a:	imul   BYTE PTR [ebp-0x9e0302d]
  41a580:	dec    esi
  41a581:	inc    edi
  41a582:	mov    ah,0x2c
  41a584:	and    al,0xb1
  41a586:	out    0x9c,al
  41a588:	stos   BYTE PTR es:[edi],al
  41a589:	bnd jns 0x41a51d
  41a58c:	cmp    bh,dl
  41a58e:	rcl    BYTE PTR [eax-0x2b9fa13b],cl
  41a594:	sahf   
  41a595:	and    ah,al
  41a597:	(bad)
  41a59b:	repnz dec edx
  41a59d:	push   ss
  41a59e:	pusha  
  41a59f:	ins    BYTE PTR es:[edi],dx
  41a5a0:	or     eax,0x3d91999
  41a5a5:	mov    ebx,0x9b959f1f
  41a5aa:	aam    0x4a
  41a5ac:	shl    BYTE PTR [esi+ebp*2+0x7350c9c1],1
  41a5b3:	sub    al,0xc2
  41a5b5:	ss (bad) 
  41a5b7:	fist   WORD PTR [eax-0x14]
  41a5ba:	pop    ebp
  41a5bb:	outs   dx,DWORD PTR ds:[esi]
  41a5bc:	aas    
  41a5bd:	add    DWORD PTR es:[ebp-0x11],eax
  41a5c1:	mov    edx,0x48c66da4
  41a5c6:	inc    eax
  41a5c7:	cmc    
  41a5c8:	loop   0x41a59e
  41a5ca:	mov    eax,0xaaca7057
  41a5cf:	imul   eax,ecx,0x551e8397
  41a5d5:	cwde   
  41a5d6:	push   ecx
  41a5d7:	jecxz  0x41a641
  41a5d9:	add    esp,DWORD PTR [esi]
  41a5db:	gs push ecx
  41a5dd:	adc    dh,BYTE PTR [ebp-0x47]
  41a5e0:	xor    BYTE PTR [edx+0x222a7edb],dh
  41a5e6:	in     al,dx
  41a5e7:	ret    
  41a5e8:	cdq    
  41a5e9:	sub    al,0xf3
  41a5eb:	sub    BYTE PTR [ebx+0x3566c5cf],0x85
  41a5f2:	jg     0x41a5da
  41a5f4:	(bad)  
  41a5f5:	push   esi
  41a5f6:	aad    0x1a
  41a5f8:	sbb    al,0x15
  41a5fa:	out    dx,eax
  41a5fb:	jbe    0x41a665
  41a5fd:	jne    0x41a586
  41a5ff:	jecxz  0x41a67e
  41a601:	pop    ecx
  41a602:	mov    ebx,0x56e3bfdb
  41a607:	ja     0x41a5c0
  41a609:	inc    esp
  41a60a:	adc    edx,edx
  41a60c:	loopne 0x41a643
  41a60e:	mov    ebx,0x4d6518dc
  41a613:	adc    BYTE PTR [eax],dh
  41a615:	ds dec esp
  41a617:	dec    edx
  41a618:	loopne 0x41a66c
  41a61a:	cld    
  41a61b:	sub    BYTE PTR [ebp-0x43],al
  41a61e:	dec    ebx
  41a61f:	jo     0x41a676
  41a621:	adc    eax,esp
  41a623:	mov    ds:0xbba151fc,al
  41a628:	jbe    0x41a5f1
  41a62a:	push   esp
  41a62b:	mov    ecx,0x213e3a4a
  41a630:	sbb    al,0xab
  41a632:	mov    edx,0x774b1ef5
  41a637:	or     al,0xb0
  41a639:	imul   ecx,DWORD PTR [esi+0x2],0xffffff86
  41a63d:	mov    edx,0xf16da4c5
  41a642:	test   DWORD PTR [edi],esp
  41a644:	pushf  
  41a645:	xchg   edx,eax
  41a646:	inc    edi
  41a647:	lds    ecx,FWORD PTR [esi]
  41a649:	fs loope 0x41a6a3
  41a64c:	ins    BYTE PTR es:[edi],dx
  41a64d:	push   edi
  41a64e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a64f:	mov    edx,0xdcdd3dba
  41a654:	test   BYTE PTR [ecx],ch
  41a656:	daa    
  41a657:	pop    esi
  41a658:	out    0x82,al
  41a65a:	mov    ebx,0x7a56f31a
  41a65f:	test   BYTE PTR [eax-0x76f2c4a5],0x56
  41a666:	push   ebp
  41a667:	dec    ecx
  41a668:	fld    QWORD PTR [ecx-0x23bd93f7]
  41a66e:	pop    esi
  41a66f:	jp     0x41a600
  41a671:	and    esp,DWORD PTR [edi+0x14fcb989]
  41a677:	sbb    al,0x43
  41a679:	les    edi,FWORD PTR [esi-0x61]
  41a67c:	jge    0x41a6ed
  41a67e:	pop    edx
  41a67f:	mov    ch,0x37
  41a681:	pop    edi
  41a682:	push   edi
  41a683:	lds    edi,FWORD PTR [edx]
  41a685:	ret    0x9f9a
  41a688:	das    
  41a689:	and    DWORD PTR [esp+eiz*2-0x4b],edx
  41a68d:	jle    0x41a643
  41a68f:	cmp    edi,0x6845eb96
  41a695:	xchg   ecx,eax
  41a696:	fstp   st(0)
  41a698:	push   ss
  41a699:	mov    bh,BYTE PTR [eax]
  41a69b:	jne    0x41a6ee
  41a69d:	jne    0x41a64d
  41a69f:	test   BYTE PTR [eax],cl
  41a6a1:	sbb    al,0x18
  41a6a3:	and    DWORD PTR [ecx],0xf12b1b50
  41a6a9:	dec    ebx
  41a6aa:	xchg   ebx,eax
  41a6ab:	into   
  41a6ac:	fcomp  st(4)
  41a6ae:	ret    0x5ab6
  41a6b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6b2:	pop    eax
  41a6b3:	ret    
  41a6b4:	mov    edi,0x6cbee154
  41a6b9:	jb     0x41a6a4
  41a6bb:	jmp    0x3fb9:0x72cf
  41a6c1:	or     edi,DWORD PTR [edi+edi*4]
  41a6c4:	push   ebp
  41a6c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6c6:	xor    DWORD PTR [edx+0x417e7299],esp
  41a6cc:	jmp    0x4ffb78d8
  41a6d1:	add    bl,bh
  41a6d3:	inc    ebx
  41a6d4:	popf   
  41a6d5:	mov    ch,0xe1
  41a6d7:	sbb    dh,BYTE PTR [ebx+0x31]
  41a6da:	xor    esi,esi
  41a6dc:	sbb    ebx,ebp
  41a6de:	push   esi
  41a6df:	bound  edi,QWORD PTR ds:0xcc21c7e
  41a6e5:	nop
  41a6e6:	clc    
  41a6e7:	fmul   QWORD PTR [eax-0xe]
  41a6ea:	loopne 0x41a6af
  41a6ec:	xlat   BYTE PTR ds:[ebx]
  41a6ed:	loopne 0x41a764
  41a6ef:	adc    eax,0x93401ce8
  41a6f4:	ret    0x1f0c
  41a6f7:	cmp    BYTE PTR es:[edx-0x23226077],ch
  41a6fe:	in     al,dx
  41a6ff:	xchg   edx,eax
  41a700:	pop    esi
  41a701:	test   al,0xb
  41a703:	sbb    DWORD PTR [ebx],esp
  41a705:	sub    ah,BYTE PTR [eax+0x1777db67]
  41a70b:	xor    dh,BYTE PTR [esi-0x7]
  41a70e:	cmp    DWORD PTR [esi],edi
  41a710:	push   0x2
  41a712:	pop    esp
  41a713:	outs   dx,BYTE PTR ds:[esi]
  41a714:	xchg   edi,eax
  41a715:	cli    
  41a716:	dec    ebx
  41a717:	mov    dh,0xe9
  41a719:	inc    ebx
  41a71a:	(bad)  
  41a71c:	push   ss
  41a71d:	mov    ds:0x14e6c601,al
  41a722:	shl    BYTE PTR gs:[eax+edx*8],cl
  41a726:	jbe    0x41a710
  41a728:	ret    0x27b3
  41a72b:	push   esi
  41a72c:	push   ebx
  41a72d:	cmp    bh,BYTE PTR [ebx]
  41a72f:	cmp    esp,eax
  41a731:	dec    edi
  41a732:	mov    ch,0x9a
  41a734:	aad    0x9c
  41a736:	mov    bl,BYTE PTR [ebx]
  41a738:	xlat   BYTE PTR ds:[ebx]
  41a739:	cli    
  41a73a:	cwde   
  41a73b:	cwde   
  41a73c:	into   
  41a73d:	sahf   
  41a73e:	cli    
  41a73f:	mov    dl,0x5b
  41a741:	pop    es
  41a742:	shl    DWORD PTR [eax-0x69],cl
  41a745:	mov    ds:0xa83e6a16,eax
  41a74a:	xchg   DWORD PTR [esp+esi*8-0x6291cf3c],ebx
  41a751:	aas    
  41a752:	pushf  
  41a753:	jge    0x41a779
  41a755:	daa    
  41a756:	les    esi,FWORD PTR [esi-0x5a]
  41a759:	dec    esi
  41a75a:	add    edi,0x2f
  41a75d:	call   0xf779:0x9326f032
  41a764:	and    BYTE PTR [ebx-0x51],0x3b
  41a768:	mov    al,ds:0xd62b188f
  41a76d:	cmp    BYTE PTR [ebp+0x1e],dl
  41a770:	pop    es
  41a771:	loop   0x41a78e
  41a773:	mov    esp,DWORD PTR [edi-0x157c0bb0]
  41a779:	stos   DWORD PTR es:[edi],eax
  41a77a:	xchg   esp,eax
  41a77b:	call   0x3635f23d
  41a780:	in     eax,dx
  41a781:	jno    0x41a72a
  41a783:	jle    0x41a76d
  41a785:	aas    
  41a786:	repnz loop 0x41a714
  41a789:	dec    edi
  41a78a:	gs cdq 
  41a78c:	add    DWORD PTR [ebp-0x5ee95fba],eax
  41a792:	fs leave 
  41a794:	test   eax,0xbe0b5c71
  41a799:	mov    al,0xff
  41a79b:	adc    al,0xed
  41a79d:	cmp    ah,BYTE PTR [edi+0x45095dfa]
  41a7a3:	add    cl,BYTE PTR [ebx]
  41a7a5:	out    dx,eax
  41a7a6:	sti    
  41a7a7:	(bad)  
  41a7a8:	pop    ebx
  41a7a9:	sbb    al,0xf6
  41a7ab:	or     al,ch
  41a7ad:	and    DWORD PTR ds:0x43adac41,ebx
  41a7b3:	push   edi
  41a7b4:	mov    ebp,0xfad5e418
  41a7b9:	mov    ah,0x5d
  41a7bb:	sbb    ch,BYTE PTR [ebx+0x41ec0d3a]
  41a7c1:	mov    eax,0x737f95e3
  41a7c6:	add    eax,0x84be681f
  41a7cb:	adc    eax,0xfc77b918
  41a7d0:	pop    esi
  41a7d1:	fmul   QWORD PTR [ebp-0x309622d0]
  41a7d7:	pushf  
  41a7d8:	push   edx
  41a7d9:	inc    edi
  41a7da:	inc    ecx
  41a7db:	jge    0x41a80e
  41a7dd:	sub    DWORD PTR [esi-0x23c224f],0xffffff82
  41a7e4:	sub    cl,dh
  41a7e6:	add    ebx,DWORD PTR [esi]
  41a7e8:	push   es
  41a7e9:	stos   DWORD PTR es:[edi],eax
  41a7ea:	cmp    al,0x13
  41a7ec:	jmp    0x89cb:0x738c6b16
  41a7f3:	scas   al,BYTE PTR es:[edi]
  41a7f4:	mov    ch,0x94
  41a7f6:	adc    DWORD PTR ds:0x34ba8e58,eax
  41a7fc:	inc    eax
  41a7fd:	xlat   BYTE PTR ds:[ebx]
  41a7fe:	sti    
  41a7ff:	fwait
  41a800:	push   edx
  41a801:	mov    edx,0x873cd349
  41a806:	inc    esp
  41a807:	dec    edi
  41a808:	arpl   sp,bp
  41a80a:	outs   dx,BYTE PTR ds:[esi]
  41a80b:	cmp    ebp,DWORD PTR [edx]
  41a80d:	inc    esp
  41a80e:	pop    es
  41a80f:	stos   DWORD PTR es:[edi],eax
  41a810:	push   esp
  41a811:	(bad)  
  41a812:	adc    ecx,DWORD PTR [ecx-0x786a64bd]
  41a818:	hlt    
  41a819:	into   
  41a81a:	fst    QWORD PTR [esi]
  41a81c:	mov    esp,0xa85e21c0
  41a821:	mov    esi,0x2a7c968e
  41a826:	pop    edi
  41a827:	scas   al,BYTE PTR es:[edi]
  41a828:	adc    bl,dl
  41a82a:	mov    ds:0xc787ccc7,al
  41a82f:	rcl    DWORD PTR [esi+ebx*2+0x22],cl
  41a833:	loopne 0x41a864
  41a835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a836:	sahf   
  41a837:	call   0xada5:0x61038438
  41a83e:	(bad)  
  41a83f:	pop    edx
  41a840:	nop
  41a841:	cld    
  41a842:	add    eax,0x9b0b27c2
  41a847:	mov    al,0x5a
  41a849:	lahf   
  41a84a:	in     eax,0xd3
  41a84c:	ror    BYTE PTR [edi+edx*1-0x15f473eb],0xcc
  41a854:	fucomp st(7)
  41a856:	mov    ds:0x346ca03f,al
  41a85b:	dec    edx
  41a85c:	xchg   esp,eax
  41a85d:	lods   eax,DWORD PTR ds:[esi]
  41a85e:	neg    DWORD PTR [ebx+eax*1+0x2c34647c]
  41a865:	sub    esp,DWORD PTR [esi]
  41a867:	or     ebp,DWORD PTR [esi+0x61]
  41a86a:	lahf   
  41a86b:	(bad)  
  41a86c:	call   0x2b2684ad
  41a871:	xor    ebp,DWORD PTR ds:0xfbde1a72
  41a877:	fwait
  41a878:	add    esp,DWORD PTR [ecx-0x2a]
  41a87b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a87c:	cli    
  41a87d:	cmc    
  41a87e:	add    eax,0x926e4c49
  41a883:	lahf   
  41a884:	and    DWORD PTR [ecx],0xcf721163
  41a88a:	pushf  
  41a88b:	fsub   QWORD PTR [edx+0x4ec7e9b2]
  41a891:	sub    dl,ah
  41a893:	addr16 gs inc edx
  41a896:	sbb    al,0x45
  41a898:	xor    DWORD PTR [ebx+0x634ca7cc],0xfb28c3b3
  41a8a2:	cwde   
  41a8a3:	xor    dh,BYTE PTR [esi+0x2dd6ad27]
  41a8a9:	add    BYTE PTR [ebp+0x6ba67f21],0x8b
  41a8b0:	mov    al,ds:0x764f0e
  41a8b5:	sub    cl,bl
  41a8b7:	out    0x5e,al
  41a8b9:	cmc    
  41a8ba:	cli    
  41a8bb:	call   0x5b1c:0xa768e92b
  41a8c2:	mov    esi,0x5d5b596e
  41a8c7:	es in  al,dx
  41a8c9:	mov    ?,WORD PTR [ebx+0x27]
  41a8cc:	fsubr  QWORD PTR ds:[esi]
  41a8cf:	or     eax,0xa3a97133
  41a8d4:	ret    0xcc19
  41a8d7:	sbb    bl,al
  41a8d9:	mov    ah,0x53
  41a8db:	sbb    ebp,DWORD PTR [edi+0x1a]
  41a8de:	mov    al,0x6d
  41a8e0:	xchg   esi,eax
  41a8e1:	call   0xff99debb
  41a8e6:	push   esp
  41a8e7:	(bad)  
  41a8e8:	xor    eax,0xfa78cbc4
  41a8ed:	sbb    BYTE PTR [eax],ch
  41a8ef:	push   cs
  41a8f0:	mov    dl,BYTE PTR [ebx+0x57]
  41a8f3:	jmp    0x41a91e
  41a8f5:	test   DWORD PTR [edx+0x76b0a921],0x7a50a67e
  41a8ff:	shl    BYTE PTR [edi+0x3d953c64],0x3b
  41a906:	sbb    eax,0x62b6904a
  41a90b:	outs   dx,BYTE PTR ds:[esi]
  41a90c:	inc    esi
  41a90d:	jge    0x41a91e
  41a90f:	or     BYTE PTR [edx-0x37],ah
  41a912:	out    dx,eax
  41a913:	repnz xchg esi,eax
  41a915:	(bad)  
  41a916:	mov    ebx,0x329df818
  41a91b:	fwait
  41a91c:	and    ecx,esi
  41a91e:	cmp    eax,0x19cb0741
  41a923:	sar    BYTE PTR [esi],1
  41a925:	scas   eax,DWORD PTR es:[edi]
  41a926:	pop    edx
  41a927:	jns    0x41a8ae
  41a929:	fistp  WORD PTR [eax+0x1febc3af]
  41a92f:	adc    ah,dl
  41a931:	cdq    
  41a932:	les    edx,FWORD PTR [ebx]
  41a934:	into   
  41a935:	jl     0x41a99f
  41a937:	ror    bl,1
  41a939:	repnz cld 
  41a93b:	fsubrp st(3),st
  41a93d:	lea    esi,[esp+ebp*4-0x2eb515fa]
  41a944:	push   ss
  41a945:	mov    DWORD PTR [edx-0x2c],ecx
  41a948:	xchg   esi,eax
  41a949:	pop    edx
  41a94a:	cmp    BYTE PTR [ecx-0x45dcf81f],dl
  41a950:	or     ecx,DWORD PTR [esp+eax*8]
  41a953:	dec    ecx
  41a954:	stos   DWORD PTR es:[edi],eax
  41a955:	ror    ch,0x53
  41a958:	ret    
  41a959:	dec    ecx
  41a95a:	mov    ds:0x651640f1,eax
  41a95f:	(bad)  
  41a960:	enter  0x514e,0x88
  41a964:	out    0x83,eax
  41a966:	test   BYTE PTR [eax+0x24],0xd8
  41a96a:	aas    
  41a96b:	das    
  41a96c:	gs cld 
  41a96e:	cmp    BYTE PTR [ebx-0x2b],dl
  41a971:	push   edi
  41a972:	mov    DWORD PTR [ebx-0x1ef130a0],eax
  41a978:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41a97a:	hlt    
  41a97b:	mov    ebp,0xc7b06a85
  41a980:	(bad)  
  41a981:	clc    
  41a982:	push   cs
  41a983:	push   ecx
  41a984:	std    
  41a985:	or     BYTE PTR [edx],ah
  41a987:	sbb    al,0x52
  41a989:	push   esp
  41a98a:	mov    al,ds:0xda1b7d00
  41a98f:	aad    0x32
  41a991:	ds jnp 0x41a9d1
  41a994:	in     al,0x92
  41a996:	xor    ah,BYTE PTR [esi-0x14]
  41a999:	test   DWORD PTR [ebp-0x13],esi
  41a99c:	and    al,0x8d
  41a99e:	pop    ecx
  41a99f:	cwde   
  41a9a0:	jmp    DWORD PTR [ecx-0x71e320e6]
  41a9a6:	sbb    esi,ecx
  41a9a8:	adc    al,0x7
  41a9aa:	ds push esp
  41a9ac:	inc    eax
  41a9ad:	mov    ds:0xb8ec7f0c,al
  41a9b2:	pop    es
  41a9b3:	cmp    BYTE PTR [edx+0xec6242e],dl
  41a9b9:	stc    
  41a9ba:	xor    ebp,DWORD PTR [ebp+0x6d83ce59]
  41a9c0:	add    DWORD PTR [ebp+esi*1+0x5095f93f],ecx
  41a9c7:	mov    ebp,0xcbd0e6c1
  41a9cc:	push   ecx
  41a9cd:	cdq    
  41a9ce:	test   eax,0xdec53898
  41a9d3:	fmul   DWORD PTR [edi+0x6e238982]
  41a9d9:	or     DWORD PTR [ebp-0x9],edx
  41a9dc:	jo     0x41a9c0
  41a9de:	or     DWORD PTR [edx+ebx*4+0x6ca979e8],edi
  41a9e5:	in     eax,0xec
  41a9e7:	and    BYTE PTR [ecx+0x3dfaaa96],bh
  41a9ed:	sbb    al,0x24
  41a9ef:	pushf  
  41a9f0:	std    
  41a9f1:	mov    esi,0xd147f8d3
  41a9f6:	dec    ch
  41a9f8:	inc    esp
  41a9f9:	pop    eax
  41a9fa:	enter  0xb9f2,0x75
  41a9fe:	rcl    BYTE PTR [edi],1
  41aa00:	jbe    0x41aa04
  41aa02:	pop    ebp
  41aa03:	pusha  
  41aa04:	sub    eax,0xce3c1a3
  41aa09:	pushf  
  41aa0a:	out    0xff,eax
  41aa0c:	dec    ecx
  41aa0d:	cwde   
  41aa0e:	stc    
  41aa0f:	ss sahf 
  41aa11:	repnz in eax,dx
  41aa13:	loopne 0x41aa81
  41aa15:	imul   esi,DWORD PTR [ebx],0x3
  41aa18:	inc    ebp
  41aa19:	addr16 popf 
  41aa1b:	dec    eax
  41aa1c:	lahf   
  41aa1d:	and    dh,dh
  41aa1f:	inc    esi
  41aa20:	leave  
  41aa21:	rol    BYTE PTR [eax+0x62da6692],0xe
  41aa28:	mov    bl,0xe1
  41aa2a:	push   eax
  41aa2b:	and    esi,ebp
  41aa2d:	mov    ah,0xb3
  41aa2f:	jle    0x41aa34
  41aa31:	das    
  41aa32:	push   ss
  41aa33:	pop    ds
  41aa34:	shr    DWORD PTR [edx+ecx*8],1
  41aa37:	xor    ah,BYTE PTR [eax+0x1a]
  41aa3a:	clc    
  41aa3b:	popa   
  41aa3c:	sahf   
  41aa3d:	xchg   ebx,eax
  41aa3e:	std    
  41aa3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa40:	mul    DWORD PTR [edx-0x6d0bb3e8]
  41aa46:	or     BYTE PTR [eax+0x54],dh
  41aa49:	sbb    DWORD PTR [ebx+0x282989b6],edx
  41aa4f:	imul   esi,DWORD PTR [ebp-0x3b],0x2b81580a
  41aa56:	sbb    cl,BYTE PTR [ebp+0x757598c5]
  41aa5c:	push   esp
  41aa5d:	sub    eax,0x5a11f8a
  41aa62:	stos   DWORD PTR es:[edi],eax
  41aa63:	jecxz  0x41aa3a
  41aa65:	fimul  WORD PTR [ebp+0x5c509d2e]
  41aa6b:	xchg   ebx,eax
  41aa6c:	mov    edx,0x18b5734d
  41aa71:	add    edi,DWORD PTR [ecx]
  41aa73:	arpl   cx,di
  41aa75:	sub    ah,BYTE PTR [ebp+0x4c5cf99d]
  41aa7b:	fistp  DWORD PTR [edx-0x6d5d9981]
  41aa81:	jns    0x41aa1e
  41aa83:	and    BYTE PTR [eax-0x7c818a19],0x2
  41aa8a:	and    edi,DWORD PTR [eax+esi*8]
  41aa8d:	adc    esi,DWORD PTR [ebx-0x55]
  41aa90:	pop    esp
  41aa91:	loopne 0x41aa63
  41aa93:	cmp    DWORD PTR [eax-0x244b64c9],0x29
  41aa9a:	rcl    DWORD PTR [ebp+0x1199da88],cl
  41aaa0:	mov    eax,ds:0xe6a53c22
  41aaa5:	sar    BYTE PTR [ecx+0x730c0ae5],1
  41aaab:	in     eax,0xcf
  41aaad:	push   esp
  41aaae:	and    DWORD PTR [ecx],0x6d346f5e
  41aab4:	mov    esi,0x7358e288
  41aab9:	and    ecx,ebx
  41aabb:	das    
  41aabc:	fwait
  41aabd:	(bad)  
  41aabe:	lahf   
  41aabf:	push   0xffffff8e
  41aac1:	xor    BYTE PTR [eax-0x7d],ah
  41aac4:	adc    DWORD PTR [esi],0x12
  41aac7:	push   0xd077560
  41aacc:	sub    eax,0xb2148b8
  41aad1:	inc    ecx
  41aad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aad3:	mov    esp,0xf13ae8a6
  41aad8:	pop    eax
  41aad9:	pushf  
  41aada:	ins    BYTE PTR es:[edi],dx
  41aadb:	into   
  41aadc:	(bad)  
  41aade:	fmul   QWORD PTR [ebp+0x4f]
  41aae1:	sub    eax,DWORD PTR [edi+0x60]
  41aae4:	sub    bh,0x66
  41aae7:	jmp    0xb2549831
  41aaec:	push   eax
  41aaed:	(bad)  
  41aaee:	cmp    bh,BYTE PTR [edi-0x74]
  41aaf1:	xchg   edi,eax
  41aaf2:	and    ch,al
  41aaf4:	mov    cl,0x3b
  41aaf6:	out    dx,eax
  41aaf7:	std    
  41aaf8:	shl    BYTE PTR [esp+esi*8],1
  41aafb:	sbb    dl,bh
  41aafd:	pusha  
  41aafe:	jg     0x41aaf8
  41ab00:	loopne 0x41aaa0
  41ab02:	fisub  WORD PTR [ecx-0x5f97f3a2]
  41ab08:	sub    edi,DWORD PTR [ecx+0x7f]
  41ab0b:	pusha  
  41ab0c:	jmp    0x5ed51dbb
  41ab11:	imul   ebp,DWORD PTR [ebp*1-0x761c636c],0xffffffd7
  41ab19:	or     al,0x88
  41ab1b:	inc    ebp
  41ab1c:	loop   0x41aac6
  41ab1e:	dec    edi
  41ab1f:	outs   dx,DWORD PTR ds:[esi]
  41ab20:	xor    edi,DWORD PTR [ebp-0x44a2aba]
  41ab26:	rol    DWORD PTR [esp+edx*2+0x26],0xd3
  41ab2b:	retf   
  41ab2c:	add    BYTE PTR [ebx+eax*4],dl
  41ab2f:	mov    BYTE PTR [ebx-0x74],bl
  41ab32:	psraw  mm7,QWORD PTR [esi-0xba584e7]
  41ab39:	aam    0xed
  41ab3b:	jae    0x41ab56
  41ab3d:	scas   eax,DWORD PTR es:[edi]
  41ab3e:	jle    0x41aac5
  41ab40:	sbb    ah,BYTE PTR [edx+0x206fab93]
  41ab46:	add    eax,0xdc734832
  41ab4b:	test   eax,0x9867bb54
  41ab50:	jl     0x41ab25
  41ab52:	sub    ecx,DWORD PTR [edx]
  41ab54:	cmp    eax,0x9c70f0d
  41ab59:	cmc    
  41ab5a:	mov    ecx,0x1d6f112d
  41ab5f:	fld    QWORD PTR [ecx+0x17]
  41ab62:	sbb    al,0x11
  41ab64:	repnz adc DWORD PTR [eax+0x27],edi
  41ab68:	xchg   BYTE PTR [ebx-0x6252b89b],al
  41ab6e:	xor    al,0x25
  41ab70:	sub    al,BYTE PTR [ebp-0x381877ff]
  41ab76:	adc    eax,0x16508ecb
  41ab7b:	xchg   DWORD PTR [eax-0x5c],edi
  41ab7e:	shr    DWORD PTR [ecx+0x59a3f2c6],0x31
  41ab85:	mov    edi,DWORD PTR [ebx-0xe74549f]
  41ab8b:	jmp    0x696fad5a
  41ab90:	pop    ss
  41ab91:	inc    ebp
  41ab92:	fcomp  DWORD PTR [edi]
  41ab94:	rol    esp,0xd6
  41ab97:	(bad)  [edx-0x6fdc930a]
  41ab9d:	push   es
  41ab9e:	xchg   ebp,eax
  41ab9f:	cmp    ebx,DWORD PTR [edi+0x76]
  41aba2:	cmp    esp,ebp
  41aba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aba5:	add    DWORD PTR [esi-0x3e],0x38
  41aba9:	lea    edi,[ebp+0x18]
  41abac:	bound  esp,QWORD PTR [esp+edi*4-0x41]
  41abb0:	inc    ecx
  41abb1:	mov    DWORD PTR [ebx+edi*4-0x4d3d4b06],ebx
  41abb8:	(bad)  
  41abb9:	int3   
  41abba:	hlt    
  41abbb:	pop    ds
  41abbc:	inc    eax
  41abbd:	loop   0x41ac2c
  41abbf:	clc    
  41abc0:	dec    edi
  41abc1:	js     0x41ac20
  41abc3:	add    ecx,ebp
  41abc5:	sbb    al,0x48
  41abc7:	fist   WORD PTR [esi+0x47]
  41abca:	fxch   st(5)
  41abcc:	jne    0x41ab7f
  41abce:	mov    dl,0xcf
  41abd0:	pop    ebx
  41abd1:	dec    edx
  41abd2:	popa   
  41abd3:	test   DWORD PTR [esi-0x27062819],edi
  41abd9:	xlat   BYTE PTR ds:[ebx]
  41abda:	jle    0x41ac1b
  41abdc:	loopne 0x41abb2
  41abde:	fwait
  41abdf:	clc    
  41abe0:	xor    BYTE PTR [ecx],0xc2
  41abe3:	pop    es
  41abe4:	xchg   ebx,eax
  41abe5:	jnp    0x41abdc
  41abe7:	scas   eax,DWORD PTR es:[edi]
  41abe8:	sub    dh,al
  41abea:	iret   
  41abeb:	mov    ah,0xa1
  41abed:	aam    0xd9
  41abef:	fcmovbe st,st(0)
  41abf1:	mov    al,0x23
  41abf3:	fst    QWORD PTR [eax+0x35]
  41abf6:	sbb    DWORD PTR [edi],edi
  41abf8:	and    BYTE PTR [eax-0x73e4e919],cl
  41abfe:	inc    ecx
  41abff:	outs   dx,DWORD PTR ds:[esi]
  41ac00:	inc    ecx
  41ac01:	sbb    dh,BYTE PTR [edi]
  41ac03:	or     BYTE PTR [ebx+0x4fae4235],al
  41ac09:	sub    BYTE PTR [ebp-0x3f39b643],dh
  41ac0f:	mov    edi,0x748251f5
  41ac14:	sbb    esi,DWORD PTR [edx+0x1]
  41ac17:	arpl   dx,cx
  41ac19:	adc    bl,bh
  41ac1b:	push   es
  41ac1c:	fisubr WORD PTR [edi+ecx*1-0x52]
  41ac20:	dec    esp
  41ac21:	test   DWORD PTR [edi],ecx
  41ac23:	mov    ch,0xdb
  41ac25:	addr16 inc esp
  41ac27:	(bad)  [edi+0x71c75070]
  41ac2d:	sbb    DWORD PTR [ebp+eax*1+0x41e7c56],eax
  41ac34:	pushf  
  41ac35:	pop    edi
  41ac36:	cmp    ebp,edi
  41ac38:	add    al,0x90
  41ac3a:	mov    ecx,0x0
	...
  41ae13:	and    eax,0x55d31474
  41ae18:	repz out 0xf6,eax
  41ae1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae1c:	adc    bh,BYTE PTR [esi]
  41ae1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae1f:	das    
  41ae20:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41ae22:	fild   WORD PTR [edx+0x250001ff]
  41ae28:	pop    es
  41ae29:	add    BYTE PTR [eax],al
  41ae2b:	sub    DWORD PTR ds:0xd381ff45,ecx
  41ae31:	push   0x1e
  41ae33:	retf   
  41ae34:	jmp    0x267e:0xaa87983a
  41ae3b:	fisubr WORD PTR [eax-0x73ab4a74]
  41ae41:	ret    
  41ae42:	mov    ds:0xe15b43eb,eax
  41ae47:	xchg   ecx,eax
  41ae48:	push   eax
  41ae49:	mov    eax,0x3f05f23a
  41ae4e:	popf   
  41ae4f:	stc    
  41ae50:	jb     0x41ae78
  41ae52:	mov    BYTE PTR ss:[eax-0x51],ah
  41ae56:	loop   0x41ae6c
  41ae58:	mov    BYTE PTR [edi+esi*2],dh
  41ae5b:	pop    edx
  41ae5c:	sub    ebx,DWORD PTR ds:0xc74a30fd
  41ae62:	popf   
  41ae63:	retf   0xd094
  41ae66:	fs inc edx
  41ae68:	aaa    
  41ae69:	cmp    esi,DWORD PTR [ecx+esi*8+0x4ad31a1f]
  41ae70:	xor    eax,0xd62193bb
  41ae75:	push   ebp
  41ae76:	xor    ch,BYTE PTR ds:0x6351270a
  41ae7c:	or     ch,dh
  41ae7e:	sar    DWORD PTR [edx+0x41],1
  41ae81:	popa   
  41ae82:	iret   
  41ae83:	(bad)  
  41ae84:	adc    DWORD PTR [edi+0x7522636d],0x719da94f
  41ae8e:	rol    dh,0x52
  41ae91:	(bad)  
  41ae92:	in     eax,dx
  41ae93:	popa   
  41ae94:	outs   dx,BYTE PTR ds:[esi]
  41ae95:	mov    dl,0xca
  41ae97:	pop    edx
  41ae98:	dec    edx
  41ae99:	mov    ch,0xeb
  41ae9b:	xchg   esp,eax
  41ae9c:	stc    
  41ae9d:	iret   
  41ae9e:	int    0xd2
  41aea0:	repnz mov bh,0x79
  41aea3:	mov    bh,0x38
  41aea5:	xor    cl,ch
  41aea7:	call   0xe471:0xcd4423af
  41aeae:	or     al,BYTE PTR [ebx]
  41aeb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeb1:	jp     0x41aeef
  41aeb3:	mov    bl,0xc2
  41aeb5:	daa    
  41aeb6:	sub    eax,DWORD PTR [edi+0x6d]
  41aeb9:	mov    ecx,0xae9fd41c
  41aebe:	test   DWORD PTR [ebp-0x1dc8c33c],eax
  41aec4:	inc    ebp
  41aec5:	icebp  
  41aec6:	and    eax,0x86f6cc31
  41aecb:	jbe    0x41aed9
  41aecd:	add    bh,BYTE PTR [ebx]
  41aecf:	(bad)  [ecx+0x78]
  41aed2:	rol    DWORD PTR [esi],cl
  41aed4:	rol    BYTE PTR [ecx+esi*2-0x989531c],cl
  41aedb:	jge    0x41ae64
  41aedd:	lods   al,BYTE PTR ds:[esi]
  41aede:	nop
  41aedf:	mov    eax,0xd0885b56
  41aee4:	js     0x41ae69
  41aee6:	das    
  41aee7:	ja     0x41af0e
  41aee9:	inc    edx
  41aeea:	lds    eax,FWORD PTR [ebx]
  41aeec:	pop    edx
  41aeed:	rol    ch,0x88
  41aef0:	inc    ebx
  41aef1:	mov    bh,0x61
  41aef3:	and    edx,ebp
  41aef5:	leave  
  41aef6:	imul   esi,DWORD PTR [ebx*2+0x42860db7],0xca7f47d
  41af01:	sub    BYTE PTR [esi+0x32b69010],cl
  41af07:	ins    BYTE PTR es:[edi],dx
  41af08:	sub    cl,ch
  41af0a:	dec    esi
  41af0b:	fwait
  41af0c:	sub    al,0x8c
  41af0e:	dec    ebx
  41af0f:	je     0x41af89
  41af11:	xchg   esi,eax
  41af12:	js     0x41aef0
  41af14:	(bad)  
  41af15:	push   0x62abdc43
  41af1a:	imul   ebx,DWORD PTR [edi-0x44aaf5e],0x42
  41af21:	add    eax,0x5ff20b37
  41af26:	adc    esi,eax
  41af28:	call   0x819a:0x16481520
  41af2f:	dec    eax
  41af30:	mov    DWORD PTR [eax+0x11cd6],esi
  41af36:	fcom   st(4)
  41af38:	adc    al,0xa
  41af3a:	lahf   
  41af3b:	ror    DWORD PTR [ebp+0x2c],cl
  41af3e:	(bad)  
  41af3f:	mov    fs,WORD PTR [edi]
  41af41:	stos   DWORD PTR es:[edi],eax
  41af42:	stos   BYTE PTR es:[edi],al
  41af43:	inc    esp
  41af44:	jmp    0x2ac41ba0
  41af49:	in     eax,0x91
  41af4b:	cwde   
  41af4c:	inc    esp
  41af4d:	jmp    0x41af5d
  41af4f:	div    BYTE PTR [ebx-0x37017e72]
  41af55:	rcl    DWORD PTR [ecx],1
  41af57:	call   FWORD PTR [eax+ecx*8-0x20b52c09]
  41af5e:	call   0xd0efbc0e
  41af63:	sar    BYTE PTR [edi-0x30acca43],0x6d
  41af6a:	shr    BYTE PTR [esi+0x29],1
  41af6d:	aam    0x77
  41af6f:	int3   
  41af70:	lock loop 0x41afa7
  41af73:	out    0x7e,al
  41af75:	adc    DWORD PTR [ebp+0x422fb1ce],eax
  41af7b:	pop    ss
  41af7c:	adc    BYTE PTR [ebx-0x3c941bb7],ah
  41af82:	scas   al,BYTE PTR es:[edi]
  41af83:	neg    BYTE PTR [edx+0x78f23ff2]
  41af89:	fldenv [edi-0x43a12d86]
  41af8f:	ja     0x41af37
  41af91:	xchg   ebp,eax
  41af92:	and    bl,dl
  41af94:	es icebp 
  41af96:	push   esi
  41af97:	cwde   
  41af98:	(bad)  
  41af99:	bound  ebp,QWORD PTR [edx+ebp*2-0x12de6cc7]
  41afa0:	add    dl,BYTE PTR [edi]
  41afa2:	add    eax,0xa0bc5b48
  41afa7:	pop    esp
  41afa8:	cmp    al,bl
  41afaa:	sbb    BYTE PTR [edx-0xb],dh
  41afad:	push   0xffffffcb
  41afaf:	xchg   esi,eax
  41afb0:	not    DWORD PTR [ecx]
  41afb2:	int    0x33
  41afb4:	ror    DWORD PTR [ecx+0x7e],cl
  41afb7:	std    
  41afb8:	or     DWORD PTR [ebx+0x1399a194],edx
  41afbe:	loopne 0x41afeb
  41afc0:	(bad)  
  41afc1:	push   esi
  41afc2:	fimul  DWORD PTR [edx]
  41afc4:	jl     0x41af5c
  41afc6:	loopne 0x41b021
  41afc8:	loope  0x41b018
  41afca:	push   esp
  41afcb:	aad    0x32
  41afcd:	fldenv [ebx-0x17b34fc5]
  41afd3:	inc    ebx
  41afd4:	inc    ebp
  41afd5:	int    0xbb
  41afd7:	xchg   DWORD PTR [ecx-0x24],esi
  41afda:	xor    eax,0x4ca969a
  41afdf:	scas   eax,DWORD PTR es:[edi]
  41afe0:	in     eax,0xd2
  41afe2:	ficom  WORD PTR [edx+0x450bef53]
  41afe8:	aam    0x36
  41afea:	dec    ebx
  41afeb:	jmp    0x80dd126
  41aff0:	sub    DWORD PTR [edx],ecx
  41aff2:	cmp    al,0x24
  41aff4:	push   ss
  41aff5:	sub    bh,bl
  41aff7:	jmp    0x805a:0xb2e5930b
  41affe:	pop    ecx
  41afff:	std    
  41b000:	mov    ebx,ecx
  41b002:	mov    dh,bh
  41b004:	mov    esi,0xef0eea0
  41b009:	aad    0x7e
  41b00b:	mov    esi,0x4248f81b
  41b010:	add    eax,0x40755d36
  41b015:	imul   ebx,DWORD PTR [ecx],0x4e5336b3
  41b01b:	aaa    
  41b01c:	add    esp,ebx
  41b01e:	mov    eax,0x7e62278b
  41b023:	ret    
  41b024:	loope  0x41b035
  41b026:	xor    esp,DWORD PTR [ecx+0x2bf7b28e]
  41b02c:	icebp  
  41b02d:	(bad)  
  41b02e:	dec    esp
  41b02f:	dec    ebx
  41b030:	add    bh,BYTE PTR [ecx]
  41b032:	pushf  
  41b033:	jnp    0x41b067
  41b035:	fbld   TBYTE PTR [esi+0x2b]
  41b038:	jg     0x41b0b3
  41b03a:	fidiv  WORD PTR [ebx-0x68]
  41b03d:	cli    
  41b03e:	es aam 0x14
  41b041:	inc    esi
  41b042:	mov    eax,ds:0xe45b90a9
  41b047:	pusha  
  41b048:	stos   BYTE PTR es:[edi],al
  41b049:	mov    eax,ds:0xe0dde05
  41b04e:	jae    0x41b028
  41b050:	mov    ah,0x9d
  41b052:	lea    edi,[ecx-0x14bedd6b]
  41b058:	jne    0x41b099
  41b05a:	pop    ebx
  41b05b:	adc    BYTE PTR [edi-0x60],dh
  41b05e:	jbe    0x41b080
  41b060:	sahf   
  41b061:	and    DWORD PTR [ebx],edi
  41b063:	adc    BYTE PTR [edx-0x27],0xcc
  41b067:	stos   DWORD PTR es:[edi],eax
  41b068:	stc    
  41b069:	sahf   
  41b06a:	dec    ecx
  41b06b:	adc    cl,BYTE PTR [edi+eax*4]
  41b06e:	inc    edx
  41b06f:	xchg   edx,eax
  41b070:	call   FWORD PTR [edi+eax*2]
  41b073:	jmp    0x41b084
  41b075:	and    DWORD PTR [esi],edx
  41b077:	and    ebp,DWORD PTR [edx+eax*1+0x771edcdf]
  41b07e:	sbb    BYTE PTR ds:0x34cbc995,ah
  41b084:	cmp    BYTE PTR [ebx-0x6d712697],bl
  41b08a:	jp     0x41b051
  41b08c:	fbld   TBYTE PTR [edi]
  41b08e:	mov    ebp,0xa29c8761
  41b093:	out    dx,al
  41b094:	daa    
  41b095:	js     0x41b101
  41b097:	pushf  
  41b098:	add    al,0x4a
  41b09a:	mov    ds:0x94d30bd9,al
  41b09f:	fnstsw WORD PTR ds:0xbefb92af
  41b0a5:	(bad)  
  41b0a6:	sar    BYTE PTR [ecx],1
  41b0a8:	xchg   edx,eax
  41b0a9:	jge    0x41b0c5
  41b0ab:	push   cs
  41b0ac:	sub    al,0x57
  41b0ae:	dec    esp
  41b0af:	add    DWORD PTR [edi],ebp
  41b0b1:	push   eax
  41b0b2:	add    DWORD PTR [ecx],0x75
  41b0b5:	or     eax,0xa1181d0d
  41b0ba:	pusha  
  41b0bb:	(bad)  
  41b0bc:	mov    esp,0xd542e574
  41b0c1:	sub    eax,DWORD PTR [esp+ecx*4]
  41b0c4:	in     eax,dx
  41b0c5:	pop    eax
  41b0c6:	mov    esi,0xbab697a0
  41b0cb:	dec    ebp
  41b0cc:	jl     0x41b066
  41b0ce:	dec    ebx
  41b0cf:	cmp    dl,BYTE PTR [ecx-0x555fbc14]
  41b0d5:	dec    esp
  41b0d6:	pop    ecx
  41b0d7:	dec    ch
  41b0d9:	sar    edx,1
  41b0db:	fiadd  DWORD PTR [eax+0x59]
  41b0de:	sub    BYTE PTR [esi],bl
  41b0e0:	mov    ds:0x4a4aef1f,al
  41b0e5:	popf   
  41b0e6:	pop    ebp
  41b0e7:	pop    edx
  41b0e8:	ja     0x41b126
  41b0ea:	jns    0x41b0ab
  41b0ec:	jmp    0x99f6:0x5d428e28
  41b0f3:	retf   0x4bb0
  41b0f6:	mov    al,ds:0x93d469ff
  41b0fb:	stos   BYTE PTR es:[edi],al
  41b0fc:	adc    eax,0xcbada90f
  41b101:	and    al,BYTE PTR [eax+0x25]
  41b104:	(bad)  
  41b105:	jb     0x41b177
  41b107:	idiv   DWORD PTR [ebp+0x4a]
  41b10a:	push   0x57c2fcbb
  41b10f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b110:	sar    esp,0xc4
  41b113:	cld    
  41b114:	mov    dh,0x21
  41b116:	cmp    esp,eax
  41b118:	inc    BYTE PTR [ebp+ebx*1+0x31e34597]
  41b11f:	pop    esi
  41b120:	(bad)  
  41b122:	adc    BYTE PTR [ecx-0x4135c5ea],al
  41b128:	iret   
  41b129:	add    al,BYTE PTR [edi+0xe69bd65]
  41b12f:	ins    BYTE PTR es:[edi],dx
  41b130:	mov    eax,ds:0xdba58e58
  41b135:	(bad)  
  41b136:	mov    bl,0x7c
  41b138:	and    esi,edi
  41b13a:	repz add BYTE PTR [esi],0x87
  41b13e:	inc    eax
  41b13f:	repnz xchg edx,eax
  41b141:	sub    BYTE PTR [eax+0x5b],al
  41b144:	pop    ds
  41b145:	mov    cl,0x3d
  41b147:	xor    al,0x5a
  41b149:	dec    ebx
  41b14a:	in     eax,dx
  41b14b:	jg     0x41b19a
  41b14d:	loopne 0x41b172
  41b14f:	loop   0x41b16e
  41b151:	or     BYTE PTR [esi+0x9],ch
  41b154:	mov    bl,0x7
  41b156:	outs   dx,DWORD PTR ds:[esi]
  41b157:	fiadd  WORD PTR [eax+eiz*4-0xd]
  41b15b:	mov    bh,0x91
  41b15d:	inc    edx
  41b15e:	xchg   esi,eax
  41b15f:	mov    ds:0x59945884,eax
  41b164:	std    
  41b165:	and    eax,0xd03a62ab
  41b16a:	mov    eax,ds:0xb977bec1
  41b16f:	adc    DWORD PTR [ebp+0xdfeb653],ecx
  41b175:	out    0x32,eax
  41b177:	call   0xc33cc2fe
  41b17c:	repz cdq 
  41b17e:	push   ebp
  41b17f:	mov    bl,0x9d
  41b181:	jge    0x41b1f2
  41b183:	xor    eax,0xb598f108
  41b188:	xor    al,0x5e
  41b18a:	adc    DWORD PTR [ebp-0x2b],0x70608f02
  41b191:	mov    ecx,0xacdec775
  41b196:	adc    BYTE PTR [esi+0x2008352b],bh
  41b19c:	cmc    
  41b19d:	cli    
  41b19e:	mov    ebx,0xd5670cb4
  41b1a3:	fdivr  QWORD PTR [esi+0x3f]
  41b1a6:	mov    ebx,0xb614a592
  41b1ab:	test   al,0xb3
  41b1ad:	out    dx,al
  41b1ae:	mov    edx,0x99e08eba
  41b1b3:	loopne 0x41b224
  41b1b5:	fdivr  DWORD PTR [ecx]
  41b1b7:	mov    ecx,0xf236fc14
  41b1bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1bd:	mov    eax,ds:0x7a85b28
  41b1c2:	ret    0x470d
  41b1c5:	rcr    BYTE PTR [esi],cl
  41b1c7:	push   0x2d
  41b1c9:	(bad)  
  41b1ca:	repnz xor DWORD PTR [bp+si-0x56],ebp
  41b1cf:	and    eax,0x889714df
  41b1d4:	lahf   
  41b1d5:	out    0x87,al
  41b1d7:	ss xchg ebp,eax
  41b1d9:	int    0x16
  41b1db:	or     esi,DWORD PTR [edx]
  41b1dd:	dec    eax
  41b1de:	and    ecx,ecx
  41b1e0:	mov    al,ds:0x1a406274
  41b1e5:	adc    esi,DWORD PTR [ebp-0x253dd9c8]
  41b1eb:	std    
  41b1ec:	fnstenv [ecx+0x39]
  41b1ef:	imul   eax,DWORD PTR [ebx+0x39ade88c],0x2f3dea3e
  41b1f9:	sahf   
  41b1fa:	add    BYTE PTR [ebx],dl
  41b1fc:	shr    BYTE PTR [eax-0x4e3ad7],0xfa
  41b203:	jl     0x41b21e
  41b205:	push   ds
  41b206:	mov    BYTE PTR [edi-0x3a],bl
  41b209:	mov    ch,dl
  41b20b:	in     al,0xc5
  41b20d:	jp     0x41b1bd
  41b20f:	mov    edi,0x5ad26b6
  41b214:	test   eax,0xd5bb1c1d
  41b219:	cmp    bh,BYTE PTR [esi+0x26]
  41b21c:	(bad)  
  41b21d:	(bad)  
  41b21e:	repnz out 0x91,al
  41b221:	leave  
  41b222:	fisubr DWORD PTR [edi]
  41b224:	inc    ebx
  41b225:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b226:	or     DWORD PTR [ebx+eax*8],eax
  41b229:	pop    edi
  41b22a:	dec    esp
  41b22b:	leave  
  41b22c:	mov    al,0xb4
  41b22e:	call   0x2e80583d
  41b233:	xchg   ecx,eax
  41b234:	sub    eax,0x7b32907
  41b239:	bswap  esp
  41b23b:	ror    DWORD PTR [ebp-0x32],0xec
  41b23f:	out    0xeb,al
  41b241:	rcl    edi,cl
  41b243:	addr16 (bad) 
  41b245:	cmp    esp,DWORD PTR ds:0xad1c30b4
  41b24b:	sbb    ebp,DWORD PTR [esi+ebx*1-0x3714b7c]
  41b252:	gs jb  0x41b266
  41b255:	pop    ss
  41b256:	retfw  
  41b258:	ja     0x41b2ab
  41b25a:	stos   BYTE PTR es:[edi],al
  41b25b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b25c:	push   0x12
  41b25e:	les    edi,FWORD PTR [ecx+0x31a1ab1f]
  41b264:	adc    ebp,eax
  41b266:	ficomp DWORD PTR [ebx]
  41b268:	nop
  41b269:	dec    esp
  41b26a:	push   edi
  41b26b:	sbb    eax,0x1188b1cc
  41b270:	push   cs
  41b271:	aam    0x7
  41b273:	aam    0x2b
  41b275:	sub    DWORD PTR [eax],esi
  41b277:	mov    esi,0x218e6783
  41b27c:	in     al,0x62
  41b27e:	fbstp  TBYTE PTR ds:0xe9c8dfc7
  41b284:	xchg   ebp,eax
  41b285:	aad    0xb1
  41b287:	inc    edi
  41b288:	aad    0x9d
  41b28a:	jo     0x41b2e7
  41b28c:	cmp    al,0xe1
  41b28e:	add    BYTE PTR [ebx+0x2],cl
  41b291:	add    ebp,DWORD PTR [ecx+0x5f]
  41b294:	jmp    0x41b2ea
  41b296:	mov    ds:0x57ea38f4,eax
  41b29b:	jae    0x41b2ec
  41b29d:	xor    eax,0xe6a9fcd3
  41b2a2:	adc    al,0xdb
  41b2a4:	mov    edi,0x36ee9eb2
  41b2a9:	dec    ecx
  41b2aa:	pop    ss
  41b2ab:	xlat   BYTE PTR ds:[ebx]
  41b2ac:	and    ebp,esp
  41b2ae:	sbb    DWORD PTR [edi],ebx
  41b2b0:	stos   BYTE PTR es:[edi],al
  41b2b1:	outs   dx,DWORD PTR ds:[esi]
  41b2b2:	and    eax,0xf70a8811
  41b2b7:	dec    esp
  41b2b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2b9:	mov    bl,0xdc
  41b2bb:	add    BYTE PTR [ecx],dl
  41b2bd:	test   DWORD PTR [esi-0xc],0xdabdb537
  41b2c4:	sbb    al,0x57
  41b2c6:	inc    ebx
  41b2c7:	lods   eax,DWORD PTR ds:[esi]
  41b2c8:	mov    ebx,0xd2e1393
  41b2cd:	loop   0x41b2ac
  41b2cf:	fcomp  QWORD PTR [esi-0x7745271a]
  41b2d5:	adc    al,0x6f
  41b2d7:	pop    eax
  41b2d8:	ret    0x2fc9
  41b2db:	adc    al,0x2a
  41b2dd:	pop    esi
  41b2de:	xor    al,0xd6
  41b2e0:	and    DWORD PTR [eax-0xc6b408],ebx
  41b2e6:	and    dl,BYTE PTR ss:[ebx-0x36b1b240]
  41b2ed:	xchg   ecx,eax
  41b2ee:	add    edx,esp
  41b2f0:	jmp    0x41b2b4
  41b2f2:	push   ecx
  41b2f3:	movlps xmm3,QWORD PTR fs:[edi-0x59dbd38c]
  41b2fb:	into   
  41b2fc:	dec    esi
  41b2fd:	aaa    
  41b2fe:	pop    ss
  41b2ff:	stos   BYTE PTR es:[edi],al
  41b300:	leave  
  41b301:	mov    eax,0xfc7c1354
  41b306:	cmc    
  41b307:	rcl    dh,cl
  41b309:	aad    0xd1
  41b30b:	jecxz  0x41b384
  41b30d:	push   eax
  41b30e:	push   es
  41b30f:	shl    DWORD PTR [edi],cl
  41b311:	sub    DWORD PTR [ecx],ebx
  41b313:	ror    DWORD PTR [esp+eax*8-0x17d02f6d],1
  41b31a:	or     eax,0xedd4cca0
  41b320:	cmp    BYTE PTR [edx],ch
  41b322:	fcomp  QWORD PTR [ecx]
  41b324:	pusha  
  41b325:	ficomp DWORD PTR [ebx-0x43]
  41b328:	into   
  41b329:	mov    edi,0x1350d4fd
  41b32e:	ror    ah,0x25
  41b331:	sbb    edi,DWORD PTR [edx-0x2d]
  41b334:	jnp    0x41b34c
  41b336:	sar    ecx,1
  41b338:	mov    ecx,edx
  41b33a:	inc    DWORD PTR [ecx+0x1c]
  41b33d:	xchg   edx,eax
  41b33e:	lods   eax,DWORD PTR ds:[esi]
  41b33f:	shl    BYTE PTR [edx-0x69],1
  41b342:	xor    BYTE PTR [ecx],0xa0
  41b345:	outs   dx,BYTE PTR ds:[esi]
  41b346:	mov    ds:0xea01f821,al
  41b34b:	sub    BYTE PTR [eax+0x107b64c7],dl
  41b351:	test   BYTE PTR [edx],0xd
  41b354:	outs   dx,DWORD PTR ds:[esi]
  41b355:	addr16 jo 0x41b304
  41b358:	sub    DWORD PTR [eax],eax
  41b35a:	add    al,0xcf
  41b35c:	jl     0x41b352
  41b35e:	pop    esp
  41b35f:	lods   al,BYTE PTR ds:[esi]
  41b360:	cs int3 
  41b362:	jo     0x41b33c
  41b364:	daa    
  41b365:	jnp    0x41b39d
  41b367:	mov    dl,cl
  41b369:	imul   esi,DWORD PTR [ecx],0x72
  41b36c:	int3   
  41b36d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b36e:	shl    BYTE PTR [ecx+0x6fe93be5],1
  41b374:	std    
  41b375:	add    eax,0x3b2dd5a7
  41b37a:	mov    ebx,0x7c54b54b
  41b37f:	scas   eax,DWORD PTR es:[edi]
  41b380:	dec    ebx
  41b381:	mov    ecx,0x3333af30
  41b386:	ja     0x41b3be
  41b388:	xor    eax,0xad0bdc1
  41b38d:	pop    ebp
  41b38e:	pushf  
  41b38f:	xchg   edi,eax
  41b390:	adc    DWORD PTR [eax-0x59],ecx
  41b393:	xorps  xmm0,XMMWORD PTR [esp+ecx*8-0x72fea8cf]
  41b39b:	jb     0x41b415
  41b39d:	adc    BYTE PTR [ebx+0x285bca99],al
  41b3a3:	dec    edx
  41b3a4:	clc    
  41b3a5:	jle    0x41b344
  41b3a7:	adc    ebp,DWORD PTR [edx]
  41b3a9:	or     ah,BYTE PTR [ecx+esi*2+0x28]
  41b3ad:	inc    ebp
  41b3ae:	adc    eax,0xeff9875d
  41b3b3:	cmp    ch,BYTE PTR [edi+edi*4+0x2ed94a2a]
  41b3ba:	pop    eax
  41b3bb:	push   edx
  41b3bc:	pop    ebp
  41b3bd:	shl    BYTE PTR [ecx+0x25],cl
  41b3c0:	push   eax
  41b3c1:	in     al,0x35
  41b3c3:	dec    esp
  41b3c4:	(bad)  
  41b3c5:	retf   
  41b3c6:	jbe    0x41b3cb
  41b3c8:	outs   dx,BYTE PTR ds:[esi]
  41b3c9:	sbb    DWORD PTR [ecx],0xb7f099fb
  41b3cf:	outs   dx,BYTE PTR ds:[esi]
  41b3d0:	dec    edi
  41b3d1:	pushf  
  41b3d2:	inc    eax
  41b3d3:	jbe    0x41b3dd
  41b3d5:	mov    edi,0x670db5b4
  41b3da:	jecxz  0x41b423
  41b3dc:	xchg   edi,eax
  41b3dd:	xor    ecx,DWORD PTR [ebp-0x584a544a]
  41b3e3:	jno    0x41b3bf
  41b3e5:	push   ss
  41b3e6:	push   esi
  41b3e7:	inc    esi
  41b3e8:	ds retf 
  41b3ea:	jno    0x41b41c
  41b3ec:	and    DWORD PTR [edx-0x30ca73e3],ebp
  41b3f2:	out    0x10,eax
  41b3f4:	xor    edi,DWORD PTR [ecx]
  41b3f6:	dec    edi
  41b3f7:	pop    esp
  41b3f8:	sub    DWORD PTR [ebp-0x44314935],ebx
  41b3fe:	sub    eax,DWORD PTR [ecx]
  41b400:	xchg   ebp,eax
  41b401:	imul   edx,DWORD PTR [edx],0xe0e3be14
  41b407:	mov    ebx,0x1014a77a
  41b40c:	loopne 0x41b482
  41b40e:	scas   al,BYTE PTR es:[edi]
  41b40f:	mov    ebp,0xee5e740
  41b414:	adc    BYTE PTR [esi+esi*1+0x33d9ab9b],ah
  41b41b:	push   edx
  41b41c:	jmp    0xefd75638
  41b421:	retf   
  41b422:	xor    DWORD PTR [esi],esi
  41b424:	aas    
  41b425:	mov    esi,0x116ec33f
  41b42a:	cli    
  41b42b:	add    DWORD PTR [eax-0x54e6751c],esi
  41b431:	or     edi,ebp
  41b433:	and    dh,0x7b
  41b436:	lods   eax,DWORD PTR ds:[esi]
  41b437:	fs push 0xa50b3c5f
  41b43d:	dec    ebx
  41b43e:	in     eax,0x9f
  41b440:	inc    ebx
  41b441:	push   ss
  41b442:	mov    ebx,0x6bd12ac9
  41b447:	push   ebp
  41b448:	jp     0x41b47b
  41b44a:	sti    
  41b44b:	ss ja  0x41b415
  41b44e:	push   0xffffffac
  41b450:	xchg   DWORD PTR [ebp-0x4a52e829],edx
  41b456:	pop    edx
  41b457:	test   BYTE PTR [edi-0x195e2e42],bh
  41b45d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b45e:	test   al,0x49
  41b460:	mov    bl,0xef
  41b462:	into   
  41b463:	mov    DWORD PTR [esi],eax
  41b465:	mov    DWORD PTR [edx+0x2c],ebp
  41b468:	push   edi
  41b469:	sbb    ebx,DWORD PTR [edx+ecx*2+0x6ddfec16]
  41b470:	rcr    DWORD PTR [edx-0x9],1
  41b473:	or     DWORD PTR [edx+ebp*4+0x24],edi
  41b477:	mov    al,0x25
  41b479:	(bad)  
  41b47a:	push   edi
  41b47b:	jo     0x41b4a4
  41b47d:	rcr    cl,0x6e
  41b480:	sub    eax,edx
  41b482:	push   ebp
  41b483:	sub    eax,0x6b933750
  41b488:	or     BYTE PTR [ebx-0x2c],dh
  41b48b:	mov    bh,0x84
  41b48d:	pop    edi
  41b48e:	loop   0x41b4d7
  41b490:	mov    ecx,0xadb06e45
  41b495:	in     eax,0x9d
  41b497:	pop    ecx
  41b498:	mov    DWORD PTR [ebx-0x15],edi
  41b49b:	mov    dl,0xc4
  41b49d:	jg     0x41b470
  41b49f:	sti    
  41b4a0:	inc    ebp
  41b4a1:	rcr    DWORD PTR [ecx],1
  41b4a3:	std    
  41b4a4:	cdq    
  41b4a5:	inc    ecx
  41b4a6:	gs mov al,0xe1
  41b4a9:	std    
  41b4aa:	ret    
  41b4ab:	jecxz  0x41b467
  41b4ad:	add    DWORD PTR [esi],edi
  41b4af:	and    al,0xa
  41b4b1:	mov    ch,0x72
  41b4b3:	clc    
  41b4b4:	lock imul edi,esi,0x70b05402
  41b4bb:	loopne 0x41b459
  41b4bd:	inc    ebx
  41b4be:	lods   eax,DWORD PTR ds:[esi]
  41b4bf:	cmp    BYTE PTR [ebx-0x2637922b],ah
  41b4c5:	xchg   DWORD PTR gs:[edx-0x4a],ebx
  41b4c9:	ror    BYTE PTR [esi],0xd1
  41b4cc:	dec    ebp
  41b4cd:	push   esp
  41b4ce:	jle    0x41b519
  41b4d0:	outs   dx,DWORD PTR ds:[esi]
  41b4d1:	jo     0x41b4b9
  41b4d3:	out    0x9d,al
  41b4d5:	out    0x6f,al
  41b4d7:	(bad)  
  41b4d8:	(bad)  
  41b4d9:	std    
  41b4da:	or     esi,DWORD PTR [esi-0x62109862]
  41b4e0:	pop    es
  41b4e1:	js     0x41b53c
  41b4e3:	mov    ah,0x16
  41b4e5:	or     BYTE PTR [eax+0x55],al
  41b4e8:	push   ss
  41b4e9:	lods   al,BYTE PTR ds:[esi]
  41b4ea:	xchg   ecx,eax
  41b4eb:	dec    eax
  41b4ec:	aas    
  41b4ed:	xor    BYTE PTR [edi-0x2cc813a9],bh
  41b4f3:	and    edx,esp
  41b4f5:	loop   0x41b530
  41b4f7:	data16 fdivp st(5),st
  41b4fa:	popf   
  41b4fb:	jle    0x41b4bc
  41b4fd:	adc    dh,BYTE PTR [ecx]
  41b4ff:	or     ch,BYTE PTR [esp-0x77]
  41b503:	dec    eax
  41b504:	dec    ebx
  41b505:	sbb    ebp,DWORD PTR [ecx]
  41b507:	push   0x12
  41b509:	cmp    BYTE PTR [eax+0x7],bl
  41b50c:	sbb    eax,0x6a60047b
  41b511:	call   FWORD PTR [ebp+0x27d83710]
  41b517:	(bad)  
  41b518:	and    eax,0xdfeb7c97
  41b51d:	add    BYTE PTR [eax-0x552a085a],bh
  41b523:	and    esi,DWORD PTR [edx-0x41]
  41b526:	dec    ebp
  41b527:	imul   ebp,DWORD PTR [esi+0x1f],0xaa216093
  41b52e:	push   ebx
  41b52f:	adc    ch,bh
  41b531:	daa    
  41b532:	xor    BYTE PTR ds:[eax-0x3860bbfc],dh
  41b539:	popa   
  41b53a:	xchg   ecx,eax
  41b53b:	pop    ss
  41b53c:	js     0x41b4c3
  41b53e:	mov    esi,0x8f985e30
  41b543:	cmp    BYTE PTR [esi+0x59527ce7],0x84
  41b54a:	test   BYTE PTR ds:0xc195679e,bl
	...
  41b724:	xor    eax,esp
  41b726:	loope  0x41b6e1
  41b728:	icebp  
  41b729:	mov    ecx,0xab3fe879
  41b72e:	in     al,0x3
  41b730:	pop    ecx
  41b731:	dec    eax
  41b732:	mov    ebp,0x1ea13ba
  41b737:	add    BYTE PTR ds:0xe4000007,ah
  41b73d:	in     eax,0xda
  41b73f:	std    
  41b740:	clc    
  41b741:	outs   dx,DWORD PTR ds:[esi]
  41b742:	nop
  41b743:	cdq    
  41b744:	push   es
  41b745:	call   0xc893:0xdbea7720
  41b74c:	and    al,0x47
  41b74e:	call   0x8114:0x726672ab
  41b755:	cs ret 0x3cb6
  41b759:	pop    eax
  41b75a:	or     eax,0x7a65e3ce
  41b75f:	ins    BYTE PTR es:[edi],dx
  41b760:	mov    ch,0x95
  41b762:	imul   BYTE PTR [edi+0xe2a9e1b]
  41b768:	out    dx,al
  41b769:	scas   eax,DWORD PTR es:[edi]
  41b76a:	cmp    al,0x63
  41b76c:	ds retf 0x4841
  41b770:	xchg   esi,eax
  41b771:	push   0x4c
  41b773:	lock inc esi
  41b775:	repz and dl,cl
  41b778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b779:	mov    cl,0xf6
  41b77b:	adc    BYTE PTR [eax-0x40],0x46
  41b77f:	aad    0xdb
  41b781:	das    
  41b782:	retf   
  41b783:	rcr    al,cl
  41b785:	scas   al,BYTE PTR es:[edi]
  41b786:	mov    esi,0xc934405c
  41b78b:	iret   
  41b78c:	in     al,0xde
  41b78e:	and    BYTE PTR [ebp-0x3a],cl
  41b791:	jo     0x41b7ba
  41b793:	aaa    
  41b794:	mov    eax,DWORD PTR [ecx-0x7b3be3bd]
  41b79a:	jg     0x41b7ee
  41b79c:	std    
  41b79d:	sbb    esi,DWORD PTR [ebp+0x678157ba]
  41b7a3:	ins    DWORD PTR es:[edi],dx
  41b7a4:	es ja  0x41b7e7
  41b7a7:	jno    0x41b749
  41b7a9:	outs   dx,DWORD PTR ds:[esi]
  41b7aa:	ds pushaw 
  41b7ad:	mov    al,0xf7
  41b7af:	scas   eax,DWORD PTR es:[edi]
  41b7b0:	in     eax,dx
  41b7b1:	btc    DWORD PTR [edx-0x14702794],ebx
  41b7b8:	in     eax,0x58
  41b7ba:	cli    
  41b7bb:	(bad)  
  41b7bc:	cmp    al,0x8e
  41b7be:	mov    ds:0x3044253d,al
  41b7c3:	mov    dh,0x62
  41b7c5:	daa    
  41b7c6:	stos   BYTE PTR es:[edi],al
  41b7c7:	mov    BYTE PTR [ecx+0x0],ah
  41b7ca:	xlat   BYTE PTR ds:[ebx]
  41b7cb:	pop    edx
  41b7cc:	lds    edi,FWORD PTR [edi]
  41b7ce:	sbb    al,0xe3
  41b7d0:	and    BYTE PTR [ecx+0x2],0x41
  41b7d4:	xchg   edx,eax
  41b7d5:	cli    
  41b7d6:	imul   ebp,DWORD PTR [edi-0x348ab70d],0x4f7560d6
  41b7e0:	ret    
  41b7e1:	mov    edx,0xca886d06
  41b7e6:	ja     0x41b7fa
  41b7e8:	jnp    0x41b82d
  41b7ea:	shl    BYTE PTR [esi],1
  41b7ec:	test   al,ah
  41b7ee:	push   esp
  41b7ef:	mov    al,ds:0x3fefad80
  41b7f4:	mov    eax,ss:0x8a12c3fc
  41b7fa:	inc    esi
  41b7fb:	mov    edi,0xc77c9fc7
  41b800:	push   ebp
  41b801:	popf   
  41b802:	imul   esp,DWORD PTR [ecx],0x60
  41b805:	rcr    cl,cl
  41b807:	or     eax,0x75cddb05
  41b80c:	cmp    al,BYTE PTR [ebx+0x44]
  41b80f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b810:	jge    0x41b843
  41b812:	push   ebx
  41b813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b814:	push   ds
  41b815:	mov    al,ds:0xde28d86f
  41b81a:	test   eax,0xa4b61dcb
  41b81f:	xchg   BYTE PTR [edi],ch
  41b821:	hlt    
  41b822:	jnp    0x41b7e4
  41b824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b825:	jmp    0xb2785abe
  41b82a:	sub    edi,DWORD PTR [esi-0x2006d384]
  41b830:	outs   dx,BYTE PTR ds:[esi]
  41b831:	out    dx,al
  41b832:	cs push edx
  41b834:	add    ecx,DWORD PTR [eax-0x707be8c5]
  41b83a:	test   DWORD PTR [edx-0x1b66a410],0x8ad506ce
  41b844:	cld    
  41b845:	pop    esi
  41b846:	dec    BYTE PTR fs:[esi+0x4d]
  41b84a:	mov    ?,esi
  41b84c:	jmp    0x41b813
  41b84e:	pop    ebp
  41b84f:	mov    ch,0x75
  41b851:	test   BYTE PTR [edx],dl
  41b853:	lahf   
  41b854:	cwde   
  41b855:	stos   DWORD PTR es:[edi],eax
  41b856:	cwde   
  41b857:	xor    DWORD PTR [esi+0x7a6fddd4],eax
  41b85d:	adc    DWORD PTR [ebx+ebx*8],esi
  41b860:	out    0xce,eax
  41b862:	add    edx,ebx
  41b864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b865:	fadd   DWORD PTR [ebp+0x65]
  41b868:	xor    ebp,DWORD PTR [edi-0x723117ee]
  41b86e:	call   0xe8ebcc3c
  41b873:	cmp    dl,BYTE PTR [edi+ebx*2-0x27cb1715]
  41b87a:	sbb    DWORD PTR [esp+ecx*2+0x72],ecx
  41b87e:	adc    eax,0x1ca87a3d
  41b883:	loope  0x41b8ad
  41b885:	mov    ecx,0x347ad6f8
  41b88a:	sbb    ebp,DWORD PTR [ebx-0x400322bb]
  41b890:	fimul  DWORD PTR [ecx+edi*8+0x99668cf]
  41b897:	dec    edi
  41b898:	jecxz  0x41b915
  41b89a:	adc    bh,al
  41b89c:	mov    esi,0xea0bb456
  41b8a1:	sub    BYTE PTR [esi],ah
  41b8a3:	xchg   edi,eax
  41b8a4:	jp     0x41b8f6
  41b8a6:	jl     0x41b8f9
  41b8a8:	push   eax
  41b8a9:	mov    ds:0xb36d5f48,al
  41b8ae:	sub    al,0xc1
  41b8b0:	and    edi,edx
  41b8b2:	(bad)  
  41b8b3:	adc    BYTE PTR [edx+edx*1-0x6],0x21
  41b8b8:	mov    ebp,0x11ed869b
  41b8bd:	cmp    ah,BYTE PTR [edi]
  41b8bf:	and    dh,BYTE PTR [ecx-0x33]
  41b8c2:	getsec 
  41b8c4:	mov    bh,0xc0
  41b8c6:	dec    ebx
  41b8c7:	sbb    al,0x75
  41b8c9:	mov    edi,DWORD PTR [ecx]
  41b8cb:	xor    al,dl
  41b8cd:	cwde   
  41b8ce:	push   esp
  41b8cf:	push   0xbaa557f
  41b8d4:	cwde   
  41b8d5:	push   edx
  41b8d6:	ja     0x41b8dc
  41b8d8:	loop   0x41b870
  41b8da:	dec    edx
  41b8db:	jne    0x41b92d
  41b8dd:	clc    
  41b8de:	sub    eax,0x2de8cd3b
  41b8e3:	fcmovu st,st(6)
  41b8e5:	pop    ebp
  41b8e6:	in     eax,0x27
  41b8e8:	mov    edx,0x9561962
  41b8ed:	pop    esp
  41b8ee:	in     eax,dx
  41b8ef:	cmc    
  41b8f0:	xchg   ebp,eax
  41b8f1:	pop    esp
  41b8f2:	fcomip st,st(4)
  41b8f4:	push   es
  41b8f5:	push   0x74
  41b8f7:	pop    ecx
  41b8f8:	add    ecx,esp
  41b8fa:	(bad)  
  41b8fb:	hlt    
  41b8fc:	call   DWORD PTR cs:[edi-0x64]
  41b900:	jl     0x41b8bc
  41b902:	inc    eax
  41b903:	aaa    
  41b904:	jg     0x41b97d
  41b906:	mov    ds:0x8917eb88,eax
  41b90b:	xchg   edi,eax
  41b90c:	lods   eax,DWORD PTR ds:[esi]
  41b90d:	mov    esi,0xafbb9c0a
  41b912:	pop    ds
  41b913:	xchg   DWORD PTR [esp+edi*1-0x7005844b],ecx
  41b91a:	inc    esi
  41b91b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b91c:	jl     0x41b970
  41b91e:	pusha  
  41b91f:	dec    esi
  41b920:	jae    0x41b97b
  41b922:	dec    ebp
  41b923:	xchg   ebx,esp
  41b925:	clc    
  41b926:	adc    BYTE PTR [ebx-0x26a39e7c],bh
  41b92c:	fstp   QWORD PTR [edi-0x74f0d5]
  41b932:	not    DWORD PTR [ebp-0x5c612908]
  41b938:	xor    esi,ebp
  41b93a:	in     al,0x5d
  41b93c:	mov    bh,0x64
  41b93e:	xchg   DWORD PTR [ecx-0x2f],ebp
  41b941:	sbb    eax,DWORD PTR [ebx]
  41b943:	shl    BYTE PTR [ebx+0x3b],cl
  41b946:	popa   
  41b947:	pusha  
  41b948:	and    ebx,edx
  41b94a:	in     eax,dx
  41b94b:	push   0xffffffc9
  41b94d:	sub    eax,0xbacc6660
  41b952:	or     BYTE PTR [eax+0x58],bl
  41b955:	push   ebp
  41b956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b957:	mov    eax,ds:0x7ba7e2d7
  41b95c:	into   
  41b95d:	fwait
  41b95e:	adc    DWORD PTR [edi],0xf0d0fba3
  41b964:	(bad)  
  41b966:	stos   DWORD PTR es:[edi],eax
  41b967:	jle    0x41b97a
  41b969:	sbb    al,0x4f
  41b96b:	iret   
  41b96c:	loope  0x41b931
  41b96e:	sar    DWORD PTR [ebx-0x1c9fdd00],1
  41b974:	das    
  41b975:	sub    al,0x55
  41b977:	retf   0xcff6
  41b97a:	je     0x41b953
  41b97c:	shr    BYTE PTR ds:0x67394ab5,0xfa
  41b983:	and    eax,0x2ba3eb02
  41b988:	mov    ds:0x2caac803,eax
  41b98d:	in     eax,0x8c
  41b98f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b990:	add    DWORD PTR [ecx],eax
  41b992:	stos   BYTE PTR es:[edi],al
  41b993:	xlat   BYTE PTR ds:[ebx]
  41b994:	call   0xb7e9:0x1db7611e
  41b99b:	js     0x41b9b2
  41b99d:	and    DWORD PTR fs:[ebp+0x29353d28],ebp
  41b9a4:	daa    
  41b9a5:	xor    BYTE PTR [ebp-0x4cf4f25b],0xb0
  41b9ac:	test   al,0xb6
  41b9ae:	mov    BYTE PTR [ebp+0x28047784],cl
  41b9b4:	sbb    DWORD PTR [ebx],ebx
  41b9b6:	mov    ecx,0x6a981e9e
  41b9bb:	cmp    DWORD PTR [eax],ebp
  41b9bd:	add    al,0x34
  41b9bf:	aas    
  41b9c0:	pop    ss
  41b9c1:	bound  edi,QWORD PTR [edi+eiz*1+0x58]
  41b9c5:	or     BYTE PTR [ebp+0x12247d3f],ch
  41b9cb:	(bad)  
  41b9cc:	in     eax,dx
  41b9cd:	fldcw  WORD PTR [ecx-0x1baec6b2]
  41b9d3:	js     0x41ba29
  41b9d5:	aad    0x1d
  41b9d7:	aad    0xa1
  41b9d9:	pop    ss
  41b9da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9db:	stc    
  41b9dc:	loope  0x41b984
  41b9de:	mov    ecx,0x46fd075c
  41b9e3:	ins    BYTE PTR es:[edi],dx
  41b9e4:	jo     0x41b992
  41b9e6:	pop    es
  41b9e7:	push   ds
  41b9e8:	stos   DWORD PTR es:[edi],eax
  41b9e9:	in     eax,dx
  41b9ea:	ud0    esp,DWORD PTR [esi-0x338a10bd]
  41b9f1:	adc    BYTE PTR ds:0xb8d9efdb,dh
  41b9f7:	or     esi,eax
  41b9f9:	inc    edi
  41b9fa:	push   ds
  41b9fb:	sub    esi,DWORD PTR [eax+0x78]
  41b9fe:	rcl    BYTE PTR [esp+eax*1+0x39b0473c],cl
  41ba05:	scas   al,BYTE PTR es:[edi]
  41ba06:	xchg   esi,eax
  41ba07:	addr16 test ebx,esi
  41ba0a:	adc    bh,ch
  41ba0c:	push   ebx
  41ba0d:	push   0xffffffed
  41ba0f:	enter  0xb8de,0x70
  41ba13:	(bad)  
  41ba14:	cmp    DWORD PTR [edi+0x1e],esp
  41ba17:	push   esp
  41ba18:	(bad)  
  41ba1a:	ror    DWORD PTR [ecx],1
  41ba1c:	push   eax
  41ba1d:	mov    dl,0xa0
  41ba1f:	in     al,dx
  41ba20:	sbb    dh,BYTE PTR [ebx+0x60]
  41ba23:	sbb    DWORD PTR [esi+esi*4-0x22f9c817],0x81b9efd5
  41ba2e:	stc    
  41ba2f:	aad    0x5c
  41ba31:	mov    dh,0xf2
  41ba33:	inc    edx
  41ba34:	sbb    ah,bh
  41ba36:	data16 add al,BYTE PTR [ecx+esi*4+0x79614c03]
  41ba3e:	push   es
  41ba3f:	or     al,0x7d
  41ba41:	inc    esp
  41ba42:	imul   esi,DWORD PTR [ebp+0x6d],0x3858b173
  41ba49:	fidivr WORD PTR [edx]
  41ba4b:	jle    0x41ba9d
  41ba4d:	xlat   BYTE PTR ds:[ebx]
  41ba4e:	push   ecx
  41ba4f:	cmp    cl,BYTE PTR [esi]
  41ba51:	nop
  41ba52:	enter  0x8a8c,0xe1
  41ba56:	ins    BYTE PTR es:[edi],dx
  41ba57:	addr16 and eax,0xeec85baf
  41ba5d:	or     al,0x17
  41ba5f:	dec    edx
  41ba60:	xchg   edi,edx
  41ba62:	scas   eax,DWORD PTR es:[edi]
  41ba63:	mov    cl,dh
  41ba65:	imul   esp,DWORD PTR [edx+0x10],0xef52e568
  41ba6c:	jns    0x41ba47
  41ba6e:	fwait
  41ba6f:	ins    BYTE PTR es:[edi],dx
  41ba70:	mov    BYTE PTR [esi+0xee9f9bf],ch
  41ba76:	inc    edx
  41ba77:	push   esi
  41ba78:	pop    esp
  41ba79:	out    dx,al
  41ba7a:	mov    ds:0x194415b4,al
  41ba7f:	rcl    edi,cl
  41ba81:	out    0x67,al
  41ba83:	adc    ebp,DWORD PTR [ecx-0x4c383713]
  41ba89:	pop    ebp
  41ba8a:	jmp    0x249d6e8
  41ba8f:	lods   ax,WORD PTR ds:[esi]
  41ba91:	adc    esp,edx
  41ba93:	stc    
  41ba94:	leave  
  41ba95:	stos   BYTE PTR es:[edi],al
  41ba96:	sbb    ebp,DWORD PTR [edi]
  41ba98:	outs   dx,DWORD PTR ds:[esi]
  41ba99:	ss push ds
  41ba9b:	(bad)  
  41ba9d:	in     al,0xe
  41ba9f:	in     eax,dx
  41baa0:	mov    bl,0x28
  41baa2:	sbb    eax,0xfeff328f
  41baa7:	mov    bh,0x6d
  41baa9:	or     DWORD PTR [ecx-0x5d44b6d8],0x222a436f
  41bab3:	dec    ebx
  41bab4:	outs   dx,DWORD PTR ds:[esi]
  41bab5:	jbe    0x41bafd
  41bab7:	and    BYTE PTR [edx-0x2891666c],ch
  41babd:	in     eax,dx
  41babe:	and    eax,0x1e8af55f
  41bac3:	cmp    esp,edi
  41bac5:	xor    ebp,esi
  41bac7:	sub    DWORD PTR [edi-0x15],ecx
  41baca:	(bad)  
  41bacb:	pop    esi
  41bacc:	jmp    0x23f2:0xbc437df6
  41bad3:	in     al,dx
  41bad4:	adc    BYTE PTR [ecx],bl
  41bad6:	xor    ch,ah
  41bad8:	adc    ch,BYTE PTR [ebx+0xbd787dd]
  41bade:	lds    edi,FWORD PTR [edi]
  41bae0:	and    edi,DWORD PTR [edx-0x1df5e3f9]
  41bae6:	push   ebp
  41bae7:	or     eax,eax
  41bae9:	gs out 0x55,al
  41baec:	push   esp
  41baed:	adc    DWORD PTR [bp+di+0x592c],ebp
  41baf2:	inc    edx
  41baf3:	and    al,0x6d
  41baf5:	lock rcr DWORD PTR gs:[ebx-0x1],0x9b
  41bafb:	or     eax,esi
  41bafd:	loopne 0x41baa5
  41baff:	aad    0x5
  41bb01:	and    ecx,eax
  41bb03:	and    al,BYTE PTR [ecx]
  41bb05:	call   FWORD PTR [ebx-0x6590a229]
  41bb0b:	cmp    BYTE PTR [eax],dh
  41bb0d:	pop    edi
  41bb0e:	cld    
  41bb0f:	xor    eax,DWORD PTR [ebp+0x1dba92ec]
  41bb15:	repz rcr dh,0x65
  41bb19:	imul   esp,DWORD PTR [eax],0xffffffff
  41bb1c:	push   ebx
  41bb1d:	aas    
  41bb1e:	dec    eax
  41bb1f:	sub    esp,edi
  41bb21:	sbb    al,0xcb
  41bb23:	jbe    0x41bb8f
  41bb25:	xor    ebp,DWORD PTR [ebp-0x44]
  41bb28:	pop    esi
  41bb29:	sbb    DWORD PTR [eax+0x76],edi
  41bb2c:	or     BYTE PTR [eax+0x13faa8be],al
  41bb32:	fwait
  41bb33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb34:	ror    BYTE PTR [ebx+0x6f2c8e3f],1
  41bb3a:	mov    ds:0x561a673e,eax
  41bb3f:	std    
  41bb40:	cmp    ebx,DWORD PTR [ecx-0xc]
  41bb43:	and    DWORD PTR [ebp+0x4f],ebx
  41bb46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb47:	int3   
  41bb48:	das    
  41bb49:	sub    al,0xaa
  41bb4b:	mov    edx,0x20091e22
  41bb50:	repz sbb esp,DWORD PTR [ebp-0x18ef045d]
  41bb57:	inc    esi
  41bb58:	imul   ebp,DWORD PTR ds:0x441c3c0b,0xffffff8e
  41bb5f:	pop    edx
  41bb60:	add    al,0x93
  41bb62:	push   ebp
  41bb63:	xor    esi,DWORD PTR [eax-0x44]
  41bb66:	jge    0x41bb51
  41bb68:	adc    dh,0xd2
  41bb6b:	mov    al,ds:0x9d6775f
  41bb70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb71:	jmp    0x41bb21
  41bb73:	loop   0x41bb76
  41bb75:	mov    esp,0x7afb06af
  41bb7a:	aad    0x30
  41bb7c:	loope  0x41bb34
  41bb7e:	cmp    ebx,DWORD PTR [ebx+0x56]
  41bb81:	shl    ebp,cl
  41bb83:	mov    cl,0x52
  41bb85:	jns    0x41bbb0
  41bb87:	cmp    eax,0xa187ae98
  41bb8c:	mov    ebx,0x48b35d05
  41bb91:	push   edx
  41bb92:	fst    DWORD PTR [ecx]
  41bb94:	repnz adc DWORD PTR [esi+0x7a],esi
  41bb98:	sti    
  41bb99:	das    
  41bb9a:	gs aas 
  41bb9c:	and    bl,ch
  41bb9e:	loop   0x41bbd2
  41bba0:	push   ebp
  41bba1:	imul   esi,eax,0xffffffe9
  41bba4:	sub    eax,0x5057e7ea
  41bba9:	mov    esp,0x2e96e6f0
  41bbae:	adc    ah,BYTE PTR [edx+edx*2-0x73]
  41bbb2:	data16 mov bh,BYTE PTR [edx]
  41bbb5:	int3   
  41bbb6:	int3   
  41bbb7:	mov    DWORD PTR [edx-0x11afb00b],edx
  41bbbd:	scas   al,BYTE PTR es:[edi]
  41bbbe:	mov    esi,0x851080a5
  41bbc3:	into   
  41bbc4:	pop    eax
  41bbc5:	shl    DWORD PTR [edi+0x5],1
  41bbc8:	daa    
  41bbc9:	xor    eax,0x7213e3ab
  41bbce:	mov    eax,ds:0x708370d5
  41bbd3:	push   ebx
  41bbd4:	or     eax,0x54f28bf5
  41bbd9:	sub    esi,DWORD PTR [edx+0x661ddc4a]
  41bbdf:	add    al,0x90
  41bbe1:	lods   eax,DWORD PTR ds:[esi]
  41bbe2:	div    BYTE PTR [eax-0x6a74fe93]
  41bbe8:	das    
  41bbe9:	xchg   ecx,eax
  41bbea:	xor    bl,dh
  41bbec:	adc    ebx,DWORD PTR [esi]
  41bbee:	pop    ss
  41bbef:	add    eax,0x1db5a0a5
  41bbf4:	ins    DWORD PTR es:[edi],dx
  41bbf5:	mov    cl,0x61
  41bbf7:	inc    esi
  41bbf8:	fwait
  41bbf9:	push   esi
  41bbfa:	xor    bl,BYTE PTR [esi-0x4b]
  41bbfd:	mov    ebp,DWORD PTR [ebx-0x26cbee7a]
  41bc03:	dec    edi
  41bc04:	cmp    ebp,DWORD PTR [ebp+0x59dc7740]
  41bc0a:	nop
  41bc0b:	loopne 0x41bc0b
  41bc0d:	push   es
  41bc0e:	ja     0x41bc2c
  41bc10:	cwde   
  41bc11:	call   0x72eb:0xf391e5fe
  41bc18:	cli    
  41bc19:	iret   
  41bc1a:	fnstcw WORD PTR [edi-0x41]
  41bc1d:	test   BYTE PTR [edx+ecx*1],0xa0
  41bc21:	mov    ah,0x31
  41bc23:	imul   ebx,DWORD PTR [eax+0x20776108],0xffffffcc
  41bc2a:	xchg   esp,eax
  41bc2b:	daa    
  41bc2c:	mov    ds:0xc4860a66,eax
  41bc31:	fistp  DWORD PTR [edi]
  41bc33:	out    0x4c,al
  41bc35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc36:	push   ecx
  41bc37:	adc    ch,BYTE PTR [ecx+edx*8-0x33]
  41bc3b:	xchg   esi,eax
  41bc3c:	(bad)  
  41bc3d:	sbb    cl,BYTE PTR [ebx+0x65]
  41bc40:	inc    edx
  41bc41:	jno    0x41bc7c
  41bc43:	out    dx,eax
  41bc44:	add    ebx,DWORD PTR [esi]
  41bc46:	jg     0x41bbd3
  41bc48:	stos   BYTE PTR es:[edi],al
  41bc49:	(bad)  
  41bc4a:	mov    esp,0xaa4ff676
  41bc4f:	xchg   esp,eax
  41bc50:	push   esp
  41bc51:	sbb    BYTE PTR ds:0x840e69a6,ch
  41bc57:	pop    esp
  41bc58:	lea    ecx,[ecx]
  41bc5a:	inc    ebp
  41bc5b:	lods   eax,DWORD PTR ds:[esi]
  41bc5c:	aaa    
  41bc5d:	rcl    DWORD PTR [ebp+0xe6c8ed1],1
  41bc63:	pop    ebx
  41bc64:	call   0x7649:0xf57d75a5
  41bc6b:	sar    BYTE PTR [esp+edx*8-0x7e9692ba],0x1f
  41bc73:	mov    dl,0xec
  41bc75:	adc    al,0x3e
  41bc77:	jo     0x41bc3d
  41bc79:	fbld   TBYTE PTR [eax+esi*8+0x50f3d2ef]
  41bc80:	fsubr  QWORD PTR [edi-0x2c]
  41bc83:	dec    eax
  41bc84:	fcomp  DWORD PTR [edx+0x28]
  41bc87:	fwait
  41bc88:	push   eax
  41bc89:	jge    0x41bc9d
  41bc8b:	or     BYTE PTR [edi-0x1ae36d51],ah
  41bc91:	mov    ch,0xd9
  41bc93:	hlt    
  41bc94:	cmp    BYTE PTR [ebx+ecx*8],dl
  41bc97:	xchg   edx,eax
  41bc98:	pop    edx
  41bc99:	ins    BYTE PTR es:[edi],dx
  41bc9a:	push   ebp
  41bc9b:	repnz xchg ecx,eax
  41bc9d:	scas   eax,DWORD PTR es:[edi]
  41bc9e:	xchg   ecx,eax
  41bc9f:	and    DWORD PTR [edi-0x22],ecx
  41bca2:	dec    esp
  41bca3:	int3   
  41bca4:	cmp    DWORD PTR [ebx-0x3a],0x1b
  41bca8:	outs   dx,BYTE PTR ds:[esi]
  41bca9:	cli    
  41bcaa:	xor    DWORD PTR [ebx-0x48],edi
  41bcad:	rcl    ebx,cl
  41bcaf:	jnp    0x41bce6
  41bcb1:	dec    esi
  41bcb2:	jp     0x41bc78
  41bcb4:	repnz aas 
  41bcb6:	mov    cl,0x93
  41bcb8:	adc    eax,0xf0029a58
  41bcbd:	sbb    al,0x50
  41bcbf:	cmp    BYTE PTR [eax+0x6e],0xea
  41bcc3:	mov    DWORD PTR [ebx+0x3b],esi
  41bcc6:	das    
  41bcc7:	cmp    bh,ch
  41bcc9:	stos   BYTE PTR es:[edi],al
  41bcca:	cwde   
  41bccb:	outs   dx,DWORD PTR ds:[esi]
  41bccc:	sub    eax,0xc69d7719
  41bcd1:	and    eax,0xd03d9105
  41bcd6:	push   DWORD PTR [esi]
  41bcd8:	pop    ds
  41bcd9:	xlat   BYTE PTR ds:[ebx]
  41bcda:	push   ecx
  41bcdb:	adc    DWORD PTR [edi],edx
  41bcdd:	pop    eax
  41bcde:	dec    ebp
  41bcdf:	call   0xa64f2b3
  41bce4:	rcr    BYTE PTR [edx+0x35770431],0x8
  41bceb:	dec    eax
  41bcec:	add    ecx,DWORD PTR [eax-0x4c]
  41bcef:	mov    dl,0x7a
  41bcf1:	leave  
  41bcf2:	sub    ecx,DWORD PTR ss:[esi-0x12]
  41bcf6:	pop    eax
  41bcf7:	mov    bh,0x1e
  41bcf9:	bnd lock ret 
  41bcfc:	fcmovu st,st(2)
  41bcfe:	sbb    ecx,ebp
  41bd00:	cmp    DWORD PTR [ebx],0x39
  41bd03:	mov    ds:0x41ed3c8a,eax
  41bd08:	dec    eax
  41bd09:	cs push ebx
  41bd0b:	aas    
  41bd0c:	add    BYTE PTR [ebx],al
  41bd0e:	or     eax,0x203c2651
  41bd13:	or     eax,0x3c90bcc6
  41bd18:	retf   
  41bd19:	pop    es
  41bd1a:	fs popa 
  41bd1c:	hlt    
  41bd1d:	dec    esp
  41bd1e:	mov    ah,0x75
  41bd20:	add    al,0x22
  41bd22:	lds    edi,FWORD PTR ds:0xd5b6dd53
  41bd28:	or     DWORD PTR [ecx+0x48],esp
  41bd2b:	out    dx,eax
  41bd2c:	and    BYTE PTR [ebp-0x36208565],dl
  41bd32:	scas   al,BYTE PTR es:[edi]
  41bd33:	mov    BYTE PTR [edi-0x24],ch
  41bd36:	clc    
  41bd37:	xchg   edi,eax
  41bd38:	add    bl,BYTE PTR [ebx+0x24bc7b85]
  41bd3e:	iret   
  41bd3f:	inc    ecx
  41bd40:	mov    esp,0x9368f658
  41bd45:	push   cs
  41bd46:	jge    0x41bd49
  41bd48:	mov    ebx,0x40f3ef95
  41bd4d:	push   edi
  41bd4e:	daa    
  41bd4f:	push   0x58a90633
  41bd54:	xor    esp,DWORD PTR [ecx-0x6818d7ba]
  41bd5a:	push   ecx
  41bd5b:	add    al,BYTE PTR [esi]
  41bd5d:	retf   0x9ca9
  41bd60:	fwait
  41bd61:	mov    DWORD PTR [ebx-0x57],edi
  41bd64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd65:	mov    edx,0xaf2c196c
  41bd6b:	lods   eax,DWORD PTR ds:[esi]
  41bd6c:	dec    ebx
  41bd6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd6e:	stos   DWORD PTR es:[edi],eax
  41bd6f:	adc    al,0x0
  41bd71:	sub    al,0x8b
  41bd73:	sahf   
  41bd74:	mov    ?,WORD PTR [esi]
  41bd76:	xor    al,0xa5
  41bd78:	push   ecx
  41bd79:	inc    edi
  41bd7a:	xchg   BYTE PTR [esi+0x73d228bb],cl
  41bd80:	sbb    al,0xa9
  41bd82:	retf   
  41bd83:	and    BYTE PTR [edx-0x7b90ad35],al
  41bd89:	pop    ebp
  41bd8a:	sbb    al,0x45
  41bd8c:	push   ds
  41bd8d:	mov    al,0xea
  41bd8f:	add    DWORD PTR [esi+0x6f86e490],eax
  41bd95:	jcxz   0x41bd38
  41bd98:	jecxz  0x41bd7f
  41bd9a:	inc    ecx
  41bd9b:	push   0x92410707
  41bda0:	hlt    
  41bda1:	pushf  
  41bda2:	fiadd  WORD PTR [esi+0x1a]
  41bda5:	outs   dx,BYTE PTR ds:[esi]
  41bda6:	or     BYTE PTR [edx-0x26],dh
  41bda9:	loope  0x41be15
  41bdab:	jo     0x5533af9
  41bdb1:	jmp    0x2ea971fa
  41bdb6:	ret    
  41bdb7:	xchg   edi,eax
  41bdb8:	in     eax,0xd0
  41bdba:	xor    ebx,DWORD PTR [esi-0x53]
  41bdbd:	fwait
  41bdbe:	mov    eax,0xcdf1eaff
  41bdc3:	loopne 0x41bd9d
  41bdc5:	push   ss
  41bdc6:	mov    es,WORD PTR [esp+ebx*1-0x633d0fa2]
  41bdcd:	and    eax,0x1a237dd8
  41bdd2:	(bad)  
  41bdd3:	in     eax,dx
  41bdd4:	add    ecx,DWORD PTR [esi-0x53]
  41bdd7:	out    dx,eax
  41bdd8:	enter  0x7de2,0xbe
  41bddc:	jno    0x41bdac
  41bdde:	adc    eax,0xc675e6ec
  41bde3:	push   edi
  41bde4:	test   eax,0xfed60316
  41bde9:	call   0x8832:0x97d7b6bc
  41bdf0:	addr16 cmp edi,esp
  41bdf3:	add    eax,0xdbf17f95
  41bdf8:	out    0xf1,eax
  41bdfa:	cmp    ah,BYTE PTR [esi-0x23bde130]
  41be00:	aam    0x58
  41be02:	add    bh,BYTE PTR [edi]
  41be04:	leave  
  41be05:	mov    bl,0x96
  41be07:	add    eax,0x5ab8533a
  41be0c:	adc    eax,0xc6483b7b
  41be11:	cld    
  41be12:	mov    DWORD PTR [eax-0xf],ecx
  41be15:	lock push edi
  41be17:	frstor [esi+0x40]
  41be1a:	lds    ecx,FWORD PTR [edi+esi*8-0x7332976e]
  41be21:	aam    0x20
  41be23:	and    ch,BYTE PTR [ebx+0x62]
  41be26:	or     al,0x3f
  41be28:	jl     0x41bddd
  41be2a:	dec    ecx
  41be2b:	es stos BYTE PTR es:[edi],al
  41be2d:	in     al,dx
  41be2e:	aad    0x9d
  41be30:	int3   
  41be31:	cwde   
  41be32:	sub    eax,0xcfd927c
  41be37:	in     al,0x87
  41be39:	inc    ecx
  41be3a:	jae    0x41beb7
  41be3c:	repnz dec ebp
  41be3e:	repz aam 0x92
  41be41:	adc    eax,0x17671035
  41be46:	adc    DWORD PTR [esi+0x5b],eax
  41be49:	stos   DWORD PTR es:[edi],eax
  41be4a:	mov    ?,WORD PTR [edx+esi*4+0x21]
  41be4e:	jge    0x41be93
  41be50:	push   esp
  41be51:	push   ss
  41be52:	sub    BYTE PTR [ecx+ebp*1],bh
  41be55:	adc    bh,BYTE PTR [ecx+0x4143ba2a]
  41be5b:	xlat   BYTE PTR ds:[ebx]
  41be5c:	repnz xchg esi,eax
  41be5e:	mov    dl,0x23
  41be60:	sldt   WORD PTR [eax]
	...
  41c03b:	add    BYTE PTR [eax],al
  41c03d:	adc    al,0xcb
  41c03f:	mov    bl,0x9a
  41c041:	(bad)  
  41c042:	cli    
  41c043:	cmp    eax,0x190968cf
  41c048:	mov    ebp,DWORD PTR [eax+0x79]
  41c04b:	xchg   edx,eax
  41c04c:	cmp    DWORD PTR [ecx+0x250001a2],esp
  41c052:	pop    es
  41c053:	add    BYTE PTR [eax],al
  41c055:	out    dx,al
  41c056:	int    0x1
  41c058:	test   BYTE PTR [ebp-0xa],dh
  41c05b:	cmp    DWORD PTR [ebx+0x296e4d4],ebp
  41c061:	or     ecx,DWORD PTR [edi-0x4c3c32c4]
  41c067:	arpl   WORD PTR [edx+0x7e53e8e],sp
  41c06d:	and    ah,BYTE PTR ds:0x5a8f475d
  41c073:	icebp  
  41c074:	jle    0x41c003
  41c076:	ret    0xb1fe
  41c079:	push   ebx
  41c07a:	pop    ds
  41c07b:	std    
  41c07c:	push   esi
  41c07d:	mov    edi,0xaa466cbb
  41c082:	pop    esp
  41c083:	loopne 0x41c088
  41c085:	push   0xc1544770
  41c08a:	xchg   esp,eax
  41c08b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c08c:	inc    esp
  41c08d:	rcl    BYTE PTR [ebp+0x6a],0xd2
  41c091:	inc    ebp
  41c092:	inc    ebx
  41c093:	cli    
  41c094:	dec    ebp
  41c095:	sahf   
  41c096:	adc    eax,0x2e1bc600
  41c09b:	jno    0x41c0d3
  41c09d:	ja     0x41c078
  41c09f:	mov    esi,0x97450f99
  41c0a4:	out    dx,al
  41c0a5:	jle    0x41c06f
  41c0a7:	mov    eax,0x14a81ce6
  41c0ac:	adc    DWORD PTR [ebp+ebp*2+0x3dbba706],0xffffff92
  41c0b4:	sub    al,0x3a
  41c0b6:	mov    dl,0x15
  41c0b8:	test   ax,0x6695
  41c0bc:	inc    sp
  41c0be:	dec    DWORD PTR [edi]
  41c0c0:	adc    eax,0xa211399b
  41c0c5:	jb     0x41c0eb
  41c0c7:	pop    esp
  41c0c8:	cmp    al,0xbe
  41c0ca:	(bad)
  41c0cd:	inc    eax
  41c0ce:	das    
  41c0cf:	jp     0x41c0e9
  41c0d1:	cmp    BYTE PTR [esi],0x86
  41c0d4:	out    0xcb,eax
  41c0d6:	aaa    
  41c0d7:	std    
  41c0d8:	retf   
  41c0d9:	push   0x3
  41c0db:	out    0x23,al
  41c0dd:	lds    edx,FWORD PTR [edi+0x7]
  41c0e0:	pop    ebx
  41c0e1:	jge    0x41c0ac
  41c0e3:	jmp    0xdbdb:0xa1e5b296
  41c0ea:	aam    0xcb
  41c0ec:	cmp    bh,BYTE PTR [ecx+0x6b]
  41c0ef:	popa   
  41c0f0:	mov    al,ds:0xa0cfa78b
  41c0f5:	jbe    0x41c166
  41c0f7:	jno    0x41c11d
  41c0f9:	ror    BYTE PTR [esi],1
  41c0fb:	jo     0x41c159
  41c0fd:	and    ah,ah
  41c0ff:	mov    BYTE PTR [ecx+0x5fa63bf9],dh
  41c105:	fiadd  WORD PTR [ebx+0x57be0a15]
  41c10b:	jmp    0xb9cd:0xad59b34b
  41c112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c113:	inc    ecx
  41c114:	ins    DWORD PTR es:[edi],dx
  41c115:	ffree  st(7)
  41c117:	sbb    al,0xae
  41c119:	sub    al,0x97
  41c11b:	test   DWORD PTR ds:0x29cfaea5,ecx
  41c121:	pop    eax
  41c122:	int3   
  41c123:	sbb    eax,0x25bc7932
  41c128:	cli    
  41c129:	sbb    eax,0x82d91162
  41c12e:	mov    eax,0x497edbdc
  41c133:	or     dh,cl
  41c135:	sub    eax,ebp
  41c137:	imul   ecx,DWORD PTR [esi-0x6648d48d],0xb30113e9
  41c141:	mov    DWORD PTR [ebp+0x35afe530],ebp
  41c147:	retf   0xb65f
  41c14a:	and    edi,DWORD PTR [edi]
  41c14c:	retf   
  41c14d:	retf   0x9cbe
  41c150:	(bad)  
  41c151:	jae    0x41c146
  41c153:	out    0x66,al
  41c155:	add    bh,dh
  41c157:	out    dx,al
  41c158:	loopne 0x41c178
  41c15a:	sub    BYTE PTR [ebx],bl
  41c15c:	sbb    DWORD PTR [ebp-0x53],0xb81e4368
  41c163:	mov    eax,0x39a9c105
  41c168:	cdq    
  41c169:	pop    es
  41c16a:	or     DWORD PTR ds:0xf6507334,ebx
  41c170:	dec    esi
  41c171:	ins    DWORD PTR es:[edi],dx
  41c172:	sbb    DWORD PTR [esi],edx
  41c174:	xor    esi,DWORD PTR [esi]
  41c176:	mov    edi,0x50335b17
  41c17b:	jl     0x41c199
  41c17d:	pop    ecx
  41c17e:	repz adc DWORD PTR [eax],ebx
  41c181:	mov    ch,0x35
  41c183:	dec    eax
  41c184:	jle    0x41c10b
  41c186:	add    al,ah
  41c188:	jge    0x41c176
  41c18a:	aaa    
  41c18b:	push   cs
  41c18c:	test   ebp,0xf7858dda
  41c192:	pop    eax
  41c193:	or     al,BYTE PTR [ebx+0x3]
  41c196:	lahf   
  41c197:	xchg   ecx,eax
  41c198:	repnz sbb BYTE PTR [edi+ecx*2-0x13],bh
  41c19d:	into   
  41c19e:	(bad)  
  41c19f:	cmc    
  41c1a0:	shr    DWORD PTR [eax-0x2f228db],1
  41c1a6:	fwait
  41c1a7:	add    al,0x40
  41c1a9:	je     0x41c1a6
  41c1ab:	ja     0x41c179
  41c1ad:	in     eax,dx
  41c1ae:	add    DWORD PTR [edi+0x11e323ba],esp
  41c1b4:	popa   
  41c1b5:	xor    ecx,DWORD PTR [esp+eax*4-0x57ba0483]
  41c1bc:	lahf   
  41c1bd:	cmp    BYTE PTR gs:[ecx+ebp*8-0x63],0x92
  41c1c3:	and    BYTE PTR [ebx],al
  41c1c5:	pop    edx
  41c1c7:	push   0xe5a281f2
  41c1cc:	adc    esi,edi
  41c1ce:	in     al,dx
  41c1cf:	fld    DWORD PTR [ecx+0x1c694ad8]
  41c1d5:	je     0x41c220
  41c1d7:	pop    edx
  41c1d8:	out    dx,eax
  41c1d9:	retf   0x3f84
  41c1dc:	cs ja  0x41c18a
  41c1df:	adc    DWORD PTR [eax+0x7a],esi
  41c1e2:	jne    0x41c174
  41c1e4:	hlt    
  41c1e5:	jno    0x41c1c1
  41c1e7:	push   edi
  41c1e8:	or     edx,ecx
  41c1ea:	mov    bl,0xce
  41c1ec:	xchg   DWORD PTR [esi-0x3f9f6db7],edx
  41c1f2:	ja     0x41c1d4
  41c1f4:	xchg   esi,eax
  41c1f5:	icebp  
  41c1f6:	jp     0x41c1f8
  41c1f8:	add    DWORD PTR [edx+esi*1],ecx
  41c1fb:	(bad)  
  41c1fc:	stc    
  41c1fd:	fwait
  41c1fe:	xor    DWORD PTR [ebx+0x8],ebx
  41c201:	xor    ebx,eax
  41c203:	mov    ds:0x9de38288,eax
  41c208:	sahf   
  41c209:	push   ds
  41c20a:	push   ebp
  41c20b:	stc    
  41c20c:	das    
  41c20d:	mov    ah,0xdf
  41c20f:	pop    ebp
  41c210:	cmp    cl,al
  41c212:	add    dh,BYTE PTR [ecx+0x22]
  41c215:	or     cl,BYTE PTR [edi-0x7b]
  41c218:	mov    eax,0xd2e127c4
  41c21d:	mov    ecx,0x53b4798a
  41c222:	retf   0x7ded
  41c225:	mov    edx,0x7dc8147b
  41c22a:	repnz push ds
  41c22c:	mov    al,ds:0x9ca650cb
  41c231:	sbb    eax,0x37457a24
  41c236:	or     al,0x78
  41c238:	out    dx,al
  41c239:	add    DWORD PTR [esi],esp
  41c23b:	pop    ecx
  41c23c:	stc    
  41c23d:	test   al,0xa6
  41c23f:	dec    ebx
  41c240:	mov    ds:0xc5793c8c,al
  41c245:	push   edx
  41c246:	jmp    0xe753:0x22c8c3c5
  41c24d:	jnp    0x41c276
  41c24f:	sbb    eax,0xbffd9ce0
  41c254:	mov    ebp,0x9b4aed7b
  41c259:	das    
  41c25a:	jmp    0xef30:0xa0b48428
  41c261:	das    
  41c262:	mov    dl,0x9d
  41c264:	jno    0x41c24c
  41c266:	(bad)  
  41c267:	rcr    DWORD PTR [esi],cl
  41c269:	dec    ebx
  41c26a:	test   DWORD PTR [esi],0x318b2cc3
  41c270:	xchg   esp,eax
  41c271:	dec    ecx
  41c272:	mov    eax,ds:0x8fa71fd7
  41c277:	push   eax
  41c278:	punpckhwd mm4,mm7
  41c27b:	enter  0x51a5,0xa9
  41c27f:	xchg   DWORD PTR [eax+0x52],ebx
  41c282:	sti    
  41c283:	jo     0x41c2d5
  41c285:	mov    eax,0xce3fa18
  41c28a:	les    ebx,FWORD PTR [edi+0x5]
  41c28d:	pop    eax
  41c28e:	out    0x60,al
  41c290:	repnz mov al,ds:0x881e2cdd
  41c296:	(bad)  
  41c297:	stc    
  41c298:	repz test al,0x82
  41c29b:	dec    edi
  41c29c:	mov    cl,0x6f
  41c29e:	push   0xffffffef
  41c2a0:	sub    ah,BYTE PTR [edi]
  41c2a2:	pushf  
  41c2a3:	jae    0x41c280
  41c2a5:	sbb    edx,DWORD PTR [edx-0x246962df]
  41c2ab:	and    al,0x9b
  41c2ad:	test   esi,ebp
  41c2af:	fwait
  41c2b0:	cmp    edx,DWORD PTR [edi]
  41c2b2:	mov    ebp,0x91eea69c
  41c2b7:	in     al,dx
  41c2b8:	pop    ecx
  41c2b9:	and    eax,0x7e00c47
  41c2be:	sbb    eax,0x11da3cea
  41c2c3:	push   cs
  41c2c4:	in     al,dx
  41c2c5:	loopne 0x41c305
  41c2c7:	or     DWORD PTR [edi+0x17],0x7a
  41c2cb:	add    al,0xf9
  41c2cd:	cdq    
  41c2ce:	cs xchg edx,eax
  41c2d0:	sti    
  41c2d1:	es dec ebp
  41c2d3:	ja     0x41c264
  41c2d5:	sub    BYTE PTR [esi],bl
  41c2d7:	inc    eax
  41c2d8:	(bad)  
  41c2db:	adc    al,0xa7
  41c2dd:	jg     0x41c2ec
  41c2df:	adc    BYTE PTR [ebp-0x41],bl
  41c2e2:	adc    al,0xd7
  41c2e4:	sub    ecx,DWORD PTR [edi]
  41c2e6:	push   0x2
  41c2e8:	(bad)  
  41c2e9:	ja     0x41c277
  41c2eb:	and    al,0xc7
  41c2ed:	imul   eax,DWORD PTR [eax],0xffffffe4
  41c2f0:	mov    eax,0xfd388549
  41c2f6:	adc    DWORD PTR [eax-0x1d4027fc],ebx
  41c2fc:	sub    al,0x2a
  41c2fe:	add    BYTE PTR [esi+0x1e],al
  41c301:	scas   eax,DWORD PTR es:[edi]
  41c302:	xor    BYTE PTR [ebx+0x4921055a],bl
  41c308:	repnz mov cl,0x89
  41c30b:	test   BYTE PTR [bp+0x3c68],ch
  41c310:	and    ch,BYTE PTR [ecx+0x7b]
  41c313:	rol    BYTE PTR [ecx-0x56],cl
  41c316:	(bad)  
  41c317:	xor    DWORD PTR fs:[ebx+edx*1-0x54],ebx
  41c31c:	push   0x471dbf14
  41c321:	jecxz  0x41c2a4
  41c323:	into   
  41c324:	stos   BYTE PTR es:[edi],al
  41c325:	rcl    BYTE PTR [ebx],1
  41c327:	in     al,0x99
  41c329:	jl     0x41c30b
  41c32b:	stos   DWORD PTR es:[edi],eax
  41c32c:	fcmovnbe st,st(7)
  41c32e:	inc    ebp
  41c32f:	outs   dx,BYTE PTR ds:[esi]
  41c330:	pop    edi
  41c331:	xor    ecx,DWORD PTR [ebx]
  41c333:	mov    ecx,0xb6154606
  41c338:	mov    BYTE PTR [ebx+0x8b12cf4],0x20
  41c33f:	pmullw mm1,QWORD PTR [ebx+0x69]
  41c343:	mov    eax,0xee11514c
  41c348:	test   eax,0x6b3e2f5e
  41c34d:	or     al,BYTE PTR [ebp+0x2797056]
  41c353:	fidivr DWORD PTR cs:[edi+0x4f0cfdbb]
  41c35a:	retf   
  41c35b:	ins    BYTE PTR es:[edi],dx
  41c35c:	mov    es,WORD PTR ds:0x3a43aa68
  41c362:	popa   
  41c363:	inc    esp
  41c364:	stc    
  41c365:	xchg   DWORD PTR [ecx+eiz*8-0x3432c3bf],ebp
  41c36c:	add    bh,BYTE PTR [ecx]
  41c36e:	retf   
  41c36f:	pushf  
  41c370:	retf   
  41c371:	mov    BYTE PTR [eax-0x3a],bh
  41c374:	add    BYTE PTR [ebx-0x79],dh
  41c377:	add    ecx,ecx
  41c379:	popf   
  41c37a:	ror    BYTE PTR [edx-0x18e2d18b],0xe2
  41c381:	and    esp,DWORD PTR [ebp+0x34f818ce]
  41c387:	xor    al,BYTE PTR [ebx]
  41c389:	call   0x4f288a77
  41c38e:	retf   0xebe6
  41c391:	(bad)  
  41c392:	fild   QWORD PTR [edx+0x2]
  41c395:	retf   0xd84b
  41c398:	xchg   ebp,eax
  41c399:	ja     0x41c3ef
  41c39b:	cmp    eax,0x774d5caa
  41c3a0:	sbb    eax,eax
  41c3a2:	jns    0x41c39e
  41c3a4:	xor    BYTE PTR [edi+0x42d1004b],cl
  41c3aa:	loope  0x41c37a
  41c3ac:	out    0x98,eax
  41c3ae:	dec    esi
  41c3af:	retf   
  41c3b0:	retf   0x9e68
  41c3b3:	and    bl,ah
  41c3b5:	and    eax,0x5c8c73db
  41c3ba:	dec    eax
  41c3bb:	jl     0x41c3d2
  41c3bd:	dec    ecx
  41c3be:	popa   
  41c3bf:	in     eax,dx
  41c3c0:	xor    BYTE PTR [edx+0x1967b905],ch
  41c3c6:	(bad)
  41c3c9:	mov    ebp,0x3f17d487
  41c3ce:	retf   0x9161
  41c3d1:	push   eax
  41c3d2:	popa   
  41c3d3:	xor    edx,DWORD PTR [edx]
  41c3d5:	pop    ss
  41c3d6:	sub    esp,DWORD PTR [ebx-0x27]
  41c3d9:	inc    esp
  41c3da:	mov    bl,0xcc
  41c3dc:	and    DWORD PTR ds:0x72134a1a,ebx
  41c3e2:	int    0x37
  41c3e4:	jge    0x41c3e5
  41c3e6:	leave  
  41c3e7:	xchg   ebx,eax
  41c3e8:	out    dx,eax
  41c3e9:	lods   al,BYTE PTR ds:[esi]
  41c3ea:	mov    edx,0x5dd504b7
  41c3ef:	ret    0x8f3a
  41c3f2:	pop    ebx
  41c3f3:	jne    0x41c433
  41c3f5:	cmp    ebp,ebp
  41c3f7:	sbb    edi,DWORD PTR [edx+0x66807048]
  41c3fd:	push   ebp
  41c3fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3ff:	cmp    dl,bl
  41c401:	inc    edi
  41c402:	jnp    0x41c456
  41c404:	aaa    
  41c405:	push   es
  41c406:	rcl    BYTE PTR [eax+0x12],0x6a
  41c40a:	adc    eax,0x6808bda7
  41c40f:	xchg   ebx,eax
  41c410:	add    dl,0xfa
  41c413:	and    al,0x45
  41c415:	mov    cl,0x88
  41c417:	div    bh
  41c419:	ja     0x41c3ed
  41c41b:	inc    eax
  41c41c:	popa   
  41c41d:	pushf  
  41c41e:	imul   ebp,DWORD PTR [edi],0xfffffffa
  41c421:	mov    ecx,0x23d863eb
  41c426:	test   esp,ebp
  41c428:	call   0x270:0x90a11ef4
  41c42f:	pop    es
  41c430:	pop    ebp
  41c431:	push   cs
  41c432:	repz mov eax,ds:0x5c9d7c5a
  41c438:	cmp    al,0x86
  41c43a:	pop    ds
  41c43b:	outs   dx,BYTE PTR ds:[esi]
  41c43c:	or     DWORD PTR [esi+ebp*4],edi
  41c43f:	call   0xd29364c5
  41c444:	xor    esi,DWORD PTR [edi-0x41e21cb]
  41c44a:	xchg   ecx,eax
  41c44b:	jno    0x41c4ca
  41c44d:	stc    
  41c44e:	lock dec ebx
  41c450:	cmp    BYTE PTR [ebx],0xb
  41c453:	sbb    BYTE PTR [esi],ah
  41c455:	adc    al,0x78
  41c457:	jmp    0x3e08:0xe6ed0c06
  41c45e:	cmp    ebx,DWORD PTR [esi]
  41c460:	dec    ecx
  41c461:	jmp    0x41c466
  41c463:	jmp    0x484c:0x2a0f3f49
  41c46a:	aaa    
  41c46b:	sbb    bl,BYTE PTR [ecx+0x235ab1b3]
  41c471:	add    BYTE PTR [edi+0x3a],0x28
  41c475:	cmp    edx,ebp
  41c477:	shr    dx,1
  41c47a:	in     eax,0x9d
  41c47c:	push   eax
  41c47d:	xchg   edx,eax
  41c47e:	(bad)  
  41c47f:	aam    0xcd
  41c481:	cmp    ebx,ebx
  41c483:	sti    
  41c484:	idiv   DWORD PTR [esi+0x2c]
  41c487:	cmc    
  41c488:	mov    ds:0x3a1b5e43,eax
  41c48d:	sbb    al,BYTE PTR [edx-0x5d]
  41c490:	js     0x41c505
  41c492:	test   al,0x13
  41c494:	cmp    cl,bh
  41c496:	adc    eax,0x8c7156a2
  41c49b:	mov    ebp,0x146e8079
  41c4a0:	xor    DWORD PTR [ecx],esp
  41c4a2:	and    cl,BYTE PTR [edx+0x6216f65c]
  41c4a8:	fyl2x  
  41c4aa:	push   es
  41c4ab:	mov    dh,0x3
  41c4ad:	retf   
  41c4ae:	mov    dh,0x50
  41c4b0:	ja     0x41c4ca
  41c4b2:	cwde   
  41c4b3:	mov    dl,0x3
  41c4b5:	scas   eax,DWORD PTR es:[edi]
  41c4b6:	ins    DWORD PTR es:[edi],dx
  41c4b7:	and    al,ah
  41c4b9:	aam    0xdf
  41c4bb:	ds popf 
  41c4bd:	ret    
  41c4be:	ins    BYTE PTR es:[edi],dx
  41c4bf:	xor    esi,DWORD PTR [edi+ecx*8]
  41c4c2:	cs out dx,eax
  41c4c4:	push   bp
  41c4c6:	mov    al,BYTE PTR [esi-0x34]
  41c4c9:	xchg   ebp,eax
  41c4ca:	sbb    eax,0xa64ce11
  41c4cf:	cs lahf 
  41c4d1:	xchg   esp,eax
  41c4d2:	aas    
  41c4d3:	loopne 0x41c54f
  41c4d5:	dec    ebx
  41c4d6:	stos   BYTE PTR es:[edi],al
  41c4d7:	std    
  41c4d8:	add    al,0x3
  41c4da:	lock fcom QWORD PTR [di]
  41c4de:	ja     0x41c4e2
  41c4e0:	lahf   
  41c4e1:	dec    ecx
  41c4e2:	jmp    0x4c88:0x4a78083a
  41c4e9:	and    DWORD PTR [esi-0x5c263a7e],ebx
  41c4ef:	repnz test BYTE PTR [eax],0x75
  41c4f3:	stos   BYTE PTR es:[edi],al
  41c4f4:	and    BYTE PTR [eax-0x451b4cb0],cl
  41c4fa:	cmp    eax,0xc17ab590
  41c4ff:	cmp    ecx,0x12
  41c502:	mov    al,0x9d
  41c504:	add    bh,dl
  41c506:	dec    ebx
  41c507:	mov    eax,ds:0xe577c4b8
  41c50c:	aad    0x25
  41c50e:	scas   al,BYTE PTR es:[edi]
  41c50f:	lods   eax,DWORD PTR ds:[esi]
  41c510:	push   ebp
  41c511:	cmp    eax,0xaca7ea6c
  41c516:	xchg   ebp,eax
  41c517:	lds    esi,FWORD PTR [ebx-0x67188061]
  41c51d:	sub    al,0x62
  41c51f:	lds    edi,FWORD PTR [esi+0x71]
  41c522:	xor    BYTE PTR [ebx],dl
  41c524:	add    al,0xb0
  41c526:	add    ch,BYTE PTR [eax+0x44]
  41c529:	stos   BYTE PTR es:[edi],al
  41c52a:	pop    edx
  41c52b:	cdq    
  41c52c:	repz mov eax,DWORD PTR [edx]
  41c52f:	cmp    ch,BYTE PTR [ecx]
  41c531:	test   al,0x59
  41c533:	bound  eax,QWORD PTR [edx]
  41c535:	lods   ax,WORD PTR ds:[esi]
  41c538:	sub    al,0x63
  41c53a:	dec    esi
  41c53b:	dec    edx
  41c53c:	scas   eax,DWORD PTR es:[edi]
  41c53d:	sahf   
  41c53e:	ss pop esi
  41c540:	test   DWORD PTR [eax+0x34a22657],ecx
  41c546:	jo     0x41c57b
  41c548:	sub    dl,bh
  41c54a:	ja     0x41c5c6
  41c54c:	bound  esi,QWORD PTR [edi+0x4ac5c367]
  41c552:	fisubr WORD PTR [eax]
  41c554:	pop    edx
  41c555:	mov    al,0xda
  41c557:	shl    ch,cl
  41c559:	inc    edi
  41c55a:	pop    ebx
  41c55b:	cwde   
  41c55c:	jmp    0x41c59d
  41c55e:	leave  
  41c55f:	outs   dx,BYTE PTR ds:[esi]
  41c560:	pusha  
  41c561:	adc    ebx,DWORD PTR fs:[edi]
  41c564:	pop    ebp
  41c565:	retf   0xc214
  41c568:	pop    eax
  41c569:	(bad)  
  41c56a:	inc    DWORD PTR [edx-0x2f1d122a]
  41c570:	lea    esp,[edi+0x4f]
  41c573:	cmc    
  41c574:	xor    al,0x52
  41c576:	out    dx,al
  41c577:	jmp    0xc9b3:0xae68c7fb
  41c57e:	mov    al,0x7f
  41c580:	sbb    BYTE PTR [edx-0x2b],ah
  41c583:	cs mov esi,0x4d36cdfe
  41c589:	cmp    DWORD PTR [esi+edi*2-0x6677cf33],0x47fb519d
  41c594:	xor    DWORD PTR [edi-0x4c33a0f4],0x4c
  41c59b:	push   es
  41c59c:	mov    edx,eax
  41c59e:	sbb    edx,esp
  41c5a0:	sti    
  41c5a1:	lock push ds
  41c5a3:	int    0xaf
  41c5a5:	pop    edx
  41c5a6:	lds    ebp,FWORD PTR [edx]
  41c5a8:	in     al,0xdd
  41c5aa:	adc    dl,BYTE PTR [edx+0x24]
  41c5ad:	fdivr  st,st(2)
  41c5af:	pop    esp
  41c5b0:	test   al,0xfd
  41c5b2:	fwait
  41c5b3:	pop    edx
  41c5b4:	mov    bl,BYTE PTR [esi-0xa]
  41c5b7:	push   ss
  41c5b8:	pop    eax
  41c5b9:	popa   
  41c5ba:	out    0xa8,eax
  41c5bc:	xchg   esp,eax
  41c5bd:	js     0x41c59e
  41c5bf:	pushf  
  41c5c0:	aas    
  41c5c1:	sbb    ah,BYTE PTR fs:[ebx]
  41c5c4:	push   ecx
  41c5c5:	shl    BYTE PTR [ecx+0x2e8a6487],cl
  41c5cb:	dec    ecx
  41c5cc:	xchg   DWORD PTR [edi],edi
  41c5ce:	ins    BYTE PTR es:[edi],dx
  41c5cf:	mov    eax,ds:0x934e889a
  41c5d4:	add    cl,BYTE PTR [eax-0x6d]
  41c5d7:	dec    ebp
  41c5d8:	hlt    
  41c5d9:	out    dx,al
  41c5da:	out    0x67,eax
  41c5dc:	leave  
  41c5dd:	jg     0x41c634
  41c5df:	xchg   esi,eax
  41c5e0:	xchg   ebx,eax
  41c5e1:	ja     0x41c5ea
  41c5e3:	pop    ebp
  41c5e4:	inc    esp
  41c5e5:	js     0x41c61f
  41c5e7:	inc    eax
  41c5e8:	jecxz  0x41c573
  41c5ea:	sub    al,BYTE PTR [eax]
  41c5ec:	add    dh,dh
  41c5ee:	inc    BYTE PTR [esi+ebp*1-0x4a]
  41c5f2:	iret   
  41c5f3:	lods   al,BYTE PTR ds:[esi]
  41c5f4:	add    DWORD PTR [edx+0x38],0x6b31d3fc
  41c5fb:	sbb    eax,0x2de2d805
  41c600:	pop    ss
  41c601:	dec    eax
  41c602:	dec    ecx
  41c603:	and    eax,0x636b3e26
  41c608:	lods   eax,DWORD PTR ds:[esi]
  41c609:	pop    ebx
  41c60a:	pop    ds
  41c60b:	repnz mov edi,0x1c2cc14d
  41c611:	and    al,0x18
  41c613:	lods   al,BYTE PTR ds:[esi]
  41c614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c615:	mov    dh,0xbb
  41c618:	push   ecx
  41c619:	xchg   esi,eax
  41c61a:	mov    ds:0xe44ea23a,al
  41c61f:	push   ecx
  41c620:	or     al,0xe9
  41c622:	int    0xbd
  41c624:	add    al,0xdb
  41c626:	inc    esp
  41c627:	popf   
  41c628:	retf   0xd950
  41c62b:	mov    ecx,0xb3b46466
  41c630:	pop    edi
  41c631:	or     BYTE PTR [ebx-0x7bfde048],0xf4
  41c638:	dec    esi
  41c639:	pop    ss
  41c63a:	push   ds
  41c63b:	xor    BYTE PTR [esi],bh
  41c63d:	mov    edx,DWORD PTR [edi+0x0]
  41c640:	test   eax,0xa476eb51
  41c645:	dec    edx
  41c646:	sub    ecx,ebp
  41c648:	idiv   edx
  41c64a:	dec    esi
  41c64b:	cmc    
  41c64c:	inc    esi
  41c64d:	and    DWORD PTR [eax+0x49],edx
  41c650:	mov    eax,DWORD PTR [edi-0x90e221c]
  41c656:	cwde   
  41c657:	mov    al,0xfa
  41c659:	aad    0x6
  41c65b:	push   ss
  41c65c:	dec    ebp
  41c65d:	fcomp  DWORD PTR [edx-0x1b53f96f]
  41c663:	and    ebp,eax
  41c665:	aad    0xab
  41c667:	(bad)  
  41c668:	fwait
  41c669:	or     DWORD PTR [edx-0x296077de],ecx
  41c66f:	fwait
  41c670:	mov    DWORD PTR [edi],edx
  41c672:	mov    ebx,0x15cccd4d
  41c677:	sbb    BYTE PTR [ebp-0x68bff949],bh
  41c67d:	xchg   BYTE PTR [edx+ecx*2-0x4a9373a0],cl
  41c684:	and    ch,bh
  41c686:	clc    
  41c687:	sub    DWORD PTR [ecx+eiz*4-0x55d4f73e],esi
  41c68e:	and    al,BYTE PTR [ebp-0x7f]
  41c691:	ficomp DWORD PTR [esi-0x2e28a6d6]
  41c697:	cmp    eax,0x661f14de
  41c69c:	idiv   BYTE PTR [ebx]
  41c69e:	push   0x15
  41c6a0:	xor    esi,ecx
  41c6a2:	rol    ebx,1
  41c6a4:	inc    esi
  41c6a5:	shl    DWORD PTR [ebx-0x8189771],cl
  41c6ab:	mov    dl,0x18
  41c6ad:	jnp    0x41c689
  41c6af:	in     eax,dx
  41c6b0:	addr16 and al,0x9c
  41c6b3:	pop    esp
  41c6b4:	adc    bl,BYTE PTR [bp+si-0xb7c]
  41c6b9:	dec    edx
  41c6ba:	or     al,al
  41c6bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6bd:	mov    cl,0x4c
  41c6bf:	pop    edx
  41c6c0:	mov    eax,ds:0x6ec59146
  41c6c5:	aam    0x83
  41c6c7:	pushf  
  41c6c8:	and    dl,BYTE PTR [esi+0x166eee65]
  41c6ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6cf:	dec    ebx
  41c6d0:	mov    cl,0x7a
  41c6d2:	push   es
  41c6d3:	loopne 0x41c6db
  41c6d5:	dec    ecx
  41c6d6:	pop    ecx
  41c6d7:	ror    BYTE PTR [edi-0x22],0xd1
  41c6db:	stos   DWORD PTR es:[edi],eax
  41c6dc:	pop    edx
  41c6dd:	push   eax
  41c6de:	out    dx,eax
  41c6df:	jo     0x41c70a
  41c6e1:	pop    ebp
  41c6e2:	into   
  41c6e3:	adc    al,0xf9
  41c6e5:	js     0x41c689
  41c6e7:	(bad)  
  41c6e8:	in     al,dx
  41c6e9:	adc    ebx,ebx
  41c6eb:	xor    DWORD PTR [eax+edi*8+0x68],ecx
  41c6ef:	and    ch,BYTE PTR [edx]
  41c6f1:	imul   ebp,ebx,0x79e25649
  41c6f7:	adc    BYTE PTR gs:[ecx-0x6d],bh
  41c6fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6fc:	adc    BYTE PTR [ebx-0x32],cl
  41c6ff:	jbe    0x41c763
  41c701:	mov    ch,0x27
  41c703:	mov    gs,WORD PTR [eax]
  41c705:	fldenv [eax+0x43a9b432]
  41c70b:	test   eax,ebx
  41c70d:	test   eax,0xd18b4f13
  41c712:	mov    bl,0xbb
  41c714:	adc    al,0x75
  41c716:	cdq    
  41c717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c718:	fidiv  DWORD PTR [edx-0x4f16c298]
  41c71e:	and    cl,cl
  41c720:	adc    dh,BYTE PTR [ecx+0x276a013e]
  41c726:	cmp    DWORD PTR [edx],edi
  41c728:	add    al,0xbd
  41c72a:	ret    
  41c72b:	gs and al,cl
  41c72e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c72f:	repnz and DWORD PTR [ecx+0x63d40887],esi
  41c736:	ret    0x92de
  41c739:	xchg   ebx,eax
  41c73a:	or     BYTE PTR [ebp-0xc],cl
  41c73d:	push   0xda2169cd
  41c742:	shr    ecx,cl
  41c744:	out    dx,eax
  41c745:	retf   0x81e4
  41c748:	push   es
  41c749:	scas   eax,DWORD PTR es:[edi]
  41c74a:	add    BYTE PTR [ecx+0x30],ah
  41c74d:	fimul  DWORD PTR [eax]
  41c74f:	add    eax,0x7ebd4ed
  41c754:	pop    esp
  41c755:	sub    al,0x24
  41c757:	sbb    DWORD PTR [esi+0x38],0xabb58251
  41c75e:	push   cs
  41c75f:	xor    dh,BYTE PTR [edx+0x10]
  41c762:	cmp    bl,BYTE PTR [eax-0x56]
  41c765:	out    dx,al
  41c766:	in     eax,0x22
  41c768:	imul   eax,eax,0x1234ec18
  41c76e:	inc    ecx
  41c76f:	jmp    0x41c7d6
  41c771:	popa   
  41c772:	mov    ch,0x63
  41c774:	jp     0x41c74a
  41c776:	push   ebp
  41c777:	int    0x8e
  41c779:	lock add BYTE PTR [eax],al
	...
  41c948:	add    BYTE PTR [eax],al
  41c94a:	adc    eax,0x773f6240
  41c94f:	aas    
  41c950:	pop    ebp
  41c951:	push   0xffffff86
  41c953:	jb     0x41c9b7
  41c955:	stc    
  41c956:	mov    ah,0x68
  41c958:	adc    BYTE PTR [edx+esi*1+0x2500018d],al
  41c95f:	pop    es
  41c960:	add    BYTE PTR [eax],al
  41c962:	sbb    ecx,edx
  41c964:	ret    0xfa46
  41c967:	xor    DWORD PTR [edx],ebx
  41c969:	push   ebx
  41c96a:	scas   al,BYTE PTR es:[edi]
  41c96b:	mov    WORD PTR [ebx],?
  41c96d:	mov    cs,WORD PTR ds:0xddd183aa
  41c973:	mov    DWORD PTR [eax+edx*4],esp
  41c976:	dec    eax
  41c977:	push   ecx
  41c978:	mov    esi,0x37f264db
  41c97d:	xor    dh,BYTE PTR [eax]
  41c97f:	pop    ds
  41c980:	aad    0xef
  41c982:	xchg   DWORD PTR [edx],esp
  41c984:	ins    BYTE PTR es:[edi],dx
  41c985:	(bad)  
  41c987:	dec    edi
  41c988:	scas   eax,DWORD PTR es:[edi]
  41c989:	mov    edi,esp
  41c98b:	jo     0x41ca01
  41c98d:	inc    edi
  41c98e:	inc    ebp
  41c98f:	out    0x9a,eax
  41c991:	jno    0x41c9bc
  41c993:	mov    esp,0x36de7ee4
  41c998:	addr16 pop esi
  41c99a:	jnp    0x41c9d6
  41c99c:	fnsave [ecx]
  41c99e:	and    ecx,DWORD PTR ss:[esi]
  41c9a1:	inc    BYTE PTR [eax]
  41c9a3:	cld    
  41c9a4:	loopne 0x41c970
  41c9a6:	fidivr WORD PTR [ecx-0x696e808d]
  41c9ac:	mov    dl,0x74
  41c9ae:	lods   al,BYTE PTR ds:[esi]
  41c9af:	sbb    esp,DWORD PTR [edx+0x1722ee42]
  41c9b5:	iret   
  41c9b6:	sbb    al,0xd7
  41c9b8:	pop    eax
  41c9b9:	push   esp
  41c9ba:	fld    TBYTE PTR [edx-0x7f20c2b2]
  41c9c0:	loopne 0x41ca15
  41c9c2:	call   0x91d3:0xed35133c
  41c9c9:	sbb    al,0xe9
  41c9cb:	loope  0x41ca02
  41c9cd:	(bad)  
  41c9cf:	xlat   BYTE PTR ds:[ebx]
  41c9d0:	jb     0x41ca27
  41c9d2:	and    eax,DWORD PTR [ebx+0x346dc3be]
  41c9d8:	sahf   
  41c9d9:	loope  0x41c9cb
  41c9db:	into   
  41c9dc:	std    
  41c9dd:	or     BYTE PTR [ebx-0x2e],al
  41c9e0:	jg     0x41c981
  41c9e2:	sahf   
  41c9e3:	repz retf 
  41c9e5:	rcr    DWORD PTR [edi-0x5a1bcc70],1
  41c9eb:	nop
  41c9ec:	arpl   cx,di
  41c9ee:	fs push eax
  41c9f0:	shr    BYTE PTR [edx-0x2d],0xb8
  41c9f4:	in     al,dx
  41c9f5:	pop    edi
  41c9f6:	arpl   WORD PTR [edi-0x6f],cx
  41c9f9:	dec    ebp
  41c9fa:	(bad)  [ebx-0x115f0436]
  41ca00:	jmp    0xfd9ded56
  41ca05:	fld    QWORD PTR [edi]
  41ca07:	cmp    al,0x60
  41ca09:	jl     0x41ca19
  41ca0b:	test   al,0xdb
  41ca0d:	shl    DWORD PTR [ecx+0x43],1
  41ca10:	retf   0xec38
  41ca13:	loope  0x41c999
  41ca15:	cli    
  41ca16:	sbb    ah,BYTE PTR [ecx+0x4d]
  41ca19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca1a:	lds    edi,FWORD PTR [ecx-0x3a]
  41ca1d:	cmp    edi,DWORD PTR [ebx]
  41ca1f:	mov    eax,0x24c6e793
  41ca24:	test   DWORD PTR [edi+0x77],ebx
  41ca27:	pop    edi
  41ca28:	sbb    esp,edi
  41ca2a:	or     BYTE PTR [ebx+0x69ec30b9],bl
  41ca30:	push   ecx
  41ca31:	xor    edx,DWORD PTR [ebx+0x72]
  41ca34:	cmp    ah,ah
  41ca36:	jmp    0xd255:0xb559522f
  41ca3d:	aas    
  41ca3e:	adc    eax,0x711e1ac8
  41ca43:	adc    BYTE PTR ds:0x6323f59,0xca
  41ca4a:	push   eax
  41ca4b:	or     al,0x13
  41ca4d:	ins    BYTE PTR es:[edi],dx
  41ca4e:	or     eax,0x6f429e97
  41ca53:	aas    
  41ca54:	jb     0x41ca16
  41ca56:	dec    esp
  41ca57:	stos   DWORD PTR es:[edi],eax
  41ca58:	adc    ecx,edx
  41ca5a:	je     0x41c9e5
  41ca5c:	jne    0x41c9f1
  41ca5e:	mov    ah,0xa7
  41ca60:	xchg   esp,eax
  41ca61:	jecxz  0x41ca89
  41ca63:	xchg   esp,eax
  41ca64:	pop    esi
  41ca65:	ja     0x41c9f1
  41ca67:	and    ch,BYTE PTR [ebx]
  41ca69:	dec    edx
  41ca6a:	rcl    BYTE PTR [ebp-0x7a36a1e8],0x5
  41ca71:	neg    BYTE PTR [ecx]
  41ca73:	or     al,0xca
  41ca75:	push   0x1b5086ee
  41ca7a:	mov    al,ds:0xa0546a61
  41ca7f:	mov    al,0x26
  41ca81:	dec    ebx
  41ca82:	aaa    
  41ca83:	sbb    eax,0xac2e293b
  41ca88:	xor    DWORD PTR [ebx],0x22
  41ca8b:	mov    ebx,0xe4c98bb2
  41ca90:	cmp    al,0x65
  41ca92:	(bad)  
  41ca93:	fadd   st(1),st
  41ca95:	mov    esp,0x43dda36c
  41ca9a:	sbb    ah,BYTE PTR [esp+ebx*8+0xadbd10d]
  41caa1:	mov    eax,ss:0x2366da37
  41caa7:	xor    dh,ch
  41caa9:	nop
  41caaa:	fadd   QWORD PTR [ebp+0x31]
  41caad:	mov    BYTE PTR [edx],bh
  41caaf:	ret    0xfec8
  41cab2:	(bad)  [eax-0x3a]
  41cab5:	test   BYTE PTR ds:0x5081280c,0xbf
  41cabc:	retf   0xc4d0
  41cabf:	add    ebp,DWORD PTR [ebx]
  41cac1:	jg     0x41ca5d
  41cac3:	dec    esi
  41cac4:	sub    bh,BYTE PTR [ecx+0x3f]
  41cac7:	jne    0x41caa1
  41cac9:	add    eax,0x3c024a82
  41cace:	pop    ds
  41cacf:	popa   
  41cad0:	pop    ecx
  41cad1:	push   ebx
  41cad2:	sbb    BYTE PTR [esp+esi*8-0x211e342e],al
  41cad9:	pop    ss
  41cada:	sbb    BYTE PTR ss:[ecx+0x4afb4377],al
  41cae1:	shl    BYTE PTR [edx],0x4f
  41cae4:	push   edi
  41cae5:	aaa    
  41cae6:	add    ebx,DWORD PTR [ecx+0x1833aeb]
  41caec:	jno    0x41caaf
  41caee:	je     0x41cac6
  41caf0:	aaa    
  41caf1:	(bad)  
  41caf2:	pop    ecx
  41caf3:	scas   eax,DWORD PTR es:[edi]
  41caf4:	loope  0x41cad5
  41caf6:	and    al,0xcc
  41caf8:	pop    ds
  41caf9:	nop
  41cafa:	pop    ss
  41cafb:	into   
  41cafc:	inc    edi
  41cafd:	push   0xffffff8a
  41caff:	shl    DWORD PTR [edi-0x6f],cl
  41cb02:	dec    eax
  41cb03:	out    dx,al
  41cb04:	out    0x8e,al
  41cb06:	cmp    ebx,esi
  41cb08:	retf   
  41cb09:	cmp    al,0x4e
  41cb0b:	fist   WORD PTR [ecx]
  41cb0d:	cld    
  41cb0e:	cmp    edi,edi
  41cb10:	push   edx
  41cb11:	jb     0x41cb4b
  41cb13:	popf   
  41cb14:	sub    BYTE PTR [edi-0x6e5aba29],bh
  41cb1a:	or     bh,dh
  41cb1c:	int3   
  41cb1d:	(bad)  
  41cb1e:	out    0x8b,eax
  41cb20:	dec    edi
  41cb21:	ds loope 0x41caed
  41cb24:	fs or  eax,0x3c0e38d1
  41cb2a:	push   ebx
  41cb2b:	lds    edx,FWORD PTR [eax+0x1942ba4c]
  41cb31:	jno    0x41cbb1
  41cb33:	mov    ds:0xe073e62b,al
  41cb38:	or     BYTE PTR [edi+0x75e285bf],bl
  41cb3e:	pushf  
  41cb3f:	xor    BYTE PTR [ecx+0x55],dh
  41cb42:	cmp    ebx,DWORD PTR [ecx+ebp*1]
  41cb45:	sbb    ecx,DWORD PTR [esi]
  41cb47:	loope  0x41caf9
  41cb49:	push   cs
  41cb4a:	mov    al,ds:0x7aa59be4
  41cb4f:	sbb    edx,DWORD PTR ds:0x2e4b0fee
  41cb55:	test   al,0xad
  41cb57:	aad    0x48
  41cb59:	fisub  DWORD PTR ds:0x49336cbb
  41cb5f:	lods   eax,DWORD PTR ds:[esi]
  41cb60:	scas   al,BYTE PTR es:[edi]
  41cb61:	setle  bh
  41cb64:	dec    ecx
  41cb65:	add    al,0xd3
  41cb67:	stc    
  41cb68:	loop   0x41cb69
  41cb6a:	sbb    al,bl
  41cb6c:	push   esp
  41cb6d:	lea    ecx,[eax+0x7e]
  41cb70:	stc    
  41cb71:	sbb    al,0x94
  41cb73:	popf   
  41cb74:	cmp    BYTE PTR [ecx-0x68],bl
  41cb77:	sub    al,0x4
  41cb79:	xchg   BYTE PTR [ecx+0xb0e3493],dl
  41cb7f:	inc    esi
  41cb80:	out    0x94,eax
  41cb82:	xor    al,0x6d
  41cb84:	jno    0x41cb7c
  41cb86:	add    bh,bh
  41cb88:	ja     0x41cba6
  41cb8a:	xchg   BYTE PTR [edi+0x37],al
  41cb8d:	je     0x41cb6f
  41cb8f:	popf   
  41cb90:	push   edi
  41cb91:	ins    BYTE PTR es:[edi],dx
  41cb92:	sbb    BYTE PTR [edi],dh
  41cb94:	pushf  
  41cb95:	scas   eax,DWORD PTR es:[edi]
  41cb96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb98:	in     eax,dx
  41cb99:	adc    ah,BYTE PTR [eax+0x27]
  41cb9c:	dec    esp
  41cb9d:	mov    ah,0xa2
  41cb9f:	adc    DWORD PTR [edi+0xa3ac8d9],esi
  41cba5:	sbb    DWORD PTR [esi-0x46],ebx
  41cba8:	or     DWORD PTR [edi],0xd96c6a49
  41cbae:	jb     0x41cb5d
  41cbb0:	sahf   
  41cbb1:	xlat   BYTE PTR ds:[ebx]
  41cbb2:	add    eax,0xf645f25
  41cbb7:	(bad)  
  41cbb9:	mov    bl,0x14
  41cbbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbbc:	mov    al,ds:0x913738bf
  41cbc1:	adc    eax,0x76e44d0e
  41cbc6:	lds    ebp,FWORD PTR [ebx]
  41cbc8:	mov    WORD PTR [edx],es
  41cbca:	sub    DWORD PTR [ebx-0x4c0cdb4b],0x31c86e4c
  41cbd4:	sbb    bh,BYTE PTR [edx+0x138a1e79]
  41cbda:	call   FWORD PTR [edx-0x4c22f158]
  41cbe0:	jmp    0x41cba1
  41cbe2:	(bad)  
  41cbe3:	pop    ecx
  41cbe4:	xchg   BYTE PTR [esi+0x2ef1668c],ah
  41cbea:	outs   dx,BYTE PTR ds:[esi]
  41cbeb:	jno    0x41cb74
  41cbed:	jae    0x41cba3
  41cbef:	inc    ebp
  41cbf0:	pop    edx
  41cbf1:	mov    DWORD PTR [ecx-0x7c1d1353],eax
  41cbf7:	sub    edx,DWORD PTR [ecx-0x4eae4d5b]
  41cbfd:	mov    esp,0x34465227
  41cc02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc03:	mov    cl,BYTE PTR [edx-0xd]
  41cc06:	xor    bh,bh
  41cc08:	imul   ebx,ebx,0xffffffc9
  41cc0b:	ins    DWORD PTR es:[edi],dx
  41cc0c:	jb     0x41cbd0
  41cc0e:	test   bh,bh
  41cc10:	outs   dx,BYTE PTR ds:[esi]
  41cc11:	jl     0x41cbd4
  41cc13:	adc    cl,ah
  41cc15:	pusha  
  41cc16:	inc    edx
  41cc17:	mov    cl,0xf5
  41cc19:	xchg   ebx,eax
  41cc1a:	sti    
  41cc1b:	call   0x3fc2:0xfff966d4
  41cc22:	and    eax,0x947361f3
  41cc27:	push   ds
  41cc28:	and    al,0x93
  41cc2a:	pop    es
  41cc2b:	jg     0x41cc1e
  41cc2d:	xor    DWORD PTR [edi],edi
  41cc2f:	xchg   edx,eax
  41cc30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc31:	add    al,0x62
  41cc33:	xor    cl,BYTE PTR [edx-0x4a69b874]
  41cc39:	sub    eax,0x72407f96
  41cc3e:	in     eax,dx
  41cc3f:	fimul  DWORD PTR [ebx+0x3a]
  41cc42:	pop    esp
  41cc43:	loopne 0x41cc02
  41cc45:	sbb    al,0x20
  41cc47:	add    ah,BYTE PTR [ebx+0x69585afe]
  41cc4d:	ret    
  41cc4e:	data16 loop 0x41cc27
  41cc51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc52:	rcr    DWORD PTR [eax-0x29],0xe8
  41cc56:	int3   
  41cc57:	dec    ebx
  41cc58:	and    DWORD PTR [esi-0x4c],esi
  41cc5b:	fcomip st,st(1)
  41cc5d:	pop    esp
  41cc5e:	popa   
  41cc5f:	scas   eax,DWORD PTR es:[edi]
  41cc60:	pusha  
  41cc61:	add    edi,ebx
  41cc63:	pop    edx
  41cc64:	push   cs
  41cc65:	cmc    
  41cc66:	jle    0x41cc3d
  41cc68:	in     eax,0xce
  41cc6a:	retf   0x1588
  41cc6d:	inc    edi
  41cc6e:	xchg   edi,eax
  41cc6f:	cmp    ebp,esp
  41cc71:	pop    ds
  41cc72:	enter  0x7ca0,0xf3
  41cc76:	sar    ah,0x42
  41cc79:	lahf   
  41cc7a:	dec    esp
  41cc7b:	jbe    0x41cc5d
  41cc7d:	sar    bl,1
  41cc7f:	inc    edx
  41cc80:	push   ds
  41cc81:	sbb    BYTE PTR [ebx+0x29],ah
  41cc84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc85:	lea    ecx,[edx+0x72]
  41cc88:	(bad)  
  41cc89:	xchg   ebp,eax
  41cc8a:	das    
  41cc8b:	cld    
  41cc8c:	pop    edi
  41cc8d:	out    dx,eax
  41cc8e:	jmp    0xff7f5e07
  41cc93:	sbb    al,0xec
  41cc95:	cmp    ah,ch
  41cc97:	xchg   ecx,eax
  41cc98:	inc    ebx
  41cc99:	mov    al,BYTE PTR ds:0x3b6078c2
  41cc9f:	mov    cl,0x78
  41cca1:	daa    
  41cca2:	jl     0x41cc65
  41cca4:	jle    0x41ccaa
  41cca6:	fimul  DWORD PTR [edx]
  41cca8:	mov    edi,0x975aa616
  41ccad:	imul   esi,edx,0x42
  41ccb0:	repnz aaa 
  41ccb2:	jns    0x41cc91
  41ccb4:	shr    esp,cl
  41ccb6:	out    0x69,al
  41ccb8:	clc    
  41ccb9:	push   0xe198d241
  41ccbe:	cmp    al,0xb1
  41ccc0:	add    esi,DWORD PTR [ecx+edi*1+0x4b]
  41ccc4:	push   ecx
  41ccc5:	add    al,0x7b
  41ccc7:	sub    edx,DWORD PTR [esi+0x202413cd]
  41cccd:	push   0xc6691e76
  41ccd2:	leave  
  41ccd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccd4:	mov    esp,0xb8b26e04
  41ccd9:	cmp    dl,BYTE PTR [edx]
  41ccdb:	push   ds
  41ccdc:	mov    ah,BYTE PTR [ebp-0x18acfada]
  41cce2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cce3:	ror    BYTE PTR [ecx-0x4a98f357],0x92
  41ccea:	je     0x41cd1d
  41ccec:	arpl   dx,dx
  41ccee:	mov    bl,0x8c
  41ccf0:	xchg   ebp,eax
  41ccf1:	cmp    BYTE PTR [edi+0x1247e809],0x78
  41ccf8:	inc    ebx
  41ccf9:	mov    eax,DWORD PTR [ecx-0x4a75b571]
  41ccff:	aaa    
  41cd00:	out    0xfd,eax
  41cd02:	aad    0x9d
  41cd04:	ficom  DWORD PTR [edi-0x35]
  41cd07:	lock pushf 
  41cd09:	sti    
  41cd0a:	mul    BYTE PTR [edx+0x31]
  41cd0d:	sahf   
  41cd0e:	push   0xffffff81
  41cd10:	fidivr WORD PTR [ebx-0x22]
  41cd13:	enter  0x5ecb,0xa
  41cd17:	nop
  41cd18:	cld    
  41cd19:	xchg   edx,eax
  41cd1a:	sub    ebx,edx
  41cd1c:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd1e:	dec    edi
  41cd1f:	cdq    
  41cd20:	inc    eax
  41cd22:	mov    esi,0x50603081
  41cd27:	icebp  
  41cd28:	dec    DWORD PTR [edx+0x8]
  41cd2b:	cmc    
  41cd2c:	inc    ecx
  41cd2d:	sbb    DWORD PTR [ecx-0x54],edi
  41cd30:	loopne 0x41ccb7
  41cd32:	sar    DWORD PTR [edx*8+0x21824f5a],0x96
  41cd3a:	mov    cl,0x75
  41cd3c:	mov    bl,0x99
  41cd3e:	int3   
  41cd3f:	pop    edx
  41cd40:	pop    ebx
  41cd41:	je     0x41cdaa
  41cd43:	sar    esi,1
  41cd45:	mov    ebp,0x2a117393
  41cd4a:	jl     0xa4e3f19a
  41cd50:	(bad)  
  41cd52:	cdq    
  41cd53:	xchg   ecx,eax
  41cd54:	dec    ecx
  41cd55:	inc    ebp
  41cd56:	in     al,0x87
  41cd58:	xor    eax,esp
  41cd5a:	stc    
  41cd5b:	mov    esi,ecx
  41cd5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd5e:	xor    ebp,ecx
  41cd60:	mov    esp,0xbd9ce43
  41cd65:	sahf   
  41cd66:	mov    cl,0x3a
  41cd68:	xchg   ebp,eax
  41cd69:	jns    0x41cd99
  41cd6b:	ret    
  41cd6c:	and    BYTE PTR [ecx-0x38a50148],ah
  41cd72:	xchg   ecx,eax
  41cd73:	jae    0x41cd1e
  41cd75:	xor    DWORD PTR [esi+edx*8+0x5e],edi
  41cd79:	rcl    DWORD PTR [ebx-0x21],cl
  41cd7c:	push   edx
  41cd7d:	sbb    eax,0x9dc1a301
  41cd82:	ret    
  41cd83:	ja     0x41cdcf
  41cd85:	push   edi
  41cd86:	rcr    DWORD PTR [eax+ecx*1],1
  41cd89:	add    ah,BYTE PTR [edx+0xbe7bdfd]
  41cd8f:	bound  esp,QWORD PTR [ebx-0x54beecf1]
  41cd95:	xor    eax,0x5b540fa6
  41cd9a:	jge    0x41cdbb
  41cd9c:	pop    esp
  41cd9d:	jmp    0x41cdbd
  41cd9f:	cld    
  41cda0:	mov    esi,0x2e1c2b4b
  41cda5:	arpl   WORD PTR [ecx-0x5e],bx
  41cda8:	xchg   edi,eax
  41cda9:	call   0x618a123e
  41cdae:	sbb    ah,BYTE PTR [esi+0x6]
  41cdb1:	mov    ds:0x150abe8e,al
  41cdb6:	push   ecx
  41cdb7:	adc    BYTE PTR [ebp-0x50],dl
  41cdba:	pop    eax
  41cdbb:	push   edx
  41cdbc:	sbb    cl,ah
  41cdbe:	imul   ecx,DWORD PTR [edi],0xffffff82
  41cdc1:	repnz sbb al,0x1d
  41cdc4:	add    al,0x0
  41cdc6:	es std 
  41cdc8:	ret    0x6975
  41cdcb:	or     ebp,ebx
  41cdcd:	fdiv   st(7),st
  41cdcf:	scas   eax,DWORD PTR es:[edi]
  41cdd0:	adc    eax,0xff4d7491
  41cdd5:	push   esi
  41cdd6:	jg     0x41ce54
  41cdd8:	sbb    cl,BYTE PTR [ebp+0x45]
  41cddb:	aam    0x76
  41cddd:	fadd   DWORD PTR [edx+0x517c581a]
  41cde3:	and    ah,BYTE PTR [edi+0x3e18e5c7]
  41cde9:	fadd   st,st(2)
  41cdeb:	inc    edi
  41cdec:	aam    0x86
  41cdee:	ss out dx,eax
  41cdf0:	adc    eax,esp
  41cdf2:	ds mov bl,0xe3
  41cdf5:	xor    al,0x33
  41cdf7:	dec    edx
  41cdf8:	jge    0x41ce20
  41cdfa:	inc    ebx
  41cdfb:	lds    edi,FWORD PTR [edi+ebx*1-0x50aa8063]
  41ce02:	sbb    cl,BYTE PTR [edi]
  41ce04:	mov    es,WORD PTR [edi]
  41ce06:	xor    dl,BYTE PTR [edx+0x9064ed6]
  41ce0c:	out    0x6b,eax
  41ce0e:	adc    esi,0x45918c5e
  41ce14:	mov    ebp,DWORD PTR [eax+ecx*1+0x45]
  41ce18:	adc    al,0xbe
  41ce1a:	sahf   
  41ce1b:	test   BYTE PTR [esi+0x67],bh
  41ce1e:	push   ecx
  41ce1f:	inc    esp
  41ce20:	add    DWORD PTR [edx],ebx
  41ce22:	push   0x52dce8b
  41ce27:	js     0x41ce23
  41ce29:	out    0xb0,al
  41ce2b:	push   ss
  41ce2c:	cmp    BYTE PTR [ebx],0x84
  41ce2f:	cwde   
  41ce30:	stc    
  41ce31:	retf   0x1602
  41ce34:	pop    edx
  41ce35:	(bad)  
  41ce37:	bound  esp,QWORD PTR [ecx]
  41ce39:	push   es
  41ce3a:	mov    BYTE PTR [ebx+0x34],bh
  41ce3d:	mov    WORD PTR [esi-0xc],es
  41ce40:	add    ah,cl
  41ce42:	fcmovnb st,st(0)
  41ce44:	fs and al,0xbc
  41ce47:	adc    eax,0xf5852632
  41ce4c:	xchg   BYTE PTR [ebp+0x2ae9983c],ch
  41ce52:	pop    esp
  41ce53:	push   eax
  41ce54:	iret   
  41ce55:	mov    WORD PTR [eax+0x3d],?
  41ce58:	in     al,dx
  41ce59:	inc    esi
  41ce5a:	clc    
  41ce5b:	cmp    eax,0x174c5c8c
  41ce60:	jmp    0x1feb241a
  41ce65:	int    0x8d
  41ce67:	ins    DWORD PTR es:[edi],dx
  41ce68:	ja     0x41ce9c
  41ce6a:	or     DWORD PTR [ebx+0x18c9b222],ebp
  41ce70:	cdq    
  41ce71:	or     ah,BYTE PTR [edx]
  41ce73:	cdq    
  41ce74:	and    eax,0x566945ce
  41ce79:	call   0x53994369
  41ce7e:	(bad)  
  41ce81:	fild   DWORD PTR [ecx+0x32ecef6d]
  41ce87:	sub    al,0x32
  41ce89:	inc    ebx
  41ce8a:	mov    edi,0x1e1c75ed
  41ce8f:	daa    
  41ce90:	mov    esp,DWORD PTR [edx+esi*2]
  41ce93:	mov    ecx,ebp
  41ce95:	mov    WORD PTR [edx],ss
  41ce97:	xchg   ebp,eax
  41ce98:	xor    ecx,DWORD PTR [ebp+0x195807e8]
  41ce9e:	mov    cl,0x7d
  41cea0:	cmp    DWORD PTR [ecx],ebx
  41cea2:	push   es
  41cea3:	repz and edx,DWORD PTR [ebx]
  41cea6:	aam    0xf1
  41cea8:	dec    edi
  41cea9:	push   ecx
  41ceaa:	les    eax,FWORD PTR [ebp+0x583978b2]
  41ceb0:	shl    BYTE PTR [edx+0x2a],1
  41ceb3:	adc    cl,BYTE PTR [edi-0x5b7d333d]
  41ceb9:	sub    DWORD PTR [edx-0x50751e8a],0x1d903289
  41cec3:	xor    bh,BYTE PTR [eax-0x473ec440]
  41cec9:	dec    eax
  41ceca:	sbb    DWORD PTR [edx-0x72e466e8],0xe973e75
  41ced4:	or     ah,BYTE PTR [esi]
  41ced6:	xchg   BYTE PTR [edx],ah
  41ced8:	push   edi
  41ced9:	mov    ah,0x63
  41cedb:	ins    DWORD PTR es:[edi],dx
  41cedc:	or     eax,0x98a8fcc9
  41cee1:	psrld  mm4,QWORD PTR [edx]
  41cee4:	push   ebp
  41cee5:	jg     0x41ce84
  41cee7:	sub    BYTE PTR [esi],cl
  41cee9:	and    al,0x5b
  41ceeb:	xor    al,0x4d
  41ceed:	in     al,0x9b
  41ceef:	ins    BYTE PTR es:[edi],dx
  41cef0:	imul   edi,DWORD PTR [edx+0x2c3e6621],0xaf189f15
  41cefa:	mov    edx,0xd7220db5
  41ceff:	test   DWORD PTR [ebx+0x761faa8],edx
  41cf05:	mov    al,0xb
  41cf07:	pop    ebx
  41cf08:	loopne 0x41cef3
  41cf0a:	mov    ds:0x15de517d,al
  41cf0f:	loope  0x41cf6a
  41cf11:	out    0xf0,al
  41cf13:	xchg   ecx,eax
  41cf14:	popf   
  41cf15:	and    eax,0xb288f1eb
  41cf1a:	test   BYTE PTR [ecx+0x45],cl
  41cf1d:	or     dh,ah
  41cf1f:	pop    edx
  41cf20:	xchg   BYTE PTR [ebx-0x418bfa0f],dl
  41cf26:	push   ebx
  41cf27:	shl    BYTE PTR [edx+0x74],1
  41cf2a:	dec    eax
  41cf2b:	jg     0x41cf3c
  41cf2d:	pop    edx
  41cf2e:	cs pop edi
  41cf30:	cmp    cl,BYTE PTR [edi]
  41cf32:	shr    BYTE PTR [edi+0x5b],0x9b
  41cf36:	add    ch,BYTE PTR [edi-0x756ca984]
  41cf3c:	cmp    DWORD PTR [ebp+0x1013b50d],0xd0b70fdb
  41cf46:	inc    edx
  41cf47:	imul   eax,DWORD PTR [ebp-0x67496564],0x62
  41cf4e:	push   0xfffffff8
  41cf50:	push   edx
  41cf51:	mov    al,0x44
  41cf53:	test   ebx,ebx
  41cf55:	pop    esi
  41cf56:	sub    esi,ebp
  41cf58:	vcmpps xmm0,xmm4,XMMWORD PTR [edx+0x4b],0xb4
  41cf5e:	and    BYTE PTR [ebp+0x6cc5cbc5],cl
  41cf64:	pop    ds
  41cf65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf66:	nop
  41cf67:	xor    BYTE PTR [ebp+0x1b],0xd0
  41cf6b:	xlat   BYTE PTR ds:[ebx]
  41cf6c:	retf   
  41cf6d:	sub    esi,0x8dc1bb74
  41cf73:	jnp    0x41cf52
  41cf75:	test   BYTE PTR ds:0xce3e2c54,bl
  41cf7b:	cmc    
  41cf7c:	fucomp st(3)
  41cf7e:	or     DWORD PTR [eax],edi
  41cf80:	sub    DWORD PTR [ebp-0x3fe8d43a],ecx
  41cf86:	mov    edx,0xce619943
  41cf8b:	scas   eax,DWORD PTR es:[edi]
  41cf8c:	test   DWORD PTR [edx+0x78782afc],esi
  41cf92:	mov    ch,0x1e
  41cf94:	int    0xb8
  41cf96:	loope  0x41cf85
  41cf98:	adc    cl,bh
  41cf9a:	mov    al,0x79
  41cf9c:	repnz retf 
  41cf9e:	xor    al,0xf6
  41cfa0:	adc    al,ch
  41cfa2:	imul   ebp,DWORD PTR [edi],0x74eb306b
  41cfa8:	enter  0xfd33,0x0
  41cfac:	inc    ebp
  41cfad:	jmp    0x992f:0xb77c4a92
  41cfb4:	das    
  41cfb5:	inc    esi
  41cfb6:	xor    BYTE PTR ds:0xcdcfddd4,dl
  41cfbc:	and    dl,BYTE PTR [eax]
  41cfbe:	dec    esp
  41cfbf:	mov    eax,0x83c2e51a
  41cfc4:	retf   0xe011
  41cfc7:	sbb    eax,0x2f9c6996
  41cfcc:	sbb    al,0x8b
  41cfce:	test   BYTE PTR [edi+0xf],al
  41cfd1:	xlat   BYTE PTR ds:[ebx]
  41cfd2:	dec    ebx
  41cfd3:	mov    al,0x98
  41cfd5:	rol    dh,1
  41cfd7:	mov    bh,0x20
  41cfd9:	pop    ss
  41cfda:	out    dx,al
  41cfdb:	sub    eax,0xf00099ad
  41cfe0:	sub    eax,0x59a82835
  41cfe5:	push   es
  41cfe6:	and    al,0x46
  41cfe8:	daa    
  41cfe9:	push   eax
  41cfea:	add    DWORD PTR [esi+ecx*8-0x1a9dc161],ebp
  41cff1:	or     ebp,DWORD PTR [edx]
  41cff3:	cld    
  41cff4:	mov    al,ds:0xf88f10af
  41cff9:	dec    eax
  41cffa:	sti    
  41cffb:	out    0x8,al
  41cffd:	add    esi,edi
  41cfff:	mov    al,BYTE PTR [ebx]
  41d001:	jb     0x41d052
  41d003:	pop    ebp
  41d004:	icebp  
  41d005:	js     0x41d01b
  41d007:	push   ebp
  41d008:	popf   
  41d009:	fwait
  41d00a:	stos   BYTE PTR es:[edi],al
  41d00b:	add    ah,cl
  41d00d:	outs   dx,BYTE PTR ds:[esi]
  41d00e:	mov    bl,0xd1
  41d010:	jge    0x41cfb4
  41d012:	and    edx,ebx
  41d014:	mov    dl,0xfb
  41d016:	lock pop ss
  41d018:	mov    ch,0x36
  41d01a:	push   0x631a5b48
  41d01f:	mov    edx,0xdbb4c58c
  41d024:	fist   DWORD PTR [ebx]
  41d026:	ret    0xff95
  41d029:	fldcw  WORD PTR [ecx]
  41d02b:	sti    
  41d02c:	xchg   DWORD PTR ss:[edi],ecx
  41d02f:	stc    
  41d030:	adc    edx,DWORD PTR [ebp+0x12]
  41d033:	or     al,0x4a
  41d035:	add    al,0x87
  41d037:	cmc    
  41d038:	ud0    eax,DWORD PTR [edi]
  41d03b:	jno    0x41d00b
  41d03d:	or     eax,0x7fe0bef7
  41d042:	sar    BYTE PTR ds:[ebx],0x3
  41d046:	sbb    ebx,DWORD PTR [ebx-0x61]
  41d049:	repz in eax,dx
  41d04b:	push   es
  41d04c:	jmp    FWORD PTR [ecx-0x32]
  41d04f:	pop    ecx
  41d050:	stos   DWORD PTR es:[edi],eax
  41d051:	sbb    bl,BYTE PTR [edi+0x21]
  41d054:	push   cs
  41d055:	enter  0xa95c,0x5d
  41d059:	test   al,0xd2
  41d05b:	jecxz  0x41d0c2
  41d05d:	nop
  41d05e:	and    DWORD PTR [ebp+0x3e],esp
  41d061:	dec    esp
  41d062:	jne    0x41d0b0
  41d064:	mov    ds:0x29179f05,eax
  41d069:	inc    esp
  41d06a:	cli    
  41d06b:	frstor [ecx]
  41d06d:	gs jno 0x41d08f
  41d070:	je     0x41d031
  41d072:	cmp    cl,0xec
  41d075:	call   DWORD PTR [eax+0x2bf00472]
  41d07b:	jno    0x41d0f4
  41d07d:	dec    esi
  41d07e:	(bad)  
  41d07f:	cmp    eax,0x66278145
  41d084:	gs in  eax,0xe1
	...
  41d25b:	inc    ecx
  41d25c:	inc    BYTE PTR [ebx+eiz*1-0x1188441]
  41d263:	push   ecx
  41d264:	jecxz  0x41d28b
  41d266:	arpl   WORD PTR [esi-0x4f],si
  41d269:	pop    ds
  41d26a:	xlat   BYTE PTR ds:[ebx]
  41d26b:	or     eax,0x25000186
  41d270:	pop    es
  41d271:	add    BYTE PTR [eax],al
  41d273:	push   ss
  41d274:	aad    0x88
  41d276:	cld    
  41d277:	imul   esi,ecx,0xe34901c
  41d27d:	test   bl,dl
  41d27f:	je     0x41d284
  41d281:	adc    ebp,DWORD PTR [edx+ecx*2-0x14e624a7]
  41d288:	push   ss
  41d289:	in     al,0xad
  41d28b:	and    DWORD PTR [esi-0x1de1d834],0xd
  41d292:	jp     0x41d270
  41d294:	mov    bl,0x8e
  41d296:	push   0x8d2dcb8
  41d29b:	push   edx
  41d29c:	stc    
  41d29d:	cmp    cl,cl
  41d29f:	out    0xd8,al
  41d2a1:	stc    
  41d2a2:	out    0x8d,eax
  41d2a4:	jg     0x41d2a8
  41d2a6:	cwde   
  41d2a7:	push   esi
  41d2a8:	leave  
  41d2a9:	xor    DWORD PTR [edi],esp
  41d2ab:	push   0x8af8d401
  41d2b0:	dec    esi
  41d2b1:	rcr    esi,0x4a
  41d2b4:	out    dx,eax
  41d2b5:	sbb    BYTE PTR [ecx+esi*1+0x56],0xbb
  41d2ba:	lock icebp 
  41d2bc:	mov    eax,ds:0x15398f75
  41d2c1:	mov    cl,0x86
  41d2c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2c4:	dec    esi
  41d2c5:	loope  0x41d2ef
  41d2c7:	adc    eax,0xe9b76fed
  41d2cc:	enter  0x8cf7,0x91
  41d2d0:	dec    ebx
  41d2d1:	dec    ecx
  41d2d2:	xor    dh,BYTE PTR [ebp-0x50ef76f5]
  41d2d8:	out    dx,eax
  41d2d9:	adc    edx,DWORD PTR [edi]
  41d2db:	imul   edi,DWORD PTR [edx-0x7d],0x15
  41d2df:	retf   0x3ff6
  41d2e2:	mov    es,WORD PTR [eax-0x2c7de870]
  41d2e8:	fistp  QWORD PTR [edi]
  41d2ea:	push   es
  41d2eb:	or     dh,bh
  41d2ed:	test   edi,0x54a8ba1a
  41d2f3:	or     eax,0xd4f8cc5f
  41d2f8:	leave  
  41d2f9:	jno    0x41d37a
  41d2fb:	mov    ah,0x77
  41d2fd:	cmp    dl,0x1
  41d300:	pop    ecx
  41d301:	aad    0x36
  41d303:	pop    ds
  41d304:	xor    edi,DWORD PTR [ebp-0x5e716720]
  41d30a:	sbb    cl,cl
  41d30c:	imul   esi,DWORD PTR [ebx-0x6fcd66a7],0xffffffa5
  41d313:	sbb    dh,BYTE PTR [ecx-0x11]
  41d316:	pusha  
  41d317:	mov    bh,0xe3
  41d319:	pop    ss
  41d31a:	aas    
  41d31b:	sub    DWORD PTR [edi],esi
  41d31d:	pop    esp
  41d31e:	hlt    
  41d31f:	cld    
  41d320:	mov    ecx,0xc60097d9
  41d325:	ss pop ds
  41d327:	or     eax,0x2bf12d7e
  41d32c:	imul   edx,DWORD PTR [ebx+0x19908245],0xffffff8e
  41d333:	add    DWORD PTR [ebp+0x5a],ebx
  41d336:	test   eax,0x76b80da7
  41d33b:	pmulhuw mm4,QWORD PTR [ecx+0xbeee587]
  41d342:	inc    esp
  41d343:	call   0x4fb376de
  41d348:	stc    
  41d349:	mov    edx,0x42161629
  41d34e:	ja     0x41d329
  41d350:	outs   dx,BYTE PTR ds:[esi]
  41d351:	pop    edx
  41d352:	and    esi,ebx
  41d354:	or     esp,esp
  41d356:	aaa    
  41d357:	xor    al,BYTE PTR [ebp+0x62]
  41d35a:	inc    esp
  41d35b:	in     eax,0xb1
  41d35d:	repz retf 0xe621
  41d361:	mov    ah,0x29
  41d363:	idiv   esp
  41d365:	dec    edi
  41d366:	mov    BYTE PTR [ecx+ebx*2],al
  41d369:	xchg   BYTE PTR [eax],ch
  41d36b:	jbe    0x41d37f
  41d36d:	dec    edx
  41d36e:	cmp    edi,ecx
  41d370:	cld    
  41d371:	cmp    esp,esp
  41d373:	mov    bl,0x1e
  41d375:	mov    cl,0x9f
  41d377:	jp     0x41d344
  41d379:	inc    ecx
  41d37a:	add    ecx,ecx
  41d37c:	cmp    al,0x71
  41d37e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d37f:	jp     0x41d324
  41d381:	scas   al,BYTE PTR es:[edi]
  41d382:	hlt    
  41d383:	call   0xe25f:0x353f23ea
  41d38a:	and    eax,0x12f6dc0
  41d38f:	test   al,0x9b
  41d391:	icebp  
  41d392:	test   al,0x74
  41d394:	inc    esp
  41d395:	dec    ebx
  41d396:	test   BYTE PTR [esi+0xb1b6d53],0x8d
  41d39d:	xchg   esi,eax
  41d39e:	mov    edx,fs
  41d3a0:	icebp  
  41d3a1:	pop    edx
  41d3a2:	adc    al,0x56
  41d3a4:	nop
  41d3a5:	repnz in eax,0xf
  41d3a8:	ror    DWORD PTR [edx+ecx*1-0x61d0de56],0x9b
  41d3b0:	setns  dh
  41d3b3:	les    ecx,FWORD PTR [ebx]
  41d3b5:	push   esi
  41d3b6:	push   ecx
  41d3b7:	dec    edi
  41d3b8:	addr16 push cs
  41d3ba:	xor    cl,0xbf
  41d3bd:	xor    al,0x43
  41d3bf:	addr16 in al,0x1f
  41d3c2:	es push cs
  41d3c4:	cmp    bl,bl
  41d3c6:	je     0x41d430
  41d3c8:	std    
  41d3c9:	sahf   
  41d3ca:	inc    edx
  41d3cb:	or     ebp,DWORD PTR [ecx+eax*2+0x49]
  41d3cf:	add    BYTE PTR [ebx+0x2c4d5dcd],cl
  41d3d5:	mov    eax,0xeef6be93
  41d3da:	js     0x41d379
  41d3dc:	neg    DWORD PTR [esi+0x15]
  41d3df:	jle    0x41d3ad
  41d3e1:	pushf  
  41d3e2:	push   esi
  41d3e3:	xchg   edx,eax
  41d3e4:	in     al,dx
  41d3e5:	sbb    BYTE PTR [edi+eiz*8],cl
  41d3e8:	fmul   st,st(0)
  41d3ea:	popf   
  41d3eb:	xchg   DWORD PTR [eax+0x2a],edi
  41d3ee:	xor    bh,BYTE PTR [eax]
  41d3f0:	retf   0x53d9
  41d3f3:	mov    fs,WORD PTR [edi]
  41d3f5:	adc    dh,BYTE PTR [ebx+0x5b]
  41d3f8:	js     0x41d389
  41d3fa:	test   al,0xc1
  41d3fc:	jb     0x41d3a8
  41d3fe:	add    ecx,DWORD PTR [ebp+0xdc2af02]
  41d404:	aas    
  41d405:	cwde   
  41d406:	xchg   esp,eax
  41d407:	xor    ebx,DWORD PTR [edi]
  41d409:	jmp    0x41d3f5
  41d40b:	mov    bl,0xd3
  41d40d:	test   al,0x2f
  41d40f:	(bad)  
  41d410:	aam    0x81
  41d412:	jo     0x41d415
  41d414:	pop    es
  41d415:	loop   0x41d403
  41d417:	int    0x10
  41d419:	in     eax,dx
  41d41a:	xchg   bh,dh
  41d41c:	test   ch,ch
  41d41e:	mov    ds:0xf390084c,al
  41d423:	and    DWORD PTR [edi-0x619d1c4a],edi
  41d429:	mov    edx,0x405713dd
  41d42e:	push   eax
  41d42f:	jge    0x41d415
  41d431:	(bad)  gs:[edx+ebp*2-0x5f]
  41d436:	popa   
  41d437:	push   ebp
  41d438:	push   DWORD PTR [eax]
  41d43a:	in     al,0x3b
  41d43c:	jo     0x41d492
  41d43e:	ret    
  41d43f:	aam    0x10
  41d441:	jp     0x41d498
  41d443:	mov    ds,WORD PTR [eax+0x7fdb87a4]
  41d449:	in     al,dx
  41d44a:	fst    DWORD PTR [ebx+ebp*2-0x26]
  41d44e:	loopne 0x41d413
  41d450:	call   0xc7b04243
  41d455:	lahf   
  41d456:	pushf  
  41d457:	adc    edi,0xff474269
  41d45d:	xor    eax,0x25033dba
  41d462:	xchg   BYTE PTR [ebx+0x3b],bl
  41d465:	pop    ebp
  41d466:	int3   
  41d467:	rcl    DWORD PTR [esi+edi*8-0x56],cl
  41d46b:	or     DWORD PTR [esi+ebx*1+0xe],ebx
  41d46f:	in     al,0xc4
  41d471:	sub    BYTE PTR [ecx],ah
  41d473:	xchg   esp,eax
  41d474:	sub    eax,0x1bfb4eb8
  41d479:	xchg   edx,eax
  41d47a:	pop    es
  41d47b:	mov    ah,0x50
  41d47d:	mov    ah,0x65
  41d47f:	add    eax,0xd5772bb2
  41d484:	xor    esp,esi
  41d486:	aad    0xd5
  41d488:	sub    ecx,esp
  41d48a:	xchg   edx,eax
  41d48b:	lods   al,BYTE PTR ds:[esi]
  41d48c:	adc    al,BYTE PTR [ecx]
  41d48e:	sbb    bl,BYTE PTR ds:0x773c876e
  41d494:	fidivr DWORD PTR ds:0x8b67ae4
  41d49a:	loopne 0x41d461
  41d49c:	pop    DWORD PTR [edi+eiz*2]
  41d49f:	pop    ecx
  41d4a0:	popa   
  41d4a1:	inc    ecx
  41d4a2:	je     0x41d523
  41d4a4:	add    ah,dl
  41d4a6:	sbb    DWORD PTR [ebx-0xa],ebx
  41d4a9:	xchg   esi,eax
  41d4aa:	push   ecx
  41d4ab:	sbb    edi,DWORD PTR [edx-0x52]
  41d4ae:	out    dx,al
  41d4af:	int    0xa7
  41d4b1:	or     eax,0x5fe51809
  41d4b6:	out    0x58,al
  41d4b8:	call   0x610b:0xd70e7a1
  41d4bf:	pop    es
  41d4c0:	mov    eax,0xdaab6f36
  41d4c5:	mov    ds:0x20d60e72,al
  41d4ca:	adc    eax,0xd24891d2
  41d4cf:	add    ah,BYTE PTR fs:[eax]
  41d4d2:	sbb    esi,DWORD PTR [edi-0x27]
  41d4d5:	and    edi,ebp
  41d4d7:	or     al,0x2d
  41d4d9:	popf   
  41d4da:	(bad)  [esp+edi*1+0x13]
  41d4de:	retf   0x1cdc
  41d4e1:	jno    0x41d509
  41d4e3:	aas    
  41d4e4:	shl    BYTE PTR [esi+0x64],1
  41d4e7:	push   edx
  41d4e8:	or     dh,bh
  41d4ea:	cmp    ecx,edx
  41d4ec:	imul   DWORD PTR [eax+0x2a]
  41d4ef:	mov    al,ds:0x37458e5e
  41d4f4:	jle    0x41d4e2
  41d4f6:	pop    ss
  41d4f7:	outs   dx,DWORD PTR ds:[esi]
  41d4f8:	jno    0x41d542
  41d4fa:	sbb    ch,bl
  41d4fc:	int    0x1b
  41d4fe:	jns    0x41d50a
  41d500:	jg     0x41d4e6
  41d502:	fnstenv [ebx+0x39222079]
  41d508:	fcmovbe st,st(2)
  41d50a:	sar    eax,cl
  41d50c:	aad    0x89
  41d50e:	mov    eax,ds:0x70bda305
  41d513:	mov    ?,WORD PTR [edx-0x4c]
  41d516:	shr    BYTE PTR [edx+0x19e376f0],0xc3
  41d51d:	cld    
  41d51e:	ja     0x41d542
  41d520:	or     ebp,ebp
  41d522:	jbe    0x41d558
  41d524:	stos   BYTE PTR es:[edi],al
  41d525:	mov    ch,0x19
  41d527:	arpl   WORD PTR [eax-0x5287150c],bx
  41d52d:	cs (bad) 
  41d52f:	aam    0xa0
  41d531:	ds inc ecx
  41d533:	ror    DWORD PTR [edx+0xd78b9f9],1
  41d539:	lea    ecx,[eax+0x6994c275]
  41d53f:	mov    ch,0x86
  41d541:	pop    ebx
  41d542:	xchg   ecx,eax
  41d543:	mov    al,gs:0x26f28033
  41d549:	dec    ecx
  41d54a:	fimul  DWORD PTR [ebp+ebp*2+0x68]
  41d54e:	out    0xc4,al
  41d550:	(bad)  
  41d551:	sub    ebp,edx
  41d553:	js     0x41d59a
  41d555:	xor    eax,0xfce5fd63
  41d55a:	push   ebp
  41d55b:	stc    
  41d55c:	repz jle 0x41d513
  41d55f:	or     esi,DWORD PTR [edi+0x779af1d9]
  41d565:	mov    edi,0xf5f6d348
  41d56a:	add    bh,BYTE PTR ds:0xd192ec8e
  41d570:	dec    esp
  41d571:	shl    ah,0xf8
  41d574:	div    BYTE PTR [ecx]
  41d576:	ret    0x3ebd
  41d579:	jp     0x41d545
  41d57b:	imul   esi,esp,0xffffffbd
  41d57e:	lods   eax,DWORD PTR ds:[esi]
  41d57f:	mov    es,WORD PTR [ecx]
  41d581:	sub    DWORD PTR [edi],esp
  41d583:	fimul  DWORD PTR [eax+0x46ffe4da]
  41d589:	pop    edi
  41d58a:	inc    edi
  41d58b:	sbb    al,0xa6
  41d58d:	in     eax,0xe
  41d58f:	adc    DWORD PTR [ecx+0x61],ebx
  41d592:	push   edi
  41d593:	fsubr  QWORD PTR [ecx]
  41d595:	mov    bl,0xbd
  41d597:	sahf   
  41d598:	lods   eax,DWORD PTR ds:[esi]
  41d599:	(bad)  
  41d59a:	mov    ds:0xf23075cf,al
  41d59f:	dec    esi
  41d5a0:	xchg   esi,eax
  41d5a1:	mov    al,0x72
  41d5a3:	adc    BYTE PTR ds:0x69577378,ah
  41d5a9:	pop    edx
  41d5aa:	mov    al,al
  41d5ac:	jbe    0x41d586
  41d5ae:	cmp    DWORD PTR [ebx+0x418ea5e],edi
  41d5b4:	in     al,dx
  41d5b5:	cwde   
  41d5b6:	sub    BYTE PTR [eax+eiz*2-0x80],0x69
  41d5bb:	mov    ebx,0xf4867800
  41d5c0:	seta   BYTE PTR [ebx-0x4]
  41d5c4:	adc    BYTE PTR [ebx+esi*4-0x584e40d1],dl
  41d5cb:	dec    edx
  41d5cc:	fwait
  41d5cd:	mov    ds:0xfb71e593,al
  41d5d2:	fstp   QWORD PTR [ecx]
  41d5d4:	ss je  0x41d649
  41d5d7:	or     al,0xc9
  41d5d9:	jno    0x41d63d
  41d5db:	cmp    al,BYTE PTR [eax-0x80]
  41d5de:	push   ecx
  41d5df:	mov    WORD PTR [esi],es
  41d5e1:	not    BYTE PTR [edx+0x25ece8e1]
  41d5e7:	dec    esi
  41d5e8:	vpmacsdqh xmm7,xmm3,xmm3,xmm0
  41d5ee:	mov    eax,0x6c8ccf2f
  41d5f3:	or     DWORD PTR [edx],ebp
  41d5f5:	jp     0x41d63b
  41d5f7:	retf   
  41d5f8:	sbb    cl,cl
  41d5fa:	dec    ebx
  41d5fb:	repz int3 
  41d5fd:	add    eax,0x50eb4433
  41d602:	fwait
  41d603:	dec    esp
  41d604:	and    ah,BYTE PTR [ebx]
  41d606:	pop    es
  41d607:	ss (bad) 
  41d609:	out    0x47,al
  41d60b:	sub    eax,0xc8f087c4
  41d610:	xchg   ebx,eax
  41d611:	scas   eax,DWORD PTR es:[edi]
  41d612:	cmc    
  41d613:	xchg   ebx,eax
  41d614:	adc    eax,0xbe2f7459
  41d619:	sbb    DWORD PTR [edi+ebx*1],0xfb1fd221
  41d620:	jmp    0x41d5e2
  41d622:	cld    
  41d623:	mov    edi,0x2c4fb765
  41d628:	(bad)  
  41d629:	mov    esp,0x7b2eaf00
  41d62e:	push   edx
  41d62f:	jp     0x41d5c9
  41d631:	xchg   DWORD PTR ds:0x49ce36d2,ebp
  41d637:	mov    bh,0x79
  41d639:	sahf   
  41d63a:	or     eax,0x9d6e1e18
  41d63f:	dec    esi
  41d640:	inc    eax
  41d641:	in     eax,dx
  41d642:	push   eax
  41d643:	add    eax,0x858c8c92
  41d648:	xlat   BYTE PTR ds:[ebx]
  41d649:	(bad)  
  41d64a:	scas   eax,DWORD PTR es:[edi]
  41d64b:	or     cl,dh
  41d64d:	push   0xfffffff2
  41d64f:	(bad)  
  41d651:	(bad)  
  41d652:	call   0xc7cefc45
  41d657:	mov    eax,ds:0x35e25c9f
  41d65c:	xchg   al,bh
  41d65e:	inc    esi
  41d65f:	or     bl,bh
  41d661:	and    DWORD PTR [eax-0x79],esp
  41d664:	add    DWORD PTR [eax],ebp
  41d666:	loopne 0x41d5fa
  41d668:	push   ebx
  41d669:	push   eax
  41d66a:	imul   esp,esp,0x5a4d6bbe
  41d670:	lahf   
  41d671:	push   edx
  41d672:	or     ah,0x25
  41d675:	and    ah,BYTE PTR [esi-0x3d]
  41d678:	pop    edx
  41d679:	cmovge edx,esp
  41d67c:	pop    ds
  41d67d:	mov    ebx,edx
  41d67f:	jecxz  0x41d6d3
  41d681:	scas   eax,DWORD PTR es:[edi]
  41d682:	xchg   esi,eax
  41d683:	inc    ecx
  41d684:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d685:	ins    DWORD PTR es:[edi],dx
  41d686:	sti    
  41d687:	jb     0x41d672
  41d689:	xor    eax,0x12b17fb2
  41d68e:	data16 (bad) 
  41d690:	mov    al,ds:0x2c1e6ce8
  41d695:	fs add edi,esp
  41d698:	adc    bl,0x6e
  41d69b:	jb     0x41d693
  41d69d:	imul   esp,DWORD PTR [esi],0xe57a63a7
  41d6a3:	fwait
  41d6a4:	(bad)  
  41d6a5:	push   ds
  41d6a6:	iret   
  41d6a7:	push   esp
  41d6a8:	nop
  41d6a9:	into   
  41d6aa:	fnstcw WORD PTR [edx]
  41d6ac:	pop    esp
  41d6ad:	or     edi,DWORD PTR [edx+edi*4-0x30808f53]
  41d6b4:	and    eax,0x3105bb78
  41d6b9:	mov    bl,0xe5
  41d6bb:	jo     0x41d684
  41d6bd:	ret    0x7fb5
  41d6c0:	jmp    0xcf165cf1
  41d6c5:	push   cs
  41d6c6:	dec    esp
  41d6c7:	mov    cl,0x5
  41d6c9:	mov    dh,0x8a
  41d6cb:	dec    eax
  41d6cc:	int3   
  41d6cd:	call   0x7351:0x6d31e673
  41d6d4:	mov    ds:0xb46d7f69,eax
  41d6d9:	xor    WORD PTR [ebx-0x44],sp
  41d6dd:	loope  0x41d6ab
  41d6df:	add    al,0xfd
  41d6e1:	das    
  41d6e2:	jmp    0x41d707
  41d6e4:	add    cl,BYTE PTR [ecx+0x5d]
  41d6e7:	(bad)
  41d6eb:	adc    dl,bl
  41d6ed:	je     0x41d6e0
  41d6ef:	fwait
  41d6f0:	mov    eax,0xd7331442
  41d6f5:	xor    BYTE PTR [esi-0x68],0xa1
  41d6f9:	jg     0x41d70c
  41d6fb:	adc    edi,ebp
  41d6fd:	pop    ebp
  41d6fe:	in     eax,dx
  41d6ff:	and    eax,0x518d941b
  41d704:	and    al,0x3b
  41d706:	out    dx,eax
  41d707:	hlt    
  41d708:	and    esp,DWORD PTR [eax]
  41d70a:	test   eax,0x312a18d4
  41d70f:	std    
  41d710:	sbb    eax,0xac53cf06
  41d715:	mov    ?,WORD PTR [eax+0x44]
  41d718:	mov    cl,0x81
  41d71a:	stos   BYTE PTR es:[edi],al
  41d71b:	jmp    0x4bacf87a
  41d720:	mov    ch,0x6d
  41d722:	sbb    al,0xf6
  41d724:	popa   
  41d725:	fadd   st,st(7)
  41d727:	fiadd  DWORD PTR [eax+0x4c4c63ad]
  41d72d:	aas    
  41d72e:	mov    ds:0x5f6449ff,al
  41d733:	(bad)  
  41d735:	pushf  
  41d736:	push   esp
  41d737:	or     eax,DWORD PTR [edx+0x44]
  41d73a:	mov    ah,0xfc
  41d73c:	retf   0x1472
  41d73f:	loope  0x41d6d1
  41d741:	cwde   
  41d742:	stos   BYTE PTR es:[edi],al
  41d743:	mov    ebx,DWORD PTR [edi]
  41d745:	pushf  
  41d746:	pop    es
  41d747:	jmp    DWORD PTR [edx-0x634d5333]
  41d74d:	and    BYTE PTR [eax+esi*4],ah
  41d750:	pop    edx
  41d751:	adc    dh,BYTE PTR ds:0xa515bfc
  41d757:	popf   
  41d758:	out    dx,eax
  41d759:	adc    edx,edx
  41d75b:	clc    
  41d75c:	int3   
  41d75d:	scas   eax,DWORD PTR es:[edi]
  41d75e:	pop    es
  41d75f:	repz call 0x2485:0x7d8b65d1
  41d767:	add    DWORD PTR [edi-0x42eccbe],ebx
  41d76d:	sbb    al,0xfa
  41d76f:	cmp    eax,0xc9cd0362
  41d774:	jmp    0xdfbd7369
  41d779:	mov    eax,ds:0x9ba676d3
  41d77e:	fcmovnb st,st(1)
  41d780:	jnp    0xba781ad0
  41d786:	pop    edi
  41d787:	jb     0x41d805
  41d789:	retf   0x5568
  41d78c:	mov    DWORD PTR ds:[ebx+0x7e],esi
  41d790:	fist   DWORD PTR [esi+ecx*4-0x76]
  41d794:	mov    dl,0x54
  41d796:	xlat   BYTE PTR ds:[ebx]
  41d797:	jg     0x41d797
  41d799:	gs mov esi,0x312dcb53
  41d79f:	adc    BYTE PTR [esi-0x5f20dd48],dl
  41d7a5:	jg     0x41d790
  41d7a7:	les    edi,FWORD PTR [ebx]
  41d7a9:	cmp    al,0x29
  41d7ab:	(bad)  
  41d7ac:	xchg   ebp,eax
  41d7ad:	mov    ebx,0x845d6e30
  41d7b2:	popa   
  41d7b3:	test   al,0x8
  41d7b5:	fwait
  41d7b6:	push   eax
  41d7b7:	shl    DWORD PTR [edi-0x40],1
  41d7ba:	loop   0x41d73e
  41d7bc:	sbb    BYTE PTR [eax+0x32cd2b02],0xfb
  41d7c3:	(bad)  
  41d7c4:	js     0x41d7de
  41d7c6:	adc    ebp,edi
  41d7c8:	lock imul DWORD PTR [edx-0x6452460e]
  41d7cf:	imul   ecx,DWORD PTR ds:0xbadabb95,0x11d4c74e
  41d7d9:	out    dx,eax
  41d7da:	sub    edx,DWORD PTR ds:0x58c4b27d
  41d7e0:	inc    eax
  41d7e1:	stc    
  41d7e2:	xlat   BYTE PTR ds:[ebx]
  41d7e3:	xor    eax,DWORD PTR [eax]
  41d7e5:	push   edx
  41d7e6:	es mov esp,0xc682817c
  41d7ec:	jns    0x41d841
  41d7ee:	pop    ds
  41d7ef:	mov    cl,0x22
  41d7f1:	mov    BYTE PTR [ecx],0x5d
  41d7f4:	cwde   
  41d7f5:	adc    eax,0x624c02c3
  41d7fa:	out    0xaf,al
  41d7fc:	adc    BYTE PTR [edi+0x54],bl
  41d7ff:	dec    eax
  41d800:	ja     0x41d83f
  41d802:	inc    ecx
  41d803:	adc    esp,DWORD PTR [esi+0x15]
  41d806:	popf   
  41d807:	xor    dh,BYTE PTR [ebx-0x5b5504ad]
  41d80d:	push   edi
  41d80e:	ja     0x41d862
  41d810:	rcr    BYTE PTR [edx+ebp*1+0x32f8170c],1
  41d817:	xor    BYTE PTR [ecx],ch
  41d819:	in     eax,0x22
  41d81b:	test   BYTE PTR [edx],0xa5
  41d81e:	inc    esp
  41d81f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d820:	cmc    
  41d821:	sbb    BYTE PTR [eax-0x18],ah
  41d824:	loope  0x41d88d
  41d826:	xchg   ebp,eax
  41d827:	ret    
  41d828:	xchg   DWORD PTR [ecx+0x5a],ebp
  41d82b:	popa   
  41d82c:	sbb    eax,DWORD PTR [esi]
  41d82e:	mov    ch,0x56
  41d830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d831:	aas    
  41d832:	div    DWORD PTR [esi-0x2d]
  41d835:	dec    di
  41d837:	addr16 cs push cs
  41d83a:	in     eax,dx
  41d83b:	jmp    0x1859:0xa2110d34
  41d842:	mov    dh,0xdd
  41d844:	div    DWORD PTR [esp+edx*4+0x4b64537d]
  41d84b:	sub    DWORD PTR [esi-0x45],ebx
  41d84e:	sti    
  41d84f:	and    bh,al
  41d851:	mov    eax,ds:0x72db0063
  41d856:	push   ecx
  41d857:	adc    ebp,DWORD PTR [ebx-0xd321496]
  41d85d:	jo     0x41d8be
  41d85f:	mov    ebp,DWORD PTR [edi-0x41]
  41d862:	xor    dl,BYTE PTR [eax-0x3ad4b445]
  41d868:	out    dx,eax
  41d869:	repnz aam 0x6
  41d86c:	in     eax,dx
  41d86d:	dec    esi
  41d86e:	into   
  41d86f:	arpl   si,bp
  41d871:	mov    ds:0x468cf63f,al
  41d876:	inc    edx
  41d877:	ins    DWORD PTR es:[edi],dx
  41d878:	dec    edi
  41d879:	pop    ss
  41d87a:	aam    0x3c
  41d87c:	fnsave [edi+0x63]
  41d87f:	push   edi
  41d880:	sub    eax,0x2d4d4be8
  41d885:	pop    ebx
  41d886:	or     ch,cl
  41d888:	les    edi,FWORD PTR [edx-0x1a]
  41d88b:	jmp    0xc074:0x8a3c4b00
  41d892:	jl     0x41d861
  41d894:	dec    eax
  41d895:	or     DWORD PTR [ecx],ebx
  41d897:	push   esp
  41d898:	(bad)  
  41d899:	out    dx,eax
  41d89a:	mov    bh,0xc7
  41d89c:	jb     0x41d872
  41d89e:	mov    ch,0x4d
  41d8a0:	sbb    BYTE PTR [ebx-0x5d],bh
  41d8a3:	adc    eax,0x86eb34ca
  41d8a8:	(bad)  
  41d8a9:	sub    BYTE PTR [edi-0x2d],cl
  41d8ac:	mov    al,ds:0x7abed9a3
  41d8b1:	mov    DWORD PTR [eax-0x364398fc],0xba3eb456
  41d8bb:	test   eax,0x23a0046a
  41d8c0:	mov    cl,0x18
  41d8c2:	mov    al,ds:0x58f414a3
  41d8c7:	addr16 push ebx
  41d8c9:	or     eax,0xac7a587f
  41d8ce:	mov    DWORD PTR [esi],ebp
  41d8d0:	retf   
  41d8d1:	pop    edi
  41d8d2:	popa   
  41d8d3:	inc    edx
  41d8d4:	mov    edi,0x1e2b8813
  41d8d9:	jnp    0x41d957
  41d8db:	retf   0xafb7
  41d8de:	dec    edi
  41d8df:	fadd   DWORD PTR [ebx-0x6a0c394a]
  41d8e5:	jnp    0x41d925
  41d8e7:	mul    DWORD PTR [esp+ebp*4]
  41d8ea:	push   ebp
  41d8eb:	dec    ecx
  41d8ec:	dec    ecx
  41d8ed:	fsub   DWORD PTR [ebp-0x35]
  41d8f0:	and    DWORD PTR [esi+0x48],edi
  41d8f3:	ret    
  41d8f4:	pop    esp
  41d8f5:	cs scas eax,DWORD PTR es:[edi]
  41d8f7:	cwde   
  41d8f8:	ror    bl,1
  41d8fa:	cs dec eax
  41d8fc:	and    al,0xaf
  41d8fe:	sahf   
  41d8ff:	ret    
  41d900:	bound  esi,QWORD PTR [ebx+0x21]
  41d903:	mov    esp,0x25197813
  41d908:	sbb    dl,bh
  41d90a:	js     0x41d969
  41d90c:	xchg   esp,eax
  41d90d:	dec    esp
  41d90e:	pushf  
  41d90f:	aam    0xe
  41d911:	pop    ebp
  41d912:	dec    eax
  41d913:	test   al,0x35
  41d915:	addr16 mov edx,0xcc31712f
  41d91b:	cmp    eax,0xd73d4f14
  41d920:	(bad)  
  41d921:	sub    esp,ebx
  41d923:	idiv   BYTE PTR [edx+0x54]
  41d926:	jge    0x41d8fc
  41d928:	nop
  41d929:	clc    
  41d92a:	jmp    0x41d98c
  41d92c:	call   0xd4b921e6
  41d931:	shl    DWORD PTR [edx],1
  41d933:	push   ss
  41d934:	in     eax,0x8d
  41d936:	(bad)  [edi-0x1e]
  41d939:	jecxz  0x41d9b0
  41d93b:	pop    es
  41d93c:	in     eax,dx
  41d93d:	call   0xd81c3b1
  41d942:	adc    edx,DWORD PTR [edx]
  41d944:	pop    es
  41d945:	das    
  41d946:	sbb    eax,0xd927a4b1
  41d94b:	emms   
  41d94d:	cmp    BYTE PTR [edi+0x38ffee5f],bl
  41d953:	int3   
  41d954:	sub    BYTE PTR [ebx],ch
  41d956:	add    al,0x33
  41d958:	leave  
  41d959:	test   eax,0x9f0e5f9d
  41d95e:	dec    esp
  41d95f:	jns    0x41d910
  41d961:	aas    
  41d962:	pop    esi
  41d963:	push   0x5b
  41d965:	jp     0x41d94b
  41d967:	retf   
  41d968:	cmp    ebx,DWORD PTR [esi+0x41]
  41d96b:	aam    0xdb
  41d96d:	sbb    DWORD PTR [edx+0x5dd7f52d],0xffffff94
  41d974:	je     0x41d925
  41d976:	aam    0x2f
  41d978:	pop    es
  41d979:	add    ah,dl
  41d97b:	repz rol DWORD PTR [esp+0x7f],0xd7
  41d981:	sbb    ah,al
  41d983:	xchg   edi,eax
  41d984:	cmc    
  41d985:	pop    ebx
  41d986:	mov    eax,0x5483b0d0
  41d98b:	mov    ah,0x19
  41d98d:	and    eax,0x27deac06
  41d992:	aas    
  41d993:	push   eax
  41d994:	scas   eax,DWORD PTR es:[edi]
  41d995:	adc    eax,0x7007
	...
  41db66:	add    BYTE PTR [eax],al
  41db68:	push   cs
  41db69:	pop    esp
  41db6a:	mov    esp,0xffe7fe47
  41db6f:	pop    ebp
  41db70:	es mov eax,0x632afe17
  41db76:	das    
  41db77:	or     cl,cl
  41db79:	fild   DWORD PTR [ecx]
  41db7b:	add    BYTE PTR ds:0x5b000007,ah
  41db81:	imul   ecx,DWORD PTR [edx-0x31f0fb87],0x2c
  41db88:	lea    esp,[eax-0x2e7d6253]
  41db8e:	and    cl,BYTE PTR [ebx]
  41db90:	jmp    0x41db50
  41db92:	pop    edx
  41db93:	push   esp
  41db94:	scas   eax,DWORD PTR es:[edi]
  41db95:	xchg   edi,eax
  41db96:	lock jnp 0x41db8b
  41db99:	mul    BYTE PTR [eax+esi*2+0x12]
  41db9d:	pusha  
  41db9e:	and    al,0xc0
  41dba0:	rsqrtps xmm3,XMMWORD PTR [eax+0x4ea2690f]
  41dba7:	popa   
  41dba8:	mov    esp,DWORD PTR gs:[edx-0x23]
  41dbac:	dec    esi
  41dbad:	in     al,0x6d
  41dbaf:	stos   DWORD PTR es:[edi],eax
  41dbb0:	hlt    
  41dbb1:	popa   
  41dbb2:	cmp    ecx,DWORD PTR [ebx+0x2b412a6b]
  41dbb8:	pop    esp
  41dbb9:	jge    0x41db8e
  41dbbb:	dec    edx
  41dbbc:	sub    DWORD PTR [edx-0x19],ebp
  41dbbf:	test   dh,al
  41dbc1:	push   es
  41dbc2:	mov    bh,0x3
  41dbc4:	adc    ch,BYTE PTR [ecx+0x32]
  41dbc7:	cmp    BYTE PTR ds:0xa2ff764d,al
  41dbcd:	mul    ah
  41dbcf:	jge    0x41dc19
  41dbd1:	and    eax,0xc0fbaa02
  41dbd6:	cli    
  41dbd7:	loopne 0x41dba4
  41dbd9:	add    DWORD PTR [esp+eax*2+0x7f],edx
  41dbdd:	jle    0x41dc21
  41dbdf:	xchg   esi,eax
  41dbe0:	lds    ebx,FWORD PTR [esi-0x4063f01d]
  41dbe6:	arpl   si,bx
  41dbe8:	ss (bad) 
  41dbea:	into   
  41dbeb:	ret    
  41dbec:	dec    ecx
  41dbed:	add    al,0xd2
  41dbef:	dec    edi
  41dbf0:	adc    ebx,DWORD PTR [eax]
  41dbf2:	mov    ebx,0x3b104997
  41dbf7:	dec    esi
  41dbf8:	adc    DWORD PTR [ecx],esp
  41dbfa:	(bad)  
  41dbfb:	out    dx,al
  41dbfc:	ins    BYTE PTR es:[edi],dx
  41dbfd:	dec    ebx
  41dbfe:	adc    dh,bl
  41dc00:	in     al,dx
  41dc01:	out    0x85,eax
  41dc03:	or     eax,0xa8d4b572
  41dc08:	out    0x8f,eax
  41dc0a:	loope  0x41dc7b
  41dc0c:	clc    
  41dc0d:	mov    ch,0x20
  41dc0f:	xchg   ebx,eax
  41dc10:	(bad)  
  41dc11:	pop    ecx
  41dc12:	ds dec eax
  41dc14:	shl    ebp,0x7
  41dc17:	cli    
  41dc18:	mov    al,0x53
  41dc1a:	stc    
  41dc1b:	in     eax,0x6a
  41dc1d:	jge    0x41dc38
  41dc1f:	push   ds
  41dc20:	jg     0x41dbcc
  41dc22:	mov    BYTE PTR [ebx+0x1a],cl
  41dc25:	imul   ebx,DWORD PTR [ebp-0x75],0xc991492c
  41dc2c:	mov    ds:0x6b3f2330,eax
  41dc32:	fs repz loop 0x41dbdb
  41dc36:	pop    ecx
  41dc37:	popaw  
  41dc39:	xchg   esp,eax
  41dc3a:	sub    esp,DWORD PTR [eax+0x4d]
  41dc3d:	sub    esp,esp
  41dc3f:	inc    ecx
  41dc40:	push   ds
  41dc41:	jns    0x41dca8
  41dc43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc44:	(bad)  
  41dc45:	scas   al,BYTE PTR es:[edi]
  41dc46:	jbe    0x41dc19
  41dc48:	jae    0x41dc29
  41dc4a:	lea    edi,[esp+edx*2+0x4dffe645]
  41dc51:	fstp   QWORD PTR [edx]
  41dc53:	xchg   ebx,eax
  41dc54:	loopne 0x41dbd6
  41dc56:	push   ecx
  41dc57:	cld    
  41dc58:	stos   BYTE PTR es:[edi],al
  41dc59:	cmp    DWORD PTR [esi],esp
  41dc5b:	das    
  41dc5c:	jp     0x41dbf1
  41dc5e:	je     0x41dc81
  41dc60:	dec    ecx
  41dc61:	pop    ebx
  41dc62:	test   DWORD PTR [edi-0x34b08d5c],ebx
  41dc68:	fwait
  41dc69:	dec    esi
  41dc6a:	mov    bl,0xa3
  41dc6c:	iret   
  41dc6d:	add    edx,DWORD PTR ds:0xfbb1ebb5
  41dc73:	test   BYTE PTR [esi+0x335dc19f],cl
  41dc79:	push   edx
  41dc7a:	cmp    BYTE PTR [eax+edx*2-0x307d5d95],ah
  41dc81:	adc    DWORD PTR [ebx+edx*8],edx
  41dc84:	int    0x1b
  41dc86:	ja     0x41dcce
  41dc88:	fnsave [eax-0x37]
  41dc8b:	and    al,0x13
  41dc8d:	adc    ebx,edx
  41dc8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc90:	inc    ebx
  41dc91:	cmc    
  41dc92:	cmp    ch,cl
  41dc94:	mov    ebx,es
  41dc96:	push   ds
  41dc97:	int3   
  41dc98:	jnp    0x41dc48
  41dc9a:	adc    ch,al
  41dc9c:	cmp    DWORD PTR [ebx-0x3e04c830],ecx
  41dca2:	sbb    ebx,DWORD PTR [edx]
  41dca4:	xchg   ah,bh
  41dca6:	into   
  41dca7:	push   ebp
  41dca8:	xchg   ebx,eax
  41dca9:	stos   DWORD PTR es:[edi],eax
  41dcaa:	cld    
  41dcab:	fwait
  41dcac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcad:	jnp    0x41dc7b
  41dcaf:	fld    DWORD PTR fs:[ebp-0x4f]
  41dcb3:	cmp    ch,BYTE PTR [edi+0x55]
  41dcb6:	addr16 add eax,0x37a7fc84
  41dcbc:	and    al,al
  41dcbe:	in     al,dx
  41dcbf:	xchg   esi,eax
  41dcc0:	fdiv   st(1),st
  41dcc2:	mov    cl,0x7
  41dcc4:	inc    esi
  41dcc5:	cwde   
  41dcc6:	sar    DWORD PTR [ecx+0x612b0723],0xe9
  41dccd:	outs   dx,BYTE PTR ds:[esi]
  41dcce:	jne    0x41dd0b
  41dcd0:	in     eax,dx
  41dcd1:	hlt    
  41dcd2:	fisubr DWORD PTR [eax+0x2f8152c4]
  41dcd8:	xor    BYTE PTR [ebx+0x39],bh
  41dcdb:	or     al,0xf4
  41dcdd:	dec    esp
  41dcde:	inc    edx
  41dcdf:	cli    
  41dce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dce1:	test   eax,0x4ec13eaa
  41dce6:	or     DWORD PTR [eax-0x2bd95662],0x96b87bcf
  41dcf0:	or     bl,ch
  41dcf2:	sub    DWORD PTR [edx+eiz*2+0x6b30abfb],ebx
  41dcf9:	pop    edx
  41dcfa:	inc    ebx
  41dcfb:	in     al,0xf
  41dcfd:	mov    ebx,0xb18d9594
  41dd02:	fld    TBYTE PTR [eax-0x4e]
  41dd05:	mov    ebp,0x12447afb
  41dd0a:	outs   dx,DWORD PTR ds:[esi]
  41dd0b:	mov    esp,0x3a43ffdc
  41dd10:	pop    esi
  41dd11:	in     al,0x2
  41dd13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd14:	cmp    eax,0x86da914d
  41dd19:	neg    DWORD PTR [edi]
  41dd1b:	js     0x41dd5c
  41dd1d:	add    eax,0xa41732f5
  41dd22:	in     eax,0x52
  41dd24:	loopne 0x41dca9
  41dd26:	ins    DWORD PTR es:[edi],dx
  41dd27:	and    al,0xa8
  41dd29:	aas    
  41dd2a:	and    DWORD PTR [esi+0x59a7b706],edx
  41dd30:	push   ebx
  41dd31:	ins    DWORD PTR es:[edi],dx
  41dd32:	aam    0x6e
  41dd34:	inc    ecx
  41dd35:	and    dl,al
  41dd37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd38:	push   0xffffffca
  41dd3a:	or     dh,bh
  41dd3c:	sti    
  41dd3d:	retf   0x6f
  41dd40:	or     esp,0xd9f28da3
  41dd46:	cmp    BYTE PTR [ecx+ebx*1-0x25],dl
  41dd4a:	xchg   ebp,eax
  41dd4b:	jmp    0x735c07ed
  41dd50:	push   ds
  41dd51:	mov    eax,ds:0x976c3b33
  41dd56:	inc    DWORD PTR [ecx+0x3e]
  41dd59:	add    al,0xc3
  41dd5b:	mov    ecx,0x1a9ae353
  41dd60:	and    al,0xc8
  41dd62:	jg     0x41dd16
  41dd64:	push   ebp
  41dd65:	add    al,0x56
  41dd67:	and    edi,DWORD PTR [edx*2-0x5b9223ea]
  41dd6e:	pop    ecx
  41dd6f:	repnz and ecx,eax
  41dd72:	mov    al,ds:0xe0a1d9c0
  41dd77:	aaa    
  41dd78:	sub    BYTE PTR ds:0x2b71b374,bh
  41dd7e:	dec    ecx
  41dd7f:	adc    eax,0x28f3e8b1
  41dd84:	(bad)  
  41dd85:	imul   eax,DWORD PTR es:[edi-0x79],0x9a4663f1
  41dd8d:	inc    eax
  41dd8e:	mov    esi,DWORD PTR [esi]
  41dd90:	mov    ebx,0x27c8f037
  41dd95:	lahf   
  41dd96:	test   esp,eax
  41dd98:	jae    0x41dda1
  41dd9a:	daa    
  41dd9b:	add    al,0x4d
  41dd9d:	fwait
  41dd9e:	dec    edx
  41dd9f:	cmp    edx,DWORD PTR [ebx+0x1c]
  41dda2:	int    0x7c
  41dda4:	and    DWORD PTR [ebx],0x35
  41dda7:	jmp    0x52f9:0x37db9fba
  41ddae:	ret    
  41ddaf:	fucomip st,st(6)
  41ddb1:	cmp    BYTE PTR [ebx],ch
  41ddb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddb4:	jb     0x41dde4
  41ddb6:	adc    ebx,ebx
  41ddb8:	ja     0x41ddc4
  41ddba:	cmp    dl,BYTE PTR [edi+esi*2]
  41ddbd:	cs sar dh,0x44
  41ddc1:	neg    al
  41ddc3:	push   ebx
  41ddc4:	push   edi
  41ddc5:	cmp    eax,0x44e6046f
  41ddca:	sbb    cl,BYTE PTR [edx-0x25444f7e]
  41ddd0:	mov    esp,0x1aeb5764
  41ddd5:	cwde   
  41ddd6:	aaa    
  41ddd7:	das    
  41ddd8:	cmp    eax,0x9a7a693c
  41dddd:	(bad)
  41dde0:	std    
  41dde1:	test   eax,0x3a75b7f1
  41dde7:	jae    0x41de2a
  41dde9:	jp     0x41dddb
  41ddeb:	scas   al,BYTE PTR es:[edi]
  41ddec:	test   DWORD PTR [edx+0x35],edx
  41ddef:	mov    esi,0x95b285ad
  41ddf4:	imul   ecx,DWORD PTR [ebx+0x713a5f06],0x67cc0fdb
  41ddfe:	jle    0x41de4e
  41de00:	push   edi
  41de01:	sub    BYTE PTR [edx-0xc],cl
  41de04:	sub    al,0xcf
  41de06:	push   0xfffffff9
  41de08:	xor    esp,esp
  41de0a:	pushf  
  41de0b:	mov    ebx,0xa0a32fe9
  41de10:	mov    ds:0x23066277,al
  41de15:	rol    BYTE PTR [eax+0x144cc5f2],1
  41de1b:	add    al,0xc5
  41de1d:	inc    ebp
  41de1e:	inc    edx
  41de1f:	adc    esi,esi
  41de21:	(bad)  
  41de22:	dec    BYTE PTR [esi-0x66e48663]
  41de28:	inc    edx
  41de29:	or     esi,DWORD PTR [edi+0x4b]
  41de2c:	mov    ecx,0x79d02a8d
  41de31:	xchg   ecx,eax
  41de32:	or     DWORD PTR [eax-0xd],0x47
  41de36:	neg    DWORD PTR [esi]
  41de38:	idiv   BYTE PTR [esi-0x31]
  41de3b:	out    dx,al
  41de3c:	fistp  WORD PTR [esi+edx*4]
  41de3f:	dec    esi
  41de40:	fcom   QWORD PTR [ecx-0x38f99215]
  41de46:	mov    eax,ds:0x892be405
  41de4b:	mov    esp,ecx
  41de4d:	dec    edi
  41de4e:	pop    eax
  41de4f:	mov    ecx,0xc351fb9d
  41de54:	or     esp,ebp
  41de56:	inc    ecx
  41de57:	retf   
  41de58:	xor    DWORD PTR [esi+0x78],ebp
  41de5b:	scas   al,BYTE PTR es:[edi]
  41de5c:	add    ebp,ecx
  41de5e:	mov    DWORD PTR [ebx],ebx
  41de60:	sub    BYTE PTR [edi],al
  41de62:	jno    0x41de68
  41de64:	jp     0x41de79
  41de66:	jl     0x41de8d
  41de68:	fsubrp st(6),st
  41de6a:	inc    edi
  41de6b:	outs   dx,DWORD PTR ds:[esi]
  41de6c:	adc    dh,dh
  41de6e:	xchg   BYTE PTR ds:0x204c6248,bh
  41de74:	jb     0x41de80
  41de76:	mov    al,0x70
  41de78:	fs jge 0x41de60
  41de7b:	push   0x983dd9f0
  41de80:	and    BYTE PTR [ecx+0x3a4888b2],bl
  41de86:	enter  0xc526,0xc4
  41de8a:	out    0x97,al
  41de8c:	or     BYTE PTR [ebx-0x6ba2d50a],ah
  41de92:	mov    WORD PTR [eax],?
  41de94:	sub    DWORD PTR [edx+0x21],0xfffffffa
  41de98:	pop    edx
  41de99:	xor    bh,BYTE PTR [edi]
  41de9b:	je     0x41de53
  41de9d:	jae    0x41deb9
  41de9f:	push   esp
  41dea0:	xchg   ecx,eax
  41dea1:	in     eax,dx
  41dea2:	or     ebx,DWORD PTR [ecx]
  41dea4:	sbb    BYTE PTR [eax-0x7d],cl
  41dea7:	pushf  
  41dea8:	cli    
  41dea9:	loopne 0x41def4
  41deab:	sub    dh,bl
  41dead:	pop    edi
  41deae:	test   eax,0x40102ca3
  41deb3:	cld    
  41deb4:	ins    BYTE PTR es:[edi],dx
  41deb5:	arpl   WORD PTR ds:0x8f71fadd,bp
  41debb:	dec    edi
  41debc:	sbb    edi,esi
  41debe:	sti    
  41debf:	or     BYTE PTR ds:0xc6731c19,bl
  41dec5:	in     al,0xc3
  41dec7:	jmp    0x50d6:0xcd01eb3c
  41dece:	push   0xd65537bb
  41ded3:	inc    ebx
  41ded4:	nop
  41ded5:	daa    
  41ded6:	into   
  41ded7:	mov    gs,edi
  41ded9:	int    0x85
  41dedb:	add    ebp,esi
  41dedd:	xor    al,0x9c
  41dedf:	jne    0x41df2a
  41dee1:	or     BYTE PTR [esi],bh
  41dee3:	xchg   edx,eax
  41dee4:	add    edx,DWORD PTR [edx+0x3e]
  41dee7:	jmp    DWORD PTR [eax+0x2640daae]
  41deed:	mov    esp,0x5d00e41
  41def2:	pop    ds
  41def3:	push   ebp
  41def4:	cdq    
  41def5:	dec    ebx
  41def6:	mov    esp,0x8db951a7
  41defb:	mov    ds:0xf735e867,eax
  41df00:	xchg   ecx,eax
  41df01:	dec    ecx
  41df02:	imul   ecx,DWORD PTR [edx],0x48
  41df05:	popa   
  41df06:	popa   
  41df07:	sbb    eax,DWORD PTR [edx+0x1]
  41df0a:	adc    eax,0x30e67702
  41df0f:	stos   BYTE PTR es:[edi],al
  41df10:	in     eax,dx
  41df11:	pop    ds
  41df12:	cmp    BYTE PTR [esi+0x216bda3a],bh
  41df18:	cmp    ebp,eax
  41df1a:	jmp    0x41df0b
  41df1c:	out    0x38,eax
  41df1e:	jne    0x41ded1
  41df20:	dec    eax
  41df21:	daa    
  41df22:	mov    bh,BYTE PTR [ebx+0x1546c555]
  41df28:	int3   
  41df29:	xchg   edx,eax
  41df2a:	or     DWORD PTR [ebx-0x24],edx
  41df2d:	(bad)  
  41df2e:	int3   
  41df2f:	rol    BYTE PTR [esi+0x1f],cl
  41df32:	fldcw  WORD PTR [ecx+0x13]
  41df35:	stos   BYTE PTR es:[edi],al
  41df36:	push   0x861e7624
  41df3b:	std    
  41df3c:	adc    eax,0xf71f1541
  41df41:	or     al,BYTE PTR [ecx]
  41df43:	inc    ebx
  41df44:	jbe    0x41deda
  41df46:	clc    
  41df47:	clc    
  41df48:	test   eax,0xd072d426
  41df4d:	jae    0x41df6a
  41df4f:	add    DWORD PTR [ebx-0x42],esp
  41df52:	xor    DWORD PTR ds:0x1beae113,edi
  41df58:	sbb    dh,BYTE PTR [ebx-0x17]
  41df5b:	push   es
  41df5c:	or     BYTE PTR [ebx],ah
  41df5e:	xchg   ebx,eax
  41df5f:	xor    esi,DWORD PTR [edx+eax*8-0x38]
  41df63:	jge    0x41df2e
  41df65:	xor    ebp,DWORD PTR [ecx+0x36f7b0f]
  41df6b:	xchg   esi,eax
  41df6c:	sub    DWORD PTR [edi-0x3a],ecx
  41df6f:	or     DWORD PTR [ebp-0xf6dafa],esp
  41df75:	or     esi,DWORD PTR [edi]
  41df77:	ss (bad) 
  41df79:	mov    al,0x2a
  41df7b:	clc    
  41df7c:	push   ss
  41df7d:	test   BYTE PTR [eax-0x79291114],0xc8
  41df84:	add    al,BYTE PTR [esi-0xb42e3bc]
  41df8a:	(bad)  
  41df8b:	(bad)
  41df8f:	inc    ecx
  41df90:	adc    DWORD PTR [esi-0x7c],eax
  41df93:	sub    ch,BYTE PTR [ebx+0x6aab5f6c]
  41df99:	sub    al,0xf
  41df9b:	pop    ds
  41df9c:	or     BYTE PTR [eax],ah
  41df9e:	dec    edx
  41df9f:	loopne 0x41df55
  41dfa1:	push   ebx
  41dfa2:	mov    dl,0x4
  41dfa4:	daa    
  41dfa5:	jbe    0x41dfc1
  41dfa7:	adc    DWORD PTR [ecx],ecx
  41dfa9:	adc    DWORD PTR [esi-0x6b],0x19
  41dfad:	retf   0xfca9
  41dfb0:	addr16 fsub st(0),st
  41dfb3:	imul   esi,esp,0xffffffe0
  41dfb6:	sub    edi,edi
  41dfb8:	or     eax,eax
  41dfba:	stc    
  41dfbb:	fst    QWORD PTR [edx-0x705180d1]
  41dfc1:	or     ebp,0x7f75b589
  41dfc7:	ficom  DWORD PTR [ecx+0x5c]
  41dfca:	(bad)  
  41dfcc:	aam    0x89
  41dfce:	das    
  41dfcf:	inc    eax
  41dfd0:	jmp    0x909c:0xee561474
  41dfd7:	jo     0x41e034
  41dfd9:	outs   dx,DWORD PTR ds:[esi]
  41dfda:	aaa    
  41dfdb:	adc    BYTE PTR [ebx-0x69aa6749],dl
  41dfe1:	shr    BYTE PTR [ebx],cl
  41dfe3:	out    dx,eax
  41dfe4:	push   ds
  41dfe5:	(bad)  
  41dfe6:	call   0xfb26:0xb11a7e0e
  41dfed:	push   eax
  41dfee:	dec    ecx
  41dfef:	cmp    DWORD PTR [edi-0x2bfc375],eax
  41dff5:	adc    ebx,DWORD PTR [ebx+0x3ee8e176]
  41dffb:	push   ds
  41dffc:	mul    bl
  41dffe:	inc    ebx
  41dfff:	push   edx
  41e000:	jae    0x41e04d
  41e002:	mov    ebp,0x37c65c9d
  41e007:	iret   
  41e008:	xchg   BYTE PTR [edx-0x2cfcbe65],bh
  41e00e:	xor    eax,0xa580d3be
  41e013:	xchg   ebx,eax
  41e014:	inc    edx
  41e015:	cli    
  41e016:	fnstenv [eax]
  41e018:	push   edx
  41e019:	mov    esi,0x46707657
  41e01e:	scas   eax,DWORD PTR es:[edi]
  41e01f:	or     ebp,DWORD PTR [eax+0x29]
  41e022:	and    DWORD PTR [ecx+0x59],eax
  41e025:	mov    dl,0x30
  41e027:	mov    ah,0x1b
  41e029:	jbe    0x41dfdd
  41e02b:	popa   
  41e02c:	call   0x90a69657
  41e031:	push   ecx
  41e032:	sub    BYTE PTR [edi+0x50],dl
  41e035:	push   es
  41e036:	xchg   ebx,eax
  41e037:	ror    bh,1
  41e039:	adc    eax,DWORD PTR [ebx-0x1e96c2bc]
  41e03f:	dec    ebp
  41e040:	addr16 jne 0x41e06f
  41e043:	add    DWORD PTR [ebp+edi*1+0x7f],esi
  41e047:	out    0x6e,al
  41e049:	or     DWORD PTR [edx+0x58],esp
  41e04c:	cmp    al,bl
  41e04e:	pop    esp
  41e04f:	dec    ebp
  41e050:	in     eax,0x89
  41e052:	fidiv  DWORD PTR [esi]
  41e054:	mov    BYTE PTR [edx],ah
  41e056:	lods   eax,DWORD PTR ds:[esi]
  41e057:	inc    edi
  41e058:	jns    0x41e04e
  41e05a:	push   0x2c
  41e05c:	pushw  ss
  41e05e:	mov    ebp,es
  41e060:	dec    ecx
  41e061:	cdq    
  41e062:	mov    BYTE PTR [edx-0x2b],bh
  41e065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e066:	test   eax,0xf88c0159
  41e06b:	std    
  41e06c:	fsub   DWORD PTR [edi-0x4d5cee16]
  41e072:	xchg   edx,eax
  41e073:	gs push ebp
  41e075:	or     BYTE PTR [eax+0x21],bl
  41e078:	pop    esi
  41e079:	jp     0x41e03d
  41e07b:	in     al,0xf8
  41e07d:	xchg   ecx,eax
  41e07e:	nop
  41e07f:	mov    BYTE PTR [eax+ebp*1-0x4945bff7],dl
  41e086:	and    bh,BYTE PTR [esp+ecx*4]
  41e089:	in     eax,0xc3
  41e08b:	push   edx
  41e08c:	sahf   
  41e08d:	jmp    0x41e0ba
  41e08f:	adc    dh,BYTE PTR [edi]
  41e091:	sbb    bl,BYTE PTR [esi]
  41e093:	mov    ds:0xcb72c5b0,al
  41e098:	test   esp,eax
  41e09a:	fcom   st(0)
  41e09c:	add    bh,ch
  41e09e:	test   al,0xb4
  41e0a0:	fchs   
  41e0a2:	enter  0x102a,0x85
  41e0a6:	xchg   DWORD PTR [eax-0x5b],ecx
  41e0a9:	cmp    edx,edi
  41e0ab:	retf   0x2aac
  41e0ae:	jns    0x41e06f
  41e0b0:	aad    0x85
  41e0b2:	jae    0x41e128
  41e0b4:	pop    esi
  41e0b5:	(bad)  
  41e0b7:	fstp   DWORD PTR [edi]
  41e0b9:	out    0x34,al
  41e0bb:	out    dx,eax
  41e0bc:	adc    DWORD PTR [ecx+0x97edd37],esi
  41e0c2:	retf   0xee12
  41e0c5:	sbb    dh,BYTE PTR [edi]
  41e0c7:	dec    edi
  41e0c8:	inc    esi
  41e0c9:	mov    esi,0xd8663ae9
  41e0ce:	xor    esi,DWORD PTR [ecx-0x52]
  41e0d1:	sar    bh,1
  41e0d3:	dec    edi
  41e0d4:	scas   al,BYTE PTR es:[edi]
  41e0d5:	mov    al,bl
  41e0d7:	int    0x53
  41e0d9:	call   0xb309:0xba59a764
  41e0e0:	inc    ecx
  41e0e1:	pushf  
  41e0e2:	hlt    
  41e0e3:	jmp    0x156eb803
  41e0e8:	sub    dh,al
  41e0ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0eb:	loope  0x41e0b5
  41e0ed:	sbb    ebp,esp
  41e0ef:	sub    BYTE PTR [eax],dh
  41e0f1:	pop    edi
  41e0f2:	rcl    DWORD PTR [ebx+0x7],0x3d
  41e0f6:	inc    esp
  41e0f7:	and    ch,ch
  41e0f9:	sub    esi,esi
  41e0fb:	push   ebx
  41e0fc:	sub    bl,BYTE PTR [ebp+0x73]
  41e0ff:	rcr    BYTE PTR [edx],cl
  41e101:	push   edi
  41e102:	xchg   esp,eax
  41e103:	inc    esi
  41e104:	(bad)  
  41e105:	pop    ss
  41e106:	xchg   ebp,eax
  41e107:	stos   DWORD PTR es:[edi],eax
  41e108:	push   ds
  41e109:	(bad)  
  41e10a:	mov    ds:0x9c83ed07,al
  41e10f:	leave  
  41e110:	cmp    eax,ecx
  41e112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e113:	xor    BYTE PTR [ebx+0x31],0x9a
  41e117:	adc    edi,0xffffffae
  41e11a:	sar    DWORD PTR ds:0xaff1a88e,1
  41e120:	xor    al,0x6d
  41e122:	pop    ebx
  41e123:	lahf   
  41e124:	dec    ebp
  41e125:	ret    0xaa90
  41e128:	mov    DWORD PTR [ecx+0x68907e6c],ebx
  41e12e:	sub    dh,bl
  41e130:	ins    DWORD PTR es:[edi],dx
  41e131:	mov    ebx,0x752d65b5
  41e136:	xchg   esp,eax
  41e137:	mov    edx,DWORD PTR ds:0xe42a2e74
  41e13d:	leave  
  41e13e:	mov    bh,0xfb
  41e140:	gs pop edx
  41e142:	mov    ah,0xb0
  41e144:	idiv   DWORD PTR [eax+0x1b]
  41e147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e148:	and    al,0x21
  41e14a:	cmp    al,0x61
  41e14c:	popf   
  41e14d:	loopne 0x41e168
  41e14f:	adc    bh,BYTE PTR [ebx-0x2fdc5e97]
  41e155:	xchg   ecx,eax
  41e156:	add    cl,ch
  41e158:	lahf   
  41e159:	jns    0x41e129
  41e15b:	cmp    ch,dh
  41e15d:	test   al,0xd2
  41e15f:	dec    ecx
  41e160:	inc    BYTE PTR [edx+eax*4-0x79]
  41e164:	(bad)  
  41e165:	mov    edi,0x45cb0c19
  41e16a:	jecxz  0x41e158
  41e16c:	push   cs
  41e16d:	adc    DWORD PTR [edx+0x42],0x9fe6c732
  41e174:	and    al,0xeb
  41e176:	or     BYTE PTR ds:0xaa335da8,al
  41e17c:	cdq    
  41e17d:	push   0xa80ad924
  41e182:	(bad)
  41e185:	nop
  41e186:	dec    esp
  41e187:	lock pop edi
  41e189:	loopne 0x41e206
  41e18b:	cs retf 0xa1b
  41e18f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e190:	xchg   DWORD PTR [esi],edx
  41e192:	lea    edx,[esi+0x738568c9]
  41e198:	add    eax,0x656c0853
  41e19d:	inc    edi
  41e19e:	sbb    al,0x35
  41e1a0:	pop    esi
  41e1a1:	dec    edi
  41e1a2:	call   0x97a7:0x5bb828ae
  41e1a9:	pop    eax
  41e1aa:	inc    esp
  41e1ab:	mov    dl,0x5f
  41e1ad:	and    eax,0x452cb1a3
  41e1b2:	int3   
  41e1b3:	imul   edi,DWORD PTR [ecx-0x61],0xaca20aae
  41e1ba:	jecxz  0x41e1ef
  41e1bc:	fwait
  41e1bd:	mov    eax,ds:0x1d64c281
  41e1c2:	sub    eax,0x511da51f
  41e1c7:	cmp    BYTE PTR [edx+edi*4-0x49],0xff
  41e1cc:	leave  
  41e1cd:	test   esp,0x899da863
  41e1d3:	xor    DWORD PTR [ebp+0x54af40ca],esp
  41e1d9:	jae    0x41e25a
  41e1db:	cmp    al,0xe0
  41e1dd:	inc    ebp
  41e1de:	rol    DWORD PTR [ebp+0x7e],cl
  41e1e1:	stos   DWORD PTR es:[edi],eax
  41e1e2:	call   0xfa45:0x67106f40
  41e1e9:	push   ss
  41e1ea:	push   cs
  41e1eb:	(bad)  
  41e1ec:	aas    
  41e1ed:	xchg   esi,eax
  41e1ee:	ret    
  41e1ef:	rol    BYTE PTR [ebx-0x2d],cl
  41e1f2:	or     dh,dh
  41e1f4:	mov    ds:0xd0857d60,eax
  41e1f9:	loop   0x41e1a1
  41e1fb:	stos   DWORD PTR es:[edi],eax
  41e1fc:	imul   esi,DWORD PTR [edi+edx*4+0xfc7a49e],0xebbcb1d9
  41e207:	js     0x41e22e
  41e209:	into   
  41e20a:	and    esi,edi
  41e20c:	mov    edx,0xd0c7930f
  41e211:	ficom  DWORD PTR [ebp-0x2f78a886]
  41e217:	cmc    
  41e218:	jecxz  0x41e1f2
  41e21a:	push   eax
  41e21b:	cmc    
  41e21c:	outs   dx,BYTE PTR ds:[esi]
  41e21d:	leave  
  41e21e:	stos   DWORD PTR es:[edi],eax
  41e21f:	popa   
  41e220:	in     eax,0xe5
  41e222:	addr16 gs iret 
  41e225:	std    
  41e226:	ret    
  41e227:	add    ebp,DWORD PTR [ecx]
  41e229:	cmp    DWORD PTR [esi],esp
  41e22b:	jae    0x41e299
  41e22d:	xor    bh,0x8b
  41e230:	nop
  41e231:	arpl   WORD PTR [edi-0x6d6cd401],cx
  41e237:	mov    ah,BYTE PTR [edx+0x0]
  41e23a:	test   eax,0xb94215e6
  41e23f:	call   0x110c35f
  41e244:	mov    ds:0xa55bf7c6,eax
  41e249:	fmul   st(1),st
  41e24b:	push   es
  41e24c:	xlat   BYTE PTR ds:[ebx]
  41e24d:	mov    ch,0x4
  41e24f:	xchg   ebp,eax
  41e250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e251:	fxch   st(6)
  41e253:	mov    ch,0x88
  41e255:	mov    edx,0x5c43c15c
  41e25a:	adc    eax,0x231d1268
  41e25f:	cli    
  41e260:	mov    eax,DWORD PTR [eax+edi*2-0x66]
  41e264:	push   esp
  41e265:	jnp    0x41e263
  41e267:	hlt    
  41e268:	and    esp,DWORD PTR [ecx-0xe43925a]
  41e26e:	outs   dx,DWORD PTR ds:[esi]
  41e26f:	call   0x77f6:0xa4816030
  41e276:	lock xchg BYTE PTR [ebx],ah
  41e279:	pop    ebx
  41e27a:	data16 std 
  41e27c:	xor    BYTE PTR [ebp-0x6e],bh
  41e27f:	push   ecx
  41e280:	sbb    al,0xee
  41e282:	dec    ebp
  41e283:	jb     0x41e284
  41e285:	mov    al,ds:0x49115c90
  41e28a:	push   ds
  41e28b:	scas   eax,DWORD PTR es:[edi]
  41e28c:	mul    BYTE PTR [edx-0x1d]
  41e28f:	mov    bl,0xc9
  41e291:	add    bl,BYTE PTR [ebp+0x562aeaac]
  41e297:	cs gs inc ebx
  41e29a:	mov    ds:0xf3a7c042,al
  41e29f:	loop   0x41e23b
  41e2a1:	mov    WORD PTR [ebx+0x0],gs
  41e2a4:	mov    ebp,0x0
	...
  41e481:	scas   eax,DWORD PTR es:[edi]
  41e482:	ror    esp,1
  41e484:	push   esp
  41e485:	(bad)  
  41e486:	pop    ebp
  41e487:	mov    edi,0x5e13fbfb
  41e48c:	cmp    DWORD PTR [edx],esp
  41e48e:	sbb    BYTE PTR [esp+edi*2-0x12],ch
  41e492:	loop   0x41e495
  41e494:	add    BYTE PTR ds:0xcb000007,ah
  41e49a:	xor    BYTE PTR [edi+0x54],dh
  41e49d:	xchg   esp,eax
  41e49e:	xchg   esi,eax
  41e49f:	sub    al,0xed
  41e4a1:	das    
  41e4a2:	mov    ds:0xc5a0a163,al
  41e4a7:	dec    esp
  41e4a8:	test   ch,cl
  41e4aa:	jo     0x41e495
  41e4ac:	sub    ebp,DWORD PTR [ecx]
  41e4ae:	out    dx,al
  41e4af:	dec    edi
  41e4b0:	nop
  41e4b1:	pushf  
  41e4b2:	push   cs
  41e4b3:	adc    ah,BYTE PTR [ecx-0x8]
  41e4b6:	les    ecx,FWORD PTR [eax]
  41e4b8:	or     ebp,eax
  41e4ba:	xchg   ecx,eax
  41e4bb:	fimul  WORD PTR [esi]
  41e4bd:	rcr    BYTE PTR [ebp+eax*4+0x11],cl
  41e4c1:	cmc    
  41e4c2:	xor    DWORD PTR [eax+0x14],ebx
  41e4c5:	gs cdq 
  41e4c7:	outs   dx,DWORD PTR ds:[esi]
  41e4c8:	rsm    
  41e4ca:	ret    0x8837
  41e4cd:	jns    0x41e540
  41e4cf:	call   0x6caf2158
  41e4d4:	dec    esi
  41e4d5:	jl     0x41e547
  41e4d7:	repz in al,dx
  41e4d9:	rcr    BYTE PTR [ecx+0x1a],0x60
  41e4dd:	jbe    0x41e4db
  41e4df:	in     al,dx
  41e4e0:	or     dh,BYTE PTR [ebp+eax*1-0x7d]
  41e4e4:	cmp    al,0x67
  41e4e6:	sbb    eax,0x770171fa
  41e4eb:	xlat   BYTE PTR ds:[ebx]
  41e4ec:	popa   
  41e4ed:	repz cmp eax,0x93ad4eca
  41e4f3:	test   DWORD PTR [eax+ebx*2-0x5d],0x9c4042b0
  41e4fb:	mov    ah,0x16
  41e4fd:	lods   al,BYTE PTR ds:[esi]
  41e4fe:	jg     0x41e507
  41e500:	ret    0x3a06
  41e503:	mov    ds:0x145bb79a,eax
  41e508:	sbb    ebx,eax
  41e50a:	adc    al,0x92
  41e50c:	shl    esp,cl
  41e50e:	jno    0x41e50e
  41e510:	dec    esi
  41e511:	adc    cl,BYTE PTR [edi]
  41e513:	test   al,0x1f
  41e515:	jle    0x41e4b8
  41e517:	pop    esi
  41e518:	in     al,0x39
  41e51a:	(bad)  
  41e51b:	dec    edx
  41e51c:	retw   
  41e51e:	test   ch,dh
  41e520:	aam    0xee
  41e522:	in     eax,dx
  41e523:	xchg   esi,eax
  41e524:	cld    
  41e525:	push   ss
  41e526:	nop
  41e527:	mov    ah,0x5f
  41e529:	inc    edx
  41e52a:	xor    dl,dl
  41e52c:	jmp    0xb7086a84
  41e531:	jbe    0x41e4f2
  41e533:	add    DWORD PTR ds:0x70a28ba,eax
  41e539:	out    dx,al
  41e53a:	jae    0x41e533
  41e53c:	popa   
  41e53d:	pop    eax
  41e53e:	add    BYTE PTR [eax-0x10],dl
  41e541:	mov    es,WORD PTR [ecx-0x72]
  41e544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e545:	fild   DWORD PTR [edx]
  41e547:	mov    ebx,DWORD PTR [edi]
  41e549:	test   BYTE PTR [ebx],0xa5
  41e54c:	retf   0x9ea4
  41e54f:	les    eax,FWORD PTR [edx+0x3]
  41e552:	push   ss
  41e553:	dec    eax
  41e554:	loope  0x41e58a
  41e556:	jb     0x41e59b
  41e558:	out    0xd1,eax
  41e55a:	jl     0x41e541
  41e55c:	push   0x4c
  41e55e:	push   0xfffffff8
  41e560:	fist   DWORD PTR ds:0xe6182dd2
  41e566:	pop    ebx
  41e567:	repz mov esp,DWORD PTR [edi-0x4095a203]
  41e56e:	loop   0x41e56e
  41e570:	stos   BYTE PTR es:[edi],al
  41e571:	pop    ebx
  41e572:	test   al,0x43
  41e574:	dec    ebx
  41e575:	ret    
  41e576:	(bad)  
  41e577:	adc    dh,BYTE PTR [ebx+0x3b]
  41e57a:	and    ah,BYTE PTR ds:0x363619d9
  41e580:	adc    BYTE PTR [esp+edi*2],bh
  41e583:	push   es
  41e584:	inc    ebx
  41e585:	mov    ch,0xea
  41e587:	xchg   ebx,eax
  41e588:	push   esi
  41e589:	stos   BYTE PTR es:[edi],al
  41e58a:	cli    
  41e58b:	les    ecx,FWORD PTR [edi+0x26ec4c50]
  41e591:	jo     0x41e598
  41e593:	in     al,dx
  41e594:	mov    edi,0xf892739
  41e599:	dec    ecx
  41e59a:	dec    esp
  41e59b:	das    
  41e59c:	push   ds
  41e59d:	rcr    DWORD PTR [ecx],cl
  41e59f:	adc    DWORD PTR [edi+esi*8],0x4
  41e5a3:	das    
  41e5a4:	push   esi
  41e5a5:	xor    esp,DWORD PTR [ebx+ecx*2]
  41e5a8:	add    ecx,DWORD PTR [ecx+edi*2+0x599baa4a]
  41e5af:	or     eax,0x39f4bb5f
  41e5b4:	ret    0xb739
  41e5b7:	pop    esp
  41e5b8:	rol    DWORD PTR [ebx-0x3f],0x68
  41e5bc:	fld    DWORD PTR [edx+0x2c31ca32]
  41e5c2:	mov    dh,0x36
  41e5c4:	dec    esp
  41e5c5:	or     DWORD PTR [edx],0x3a33295f
  41e5cb:	imul   edi,DWORD PTR [ebp+0x36cdd2cf],0xffffffec
  41e5d2:	cs push ecx
  41e5d4:	inc    ebx
  41e5d5:	ss xchg esi,eax
  41e5d7:	fwait
  41e5d8:	mov    esp,0x1d30efe9
  41e5dd:	popa   
  41e5de:	ret    
  41e5df:	cmp    ebp,DWORD PTR [ecx+0x6369242b]
  41e5e5:	scas   eax,DWORD PTR es:[edi]
  41e5e6:	jnp    0x41e666
  41e5e8:	imul   eax,DWORD PTR [eax-0x138c92a1],0xa6e41184
  41e5f2:	les    ebp,FWORD PTR [esi]
  41e5f4:	sbb    bl,BYTE PTR [esi-0x39]
  41e5f7:	dec    ecx
  41e5f8:	aam    0x53
  41e5fa:	inc    ecx
  41e5fb:	loop   0x41e627
  41e5fd:	ficomp WORD PTR [edi+0x75c5316c]
  41e603:	xor    ebp,DWORD PTR [edx-0x21]
  41e606:	mov    ch,0xc3
  41e608:	inc    edi
  41e609:	xchg   BYTE PTR [edi+0x3e],cl
  41e60c:	sub    dl,BYTE PTR [edx]
  41e60e:	rcr    BYTE PTR [edx+0x3d175a60],cl
  41e614:	(bad)  
  41e615:	aad    0x97
  41e617:	popa   
  41e618:	lock lods eax,DWORD PTR ds:[esi]
  41e61a:	pop    edi
  41e61b:	in     eax,0xeb
  41e61d:	dec    edx
  41e61e:	and    DWORD PTR ds:0x20f83429,edx
  41e624:	out    dx,al
  41e625:	les    esp,FWORD PTR [esi+0x36717a32]
  41e62b:	mov    edx,0xac9275c3
  41e630:	add    dl,BYTE PTR [edi]
  41e632:	pop    esp
  41e633:	jae    0x41e699
  41e635:	aaa    
  41e636:	mov    cl,0x46
  41e638:	push   ebx
  41e639:	push   ss
  41e63a:	icebp  
  41e63b:	lods   eax,DWORD PTR ds:[esi]
  41e63c:	sub    eax,0xcb808199
  41e641:	mov    dl,0x79
  41e643:	xor    DWORD PTR ds:0xa4d68290,0xd2e29abb
  41e64d:	push   esp
  41e64e:	cmp    esp,DWORD PTR [esi+0x1e]
  41e651:	dec    edi
  41e652:	test   BYTE PTR [ebx-0xc],bh
  41e655:	pusha  
  41e656:	fild   DWORD PTR [edi]
  41e658:	jl     0x41e65f
  41e65a:	lods   eax,DWORD PTR ds:[esi]
  41e65b:	aas    
  41e65c:	fsubr  DWORD PTR ds:0x72aa47f1
  41e662:	and    eax,0xf333bd2c
  41e667:	dec    ebp
  41e668:	adc    edi,DWORD PTR [edi-0x38]
  41e66b:	inc    ecx
  41e66c:	push   0x17
  41e66e:	fst    QWORD PTR ds:0x91716eeb
  41e674:	xor    dl,ch
  41e676:	ret    
  41e677:	jg     0x41e6a2
  41e679:	fdivr  DWORD PTR [esi+0x5f]
  41e67c:	call   0x4897:0xd3555a37
  41e683:	mov    ch,bh
  41e685:	cdq    
  41e686:	jmp    0x2497:0x460cbc33
  41e68d:	loope  0x41e670
  41e68f:	or     eax,0xd98ef438
  41e694:	gs sbb eax,0xe62670d1
  41e69a:	and    cl,BYTE PTR [ecx+0x54]
  41e69d:	jnp    0x41e6be
  41e69f:	sub    al,0xef
  41e6a1:	in     al,0x84
  41e6a3:	enter  0x8514,0xc7
  41e6a7:	mov    bh,0x6e
  41e6a9:	arpl   WORD PTR [ecx+0x2302420a],sp
  41e6af:	pop    ebx
  41e6b0:	adc    eax,0x52835bdd
  41e6b5:	adc    edx,ecx
  41e6b7:	adc    eax,0x1eadb835
  41e6bc:	fdivr  QWORD PTR [ebp+0x437de4a0]
  41e6c2:	rcl    dl,cl
  41e6c4:	imul   esp,DWORD PTR [ecx+0x79],0x15
  41e6c8:	sahf   
  41e6c9:	push   esp
  41e6ca:	sbb    BYTE PTR [edi],0xfd
  41e6cd:	les    edx,FWORD PTR [edi]
  41e6cf:	in     eax,0xe8
  41e6d1:	ds xchg esi,eax
  41e6d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6d4:	jae    0x41e728
  41e6d6:	sbb    dh,BYTE PTR [ebx-0x59]
  41e6d9:	cmp    eax,0xe3948f4
  41e6de:	cmp    cl,BYTE PTR [esi+0x595db465]
  41e6e4:	js     0x41e71c
  41e6e6:	lock xor dh,BYTE PTR [ebx-0x40]
  41e6ea:	mov    bh,0x2b
  41e6ec:	xchg   BYTE PTR [esi-0x41e52ae8],cl
  41e6f2:	push   ecx
  41e6f3:	imul   ebp,ebp,0x30
  41e6f6:	pop    ebx
  41e6f7:	ins    BYTE PTR es:[edi],dx
  41e6f8:	lea    ecx,ds:[edx+0x119a06bd]
  41e6ff:	scas   eax,DWORD PTR es:[edi]
  41e700:	test   al,0x5c
  41e702:	lods   al,BYTE PTR ds:[esi]
  41e703:	inc    ebx
  41e704:	sub    ebx,DWORD PTR [esi+ebx*1]
  41e707:	mov    al,0x56
  41e709:	test   al,0x7
  41e70b:	fld    QWORD PTR [edx]
  41e70d:	in     eax,0x31
  41e70f:	out    0x43,al
  41e711:	xor    DWORD PTR [ecx-0x7f23b3e],0x7
  41e718:	cld    
  41e719:	int    0x34
  41e71b:	out    0xd6,al
  41e71d:	popf   
  41e71e:	fcom   QWORD PTR [edx+0x61]
  41e721:	(bad)  
  41e722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e723:	xor    ah,BYTE PTR [edx+0x1a]
  41e726:	push   eax
  41e727:	out    dx,eax
  41e728:	or     edi,esp
  41e72a:	jno    0x41e6e3
  41e72c:	mov    cl,0xb7
  41e72e:	xchg   edx,eax
  41e72f:	sub    al,0xbc
  41e731:	fisubr DWORD PTR [ebx]
  41e733:	les    ebp,FWORD PTR [ebx+0x254d5a9f]
  41e739:	push   es
  41e73a:	push   cs
  41e73b:	fwait
  41e73c:	stc    
  41e73d:	mov    ah,0xb2
  41e73f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e740:	dec    esi
  41e741:	(bad)  
  41e742:	pop    eax
  41e743:	and    al,0x17
  41e745:	sbb    BYTE PTR [edi-0x67],dl
  41e748:	xor    al,BYTE PTR [esi]
  41e74a:	jp     0x41e6f3
  41e74c:	mov    ch,0x2c
  41e74e:	or     eax,0x78732e96
  41e753:	das    
  41e754:	mov    dl,0x47
  41e756:	in     eax,0x3a
  41e758:	shl    BYTE PTR [eax],cl
  41e75a:	pop    eax
  41e75b:	xchg   edx,eax
  41e75c:	lahf   
  41e75d:	push   edi
  41e75e:	jbe    0x41e78d
  41e760:	aam    0xc8
  41e762:	repnz xchg esp,eax
  41e764:	mov    esp,0x937afd5e
  41e769:	mov    bl,0xe2
  41e76b:	pop    ebx
  41e76c:	or     dh,dl
  41e76e:	jle    0x41e70d
  41e770:	jo     0x41e73a
  41e772:	cmp    DWORD PTR [edi],esp
  41e774:	nop
  41e775:	lahf   
  41e776:	repz test al,0xd0
  41e779:	fdiv   QWORD PTR [ebx-0x41e0c120]
  41e77f:	cmp    eax,DWORD PTR [edx-0x41a22c3c]
  41e785:	adc    al,0x74
  41e787:	or     BYTE PTR [ecx+0x54],al
  41e78a:	sub    esp,ebp
  41e78c:	mov    ds:0x7fc160d3,al
  41e791:	nop
  41e792:	fs repz jb 0x41e7e1
  41e796:	lea    esp,[ebx+0x45]
  41e799:	jne    0x41e78d
  41e79b:	adc    DWORD PTR [edx-0x62e283de],edi
  41e7a1:	jmp    0x2581:0xd107b0c6
  41e7a8:	div    edx
  41e7aa:	mov    ebp,0xcc04b8f9
  41e7af:	ins    BYTE PTR es:[edi],dx
  41e7b0:	cwde   
  41e7b1:	jo     0x41e75e
  41e7b3:	cmp    BYTE PTR [esi],ch
  41e7b5:	or     eax,0xf3cbb668
  41e7ba:	retf   
  41e7bb:	cdq    
  41e7bc:	lods   al,BYTE PTR ds:[esi]
  41e7bd:	pop    ss
  41e7be:	(bad)  
  41e7bf:	stc    
  41e7c0:	mov    ch,0xb4
  41e7c2:	and    dl,BYTE PTR [ecx+0x738997a6]
  41e7c8:	aad    0xe1
  41e7ca:	cmp    al,dh
  41e7cc:	jp     0x41e780
  41e7ce:	(bad)  
  41e7cf:	ins    DWORD PTR es:[edi],dx
  41e7d0:	push   ss
  41e7d1:	jnp    0x41e7e5
  41e7d3:	sub    dl,dh
  41e7d5:	lea    edx,ds:0x21cb7b1e
  41e7db:	std    
  41e7dc:	ret    
  41e7dd:	mov    WORD PTR [esi],ss
  41e7df:	ss test eax,0x578da889
  41e7e5:	idiv   bh
  41e7e7:	adc    al,0xac
  41e7e9:	stos   DWORD PTR es:[edi],eax
  41e7ea:	push   0xffffff95
  41e7ec:	sub    eax,0x5207f79d
  41e7f1:	dec    edx
  41e7f2:	push   ss
  41e7f3:	std    
  41e7f4:	std    
  41e7f5:	loope  0x41e819
  41e7f7:	jge    0x41e779
  41e7f9:	mov    ?,WORD PTR [eax+0x41]
  41e7fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7fd:	lods   eax,DWORD PTR ds:[esi]
  41e7fe:	inc    ebp
  41e7ff:	jmp    0x63db69e2
  41e804:	pop    esp
  41e805:	test   BYTE PTR [edx+0x2d],dh
  41e808:	sub    ebx,edi
  41e80a:	jg     0x41e863
  41e80c:	fisttp WORD PTR [edi-0x52d43e84]
  41e812:	mov    eax,0xd2d706bd
  41e817:	push   eax
  41e818:	sub    DWORD PTR [edx-0x9f6c0b],0x5c
  41e81f:	push   esp
  41e820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e821:	or     al,0x22
  41e823:	xor    eax,0x9ae1adac
  41e828:	jg     0x41e897
  41e82a:	pop    edi
  41e82b:	int    0xd8
  41e82d:	xchg   esi,eax
  41e82e:	cmp    eax,0xdcde9be1
  41e833:	jl     0x41e894
  41e835:	gs test eax,0x9c8938c
  41e83b:	les    ebp,FWORD PTR ds:0x8ee9d740
  41e841:	sub    DWORD PTR ds:0xcc17d5a,esp
  41e847:	outs   dx,BYTE PTR ds:[esi]
  41e848:	inc    edi
  41e849:	pop    edx
  41e84a:	in     eax,0x8a
  41e84c:	test   al,0x21
  41e84e:	jmp    0x24cd:0x7eabb791
  41e855:	popa   
  41e856:	push   ss
  41e857:	test   DWORD PTR [edi+0x2c],ebp
  41e85a:	sub    ebx,DWORD PTR [esi+0x6989d1dc]
  41e860:	cs hlt 
  41e862:	xchg   BYTE PTR [eax+0x6f],al
  41e865:	icebp  
  41e866:	jns    0x41e80d
  41e868:	repnz and DWORD PTR [eax+ebp*2+0x3ae9bf7b],eax
  41e870:	lahf   
  41e871:	lahf   
  41e872:	mov    WORD PTR [ecx],fs
  41e874:	xlat   BYTE PTR ds:[ebx]
  41e875:	test   al,0x35
  41e877:	jge    0x41e82a
  41e879:	js     0x41e8d8
  41e87b:	or     esi,0xffffffdf
  41e87e:	aaa    
  41e87f:	pop    ds
  41e880:	ret    0x57fe
  41e883:	pop    edx
  41e884:	push   eax
  41e885:	mov    al,0x8d
  41e887:	push   ds
  41e888:	out    0xc0,ax
  41e88b:	inc    edi
  41e88c:	mov    ds:0x971eb4d4,al
  41e891:	or     ch,bl
  41e893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e894:	int    0x2b
  41e896:	jg     0x41e8c8
  41e898:	ins    DWORD PTR es:[edi],dx
  41e899:	out    dx,al
  41e89a:	ss addr16 int3 
  41e89d:	fadd   QWORD PTR [edx+0x21]
  41e8a0:	cld    
  41e8a1:	push   0xf7f4ebf1
  41e8a6:	fwait
  41e8a7:	mov    ebp,0x9dadb151
  41e8ac:	add    esi,ebx
  41e8ae:	inc    ecx
  41e8af:	hlt    
  41e8b0:	ret    0xa2d3
  41e8b3:	je     0x41e8d7
  41e8b5:	push   cs
  41e8b6:	fucomi st,st(4)
  41e8b8:	push   es
  41e8b9:	mov    al,0xf6
  41e8bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8bc:	adc    edx,DWORD PTR [ebx]
  41e8be:	lea    ebp,[ebx+ecx*8]
  41e8c1:	popa   
  41e8c2:	xor    eax,0x3fb672d9
  41e8c7:	cdq    
  41e8c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8c9:	xor    eax,DWORD PTR [edi+0x233aa023]
  41e8cf:	mov    esp,ecx
  41e8d1:	xor    DWORD PTR [edx-0x47],ecx
  41e8d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8d5:	aaa    
  41e8d6:	test   eax,0xd31d4e26
  41e8db:	adc    eax,0xa7e7fe77
  41e8e0:	adc    eax,0x39550c6f
  41e8e5:	inc    BYTE PTR [eax+0x1]
  41e8e8:	or     BYTE PTR [ecx],al
  41e8ea:	aam    0x44
  41e8ec:	or     eax,DWORD PTR [ebp+0x1d]
  41e8ef:	int    0x1a
  41e8f1:	aas    
  41e8f2:	lock xchg ebx,eax
  41e8f4:	mov    dl,0xd3
  41e8f6:	push   ds
  41e8f7:	lock jb 0x41e89e
  41e8fa:	jle    0x41e938
  41e8fc:	(bad)  
  41e8fd:	lods   al,BYTE PTR ds:[esi]
  41e8fe:	lds    edi,FWORD PTR [eax+0x57e52bd8]
  41e904:	not    DWORD PTR [esi]
  41e906:	jmp    0x135:0xe3bb4eac
  41e90d:	test   BYTE PTR [ecx-0x3a6846b],0x65
  41e914:	inc    ebp
  41e915:	sar    DWORD PTR [esi+0xbb6b23d],1
  41e91b:	inc    BYTE PTR [eax-0x22884bc4]
  41e921:	test   eax,0xe655b882
  41e926:	sub    BYTE PTR [esi+0x43d7f18f],bl
  41e92c:	call   0x63e3:0x3779d853
  41e933:	push   ebp
  41e934:	cmp    al,0x5
  41e936:	jl     0x41e8ec
  41e938:	retf   
  41e939:	dec    eax
  41e93a:	cdq    
  41e93b:	jne    0x41e8cf
  41e93d:	cmp    eax,0x115d6f6a
  41e942:	add    DWORD PTR [esi+0x22],edx
  41e945:	ret    0x9a7e
  41e948:	inc    eax
  41e949:	jne    0x41e8db
  41e94b:	jmp    0x22ec169c
  41e950:	mov    al,0x90
  41e952:	sbb    esi,esp
  41e954:	hlt    
  41e955:	les    ebp,FWORD PTR [eax]
  41e957:	das    
  41e958:	ja     0x41e9a0
  41e95a:	imul   eax,edx,0x34
  41e95d:	dec    edi
  41e95e:	in     eax,0x54
  41e960:	sub    esi,ecx
  41e962:	xchg   ebp,eax
  41e963:	pop    ecx
  41e964:	jo     0x41e9a2
  41e966:	cmc    
  41e967:	mov    ebx,0x4480ffb7
  41e96c:	ds sub ch,dl
  41e96f:	sti    
  41e970:	xor    DWORD PTR [edi+0x62a8c437],ebp
  41e976:	addr16 mov ds:0x63f,al
  41e97a:	not    DWORD PTR [esi]
  41e97c:	dec    ebx
  41e97d:	jbe    0x41e9c8
  41e97f:	int3   
  41e980:	jl     0x41e9ac
  41e982:	popf   
  41e983:	imul   BYTE PTR [edx]
  41e985:	in     al,dx
  41e986:	and    esi,ebx
  41e988:	and    eax,0x35bd89dd
  41e98d:	lahf   
  41e98e:	mov    ebx,DWORD PTR [eax-0x40]
  41e991:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e992:	repnz in eax,dx
  41e994:	arpl   bp,sp
  41e996:	cli    
  41e997:	mov    dl,0x6e
  41e999:	sub    DWORD PTR [ecx],ecx
  41e99b:	mov    al,ds:0x870970e0
  41e9a0:	(bad)  
  41e9a1:	maskmovq mm0,(bad)
  41e9a2:	test   DWORD PTR [esi],0xcf3ef17e
  41e9a8:	into   
  41e9a9:	aam    0x7a
  41e9ab:	fnstenv [edi-0x5552691e]
  41e9b1:	add    bh,BYTE PTR [edx+0x60]
  41e9b4:	ja     0x41e9fb
  41e9b6:	mov    ebx,esp
  41e9b8:	adc    ch,al
  41e9ba:	jl     0x41e940
  41e9bc:	mov    al,0x6a
  41e9be:	pop    ebx
  41e9bf:	or     cl,dh
  41e9c1:	out    0x8e,eax
  41e9c3:	mov    cs,ebx
  41e9c5:	add    eax,0x562f6c3b
  41e9ca:	push   es
  41e9cb:	out    dx,al
  41e9cc:	mov    bh,BYTE PTR [ebp+0x3]
  41e9cf:	adc    edx,ebx
  41e9d1:	mov    dl,0x21
  41e9d3:	sub    DWORD PTR [esi+ecx*8+0x3e],ecx
  41e9d7:	mov    edi,0x7506f10b
  41e9dc:	adc    ebp,ebp
  41e9de:	sub    edi,DWORD PTR [edx]
  41e9e0:	xchg   ecx,eax
  41e9e1:	mov    eax,ds:0x381a575a
  41e9e6:	jnp    0x41e9c7
  41e9e8:	inc    edx
  41e9e9:	loop   0x41e9f7
  41e9eb:	push   cs
  41e9ec:	push   edx
  41e9ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9ee:	pop    esp
  41e9ef:	cmp    DWORD PTR [edx-0x80],eax
  41e9f2:	lods   al,BYTE PTR ds:[esi]
  41e9f3:	and    al,0xbc
  41e9f5:	mov    esi,0xd5c49c6e
  41e9fa:	add    ebx,DWORD PTR [ecx-0x31]
  41e9fd:	dec    ecx
  41e9fe:	mov    BYTE PTR [edx],dl
  41ea00:	test   esi,0x2340e713
  41ea06:	inc    edx
  41ea07:	push   es
  41ea08:	call   0xd832:0x612444a6
  41ea0f:	and    al,0xd6
  41ea11:	add    eax,DWORD PTR [edx+0x623aa202]
  41ea17:	inc    ebx
  41ea18:	mov    DWORD PTR [edi+0x1c],ebp
  41ea1b:	les    ebx,FWORD PTR [eax+edx*1]
  41ea1e:	xor    BYTE PTR [edi-0x49b367c2],0xd5
  41ea25:	outs   dx,DWORD PTR ds:[esi]
  41ea26:	int3   
  41ea27:	enter  0x874f,0x1e
  41ea2b:	and    ebx,DWORD PTR [edx]
  41ea2d:	mov    dh,0x1
  41ea2f:	jae    0x41ea12
  41ea31:	gs push eax
  41ea33:	lea    edi,[esp+esi*4]
  41ea36:	cwde   
  41ea37:	add    eax,0x14a22ecd
  41ea3c:	in     al,dx
  41ea3d:	in     eax,0xda
  41ea3f:	cmp    ch,0x29
  41ea42:	and    dh,BYTE PTR [esp+edi*8+0x5]
  41ea46:	call   0x1bc:0xabb7be5f
  41ea4d:	cli    
  41ea4e:	xchg   ebp,eax
  41ea4f:	sbb    ch,BYTE PTR [ecx]
  41ea51:	(bad)  
  41ea52:	fild   WORD PTR [eax+0x7f0b277d]
  41ea58:	test   BYTE PTR ds:0xafb79f7a,dh
  41ea5e:	push   ebx
  41ea5f:	loope  0x41ea25
  41ea61:	sbb    esi,DWORD PTR [edx+0x14]
  41ea64:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41ea66:	(bad)  
  41ea67:	lea    eax,[ebp+0x3d44d576]
  41ea6d:	xor    DWORD PTR [ecx+esi*2],ebx
  41ea70:	xchg   DWORD PTR [ecx+eax*8],esi
  41ea73:	mov    ebp,0xa1e9d638
  41ea78:	lods   al,BYTE PTR ds:[esi]
  41ea79:	sti    
  41ea7a:	mov    esp,0xfa15099a
  41ea7f:	pop    eax
  41ea80:	pop    esi
  41ea81:	push   ds
  41ea82:	fwait
  41ea83:	outs   dx,DWORD PTR ds:[esi]
  41ea84:	iret   
  41ea85:	test   ebp,edi
  41ea87:	in     eax,dx
  41ea88:	push   ebx
  41ea89:	(bad)  
  41ea8a:	mov    cl,0xfe
  41ea8c:	push   0x40
  41ea8e:	ret    0x3948
  41ea91:	nop
  41ea92:	adc    esi,DWORD PTR [ebx+0xd]
  41ea95:	aad    0x49
  41ea97:	xchg   edi,eax
  41ea98:	pop    ds
  41ea99:	mov    bl,0x6
  41ea9b:	and    al,0xeb
  41ea9d:	inc    ecx
  41ea9e:	loopne 0x41ea69
  41eaa0:	cmp    eax,0xf5669390
  41eaa5:	mov    cl,0x6c
  41eaa7:	repnz rol BYTE PTR [eax-0x4a],cl
  41eaab:	ds jmp 0x8829:0x97acc405
  41eab3:	(bad)  
  41eab4:	aas    
  41eab5:	mov    al,0x44
  41eab7:	jb     0x41eae1
  41eab9:	mov    eax,ds:0xe293f540
  41eabe:	push   cs
  41eabf:	xchg   DWORD PTR [eax+0x5e079010],edi
  41eac5:	mov    cs,WORD PTR [edi-0x20e46db]
  41eacb:	aas    
  41eacc:	and    cl,dl
  41eace:	push   es
  41eacf:	loope  0x41eac9
  41ead1:	int    0x9d
  41ead3:	xchg   edi,eax
  41ead4:	arpl   WORD PTR [edi+0x42],sp
  41ead7:	add    al,0x83
  41ead9:	(bad)  
  41eada:	adc    al,0x34
  41eadc:	inc    edi
  41eadd:	adc    BYTE PTR [edx],0x3a
  41eae0:	push   cs
  41eae1:	push   ebx
  41eae2:	xchg   ebp,eax
  41eae3:	pop    eax
  41eae4:	xchg   BYTE PTR [edx],dl
  41eae6:	enter  0x9a88,0x49
  41eaea:	mov    ds:0xd9a0d3ba,al
  41eaef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaf0:	xchg   edx,eax
  41eaf1:	clc    
  41eaf2:	xchg   edx,eax
  41eaf3:	dec    esi
  41eaf4:	xchg   esp,eax
  41eaf5:	pop    esi
  41eaf6:	inc    esi
  41eaf7:	mov    ch,0x7
  41eaf9:	imul   ebx,DWORD PTR [ecx],0xffffffe7
  41eafc:	push   0xffffffff
  41eafe:	inc    si
  41eb00:	dec    edx
  41eb01:	mov    ebx,DWORD PTR [ecx-0x29b90873]
  41eb07:	jge    0x41eae1
  41eb09:	in     eax,0x63
  41eb0b:	cwde   
  41eb0c:	ins    DWORD PTR es:[edi],dx
  41eb0d:	jb     0x41eacc
  41eb0f:	bound  edx,QWORD PTR [ebp-0x6cb42f45]
  41eb15:	test   al,0xbf
  41eb17:	push   ds
  41eb18:	out    dx,eax
  41eb19:	fmul   QWORD PTR [esi+0x30]
  41eb1c:	push   edx
  41eb1d:	dec    ebx
  41eb1e:	add    dh,BYTE PTR [ecx+0xe]
  41eb21:	rcl    DWORD PTR [esi],0xe9
  41eb24:	dec    ebx
  41eb25:	je     0x41eb7e
  41eb27:	int3   
  41eb28:	in     al,0x7b
  41eb2a:	jo     0x41eac8
  41eb2c:	in     al,dx
  41eb2d:	xchg   edi,eax
  41eb2e:	into   
  41eb2f:	js     0x41ead6
  41eb31:	lods   eax,DWORD PTR ds:[esi]
  41eb32:	mov    DWORD PTR [ebp-0x1be2a074],edi
  41eb38:	pusha  
  41eb39:	mov    al,0xe
  41eb3b:	push   DWORD PTR [edi]
  41eb3d:	out    0xc3,al
  41eb3f:	daa    
  41eb40:	cmp    eax,0x76303f41
  41eb45:	out    0xf5,al
  41eb47:	pushf  
  41eb48:	fwait
  41eb49:	rol    BYTE PTR [ebx+0x1d],0xae
  41eb4d:	inc    edx
  41eb4e:	sub    eax,0x7068105
  41eb53:	mov    edx,0xac00c51a
  41eb58:	dec    edx
  41eb59:	stos   BYTE PTR es:[edi],al
  41eb5a:	cwde   
  41eb5b:	pop    edi
  41eb5c:	js     0x41ebbb
  41eb5e:	lea    edx,[eax-0x287c139d]
  41eb64:	sub    al,0xa6
  41eb66:	and    al,0x7c
  41eb68:	sahf   
  41eb69:	mov    bl,0x12
  41eb6b:	cmpps  xmm2,XMMWORD PTR es:[edx-0x461d288e],0x5e
  41eb74:	test   cl,dh
  41eb76:	inc    esp
  41eb77:	add    ebx,DWORD PTR [edi]
  41eb79:	jmp    0x41eb77
  41eb7b:	fs cdq 
  41eb7d:	sbb    BYTE PTR [edi-0x7120809c],ah
  41eb83:	dec    eax
  41eb84:	push   ds
  41eb85:	adc    BYTE PTR [ecx-0x5],ah
  41eb88:	fsubr  DWORD PTR [esi+0x9e8eea6]
  41eb8e:	cs fdiv DWORD PTR ss:[esi-0x30]
  41eb93:	inc    esp
  41eb94:	mov    edx,0x7f84d4b2
  41eb99:	retf   
  41eb9a:	arpl   WORD PTR [eax-0x51],bp
  41eb9d:	ds pushaw 
  41eba0:	loopne 0x41ebf2
  41eba2:	inc    esi
  41eba3:	fwait
  41eba4:	and    al,0x8f
  41eba6:	mov    ebx,ss
  41eba8:	jg     0x41eb31
  41ebaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebab:	mov    bh,0xfc
  41ebad:	push   ebx
  41ebae:	(bad)  
  41ebaf:	je     0x41eb7a
  41ebb1:	pop    ebx
  41ebb2:	sbb    DWORD PTR [ebx+0x66f0628b],esp
  41ebb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebb9:	xor    al,0x85
  41ebbb:	inc    edx
  41ebbc:	pop    ebp
  41ebbd:	dec    ebp
	...
  41ed9e:	retf   0xe76a
  41eda1:	ja     0x41ed8a
  41eda3:	(bad)  
  41eda4:	(bad)  
  41eda6:	daa    
  41eda7:	inc    ebx
  41eda8:	call   0x8c2327
  41edad:	adc    esp,DWORD PTR [esp+edx*8+0x7250001]
  41edb4:	add    BYTE PTR [eax],al
  41edb6:	or     edx,DWORD PTR [edx-0x1a]
  41edb9:	lea    edi,[ebp+0x571acc96]
  41edbf:	pop    ebx
  41edc0:	out    0xaa,al
  41edc2:	call   0xc889:0xe7310206
  41edc9:	mov    ecx,0xbab252e8
  41edce:	dec    esp
  41edcf:	(bad)  
  41edd0:	xor    al,0x1b
  41edd2:	mov    cl,0x29
  41edd4:	sub    bh,BYTE PTR [eax+0x75ea842f]
  41edda:	push   edx
  41eddb:	test   DWORD PTR [edx],0x315fa3dc
  41ede1:	mov    edx,DWORD PTR [edi+0x18bcb3b]
  41ede7:	cmc    
  41ede8:	cwde   
  41ede9:	xor    BYTE PTR [edi+0x70],0xe4
  41eded:	gs mov edx,edi
  41edf0:	shl    ebx,cl
  41edf2:	div    BYTE PTR [edx-0x50608268]
  41edf8:	gs xchg ebx,eax
  41edfa:	nop
  41edfb:	push   0xffffffe1
  41edfd:	or     ebx,DWORD PTR [ecx-0x550e9712]
  41ee03:	rcr    cl,0x2a
  41ee06:	jb     0x41edd7
  41ee08:	(bad)  
  41ee09:	mov    ecx,0xe80b8aad
  41ee0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee0f:	(bad)  
  41ee11:	mov    esi,0xcc32dba8
  41ee16:	xor    BYTE PTR [edx],0x9
  41ee19:	mov    al,ds:0xdfa72954
  41ee1e:	or     DWORD PTR [ebp+0xfc9bc0c],eax
  41ee24:	and    BYTE PTR [esi+0x75dcaf9b],ch
  41ee2a:	sbb    BYTE PTR [esi-0x18],0x6f
  41ee2e:	jmp    0xdcbc40d7
  41ee33:	jge    0x41ee44
  41ee35:	sahf   
  41ee36:	jmp    ebx
  41ee38:	mov    bh,0x39
  41ee3a:	xchg   si,ax
  41ee3c:	aam    0xe5
  41ee3e:	cmp    eax,0x6e881e7f
  41ee43:	mov    bl,0x48
  41ee45:	iret   
  41ee46:	pop    esi
  41ee47:	and    al,0x5c
  41ee49:	fbld   TBYTE PTR [ebx-0x391da44]
  41ee4f:	inc    ecx
  41ee50:	aam    0x4b
  41ee52:	sub    eax,0xb7b738c4
  41ee57:	push   edx
  41ee58:	pop    ebx
  41ee59:	ins    BYTE PTR es:[edi],dx
  41ee5a:	ins    DWORD PTR es:[edi],dx
  41ee5b:	test   al,0x4
  41ee5e:	inc    esi
  41ee5f:	addr16 pop es
  41ee61:	sar    DWORD PTR [ebp-0x5f749c0a],0x5a
  41ee68:	lods   eax,DWORD PTR ds:[esi]
  41ee69:	mov    esi,0x1bf096bb
  41ee6e:	pop    ss
  41ee6f:	sbb    ebp,DWORD PTR [ecx+0x39012043]
  41ee75:	push   ebx
  41ee76:	push   esi
  41ee77:	push   eax
  41ee78:	and    ecx,ebx
  41ee7a:	cli    
  41ee7b:	lock mov edi,DWORD PTR [edi-0x526ece7d]
  41ee82:	aas    
  41ee83:	jle    0x41eeb9
  41ee85:	push   ds
  41ee86:	xchg   eax,ebp
  41ee88:	and    al,0xcb
  41ee8a:	add    edi,DWORD PTR [ebp+eax*8-0x49d60f04]
  41ee91:	retf   
  41ee92:	xor    BYTE PTR [edi+0x1e6b0c8a],0x30
  41ee99:	rol    DWORD PTR [eax],0x1b
  41ee9c:	xor    eax,DWORD PTR [edx+0x53]
  41ee9f:	cld    
  41eea0:	cli    
  41eea1:	mov    esi,0xd1aec826
  41eea7:	and    dl,BYTE PTR [ecx-0x371de8f7]
  41eead:	jnp    0x41eed3
  41eeaf:	popf   
  41eeb0:	xchg   BYTE PTR [edx+0x1e],bl
  41eeb3:	addr16 pop ds
  41eeb5:	inc    eax
  41eeb6:	loopne 0x41ee6d
  41eeb8:	inc    ax
  41eeba:	push   cs
  41eebb:	cld    
  41eebc:	loop   0x41eef8
  41eebe:	push   esi
  41eebf:	out    dx,eax
  41eec0:	(bad)  
  41eec1:	push   0xffffffbe
  41eec3:	xchg   BYTE PTR [ebp-0x6ee2055b],bl
  41eec9:	fidiv  WORD PTR [ecx+0x3e]
  41eecc:	in     eax,0x7
  41eece:	mov    ds:0x90817817,eax
  41eed3:	mov    esp,DWORD PTR [edx+0x78]
  41eed6:	mov    BYTE PTR [ebp+0x20a6053d],ah
  41eedc:	push   edx
  41eedd:	lahf   
  41eede:	in     al,0xb6
  41eee0:	bound  eax,QWORD PTR [esi+esi*4]
  41eee3:	push   ebp
  41eee4:	jecxz  0x41eef4
  41eee6:	dec    eax
  41eee7:	(bad)  
  41eee9:	cmp    ah,ah
  41eeeb:	cmp    edx,DWORD PTR [ebx]
  41eeed:	xor    dl,BYTE PTR [ebx]
  41eeef:	loop   0x41eec9
  41eef1:	in     al,0xb2
  41eef3:	inc    ecx
  41eef4:	in     eax,0x9
  41eef6:	(bad)  
  41eef7:	xchg   esp,eax
  41eef8:	jo     0x41ef60
  41eefa:	and    bh,BYTE PTR [esi]
  41eefc:	dec    edx
  41eefd:	pop    esi
  41eefe:	out    0x44,eax
  41ef00:	stos   BYTE PTR es:[edi],al
  41ef01:	push   ds
  41ef02:	int3   
  41ef03:	mov    edx,0x37bb3ac4
  41ef08:	push   0x857985c
  41ef0d:	imul   ebx,DWORD PTR [esi],0x33dc9e99
  41ef13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef14:	fst    DWORD PTR [esi+0x46db2e89]
  41ef1a:	adc    eax,edi
  41ef1c:	(bad)  
  41ef1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef1e:	fidivr WORD PTR [edx+0x4a]
  41ef21:	sub    ah,BYTE PTR [esi-0x5f]
  41ef24:	ja     0x41eeee
  41ef26:	frstor [esi-0x7c]
  41ef29:	pop    ebx
  41ef2a:	iret   
  41ef2b:	in     eax,0x20
  41ef2d:	cmp    al,BYTE PTR [ebx-0x138acad6]
  41ef33:	xchg   esi,eax
  41ef34:	loop   0x41ef21
  41ef36:	mov    ds:0x639fcd90,eax
  41ef3b:	dec    esp
  41ef3c:	je     0x41ef89
  41ef3e:	(bad)  
  41ef3f:	iret   
  41ef40:	sbb    DWORD PTR [edi+0x5c],ebx
  41ef43:	cwde   
  41ef44:	pop    es
  41ef45:	push   ebp
  41ef46:	xabort 0xff
  41ef49:	aas    
  41ef4a:	lods   eax,DWORD PTR ds:[esi]
  41ef4b:	mov    ebx,0xdcdabaa5
  41ef50:	dec    ebx
  41ef51:	(bad)  
  41ef52:	call   0xb3deab27
  41ef57:	(bad)  
  41ef58:	outs   dx,BYTE PTR ds:[esi]
  41ef59:	and    eax,0x4793e302
  41ef5e:	xchg   esp,eax
  41ef5f:	jmp    0xbe448139
  41ef64:	xchg   edi,eax
  41ef65:	test   al,0x6b
  41ef67:	adc    al,0x82
  41ef69:	(bad)  
  41ef6a:	shl    BYTE PTR [ebx-0x46],1
  41ef6d:	push   ss
  41ef6e:	adc    DWORD PTR [ebp-0x738421d7],ecx
  41ef74:	cld    
  41ef75:	rol    DWORD PTR [edi-0x24],1
  41ef78:	inc    edx
  41ef79:	aad    0xeb
  41ef7b:	outs   dx,DWORD PTR ds:[esi]
  41ef7c:	sub    al,0xdc
  41ef7e:	sbb    eax,ebp
  41ef80:	imul   edx,DWORD PTR [ecx],0x57d2c638
  41ef86:	push   edi
  41ef87:	aas    
  41ef88:	stos   BYTE PTR es:[edi],al
  41ef89:	cmp    ch,BYTE PTR [ebx]
  41ef8b:	xor    al,0xd7
  41ef8d:	daa    
  41ef8e:	rcl    DWORD PTR [eax-0x6f481b7e],0x10
  41ef95:	mov    al,0x71
  41ef97:	nop
  41ef98:	xor    edx,ebp
  41ef9a:	aaa    
  41ef9b:	fisttp DWORD PTR [esi]
  41ef9d:	sbb    ah,0x33
  41efa0:	xchg   BYTE PTR [ecx+ebp*8+0x72],dl
  41efa4:	xchg   ecx,eax
  41efa5:	or     BYTE PTR ds:0x88c3cc26,dh
  41efab:	cmp    al,BYTE PTR [eax+0x6e]
  41efae:	inc    ecx
  41efaf:	xlat   BYTE PTR ds:[ebx]
  41efb0:	adc    DWORD PTR [edx-0x13],ebx
  41efb3:	test   BYTE PTR [esp+edx*2+0xe586ebc],ah
  41efba:	jb     0x41efb2
  41efbc:	sbb    ebp,eax
  41efbe:	and    ecx,DWORD PTR [esi+0x10]
  41efc1:	pop    edi
  41efc2:	dec    edi
  41efc3:	int3   
  41efc4:	mov    BYTE PTR [ebx],al
  41efc6:	jl     0x41eff6
  41efc8:	and    BYTE PTR [edx+0x37c4aacc],cl
  41efce:	mov    esp,0xb379357e
  41efd3:	sub    esp,eax
  41efd5:	mov    ah,0x19
  41efd7:	fldenv [esi]
  41efd9:	or     BYTE PTR [eax+0x3538612a],ch
  41efdf:	and    dh,BYTE PTR [esi]
  41efe1:	sbb    DWORD PTR [edi-0x56d3d7a2],eax
  41efe7:	dec    edi
  41efe8:	in     eax,0x9
  41efea:	adc    eax,DWORD PTR [esi+0x5d60c0fa]
  41eff0:	lea    esi,[ebx+0x32]
  41eff3:	xchg   edi,eax
  41eff4:	pop    esi
  41eff5:	lods   eax,DWORD PTR ds:[esi]
  41eff6:	out    dx,al
  41eff7:	popf   
  41eff8:	inc    eax
  41eff9:	nop
  41effa:	dec    ebx
  41effb:	push   eax
  41effc:	xor    DWORD PTR [esi],esi
  41effe:	push   ecx
  41efff:	aas    
  41f000:	mov    eax,ds:0x9debe7c2
  41f005:	xor    BYTE PTR ds:0x6cc4a981,ah
  41f00b:	mov    cl,BYTE PTR [edi]
  41f00d:	pop    esi
  41f00e:	(bad)  
  41f00f:	inc    ecx
  41f010:	pushf  
  41f011:	pop    edx
  41f012:	pop    edi
  41f013:	sub    DWORD PTR [ebx-0x549748a2],edx
  41f019:	xchg   ecx,eax
  41f01a:	pop    ebx
  41f01b:	mov    dl,0x8f
  41f01d:	push   cs
  41f01e:	sub    BYTE PTR [edx+0x1],bh
  41f021:	sbb    al,0x20
  41f023:	sub    al,0xfb
  41f025:	jg     0x41f05c
  41f027:	jmp    0x61d007e4
  41f02c:	inc    edx
  41f02d:	out    dx,eax
  41f02e:	adc    al,0x22
  41f030:	add    al,0x41
  41f032:	pop    ebx
  41f033:	or     dh,BYTE PTR [esi+eiz*2+0x7a]
  41f037:	mov    bl,0xff
  41f039:	sbb    eax,eax
  41f03b:	pop    edi
  41f03c:	fisttp QWORD PTR [ecx]
  41f03e:	cmp    DWORD PTR [esi+0x2e215277],esi
  41f044:	sub    al,0xa1
  41f046:	enter  0xccc4,0x5
  41f04a:	mov    edx,0x90dabc05
  41f04f:	push   ebx
  41f050:	inc    esp
  41f051:	repnz rol ch,1
  41f054:	mov    es,WORD PTR [ebx]
  41f056:	or     dl,BYTE PTR [edi+0x1962c745]
  41f05c:	outs   dx,DWORD PTR ds:[esi]
  41f05d:	jmp    0x41f026
  41f05f:	fsubr  QWORD PTR [edi]
  41f061:	inc    esi
  41f062:	outs   dx,BYTE PTR ds:[esi]
  41f063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f064:	dec    ebp
  41f065:	popf   
  41f066:	sbb    eax,0x36181e96
  41f06b:	aaa    
  41f06c:	in     al,0x2e
  41f06e:	out    0x5b,al
  41f070:	leave  
  41f071:	or     al,0xc8
  41f073:	inc    ebp
  41f074:	mov    esp,0x926e7de0
  41f079:	lods   al,BYTE PTR ds:[esi]
  41f07a:	jmp    0x2057:0x777e614f
  41f081:	jge    0x41f0d2
  41f083:	cmp    al,0x91
  41f085:	cmp    al,0x19
  41f088:	stc    
  41f089:	mov    ch,0xa3
  41f08b:	inc    ebx
  41f08c:	arpl   WORD PTR [ecx],sp
  41f08e:	or     esp,DWORD PTR [eax+0x1e]
  41f091:	jns    0x41f0de
  41f093:	sar    BYTE PTR [edx],cl
  41f095:	push   edi
  41f096:	adc    DWORD PTR [ecx],ebp
  41f098:	adc    edx,DWORD PTR [edx]
  41f09a:	mov    ecx,0x8472cb87
  41f09f:	xchg   ecx,eax
  41f0a0:	adc    BYTE PTR [edx-0x72],dl
  41f0a3:	out    0x9b,eax
  41f0a5:	leave  
  41f0a6:	(bad)  
  41f0a7:	mov    ?,ecx
  41f0a9:	xchg   BYTE PTR [edi+ebp*4],bl
  41f0ac:	repz dec esp
  41f0ae:	dec    esi
  41f0af:	xchg   edx,eax
  41f0b0:	or     BYTE PTR [ebx],ch
  41f0b2:	test   BYTE PTR [edx-0x181afe7e],al
  41f0b8:	hlt    
  41f0b9:	imul   ebx,DWORD PTR [esi+0x444a2370],0xc0ed24e9
  41f0c3:	mov    al,ds:0x49e077a2
  41f0c8:	retw   
  41f0ca:	lock cld 
  41f0cc:	mov    ebx,0x7fd04233
  41f0d1:	and    esi,eax
  41f0d3:	mov    ah,0x74
  41f0d5:	xchg   ebx,eax
  41f0d6:	mov    WORD PTR [ebx],gs
  41f0d8:	jg     0x41f0cc
  41f0da:	inc    ecx
  41f0db:	mov    ah,0x6c
  41f0dd:	cmp    DWORD PTR [ecx+0x40494c53],eax
  41f0e3:	xor    eax,DWORD PTR [edx+0x583dadc5]
  41f0e9:	ss aad 0x8a
  41f0ec:	imul   ebx,DWORD PTR [eax-0x6a56da22],0x16
  41f0f3:	jle    0x41f080
  41f0f5:	xor    cl,BYTE PTR fs:[ebx]
  41f0f8:	dec    dl
  41f0fa:	inc    eax
  41f0fb:	mov    ecx,0xc68abc49
  41f100:	aam    0x18
  41f102:	retf   
  41f103:	shl    DWORD PTR [eax+0x1c],0xd1
  41f107:	les    ecx,FWORD PTR [esi]
  41f109:	out    dx,eax
  41f10a:	mov    ecx,0xad783ad5
  41f10f:	mov    al,ds:0x27d5cd0b
  41f114:	or     edi,DWORD PTR [esi+eax*1]
  41f117:	data16 daa 
  41f119:	scas   eax,DWORD PTR es:[edi]
  41f11a:	call   0x7fa9b27b
  41f11f:	sub    ch,al
  41f121:	sub    BYTE PTR ds:0x838583d4,bl
  41f127:	xor    al,0x92
  41f129:	or     al,0xc1
  41f12b:	mov    edi,DWORD PTR [edx-0x36764042]
  41f131:	mov    esi,0xd3daac2c
  41f136:	xchg   edi,eax
  41f137:	(bad)  
  41f138:	repnz imul esp,DWORD PTR [eax-0x1cc84728],0x2b
  41f140:	mov    cl,0x2c
  41f142:	dec    ecx
  41f143:	inc    edx
  41f144:	dec    edx
  41f145:	add    eax,0x25cae2e1
  41f14a:	jmp    0xef49:0xef88d192
  41f151:	mov    DWORD PTR [ecx],eax
  41f153:	push   eax
  41f154:	dec    eax
  41f155:	xchg   edx,eax
  41f156:	sub    eax,0xed5472b6
  41f15b:	and    BYTE PTR [eax-0x12],dl
  41f15e:	jl     0x41f107
  41f160:	mov    edx,0x7657d204
  41f165:	or     ch,BYTE PTR [edx-0x54]
  41f168:	ss hlt 
  41f16a:	jecxz  0x41f1eb
  41f16c:	stos   BYTE PTR es:[edi],al
  41f16d:	repz shl eax,0xef
  41f171:	nop
  41f172:	mov    bl,cl
  41f174:	retf   
  41f175:	push   ss
  41f176:	sub    DWORD PTR [ecx+eax*8],edi
  41f179:	mov    es,WORD PTR [edx-0x6d9b41db]
  41f17f:	fdivp  st(0),st
  41f181:	popa   
  41f182:	or     DWORD PTR ds:0x2c498bc2,esi
  41f188:	data16 sahf 
  41f18a:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f18c:	(bad)  
  41f18d:	and    al,0x55
  41f18f:	ret    
  41f190:	lahf   
  41f191:	xor    al,0x89
  41f193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f194:	imul   edx,DWORD PTR [ebp+0x70],0xf4984aa
  41f19b:	add    dh,BYTE PTR [ebx+0x77]
  41f19e:	cdq    
  41f19f:	pop    esi
  41f1a0:	retf   
  41f1a1:	nop
  41f1a2:	jp     0x41f179
  41f1a4:	lock xor DWORD PTR [ecx+edi*2-0x7be9b8d3],eax
  41f1ac:	retf   
  41f1ad:	lea    edi,[ebp+0x20046cca]
  41f1b3:	addr16 mov ds:0x1c84,eax
  41f1b7:	stos   DWORD PTR es:[edi],eax
  41f1b8:	sbb    esp,esp
  41f1ba:	inc    ebp
  41f1bb:	mov    WORD PTR [edx+edi*4+0x4b],gs
  41f1bf:	ret    
  41f1c0:	adc    DWORD PTR [eax+0x1a],edi
  41f1c3:	xchg   ebp,eax
  41f1c4:	mov    ?,edx
  41f1c6:	scas   al,BYTE PTR es:[edi]
  41f1c7:	mov    ebp,0xdaf795d9
  41f1cc:	clc    
  41f1cd:	mov    ebx,0x1e407c92
  41f1d2:	neg    BYTE PTR [esi-0x29]
  41f1d5:	xchg   esi,eax
  41f1d6:	adc    ecx,DWORD PTR [eax-0x13]
  41f1d9:	dec    esp
  41f1da:	or     ebp,DWORD PTR [ebp-0x7]
  41f1dd:	(bad)  
  41f1df:	pop    ebp
  41f1e0:	fstp   QWORD PTR [eax-0x7e]
  41f1e3:	test   BYTE PTR [edi],dl
  41f1e5:	xor    edi,DWORD PTR [ebx+0x37]
  41f1e8:	or     al,bl
  41f1ea:	enter  0x95c,0x7a
  41f1ee:	test   edi,ebp
  41f1f0:	ins    DWORD PTR es:[edi],dx
  41f1f1:	jmp    0x41f217
  41f1f3:	in     al,0x7e
  41f1f5:	push   cs
  41f1f6:	and    DWORD PTR [edx+0x1aad341a],ebp
  41f1fc:	mov    ebx,0xc359e61b
  41f201:	jmp    0xd9ddd3ae
  41f206:	or     BYTE PTR [ebx-0xd533e4c],cl
  41f20c:	call   0x6673:0xef3e1ad5
  41f213:	(bad)  
  41f214:	clc    
  41f215:	gs xchg ebx,eax
  41f217:	sahf   
  41f218:	ret    0x4956
  41f21b:	scas   al,BYTE PTR es:[edi]
  41f21c:	icebp  
  41f21d:	ss or  eax,0x488356c0
  41f223:	cmp    DWORD PTR [ecx],esp
  41f225:	leave  
  41f226:	mov    edi,0x917ac9a5
  41f22b:	xchg   ch,cl
  41f22d:	push   esi
  41f22e:	ins    BYTE PTR es:[edi],dx
  41f22f:	stos   DWORD PTR es:[edi],eax
  41f230:	pop    esp
  41f231:	inc    edi
  41f232:	aaa    
  41f233:	jb     0x41f1c2
  41f235:	mov    DWORD PTR [esi],esi
  41f237:	gs xor al,0xb2
  41f23a:	retf   
  41f23b:	xchg   ecx,eax
  41f23c:	push   ds
  41f23d:	gs in  eax,0xd2
  41f240:	loopne 0x41f2be
  41f242:	popa   
  41f243:	xchg   ebx,eax
  41f244:	mov    DWORD PTR [ebx+ebp*2-0x1e],edi
  41f248:	mov    ebp,0x7e21527c
  41f24d:	add    eax,0xa6b1cd1
  41f252:	or     eax,0x34d95c15
  41f257:	out    0xce,eax
  41f259:	out    dx,al
  41f25a:	ja     0x41f2be
  41f25c:	popf   
  41f25d:	lods   al,BYTE PTR ds:[esi]
  41f25e:	ret    
  41f25f:	mov    eax,ds:0x96870bbe
  41f264:	fwait
  41f265:	jmp    DWORD PTR [ebx-0x29644030]
  41f26b:	jae    0x41f260
  41f26d:	mov    al,ds:0x96e9683b
  41f272:	mov    ebx,DWORD PTR [eax-0x7c]
  41f275:	and    eax,0x6146907d
  41f27a:	jo     0x41f239
  41f27c:	bound  edi,QWORD PTR [edx-0x62d1f68d]
  41f282:	sbb    al,0x23
  41f284:	mov    WORD PTR [edi-0x5e],?
  41f287:	fisubr WORD PTR [ecx+0x55]
  41f28a:	scas   eax,DWORD PTR es:[edi]
  41f28b:	push   esp
  41f28c:	jge    0x41f306
  41f28e:	neg    DWORD PTR [esi+0x7e]
  41f291:	lods   eax,DWORD PTR ds:[esi]
  41f292:	xchg   esi,eax
  41f293:	clc    
  41f294:	cmovg  ebp,DWORD PTR [ebp+0x2505e576]
  41f29b:	ins    DWORD PTR es:[edi],dx
  41f29c:	scas   al,BYTE PTR es:[edi]
  41f29d:	or     DWORD PTR [ecx+edi*4+0x6d],ecx
  41f2a1:	fbstp  TBYTE PTR ds:0x7552d5d
  41f2a7:	add    DWORD PTR [esi+ebx*2+0x653cc0fe],edi
  41f2ae:	inc    edx
  41f2af:	jns    0x41f2ee
  41f2b1:	and    al,0xf4
  41f2b4:	xchg   ebp,eax
  41f2b5:	imul   eax,DWORD PTR [esi],0xf
  41f2b8:	ja     0x41f28c
  41f2ba:	sbb    eax,0x6d30708b
  41f2bf:	ret    
  41f2c0:	adc    BYTE PTR [ebx+0x3e],ch
  41f2c3:	sub    DWORD PTR [edx+ebp*2-0x64],ebp
  41f2c7:	and    al,0x37
  41f2c9:	(bad)  
  41f2ca:	adc    al,0xca
  41f2cc:	sbb    BYTE PTR [bx+di-0x7662],ch
  41f2d1:	daa    
  41f2d2:	clc    
  41f2d3:	mov    ebx,ebp
  41f2d5:	iret   
  41f2d6:	ret    0x666b
  41f2d9:	es call 0x1c5:0x3942b27e
  41f2e1:	inc    eax
  41f2e2:	cmp    eax,0x87616aca
  41f2e7:	and    DWORD PTR [ebx+0x34ec79b2],ecx
  41f2ed:	sbb    bl,BYTE PTR [eax+eiz*2-0x45]
  41f2f1:	add    ecx,DWORD PTR [ebx+0x4e]
  41f2f4:	inc    ebx
  41f2f5:	jge    0x41f336
  41f2f7:	or     ecx,DWORD PTR [esi+0x2aff02a3]
  41f2fd:	repz je 0x41f346
  41f300:	mov    dl,0xc7
  41f302:	aam    0xb1
  41f304:	push   0xd1f50d1d
  41f309:	xchg   edx,eax
  41f30a:	pop    edx
  41f30b:	out    dx,al
  41f30c:	sbb    esp,DWORD PTR [edi+edx*1+0x3a6d4f64]
  41f313:	dec    ecx
  41f314:	sub    BYTE PTR [esi+ecx*8],ch
  41f317:	inc    ebp
  41f318:	inc    esp
  41f319:	hlt    
  41f31a:	xor    dh,BYTE PTR [eax]
  41f31c:	out    dx,eax
  41f31d:	shl    DWORD PTR [ebx],0xfb
  41f320:	add    dl,BYTE PTR [eax]
  41f322:	and    BYTE PTR [esi-0x10],cl
  41f325:	sahf   
  41f326:	(bad)  
  41f327:	adc    ch,dl
  41f329:	add    edx,DWORD PTR [edi]
  41f32b:	mov    esp,ecx
  41f32d:	stos   DWORD PTR es:[edi],eax
  41f32e:	jmp    0x41f2e1
  41f330:	jb     0x41f374
  41f332:	gs jb  0x41f38f
  41f335:	loope  0x41f310
  41f337:	in     eax,dx
  41f338:	lods   eax,DWORD PTR ds:[esi]
  41f339:	sbb    DWORD PTR [ebp+0x6790500],eax
  41f33f:	xchg   ecx,eax
  41f340:	pop    ecx
  41f341:	imul   ecx,DWORD PTR ds:0x902e8040,0x50
  41f348:	and    DWORD PTR [edi+0x74],edx
  41f34b:	imul   edi,DWORD PTR [edi+0x8565caa],0x203d3cb
  41f355:	enter  0x5e46,0x80
  41f359:	cmc    
  41f35a:	push   edx
  41f35b:	arpl   WORD PTR [esi],sp
  41f35d:	mov    eax,0x7dd81f82
  41f362:	ss xor al,0xfe
  41f365:	adc    eax,0xe3d1b87c
  41f36a:	fcmovb st,st(6)
  41f36c:	sub    DWORD PTR [edi+0x76db5d6d],ebx
  41f372:	jmp    0xc1c3b694
  41f377:	shr    BYTE PTR [ebp+0x4a0200c2],0xbc
  41f37e:	push   ds
  41f37f:	jge    0x41f3c5
  41f381:	xor    dl,BYTE PTR [ecx+0x3377719d]
  41f387:	loop   0x41f3e4
  41f389:	mov    ds:0x99e191ce,al
  41f38e:	pop    ds
  41f38f:	and    ebp,DWORD PTR [edi]
  41f391:	or     dl,BYTE PTR [ebx]
  41f393:	xor    BYTE PTR [eax-0x22],ch
  41f396:	push   ebx
  41f397:	dec    esp
  41f398:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f399:	cmp    cl,al
  41f39b:	scas   al,BYTE PTR es:[edi]
  41f39c:	dec    ecx
  41f39d:	addr16 movhlps xmm0,xmm6
  41f3a1:	sbb    al,0xaf
  41f3a3:	pushf  
  41f3a4:	xchg   DWORD PTR [edx+edx*8+0x7096b403],ebx
  41f3ab:	(bad)  
  41f3ac:	cmp    DWORD PTR [edi-0x64909604],ebx
  41f3b2:	pop    esp
  41f3b3:	sbb    DWORD PTR [ebp+0x5ac7d8dd],0x75ab8878
  41f3bd:	in     eax,dx
  41f3be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3bf:	xor    DWORD PTR [ecx+0x4a],esi
  41f3c2:	mov    bh,0xa8
  41f3c4:	push   ebx
  41f3c5:	xchg   edi,eax
  41f3c6:	bound  ecx,QWORD PTR [esp+eax*4-0x5f264652]
  41f3cd:	pop    ss
  41f3ce:	sub    eax,0x47b584bf
  41f3d3:	cmp    DWORD PTR [esi],ebp
  41f3d5:	std    
  41f3d6:	xor    BYTE PTR [ecx+0x2256b89b],bl
  41f3dc:	sbb    ecx,DWORD PTR [esp+esi*1]
  41f3df:	fucomip st,st(7)
  41f3e1:	test   al,0x48
  41f3e3:	push   ds
  41f3e4:	ins    BYTE PTR es:[edi],dx
  41f3e5:	(bad)  
  41f3e6:	mov    cl,dl
  41f3e8:	int3   
  41f3e9:	pusha  
  41f3ea:	in     al,dx
  41f3eb:	jmp    0x41f3e1
  41f3ed:	push   ecx
  41f3ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3ef:	xor    DWORD PTR [ecx],edi
  41f3f1:	pop    edx
  41f3f2:	fdivr  st(7),st
  41f3f4:	xchg   ebx,eax
  41f3f5:	test   BYTE PTR [eax+0x6310fc78],ah
  41f3fb:	inc    eax
  41f3fc:	imul   BYTE PTR [edx]
  41f3fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3ff:	mov    edi,0xef269c13
  41f404:	(bad)  
  41f405:	or     eax,0x50a3e59c
  41f40a:	adc    DWORD PTR [ebx],eax
  41f40c:	bound  ecx,QWORD PTR [esi-0x55b9cc6e]
  41f412:	gs jnp 0x41f42a
  41f415:	pop    ds
  41f416:	fnsave [esi-0x22]
  41f419:	test   ecx,edx
  41f41b:	test   eax,0x9c39bf7f
  41f420:	jno    0x41f3ac
  41f422:	add    al,0x44
  41f424:	cmp    BYTE PTR [edi-0x34],dl
  41f427:	inc    edi
  41f428:	mov    ch,bl
  41f42a:	sub    ecx,ecx
  41f42c:	cmp    eax,0xbe4dfbea
  41f431:	adc    al,0xaf
  41f433:	outs   dx,BYTE PTR ds:[esi]
  41f434:	aam    0x88
  41f436:	mov    ebp,0x6ace1cd3
  41f43b:	ror    ch,1
  41f43d:	out    dx,eax
  41f43e:	add    dl,dl
  41f440:	sti    
  41f441:	cmp    eax,0xe1812d26
  41f446:	test   BYTE PTR [esi+0x56],ah
  41f449:	mov    ch,0x41
  41f44b:	and    al,0xe2
  41f44d:	inc    ecx
  41f44e:	ins    BYTE PTR es:[edi],dx
  41f44f:	lods   al,BYTE PTR ds:[esi]
  41f450:	push   ds
  41f451:	jp     0x41f48c
  41f453:	iret   
  41f454:	push   es
  41f455:	loop   0x41f439
  41f457:	hlt    
  41f458:	pop    DWORD PTR [edx+0x4bbaaf82]
  41f45e:	fwait
  41f45f:	enter  0x682f,0x37
  41f463:	pop    ss
  41f464:	and    BYTE PTR [ebx-0x2c],dh
  41f467:	pop    edx
  41f468:	pop    ecx
  41f469:	add    al,BYTE PTR [ebx-0x965580c]
  41f46f:	or     DWORD PTR [eax+ecx*1-0x493247a0],edx
  41f476:	mov    ds:0xdd432823,al
  41f47b:	mov    edi,0x5e448775
  41f480:	addr16 jmp 0x515623c1
  41f486:	das    
  41f487:	push   0xfffffffe
  41f489:	mov    ds:0x2846b1e6,eax
  41f48e:	mov    bl,0x83
  41f490:	bound  edx,QWORD PTR [eax+0x70]
  41f493:	mov    esi,0x3a54d45f
  41f498:	sbb    DWORD PTR [ebp-0x66],esp
  41f49b:	shr    DWORD PTR [eax],0xd7
  41f49e:	cmp    ecx,DWORD PTR es:[ebx+ebx*2-0x531543a9]
  41f4a6:	int3   
  41f4a7:	scas   al,BYTE PTR es:[edi]
  41f4a8:	mov    bh,BYTE PTR [edx]
  41f4aa:	outs   dx,DWORD PTR ds:[esi]
  41f4ab:	mov    ch,0x69
  41f4ad:	shl    edx,0x4b
  41f4b0:	adc    ebp,DWORD PTR [edi]
  41f4b2:	int3   
  41f4b3:	in     eax,0xba
  41f4b5:	jmp    0xe1be:0x768dedaa
  41f4bc:	mov    al,ds:0x1f52e4dd
  41f4c1:	std    
  41f4c2:	faddp  st(2),st
  41f4c4:	push   eax
  41f4c5:	add    al,0xcc
  41f4c7:	retf   
  41f4c8:	iret   
  41f4c9:	gs pusha 
  41f4cb:	in     al,dx
  41f4cc:	loop   0x41f46f
  41f4ce:	xchg   esi,eax
  41f4cf:	lahf   
  41f4d0:	jg     0x41f4b3
  41f4d2:	push   ss
  41f4d3:	sbb    al,ah
  41f4d5:	mov    ebp,0xfc96ff0c
  41f4da:	mov    dh,0x0
	...
  41f6b8:	add    BYTE PTR [eax],al
  41f6ba:	add    BYTE PTR [edi+0x5d7b4dd7],al
  41f6c0:	sti    
  41f6c1:	mov    bh,0xff
  41f6c3:	ds aad 0x54
  41f6c6:	ret    0x32d5
  41f6c9:	sub    esp,DWORD PTR [eax]
  41f6cb:	jl     0x41f668
  41f6cd:	add    DWORD PTR [eax],eax
  41f6cf:	and    eax,0x7b000007
  41f6d4:	sahf   
  41f6d5:	out    0xc4,eax
  41f6d7:	cmc    
  41f6d8:	loop   0x41f6f5
  41f6da:	sbb    ebp,DWORD PTR [ebx]
  41f6dc:	add    al,0xd7
  41f6de:	pop    es
  41f6df:	mov    bl,0xa
  41f6e1:	pusha  
  41f6e2:	push   esi
  41f6e3:	js     0x41f726
  41f6e5:	xchg   ch,dh
  41f6e7:	xchg   esi,eax
  41f6e8:	jg     0x41f684
  41f6ea:	out    0xa,eax
  41f6ec:	or     bl,BYTE PTR [ecx+0x7a2d00e8]
  41f6f2:	jmp    0x260c40ab
  41f6f7:	sub    ch,BYTE PTR [ebp-0x3fa57932]
  41f6fd:	jmp    FWORD PTR [edi]
  41f6ff:	fwait
  41f700:	in     eax,0x8e
  41f702:	sub    al,0xb4
  41f704:	shr    BYTE PTR [esp+eiz*4-0x1a],1
  41f708:	add    DWORD PTR [eax+0x1e],esp
  41f70b:	test   BYTE PTR [edi+eiz*1-0xf],bl
  41f70f:	inc    ebx
  41f710:	sub    cl,BYTE PTR [edx-0x4e]
  41f713:	fbld   TBYTE PTR [eax+edi*8+0x2b1742ce]
  41f71a:	gs stc 
  41f71c:	test   eax,0x6cc38c95
  41f721:	ins    DWORD PTR es:[edi],dx
  41f722:	and    edi,DWORD PTR [ecx-0x4d]
  41f725:	push   cs
  41f726:	xchg   ebx,eax
  41f727:	stos   BYTE PTR es:[edi],al
  41f728:	iret   
  41f729:	push   esi
  41f72a:	xchg   edi,eax
  41f72b:	pop    ds
  41f72c:	inc    ebp
  41f72d:	sbb    BYTE PTR [ecx+0x2d],al
  41f730:	lods   al,BYTE PTR ds:[esi]
  41f731:	(bad)  
  41f732:	lock sbb ah,dh
  41f735:	add    DWORD PTR [edi],eax
  41f737:	stos   DWORD PTR es:[edi],eax
  41f738:	add    eax,ecx
  41f73a:	dec    esp
  41f73b:	mov    eax,ds:0xc63c7d79
  41f740:	cmp    eax,0x3e1e7b0c
  41f745:	push   0x5c
  41f747:	or     cl,BYTE PTR [ebx-0x4c]
  41f74a:	and    edx,ebp
  41f74c:	in     al,dx
  41f74d:	add    ebx,eax
  41f74f:	xor    eax,0x3ccb720a
  41f754:	pop    esp
  41f755:	sub    esp,edx
  41f757:	push   ecx
  41f758:	mov    edx,0x2b4c6836
  41f75d:	xchg   ebp,eax
  41f75e:	stc    
  41f75f:	mov    ebp,0xcd87afe4
  41f764:	mov    fs,WORD PTR [edi+0x5f14815e]
  41f76a:	push   ds
  41f76b:	call   0xe86a:0xb93741de
  41f772:	or     bl,al
  41f774:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f775:	adc    DWORD PTR [eax],ecx
  41f777:	sub    ebp,DWORD PTR [edx+esi*2-0x1d]
  41f77b:	popf   
  41f77c:	inc    esp
  41f77d:	push   edx
  41f77e:	inc    esi
  41f77f:	(bad)  
  41f780:	pushf  
  41f781:	shl    DWORD PTR [edi-0x6fedf093],0xc8
  41f788:	and    bh,ch
  41f78a:	lahf   
  41f78b:	jo     0x41f70e
  41f78d:	mov    ds:0x2faa097e,eax
  41f792:	addr16 jp 0x41f7cf
  41f795:	sbb    eax,0xe1c937fb
  41f79a:	loope  0x41f726
  41f79c:	sahf   
  41f79d:	pop    edi
  41f79e:	stos   BYTE PTR es:[edi],al
  41f79f:	xchg   esp,eax
  41f7a0:	lods   eax,DWORD PTR ds:[esi]
  41f7a1:	mov    al,0x3d
  41f7a3:	mov    esi,0xccf37c4b
  41f7a8:	or     eax,0x324eadcf
  41f7ad:	leave  
  41f7ae:	and    DWORD PTR [ebx+ecx*4],ecx
  41f7b1:	test   eax,0xfe0d204f
  41f7b6:	ja     0x41f7e2
  41f7b8:	xchg   BYTE PTR [edi],ch
  41f7ba:	lods   al,BYTE PTR ds:[esi]
  41f7bb:	xor    ebx,esp
  41f7bd:	(bad)  
  41f7be:	cdq    
  41f7bf:	rcl    DWORD PTR [esi+0x73],0xf4
  41f7c3:	stos   DWORD PTR es:[edi],eax
  41f7c4:	jmp    0x41f7b7
  41f7c6:	je     0x41f7e6
  41f7c8:	jge    0x41f7aa
  41f7ca:	fstp   QWORD PTR [esi]
  41f7cc:	sbb    ch,BYTE PTR [ecx-0x7d]
  41f7cf:	sbb    DWORD PTR [ecx-0x3d],0xc8954a1
  41f7d6:	add    eax,0x690b642a
  41f7db:	dec    edi
  41f7dc:	add    DWORD PTR [ecx+esi*4+0x41],edx
  41f7e0:	add    al,0xc6
  41f7e2:	add    ebp,DWORD PTR [edx+0x1b]
  41f7e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7e6:	push   cs
  41f7e7:	retf   
  41f7e8:	adc    BYTE PTR [esi+0x7c],bh
  41f7eb:	mov    BYTE PTR [edx*8+0x60930b5a],bl
  41f7f2:	or     DWORD PTR [edi],0xffffffe0
  41f7f5:	test   al,0xcf
  41f7f7:	mov    ah,0x7
  41f7f9:	xlat   BYTE PTR ds:[ebx]
  41f7fa:	hlt    
  41f7fb:	cmp    eax,0x2011a498
  41f800:	pushf  
  41f801:	jge    0x41f815
  41f803:	add    BYTE PTR [ebx+0x73],cl
  41f806:	xor    DWORD PTR [eax],edx
  41f808:	cmp    bl,BYTE PTR [ecx+0x10]
  41f80b:	ja     0x41f80a
  41f80d:	out    0xea,eax
  41f80f:	dec    ecx
  41f810:	popf   
  41f811:	fmul   st(5),st
  41f813:	xchg   edi,eax
  41f814:	outs   dx,BYTE PTR ds:[esi]
  41f815:	sbb    eax,0x2e986767
  41f81a:	xlat   BYTE PTR ds:[ebx]
  41f81b:	cdq    
  41f81c:	or     ebx,DWORD PTR [esp+ecx*4]
  41f81f:	mov    ebx,0x3b78acf5
  41f824:	out    0x28,al
  41f826:	es xchg esi,eax
  41f828:	xor    al,0x2d
  41f82a:	adc    eax,0xd7892d92
  41f82f:	pop    eax
  41f830:	jnp    0x41f886
  41f832:	pop    ss
  41f833:	loopne 0x41f872
  41f835:	and    DWORD PTR ds:[ebp+0x25],ebp
  41f839:	clc    
  41f83a:	shl    bl,cl
  41f83c:	rep stos DWORD PTR es:[edi],eax
  41f83e:	stos   BYTE PTR es:[edi],al
  41f83f:	imul   esp,DWORD PTR ds:0x7f7ef43c,0xffffffa8
  41f846:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f847:	push   0x130a2d6d
  41f84c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f84d:	mov    bl,0xfb
  41f84f:	and    edx,DWORD PTR [edx-0x4c]
  41f852:	cli    
  41f853:	dec    esp
  41f854:	repnz xchg esp,eax
  41f856:	cmp    al,0xcb
  41f858:	mov    eax,ds:0x1f4e81d6
  41f85d:	sbb    esp,DWORD PTR [ecx-0x45]
  41f860:	xor    ch,BYTE PTR [edx+0x16e29526]
  41f866:	mov    WORD PTR [edx+eax*4+0x50],es
  41f86a:	push   ds
  41f86b:	push   ss
  41f86c:	xchg   edx,eax
  41f86d:	push   ss
  41f86e:	iret   
  41f86f:	fdiv   QWORD PTR [esi+0x3da096c9]
  41f875:	call   DWORD PTR [ebx+0x45]
  41f878:	and    al,0x1d
  41f87a:	inc    eax
  41f87b:	ret    0x9ed3
  41f87e:	jle    0x41f84d
  41f880:	push   0xffffff81
  41f882:	fidiv  DWORD PTR [ebx]
  41f884:	mov    ebx,fs
  41f886:	xor    edi,0x5bfa7a29
  41f88c:	shl    BYTE PTR [di-0x19],1
  41f890:	mov    ebx,0x716564db
  41f895:	dec    esi
  41f896:	fwait
  41f897:	(bad)  
  41f898:	test   DWORD PTR [edi+0x3ee01280],ecx
  41f89e:	shl    DWORD PTR [edx+0x5b4b62a2],cl
  41f8a4:	push   esp
  41f8a5:	rcr    DWORD PTR [esi+edx*8-0x19b96fb0],0x73
  41f8ad:	hlt    
  41f8ae:	mov    ah,0xa5
  41f8b0:	push   cs
  41f8b1:	fs dec edx
  41f8b3:	cld    
  41f8b4:	call   0x670cab8f
  41f8b9:	inc    esp
  41f8ba:	test   eax,0x9b26cd2a
  41f8bf:	add    DWORD PTR [esi+0x6a],edi
  41f8c2:	push   eax
  41f8c3:	push   cs
  41f8c4:	inc    ebx
  41f8c5:	sub    al,0x5d
  41f8c7:	xor    cl,BYTE PTR [ebp-0x39]
  41f8ca:	pop    ebx
  41f8cb:	test   BYTE PTR [esi-0x230d7dd1],cl
  41f8d1:	jp     0x41f85a
  41f8d3:	dec    ecx
  41f8d4:	je     0x41f879
  41f8d6:	pop    es
  41f8d7:	ds jecxz 0x41f8f3
  41f8da:	inc    eax
  41f8db:	add    ecx,DWORD PTR [edi+eax*8-0x5d]
  41f8df:	leave  
  41f8e0:	push   edx
  41f8e1:	imul   esp,esp,0x8c8f032e
  41f8e7:	int3   
  41f8e8:	mov    esi,0xa2ce80d2
  41f8ed:	cwde   
  41f8ee:	pop    ss
  41f8ef:	jne    0xa728e59
  41f8f5:	sbb    ch,BYTE PTR [edx+0x17e3117b]
  41f8fb:	(bad)  
  41f8fc:	pusha  
  41f8fd:	sbb    al,0xc7
  41f8ff:	push   ebp
  41f900:	sbb    dh,cl
  41f902:	or     al,0xba
  41f904:	push   ss
  41f905:	mov    edi,0x315b147c
  41f90a:	jb     0x41f894
  41f90c:	adc    DWORD PTR [edx+0x44],eax
  41f90f:	push   ecx
  41f910:	push   eax
  41f911:	dec    eax
  41f912:	fiadd  WORD PTR [ebp+esi*8-0x5d668e8]
  41f919:	xor    eax,0x74f96e07
  41f91e:	xchg   edi,eax
  41f91f:	loopne 0x41f95c
  41f921:	scas   eax,DWORD PTR es:[edi]
  41f922:	mov    esp,0x1bb79127
  41f927:	lods   eax,DWORD PTR ds:[esi]
  41f928:	jae    0x41f96b
  41f92a:	out    0xe3,eax
  41f92c:	fisttp WORD PTR [ebp+0x416df0ed]
  41f932:	nop
  41f933:	out    0x51,eax
  41f935:	jg     0x41f928
  41f937:	push   eax
  41f939:	or     BYTE PTR [eax+0x4175014a],ah
  41f93f:	push   ss
  41f940:	mov    bl,0x69
  41f942:	ins    BYTE PTR es:[edi],dx
  41f943:	and    al,0xa
  41f945:	ins    BYTE PTR es:[edi],dx
  41f946:	scas   eax,DWORD PTR es:[edi]
  41f947:	fs aaa 
  41f949:	cmp    dl,BYTE PTR [esi+0x304c7b33]
  41f94f:	cmp    al,0x9b
  41f951:	mov    edi,0x459540a0
  41f956:	into   
  41f957:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f958:	fidiv  DWORD PTR [ebx]
  41f95a:	cld    
  41f95b:	(bad)  
  41f95c:	sti    
  41f95d:	stos   DWORD PTR es:[edi],eax
  41f95e:	and    BYTE PTR [ebp-0x6e],bh
  41f961:	ficom  DWORD PTR [ecx]
  41f963:	daa    
  41f964:	fsubrp st(5),st
  41f966:	cmp    eax,0x34f398bf
  41f96b:	jns    0x41f957
  41f96d:	shl    DWORD PTR ds:0xeb5d384,cl
  41f973:	fist   WORD PTR [edi]
  41f975:	mul    BYTE PTR [ebx]
  41f977:	popf   
  41f978:	ss sub dl,dl
  41f97b:	xchg   BYTE PTR [ebx+0x49],dh
  41f97e:	je     0x41f9b1
  41f980:	or     eax,0x94636fd3
  41f985:	inc    esi
  41f986:	add    dx,WORD PTR [ebp-0x2c]
  41f98a:	jg     0x41f98e
  41f98c:	dec    ebx
  41f98d:	adc    esp,ebx
  41f98f:	outs   dx,DWORD PTR ds:[esi]
  41f990:	fs sahf 
  41f992:	daa    
  41f993:	mov    ds:0x7cff0943,eax
  41f998:	jg     0x41f97e
  41f99a:	push   0xffffffcb
  41f99c:	mov    ebx,0xf87a6b07
  41f9a1:	(bad)  
  41f9a2:	and    eax,0x2e273ae8
  41f9a7:	mov    edx,DWORD PTR [edi+0x25]
  41f9aa:	cli    
  41f9ab:	mov    ah,0xd7
  41f9ad:	cmp    al,0x73
  41f9af:	mov    dl,0x6e
  41f9b1:	xchg   DWORD PTR [ebp-0x1a],ebp
  41f9b4:	loopne 0x41f95a
  41f9b6:	push   ecx
  41f9b7:	pop    es
  41f9b8:	add    ebp,DWORD PTR [ebx+0x2f]
  41f9bb:	mov    ebp,0xeeb99228
  41f9c0:	xlat   BYTE PTR ds:[ebx]
  41f9c1:	and    edx,esp
  41f9c3:	jae    0x41f990
  41f9c5:	cwde   
  41f9c6:	mov    ebx,0x5c41306c
  41f9cb:	stos   DWORD PTR es:[edi],eax
  41f9cc:	test   DWORD PTR ds:[eax],0x1d4479ad
  41f9d3:	pushf  
  41f9d4:	(bad)  
  41f9d5:	fimul  DWORD PTR [ecx+esi*1+0x2286f239]
  41f9dc:	mov    ds:0xf7f8a43e,al
  41f9e1:	cs mov ch,0x89
  41f9e4:	(bad)  
  41f9e6:	sub    BYTE PTR [edi-0x3e],al
  41f9e9:	push   0x1ac226a6
  41f9ee:	add    eax,0xd5d03145
  41f9f3:	cwde   
  41f9f4:	lods   eax,DWORD PTR ds:[esi]
  41f9f5:	jno    0x41fa4a
  41f9f7:	enter  0x6f7f,0xd1
  41f9fb:	inc    ebx
  41f9fc:	paddd  mm1,QWORD PTR ds:0x66838ab0
  41fa03:	push   ebx
  41fa04:	dec    ebp
  41fa05:	aaa    
  41fa06:	or     al,0x5c
  41fa08:	aaa    
  41fa09:	jnp    0x41f9bd
  41fa0b:	imul   ebx,DWORD PTR [ecx-0x2c],0xffffffb7
  41fa0f:	mov    ebx,0x5786545f
  41fa14:	ja     0x41f9c5
  41fa16:	(bad)  
  41fa17:	or     DWORD PTR [edx],esi
  41fa19:	pop    es
  41fa1a:	jg     0x41f9b9
  41fa1c:	sahf   
  41fa1d:	call   0xe13:0x6e6fd5f2
  41fa24:	xor    DWORD PTR [eax+0x7ec92cae],ebp
  41fa2a:	adc    bl,BYTE PTR [edi]
  41fa2c:	inc    esi
  41fa2d:	add    al,0xf9
  41fa2f:	aaa    
  41fa30:	jmp    0x77716853
  41fa35:	pop    ebp
  41fa36:	push   ecx
  41fa37:	mov    ds:0x1d2ce783,al
  41fa3c:	adc    BYTE PTR [eax+0x64],bl
  41fa3f:	imul   edi,DWORD PTR [esi],0xfa4cc880
  41fa45:	xor    al,0xcf
  41fa47:	loopne 0x41faa6
  41fa49:	pop    edi
  41fa4a:	test   eax,0xe0d9325d
  41fa4f:	in     eax,0xd2
  41fa51:	cmp    al,0x8e
  41fa53:	mov    eax,0xdefd37fd
  41fa58:	cmp    edi,DWORD PTR [ebp+0x52f8ce04]
  41fa5e:	add    esp,DWORD PTR [eax]
  41fa60:	add    BYTE PTR [edi+0x18],bh
  41fa63:	loopne 0x41fac3
  41fa65:	pop    es
  41fa66:	mov    edi,0x4e2a2c94
  41fa6b:	add    al,0x5e
  41fa6d:	shr    BYTE PTR [edi],0x3d
  41fa70:	xor    BYTE PTR [edi-0x7be01a9f],dh
  41fa76:	lea    edx,[edx]
  41fa78:	mov    ch,0x32
  41fa7a:	adc    bl,dl
  41fa7c:	lods   al,BYTE PTR ds:[esi]
  41fa7d:	in     eax,dx
  41fa7e:	(bad)  
  41fa80:	xor    DWORD PTR [edx+0xe1e9887],eax
  41fa86:	adc    ch,BYTE PTR ds:[esi]
  41fa89:	lods   al,BYTE PTR ds:[esi]
  41fa8b:	xchg   edx,eax
  41fa8c:	or     eax,0x28824d3e
  41fa91:	push   ss
  41fa92:	daa    
  41fa93:	or     BYTE PTR [edx+0x2528ebba],ah
  41fa99:	jnp    0x41fa85
  41fa9b:	in     eax,0x4a
  41fa9d:	cmc    
  41fa9e:	stc    
  41fa9f:	adc    DWORD PTR ds:[eax],ebx
  41faa2:	mov    edi,DWORD PTR [edi+0x64db860e]
  41faa8:	adc    edi,DWORD PTR [ebx]
  41faaa:	int    0xe0
  41faac:	or     BYTE PTR [edi],bh
  41faae:	pop    ebx
  41faaf:	stos   BYTE PTR es:[edi],al
  41fab0:	xor    ch,bh
  41fab2:	adc    DWORD PTR [edi+0x79],eax
  41fab5:	bound  ebx,QWORD PTR [ebx+0x51050ca5]
  41fabb:	pop    edi
  41fabc:	jg     0x41fafe
  41fabe:	aaa    
  41fabf:	sbb    ebp,ebp
  41fac1:	pop    ds
  41fac2:	sub    edx,edx
  41fac4:	xchg   edx,eax
  41fac5:	mov    ecx,0xaef64d36
  41faca:	dec    esp
  41facb:	shl    DWORD PTR [ebp-0x69],cl
  41face:	mov    bl,BYTE PTR [esi+edx*1]
  41fad1:	repnz xchg ecx,eax
  41fad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fad4:	dec    eax
  41fad5:	rcr    DWORD PTR [edi+0x38a62721],1
  41fadb:	dec    edx
  41fadc:	int    0x19
  41fade:	push   cs
  41fadf:	adc    al,0x89
  41fae1:	cmp    al,0x61
  41fae3:	aaa    
  41fae4:	inc    edi
  41fae5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fae6:	jno    0x41fb35
  41fae8:	cmp    BYTE PTR [ebp-0x72452032],ch
  41faee:	cmp    al,0x76
  41faf0:	jle    0x41fa88
  41faf2:	test   BYTE PTR [esi-0x27d39f7a],al
  41faf8:	ds ret 
  41fafa:	rol    BYTE PTR [ebx-0x78],0x36
  41fafe:	push   edi
  41faff:	sub    DWORD PTR [esi+0x68],edi
  41fb02:	and    BYTE PTR [ecx],0xcb
  41fb05:	inc    esi
  41fb06:	stos   BYTE PTR es:[edi],al
  41fb07:	cmp    cl,BYTE PTR [edi+0xcf7fc6e]
  41fb0d:	adc    DWORD PTR [edi-0x73ad6de6],esi
  41fb13:	outs   dx,BYTE PTR ds:[esi]
  41fb14:	pop    ecx
  41fb15:	ficomp WORD PTR [edx]
  41fb17:	lods   eax,DWORD PTR ds:[esi]
  41fb18:	rcr    bl,1
  41fb1a:	and    ah,dl
  41fb1c:	jnp    0xa1cc64bc
  41fb22:	je     0x41fb22
  41fb24:	push   ds
  41fb25:	sub    al,0x14
  41fb27:	push   ebp
  41fb28:	mov    dh,0xf7
  41fb2a:	mov    ds:0x1b0df9b0,al
  41fb2f:	add    al,0xeb
  41fb31:	adc    al,0xb3
  41fb33:	pop    edx
  41fb34:	pop    es
  41fb35:	jmp    0xa7ccd8fe
  41fb3a:	das    
  41fb3b:	and    ch,BYTE PTR [ecx]
  41fb3d:	retf   0x3589
  41fb40:	nop
  41fb41:	call   FWORD PTR [eax-0x766dfcb7]
  41fb47:	mov    esp,0xe785e40d
  41fb4c:	int    0xd0
  41fb4e:	mov    esp,0x12ec16f8
  41fb53:	jns    0x41fb24
  41fb55:	xor    edi,DWORD PTR [esi-0x7ebdfeeb]
  41fb5b:	jmp    0x41fb55
  41fb5d:	mov    esp,0xb2099a4b
  41fb62:	aaa    
  41fb63:	ins    BYTE PTR es:[edi],dx
  41fb64:	mov    fs,WORD PTR [ecx]
  41fb66:	and    al,0xa1
  41fb68:	fdivr  DWORD PTR [ecx-0x2d17b1ad]
  41fb6e:	jnp    0x41fbba
  41fb70:	pop    edi
  41fb71:	retf   0x6b2a
  41fb74:	push   ss
  41fb75:	int3   
  41fb76:	xchg   ecx,eax
  41fb77:	dec    esp
  41fb78:	int3   
  41fb79:	push   esp
  41fb7a:	dec    ebx
  41fb7b:	jnp    0x41fb2b
  41fb7d:	mov    dl,0xd2
  41fb7f:	ret    0x9e8
  41fb82:	fucomip st,st(2)
  41fb84:	dec    ebp
  41fb85:	mov    edx,DWORD PTR [edi-0x52652875]
  41fb8b:	repnz lods al,BYTE PTR ds:[esi]
  41fb8d:	sbb    edx,DWORD PTR ds:0xd916a836
  41fb93:	pusha  
  41fb94:	xor    al,0xc7
  41fb96:	loopne 0x41fb46
  41fb98:	test   al,ch
  41fb9a:	mov    gs,WORD PTR [ebx+esi*4-0x1]
  41fb9e:	push   esi
  41fb9f:	cmp    eax,0x50e80418
  41fba4:	add    esp,DWORD PTR [edx]
  41fba6:	aaa    
  41fba7:	dec    esi
  41fba8:	xor    cl,BYTE PTR [edx+0x1fa7bdb]
  41fbae:	fwait
  41fbaf:	jnp    0x41fc02
  41fbb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbb2:	ret    0x1cef
  41fbb5:	jae    0x41fb9f
  41fbb7:	xchg   ebp,eax
  41fbb8:	js     0x41fb79
  41fbba:	repz and eax,0x4caf99a6
  41fbc0:	jl     0x41fb68
  41fbc2:	shl    DWORD PTR [edx],cl
  41fbc4:	hlt    
  41fbc5:	cli    
  41fbc6:	add    dh,BYTE PTR [eax+0x3b07cae3]
  41fbcc:	scas   eax,DWORD PTR es:[edi]
  41fbcd:	push   cs
  41fbce:	iret   
  41fbcf:	loopne 0x41fb65
  41fbd1:	nop
  41fbd2:	fwait
  41fbd3:	das    
  41fbd4:	lahf   
  41fbd5:	add    al,0x2
  41fbd7:	xchg   esp,eax
  41fbd8:	xchg   ebp,eax
  41fbd9:	outs   dx,BYTE PTR ds:[esi]
  41fbda:	daa    
  41fbdb:	std    
  41fbdc:	ins    DWORD PTR es:[edi],dx
  41fbdd:	xchg   ebp,eax
  41fbde:	aaa    
  41fbdf:	mov    bh,0xc5
  41fbe1:	xor    eax,0xc916b9a1
  41fbe6:	lock and dl,BYTE PTR [edx-0x36]
  41fbea:	push   es
  41fbeb:	mov    eax,ds:0x8fdc8012
  41fbf0:	imul   esi,DWORD PTR [edi+0x6e],0xffffffff
  41fbf4:	mov    WORD PTR [esi+0x6a825194],gs
  41fbfa:	repz mov bh,0x35
  41fbfd:	push   esi
  41fbfe:	out    0xa5,eax
  41fc00:	sbb    bh,BYTE PTR [ecx+0x2b]
  41fc03:	inc    edx
  41fc04:	mov    bh,0x4b
  41fc06:	out    0x5f,al
  41fc08:	dec    edx
  41fc09:	sbb    ebp,ebp
  41fc0b:	dec    esi
  41fc0c:	(bad)  
  41fc0d:	pop    ecx
  41fc0e:	ja     0x41fc6e
  41fc10:	aaa    
  41fc11:	and    al,0xcf
  41fc13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc14:	mov    ah,0x89
  41fc16:	jb     0x41fc65
  41fc18:	and    BYTE PTR [edi],ch
  41fc1a:	hlt    
  41fc1b:	sub    BYTE PTR ds:[ebx+0x3bf2f32a],ah
  41fc22:	out    0x30,al
  41fc24:	gs sbb ch,bl
  41fc27:	dec    ebx
  41fc28:	and    bh,BYTE PTR [esi]
  41fc2a:	lods   al,BYTE PTR ds:[esi]
  41fc2b:	cmc    
  41fc2c:	jno    0x41fbd4
  41fc2e:	inc    eax
  41fc2f:	lahf   
  41fc30:	fs sbb al,0xc0
  41fc33:	popf   
  41fc34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc36:	push   esi
  41fc37:	sahf   
  41fc38:	push   ebx
  41fc39:	sub    eax,0xe8058ae5
  41fc3e:	or     al,0x2f
  41fc40:	retf   
  41fc41:	add    bh,0x1
  41fc44:	jl     0x41fc29
  41fc46:	call   0xd513ab41
  41fc4b:	push   esi
  41fc4c:	adc    edi,DWORD PTR [ecx+ebp*4+0x2f4ca090]
  41fc53:	sub    dh,BYTE PTR [esi]
  41fc55:	(bad)  
  41fc56:	call   0xbb3e107b
  41fc5b:	inc    edx
  41fc5c:	push   eax
  41fc5d:	and    DWORD PTR [esi-0x55],esi
  41fc60:	pop    es
  41fc61:	out    0xf,al
  41fc63:	stc    
  41fc64:	scas   eax,DWORD PTR es:[edi]
  41fc65:	xchg   esi,eax
  41fc66:	push   esp
  41fc67:	dec    esi
  41fc68:	dec    eax
  41fc69:	add    esi,DWORD PTR [edx+0x74]
  41fc6c:	test   al,0x79
  41fc6e:	loop   0x41fca1
  41fc70:	cs xor esp,ecx
  41fc73:	cmp    eax,0xb03d675e
  41fc78:	jl     0x41fc4f
  41fc7a:	loop   0x41fc0c
  41fc7c:	pop    ecx
  41fc7d:	out    0x85,eax
  41fc7f:	mov    al,ds:0xa9688f77
  41fc84:	inc    ebx
  41fc85:	ja     0x41fc9b
  41fc87:	ja     0x41fc3b
  41fc89:	jne    0x41fc92
  41fc8b:	jns    0x41fc76
  41fc8d:	retf   0x6242
  41fc90:	(bad)  [ebp+esi*8-0x6850f559]
  41fc97:	ins    DWORD PTR es:[edi],dx
  41fc98:	pop    esi
  41fc99:	loop   0x41fc5a
  41fc9b:	stos   BYTE PTR es:[edi],al
  41fc9c:	push   bp
  41fc9e:	push   esi
  41fc9f:	cmc    
  41fca0:	sbb    bh,0xd5
  41fca3:	mov    bh,0x37
  41fca5:	mov    ch,0x21
  41fca7:	jl     0x41fcac
  41fca9:	fdiv   QWORD PTR [edx+0x30d0c4fe]
  41fcaf:	call   0xe09b:0x611c630f
  41fcb6:	retf   0xb6bf
  41fcb9:	dec    ebx
  41fcba:	fist   DWORD PTR [edi]
  41fcbc:	jle    0x41fcd8
  41fcbe:	cmp    al,0xa5
  41fcc0:	js     0x41fc45
  41fcc2:	xor    esi,DWORD PTR [edx]
  41fcc4:	push   esp
  41fcc5:	dec    esp
  41fcc6:	inc    edx
  41fcc7:	sub    ebx,DWORD PTR [esi]
  41fcc9:	dec    ebx
  41fcca:	(bad)
  41fccd:	test   DWORD PTR [edx],eax
  41fccf:	add    al,0x57
  41fcd1:	dec    ebp
  41fcd2:	ds aaa 
  41fcd4:	outs   dx,DWORD PTR ds:[esi]
  41fcd5:	cwde   
  41fcd6:	jnp    0x41fc9f
  41fcd8:	sub    ch,BYTE PTR [ebp+0x74]
  41fcdb:	fnstenv [ebx+ecx*4+0x61]
  41fcdf:	cmp    esp,ebx
  41fce1:	fild   QWORD PTR [edx-0x11]
  41fce4:	jo     0x41fd28
  41fce6:	mov    ds:0xd64c17aa,eax
  41fceb:	jg     0x41fd0c
  41fced:	xlat   BYTE PTR ds:[ebx]
  41fcee:	mov    eax,ds:0xa419ddb8
  41fcf3:	jp     0x41fc93
  41fcf5:	popa   
  41fcf6:	push   edi
  41fcf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcf8:	sahf   
  41fcf9:	xor    ebp,DWORD PTR [ecx-0x321e0ee1]
  41fcff:	out    dx,al
  41fd00:	in     al,dx
  41fd01:	fs ss popf 
  41fd04:	dec    edi
  41fd05:	dec    esp
  41fd06:	fdiv   QWORD PTR [eax]
  41fd08:	(bad)  
  41fd09:	cmp    cl,bl
  41fd0b:	jg     0x41fd49
  41fd0d:	xor    eax,0x76262d2a
  41fd12:	ret    0x64e4
  41fd15:	pop    eax
  41fd16:	push   esi
  41fd17:	pop    ebx
  41fd18:	xchg   ebx,eax
  41fd19:	inc    ecx
  41fd1a:	cmc    
  41fd1b:	aam    0xb6
  41fd1d:	ror    ebx,cl
  41fd1f:	cdq    
  41fd20:	(bad)  
  41fd21:	cmp    dh,BYTE PTR [edx+eax*8+0xf]
  41fd25:	ja     0x41fcb0
  41fd27:	repnz mov fs,WORD PTR [ebx]
  41fd2a:	jne    0x41fd48
  41fd2c:	lods   eax,DWORD PTR ds:[esi]
  41fd2d:	xchg   cl,al
  41fd2f:	fcmovnb st,st(2)
  41fd31:	lea    edx,[edx-0x9]
  41fd34:	and    DWORD PTR [edx+esi*1-0xf5d5c01],ecx
  41fd3b:	mov    ecx,0x2478084c
  41fd41:	push   esp
  41fd42:	adc    BYTE PTR [esi+0x5c1b2f77],dl
  41fd48:	push   esp
  41fd49:	and    BYTE PTR ds:0x7168f946,cl
  41fd4f:	pop    esi
  41fd50:	les    esp,FWORD PTR ds:0x1162754f
  41fd56:	and    DWORD PTR [edx-0x19],edi
  41fd59:	inc    edi
  41fd5a:	adc    al,0x20
  41fd5c:	stos   BYTE PTR es:[edi],al
  41fd5d:	xor    eax,0x161b2763
  41fd62:	les    esi,FWORD PTR [ebx+0x711ec6ac]
  41fd68:	pop    es
  41fd69:	push   ecx
  41fd6a:	mov    edx,0xe5de8248
  41fd6f:	aad    0x64
  41fd71:	pop    eax
  41fd72:	jmp    0x41fd04
  41fd74:	sbb    eax,DWORD PTR [ecx-0x36b5da5b]
  41fd7a:	pop    es
  41fd7b:	inc    ebp
  41fd7c:	push   0x5a
  41fd7e:	add    edi,DWORD PTR ds:0xb02e072a
  41fd84:	imul   eax,DWORD PTR [edi+0x6a057874],0x1a8a2e60
  41fd8e:	xor    DWORD PTR [ecx],esp
  41fd90:	or     DWORD PTR [esi-0x3c],esi
  41fd93:	popa   
  41fd94:	pop    edx
  41fd95:	std    
  41fd96:	mov    edi,0x8f0db8c6
  41fd9b:	rol    DWORD PTR [esi],1
  41fd9d:	(bad)  
  41fd9e:	leave  
  41fd9f:	mov    cl,0x85
  41fda1:	pop    ecx
  41fda2:	mov    ds:0x4e939444,al
  41fda7:	clc    
  41fda8:	dec    ecx
  41fda9:	cmc    
  41fdaa:	or     edi,DWORD PTR [eax+0xc]
  41fdad:	test   al,0xa8
  41fdaf:	dec    ebx
  41fdb0:	add    ecx,DWORD PTR [esi+0x6d3961eb]
  41fdb6:	aad    0x15
  41fdb8:	les    esp,FWORD PTR [edx]
  41fdba:	xor    eax,DWORD PTR [edi]
  41fdbc:	arpl   WORD PTR [ecx+0x65c249ce],bp
  41fdc2:	sub    DWORD PTR [edi-0x7],edx
  41fdc5:	xchg   ecx,eax
  41fdc6:	sub    DWORD PTR [edx+0x79462ce7],0x39
  41fdcd:	add    bl,BYTE PTR [edi+0x3a49619d]
  41fdd3:	iret   
  41fdd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdd5:	add    al,0xc0
  41fdd7:	pushf  
  41fdd8:	xor    ebp,esp
  41fdda:	mov    cl,BYTE PTR [ecx]
  41fddc:	fs inc ebx
  41fdde:	out    dx,eax
  41fddf:	js     0x41fd98
  41fde1:	xor    DWORD PTR [edi],0xb4e35fc8
  41fde7:	and    al,0x1a
  41fde9:	aam    0xca
  41fdeb:	cmp    eax,DWORD PTR [ebx-0x1e]
  41fdee:	mov    ebp,0x375db08c
  41fdf3:	cld    
  41fdf4:	cmp    esp,esp
  41fdf6:	std    
  41fdf7:	lea    eax,[eax]
	...
  41ffd1:	add    BYTE PTR [eax],al
  41ffd3:	add    BYTE PTR [edi],ah
  41ffd5:	and    eax,0xbb873b85
  41ffda:	mov    edi,0xe22d13d
  41ffdf:	pusha  
  41ffe0:	popf   
  41ffe1:	inc    ebp
  41ffe2:	test   DWORD PTR [eax-0x3d],edx
  41ffe5:	ja     0x41ffe8
  41ffe7:	add    BYTE PTR ds:0x25000007,ah
  41ffed:	jns    0x41ffca
  41ffef:	and    cl,BYTE PTR [ecx+0x12]
  41fff2:	sbb    al,0xcc
  41fff4:	add    BYTE PTR [ebx+0x38],dh
  41fff7:	call   0xbe:0x23609be1
  41fffe:	xor    bl,BYTE PTR [ecx]
  420000:	adc    dl,dh
  420002:	adc    dl,ah
  420004:	xchg   esi,eax
  420005:	mov    eax,ds:0x404dc9c5
  42000a:	(bad)  
  42000b:	push   edx
  42000c:	or     DWORD PTR [edi-0x28e4f48a],ebx
  420012:	or     eax,0xe7c8d18c
  420017:	outs   dx,BYTE PTR ds:[esi]
  420018:	or     al,BYTE PTR [ebp-0x2bef759e]
  42001e:	xor    cl,al
  420020:	and    ch,BYTE PTR [edi-0x83afcc5]
  420026:	ins    DWORD PTR es:[edi],dx
  420027:	lods   eax,DWORD PTR ds:[esi]
  420028:	mov    ebx,0x5f25d3c7
  42002d:	dec    ebx
  42002e:	es or  bl,dh
  420031:	adc    al,0x6a
  420033:	pop    ds
  420034:	lds    eax,FWORD PTR [edi-0x3373611]
  42003a:	popf   
  42003b:	sbb    DWORD PTR [ebx-0x31],ebp
  42003e:	mov    esi,0xad879e57
  420043:	jb     0x42007b
  420045:	sbb    esi,DWORD PTR gs:[esi-0x52]
  420049:	push   ebx
  42004a:	pop    ds
  42004b:	in     al,0xef
  42004d:	gs inc sp
  420050:	dec    ebx
  420051:	nop
  420052:	lods   al,BYTE PTR ds:[esi]
  420053:	mov    dl,BYTE PTR [eax+0x34]
  420056:	dec    edx
  420057:	sbb    dh,BYTE PTR [edi+0x7c]
  42005a:	lods   eax,DWORD PTR ds:[esi]
  42005b:	std    
  42005c:	repnz arpl WORD PTR [ecx+edi*8],sp
  420060:	(bad)  
  420061:	jnp    0x41ffe3
  420063:	lock test al,0x51
  420066:	sbb    ebp,DWORD PTR [esi]
  420068:	lahf   
  420069:	gs lahf 
  42006b:	dec    esi
  42006c:	push   ss
  42006d:	enter  0x472f,0x70
  420071:	fld    QWORD PTR [ebp-0xa]
  420074:	mov    ch,0x15
  420076:	mov    ds:0x9327e4d0,eax
  42007b:	mov    edx,esp
  42007d:	nop
  42007e:	int3   
  42007f:	sub    al,BYTE PTR es:[esi-0x1de106e0]
  420086:	push   ebp
  420087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420088:	mov    ebx,0xc8662109
  42008d:	rcr    DWORD PTR ds:0xe03b0c92,0x46
  420094:	call   DWORD PTR [ecx-0x57158113]
  42009a:	ss pop ebx
  42009c:	dec    edi
  42009d:	ss jge 0x4200fd
  4200a0:	cmp    cl,bl
  4200a2:	popa   
  4200a3:	rol    DWORD PTR [esi+ecx*1+0x350e6d33],0xc1
  4200ab:	xchg   edx,eax
  4200ac:	push   ss
  4200ad:	sub    eax,0x83949fc6
  4200b2:	inc    eax
  4200b3:	clc    
  4200b4:	jo     0x420069
  4200b6:	nop
  4200b7:	fnstcw WORD PTR [ebx]
  4200b9:	ds jl  0x4200fb
  4200bc:	jge    0x420060
  4200be:	mov    WORD PTR [eax],fs
  4200c0:	push   0xffffffa2
  4200c2:	xor    BYTE PTR [edx-0x43],ah
  4200c5:	aaa    
  4200c6:	pop    esp
  4200c7:	fisttp QWORD PTR [ecx+0x35e17efb]
  4200cd:	repnz pushf 
  4200cf:	dec    eax
  4200d0:	push   0xfffffff7
  4200d2:	aaa    
  4200d3:	inc    esp
  4200d4:	jl     0x42005f
  4200d6:	add    al,0x27
  4200d9:	imul   edi,DWORD PTR [ecx],0xfffffff3
  4200dc:	test   BYTE PTR [ecx],cl
  4200de:	ss mov bh,0x57
  4200e1:	stos   BYTE PTR es:[edi],al
  4200e2:	pop    ebp
  4200e3:	cmp    ah,ah
  4200e5:	sub    dh,BYTE PTR [ecx]
  4200e7:	gs dec ebx
  4200e9:	sbb    ch,BYTE PTR [eax-0x58d89bbe]
  4200ef:	adc    eax,0xbf14e32e
  4200f4:	mov    edi,0x532bcc65
  4200f9:	or     al,BYTE PTR es:[edi+0x1]
  4200fd:	ret    
  4200fe:	popf   
  4200ff:	push   esi
  420100:	and    eax,0x474402f5
  420105:	pop    esp
  420106:	hlt    
  420107:	sub    eax,0x57f26352
  42010c:	shr    DWORD PTR [ecx+0x4bd3b251],cl
  420112:	mov    ss,WORD PTR [esi]
  420114:	add    bl,BYTE PTR [eax]
  420116:	adc    al,0x6
  420118:	enter  0x386d,0x8e
  42011c:	ins    BYTE PTR es:[edi],dx
  42011d:	jg     0x4200de
  42011f:	fmul   st,st(0)
  420121:	lock addr16 ja 0x42011e
  420125:	(bad)  
  420126:	(bad)  
  420127:	mov    BYTE PTR [ebx+eiz*4+0x777d9c8b],dl
  42012e:	sub    al,0x80
  420130:	sar    ecx,1
  420132:	gs stos DWORD PTR es:[edi],eax
  420134:	or     DWORD PTR ds:0x9343837f,edx
  42013a:	xor    al,0x36
  42013c:	sbb    al,bh
  42013e:	or     DWORD PTR [ebp+0x76],eax
  420141:	daa    
  420142:	mov    DWORD PTR [ecx],eax
  420144:	and    ch,BYTE PTR [esi-0x7a]
  420147:	mov    bl,0x60
  420149:	push   es
  42014a:	scas   eax,DWORD PTR es:[edi]
  42014b:	and    bl,BYTE PTR [ebp-0x27]
  42014e:	and    ebp,DWORD PTR [edi]
  420150:	loope  0x420178
  420152:	mov    bh,0x75
  420154:	fld    TBYTE PTR [edi-0x37bab84e]
  42015a:	mov    ebp,0x23e28374
  42015f:	aad    0x9e
  420161:	pop    ebp
  420162:	repnz stos DWORD PTR es:[edi],eax
  420164:	mov    al,ds:0x628ad708
  420169:	xor    DWORD PTR [ecx],eax
  42016b:	out    0xae,eax
  42016d:	sub    ebx,DWORD PTR [ebp+0x7082b1c6]
  420173:	(bad)  [ecx+0x30]
  420176:	stos   DWORD PTR es:[edi],eax
  420177:	cs retf 0xadd
  42017b:	inc    ebx
  42017c:	mov    al,0x54
  42017e:	iret   
  42017f:	mov    esi,0xff12868e
  420184:	sub    eax,0x20d0d71
  420189:	jo     0x42014d
  42018b:	ins    BYTE PTR es:[edi],dx
  42018c:	pop    ss
  42018d:	aas    
  42018e:	rcl    DWORD PTR [edi],0xc
  420191:	sbb    dl,dh
  420193:	mov    ebp,0x8c06bbe1
  420198:	add    ebx,DWORD PTR [eax]
  42019a:	mov    edi,eax
  42019c:	sti    
  42019d:	fisttp WORD PTR [eax+0x64]
  4201a0:	hlt    
  4201a1:	in     al,dx
  4201a2:	cmp    BYTE PTR [ecx+ebp*8],dl
  4201a5:	mov    edx,0xe796e812
  4201aa:	retf   0x8d0e
  4201ad:	cmp    al,0xae
  4201af:	mov    dh,0x45
  4201b1:	jo     0x420172
  4201b3:	test   DWORD PTR [eax-0x1d],0x38438193
  4201ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201bb:	les    edi,FWORD PTR [esi]
  4201bd:	mov    ecx,DWORD PTR [ecx]
  4201bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201c0:	and    al,0xda
  4201c2:	or     eax,eax
  4201c4:	cmp    BYTE PTR [edi-0x7c64b025],dl
  4201ca:	sbb    eax,0x81aac559
  4201cf:	fisub  WORD PTR [edx-0xdc09417]
  4201d5:	std    
  4201d6:	inc    ecx
  4201d7:	out    dx,eax
  4201d8:	or     DWORD PTR [ebx-0x7c],esi
  4201db:	xchg   esp,eax
  4201dc:	dec    ebx
  4201dd:	mov    ?,WORD PTR [edi+0xaa403b8]
  4201e3:	dec    ebp
  4201e4:	test   eax,0xbf90a537
  4201e9:	sti    
  4201ea:	imul   BYTE PTR ds:0xb86e3783
  4201f0:	cmp    al,0x61
  4201f2:	push   0xa7455286
  4201f7:	pop    eax
  4201f8:	xor    eax,0x8e1bcdde
  4201fd:	inc    esi
  4201fe:	sub    ah,bl
  420200:	mov    esi,0x8d91f986
  420205:	sub    cl,dl
  420207:	and    al,0xb1
  420209:	pop    es
  42020a:	pop    ecx
  42020b:	out    0x26,al
  42020d:	sub    eax,0xc488c678
  420212:	xchg   DWORD PTR [esi+0x4],ebx
  420215:	fstp   QWORD PTR [edx+ebp*8-0x20]
  420219:	imul   eax,DWORD PTR [eax],0x725ff7c8
  42021f:	and    ecx,DWORD PTR [edi+0x44150340]
  420225:	enter  0x20f0,0x38
  420229:	pop    ds
  42022a:	cmp    DWORD PTR [ebx+ebp*8],0x664d9809
  420231:	sar    bh,1
  420233:	and    al,BYTE PTR [edx]
  420235:	inc    esp
  420236:	stc    
  420237:	inc    ebx
  420238:	and    ah,BYTE PTR [ebx+0x31]
  42023b:	fistp  WORD PTR [ebx-0x16]
  42023e:	mov    eax,ds:0xc6ccdad
  420243:	(bad)  
  420244:	out    dx,al
  420245:	test   eax,0x63871339
  42024a:	sbb    BYTE PTR [esi],dh
  42024c:	adc    ch,dh
  42024e:	jns    0x4201d0
  420250:	leave  
  420251:	inc    edi
  420252:	repz xchg edx,eax
  420254:	add    BYTE PTR [eax],0xff
  420257:	xchg   edx,eax
  420258:	daa    
  420259:	xchg   ebx,eax
  42025a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42025b:	popa   
  42025c:	dec    eax
  42025d:	rcl    BYTE PTR [esi-0x46],0xeb
  420261:	lods   eax,DWORD PTR ds:[esi]
  420262:	jnp    0x420218
  420264:	sar    DWORD PTR [edx+edx*8],cl
  420267:	or     DWORD PTR [ebx-0x52],edi
  42026a:	(bad)  
  42026b:	les    edi,FWORD PTR [esi+0x676bde09]
  420271:	sbb    eax,0x676e5d02
  420276:	adc    eax,DWORD PTR [edx-0x64]
  420279:	cmp    ebp,DWORD PTR [edi-0x2d]
  42027c:	(bad)  
  42027d:	hlt    
  42027e:	out    dx,eax
  42027f:	popf   
  420280:	out    0xe7,eax
  420282:	mov    cl,0xa0
  420284:	and    al,0x6f
  420286:	out    0x4a,al
  420288:	aad    0xe9
  42028a:	pop    ss
  42028b:	sahf   
  42028c:	fild   WORD PTR [eax]
  42028e:	fneni(8087 only) 
  420290:	loop   0x4202e1
  420292:	add    eax,0xe7132ad1
  420297:	mov    eax,ds:0xc40ef8e2
  42029c:	mov    bh,0xad
  42029e:	cwde   
  42029f:	and    ecx,0x19f3037b
  4202a5:	jle    0x42028b
  4202a7:	add    ebx,edi
  4202a9:	retf   0x7e7
  4202ac:	mov    al,0x7b
  4202ae:	in     eax,0x70
  4202b0:	outs   dx,BYTE PTR ds:[esi]
  4202b1:	cld    
  4202b2:	jnp    0x420313
  4202b4:	xor    eax,0x65a434b6
  4202b9:	xchg   edi,eax
  4202ba:	icebp  
  4202bb:	xor    DWORD PTR [eax+0x2b],ebp
  4202be:	push   esi
  4202bf:	inc    edi
  4202c0:	lds    edx,FWORD PTR [eax+0x7d]
  4202c3:	dec    edi
  4202c4:	jl     0x420279
  4202c6:	call   0xc5b67809
  4202cb:	fdiv   QWORD PTR [esi-0x6f038c37]
  4202d1:	shl    DWORD PTR [eax],1
  4202d3:	jnp    0x4202b7
  4202d5:	cmp    cl,BYTE PTR [edx]
  4202d7:	and    eax,0x634ac25d
  4202dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202dd:	les    esi,FWORD PTR [edx+0x26]
  4202e0:	cwde   
  4202e1:	or     eax,0x4e3c7b04
  4202e6:	mov    esi,cs
  4202e8:	enter  0xeabe,0xfa
  4202ec:	push   es
  4202ed:	and    DWORD PTR [eax+0x6579f79d],ebx
  4202f3:	loope  0x42033a
  4202f5:	cmp    BYTE PTR [ecx-0x28],dl
  4202f8:	jge    0x420316
  4202fa:	push   eax
  4202fb:	inc    eax
  4202fc:	call   0xea69:0x5a81bbd
  420303:	lds    eax,FWORD PTR [eax+0x8]
  420306:	rcl    BYTE PTR [edi+0x2f],1
  420309:	jmp    0x42029f
  42030b:	and    eax,0xf5f607
  420310:	xchg   edx,eax
  420311:	add    al,BYTE PTR [ebx+0x2ee0c20]
  420317:	xchg   edi,eax
  420318:	lods   eax,DWORD PTR ds:[esi]
  420319:	mov    ss,WORD PTR [esi]
  42031b:	retf   0xa26d
  42031e:	mov    cl,0xb1
  420320:	jno    0x4202b2
  420322:	ss adc al,0x6e
  420325:	xchg   edx,eax
  420326:	inc    eax
  420327:	pop    ecx
  420328:	in     al,dx
  420329:	jle    0x42034a
  42032b:	dec    ebx
  42032c:	ds inc ecx
  42032e:	into   
  42032f:	ss and al,0xb1
  420332:	into   
  420333:	xlat   BYTE PTR ds:[ebx]
  420334:	sti    
  420335:	sbb    DWORD PTR [edi],ebx
  420337:	in     al,0x50
  420339:	ds out dx,al
  42033b:	(bad)  
  42033c:	fldenv [edi+0x3f]
  42033f:	retf   
  420340:	add    edi,DWORD PTR [edx]
  420342:	shl    esp,0xf2
  420345:	push   esi
  420346:	test   DWORD PTR [edi+0x41],esp
  420349:	mov    ch,0xd3
  42034b:	mov    al,0x9d
  42034d:	add    eax,0x9d06e212
  420352:	push   0xa669ff8c
  420357:	cwde   
  420358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420359:	jmp    0x1dc51b01
  42035e:	add    BYTE PTR [ecx-0x219adb59],0xd5
  420365:	mov    esp,DWORD PTR [eax]
  420367:	push   0x24
  420369:	fcom   QWORD PTR [ebx+0x7f]
  42036c:	dec    ecx
  42036d:	mov    eax,ds:0xefa00d7e
  420372:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420373:	repnz in eax,0x48
  420376:	sub    BYTE PTR [ebp-0x17264c89],al
  42037c:	xchg   esi,eax
  42037d:	daa    
  42037e:	pop    esi
  42037f:	mov    ds:0xa239fbf8,al
  420384:	mov    dl,0xfc
  420386:	mov    ah,0xa0
  420388:	xchg   esp,eax
  420389:	mov    al,ds:0x40ee786
  42038e:	add    eax,DWORD PTR [edx-0x14]
  420391:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  420393:	jns    0x420371
  420395:	mov    ds:0xfb8283ca,eax
  42039a:	loope  0x420408
  42039c:	std    
  42039d:	sub    al,0x65
  42039f:	adc    BYTE PTR [edx],0xd5
  4203a2:	lds    edi,FWORD PTR [edx+eiz*1+0x9]
  4203a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203a7:	mov    cl,0x6
  4203a9:	xchg   BYTE PTR [ecx+ebp*4+0xd29e6b],ah
  4203b0:	int3   
  4203b1:	push   ss
  4203b2:	lock mov ebp,0xe0f16f32
  4203b8:	ror    BYTE PTR [eax],cl
  4203ba:	xor    edx,DWORD PTR [edi+edi*2-0x57]
  4203be:	sbb    esp,DWORD PTR [ebx]
  4203c0:	les    ebx,FWORD PTR [ebx+ebx*1+0x2f]
  4203c4:	mov    BYTE PTR [ecx],ah
  4203c6:	test   eax,0x99891918
  4203cb:	mov    al,0x2e
  4203cd:	xor    BYTE PTR [ecx+0x2aceb3c5],al
  4203d3:	inc    eax
  4203d4:	adc    bl,BYTE PTR [edx-0x6abbeff7]
  4203da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203db:	pop    esp
  4203dc:	cmp    ebx,esp
  4203de:	cdq    
  4203df:	test   esi,esi
  4203e1:	pop    eax
  4203e2:	inc    edi
  4203e3:	fsub   DWORD PTR [edi-0xa3e1471]
  4203e9:	repnz cmp BYTE PTR [ecx-0x47],cl
  4203ed:	nop
  4203ee:	jg     0x420388
  4203f0:	cwde   
  4203f1:	xor    edx,DWORD PTR [edi]
  4203f3:	jge    0x4203d7
  4203f5:	add    al,0x6a
  4203f7:	int    0xd5
  4203f9:	retf   
  4203fa:	(bad)
  4203ff:	and    al,0x11
  420401:	mov    ds:0x3cdfb993,al
  420406:	sbb    al,cl
  420408:	push   edx
  420409:	push   esi
  42040a:	iret   
  42040b:	lock ins DWORD PTR es:[edi],dx
  42040d:	ins    DWORD PTR es:[edi],dx
  42040e:	add    al,0xaf
  420410:	mov    ds:0xd2ba73e8,al
  420415:	mov    edx,ecx
  420417:	leave  
  420418:	push   ebx
  420419:	pop    ecx
  42041a:	rcr    DWORD PTR [ecx+eax*1+0x73c199a3],cl
  420421:	jnp    0x420425
  420423:	push   ecx
  420424:	or     bh,BYTE PTR [eax-0xc017093]
  42042a:	xchg   BYTE PTR [eax],dl
  42042c:	or     DWORD PTR [esi-0x618aed73],esp
  420432:	mov    ecx,0x500f0895
  420437:	push   esi
  420438:	pusha  
  420439:	xchg   esp,eax
  42043a:	aaa    
  42043b:	mov    ebx,0x3f3341af
  420440:	out    dx,eax
  420441:	cs jns 0x420474
  420444:	dec    eax
  420445:	mov    bl,0x46
  420447:	sub    eax,DWORD PTR [edi]
  420449:	mov    dl,0x38
  42044b:	call   0x6e39a107
  420450:	jle    0x4204c4
  420452:	popf   
  420453:	xor    BYTE PTR [edx+0x37306a4e],ch
  420459:	(bad)  
  42045a:	sar    DWORD PTR [esi],cl
  42045c:	and    BYTE PTR [ebx+ecx*2],dh
  42045f:	or     ch,BYTE PTR [ebx-0x1db0138f]
  420465:	rcl    BYTE PTR [eax-0x3a],cl
  420468:	jb     0x42041b
  42046a:	jp     0x420460
  42046c:	loope  0x420462
  42046e:	add    al,0x8b
  420470:	jo     0x420436
  420472:	adc    DWORD PTR [ebp-0x1a77bea4],esp
  420478:	out    dx,al
  420479:	je     0x420402
  42047b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42047c:	test   esi,ebx
  42047e:	popf   
  42047f:	xor    bh,ch
  420481:	ret    
  420482:	pop    esi
  420483:	xor    eax,0xe46dbf0f
  420488:	jmp    0xc0a84627
  42048d:	js     0x4204df
  42048f:	in     al,dx
  420490:	push   es
  420491:	and    eax,esp
  420493:	ins    BYTE PTR es:[edi],dx
  420494:	stos   DWORD PTR es:[edi],eax
  420495:	repz sbb ax,0x2f84
  42049a:	popa   
  42049b:	stos   DWORD PTR es:[edi],eax
  42049c:	push   esp
  42049d:	or     al,0x2
  42049f:	aam    0x26
  4204a1:	retf   
  4204a2:	push   ebx
  4204a3:	arpl   WORD PTR [ebp-0x2c],si
  4204a6:	pop    es
  4204a7:	sub    al,0x52
  4204a9:	or     DWORD PTR [ecx],ecx
  4204ab:	clc    
  4204ac:	ss push 0x133d93d2
  4204b2:	xor    al,0x21
  4204b4:	outs   dx,BYTE PTR ds:[esi]
  4204b5:	iret   
  4204b6:	mov    edx,0xb5944188
  4204bb:	fdivr  DWORD PTR [ebp+edi*1-0x49]
  4204bf:	leave  
  4204c0:	pop    esi
  4204c1:	adc    dh,BYTE PTR [ebx]
  4204c3:	ins    DWORD PTR es:[edi],dx
  4204c4:	inc    edx
  4204c5:	jmp    0x249fd539
  4204ca:	sub    eax,0xc7f1849
  4204cf:	loopne 0x4204df
  4204d1:	(bad)  
  4204d2:	sub    DWORD PTR [edx+0x2374a523],esi
  4204d8:	xchg   esp,eax
  4204d9:	inc    edi
  4204da:	ret    
  4204db:	push   cs
  4204dc:	pop    esp
  4204dd:	sub    ecx,0x1c5ace9d
  4204e3:	int3   
  4204e4:	inc    edx
  4204e5:	das    
  4204e6:	xchg   edi,eax
  4204e7:	addr16 or cl,0x29
  4204eb:	push   ebp
  4204ec:	or     DWORD PTR [eax-0x67328560],edi
  4204f2:	sub    al,0x4a
  4204f4:	vcmpsd xmm5,xmm6,QWORD PTR [esi-0xf],0x66
  4204fa:	adc    ebp,0xbe33761e
  420500:	mov    al,0x5d
  420502:	push   es
  420503:	adc    dh,dh
  420505:	lds    eax,FWORD PTR [ecx]
  420507:	call   0xece02eaa
  42050c:	xchg   ebp,eax
  42050d:	sub    edi,esi
  42050f:	neg    DWORD PTR [esi-0xc]
  420512:	sbb    ebp,DWORD PTR [eax-0x17]
  420515:	inc    ecx
  420516:	xchg   edx,eax
  420517:	dec    eax
  420518:	jge    0x42054d
  42051a:	mov    edx,0x227b0da7
  42051f:	popf   
  420520:	fs jb  0x4204c0
  420523:	test   edx,edx
  420525:	push   cs
  420526:	cmp    ebp,esp
  420528:	cmp    edx,DWORD PTR [ecx+0x486b0fa8]
  42052e:	jnp    0x420514
  420530:	push   ds
  420531:	inc    esi
  420532:	icebp  
  420533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420534:	in     al,dx
  420535:	xchg   ebx,eax
  420536:	popa   
  420537:	rcr    BYTE PTR [edi+0x545bb0b7],0xc6
  42053e:	inc    eax
  42053f:	mov    ds,WORD PTR ds:0xba1f3bf9
  420545:	sbb    BYTE PTR [edi],0xa5
  420548:	lea    ecx,[ecx]
  42054a:	push   DWORD PTR [edi]
  42054c:	lods   al,BYTE PTR ds:[esi]
  42054d:	sub    esi,eax
  42054f:	cld    
  420550:	push   eax
  420551:	xlat   BYTE PTR ds:[ebx]
  420552:	fstp   DWORD PTR [ebx]
  420554:	and    al,0xf5
  420556:	hlt    
  420557:	or     ecx,DWORD PTR ds:0x7dc6c1b1
  42055d:	xchg   DWORD PTR [eax-0x738c767a],esi
  420563:	dec    esi
  420564:	mov    WORD PTR [edi+0x1d],fs
  420567:	fiadd  DWORD PTR [ebx]
  420569:	mov    al,BYTE PTR [ebx]
  42056b:	xchg   ebp,eax
  42056c:	stos   DWORD PTR es:[edi],eax
  42056d:	jle    0x4205e5
  42056f:	loop   0x420576
  420571:	or     ebp,ebp
  420573:	retw   0xef0
  420577:	outs   dx,BYTE PTR ds:[esi]
  420578:	add    al,0xde
  42057a:	jns    0x4205ec
  42057c:	cmp    al,cl
  42057e:	xor    ch,cl
  420580:	pop    ebx
  420581:	mov    edx,0x52fa61d1
  420586:	jns    0x420559
  420588:	mov    ecx,0xe9b9d255
  42058d:	sub    cl,dh
  42058f:	xchg   edi,eax
  420590:	sbb    ecx,ebp
  420592:	ins    DWORD PTR es:[edi],dx
  420593:	or     eax,0x7a90e206
  420598:	and    ch,bh
  42059a:	or     ebx,DWORD PTR [edx+0xa63393c]
  4205a0:	shl    BYTE PTR [edi+0x27],1
  4205a3:	jmp    0xf6bb:0xbd760cad
  4205aa:	fcmove st,st(2)
  4205ac:	fwait
  4205ad:	icebp  
  4205ae:	outs   dx,DWORD PTR ds:[esi]
  4205af:	lahf   
  4205b0:	call   0xce136fd
  4205b5:	imul   eax,DWORD PTR [eax-0xd3a7265],0x60
  4205bc:	jnp    0x42059e
  4205be:	mul    BYTE PTR [eax]
  4205c0:	xchg   esp,eax
  4205c1:	dec    ecx
  4205c2:	les    ecx,FWORD PTR [ecx]
  4205c4:	sti    
  4205c5:	add    esp,DWORD PTR [esi-0x7d091014]
  4205cb:	sti    
  4205cc:	fdiv   st,st(7)
  4205ce:	imul   BYTE PTR es:[esi+ebp*4+0x4]
  4205d3:	add    al,0xb5
  4205d5:	stc    
  4205d6:	mov    bh,0xb
  4205d8:	xor    eax,0x757112ee
  4205dd:	inc    esi
  4205de:	cli    
  4205df:	mov    ds:0x2fc57bee,eax
  4205e4:	mov    edx,0x6a9be0c2
  4205e9:	retf   
  4205ea:	mov    bh,0xda
  4205ec:	push   ss
  4205ed:	xor    BYTE PTR ds:0x2da05168,al
  4205f3:	adc    eax,DWORD PTR [ebx-0x70]
  4205f6:	dec    esp
  4205f7:	ins    DWORD PTR es:[edi],dx
  4205f8:	jmp    0x42062e
  4205fa:	xchg   BYTE PTR [ebp-0xe],dh
  4205fd:	xchg   edi,eax
  4205fe:	jno    0x420593
  420600:	sub    al,0xeb
  420602:	outs   dx,DWORD PTR ds:[esi]
  420603:	sub    cl,BYTE PTR ds:0xa3cf11f8
  420609:	pop    edi
  42060a:	inc    ebx
  42060b:	cmp    bl,ch
  42060d:	mov    WORD PTR [ecx-0x11],?
  420610:	adc    eax,0x86cc8129
  420615:	ss sti 
  420617:	add    cl,BYTE PTR [edi-0x353f7f2d]
  42061d:	loop   0x420634
  42061f:	js     0x42067a
  420621:	xchg   ebx,eax
  420622:	xor    DWORD PTR [eiz*8+0x50b3e4b3],ebx
  420629:	pop    es
  42062a:	push   ebx
  42062b:	loop   0x4205c5
  42062d:	mov    eax,ds:0x404d6880
  420632:	(bad)  
  420633:	fbld   TBYTE PTR [eax-0x4a16a8de]
  420639:	xlat   BYTE PTR ds:[ebx]
  42063a:	repnz fwait
  42063c:	push   ss
  42063d:	xor    al,BYTE PTR [ecx-0x74]
  420640:	cld    
  420641:	add    eax,0x8394a10c
  420646:	or     ecx,edx
  420648:	icebp  
  420649:	xchg   edx,eax
  42064a:	sub    al,0xa7
  42064c:	shl    dh,0xdb
  42064f:	daa    
  420650:	popa   
  420651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420652:	loope  0x420619
  420654:	pop    ecx
  420655:	mov    ebp,0xf6327b57
  42065a:	cmp    esi,DWORD PTR [ebx+0x673bccc6]
  420660:	int    0xce
  420662:	mov    dh,0x1f
  420664:	dec    ecx
  420665:	vmread DWORD PTR [ebp+ecx*8-0x51f62637],esi
  42066d:	(bad)  
  42066f:	dec    edx
  420670:	or     cl,ah
  420672:	xchg   ebx,eax
  420673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420674:	shr    esp,1
  420676:	aaa    
  420677:	dec    eax
  420678:	icebp  
  420679:	call   0x6843163f
  42067e:	leave  
  42067f:	jne    0x420700
  420681:	fsubr  DWORD PTR [edi-0x5f]
  420684:	push   ecx
  420685:	xchg   esi,ebp
  420687:	mov    ds:0x4d8a9fbd,eax
  42068c:	arpl   cx,di
  42068e:	dec    edi
  42068f:	mov    ebx,0xdbda0685
  420694:	pop    es
  420695:	xor    BYTE PTR [eax+edi*1],bl
  420698:	push   edi
  420699:	in     eax,0xa1
  42069b:	int    0x13
  42069d:	or     ch,BYTE PTR [ebp-0x1bab14f6]
  4206a3:	int3   
  4206a4:	loopne 0x4206fb
  4206a6:	jmp    0x31040ee4
  4206ab:	fstp   st(6)
  4206ad:	sbb    eax,0x58055504
  4206b2:	mov    ch,0xc5
  4206b4:	mov    cl,0x9b
  4206b6:	mov    esp,0x7a4ef43a
  4206bb:	pop    edx
  4206bc:	jbe    0x420665
  4206be:	cmp    BYTE PTR [ebp-0x7084387],bl
  4206c4:	dec    eax
  4206c5:	in     al,dx
  4206c6:	ins    BYTE PTR es:[edi],dx
  4206c7:	and    dl,BYTE PTR [edx]
  4206c9:	outs   dx,BYTE PTR ds:[esi]
  4206ca:	add    cl,BYTE PTR [edx+0x17ee9e1d]
  4206d0:	mov    WORD PTR [edi-0x43],gs
  4206d3:	fld    TBYTE PTR [ecx]
  4206d5:	or     BYTE PTR [edi],ch
  4206d7:	mov    eax,ds:0x8c8210a1
  4206dc:	dec    esp
  4206dd:	mov    dh,bl
  4206df:	(bad)  
  4206e0:	push   eax
  4206e1:	ror    BYTE PTR [ecx-0x4c2066b8],0x47
  4206e8:	xchg   ebx,eax
  4206e9:	jp     0x42072f
  4206eb:	xchg   edi,eax
  4206ec:	bound  ecx,QWORD PTR [edi+0x31]
  4206ef:	icebp  
  4206f0:	or     BYTE PTR [ebx],cl
  4206f2:	mov    cl,0xe8
  4206f4:	(bad)  
  4206f5:	aam    0xd4
  4206f7:	and    al,0x17
  4206f9:	add    BYTE PTR [eax-0x77],cl
  4206fc:	retf   0x71a1
  4206ff:	sub    DWORD PTR [ebp+0x6321f5a3],ecx
  420705:	xchg   BYTE PTR [esi+ecx*1-0x6b04c663],ch
  42070c:	push   cs
  42070d:	stos   DWORD PTR es:[edi],eax
  42070e:	dec    eax
  42070f:	sbb    BYTE PTR [ebx+0x0],al
	...
  4208e2:	add    BYTE PTR [eax],al
  4208e4:	add    BYTE PTR [ecx+0x6a],ah
  4208e7:	jmp    0xffd9f403
  4208ec:	jle    0x4208f4
  4208ee:	js     0x42089d
  4208f0:	aam    0x7d
  4208f2:	xchg   ecx,eax
  4208f3:	cmp    eax,0x17ee825
  4208f8:	add    BYTE PTR ds:0x9c000007,ah
  4208fe:	shr    DWORD PTR [esi],1
  420900:	cld    
  420901:	xchg   ebp,eax
  420902:	test   DWORD PTR [eax+0x29],edx
  420905:	mov    cl,0x78
  420907:	pop    edi
  420908:	in     eax,dx
  420909:	sbb    eax,ebx
  42090b:	push   0x47
  42090d:	jecxz  0x4208b2
  42090f:	(bad)  
  420910:	add    BYTE PTR [eax-0x6f3ca044],dl
  420916:	mov    edi,0x38246fc9
  42091b:	loope  0x420991
  42091d:	ds es push 0x43
  420921:	xor    esi,DWORD PTR [eax-0x5866e93b]
  420927:	xor    eax,0x6dca4fbe
  42092c:	out    0x8e,al
  42092e:	rol    DWORD PTR [ebp-0x2],0xac
  420932:	jbe    0x420922
  420934:	jo     0x420927
  420936:	mov    al,ds:0xa1ca7583
  42093b:	sahf   
  42093c:	xchg   ebx,eax
  42093d:	push   ss
  42093e:	pcmpeqb mm5,QWORD PTR [ebx+0x5d52fdc1]
  420945:	inc    edi
  420946:	mov    edi,0x345b41e3
  42094b:	xlat   BYTE PTR ds:[ebx]
  42094c:	and    DWORD PTR [eax-0x43],esp
  42094f:	xchg   ebp,eax
  420950:	stos   BYTE PTR es:[edi],al
  420951:	mov    edi,eax
  420953:	inc    edx
  420954:	fiadd  WORD PTR [edi]
  420956:	not    DWORD PTR [eax+eiz*8+0x2fde482f]
  42095d:	out    0x72,al
  42095f:	imul   esp,DWORD PTR [esi-0x59],0x151b420
  420966:	cmp    esp,0x42d212d1
  42096c:	or     esp,ecx
  42096e:	lods   al,BYTE PTR ds:[esi]
  42096f:	(bad)  
  420970:	fdivrp st(7),st
  420972:	test   al,0x1d
  420974:	mov    dh,0x14
  420976:	loopne 0x42093b
  420978:	mov    edx,0xd356080a
  42097d:	push   cs
  42097e:	mov    ds:0x8057a826,eax
  420983:	pusha  
  420984:	push   cs
  420985:	add    BYTE PTR [eax+0x47],ah
  420988:	mov    esi,0x49732399
  42098d:	aas    
  42098e:	jb     0x420983
  420990:	sub    BYTE PTR [ecx+edx*1+0x5e4364ca],ah
  420997:	dec    ebp
  420998:	das    
  420999:	jns    0x42094b
  42099b:	cmc    
  42099c:	sub    DWORD PTR [eax+ecx*2],esi
  42099f:	sbb    ah,BYTE PTR [esi+0x24]
  4209a2:	pop    es
  4209a3:	in     al,0x36
  4209a5:	or     cl,BYTE PTR [eax+0x5e214771]
  4209ab:	imul   ebp,DWORD PTR [edi-0x3547f143],0x7b
  4209b2:	scas   al,BYTE PTR es:[edi]
  4209b3:	es push 0x8a8c4b7f
  4209b9:	mov    BYTE PTR [esi],0x69
  4209bc:	xchg   ebp,eax
  4209bd:	cld    
  4209be:	cs out dx,eax
  4209c0:	(bad)  
  4209c1:	jne    0x420952
  4209c3:	repz or BYTE PTR [eax-0x2f],cl
  4209c7:	outs   dx,BYTE PTR ds:[esi]
  4209c8:	add    al,0x95
  4209ca:	jmp    0x420a26
  4209cc:	call   0x54fbed5c
  4209d1:	mov    edx,0xd2f24de1
  4209d6:	(bad)
  4209da:	cs test eax,0x3f74130d
  4209e0:	xor    DWORD PTR [edi],esp
  4209e2:	icebp  
  4209e3:	outs   dx,BYTE PTR ds:[esi]
  4209e4:	pushf  
  4209e5:	test   al,0xb5
  4209e7:	add    al,0x8a
  4209e9:	push   0x32
  4209eb:	mov    eax,ds:0xf59d8e30
  4209f0:	retf   
  4209f1:	pop    ebx
  4209f2:	loopne 0x4209a3
  4209f4:	out    0xaa,eax
  4209f6:	pop    esi
  4209f7:	push   0xd41b5944
  4209fc:	pop    ds
  4209fd:	rol    BYTE PTR [edi-0x11],cl
  420a00:	and    eax,DWORD PTR [esp+ecx*8+0x4db941a7]
  420a07:	gs mov bh,0xa2
  420a0a:	mov    dl,0xbd
  420a0c:	cli    
  420a0d:	idiv   esp
  420a0f:	retf   0x106f
  420a12:	popf   
  420a13:	mov    ecx,0xe7128576
  420a18:	adc    eax,0xc7a16254
  420a1d:	sub    al,0x9e
  420a1f:	fild   QWORD PTR [ebx+ebp*2]
  420a22:	push   edx
  420a23:	out    dx,eax
  420a24:	and    BYTE PTR ds:0xfc690346,dh
  420a2a:	and    al,BYTE PTR [esi]
  420a2c:	jp     0x420a78
  420a2e:	fdiv   QWORD PTR [esi+edi*2]
  420a31:	gs pop ebx
  420a33:	push   ebp
  420a34:	addr16 shr bl,cl
  420a37:	xor    eax,0x55f8611
  420a3c:	mov    ecx,0x6a09ac50
  420a41:	aam    0xc
  420a43:	push   edi
  420a44:	sub    bh,dh
  420a46:	jno    0x420a3a
  420a48:	daa    
  420a49:	xchg   edi,eax
  420a4a:	xor    ah,BYTE PTR [edi-0x63]
  420a4d:	cld    
  420a4e:	adc    esi,DWORD PTR ds:0x95020554
  420a54:	xor    al,BYTE PTR ds:0x2e5c4b28
  420a5a:	out    dx,eax
  420a5b:	dec    edi
  420a5c:	cmc    
  420a5d:	or     ecx,DWORD PTR [edi+0x25]
  420a60:	vaddsubps xmm0,xmm6,XMMWORD PTR [edi-0x2]
  420a65:	mov    esp,ecx
  420a67:	mov    al,ds:0x19938c9d
  420a6c:	(bad)  
  420a6d:	lods   al,BYTE PTR ds:[esi]
  420a6e:	mov    eax,0x94eb4ecd
  420a73:	shl    BYTE PTR [edx+0x3e],0x2e
  420a77:	mul    BYTE PTR [eax-0x2f]
  420a7a:	mov    ebp,0x4cff4b15
  420a7f:	rcl    esi,1
  420a81:	jg     0x420a5d
  420a83:	or     al,0xf3
  420a85:	inc    ebx
  420a86:	dec    edi
  420a87:	or     edx,DWORD PTR [edi-0x9]
  420a8a:	out    dx,eax
  420a8b:	idiv   BYTE PTR [edi+0x51a7573]
  420a91:	mov    ds:0xd545ccf1,eax
  420a96:	xchg   BYTE PTR [ebp+0x39679de5],bl
  420a9c:	and    ebp,DWORD PTR [esi+0x5aa6d186]
  420aa2:	sbb    al,0xaa
  420aa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420aa5:	mov    ebx,0x1ec31440
  420aaa:	loop   0x420ade
  420aac:	dec    ecx
  420aad:	out    0x3c,al
  420aaf:	lock adc ah,BYTE PTR [eax]
  420ab2:	or     ch,ch
  420ab4:	fcomp  st(4)
  420ab6:	ds cdq 
  420ab8:	mov    al,0xdd
  420aba:	jne    0x420af3
  420abc:	inc    ecx
  420abd:	out    dx,al
  420abe:	(bad)  
  420ac0:	and    DWORD PTR [ecx+0x748fb780],esp
  420ac6:	xchg   al,ah
  420ac8:	jno    0x420b0c
  420aca:	iret   
  420acb:	push   ss
  420acc:	mov    esp,0x5864e6bd
  420ad1:	push   0x2975ec5
  420ad6:	push   0x2ff34a10
  420adb:	ret    0x34a8
  420ade:	xchg   BYTE PTR ds:0x5cf6f159,ah
  420ae4:	add    eax,0x317a6085
  420ae9:	popa   
  420aea:	enter  0xa2a9,0x42
  420aee:	push   eax
  420aef:	aad    0x46
  420af1:	pop    edi
  420af2:	cmp    BYTE PTR [ecx],bl
  420af4:	popf   
  420af5:	lods   al,BYTE PTR ds:[esi]
  420af6:	pop    ss
  420af7:	scas   al,BYTE PTR es:[edi]
  420af8:	fcomp  DWORD PTR ds:0xbd27b175
  420afe:	or     al,0x78
  420b00:	or     eax,0x3d60f144
  420b05:	mov    al,ds:0x91cb053b
  420b0a:	ret    0x85ae
  420b0d:	dec    esp
  420b0e:	inc    ebp
  420b0f:	push   cs
  420b10:	loopne 0x420a98
  420b12:	popa   
  420b13:	sti    
  420b14:	push   ecx
  420b15:	sbb    edi,ebp
  420b17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b18:	mov    ds:0x544ed6ea,eax
  420b1d:	or     esp,DWORD PTR [ecx+0x4e]
  420b20:	xchg   edx,eax
  420b21:	and    bh,BYTE PTR [ebx]
  420b23:	push   esp
  420b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b25:	dec    esi
  420b26:	push   ecx
  420b27:	xchg   DWORD PTR [ecx+0x6d314a31],ebx
  420b2d:	pop    ds
  420b2e:	mov    DWORD PTR [esi-0xd2adf29],edx
  420b34:	pop    ss
  420b35:	loopne 0x420b72
  420b37:	enter  0xf66,0xa9
  420b3b:	mov    ebx,0x871dd7dd
  420b40:	jle    0x420ba9
  420b42:	inc    esp
  420b43:	dec    ecx
  420b44:	push   ebp
  420b45:	jge    0x420b14
  420b47:	jb     0x420bbc
  420b49:	cdq    
  420b4a:	sbb    ecx,DWORD PTR [ecx-0x60]
  420b4d:	xchg   BYTE PTR [ebp+0x13],al
  420b50:	xchg   edx,eax
  420b51:	loopne 0x420ae3
  420b53:	jmp    0xf7b8:0x7fb100c2
  420b5a:	repz pop esi
  420b5c:	aam    0x37
  420b5e:	cs cmp esi,edi
  420b61:	mov    eax,ds:0xe97b8433
  420b66:	stos   BYTE PTR es:[edi],al
  420b67:	cdq    
  420b68:	shr    BYTE PTR [ebx-0x51e5cfd],0xd4
  420b6f:	add    al,0x45
  420b71:	test   eax,0xb987b412
  420b76:	mov    al,0xc
  420b78:	inc    esp
  420b79:	or     al,0xd7
  420b7b:	push   esi
  420b7c:	mov    al,0x47
  420b7e:	pop    edi
  420b7f:	and    ebp,DWORD PTR [ebp-0x1e23463f]
  420b85:	push   ebx
  420b86:	lods   eax,DWORD PTR ds:[esi]
  420b87:	(bad)  
  420b88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b89:	inc    edx
  420b8a:	jno    0x420c01
  420b8c:	jo     0x420bd6
  420b8e:	xchg   BYTE PTR [ebx],dl
  420b90:	mov    eax,ds:0x36ad24f7
  420b95:	push   edx
  420b96:	mov    edi,0xb6693bea
  420b9b:	push   0xa17aeb13
  420ba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ba1:	sbb    BYTE PTR [eax+0x7a],0x5
  420ba5:	xlat   BYTE PTR ds:[ebx]
  420ba6:	jecxz  0x420b64
  420ba8:	loope  0x420be9
  420baa:	or     DWORD PTR [esi-0x28],0xffffffef
  420bae:	xchg   edx,eax
  420baf:	ins    BYTE PTR es:[edi],dx
  420bb0:	ds and ah,bh
  420bb3:	or     esp,DWORD PTR [eax-0x490c2c04]
  420bb9:	es in  al,0x8f
  420bbc:	or     BYTE PTR [eax],cl
  420bbe:	mov    ebx,0x209b19df
  420bc3:	inc    edi
  420bc4:	data16 jne 0x420c46
  420bc7:	mov    eax,ds:0x114d7921
  420bcc:	aam    0x10
  420bce:	mov    edi,0xb4adcdd8
  420bd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bd4:	pushf  
  420bd5:	outs   dx,DWORD PTR ds:[esi]
  420bd6:	cs cmc 
  420bd8:	fdivr  QWORD PTR fs:[esi-0x7a70166c]
  420bdf:	gs aaa 
  420be1:	push   edx
  420be2:	mov    esi,0xb080357f
  420be7:	sti    
  420be8:	cmp    DWORD PTR [ebp+0x353fbfca],0x3a
  420bef:	out    0x63,al
  420bf1:	loopne 0x420b96
  420bf3:	xchg   ecx,eax
  420bf4:	inc    eax
  420bf5:	jle    0x420c46
  420bf7:	dec    eax
  420bf8:	scas   eax,DWORD PTR es:[edi]
  420bf9:	cmp    edi,ebp
  420bfb:	jge    0x420bc4
  420bfd:	adc    eax,0xa341cf1a
  420c02:	push   ds
  420c03:	sbb    DWORD PTR [ecx],esp
  420c05:	inc    esp
  420c06:	test   eax,0x90a71f68
  420c0b:	aas    
  420c0c:	jle    0x420bf4
  420c0e:	in     eax,0x8a
  420c10:	push   cs
  420c11:	xor    ah,BYTE PTR [edx]
  420c13:	jmp    0x420c34
  420c15:	push   eax
  420c16:	xchg   edi,eax
  420c17:	push   eax
  420c18:	or     DWORD PTR [edx-0x34],esp
  420c1b:	addr16 xchg ebx,eax
  420c1d:	cs jae 0x420be6
  420c20:	dec    esp
  420c21:	pop    ss
  420c22:	mov    ds:0x45ca73cd,eax
  420c27:	pop    esi
  420c28:	cmp    ebx,DWORD PTR [edx+0x4a815190]
  420c2e:	cdq    
  420c2f:	or     esi,edx
  420c31:	aas    
  420c32:	inc    edi
  420c33:	ins    BYTE PTR es:[edi],dx
  420c34:	pop    edi
  420c35:	data16 int3 
  420c37:	fistp  DWORD PTR [ebx-0x69]
  420c3a:	jmp    0xce2904cc
  420c3f:	pop    esp
  420c40:	lods   al,BYTE PTR ds:[esi]
  420c41:	dec    ebp
  420c42:	js     0x420c75
  420c44:	xor    cl,BYTE PTR [ebp-0x30d8749a]
  420c4a:	sar    BYTE PTR [ebx+0xa],cl
  420c4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c4e:	xor    ch,ah
  420c50:	aas    
  420c51:	and    eax,0xd659a014
  420c56:	xor    eax,0x78f1f17c
  420c5b:	push   esi
  420c5c:	jnp    0x420ca8
  420c5e:	cmp    BYTE PTR [ecx+0x3df9f5e4],ch
  420c64:	sub    dl,BYTE PTR [ebx]
  420c66:	test   BYTE PTR [ebx],bh
  420c68:	retf   
  420c69:	fisttp WORD PTR [esi+0x70]
  420c6c:	rcl    BYTE PTR es:[eax],0xb2
  420c70:	hlt    
  420c71:	loope  0x420bfc
  420c73:	dec    esp
  420c74:	cmp    eax,0xd3de1576
  420c79:	adc    DWORD PTR [edi-0x29],edi
  420c7c:	call   0x254db482
  420c81:	xchg   ebp,eax
  420c82:	mov    ch,0x66
  420c84:	leave  
  420c85:	jo     0x420c52
  420c87:	xor    eax,0x670bacfe
  420c8c:	ins    DWORD PTR es:[edi],dx
  420c8d:	retf   
  420c8e:	das    
  420c8f:	outs   dx,DWORD PTR ds:[esi]
  420c90:	inc    eax
  420c91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c92:	adc    ebp,DWORD PTR [ecx-0x59]
  420c95:	rcr    BYTE PTR [edx+0x3ea9ee2b],0x5c
  420c9c:	inc    esi
  420c9d:	aad    0xd7
  420c9f:	sbb    eax,0xfd58dbd9
  420ca4:	sar    DWORD PTR [ecx],0x72
  420ca7:	in     eax,dx
  420ca8:	je     0x420c3d
  420caa:	jle    0x420d22
  420cac:	cmp    DWORD PTR [esi-0x13],0xffffffe2
  420cb0:	out    dx,al
  420cb1:	mov    bh,0x1c
  420cb3:	retf   
  420cb4:	int3   
  420cb5:	add    al,0x75
  420cb7:	fwait
  420cb8:	push   ds
  420cb9:	cmp    al,0x5d
  420cbb:	mov    ecx,0xbd80bb6f
  420cc0:	mov    esp,0x8b83508c
  420cc5:	pushf  
  420cc6:	bound  edi,QWORD PTR [esi+0x1bfd41fd]
  420ccc:	jbe    0x420ca6
  420cce:	pop    ecx
  420ccf:	ins    BYTE PTR es:[edi],dx
  420cd0:	push   eax
  420cd1:	lods   al,BYTE PTR ds:[esi]
  420cd2:	pop    es
  420cd3:	dec    ecx
  420cd4:	lock fnstenv [ebx-0x59]
  420cd8:	sub    eax,0x5a829fd1
  420cdd:	push   eax
  420cde:	or     ebp,ebp
  420ce0:	push   ss
  420ce1:	xor    eax,0x791f54d3
  420ce6:	or     al,0xb3
  420ce8:	icebp  
  420ce9:	stos   BYTE PTR es:[edi],al
  420cea:	mov    al,ds:0xe3816c02
  420cef:	loop   0x420c98
  420cf1:	xchg   DWORD PTR [eax+edx*1+0x3d07a7a6],ebx
  420cf8:	or     al,BYTE PTR [esi+0x21401879]
  420cfe:	push   cs
  420cff:	dec    edi
  420d00:	or     edx,DWORD PTR [esi-0x36]
  420d03:	fs dec esp
  420d05:	repnz hlt 
  420d07:	xor    eax,0xf1637c01
  420d0c:	sub    al,0x9a
  420d0e:	xor    BYTE PTR [eax],bh
  420d10:	int    0xf0
  420d12:	lock ret 
  420d14:	imul   ecx,ebx,0x8eafacb9
  420d1a:	int    0xf9
  420d1c:	xor    BYTE PTR [esi-0x1563ba7f],bh
  420d22:	enter  0x855a,0x38
  420d26:	(bad)  
  420d27:	iret   
  420d28:	add    BYTE PTR [ebx+0x179085f7],dl
  420d2e:	fcomp  DWORD PTR [edi-0x453c5ae8]
  420d34:	cld    
  420d35:	call   esi
  420d37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d38:	mov    al,ds:0xc96924f4
  420d3d:	pop    ebp
  420d3e:	loope  0x420cfe
  420d40:	or     DWORD PTR [edx],0xfffffff3
  420d43:	mov    dh,0x72
  420d45:	ja     0x420d84
  420d47:	je     0x420cef
  420d49:	mov    ds:0xec62c686,eax
  420d4e:	adc    al,0xf
  420d50:	fst    DWORD PTR [ebx-0x2d]
  420d53:	jae    0x420d2b
  420d55:	into   
  420d56:	and    DWORD PTR [edx],ebp
  420d58:	push   esi
  420d5a:	and    eax,0x61e0844a
  420d5f:	adc    ebp,DWORD PTR [esp+eax*8]
  420d62:	add    eax,0x6101313b
  420d67:	jecxz  0x420d65
  420d69:	and    DWORD PTR [edi+0x2e],ecx
  420d6c:	jl     0x420d1b
  420d6e:	push   ss
  420d6f:	pusha  
  420d70:	push   es
  420d71:	or     al,0x54
  420d73:	inc    eax
  420d74:	dec    eax
  420d75:	mov    ebx,0xe3f15635
  420d7a:	and    dl,ah
  420d7c:	jno    0x420d65
  420d7e:	daa    
  420d7f:	mov    ebx,0x39581b13
  420d84:	retf   0xfe08
  420d87:	pop    esp
  420d88:	sbb    ch,BYTE PTR ss:[edi*2-0x12b72189]
  420d90:	dec    ebx
  420d91:	fadd   DWORD PTR [eax+0x53]
  420d94:	fistp  WORD PTR [esp+eax*1]
  420d97:	adc    eax,0x38d23c32
  420d9c:	nop
  420d9d:	dec    esp
  420d9e:	(bad)  
  420d9f:	sbb    BYTE PTR [esi+0x2e06d314],ah
  420da5:	pop    edi
  420da6:	js     0x420d94
  420da8:	adc    BYTE PTR [edi],dl
  420daa:	mov    esi,0x63008f0a
  420daf:	jbe    0x420e01
  420db1:	mov    esi,0xd1c9724a
  420db6:	(bad)  
  420db7:	xchg   esi,eax
  420db8:	out    0x93,eax
  420dba:	test   al,0xde
  420dbc:	pop    edi
  420dbd:	jecxz  0x420e2c
  420dbf:	das    
  420dc0:	cmp    edx,ebp
  420dc2:	inc    eax
  420dc3:	jnp    0x420de1
  420dc5:	cmp    eax,0x247a4d45
  420dca:	fucomp st(6)
  420dcc:	mov    ds:0x51914ab6,eax
  420dd1:	pop    ds
  420dd2:	pop    ss
  420dd3:	loopne 0x420daa
  420dd5:	dec    ecx
  420dd6:	dec    ebp
  420dd7:	sub    BYTE PTR [eax+0x63cd1f3a],dl
  420ddd:	call   edx
  420ddf:	mov    bh,0xf9
  420de1:	sbb    eax,0xd8db303f
  420de6:	arpl   WORD PTR [eax-0x2d],si
  420de9:	lods   eax,DWORD PTR ds:[esi]
  420dea:	sti    
  420deb:	in     al,0x87
  420ded:	pop    ebp
  420def:	inc    esp
  420df0:	loop   0x420e3a
  420df2:	mov    esp,0x8155778f
  420df7:	fucomi st,st(1)
  420df9:	dec    esp
  420dfa:	repnz sbb eax,0xedf65447
  420e00:	addr16 sar ah,cl
  420e03:	int3   
  420e04:	jae    0x420d8d
  420e06:	(bad)  
  420e07:	jmp    0x85386049
  420e0c:	jb     0x420e07
  420e0e:	or     BYTE PTR [esi+0x16],al
  420e11:	sti    
  420e12:	leave  
  420e13:	add    ch,BYTE PTR [esi+ecx*2-0x6c5fc82d]
  420e1a:	ds dec ecx
  420e1c:	bound  eax,QWORD PTR [edi-0x294e4fd5]
  420e22:	cmp    dh,BYTE PTR [esi+eax*4]
  420e25:	push   cs
  420e26:	xchg   esp,eax
  420e27:	int3   
  420e28:	cmp    BYTE PTR [edi+ebx*8+0x5b],0x6a
  420e2d:	in     al,dx
  420e2e:	xor    BYTE PTR [esi-0x55524838],dh
  420e34:	in     eax,dx
  420e35:	pushf  
  420e36:	in     al,0x5c
  420e38:	mov    edx,0xabda3c80
  420e3d:	and    dh,BYTE PTR [ebp-0x3751adeb]
  420e43:	cmp    esp,DWORD PTR [edx+0xdeba7c3]
  420e49:	mov    ebx,0xa5eb1d4d
  420e4e:	mov    gs,ecx
  420e50:	mov    WORD PTR [ecx],es
  420e52:	leave  
  420e53:	or     edi,DWORD PTR [edx+ebp*2-0x3c]
  420e57:	sub    ah,0x5
  420e5a:	sbb    esp,DWORD PTR [ebx]
  420e5c:	retf   0xdbac
  420e5f:	pop    ebp
  420e60:	add    al,0xe9
  420e62:	cld    
  420e63:	or     al,0x15
  420e65:	add    edi,ebp
  420e67:	mov    dl,0xd7
  420e69:	adc    eax,DWORD PTR [ebx-0x80]
  420e6c:	inc    esp
  420e6d:	dec    esp
  420e6e:	xchg   ebx,eax
  420e6f:	nop
  420e70:	out    0x78,al
  420e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e73:	test   DWORD PTR [eax+0x34005f1e],edi
  420e79:	sbb    DWORD PTR [edi],ebp
  420e7b:	sub    DWORD PTR [ebx+0x0],ecx
  420e7e:	je     0x420ee8
  420e80:	jbe    0x420e6c
  420e82:	ins    BYTE PTR es:[edi],dx
  420e83:	and    eax,0x1daea893
  420e88:	cmp    BYTE PTR [ebx-0x2b],cl
  420e8b:	call   0xb6b712d5
  420e90:	mov    eax,0x204c54ce
  420e95:	mov    cl,0xe2
  420e97:	bound  esi,QWORD PTR [edi]
  420e99:	mov    ebx,0x94ea1a66
  420e9e:	mov    ch,0x41
  420ea0:	(bad)  
  420ea1:	(bad)  
  420ea2:	or     DWORD PTR [edi+0x3a],ecx
  420ea5:	jp     0x420ee3
  420ea7:	fs int 0x28
  420eaa:	inc    esi
  420eab:	jo     0x420e34
  420ead:	in     al,dx
  420eae:	clc    
  420eaf:	out    dx,al
  420eb0:	add    ebx,eax
  420eb2:	dec    edi
  420eb3:	imul   ebp,DWORD PTR [ecx],0x6
  420eb6:	sbb    BYTE PTR [ebx-0x2dfa7eea],ah
  420ebc:	out    dx,al
  420ebd:	pop    esi
  420ebe:	add    dh,al
  420ec0:	repz aad 0xdd
  420ec3:	add    esi,DWORD PTR [ecx+0x1d]
  420ec6:	inc    eax
  420ec7:	xor    bh,BYTE PTR [esi+0x2e]
  420eca:	push   cs
  420ecb:	xchg   ecx,eax
  420ecc:	cmp    eax,0xf7d0f392
  420ed1:	pop    ss
  420ed2:	xchg   ebp,eax
  420ed3:	fstp   QWORD PTR [ecx+0x1d]
  420ed6:	mov    WORD PTR [ebp-0x4d],cs
  420ed9:	cmp    eax,0x3195d68b
  420ede:	cmp    eax,0xeb50ab7a
  420ee3:	jge    0x420f2b
  420ee5:	mov    eax,0xa7a86a0b
  420eea:	push   ss
  420eeb:	ins    BYTE PTR es:[edi],dx
  420eec:	sti    
  420eed:	pop    es
  420eee:	cwde   
  420eef:	test   eax,0xfb96c46e
  420ef4:	jp     0x420f13
  420ef6:	fs loope 0x420f61
  420ef9:	pop    ebx
  420efa:	dec    edi
  420efb:	loop   0x420efb
  420efd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420efe:	jl     0x420f24
  420f00:	sti    
  420f01:	test   BYTE PTR [ebp-0x1c6697c0],bh
  420f07:	rcr    BYTE PTR [ebx-0x28],cl
  420f0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f0b:	adc    eax,0xcc08a462
  420f10:	stos   BYTE PTR es:[edi],al
  420f11:	adc    BYTE PTR [eax+0x456ee33],0x43
  420f18:	aam    0x6b
  420f1a:	out    0x2e,eax
  420f1c:	rol    bl,0x89
  420f1f:	sahf   
  420f20:	pop    ebp
  420f21:	dec    ecx
  420f22:	scas   eax,DWORD PTR es:[edi]
  420f23:	(bad)  [ecx]
  420f25:	push   ss
  420f26:	test   DWORD PTR [ecx+0x76],ebx
  420f29:	test   dh,bh
  420f2b:	and    dl,BYTE PTR [ebp-0x3]
  420f2e:	pop    esp
  420f2f:	fcom   DWORD PTR [edx-0x7d]
  420f32:	mov    ds:0x9cd42b12,al
  420f37:	xchg   esp,eax
  420f38:	mov    esi,0xe5486e6e
  420f3d:	int    0x1c
  420f3f:	dec    edi
  420f40:	mov    eax,ds:0x35b8c926
  420f45:	add    BYTE PTR [edx],dl
  420f47:	add    esp,DWORD PTR [esi+esi*1-0x5c]
  420f4b:	lea    edi,[esi]
  420f4d:	fld    TBYTE PTR [ebx-0x46]
  420f50:	ds scas al,BYTE PTR es:[edi]
  420f52:	popf   
  420f53:	(bad)  
  420f54:	push   0x79
  420f56:	adc    ch,al
  420f58:	fidivr WORD PTR [edx-0x2c]
  420f5b:	(bad)  
  420f5d:	xchg   DWORD PTR [ebx+0x595a75b1],ebp
  420f63:	js     0x420f8a
  420f65:	(bad)  
  420f66:	cmp    BYTE PTR [ebx],al
  420f68:	in     eax,0xfb
  420f6a:	je     0x420f8c
  420f6c:	and    DWORD PTR [ebp-0x24f37563],0x50
  420f73:	pop    ecx
  420f74:	xor    bl,BYTE PTR [edx+0x72]
  420f77:	mov    eax,ds:0xe17215a0
  420f7c:	popa   
  420f7d:	mov    BYTE PTR [eax],bl
  420f7f:	push   0xb6dceea1
  420f84:	test   DWORD PTR [esi],ebx
  420f86:	retf   
  420f87:	div    DWORD PTR [eax]
  420f89:	pusha  
  420f8a:	stos   BYTE PTR es:[edi],al
  420f8b:	jb     0x420f4e
  420f8d:	(bad)  
  420f8e:	sti    
  420f8f:	xor    eax,0x2c895fe8
  420f94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f95:	or     al,0xa3
  420f97:	call   0x39eeea34
  420f9c:	sub    esp,esi
  420f9e:	mov    ah,0xde
  420fa0:	stc    
  420fa1:	(bad)  
  420fa3:	xor    esp,DWORD PTR [ecx-0x2e611b07]
  420fa9:	imul   eax,DWORD PTR [edx-0x4d],0x64
  420fad:	inc    ecx
  420fae:	addr16 xchg ebx,eax
  420fb0:	out    dx,eax
  420fb1:	pop    eax
  420fb2:	xchg   ebx,eax
  420fb3:	or     eax,0x8230bcd6
  420fb8:	sbb    al,0x7a
  420fba:	sbb    eax,0x81398d1
  420fbf:	sub    DWORD PTR [ebx-0x3],ebp
  420fc2:	push   ds
  420fc3:	sub    DWORD PTR [esp+ebx*4+0x5b],esi
  420fc7:	in     al,dx
  420fc8:	adc    ebp,edx
  420fca:	dec    edi
  420fcb:	or     BYTE PTR [ecx+ebp*8+0x11],al
  420fcf:	cs nop
  420fd1:	or     al,0xa6
  420fd3:	pop    ecx
  420fd4:	popf   
  420fd5:	inc    eax
  420fd6:	retf   
  420fd7:	retf   
  420fd8:	(bad)  
  420fd9:	lods   eax,DWORD PTR ds:[esi]
  420fda:	pop    edx
  420fdb:	mov    BYTE PTR [ecx],dh
  420fdd:	mov    ah,bl
  420fdf:	adc    BYTE PTR [esi-0x38d1be73],ch
  420fe5:	cmp    bl,BYTE PTR [edx]
  420fe7:	sar    DWORD PTR [ebx+0x17b590ab],1
  420fed:	idiv   esi
  420fef:	(bad)  
  420ff0:	clc    
  420ff1:	enter  0xf9b5,0x7d
  420ff5:	adc    edi,DWORD PTR [edx-0x2e]
  420ff8:	or     BYTE PTR [ebp-0x7150d1b4],al
  420ffe:	mov    esi,0xc3b1233
  421003:	inc    ebx
  421004:	mov    ds:0x107f9655,eax
  421009:	jmp    0x57a1:0x762d6243
  421010:	sbb    eax,0x2cf34d6b
  421015:	mov    dl,0x85
  421017:	push   ds
  421018:	adc    DWORD PTR [ebp+eax*2-0xd],0x57
  42101d:	or     DWORD PTR [ebp+0x44712d],esi
	...
  4211f7:	add    BYTE PTR [eax],al
  4211f9:	add    BYTE PTR [edx+0xc],ch
  4211fc:	lea    ebx,[eax-0x1806611]
  421202:	into   
  421203:	out    dx,al
  421204:	popf   
  421205:	adc    ebx,DWORD PTR [edx+ebx*8-0x6ba8fe40]
  42120c:	add    DWORD PTR [eax],eax
  42120e:	and    eax,0xb2000007
  421213:	push   ecx
  421214:	outs   dx,BYTE PTR fs:[esi]
  421216:	and    BYTE PTR [edx-0x7dfc3d53],dh
  42121c:	add    DWORD PTR [eax-0x17],0x40
  421220:	ds shr al,0x15
  421224:	test   BYTE PTR [ebx+0x5a],ch
  421227:	fst    DWORD PTR ds:0x24e4468f
  42122d:	les    edi,FWORD PTR [ebx]
  42122f:	cmp    DWORD PTR ss:[edx+0x2f2748ae],0x3b329353
  42123a:	sbb    cl,BYTE PTR [eax+0x4f]
  42123d:	or     dh,BYTE PTR [eax+0xf]
  421240:	std    
  421241:	pop    ss
  421242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421243:	out    dx,al
  421244:	dec    eax
  421245:	adc    al,0xa2
  421247:	pop    ebp
  421248:	and    BYTE PTR ds:0x7af6806b,0x75
  42124f:	jne    0x421225
  421251:	lea    ebx,[edx-0x77439caf]
  421257:	sub    ebp,DWORD PTR [ecx-0x68d808c0]
  42125d:	mov    ebp,0x90af10c4
  421262:	out    dx,eax
  421263:	(bad)
  421267:	mov    ah,0xad
  421269:	in     eax,dx
  42126a:	pusha  
  42126b:	jo     0x421272
  42126d:	inc    ebx
  42126e:	enter  0x534,0xe3
  421272:	add    eax,edx
  421274:	cmp    al,0xd1
  421276:	xchg   BYTE PTR [edx],bl
  421278:	in     al,0x52
  42127a:	enter  0x1b0c,0x2e
  42127e:	sbb    al,0x84
  421280:	xchg   edx,eax
  421281:	add    BYTE PTR [edx+0x59001636],ah
  421287:	jnp    0x421288
  421289:	data16 stc 
  42128b:	cmp    BYTE PTR [edi],ah
  42128d:	sbb    BYTE PTR [esi+eiz*4+0x3b],bh
  421291:	xchg   esi,eax
  421292:	jo     0x42127a
  421294:	mov    ebp,0xcc0331fa
  421299:	mov    bh,0xb0
  42129b:	loopne 0x42129f
  42129d:	into   
  42129e:	in     eax,0x7f
  4212a0:	imul   ebp,DWORD PTR [edi-0x57a72ae],0x5eb9063e
  4212aa:	test   ch,bl
  4212ac:	aad    0x85
  4212ae:	mov    cl,0x5c
  4212b0:	sub    DWORD PTR [esi-0x3c816d24],eax
  4212b6:	pcmpgtb mm4,QWORD PTR [ebx]
  4212b9:	mov    ebp,0xe1b3a58c
  4212be:	add    al,0x48
  4212c0:	stos   DWORD PTR es:[edi],eax
  4212c1:	ins    BYTE PTR es:[edi],dx
  4212c2:	test   eax,0xb2a6d387
  4212c7:	loopne 0x421327
  4212c9:	mov    ecx,DWORD PTR [edi+0x4190c71]
  4212cf:	and    BYTE PTR [ecx],al
  4212d1:	lea    esi,[eax+edi*1]
  4212d4:	dec    ebp
  4212d5:	push   ecx
  4212d6:	aas    
  4212d7:	cmp    eax,0x5182e8e3
  4212dc:	cs test eax,0x1a0be70e
  4212e2:	or     al,0x94
  4212e4:	xchg   ebp,eax
  4212e5:	push   ss
  4212e6:	push   ebx
  4212e7:	xlat   BYTE PTR ds:[ebx]
  4212e8:	aas    
  4212e9:	sbb    esi,esi
  4212eb:	jae    0x42134c
  4212ed:	and    edi,DWORD PTR [esi+0x19cb6d1b]
  4212f3:	sbb    edi,DWORD PTR [ecx-0x10]
  4212f6:	mov    cl,0x8a
  4212f8:	xor    BYTE PTR [eax],cl
  4212fa:	or     DWORD PTR [esi-0x78],ebx
  4212fd:	arpl   WORD PTR [ebp-0x40],si
  421300:	xchg   edx,eax
  421301:	dec    esi
  421302:	loope  0x4212b8
  421304:	loop   0x4212fc
  421306:	xchg   edi,eax
  421307:	in     al,0x7c
  421309:	ret    0xb9b4
  42130c:	div    BYTE PTR [edx]
  42130e:	mov    DWORD PTR [ecx+0x32],edi
  421311:	lods   al,BYTE PTR ds:[esi]
  421312:	div    edx
  421314:	stos   DWORD PTR es:[edi],eax
  421315:	mov    eax,0x15780d4f
  42131a:	mov    eax,ds:0x328ef388
  42131f:	or     ebp,DWORD PTR [eax]
  421321:	jb     0x4212bd
  421323:	cmp    eax,0x9aab8e07
  421328:	in     al,dx
  421329:	mov    ds:0xa672667c,eax
  42132e:	test   bh,al
  421330:	add    BYTE PTR [eax],ch
  421332:	xor    eax,0xaa1ac950
  421337:	daa    
  421338:	rcl    BYTE PTR [edx-0x3b],0x13
  42133c:	(bad)  
  42133d:	and    al,0xb1
  42133f:	mov    bh,0x79
  421341:	mov    bl,0x5b
  421343:	push   eax
  421344:	pop    ebp
  421345:	mov    esi,DWORD PTR [eax-0x7a7a56d8]
  42134b:	les    ebx,FWORD PTR [edx+0x61]
  42134e:	and    al,0x80
  421350:	hlt    
  421351:	sub    BYTE PTR [edx],bh
  421353:	in     al,0x33
  421355:	or     al,BYTE PTR [esi-0x5c]
  421358:	fcom   QWORD PTR [edx+0xa]
  42135b:	ret    
  42135c:	call   0xb851afb9
  421361:	sbb    eax,0xc1d9d64e
  421366:	add    dh,BYTE PTR [ecx+0x11]
  421369:	cmc    
  42136a:	mov    DWORD PTR [ebp+0x13],ebp
  42136d:	(bad)  
  42136e:	jns    0x421336
  421370:	dec    ecx
  421371:	adc    cl,BYTE PTR [ecx+0x55b9834c]
  421377:	xchg   ebx,eax
  421378:	bound  ebp,QWORD PTR [eax]
  42137a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42137b:	lods   al,BYTE PTR ds:[esi]
  42137c:	aam    0xde
  42137e:	dec    edi
  42137f:	fadd   DWORD PTR [edx-0x3ae3a94b]
  421385:	push   cs
  421386:	push   es
  421387:	in     al,dx
  421388:	fcom   DWORD PTR [esi-0x714ce4ae]
  42138e:	mov    al,0x7d
  421390:	and    DWORD PTR [eax+0x7a85eaa],0xffffffe6
  421397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421398:	xor    al,0xec
  42139a:	fist   DWORD PTR [ebp+esi*8+0x5bafe8be]
  4213a1:	sbb    al,0x7d
  4213a3:	imul   esi,eax,0x2e01f5e4
  4213a9:	je     0x421401
  4213ab:	(bad)  
  4213ad:	and    BYTE PTR [edx],ah
  4213af:	stos   BYTE PTR es:[edi],al
  4213b0:	or     bh,BYTE PTR [ebp+0x60]
  4213b3:	jbe    0x421365
  4213b5:	fdiv   st,st(4)
  4213b7:	mov    eax,0xbbced676
  4213bc:	nop
  4213bd:	cwde   
  4213be:	daa    
  4213bf:	pop    esi
  4213c0:	adc    dh,0xef
  4213c3:	add    ecx,DWORD PTR [ecx+0x1e41e593]
  4213c9:	jge    0x421389
  4213cb:	dec    edi
  4213cc:	into   
  4213cd:	(bad)  
  4213ce:	mov    cl,0x83
  4213d0:	xlat   BYTE PTR ds:[ebx]
  4213d1:	jmp    0x4213c7
  4213d3:	xor    al,BYTE PTR [esi+edi*4+0x33aac26]
  4213da:	ss call 0x7e8a:0xa67d07c9
  4213e2:	pop    es
  4213e3:	cdq    
  4213e4:	jns    0x421457
  4213e6:	mov    eax,0xeadace11
  4213eb:	sub    bl,cl
  4213ed:	xchg   edx,eax
  4213ee:	adc    eax,0x3a457b6d
  4213f3:	and    ebx,DWORD PTR [ebx-0x1c910cb2]
  4213f9:	inc    ecx
  4213fa:	xlat   BYTE PTR ds:[ebx]
  4213fb:	add    eax,0xa609a52e
  421400:	dec    esi
  421401:	sar    esp,0x28
  421404:	cmp    eax,0x5829929f
  421409:	loop   0x4213aa
  42140b:	lds    ecx,FWORD PTR [esi-0x155a5c75]
  421411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421412:	add    al,0xa1
  421414:	add    DWORD PTR [eax],ebp
  421416:	loop   0x42148b
  421418:	mov    bh,0x7f
  42141a:	add    al,0xdf
  42141c:	out    0xad,al
  42141e:	jne    0x421496
  421420:	add    BYTE PTR [eax],0x7b
  421423:	cld    
  421424:	(bad)  
  421425:	xchg   bp,ax
  421427:	rol    DWORD PTR [edx],0x33
  42142a:	(bad)  
  42142b:	outs   dx,DWORD PTR ds:[esi]
  42142c:	mov    cl,0xf7
  42142e:	and    BYTE PTR [esi+0xc48f2cb],dl
  421434:	inc    ebx
  421435:	mov    al,ds:0x38b1a9bd
  42143a:	repnz (bad) 
  42143c:	lahf   
  42143d:	mov    bh,0x3a
  42143f:	jmp    0x6a3e:0x85e0af72
  421446:	mov    esi,0xa4921b8a
  42144b:	sub    BYTE PTR [ebp-0x39],dl
  42144e:	add    al,0x15
  421450:	retf   
  421451:	pop    edi
  421452:	and    esp,edx
  421454:	pop    ebp
  421455:	or     edx,DWORD PTR [ecx]
  421457:	call   0x51a8a7ea
  42145c:	fcom   DWORD PTR [edi]
  42145e:	aas    
  42145f:	mov    edi,DWORD PTR [edx-0x19]
  421462:	scas   eax,DWORD PTR es:[edi]
  421463:	and    DWORD PTR [eax+edx*4-0xe99e36e],eax
  42146a:	fs pop ebp
  42146c:	shr    BYTE PTR [edx],cl
  42146e:	xor    eax,0xd24dd1df
  421473:	sub    ebx,esp
  421475:	das    
  421476:	or     cl,BYTE PTR [ecx]
  421478:	sti    
  421479:	jns    0x42148f
  42147b:	inc    ebp
  42147c:	call   0x54ea:0xb4168957
  421483:	cli    
  421484:	push   ebp
  421485:	xlat   BYTE PTR ds:[ebx]
  421486:	xor    al,BYTE PTR [edi+0x1440990e]
  42148c:	cdq    
  42148d:	retf   0x75e2
  421490:	and    al,0x77
  421492:	shr    BYTE PTR [eax+0x2f0ff840],cl
  421498:	pusha  
  421499:	jge    0x42142b
  42149b:	pop    ds
  42149c:	out    0xf0,al
  42149e:	jle    0x42142e
  4214a0:	inc    esp
  4214a1:	sbb    al,0x10
  4214a3:	enter  0xd7fd,0xf1
  4214a7:	sbb    BYTE PTR [edx+ecx*8+0x52],bh
  4214ab:	and    BYTE PTR [eax],0xd5
  4214ae:	test   DWORD PTR [edx],esi
  4214b0:	adc    ecx,DWORD PTR [ebx+0x3]
  4214b3:	loop   0x4214c5
  4214b5:	cmp    ch,dh
  4214b7:	sbb    eax,0x3495f564
  4214bc:	and    DWORD PTR [ebx-0x5a9bf9be],ecx
  4214c2:	push   cs
  4214c3:	jno    0x4214bf
  4214c5:	repnz test al,0xe6
  4214c8:	(bad)  
  4214c9:	loope  0x4214be
  4214cb:	das    
  4214cc:	test   DWORD PTR [eax],ebp
  4214ce:	push   esi
  4214cf:	mov    ebp,0xcaef0912
  4214d4:	xchg   edx,eax
  4214d5:	mov    eax,ds:0x3e8f927c
  4214da:	jb     0x42152d
  4214dc:	sub    BYTE PTR [eax+0x1a],bh
  4214df:	pop    edi
  4214e0:	cmp    BYTE PTR [edi+eiz*1-0x77],0xf4
  4214e5:	inc    eax
  4214e6:	cmp    ch,BYTE PTR [ebp-0x686f1304]
  4214ec:	jp     0x4214ea
  4214ee:	cmp    BYTE PTR [ecx],al
  4214f0:	fisttp WORD PTR [edi]
  4214f2:	and    eax,0x3ae8451c
  4214f7:	ror    DWORD PTR cs:[ecx],1
  4214fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214fb:	test   al,0x79
  4214fd:	(bad)  
  4214ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421500:	push   0xb21e948e
  421505:	retf   
  421506:	mov    ds:0x251cd9ea,al
  42150b:	in     al,dx
  42150c:	or     BYTE PTR [eax],0xa
  42150f:	(bad)  
  421511:	loope  0x4214d6
  421513:	cmp    edx,DWORD PTR [esi-0x75]
  421516:	fs ins BYTE PTR es:[edi],dx
  421518:	adc    eax,0xf47058da
  42151d:	jl     0x4214af
  42151f:	jge    0x4214b0
  421521:	and    dh,BYTE PTR [edx-0x6768c7e0]
  421527:	lock popa 
  421529:	je     0x421546
  42152b:	push   ds
  42152c:	gs retf 0xf2ed
  421530:	jbe    0x4214e4
  421532:	in     eax,dx
  421533:	ret    
  421534:	pop    edx
  421535:	mov    eax,0xcf7771af
  42153a:	cmp    eax,0xf14f9e57
  42153f:	pop    ecx
  421540:	retf   0x8895
  421543:	lods   al,BYTE PTR ds:[esi]
  421544:	pop    ebx
  421545:	je     0x421510
  421547:	repnz push edx
  421549:	xor    al,0x85
  42154b:	fbstp  TBYTE PTR [ecx+edx*1]
  42154e:	or     DWORD PTR [edx-0x6d],edx
  421551:	sar    ah,1
  421553:	cmp    DWORD PTR [eax+0x19869cc8],edx
  421559:	mov    bl,0xfe
  42155b:	inc    ebp
  42155c:	push   ebx
  42155d:	fild   DWORD PTR [edi+0x5c5bc6e6]
  421563:	mov    ecx,0xdc8d490c
  421568:	adc    eax,0xde10e05a
  42156d:	push   ds
  42156e:	addr16 jge 0x421508
  421571:	push   ecx
  421572:	cmp    al,BYTE PTR [ecx+0x2f]
  421575:	sbb    BYTE PTR [edi+0x26],bh
  421578:	mov    al,0x12
  42157a:	pop    edx
  42157b:	lock jmp 0x42157b
  42157e:	pop    edi
  42157f:	sbb    DWORD PTR [eax],ecx
  421581:	(bad)  
  421582:	ror    DWORD PTR [ecx+0x73e5068f],0xdf
  421589:	(bad)  
  42158a:	fdivr  DWORD PTR [edx-0x50]
  42158d:	or     ecx,DWORD PTR [edx+esi*4-0x55]
  421591:	bound  esi,QWORD PTR [edx-0x24bf6d82]
  421597:	inc    ebp
  421598:	pusha  
  421599:	mov    ecx,0x9ff8b4e
  42159e:	cmp    al,0x86
  4215a0:	fidiv  WORD PTR [esi-0x38]
  4215a3:	(bad)  
  4215a4:	ds push ss
  4215a6:	push   edi
  4215a7:	stos   DWORD PTR es:[edi],eax
  4215a8:	cld    
  4215a9:	mov    ds:0xc0fcae0b,al
  4215ae:	mov    BYTE PTR [ebx+0x1cbacf8d],bh
  4215b4:	imul   ebx,DWORD PTR [edx+0x88801f0],0x55
  4215bb:	iret   
  4215bc:	enter  0x495,0x4e
  4215c0:	jl     0x421628
  4215c2:	push   ds
  4215c3:	add    eax,DWORD PTR [ebx]
  4215c5:	xchg   ebx,eax
  4215c6:	sbb    dh,bh
  4215c8:	xchg   ebp,eax
  4215c9:	mov    WORD PTR [ebx+edi*8-0xa],ss
  4215cd:	cmp    eax,0xc16c75bb
  4215d2:	mov    edx,0x9320d74d
  4215d7:	out    dx,al
  4215d8:	ss aas 
  4215da:	push   0xffffffa8
  4215dc:	or     al,0x43
  4215de:	arpl   WORD PTR [edi-0x4b5da67d],cx
  4215e4:	push   ecx
  4215e5:	clc    
  4215e6:	mov    al,0xb0
  4215e8:	leave  
  4215e9:	jp     0x421648
  4215eb:	sbb    al,0xf9
  4215ed:	scas   eax,DWORD PTR es:[edi]
  4215ee:	pop    ds
  4215ef:	dec    esp
  4215f0:	sahf   
  4215f1:	pop    edx
  4215f2:	aaa    
  4215f3:	icebp  
  4215f4:	sub    BYTE PTR [esi+eax*4],0x96
  4215f8:	xor    BYTE PTR [edi+0x72],bh
  4215fb:	sub    al,0x5b
  4215fd:	add    al,BYTE PTR ds:0x58d2c3e3
  421603:	in     eax,dx
  421604:	(bad)  
  421606:	das    
  421607:	inc    ebp
  421608:	add    ch,BYTE PTR [edi]
  42160a:	mov    WORD PTR [eax-0x57],fs
  42160d:	(bad)  
  42160e:	mov    eax,0xef2f0bbf
  421613:	icebp  
  421614:	adc    ecx,DWORD PTR [esi+ebp*1]
  421617:	add    eax,0x8099c676
  42161c:	jo     0x4215c2
  42161e:	push   eax
  42161f:	icebp  
  421620:	mov    ch,BYTE PTR [edx]
  421622:	imul   ecx,DWORD PTR [edi],0x13
  421625:	inc    esp
  421626:	fild   WORD PTR [eax-0x4cd07169]
  42162c:	ss inc esp
  42162e:	xor    eax,0x7f83142a
  421633:	xchg   ebp,eax
  421634:	pop    ds
  421635:	sar    BYTE PTR [ebp-0x6bf96012],cl
  42163b:	add    DWORD PTR [ebp-0x12],esi
  42163e:	sub    DWORD PTR [ebp+0x71],edx
  421641:	inc    edi
  421642:	fs adc al,0xe7
  421645:	push   esp
  421646:	fist   DWORD PTR [edi+eax*2-0x1de2e82b]
  42164d:	jle    0x42168b
  42164f:	iret   
  421650:	mov    esp,0x5d461193
  421655:	mov    bh,0x59
  421657:	add    ebx,esi
  421659:	adc    eax,0x94f08f1e
  42165e:	loopne 0x42160e
  421660:	mov    ebx,0xc7152a42
  421665:	pop    eax
  421666:	aad    0xb4
  421668:	mov    eax,0xee562125
  42166d:	jae    0x4216da
  42166f:	imul   ebx,ebx,0x54
  421672:	xchg   esp,eax
  421673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421674:	cmp    dl,BYTE PTR [ebp+0x43]
  421677:	inc    ebp
  421678:	cmp    al,0x9b
  42167a:	cmp    bl,al
  42167c:	(bad)  
  42167d:	jmp    0xdd9ec15
  421682:	neg    BYTE PTR [esi+esi*2-0xc]
  421686:	icebp  
  421687:	mov    ecx,0x7a041d0f
  42168c:	nop
  42168d:	cmp    esi,DWORD PTR [edi]
  42168f:	enter  0x6978,0x91
  421693:	push   ecx
  421694:	ins    BYTE PTR es:[edi],dx
  421695:	fist   WORD PTR ds:0xd903d3c
  42169b:	xchg   edi,eax
  42169c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42169d:	mov    WORD PTR [eax],?
  42169f:	dec    ecx
  4216a0:	aaa    
  4216a1:	push   ebx
  4216a2:	cdq    
  4216a3:	(bad)  
  4216a4:	inc    esi
  4216a5:	or     dh,BYTE PTR [si+0x4a]
  4216a9:	push   esi
  4216aa:	xchg   ecx,eax
  4216ab:	push   ecx
  4216ac:	sahf   
  4216ad:	push   edx
  4216ae:	pop    esp
  4216af:	push   0x1a
  4216b1:	sub    bh,BYTE PTR [esi-0x2eab9dc8]
  4216b7:	adc    bl,BYTE PTR [eax+0xb]
  4216ba:	xchg   ch,dl
  4216bc:	lea    edi,[edx]
  4216be:	push   0x7c69e327
  4216c3:	sub    eax,0xeb6ca48b
  4216c8:	mov    ds:0xcc41cdfb,eax
  4216cd:	adc    BYTE PTR [esp+esi*8],ah
  4216d0:	(bad)  
  4216d1:	test   al,0x90
  4216d3:	mov    WORD PTR [ebx+0x2342a507],?
  4216d9:	jae    0x4216ba
  4216db:	dec    edx
  4216dc:	int3   
  4216dd:	or     eax,0x61215ad
  4216e2:	add    edi,DWORD PTR [ebp-0x80]
  4216e5:	stc    
  4216e6:	mov    gs,edx
  4216e8:	test   DWORD PTR [edx+0x7bde7a51],0x52036f52
  4216f2:	ds cld 
  4216f4:	dec    esp
  4216f5:	loope  0x4216e3
  4216f7:	std    
  4216f8:	jno    0x4216fd
  4216fa:	xor    esi,eax
  4216fc:	mov    al,0x5d
  4216fe:	sbb    esp,DWORD PTR [edi-0x1d3ba120]
  421704:	in     eax,dx
  421705:	mov    dl,0x21
  421707:	mov    ah,0x36
  421709:	out    dx,eax
  42170a:	shr    BYTE PTR [ecx-0x4c08ece3],1
  421710:	test   DWORD PTR [eax],esi
  421712:	sub    BYTE PTR [eax],ah
  421714:	jg     0x4216f3
  421716:	or     DWORD PTR [ebx+0x7d9e2f85],0xa
  42171d:	mov    eax,ds:0xb7fee625
  421722:	dec    ecx
  421723:	xor    dh,BYTE PTR [eax]
  421725:	ret    
  421726:	call   0x97dc:0x3d1e7eb
  42172d:	cmp    DWORD PTR [edi+esi*4+0x18],esi
  421731:	push   0xdbb69114
  421736:	retf   0x7371
  421739:	mov    esp,0x9692e83e
  42173e:	mov    esp,0x6cf82be1
  421743:	lea    ebx,fs:[edi-0x49]
  421747:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421748:	push   es
  421749:	mov    BYTE PTR [eax-0x42],ah
  42174c:	pop    ebx
  42174d:	cli    
  42174e:	aam    0xdf
  421750:	addr16 jae 0x421706
  421753:	xchg   ebp,eax
  421754:	(bad)  
  421755:	fwait
  421756:	add    ch,BYTE PTR ds:0xd6d404ff
  42175c:	add    eax,0xf17040ce
  421761:	inc    edi
  421762:	(bad)  
  421763:	clc    
  421764:	sub    ebx,DWORD PTR [ebx-0x55]
  421767:	add    DWORD PTR [ecx],esp
  421769:	or     BYTE PTR [eax-0x6e022b95],ch
  42176f:	mov    bh,0xea
  421771:	jbe    0x42179b
  421773:	cmp    DWORD PTR [ecx+0x1aa504ea],esp
  421779:	out    dx,eax
  42177a:	xor    DWORD PTR [esi],eax
  42177c:	repz push edi
  42177e:	loope  0x42174f
  421780:	xor    DWORD PTR [ecx+0x2c],ecx
  421783:	jno    0x421752
  421785:	(bad)  [edi]
  421787:	ja     0x4217d7
  421789:	pop    ecx
  42178a:	sub    BYTE PTR [eax+esi*2+0xdc0f82e],bh
  421791:	int3   
  421792:	adc    eax,ecx
  421794:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421795:	ds jae 0x4217a1
  421798:	fstp   TBYTE PTR [edx*4-0x3e32d6cf]
  42179f:	dec    edi
  4217a0:	dec    edi
  4217a1:	lods   eax,DWORD PTR ds:[esi]
  4217a2:	rcr    BYTE PTR [ebp+ebx*4+0x0],0xc3
  4217a7:	push   0xfffffff4
  4217a9:	jle    0x4217f3
  4217ab:	aad    0xab
  4217ad:	add    BYTE PTR [eax-0x5c],bh
  4217b0:	jle    0x42173c
  4217b2:	dec    ebx
  4217b3:	pop    esi
  4217b4:	iret   
  4217b5:	push   0xfb3e2687
  4217ba:	leave  
  4217bb:	(bad)  
  4217bc:	mov    edx,DWORD PTR [edi-0x737b434b]
  4217c2:	jbe    0x421803
  4217c4:	cli    
  4217c5:	mov    al,dl
  4217c7:	in     al,dx
  4217c8:	out    dx,al
  4217c9:	and    al,0x24
  4217cb:	xlat   BYTE PTR ds:[ebx]
  4217cc:	int    0x73
  4217ce:	rcr    BYTE PTR [ecx+0x25],0xd2
  4217d2:	pop    ebp
  4217d3:	scas   eax,DWORD PTR es:[edi]
  4217d4:	jno    0x421789
  4217d6:	scas   eax,DWORD PTR es:[edi]
  4217d7:	rol    BYTE PTR [edi+0x4816ec04],cl
  4217dd:	mov    ds:0xf691a170,al
  4217e2:	pushf  
  4217e3:	iret   
  4217e4:	gs jae 0x4217d3
  4217e7:	sbb    ecx,DWORD PTR [ebp+edi*8-0x7ab18733]
  4217ee:	les    esp,FWORD PTR [eax-0x53]
  4217f1:	xchg   DWORD PTR [ebx],eax
  4217f3:	xor    edx,edi
  4217f5:	aaa    
  4217f6:	dec    ebx
  4217f7:	jp     0x4217c0
  4217f9:	ss mov edx,0xfc6f8b0b
  4217ff:	xor    esi,DWORD PTR [ebx-0x1ed2b44e]
  421805:	scas   al,BYTE PTR es:[edi]
  421806:	ror    DWORD PTR [edi],cl
  421808:	out    0x8e,eax
  42180a:	out    0xc1,eax
  42180c:	push   ds
  42180d:	retf   0xc22b
  421810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421811:	or     dh,0xea
  421814:	mov    edx,0xafb1d50
  421819:	pop    ecx
  42181a:	sbb    al,0x85
  42181c:	outs   dx,BYTE PTR ds:[esi]
  42181d:	adc    eax,0x52de7351
  421822:	cmp    al,0x69
  421824:	ins    BYTE PTR es:[edi],dx
  421825:	(bad)  
  421826:	xchg   ebp,eax
  421827:	pop    eax
  421828:	add    cl,BYTE PTR [edx]
  42182a:	enter  0x99f9,0xae
  42182e:	rcr    BYTE PTR [ecx+0x410a25e9],cl
  421834:	lods   eax,DWORD PTR ds:[esi]
  421835:	ss and al,0xbf
  421838:	sub    esi,eax
  42183a:	or     ebx,esp
  42183c:	or     al,0x32
  42183e:	push   cs
  42183f:	add    al,BYTE PTR [ebx-0x11c4a4d7]
  421845:	iret   
  421846:	in     al,dx
  421847:	outs   dx,BYTE PTR ds:[esi]
  421848:	mov    edx,0xa4cf7adf
  42184d:	inc    ecx
  42184e:	mov    cl,0xd9
  421850:	jmp    0x421838
  421852:	push   0xcab8ba98
  421857:	cmp    edx,DWORD PTR [edx]
  421859:	push   esp
  42185a:	test   BYTE PTR [ebx+0x766459c9],bl
  421860:	and    ebx,eax
  421862:	ins    BYTE PTR es:[edi],dx
  421863:	faddp  st(1),st
  421865:	sub    BYTE PTR [ecx-0x22],0x77
  421869:	inc    eax
  42186a:	jo     0x42181a
  42186c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42186d:	test   BYTE PTR [ebp+0x3e54bae4],ah
  421873:	xchg   esi,eax
  421874:	cli    
  421875:	scas   al,BYTE PTR es:[edi]
  421876:	xchg   ecx,eax
  421877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421878:	add    al,0x94
  42187a:	sbb    edi,ecx
  42187c:	das    
  42187d:	sub    esi,esi
  42187f:	mov    ch,0x3d
  421881:	or     DWORD PTR [edi-0x5b248792],ebp
  421887:	rcl    eax,0xff
  42188a:	pop    edi
  42188b:	(bad)
  42188f:	adc    DWORD PTR [eax],esp
  421891:	pushf  
  421892:	inc    ecx
  421893:	push   ss
  421894:	pop    esp
  421895:	cmp    cl,BYTE PTR [eax]
  421897:	push   ebx
  421898:	int    0x3d
  42189a:	enter  0x97f5,0x42
  42189e:	call   0x7e2f:0x5c2263f5
  4218a5:	fisubr DWORD PTR [edi+0x5d]
  4218a8:	inc    edi
  4218a9:	jl     0x42191c
  4218ab:	sub    ecx,DWORD PTR [ebx+0x52]
  4218ae:	cwde   
  4218af:	xchg   ecx,eax
  4218b0:	push   0x4b5c1edf
  4218b5:	sbb    BYTE PTR [ebx+esi*4],0x6e
  4218b9:	pop    esi
  4218ba:	sbb    DWORD PTR [ecx-0x60f67033],eax
  4218c0:	pop    ds
  4218c1:	in     eax,dx
  4218c2:	cmp    DWORD PTR [eax],ecx
  4218c4:	cld    
  4218c5:	out    dx,al
  4218c6:	arpl   WORD PTR [edx],cx
  4218c8:	ret    
  4218c9:	push   es
  4218ca:	xor    eax,0x558bb3c4
  4218cf:	cmp    dl,dh
  4218d1:	shl    BYTE PTR [edi],1
  4218d3:	dec    esi
  4218d4:	sar    BYTE PTR [esi-0x30fae750],1
  4218da:	into   
  4218db:	sar    dl,cl
  4218dd:	jnp    0x421883
  4218df:	out    dx,al
  4218e0:	dec    esp
  4218e1:	ja     0x421877
  4218e3:	mov    ds:0xaf7ae3be,al
  4218e8:	sub    DWORD PTR [edx+0x616ef674],ecx
  4218ee:	push   es
  4218ef:	mov    ds:0x59e3452f,al
  4218f4:	fwait
  4218f5:	mov    bl,0x61
  4218f7:	ss jmp 0x340de131
  4218fd:	ss aas 
  4218ff:	ds xchg edx,eax
  421901:	es aas 
  421903:	sbb    eax,0x85dd1bce
  421908:	inc    ebx
  421909:	pusha  
  42190a:	stos   BYTE PTR es:[edi],al
  42190b:	add    eax,0x7d263360
  421910:	fs cmp ah,al
  421913:	in     eax,dx
  421914:	mov    eax,ds:0xd34bf7
  421919:	pop    esp
  42191a:	fcomp  st(5)
  42191c:	adc    DWORD PTR [ebx-0x6b],0xfa6662a5
  421923:	push   0x3063a7aa
  421928:	ror    edi,1
  42192a:	and    BYTE PTR [esi-0x5f],al
  42192d:	push   edi
  42192e:	sbb    BYTE PTR [eax],ah
  421930:	sub    DWORD PTR [ebx-0x6c],ebx
  421933:	scas   eax,DWORD PTR es:[edi]
  421934:	add    cl,BYTE PTR [edi]
  421936:	cwde   
	...
  421b0f:	das    
  421b10:	dec    eax
  421b11:	inc    edx
  421b12:	add    BYTE PTR [ebx],dh
  421b14:	dec    eax
  421b15:	inc    edx
  421b16:	add    BYTE PTR [edi],dh
  421b18:	dec    eax
  421b19:	inc    edx
  421b1a:	add    BYTE PTR [ebx],bh
  421b1c:	dec    eax
  421b1d:	inc    edx
  421b1e:	add    BYTE PTR [edi],bh
  421b20:	dec    eax
  421b21:	inc    edx
  421b22:	add    BYTE PTR [ebx+0x48],al
  421b25:	inc    edx
  421b26:	add    BYTE PTR [edi+0x48],al
  421b29:	inc    edx
  421b2a:	add    BYTE PTR [ebx+0x48],cl
  421b2d:	inc    edx
  421b2e:	add    BYTE PTR [ebp-0x29],dl
  421b31:	mov    edx,0x7defba87
  421b36:	xlat   BYTE PTR ds:[ebx]
  421b37:	lea    esp,[esi+edx*4+0x6a]
  421b3b:	or     al,0x6b
  421b3d:	mov    bl,0xa2
  421b3f:	cwde   
  421b40:	or     al,0x1
  421b42:	add    BYTE PTR ds:0x42000007,ah
  421b48:	xchg   edi,eax
  421b49:	dec    esp
  421b4a:	push   esp
  421b4b:	push   ds
  421b4c:	fisttp QWORD PTR [ebx-0x3b]
  421b4f:	xchg   edx,eax
  421b50:	pop    esp
  421b51:	mov    bh,0x7d
  421b53:	jns    0x421ae6
  421b55:	retf   0x5ab8
  421b58:	(bad)  [edx+0x4e]
  421b5b:	stc    
  421b5c:	mov    edx,0x9f7d6f59
  421b61:	js     0x421b56
  421b63:	cmc    
  421b64:	icebp  
  421b65:	aas    
  421b66:	cdq    
  421b67:	cmp    BYTE PTR [edx+0x58ee7796],bl
  421b6d:	jb     0x421bcf
  421b6f:	and    BYTE PTR [eax+0x61abe756],ch
  421b75:	xchg   esp,eax
  421b76:	dec    eax
  421b77:	es loope 0x421b09
  421b7a:	push   edi
  421b7b:	loopne 0x421b42
  421b7d:	or     BYTE PTR ds:0x99c044ba,dh
  421b83:	mov    ecx,0xc88b7314
  421b88:	int3   
  421b89:	loopne 0x421b0b
  421b8b:	rcl    DWORD PTR [edx-0x6],0x45
  421b8f:	push   ecx
  421b90:	fstp   QWORD PTR [edx-0x63]
  421b93:	cmp    BYTE PTR [edx-0xe],dh
  421b96:	mov    ds:0xc33bcf72,al
  421b9b:	cmp    dh,al
  421b9d:	push   eax
  421b9e:	jne    0x421b53
  421ba0:	bound  eax,QWORD PTR [ecx+0x2a793035]
  421ba6:	xchg   esi,eax
  421ba7:	les    ebp,FWORD PTR [edx]
  421ba9:	jge    0x421c26
  421bab:	pop    es
  421bac:	jl     0x421bad
  421bae:	pop    ss
  421baf:	pushf  
  421bb0:	push   cs
  421bb1:	iret   
  421bb2:	das    
  421bb3:	xchg   BYTE PTR [ebx+0x7f960873],dl
  421bb9:	xchg   edx,eax
  421bba:	add    eax,0x7978cea9
  421bbf:	cmp    dh,BYTE PTR [edx+0x191640bc]
  421bc5:	imul   edx,DWORD PTR [ebx+0x50],0xd7a21f7e
  421bcc:	pop    es
  421bcd:	cld    
  421bce:	fidivr DWORD PTR [ebx+0x5d]
  421bd1:	fwait
  421bd2:	mov    bh,0x8f
  421bd4:	(bad)  
  421bd6:	int3   
  421bd7:	mov    gs,esi
  421bd9:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bdb:	out    0xb5,al
  421bdd:	add    edx,DWORD PTR [eax+0x6b80bc68]
  421be3:	pushf  
  421be4:	cdq    
  421be5:	and    dl,BYTE PTR [ebx]
  421be7:	dec    edx
  421be8:	cld    
  421be9:	pop    edi
  421bea:	jno    0x421b7c
  421bec:	popa   
  421bed:	pop    edi
  421bee:	push   0x64
  421bf0:	dec    edi
  421bf1:	xchg   BYTE PTR [esi-0x2f4e98f2],ah
  421bf7:	mov    BYTE PTR [ecx+ecx*1-0x76],al
  421bfb:	dec    ebx
  421bfc:	ds in  al,dx
  421bfe:	aaa    
  421bff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c00:	inc    ebp
  421c01:	sbb    DWORD PTR [edi-0x114c04c3],eax
  421c07:	jns    0x421c00
  421c09:	ins    BYTE PTR es:[edi],dx
  421c0a:	inc    eax
  421c0b:	sbb    esp,DWORD PTR [esi+eax*4-0x4f]
  421c0f:	ds mov ch,0xde
  421c12:	xlat   BYTE PTR ds:[ebx]
  421c13:	and    ah,BYTE PTR [ecx+0x6359b6d8]
  421c19:	dec    BYTE PTR [edi+0x53]
  421c1c:	rcl    BYTE PTR [esi+eiz*2-0x57],0x3c
  421c21:	mov    ds:0x3e08768f,eax
  421c26:	or     al,0x8b
  421c28:	adc    al,0xa7
  421c2a:	mov    dh,0x32
  421c2c:	sbb    eax,0x59faaad4
  421c31:	in     al,0x88
  421c33:	or     edi,DWORD PTR [ecx-0x4f3192bb]
  421c39:	xor    eax,0xe142858e
  421c3e:	mov    ss,WORD PTR [ebx+0x1a065878]
  421c44:	jmp    0x421bee
  421c46:	xchg   esp,eax
  421c47:	inc    ebx
  421c48:	pop    es
  421c49:	adc    bh,BYTE PTR [ecx-0x7f079e51]
  421c4f:	test   al,0xb6
  421c51:	(bad)  
  421c52:	jge    0x421be9
  421c54:	pop    ds
  421c55:	cmp    esi,DWORD PTR [edx-0x1f]
  421c58:	sti    
  421c59:	push   edi
  421c5a:	out    dx,al
  421c5b:	in     al,dx
  421c5c:	adc    eax,edi
  421c5e:	xor    dl,0xfb
  421c61:	outs   dx,DWORD PTR ds:[esi]
  421c62:	pop    edx
  421c63:	mov    ch,0x4c
  421c65:	jb     0x421c40
  421c67:	xchg   BYTE PTR [ebx-0x77],ch
  421c6a:	fadd   DWORD PTR [ebx+0x7c]
  421c6d:	push   esp
  421c6e:	xchg   esi,ecx
  421c70:	or     DWORD PTR [esp+edx*1+0x43],esp
  421c74:	in     al,dx
  421c75:	add    ch,0x15
  421c78:	and    dh,BYTE PTR [ecx+0x3e]
  421c7b:	ds fcmovb st,st(3)
  421c7e:	jle    0x421c96
  421c80:	or     esp,DWORD PTR cs:[ebp-0x139ccbdd]
  421c87:	aam    0x6b
  421c89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c8a:	sar    BYTE PTR [edx],0xfc
  421c8d:	adc    eax,DWORD PTR [eax-0x7f]
  421c90:	pop    edx
  421c91:	push   es
  421c92:	rcl    BYTE PTR [ecx-0x44],0x57
  421c96:	sub    ch,dl
  421c98:	ret    0x78a0
  421c9b:	pop    edx
  421c9c:	inc    ebx
  421c9d:	pop    esp
  421c9e:	jnp    0x421cfa
  421ca0:	test   eax,0x660ff2b6
  421ca5:	pop    es
  421ca6:	push   ds
  421ca7:	(bad)  
  421ca8:	test   DWORD PTR es:[ebp+0x4a51e777],ecx
  421caf:	mov    esi,0xa9a33049
  421cb4:	xchg   ebp,eax
  421cb5:	(bad)
  421cb8:	adc    al,0xca
  421cba:	or     eax,DWORD PTR [edi]
  421cbc:	xchg   edx,eax
  421cbd:	test   cl,cl
  421cbf:	mov    bh,0xd
  421cc1:	mov    edx,DWORD PTR [esi-0x30]
  421cc4:	push   0x74ac2f69
  421cc9:	dec    esi
  421cca:	jb     0x421d2c
  421ccc:	cmp    ch,BYTE PTR [edx]
  421cce:	pusha  
  421ccf:	pop    ds
  421cd0:	cwde   
  421cd1:	xchg   edx,eax
  421cd2:	adc    DWORD PTR [esi-0x3584cb8a],edi
  421cd8:	cmp    dl,0xa6
  421cdb:	mov    ecx,0x77e579c8
  421ce0:	into   
  421ce1:	sub    esp,DWORD PTR [edi+0x602f8f67]
  421ce7:	mov    esp,0xd7342a3b
  421cec:	xor    edi,DWORD PTR [ecx+0x675e0643]
  421cf2:	out    dx,al
  421cf3:	lods   al,BYTE PTR ds:[esi]
  421cf4:	sbb    ebp,DWORD PTR [ecx+0x5fc4436]
  421cfa:	int    0xe1
  421cfc:	dec    ebx
  421cfd:	dec    esp
  421cfe:	retf   0xd674
  421d01:	out    dx,al
  421d02:	mov    edx,0x72b856ce
  421d07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d08:	mov    BYTE PTR [esi+ebp*2-0x2d],dh
  421d0c:	stos   BYTE PTR es:[edi],al
  421d0d:	ins    BYTE PTR es:[edi],dx
  421d0e:	push   ebp
  421d0f:	mov    dl,0xec
  421d11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d12:	in     eax,dx
  421d13:	mov    edx,0xdef19a53
  421d18:	jae    0x421d94
  421d1a:	xchg   ebx,eax
  421d1b:	pop    ecx
  421d1c:	push   ecx
  421d1d:	mov    ds:0xfd02353a,al
  421d22:	mov    es,WORD PTR [eax+0x54]
  421d25:	jg     0x421d81
  421d27:	jle    0x421d4a
  421d29:	push   ebp
  421d2a:	ja     0x421cd2
  421d2c:	dec    ebp
  421d2d:	fbld   TBYTE PTR ds:0x44ace430
  421d33:	(bad)  
  421d34:	mov    dh,0x57
  421d36:	fidivr DWORD PTR [ebx]
  421d38:	xchg   edi,eax
  421d39:	ret    0x9c2a
  421d3c:	or     eax,0x4c33be3
  421d41:	push   cs
  421d42:	popa   
  421d43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d44:	mov    esi,0x784b8b40
  421d49:	sub    al,bl
  421d4b:	dec    ebx
  421d4c:	or     esp,DWORD PTR [eax-0x6d]
  421d4f:	xchg   ecx,eax
  421d50:	in     al,0xd3
  421d52:	jle    0x421cdf
  421d54:	or     eax,0x58247676
  421d59:	push   edi
  421d5a:	push   eax
  421d5b:	dec    edx
  421d5c:	xor    DWORD PTR [ebx-0x17],edi
  421d5f:	bound  edi,QWORD PTR ds:0x2a489989
  421d65:	inc    esi
  421d66:	loop   0x421d3d
  421d68:	or     eax,DWORD PTR [ecx+0x4f]
  421d6b:	cli    
  421d6c:	es (bad) 
  421d6e:	rol    DWORD PTR [ebx],1
  421d70:	jg     0x421d50
  421d72:	mov    edi,0xdf51b143
  421d77:	jne    0x421d23
  421d79:	loope  0x421d45
  421d7b:	sahf   
  421d7c:	push   ebp
  421d7d:	fwait
  421d7e:	mov    BYTE PTR [ebp-0x62],ch
  421d81:	div    BYTE PTR [edi]
  421d83:	sbb    eax,0x43641467
  421d88:	test   bl,bl
  421d8a:	neg    DWORD PTR [edx-0xaad160f]
  421d90:	push   ss
  421d91:	ss push esi
  421d93:	aaa    
  421d94:	call   0xcfc78e50
  421d99:	addr16 mov ch,0x1d
  421d9c:	rcl    BYTE PTR [edi+0x58],0xdb
  421da0:	xor    bh,BYTE PTR [esi-0x15]
  421da3:	sar    DWORD PTR [esi-0x418e4d73],cl
  421da9:	arpl   WORD PTR [ebp-0xe0ea939],bp
  421daf:	scas   al,BYTE PTR es:[edi]
  421db0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421db1:	xchg   edi,ebx
  421db3:	mov    eax,ds:0x74c92a64
  421db8:	xchg   edi,eax
  421db9:	cmp    BYTE PTR [edi-0x7a],dl
  421dbc:	or     BYTE PTR [edi+0x79d5ad78],ah
  421dc2:	pop    esi
  421dc3:	mov    al,ds:0x329ffdd3
  421dc8:	call   0x80bd:0x26ef3bc
  421dcf:	add    eax,0xd6cecfa3
  421dd4:	adc    ebp,edi
  421dd6:	cdq    
  421dd7:	push   edx
  421dd8:	xchg   ecx,eax
  421dd9:	or     eax,0x74e58882
  421dde:	pop    ds
  421ddf:	inc    esp
  421de0:	stos   DWORD PTR es:[edi],eax
  421de1:	in     eax,dx
  421de2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421de3:	and    esi,eax
  421de5:	jg     0x421e4f
  421de7:	sub    bl,bh
  421de9:	cdq    
  421dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421deb:	or     al,0x9e
  421ded:	fnstsw WORD PTR [edx-0x6ed8a276]
  421df3:	es mov ecx,0x36d47813
  421df9:	jns    0x421dd1
  421dfb:	stos   BYTE PTR es:[edi],al
  421dfc:	mov    al,ds:0xbe0f992e
  421e01:	sbb    bl,BYTE PTR [edi]
  421e03:	cdq    
  421e04:	dec    edi
  421e05:	dec    edx
  421e06:	rcl    DWORD PTR [ebp-0x72],1
  421e09:	sbb    eax,0x80fe436
  421e0e:	adc    ah,cl
  421e10:	aam    0xf2
  421e12:	adc    al,0xe6
  421e15:	enter  0x609,0x7
  421e19:	out    0xa6,eax
  421e1b:	fstp   st(2)
  421e1d:	adc    DWORD PTR [edi-0x6ba7f919],edx
  421e23:	push   eax
  421e24:	jl     0x421e1c
  421e26:	inc    ebx
  421e27:	push   eax
  421e28:	mov    dl,0x90
  421e2a:	stos   BYTE PTR es:[edi],al
  421e2b:	(bad)  
  421e2d:	xor    al,0x1
  421e2f:	add    BYTE PTR [eax],0x68
  421e32:	(bad)  
  421e33:	push   ebp
  421e34:	repz dec edx
  421e36:	mov    WORD PTR [ebp+0x2976006e],gs
  421e3c:	stos   DWORD PTR es:[edi],eax
  421e3d:	xor    al,0x4
  421e3f:	out    0x7c,al
  421e41:	call   0xddbc:0xea612d19
  421e48:	sub    ah,ch
  421e4a:	pop    ebx
  421e4b:	imul   edx,edi,0xaf31fb7a
  421e51:	ds mov ah,0x84
  421e54:	ss dec esp
  421e56:	out    dx,al
  421e57:	mov    ds:0x845a661,eax
  421e5c:	mov    al,ds:0xa01c876e
  421e61:	mov    bl,0xd1
  421e63:	(bad)  
  421e64:	sbb    esi,ecx
  421e66:	xor    al,BYTE PTR fs:[edx]
  421e69:	es cdq 
  421e6b:	out    0xbf,eax
  421e6d:	mov    edi,0xb896ba40
  421e72:	jle    0x421e67
  421e74:	mov    ds:0x6bc5d0a1,eax
  421e79:	mov    ds:0x1db3a515,al
  421e7e:	pop    edx
  421e7f:	xor    BYTE PTR ds:0x80332ecb,cl
  421e85:	ret    
  421e86:	cmc    
  421e87:	dec    bl
  421e89:	cmp    esi,DWORD PTR fs:[edx-0x7d]
  421e8d:	or     bl,al
  421e8f:	popa   
  421e90:	lods   eax,DWORD PTR ds:[esi]
  421e91:	xlat   BYTE PTR ds:[ebx]
  421e92:	aaa    
  421e93:	sub    esp,esi
  421e95:	push   ds
  421e96:	xchg   ebp,eax
  421e97:	dec    ebx
  421e98:	push   edi
  421e99:	dec    ebx
  421e9a:	stc    
  421e9b:	push   eax
  421e9c:	ror    BYTE PTR [edx+0x24c71ef6],0x2c
  421ea3:	jge    0x421ec5
  421ea5:	jns    0x421ebc
  421ea7:	je     0x421edc
  421ea9:	xor    ah,ch
  421eab:	jg     0x421ed9
  421ead:	cmp    DWORD PTR [edx],edi
  421eaf:	pop    ss
  421eb0:	ds in  eax,0x33
  421eb3:	(bad)
  421eb7:	icebp  
  421eb8:	or     al,0x97
  421eba:	or     edi,DWORD PTR [eax-0x26a86121]
  421ec0:	shl    DWORD PTR [edx-0x6e],0xd0
  421ec4:	or     bh,BYTE PTR [ebp-0x28]
  421ec7:	push   ss
  421ec8:	fbld   TBYTE PTR [ecx]
  421eca:	cdq    
  421ecb:	sbb    dh,al
  421ecd:	xchg   esp,eax
  421ece:	fidivr DWORD PTR [ebp+0x6a521366]
  421ed4:	sub    bh,BYTE PTR [ecx+0x18]
  421ed7:	push   0x49
  421ed9:	ror    edi,1
  421edb:	push   eax
  421edc:	fst    DWORD PTR ds:0xd0790c4d
  421ee2:	pusha  
  421ee3:	mov    ds:0x80f16af2,al
  421ee8:	call   0xb037:0xea2406b1
  421eef:	pushf  
  421ef0:	or     ah,BYTE PTR [esi+0x55]
  421ef3:	loop   0x421ee4
  421ef5:	idiv   esi
  421ef7:	fistp  WORD PTR [eax+0x1c]
  421efa:	stos   DWORD PTR es:[edi],eax
  421efb:	lods   al,BYTE PTR ds:[esi]
  421efc:	and    esp,edi
  421efe:	add    al,0xd5
  421f00:	and    bl,BYTE PTR [edx]
  421f02:	aad    0x6d
  421f04:	rcr    esp,cl
  421f06:	icebp  
  421f07:	pop    eax
  421f08:	int    0xd
  421f0a:	xor    al,BYTE PTR [edi]
  421f0c:	lock xor BYTE PTR [esi-0x22],dl
  421f10:	call   0x292dd2e
  421f15:	xor    al,0xf7
  421f17:	sub    ebp,DWORD PTR [ebp+0x6af6ed63]
  421f1d:	cmp    DWORD PTR [eax-0x3f],ebx
  421f20:	mov    eax,0x9b42d64e
  421f25:	jp     0x421f17
  421f27:	aas    
  421f28:	xor    eax,0x71ac7a40
  421f2d:	popf   
  421f2e:	xor    eax,0xf04ce46d
  421f33:	scas   al,BYTE PTR es:[edi]
  421f34:	fcmove st,st(6)
  421f36:	loop   0x421f12
  421f38:	imul   esi,DWORD PTR [edx-0x74301e10],0x2
  421f3f:	into   
  421f40:	sub    al,0x1e
  421f42:	mov    ebx,0x95f7ad1d
  421f47:	ja     0x421f75
  421f49:	mov    DWORD PTR [edx],ebx
  421f4b:	sub    ebp,esp
  421f4d:	dec    DWORD PTR [esi]
  421f4f:	cmp    eax,0x8754cd2f
  421f54:	jmp    0x8e11:0xa940ecd8
  421f5b:	dec    eax
  421f5c:	xchg   ebp,eax
  421f5d:	nop
  421f5e:	cmp    DWORD PTR [eax-0x11],0x4e
  421f62:	pusha  
  421f63:	add    BYTE PTR [ebp+0x47],0xe5
  421f67:	cmc    
  421f68:	sbb    DWORD PTR [ebp+0x49],ebx
  421f6b:	add    eax,0xc56be712
  421f70:	mov    ecx,0xf4e547d7
  421f75:	lds    edx,FWORD PTR [eax]
  421f77:	and    eax,0x2b60a981
  421f7c:	cmp    dl,BYTE PTR [esi]
  421f7e:	mov    al,cl
  421f80:	fs scas eax,DWORD PTR es:[edi]
  421f82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f83:	xchg   esi,eax
  421f84:	push   0x49d63820
  421f89:	clc    
  421f8a:	mov    esi,0xa1b29063
  421f8f:	out    0x43,eax
  421f91:	mov    esp,0xffddf370
  421f96:	push   0xffffffee
  421f98:	idiv   BYTE PTR [edx]
  421f9a:	out    0x9d,al
  421f9c:	pop    esp
  421f9d:	in     eax,dx
  421f9e:	push   ss
  421f9f:	pop    edi
  421fa0:	lods   eax,DWORD PTR ds:[esi]
  421fa1:	es and eax,0x77b77890
  421fa7:	push   edx
  421fa8:	xor    dh,BYTE PTR [edi+0x35175c13]
  421fae:	fldenv [ebp+0x4546533f]
  421fb4:	pop    edx
  421fb5:	pushf  
  421fb6:	fldenv [ecx+0x3b]
  421fb9:	int3   
  421fba:	push   eax
  421fbb:	cmp    al,0xc3
  421fbd:	add    cl,BYTE PTR [ebx-0x32]
  421fc0:	adc    al,0x3a
  421fc3:	inc    eax
  421fc4:	enter  0xebba,0xe9
  421fc8:	retf   
  421fc9:	push   ds
  421fca:	dec    edi
  421fcb:	int    0xe
  421fcd:	fdivp  st(2),st
  421fcf:	push   0x566ae1cc
  421fd4:	sub    ebx,edx
  421fd6:	xor    DWORD PTR [ecx+0x2070fba1],0x2a
  421fdd:	xchg   ebx,eax
  421fde:	enter  0xa52,0x1f
  421fe2:	ficomp WORD PTR [ecx+eax*4+0x5d]
  421fe6:	shld   DWORD PTR [eax-0x22c37ed],edx,0x59
  421fee:	pop    ebp
  421ff0:	dec    edx
  421ff1:	sub    DWORD PTR [ecx-0x1a],esp
  421ff4:	into   
  421ff5:	dec    ecx
  421ff6:	ss xchg ebx,eax
  421ff8:	cmp    DWORD PTR ds:0x729e4c3a,0x1f
  421fff:	sbb    eax,ebx
  422001:	out    0xe7,al
  422003:	pop    ds
  422004:	stos   BYTE PTR es:[edi],al
  422005:	pop    ebp
  422006:	adc    al,0x90
  422008:	and    esi,edi
  42200a:	push   ecx
  42200b:	mov    eax,0xd8cfcde3
  422010:	scas   al,BYTE PTR es:[edi]
  422011:	xchg   edx,eax
  422012:	mov    ss,esi
  422014:	push   esp
  422015:	ins    BYTE PTR es:[edi],dx
  422016:	repz ret 0xbf65
  42201a:	addr16 push esp
  42201c:	or     dl,BYTE PTR ss:[edi-0x5f5e831c]
  422023:	mov    ebx,0xc2de9c27
  422028:	fst    QWORD PTR [esi]
  42202a:	xchg   esi,eax
  42202b:	ja     0x4220a4
  42202d:	je     0x42202a
  42202f:	iret   
  422030:	popf   
  422031:	out    0x90,al
  422033:	pop    ebx
  422034:	out    0x62,al
  422036:	sbb    bh,BYTE PTR [ecx-0x1]
  422039:	cmp    eax,0x5e1e8d90
  42203e:	lods   eax,DWORD PTR ds:[esi]
  42203f:	pop    esi
  422040:	lock shld DWORD PTR [bx+di],ecx,0xec
  422046:	adc    BYTE PTR [ebp+0x7a5d1ece],ch
  42204c:	inc    esi
  42204d:	in     eax,0x71
  42204f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422050:	mov    DWORD PTR [edx],ebx
  422052:	js     0x421fe0
  422054:	mov    edi,0x8b392954
  422059:	cs pop es
  42205b:	(bad)  ds:0x7d595ae8
  422061:	fcom   st(7)
  422063:	js     0x422010
  422065:	daa    
  422066:	push   ds
  422067:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422068:	and    edx,ebx
  42206a:	sbb    eax,0x4e694ba6
  42206f:	adc    eax,0x3b619a71
  422074:	and    bh,BYTE PTR [edi+0x46d8a0c4]
  42207a:	cmp    eax,0x44de54cc
  42207f:	adc    ebx,DWORD PTR [edx+0x31]
  422082:	mov    edx,0x791ac28d
  422087:	fdiv   QWORD PTR [edx-0x51]
  42208a:	jmp    0x591f9bff
  42208f:	mov    eax,ebx
  422091:	jb     0x4220de
  422093:	mov    esi,0xa5892578
  422098:	xchg   ebx,eax
  422099:	rol    eax,cl
  42209b:	add    ch,bl
  42209d:	adc    DWORD PTR [edx-0x3],ecx
  4220a0:	dec    ebx
  4220a1:	ins    BYTE PTR es:[edi],dx
  4220a2:	xor    eax,0x9d501378
  4220a7:	or     BYTE PTR [eax+0x451a0b70],cl
  4220ad:	jns    0x422093
  4220af:	push   ds
  4220b0:	fwait
  4220b1:	imul   edi,DWORD PTR [esi+0xce65a38],0x48
  4220b8:	aas    
  4220b9:	stos   DWORD PTR es:[edi],eax
  4220ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220bb:	xor    ch,BYTE PTR [eax]
  4220bd:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220bf:	pop    eax
  4220c0:	call   0x3ab5:0x679da79b
  4220c7:	xor    dh,BYTE PTR [esi+edx*1+0x2d23f300]
  4220ce:	xchg   cl,bl
  4220d0:	xlat   BYTE PTR ds:[ebx]
  4220d1:	pusha  
  4220d2:	dec    ebp
  4220d3:	pusha  
  4220d4:	mov    ecx,0xb8717ac4
  4220d9:	jne    0x42206f
  4220db:	xor    eax,0xbb0f58eb
  4220e0:	or     dh,BYTE PTR [edi+0x3]
  4220e3:	dec    esi
  4220e4:	mov    edx,0x947f57a6
  4220e9:	jne    0x42215d
  4220eb:	or     dh,bl
  4220ed:	lds    ebx,FWORD PTR [esi-0x41]
  4220f0:	repz (bad) 
  4220f2:	cld    
  4220f3:	sar    DWORD PTR [edi],cl
  4220f5:	scas   eax,DWORD PTR es:[edi]
  4220f6:	scas   al,BYTE PTR es:[edi]
  4220f7:	jo     0x422099
  4220f9:	fdiv   DWORD PTR [edx-0x5048d0b9]
  4220ff:	stc    
  422100:	jno    0x422127
  422102:	lock sbb al,dh
  422105:	inc    ebp
  422106:	jl     0x4220ea
  422108:	enter  0x316f,0xe1
  42210c:	ds cld 
  42210e:	rol    DWORD PTR [edx+0x2d],1
  422111:	and    DWORD PTR [esi+0x7b],ebp
  422114:	(bad)  
  422115:	mov    WORD PTR [ebx-0x65],cs
  422118:	inc    esp
  422119:	pop    ebx
  42211a:	outs   dx,DWORD PTR ds:[esi]
  42211b:	dec    esp
  42211c:	pop    ss
  42211d:	sub    edi,DWORD PTR [edi+0x45]
  422120:	adc    BYTE PTR [esi+0x6b3fbd82],dh
  422126:	sbb    esp,ebp
  422128:	bound  ecx,QWORD PTR [ebp+0xf6714f8]
  42212e:	mov    ds:0x6dc230d6,al
  422133:	adc    ah,dl
  422135:	loope  0x422114
  422137:	call   0xe37d7b24
  42213c:	int    0x97
  42213e:	popf   
  42213f:	pop    ss
  422140:	aam    0xa2
  422142:	aad    0xb3
  422144:	mov    ds:0x4d25371c,eax
  422149:	jae    0x42210f
  42214b:	je     0x422184
  42214d:	cdq    
  42214e:	sahf   
  42214f:	(bad)  
  422150:	xchg   edi,eax
  422151:	dec    edx
  422152:	xchg   edi,eax
  422153:	in     eax,0x92
  422155:	pusha  
  422156:	push   cs
  422157:	(bad)  
  422158:	cwde   
  422159:	iret   
  42215a:	fsub   QWORD PTR [ebp+0x1a]
  42215d:	femms  
  42215f:	rcl    DWORD PTR [ecx],cl
  422161:	fimul  WORD PTR [ecx-0x307547c8]
  422167:	(bad)  
  422169:	retf   0xecb3
  42216c:	sahf   
  42216d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42216e:	stc    
  42216f:	pop    ds
  422170:	fisub  DWORD PTR [ebp+0x44d05239]
  422176:	adc    al,0x8a
  422178:	sbb    eax,eax
  42217a:	xchg   esp,eax
  42217b:	(bad)  [eax-0x13]
  42217e:	cmp    esi,DWORD PTR [edx-0x38]
  422181:	retf   0x78e3
  422184:	and    bl,bl
  422186:	test   DWORD PTR [ebx],0xc340d224
  42218c:	push   ebx
  42218d:	fnstenv [ecx+0x20edc847]
  422193:	(bad)  
  422194:	xchg   edx,eax
  422195:	inc    ebx
  422196:	test   DWORD PTR [ebx+ebp*2-0x57c3a3f6],ebx
  42219d:	gs xchg edi,eax
  42219f:	xor    esp,DWORD PTR [eax]
  4221a1:	jle    0x422183
  4221a3:	je     0x4221ae
  4221a5:	adc    eax,0xa2958415
  4221aa:	mov    dl,0x43
  4221ac:	rcl    BYTE PTR [eax],0xac
  4221af:	pop    edi
  4221b0:	or     ebx,DWORD PTR [ebp+0x37]
  4221b3:	fwait
  4221b4:	imul   eax,DWORD PTR [ebx+0x41],0x5e62c228
  4221bb:	pop    ebp
  4221bc:	xchg   ebp,eax
  4221bd:	xlat   BYTE PTR ds:[ebx]
  4221be:	xlat   BYTE PTR ds:[ebx]
  4221bf:	mov    WORD PTR [eax-0x2d],cs
  4221c2:	lods   al,BYTE PTR ds:[esi]
  4221c3:	dec    ecx
  4221c4:	mov    edx,0x671b8a18
  4221c9:	push   edi
  4221ca:	aas    
  4221cb:	inc    edi
  4221cc:	fstp   QWORD PTR [edi+0x48fc7582]
  4221d2:	jmp    0x4221e0
  4221d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221d5:	ret    0xa405
  4221d8:	cmp    eax,edi
  4221da:	and    ah,dl
  4221dc:	mov    edx,0xd89074ab
  4221e1:	xchg   ecx,eax
  4221e2:	or     eax,0x552f1c73
  4221e7:	jp     0x422261
  4221e9:	or     DWORD PTR [ecx],eax
  4221eb:	dec    ebx
  4221ec:	leave  
  4221ed:	push   0x26
  4221ef:	xchg   esi,eax
  4221f0:	call   DWORD PTR [esi+edi*1]
  4221f3:	jne    0x4221ed
  4221f5:	jl     0x4221a9
  4221f7:	pop    edx
  4221f8:	push   eax
  4221f9:	jbe    0x42218c
  4221fb:	int3   
  4221fc:	sbb    ch,BYTE PTR [eax]
  4221fe:	test   eax,0x8696d72e
  422203:	add    al,0x4e
  422205:	mov    bh,0xf8
  422207:	sar    DWORD PTR [eax],cl
  422209:	fmul   DWORD PTR ds:0xb4144302
  42220f:	push   eax
  422210:	jp     0x4221e1
  422212:	xchg   edi,eax
  422213:	and    edx,DWORD PTR [ecx-0x33]
  422216:	aam    0x56
  422218:	lds    esi,FWORD PTR [ecx-0xc2a9e4f]
  42221e:	ror    BYTE PTR [edi],1
  422220:	push   0xfffc37ed
  422225:	out    dx,eax
  422226:	ins    BYTE PTR es:[edi],dx
  422227:	sub    eax,0x3300257e
  42222c:	pop    ecx
  42222d:	cld    
  42222e:	and    eax,0x57c6bde1
  422233:	call   FWORD PTR [esi+0x49c481c2]
  422239:	mov    al,0x7c
  42223b:	jbe    0x42229d
  42223d:	hlt    
  42223e:	adc    bl,bh
  422240:	ror    DWORD PTR ss:[ebp-0x6d],cl
  422244:	rcr    BYTE PTR [edx],cl
  422246:	add    ah,BYTE PTR [ecx+0x64623f11]
  42224c:	jne    0x422284
  42224e:	and    edx,DWORD PTR [esi+0x30bc770f]
  422254:	call   0xbd4f39f3
  422259:	(bad)  
  42225a:	mov    esi,0x84feb7d2
  42225f:	inc    esi
  422260:	leave  
  422261:	aad    0xdf
  422263:	sbb    eax,0x5ca1b371
  422268:	sbb    DWORD PTR [esi+0x42],esp
  42226b:	test   DWORD PTR [eax],0x0
	...
  4222ad:	add    BYTE PTR [eax],al
  4222af:	adc    eax,0xfe3de0ab
  4222b4:	jg     0x422293
  4222b6:	stos   DWORD PTR es:[edi],eax
  4222b7:	mov    esi,DWORD PTR [edi-0x59352fe5]
  4222bd:	pop    edi
  4222be:	inc    esp
  4222bf:	mov    ebp,0x25000113
  4222c4:	pop    es
  4222c5:	add    BYTE PTR [eax],al
  4222c7:	sub    BYTE PTR [edi],ah
  4222c9:	cmp    DWORD PTR [eax],0xfffffff0
  4222cc:	push   edx
  4222cd:	mov    al,ds:0x4a4dcbd5
  4222d2:	jmp    0x4222dc
  4222d4:	add    ebp,edi
  4222d6:	sbb    al,0x13
  4222d8:	ds ss ss (bad) 
  4222dd:	add    al,0x38
  4222df:	mov    bh,BYTE PTR [eax+esi*8]
  4222e2:	cli    
  4222e3:	pop    esi
  4222e4:	hlt    
  4222e5:	sahf   
  4222e6:	pop    ds
  4222e7:	mov    DWORD PTR [edx+edx*2],ebp
  4222ea:	or     eax,0x6fc0bc2f
  4222ef:	xor    eax,0xe772c97b
  4222f4:	jns    0x422350
  4222f6:	stc    
  4222f7:	dec    ecx
  4222f8:	mov    bl,0x0
  4222fa:	inc    edx
  4222fb:	pusha  
  4222fc:	add    DWORD PTR [eax-0x396cf4c4],edi
  422302:	push   edx
  422303:	outs   dx,BYTE PTR ds:[esi]
  422304:	mov    dh,0xae
  422306:	sbb    DWORD PTR [ebx],0x2039eab2
  42230c:	lea    eax,[edi-0x78]
  42230f:	popf   
  422310:	or     DWORD PTR [edx-0x52d1fb2f],ebp
  422316:	cmp    BYTE PTR [ebx+0x1],0xd7
  42231a:	je     0x42236a
  42231c:	add    edx,DWORD PTR [edi-0x1e3c72e4]
  422322:	test   BYTE PTR [edi+0xb],dl
  422325:	add    BYTE PTR [ecx+0x56],bl
  422328:	ja     0x4222b0
  42232a:	add    DWORD PTR [ecx],edx
  42232c:	cmp    BYTE PTR [esi-0x71],ah
  42232f:	call   0x644a9f9a
  422334:	call   0x2781:0x3045961a
  42233b:	sbb    esi,DWORD PTR [eax]
  42233d:	fdivrp st(1),st
  42233f:	jl     0x4222c7
  422341:	(bad)  
  422342:	pusha  
  422343:	dec    eax
  422344:	iret   
  422345:	ss retf 0x91be
  422349:	mov    esp,0xcc92a7fd
  42234e:	push   0xe52f59cf
  422353:	nop
  422354:	xchg   ecx,eax
  422355:	inc    ecx
  422356:	sub    eax,0x610da8e6
  42235b:	add    edi,DWORD PTR [edx-0x1b08815b]
  422361:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422362:	stos   DWORD PTR es:[edi],eax
  422363:	and    al,0x47
  422365:	inc    esi
  422366:	add    bh,BYTE PTR [eax+0x7e473d15]
  42236c:	iret   
  42236d:	jns    0x42236c
  42236f:	popf   
  422370:	or     BYTE PTR [esi],dl
  422372:	mov    eax,0xf213c121
  422377:	nop
  422378:	ins    BYTE PTR es:[edi],dx
  422379:	add    BYTE PTR [esi+0x71809f44],ch
  42237f:	inc    esi
  422380:	adc    BYTE PTR [ecx+eax*2-0x61],dh
  422384:	push   ds
  422385:	dec    ecx
  422386:	cmp    al,0xe8
  422388:	(bad)  
  422389:	xor    BYTE PTR [ecx+0x5b],ah
  42238c:	lds    eax,FWORD PTR [edi]
  42238e:	inc    edx
  42238f:	enter  0x65e9,0x8e
  422393:	and    ecx,edi
  422395:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422396:	adc    al,0x4f
  422398:	push   cs
  422399:	imul   ch
  42239b:	pop    ecx
  42239c:	adc    BYTE PTR [edx],bl
  42239e:	jecxz  0x42240b
  4223a0:	cli    
  4223a1:	mov    bl,0x7c
  4223a3:	data16 or dl,ch
  4223a6:	push   esp
  4223a7:	cdq    
  4223a8:	push   esi
  4223a9:	inc    esi
  4223aa:	sbb    dl,al
  4223ac:	inc    edx
  4223ad:	push   0x9379223f
  4223b2:	(bad)  
  4223b3:	rcl    BYTE PTR [eax],1
  4223b5:	mov    ds:0xc6810004,al
  4223ba:	loopne 0x422424
  4223bc:	ror    BYTE PTR [edi],0xf0
  4223bf:	push   es
  4223c0:	mov    ch,0xe8
  4223c2:	cmp    ah,al
  4223c4:	adc    al,0x22
  4223c6:	and    BYTE PTR [eax],bl
  4223c8:	inc    esi
  4223c9:	sbb    eax,DWORD PTR [ecx]
  4223cb:	popf   
  4223cc:	bound  ebx,QWORD PTR [edx]
  4223ce:	jb     0xe96706db
  4223d4:	daa    
  4223d5:	or     BYTE PTR [ebx],0xf
  4223d8:	lods   eax,DWORD PTR ds:[esi]
  4223d9:	mov    bh,0x82
  4223db:	aam    0x54
  4223dd:	mov    ebp,0x7df7798d
  4223e2:	es sahf 
  4223e4:	popa   
  4223e5:	div    DWORD PTR [ebx]
  4223e7:	push   edi
  4223e8:	inc    ebp
  4223e9:	mov    ebp,0x6cf10db6
  4223ee:	dec    BYTE PTR [ebx-0x32]
  4223f1:	in     al,dx
  4223f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223f3:	bound  edx,QWORD PTR [edi-0x189355ed]
  4223f9:	adc    al,0xe
  4223fb:	push   edx
  4223fc:	jns    0x4223a9
  4223fe:	jo     0x422390
  422400:	push   cs
  422401:	jmp    0x7b84:0xa129f8cf
  422408:	repnz dec ebp
  42240a:	imul   eax,ecx,0x82866db
  422410:	inc    ebx
  422411:	out    dx,al
  422412:	mov    al,ds:0x5d2bf1
  422417:	sub    eax,0xff2728a6
  42241c:	jge    0x422495
  42241e:	pop    ecx
  42241f:	lahf   
  422420:	and    esi,esp
  422422:	mov    esp,0x425f83c4
  422427:	daa    
  422428:	sti    
  422429:	stos   DWORD PTR es:[edi],eax
  42242a:	push   eax
  42242b:	jno    0x422426
  42242d:	push   es
  42242e:	dec    esi
  42242f:	ror    BYTE PTR [esi+0x31],1
  422432:	fsubr  QWORD PTR [edi]
  422434:	mov    eax,0x4baef304
  422439:	sub    eax,0xf07f04d
  42243e:	or     al,0xb
  422440:	fisttp DWORD PTR [ebx+ecx*2]
  422443:	repnz sub ecx,DWORD PTR [ebp+0x7f]
  422447:	mov    dh,0xcb
  422449:	push   edi
  42244a:	push   0x40
  42244c:	mov    ds:0x41965d06,al
  422451:	ds in  al,dx
  422453:	xor    ebx,eax
  422455:	push   ebp
  422456:	cmp    cl,ah
  422458:	scas   al,BYTE PTR es:[edi]
  422459:	mov    cs,WORD PTR [ebx-0x5c9a1206]
  42245f:	jns    0x422497
  422461:	jge    0x4224a6
  422463:	shr    BYTE PTR [edx+0x7ec6f024],cl
  422469:	sub    ch,BYTE PTR [edx+ebp*8-0x5d93397b]
  422470:	jns    0x42247d
  422472:	pop    ebx
  422473:	out    0x2,al
  422475:	sub    ah,dh
  422477:	mov    edx,0xdc35c923
  42247c:	push   ebx
  42247d:	(bad)  
  42247e:	mov    ebp,DWORD PTR [ebp+ecx*8-0x98a1446]
  422485:	jbe    0x422410
  422487:	hlt    
  422488:	shl    ah,cl
  42248a:	mov    BYTE PTR [ebx-0x29ef8aea],cl
  422490:	mul    esp
  422492:	adc    DWORD PTR [eax+edi*8],ebx
  422495:	push   esi
  422496:	inc    edi
  422497:	(bad)  
  422498:	mov    eax,es
  42249a:	xor    ch,BYTE PTR [eax+ecx*4+0xf]
  42249e:	mov    esi,0x9ba0360
  4224a3:	(bad)  
  4224a4:	fild   QWORD PTR [esi+0x37]
  4224a7:	mov    ch,dl
  4224a9:	push   0xffffffdd
  4224ab:	push   ebx
  4224ac:	jns    0x42243b
  4224ae:	jl     0x4224cd
  4224b0:	mov    ebp,0x324e0541
  4224b5:	mov    DWORD PTR [ebx],esp
  4224b7:	xchg   esp,eax
  4224b8:	adc    edx,DWORD PTR [edi+0x6e]
  4224bb:	retf   
  4224bc:	mov    ds:0xcc1bd90b,eax
  4224c1:	loope  0x422520
  4224c3:	int3   
  4224c4:	inc    esp
  4224c5:	jno    0x42252e
  4224c7:	cmp    cl,BYTE PTR [edi+eiz*4-0x21]
  4224cb:	lods   eax,DWORD PTR ds:[esi]
  4224cc:	jno    0x422533
  4224ce:	sbb    ebp,DWORD PTR [ebp-0x26]
  4224d1:	jmp    0x440e:0x51a1217a
  4224d8:	xor    edi,DWORD PTR [edi]
  4224da:	std    
  4224db:	xor    eax,0x5b2a0a09
  4224e0:	xor    ch,ah
  4224e2:	push   esp
  4224e3:	sbb    DWORD PTR [edx+edi*4],ebx
  4224e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224e7:	jno    0x4224de
  4224e9:	fld    QWORD PTR ds:0x74f49452
  4224ef:	retf   
  4224f0:	rcr    BYTE PTR [eax-0x9b02154],1
  4224f6:	and    ah,dh
  4224f8:	fild   WORD PTR [ebx-0x4c]
  4224fb:	push   0xffffffc8
  4224fd:	lds    edx,FWORD PTR [ebp-0x70302684]
  422503:	xchg   edi,eax
  422504:	cld    
  422505:	mov    bl,cl
  422507:	or     DWORD PTR [esi+0x5a43225c],esp
  42250d:	mov    dh,0xb4
  42250f:	retf   
  422510:	in     eax,0xc3
  422512:	leave  
  422513:	shr    BYTE PTR [esi-0xa],0x8b
  422517:	lahf   
  422518:	mov    dl,0xaf
  42251a:	into   
  42251b:	imul   edx,DWORD PTR [ecx],0x4d
  42251e:	add    DWORD PTR [edx+0x2e],edx
  422521:	(bad)  
  422522:	cvtps2pi mm2,QWORD PTR [edi]
  422525:	lahf   
  422526:	or     al,0xf6
  422528:	xor    BYTE PTR [ebx-0x11],al
  42252b:	int    0x4
  42252d:	retf   0xbab5
  422530:	dec    edx
  422531:	add    DWORD PTR [eax-0x60],0x4c
  422535:	push   edi
  422536:	sbb    BYTE PTR [eax],al
  422538:	out    0x35,eax
  42253a:	lock cld 
  42253c:	out    dx,al
  42253d:	sbb    eax,0xe954011
  422542:	dec    esp
  422543:	je     0x422528
  422545:	les    ebx,FWORD PTR [edi]
  422547:	mov    bl,0xb2
  422549:	xchg   ebx,eax
  42254a:	pop    ebp
  42254b:	enter  0xe7e9,0xa5
  42254f:	mov    esi,0xa883fbe4
  422554:	add    edi,DWORD PTR [edx-0x5c]
  422557:	jne    0x422525
  422559:	retf   
  42255a:	les    ebp,FWORD PTR [edx]
  42255c:	mov    bl,0xf5
  42255e:	jp     0x4224fd
  422560:	cs ins BYTE PTR es:[edi],dx
  422562:	jmp    0x2465:0x26a6ded8
  422569:	mov    cl,0x97
  42256b:	hlt    
  42256c:	pop    esi
  42256d:	inc    ecx
  42256e:	bnd jo 0x4224fd
  422571:	jp     0x4225aa
  422573:	inc    edx
  422574:	mov    esp,0xc2361ef5
  422579:	mov    ecx,0xd6111f53
  42257e:	ror    edx,1
  422580:	mov    al,0x8a
  422582:	xchg   DWORD PTR [ecx],esp
  422584:	ret    0xe51
  422587:	cmp    al,dl
  422589:	ret    
  42258a:	pushf  
  42258b:	lea    ebp,[eax+0x57cffa78]
  422591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422592:	test   al,0x88
  422594:	push   esi
  422595:	and    esp,DWORD PTR [edx-0x54]
  422598:	call   0xb1c55d18
  42259d:	jle    0x422586
  42259f:	std    
  4225a0:	mov    ecx,0xfff8cea9
  4225a5:	in     eax,dx
  4225a6:	mov    ebp,0x7584c3d8
  4225ab:	jmp    0x37bc:0x8fc552ec
  4225b2:	jae    0x422631
  4225b4:	je     0x4225ad
  4225b6:	repz and esp,esi
  4225b9:	div    esp
  4225bb:	dec    edx
  4225bc:	xor    DWORD PTR [eax-0x5e],edx
  4225bf:	rol    ebp,1
  4225c1:	imul   esi,DWORD PTR [ecx-0x3d],0x11
  4225c5:	rcr    BYTE PTR [esp+eiz*4],1
  4225c8:	in     al,dx
  4225c9:	and    al,0x20
  4225cb:	sbb    DWORD PTR [ebp-0x6f],0xffffff9c
  4225cf:	adc    BYTE PTR [ebx],ch
  4225d1:	mov    ebp,0x137bd2a2
  4225d6:	mov    ecx,0x899f9427
  4225db:	mov    ch,0x90
  4225dd:	pop    esi
  4225de:	mov    ah,0xd7
  4225e0:	shr    BYTE PTR [edx+0x11d4a7a5],cl
  4225e6:	loop   0x4225d5
  4225e8:	and    BYTE PTR ds:0x26c7977c,0xd0
  4225ef:	mov    dl,0x39
  4225f1:	inc    eax
  4225f2:	(bad)  
  4225f3:	mov    ds:0x7f3bcf8a,al
  4225f8:	mov    dl,0x57
  4225fa:	xchg   esp,eax
  4225fb:	jne    0x4225b0
  4225fd:	in     al,0x87
  4225ff:	enter  0x160e,0xdd
  422603:	push   eax
  422604:	adc    al,bl
  422606:	loope  0x4225ce
  422608:	dec    edx
  422609:	imul   edi,DWORD PTR [edx+0x73],0xa8ba7025
  422610:	mov    cl,0x66
  422612:	add    DWORD PTR [eax],esi
  422614:	ret    0xd243
  422617:	and    DWORD PTR [esi],ebp
  422619:	arpl   WORD PTR [edx+0x2bfeb165],si
  42261f:	xchg   esi,eax
  422620:	pop    ebx
  422621:	jp     0x4225bf
  422623:	mov    dh,0xb3
  422625:	cmc    
  422626:	ins    BYTE PTR es:[edi],dx
  422627:	adc    DWORD PTR [esi-0x7ce8f777],edi
  42262d:	icebp  
  42262e:	xchg   edx,eax
  42262f:	adc    al,0xdc
  422631:	jae    0x4225b4
  422633:	dec    ecx
  422634:	ins    BYTE PTR es:[edi],dx
  422635:	(bad)  
  422637:	sbb    DWORD PTR [esi],esi
  422639:	dec    edx
  42263a:	je     0x422646
  42263c:	mov    dl,0xaf
  42263e:	xor    esi,esp
  422640:	arpl   WORD PTR [ecx],dx
  422642:	or     eax,0xbc100247
  422647:	pop    ecx
  422648:	dec    eax
  422649:	mov    DWORD PTR [ecx],ebx
  42264b:	sbb    eax,0xc4cd8474
  422650:	lods   eax,DWORD PTR ds:[esi]
  422651:	shr    DWORD PTR [edi-0x28],1
  422654:	fmul   st(6),st
  422656:	pop    esp
  422657:	and    esi,ebx
  422659:	or     edx,ecx
  42265b:	sar    BYTE PTR [eax-0x12145256],0x34
  422662:	xchg   ebx,eax
  422663:	push   ebx
  422664:	cld    
  422665:	ins    DWORD PTR es:[edi],dx
  422666:	add    cl,BYTE PTR [ebx-0x76]
  422669:	out    dx,al
  42266a:	or     eax,0xed159739
  42266f:	adc    BYTE PTR [eax+0x3f6b0dd9],0x4d
  422676:	js     0x4226d1
  422678:	rol    DWORD PTR [ecx+0x55],cl
  42267b:	jmp    0x2442f70e
  422680:	mov    DWORD PTR [ecx+0x52],0x24e7ca31
  422687:	ja     0x4226e3
  422689:	jmp    0xdec148ef
  42268e:	clc    
  42268f:	imul   ebp,DWORD PTR [ebp-0x67],0xffffff8e
  422693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422694:	jmp    FWORD PTR [edx]
  422696:	adc    eax,0x5de65e29
  42269b:	cwde   
  42269c:	pop    edi
  42269d:	sar    DWORD PTR [edx],0xf1
  4226a0:	test   DWORD PTR [ebx+edx*2],0xf2aa443b
  4226a7:	adc    ch,BYTE PTR [eax-0x652461f8]
  4226ad:	outs   dx,BYTE PTR ds:[esi]
  4226ae:	cs jmp 0x42271c
  4226b1:	mov    al,0x3a
  4226b3:	dec    esp
  4226b4:	push   edx
  4226b5:	aad    0x97
  4226b7:	cmp    eax,0xea8d78ca
  4226bc:	jp     0x4226a4
  4226be:	mov    edi,0x51934850
  4226c3:	dec    DWORD PTR [edx]
  4226c5:	call   0x5650:0x380ab40a
  4226cc:	cmp    ah,cl
  4226ce:	dec    edi
  4226cf:	or     DWORD PTR ds:0x44ed0956,0x921c345
  4226d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226da:	sub    esp,DWORD PTR [edx+0x28]
  4226dd:	add    eax,0x6f6de37f
  4226e2:	xchg   edi,eax
  4226e3:	push   esi
  4226e4:	call   0xbed58a7b
  4226e9:	or     al,0xce
  4226eb:	mov    eax,ds:0x1ccccd9b
  4226f0:	imul   eax,DWORD PTR ds:0xfcccfb1e,0xffffffe9
  4226f7:	(bad)  
  4226f8:	(bad)  
  4226f9:	cmp    bl,BYTE PTR [ebp+0x56bbecf3]
  4226ff:	adc    eax,DWORD PTR [esi-0x1f2bad0c]
  422705:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422707:	jmp    0x422754
  422709:	popf   
  42270a:	ss mov al,0xf5
  42270d:	imul   ebx,DWORD PTR [esi+0x2752f83a],0x42
  422714:	mov    dh,0xba
  422716:	inc    ebp
  422717:	repz loop 0x422732
  42271a:	inc    edx
  42271b:	adc    ah,BYTE PTR [esi]
  42271d:	sub    DWORD PTR [edx-0x5f2004b],eax
  422723:	cld    
  422724:	fdivrp st(1),st
  422726:	add    BYTE PTR [edx],cl
  422728:	scas   eax,DWORD PTR es:[edi]
  422729:	push   ebp
  42272a:	xor    cl,BYTE PTR [edx]
  42272c:	lahf   
  42272d:	mov    si,es
  422730:	pop    esi
  422731:	gs pop es
  422733:	daa    
  422734:	lahf   
  422735:	sti    
  422736:	push   esp
  422737:	sub    bh,BYTE PTR [ebx-0x3e]
  42273a:	push   ebx
  42273b:	sbb    edx,esi
  42273d:	mov    ecx,DWORD PTR [esi]
  42273f:	mov    esi,0x33e2fa84
  422744:	sbb    DWORD PTR [esi+ebp*2-0x10],esp
  422748:	and    BYTE PTR [ebp+0x123e39fa],0x1b
  42274f:	jl     0x422752
  422751:	inc    esi
  422752:	inc    esp
  422753:	pop    es
  422754:	into   
  422755:	les    esi,FWORD PTR [edi+eax*1+0x10]
  422759:	jle    0x4227d0
  42275b:	mov    cl,0x40
  42275d:	push   0xe9c0e2ed
  422762:	mov    dl,0xb0
  422764:	push   ebp
  422765:	jno    0x422789
  422767:	test   DWORD PTR ds:0x9ee2b2dd,esi
  42276d:	lock mov bh,0xbf
  422770:	lods   eax,DWORD PTR ds:[esi]
  422771:	and    DWORD PTR [esi+eiz*8],esi
  422774:	adc    esp,esp
  422776:	or     BYTE PTR [edx+edi*2-0xda6b0fd],0x8
  42277e:	mov    edi,0xc4664ad8
  422783:	test   eax,0x1a08238c
  422788:	add    ebp,ebp
  42278a:	push   edi
  42278b:	push   ds
  42278c:	and    DWORD PTR [edx+0xf5f87fd],eax
  422792:	fs sbb al,0xb7
  422795:	xchg   ebp,eax
  422796:	pop    esi
  422797:	shl    BYTE PTR [ebx-0x7f],cl
  42279a:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  42279c:	pop    ds
  42279d:	setge  al
  4227a0:	jnp    0x422761
  4227a2:	cdq    
  4227a3:	loop   0x4227bf
  4227a5:	jns    0x42278a
  4227a7:	and    BYTE PTR [esp+edx*1-0x5e059b4],cl
  4227ae:	fisub  DWORD PTR [edx]
  4227b0:	and    BYTE PTR [esp+edx*1+0x544a4a75],ch
  4227b7:	mov    dh,0xb2
  4227b9:	inc    esp
  4227ba:	push   cs
  4227bb:	mov    BYTE PTR [edi+0x5ec54419],ch
  4227c1:	push   edi
  4227c2:	push   ds
  4227c3:	and    DWORD PTR [ecx+0x2ba69169],eax
  4227c9:	dec    ebx
  4227ca:	repnz mov WORD PTR [eax],es
  4227cd:	fidiv  DWORD PTR [ecx+0x2f]
  4227d0:	(bad)  
  4227d1:	adc    edx,edx
  4227d3:	jg     0x42278f
  4227d5:	mov    al,0x4e
  4227d7:	mov    WORD PTR [esi],fs
  4227d9:	jecxz  0x422816
  4227db:	push   edx
  4227dc:	jecxz  0x4227dc
  4227de:	push   edx
  4227df:	stos   DWORD PTR es:[edi],eax
  4227e0:	call   0x5381:0xdd30bd20
  4227e7:	cmc    
  4227e8:	dec    ebx
  4227e9:	stos   DWORD PTR es:[edi],eax
  4227ea:	mov    WORD PTR [esi+0x4db9d97b],ds
  4227f0:	vpinsrw xmm3,xmm0,ecx,0x85
  4227f5:	stos   DWORD PTR es:[edi],eax
  4227f6:	sbb    al,0x55
  4227f8:	imul   esp,ebx,0xf81a07b9
  4227fe:	add    BYTE PTR [ebp+0x46],bl
  422801:	xchg   edi,eax
  422802:	arpl   WORD PTR [esi-0x4cb8da44],di
  422808:	sti    
  422809:	push   0x67
  42280b:	pushf  
  42280c:	xchg   esi,eax
  42280d:	inc    ebp
  42280e:	(bad)  [ebp-0x5]
  422811:	jnp    0x42284f
  422813:	mov    ebx,0xdc87ac6c
  422818:	mov    DWORD PTR [edx-0x3a5a7f30],edi
  42281e:	xor    DWORD PTR [ebp+0x49],ebx
  422821:	jg     0x42284e
  422823:	mov    esp,0x8d187017
  422828:	repnz fwait
  42282a:	mov    eax,ds:0x1a1e8857
  42282f:	cmp    BYTE PTR [ebx+0x23],0x1e
  422833:	sub    ebp,edi
  422835:	add    bh,al
  422837:	xchg   ebx,eax
  422838:	ds out dx,eax
  42283a:	inc    esp
  42283b:	mov    al,0xc
  42283d:	sbb    eax,0x3258b5f3
  422842:	xchg   BYTE PTR ds:0xc13ff634,dl
  422848:	pusha  
  422849:	out    dx,eax
  42284a:	bnd lock cs jno 0x42281a
  42284f:	sub    esi,DWORD PTR [eax]
  422851:	sbb    eax,0x62bb5513
  422856:	xchg   esp,eax
  422857:	fiadd  WORD PTR [eax]
  422859:	std    
  42285a:	push   edx
  42285b:	adc    eax,0x685279bf
  422860:	out    0xe4,eax
  422862:	or     DWORD PTR [edx+0x7baf919],ecx
  422868:	cli    
  422869:	popa   
  42286a:	in     eax,dx
  42286b:	push   eax
  42286c:	dec    ecx
  42286d:	xor    ah,BYTE PTR [edi-0x3477c8e1]
  422873:	mov    dh,0xff
  422875:	addr16 jle 0x422812
  422878:	daa    
  422879:	(bad)  
  42287a:	int    0xcb
  42287c:	pop    ss
  42287d:	inc    ecx
  42287e:	jp     0x4228a4
  422880:	cmc    
  422881:	lods   eax,DWORD PTR ds:[esi]
  422882:	fdivr  DWORD PTR [edx+eiz*4-0x23]
  422886:	mov    bh,0x25
  422888:	dec    eax
  422889:	(bad)  
  42288a:	jbe    0x4228b6
  42288c:	(bad)  
  42288e:	cmp    BYTE PTR [edi],bh
  422890:	jg     0x422879
  422892:	inc    ecx
  422893:	scas   eax,DWORD PTR es:[edi]
  422894:	dec    ebp
  422895:	mov    ebx,0x30abaf86
  42289a:	mov    BYTE PTR [esi],bh
  42289c:	and    eax,0x3f99e0c6
  4228a1:	jb     0x422904
  4228a3:	mov    DWORD PTR [edx+0x21],edx
  4228a6:	mov    edi,0x3200da96
  4228ab:	pop    eax
  4228ac:	pop    es
  4228ad:	pop    ecx
  4228ae:	inc    ebp
  4228af:	mov    esi,0x14f1e8f8
  4228b4:	fisub  DWORD PTR [edx-0x6]
  4228b7:	adc    eax,0x983b5f81
  4228bc:	arpl   WORD PTR [esi+ebp*8-0x1aa7f922],dx
  4228c3:	cli    
  4228c4:	jmp    0x4384cae4
  4228c9:	xchg   edx,eax
  4228ca:	mov    ah,0x5b
  4228cc:	inc    esp
  4228cd:	push   esi
  4228ce:	and    BYTE PTR [ecx+0x7763a17d],dl
  4228d4:	add    esp,DWORD PTR [edx]
  4228d6:	jg     0x4228de
  4228d8:	les    ebx,FWORD PTR [esi]
  4228da:	mov    dl,0x81
  4228dc:	in     eax,dx
  4228dd:	inc    esi
  4228de:	jb     0x4228d2
  4228e0:	jle    0x422866
  4228e2:	in     eax,dx
  4228e3:	pop    edi
  4228e4:	pop    edx
  4228e5:	mov    bh,0x43
  4228e7:	pop    ss
  4228e8:	aam    0x44
  4228ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228eb:	jbe    0x422935
  4228ed:	sbb    DWORD PTR [ebp+0x10],ebp
  4228f0:	outs   dx,DWORD PTR ds:[esi]
  4228f1:	lds    esp,FWORD PTR ds:0x63491d3
  4228f7:	mov    dl,BYTE PTR [edi]
  4228f9:	sbb    DWORD PTR [eax],eax
  4228fb:	jge    0x42297b
  4228fd:	retf   0x2c45
  422900:	rcr    DWORD PTR [edi-0x6a],1
  422903:	push   es
  422904:	aad    0x52
  422906:	pop    edi
  422907:	xchg   ecx,eax
  422908:	cmp    ebp,edx
  42290a:	mov    ebp,0xce2e1e77
  42290f:	xor    al,0x68
  422911:	push   cs
  422912:	xchg   si,ax
  422914:	sbb    ebp,DWORD PTR [ecx]
  422916:	rcl    DWORD PTR [ebx-0x6fcf18f3],1
  42291c:	outs   dx,DWORD PTR ds:[esi]
  42291d:	xchg   edi,eax
  42291e:	push   cs
  42291f:	retf   0x9d7b
  422922:	(bad)  
  422923:	adc    BYTE PTR [esi],bh
  422925:	jmp    0x207d:0x79fe0072
  42292c:	mov    ebx,0x64ba4245
  422931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422932:	inc    esi
  422933:	test   BYTE PTR [esi+0x6b],dh
  422936:	(bad)  
  422937:	mov    al,0x3a
  422939:	sub    BYTE PTR [ebx-0x4be94d58],0xac
  422940:	enter  0xf5e8,0xe9
  422944:	popa   
  422945:	mov    ecx,0x3c27679b
  42294a:	mov    ch,0x60
  42294c:	jae    0x422964
  42294e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42294f:	addr16 cmp eax,0x8d7bcc07
  422955:	dec    ecx
  422956:	mov    gs,WORD PTR [edi+eax*4-0x5f7e44c5]
  42295d:	das    
  42295e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42295f:	pop    ss
  422960:	xchg   esi,eax
  422961:	mov    esp,0x3704aa57
  422966:	cdq    
  422967:	mov    al,0x8a
  422969:	cmp    DWORD PTR [eax-0x15],edx
  42296c:	jecxz  0x42299f
  42296e:	mov    edi,0x20697562
  422973:	jl     0x42293d
  422975:	shl    BYTE PTR [ecx],1
  422977:	shl    BYTE PTR [edi-0xb6717ae],0x31
  42297e:	xchg   esp,eax
  42297f:	mov    bl,0x45
  422981:	xchg   DWORD PTR [edx-0x12d68473],ebp
  422987:	hlt    
  422988:	mov    dl,0x12
  42298a:	gs std 
  42298c:	dec    edx
  42298d:	cs cmp dl,dh
  422990:	into   
  422991:	inc    edi
  422992:	data16 sub dh,BYTE PTR [ebx]
  422995:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422996:	shl    dh,1
  422998:	or     esi,DWORD PTR [eax]
  42299a:	in     eax,0xb6
  42299c:	out    dx,eax
  42299d:	rcl    edi,1
  42299f:	push   es
  4229a0:	rcl    BYTE PTR [ecx-0x2c],1
  4229a3:	in     al,0xa
  4229a5:	fsub   QWORD PTR [esi]
  4229a7:	push   edi
  4229a8:	sar    BYTE PTR [ecx],1
  4229aa:	mov    ebp,0x38d9838f
  4229af:	pusha  
  4229b0:	pushf  
  4229b1:	jecxz  0x42296c
  4229b3:	cld    
  4229b4:	pop    eax
  4229b5:	rcr    BYTE PTR [ebx-0x1a4cdb33],cl
  4229bb:	sbb    ah,cl
  4229bd:	ret    
  4229be:	xor    DWORD PTR [ebx+0x7a],0xb1264437
  4229c5:	inc    eax
  4229c6:	repz inc ebx
  4229c8:	test   eax,0xb594165f
  4229cd:	pop    ebp
  4229ce:	mov    ebp,0x5c1f0c6e
  4229d3:	test   BYTE PTR [edx+0x27],dh
  4229d6:	ins    DWORD PTR es:[edi],dx
  4229d7:	stc    
  4229d8:	lock jmp 0xd1629260
  4229de:	lahf   
  4229df:	(bad)  
  4229e0:	rcl    ah,cl
  4229e2:	(bad)  
  4229e3:	jge    0x422965
  4229e5:	ret    0x7429
  4229e8:	fnsave [eax-0x80]
  4229eb:	(bad)  
	...
  422a2c:	add    BYTE PTR [eax],al
  422a2e:	add    BYTE PTR [ecx],bl
  422a30:	je     0x422a01
  422a32:	(bad)  
  422a33:	out    dx,eax
  422a34:	(bad)  
  422a35:	cmp    esi,esi
  422a37:	repnz sahf 
  422a39:	mov    ebx,0x8e682623
  422a3e:	inc    edi
  422a3f:	loop   0x422a5b
  422a41:	add    DWORD PTR [eax],eax
  422a43:	and    eax,0x3f000007
  422a48:	inc    BYTE PTR [ecx-0x3a]
  422a4b:	cmp    ebx,DWORD PTR [esi-0x4e]
  422a4e:	cs sbb eax,0x9c1cf685
  422a54:	test   BYTE PTR [eax+0x15],dh
  422a57:	or     BYTE PTR ds:0x7547053a,bh
  422a5d:	sub    BYTE PTR [edx-0x9b1379],dl
  422a63:	push   ss
  422a64:	in     al,0x2e
  422a66:	popf   
  422a67:	sub    al,0x2f
  422a69:	and    BYTE PTR [edx],dl
  422a6b:	sar    BYTE PTR [esi+0x74eb66cc],cl
  422a71:	or     dl,BYTE PTR [ebx+0x3c4d637f]
  422a77:	loope  0x422ad8
  422a79:	int    0xeb
  422a7b:	std    
  422a7c:	outs   dx,DWORD PTR ds:[esi]
  422a7d:	daa    
  422a7e:	fs pop eax
  422a80:	dec    ebp
  422a81:	mov    ds:0xdde1f41f,al
  422a86:	loop   0x422a59
  422a88:	mov    ah,0xb4
  422a8a:	loopne 0x422aa7
  422a8c:	xor    cl,dh
  422a8e:	(bad)  
  422a8f:	xor    esi,DWORD PTR [ebx+0x4da72f6d]
  422a95:	lahf   
  422a96:	pushf  
  422a97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a98:	cmp    ebx,ebx
  422a9a:	enter  0x8de1,0xa0
  422a9e:	cdq    
  422a9f:	fucomp st(5)
  422aa1:	sub    BYTE PTR [esi+0x3d],al
  422aa4:	imul   edi,DWORD PTR [edx],0xc6637ff7
  422aaa:	nop
  422aab:	sahf   
  422aac:	push   ebx
  422aad:	mov    ecx,DWORD PTR [ebp+0x49]
  422ab0:	pop    ecx
  422ab1:	pop    esi
  422ab2:	call   0x5129f8a5
  422ab7:	ret    0x1476
  422aba:	jmp    0x422af4
  422abc:	cmp    BYTE PTR [ebx],0xb5
  422abf:	xchg   ebx,eax
  422ac0:	mov    bh,ah
  422ac2:	mov    ah,0x83
  422ac4:	loopne 0x422aa0
  422ac6:	(bad)
  422aca:	cmp    bh,BYTE PTR [edi-0x4aef4855]
  422ad0:	jmp    0x5ff8d5e8
  422ad5:	pushf  
  422ad6:	aaa    
  422ad7:	call   0xe611:0x363e94a5
  422ade:	jae    0x422b4f
  422ae0:	pop    esi
  422ae1:	xor    DWORD PTR [ecx-0x7d],ebp
  422ae4:	mov    ch,0x7d
  422ae6:	xchg   ebx,eax
  422ae7:	int3   
  422ae8:	nop
  422ae9:	dec    esi
  422aea:	rcl    DWORD PTR [eax],cl
  422aec:	mov    al,ds:0xa754d378
  422af1:	xchg   esi,eax
  422af2:	leave  
  422af3:	mov    ds:0xad5766fd,al
  422af8:	sub    DWORD PTR [edi-0x4e4960fe],ebx
  422afe:	sbb    edi,ebp
  422b00:	adc    DWORD PTR [edx+0x4f93b3ae],ecx
  422b06:	mov    ecx,DWORD PTR [edx+0x2cf106ad]
  422b0c:	retf   0x88e5
  422b0f:	pop    esp
  422b10:	fwait
  422b11:	sub    ecx,esp
  422b13:	lods   eax,DWORD PTR ds:[esi]
  422b15:	xchg   ecx,eax
  422b16:	lahf   
  422b17:	or     esi,ebx
  422b19:	push   ebx
  422b1a:	jmp    FWORD PTR [edi+0x56]
  422b1d:	jbe    0x422b32
  422b1f:	popa   
  422b20:	sbb    eax,0x79026734
  422b25:	leave  
  422b26:	add    ebx,DWORD PTR [eax+0x5f9f7e8e]
  422b2c:	push   eax
  422b2d:	mov    ds:0xed50ea0,eax
  422b32:	stos   DWORD PTR es:[edi],eax
  422b33:	(bad)  
  422b34:	pop    edi
  422b35:	test   BYTE PTR [edi-0x5e],ah
  422b38:	sub    BYTE PTR [eax+0x74],0xb7
  422b3c:	ds ja  0x422aee
  422b3f:	ret    0x2bb7
  422b42:	dec    esp
  422b43:	lahf   
  422b44:	bound  ebx,QWORD PTR ds:0xace9c34f
  422b4a:	aas    
  422b4b:	cdq    
  422b4c:	imul   edx,edi,0xfeccc2bf
  422b52:	lea    esp,[esp+eiz*4+0x14]
  422b56:	cmp    cl,BYTE PTR [edi]
  422b58:	add    eax,0x2384ee4a
  422b5d:	(bad)  
  422b5e:	jle    0x422bc6
  422b60:	mov    al,0x6e
  422b62:	jg     0x422baf
  422b64:	xchg   edi,eax
  422b65:	out    0x68,al
  422b67:	std    
  422b68:	sbb    DWORD PTR ds:[ecx],eax
  422b6b:	xchg   esp,eax
  422b6c:	ins    DWORD PTR es:[edi],dx
  422b6d:	adc    ebp,edx
  422b6f:	ret    
  422b70:	daa    
  422b71:	mov    eax,0x8159c804
  422b76:	pop    edx
  422b77:	jno    0x422b66
  422b79:	jb     0x422b1a
  422b7b:	in     al,0x79
  422b7d:	jmp    0x8726d702
  422b82:	pop    eax
  422b83:	arpl   WORD PTR [edi+ebx*2],ax
  422b86:	adc    BYTE PTR [eax],dl
  422b88:	inc    esp
  422b89:	nop
  422b8a:	es cmp cl,0x0
  422b8e:	jbe    0x422b86
  422b90:	and    dl,BYTE PTR [esp+eax*2-0x5e]
  422b94:	xchg   ebp,eax
  422b95:	mov    al,0x86
  422b97:	and    bh,0xe3
  422b9a:	mov    dl,0xc6
  422b9c:	add    ecx,DWORD PTR [esi+edx*4-0x23]
  422ba0:	pop    esp
  422ba1:	lock ins DWORD PTR es:[edi],dx
  422ba3:	inc    edi
  422ba4:	inc    ebx
  422ba5:	(bad)  
  422ba6:	aam    0x36
  422ba8:	or     bh,bl
  422baa:	and    DWORD PTR [eax+0x46],edx
  422bad:	inc    esi
  422bae:	and    ch,BYTE PTR [eax+eiz*4+0x237df78]
  422bb5:	out    0xd9,al
  422bb7:	push   0xffffffc6
  422bb9:	aas    
  422bba:	repz shl BYTE PTR [eax-0x47],cl
  422bbe:	int    0xec
  422bc0:	and    BYTE PTR [eax-0x4e4e1cff],dh
  422bc6:	push   es
  422bc7:	stc    
  422bc8:	and    bh,ch
  422bca:	and    esp,DWORD PTR [eax+0x478cdeda]
  422bd0:	mov    ds:0x8450eb4b,eax
  422bd5:	pusha  
  422bd6:	outs   dx,BYTE PTR ds:[esi]
  422bd7:	xchg   edi,eax
  422bd8:	mov    fs,WORD PTR [edi]
  422bda:	and    BYTE PTR [eax+0x7d98c9c3],bl
  422be0:	sub    BYTE PTR [ebx+0x52],cl
  422be3:	push   esp
  422be4:	data16 xor al,al
  422be7:	push   esp
  422be8:	test   BYTE PTR [edi+0x4f],al
  422beb:	push   es
  422bec:	test   BYTE PTR [ebx],0x1c
  422bef:	sub    BYTE PTR [ecx+0xe],0x3f
  422bf3:	loop   0x422c4c
  422bf5:	mov    eax,ds:0x2ca5039e
  422bfa:	stos   DWORD PTR es:[edi],eax
  422bfb:	add    eax,0xda65f764
  422c00:	xchg   edi,eax
  422c01:	scas   eax,DWORD PTR es:[edi]
  422c02:	jmp    0x422bcb
  422c04:	push   ss
  422c05:	add    bl,BYTE PTR [ebx]
  422c07:	int    0x2
  422c09:	dec    ebx
  422c0a:	cwde   
  422c0b:	in     al,0xcd
  422c0d:	rcr    BYTE PTR [ebp+0x6aecc0e3],1
  422c13:	mov    cl,0xd1
  422c15:	jns    0x422c69
  422c17:	(bad)  
  422c18:	ins    BYTE PTR es:[edi],dx
  422c19:	jecxz  0x422c61
  422c1b:	and    ebp,DWORD PTR ds:0x3b85c73b
  422c21:	pop    ss
  422c22:	xchg   DWORD PTR [eax+0x3f],edi
  422c25:	(bad)  
  422c26:	ror    BYTE PTR [eax],1
  422c28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c29:	xchg   ecx,eax
  422c2a:	xchg   edx,eax
  422c2b:	lahf   
  422c2c:	out    0x2a,al
  422c2e:	mov    ebp,0x5613ff51
  422c33:	push   di
  422c35:	(bad)  
  422c36:	leave  
  422c37:	imul   DWORD PTR [esi+eax*2-0x1a]
  422c3b:	stc    
  422c3c:	add    esi,DWORD PTR [ebp+0x1ea5765e]
  422c42:	shl    DWORD PTR [ecx-0x4d],1
  422c45:	retf   0xec9f
  422c48:	or     BYTE PTR [eax+0x2eabbb66],ch
  422c4e:	pop    edx
  422c4f:	sub    eax,0x60d5081c
  422c54:	mov    ecx,0xecc88d2b
  422c59:	nop
  422c5a:	adc    eax,0x59260c79
  422c5f:	pop    ebx
  422c60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c61:	fisub  DWORD PTR [esi+eax*1+0x5d]
  422c65:	test   eax,0xc7971550
  422c6a:	inc    esp
  422c6b:	dec    eax
  422c6c:	les    esp,FWORD PTR [esi+0x7fc6a2b]
  422c72:	js     0x422cdd
  422c74:	inc    edx
  422c75:	xchg   ebp,eax
  422c76:	mov    ebx,0xf04a0ff0
  422c7b:	ror    DWORD PTR [edi+0x5e],0x60
  422c7f:	pop    eax
  422c80:	add    BYTE PTR [ebp-0x3864f4a1],dh
  422c86:	push   es
  422c87:	cs in  eax,dx
  422c89:	mov    eax,0xbbc31fff
  422c8e:	mov    es,ebx
  422c90:	(bad)  
  422c91:	xor    eax,0xa929c76f
  422c96:	inc    esp
  422c97:	shl    bl,1
  422c99:	xor    bl,BYTE PTR [ebp-0x6f]
  422c9c:	dec    ecx
  422c9d:	neg    ebp
  422c9f:	jne    0x422c2d
  422ca1:	push   cs
  422ca2:	test   al,0xed
  422ca4:	mul    BYTE PTR [edi+0x78]
  422ca7:	adc    ch,bh
  422ca9:	add    edi,DWORD PTR [eax+0x28147d4a]
  422caf:	setae  BYTE PTR [ebp+ecx*2+0x6868b6bd]
  422cb7:	cld    
  422cb8:	test   DWORD PTR [esi],ebp
  422cba:	adc    ch,BYTE PTR [ecx+0x2e]
  422cbd:	scas   eax,DWORD PTR es:[edi]
  422cbe:	xor    al,0x6a
  422cc0:	jp     0x422d05
  422cc2:	push   ecx
  422cc3:	pop    eax
  422cc4:	jmp    0x960d01ac
  422cc9:	lock cmp BYTE PTR ds:[ecx+0xa],dl
  422cce:	xchg   ebx,eax
  422ccf:	adc    al,0xbb
  422cd1:	xchg   ebp,eax
  422cd2:	pushf  
  422cd3:	pop    ebp
  422cd4:	mov    esi,0x3f02eae9
  422cd9:	test   BYTE PTR [ecx-0xce887d6],0x54
  422ce0:	and    al,0x14
  422ce2:	sub    ecx,ebp
  422ce4:	out    0x6a,eax
  422ce6:	aas    
  422ce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ce8:	das    
  422ce9:	pop    ebx
  422cea:	jno    0x422c9d
  422cec:	aaa    
  422ced:	pop    ebp
  422cee:	outs   dx,BYTE PTR ds:[esi]
  422cef:	lock fwait
  422cf1:	pop    esp
  422cf2:	test   al,0xa2
  422cf4:	xor    BYTE PTR [edx+0x6e],ch
  422cf7:	test   DWORD PTR [ebp-0x2cfb5189],eax
  422cfd:	shl    DWORD PTR [ebx-0x1f],0x46
  422d01:	ja     0x422cdc
  422d03:	push   0x2385a312
  422d08:	jne    0x422d86
  422d0a:	test   BYTE PTR [esi+0x2c484b90],al
  422d10:	push   ss
  422d11:	sbb    al,0xa1
  422d13:	mov    esp,0xe73155a1
  422d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d19:	outs   dx,DWORD PTR ds:[esi]
  422d1a:	shr    DWORD PTR [eax+0x13],0x28
  422d1e:	retf   0xf9e0
  422d21:	dec    edi
  422d22:	or     eax,0x394cecd0
  422d27:	inc    eax
  422d28:	(bad)  
  422d29:	out    0xd6,al
  422d2b:	pop    ebx
  422d2c:	ja     0x422d4b
  422d2e:	or     eax,0xe04e8d2b
  422d33:	jo     0x422d58
  422d35:	shl    DWORD PTR [edi+edx*2+0x6b],cl
  422d39:	ficomp DWORD PTR [eax+0x8]
  422d3c:	inc    ecx
  422d3d:	inc    ebx
  422d3e:	daa    
  422d3f:	pop    ecx
  422d40:	ja     0x422d94
  422d42:	gs test DWORD PTR gs:0x2a3b3fb5,edi
  422d4a:	fisub  WORD PTR [eax+0x5d]
  422d4d:	cmc    
  422d4e:	xor    BYTE PTR [edi-0x6f178443],dl
  422d54:	mov    ds:0xab6773f9,al
  422d59:	push   ss
  422d5a:	jne    0x422cfb
  422d5c:	test   esi,esi
  422d5e:	pop    eax
  422d5f:	outs   dx,BYTE PTR ds:[esi]
  422d60:	mov    edx,0x335f52b5
  422d65:	mov    eax,0x22b34543
  422d6a:	push   0x950f0293
  422d6f:	sub    eax,0x52c53e17
  422d74:	cs sub al,0xac
  422d77:	shl    BYTE PTR [ebx-0x5340b44b],1
  422d7d:	cmp    dl,BYTE PTR [ecx]
  422d7f:	sub    bl,BYTE PTR [eax+edx*2]
  422d82:	mov    bh,0x69
  422d84:	xor    eax,0xce813734
  422d89:	stos   DWORD PTR es:[edi],eax
  422d8a:	test   DWORD PTR [esi+0x2a],0x87492295
  422d91:	mov    eax,gs:0x3d7b5158
  422d97:	adc    al,0x39
  422d99:	cmc    
  422d9a:	jbe    0x422d63
  422d9c:	mov    cl,0x4f
  422d9e:	mov    cl,0xa0
  422da0:	push   ss
  422da1:	mov    al,0x28
  422da3:	enter  0xa3c,0x8b
  422da7:	pop    ebp
  422da8:	lock jp 0x422dd9
  422dab:	xchg   ecx,eax
  422dac:	aaa    
  422dad:	jmp    0x422e09
  422daf:	inc    esp
  422db0:	cmp    BYTE PTR [edi+0x7b],bh
  422db3:	popa   
  422db4:	pop    edi
  422db5:	add    BYTE PTR [edx-0x7f],0xd0
  422db9:	mov    edx,0x8d3b5fbd
  422dbe:	repz xor DWORD PTR [edx],ecx
  422dc1:	and    esi,DWORD PTR [edx+0x5cefeef8]
  422dc7:	mov    ebx,0xca4d3edb
  422dcc:	iret   
  422dcd:	sub    DWORD PTR [esi+0xc1bf60a],eax
  422dd3:	xchg   edx,eax
  422dd4:	lahf   
  422dd5:	and    eax,0x6b7078c6
  422dda:	fimul  DWORD PTR [eax]
  422ddc:	and    eax,0x8e6c8ad4
  422de1:	les    ebx,FWORD PTR [ebx+0x41]
  422de4:	outs   dx,BYTE PTR ds:[esi]
  422de5:	sbb    al,0x34
  422de7:	lock (bad) 
  422dea:	test   al,0x9a
  422dec:	shl    BYTE PTR [esi],cl
  422dee:	mov    edi,gs
  422df0:	jecxz  0x422db4
  422df2:	dec    ebx
  422df3:	sub    ch,dh
  422df5:	or     al,0xee
  422df7:	shl    eax,cl
  422df9:	aaa    
  422dfa:	enter  0x4458,0xa9
  422dfe:	cmp    al,0xf2
  422e00:	scas   eax,DWORD PTR es:[edi]
  422e01:	clc    
  422e02:	pop    es
  422e03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e04:	loopne 0x422e2e
  422e06:	ror    BYTE PTR ds:0xbf204af2,1
  422e0c:	(bad)  [esi+0x2dc6ad05]
  422e12:	stos   DWORD PTR es:[edi],eax
  422e13:	ret    0x4f7e
  422e16:	inc    ebp
  422e17:	sub    ebp,ebp
  422e19:	xor    bh,BYTE PTR [edx+esi*1]
  422e1c:	jno    0x422dc0
  422e1e:	pop    ebp
  422e1f:	iret   
  422e20:	add    al,0x4d
  422e22:	icebp  
  422e23:	xchg   ebx,ebx
  422e25:	adc    dl,bh
  422e27:	icebp  
  422e28:	(bad)  [ebx+esi*8-0x2cf06139]
  422e2f:	std    
  422e30:	inc    eax
  422e31:	int3   
  422e32:	call   0xe0da3b46
  422e37:	hlt    
  422e38:	mov    ds:0x7ecf9a22,al
  422e3d:	mov    al,0xb6
  422e3f:	loope  0x422e36
  422e41:	fcomp  st(2)
  422e43:	and    ebp,DWORD PTR [edi-0x59]
  422e46:	jp     0x422ec5
  422e48:	in     eax,dx
  422e49:	leave  
  422e4a:	dec    eax
  422e4b:	push   ecx
  422e4c:	mov    bh,0xd6
  422e4e:	mov    eax,0x10e2e103
  422e53:	sbb    eax,0xd5b0655b
  422e58:	mov    ds,ebp
  422e5a:	cmp    edx,eax
  422e5c:	jp     0x422e62
  422e5e:	inc    ebp
  422e5f:	idiv   BYTE PTR [edx-0x3fc159c6]
  422e65:	mov    dl,0xf7
  422e67:	frstor [edx+0x54e1c3f1]
  422e6d:	outs   dx,BYTE PTR ds:[esi]
  422e6e:	mov    dh,0x8b
  422e70:	not    DWORD PTR [ebp-0x54407a0f]
  422e76:	cmp    bl,BYTE PTR [ebx+0x2d]
  422e79:	sub    DWORD PTR [edi+0x78],0x5d
  422e7d:	popf   
  422e7e:	shl    ah,1
  422e80:	and    eax,0x242bbf7
  422e85:	out    0xdc,eax
  422e87:	aas    
  422e88:	bswap  edx
  422e8a:	pushf  
  422e8b:	loop   0x422e95
  422e8d:	loop   0x422e3f
  422e8f:	add    esi,DWORD PTR [esi]
  422e91:	sub    eax,0x4476a1ab
  422e96:	or     DWORD PTR [ecx+ecx*4-0x3a7d899e],ecx
  422e9d:	ja     0x422e68
  422e9f:	pushf  
  422ea0:	lock jmp 0x5230:0xcd6c0c5d
  422ea8:	dec    edi
  422ea9:	mov    esp,0x563a1a71
  422eae:	and    al,0xaf
  422eb0:	or     al,0xc4
  422eb2:	arpl   WORD PTR [ecx],di
  422eb4:	enter  0xb628,0xc3
  422eb8:	dec    ecx
  422eb9:	test   DWORD PTR [esi],esp
  422ebb:	aam    0x5b
  422ebd:	adc    dl,dh
  422ebf:	sahf   
  422ec0:	fwait
  422ec1:	dec    esi
  422ec2:	mul    DWORD PTR [esi-0x7ee09978]
  422ec8:	ins    DWORD PTR es:[edi],dx
  422ec9:	das    
  422eca:	dec    si
  422ecc:	and    BYTE PTR [esp+eax*1],0x1f
  422ed0:	sbb    eax,0xf8fb4fa3
  422ed5:	push   edi
  422ed6:	jo     0x422e65
  422ed8:	ret    0x55c6
  422edb:	out    dx,al
  422edc:	xor    BYTE PTR [edx-0x5c],bh
  422edf:	jmp    0xae97ba6
  422ee4:	mov    ah,0xc4
  422ee6:	sbb    DWORD PTR [ebx],edx
  422ee8:	and    al,0x70
  422eea:	mov    bh,0x87
  422eec:	push   cs
  422eed:	cdq    
  422eee:	lods   al,BYTE PTR ds:[esi]
  422eef:	stc    
  422ef0:	enter  0xda7c,0xb4
  422ef4:	add    BYTE PTR [ebp+ebp*4+0x59],0x1d
  422ef9:	sbb    al,0x38
  422efb:	sbb    eax,esp
  422efd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422efe:	into   
  422eff:	les    edi,FWORD PTR [edx]
  422f01:	or     eax,0xa7c5f334
  422f06:	mov    bh,0xd3
  422f08:	stos   DWORD PTR es:[edi],eax
  422f09:	in     eax,0xf
  422f0b:	inc    esp
  422f0c:	and    edi,DWORD PTR [ecx]
  422f0e:	xlat   BYTE PTR ds:[ebx]
  422f0f:	inc    ebp
  422f10:	scas   eax,DWORD PTR es:[edi]
  422f11:	fwait
  422f12:	mov    bh,0x60
  422f14:	xor    BYTE PTR [ecx],dl
  422f16:	push   es
  422f17:	push   edi
  422f18:	and    dl,BYTE PTR [ebp+0x6a]
  422f1b:	mov    eax,ds:0xd2d92c89
  422f20:	aas    
  422f21:	pusha  
  422f22:	fsub   QWORD PTR [ebx-0x7d]
  422f25:	(bad)  
  422f26:	cdq    
  422f27:	fnclex 
  422f29:	pop    edi
  422f2a:	cmp    DWORD PTR [ecx+0x4a],ebp
  422f2d:	mov    ds:0x5b7fa3eb,al
  422f32:	outs   dx,BYTE PTR ds:[esi]
  422f34:	fmul   DWORD PTR [ebx]
  422f36:	sub    al,0xc7
  422f38:	(bad)  
  422f39:	sub    eax,0xa8c2e6a9
  422f3e:	push   esp
  422f3f:	jge    0x422ed8
  422f41:	adc    BYTE PTR [ebx+0x416c9b1],ah
  422f47:	jnp    0x422f2b
  422f49:	adc    edi,DWORD PTR [edi]
  422f4b:	pop    edx
  422f4c:	mov    ds,WORD PTR [ebx]
  422f4e:	pop    es
  422f4f:	retf   
  422f50:	push   es
  422f51:	ror    dl,1
  422f53:	hlt    
  422f54:	adc    eax,0x85ce7f8a
  422f59:	(bad)  [esi-0x53ae1f75]
  422f5f:	stos   BYTE PTR es:[edi],al
  422f60:	sbb    ch,BYTE PTR [edi+0x3ee1f72f]
  422f66:	addr16 cmp al,0xce
  422f69:	dec    esp
  422f6a:	push   ebp
  422f6b:	mov    edx,DWORD PTR [eax-0x246a0af4]
  422f71:	sub    eax,0x9caaa2dd
  422f76:	inc    ecx
  422f77:	sbb    ecx,DWORD PTR [edi+eiz*2+0x46]
  422f7b:	pusha  
  422f7c:	fimul  WORD PTR [edx]
  422f7e:	stos   BYTE PTR es:[edi],al
  422f7f:	arpl   WORD PTR [ebx],si
  422f81:	(bad)  
  422f82:	int3   
  422f83:	push   es
  422f84:	in     eax,0xaa
  422f86:	(bad)  
  422f87:	jecxz  0x422fb7
  422f89:	mov    edi,0xf9a31bb0
  422f8e:	test   BYTE PTR [esi],ch
  422f90:	or     eax,0x997cf9a0
  422f95:	xor    BYTE PTR [edi-0x51],cl
  422f98:	adc    al,ch
  422f9a:	adc    BYTE PTR [ecx],bh
  422f9c:	call   0xa0f27b33
  422fa1:	dec    edi
  422fa2:	(bad)  
  422fa3:	ins    DWORD PTR es:[edi],dx
  422fa4:	mov    al,ds:0xad36ab8d
  422fa9:	pop    ss
  422faa:	mov    ch,0xc2
  422fac:	push   ebp
  422fad:	in     al,0xbf
  422faf:	jl     0x422ff5
  422fb1:	pushf  
  422fb2:	mov    ah,0xf2
  422fb4:	sbb    DWORD PTR [eax+0x2a],edi
  422fb7:	(bad)  
  422fb8:	jae    0x422fd9
  422fba:	lds    ebp,FWORD PTR [ecx-0x4b]
  422fbd:	cmp    BYTE PTR [edi],0x95
  422fc0:	mov    al,0x3
  422fc2:	inc    ecx
  422fc3:	sbb    BYTE PTR [ecx+0x6d],dh
  422fc6:	pop    edx
  422fc7:	sub    ah,BYTE PTR [ebp+0x42]
  422fca:	sub    DWORD PTR [ebp-0x2f],ebp
  422fcd:	add    DWORD PTR [esi+0x5],edx
  422fd0:	dec    ecx
  422fd1:	push   0xffffffec
  422fd3:	sbb    DWORD PTR [esi-0x49],0x553d17de
  422fda:	push   0x62bd5372
  422fdf:	div    BYTE PTR [edi-0x6e0a8806]
  422fe5:	out    dx,eax
  422fe6:	int3   
  422fe7:	dec    eax
  422fe8:	mov    al,0x39
  422fea:	xchg   esi,eax
  422feb:	push   esp
  422fec:	(bad)  
  422fed:	mov    ah,0xe3
  422fef:	push   0xe
  422ff1:	push   ecx
  422ff2:	inc    ebx
  422ff3:	addr16 stc 
  422ff5:	fadd   DWORD PTR [edx+0x37]
  422ff8:	mov    ds,ebp
  422ffa:	and    al,0x6d
  422ffc:	jecxz  0x423044
  422ffe:	mov    ebp,DWORD PTR [ebx-0x4d]
  423001:	cdq    
  423002:	mov    ebp,0x1ba8e149
  423007:	cmp    BYTE PTR [ebx+eiz*2-0x10],al
  42300b:	sbb    dl,ah
  42300d:	sbb    eax,0x9d17b63d
  423012:	in     eax,dx
  423013:	xor    BYTE PTR [edi+0x39],bh
  423016:	jb     0x422fba
  423018:	call   0x739e2cb5
  42301d:	xchg   ebx,eax
  42301e:	iret   
  42301f:	fistp  DWORD PTR [ecx]
  423021:	jl     0x423088
  423023:	push   es
  423024:	jae    0x423012
  423026:	jle    0x423004
  423028:	test   al,0xa4
  42302a:	fdiv   DWORD PTR [ebp+0x7c65e28a]
  423030:	int3   
  423031:	sbb    al,0xd5
  423033:	test   BYTE PTR ds:[eax+0x2eb25312],cl
  42303a:	je     0x423009
  42303c:	jmp    0x423068
  42303e:	dec    esi
  42303f:	mov    edi,0x2540d506
  423044:	test   DWORD PTR [edx+0x173728d1],eax
  42304a:	dec    ecx
  42304b:	ror    DWORD PTR [edx+ebx*2-0x4c11932],cl
  423052:	jae    0x42309d
  423054:	es aam 0x44
  423057:	or     BYTE PTR [edx],0x48
  42305a:	aad    0x8c
  42305c:	aaa    
  42305d:	jl     0x423082
  42305f:	sub    al,0xa6
  423061:	cs cs ja 0x4230ae
  423065:	add    ebp,DWORD PTR [esi-0x1a]
  423068:	rcl    edi,1
  42306a:	ret    0xdab5
  42306d:	jl     0x42304d
  42306f:	sub    eax,0x260b061e
  423074:	popf   
  423075:	(bad)  
  423076:	push   es
  423077:	(bad)  
  423078:	and    BYTE PTR [edx+0x2d77c9e8],bl
  42307e:	mov    edx,0xe4136b13
  423083:	in     al,0xe9
  423085:	sti    
  423086:	mov    esp,0x952dcc73
  42308b:	inc    ebx
  42308c:	mov    ecx,0xec588776
  423091:	shr    DWORD PTR [ebx-0x76],0xad
  423095:	cmp    BYTE PTR [esi+0xfbf427d],bh
  42309b:	pop    ecx
  42309c:	test   al,0x93
  42309e:	or     edi,eax
  4230a0:	mov    dh,0x99
  4230a2:	inc    ebx
  4230a3:	and    al,0x7a
  4230a5:	das    
  4230a6:	or     al,0xda
  4230a8:	or     DWORD PTR [ebx-0x22a58b5b],ecx
  4230ae:	shr    BYTE PTR [edx-0x5d6e4e93],1
  4230b4:	in     eax,dx
  4230b5:	xchg   DWORD PTR gs:[ebp*4+0x7b970668],edx
  4230bd:	out    dx,eax
  4230be:	xor    al,BYTE PTR [ecx]
  4230c0:	push   cs
  4230c1:	and    DWORD PTR [ecx],ecx
  4230c3:	loope  0x423116
  4230c5:	hlt    
  4230c6:	push   esi
  4230c7:	cmp    al,0x3d
  4230c9:	cdq    
  4230ca:	and    BYTE PTR ds:0xa3a5f14f,ah
  4230d0:	rol    BYTE PTR [esi+0x2abf3413],0x51
  4230d7:	jb     0x4230ff
  4230d9:	push   ss
  4230da:	out    dx,al
  4230db:	jae    0x4230dc
  4230dd:	test   al,0x39
  4230df:	mov    esi,0x9d3ebec5
  4230e4:	repnz xchg ebp,eax
  4230e6:	imul   esi,DWORD PTR [eax+0x4b6de997],0x66db5c5f
  4230f0:	add    edi,edx
  4230f2:	fcom   DWORD PTR [ebx]
  4230f4:	fbld   TBYTE PTR [edx-0x40]
  4230f7:	xor    al,0x9c
  4230f9:	rcl    eax,1
  4230fb:	(bad)  
  4230fc:	jbe    0x42314c
  4230fe:	add    DWORD PTR [ebp-0x10cface0],edi
  423104:	pusha  
  423105:	loop   0x423103
  423107:	inc    ebx
  423108:	enter  0x322b,0xf8
  42310c:	pop    ebp
  42310d:	fld    TBYTE PTR [ebx-0x80]
  423110:	ret    0x2878
  423113:	mov    esp,DWORD PTR [ebp+0x34]
  423116:	out    0xc6,eax
  423118:	fld    QWORD PTR [esi-0x17cfe8d]
  42311e:	repz push ebx
  423120:	jb     0x423193
  423122:	imul   ebx,DWORD PTR [edx-0x20],0xffffffd3
  423126:	push   0x6245293b
  42312b:	xchg   edi,eax
  42312c:	in     eax,0x6e
  42312e:	(bad)  
  42312f:	scas   al,BYTE PTR es:[edi]
  423130:	jle    0x42318e
  423132:	imul   ebx,DWORD PTR ds:0x70f93456,0x7553dac3
  42313c:	sar    BYTE PTR [edx+ecx*2-0x29742c74],cl
  423143:	adc    al,0x6c
  423145:	dec    BYTE PTR ds:0x66212770
  42314b:	dec    ebx
  42314c:	pop    esi
  42314d:	pushf  
  42314e:	out    dx,al
  42314f:	mov    ecx,0x33f77328
  423154:	jecxz  0x423115
  423156:	(bad)  
  423158:	push   cs
  423159:	pop    ebx
  42315a:	ds inc edx
  42315c:	in     al,0xca
  42315e:	ins    DWORD PTR es:[edi],dx
  42315f:	imul   esi,eax,0x5f
  423162:	mov    ecx,DWORD PTR [ebp-0x6d46930b]
  423168:	xchg   edx,eax
  423169:	ret    
  42316a:	mov    al,0x78
	...
  4231ac:	add    BYTE PTR [eax],al
  4231ae:	add    ch,dl
  4231b0:	and    BYTE PTR [eax-0x4],0x75
  4231b4:	cld    
  4231b5:	(bad)  [ecx+0x32bc8e94]
  4231bb:	les    edx,FWORD PTR [ebx]
  4231bd:	dec    esi
  4231be:	mov    cl,0x7
  4231c0:	and    al,BYTE PTR [ecx]
  4231c2:	add    BYTE PTR ds:0x1e000007,ah
  4231c8:	imul   eax,DWORD PTR [eax+0x7b371090],0xffffffa0
  4231cf:	push   edx
  4231d0:	std    
  4231d1:	jmp    0xce76:0xa80dacf1
  4231d8:	hlt    
  4231d9:	and    DWORD PTR [eax-0x5c],0x3af83fd6
  4231e0:	js     0x423220
  4231e2:	retf   
  4231e3:	call   0x6ae4:0x4c9c2985
  4231ea:	or     al,ch
  4231ec:	push   ss
  4231ed:	mov    eax,ds:0x34f3b8a2
  4231f2:	pop    ebp
  4231f3:	adc    BYTE PTR [eax+0x74],0x90
  4231f7:	inc    edi
  4231f8:	loope  0x4231c5
  4231fa:	imul   esp,DWORD PTR [esi+0x37],0x2e
  4231fe:	ret    0x4c7c
  423201:	int    0xf7
  423203:	imul   esi,DWORD PTR [ebp+0x2554916f],0x4e46c8dc
  42320d:	std    
  42320e:	outs   dx,BYTE PTR ds:[esi]
  42320f:	ds inc edi
  423211:	test   ebx,0x8522c480
  423217:	rol    bh,1
  423219:	and    al,0x23
  42321b:	mov    eax,ds:0x7f73c5a4
  423220:	push   esi
  423221:	ret    
  423222:	mov    edx,0xe8e76ba8
  423227:	in     al,dx
  423228:	cdq    
  423229:	rcl    BYTE PTR [edi+0x7c],0x96
  42322d:	sub    esp,eax
  42322f:	out    dx,eax
  423230:	(bad)  
  423231:	std    
  423232:	sti    
  423233:	dec    BYTE PTR [ebp-0x10]
  423236:	scas   al,BYTE PTR es:[edi]
  423237:	jmp    0xece64958
  42323c:	mov    bl,0xc7
  42323e:	or     eax,0xbc386715
  423243:	mov    ebx,0x8360643
  423248:	fcom   QWORD PTR [edi-0x43521430]
  42324e:	jb     0x423270
  423250:	pusha  
  423251:	xchg   esi,eax
  423252:	test   eax,0x25e03d07
  423257:	idiv   DWORD PTR [edi+0x1077175]
  42325d:	(bad)  
  42325e:	int    0x3a
  423260:	mov    ds:0x6c1cf89d,al
  423265:	lock je 0x423217
  423268:	xchg   bx,ax
  42326a:	mov    bl,0x8
  42326c:	add    DWORD PTR [edx+ebx*4+0x62],eax
  423270:	(bad)  
  423274:	xchg   edi,eax
  423275:	inc    ecx
  423276:	inc    esi
  423277:	inc    ecx
  423278:	and    eax,0x76c2c9
  42327d:	(bad)  
  42327e:	xchg   esi,eax
  42327f:	cmp    ch,0x6d
  423282:	out    0x42,eax
  423284:	and    al,bl
  423286:	scas   al,BYTE PTR es:[edi]
  423287:	popf   
  423288:	jae    0x4232cd
  42328a:	add    al,0x24
  42328c:	cdq    
  42328d:	test   edx,esp
  42328f:	mov    cl,0xf4
  423291:	and    eax,DWORD PTR [edi+ecx*2]
  423294:	xchg   esp,eax
  423295:	or     al,0xca
  423297:	inc    esi
  423298:	mov    BYTE PTR [ecx-0x5f5695c2],bl
  42329e:	push   esi
  42329f:	adc    DWORD PTR [ecx+0xe232e09],edi
  4232a5:	shl    BYTE PTR [si-0x2ed1],1
  4232aa:	aaa    
  4232ab:	pop    es
  4232ac:	push   es
  4232ad:	jecxz  0x423317
  4232af:	mov    edi,0xdc4e51e5
  4232b5:	xchg   DWORD PTR [edx-0x3d229fe5],ebp
  4232bb:	pushf  
  4232bc:	aam    0x49
  4232be:	and    edi,ecx
  4232c0:	imul   ecx,edi,0x1e
  4232c3:	fwait
  4232c4:	pop    esp
  4232c5:	cdq    
  4232c6:	add    DWORD PTR [edi-0x78a7b9ad],ebp
  4232cc:	sti    
  4232cd:	fcmovnu st,st(7)
  4232cf:	sbb    DWORD PTR [edx],edx
  4232d1:	and    DWORD PTR cs:[ebx-0x5b7d83c1],0x6b
  4232d9:	sub    al,0xed
  4232db:	and    ch,ah
  4232dd:	mov    dh,0xb3
  4232df:	stc    
  4232e0:	and    ah,bh
  4232e2:	add    DWORD PTR [eax-0xd1baf92],edx
  4232e8:	rcl    DWORD PTR [ebx+0x3c],cl
  4232eb:	bound  esi,QWORD PTR [ebx+0x3c30e50c]
  4232f1:	dec    esp
  4232f2:	cld    
  4232f3:	clc    
  4232f4:	pop    edx
  4232f5:	gs loop 0x4232d8
  4232f8:	(bad)  
  4232fb:	rcl    esi,cl
  4232fd:	aad    0x98
  4232ff:	jle    0x42337a
  423301:	and    DWORD PTR [eax],esi
  423303:	ins    DWORD PTR es:[edi],dx
  423304:	sti    
  423305:	pop    esi
  423306:	mov    al,0xa7
  423308:	adc    bh,ch
  42330a:	adc    BYTE PTR [ebx-0x4],bl
  42330d:	(bad)  
  42330e:	push   edi
  42330f:	mov    esi,0x7cffc459
  423314:	jb     0x423325
  423316:	(bad)  
  423317:	add    eax,0xfd22102f
  42331c:	xchg   ecx,eax
  42331d:	lods   eax,DWORD PTR ds:[esi]
  42331e:	ss enter 0xb83b,0xe0
  423323:	jp     0x423318
  423325:	and    esi,DWORD PTR [edx-0x4adac256]
  42332b:	or     BYTE PTR [ecx-0x78],al
  42332e:	cli    
  42332f:	xchg   edx,eax
  423330:	fistp  DWORD PTR [edi-0x5dab749a]
  423336:	pop    eax
  423337:	stc    
  423338:	and    al,0x2d
  42333a:	mov    eax,ds:0xc9b4342e
  42333f:	mov    eax,ds:0x51509a7b
  423344:	in     al,dx
  423345:	push   ebp
  423346:	dec    eax
  423347:	out    dx,al
  423348:	jb     0x42338e
  42334a:	test   DWORD PTR cs:0xe01330c5,eax
  423351:	ins    DWORD PTR es:[edi],dx
  423352:	sub    eax,0xb0a18e3b
  423357:	inc    ebx
  423358:	adc    BYTE PTR [ebx+ebp*8-0x80],dh
  42335c:	jmp    0x8649873b
  423361:	dec    ebx
  423362:	sbb    eax,0xd6025a2
  423367:	and    bh,BYTE PTR [edi-0xd]
  42336a:	adc    esp,DWORD PTR [edx+0x78a98ff9]
  423370:	enter  0x6371,0xed
  423374:	and    ebx,DWORD PTR [edx+0x27]
  423377:	inc    edx
  423378:	sub    eax,0xa46efbb7
  42337d:	add    DWORD PTR [esi+0x1a],esi
  423380:	mov    eax,0x6e0f23e3
  423385:	lods   eax,DWORD PTR ds:[esi]
  423386:	ror    DWORD PTR [eax+0x722dc58a],0xf1
  42338d:	out    0x92,eax
  42338f:	push   es
  423390:	pop    esi
  423391:	and    DWORD PTR [ecx],edi
  423393:	into   
  423394:	lods   eax,DWORD PTR ds:[esi]
  423395:	xor    al,bh
  423397:	add    dh,BYTE PTR [edx-0x66]
  42339a:	std    
  42339b:	fwait
  42339c:	nop
  42339d:	cmp    al,0xff
  42339f:	test   esi,ecx
  4233a1:	fsub   QWORD PTR [esi+0x7]
  4233a4:	mov    al,ds:0x7263f177
  4233a9:	xor    ah,bh
  4233ab:	xor    esp,DWORD PTR [edi]
  4233ad:	ds aaa 
  4233af:	test   eax,0xb35098ed
  4233b4:	neg    bh
  4233b6:	sbb    eax,0xc8b7a5ee
  4233bb:	mov    esi,0xa7abccd8
  4233c0:	inc    esi
  4233c1:	or     eax,0xdffa658c
  4233c6:	mov    ch,0xd3
  4233c8:	fild   DWORD PTR [edx-0x5e]
  4233cb:	mov    al,ds:0x39d265ee
  4233d0:	aaa    
  4233d1:	xchg   ebp,eax
  4233d2:	adc    BYTE PTR [ebp+0x0],ah
  4233d5:	cmp    dl,BYTE PTR [esi-0x1e]
  4233d8:	dec    edi
  4233d9:	jle    0x4233c3
  4233db:	(bad)  
  4233dc:	mov    bl,0x68
  4233de:	sbb    dl,BYTE PTR [ecx+0x69c8391d]
  4233e4:	push   edi
  4233e5:	mov    esp,0x81bc2a60
  4233ea:	int    0x78
  4233ec:	icebp  
  4233ed:	xor    al,0x20
  4233f0:	das    
  4233f1:	xor    ch,BYTE PTR [ebp+ecx*8-0x1940e0c3]
  4233f8:	aas    
  4233f9:	xor    ch,BYTE PTR [edi]
  4233fb:	inc    edi
  4233fc:	pop    edi
  4233fd:	cmp    esi,DWORD PTR [ebx]
  4233ff:	xchg   esi,eax
  423400:	jno    0x4233ed
  423402:	(bad)  
  423403:	retf   
  423404:	fld    DWORD PTR ds:0xcda2913
  42340a:	mul    DWORD PTR [eax]
  42340c:	mov    dh,0x9e
  42340e:	outs   dx,BYTE PTR ds:[esi]
  42340f:	call   0xe4453f93
  423414:	test   al,0xd2
  423416:	or     DWORD PTR [ebx+0x48],esp
  423419:	sbb    cl,BYTE PTR [esi+0x47]
  42341c:	ins    DWORD PTR es:[edi],dx
  42341d:	mov    ecx,0x111d7ea3
  423422:	test   al,0xdb
  423424:	push   ebx
  423425:	enter  0x58,0x46
  423429:	jle    0x423486
  42342b:	ficomp WORD PTR [esi-0x654682f7]
  423431:	adc    BYTE PTR [ecx],cl
  423433:	mov    ecx,0x1c1c599a
  423438:	or     DWORD PTR [edi+0x47d2d6a3],edi
  42343e:	test   eax,0xa4d4fc9e
  423443:	stc    
  423444:	jg     0x4234ad
  423446:	fidiv  WORD PTR ds:0xfd5fbcb9
  42344c:	push   edi
  42344d:	dec    ebx
  42344e:	ds ja  0x42342c
  423451:	mov    cl,0x44
  423453:	mov    BYTE PTR [edx-0x6a],dl
  423456:	lods   al,BYTE PTR ds:[esi]
  423457:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423458:	xor    BYTE PTR es:[eax+0x48],ah
  42345c:	lea    eax,[ebp+0x61e35d86]
  423462:	xchg   DWORD PTR [ebx],esp
  423464:	or     BYTE PTR [ebp-0xaeb74d5],ch
  42346a:	cwde   
  42346b:	jns    0x4233fb
  42346d:	jne    0x4234a2
  42346f:	xor    al,0x43
  423471:	pop    eax
  423472:	imul   ebx,DWORD PTR [ebx],0xffffff9e
  423475:	mov    eax,ds:0x357fb00
  42347a:	mov    al,bh
  42347c:	sbb    BYTE PTR [edi+0x304faa27],0x12
  423483:	popf   
  423484:	mov    bh,0x55
  423486:	fidiv  WORD PTR [ecx+eax*2-0x3d]
  42348a:	ret    0xfe1f
  42348d:	pusha  
  42348e:	test   ebx,ebx
  423490:	mov    esp,0x61b6afd6
  423495:	sbb    al,0x22
  423497:	dec    ebp
  423498:	add    BYTE PTR [edi],cl
  42349a:	push   edi
  42349b:	pusha  
  42349c:	inc    eax
  42349d:	scas   eax,DWORD PTR es:[edi]
  42349e:	outs   dx,BYTE PTR ds:[esi]
  42349f:	lods   al,BYTE PTR ds:[esi]
  4234a0:	stos   BYTE PTR es:[edi],al
  4234a1:	inc    ebp
  4234a2:	adc    ch,BYTE PTR [esi]
  4234a4:	inc    ecx
  4234a5:	xor    eax,0x6ffb6c18
  4234aa:	or     bl,BYTE PTR [edi]
  4234ac:	popa   
  4234ad:	mov    ah,0x5a
  4234af:	cwde   
  4234b0:	loop   0x423440
  4234b2:	cs and eax,0xb0babebf
  4234b8:	mov    eax,ds:0x483d37fd
  4234bd:	xor    ecx,DWORD PTR [eax+ebp*2+0x32]
  4234c1:	jo     0x4234fb
  4234c3:	gs push eax
  4234c5:	mov    al,ds:0x1a32f673
  4234ca:	fxch   st(0)
  4234cc:	mov    eax,ds:0x2ea46f09
  4234d1:	sahf   
  4234d2:	rcl    DWORD PTR [esi-0x2a],1
  4234d5:	jg     0x423543
  4234d7:	sahf   
  4234d8:	cmp    ch,BYTE PTR [esi+0x0]
  4234db:	sub    dl,ch
  4234dd:	iret   
  4234de:	popf   
  4234df:	push   esp
  4234e0:	out    dx,eax
  4234e1:	addr16 out 0x29,eax
  4234e4:	or     eax,0x82d0dfc1
  4234e9:	jae    0x423516
  4234eb:	push   esi
  4234ec:	enter  0x5665,0x44
  4234f0:	adc    ah,bl
  4234f2:	dec    esp
  4234f3:	inc    edi
  4234f4:	scas   eax,DWORD PTR es:[edi]
  4234f5:	mov    edi,0x913ed8eb
  4234fa:	mov    bl,0x38
  4234fc:	or     BYTE PTR [ebx],cl
  4234fe:	les    ebp,FWORD PTR [ebx]
  423500:	cmp    DWORD PTR [edx+0x73],0xf161e681
  423507:	cmp    DWORD PTR [ebx],0x16
  42350a:	adc    eax,0x507f026f
  42350f:	and    eax,0xd44dbab9
  423514:	ins    DWORD PTR es:[edi],dx
  423515:	sbb    BYTE PTR [edx+0x19],cl
  423518:	sub    bh,ah
  42351a:	rol    DWORD PTR [ebp-0x5f9ce2f8],cl
  423520:	sub    ebx,DWORD PTR [edx+ebp*8+0x70]
  423524:	pop    esi
  423525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423526:	sti    
  423527:	les    esp,FWORD PTR [edi]
  423529:	mov    ch,0x35
  42352b:	aad    0x1c
  42352d:	fistp  DWORD PTR [ebp+0x5c]
  423530:	test   bh,bl
  423532:	pusha  
  423533:	les    ebx,FWORD PTR [eax+0x9280de]
  423539:	pusha  
  42353a:	jae    0x423568
  42353c:	pushf  
  42353d:	call   0xe62b:0xb0dfad30
  423544:	jnp    0x4234d8
  423546:	mov    ecx,0x6b06a130
  42354b:	mov    al,ds:0x284ee186
  423550:	aas    
  423551:	sub    bl,BYTE PTR [edx]
  423553:	imul   DWORD PTR [ecx-0x246740c2]
  423559:	(bad)  
  42355b:	mov    edx,0xfd8ed87d
  423560:	test   eax,0xc55acc3f
  423565:	les    ebp,FWORD PTR [ebx]
  423567:	sub    dh,ah
  423569:	imul   esp,DWORD PTR [edi+0xc289a8c],0x3c11c2de
  423573:	fwait
  423574:	pop    ecx
  423575:	into   
  423576:	lahf   
  423577:	mov    dh,0x19
  423579:	push   eax
  42357a:	in     al,dx
  42357b:	pop    ecx
  42357c:	mov    edi,0x49fa443
  423581:	add    cl,BYTE PTR [edx-0x127465ef]
  423587:	mov    al,0x9c
  423589:	das    
  42358a:	xor    eax,0x3080a62b
  42358f:	xchg   edx,eax
  423590:	enter  0xc423,0x98
  423594:	fs mov eax,0xc78f097f
  42359a:	(bad)  
  42359c:	add    dl,BYTE PTR [edx+0xb]
  42359f:	std    
  4235a0:	fiadd  WORD PTR [esi+0x35]
  4235a3:	and    dl,cl
  4235a5:	mov    dl,0x51
  4235a7:	xor    ecx,DWORD PTR [esi-0x74]
  4235aa:	cs jb  0x4235fe
  4235ad:	fmul   DWORD PTR [ecx-0x76]
  4235b0:	mov    ds:0xce13103,eax
  4235b5:	dec    esi
  4235b6:	or     BYTE PTR [ecx],bh
  4235b8:	(bad)  
  4235b9:	into   
  4235ba:	ror    DWORD PTR [ecx],1
  4235bc:	dec    edi
  4235bd:	sahf   
  4235be:	and    DWORD PTR [esi+edx*1],ebx
  4235c1:	imul   ebp,ecx,0x909751f2
  4235c7:	mov    dl,0x3e
  4235c9:	pop    ebx
  4235ca:	jle    0x4235fb
  4235cc:	or     BYTE PTR [ebp+0x76],0x8d
  4235d0:	jb     0x4235e0
  4235d2:	in     al,dx
  4235d3:	rol    DWORD PTR [esi-0x25e3fbb1],cl
  4235d9:	sbb    esp,eax
  4235db:	ret    
  4235dc:	xchg   esi,eax
  4235dd:	push   es
  4235de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235df:	push   esi
  4235e0:	int    0xde
  4235e2:	mov    al,ds:0xc1381ce9
  4235e7:	sbb    ebp,DWORD PTR [edx+0x8]
  4235ea:	sub    al,BYTE PTR [ecx+0x7a]
  4235ed:	loope  0x423576
  4235ef:	fxch   st(0)
  4235f1:	(bad)  
  4235f3:	sbb    DWORD PTR [eax-0x5],0xffffff91
  4235f7:	jg     0x4235a5
  4235f9:	ds mov ebx,cs
  4235fc:	adc    al,0x22
  4235fe:	push   ds
  4235ff:	push   ebx
  423600:	popa   
  423601:	nop
  423602:	arpl   WORD PTR [esi+0x4b309630],sp
  423608:	pop    ecx
  423609:	in     eax,dx
  42360a:	xchg   ebx,eax
  42360b:	es lahf 
  42360d:	sbb    dh,BYTE PTR [ebx-0x16dc4a07]
  423613:	test   al,0x4
  423615:	ret    
  423616:	or     BYTE PTR fs:[edx+ebx*8+0x72],cl
  42361b:	arpl   WORD PTR [esi+0x4e],cx
  42361e:	es scas eax,DWORD PTR es:[edi]
  423620:	cmp    al,0x7e
  423622:	pop    esi
  423623:	push   eax
  423624:	push   ss
  423625:	or     BYTE PTR [eax-0x33ee4934],bl
  42362b:	ss push edx
  42362d:	push   ecx
  42362f:	and    DWORD PTR [ebp+0xec9bd11],edi
  423635:	daa    
  423636:	pop    ebp
  423637:	adc    ecx,DWORD PTR [eax]
  423639:	test   al,0x67
  42363b:	xlat   BYTE PTR ds:[ebx]
  42363c:	fwait
  42363d:	loopne 0x423658
  42363f:	retf   0x8013
  423642:	fisub  WORD PTR [eax-0x7728821d]
  423648:	sub    ebx,DWORD PTR ds:0xad98cdbf
  42364e:	push   ebp
  42364f:	imul   edi,DWORD PTR [esi+ebp*4-0x2e],0xf8af9509
  423657:	adc    ah,BYTE PTR [edx+0x5f]
  42365a:	sub    esp,DWORD PTR [ebx]
  42365c:	mov    edi,0x3cd516e0
  423661:	add    eax,0xda2e890b
  423666:	popf   
  423667:	retf   
  423668:	ret    0xb139
  42366b:	jg     0x423642
  42366d:	dec    esi
  42366e:	xchg   dl,dl
  423670:	sbb    ch,BYTE PTR [eax+0x6b99a527]
  423676:	pop    ss
  423677:	(bad)  
  423678:	xor    edi,ebx
  42367a:	adc    DWORD PTR [ebx-0x2d7761db],0x50
  423681:	pop    eax
  423682:	bound  ecx,QWORD PTR [esi]
  423684:	xor    eax,0xce0299
  423689:	cmp    bh,cl
  42368b:	xchg   DWORD PTR [ebx],esp
  42368d:	gs retf 0xd868
  423691:	daa    
  423692:	sbb    ebp,DWORD PTR [edi+edx*8+0x23755739]
  423699:	inc    esp
  42369a:	cmp    esi,DWORD PTR [ebx]
  42369c:	add    al,ch
  42369e:	mov    bh,0x5e
  4236a0:	test   BYTE PTR ds:0x6a880807,bl
  4236a6:	xchg   DWORD PTR [esi],eax
  4236a8:	outs   dx,DWORD PTR ds:[esi]
  4236a9:	and    ebx,ecx
  4236ab:	or     eax,0xc154777a
  4236b0:	imul   ebp,DWORD PTR [edi-0x54f11f7c],0x18
  4236b7:	pop    ebp
  4236b8:	aad    0xd5
  4236ba:	jno    0x4236be
  4236bc:	out    dx,eax
  4236bd:	cmp    edi,DWORD PTR [edi+0x5e]
  4236c0:	jns    0x42364b
  4236c2:	dec    eax
  4236c3:	loope  0x4236a6
  4236c5:	mov    esi,0x1327d780
  4236ca:	stos   DWORD PTR es:[edi],eax
  4236cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236cc:	cmp    al,0x3b
  4236ce:	popf   
  4236cf:	xor    eax,0x30d747d1
  4236d4:	nop
  4236d5:	add    eax,0x9c2734d5
  4236da:	iret   
  4236db:	call   0x47e:0xe6a2771e
  4236e2:	es (bad) 
  4236e4:	sbb    bl,BYTE PTR [eax+0x56]
  4236e7:	mov    al,ds:0x650c97f6
  4236ec:	test   eax,0x37b32502
  4236f1:	xlat   BYTE PTR ds:[ebx]
  4236f2:	adc    al,0x66
  4236f4:	mov    ebp,0x4001ef71
  4236f9:	xchg   DWORD PTR [edi-0x3656b4c],eax
  4236ff:	lds    ebp,FWORD PTR [esi+0x45d70018]
  423705:	jmp    0x42374c
  423707:	inc    eax
  423708:	inc    eax
  423709:	lds    edi,FWORD PTR [ebx]
  42370b:	pop    edx
  42370c:	add    al,0xf0
  42370e:	mov    ah,0x19
  423710:	mov    bh,0xce
  423712:	fmul   QWORD PTR [ecx+0x527bf0cf]
  423718:	mov    cl,0xa
  42371a:	or     BYTE PTR [edx],bl
  42371c:	jne    0x423756
  42371e:	sub    al,0xe8
  423720:	cwde   
  423721:	scas   al,BYTE PTR es:[edi]
  423722:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  423724:	call   0xe2629e06
  423729:	ins    DWORD PTR es:[edi],dx
  42372a:	cs int3 
  42372c:	and    ah,BYTE PTR [ecx-0x3c3a10e8]
  423732:	hlt    
  423733:	sbb    ah,BYTE PTR [edi-0x75aea547]
  423739:	dec    edi
  42373a:	cmp    eax,0x69380ec
  42373f:	jbe    0x4236d7
  423741:	xchg   DWORD PTR [ebp+0x6551367a],ebx
  423747:	fsubr  QWORD PTR [edi-0x36b407f4]
  42374d:	mov    ebp,0xde4a5f74
  423752:	xchg   ebp,eax
  423753:	(bad)  
  423754:	in     eax,0xd6
  423756:	mov    DWORD PTR [ecx-0x5],eax
  423759:	das    
  42375a:	(bad)  
  42375c:	dec    eax
  42375d:	push   edx
  42375e:	dec    edx
  42375f:	mov    al,ds:0x95ee823c
  423764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423765:	ja     0x423775
  423767:	push   eax
  423768:	cmp    al,0x9c
  42376a:	and    bh,cl
  42376c:	inc    esp
  42376d:	js     0x423750
  42376f:	inc    ebp
  423770:	add    DWORD PTR [eax-0x72c1a196],ebx
  423776:	ja     0x4237b2
  423778:	jae    0x423785
  42377a:	push   es
  42377b:	push   ecx
  42377c:	push   esp
  42377d:	jg     0x4237ae
  42377f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423780:	sub    cl,BYTE PTR [edi]
  423782:	dec    esi
  423783:	es mov edi,0x3ec7c3b1
  423789:	pusha  
  42378a:	mul    BYTE PTR [eax+0x7e2a24ef]
  423790:	ds push 0xebdab243
  423796:	and    DWORD PTR [edi+0x4f],edx
  423799:	pop    esp
  42379a:	dec    esi
  42379b:	and    bh,dh
  42379d:	mov    edi,0x3705cf79
  4237a2:	cmp    eax,0x50d762c2
  4237a7:	adc    bh,BYTE PTR ds:0xe1c65268
  4237ad:	sar    dl,1
  4237af:	dec    ecx
  4237b0:	push   ebx
  4237b1:	or     esp,edx
  4237b3:	xchg   ecx,eax
  4237b4:	shl    BYTE PTR gs:[eax+0x36],1
  4237b8:	mov    ebx,0xf226f337
  4237bd:	lahf   
  4237be:	mov    esp,DWORD PTR [edi-0x31739466]
  4237c4:	push   0x23
  4237c6:	mov    eax,0xde5b52
  4237cb:	int    0xa6
  4237cd:	in     al,0x1c
  4237cf:	daa    
  4237d0:	dec    ebp
  4237d1:	imul   ebp,DWORD PTR [ebp+0x673b664],0xffffffd1
  4237d8:	jne    0x42380a
  4237da:	outs   dx,BYTE PTR ds:[esi]
  4237db:	and    DWORD PTR [edi-0x51],edx
  4237de:	pop    eax
  4237df:	cdq    
  4237e0:	rcr    dl,cl
  4237e2:	or     dh,BYTE PTR [edx+0x26]
  4237e5:	mov    edi,0x7a7a1887
  4237ea:	arpl   WORD PTR [esi+edi*2],cx
  4237ed:	cld    
  4237ee:	scas   al,BYTE PTR es:[edi]
  4237ef:	cmc    
  4237f0:	cmp    edx,DWORD PTR [edi+0x491b9cdf]
  4237f6:	jmp    0x48b73cb1
  4237fb:	(bad)  
  4237fc:	clc    
  4237fd:	lods   al,BYTE PTR ds:[esi]
  4237fe:	pusha  
  4237ff:	mov    gs,esi
  423801:	loope  0x423836
  423803:	out    dx,al
  423804:	adc    eax,0xc86ab864
  423809:	into   
  42380a:	inc    edx
  42380b:	adc    dl,BYTE PTR [edx+0x5e1d3d4b]
  423811:	sbb    DWORD PTR [eax],edx
  423813:	call   0x21c89fa3
  423818:	rcl    DWORD PTR [ebx],0x6b
  42381b:	(bad)  
  42381c:	fisubr WORD PTR [edx]
  42381e:	add    al,0xf5
  423820:	mov    BYTE PTR [ecx],bl
  423822:	rol    BYTE PTR [ecx-0x4755cd67],cl
  423828:	xchg   ebx,eax
  423829:	xchg   ecx,eax
  42382a:	dec    edi
  42382b:	mov    ss,WORD PTR [ebp+0x54]
  42382e:	jge    0x4237f3
  423830:	xchg   esi,eax
  423831:	mov    dh,0x26
  423833:	icebp  
  423834:	fld    QWORD PTR es:[eax+ebp*2-0x6d]
  423839:	pop    esi
  42383a:	xchg   edi,eax
  42383b:	inc    esp
  42383c:	paddsw mm1,QWORD PTR [ecx+eiz*1+0xc]
  423841:	retf   
  423842:	test   BYTE PTR [ecx+0x4720c350],ch
  423848:	shl    dh,cl
  42384a:	sub    ebx,DWORD PTR [ecx+0x35]
  42384d:	dec    edi
  42384e:	pop    esi
  42384f:	xor    DWORD PTR [edi-0x4a0d5e14],0x5d63df58
  423859:	popf   
  42385a:	sub    esi,ecx
  42385c:	inc    edx
  42385d:	sub    BYTE PTR [ecx],dl
  42385f:	in     al,dx
  423860:	xor    al,0x8e
  423862:	sbb    DWORD PTR [esi],edi
  423864:	daa    
  423865:	fld    DWORD PTR [ebx-0x59d7a4bf]
  42386b:	lahf   
  42386c:	and    esi,eax
  42386e:	xchg   edx,eax
  42386f:	sbb    eax,ebp
  423871:	bound  esi,QWORD PTR ds:0xd8b74d94
  423877:	clc    
  423878:	hlt    
  423879:	sbb    edx,DWORD PTR [ebp+ebp*1+0x11b61eae]
  423880:	bound  esi,QWORD PTR [edx+ebx*1]
  423883:	mov    bl,0xd
  423885:	in     eax,dx
  423886:	add    eax,0xe9e54442
  42388b:	stos   DWORD PTR es:[edi],eax
  42388c:	inc    ebp
  42388d:	mov    esp,0xf477a852
  423892:	sub    BYTE PTR ds:0xb0c49f18,bl
  423898:	sub    eax,0x9947e868
  42389d:	cmp    bh,BYTE PTR ds:0xb50b6738
  4238a3:	inc    esi
  4238a4:	lds    ebp,FWORD PTR [edi]
  4238a6:	or     ebx,0x4220ab1c
  4238ac:	dec    ebx
  4238ad:	test   DWORD PTR [ecx],0x8d71e711
  4238b3:	fmul   QWORD PTR [edi]
  4238b5:	jns    0x4238eb
  4238b7:	and    ch,dh
  4238b9:	xchg   BYTE PTR [eax],cl
  4238bb:	dec    edx
  4238bc:	out    0x8,al
  4238be:	popf   
  4238bf:	push   ss
  4238c0:	and    DWORD PTR [edx*4+0x1e666dba],eax
  4238c7:	sbb    bl,BYTE PTR [edi+ebx*8-0x23d34c5b]
  4238ce:	push   ebp
  4238cf:	rol    DWORD PTR fs:[ecx+esi*8+0x57],1
  4238d4:	push   es
  4238d5:	retf   0xc620
  4238d8:	add    ch,al
  4238da:	sub    ah,dh
  4238dc:	test   esi,eax
  4238de:	cmp    al,0x58
  4238e0:	push   ebp
  4238e1:	sbb    ah,BYTE PTR [ebp+eiz*8+0x583af11b]
  4238e8:	jg     0x423919
  4238ea:	and    DWORD PTR [ecx+0x0],0x0
	...
  42392e:	add    BYTE PTR [edi+ecx*4+0x7ff767f6],bh
  423935:	mov    ebp,0x792d96df
  42393a:	mov    edx,0x1971a781
  42393f:	sub    al,0x29
  423941:	add    DWORD PTR [eax],eax
  423943:	and    eax,0x2a000007
  423948:	jb     0x423943
  42394a:	retf   0x7b19
  42394d:	dec    ebp
  42394e:	sbb    eax,0xcc34b8c7
  423953:	add    eax,ecx
  423955:	out    dx,eax
  423956:	xchg   esp,eax
  423957:	xchg   esp,eax
  423958:	cs push es
  42395a:	xor    ecx,DWORD PTR [edi+0x3486b63e]
  423960:	dec    edx
  423961:	or     BYTE PTR [eax],0x2a
  423964:	push   0xffffffac
  423966:	xor    DWORD PTR [ecx+ebp*1-0x336c1eab],ecx
  42396d:	in     eax,dx
  42396e:	aas    
  42396f:	jmp    0xf93a:0xcc8d70d
  423976:	inc    esi
  423977:	pop    ebp
  423978:	arpl   WORD PTR [edi+0x7c91ff73],dx
  42397e:	in     al,0x93
  423980:	pop    es
  423981:	push   es
  423982:	aad    0xd0
  423984:	add    al,0x2b
  423986:	aaa    
  423987:	adc    al,0xe0
  423989:	push   ds
  42398a:	jbe    0x42393b
  42398c:	cmp    eax,esp
  42398e:	fnstsw WORD PTR [edi+eax*4+0x4f833ada]
  423995:	mov    es,WORD PTR [ebp-0x3ffeaff0]
  42399b:	(bad)  [ecx-0x2ddea3cf]
  4239a1:	pop    es
  4239a2:	or     esi,DWORD PTR [eax]
  4239a4:	add    dl,BYTE PTR [eax+0xf]
  4239a7:	mov    al,ds:0xd969f4cf
  4239ac:	int3   
  4239ad:	scas   eax,DWORD PTR es:[edi]
  4239ae:	jo     0x4239d7
  4239b0:	add    ecx,esp
  4239b2:	fisubr WORD PTR [edi]
  4239b4:	mov    esp,0x29f29d1c
  4239b9:	and    eax,0xbe03dc10
  4239be:	xor    eax,ebx
  4239c0:	shl    DWORD PTR [ebp-0x28],1
  4239c3:	and    DWORD PTR [eax],edi
  4239c5:	out    dx,al
  4239c6:	and    dh,BYTE PTR [ebp+edi*2+0x21]
  4239ca:	pop    edx
  4239cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239cc:	sti    
  4239cd:	inc    edi
  4239ce:	out    dx,eax
  4239cf:	inc    edi
  4239d0:	adc    DWORD PTR [ebx-0x12],eax
  4239d3:	or     dl,BYTE PTR [edx-0x5ec2353a]
  4239d9:	sub    eax,0x19fe6bc7
  4239de:	jg     0x423a4d
  4239e0:	xor    ecx,DWORD PTR [ebp+0x331ccbc3]
  4239e6:	mov    dh,0x82
  4239e8:	jmp    0x4239ee
  4239ea:	inc    edi
  4239eb:	jmp    0x423a63
  4239ed:	sub    eax,0x6427d72
  4239f2:	lea    edx,[ebp+0x67]
  4239f5:	xor    BYTE PTR [esi+0x6b2b7d90],al
  4239fb:	jnp    0x4239d6
  4239fd:	push   cs
  4239fe:	inc    ebx
  4239ff:	xchg   esp,eax
  423a00:	jbe    0x4239c0
  423a02:	dec    edx
  423a03:	adc    BYTE PTR [edi-0x71],bl
  423a06:	mov    eax,?
  423a08:	leave  
  423a09:	stos   BYTE PTR es:[edi],al
  423a0a:	gs inc esp
  423a0c:	mov    eax,0xf7fe682
  423a12:	fisttp QWORD PTR ss:[edi]
  423a15:	mov    eax,0xf3d908bd
  423a1a:	and    cl,BYTE PTR ds:0xcc983d06
  423a20:	mov    al,0x6
  423a22:	rcl    BYTE PTR [edi],1
  423a24:	rep ins BYTE PTR es:[edi],dx
  423a26:	xchg   ebx,eax
  423a27:	and    BYTE PTR [eax-0xc],dh
  423a2a:	retf   
  423a2b:	repnz push ds
  423a2d:	shl    BYTE PTR [ebx-0xa],cl
  423a30:	xchg   DWORD PTR [ecx],edi
  423a32:	push   edx
  423a33:	pop    es
  423a34:	scas   eax,DWORD PTR es:[edi]
  423a35:	imul   ebp,DWORD PTR [ebp-0x7f],0xffffffd4
  423a39:	stos   DWORD PTR es:[edi],eax
  423a3a:	mov    ds:0xab579403,al
  423a3f:	sub    eax,0xe43c6e51
  423a44:	adc    dh,0xe7
  423a47:	pushf  
  423a48:	sbb    ecx,DWORD PTR [esp+ebp*1]
  423a4b:	in     eax,0x97
  423a4d:	test   BYTE PTR [edi+0x78d04e8c],cl
  423a53:	or     DWORD PTR [ebx],ecx
  423a55:	aad    0x8a
  423a57:	aam    0x22
  423a59:	jmp    0xa1ac:0xcc6a0f19
  423a60:	mov    bh,0xb8
  423a62:	push   ecx
  423a63:	repnz fidiv WORD PTR [eax-0x7e38f85b]
  423a6a:	ins    DWORD PTR es:[edi],dx
  423a6b:	inc    edx
  423a6c:	dec    ecx
  423a6d:	out    dx,eax
  423a6e:	jno    0x423a19
  423a70:	or     ah,BYTE PTR [eax+eax*8+0x10]
  423a74:	xchg   ebp,eax
  423a75:	push   0x31
  423a77:	add    dh,BYTE PTR [ecx-0x66]
  423a7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a7b:	in     al,0xb2
  423a7d:	sbb    ah,bl
  423a7f:	pop    DWORD PTR [esi+0x6a]
  423a82:	clc    
  423a83:	mov    BYTE PTR [esi-0x435ca345],ch
  423a89:	jne    0x423adb
  423a8b:	icebp  
  423a8c:	sti    
  423a8d:	daa    
  423a8e:	int3   
  423a8f:	ss popf 
  423a91:	add    ah,0xfe
  423a94:	jmp    0x6318653e
  423a99:	cmp    ebp,edi
  423a9b:	jbe    0x423a77
  423a9d:	rcr    BYTE PTR [edx-0x52],1
  423aa0:	mov    WORD PTR ds:0x23b3c3a0,cs
  423aa6:	mov    al,ds:0x40a4e9bd
  423aab:	inc    esp
  423aac:	test   al,bl
  423aae:	push   ss
  423aaf:	data16 ins BYTE PTR es:[edi],dx
  423ab1:	and    BYTE PTR [esi-0x3e],dl
  423ab4:	cmc    
  423ab5:	and    BYTE PTR ds:0xb4d4a2ae,ch
  423abb:	mov    BYTE PTR [ebp+edi*4+0x1c],cl
  423abf:	stos   BYTE PTR es:[edi],al
  423ac0:	push   edx
  423ac1:	sub    eax,0x4dcbb9bc
  423ac6:	hlt    
  423ac7:	adc    DWORD PTR [ebp+0x1e],eax
  423aca:	sbb    al,0xbf
  423acc:	inc    ebp
  423acd:	push   ecx
  423ace:	(bad)  
  423acf:	icebp  
  423ad0:	int3   
  423ad1:	icebp  
  423ad2:	sub    esp,DWORD PTR [eax+0x10]
  423ad5:	adc    bh,BYTE PTR [esi+eiz*2]
  423ad8:	outs   dx,BYTE PTR ds:[esi]
  423ad9:	pushf  
  423ada:	or     al,0x52
  423adc:	ins    DWORD PTR es:[edi],dx
  423add:	loop   0x423ab2
  423adf:	jno    0x423abf
  423ae1:	mov    ecx,0x43b651dc
  423ae6:	sub    DWORD PTR [ebx-0x5e233580],edx
  423aec:	pop    ebx
  423aed:	sbb    edi,ebx
  423aef:	rol    ecx,cl
  423af1:	addr16 cwde 
  423af3:	jecxz  0x423b0b
  423af5:	mov    BYTE PTR [esi-0x53dbf0ac],ch
  423afb:	and    DWORD PTR [ebx],edi
  423afd:	pop    ecx
  423afe:	sbb    ebx,DWORD PTR [edx+0x9350320]
  423b04:	fisub  WORD PTR [esi+0x6f]
  423b07:	mov    dl,0xad
  423b09:	jne    0x423ae1
  423b0b:	mov    fs,edx
  423b0d:	dec    edi
  423b0e:	je     0x423b8d
  423b10:	out    dx,eax
  423b11:	mov    ebx,0xc4fd0e96
  423b16:	outs   dx,BYTE PTR ds:[esi]
  423b18:	cs inc ebx
  423b1a:	(bad)  
  423b1b:	call   0x38f58b7
  423b20:	in     al,0x7b
  423b22:	dec    ecx
  423b23:	jno    0x423b66
  423b25:	test   eax,0x6e8c9986
  423b2a:	retf   
  423b2b:	hlt    
  423b2c:	imul   edi,DWORD PTR [edi+0x34],0x7d
  423b30:	pop    es
  423b31:	push   0x5c
  423b33:	(bad)  
  423b34:	mov    ebx,0x9ed2a4e4
  423b39:	lods   al,BYTE PTR ds:[esi]
  423b3a:	pop    es
  423b3b:	mov    ebx,0xa5ed2ee1
  423b40:	test   edx,esi
  423b42:	mov    dh,0x5b
  423b44:	or     ecx,DWORD PTR [edi+0x4c]
  423b47:	mov    ebp,0xc0d76eb9
  423b4c:	mov    eax,ds:0x6ac4bee3
  423b51:	out    dx,eax
  423b52:	pushf  
  423b53:	mov    al,0x1e
  423b55:	ror    edi,1
  423b57:	fld    QWORD PTR [ebp+0x766bb08c]
  423b5d:	jle    0x423b00
  423b5f:	jle    0x423bcb
  423b61:	icebp  
  423b62:	push   0x6d992251
  423b67:	aam    0xff
  423b69:	imul   esp,DWORD PTR [ecx-0x6a0f08e5],0xffffff91
  423b70:	push   0xffffffd7
  423b72:	or     edi,DWORD PTR es:[esi-0x7268936d]
  423b79:	jp     0x423b70
  423b7b:	leave  
  423b7c:	mov    esi,0x728b087f
  423b81:	sbb    BYTE PTR [esi+0x58],dl
  423b84:	push   esp
  423b85:	inc    di
  423b87:	mov    bh,0x4c
  423b89:	xchg   edi,eax
  423b8a:	push   ebx
  423b8b:	pop    ss
  423b8c:	or     al,0xeb
  423b8e:	stc    
  423b8f:	xchg   DWORD PTR [edx-0x55fa2e75],ecx
  423b95:	push   edi
  423b96:	fdiv   DWORD PTR [ecx-0x32]
  423b99:	js     0x423b3b
  423b9b:	lea    edx,[ecx+0x2cb3e9f]
  423ba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ba2:	mov    esi,0xc4c26f5a
  423ba7:	aam    0xd1
  423ba9:	inc    ebp
  423baa:	mov    ah,0x97
  423bac:	xor    bh,al
  423bae:	jmp    0x423bdb
  423bb0:	mov    ds,ebp
  423bb2:	mov    dl,0x74
  423bb4:	xor    al,BYTE PTR [edx]
  423bb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bb7:	jnp    0x423bf1
  423bb9:	jg     0x423bdf
  423bbb:	sbb    esi,DWORD PTR [eax]
  423bbd:	pop    eax
  423bbe:	mov    cl,dh
  423bc0:	shl    ebx,1
  423bc2:	imul   DWORD PTR [edx-0x4882575]
  423bc8:	cmp    BYTE PTR [ecx+0x411e9059],dh
  423bce:	jne    0x423c25
  423bd0:	inc    ebx
  423bd1:	div    BYTE PTR [esi-0x7c]
  423bd4:	add    eax,DWORD PTR [ebp-0x5c]
  423bd7:	mov    esp,0x405c2a29
  423bdc:	(bad)
  423be1:	mov    ds:0x56079656,al
  423be6:	(bad)  
  423be7:	out    dx,al
  423be8:	jge    0x423bd1
  423bea:	(bad)  
  423beb:	mov    WORD PTR [ebx-0x54],?
  423bee:	test   eax,0x34ebbdb1
  423bf3:	sub    BYTE PTR [eax+0x25],ah
  423bf6:	addr16 pop edx
  423bf8:	(bad)  
  423bf9:	pop    ds
  423bfa:	or     al,0x9e
  423bfc:	popa   
  423bfd:	add    BYTE PTR ds:0x8e79ca8b,dh
  423c03:	(bad)  
  423c04:	sbb    DWORD PTR [eax-0x57d893ba],edi
  423c0a:	or     eax,0xc37f7293
  423c0f:	das    
  423c10:	ror    edx,0x6c
  423c13:	push   edi
  423c14:	stos   BYTE PTR es:[edi],al
  423c15:	inc    edi
  423c16:	aaa    
  423c17:	mov    dl,0xf5
  423c19:	dec    ebp
  423c1a:	outs   dx,DWORD PTR ds:[esi]
  423c1b:	dec    edi
  423c1c:	jmp    0x7510fdf7
  423c21:	mov    BYTE PTR [ebp-0x67152ee0],bh
  423c27:	js     0x423c49
  423c29:	mov    eax,edi
  423c2b:	mov    ebp,0x98fcffaa
  423c30:	push   edi
  423c31:	call   0x3a0f:0x63ea7481
  423c38:	aas    
  423c39:	push   edi
  423c3a:	stc    
  423c3b:	sbb    DWORD PTR [edx],ecx
  423c3d:	inc    eax
  423c3e:	mov    ds:0x2589e97d,eax
  423c43:	call   0x891d:0x33f7320f
  423c4a:	imul   edi,DWORD PTR [edx],0x79c129fa
  423c50:	pop    ebx
  423c51:	fild   QWORD PTR [edi]
  423c53:	xlat   BYTE PTR ds:[ebx]
  423c54:	ret    0x600b
  423c57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c58:	fisttp QWORD PTR [ecx+0x3d76d4f1]
  423c5e:	add    DWORD PTR [eiz*8-0x3a04034d],esp
  423c65:	push   esp
  423c66:	test   al,0xf2
  423c68:	(bad)  
  423c69:	jae    0x423cb4
  423c6b:	retf   
  423c6c:	les    ebx,FWORD PTR [ecx]
  423c6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c6f:	xor    DWORD PTR [ecx+edi*2+0x4621141b],ebp
  423c76:	inc    ebp
  423c77:	lods   al,BYTE PTR ds:[esi]
  423c78:	add    BYTE PTR [ecx+eax*2+0x5b],dl
  423c7c:	scas   eax,DWORD PTR es:[edi]
  423c7d:	cmp    ah,bh
  423c7f:	pop    ebp
  423c80:	push   0xb
  423c82:	sub    eax,0x8a452ed9
  423c87:	retf   
  423c88:	call   FWORD PTR [eax-0x71628278]
  423c8e:	xor    DWORD PTR [ebx-0x2],esp
  423c91:	xor    eax,0xfca319dc
  423c96:	fnstsw WORD PTR [edi]
  423c98:	xchg   edx,eax
  423c99:	jb     0x423d02
  423c9b:	adc    al,0x54
  423c9d:	dec    ecx
  423c9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c9f:	aaa    
  423ca0:	shl    BYTE PTR [eax],cl
  423ca2:	mov    DWORD PTR [esi-0x7a],esp
  423ca5:	or     ch,BYTE PTR [edi]
  423ca7:	jne    0x423c5f
  423ca9:	(bad)  
  423caa:	sahf   
  423cab:	imul   BYTE PTR [edi]
  423cad:	mov    ebx,0x4a613085
  423cb2:	xchg   DWORD PTR ds:[di],esp
  423cb6:	enter  0xa8cb,0xa1
  423cba:	dec    ebx
  423cbb:	add    ebp,esi
  423cbd:	jns    0x423ca6
  423cbf:	bound  ebp,QWORD PTR [ecx]
  423cc1:	out    0x18,eax
  423cc3:	call   DWORD PTR [ecx-0x23a411b5]
  423cc9:	adc    BYTE PTR [ecx-0x59],dh
  423ccc:	jo     0x423cc1
  423cce:	xor    bh,bl
  423cd0:	or     eax,0x3d597cf5
  423cd5:	mov    al,ds:0x2ec641ed
  423cda:	cmc    
  423cdb:	xchg   ebp,eax
  423cdc:	js     0x423cc8
  423cde:	mov    BYTE PTR [edx+0x3b],bl
  423ce1:	ds pop es
  423ce3:	sub    al,BYTE PTR [ebx+0x62fdec84]
  423ce9:	aam    0x80
  423ceb:	out    dx,al
  423cec:	xchg   DWORD PTR [ecx],esi
  423cee:	jl     0x423c9c
  423cf0:	xchg   esp,eax
  423cf1:	jo     0x423cae
  423cf3:	pop    ebx
  423cf4:	ins    BYTE PTR es:[edi],dx
  423cf5:	imul   edx,DWORD PTR [ecx*2+0x4ca60d73],0xbadfed8c
  423d00:	add    DWORD PTR [ebx-0x78],ebp
  423d03:	inc    ebp
  423d04:	cli    
  423d05:	mov    ds:0x66551bcb,al
  423d0a:	shr    DWORD PTR [esi-0x25daf8a4],1
  423d10:	mov    esi,DWORD PTR [eax-0x58]
  423d13:	push   esp
  423d14:	test   esp,esi
  423d16:	nop
  423d17:	stc    
  423d18:	enter  0x3a35,0x80
  423d1c:	mov    DWORD PTR [esi+0x8ced0fc],0x858a18de
  423d26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d27:	cs ret 0x8d2b
  423d2b:	jge    0x423cca
  423d2d:	sub    al,0x1b
  423d2f:	add    eax,0x22a24be
  423d34:	jg     0x423d63
  423d36:	jne    0x423d08
  423d38:	iret   
  423d39:	pop    edi
  423d3a:	ret    0x9895
  423d3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d3e:	pop    ebp
  423d3f:	push   es
  423d40:	clc    
  423d41:	and    BYTE PTR [ecx+0xa],ch
  423d44:	into   
  423d45:	mov    ebx,0x1592790a
  423d4a:	or     cl,bl
  423d4c:	fist   WORD PTR [ecx+0x41]
  423d4f:	inc    ebx
  423d50:	or     DWORD PTR [edi],esp
  423d52:	cwde   
  423d53:	inc    edx
  423d54:	mov    bh,0xb2
  423d56:	add    eax,0x1f056c61
  423d5b:	arpl   WORD PTR [edx+eax*1],sp
  423d5e:	xchg   edx,eax
  423d5f:	das    
  423d60:	leave  
  423d61:	or     eax,0xd2e16df9
  423d66:	inc    ebp
  423d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d68:	push   es
  423d69:	popf   
  423d6a:	test   DWORD PTR ds:[esi-0x4a],edx
  423d6e:	(bad)  
  423d6f:	jl     0x423db5
  423d71:	shl    ebx,1
  423d73:	fxam   
  423d75:	in     al,0x90
  423d77:	ss push cs
  423d79:	test   BYTE PTR [edi-0x5a9b1dcc],cl
  423d7f:	dec    edi
  423d80:	daa    
  423d81:	cmp    al,bh
  423d83:	jmp    0xe96384c4
  423d88:	lahf   
  423d89:	xchg   esp,eax
  423d8a:	pop    ebx
  423d8b:	out    dx,al
  423d8c:	jl     0x423de5
  423d8e:	jbe    0x423db7
  423d90:	pusha  
  423d91:	pop    edi
  423d92:	in     eax,dx
  423d93:	into   
  423d94:	stos   BYTE PTR es:[edi],al
  423d95:	adc    ebx,edi
  423d97:	sub    DWORD PTR [edi],esp
  423d99:	mov    edx,0x4611f57d
  423d9e:	xchg   ecx,eax
  423d9f:	sub    dh,BYTE PTR [edi+0x38d4a958]
  423da5:	mov    DWORD PTR [ecx],eax
  423da7:	push   ebx
  423da8:	adc    ebp,edi
  423daa:	cld    
  423dab:	iret   
  423dac:	and    edi,eax
  423dae:	inc    edx
  423daf:	jg     0x423d95
  423db1:	dec    ebp
  423db2:	dec    eax
  423db3:	out    dx,eax
  423db4:	test   eax,0x4a6896b9
  423db9:	xlat   BYTE PTR ds:[ebx]
  423dba:	lds    esi,FWORD PTR [ecx+0x6b]
  423dbd:	pusha  
  423dbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423dbf:	repz jnp 0x423d6b
  423dc2:	dec    ebp
  423dc3:	sbb    al,0xe8
  423dc5:	dec    ebp
  423dc6:	mov    esp,0x2bf0c467
  423dcb:	fnsave [eax]
  423dcd:	ror    DWORD PTR [ebp-0x7e],0x6b
  423dd1:	data16 into 
  423dd3:	retf   
  423dd4:	scas   al,BYTE PTR es:[edi]
  423dd5:	pop    edi
  423dd6:	outs   dx,DWORD PTR ds:[esi]
  423dd7:	mov    bh,0xae
  423dd9:	sub    al,0x60
  423ddb:	dec    esi
  423ddc:	xchg   esp,eax
  423ddd:	and    DWORD PTR [eax+0x17],ecx
  423de0:	and    eax,0xdb0f7f6a
  423de5:	or     DWORD PTR [edi+0x5f],0xfffffff2
  423de9:	or     BYTE PTR [eax-0x79],cl
  423dec:	xchg   DWORD PTR [ecx],esp
  423dee:	cs jp  0x423de1
  423df1:	jmp    0x423e28
  423df3:	mov    ds:0xeb5fede0,eax
  423df8:	adc    al,0x6e
  423dfa:	fs (bad) 
  423dfc:	xchg   esi,eax
  423dfd:	cs into 
  423dff:	mov    dh,0xe1
  423e01:	xchg   edx,eax
  423e02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e03:	dec    edi
  423e04:	(bad)  
  423e05:	rol    BYTE PTR ds:0x1745a80a,cl
  423e0b:	int3   
  423e0c:	xchg   edx,eax
  423e0d:	cmp    ecx,DWORD PTR [esi+0x65]
  423e10:	pop    ecx
  423e11:	jne    0x423e43
  423e13:	aaa    
  423e14:	push   edx
  423e15:	mov    bh,0xb8
  423e17:	sar    BYTE PTR [esi+esi*4],0xbd
  423e1b:	sahf   
  423e1c:	ficomp DWORD PTR [edi+esi*8]
  423e1f:	arpl   WORD PTR [esi-0x1e],di
  423e22:	enter  0xa465,0x2f
  423e26:	mov    ah,0x7a
  423e28:	shr    BYTE PTR [ebx+0x35d12b5b],cl
  423e2e:	cmp    eax,0xd3897bd0
  423e33:	push   esp
  423e34:	icebp  
  423e35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e36:	int    0xcb
  423e38:	stos   DWORD PTR es:[edi],eax
  423e39:	jo     0x423e4a
  423e3b:	in     al,0xb9
  423e3d:	retf   
  423e3e:	xor    ch,bh
  423e40:	and    BYTE PTR [esp+eax*8+0x789c7f3a],bh
  423e47:	fimul  WORD PTR [esp+ebp*8]
  423e4a:	jp     0x423ebd
  423e4c:	loop   0x423e85
  423e4e:	adc    bh,al
  423e50:	push   edi
  423e51:	push   ebp
  423e52:	jle    0x423dfb
  423e54:	and    DWORD PTR fs:[ebp+esi*1+0x2525079b],eax
  423e5c:	pop    esp
  423e5d:	nop
  423e5e:	mov    ebx,0x600cd4a
  423e63:	mov    ds:0xfa3b5a63,eax
  423e68:	stos   DWORD PTR es:[edi],eax
  423e69:	and    al,0x51
  423e6b:	xor    dh,BYTE PTR [ebp-0x38]
  423e6e:	in     eax,dx
  423e6f:	shl    ebx,0x1b
  423e72:	inc    ecx
  423e73:	mov    esp,0x373aa8d9
  423e78:	sbb    DWORD PTR fs:[edx+0xebd908d],edx
  423e7f:	cmp    al,0x8d
  423e81:	inc    ecx
  423e82:	inc    esp
  423e83:	dec    esi
  423e84:	xchg   esp,eax
  423e85:	lods   al,BYTE PTR ds:[esi]
  423e86:	call   0xb923c6e0
  423e8b:	mov    dl,0x3b
  423e8d:	aam    0x4e
  423e8f:	aaa    
  423e90:	xlat   BYTE PTR ds:[ebx]
  423e91:	std    
  423e92:	mov    dh,0xd2
  423e94:	jae    0x423e39
  423e96:	mov    al,ds:0x3b484ebe
  423e9b:	frstor [esi-0x5e7f2877]
  423ea1:	add    al,0x45
  423ea3:	inc    esi
  423ea4:	(bad)  
  423ea5:	cld    
  423ea6:	push   0x6a52b35f
  423eab:	(bad)  
  423eac:	hlt    
  423ead:	jnp    0x423e7a
  423eaf:	sub    BYTE PTR [ebp-0x58ef0595],dl
  423eb5:	sbb    eax,0xfe2a52d8
  423eba:	hlt    
  423ebb:	test   BYTE PTR [esi+eax*1-0x4909a989],dl
  423ec2:	mov    ch,0x2c
  423ec4:	leave  
  423ec5:	js     0x423ea6
  423ec7:	sbb    DWORD PTR [eax-0xb],0xb6fe132e
  423ece:	or     al,0x20
  423ed0:	repnz dec edi
  423ed2:	addr16 int 0xf5
  423ed5:	xor    eax,0x73a7b9aa
  423eda:	inc    edx
  423edb:	ds mov bh,0x93
  423ede:	or     eax,0x1197ccae
  423ee3:	xor    dl,BYTE PTR [edi+edx*8+0x5508c680]
  423eea:	repz push eax
  423eec:	icebp  
  423eed:	call   0xba04715b
  423ef2:	cdq    
  423ef3:	(bad)  
  423ef4:	jne    0x423ee6
  423ef6:	mov    dl,0x2c
  423ef8:	cdq    
  423ef9:	mov    dh,BYTE PTR [ebx+0x32]
  423efc:	inc    eax
  423efd:	mov    ds:0xaf46d7dc,eax
  423f02:	or     BYTE PTR [edi+0x6bf87e12],bl
  423f08:	mov    ah,0x0
  423f0a:	mov    ebp,0x3711896e
  423f0f:	es push cs
  423f11:	ficomp DWORD PTR [edi-0x23c98b6a]
  423f17:	in     eax,dx
  423f18:	jb     0x423eee
  423f1a:	adc    ebp,ecx
  423f1c:	dec    ebx
  423f1d:	test   DWORD PTR [ebx+ecx*1+0x50d02a45],0x94f67b0a
  423f28:	pop    eax
  423f29:	and    al,0x43
  423f2b:	dec    ecx
  423f2c:	arpl   di,si
  423f2e:	iret   
  423f2f:	(bad)  
  423f30:	ja     0x423f80
  423f32:	jns    0x423ee1
  423f34:	in     al,dx
  423f35:	and    DWORD PTR [eax+0x1a],ebx
  423f38:	mov    BYTE PTR [edi],0x4a
  423f3b:	sub    DWORD PTR [ebp+ecx*4+0x59],eax
  423f3f:	imul   edx,DWORD PTR [eax-0x670c3f25],0x3cd27982
  423f49:	nop
  423f4a:	popf   
  423f4b:	call   0x29f1c7a2
  423f50:	test   BYTE PTR [edx],al
  423f52:	adc    eax,0x458548f5
  423f57:	cli    
  423f58:	xchg   esi,eax
  423f59:	cmp    ch,bh
  423f5b:	sub    bl,dh
  423f5d:	pushf  
  423f5e:	xchg   edx,eax
  423f5f:	les    esi,FWORD PTR ds:0x1f896773
  423f65:	or     DWORD PTR [ebx+0x54],edx
  423f68:	jle    0x423f1b
  423f6a:	pushf  
  423f6b:	adc    esp,edx
  423f6d:	std    
  423f6e:	and    BYTE PTR ss:[ecx],0xd8
  423f72:	adc    BYTE PTR ds:[edx-0x47438f95],0x92
  423f7a:	lahf   
  423f7b:	inc    ebp
  423f7c:	xchg   ecx,eax
  423f7d:	mov    al,ds:0x7ee922c4
  423f82:	je     0x423f7e
  423f84:	lahf   
  423f85:	std    
  423f86:	sub    BYTE PTR [ecx-0x63e36051],0x1d
  423f8d:	mov    ah,0x9c
  423f8f:	or     BYTE PTR [esi],al
  423f91:	mov    ah,0xe0
  423f93:	dec    ebp
  423f94:	push   ss
  423f95:	in     eax,dx
  423f96:	scas   al,BYTE PTR es:[edi]
  423f97:	xchg   ebp,eax
  423f98:	stc    
  423f99:	arpl   bp,ax
  423f9b:	cmp    ch,BYTE PTR [ebx]
  423f9d:	dec    ebx
  423f9e:	je     0x423fde
  423fa0:	jno    0x423f95
  423fa2:	pusha  
  423fa3:	outs   dx,DWORD PTR ds:[esi]
  423fa4:	repz and BYTE PTR [edx],cl
  423fa7:	dec    ecx
  423fa8:	fiadd  DWORD PTR [ebp-0x19]
  423fab:	test   ebp,esp
  423fad:	mov    dl,0x11
  423faf:	mov    esi,0xcc3d8cb9
  423fb4:	in     eax,0x5b
  423fb6:	jne    0x423ffd
  423fb8:	mov    ds:0x4474368b,eax
  423fbd:	ds pushf 
  423fbf:	and    DWORD PTR [edi-0x47bb6f24],esi
  423fc5:	mov    dl,0xef
  423fc7:	ds clc 
  423fc9:	or     BYTE PTR [edx],bh
  423fcb:	xchg   DWORD PTR [edi],edi
  423fcd:	dec    ecx
  423fce:	jmp    0x424048
  423fd0:	mov    cl,0x71
  423fd2:	mov    bh,0x67
  423fd4:	sub    BYTE PTR [edi+0x5d],ah
  423fd7:	xor    eax,0x65eb87b6
  423fdc:	into   
  423fdd:	aaa    
  423fde:	rcr    cl,cl
  423fe0:	(bad)  ds:[edi+0x6cdc5255]
  423fe7:	popa   
  423fe8:	or     al,0x23
  423fea:	adc    BYTE PTR [edi],dh
  423fec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fed:	test   al,ah
  423fef:	je     0x42404c
  423ff1:	pop    esp
  423ff2:	out    dx,eax
  423ff3:	push   0xffffffc2
  423ff5:	enter  0xfbbd,0x6a
  423ff9:	outs   dx,BYTE PTR ds:[esi]
  423ffa:	sub    dl,bh
  423ffc:	xchg   esi,eax
  423ffd:	enter  0x124c,0x47
  424001:	sahf   
  424002:	add    eax,0xb1d93a17
  424007:	sbb    eax,0x553d28b4
  42400c:	jae    0x423fca
  42400e:	aas    
  42400f:	push   edi
  424010:	sbb    BYTE PTR [edx-0x41],0xb
  424014:	push   cs
  424015:	pop    ss
  424016:	or     BYTE PTR [ecx],bh
  424018:	or     al,0xb6
  42401a:	into   
  42401b:	cs aaa 
  42401d:	test   dh,al
  42401f:	icebp  
  424020:	push   0x7d0eba2e
  424025:	aam    0x8f
  424027:	ret    0x3a7e
  42402a:	jecxz  0x4240a7
  42402c:	cmp    al,BYTE PTR [esp+ebx*4]
  42402f:	mov    al,0x90
  424031:	jecxz  0x423fcb
  424033:	cmp    al,0x5
  424035:	and    DWORD PTR [edi],eax
  424037:	push   eax
  424038:	mov    ebp,0x7f7fc37c
  42403d:	sub    ch,BYTE PTR [ebx-0x61]
  424040:	mov    dh,dh
  424042:	inc    ebp
  424043:	or     dl,BYTE PTR [ebp-0x2ed96a2b]
  424049:	xchg   esi,eax
  42404a:	loop   0x424085
  42404c:	inc    esi
  42404d:	mov    esp,0xea9f3586
  424052:	mov    BYTE PTR [edx],0x7a
  424055:	dec    esi
  424056:	sti    
  424057:	icebp  
  424058:	repnz xor cl,dl
  42405b:	cmp    BYTE PTR [edx-0x4599873e],dh
  424061:	jnp    0x423fe5
  424063:	cmp    al,0x90
  424065:	aas    
  424066:	mov    bh,0x93
  424068:	pop    esp
  424069:	int    0xce
  42406b:	cmp    DWORD PTR [eax],eax
	...
  4240ad:	add    BYTE PTR [eax],al
  4240af:	push   edi
  4240b0:	lea    esp,[ecx+0x7e]
  4240b3:	sti    
  4240b4:	(bad)  
  4240b5:	pop    edi
  4240b6:	lods   eax,DWORD PTR ds:[esi]
  4240b7:	into   
  4240b8:	fisttp DWORD PTR [edx+0x58]
  4240bb:	mov    edx,edx
  4240bd:	mov    ebx,0x130517f
  4240c2:	add    BYTE PTR ds:0xde000007,ah
  4240c8:	xchg   DWORD PTR [ebp-0xf],ecx
  4240cb:	mov    DWORD PTR [esi+ebx*1-0x3c],esi
  4240cf:	daa    
  4240d0:	popa   
  4240d1:	cmp    DWORD PTR [edx-0x22],ebp
  4240d4:	mov    ah,BYTE PTR [edi-0x25]
  4240d7:	xor    edi,ebx
  4240d9:	mov    ebp,0x24a4b401
  4240de:	mov    dh,0x24
  4240e0:	jo     0x42408b
  4240e2:	int    0x62
  4240e4:	scas   al,BYTE PTR es:[edi]
  4240e5:	in     al,0xa3
  4240e7:	repnz mul DWORD PTR [eax-0x236364d]
  4240ee:	jl     0x42409b
  4240f0:	ds dec esp
  4240f2:	sub    al,0x87
  4240f4:	call   0xb626:0x1fd9c8dd
  4240fb:	mov    esi,0xd3270629
  424100:	loop   0x4240ef
  424102:	aad    0xab
  424104:	iret   
  424105:	cmp    al,0x72
  424107:	cld    
  424108:	jns    0x42412f
  42410a:	push   ebx
  42410b:	in     eax,0x2a
  42410d:	pop    esp
  42410e:	mov    al,ds:0xb919b75d
  424113:	rol    BYTE PTR [edi-0x3f8fc3d9],cl
  424119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42411a:	and    edx,DWORD PTR [eax-0x50af1241]
  424120:	cmp    bh,BYTE PTR [edi+0x2d]
  424123:	mov    ch,0xdb
  424125:	popf   
  424126:	add    eax,0x5f8e65c3
  42412b:	(bad)  
  42412d:	pop    esp
  42412e:	mov    al,BYTE PTR [edi]
  424130:	sahf   
  424131:	in     eax,0x19
  424133:	icebp  
  424134:	addr16 inc ebx
  424136:	mov    esp,0x211be7eb
  42413b:	dec    eax
  42413c:	or     al,0x6
  42413e:	(bad)  
  42413f:	icebp  
  424140:	and    eax,0x8aba5eff
  424145:	mov    ds:0x8113a2cb,eax
  42414a:	cmp    edx,DWORD PTR [edi-0x19e67754]
  424150:	push   ss
  424151:	imul   eax,DWORD PTR [ecx+0x410a5877],0x69
  424158:	iret   
  424159:	and    eax,0x608c1314
  42415e:	xchg   esi,eax
  42415f:	and    al,0xb1
  424161:	dec    edx
  424162:	cmp    eax,0x8f4e5d4e
  424167:	push   esp
  424168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424169:	push   ds
  42416a:	test   esp,0xe939e5fa
  424170:	out    dx,eax
  424171:	cmp    edx,edx
  424173:	xor    al,0xa5
  424175:	sub    BYTE PTR [ebx+ebx*1-0x67],cl
  424179:	jp     0x4241a6
  42417b:	xlat   BYTE PTR ds:[ebx]
  42417c:	test   eax,0x7b75c42
  424181:	or     eax,esi
  424183:	jl     0x424187
  424185:	lock push 0xcea1f1b2
  42418b:	mov    ah,BYTE PTR [edi-0x3]
  42418e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42418f:	dec    eax
  424190:	xchg   ebx,eax
  424191:	sbb    DWORD PTR [ecx-0x67],0xd6d77d0c
  424198:	ins    DWORD PTR es:[edi],dx
  424199:	pop    ss
  42419a:	dec    edi
  42419b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42419c:	xchg   ebx,esp
  42419e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42419f:	stc    
  4241a0:	mov    al,0xe2
  4241a2:	xor    DWORD PTR [ebx],edx
  4241a4:	mul    bh
  4241a6:	mov    eax,DWORD PTR [eax+0x3ec194a5]
  4241ac:	loopne 0x4241f1
  4241ae:	clc    
  4241af:	fmul   st(7),st
  4241b1:	pop    esi
  4241b2:	add    BYTE PTR [edx+esi*2],0xc1
  4241b6:	pop    es
  4241b7:	ja     0x4241fd
  4241b9:	and    BYTE PTR [ebx-0x345211b5],bh
  4241bf:	iret   
  4241c0:	pop    ecx
  4241c1:	cs mov dl,0x40
  4241c4:	call   0x482b5ea0
  4241c9:	mul    dl
  4241cb:	rol    DWORD PTR [edi+0x77],0xed
  4241cf:	inc    ecx
  4241d0:	jno    0x424182
  4241d2:	leave  
  4241d3:	(bad)  
  4241d4:	xchg   ebx,eax
  4241d5:	je     0x4241f5
  4241d7:	mov    al,ds:0x602ac2a1
  4241dc:	outs   dx,DWORD PTR ds:[esi]
  4241dd:	popf   
  4241de:	jo     0x42418c
  4241e0:	inc    eax
  4241e1:	(bad)  
  4241e2:	pop    ss
  4241e3:	(bad)  
  4241e4:	push   0xd47283a4
  4241e9:	xchg   esp,eax
  4241ea:	fisub  WORD PTR [eax+0x1a85e819]
  4241f0:	daa    
  4241f1:	popa   
  4241f2:	or     ebp,eax
  4241f4:	outs   dx,BYTE PTR ds:[esi]
  4241f5:	ss dec ecx
  4241f7:	jne    0x42417e
  4241f9:	adc    edi,DWORD PTR [esi]
  4241fb:	loopne 0x424195
  4241fd:	xor    eax,0x15506bb2
  424202:	mov    bh,0xe2
  424204:	in     eax,dx
  424205:	in     al,dx
  424206:	xor    eax,0x606b63a4
  42420b:	mov    esi,fs
  42420d:	stos   BYTE PTR es:[edi],al
  42420e:	out    0x84,al
  424210:	lock inc eax
  424212:	test   eax,0x1d2325d0
  424217:	aad    0xdb
  424219:	out    dx,eax
  42421a:	pushf  
  42421b:	jno    0x424259
  42421d:	dec    eax
  42421e:	xchg   esi,eax
  42421f:	out    dx,eax
  424220:	inc    esi
  424221:	pop    esp
  424222:	and    esi,DWORD PTR [edi-0x5ef9bc96]
  424228:	aaa    
  424229:	mov    bh,0x4b
  42422b:	(bad)  
  42422d:	stc    
  42422e:	ins    BYTE PTR es:[edi],dx
  42422f:	push   ds
  424230:	int3   
  424231:	in     eax,0x39
  424233:	mov    al,0xd5
  424235:	jb     0x42422e
  424237:	daa    
  424238:	imul   ebp,DWORD PTR [ecx-0x35],0xfffffffc
  42423c:	retf   0x8ecf
  42423f:	sbb    ch,BYTE PTR [eax-0x23]
  424242:	sub    al,0x2
  424244:	mov    al,0xfd
  424246:	sbb    BYTE PTR [eax],dh
  424248:	pop    esi
  424249:	stc    
  42424a:	dec    esi
  42424b:	ds test eax,0xd6340490
  424251:	inc    edx
  424252:	cmp    BYTE PTR [edi+0x3e305ed0],0x85
  424259:	sbb    dl,BYTE PTR [ecx+0x5a]
  42425c:	xor    eax,0x3969fcec
  424261:	in     eax,dx
  424262:	scas   eax,DWORD PTR es:[edi]
  424263:	mov    ah,BYTE PTR ds:0x16946fad
  424269:	dec    eax
  42426a:	ret    
  42426b:	scas   eax,DWORD PTR es:[edi]
  42426c:	out    0xa1,eax
  42426e:	sbb    eax,0xd283fa87
  424273:	jle    0x424200
  424275:	retf   
  424276:	add    eax,0xac4360af
  42427b:	mov    ds,WORD PTR [eax+0xc3ba980]
  424281:	(bad)  
  424282:	fsub   QWORD PTR [esi]
  424284:	add    ch,cl
  424286:	stc    
  424287:	shr    DWORD PTR [esi-0x53],cl
  42428a:	sub    al,BYTE PTR [esi-0x17065608]
  424290:	sbb    eax,0xdadcccc4
  424295:	ins    BYTE PTR es:[edi],dx
  424296:	pop    edi
  424297:	mov    ah,0x6b
  424299:	call   0x7e9b474e
  42429e:	ret    0x36c6
  4242a1:	sub    BYTE PTR ds:0x1d84caaa,ch
  4242a7:	jle    0x4242c2
  4242a9:	inc    esp
  4242aa:	mov    ebx,0x340116cc
  4242af:	div    BYTE PTR [edi-0x34]
  4242b2:	retf   0xdbef
  4242b5:	xor    ah,bh
  4242b7:	mov    ebx,edx
  4242b9:	shr    esp,1
  4242bb:	retf   0x9d8b
  4242be:	sti    
  4242bf:	xchg   edx,eax
  4242c0:	push   0xffffffc3
  4242c2:	mov    dl,0x13
  4242c4:	jb     0x42426d
  4242c6:	jmp    DWORD PTR [ebp+0xef548]
  4242cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242cd:	lea    eax,[ebx+ebp*2+0x1108f8c4]
  4242d4:	adc    DWORD PTR [ebx],eax
  4242d6:	pop    ebp
  4242d7:	push   ebp
  4242d8:	or     DWORD PTR [ebx],esp
  4242da:	xchg   esp,eax
  4242db:	sbb    eax,0xe5ce7cea
  4242e0:	adc    ecx,ecx
  4242e2:	push   edx
  4242e3:	mov    BYTE PTR [ebx],al
  4242e5:	push   eax
  4242e6:	cld    
  4242e7:	mov    bh,0xe5
  4242e9:	stos   DWORD PTR es:[edi],eax
  4242ea:	inc    DWORD PTR [eax+0x45]
  4242ed:	fwait
  4242ee:	mov    eax,ds:0xe5919ac2
  4242f4:	cmp    DWORD PTR [edx-0x43],ebx
  4242f7:	adc    al,0x10
  4242f9:	inc    esp
  4242fa:	fst    DWORD PTR [eax-0x4f]
  4242fd:	in     al,dx
  4242fe:	xlat   BYTE PTR ds:[ebx]
  4242ff:	mov    ebp,0xeb974d3e
  424304:	xchg   esi,eax
  424305:	mov    esi,0x63787655
  42430a:	out    0xfe,eax
  42430c:	xor    al,bh
  42430e:	in     al,0xc6
  424310:	ret    0xb9e6
  424313:	sbb    DWORD PTR ds:0x1c8760d1,edx
  424319:	mov    BYTE PTR [ebp+0x3a],dh
  42431c:	aas    
  42431d:	and    ch,BYTE PTR [edi-0x47]
  424320:	mov    DWORD PTR [edx-0x22],0xffac7baf
  424327:	fild   WORD PTR [esi+0x12]
  42432a:	fldl2e 
  42432c:	xor    BYTE PTR [ecx-0x785f6f06],bh
  424332:	sahf   
  424333:	cmp    ecx,ecx
  424335:	add    eax,0x32973d55
  42433a:	xor    al,al
  42433c:	xlat   BYTE PTR ds:[ebx]
  42433d:	mov    ds:0xbc86cd58,eax
  424342:	ss push esp
  424344:	xor    BYTE PTR [ebx+0x42ce6d44],ah
  42434a:	imul   ebp,DWORD PTR [ebp+0x1fe27250],0x612c617f
  424354:	arpl   WORD PTR [ecx+0x7],si
  424357:	sahf   
  424358:	pop    eax
  424359:	(bad)  
  42435a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42435b:	fisubr WORD PTR [ebx+0x13]
  42435e:	xor    BYTE PTR [ebp+0x1a],al
  424361:	enter  0x4e8c,0xef
  424365:	imul   esi,DWORD PTR [edi-0x32f23e93],0xda2ef49
  42436f:	push   eax
  424370:	lahf   
  424371:	jl     0x424349
  424373:	push   cs
  424374:	mov    al,ds:0xe35cd2b
  424379:	and    DWORD PTR ds:0xa16153df,esp
  42437f:	scas   eax,DWORD PTR es:[edi]
  424380:	mov    esi,0x4ba83d90
  424385:	icebp  
  424386:	and    eax,0x8c4b661d
  42438b:	stc    
  42438c:	pop    edi
  42438d:	jmp    0x4243bf
  42438f:	std    
  424390:	shr    ebx,1
  424392:	add    eax,0x5352a2f8
  424397:	hlt    
  424398:	mov    cl,0x55
  42439a:	or     DWORD PTR [edx],ecx
  42439c:	sub    al,0x9e
  42439e:	push   ecx
  42439f:	push   es
  4243a0:	and    eax,0xf45839dc
  4243a5:	inc    edi
  4243a6:	adc    eax,0xa4461b47
  4243ab:	je     0x424358
  4243ad:	hlt    
  4243ae:	(bad)  
  4243af:	pop    edx
  4243b0:	pop    ss
  4243b1:	dec    ebx
  4243b2:	out    0xf6,eax
  4243b4:	mov    ch,BYTE PTR [edx+esi*2]
  4243b7:	mov    ch,0x21
  4243b9:	adc    BYTE PTR [ecx],ch
  4243bb:	out    dx,eax
  4243bc:	or     DWORD PTR [edi+0x3a],eax
  4243bf:	or     BYTE PTR [edi],al
  4243c1:	jb     0x424415
  4243c3:	push   eax
  4243c4:	jmp    0x76f53e71
  4243c9:	xchg   ebp,eax
  4243ca:	sub    esp,DWORD PTR [edi+0x56]
  4243cd:	push   ds
  4243ce:	or     edx,esp
  4243d0:	sub    DWORD PTR ds:0x7e894355,ecx
  4243d6:	sub    ebx,DWORD PTR [edi+ecx*4+0x47e33248]
  4243dd:	pop    ss
  4243de:	jns    0x4243b6
  4243e0:	lods   al,BYTE PTR ds:[esi]
  4243e1:	pop    ss
  4243e2:	jmp    0xb3a84e66
  4243e7:	fsub   DWORD PTR [eax-0x65]
  4243ea:	jge    0x424415
  4243ec:	xchg   esp,eax
  4243ed:	sar    DWORD PTR [ecx],cl
  4243ef:	cli    
  4243f0:	test   eax,0xe4ce0668
  4243f5:	push   eax
  4243f6:	aaa    
  4243f7:	lahf   
  4243f8:	xchg   ebp,eax
  4243f9:	fs (bad) 
  4243fb:	daa    
  4243fc:	xor    eax,0x9e096a4c
  424401:	sbb    eax,0x14358971
  424406:	jmp    0xdce95cbf
  42440b:	adc    al,0x74
  42440d:	cdq    
  42440e:	lds    edx,FWORD PTR [edx]
  424410:	das    
  424411:	or     eax,0x7fdd962f
  424416:	mov    eax,ds:0x555a7adb
  42441b:	jmp    0x74b84773
  424420:	rcl    DWORD PTR [ebp-0x198ec218],cl
  424426:	inc    ebx
  424427:	jg     0x424459
  424429:	jnp    0x42447a
  42442b:	fs std 
  42442d:	ficom  DWORD PTR [ebp-0x65]
  424430:	je     0x4244a6
  424432:	popa   
  424433:	retf   0x57f4
  424436:	loopne 0x424468
  424438:	xchg   ecx,eax
  424439:	push   esi
  42443a:	jp     0x4244b0
  42443c:	pop    esp
  42443d:	and    DWORD PTR [ebx+eax*1],esi
  424440:	out    dx,eax
  424441:	scas   eax,DWORD PTR es:[edi]
  424442:	repz cmp ax,0x725
  424447:	xchg   DWORD PTR [ebp+0x600aff32],ebx
  42444d:	ret    0x7ec4
  424450:	(bad)  
  424452:	cld    
  424453:	fild   DWORD PTR [edx]
  424455:	gs dec ebx
  424457:	daa    
  424458:	les    ebx,FWORD PTR [ebp-0x7e]
  42445b:	push   ebp
  42445c:	add    al,0x56
  42445e:	popf   
  42445f:	xor    BYTE PTR [edi-0x2d],0x40
  424463:	push   ebp
  424464:	scas   eax,DWORD PTR es:[edi]
  424465:	xor    DWORD PTR [edi],esi
  424467:	adc    ah,cl
  424469:	ret    
  42446a:	int3   
  42446b:	pop    edx
  42446c:	imul   eax,DWORD PTR [edi],0x3c
  42446f:	dec    edi
  424470:	ins    BYTE PTR es:[edi],dx
  424471:	push   ebx
  424472:	or     BYTE PTR [edi-0x7b],0x2a
  424476:	xchg   ecx,eax
  424477:	sub    DWORD PTR [ebx-0x36],edx
  42447a:	push   ss
  42447b:	call   0x6020:0x1c294edf
  424482:	fidiv  WORD PTR [eax+eiz*8-0x711f0113]
  424489:	push   ds
  42448a:	je     0x424467
  42448c:	push   ds
  42448d:	mov    DWORD PTR [eax-0x34],esp
  424490:	(bad)
  424493:	and    ah,BYTE PTR [eax+ebp*2+0x52]
  424497:	jmp    0x68ae:0x33065330
  42449e:	sub    al,BYTE PTR [ebp+0x5697a704]
  4244a4:	icebp  
  4244a5:	mov    ds:0x618a13bf,eax
  4244aa:	fs and ah,ah
  4244ad:	test   eax,0x4a3053ed
  4244b2:	sbb    DWORD PTR [eax-0x58],ebp
  4244b5:	cmp    BYTE PTR [esi-0x416e7186],ah
  4244bb:	in     al,dx
  4244bc:	jle    0x424513
  4244be:	fcomp  DWORD PTR [ebx-0x4ba7910]
  4244c4:	sahf   
  4244c5:	sbb    dl,BYTE PTR [ebp+0x18fc14ff]
  4244cb:	or     BYTE PTR ds:0x2b2060bb,dh
  4244d1:	outs   dx,DWORD PTR ds:[esi]
  4244d2:	xor    DWORD PTR [eax-0x74],0x72
  4244d6:	outs   dx,DWORD PTR ds:[esi]
  4244d7:	int    0x21
  4244d9:	js     0x4244dc
  4244db:	jg     0x4244ec
  4244dd:	or     al,0xfa
  4244df:	dec    ecx
  4244e0:	jecxz  0x424479
  4244e2:	dec    eax
  4244e3:	test   ebp,ebx
  4244e5:	add    eax,0x498e7431
  4244ea:	pop    eax
  4244eb:	mov    ch,0xfe
  4244ed:	add    al,BYTE PTR [esi+ebx*1-0x4b]
  4244f1:	pop    esp
  4244f2:	stc    
  4244f3:	enter  0xaa17,0x40
  4244f7:	add    BYTE PTR [ebx+0x68],bl
  4244fa:	pop    ecx
  4244fb:	ins    DWORD PTR es:[edi],dx
  4244fc:	pusha  
  4244fd:	ins    DWORD PTR es:[edi],dx
  4244fe:	add    ebx,eax
  424500:	shl    ebx,0x2b
  424503:	and    al,0xb2
  424505:	sub    DWORD PTR [ecx+ebx*1+0x5a],0xffffffd6
  42450a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42450b:	in     eax,dx
  42450c:	iret   
  42450d:	mov    esp,0xcf95b88c
  424512:	xor    bh,cl
  424514:	cmp    al,0xff
  424516:	je     0x424508
  424518:	imul   edi,DWORD PTR [edi+0x6e],0xe5e6bdae
  42451f:	test   DWORD PTR [esi+0x2b9ab782],0xe6e43ced
  424529:	mov    al,0x5c
  42452b:	mov    al,0x3d
  42452d:	mov    ebp,edx
  42452f:	dec    ecx
  424530:	outs   dx,BYTE PTR ds:[esi]
  424531:	sbb    DWORD PTR es:[ebx],ebp
  424534:	jo     0x42450a
  424536:	or     eax,0xaf8728a0
  42453b:	es call 0x638:0x1b426c8e
  424543:	popf   
  424544:	not    BYTE PTR [eax]
  424546:	xchg   DWORD PTR ds:0x53510307,ecx
  42454c:	in     eax,0xfb
  42454e:	test   BYTE PTR [edx-0x39],ch
  424551:	jae    0x424567
  424553:	out    0x82,al
  424555:	xor    BYTE PTR [edx-0x2d],cl
  424558:	out    0x6c,al
  42455a:	pmaxub mm3,mm2
  42455d:	jne    0x424529
  42455f:	add    eax,0xb6f0da3
  424564:	iret   
  424565:	xchg   ecx,eax
  424566:	dec    esp
  424567:	push   0xffffffdc
  424569:	stos   DWORD PTR es:[edi],eax
  42456a:	mov    eax,0x6031d369
  42456f:	xchg   BYTE PTR [ebx-0x3a],dh
  424572:	lea    ecx,[esp+eax*4]
  424575:	cmp    esp,DWORD PTR [ecx]
  424577:	jle    0x4245df
  424579:	cmc    
  42457a:	imul   DWORD PTR gs:[esi+ebx*2+0x29]
  42457f:	std    
  424580:	sbb    DWORD PTR [esi],esi
  424582:	gs adc eax,0x920b8f4c
  424588:	arpl   cx,sp
  42458a:	pusha  
  42458b:	pop    esp
  42458c:	mov    ds:0xac85a307,al
  424591:	out    0x23,eax
  424593:	ds sub al,ah
  424596:	cmp    eax,0xf5e0e8b5
  42459b:	cmp    eax,0x44caebfe
  4245a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245a1:	in     al,0x45
  4245a3:	ja     0x424610
  4245a5:	stos   DWORD PTR es:[edi],eax
  4245a6:	push   edi
  4245a7:	inc    edi
  4245a8:	in     al,0xa1
  4245aa:	xchg   esp,eax
  4245ab:	jno    0x424628
  4245ad:	std    
  4245ae:	js     0x42454d
  4245b0:	sbb    ah,BYTE PTR [edx]
  4245b2:	push   ebx
  4245b3:	mov    esp,0x44d76f68
  4245b8:	mov    ecx,0xd61cbb05
  4245bd:	adc    al,0x11
  4245bf:	in     eax,dx
  4245c0:	and    BYTE PTR [esi],ah
  4245c2:	xchg   edx,eax
  4245c3:	cmp    bl,BYTE PTR [esi]
  4245c5:	push   ecx
  4245c6:	push   ebp
  4245c7:	mov    cl,0x71
  4245c9:	iret   
  4245ca:	and    BYTE PTR [ecx],bh
  4245cc:	adc    al,BYTE PTR [edi+ebp*8-0x355516af]
  4245d3:	dec    ebp
  4245d4:	inc    ebx
  4245d5:	gs shr DWORD PTR es:0x744e1c15,cl
  4245dd:	lea    ecx,[ecx+0x9c8f317]
  4245e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245e4:	mov    edx,ss
  4245e6:	enter  0x9d66,0xa3
  4245ea:	or     eax,0xecb8a73e
  4245ef:	loop   0x424642
  4245f1:	inc    edx
  4245f2:	test   BYTE PTR [ebx-0x1d],ah
  4245f5:	enter  0xfcb6,0xe2
  4245f9:	cmp    al,0x2f
  4245fb:	in     al,0xde
  4245fd:	test   DWORD PTR [edi],ebp
  4245ff:	dec    DWORD PTR [edx-0x3b628616]
  424605:	inc    esp
  424606:	fisttp QWORD PTR ds:0xa83ce87f
  42460c:	lock or eax,0xdd7bfd02
  424612:	ins    BYTE PTR es:[edi],dx
  424613:	les    edi,FWORD PTR [ebp+ecx*1+0xf4c844f]
  42461a:	mov    al,ds:0xbb101fc8
  42461f:	jno    0x4245b8
  424621:	add    ecx,DWORD PTR [ecx]
  424623:	or     al,0x11
  424625:	dec    esp
  424626:	ret    
  424627:	xchg   BYTE PTR [ebx+0xe],al
  42462a:	loop   0x4246a9
  42462c:	into   
  42462d:	xchg   esp,eax
  42462e:	test   bl,bh
  424630:	clc    
  424631:	dec    edx
  424632:	inc    ebp
  424633:	sbb    DWORD PTR [edx+0x31c12f30],esi
  424639:	inc    esp
  42463a:	inc    ebp
  42463b:	js     0x42467f
  42463d:	adc    DWORD PTR [esi],ebp
  42463f:	jl     0x4245d0
  424641:	aad    0xd
  424643:	and    DWORD PTR [ebx-0x50a2d818],esi
  424649:	or     dh,BYTE PTR [ecx-0x761148e9]
  42464f:	mov    al,ds:0xb08dd5cf
  424654:	or     eax,0xea90b73a
  424659:	xchg   esi,eax
  42465a:	mov    ebp,0x45e74618
  42465f:	and    al,0x1d
  424661:	in     al,0x82
  424663:	in     al,dx
  424664:	or     eax,0xf34029be
  424669:	jl     0x42462a
  42466b:	mov    edi,0xcb151169
  424670:	out    0x21,al
  424672:	dec    edx
  424673:	test   edx,edx
  424675:	push   ebx
  424676:	stos   BYTE PTR es:[edi],al
  424677:	and    eax,0x73bc6132
  42467c:	mov    bl,0xcd
  42467e:	ss xchg edx,eax
  424680:	iret   
  424681:	push   edx
  424682:	push   ebx
  424683:	sbb    eax,0x2cf32178
  424688:	adc    ebx,DWORD PTR [ebx+ecx*8+0x56]
  42468c:	aad    0x40
  42468e:	cmp    al,0x65
  424690:	mov    ch,0x99
  424692:	retf   0xcb5a
  424695:	outs   dx,DWORD PTR ds:[esi]
  424696:	scas   al,BYTE PTR es:[edi]
  424697:	loope  0x4246eb
  424699:	push   ebx
  42469a:	mov    ds:0xe0239064,al
  42469f:	stos   BYTE PTR es:[edi],al
  4246a0:	fnstcw WORD PTR [ebp+0x22]
  4246a3:	or     al,0xee
  4246a5:	(bad)  
  4246a6:	jb     0x42471e
  4246a8:	pop    es
  4246a9:	jecxz  0x4246dc
  4246ab:	sbb    DWORD PTR [ecx-0x66],esi
  4246ae:	imul   edi,DWORD PTR [esi-0x2f],0x40
  4246b2:	out    0x9e,al
  4246b4:	mov    BYTE PTR [ebx],bl
  4246b6:	js     0x42463a
  4246b8:	add    eax,DWORD PTR ds:0xc9f144e8
  4246be:	adc    BYTE PTR ds:0xc5e31e38,al
  4246c4:	jnp    0x42466e
  4246c6:	xor    DWORD PTR [ebx-0x5937748],esp
  4246cc:	pop    ds
  4246cd:	pop    eax
  4246ce:	pop    edi
  4246cf:	in     al,0x2d
  4246d1:	(bad)  
  4246d2:	push   eax
  4246d3:	cmc    
  4246d4:	aas    
  4246d5:	or     esp,DWORD PTR [ecx+edx*4+0x14]
  4246d9:	fimul  DWORD PTR [edx-0x55925205]
  4246df:	fwait
  4246e0:	inc    edi
  4246e1:	ror    DWORD PTR ds:[ebx-0x1e3048be],1
  4246e8:	and    al,BYTE PTR ds:0x5f26052e
  4246ee:	cmp    DWORD PTR [eax-0x6530f846],0x9
  4246f5:	loope  0x424678
  4246f7:	aas    
  4246f8:	adc    dl,ah
  4246fa:	jmp    0x424759
  4246fc:	(bad)  
  4246fd:	(bad)  
  4246fe:	sbb    ecx,DWORD PTR ds:0x8dee7065
  424704:	aas    
  424705:	jns    0x4246e9
  424707:	mov    ah,0xc5
  424709:	cmp    DWORD PTR [ebx+ebp*2-0x45],ebp
  42470d:	jp     0x424705
  42470f:	out    0xe9,al
  424711:	mov    esp,0xa04af059
  424716:	out    dx,eax
  424717:	cmp    ch,bh
  424719:	mov    esi,0x1bffca67
  42471e:	jo     0x42471c
  424720:	xchg   edx,eax
  424721:	add    al,0xaa
  424723:	dec    BYTE PTR [esi-0x7d]
  424726:	pop    ecx
  424727:	jmp    0x42474b
  424729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42472a:	inc    edi
  42472b:	repz fsub DWORD PTR [ebp+0x147c3981]
  424732:	mov    dh,0xb
  424734:	call   0x6b418a2
  424739:	call   0x8499:0x3aa4c49e
  424740:	xchg   edi,eax
  424741:	(bad)  
  424743:	jae    0x4246cd
  424745:	or     BYTE PTR [ebx-0x77],dl
  424748:	add    DWORD PTR [ebx],ebx
  42474a:	and    ch,cl
  42474c:	add    al,0x5b
  42474e:	out    0x40,eax
  424750:	jge    0x4247c7
  424752:	mov    edx,DWORD PTR [ebx+0x3733bc54]
  424758:	sub    ecx,DWORD PTR [esi-0x35]
  42475b:	adc    al,0x92
  42475d:	or     BYTE PTR [ecx-0x54641504],bl
  424763:	add    BYTE PTR [ebp+0x13],bl
  424766:	aaa    
  424767:	sbb    DWORD PTR [eax-0x4ad4c3ac],edx
  42476d:	xor    al,0x61
  42476f:	xchg   edx,eax
  424770:	js     0x42477d
  424772:	in     eax,dx
  424773:	fisubr DWORD PTR ds:0xc2f4e6ea
  424779:	inc    esp
  42477a:	arpl   WORD PTR [eax+0x2b99b88b],cx
  424780:	int    0xb9
  424782:	jmp    0x69af:0x8f31c18d
  424789:	fdivr  st,st(3)
  42478b:	and    ah,ch
  42478d:	mov    cl,0xd0
  42478f:	cmp    BYTE PTR cs:[ebx],bl
  424792:	in     eax,0xb4
  424794:	dec    edx
  424795:	test   al,0xf7
  424797:	inc    ebx
  424798:	cmp    al,BYTE PTR [edx-0x30fb96a5]
  42479e:	or     al,BYTE PTR [ecx]
  4247a0:	in     al,0xc5
  4247a2:	mov    al,0x4c
  4247a4:	stos   BYTE PTR es:[edi],al
  4247a5:	mov    eax,0xe99f2a74
  4247aa:	and    bh,BYTE PTR [ebp-0x6ca8e89e]
  4247b0:	fwait
  4247b1:	adc    eax,0x3eee3094
  4247b6:	gs cmp al,0xcf
  4247b9:	stos   DWORD PTR es:[edi],eax
  4247ba:	outs   dx,BYTE PTR ds:[esi]
  4247bb:	xchg   ecx,eax
  4247bc:	in     eax,dx
  4247bd:	ds enter 0xbc35,0x82
  4247c2:	cmp    BYTE PTR [edi+0x3b587114],dh
  4247c8:	jmp    0xbca4d30a
  4247cd:	push   0xa147af5e
  4247d2:	mov    ax,ds:0x4592c3a1
  4247d8:	xor    eax,0xf5e1b66c
  4247dd:	mov    ah,0x46
  4247df:	out    dx,eax
  4247e0:	(bad)  
  4247e1:	xlat   BYTE PTR ds:[ebx]
  4247e2:	pop    ds
  4247e3:	es mov ch,0xa5
  4247e6:	xchg   esp,eax
  4247e7:	addr16 add al,0x84
  4247ea:	montmul (bad)
  4247eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  42482c:	add    BYTE PTR [eax],al
  42482e:	add    BYTE PTR [eax+0x78001020],bl
  424834:	add    edx,DWORD PTR [eax]
  424836:	add    BYTE PTR [ebp-0x9ffefa4],bh
  42483c:	push   ebp
  42483d:	adc    BYTE PTR [eax],al
  42483f:	and    eax,0x3800107b
  424844:	cmp    DWORD PTR [eax],edx
  424846:	add    BYTE PTR [ebp+edx*1+0x1e9b0010],cl
  42484d:	adc    BYTE PTR [eax],al
	...
  42584f:	add    BYTE PTR [eax],dl
  425851:	add    BYTE PTR [eax],al
  425853:	in     al,dx
  425854:	add    BYTE PTR [eax],al
  425856:	add    BYTE PTR [edx],ch
  425858:	xor    BYTE PTR [eax],dh
  42585a:	xor    BYTE PTR ds:0x58304c30,dh
  425860:	xor    BYTE PTR [esi+0x30],bl
  425863:	xor    BYTE PTR fs:[eax-0x65cf71d0],cl
  42586a:	xor    BYTE PTR [eax-0x4ccf59d0],ah
  425870:	xor    al,al
  425872:	xor    bh,cl
  425874:	xor    BYTE PTR [edx-0x48ce51cf],ch
  42587a:	xor    esp,eax
  42587c:	xor    eax,ecx
  42587e:	xor    DWORD PTR [ebp-0x60cc6ece],esp
  425884:	xor    ebp,DWORD PTR [esi-0x3acc47cd]
  42588a:	xor    edx,ebp
  42588c:	xor    ebx,ebp
  42588e:	xor    esp,esp
  425890:	xor    ebp,edi
  425892:	xor    edi,ebp
  425894:	xor    ecx,DWORD PTR [eax]
  425896:	xor    al,0xc
  425898:	xor    al,0x14
  42589a:	xor    al,0x28
  42589c:	xor    al,0x2e
  42589e:	xor    al,0x40
  4258a0:	xor    al,0x46
  4258a2:	xor    al,0xf8
  4258a4:	xor    eax,0x360435fc
  4258a9:	push   cs
  4258aa:	sbb    esi,DWORD PTR ss:[esi]
  4258ad:	sub    esi,DWORD PTR [esi]
  4258af:	xor    DWORD PTR [esi],esi
  4258b1:	cmp    eax,0x48364336
  4258b6:	ss dec esi
  4258b8:	ss pop esp
  4258ba:	ss push 0x7f367b36
  4258c0:	ss pop edi
  4258c2:	aaa    
  4258c3:	imul   esi,DWORD PTR [edi],0x7e
  4258c6:	aaa    
  4258c7:	xor    BYTE PTR [edi],0x8d
  4258ca:	aaa    
  4258cb:	call   0xb637:0xb037a937
  4258d2:	aaa    
  4258d3:	ret    
  4258d4:	aaa    
  4258d5:	shl    DWORD PTR [edi],cl
  4258d7:	mov    ah,0x38
  4258d9:	mov    ebp,0xce38ca38
  4258de:	cmp    dh,dl
  4258e0:	cmp    dl,ah
  4258e2:	cmp    dl,dh
  4258e4:	cmp    dh,dh
  4258e6:	cmp    BYTE PTR [ebx-0x33c53fc6],dh
  4258ec:	cmp    ah,dl
  4258ee:	cmp    ch,dh
  4258f0:	cmp    dh,ch
  4258f2:	cmp    bh,bl
  4258f4:	cmp    al,BYTE PTR [edi]
  4258f6:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4258f9:	adc    eax,0x2a3b1b3b
  4258fe:	cmp    esi,DWORD PTR [ecx]
  425900:	cmp    esi,DWORD PTR [edi]
  425902:	cmp    eax,DWORD PTR [ebx+edi*1+0x30]
  425906:	cmp    al,0x34
  425908:	cmp    al,0x3e
  42590a:	cmp    al,0x44
  42590c:	cmp    al,0x49
  42590e:	cmp    al,0x52
  425910:	cmp    al,0x5b
  425912:	cmp    al,0x6a
  425914:	cmp    al,0x71
  425916:	cmp    al,0x77
  425918:	cmp    al,0x84
  42591a:	cmp    al,0x9d
  42591c:	cmp    al,0xa6
  42591e:	cmp    al,0xac
  425920:	cmp    al,0xb9
  425922:	cmp    al,0xc0
  425924:	cmp    al,0xce
  425926:	cmp    al,0xd7
  425928:	cmp    al,0xba
  42592a:	cmp    eax,0x3dd13dc4
  42592f:	loope  0x42596e
  425931:	out    0x3d,eax
  425933:	hlt    
  425934:	cmp    eax,0x3e013dfb
  425939:	or     BYTE PTR [esi],bh
  42593b:	add    BYTE PTR [eax],ah
  42593d:	add    BYTE PTR [eax],al
  42593f:	dec    eax
  425940:	add    BYTE PTR [eax],al
  425942:	add    BYTE PTR [ebx],bh
  425944:	cmp    al,0x4c
  425946:	cmp    al,0x52
  425948:	cmp    al,0x58
  42594a:	cmp    al,0x65
  42594c:	cmp    al,0x73
  42594e:	cmp    al,0x7f
  425950:	cmp    al,0x85
  425952:	cmp    al,0x94
  425954:	cmp    al,0x9a
  425956:	cmp    al,0xa5
  425958:	cmp    al,0xaf
  42595a:	cmp    al,0xb6
  42595c:	cmp    al,0xbc
  42595e:	cmp    al,0xc8
  425960:	cmp    al,0xd6
  425962:	cmp    al,0xdc
  425964:	cmp    al,0xe9
  425966:	cmp    al,0xf0
  425968:	cmp    al,0xf6
  42596a:	cmp    al,0x9
  42596c:	cmp    eax,0x3d203d13
  425971:	sub    al,0x3d
  425973:	xor    DWORD PTR ds:0x3d403d3b,edi
  425979:	inc    ebp
  42597a:	cmp    eax,0x3d513d4b
  42597f:	pop    eax
  425980:	cmp    eax,0x30000000
  425985:	add    BYTE PTR [eax],al
  425987:	or     al,0x1
  425989:	add    BYTE PTR [eax],al
  42598b:	push   ebx
  42598c:	xor    bl,BYTE PTR [ecx+0x32]
  42598f:	xor    ch,BYTE PTR gs:[ebx+0x32]
  425993:	jae    0x4259c7
  425995:	jns    0x4259c9
  425997:	test   BYTE PTR [edx],dh
  425999:	mov    BYTE PTR [edx],dh
  42599b:	(bad)  
  42599c:	xor    bl,BYTE PTR [esi-0x54cd5ace]
  4259a2:	xor    bh,BYTE PTR [eax-0x27cd36ce]
  4259a8:	xor    ah,dh
  4259aa:	xor    ch,dl
  4259ac:	xor    bh,cl
  4259ae:	xor    bh,bh
  4259b0:	xor    ah,BYTE PTR [ecx+0x34]
  4259b3:	addr16 xor al,0x1d
  4259b6:	xor    eax,0x35333529
  4259bb:	cmp    BYTE PTR ds:0x355a3543,dh
  4259c1:	arpl   WORD PTR ds:0x357a356d,si
  4259c7:	xchg   BYTE PTR ds:0x3591358b,dh
  4259cd:	xchg   esi,eax
  4259ce:	xor    eax,0x35a7359c
  4259d3:	mov    ebx,0xce35c135
  4259d8:	xor    eax,0x3758374f
  4259dd:	pop    esi
  4259de:	aaa    
  4259df:	jb     0x425a18
  4259e1:	jnp    0x425a1a
  4259e3:	test   DWORD PTR [edi],esi
  4259e5:	mov    WORD PTR [edi],?
  4259e7:	xchg   edx,eax
  4259e8:	aaa    
  4259e9:	sahf   
  4259ea:	aaa    
  4259eb:	lods   al,BYTE PTR ds:[esi]
  4259ec:	aaa    
  4259ed:	mov    dl,0x37
  4259ef:	shl    DWORD PTR [edi],0xc8
  4259f2:	aaa    
  4259f3:	into   
  4259f4:	aaa    
  4259f5:	(bad)  [edi]
  4259f7:	call   0x127a5d33
  4259fc:	cmp    BYTE PTR [ecx],bl
  4259fe:	cmp    BYTE PTR [edi],bl
  425a00:	cmp    BYTE PTR [eax+edi*1],ch
  425a03:	cmp    eax,0x49384338
  425a08:	cmp    BYTE PTR [esi+0x38],dl
  425a0b:	pop    ebp
  425a0c:	cmp    BYTE PTR [eax+0x38],ch
  425a0f:	mov    BYTE PTR [eax],bh
  425a11:	xchg   esp,eax
  425a12:	cmp    BYTE PTR [ecx-0x43c74ec8],ah
  425a18:	cmp    dh,cl
  425a1a:	cmp    ch,bl
  425a1c:	cmp    ah,ah
  425a1e:	cmp    dl,ch
  425a20:	cmp    bh,dh
  425a22:	cmp    BYTE PTR [esi],cl
  425a24:	cmp    DWORD PTR [ecx],ebx
  425a26:	cmp    DWORD PTR [esi],esp
  425a28:	cmp    DWORD PTR [edi-0x4fc55bc6],edx
  425a2e:	cmp    bh,BYTE PTR [edx+edi*1+0x3ae63ac8]
  425a35:	idiv   DWORD PTR [edx]
  425a37:	(bad)  
  425a38:	cmp    al,BYTE PTR [ebx+edi*1]
  425a3b:	adc    DWORD PTR [ebx],edi
  425a3d:	and    DWORD PTR [ebx],edi
  425a3f:	daa    
  425a40:	cmp    esi,DWORD PTR [esi]
  425a42:	cmp    edi,DWORD PTR ds:0x593b483b
  425a48:	cmp    esp,DWORD PTR [eax+0x3b]
  425a4b:	cmp    si,WORD PTR [ebx+0x3b]
  425a4f:	xchg   edx,eax
  425a50:	cmp    ebx,DWORD PTR [edi+0x163ba73b]
  425a56:	cmp    eax,0x3d273d20
  425a5b:	sub    eax,0x433d3d3d
  425a60:	cmp    eax,0x3d5f3d50
  425a65:	jae    0x425aa4
  425a67:	jle    0x425aa6
  425a69:	xchg   BYTE PTR ds:0x3d9c3d96,bh
  425a6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a70:	cmp    eax,0x3dbc3daf
  425a75:	retf   
  425a76:	cmp    eax,0x3dd73dd1
  425a7b:	fidivr WORD PTR ds:0x3df83de9
  425a81:	(bad)  
  425a82:	cmp    eax,0x3e123e05
  425a87:	dec    ebx
  425a88:	ds push ecx
  425a8a:	ds pop esi
  425a8c:	ds gs add BYTE PTR ds:[eax+0x0],dl
  425a92:	add    BYTE PTR [eax+0x26000000],cl
  425a98:	xor    DWORD PTR [ebx],esi
  425a9a:	xor    DWORD PTR [edx+0x31],eax
  425a9d:	dec    ecx
  425a9e:	xor    DWORD PTR [edi+0x31],ecx
  425aa1:	pop    esp
  425aa2:	xor    DWORD PTR [esi+0x31],ebp
  425aa5:	ja     0x425ad8
  425aa7:	xor    DWORD PTR [ecx],0xffffff89
  425aaa:	xor    edx,eax
  425aac:	xor    edx,ebx
  425aae:	xor    edx,edi
  425ab0:	xor    esp,ebp
  425ab2:	xor    esi,edi
  425ab4:	xor    eax,DWORD PTR [ebx]
  425ab6:	xor    al,0x7
  425ab8:	xor    al,0x10
  425aba:	xor    al,0x1a
  425abc:	xor    al,0x27
  425abe:	xor    al,0x33
  425ac0:	xor    al,0x38
  425ac2:	xor    al,0x3e
  425ac4:	xor    al,0x43
  425ac6:	xor    al,0x49
  425ac8:	xor    al,0xb6
  425aca:	xor    eax,0x35d135be
  425acf:	xlat   BYTE PTR ds:[ebx]
  425ad0:	xor    eax,0x386d3727
  425ad5:	jno    0x425b0f
  425ad7:	jle    0x425b11
  425ad9:	mov    bh,BYTE PTR [eax]
  425adb:	xchg   ecx,eax
  425adc:	cmp    BYTE PTR [edi-0x53c759c8],dl
  425ae2:	cmp    BYTE PTR [edx-0x54c489c8],dh
  425ae8:	cmp    al,0xb3
  425aea:	cmp    al,0xb9
  425aec:	cmp    al,0xbd
  425aee:	cmp    al,0xcf
  425af0:	cmp    al,0xdf
  425af2:	cmp    al,0xea
  425af4:	cmp    al,0xee
  425af6:	cmp    al,0xf5
  425af8:	cmp    al,0xfc
  425afa:	cmp    al,0x6
  425afc:	cmp    eax,0x3d2d3d13
  425b01:	xor    edi,DWORD PTR ds:0x3d493d42
  425b07:	dec    edi
  425b08:	cmp    eax,0x3d613d56
  425b0d:	lahf   
  425b0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b10:	ds loope 0x425b52
  425b13:	jmp    0x425b54
  425b15:	clc    
  425b16:	aas    
  425b17:	add    BYTE PTR [eax+0x0],ah
  425b1a:	add    BYTE PTR [eax+0x0],bh
  425b1d:	add    BYTE PTR [eax],al
  425b1f:	add    al,0x30
  425b21:	or     dh,BYTE PTR [eax]
  425b23:	adc    dh,BYTE PTR [eax]
  425b25:	sbb    BYTE PTR [eax],dh
  425b27:	xor    DWORD PTR [eax],esi
  425b29:	inc    edx
  425b2a:	xor    BYTE PTR [edi+0x30],cl
  425b2d:	pusha  
  425b2e:	xor    BYTE PTR [esi+0x30],ah
  425b31:	ins    BYTE PTR es:[edi],dx
  425b32:	xor    BYTE PTR [ecx+0x30],bh
  425b35:	mov    dh,BYTE PTR [eax]
  425b37:	lahf   
  425b38:	xor    BYTE PTR [edx-0x32cf41d0],dh
  425b3e:	xor    dl,ah
  425b40:	xor    bh,ch
  425b42:	xor    ah,bh
  425b44:	xor    BYTE PTR [edi],al
  425b46:	xor    DWORD PTR [ebx],ecx
  425b48:	xor    DWORD PTR [ebx],edx
  425b4a:	xor    DWORD PTR [edi],edx
  425b4c:	xor    DWORD PTR [ebx],esp
  425b4e:	xor    DWORD PTR [edi],ebp
  425b50:	xor    DWORD PTR [ebx],esi
  425b52:	xor    DWORD PTR [edx],edi
  425b54:	xor    DWORD PTR [ebx+0x31],eax
  425b57:	dec    ecx
  425b58:	xor    DWORD PTR [edi+0x31],ecx
  425b5b:	pusha  
  425b5c:	xor    DWORD PTR [ecx+esi*1+0x72],ebp
  425b60:	xor    DWORD PTR [ecx-0x72ce78cf],eax
  425b66:	xor    DWORD PTR [ebx-0x55ce5ecf],ebx
  425b6c:	xor    DWORD PTR [ecx+esi*1+0x32ee31b8],esi
  425b73:	repnz xor bh,cl
  425b76:	xor    bh,ch
  425b78:	xor    al,BYTE PTR [esi]
  425b7a:	xor    ecx,DWORD PTR [edx]
  425b7c:	xor    edi,DWORD PTR [eax+0x35]
  425b7f:	jl     0x425bb6
  425b81:	dec    edx
  425b82:	cmp    eax,0x3e883d54
  425b87:	nop
  425b88:	ds cwde 
  425b8a:	fstp   TBYTE PTR ds:[edi]
  425b8d:	add    BYTE PTR [eax],al
  425b8f:	add    BYTE PTR [eax+0x0],dh
  425b92:	add    BYTE PTR [eax+eax*1+0x0],ch
  425b96:	add    BYTE PTR ds:0x7d327331,ch
  425b9c:	xor    al,BYTE PTR [edx+esi*1+0x3296328a]
  425ba3:	pushf  
  425ba4:	xor    ah,BYTE PTR [edx-0x42cd50ce]
  425baa:	xor    cl,dl
  425bac:	xor    al,BYTE PTR [ebp+esi*1+0x5d]
  425bb0:	xor    eax,0x3589356a
  425bb5:	xchg   ebp,eax
  425bb6:	xor    eax,0x35a2359c
  425bbb:	scas   al,BYTE PTR es:[edi]
  425bbc:	xor    eax,0x35ba35b4
  425bc1:	int3   
  425bc2:	xor    eax,0x370f35d0
  425bc7:	sbb    esi,DWORD PTR [edi]
  425bc9:	daa    
  425bca:	aaa    
  425bcb:	sub    esi,DWORD PTR [edi]
  425bcd:	xor    esi,DWORD PTR [edi]
  425bcf:	jbe    0x425c09
  425bd1:	xchg   BYTE PTR [eax],bh
  425bd3:	cwde   
  425bd4:	cmp    BYTE PTR [esi-0x4ac754c8],bl
  425bda:	cmp    BYTE PTR [eax+edi*1+0x38d638c2],bh
  425be1:	in     al,dx
  425be2:	cmp    dl,dh
  425be4:	cmp    BYTE PTR [edi],al
  425be6:	cmp    DWORD PTR [ecx+edi*1],ecx
  425be9:	push   ecx
  425bea:	cmp    bl,BYTE PTR [ebx+0x3a]
  425bed:	push   0x813a7b3a
  425bf2:	cmp    cl,BYTE PTR [esi-0x62c56ac6]
  425bf8:	cmp    ah,BYTE PTR [edx+edi*1+0x8000]
  425bff:	sbb    BYTE PTR [edx],al
  425c01:	add    BYTE PTR [eax],al
  425c03:	mov    dh,0x30
  425c05:	mov    esp,0xcb30c230
  425c0a:	xor    dl,dl
  425c0c:	xor    ah,ch
  425c0e:	xor    al,bh
  425c10:	xor    BYTE PTR [edx],al
  425c12:	xor    DWORD PTR [ecx],ecx
  425c14:	xor    DWORD PTR [edi],ecx
  425c16:	xor    DWORD PTR [ebx],ebx
  425c18:	xor    DWORD PTR [ecx],esp
  425c1a:	xor    DWORD PTR [edi],esp
  425c1c:	xor    esp,ebp
  425c1e:	xor    esi,edi
  425c20:	xor    DWORD PTR [eax],ecx
  425c22:	xor    dl,BYTE PTR ds:0x2b322532
  425c28:	xor    bh,BYTE PTR [eax]
  425c2a:	xor    bh,BYTE PTR [edi]
  425c2c:	xor    al,BYTE PTR [ebp+0x32]
  425c2f:	dec    esp
  425c30:	xor    bl,BYTE PTR [esi+0x33]
  425c33:	xor    ebp,DWORD PTR fs:[esi+0x33]
  425c37:	je     0x425c6c
  425c39:	js     0x425c6e
  425c3b:	xor    BYTE PTR [ebx],0x90
  425c3e:	xor    edx,DWORD PTR [ebx+esi*1+0x33a533a1]
  425c45:	lods   al,BYTE PTR ds:[esi]
  425c46:	xor    edi,DWORD PTR [ebx-0x37cc3dcd]
  425c4c:	xor    edx,ebp
  425c4e:	xor    esp,edi
  425c50:	xor    ebp,ebp
  425c52:	xor    edi,edx
  425c54:	xor    eax,DWORD PTR [ecx]
  425c56:	xor    al,0xc
  425c58:	xor    al,0x1b
  425c5a:	xor    al,0x25
  425c5c:	xor    al,0x2a
  425c5e:	xor    al,0x30
  425c60:	xor    al,0x36
  425c62:	xor    al,0x48
  425c64:	xor    al,0x57
  425c66:	xor    al,0x66
  425c68:	xor    al,0x75
  425c6a:	xor    al,0x84
  425c6c:	xor    al,0x88
  425c6e:	xor    al,0x98
  425c70:	xor    al,0xc7
  425c72:	xor    al,0xd0
  425c74:	xor    al,0xdc
  425c76:	xor    al,0xe6
  425c78:	xor    al,0xf3
  425c7a:	xor    al,0x5
  425c7c:	xor    eax,0x3517350b
  425c81:	sbb    eax,0x2b352535
  425c86:	xor    eax,0x353b3536
  425c8b:	inc    ecx
  425c8c:	xor    eax,0x35573550
  425c91:	pop    ebp
  425c92:	xor    eax,0x3586356a
  425c97:	xchg   edx,eax
  425c98:	xor    eax,0x359e3598
  425c9d:	scas   al,BYTE PTR es:[edi]
  425c9e:	xor    eax,0x35c735bb
  425ca3:	into   
  425ca4:	xor    eax,0x35e735d4
  425ca9:	in     eax,dx
  425caa:	xor    eax,0x360035f3
  425caf:	or     al,0x36
  425cb1:	adc    esi,DWORD PTR [esi]
  425cb3:	sbb    DWORD PTR [esi],esi
  425cb5:	sub    esi,DWORD PTR [esi]
  425cb7:	xor    DWORD PTR [esi],esi
  425cb9:	ds ss inc ebp
  425cbc:	ss dec ebx
  425cbe:	ss pop eax
  425cc0:	ss fs ss push 0x36
  425cc5:	jo     0x425cfd
  425cc7:	jnp    0x425cff
  425cc9:	xchg   DWORD PTR [esi],esi
  425ccb:	mov    esi,DWORD PTR [esi]
  425ccd:	xchg   edx,eax
  425cce:	ss pushf 
  425cd0:	ss test eax,0xcb36c536
  425cd6:	fdiv   DWORD PTR ss:[esi]
  425cd9:	fbstp  TBYTE PTR [esi]
  425cdb:	in     eax,0x36
  425cdd:	in     al,dx
  425cde:	div    DWORD PTR ss:[esi]
  425ce1:	add    DWORD PTR [edi],esi
  425ce3:	or     BYTE PTR [edi],dh
  425ce5:	push   cs
  425ce6:	aaa    
  425ce7:	and    eax,0x38372b37
  425cec:	aaa    
  425ced:	aas    
  425cee:	aaa    
  425cef:	inc    ebp
  425cf0:	aaa    
  425cf1:	push   edi
  425cf2:	aaa    
  425cf3:	pop    ebx
  425cf4:	aaa    
  425cf5:	data16 aaa 
  425cf7:	imul   esi,DWORD PTR [edi],0x76
  425cfa:	aaa    
  425cfb:	xor    DWORD PTR [edi],0xffffffa7
  425cfe:	aaa    
  425cff:	mov    cl,0x37
  425d01:	mov    ebx,0xc837c237
  425d06:	aaa    
  425d07:	aam    0x37
  425d09:	out    0x37,eax
  425d0b:	in     eax,dx
  425d0c:	aaa    
  425d0d:	stc    
  425d0e:	aaa    
  425d0f:	or     BYTE PTR [eax],bh
  425d11:	push   cs
  425d12:	cmp    BYTE PTR [eax+edi*1],dl
  425d15:	sbb    DWORD PTR [eax],edi
  425d17:	and    bh,BYTE PTR [eax]
  425d19:	sub    al,0x38
  425d1b:	xor    bh,BYTE PTR [eax]
  425d1d:	cmp    BYTE PTR ss:[esi],bh
  425d20:	cmp    BYTE PTR [edx+0x38],cl
  425d23:	data16 cmp BYTE PTR [eax+edi*1+0x7c],ch
  425d28:	cmp    BYTE PTR [edx-0x6cc773c8],al
  425d2e:	cmp    BYTE PTR [ecx-0x48c74ec8],bl
  425d34:	cmp    ah,al
  425d36:	cmp    dh,cl
  425d38:	cmp    bl,bl
  425d3a:	cmp    bl,ch
  425d3c:	cmp    cl,dh
  425d3e:	cmp    BYTE PTR [eax],al
  425d40:	cmp    DWORD PTR [edi],eax
  425d42:	cmp    DWORD PTR ds:0x1f391439,ecx
  425d48:	cmp    DWORD PTR [eax],esi
  425d4a:	cmp    DWORD PTR [edi],esi
  425d4c:	cmp    DWORD PTR ds:0x5a394a39,edi
  425d52:	cmp    DWORD PTR [eax+0x39],esp
  425d55:	outs   dx,DWORD PTR ds:[esi]
  425d56:	cmp    DWORD PTR [esi+0x39],esi
  425d59:	cmp    DWORD PTR [ecx],0x39ab3990
  425d5f:	mov    bl,0x39
  425d61:	sar    BYTE PTR [ecx],0xd1
  425d64:	cmp    edi,edx
  425d66:	cmp    ebp,ebx
  425d68:	cmp    edx,ebp
  425d6a:	cmp    DWORD PTR [ecx],ecx
  425d6c:	cmp    cl,BYTE PTR [edi]
  425d6e:	cmp    bl,BYTE PTR [ebx]
  425d70:	cmp    ah,BYTE PTR [ecx]
  425d72:	cmp    ch,BYTE PTR [ebx]
  425d74:	cmp    dh,BYTE PTR [ecx]
  425d76:	cmp    al,BYTE PTR [ebx+0x3a]
  425d79:	dec    ebx
  425d7a:	cmp    dl,BYTE PTR [ebp+0x3a]
  425d7d:	bound  edi,QWORD PTR [edx]
  425d7f:	jle    0x425dbb
  425d81:	test   BYTE PTR [edx],bh
  425d83:	xchg   ebx,eax
  425d84:	cmp    bl,BYTE PTR [edx-0x56c55dc6]
  425d8a:	cmp    dh,BYTE PTR [edx+edi*1+0x3aca3ac3]
  425d91:	sar    BYTE PTR [edx],1
  425d93:	fnstsw WORD PTR [edx]
  425d95:	out    dx,eax
  425d96:	cmp    bh,bl
  425d98:	cmp    al,BYTE PTR [ecx]
  425d9a:	cmp    ecx,DWORD PTR [ecx]
  425d9c:	cmp    edi,DWORD PTR [ebx]
  425d9e:	cmp    eax,DWORD PTR [ebp+0x3b]
  425da1:	dec    esp
  425da2:	cmp    edx,DWORD PTR [edx+0x3b]
  425da5:	pop    esi
  425da6:	cmp    esp,DWORD PTR [ebx+edi*1+0x6a]
  425daa:	cmp    esi,DWORD PTR [edi+0x3b]
  425dad:	jle    0x425dea
  425daf:	test   BYTE PTR [ebx],bh
  425db1:	xchg   ecx,eax
  425db2:	cmp    ebx,DWORD PTR [ecx-0x4ac45dc5]
  425db8:	cmp    edi,DWORD PTR [ebp-0x26c435c5]
  425dbe:	cmp    ebx,edi
  425dc0:	cmp    ebp,edi
  425dc2:	cmp    edi,ecx
  425dc4:	cmp    eax,DWORD PTR [eax]
  425dc6:	cmp    al,0x6
  425dc8:	cmp    al,0x21
  425dca:	cmp    al,0x2c
  425dcc:	cmp    al,0x32
  425dce:	cmp    al,0x38
  425dd0:	cmp    al,0x45
  425dd2:	cmp    al,0x4c
  425dd4:	cmp    al,0x52
  425dd6:	cmp    al,0x69
  425dd8:	cmp    al,0x75
  425dda:	cmp    al,0x86
  425ddc:	cmp    al,0x8c
  425dde:	cmp    al,0x91
  425de0:	cmp    al,0x9d
  425de2:	cmp    al,0xa1
  425de4:	cmp    al,0xa9
  425de6:	cmp    al,0xad
  425de8:	cmp    al,0xb5
  425dea:	cmp    al,0xcb
  425dec:	cmp    al,0xd8
  425dee:	cmp    al,0xe0
  425df0:	cmp    al,0xed
  425df2:	cmp    al,0xf3
  425df4:	cmp    al,0x2
  425df6:	cmp    eax,0x3d153d0a
  425dfb:	sbb    DWORD PTR ds:0x3d2d3d23,edi
  425e01:	cmp    bh,BYTE PTR ds:0x3d653d5f
  425e07:	jno    0x425e46
  425e09:	ja     0x425e48
  425e0b:	jg     0x425e4a
  425e0d:	test   DWORD PTR ds:0x3d8f,edi
  425e13:	add    BYTE PTR [eax+0xb00000],dl
  425e19:	add    BYTE PTR [eax],al
  425e1b:	cmp    al,0x30
  425e1d:	xchg   ecx,eax
  425e1e:	xor    al,dl
  425e20:	xor    al,bl
  425e22:	xor    ch,bl
  425e24:	xor    BYTE PTR [ebx],cl
  425e26:	xor    DWORD PTR [ecx+esi*1],ebx
  425e29:	xor    DWORD PTR es:[esi],ebp
  425e2c:	xor    DWORD PTR [esi],edi
  425e2e:	xor    DWORD PTR [ecx+0x31],ebp
  425e31:	jne    0x425e64
  425e33:	nop
  425e34:	xor    DWORD PTR [edx+0x2931b531],ebx
  425e3a:	xor    ch,BYTE PTR [esi]
  425e3c:	xor    dh,BYTE PTR [edi+0x32]
  425e3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e40:	xor    dh,BYTE PTR [eax-0x41cd4bce]
  425e46:	xor    cl,al
  425e48:	xor    cl,bh
  425e4a:	xor    dl,ch
  425e4c:	xor    ah,ah
  425e4e:	xor    ch,bh
  425e50:	xor    dh,ch
  425e52:	xor    al,BYTE PTR [edx]
  425e54:	xor    ecx,DWORD PTR [ecx]
  425e56:	xor    ecx,DWORD PTR [edi]
  425e58:	xor    ebx,DWORD PTR [ecx-0x4bcb59cc]
  425e5e:	xor    al,0xc0
  425e60:	xor    al,0xe1
  425e62:	xor    al,0xeb
  425e64:	xor    al,0xf2
  425e66:	xor    al,0xf8
  425e68:	xor    al,0x7
  425e6a:	xor    eax,0x3511350c
  425e6f:	pop    ss
  425e70:	xor    eax,0x352a351d
  425e75:	ss xor eax,0x354c3545
  425e7b:	push   edx
  425e7c:	xor    eax,0x356b355f
  425e81:	jl     0x425eb8
  425e83:	xchg   ebp,eax
  425e84:	xor    eax,0x35b135a2
  425e89:	(bad)  
  425e8a:	xor    eax,0x35d835d4
  425e8f:	cmp    BYTE PTR [edi],dh
  425e91:	inc    esp
  425e92:	aaa    
  425e93:	push   esp
  425e94:	aaa    
  425e95:	pop    edi
  425e96:	aaa    
  425e97:	push   0x74376e37
  425e9c:	aaa    
  425e9d:	xor    DWORD PTR [edi],0x37933787
  425ea3:	cdq    
  425ea4:	aaa    
  425ea5:	lahf   
  425ea6:	aaa    
  425ea7:	xor    bh,BYTE PTR [ebx]
  425ea9:	test   al,0x3c
  425eab:	lods   al,BYTE PTR ds:[esi]
  425eac:	cmp    al,0x23
  425eae:	xor    edi,DWORD PTR ds:[esi]
  425eb1:	aas    
  425eb2:	ds dec esp
  425eb4:	ds push esp
  425eb6:	ds fs outs dx,BYTE PTR ds:[esi]
  425eba:	ds jnp 0x425efb
  425ebd:	sahf   
  425ebe:	mov    ds:0x3ea93e,eax
  425ec4:	rol    BYTE PTR [eax],1
  425ec6:	add    BYTE PTR [eax],bl
  425ec8:	add    BYTE PTR [eax],al
  425eca:	add    BYTE PTR [edi],bl
  425ecc:	cmp    ah,BYTE PTR [ebx]
  425ece:	cmp    ah,BYTE PTR [edi]
  425ed0:	cmp    ch,BYTE PTR [ebx]
  425ed2:	cmp    ch,BYTE PTR [edi]
  425ed4:	cmp    dh,BYTE PTR [ebx]
  425ed6:	cmp    dh,BYTE PTR [edi]
  425ed8:	cmp    bh,BYTE PTR [ebx]
  425eda:	cmp    al,BYTE PTR [eax]
  425edc:	adc    BYTE PTR [edx],al
  425ede:	add    BYTE PTR [eax],bl
  425ee0:	add    BYTE PTR [eax],al
  425ee2:	add    BYTE PTR [edi],cl
  425ee4:	cmp    edx,DWORD PTR [ebx]
  425ee6:	cmp    edx,DWORD PTR [edi]
  425ee8:	cmp    ebx,DWORD PTR [ebx]
  425eea:	cmp    ebx,DWORD PTR [edi]
  425eec:	cmp    esp,DWORD PTR [ebx]
  425eee:	cmp    esp,DWORD PTR [edi]
  425ef0:	cmp    ebp,DWORD PTR [ebx]
  425ef2:	cmp    eax,DWORD PTR [eax]
  425ef4:	push   eax
  425ef5:	add    al,0x0
  425ef7:	push   0x18000000
  425efc:	xor    BYTE PTR [eax+esi*1],bl
  425eff:	and    BYTE PTR [eax],dh
  425f01:	mov    al,ds:0xa831a431
  425f06:	xor    DWORD PTR [ecx+esi*1+0x31b431b0],ebp
  425f0d:	mov    eax,0xc031bc31
  425f12:	xor    esp,eax
  425f14:	xor    eax,edx
  425f16:	xor    esp,edx
  425f18:	xor    eax,ebx
  425f1a:	xor    esp,ebx
  425f1c:	xor    eax,esp
  425f1e:	xor    esp,esp
  425f20:	xor    eax,ebp
  425f22:	xor    esp,ebp
  425f24:	xor    eax,esi
  425f26:	xor    esp,esi
  425f28:	xor    DWORD PTR [eax],eax
  425f2a:	xor    cl,BYTE PTR [edx+esi*1]
  425f2d:	adc    al,0x32
  425f2f:	sub    BYTE PTR [edx],dh
  425f31:	pop    esp
  425f32:	xor    ah,BYTE PTR [eax+0x32]
  425f35:	je     0x425f69
  425f37:	lods   al,BYTE PTR ds:[esi]
  425f38:	xor    cl,BYTE PTR [eax+0x33]
  425f3b:	sbb    BYTE PTR [eax+eiz*1],dh
  425f3e:	xor    al,0x28
  425f40:	xor    al,0x2c
  425f42:	xor    al,0xd4
  425f44:	xor    al,0xd8
  425f46:	xor    al,0xdc
  425f48:	xor    al,0xe0
  425f4a:	xor    al,0xe4
  425f4c:	xor    al,0xe8
  425f4e:	xor    al,0xec
  425f50:	xor    al,0xf0
  425f52:	xor    al,0xf4
  425f54:	xor    al,0xf8
  425f56:	xor    al,0xfc
  425f58:	xor    al,0x0
  425f5a:	add    BYTE PTR [eax],al
  425f5c:	add    BYTE PTR [eax+eax*1],0x18
  425f60:	add    BYTE PTR [eax],al
  425f62:	add    BYTE PTR [ecx+edi*1+0x39b439b0],ch
  425f69:	mov    eax,0xc039bc39
  425f6e:	cmp    esp,eax
  425f70:	cmp    eax,ecx
  425f72:	cmp    DWORD PTR [eax],eax
  425f74:	mov    al,0x4
  425f76:	add    BYTE PTR [eax],bl
  425f78:	add    BYTE PTR [eax],al
  425f7a:	add    ah,ch
  425f7c:	ss lock ss hlt 
  425f80:	ss clc 
  425f82:	ss cld 
  425f84:	add    BYTE PTR ss:[edi],dh
  425f87:	add    al,0x37
  425f89:	or     BYTE PTR [edi],dh
	...
