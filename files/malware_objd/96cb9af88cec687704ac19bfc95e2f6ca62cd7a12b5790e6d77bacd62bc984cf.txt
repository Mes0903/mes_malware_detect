
96cb9af88cec687704ac19bfc95e2f6ca62cd7a12b5790e6d77bacd62bc984cf.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	call   0x8d6880
  401009:	add    BYTE PTR [eax],al
  40100b:	add    BYTE PTR [edx],al
  40100d:	add    BYTE PTR [eax],al
  40100f:	add    BYTE PTR [ebp+0x0],cl
  401012:	add    BYTE PTR [eax],al
  401014:	add    al,ah
  401016:	add    BYTE PTR [eax],al
  401018:	add    BYTE PTR [esi+0x554d0000],ah
  40101e:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  401024:	mov    esp,ebp
  401026:	or     ah,dh
  401028:	dec    ebp
  401029:	add    bh,al
  40102b:	add    BYTE PTR [eax],cl
  40102d:	add    BYTE PTR [eax],al
  40102f:	mov    DWORD PTR [eax],0x40f44545
  401035:	cmp    BYTE PTR [eax],al
  401037:	test   DWORD PTR [ebx-0x34070b64],ecx
  40103d:	(bad)  
  40103e:	enter  0x4d45,0xbc
  401042:	mov    edi,DWORD PTR [ebx]
  401044:	hlt    
  401045:	test   ebx,ecx
  401047:	pushf  
  401048:	enter  0x4df8,0x8b
  40104c:	mov    DWORD PTR [ebp-0x20],0x890208
  401053:	inc    ebp
  401054:	inc    ebp
  401055:	cld    
  401056:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40105c:	or     BYTE PTR [ebx+0x0],dl
  40105f:	mov    ebx,0x8bd5900
  401064:	call   DWORD PTR [ecx-0x1]
  401067:	pop    es
  401068:	mov    ch,0x33
  40106a:	dec    ebx
  40106c:	(bad)  
  40106d:	mov    eax,0x72009fa4
  401072:	push   DWORD PTR [edx]
  401074:	or     BYTE PTR [eax],al
  401076:	jmp    0xff89:0x75c84d03
  40107d:	dec    ebp
  40107e:	loopne 0x401050
  401080:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  401086:	add    BYTE PTR [ebx],dh
  401088:	mov    ecx,ebx
  40108a:	hlt    
  40108b:	add    ecx,ebx
  40108d:	enter  0x899f,0x32
  401091:	dec    ebp
  401092:	add    ecx,eax
  401094:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40109a:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4010a1:	xor    ecx,ebx
  4010a3:	retf   
  4010a4:	enter  0x4d03,0xc8
  4010a8:	mov    DWORD PTR fs:[eax],ebx
  4010ab:	lea    eax,[eax]
  4010ad:	push   esp
  4010ae:	mov    edi,edi
  4010b0:	fs (bad) 
  4010b2:	(bad)  
  4010b3:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4010b9:	push   0xffffffff
  4010bb:	and    bh,bh
  4010bd:	pop    ecx
  4010be:	inc    eax
  4010bf:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4010c5:	push   0xffffff8b
  4010c7:	pop    ecx
  4010c8:	cld    
  4010c9:	dec    ebp
  4010ca:	lea    ecx,[ecx+0x45ff08ff]
  4010d0:	mov    BYTE PTR [edx+0x1],cl
  4010d3:	add    BYTE PTR [eax],al
  4010d5:	mov    DWORD PTR [ebp+0x8],0x58008d
  4010dc:	dec    DWORD PTR [ebp-0x77]
  4010df:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4010e6:	cld    
  4010e7:	dec    ebp
  4010e8:	jne    0x40111d
  4010ea:	lea    eax,[ebx]
  4010ec:	push   eax
  4010ed:	mov    edi,edi
  4010ef:	or     BYTE PTR [ecx+0x54a845],cl
  4010f5:	add    al,ch
  4010f7:	(bad)  
  4010f8:	sub    ebp,esp
  4010fa:	add    BYTE PTR [eax],al
  4010fc:	rol    BYTE PTR [eax],0x84
  4010ff:	inc    ebp
  401100:	add    dh,BYTE PTR [esi+0x0]
  401103:	add    BYTE PTR [ebp-0x73],al
  401106:	mov    ebp,DWORD PTR [esp+edx*4]
  401109:	inc    DWORD PTR [eax]
  40110b:	lea    ecx,[ebx-0x30074f4]
  401111:	call   0x411c96
  401116:	add    BYTE PTR [ebp+0x0],cl
  401119:	jne    0x40115c
  40111b:	dec    DWORD PTR [ebx-0x76210314]
  401121:	dec    ebp
  401122:	add    DWORD PTR [ebp+0x0],esi
  401125:	(bad)  
  401126:	xchg   ebp,eax
  401127:	loopne 0x401128
  401129:	inc    eax
  40112a:	inc    DWORD PTR [eax]
  40112c:	mov    ecx,DWORD PTR [ebp-0x4]
  40112f:	xor    edx,DWORD PTR [edx+0x7201b8]
  401135:	add    BYTE PTR [edx],dl
  401137:	enter  0x4d90,0x0
  40113b:	mov    eax,DWORD PTR [eax]
  40113d:	hlt    
  40113e:	add    al,0xa5
  401140:	mov    al,0xff
  401142:	add    bh,bh
  401144:	add    BYTE PTR [ebx],dh
  401146:	inc    DWORD PTR [ebx]
  401148:	sbb    al,0x89
  40114a:	jne    0x401124
  40114c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  401152:	mov    eax,DWORD PTR [ebp-0xff0048]
  401158:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40115f:	inc    DWORD PTR [ebp-0x75]
  401162:	fisttp QWORD PTR [esi+ebp*8]
  401165:	test   DWORD PTR [esi-0x1],esp
  401168:	inc    ebp
  401169:	(bad)  
  40116a:	aas    
  40116b:	inc    ebp
  40116c:	(bad)  
  40116d:	lea    edi,[esp+eiz*2-0x1]
  401171:	push   DWORD PTR [edi]
  401173:	mov    DWORD PTR ds:0x8000c7a0,edi
  401179:	mov    ebp,esp
  40117b:	cld    
  40117c:	jmp    0xdfff:0xeeff458d
  401183:	mov    bh,al
  401185:	add    DWORD PTR [eax-0x13ba1500],ecx
  40118b:	inc    DWORD PTR [ebp-0x4]
  40118e:	xlat   BYTE PTR ds:[ebx]
  40118f:	lea    edi,[edi]
  401191:	inc    edi
  401193:	jmp    FWORD PTR [eax-0x78]
  401196:	inc    DWORD PTR [ecx]
  401198:	aaa    
  401199:	add    BYTE PTR ds:0x6c00c757,bh
  40119f:	test   edi,edi
  4011a1:	pandn  mm0,mm5
  4011a4:	aas    
  4011a5:	add    bh,al
  4011a7:	mov    esi,DWORD PTR [eax-0x4]
  4011aa:	inc    DWORD PTR [eax+0xdf01ee]
  4011b0:	(bad)  
  4011b1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4011b5:	mov    esp,ebx
  4011b7:	xchg   esp,eax
  4011b8:	rol    DWORD PTR [eax],cl
  4011ba:	(bad)  
  4011bb:	mov    edi,DWORD PTR [eax+0x3]
  4011be:	(bad)  
  4011bf:	cmp    al,0xd7
  4011c1:	dec    ebp
  4011c2:	ror    DWORD PTR [ebx+0x2ad8e8],0x0
  4011c9:	lea    ecx,[ebx-0x7f0003b4]
  4011cf:	push   edx
  4011d0:	add    DWORD PTR [ebp+0x0],edx
  4011d3:	mov    esi,DWORD PTR [eax]
  4011d5:	mov    WORD PTR [edx+0x0],gs
  4011d8:	add    BYTE PTR [ebx-0x778afc7b],cl
  4011de:	mov    eax,DWORD PTR [eax]
  4011e0:	cld    
  4011e1:	push   0x7d
  4011e3:	dec    DWORD PTR [ebx+0xd88c]
  4011e9:	push   edx
  4011ea:	mov    edx,DWORD PTR [ecx-0x4]
  4011ed:	call   DWORD PTR [eax+0x7d01fc]
  4011f3:	mov    ecx,DWORD PTR [ecx+0x509000fc]
  4011f9:	add    DWORD PTR [esi+0x0],edx
  4011fc:	test   DWORD PTR [ebp+0x75],eax
  4011ff:	jmp    0x947d:0xc7fce28b
  401206:	mov    ebp,ebx
  401208:	fcom   st(7)
  40120a:	add    bh,al
  40120c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  401212:	add    edi,edi
  401214:	add    bh,bh
  401216:	addr16 in eax,dx
  401218:	add    dh,dl
  40121a:	push   eax
  40121b:	inc    ebp
  40121c:	push   esi
  40121d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  401223:	test   BYTE PTR [ebx],dh
  401225:	(bad)  
  401226:	add    eax,0x4572c8
  40122b:	jecxz  0x4011ee
  40122d:	rol    DWORD PTR [edi+eax*8-0x22ff73ff],cl
  401234:	inc    esi
  401235:	jle    0x401237
  401237:	test   edi,eax
  401239:	jmp    esp
  40123b:	inc    DWORD PTR [eax]
  40123d:	in     eax,dx
  40123e:	add    dh,dl
  401240:	jne    0x4011c7
  401242:	mov    edi,edi
  401244:	cld    
  401245:	inc    DWORD PTR [ebp-0x14]
  401248:	mov    ebp,edx
  40124a:	mov    ah,0x85
  40124c:	add    bh,bh
  40124e:	call   0x1163d52
  401253:	enter  0x858b,0xfc
  401257:	inc    DWORD PTR [eax+0xeb01ff]
  40125d:	in     al,dx
  40125e:	xor    BYTE PTR [ebp-0xff0020],al
  401264:	mov    ebx,ebp
  401266:	cld    
  401267:	jle    0x4011f2
  401269:	mov    eax,0x50000001
  40126e:	add    DWORD PTR [ebp+0x45],eax
  401271:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  401277:	dec    DWORD PTR [ebx-0x3fd80318]
  40127d:	add    BYTE PTR [ebp-0xbf0040],dl
  401283:	inc    ebp
  401284:	das    
  401285:	mov    eax,DWORD PTR [eax]
  401287:	cld    
  401288:	push   eax
  401289:	mov    al,0x45
  40128b:	add    DWORD PTR [ebx+0x459c00],ecx
  401291:	mov    edi,edi
  401293:	mov    eax,0xe80800ff
  401298:	inc    ebp
  401299:	sub    cl,BYTE PTR [ebx-0x47000400]
  40129f:	add    al,0x1
  4012a1:	rol    BYTE PTR [eax],0x1e
  4012a4:	jne    0x4012eb
  4012a6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4012ac:	inc    DWORD PTR [ecx]
  4012ae:	call   0x853cb3
  4012b3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4012b9:	call   0x403cbf
  4012be:	xor    bh,bh
  4012c0:	push   edi
  4012c1:	adc    BYTE PTR [ebx-0x747423bb],al
  4012c7:	loopne 0x4012a5
  4012c9:	ret    
  4012ca:	loopne 0x40126b
  4012cc:	xor    DWORD PTR [edx],0x31
  4012cf:	cmp    edi,edi
  4012d1:	bswap  esp
  4012d3:	rol    BYTE PTR gs:[eax],0x5
  4012d7:	jmp    0x12b1421
  4012dc:	mov    eax,DWORD PTR [ebp-0x4]
  4012df:	add    BYTE PTR [eax+0xff0100],bh
  4012e5:	cld    
  4012e6:	jne    0x401365
  4012e8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4012ee:	lds    eax,FWORD PTR [ecx]
  4012f0:	add    BYTE PTR [eax],al
  4012f2:	push   eax
  4012f3:	cs inc ebp
  4012f5:	add    BYTE PTR [ebx+0x459850],cl
  4012fb:	mov    edi,edi
  4012fd:	test   al,0xff
  4012ff:	add    BYTE PTR [eax],cl
  401301:	inc    DWORD PTR [ebp-0x18]
  401304:	jmp    DWORD PTR [esi]
  401306:	fadd   QWORD PTR [eax]
  401308:	jge    0x401357
  40130a:	adc    BYTE PTR [ebx+0x459cb9],cl
  401310:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  401316:	lahf   
  401317:	mov    eax,0x30132
  40131c:	lea    esi,[ebp+0x2c]
  40131f:	xor    edi,edi
  401321:	(bad)  
  401322:	call   0x13f3c8f
  401327:	call   0x1343db7
  40132c:	jne    0x4012b9
  40132e:	xor    edi,esp
  401330:	add    eax,DWORD PTR [eax+0xc018d]
  401336:	push   DWORD PTR [eax]
  401338:	call   0xc93c94
  40133d:	int3   
  40133e:	inc    DWORD PTR [ebp-0x14]
  401341:	mov    ecx,DWORD PTR [ebp-0x28]
  401344:	xor    eax,DWORD PTR [eax]
  401346:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40134c:	(bad)  
  40134d:	xchg   ebp,eax
  40134e:	in     al,0xff
  401350:	add    bh,bh
  401352:	add    BYTE PTR [eax*2+0x8508b00],al
  401359:	inc    ebp
  40135a:	ret    
  40135b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff61]
  401362:	mov    edi,edi
  401364:	or     BYTE PTR [eax],cl
  401366:	inc    ebp
  401367:	test   DWORD PTR gs:[eax],eax
  40136a:	je     0x4013b1
  40136c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  401372:	xor    edx,DWORD PTR [eax-0x73]
  401375:	push   ebp
  401376:	or     BYTE PTR [ebp+0x21007572],al
  40137c:	inc    ebp
  40137d:	in     al,dx
  40137e:	mov    ebp,DWORD PTR [eax]
  401380:	mov    esp,0x618bc345
  401385:	fmul   st,st(5)
  401387:	add    BYTE PTR [ebx],ch
  401389:	mov    eax,DWORD PTR [ebx]
  40138b:	cld    
  40138c:	loopne 0x40134e
  40138e:	inc    ebp
  40138f:	push   ebp
  401390:	cmp    ebp,eax
  401392:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  401399:	cld    
  40139a:	fadd   DWORD PTR [eax+0x3b014d]
  4013a0:	jne    0x4013d2
  4013a2:	push   0xf8898557
  4013a7:	in     al,dx
  4013a8:	jne    0x4013ef
  4013aa:	lea    eax,[ebx+0x72e8dcc8]
  4013b0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4013b6:	jmp    0x4013eb
  4013b8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4013be:	xor    eax,edi
  4013c0:	adc    DWORD PTR [ebp-0xcd0061],0x8b9031
  4013ca:	rcl    BYTE PTR [eax-0x40],1
  4013cd:	inc    ebp
  4013ce:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4013d6:	inc    ebp
  4013d7:	xchg   ebp,eax
  4013d8:	ud0    ebp,DWORD PTR [ebx]
  4013db:	inc    DWORD PTR [eax]
  4013dd:	jp     0x401455
  4013df:	add    BYTE PTR [edx+0x1f558050],cl
  4013e5:	mov    ecx,DWORD PTR [esp+esi*8]
  4013e8:	inc    eax
  4013e9:	retf   
  4013ea:	inc    ebp
  4013eb:	iret   
  4013ec:	jb     0x4013b6
  4013ee:	mov    eax,DWORD PTR [edi]
  4013f0:	enter  0x4545,0x1
  4013f4:	cmp    BYTE PTR [eax],al
  4013f6:	pushf  
  4013f7:	mov    ecx,DWORD PTR [ecx+0x3b4df0bc]
  4013fd:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  401404:	dec    ebp
  401405:	add    BYTE PTR [ebx],dh
  401407:	inc    ebp
  401408:	mov    DWORD PTR [ebx-0x3f601b4c],ecx
  40140e:	xor    dl,BYTE PTR [edx]
  401410:	add    eax,DWORD PTR [ebp-0x77]
  401413:	mov    eax,esp
  401415:	fmul   DWORD PTR [ebp-0x3d]
  401418:	xor    eax,DWORD PTR [ebx+eax*1+0x832899f]
  40141f:	mov    DWORD PTR [ebp-0x28],eax
  401422:	fadd   DWORD PTR [ebp-0x64]
  401425:	xor    eax,edi
  401427:	mov    ecx,0xff858db0
  40142c:	clc    
  40142d:	enter  0x4d45,0x3d
  401431:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  401438:	test   esi,edi
  40143a:	clc    
  40143b:	inc    DWORD PTR [ebp+0x45]
  40143e:	aas    
  40143f:	mov    ebx,DWORD PTR [eax+ecx*1+0x16a8c8c7]
  401446:	test   DWORD PTR [eax],edi
  401448:	clc    
  401449:	pushf  
  40144a:	inc    ebp
  40144b:	push   DWORD PTR [ecx]
  40144d:	cld    
  40144e:	pushf  
  40144f:	inc    ebp
  401450:	mov    edx,DWORD PTR [eax-0x28]
  401453:	ins    DWORD PTR es:[edi],dx
  401454:	push   ebp
  401455:	add    BYTE PTR [ebx],dh
  401457:	mov    DWORD PTR [ebx],eax
  401459:	sar    BYTE PTR [ebx],1
  40145b:	adc    BYTE PTR [edi],cl
  40145d:	dec    ebp
  40145e:	adc    al,0x8b
  401460:	add    al,dl
  401462:	jmp    0x1011632
  401467:	jb     0x4014b6
  401469:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40146f:	xor    ecx,DWORD PTR [ebp+0x3b]
  401472:	xor    ecx,DWORD PTR [edi]
  401474:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  401478:	(bad)  
  40147a:	clc    
  40147b:	enter  0x8400,0x8b
  40147f:	pop    es
  401480:	mov    al,0x0
  401482:	push   ebp
  401483:	push   cs
  401484:	xor    ecx,eax
  401486:	xor    esp,ecx
  401488:	add    ebp,DWORD PTR [eax]
  40148a:	add    esi,DWORD PTR [eax]
  40148c:	(bad)  
  40148e:	retf   0x55c8
  401491:	repnz mov eax,DWORD PTR [ebp-0x10]
  401495:	(bad)  
  401496:	cli    
  401497:	fdivr  st,st(1)
  401499:	test   DWORD PTR [eax+edi*8],ecx
  40149c:	dec    ebp
  40149d:	inc    ebp
  40149e:	xor    edi,DWORD PTR [eax-0x7167afd]
  4014a4:	add    BYTE PTR [ebp+0x0],al
  4014a7:	mov    ecx,DWORD PTR [ebp-0x28]
  4014aa:	mov    ecx,ebx
  4014ac:	clc    
  4014ad:	jne    0x40147a
  4014af:	mov    esi,0xd672d3
  4014b4:	into   
  4014b5:	into   
  4014b6:	scas   eax,DWORD PTR es:[edi]
  4014b7:	dec    ebp
  4014b8:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4014be:	sub    ecx,esi
  4014c0:	cmp    ecx,DWORD PTR [ebp+0x77]
  4014c3:	(bad)  
  4014c4:	mov    edi,eax
  4014c6:	mov    al,0x85
  4014c8:	mov    eax,edi
  4014ca:	add    BYTE PTR [ebp-0x75],al
  4014cd:	cmp    ah,BYTE PTR [esp+ebx*4-0x47cc38ab]
  4014d4:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4014da:	(bad)  
  4014dc:	retf   0x559c
  4014df:	(bad)  
  4014e0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4014e7:	inc    ebp
  4014e8:	add    eax,0xeb9c4d3e
  4014ed:	(bad)  
  4014ee:	mov    ecx,esp
  4014f0:	lods   al,BYTE PTR ds:[esi]
  4014f1:	test   DWORD PTR [ebp-0x8],edx
  4014f4:	xor    ecx,DWORD PTR [ebp+0x33]
  4014f7:	mov    eax,DWORD PTR [ebx]
  4014f9:	lock add ecx,ebx
  4014fc:	bswap  esi
  4014fe:	retf   0x55d1
  401501:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  401507:	jmp    0x401502
  401509:	add    BYTE PTR ds:0xebc44d8b,al
  40150f:	push   ebp
  401510:	mov    ebp,DWORD PTR [ebx]
  401512:	test   al,0x8b
  401514:	push   ebp
  401515:	clc    
  401516:	xor    ecx,ebx
  401518:	xor    ecx,esi
  40151a:	add    edx,ecx
  40151c:	add    eax,DWORD PTR [edx+0xca010f]
  401522:	push   ebp
  401523:	dec    ebp
  401524:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40152a:	stc    
  40152b:	rol    DWORD PTR ds:0xebce4dd6,cl
  401531:	scas   eax,DWORD PTR es:[edi]
  401532:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  401538:	xor    ebp,DWORD PTR [ebx]
  40153a:	xor    edi,DWORD PTR [ebx]
  40153c:	add    esi,DWORD PTR [edi+0x3]
  40153f:	mov    ecx,DWORD PTR [edi]
  401541:	clc    
  401542:	retf   0x55cb
  401545:	into   
  401546:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40154d:	mov    eax,0x3376554d
  401552:	mov    esi,DWORD PTR [ebx]
  401554:	int3   
  401555:	add    edx,DWORD PTR [ebp+0x3]
  401558:	xor    ecx,DWORD PTR [edi]
  40155a:	xor    ecx,edx
  40155c:	add    edx,DWORD PTR [ebp+0x3]
  40155f:	mov    ecx,DWORD PTR [edi]
  401561:	lock retf 0x4dfa
  401565:	stc    
  401566:	mov    ecx,DWORD PTR [eax]
  401568:	or     BYTE PTR [ebp+0x4d],cl
  40156b:	jmp    0x10415fb
  401570:	dec    ebp
  401571:	dec    ebp
  401572:	(bad)  
  401573:	mov    ebx,esp
  401575:	clc    
  401576:	test   ebx,ecx
  401578:	clc    
  401579:	ror    DWORD PTR [ebp-0x2a],cl
  40157c:	mov    esi,ecx
  40157e:	call   0x3acb5b32
  401583:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40158a:	retf   
  40158b:	ja     0x40155b
  40158d:	mov    ebp,DWORD PTR [eax-0x48]
  401590:	dec    ebp
  401591:	xor    ecx,DWORD PTR [di+0x3]
  401595:	mov    esp,esp
  401597:	clc    
  401598:	push   ebp
  401599:	retf   
  40159a:	mov    dl,bl
  40159c:	adc    esi,edx
  40159e:	jb     0x40156e
  4015a0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4015a6:	call   0x4d6be128
  4015ab:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  4015b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015b2:	lahf   
  4015b3:	inc    ebp
  4015b4:	xor    cl,BYTE PTR [ebp-0x78]
  4015b7:	mov    edx,edi
  4015b9:	clc    
  4015ba:	dec    ebp
  4015bb:	retf   
  4015bc:	mov    edx,ebx
  4015be:	call   0x560ee999
  4015c3:	scas   eax,DWORD PTR es:[edi]
  4015c4:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4015ca:	lahf   
  4015cb:	sub    esi,DWORD PTR [edx]
  4015cd:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4015d3:	lods   al,BYTE PTR ds:[esi]
  4015d4:	xor    esp,DWORD PTR [ebx]
  4015d6:	add    ecx,DWORD PTR [ebp-0x1c]
  4015d9:	mov    edi,DWORD PTR [ebp-0x8]
  4015dc:	mov    bl,cl
  4015de:	cmp    dl,bl
  4015e0:	jb     0x4015b0
  4015e2:	add    dh,dl
  4015e4:	dec    ebp
  4015e5:	scas   eax,DWORD PTR es:[edi]
  4015e6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  4015ec:	shr    DWORD PTR [ebx],cl
  4015ee:	into   
  4015ef:	cmp    edx,esi
  4015f1:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  4015f7:	dec    ebp
  4015f8:	dec    ebp
  4015f9:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  4015ff:	retf   
  401600:	xor    edx,esi
  401602:	add    ecx,esi
  401604:	imul   ecx,edx
  401607:	mov    DWORD PTR [ebp+0x8],edx
  40160a:	xor    ecx,DWORD PTR [ebp+0x2b]
  40160d:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  401613:	add    esi,DWORD PTR [ebx]
  401615:	mov    ah,0x3
  401617:	inc    ebp
  401618:	(bad)  
  40161b:	pushf  
  40161c:	jge    0x4015a7
  40161e:	xor    ebx,eax
  401620:	sub    eax,DWORD PTR [ebp-0x73]
  401623:	(bad)  
  401624:	cmp    al,al
  401626:	jb     0x4015ad
  401628:	add    al,bh
  40162a:	ror    DWORD PTR [ebp-0x7a],1
  40162d:	xor    edi,edi
  40162f:	add    edi,edi
  401631:	jmp    0x401680
  401633:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401639:	dec    ebp
  40163a:	into   
  40163b:	mov    ebp,DWORD PTR [edi-0x23737428]
  401641:	lahf   
  401642:	shl    DWORD PTR [edx],cl
  401644:	retf   0x5588
  401647:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40164d:	add    eax,DWORD PTR [eax]
  40164f:	in     al,0x4d
  401651:	push   ebp
  401652:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  401658:	popa   
  401659:	add    ch,cl
  40165b:	dec    ebp
  40165c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  401662:	dec    ebp
  401663:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  401669:	jge    0x401639
  40166b:	mov    BYTE PTR [edi+0xf723b3a],ch
  401671:	add    cl,dh
  401673:	dec    ebp
  401674:	dec    DWORD PTR [ebx-0x2c032375]
  40167a:	adc    BYTE PTR [ebp+0x1],0x8b
  40167e:	add    al,bl
  401680:	jge    0x40160e
  401682:	push   0xffffff9f
  401684:	push   0x8b3032
  401689:	shl    BYTE PTR [ebp+0x55],0x6a
  40168d:	xor    edi,edi
  40168f:	xor    edx,DWORD PTR [ebx+eax*1]
  401692:	inc    ebp
  401693:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  401699:	dec    ebp
  40169a:	or     BYTE PTR [ecx+0x4dc8e483],cl
  4016a0:	jbe    0x40162d
  4016a2:	mov    ebp,esp
  4016a4:	ror    bl,1
  4016a6:	enter  0x14ce,0xaf
  4016aa:	dec    DWORD PTR [ebx-0x2cef17f8]
  4016b0:	push   ebp
  4016b1:	retf   0x5540
  4016b4:	push   ebp
  4016b5:	mov    esi,DWORD PTR [edx-0x1c]
  4016b8:	mov    edx,ebx
  4016ba:	cld    
  4016bb:	(bad)  
  4016bc:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4016c3:	sti    
  4016c4:	add    dh,cl
  4016c6:	push   0xffffff94
  4016c8:	call   FWORD PTR [edi+0x3b5032d0]
  4016ce:	mov    ecx,DWORD PTR [edi]
  4016d0:	int3   
  4016d1:	pop    esi
  4016d2:	inc    ebp
  4016d3:	dec    DWORD PTR [ecx+0x45e8c88b]
  4016d9:	push   ebp
  4016da:	xor    esi,DWORD PTR [ebx]
  4016dc:	mov    DWORD PTR [ebx],0xcace0f9c
  4016e2:	aas    
  4016e3:	push   ebp
  4016e4:	inc    ebp
  4016e5:	xor    eax,esi
  4016e7:	add    eax,esi
  4016e9:	mov    eax,DWORD PTR [ebx]
  4016eb:	(bad)  
  4016ec:	jmp    0x40167a
  4016ee:	mov    bl,BYTE PTR [edi-0x7674cdfb]
  4016f4:	rol    ah,1
  4016f6:	mov    esi,0xf133104d
  4016fb:	mov    edx,0xff348d80
  401700:	mov    dh,0xd1
  401702:	cmp    edx,DWORD PTR [ebp+0xf]
  401705:	mov    eax,DWORD PTR [edx-0x20]
  401708:	add    BYTE PTR [ebp-0x75],bh
  40170b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  401712:	lahf   
  401713:	retf   0x8632
  401716:	cmp    ebp,0x8
  401719:	call   ebx
  40171b:	inc    ebp
  40171c:	inc    ebp
  40171d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  401723:	mov    edi,DWORD PTR [eax]
  401725:	enter  0x49c,0xc7
  401729:	add    al,al
  40172b:	add    bl,al
  40172d:	(bad)  
  40172e:	clc    
  40172f:	enter  0x45,0x38
  401733:	push   eax
  401734:	pushf  
  401735:	mov    edi,eax
  401737:	int3   
  401738:	or     al,al
  40173a:	test   DWORD PTR [edi],edi
  40173c:	clc    
  40173d:	gs inc ebp
  40173f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  401745:	push   ss
  401746:	xor    ecx,DWORD PTR [ebp+0x3]
  401749:	sub    edx,DWORD PTR [ecx-0x76]
  40174c:	dec    ebp
  40174d:	add    DWORD PTR [ebx+0x88d845],ecx
  401753:	mov    esi,DWORD PTR [ebx]
  401755:	or     BYTE PTR [ebx],al
  401757:	cmp    edx,DWORD PTR [ecx-0x38]
  40175a:	dec    ebp
  40175b:	out    dx,eax
  40175c:	xor    eax,DWORD PTR [ebp+0x3]
  40175f:	mov    edx,DWORD PTR [ecx-0x28]
  401762:	dec    ebp
  401763:	add    BYTE PTR [ebx],dh
  401765:	push   0x518003
  40176a:	push   eax
  40176b:	add    BYTE PTR [ebx-0x300748b],cl
  401771:	sbb    BYTE PTR [ebp+0x45],cl
  401774:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40177a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  401780:	dec    ebp
  401781:	inc    ebp
  401782:	xor    eax,esi
  401784:	add    eax,esi
  401786:	push   ecx
  401787:	(bad)  
  401788:	dec    ebp
  401789:	mov    al,ds:0x35e03dff
  40178e:	retf   
  40178f:	(bad)  
  401790:	into   
  401791:	sub    bh,bh
  401793:	dec    esp
  401794:	adc    al,0x9c
  401796:	inc    ebp
  401797:	push   ebp
  401798:	test   DWORD PTR [edi],ecx
  40179a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab5ff80]
  4017a1:	jmp    0xc9b926b5
  4017a6:	add    cl,dl
  4017a8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4017b2:	cmp    cl,BYTE PTR [ebp+0x728b089c]
  4017b8:	rol    BYTE PTR [eax],0x59
  4017bb:	clc    
  4017bc:	popa   
  4017bd:	jb     0x4017c6
  4017bf:	mov    eax,DWORD PTR [ebp-0x30]
  4017c2:	xor    al,0x40
  4017c4:	sub    al,0xc7
  4017c6:	mov    ah,ch
  4017c8:	add    DWORD PTR [ebp+0x4534f845],eax
  4017ce:	sub    al,0x89
  4017d0:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  4017d7:	mov    ch,0xff
  4017d9:	clc    
  4017da:	add    DWORD PTR [ebp+0x60],0x3c
  4017de:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  4017e5:	inc    ebp
  4017e6:	dec    DWORD PTR [ebx-0x341ff701]
  4017ec:	test   esi,ecx
  4017ee:	dec    DWORD PTR [ebx-0x7f8a3301]
  4017f4:	push   eax
  4017f5:	add    DWORD PTR [ebp+0x0],eax
  4017f8:	dec    ebx
  4017fa:	or     al,0xce
  4017fc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  401803:	into   
  401804:	add    BYTE PTR [ebx-0x34ff1400],cl
  40180a:	mov    esi,ecx
  40180c:	sar    bh,0x45
  40180f:	adc    al,0x8b
  401811:	clc    
  401812:	fadd   DWORD PTR [ebp+0x0]
  401815:	mov    ebp,DWORD PTR [edx+0x8]
  401818:	push   edi
  401819:	adc    BYTE PTR [eax+0x1],0x83
  40181d:	add    al,al
  40181f:	retf   
  401820:	mov    ecx,esi
  401822:	cld    
  401823:	mov    eax,DWORD PTR [eax+0xcb01cc]
  401829:	into   
  40182a:	add    BYTE PTR [ebx+0x756aec00],cl
  401830:	jne    0x401865
  401832:	inc    DWORD PTR [ebx]
  401834:	rcl    BYTE PTR [ecx+0x50],1
  401837:	push   eax
  401838:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40183e:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  401845:	sar    bh,0x84
  401848:	or     BYTE PTR [ebx],al
  40184a:	push   eax
  40184b:	add    BYTE PTR [ebx+0x453dc845],cl
  401851:	pushf  
  401852:	cmp    bh,al
  401854:	pushf  
  401855:	mov    ah,0x89
  401857:	test   eax,ebp
  401859:	clc    
  40185a:	inc    ebp
  40185b:	inc    ebp
  40185c:	mov    DWORD PTR [eax+eax*8],esi
  40185f:	sub    al,0x3b
  401861:	mov    BYTE PTR [ebx+ecx*4+0x59d8ec89],bl
  401868:	dec    ebp
  401869:	popa   
  40186a:	xor    eax,DWORD PTR [edi+0x3]
  40186d:	mov    ecx,DWORD PTR [ecx+0x4d59f4b4]
  401873:	popa   
  401874:	xor    eax,DWORD PTR [edi+0x3]
  401877:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40187e:	fsub   DWORD PTR [ebp-0x380064]
  401884:	int3   
  401885:	lea    eax,[ebp+0x45fff860]
  40188b:	push   eax
  40188c:	cmp    eax,0xc78d9c75
  401891:	pop    esp
  401892:	lods   al,BYTE PTR ds:[esi]
  401893:	inc    DWORD PTR [ebp+0x4508f8ff]
  401899:	mov    edi,DWORD PTR [edi]
  40189b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4018a2:	test   DWORD PTR [edi-0x8],edx
  4018a5:	inc    esi
  4018a6:	inc    ebp
  4018a7:	add    BYTE PTR [ecx],dh
  4018a9:	push   0x8b809c
  4018ae:	in     al,dx
  4018af:	inc    ebp
  4018b0:	push   ebp
  4018b1:	mov    esi,DWORD PTR [ebx]
  4018b3:	cld    
  4018b4:	add    eax,DWORD PTR [eax+0xf013b]
  4018ba:	adc    al,0x0
  4018bc:	add    bh,bh
  4018be:	jmp    0xbd19db
  4018c3:	add    BYTE PTR [ebp+0x45],cl
  4018c6:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4018cc:	dec    ebp
  4018cd:	push   0x38033
  4018d2:	cmp    eax,DWORD PTR [eax]
  4018d4:	unpcklps xmm7,xmm0
  4018d7:	jne    0x4018d9
  4018d9:	dec    DWORD PTR [ebx+0x5545cc18]
  4018df:	mov    DWORD PTR [ebx],esi
  4018e1:	shl    BYTE PTR [ebx],1
  4018e3:	inc    ebp
  4018e4:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4018ea:	retf   0x5575
  4018ed:	dec    DWORD PTR [ebx-0x5ba17e8]
  4018f3:	(bad)  
  4018f4:	stc    
  4018f5:	in     al,dx
  4018f6:	or     al,0x85
  4018f8:	dec    ebp
  4018f9:	clc    
  4018fa:	xor    eax,DWORD PTR [ebp+0x3]
  4018fd:	mov    ebp,ecx
  4018ff:	rol    BYTE PTR [eax],1
  401901:	inc    ebp
  401902:	add    BYTE PTR [eax-0x7747ab3],bh
  401908:	clc    
  401909:	inc    ebp
  40190a:	retf   
  40190b:	mov    edx,ebx
  40190d:	in     al,dx
  40190e:	(bad)  
  40190f:	retf   
  401910:	into   
  401911:	into   
  401912:	scas   eax,DWORD PTR es:[edi]
  401913:	dec    ebp
  401914:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40191a:	sub    ecx,esi
  40191c:	cmp    ecx,DWORD PTR [ebp+0x77]
  40191f:	(bad)  
  401920:	mov    edi,eax
  401922:	int3   
  401923:	test   DWORD PTR [ecx-0x74baff08],ecx
  401929:	cmp    ch,BYTE PTR [esp+ebx*4-0x57cc38ab]
  401930:	xor    eax,DWORD PTR [ebp+0x4503f803]
  401936:	(bad)  
  401938:	retf   0x559c
  40193b:	(bad)  
  40193c:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  401943:	inc    ebp
  401944:	add    eax,0xeb9c4d3e
  401949:	(bad)  
  40194a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  401950:	xor    ecx,DWORD PTR [ebp+0x33]
  401953:	mov    eax,DWORD PTR [ebx]
  401955:	call   0xce4fe45d
  40195a:	retf   0x55d1
  40195d:	test   BYTE PTR [ebx-0x5ff17fe],cl
  401963:	jmp    0x40195e
  401965:	add    BYTE PTR ds:0xebf44d8b,al
  40196b:	push   ebp
  40196c:	mov    ebp,DWORD PTR [ebx]
  40196e:	mov    eax,0x33f8558b
  401973:	retf   
  401974:	xor    ecx,esi
  401976:	add    edx,ecx
  401978:	add    eax,DWORD PTR [edx+0xca010f]
  40197e:	push   ebp
  40197f:	dec    ebp
  401980:	mov    ecx,DWORD PTR [ebx-0x34050718]
  401986:	stc    
  401987:	rol    DWORD PTR ds:0xebce4dd6,cl
  40198d:	scas   eax,DWORD PTR es:[edi]
  40198e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  401994:	xor    ebp,DWORD PTR [ebx]
  401996:	xor    edi,DWORD PTR [ebx]
  401998:	add    esi,DWORD PTR [edi+0x3]
  40199b:	mov    ecx,DWORD PTR [edi]
  40199d:	clc    
  40199e:	retf   0x55cb
  4019a1:	into   
  4019a2:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4019a9:	test   al,0x4d
  4019ab:	push   ebp
  4019ac:	jbe    0x4019e1
  4019ae:	mov    esi,DWORD PTR [ebx]
  4019b0:	mov    al,0x3
  4019b2:	push   ebp
  4019b3:	add    esi,DWORD PTR [ebx]
  4019b5:	rdpmc  
  4019b7:	retf   0x5503
  4019ba:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4019c0:	dec    ebp
  4019c1:	stc    
  4019c2:	mov    ecx,DWORD PTR [eax]
  4019c4:	or     BYTE PTR [ebp+0x4d],cl
  4019c7:	jmp    0x1341a57
  4019cc:	dec    ebp
  4019cd:	dec    ebp
  4019ce:	(bad)  
  4019cf:	mov    ebx,esp
  4019d1:	clc    
  4019d2:	test   ebx,ecx
  4019d4:	clc    
  4019d5:	ror    DWORD PTR [ebp-0x2a],cl
  4019d8:	mov    esi,ecx
  4019da:	lock scas eax,DWORD PTR es:[edi]
  4019dc:	inc    ebp
  4019dd:	mov    edi,DWORD PTR [edx]
  4019df:	hlt    
  4019e0:	pushf  
  4019e1:	jge    0x40196e
  4019e3:	sub    ebx,esp
  4019e5:	cmp    ecx,ebx
  4019e7:	ja     0x4019b7
  4019e9:	mov    ebp,DWORD PTR [eax-0x58]
  4019ec:	dec    ebp
  4019ed:	xor    ecx,DWORD PTR [di+0x3]
  4019f1:	mov    esp,esp
  4019f3:	clc    
  4019f4:	push   ebp
  4019f5:	retf   
  4019f6:	mov    dl,bl
  4019f8:	adc    esi,edx
  4019fa:	jb     0x4019ca
  4019fc:	add    BYTE PTR [edi-0xb7474b3],ch
  401a02:	lock jge 0x4019d0
  401a05:	sub    ecx,DWORD PTR [ebp+0x3b]
  401a08:	mov    esi,DWORD PTR [edi-0x20]
  401a0b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459f]
  401a12:	mov    BYTE PTR [ebx-0x34b20729],cl
  401a18:	mov    edx,ebx
  401a1a:	lock (bad) 
  401a1c:	ror    esi,cl
  401a1e:	push   ebp
  401a1f:	scas   eax,DWORD PTR es:[edi]
  401a20:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  401a26:	lahf   
  401a27:	sub    esi,DWORD PTR [edx]
  401a29:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  401a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a30:	xor    esp,DWORD PTR [ebx]
  401a32:	add    ecx,DWORD PTR [ebp-0x1c]
  401a35:	mov    edi,DWORD PTR [ebp-0x8]
  401a38:	mov    bl,cl
  401a3a:	cmp    dl,bl
  401a3c:	jb     0x401a0c
  401a3e:	add    dh,dl
  401a40:	dec    ebp
  401a41:	scas   eax,DWORD PTR es:[edi]
  401a42:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  401a48:	shr    DWORD PTR [ebx],cl
  401a4a:	into   
  401a4b:	cmp    edx,esi
  401a4d:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  401a53:	dec    ebp
  401a54:	dec    ebp
  401a55:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  401a5b:	retf   
  401a5c:	xor    edx,esi
  401a5e:	add    ecx,esi
  401a60:	imul   ecx,edx
  401a63:	mov    DWORD PTR [ebp+0x8],edx
  401a66:	xor    ecx,DWORD PTR [ebp+0x2b]
  401a69:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  401a6f:	add    esi,DWORD PTR [ebx]
  401a71:	rol    BYTE PTR [ebx],0x45
  401a74:	(bad)  
  401a77:	pushf  
  401a78:	jge    0x401a03
  401a7a:	xor    esp,eax
  401a7c:	sub    eax,DWORD PTR [ebp-0x73]
  401a7f:	(bad)  
  401a80:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  401a87:	dec    ebp
  401a88:	xchg   BYTE PTR [ebx],dh
  401a8a:	inc    DWORD PTR [ebx]
  401a8c:	(bad)  
  401a8d:	jmp    0x401adc
  401a8f:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401a95:	dec    ebp
  401a96:	into   
  401a97:	mov    ebp,DWORD PTR [edi-0x23737420]
  401a9d:	lahf   
  401a9e:	shl    DWORD PTR [edx],cl
  401aa0:	retf   0x5588
  401aa3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  401aa9:	add    eax,DWORD PTR [eax]
  401aab:	in     al,0x4d
  401aad:	push   ebp
  401aae:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  401ab4:	popa   
  401ab5:	add    ch,cl
  401ab7:	dec    ebp
  401ab8:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  401abe:	dec    ebp
  401abf:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  401ac5:	jge    0x401a95
  401ac7:	mov    BYTE PTR [edi+0xf723b3a],ch
  401acd:	add    cl,dh
  401acf:	dec    ebp
  401ad0:	dec    DWORD PTR [ebx-0x2c032301]
  401ad6:	inc    ebp
  401ad7:	push   ebp
  401ad8:	dec    DWORD PTR [ebx-0x73ff1f34]
  401ade:	lea    ebx,[edi-0x7400cdac]
  401ae4:	push   eax
  401ae5:	mov    ah,0x45
  401ae7:	push   ebp
  401ae8:	mov    esi,DWORD PTR [ebx]
  401aea:	les    esi,FWORD PTR [ebx]
  401aec:	add    BYTE PTR [ebx],al
  401aee:	inc    DWORD PTR [ebx]
  401af0:	mov    ecx,DWORD PTR [edi]
  401af2:	cld    
  401af3:	retf   0x4d80
  401af6:	add    DWORD PTR [ecx+0x4d30e400],ecx
  401afc:	jne    0x401a89
  401afe:	(bad)  
  401aff:	in     al,dx
  401b00:	ror    bl,1
  401b02:	pop    ebp
  401b03:	into   
  401b04:	add    BYTE PTR [edi-0xf2f7475],ch
  401b0a:	not    bl
  401b0c:	adc    al,0xca
  401b0e:	inc    ebp
  401b0f:	push   ebp
  401b10:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  401b16:	push   0xaf80d6
  401b1b:	mov    eax,DWORD PTR [eax]
  401b1d:	fdiv   st(7),st
  401b1f:	sti    
  401b20:	sbb    dh,cl
  401b22:	pop    esi
  401b23:	xchg   esp,eax
  401b24:	leave  
  401b25:	lahf   
  401b26:	add    al,0x32
  401b28:	push   ebp
  401b29:	cmp    ebp,esp
  401b2b:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  401b2f:	dec    DWORD PTR [ecx-0x740f0375]
  401b35:	push   ebp
  401b36:	cld    
  401b37:	xor    ecx,DWORD PTR [esi-0x76f07efd]
  401b3d:	retf   0x558b
  401b40:	clc    
  401b41:	xor    esi,eax
  401b43:	add    esi,DWORD PTR [ebp-0x75]
  401b46:	(bad)  
  401b47:	hlt    
  401b48:	or     cl,BYTE PTR [esi+eax*8-0x39cdf761]
  401b4f:	mov    DWORD PTR [edx],ecx
  401b51:	hlt    
  401b52:	(bad)  
  401b53:	dec    ebp
  401b54:	add    dh,BYTE PTR [ebx]
  401b56:	leave  
  401b57:	mov    edx,0xffec8d55
  401b5c:	push   ecx
  401b5d:	rol    DWORD PTR [ebp+0x55],1
  401b60:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  401b66:	mov    eax,0xf8030b33
  401b6b:	lar    ecx,di
  401b6e:	push   ebp
  401b6f:	retf   0x863b
  401b72:	jne    0x401b71
  401b74:	mov    edi,edi
  401b76:	or     BYTE PTR [ebp+0x41],dh
  401b79:	mov    esp,edx
  401b7b:	cld    
  401b7c:	inc    eax
  401b7d:	mov    al,0x15
  401b7f:	add    DWORD PTR [ecx+0x0],eax
  401b82:	in     eax,dx
  401b83:	test   DWORD PTR [ecx-0x1],eax
  401b86:	sar    bh,cl
  401b88:	ret    0x8b
  401b8b:	cld    
  401b8c:	mov    eax,DWORD PTR [eax+0x8d0151]
  401b92:	clc    
  401b93:	xor    BYTE PTR [ebp+0x45],al
  401b96:	mov    ecx,DWORD PTR [ebx+0x8ec0fc]
  401b9c:	loopne 0x401b9d
  401b9e:	mov    edi,edi
  401ba0:	mov    ecx,eax
  401ba2:	clc    
  401ba3:	jne    0x401b75
  401ba5:	call   0x812eae
  401baa:	adc    eax,0xc6854575
  401baf:	je     0x401bb2
  401bb1:	mov    eax,esi
  401bb3:	cld    
  401bb4:	or     DWORD PTR [eax+0x401c9],eax
  401bba:	push   ebp
  401bbb:	add    ah,ch
  401bbd:	add    BYTE PTR [ecx+0x6a],dl
  401bc0:	inc    ebp
  401bc1:	push   esi
  401bc2:	mov    DWORD PTR [eax-0x4],edx
  401bc5:	pop    edi
  401bc6:	mov    ebx,DWORD PTR [ebx-0x4]
  401bc9:	ret    0xb1
  401bcc:	push   es
  401bcd:	mov    ecx,DWORD PTR [ecx-0x77274af]
  401bd3:	clc    
  401bd4:	lock inc ebp
  401bd6:	jne    0x401c2e
  401bd8:	(bad)  
  401bd9:	jne    0x401bdf
  401bdb:	mov    eax,0xf841ba66
  401be0:	rol    BYTE PTR [esi],cl
  401be2:	(bad)  
  401be3:	jne    0x401c22
  401be5:	cmp    eax,ebx
  401be7:	pop    esi
  401be8:	mov    ecx,DWORD PTR [eax]
  401bea:	push   ecx
  401beb:	inc    ecx
  401bec:	lea    edi,[esi-0x8]
  401bef:	inc    edx
  401bf0:	inc    ebp
  401bf1:	int    0x8b
  401bf3:	inc    edx
  401bf4:	cld    
  401bf5:	jle    0x401bb5
  401bf7:	inc    ecx
  401bf8:	xchg   eax,ebp
  401bfa:	mov    ebx,eax
  401bfc:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  401c02:	or     edi,eax
  401c04:	inc    ebp
  401c05:	inc    ebp
  401c06:	(bad)  
  401c07:	mov    ecx,DWORD PTR [eax]
  401c09:	cld    
  401c0a:	(bad)  
  401c0b:	loop   0x401c0e
  401c0d:	mov    eax,esi
  401c0f:	mov    DWORD PTR ds:0x4f8c98b,eax
  401c15:	rcl    BYTE PTR [esi+0xf],1
  401c18:	iret   
  401c19:	inc    ebp
  401c1a:	leave  
  401c1b:	(bad)  
  401c1c:	dec    DWORD PTR [ecx]
  401c1e:	mov    eax,esi
  401c20:	mov    eax,DWORD PTR [edi]
  401c22:	mov    dh,0xdd
  401c25:	push   es
  401c26:	nop
  401c27:	(bad)  
  401c28:	inc    DWORD PTR [ebx]
  401c2a:	push   esi
  401c2b:	leave  
  401c2c:	iret   
  401c2d:	add    al,0x46
  401c2f:	push   ebp
  401c30:	loope  0x401c1e
  401c32:	push   ebp
  401c33:	push   ecx
  401c34:	inc    DWORD PTR [ebp+0x56]
  401c37:	mov    DWORD PTR [esi-0x4],eax
  401c3a:	in     eax,dx
  401c3b:	push   ebp
  401c3c:	sbb    BYTE PTR [eax+0x7c6daff],bh
  401c42:	add    al,BYTE PTR [edx]
  401c44:	mov    edx,DWORD PTR [ebp-0x17]
  401c47:	cmp    edi,esi
  401c49:	jne    0x401c4a
  401c4b:	(bad)  
  401c4c:	push   esi
  401c4d:	pop    es
  401c4e:	push   ebp
  401c4f:	mov    ebp,esp
  401c51:	or     BYTE PTR [ebp+0x41],al
  401c54:	add    edi,edx
  401c56:	sub    BYTE PTR [eax-0x4],al
  401c59:	ret    0xc275
  401c5c:	add    DWORD PTR [eax],eax
  401c5e:	sbb    al,0x8b
  401c60:	mov    edx,DWORD PTR [ecx+0x14]
  401c63:	lea    edx,[edx-0x1ba7508]
  401c69:	push   esi
  401c6a:	enter  0xd375,0xb8
  401c6e:	test   DWORD PTR [esi],0x6ce0750
  401c74:	enter  0xd375,0x3b
  401c78:	neg    DWORD PTR [esi+0x50]
  401c7b:	or     cl,dl
  401c7d:	inc    edx
  401c7e:	(bad)  
  401c7f:	jmp    0x36be470
  401c84:	inc    eax
  401c85:	jmp    0xc9901eda
  401c8a:	push   edi
  401c8b:	push   ebp
  401c8c:	imul   ah
  401c8e:	adc    DWORD PTR [ecx-0x1],0x45
  401c92:	add    BYTE PTR [ecx+0x55d3fc00],cl
  401c98:	lea    edi,[eax-0x7fff4ca]
  401c9e:	mov    eax,0x4550402
  401ca3:	cmp    ebp,ecx
  401ca5:	jne    0x401c52
  401ca7:	mov    eax,DWORD PTR ds:0x241e808
  401cad:	in     eax,dx
  401cae:	add    BYTE PTR [eax-0x7],al
  401cb1:	xlat   BYTE PTR ds:[ebx]
  401cb2:	ss inc ecx
  401cb4:	aas    
  401cb5:	loope  0x401d34
  401cb7:	ret    0x8b
  401cba:	lock mov edi,DWORD PTR [ebp-0x18]
  401cbe:	and    edi,edi
  401cc0:	mov    edi,edi
  401cc2:	call   0xe40e1d9e
  401cc7:	push   es
  401cc8:	add    al,ch
  401cca:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  401cd1:	(bad)  
  401cd2:	hlt    
  401cd3:	add    eax,0xffd3e87d
  401cd8:	cmp    bh,0x8
  401cdb:	(bad)  
  401cdc:	fld    DWORD PTR [esi]
  401cde:	out    dx,al
  401cdf:	call   0xff9f1be7
  401ce4:	cmp    al,0x46
  401ce6:	shr    eax,0x8
  401ce9:	(bad)  
  401cea:	pop    es
  401ceb:	fisttp QWORD PTR [ebp+0xe577eff]
  401cf1:	push   ebx
  401cf2:	add    BYTE PTR [ebx+0x24008b56],cl
  401cf8:	add    BYTE PTR [ebp+0x50],al
  401cfb:	push   eax
  401cfc:	add    DWORD PTR [ebx+0x757d1834],ecx
  401d02:	sub    edx,DWORD PTR [esi-0x24]
  401d05:	jne    0x401cbd
  401d07:	lods   eax,DWORD PTR ds:[esi]
  401d08:	mov    edx,DWORD PTR [edx-0x34]
  401d0b:	dec    esi
  401d0c:	out    0x83,eax
  401d0e:	into   
  401d0f:	push   edi
  401d11:	loopne 0x401ce1
  401d13:	shr    BYTE PTR [edx+ecx*4+0x0],1
  401d17:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  401d1e:	rol    DWORD PTR [edx],0x8
  401d21:	mov    esp,ecx
  401d23:	cmp    DWORD PTR [ebx],0xc
  401d26:	mov    esi,0x5001c0
  401d2b:	push   eax
  401d2c:	push   cs
  401d2d:	push   eax
  401d2e:	(bad)  
  401d2f:	sub    edx,edi
  401d31:	push   esi
  401d32:	adc    al,0xcb
  401d34:	ins    DWORD PTR es:[edi],dx
  401d35:	mov    eax,0x203e8
  401d3a:	add    al,ah
  401d3c:	inc    esi
  401d3d:	mov    al,ch
  401d3f:	pop    es
  401d40:	add    DWORD PTR [eax],0x1
  401d43:	add    dh,al
  401d45:	add    ah,ch
  401d47:	rol    DWORD PTR [edx-0xd],1
  401d4a:	cli    
  401d4b:	push   0x4a
  401d4d:	pop    ecx
  401d4e:	retf   0xfe6
  401d51:	add    BYTE PTR [ebx-0x4e72f41e],al
  401d57:	(bad)  
  401d58:	dec    BYTE PTR [ebx+0x45b1fc72]
  401d5e:	(bad)  
  401d5f:	sub    ebp,DWORD PTR [ebx]
  401d61:	and    al,0x52
  401d63:	(bad)  
  401d64:	dec    edi
  401d65:	inc    ebp
  401d66:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  401d6d:	add    BYTE PTR [ebp-0x7b],dh
  401d70:	pop    eax
  401d71:	add    BYTE PTR [edx+0x0],bl
  401d74:	pop    edx
  401d75:	dec    ebp
  401d76:	jmp    DWORD PTR [ebx]
  401d78:	and    al,0xec
  401d7a:	push   edx
  401d7b:	out    0x64,eax
  401d7d:	jmp    0xd3f21382
  401d82:	jmp    0x401ddc
  401d84:	mov    al,0xfe
  401d86:	dec    BYTE PTR [ebp-0x18fd8018]
  401d8c:	add    BYTE PTR [esi+ebp*1],bh
  401d8f:	pop    edx
  401d90:	icebp  
  401d91:	mov    eax,cs
  401d93:	ins    BYTE PTR es:[edi],dx
  401d94:	adc    eax,0x75510000
  401d99:	mov    esi,0x70158
  401d9e:	or     DWORD PTR [eax-0x74f48dfe],esi
  401da4:	mov    edi,esp
  401da6:	cld    
  401da7:	jge    0x401e1e
  401da9:	(bad)  
  401dab:	aas    
  401dac:	and    al,0x6d
  401dae:	adc    cl,0x1
  401db1:	mov    eax,DWORD PTR [eax]
  401db3:	and    ecx,DWORD PTR [ebx-0x167203fd]
  401db9:	dec    ebp
  401dba:	add    eax,ebp
  401dbc:	add    BYTE PTR [edx],al
  401dbe:	fadd   DWORD PTR [eax]
  401dc0:	stc    
  401dc1:	enter  0xee00,0x8b
  401dc5:	sbb    eax,0x1
  401dc8:	sbb    esi,ecx
  401dca:	in     al,0x0
  401dcc:	in     eax,dx
  401dcd:	add    BYTE PTR [eax],al
  401dcf:	jne    0x401d5c
  401dd1:	cmp    edx,esp
  401dd3:	jb     0x401dde
  401dd5:	jmp    0x401e4c
  401dd7:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  401ddd:	add    BYTE PTR [ebx+0x4d83d840],cl
  401de3:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  401de9:	jb     0x401d74
  401deb:	pop    edx
  401dec:	fadd   QWORD PTR [ebx-0x7445faa1]
  401df2:	or     dh,BYTE PTR [edx+0x0]
  401df5:	inc    edx
  401df6:	or     dl,bh
  401df8:	xlat   BYTE PTR ds:[ebx]
  401df9:	dec    edx
  401dfa:	push   edi
  401dfb:	add    al,0x7
  401dfd:	leave  
  401dfe:	rol    DWORD PTR [edx+eax*1],0x7
  401e02:	add    ecx,ecx
  401e04:	mov    edx,ecx
  401e06:	int3   
  401e07:	jmp    0x401dc7
  401e09:	mov    al,0x0
  401e0b:	(bad)  
  401e0c:	jne    0x401df6
  401e0e:	mov    eax,DWORD PTR [edx]
  401e10:	call   0xc1549b15
  401e15:	pop    edi
  401e16:	add    ebx,DWORD PTR [ecx-0x37]
  401e19:	pop    ecx
  401e1a:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  401e21:	push   es
  401e22:	mov    eax,DWORD PTR [eax]
  401e24:	int3   
  401e25:	add    ch,al
  401e27:	jae    0x401e11
  401e29:	int    0x1
  401e2b:	enter  0x3000,0x18
  401e2f:	add    BYTE PTR [ebp+0x75],al
  401e32:	mov    esi,DWORD PTR [eax-0x171f0134]
  401e38:	push   0x2
  401e3a:	pop    ecx
  401e3b:	add    BYTE PTR [eax],cl
  401e3d:	push   ebx
  401e3e:	lea    edi,[edi+eax*2]
  401e41:	mov    al,0x1
  401e43:	jb     0x401e45
  401e45:	mov    al,0x10
  401e47:	push   eax
  401e48:	add    al,0x75
  401e4a:	add    BYTE PTR [ebx],ch
  401e4c:	add    ebx,esp
  401e4e:	int3   
  401e4f:	jne    0x401e61
  401e51:	movsx  edx,cl
  401e54:	add    DWORD PTR [eax],eax
  401e56:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  401e5d:	mov    gs,edi
  401e5f:	add    BYTE PTR [eax-0x50],ch
  401e62:	add    al,ch
  401e64:	mov    eax,DWORD PTR [ecx]
  401e66:	sub    eax,DWORD PTR [eax]
  401e68:	jb     0x401edf
  401e6a:	add    DWORD PTR [esp+eiz*8-0x50],esi
  401e6e:	jge    0x401e58
  401e70:	add    al,0x1
  401e72:	add    DWORD PTR [eax],0x0
  401e75:	jne    0x401e77
  401e77:	je     0x401ebe
  401e79:	mov    eax,DWORD PTR [edi]
  401e7b:	ror    BYTE PTR [ebp+0x4d],1
  401e7e:	or     DWORD PTR [ecx+0x4d03d004],0x3
  401e85:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  401e8b:	mov    DWORD PTR [ebx],ebp
  401e8d:	fadd   DWORD PTR [eax+0x75]
  401e90:	inc    eax
  401e91:	pop    eax
  401e92:	lea    ebx,[ecx+0x4f]
  401e95:	push   0xb1000003
  401e9a:	out    dx,eax
  401e9b:	add    ebp,DWORD PTR [edx+edx*2]
  401e9e:	add    BYTE PTR [ebx+ecx*4],bh
  401ea1:	mov    ch,BYTE PTR [ebx]
  401ea3:	jb     0x401f17
  401ea5:	add    al,0x89
  401ea7:	push   eax
  401ea8:	call   0x84286c1a
  401ead:	add    DWORD PTR [eax+eax*1],eax
  401eb0:	jae    0x401ec6
  401eb2:	icebp  
  401eb3:	inc    ebp
  401eb4:	mov    eax,DWORD PTR gs:[ecx]
  401eb7:	int3   
  401eb8:	out    dx,al
  401eb9:	loopne 0x401f08
  401ebb:	sub    eax,DWORD PTR [edx]
  401ebd:	push   0xffffff83
  401ebf:	pop    esi
  401ec0:	push   cs
  401ec1:	jl     0x401edc
  401ec3:	add    al,0xaf
  401ec5:	xor    eax,0x832b6d00
  401eca:	mov    eax,DWORD PTR [edx]
  401ecc:	rcr    BYTE PTR [ebp+0x754500dc],cl
  401ed2:	ror    DWORD PTR [ebx+0x7dc8e803],1
  401ed8:	inc    ebp
  401ed9:	shr    ebx,0x3
  401edc:	or     DWORD PTR [eax],0x4
  401edf:	push   0xffffffa5
  401ee1:	pop    esi
  401ee2:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  401ee9:	jmp    0x401f48
  401eeb:	mov    edi,0xff0272
  401ef0:	fdivr  QWORD PTR [ebp+0x5d]
  401ef3:	push   0x4e
  401ef5:	pop    ecx
  401ef6:	call   0x4062fb
  401efb:	mov    DWORD PTR [ebx],eax
  401efd:	in     al,0xc8
  401eff:	rol    BYTE PTR [ebp-0x75],0xc1
  401f03:	call   0xaa20e4
  401f08:	pop    esi
  401f09:	enter  0xceff,0x8b
  401f0d:	repz mov ecx,DWORD PTR [ebp-0x34]
  401f11:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  401f18:	je     0x401f1a
  401f1a:	or     DWORD PTR [ebx-0x74183b24],eax
  401f20:	jne    0x401f06
  401f22:	jmp    0x401f1d
  401f24:	push   DWORD PTR [edx-0x24]
  401f27:	push   0x4d
  401f29:	pop    ecx
  401f2a:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  401f2e:	jge    0x401f36
  401f30:	mov    eax,eax
  401f32:	sub    ebp,DWORD PTR [edx+0x24]
  401f35:	pop    esi
  401f36:	inc    ebp
  401f37:	mov    esp,0x8b6077
  401f3c:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  401f42:	lods   al,BYTE PTR ds:[esi]
  401f43:	add    BYTE PTR [ebx],bh
  401f45:	enter  0xce73,0x49
  401f49:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  401f51:	stc    
  401f52:	jge    0x401fc6
  401f54:	jnp    0xdd3fa2b5
  401f5a:	call   0xc32030
  401f5f:	fadd   st(0),st
  401f61:	dec    esi
  401f62:	ins    BYTE PTR es:[edi],dx
  401f63:	stc    
  401f64:	cmp    al,0x73
  401f66:	push   ebp
  401f67:	mov    eax,0xf8028b
  401f6c:	jne    0x401f2f
  401f6e:	mov    esi,ecx
  401f70:	mov    esp,DWORD PTR [ebp+0x2c]
  401f73:	add    edi,DWORD PTR [ebp-0x24]
  401f76:	sub    esp,eax
  401f78:	and    al,0x45
  401f7a:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  401f80:	sbb    al,0xee
  401f82:	pop    esi
  401f83:	call   0x801fb3
  401f88:	fsubr  st,st(3)
  401f8a:	sti    
  401f8b:	add    BYTE PTR gs:[ecx],bh
  401f8e:	add    eax,esp
  401f90:	add    DWORD PTR [esi],eax
  401f92:	rol    DWORD PTR [ebp+0x8],0x29
  401f96:	mov    esp,eax
  401f98:	clc    
  401f99:	jne    0x402010
  401f9b:	mov    eax,0x8b0673
  401fa0:	loopne 0x401fe7
  401fa2:	loopne 0x401f2d
  401fa4:	lods   al,BYTE PTR ds:[esi]
  401fa5:	int3   
  401fa6:	inc    ebp
  401fa7:	mov    DWORD PTR gs:[eax+edi*8],eax
  401fab:	add    al,0xc3
  401fad:	sub    ecx,DWORD PTR [ebp+0x47]
  401fb0:	(bad)  
  401fb2:	shr    BYTE PTR [ebp-0x1f],0xe8
  401fb6:	add    eax,DWORD PTR [eax]
  401fb8:	call   0x641e0bd
  401fbd:	add    esi,DWORD PTR [esi-0x3b2efc83]
  401fc3:	dec    esi
  401fc4:	ins    DWORD PTR es:[edi],dx
  401fc5:	in     al,dx
  401fc6:	lea    eax,[eax]
  401fc8:	inc    ebp
  401fc9:	inc    ebp
  401fca:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  401fd0:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  401fda:	and    al,0xdc
  401fdc:	ror    DWORD PTR [edx+0x24],0xf7
  401fe0:	or     BYTE PTR [ebp+0x4c],dh
  401fe3:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  401fe7:	stos   BYTE PTR es:[edi],al
  401fe8:	adc    edx,edi
  401fea:	inc    esp
  401feb:	add    edi,DWORD PTR [eax]
  401fed:	jne    0x401fd2
  401fef:	mov    DWORD PTR [eax-0x7449db04],ecx
  401ff5:	cmp    ecx,DWORD PTR [edi]
  401ff7:	sub    BYTE PTR [ebp-0x7e],dl
  401ffa:	sar    ebp,0xb
  401ffd:	jmp    FWORD PTR [edi+0x2400392a]
  402003:	sub    esi,DWORD PTR [ebx-0x73]
  402006:	mov    esp,DWORD PTR [ecx+edi*4]
  402009:	mov    ecx,DWORD PTR [eax]
  40200b:	and    BYTE PTR [eax],al
  40200d:	jne    0x401fd9
  40200f:	sub    ebp,ecx
  402011:	sbb    BYTE PTR [esi+0x32],ah
  402014:	dec    ebp
  402015:	push   ebp
  402016:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40201c:	ret    
  40201d:	mov    edx,ebp
  40201f:	leave  
  402020:	sub    DWORD PTR [esi+0x24],ebx
  402023:	ret    0x2b
  402026:	pop    ax
  402028:	push   ebp
  402029:	rol    BYTE PTR [ebx],0xeb
  40202c:	add    DWORD PTR [ecx+0x6c0001],0x40
  402033:	jb     0x40208a
  402035:	ret    
  402036:	in     al,dx
  402037:	jecxz  0x401fc4
  402039:	push   esi
  40203a:	xchg   esp,eax
  40203b:	jne    0x40203d
  40203d:	cmp    edx,DWORD PTR [esi+0x1c]
  402040:	jne    0x402026
  402042:	mov    eax,DWORD PTR [ebp-0x77]
  402045:	ror    DWORD PTR [ebx+0x899408],0xe0
  40204c:	mov    esi,DWORD PTR [ebp-0x75]
  40204f:	pop    esi
  402050:	nop
  402051:	mov    eax,DWORD PTR [eax]
  402053:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  402059:	add    al,0x0
  40205b:	inc    ebp
  40205c:	mov    eax,DWORD PTR [ebx]
  40205e:	mov    ebp,ebx
  402060:	cmp    al,0xf
  402062:	or     al,al
  402064:	inc    ebp
  402065:	inc    ebp
  402066:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  40206c:	cld    
  40206d:	add    BYTE PTR [edi+0x596c16c0],dh
  402073:	add    BYTE PTR [ecx-0x5],dl
  402076:	add    eax,0x17200
  40207b:	sbb    al,0x85
  40207d:	dec    esp
  40207e:	je     0x4020b8
  402080:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  402084:	add    BYTE PTR [ebx],bh
  402086:	(bad)  
  402087:	and    al,0x3b
  402089:	jae    0x402027
  40208b:	mov    cl,cl
  40208d:	inc    DWORD PTR [esp]
  402090:	push   ebp
  402091:	shr    esp,0x8
  402094:	in     al,dx
  402095:	push   esp
  402096:	and    DWORD PTR [eax],0xffffffdc
  402099:	retf   
  40209a:	(bad)  
  40209b:	mov    bh,0xe4
  40209d:	add    BYTE PTR [ebp+0x450ff8e9],dh
  4020a3:	retf   0x4cf8
  4020a6:	pushf  
  4020a7:	and    bh,al
  4020a9:	pop    ss
  4020aa:	rcr    cl,1
  4020ac:	test   DWORD PTR [eax],eax
  4020ae:	clc    
  4020af:	add    BYTE PTR [ebp+0x2b],al
  4020b2:	cmp    al,cl
  4020b4:	pushf  
  4020b5:	add    eax,0xd001c7
  4020ba:	add    eax,0x456cf8c0
  4020bf:	inc    eax
  4020c0:	push   ebx
  4020c1:	rcr    DWORD PTR [eax+0x4c0105],0x20
  4020c8:	inc    ebp
  4020c9:	fst    DWORD PTR [esi+0x29]
  4020cc:	mov    eax,DWORD PTR [eax]
  4020ce:	nop
  4020cf:	rol    BYTE PTR [eax],0xc0
  4020d2:	mov    ecx,DWORD PTR [ebp-0x3c4fdbe4]
  4020d8:	add    DWORD PTR [ebx-0x75f9af00],ecx
  4020de:	pop    ebp
  4020df:	add    DWORD PTR [ecx+0x758bf800],ecx
  4020e5:	or     BYTE PTR [ebp-0xce8aca],al
  4020eb:	mov    bl,BYTE PTR [eax]
  4020ed:	add    DWORD PTR [ebp+0x0],edx
  4020f0:	call   0xfff31ffe
  4020f5:	add    DWORD PTR [edi],ecx
  4020f7:	add    BYTE PTR [edi],al
  4020f9:	push   cs
  4020fa:	inc    ecx
  4020fb:	or     BYTE PTR [ebx+0x18008901],0x8
  402102:	leave  
  402103:	dec    ecx
  402104:	dec    esi
  402105:	add    esi,DWORD PTR [ebp-0x39]
  402108:	call   0xffe61009
  40210d:	clc    
  40210e:	inc    ebp
  40210f:	inc    ebp
  402110:	mov    ecx,DWORD PTR [edi]
  402112:	enter  0x49,0x35
  402116:	mov    ecx,DWORD PTR [eax]
  402118:	xor    eax,0x79f0807
  40211d:	xor    bl,BYTE PTR [edi-0x743ecda2]
  402123:	or     al,0x1c
  402125:	sbb    BYTE PTR ds:0x8b004d01,0x0
  40212c:	int3   
  40212d:	test   DWORD PTR [eax],eax
  40212f:	clc    
  402130:	inc    edx
  402132:	mov    eax,DWORD PTR [eax]
  402134:	fmul   DWORD PTR [ebx+0x74ff8300]
  40213a:	sub    BYTE PTR [ebp-0x40],ah
  40213d:	add    BYTE PTR [esi+0x45],bl
  402140:	leave  
  402141:	cmp    BYTE PTR [eax],bl
  402143:	pushf  
  402144:	mov    eax,edi
  402146:	jl     0x402128
  402148:	add    BYTE PTR [ebp+0x458df88b],al
  40214e:	add    al,0x3c
  402150:	or     BYTE PTR [eax+ebp*8-0x3617f139],bl
  402157:	test   edx,esp
  402159:	clc    
  40215a:	or     eax,DWORD PTR [ebp+0x40]
  40215d:	cmp    BYTE PTR [ecx+0x458b949f],cl
  402163:	sbb    al,0xbe
  402165:	mov    ecx,DWORD PTR [eax]
  402167:	xchg   esp,eax
  402168:	pop    es
  402169:	add    dh,al
  40216b:	mov    esp,DWORD PTR [ebp+0x1c]
  40216e:	add    BYTE PTR [edi-0x61],dl
  402171:	mov    eax,0x30132
  402176:	mov    DWORD PTR [ebp-0x68],eax
  402179:	mov    eax,DWORD PTR [ebp-0x74]
  40217c:	xor    eax,DWORD PTR [eax]
  40217e:	add    ecx,DWORD PTR [ebx-0xf637677]
  402184:	inc    ebp
  402185:	jge    0x4021d7
  402187:	mov    DWORD PTR [ebp-0xc],eax
  40218a:	xor    eax,eax
  40218c:	add    ecx,DWORD PTR [ebx]
  40218e:	push   eax
  40218f:	jne    0x4021d6
  402191:	mov    eax,DWORD PTR ds:0x3f001c
  402197:	dec    DWORD PTR [ebx-0x7f74e375]
  40219d:	add    eax,DWORD PTR [ecx]
  40219f:	cmp    al,0x0
  4021a1:	push   cs
  4021a2:	inc    ebp
  4021a3:	inc    ebp
  4021a4:	add    al,0x85
  4021a6:	add    BYTE PTR [edi+edi*8-0x1],dh
  4021aa:	mov    ebx,DWORD PTR [esp+ecx*1]
  4021ad:	mov    ebp,0x8bffff4d
  4021b2:	mov    ebx,DWORD PTR [esp+esi*8]
  4021b5:	sbb    al,0x1
  4021b8:	inc    ebp
  4021b9:	add    BYTE PTR [ebx-0x74a67700],cl
  4021bf:	push   ecx
  4021c0:	clc    
  4021c1:	add    eax,0x457218
  4021c6:	mov    eax,DWORD PTR [ebp+0x50]
  4021c9:	jne    0x402210
  4021cb:	mov    ecx,DWORD PTR [ebx-0x39761fe4]
  4021d1:	add    edi,eax
  4021d3:	add    BYTE PTR [ebp+0x31],al
  4021d6:	lea    eax,[eax+0x4501dc]
  4021dc:	lea    edx,[eax-0x74]
  4021df:	xor    ecx,DWORD PTR [ebx-0x39a4f7a1]
  4021e5:	ret    0xc7
  4021e8:	mov    eax,DWORD PTR [eax+0xee011c]
  4021ee:	add    BYTE PTR [eax],cl
  4021f0:	push   eax
  4021f1:	inc    ebp
  4021f2:	inc    ebp
  4021f3:	add    DWORD PTR [ebx+0x8b98eb],ecx
  4021f9:	test   edi,eax
  4021fb:	jne    0x402189
  4021fd:	mov    eax,DWORD PTR [eax]
  4021ff:	mov    eax,DWORD PTR [eax]
  402201:	push   eax
  402202:	pop    ebp
  402203:	inc    ebp
  402204:	dec    DWORD PTR [ebx+0x590ce48b]
  40220a:	rcl    BYTE PTR [ecx-0x40],1
  40220d:	xor    esi,DWORD PTR [eax]
  40220f:	add    DWORD PTR [ebp-0x70],0xffffff83
  402213:	mov    edi,0x8372fc
  402218:	push   eax
  402219:	(bad)  
  40221a:	jbe    0x402261
  40221c:	mov    ecx,DWORD PTR [ebx-0x39341714]
  402222:	ret    
  402223:	(bad)  
  402224:	dec    ebp
  402225:	inc    ebp
  402226:	jmp    0x4021b5
  402228:	mov    ecx,DWORD PTR [esp+eiz*8-0xf7f375]
  40222f:	(bad)  
  402230:	cld    
  402231:	(bad)  
  402232:	push   ebp
  402233:	mov    ecx,DWORD PTR [eax+0x18aa8b1c]
  402239:	add    BYTE PTR [ebx],bh
  40223b:	push   eax
  40223c:	push   eax
  40223d:	inc    ebp
  40223e:	jmp    0x3d86dce
  402243:	add    BYTE PTR [ebx+0x8ca0c7],cl
  402249:	add    BYTE PTR [ebx-0x13cfd500],cl
  40224f:	inc    ebp
  402250:	ret    
  402251:	mov    DWORD PTR [ebp-0x14],edx
  402254:	mov    edx,eax
  402256:	sub    BYTE PTR [ebp-0x2d],cl
  402259:	mov    ecx,DWORD PTR [ebp-0x75]
  40225c:	mov    eax,esi
  40225e:	rol    BYTE PTR [eax],1
  402260:	inc    ebp
  402261:	add    DWORD PTR [eax],eax
  402263:	inc    ebp
  402264:	add    BYTE PTR [ecx+0x18838beb],cl
  40226a:	clc    
  40226b:	inc    eax
  40226c:	jmp    0x8d45:0x74945589
  402273:	xor    ecx,DWORD PTR [eax]
  402275:	add    edx,DWORD PTR [ebp-0x77]
  402278:	mov    ebx,DWORD PTR [eax-0x76aaba18]
  40227e:	mov    ebx,DWORD PTR [eax+edi*8-0x76af48bb]
  402285:	inc    ebp
  402286:	fdiv   DWORD PTR [ebx]
  402288:	loop   0x40228d
  40228a:	(bad)  
  40228c:	add    BYTE PTR [ebp+0x55],al
  40228f:	add    eax,0xd8008b
  402294:	jmp    0xcd80:0x611c818b
  40229b:	add    DWORD PTR [ebx],esi
  40229d:	add    BYTE PTR [ecx-0x63fbc2bb],al
  4022a3:	add    BYTE PTR [ebp-0x77],dh
  4022a6:	mov    edx,DWORD PTR [eax+0x45cb30d4]
  4022ac:	dec    ebp
  4022ad:	inc    DWORD PTR [ebx]
  4022af:	test   DWORD PTR [ebx+0x108b0074],eax
  4022b5:	sbb    BYTE PTR [ebp+0x65],dl
  4022b8:	add    eax,DWORD PTR [eax]
  4022ba:	mov    edi,DWORD PTR [eax-0x75]
  4022bd:	add    ah,dl
  4022bf:	and    edx,DWORD PTR [ecx*2-0x741bd475]
  4022c6:	dec    ebp
  4022c7:	mov    DWORD PTR [ebx-0xfc071c],eax
  4022cd:	dec    ebp
  4022ce:	call   0x5541d05d
  4022d3:	inc    ebp
  4022d4:	add    DWORD PTR [ebx+0x855fcf4],ecx
  4022da:	cmp    ecx,DWORD PTR [ebp-0x5c]
  4022dd:	inc    eax
  4022de:	add    BYTE PTR [ecx+0x73],dl
  4022e1:	jb     0x4022e6
  4022e3:	mov    esi,eax
  4022e5:	cmp    al,0x50
  4022e7:	retf   
  4022e8:	mov    DWORD PTR [ecx+0x4500f0],eax
  4022ee:	test   ebx,edx
  4022f0:	andnps xmm6,XMMWORD PTR [edx+0x3]
  4022f4:	dec    DWORD PTR [ecx+0x51ecfc8b]
  4022fa:	inc    ebp
  4022fb:	add    eax,edi
  4022fd:	mov    DWORD PTR [eax+ebx*1-0x38ffab00],ecx
  402304:	inc    ecx
  402305:	hlt    
  402306:	mov    DWORD PTR [eax],eax
  402308:	xchg   esp,eax
  402309:	add    BYTE PTR [ebp+0x7d],al
  40230c:	xor    eax,edx
  40230e:	add    edx,ecx
  402310:	mov    DWORD PTR [ecx+0x5f45e898],ecx
  402316:	mov    DWORD PTR [eax-0x64],edx
  402319:	mov    DWORD PTR [ebp-0x8],eax
  40231c:	push   eax
  40231d:	push   ebp
  40231e:	inc    ebp
  40231f:	mov    DWORD PTR [ebx],esi
  402321:	call   0xf907829
  402326:	inc    ebp
  402327:	adc    al,BYTE PTR ds:0x810055
  40232d:	dec    DWORD PTR [ebx-0x7f76e400]
  402333:	aam    0x1
  402335:	push   ebp
  402336:	add    cl,al
  402338:	xor    BYTE PTR [eax*2-0x7472003e],cl
  40233f:	call   FWORD PTR [esi+edx*8]
  402342:	cmp    dl,0x1
  402345:	test   DWORD PTR [eax],eax
  402347:	clc    
  402348:	inc    ebp
  402349:	and    cl,BYTE PTR [ebx+0x7503fc4d]
  40234f:	mov    DWORD PTR [ecx+0x1008ffd4],ecx
  402355:	cmp    edi,edi
  402357:	je     0x402329
  402359:	mov    eax,DWORD PTR [ebp-0x4]
  40235c:	add    edx,DWORD PTR [ecx]
  40235e:	sbb    al,0x0
  402360:	dec    ebp
  402361:	dec    ebp
  402362:	mov    DWORD PTR [ecx+0x4545011c],ecx
  402368:	mov    ecx,DWORD PTR [ebx+0x4590181c]
  40236e:	add    DWORD PTR [edx],eax
  402370:	add    BYTE PTR [ebp+0x45],cl
  402373:	jne    0x402300
  402375:	mov    ecx,DWORD PTR [eax+esi*8-0x7474ab00]
  40237c:	cmp    esp,esi
  40237e:	jb     0x402311
  402380:	mov    eax,DWORD PTR [eax]
  402382:	mov    eax,DWORD PTR [eax]
  402384:	mov    edx,DWORD PTR [esp+edi*1]
  402387:	inc    ebp
  402388:	je     0x402315
  40238a:	push   eax
  40238b:	add    al,0x38
  40238d:	push   ebp
  40238e:	mov    DWORD PTR ds:[ecx],edi
  402391:	in     al,0xc
  402393:	shl    BYTE PTR [eax],cl
  402395:	test   DWORD PTR [ecx],eax
  402397:	call   DWORD PTR [edx]
  402399:	inc    esi
  40239b:	inc    ebp
  40239c:	ror    BYTE PTR [ecx+0x45459011],1
  4023a2:	jmp    0xff4120ab
  4023a7:	mov    ecx,DWORD PTR [ebx-0xfba7eb0]
  4023ad:	mov    eax,DWORD PTR [eax]
  4023af:	loopne 0x40233c
  4023b1:	(bad)  
  4023b2:	sbb    al,0xc7
  4023b4:	inc    ebp
  4023b5:	inc    ebp
  4023b6:	push   ebx
  4023b7:	lea    edi,[eax+0x454fdc]
  4023bd:	lea    ecx,[ecx-0x74a774]
  4023c3:	or     BYTE PTR [edi-0x3a],dl
  4023c6:	js     0x40238f
  4023c8:	mov    ecx,DWORD PTR [ebx-0x117ae39a]
  4023ce:	inc    DWORD PTR [eax]
  4023d0:	call   DWORD PTR [eax+0x7a]
  4023d3:	inc    ebp
  4023d4:	add    BYTE PTR [ebx+0x859866],cl
  4023da:	(bad)  
  4023db:	(bad)  
  4023dc:	dec    DWORD PTR [ebx-0x2f99f3b9]
  4023e2:	test   DWORD PTR [ebp-0x1],eax
  4023e5:	mov    edi,edi
  4023e7:	add    al,0x0
  4023ea:	add    ax,WORD PTR [ebp-0xb20004]
  4023f1:	inc    DWORD PTR [edi+0x14]
  4023f4:	data16 or BYTE PTR [ebp-0xac008b],al
  4023fb:	push   ebp
  4023fc:	ror    BYTE PTR [ebx+0x4585fc66],0xff
  402403:	(bad)  
  402404:	inc    DWORD PTR [ebx+eax*2]
  402407:	inc    ebp
  402408:	add    BYTE PTR [ebx+0x45851c66],cl
  40240e:	dec    DWORD PTR [ebx+0xc090ff]
  402414:	mov    ax,WORD PTR [ebp-0x7f00e4]
  40241b:	add    DWORD PTR [esi+0x0],eax
  40241e:	add    BYTE PTR [eax],dh
  402420:	xor    WORD PTR [ebp-0xcd00e1],ax
  402427:	cmp    al,bh
  402429:	jbe    0x4023b4
  40242b:	lea    ebp,[edi+esi*1-0x1]
  40242f:	mov    edi,DWORD PTR [eax+0x394f03]
  402435:	jae    0x4023c0
  402437:	mov    ebp,DWORD PTR [esi-0x75]
  40243a:	dec    DWORD PTR [ebx+0x3d02bb8]
  402440:	add    BYTE PTR [ecx-0x38f7477],cl
  402446:	call   DWORD PTR [esi+0x55d7ffb8]
  40244c:	add    ah,ch
  40244e:	mov    esp,ebp
  402450:	jb     0x402452
  402452:	inc    DWORD PTR [eax]
  402454:	mov    eax,0x89e145
  402459:	sbb    al,0x89
  40245b:	push   esi
  40245c:	je     0x40246c
  40245e:	inc    DWORD PTR [eax]
  402460:	(bad)  
  402461:	data16 in al,dx
  402463:	test   DWORD PTR [ebp+0x7efff8ff],eax
  402469:	lea    eax,[eax]
  40246b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40246c:	mov    WORD PTR [ebp-0xa50077],0x45ff
  402475:	mov    eax,0x9c4f38
  40247a:	lea    ecx,[ecx-0x76a3f6]
  402480:	js     0x40240f
  402482:	inc    DWORD PTR [esi+eax*8]
  402485:	mov    esp,esp
  402487:	pop    esi
  402488:	(bad)  
  402489:	jmp    ebp
  40248b:	add    esi,0x50
  40248e:	out    0x89,al
  402490:	(bad)  
  402491:	pusha  
  402492:	out    0xff,eax
  402494:	(bad)  
  402495:	(bad)  
  402496:	call   0xc6c957a3
  40249b:	(bad)  
  40249c:	jmp    0xbec358a0
  4024a1:	inc    ebx
  4024a2:	add    BYTE PTR [ecx-0xbb9c00],cl
  4024a8:	in     al,0xb8
  4024aa:	mov    dh,0x4f
  4024ac:	add    DWORD PTR [eax],0x4a
  4024af:	mov    esi,ebx
  4024b1:	data16 mov bh,bh
  4024b4:	add    DWORD PTR [ebx-0x7613c7fa],0x45
  4024bb:	push   0xb845ffe3
  4024c0:	in     eax,dx
  4024c1:	dec    edi
  4024c2:	inc    ebp
  4024c3:	add    bl,dl
  4024c5:	mov    DWORD PTR [ebp+0x6a],eax
  4024c8:	in     al,dx
  4024c9:	inc    DWORD PTR [ebp-0x75]
  4024cc:	sub    eax,0x2c854566
  4024d1:	inc    DWORD PTR [ebp-0x1]
  4024d4:	jle    0x402520
  4024d6:	leave  
  4024d7:	add    BYTE PTR [esi+eiz*2-0x24],al
  4024db:	test   DWORD PTR [esi+0x4aff83ff],esi
  4024e1:	push   0x668800de
  4024e6:	add    DWORD PTR [ebp-0x1300f9],0x45
  4024ed:	outs   dx,DWORD PTR ds:[esi]
  4024ee:	in     eax,dx
  4024ef:	add    BYTE PTR [ebp+0x66],al
  4024f2:	(bad)  
  4024f3:	test   DWORD PTR [ebp-0x1],eax
  4024f6:	jmp    0x4500:0xe17f45ff
  4024fd:	data16 fild WORD PTR [ebp-0x1100bb]
  402504:	inc    ebp
  402505:	inc    ebp
  402506:	xlat   BYTE PTR ds:[ebx]
  402507:	cmp    eax,DWORD PTR [ebp-0x64]
  40250a:	jle    0x4024c4
  40250c:	leave  
  40250d:	icebp  
  40250e:	inc    esp
  40250f:	add    ah,dl
  402511:	mov    DWORD PTR [esi+0x4aff8376],esi
  402517:	(bad)  
  402518:	fdivrp st(0),st
  40251a:	mov    BYTE PTR [ebp+0x4708f883],al
  402520:	in     al,dx
  402521:	test   WORD PTR [ebp-0x1],ax
  402528:	inc    ebp
  402529:	inc    ebp
  40252a:	mov    edx,ecx
  40252c:	cld    
  40252d:	inc    ebp
  40252e:	out    dx,al
  40252f:	rcl    BYTE PTR [ebx],cl
  402531:	inc    ebp
  402532:	mov    edi,edx
  402534:	mov    eax,DWORD PTR [ebp+0x54]
  402537:	sub    eax,0x2c3b45ff
  40253c:	jne    0x402510
  40253e:	mov    DWORD PTR [ebp-0x44],0xf8c9857e
  402545:	int3   
  402546:	inc    ebp
  402547:	add    ch,ch
  402549:	lea    ebx,[ebp+ecx*1+0x181c0f8b]
  402550:	xor    bl,0x1
  402553:	add    eax,DWORD PTR [eax]
  402555:	inc    ecx
  402556:	adc    BYTE PTR [eax],bl
  402558:	test   ecx,edi
  40255a:	add    dh,BYTE PTR [edx+0x0]
  40255d:	mov    BYTE PTR [ebp-0x24],0x8b
  402561:	(bad)  
  402562:	jl     0x402541
  402564:	add    dh,al
  402566:	mov    esi,ebx
  402568:	mov    eax,esi
  40256a:	sbb    al,0xdf
  40256c:	add    dh,0x1
  40256f:	loopne 0x402571
  402571:	(bad)  
  402572:	adc    cl,ah
  402574:	or     dh,al
  402576:	inc    ebp
  402577:	loop   0x402566
  402579:	xor    ebp,edx
  40257b:	(bad)  
  40257c:	(bad)  
  40257d:	or     eax,0x18ee0ff8
  402582:	jle    0x402577
  402584:	inc    ebp
  402585:	add    ebx,DWORD PTR [ecx+0x41]
  402588:	adc    BYTE PTR [eax],bl
  40258a:	repnz stc 
  40258c:	xor    BYTE PTR [edx+0x34],0xc6
  402590:	adc    ah,dl
  402592:	dec    ecx
  402593:	(bad)  
  402594:	repnz aad 0x45
  402597:	(bad)  
  402598:	mov    esi,edx
  40259a:	adc    al,0xc6
  40259c:	call   edi
  40259e:	(bad)  
  40259f:	(bad)  
  4025a0:	adc    al,bl
  4025a2:	inc    esi
  4025a4:	push   eax
  4025a5:	fld    DWORD PTR [ebp-0x3a]
  4025a8:	mov    esi,0x7c608da
  4025ad:	fcmovnb st,st(6)
  4025af:	xor    ebx,DWORD PTR [edi+0x30d328d]
  4025b5:	(bad)  
  4025b7:	sbb    BYTE PTR [ebp-0xd],al
  4025ba:	add    DWORD PTR [ebx],0x66
  4025bd:	inc    ecx
  4025be:	mov    ebx,DWORD PTR [eax]
  4025c0:	sbb    al,0xf9
  4025c2:	xor    BYTE PTR [edx+0x1],0x8d
  4025c6:	add    BYTE PTR [ebp+eax*4-0x1],dl
  4025ca:	dec    DWORD PTR [ecx+0x4d00fcff]
  4025d0:	add    BYTE PTR [eax+0x7145fc30],bh
  4025d6:	inc    DWORD PTR [ecx]
  4025d8:	mov    ecx,DWORD PTR [ebp-0x310010]
  4025de:	retf   
  4025df:	enter  0xe45,0x3b
  4025e3:	inc    ebp
  4025e4:	jne    0x40261e
  4025e6:	mov    eax,ds:0x33c70b9c
  4025eb:	mov    esp,0xf81585ee
  4025f0:	mov    ds:0x338b0b45,eax
  4025f5:	mov    WORD PTR [esi-0x5cc68e00],cs
  4025fb:	ud2    
  4025fd:	xchg   ebp,eax
  4025fe:	xor    eax,DWORD PTR [eax]
  402600:	dec    edx
  402601:	mov    eax,DWORD PTR [eax]
  402603:	sbb    al,0x83
  402605:	cmp    ah,0x1
  402608:	push   0x0
  40260a:	pop    eax
  40260b:	adc    BYTE PTR [ecx-0x7483bb],cl
  402611:	and    BYTE PTR [esi+0x0],0x85
  402615:	mov    edi,edi
  402617:	push   0xffffffff
  402619:	(bad)  
  40261a:	mov    esp,esi
  40261c:	adc    dh,0x75
  40261f:	loope  0x402687
  402621:	inc    ebp
  402622:	inc    ebp
  402623:	fild   QWORD PTR [edx-0x29]
  402626:	mov    ecx,DWORD PTR [ebp-0x75990be4]
  40262c:	inc    ebp
  40262d:	sub    BYTE PTR [edx+0x4a],0x58
  402631:	jmp    0x752c:0x40868889
  402638:	lea    ax,[ebp-0xc]
  40263c:	xor    eax,DWORD PTR [ebp-0x5f0078]
  402642:	mov    DWORD PTR [ebp-0x820076],eax
  402648:	stos   DWORD PTR es:[edi],eax
  402649:	mov    ebp,DWORD PTR [ebx-0x43a67414]
  40264f:	push   ecx
  402650:	test   DWORD PTR [ebx],esi
  402652:	(bad)  
  402653:	mov    ebx,0xc072ff
  402658:	push   ebp
  402659:	ret    
  40265a:	(bad)  
  40265b:	mov    eax,eax
  40265d:	sbb    al,0xdf
  40265f:	rcl    dh,0x50
  402662:	inc    ebp
  402663:	inc    ebp
  402664:	int3   
  402665:	mov    ebp,ebx
  402667:	cwde   
  402668:	mov    DWORD PTR [eax],0x10d3c7c8
  40266e:	jmp    0xd500:0xdf0145ff
  402675:	jmp    DWORD PTR [esi-0x75]
  402678:	inc    ebp
  402679:	or     BYTE PTR [edi],bh
  40267b:	rol    bh,1
  40267d:	dec    ebp
  40267e:	adc    BYTE PTR [ebx],dh
  402680:	inc    DWORD PTR [ebx]
  402682:	add    cl,BYTE PTR [ecx-0x3e174400]
  402688:	push   ss
  402689:	push   ds
  40268a:	add    cl,ah
  40268c:	test   DWORD PTR [ebx-0x1],esi
  40268f:	or     eax,0x22850bff
  402694:	jmp    ecx
  402696:	push   DWORD PTR [ebx-0x75]
  402699:	add    eax,0x3359e9ec
  40269e:	push   ecx
  40269f:	loope  0x4026d4
  4026a1:	jae    0x4026a6
  4026a3:	jmp    0x8527f8
  4026a8:	and    DWORD PTR [ebp+0x44],0x0
  4026ac:	mov    esp,DWORD PTR [eax]
  4026ae:	sbb    al,0x66
  4026b0:	add    BYTE PTR [ebp-0xff00ff],0x30
  4026b7:	mov    DWORD PTR [ebp+0x7e],eax
  4026ba:	(bad)  
  4026bb:	inc    DWORD PTR [ebx-0xbadf9a]
  4026c1:	push   0xffffffff
  4026c3:	pop    eax
  4026c4:	clc    
  4026c5:	mov    DWORD PTR [eax],ecx
  4026c7:	or     BYTE PTR [ecx-0x8aef8d],0x58
  4026ce:	mov    DWORD PTR [ecx+0x76ff8428],ecx
  4026d4:	lea    esp,[esi+0x10]
  4026d7:	inc    ebp
  4026d8:	jmp    FWORD PTR [edx+0x50]
  4026db:	pop    eax
  4026dc:	inc    ebp
  4026dd:	mov    DWORD PTR [ebx],esi
  4026df:	mov    BYTE PTR [ebx],al
  4026e1:	rcl    BYTE PTR [eax+0x45],0x85
  4026e5:	inc    WORD PTR [ebp-0x1]
  4026e9:	lea    ecx,[ebx-0x7f99e35f]
  4026ef:	stos   BYTE PTR es:[edi],al
  4026f0:	add    DWORD PTR [ebp+0x0],eax
  4026f3:	mov    ecx,ecx
  4026f5:	adc    al,0x95
  4026f7:	(bad)  
  4026f8:	push   DWORD PTR [ebx]
  4026fa:	dec    DWORD PTR [ebp+0x45ffc095]
  402700:	dec    esi
  402702:	push   ebp
  402703:	loop   0x40268e
  402705:	(bad)  
  402706:	adc    al,0xc4
  402708:	call   ebx
  40270a:	mov    ecx,ebp
  40270c:	sbb    BYTE PTR [ebp-0x1],al
  40270f:	loopne 0x40269a
  402711:	cmp    al,0x24
  402713:	(bad)  
  402714:	dec    esp
  402716:	mov    eax,ebp
  402718:	sub    al,0xed
  40271a:	inc    edi
  40271c:	mov    eax,edx
  40271e:	xor    BYTE PTR [esi-0x1],bh
  402721:	test   edi,edi
  402723:	dec    DWORD PTR [ebx-0x2ffff701]
  402729:	add    BYTE PTR [ebp+0x2c],al
  40272c:	push   eax
  40272d:	add    bh,dl
  40272f:	mov    DWORD PTR [ebp+0x18],edi
  402732:	jbe    0x402733
  402734:	test   DWORD PTR [ebp-0xffefff],ecx
  40273a:	inc    ebp
  40273b:	push   eax
  40273c:	add    DWORD PTR [ebp-0x4],0x801be
  402743:	pop    es
  402744:	add    dh,0xfe
  402747:	ret    
  402748:	dec    DWORD PTR [ebx-0x3fffe34b]
  40274e:	mov    ecx,0x454f50
  402753:	mov    eax,ecx
  402755:	cwde   
  402756:	mov    DWORD PTR [eax],eax
  402758:	test   al,0xff
  40275a:	ror    BYTE PTR [ebx-0x2f99f775],0x55
  402761:	lea    ecx,[ebp-0x7600f401]
  402767:	mov    ebp,DWORD PTR [edx+ebp*2-0x7a99a73e]
  40276e:	push   ebp
  40276f:	dec    DWORD PTR [ebp-0x767ae601]
  402775:	push   DWORD PTR [eax+0x6685c2ff]
  40277b:	call   DWORD PTR [ebp-0x1]
  40277e:	lea    ecx,[ebx-0x397613e1]
  402784:	mov    ah,0xc3
  402786:	mov    DWORD PTR [ebp-0x30a74a],ecx
  40278c:	mov    DWORD PTR [eax-0x48],edx
  40278f:	inc    ebp
  402790:	dec    edx
  402791:	mov    ecx,DWORD PTR [ebx+0x55006698]
  402797:	xor    ecx,DWORD PTR [ebx+0x557c668d]
  40279d:	dec    DWORD PTR [ebp-0x76e3b477]
  4027a3:	call   DWORD PTR [eax-0x6d5f7673]
  4027a9:	lea    eax,[ecx-0x1]
  4027ac:	inc    WORD PTR [ebp-0x73]
  4027b0:	cmp    edi,0x5
  4027b3:	dec    DWORD PTR [ecx+0x41ff9695]
  4027b9:	jmp    DWORD PTR [esi-0x73]
  4027bc:	inc    ebp
  4027bd:	jmp    DWORD PTR [esi-0x1]
  4027c0:	dec    ebp
  4027c1:	lea    esp,[esi-0x1]
  4027c4:	jge    0x4027c5
  4027c6:	mov    esi,DWORD PTR [eax]
  4027c8:	lock inc ebp
  4027ca:	mov    bh,0xff
  4027cc:	mov    WORD PTR [ebp-0x3c5f3a],cs
  4027d2:	rol    DWORD PTR [eax+0xf8ca289],0x45
  4027d9:	push   cs
  4027da:	str    WORD PTR [ebp-0x1]
  4027de:	xor    edi,esp
  4027e0:	add    edi,DWORD PTR [ebp+0x33]
  4027e3:	add    BYTE PTR [esi+0x0],ah
  4027e6:	inc    ebp
  4027e7:	rdpmc  
  4027e9:	mov    edi,0xbf45ff66
  4027ee:	dec    si
  4027f0:	inc    ebp
  4027f1:	add    BYTE PTR [ebx+0x45000c0d],cl
  4027f7:	mov    edi,edi
  4027f9:	data16 sbb al,0x45
  4027fc:	jne    0x402781
  4027fe:	push   ebx
  402800:	adc    al,0xd0
  402802:	jne    0x40278d
  402804:	jmp    FWORD PTR [edx+0x66755108]
  40280a:	call   0xffc42064
  40280f:	or     BYTE PTR [ebp-0x77],al
  402812:	mov    ebp,DWORD PTR [esi+0x6645511c]
  402818:	mov    edx,DWORD PTR [ebp-0x70]
  40281b:	add    DWORD PTR [eax],0x5
  40281e:	mov    ecx,DWORD PTR [ecx+0x5180b21c]
  402824:	add    DWORD PTR [esi+0x0],esp
  402827:	push   ebp
  402828:	xor    BYTE PTR [esi+0x4d],ah
  40282b:	dec    ebp
  40282c:	mov    ecx,DWORD PTR [ebx+0x4d72663b]
  402832:	mov    ecx,DWORD PTR [ebp-0x2ec3fe75]
  402838:	jl     0x4027c3
  40283a:	push   eax
  40283b:	mov    esi,?
  40283d:	rcl    bh,1
  40283f:	mov    DWORD PTR [esi],eax
  402841:	mov    es,esi
  402843:	push   ecx
  402844:	ret    0x166
  402847:	push   ebp
  402848:	pop    esi
  402849:	leavew 
  40284b:	inc    ebp
  40284c:	sbb    BYTE PTR [ebp-0x761326ab],cl
  402852:	in     al,dx
  402853:	xchg   esp,eax
  402854:	push   esi
  402855:	shl    al,0x66
  402858:	add    DWORD PTR [ebp+0x1],0x38df008d
  40285f:	mov    DWORD PTR [edi],ecx
  402861:	cwde   
  402862:	or     cl,BYTE PTR [ecx-0x767a6600]
  402868:	setl   BYTE PTR [edx]
  40286b:	inc    ebp
  40286c:	add    BYTE PTR [edi],cl
  40286e:	test   DWORD PTR [ebp+0xf],ecx
  402871:	xor    edi,edx
  402873:	add    eax,DWORD PTR [eax]
  402875:	xor    ecx,DWORD PTR [ebx+0x458866]
  40287b:	mov    eax,DWORD PTR [ebp-0x1848f010]
  402881:	test   al,0x0
  402883:	mov    BYTE PTR [ebx+0xc18cc3],0x89
  40288a:	adc    BYTE PTR [eax-0x76ff3f7c],ch
  402890:	add    BYTE PTR [eax-0x57f076aa],ch
  402896:	rol    DWORD PTR [ebp+0x0],1
  402899:	mov    ecx,DWORD PTR [ebx+0x758cf0]
  40289f:	inc    DWORD PTR [ebx-0x748a0fe8]
  4028a5:	jmp    FWORD PTR [ebx]
  4028a7:	adc    BYTE PTR [ebx],al
  4028a9:	jne    0x4028ba
  4028ab:	call   DWORD PTR [eax-0x14]
  4028ae:	mov    DWORD PTR [ecx+0x1b7ffe4],eax
  4028b4:	push   cs
  4028b5:	sbb    al,0xca
  4028b7:	inc    ebp
  4028b8:	test   BYTE PTR [ebx-0x47ffe400],cl
  4028be:	dec    eax
  4028bf:	add    DWORD PTR [ebx+0x0],edx
  4028c2:	dec    ebp
  4028c3:	inc    ebp
  4028c4:	mov    esi,0x7f8cff8b
  4028c9:	add    BYTE PTR [ebp-0x74728b75],al
  4028cf:	add    al,0x83
  4028d1:	adc    esp,esi
  4028d3:	(bad)  
  4028d4:	and    edx,DWORD PTR ds:0x780f0703
  4028da:	jp     0x402867
  4028dc:	sysret 
  4028de:	pop    edx
  4028df:	add    eax,DWORD PTR [ebx]
  4028e1:	cmp    esi,DWORD PTR [ebx+esi*2-0x73]
  4028e5:	sub    edx,DWORD PTR [ebx+eax*1]
  4028e8:	dec    ebp
  4028e9:	mov    DWORD PTR [ebp-0x74a48ba1],eax
  4028ef:	ret    0x83
  4028f2:	clc    
  4028f3:	mov    esp,DWORD PTR [ebx]
  4028f5:	add    DWORD PTR [ebx],0x1c
  4028f8:	jnp    0x904fb477
  4028fe:	pop    ecx
  4028ff:	add    BYTE PTR [ebx],al
  402901:	xor    DWORD PTR [eax+eax*1-0x73],0xffffff84
  402906:	adc    al,0x1
  402908:	jge    0x40290a
  40290a:	mov    edx,edx
  40290c:	cld    
  40290d:	test   BYTE PTR [edi],bh
  40290f:	add    edi,edi
  402911:	add    BYTE PTR [esi],al
  402913:	neg    BYTE PTR [ebp-0x7c]
  402916:	add    DWORD PTR [eax],eax
  402918:	pop    es
  402919:	add    BYTE PTR [edi-0x48fff17a],dh
  40291f:	add    BYTE PTR [eax+eax*8],cl
  402922:	inc    ebp
  402923:	test   BYTE PTR [ebx+0x300fc00],al
  402929:	mov    esi,0xf80039
  40292e:	fisttp DWORD PTR [edi]
  402930:	mov    bh,0xda
  402932:	push   cs
  402933:	add    BYTE PTR [edi+0x4d340c39],dh
  402939:	test   bh,bh
  40293b:	add    ah,dh
  40293d:	add    cl,al
  40293f:	mov    cl,0x3
  402941:	add    DWORD PTR [ecx+0x7d65ec00],ecx
  402947:	add    BYTE PTR [edx-0x36],dh
  40294a:	mov    ecx,DWORD PTR [esi]
  40294c:	call   0xef7e113
  402951:	or     al,0xb7
  402953:	dec    ebp
  402954:	or     al,0xf
  402956:	inc    ebp
  402957:	dec    eax
  402958:	add    DWORD PTR [ebx],0x8
  40295b:	(bad)  
  40295d:	scas   al,BYTE PTR es:[edi]
  40295e:	dec    ebp
  40295f:	add    BYTE PTR [ecx],bh
  402961:	(bad)  
  402962:	lock adc al,0x82
  402965:	mov    edi,edi
  402967:	call   0xff9c296b
  40296c:	rcl    BYTE PTR [edi-0x15],0x31
  402970:	xor    edi,DWORD PTR [edi+0x5e]
  402973:	adc    ebx,eax
  402975:	mov    eax,DWORD PTR gs:[eax]
  402978:	mov    edx,esi
  40297a:	nop
  40297b:	rol    BYTE PTR [eax],1
  40297d:	mov    bh,0x83
  40297f:	push   cs
  402980:	or     al,0xb7
  402982:	xor    ecx,DWORD PTR [esi+edx*2]
  402985:	sti    
  402986:	cmp    DWORD PTR [ecx+0xf],ebp
  402989:	dec    edx
  40298a:	test   DWORD PTR [ecx+0x318bec00],ecx
  402990:	or     al,0x41
  402992:	ret    
  402993:	or     DWORD PTR [esi+0x65],edi
  402996:	pop    eax
  402997:	add    BYTE PTR [ebp-0x32],dh
  40299a:	xor    ecx,eax
  40299c:	inc    eax
  40299d:	mov    bh,0x76
  40299f:	push   cs
  4029a0:	inc    eax
  4029a1:	mov    bh,0x3
  4029a3:	or     al,0x8
  4029a5:	sti    
  4029a6:	dec    eax
  4029a7:	sub    ecx,DWORD PTR [ebx+0x70892479]
  4029ad:	cld    
  4029ae:	mov    edi,DWORD PTR [ebp+0x18]
  4029b1:	mov    ecx,DWORD PTR [ebp-0x7b]
  4029b4:	add    esi,DWORD PTR [eax+ecx*1-0x75]
  4029b8:	jne    0x40299e
  4029ba:	cmp    ebx,DWORD PTR [edi+esi*2]
  4029bd:	jns    0xff50263c
  4029c3:	pop    ecx
  4029c4:	jge    0x4029c5
  4029c6:	cmp    eax,edi
  4029c8:	cld    
  4029c9:	inc    ebp
  4029ca:	iret   
  4029cb:	or     BYTE PTR [eax-0x5],bh
  4029ce:	jae    0x402a4d
  4029d0:	(bad)  
  4029d2:	xor    al,0xf
  4029d4:	jmp    0x402a50
  4029d6:	mov    ecx,DWORD PTR [edi]
  4029d8:	lea    ebx,[edx-0x4f]
  4029db:	mov    esi,DWORD PTR [ebx]
  4029dd:	in     al,dx
  4029de:	test   BYTE PTR [ebp+0x27],0x83
  4029e2:	jge    0x4029ec
  4029e4:	add    edi,ebx
  4029e6:	mov    DWORD PTR [ebp-0x8],ecx
  4029e9:	cmp    eax,edi
  4029eb:	hlt    
  4029ec:	adc    ah,BYTE PTR [eax+0xf8b4d7d]
  4029f2:	jl     0x402a44
  4029f4:	clc    
  4029f5:	(bad)  
  4029f7:	js     0x402984
  4029f9:	push   DWORD PTR [edx-0x10]
  4029fc:	mov    eax,ecx
  4029fe:	clc    
  4029ff:	add    edi,edi
  402a01:	mov    DWORD PTR [eax],edx
  402a03:	call   0xfbd7f43
  402a08:	inc    edi
  402a09:	popa   
  402a0a:	jge    0x402a0b
  402a0c:	cmp    ebx,DWORD PTR [edi-0x4]
  402a0f:	xor    edi,DWORD PTR [edx-0x3ffd78c0]
  402a15:	rcr    BYTE PTR [esi-0x37],0xc9
  402a19:	push   ebp
  402a1a:	or     ah,ch
  402a1c:	push   ebp
  402a1d:	sub    ah,0x1
  402a20:	in     al,dx
  402a21:	add    BYTE PTR [edx-0x7ac7a14],bh
  402a27:	fist   DWORD PTR [ebp+0x57]
  402a2a:	(bad)  
  402a2b:	sbb    al,bh
  402a2d:	test   BYTE PTR [ebp+0x4500f800],al
  402a33:	inc    ebp
  402a34:	mov    edi,DWORD PTR [ebx]
  402a36:	cld    
  402a37:	je     0x402a86
  402a39:	cmp    DWORD PTR [ebx+0x4d05fc78],ecx
  402a3f:	ror    BYTE PTR [ebx-0x74740315],0x78
  402a46:	adc    BYTE PTR [ebp-0x42],al
  402a49:	mov    ecx,DWORD PTR [eax]
  402a4b:	sbb    al,0x7
  402a4d:	push   eax
  402a4e:	inc    ebp
  402a4f:	mov    ecx,DWORD PTR [esi-0x7487adec]
  402a55:	add    edi,esp
  402a57:	or     BYTE PTR [ebx+0x890155],bl
  402a5d:	cld    
  402a5e:	mov    edi,0x372f7
  402a63:	jge    0x402a33
  402a65:	xor    eax,esi
  402a67:	mov    edi,eax
  402a69:	hlt    
  402a6a:	iret   
  402a6b:	pop    ebp
  402a6c:	inc    ebp
  402a6d:	jbe    0x402aaa
  402a6f:	cmp    ecx,DWORD PTR [edi]
  402a71:	adc    al,0x7b
  402a73:	push   es
  402a74:	add    BYTE PTR [edi+0x2fc7a8b],dh
  402a7a:	dec    ebp
  402a7b:	div    DWORD PTR [ebx]
  402a7d:	sbb    al,0x3
  402a7f:	mov    edi,DWORD PTR [ebx]
  402a81:	test   DWORD PTR [edi],ecx
  402a83:	je     0x402aee
  402a85:	mov    eax,DWORD PTR [eax]
  402a87:	or     BYTE PTR [ebx-0x76820302],cl
  402a8d:	cmp    eax,DWORD PTR [eax]
  402a8f:	jbe    0x402a91
  402a91:	mov    ebx,esi
  402a93:	or     al,0xdf
  402a95:	jg     0x402a62
  402a97:	add    eax,DWORD PTR [ecx+edi*1-0x1ff07fe]
  402a9e:	dec    ebp
  402a9f:	add    ecx,DWORD PTR [ecx-0x257a2b83]
  402aa5:	je     0x402a85
  402aa7:	mov    edi,ebx
  402aa9:	mov    ebx,DWORD PTR [ebp-0xc]
  402aac:	mov    ecx,DWORD PTR [ecx+0x7ddaf4f0]
  402ab2:	adc    dh,BYTE PTR [edx+0x55]
  402ab5:	jmp    0x402a42
  402ab7:	xor    edi,esp
  402ab9:	pop    edi
  402aba:	rcr    BYTE PTR [ebx+0x33],cl
  402abd:	ret    0x3
  402ac0:	cmp    DWORD PTR [ebx+0x2c17830a],ecx
  402ac6:	push   ebp
  402ac7:	cmp    BYTE PTR [ebx-0x2d760364],cl
  402acd:	cld    
  402ace:	xor    eax,DWORD PTR [ebp+0x3]
  402ad1:	cmp    edi,DWORD PTR [ecx]
  402ad3:	pushf  
  402ad4:	or     cl,BYTE PTR [ebx+0x4d02fc0f]
  402ada:	add    BYTE PTR [ebx+0x4dfcfc8b],cl
  402ae0:	pop    ebp
  402ae1:	mov    ecx,DWORD PTR [ebx-0x3fb20f04]
  402ae7:	push   ebx
  402ae8:	add    ebx,DWORD PTR [ebp-0x75]
  402aeb:	push   esi
  402aec:	adc    BYTE PTR [ecx+0x4d],bl
  402aef:	push   ecx
  402af0:	xor    eax,edi
  402af2:	mov    eax,esi
  402af4:	in     al,0xeb
  402af6:	dec    ebp
  402af7:	add    ecx,DWORD PTR [ebx-0x317403b3]
  402afd:	nop
  402afe:	iret   
  402aff:	add    dh,dl
  402b01:	push   edi
  402b02:	dec    ebp
  402b03:	lahf   
  402b04:	mov    esi,DWORD PTR [edx]
  402b06:	add    esi,DWORD PTR [ebx]
  402b08:	add    esi,DWORD PTR [ebx]
  402b0a:	cmp    eax,DWORD PTR [ebx]
  402b0c:	je     0x402b11
  402b0e:	add    ecx,DWORD PTR [ecx+0xb4de808]
  402b14:	mov    eax,DWORD PTR [esp+edi*8+0x4800ce02]
  402b1b:	pop    ebp
  402b1c:	mov    ecx,DWORD PTR [ebx-0x217bf3f8]
  402b22:	lahf   
  402b23:	fbstp  TBYTE PTR [edx]
  402b25:	(bad)  [ecx+0x45020c84]
  402b2b:	add    BYTE PTR [edi],bh
  402b2d:	pop    ebp
  402b2e:	pushf  
  402b2f:	mov    ecx,DWORD PTR [ebx+0x75001080]
  402b35:	xor    ecx,DWORD PTR [ebx+0x3bd803]
  402b3b:	ud0    ecx,DWORD PTR [edi-0x75]
  402b3f:	add    ah,bh
  402b41:	add    ecx,esi
  402b43:	or     bh,cl
  402b45:	dec    ebp
  402b46:	inc    ebp
  402b47:	mov    edi,DWORD PTR [ebx]
  402b49:	xor    esi,DWORD PTR [ebp+0x3]
  402b4c:	mov    ecx,DWORD PTR [ecx+0x5d75f010]
  402b52:	mov    edi,DWORD PTR [ebx]
  402b54:	fdiv   DWORD PTR [eax+eax*1-0x75]
  402b58:	push   eax
  402b5a:	or     al,0x5d
  402b5c:	inc    ebp
  402b5d:	imul   eax,edi,0x14
  402b60:	loopne 0x402b40
  402b62:	sbb    ebx,edi
  402b64:	jg     0x402b82
  402b66:	inc    ebp
  402b67:	jne    0x402b7c
  402b69:	mov    ebx,DWORD PTR [eax+esi*8+0x6bfc5d8b]
  402b70:	(bad)  
  402b71:	adc    al,0xc7
  402b73:	fiadd  WORD PTR [ebp-0x21]
  402b76:	jne    0x402bd4
  402b78:	mov    edx,DWORD PTR [eax]
  402b7a:	clc    
  402b7b:	test   BYTE PTR [ebp+0x2],cl
  402b7e:	xor    eax,DWORD PTR [eax]
  402b80:	xor    eax,DWORD PTR [ebp-0x73]
  402b83:	mov    eax,DWORD PTR [ebx]
  402b85:	cld    
  402b86:	jb     0x402bcd
  402b88:	add    BYTE PTR [ebx+0x45],ch
  402b8b:	adc    al,0x8b
  402b8d:	rcr    eax,0x48
  402b90:	add    BYTE PTR [ebx],al
  402b92:	add    ecx,DWORD PTR [eax]
  402b94:	pmaxub mm1,mm3
  402b97:	dec    ebp
  402b98:	dec    DWORD PTR [ebx+0x5545fc24]
  402b9e:	xor    esi,DWORD PTR [ebx]
  402ba0:	add    eax,DWORD PTR [ebx]
  402ba2:	cmp    esi,DWORD PTR [ebx]
  402ba4:	hlt    
  402ba5:	mov    DWORD PTR [edi],ecx
  402ba7:	fadd   QWORD PTR [ebp+0x8]
  402baa:	xor    edx,edi
  402bac:	add    ebx,edi
  402bae:	cmp    ecx,edx
  402bb0:	clts   
  402bb2:	jp     0x402c01
  402bb4:	dec    DWORD PTR [ecx+0x4dfcdc8b]
  402bba:	(bad)  
  402bbb:	xor    eax,edi
  402bbd:	add    eax,DWORD PTR [ebp+0xc]
  402bc0:	jne    0x402c07
  402bc2:	mov    ecx,DWORD PTR [ebp+0x724d01f8]
  402bc8:	xor    eax,DWORD PTR [eax]
  402bca:	lea    eax,[ebp+0x1]
  402bcd:	(bad)  
  402bce:	jb     0x402ba8
  402bd0:	add    BYTE PTR [ebp+0x45e9f845],al
  402bd6:	add    bh,bh
  402bd8:	add    BYTE PTR [eax*2+0x12018080],cl
  402bdf:	add    bh,al
  402be1:	adc    BYTE PTR [ecx*2+0x30e332d],cl
  402be8:	pop    ebp
  402be9:	mov    DWORD PTR [ebx],esi
  402beb:	hlt    
  402bec:	add    ecx,eax
  402bee:	jmp    0x852c05
  402bf3:	inc    DWORD PTR [ebp+0xc]
  402bf6:	xor    eax,DWORD PTR [eax+0x890103]
  402bfc:	in     al,dx
  402bfd:	push   eax
  402bfe:	inc    ebp
  402bff:	mov    DWORD PTR [ebx],esi
  402c01:	hlt    
  402c02:	add    eax,DWORD PTR [ebp-0x77]
  402c05:	or     DWORD PTR [esi+eiz*2],0x4d
  402c09:	(bad)  
  402c0a:	mov    esp,eax
  402c0c:	fcomp  QWORD PTR [ecx+0x45cff8ce]
  402c12:	enter  0x633,0x3
  402c16:	add    al,0x3b
  402c18:	mov    esp,esi
  402c1a:	in     al,dx
  402c1b:	and    eax,DWORD PTR [ebp+0x45]
  402c1e:	mov    ecx,DWORD PTR [ebx-0x39ba1f68]
  402c24:	mov    ecx,esi
  402c26:	cld    
  402c27:	pushf  
  402c28:	dec    ebp
  402c29:	lahf   
  402c2a:	xor    esi,DWORD PTR [edx]
  402c2c:	add    ecx,DWORD PTR [ebx-0x7f8befc5]
  402c32:	mov    eax,DWORD PTR [ecx]
  402c34:	cld    
  402c35:	add    BYTE PTR [ebp-0x31],cl
  402c38:	xor    ebp,DWORD PTR [edi+0x50c15103]
  402c3e:	pop    ds
  402c3f:	mov    eax,ecx
  402c41:	cld    
  402c42:	sbb    dh,al
  402c44:	dec    ebp
  402c45:	(bad)  
  402c46:	mov    eax,DWORD PTR [ebp+0x10]
  402c49:	jne    0x402bcb
  402c4b:	mov    eax,DWORD PTR [ecx]
  402c4d:	fadd   DWORD PTR [eax]
  402c4f:	(bad)  
  402c50:	mov    bh,0xc7
  402c52:	push   ecx
  402c53:	fdiv   DWORD PTR [ebp-0x7a]
  402c56:	(bad)  
  402c57:	dec    DWORD PTR [eax]
  402c59:	call   FWORD PTR [ecx]
  402c5b:	inc    ebp
  402c5c:	inc    ebp
  402c5d:	xor    eax,DWORD PTR [ebx]
  402c5f:	add    ecx,DWORD PTR [eax]
  402c61:	cmp    ecx,DWORD PTR [ebp-0xc]
  402c64:	mov    edx,DWORD PTR [edi]
  402c66:	fadd   DWORD PTR [ebp+0x0]
  402c69:	mov    eax,DWORD PTR [ebx-0x39fd18]
  402c6f:	test   ah,dh
  402c71:	lahf   
  402c72:	push   ecx
  402c73:	xor    cl,BYTE PTR [ecx+0x45e80c89]
  402c79:	out    dx,eax
  402c7a:	mov    eax,DWORD PTR [eax]
  402c7c:	or     al,0xc7
  402c7e:	(bad)  
  402c7f:	in     al,dx
  402c80:	(bad)  
  402c81:	sbb    eax,ecx
  402c83:	add    DWORD PTR [ebp+0x45],eax
  402c86:	jne    0x402c16
  402c88:	mov    eax,DWORD PTR [eax+ebp*8]
  402c8b:	mov    eax,esi
  402c8d:	cld    
  402c8e:	test   dh,bl
  402c90:	lahf   
  402c91:	fbstp  TBYTE PTR [edx]
  402c93:	ret    0x89
  402c96:	call   0x4e3c3d26
  402c9b:	(bad)  
  402c9c:	xor    eax,edi
  402c9e:	add    eax,DWORD PTR [ebp+0xf]
  402ca1:	mov    eax,ecx
  402ca3:	cld    
  402ca4:	dec    ebp
  402ca5:	(bad)  
  402ca6:	mov    edi,eax
  402ca8:	cdq    
  402ca9:	inc    ebp
  402caa:	inc    ebp
  402cab:	mov    esi,DWORD PTR [ebx]
  402cad:	cld    
  402cae:	lea    eax,[ebp+0x3]
  402cb1:	xor    esi,DWORD PTR [edx+0x3]
  402cb4:	add    BYTE PTR [ebx],bh
  402cb6:	inc    ebp
  402cb7:	je     0x402c44
  402cb9:	mov    esp,esp
  402cbb:	cwde   
  402cbc:	mov    BYTE PTR [ebp-0x39],0x8b
  402cc0:	add    al,0xe4
  402cc2:	(bad)  
  402cc4:	sub    ecx,DWORD PTR [ecx+0x458b0cff]
  402cca:	lock mov eax,DWORD PTR [ebp-0x14]
  402cce:	mov    eax,esi
  402cd0:	aam    0xc7
  402cd2:	jmp    0xd645:0x2972c1
  402cd9:	mov    eax,ebp
  402cdb:	in     al,dx
  402cdc:	inc    esi
  402cde:	mov    eax,edi
  402ce0:	cld    
  402ce1:	jmp    0x750f68b4
  402ce6:	ror    DWORD PTR [ebx+0x4575ec45],0x8b
  402ced:	mov    edi,eax
  402cef:	fadd   DWORD PTR [ebx]
  402cf1:	add    BYTE PTR [ebp+0xf],al
  402cf4:	xor    ecx,ecx
  402cf6:	add    edi,edi
  402cf8:	pop    edi
  402cf9:	hlt    
  402cfa:	pop    ebx
  402cfb:	push   eax
  402cfc:	ret    0xeb
  402cff:	mov    ecx,DWORD PTR [ebx+0x2845830c]
  402d05:	mov    eax,DWORD PTR [ebp+0x10]
  402d08:	cmp    BYTE PTR [ecx+0xc7019c],cl
  402d0e:	fadd   st,st(0)
  402d10:	test   DWORD PTR [eax-0x8],edx
  402d13:	jne    0x402d5a
  402d15:	dec    DWORD PTR [ecx+0x45450c08]
  402d1b:	mov    edi,DWORD PTR [ecx+0x74d08fc]
  402d21:	xor    eax,ecx
  402d23:	add    ebx,DWORD PTR [edi+0x568b323b]
  402d29:	clc    
  402d2a:	jne    0x402d3d
  402d2c:	add    ecx,DWORD PTR [ebp+0x3b]
  402d2f:	xor    ecx,DWORD PTR [edi]
  402d31:	lea    esp,[ecx]
  402d33:	add    DWORD PTR [eax],eax
  402d35:	jb     0x402cc2
  402d37:	add    BYTE PTR [eax],cl
  402d39:	inc    ebp
  402d3a:	jne    0x402d27
  402d3c:	add    ecx,DWORD PTR [ebx-0x3976f3c4]
  402d42:	or     al,0xc7
  402d44:	inc    ebp
  402d45:	scas   eax,DWORD PTR es:[edi]
  402d46:	aas    
  402d47:	mov    ebx,DWORD PTR [esp+eiz*8-0x741bfb75]
  402d4e:	jne    0x402d48
  402d50:	mov    eax,esi
  402d52:	or     al,0x9c
  402d54:	icebp  
  402d55:	lahf   
  402d56:	shl    DWORD PTR [edx],0xf2
  402d59:	mov    esi,DWORD PTR [esp+edi*8+0x33934d70]
  402d60:	lsl    ebp,bx
  402d63:	cmp    DWORD PTR [eax],eax
  402d65:	cdq    
  402d66:	mov    eax,DWORD PTR [ebp-0xba00f4]
  402d6c:	add    edx,DWORD PTR [ebp-0x60]
  402d6f:	mov    eax,DWORD PTR [eax]
  402d71:	call   0x81487b01
  402d76:	jge    0x402d16
  402d78:	sub    esi,DWORD PTR [edx]
  402d7a:	xor    al,0x33
  402d7c:	jge    0x402d67
  402d7e:	xor    edi,ebp
  402d80:	add    edi,edi
  402d82:	mov    DWORD PTR [ebp-0x24],ecx
  402d85:	xor    esi,edi
  402d87:	add    eax,DWORD PTR [ebx+edi*1-0x3ff7500]
  402d8e:	jne    0x402d98
  402d90:	xor    eax,DWORD PTR [ebp+0x3]
  402d93:	jmp    0x402d1e
  402d95:	mov    edi,eax
  402d97:	cld    
  402d98:	mov    esi,0x5e85c7f0
  402d9e:	clc    
  402d9f:	leave  
  402da0:	xchg   edi,eax
  402da1:	or     al,0x0
  402da3:	push   ebp
  402da4:	mov    ebp,esp
  402da6:	cld    
  402da7:	in     al,dx
  402da8:	icebp  
  402da9:	(bad)  
  402daa:	jnp    0x402da8
  402dac:	add    eax,DWORD PTR [ebp+0x453bf8d1]
  402db2:	jae    0x402def
  402db4:	sub    ebx,DWORD PTR [ebp+ecx*4-0x76f38f75]
  402dbb:	inc    ebp
  402dbc:	call   0x823ce54c
  402dc1:	pop    ecx
  402dc2:	call   DWORD PTR [ecx+0x0]
  402dc5:	xor    ecx,DWORD PTR [ecx+0x7d72ecba]
  402dcb:	add    BYTE PTR [ebx+0x3082b8b],cl
  402dd1:	ret    0xf00f
  402dd4:	xor    eax,DWORD PTR [esi+ebp*8-0x76ffccff]
  402ddb:	inc    ebp
  402ddc:	loopne 0x402d69
  402dde:	jne    0x402de8
  402de0:	mov    esi,DWORD PTR [eax-0x20]
  402de3:	push   edi
  402de4:	jge    0x402e5b
  402de6:	xor    eax,edi
  402de8:	(bad)  
  402de9:	in     al,0x3e
  402deb:	test   DWORD PTR [edx-0x8],esi
  402dee:	add    BYTE PTR [ebp+0x75],al
  402df1:	mov    ecx,DWORD PTR [ebx+0x7d7df0fc]
  402df7:	xor    esi,DWORD PTR [ebx]
  402df9:	xor    eax,DWORD PTR [ebx]
  402dfb:	add    edi,DWORD PTR [ebx]
  402dfd:	cmp    DWORD PTR [ebp-0x39],esi
  402e00:	mov    edx,DWORD PTR [ebp-0x7b82fe10]
  402e06:	xor    eax,DWORD PTR [eax]
  402e08:	add    eax,DWORD PTR [eax]
  402e0a:	cmp    esi,DWORD PTR [ebp+0x75]
  402e0d:	mov    ecx,DWORD PTR [ebx+0x7d86e008]
  402e13:	add    BYTE PTR [ecx],al
  402e15:	add    BYTE PTR [ebx+0x4d8b0275],al
  402e1b:	or     al,0x75
  402e1d:	ja     0x402daa
  402e1f:	mov    esi,esp
  402e21:	cld    
  402e22:	pop    ebp
  402e23:	stc    
  402e24:	mov    edi,edx
  402e26:	in     al,0x75
  402e28:	jge    0x402e65
  402e2a:	mov    ecx,DWORD PTR [edi]
  402e2c:	or     al,0xc4
  402e2e:	icebp  
  402e2f:	add    BYTE PTR [ebx+ecx*4-0xe6c038c],bh
  402e36:	jae    0x402e2a
  402e38:	add    esi,DWORD PTR [ebp-0xc]
  402e3b:	push   ebx
  402e3c:	jne    0x402e83
  402e3e:	mov    edi,DWORD PTR ds:0xe9f19c04
  402e44:	repnz add BYTE PTR [ebp+0x0],bl
  402e48:	cmp    esi,DWORD PTR [ebp+0xf]
  402e4b:	xor    edx,DWORD PTR [ebp+ecx*4-0x1]
  402e4f:	clc    
  402e50:	pop    ebx
  402e51:	repnz inc ebp
  402e53:	out    dx,eax
  402e54:	pop    edi
  402e55:	test   DWORD PTR [ebx],0x33fe456d
  402e5b:	pop    esp
  402e5c:	add    ecx,DWORD PTR [eax]
  402e5e:	pop    esi
  402e5f:	jge    0x402e23
  402e61:	(bad)  
  402e63:	xor    ecx,DWORD PTR [ebx+0x540f83e6]
  402e69:	add    BYTE PTR [ebp+0x75],al
  402e6c:	cmp    BYTE PTR [ebx+0x30c7ec9c],cl
  402e72:	fdivr  st(2),st
  402e74:	test   esi,edi
  402e76:	clc    
  402e77:	mov    bh,0x45
  402e79:	rcl    DWORD PTR [ebx+0xc],0xbe
  402e7d:	stc    
  402e7e:	or     BYTE PTR [ebp+0x7],bh
  402e81:	mov    esi,eax
  402e83:	in     al,dx
  402e84:	lahf   
  402e85:	jne    0x402eb9
  402e87:	mov    eax,DWORD PTR [ebx]
  402e89:	or     BYTE PTR [ecx+0x45b4e8f1],cl
  402e8f:	lahf   
  402e90:	xor    esi,DWORD PTR [edx]
  402e92:	add    ecx,DWORD PTR [ecx+0x75e0e089]
  402e98:	mov    ecx,DWORD PTR [ebx-0xeba13e0]
  402e9e:	mov    esi,edx
  402ea0:	lock inc cl
  402ea3:	push   ss
  402ea4:	inc    ebp
  402ea5:	jne    0x402e28
  402ea7:	mov    esi,eax
  402ea9:	in     al,dx
  402eaa:	mov    ch,0xf1
  402eac:	clc    
  402ead:	repnz inc ebp
  402eaf:	dec    BYTE PTR [ebx-0x3e8a07f8]
  402eb5:	mov    eax,DWORD PTR [ebp-0x24]
  402eb8:	cmp    DWORD PTR [esi],0xff85c3f8
  402ebe:	clc    
  402ebf:	call   0x5dcbce09
  402ec4:	hlt    
  402ec5:	add    ecx,eax
  402ec7:	clc    
  402ec8:	inc    ebp
  402ec9:	jne    0x402e4c
  402ecb:	mov    esi,esp
  402ecd:	clc    
  402ece:	test   DWORD PTR [ebp-0x8],ebx
  402ed1:	xor    eax,DWORD PTR [ebp+0x3b]
  402ed4:	mov    esi,ebx
  402ed6:	in     al,dx
  402ed7:	xchg   ebp,eax
  402ed8:	rol    DWORD PTR [ecx],0x45
  402edb:	sbb    BYTE PTR [ecx+0x58bec45],al
  402ee1:	cld    
  402ee2:	clc    
  402ee3:	pop    eax
  402ee4:	add    BYTE PTR [ebx],dh
  402ee6:	add    BYTE PTR [ebx],al
  402ee8:	mov    WORD PTR [ebp-0xc],ax
  402eec:	mov    ebx,esi
  402eee:	or     BYTE PTR [ebp-0x7b0040],al
  402ef4:	add    ecx,DWORD PTR [ebx-0x14ba2800]
  402efa:	test   DWORD PTR [ebx-0x3e2b03f1],ecx
  402f00:	add    dl,al
  402f02:	mov    ecx,ecx
  402f04:	sbb    BYTE PTR [eax],cl
  402f06:	rcl    BYTE PTR [ebp-0x7c],0xec
  402f0a:	add    ebp,esp
  402f0c:	add    bh,al
  402f0e:	mov    edi,esp
  402f10:	and    BYTE PTR [ebp+0x4500f843],al
  402f16:	cmp    ax,cx
  402f19:	pushf  
  402f1a:	or     cl,BYTE PTR [ebx+0x5666fc00]
  402f20:	rcr    DWORD PTR [ecx+0x4d],0x51
  402f24:	xor    ax,WORD PTR [ecx]
  402f27:	mov    ebx,0x37285
  402f2c:	add    bl,al
  402f2e:	inc    ebp
  402f2f:	inc    ebp
  402f30:	mov    ecx,DWORD PTR [ebx-0x39ba03f8]
  402f36:	add    eax,ebx
  402f38:	cmp    al,0x45
  402f3a:	inc    ebp
  402f3b:	push   edi
  402f3c:	mov    edi,DWORD PTR [ebp+0x50]
  402f3f:	mov    eax,eax
  402f41:	lock test BYTE PTR [ebp+0x3],cl
  402f45:	xor    eax,DWORD PTR [eax]
  402f47:	mov    DWORD PTR [ebp-0x10],eax
  402f4a:	cmp    BYTE PTR [ebp-0x74],al
  402f4d:	cmp    BYTE PTR [ebx-0x39742b64],cl
  402f53:	clc    
  402f54:	ret    
  402f55:	dec    ebp
  402f56:	inc    ebp
  402f57:	xor    ecx,DWORD PTR [ebx-0x78070377]
  402f5d:	inc    ebp
  402f5e:	add    eax,edi
  402f60:	add    BYTE PTR [eax+ecx*1+0x3f4498b],bl
  402f67:	dec    ebp
  402f68:	mov    esi,DWORD PTR [ebx]
  402f6a:	cld    
  402f6b:	mov    DWORD PTR [edi+0x4501f4],eax
  402f71:	cmp    al,0x10
  402f73:	pushf  
  402f74:	dec    ebp
  402f75:	mov    ecx,DWORD PTR [ecx-0x2db2df14]
  402f7b:	xor    esi,DWORD PTR [ebx]
  402f7d:	mov    DWORD PTR [edi+0x4501ec],eax
  402f83:	cmp    BYTE PTR [ebp-0x61],dl
  402f86:	push   edx
  402f87:	mov    eax,0x339555
  402f8c:	add    ecx,DWORD PTR [ecx+0x45712052]
  402f92:	inc    DWORD PTR [ebp-0x20aff0e0]
  402f98:	mov    eax,DWORD PTR [eax]
  402f9a:	in     al,0x8b
  402f9c:	inc    ecx
  402f9d:	or     al,0x8b
  402f9f:	rcl    BYTE PTR [eax-0x7c],0xc8
  402fa3:	add    eax,DWORD PTR [ebp+0x0]
  402fa6:	push   ecx
  402fa7:	inc    ebp
  402fa8:	call   0x4f3932
  402fad:	leave  
  402fae:	push   ebp
  402faf:	add    BYTE PTR [ebx+0x459466],cl
  402fb5:	mov    ecx,0x8b8a89
  402fba:	or     al,0x33
  402fbc:	jo     0x402f77
  402fbe:	(bad)  
  402fbf:	cmp    ecx,DWORD PTR [eax]
  402fc1:	add    al,ch
  402fc3:	add    eax,DWORD PTR [edi]
  402fc5:	mov    eax,DWORD PTR [eax]
  402fc7:	or     BYTE PTR [ebp+0x39],cl
  402fca:	mov    ecx,DWORD PTR [edi]
  402fcc:	cmp    al,0xa9
  402fce:	rol    DWORD PTR [eax],0xb7
  402fd1:	mov    edx,DWORD PTR [esp+edi*8]
  402fd4:	dec    esp
  402fd5:	dec    ebp
  402fd6:	sbb    BYTE PTR [ebx+0x418b084d],cl
  402fdc:	cld    
  402fdd:	mov    DWORD PTR [edi-0x31bff9f4],esi
  402fe3:	test   ebx,ecx
  402fe5:	cmovne ecx,DWORD PTR [edi-0x38f0ffc5]
  402fec:	test   al,0xd4
  402fee:	add    BYTE PTR [ebp+0x45fcf88b],al
  402ff4:	into   
  402ff5:	xor    ecx,ebx
  402ff7:	add    ecx,DWORD PTR [ebp-0x77]
  402ffa:	mov    edx,esp
  402ffc:	fadd   QWORD PTR [ebp-0x49]
  402fff:	mov    eax,DWORD PTR [esi]
  403001:	nop
  403002:	into   
  403003:	add    cl,dl
  403005:	mov    edx,ebx
  403007:	mov    edx,DWORD PTR [ebp+0x3c]
  40300a:	invd   
  40300c:	mov    BYTE PTR [ebp+0x0],al
  40300f:	mov    ecx,DWORD PTR [ebx-0x3dffe774]
  403015:	mov    ecx,DWORD PTR [ecx+0x3e41889]
  40301b:	push   ebp
  40301c:	push   ebp
  40301d:	cmp    ecx,DWORD PTR [ebx+0x488b3875]
  403023:	fmul   DWORD PTR [ecx+0x28dd000]
  403029:	call   0xf847bbef
  40302e:	rcl    esi,1
  403030:	rcl    ebx,0x45
  403033:	call   DWORD PTR [eax+0x50]
  403036:	inc    edx
  403037:	jne    0x40303c
  403039:	jmp    DWORD PTR [eax]
  40303b:	sbb    al,0xe8
  40303d:	dec    ebp
  40303e:	or     BYTE PTR [ebx+0x49555400],cl
  403044:	mov    ebp,DWORD PTR [ebx]
  403046:	sbb    BYTE PTR [ebx],al
  403048:	dec    eax
  403049:	and    BYTE PTR [ebx],dh
  40304b:	push   eax
  40304c:	add    edi,DWORD PTR [ebx]
  40304e:	cmp    eax,DWORD PTR [eax]
  403050:	je     0x402fdd
  403052:	push   ecx
  403053:	and    BYTE PTR [ebp-0x79],cl
  403056:	add    eax,DWORD PTR [ecx]
  403058:	or     al,0x0
  40305a:	inc    eax
  40305b:	adc    BYTE PTR [ebx],al
  40305d:	inc    ebp
  40305e:	and    bh,bh
  403060:	push   eax
  403061:	push   esp
  403062:	sub    DWORD PTR [ebp+0x0],esi
  403065:	push   edx
  403066:	mov    ecx,eax
  403068:	sbb    BYTE PTR [eax],al
  40306a:	dec    ebp
  40306b:	mov    ecx,DWORD PTR [ebx-0x3fbe1fe0]
  403071:	add    esi,DWORD PTR [ebx]
  403073:	jge    0x72cd3ac1
  403079:	add    DWORD PTR [eax],eax
  40307b:	mov    DWORD PTR [ebp+0x18],edx
  40307e:	mov    DWORD PTR [ebp+0x18],ecx
  403081:	cmovne edx,DWORD PTR [eax+0xf]
  403085:	xor    edx,DWORD PTR [edx+0x3]
  403088:	xor    ecx,DWORD PTR [ecx-0x2e74f3d5]
  40308e:	or     al,0x84
  403090:	rol    DWORD PTR [eax],cl
  403092:	dec    ebp
  403093:	add    BYTE PTR [ebx],bh
  403095:	dec    ebp
  403096:	jbe    0x4030cb
  403098:	mov    eax,DWORD PTR [ebx]
  40309a:	cld    
  40309b:	mov    DWORD PTR [edi+0x4d01e0],edx
  4030a1:	bswap  esi
  4030a3:	push   eax
  4030a4:	retf   
  4030a5:	xor    ecx,DWORD PTR [ebp+0x2b]
  4030a8:	mov    ebp,DWORD PTR [ebx]
  4030aa:	and    BYTE PTR [ecx],bh
  4030ac:	or     ah,al
  4030ae:	daa    
  4030af:	xchg   DWORD PTR [edi+0x100],eax
  4030b5:	push   ebp
  4030b6:	push   ebp
  4030b7:	adc    DWORD PTR [edx+0x8],0x55
  4030bb:	push   ebp
  4030bc:	xor    ebp,ebx
  4030be:	add    ecx,DWORD PTR [ebx+0x40551852]
  4030c4:	dec    DWORD PTR [ebp+0x45ffff54]
  4030ca:	sbb    al,0x8b
  4030cc:	rol    BYTE PTR [ebp-0x8fe8b7c],0x0
  4030d3:	and    eax,DWORD PTR [ebp+0x3]
  4030d6:	mov    edx,eax
  4030d8:	enter  0x8b,0x4
  4030dc:	mov    eax,DWORD PTR [ebp+0x33]
  4030df:	push   eax
  4030e0:	add    esp,DWORD PTR [edi-0x74f5fff1]
  4030e6:	add    ah,bh
  4030e8:	add    DWORD PTR [ebp-0x28],0xffffff8b
  4030ec:	mov    eax,0xd64f08
  4030f1:	ror    DWORD PTR [ecx-0x3fe83b36],cl
  4030f7:	mov    esp,DWORD PTR [esi+0x8]
  4030fa:	inc    ebp
  4030fb:	dec    eax
  4030fc:	mov    eax,0x44f8b
  403101:	inc    ebp
  403102:	mov    DWORD PTR [ecx-0x38],edx
  403105:	call   0xc338ca
  40310a:	or     BYTE PTR [ebp-0x75],al
  40310d:	mov    esp,DWORD PTR [esi-0x24]
  403110:	inc    ebp
  403111:	push   ebp
  403112:	mov    eax,0x284e83
  403117:	into   
  403118:	mov    DWORD PTR [edx+ecx*8-0x31cd7661],ecx
  40311f:	mov    eax,DWORD PTR [ebp+0xc]
  403122:	lea    eax,[ebp+0x45]
  403125:	mov    edi,DWORD PTR [ecx+0xb78adc]
  40312b:	push   es
  40312c:	xor    eax,esi
  40312e:	mov    edx,0x453bd0
  403133:	sub    eax,DWORD PTR [ebx]
  403135:	mov    edi,edi
  403137:	loopne 0x403141
  403139:	retf   0x837d
  40313c:	push   es
  40313d:	dec    ebp
  40313e:	mov    DWORD PTR [ebx+0xc78c72],ecx
  403144:	lods   al,BYTE PTR ds:[esi]
  403145:	xor    edx,edx
  403147:	add    esi,DWORD PTR [eax]
  403149:	mov    DWORD PTR [ebp+0x18],eax
  40314c:	xlat   BYTE PTR ds:[ebx]
  40314d:	dec    ebp
  40314e:	sar    BYTE PTR [ebx],cl
  403150:	(bad)  
  403151:	jne    0x403107
  403153:	mov    esp,edx
  403155:	fsub   st,st(7)
  403157:	add    BYTE PTR [ebp-0x73],al
  40315a:	xor    al,ch
  40315c:	in     al,dx
  40315d:	mov    eax,edi
  40315f:	hlt    
  403160:	mov    esp,0xd3d3d2d6
  403165:	mov    eax,edi
  403167:	in     al,0xc0
  403169:	jb     0x403158
  40316b:	push   ecx
  40316c:	inc    ebp
  40316d:	push   eax
  40316e:	jle    0x4030f5
  403170:	leave  
  403171:	cmove  esi,esp
  403174:	lods   al,BYTE PTR ds:[esi]
  403175:	add    BYTE PTR [eax],dl
  403177:	mov    esi,edx
  403179:	or     al,0x80
  40317b:	(bad)  
  40317c:	xor    al,0x1
  40317e:	mov    BYTE PTR [eax],al
  403180:	or     DWORD PTR [ecx],0x17
  403183:	into   
  403184:	in     al,dx
  403185:	retf   
  403186:	xchg   DWORD PTR [ecx+eax*1+0x4d000001],eax
  40318d:	gs push ecx
  40318f:	add    BYTE PTR [eax+0x27],dl
  403192:	mov    eax,DWORD PTR [eax]
  403194:	fsub   DWORD PTR [esi+0x0]
  403197:	inc    ebp
  403198:	lea    eax,[ebx-0x76affd54]
  40319e:	push   ecx
  40319f:	(bad)  
  4031a0:	lea    ebx,[ecx]
  4031a2:	fadd   DWORD PTR [eax]
  4031a4:	mov    esp,DWORD PTR [esi-0x74]
  4031a7:	inc    ebp
  4031a8:	add    BYTE PTR [ebx+0x65ff08ff],al
  4031ae:	mov    eax,DWORD PTR [eax]
  4031b0:	fmul   st,st(0)
  4031b2:	ror    BYTE PTR [ecx-0x4aba33c6],0xeb
  4031b9:	add    BYTE PTR [ebx-0x27b2769a],cl
  4031bf:	inc    bp
  4031c1:	inc    ebp
  4031c2:	je     0x40314f
  4031c4:	mov    ecx,DWORD PTR [eax]
  4031c6:	sbb    BYTE PTR [edi+ecx*4-0x3c],al
  4031ca:	add    DWORD PTR [ebx+0x0],eax
  4031cd:	add    BYTE PTR [ecx],dl
  4031cf:	jmpw   0x81db
  4031d3:	or     cl,BYTE PTR [ebx+0x668c00]
  4031d9:	retf   0x453b
  4031dc:	jne    0x403161
  4031de:	mov    ecx,DWORD PTR [eax]
  4031e0:	in     al,0x66
  4031e2:	(bad)
  4031e6:	add    BYTE PTR [ebp+0x52],al
  4031e9:	retf   0xec03
  4031ec:	mov    edi,eax
  4031ee:	sbb    al,0xb0
  4031f0:	inc    ebp
  4031f1:	call   0x463f654d
  4031f6:	and    al,ch
  4031f8:	and    ah,ch
  4031fa:	inc    edi
  4031fc:	test   DWORD PTR [eax+0x3fc3e90f],edi
  403202:	add    BYTE PTR [ebp-0x1],al
  403205:	ror    BYTE PTR [esp+ebp*8],cl
  403208:	(bad)  
  403209:	data16 jne 0x403251
  40320c:	call   0x729fe
  403211:	ret    0x33c0
  403214:	test   BYTE PTR [ebp-0x75fff300],cl
  40321a:	inc    ebp
  40321b:	or     BYTE PTR [ebx-0x3015dfb6],0x41
  403222:	sub    BYTE PTR [eax],dl
  403224:	(bad)  
  403225:	stc    
  403226:	test   DWORD PTR [edx+0xf],esi
  403229:	mov    ebx,DWORD PTR [ecx+0x570000d8]
  40322f:	lea    esi,[ebp-0x3c]
  403232:	call   0xff452d36
  403237:	pop    eax
  403239:	add    DWORD PTR [eax+eax*1+0x52005500],eax
  403240:	xchg   edi,edi
  403242:	add    DWORD PTR [eax],ecx
  403244:	add    BYTE PTR [ebp+0x55],cl
  403247:	push   ecx
  403248:	cmp    ecx,DWORD PTR [edi+0x8b0175]
  40324e:	fdiv   DWORD PTR [ecx]
  403250:	add    al,dl
  403252:	lea    eax,[ebp-0x18]
  403255:	test   edi,edi
  403257:	je     0x403241
  403259:	mov    DWORD PTR [ebp+0x8],ecx
  40325c:	dec    DWORD PTR [edx]
  40325e:	push   esp
  40325f:	add    bh,bh
  403261:	inc    ebp
  403262:	sbb    al,0x3b
  403264:	push   ebp
  403265:	or     BYTE PTR [ebx+0x50c80d],cl
  40326b:	mov    ecx,DWORD PTR [ebx+0x300338c]
  403271:	cmp    esi,DWORD PTR [ebp+esi*2-0x75]
  403275:	mov    ecx,DWORD PTR [eax+ebx*1]
  403278:	inc    ecx
  403279:	pop    edi
  40327b:	add    DWORD PTR [eax],ecx
  40327d:	add    BYTE PTR [ebp+0x7511f811],ah
  403283:	push   ebp
  403284:	dec    DWORD PTR [ebx+0xf69014]
  40328a:	or     BYTE PTR [ebx+0x11752800],cl
  403290:	adc    DWORD PTR [eax-0x61],0x660c008b
  403297:	push   eax
  403298:	jno    0x40330f
  40329a:	add    ebp,eax
  40329c:	push   edx
  40329d:	clc    
  40329e:	sar    bh,1
  4032a0:	xchg   eax,eax
  4032a2:	add    DWORD PTR [eax+eax*1-0x7ff7b00],eax
  4032a9:	jne    0x4032b5
  4032ab:	mov    eax,DWORD PTR [ebp-0x1]
  4032ae:	mov    esp,DWORD PTR [eax]
  4032b0:	sub    BYTE PTR [edx+eax*8-0x1],ah
  4032b4:	rol    BYTE PTR [ebp-0x5174f0bb],1
  4032ba:	loopne 0x4032bc
  4032bc:	dec    ebp
  4032bd:	mov    ecx,DWORD PTR [ecx+0x1855c70c]
  4032c3:	mov    eax,DWORD PTR [eax]
  4032c5:	call   0xffbe28ca
  4032ca:	add    al,al
  4032cc:	add    al,0x84
  4032ce:	add    BYTE PTR gs:[eax],al
  4032d1:	add    BYTE PTR [ebp-0x1],al
  4032d4:	jmp    0x4032f6
  4032d6:	xor    ecx,eax
  4032d8:	pop    edi
  4032d9:	call   FWORD PTR [ebx-0x7b]
  4032dc:	ret    0xf
  4032df:	mov    BYTE PTR [ebx+0x518b0f00],cl
  4032e5:	mov    WORD PTR [edi],cs
  4032e7:	add    BYTE PTR [ecx-0x75],al
  4032ea:	push   ebx
  4032eb:	and    BYTE PTR [ebx],dh
  4032ed:	adc    BYTE PTR [ebp-0x7a78f7e6],cl
  4032f3:	add    DWORD PTR [eax+eax*1-0x75],esi
  4032f7:	dec    ebp
  4032f8:	or     al,0x51
  4032fa:	sbb    al,0x75
  4032fc:	cmp    DWORD PTR [ebx+0x710ce408],ecx
  403302:	pop    eax
  403303:	push   edx
  403304:	add    edx,DWORD PTR [eax+0x3]
  403307:	mov    edi,DWORD PTR [ecx]
  403309:	and    BYTE PTR [eax],cl
  40330b:	xchg   DWORD PTR [edx],ecx
  40330d:	add    eax,eax
  40330f:	add    BYTE PTR [edi+0x0],al
  403312:	cli    
  403313:	(bad)  
  403314:	loope  0x4032d9
  403316:	shl    BYTE PTR [edi],0x5b
  403319:	dec    ebp
  40331a:	ret    0x8b
  40331d:	sub    BYTE PTR [ebx+0x28388345],cl
  403323:	pushf  
  403324:	inc    ebp
  403325:	mov    edi,DWORD PTR [eax]
  403327:	or     BYTE PTR [ebp+esi*2+0x59e481c7],bl
  40332e:	test   DWORD PTR [eax],eax
  403330:	clc    
  403331:	inc    DWORD PTR [ebp+0x10]
  403334:	cmp    al,dh
  403336:	pushf  
  403337:	jb     0x4032f1
  403339:	add    BYTE PTR [edi+0x9],cl
  40333c:	add    BYTE PTR [esi],dl
  40333e:	mov    edx,eax
  403340:	hlt    
  403341:	inc    eax
  403343:	(bad)  
  403344:	data16 rol BYTE PTR [ebp+0x0],1
  403348:	mov    eax,0x9c4f3b
  40334d:	jmp    0x4032d8
  40334f:	mov    edi,eax
  403351:	or     al,0xc0
  403353:	inc    eax
  403354:	add    ax,WORD PTR [ebp-0x1]
  403358:	mov    ecx,DWORD PTR [ecx+0x4545e008]
  40335e:	mov    ecx,DWORD PTR [ebx+0x1451c0c]
  403364:	mov    eax,DWORD PTR [ebp-0x10]
  403367:	add    DWORD PTR [ecx+0x7830800],edi
  40336d:	sbb    cl,al
  40336f:	jne    0x4032fc
  403371:	sub    esp,0x20
  403374:	lahf   
  403375:	mov    esi,DWORD PTR [edx]
  403377:	and    BYTE PTR [ebx],al
  403379:	add    dl,BYTE PTR [edi-0x40]
  40337c:	lock pop esi
  40337e:	test   cl,cl
  403380:	add    DWORD PTR [eax+eax*1],ebx
  403383:	push   ebp
  403384:	inc    ebp
  403385:	in     al,dx
  403386:	mov    esi,DWORD PTR [edi-0x483ef918]
  40338c:	ret    0xf014
  40338f:	push   edi
  403390:	test   bh,bh
  403392:	add    DWORD PTR [eax+eax*1+0x18],eax
  403396:	inc    ebp
  403397:	shl    BYTE PTR [ebx],cl
  403399:	pop    ds
  40339a:	add    ecx,DWORD PTR [eax-0x77]
  40339d:	(bad)  
  40339e:	loopne 0x4033d1
  4033a0:	inc    ebp
  4033a1:	pop    ebp
  4033a2:	xor    esi,DWORD PTR [edx+0x3]
  4033a5:	mov    ecx,DWORD PTR [ecx-0x482623f8]
  4033ab:	fdivp  st(4),st
  4033ad:	pop    ebp
  4033ae:	mov    bh,0x72
  4033b0:	hlt    
  4033b1:	add    DWORD PTR [ebx+0x28],0x0
  4033b5:	cmp    esp,DWORD PTR [esi+0x72]
  4033b8:	lock xor eax,DWORD PTR [ebx+0x5f]
  4033bc:	add    BYTE PTR [ebp+0x66],bl
  4033bf:	add    al,0xfb
  4033c1:	push   ebp
  4033c2:	or     ch,ah
  4033c4:	add    ah,ch
  4033c6:	data16 (bad) 
  4033c8:	lock lock add eax,DWORD PTR [ebp+0x4566f82b]
  4033d0:	jge    0x40340d
  4033d2:	mov    ebx,DWORD PTR [eax+eiz*8+0x66d87dc7]
  4033d9:	test   DWORD PTR [eax+edi*8],esi
  4033dc:	data16 adc al,0x75
  4033df:	add    BYTE PTR [ebx+0x7d45dc66],cl
  4033e5:	and    DWORD PTR [esi+0x60],0x34
  4033e9:	mov    DWORD PTR [esi-0x4],esp
  4033ec:	jne    0x403421
  4033ee:	mov    esi,0x667200
  4033f3:	inc    ebp
  4033f4:	or     BYTE PTR [ebx-0x76742000],al
  4033fa:	lock clc 
  4033fc:	mov    eax,DWORD PTR [ebp+0xc]
  4033ff:	mov    edi,esi
  403401:	in     al,dx
  403402:	or     BYTE PTR [ebp+0x0],al
  403405:	mov    esi,edi
  403407:	call   0x534f7947
  40340c:	sbb    bl,BYTE PTR [ecx+0x0]
  40340f:	push   ecx
  403410:	mov    esi,DWORD PTR [ebx]
  403412:	lock push esi
  403414:	pop    ebp
  403415:	jne    0x40344a
  403417:	mov    edx,0x3b7203
  40341c:	retw   0x3b7d
  403420:	minpd  xmm7,xmm0
  403424:	str    WORD PTR [ebp+0x66f0008b]
  40342b:	jne    0x40340c
  40342d:	xor    eax,DWORD PTR [ebx+eax*1+0xf003b00]
  403434:	mov    esp,esi
  403436:	cld    
  403437:	add    BYTE PTR [ebx-0x75],al
  40343a:	add    al,dh
  40343c:	sar    bx,0xc2
  403440:	mov    eax,DWORD PTR [ebp+0x8]
  403443:	mov    eax,DWORD PTR [ebx]
  403445:	lock rcr di,0xc2
  40344a:	es inc ebp
  40344c:	mov    ecx,DWORD PTR [edi]
  40344e:	clc    
  40344f:	jne    0x403494
  403451:	(bad)  
  403453:	jge    0x4034bb
  403455:	mov    eax,0x8b8afb
  40345a:	or     BYTE PTR [ebx],dh
  40345c:	add    edi,DWORD PTR [ebx+0xdf8a66]
  403462:	push   cs
  403463:	xor    esi,DWORD PTR [edi-0x48c4f748]
  403469:	add    ah,dh
  40346b:	add    edi,ebx
  40346d:	mov    ax,di
  403470:	or     dh,bh
  403472:	mov    ecx,DWORD PTR [ecx+0x7543f4fc]
  403478:	add    BYTE PTR [ebx-0x7404139a],cl
  40347e:	mov    esi,DWORD PTR [edi+0xc]
  403481:	mov    DWORD PTR [ebx],eax
  403483:	or     BYTE PTR [esi+0x75],ah
  403486:	fisttp WORD PTR [ebx-0x747417da]
  40348c:	clc    
  40348d:	ja     0x4034d2
  40348f:	mov    DWORD PTR [eax],eax
  403491:	or     al,0x66
  403493:	lahf   
  403494:	sti    
  403495:	add    BYTE PTR [ebx+0x3010ce9],cl
  40349b:	add    BYTE PTR [esi+0x7d],ah
  40349e:	fbld   TBYTE PTR [esi+0xe]
  4034a1:	pop    ebp
  4034a2:	mov    bh,0x81
  4034a4:	or     al,0x59
  4034a6:	mov    bh,0x0
  4034a8:	hlt    
  4034a9:	add    edi,ebx
  4034ab:	mov    di,bx
  4034ae:	or     al,0x84
  4034b0:	mov    eax,DWORD PTR [ecx]
  4034b2:	or     al,0x0
  4034b4:	mov    edi,DWORD PTR [ebp+0x8]
  4034b7:	mov    edi,DWORD PTR [ebx]
  4034b9:	adc    BYTE PTR [edi],cl
  4034bb:	stc    
  4034bc:	mov    ebx,0x8bdf00fa
  4034c1:	mov    ebx,eax
  4034c3:	or     al,0x5d
  4034c5:	mov    esi,DWORD PTR [ebx]
  4034c7:	or     BYTE PTR [ebp+0x72001f84],cl
  4034cd:	add    BYTE PTR [eax],al
  4034cf:	cmp    edi,DWORD PTR [ebp+0xf]
  4034d2:	mov    ecx,DWORD PTR [ebp+0x665d00d8]
  4034d8:	xor    edi,DWORD PTR [ebp-0x73]
  4034db:	mov    ebx,0x728a1f
  4034e0:	add    BYTE PTR [ebx],dh
  4034e2:	jge    0x40354a
  4034e4:	mov    ebx,DWORD PTR [ebp-0x20]
  4034e7:	pop    bp
  4034e9:	clc    
  4034ea:	cmp    di,WORD PTR [edx+esi*2]
  4034ee:	data16 data16 jge 0x40356f
  4034f2:	mov    edi,DWORD PTR [ebx+0x5d8adc]
  4034f8:	xor    di,WORD PTR [esi+eiz*2]
  4034fc:	pop    bp
  4034fe:	jge    0x403566
  403500:	mov    edi,eax
  403502:	lock cmp ecx,DWORD PTR [ebx-0x8f0f789]
  403509:	jge    0x403513
  40350b:	ltr    WORD PTR [ebp-0x2]
  40350f:	add    edi,DWORD PTR [ebx]
  403511:	hsubpd xmm4,xmm0
  403515:	data16 (bad) 
  403517:	jge    0x4034a4
  403519:	mov    ebx,0xf18ae4
  40351e:	dec    ebp
  40351f:	xor    eax,DWORD PTR [ebx]
  403521:	minpd  xmm6,xmm1
  403525:	data16 jne 0x403520
  403528:	jmp    0x403565
  40352a:	mov    esi,DWORD PTR [edx-0x10]
  40352d:	sar    WORD PTR [ebp+0x4d],1
  403531:	mov    ebx,0xa8a8d
  403536:	jb     0x40356b
  403538:	add    BYTE PTR [esi+0x4d],ah
  40353b:	pop    ebp
  40353c:	mov    esp,DWORD PTR [esi-0x20]
  40353f:	clc    
  403540:	jne    0x40357d
  403542:	data16 ja 0x403579
  403545:	jnp    0xf14f9bc8
  40354b:	pop    ebp
  40354c:	inc    ebx
  40354d:	add    eax,DWORD PTR [eax]
  40354f:	data16 data16 jge 0x403545
  403553:	data16 mov ch,0x7d
  403556:	add    BYTE PTR [esi+0x66],ah
  403559:	pop    ebp
  40355a:	icebp  
  40355b:	sbb    di,bx
  40355e:	jne    0x4034e5
  403560:	mov    eax,DWORD PTR [eax]
  403562:	call   0x77bdc067
  403567:	mov    ebp,DWORD PTR [ebx]
  403569:	in     al,dx
  40356a:	data16 stc 
  40356c:	repnz mov esp,0x32759f3b
  403572:	xor    ecx,DWORD PTR [ecx+0x7d33eceb]
  403578:	inc    eax
  403579:	mov    eax,DWORD PTR [edi]
  40357b:	call   0xbc742ec5
  403580:	add    ebx,DWORD PTR [edi-0x76a4cda1]
  403586:	ret    0xe8
  403589:	jge    0x403516
  40358b:	mov    edx,DWORD PTR [ecx-0x14]
  40358e:	mov    ecx,DWORD PTR [ebx-0x76f584aa]
  403594:	add    BYTE PTR [eax],cl
  403596:	data16 jge 0x403567
  403599:	mov    eax,DWORD PTR [ebx-0x18]
  40359c:	add    BYTE PTR [ebx-0x7631849a],cl
  4035a2:	mov    ch,0xc
  4035a4:	add    BYTE PTR [ebp-0x39],bh
  4035a7:	data16 cld 
  4035a9:	pop    ebp
  4035aa:	test   DWORD PTR [ecx+0x3859f8],eax
  4035b0:	pushf  
  4035b1:	add    esp,DWORD PTR [esi+0x66]
  4035b4:	into   
  4035b5:	fistp  WORD PTR [ebp-0x7b]
  4035b8:	push   edi
  4035b9:	(bad)  
  4035ba:	mov    bh,0xff
  4035bc:	mov    edi,0xff338d75
  4035c1:	mov    ebx,DWORD PTR [ecx-0x10]
  4035c4:	push   ecx
  4035c5:	repnz mov ebx,0x894faf
  4035cb:	lock cmp edx,DWORD PTR [edx]
  4035ce:	jne    0x403625
  4035d0:	mov    DWORD PTR [ebx],esi
  4035d2:	cld    
  4035d3:	mov    edx,DWORD PTR [edi-0x1c]
  4035d6:	xor    ecx,DWORD PTR [ebx+ecx*4+0x6632339f]
  4035dd:	mov    DWORD PTR [esp+eiz*8-0x749baac2],ecx
  4035e4:	mov    ebx,0x8b3bec
  4035e9:	push   esi
  4035ea:	sub    ecx,eax
  4035ec:	mov    ebx,0xba8a2b
  4035f1:	mov    dh,BYTE PTR [ebx]
  4035f3:	add    BYTE PTR [ebx+0xb94e33],bh
  4035f9:	dec    esi
  4035fa:	cmp    eax,DWORD PTR [eax]
  4035fc:	jne    0x403639
  4035fe:	mov    esi,DWORD PTR [ebp-0x4]
  403601:	mov    ebx,DWORD PTR [ebx-0x24]
  403604:	stc    
  403605:	jge    0x40358c
  403607:	data16 clc 
  403609:	xor    al,0x9
  40360b:	data16 into 
  40360d:	lock test BYTE PTR [ebx],dh
  403610:	inc    eax
  403611:	data16 fs icebp 
  403614:	pop    esi
  403615:	add    al,0xc3
  403617:	ror    BYTE PTR [ebx+0x57c0510c],0xeb
  40361e:	inc    ebp
  40361f:	mov    edi,DWORD PTR [ecx]
  403621:	in     al,0x9c
  403623:	sar    DWORD PTR [esi-0x7a17a3e],0xc9
  40362a:	pop    ebx
  40362b:	or     al,0xff
  40362d:	push   ebp
  40362e:	mov    ebp,esp
  403630:	mov    ah,BYTE PTR [esi+0x4]
  403633:	or     BYTE PTR [esi+edi*4],dh
  403636:	cmp    al,0x3b
  403638:	je     0x40363a
  40363a:	mov    ebp,DWORD PTR [ebx]
  40363c:	mov    edx,0xff8a8dbe
  403641:	add    BYTE PTR [ecx+0x33],bl
  403644:	push   ecx
  403645:	mov    esi,0x8b4e53
  40364a:	mov    ebx,0x393b45
  40364f:	pushf  
  403650:	sub    edi,DWORD PTR [edx-0x7757a45]
  403656:	add    BYTE PTR [ebx],bh
  403658:	xor    esi,DWORD PTR [ebx+edi*4+0x53]
  40365c:	dec    edi
  40365d:	str    ecx
  403660:	cmp    esp,DWORD PTR [ecx+0x75]
  403663:	int    0x89
  403665:	mov    esi,0x77208fc
  40366a:	xor    edx,DWORD PTR [ecx]
  40366c:	mov    eax,DWORD PTR [eax]
  40366e:	xor    esp,DWORD PTR [esi-0x73]
  403671:	retf   
  403672:	push   edi
  403673:	add    esp,ebp
  403675:	push   ebp
  403676:	add    BYTE PTR [ebp-0x293cfee8],cl
  40367c:	cmp    dl,0x4a
  40367f:	(bad)  
  403680:	sti    
  403681:	mov    esi,DWORD PTR [ebp+0x78]
  403684:	mov    esp,ebp
  403686:	cld    
  403687:	add    BYTE PTR ds:0xf800850a,bh
  40368d:	data16 or al,0xcb
  403690:	rol    DWORD PTR [ebx-0x37],0x0
  403694:	mov    DWORD PTR [esi+0x47],esp
  403697:	retf   
  403698:	in     eax,0xb5
  40369a:	add    BYTE PTR [eax],al
  40369c:	(bad)  
  40369d:	pop    si
  40369f:	retf   
  4036a0:	ret    
  4036a1:	enter  0x4d8b,0x51
  4036a5:	pop    edi
  4036a6:	mov    DWORD PTR [ecx-0x637ac604],0x333874f8
  4036b0:	pushf  
  4036b1:	(bad)  
  4036b2:	call   0x2634ff
  4036b7:	add    BYTE PTR [ebx+0x3b55bac9],cl
  4036bd:	in     al,dx
  4036be:	add    BYTE PTR [esi+0x2b],dl
  4036c1:	(bad)  
  4036c2:	mov    edx,0x858afc
  4036c7:	clc    
  4036c8:	xor    edi,DWORD PTR [eax]
  4036ca:	mov    edx,0xe84e9c
  4036cf:	(bad)  
  4036d0:	cmp    edi,edi
  4036d2:	je     0x4036cc
  4036d4:	push   ebx
  4036d5:	pop    es
  4036d6:	sysenter 
  4036d8:	leave  
  4036d9:	dec    edx
  4036da:	popa   
  4036db:	jle    0x4036aa
  4036dd:	popa   
  4036de:	mov    edi,0x76108c7
  4036e3:	int    0x67
  4036e5:	mov    ecx,0x7660800
  4036ea:	retf   
  4036eb:	add    ax,WORD PTR [eax]
  4036ee:	jne    0x4036fa
  4036f0:	lea    eax,[eax]
  4036f2:	add    DWORD PTR [esi-0x9],esp
  4036f5:	ret    
  4036f6:	(bad)  
  4036f7:	inc    ebx
  4036f8:	xlat   BYTE PTR ds:[ebx]
  4036f9:	add    BYTE PTR [ebx-0x1a3caf9a],cl
  4036ff:	add    BYTE PTR [bx+si],al
  403702:	or     ah,BYTE PTR [esi+0x0]
  403705:	ret    
  403706:	add    cx,bx
  403709:	jne    0x40374e
  40370b:	lea    eax,[eax]
  40370d:	add    DWORD PTR [esi-0xf],esp
  403710:	retf   
  403711:	(bad)  
  403712:	mov    ch,0xd1
  403714:	add    BYTE PTR [esi+eiz*2-0x379b34c2],al
  40371b:	mov    bh,BYTE PTR [ebp-0x80]
  40371e:	cmp    DWORD PTR [esp+ebx*4],esi
  403721:	repz pop edi
  403723:	xor    BYTE PTR [esi+edi*2+0x33],0xc3
  403728:	inc    eax
  403729:	inc    ebp
  40372a:	add    bl,BYTE PTR [ebx-0x40]
  40372d:	cmp    ecx,ecx
  40372f:	pushf  
  403730:	push   ebp
  403731:	je     0x40371f
  403733:	xor    ecx,DWORD PTR [ebx-0x4899f7cd]
  403739:	mov    WORD PTR [esi+0x3e],ss
  40373c:	and    DWORD PTR [esp+eax*8-0x75],0xc9435fff
  403744:	add    BYTE PTR [ebp+0x57],dl
  403747:	in     al,dx
  403748:	(bad)  
  403749:	push   esi
  40374a:	mov    ch,0x45
  40374c:	add    BYTE PTR [ecx],bh
  40374e:	mov    DWORD PTR [esp+edi*8+0x74853bbe],ebx
  403755:	clc    
  403756:	mov    edx,edx
  403758:	or     bh,bh
  40375a:	ret    0x4566
  40375d:	or     bl,ch
  40375f:	or     cl,BYTE PTR [ebx-0x7699f800]
  403765:	retf   0x4383
  403768:	add    al,BYTE PTR [eax]
  40376a:	mov    bh,0x66
  40376c:	adc    dl,cl
  40376e:	iret   
  40376f:	mov    ch,0xc7
  403771:	add    ah,al
  403773:	dec    dx
  403776:	(bad)  
  403777:	push   edi
  403778:	mov    ch,0x57
  40377a:	add    BYTE PTR [edi-0x7207459a],dh
  403780:	(bad)  
  403782:	rcr    BYTE PTR [ecx+0x66],0x51
  403786:	add    bh,BYTE PTR [ebx+0x5e4f45]
  40378c:	ret    0x3b
  40378f:	jne    0x40371c
  403791:	mov    DWORD PTR [ebx+0x457218fc],eax
  403797:	xor    edi,DWORD PTR [eax]
  403799:	mov    ebx,DWORD PTR [ebx+esi*1-0x73179939]
  4037a0:	test   DWORD PTR [esi],edi
  4037a2:	clc    
  4037a3:	fs inc ebp
  4037a5:	mov    ebx,0x83b35
  4037aa:	pop    es
  4037ab:	sub    ebx,DWORD PTR [edi-0x7675cd45]
  4037b1:	add    al,bh
  4037b3:	xor    eax,DWORD PTR [ebp-0x45]
  4037b6:	xor    BYTE PTR [esi-0x64],cl
  4037b9:	add    bh,al
  4037bb:	cmp    esi,esp
  4037bd:	jne    0x403744
  4037bf:	cmp    eax,0x3a8545fc
  4037c5:	clc    
  4037c6:	pushf  
  4037c7:	pop    ebx
  4037c8:	mov    eax,DWORD PTR ds:0xeb59c0ec
  4037ce:	push   ecx
  4037cf:	xor    ecx,DWORD PTR [ebx-0x7b3c07a2]
  4037d5:	mov    ebx,DWORD PTR [edi-0x74bacdaf]
  4037db:	psubsb mm1,QWORD PTR [eax]
  4037de:	icebp  
  4037df:	lea    ecx,[eax]
  4037e1:	test   BYTE PTR [edi],0xff
  4037e4:	sar    DWORD PTR [esi+0x8a72],0x55
  4037eb:	xor    ecx,DWORD PTR [edi]
  4037ed:	mov    edi,0xc24ed1
  4037f2:	adc    DWORD PTR [ebp+0x0],0x66
  4037f6:	add    bh,al
  4037f8:	inc    ebp
  4037f9:	sub    ecx,DWORD PTR [ebx-0x3ed407bb]
  4037ff:	mov    DWORD PTR [ebp+0x8],ecx
  403802:	add    DWORD PTR [ebx],0x66514559
  403808:	or     DWORD PTR [edx],0xf32c29f
  40380e:	cmp    edi,DWORD PTR [esi+esi*2]
  403811:	mov    ecx,DWORD PTR [ebx+0x45f60881]
  403817:	dec    DWORD PTR [ebx+0x4db80c33]
  40381d:	dec    esi
  40381e:	mov    eax,DWORD PTR [eax]
  403820:	mov    DWORD PTR [ebx],edi
  403822:	mov    esi,DWORD PTR [ebp+0x4]
  403825:	xor    ecx,DWORD PTR [eax+0x5f]
  403828:	mov    ecx,DWORD PTR [ecx-0x3a67410]
  40382e:	push   ecx
  40382f:	leave  
  403830:	mov    eax,DWORD PTR [eax+edi*8]
  403833:	push   ebp
  403834:	test   ah,ch
  403836:	lahf   
  403837:	in     al,dx
  403838:	xor    al,bh
  40383a:	mov    esp,ebp
  40383c:	clc    
  40383d:	test   DWORD PTR [ebp-0x74baff08],ebx
  403843:	cmp    edx,DWORD PTR [eax]
  403845:	pushf  
  403846:	dec    ebp
  403847:	mov    ebp,DWORD PTR [ebx]
  403849:	in     al,dx
  40384a:	mov    ebx,DWORD PTR [ecx-0xc]
  40384d:	push   ecx
  40384e:	icebp  
  40384f:	add    eax,0x77208
  403854:	rol    DWORD PTR [ebp+0x72],0xc7
  403858:	add    al,dh
  40385a:	rol    DWORD PTR [ebp+0x4545f827],0x3
  403861:	cmp    al,0xf8
  403863:	pushf  
  403864:	dec    ebp
  403865:	mov    DWORD PTR [ebx],0x985f8fc
  40386b:	clc    
  40386c:	or     BYTE PTR [ebp+0x45],al
  40386f:	xor    eax,0x7080835
  403874:	pop    es
  403875:	dec    ebp
  403876:	dec    ebp
  403877:	lea    ecx,[ebp+0x72720101]
  40387d:	add    BYTE PTR [eax],al
  40387f:	dec    ebp
  403880:	inc    ebp
  403881:	sub    ebx,0x10518b59
  403887:	or     DWORD PTR [ebp-0x61],0x8b8b322b
  40388e:	cld    
  40388f:	adc    cl,dh
  403891:	scas   eax,DWORD PTR es:[edi]
  403892:	or     BYTE PTR [ebx],bh
  403894:	pop    es
  403895:	xadd   ebp,ebp
  403898:	jb     0x40389a
  40389a:	add    BYTE PTR [ebx+0x4d2910c1],cl
  4038a0:	inc    ebp
  4038a1:	sub    eax,DWORD PTR [ebx]
  4038a3:	mov    edi,eax
  4038a5:	lock dec ebp
  4038a7:	icebp  
  4038a8:	add    ecx,DWORD PTR [eax]
  4038aa:	clc    
  4038ab:	pop    es
  4038ac:	mov    eax,ecx
  4038ae:	data16 jb 0x4038b9
  4038b1:	add    BYTE PTR [ebp-0x3f],al
  4038b4:	xor    eax,0x7450830
  4038b9:	add    ecx,DWORD PTR [ebp-0x8]
  4038bc:	lea    ecx,[ebp+0x1]
  4038bf:	add    esi,DWORD PTR [edx-0x8]
  4038c2:	add    BYTE PTR [ecx],dl
  4038c4:	inc    ebp
  4038c5:	adc    bl,ch
  4038c7:	dec    ecx
  4038c8:	mov    ecx,DWORD PTR [ecx+0x45450408]
  4038ce:	mov    esi,DWORD PTR ds:0x74d080c
  4038d4:	mov    cl,BYTE PTR [ebp-0x78]
  4038d7:	lea    ecx,[ebx-0x768d07ff]
  4038dd:	add    al,bh
  4038df:	inc    ebp
  4038e0:	in     al,0xe9
  4038e2:	inc    DWORD PTR [eax]
  4038e4:	leave  
  4038e5:	add    BYTE PTR [eax*2-0x71374ab],cl
  4038ec:	push   ecx
  4038ed:	rol    DWORD PTR [ebp+0x4d],0x38
  4038f1:	sbb    DWORD PTR [ecx+ebx*2-0x7e07ae39],0x32f89f85
  4038fc:	sar    BYTE PTR [ebx],0x74
  4038ff:	jbe    0x40388c
  403901:	mov    edi,esp
  403903:	or     BYTE PTR [ecx+0x45],bl
  403906:	push   ecx
  403907:	mov    eax,DWORD PTR ds:0x4d720c
  40390d:	mov    eax,DWORD PTR [ebp-0x77]
  403910:	jne    0x40389d
  403912:	jmp    0x403908
  403914:	mov    ebx,DWORD PTR [ecx-0x8]
  403917:	push   ecx
  403918:	pop    ecx
  403919:	mov    edx,DWORD PTR [ecx-0x8]
  40391c:	add    eax,0x9f7284
  403921:	xor    cl,BYTE PTR [ebp-0x77]
  403924:	sub    edi,eax
  403926:	mov    DWORD PTR [ebx+0xc],ebx
  403929:	inc    ebp
  40392a:	inc    ebp
  40392b:	mov    esi,DWORD PTR ds:0x7c108f8
  403931:	dec    ebp
  403932:	lahf   
  403933:	xor    DWORD PTR [edx],0x8518b59
  403939:	or     DWORD PTR [ebp-0x61],0x3beb3288
  403940:	leave  
  403941:	jbe    0x40394b
  403943:	mov    edx,DWORD PTR [ebp+0x8]
  403946:	in     al,dx
  403947:	inc    ebp
  403948:	in     al,dx
  403949:	mov    eax,DWORD PTR [edx]
  40394b:	or     al,0x0
  40394d:	dec    ebp
  40394e:	inc    ebp
  40394f:	data16 cmp BYTE PTR [ecx],cl
  403952:	pushf  
  403953:	mov    edi,eax
  403955:	mov    esi,eax
  403957:	cld    
  403958:	test   DWORD PTR [ecx-0x8],ebx
  40395b:	push   ecx
  40395c:	inc    ebp
  40395d:	mov    ecx,DWORD PTR [ebx-0x3f7bf708]
  403963:	lahf   
  403964:	pop    es
  403965:	xor    al,al
  403967:	mov    DWORD PTR [ebp-0x74e8ff08],esp
  40396d:	inc    ebp
  40396e:	or     al,0x3
  403970:	sar    al,0xf2
  403973:	dec    ebp
  403974:	lea    eax,[ebx]
  403976:	in     al,0xf8
  403978:	dec    DWORD PTR [ecx]
  40397a:	mov    DWORD PTR [eax],ecx
  40397c:	cld    
  40397d:	inc    ebp
  40397e:	inc    ebp
  40397f:	inc    eax
  403980:	mov    DWORD PTR [ebp-0x14],eax
  403983:	jmp    0xff9737cd
  403988:	mov    edi,0x70008c2
  40398d:	mov    eax,edi
  40398f:	push   ecx
  403990:	lahf   
  403991:	(bad)  
  403992:	xor    bh,ah
  403994:	add    eax,DWORD PTR [ebp+0x4510f889]
  40399a:	inc    ebp
  40399b:	cmp    ebp,eax
  40399d:	pushf  
  40399e:	std    
  40399f:	xor    edi,edi
  4039a1:	inc    eax
  4039a2:	fadd   DWORD PTR [eax+0x45]
  4039a5:	inc    ebp
  4039a6:	mov    esi,DWORD PTR ds:0x7510814
  4039ac:	inc    ebp
  4039ad:	lahf   
  4039ae:	xor    DWORD PTR [edx],0x8
  4039b1:	cmp    DWORD PTR [ebp+0xc],eax
  4039b4:	mov    eax,DWORD PTR [edx]
  4039b6:	clc    
  4039b7:	sub    al,0x40
  4039b9:	inc    ebp
  4039ba:	call   0xff4934f4
  4039bf:	pop    es
  4039c0:	inc    ebp
  4039c1:	lahf   
  4039c2:	push   DWORD PTR [edx]
  4039c4:	adc    BYTE PTR [ebx-0x3717f3ab],cl
  4039ca:	std    
  4039cb:	dec    ebp
  4039cc:	dec    DWORD PTR [ebx+0x5908fcdb]
  4039d2:	inc    ebp
  4039d3:	push   ecx
  4039d4:	call   0xffb335de
  4039d9:	add    BYTE PTR [ebp+0x4d],al
  4039dc:	xor    eax,DWORD PTR [ebx]
  4039de:	add    ecx,DWORD PTR [eax+edx*2]
  4039e1:	add    DWORD PTR [ebp-0x45],esi
  4039e4:	inc    edx
  4039e6:	cld    
  4039e7:	add    BYTE PTR [ecx],dh
  4039e9:	mov    edi,edi
  4039eb:	or     DWORD PTR [ebx-0x30ff0be4],0xc1f4cec7
  4039f5:	test   DWORD PTR [esi],ebx
  4039f7:	clc    
  4039f8:	inc    ebp
  4039f9:	inc    ebp
  4039fa:	mov    edi,DWORD PTR [ebx]
  4039fc:	mov    DWORD PTR [esp+ecx*1-0x74efba75],ebx
  403a03:	inc    ebp
  403a04:	or     al,0x85
  403a06:	shl    BYTE PTR [ebp+0x3b],0x33
  403a0a:	jne    0x4039f5
  403a0c:	xor    eax,DWORD PTR [eax]
  403a0e:	pop    edi
  403a0f:	add    BYTE PTR [ebx+0x45],bl
  403a12:	ret    0x85
  403a15:	je     0x403a5c
  403a17:	push   ebx
  403a18:	mov    eax,DWORD PTR [ebp-0xe02e8]
  403a1e:	mov    eax,DWORD PTR [ebp-0x75]
  403a21:	mov    ecx,DWORD PTR [esp+ecx*1]
  403a24:	in     al,dx
  403a25:	inc    ebp
  403a26:	or     DWORD PTR [ebx+0x5753f408],0x57
  403a2d:	pop    ecx
  403a2e:	test   BYTE PTR [ecx+0x0],dl
  403a31:	xor    eax,DWORD PTR [eax]
  403a33:	mov    esi,0x8472c0
  403a38:	add    dh,al
  403a3a:	add    BYTE PTR [ebp-0x49],al
  403a3d:	mov    esp,DWORD PTR [eax]
  403a3f:	or     al,0xc8
  403a41:	add    BYTE PTR [ebp-0x1],al
  403a44:	xor    ecx,DWORD PTR [ebx+0x8f88b21]
  403a4a:	inc    ebx
  403a4b:	inc    eax
  403a4c:	add    bl,ch
  403a4e:	xor    ecx,DWORD PTR [ebx-0x17f5f37f]
  403a54:	add    BYTE PTR [ecx+0x45f4f889],cl
  403a5a:	mov    eax,DWORD PTR gs:[eax]
  403a5d:	sub    cl,cl
  403a5f:	retf   0xff7c
  403a62:	mov    WORD PTR [ebp+0x10],cx
  403a66:	jae    0x403add
  403a68:	lea    ecx,[ebx+0x63fffcf6]
  403a6e:	xor    edi,edi
  403a70:	jne    0x8bcbafc3
  403a76:	or     al,0xfc
  403a78:	or     al,0x3e
  403a7a:	push   WORD PTR [ecx-0x75]
  403a7e:	jne    0x403a70
  403a80:	cmpxchg8b QWORD PTR [ecx]
  403a83:	(bad)  
  403a84:	mov    ch,0xff
  403a86:	add    ah,ch
  403a88:	data16 jne 0x403a5a
  403a8b:	call   0xff9e339c
  403a90:	cmovge edi,edx
  403a93:	xor    edi,DWORD PTR [ebx+eax*1]
  403a96:	add    BYTE PTR [ebx],bh
  403a98:	sub    eax,0xf8b5d74
  403a9d:	or     al,0xfa
  403a9f:	add    BYTE PTR [edi],cl
  403aa1:	inc    ebp
  403aa2:	cmp    al,0x8b
  403aa4:	mov    ebx,0x4d3b08
  403aa9:	sub    DWORD PTR [ebx],0x14
  403aac:	enterw 0x9ff8,0x3b
  403ab1:	shl    BYTE PTR [esi+ebx*2+0x6a],0xc9
  403ab6:	pop    edi
  403ab7:	or     al,0x45
  403ab9:	mov    esp,DWORD PTR [esi-0x8]
  403abc:	dec    ebp
  403abd:	inc    eax
  403abe:	data16 jmp 0x403b0e
  403ac1:	push   ebp
  403ac2:	jb     0x403ab0
  403ac4:	jmp    0x403b0b
  403ac6:	inc    DWORD PTR [ebx+0x7d7f10f8]
  403acc:	mov    eax,DWORD PTR [eax]
  403ace:	or     BYTE PTR [esi-0x49],dl
  403ad1:	jo     0x74406c86
  403ad7:	test   DWORD PTR [edx+0xf],eax
  403ada:	jmp    DWORD PTR [edi+0xf77000f]
  403ae0:	inc    DWORD PTR [eax+0x33]
  403ae3:	mov    ebx,DWORD PTR [edi-0x77]
  403ae6:	pop    ebx
  403ae7:	lock ret 0xd2
  403aeb:	push   ebp
  403aec:	dec    ebp
  403aed:	mov    eax,0xf68a81
  403af2:	dec    eax
  403af4:	ror    ax,0x3b
  403af8:	rol    BYTE PTR [eax],0x3b
  403afb:	dec    ebp
  403afc:	lock adc DWORD PTR [esp+edi*8+0x6a5533eb],0xffffffec
  403b05:	pop    edi
  403b06:	in     al,dx
  403b07:	cmp    edx,DWORD PTR [edi-0xc]
  403b0a:	clc    
  403b0b:	xchg   DWORD PTR fs:[edx-0xff3bff],esi
  403b12:	cmp    al,dh
  403b14:	jne    0x403acd
  403b16:	xor    edi,esp
  403b18:	jmp    0xcd3c7a
  403b1d:	mov    ebp,DWORD PTR [ecx+edi*1]
  403b20:	jne    0x403b24
  403b22:	call   0xfff8385e
  403b27:	mov    edi,0x14e97
  403b2c:	add    BYTE PTR [ebx],bh
  403b2e:	inc    edi
  403b2f:	jne    0x403aba
  403b31:	mov    esi,DWORD PTR [eax+ecx*1-0x7f7648b9]
  403b38:	mov    eax,0x8974471f
  403b3d:	mov    edi,DWORD PTR [eax+ecx*1+0x6600b787]
  403b44:	add    BYTE PTR [esi+0xa8d1f45],bh
  403b4a:	stos   BYTE PTR es:[edi],al
  403b4b:	add    BYTE PTR [eax],al
  403b4d:	mov    bx,di
  403b50:	les    esi,FWORD PTR [ebx]
  403b52:	xchg   DWORD PTR [esi+0x0],esp
  403b55:	iret   
  403b56:	add    BYTE PTR [edx],dl
  403b58:	inc    ebp
  403b59:	jle    0x403ae8
  403b5b:	(bad)  
  403b5c:	out    dx,al
  403b5d:	cld    
  403b5e:	add    BYTE PTR [ebx+0x39ccf489],cl
  403b64:	xchg   esp,edi
  403b66:	add    DWORD PTR [eax+eax*1-0x72babafa],ebp
  403b6d:	push   0x32
  403b6f:	pop    edi
  403b70:	add    BYTE PTR [ebp-0x77],dh
  403b73:	paddq  mm1,mm2
  403b76:	xchg   DWORD PTR [ecx+eax*1],edi
  403b79:	add    BYTE PTR [eax],al
  403b7b:	adc    ecx,DWORD PTR [ecx+0x457eb083]
  403b81:	test   eax,ebp
  403b83:	inc    DWORD PTR [eax]
  403b85:	inc    DWORD PTR [eax]
  403b87:	ror    BYTE PTR [ebx+0xc9a85e],0x8
  403b8e:	dec    DWORD PTR [ebx-0x3e020718]
  403b94:	inc    esp
  403b96:	inc    ebp
  403b97:	inc    DWORD PTR [ebp-0x52ccf0cd]
  403b9d:	data16 add BYTE PTR [ebp-0x75],cl
  403ba1:	(bad)  
  403ba3:	rcl    BYTE PTR [esi-0x1e],0x74
  403ba7:	mov    edi,DWORD PTR [eax-0x7d]
  403baa:	lock push eax
  403bac:	jle    0x403b39
  403bae:	mov    ecx,DWORD PTR [ebx+0x56a81c]
  403bb4:	mov    eax,DWORD PTR [ebx+0x7f80018]
  403bba:	jge    0x403b7c
  403bbc:	mov    esi,DWORD PTR [eax]
  403bbe:	adc    al,0x0
  403bc0:	enter  0xd06a,0xff
  403bc4:	dec    ebp
  403bc5:	or     BYTE PTR [ecx+0x7dffe4c1],cl
  403bcb:	mov    edi,DWORD PTR [ebx]
  403bcd:	lods   al,BYTE PTR ds:[esi]
  403bce:	ja     0x403bd0
  403bd0:	mov    DWORD PTR [ebp+0x45db22f8],ecx
  403bd6:	pop    ebp
  403bd7:	lea    edi,[ecx]
  403bd9:	inc    esp
  403bda:	clc    
  403bdb:	inc    ebp
  403bdc:	outs   dx,BYTE PTR ds:[esi]
  403bdd:	lea    eax,[ebx]
  403bdf:	push   bp
  403be1:	inc    ebp
  403be2:	mov    ecx,DWORD PTR [ebp+0xb788e0]
  403be8:	pop    edi
  403be9:	mov    DWORD PTR [esi-0x40],ebx
  403bec:	jae    0x403b75
  403bee:	cmp    eax,DWORD PTR [eax]
  403bf0:	adc    al,0x0
  403bf2:	pop    eax
  403bf3:	inc    ebp
  403bf4:	sbb    al,0x8d
  403bf6:	mov    ecx,esp
  403bf8:	or     BYTE PTR [eax],al
  403bfa:	cmp    al,0x89
  403bfc:	mov    eax,ecx
  403bfe:	cld    
  403bff:	xchg   DWORD PTR [ebp+0x0],edx
  403c02:	add    eax,DWORD PTR [eax]
  403c04:	add    eax,DWORD PTR [ebp+0x2b]
  403c07:	lea    ecx,[eax]
  403c09:	adc    BYTE PTR [ebp+0x0],al
  403c0c:	or     ecx,DWORD PTR [ecx-0x78763000]
  403c12:	fadd   QWORD PTR [ecx]
  403c14:	push   ebp
  403c15:	add    BYTE PTR [ebx+0x1b8d0045],al
  403c1b:	push   esp
  403c1c:	inc    ebp
  403c1d:	add    bh,bh
  403c1f:	push   edi
  403c20:	adc    BYTE PTR [ebp-0x18],bh
  403c23:	mov    ebp,edi
  403c25:	fdivr  st,st(7)
  403c27:	cli    
  403c28:	dec    ebp
  403c29:	add    BYTE PTR [ebp-0x74788bb0],al
  403c2f:	add    esp,edi
  403c31:	add    BYTE PTR [eax],bh
  403c33:	xor    BYTE PTR [ebp-0x51],al
  403c36:	cmp    edi,0xfffffffc
  403c39:	mov    edi,edi
  403c3b:	lock in al,dx
  403c3d:	rcl    ah,0x84
  403c40:	pop    ebp
  403c41:	add    BYTE PTR [ebx+0x0],al
  403c44:	pop    ebp
  403c45:	dec    eax
  403c46:	cmp    edx,DWORD PTR [ebx-0x8]
  403c49:	mov    edx,DWORD PTR [ecx+eax*1-0x7436fca5]
  403c50:	add    al,0x24
  403c52:	push   ebp
  403c53:	dec    esi
  403c54:	in     al,dx
  403c55:	mov    eax,DWORD PTR [ebp+0x20]
  403c58:	push   esi
  403c59:	pop    esi
  403c5a:	mov    al,0x3
  403c5c:	add    DWORD PTR [ecx+0x7eb0e000],ecx
  403c62:	add    DWORD PTR [ebx],eax
  403c64:	add    BYTE PTR [ebx],al
  403c66:	inc    ebp
  403c67:	mov    eax,ebp
  403c69:	hlt    
  403c6a:	(bad)  
  403c6b:	push   ebp
  403c6c:	dec    DWORD PTR [ecx-0x4fe07f2]
  403c72:	push   es
  403c73:	add    ecx,ecx
  403c75:	pop    ebp
  403c76:	or     BYTE PTR [ebx],dh
  403c78:	jns    0x5e02253f
  403c7e:	ret    0x76
  403c81:	jmp    0x403c12
  403c83:	mov    eax,DWORD PTR [ecx]
  403c85:	in     al,0x0
  403c87:	jge    0x403c74
  403c89:	sysexit 
  403c8b:	cmp    al,0x8a
  403c8d:	cmp    eax,DWORD PTR [eax]
  403c8f:	sbb    BYTE PTR [edx],cl
  403c91:	pop    ebp
  403c92:	add    BYTE PTR [esi+0x66],bh
  403c95:	jae    0x403c98
  403c97:	mov    eax,ecx
  403c99:	call   0xb9b7:0x8b025583
  403ca0:	mov    ebx,0x8d4e55
  403ca5:	mov    al,0x3b
  403ca7:	fdiv   DWORD PTR [ebp-0x8]
  403caa:	xor    edx,DWORD PTR [ebp+0x66]
  403cad:	mov    DWORD PTR [ecx],0x10087ec
  403cb3:	add    BYTE PTR [eax],al
  403cb5:	push   ebp
  403cb6:	ret    
  403cb7:	mov    ecx,DWORD PTR [ebx-0x77c57404]
  403cbd:	jne    0x403cbf
  403cbf:	mov    eax,ecx
  403cc1:	fadd   QWORD PTR [esi]
  403cc3:	xor    al,0xc7
  403cc5:	push   ebx
  403cc6:	or     dh,dh
  403cc8:	icebp  
  403cc9:	inc    DWORD PTR [eax+0x8f4348b]
  403ccf:	rol    BYTE PTR [edx+0x5],0xa
  403cd3:	inc    ebp
  403cd4:	stc    
  403cd5:	mov    DWORD PTR [ebp-0x75],esi
  403cd8:	(bad)  
  403cd9:	lock add BYTE PTR [ebp-0x7a],al
  403cdd:	add    al,0x1
  403cdf:	dec    ebp
  403ce0:	add    BYTE PTR [ebp-0x39],dh
  403ce3:	mov    eax,ebx
  403ce5:	call   0xe8c3c675
  403cea:	sbb    al,0x5d
  403cec:	mov    edi,0xf85e8572
  403cf1:	pop    edi
  403cf2:	jge    0x403cb6
  403cf4:	lea    eax,[eax]
  403cf6:	add    ecx,DWORD PTR [ebx+0x88b8b45]
  403cfc:	or     bh,bh
  403cfe:	leave  
  403cff:	fadd   DWORD PTR [eax+eax*1-0x67ff7300]
  403d06:	dec    ebp
  403d07:	add    BYTE PTR [ebp-0xff7f075],al
  403d0d:	xchg   ebp,eax
  403d0e:	add    bh,bh
  403d10:	mov    ecx,DWORD PTR [ebx-0x74b276f0]
  403d16:	mov    esi,DWORD PTR [ebx]
  403d18:	or     al,0x39
  403d1a:	dec    ebp
  403d1b:	pop    esi
  403d1c:	mov    edx,DWORD PTR [ebp+0x5d458b08]
  403d22:	jmp    0xec88:0x898b9c04
  403d29:	add    BYTE PTR [ecx-0x76ec17ad],cl
  403d2f:	inc    ebx
  403d30:	or     al,0x0
  403d32:	dec    ebp
  403d33:	add    eax,0x103bc7
  403d38:	test   DWORD PTR [ecx+0x25983f8],ecx
  403d3e:	push   ecx
  403d3f:	ret    0xfbb
  403d42:	lea    eax,[edx]
  403d44:	push   DWORD PTR [ebp+0x66330045]
  403d4a:	mov    eax,ebx
  403d4c:	sub    esp,eax
  403d4e:	add    eax,eax
  403d50:	clc    
  403d51:	mov    DWORD PTR [ebx-0x7477ff75],edx
  403d57:	add    BYTE PTR [ebx+ebx*2],cl
  403d5a:	dec    ebp
  403d5b:	push   edi
  403d5c:	xor    edi,eax
  403d5e:	xor    eax,DWORD PTR [esi+0x8018d]
  403d64:	in     eax,0xe7
  403d66:	add    BYTE PTR [ebx],al
  403d68:	inc    ebp
  403d69:	jmp    0x403d9e
  403d6b:	xor    bh,0x4a
  403d6e:	mov    ebp,ecx
  403d70:	adc    BYTE PTR [eax-0x75ccbfb3],cl
  403d76:	xor    eax,DWORD PTR [eax-0x10c481d5]
  403d7c:	jne    0x403d7e
  403d7e:	mov    ecx,DWORD PTR [ebx+0x458808]
  403d84:	mov    eax,DWORD PTR [ebx]
  403d86:	hlt    
  403d87:	pop    edi
  403d88:	add    BYTE PTR [ebp-0x37],dl
  403d8b:	in     al,dx
  403d8c:	push   es
  403d8d:	in     al,dx
  403d8e:	dec    edx
  403d8f:	push   edi
  403d90:	xor    al,0x38
  403d92:	pop    ss
  403d93:	pushf  
  403d94:	dec    ebp
  403d95:	mov    DWORD PTR [eax+0x614759e8],eax
  403d9b:	mov    ecx,edx
  403d9d:	in     al,0x4d
  403d9f:	dec    ebp
  403da0:	add    BYTE PTR [ebp-0x43df0a7],0xe9
  403da7:	add    dl,dl
  403da9:	mov    ecx,DWORD PTR [ebx+0x4dc9080c]
  403daf:	test   BYTE PTR [eax+0x8008b00],cl
  403db5:	dec    ebp
  403db6:	push   ebp
  403db7:	mov    DWORD PTR [eax+0x4d72f4],edi
  403dbd:	mov    eax,ecx
  403dbf:	clc    
  403dc0:	into   
  403dc1:	dec    ebp
  403dc2:	retf   0x18c7
  403dc5:	lock dec ebp
  403dc7:	test   DWORD PTR [ebx-0x31baf308],ecx
  403dcd:	push   ebx
  403dce:	(bad)  
  403dcf:	jge    0x403d9b
  403dd1:	push   esi
  403dd2:	enter  0xce45,0x89
  403dd6:	dec    ebp
  403dd7:	cld    
  403dd8:	jmp    0xff7b3d22
  403ddd:	pushf  
  403dde:	inc    ebp
  403ddf:	mov    esi,0x78b0833
  403de4:	sub    esp,DWORD PTR [ecx+0x3]
  403de7:	int    0x8
  403de9:	mov    ecx,DWORD PTR [ebp+0xc]
  403dec:	mov    eax,esi
  403dee:	adc    bl,cl
  403df0:	(bad)  
  403df1:	enter  0x4d85,0xff
  403df5:	jmp    0x853ef9
  403dfa:	xor    eax,DWORD PTR [ebp+0x5e]
  403dfd:	mov    ebp,ebx
  403dff:	or     al,0x8b
  403e01:	(bad)  
  403e02:	call   0x51cc97d5
  403e07:	ds add eax,0x8b7264
  403e0d:	or     cl,cl
  403e0f:	ror    BYTE PTR [ecx+esi*8],cl
  403e12:	push   ebp
  403e13:	inc    ebp
  403e14:	in     al,dx
  403e15:	mov    ebp,esp
  403e17:	or     al,0xc7
  403e19:	(bad)  
  403e1a:	lock into 
  403e1c:	test   ecx,eax
  403e1e:	clc    
  403e1f:	rol    BYTE PTR [ebp+0x34],1
  403e22:	cmp    eax,DWORD PTR [ebp-0x64]
  403e25:	add    ecx,DWORD PTR [ebx-0x7b27604]
  403e2b:	mov    al,BYTE PTR [ebp-0x7b]
  403e2e:	xor    BYTE PTR [ebp-0x64],dh
  403e31:	xor    al,0x56
  403e33:	sub    al,0xc7
  403e35:	jmp    0x403e23
  403e37:	mov    ebx,DWORD PTR [eax]
  403e39:	lock jmp 0xf02a:0x8bb27df1
  403e41:	mov    ebx,DWORD PTR [ecx-0x14]
  403e44:	push   ecx
  403e45:	icebp  
  403e46:	xor    eax,DWORD PTR [edx]
  403e48:	mov    edx,0x617280
  403e4d:	enter  0x4dc8,0xfa
  403e51:	add    ecx,edx
  403e53:	cld    
  403e54:	scas   eax,DWORD PTR es:[edi]
  403e55:	add    ebx,ebp
  403e57:	dec    ebp
  403e58:	mov    ecx,DWORD PTR [ebx-0x608a1708]
  403e5e:	xor    esi,DWORD PTR [edx]
  403e60:	xor    ebp,DWORD PTR [ebx]
  403e62:	add    esi,DWORD PTR [ebx]
  403e64:	add    edi,DWORD PTR [ebx]
  403e66:	test   DWORD PTR [ebp-0x75],esi
  403e69:	mov    edi,eax
  403e6b:	adc    BYTE PTR [ebp+0x55],cl
  403e6e:	je     0x403ea3
  403e70:	xor    esi,DWORD PTR [ebx]
  403e72:	xor    ebp,DWORD PTR [ebx]
  403e74:	add    ebp,DWORD PTR [ebx]
  403e76:	add    esi,DWORD PTR [ebx]
  403e78:	ror    DWORD PTR [ecx+0x68ec108b],cl
  403e7e:	enter  0xcaff,0x8b
  403e82:	icebp  
  403e83:	or     al,0xa
  403e85:	(bad)  
  403e86:	lock retf 
  403e88:	enter  0xf2c8,0x4d
  403e8c:	retf   0xee89
  403e8f:	or     BYTE PTR [ebp+0x45],dh
  403e92:	mov    edi,DWORD PTR [ebx]
  403e94:	cld    
  403e95:	bswap  eax
  403e97:	pop    edi
  403e98:	mov    esp,0x328b9fff
  403e9d:	in     al,0x8b
  403e9f:	(bad)  
  403ea0:	hlt    
  403ea1:	pop    ebx
  403ea2:	jne    0x403eac
  403ea4:	xor    eax,DWORD PTR [ebp+0x33]
  403ea7:	xor    eax,0x73b082b
  403eac:	jbe    0x403e4d
  403eae:	mov    esi,DWORD PTR [edx]
  403eb0:	clc    
  403eb1:	pop    edi
  403eb2:	mov    edx,eax
  403eb4:	mov    eax,DWORD PTR [eax]
  403eb6:	clc    
  403eb7:	mov    ecx,ecx
  403eb9:	adc    DWORD PTR [ebp+0x14],0xffffffec
  403ebd:	inc    ebp
  403ebe:	in     al,dx
  403ebf:	cmp    BYTE PTR [esp+ebx*4],al
  403ec2:	add    bh,al
  403ec4:	inc    ebp
  403ec5:	cld    
  403ec6:	cmp    BYTE PTR [ebp+0x3c7f89c],al
  403ecc:	hlt    
  403ecd:	inc    ebp
  403ece:	test   edi,eax
  403ed0:	clc    
  403ed1:	hlt    
  403ed2:	inc    ebp
  403ed3:	test   DWORD PTR [eax],edi
  403ed5:	clc    
  403ed6:	pushf  
  403ed7:	push   edi
  403ed8:	push   ebx
  403ed9:	inc    ebp
  403eda:	inc    ebp
  403edb:	fdivr  DWORD PTR [ecx]
  403edd:	xlat   BYTE PTR ds:[ebx]
  403ede:	pushf  
  403edf:	mov    ecx,DWORD PTR [ebx-0x41b21304]
  403ee5:	mov    eax,0x7070808
  403eea:	xor    edi,eax
  403eec:	mov    edi,0x32729f
  403ef1:	xor    eax,edi
  403ef3:	add    eax,DWORD PTR [ebp+0x3]
  403ef6:	(bad)  
  403ef7:	pavgb  mm7,mm1
  403efa:	test   DWORD PTR [esi-0x8],eax
  403efd:	dec    ebp
  403efe:	inc    ebp
  403eff:	mov    ebx,eax
  403f01:	cld    
  403f02:	xlat   BYTE PTR ds:[ebx]
  403f03:	enter  0xf0c7,0xf0
  403f07:	retf   0xf200
  403f0a:	add    dh,cl
  403f0c:	leave  
  403f0d:	jne    0x403f54
  403f0f:	mov    ecx,DWORD PTR [ebx-0x39ea1304]
  403f15:	enter  0xf0ce,0xc7
  403f19:	retf   0xf2cf
  403f1c:	scas   eax,DWORD PTR es:[edi]
  403f1d:	out    dx,al
  403f1e:	jmp    0x403f6d
  403f20:	mov    esi,DWORD PTR [ebx]
  403f22:	cld    
  403f23:	add    eax,edi
  403f25:	xor    eax,esi
  403f27:	jmp    0x403f6e
  403f29:	xor    ecx,DWORD PTR [ebp-0x1ffc07cd]
  403f2f:	add    edi,edi
  403f31:	ror    DWORD PTR [ecx+0x45f8f889],cl
  403f37:	dec    ebp
  403f38:	mov    esi,DWORD PTR [ebx]
  403f3a:	cld    
  403f3b:	lea    eax,[edi+ecx*1+0xff72e0]
  403f42:	mov    ecx,DWORD PTR [ebp-0xc]
  403f45:	mov    ecx,DWORD PTR [ebp-0x4]
  403f48:	xor    esi,eax
  403f4a:	(bad)  
  403f4b:	enter  0xce08,0x72
  403f4f:	stc    
  403f50:	add    BYTE PTR [edx+0x5f8b4545],ch
  403f56:	call   0x33858c5e
  403f5b:	pop    esi
  403f5c:	xor    eax,ebx
  403f5e:	sub    ecx,DWORD PTR [ebx+0x20fc818b]
  403f64:	enter  0xb900,0xc7
  403f68:	inc    ebp
  403f69:	in     al,dx
  403f6a:	xor    eax,DWORD PTR [ebp+0x4589f803]
  403f70:	clc    
  403f71:	cmp    eax,DWORD PTR [ebp-0x64]
  403f74:	cmp    edi,eax
  403f76:	pushf  
  403f77:	call   0xf92bc607
  403f7c:	mov    eax,edi
  403f7e:	loopne 0x403f64
  403f80:	inc    ebp
  403f81:	test   DWORD PTR [ebx],esi
  403f83:	clc    
  403f84:	add    eax,DWORD PTR [ebp-0x2d]
  403f87:	push   esi
  403f88:	mov    DWORD PTR [ecx-0x4],ebx
  403f8b:	push   ecx
  403f8c:	inc    ebp
  403f8d:	push   edi
  403f8e:	mov    al,dh
  403f90:	mov    BYTE PTR [edi+0x34d320b],bl
  403f96:	mov    ecx,DWORD PTR [ecx+0x45b6f8f8]
  403f9c:	xor    esi,DWORD PTR [eax]
  403f9e:	mov    DWORD PTR [eax+ecx*1-0x7403b239],ebx
  403fa5:	sbb    BYTE PTR [eax],cl
  403fa7:	jmp    0xca:0x8cf45ce
  403fae:	mov    WORD PTR [ebx-0xb007420],cs
  403fb4:	mov    ecx,DWORD PTR [ebp-0x4]
  403fb7:	xor    ecx,edx
  403fb9:	xor    ecx,DWORD PTR [ebp+0x3]
  403fbc:	mov    eax,DWORD PTR [ebx]
  403fbe:	hlt    
  403fbf:	bswap  esi
  403fc1:	rol    DWORD PTR [ecx+esi*1+0x2b32459f],0x89
  403fc9:	xor    ecx,DWORD PTR [eax]
  403fcb:	mov    DWORD PTR [ebp-0x8],eax
  403fce:	xor    ebx,DWORD PTR [ebp-0x47]
  403fd1:	call   0x403e63
  403fd6:	enter  0x4d45,0x8b
  403fda:	mov    eax,edi
  403fdc:	lock dec ebp
  403fde:	inc    ebp
  403fdf:	mov    DWORD PTR [ebx-0x39040f73],ecx
  403fe5:	inc    edi
  403fe7:	inc    ebp
  403fe8:	enter  0x918b,0xfc
  403fec:	inc    ebp
  403fed:	(bad)  
  403fee:	mov    eax,DWORD PTR [eax+edi*8-0x38cd3961]
  403ff5:	mov    DWORD PTR [esi-0x4],ebx
  403ff8:	rol    DWORD PTR [ebp-0x37],0x8b
  403ffc:	add    al,0xf4
  403ffe:	push   ebp
  403fff:	into   
  404000:	in     al,dx
  404001:	mov    BYTE PTR [ebp-0x3f],0x8b
  404005:	dec    ebp
  404006:	or     BYTE PTR [ebx],bh
  404008:	xor    BYTE PTR [esi+0x1],0x8b
  40400c:	add    ah,ah
  40400e:	add    dh,al
  404010:	in     al,dx
  404011:	(bad)  
  404012:	push   ebx
  404013:	inc    ebp
  404014:	mov    eax,edi
  404016:	adc    al,ch
  404018:	push   ss
  404019:	xchg   BYTE PTR [edi+0x7db08f8],bh
  40401f:	popa   
  404020:	iret   
  404021:	dec    ebp
  404022:	lahf   
  404023:	mov    esi,DWORD PTR [edx]
  404025:	clc    
  404026:	add    ecx,esi
  404028:	cmp    ecx,edi
  40402a:	jne    0x404014
  40402c:	add    DWORD PTR [ebp-0x6f],0x4f08648b
  404033:	or     BYTE PTR [ebx+0x48ae94d],bl
  404039:	or     eax,DWORD PTR [eax]
  40403b:	push   ebp
  40403c:	dec    ebp
  40403d:	jnp    0xd00a4d0c
  404043:	dec    ebp
  404044:	xlat   BYTE PTR ds:[ebx]
  404045:	mov    ecx,ebx
  404047:	call   0x340a961f
  40404c:	lsl    ecx,WORD PTR ds:0x7f8b2d23
  404053:	(bad)  
  404054:	cld    
  404055:	sti    
  404056:	lahf   
  404057:	(bad)  
  404058:	mov    ebp,0x8b330055
  40405d:	mov    DWORD PTR [eax],ecx
  40405f:	clc    
  404060:	iret   
  404061:	dec    ebp
  404062:	retf   
  404063:	xor    eax,ecx
  404065:	lea    eax,[eax+ecx*1+0x7204]
  40406c:	dec    ebp
  40406d:	inc    ebp
  40406e:	mov    DWORD PTR [ebx-0x39b20b24],ecx
  404074:	mov    esp,DWORD PTR [ecx+0x14]
  404077:	int    0x6
  404079:	sub    eax,DWORD PTR [ebp+0x3]
  40407c:	(bad)  
  40407d:	lock or BYTE PTR [ebp-0x7b],cl
  404081:	mov    edi,eax
  404083:	in     al,dx
  404084:	cmp    ecx,DWORD PTR [ebp-0x64]
  404087:	xor    ecx,DWORD PTR [ecx+0x453bf003]
  40408d:	jne    0x404018
  40408f:	mov    ebx,DWORD PTR [eax]
  404091:	in     al,0x45
  404093:	dec    ebp
  404094:	mov    esi,DWORD PTR [ebx]
  404096:	nop
  404097:	add    eax,DWORD PTR [eax]
  404099:	pop    edi
  40409a:	mov    esi,DWORD PTR [ebx]
  40409c:	mov    DWORD PTR [ebx-0x2c],ebx
  40409f:	ret    0x4d
  4040a2:	mov    ecx,DWORD PTR [ebx+0x18008b90]
  4040a8:	mov    ecx,DWORD PTR [ebp+0x3]
  4040ab:	mov    edi,DWORD PTR [eax+edx*4]
  4040ae:	dec    ebp
  4040af:	add    BYTE PTR [ebx-0x387cf775],cl
  4040b5:	jo     0x40407a
  4040b7:	push   esi
  4040b8:	inc    ebp
  4040b9:	jne    0x404046
  4040bb:	mov    ecx,DWORD PTR [eax]
  4040bd:	push   edi
  4040be:	(bad)  
  4040bf:	pop    ecx
  4040c0:	ret    
  4040c1:	push   ecx
  4040c2:	inc    ebp
  4040c3:	xor    ecx,DWORD PTR [ebx+0x40720cbb]
  4040c9:	add    BYTE PTR [ebx+0x45d10ccb],al
  4040cf:	jnp    0x406d4d02
  4040d5:	jg     0x404062
  4040d7:	jmp    0x54:0xde85700c
  4040de:	inc    ebp
  4040df:	mov    esi,DWORD PTR [eax+ecx*1-0x75]
  4040e3:	push   ebp
  4040e4:	cmp    BYTE PTR [ebx],dh
  4040e6:	dec    ebp
  4040e7:	xor    ecx,DWORD PTR [ebx-0x8fcabfd]
  4040ed:	cmp    esp,DWORD PTR [ebx]
  4040ef:	jne    0x40407c
  4040f1:	or     DWORD PTR [ecx+edx*4],0xee036440
  4040f8:	jmp    0x40410f
  4040fa:	mov    ebp,ecx
  4040fc:	push   esp
  4040fd:	add    al,0x45
  4040ff:	add    BYTE PTR [ebx-0x38ccf7b3],cl
  404105:	add    eax,ebx
  404107:	cmp    eax,DWORD PTR [ebp+0xf]
  40410a:	mov    esp,DWORD PTR [eax+ecx*1-0x3c743900]
  404111:	sbb    BYTE PTR [ebp+0x45],al
  404114:	mov    ecx,DWORD PTR [ecx+0x4d4d1808]
  40411a:	xor    ecx,DWORD PTR [ebx-0x277676fd]
  404120:	mov    DWORD PTR [ebp+0x14],eax
  404123:	cmp    BYTE PTR [ebp-0x64],al
  404126:	cmp    bh,BYTE PTR [edx-0x7387a64]
  40412c:	adc    al,0x55
  40412e:	test   DWORD PTR [ebx+0x454518f8],ecx
  404134:	cmp    al,0x8b
  404136:	pushf  
  404137:	sbb    BYTE PTR [ebx+0x4d01f080],cl
  40413d:	add    BYTE PTR [ebx],dh
  40413f:	add    BYTE PTR [ebx],al
  404141:	dec    ebp
  404142:	jnp    0x898d5a09
  404148:	mov    eax,DWORD PTR [ecx]
  40414a:	rol    BYTE PTR [eax],1
  40414c:	iret   
  40414d:	or     DWORD PTR [eax+ecx*2+0xc32899f],ecx
  404154:	cmp    eax,DWORD PTR [ebp+0xf]
  404157:	xor    ebp,DWORD PTR [ebx+eax*1-0xb747700]
  40415e:	or     BYTE PTR [ebp-0x39],al
  404161:	xor    eax,ebx
  404163:	add    eax,DWORD PTR [ebp-0x77]
  404166:	mov    edx,DWORD PTR [eax+ebx*1]
  404169:	inc    ebp
  40416a:	inc    ebp
  40416b:	mov    ecx,DWORD PTR [ecx+0x75e8f450]
  404171:	mov    DWORD PTR [ebx+0x4d45dcd0],ecx
  404177:	mov    ebp,eax
  404179:	cmp    cl,dh
  40417b:	dec    ebp
  40417c:	dec    DWORD PTR [eax+0x45]
  40417f:	inc    ecx
  404180:	(bad)  
  404181:	mov    esp,eax
  404183:	or     al,0x85
  404185:	sbb    al,bh
  404187:	inc    eax
  404188:	inc    ebp
  404189:	mov    esi,DWORD PTR [ebx]
  40418b:	or     al,0x3
  40418d:	dec    ecx
  40418e:	push   eax
  40418f:	dec    eax
  404190:	inc    ebp
  404191:	rcl    BYTE PTR [eax-0x38],1
  404194:	push   eax
  404195:	inc    ebp
  404196:	dec    DWORD PTR [ebx-0x3e07c775]
  40419c:	rol    BYTE PTR [ebx],0x4e
  40419f:	inc    eax
  4041a0:	inc    ebp
  4041a1:	mov    DWORD PTR [ebx],esi
  4041a3:	sbb    BYTE PTR [ebx],al
  4041a5:	inc    ebp
  4041a6:	push   eax
  4041a7:	xor    esi,DWORD PTR [ebp+0x3]
  4041aa:	lea    ecx,[ecx+0x45e814b8]
  4041b0:	cmc    
  4041b1:	xor    edi,edi
  4041b3:	add    eax,DWORD PTR [ebp-0x77]
  4041b6:	mov    DWORD PTR [eax+eiz*8],edx
  4041b9:	inc    ebp
  4041ba:	inc    ebp
  4041bb:	mov    ecx,DWORD PTR [ebx-0x3e38232c]
  4041c1:	ret    
  4041c2:	inc    ebp
  4041c3:	add    DWORD PTR [ebx+0x4dc7f855],ecx
  4041c9:	adc    al,0x8b
  4041cb:	test   DWORD PTR [eax],edx
  4041cd:	clc    
  4041ce:	inc    ecx
  4041cf:	inc    ebp
  4041d0:	mov    edi,DWORD PTR ds:0xc7c89ce0
  4041d6:	push   ss
  4041d7:	adc    al,0x45
  4041d9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4041df:	mov    eax,DWORD PTR [ebx]
  4041e1:	sbb    BYTE PTR [eax],cl
  4041e3:	(bad)  
  4041e4:	dec    ebp
  4041e5:	ret    
  4041e6:	sub    ebp,DWORD PTR [edi+0x8028be9]
  4041ec:	add    BYTE PTR [ebp+0xc],dl
  4041ef:	xor    esi,DWORD PTR [ebp-0x73]
  4041f2:	lea    edx,[ecx]
  4041f4:	lods   al,BYTE PTR ds:[esi]
  4041f5:	jb     0x4041df
  4041f7:	add    ch,dh
  4041f9:	sar    edi,0x83
  4041fc:	cmp    BYTE PTR [ebx],al
  4041fe:	pushf  
  4041ff:	add    BYTE PTR [ecx+0x4533cc45],cl
  404205:	add    edi,DWORD PTR [ebx]
  404207:	mov    DWORD PTR [esp+edx*1+0x3c445c7],ebx
  40420e:	test   esp,ebx
  404210:	clc    
  404211:	inc    ebp
  404212:	inc    ebp
  404213:	(bad)  
  404214:	cmp    eax,0x8d759cf4
  404219:	mov    ecx,esp
  40421b:	or     al,0x4d
  40421d:	bound  ecx,QWORD PTR [ebp+0x4d89c8ff]
  404223:	clc    
  404224:	lea    eax,[ebp-0x3c]
  404227:	xor    BYTE PTR [ebp-0x64],cl
  40422a:	lea    ecx,[ebx-0x38b21f40]
  404230:	mov    eax,ebx
  404232:	or     BYTE PTR [ebp-0x17344731],cl
  404238:	dec    ebp
  404239:	imul   ecx
  40423b:	inc    DWORD PTR [ecx]
  40423d:	inc    ebp
  40423e:	add    BYTE PTR [ebp-0x74638bc6],al
  404244:	pavgb  mm7,mm6
  404247:	mov    DWORD PTR [eax],0xf0ff8bc3
  40424d:	clc    
  40424e:	iret   
  40424f:	inc    ebp
  404250:	lock push eax
  404252:	retf   
  404253:	fmul   QWORD PTR [ebp-0x1]
  404256:	mov    ecx,DWORD PTR [ebx+0x45f7f4e0]
  40425c:	test   BYTE PTR [ebx+0x4d32e09f],cl
  404262:	mov    DWORD PTR [ebx],ebp
  404264:	loopne 0x4041ef
  404266:	inc    ebp
  404267:	loopne 0x4041f4
  404269:	inc    ebp
  40426a:	loopne 0x4041f7
  40426c:	xbegin 0x4088335
  404272:	adc    ecx,DWORD PTR [eax*2+0x33b334d]
  404279:	jb     0x4042cb
  40427b:	mov    ecx,DWORD PTR [eax+edi*8]
  40427e:	inc    ebp
  40427f:	inc    eax
  404280:	push   eax
  404281:	mov    ebx,DWORD PTR [edi-0x8]
  404284:	inc    DWORD PTR [ecx-0x75]
  404287:	mov    ebp,esp
  404289:	loopne 0x40428b
  40428b:	rol    edi,0xee
  40428e:	test   BYTE PTR [eax],al
  404290:	dec    ebx
  404291:	push   0x32
  404293:	dec    DWORD PTR [ebx-0x30baf70c]
  404299:	push   eax
  40429a:	mov    dh,0x94
  40429c:	add    edi,edi
  40429e:	cmp    edi,DWORD PTR [eax-0x7877af1]
  4042a4:	add    BYTE PTR [ebp-0x75],al
  4042a7:	(bad)  
  4042a8:	call   0xc7c54375
  4042ad:	clc    
  4042ae:	test   BYTE PTR [ebp+0x4b],al
  4042b1:	cmp    dh,BYTE PTR [edx]
  4042b3:	pushf  
  4042b4:	mov    eax,edi
  4042b6:	or     al,al
  4042b8:	iret   
  4042b9:	test   DWORD PTR [esi+0x3b4d03f8],esi
  4042bf:	mov    DWORD PTR [edi],ecx
  4042c1:	in     al,dx
  4042c2:	pop    eax
  4042c3:	dec    ebp
  4042c4:	add    BYTE PTR [ecx+0x4df8e88b],cl
  4042ca:	add    BYTE PTR [ecx+0x4d84f8c7],cl
  4042d0:	dec    ebx
  4042d1:	mov    DWORD PTR [edx],esi
  4042d3:	in     al,0x8b
  4042d5:	dec    ebp
  4042d6:	or     BYTE PTR [ebx],dh
  4042d8:	iret   
  4042d9:	add    esi,DWORD PTR [esi+0x3be00389]
  4042df:	test   DWORD PTR [edi],0x3d3800
  4042e5:	test   DWORD PTR [ebx+0x84e4f8],ecx
  4042eb:	add    edi,eax
  4042ed:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  4042f4:	mov    eax,DWORD PTR [ebx]
  4042f6:	or     BYTE PTR [ecx+0x45b614cf],cl
  4042fc:	add    esi,DWORD PTR [ebx]
  4042fe:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  404304:	add    BYTE PTR [eax],al
  404306:	mov    eax,DWORD PTR [ebp-0x18]
  404309:	mov    eax,DWORD PTR [eax]
  40430b:	lock (bad) 
  40430d:	dec    ebp
  40430e:	test   BYTE PTR [ebx],dh
  404310:	dec    ebx
  404311:	add    esi,DWORD PTR [edx]
  404313:	cmp    ecx,DWORD PTR [ebx+0x98bec75]
  404319:	or     bh,cl
  40431b:	(bad)  
  40431c:	mov    ebx,es
  40431e:	dec    ebx
  40431f:	push   0x32
  404321:	lea    esi,[edx]
  404323:	lods   al,BYTE PTR ds:[esi]
  404324:	mov    ebp,eax
  404326:	clc    
  404327:	cli    
  404328:	or     edi,edi
  40432a:	iret   
  40432b:	inc    ebp
  40432c:	mov    WORD PTR [ebx-0x75cdccb5],cs
  404332:	or     al,BYTE PTR ds:0xec728b
  404338:	or     DWORD PTR [ebp-0x31],ecx
  40433b:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  404342:	cmp    al,cl
  404344:	je     0x40451e
  40434a:	mov    eax,DWORD PTR [ebp-0x8]
  40434d:	mov    eax,DWORD PTR [eax]
  40434f:	xor    eax,edi
  404351:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  404358:	mov    ecx,DWORD PTR [ebp-0x18]
  40435b:	xor    ecx,DWORD PTR [ecx]
  40435d:	bswap  edi
  40435f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  404367:	add    DWORD PTR [ebx+0x945e400],ecx
  40436d:	mov    ecx,edi
  40436f:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  404376:	or     al,BYTE PTR [eax]
  404378:	mov    ecx,DWORD PTR [ebp-0x18]
  40437b:	xor    ecx,DWORD PTR [ecx]
  40437d:	bswap  edi
  40437f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  404387:	add    DWORD PTR [edi],ecx
  404389:	add    BYTE PTR [eax-0x7474ffbb],dl
  40438f:	xor    esp,esp
  404391:	mov    al,BYTE PTR [eax]
  404393:	add    eax,0x8472c7
  404398:	dec    ebx
  404399:	dec    ebp
  40439a:	xor    dh,BYTE PTR [ebx]
  40439c:	mov    ecx,DWORD PTR [edi]
  40439e:	clc    
  40439f:	ror    BYTE PTR [ecx],0xcb
  4043a2:	iret   
  4043a3:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  4043ab:	inc    ebp
  4043ac:	mov    ecx,DWORD PTR [ebx-0x75f6cc14]
  4043b2:	iret   
  4043b3:	add    eax,0x4b728c
  4043b8:	xor    cl,BYTE PTR [ebp+0xa]
  4043bb:	mov    ecx,DWORD PTR [ebx+0x98af833]
  4043c1:	or     eax,0x8c72cf
  4043c6:	dec    edi
  4043c7:	shl    DWORD PTR [edx],0x4d
  4043ca:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  4043d0:	in     al,0xd
  4043d2:	add    BYTE PTR [edx-0x39],dh
  4043d5:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4043dc:	mov    esi,DWORD PTR [ebx]
  4043de:	in     al,dx
  4043df:	mov    cl,BYTE PTR [ecx]
  4043e1:	or     eax,0x8c72cf
  4043e6:	dec    ebx
  4043e7:	enter  0x8532,0x32
  4043eb:	add    BYTE PTR [ebx+0x945e800],cl
  4043f1:	mov    ecx,edi
  4043f3:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  4043fa:	or     al,BYTE PTR [eax]
  4043fc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4043ff:	mov    ecx,DWORD PTR [ecx]
  404401:	xor    ecx,edi
  404403:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  40440a:	cmp    al,cl
  40440c:	jne    0x40445b
  40440e:	lea    ecx,[ebx-0x7517cc54]
  404414:	cli    
  404415:	or     eax,0x4d72ff
  40441a:	cmp    eax,ecx
  40441c:	je     0x40446b
  40441e:	mov    ecx,DWORD PTR [ebx-0x7538ccf8]
  404424:	ret    
  404425:	or     eax,0x8b7245
  40442a:	lock enter 0x85c7,0x84
  40442f:	add    BYTE PTR [edi+0x33453200],bl
  404435:	mov    ecx,DWORD PTR [ebx+0x558a0833]
  40443b:	add    eax,0x37233
  404440:	cmp    ecx,DWORD PTR [ebp+0xf]
  404443:	mov    esi,edi
  404445:	xor    edi,edi
  404447:	mov    cl,BYTE PTR [ebx+0x4d72080d]
  40444d:	add    BYTE PTR [ebx],dh
  40444f:	rol    DWORD PTR [ebx],0x4d
  404452:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  404458:	lock or eax,0x33724d
  40445e:	(bad)  
  40445f:	ror    DWORD PTR [eax],0x4d
  404462:	jb     0x4043ef
  404464:	add    BYTE PTR [ebx],dh
  404466:	ja     0x4043f2
  404468:	sbb    BYTE PTR ds:0x8d7275,cl
  40446e:	xchg   esp,eax
  40446f:	enter  0x50e8,0xf3
  404473:	inc    ebp
  404474:	dec    DWORD PTR [ebx-0x7574ccbb]
  40447a:	loopne 0x404481
  40447c:	(bad)  
  40447d:	jb     0x404442
  40447f:	add    cl,al
  404481:	dec    ebp
  404482:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  404488:	add    ecx,DWORD PTR ds:0x187250
  40448e:	inc    ebp
  40448f:	rcl    DWORD PTR [eax+0x4d],0x4f
  404493:	mov    edi,edi
  404495:	xor    ecx,DWORD PTR [ebx-0x3ff20b76]
  40449b:	jb     0x404426
  40449d:	add    BYTE PTR [ecx+eax*8],dl
  4044a0:	jne    0x4044ef
  4044a2:	dec    DWORD PTR [ebx-0x75baccec]
  4044a8:	add    ecx,DWORD PTR ds:0xe872d8
  4044ae:	repnz enter 0x10ff,0x45
  4044b3:	inc    ebp
  4044b4:	mov    edx,DWORD PTR [eax-0x20]
  4044b7:	mov    ds:0x8bc3ffc7,eax
  4044bc:	shl    DWORD PTR [ecx+edx*1+0x750a00c1],0x45
  4044c4:	mov    esi,DWORD PTR [ebx]
  4044c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044c7:	add    eax,DWORD PTR [ebp-0x77]
  4044ca:	push   eax
  4044cb:	adc    al,0x15
  4044cd:	inc    ebp
  4044ce:	push   DWORD PTR [ebx]
  4044d0:	mov    ecx,DWORD PTR [ebp+0x724d30d4]
  4044d6:	add    DWORD PTR [eax],eax
  4044d8:	mov    eax,edi
  4044da:	test   al,0x4d
  4044dc:	inc    ebp
  4044dd:	mov    ecx,DWORD PTR [ecx+0x45cf1814]
  4044e3:	retf   
  4044e4:	mov    edx,ecx
  4044e6:	sbb    BYTE PTR [edi+eax*8-0x50003c03],al
  4044ed:	inc    ebp
  4044ee:	mov    ecx,DWORD PTR [ebx-0x38aaebf8]
  4044f4:	xor    eax,ebx
  4044f6:	(bad)  
  4044f7:	enter  0x1111,0x72
  4044fb:	inc    ebp
  4044fc:	add    BYTE PTR [ebx-0x387de73f],cl
  404502:	cld    
  404503:	test   bh,bh
  404505:	lahf   
  404506:	jne    0x40453a
  404508:	mov    ebp,ebx
  40450a:	fsubr  DWORD PTR [edx+0x6]
  40450d:	dec    DWORD PTR [edx]
  40450f:	hlt    
  404510:	xor    eax,0x7f502d45
  404515:	sbb    ch,ah
  404517:	call   DWORD PTR [edx-0x75]
  40451a:	pop    esi
  40451b:	or     cl,cl
  40451d:	dec    ebp
  40451e:	adc    al,0x33
  404520:	push   ebp
  404521:	add    ebp,esp
  404523:	cmp    esp,esp
  404525:	je     0x4044aa
  404527:	mov    esp,DWORD PTR [eax]
  404529:	or     BYTE PTR [eax],bh
  40452b:	(bad)  
  40452c:	pushf  
  40452d:	ret    
  40452e:	mov    DWORD PTR [edx+0x24],ebp
  404531:	lea    ecx,[ebp+0x44e80394]
  404537:	clc    
  404538:	or     al,0xff
  40453a:	push   esp
  40453b:	inc    ebp
  40453c:	or     BYTE PTR [ebx+0x450818be],al
  404542:	pop    es
  404543:	call   esi
  404545:	test   al,0xbf
  404547:	jne    0x4045bb
  404549:	mov    eax,DWORD PTR [eax]
  40454b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40454c:	xlat   BYTE PTR ds:[ebx]
  40454d:	inc    ebp
  40454e:	push   esp
  40454f:	push   eax
  404550:	or     al,0xde
  404552:	push   ebp
  404553:	dec    DWORD PTR [ecx-0x74f7db75]
  404559:	dec    ebp
  40455a:	adc    BYTE PTR [ebx],dh
  40455c:	rol    DWORD PTR [ebx],1
  40455e:	sbb    BYTE PTR [ebx],bh
  404560:	dec    esp
  404561:	je     0x404577
  404563:	push   0x54
  404565:	call   DWORD PTR [eax]
  404567:	test   al,0xce
  404569:	inc    ebp
  40456a:	iret   
  40456b:	add    ebp,DWORD PTR [edi+0x24e889d8]
  404571:	clc    
  404572:	jmp    0x854776
  404577:	mov    edx,eax
  404579:	test   al,0x1f
  40457b:	or     BYTE PTR [ebp+eax*2+0x10],al
  40457f:	add    ecx,DWORD PTR [eax+ebx*1+0x14]
  404583:	inc    ebp
  404584:	(bad)  
  404585:	mov    eax,DWORD PTR [eax+esi*8+0x33324d9f]
  40458c:	mov    DWORD PTR [ebx],eax
  40458e:	and    al,0xf
  404590:	push   0xf84d85c1
  404595:	mov    edi,ebp
  404597:	rol    BYTE PTR [eax],1
  404599:	iret   
  40459a:	or     DWORD PTR [edx+edi*1+0x75329c9f],0x850f683b
  4045a5:	push   edi
  4045a6:	clc    
  4045a7:	(bad)  
  4045a8:	jmp    0x404535
  4045aa:	add    BYTE PTR [eax],dl
  4045ac:	mov    eax,0xf8898545
  4045b1:	jmp    0x404583
  4045b3:	add    DWORD PTR [ebp+0x640091],0x206544be
  4045bd:	pop    edi
  4045be:	inc    esp
  4045bf:	pop    ebx
  4045c0:	sbb    dl,al
  4045c2:	inc    ebp
  4045c3:	add    BYTE PTR [ecx-0x747cdb75],cl
  4045c9:	clc    
  4045ca:	and    al,0xec
  4045cc:	mov    DWORD PTR [ecx-0x7747adc],edi
  4045d2:	and    al,0x4c
  4045d4:	mov    DWORD PTR [eax],ecx
  4045d6:	and    al,0x41
  4045d8:	mov    ecx,DWORD PTR [ecx-0x7474dbdc]
  4045de:	and    al,0x24
  4045e0:	xor    edx,DWORD PTR [esi+0x3]
  4045e3:	pop    ecx
  4045e4:	mov    DWORD PTR [ecx-0x75],edx
  4045e7:	xor    esp,DWORD PTR [edi+edx*2]
  4045ea:	mov    ebx,DWORD PTR [edi+0x3003294]
  4045f0:	mov    ecx,DWORD PTR [ecx-0x74dbdb75]
  4045f6:	mov    ecx,DWORD PTR [esp+edx*4]
  4045f9:	push   esp
  4045fa:	add    BYTE PTR [eax],ah
  4045fc:	mov    edx,DWORD PTR [ebp+0x3]
  4045ff:	cmp    edi,DWORD PTR [esi*2+0x24188b4c]
  404606:	mov    DWORD PTR [ebx+0x33002401],ecx
  40460c:	dec    ecx
  40460d:	add    ebp,DWORD PTR [edx+0xf]
  404610:	push   0x4c30ca
  404615:	adc    BYTE PTR [eax+0x1f],dh
  404618:	push   0x0
  40461a:	(bad)  
  40461b:	cmp    ecx,DWORD PTR [ecx-0x7474db8b]
  404621:	and    al,0x24
  404623:	mov    esi,DWORD PTR [ebx]
  404625:	and    al,0x3
  404627:	xor    ecx,DWORD PTR [ecx-0x74f7db73]
  40462d:	jb     0x404653
  40462f:	add    bh,bh
  404631:	inc    esp
  404632:	and    al,0x14
  404634:	lea    edi,[edx]
  404636:	and    al,0x9c
  404638:	push   eax
  404639:	jmp    0x544682
  40463e:	(bad)  
  40463f:	cli    
  404640:	and    al,0x85
  404642:	(bad)  
  404643:	clc    
  404644:	and    al,0xa
  404646:	call   0xffdd3f88
  40464b:	jmp    0x544694
  404650:	dec    esp
  404651:	ds or  al,0x9c
  404654:	(bad)  
  404655:	cmp    eax,edi
  404657:	bswap  eax
  404659:	mov    bh,0x4b
  40465b:	add    BYTE PTR [ebx+ecx*4+0x20],al
  40465f:	and    al,0x4c
  404661:	mov    DWORD PTR [esp],ebx
  404664:	(bad)  
  404665:	mov    eax,edi
  404667:	or     BYTE PTR [edi-0x76e3dbbc],ch
  40466d:	inc    esp
  40466e:	jmp    0x404684
  404670:	add    DWORD PTR [ebp+edi*1+0x20],0x1075449c
  404678:	push   0xf8148544
  40467d:	inc    esp
  40467e:	sbb    BYTE PTR [edx+edi*8],dl
  404681:	dec    esp
  404682:	test   DWORD PTR [eax+edi*8],ebx
  404685:	mov    BYTE PTR [edi],0xc7
  404688:	aas    
  404689:	add    DWORD PTR [esp+eax*2-0x7f7ee715],ebx
  404690:	aas    
  404691:	add    DWORD PTR [eax+eax*1+0x44500875],ebx
  404698:	jne    0x4046b2
  40469a:	inc    DWORD PTR [eax+0xfa01f8]
  4046a0:	clc    
  4046a1:	add    bh,bh
  4046a3:	inc    ecx
  4046a4:	jne    0x404631
  4046a6:	call   0xffcc44cf
  4046ab:	fadd   DWORD PTR [eax+eax*1+0xc]
  4046af:	mov    eax,DWORD PTR [esp+edx*1+0xc]
  4046b3:	add    al,0x5e
  4046b5:	add    ch,ah
  4046b7:	add    dl,al
  4046b9:	inc    DWORD PTR [eax]
  4046bb:	push   eax
  4046bc:	and    al,0x0
  4046be:	rol    DWORD PTR ss:[ebp-0x63f3f8bc],1
  4046c5:	inc    esp
  4046c6:	adc    DWORD PTR [esp+ebx*4],0x9c768c6
  4046cd:	inc    esp
  4046ce:	adc    BYTE PTR [eax+ecx*1],ah
  4046d1:	inc    esp
  4046d2:	call   FWORD PTR [esp]
  4046d5:	je     0x4046fb
  4046d7:	sbb    BYTE PTR [ebx-0x74d7f3bc],cl
  4046dd:	lea    ecx,[ebx+0x3b503324]
  4046e3:	je     0x404670
  4046e5:	sub    al,0x8b
  4046e7:	je     0x40471c
  4046e9:	and    al,0xf
  4046eb:	mov    bl,0x1
  4046ed:	(bad)  
  4046ee:	clc    
  4046ef:	and    al,0xeb
  4046f1:	and    al,0x75
  4046f3:	add    eax,DWORD PTR [ebp-0x74db818c]
  4046f9:	and    al,0x5d
  4046fb:	add    eax,DWORD PTR [edx+edi*8+0x3c]
  4046ff:	cmp    al,0x85
  404701:	or     al,0x89
  404703:	pop    edi
  404704:	push   ebp
  404705:	mov    ebp,esp
  404707:	sub    esp,0x78
  40470a:	xor    eax,DWORD PTR ds:0x412370
  404710:	mov    eax,ds:0x40d5d0
  404715:	mov    DWORD PTR [ebp-0x10],eax
  404718:	mov    eax,ds:0x40d6dc
  40471d:	or     DWORD PTR ds:0x417e59,0x49bb
  404727:	mov    DWORD PTR [ebp-0x30],eax
  40472a:	mov    DWORD PTR [ebp-0xc],0xf89c8538
  404731:	mov    eax,ds:0x412368
  404736:	and    DWORD PTR ds:0x41abde,eax
  40473c:	mov    DWORD PTR [ebp-0x14],0xf89c853b
  404743:	mov    eax,DWORD PTR [ebp-0xc]
  404746:	xor    DWORD PTR ds:0x4245be,0x412378
  404750:	push   ebx
  404751:	push   esi
  404752:	and    DWORD PTR ds:0x417e55,0x7bf9
  40475c:	push   edi
  40475d:	mov    esi,0x7510859
  404762:	xor    eax,esi
  404764:	add    DWORD PTR ds:0x4245c6,0x4e22
  40476e:	mov    edi,0x32729f
  404773:	or     DWORD PTR ds:0x4245c6,0x5629
  40477d:	add    eax,edi
  40477f:	mov    DWORD PTR [ebp-0x20],eax
  404782:	movzx  eax,WORD PTR ds:0x412370
  404789:	and    DWORD PTR ds:0x415111,eax
  40478f:	mov    DWORD PTR [ebp-0x28],0xf89cb538
  404796:	dec    eax
  404797:	mov    DWORD PTR [ebp-0x34],0xf89f0538
  40479e:	mov    DWORD PTR [ebp-0x2c],0xf89c85f8
  4047a5:	add    DWORD PTR ds:0x41abd2,edx
  4047ab:	jmp    0x404924
  4047b0:	xlat   BYTE PTR ds:[ebx]
  4047b1:	mov    dl,0x2
  4047b3:	and    edi,DWORD PTR [ebx-0x5fa5289d]
  4047b9:	mov    al,ds:0x958287ea
  4047be:	cmp    al,0x2c
  4047c0:	jle    0x404840
  4047c2:	jle    0x404842
  4047c4:	fidivr DWORD PTR [edi+0x7e]
  4047c7:	jle    0x404797
  4047c9:	(bad)  
  4047ca:	cmp    eax,0xcfdb31c5
  4047cf:	fld    st(2)
  4047d1:	ja     0x404847
  4047d3:	or     eax,DWORD PTR [eax]
  4047d5:	push   ds
  4047d6:	or     BYTE PTR [edi],cl
  4047d8:	cmp    ecx,DWORD PTR [edi]
  4047da:	enter  0x3710,0x18
  4047de:	pop    ds
  4047df:	mov    cl,0x50
  4047e1:	or     BYTE PTR [edi-0x4210f123],ah
  4047e7:	rol    esi,cl
  4047e9:	or     ecx,DWORD PTR [esi-0x551b41ea]
  4047ef:	dec    ecx
  4047f0:	add    eax,0x1fb6dead
  4047f5:	push   esi
  4047f6:	in     al,dx
  4047f7:	outs   dx,DWORD PTR ds:[esi]
  4047f8:	add    ebx,DWORD PTR [ecx]
  4047fa:	pushf  
  4047fb:	jo     0x4047c3
  4047fd:	dec    eax
  4047fe:	mov    ds:0x34d92d5b,al
  404803:	cmp    al,0xad
  404805:	xor    BYTE PTR [ebx+0x35],0xa3
  404809:	jbe    0x40483f
  40480b:	fisttp DWORD PTR [ecx+0x3198c6f1]
  404811:	jecxz  0x40484b
  404813:	and    ecx,0x4f
  404816:	(bad)  
  404817:	xchg   esi,eax
  404818:	dec    ecx
  404819:	inc    DWORD PTR [edi-0x2d5e8870]
  40481f:	mov    ebp,0x4526ed4d
  404824:	sub    edi,DWORD PTR [edx-0x4361911e]
  40482a:	jae    0x404845
  40482c:	retf   
  40482d:	call   0xd4ca:0x5ee3c429
  404834:	mov    al,0xf8
  404836:	loop   0x4047d2
  404838:	cmp    edi,ecx
  40483a:	fs push ebp
  40483c:	(bad)  
  40483d:	sub    ch,cl
  40483f:	or     dl,cl
  404841:	sbb    DWORD PTR [ecx-0x6a],ebx
  404844:	and    eax,0x70696f0b
  404849:	add    BYTE PTR [ecx],bh
  40484b:	fisttp QWORD PTR [esi+0x7f652044]
  404851:	pop    DWORD PTR ds:[edx]
  404854:	shl    DWORD PTR [esi-0x22baacfd],cl
  40485a:	mov    BYTE PTR [ecx],0xdb
  40485d:	pop    esp
  40485e:	rcl    DWORD PTR [ecx],1
  404860:	jns    0x404800
  404862:	mov    dh,0x43
  404864:	daa    
  404865:	add    eax,0x12216723
  40486a:	fstp   TBYTE PTR [esi]
  40486c:	dec    edi
  40486d:	loopne 0x40483b
  40486f:	xchg   esp,eax
  404870:	and    al,0x56
  404872:	rcl    BYTE PTR [ebp+0x5c],1
  404875:	nop
  404876:	xchg   dh,ch
  404878:	xor    DWORD PTR ds:0x62cfb584,0x71562df0
  404882:	sbb    ah,BYTE PTR [esi-0x5d6d203d]
  404888:	das    
  404889:	mov    al,ds:0xc4fc528c
  40488e:	sbb    al,0xfc
  404890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404892:	adc    eax,0xa998a2e7
  404897:	js     0x404890
  404899:	ja     0x404870
  40489b:	mov    esp,0x93cd43df
  4048a0:	call   0x7f3f:0x7444cf8f
  4048a7:	jge    0x4048bf
  4048a9:	daa    
  4048aa:	sbb    BYTE PTR [ebp-0x199384bb],dh
  4048b0:	pop    eax
  4048b1:	push   ds
  4048b2:	and    dl,ch
  4048b4:	xor    ebp,DWORD PTR [ecx]
  4048b6:	(bad)  [edx-0x79]
  4048b9:	xchg   edi,eax
  4048ba:	dec    ebx
  4048bb:	pop    ds
  4048bc:	fnstenv [ecx+0x7e8e92c0]
  4048c2:	ins    BYTE PTR es:[edi],dx
  4048c3:	loope  0x404943
  4048c5:	ins    BYTE PTR es:[edi],dx
  4048c6:	sbb    eax,0x62d7983f
  4048cb:	or     dh,BYTE PTR [esi-0x2a]
  4048ce:	sahf   
  4048cf:	arpl   WORD PTR [ebx+0x4d],bx
  4048d2:	sbb    bl,BYTE PTR [eax]
  4048d4:	xor    BYTE PTR [esp+edi*2],0xe8
  4048d8:	ror    DWORD PTR [edx-0x34a7bd22],cl
  4048de:	inc    esp
  4048df:	cmp    DWORD PTR [esi],ebp
  4048e1:	imul   esp,DWORD PTR [ebp-0x1b],0x4f
  4048e5:	sti    
  4048e6:	scas   al,BYTE PTR es:[edi]
  4048e7:	sbb    ebp,DWORD PTR [edx]
  4048e9:	shr    BYTE PTR [ebx-0xb87ba25],cl
  4048ef:	lock cs stos DWORD PTR es:[edi],eax
  4048f2:	sar    BYTE PTR [ebp+0x6a],1
  4048f5:	aaa    
  4048f6:	push   edx
  4048f7:	cmc    
  4048f8:	pusha  
  4048f9:	aaa    
  4048fa:	ficomp DWORD PTR [ebp+0x466cdfb8]
  404900:	xchg   BYTE PTR [ebp-0x24],cl
  404903:	xchg   ebp,eax
  404904:	pop    ss
  404905:	mov    esp,0xbe62d263
  40490a:	rcl    DWORD PTR [edi+0x2e],cl
  40490d:	push   ebx
  40490e:	pop    ebp
  40490f:	pop    ebp
  404910:	xchg   ebp,eax
  404911:	pop    ecx
  404912:	push   ss
  404913:	sbb    al,0x8c
  404915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404916:	cmp    DWORD PTR [ebx-0x28],0x4f
  40491a:	cld    
  40491b:	repnz and DWORD PTR [ebx],ecx
  40491e:	retf   0x4c60
  404921:	clc    
  404922:	repnz xchg bh,al
  404925:	inc    ebp
  404926:	(bad)  
  404928:	test   DWORD PTR [eax+edi*8-0x7e0bba75],ebx
  40492f:	sbb    eax,0x417e59
  404934:	push   ecx
  404935:	jle    0x404978
  404937:	add    BYTE PTR [ebx],dh
  404939:	mov    BYTE PTR [ecx+0x41abde2d],0x0
  404940:	mov    edx,0xe9004245
  404945:	je     0x404948
  404947:	add    BYTE PTR [eax],al
  404949:	fst    QWORD PTR [ebx]
  40494b:	cdq    
  40494c:	loope  0x4049a7
  40494e:	jns    0x4049a5
  404950:	and    eax,esi
  404952:	scas   al,BYTE PTR es:[edi]
  404953:	pop    ss
  404954:	addr16 in al,0x86
  404957:	mov    ecx,0x7e7fdadd
  40495c:	jle    0x404938
  40495e:	jg     0x4049de
  404960:	jle    0x404994
  404962:	xchg   ecx,eax
  404963:	lods   eax,DWORD PTR ds:[esi]
  404964:	add    al,0x66
  404966:	scas   al,BYTE PTR es:[edi]
  404967:	aam    0xde
  404969:	lods   eax,DWORD PTR ds:[esi]
  40496a:	jmp    0x5587985e
  40496f:	push   ecx
  404970:	adc    eax,0x53898f9e
  404975:	dec    esp
  404976:	xchg   edx,eax
  404977:	push   es
  404978:	scas   eax,DWORD PTR es:[edi]
  404979:	or     al,0x50
  40497b:	mov    edi,0xe7983f21
  404980:	inc    ebp
  404981:	inc    edi
  404982:	inc    ebp
  404983:	test   DWORD PTR [esi-0x65],esi
  404986:	mov    bl,0xeb
  404988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404989:	(bad)  
  40498a:	jmp    0x404914
  40498c:	jge    0x404974
  40498e:	ret    0xdae6
  404991:	inc    eax
  404992:	or     BYTE PTR [ebp+0x49617b9c],0xc4
  404999:	adc    DWORD PTR [ecx+0x4800675d],esi
  40499f:	aad    0xef
  4049a1:	mov    dl,0x3a
  4049a3:	ss adc al,0x5d
  4049a6:	cmp    eax,DWORD PTR ds:0x2c92ea08
  4049ac:	in     al,dx
  4049ad:	hlt    
  4049ae:	icebp  
  4049af:	and    dl,dh
  4049b1:	push   ds
  4049b2:	loopne 0x404964
  4049b4:	jno    0x4049c9
  4049b6:	imul   ebx,DWORD PTR [esi+0x7898cd1f],0xfffffff0
  4049bd:	sbb    ah,dl
  4049bf:	xor    dl,BYTE PTR [eax]
  4049c1:	es sub eax,0xb425a2e7
  4049c7:	push   esp
  4049c8:	fdivr  st,st(1)
  4049ca:	xchg   edi,eax
  4049cb:	mov    bh,0x59
  4049cd:	jp     0x404991
  4049cf:	nop
  4049d0:	mov    DWORD PTR [edx+0x2e],ebp
  4049d3:	pop    ebx
  4049d4:	push   edx
  4049d5:	shl    BYTE PTR [ecx],0xda
  4049d8:	fnsave [edx+0xe264175]
  4049de:	in     al,dx
  4049df:	cmc    
  4049e0:	repnz inc ebx
  4049e2:	xor    al,0xd
  4049e4:	fidiv  DWORD PTR [ebp-0x48f80a8c]
  4049ea:	dec    esp
  4049eb:	xor    ebx,DWORD PTR [ecx]
  4049ed:	ror    DWORD PTR [ebp-0x2f],1
  4049f0:	(bad)
  4049f3:	sahf   
  4049f4:	fxch   st(1)
  4049f6:	cmc    
  4049f7:	jo     0x4049ff
  4049f9:	mov    edx,0xeb629c23
  4049fe:	aaa    
  4049ff:	fild   DWORD PTR [eax-0x11]
  404a02:	lahf   
  404a03:	xchg   edi,eax
  404a04:	arpl   di,sp
  404a06:	jge    0x404a27
  404a08:	ds mov edi,0xac2a837
  404a0e:	pop    es
  404a0f:	fadd   DWORD PTR [ebx]
  404a11:	pop    ebx
  404a12:	ror    DWORD PTR [esi+0x2e8baf90],0xb7
  404a19:	dec    ebp
  404a1a:	test   edx,ebx
  404a1c:	out    0xbb,eax
  404a1e:	fs jp  0x4049c7
  404a21:	loope  0x404a88
  404a23:	js     0x4049b4
  404a25:	popa   
  404a26:	loopne 0x404a81
  404a28:	mov    ecx,0x31078626
  404a2d:	xchg   ecx,eax
  404a2e:	sub    al,0x8c
  404a30:	imul   edx,DWORD PTR [edx],0x54a7c4b4
  404a36:	push   edi
  404a37:	shr    DWORD PTR [ebp+0x6c2731bc],1
  404a3d:	xchg   esi,eax
  404a3e:	pop    ebp
  404a3f:	jo     0x404a57
  404a41:	les    eax,FWORD PTR [edi-0x77]
  404a44:	xchg   BYTE PTR [ebx+0x5e],ch
  404a47:	cdq    
  404a48:	test   edx,0x521a4810
  404a4e:	cmp    DWORD PTR [edi+0x3e12b33f],ebp
  404a54:	inc    esp
  404a55:	xor    DWORD PTR [esi],edx
  404a57:	jae    0x404a29
  404a59:	push   ds
  404a5a:	jl     0x404a98
  404a5c:	pusha  
  404a5d:	mov    ds:0x26bc9e83,eax
  404a62:	cmp    edi,DWORD PTR [edx+0x72]
  404a65:	mov    ds:0x552c0c79,eax
  404a6a:	pop    edx
  404a6b:	lds    ecx,FWORD PTR [edx-0x11845bf9]
  404a71:	jno    0x404a00
  404a73:	push   esi
  404a74:	cmp    DWORD PTR [edi],edx
  404a76:	fs jg  0x404a1f
  404a79:	vaddss xmm7,xmm5,DWORD PTR [esi-0x78ea7ad4]
  404a81:	push   esp
  404a82:	(bad)  
  404a83:	jmp    0x7713e416
  404a88:	push   0xffffffa1
  404a8a:	into   
  404a8b:	mov    BYTE PTR [esi+0x5cdf66ac],cl
  404a91:	inc    esi
  404a92:	stos   DWORD PTR es:[edi],eax
  404a93:	push   ecx
  404a94:	and    BYTE PTR [ebx],cl
  404a96:	std    
  404a97:	cli    
  404a98:	std    
  404a99:	es cmp al,0x3
  404a9c:	add    eax,0xab3aa06e
  404aa1:	mov    eax,ds:0x167f40c7
  404aa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404aa7:	test   eax,0xf26c0581
  404aac:	jns    0x404af5
  404aae:	lahf   
  404aaf:	jae    0x404afa
  404ab1:	xor    DWORD PTR [edi+0xf],ebx
  404ab4:	adc    al,0x56
  404ab6:	fdiv   DWORD PTR [edi]
  404ab8:	ret    0x2b1c
  404abb:	jmp    0xe845:0x89c70303
  404ac2:	and    DWORD PTR ds:0x4245ba,0x0
  404acc:	jmp    0x404adc
  404ad1:	mov    eax,ds:0x4245ba
  404ad6:	inc    eax
  404ad7:	mov    ds:0x4245ba,eax
  404adc:	cmp    DWORD PTR ds:0x4245ba,0x1e
  404ae3:	jae    0x404b28
  404ae9:	cmp    DWORD PTR ds:0x4245ba,0x6
  404af0:	jne    0x404b01
  404af6:	push   0x41ae97
  404afb:	call   DWORD PTR ds:0x40d1c4
  404b01:	cmp    DWORD PTR ds:0x4245ba,0x5
  404b08:	jne    0x404b19
  404b0e:	mov    eax,ds:0x4245ba
  404b13:	inc    eax
  404b14:	mov    ds:0x4245ba,eax
  404b19:	jmp    0x404ad1
  404b1e:	sub    DWORD PTR ds:0x415111,0xc33
  404b28:	mov    DWORD PTR [ebp-0x1c],0xf89c853f
  404b2f:	mov    BYTE PTR [ebp-0x1],0x57
  404b33:	sub    DWORD PTR ds:0x417e59,edi
  404b39:	mov    eax,DWORD PTR [ebp-0xc]
  404b3c:	xor    eax,esi
  404b3e:	and    DWORD PTR ds:0x415115,0x5145
  404b48:	add    eax,edi
  404b4a:	mov    DWORD PTR [ebp-0x18],eax
  404b4d:	mov    eax,DWORD PTR [ebp-0x24]
  404b50:	xor    eax,esi
  404b52:	adc    DWORD PTR ds:0x41abde,0x3f71
  404b5c:	add    eax,edi
  404b5e:	and    DWORD PTR ds:0x4245be,0x352e
  404b68:	push   eax
  404b69:	dec    eax
  404b6a:	mov    eax,DWORD PTR [ebp-0x28]
  404b6d:	xor    eax,esi
  404b6f:	and    DWORD PTR ds:0x4245b2,0x41abce
  404b79:	add    eax,edi
  404b7b:	xor    DWORD PTR ds:0x41abda,0x41237c
  404b85:	push   eax
  404b86:	and    DWORD PTR ds:0x4245be,0x41abe2
  404b90:	mov    eax,DWORD PTR [ebp-0x1c]
  404b93:	jmp    0x404d0c
  404b98:	push   0xffffff9c
  404b9a:	mov    ds:0x7b617853,al
  404b9f:	xchg   ebp,eax
  404ba0:	push   ebx
  404ba1:	mov    DWORD PTR [ecx+0x3f],esp
  404ba4:	cmp    DWORD PTR [edi+0x7ca630d9],esi
  404baa:	jle    0x404c2a
  404bac:	fidivr DWORD PTR [edi+0x7e]
  404baf:	jle    0x404b85
  404bb1:	cli    
  404bb2:	lods   eax,DWORD PTR ds:[esi]
  404bb3:	outs   dx,BYTE PTR ds:[esi]
  404bb4:	idiv   DWORD PTR [eax+edx*8+0x182426c2]
  404bbb:	popf   
  404bbc:	mov    esi,DWORD PTR [esi]
  404bbe:	(bad)  
  404bbf:	clc    
  404bc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bc1:	add    ah,cl
  404bc3:	adc    edx,DWORD PTR [eax]
  404bc5:	in     al,dx
  404bc6:	sub    bl,BYTE PTR [ebx+0x38]
  404bc9:	imul   DWORD PTR [edx+ebx*4-0x26]
  404bcd:	ret    
  404bce:	add    bh,al
  404bd0:	das    
  404bd1:	out    dx,eax
  404bd2:	mov    esi,DWORD PTR [ebx-0x2ec77f5f]
  404bd8:	int    0x1a
  404bda:	inc    esp
  404bdb:	iret   
  404bdc:	mov    eax,ds:0x391b79aa
  404be1:	jns    0x404bf8
  404be3:	add    esp,edx
  404be5:	or     dl,bl
  404be7:	outs   dx,DWORD PTR ds:[esi]
  404be8:	outs   dx,BYTE PTR ds:[esi]
  404be9:	cmp    dh,BYTE PTR [edx]
  404beb:	test   eax,0x15898722
  404bf0:	mov    ebp,0xca66bdff
  404bf5:	cmp    DWORD PTR [eax],edi
  404bf7:	fild   WORD PTR [ebp+0x2e]
  404bfa:	loop   0x404b82
  404bfc:	sub    BYTE PTR [edx],0x8e
  404bff:	(bad)  
  404c00:	test   eax,0x3fdbee37
  404c05:	sub    cl,BYTE PTR ds:0xed230e46
  404c0b:	add    edi,DWORD PTR [eax+0x1c]
  404c0e:	(bad)  
  404c0f:	aas    
  404c10:	cdq    
  404c11:	in     al,0x3d
  404c13:	push   bp
  404c15:	lods   eax,DWORD PTR ds:[esi]
  404c16:	adc    BYTE PTR [edi-0x45],al
  404c19:	xor    eax,0xe45af3a1
  404c1e:	xor    bl,bh
  404c20:	xor    ebx,esi
  404c22:	scas   al,BYTE PTR es:[edi]
  404c23:	imul   ecx,DWORD PTR [esi+0x6f845444],0x5a5ae293
  404c2d:	and    ah,BYTE PTR [edx+esi*8-0x58]
  404c31:	cld    
  404c32:	inc    esp
  404c33:	lds    ecx,FWORD PTR [ebp-0x7e014e4b]
  404c39:	shl    BYTE PTR [ecx],1
  404c3b:	and    al,0x66
  404c3d:	jns    0x404c53
  404c3f:	loope  0x404ca3
  404c41:	mov    ecx,0x612af584
  404c46:	xchg   ebp,eax
  404c47:	sti    
  404c48:	rcl    DWORD PTR [esi],1
  404c4a:	fprem  
  404c4c:	daa    
  404c4d:	retf   
  404c4e:	jecxz  0x404bd1
  404c50:	popaw  
  404c52:	mov    ds:0x5bafbb6b,eax
  404c57:	rcl    DWORD PTR [ebx+0xe],0xf1
  404c5b:	sbb    edx,esi
  404c5d:	ret    
  404c5e:	fwait
  404c5f:	loope  0x404c9b
  404c61:	ds push ecx
  404c63:	adc    DWORD PTR [ebx-0x1a],edx
  404c66:	ret    0xbfb6
  404c69:	mov    dl,0x7f
  404c6b:	dec    esi
  404c6c:	retf   0xd93c
  404c6f:	lods   al,BYTE PTR ds:[esi]
  404c70:	sub    esp,DWORD PTR [ebx+0x57]
  404c73:	mov    ds:0x9ced08b4,al
  404c78:	in     al,0x6c
  404c7a:	push   0x29
  404c7c:	mov    cl,0xbb
  404c7e:	call   0xf07d:0x8885716d
  404c85:	in     eax,dx
  404c86:	lods   al,BYTE PTR ds:[esi]
  404c87:	add    al,BYTE PTR [ecx]
  404c89:	pop    esi
  404c8a:	add    ch,BYTE PTR [esi+esi*8+0x12]
  404c8e:	jbe    0x404cc7
  404c90:	clc    
  404c91:	in     eax,dx
  404c92:	mov    al,0x67
  404c94:	xor    dh,BYTE PTR [esi+eax*1-0x58d7599]
  404c9b:	pop    ecx
  404c9c:	xchg   esp,eax
  404c9d:	cli    
  404c9e:	je     0x404c8b
  404ca0:	and    eax,0xeb035cfb
  404ca5:	add    ecx,edx
  404ca7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ca8:	push   0xe15ad1f3
  404cad:	test   DWORD PTR [esi],ebp
  404caf:	jp     0x404c8a
  404cb1:	mov    dh,bh
  404cb3:	lods   al,BYTE PTR ds:[esi]
  404cb4:	and    dl,BYTE PTR [esi]
  404cb6:	push   es
  404cb7:	or     DWORD PTR [edx],0xffffffa0
  404cba:	test   BYTE PTR [edi+0x680914dc],0x24
  404cc1:	(bad)  
  404cc2:	std    
  404cc3:	fwait
  404cc4:	cmc    
  404cc5:	and    eax,0x3937b94f
  404cca:	or     eax,0xdf995706
  404ccf:	pop    eax
  404cd0:	test   BYTE PTR ds:0xc2d0700,cl
  404cd6:	nop
  404cd7:	cmc    
  404cd8:	push   esi
  404cd9:	(bad)  
  404cda:	inc    ecx
  404cdb:	cmc    
  404cdc:	fwait
  404cdd:	xchg   BYTE PTR [ecx+0x52],dl
  404ce0:	or     eax,0x81d8be49
  404ce5:	xor    al,0x59
  404ce7:	icebp  
  404ce8:	imul   ebx,DWORD PTR [ecx-0x6e35a851],0x3565630f
  404cf2:	lods   eax,DWORD PTR ds:[esi]
  404cf3:	jno    0x404d72
  404cf5:	imul   esi,DWORD PTR [esi-0x1996dc40],0xeb66fd92
  404cff:	cs mov esp,0x28d67545
  404d05:	repnz xchg ah,al
  404d08:	add    eax,0x338cba5b
  404d0d:	(bad)  
  404d0e:	neg    DWORD PTR ds:0x415105
  404d14:	add    eax,edi
  404d16:	xor    DWORD PTR ds:0x412364,0x39b1
  404d20:	push   eax
  404d21:	lea    eax,[ebp-0x78]
  404d24:	push   eax
  404d25:	mov    DWORD PTR ds:0x41237c,0x6752
  404d2f:	push   DWORD PTR [ebp-0xc]
  404d32:	sub    DWORD PTR ds:0x415111,0x1b2b
  404d3c:	push   DWORD PTR [ebp-0x14]
  404d3f:	sub    DWORD PTR ds:0x4245b6,0x412364
  404d49:	call   0x409363
  404d4e:	inc    DWORD PTR ds:0x415119
  404d54:	test   eax,eax
  404d56:	mov    DWORD PTR ds:0x4245b6,0x71ec
  404d60:	je     0x404de0
  404d66:	sub    DWORD PTR ds:0x417e59,0x4245ca
  404d70:	lea    eax,[ebp-0x78]
  404d73:	neg    DWORD PTR ds:0x4245be
  404d79:	push   eax
  404d7a:	add    eax,DWORD PTR ds:0x4245ca
  404d80:	mov    eax,DWORD PTR [ebp-0x14]
  404d83:	and    DWORD PTR ds:0x417e59,0xd95
  404d8d:	xor    eax,esi
  404d8f:	add    eax,edi
  404d91:	and    DWORD PTR ds:0x417e3d,0x71b6
  404d9b:	push   eax
  404d9c:	mov    eax,DWORD PTR [ebp-0x10]
  404d9f:	add    eax,0xaa
  404da4:	push   eax
  404da5:	and    DWORD PTR ds:0x41abd2,0x17f4
  404daf:	mov    eax,DWORD PTR [ebp-0x10]
  404db2:	sub    DWORD PTR ds:0x417e55,0x41236c
  404dbc:	mov    eax,DWORD PTR [eax+0x198]
  404dc2:	push   DWORD PTR [eax]
  404dc4:	add    DWORD PTR ds:0x417e55,0x417e3d
  404dce:	call   0x40ae4d
  404dd3:	mov    DWORD PTR ds:0x41abd6,0x35a
  404ddd:	mov    DWORD PTR [ebp-0x8],eax
  404de0:	mov    DWORD PTR ds:0x412368,0x764e
  404dea:	cmp    DWORD PTR [ebp-0x8],0x0
  404dee:	not    DWORD PTR ds:0x412364
  404df4:	lea    eax,[ebp+0x4]
  404df7:	mov    DWORD PTR [ebp-0x20],eax
  404dfa:	je     0x405842
  404e00:	lea    eax,[ebp-0x18]
  404e03:	jmp    0x404f7c
  404e08:	ja     0x404d8f
  404e0a:	(bad)  
  404e0b:	je     0x404d9a
  404e0d:	je     0x404d94
  404e0f:	test   DWORD PTR [esi],edi
  404e11:	push   ebx
  404e12:	outs   dx,DWORD PTR ds:[esi]
  404e13:	jne    0x404de5
  404e15:	inc    ebx
  404e16:	dec    ecx
  404e17:	mov    WORD PTR [edx],es
  404e19:	jb     0x404e99
  404e1b:	jle    0x404df7
  404e1d:	jg     0x404e9d
  404e1f:	jle    0x404e68
  404e21:	repnz mov eax,0x16ea8868
  404e27:	loopne 0x404e93
  404e29:	repnz loope 0x404e95
  404e2c:	sbb    eax,0xaa4dcb0a
  404e31:	xchg   DWORD PTR [eax],edi
  404e33:	inc    eax
  404e34:	xor    eax,0x97e5ef2b
  404e39:	mov    bl,0x94
  404e3b:	fcmovne st,st(3)
  404e3d:	clc    
  404e3e:	mov    ecx,0xb025c8b6
  404e43:	dec    ecx
  404e44:	and    cl,BYTE PTR [ebx-0x1228c6f3]
  404e4a:	push   esp
  404e4b:	cmc    
  404e4c:	cmc    
  404e4d:	cs jmp 0xb008:0x8bd3cd90
  404e55:	add    al,0xd1
  404e57:	rcr    DWORD PTR [edx+0x7d],0xe7
  404e5b:	scas   al,BYTE PTR es:[edi]
  404e5c:	es mov esi,esi
  404e5f:	inc    ebx
  404e60:	xchg   ebp,eax
  404e61:	ffreep st(1)
  404e63:	test   DWORD PTR [edi-0x70c451dc],esi
  404e69:	sbb    BYTE PTR [ebp+ecx*4+0x32c1c5be],al
  404e70:	sub    esp,DWORD PTR [eax+0x2b]
  404e73:	sbb    bh,al
  404e75:	jo     0x404e09
  404e77:	cmp    ebp,DWORD PTR [eax]
  404e79:	out    dx,al
  404e7a:	add    ebp,DWORD PTR [ecx+0x79614bb]
  404e80:	cmp    DWORD PTR [edi],ebp
  404e82:	and    eax,0x37f044f6
  404e87:	iret   
  404e88:	mov    WORD PTR [esi+0x73bff29f],ss
  404e8e:	pop    eax
  404e8f:	imul   esp,DWORD PTR [edx-0x3382bd6f],0x830ee6b6
  404e99:	retf   
  404e9a:	fs scas eax,DWORD PTR es:[edi]
  404e9c:	jle    0x404e4d
  404e9e:	xor    BYTE PTR [ebx+eax*8-0x1],al
  404ea2:	iret   
  404ea3:	repnz mov ebp,DWORD PTR [eax+0x2f33fc54]
  404eaa:	jb     0x404f13
  404eac:	mov    bl,0x58
  404eae:	cmc    
  404eaf:	jno    0x404e3a
  404eb1:	mov    cl,0xf
  404eb3:	sub    esi,ebx
  404eb5:	in     al,dx
  404eb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404eb7:	test   al,0x74
  404eb9:	xchg   edi,eax
  404eba:	dec    ecx
  404ebb:	lock cmp ah,0x3b
  404ebf:	aam    0xd
  404ec1:	sti    
  404ec2:	aam    0x55
  404ec4:	push   ecx
  404ec5:	dec    esi
  404ec6:	ins    DWORD PTR es:[edi],dx
  404ec7:	xchg   DWORD PTR [edx-0x6b],eax
  404eca:	mov    DWORD PTR [eax],ebx
  404ecc:	jp     0x404f34
  404ece:	stc    
  404ecf:	imul   edx,ebp,0x4a
  404ed2:	jbe    0x404e8a
  404ed4:	mov    dl,0xaf
  404ed6:	shl    al,0x41
  404ed9:	mov    WORD PTR [ecx],gs
  404edb:	and    al,0x7e
  404edd:	popf   
  404ede:	mov    gs,WORD PTR [eax-0x23206e38]
  404ee4:	(bad)  
  404ee6:	pop    ecx
  404ee7:	shr    DWORD PTR [ecx+0x4b54f9d0],cl
  404eed:	scas   eax,DWORD PTR es:[edi]
  404eee:	mov    dh,0x62
  404ef0:	inc    esi
  404ef1:	in     eax,0x4e
  404ef3:	mov    esi,0x6b6b426
  404ef8:	sub    BYTE PTR [edi],ah
  404efa:	mov    ah,0x17
  404efc:	sub    al,0x9f
  404efe:	fidiv  DWORD PTR [edx+eiz*2+0x6d5fd7f1]
  404f05:	add    ecx,DWORD PTR [ebx]
  404f07:	out    0xff,eax
  404f09:	scas   al,BYTE PTR es:[edi]
  404f0a:	and    dh,BYTE PTR [ebp-0x2234f82e]
  404f10:	xor    DWORD PTR [esi+0x2fc50ac3],ebx
  404f16:	icebp  
  404f17:	push   es
  404f18:	sbb    DWORD PTR [ebx+0x12],esp
  404f1b:	in     al,dx
  404f1c:	punpckhdq mm3,QWORD PTR [eax]
  404f1f:	dec    eax
  404f20:	jge    0x404f8e
  404f22:	loope  0x404eb7
  404f24:	call   0xe2e7:0xe65fcfaf
  404f2b:	cmp    al,0xc8
  404f2d:	xor    eax,0x210c9602
  404f32:	mov    BYTE PTR ds:0xea19f934,bl
  404f38:	lock aam 0x27
  404f3b:	push   edx
  404f3c:	(bad)  
  404f3d:	aad    0x4b
  404f3f:	sbb    DWORD PTR [ebx+0x3151ecc9],ecx
  404f45:	adc    eax,ecx
  404f47:	gs ja  0x404f1e
  404f4a:	sbb    ah,BYTE PTR [ebp+esi*8-0x7e31a5e1]
  404f51:	mov    eax,0xee7b62ca
  404f56:	fsubr  DWORD PTR [ecx+0x31]
  404f59:	pop    ss
  404f5a:	cld    
  404f5b:	mov    eax,ds:0xad9904f1
  404f60:	into   
  404f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f62:	out    dx,al
  404f63:	inc    esi
  404f64:	xchg   bh,cl
  404f66:	sti    
  404f67:	or     eax,0x10a083de
  404f6c:	lds    ebx,FWORD PTR [esp+eax*2-0x9043836]
  404f73:	retf   
  404f74:	jns    0x404fb1
  404f76:	lods   eax,DWORD PTR ds:[esi]
  404f77:	inc    ecx
  404f78:	inc    ecx
  404f79:	mov    dl,0x80
  404f7b:	adc    edx,DWORD PTR [eax-0x7f]
  404f7e:	and    eax,0x4245ae
  404f83:	add    BYTE PTR [eax],al
  404f85:	add    BYTE PTR [eax],al
  404f87:	jmp    0x404f97
  404f8c:	mov    eax,ds:0x4245ae
  404f91:	inc    eax
  404f92:	mov    ds:0x4245ae,eax
  404f97:	cmp    DWORD PTR ds:0x4245ae,0x1e
  404f9e:	jae    0x404fc0
  404fa4:	cmp    DWORD PTR ds:0x4245ae,0x22
  404fab:	jne    0x404fba
  404fb1:	push   DWORD PTR [ebp-0x28]
  404fb4:	call   DWORD PTR ds:0x40d298
  404fba:	jmp    0x404f8c
  404fbf:	inc    eax
  404fc0:	mov    eax,DWORD PTR [ebp-0x2c]
  404fc3:	adc    DWORD PTR ds:0x412354,0x412370
  404fcd:	xor    eax,esi
  404fcf:	add    eax,edi
  404fd1:	and    DWORD PTR ds:0x415115,0x3c83
  404fdb:	jmp    0x405154
  404fe0:	adc    al,0x10
  404fe2:	imul   DWORD PTR [edx]
  404fe4:	mov    ebp,DWORD PTR [ecx+0x1f8510a9]
  404fea:	and    DWORD PTR [edx+0x272d88b2],esi
  404ff0:	out    dx,al
  404ff1:	jae    0x405071
  404ff3:	jle    0x404fcf
  404ff5:	jg     0x405075
  404ff7:	jle    0x40500d
  404ff9:	or     BYTE PTR [edi+eiz*8],ah
  404ffc:	(bad)  
  404ffd:	or     edi,DWORD PTR [edi+0x13b63d54]
  405003:	std    
  405004:	data16 or al,0xb4
  405007:	mov    ah,0x19
  405009:	cld    
  40500a:	cmc    
  40500b:	adc    eax,ebx
  40500d:	inc    esi
  40500e:	and    BYTE PTR [edi-0x95c030c],0x6d
  405015:	bnd jle 0x405062
  405018:	xchg   ebx,eax
  405019:	dec    esi
  40501a:	push   ss
  40501b:	pop    eax
  40501c:	inc    edx
  40501d:	or     BYTE PTR [edx],0x51
  405020:	das    
  405021:	jmp    0x119943cb
  405026:	dec    edi
  405027:	idiv   BYTE PTR [ebx-0x60f703fb]
  40502d:	(bad)  
  40502e:	shl    DWORD PTR [ecx-0x68],1
  405031:	inc    edi
  405032:	xchg   edx,eax
  405033:	jle    0x404fc1
  405035:	sbb    eax,0xd330051c
  40503a:	imul   edx,eax,0xa
  40503d:	jge    0x405012
  40503f:	clc    
  405040:	xchg   BYTE PTR [ecx],dh
  405042:	jo     0x4050bf
  405044:	push   eax
  405045:	fdiv   QWORD PTR [ecx]
  405047:	(bad)  
  405048:	adc    edi,DWORD PTR [ecx+ebp*2-0x16]
  40504c:	xchg   edx,eax
  40504d:	mov    ebp,0x62d0842e
  405052:	cmp    al,BYTE PTR [ebp-0xbd0851e]
  405058:	jbe    0x40508e
  40505a:	or     al,0x4d
  40505c:	in     al,dx
  40505d:	sar    BYTE PTR [eax],0x53
  405060:	jae    0x40506b
  405062:	mov    edi,0x94a37355
  405067:	rcr    DWORD PTR [eax+0x21],1
  40506a:	dec    edi
  40506b:	mov    ds:0xc1d93f8b,eax
  405070:	into   
  405071:	push   ecx
  405072:	shl    DWORD PTR [ecx-0x56],0xc3
  405076:	out    0x73,eax
  405078:	mov    al,0x38
  40507a:	cmp    cl,BYTE PTR [eax+ecx*2-0x2f]
  40507e:	mov    esi,0x9e1e39d5
  405083:	(bad)
  405087:	xchg   edi,eax
  405088:	cmc    
  405089:	xchg   edi,eax
  40508a:	out    dx,eax
  40508b:	stc    
  40508c:	cdq    
  40508d:	or     ecx,DWORD PTR [ebx+0x5c]
  405090:	lahf   
  405091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405092:	loop   0x405035
  405094:	gs loopne 0x40509b
  405097:	sub    edx,edx
  405099:	dec    ebx
  40509a:	es sub dh,0x2d
  40509e:	stc    
  40509f:	mov    ebx,0x1c078b47
  4050a4:	xor    al,0x6a
  4050a6:	inc    ecx
  4050a7:	imul   eax,DWORD PTR [ecx-0x26acffb],0xffffffe1
  4050ae:	cdq    
  4050af:	inc    edi
  4050b0:	xlat   BYTE PTR ds:[ebx]
  4050b1:	add    al,0x91
  4050b3:	mov    bl,0x3e
  4050b5:	shl    BYTE PTR [eax],1
  4050b7:	sub    eax,esi
  4050b9:	mov    dh,0x2c
  4050bb:	les    ecx,FWORD PTR [eax-0xcf9f004]
  4050c1:	push   ebp
  4050c2:	aaa    
  4050c3:	shl    BYTE PTR [edi+0x46],0x58
  4050c7:	dec    esi
  4050c8:	imul   esi,edx,0x21522c25
  4050ce:	and    al,0x52
  4050d0:	mov    bh,al
  4050d2:	cmc    
  4050d3:	mov    esp,0x565fbe2
  4050d8:	mov    ecx,0x93545fe
  4050dd:	sbb    eax,0x2d2ba593
  4050e2:	(bad)  
  4050e3:	fldenv [edx+0x4e7398d2]
  4050e9:	jae    0x405160
  4050eb:	sahf   
  4050ec:	repnz les edi,FWORD PTR [edi]
  4050ef:	mov    ds,WORD PTR [edx-0x5fd64d1b]
  4050f5:	dec    edi
  4050f6:	sub    eax,0x38be4fd8
  4050fb:	inc    ebx
  4050fc:	sbb    ch,BYTE PTR [ebp-0x4e889f37]
  405102:	lods   al,BYTE PTR ds:[esi]
  405103:	dec    ecx
  405104:	push   0x4bd7f6e0
  405109:	mov    dh,0x6b
  40510b:	out    dx,eax
  40510c:	in     al,0xb9
  40510e:	rol    ebp,cl
  405110:	aam    0x94
  405112:	add    DWORD PTR [ecx+0x2c494af],ebx
  405118:	add    DWORD PTR [eax+0x347228bc],0x1f
  40511f:	leave  
  405120:	in     eax,0x6
  405122:	jmp    0x4050d4
  405124:	xchg   edi,eax
  405125:	add    BYTE PTR [eax-0x3a22d661],0x27
  40512c:	int    0xc8
  40512e:	dec    esi
  40512f:	cld    
  405130:	sbb    DWORD PTR [ecx-0x73],0xcdc9f547
  405137:	call   0x12e6e01a
  40513c:	jg     0x4050c4
  40513e:	push   cs
  40513f:	mov    dh,0x86
  405141:	clc    
  405142:	out    dx,eax
  405143:	sub    edi,ecx
  405145:	push   ds
  405146:	in     eax,0x1
  405148:	and    DWORD PTR [ebx+0x48],esp
  40514b:	mov    WORD PTR [edx-0x48],gs
  40514e:	push   esi
  40514f:	out    dx,eax
  405150:	aas    
  405151:	ins    BYTE PTR es:[edi],dx
  405152:	mov    ds:0x5c7509d,eax
  405157:	pop    eax
  405158:	and    eax,DWORD PTR [ecx+0x0]
  40515b:	adc    BYTE PTR [eax],al
  40515d:	add    BYTE PTR [eax],al
  40515f:	cmp    DWORD PTR ds:0x412358,0x0
  405166:	je     0x4051ac
  40516c:	cmp    DWORD PTR ds:0x412358,0x4
  405173:	jne    0x405184
  405179:	push   0x4150fd
  40517e:	call   DWORD PTR ds:0x40d1c8
  405184:	cmp    DWORD PTR ds:0x412358,0x5
  40518b:	jne    0x40519c
  405191:	mov    eax,ds:0x412358
  405196:	dec    eax
  405197:	mov    ds:0x412358,eax
  40519c:	mov    eax,ds:0x412358
  4051a1:	dec    eax
  4051a2:	mov    ds:0x412358,eax
  4051a7:	jmp    0x40515f
  4051ac:	mov    eax,DWORD PTR [ebp-0x1c]
  4051af:	xor    eax,esi
  4051b1:	add    eax,edi
  4051b3:	jmp    0x40532c
  4051b8:	(bad)  
  4051b9:	sbb    BYTE PTR [ecx+eiz*1],ah
  4051bc:	clc    
  4051bd:	and    ebx,ebp
  4051bf:	fldcw  WORD PTR [esi+0x120f9672]
  4051c5:	in     al,0x8b
  4051c7:	test   eax,0x7e7e704a
  4051cc:	fidivr DWORD PTR [edi+0x7e]
  4051cf:	jle    0x4051b0
  4051d1:	fwait
  4051d2:	mov    ds:0xcb694d52,al
  4051d7:	fwait
  4051d8:	pop    esi
  4051d9:	dec    esp
  4051da:	enter  0xfcb3,0x12
  4051de:	adc    eax,esp
  4051e0:	std    
  4051e1:	mov    ebx,0xb0bb21f7
  4051e6:	push   ecx
  4051e7:	lods   eax,DWORD PTR ds:[esi]
  4051e8:	xchg   BYTE PTR [ecx+0x63cb7728],bh
  4051ee:	mov    edx,0x1cf50570
  4051f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051f4:	mov    ch,0xc4
  4051f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051f7:	out    dx,al
  4051f8:	or     BYTE PTR [eax],dh
  4051fa:	(bad)  
  4051fb:	mov    al,0x56
  4051fd:	jne    0x405233
  4051ff:	inc    ecx
  405200:	int    0xc
  405202:	loop   0x4051f6
  405204:	and    edi,DWORD PTR [ebx+edi*2-0x7f]
  405208:	adc    ebp,DWORD PTR [esi+0x62f67252]
  40520e:	idiv   BYTE PTR [esi+0x7c1c4486]
  405214:	out    0xf0,al
  405216:	and    BYTE PTR [edx],bh
  405218:	nop
  405219:	inc    esi
  40521a:	push   eax
  40521b:	and    BYTE PTR [ecx+0x1f],bh
  40521e:	jne    0x40521b
  405220:	(bad)  
  405221:	(bad)  
  405222:	jl     0x40523a
  405224:	push   ebp
  405225:	adc    eax,0x9ff61f81
  40522a:	cmp    al,0xf7
  40522c:	int    0x30
  40522e:	mov    ah,0x0
  405230:	pop    ecx
  405231:	ja     0x405204
  405233:	das    
  405234:	mov    bl,0x45
  405236:	pop    esp
  405237:	pop    ebp
  405238:	inc    esp
  405239:	and    eax,0x9ffcd5aa
  40523e:	fdivr  st,st(3)
  405240:	std    
  405241:	and    ebp,DWORD PTR [edx+esi*2-0x4dddb234]
  405248:	arpl   WORD PTR [eax],sp
  40524a:	sbb    bl,bh
  40524c:	ins    DWORD PTR es:[edi],dx
  40524d:	push   esp
  40524e:	cs xor bl,al
  405251:	ret    
  405252:	fisubr WORD PTR [esi+0x7ed0dda4]
  405258:	sbb    BYTE PTR [esi+0x7d],0x48
  40525c:	ins    BYTE PTR es:[edi],dx
  40525d:	xchg   ebp,eax
  40525e:	xlat   BYTE PTR ds:[ebx]
  40525f:	or     DWORD PTR [ebp-0x1a],ebp
  405262:	bound  esi,QWORD PTR [ecx-0x52]
  405265:	adc    ah,ah
  405267:	dec    ecx
  405268:	add    DWORD PTR [ebp-0x61],ecx
  40526b:	je     0x4052b5
  40526d:	or     ch,BYTE PTR [ecx]
  40526f:	dec    DWORD PTR [ebp+0x181a2cba]
  405275:	mov    ebx,0x27e50f6f
  40527a:	or     eax,0x96e9a94f
  40527f:	pushf  
  405280:	inc    ecx
  405281:	add    al,bl
  405283:	push   esi
  405284:	inc    esp
  405285:	cmc    
  405286:	sbb    DWORD PTR [edx-0x46521656],ebx
  40528c:	cdq    
  40528d:	pop    ss
  40528e:	bound  ebx,QWORD PTR [edi]
  405290:	repnz or al,0xe
  405293:	push   0x43822916
  405298:	push   esi
  405299:	(bad)  
  40529a:	push   esi
  40529b:	sbb    eax,0xad9843a
  4052a0:	xchg   ebp,eax
  4052a1:	cli    
  4052a2:	xchg   DWORD PTR [esi-0x95e77a9],edi
  4052a8:	inc    esp
  4052a9:	fisttp QWORD PTR [edx-0x7e68931]
  4052af:	sahf   
  4052b0:	in     eax,dx
  4052b1:	dec    ebp
  4052b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052b3:	daa    
  4052b4:	fild   QWORD PTR [ebp+0xc7bdf51]
  4052ba:	mov    bl,0x7f
  4052bc:	or     eax,0x4a87d20a
  4052c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052c2:	add    eax,0x1c6252c1
  4052c7:	fld    DWORD PTR [edi-0x22]
  4052ca:	stos   DWORD PTR es:[edi],eax
  4052cb:	sub    bh,ah
  4052cd:	dec    ebp
  4052ce:	call   edi
  4052d0:	jle    0x4052ff
  4052d2:	dec    esi
  4052d3:	or     DWORD PTR [ebp+0x71],edi
  4052d6:	ins    DWORD PTR es:[edi],dx
  4052d7:	sub    BYTE PTR [eax-0x29],0x13
  4052db:	fidiv  WORD PTR [esi*4+0x2b85d56]
  4052e2:	cmp    edi,0x2f
  4052e5:	call   FWORD PTR ss:[edi]
  4052e8:	sete   BYTE PTR [edi+ebx*8+0x32]
  4052ed:	adc    esi,DWORD PTR [edi+0x714964af]
  4052f3:	jmp    0x405317
  4052f5:	and    eax,0xa0fc1dbe
  4052fa:	aas    
  4052fb:	push   0x238c3d03
  405300:	jge    0x405351
  405302:	scas   eax,DWORD PTR es:[edi]
  405303:	dec    eax
  405304:	inc    ecx
  405305:	push   ds
  405306:	in     al,dx
  405307:	sbb    BYTE PTR [ecx+0xb9871d3],dl
  40530d:	dec    ecx
  40530e:	into   
  40530f:	mov    bh,0x8f
  405311:	enter  0xa814,0x89
  405315:	(bad)  
  405316:	mov    ch,0xb0
  405318:	enter  0xb9a6,0x38
  40531c:	sub    eax,0xfaac4f69
  405321:	ret    
  405322:	sub    eax,DWORD PTR [edi]
  405324:	xchg   BYTE PTR [edx+0x1e],al
  405327:	scas   eax,DWORD PTR es:[edi]
  405328:	lods   al,BYTE PTR ds:[esi]
  405329:	pop    es
  40532a:	jge    0x405346
  40532c:	push   eax
  40532d:	push   DWORD PTR [ebp-0x8]
  405330:	lea    eax,[ebp-0x78]
  405333:	push   eax
  405334:	push   DWORD PTR [ebp-0xc]
  405337:	push   DWORD PTR [ebp-0x14]
  40533a:	jmp    0x4054b3
  40533f:	loop   0x40534f
  405341:	cli    
  405342:	cs cli 
  405344:	cli    
  405345:	cli    
  405346:	ret    0x10db
  405349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40534a:	push   esp
  40534b:	cli    
  40534c:	add    ah,BYTE PTR ss:[eax+0x7e7e7616]
  405353:	fidivr DWORD PTR [edi+0x7e]
  405356:	jle    0x405350
  405358:	mov    DWORD PTR [ebp+0x45e4dcee],esi
  40535e:	sub    ecx,DWORD PTR [eax]
  405360:	and    ch,BYTE PTR [ecx+edx*1+0x4d]
  405364:	shl    DWORD PTR [ecx],0xcf
  405367:	iret   
  405368:	inc    DWORD PTR [esi]
  40536a:	add    eax,0xf4834de7
  40536f:	mov    dh,0x6b
  405371:	imul   eax,esp,0xffffffd6
  405374:	lea    edi,[edx-0x5237a546]
  40537a:	dec    esi
  40537b:	dec    ebp
  40537c:	add    al,BYTE PTR [esi+0x5e49e037]
  405382:	leave  
  405383:	retf   0x99bc
  405386:	mov    bh,0x3a
  405388:	pop    edi
  405389:	fst    st(1)
  40538b:	push   0xddc5b6ee
  405390:	mov    eax,ds:0x1e487e35
  405395:	and    al,bl
  405397:	clc    
  405398:	repnz mov edx,0xc0281fba
  40539e:	jge    0x4053ad
  4053a0:	inc    esi
  4053a1:	dec    esp
  4053a2:	(bad)  
  4053a3:	fld    QWORD PTR [edi+edi*2-0x29]
  4053a7:	std    
  4053a8:	xchg   DWORD PTR ds:0x7ae46590,edx
  4053ae:	xchg   esp,eax
  4053af:	je     0x40534c
  4053b1:	cmc    
  4053b2:	adc    al,0xf8
  4053b4:	push   esp
  4053b5:	pushf  
  4053b6:	dec    esi
  4053b7:	es (bad) 
  4053b9:	add    DWORD PTR [edx],ebx
  4053bb:	pop    ebx
  4053bc:	fnsave [eax-0x55]
  4053bf:	cmp    ebx,DWORD PTR [eax+0x4e]
  4053c2:	fbstp  TBYTE PTR [eax+0x2e]
  4053c5:	sahf   
  4053c6:	mov    al,ds:0xf6f646a0
  4053cb:	xor    eax,0x94952dad
  4053d0:	lahf   
  4053d1:	mov    al,ds:0x551c24b1
  4053d6:	jmp    0xca971186
  4053db:	mov    ds:0xa5f8bffe,al
  4053e0:	and    BYTE PTR [edi],al
  4053e2:	mov    BYTE PTR [ebp+0x5f],ah
  4053e5:	or     eax,0xd52cf987
  4053ea:	jmp    0x966d:0xdfa3d7de
  4053f1:	mov    dl,0x40
  4053f3:	add    al,0xb3
  4053f5:	sub    dh,0x5
  4053f8:	add    eax,0xb992757e
  4053fd:	pop    esp
  4053fe:	dec    edx
  4053ff:	mov    esi,0xa21d1cb2
  405404:	add    BYTE PTR [edx],al
  405406:	sbb    ebp,ebx
  405408:	repz cdq 
  40540a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40540b:	data16 in al,dx
  40540d:	aaa    
  40540e:	mov    ch,0x9f
  405410:	shl    DWORD PTR [edx+0x17cee95b],1
  405416:	jcxz   0x4053d1
  405419:	lods   al,BYTE PTR ds:[esi]
  40541a:	cmp    dh,BYTE PTR [esi+0x3ad7491]
  405420:	in     al,dx
  405421:	ror    dl,0xe4
  405424:	mov    esi,0x59913ea5
  405429:	sub    al,0xe9
  40542b:	or     al,0x95
  40542d:	call   0xc60319cf
  405432:	scas   al,BYTE PTR es:[edi]
  405433:	dec    esp
  405434:	add    cl,bl
  405436:	dec    edi
  405438:	mov    cl,0x80
  40543a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40543b:	inc    edi
  40543c:	aam    0x9f
  40543e:	sbb    BYTE PTR [edi-0xd],dh
  405441:	stc    
  405442:	std    
  405443:	xor    BYTE PTR [edx-0xeea9a3],ch
  405449:	cmp    eax,0x4e606c89
  40544e:	andps  xmm7,XMMWORD PTR ds:0xdf974044
  405455:	and    eax,DWORD PTR [ecx+0x1c]
  405458:	or     dl,BYTE PTR [edx+0x4]
  40545b:	or     BYTE PTR [eax-0x2bcb8ee8],ah
  405461:	int    0xff
  405463:	clc    
  405464:	(bad)  
  405465:	mov    DWORD PTR [esp+esi*4+0x4a],ecx
  405469:	dec    ebx
  40546a:	cli    
  40546b:	popf   
  40546c:	add    ah,al
  40546e:	jnp    0x405479
  405470:	sahf   
  405471:	loopne 0x4054da
  405473:	out    dx,eax
  405474:	push   ebp
  405475:	xbegin 0x98e5fc89
  40547b:	fwait
  40547c:	bound  esp,QWORD PTR [edx+ebx*2+0x7d]
  405480:	push   0xe064d4ba
  405485:	pop    esi
  405486:	add    eax,0xeca17cba
  40548b:	(bad)  
  40548c:	mov    ds:0x8857bc80,al
  405491:	ins    DWORD PTR es:[edi],dx
  405492:	or     esi,DWORD PTR [eax]
  405494:	pop    ebx
  405495:	push   0xed6c99b3
  40549a:	inc    esp
  40549b:	xchg   edi,eax
  40549c:	inc    ebx
  40549d:	xor    BYTE PTR [esp+edi*2-0x4e746e94],ch
  4054a4:	pop    ss
  4054a5:	cmc    
  4054a6:	push   esi
  4054a7:	push   esi
  4054a8:	test   al,0x46
  4054aa:	loop   0x405479
  4054ac:	push   DWORD PTR [ebp+0x518bb47d]
  4054b2:	bnd call 0x409607
  4054b8:	test   eax,eax
  4054ba:	je     0x4054e5
  4054c0:	lea    eax,[ebp-0x78]
  4054c3:	push   eax
  4054c4:	mov    eax,DWORD PTR [ebp-0x14]
  4054c7:	xor    eax,esi
  4054c9:	add    eax,edi
  4054cb:	push   eax
  4054cc:	mov    eax,DWORD PTR [ebp-0x10]
  4054cf:	add    eax,0xee
  4054d4:	push   eax
  4054d5:	mov    eax,DWORD PTR [ebp-0x10]
  4054d8:	mov    eax,DWORD PTR [eax+0x198]
  4054de:	push   DWORD PTR [eax]
  4054e0:	call   0x40ae4d
  4054e5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4054e8:	xor    ecx,esi
  4054ea:	mov    eax,0xffcd8d61
  4054ef:	sub    eax,ecx
  4054f1:	sub    eax,DWORD PTR [ebp-0x8]
  4054f4:	mov    ecx,DWORD PTR [ebp-0x30]
  4054f7:	add    ecx,eax
  4054f9:	mov    eax,DWORD PTR [ebp-0x8]
  4054fc:	jmp    0x405675
  405501:	lahf   
  405502:	(bad)  
  405503:	icebp  
  405504:	shl    DWORD PTR [ecx-0x50bea01f],1
  40550a:	icebp  
  40550b:	add    DWORD PTR [edi+0x4c],0xffffffc9
  40550f:	jno    0x40556a
  405511:	bnd ja 0x405592
  405514:	jle    0x4054f0
  405516:	jg     0x405596
  405518:	jle    0x40558b
  40551a:	pop    ecx
  40551b:	inc    eax
  40551c:	push   esi
  40551d:	or     DWORD PTR [edi+0x3d],edx
  405520:	push   es
  405521:	lds    edi,FWORD PTR [edx]
  405523:	out    dx,al
  405524:	imul   edi,DWORD PTR [eax+0x7],0xe2e5831d
  40552b:	je     0x4054d1
  40552d:	push   0xffffffa0
  40552f:	push   edx
  405530:	pop    esp
  405531:	dec    BYTE PTR [ecx]
  405533:	inc    edi
  405534:	pop    ds
  405535:	xlat   BYTE PTR ds:[ebx]
  405536:	push   esi
  405537:	sbb    eax,0xf0e0cc31
  40553c:	jo     0x405522
  40553e:	ret    
  40553f:	icebp  
  405540:	xlat   BYTE PTR ds:[ebx]
  405541:	mov    ecx,esi
  405543:	cmp    edi,edi
  405545:	aad    0x12
  405547:	cmp    edi,ecx
  405549:	sbb    al,0x13
  40554b:	add    al,0xf9
  40554d:	dec    esi
  40554e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40554f:	(bad)  
  405550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405551:	iret   
  405552:	mov    edx,0x2d7f10c5
  405557:	sar    BYTE PTR [ecx+0x65c41a0b],cl
  40555d:	retf   
  40555e:	int    0x49
  405560:	push   0x7
  405562:	xor    DWORD PTR [eax-0x4d06cf2c],esi
  405568:	std    
  405569:	cdq    
  40556a:	mov    dh,0xfe
  40556c:	add    cl,ah
  40556e:	stc    
  40556f:	cdq    
  405570:	sti    
  405571:	fcomp  DWORD PTR [edi-0x53]
  405574:	ins    BYTE PTR es:[edi],dx
  405575:	call   0x4d7e:0xc99b784
  40557c:	rol    BYTE PTR [eax-0x340fa6d8],cl
  405582:	ds ds loop 0x4055c8
  405586:	in     al,0xe0
  405588:	idiv   DWORD PTR [eax+0x4b]
  40558b:	add    DWORD PTR ds:0xadcae813,ebx
  405591:	call   0x84ae:0x68e15927
  405598:	sub    DWORD PTR [eax-0x1],edi
  40559b:	lds    edx,FWORD PTR [esi+0xc21ca6d]
  4055a1:	inc    ecx
  4055a2:	sbb    al,0xae
  4055a4:	pop    edx
  4055a5:	jae    0x405585
  4055a7:	jmp    0x721b:0x588da533
  4055ae:	(bad)  
  4055af:	fcomp  DWORD PTR ds:0x2dddc452
  4055b5:	ds repnz fs pop esp
  4055b9:	xchg   ebx,eax
  4055ba:	into   
  4055bb:	int3   
  4055bc:	add    eax,0xc6b33edf
  4055c1:	jle    0x4055fe
  4055c3:	leave  
  4055c4:	test   BYTE PTR [ecx],bh
  4055c6:	or     BYTE PTR [ebx+0x64],dh
  4055c9:	into   
  4055ca:	and    BYTE PTR [ecx-0x66311103],0x2a
  4055d1:	xor    ch,0x1b
  4055d4:	inc    eax
  4055d5:	push   ecx
  4055d6:	aad    0x80
  4055d8:	cmc    
  4055d9:	pop    edi
  4055da:	(bad)  
  4055db:	ss inc edx
  4055dd:	xor    ch,BYTE PTR ds:0x47fa8ae5
  4055e3:	cmp    BYTE PTR [esi],0xcd
  4055e6:	xchg   edi,eax
  4055e7:	adc    bh,al
  4055e9:	repnz dec eax
  4055eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055ec:	div    BYTE PTR [eax+ebp*4+0x74f7fd01]
  4055f3:	xor    edi,DWORD PTR [edi]
  4055f5:	mov    edx,0x14e79b2f
  4055fa:	add    esi,DWORD PTR [esi+0x29]
  4055fd:	mov    esi,0x6f325c86
  405602:	adc    BYTE PTR [eax-0x1aa1ac5a],cl
  405608:	pop    ds
  405609:	hlt    
  40560a:	jmp    0xac5cd7d5
  40560f:	adc    ebx,ecx
  405611:	int    0x53
  405613:	fs fs int 0x5f
  405617:	push   ss
  405618:	call   0x5b4:0x1c9cfccb
  40561f:	mov    eax,0x4091c4e1
  405624:	or     DWORD PTR [eax+edi*8],esp
  405627:	pop    es
  405628:	inc    esi
  405629:	daa    
  40562a:	ret    0xfda7
  40562d:	out    0xe1,al
  40562f:	mov    al,ds:0xb8c01c92
  405634:	loopne 0x405643
  405636:	adc    eax,0xbe7af8d9
  40563b:	adc    al,0xf7
  40563d:	ins    DWORD PTR es:[edi],dx
  40563e:	inc    ebp
  40563f:	xor    BYTE PTR [edi+0x5f57179f],0x13
  405646:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405647:	push   edi
  405648:	(bad)  
  405649:	push   edi
  40564a:	repz cmp dh,BYTE PTR [edi+0x30]
  40564e:	ja     0x4055f3
  405650:	retf   0xe3c7
  405653:	shl    ebx,0xa3
  405656:	out    0x2e,al
  405658:	or     DWORD PTR [ebx-0x1b9ba514],esp
  40565e:	retf   
  40565f:	mov    esi,0x641cf9c
  405664:	or     eax,0xcfee4311
  405669:	inc    ebp
  40566a:	pop    ds
  40566b:	sbb    DWORD PTR [eax+ebx*8-0x543565be],ebx
  405672:	add    eax,0x4889750e
  405677:	add    DWORD PTR [edx+0x4d8bff45],ecx
  40567d:	clc    
  40567e:	xor    al,0x4a
  405680:	sub    al,0x34
  405682:	mov    BYTE PTR [ecx],al
  405684:	lea    eax,[ebp-0x8]
  405687:	inc    BYTE PTR [eax]
  405689:	inc    eax
  40568a:	push   eax
  40568b:	pop    ecx
  40568c:	dec    ecx
  40568d:	xchg   ecx,edx
  40568f:	jmp    0x405808
  405694:	mov    gs,WORD PTR [edi+0x79]
  405697:	in     eax,0x79
  405699:	stc    
  40569a:	and    BYTE PTR [ebp-0x3],0xf5
  40569e:	cmp    esp,eax
  4056a0:	dec    dl
  4056a2:	or     al,0x92
  4056a4:	pop    esi
  4056a5:	je     0x405725
  4056a7:	jle    0x405683
  4056a9:	jg     0x405729
  4056ab:	jle    0x405697
  4056ad:	loop   0x40564c
  4056af:	leave  
  4056b0:	dec    esp
  4056b1:	cmp    DWORD PTR [ecx],0x1309ee5d
  4056b7:	stc    
  4056b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056b9:	fild   WORD PTR [edx+0x7b]
  4056bc:	sub    eax,0xe636c97f
  4056c1:	dec    edx
  4056c2:	xor    eax,0x52b3816f
  4056c7:	add    al,0x23
  4056c9:	xchg   ebp,eax
  4056ca:	data16 sub ch,BYTE PTR [edx-0x6d]
  4056ce:	mov    WORD PTR [eax+0x4771507f],?
  4056d4:	mov    al,ds:0x97753281
  4056d9:	xor    al,0x9c
  4056db:	or     bh,BYTE PTR [edx-0x73]
  4056de:	ins    DWORD PTR es:[edi],dx
  4056df:	sbb    al,0x45
  4056e1:	and    al,0xf6
  4056e3:	jae    0x405678
  4056e5:	es jne 0x405686
  4056e8:	cld    
  4056e9:	mov    al,ds:0x106fa9b4
  4056ee:	sar    DWORD PTR [eax-0x642ebf86],1
  4056f4:	cmp    eax,0x5ff1cade
  4056f9:	sub    esp,DWORD PTR [ebx]
  4056fb:	adc    eax,0x4be2cf21
  405700:	jecxz  0x40568e
  405702:	cmp    BYTE PTR [eax+0x17],0x48
  405706:	ret    
  405707:	stos   BYTE PTR es:[edi],al
  405708:	sbb    eax,0x1a4a281d
  40570d:	sbb    BYTE PTR [ebp+0x23],dl
  405710:	jns    0x4056fd
  405712:	mov    ebx,0xe730cb2c
  405717:	and    BYTE PTR [esi+0x1e],bh
  40571a:	ds cdq 
  40571c:	out    0xef,al
  40571e:	push   cs
  40571f:	xlat   BYTE PTR ds:[ebx]
  405720:	push   esp
  405721:	push   edx
  405722:	test   eax,0x82c39b84
  405727:	into   
  405728:	and    dh,BYTE PTR [ecx-0x3a1399ac]
  40572e:	aas    
  40572f:	mov    cl,0xb8
  405731:	out    dx,eax
  405732:	adc    eax,0x4f6f967b
  405737:	sbb    eax,0x9ed5035f
  40573c:	test   BYTE PTR [esi-0x21],bh
  40573f:	mov    dh,0x92
  405741:	cmp    esp,DWORD PTR [ecx+0x4fe6a0b1]
  405747:	mov    esi,0x7613c96f
  40574c:	jmp    0x143e:0xa62a2107
  405753:	(bad)  
  405754:	pop    ds
  405755:	out    0x9a,al
  405757:	and    DWORD PTR [edx+0x8],esi
  40575a:	push   0xa6e50521
  40575f:	shr    BYTE PTR [edi+ebp*8],1
  405762:	or     BYTE PTR [esi],ah
  405764:	xchg   edx,eax
  405765:	mov    ch,0xf8
  405767:	sub    al,0xc6
  40576a:	xchg   BYTE PTR [ecx],al
  40576c:	sbb    al,0xc9
  40576e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40576f:	sbb    BYTE PTR [edx],al
  405771:	push   0xd
  405773:	jbe    0x40577d
  405775:	mov    al,0x48
  405777:	shr    ch,1
  405779:	addps  xmm2,XMMWORD PTR [edx-0x34]
  40577d:	dec    edi
  40577e:	ins    DWORD PTR es:[edi],dx
  40577f:	cwde   
  405780:	loopne 0x405734
  405782:	inc    ebx
  405783:	xchg   esp,eax
  405784:	aaa    
  405785:	jp     0x40570a
  405787:	sbb    ecx,ebp
  405789:	hlt    
  40578a:	pop    edx
  40578b:	xor    ch,dl
  40578d:	mov    ebx,esi
  40578f:	or     cl,BYTE PTR [edi-0x48]
  405792:	jns    0x40580d
  405794:	lods   al,BYTE PTR ds:[esi]
  405795:	mov    dh,0x74
  405797:	pop    esi
  405798:	add    al,0x6a
  40579a:	enter  0x5d48,0x18
  40579e:	fsubr  st(3),st
  4057a0:	pop    ds
  4057a1:	dec    esp
  4057a2:	out    0x44,eax
  4057a4:	ins    DWORD PTR es:[edi],dx
  4057a5:	in     al,0x55
  4057a7:	in     eax,dx
  4057a8:	iret   
  4057a9:	aam    0x48
  4057ab:	mov    dh,0xd8
  4057ad:	push   esp
  4057ae:	lods   al,BYTE PTR ds:[esi]
  4057af:	loopne 0x405825
  4057b1:	pop    ecx
  4057b2:	loope  0x405825
  4057b4:	idiv   BYTE PTR [edi+ebx*2-0x62]
  4057b8:	push   eax
  4057b9:	cwde   
  4057ba:	sti    
  4057bb:	mov    ds:0x372ab2a2,eax
  4057c0:	arpl   WORD PTR [esi],bx
  4057c2:	rcr    DWORD PTR [edx],1
  4057c4:	(bad)  
  4057c5:	or     ecx,DWORD PTR [ecx+0x128c38d3]
  4057cb:	aam    0xa
  4057cd:	out    0x53,al
  4057cf:	mov    ds:0xfc49a80d,eax
  4057d4:	push   cs
  4057d5:	repz scas eax,DWORD PTR es:[edi]
  4057d7:	test   DWORD PTR [eax],ebp
  4057d9:	test   eax,0xb7399178
  4057de:	stos   DWORD PTR es:[edi],eax
  4057df:	pop    ecx
  4057e0:	mov    esp,0x57d4b55f
  4057e5:	mov    eax,0x4b28ee35
  4057ea:	imul   ecx,DWORD PTR [edx],0x69c78d12
  4057f0:	aaa    
  4057f1:	push   cs
  4057f2:	mov    ah,0xeb
  4057f4:	push   ebp
  4057f5:	das    
  4057f6:	mov    ds:0xb08f1afc,eax
  4057fb:	sbb    esi,DWORD PTR [esi]
  4057fd:	mov    al,0x58
  4057ff:	push   ebp
  405800:	pop    ebx
  405801:	cld    
  405802:	mov    esi,0x9af32093
  405807:	dec    edi
  405808:	dec    BYTE PTR [edx]
  40580a:	push   DWORD PTR [ebp-0x10]
  40580d:	mov    eax,ds:0x40d68c
  405812:	mov    eax,DWORD PTR [eax]
  405814:	push   DWORD PTR [eax]
  405816:	lea    eax,ds:0x40d6a8
  40581c:	push   DWORD PTR [eax]
  40581e:	lea    eax,ds:0x40d454
  405824:	push   DWORD PTR [eax]
  405826:	lea    eax,ds:0x40d688
  40582c:	push   DWORD PTR [eax]
  40582e:	lea    eax,ds:0x40d784
  405834:	push   DWORD PTR [eax]
  405836:	xchg   ebx,edx
  405838:	inc    ebx
  405839:	inc    ebx
  40583a:	sub    ebx,0x3
  40583d:	push   ebx
  40583e:	pop    eax
  40583f:	call   DWORD PTR [eax+0x1]
  405842:	mov    eax,DWORD PTR [ebp-0x20]
  405845:	jmp    0x4059be
  40584a:	mov    WORD PTR [edx+ebx*8+0x33],es
  40584e:	fidiv  DWORD PTR [ecx+0x8615985]
  405854:	or     al,0x32
  405856:	stos   BYTE PTR es:[edi],al
  405857:	xor    BYTE PTR [ecx+0x53],al
  40585a:	cmp    cl,BYTE PTR [edx]
  40585c:	jle    0x4058dc
  40585e:	fidivr DWORD PTR [edi+0x7e]
  405861:	jle    0x4058a7
  405863:	ja     0x4058d7
  405865:	cmp    DWORD PTR [ecx-0x1da99201],edx
  40586b:	pusha  
  40586c:	ret    0x7ba7
  40586f:	sub    edi,DWORD PTR [edx+eax*4-0x79367dbc]
  405876:	ins    DWORD PTR es:[edi],dx
  405877:	imul   edx,edx,0x6a9b0fc6
  40587d:	les    ecx,FWORD PTR [esi-0x4c2a3fc0]
  405883:	xchg   edi,eax
  405884:	std    
  405885:	loopne 0x40582b
  405887:	or     al,0x8
  405889:	shl    DWORD PTR [eax],cl
  40588b:	push   ebp
  40588c:	xlat   BYTE PTR ds:[ebx]
  40588d:	adc    al,0x66
  40588f:	call   0xcf54:0x97bef7fa
  405896:	scas   al,BYTE PTR es:[edi]
  405897:	call   FWORD PTR [edi+esi*8]
  40589a:	jg     0x4058bf
  40589c:	imul   ecx,DWORD PTR [di],0x7e
  4058a0:	call   0xe635d645
  4058a5:	add    eax,0x74d5e981
  4058aa:	xor    esp,DWORD PTR [edx-0x2]
  4058ad:	repnz xchg edi,eax
  4058af:	loopne 0x405831
  4058b1:	adc    BYTE PTR [edi],ch
  4058b3:	and    BYTE PTR [edx+ebx*1-0x59c48391],al
  4058ba:	int    0x6f
  4058bc:	lock pop edx
  4058be:	mov    eax,ds:0x8c8beee5
  4058c3:	or     ecx,DWORD PTR [edx+eiz*2]
  4058c6:	repnz push ds
  4058c8:	mov    ch,0x4
  4058ca:	add    cl,0xf8
  4058cd:	sub    BYTE PTR ds:[ecx+0x52494f85],bh
  4058d4:	xor    al,0xea
  4058d6:	js     0x40594f
  4058d8:	push   es
  4058d9:	aad    0x49
  4058db:	xlat   BYTE PTR ds:[ebx]
  4058dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058dd:	xor    esp,DWORD PTR [bp+di-0x4a]
  4058e1:	sbb    ebx,0xdec46573
  4058e7:	aam    0x21
  4058e9:	pop    edx
  4058ea:	dec    edx
  4058eb:	ins    DWORD PTR es:[edi],dx
  4058ec:	inc    edx
  4058ed:	adc    DWORD PTR [ebp+0xb],esp
  4058f0:	ficomp DWORD PTR [eax]
  4058f2:	fidiv  DWORD PTR ds:0x8b444974
  4058f8:	add    BYTE PTR [ecx-0x5],bl
  4058fb:	lea    edx,[ebx-0x24]
  4058fe:	ret    
  4058ff:	inc    eax
  405900:	jg     0x405964
  405902:	jne    0x40595f
  405904:	test   BYTE PTR [ebx-0x57],dh
  405907:	dec    ebx
  405908:	mov    ah,0x17
  40590a:	inc    esp
  40590b:	fwait
  40590c:	cmc    
  40590d:	ret    
  40590e:	mov    fs,WORD PTR [edx]
  405910:	dec    ebp
  405911:	cmp    BYTE PTR [edi-0x46],bh
  405914:	push   0xffffffc8
  405916:	je     0x40590a
  405918:	mov    DWORD PTR [edi-0x34df034],esi
  40591e:	(bad)  
  40591f:	sbb    ch,dl
  405921:	pop    ss
  405922:	imul   ebp,DWORD PTR [ecx],0xffffffa3
  405925:	fidiv  WORD PTR [ebx+ebp*4-0x7d2c4e2d]
  40592c:	fsubr  QWORD PTR [ecx+0x1e10be6b]
  405932:	pop    esi
  405933:	mov    ?,WORD PTR [eax-0x7e]
  405936:	mov    ecx,0x5729b77e
  40593b:	jns    0x40593f
  40593d:	adc    DWORD PTR [esi+eiz*8],ebp
  405940:	jae    0x405982
  405942:	jns    0x405904
  405944:	dec    edi
  405945:	pushf  
  405946:	pop    ss
  405947:	xchg   eax,edi
  405949:	leave  
  40594a:	dec    ebp
  40594b:	es push ds
  40594d:	inc    ebx
  40594e:	adc    al,0xde
  405950:	xchg   ebx,eax
  405951:	jle    0x4058de
  405953:	fcomp  DWORD PTR [edi+0x44]
  405956:	xchg   ebx,eax
  405957:	or     bh,0x79
  40595a:	(bad)  
  40595b:	pop    esp
  40595c:	mov    dl,0xb3
  40595e:	sub    ebx,esp
  405960:	scas   eax,DWORD PTR es:[edi]
  405961:	jmp    0x616d:0x8ada297f
  405968:	xlat   BYTE PTR ds:[ebx]
  405969:	ja     0x4059df
  40596b:	daa    
  40596c:	mov    edx,0xaeb86435
  405971:	repz popf 
  405973:	dec    ebp
  405974:	dec    edx
  405975:	mov    ecx,0x239de089
  40597a:	cmp    dl,BYTE PTR ds:0xadb85cf9
  405980:	jae    0x405909
  405982:	inc    ecx
  405983:	(bad)  
  405984:	pop    esi
  405985:	or     eax,0xa4ca6bd9
  40598a:	js     0x405954
  40598c:	mov    edi,cs
  40598e:	in     eax,dx
  40598f:	jae    0x40597b
  405991:	scas   eax,DWORD PTR es:[edi]
  405992:	xlat   BYTE PTR ds:[ebx]
  405993:	dec    eax
  405994:	xchg   ebp,eax
  405995:	sbb    al,0x30
  405997:	popf   
  405998:	idiv   DWORD PTR ds:0xd58608ca
  40599e:	mov    cl,0xad
  4059a0:	mov    ecx,DWORD PTR [edx+edx*2+0x4392a6d3]
  4059a7:	retf   0x77c
  4059aa:	push   edi
  4059ab:	imul   esp,esp,0xc1b9812b
  4059b1:	inc    edx
  4059b2:	cmp    eax,0x802eb2ea
  4059b7:	xchg   al,dh
  4059b9:	(bad)  
  4059ba:	mov    esp,0x8b7180df
  4059bf:	or     eax,0x40d64c
  4059c4:	add    DWORD PTR [eax],ecx
  4059c6:	pop    edi
  4059c7:	pop    esi
  4059c8:	pop    ebx
  4059c9:	leave  
  4059ca:	ret    
  4059cb:	push   ebp
  4059cc:	mov    ebp,esp
  4059ce:	sub    esp,0x44
  4059d1:	push   edi
  4059d2:	sub    eax,DWORD PTR ds:0x4245b6
  4059d8:	mov    eax,DWORD PTR [ebp+0xc]
  4059db:	or     DWORD PTR ds:0x417e4d,edx
  4059e1:	mov    DWORD PTR [ebp-0x10],eax
  4059e4:	mov    DWORD PTR ds:0x417e55,0x17
  4059ee:	cmp    DWORD PTR ds:0x417e55,0x0
  4059f5:	je     0x405a59
  4059fb:	cmp    DWORD PTR ds:0x417e55,0x6
  405a02:	jne    0x405a2b
  405a08:	push   DWORD PTR [ebp-0x24]
  405a0b:	push   DWORD PTR [ebp-0x28]
  405a0e:	push   0x417e45
  405a13:	push   0x80ed
  405a18:	push   0x67be
  405a1d:	push   0x6b4c
  405a22:	push   DWORD PTR [ebp-0x20]
  405a25:	call   DWORD PTR ds:0x40d1cc
  405a2b:	cmp    DWORD PTR ds:0x417e55,0x7
  405a32:	jne    0x405a47
  405a38:	xor    ecx,ecx
  405a3a:	or     ecx,DWORD PTR ds:0x417e55
  405a40:	dec    ecx
  405a41:	mov    DWORD PTR ds:0x417e55,ecx
  405a47:	mov    ecx,DWORD PTR ds:0x417e55
  405a4d:	dec    ecx
  405a4e:	mov    DWORD PTR ds:0x417e55,ecx
  405a54:	jmp    0x4059ee
  405a59:	mov    eax,DWORD PTR [ebp+0x8]
  405a5c:	or     DWORD PTR ds:0x417e41,0x3fc5
  405a66:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  405a6d:	xor    ecx,ecx
  405a6f:	add    ecx,DWORD PTR ds:0x4245b2
  405a75:	and    DWORD PTR ds:0x41abd6,ecx
  405a7b:	mov    DWORD PTR [ebp-0x20],0xf89c853b
  405a82:	mov    edx,DWORD PTR [ebp+0x8]
  405a85:	mov    DWORD PTR [ebp-0x40],eax
  405a88:	mov    eax,0x7510859
  405a8d:	xor    edx,eax
  405a8f:	adc    ecx,ecx
  405a91:	mov    ecx,0x32729f
  405a96:	movzx  edi,WORD PTR ds:0x41510d
  405a9d:	sbb    DWORD PTR ds:0x4245be,edi
  405aa3:	add    edx,ecx
  405aa5:	add    DWORD PTR ds:0x412354,0x1575
  405aaf:	mov    DWORD PTR [ebp-0x8],edx
  405ab2:	jmp    0x405c04
  405ab7:	(bad)  [edi+ebp*4-0x19]
  405abb:	mov    eax,ds:0x80785be5
  405ac0:	cmp    DWORD PTR ds:[edi],edx
  405ac3:	mov    al,BYTE PTR [edi]
  405ac5:	lahf   
  405ac6:	or     eax,0x7e7e0b86
  405acb:	and    edi,DWORD PTR [edi+0x7e]
  405ace:	jle    0x405aad
  405ad0:	fisttp WORD PTR [ebp-0x46]
  405ad3:	arpl   WORD PTR [ebp+0x42],sp
  405ad6:	and    BYTE PTR [ecx+ebx*2],0xfa
  405ada:	les    ebp,FWORD PTR [ebp-0x71]
  405add:	sbb    eax,0x1a87fbb
  405ae2:	ins    DWORD PTR es:[edi],dx
  405ae3:	or     al,cl
  405ae5:	call   0x6f01:0x63802917
  405aec:	mov    DWORD PTR [edx+esi*8],edx
  405aef:	ret    
  405af0:	cdq    
  405af1:	jb     0x405b4c
  405af3:	cmp    DWORD PTR [ebx],eax
  405af5:	sbb    DWORD PTR [edx+ebp*1],esi
  405af8:	cmp    eax,0x831051be
  405afd:	push   0x6da9130b
  405b02:	stos   BYTE PTR es:[edi],al
  405b03:	xor    al,0xe3
  405b05:	lahf   
  405b06:	test   BYTE PTR [esi+0x5ab3136b],cl
  405b0c:	std    
  405b0d:	fldenv [edx]
  405b10:	arpl   sp,ax
  405b12:	lds    edi,FWORD PTR [ebx+0x3bd66eef]
  405b18:	dec    esi
  405b19:	js     0x405b1e
  405b1b:	fdiv   QWORD PTR [esi]
  405b1d:	jl     0x405b0a
  405b1f:	cdq    
  405b20:	push   esi
  405b21:	arpl   WORD PTR [ecx],dx
  405b23:	xor    BYTE PTR [esi+ebx*8],0x10
  405b27:	out    0xe1,al
  405b29:	mov    ah,0x3b
  405b2b:	inc    ecx
  405b2c:	dec    edi
  405b2d:	(bad)  
  405b2f:	sahf   
  405b30:	mov    edx,0xaf44d7f7
  405b35:	ret    
  405b36:	sbb    bl,BYTE PTR [ecx+0x5f]
  405b39:	mov    bl,0x7e
  405b3b:	test   DWORD PTR [eax],ebx
  405b3d:	sbb    esp,esp
  405b3f:	push   esp
  405b40:	or     dh,bh
  405b42:	(bad)  
  405b43:	rcl    BYTE PTR [esi+edi*4-0x54],0x3e
  405b48:	enter  0x954,0x45
  405b4c:	add    eax,0x79806bf4
  405b51:	int    0xcd
  405b53:	push   cs
  405b54:	mov    WORD PTR [edx-0x5a],es
  405b57:	cmp    eax,0xea6b4c4d
  405b5c:	clc    
  405b5d:	dec    ebp
  405b5e:	adc    eax,0x236eabc
  405b63:	push   ecx
  405b64:	jge    0x405b23
  405b66:	and    BYTE PTR ds:0xec2f3146,cl
  405b6c:	inc    esp
  405b6d:	lock neg BYTE PTR [eax+edi*2+0xd]
  405b72:	sbb    edi,DWORD PTR [ecx+0x72]
  405b75:	push   ebp
  405b76:	xor    BYTE PTR [edi+0x5b],bl
  405b79:	adc    eax,0xebe5bed3
  405b7e:	test   DWORD PTR [edi+esi*1-0x30],edi
  405b82:	dec    edx
  405b83:	mov    WORD PTR [ebp-0x7711721a],ds
  405b89:	ja     0x405b1a
  405b8b:	imul   ebx,DWORD PTR [edx+0x34],0xffffff94
  405b8f:	je     0x405b17
  405b91:	mov    cl,cl
  405b93:	mov    DWORD PTR [ebp-0x4f],edi
  405b96:	jmp    0x6829:0xae5ca9af
  405b9d:	mov    bh,0x5c
  405b9f:	sbb    DWORD PTR [edi+0x4b94199c],0x3a
  405ba6:	inc    eax
  405ba7:	or     eax,0xf31c4621
  405bac:	xchg   BYTE PTR [esi-0x19],bh
  405baf:	dec    edx
  405bb0:	leave  
  405bb1:	cmp    BYTE PTR [ecx+0x7a9e222b],al
  405bb7:	shl    BYTE PTR [ebx],cl
  405bb9:	nop
  405bba:	sar    cl,cl
  405bbc:	add    esp,DWORD PTR [ebp+0x3f]
  405bbf:	push   0xffffff9a
  405bc1:	adc    esi,DWORD PTR [esi+0x5e061f6e]
  405bc7:	sbb    DWORD PTR [ebx+0x453c110a],ebx
  405bcd:	mov    eax,0xaea08e1
  405bd2:	fwait
  405bd3:	adc    ch,cl
  405bd5:	and    ah,BYTE PTR [edx-0x26]
  405bd8:	mov    al,ds:0xb28c0ed2
  405bdd:	sahf   
  405bde:	and    BYTE PTR [eax-0x62080155],ch
  405be4:	xchg   sp,ax
  405be6:	jle    0x405b90
  405be8:	push   esp
  405be9:	retf   0x40
  405bec:	dec    edx
  405bed:	repz mov ecx,0x4a97fe30
  405bf3:	and    al,0xea
  405bf5:	imul   ecx,DWORD PTR [edx+0xd],0x78fb8917
  405bfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bfd:	push   ecx
  405bfe:	push   edx
  405bff:	(bad)  
  405c00:	jle    0x405c31
  405c02:	int3   
  405c03:	jge    0x405b90
  405c05:	push   ebp
  405c06:	or     BYTE PTR [ecx+0x4245c625],al
  405c0c:	add    BYTE PTR [eax],al
  405c0e:	add    BYTE PTR [eax],al
  405c10:	add    cl,ch
  405c12:	sldt   WORD PTR [eax]
  405c15:	add    BYTE PTR [ebx],dh
  405c17:	dec    DWORD PTR [ebx]
  405c19:	cmp    eax,0x4245c6
  405c1e:	inc    edi
  405c1f:	mov    DWORD PTR ds:0x4245c6,edi
  405c25:	cmp    DWORD PTR ds:0x4245c6,0x11
  405c2c:	jae    0x405c53
  405c32:	cmp    DWORD PTR ds:0x4245c6,0x1a
  405c39:	jne    0x405c48
  405c3f:	push   DWORD PTR [ebp-0x1c]
  405c42:	call   DWORD PTR ds:0x40d29c
  405c48:	jmp    0x405c16
  405c4d:	xor    DWORD PTR ds:0x412358,ebx
  405c53:	xor    edx,eax
  405c55:	add    edx,ecx
  405c57:	jmp    0x405da9
  405c5c:	xchg   edi,eax
  405c5d:	(bad)  
  405c5e:	call   0xe86f:0x6bdabbc6
  405c65:	pop    ds
  405c66:	jb     0x405cc2
  405c68:	sbb    bh,0xd8
  405c6b:	mov    ecx,DWORD PTR [ebx+0x8]
  405c6e:	jle    0x405cee
  405c70:	and    edi,DWORD PTR [edi+0x7e]
  405c73:	jle    0x405c62
  405c75:	cli    
  405c76:	inc    edi
  405c77:	push   ds
  405c78:	out    dx,eax
  405c79:	jo     0x405cb2
  405c7b:	fild   QWORD PTR [esi-0x57159ff1]
  405c81:	enter  0xf51d,0x29
  405c85:	out    dx,al
  405c86:	std    
  405c87:	dec    ebx
  405c88:	clc    
  405c89:	fisttp WORD PTR [eax*8+0x5456dade]
  405c90:	xchg   esp,eax
  405c91:	xor    DWORD PTR [eax+0x6d],ecx
  405c94:	add    DWORD PTR [edi],ecx
  405c96:	or     bh,dl
  405c98:	cmp    esp,ebp
  405c9a:	mov    gs,WORD PTR [esp+edi*2-0xe]
  405c9e:	xchg   DWORD PTR [esi-0x17],ebx
  405ca1:	daa    
  405ca2:	mov    dl,0xd
  405ca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ca5:	xchg   esi,eax
  405ca6:	stos   DWORD PTR es:[edi],eax
  405ca7:	or     BYTE PTR [ebx-0x10],ch
  405caa:	call   0xbb109adf
  405caf:	pop    ecx
  405cb0:	pop    esp
  405cb1:	push   esp
  405cb2:	pop    ebp
  405cb3:	(bad)  
  405cb4:	shl    edi,cl
  405cb6:	outs   dx,BYTE PTR ds:[esi]
  405cb7:	jp     0x405c6b
  405cb9:	mov    edi,0xac29d409
  405cbe:	mov    al,ds:0x2e580d2d
  405cc3:	shl    BYTE PTR [ecx+edx*8-0x35dbb59b],0xfd
  405ccb:	cdq    
  405ccc:	ds loopne 0x405cb1
  405ccf:	int    0xe4
  405cd1:	fst    DWORD PTR [eax+0x3f3bef5b]
  405cd7:	std    
  405cd8:	bound  esp,QWORD PTR [ebp+0x5ac96214]
  405cde:	or     ebp,ecx
  405ce0:	lahf   
  405ce1:	xor    eax,0x4212f379
  405ce6:	sub    esp,esp
  405ce8:	push   ebx
  405ce9:	mov    esp,0xf8278323
  405cee:	js     0x405d59
  405cf0:	jmp    0x32ca:0xbee92c77
  405cf7:	fwait
  405cf8:	mov    fs,WORD PTR [edi-0x33bf08c6]
  405cfe:	inc    esp
  405cff:	imul   eax,DWORD PTR [esi-0x4b1767ce],0xa0e4b445
  405d09:	cmp    eax,0x106198ec
  405d0e:	inc    eax
  405d0f:	rcl    DWORD PTR [ebx],cl
  405d11:	sub    ecx,0x6ddfc7a6
  405d17:	repnz mov ebx,0x280b996f
  405d1d:	cmp    dh,bh
  405d1f:	mov    edi,0x16f30142
  405d24:	jmp    0x3da5:0x136ad6b7
  405d2b:	xchg   BYTE PTR [esi+eiz*1-0x1a],cl
  405d2f:	setns  bl
  405d32:	cld    
  405d33:	inc    eax
  405d34:	jo     0x405d52
  405d36:	sbb    al,0xec
  405d38:	and    BYTE PTR [eax],ch
  405d3a:	xor    ebp,DWORD PTR [ecx+0x23f5e886]
  405d40:	icebp  
  405d41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d42:	aas    
  405d43:	nop
  405d44:	mov    fs,WORD PTR [ecx-0x49]
  405d47:	push   edx
  405d48:	mov    bh,0x6
  405d4a:	add    ebp,ecx
  405d4c:	mov    esp,edx
  405d4e:	mov    ds:0xc93f4536,al
  405d53:	jb     0x405dca
  405d55:	xchg   edx,eax
  405d56:	out    dx,al
  405d57:	call   0xd523:0x804f0b7b
  405d5e:	jbe    0x405d46
  405d60:	stos   DWORD PTR es:[edi],eax
  405d61:	push   ecx
  405d62:	jo     0x405d64
  405d64:	inc    edx
  405d65:	push   esp
  405d66:	scas   eax,DWORD PTR es:[edi]
  405d67:	icebp  
  405d68:	mov    esi,0xa01826ee
  405d6d:	mov    ah,BYTE PTR [edx+ebx*4]
  405d70:	sbb    esi,esi
  405d72:	ror    ch,cl
  405d74:	lods   al,BYTE PTR ds:[esi]
  405d75:	xchg   BYTE PTR [esi+0x34],bl
  405d78:	bound  edx,QWORD PTR [edi-0x11]
  405d7b:	dec    edx
  405d7c:	in     al,dx
  405d7d:	push   edi
  405d7e:	ret    0xb423
  405d81:	mov    edi,0x32e08409
  405d86:	in     al,0xe6
  405d88:	and    eax,ebp
  405d8a:	lods   eax,DWORD PTR ds:[esi]
  405d8b:	retf   
  405d8c:	mov    cl,0xfd
  405d8e:	loopne 0x405d26
  405d90:	or     DWORD PTR [edx-0x7c4d1dfe],eax
  405d96:	mov    ebx,0x4dfc235d
  405d9b:	dec    eax
  405d9c:	mov    ebp,0x877ff283
  405da1:	mov    bh,0x4a
  405da3:	mov    ebx,0xc1b9cdbe
  405da8:	mov    al,ds:0x470c5589
  405dad:	jmp    0x405eff
  405db2:	or     eax,0xb8afae9b
  405db7:	mov    ebx,0x598db90d
  405dbc:	or     al,0x3
  405dbe:	inc    esi
  405dbf:	mov    ds:0xe7cbfbd,al
  405dc4:	jle    0x405e44
  405dc6:	and    edi,DWORD PTR [edi+0x7e]
  405dc9:	jle    0x405e27
  405dcb:	add    cl,BYTE PTR [ebp-0x4457d064]
  405dd1:	sub    ah,dh
  405dd3:	call   0xdd67:0x5f794ecd
  405dda:	adc    BYTE PTR [edi+0x21ba9e2b],0x74
  405de1:	out    dx,eax
  405de2:	data16 fidiv WORD PTR [ecx]
  405de5:	dec    esi
  405de6:	mov    esp,0x393a3ba8
  405deb:	mul    DWORD PTR [ecx]
  405ded:	xchg   edx,eax
  405dee:	sub    eax,0xc41dfbce
  405df3:	adc    al,0x9d
  405df5:	aam    0x40
  405df7:	mov    cl,0x9f
  405df9:	jle    0x405da8
  405dfb:	je     0x405da8
  405dfd:	rol    BYTE PTR ds:0x7a72df0d,0xa
  405e04:	test   BYTE PTR [edx+0x35],dh
  405e07:	mov    esi,0x89088bd2
  405e0c:	push   ds
  405e0d:	and    al,0x2
  405e0f:	lods   al,BYTE PTR ds:[esi]
  405e10:	fs ds pop ebx
  405e13:	cs cld 
  405e15:	sbb    eax,0x1ae38735
  405e1a:	outs   dx,DWORD PTR ds:[esi]
  405e1b:	outs   dx,BYTE PTR ds:[esi]
  405e1c:	xor    edx,eax
  405e1e:	lods   eax,DWORD PTR ds:[esi]
  405e1f:	cmp    al,0x9d
  405e21:	cli    
  405e22:	jecxz  0x405dee
  405e24:	cmp    BYTE PTR [ebp-0x5a],0x5d
  405e28:	sti    
  405e29:	pop    edx
  405e2a:	in     eax,0x82
  405e2c:	mov    bl,0x1b
  405e2e:	add    eax,0x7a6cb6d
  405e33:	popf   
  405e34:	add    BYTE PTR [ecx+0x171110c],ch
  405e3a:	lods   al,BYTE PTR ds:[esi]
  405e3b:	pop    edx
  405e3c:	xor    ah,BYTE PTR [ecx+0x7b1ab22a]
  405e42:	pop    esp
  405e43:	(bad)  
  405e44:	rcl    BYTE PTR [esi-0x3a6ab347],1
  405e4a:	mov    ch,0xe9
  405e4c:	repz (bad) 
  405e4e:	(bad)  
  405e4f:	jo     0x405e2f
  405e51:	ror    DWORD PTR cs:[eax+0x59b57123],0x4c
  405e59:	lds    ebp,FWORD PTR [eax-0x44]
  405e5c:	(bad)  
  405e5d:	mov    edi,0x8c3b4587
  405e62:	sbb    DWORD PTR [edx],ecx
  405e64:	cmp    cl,BYTE PTR [ebx]
  405e66:	and    eax,0xb56fef3f
  405e6b:	shl    dl,cl
  405e6d:	stos   BYTE PTR es:[edi],al
  405e6e:	jno    0x405e9a
  405e70:	dec    esi
  405e71:	or     edi,DWORD PTR [ecx+edi*2]
  405e74:	xor    eax,0x2f787884
  405e79:	in     eax,dx
  405e7a:	inc    edx
  405e7b:	ror    DWORD PTR [edi-0x43],1
  405e7e:	add    eax,0xeca947ec
  405e83:	jmp    0x44bb:0x3f03710a
  405e8a:	fwait
  405e8b:	test   DWORD PTR [esi+0x50fdb33d],0x9ab23810
  405e95:	fcomp  DWORD PTR [edi-0x5aba06d4]
  405e9b:	cmp    al,0x92
  405e9d:	adc    ah,BYTE PTR [ecx]
  405e9f:	jmp    0x405e69
  405ea1:	or     eax,0x2e85979
  405ea6:	sub    ecx,ebp
  405ea8:	jae    0x405e8c
  405eaa:	or     BYTE PTR [bp+si+0x4d],bl
  405eae:	in     al,0x2
  405eb0:	dec    eax
  405eb1:	add    al,BYTE PTR ds:[edi]
  405eb4:	mov    esp,0x9d6cf659
  405eb9:	addr16 push ds
  405ebb:	idiv   BYTE PTR [ebx+eiz*2+0x1f]
  405ebf:	pop    eax
  405ec0:	fisubr DWORD PTR [edx-0x38]
  405ec3:	sbb    al,0x5a
  405ec5:	ja     0x405e89
  405ec7:	mov    ds:0x6877ba5d,eax
  405ecc:	lea    edi,[eax-0x64c18d80]
  405ed2:	shl    BYTE PTR [edi-0x7c],1
  405ed5:	(bad)  
  405ed6:	adc    al,dl
  405ed8:	mov    ds:0x832306d9,al
  405edd:	mov    edx,0x81643c59
  405ee2:	xor    bl,BYTE PTR [ecx]
  405ee4:	popf   
  405ee5:	dec    ecx
  405ee6:	xchg   BYTE PTR [ecx],ah
  405ee8:	pop    ss
  405ee9:	call   DWORD PTR [ecx-0x1b4cdf9d]
  405eef:	ror    BYTE PTR [ebp-0x7fa9a3b2],cl
  405ef5:	pop    ebp
  405ef6:	sbb    esp,DWORD PTR [ecx-0x5e984282]
  405efc:	pusha  
  405efd:	or     eax,0xfc45c755
  405f02:	fadd   DWORD PTR [ebp-0xcc0764]
  405f08:	xor    edi,DWORD PTR ds:0x415109
  405f0e:	adc    edi,DWORD PTR ds:0x4245ae
  405f14:	mov    DWORD PTR ds:0x415109,edi
  405f1a:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  405f21:	mov    DWORD PTR [ebp-0x2c],0xf89c853d
  405f28:	adc    edi,edi
  405f2a:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  405f31:	or     DWORD PTR ds:0x4245be,edx
  405f37:	mov    DWORD PTR [ebp-0x34],0xf89c853f
  405f3e:	mov    DWORD PTR ds:0x417e41,0x15
  405f48:	cmp    DWORD PTR ds:0x417e41,0x0
  405f4f:	je     0x405fae
  405f55:	cmp    DWORD PTR ds:0x417e41,0x5
  405f5c:	jne    0x405f7c
  405f62:	push   0x43a6
  405f67:	push   0x41ac41
  405f6c:	push   0x41ac72
  405f71:	push   0x400000
  405f76:	call   DWORD PTR ds:0x40d1d0
  405f7c:	cmp    DWORD PTR ds:0x417e41,0x6
  405f83:	jne    0x405f96
  405f89:	mov    edi,DWORD PTR ds:0x417e41
  405f8f:	dec    edi
  405f90:	mov    DWORD PTR ds:0x417e41,edi
  405f96:	mov    edi,DWORD PTR ds:0x417e41
  405f9c:	dec    edi
  405f9d:	mov    DWORD PTR ds:0x417e41,edi
  405fa3:	jmp    0x405f48
  405fa8:	xor    edi,DWORD PTR ds:0x417e4d
  405fae:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  405fb5:	and    DWORD PTR ds:0x412364,0xe44
  405fbf:	mov    DWORD PTR [ebp-0x3c],0xf89c8531
  405fc6:	or     DWORD PTR ds:0x417e49,0x6f97
  405fd0:	mov    edx,DWORD PTR [ebp+0x8]
  405fd3:	and    DWORD PTR ds:0x417e55,0x0
  405fdd:	jmp    0x405fef
  405fe2:	mov    edi,DWORD PTR ds:0x417e55
  405fe8:	inc    edi
  405fe9:	mov    DWORD PTR ds:0x417e55,edi
  405fef:	cmp    DWORD PTR ds:0x417e55,0x14
  405ff6:	jae    0x40601f
  405ffc:	cmp    DWORD PTR ds:0x417e55,0x1c
  406003:	jne    0x406014
  406009:	push   0x67ac
  40600e:	call   DWORD PTR ds:0x40d2a0
  406014:	jmp    0x405fe2
  406019:	sub    edi,DWORD PTR ds:0x412378
  40601f:	xor    edx,eax
  406021:	mov    edi,DWORD PTR [ebp-0x10]
  406024:	add    edx,ecx
  406026:	cmp    edi,edx
  406028:	mov    DWORD PTR ds:0x412368,0x5602
  406032:	je     0x407428
  406038:	mov    DWORD PTR ds:0x415109,0xf2d
  406042:	jmp    0x406194
  406047:	lock mov ebx,0xdc791c5b
  40604d:	jns    0x40600a
  40604f:	mov    eax,ds:0x4adb13c5
  406054:	jmp    0x40605a
  406056:	shl    BYTE PTR [ecx],1
  406058:	movd   DWORD PTR [esi+0x23],mm7
  40605c:	jg     0x4060dc
  40605e:	jle    0x406035
  406060:	test   BYTE PTR [esi],bl
  406062:	xchg   esi,eax
  406063:	mov    eax,0xe40dc4f4
  406068:	push   ecx
  406069:	dec    edx
  40606a:	fistp  QWORD PTR [edi+0x1a6d421]
  406070:	jge    0x406000
  406072:	(bad)  
  406073:	(bad)  
  406075:	jae    0x4060f1
  406077:	xor    esp,DWORD PTR [eax-0x10b2287e]
  40607d:	xchg   DWORD PTR [ebx],ebp
  40607f:	jo     0x4060d0
  406081:	xchg   ebx,eax
  406082:	xor    bl,dh
  406084:	frstor [ebx]
  406086:	and    DWORD PTR gs:[esi+edx*4],eax
  40608a:	mov    eax,ds:0x359d07ad
  40608f:	fst    st(6)
  406091:	mov    eax,ds:0x4013805f
  406096:	mov    BYTE PTR [ebp+0x4d],ch
  406099:	loope  0x406109
  40609b:	adc    DWORD PTR [edx+0x42ce51ad],ebp
  4060a1:	xor    eax,0xe67c5ed8
  4060a6:	inc    ecx
  4060a7:	jp     0x40609d
  4060a9:	lahf   
  4060aa:	out    0x85,eax
  4060ac:	mov    bl,ch
  4060ae:	jae    0x4060c2
  4060b0:	dec    esp
  4060b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060b2:	popf   
  4060b3:	ret    
  4060b4:	dec    edi
  4060b5:	fs retf 
  4060b7:	lds    ecx,FWORD PTR [esi]
  4060b9:	sbb    BYTE PTR [esi-0x3874c006],dl
  4060bf:	aaa    
  4060c0:	push   0x24
  4060c2:	test   BYTE PTR [edx-0x40],cl
  4060c5:	fimul  WORD PTR [ebp+0x2319d4b3]
  4060cb:	jg     0x40609d
  4060cd:	test   DWORD PTR [edi+ebx*8],esi
  4060d0:	repz jb 0x40609c
  4060d3:	outs   dx,DWORD PTR ds:[esi]
  4060d4:	sahf   
  4060d5:	aad    0x11
  4060d7:	int    0x63
  4060d9:	stc    
  4060da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060db:	jp     0x40605d
  4060dd:	or     DWORD PTR [esi],ebp
  4060df:	and    ch,cl
  4060e1:	xchg   DWORD PTR [ebp-0x3b19b79a],edx
  4060e7:	and    BYTE PTR [esi+0x64],bh
  4060ea:	jecxz  0x406102
  4060ec:	cli    
  4060ed:	xchg   edi,eax
  4060ee:	add    eax,0x48d2fe3c
  4060f3:	ds cs dec edi
  4060f6:	add    ecx,DWORD PTR [eax-0x1e]
  4060f9:	and    DWORD PTR [ebx+esi*4],0x64
  4060fd:	ret    
  4060fe:	test   DWORD PTR [edx+0x17],ebx
  406101:	and    al,0xb2
  406103:	mov    dh,BYTE PTR [ecx+0x1a]
  406106:	xchg   ebp,eax
  406107:	inc    esi
  406108:	lods   al,BYTE PTR ds:[esi]
  406109:	hlt    
  40610a:	jl     0x40618a
  40610c:	cmovp  ecx,DWORD PTR [esi-0x3c13409f]
  406113:	mov    eax,ds:0x8f74097b
  406118:	mov    DWORD PTR [edi+0x1d5b2de9],esi
  40611e:	fwait
  40611f:	and    esi,edi
  406121:	jecxz  0x406156
  406123:	mov    ah,0xe2
  406125:	push   cs
  406126:	imul   ecx,DWORD PTR [esi-0x71],0xffffffaa
  40612a:	push   edx
  40612b:	inc    ebp
  40612c:	in     al,0xab
  40612e:	adc    BYTE PTR [esp+ebp*4],0x30
  406132:	out    0x5b,al
  406134:	mov    edi,DWORD PTR [edi]
  406136:	(bad)  
  406137:	jmp    0x1a6d:0xe313442c
  40613e:	xor    BYTE PTR [edx-0x68],ah
  406141:	cmp    esi,DWORD PTR [ecx]
  406143:	fld    DWORD PTR [edx+0x20]
  406146:	adc    DWORD PTR [ecx],edx
  406148:	pop    es
  406149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40614a:	mov    cl,dl
  40614c:	mov    ebx,0x57188b3f
  406151:	push   esp
  406152:	cmp    eax,0x6ccc9b8b
  406157:	iret   
  406158:	mov    ch,0x52
  40615a:	pop    esp
  40615b:	adc    eax,0x8de5bd40
  406160:	add    BYTE PTR [edi-0x2e395db1],ch
  406166:	sbb    ah,BYTE PTR [ecx-0x14]
  406169:	mov    esp,0x7d344db7
  40616e:	scas   al,BYTE PTR es:[edi]
  40616f:	lahf   
  406170:	jp     0x406129
  406172:	fmul   st(5),st
  406174:	dec    esi
  406175:	and    BYTE PTR [eax],0xab
  406178:	fist   WORD PTR [edi]
  40617a:	sbb    DWORD PTR [edi],ecx
  40617c:	and    BYTE PTR [edi+0x55],bl
  40617f:	shr    DWORD PTR [esi-0x7a],0xff
  406183:	jmp    0x4061fc
  406185:	mov    bh,0x26
  406187:	mov    dl,0x8b
  406189:	xor    DWORD PTR [edx],ebp
  40618b:	lock push ss
  40618d:	inc    esp
  40618e:	pop    eax
  40618f:	leave  
  406190:	pop    esp
  406191:	or     al,dl
  406193:	test   al,0x53
  406195:	jmp    0x40715f
  40619a:	and    DWORD PTR ds:0x412370,0x0
  4061a4:	jmp    0x4061b6
  4061a9:	mov    edx,DWORD PTR ds:0x412370
  4061af:	inc    edx
  4061b0:	mov    DWORD PTR ds:0x412370,edx
  4061b6:	cmp    DWORD PTR ds:0x412370,0x1e
  4061bd:	jae    0x4061ea
  4061c3:	cmp    DWORD PTR ds:0x412370,0x2a
  4061ca:	jne    0x4061e3
  4061d0:	push   DWORD PTR [ebp-0x10]
  4061d3:	push   0x41acf1
  4061d8:	push   0x41ac28
  4061dd:	call   DWORD PTR ds:0x40d000
  4061e3:	jmp    0x4061a9
  4061e8:	adc    edi,edi
  4061ea:	mov    edx,DWORD PTR [ebp-0x8]
  4061ed:	mov    DWORD PTR ds:0x412364,0x11
  4061f7:	cmp    DWORD PTR ds:0x412364,0x0
  4061fe:	je     0x406239
  406204:	cmp    DWORD PTR ds:0x412364,0x14
  40620b:	jne    0x406227
  406211:	push   0x44a4
  406216:	push   DWORD PTR [ebp-0x20]
  406219:	push   0x788c
  40621e:	push   DWORD PTR [ebp-0x10]
  406221:	call   DWORD PTR ds:0x40d360
  406227:	mov    edi,DWORD PTR ds:0x412364
  40622d:	dec    edi
  40622e:	mov    DWORD PTR ds:0x412364,edi
  406234:	jmp    0x4061f7
  406239:	mov    edi,DWORD PTR [ebp-0x10]
  40623c:	or     DWORD PTR ds:0x41235c,0x6f22
  406246:	sub    edi,edx
  406248:	adc    DWORD PTR ds:0x4245b2,edi
  40624e:	mov    edx,DWORD PTR [ebp-0x4]
  406251:	adc    DWORD PTR ds:0x41abca,0x7639
  40625b:	xor    edx,eax
  40625d:	sbb    DWORD PTR ds:0x4245c2,0x415105
  406267:	add    edx,ecx
  406269:	mov    DWORD PTR ds:0x41abda,0x19aa
  406273:	cmp    edi,edx
  406275:	mov    DWORD PTR ds:0x4150fd,0x443e
  40627f:	jb     0x4072d5
  406285:	mov    edx,DWORD PTR [ebp-0x28]
  406288:	sbb    edi,0x1e1d
  40628e:	mov    edi,DWORD PTR [ebp-0x4]
  406291:	mov    ebx,DWORD PTR ds:0x417e45
  406297:	or     DWORD PTR ds:0x417e3d,ebx
  40629d:	xor    edx,eax
  40629f:	xor    edi,eax
  4062a1:	mov    DWORD PTR ds:0x417e55,0x5fc7
  4062ab:	add    edi,ecx
  4062ad:	dec    ebx
  4062ae:	add    edx,ecx
  4062b0:	dec    ebx
  4062b1:	imul   edx,edi
  4062b4:	sbb    DWORD PTR ds:0x41abe2,0x63fb
  4062be:	mov    edi,DWORD PTR [ebp-0x8]
  4062c1:	mov    DWORD PTR ds:0x41abd2,0x13
  4062cb:	cmp    DWORD PTR ds:0x41abd2,0x0
  4062d2:	je     0x406309
  4062d8:	cmp    DWORD PTR ds:0x41abd2,0x23
  4062df:	jne    0x4062f1
  4062e5:	push   DWORD PTR [ebp-0x18]
  4062e8:	push   DWORD PTR [ebp-0x24]
  4062eb:	call   DWORD PTR ds:0x40d364
  4062f1:	mov    ebx,DWORD PTR ds:0x41abd2
  4062f7:	dec    ebx
  4062f8:	mov    DWORD PTR ds:0x41abd2,ebx
  4062fe:	jmp    0x4062cb
  406303:	sbb    ebx,0x2ce7
  406309:	mov    ebx,DWORD PTR [ebp-0x10]
  40630c:	inc    DWORD PTR ds:0x41abce
  406312:	sub    ebx,edi
  406314:	mov    DWORD PTR ds:0x4245c6,0x7511
  40631e:	cmp    ebx,edx
  406320:	mov    DWORD PTR ds:0x41abd2,0x3d79
  40632a:	ja     0x40635a
  406330:	mov    edx,DWORD PTR [ebp-0x4]
  406333:	mov    DWORD PTR ds:0x412368,0x316e
  40633d:	xor    edx,eax
  40633f:	add    DWORD PTR ds:0x415109,0x4882
  406349:	add    edx,ecx
  40634b:	mov    DWORD PTR ds:0x417e59,0x234c
  406355:	jmp    0x40672b
  40635a:	mov    edx,DWORD PTR [ebp-0x2c]
  40635d:	sbb    DWORD PTR ds:0x412370,0x4f34
  406367:	mov    edi,DWORD PTR [ebp-0x4]
  40636a:	and    ebx,0x5352
  406370:	xor    edx,eax
  406372:	and    DWORD PTR ds:0x415111,0x0
  40637c:	jmp    0x40638e
  406381:	mov    ebx,DWORD PTR ds:0x415111
  406387:	inc    ebx
  406388:	mov    DWORD PTR ds:0x415111,ebx
  40638e:	cmp    DWORD PTR ds:0x415111,0x16
  406395:	jae    0x406508
  40639b:	cmp    DWORD PTR ds:0x415111,0x1c
  4063a2:	jne    0x4063b1
  4063a8:	push   DWORD PTR [ebp-0x1c]
  4063ab:	call   DWORD PTR ds:0x40d1d4
  4063b1:	jmp    0x406381
  4063b6:	jmp    0x406508
  4063bb:	add    eax,DWORD PTR [esi]
  4063bd:	mov    al,ds:0xf969b94b
  4063c2:	inc    esi
  4063c3:	popf   
  4063c4:	imul   ebp,DWORD PTR [ebx+0x6f384f18],0xffffff87
  4063cb:	jmp    0x7e7f:0x237e7e0c
  4063d2:	jle    0x4063c7
  4063d4:	ins    DWORD PTR es:[edi],dx
  4063d5:	dec    ecx
  4063d6:	pushf  
  4063d7:	aad    0xc4
  4063d9:	hlt    
  4063da:	dec    ebp
  4063db:	(bad)  
  4063dd:	jge    0x4063d3
  4063df:	mov    edi,esp
  4063e1:	(bad)  
  4063e3:	ins    BYTE PTR es:[edi],dx
  4063e4:	ret    
  4063e5:	push   DWORD PTR [ebx]
  4063e7:	cmp    eax,0x7c941aa9
  4063ec:	retf   
  4063ed:	and    BYTE PTR [ecx+0x5ea0e1b2],ah
  4063f3:	push   0x27
  4063f5:	jno    0x4063f9
  4063f7:	aas    
  4063f8:	adc    DWORD PTR ds:0x4fe926d9,esi
  4063fe:	out    0xd8,al
  406400:	int    0x73
  406402:	mov    ds:0xa1c0da72,eax
  406407:	jmp    0x406487
  406409:	mov    bl,0x6d
  40640b:	fdivr  QWORD PTR [esi]
  40640d:	inc    ebp
  40640e:	shr    DWORD PTR [ecx-0x67],cl
  406411:	(bad)  
  406412:	sub    dl,BYTE PTR [edi-0x22]
  406415:	ret    
  406416:	pop    ss
  406417:	jp     0x40640f
  406419:	mov    ds:0x5fbc3a6,al
  40641e:	pop    ecx
  40641f:	inc    esi
  406420:	js     0x406465
  406422:	sahf   
  406423:	push   0x11
  406425:	mov    ebx,0xbd9e5831
  40642a:	and    DWORD PTR [edx],esp
  40642c:	clc    
  40642d:	jb     0x40647d
  40642f:	push   cs
  406430:	iret   
  406431:	stos   BYTE PTR es:[edi],al
  406432:	outs   dx,DWORD PTR ds:[esi]
  406433:	sbb    DWORD PTR [edx],esp
  406435:	mov    edx,0xaaa15782
  40643a:	push   ecx
  40643b:	pop    ecx
  40643c:	sbb    DWORD PTR [ecx-0x70],esi
  40643f:	pop    esi
  406440:	xchg   esp,eax
  406441:	xchg   edi,eax
  406442:	pusha  
  406443:	pop    edx
  406444:	lods   al,BYTE PTR ds:[esi]
  406445:	aas    
  406446:	and    eax,DWORD PTR [esi+0x34121d2e]
  40644c:	pop    esp
  40644d:	mov    ebp,0xb30ac71d
  406452:	push   ebx
  406453:	pop    esp
  406454:	stos   DWORD PTR es:[edi],eax
  406455:	xchg   edi,eax
  406456:	(bad)  
  406457:	fmulp  st(3),st
  406459:	out    0x9b,eax
  40645b:	xor    BYTE PTR [edi-0x79],al
  40645e:	out    dx,al
  40645f:	cmp    al,0x1c
  406461:	add    BYTE PTR [edx],bh
  406463:	mov    ah,0xd7
  406465:	loop   0x406452
  406467:	in     eax,dx
  406468:	in     al,dx
  406469:	mov    esi,DWORD PTR [ecx+eiz*1-0x1a]
  40646d:	jnp    0x4064d5
  40646f:	inc    ebx
  406470:	shl    bh,0x79
  406473:	mov    ds:0x45d2591f,al
  406478:	ss stos DWORD PTR es:[edi],eax
  40647a:	sub    BYTE PTR [ebx],dl
  40647c:	cwde   
  40647d:	(bad)
  406480:	mov    ch,0x18
  406482:	(bad)  
  406483:	retf   
  406484:	adc    eax,0x2a6ef493
  406489:	aas    
  40648a:	mov    edx,0x5cc73e4a
  40648f:	enter  0x3be3,0x5a
  406493:	fwait
  406494:	add    ecx,DWORD PTR [ecx+0xc]
  406497:	dec    esi
  406498:	sub    eax,0xd08c8b37
  40649d:	sbb    DWORD PTR [ecx+0x79],0x13
  4064a1:	mov    ch,BYTE PTR ds:0xed7deaca
  4064a7:	xor    DWORD PTR [ebp+0x6c],edi
  4064aa:	test   BYTE PTR [edi-0x36],dh
  4064ad:	frstor [ecx+0xb4dd58d]
  4064b3:	sahf   
  4064b4:	cmp    ebx,esp
  4064b6:	fist   WORD PTR [ebp+0xb]
  4064b9:	cld    
  4064ba:	push   ss
  4064bb:	mov    bh,BYTE PTR [esi+0x3d]
  4064be:	sahf   
  4064bf:	inc    ebp
  4064c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064c1:	add    ah,ch
  4064c3:	and    BYTE PTR [ecx+0x2efbd413],bh
  4064c9:	arpl   si,ax
  4064cb:	sbb    al,0xa3
  4064cd:	mov    esp,0xa021d1d0
  4064d2:	aas    
  4064d3:	test   al,0x6a
  4064d5:	mov    gs,WORD PTR [ebp-0x6b]
  4064d8:	fstp   st(0)
  4064da:	cmp    ebx,edx
  4064dc:	inc    edx
  4064dd:	into   
  4064de:	xor    eax,0x13d22fc
  4064e3:	dec    eax
  4064e4:	add    dl,BYTE PTR [esi-0x342c89e1]
  4064ea:	dec    ebx
  4064eb:	into   
  4064ec:	ror    BYTE PTR [esi+0x25],0xb8
  4064f0:	and    eax,ebx
  4064f2:	enter  0x3367,0x8c
  4064f6:	mov    ebp,0x70e3a110
  4064fb:	add    al,0xe9
  4064fd:	(bad)  
  4064fe:	cmp    dh,bh
  406500:	out    dx,al
  406501:	push   ebp
  406502:	test   DWORD PTR [edx-0x725a2274],edx
  406508:	xor    edi,eax
  40650a:	add    edi,ecx
  40650c:	add    edx,ecx
  40650e:	imul   edx,edi
  406511:	mov    edi,DWORD PTR [ebp-0x8]
  406514:	jmp    0x406666
  406519:	jbe    0x406527
  40651b:	xchg   ebp,eax
  40651c:	call   0xe08bdec6
  406521:	adc    DWORD PTR ds:0x2ba64057,edi
  406527:	inc    esp
  406528:	jae    0x4064c9
  40652a:	or     eax,0x7f237e7e
  40652f:	jle    0x4065af
  406531:	mov    cs,WORD PTR [ecx+0x2a]
  406534:	and    bh,cl
  406536:	shl    DWORD PTR [eax+0x7a62d7e1],0xcc
  40653d:	inc    eax
  40653e:	xor    eax,0x9e851ed2
  406543:	scas   al,BYTE PTR es:[edi]
  406544:	cmp    al,0xea
  406546:	aaa    
  406547:	lock fmul QWORD PTR [edi+0x582b99a2]
  40654e:	xchg   edi,eax
  40654f:	ins    DWORD PTR es:[edi],dx
  406550:	ja     0x406592
  406552:	jns    0x406586
  406554:	and    cl,BYTE PTR [edx+0x15fd52e2]
  40655a:	mov    al,ds:0x97f9a52d
  40655f:	fdivrp st(4),st
  406561:	inc    esi
  406562:	or     BYTE PTR [edi+ebx*1-0x21],0xc8
  406567:	icebp  
  406568:	jge    0x4065d4
  40656a:	cs aas 
  40656c:	pop    edi
  40656d:	cs ret 
  40656f:	(bad)  
  406570:	adc    DWORD PTR [esi],edi
  406572:	add    dh,al
  406574:	lock xchg edx,eax
  406576:	and    DWORD PTR [esi+0x66ec367f],ebx
  40657c:	inc    ecx
  40657d:	imul   esp,DWORD PTR [edi],0x37
  406580:	pop    ebx
  406581:	and    ch,BYTE PTR [esi]
  406583:	fld    QWORD PTR [edi-0x51]
  406586:	cmp    al,0x6
  406588:	mov    edx,0x464b9ebc
  40658d:	jmp    0x9b30f594
  406592:	mov    dl,0x88
  406594:	or     DWORD PTR [ecx],ebp
  406596:	and    eax,0xdde74756
  40659b:	in     eax,0x95
  40659d:	sub    cl,BYTE PTR [edi]
  40659f:	mov    dl,0x92
  4065a1:	rcr    BYTE PTR [edi-0x21],1
  4065a4:	dec    edx
  4065a5:	mov    eax,ds:0xcda8ffee
  4065aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065ab:	sub    BYTE PTR [edi-0x30],ch
  4065ae:	out    dx,eax
  4065af:	pop    ds
  4065b0:	cmp    eax,0x5ca564f6
  4065b5:	xor    eax,0xa9782d71
  4065ba:	jb     0x4065df
  4065bc:	push   edi
  4065bd:	push   si
  4065bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065c0:	dec    eax
  4065c1:	push   ecx
  4065c2:	pushf  
  4065c3:	push   eax
  4065c4:	ins    DWORD PTR es:[edi],dx
  4065c5:	pop    ebx
  4065c6:	inc    esi
  4065c7:	test   eax,0x681f8361
  4065cc:	out    0x21,eax
  4065ce:	cmp    bl,BYTE PTR [esi+0x15]
  4065d1:	leave  
  4065d2:	jae    0x406583
  4065d4:	jo     0x4065df
  4065d6:	loop   0x406612
  4065d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065d9:	mov    DWORD PTR [edi-0x8a10107],ebp
  4065df:	pop    eax
  4065e0:	mov    bl,0x93
  4065e2:	mov    ch,0x69
  4065e4:	in     eax,0x80
  4065e6:	leave  
  4065e7:	pop    es
  4065e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065e9:	popf   
  4065ea:	sub    ebp,DWORD PTR [eax]
  4065ec:	stc    
  4065ed:	and    al,0xb1
  4065ef:	(bad)  
  4065f0:	loopne 0x4065ab
  4065f2:	(bad)  
  4065f3:	in     al,0xaa
  4065f5:	jmp    0x16eb:0x42326874
  4065fc:	jmp    0x99ed897
  406601:	add    DWORD PTR [eax],esi
  406603:	cs mov esi,0xc57064cf
  406609:	fnsave ds:0x9d7d1f8a
  40660f:	in     eax,0xc6
  406611:	test   al,0x4b
  406613:	aaa    
  406614:	cmc    
  406615:	sub    ah,dl
  406617:	cmp    al,0x91
  406619:	jae    0x406655
  40661b:	mov    ebx,0xbf0a4a29
  406620:	dec    ecx
  406621:	add    BYTE PTR [edx],al
  406623:	xchg   ecx,eax
  406624:	sub    ebp,esi
  406626:	or     DWORD PTR [ebx],ebx
  406628:	fimul  WORD PTR [edi+eiz*8+0x22]
  40662c:	mov    ah,0x94
  40662e:	mov    BYTE PTR [eax],bl
  406630:	jg     0x406615
  406632:	sub    BYTE PTR [ebx+0x5dad7dd3],0x23
  406639:	aam    0x5f
  40663b:	pop    es
  40663c:	inc    ebp
  40663d:	sub    esp,0x4b
  406640:	mov    ebx,0xc6215ca1
  406645:	loop   0x4065e5
  406647:	test   eax,0x1dfefe7f
  40664c:	mov    ebx,0x3f63ddff
  406651:	sbb    esi,DWORD PTR [ecx*8-0xc43fafd]
  406658:	mov    esp,0x2dd7bc77
  40665d:	adc    ah,al
  40665f:	jb     0x4065ea
  406661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406662:	out    0xed,al
  406664:	lods   al,BYTE PTR ds:[esi]
  406665:	call   0x2c30c3f5
  40666a:	fistp  QWORD PTR [ebx]
  40666c:	fimul  DWORD PTR [edi]
  40666e:	xchg   DWORD PTR [eax],ecx
  406670:	add    BYTE PTR [eax],al
  406672:	add    BYTE PTR [ebx-0x5d1627ab],cl
  406678:	add    BYTE PTR [eax],al
  40667a:	add    BYTE PTR [ebx+0x7d8bd055],cl
  406680:	cld    
  406681:	xor    edx,eax
  406683:	xor    edi,eax
  406685:	add    edi,ecx
  406687:	add    edx,ecx
  406689:	imul   edx,edi
  40668c:	mov    edi,DWORD PTR [ebp-0x8]
  40668f:	mov    ebx,DWORD PTR [ebp-0x10]
  406692:	sub    ebx,edi
  406694:	cmp    ebx,edx
  406696:	ja     0x4066a4
  40669c:	mov    edx,DWORD PTR [ebp-0x2c]
  40669f:	jmp    0x40671d
  4066a4:	mov    edx,DWORD PTR [ebp-0x34]
  4066a7:	mov    edi,DWORD PTR [ebp-0x4]
  4066aa:	xor    edx,eax
  4066ac:	xor    edi,eax
  4066ae:	add    edi,ecx
  4066b0:	add    edx,ecx
  4066b2:	imul   edx,edi
  4066b5:	mov    edi,DWORD PTR [ebp-0x8]
  4066b8:	mov    ebx,DWORD PTR [ebp-0x10]
  4066bb:	sub    ebx,edi
  4066bd:	cmp    ebx,edx
  4066bf:	ja     0x4066cd
  4066c5:	mov    edx,DWORD PTR [ebp-0x30]
  4066c8:	jmp    0x40671d
  4066cd:	mov    edx,DWORD PTR [ebp-0x38]
  4066d0:	mov    edi,DWORD PTR [ebp-0x4]
  4066d3:	xor    edx,eax
  4066d5:	xor    edi,eax
  4066d7:	add    edi,ecx
  4066d9:	add    edx,ecx
  4066db:	imul   edx,edi
  4066de:	mov    edi,DWORD PTR [ebp-0x8]
  4066e1:	mov    ebx,DWORD PTR [ebp-0x10]
  4066e4:	sub    ebx,edi
  4066e6:	cmp    ebx,edx
  4066e8:	ja     0x4066f6
  4066ee:	mov    edx,DWORD PTR [ebp-0x34]
  4066f1:	jmp    0x40671d
  4066f6:	mov    edx,DWORD PTR [ebp-0x3c]
  4066f9:	mov    edi,DWORD PTR [ebp-0x4]
  4066fc:	xor    edx,eax
  4066fe:	xor    edi,eax
  406700:	add    edx,ecx
  406702:	add    edi,ecx
  406704:	imul   edx,edi
  406707:	mov    edi,DWORD PTR [ebp-0x8]
  40670a:	mov    ebx,DWORD PTR [ebp-0x10]
  40670d:	sub    ebx,edi
  40670f:	cmp    ebx,edx
  406711:	mov    edx,DWORD PTR [ebp-0x38]
  406714:	jbe    0x40671d
  40671a:	mov    edx,DWORD PTR [ebp-0x3c]
  40671d:	mov    edi,DWORD PTR [ebp-0x4]
  406720:	xor    edi,eax
  406722:	xor    edx,eax
  406724:	add    edi,ecx
  406726:	add    edx,ecx
  406728:	imul   edx,edi
  40672b:	mov    DWORD PTR [ebp+0xc],edx
  40672e:	mov    edx,DWORD PTR [ebp+0xc]
  406731:	mov    DWORD PTR [ebp-0x24],edx
  406734:	mov    edx,DWORD PTR [ebp-0x8]
  406737:	jmp    0x406889
  40673c:	lock cs xchg ebx,eax
  40673f:	xchg   esi,eax
  406740:	mov    eax,ds:0xd53889bb
  406745:	and    esp,DWORD PTR [ebp+0x1b]
  406748:	aad    0xe5
  40674a:	les    ebp,FWORD PTR [ecx]
  40674c:	inc    eax
  40674d:	add    bh,BYTE PTR [esi+0x7e]
  406750:	and    edi,DWORD PTR [edi+0x7e]
  406753:	jle    0x4066e1
  406755:	addr16 aas 
  406757:	ret    0x2ca2
  40675a:	loopne 0x406703
  40675c:	(bad)  
  40675d:	rol    dh,cl
  40675f:	or     al,0x27
  406761:	mov    dl,0x23
  406763:	icebp  
  406764:	ret    0x4dda
  406767:	fsub   DWORD PTR gs:[edi]
  40676a:	mov    bl,0xf9
  40676c:	aaa    
  40676d:	jp     0x40678c
  40676f:	scas   al,BYTE PTR es:[edi]
  406770:	rcl    BYTE PTR [edx+edi*8+0x19],1
  406774:	out    dx,eax
  406775:	push   ebx
  406776:	xor    BYTE PTR [esi],ah
  406778:	in     eax,dx
  406779:	jp     0x40673f
  40677b:	call   0x3ab3:0xd06f197d
  406782:	add    al,BYTE PTR [esi-0xc]
  406785:	push   edi
  406786:	xchg   eax,ecx
  406788:	lock jae 0x4067ac
  40678b:	jne    0x4067a4
  40678d:	push   esp
  40678e:	xchg   BYTE PTR [ecx+ebp*8-0x68f2b685],bh
  406795:	and    eax,0x2876c954
  40679a:	lds    ecx,FWORD PTR [eax-0x27]
  40679d:	pop    ds
  40679e:	sub    bl,BYTE PTR [edi+eax*4]
  4067a1:	test   al,0x70
  4067a3:	or     DWORD PTR [ecx-0x23],edx
  4067a6:	pop    esi
  4067a7:	retf   0xf1e3
  4067aa:	cmp    eax,0x28029a08
  4067af:	jnp    0x4067c4
  4067b1:	loope  0x4067ea
  4067b3:	mov    ah,0x99
  4067b5:	mov    BYTE PTR [edi-0x371027d8],ah
  4067bb:	jne    0x40677c
  4067bd:	cmp    ch,bh
  4067bf:	retf   
  4067c0:	push   ecx
  4067c1:	xor    cl,bl
  4067c3:	nop
  4067c4:	sbb    DWORD PTR [edx+eiz*2],eax
  4067c7:	and    BYTE PTR [ebp-0x3],ch
  4067ca:	mov    eax,ds:0x1c1d8129
  4067cf:	or     DWORD PTR [esp+edi*4+0x24],0xffffff97
  4067d4:	xor    al,0xb2
  4067d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067d7:	mov    edi,0x5e172462
  4067dc:	mov    ds:0xb73e1c1e,al
  4067e1:	mov    bh,0xe6
  4067e3:	add    DWORD PTR [edx+eax*2+0x57801cf3],0x33
  4067eb:	js     0x406780
  4067ed:	xchg   BYTE PTR [eax],bl
  4067ef:	aad    0xc4
  4067f1:	imul   esp,DWORD PTR [edi],0x77d20100
  4067f7:	xchg   edx,eax
  4067f8:	idiv   DWORD PTR [esi]
  4067fa:	adc    dl,cl
  4067fc:	imul   eax,DWORD PTR [esi+0x1b],0xffffff9e
  406800:	aaa    
  406801:	retf   
  406802:	and    BYTE PTR [edx+0x5ea2f478],cl
  406808:	sub    DWORD PTR [ecx],0x186eaa17
  40680e:	pop    es
  40680f:	push   esi
  406810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406811:	push   cs
  406812:	add    ebx,DWORD PTR [esi-0x879bd7b]
  406818:	cdq    
  406819:	dec    edx
  40681a:	push   0xffffff88
  40681c:	jp     0x4067cb
  40681e:	repnz ficom DWORD PTR [edx+0x1f475997]
  406825:	fst    st(3)
  406827:	fdivr  DWORD PTR [ebp-0x6b]
  40682a:	rcl    BYTE PTR [eax+0x73],0x79
  40682e:	add    ebp,DWORD PTR [ebp-0x17]
  406831:	dec    BYTE PTR [ebx]
  406833:	sar    BYTE PTR [edi+0x2a],0x7f
  406837:	cmc    
  406838:	mov    BYTE PTR [eax+esi*4+0x480950d],dh
  40683f:	(bad)  
  406841:	push   ebp
  406842:	sbb    DWORD PTR [edi],ecx
  406844:	and    bl,dh
  406846:	adc    eax,0xb60a1824
  40684b:	ret    0xda8
  40684e:	mov    eax,ds:0x134d2b74
  406853:	inc    ebp
  406854:	in     eax,0x70
  406856:	mov    dl,0x2a
  406858:	call   0x4f2d:0xa6a1a811
  40685f:	adc    ebp,DWORD PTR [esi+0x50e1c77c]
  406865:	sbb    DWORD PTR [edx+0x3ecf4439],eax
  40686b:	mov    al,0x1d
  40686d:	leave  
  40686e:	fistp  DWORD PTR [edx]
  406870:	cmp    eax,0x992137c3
  406875:	inc    ecx
  406876:	inc    esi
  406877:	or     BYTE PTR [ebp+0x603d98bc],bh
  40687d:	mov    ecx,0x5a70e83e
  406882:	mov    eax,0x4f1db7b4
  406887:	call   0xc0956be7
  40688c:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  406893:	mov    DWORD PTR [ebp-0x1c],edx
  406896:	mov    DWORD PTR [ebp-0xc],0xf89c853b
  40689d:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  4068a4:	mov    edx,DWORD PTR [ebp-0x18]
  4068a7:	jmp    0x4069f9
  4068ac:	daa    
  4068ad:	mov    ecx,0x7980c50e
  4068b2:	in     eax,0x79
  4068b4:	dec    ebp
  4068b5:	push   esp
  4068b6:	push   ecx
  4068b7:	cmp    al,0xa1
  4068b9:	icebp  
  4068ba:	jne    0x40690a
  4068bc:	jne    0x4068be
  4068be:	jle    0x40693e
  4068c0:	and    edi,DWORD PTR [edi+0x7e]
  4068c3:	jle    0x406921
  4068c5:	addr16 je 0x406917
  4068c8:	sub    BYTE PTR [eax-0x26],0x98
  4068cc:	and    cl,0x27
  4068cf:	adc    BYTE PTR [ecx+edx*8],cl
  4068d2:	mov    edx,0x176a5cf5
  4068d7:	jg     0x406902
  4068d9:	call   0x74f707da
  4068de:	or     al,0xd7
  4068e0:	test   eax,0x90d1967b
  4068e5:	xchg   esp,eax
  4068e6:	jp     0x4068cf
  4068e8:	test   al,bh
  4068ea:	loopne 0x40693f
  4068ec:	xchg   ebx,eax
  4068ed:	lock sub BYTE PTR [eax],0xf4
  4068f1:	xor    bh,BYTE PTR [edi+0x47a798f3]
  4068f7:	or     DWORD PTR [eax-0x1f697fad],ecx
  4068fd:	xchg   edi,eax
  4068fe:	dec    ebp
  4068ff:	push   ebx
  406900:	dec    esp
  406901:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406902:	imul   esi,esi,0x735d7335
  406908:	aam    0x4f
  40690a:	push   es
  40690b:	mov    edi,0x4664cf3d
  406910:	pop    es
  406911:	aaa    
  406912:	mov    ah,0xf
  406914:	jmp    0x406922
  406916:	shl    DWORD PTR [esp+esi*8+0x71],cl
  40691a:	out    0xf1,al
  40691c:	jmp    0x406940
  40691e:	xlat   BYTE PTR ds:[ebx]
  40691f:	cmp    BYTE PTR [eax+0x7bb5cd63],al
  406925:	fstp   TBYTE PTR [ecx-0x34bccce4]
  40692b:	data16 aaa 
  40692d:	sti    
  40692e:	jo     0x40693b
  406930:	sbb    BYTE PTR [edi-0x62],bh
  406933:	shl    DWORD PTR [ebp+0x44d7e1fc],cl
  406939:	jnp    0x40697d
  40693b:	sub    BYTE PTR ds:0x8bbc84e8,ch
  406941:	jg     0x406901
  406943:	xlat   BYTE PTR ds:[ebx]
  406944:	es mov ecx,0xaba90d25
  40694a:	mov    ecx,0xd88e1869
  40694f:	mov    dl,0x3c
  406951:	and    al,0x2b
  406953:	add    ebx,DWORD PTR [esp+edi*1]
  406956:	addr16 data16 or al,0x92
  40695a:	scas   eax,DWORD PTR es:[edi]
  40695b:	or     al,0x41
  40695d:	dec    esp
  40695e:	ds pop ds
  406960:	cwde   
  406961:	push   esp
  406962:	sbb    ah,dl
  406964:	jl     0x406937
  406966:	rcr    BYTE PTR [edx],1
  406968:	dec    ebp
  406969:	pusha  
  40696a:	mov    ds:0x59eb05a5,eax
  40696f:	jbe    0x406905
  406971:	ss inc ebp
  406973:	jno    0x40695c
  406975:	sub    al,0x2d
  406977:	sbb    DWORD PTR [ebp-0x45],ebx
  40697a:	mov    dl,0x3
  40697c:	je     0x406936
  40697e:	mov    ds:0x3ea80887,al
  406983:	and    bl,0x6d
  406986:	and    ecx,DWORD PTR [edi+0xf]
  406989:	sub    al,0x57
  40698b:	aad    0xd9
  40698d:	xor    esi,edx
  40698f:	loope  0x406967
  406991:	sti    
  406992:	imul   ebx,DWORD PTR [esi-0x66],0xa89e0829
  406999:	ficom  DWORD PTR [eax]
  40699b:	or     al,0x9a
  40699d:	(bad)  
  40699e:	in     al,dx
  40699f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069a0:	sar    BYTE PTR [esi-0x4f],0xa5
  4069a4:	mov    bh,0xca
  4069a6:	xor    edx,edi
  4069a8:	scas   eax,DWORD PTR es:[edi]
  4069a9:	shl    DWORD PTR [eax+0x50],1
  4069ac:	int    0xc8
  4069ae:	scas   eax,DWORD PTR es:[edi]
  4069af:	fisubr WORD PTR [eax]
  4069b1:	cmp    bl,BYTE PTR [edx]
  4069b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069b4:	stc    
  4069b5:	add    BYTE PTR [eax],0xfc
  4069b8:	jmp    0x4069db
  4069ba:	or     DWORD PTR [edx-0x65],ebx
  4069bd:	sub    esi,esi
  4069bf:	xchg   DWORD PTR [edx+edx*2+0x70f46022],esi
  4069c6:	sub    bl,dl
  4069c8:	ficom  WORD PTR es:[eax-0x52]
  4069cc:	mov    edi,0xc8b6fb7f
  4069d1:	mov    ah,0x2e
  4069d3:	sti    
  4069d4:	lock xor al,0xd8
  4069d7:	in     al,0xca
  4069d9:	inc    esp
  4069da:	push   ds
  4069db:	shr    BYTE PTR [ecx+0x238a13cd],1
  4069e1:	push   ebp
  4069e2:	sub    al,0xb1
  4069e4:	mov    ah,0x34
  4069e6:	rcr    DWORD PTR [esi-0x37c2904f],cl
  4069ec:	ficom  DWORD PTR [ebx]
  4069ee:	outs   dx,BYTE PTR ds:[esi]
  4069ef:	ins    BYTE PTR es:[edi],dx
  4069f0:	jae    0x4069f0
  4069f2:	or     eax,0x3d79df94
  4069f7:	lahf   
  4069f8:	lock xor edx,eax
  4069fb:	jmp    0x406b4d
  406a00:	int    0xfb
  406a02:	mov    ebx,0x65b3b933
  406a07:	stc    
  406a08:	repnz add eax,0x978c7a93
  406a0e:	mov    ebp,0x7e013e1c
  406a13:	jle    0x406a38
  406a15:	jg     0x406a95
  406a17:	jle    0x406a25
  406a19:	pop    ecx
  406a1a:	cmp    dh,BYTE PTR [eax-0x9]
  406a1d:	push   0xffffffef
  406a1f:	add    DWORD PTR [ecx-0x522718cf],esp
  406a25:	push   es
  406a26:	cdq    
  406a27:	adc    DWORD PTR [eax-0x47],ebp
  406a2a:	jmp    0x90ece637
  406a2f:	push   esp
  406a30:	mov    al,0x9f
  406a32:	clc    
  406a33:	push   ds
  406a34:	sbb    esp,edx
  406a36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a37:	xchg   esp,eax
  406a38:	loope  0x4069ba
  406a3a:	outs   dx,BYTE PTR ds:[esi]
  406a3b:	jp     0x406a77
  406a3d:	jle    0x406a5e
  406a3f:	loop   0x4069db
  406a41:	cmc    
  406a42:	or     BYTE PTR [esi-0x92ec092],ch
  406a48:	push   0x4b
  406a4a:	add    ebp,DWORD PTR [esi]
  406a4c:	cwde   
  406a4d:	test   eax,0x69bdf6ce
  406a52:	inc    ecx
  406a53:	cmp    al,0x9
  406a55:	sbb    cl,BYTE PTR [eax+0x1b383c31]
  406a5b:	ds clc 
  406a5d:	mov    ebx,0x9f6a4b61
  406a62:	and    BYTE PTR [ecx-0x1a],dh
  406a65:	push   cs
  406a66:	std    
  406a67:	push   cs
  406a68:	in     al,dx
  406a69:	mov    dh,0x1d
  406a6b:	jnp    0x406ae2
  406a6d:	fisub  WORD PTR [ecx]
  406a6f:	inc    ebx
  406a70:	xchg   edi,eax
  406a71:	push   es
  406a72:	addr16 pop es
  406a74:	jbe    0x406a72
  406a76:	jg     0x406a7b
  406a78:	call   0x740:0x4573d5fb
  406a7f:	(bad)  
  406a81:	lock rol BYTE PTR [ebp+0x5d],0x54
  406a86:	sub    BYTE PTR fs:[edi+0x10],al
  406a8a:	jmp    0x3fb5361
  406a8f:	loope  0x406ac0
  406a91:	outs   dx,BYTE PTR ds:[esi]
  406a92:	aas    
  406a93:	in     al,0x85
  406a95:	(bad)  
  406a96:	repnz stos BYTE PTR es:[edi],al
  406a98:	xchg   esi,eax
  406a99:	dec    esp
  406a9a:	out    dx,eax
  406a9b:	shr    BYTE PTR [ebp-0x3a779602],1
  406aa1:	pop    edx
  406aa2:	scas   al,BYTE PTR es:[edi]
  406aa3:	pop    ebp
  406aa4:	pop    ecx
  406aa5:	inc    edx
  406aa6:	pop    edx
  406aa7:	lods   al,BYTE PTR ds:[esi]
  406aa8:	adc    esp,DWORD PTR [edx+0x2c]
  406aab:	dec    eax
  406aac:	stc    
  406aad:	and    al,0xee
  406aaf:	mov    ds:0x9fadcf89,al
  406ab4:	into   
  406ab5:	pop    eax
  406ab6:	rol    BYTE PTR [eax-0x12],cl
  406ab9:	loope  0x406adb
  406abb:	scas   al,BYTE PTR es:[edi]
  406abc:	inc    edx
  406abd:	mov    ah,BYTE PTR ds:[esi-0x2bff9e6a]
  406ac4:	push   ebx
  406ac5:	cmp    al,0x16
  406ac7:	aaa    
  406ac8:	fmulp  st(0),st
  406aca:	sbb    DWORD PTR [edi],edi
  406acc:	sub    ch,BYTE PTR ds:0xc33cd181
  406ad2:	mov    edx,0x64b96bc2
  406ad7:	pop    edi
  406ad8:	out    dx,al
  406ad9:	sbb    BYTE PTR [ebp+0x38d009df],ch
  406adf:	stos   BYTE PTR es:[edi],al
  406ae0:	mov    ah,0x68
  406ae2:	dec    eax
  406ae3:	scas   eax,DWORD PTR es:[edi]
  406ae4:	test   DWORD PTR [edi],0x80b767a7
  406aea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406aeb:	mov    DWORD PTR [edi+0x36],ebx
  406aee:	scas   al,BYTE PTR es:[edi]
  406aef:	mov    BYTE PTR [edi+0x65],bh
  406af2:	pop    edi
  406af3:	imul   edi,esi,0x36d50c27
  406af9:	call   FWORD PTR [esi]
  406afb:	add    bh,bh
  406afd:	mov    dl,0x9a
  406aff:	in     eax,0xfa
  406b01:	dec    esi
  406b02:	or     al,0xef
  406b04:	cmp    ah,BYTE PTR [edi-0x1d]
  406b07:	fstp   DWORD PTR [ecx-0x46]
  406b0a:	ins    DWORD PTR es:[edi],dx
  406b0b:	je     0x406ab5
  406b0d:	and    bh,BYTE PTR [ebx-0x80]
  406b10:	imul   DWORD PTR [edi+ebp*1-0x28]
  406b14:	in     eax,dx
  406b15:	mov    edx,0xee591cf5
  406b1a:	xchg   esi,eax
  406b1b:	aas    
  406b1c:	dec    edx
  406b1d:	dec    esi
  406b1e:	jbe    0x406aaf
  406b20:	inc    esp
  406b21:	pusha  
  406b22:	lahf   
  406b23:	fnstenv [ebp+0x16]
  406b26:	fcom   DWORD PTR [ebx-0x1dfa2bbe]
  406b2c:	inc    eax
  406b2d:	mov    eax,ecx
  406b2f:	mov    ds:0xf1456feb,al
  406b34:	mov    eax,ds:0x242b6a2c
  406b39:	int    0x26
  406b3b:	xchg   esp,eax
  406b3c:	(bad)  
  406b3d:	fbstp  TBYTE PTR [edx+ebp*8+0x4cc66de3]
  406b44:	push   ecx
  406b45:	mov    edi,0xf5f1ab4f
  406b4a:	mov    ecx,0xd1038cb6
  406b4f:	jmp    0x406fb2
  406b54:	mov    edx,DWORD PTR [ebp-0x18]
  406b57:	xor    edx,eax
  406b59:	add    edx,DWORD PTR [ebp-0x14]
  406b5c:	mov    edi,DWORD PTR [ebp-0x1c]
  406b5f:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406b66:	mov    BYTE PTR [ebp+0xf],dl
  406b69:	mov    edx,DWORD PTR [ebp-0xc]
  406b6c:	xor    edx,eax
  406b6e:	add    edx,DWORD PTR [ebp-0x14]
  406b71:	jmp    0x406cc3
  406b76:	mov    ah,0x9b
  406b78:	scas   al,BYTE PTR es:[edi]
  406b79:	pop    es
  406b7a:	popa   
  406b7b:	cmp    edx,DWORD PTR [ebp+0x59]
  406b7e:	(bad)  
  406b80:	xor    DWORD PTR [eax-0x56db2f95],ecx
  406b86:	jecxz  0x406b8e
  406b88:	jle    0x406c08
  406b8a:	and    edi,DWORD PTR [edi+0x7e]
  406b8d:	jle    0x406bd1
  406b8f:	jnp    0x406bc9
  406b91:	rol    cl,cl
  406b93:	xor    al,0xd8
  406b95:	mov    ecx,0x86b139b5
  406b9a:	nop
  406b9b:	in     eax,dx
  406b9c:	and    eax,0xc62acc5b
  406ba1:	push   ebp
  406ba2:	or     DWORD PTR [esi-0x15],ebp
  406ba5:	mov    fs:0x25d22abd,al
  406bab:	dec    ebp
  406bac:	push   edx
  406bad:	popa   
  406bae:	loopne 0x406b79
  406bb0:	dec    esp
  406bb1:	adc    al,BYTE PTR [ebp+0xd]
  406bb4:	retf   0x3300
  406bb7:	lahf   
  406bb8:	(bad)  [ebx]
  406bba:	cdq    
  406bbb:	mov    bh,0xe8
  406bbd:	div    DWORD PTR [ebx-0x7c]
  406bc0:	push   0x43e8e70c
  406bc5:	xchg   esp,eax
  406bc6:	enter  0x84f0,0x81
  406bca:	sar    bl,cl
  406bcc:	cmp    bh,0x56
  406bcf:	add    DWORD PTR [edx-0x46],esp
  406bd2:	sbb    ch,ch
  406bd4:	aaa    
  406bd5:	push   eax
  406bd6:	lea    esi,[edx]
  406bd8:	sahf   
  406bd9:	sbb    al,0x12
  406bdb:	cwde   
  406bdc:	lods   eax,DWORD PTR ds:[esi]
  406bdd:	push   edx
  406bde:	rol    BYTE PTR [esi-0x72a2a995],cl
  406be4:	inc    ecx
  406be5:	pushf  
  406be6:	jae    0x406ba1
  406be8:	shl    DWORD PTR [ebx-0x7456288a],0x8e
  406bef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bf0:	push   ebx
  406bf1:	das    
  406bf2:	pop    edi
  406bf3:	(bad)  
  406bf4:	ss adc edi,eax
  406bf7:	xchg   esi,eax
  406bf8:	(bad)  
  406bf9:	pushf  
  406bfa:	(bad)  
  406bfb:	and    eax,0xa3f1b85e
  406c00:	inc    ebx
  406c01:	jmp    0x5ede6d6b
  406c06:	imul   eax,DWORD PTR [ebx-0x31],0x760a4180
  406c0d:	nop
  406c0e:	xchg   esp,eax
  406c0f:	sub    edx,esi
  406c11:	call   0x169f3334
  406c16:	adc    ecx,DWORD PTR [ecx+0x4130373f]
  406c1c:	(bad)  
  406c1d:	int    0xd3
  406c1f:	(bad)  
  406c20:	push   0xd58df63d
  406c25:	lods   eax,DWORD PTR ds:[esi]
  406c26:	jle    0x406bff
  406c28:	xchg   esp,eax
  406c29:	jne    0x406c54
  406c2b:	inc    esp
  406c2c:	or     al,0x5b
  406c2e:	repnz ss push ss
  406c31:	adc    al,0xc9
  406c33:	mov    al,ds:0x644b05b1
  406c38:	cmp    BYTE PTR [edx],cl
  406c3a:	mov    al,0xef
  406c3c:	inc    edi
  406c3d:	leave  
  406c3e:	sahf   
  406c3f:	push   ecx
  406c40:	leave  
  406c41:	mov    edi,DWORD PTR [edx+ebx*1+0x1d]
  406c45:	out    0x79,eax
  406c47:	adc    eax,0x64857f39
  406c4c:	daa    
  406c4d:	inc    esp
  406c4e:	call   0x42e1:0x9a13ed47
  406c55:	ss jmp 0x76941dec
  406c5b:	out    0xff,al
  406c5d:	jle    0x406c72
  406c5f:	pop    edx
  406c60:	add    al,0xcb
  406c62:	xchg   ebp,eax
  406c63:	test   cl,dh
  406c65:	sub    al,BYTE PTR [esi-0x669cbd69]
  406c6b:	cli    
  406c6c:	icebp  
  406c6d:	xchg   ebx,eax
  406c6e:	mov    bl,BYTE PTR [esi+0x3d6f594c]
  406c74:	int    0xee
  406c76:	sub    eax,0xd37b673e
  406c7b:	stos   BYTE PTR es:[edi],al
  406c7c:	dec    esp
  406c7d:	pop    eax
  406c7e:	test   BYTE PTR [esi-0x5efafcaf],bl
  406c84:	mov    dl,0x2c
  406c86:	repz mov bl,0xa9
  406c89:	jg     0x406cc0
  406c8b:	sub    ch,BYTE PTR [edi]
  406c8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c8e:	mov    al,BYTE PTR [esi-0x756d5c9d]
  406c94:	dec    esp
  406c95:	bound  edx,QWORD PTR [ecx-0x1dd4150f]
  406c9b:	fcom   QWORD PTR [edi-0x51]
  406c9f:	(bad)  
  406ca0:	and    al,0x49
  406ca2:	jbe    0x406d02
  406ca4:	and    ebx,0xa5a1429a
  406caa:	jo     0x406c30
  406cac:	je     0x406c35
  406cae:	in     al,0x3a
  406cb0:	dec    ebp
  406cb1:	jns    0x406d00
  406cb3:	xchg   BYTE PTR [edi],dl
  406cb5:	in     eax,0x75
  406cb7:	shr    BYTE PTR [ebx-0x3481515],cl
  406cbd:	jo     0x406cd5
  406cbf:	sar    DWORD PTR [edx-0x4d],1
  406cc2:	xor    cl,BYTE PTR [ebx-0x6b751b83]
  406cc8:	cmp    bl,BYTE PTR [edi-0x77ffcd8e]
  406cce:	push   ebp
  406ccf:	or     ecx,DWORD PTR [edx+0x7d8b0f55]
  406cd5:	hlt    
  406cd6:	xor    edi,eax
  406cd8:	add    edi,DWORD PTR [ebp-0x14]
  406cdb:	mov    ebx,DWORD PTR [ebp-0x1c]
  406cde:	jmp    0x406e30
  406ce3:	stos   DWORD PTR es:[edi],eax
  406ce4:	out    dx,eax
  406ce5:	pop    edx
  406ce6:	sbb    al,0x5a
  406ce8:	test   eax,0x2e197979
  406ced:	leave  
  406cee:	ss cmp al,0x97
  406cf1:	test   al,0x24
  406cf3:	xchg   esp,eax
  406cf4:	pop    es
  406cf5:	jle    0x406d75
  406cf7:	and    edi,DWORD PTR [edi+0x7e]
  406cfa:	jle    0x406cf4
  406cfc:	rcl    DWORD PTR [ebp+0x19],1
  406cff:	inc    eax
  406d00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d01:	daa    
  406d02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d03:	mov    ebx,0xdcf8ccaf
  406d08:	sub    esi,DWORD PTR [eax-0x66]
  406d0b:	lock sahf 
  406d0d:	(bad)  
  406d0e:	out    dx,al
  406d0f:	jno    0x406ce2
  406d11:	fs dec edx
  406d13:	lods   eax,DWORD PTR ds:[esi]
  406d14:	sbb    BYTE PTR [edx*4+0x5573b4ab],al
  406d1b:	push   edx
  406d1c:	data16 mov WORD PTR [ebp-0x66387456],es
  406d23:	icebp  
  406d24:	mov    edx,0x61d5e531
  406d29:	out    dx,eax
  406d2a:	jecxz  0x406cee
  406d2c:	dec    edx
  406d2d:	add    edx,ecx
  406d2f:	lahf   
  406d30:	stos   BYTE PTR es:[edi],al
  406d31:	retf   0xbcdd
  406d34:	test   al,bl
  406d36:	(bad)
  406d3a:	scas   eax,DWORD PTR es:[edi]
  406d3b:	xor    DWORD PTR [esi],ebx
  406d3d:	mov    al,0xe2
  406d3f:	outs   dx,BYTE PTR ds:[esi]
  406d40:	lods   eax,DWORD PTR ds:[esi]
  406d41:	enter  0xfce0,0x9e
  406d45:	stos   DWORD PTR es:[edi],eax
  406d46:	aam    0x7
  406d48:	sbb    al,0x26
  406d4a:	fcmovu st,st(7)
  406d4c:	out    0x0,eax
  406d4e:	dec    esp
  406d4f:	fsub   DWORD PTR [esi]
  406d51:	mov    dl,0x2a
  406d53:	test   eax,0xb1bdd04a
  406d58:	or     eax,0x2bf54a23
  406d5d:	(bad)  
  406d5e:	jo     0x406d5d
  406d60:	call   0x456bdc60
  406d65:	dec    ecx
  406d66:	or     al,0x51
  406d68:	mov    ds:0x6128d694,al
  406d6d:	stos   DWORD PTR es:[edi],eax
  406d6e:	jg     0x406d8c
  406d70:	pop    esp
  406d71:	rcr    cl,1
  406d73:	js     0x406d91
  406d75:	push   ecx
  406d76:	rol    DWORD PTR [ebx+0x580d6664],0x0
  406d7d:	pop    esp
  406d7e:	les    esi,FWORD PTR [ebx]
  406d80:	ret    
  406d81:	xchg   DWORD PTR [ebx+0x76],ebp
  406d84:	mov    al,ds:0x83633fc8
  406d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8a:	pop    ebp
  406d8b:	lods   eax,DWORD PTR ds:[esi]
  406d8c:	adc    al,0xba
  406d8e:	xchg   edi,eax
  406d8f:	das    
  406d90:	push   eax
  406d91:	test   eax,0x5408657d
  406d96:	mov    esp,0x918fbdd4
  406d9b:	aaa    
  406d9c:	jne    0x406e13
  406d9e:	add    BYTE PTR ss:0xc4f2d54,cl
  406da5:	fsubr  DWORD PTR [esi+edx*2]
  406da8:	mov    ch,0xb0
  406daa:	jb     0x406d48
  406dac:	call   0xe6c:0x1042a3ec
  406db3:	add    ah,BYTE PTR [ebx]
  406db5:	add    al,0x69
  406db7:	test   eax,0xba4e404e
  406dbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dbd:	pop    ss
  406dbe:	or     dh,ch
  406dc0:	inc    edi
  406dc1:	imul   esp,DWORD PTR [eax+0xc6e4ec2],0x813383be
  406dcb:	loope  0x406e01
  406dcd:	mov    eax,0xa7fd67fc
  406dd2:	retf   
  406dd3:	add    al,0x31
  406dd5:	ins    DWORD PTR es:[edi],dx
  406dd6:	vmread DWORD PTR [ebx+0x2d],esi
  406dda:	scas   al,BYTE PTR es:[edi]
  406ddb:	outs   dx,BYTE PTR ds:[esi]
  406ddc:	stos   BYTE PTR es:[edi],al
  406ddd:	(bad)  
  406dde:	mov    WORD PTR [ebx],ds
  406de0:	cli    
  406de1:	sar    BYTE PTR [edx-0x38f99d5d],cl
  406de7:	xor    al,0xe6
  406de9:	inc    edx
  406dea:	pop    ecx
  406deb:	(bad)
  406df0:	adc    BYTE PTR [ecx-0x594e22be],cl
  406df6:	add    BYTE PTR [ebp+0x56],al
  406df9:	(bad)  
  406dfa:	lock adc eax,0xcb90194b
  406e00:	jle    0x406e2d
  406e02:	into   
  406e03:	test   al,0x98
  406e05:	lahf   
  406e06:	ins    DWORD PTR es:[edi],dx
  406e07:	adc    DWORD PTR [ebx+edi*8-0x2d98d01e],edi
  406e0e:	cmp    BYTE PTR [ebx-0x6],dh
  406e11:	or     al,0x48
  406e13:	mov    esp,DWORD PTR [edx+eax*2+0x2a]
  406e17:	stos   BYTE PTR es:[edi],al
  406e18:	ss jns 0x406e80
  406e1b:	in     eax,dx
  406e1c:	and    dl,BYTE PTR [eax+esi*4-0x7]
  406e20:	popa   
  406e21:	adc    eax,0x47170aa5
  406e26:	push   ebx
  406e27:	xchg   esi,eax
  406e28:	cmp    al,0x79
  406e2a:	out    dx,eax
  406e2b:	addr16 dec esi
  406e2d:	mov    ecx,0x94888228
  406e32:	pop    ds
  406e33:	lahf   
  406e34:	jb     0x406e68
  406e36:	add    cl,ch
  406e38:	dec    ebp
  406e39:	add    DWORD PTR [eax],eax
  406e3b:	add    BYTE PTR [ecx+0x24],bh
  406e3e:	mov    dh,0xd8
  406e40:	dec    ebx
  406e41:	js     0x406ebc
  406e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e44:	mov    BYTE PTR [esi-0x4],bl
  406e47:	lods   al,BYTE PTR ds:[esi]
  406e48:	pop    eax
  406e49:	jge    0x406e8f
  406e4b:	cld    
  406e4c:	pop    ecx
  406e4d:	add    al,0x7e
  406e4f:	jle    0x406e74
  406e51:	jg     0x406ed1
  406e53:	jle    0x406e4d
  406e55:	add    al,0x25
  406e57:	adc    eax,0xb1ed2f3
  406e5c:	sahf   
  406e5d:	mov    ds:0xd049373d,eax
  406e62:	add    BYTE PTR [ebx-0x57],dh
  406e65:	ret    0x79ca
  406e68:	and    al,0xfa
  406e6a:	xor    ch,BYTE PTR [ebx+eax*4]
  406e6d:	cmovs  eax,edx
  406e70:	iret   
  406e71:	mov    eax,ds:0x61ab8ddd
  406e76:	(bad)  
  406e78:	ins    DWORD PTR es:[edi],dx
  406e79:	(bad)  
  406e7a:	hlt    
  406e7b:	inc    edi
  406e7c:	aam    0xf3
  406e7e:	jg     0x406e13
  406e80:	out    dx,eax
  406e81:	sti    
  406e82:	mov    edx,0x724e340c
  406e87:	jmp    0xe8d0bc7
  406e8c:	stos   BYTE PTR es:[edi],al
  406e8d:	clc    
  406e8e:	jo     0x406e6a
  406e90:	add    edi,eax
  406e92:	std    
  406e93:	clc    
  406e94:	mov    al,ds:0x7328de42
  406e99:	mov    ecx,0xc5aca6cb
  406e9e:	sbb    bl,dl
  406ea0:	leave  
  406ea1:	sub    edi,DWORD PTR [ebx-0x14]
  406ea4:	jae    0x406e7d
  406ea6:	fist   WORD PTR [edx+esi*1+0x4dd82846]
  406ead:	pushf  
  406eae:	xchg   ebx,eax
  406eaf:	cs add eax,0x62d78481
  406eb5:	xchg   BYTE PTR [eax+0x14],bh
  406eb8:	sub    BYTE PTR [edi-0x7b340e5e],ch
  406ebe:	fcomip st,st(3)
  406ec0:	inc    ebx
  406ec1:	jl     0x406f2a
  406ec3:	mov    ebp,0xc9db22d3
  406ec8:	aas    
  406ec9:	and    ah,bh
  406ecb:	js     0x406f1c
  406ecd:	fsub   DWORD PTR [edi]
  406ecf:	fwait
  406ed0:	or     al,0x12
  406ed2:	cli    
  406ed3:	(bad)  
  406ed4:	cli    
  406ed5:	dec    ecx
  406ed6:	cli    
  406ed7:	jb     0x406ec5
  406ed9:	xchg   edi,eax
  406eda:	xchg   ecx,eax
  406edb:	pop    ebx
  406edc:	add    esi,0x491f50a8
  406ee2:	scas   eax,DWORD PTR es:[edi]
  406ee3:	pop    edi
  406ee4:	sub    al,0xaf
  406ee6:	call   0x2741b762
  406eeb:	push   ecx
  406eec:	out    0x4a,al
  406eee:	loope  0x406ea2
  406ef0:	pop    es
  406ef1:	icebp  
  406ef2:	push   0xffffffa2
  406ef4:	xor    eax,DWORD PTR [eax]
  406ef6:	fadd   QWORD PTR [edi+0x70]
  406ef9:	movaps xmm3,XMMWORD PTR [edx+edx*1+0x19513151]
  406f01:	mov    cl,0x96
  406f03:	adc    DWORD PTR [ebx-0x31a28557],edx
  406f09:	pop    edi
  406f0a:	add    DWORD PTR [edx+0x25],ecx
  406f0d:	out    dx,eax
  406f0e:	movzx  edi,dx
  406f11:	imul   eax,edx,0x35
  406f14:	(bad)  [edi-0x39]
  406f17:	xor    esi,edx
  406f19:	(bad)  [edi+0x12]
  406f1c:	mov    edi,DWORD PTR [edi-0xcfd576d]
  406f22:	sbb    DWORD PTR [esi-0x24],eax
  406f25:	jmp    0x4bbb:0x616156b8
  406f2c:	es push ss
  406f2e:	inc    edi
  406f2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f30:	ret    0x38df
  406f33:	leave  
  406f34:	jae    0x406f96
  406f36:	mov    ecx,esi
  406f38:	stos   BYTE PTR es:[edi],al
  406f39:	mov    ebx,0x2fb9d343
  406f3e:	ins    DWORD PTR es:[edi],dx
  406f3f:	xchg   DWORD PTR [ebp+0x18],esp
  406f42:	and    eax,0xbd510452
  406f47:	sbb    dl,BYTE PTR [edi-0x496d22a7]
  406f4d:	lock mov eax,edi
  406f50:	lds    ebp,FWORD PTR [ebx*1-0x3334fb2e]
  406f57:	fdivrp st(7),st
  406f59:	call   0x2b:0xd3d001e7
  406f60:	repnz inc esp
  406f62:	cmp    DWORD PTR [ebx-0x7a],ebx
  406f65:	adc    eax,0xb017451
  406f6a:	sub    BYTE PTR [ecx-0x46265c2f],dl
  406f70:	and    BYTE PTR [ebp+ebp*1+0xac79c56],bh
  406f77:	out    0x29,al
  406f79:	retf   
  406f7a:	outs   dx,DWORD PTR ds:[esi]
  406f7b:	jmp    0xf0ac6e7d
  406f80:	in     al,dx
  406f81:	outs   dx,DWORD PTR ds:[esi]
  406f82:	ins    BYTE PTR es:[edi],dx
  406f83:	inc    edi
  406f84:	add    al,0xef
  406f86:	mov    ?,WORD PTR [eax+eax*8-0x74f4aa76]
  406f8d:	jge    0x406f77
  406f8f:	xor    edi,eax
  406f91:	add    edi,DWORD PTR [ebp-0x14]
  406f94:	mov    ebx,DWORD PTR [ebp-0x1c]
  406f97:	mov    BYTE PTR [edi+ebx*1+0x32729f],dl
  406f9e:	mov    edx,DWORD PTR [ebp-0x44]
  406fa1:	mov    edi,DWORD PTR [ebp-0xc]
  406fa4:	xor    edx,eax
  406fa6:	xor    edi,eax
  406fa8:	add    edx,ecx
  406faa:	add    edi,ecx
  406fac:	imul   edx,edi
  406faf:	add    edx,DWORD PTR [ebp-0x14]
  406fb2:	mov    DWORD PTR [ebp-0x14],edx
  406fb5:	mov    edx,DWORD PTR [ebp-0xc]
  406fb8:	mov    edi,DWORD PTR [ebp-0x24]
  406fbb:	xor    edx,eax
  406fbd:	add    edx,ecx
  406fbf:	imul   edx,edi
  406fc2:	mov    edi,DWORD PTR [ebp-0xc]
  406fc5:	xor    edi,eax
  406fc7:	sub    edx,edi
  406fc9:	mov    edi,DWORD PTR [ebp-0xc]
  406fcc:	mov    ebx,DWORD PTR [ebp-0x14]
  406fcf:	xor    edi,eax
  406fd1:	add    edi,ecx
  406fd3:	imul   edi,ebx
  406fd6:	mov    ebx,DWORD PTR [ebp-0x18]
  406fd9:	xor    ebx,eax
  406fdb:	sub    edx,ecx
  406fdd:	lea    edi,[edi+ebx*1+0x32729f]
  406fe4:	cmp    edi,edx
  406fe6:	jbe    0x406b54
  406fec:	mov    edx,DWORD PTR [ebp-0xc]
  406fef:	mov    edi,DWORD PTR [ebp-0x24]
  406ff2:	xor    edx,eax
  406ff4:	add    edx,ecx
  406ff6:	imul   edx,edi
  406ff9:	mov    edi,DWORD PTR [ebp-0x18]
  406ffc:	xor    edi,eax
  406ffe:	jmp    0x407150
  407003:	hlt    
  407004:	jae    0x40702b
  407006:	pop    ds
  407007:	mov    ecx,0xa4a98439
  40700c:	pushf  
  40700d:	sbb    al,0x11
  40700f:	xchg   edi,eax
  407010:	mov    cl,0xc2
  407012:	fild   DWORD PTR [edx]
  407014:	sbb    bh,BYTE PTR [esi+0x7e]
  407017:	and    edi,DWORD PTR [edi+0x7e]
  40701a:	jle    0x406fcc
  40701c:	dec    ecx
  40701d:	mov    esp,ebp
  40701f:	add    eax,0xc809b296
  407024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407025:	addr16 push 0x349c0c52
  40702b:	mov    ecx,0xc4662465
  407030:	out    dx,al
  407031:	(bad)  
  407033:	push   cs
  407034:	adc    DWORD PTR [ebx],0x1236aece
  40703a:	pop    ebx
  40703b:	mov    eax,ds:0x7076c190
  407040:	sub    edi,esp
  407042:	fld    TBYTE PTR es:[edi+0x69c9f753]
  407049:	sub    DWORD PTR [ebp*2+0x4c050d2b],edi
  407050:	mov    esp,0xca8a997e
  407055:	sub    DWORD PTR [eax-0x67],ebp
  407058:	push   esi
  407059:	mov    WORD PTR [eax],?
  40705b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40705c:	xor    ecx,DWORD PTR [eax]
  40705e:	and    BYTE PTR [eax-0x1e6b94fb],0x17
  407065:	xlat   BYTE PTR ds:[ebx]
  407066:	retf   
  407067:	(bad)  
  407068:	sub    bl,BYTE PTR [esi+0x5608bd1d]
  40706e:	xor    al,0x29
  407070:	call   0x2621:0xdd9f908d
  407077:	cmp    edx,DWORD PTR [ecx+esi*2]
  40707a:	retf   
  40707b:	mov    edi,0x56b8fe1a
  407080:	pop    es
  407081:	fwait
  407082:	punpckhwd mm6,QWORD PTR [edi+0x40]
  407086:	in     eax,dx
  407087:	xchg   esp,eax
  407088:	mov    esp,0xde7103d4
  40708d:	lds    edx,FWORD PTR [ebp-0xc1d7d78]
  407093:	add    BYTE PTR [ebp+0x35f3b7c3],cl
  407099:	mov    ds,WORD PTR [ebp+0x65]
  40709c:	xchg   edx,eax
  40709d:	mov    cl,0x5f
  40709f:	adc    eax,0xcbe9ad4
  4070a4:	(bad)  
  4070a5:	mov    edi,0xc686f7dd
  4070aa:	(bad)  
  4070ab:	icebp  
  4070ac:	inc    ebx
  4070ad:	pop    eax
  4070ae:	cmp    esi,esi
  4070b0:	pop    ax
  4070b2:	mov    ebp,DWORD PTR [esi-0xb0936d8]
  4070b8:	inc    esp
  4070b9:	in     eax,dx
  4070ba:	cmp    ch,cl
  4070bc:	mov    dl,0x7f
  4070be:	scas   al,BYTE PTR es:[edi]
  4070bf:	sbb    eax,0xc7a2f1e5
  4070c4:	shl    BYTE PTR [ebx-0x57],0xce
  4070c8:	mov    edx,0x9dcc19d9
  4070cd:	ins    DWORD PTR es:[edi],dx
  4070ce:	test   BYTE PTR [eax+0x641361e5],al
  4070d4:	ja     0x4070fc
  4070d6:	scas   eax,DWORD PTR es:[edi]
  4070d7:	xor    eax,DWORD PTR [edx]
  4070d9:	bound  edx,QWORD PTR [eax+ebp*8+0x726adfc0]
  4070e0:	out    0x2a,al
  4070e2:	(bad)  
  4070e4:	jmp    0x3889:0x883731d2
  4070eb:	cmp    esi,DWORD PTR [esi-0x61]
  4070ee:	dec    ebp
  4070ef:	shl    DWORD PTR [eax-0x1a],0x2b
  4070f3:	pushf  
  4070f4:	fwait
  4070f5:	aad    0xbe
  4070f7:	jecxz  0x4070d3
  4070f9:	push   0x7d9b5548
  4070fe:	ins    BYTE PTR es:[edi],dx
  4070ff:	add    esi,DWORD PTR [esp+ebp*1-0x229145dc]
  407106:	outs   dx,DWORD PTR ds:[esi]
  407107:	adc    eax,0x44c06b13
  40710c:	int3   
  40710d:	sahf   
  40710e:	mov    ebp,0xaec9bd22
  407113:	movzx  eax,bh
  407116:	mov    ecx,0x1af3d683
  40711b:	mov    ebx,0x49255cab
  407120:	retf   0x4ea5
  407123:	aaa    
  407124:	sub    ch,BYTE PTR [ebp-0x60472f45]
  40712a:	cwde   
  40712b:	sbb    ebx,DWORD PTR [edx+eax*4-0x52]
  40712f:	jmp    0x4070d6
  407131:	ins    DWORD PTR es:[edi],dx
  407132:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407133:	inc    ebx
  407134:	jmp    0xac67:0xcedf29ab
  40713b:	mov    ecx,0xbb4436f7
  407140:	sub    eax,0xd4ea444a
  407145:	mov    edi,0xa244c90e
  40714a:	adc    al,0x98
  40714c:	jns    0x407167
  40714e:	rcl    DWORD PTR [ebx],0x3
  407151:	xlat   BYTE PTR ds:[ebx]
  407152:	mov    edi,DWORD PTR [ebp-0x8]
  407155:	lea    edx,[edx+edi*1+0x32729f]
  40715c:	mov    DWORD PTR [ebp-0x8],edx
  40715f:	mov    edx,DWORD PTR [ebp-0x20]
  407162:	xor    edx,eax
  407164:	mov    edi,0xffcd8d61
  407169:	sub    edi,edx
  40716b:	add    edi,DWORD PTR [ebp-0x10]
  40716e:	jmp    0x4072c0
  407173:	sub    ebp,DWORD PTR [edi+0x59798f79]
  407179:	jmp    0x9398b939
  40717e:	sub    al,0x71
  407180:	sub    eax,0x1b37881d
  407185:	jle    0x407205
  407187:	and    edi,DWORD PTR [edi+0x7e]
  40718a:	jle    0x407198
  40718c:	gs push 0x8
  40718f:	(bad)  
  407190:	mov    esi,0xdca71cb4
  407195:	xor    ecx,edi
  407197:	in     eax,0x73
  407199:	enter  0xebc8,0x64
  40719d:	les    ebx,FWORD PTR [ebp-0x64]
  4071a0:	hlt    
  4071a1:	outs   dx,BYTE PTR ds:[esi]
  4071a2:	push   ds
  4071a3:	(bad)  
  4071a5:	cmc    
  4071a6:	ds inc di
  4071a9:	ins    DWORD PTR es:[edi],dx
  4071aa:	xchg   ebp,eax
  4071ab:	xchg   edx,eax
  4071ac:	loope  0x40714b
  4071ae:	out    0x24,al
  4071b0:	inc    ebp
  4071b1:	xchg   ecx,eax
  4071b2:	sub    eax,0xc4050cf1
  4071b7:	jecxz  0x407181
  4071b9:	mov    ebx,0x393971f
  4071be:	sub    esi,edi
  4071c0:	cmc    
  4071c1:	fwait
  4071c2:	or     cl,BYTE PTR [ecx+0x4aa4fb60]
  4071c8:	aaa    
  4071c9:	inc    edx
  4071ca:	and    al,0x9e
  4071cc:	pop    ecx
  4071cd:	jno    0x407163
  4071cf:	and    al,0xed
  4071d1:	jecxz  0x407162
  4071d3:	ins    BYTE PTR es:[edi],dx
  4071d4:	jbe    0x40724e
  4071d6:	cmp    BYTE PTR [edx],dh
  4071d8:	test   ecx,edi
  4071da:	ror    BYTE PTR [ebx-0x56],0x94
  4071de:	retf   
  4071df:	jle    0x4071d2
  4071e1:	cmp    esp,DWORD PTR [edi]
  4071e3:	cdq    
  4071e4:	xchg   edi,eax
  4071e5:	or     cl,BYTE PTR [ebx+0x1aa5c0d4]
  4071eb:	sahf   
  4071ec:	fsub   QWORD PTR [ebx]
  4071ee:	cmp    BYTE PTR [esi+edx*8],dh
  4071f1:	mov    ecx,0xf5dd934b
  4071f6:	or     eax,0xdabf5c
  4071fb:	fnsave [ebp+0x7ec88471]
  407201:	and    edx,DWORD PTR [ebx]
  407203:	nop
  407204:	leave  
  407205:	out    dx,al
  407206:	fcom   QWORD PTR [ebx-0x110bd1]
  40720c:	add    al,0xa2
  40720e:	js     0x407289
  407210:	xchg   edi,eax
  407211:	ficomp WORD PTR [eax-0x54434887]
  407217:	dec    ebx
  407218:	mov    edx,0xfd236c30
  40721d:	pop    edx
  40721e:	adc    edi,esi
  407220:	arpl   WORD PTR [ebx],bp
  407222:	sub    edi,esp
  407224:	mov    bl,0xb1
  407226:	inc    ebx
  407227:	call   0xdf78:0xfaab8fad
  40722e:	mov    ch,BYTE PTR [edi-0x47]
  407231:	rol    BYTE PTR [ecx-0x54],1
  407234:	iret   
  407235:	and    bh,BYTE PTR [edi+0x6d04bed1]
  40723b:	aad    0x54
  40723d:	mov    ah,0xc9
  40723f:	cld    
  407240:	jae    0x407256
  407242:	pop    ecx
  407243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407244:	pop    ecx
  407245:	(bad)  
  407246:	mov    al,0x6a
  407248:	int3   
  407249:	data16 sar BYTE PTR [ebx],0xed
  40724d:	popa   
  40724e:	nop
  40724f:	xchg   edi,eax
  407250:	sbb    eax,0x3ab22108
  407255:	cmp    BYTE PTR [edi],0xa5
  407258:	pop    ecx
  407259:	lods   eax,DWORD PTR ds:[esi]
  40725a:	lock mov ecx,0x1c52147a
  407260:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407261:	sar    DWORD PTR [esi],0xe7
  407264:	fldenv [ebp+0x1434eb60]
  40726a:	dec    edx
  40726b:	(bad)  
  40726c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40726d:	mov    ds:0x6c59703a,al
  407272:	div    DWORD PTR [ecx-0x5e]
  407275:	jp     0x4072bd
  407277:	lahf   
  407278:	ficomp DWORD PTR [edx]
  40727a:	push   ebp
  40727b:	sub    bl,BYTE PTR [ebp+ecx*2+0xfc5761d]
  407282:	int3   
  407283:	dec    edi
  407284:	xor    eax,0x4e42f6d4
  407289:	xchg   ebp,eax
  40728a:	lea    esp,[edx+ebx*4-0x43]
  40728e:	pop    ebp
  40728f:	inc    esi
  407290:	sbb    DWORD PTR [ecx+0x2e],esi
  407293:	rcl    ebp,cl
  407295:	sub    eax,0x211ce4ac
  40729a:	push   ecx
  40729b:	jb     0x407271
  40729d:	call   0x38a4:0xf9df1ce7
  4072a4:	inc    edx
  4072a5:	adc    eax,0x7e1b4cb5
  4072aa:	test   BYTE PTR [ecx],bh
  4072ac:	cmp    esp,0x22
  4072af:	daa    
  4072b0:	sbb    ebp,DWORD PTR [ecx+ecx*4+0x3166880a]
  4072b7:	xchg   ebx,esp
  4072b9:	pop    esp
  4072ba:	xlat   BYTE PTR ds:[ebx]
  4072bb:	xor    al,0xf
  4072be:	and    esp,DWORD PTR [edi]
  4072c0:	mov    edx,DWORD PTR [ebp-0x20]
  4072c3:	mov    ebx,DWORD PTR [ebp-0x8]
  4072c6:	xor    edx,eax
  4072c8:	add    edx,ecx
  4072ca:	imul   edx,ebx
  4072cd:	cmp    edx,edi
  4072cf:	jbe    0x40619a
  4072d5:	pop    ebx
  4072d6:	jmp    0x407428
  4072db:	push   ds
  4072dc:	cld    
  4072dd:	dec    edi
  4072de:	or     ebp,DWORD PTR [ebp-0x27]
  4072e1:	jp     0x40728c
  4072e3:	adc    edi,0xf11c0f0c
  4072e9:	xchg   ebx,eax
  4072ea:	leave  
  4072eb:	clc    
  4072ec:	sbb    BYTE PTR [esi+0x7e],bh
  4072ef:	and    edi,DWORD PTR [edi+0x7e]
  4072f2:	jle    0x4072ee
  4072f4:	xor    al,0x4b
  4072f6:	int    0xa6
  4072f8:	sbb    al,0x1d
  4072fa:	jae    0x407295
  4072fc:	(bad)  
  4072fd:	shl    BYTE PTR [edi],0x7f
  407300:	xchg   ebp,eax
  407301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407302:	cmp    BYTE PTR [ecx-0x40],0x28
  407306:	lahf   
  407307:	xlat   BYTE PTR ds:[ebx]
  407308:	inc    eax
  407309:	pop    edx
  40730a:	in     al,dx
  40730b:	xchg   ebx,eax
  40730c:	lds    ebp,FWORD PTR [edx]
  40730e:	jle    0x7c84aa1f
  407314:	addr16 mov ebx,0x9d97f013
  40731a:	push   ecx
  40731b:	push   cs
  40731c:	je     0x4072fe
  40731e:	out    0x25,eax
  407320:	imul   eax,DWORD PTR [edi+0xc6843db],0x19
  407327:	xchg   DWORD PTR [edi-0x52fe5ecc],ebp
  40732d:	and    edi,DWORD PTR [ecx]
  40732f:	and    BYTE PTR [ebx-0x4354ac66],dl
  407335:	fld    TBYTE PTR [edx+ecx*2+0x65]
  407339:	push   ss
  40733a:	jecxz  0x4073a1
  40733c:	ror    al,0x37
  40733f:	adc    ecx,DWORD PTR [edi-0x10]
  407342:	xor    edx,edi
  407344:	in     al,0xab
  407346:	fbld   TBYTE PTR [ecx+0x68]
  407349:	cmp    BYTE PTR [esi+0x70c6c22d],cl
  40734f:	push   ds
  407350:	or     BYTE PTR [esi],ah
  407352:	sbb    DWORD PTR [edi+0x6ca1524f],ebx
  407358:	fs push edx
  40735a:	cmp    eax,0xaa0a4735
  40735f:	ss stos DWORD PTR es:[edi],eax
  407361:	sti    
  407362:	sub    BYTE PTR [edi+0x7d1dc963],dl
  407368:	fs clc 
  40736a:	scas   eax,DWORD PTR es:[edi]
  40736b:	push   edx
  40736c:	scas   eax,DWORD PTR es:[edi]
  40736d:	test   eax,0x3770db1
  407372:	sub    ebx,DWORD PTR [eax-0x63c7ed2a]
  407378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407379:	(bad)  
  40737a:	mov    dh,0xc5
  40737c:	pop    edi
  40737d:	jl     0x407344
  40737f:	pop    ecx
  407380:	mov    ecx,0x6d779f96
  407385:	pop    si
  407387:	js     0x4073a1
  407389:	inc    edx
  40738a:	ins    DWORD PTR es:[edi],dx
  40738b:	sub    al,ah
  40738d:	fistp  WORD PTR [eax+eiz*4+0x63f115c3]
  407394:	mov    bl,0xa7
  407396:	jle    0x407368
  407398:	jne    0x407394
  40739a:	adc    eax,0x1360c347
  40739f:	mov    ebp,0xe8a8932b
  4073a4:	mov    ebx,DWORD PTR [ebx-0x4596d7b8]
  4073aa:	sub    BYTE PTR [eax+0x74],0x81
  4073ae:	cs jg  0x407411
  4073b1:	or     DWORD PTR [esi+0x1b],edx
  4073b4:	sub    eax,0x2230613e
  4073b9:	imul   esi,DWORD PTR [edx-0x69717fac],0x58
  4073c0:	nop
  4073c1:	hlt    
  4073c2:	sbb    DWORD PTR [esi-0x34],0xffffffd1
  4073c6:	sub    bl,BYTE PTR [ebx]
  4073c8:	pop    ebp
  4073c9:	js     0x407429
  4073cb:	(bad)  
  4073cc:	arpl   WORD PTR [ecx],cx
  4073ce:	mov    bh,0x7f
  4073d0:	ficomp DWORD PTR [eax-0x54ab41b7]
  4073d6:	(bad)  
  4073d7:	xor    ecx,edi
  4073d9:	inc    ecx
  4073da:	(bad)  
  4073db:	das    
  4073dc:	inc    eax
  4073dd:	push   cs
  4073de:	xchg   edi,eax
  4073df:	pop    ebx
  4073e0:	sbb    eax,0x2ea07b8c
  4073e5:	test   BYTE PTR [ebx-0x7d],0xa
  4073e9:	add    ebx,esi
  4073eb:	cmp    BYTE PTR [esi+edi*8+0x27],dh
  4073ef:	push   edx
  4073f0:	inc    esp
  4073f1:	cwde   
  4073f2:	xor    al,0xa3
  4073f4:	retf   0x9aca
  4073f7:	pop    ds
  4073f8:	fnstenv [ebx]
  4073fa:	addr16 xchg ebp,eax
  4073fc:	int3   
  4073fd:	mov    dh,0x55
  4073ff:	pop    ecx
  407400:	add    DWORD PTR [ecx+edi*8],ebp
  407403:	adc    BYTE PTR [eax],0x17
  407406:	push   esi
  407407:	nop
  407408:	sbb    al,0x68
  40740a:	and    al,BYTE PTR [esi]
  40740c:	mov    al,ds:0xa8a87fa9
  407411:	fwait
  407412:	push   ss
  407413:	jne    0x407426
  407415:	pusha  
  407416:	add    DWORD PTR [esi+0x47],ebx
  407419:	cld    
  40741a:	jmp    0x96c0:0x549dc7c6
  407421:	or     DWORD PTR [ecx],0xffffff98
  407424:	dec    edi
  407425:	imul   ebp,ebp,0xc2c95fa7
  40742b:	or     BYTE PTR [eax],al
  40742d:	push   ebp
  40742e:	mov    ebp,esp
  407430:	jmp    0x4075bc
  407435:	jb     0x407447
  407437:	test   eax,0x8a95a91d
  40743c:	adc    DWORD PTR [ebp+eax*1-0x3be8d801],edi
  407443:	mov    al,0x3f
  407445:	lods   eax,DWORD PTR ds:[esi]
  407446:	sbb    DWORD PTR [esi+0x7e],edi
  407449:	jmp    0x2abef2cd
  40744e:	mov    ds:0x169c8e00,eax
  407453:	fsub   QWORD PTR [ebp-0x55]
  407456:	pop    es
  407457:	mul    DWORD PTR [eax]
  407459:	sbb    eax,0x8848344b
  40745e:	div    BYTE PTR [ebx]
  407460:	pusha  
  407461:	jecxz  0x407455
  407463:	mov    eax,ds:0x56e0114b
  407468:	xor    ecx,esp
  40746a:	imul   edx,DWORD PTR [eax],0xffffffbc
  40746d:	push   0x9f5da839
  407472:	xor    bl,BYTE PTR [edi-0x2bb3f5b9]
  407478:	mov    eax,DWORD PTR [eax+0x249f3736]
  40747e:	ins    BYTE PTR es:[edi],dx
  40747f:	mov    bh,0x57
  407481:	and    BYTE PTR [ecx-0x4ea88745],ah
  407487:	popf   
  407488:	enter  0x7538,0xb8
  40748c:	data16 and al,dh
  40748f:	cli    
  407490:	sub    ah,ah
  407492:	jno    0x4074e1
  407494:	pop    ebp
  407495:	sbb    cl,bl
  407497:	xchg   edi,eax
  407498:	lds    edx,FWORD PTR [eax+0x1017284b]
  40749e:	jne    0x40744f
  4074a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074a1:	stos   DWORD PTR es:[edi],eax
  4074a2:	jb     0x4074d1
  4074a4:	push   0xd7dd6053
  4074a9:	dec    ebx
  4074aa:	mov    edi,0x10712ee7
  4074af:	outs   dx,DWORD PTR ds:[esi]
  4074b0:	jp     0x40752c
  4074b2:	push   0x728191cf
  4074b7:	xlat   BYTE PTR ds:[ebx]
  4074b8:	sub    DWORD PTR [edx-0x59cfb7fc],ebx
  4074be:	jp     0x407533
  4074c0:	or     eax,0x6d90f4ea
  4074c5:	movups xmm1,XMMWORD PTR [edi]
  4074c8:	push   cs
  4074c9:	(bad)  
  4074ca:	fidivr DWORD PTR [ebp+0xa]
  4074cd:	ins    BYTE PTR es:[edi],dx
  4074ce:	mov    ?,WORD PTR [ecx-0x68]
  4074d1:	adc    al,0x15
  4074d3:	rcr    edx,1
  4074d5:	xor    al,0x6b
  4074d7:	sbb    BYTE PTR [ebx+0x1f],al
  4074da:	test   al,0xdd
  4074dc:	jne    0x407492
  4074de:	into   
  4074df:	aad    0x1c
  4074e1:	and    al,0x82
  4074e3:	cmc    
  4074e4:	popa   
  4074e5:	inc    edx
  4074e6:	push   0x59
  4074e8:	xlat   BYTE PTR ds:[ebx]
  4074e9:	adc    dl,cl
  4074eb:	int3   
  4074ec:	(bad)  
  4074ed:	push   ecx
  4074ee:	test   eax,0x6b28b607
  4074f3:	int3   
  4074f4:	mov    al,ds:0xd3365512
  4074f9:	fs sahf 
  4074fb:	(bad)  
  4074fc:	push   ebx
  4074fd:	retf   0xc583
  407500:	test   DWORD PTR [esi+0x2e],ebp
  407503:	test   eax,0x807b5620
  407508:	jg     0x4074f8
  40750a:	jmp    0x87d47d22
  40750f:	adc    esi,DWORD PTR [ebx-0x2441e739]
  407515:	add    dl,BYTE PTR [ecx+0x47]
  407518:	dec    edi
  407519:	adc    eax,ebx
  40751b:	xor    esp,edi
  40751d:	xchg   edi,eax
  40751e:	adc    al,0xec
  407520:	xchg   DWORD PTR [esi+0x4efd3541],ecx
  407526:	mov    edi,0x37e66f2b
  40752b:	in     al,dx
  40752c:	push   esp
  40752d:	jmp    0x407534
  40752f:	ret    0xb8ef
  407532:	dec    ebx
  407533:	add    ah,0x48
  407536:	test   BYTE PTR ds:0x2f9d92a,dh
  40753c:	call   FWORD PTR [ecx-0x656adbb6]
  407542:	loop   0x4074fb
  407544:	(bad)  
  407545:	jbe    0x40756e
  407547:	div    BYTE PTR [ebx-0x7b835bbc]
  40754d:	pop    ebp
  40754e:	mov    DWORD PTR [eax-0x1b84e546],ecx
  407554:	xchg   ebp,eax
  407555:	das    
  407556:	mov    BYTE PTR ds:0x3bae93f,cl
  40755c:	jecxz  0x407543
  40755e:	push   esp
  40755f:	jbe    0x4075b8
  407561:	enter  0xe608,0xc8
  407565:	(bad)  
  407566:	cmp    ah,BYTE PTR [edi+0x2d1b3b4e]
  40756c:	sbb    edi,DWORD PTR [esi]
  40756e:	push   cs
  40756f:	mov    eax,esp
  407571:	pop    esi
  407572:	pushf  
  407573:	sub    eax,0x4847ec8f
  407578:	and    BYTE PTR [ebx],0xc5
  40757b:	pop    DWORD PTR [edi+esi*4]
  40757e:	ja     0x4075bb
  407580:	nop
  407581:	push   ds
  407582:	imul   ebx,DWORD PTR [ecx-0x32698405],0x28a9cd80
  40758c:	sbb    esi,DWORD PTR [eax]
  40758e:	and    ebp,DWORD PTR [esi]
  407590:	ret    
  407591:	fcmovnbe st,st(1)
  407593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407594:	stos   BYTE PTR es:[edi],al
  407595:	ins    BYTE PTR es:[edi],dx
  407596:	or     BYTE PTR [eax+ebp*4],dh
  407599:	bound  ebp,QWORD PTR [edi+0x218df587]
  40759f:	cmp    BYTE PTR [ecx],dl
  4075a1:	dec    eax
  4075a2:	js     0x40753f
  4075a4:	mov    DWORD PTR [eax],edi
  4075a6:	push   edx
  4075a7:	pop    ecx
  4075a8:	mov    WORD PTR [eax+edi*2],?
  4075ab:	jae    0x407554
  4075ad:	outs   dx,DWORD PTR ds:[esi]
  4075ae:	mov    ah,0x5a
  4075b0:	fimul  DWORD PTR [ebp+0x1d]
  4075b3:	pop    ebp
  4075b4:	xor    esi,DWORD PTR [esi-0x19138c0]
  4075ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075bb:	cli    
  4075bc:	push   ecx
  4075bd:	push   ecx
  4075be:	and    DWORD PTR ds:0x41abce,0x0
  4075c8:	jmp    0x4075da
  4075cd:	mov    edx,DWORD PTR ds:0x41abce
  4075d3:	inc    edx
  4075d4:	mov    DWORD PTR ds:0x41abce,edx
  4075da:	cmp    DWORD PTR ds:0x41abce,0x1e
  4075e1:	jae    0x407619
  4075e7:	cmp    DWORD PTR ds:0x41abce,0x20
  4075ee:	jne    0x40760a
  4075f4:	push   DWORD PTR [ebp-0x28]
  4075f7:	push   0x365e
  4075fc:	push   DWORD PTR [ebp-0x18]
  4075ff:	push   0x4c62
  407604:	call   DWORD PTR ds:0x40d004
  40760a:	jmp    0x4075cd
  40760f:	xor    DWORD PTR ds:0x412374,0x3a52
  407619:	mov    eax,0xf89c8538
  40761e:	sub    ecx,ecx
  407620:	mov    DWORD PTR [ebp-0x8],eax
  407623:	and    DWORD PTR ds:0x41abd6,0x0
  40762d:	jmp    0x40763f
  407632:	mov    ecx,DWORD PTR ds:0x41abd6
  407638:	inc    ecx
  407639:	mov    DWORD PTR ds:0x41abd6,ecx
  40763f:	cmp    DWORD PTR ds:0x41abd6,0x1e
  407646:	jae    0x4076c6
  40764c:	cmp    DWORD PTR ds:0x41abd6,0x2d
  407653:	jne    0x40765f
  407659:	call   DWORD PTR ds:0x40d1d8
  40765f:	jmp    0x407632
  407664:	and    DWORD PTR ds:0x417e45,0x0
  40766e:	jmp    0x407680
  407673:	mov    edx,DWORD PTR ds:0x417e45
  407679:	inc    edx
  40767a:	mov    DWORD PTR ds:0x417e45,edx
  407680:	cmp    DWORD PTR ds:0x417e45,0x1b
  407687:	jae    0x4076c6
  40768d:	cmp    DWORD PTR ds:0x417e45,0x8
  407694:	jne    0x4076a5
  40769a:	push   0x41abea
  40769f:	call   DWORD PTR ds:0x40d1dc
  4076a5:	cmp    DWORD PTR ds:0x417e45,0x7
  4076ac:	jne    0x4076c1
  4076b2:	xor    edx,edx
  4076b4:	add    edx,DWORD PTR ds:0x417e45
  4076ba:	inc    edx
  4076bb:	mov    DWORD PTR ds:0x417e45,edx
  4076c1:	jmp    0x407673
  4076c6:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  4076cd:	mov    edx,DWORD PTR [ebp-0x8]
  4076d0:	push   esi
  4076d1:	adc    esi,ecx
  4076d3:	mov    ecx,0x7510859
  4076d8:	xor    edx,ecx
  4076da:	mov    esi,0x32729f
  4076df:	push   edi
  4076e0:	mov    edi,DWORD PTR [ebp+0x10]
  4076e3:	add    edx,esi
  4076e5:	cmp    edi,edx
  4076e7:	jmp    0x407873
  4076ec:	iret   
  4076ed:	in     eax,0x74
  4076ef:	push   edx
  4076f0:	adc    al,0x63
  4076f2:	jns    0x40776d
  4076f4:	int    0x3e
  4076f6:	les    ebp,FWORD PTR [esi+0x21]
  4076f9:	or     ah,BYTE PTR [edi-0x61]
  4076fc:	sbb    al,0x1f
  4076fe:	jle    0x40777e
  407700:	jmp    0xdbbef584
  407705:	mov    eax,ds:0x600ddf8
  40770a:	aam    0x28
  40770c:	push   ebx
  40770d:	pop    ebx
  40770e:	in     eax,dx
  40770f:	inc    esi
  407710:	inc    esi
  407711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407712:	jae    0x407753
  407714:	adc    BYTE PTR [ebp-0x6d],bh
  407717:	lds    esp,FWORD PTR [edi+ecx*4+0x7a]
  40771b:	rcl    BYTE PTR [esi-0x2803977e],cl
  407721:	fcom   DWORD PTR [ecx-0x6865d3d7]
  407727:	les    esi,FWORD PTR [ebx]
  407729:	push   esp
  40772a:	call   DWORD PTR [eax-0x15]
  40772d:	jle    0x407733
  40772f:	mov    ch,0x79
  407731:	cmp    DWORD PTR [edx-0x1c],edx
  407734:	lock add eax,0x202075dd
  40773a:	(bad)  
  40773b:	in     eax,dx
  40773c:	mov    edi,0xef8cd9c0
  407741:	fmul   st,st(2)
  407743:	fst    st(6)
  407745:	addr16 sahf 
  407747:	bound  edi,QWORD PTR [esi-0x10]
  40774a:	daa    
  40774b:	rol    BYTE PTR [ecx+0x4fb3a93a],cl
  407751:	mov    edx,0x14e59392
  407756:	mov    cl,BYTE PTR [edi]
  407758:	fndisi(8087 only) 
  40775a:	and    al,0x0
  40775c:	xchg   esp,eax
  40775d:	push   edx
  40775e:	pop    eax
  40775f:	ins    BYTE PTR es:[edi],dx
  407760:	jge    0x407777
  407762:	ficom  DWORD PTR [edi-0x2e066311]
  407768:	inc    esi
  407769:	ret    0xfac
  40776c:	jnp    0x407702
  40776e:	jecxz  0x40776f
  407770:	dec    ecx
  407771:	test   DWORD PTR [ecx+0x76],eax
  407774:	and    DWORD PTR [esi+0x7b],ecx
  407777:	enter  0x384a,0x24
  40777b:	pop    ds
  40777c:	or     esp,DWORD PTR [ebp-0x32]
  40777f:	loop   0x40777a
  407781:	pop    es
  407782:	jmp    0x373e:0xd05e84a4
  407789:	ss jmp 0x4e4d0c3a
  40778f:	push   edi
  407790:	mov    ebx,0xa330f43e
  407795:	jg     0x40773e
  407797:	imul   esi,DWORD PTR [ebp+edi*4+0x7a],0xffffffa6
  40779c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40779d:	fdivr  QWORD PTR [ebp+0x10]
  4077a0:	xchg   BYTE PTR [eax-0x5ca4fe2a],dl
  4077a6:	mov    bl,0xb7
  4077a8:	xor    DWORD PTR [edx+0x55],0x1975f2f3
  4077af:	or     eax,0x28094447
  4077b4:	bound  eax,QWORD PTR [edx+0x28]
  4077b7:	cs addr16 and al,0x45
  4077bb:	xchg   DWORD PTR [ebx],ecx
  4077bd:	jnp    0x407818
  4077bf:	sub    al,0xe6
  4077c1:	xor    DWORD PTR ds:0xf28c0f63,edx
  4077c7:	out    dx,al
  4077c8:	cs into 
  4077ca:	scas   al,BYTE PTR es:[edi]
  4077cb:	pop    ds
  4077cc:	cmp    al,0x3f
  4077ce:	pop    ebp
  4077cf:	adc    eax,0x9704371f
  4077d4:	sbb    al,0xca
  4077d6:	inc    esp
  4077d7:	mov    DWORD PTR ds:0x24647534,esp
  4077dd:	cmp    cl,cl
  4077df:	xor    BYTE PTR [eax],dh
  4077e1:	ins    DWORD PTR es:[edi],dx
  4077e2:	inc    ebx
  4077e3:	test   BYTE PTR [eax+0x4341f4c9],dl
  4077e9:	(bad)  
  4077ea:	inc    edx
  4077ec:	dec    ebx
  4077ed:	sub    ecx,DWORD PTR [eax]
  4077ef:	fs jmp 0x5fb1:0xfac98031
  4077f7:	test   eax,0x897335d1
  4077fc:	outs   dx,DWORD PTR ds:[esi]
  4077fd:	aad    0x87
  4077ff:	das    
  407800:	add    ah,BYTE PTR [esi+esi*1]
  407803:	fstp   DWORD PTR fs:[edx-0x1a]
  407807:	iret   
  407808:	aaa    
  407809:	int3   
  40780a:	shl    BYTE PTR ds:[esi+0x65],0xa4
  40780f:	xor    esi,ebp
  407811:	call   0x1e332301
  407816:	jae    0x407828
  407818:	push   es
  407819:	mov    al,ds:0xef14f6f6
  40781e:	pop    eax
  40781f:	mov    ecx,0x20765779
  407824:	push   0x6ad0932a
  407829:	cmp    eax,0xbe9a4c0e
  40782e:	push   0x65
  407830:	jecxz  0x407823
  407832:	or     DWORD PTR [ebp-0x3564ce6],0x2
  407839:	sar    BYTE PTR [esi],cl
  40783b:	int    0x69
  40783d:	xchg   bl,bh
  40783f:	inc    ecx
  407840:	xlat   BYTE PTR ds:[ebx]
  407841:	test   eax,0xb6d5a887
  407846:	pushf  
  407847:	in     eax,dx
  407848:	retf   
  407849:	xchg   edi,eax
  40784a:	jl     0x40786a
  40784c:	push   ebp
  40784d:	xlat   BYTE PTR cs:[ebx]
  40784f:	inc    ebx
  407850:	test   BYTE PTR [esi-0x24],0xfa
  407854:	pop    esp
  407855:	jmp    edx
  407857:	ss out 0x3a,al
  40785a:	in     al,dx
  40785b:	test   dl,0xa9
  40785e:	add    dh,BYTE PTR [ebx]
  407860:	cmp    DWORD PTR [ebx+0x5f870071],esp
  407866:	dec    ebp
  407867:	jge    0x40783f
  407869:	ret    
  40786a:	and    al,0x73
  40786c:	dec    ebp
  40786d:	jge    0x40788e
  40786f:	push   ebp
  407870:	daa    
  407871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407872:	fisttp WORD PTR [edi]
  407874:	test   BYTE PTR [ebx-0x16fffffd],cl
  40787a:	xchg   DWORD PTR [ecx],eax
  40787c:	add    BYTE PTR [eax],al
  40787e:	in     eax,dx
  40787f:	(bad)  
  407880:	pop    esi
  407881:	jg     0x4078d7
  407883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407884:	ins    DWORD PTR es:[edi],dx
  407885:	in     eax,0x5e
  407887:	imul   eax,DWORD PTR [esi-0x51bfdd74],0xb
  40788e:	(bad)  
  40788f:	sbb    al,0x7e
  407891:	jle    0x40787c
  407893:	jg     0x407913
  407895:	jle    0x4078c4
  407897:	mov    dh,0xb9
  407899:	xchg   esi,esp
  40789b:	(bad)  
  40789c:	shr    DWORD PTR [edx],cl
  40789e:	xlat   BYTE PTR ds:[ebx]
  40789f:	xchg   edi,eax
  4078a0:	jmp    0x5f3d:0xfd97b61b
  4078a7:	adc    cl,dh
  4078a9:	xchg   ecx,eax
  4078aa:	ficomp WORD PTR [edx]
  4078ac:	inc    edx
  4078ad:	ds nop
  4078af:	xor    eax,0x9098477c
  4078b4:	aas    
  4078b5:	hlt    
  4078b6:	mov    dh,ah
  4078b8:	pop    eax
  4078b9:	js     0x40789b
  4078bb:	aad    0xbd
  4078bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078be:	jnp    0x40787d
  4078c0:	(bad)  
  4078c1:	cdq    
  4078c2:	inc    esi
  4078c3:	mov    bl,0x2e
  4078c5:	in     eax,dx
  4078c6:	stos   BYTE PTR es:[edi],al
  4078c7:	dec    ebp
  4078c8:	(bad)  
  4078c9:	fsub   QWORD PTR [edx]
  4078cb:	repz cmp al,BYTE PTR [esi+0x3ce37157]
  4078d2:	lahf   
  4078d3:	iret   
  4078d4:	sbb    BYTE PTR [edi],bl
  4078d6:	inc    ebp
  4078d7:	(bad)  
  4078d8:	leave  
  4078d9:	inc    ebp
  4078da:	int    0x5b
  4078dc:	xchg   ebp,eax
  4078dd:	retf   0x1ea2
  4078e0:	into   
  4078e1:	push   ecx
  4078e2:	xchg   ecx,eax
  4078e3:	xlat   BYTE PTR ds:[ebx]
  4078e4:	outs   dx,DWORD PTR ds:[esi]
  4078e5:	(bad)  
  4078e7:	aas    
  4078e8:	and    BYTE PTR [ecx+0x2a],bh
  4078eb:	pop    edx
  4078ec:	cwde   
  4078ed:	adc    al,0x6
  4078ef:	mov    WORD PTR [ecx],fs
  4078f1:	inc    esp
  4078f2:	xchg   ebx,eax
  4078f3:	mov    edx,0x5aa0637a
  4078f8:	clc    
  4078f9:	or     DWORD PTR [ebp+0x21718665],edi
  4078ff:	add    DWORD PTR [edx],esp
  407901:	not    DWORD PTR [esi+0xf]
  407904:	xor    eax,0x52b1280a
  407909:	hlt    
  40790a:	(bad)  [ecx+0x36]
  40790d:	mov    esi,0xe1152a5a
  407912:	inc    esp
  407913:	xchg   DWORD PTR [ebp-0x5f533520],edi
  407919:	and    eax,0x3cb9bd6b
  40791e:	mov    ah,0xe7
  407920:	jecxz  0x40793a
  407922:	xchg   esi,eax
  407923:	mov    bl,0x6d
  407925:	stc    
  407926:	sbb    DWORD PTR [ecx-0x1a],edi
  407929:	test   al,0x20
  40792b:	pop    ss
  40792c:	(bad)  
  40792e:	bound  edx,QWORD PTR [edx-0x28]
  407931:	or     ebp,esp
  407933:	les    edx,FWORD PTR [esi-0x705dade1]
  407939:	dec    ecx
  40793a:	shl    DWORD PTR [edx+ebx*1+0x8942389],0xe5
  407942:	push   es
  407943:	out    dx,al
  407944:	mov    ah,al
  407946:	push   edx
  407947:	pusha  
  407948:	pop    ss
  407949:	xchg   BYTE PTR [ebp*2+0x25402a1],bl
  407950:	push   0x31
  407952:	jg     0x407907
  407954:	and    ch,BYTE PTR [esi]
  407956:	lds    ebp,FWORD PTR [ecx]
  407958:	push   sp
  40795a:	push   edx
  40795b:	sub    BYTE PTR [ebx+0x7],0x22
  40795f:	outs   dx,DWORD PTR ds:[esi]
  407960:	xlat   BYTE PTR ds:[ebx]
  407961:	mov    dl,0x11
  407963:	xor    al,0xed
  407965:	mov    eax,ds:0xf7b66364
  40796a:	ret    
  40796b:	jno    0x4079b9
  40796d:	mov    dl,0xa8
  40796f:	in     al,dx
  407970:	out    dx,al
  407971:	mov    cl,0x83
  407973:	fsubr  DWORD PTR ds:0x40a54e5b
  407979:	mov    eax,0xc855cb01
  40797e:	ror    BYTE PTR [ecx+0x6ca8b57f],0x7a
  407985:	outs   dx,BYTE PTR ds:[esi]
  407986:	inc    esi
  407987:	into   
  407988:	outs   dx,BYTE PTR ds:[esi]
  407989:	test   DWORD PTR [esi-0x5c],0xe6431fb
  407990:	pop    esp
  407991:	sub    eax,0xada4e573
  407996:	ja     0x4079cc
  407998:	add    DWORD PTR [ebx-0x42cfe16b],ebp
  40799e:	cmovp  esi,DWORD PTR [ecx]
  4079a1:	imul   ebx,DWORD PTR [ebp+eiz*4-0x6f3c58a1],0x69550165
  4079ac:	jmp    0x407a1c
  4079ae:	je     0x4079fb
  4079b0:	ds dec ebx
  4079b2:	rol    BYTE PTR [ebx+0x7a],1
  4079b5:	loopne 0x4079bb
  4079b7:	add    ch,BYTE PTR ds:0x52252cdf
  4079bd:	xlat   BYTE PTR ds:[ebx]
  4079be:	inc    ecx
  4079bf:	div    BYTE PTR [eax+0x38788396]
  4079c5:	sub    cl,bl
  4079c7:	mov    ecx,0x61759693
  4079cc:	mov    DWORD PTR [eax+0x2cb11b4d],ebp
  4079d2:	das    
  4079d3:	mov    WORD PTR [esp+edx*2-0x2e],ss
  4079d7:	pop    edx
  4079d8:	jmp    0xfcff:0xdaf638af
  4079df:	outs   dx,BYTE PTR ds:[esi]
  4079e0:	retf   
  4079e1:	ret    
  4079e2:	push   edx
  4079e3:	adc    eax,0x9c9f01c5
  4079e8:	jmp    0xd241:0xd05679bc
  4079ef:	xor    dh,BYTE PTR [ebx-0x3a748287]
  4079f5:	dec    esi
  4079f6:	pop    ds
  4079f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079f8:	sub    BYTE PTR [edi-0x3e7ee4b],ah
  4079fe:	inc    eax
  4079ff:	jnp    0x407a3f
  407a01:	mov    edx,0x8b90ba51
  407a06:	push   ebp
  407a07:	clc    
  407a08:	mov    eax,DWORD PTR [ebp-0x4]
  407a0b:	xor    eax,ecx
  407a0d:	mov    edi,0xffcd8d61
  407a12:	sub    edi,eax
  407a14:	jmp    0x407ba0
  407a19:	les    edi,FWORD PTR [eax]
  407a1b:	add    ch,BYTE PTR [edi-0x1e]
  407a1e:	gs jns 0x4079da
  407a21:	dec    esp
  407a22:	hlt    
  407a23:	sbb    BYTE PTR [ecx+0x42],0xe2
  407a27:	shl    ah,0x7e
  407a2a:	adc    bh,BYTE PTR [esi+0x7e]
  407a2d:	jmp    0x1bbef8b1
  407a32:	rol    BYTE PTR [esi],cl
  407a34:	addr16 dec esp
  407a36:	xchg   ecx,eax
  407a37:	stos   DWORD PTR es:[edi],eax
  407a38:	daa    
  407a39:	jg     0x407a2c
  407a3b:	mov    eax,gs
  407a3d:	repnz es aam 0xbb
  407a41:	jne    0x407ab7
  407a43:	or     al,0x70
  407a45:	fadd   st,st(2)
  407a47:	aaa    
  407a48:	rcl    DWORD PTR [edx-0x2f],cl
  407a4b:	shl    al,1
  407a4d:	mov    WORD PTR ss:[ebx],?
  407a50:	and    DWORD PTR [eax+0x74],eax
  407a53:	pop    ecx
  407a54:	mov    eax,0x476c05fc
  407a59:	stc    
  407a5a:	sub    ecx,ebp
  407a5c:	and    ah,cl
  407a5e:	mov    ebp,?
  407a60:	mov    cl,0x5d
  407a62:	jmp    0x407a90
  407a64:	sbb    BYTE PTR [edx+0x5d],dh
  407a67:	in     eax,0x2b
  407a69:	xor    BYTE PTR ds:[edx+ebx*4],ah
  407a6d:	mov    dh,0xd
  407a6f:	fcmove st,st(6)
  407a71:	xchg   DWORD PTR [edx+0x50],ebx
  407a74:	jecxz  0x407aa0
  407a76:	sub    cl,bh
  407a78:	inc    ch
  407a7a:	sbb    al,0x42
  407a7c:	enter  0x1ddc,0x2e
  407a80:	or     edx,DWORD PTR [eax]
  407a82:	rcl    DWORD PTR [esi+0x6c],cl
  407a85:	inc    ebx
  407a86:	loop   0x407a6e
  407a88:	stos   BYTE PTR es:[edi],al
  407a89:	mov    ebp,0x627d58c
  407a8e:	mov    dh,0x19
  407a90:	cs (bad) 
  407a93:	inc    eax
  407a94:	mov    ebx,0xd208f8d9
  407a99:	test   DWORD PTR [eax*2-0x2a129a61],edx
  407aa0:	or     eax,eax
  407aa2:	dec    edx
  407aa3:	pop    ebx
  407aa4:	adc    al,0x9a
  407aa6:	imul   eax
  407aa8:	test   eax,0x760037c3
  407aad:	xchg   esp,eax
  407aae:	scas   al,BYTE PTR es:[edi]
  407aaf:	test   DWORD PTR [edi-0x7f],ebx
  407ab2:	jl     0x407a49
  407ab4:	gs dec ecx
  407ab6:	fwait
  407ab7:	ret    0xcccd
  407aba:	or     eax,0x3235e41a
  407abf:	adc    esi,edi
  407ac1:	or     BYTE PTR [edx],bl
  407ac3:	int3   
  407ac4:	(bad)  
  407ac5:	scas   al,BYTE PTR es:[edi]
  407ac6:	inc    ebx
  407ac7:	inc    ebx
  407ac8:	xchg   edx,eax
  407ac9:	call   0xfb2775ca
  407ace:	stos   BYTE PTR es:[edi],al
  407acf:	sub    DWORD PTR [ebx+0x19],esp
  407ad2:	and    edx,edi
  407ad4:	in     eax,0x12
  407ad6:	pop    esp
  407ad7:	push   cs
  407ad8:	inc    esp
  407ad9:	mov    cl,0xf0
  407adb:	mov    eax,ds:0x3bda30c6
  407ae0:	cdq    
  407ae1:	add    eax,0xb994dbb6
  407ae6:	sub    bl,0x95
  407ae9:	scas   eax,DWORD PTR es:[edi]
  407aea:	pop    es
  407aeb:	int    0xd1
  407aed:	dec    eax
  407aee:	jae    0x407a79
  407af0:	xchg   BYTE PTR [ebx],ah
  407af2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407af3:	neg    BYTE PTR [ebx-0x5c]
  407af6:	xor    al,0x71
  407af8:	fmul   st(7),st
  407afa:	out    dx,eax
  407afb:	inc    esi
  407afc:	inc    esi
  407afd:	cmpxchg DWORD PTR [ebx],esp
  407b00:	int    0xb4
  407b02:	rcr    BYTE PTR [edi+0x56],0xdf
  407b06:	cmc    
  407b07:	stos   DWORD PTR es:[edi],eax
  407b08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b09:	into   
  407b0a:	mov    BYTE PTR [bp+di],dl
  407b0d:	jbe    0x407afd
  407b0f:	cmp    ah,BYTE PTR es:[esi+eax*8-0x1fa8de92]
  407b17:	ja     0x407aef
  407b19:	jne    0x407acd
  407b1b:	mov    ebx,0x59e1eae9
  407b20:	jbe    0x407b09
  407b22:	xchg   ebx,eax
  407b23:	adc    BYTE PTR [ecx-0x674e6e59],ah
  407b29:	inc    esi
  407b2a:	pop    edx
  407b2b:	in     al,0xa5
  407b2d:	jmp    0x407b91
  407b2f:	mov    edx,0x8d13807
  407b34:	push   ecx
  407b35:	in     al,0x8e
  407b37:	sbb    al,0x54
  407b39:	(bad)  
  407b3a:	fdiv   QWORD PTR [ebp-0x5ef7c393]
  407b40:	repnz lods al,BYTE PTR fs:[esi]
  407b43:	jl     0x407b0d
  407b45:	jl     0x407b9c
  407b47:	xchg   edx,eax
  407b48:	cwde   
  407b49:	inc    ecx
  407b4a:	xchg   edi,eax
  407b4b:	sbb    esp,DWORD PTR [esi+0x374f3ce2]
  407b51:	inc    edx
  407b52:	pop    ecx
  407b53:	stos   DWORD PTR es:[edi],eax
  407b54:	aad    0xb2
  407b56:	fisttp WORD PTR [ebp+0x20]
  407b59:	call   0xe59f8639
  407b5e:	xor    eax,0x6e217dc6
  407b63:	pusha  
  407b64:	mov    DWORD PTR [eax],ecx
  407b66:	daa    
  407b67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b68:	call   0xf6fa4c46
  407b6d:	sbb    DWORD PTR [eax+0x37],esp
  407b70:	mov    dl,0xa6
  407b72:	scas   ax,WORD PTR es:[edi]
  407b74:	int    0x73
  407b76:	(bad)  
  407b77:	sbb    eax,0xd9fbead8
  407b7c:	fld    TBYTE PTR [ebp+0x39]
  407b7f:	sub    esp,DWORD PTR [esp]
  407b82:	(bad)  
  407b83:	imul   esp,ebp,0x67
  407b86:	shr    DWORD PTR [eax+0x6f59c258],0x84
  407b8d:	push   0xffffffb9
  407b8f:	leave  
  407b90:	stos   BYTE PTR es:[edi],al
  407b91:	push   0xffffff94
  407b93:	in     al,dx
  407b94:	cmc    
  407b95:	icebp  
  407b96:	into   
  407b97:	add    BYTE PTR [esp+eiz*2-0x72692eff],0x8
  407b9f:	inc    esp
  407ba0:	add    edi,DWORD PTR [ebp+0x10]
  407ba3:	xor    edx,ecx
  407ba5:	add    edx,esi
  407ba7:	cmp    edx,edi
  407ba9:	ja     0x407bff
  407baf:	push   ebx
  407bb0:	jmp    0x407bba
  407bb5:	mov    esi,0x32729f
  407bba:	mov    eax,DWORD PTR [ebp-0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x4]
  407bc0:	xor    edi,ecx
  407bc2:	add    edi,esi
  407bc4:	mov    esi,DWORD PTR [ebp+0x8]
  407bc7:	imul   edi,edx
  407bca:	mov    ebx,DWORD PTR [ebp+0xc]
  407bcd:	xor    eax,ecx
  407bcf:	add    eax,edx
  407bd1:	mov    al,BYTE PTR [ebx+eax*1+0x32729f]
  407bd8:	mov    BYTE PTR [edi+esi*1],al
  407bdb:	mov    eax,DWORD PTR [ebp-0x4]
  407bde:	xor    eax,ecx
  407be0:	lea    edx,[edx+eax*1+0x32729f]
  407be7:	mov    eax,DWORD PTR [ebp-0x4]
  407bea:	xor    eax,ecx
  407bec:	mov    esi,0xffcd8d61
  407bf1:	sub    esi,eax
  407bf3:	add    esi,DWORD PTR [ebp+0x10]
  407bf6:	cmp    edx,esi
  407bf8:	jbe    0x407bb5
  407bfe:	pop    ebx
  407bff:	mov    eax,0xf89c853b
  407c04:	pop    edi
  407c05:	pop    esi
  407c06:	leave  
  407c07:	ret    0xc
  407c0a:	push   ebp
  407c0b:	mov    ebp,esp
  407c0d:	mov    eax,ds:0x40d654
  407c12:	mov    DWORD PTR ds:0x417e3d,0x19
  407c1c:	cmp    DWORD PTR ds:0x417e3d,0x0
  407c23:	je     0x407c51
  407c29:	cmp    DWORD PTR ds:0x417e3d,0x1c
  407c30:	jne    0x407c3f
  407c36:	push   DWORD PTR [ebp-0x14]
  407c39:	call   DWORD PTR ds:0x40d368
  407c3f:	mov    ecx,DWORD PTR ds:0x417e3d
  407c45:	dec    ecx
  407c46:	mov    DWORD PTR ds:0x417e3d,ecx
  407c4c:	jmp    0x407c1c
  407c51:	mov    edx,0x32729f
  407c56:	sub    eax,edx
  407c58:	mov    ecx,0x7510859
  407c5d:	and    DWORD PTR ds:0x41237c,0x41abd2
  407c67:	push   esi
  407c68:	and    DWORD PTR ds:0x41abd2,0x0
  407c72:	push   DWORD PTR ds:0x41abd2
  407c78:	pop    esi
  407c79:	inc    esi
  407c7a:	mov    DWORD PTR ds:0x41abd2,esi
  407c80:	cmp    DWORD PTR ds:0x41abd2,0x28
  407c87:	jne    0x407ca2
  407c8d:	push   0x7e5a
  407c92:	push   0x41abde
  407c97:	push   0x1ce6
  407c9c:	call   DWORD PTR ds:0x40d1e0
  407ca2:	cmp    DWORD PTR ds:0x41abd2,0x1f
  407ca9:	jb     0x407c72
  407caf:	xor    DWORD PTR ds:0x412354,ebx
  407cb5:	mov    esi,DWORD PTR [ebp+0xc]
  407cb8:	xor    eax,ecx
  407cba:	jmp    0x407e39
  407cbf:	xchg   ebp,eax
  407cc0:	bound  ecx,QWORD PTR [ecx-0x6a06a6f5]
  407cc6:	pusha  
  407cc7:	jmp    0xced7:0x30fdba79
  407cce:	dec    esp
  407ccf:	jmp    0xdcbefae7
  407cd4:	jg     0x407d54
  407cd6:	jle    0x407d46
  407cd8:	fs sub bl,cl
  407cdb:	dec    ecx
  407cdc:	lea    eax,[edi]
  407cde:	sbb    esp,ebx
  407ce0:	(bad)  
  407ce1:	(bad)  
  407ce2:	repz rdmsr 
  407ce5:	or     al,0x73
  407ce7:	add    BYTE PTR [ecx+0x4641d951],dh
  407ced:	mov    al,0x0
  407cef:	pop    edi
  407cf0:	hlt    
  407cf1:	adc    ebx,DWORD PTR [edx+edi*1+0x1de1ba7c]
  407cf8:	out    0x9b,eax
  407cfa:	jp     0x407d25
  407cfc:	jbe    0x407ca8
  407cfe:	pop    ecx
  407cff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d00:	sub    eax,0x1830dfa3
  407d05:	xchg   ebx,eax
  407d06:	inc    esi
  407d07:	stos   DWORD PTR es:[edi],eax
  407d08:	add    esp,0xd16f6929
  407d0e:	jle    0x407d53
  407d10:	jne    0x407cd8
  407d12:	pop    edx
  407d13:	pop    ds
  407d14:	jl     0x407d86
  407d16:	adc    ebp,eax
  407d18:	push   ds
  407d19:	cli    
  407d1a:	jl     0x407cd6
  407d1c:	arpl   WORD PTR ds:0x6db810a,dx
  407d22:	xchg   esi,eax
  407d23:	loope  0x407d47
  407d25:	sar    BYTE PTR [esi+0x23],1
  407d28:	outs   dx,DWORD PTR ds:[esi]
  407d29:	or     ah,BYTE PTR [ebx]
  407d2b:	mov    esi,0xa4274ec3
  407d30:	ficomp DWORD PTR [esi+0x475fabea]
  407d36:	cmp    eax,0xe59a2ea1
  407d3b:	adc    eax,0xeabfdd8d
  407d40:	shr    BYTE PTR [esi+eax*8-0x4a55b1ab],cl
  407d47:	dec    ebx
  407d48:	mov    cl,0xe5
  407d4a:	push   es
  407d4b:	inc    esp
  407d4c:	lds    edi,FWORD PTR [edi-0xb2f90bc]
  407d52:	les    edi,FWORD PTR [eax]
  407d54:	gs fneni(8087 only) 
  407d57:	xor    al,0x1f
  407d59:	addr16 imul ebx,eax,0x1d
  407d5d:	dec    esi
  407d5e:	jmp    0x2558:0x172d66a5
  407d65:	jae    0x407d40
  407d67:	xchg   DWORD PTR [esi+0x4ef4a0ba],ebx
  407d6d:	fadd   QWORD PTR [esi+0xf]
  407d70:	jg     0x407d51
  407d72:	inc    esp
  407d73:	add    DWORD PTR [edi+0x61],eax
  407d76:	lods   eax,DWORD PTR ds:[esi]
  407d77:	sub    BYTE PTR [esi],dh
  407d79:	lock jae 0x407de5
  407d7c:	xor    ecx,edx
  407d7e:	or     ebx,esi
  407d80:	dec    esp
  407d81:	and    al,0x9c
  407d83:	and    al,0x71
  407d85:	xor    DWORD PTR [ebx],esi
  407d87:	pop    ecx
  407d88:	lods   al,BYTE PTR ds:[esi]
  407d89:	mov    ch,0xbe
  407d8b:	dec    ebp
  407d8c:	mov    ds:0x7ca5f3b2,al
  407d91:	lds    ecx,FWORD PTR [ebx]
  407d93:	ins    DWORD PTR es:[edi],dx
  407d94:	push   0xfffffffc
  407d96:	mov    esi,0xb2b5978b
  407d9b:	sub    eax,0xee7313d0
  407da0:	fdiv   QWORD PTR [esi-0x61]
  407da3:	cmp    ebx,DWORD PTR [esi-0x49bc077]
  407da9:	lahf   
  407daa:	ja     0x407d9b
  407dac:	lods   al,BYTE PTR ds:[esi]
  407dad:	into   
  407dae:	push   edx
  407daf:	inc    eax
  407db0:	pop    ds
  407db1:	pushf  
  407db2:	sub    DWORD PTR [edx*1-0x51fe5c7b],edi
  407db9:	gs ins DWORD PTR es:[edi],dx
  407dbb:	outs   dx,DWORD PTR ds:[esi]
  407dbc:	(bad)  
  407dbd:	rcl    ah,cl
  407dbf:	pop    ds
  407dc0:	adc    eax,0x24eaa97d
  407dc5:	(bad)  
  407dc6:	and    BYTE PTR [esi-0x77990974],ah
  407dcc:	add    al,ah
  407dce:	aas    
  407dcf:	push   0xfffffff9
  407dd1:	adc    eax,0x9a4e980f
  407dd6:	mov    eax,0xc6ca5425
  407ddb:	mov    dl,0x2a
  407ddd:	rol    cl,0xed
  407de0:	outs   dx,DWORD PTR ds:[esi]
  407de1:	push   ecx
  407de2:	push   ds
  407de3:	jecxz  0x407d6f
  407de5:	xor    ecx,esi
  407de7:	inc    edi
  407de8:	jecxz  0x407dba
  407dea:	and    ebp,DWORD PTR [edx+ebp*4-0x5c]
  407dee:	loope  0x407e6e
  407df0:	mov    bh,0x2d
  407df2:	pop    ecx
  407df3:	imul   ebp,edx,0xffffff89
  407df6:	push   ebp
  407df7:	nop
  407df8:	xchg   esi,eax
  407df9:	stos   DWORD PTR es:[edi],eax
  407dfa:	or     BYTE PTR [esi],bh
  407dfc:	push   esi
  407dfd:	and    DWORD PTR [ebp+0xd],eax
  407e00:	aas    
  407e01:	mov    esi,0xa799a3fa
  407e06:	and    bl,BYTE PTR [ecx+ebp*1+0x6317e4a7]
  407e0d:	addr16 pop eax
  407e0f:	jg     0x407e8b
  407e11:	mov    ch,BYTE PTR [ecx+0x4]
  407e14:	mov    ch,0xbb
  407e16:	inc    ecx
  407e17:	aaa    
  407e18:	push   edi
  407e19:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  407e1b:	in     eax,dx
  407e1c:	les    esp,FWORD PTR [esi-0x8]
  407e1f:	mov    cl,0x4a
  407e21:	mov    eax,0x13786ce4
  407e26:	frstor [edx]
  407e28:	lahf   
  407e29:	mov    eax,0xe8a6f257
  407e2e:	mov    esp,0x117e8bb5
  407e33:	push   ebx
  407e34:	xchg   edi,eax
  407e35:	retf   
  407e36:	sub    BYTE PTR [esi-0x3839c4eb],bl
  407e3c:	add    eax,0x41abe2
  407e41:	aad    0x45
  407e43:	add    BYTE PTR [eax],al
  407e45:	je     0x40818a
  407e4b:	mov    eax,ds:0x40d64c
  407e50:	mov    esi,DWORD PTR [ebp+0xc]
  407e53:	sub    eax,edx
  407e55:	xor    eax,ecx
  407e57:	cmp    eax,esi
  407e59:	jne    0x407e6f
  407e5f:	mov    eax,ds:0x40d654
  407e64:	add    eax,DWORD PTR ds:0x40d64c
  407e6a:	jmp    0x407ff5
  407e6f:	mov    eax,DWORD PTR [ebp+0xc]
  407e72:	jmp    0x407ff1
  407e77:	icebp  
  407e78:	mov    ebp,0x65db1f07
  407e7d:	mov    ecx,0x1c6c5851
  407e82:	cmp    DWORD PTR [edi],edx
  407e84:	or     BYTE PTR [ecx+0x7e104f7f],cl
  407e8a:	jle    0x407e68
  407e8c:	jg     0x407f0c
  407e8e:	jle    0x407edb
  407e90:	adc    edx,ebp
  407e92:	and    ebx,edi
  407e94:	and    al,0xad
  407e96:	clc    
  407e97:	pop    esp
  407e98:	inc    esi
  407e99:	(bad)  
  407e9a:	sub    DWORD PTR [esi],edi
  407e9c:	pop    ebp
  407e9d:	fist   WORD PTR [ebx]
  407e9f:	test   eax,0x865e7790
  407ea4:	das    
  407ea5:	(bad)  
  407ea6:	int3   
  407ea7:	jle    0x407ed4
  407ea9:	ja     0x407e71
  407eab:	outs   dx,BYTE PTR ds:[esi]
  407eac:	adc    DWORD PTR [eax],ecx
  407eae:	mov    fs,WORD PTR ds:0xf92f206e
  407eb4:	aaa    
  407eb5:	adc    BYTE PTR [ebx],0x81
  407eb8:	and    edx,DWORD PTR [eax-0x46]
  407ebb:	into   
  407ebc:	test   esi,ebx
  407ebe:	ret    
  407ebf:	adc    BYTE PTR [edi+0x181f9037],bh
  407ec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ec6:	mov    esi,0x79023c8d
  407ecb:	sbb    eax,0xc91ecc08
  407ed0:	cdq    
  407ed1:	lods   al,BYTE PTR ds:[esi]
  407ed2:	loop   0x407ef2
  407ed4:	sbb    edx,ebx
  407ed6:	mov    ss,WORD PTR [ebx+0x527605f7]
  407edc:	push   eax
  407edd:	popf   
  407ede:	fwait
  407edf:	mov    al,ds:0xa9bb79df
  407ee4:	cld    
  407ee5:	jmp    0x8d60641c
  407eea:	push   edi
  407eeb:	jge    0x407e82
  407eed:	sbb    DWORD PTR [ebp+0xefff6fe],ecx
  407ef3:	adc    esi,DWORD PTR [ecx+0x2f819b42]
  407ef9:	xor    eax,0x1eebfdec
  407efe:	xchg   BYTE PTR [edi+0x50],dl
  407f01:	stos   DWORD PTR es:[edi],eax
  407f02:	push   ebx
  407f03:	pop    ebp
  407f04:	mov    al,0x9d
  407f06:	cmp    BYTE PTR [esi+0x49],bl
  407f09:	call   esp
  407f0b:	ret    0x436d
  407f0e:	push   ss
  407f0f:	les    ebx,FWORD PTR [ebx+0x5a]
  407f12:	pop    ebx
  407f13:	add    eax,eax
  407f15:	imul   esp,DWORD PTR [esi-0x60],0xdfaddc26
  407f1c:	jbe    0x407f71
  407f1e:	ja     0x407f05
  407f20:	pushf  
  407f21:	(bad)  
  407f22:	div    cl
  407f24:	stc    
  407f25:	sahf   
  407f26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f27:	sti    
  407f28:	je     0x407ece
  407f2a:	jp     0x407ee8
  407f2c:	dec    esi
  407f2d:	xchg   ecx,eax
  407f2e:	repnz and eax,0x794c9117
  407f34:	mov    ecx,0x65231110
  407f39:	out    dx,al
  407f3a:	outs   dx,BYTE PTR ds:[esi]
  407f3b:	xor    eax,0xe7eb7726
  407f40:	mov    cl,0x6c
  407f42:	pop    ebx
  407f43:	mov    ch,BYTE PTR [ecx-0x78]
  407f46:	pop    ss
  407f47:	das    
  407f48:	sbb    DWORD PTR [eax-0x5e0ceccd],esi
  407f4e:	test   eax,0x8f589955
  407f53:	pop    edx
  407f54:	iret   
  407f55:	call   FWORD PTR [eax-0x7e]
  407f58:	jbe    0x407f7e
  407f5a:	fisttp WORD PTR [edx]
  407f5c:	jne    0x407fc2
  407f5e:	mov    ds:0xfe0128d6,al
  407f63:	stos   DWORD PTR es:[edi],eax
  407f64:	test   eax,0x50a5a098
  407f69:	in     eax,dx
  407f6a:	out    dx,eax
  407f6b:	mov    esp,0xf47132b3
  407f70:	fsubp  st(7),st
  407f72:	inc    ecx
  407f73:	mov    cl,0x35
  407f75:	inc    esp
  407f76:	ret    0xe7de
  407f79:	push   ebp
  407f7a:	inc    esp
  407f7b:	mov    ecx,0x773e04ef
  407f80:	mov    WORD PTR [esi-0x33],?
  407f83:	icebp  
  407f84:	test   eax,0x494dcd48
  407f89:	inc    esp
  407f8a:	(bad)  
  407f8b:	shl    DWORD PTR [ebp-0x6b],cl
  407f8e:	aas    
  407f8f:	enter  0x416a,0x71
  407f93:	inc    esi
  407f94:	aaa    
  407f95:	push   0xffffffcb
  407f97:	dec    esp
  407f98:	jo     0x408003
  407f9a:	les    eax,FWORD PTR [eax-0x1bf3efe6]
  407fa0:	scas   al,BYTE PTR es:[edi]
  407fa1:	push   cs
  407fa2:	push   eax
  407fa3:	fwait
  407fa4:	ror    BYTE PTR [ebx+esi*8],1
  407fa7:	jno    0x407f6e
  407fa9:	sahf   
  407faa:	nop
  407fab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fac:	jp     0x407f5c
  407fae:	iret   
  407faf:	xor    BYTE PTR [edi+ebx*2-0x38],dh
  407fb3:	hlt    
  407fb4:	sbb    ah,ch
  407fb6:	xor    al,0x23
  407fb8:	gs jo  0x408024
  407fbb:	dec    edx
  407fbc:	mov    ecx,cs
  407fbe:	inc    edx
  407fbf:	icebp  
  407fc0:	inc    edx
  407fc1:	mov    edi,0x9a42f170
  407fc6:	in     eax,0xdf
  407fc8:	call   0xf9de34bd
  407fcd:	data16 aaa 
  407fcf:	aam    0xce
  407fd1:	cwde   
  407fd2:	cmc    
  407fd3:	adc    al,0xa8
  407fd5:	cli    
  407fd6:	dec    ecx
  407fd7:	fisubr DWORD PTR [ebp+eax*8-0x15646c76]
  407fde:	int3   
  407fdf:	mov    ds:0x88e8b967,al
  407fe4:	les    ebx,FWORD PTR [esi-0x31]
  407fe7:	cmp    ecx,DWORD PTR [ebx]
  407fe9:	add    eax,0x748ee4d1
  407fee:	gs dec ebx
  407ff0:	mov    edx,0xc203c133
  407ff5:	mov    ds:0x40d64c,eax
  407ffa:	mov    eax,DWORD PTR [ebp+0xc]
  407ffd:	jmp    0x40817c
  408002:	and    ebp,DWORD PTR [edi]
  408004:	pop    ds
  408005:	xchg   edx,eax
  408006:	adc    esp,DWORD PTR [edx+0x57bdafa3]
  40800c:	arpl   WORD PTR [edi],si
  40800e:	aam    0xd1
  408010:	aaa    
  408011:	push   0x2d
  408013:	push   ss
  408014:	jle    0x408094
  408016:	fdivr  QWORD PTR [edi+0x7e]
  408019:	jle    0x40804b
  40801b:	arpl   WORD PTR [edx-0x805ea4c],bx
  408021:	sbb    eax,ebx
  408023:	add    DWORD PTR [esi-0x594828cb],0x24
  40802a:	cli    
  40802b:	stc    
  40802c:	stos   DWORD PTR es:[edi],eax
  40802d:	mov    bh,0xd
  40802f:	jmp    0x42e08cd1
  408034:	stos   BYTE PTR es:[edi],al
  408035:	outs   dx,BYTE PTR ds:[esi]
  408036:	iret   
  408037:	ins    DWORD PTR es:[edi],dx
  408038:	sbb    eax,0xd28ccd5b
  40803d:	mov    ebp,0xecd7bfb
  408042:	cmp    DWORD PTR [ecx-0x4c43fb9e],ebx
  408048:	xchg   ecx,eax
  408049:	je     0x408027
  40804b:	mov    BYTE PTR [edi+ebp*4+0x1e86fe8b],dl
  408052:	ret    0xa3fd
  408055:	int3   
  408056:	xchg   edi,eax
  408057:	sbb    BYTE PTR [eax-0x26],dh
  40805a:	rcr    DWORD PTR [edi+0x4a],0x5a
  40805e:	aaa    
  40805f:	inc    eax
  408060:	xor    edx,DWORD PTR [eax-0x18]
  408063:	adc    ecx,DWORD PTR [ebx]
  408065:	popa   
  408066:	lock adc al,0xda
  408069:	jge    0x408020
  40806b:	xchg   esp,esp
  40806d:	inc    ebx
  40806e:	shl    BYTE PTR [edx+eax*1+0x4a],1
  408072:	xor    al,0xeb
  408074:	fmul   DWORD PTR ds:0xb055a7f4
  40807a:	inc    eax
  40807b:	adc    BYTE PTR [esi+0x72],ah
  40807e:	aad    0xf9
  408080:	xchg   ebp,eax
  408081:	mov    al,ds:0xfd41b914
  408086:	inc    esi
  408087:	push   0xb96e4037
  40808c:	fild   WORD PTR [edx+edx*8]
  40808f:	cwde   
  408090:	mov    ds:0x20a85d46,eax
  408095:	in     al,0xe0
  408097:	sub    bh,BYTE PTR [ebx+edi*1-0x59]
  40809b:	or     eax,0xe5e43f0d
  4080a0:	fwait
  4080a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080a2:	daa    
  4080a3:	stos   BYTE PTR es:[edi],al
  4080a4:	xor    al,0xd5
  4080a6:	lock and eax,edx
  4080a9:	jp     0x408110
  4080ab:	add    eax,DWORD PTR [ebx]
  4080ad:	or     al,0xc8
  4080af:	xor    eax,0xdffbc749
  4080b4:	mov    al,ds:0x77ec7374
  4080b9:	jecxz  0x408131
  4080bb:	jno    0x408106
  4080bd:	push   edx
  4080be:	mul    DWORD PTR [edi]
  4080c0:	adc    esi,DWORD PTR ds:0xf1b9f2b6
  4080c6:	cmp    ch,BYTE PTR [eax-0x1ec60ee6]
  4080cc:	ss mov ebx,0x1bc866c6
  4080d2:	test   DWORD PTR [ebx+0x6f],ebp
  4080d5:	push   eax
  4080d6:	retf   0x4301
  4080d9:	loopne 0x4080b7
  4080db:	inc    edi
  4080dc:	daa    
  4080dd:	adc    eax,0x18346607
  4080e2:	add    BYTE PTR [ebx-0x2aade5c8],dl
  4080e8:	push   ss
  4080e9:	mov    bl,0x82
  4080eb:	loopne 0x408141
  4080ed:	sbb    eax,DWORD PTR [ebx-0x249642ae]
  4080f3:	dec    ebx
  4080f4:	test   eax,0xffb87440
  4080f9:	enter  0xfb8d,0xd2
  4080fd:	inc    eax
  4080fe:	mov    ebx,0x4c792e31
  408103:	daa    
  408104:	lea    ecx,[ebp-0x80]
  408107:	aam    0xe6
  408109:	push   edi
  40810a:	punpckhbw mm7,QWORD PTR [esi-0x1e58ead2]
  408111:	shl    ebp,cl
  408113:	mov    ecx,DWORD PTR [edx]
  408115:	mov    dl,0x30
  408117:	mov    esi,0x808b7c68
  40811c:	call   0x6b13:0xe7da897a
  408123:	pop    esp
  408124:	fidiv  WORD PTR [ecx-0x1b689db4]
  40812a:	add    ebp,DWORD PTR [ebx]
  40812c:	cli    
  40812d:	pop    eax
  40812e:	dec    ecx
  40812f:	mov    ebp,DWORD PTR [ebx]
  408131:	(bad)  
  408133:	and    ch,BYTE PTR [edx+0x29]
  408136:	lods   al,BYTE PTR ds:[esi]
  408137:	jbe    0x4081a0
  408139:	in     al,0xd7
  40813b:	mov    eax,0x211ceca8
  408140:	aaa    
  408141:	mov    cl,0xdf
  408143:	pop    esi
  408144:	out    dx,al
  408145:	je     0x408159
  408147:	mov    dh,0xf6
  408149:	jno    0x4080f6
  40814b:	imul   edx,DWORD PTR [edi+0x53],0x57
  40814f:	xor    al,BYTE PTR [eax+0x2]
  408152:	xchg   DWORD PTR [esi],edx
  408154:	sub    al,0x1b
  408156:	fmul   DWORD PTR [esi]
  408158:	pop    ecx
  408159:	jg     0x408156
  40815b:	sbb    eax,0x96458e16
  408161:	sub    al,0x17
  408163:	lock and eax,0x59b5d3ee
  408169:	and    BYTE PTR [ebx-0x4f],ah
  40816c:	femms  
  40816e:	imul   eax,DWORD PTR [esi+0x19],0x3c
  408172:	(bad)  
  408173:	pop    eax
  408174:	in     eax,0xdf
  408176:	out    0xd8,eax
  408178:	ins    BYTE PTR es:[edi],dx
  408179:	hlt    
  40817a:	mov    esp,0x3c13341
  40817f:	ret    0x54a3
  408182:	(bad)  
  408183:	inc    eax
  408184:	add    cl,ch
  408186:	mov    DWORD PTR [ecx],eax
  408188:	add    BYTE PTR [eax],al
  40818a:	mov    eax,ds:0x40d654
  40818f:	jmp    0x40830e
  408194:	push   edi
  408195:	(bad)  [ecx+0x797ba9ef]
  40819b:	gs mov ch,0x6e
  40819e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40819f:	es aam 0x24
  4081a2:	dec    ebp
  4081a3:	push   esp
  4081a4:	adc    DWORD PTR [edi],0x7e
  4081a7:	jle    0x408185
  4081a9:	jg     0x408229
  4081ab:	jle    0x4081c0
  4081ad:	mov    al,al
  4081af:	retf   
  4081b0:	lods   al,BYTE PTR ds:[esi]
  4081b1:	jmp    0x1301:0x61c3c1d2
  4081b8:	push   ebp
  4081b9:	loope  0x4081b7
  4081bb:	mov    ecx,0x644f1d31
  4081c0:	ja     0x408206
  4081c2:	mov    WORD PTR [esi-0x1c],?
  4081c5:	adc    BYTE PTR [edx+esi*8-0x54],ah
  4081c9:	aam    0x4c
  4081cb:	sbb    al,0x28
  4081cd:	or     al,BYTE PTR [edx-0x7b]
  4081d0:	pushf  
  4081d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081d2:	icebp  
  4081d3:	pop    edx
  4081d4:	das    
  4081d5:	mov    al,ds:0x2b6987ec
  4081da:	(bad)  
  4081db:	dec    ebx
  4081dc:	sub    al,0x8f
  4081de:	dec    ebx
  4081df:	and    eax,0x750d953f
  4081e4:	pop    ebx
  4081e5:	jl     0x4081de
  4081e7:	test   cl,bl
  4081e9:	jmp    0x4081cd
  4081eb:	sbb    al,0x86
  4081ed:	dec    ebp
  4081ee:	or     eax,eax
  4081f0:	or     al,0x61
  4081f2:	sti    
  4081f3:	xor    al,ch
  4081f5:	adc    ah,al
  4081f7:	pop    ecx
  4081f8:	mov    ebx,DWORD PTR [esp+ebx*4+0x127db376]
  4081ff:	xor    DWORD PTR [edi-0x3051b4a4],0x1629dc3c
  408209:	xchg   edi,eax
  40820a:	int    0x34
  40820c:	mov    ds:0x510b7706,eax
  408211:	add    eax,0x7ba32514
  408216:	xchg   ebp,eax
  408217:	xor    ebp,DWORD PTR [ecx-0x6378dc99]
  40821d:	lock mov eax,0xaaf6390b
  408223:	sub    al,0x52
  408225:	sub    DWORD PTR [ebx],ebp
  408227:	sbb    DWORD PTR [esi+0x61],eax
  40822a:	sbb    ah,BYTE PTR [eax-0x52]
  40822d:	pop    edx
  40822e:	adc    al,0xb2
  408230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408231:	lea    esp,[edi+eax*4]
  408234:	div    DWORD PTR [edi-0x72]
  408237:	inc    esi
  408238:	loopne 0x408293
  40823a:	(bad)  
  40823b:	fidiv  WORD PTR [ecx-0x74]
  40823e:	jl     0x4081fd
  408240:	outs   dx,BYTE PTR ds:[esi]
  408241:	sbb    al,0x7
  408243:	mov    ch,0x5a
  408245:	inc    edx
  408246:	dec    BYTE PTR [ecx+eax*8]
  408249:	test   al,0x19
  40824b:	push   edx
  40824c:	inc    esp
  40824d:	pop    ds
  40824e:	jmp    0x28ae:0x28a48a73
  408255:	test   DWORD PTR [edx],edi
  408257:	jl     0x4081f6
  408259:	mov    esp,0x176cff0f
  40825e:	aaa    
  40825f:	pop    ebx
  408260:	adc    BYTE PTR [ebx],bh
  408262:	shl    bh,cl
  408264:	jp     0x4082d4
  408266:	(bad)  
  408267:	imul   ecx,DWORD PTR [ecx+0x34f252ea],0x95f8bc76
  408271:	dec    esi
  408272:	adc    DWORD PTR [ebx-0x7934fed8],edx
  408278:	push   0x709f965e
  40827d:	int3   
  40827e:	cmp    al,0x1e
  408280:	test   DWORD PTR [esi+0xb1a4fc5],esp
  408286:	inc    ebx
  408287:	push   eax
  408288:	inc    esi
  408289:	adc    edi,DWORD PTR [ebx+0x77316bc6]
  40828f:	or     al,BYTE PTR [esi+0x3d]
  408292:	mov    al,0x29
  408294:	gs in  al,0x4c
  408297:	dec    ecx
  408298:	hlt    
  408299:	loopne 0x40830d
  40829b:	in     al,0x4c
  40829d:	mov    ds:0xc61aa765,eax
  4082a2:	sar    cl,0x63
  4082a5:	stc    
  4082a6:	xchg   edi,eax
  4082a7:	jmp    0x9183d33c
  4082ac:	and    al,0xea
  4082ae:	xchg   edi,eax
  4082af:	push   cs
  4082b0:	rol    BYTE PTR [ebx-0x7a],0x66
  4082b4:	push   esp
  4082b5:	jmp    0x207a1cd3
  4082ba:	scas   eax,DWORD PTR es:[edi]
  4082bb:	outs   dx,DWORD PTR ds:[esi]
  4082bc:	dec    edx
  4082bd:	stc    
  4082be:	scas   eax,DWORD PTR es:[edi]
  4082bf:	ds push es
  4082c1:	js     0x40826e
  4082c3:	stc    
  4082c4:	or     bl,BYTE PTR [ecx-0x1bf2a97]
  4082ca:	fisttp QWORD PTR [ecx+edx*8+0x2a]
  4082ce:	and    al,0x23
  4082d0:	loopne 0x408254
  4082d2:	cmp    al,0x5e
  4082d4:	push   edx
  4082d5:	sub    BYTE PTR [ebx+0x2b76c855],0xee
  4082dc:	push   esp
  4082dd:	fwait
  4082de:	adc    eax,0xd4b29963
  4082e3:	or     esp,DWORD PTR [edx+0x4]
  4082e6:	dec    esp
  4082e7:	ds aad 0xf2
  4082ea:	cmp    eax,0x8e86caf2
  4082ef:	ret    0x38da
  4082f2:	jmp    0xe8547bec
  4082f7:	imul   esi,ebp,0x3a
  4082fa:	int    0xfc
  4082fc:	in     eax,0x6a
  4082fe:	in     eax,dx
  4082ff:	sar    BYTE PTR ds:[eax-0x656aaa26],0xfa
  408307:	inc    esp
  408308:	pop    ss
  408309:	or     ecx,DWORD PTR [edi-0x5c64cdd2]
  40830f:	dec    esp
  408310:	(bad)  
  408311:	inc    eax
  408312:	add    BYTE PTR [ebx+0x8b0845],cl
  408318:	mov    ecx,DWORD PTR ds:0x40d64c
  40831e:	add    DWORD PTR [eax],ecx
  408320:	pop    esi
  408321:	pop    ebp
  408322:	ret    0x8
  408325:	push   ebp
  408326:	mov    ebp,esp
  408328:	sub    esp,0x58
  40832b:	and    DWORD PTR ds:0x4245ca,0x0
  408335:	jmp    0x408347
  40833a:	mov    ecx,DWORD PTR ds:0x4245ca
  408340:	inc    ecx
  408341:	mov    DWORD PTR ds:0x4245ca,ecx
  408347:	cmp    DWORD PTR ds:0x4245ca,0x1a
  40834e:	jae    0x408391
  408354:	cmp    DWORD PTR ds:0x4245ca,0xb
  40835b:	jne    0x40836c
  408361:	push   0x561f
  408366:	call   DWORD PTR ds:0x40d36c
  40836c:	cmp    DWORD PTR ds:0x4245ca,0xa
  408373:	jne    0x408386
  408379:	mov    ecx,DWORD PTR ds:0x4245ca
  40837f:	inc    ecx
  408380:	mov    DWORD PTR ds:0x4245ca,ecx
  408386:	jmp    0x40833a
  40838b:	inc    DWORD PTR ds:0x412370
  408391:	mov    ecx,DWORD PTR [ebp+0x8]
  408394:	and    DWORD PTR ds:0x417e55,0x0
  40839e:	jmp    0x4083b1
  4083a3:	xor    eax,eax
  4083a5:	or     eax,DWORD PTR ds:0x417e55
  4083ab:	inc    eax
  4083ac:	mov    ds:0x417e55,eax
  4083b1:	cmp    DWORD PTR ds:0x417e55,0x1f
  4083b8:	jae    0x4083df
  4083be:	cmp    DWORD PTR ds:0x417e55,0x21
  4083c5:	jne    0x4083d4
  4083cb:	push   DWORD PTR [ebp-0x14]
  4083ce:	call   DWORD PTR ds:0x40d008
  4083d4:	jmp    0x4083a3
  4083d9:	sub    DWORD PTR ds:0x4245ca,edi
  4083df:	mov    eax,0x8a43
  4083e4:	sub    DWORD PTR ds:0x415101,0x2da0
  4083ee:	jmp    0x408517
  4083f3:	dec    ecx
  4083f4:	pushf  
  4083f5:	push   esp
  4083f6:	in     eax,dx
  4083f7:	imul   esp,ebp,0x9f63b859
  4083fd:	mov    DWORD PTR [esp+ebx*1+0x614df2d9],ebp
  408404:	adc    al,0x7e
  408406:	jle    0x408412
  408408:	jg     0x408488
  40840a:	jle    0x408405
  40840c:	xlat   BYTE PTR ds:[ebx]
  40840d:	pop    es
  40840e:	(bad)  
  40840f:	iret   
  408410:	popf   
  408411:	cmp    BYTE PTR [edx],dh
  408413:	mov    BYTE PTR [edx],bh
  408415:	daa    
  408416:	xchg   edx,eax
  408417:	mov    ebp,0x98c83c79
  40841c:	test   BYTE PTR [edx+0x50],ah
  40841f:	inc    esi
  408420:	mov    eax,ds:0xaf2b55fd
  408425:	iret   
  408426:	pop    ss
  408427:	popf   
  408428:	push   es
  408429:	(bad)  
  40842a:	sti    
  40842b:	rcl    BYTE PTR [edx],cl
  40842d:	jno    0x4083bb
  40842f:	dec    eax
  408430:	add    eax,0x9b8f9bc9
  408435:	sti    
  408436:	mov    ebx,0x3e0d4e6a
  40843b:	xchg   edi,eax
  40843c:	push   ebp
  40843d:	push   ecx
  40843e:	push   0x4a
  408440:	ret    0x94b2
  408443:	arpl   WORD PTR [esi-0x39],si
  408446:	fbstp  TBYTE PTR [esi]
  408448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40844a:	cmp    eax,0x4eb298d6
  40844f:	jne    0x40841b
  408451:	push   esp
  408452:	ins    DWORD PTR es:[edi],dx
  408453:	shr    DWORD PTR ds:0xa3d42e8e,0x7
  40845a:	mov    ecx,0xa2980854
  40845f:	ficomp DWORD PTR [edx-0x119aa0bd]
  408465:	cmp    ch,BYTE PTR [edx+0xc]
  408468:	pushf  
  408469:	jno    0x40840a
  40846b:	pop    ecx
  40846c:	pop    esi
  40846d:	push   ebx
  40846e:	cmp    DWORD PTR [ebx+0x16578648],ebx
  408474:	mov    edi,0xf446f63
  408479:	adc    eax,edi
  40847b:	push   es
  40847c:	nop
  40847d:	pop    eax
  40847e:	adc    al,0x31
  408480:	iret   
  408481:	mov    esp,DWORD PTR [ecx+0x552bff13]
  408487:	cmp    DWORD PTR [edi-0x2a],ebp
  40848a:	popf   
  40848b:	(bad)  
  40848c:	adc    BYTE PTR [ecx-0x24],al
  40848f:	adc    eax,0xea039bfe
  408494:	add    DWORD PTR [ebx+0x1bb847d7],esi
  40849a:	xor    bh,BYTE PTR [ecx]
  40849c:	in     eax,dx
  40849d:	jecxz  0x4084a9
  40849f:	icebp  
  4084a0:	adc    BYTE PTR [edx-0x8],bh
  4084a3:	add    BYTE PTR [eax+0x53],cl
  4084a6:	mov    dl,0x23
  4084a8:	and    DWORD PTR [ebx+ebx*8],ecx
  4084ab:	int3   
  4084ac:	jb     0x40849b
  4084ae:	mov    al,ds:0xc1df6c4
  4084b3:	sub    DWORD PTR ds:0xb470736a,0xa6b0293
  4084bd:	adc    dh,BYTE PTR [eax+0x6d]
  4084c0:	xchg   edi,eax
  4084c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084c2:	mov    ds:0xd67e7eb7,al
  4084c7:	mov    ds:0xc1014c58,eax
  4084cc:	jb     0x4084bd
  4084ce:	popa   
  4084cf:	jbe    0x4084bd
  4084d1:	or     esi,esi
  4084d3:	pusha  
  4084d4:	push   cs
  4084d5:	push   ecx
  4084d6:	ja     0x408487
  4084d8:	cdq    
  4084d9:	(bad)  
  4084da:	mov    dl,0xbc
  4084dc:	and    bl,ch
  4084de:	loopne 0x408518
  4084e0:	scas   al,BYTE PTR es:[edi]
  4084e1:	imul   esi,ebx,0x58e77737
  4084e7:	stc    
  4084e8:	sbb    dl,bh
  4084ea:	inc    ebx
  4084eb:	mov    ecx,0x5b484d8d
  4084f0:	rcl    eax,0x3e
  4084f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084f4:	sub    DWORD PTR [eax+0x63f1ccfb],ebp
  4084fa:	mov    BYTE PTR [esi-0x7ef545e5],al
  408500:	mov    ah,0x58
  408502:	mov    bl,0xf6
  408504:	repz inc ebx
  408506:	test   BYTE PTR ds:0x84c03d4,bl
  40850c:	ficomp DWORD PTR [esp+0x47]
  408510:	xor    eax,DWORD PTR [ebx]
  408512:	jmp    0x40854d
  408514:	dec    eax
  408515:	(bad)
  408518:	xor    eax,DWORD PTR [ecx+0x20]
  40851b:	mov    ecx,0x3b0a
  408520:	not    DWORD PTR ds:0x41abce
  408526:	add    ax,cx
  408529:	mov    ecx,DWORD PTR ds:0x417e49
  40852f:	or     ecx,DWORD PTR ds:0x412374
  408535:	mov    DWORD PTR ds:0x417e49,ecx
  40853b:	jmp    0x408664
  408540:	sub    cl,BYTE PTR [ebp-0x31]
  408543:	xchg   esp,eax
  408544:	jns    0x4084da
  408546:	jns    0x408589
  408548:	or     eax,0xf626a896
  40854d:	xor    DWORD PTR [ebp+0x7e2a7d0d],esp
  408553:	jle    0x40855f
  408555:	jg     0x4085d5
  408557:	jle    0x4085c3
  408559:	pop    ss
  40855a:	sti    
  40855b:	fdivr  DWORD PTR [esi+0x7268ada5]
  408561:	addr16 (bad) 
  408563:	stos   DWORD PTR es:[edi],eax
  408564:	sub    DWORD PTR [edx],esi
  408566:	push   ecx
  408567:	sbb    edi,0xffffffb7
  40856a:	out    0x9,eax
  40856c:	loop   0x4085ac
  40856e:	fiadd  WORD PTR [eax+0x34]
  408571:	clc    
  408572:	mov    esp,0xf49f6f06
  408577:	mov    dl,0xa3
  408579:	repnz retf 
  40857b:	or     DWORD PTR [edx],0x16db7d35
  408581:	in     al,dx
  408582:	add    DWORD PTR [ebp-0x66],edi
  408585:	xchg   ebx,eax
  408586:	mov    al,0xed
  408588:	fdiv   QWORD PTR [esp+esi*8]
  40858b:	repz les esp,FWORD PTR [ebp+esi*2-0x6be9e099]
  408593:	int3   
  408594:	xchg   BYTE PTR [eax+0x64],ch
  408597:	scas   al,BYTE PTR es:[edi]
  408598:	inc    ebp
  408599:	int    0x14
  40859b:	div    bh
  40859d:	(bad)  
  40859e:	loopne 0x408525
  4085a0:	sti    
  4085a1:	mov    ebx,ebp
  4085a3:	popa   
  4085a4:	push   esi
  4085a5:	addr16 (bad) 
  4085a8:	pop    ss
  4085a9:	out    dx,al
  4085aa:	sbb    edx,DWORD PTR [edx+eiz*1+0x75]
  4085ae:	mov    cl,0x12
  4085b0:	or     eax,0x2ed2876e
  4085b5:	fisub  DWORD PTR [ebx-0x6]
  4085b8:	std    
  4085b9:	pop    ss
  4085ba:	lock out 0xcd,eax
  4085bd:	adc    cl,BYTE PTR [bx+di+0x30]
  4085c1:	je     0x4085da
  4085c3:	adc    eax,0x5b8d7acf
  4085c8:	retf   
  4085c9:	jnp    0x4085e1
  4085cb:	stc    
  4085cc:	imul   esp,ecx,0x50
  4085cf:	mov    al,0x1c
  4085d1:	mov    cs,ecx
  4085d3:	fwait
  4085d4:	inc    esi
  4085d5:	dec    edx
  4085d6:	sbb    esi,ebp
  4085d8:	cmp    DWORD PTR [ebp+esi*2-0x73],0xffffffae
  4085dd:	shl    BYTE PTR [esi+esi*2],0x7f
  4085e1:	in     al,0x58
  4085e3:	jp     0x408654
  4085e5:	xchg   esp,eax
  4085e6:	mov    dh,0x13
  4085e8:	mov    bl,0x5d
  4085ea:	data16 outs dx,BYTE PTR ds:[esi]
  4085ec:	dec    edx
  4085ed:	sub    edi,esp
  4085ef:	inc    edi
  4085f0:	shl    DWORD PTR [edi+ebx*4],cl
  4085f3:	sub    DWORD PTR [edi+0x41],0xffffffbf
  4085f7:	shr    cl,0xf7
  4085fa:	xor    eax,DWORD PTR [edx-0x5e]
  4085fd:	or     DWORD PTR [ebx+ebp*1],edx
  408600:	fidiv  WORD PTR [edx-0x32]
  408603:	call   0x4e374805
  408608:	test   dl,0xa0
  40860b:	scas   eax,DWORD PTR es:[edi]
  40860c:	inc    edi
  40860d:	inc    ecx
  40860e:	imul   ecx,edx,0xa13b15cc
  408614:	nop    DWORD PTR [eax+0x1e76d49c]
  40861b:	adc    eax,DWORD PTR [edx]
  40861d:	shl    BYTE PTR [edx-0x18],1
  408620:	ror    al,0x7b
  408623:	js     0x408645
  408625:	pushf  
  408626:	adc    BYTE PTR [edx-0x61],ah
  408629:	xchg   ah,bl
  40862b:	dec    eax
  40862c:	in     eax,0x14
  40862e:	jg     0x4085c3
  408630:	ficomp WORD PTR [ecx+0x6d]
  408633:	pop    ss
  408634:	retf   0x1e90
  408637:	dec    eax
  408638:	mov    edx,DWORD PTR [edi+edx*4-0x3d]
  40863c:	and    eax,0xad325655
  408641:	dec    edi
  408642:	push   esi
  408643:	les    edi,FWORD PTR [eax]
  408645:	imul   eax,edx,0xe48555b
  40864b:	int3   
  40864c:	mov    esp,0x973f5c3d
  408651:	call   0xfbc6:0x59f2888c
  408658:	or     DWORD PTR [ebp+0x59],ecx
  40865b:	daa    
  40865c:	adc    eax,0xf4790e2b
  408661:	push   esp
  408662:	fbstp  TBYTE PTR [ebp+0x3c0b70f]
  408668:	or     eax,0x417e49
  40866d:	mov    DWORD PTR [ebp-0xc],eax
  408670:	mov    BYTE PTR [ebp-0x1],0x7f
  408674:	lea    eax,[ebp-0x1]
  408677:	and    DWORD PTR ds:0x4245c6,edx
  40867d:	mov    DWORD PTR [ebp-0x10],eax
  408680:	mov    DWORD PTR ds:0x41510d,0x1a
  40868a:	cmp    DWORD PTR ds:0x41510d,0x0
  408691:	je     0x4086bf
  408697:	cmp    DWORD PTR ds:0x41510d,0x25
  40869e:	jne    0x4086ad
  4086a4:	push   DWORD PTR [ebp-0x18]
  4086a7:	call   DWORD PTR ds:0x40d370
  4086ad:	mov    ecx,DWORD PTR ds:0x41510d
  4086b3:	dec    ecx
  4086b4:	mov    DWORD PTR ds:0x41510d,ecx
  4086ba:	jmp    0x40868a
  4086bf:	mov    al,BYTE PTR [ebp-0x1]
  4086c2:	and    DWORD PTR ds:0x4150fd,0x0
  4086cc:	mov    ecx,DWORD PTR ds:0x4150fd
  4086d2:	inc    ecx
  4086d3:	mov    DWORD PTR ds:0x4150fd,ecx
  4086d9:	cmp    DWORD PTR ds:0x4150fd,0x11
  4086e0:	jne    0x4086f1
  4086e6:	push   0x41ad87
  4086eb:	call   DWORD PTR ds:0x40d1e4
  4086f1:	cmp    DWORD PTR ds:0x4150fd,0x10
  4086f8:	jne    0x40870b
  4086fe:	mov    ecx,DWORD PTR ds:0x4150fd
  408704:	inc    ecx
  408705:	mov    DWORD PTR ds:0x4150fd,ecx
  40870b:	cmp    DWORD PTR ds:0x4150fd,0x1f
  408712:	jb     0x4086cc
  408718:	neg    ecx
  40871a:	mov    ecx,DWORD PTR [ebp-0x10]
  40871d:	xor    al,0x4a
  40871f:	or     DWORD PTR ds:0x41abe2,0x415105
  408729:	sub    al,0x34
  40872b:	mov    BYTE PTR [ecx],al
  40872d:	xor    ecx,ecx
  40872f:	jmp    0x408858
  408734:	adc    DWORD PTR [ebx+0xc],ebx
  408737:	(bad)  
  408738:	fs pop ecx
  40873a:	jmp    0x44b4d3b8
  40873f:	ficom  DWORD PTR [ecx+0x2a]
  408742:	call   DWORD PTR [ecx]
  408744:	or     DWORD PTR [ebx],ebp
  408746:	jle    0x4087c6
  408748:	or     bh,BYTE PTR [edi+0x7e]
  40874b:	jle    0x408760
  40874d:	(bad)  
  40874e:	imul   ebp,DWORD PTR [ebp+0x69],0xdcb482bf
  408755:	fldenv [edx*1+0x1e9f39a4]
  40875c:	repnz loope 0x408708
  40875f:	sub    ah,bh
  408761:	inc    esi
  408762:	pop    edx
  408763:	repz scas al,BYTE PTR es:[edi]
  408765:	out    dx,eax
  408766:	mov    ch,0xe8
  408768:	dec    esi
  408769:	push   ss
  40876a:	xchg   ecx,eax
  40876b:	test   dh,bl
  40876d:	mov    eax,ds:0x63064e49
  408772:	add    BYTE PTR [edx-0x766c3908],0x89
  408779:	rcr    DWORD PTR [esi+0x57],0x13
  40877d:	stos   BYTE PTR es:[edi],al
  40877e:	inc    ecx
  40877f:	add    bh,0x2a
  408782:	pop    eax
  408783:	sbb    DWORD PTR [eax+0x7b],eax
  408786:	lods   eax,DWORD PTR ds:[esi]
  408787:	cmp    eax,0xb76b39eb
  40878c:	xchg   ecx,eax
  40878d:	out    dx,eax
  40878e:	mov    bh,0x24
  408790:	or     al,0xd
  408792:	imul   DWORD PTR [esi]
  408794:	je     0x4087ad
  408796:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408797:	dec    edx
  408798:	mov    ah,0x31
  40879a:	sub    ch,dl
  40879c:	fcmovnb st,st(0)
  40879e:	mov    ch,0x77
  4087a0:	mov    bh,0x25
  4087a2:	sbb    al,0x9c
  4087a4:	sub    DWORD PTR [edi-0x4f],eax
  4087a7:	pop    edi
  4087a8:	adc    al,0xa5
  4087aa:	popa   
  4087ab:	mov    ebx,cs
  4087ad:	push   es
  4087ae:	aam    0xfc
  4087b0:	fdiv   DWORD PTR [ebp+0x191c6958]
  4087b6:	bound  esi,QWORD PTR [ecx]
  4087b8:	out    0xf0,eax
  4087ba:	mov    DWORD PTR [eax],esi
  4087bc:	into   
  4087bd:	pop    ebx
  4087be:	ss xchg ebp,eax
  4087c0:	fistp  WORD PTR [ebx+0x37aff6bc]
  4087c6:	and    dl,BYTE PTR [esi]
  4087c8:	cld    
  4087c9:	inc    eax
  4087ca:	xor    BYTE PTR [eax-0xc],0x43
  4087ce:	ret    0x2272
  4087d1:	int    0x18
  4087d3:	cld    
  4087d4:	ror    BYTE PTR [esi-0x6cc99ddf],cl
  4087da:	fsub   QWORD PTR [ecx-0x2f]
  4087dd:	fwait
  4087de:	jg     0x4087d0
  4087e0:	mov    ds:0xe76849a4,al
  4087e5:	jne    0x408825
  4087e7:	hlt    
  4087e8:	add    bh,dh
  4087ea:	pop    eax
  4087eb:	aad    0xb6
  4087ed:	fwait
  4087ee:	rol    dh,cl
  4087f0:	sahf   
  4087f1:	sbb    dh,BYTE PTR [edx-0x2ed19ad7]
  4087f7:	dec    edi
  4087f8:	repnz push 0x82de0c79
  4087fe:	cld    
  4087ff:	add    ecx,DWORD PTR [edx]
  408801:	fadd   DWORD PTR [ebx-0x7479a85c]
  408807:	int    0x41
  408809:	jnp    0x4087b4
  40880b:	jo     0x4087a6
  40880d:	xchg   esp,eax
  40880e:	xor    al,BYTE PTR [esi+0x2fc08ea]
  408814:	rol    DWORD PTR [eax-0x12],0x53
  408818:	push   ss
  408819:	inc    esi
  40881a:	jl     0x4087bc
  40881c:	pop    esp
  40881d:	std    
  40881e:	int    0x28
  408820:	jle    0x40881b
  408822:	push   0xffffffdd
  408824:	loopne 0x4087ac
  408826:	sbb    al,dl
  408828:	jle    0x4087f0
  40882a:	nop
  40882b:	arpl   WORD PTR [eax-0x56],sp
  40882e:	clc    
  40882f:	mov    edx,DWORD PTR [edi+0x1c]
  408832:	lods   eax,DWORD PTR ds:[esi]
  408833:	icebp  
  408834:	pmaddwd mm6,mm7
  408837:	sbb    eax,0x7b2f4277
  40883c:	sbb    DWORD PTR [esp+ebx*1],esi
  40883f:	cmp    eax,0x5b5332a7
  408844:	and    dh,dh
  408846:	bound  eax,QWORD PTR [esi-0xa55b6d7]
  40884c:	mov    ah,0x78
  40884e:	out    0xd,eax
  408850:	ins    DWORD PTR es:[edi],dx
  408851:	lods   al,BYTE PTR ds:[esi]
  408852:	mov    ah,BYTE PTR [ebx]
  408854:	sbb    esp,DWORD PTR [eax+0x6]
  408857:	imul   eax,edi,0x8538f845
  40885d:	pushf  
  40885e:	clc    
  40885f:	adc    DWORD PTR ds:0x412370,0x1786
  408869:	mov    DWORD PTR [ebp-0x10],0xf89c853b
  408870:	mov    eax,DWORD PTR [ebp-0x8]
  408873:	xor    ecx,ecx
  408875:	add    ecx,DWORD PTR ds:0x417e59
  40887b:	sbb    DWORD PTR ds:0x41abde,ecx
  408881:	mov    ecx,0x7510859
  408886:	add    DWORD PTR ds:0x41abe6,0x417e51
  408890:	push   esi
  408891:	and    DWORD PTR ds:0x417e59,0x0
  40889b:	mov    esi,DWORD PTR ds:0x417e59
  4088a1:	inc    esi
  4088a2:	mov    DWORD PTR ds:0x417e59,esi
  4088a8:	cmp    DWORD PTR ds:0x417e59,0x9
  4088af:	jne    0x4088f1
  4088b5:	push   0x41ad06
  4088ba:	push   DWORD PTR [ebp-0x10]
  4088bd:	push   DWORD PTR [ebp-0x14]
  4088c0:	push   0x6f38
  4088c5:	push   0x208a
  4088ca:	push   0x8fdb
  4088cf:	push   0x1d69
  4088d4:	push   DWORD PTR [ebp-0x20]
  4088d7:	push   0x57cc
  4088dc:	push   DWORD PTR [ebp-0x10]
  4088df:	push   DWORD PTR [ebp-0x28]
  4088e2:	push   DWORD PTR [ebp-0x24]
  4088e5:	push   DWORD PTR [ebp-0x28]
  4088e8:	push   DWORD PTR [ebp-0x1c]
  4088eb:	call   DWORD PTR ds:0x40d374
  4088f1:	cmp    DWORD PTR ds:0x417e59,0x8
  4088f8:	jne    0x40890d
  4088fe:	xor    esi,esi
  408900:	add    esi,DWORD PTR ds:0x417e59
  408906:	inc    esi
  408907:	mov    DWORD PTR ds:0x417e59,esi
  40890d:	cmp    DWORD PTR ds:0x417e59,0x13
  408914:	jb     0x40889b
  40891a:	xor    eax,ecx
  40891c:	mov    esi,0x32729f
  408921:	add    eax,esi
  408923:	jmp    0x408930
  408928:	mov    dl,BYTE PTR [ebp-0x1]
  40892b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40892f:	inc    eax
  408930:	cmp    eax,0x40
  408933:	jb     0x408928
  408939:	mov    edx,DWORD PTR [ebp-0x8]
  40893c:	mov    eax,DWORD PTR [ebp-0xc]
  40893f:	jmp    0x408a68
  408944:	sub    eax,0xb98f82f6
  408949:	fwait
  40894a:	and    DWORD PTR [eax+eax*1-0x2728be99],edx
  408951:	sbb    al,0x91
  408953:	add    BYTE PTR ds:0xa7e7e28,0x7f
  40895a:	jle    0x4089da
  40895c:	jecxz  0x408977
  40895e:	add    eax,0xef2797ef
  408963:	jecxz  0x4089ad
  408965:	xor    BYTE PTR [eax+0x2b71ff5],bl
  40896b:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40896d:	jb     0x40898b
  40896f:	jg     0x4089b2
  408971:	fisttp DWORD PTR [ecx-0x64be43bf]
  408977:	push   0xb420932
  40897c:	fld    TBYTE PTR [esi-0x7a]
  40897f:	pusha  
  408980:	mov    esp,0xe5e8c37e
  408985:	inc    ecx
  408986:	or     DWORD PTR [eax-0x3d],ebx
  408989:	sub    esi,DWORD PTR ds:0x84fd8170
  40898f:	inc    eax
  408990:	not    BYTE PTR [ecx]
  408992:	pop    eax
  408993:	out    0x2e,eax
  408995:	pop    es
  408996:	(bad)  
  408997:	test   al,0x14
  408999:	popa   
  40899a:	das    
  40899b:	or     ah,BYTE PTR [esi+0x60]
  40899e:	and    DWORD PTR [esp+esi*2+0x725038ea],ecx
  4089a5:	jle    0x4089b2
  4089a7:	jg     0x2721fa8e
  4089ad:	and    al,0x56
  4089af:	int3   
  4089b0:	(bad)  
  4089b1:	xchg   ecx,eax
  4089b2:	(bad)  
  4089b3:	popa   
  4089b4:	sub    DWORD PTR [esi],edi
  4089b6:	xchg   ebx,eax
  4089b7:	and    DWORD PTR [edi-0x5d],ebp
  4089ba:	mov    DWORD PTR [ebp+edi*2-0x695fb008],0xdd4e174f
  4089c5:	cmp    dl,ah
  4089c7:	(bad)  
  4089c8:	(bad)  
  4089ca:	lock or DWORD PTR ds:0xd046b4db,ebx
  4089d1:	popf   
  4089d2:	cld    
  4089d3:	xor    dl,bh
  4089d5:	adc    edi,ecx
  4089d7:	in     al,dx
  4089d8:	call   0x6156:0xc4deb9c2
  4089df:	dec    ah
  4089e1:	cmp    DWORD PTR [eax],ecx
  4089e3:	or     eax,0xc93af61f
  4089e8:	sub    DWORD PTR [ecx+0x2adfc740],edx
  4089ee:	add    BYTE PTR [esi+0x12b970dd],bl
  4089f4:	push   0x7
  4089f6:	xor    DWORD PTR [esi+0x74b94f70],eax
  4089fc:	imul   ebx,DWORD PTR ds:0x99b46748,0xffffffdc
  408a03:	(bad)  
  408a06:	dec    esi
  408a07:	das    
  408a08:	xchg   DWORD PTR [eax],edx
  408a0a:	mov    cl,0xa9
  408a0c:	adc    eax,0xe92b324b
  408a11:	(bad)
  408a14:	dec    esp
  408a15:	adc    ebp,DWORD PTR [esi+0x77]
  408a18:	or     edx,DWORD PTR [edx-0x5f]
  408a1b:	shl    edx,0x6e
  408a1e:	aam    0x43
  408a20:	cmc    
  408a21:	mov    ecx,0xc22da048
  408a26:	test   al,0xc3
  408a28:	xor    dl,BYTE PTR [ecx+ebp*4+0x4b]
  408a2c:	jo     0x4089d3
  408a2e:	clc    
  408a2f:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  408a31:	push   edx
  408a32:	jmp    0x408a42
  408a34:	shl    BYTE PTR [ebx],1
  408a36:	daa    
  408a37:	in     eax,dx
  408a38:	mov    esi,0xb0ab9e5c
  408a3d:	sub    bl,BYTE PTR [ebx]
  408a3f:	je     0x408aa7
  408a41:	sbb    BYTE PTR ds:[eax+0x2f],ch
  408a45:	add    DWORD PTR [ebx+0x65],ebx
  408a48:	int    0x94
  408a4a:	mov    esi,0x27361f47
  408a4f:	test   DWORD PTR [ebp-0x3ea8a751],ecx
  408a55:	lods   eax,DWORD PTR ds:[esi]
  408a56:	cld    
  408a57:	push   ebp
  408a58:	and    al,0x19
  408a5a:	ret    0x2eb1
  408a5d:	push   ds
  408a5e:	hlt    
  408a5f:	call   0x9c2ea0f4
  408a64:	sub    BYTE PTR [eax-0x2],ah
  408a67:	mov    DWORD PTR [ebx],esi
  408a69:	rol    DWORD PTR [ebx],1
  408a6b:	(bad)  
  408a6c:	cmp    edx,eax
  408a6e:	je     0x408d06
  408a74:	jmp    0x408b9d
  408a79:	xor    ecx,DWORD PTR [edx+ebx*1-0x14]
  408a7d:	cdq    
  408a7e:	js     0x408a69
  408a80:	popa   
  408a81:	cmp    ax,0xba8d
  408a85:	sbb    al,0x33
  408a87:	fs dec esp
  408a89:	adc    DWORD PTR [ecx],ebp
  408a8b:	jle    0x408b0b
  408a8d:	or     bh,BYTE PTR [edi+0x7e]
  408a90:	jle    0x408a58
  408a92:	rcr    DWORD PTR [esi-0x57],cl
  408a95:	pop    ebp
  408a96:	ss cmp eax,0x5d0bad2
  408a9c:	jae    0x408a67
  408a9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a9f:	out    dx,al
  408aa0:	xlat   BYTE PTR ds:[ebx]
  408aa1:	pop    esp
  408aa2:	imul   esi,DWORD PTR [ebp+0x62],0x31fc4a4d
  408aa9:	in     al,dx
  408aaa:	rcr    dh,0x6c
  408aad:	or     eax,0xc6fb228a
  408ab2:	xor    al,BYTE PTR [ecx]
  408ab4:	push   ecx
  408ab5:	ficomp DWORD PTR [ecx]
  408ab7:	and    BYTE PTR [ebp+0x3b52a48a],ah
  408abd:	inc    eax
  408abe:	push   es
  408abf:	stos   DWORD PTR es:[edi],eax
  408ac0:	or     al,BYTE PTR [eax+0x53]
  408ac3:	or     bh,BYTE PTR [esi-0x78]
  408ac6:	xchg   DWORD PTR [esi],edx
  408ac8:	(bad)  
  408ac9:	fwait
  408aca:	shr    BYTE PTR [esi+0x22d32879],1
  408ad0:	cld    
  408ad1:	cmp    ah,BYTE PTR [edi]
  408ad3:	adc    BYTE PTR [edi+0x7a],ah
  408ad6:	sub    eax,0xfd43ece9
  408adb:	push   esi
  408adc:	add    al,0x9b
  408ade:	je     0x408b01
  408ae0:	cmp    al,0xea
  408ae2:	sbb    DWORD PTR [eax],ebp
  408ae4:	lea    ebx,[edi]
  408ae6:	ja     0x408ae2
  408ae8:	ins    BYTE PTR es:[edi],dx
  408ae9:	ja     0x408a82
  408aeb:	jle    0x408b53
  408aed:	popf   
  408aee:	jnp    0x408a9d
  408af0:	rcr    DWORD PTR [eax],0xf8
  408af3:	ror    DWORD PTR [ecx+0x3ee2db79],0x20
  408afa:	add    ebx,0xab5d7f4d
  408b00:	hlt    
  408b01:	adc    al,0x6
  408b03:	push   ss
  408b04:	push   0xbcafae47
  408b09:	pop    eax
  408b0a:	sahf   
  408b0b:	sub    bl,BYTE PTR [esi]
  408b0d:	pop    eax
  408b0e:	mov    al,ds:0xfaa5422a
  408b13:	call   0x54dc09eb
  408b18:	push   es
  408b19:	sub    DWORD PTR [edi+0x6c7e0353],edi
  408b1f:	aas    
  408b20:	out    dx,al
  408b21:	push   ss
  408b22:	mov    WORD PTR [ecx-0x6fccbcaf],es
  408b28:	pushf  
  408b29:	xchg   edi,eax
  408b2a:	push   esp
  408b2b:	add    eax,DWORD PTR [ebx]
  408b2d:	aas    
  408b2e:	mov    eax,0xfaafa540
  408b33:	stc    
  408b34:	test   BYTE PTR [edx-0x77],al
  408b37:	ins    BYTE PTR es:[edi],dx
  408b38:	xchg   esi,eax
  408b39:	je     0x408adb
  408b3b:	cmp    BYTE PTR [ebx],dh
  408b3d:	mov    cl,0x42
  408b3f:	cli    
  408b40:	data16 aas 
  408b42:	push   ebx
  408b43:	(bad)  
  408b44:	std    
  408b45:	dec    ecx
  408b46:	xor    bh,ah
  408b48:	cmp    DWORD PTR [ebx+0x77e5d593],eax
  408b4e:	jp     0x408af3
  408b50:	adc    cl,BYTE PTR [eax-0x34eb65d3]
  408b56:	xlat   BYTE PTR ds:[ebx]
  408b57:	lea    eax,[ecx+0x74eb87c1]
  408b5d:	push   ss
  408b5e:	mul    BYTE PTR [esi-0x8]
  408b61:	inc    ecx
  408b62:	or     BYTE PTR [edx+0x732d68f4],ah
  408b68:	(bad)  
  408b69:	leave  
  408b6a:	nop
  408b6b:	adc    ch,cl
  408b6d:	cdq    
  408b6e:	icebp  
  408b6f:	outs   dx,BYTE PTR ds:[esi]
  408b70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b71:	pop    ebp
  408b72:	or     ebp,DWORD PTR [ebx]
  408b74:	mov    esi,DWORD PTR [ebp+ebx*2+0x49]
  408b78:	or     dh,dh
  408b7a:	lods   al,BYTE PTR ds:[esi]
  408b7b:	inc    ebx
  408b7c:	mov    ecx,0x1e315cbb
  408b81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b82:	mul    DWORD PTR [ecx-0x20bba9dd]
  408b88:	lea    edx,[ecx-0x73]
  408b8b:	push   ebp
  408b8c:	mov    eax,0x34a95ea7
  408b91:	dec    edi
  408b92:	jl     0x408b2a
  408b94:	stos   BYTE PTR es:[edi],al
  408b95:	mov    esp,0x98b3fec0
  408b9a:	mov    DWORD PTR [ecx+0x9],edx
  408b9d:	push   ebx
  408b9e:	push   edi
  408b9f:	mov    edi,DWORD PTR [ebp+0x8]
  408ba2:	mov    eax,0x8a43
  408ba7:	xor    ax,WORD PTR [edi+edx*4+0x2]
  408bac:	mov    edi,0x3b0a
  408bb1:	add    ax,di
  408bb4:	movzx  eax,ax
  408bb7:	mov    DWORD PTR [ebp-0x14],eax
  408bba:	mov    eax,DWORD PTR [ebp+0x8]
  408bbd:	jmp    0x408ce6
  408bc2:	(bad)  
  408bc3:	fcom   DWORD PTR [edx+eax*8]
  408bc6:	sub    dl,ah
  408bc8:	clc    
  408bc9:	fcomp  DWORD PTR [ebx+0x331369bd]
  408bcf:	sbb    al,cl
  408bd1:	mov    ah,0x2d
  408bd3:	cs jle 0x408c54
  408bd6:	or     bh,BYTE PTR [edi+0x7e]
  408bd9:	jle    0x408bff
  408bdb:	pop    bp
  408bdd:	imul   edx,DWORD PTR [esi-0x28],0x53
  408be1:	xchg   ebx,eax
  408be2:	and    bl,BYTE PTR [esi+0x63]
  408be5:	add    esi,DWORD PTR [ecx-0x2]
  408be8:	addr16 or ah,dl
  408beb:	inc    edi
  408bec:	dec    esi
  408bed:	imul   ebx,DWORD PTR [eax+ebp*2],0x525ed463
  408bf4:	lds    esp,FWORD PTR [ebx-0x60]
  408bf7:	test   eax,0x464547a1
  408bfc:	cmp    DWORD PTR [eax+eiz*8],eax
  408bff:	test   al,0x37
  408c01:	pavgb  mm1,QWORD PTR [edi-0x23]
  408c05:	add    bl,BYTE PTR [ebp-0x5c]
  408c08:	clc    
  408c09:	xor    dl,BYTE PTR [eax-0x51237b16]
  408c0f:	pop    esi
  408c10:	xor    ebp,DWORD PTR [edx]
  408c12:	daa    
  408c13:	sub    dh,0xde
  408c16:	and    DWORD PTR [ecx+edi*1],eax
  408c19:	mov    BYTE PTR [ecx],al
  408c1b:	iret   
  408c1c:	and    DWORD PTR es:[eax-0x4bee6103],0xffffffa0
  408c24:	dec    eax
  408c25:	or     bh,BYTE PTR [esi]
  408c27:	sbb    al,0x58
  408c29:	popf   
  408c2a:	jae    0x408c76
  408c2c:	icebp  
  408c2d:	stos   BYTE PTR es:[edi],al
  408c2e:	xor    edx,ecx
  408c30:	lahf   
  408c31:	stos   BYTE PTR es:[edi],al
  408c32:	gs ja  0x408c0a
  408c35:	sub    cl,BYTE PTR [ecx+0x4c]
  408c38:	mov    al,ds:0x1949a6bd
  408c3d:	dec    ebx
  408c3e:	xlat   BYTE PTR ds:[ebx]
  408c3f:	jmp    0x8f18:0xdccef2af
  408c46:	icebp  
  408c47:	xor    eax,0x16cb6fc1
  408c4c:	push   ds
  408c4d:	fidiv  WORD PTR [ebp-0x50]
  408c50:	or     DWORD PTR [edx],0x31
  408c53:	adc    edx,DWORD PTR [edi]
  408c55:	jbe    0x408cb3
  408c57:	cdq    
  408c58:	das    
  408c59:	jg     0x408be1
  408c5b:	fnstsw WORD PTR [ebx]
  408c5d:	xor    al,0x75
  408c5f:	adc    ch,bl
  408c61:	sub    DWORD PTR [ebp-0x6f],ecx
  408c64:	cmp    ch,BYTE PTR [ebx+0x31]
  408c67:	jae    0x408c05
  408c69:	dec    ecx
  408c6a:	push   ds
  408c6b:	mov    eax,0xcb0cadcf
  408c70:	fdivr  st,st(1)
  408c72:	sbb    al,0x5c
  408c74:	xor    al,0xc8
  408c76:	addr16 cld 
  408c78:	mov    ds:0xc4b6391f,al
  408c7d:	xchg   esi,eax
  408c7e:	popa   
  408c7f:	pusha  
  408c80:	push   edi
  408c81:	jecxz  0x408c2a
  408c83:	fsub   QWORD PTR [eax]
  408c85:	aas    
  408c86:	std    
  408c87:	popf   
  408c88:	and    DWORD PTR [ebx+ebx*1+0x14],0x1a
  408c8d:	cmp    DWORD PTR [edx+0x4c],0xffffff94
  408c91:	(bad)  
  408c92:	out    dx,al
  408c93:	mov    eax,ds:0x4bb26981
  408c98:	add    dl,cl
  408c9a:	xor    BYTE PTR [edi-0xd683e09],al
  408ca0:	call   0xda1e:0xf396b6b9
  408ca7:	xchg   dh,dh
  408ca9:	pushf  
  408caa:	pop    ebp
  408cab:	into   
  408cac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cad:	dec    edi
  408cae:	xchg   ecx,eax
  408caf:	imul   ecx,DWORD PTR [edx+0x6444915d],0xffffffd0
  408cb6:	pop    edi
  408cb7:	xchg   esp,eax
  408cb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cb9:	sbb    bl,BYTE PTR [edx+0x31523ec9]
  408cbf:	cmp    DWORD PTR [ebp-0x2c],edx
  408cc2:	and    al,0xe
  408cc4:	popa   
  408cc5:	sahf   
  408cc6:	xchg   edx,eax
  408cc7:	lds    ebx,FWORD PTR [edx+eax*1]
  408cca:	mov    ss,WORD PTR [edi-0x5d]
  408ccd:	inc    esp
  408cce:	pusha  
  408ccf:	add    DWORD PTR [edi-0x7a47cc3c],0xffffffe5
  408cd6:	std    
  408cd7:	in     eax,0xeb
  408cd9:	add    eax,0x4ad24c20
  408cde:	aam    0xab
  408ce0:	dec    eax
  408ce1:	mov    ebx,0xf86fc01
  408ce7:	mov    bh,0x4
  408ce9:	nop
  408cea:	xor    eax,0x8a43
  408cef:	add    eax,edi
  408cf1:	mov    edi,DWORD PTR [ebp-0x14]
  408cf4:	mov    BYTE PTR [ebp+edi*1-0x58],al
  408cf8:	mov    eax,DWORD PTR [ebp-0xc]
  408cfb:	inc    edx
  408cfc:	cmp    edx,eax
  408cfe:	jne    0x408b9f
  408d04:	pop    edi
  408d05:	pop    ebx
  408d06:	mov    eax,DWORD PTR [ebp-0x8]
  408d09:	mov    edx,DWORD PTR [ebp+0x10]
  408d0c:	xor    eax,ecx
  408d0e:	jmp    0x408e37
  408d13:	inc    esp
  408d14:	(bad)  
  408d15:	jno    0x408cee
  408d17:	icebp  
  408d18:	stc    
  408d19:	js     0x408d80
  408d1b:	xchg   esp,eax
  408d1c:	ins    BYTE PTR es:[edi],dx
  408d1d:	retf   0x95a3
  408d20:	fcom   DWORD PTR [eax+edi*1+0x7e7e2f39]
  408d27:	or     bh,BYTE PTR [edi+0x7e]
  408d2a:	jle    0x408cb2
  408d2c:	mov    dl,0x53
  408d2e:	mov    bl,al
  408d30:	arpl   bx,bp
  408d32:	sub    al,0x74
  408d34:	cld    
  408d35:	dec    eax
  408d36:	aas    
  408d37:	jb     0x408d0e
  408d39:	jb     0x408d0c
  408d3b:	or     cl,0x3a
  408d3e:	jge    0x408cf9
  408d40:	(bad)  
  408d41:	adc    dl,BYTE PTR [edi-0x6e]
  408d44:	xor    eax,0x7c49fa3b
  408d49:	push   ss
  408d4a:	xchg   BYTE PTR [edi-0x43],bh
  408d4d:	and    eax,0xeae22b76
  408d52:	dec    ecx
  408d53:	pop    ebx
  408d54:	out    0xcc,eax
  408d56:	ds pop esp
  408d58:	jge    0x408da4
  408d5a:	sub    cl,dl
  408d5c:	jge    0x408d1b
  408d5e:	dec    ecx
  408d5f:	lea    edx,[eax]
  408d61:	fild   DWORD PTR [ecx]
  408d63:	mov    ebx,0x9ab34fb
  408d68:	int    0x0
  408d6a:	cs cmc 
  408d6c:	push   ss
  408d6d:	pusha  
  408d6e:	cmp    eax,edx
  408d70:	cwde   
  408d71:	sub    eax,0x64e5936b
  408d76:	in     al,dx
  408d77:	popf   
  408d78:	mov    eax,0x89d5057c
  408d7d:	inc    edi
  408d7e:	nop
  408d7f:	mov    BYTE PTR [edx-0x3],0xaa
  408d83:	inc    esp
  408d84:	ins    DWORD PTR es:[edi],dx
  408d85:	add    al,0xff
  408d87:	shr    bl,1
  408d89:	icebp  
  408d8a:	(bad)  
  408d8c:	jb     0x408d7a
  408d8e:	out    0xc8,al
  408d90:	and    BYTE PTR [edx+0x5fad2388],ch
  408d96:	fst    DWORD PTR [ebp+0x53]
  408d99:	ss mov eax,0xfa99a923
  408d9f:	(bad)  
  408da0:	repnz cmp DWORD PTR [eax-0x61],ebp
  408da4:	mov    ecx,0xf039f171
  408da9:	inc    edi
  408daa:	es xchg ebp,eax
  408dac:	add    al,0x7d
  408dae:	mov    dl,0xdf
  408db0:	mov    ebp,0xf75a8d10
  408db5:	rol    BYTE PTR [ecx+0x4533f7dd],cl
  408dbb:	dec    esp
  408dbc:	add    eax,0x4a66466f
  408dc1:	push   ds
  408dc2:	inc    ebx
  408dc3:	mov    esp,0x570d0046
  408dc8:	sub    eax,0xe2e37d25
  408dcd:	adc    eax,esp
  408dcf:	mov    bh,0xa0
  408dd1:	jbe    0x408e3a
  408dd3:	pop    es
  408dd4:	and    DWORD PTR [ebp+0x3bd70745],edx
  408dda:	mov    ebx,0xee27661c
  408ddf:	aaa    
  408de0:	in     eax,dx
  408de1:	inc    esi
  408de2:	and    eax,0x7e41d533
  408de7:	xchg   edx,eax
  408de8:	ss mov ebp,0x6c0cca55
  408dee:	jecxz  0x408d77
  408df0:	jcxz   0x408ddf
  408df3:	test   eax,0xf44b7480
  408df8:	dec    edx
  408df9:	idiv   BYTE PTR [edx-0x57]
  408dfc:	xchg   ebp,eax
  408dfd:	bound  eax,QWORD PTR [edx]
  408dff:	outs   dx,DWORD PTR ds:[esi]
  408e00:	test   edi,0xb6cc0dc6
  408e06:	outs   dx,BYTE PTR ds:[esi]
  408e07:	fs pop esp
  408e09:	es jecxz 0x408e17
  408e0c:	(bad)  
  408e0d:	or     eax,0xf258b637
  408e12:	mov    ds:0x77ba5d9d,eax
  408e17:	popf   
  408e18:	ds (bad) 
  408e1a:	fdiv   QWORD PTR ds:0x50c7486d
  408e20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e21:	sub    al,0xac
  408e23:	dec    esi
  408e24:	stos   BYTE PTR es:[edi],al
  408e25:	cmp    al,bh
  408e27:	out    0x5,eax
  408e29:	mov    ebx,0x162d85f7
  408e2e:	sbb    edx,DWORD PTR [eax+edi*1]
  408e31:	dec    ebp
  408e32:	xchg   edi,eax
  408e33:	ret    0x966d
  408e36:	lods   al,BYTE PTR ds:[esi]
  408e37:	add    eax,esi
  408e39:	mov    DWORD PTR [edx],eax
  408e3b:	jmp    0x408f64
  408e40:	dec    eax
  408e41:	sub    ecx,DWORD PTR [edx]
  408e43:	lock imul edx,DWORD PTR [ecx+0x1c4aeb48],0x73f6de2b
  408e4e:	mov    esp,0x7e2c3507
  408e53:	jle    0x408e5f
  408e55:	jg     0x408ed5
  408e57:	jle    0x408ed6
  408e59:	xchg   edi,eax
  408e5a:	ror    BYTE PTR [ecx+0x5c579b65],0xe3
  408e61:	out    0xa0,al
  408e63:	jns    0x408eab
  408e65:	sti    
  408e66:	pop    eax
  408e67:	mov    dl,0x7b
  408e69:	dec    eax
  408e6a:	dec    edi
  408e6b:	in     eax,0x44
  408e6d:	xchg   ecx,eax
  408e6e:	loop   0x408e25
  408e70:	adc    eax,0x1741a53e
  408e75:	jg     0x408ead
  408e77:	and    eax,0x7b3e01ee
  408e7c:	lods   eax,DWORD PTR ds:[esi]
  408e7d:	push   eax
  408e7e:	inc    edx
  408e7f:	pop    esi
  408e80:	stc    
  408e81:	xchg   ebp,eax
  408e82:	add    BYTE PTR [ebx+0x4c],bl
  408e85:	pusha  
  408e86:	neg    DWORD PTR [edi+0x4bfae8aa]
  408e8c:	push   0xb
  408e8e:	aad    0x41
  408e90:	dec    DWORD PTR [edi+0x42c97a6a]
  408e96:	sub    BYTE PTR [ebx],al
  408e98:	jle    0x408ef1
  408e9a:	adc    DWORD PTR [edx-0x46e052d3],ecx
  408ea0:	cli    
  408ea1:	shr    BYTE PTR [esi+0x17],0x73
  408ea5:	loop   0x408e71
  408ea7:	xor    dl,cl
  408ea9:	inc    edx
  408eaa:	rol    DWORD PTR [ebp-0x54],cl
  408ead:	in     eax,dx
  408eae:	data16 ins WORD PTR es:[edi],dx
  408eb1:	push   cs
  408eb2:	(bad)  
  408eb3:	pop    ebp
  408eb4:	pop    ebx
  408eb5:	aad    0xd9
  408eb7:	add    esp,ebx
  408eb9:	mov    eax,0x82958fb6
  408ebe:	stc    
  408ebf:	int    0xe8
  408ec1:	mov    esi,DWORD PTR [esi-0x7bbf626a]
  408ec7:	mov    edx,0xc048921c
  408ecc:	cmp    eax,0x325cd417
  408ed1:	and    ebp,DWORD PTR [ebp-0x2c38acd9]
  408ed7:	int    0x25
  408ed9:	fdivr  QWORD PTR [edi+0x71]
  408edc:	or     edx,esp
  408ede:	ja     0x408ef6
  408ee0:	inc    edx
  408ee1:	repz push ecx
  408ee3:	push   esp
  408ee4:	mov    al,0xe9
  408ee6:	lock hlt 
  408ee8:	(bad)
  408eec:	es retf 0x5df8
  408ef0:	out    0x9c,al
  408ef2:	mov    ebx,0xc6dd0e14
  408ef7:	jns    0x408eeb
  408ef9:	imul   esp
  408efb:	(bad)  
  408efc:	cmp    eax,0x69228db7
  408f01:	or     BYTE PTR [edi-0x79],cl
  408f04:	mov    DWORD PTR [ebx+0x67949c09],0x4c93d244
  408f0e:	into   
  408f0f:	pop    esp
  408f10:	sub    esp,ebx
  408f12:	dec    ebx
  408f13:	add    al,0x6c
  408f15:	inc    ebp
  408f16:	inc    edi
  408f17:	adc    eax,0x49ac2345
  408f1c:	hlt    
  408f1d:	push   ebp
  408f1e:	(bad)  
  408f1f:	cmc    
  408f20:	loopne 0x408ecc
  408f22:	jne    0x408f86
  408f24:	inc    ebp
  408f25:	mov    al,0xe9
  408f27:	fsubr  QWORD PTR [edx]
  408f29:	mov    ds:0xdcfb30e1,al
  408f2e:	or     cl,BYTE PTR [ebx]
  408f30:	enter  0x142,0xe6
  408f34:	mov    eax,0xd9dc4354
  408f39:	jb     0x408f91
  408f3b:	clc    
  408f3c:	outs   dx,DWORD PTR ds:[esi]
  408f3d:	mov    ds:0xe263857,al
  408f42:	jmp    DWORD PTR [edi-0x3d9baea9]
  408f48:	mov    BYTE PTR [ebx+eax*2-0x45],al
  408f4c:	jle    0x408fc0
  408f4e:	add    al,0x45
  408f50:	imul   ebx,edx,0x68414da8
  408f56:	pop    esi
  408f57:	cmp    al,ah
  408f59:	jae    0x408f40
  408f5b:	scas   eax,DWORD PTR es:[edi]
  408f5c:	jecxz  0x408efc
  408f5e:	inc    ebp
  408f5f:	add    eax,0x9d1f7c86
  408f64:	mov    eax,DWORD PTR [ebp-0x8]
  408f67:	xor    eax,ecx
  408f69:	add    eax,esi
  408f6b:	mov    DWORD PTR [ebp+0x8],eax
  408f6e:	mov    eax,DWORD PTR [ebp+0x8]
  408f71:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f75:	mov    dl,BYTE PTR [ebp-0x1]
  408f78:	cmp    al,dl
  408f7a:	je     0x4090e6
  408f80:	mov    eax,DWORD PTR [ebp+0x8]
  408f83:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f87:	mov    edx,DWORD PTR [ebp+0xc]
  408f8a:	cmp    al,BYTE PTR [edx]
  408f8c:	jne    0x40935e
  408f92:	mov    eax,DWORD PTR [ebp-0x8]
  408f95:	mov    edx,DWORD PTR [ebp+0xc]
  408f98:	jmp    0x4090c1
  408f9d:	jmp    0x7952d498
  408fa2:	loopne 0x40901d
  408fa4:	mov    ch,0xbe
  408fa6:	jmp    0xd687b935
  408fab:	sete   cl
  408fae:	sub    eax,0x7f0a7e7e
  408fb3:	jle    0x409033
  408fb5:	mov    al,ds:0x6e1653d1
  408fba:	pop    esp
  408fbb:	sbb    BYTE PTR [edi+ebx*2-0x495ffba7],ah
  408fc2:	or     BYTE PTR [ebx+0x37ada2f9],dh
  408fc8:	push   ds
  408fc9:	sti    
  408fca:	arpl   WORD PTR [ecx-0x4b55e48e],bp
  408fd0:	mov    ecx,0x2778a896
  408fd5:	pop    edi
  408fd6:	and    DWORD PTR [eax-0x30],0xffffffd2
  408fda:	popa   
  408fdb:	inc    edi
  408fdc:	cld    
  408fdd:	and    al,0xa
  408fdf:	test   dl,bh
  408fe1:	jns    0x408fa4
  408fe3:	pusha  
  408fe4:	jnp    0x408f7d
  408fe6:	(bad)  
  408fe7:	outs   dx,DWORD PTR ds:[esi]
  408fe8:	fscale 
  408fea:	mov    esp,edx
  408fec:	sub    edi,ebx
  408fee:	es repnz push ebx
  408ff1:	xchg   edi,eax
  408ff2:	xchg   BYTE PTR [esi],al
  408ff4:	mov    cl,0x7e
  408ff6:	xchg   esp,eax
  408ff7:	sub    eax,0x627c52f5
  408ffc:	jnp    0x40906f
  408ffe:	add    al,0xe6
  409000:	aad    0xe9
  409002:	xor    BYTE PTR [ecx],bh
  409004:	mov    ebx,0x98c266ba
  409009:	test   DWORD PTR [ebp+0x3191851b],esp
  40900f:	pop    edx
  409010:	cdq    
  409011:	inc    esi
  409012:	not    edi
  409014:	xchg   edi,eax
  409015:	daa    
  409016:	es mov edi,0x864271b
  40901c:	push   ebp
  40901d:	fistp  WORD PTR [ebp+0x38]
  409020:	cld    
  409021:	cmp    dl,al
  409023:	ret    0x5a9
  409026:	icebp  
  409027:	cli    
  409028:	ret    
  409029:	jle    0x40907d
  40902b:	jnp    0x409049
  40902d:	add    DWORD PTR [ebp+0x6e],0x25b6e9f
  409034:	ror    BYTE PTR [edx-0x25],cl
  409037:	call   0x21cd:0xfd642fc3
  40903e:	outs   dx,DWORD PTR ds:[esi]
  40903f:	outs   dx,DWORD PTR ds:[esi]
  409040:	push   0x38
  409042:	js     0x408fd4
  409044:	push   esi
  409045:	mov    DWORD PTR [edx+0x1054b831],esp
  40904b:	(bad)  
  40904c:	(bad)  
  40904d:	loope  0x409081
  40904f:	jecxz  0x408ff5
  409051:	or     eax,0x275c280f
  409056:	loope  0x408fda
  409058:	mov    eax,ds:0xf39b7903
  40905d:	push   cs
  40905e:	enter  0x44d6,0xd1
  409062:	fiadd  WORD PTR [esi]
  409064:	mov    esi,0x532829a4
  409069:	sub    dl,BYTE PTR [edx-0xad3a14c]
  40906f:	fsubr  QWORD PTR [edx+ebx*1]
  409072:	test   edx,ebx
  409074:	mov    bh,0x4
  409076:	test   BYTE PTR [ecx],cl
  409078:	pop    edx
  409079:	jmp    FWORD PTR [edi]
  40907b:	xchg   ebx,eax
  40907c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40907d:	cmc    
  40907e:	shr    DWORD PTR [esi+0x41],cl
  409081:	xchg   ebx,eax
  409082:	mov    ch,0x4c
  409084:	mov    bh,0x53
  409086:	dec    ebp
  409087:	add    ebx,DWORD PTR [ebx-0x7acf65f8]
  40908d:	iret   
  40908e:	and    ebx,DWORD PTR [eax+edi*2]
  409091:	icebp  
  409092:	push   0xd0ba8df1
  409097:	pushf  
  409098:	jge    0x40906a
  40909a:	inc    esi
  40909b:	shl    BYTE PTR [eax-0x54],0x52
  40909f:	pop    ebx
  4090a0:	into   
  4090a1:	clc    
  4090a2:	js     0x409062
  4090a4:	jnp    0x4090f1
  4090a6:	adc    dl,ch
  4090a8:	nop
  4090a9:	dec    edi
  4090aa:	xchg   esp,eax
  4090ab:	mov    cl,0x36
  4090ad:	mov    bl,BYTE PTR [esi+ebx*2-0x6c8b566b]
  4090b4:	push   edx
  4090b5:	inc    esi
  4090b6:	push   ecx
  4090b7:	ins    DWORD PTR es:[edi],dx
  4090b8:	dec    ebx
  4090b9:	adc    eax,0x4d184592
  4090be:	mov    db5,ecx
  4090c1:	movsx  edx,BYTE PTR [edx]
  4090c4:	xor    eax,ecx
  4090c6:	add    eax,esi
  4090c8:	cmp    edx,eax
  4090ca:	je     0x409229
  4090d0:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  4090d7:	lea    eax,[ebp-0x18]
  4090da:	mov    DWORD PTR [ebp-0x14],eax
  4090dd:	mov    eax,DWORD PTR [ebp-0x14]
  4090e0:	add    DWORD PTR [eax],0x705fa8e
  4090e6:	mov    eax,DWORD PTR [ebp-0x10]
  4090e9:	jmp    0x409212
  4090ee:	lods   eax,DWORD PTR ds:[esi]
  4090ef:	lock test BYTE PTR [ecx+edi*4],al
  4090f3:	sbb    BYTE PTR [ebp-0x47188557],ch
  4090f9:	daa    
  4090fa:	jmp    0x409094
  4090fc:	jns    0x4090cc
  4090fe:	frstor [edx]
  409100:	jle    0x409180
  409102:	or     bh,BYTE PTR [edi+0x7e]
  409105:	jle    0x4090b2
  409107:	mov    dl,0x11
  409109:	out    0x3d,eax
  40910b:	out    dx,al
  40910c:	cmp    bl,BYTE PTR [ebx+0x1d]
  40910f:	icebp  
  409110:	enter  0x8b94,0x73
  409114:	dec    ebx
  409115:	jne    0x40911c
  409117:	aam    0xe9
  409119:	inc    ebx
  40911a:	cs int3 
  40911c:	mov    ebx,0x66dfefac
  409121:	js     0x4090d7
  409123:	(bad)
  409127:	jmp    FWORD PTR [ebp+0x1fdc840e]
  40912d:	(bad)  
  40912e:	out    dx,al
  40912f:	mov    cl,0x76
  409131:	inc    esi
  409132:	(bad)  [eax]
  409134:	loop   0x40919f
  409136:	fdivr  DWORD PTR [esi-0x8430d66]
  40913c:	int    0x26
  40913e:	test   ch,0xba
  409141:	ins    DWORD PTR es:[edi],dx
  409142:	lea    ecx,[ebp+ebp*8-0x23]
  409146:	or     eax,0x5d748735
  40914b:	add    eax,DWORD PTR [esi+ebx*1+0x53d13cfe]
  409152:	loop   0x409120
  409154:	in     al,0xa7
  409156:	pop    ebx
  409157:	dec    esp
  409158:	jecxz  0x40911b
  40915a:	pop    ds
  40915b:	mov    dl,0x92
  40915d:	inc    eax
  40915e:	add    BYTE PTR [eax-0x2b2973cd],al
  409164:	aad    0x9
  409166:	fbld   TBYTE PTR [edi]
  409168:	xor    DWORD PTR [esi+0x6fa732c3],edx
  40916e:	out    dx,al
  40916f:	test   eax,ebx
  409171:	pop    eax
  409172:	pop    edi
  409173:	mov    BYTE PTR [ebp-0x3b],bl
  409176:	jge    0x409132
  409178:	out    0x8b,al
  40917a:	test   eax,edi
  40917c:	fwait
  40917d:	loopne 0x40915e
  40917f:	inc    eax
  409180:	and    edx,DWORD PTR [edi]
  409182:	lods   eax,DWORD PTR ds:[esi]
  409183:	mov    edx,0x48e1d29
  409188:	(bad)  
  409189:	into   
  40918a:	xchg   ecx,eax
  40918b:	pop    es
  40918c:	test   edx,edi
  40918e:	ror    BYTE PTR [ecx-0x2cde1d93],cl
  409194:	pop    esp
  409195:	iret   
  409196:	jb     0x40916a
  409198:	gs xchg esp,eax
  40919a:	inc    esi
  40919b:	cdq    
  40919c:	adc    DWORD PTR ds:0xf61e69ae,0x1d
  4091a3:	(bad)  
  4091a5:	rol    DWORD PTR [edx+ebx*2+0x23],1
  4091a9:	dec    ecx
  4091aa:	jle    0x4091bb
  4091ac:	fucomip st,st(6)
  4091ae:	(bad)  
  4091af:	fsub   QWORD PTR [esi+0x5e]
  4091b2:	test   al,0xe1
  4091b4:	es xchg ecx,eax
  4091b6:	jnp    0x409214
  4091b8:	push   esi
  4091b9:	xchg   edx,eax
  4091ba:	rcr    BYTE PTR [esi+eax*8+0x4fb5dfb6],0x8a
  4091c2:	pop    edx
  4091c3:	scas   al,BYTE PTR es:[edi]
  4091c4:	inc    esp
  4091c5:	fsub   DWORD PTR [ecx]
  4091c7:	aam    0x83
  4091c9:	mov    WORD PTR [ebp-0x2],?
  4091cc:	bound  esi,QWORD PTR [esi-0x75]
  4091cf:	arpl   WORD PTR [ecx+edi*4],cx
  4091d2:	fs jecxz 0x4091f8
  4091d5:	dec    edx
  4091d6:	fistp  QWORD PTR [ecx-0x12]
  4091d9:	mov    ch,0xb
  4091db:	jb     0x409160
  4091dd:	and    BYTE PTR [edi+0x29],al
  4091e0:	pop    esi
  4091e1:	fs inc esp
  4091e3:	(bad)  
  4091e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091e5:	adc    al,0x45
  4091e7:	inc    esp
  4091e8:	sti    
  4091e9:	pop    ecx
  4091ea:	sahf   
  4091eb:	out    dx,eax
  4091ec:	cwde   
  4091ed:	aas    
  4091ee:	div    DWORD PTR [ebx]
  4091f0:	mov    esp,ecx
  4091f2:	jl     0x409213
  4091f4:	mov    ebx,0x65b5ac4e
  4091f9:	jae    0x4091c7
  4091fb:	inc    edi
  4091fc:	add    DWORD PTR [ebx+0x49],ebp
  4091ff:	jno    0x40924a
  409201:	xchg   ch,bl
  409203:	sbb    cl,BYTE PTR [ecx]
  409205:	push   ds
  409206:	push   0xfb720a9a
  40920b:	ffree  st(6)
  40920d:	(bad)  
  40920e:	ret    0xb7a1
  409211:	mov    ecx,DWORD PTR [ebx-0x3eccf7ab]
  409217:	lea    eax,[eax+edx*1+0x32729f]
  40921e:	mov    DWORD PTR [ebp+0x8],eax
  409221:	inc    DWORD PTR [ebp+0xc]
  409224:	jmp    0x408f6e
  409229:	mov    eax,DWORD PTR [ebp-0x10]
  40922c:	xor    eax,ecx
  40922e:	jmp    0x409357
  409233:	or     DWORD PTR ds:0xd93acb2e,ebx
  409239:	stc    
  40923a:	(bad)  [ecx-0x50785839]
  409240:	lock jle 0x4092ab
  409243:	jmp    0xabf106b
  409248:	jg     0x4092c8
  40924a:	jle    0x4092c8
  40924c:	sub    al,0x29
  40924e:	lahf   
  40924f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409250:	loope  0x409251
  409252:	pushf  
  409253:	cli    
  409254:	outs   dx,DWORD PTR ds:[esi]
  409255:	(bad)  
  409256:	stos   BYTE PTR es:[edi],al
  409257:	stos   BYTE PTR es:[edi],al
  409258:	mov    edi,0x8684e10
  40925d:	ja     0x409289
  40925f:	fcom   QWORD PTR [esp+esi*4]
  409262:	(bad)  
  409263:	std    
  409264:	xchg   edi,eax
  409265:	loopne 0x4092d1
  409267:	xchg   DWORD PTR [eax],ebp
  409269:	cmp    al,0x24
  40926b:	mov    eax,ds:0x7e020d0a
  409270:	dec    ecx
  409271:	or     al,0xb9
  409273:	or     bh,BYTE PTR [ecx-0x77]
  409276:	repz shl DWORD PTR [eax-0x11840f3b],cl
  40927d:	push   0x5b
  40927f:	push   edi
  409280:	ins    DWORD PTR es:[edi],dx
  409281:	lods   al,BYTE PTR ds:[esi]
  409282:	neg    BYTE PTR [edi+0x37c4fffb]
  409288:	idiv   ebp
  40928a:	stos   BYTE PTR es:[edi],al
  40928b:	sbb    bh,BYTE PTR [ebp*1-0x6da9182a]
  409292:	xchg   ebx,eax
  409293:	dec    ecx
  409294:	jmp    0xf98e:0x93c87b3b
  40929b:	mov    ch,BYTE PTR [esi+0x7f]
  40929e:	lahf   
  40929f:	push   ebx
  4092a0:	sahf   
  4092a1:	hlt    
  4092a2:	cmc    
  4092a3:	cld    
  4092a4:	mov    edx,0x89f0e675
  4092a9:	leave  
  4092aa:	inc    ebp
  4092ab:	xchg   ecx,esp
  4092ad:	xlat   BYTE PTR ds:[ebx]
  4092ae:	sbb    ah,BYTE PTR [esi+0x64]
  4092b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092b2:	dec    edx
  4092b3:	adc    esp,DWORD PTR [ecx-0x489d5308]
  4092b9:	pop    eax
  4092ba:	push   cs
  4092bb:	outs   dx,BYTE PTR ds:[esi]
  4092bc:	and    DWORD PTR [edi+ebx*2],esp
  4092bf:	call   0x1663b534
  4092c4:	jae    0x4092cc
  4092c6:	inc    edi
  4092c7:	xchg   esi,eax
  4092c8:	mov    bh,0x1b
  4092ca:	les    edx,FWORD PTR [ecx-0x7f2368d1]
  4092d0:	pop    ecx
  4092d1:	mov    bl,0xcc
  4092d3:	cdq    
  4092d4:	jecxz  0x4092a6
  4092d6:	stos   BYTE PTR es:[edi],al
  4092d7:	mov    dh,0x29
  4092d9:	jnp    0x40929f
  4092db:	jnp    0x4092f8
  4092dd:	sti    
  4092de:	call   0x2bd81996
  4092e3:	sbb    DWORD PTR [eax+eiz*4],0x2c
  4092e7:	or     eax,0xa3807df8
  4092ec:	push   ecx
  4092ed:	call   DWORD PTR ds:0x6bfb7d2f
  4092f3:	cld    
  4092f4:	rol    DWORD PTR [ebx+0x34],1
  4092f7:	jns    0x409331
  4092f9:	xchg   DWORD PTR [ecx],esp
  4092fb:	shl    DWORD PTR [edi+ebx*4+0x19],0xd4
  409300:	aaa    
  409301:	xor    dh,0x3a
  409304:	call   0xa3d668c3
  409309:	fld    TBYTE PTR [esi+edx*1]
  40930c:	push   esp
  40930d:	cwde   
  40930e:	jo     0x4092ca
  409310:	xchg   ecx,eax
  409311:	jnp    0x4092d3
  409313:	dec    edi
  409314:	cmp    al,0x8d
  409316:	jns    0x409328
  409318:	rcr    BYTE PTR [edi+0x66eb1aed],1
  40931e:	imul   edx,ebp,0xffffff97
  409321:	push   cs
  409322:	dec    ebp
  409323:	je     0x40934b
  409325:	dec    esp
  409326:	add    edx,edx
  409328:	pop    ebp
  409329:	mov    BYTE PTR [ebx],ch
  40932b:	ficomp DWORD PTR [edi-0x33]
  40932e:	or     eax,0x322c511d
  409333:	dec    ebp
  409334:	cmp    DWORD PTR [edi+0x3f3ee695],ebp
  40933a:	xchg   esp,eax
  40933b:	mov    bh,0x2c
  40933d:	adc    ch,al
  40933f:	xor    DWORD PTR [ebp+0x76],edi
  409342:	xchg   cl,al
  409344:	ret    0xfd44
  409347:	xor    edx,DWORD PTR [esi-0x73940ad]
  40934d:	cmp    eax,0xb47e4f77
  409352:	pop    edx
  409353:	lea    ebp,[eax+0x4d8b6bc1]
  409359:	adc    BYTE PTR [ebx],al
  40935b:	(bad)  
  40935c:	mov    DWORD PTR [ecx],eax
  40935e:	pop    esi
  40935f:	leave  
  409360:	ret    0xc
  409363:	push   ebp
  409364:	mov    ebp,esp
  409366:	push   ecx
  409367:	not    eax
  409369:	mov    DWORD PTR [ebp-0x4],0xf89c853c
  409370:	mov    eax,DWORD PTR [ebp-0x4]
  409373:	mov    edx,DWORD PTR [ebp+0x10]
  409376:	add    DWORD PTR ds:0x4245c6,ebx
  40937c:	mov    ecx,0x7510859
  409381:	adc    DWORD PTR ds:0x41235c,0x4245c6
  40938b:	xor    eax,ecx
  40938d:	add    eax,0x32729f
  409392:	and    DWORD PTR ds:0x412368,0x417e41
  40939c:	mov    DWORD PTR [edx],eax
  40939e:	mov    eax,DWORD PTR [ebp+0xc]
  4093a1:	and    DWORD PTR ds:0x4245be,0x0
  4093ab:	jmp    0x4093bd
  4093b0:	mov    edx,DWORD PTR ds:0x4245be
  4093b6:	inc    edx
  4093b7:	mov    DWORD PTR ds:0x4245be,edx
  4093bd:	cmp    DWORD PTR ds:0x4245be,0x14
  4093c4:	jae    0x4093eb
  4093ca:	cmp    DWORD PTR ds:0x4245be,0x1c
  4093d1:	jne    0x4093e0
  4093d7:	push   DWORD PTR [ebp-0x20]
  4093da:	call   DWORD PTR ds:0x40d1e8
  4093e0:	jmp    0x4093b0
  4093e5:	sub    DWORD PTR ds:0x41237c,ebx
  4093eb:	xor    eax,ecx
  4093ed:	adc    edx,DWORD PTR ds:0x412360
  4093f3:	push   esi
  4093f4:	add    esi,edx
  4093f6:	mov    esi,DWORD PTR [ebp+0x10]
  4093f9:	mov    edx,0x32729f
  4093fe:	add    eax,edx
  409400:	xor    DWORD PTR ds:0x41abda,0x417e49
  40940a:	mov    DWORD PTR [esi+0x4],eax
  40940d:	mov    eax,ds:0x412398
  409412:	mov    esi,DWORD PTR ds:0x421896
  409418:	sub    esi,eax
  40941a:	xor    eax,DWORD PTR [eax+esi*1]
  40941d:	mov    eax,DWORD PTR [ebp+0x14]
  409420:	mov    esi,DWORD PTR [ebp+0x10]
  409423:	mov    DWORD PTR [esi+0x8],eax
  409426:	mov    DWORD PTR ds:0x412368,0x19
  409430:	cmp    DWORD PTR ds:0x412368,0x0
  409437:	je     0x409465
  40943d:	cmp    DWORD PTR ds:0x412368,0x21
  409444:	jne    0x409455
  40944a:	push   0x2b01
  40944f:	call   DWORD PTR ds:0x40d00c
  409455:	mov    eax,ds:0x412368
  40945a:	dec    eax
  40945b:	mov    ds:0x412368,eax
  409460:	jmp    0x409430
  409465:	mov    eax,DWORD PTR [ebp+0x18]
  409468:	mov    esi,DWORD PTR [ebp+0x10]
  40946b:	mov    DWORD PTR [esi+0xc],eax
  40946e:	mov    eax,DWORD PTR [ebp+0x1c]
  409471:	jmp    0x409522
  409476:	and    BYTE PTR [ebx],0x16
  409479:	xchg   esi,eax
  40947a:	xchg   ebp,eax
  40947b:	mov    ebx,0xa0863980
  409480:	xchg   ebp,eax
  409481:	xor    eax,0x9a1e32d6
  409486:	in     eax,0x20
  409488:	jle    0x409508
  40948a:	cmp    BYTE PTR [esi+0x7e],0x7e
  40948e:	adc    ebp,DWORD PTR [ecx]
  409490:	aaa    
  409491:	retf   
  409492:	jmp    0x40949c
  409494:	in     al,dx
  409495:	push   ss
  409496:	cmp    esi,DWORD PTR [eax-0x2c]
  409499:	xchg   esp,eax
  40949a:	mov    bl,0x58
  40949c:	enter  0x7fd6,0xff
  4094a0:	and    DWORD PTR [ebp+0x7],ebp
  4094a3:	mov    ebp,0x8605e98f
  4094a8:	clc    
  4094a9:	stos   BYTE PTR es:[edi],al
  4094aa:	cwde   
  4094ab:	jno    0x409461
  4094ad:	jge    0x40946c
  4094af:	and    ah,BYTE PTR [ecx+0x6ec3c8af]
  4094b5:	popa   
  4094b6:	xrelease xchg BYTE PTR [edx+ebx*2-0x3ecb2fd],dh
  4094be:	add    BYTE PTR ds:0x8dfa468d,al
  4094c4:	int3   
  4094c5:	lods   eax,DWORD PTR ds:[esi]
  4094c6:	into   
  4094c7:	dec    edi
  4094c8:	xchg   esi,eax
  4094c9:	jno    0x4094c4
  4094cb:	clc    
  4094cc:	adc    ecx,DWORD PTR [edi-0x5e]
  4094cf:	(bad)  
  4094d0:	repnz add dh,BYTE PTR [edx+0x394ee68a]
  4094d7:	pop    edx
  4094d8:	lods   al,BYTE PTR ds:[esi]
  4094d9:	and    eax,0xe6490c18
  4094de:	js     0x40951e
  4094e0:	pop    esp
  4094e1:	jae    0x4094fb
  4094e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094e4:	aas    
  4094e5:	icebp  
  4094e6:	and    esp,DWORD PTR [ecx]
  4094e8:	imul   DWORD PTR [ebp+0x36]
  4094eb:	sub    DWORD PTR [edi+0x784d4ef7],esi
  4094f1:	jno    0x4094a0
  4094f3:	(bad)  
  4094f4:	repnz bound edx,QWORD PTR [ebp-0x44df03a7]
  4094fb:	and    al,BYTE PTR [edi-0x27]
  4094fe:	ds jmp 0x4206:0x1c0112fc
  409506:	xchg   edi,eax
  409507:	adc    al,0x1
  409509:	add    al,0xe6
  40950b:	jnp    0x4094e7
  40950d:	sub    edx,DWORD PTR [eax]
  40950f:	add    eax,0xe77f59ce
  409514:	scas   eax,DWORD PTR es:[edi]
  409515:	cmc    
  409516:	inc    edi
  409517:	adc    cl,al
  409519:	sbb    al,0x2a
  40951b:	popa   
  40951c:	sbb    al,0xb9
  40951e:	daa    
  40951f:	add    DWORD PTR [esi],0xffffffcb
  409522:	mov    esi,DWORD PTR [ebp+0x10]
  409525:	mov    DWORD PTR [esi+0x10],eax
  409528:	mov    eax,eax
  40952a:	mov    eax,DWORD PTR [ebp+0x8]
  40952d:	jmp    0x4095de
  409532:	es bnd jno 0x409580
  409536:	mov    ecx,0xcb626549
  40953b:	les    ebp,FWORD PTR [esi]
  40953d:	xor    ah,BYTE PTR [eax+0x15]
  409540:	(bad)  
  409541:	sub    DWORD PTR [ecx],ecx
  409543:	and    DWORD PTR [esi+0x7e],edi
  409546:	cmp    BYTE PTR [esi+0x7e],0x7e
  40954a:	ror    BYTE PTR [ebx+edx*2-0x1939be0c],1
  409551:	sub    dh,BYTE PTR [edi]
  409553:	sbb    edx,DWORD PTR [edi]
  409555:	xor    dl,ch
  409557:	das    
  409558:	jmp    0x4095d4
  40955a:	jae    0x409502
  40955c:	xchg   esi,eax
  40955d:	in     eax,0xa2
  40955f:	push   ds
  409560:	std    
  409561:	nop
  409562:	dec    esi
  409563:	aam    0x8a
  409565:	enter  0x8fd2,0xcb
  409569:	xor    dh,BYTE PTR [ebp+0x6f]
  40956c:	sbb    BYTE PTR [edx],dh
  40956e:	mov    dh,0xfc
  409570:	ficomp WORD PTR [ecx-0x24]
  409573:	add    al,0x4
  409575:	adc    eax,0xee98dd0f
  40957a:	ret    0x68b3
  40957d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40957e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40957f:	in     al,0x9d
  409581:	pop    ebp
  409582:	and    DWORD PTR [edx*2-0xd58986f],ebp
  409589:	popf   
  40958a:	fsub   DWORD PTR [ebx]
  40958c:	lahf   
  40958d:	rol    BYTE PTR [edx+0x44157c87],cl
  409593:	pusha  
  409594:	adc    eax,0x82a230b7
  409599:	mov    ch,BYTE PTR [edx-0x4e14c849]
  40959f:	(bad)  
  4095a0:	loop   0x40960c
  4095a2:	jp     0x409580
  4095a4:	neg    bh
  4095a6:	sbb    eax,0xd76cbc72
  4095ab:	in     eax,0xa9
  4095ad:	add    ah,dl
  4095af:	sub    DWORD PTR [esi-0x18],ebp
  4095b2:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4095b4:	lea    esp,[eax-0x51]
  4095b7:	sbb    bh,BYTE PTR ds:[ebp+ebx*1-0x49fd3ba5]
  4095bf:	mov    esi,0xea532c52
  4095c4:	add    DWORD PTR [ebp+0xf],edi
  4095c7:	repnz and BYTE PTR [eax+0x45728d85],al
  4095ce:	push   edx
  4095cf:	dec    ecx
  4095d0:	(bad)  [edx-0x20]
  4095d3:	inc    dh
  4095d5:	pop    esi
  4095d6:	test   DWORD PTR [ecx+0x72ed16a8],0xc1333132
  4095e0:	add    eax,edx
  4095e2:	pop    esi
  4095e3:	leave  
  4095e4:	ret    0x18
  4095e7:	push   ebp
  4095e8:	mov    ebp,esp
  4095ea:	mov    eax,DWORD PTR [ebp+0xc]
  4095ed:	xor    edx,edx
  4095ef:	mov    ecx,0x7264fca0
  4095f4:	div    ecx
  4095f6:	mov    ecx,DWORD PTR [ebp+0x10]
  4095f9:	and    ecx,eax
  4095fb:	or     ecx,0x81161d8e
  409601:	mov    eax,ecx
  409603:	pop    ebp
  409604:	ret    0x18
  409607:	push   ebp
  409608:	mov    ebp,esp
  40960a:	jmp    0x40974f
  40960f:	test   eax,0x795cd0ce
  409614:	pusha  
  409615:	test   eax,0x818b5fdb
  40961a:	cmp    ecx,ecx
  40961c:	ja     0x4095eb
  40961e:	jg     0x4095bd
  409620:	and    DWORD PTR [esi+0x7e],edi
  409623:	push   ss
  409624:	jg     0x4096a4
  409626:	jle    0x40963d
  409628:	popf   
  409629:	and    BYTE PTR [esi-0x1cfa8e07],0x74
  409630:	(bad)  
  409631:	sub    al,0x7c
  409633:	add    eax,0x77aa56b4
  409638:	out    0xfe,eax
  40963a:	push   ebp
  40963b:	and    DWORD PTR [esi],edi
  40963d:	(bad)
  409641:	pop    eax
  409642:	mov    bl,0x7d
  409644:	jns    0x40961a
  409646:	repz es mov ebx,0xd2899d9f
  40964d:	stc    
  40964e:	push   ss
  40964f:	inc    ebp
  409650:	nop
  409651:	sub    ch,BYTE PTR [edi-0x7859b3c9]
  409657:	cmp    BYTE PTR [esi-0xf59c8e7],bl
  40965d:	xchg   esi,eax
  40965e:	cld    
  40965f:	or     al,0x43
  409661:	jge    0x4096c9
  409663:	fs inc esi
  409665:	jle    0x4096a3
  409667:	adc    BYTE PTR [edx+esi*1+0x693c3518],dl
  40966e:	cmc    
  40966f:	xor    BYTE PTR [edx],ch
  409671:	out    dx,al
  409672:	jmp    0x409687
  409674:	and    al,0xa1
  409676:	push   cs
  409677:	sub    al,0x3f
  409679:	add    esi,0x42
  40967c:	jb     0x409604
  40967e:	jmp    FWORD PTR [edi-0x1ae57c01]
  409684:	cli    
  409685:	xor    eax,0xa373b99d
  40968a:	push   esp
  40968b:	repz jge 0x4096fd
  40968e:	in     al,dx
  40968f:	cmp    al,0x73
  409691:	and    eax,0xb3802a0e
  409696:	xchg   ebp,eax
  409697:	mov    ebp,0xf76f0c79
  40969c:	inc    edi
  40969d:	lock fistp DWORD PTR [ebp-0x48]
  4096a1:	mov    ch,0x6
  4096a3:	cdq    
  4096a4:	shl    BYTE PTR [edi+edx*8],0x0
  4096a8:	or     BYTE PTR [ecx+0x4],cl
  4096ab:	or     eax,0x2ba93105
  4096b0:	aad    0x98
  4096b2:	dec    ebx
  4096b3:	in     al,dx
  4096b4:	jecxz  0x409710
  4096b6:	les    ebx,FWORD PTR [ebp-0x376e45d0]
  4096bc:	stos   DWORD PTR es:[edi],eax
  4096bd:	cdq    
  4096be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096bf:	or     eax,0xdefa9132
  4096c4:	dec    ebx
  4096c5:	nop
  4096c6:	mov    WORD PTR [edx+esi*4+0x1805e842],gs
  4096cd:	push   0xbe67f080
  4096d2:	jl     0x4096af
  4096d4:	push   esp
  4096d5:	ds inc ebp
  4096d7:	sub    dl,BYTE PTR ds:0x7eccead9
  4096dd:	(bad)  
  4096df:	out    dx,eax
  4096e0:	sub    BYTE PTR [ecx+0x2eb443c6],0xc
  4096e7:	das    
  4096e8:	stc    
  4096e9:	out    dx,eax
  4096ea:	and    eax,0xb12b043f
  4096ef:	mov    ebp,0x5fb61163
  4096f4:	(bad)  
  4096f5:	push   esi
  4096f6:	retf   
  4096f7:	rcl    BYTE PTR [edx+eax*8+0x5f],0x23
  4096fc:	lods   al,BYTE PTR ds:[esi]
  4096fd:	pop    ds
  4096fe:	inc    ecx
  4096ff:	sub    eax,DWORD PTR [ecx-0x4c]
  409702:	cdq    
  409703:	inc    esi
  409704:	adc    DWORD PTR [edx+ebp*1],0x814883e8
  40970b:	(bad)  
  40970c:	push   ecx
  40970d:	mov    dh,0x1b
  40970f:	mov    ecx,0xed63e64b
  409714:	in     al,0xf
  409716:	nop
  409717:	xchg   esp,eax
  409718:	add    DWORD PTR [edx+esi*4],0x5ab0df16
  40971f:	repz cmp eax,0xbdc312d1
  409725:	call   0xb172:0xe8b99ca5
  40972c:	and    ebx,edi
  40972e:	out    0xbd,eax
  409730:	fmul   DWORD PTR [edx]
  409732:	fbld   TBYTE PTR [ebp-0x136eaec9]
  409738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409739:	sbb    bl,bh
  40973b:	aas    
  40973c:	add    DWORD PTR [esi+0x5c5b0cec],ebx
  409742:	sub    DWORD PTR [eax-0xa5c2bf0],esp
  409748:	lods   al,BYTE PTR ds:[esi]
  409749:	mov    ebp,0xb51a3248
  40974e:	cmp    edx,DWORD PTR [ecx+0x1b]
  409751:	rol    bh,1
  409753:	inc    ebp
  409754:	cld    
  409755:	cmp    al,0x85
  409757:	pushf  
  409758:	clc    
  409759:	or     DWORD PTR ds:0x4245ae,ebx
  40975f:	mov    eax,DWORD PTR [ebp-0x4]
  409762:	or     DWORD PTR ds:0x412370,0x19a1
  40976c:	mov    edx,DWORD PTR [ebp+0x10]
  40976f:	movzx  ecx,WORD PTR ds:0x41abd6
  409776:	adc    DWORD PTR ds:0x4245ca,ecx
  40977c:	mov    ecx,0x7510859
  409781:	sub    DWORD PTR ds:0x417e59,0x412370
  40978b:	xor    eax,ecx
  40978d:	adc    DWORD PTR ds:0x41235c,0x41abd2
  409797:	add    eax,0x32729f
  40979c:	mov    DWORD PTR ds:0x415115,0x3ef2
  4097a6:	mov    DWORD PTR [edx],eax
  4097a8:	xor    edx,DWORD PTR ds:0x4245ba
  4097ae:	jmp    0x4098f3
  4097b3:	push   0xffffffe9
  4097b5:	xlat   BYTE PTR ds:[ebx]
  4097b6:	call   0xe006:0xf97b9855
  4097bd:	jl     0x4097c2
  4097bf:	shl    DWORD PTR [edx],cl
  4097c1:	lods   eax,DWORD PTR ds:[esi]
  4097c2:	ret    0x26b5
  4097c5:	jle    0x409845
  4097c7:	push   ss
  4097c8:	jg     0x409848
  4097ca:	jle    0x40975e
  4097cc:	repz repz addr16 cmp ah,cl
  4097d1:	fsub   DWORD PTR [ecx]
  4097d3:	iret   
  4097d4:	xchg   ebp,eax
  4097d5:	retf   
  4097d6:	push   esi
  4097d7:	xor    al,0x9f
  4097d9:	enter  0x7210,0x55
  4097dd:	out    dx,eax
  4097de:	test   BYTE PTR [ebx],bl
  4097e0:	stos   DWORD PTR es:[edi],eax
  4097e1:	cmp    bh,al
  4097e3:	ins    BYTE PTR es:[edi],dx
  4097e4:	mov    sp,0x341c
  4097e8:	or     BYTE PTR [ecx],al
  4097ea:	(bad)  
  4097eb:	clc    
  4097ec:	pop    esi
  4097ed:	mov    al,ds:0x7c3e9de9
  4097f2:	sbb    al,0x97
  4097f4:	xchg   BYTE PTR [esi],cl
  4097f6:	pop    ebp
  4097f7:	mov    ch,0x8
  4097f9:	jb     0x4097f7
  4097fb:	fcom   st(0)
  4097fd:	xor    ebx,DWORD PTR [esi]
  4097ff:	leave  
  409800:	add    DWORD PTR [eax+ebx*1-0x1186d922],esi
  409807:	sub    DWORD PTR [esi-0x59],esi
  40980a:	inc    ebp
  40980b:	popa   
  40980c:	sub    DWORD PTR [eax+0x2484caa0],edi
  409812:	cmc    
  409813:	pop    eax
  409814:	clc    
  409815:	repnz push esi
  409817:	jmp    0x4097f8
  409819:	xor    BYTE PTR [eax-0x13],bh
  40981c:	(bad)  
  40981d:	std    
  40981e:	bound  esi,QWORD PTR [esi-0x5b]
  409821:	xchg   edi,eax
  409822:	fcom   DWORD PTR [eax+0xc]
  409825:	mov    ecx,edx
  409827:	in     al,dx
  409828:	lods   eax,DWORD PTR ds:[esi]
  409829:	sub    eax,0xde112fe3
  40982e:	mov    dl,BYTE PTR [ebx-0x1c062bdf]
  409834:	leave  
  409835:	adc    esp,DWORD PTR [esi+0x35528553]
  40983b:	(bad)  
  40983c:	mov    ah,0xce
  40983e:	pop    edx
  40983f:	imul   esp,DWORD PTR [edx+0x2d],0x4fb38add
  409846:	fabs   
  409848:	pusha  
  409849:	push   ds
  40984a:	outs   dx,BYTE PTR ds:[esi]
  40984b:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40984d:	jl     0x409822
  40984f:	fwait
  409850:	mov    ebx,0xb75063f0
  409855:	mov    edi,0x28399ba6
  40985a:	idiv   ebx
  40985c:	stos   BYTE PTR es:[edi],al
  40985d:	cmp    edi,edi
  40985f:	sbb    ebx,DWORD PTR [esi]
  409861:	mov    ds:0xc029afca,al
  409866:	add    ch,BYTE PTR [ecx]
  409868:	or     al,0x9a
  40986a:	pop    edx
  40986b:	xchg   ebx,eax
  40986c:	xor    eax,0xd22fcd02
  409871:	push   eax
  409872:	and    edi,DWORD PTR ds:0x71056b88
  409878:	cmp    al,0x28
  40987b:	adc    ebx,0xa0bee2ca
  409881:	fs push cs
  409883:	mov    ch,0xac
  409885:	sub    dl,BYTE PTR [edi+0x9]
  409888:	xchg   esi,eax
  409889:	mov    edx,DWORD PTR [edi-0x3e]
  40988c:	inc    ecx
  40988d:	mov    bl,0xd
  40988f:	mov    edi,DWORD PTR [ebx+0x51cdcf5a]
  409895:	mov    bl,0x98
  409897:	mov    al,0xb
  409899:	(bad)  
  40989b:	sbb    dl,dh
  40989d:	push   0x6bf2b1bb
  4098a2:	push   ds
  4098a3:	jl     0x40983e
  4098a5:	or     ecx,DWORD PTR [edx+eiz*2-0x34]
  4098a9:	xor    BYTE PTR [edx],cl
  4098ab:	cdq    
  4098ac:	outs   dx,BYTE PTR ds:[esi]
  4098ad:	mov    dl,0x7f
  4098af:	mov    eax,0xe3e4fece
  4098b4:	test   al,0xad
  4098b6:	adc    eax,0x5990b17f
  4098bb:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4098bd:	xchg   DWORD PTR [esi],esp
  4098bf:	out    0x8e,eax
  4098c1:	sbb    DWORD PTR [ecx-0x1f],eax
  4098c4:	inc    esp
  4098c5:	mov    edi,0x68131166
  4098ca:	sbb    dl,0x56
  4098cd:	cld    
  4098ce:	and    eax,0x3661840f
  4098d3:	push   0x49
  4098d5:	push   es
  4098d6:	lock xchg BYTE PTR [edi-0x68248db0],dh
  4098dd:	xchg   edi,eax
  4098de:	mov    dh,0x2d
  4098e0:	hlt    
  4098e1:	mov    ds,WORD PTR [ecx+0x38]
  4098e4:	inc    eax
  4098e5:	nop
  4098e6:	push   ss
  4098e7:	outs   dx,BYTE PTR ds:[esi]
  4098e8:	xchg   ebx,eax
  4098e9:	dec    ebp
  4098ea:	dec    esi
  4098eb:	jns    0x409945
  4098ed:	inc    esp
  4098ee:	fucomip st,st(5)
  4098f0:	inc    edi
  4098f1:	fist   WORD PTR [esi]
  4098f3:	mov    eax,DWORD PTR [ebp+0x14]
  4098f6:	and    DWORD PTR ds:0x412364,0x0
  409900:	mov    edx,DWORD PTR ds:0x412364
  409906:	inc    edx
  409907:	mov    DWORD PTR ds:0x412364,edx
  40990d:	cmp    DWORD PTR ds:0x412364,0x9
  409914:	jne    0x409930
  40991a:	push   DWORD PTR [ebp-0x14]
  40991d:	push   0x1e75
  409922:	push   0x8bb6
  409927:	push   DWORD PTR [ebp-0x18]
  40992a:	call   DWORD PTR ds:0x40d1f0
  409930:	cmp    DWORD PTR ds:0x412364,0x8
  409937:	jne    0x40994a
  40993d:	mov    edx,DWORD PTR ds:0x412364
  409943:	inc    edx
  409944:	mov    DWORD PTR ds:0x412364,edx
  40994a:	cmp    DWORD PTR ds:0x412364,0x1c
  409951:	jb     0x409900
  409957:	mov    edx,DWORD PTR [ebp+0x10]
  40995a:	mov    DWORD PTR [edx+0x4],eax
  40995d:	mov    eax,DWORD PTR [ebp+0x18]
  409960:	mov    edx,DWORD PTR [ebp+0x10]
  409963:	jmp    0x409aa8
  409968:	add    al,0x3c
  40996a:	cmp    bl,BYTE PTR [ebp-0x6]
  40996d:	jns    0x4099c8
  40996f:	gs push edi
  409971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409972:	or     eax,0x24e18a4c
  409977:	or     ch,BYTE PTR [ebp+0x27]
  40997a:	jle    0x4099fa
  40997c:	push   ss
  40997d:	jg     0x4099fd
  40997f:	jle    0x409947
  409981:	push   esp
  409982:	jae    0x409924
  409984:	fisttp QWORD PTR [ecx-0x1e]
  409987:	pop    ss
  409988:	jecxz  0x4099a7
  40998a:	sub    ch,BYTE PTR [eax+0x31]
  40998d:	inc    edx
  40998e:	popa   
  40998f:	add    ebx,DWORD PTR [edx+eiz*1]
  409992:	xor    DWORD PTR [ecx],edi
  409994:	mov    ch,0xd7
  409996:	push   edi
  409997:	dec    edx
  409998:	les    esi,FWORD PTR [eax-0x17d2b38c]
  40999e:	hlt    
  40999f:	outs   dx,BYTE PTR ds:[esi]
  4099a0:	cdq    
  4099a1:	pop    ebp
  4099a2:	push   0xe
  4099a4:	or     ah,BYTE PTR [ebx-0x32]
  4099a7:	sbb    dh,BYTE PTR [ecx-0x7]
  4099aa:	add    BYTE PTR ds:0x6961d608,0x7d
  4099b1:	out    dx,al
  4099b2:	mov    edi,edi
  4099b4:	mov    cl,0xed
  4099b6:	cmp    al,0x5a
  4099b8:	into   
  4099b9:	mov    cl,0xe8
  4099bb:	lds    esi,FWORD PTR [ebx]
  4099bd:	repz aad 0xd
  4099c0:	lock cmp BYTE PTR [ebx],0xe4
  4099c4:	fld    TBYTE PTR [eax+ebp*8+0x1188bdf9]
  4099cb:	mov    ebp,0x8c7385af
  4099d0:	rcr    ecx,1
  4099d2:	push   ss
  4099d3:	inc    esi
  4099d4:	pop    ecx
  4099d5:	mov    ah,0x14
  4099d7:	inc    edx
  4099d8:	mov    ch,0xbe
  4099da:	adc    BYTE PTR [edx-0x21a30f9b],0x51
  4099e1:	sahf   
  4099e2:	add    eax,0xb74429e6
  4099e7:	fld    TBYTE PTR [edx]
  4099e9:	jmp    0xbb1f:0xce6ca7f4
  4099f0:	xor    ebp,edi
  4099f2:	in     eax,dx
  4099f3:	data16 adc al,0xe1
  4099f6:	xchg   BYTE PTR [edx+0x65cb2170],ch
  4099fc:	mov    DWORD PTR [eax],0xa349d41b
  409a02:	mov    ds:0xd94d1169,al
  409a07:	daa    
  409a08:	sub    edx,esi
  409a0a:	(bad)  
  409a0b:	cwde   
  409a0c:	into   
  409a0d:	aaa    
  409a0e:	mov    WORD PTR [edx],?
  409a10:	scas   al,BYTE PTR es:[edi]
  409a11:	sub    BYTE PTR [esi-0x72263f83],cl
  409a17:	rol    DWORD PTR [edx+0x14],cl
  409a1a:	stos   BYTE PTR es:[edi],al
  409a1b:	stos   DWORD PTR es:[edi],eax
  409a1c:	adc    eax,0x98d3d0be
  409a21:	imul   ebx
  409a23:	cmc    
  409a24:	mov    esi,0x1ab846ac
  409a29:	sahf   
  409a2a:	fidiv  WORD PTR [ecx-0x43d16dd6]
  409a30:	outs   dx,BYTE PTR ds:[esi]
  409a31:	cwde   
  409a32:	push   cs
  409a33:	jge    0x4099fc
  409a35:	xchg   BYTE PTR [ebx-0x5d],ch
  409a38:	pop    ebp
  409a3a:	pop    edi
  409a3b:	ss gs icebp 
  409a3e:	fld    QWORD PTR [ebp-0x1a02f50e]
  409a44:	icebp  
  409a45:	mov    al,0xad
  409a47:	mov    bh,BYTE PTR [esi]
  409a49:	clc    
  409a4a:	out    0xaf,al
  409a4c:	xor    ch,BYTE PTR [esi-0x5424064b]
  409a52:	mov    es:0x8a386c8f,eax
  409a58:	mov    ebx,0x1ccca4c0
  409a5d:	jg     0x4099e1
  409a5f:	std    
  409a60:	js     0x409ae1
  409a62:	icebp  
  409a63:	sub    al,0xfc
  409a65:	dec    ebp
  409a66:	fiadd  DWORD PTR [eax+0xe]
  409a69:	xchg   ebx,eax
  409a6a:	mov    ebp,DWORD PTR [esi+0x62ba334e]
  409a70:	jle    0x409ac5
  409a72:	mov    ch,0xed
  409a74:	push   0x22
  409a76:	and    ah,BYTE PTR [esi-0x1d]
  409a79:	xor    al,0x8c
  409a7b:	(bad)  
  409a7c:	int    0x73
  409a7e:	cmp    edx,DWORD PTR [eax-0xb]
  409a81:	jbe    0x409a72
  409a83:	(bad)  
  409a84:	(bad)  
  409a85:	mov    cl,0x6c
  409a87:	add    esi,DWORD PTR [eax-0x33]
  409a8a:	or     eax,0xfbe6b9fc
  409a8f:	pop    ecx
  409a90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a91:	mov    cl,0xfa
  409a93:	pop    DWORD PTR [ecx-0x32]
  409a96:	ins    BYTE PTR es:[edi],dx
  409a97:	daa    
  409a98:	or     BYTE PTR [ebp-0x25],bh
  409a9b:	out    dx,al
  409a9c:	test   ebp,ebp
  409a9e:	xchg   edx,eax
  409a9f:	cs in  al,0x87
  409aa2:	mov    ecx,0xc9422757
  409aa7:	cli    
  409aa8:	mov    DWORD PTR [edx+0x8],eax
  409aab:	mov    eax,DWORD PTR [ebp+0x1c]
  409aae:	mov    edx,DWORD PTR [ebp+0x10]
  409ab1:	mov    DWORD PTR [edx+0xc],eax
  409ab4:	mov    eax,DWORD PTR [ebp+0x20]
  409ab7:	mov    edx,DWORD PTR [ebp+0x10]
  409aba:	mov    DWORD PTR [edx+0x10],eax
  409abd:	mov    eax,eax
  409abf:	mov    eax,DWORD PTR [ebp+0x14]
  409ac2:	test   eax,eax
  409ac4:	mov    eax,DWORD PTR [ebp+0x8]
  409ac7:	jne    0x409ad0
  409acd:	mov    eax,DWORD PTR [ebp+0xc]
  409ad0:	xor    eax,ecx
  409ad2:	add    eax,0x32729f
  409ad7:	leave  
  409ad8:	ret    0x1c
  409adb:	push   ebp
  409adc:	mov    ebp,esp
  409ade:	sub    esp,0x74
  409ae1:	or     DWORD PTR ds:0x417e4d,0x412378
  409aeb:	push   ebx
  409aec:	inc    DWORD PTR ds:0x4245b6
  409af2:	push   esi
  409af3:	mov    esi,0x876987
  409af8:	sub    DWORD PTR ds:0x415111,0x412368
  409b02:	push   esi
  409b03:	push   0x40d6e4
  409b08:	xor    ebx,ebx
  409b0a:	adc    DWORD PTR ds:0x415115,0xb4e
  409b14:	push   0x40d70c
  409b19:	adc    DWORD PTR ds:0x412378,0x417e41
  409b23:	mov    DWORD PTR [ebp-0x4],ebx
  409b26:	xor    DWORD PTR ds:0x4245c2,0x95a
  409b30:	call   DWORD PTR ds:0x40d26c
  409b36:	cmp    eax,esi
  409b38:	je     0x409b45
  409b3e:	xor    eax,eax
  409b40:	jmp    0x40a5d1
  409b45:	push   edi
  409b46:	mov    edi,0x8e152d83
  409b4b:	mov    esi,0x60672eb0
  409b50:	push   0xa
  409b52:	adc    DWORD PTR ds:0x415119,0x51b8
  409b5c:	push   0xa
  409b5e:	and    DWORD PTR ds:0x412378,0x132f
  409b68:	push   0x1
  409b6a:	and    DWORD PTR ds:0x415101,0x415109
  409b74:	lea    eax,[ebp-0x4]
  409b77:	mov    DWORD PTR [ebp-0xc],eax
  409b7a:	and    DWORD PTR ds:0x4245c2,0x2ba
  409b84:	push   0x1
  409b86:	neg    DWORD PTR ds:0x417e41
  409b8c:	call   DWORD PTR ds:0x40d3cc
  409b92:	adc    DWORD PTR ds:0x412354,0x4245b2
  409b9c:	mov    DWORD PTR [ebp-0x8],eax
  409b9f:	mov    eax,DWORD PTR [ebp-0x8]
  409ba2:	test   eax,eax
  409ba4:	mov    DWORD PTR ds:0x412354,0x291c
  409bae:	je     0x40a327
  409bb4:	not    DWORD PTR ds:0x41abda
  409bba:	push   DWORD PTR [ebp-0x8]
  409bbd:	adc    DWORD PTR ds:0x4245c2,0x417e4d
  409bc7:	call   DWORD PTR ds:0x40d380
  409bcd:	add    DWORD PTR [ebp-0x4],0x2450a8e
  409bd4:	and    DWORD PTR ds:0x41abca,0x0
  409bde:	jmp    0x409bf0
  409be3:	mov    ecx,DWORD PTR ds:0x41abca
  409be9:	inc    ecx
  409bea:	mov    DWORD PTR ds:0x41abca,ecx
  409bf0:	cmp    DWORD PTR ds:0x41abca,0x16
  409bf7:	jae    0x409c20
  409bfd:	cmp    DWORD PTR ds:0x41abca,0x17
  409c04:	jne    0x409c1b
  409c0a:	push   DWORD PTR [ebp-0x18]
  409c0d:	push   DWORD PTR [ebp-0x20]
  409c10:	push   0x42f9
  409c15:	call   DWORD PTR ds:0x40d1f4
  409c1b:	jmp    0x409be3
  409c20:	xor    eax,eax
  409c22:	shl    DWORD PTR [ebp-0x4],1
  409c25:	and    DWORD PTR [ebp-0x4],edi
  409c28:	inc    edx
  409c29:	mov    ecx,DWORD PTR [ebp-0x4]
  409c2c:	imul   ecx,ecx,0x7f659e30
  409c32:	mov    DWORD PTR ds:0x412370,0x1a
  409c3c:	cmp    DWORD PTR ds:0x412370,0x0
  409c43:	je     0x409c7d
  409c49:	cmp    DWORD PTR ds:0x412370,0x26
  409c50:	jne    0x409c6b
  409c56:	push   0x66cd
  409c5b:	push   0x41abe2
  409c60:	push   0x5989
  409c65:	call   DWORD PTR ds:0x40d1f8
  409c6b:	mov    edx,DWORD PTR ds:0x412370
  409c71:	dec    edx
  409c72:	mov    DWORD PTR ds:0x412370,edx
  409c78:	jmp    0x409c3c
  409c7d:	mov    DWORD PTR [ebp-0x4],ecx
  409c80:	add    DWORD PTR ds:0x4245b2,ebx
  409c86:	or     DWORD PTR [ebp-0x4],esi
  409c89:	mov    ecx,DWORD PTR [ebp-0x4]
  409c8c:	mov    DWORD PTR ds:0x415119,0xfe3
  409c96:	mov    edx,DWORD PTR [ebp-0xc]
  409c99:	cmp    ecx,DWORD PTR [edx]
  409c9b:	mov    DWORD PTR ds:0x412364,0x44d1
  409ca5:	jne    0x40a327
  409cab:	mov    DWORD PTR ds:0x41510d,0x22b0
  409cb5:	inc    eax
  409cb6:	mov    DWORD PTR ds:0x41abda,0x2c7f
  409cc0:	cmp    eax,0x4
  409cc3:	jb     0x409c22
  409cc9:	and    DWORD PTR ds:0x415105,0x41abe2
  409cd3:	push   0x40d738
  409cd8:	sub    DWORD PTR ds:0x412374,0x2332
  409ce2:	call   DWORD PTR ds:0x40d3c4
  409ce8:	mov    DWORD PTR ds:0x415101,0x11
  409cf2:	cmp    DWORD PTR ds:0x415101,0x0
  409cf9:	je     0x409d41
  409cff:	cmp    DWORD PTR ds:0x415101,0x8
  409d06:	jne    0x409d15
  409d0c:	push   DWORD PTR [ebp-0x20]
  409d0f:	call   DWORD PTR ds:0x40d2a4
  409d15:	cmp    DWORD PTR ds:0x415101,0x9
  409d1c:	jne    0x409d2f
  409d22:	mov    ecx,DWORD PTR ds:0x415101
  409d28:	dec    ecx
  409d29:	mov    DWORD PTR ds:0x415101,ecx
  409d2f:	mov    ecx,DWORD PTR ds:0x415101
  409d35:	dec    ecx
  409d36:	mov    DWORD PTR ds:0x415101,ecx
  409d3c:	jmp    0x409cf2
  409d41:	xor    eax,eax
  409d43:	shl    DWORD PTR [ebp-0x4],1
  409d46:	mov    DWORD PTR ds:0x41abd6,0x12
  409d50:	cmp    DWORD PTR ds:0x41abd6,0x0
  409d57:	je     0x409da1
  409d5d:	cmp    DWORD PTR ds:0x41abd6,0x3
  409d64:	jne    0x409d75
  409d6a:	push   0x41ad52
  409d6f:	call   DWORD PTR ds:0x40d1fc
  409d75:	cmp    DWORD PTR ds:0x41abd6,0x4
  409d7c:	jne    0x409d8f
  409d82:	mov    edx,DWORD PTR ds:0x41abd6
  409d88:	dec    edx
  409d89:	mov    DWORD PTR ds:0x41abd6,edx
  409d8f:	mov    edx,DWORD PTR ds:0x41abd6
  409d95:	dec    edx
  409d96:	mov    DWORD PTR ds:0x41abd6,edx
  409d9c:	jmp    0x409d50
  409da1:	and    DWORD PTR [ebp-0x4],edi
  409da4:	and    ecx,ecx
  409da6:	mov    ecx,DWORD PTR [ebp-0x4]
  409da9:	inc    edx
  409daa:	imul   ecx,ecx,0x7f659e30
  409db0:	mov    DWORD PTR [ebp-0x4],ecx
  409db3:	mov    edx,DWORD PTR ds:0x412364
  409db9:	xor    edx,DWORD PTR ds:0x4245ae
  409dbf:	mov    DWORD PTR ds:0x412364,edx
  409dc5:	or     DWORD PTR [ebp-0x4],esi
  409dc8:	mov    DWORD PTR ds:0x415105,0x4568
  409dd2:	mov    ecx,DWORD PTR [ebp-0x4]
  409dd5:	mov    edx,DWORD PTR ds:0x415115
  409ddb:	mov    edx,DWORD PTR [ebp-0xc]
  409dde:	cmp    ecx,DWORD PTR [edx]
  409de0:	jne    0x40a327
  409de6:	inc    eax
  409de7:	mov    DWORD PTR ds:0x4245ae,0x6f03
  409df1:	cmp    eax,0x4
  409df4:	jb     0x409d43
  409dfa:	xor    eax,eax
  409dfc:	sbb    DWORD PTR ds:0x412360,edx
  409e02:	shl    DWORD PTR [ebp-0x4],1
  409e05:	and    DWORD PTR [ebp-0x4],edi
  409e08:	mov    ecx,DWORD PTR [ebp-0x4]
  409e0b:	and    DWORD PTR ds:0x417e4d,0x0
  409e15:	mov    edx,DWORD PTR ds:0x417e4d
  409e1b:	inc    edx
  409e1c:	mov    DWORD PTR ds:0x417e4d,edx
  409e22:	cmp    DWORD PTR ds:0x417e4d,0xa
  409e29:	jne    0x409e4c
  409e2f:	push   DWORD PTR [ebp-0x20]
  409e32:	push   0x8411
  409e37:	push   0x41ad5b
  409e3c:	push   0x41adfd
  409e41:	push   0x1dc1
  409e46:	call   DWORD PTR ds:0x40d010
  409e4c:	cmp    DWORD PTR ds:0x417e4d,0x9
  409e53:	jne    0x409e68
  409e59:	xor    edx,edx
  409e5b:	or     edx,DWORD PTR ds:0x417e4d
  409e61:	inc    edx
  409e62:	mov    DWORD PTR ds:0x417e4d,edx
  409e68:	cmp    DWORD PTR ds:0x417e4d,0x19
  409e6f:	jb     0x409e15
  409e75:	mov    edx,DWORD PTR ds:0x417eaa
  409e7b:	mov    edx,DWORD PTR [edx]
  409e7d:	xor    DWORD PTR ds:0x41abda,edx
  409e83:	imul   ecx,ecx,0x7f659e30
  409e89:	mov    edx,DWORD PTR ds:0x412374
  409e8f:	sub    DWORD PTR ds:0x415111,edx
  409e95:	mov    DWORD PTR [ebp-0x4],ecx
  409e98:	and    edx,edx
  409e9a:	or     DWORD PTR [ebp-0x4],esi
  409e9d:	mov    ecx,DWORD PTR [ebp-0x4]
  409ea0:	mov    edx,DWORD PTR [ebp-0xc]
  409ea3:	mov    DWORD PTR ds:0x4245ba,0xa9e
  409ead:	cmp    ecx,DWORD PTR [edx]
  409eaf:	jne    0x40a327
  409eb5:	mov    DWORD PTR ds:0x4150fd,0x72ef
  409ebf:	inc    eax
  409ec0:	cmp    eax,0x4
  409ec3:	mov    DWORD PTR ds:0x412370,0x6303
  409ecd:	jb     0x409dfc
  409ed3:	xor    eax,eax
  409ed5:	and    DWORD PTR ds:0x4150fd,0x0
  409edf:	xor    ecx,ecx
  409ee1:	add    ecx,DWORD PTR ds:0x4150fd
  409ee7:	inc    ecx
  409ee8:	mov    DWORD PTR ds:0x4150fd,ecx
  409eee:	cmp    DWORD PTR ds:0x4150fd,0x28
  409ef5:	jne    0x409f04
  409efb:	push   DWORD PTR [ebp-0x24]
  409efe:	call   DWORD PTR ds:0x40d014
  409f04:	cmp    DWORD PTR ds:0x4150fd,0x18
  409f0b:	jb     0x409edf
  409f11:	add    DWORD PTR ds:0x417e59,0x412378
  409f1b:	shl    DWORD PTR [ebp-0x4],1
  409f1e:	and    DWORD PTR [ebp-0x4],edi
  409f21:	and    DWORD PTR ds:0x412360,0x0
  409f2b:	jmp    0x409f3f
  409f30:	xor    edx,edx
  409f32:	or     edx,DWORD PTR ds:0x412360
  409f38:	inc    edx
  409f39:	mov    DWORD PTR ds:0x412360,edx
  409f3f:	cmp    DWORD PTR ds:0x412360,0x11
  409f46:	jae    0x409f85
  409f4c:	cmp    DWORD PTR ds:0x412360,0x1a
  409f53:	jne    0x409f80
  409f59:	push   0x415119
  409f5e:	push   0x8b4a
  409f63:	push   DWORD PTR [ebp-0x24]
  409f66:	push   0x89fe
  409f6b:	push   0x7f12
  409f70:	push   0x7c49
  409f75:	push   0x1205
  409f7a:	call   DWORD PTR ds:0x40d200
  409f80:	jmp    0x409f30
  409f85:	mov    ecx,DWORD PTR [ebp-0x4]
  409f88:	imul   ecx,ecx,0x7f659e30
  409f8e:	mov    DWORD PTR [ebp-0x4],ecx
  409f91:	or     DWORD PTR [ebp-0x4],esi
  409f94:	mov    ecx,DWORD PTR [ebp-0x4]
  409f97:	mov    edx,DWORD PTR [ebp-0xc]
  409f9a:	mov    DWORD PTR ds:0x4245b6,0x2f25
  409fa4:	cmp    ecx,DWORD PTR [edx]
  409fa6:	mov    DWORD PTR ds:0x412358,0x1252
  409fb0:	jne    0x40a327
  409fb6:	inc    eax
  409fb7:	cmp    eax,0x4
  409fba:	mov    DWORD PTR ds:0x4245ca,0x48e
  409fc4:	jb     0x409ed5
  409fca:	mov    DWORD PTR ds:0x417e55,0x10
  409fd4:	cmp    DWORD PTR ds:0x417e55,0x0
  409fdb:	je     0x40a032
  409fe1:	cmp    DWORD PTR ds:0x417e55,0x19
  409fe8:	jne    0x40a00e
  409fee:	push   DWORD PTR [ebp-0x24]
  409ff1:	push   0x4245ca
  409ff6:	push   DWORD PTR [ebp-0x28]
  409ff9:	push   0x41ada3
  409ffe:	push   0x6e83
  40a003:	push   0x54b6
  40a008:	call   DWORD PTR ds:0x40d204
  40a00e:	mov    edx,DWORD PTR ds:0x417e55
  40a014:	dec    edx
  40a015:	mov    DWORD PTR ds:0x417e55,edx
  40a01b:	jmp    0x409fd4
  40a020:	mov    ecx,DWORD PTR ds:0x40eecc
  40a026:	mov    edx,DWORD PTR ds:0x417eba
  40a02c:	sub    ecx,edx
  40a02e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40a032:	xor    eax,eax
  40a034:	shl    DWORD PTR [ebp-0x4],1
  40a037:	and    DWORD PTR [ebp-0x4],edi
  40a03a:	or     ecx,ecx
  40a03c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a03f:	xor    edx,DWORD PTR ds:0x417e51
  40a045:	imul   ecx,ecx,0x7f659e30
  40a04b:	mov    DWORD PTR ds:0x417e49,0x1d
  40a055:	cmp    DWORD PTR ds:0x417e49,0x0
  40a05c:	je     0x40a0b0
  40a062:	cmp    DWORD PTR ds:0x417e49,0x7
  40a069:	jne    0x40a07a
  40a06f:	push   0x45c2
  40a074:	call   DWORD PTR ds:0x40d208
  40a07a:	cmp    DWORD PTR ds:0x417e49,0x8
  40a081:	jne    0x40a094
  40a087:	mov    edx,DWORD PTR ds:0x417e49
  40a08d:	dec    edx
  40a08e:	mov    DWORD PTR ds:0x417e49,edx
  40a094:	mov    edx,DWORD PTR ds:0x417e49
  40a09a:	dec    edx
  40a09b:	mov    DWORD PTR ds:0x417e49,edx
  40a0a1:	jmp    0x40a055
  40a0a6:	adc    DWORD PTR ds:0x417e45,0x449b
  40a0b0:	mov    DWORD PTR [ebp-0x4],ecx
  40a0b3:	or     ecx,edx
  40a0b5:	or     DWORD PTR [ebp-0x4],esi
  40a0b8:	mov    edx,0x1393
  40a0bd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a0c0:	mov    edx,DWORD PTR [ebp-0xc]
  40a0c3:	mov    DWORD PTR ds:0x41abda,0x516c
  40a0cd:	cmp    ecx,DWORD PTR [edx]
  40a0cf:	jne    0x40a327
  40a0d5:	mov    DWORD PTR ds:0x415111,0x4e99
  40a0df:	inc    eax
  40a0e0:	mov    DWORD PTR ds:0x4245c2,0x1c73
  40a0ea:	cmp    eax,0x4
  40a0ed:	jb     0x40a034
  40a0f3:	xor    eax,eax
  40a0f5:	or     DWORD PTR ds:0x41236c,0x38d4
  40a0ff:	shl    DWORD PTR [ebp-0x4],1
  40a102:	and    DWORD PTR [ebp-0x4],edi
  40a105:	and    ecx,DWORD PTR ds:0x417e59
  40a10b:	mov    ecx,DWORD PTR [ebp-0x4]
  40a10e:	adc    DWORD PTR ds:0x4245be,0x729e
  40a118:	imul   ecx,ecx,0x7f659e30
  40a11e:	adc    edx,0x9b0
  40a124:	mov    DWORD PTR [ebp-0x4],ecx
  40a127:	xor    edx,edx
  40a129:	or     edx,DWORD PTR ds:0x417e55
  40a12f:	xor    DWORD PTR ds:0x4245c6,edx
  40a135:	or     DWORD PTR [ebp-0x4],esi
  40a138:	mov    ecx,DWORD PTR [ebp-0x4]
  40a13b:	mov    edx,DWORD PTR [ebp-0xc]
  40a13e:	mov    DWORD PTR ds:0x4245b6,0xce5
  40a148:	cmp    ecx,DWORD PTR [edx]
  40a14a:	jne    0x40a327
  40a150:	mov    DWORD PTR ds:0x41abd6,0x18a3
  40a15a:	inc    eax
  40a15b:	mov    DWORD PTR ds:0x4245ae,0x5769
  40a165:	cmp    eax,0x4
  40a168:	mov    DWORD PTR ds:0x412358,0x5fb5
  40a172:	jb     0x40a0f5
  40a178:	sbb    ecx,DWORD PTR ds:0x417e59
  40a17e:	xor    eax,eax
  40a180:	mov    DWORD PTR ds:0x412360,0x14
  40a18a:	cmp    DWORD PTR ds:0x412360,0x0
  40a191:	je     0x40a1c1
  40a197:	cmp    DWORD PTR ds:0x412360,0x19
  40a19e:	jne    0x40a1af
  40a1a4:	push   0x2f20
  40a1a9:	call   DWORD PTR ds:0x40d018
  40a1af:	mov    edx,DWORD PTR ds:0x412360
  40a1b5:	dec    edx
  40a1b6:	mov    DWORD PTR ds:0x412360,edx
  40a1bc:	jmp    0x40a18a
  40a1c1:	shl    DWORD PTR [ebp-0x4],1
  40a1c4:	mov    DWORD PTR ds:0x41abe2,0x14
  40a1ce:	cmp    DWORD PTR ds:0x41abe2,0x0
  40a1d5:	je     0x40a233
  40a1db:	cmp    DWORD PTR ds:0x41abe2,0x5
  40a1e2:	jne    0x40a203
  40a1e8:	push   0x1b4e
  40a1ed:	push   DWORD PTR [ebp-0x1c]
  40a1f0:	push   0x1704
  40a1f5:	push   0x41abf4
  40a1fa:	push   DWORD PTR [ebp-0x10]
  40a1fd:	call   DWORD PTR ds:0x40d01c
  40a203:	cmp    DWORD PTR ds:0x41abe2,0x6
  40a20a:	jne    0x40a21d
  40a210:	mov    edx,DWORD PTR ds:0x41abe2
  40a216:	dec    edx
  40a217:	mov    DWORD PTR ds:0x41abe2,edx
  40a21d:	xor    edx,edx
  40a21f:	add    edx,DWORD PTR ds:0x41abe2
  40a225:	dec    edx
  40a226:	mov    DWORD PTR ds:0x41abe2,edx
  40a22c:	jmp    0x40a1ce
  40a231:	neg    edx
  40a233:	and    DWORD PTR [ebp-0x4],edi
  40a236:	mov    ecx,DWORD PTR [ebp-0x4]
  40a239:	neg    edx
  40a23b:	imul   ecx,ecx,0x7f659e30
  40a241:	xor    edx,DWORD PTR ds:0x41abd2
  40a247:	mov    DWORD PTR [ebp-0x4],ecx
  40a24a:	adc    DWORD PTR ds:0x4245b6,ebx
  40a250:	or     DWORD PTR [ebp-0x4],esi
  40a253:	mov    edx,0x77ca
  40a258:	mov    ecx,DWORD PTR [ebp-0x4]
  40a25b:	mov    edx,DWORD PTR [ebp-0xc]
  40a25e:	mov    DWORD PTR ds:0x41510d,0x1bcb
  40a268:	cmp    ecx,DWORD PTR [edx]
  40a26a:	mov    DWORD PTR ds:0x412354,0x3513
  40a274:	jne    0x40a327
  40a27a:	inc    eax
  40a27b:	cmp    eax,0x4
  40a27e:	mov    DWORD PTR ds:0x417e49,0x110e
  40a288:	jb     0x40a180
  40a28e:	xor    eax,eax
  40a290:	shl    DWORD PTR [ebp-0x4],1
  40a293:	and    DWORD PTR [ebp-0x4],edi
  40a296:	mov    ecx,DWORD PTR [ebp-0x4]
  40a299:	imul   ecx,ecx,0x7f659e30
  40a29f:	mov    DWORD PTR [ebp-0x4],ecx
  40a2a2:	or     DWORD PTR [ebp-0x4],esi
  40a2a5:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2a8:	mov    edx,DWORD PTR [ebp-0xc]
  40a2ab:	cmp    ecx,DWORD PTR [edx]
  40a2ad:	jne    0x40a327
  40a2b3:	inc    eax
  40a2b4:	cmp    eax,0x4
  40a2b7:	jb     0x40a290
  40a2bd:	inc    ebx
  40a2be:	cmp    ebx,0x10
  40a2c1:	jb     0x409b50
  40a2c7:	mov    ebx,0xf89c8538
  40a2cc:	mov    DWORD PTR [ebp-0xc],ebx
  40a2cf:	mov    DWORD PTR [ebp-0x8],0xf89c853b
  40a2d6:	lea    eax,[ebp-0x1c]
  40a2d9:	mov    DWORD PTR [ebp-0x18],eax
  40a2dc:	lea    eax,[ebp-0x20]
  40a2df:	mov    DWORD PTR [ebp-0x10],eax
  40a2e2:	mov    eax,ds:0x40d5d0
  40a2e7:	mov    eax,DWORD PTR [eax+0x1c8]
  40a2ed:	mov    eax,DWORD PTR [eax]
  40a2ef:	mov    ecx,DWORD PTR [ebp-0x10]
  40a2f2:	mov    esi,0x7510859
  40a2f7:	xor    eax,esi
  40a2f9:	mov    edi,0x32729f
  40a2fe:	add    eax,edi
  40a300:	mov    DWORD PTR [ecx],eax
  40a302:	mov    eax,ds:0x40d854
  40a307:	cmp    eax,0x23d14057
  40a30c:	mov    eax,DWORD PTR [ebp-0x8]
  40a30f:	je     0x40a32e
  40a315:	mov    ecx,DWORD PTR [ebp-0xc]
  40a318:	xor    eax,esi
  40a31a:	add    eax,edi
  40a31c:	imul   eax,ecx
  40a31f:	mov    DWORD PTR [ebp-0xc],eax
  40a322:	jmp    0x40a371
  40a327:	xor    eax,eax
  40a329:	jmp    0x40a5d0
  40a32e:	xor    eax,esi
  40a330:	add    eax,edi
  40a332:	mov    ds:0x40d6e0,eax
  40a337:	mov    eax,DWORD PTR [ebp-0xc]
  40a33a:	xor    eax,esi
  40a33c:	add    eax,edi
  40a33e:	mov    ds:0x40d854,eax
  40a343:	mov    eax,DWORD PTR [ebp-0x8]
  40a346:	mov    ecx,DWORD PTR ds:0x40d6e0
  40a34c:	xor    eax,esi
  40a34e:	add    eax,edi
  40a350:	cmp    ecx,eax
  40a352:	jne    0x40a371
  40a358:	push   0x40d72c
  40a35d:	call   DWORD PTR ds:0x40d1ec
  40a363:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a369:	mov    ecx,DWORD PTR [ecx+0x198]
  40a36f:	mov    DWORD PTR [ecx],eax
  40a371:	mov    eax,ds:0x40d5d0
  40a376:	mov    eax,DWORD PTR [eax+0x18c]
  40a37c:	mov    eax,DWORD PTR [eax]
  40a37e:	mov    DWORD PTR [ebp-0x24],eax
  40a381:	mov    eax,0xf89c853c
  40a386:	mov    DWORD PTR [ebp-0x28],eax
  40a389:	mov    DWORD PTR [ebp-0x28],eax
  40a38c:	mov    DWORD PTR [ebp-0x28],eax
  40a38f:	mov    DWORD PTR [ebp-0x10],ebx
  40a392:	mov    DWORD PTR [ebp-0x28],eax
  40a395:	mov    DWORD PTR [ebp-0x28],0xf89c8530
  40a39c:	mov    ebx,DWORD PTR [ebp-0xc]
  40a39f:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3a2:	mov    edx,DWORD PTR [ebp-0x8]
  40a3a5:	xor    edx,esi
  40a3a7:	xor    ecx,esi
  40a3a9:	add    ecx,edx
  40a3ab:	mov    edx,DWORD PTR [ebp-0x8]
  40a3ae:	xor    ebx,esi
  40a3b0:	xor    edx,esi
  40a3b2:	add    ebx,edi
  40a3b4:	lea    ecx,[ecx+edx*1+0x9757dd]
  40a3bb:	cmp    ebx,ecx
  40a3bd:	ja     0x40a41e
  40a3c3:	mov    eax,DWORD PTR [ebp-0x8]
  40a3c6:	xor    eax,esi
  40a3c8:	lea    eax,[eax+ebx*1+0x32729f]
  40a3cf:	push   eax
  40a3d0:	mov    eax,DWORD PTR [ebp-0x10]
  40a3d3:	xor    eax,esi
  40a3d5:	lea    eax,[ebp+eax*1+0x3272a7]
  40a3dc:	push   eax
  40a3dd:	mov    eax,ds:0x40d5d0
  40a3e2:	push   DWORD PTR [eax+0x1bc]
  40a3e8:	call   0x40742d
  40a3ed:	mov    eax,DWORD PTR [ebp-0x8]
  40a3f0:	xor    eax,esi
  40a3f2:	lea    ebx,[ebx+eax*1+0x32729f]
  40a3f9:	mov    eax,DWORD PTR [ebp-0x8]
  40a3fc:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3ff:	xor    ecx,esi
  40a401:	xor    eax,esi
  40a403:	add    eax,ecx
  40a405:	mov    ecx,DWORD PTR [ebp-0x8]
  40a408:	xor    ecx,esi
  40a40a:	lea    eax,[eax+ecx*1+0x9757dd]
  40a411:	cmp    ebx,eax
  40a413:	jbe    0x40a3c3
  40a419:	mov    eax,0xf89c853c
  40a41e:	mov    ecx,DWORD PTR [ebp+0xc]
  40a421:	mov    DWORD PTR ds:0x40d454,ecx
  40a427:	mov    ecx,DWORD PTR [ebp+0x10]
  40a42a:	mov    DWORD PTR ds:0x40d6a8,ecx
  40a430:	mov    ecx,DWORD PTR ds:0x40d454
  40a436:	mov    edx,DWORD PTR [ebp-0x18]
  40a439:	sub    ecx,edi
  40a43b:	xor    ecx,esi
  40a43d:	mov    DWORD PTR [edx],ecx
  40a43f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a442:	cmp    ecx,0xf89c853b
  40a448:	je     0x40a4a5
  40a44e:	mov    ecx,DWORD PTR [ebp-0xc]
  40a451:	mov    edx,DWORD PTR [ebp-0x20]
  40a454:	xor    ecx,esi
  40a456:	add    ecx,edi
  40a458:	cmp    ecx,edx
  40a45a:	je     0x40a4a5
  40a460:	mov    eax,ds:0x40d5d0
  40a465:	mov    eax,DWORD PTR [eax+0x194]
  40a46b:	mov    ecx,DWORD PTR [eax]
  40a46d:	mov    eax,DWORD PTR [ecx+0x3c]
  40a470:	push   DWORD PTR ds:0x40d6a8
  40a476:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40a47a:	push   DWORD PTR ds:0x40d454
  40a480:	add    eax,ecx
  40a482:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a488:	mov    ecx,DWORD PTR [ecx+0x194]
  40a48e:	push   DWORD PTR [ecx]
  40a490:	call   eax
  40a492:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a498:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40a49e:	mov    DWORD PTR [ecx],eax
  40a4a0:	jmp    0x40a5b5
  40a4a5:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4a8:	mov    edx,DWORD PTR [ebp-0x24]
  40a4ab:	xor    ecx,esi
  40a4ad:	add    ecx,edi
  40a4af:	cmp    ecx,edx
  40a4b1:	jne    0x40a598
  40a4b7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4ba:	xor    ecx,esi
  40a4bc:	add    ecx,edi
  40a4be:	mov    DWORD PTR ds:0x40d654,ecx
  40a4c4:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4c7:	xor    ecx,esi
  40a4c9:	add    ecx,edi
  40a4cb:	mov    DWORD PTR ds:0x40d64c,ecx
  40a4d1:	mov    ecx,DWORD PTR [ebp-0x8]
  40a4d4:	mov    DWORD PTR [ebp-0x10],ecx
  40a4d7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4da:	mov    DWORD PTR [ebp+0xc],ecx
  40a4dd:	mov    ecx,DWORD PTR [ebp+0xc]
  40a4e0:	xor    ecx,esi
  40a4e2:	add    ecx,edi
  40a4e4:	mov    DWORD PTR [ebp+0xc],ecx
  40a4e7:	mov    ecx,DWORD PTR ds:0x40d450
  40a4ed:	mov    ecx,DWORD PTR [ecx]
  40a4ef:	mov    DWORD PTR [ebp+0xc],ecx
  40a4f2:	mov    ecx,DWORD PTR ds:0x40d658
  40a4f8:	mov    ecx,DWORD PTR [ecx]
  40a4fa:	mov    DWORD PTR [ebp-0x18],ecx
  40a4fd:	mov    DWORD PTR [ebp+0x10],0xf89c8738
  40a504:	mov    ecx,DWORD PTR [ebp+0x10]
  40a507:	xor    ecx,esi
  40a509:	add    ecx,edi
  40a50b:	mov    DWORD PTR [ebp+0x10],ecx
  40a50e:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a514:	mov    DWORD PTR [ebp+0x10],ecx
  40a517:	mov    ecx,DWORD PTR [ebp+0xc]
  40a51a:	mov    DWORD PTR [ebp+0xc],ecx
  40a51d:	mov    ecx,DWORD PTR [ebp+0xc]
  40a520:	push   0x4
  40a522:	pop    edx
  40a523:	sub    edx,ecx
  40a525:	add    edx,DWORD PTR [ebp-0x18]
  40a528:	mov    DWORD PTR [ebp-0x28],0xf89c85f8
  40a52f:	mov    DWORD PTR [ebp+0x10],edx
  40a532:	mov    DWORD PTR [ebp-0x74],eax
  40a535:	mov    eax,DWORD PTR [ebp+0xc]
  40a538:	mov    DWORD PTR [ebp-0x70],eax
  40a53b:	mov    eax,DWORD PTR [ebp+0x10]
  40a53e:	mov    DWORD PTR [ebp-0x6c],eax
  40a541:	mov    eax,DWORD PTR [ebp-0x28]
  40a544:	xor    eax,esi
  40a546:	add    eax,edi
  40a548:	mov    DWORD PTR [ebp-0x68],eax
  40a54b:	lea    eax,[ebp-0x30]
  40a54e:	mov    DWORD PTR [ebp-0x64],eax
  40a551:	mov    eax,DWORD PTR [ebp-0x74]
  40a554:	xor    eax,esi
  40a556:	add    eax,edi
  40a558:	mov    DWORD PTR [ebp-0x74],eax
  40a55b:	lea    eax,[ebp-0x74]
  40a55e:	push   eax
  40a55f:	mov    eax,DWORD PTR [ebp-0x10]
  40a562:	xor    eax,esi
  40a564:	add    eax,edi
  40a566:	push   eax
  40a567:	mov    eax,ds:0x40d5f0
  40a56c:	push   0x40d546
  40a571:	push   DWORD PTR [eax]
  40a573:	call   0x40ae4d
  40a578:	xor    esi,esi
  40a57a:	mov    eax,DWORD PTR [ebp+0x10]
  40a57d:	sub    eax,esi
  40a57f:	push   eax
  40a580:	mov    eax,DWORD PTR [ebp+0xc]
  40a583:	add    eax,esi
  40a585:	push   eax
  40a586:	call   0x4059cb
  40a58b:	inc    esi
  40a58c:	cmp    esi,0x52
  40a58f:	jb     0x40a57a
  40a595:	mov    eax,DWORD PTR [ebp-0x10]
  40a598:	call   0x404704
  40a59d:	lea    eax,[ebp+0x4]
  40a5a0:	mov    DWORD PTR [ebp-0x2c],eax
  40a5a3:	mov    eax,DWORD PTR [ebp-0x14]
  40a5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40a5a9:	push   DWORD PTR [ebp-0xc]
  40a5ac:	lea    eax,[ebp-0x2c]
  40a5af:	push   eax
  40a5b0:	call   0x407c0a
  40a5b5:	mov    eax,ds:0x40d5d0
  40a5ba:	push   0x4
  40a5bc:	add    eax,0x1cc
  40a5c1:	push   eax
  40a5c2:	lea    eax,[ebp-0x14]
  40a5c5:	push   eax
  40a5c6:	call   0x40742d
  40a5cb:	mov    eax,DWORD PTR [ebp-0x14]
  40a5ce:	mov    eax,DWORD PTR [eax]
  40a5d0:	pop    edi
  40a5d1:	pop    esi
  40a5d2:	pop    ebx
  40a5d3:	leave  
  40a5d4:	ret    0xc
  40a5d7:	push   ebp
  40a5d8:	mov    ebp,esp
  40a5da:	sub    esp,0x14
  40a5dd:	leave  
  40a5de:	ret    0x4
  40a5e1:	push   ebp
  40a5e2:	mov    ebp,esp
  40a5e4:	push   ecx
  40a5e5:	or     eax,0x5cec
  40a5ea:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40a5f1:	add    eax,0x77b5
  40a5f6:	mov    eax,DWORD PTR [ebp+0x8]
  40a5f9:	mov    al,BYTE PTR [eax]
  40a5fb:	add    DWORD PTR ds:0x412354,0x2449
  40a605:	add    al,0x34
  40a607:	sbb    DWORD PTR ds:0x41237c,0x412364
  40a611:	xor    al,0x4a
  40a613:	cmp    al,0xcb
  40a615:	mov    DWORD PTR ds:0x4245c2,0x6064
  40a61f:	jne    0x40a6b9
  40a625:	mov    eax,DWORD PTR [ebp+0x8]
  40a628:	mov    ecx,DWORD PTR [ebp+0x8]
  40a62b:	add    ecx,DWORD PTR [eax+0x3c]
  40a62e:	mov    edx,0x7510859
  40a633:	and    DWORD PTR ds:0x412368,0x0
  40a63d:	mov    eax,ds:0x412368
  40a642:	inc    eax
  40a643:	mov    ds:0x412368,eax
  40a648:	cmp    DWORD PTR ds:0x412368,0xe
  40a64f:	jne    0x40a663
  40a655:	push   0x41236c
  40a65a:	push   DWORD PTR [ebp-0x10]
  40a65d:	call   DWORD PTR ds:0x40d398
  40a663:	cmp    DWORD PTR ds:0x412368,0xd
  40a66a:	jne    0x40a67b
  40a670:	mov    eax,ds:0x412368
  40a675:	inc    eax
  40a676:	mov    ds:0x412368,eax
  40a67b:	cmp    DWORD PTR ds:0x412368,0x1f
  40a682:	jb     0x40a63d
  40a688:	mov    DWORD PTR [ebp+0x8],ecx
  40a68b:	mov    eax,DWORD PTR [ebp-0x4]
  40a68e:	xor    eax,edx
  40a690:	push   esi
  40a691:	mov    esi,DWORD PTR [ebp+0x8]
  40a694:	mov    ecx,0x32729f
  40a699:	add    eax,ecx
  40a69b:	cmp    DWORD PTR [esi+0x54],eax
  40a69e:	pop    esi
  40a69f:	je     0x40a6ad
  40a6a5:	mov    eax,DWORD PTR [ebp+0x8]
  40a6a8:	jmp    0x40a6c6
  40a6ad:	mov    eax,DWORD PTR [ebp-0x4]
  40a6b0:	xor    eax,edx
  40a6b2:	add    eax,ecx
  40a6b4:	jmp    0x40a6c6
  40a6b9:	mov    eax,DWORD PTR [ebp-0x4]
  40a6bc:	xor    eax,0x7510859
  40a6c1:	add    eax,0x32729f
  40a6c6:	leave  
  40a6c7:	ret    0x4
  40a6ca:	push   ebp
  40a6cb:	mov    ebp,esp
  40a6cd:	push   ecx
  40a6ce:	mov    DWORD PTR ds:0x417e41,0x1a
  40a6d8:	cmp    DWORD PTR ds:0x417e41,0x0
  40a6df:	je     0x40a739
  40a6e5:	cmp    DWORD PTR ds:0x417e41,0x4
  40a6ec:	jne    0x40a70f
  40a6f2:	push   0x6416
  40a6f7:	push   0x57a6
  40a6fc:	push   0x7327
  40a701:	push   DWORD PTR [ebp-0xc]
  40a704:	push   0x1809
  40a709:	call   DWORD PTR ds:0x40d39c
  40a70f:	cmp    DWORD PTR ds:0x417e41,0x5
  40a716:	jne    0x40a727
  40a71c:	mov    eax,ds:0x417e41
  40a721:	dec    eax
  40a722:	mov    ds:0x417e41,eax
  40a727:	mov    eax,ds:0x417e41
  40a72c:	dec    eax
  40a72d:	mov    ds:0x417e41,eax
  40a732:	jmp    0x40a6d8
  40a737:	sub    edx,edx
  40a739:	push   ecx
  40a73a:	sub    edx,eax
  40a73c:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  40a743:	and    DWORD PTR ds:0x412358,0x0
  40a74d:	jmp    0x40a761
  40a752:	xor    edx,edx
  40a754:	add    edx,DWORD PTR ds:0x412358
  40a75a:	inc    edx
  40a75b:	mov    DWORD PTR ds:0x412358,edx
  40a761:	cmp    DWORD PTR ds:0x412358,0x11
  40a768:	jae    0x40a79c
  40a76e:	cmp    DWORD PTR ds:0x412358,0x18
  40a775:	jne    0x40a791
  40a77b:	push   0x4012
  40a780:	push   DWORD PTR [ebp-0xc]
  40a783:	push   0x7b7f
  40a788:	push   DWORD PTR [ebp-0xc]
  40a78b:	call   DWORD PTR ds:0x40d020
  40a791:	jmp    0x40a752
  40a796:	sub    DWORD PTR ds:0x4245ae,ebx
  40a79c:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  40a7a3:	jmp    0x40a91b
  40a7a8:	(bad)  
  40a7a9:	jmp    0x40a73d
  40a7ab:	aam    0x78
  40a7ad:	push   ebp
  40a7ae:	pop    ecx
  40a7af:	jnp    0x40a756
  40a7b1:	fwait
  40a7b2:	jne    0x40a830
  40a7b4:	or     BYTE PTR [eax+0x2505ca7a],dh
  40a7ba:	jle    0x40a83a
  40a7bc:	lds    edi,FWORD PTR [edi+0x7e]
  40a7bf:	jle    0x40a7f8
  40a7c1:	popf   
  40a7c2:	adc    DWORD PTR [ecx-0x61],esp
  40a7c5:	test   al,0x37
  40a7c7:	aaa    
  40a7c8:	add    BYTE PTR [eax+0x6c],ah
  40a7cb:	inc    eax
  40a7cc:	cmp    ah,BYTE PTR [edx+0x66]
  40a7cf:	push   esi
  40a7d0:	ja     0x40a78d
  40a7d2:	mov    esp,ecx
  40a7d4:	dec    ebx
  40a7d5:	rep lods eax,DWORD PTR ds:[esi]
  40a7d7:	or     bl,BYTE PTR [ebx+0x5683e54c]
  40a7dd:	popa   
  40a7de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7df:	xchg   al,dh
  40a7e1:	sbb    ch,BYTE PTR cs:[ecx+0x70]
  40a7e5:	or     al,0x43
  40a7e7:	mov    eax,0x2800786d
  40a7ec:	mov    bh,0x8
  40a7ee:	(bad)  
  40a7ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7f0:	push   0xffffffd0
  40a7f2:	pop    es
  40a7f3:	sub    al,0x2a
  40a7f5:	adc    DWORD PTR [eax],esi
  40a7f7:	dec    esi
  40a7f8:	hlt    
  40a7f9:	das    
  40a7fa:	sbb    BYTE PTR [edi-0x18d96004],dl
  40a800:	out    dx,al
  40a801:	ror    BYTE PTR [ebx],cl
  40a803:	stc    
  40a804:	ins    DWORD PTR es:[edi],dx
  40a805:	add    al,0xa0
  40a807:	add    al,0x14
  40a809:	add    DWORD PTR [ebx+0x42ca9e22],esp
  40a80f:	inc    ebx
  40a810:	loope  0x40a81e
  40a812:	in     al,dx
  40a813:	and    ch,bl
  40a815:	push   es
  40a816:	bound  esp,QWORD PTR [eax-0x7d3215aa]
  40a81c:	xlat   BYTE PTR ds:[ebx]
  40a81d:	cmp    al,0xa5
  40a81f:	aam    0x26
  40a821:	mul    edx
  40a823:	push   esp
  40a824:	ins    BYTE PTR es:[edi],dx
  40a825:	icebp  
  40a826:	xchg   ebx,eax
  40a827:	retf   
  40a828:	jl     0x40a812
  40a82a:	xor    DWORD PTR [ebx+0x29310e47],edx
  40a830:	mul    DWORD PTR [edi+ebp*2+0x206815bd]
  40a837:	inc    edi
  40a838:	in     al,0xcf
  40a83a:	sub    eax,0x75838e26
  40a83f:	cmc    
  40a840:	sbb    bl,BYTE PTR [ecx+esi*4-0x520c18e2]
  40a847:	imul   DWORD PTR [ecx+0x54a0734c]
  40a84d:	fs cwde 
  40a84f:	lods   eax,DWORD PTR ds:[esi]
  40a850:	mov    eax,0x7672df64
  40a855:	mov    ds:0xdc89478e,eax
  40a85a:	pop    ds
  40a85b:	add    al,0x65
  40a85d:	not    edi
  40a85f:	(bad)  
  40a860:	icebp  
  40a861:	(bad)  
  40a863:	mov    bl,0x1a
  40a865:	imul   ecx,edi,0x4e
  40a868:	pop    esp
  40a869:	add    DWORD PTR [esi],edi
  40a86b:	sbb    eax,0x757a2a8d
  40a870:	add    DWORD PTR [eax],ebx
  40a872:	iret   
  40a873:	repnz xchg ecx,eax
  40a875:	stos   BYTE PTR es:[edi],al
  40a876:	mov    eax,0xaf18490a
  40a87b:	push   esp
  40a87c:	popa   
  40a87d:	test   eax,0xbf13f7f6
  40a882:	jmp    0x4e6230c2
  40a887:	loopne 0x40a811
  40a889:	int    0x7c
  40a88b:	jge    0x40a8a1
  40a88d:	adc    eax,0xbc34a032
  40a893:	je     0x40a81a
  40a895:	ret    0xb4d9
  40a898:	sbb    ebx,ebx
  40a89a:	inc    eax
  40a89b:	lds    ebx,FWORD PTR [edx]
  40a89d:	and    eax,0x9c606145
  40a8a2:	push   0xb8b2a1a9
  40a8a7:	add    ecx,DWORD PTR ds:0xedb16fd1
  40a8ad:	add    BYTE PTR [eax-0x433619ff],ch
  40a8b3:	cmp    al,0x5f
  40a8b5:	mov    ah,0xa0
  40a8b7:	(bad)  
  40a8b8:	not    DWORD PTR [esi+0x4b01dac3]
  40a8be:	cli    
  40a8bf:	retf   0xc33a
  40a8c2:	nop
  40a8c3:	adc    BYTE PTR [edi+eiz*2],bh
  40a8c6:	inc    esp
  40a8c7:	cmp    edx,DWORD PTR [edi+0x1b]
  40a8ca:	sub    BYTE PTR [eax-0x277f60e8],al
  40a8d0:	jp     0x40a8ef
  40a8d2:	push   es
  40a8d3:	ja     0x40a8ea
  40a8d5:	adc    eax,0x8215eb8a
  40a8da:	fwait
  40a8db:	jmp    0x9de9:0x880bfd65
  40a8e2:	fist   DWORD PTR [ebx-0x7ecab932]
  40a8e8:	pop    ebp
  40a8e9:	call   0x4e7e93ed
  40a8ee:	clc    
  40a8ef:	cmc    
  40a8f0:	repz add BYTE PTR [edi],ah
  40a8f3:	iret   
  40a8f4:	popf   
  40a8f5:	(bad)  
  40a8f6:	mov    al,ds:0x26bddec3
  40a8fb:	inc    esp
  40a8fc:	push   eax
  40a8fd:	jns    0x40a906
  40a8ff:	and    edi,DWORD PTR [ecx+0x7e]
  40a902:	or     DWORD PTR [esi-0xb],edx
  40a905:	xor    ebp,DWORD PTR [eax+eax*4-0x54]
  40a909:	add    eax,0xd20a9d80
  40a90e:	pop    ss
  40a90f:	or     al,0xea
  40a911:	lods   eax,DWORD PTR ds:[esi]
  40a912:	add    ebx,DWORD PTR [edx+0x67be8f9e]
  40a918:	inc    edi
  40a919:	enter  0x8ba0,0x45
  40a91d:	cld    
  40a91e:	push   esi
  40a91f:	or     DWORD PTR ds:0x41abe2,edx
  40a925:	mov    esi,DWORD PTR [ebp-0x8]
  40a928:	and    DWORD PTR ds:0x412370,0x0
  40a932:	mov    ecx,DWORD PTR ds:0x412370
  40a938:	inc    ecx
  40a939:	mov    DWORD PTR ds:0x412370,ecx
  40a93f:	cmp    DWORD PTR ds:0x412370,0x26
  40a946:	jne    0x40a962
  40a94c:	push   DWORD PTR [ebp-0x14]
  40a94f:	push   DWORD PTR [ebp-0x24]
  40a952:	push   0x8e18
  40a957:	push   0x31c8
  40a95c:	call   DWORD PTR ds:0x40d024
  40a962:	cmp    DWORD PTR ds:0x412370,0x1b
  40a969:	jb     0x40a932
  40a96f:	mov    edx,0x7510859
  40a974:	xor    eax,edx
  40a976:	xor    esi,edx
  40a978:	mov    ecx,0x32729f
  40a97d:	add    esi,ecx
  40a97f:	add    eax,ecx
  40a981:	imul   eax,esi
  40a984:	mov    esi,DWORD PTR [ebp+0xc]
  40a987:	cmp    esi,eax
  40a989:	jne    0x40ac95
  40a98f:	mov    eax,DWORD PTR [ebp-0x4]
  40a992:	mov    esi,DWORD PTR [ebp-0x8]
  40a995:	jmp    0x40ab0d
  40a99a:	addr16 jno 0x40a945
  40a99d:	mov    ds:0xc965bb78,eax
  40a9a2:	jl     0x40a9a2
  40a9a4:	arpl   bx,dx
  40a9a6:	or     ebx,DWORD PTR [eax+0x3ae01b6d]
  40a9ac:	jle    0x40aa2c
  40a9ae:	lds    edi,FWORD PTR [edi+0x7e]
  40a9b1:	jle    0x40a990
  40a9b3:	fcmovne st,st(7)
  40a9b5:	jbe    0x40a9d3
  40a9b7:	ret    0xda91
  40a9ba:	mov    WORD PTR [edi-0x13f4d1b5],es
  40a9c0:	fstp   DWORD PTR ss:0x404b631b
  40a9c7:	mov    ebp,0x4fe446b0
  40a9cc:	mov    edi,0x48e31b5c
  40a9d1:	mov    es,WORD PTR [ecx-0x41]
  40a9d4:	popf   
  40a9d5:	sbb    DWORD PTR [ecx-0xcefd715],ebp
  40a9db:	jge    0x40a985
  40a9dd:	inc    ecx
  40a9de:	inc    ecx
  40a9df:	xchg   esp,eax
  40a9e0:	lahf   
  40a9e1:	or     esi,DWORD PTR [edx-0x1bbf4bff]
  40a9e7:	push   ecx
  40a9e8:	(bad)  
  40a9ea:	dec    esi
  40a9eb:	or     al,0xb9
  40a9ed:	mov    edi,0xbf64d799
  40a9f2:	push   ebp
  40a9f3:	das    
  40a9f4:	push   0x3432bff0
  40a9f9:	test   DWORD PTR [eax+edi*1-0x69df26a0],ecx
  40aa00:	sub    al,0x64
  40aa02:	data16 lock jecxz 0x40aa62
  40aa06:	cmp    DWORD PTR [edi],0xffffffd4
  40aa09:	imul   ecx,DWORD PTR [ebx-0x6d5b8220],0x2e
  40aa10:	add    DWORD PTR [ecx-0x3bc57e75],ecx
  40aa16:	clc    
  40aa17:	les    ebx,FWORD PTR fs:[ebx-0x1d]
  40aa1b:	in     al,dx
  40aa1c:	nop
  40aa1d:	pop    es
  40aa1e:	js     0x40a9b1
  40aa20:	enter  0xe3bf,0xf
  40aa24:	jne    0x40aa80
  40aa26:	cmp    BYTE PTR [ebx+0x67d6f1ce],dh
  40aa2c:	retf   
  40aa2d:	or     al,0x68
  40aa2f:	loop   0x40aa70
  40aa31:	dec    ecx
  40aa32:	outs   dx,BYTE PTR ds:[esi]
  40aa33:	push   ecx
  40aa34:	daa    
  40aa35:	dec    ecx
  40aa36:	dec    esi
  40aa37:	jmp    DWORD PTR fs:[eax+0x7a]
  40aa3b:	in     eax,dx
  40aa3c:	pop    esi
  40aa3d:	call   0xf6aa:0xf3bb834c
  40aa44:	loopne 0x40aa0c
  40aa46:	mov    ds:0x75b5044f,al
  40aa4b:	sbb    al,0x77
  40aa4d:	ud2    
  40aa4f:	test   eax,0x2a1397ce
  40aa54:	cmp    eax,0x30e490d0
  40aa59:	and    eax,0x375351b3
  40aa5e:	test   eax,0xdaa00427
  40aa63:	fbld   TBYTE PTR [edi+ebx*8+0x636a19cd]
  40aa6a:	push   ds
  40aa6b:	icebp  
  40aa6c:	sub    BYTE PTR [eax-0x5f956d3b],ah
  40aa72:	into   
  40aa73:	jns    0x40aada
  40aa75:	and    DWORD PTR [edx-0xcbe2d4f],esi
  40aa7b:	inc    eax
  40aa7c:	sub    ah,BYTE PTR [edi-0x3fb6c004]
  40aa82:	inc    ecx
  40aa83:	adc    ah,BYTE PTR ds:0xbf379413
  40aa89:	arpl   WORD PTR ds:0x4f03edc3,di
  40aa8f:	add    DWORD PTR [ebp+0x41717284],ecx
  40aa95:	out    dx,eax
  40aa96:	xor    esi,DWORD PTR [esi+0x6f]
  40aa99:	jae    0x40aa86
  40aa9b:	xor    bh,BYTE PTR [edx-0x5b75454c]
  40aaa1:	out    0x1c,al
  40aaa3:	adc    dl,dh
  40aaa5:	inc    ecx
  40aaa6:	(bad)  
  40aaa7:	cwde   
  40aaa8:	jmp    0x603b9e2e
  40aaad:	out    0x8a,al
  40aaaf:	sub    al,0xf1
  40aab1:	sbb    eax,0x356e7b05
  40aab6:	rcr    DWORD PTR [esi],cl
  40aab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aab9:	(bad)  
  40aaba:	(bad)  
  40aabb:	push   cs
  40aabc:	lea    edi,[eax-0x4e4b306a]
  40aac2:	mov    ebx,0x6b899a01
  40aac7:	mov    ah,0x9c
  40aac9:	push   ecx
  40aaca:	add    BYTE PTR [edx+0x1cad092b],dl
  40aad0:	fldl2e 
  40aad2:	pop    es
  40aad3:	loope  0x40aaa7
  40aad5:	mov    ds:0xb7645e84,al
  40aada:	clc    
  40aadb:	call   0xca1a:0x803b5bcf
  40aae2:	loop   0x40ab55
  40aae4:	xor    al,0xcb
  40aae6:	fwait
  40aae7:	leave  
  40aae8:	and    bl,BYTE PTR [ebx+0x1c]
  40aaeb:	lds    edi,FWORD PTR [esp+edi*4]
  40aaee:	mov    bh,0xa
  40aaf0:	fidiv  DWORD PTR [esi]
  40aaf2:	outs   dx,DWORD PTR gs:[esi]
  40aaf4:	jne    0x40ab0a
  40aaf6:	out    dx,eax
  40aaf7:	mov    dh,0xbb
  40aaf9:	inc    eax
  40aafa:	mov    esp,0xac18b04a
  40aaff:	add    BYTE PTR [edx],cl
  40ab01:	lds    eax,FWORD PTR [edx-0x265009db]
  40ab07:	pop    ds
  40ab08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab09:	(bad)  
  40ab0a:	stc    
  40ab0b:	imul   ecx,DWORD PTR [ecx-0xdcc3dcd],0x3
  40ab12:	shr    ecx,0x73
  40ab15:	add    DWORD PTR [eax],eax
  40ab17:	add    BYTE PTR [edi-0x4b],bh
  40ab1a:	add    eax,0x117b453b
  40ab1f:	jns    0x40aab9
  40ab21:	cmp    eax,0xde77ac8b
  40ab26:	aaa    
  40ab27:	sbb    DWORD PTR [edi+0x3b],ecx
  40ab2a:	jle    0x40abaa
  40ab2c:	lds    edi,FWORD PTR [edi+0x7e]
  40ab2f:	jle    0x40aafa
  40ab31:	scas   eax,DWORD PTR es:[edi]
  40ab32:	mov    ebx,0xfa2fa5ff
  40ab37:	xor    BYTE PTR [esi+0x44],dh
  40ab3a:	out    dx,al
  40ab3b:	test   eax,0xfee0eccb
  40ab40:	js     0x40ab80
  40ab42:	hlt    
  40ab43:	stc    
  40ab44:	or     eax,0xe9deab6a
  40ab49:	imul   ebp,DWORD PTR [ebp+eiz*2+0x3e],0xc876f0cd
  40ab51:	sub    DWORD PTR [ebx],ebp
  40ab53:	mov    edx,0xece5ba
  40ab58:	scas   eax,DWORD PTR es:[edi]
  40ab59:	frstor [esi-0x77]
  40ab5c:	hlt    
  40ab5d:	sahf   
  40ab5e:	test   DWORD PTR [edi+0x4a],ebx
  40ab61:	sbb    bl,BYTE PTR ds:0x1728c2fb
  40ab67:	jp     0x40ab30
  40ab69:	nop
  40ab6a:	xor    dh,0xf0
  40ab6d:	lods   eax,DWORD PTR ds:[esi]
  40ab6e:	pop    ss
  40ab6f:	dec    esi
  40ab70:	imul   eax,DWORD PTR [edi+0x724ab95b],0x3403db40
  40ab7a:	adc    cl,dl
  40ab7c:	sub    bh,bl
  40ab7e:	jp     0x40ab36
  40ab80:	bound  esi,QWORD PTR [ebp+0x7857a]
  40ab86:	add    ecx,DWORD PTR [eax+0x65a726ea]
  40ab8c:	adc    al,0x76
  40ab8e:	push   ebx
  40ab8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab91:	push   ebx
  40ab92:	push   ecx
  40ab93:	push   cs
  40ab94:	jnp    0x40abf5
  40ab96:	and    DWORD PTR [edi],edx
  40ab98:	pop    esi
  40ab99:	out    0xeb,eax
  40ab9b:	mov    ds:0x49c3b1c8,al
  40aba0:	mov    al,0x0
  40aba2:	sub    DWORD PTR [eax],esi
  40aba4:	xor    esp,ebp
  40aba6:	ss mov esi,0xc1e2ca1
  40abac:	mov    al,BYTE PTR [eax]
  40abae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abaf:	scas   eax,DWORD PTR es:[edi]
  40abb0:	or     eax,0x88a22791
  40abb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abb6:	mov    eax,ds:0x9ac83a7f
  40abbb:	add    al,0x8e
  40abbd:	adc    esp,DWORD PTR ds:0xa8ff1512
  40abc3:	jne    0x40ab82
  40abc5:	rcr    DWORD PTR [ebp+0x23],1
  40abc8:	(bad)  [ebx-0x2f]
  40abcb:	cld    
  40abcc:	int3   
  40abcd:	pop    eax
  40abce:	in     eax,0xc4
  40abd0:	xlat   BYTE PTR ds:[ebx]
  40abd1:	cs hlt 
  40abd3:	inc    edi
  40abd4:	jns    0x40ac21
  40abd6:	sub    al,0x41
  40abd8:	mov    al,ds:0xdd82955c
  40abdd:	mov    edi,0xd2a93816
  40abe2:	and    BYTE PTR [ebx],al
  40abe4:	xchg   ebp,eax
  40abe5:	dec    al
  40abe7:	adc    BYTE PTR [ebx-0x67],dl
  40abea:	aam    0xba
  40abec:	adc    eax,0x9c17c4a
  40abf1:	cmp    DWORD PTR [ebx+0x32],0xc33dc806
  40abf8:	jae    0x40aba8
  40abfa:	inc    edx
  40abfb:	and    edx,DWORD PTR [edx-0x79]
  40abfe:	add    eax,0xc933b843
  40ac03:	cmc    
  40ac04:	push   esp
  40ac05:	inc    edx
  40ac06:	jne    0x40abbb
  40ac08:	jle    0x40ac5a
  40ac0a:	dec    ecx
  40ac0b:	shr    DWORD PTR [esi+0x5c],0xcf
  40ac0f:	loop   0x40abc4
  40ac11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac12:	push   ecx
  40ac13:	fcomp  st(4)
  40ac15:	data16 aad 0xc7
  40ac18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac19:	leave  
  40ac1a:	xor    BYTE PTR ds:[esi-0x6e],dh
  40ac1e:	push   edx
  40ac1f:	sbb    BYTE PTR ds:0x31ed7a6,0x62
  40ac26:	aas    
  40ac27:	(bad)  
  40ac28:	xor    al,0x2b
  40ac2a:	aad    0x9b
  40ac2c:	test   eax,0xdc8e043b
  40ac31:	ins    BYTE PTR es:[edi],dx
  40ac32:	fsub   st,st(3)
  40ac34:	xchg   esi,eax
  40ac35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac36:	ret    0xe15e
  40ac39:	in     al,dx
  40ac3a:	or     ebx,DWORD PTR [edi]
  40ac3c:	sub    eax,0xa3bd968
  40ac41:	cmp    BYTE PTR [edx+eax*8],cl
  40ac44:	or     eax,0xe5297f4
  40ac49:	mov    ch,0x1c
  40ac4b:	push   edx
  40ac4c:	int    0x7c
  40ac4e:	or     esi,edi
  40ac50:	stos   DWORD PTR es:[edi],eax
  40ac51:	adc    ebx,edi
  40ac53:	mov    ecx,0x627a7fee
  40ac58:	int    0xe
  40ac5a:	inc    edx
  40ac5b:	ins    BYTE PTR es:[edi],dx
  40ac5c:	mov    ah,0xe
  40ac5e:	mov    BYTE PTR [esi-0x53],ch
  40ac61:	es repnz xor ah,bh
  40ac65:	fwait
  40ac66:	inc    ebp
  40ac67:	xlat   BYTE PTR ds:[ebx]
  40ac68:	cmp    cl,bl
  40ac6a:	mov    dh,0x19
  40ac6c:	push   es
  40ac6d:	ret    0x6cb
  40ac70:	addr16 jo 0x40ac99
  40ac73:	ret    0x4074
  40ac76:	scas   eax,DWORD PTR es:[edi]
  40ac77:	jp     0x40ac1e
  40ac79:	leave  
  40ac7a:	or     DWORD PTR [ebp-0x7d],ebp
  40ac7d:	mov    eax,ds:0xae95647f
  40ac82:	and    BYTE PTR [esi+0x4226aade],ah
  40ac88:	dec    edx
  40ac89:	dec    eax
  40ac8a:	add    al,0x3
  40ac8c:	icebp  
  40ac8d:	imul   eax,esi
  40ac90:	jmp    0x40ae48
  40ac95:	mov    eax,DWORD PTR [ebp+0xc]
  40ac98:	mov    eax,DWORD PTR [eax+0x78]
  40ac9b:	mov    DWORD PTR [ebp+0xc],eax
  40ac9e:	mov    eax,DWORD PTR [ebp-0x4]
  40aca1:	mov    esi,DWORD PTR [ebp-0x8]
  40aca4:	xor    eax,edx
  40aca6:	xor    esi,edx
  40aca8:	add    eax,ecx
  40acaa:	jmp    0x40ae22
  40acaf:	push   ss
  40acb0:	mov    esp,0xb169beb3
  40acb5:	sub    edx,DWORD PTR [esp+edx*4-0x31]
  40acb9:	cmc    
  40acba:	sub    ebx,DWORD PTR [edi+0x73]
  40acbd:	rcl    DWORD PTR [esi+0x2a],1
  40acc0:	cmp    DWORD PTR [esi+0x7e],edi
  40acc3:	lds    edi,FWORD PTR [edi+0x7e]
  40acc6:	jle    0x40acb6
  40acc8:	test   DWORD PTR [ecx-0x4a6394cc],eax
  40acce:	xchg   edx,eax
  40accf:	pop    edx
  40acd0:	test   dh,0x16
  40acd3:	cmp    eax,0xc469c30a
  40acd8:	cmp    ecx,esp
  40acda:	ret    0xd567
  40acdd:	and    eax,0xd4353d76
  40ace2:	sbb    BYTE PTR [edi],0x5d
  40ace5:	mov    ch,0x9f
  40ace7:	cdq    
  40ace8:	or     eax,0x5311d1c1
  40aced:	jb     0x40ac9d
  40acef:	inc    eax
  40acf0:	pop    esp
  40acf1:	jae    0x40acf5
  40acf3:	jmp    0x77a6dafa
  40acf8:	pop    edi
  40acf9:	mov    al,ds:0x4c8c8ac7
  40acfe:	shl    DWORD PTR [eax+edi*4+0x78],1
  40ad02:	sub    eax,0xeadad4b1
  40ad07:	pop    ecx
  40ad08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad09:	out    0x80,al
  40ad0b:	or     ebp,0xffffffe7
  40ad0e:	add    DWORD PTR ds:0x6960cb82,0xdca0293
  40ad18:	mov    ds,WORD PTR [edi]
  40ad1a:	out    dx,al
  40ad1b:	jo     0x40ad2b
  40ad1d:	push   eax
  40ad1e:	push   esp
  40ad1f:	mov    esi,0x48b13456
  40ad24:	les    esp,FWORD PTR ds:0x7e2f5757
  40ad2a:	or     dh,BYTE PTR [ebx]
  40ad2c:	daa    
  40ad2d:	test   DWORD PTR [esi],ebx
  40ad2f:	mov    dl,BYTE PTR ds:0x9deaff3a
  40ad35:	int3   
  40ad36:	xchg   DWORD PTR [eax],esp
  40ad38:	rcr    DWORD PTR [ebx+0x2b],1
  40ad3b:	sub    eax,0x45466bb3
  40ad40:	cmp    ebp,esi
  40ad42:	je     0x40ad2b
  40ad44:	or     al,0xd0
  40ad46:	sub    eax,0x1374cd8a
  40ad4b:	sar    DWORD PTR [edx],0xb0
  40ad4e:	addr16 jmp 0x40adad
  40ad51:	popa   
  40ad52:	test   esi,esi
  40ad54:	cmp    bh,ch
  40ad56:	xchg   DWORD PTR [edx],edi
  40ad58:	push   ebx
  40ad59:	not    ebx
  40ad5b:	jb     0x40acf1
  40ad5d:	xchg   esp,eax
  40ad5e:	lods   al,BYTE PTR ds:[esi]
  40ad5f:	je     0x40ad28
  40ad61:	popf   
  40ad62:	cs dec ebp
  40ad64:	shr    BYTE PTR [ecx-0x6bc48cd1],1
  40ad6a:	arpl   WORD PTR [ebx+0x62ae7af8],bx
  40ad70:	inc    ebp
  40ad71:	pop    ds
  40ad72:	pop    edx
  40ad73:	rol    DWORD PTR [edx+ebx*1-0x6cb7e90f],1
  40ad7a:	rol    DWORD PTR [ebp+0x5951a2d3],cl
  40ad80:	enter  0x8c8a,0xed
  40ad84:	pop    ss
  40ad85:	push   edx
  40ad86:	test   BYTE PTR [ebp+edx*4-0x41],0xeb
  40ad8b:	dec    esi
  40ad8c:	popf   
  40ad8d:	int3   
  40ad8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad8f:	ins    BYTE PTR es:[edi],dx
  40ad90:	fs je  0x40ad70
  40ad93:	sub    dh,cl
  40ad95:	popa   
  40ad96:	sbb    DWORD PTR [esi],esi
  40ad98:	xchg   al,bl
  40ad9a:	fsubr  QWORD PTR [ecx]
  40ad9c:	test   DWORD PTR [esi-0x5e],edi
  40ad9f:	repnz sub BYTE PTR [ebp+0x2e6346ee],dl
  40ada6:	xchg   ebp,eax
  40ada7:	cld    
  40ada8:	ins    BYTE PTR es:[edi],dx
  40ada9:	add    DWORD PTR [edi-0x14ad625b],esi
  40adaf:	xor    al,0x8e
  40adb1:	push   eax
  40adb2:	loopne 0x40ad8f
  40adb4:	or     al,0xd7
  40adb6:	out    0xe8,al
  40adb8:	push   ds
  40adb9:	cmp    BYTE PTR [ebx+edi*2],dl
  40adbc:	ins    DWORD PTR es:[edi],dx
  40adbd:	pop    ebx
  40adbe:	popa   
  40adbf:	sar    BYTE PTR [ecx],cl
  40adc1:	add    DWORD PTR [esi+0x41],ebx
  40adc4:	jp     0x40ad81
  40adc6:	mov    ecx,eax
  40adc8:	test   al,0x7e
  40adca:	mov    esi,0x6c9fc9df
  40adcf:	sbb    ebp,DWORD PTR [ebx+0x7]
  40add2:	push   es
  40add3:	add    eax,0xfebb451f
  40add8:	(bad)  
  40add9:	fcmovne st,st(5)
  40addb:	mov    ah,0x94
  40addd:	or     eax,0x3172966
  40ade2:	inc    ebp
  40ade3:	sbb    DWORD PTR [edx+ebx*8-0x53],eax
  40ade7:	in     al,0x59
  40ade9:	inc    ecx
  40adea:	push   ds
  40adeb:	add    bh,cl
  40aded:	xchg   esp,eax
  40adee:	sahf   
  40adef:	pusha  
  40adf0:	pop    ebx
  40adf1:	imul   ebx,DWORD PTR cs:[ebx-0x26b0098e],0xd8fc4d7e
  40adfc:	in     al,dx
  40adfd:	cmp    ecx,DWORD PTR [edi+0x6c99f09f]
  40ae03:	mov    bl,dl
  40ae05:	pusha  
  40ae06:	cmp    BYTE PTR [edi],0xce
  40ae09:	push   0xffffffd3
  40ae0b:	stc    
  40ae0c:	repnz cdq 
  40ae0e:	mov    bh,0xf1
  40ae10:	sti    
  40ae11:	inc    ebx
  40ae12:	sbb    DWORD PTR [ecx],esi
  40ae14:	and    DWORD PTR ds:0x9c0c2e91,ebp
  40ae1a:	icebp  
  40ae1b:	ins    BYTE PTR es:[edi],dx
  40ae1c:	pop    ebx
  40ae1d:	push   cs
  40ae1e:	clc    
  40ae1f:	mov    esp,0xf103285d
  40ae24:	imul   eax,esi
  40ae27:	mov    esi,DWORD PTR [ebp+0xc]
  40ae2a:	cmp    esi,eax
  40ae2c:	mov    eax,DWORD PTR [ebp-0x4]
  40ae2f:	je     0x40a992
  40ae35:	xor    eax,edx
  40ae37:	add    eax,ecx
  40ae39:	mov    ecx,DWORD PTR [ebp+0xc]
  40ae3c:	imul   eax,ecx
  40ae3f:	add    eax,DWORD PTR [ebp+0x8]
  40ae42:	mov    DWORD PTR [ebp+0xc],eax
  40ae45:	mov    eax,DWORD PTR [ebp+0xc]
  40ae48:	pop    esi
  40ae49:	leave  
  40ae4a:	ret    0x8
  40ae4d:	push   ebp
  40ae4e:	mov    ebp,esp
  40ae50:	sub    esp,0x30
  40ae53:	add    DWORD PTR ds:0x41abce,0x682
  40ae5d:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40ae64:	mov    DWORD PTR [ebp-0x18],0xf89c853b
  40ae6b:	dec    DWORD PTR ds:0x41abde
  40ae71:	mov    ecx,DWORD PTR [ebp-0x4]
  40ae74:	push   ebx
  40ae75:	mov    eax,0x7510859
  40ae7a:	xor    ebx,0x7bf6
  40ae80:	xor    ecx,eax
  40ae82:	jmp    0x40af67
  40ae87:	je     0x40aef6
  40ae89:	jg     0x40aea2
  40ae8b:	addr16 gs adc al,0x6d
  40ae8f:	test   eax,0x66268d5d
  40ae94:	and    ecx,DWORD PTR [esi+0x60]
  40ae97:	icebp  
  40ae98:	ds jle 0x40af19
  40ae9b:	mov    dh,0x7e
  40ae9d:	jle    0x40af1d
  40ae9f:	inc    esi
  40aea0:	and    eax,0x9e25079e
  40aea5:	adc    BYTE PTR [eax],dh
  40aea7:	push   0xffffffde
  40aea9:	out    dx,eax
  40aeaa:	mov    ax,WORD PTR [edx-0x7b5a627c]
  40aeb1:	pop    ds
  40aeb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aeb3:	imul   esp,esp,0x27
  40aeb6:	ret    
  40aeb7:	or     eax,0xb5b57cdc
  40aebc:	sub    ah,dh
  40aebe:	rcl    DWORD PTR [ecx+edi*1-0x5f70d091],0x4e
  40aec6:	(bad)  
  40aec7:	lea    eax,[esi+0x7]
  40aeca:	jns    0x40ae8d
  40aecc:	inc    esp
  40aecd:	jbe    0x40ae87
  40aecf:	inc    eax
  40aed0:	cmp    bh,BYTE PTR [eax+esi*1]
  40aed3:	std    
  40aed4:	pop    es
  40aed5:	rcr    BYTE PTR [edx-0x40ddab48],0x9a
  40aedc:	repz out 0xd4,eax
  40aedf:	add    DWORD PTR [edx],0xef19e84c
  40aee5:	test   BYTE PTR [edi-0x5d214671],bl
  40aeeb:	xor    DWORD PTR [ecx-0x6899a472],ebx
  40aef1:	push   ss
  40aef2:	inc    edx
  40aef3:	arpl   WORD PTR [ecx-0x7],ax
  40aef6:	mov    esp,0xb71abf32
  40aefb:	ret    0xaa23
  40aefe:	int3   
  40aeff:	mov    edx,0xd3401dba
  40af04:	inc    esi
  40af05:	stos   BYTE PTR es:[edi],al
  40af06:	xor    edi,esi
  40af08:	lods   al,BYTE PTR ds:[esi]
  40af09:	(bad)  
  40af0a:	push   ds
  40af0b:	adc    dh,dh
  40af0d:	adc    DWORD PTR [eax+0x60],esi
  40af10:	shl    DWORD PTR [edx+0x5c6ddfab],1
  40af16:	adc    edi,DWORD PTR [edx+0x4589e51e]
  40af1c:	int    0xfa
  40af1e:	daa    
  40af1f:	cwde   
  40af20:	inc    esi
  40af21:	xchg   ebp,eax
  40af22:	js     0x40af66
  40af24:	dec    esi
  40af25:	add    DWORD PTR [edi+ecx*2-0x7],edx
  40af29:	xor    BYTE PTR [ebx],0xfb
  40af2c:	or     BYTE PTR [edx-0x26],al
  40af2f:	push   es
  40af30:	jno    0x40af0a
  40af32:	call   0x3c55:0xf28c9668
  40af39:	dec    ebp
  40af3a:	test   edi,esp
  40af3c:	xor    dh,BYTE PTR [edx]
  40af3e:	lea    ebx,[edi-0x68]
  40af41:	sbb    ebx,esi
  40af43:	lahf   
  40af44:	rcl    DWORD PTR [ecx+0x35],1
  40af47:	jmp    0x5f3e:0xded4086b
  40af4e:	int    0x2b
  40af50:	dec    ebp
  40af51:	ins    DWORD PTR es:[edi],dx
  40af52:	push   es
  40af53:	xchg   ecx,eax
  40af54:	mov    cl,0x40
  40af56:	pop    ds
  40af57:	pop    edi
  40af58:	dec    ebp
  40af59:	popf   
  40af5a:	not    BYTE PTR [edi+0x72c6d50f]
  40af60:	mov    eax,ds:0xc34d924e
  40af65:	clc    
  40af66:	mov    WORD PTR [ebx+0x32729f],?
  40af6c:	add    ecx,ebx
  40af6e:	and    DWORD PTR ds:0x412370,0x41abce
  40af78:	mov    DWORD PTR [ebp-0x1c],ecx
  40af7b:	mov    DWORD PTR ds:0x41235c,0x5a41
  40af85:	mov    ecx,DWORD PTR [ebp+0x14]
  40af88:	add    DWORD PTR ds:0x41abe6,0x41235c
  40af92:	push   esi
  40af93:	push   edi
  40af94:	or     DWORD PTR ds:0x41510d,0x36ef
  40af9e:	test   ecx,ecx
  40afa0:	je     0x40afae
  40afa6:	mov    ecx,DWORD PTR [ebp+0x14]
  40afa9:	mov    ecx,DWORD PTR [ecx]
  40afab:	mov    DWORD PTR [ebp-0x1c],ecx
  40afae:	movzx  edi,BYTE PTR ds:0x417e3d
  40afb5:	and    DWORD PTR ds:0x417e41,edi
  40afbb:	imul   edx,eax
  40afbe:	sub    DWORD PTR ds:0x412374,ecx
  40afc4:	mov    ecx,0x4573
  40afc9:	and    DWORD PTR ds:0x41abe2,0x0
  40afd3:	mov    esi,DWORD PTR ds:0x41abe2
  40afd9:	inc    esi
  40afda:	mov    DWORD PTR ds:0x41abe2,esi
  40afe0:	cmp    DWORD PTR ds:0x41abe2,0x22
  40afe7:	jne    0x40affd
  40afed:	push   0x2695
  40aff2:	push   0x8176
  40aff7:	call   DWORD PTR ds:0x40d3a0
  40affd:	cmp    DWORD PTR ds:0x41abe2,0x1e
  40b004:	jb     0x40afd3
  40b00a:	add    edx,ecx
  40b00c:	and    DWORD PTR ds:0x41abca,0x0
  40b016:	jmp    0x40b02a
  40b01b:	xor    edi,edi
  40b01d:	xor    edi,DWORD PTR ds:0x41abca
  40b023:	inc    edi
  40b024:	mov    DWORD PTR ds:0x41abca,edi
  40b02a:	cmp    DWORD PTR ds:0x41abca,0x12
  40b031:	jae    0x40b05b
  40b037:	cmp    DWORD PTR ds:0x41abca,0x1d
  40b03e:	jne    0x40b054
  40b044:	push   0x27af
  40b049:	push   0x17d7
  40b04e:	call   DWORD PTR ds:0x40d028
  40b054:	jmp    0x40b01b
  40b059:	or     esi,edi
  40b05b:	mov    esi,0x7879
  40b060:	mov    edi,0x1556
  40b065:	mov    DWORD PTR ds:0x4245b2,0x3a32
  40b06f:	xchg   esi,ecx
  40b071:	mov    ecx,DWORD PTR ds:0x41238c
  40b077:	mov    ecx,DWORD PTR [ecx]
  40b079:	or     DWORD PTR ds:0x417e49,ecx
  40b07f:	sub    edx,edi
  40b081:	and    ecx,DWORD PTR ds:0x412368
  40b087:	xor    esi,esi
  40b089:	adc    ecx,DWORD PTR ds:0x4245ae
  40b08f:	mov    DWORD PTR [ebp-0x28],esi
  40b092:	mov    DWORD PTR [ebp-0x2c],esi
  40b095:	add    ecx,DWORD PTR ds:0x41abd6
  40b09b:	mov    DWORD PTR [ebp-0x14],esi
  40b09e:	and    DWORD PTR ds:0x41510d,ebx
  40b0a4:	jmp    0x40b189
  40b0a9:	scas   al,BYTE PTR es:[edi]
  40b0aa:	mov    ch,0x8b
  40b0ac:	imul   edi,DWORD PTR [ecx+0x69],0x6e
  40b0b0:	pop    ecx
  40b0b1:	(bad)  
  40b0b2:	pusha  
  40b0b3:	fisttp WORD PTR [ecx-0x5a]
  40b0b6:	jp     0x40b066
  40b0b8:	cdq    
  40b0b9:	leave  
  40b0ba:	aas    
  40b0bb:	jle    0x40b13b
  40b0bd:	mov    dh,0x7e
  40b0bf:	jle    0x40b13f
  40b0c1:	sbb    DWORD PTR [esi],0x70
  40b0c4:	cmp    bh,BYTE PTR [ebp-0x6be065b8]
  40b0ca:	dec    eax
  40b0cb:	and    eax,0x94cadb89
  40b0d0:	lods   al,BYTE PTR ds:[esi]
  40b0d1:	loope  0x40b106
  40b0d3:	lds    edi,FWORD PTR [edx+0x3e]
  40b0d6:	xchg   ecx,edi
  40b0d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0d9:	or     esp,DWORD PTR [ecx+eax*8+0x5b3a79d8]
  40b0e0:	call   0xc59f14cc
  40b0e5:	cmp    al,0xd5
  40b0e7:	pop    ecx
  40b0e8:	fwait
  40b0e9:	mov    bl,0x2a
  40b0eb:	inc    edx
  40b0ec:	es iret 
  40b0ee:	retf   
  40b0ef:	jns    0x40b154
  40b0f1:	sbb    al,0x68
  40b0f3:	add    al,BYTE PTR [edx]
  40b0f5:	daa    
  40b0f6:	frstor [ecx+0x42ec663e]
  40b0fc:	jno    0x40b097
  40b0fe:	sbb    DWORD PTR [ecx+0x43],ebp
  40b101:	mov    bl,0xa7
  40b103:	inc    edx
  40b104:	dec    esi
  40b105:	cmp    DWORD PTR [ebp-0x66fbb383],esi
  40b10b:	mov    ebp,0xf4d8c446
  40b110:	outs   dx,BYTE PTR ds:[esi]
  40b111:	sbb    edx,DWORD PTR ds:0x67c9159b
  40b117:	outs   dx,BYTE PTR ds:[esi]
  40b118:	(bad)  
  40b119:	mov    BYTE PTR [edi+0x1d],ch
  40b11c:	out    0x4e,eax
  40b11e:	pop    ebp
  40b11f:	ss push eax
  40b121:	push   eax
  40b122:	clc    
  40b123:	cmp    eax,0x613d299f
  40b128:	mov    ss,WORD PTR [ebx-0x7e]
  40b12b:	add    BYTE PTR [ecx-0x63],ah
  40b12e:	loop   0x40b150
  40b130:	or     ecx,esi
  40b132:	xchg   BYTE PTR [ebx+0x53],dl
  40b135:	push   ss
  40b136:	ret    
  40b137:	sub    al,0x88
  40b139:	and    DWORD PTR [esi+eiz*4-0x41],0x1b
  40b13e:	push   edx
  40b13f:	ss push 0x4ad359c
  40b145:	push   edx
  40b146:	imul   BYTE PTR ds:0x350bbc0b
  40b14c:	popf   
  40b14d:	lahf   
  40b14e:	popf   
  40b14f:	loopne 0x40b18f
  40b151:	stos   BYTE PTR es:[edi],al
  40b152:	mov    eax,ds:0xe9ac8d97
  40b157:	dec    ebx
  40b158:	sub    al,0xaa
  40b15a:	ret    0x5fde
  40b15d:	ret    
  40b15e:	xchg   esp,eax
  40b15f:	inc    eax
  40b160:	push   edi
  40b161:	add    al,0x7c
  40b163:	mov    fs,WORD PTR [ebp-0x69]
  40b166:	sbb    al,0x7
  40b168:	neg    BYTE PTR [edx+0x5a53ed9c]
  40b16e:	cmp    BYTE PTR [eax-0x1d],al
  40b171:	xchg   ebx,eax
  40b172:	add    al,0xd
  40b174:	stc    
  40b175:	clc    
  40b176:	das    
  40b177:	adc    eax,0x94a494a6
  40b17c:	pop    edi
  40b17d:	sbb    al,0xa6
  40b17f:	es (bad) 
  40b182:	pop    ebp
  40b183:	sbb    al,0x42
  40b185:	adc    al,dh
  40b187:	stos   DWORD PTR es:[edi],eax
  40b188:	xchg   BYTE PTR [ecx-0x49f0078b],cl
  40b18e:	or     eax,0x41abce
  40b193:	and    DWORD PTR ds:0x415115,ecx
  40b199:	jmp    0x40b27e
  40b19e:	mov    ebp,0xc5aa0686
  40b1a3:	stos   BYTE PTR es:[edi],al
  40b1a4:	popa   
  40b1a5:	jns    0x40b1e6
  40b1a7:	in     eax,dx
  40b1a8:	(bad)  
  40b1a9:	mov    ah,0x17
  40b1ab:	nop
  40b1ac:	outs   dx,DWORD PTR ds:[esi]
  40b1ad:	xchg   DWORD PTR [ecx],eax
  40b1af:	cmp    al,0x7e
  40b1b1:	jle    0x40b169
  40b1b3:	jle    0x40b233
  40b1b5:	jle    0x40b1df
  40b1b7:	mov    BYTE PTR [ecx],ah
  40b1b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1ba:	and    eax,0x547ceb70
  40b1bf:	fwait
  40b1c0:	mov    DWORD PTR [esi+0x3d1f8fda],edi
  40b1c6:	call   0x3db5:0x41eca239
  40b1cd:	jmp    0x40b18a
  40b1cf:	sbb    ebx,DWORD PTR ds:0xcf0fd037
  40b1d5:	loop   0x40b189
  40b1d7:	and    eax,0x57e6a0fa
  40b1dc:	mov    ?,esp
  40b1de:	loope  0x40b23c
  40b1e0:	scas   eax,DWORD PTR es:[edi]
  40b1e1:	sbb    al,0xf7
  40b1e3:	push   ecx
  40b1e4:	add    esp,ecx
  40b1e6:	dec    ebx
  40b1e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1e8:	rcr    BYTE PTR [eax+edx*4+0xd9e6ca0],1
  40b1ef:	outs   dx,DWORD PTR ds:[esi]
  40b1f0:	pop    ds
  40b1f1:	outs   dx,DWORD PTR ds:[esi]
  40b1f2:	sub    eax,0xfe7eac5e
  40b1f7:	xlat   BYTE PTR ds:[ebx]
  40b1f8:	daa    
  40b1f9:	sar    BYTE PTR [ebx+0x41],1
  40b1fc:	adc    eax,0x26edeb59
  40b201:	push   esi
  40b202:	lds    ebx,FWORD PTR [ebx-0x31067811]
  40b208:	push   edi
  40b209:	stc    
  40b20a:	rcr    BYTE PTR [esi],1
  40b20c:	jns    0x40b226
  40b20e:	loope  0x40b25a
  40b210:	cmp    BYTE PTR [edi],0xc7
  40b213:	xchg   ebp,eax
  40b214:	ins    DWORD PTR es:[edi],dx
  40b215:	stos   DWORD PTR es:[edi],eax
  40b216:	repnz aas 
  40b218:	lds    esp,FWORD PTR [ebx-0x13d02e2]
  40b21e:	xchg   edi,eax
  40b21f:	leave  
  40b220:	or     esp,DWORD PTR [edx]
  40b222:	cmp    dh,BYTE PTR [esi-0x795d0045]
  40b228:	pop    edi
  40b229:	push   ss
  40b22a:	lods   al,BYTE PTR ds:[esi]
  40b22c:	aas    
  40b22d:	or     dh,BYTE PTR [edx]
  40b22f:	push   ebp
  40b230:	push   cs
  40b231:	mov    fs,WORD PTR [ebx+0xbe88400]
  40b237:	or     al,0x80
  40b239:	pop    ebp
  40b23a:	or     al,0x7
  40b23c:	xchg   esp,eax
  40b23d:	(bad)  
  40b23e:	cmc    
  40b23f:	xchg   bp,ax
  40b241:	das    
  40b242:	mov    esi,0x6577ba4d
  40b247:	xor    BYTE PTR [edi],al
  40b249:	cmp    cl,BYTE PTR [edx+0x200e1b20]
  40b24f:	les    esi,FWORD PTR [ebp-0x3f]
  40b252:	aaa    
  40b253:	ins    DWORD PTR es:[edi],dx
  40b254:	cmp    DWORD PTR [esi+0x729b8da1],ebx
  40b25a:	pusha  
  40b25b:	jmp    0x40b293
  40b25d:	xchg   ebp,eax
  40b25e:	(bad)  
  40b25f:	fisttp DWORD PTR [edi+0x48]
  40b262:	ret    
  40b263:	or     eax,DWORD PTR [eax]
  40b265:	stc    
  40b266:	(bad)  
  40b267:	jle    0x40b2ce
  40b269:	int3   
  40b26a:	mov    edi,DWORD PTR [ecx-0xb98b5e7]
  40b270:	dec    edi
  40b271:	leave  
  40b272:	pop    ebp
  40b273:	icebp  
  40b274:	jmp    0xc46eb804
  40b279:	cs std 
  40b27b:	pop    ebx
  40b27c:	and    bl,BYTE PTR [edx-0x7e17b275]
  40b282:	sub    eax,0x4150fd
  40b287:	fisubr DWORD PTR [ebx-0x37ccffbf]
  40b28d:	xor    edi,edi
  40b28f:	or     DWORD PTR ds:0x41236c,edi
  40b295:	add    ecx,ebx
  40b297:	not    eax
  40b299:	mov    DWORD PTR [ebp-0x20],ecx
  40b29c:	mov    eax,DWORD PTR [ebp-0x20]
  40b29f:	je     0x40bb71
  40b2a5:	mov    eax,ds:0x415105
  40b2aa:	xor    DWORD PTR ds:0x412354,eax
  40b2b0:	mov    eax,DWORD PTR [ebp-0x4]
  40b2b3:	xor    eax,0x7510859
  40b2b8:	and    DWORD PTR ds:0x4245ae,0x412358
  40b2c2:	add    eax,ebx
  40b2c4:	mov    DWORD PTR ds:0x4245ae,0x20c7
  40b2ce:	cmp    edi,eax
  40b2d0:	jmp    0x40b3b5
  40b2d5:	push   edi
  40b2d6:	pop    es
  40b2d7:	popf   
  40b2d8:	aam    0x6d
  40b2da:	fs push edi
  40b2dc:	test   DWORD PTR [edx+0x1ae65a33],edx
  40b2e2:	jl     0x40b35f
  40b2e4:	bound  ebx,QWORD PTR [ecx+0x3c]
  40b2e7:	jle    0x40b367
  40b2e9:	mov    dh,0x7e
  40b2eb:	jle    0x40b36b
  40b2ed:	add    al,0x59
  40b2ef:	xchg   ebx,eax
  40b2f0:	fwait
  40b2f1:	nop
  40b2f2:	cld    
  40b2f3:	and    al,0xdf
  40b2f5:	xchg   edi,esp
  40b2f7:	jle    0x40b30c
  40b2f9:	stos   DWORD PTR es:[edi],eax
  40b2fa:	adc    eax,0xc9f3eab2
  40b2ff:	test   al,0x99
  40b301:	pop    eax
  40b302:	fimul  WORD PTR [edi+ecx*2]
  40b305:	call   0x67a8:0x70c03113
  40b30c:	popf   
  40b30d:	or     esp,DWORD PTR [esi-0x252c9f7f]
  40b313:	dec    esi
  40b314:	push   edi
  40b315:	adc    DWORD PTR [ebp+0x667b3cc4],0x46149b9a
  40b31f:	pop    eax
  40b320:	adc    al,0x60
  40b322:	sub    bl,BYTE PTR [ebp+0x62]
  40b325:	push   cs
  40b326:	aad    0xf
  40b328:	pop    es
  40b329:	loopne 0x40b383
  40b32b:	push   0xbe981e03
  40b330:	add    al,0x8
  40b332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b333:	xor    DWORD PTR [edi+0x15],esp
  40b336:	and    bl,BYTE PTR [ecx]
  40b338:	pop    esi
  40b339:	sti    
  40b33a:	cmc    
  40b33b:	call   0x8ca80575
  40b340:	xchg   esp,eax
  40b341:	xchg   ebx,eax
  40b342:	xchg   edi,eax
  40b343:	outs   dx,DWORD PTR ds:[esi]
  40b344:	pop    edx
  40b345:	jmp    0x5b9e894d
  40b34a:	aam    0x7
  40b34c:	aam    0xb6
  40b34e:	mov    dl,0xa0
  40b350:	mov    bl,0x3a
  40b352:	fistp  QWORD PTR [edx]
  40b354:	jmp    0xe9f6:0xdbe90729
  40b35b:	enter  0x53f1,0x38
  40b35f:	imul   esi,ecx,0xfa37101b
  40b365:	adc    eax,0x9b4db871
  40b36a:	adc    BYTE PTR [edx],bl
  40b36c:	cmp    ebx,DWORD PTR [ecx-0x491c10dc]
  40b372:	out    dx,al
  40b373:	mov    al,0x2f
  40b375:	inc    ecx
  40b376:	jbe    0x40b3b1
  40b378:	or     BYTE PTR [edx+edi*1-0x33],dl
  40b37c:	jo     0x40b3ad
  40b37e:	ja     0x40b34f
  40b380:	icebp  
  40b381:	stc    
  40b382:	inc    edx
  40b383:	adc    ebx,DWORD PTR [esi-0x44]
  40b386:	dec    edx
  40b387:	scas   eax,DWORD PTR es:[edi]
  40b388:	dec    ebp
  40b389:	xor    DWORD PTR [ecx],edi
  40b38b:	push   0x2e
  40b38d:	xlat   BYTE PTR ds:[ebx]
  40b38e:	sbb    al,0x1b
  40b390:	icebp  
  40b391:	sub    bh,ch
  40b393:	mov    cs,WORD PTR [esi+0x38054323]
  40b399:	inc    ebp
  40b39a:	shl    DWORD PTR [esi-0x3d48086d],1
  40b3a0:	hlt    
  40b3a1:	sub    ah,cl
  40b3a3:	mov    dh,0xfe
  40b3a5:	mov    eax,ds:0x8537079
  40b3aa:	outs   dx,DWORD PTR ds:[esi]
  40b3ab:	cmp    BYTE PTR [eax],dl
  40b3ad:	test   DWORD PTR [esi],0xa56d9d32
  40b3b3:	fnstcw WORD PTR [ecx+0x58f850f]
  40b3b9:	add    BYTE PTR [eax],al
  40b3bb:	push   DWORD PTR [ebp+0x8]
  40b3be:	mov    DWORD PTR ds:0x41abe2,0x7935
  40b3c8:	call   0x40a5e1
  40b3cd:	and    DWORD PTR ds:0x41237c,0x0
  40b3d7:	jmp    0x40b3eb
  40b3dc:	xor    ecx,ecx
  40b3de:	add    ecx,DWORD PTR ds:0x41237c
  40b3e4:	inc    ecx
  40b3e5:	mov    DWORD PTR ds:0x41237c,ecx
  40b3eb:	cmp    DWORD PTR ds:0x41237c,0x18
  40b3f2:	jae    0x40b452
  40b3f8:	cmp    DWORD PTR ds:0x41237c,0x24
  40b3ff:	jne    0x40b40e
  40b405:	push   DWORD PTR [ebp-0x14]
  40b408:	call   DWORD PTR ds:0x40d02c
  40b40e:	jmp    0x40b3dc
  40b413:	mov    DWORD PTR ds:0x415101,0x17
  40b41d:	cmp    DWORD PTR ds:0x415101,0x0
  40b424:	je     0x40b452
  40b42a:	cmp    DWORD PTR ds:0x415101,0x1d
  40b431:	jne    0x40b440
  40b437:	push   DWORD PTR [ebp-0xc]
  40b43a:	call   DWORD PTR ds:0x40d3a4
  40b440:	mov    esi,DWORD PTR ds:0x415101
  40b446:	dec    esi
  40b447:	mov    DWORD PTR ds:0x415101,esi
  40b44d:	jmp    0x40b41d
  40b452:	mov    DWORD PTR [ebp-0x20],eax
  40b455:	and    DWORD PTR ds:0x4245c2,0x0
  40b45f:	mov    eax,ds:0x4245c2
  40b464:	inc    eax
  40b465:	mov    ds:0x4245c2,eax
  40b46a:	cmp    DWORD PTR ds:0x4245c2,0x6
  40b471:	jne    0x40b485
  40b477:	push   DWORD PTR [ebp-0x10]
  40b47a:	push   0x41ad5b
  40b47f:	call   DWORD PTR ds:0x40d20c
  40b485:	cmp    DWORD PTR ds:0x4245c2,0x5
  40b48c:	jne    0x40b4a0
  40b492:	xor    eax,eax
  40b494:	or     eax,DWORD PTR ds:0x4245c2
  40b49a:	inc    eax
  40b49b:	mov    ds:0x4245c2,eax
  40b4a0:	cmp    DWORD PTR ds:0x4245c2,0x15
  40b4a7:	jb     0x40b45f
  40b4ad:	mov    DWORD PTR ds:0x41abca,0x15
  40b4b7:	cmp    DWORD PTR ds:0x41abca,0x0
  40b4be:	je     0x40b50b
  40b4c4:	cmp    DWORD PTR ds:0x41abca,0x22
  40b4cb:	jne    0x40b4f1
  40b4d1:	push   DWORD PTR [ebp-0x14]
  40b4d4:	push   DWORD PTR [ebp-0xc]
  40b4d7:	push   DWORD PTR [ebp-0x18]
  40b4da:	push   DWORD PTR [ebp-0x14]
  40b4dd:	push   DWORD PTR [ebp-0x1c]
  40b4e0:	push   DWORD PTR [ebp-0x1c]
  40b4e3:	push   0x15ca
  40b4e8:	push   DWORD PTR [ebp-0x28]
  40b4eb:	call   DWORD PTR ds:0x40d030
  40b4f1:	xor    ecx,ecx
  40b4f3:	or     ecx,DWORD PTR ds:0x41abca
  40b4f9:	dec    ecx
  40b4fa:	mov    DWORD PTR ds:0x41abca,ecx
  40b500:	jmp    0x40b4b7
  40b505:	sbb    DWORD PTR ds:0x41abd6,edi
  40b50b:	mov    eax,DWORD PTR [ebp-0x4]
  40b50e:	mov    ecx,DWORD PTR [ebp-0x20]
  40b511:	not    esi
  40b513:	mov    esi,0x7510859
  40b518:	xor    eax,esi
  40b51a:	sub    DWORD PTR ds:0x4245b6,0x7cc8
  40b524:	add    eax,ebx
  40b526:	cmp    ecx,eax
  40b528:	jmp    0x40b60d
  40b52d:	add    edi,ebx
  40b52f:	or     al,0xde
  40b531:	in     al,0xe9
  40b533:	loope  0x40b530
  40b535:	js     0x40b579
  40b537:	dec    ebp
  40b538:	inc    edi
  40b539:	scas   eax,DWORD PTR es:[edi]
  40b53a:	aad    0x9b
  40b53c:	cwde   
  40b53d:	xchg   ecx,eax
  40b53e:	cmp    eax,0x7eb67e7e
  40b543:	jle    0x40b5c3
  40b545:	and    BYTE PTR [edx-0x6d1ddb80],bl
  40b54b:	xor    BYTE PTR [eax+0x0],cl
  40b54e:	pop    ds
  40b54f:	aas    
  40b550:	cmp    al,BYTE PTR [esp+esi*1-0x6075d615]
  40b557:	mov    ah,0x97
  40b559:	gs sub al,0x75
  40b55c:	loopne 0x40b54b
  40b55e:	mov    ds:0xec3c3b60,al
  40b563:	and    eax,0x679a4d1c
  40b568:	dec    ebp
  40b569:	pushf  
  40b56a:	cmp    bl,BYTE PTR [edi-0x423efc94]
  40b570:	add    al,0x7
  40b572:	sbb    al,0x11
  40b574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b575:	repz fisubr DWORD PTR [esp+esi*8+0x60]
  40b57a:	test   BYTE PTR [edi-0x57],cl
  40b57d:	pop    ebp
  40b57e:	and    eax,0x96f2a192
  40b583:	cmp    eax,0x7b7066f2
  40b588:	mov    ch,0x98
  40b58a:	inc    esp
  40b58b:	dec    ebx
  40b58c:	jecxz  0x40b51b
  40b58e:	and    eax,0x6ef5d327
  40b593:	(bad)  
  40b594:	aas    
  40b595:	(bad)  
  40b596:	cmp    ch,BYTE PTR [esi]
  40b598:	lods   eax,DWORD PTR ds:[esi]
  40b599:	sub    ch,bl
  40b59b:	call   FWORD PTR es:[ebp+0x7e8f9f31]
  40b5a2:	retf   
  40b5a3:	jg     0x40b599
  40b5a5:	jp     0x40b5b6
  40b5a7:	icebp  
  40b5a8:	or     esi,DWORD PTR [eax]
  40b5aa:	cmp    BYTE PTR [esi],0x35
  40b5ad:	lods   eax,DWORD PTR ds:[esi]
  40b5ae:	cwde   
  40b5af:	jo     0x40b53c
  40b5b1:	fdiv   DWORD PTR [edi]
  40b5b3:	fdivr  DWORD PTR [edx+0xc826c55]
  40b5b9:	mov    ds:0x1226bf33,eax
  40b5be:	mov    ds:0xd8ea3725,eax
  40b5c3:	arpl   WORD PTR [edx],sp
  40b5c5:	adc    eax,0x294cb7c3
  40b5ca:	into   
  40b5cb:	pop    ds
  40b5cc:	mov    DWORD PTR [edx+0x618fafdf],esp
  40b5d2:	dec    ecx
  40b5d3:	sub    eax,DWORD PTR [edx]
  40b5d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5d6:	repz pushf 
  40b5d8:	outs   dx,BYTE PTR ds:[esi]
  40b5d9:	mov    edi,ebp
  40b5db:	jmp    0xea29:0xd2b2cf0a
  40b5e2:	data16 mov fs,WORD PTR [ebx+0xac97e09]
  40b5e9:	popf   
  40b5ea:	lds    ebx,FWORD PTR [ecx]
  40b5ec:	out    dx,al
  40b5ed:	jmp    0x252b:0xd9948fd6
  40b5f4:	jmp    DWORD PTR [esi+esi*1]
  40b5f7:	dec    esi
  40b5f8:	cwde   
  40b5f9:	inc    esi
  40b5fa:	sti    
  40b5fb:	shr    BYTE PTR [esp+edi*2+0x5ff631fb],0xa5
  40b603:	sbb    al,0xf8
  40b605:	fld    DWORD PTR [eax+0x1]
  40b608:	pop    esi
  40b609:	shl    DWORD PTR [eax],0x57
  40b60c:	dec    BYTE PTR [edi]
  40b60e:	test   BYTE PTR [edx+0x5],al
  40b611:	add    BYTE PTR [eax],al
  40b613:	sbb    DWORD PTR ds:0x415115,0x412368
  40b61d:	push   DWORD PTR [ebp-0x20]
  40b620:	jmp    0x40b705
  40b625:	sti    
  40b626:	loopne 0x40b67d
  40b628:	lock push ebp
  40b62a:	cdq    
  40b62b:	sti    
  40b62c:	jns    0x40b666
  40b62e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b62f:	pop    ecx
  40b630:	out    0xa3,al
  40b632:	repz rol DWORD PTR [ebx+0x7e7e32e9],0xb6
  40b63a:	jle    0x40b6ba
  40b63c:	jle    0x40b5eb
  40b63e:	and    al,0xd1
  40b640:	adc    dh,BYTE PTR [ecx*4+0x285befea]
  40b647:	push   esi
  40b648:	adc    al,0x41
  40b64a:	mov    esp,0xc12a68f5
  40b64f:	arpl   WORD PTR [esp+ecx*8+0x51],dx
  40b653:	lods   eax,DWORD PTR ds:[esi]
  40b654:	xchg   BYTE PTR [ebx],dl
  40b656:	xchg   edi,eax
  40b657:	scas   al,BYTE PTR es:[edi]
  40b658:	xlat   BYTE PTR ds:[ebx]
  40b659:	pusha  
  40b65a:	mov    WORD PTR [ecx+0x37],?
  40b65d:	ret    
  40b65e:	ds adc edx,esp
  40b661:	dec    ebx
  40b662:	ret    
  40b663:	push   0x19
  40b665:	js     0x40b5f8
  40b667:	pop    DWORD PTR [eax+0x8]
  40b66a:	mov    al,ds:0x3e82ad18
  40b66f:	inc    ebx
  40b670:	shl    BYTE PTR [edx],1
  40b672:	loopne 0x40b66d
  40b674:	adc    DWORD PTR [esi+0x6513740d],0xffffffdf
  40b67b:	rcr    BYTE PTR [eax],0xf3
  40b67e:	cwde   
  40b67f:	add    ecx,DWORD PTR [esi+edx*4]
  40b682:	int3   
  40b683:	imul   esp,DWORD PTR [edx],0x18b27aef
  40b689:	ret    0x887f
  40b68c:	xor    cl,ch
  40b68e:	je     0x40b66d
  40b690:	cdq    
  40b691:	mov    ds:0x3ef802d5,al
  40b696:	dec    edx
  40b697:	ins    DWORD PTR es:[edi],dx
  40b698:	or     eax,0x7cf473a8
  40b69d:	(bad)  [ebp+0x2a]
  40b6a0:	dec    esi
  40b6a1:	mov    esi,0xe9a0b337
  40b6a6:	cli    
  40b6a7:	stos   BYTE PTR es:[edi],al
  40b6a8:	jnp    0x40b707
  40b6aa:	(bad)  
  40b6ab:	xor    ah,BYTE PTR [edi-0x49c3896f]
  40b6b1:	dec    esp
  40b6b2:	inc    ecx
  40b6b3:	sbb    DWORD PTR [esi+0x1bf6ee77],esi
  40b6b9:	adc    DWORD PTR [esi+0x5d03bcfd],edi
  40b6bf:	popw   ss
  40b6c1:	lahf   
  40b6c2:	sbb    eax,DWORD PTR [ecx]
  40b6c4:	inc    ebp
  40b6c5:	sbb    edx,esi
  40b6c7:	sub    al,0x8b
  40b6c9:	data16 stos BYTE PTR es:[edi],al
  40b6cb:	dec    eax
  40b6cc:	out    dx,eax
  40b6cd:	xor    eax,0xeeedc53b
  40b6d2:	ret    
  40b6d3:	xchg   edi,eax
  40b6d4:	xor    BYTE PTR [edi+0xe],bh
  40b6d7:	or     al,0xb3
  40b6d9:	and    ecx,DWORD PTR [esi+edx*2]
  40b6dc:	lea    esi,[edi+0x6d]
  40b6df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6e0:	stc    
  40b6e1:	cmp    ebx,edi
  40b6e3:	or     ah,BYTE PTR [ebx+0x4c]
  40b6e6:	mov    bl,0x33
  40b6e8:	sub    DWORD PTR [edi+0x395612d9],esp
  40b6ee:	pushf  
  40b6ef:	test   DWORD PTR [ebp+0x1b4246c4],esp
  40b6f5:	in     al,0xcb
  40b6f7:	es xchg esp,eax
  40b6f9:	jg     0x40b6ea
  40b6fb:	into   
  40b6fc:	jno    0x40b6e0
  40b6fe:	ins    BYTE PTR es:[edi],dx
  40b6ff:	xor    ebx,DWORD PTR [ecx]
  40b701:	out    dx,al
  40b702:	repnz xor eax,0x875ff44
  40b708:	call   0x40a6ca
  40b70d:	or     DWORD PTR ds:0x41abde,edi
  40b713:	mov    DWORD PTR [ebp-0x14],eax
  40b716:	mov    eax,DWORD PTR [ebp-0x4]
  40b719:	adc    ecx,DWORD PTR ds:0x412370
  40b71f:	mov    ecx,DWORD PTR [ebp-0x14]
  40b722:	adc    DWORD PTR ds:0x4245ba,0x45e4
  40b72c:	xor    eax,esi
  40b72e:	add    eax,ebx
  40b730:	mov    DWORD PTR ds:0x415111,0x202e
  40b73a:	cmp    ecx,eax
  40b73c:	mov    DWORD PTR ds:0x412364,0x4412
  40b746:	je     0x40bb55
  40b74c:	and    DWORD PTR ds:0x417e49,0x0
  40b756:	mov    eax,ds:0x417e49
  40b75b:	inc    eax
  40b75c:	mov    ds:0x417e49,eax
  40b761:	cmp    DWORD PTR ds:0x417e49,0x22
  40b768:	jne    0x40b798
  40b76e:	push   0x415115
  40b773:	push   0x2bf6
  40b778:	push   DWORD PTR [ebp-0x14]
  40b77b:	push   0x415111
  40b780:	push   DWORD PTR [ebp-0x10]
  40b783:	push   0x41adfd
  40b788:	push   0x4def
  40b78d:	push   0x3000
  40b792:	call   DWORD PTR ds:0x40d210
  40b798:	cmp    DWORD PTR ds:0x417e49,0x12
  40b79f:	jb     0x40b756
  40b7a5:	mov    eax,DWORD PTR [ebp-0x14]
  40b7a8:	mov    eax,DWORD PTR [eax+0x18]
  40b7ab:	movzx  ecx,BYTE PTR ds:0x417e4d
  40b7b2:	sbb    DWORD PTR ds:0x41237c,ecx
  40b7b8:	mov    DWORD PTR [ebp-0x20],eax
  40b7bb:	xor    eax,eax
  40b7bd:	or     eax,DWORD PTR ds:0x412390
  40b7c3:	xor    ecx,ecx
  40b7c5:	xor    ecx,DWORD PTR ds:0x417eaa
  40b7cb:	sub    ecx,eax
  40b7cd:	sub    eax,DWORD PTR [eax+ecx*1]
  40b7d0:	mov    eax,DWORD PTR [ebp-0x14]
  40b7d3:	sub    DWORD PTR ds:0x4245b6,0x1830
  40b7dd:	mov    ecx,DWORD PTR [ebp+0x8]
  40b7e0:	add    DWORD PTR ds:0x41235c,0x415101
  40b7ea:	add    ecx,DWORD PTR [eax+0x20]
  40b7ed:	mov    DWORD PTR [ebp-0x28],ecx
  40b7f0:	mov    DWORD PTR ds:0x417e59,0x1f
  40b7fa:	cmp    DWORD PTR ds:0x417e59,0x0
  40b801:	je     0x40b84b
  40b807:	cmp    DWORD PTR ds:0x417e59,0xf
  40b80e:	jne    0x40b823
  40b814:	push   DWORD PTR [ebp-0x1c]
  40b817:	push   DWORD PTR [ebp-0x10]
  40b81a:	push   DWORD PTR [ebp-0x28]
  40b81d:	call   DWORD PTR ds:0x40d034
  40b823:	cmp    DWORD PTR ds:0x417e59,0x10
  40b82a:	jne    0x40b83b
  40b830:	mov    eax,ds:0x417e59
  40b835:	dec    eax
  40b836:	mov    ds:0x417e59,eax
  40b83b:	mov    eax,ds:0x417e59
  40b840:	dec    eax
  40b841:	mov    ds:0x417e59,eax
  40b846:	jmp    0x40b7fa
  40b84b:	mov    eax,DWORD PTR [ebp-0x14]
  40b84e:	mov    ecx,DWORD PTR [ebp+0x8]
  40b851:	add    ecx,DWORD PTR [eax+0x24]
  40b854:	jmp    0x40b939
  40b859:	mov    ch,0x76
  40b85b:	or     DWORD PTR [ecx+ecx*2+0x59],eax
  40b85f:	pop    ecx
  40b860:	pop    es
  40b861:	aas    
  40b862:	mov    edx,0xb81e23e6
  40b867:	jl     0x40b8cf
  40b869:	and    DWORD PTR [ebx],esi
  40b86b:	jle    0x40b8eb
  40b86d:	mov    dh,0x7e
  40b86f:	jle    0x40b8ef
  40b871:	cmp    BYTE PTR [edi],bl
  40b873:	jne    0x40b8b2
  40b875:	rol    DWORD PTR ds:0x2a56b81,0x3e
  40b87c:	jbe    0x40b8c0
  40b87e:	mov    ds:0x3e27d1e1,eax
  40b883:	sti    
  40b884:	ins    BYTE PTR es:[edi],dx
  40b885:	and    dl,dh
  40b887:	push   ebp
  40b888:	or     edx,0xffffffc8
  40b88b:	or     cl,BYTE PTR [esi]
  40b88d:	rcl    ecx,0x20
  40b890:	out    dx,eax
  40b891:	sub    eax,0x15247a74
  40b896:	fisttp WORD PTR [ebx]
  40b898:	aad    0x87
  40b89a:	mov    esi,es
  40b89c:	pop    esp
  40b89d:	(bad)  
  40b89e:	jmp    0x3d652379
  40b8a3:	repnz test DWORD PTR [edi+0x19df622e],eax
  40b8aa:	sahf   
  40b8ab:	cmc    
  40b8ac:	aam    0x57
  40b8ae:	ret    
  40b8af:	dec    edx
  40b8b0:	jp     0x40b8f6
  40b8b2:	adc    BYTE PTR ds:0xe0917798,bh
  40b8b8:	bound  edx,QWORD PTR [edi-0x4189487]
  40b8be:	bnd js 0x40b888
  40b8c1:	out    0xea,eax
  40b8c3:	xchg   ch,bl
  40b8c5:	add    eax,esp
  40b8c7:	inc    esi
  40b8c8:	fsubr  DWORD PTR [edx]
  40b8ca:	cmp    bh,bh
  40b8cc:	outs   dx,BYTE PTR ds:[esi]
  40b8cd:	xchg   ebx,eax
  40b8ce:	adc    bl,BYTE PTR es:[ebx-0xdd7176e]
  40b8d5:	or     al,0x7
  40b8d7:	sub    ebp,DWORD PTR [ecx]
  40b8d9:	cmp    BYTE PTR [eax+0x4e],dl
  40b8dc:	pop    ecx
  40b8dd:	repz mov WORD PTR [eax],es
  40b8e0:	retf   0x604f
  40b8e3:	adc    DWORD PTR [ebp+eax*4+0x60],edx
  40b8e7:	push   edx
  40b8e8:	pop    ds
  40b8e9:	push   ds
  40b8ea:	jle    0x40b92f
  40b8ec:	das    
  40b8ed:	std    
  40b8ee:	mov    esp,0xb26e0eb1
  40b8f3:	xor    dl,bh
  40b8f5:	xchg   ebx,eax
  40b8f6:	or     BYTE PTR [edi],bl
  40b8f8:	aam    0x6d
  40b8fa:	fild   QWORD PTR ds:0xbb2dcf91
  40b900:	mov    dh,0xf
  40b902:	mov    al,ds:0x64a01a59
  40b907:	pop    es
  40b908:	fs inc edx
  40b90a:	bnd jmp 0x40b893
  40b90d:	pop    esp
  40b90e:	aam    0x11
  40b910:	xchg   ecx,eax
  40b911:	inc    esp
  40b912:	in     al,0x24
  40b914:	cmp    eax,0xf878b4
  40b919:	pop    ebx
  40b91a:	jno    0x40b991
  40b91c:	cmp    al,0x40
  40b91e:	dec    ebx
  40b91f:	jge    0x40b8c6
  40b921:	aas    
  40b922:	into   
  40b923:	or     BYTE PTR [ebx],cl
  40b925:	add    ebx,DWORD PTR [esp+edi*2]
  40b928:	into   
  40b929:	ds ds jno 0x40b90d
  40b92d:	and    DWORD PTR [eax+0x4d],esi
  40b930:	xor    eax,0xa8330ff0
  40b935:	or     DWORD PTR [edx-0x27],ebx
  40b938:	test   DWORD PTR [ecx+0x458bd44d],0x84d8bec
  40b942:	add    ecx,DWORD PTR [eax+0x1c]
  40b945:	xor    esi,esi
  40b947:	mov    DWORD PTR [ebp-0x14],ecx
  40b94a:	mov    eax,DWORD PTR [ebp-0x28]
  40b94d:	mov    ecx,DWORD PTR [ebp+0x8]
  40b950:	add    ecx,DWORD PTR [eax+edi*4]
  40b953:	jmp    0x40ba38
  40b958:	pop    ss
  40b959:	pusha  
  40b95a:	pop    esp
  40b95b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b95c:	jns    0x40b916
  40b95e:	out    0x61,eax
  40b960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b961:	push   ds
  40b962:	jg     0x40b96d
  40b964:	fbld   TBYTE PTR [ebx]
  40b966:	fld    QWORD PTR [ecx+0x79]
  40b969:	xor    edi,DWORD PTR [esi+0x7e]
  40b96c:	mov    dh,0x7e
  40b96e:	jle    0x40b9ee
  40b970:	stc    
  40b971:	test   BYTE PTR [ecx+0x5b],0xa2
  40b975:	push   cs
  40b976:	add    esi,DWORD PTR [esi+eiz*4-0x30]
  40b97a:	fcomp  DWORD PTR [ecx]
  40b97c:	cdq    
  40b97d:	iret   
  40b97e:	and    al,0xc7
  40b980:	sar    DWORD PTR [ecx-0x8],1
  40b983:	jne    0x40b92b
  40b985:	fisub  DWORD PTR [eax-0x61ec786c]
  40b98b:	xor    esp,DWORD PTR [edx+0x2a]
  40b98e:	lahf   
  40b98f:	jb     0x40b914
  40b991:	lods   eax,DWORD PTR ds:[esi]
  40b992:	adc    ah,BYTE PTR [ecx-0x3d]
  40b995:	retf   
  40b996:	pop    edx
  40b997:	es mov esp,0x58556c75
  40b99d:	mov    esi,0x2f2c5c0
  40b9a2:	sbb    esp,edi
  40b9a4:	(bad)  
  40b9a5:	adc    BYTE PTR [ecx+0x31],cl
  40b9a8:	repnz jmp FWORD PTR [esi-0x52]
  40b9ac:	cmc    
  40b9ad:	or     ah,0xab
  40b9b0:	mov    bh,0xf4
  40b9b2:	cmc    
  40b9b3:	mov    cl,0x48
  40b9b5:	out    dx,eax
  40b9b6:	xlat   BYTE PTR ds:[ebx]
  40b9b7:	sbb    BYTE PTR [esi-0x25d5ddf6],dh
  40b9bd:	lds    esi,FWORD PTR [ecx]
  40b9bf:	lea    ecx,[esi]
  40b9c1:	shl    DWORD PTR [edi-0x13],cl
  40b9c4:	push   ebx
  40b9c5:	pop    ss
  40b9c6:	mov    ds:0x5c7753d9,al
  40b9cb:	aad    0x6b
  40b9cd:	dec    esi
  40b9ce:	dec    edx
  40b9cf:	repz mov esp,0x95b0cb46
  40b9d5:	scas   al,BYTE PTR es:[edi]
  40b9d6:	pop    es
  40b9d7:	push   0x764847e6
  40b9dc:	cli    
  40b9dd:	in     al,0x5c
  40b9df:	stos   DWORD PTR es:[edi],eax
  40b9e0:	sub    BYTE PTR [eax+0x56],dl
  40b9e3:	shl    BYTE PTR [edx],1
  40b9e5:	dec    esi
  40b9e6:	cs stc 
  40b9e8:	(bad)  
  40b9e9:	les    ebx,FWORD PTR [ebx+0x2e]
  40b9ec:	mov    bh,BYTE PTR [esi-0x6a]
  40b9ef:	mov    eax,0x60d59301
  40b9f4:	test   BYTE PTR [esi+0x51f32558],al
  40b9fa:	cwde   
  40b9fb:	enter  0xd96,0x2c
  40b9ff:	fcmovb st,st(2)
  40ba01:	data16 mov ah,0x67
  40ba04:	xor    eax,0x6a55c4f3
  40ba09:	outs   dx,BYTE PTR ds:[esi]
  40ba0a:	fsubrp st(7),st
  40ba0c:	pop    eax
  40ba0d:	push   edi
  40ba0e:	cld    
  40ba0f:	mov    dl,0x91
  40ba11:	je     0x40b9b7
  40ba13:	and    BYTE PTR [ebx*2+0x4cbfba9b],dl
  40ba1a:	retf   0xac44
  40ba1d:	mov    edi,0x9f067e81
  40ba22:	lock gs (bad) 
  40ba25:	test   eax,0x54c5553e
  40ba2a:	mul    bl
  40ba2c:	rol    BYTE PTR [ebp-0x53833f82],1
  40ba32:	in     eax,dx
  40ba33:	mov    bl,0x3a
  40ba35:	sbb    DWORD PTR [ebx-0x7ba72b7],ebx
  40ba3b:	mov    DWORD PTR [ebp-0x30],ecx
  40ba3e:	push   eax
  40ba3f:	push   DWORD PTR [ebp-0x30]
  40ba42:	push   DWORD PTR [ebp+0xc]
  40ba45:	call   0x408325
  40ba4a:	mov    eax,DWORD PTR [ebp-0x4]
  40ba4d:	mov    ecx,DWORD PTR [ebp-0x8]
  40ba50:	xor    eax,0x7510859
  40ba55:	add    eax,ebx
  40ba57:	cmp    ecx,eax
  40ba59:	jne    0x40bb61
  40ba5f:	mov    eax,DWORD PTR [ebp-0x20]
  40ba62:	jmp    0x40bb47
  40ba67:	test   BYTE PTR [ebx+0x5b],al
  40ba6a:	scas   al,BYTE PTR es:[edi]
  40ba6b:	pop    ecx
  40ba6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba6d:	jns    0x40bae8
  40ba6f:	and    BYTE PTR [ebx+0x63],cl
  40ba72:	lock fidivr WORD PTR [ebx+0x6]
  40ba76:	xor    dh,BYTE PTR [ecx-0x498181d0]
  40ba7c:	jle    0x40bafc
  40ba7e:	jle    0x40ba81
  40ba80:	loopne 0x40bafd
  40ba82:	push   es
  40ba83:	in     al,dx
  40ba84:	cdq    
  40ba85:	scas   eax,DWORD PTR es:[edi]
  40ba86:	xchg   DWORD PTR [esi+0x63],esi
  40ba89:	pop    edi
  40ba8a:	sub    BYTE PTR [ebx-0x41],ch
  40ba8d:	int    0xc9
  40ba8f:	and    al,0x80
  40ba91:	dec    ebp
  40ba92:	mov    bh,0x15
  40ba94:	je     0x40ba66
  40ba96:	mov    esi,0x20dbc2e3
  40ba9b:	lods   eax,DWORD PTR ds:[esi]
  40ba9c:	dec    eax
  40ba9d:	iret   
  40ba9e:	push   esp
  40ba9f:	(bad)  
  40baa0:	scas   eax,DWORD PTR es:[edi]
  40baa1:	daa    
  40baa2:	or     ah,BYTE PTR [esi-0x4f77c712]
  40baa8:	ficom  DWORD PTR [ecx+0x66]
  40baab:	ins    DWORD PTR es:[edi],dx
  40baac:	xchg   ebp,eax
  40baad:	mov    al,ds:0xb91ff9e1
  40bab2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bab3:	pop    ss
  40bab4:	xchg   esp,eax
  40bab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bab6:	rol    edx,cl
  40bab8:	sub    al,0xc0
  40baba:	jle    0x40bb14
  40babc:	dec    ecx
  40babd:	dec    ebx
  40babe:	sbb    BYTE PTR [edi+0x16aafbee],ah
  40bac4:	fbld   TBYTE PTR [edx+eiz*8-0x4a]
  40bac8:	dec    esi
  40bac9:	push   es
  40baca:	popa   
  40bacb:	sar    BYTE PTR [edx],0xa7
  40bace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bacf:	mov    eax,0xc29a053a
  40bad4:	stc    
  40bad5:	neg    esp
  40bad7:	jnp    0x40baa9
  40bad9:	sbb    BYTE PTR [edi],cl
  40badb:	and    BYTE PTR [ecx+0x18],dl
  40bade:	adc    BYTE PTR [esi+0x28af40dd],bl
  40bae4:	add    cl,BYTE PTR [edx+0x2a73387c]
  40baea:	fstp   DWORD PTR [ebx]
  40baec:	and    ah,BYTE PTR [eax+0x4492cae9]
  40baf2:	mov    edx,0xc0ab68ec
  40baf7:	dec    ecx
  40baf8:	je     0x40ba97
  40bafa:	mov    ebp,0x813ff16a
  40baff:	fcom   DWORD PTR [edi+ebx*8-0x5b9d2649]
  40bb06:	stc    
  40bb07:	adc    DWORD PTR [ebp-0x76],0x85b70a93
  40bb0e:	dec    edi
  40bb0f:	and    al,BYTE PTR [edx+0x2170d4fb]
  40bb15:	pop    ds
  40bb16:	test   DWORD PTR [eax+0x50],ebp
  40bb19:	je     0x40bacb
  40bb1b:	adc    al,0x49
  40bb1d:	push   eax
  40bb1e:	push   es
  40bb1f:	inc    ecx
  40bb20:	das    
  40bb21:	lock pop esp
  40bb23:	xchg   esi,eax
  40bb24:	push   eax
  40bb25:	mov    ch,0xec
  40bb27:	fsub   QWORD PTR [edx]
  40bb29:	and    eax,0xf706f710
  40bb2e:	sub    esp,DWORD PTR [edi+ebp*4]
  40bb31:	dec    edx
  40bb32:	pop    eax
  40bb33:	pop    esp
  40bb34:	imul   esi,DWORD PTR [eax-0x798895a3],0x1c296d79
  40bb3e:	add    cl,al
  40bb40:	arpl   WORD PTR [ebx-0x22dd71e8],di
  40bb46:	or     eax,DWORD PTR [edi+0x3b]
  40bb49:	clc    
  40bb4a:	jb     0x40b2a5
  40bb50:	jmp    0x40bb71
  40bb55:	mov    eax,DWORD PTR [ebp-0x4]
  40bb58:	xor    eax,esi
  40bb5a:	add    eax,ebx
  40bb5c:	jmp    0x40c696
  40bb61:	mov    eax,DWORD PTR [ebp-0x2c]
  40bb64:	movzx  eax,WORD PTR [eax+edi*2]
  40bb68:	mov    ecx,DWORD PTR [ebp-0x14]
  40bb6b:	mov    eax,DWORD PTR [ecx+eax*4]
  40bb6e:	mov    DWORD PTR [ebp+0xc],eax
  40bb71:	mov    eax,DWORD PTR [ebp-0x4]
  40bb74:	mov    ecx,DWORD PTR [ebp-0x8]
  40bb77:	xor    eax,0x7510859
  40bb7c:	add    eax,ebx
  40bb7e:	cmp    ecx,eax
  40bb80:	jne    0x40bb93
  40bb86:	mov    eax,DWORD PTR [ebp-0x4]
  40bb89:	xor    eax,0x7510859
  40bb8e:	jmp    0x40bb5a
  40bb93:	mov    eax,DWORD PTR [ebp+0xc]
  40bb96:	add    eax,DWORD PTR [ebp+0x8]
  40bb99:	mov    DWORD PTR [ebp-0x10],eax
  40bb9c:	mov    eax,DWORD PTR [ebp-0x1c]
  40bb9f:	test   eax,eax
  40bba1:	je     0x40c2b4
  40bba7:	mov    DWORD PTR [ebp-0x24],esi
  40bbaa:	push   0xb
  40bbac:	pop    ecx
  40bbad:	push   0x5
  40bbaf:	dec    ecx
  40bbb0:	jmp    0x40bc95
  40bbb5:	pop    ss
  40bbb6:	imul   dh
  40bbb8:	mov    bl,0x6f
  40bbba:	jnp    0x40bb77
  40bbbc:	push   0xffffffce
  40bbbe:	pop    ecx
  40bbbf:	and    esi,ebx
  40bbc1:	and    eax,0x897a0fa7
  40bbc6:	xor    DWORD PTR [esi+0x7e],edi
  40bbc9:	mov    dh,0x7e
  40bbcb:	jle    0x40bc4b
  40bbcd:	shl    eax,cl
  40bbcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbd0:	sub    eax,0x99a7debd
  40bbd5:	jmp    0xe7ecef8e
  40bbda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbdb:	cdq    
  40bbdc:	mov    eax,ds:0x1f5b1c3f
  40bbe1:	cli    
  40bbe2:	push   ds
  40bbe3:	adc    al,0x33
  40bbe5:	iret   
  40bbe6:	cs repnz push 0xe5d8333c
  40bbed:	jge    0x40bc4a
  40bbef:	(bad)  
  40bbf0:	mov    dh,0xee
  40bbf2:	test   al,0xef
  40bbf4:	push   edx
  40bbf5:	cmp    al,0x96
  40bbf7:	repnz dec edi
  40bbf9:	pop    edx
  40bbfa:	jbe    0x40bc6d
  40bbfc:	sub    DWORD PTR [eax+0x33c600ef],ebp
  40bc02:	add    eax,0xccf8322e
  40bc07:	ins    DWORD PTR es:[edi],dx
  40bc08:	fisub  DWORD PTR [ebx+0x65098eae]
  40bc0e:	out    dx,eax
  40bc0f:	mov    cl,0x67
  40bc11:	fistp  QWORD PTR [eax]
  40bc13:	rcl    DWORD PTR [edi+0x76],0x3f
  40bc17:	mov    eax,0xd29f21d3
  40bc1c:	stos   WORD PTR es:[edi],ax
  40bc1e:	js     0x40bbf6
  40bc20:	sbb    edi,edx
  40bc22:	sub    al,0xb3
  40bc24:	xor    ebp,0x78234e55
  40bc2a:	fcmovb st,st(1)
  40bc2c:	xchg   esp,eax
  40bc2d:	jno    0x40bc6f
  40bc2f:	inc    edx
  40bc30:	stos   DWORD PTR es:[edi],eax
  40bc31:	(bad)  
  40bc32:	mov    si,0x5d3f
  40bc36:	or     BYTE PTR [esi-0x4c],0x54
  40bc3a:	fldenv [eax-0x4d]
  40bc3d:	in     eax,dx
  40bc3e:	pushf  
  40bc3f:	and    al,0xa8
  40bc41:	nop
  40bc42:	and    ah,BYTE PTR [ebx]
  40bc44:	fst    st(2)
  40bc46:	mov    WORD PTR [edx+0x4a],ss
  40bc49:	std    
  40bc4a:	nop
  40bc4b:	int    0x70
  40bc4d:	ret    
  40bc4e:	fild   DWORD PTR [edi]
  40bc50:	imul   esi,DWORD PTR [edi+ebx*4],0x5b118520
  40bc57:	and    BYTE PTR [edi-0xe],cl
  40bc5a:	sub    DWORD PTR [edi],ebx
  40bc5c:	xchg   esp,eax
  40bc5d:	stos   BYTE PTR es:[edi],al
  40bc5e:	adc    BYTE PTR [eax+0x7cde3ced],dh
  40bc64:	aaa    
  40bc65:	inc    esi
  40bc66:	mov    esi,0x65cc5a31
  40bc6b:	dec    eax
  40bc6c:	pop    ebp
  40bc6d:	in     al,0xe8
  40bc6f:	cmp    al,BYTE PTR [ebp+0x33ce47a8]
  40bc75:	mov    esi,?
  40bc77:	int3   
  40bc78:	inc    edx
  40bc79:	or     al,BYTE PTR [edi+0x1bcbf52a]
  40bc7f:	out    dx,eax
  40bc80:	test   al,0xb1
  40bc82:	or     BYTE PTR [esi],bl
  40bc84:	(bad)  
  40bc85:	mov    edi,ss
  40bc87:	cld    
  40bc88:	jge    0x40bcca
  40bc8a:	inc    esp
  40bc8b:	xchg   edx,eax
  40bc8c:	mov    al,BYTE PTR [ebx+0x5b30a0e1]
  40bc92:	jle    0x40bc52
  40bc94:	xchg   esi,eax
  40bc95:	pop    ebx
  40bc96:	xchg   ebx,ecx
  40bc98:	sub    ebx,ecx
  40bc9a:	xchg   ebx,ecx
  40bc9c:	dec    ecx
  40bc9d:	mov    eax,DWORD PTR [ebp-0x1c]
  40bca0:	imul   eax,ecx
  40bca3:	sub    esp,eax
  40bca5:	mov    DWORD PTR [ebp-0x24],esp
  40bca8:	mov    eax,DWORD PTR [ebp-0x4]
  40bcab:	mov    ecx,0x7510859
  40bcb0:	jmp    0x40bd95
  40bcb5:	xchg   edi,eax
  40bcb6:	adc    DWORD PTR [ecx+eax*2+0x78],0x79
  40bcbb:	mov    ebx,0xdff72d79
  40bcc0:	ins    DWORD PTR es:[edi],dx
  40bcc1:	jge    0x40bd0e
  40bcc3:	mov    bl,0x2b
  40bcc5:	shl    DWORD PTR [esi],0x7e
  40bcc8:	jle    0x40bc80
  40bcca:	jle    0x40bd4a
  40bccc:	jle    0x40bcdd
  40bcce:	sbb    al,0x64
  40bcd0:	dec    edi
  40bcd1:	push   ecx
  40bcd2:	outs   dx,DWORD PTR ds:[esi]
  40bcd3:	fild   QWORD PTR [eax]
  40bcd5:	imul   eax,edi,0x4ffc3e1f
  40bcdb:	inc    edx
  40bcdc:	fstp   st(5)
  40bcde:	js     0x40bd0d
  40bce0:	or     BYTE PTR [ecx-0x11],cl
  40bce3:	loop   0x40bcf7
  40bce5:	rcr    BYTE PTR [ecx],cl
  40bce7:	out    dx,eax
  40bce8:	imul   ebp,DWORD PTR [eax-0x10],0x11
  40bcec:	xor    eax,0x6cf91e2e
  40bcf1:	stc    
  40bcf2:	sbb    DWORD PTR [ecx],ebx
  40bcf4:	aaa    
  40bcf5:	(bad)  
  40bcf6:	cmc    
  40bcf7:	ret    
  40bcf8:	sub    bh,bh
  40bcfa:	das    
  40bcfb:	mov    al,ds:0x62e74559
  40bd00:	ins    DWORD PTR es:[edi],dx
  40bd01:	inc    esp
  40bd02:	pop    ss
  40bd03:	mov    edx,ebx
  40bd05:	mov    dl,0x8b
  40bd07:	or     bh,dh
  40bd09:	nop
  40bd0a:	sub    DWORD PTR [esi],ecx
  40bd0c:	jg     0x40bd2f
  40bd0e:	mov    ecx,0x10d5d851
  40bd13:	repz popf 
  40bd15:	jns    0x40bd5a
  40bd17:	mov    bl,0xe2
  40bd19:	fsub   QWORD PTR [ebp+0x59]
  40bd1c:	inc    edi
  40bd1d:	leave  
  40bd1e:	or     eax,0x4d2c2e13
  40bd23:	xchg   edx,eax
  40bd24:	loop   0x40bd5c
  40bd26:	pop    ss
  40bd27:	retf   
  40bd28:	clc    
  40bd29:	sbb    dh,BYTE PTR [ebp+eax*8-0x726bf6d6]
  40bd30:	repnz dec ecx
  40bd32:	test   edi,ebp
  40bd34:	sub    ebp,edi
  40bd36:	sub    eax,0x7dcccb79
  40bd3b:	jmp    0x40bcd9
  40bd3d:	or     edx,esp
  40bd3f:	cmc    
  40bd40:	aas    
  40bd41:	repz mov ecx,0xb77ee853
  40bd47:	pop    esp
  40bd48:	in     al,0x4
  40bd4a:	mov    edx,0x83652889
  40bd4f:	test   eax,0x206f2c69
  40bd54:	jbe    0x40bd12
  40bd56:	fistp  WORD PTR ds:0x83e10b71
  40bd5c:	jecxz  0x40bce6
  40bd5e:	(bad)  
  40bd60:	jno    0x40bd31
  40bd62:	icebp  
  40bd63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd64:	outs   dx,DWORD PTR ds:[esi]
  40bd65:	fimul  DWORD PTR [edi]
  40bd67:	or     ebx,esp
  40bd69:	shl    DWORD PTR [edx+0x5208b9c3],1
  40bd6f:	cmp    edi,DWORD PTR [eax-0x45253b7c]
  40bd75:	fwait
  40bd76:	dec    esi
  40bd77:	and    ebx,ebx
  40bd79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd7a:	xchg   esp,eax
  40bd7b:	ins    BYTE PTR es:[edi],dx
  40bd7c:	(bad)  
  40bd7d:	sbb    al,0x9a
  40bd7f:	fbstp  TBYTE PTR [ebp-0x2e]
  40bd82:	inc    DWORD PTR [edi+ecx*1-0x41]
  40bd86:	mov    edi,0xb4f28ec0
  40bd8b:	cwde   
  40bd8c:	jbe    0x40bd62
  40bd8e:	pop    es
  40bd8f:	js     0x40bd45
  40bd91:	cli    
  40bd92:	and    al,0xe6
  40bd94:	ds xor eax,ecx
  40bd97:	mov    edx,0x32729f
  40bd9c:	add    eax,edx
  40bd9e:	mov    DWORD PTR [ebp+0x8],eax
  40bda1:	mov    eax,DWORD PTR [ebp-0x18]
  40bda4:	xor    eax,ecx
  40bda6:	add    eax,edx
  40bda8:	mov    edx,DWORD PTR [ebp+0x14]
  40bdab:	jmp    0x40be90
  40bdb0:	dec    DWORD PTR [ebx-0x47d6c7ef]
  40bdb6:	xchg   DWORD PTR [ecx-0x43979b07],edi
  40bdbc:	aam    0x87
  40bdbe:	mov    BYTE PTR [edi],ah
  40bdc0:	sbb    DWORD PTR [edi],esi
  40bdc2:	jle    0x40be42
  40bdc4:	mov    dh,0x7e
  40bdc6:	jle    0x40be46
  40bdc8:	sti    
  40bdc9:	clc    
  40bdca:	jb     0x40bd6a
  40bdcc:	gs jae 0x40bd4f
  40bdcf:	loope  0x40bd6f
  40bdd1:	adc    esp,ecx
  40bdd3:	outs   dx,BYTE PTR ds:[esi]
  40bdd4:	fs mov esi,0x294d78e6
  40bdda:	push   edi
  40bddb:	mov    ds:0x4b9f479,al
  40bde0:	xor    BYTE PTR [eax+eax*8],ch
  40bde3:	pop    esi
  40bde4:	nop
  40bde5:	add    ah,cl
  40bde7:	scas   eax,DWORD PTR es:[edi]
  40bde8:	mov    eax,ds:0xa05b7ccd
  40bded:	scas   al,BYTE PTR es:[edi]
  40bdee:	sbb    eax,0x2ec5715b
  40bdf3:	js     0x40be43
  40bdf5:	js     0x40bdb1
  40bdf7:	aad    0xb8
  40bdf9:	std    
  40bdfa:	stc    
  40bdfb:	repz jmp 0x640e:0x36476f0f
  40be03:	pusha  
  40be04:	push   edx
  40be05:	call   0x7c318f53
  40be0a:	repnz push ecx
  40be0c:	push   cs
  40be0d:	sbb    ah,BYTE PTR gs:[edx+0x64]
  40be11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be12:	pop    edx
  40be13:	pop    esi
  40be14:	aaa    
  40be15:	pop    ebx
  40be16:	mov    bl,0xf3
  40be18:	in     eax,dx
  40be19:	adc    edx,0xffffffa5
  40be1c:	mov    esp,0xb1997f5e
  40be21:	inc    bl
  40be23:	inc    edi
  40be24:	inc    esp
  40be25:	call   0xc80b:0x50d2aad2
  40be2c:	sub    eax,0xd127689e
  40be31:	inc    esp
  40be32:	add    al,0xf3
  40be34:	leave  
  40be35:	add    dh,ch
  40be37:	sar    BYTE PTR [eax+0x74],1
  40be3a:	into   
  40be3b:	sbb    esp,DWORD PTR ss:[ebp-0x726f813]
  40be42:	retf   0x3ef8
  40be45:	adc    DWORD PTR [edi+0x2b],eax
  40be48:	iret   
  40be49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be4a:	gs xor al,0x28
  40be4d:	pop    es
  40be4e:	pop    ds
  40be4f:	enter  0xcfc2,0x13
  40be53:	loopne 0x40be7a
  40be55:	ja     0x40bed0
  40be57:	mov    BYTE PTR [edx-0x20],ch
  40be5a:	(bad)  
  40be5b:	pop    ebp
  40be5c:	getsec 
  40be5e:	ins    DWORD PTR es:[edi],dx
  40be5f:	sbb    esp,DWORD PTR [ebp+0x70]
  40be62:	cli    
  40be63:	xor    dh,al
  40be65:	stc    
  40be66:	mov    cl,0xeb
  40be68:	ret    0x180b
  40be6b:	xchg   esp,eax
  40be6c:	ss cmp al,0x1c
  40be6f:	adc    BYTE PTR [eax+0x6ec98315],0xb1
  40be76:	jnp    0x40be46
  40be78:	cmp    al,BYTE PTR [edi+eiz*8+0x25]
  40be7c:	sbb    BYTE PTR [esi-0xd],0x82
  40be80:	pusha  
  40be81:	inc    edi
  40be82:	aad    0x7c
  40be84:	add    dl,dl
  40be86:	cmc    
  40be87:	ins    BYTE PTR es:[edi],dx
  40be88:	mov    ebp,0x42324ab5
  40be8d:	ja     0x40be41
  40be8f:	inc    eax
  40be90:	imul   eax,DWORD PTR [edx]
  40be93:	jmp    0x40bf78
  40be98:	inc    ebp
  40be99:	loop   0x40be83
  40be9b:	xchg   edi,eax
  40be9c:	imul   esp,DWORD PTR [ebp-0x36f31fa7],0xa6e17640
  40bea6:	(bad)  
  40bea7:	outs   dx,BYTE PTR ds:[esi]
  40bea8:	push   ecx
  40bea9:	aaa    
  40beaa:	jle    0x40bf2a
  40beac:	mov    dh,0x7e
  40beae:	jle    0x40bf2e
  40beb0:	pushf  
  40beb1:	mov    edi,0xfe4793d2
  40beb6:	jae    0x40bec3
  40beb8:	cdq    
  40beb9:	in     eax,0x40
  40bebb:	mov    edx,0x6291938a
  40bec0:	jp     0x40bed5
  40bec2:	fwait
  40bec3:	and    DWORD PTR [edx+0x70],ebx
  40bec6:	test   al,0xfb
  40bec8:	mov    dl,0xda
  40beca:	stc    
  40becb:	pop    ds
  40becc:	popf   
  40becd:	cli    
  40bece:	and    ch,BYTE PTR [esi-0x596a3fae]
  40bed4:	lea    ebp,[esi+0x7110662d]
  40beda:	add    al,0x87
  40bedc:	fbld   TBYTE PTR [ebx-0x6e]
  40bedf:	push   edx
  40bee0:	cmp    eax,0x80298cc2
  40bee5:	int    0x50
  40bee7:	mov    ch,0xa9
  40bee9:	pop    ds
  40beea:	xor    DWORD PTR [ecx-0x54],ebx
  40beed:	dec    edi
  40beee:	pop    eax
  40beef:	add    BYTE PTR [edi],ch
  40bef1:	mov    eax,ds:0xc7a8079
  40bef6:	mov    bh,0x52
  40bef8:	sub    al,0x27
  40befa:	or     al,0x11
  40befc:	mov    BYTE PTR [edx-0xd],bl
  40beff:	xor    DWORD PTR [eax+0x686e556e],esi
  40bf05:	inc    edi
  40bf06:	jg     0x40bf31
  40bf08:	rcr    BYTE PTR [esi],1
  40bf0a:	sub    ebx,ebp
  40bf0c:	push   ebx
  40bf0d:	or     BYTE PTR [edx+0xb],cl
  40bf10:	je     0x40bebb
  40bf12:	mov    ebx,0x6557be3a
  40bf17:	push   edi
  40bf18:	dec    edx
  40bf19:	dec    ebx
  40bf1a:	or     cl,cl
  40bf1c:	xchg   DWORD PTR [eax-0x1c87974d],edx
  40bf22:	lods   eax,DWORD PTR ds:[esi]
  40bf23:	cmp    ch,BYTE PTR ds:0x41366bbd
  40bf29:	mov    ds:0x4312bc32,eax
  40bf2e:	call   0x71308f63
  40bf33:	mov    esi,DWORD PTR [ebp+ebp*8-0x1866178a]
  40bf3a:	xor    dl,0xa9
  40bf3d:	fstp   QWORD PTR [ebp-0x39a0ddac]
  40bf43:	mov    dl,0x8e
  40bf45:	mov    ebx,0xa3592c5e
  40bf4a:	dec    ebx
  40bf4b:	dec    edx
  40bf4c:	fcom   DWORD PTR [edi+0x618afdec]
  40bf52:	mov    dl,0xb7
  40bf54:	les    ebx,FWORD PTR [eax+0x5022ec92]
  40bf5a:	push   edi
  40bf5b:	stos   BYTE PTR es:[edi],al
  40bf5c:	mov    ?,eax
  40bf5e:	lock xchg edx,eax
  40bf60:	(bad)  
  40bf61:	shr    BYTE PTR [edi-0x44],1
  40bf64:	pop    esp
  40bf65:	popa   
  40bf66:	add    dh,dl
  40bf68:	xor    dh,BYTE PTR [edi]
  40bf6a:	push   edi
  40bf6b:	mov    bl,0xa
  40bf6d:	xor    al,0xb1
  40bf6f:	mov    ds,WORD PTR [edi+0x71272d40]
  40bf75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf76:	sahf   
  40bf77:	push   0xffffff8b
  40bf79:	push   ebp
  40bf7a:	cld    
  40bf7b:	xor    edx,ecx
  40bf7d:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf80:	lea    ecx,[edx+ecx*1+0x32729f]
  40bf87:	cmp    ecx,eax
  40bf89:	je     0x40c1ca
  40bf8f:	mov    edi,DWORD PTR [ebp-0x18]
  40bf92:	mov    eax,DWORD PTR [ebp+0x8]
  40bf95:	mov    edx,DWORD PTR [ebp+0x14]
  40bf98:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40bf9c:	jmp    0x40c081
  40bfa1:	pop    ss
  40bfa2:	sub    al,0x93
  40bfa4:	sub    edi,DWORD PTR [ecx+0x192097b9]
  40bfaa:	jne    0x40bf81
  40bfac:	stos   BYTE PTR es:[edi],al
  40bfad:	push   esp
  40bfae:	popa   
  40bfaf:	sahf   
  40bfb0:	jmp    0x7ebef45e
  40bfb5:	mov    dh,0x7e
  40bfb7:	jle    0x40c037
  40bfb9:	test   eax,0x91930c96
  40bfbe:	push   0x7c
  40bfc0:	sbb    BYTE PTR [ebx+0x46d1a7d3],bl
  40bfc6:	aaa    
  40bfc7:	ja     0x40bfdc
  40bfc9:	cmp    esi,esp
  40bfcb:	push   esi
  40bfcc:	add    bl,BYTE PTR [ecx+edx*8+0x5a]
  40bfd0:	retf   
  40bfd1:	sti    
  40bfd2:	jae    0x40c02a
  40bfd4:	lock and al,0x90
  40bfd7:	jecxz  0x40bf68
  40bfd9:	push   edi
  40bfda:	stc    
  40bfdb:	ret    
  40bfdc:	(bad)
  40bfdf:	jmp    0xf7d0975d
  40bfe4:	inc    edx
  40bfe5:	(bad)
  40bfe9:	push   eax
  40bfea:	push   eax
  40bfeb:	and    al,0xd3
  40bfed:	adc    BYTE PTR [esi],bh
  40bfef:	xor    al,0xa2
  40bff1:	into   
  40bff2:	loope  0x40bffa
  40bff4:	pop    ebx
  40bff5:	rcpps  xmm6,XMMWORD PTR [eax]
  40bff8:	or     al,0x24
  40bffa:	sbb    BYTE PTR [ecx+edx*4],dh
  40bffd:	xchg   BYTE PTR [eax],dl
  40bfff:	dec    ebx
  40c000:	adc    edx,DWORD PTR [edi+0x3f]
  40c003:	sbb    BYTE PTR [edx],0xb5
  40c006:	dec    esp
  40c007:	dec    eax
  40c008:	enter  0xbe25,0x7a
  40c00c:	push   edi
  40c00d:	imul   eax,DWORD PTR [ebx-0x7e],0x18650345
  40c014:	xchg   ebp,eax
  40c015:	mov    bl,ch
  40c017:	fwait
  40c018:	mov    BYTE PTR [edi+0x47],al
  40c01b:	add    DWORD PTR ds:0x1da631fd,ebp
  40c021:	(bad)  
  40c022:	ficomp WORD PTR [ebx-0x38]
  40c025:	popf   
  40c026:	fdivr  QWORD PTR [edi-0x67358a3e]
  40c02c:	sbb    ebp,ebp
  40c02e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c02f:	jns    0x40bfd3
  40c031:	inc    edx
  40c032:	not    bh
  40c034:	and    al,0xf0
  40c036:	cmp    ah,BYTE PTR [ebx+0xf]
  40c039:	mov    edx,0x2e1edb03
  40c03e:	(bad)  
  40c03f:	fld    DWORD PTR [ecx-0x3ea9d5fb]
  40c045:	mov    dh,0x82
  40c047:	lea    eax,[esi+0x17f67d4a]
  40c04d:	(bad)  
  40c04e:	or     BYTE PTR [edx+edx*1+0x25540d4b],0xba
  40c056:	call   0x7cd9:0xa2e7b302
  40c05d:	push   ds
  40c05e:	(bad)  
  40c05f:	stos   BYTE PTR es:[edi],al
  40c060:	jge    0x40c022
  40c062:	in     eax,dx
  40c063:	dec    edx
  40c064:	mov    esi,0x1bd38799
  40c069:	cmp    eax,0x98c19d56
  40c06e:	and    BYTE PTR [eax-0x1],dl
  40c071:	dec    esp
  40c072:	xor    DWORD PTR [eax-0x499d2a87],edi
  40c078:	sub    al,0xd1
  40c07a:	fld    QWORD PTR [eax]
  40c07c:	(bad)  
  40c07d:	popa   
  40c07e:	dec    ebx
  40c07f:	out    0x9a,eax
  40c081:	mov    ecx,0x7510859
  40c086:	xor    edx,edx
  40c088:	xor    edi,ecx
  40c08a:	mov    esi,0x32729f
  40c08f:	add    edi,esi
  40c091:	div    edi
  40c093:	mov    edx,DWORD PTR [ebp-0x4]
  40c096:	xor    edx,ecx
  40c098:	lea    eax,[edx+eax*1+0x32729f]
  40c09f:	mov    edx,DWORD PTR [ebp+0x8]
  40c0a2:	mov    edi,DWORD PTR [ebp-0x24]
  40c0a5:	mov    DWORD PTR [edi+edx*4],eax
  40c0a8:	mov    eax,DWORD PTR [ebp-0x18]
  40c0ab:	mov    edx,DWORD PTR [ebp+0x8]
  40c0ae:	xor    eax,ecx
  40c0b0:	lea    eax,[eax+edx*1+0x32729f]
  40c0b7:	mov    DWORD PTR [ebp+0x8],eax
  40c0ba:	mov    eax,DWORD PTR [ebp-0x18]
  40c0bd:	mov    edx,DWORD PTR [ebp+0x14]
  40c0c0:	xor    eax,ecx
  40c0c2:	add    eax,esi
  40c0c4:	imul   eax,DWORD PTR [edx]
  40c0c7:	mov    edx,DWORD PTR [ebp-0x4]
  40c0ca:	xor    edx,ecx
  40c0cc:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0cf:	jmp    0x40c1b4
  40c0d4:	mov    ebx,0x61b1c335
  40c0d9:	pop    ecx
  40c0da:	mov    ecx,0x5c6a2de5
  40c0df:	xchg   edi,eax
  40c0e0:	out    dx,eax
  40c0e1:	(bad)  
  40c0e2:	jg     0x40c064
  40c0e4:	loope  0x40c11b
  40c0e6:	jle    0x40c166
  40c0e8:	mov    dh,0x7e
  40c0ea:	jle    0x40c16a
  40c0ec:	addr16 add cl,bl
  40c0ef:	and    eax,0x681d025e
  40c0f4:	push   0x70
  40c0f6:	sbb    al,0xdb
  40c0f8:	mov    ds:0xc9a23e6,al
  40c0fd:	test   eax,0x44e58ca2
  40c102:	popa   
  40c103:	pop    es
  40c104:	xor    bl,dl
  40c106:	push   ss
  40c107:	lds    ebx,FWORD PTR [edi-0x70b059fe]
  40c10d:	cmp    al,0xb8
  40c10f:	and    BYTE PTR [edx-0x3f75f034],bh
  40c115:	dec    esi
  40c116:	pop    ebx
  40c117:	fs ja  0x40c0f1
  40c11a:	sti    
  40c11b:	pusha  
  40c11c:	inc    ecx
  40c11d:	call   0xa1938154
  40c122:	mov    eax,DWORD PTR [ebx]
  40c124:	sbb    esp,ecx
  40c126:	pop    esi
  40c127:	in     eax,dx
  40c128:	push   ss
  40c129:	nop
  40c12a:	dec    esp
  40c12b:	std    
  40c12c:	and    eax,0x42a7f5e4
  40c131:	es mov cl,0x26
  40c134:	lahf   
  40c135:	dec    DWORD PTR [ebx-0x35]
  40c138:	pop    edi
  40c139:	mov    ebx,ebx
  40c13b:	test   al,0x44
  40c13d:	add    ch,BYTE PTR [eax-0x4d4cd995]
  40c143:	stos   BYTE PTR es:[edi],al
  40c144:	stos   DWORD PTR es:[edi],eax
  40c145:	cwde   
  40c146:	in     al,0x45
  40c148:	int    0xfe
  40c14a:	or     BYTE PTR [esi+0x3203e10c],0x5d
  40c151:	xor    ch,BYTE PTR [esp+ebp*1+0x0]
  40c155:	mov    cl,0x7b
  40c157:	lea    ebp,[ecx]
  40c159:	xchg   ecx,eax
  40c15a:	push   ss
  40c15b:	lock arpl WORD PTR [esi+0x7530e95f],si
  40c162:	xor    ch,bh
  40c164:	pop    ss
  40c165:	add    BYTE PTR [eax],bh
  40c167:	cmp    dh,BYTE PTR ds:0x33b0b732
  40c16d:	(bad)  
  40c16e:	ret    
  40c16f:	xchg   edi,eax
  40c170:	mov    WORD PTR [eax+0x29abd150],cs
  40c176:	clc    
  40c177:	push   ss
  40c178:	xchg   ecx,eax
  40c179:	sbb    eax,0xe4f9430b
  40c17e:	and    ax,WORD PTR [ebp+0xd125f91]
  40c185:	icebp  
  40c186:	xor    BYTE PTR [ecx+0x5703a0a2],dh
  40c18c:	sbb    edx,DWORD PTR [ebx]
  40c18e:	sbb    DWORD PTR [esi+0xc255c3a],ebp
  40c194:	js     0x40c163
  40c196:	cwde   
  40c197:	cdq    
  40c198:	push   edi
  40c199:	sub    bh,cl
  40c19b:	push   esp
  40c19c:	retf   
  40c19d:	xchg   ecx,eax
  40c19e:	jno    0x40c1fa
  40c1a0:	je     0x40c1ea
  40c1a2:	jbe    0x40c1e5
  40c1a4:	sbb    BYTE PTR [ebx+0x45f41a48],cl
  40c1aa:	cld    
  40c1ab:	mov    WORD PTR [ebp-0x67b5da53],fs
  40c1b1:	pusha  
  40c1b2:	add    BYTE PTR [eax-0x73],0x8c
  40c1b6:	or     bl,BYTE PTR [edi+0x3b003272]
  40c1bc:	enter  0x850f,0xcc
  40c1c0:	std    
  40c1c1:	(bad)  
  40c1c2:	dec    DWORD PTR [ebx+0xeae9de]
  40c1c8:	add    BYTE PTR [eax],al
  40c1ca:	mov    ebx,0x32729f
  40c1cf:	jmp    0x40c2b4
  40c1d4:	mov    al,0x75
  40c1d6:	or     eax,0x598459f4
  40c1db:	leave  
  40c1dc:	jns    0x40c1f9
  40c1de:	or     ah,BYTE PTR [ecx-0xf248a73]
  40c1e4:	cmp    edx,ecx
  40c1e6:	jle    0x40c266
  40c1e8:	mov    dh,0x7e
  40c1ea:	jle    0x40c26a
  40c1ec:	or     DWORD PTR [ecx-0x40b0dbbf],ebx
  40c1f2:	jae    0x40c211
  40c1f4:	ror    BYTE PTR [edx],1
  40c1f6:	int    0x2c
  40c1f8:	push   0x1d8311c
  40c1fd:	(bad)  
  40c1fe:	jbe    0x40c200
  40c200:	jle    0x40c215
  40c202:	dec    edx
  40c203:	lea    ebx,[edi+0x2654386b]
  40c209:	or     ch,BYTE PTR [ebx+0x25ff6973]
  40c20f:	mov    bl,0x6f
  40c211:	fdiv   DWORD PTR [eax+0x36]
  40c214:	or     bl,0xe5
  40c217:	gs jno 0x40c1aa
  40c21a:	cmp    esp,ebx
  40c21c:	ret    0x16fa
  40c21f:	bnd jl 0x40c20b
  40c222:	or     ah,BYTE PTR [edx-0x60e61673]
  40c228:	dec    esi
  40c229:	mov    esi,0xb96de81
  40c22e:	push   ss
  40c22f:	(bad)  
  40c230:	in     eax,dx
  40c231:	adc    al,0xbd
  40c233:	pop    ds
  40c234:	and    DWORD PTR ds:0x720163f0,0x1a
  40c23b:	push   es
  40c23c:	shl    DWORD PTR [edi],1
  40c23e:	aaa    
  40c23f:	sti    
  40c240:	push   edx
  40c241:	adc    ch,cl
  40c243:	aad    0x2f
  40c245:	popf   
  40c246:	fidiv  WORD PTR [ebx-0x56]
  40c249:	push   ds
  40c24a:	or     DWORD PTR [edi-0x6a],eax
  40c24d:	les    eax,FWORD PTR ds:0xfd0e2f8c
  40c253:	xor    al,0xa3
  40c255:	push   ds
  40c256:	jne    0x40c263
  40c258:	clc    
  40c259:	inc    edi
  40c25a:	dec    esi
  40c25b:	lea    ebx,[esp+eiz*2+0xecfc18c]
  40c262:	fs xchg ecx,eax
  40c264:	push   cs
  40c265:	les    esi,FWORD PTR [ecx]
  40c267:	and    BYTE PTR [ebp-0x39],bl
  40c26a:	aam    0xe
  40c26c:	pop    ebp
  40c26d:	lods   eax,DWORD PTR ds:[esi]
  40c26e:	sub    eax,0x8ed70f60
  40c273:	mov    esp,DWORD PTR [edi]
  40c275:	dec    esi
  40c276:	fs push 0xffffffae
  40c279:	mov    dl,0x69
  40c27b:	add    al,0x68
  40c27d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c27e:	sbb    ebp,DWORD PTR [edi-0x6c224d2f]
  40c284:	out    0x66,eax
  40c286:	stos   BYTE PTR es:[edi],al
  40c287:	mov    edx,0x53753145
  40c28c:	bnd jo 0x40c230
  40c28f:	mov    ch,0xc6
  40c291:	add    eax,0x2889fdd8
  40c296:	cmp    esi,ebp
  40c298:	mov    ah,0x4b
  40c29a:	int    0x65
  40c29c:	es int 0xa8
  40c29f:	or     eax,0x2713e754
  40c2a4:	mov    edx,0x5c1e00ce
  40c2a9:	out    dx,al
  40c2aa:	xlat   BYTE PTR ds:[ebx]
  40c2ab:	jns    0x40c24d
  40c2ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2ae:	repnz xchg edx,eax
  40c2b0:	mov    edx,0x8b709905
  40c2b5:	inc    ebp
  40c2b6:	cld    
  40c2b7:	xor    eax,0x7510859
  40c2bc:	add    eax,ebx
  40c2be:	mov    DWORD PTR [ebp-0xc],eax
  40c2c1:	xor    ebx,ebx
  40c2c3:	lea    eax,[ebp-0x10]
  40c2c6:	add    ebx,DWORD PTR [eax]
  40c2c8:	jmp    0x40c3ad
  40c2cd:	sbb    al,0xbe
  40c2cf:	cmp    al,0xc2
  40c2d1:	pop    esp
  40c2d2:	inc    eax
  40c2d3:	and    BYTE PTR [eax+0x3b],ah
  40c2d6:	gs xchg edx,ebp
  40c2d9:	mov    fs,ebp
  40c2db:	adc    dl,BYTE PTR ds:0x7e7ecb71
  40c2e1:	mov    dh,0x7e
  40c2e3:	jle    0x40c363
  40c2e5:	jb     0x40c303
  40c2e7:	ins    DWORD PTR es:[edi],dx
  40c2e8:	push   esp
  40c2e9:	pop    edx
  40c2ea:	test   al,0x19
  40c2ec:	and    BYTE PTR [ebx+0x6fc666cb],ah
  40c2f2:	jmp    0x3fd4f775
  40c2f7:	sbb    al,0x8
  40c2f9:	pop    ebp
  40c2fa:	push   ebx
  40c2fb:	lods   al,BYTE PTR ds:[esi]
  40c2fc:	cmp    DWORD PTR [ecx+0x47deb77],0xd06baf35
  40c306:	add    BYTE PTR [ecx],al
  40c308:	repz inc ebp
  40c30a:	fist   DWORD PTR [ebx+0x7b]
  40c30d:	pop    es
  40c30e:	lds    esi,FWORD PTR [ecx]
  40c310:	cs scas ax,WORD PTR es:[edi]
  40c313:	in     eax,dx
  40c314:	pusha  
  40c315:	repz pop ebp
  40c317:	mov    esp,0x535ef4f0
  40c31c:	and    DWORD PTR [edx-0x523a8b2f],edi
  40c322:	mov    eax,0x66691905
  40c327:	adc    al,0x48
  40c329:	mov    al,bl
  40c32b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c32c:	push   eax
  40c32d:	bound  esi,QWORD PTR [eax-0x48]
  40c330:	jle    0x40c367
  40c332:	sub    BYTE PTR [eax-0x11],al
  40c335:	adc    al,0xe2
  40c337:	jmp    0x5144:0x5cc91b0f
  40c33e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c33f:	stc    
  40c340:	fcomp  QWORD PTR [eax]
  40c342:	popa   
  40c343:	or     BYTE PTR [ebx],0xab
  40c346:	jne    0x40c2ef
  40c348:	push   ss
  40c349:	not    cl
  40c34b:	lods   al,BYTE PTR ds:[esi]
  40c34c:	jo     0x40c398
  40c34e:	aaa    
  40c34f:	(bad)  
  40c350:	rcl    BYTE PTR [eax-0x697f11f5],cl
  40c356:	fwait
  40c357:	mov    al,0x4c
  40c359:	lea    edx,[esi+0x5a46fe76]
  40c35f:	inc    esi
  40c360:	popf   
  40c361:	push   0x15
  40c363:	div    dl
  40c365:	adc    BYTE PTR fs:[eax+0x489a46c3],dh
  40c36c:	addr16 das 
  40c36e:	push   ebx
  40c36f:	loopne 0x40c3e3
  40c371:	pop    edx
  40c372:	inc    esi
  40c373:	repz je 0x40c36d
  40c376:	ret    
  40c377:	jp     0x40c3b5
  40c379:	push   cs
  40c37a:	sbb    al,0xca
  40c37c:	not    BYTE PTR [ebx+0x12a60843]
  40c382:	test   al,0xa1
  40c384:	xchg   ebp,eax
  40c385:	lods   eax,DWORD PTR ds:[esi]
  40c386:	test   DWORD PTR [ebx+0x63],0x3af40771
  40c38d:	xchg   edi,eax
  40c38e:	pop    edi
  40c38f:	jl     0x40c3b9
  40c391:	jg     0x40c3e1
  40c393:	inc    esi
  40c394:	cmp    ebp,ebp
  40c396:	ja     0x40c3ea
  40c398:	in     eax,dx
  40c399:	inc    ebp
  40c39a:	inc    edi
  40c39b:	mov    esp,0xa209a94c
  40c3a0:	(bad)  
  40c3a1:	bnd jle 0x40c37d
  40c3a4:	mov    edi,0x9a84a27f
  40c3a9:	mov    bh,0x8e
  40c3ab:	into   
  40c3ac:	sub    edi,edi
  40c3ae:	shl    DWORD PTR [ebx],cl
  40c3b0:	fucomi st,st(1)
  40c3b2:	loopne 0x40c3b4
  40c3b4:	add    BYTE PTR [eax],al
  40c3b6:	popa   
  40c3b7:	jno    0x40c409
  40c3b9:	jnp    0x40c41b
  40c3bb:	jnp    0x40c436
  40c3bd:	or     DWORD PTR ds:0xdb2e5fee,ecx
  40c3c3:	pop    eax
  40c3c4:	sub    cl,BYTE PTR [edi]
  40c3c6:	dec    ecx
  40c3c7:	retf   
  40c3c8:	jle    0x40c448
  40c3ca:	mov    dh,0x7e
  40c3cc:	jle    0x40c44c
  40c3ce:	js     0x40c362
  40c3d0:	outs   dx,DWORD PTR ds:[esi]
  40c3d1:	jae    0x40c394
  40c3d3:	ins    BYTE PTR es:[edi],dx
  40c3d4:	fisttp WORD PTR [esi-0x281c01aa]
  40c3da:	and    BYTE PTR [ebp+ebp*8+0x1c8e0e1c],dh
  40c3e1:	aam    0xc5
  40c3e3:	mov    bl,0xff
  40c3e5:	mov    ecx,0xdaacd027
  40c3ea:	xor    eax,0xac964505
  40c3ef:	sub    DWORD PTR ds:[ebp+edi*8+0x17b95583],esp
  40c3f7:	pop    esp
  40c3f8:	and    eax,0x86bd5b4d
  40c3fd:	push   ebx
  40c3fe:	mov    DWORD PTR [esi+ecx*1],0x38164d76
  40c405:	and    al,0x31
  40c407:	lea    esp,[ebx-0x57]
  40c40a:	aas    
  40c40b:	pop    ecx
  40c40c:	xchg   edi,eax
  40c40d:	push   ss
  40c40e:	sbb    eax,0x488267c9
  40c413:	lock popf 
  40c415:	jno    0x40c490
  40c417:	sub    al,0x2
  40c419:	sbb    eax,0xa0deb1c9
  40c41e:	pop    ebx
  40c41f:	inc    edx
  40c420:	jg     0x40c3c8
  40c422:	arpl   bp,bp
  40c424:	mov    edi,0xdeec570d
  40c429:	push   ebp
  40c42a:	test   al,0x2
  40c42c:	rcr    DWORD PTR [edi-0x40],0xd7
  40c430:	shr    DWORD PTR [esp+edx*1+0x75],0xa
  40c435:	or     eax,0x24af800b
  40c43a:	and    al,0x85
  40c43c:	nop
  40c43d:	cmp    DWORD PTR [esi+0x41644ea],esi
  40c443:	cdq    
  40c444:	repnz or al,0xf4
  40c447:	xchg   ecx,eax
  40c448:	jmp    0xbbec:0xd75fb186
  40c44f:	cmp    BYTE PTR [eax-0x2caa0528],dh
  40c455:	ss sub al,0xbf
  40c458:	fwait
  40c459:	jg     0x40c45e
  40c45b:	add    ch,BYTE PTR [eax+eax*8-0x26]
  40c45f:	mov    edx,0xe770da68
  40c464:	cmp    DWORD PTR [edi-0x6a],ebp
  40c467:	pop    edx
  40c468:	pop    eax
  40c469:	fwait
  40c46a:	inc    ebx
  40c46b:	das    
  40c46c:	loopne 0x40c437
  40c46e:	cdq    
  40c46f:	jg     0x40c44a
  40c471:	repz adc eax,0xee5b93c1
  40c477:	std    
  40c478:	rol    DWORD PTR [edx-0x52],1
  40c47b:	outs   dx,BYTE PTR ds:[esi]
  40c47c:	call   0x11f4:0xf1a73e4
  40c483:	imul   esi,ebp,0x69
  40c486:	jne    0x40c4d4
  40c488:	stos   DWORD PTR es:[edi],eax
  40c489:	outs   dx,DWORD PTR ds:[esi]
  40c48a:	test   DWORD PTR [eax-0x25],edx
  40c48d:	in     eax,dx
  40c48e:	mov    ecx,0x3a3d1d8f
  40c493:	sbb    DWORD PTR [edx+0x32],edx
  40c496:	inc    ebx
  40c497:	cmp    DWORD PTR [ebp+0x10],ebx
  40c49a:	jmp    0x40c57f
  40c49f:	test   al,0xfc
  40c4a1:	xchg   esi,eax
  40c4a2:	push   esi
  40c4a3:	stos   BYTE PTR es:[edi],al
  40c4a4:	push   esp
  40c4a5:	push   0xe4b270b0
  40c4aa:	gs sub al,0x2a
  40c4ad:	adc    eax,ebp
  40c4af:	or     eax,0x7eb67e7e
  40c4b5:	jle    0x40c535
  40c4b7:	or     esi,DWORD PTR [esp+eiz*4+0x1d]
  40c4bb:	hlt    
  40c4bc:	imul   edx,DWORD PTR [esi-0x458d0dff],0xffffffa3
  40c4c3:	mov    bl,BYTE PTR [ecx-0x12]
  40c4c6:	rol    DWORD PTR [edi],1
  40c4c8:	fs int3 
  40c4ca:	xor    cl,BYTE PTR [edx-0x34746281]
  40c4d0:	jp     0x40c485
  40c4d2:	pop    ds
  40c4d3:	mov    cl,0xca
  40c4d5:	cmp    dh,0x32
  40c4d8:	xchg   dh,dh
  40c4da:	or     al,0x48
  40c4dc:	(bad)  
  40c4dd:	mov    ds:0xf7857ef1,eax
  40c4e2:	clc    
  40c4e3:	cmp    BYTE PTR [ebx-0x4a86ac97],0xf4
  40c4ea:	cdq    
  40c4eb:	jne    0x40c529
  40c4ed:	jecxz  0x40c50f
  40c4ef:	jnp    0x40c48e
  40c4f1:	inc    esp
  40c4f2:	mov    esi,gs
  40c4f4:	pop    esp
  40c4f5:	mov    esi,0xf36f3cd9
  40c4fa:	mov    ch,0x93
  40c4fc:	or     eax,0xb1586811
  40c501:	inc    BYTE PTR [esi+0xe]
  40c504:	ins    DWORD PTR es:[edi],dx
  40c505:	into   
  40c506:	dec    dl
  40c508:	mov    WORD PTR [eax+0x7af384e6],?
  40c50e:	sti    
  40c50f:	lahf   
  40c510:	repz pop ecx
  40c512:	mov    esi,0xef223100
  40c517:	cdq    
  40c518:	into   
  40c519:	das    
  40c51a:	inc    esp
  40c51b:	jmp    DWORD PTR [ebp-0x706ba747]
  40c521:	sbb    ah,BYTE PTR [ebx]
  40c523:	sahf   
  40c524:	sbb    DWORD PTR [edx+0x3b5ea8dd],edx
  40c52a:	jae    0x40c50e
  40c52c:	sbb    DWORD PTR [esi],0x3e
  40c52f:	push   ebx
  40c530:	cld    
  40c531:	push   edx
  40c532:	cmp    BYTE PTR [ebp-0x52],dl
  40c535:	cmp    al,dh
  40c537:	pop    edi
  40c538:	cmp    eax,0x1cecb438
  40c53d:	and    BYTE PTR ds:0x21b50358,cl
  40c543:	dec    edi
  40c544:	fadd   st,st(2)
  40c546:	inc    ebx
  40c547:	das    
  40c548:	pop    ss
  40c549:	fst    st(7)
  40c54b:	add    al,0xc2
  40c54d:	out    0xb2,al
  40c54f:	sahf   
  40c550:	loop   0x40c59e
  40c552:	dec    esp
  40c553:	data16 jb 0x40c573
  40c556:	loope  0x40c533
  40c558:	jmp    0xee8f:0x5e6e8ff9
  40c55f:	mov    dl,dh
  40c561:	mov    ch,0xc
  40c563:	shr    DWORD PTR [eax],1
  40c565:	fst    DWORD PTR [esi+0xc]
  40c568:	outs   dx,DWORD PTR ds:[esi]
  40c569:	out    0x6d,eax
  40c56b:	sub    eax,0x927fc412
  40c570:	cmp    al,0x26
  40c572:	or     edi,DWORD PTR [ebx]
  40c574:	sbb    DWORD PTR [ebp-0x5a],0xba9fec82
  40c57b:	call   0xf891e6b
  40c580:	test   ch,bh
  40c582:	add    BYTE PTR [eax],al
  40c584:	add    BYTE PTR [edx+0x6a590a6a],dl
  40c58a:	add    al,0x5b
  40c58c:	inc    ebx
  40c58d:	xchg   ebx,ecx
  40c58f:	sub    ebx,ecx
  40c591:	xchg   ebx,ecx
  40c593:	jmp    0x40c678
  40c598:	xchg   DWORD PTR [eax+0x3d],ebx
  40c59b:	out    0x31,al
  40c59d:	jnp    0x40c544
  40c59f:	jns    0x40c5e7
  40c5a1:	add    al,0x4b
  40c5a3:	call   0x54fb59b5
  40c5a8:	fxch   st(1)
  40c5aa:	jle    0x40c62a
  40c5ac:	mov    dh,0x7e
  40c5ae:	jle    0x40c62e
  40c5b0:	sub    DWORD PTR [ebx+edi*2+0x7c],0xa
  40c5b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5b6:	or     BYTE PTR [ebp+0x56],ah
  40c5b9:	clc    
  40c5ba:	xor    dh,BYTE PTR [ebp-0x677e7011]
  40c5c0:	in     al,0x2e
  40c5c2:	push   edi
  40c5c3:	cwde   
  40c5c4:	cwde   
  40c5c5:	cmc    
  40c5c6:	pusha  
  40c5c7:	push   ss
  40c5c8:	push   ss
  40c5c9:	or     cl,BYTE PTR [eax]
  40c5cb:	mov    dl,BYTE PTR gs:[eax-0xcebb819]
  40c5d2:	push   ebp
  40c5d3:	xlat   BYTE PTR ds:[ebx]
  40c5d4:	push   ebx
  40c5d5:	imul   edi,DWORD PTR [ebx],0x68e86175
  40c5db:	mov    ch,0xde
  40c5dd:	loop   0x40c5ad
  40c5df:	int    0xc4
  40c5e1:	jg     0x40c639
  40c5e3:	adc    al,0x7e
  40c5e5:	mov    ecx,0x910c213f
  40c5ea:	data16 sbb bl,BYTE PTR [esi-0x5b9d9123]
  40c5f1:	dec    edi
  40c5f2:	mov    bh,0x8d
  40c5f4:	sub    BYTE PTR [edi+0x14fb6422],0xd3
  40c5fb:	retf   0x7279
  40c5fe:	in     eax,0x87
  40c600:	test   BYTE PTR [edi],ah
  40c602:	bound  esi,QWORD PTR [ebx]
  40c604:	sub    eax,0x505d9110
  40c609:	inc    ebp
  40c60a:	jns    0x40c635
  40c60c:	pop    eax
  40c60d:	mov    ebp,0x757752ac
  40c612:	arpl   di,ax
  40c614:	add    al,0xd0
  40c616:	enter  0xa0b2,0x14
  40c61a:	push   ss
  40c61b:	sub    esp,DWORD PTR [edi]
  40c61d:	sbb    esp,DWORD PTR [ecx]
  40c61f:	jno    0x40c5d0
  40c621:	mov    WORD PTR [eax-0x2b5ad3d2],gs
  40c627:	jb     0x40c616
  40c629:	mov    ds:0xadee349e,al
  40c62e:	fnstenv [ebp-0x11]
  40c631:	(bad)  
  40c632:	icebp  
  40c633:	add    eax,ebp
  40c635:	lea    ebp,[esi]
  40c637:	mov    ebp,0x36d6965d
  40c63c:	cwde   
  40c63d:	sbb    edx,esi
  40c63f:	out    dx,al
  40c640:	sbb    cl,BYTE PTR [eax-0x17514ebf]
  40c646:	lds    esi,FWORD PTR [ebp+0x38]
  40c649:	rcl    BYTE PTR [ebx+0x43],0x97
  40c64d:	xchg   esi,eax
  40c64e:	xchg   ebx,eax
  40c64f:	cwde   
  40c650:	sti    
  40c651:	ret    0xef70
  40c654:	leave  
  40c655:	jmp    0x40c60c
  40c657:	sti    
  40c658:	sbb    DWORD PTR ds:0xf8a2d334,ecx
  40c65e:	and    eax,0x955026d4
  40c663:	outs   dx,DWORD PTR ds:[esi]
  40c664:	in     al,dx
  40c665:	arpl   WORD PTR [eax+0x5dc86a02],di
  40c66b:	add    BYTE PTR [ecx+0x7bd3d1ff],dl
  40c671:	dec    eax
  40c672:	jge    0x40c66f
  40c674:	and    BYTE PTR [edx-0x58],dh
  40c677:	(bad)  
  40c678:	dec    ecx
  40c679:	mov    eax,DWORD PTR [ebp-0x1c]
  40c67c:	imul   eax,ecx
  40c67f:	add    esp,eax
  40c681:	xchg   edx,eax
  40c682:	push   eax
  40c683:	xor    ebx,ebx
  40c685:	mov    edx,esp
  40c687:	dec    edx
  40c688:	inc    ebx
  40c689:	add    ebx,DWORD PTR [edx+ebx*1]
  40c68c:	dec    ebx
  40c68d:	xor    edx,edx
  40c68f:	add    DWORD PTR [ebp-0xc],ebx
  40c692:	pop    ebx
  40c693:	mov    eax,DWORD PTR [ebp-0xc]
  40c696:	pop    edi
  40c697:	pop    esi
  40c698:	pop    ebx
  40c699:	leave  
  40c69a:	ret    0x10
